Released IB*2*623 SEQ #599
Extracted from mail message
**KIDS**:IB*2.0*623^

**INSTALL NAME**
IB*2.0*623
"BLD",10997,0)
IB*2.0*623^INTEGRATED BILLING^0^3191114^y
"BLD",10997,1,0)
^^1^1^3190523^
"BLD",10997,1,1,0)
IB TAS Build 7/8/9 Port of 837 transaction to TAS Core platform
"BLD",10997,4,0)
^9.64PA^399^6
"BLD",10997,4,36,0)
36
"BLD",10997,4,36,2,0)
^9.641^36.017^1
"BLD",10997,4,36,2,36.017,0)
277EDI ID NUMBER  (sub-file)
"BLD",10997,4,36,2,36.017,1,0)
^9.6411^.03^1
"BLD",10997,4,36,2,36.017,1,.03,0)
277EDI TYPE
"BLD",10997,4,36,222)
y^y^p^^^^n^^n
"BLD",10997,4,36,224)

"BLD",10997,4,350.9,0)
350.9
"BLD",10997,4,350.9,2,0)
^9.641^350.9^1
"BLD",10997,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",10997,4,350.9,2,350.9,1,0)
^9.6411^8.21^1
"BLD",10997,4,350.9,2,350.9,1,8.21,0)
837 FHIR ENABLED?
"BLD",10997,4,350.9,222)
y^n^p^^^^n^^n
"BLD",10997,4,350.9,224)

"BLD",10997,4,364,0)
364
"BLD",10997,4,364,2,0)
^9.641^364^1
"BLD",10997,4,364,2,364,0)
EDI TRANSMIT BILL  (File-top level)
"BLD",10997,4,364,2,364,1,0)
^9.6411^.1^2
"BLD",10997,4,364,2,364,1,.09,0)
837 FHIR TRANS REQUEST
"BLD",10997,4,364,2,364,1,.1,0)
RESUBMISSION
"BLD",10997,4,364,222)
y^n^p^^^^n^^n
"BLD",10997,4,364,224)

"BLD",10997,4,364.6,0)
364.6
"BLD",10997,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",10997,4,364.6,224)
I $$INCLUDE^IBY623PR(6,Y)
"BLD",10997,4,364.7,0)
364.7
"BLD",10997,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",10997,4,364.7,224)
I $$INCLUDE^IBY623PR(7,Y) 
"BLD",10997,4,399,0)
399
"BLD",10997,4,399,2,0)
^9.641^399^1
"BLD",10997,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",10997,4,399,2,399,1,0)
^9.6411^23^1
"BLD",10997,4,399,2,399,1,23,0)
IS DUPLICATE?
"BLD",10997,4,399,222)
y^n^p^^^^n^^n
"BLD",10997,4,399,224)

"BLD",10997,4,"APDD",36,36.017)

"BLD",10997,4,"APDD",36,36.017,.03)

"BLD",10997,4,"APDD",350.9,350.9)

"BLD",10997,4,"APDD",350.9,350.9,8.21)

"BLD",10997,4,"APDD",364,364)

"BLD",10997,4,"APDD",364,364,.09)

"BLD",10997,4,"APDD",364,364,.1)

"BLD",10997,4,"APDD",399,399)

"BLD",10997,4,"APDD",399,399,23)

"BLD",10997,4,"B",36,36)

"BLD",10997,4,"B",350.9,350.9)

"BLD",10997,4,"B",364,364)

"BLD",10997,4,"B",364.6,364.6)

"BLD",10997,4,"B",364.7,364.7)

"BLD",10997,4,"B",399,399)

"BLD",10997,6)
22^
"BLD",10997,6.3)
70
"BLD",10997,"ABPKG")
n
"BLD",10997,"INI")
EN^IBY623PR
"BLD",10997,"INID")
^n^n
"BLD",10997,"INIT")
EN^IBY623PO
"BLD",10997,"KRN",0)
^9.67PA^779.2^20
"BLD",10997,"KRN",.4,0)
.4
"BLD",10997,"KRN",.401,0)
.401
"BLD",10997,"KRN",.402,0)
.402
"BLD",10997,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",10997,"KRN",.402,"NM",1,0)
IB SCREEN6    FILE #399^399^0
"BLD",10997,"KRN",.402,"NM",2,0)
IB SCREEN7    FILE #399^399^0
"BLD",10997,"KRN",.402,"NM","B","IB SCREEN6    FILE #399",1)

"BLD",10997,"KRN",.402,"NM","B","IB SCREEN7    FILE #399",2)

"BLD",10997,"KRN",.403,0)
.403
"BLD",10997,"KRN",.5,0)
.5
"BLD",10997,"KRN",.84,0)
.84
"BLD",10997,"KRN",3.6,0)
3.6
"BLD",10997,"KRN",3.8,0)
3.8
"BLD",10997,"KRN",9.2,0)
9.2
"BLD",10997,"KRN",9.8,0)
9.8
"BLD",10997,"KRN",9.8,"NM",0)
^9.68A^63^34
"BLD",10997,"KRN",9.8,"NM",15,0)
IBCCC2^^0^B151138395
"BLD",10997,"KRN",9.8,"NM",16,0)
IBCB2^^0^B55241475
"BLD",10997,"KRN",9.8,"NM",17,0)
IBCSCH2^^0^B81743485
"BLD",10997,"KRN",9.8,"NM",18,0)
IBJPS^^0^B7758278
"BLD",10997,"KRN",9.8,"NM",19,0)
IBJPS2^^0^B62122372
"BLD",10997,"KRN",9.8,"NM",26,0)
IBCSCH^^0^B53996574
"BLD",10997,"KRN",9.8,"NM",27,0)
IBCB1^^0^B75444272
"BLD",10997,"KRN",9.8,"NM",28,0)
IBCBB2^^0^B59608888
"BLD",10997,"KRN",9.8,"NM",32,0)
IBCBB1^^0^B132843227
"BLD",10997,"KRN",9.8,"NM",33,0)
IBCSC6^^0^B15643849
"BLD",10997,"KRN",9.8,"NM",34,0)
IBCSC7^^0^B7195789
"BLD",10997,"KRN",9.8,"NM",41,0)
IBTASHLT^^0^B716320
"BLD",10997,"KRN",9.8,"NM",42,0)
IBCBB^^0^B105632554
"BLD",10997,"KRN",9.8,"NM",43,0)
IBCF23A^^0^B52870803
"BLD",10997,"KRN",9.8,"NM",44,0)
IBCE^^0^B25961337
"BLD",10997,"KRN",9.8,"NM",45,0)
IBCE837^^0^B93949653
"BLD",10997,"KRN",9.8,"NM",46,0)
IBCE837A^^0^B55539011
"BLD",10997,"KRN",9.8,"NM",47,0)
IBCE837H^^0^B24646452
"BLD",10997,"KRN",9.8,"NM",48,0)
IBCE837I^^0^B25760500
"BLD",10997,"KRN",9.8,"NM",49,0)
IBCE837K^^0^B10284174
"BLD",10997,"KRN",9.8,"NM",50,0)
IBCECSA^^0^B69575708
"BLD",10997,"KRN",9.8,"NM",51,0)
IBCECSA1^^0^B49959476
"BLD",10997,"KRN",9.8,"NM",52,0)
IBCEF11^^0^B98194583
"BLD",10997,"KRN",9.8,"NM",53,0)
IBCEF22^^0^B109118409
"BLD",10997,"KRN",9.8,"NM",54,0)
IBCEM03^^0^B48666797
"BLD",10997,"KRN",9.8,"NM",55,0)
IBCEFP^^0^B119401920
"BLD",10997,"KRN",9.8,"NM",56,0)
IBCEF72^^0^B64748547
"BLD",10997,"KRN",9.8,"NM",57,0)
IBCEPTC^^0^B95452309
"BLD",10997,"KRN",9.8,"NM",58,0)
IBCERP7^^0^B40941379
"BLD",10997,"KRN",9.8,"NM",59,0)
IBCESRV^^0^B71687947
"BLD",10997,"KRN",9.8,"NM",60,0)
IBCEST^^0^B133235961
"BLD",10997,"KRN",9.8,"NM",61,0)
IBCEU7^^0^B38663293
"BLD",10997,"KRN",9.8,"NM",62,0)
IBCEXTRP^^0^B53771713
"BLD",10997,"KRN",9.8,"NM",63,0)
IBCE837L^^0^B142355439
"BLD",10997,"KRN",9.8,"NM","B","IBCB1",27)

"BLD",10997,"KRN",9.8,"NM","B","IBCB2",16)

"BLD",10997,"KRN",9.8,"NM","B","IBCBB",42)

"BLD",10997,"KRN",9.8,"NM","B","IBCBB1",32)

"BLD",10997,"KRN",9.8,"NM","B","IBCBB2",28)

"BLD",10997,"KRN",9.8,"NM","B","IBCCC2",15)

"BLD",10997,"KRN",9.8,"NM","B","IBCE",44)

"BLD",10997,"KRN",9.8,"NM","B","IBCE837",45)

"BLD",10997,"KRN",9.8,"NM","B","IBCE837A",46)

"BLD",10997,"KRN",9.8,"NM","B","IBCE837H",47)

"BLD",10997,"KRN",9.8,"NM","B","IBCE837I",48)

"BLD",10997,"KRN",9.8,"NM","B","IBCE837K",49)

"BLD",10997,"KRN",9.8,"NM","B","IBCE837L",63)

"BLD",10997,"KRN",9.8,"NM","B","IBCECSA",50)

"BLD",10997,"KRN",9.8,"NM","B","IBCECSA1",51)

"BLD",10997,"KRN",9.8,"NM","B","IBCEF11",52)

"BLD",10997,"KRN",9.8,"NM","B","IBCEF22",53)

"BLD",10997,"KRN",9.8,"NM","B","IBCEF72",56)

"BLD",10997,"KRN",9.8,"NM","B","IBCEFP",55)

"BLD",10997,"KRN",9.8,"NM","B","IBCEM03",54)

"BLD",10997,"KRN",9.8,"NM","B","IBCEPTC",57)

"BLD",10997,"KRN",9.8,"NM","B","IBCERP7",58)

"BLD",10997,"KRN",9.8,"NM","B","IBCESRV",59)

"BLD",10997,"KRN",9.8,"NM","B","IBCEST",60)

"BLD",10997,"KRN",9.8,"NM","B","IBCEU7",61)

"BLD",10997,"KRN",9.8,"NM","B","IBCEXTRP",62)

"BLD",10997,"KRN",9.8,"NM","B","IBCF23A",43)

"BLD",10997,"KRN",9.8,"NM","B","IBCSC6",33)

"BLD",10997,"KRN",9.8,"NM","B","IBCSC7",34)

"BLD",10997,"KRN",9.8,"NM","B","IBCSCH",26)

"BLD",10997,"KRN",9.8,"NM","B","IBCSCH2",17)

"BLD",10997,"KRN",9.8,"NM","B","IBJPS",18)

"BLD",10997,"KRN",9.8,"NM","B","IBJPS2",19)

"BLD",10997,"KRN",9.8,"NM","B","IBTASHLT",41)

"BLD",10997,"KRN",19,0)
19
"BLD",10997,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",10997,"KRN",19,"NM",1,0)
IBTAS EBILLING RPCS^^0
"BLD",10997,"KRN",19,"NM","B","IBTAS EBILLING RPCS",1)

"BLD",10997,"KRN",19.1,0)
19.1
"BLD",10997,"KRN",101,0)
101
"BLD",10997,"KRN",409.61,0)
409.61
"BLD",10997,"KRN",771,0)
771
"BLD",10997,"KRN",779.2,0)
779.2
"BLD",10997,"KRN",870,0)
870
"BLD",10997,"KRN",8989.51,0)
8989.51
"BLD",10997,"KRN",8989.52,0)
8989.52
"BLD",10997,"KRN",8994,0)
8994
"BLD",10997,"KRN",8994,"NM",0)
^9.68A^5^4
"BLD",10997,"KRN",8994,"NM",1,0)
IBTAS 837 EDICLAIMS^^0
"BLD",10997,"KRN",8994,"NM",2,0)
IBTAS 837 CLAIM DATA^^0
"BLD",10997,"KRN",8994,"NM",4,0)
IBTAS 837 ACK^^0
"BLD",10997,"KRN",8994,"NM",5,0)
IBTAS HEALTH^^0
"BLD",10997,"KRN",8994,"NM","B","IBTAS 837 ACK",4)

"BLD",10997,"KRN",8994,"NM","B","IBTAS 837 CLAIM DATA",2)

"BLD",10997,"KRN",8994,"NM","B","IBTAS 837 EDICLAIMS",1)

"BLD",10997,"KRN",8994,"NM","B","IBTAS HEALTH",5)

"BLD",10997,"KRN","B",.4,.4)

"BLD",10997,"KRN","B",.401,.401)

"BLD",10997,"KRN","B",.402,.402)

"BLD",10997,"KRN","B",.403,.403)

"BLD",10997,"KRN","B",.5,.5)

"BLD",10997,"KRN","B",.84,.84)

"BLD",10997,"KRN","B",3.6,3.6)

"BLD",10997,"KRN","B",3.8,3.8)

"BLD",10997,"KRN","B",9.2,9.2)

"BLD",10997,"KRN","B",9.8,9.8)

"BLD",10997,"KRN","B",19,19)

"BLD",10997,"KRN","B",19.1,19.1)

"BLD",10997,"KRN","B",101,101)

"BLD",10997,"KRN","B",409.61,409.61)

"BLD",10997,"KRN","B",771,771)

"BLD",10997,"KRN","B",779.2,779.2)

"BLD",10997,"KRN","B",870,870)

"BLD",10997,"KRN","B",8989.51,8989.51)

"BLD",10997,"KRN","B",8989.52,8989.52)

"BLD",10997,"KRN","B",8994,8994)

"BLD",10997,"QUES",0)
^9.62^^
"BLD",10997,"REQB",0)
^9.611^1^1
"BLD",10997,"REQB",1,0)
IB*2.0*608^1
"BLD",10997,"REQB","B","IB*2.0*608",1)

"DATA",364.6,1224,0)
8^N^^98^1^^0^2^2^Attending Prov Sec ID Qualifier (1)^0^1
"DATA",364.6,1973,0)
8^N^^52^1^^0^5^30^Attachment Control Number^^1
"DATA",364.6,1999,0)
8^N^^104.2^1^^0^8^2^Rendering Provider Primary ID Qualifier^0
"DATA",364.6,2254,0)
8^N^^32^1^1^0^2^1^Payer Responsibility Sequence^0^1^0
"DATA",364.7,68,0)
48^N^23^^^^N
"DATA",364.7,68,1)
S IBXDATA=$S($$ROIDTCK^IBCEU7(IBXIEN):"Y",1:"I")
"DATA",364.7,68,3,0)
^364.73^1^1^3190107^^^^
"DATA",364.7,68,3,1,0)
Converts release of information indicator from DHCP to X12 format.
"DATA",364.7,816,0)
840^N^5^^^^N
"DATA",364.7,816,1)
K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) N Z,IBZ K IBXDATA S (Z,IBZ)=0 F  S IBZ=$O(IBXSAVE("MIA45",IBZ)) Q:'IBZ  S Z=Z+1,IBXDATA(Z)=$E("PST",IBZ) I Z>1 D ID^IBCEF2(Z,"MIA2")
"DATA",364.7,816,3,0)
^364.73^4^4^3190327^^^^
"DATA",364.7,816,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,816,3,2,0)
possible for the data element in the IBXDATA array.  It relies on the
"DATA",364.7,816,3,3,0)
existence of the IBXSAVE("MIA45") array that was previously extracted.
"DATA",364.7,816,3,4,0)
For other than the first occurrence, the RECORD ID 'MIA2' must be output.
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^y^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36.017)
1
"FIA",36,36.017,.03)

"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,8.21)

"FIA",364)
EDI TRANSMIT BILL
"FIA",364,0)
^IBA(364,
"FIA",364,0,0)
364IP
"FIA",364,0,1)
y^n^p^^^^n^^n
"FIA",364,0,10)

"FIA",364,0,11)

"FIA",364,0,"RLRO")

"FIA",364,0,"VR")
2.0^IB
"FIA",364,364)
1
"FIA",364,364,.09)

"FIA",364,364,.1)

"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY623PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY623PR(7,Y) 
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,23)

"INI")
EN^IBY623PR
"INIT")
EN^IBY623PO
"IX",36,36,"AEDIX",0)
36^AEDIX^277STAT TRANSACTION PAYER STORAGE US129^MU^^R^IR^W^36.017^^^^^S
"IX",36,36,"AEDIX",.1,0)
^^2^2^3190709^^
"IX",36,36,"AEDIX",.1,1,0)
This cross reference allows for reporting of 277STAT updates to the EDI 
"IX",36,36,"AEDIX",.1,2,0)
number to determine the correct Payer ID.
"IX",36,36,"AEDIX",1)
S ^DIC(36,"AEDIX",X(1),DA(1),X(2),X(3))=X(4)
"IX",36,36,"AEDIX",1.4)
S X=(X(1)]""&(X(2)]"")&(X(3)]""))
"IX",36,36,"AEDIX",2)
Q
"IX",36,36,"AEDIX",11.1,0)
^.114IA^4^4
"IX",36,36,"AEDIX",11.1,1,0)
1^F^36.017^.02^10^^F
"IX",36,36,"AEDIX",11.1,2,0)
2^F^36.017^.01^30^^F
"IX",36,36,"AEDIX",11.1,3,0)
3^F^36.017^.03^2^^F
"IX",36,36,"AEDIX",11.1,3,3)

"IX",36,36,"AEDIX",11.1,4,0)
4^F^36.017^.04^30^^F
"IX",364,364,"AC",0)
364^AC^This cross reference is used for 837 FHIR EDI submissions^MU^^F^IR^I^364^^^^^S
"IX",364,364,"AC",.1,0)
^^1^1^3180618^
"IX",364,364,"AC",.1,1,0)
This cross reference is used for 837 FHIR EDI submissions.
"IX",364,364,"AC",1)
S ^IBA(364,"AC",X2(1),DA)=""
"IX",364,364,"AC",1.4)
I X'=1 K X
"IX",364,364,"AC",2)
K ^IBA(364,"AC",X1(1),DA)
"IX",364,364,"AC",2.4)

"IX",364,364,"AC",11.1,0)
^.114IA^1^1
"IX",364,364,"AC",11.1,1,0)
1^F^364^.09^^1^F
"IX",364,364,"AC","NOREINDEX")
0
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"C",0)
364.6^C^Field name lookup^R^^F^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"C",1)
S ^IBA(364.6,"C",$E(X,1,40),DA)=""
"IX",364.6,364.6,"C",2)
K ^IBA(364.6,"C",$E(X,1,40),DA)
"IX",364.6,364.6,"C",2.5)
K ^IBA(364.6,"C")
"IX",364.6,364.6,"C",11.1,0)
^.114IA^1^1
"IX",364.6,364.6,"C",11.1,1,0)
1^F^364.6^.1^40^1^F
"IX",364.6,364.6,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"KRN",.402,1511,-1)
0^1
"KRN",.402,1511,0)
IB SCREEN6^3190102.1352^@^399^^@^3180815
"KRN",.402,1511,"AR",399,833)
1^IBXS65
"KRN",.402,1511,"DIAB",4,0,399,1)
UB-04 TIMEFRAME OF BILL;"TIMEFRAME OF BILL"
"KRN",.402,1511,"DIAB",5,0,399,0)
UB-04 LOCATION OF CARE;"LOCATION OF CARE"
"KRN",.402,1511,"DIAB",7,0,399,0)
UB-04 BILL CLASSIFICATION;"BILL CLASSIFICATION"
"KRN",.402,1511,"DR",1,399)
S:IBDR20'["61" Y="@62";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@612";@611;S DIE("NO^")="";.24LOCATION OF CARE~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~;
"KRN",.402,1511,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@611";@612;K DIE("NO^");.26TIMEFRAME OF BILL~;
"KRN",.402,1511,"DR",1,399,2)
I '$$INPAT^IBCEF(DA)!($$FT^IBCEF(DA)'=3) S Y="@6121";@6121;.22;243;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Service Facility");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@614;.19;
"KRN",.402,1511,"DR",1,399,3)
S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@615";W !,*7,"Must be a printable national form type";
"KRN",.402,1511,"DR",1,399,4)
.19///^S X=$G(DIPA("FT1"));S Y="@614";@615;D FTPRV^IBCEU5(DA);@62;S:IBDR20'["62" Y="@63";155;S:X=0 Y=156;I '$$ROIDTCK^IBCEU7(DA) S Y="@621";157;@621;156;S:'$D(IBOX) Y="@63";153;@63;S:IBDR20'["63" Y="@64";151;152;@64;
"KRN",.402,1511,"DR",1,399,5)
S:IBDR20'["64" Y="@65";161;165;@65;S:IBDR20'["65" Y="@66";D RCD^IBCU1;42;202;S:'X Y="@657";203;@657;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@66";210;@66;@67;S:IBDR20'["67" Y="@68";S:'$D(^DGCR(399,DA,"I1")) Y="@672";218;@672;
"KRN",.402,1511,"DR",1,399,6)
S:'$D(^DGCR(399,DA,"I2")) Y="@673";219;@673;S:'$D(^DGCR(399,DA,"I3")) Y="@68";220;@68;K DIE("NO^");
"KRN",.402,1511,"DR",2,399.042)
.01;S IBMAED=1,DIE("NO^")="";.02;K IBMAED,DIE("NO^");.03;.04;.05;.09;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@658";.07;@658;I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) S Y="@659";.1;.12;
"KRN",.402,1511,"DR",2,399.042,1)
I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)'=4!'$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@659";D LINKCPT^IBCEU5(DA(1),DA);@659;
"KRN",.402,1511,"ROU")
^IBXS6
"KRN",.402,1511,"ROUOLD")
IBXS6
"KRN",.402,1512,-1)
0^2
"KRN",.402,1512,0)
IB SCREEN7^3190102.1351^@^399^^@^3190418
"KRN",.402,1512,"AR",399,833)
1^IBXS78
"KRN",.402,1512,"DIAB",1,1,399.043,0)
ALL
"KRN",.402,1512,"DIAB",4,0,399,1)
UB-04 TIMEFRAME OF BILL;"TIMEFRAME OF BILL"
"KRN",.402,1512,"DIAB",11,0,399,0)
UB-04 LOCATION OF CARE;"LOCATION OF CARE"
"KRN",.402,1512,"DIAB",13,0,399,0)
UB-04 BILL CLASSIFICATION;"BILL CLASSIFICATION"
"KRN",.402,1512,"DR",1,399)
S:IBDR20'["74" Y="@71";S:$D(IBOUT) Y="@999";43;@999;K IBOUT;@71;S:IBDR20'["71" Y="@72";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@712";@711;S DIE("NO^")="";.24LOCATION OF CARE~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~;
"KRN",.402,1512,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@711";@712;K DIE("NO^");.26TIMEFRAME OF BILL~;162;.22;243;
"KRN",.402,1512,"DR",1,399,2)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Service Facility");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@714;.19;S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);
"KRN",.402,1512,"DR",1,399,3)
I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@715";W !,*7,"Must be a printable national form type";.19///^S X=$G(DIPA("FT1"));S Y="@714";@715;D FTPRV^IBCEU5(DA);@72;
"KRN",.402,1512,"DR",1,399,4)
S:IBDR20'["72" Y="@73";155;S:X=0 Y=156;I '$$ROIDTCK^IBCEU7(DA) S Y="@721";157;@721;156;S:'$D(IBOX) Y="@73";153;@73;S:IBDR20'["73" Y="@75";151;152;@75;S:IBDR20'["75" Y="@76";D RCD^IBCU1;42;202;S:'X Y="@757";203;@757;
"KRN",.402,1512,"DR",1,399,5)
I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@76";210;@76;@77;S:IBDR20'["77" Y="@78";S:'$D(^DGCR(399,DA,"I1")) Y="@772";218;@772;S:'$D(^DGCR(399,DA,"I2")) Y="@773";219;@773;S:'$D(^DGCR(399,DA,"I3")) Y="@78";220;@78;K DIE("NO^");
"KRN",.402,1512,"DR",2,399.042)
.01;S IBMAED=1,DIE("NO^")="";.02;K IBMAED,DIE("NO^");.03;.04;.05;.09;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@758";.07//^S X=$$DEFDIV^IBCU7(DA(1));@758;
"KRN",.402,1512,"DR",2,399.042,1)
I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) W !," AUTO ADDED CHARGE - NO CHANGE TO TYPE/COMPONENT" S Y="@759";.1;.12;I $S($P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=3:0,1:$P($G(^(0)),U,10)'=4)!$P($G(^(0)),U,8) S Y="@759";
"KRN",.402,1512,"DR",2,399.042,2)
I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=4 S Y="@7581";S DGRVRCAL=1;D LINKRX^IBCEU5(DA(1),DA);.15;S Y="@759";@7581;D LINKCPT^IBCEU5(DA(1),DA);@759;
"KRN",.402,1512,"DR",2,399.043)
.01
"KRN",.402,1512,"ROU")
^IBXS7
"KRN",.402,1512,"ROUOLD")
IBXS7
"KRN",19,2922530,-1)
0^1
"KRN",19,2922530,0)
IBTAS EBILLING RPCS^IBTAS EBILLING RPCS^^B^^^^^^^^INTEGRATED BILLING
"KRN",19,2922530,1,0)
^19.06^2^2^3190716^^^^
"KRN",19,2922530,1,1,0)
This option is required to give access to the RPCs used by Integrated 
"KRN",19,2922530,1,2,0)
Billing Transaction Application Suite for the eBilling product.
"KRN",19,2922530,99.1)
64848,29723
"KRN",19,2922530,"RPC",0)
^19.05P^5^4
"KRN",19,2922530,"RPC",1,0)
IBTAS 837 CLAIM DATA
"KRN",19,2922530,"RPC",3,0)
IBTAS 837 EDICLAIMS
"KRN",19,2922530,"RPC",4,0)
IBTAS 837 ACK
"KRN",19,2922530,"RPC",5,0)
IBTAS HEALTH
"KRN",19,2922530,"U")
IBTAS EBILLING RPCS
"KRN",8994,4601,-1)
0^2
"KRN",8994,4601,0)
IBTAS 837 CLAIM DATA^GET^IBCE837H^2^R^0^^^1^^1
"KRN",8994,4601,2,0)
^8994.02A^1^1
"KRN",8994,4601,2,1,0)
ARG^2
"KRN",8994,4601,2,"B","ARG",1)

"KRN",8994,4603,-1)
0^1
"KRN",8994,4603,0)
IBTAS 837 EDICLAIMS^GET^IBCE837I^2^R^0^^^1^^1
"KRN",8994,4603,2,0)
^8994.02A^1^1
"KRN",8994,4603,2,1,0)
ARG^2
"KRN",8994,4603,2,"B","ARG",1)

"KRN",8994,4636,-1)
0^4
"KRN",8994,4636,0)
IBTAS 837 ACK^GET^IBCE837K^2^R^0^^^1^^1
"KRN",8994,4636,2,0)
^8994.02A^1^1
"KRN",8994,4636,2,1,0)
ARG^2^^1^
"KRN",8994,4636,2,"B","ARG",1)

"KRN",8994,4987,-1)
0^5
"KRN",8994,4987,0)
IBTAS HEALTH^HEALTH^IBTASHLT^2^P^0^^^1^^1
"KRN",8994,4987,1,0)
^8994.01^7^7^3190610^^^^
"KRN",8994,4987,1,1,0)
Developer tool only
"KRN",8994,4987,1,2,0)
No paramters required.
"KRN",8994,4987,1,3,0)
Return example:
"KRN",8994,4987,1,4,0)
{"STATION": "CHEYENNE VAMC",                
"KRN",8994,4987,1,5,0)
"HEALTH": "OK",
"KRN",8994,4987,1,6,0)
"STATION NUMBER": "442"            
"KRN",8994,4987,1,7,0)
}
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",16,8994)
8994;16;1;;;;RPCE1^XPDIA1;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
623^3191114^520824635
"PKG",230,22,1,"PAH",1,1,0)
^^1^1^3191114
"PKG",230,22,1,"PAH",1,1,1,0)
IB TAS Build 7/8/9 Port of 837 transaction to TAS Core platform
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
36
"RTN","IBCB1")
0^27^B75444272^B70254714
"RTN","IBCB1",1,0)
IBCB1 ;ALB/AAS - Process bill after enter/edited ;2-NOV-89
"RTN","IBCB1",2,0)
 ;;2.0;INTEGRATED BILLING;**70,106,51,137,161,182,155,327,432,592,623**;21-MAR-94;Build 70
"RTN","IBCB1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCB1",4,0)
 ;
"RTN","IBCB1",5,0)
 ;MAP TO DGCRB1
"RTN","IBCB1",6,0)
 ;
"RTN","IBCB1",7,0)
 ;IBQUIT = Flag to stop processing
"RTN","IBCB1",8,0)
 ;IBVIEW = Flag for Bill has been viewed
"RTN","IBCB1",9,0)
 ;IBDISP = Flag for Bill entering display been viewed.
"RTN","IBCB1",10,0)
 ;
"RTN","IBCB1",11,0)
 K ^UTILITY($J) I $D(IBAC),IBAC>1 G @IBAC
"RTN","IBCB1",12,0)
1 ;complete bill
"RTN","IBCB1",13,0)
 D END,EDITS^IBCB2 G:IBQUIT END
"RTN","IBCB1",14,0)
 ;
"RTN","IBCB1",15,0)
 I '$$IICM^IBCB2(IBIFN) G END ; Ingenix ClaimsManager
"RTN","IBCB1",16,0)
 I '$$IIQMED^IBCB2(IBIFN) G END ; DSS QuadraMed Claims Scrubber
"RTN","IBCB1",17,0)
 ;
"RTN","IBCB1",18,0)
3 ;authorize bill/request MRA
"RTN","IBCB1",19,0)
 I '$D(^XUSEC("IB AUTHORIZE",DUZ))!('$D(IBIFN)) W !!,"You do not hold the Authorize Key.",! G END
"RTN","IBCB1",20,0)
 I '$P($G(^IBE(350.9,1,1)),"^",23),DUZ=$P(^DGCR(399,IBIFN,"S"),"^",2) W !!,"Entering user can not authorize.",! G END
"RTN","IBCB1",21,0)
 I $P(^DGCR(399,IBIFN,"S"),"^",9) W !,"Already Approved, Can't change" G END
"RTN","IBCB1",22,0)
 D:'$G(IBAC)!($G(IBAC)>1) EDITS^IBCB2 G:IBQUIT END
"RTN","IBCB1",23,0)
 ;
"RTN","IBCB1",24,0)
 I $G(IBAC)'=1,'$$IICM^IBCB2(IBIFN) G END ; Ingenix ClaimsManager
"RTN","IBCB1",25,0)
 I $G(IBAC)'=1,'$$IIQMED^IBCB2(IBIFN) G END ; DSS QuadraMed Claims Scrubber
"RTN","IBCB1",26,0)
 ;
"RTN","IBCB1",27,0)
AUTH S IBMRA=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCB1",28,0)
 S IBEND=0
"RTN","IBCB1",29,0)
 I IBMRA["R" D AUTH^IBCB11 G:IBEND END ;MRA normally required, but MEDIGAP ins co
"RTN","IBCB1",30,0)
 ;                         doesn't want/need it or MRA parameter off
"RTN","IBCB1",31,0)
 ;
"RTN","IBCB1",32,0)
 W !!,"THIS BILL WILL "_$P("NOT ^",U,$$TXMT^IBCEF4(IBIFN)+1)_"BE TRANSMITTED ELECTRONICALLY"
"RTN","IBCB1",33,0)
 W !!,"WANT TO ",$S('IBMRA:"AUTHORIZE BILL",1:"REQUEST AN MRA")," AT THIS TIME" S %=2 D YN^DICN G:%=-1!(%=2) END
"RTN","IBCB1",34,0)
 I '% W !?4,"YES - If finished entering bill information and to allow bill to be printed or transmitted",!?4,"No - To take no action" G AUTH
"RTN","IBCB1",35,0)
 S (DIC,DIE)=399,IBYY=$S('IBMRA:"@90",1:"@901"),DA=IBIFN,DR="[IB STATUS]" D ^DIE K DIC,DIE,IBYY D:$D(IBX3) DISAP^IBCBULL
"RTN","IBCB1",36,0)
 I $S('IBMRA:'$P(^DGCR(399,IBIFN,"S"),"^",9),1:'$P($G(^DGCR(399,IBIFN,"TX")),U,6)) G END
"RTN","IBCB1",37,0)
 ;
"RTN","IBCB1",38,0)
 ; Update the review status for all EOB's on file
"RTN","IBCB1",39,0)
 D STAT^IBCEMU2(IBIFN,3)     ; Accepted - Complete EOB
"RTN","IBCB1",40,0)
 ;
"RTN","IBCB1",41,0)
 D AUTOCK^IBCEU2(IBIFN) ; Checks for need to add any codes to bill based on information already on bill, specifically for EDI purposes
"RTN","IBCB1",42,0)
 S IBTXSTAT=$$TXMT^IBCEF4(IBIFN,,1)  ;Determine transmit, whether live/test
"RTN","IBCB1",43,0)
 I IBTXSTAT D  I IBMRA D CTCOPY^IBCCCB(IBIFN,1) G END
"RTN","IBCB1",44,0)
 .W !,"  Adding "
"RTN","IBCB1",45,0)
 .W:+IBTXSTAT=2 "test " W "bill to BILL TRANSMISSION File"_$S('IBMRA:"",1:" for MRA submission")_".",!
"RTN","IBCB1",46,0)
 .W:+IBTXSTAT=1&IBMRA "  Bill is no longer editable unless returned in error from Medicare."
"RTN","IBCB1",47,0)
 .S Y=$$ADDTBILL(IBIFN,+IBTXSTAT)
"RTN","IBCB1",48,0)
 .W ! W:'$P(Y,U,3) *7 W $S($P(Y,U,3):"  Bill will be submitted electronically",1:"  Error loading into transmit file - bill can not be transmitted.")
"RTN","IBCB1",49,0)
 .;JWS;IB*2.0*623v24;begin
"RTN","IBCB1",50,0)
 .N IB364
"RTN","IBCB1",51,0)
 .S IB364=$P(Y,U)
"RTN","IBCB1",52,0)
 .I $$GET1^DIQ(399,IBIFN_",",23,"I") D
"RTN","IBCB1",53,0)
 .. D SETSUB^IBCE837I(IB364,1)
"RTN","IBCB1",54,0)
 .. N DA,DR,DIE,X,Y
"RTN","IBCB1",55,0)
 .. S DA=IBIFN,DIE="^DGCR(399,",DR="23////0" D ^DIE
"RTN","IBCB1",56,0)
 .. Q
"RTN","IBCB1",57,0)
 .;JWS;IB*2.0*623v24;end
"RTN","IBCB1",58,0)
 ;
"RTN","IBCB1",59,0)
 W !,"Passing completed Bill to Accounts Receivable.  Bill is no longer editable."
"RTN","IBCB1",60,0)
 D ARPASS(IBIFN,1)
"RTN","IBCB1",61,0)
 G:'$G(PRCASV("OKAY")) END
"RTN","IBCB1",62,0)
 W !,"Completed Bill Successfully sent to Accounts Receivable." D FIND^IBOHCK(DFN,IBIFN)
"RTN","IBCB1",63,0)
 ;
"RTN","IBCB1",64,0)
 ; Check to see if any unreviewed status messages or EOBs on file and
"RTN","IBCB1",65,0)
 ; what to do about them
"RTN","IBCB1",66,0)
 N IBTXBARR
"RTN","IBCB1",67,0)
 S IBRESUB=$$RESUB^IBCECSA4($S($G(IBCNCOPY):$P($G(^DGCR(399,IBIFN,0)),U,15),1:IBIFN),+IBTXSTAT,"E",.IBTXBARR)
"RTN","IBCB1",68,0)
 I IBRESUB=2 D         ; update review statuses to be 'review complete'
"RTN","IBCB1",69,0)
 . N IBDA S IBDA=0
"RTN","IBCB1",70,0)
 . F  S IBDA=$O(IBTXBARR(IBDA)) Q:'IBDA  D UPDEDI^IBCEM(IBDA,$S($G(IBCNCOPY):"R",1:"E"))
"RTN","IBCB1",71,0)
 . Q
"RTN","IBCB1",72,0)
 ;
"RTN","IBCB1",73,0)
 K IBTXPRT
"RTN","IBCB1",74,0)
 ;
"RTN","IBCB1",75,0)
4 ;generate/print bill
"RTN","IBCB1",76,0)
 G:'$D(IBIFN) END
"RTN","IBCB1",77,0)
 S:'$D(IBMRA) IBMRA=+$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCB1",78,0)
 I 'IBMRA,'$P(^DGCR(399,IBIFN,"S"),"^",9) W !!,*7,"Not Authorized, Can Not Print!" G END
"RTN","IBCB1",79,0)
 I IBMRA,'$P(^DGCR(399,IBIFN,"TX"),"^",6) W !!,*7,"Not Ready For MRA Submission, Can Not Print!" G END
"RTN","IBCB1",80,0)
 S IBTXSTAT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCB1",81,0)
 I IBMRA,$$NEEDMRA^IBEFUNC(IBIFN)'["R" W !!,*7,"MRA Submission not yet confirmed by Austin, Can Not Print!" Q:$S('IBTXSTAT:1,1:"XP"'[$P($G(^IBA(364,+$$LAST364^IBCEF4(IBIFN),0)),U,3))
"RTN","IBCB1",82,0)
 I +IBTXSTAT,$D(^IBA(364,"ABDT",IBIFN)) S IBTXOK="" D  I 'IBTXOK S %=2 G GENTX
"RTN","IBCB1",83,0)
 . N IBX,IBTST
"RTN","IBCB1",84,0)
 . S IBX=+$$LAST364^IBCEF4(IBIFN),IBTST=""
"RTN","IBCB1",85,0)
 . I $$TEST^IBCEF4(IBIFN) S (IBTXOK,IBTST)=1
"RTN","IBCB1",86,0)
 . I "XP"[$P($G(^IBA(364,IBX,0)),U,3) D:'IBTST  Q
"RTN","IBCB1",87,0)
 .. ;JWS;IB*2.0*592
"RTN","IBCB1",88,0)
 .. I $$FT^IBCEF(IBIFN)=7 W !!,*7,"This Bill Can Not Be Printed"
"RTN","IBCB1",89,0)
 .. E  W !!,*7,"This Bill Can Not Be Printed Until Transmit Confirmed"
"RTN","IBCB1",90,0)
 .. W:IBMRA " (to request an MRA)" D:'$D(IBVIEW) VIEW^IBCB2
"RTN","IBCB1",91,0)
 . W !!,"This Bill Has Already Been Transmitted" W:IBMRA " (to request an MRA)"
"RTN","IBCB1",92,0)
 . S DIR("B")="Y",DIR("A")="WANT TO PRINT IT ANYWAY",DIR(0)="Y" D ^DIR K DIR Q:$D(DTOUT)!$D(DUOUT)!'Y  S IBTXOK=1
"RTN","IBCB1",93,0)
 D DISP^IBCB2
"RTN","IBCB1",94,0)
 S:'$D(IBQUIT) IBQUIT=0
"RTN","IBCB1",95,0)
 D:'$D(IBVIEW) VIEW^IBCB2 G:IBQUIT END
"RTN","IBCB1",96,0)
 S IBPNT=$P(^DGCR(399,IBIFN,"S"),"^",12)
"RTN","IBCB1",97,0)
GEN I $$TEST^IBCEF4(IBIFN) W !!,"THIS BILL IS BEING USED AS A TRANSMISSION TEST BILL"
"RTN","IBCB1",98,0)
 W !!,"WANT TO ",$S(IBPNT]"":"RE-",1:""),"PRINT BILL AT THIS TIME" S %=2 D YN^DICN I %=-1 D:+$G(IBAC)=1 END,CTCOPY^IBCCCB(IBIFN) G END
"RTN","IBCB1",99,0)
 I '% W !?4,"YES - to print the bill now",!?4,"NO - To take no action" G GEN
"RTN","IBCB1",100,0)
 ;JWS;IB*2.0*592
"RTN","IBCB1",101,0)
 I %=1,$$FT^IBCEF(IBIFN)=7 W !!,*7,"Dental Claims can not be printed." G END
"RTN","IBCB1",102,0)
GENTX I %'=1 D:+$G(IBAC)=1 END,CTCOPY^IBCCCB(IBIFN) G END
"RTN","IBCB1",103,0)
 ;
"RTN","IBCB1",104,0)
 ; Bill has never been printed.  First time print.
"RTN","IBCB1",105,0)
 I 'IBPNT D  G END
"RTN","IBCB1",106,0)
 . I $D(IBTXPRT) D TXPRTS
"RTN","IBCB1",107,0)
 . D EN1^IBCF
"RTN","IBCB1",108,0)
 . I $D(IBTXPRT) D TXPRT
"RTN","IBCB1",109,0)
 . ;D MRA^IBCEMU1(IBIFN)       ; Printing the MRA ;WCJ;IB*2.0*432;MRA may have a diffierent claim number if this is tertiary
"RTN","IBCB1",110,0)
 . D MRA^IBCEMU1($$GETMRACL^IBCAPR(IBIFN))  ;WCJ;IB*2.0*432;see above
"RTN","IBCB1",111,0)
 . I $G(IBMRANOT) D EOBALL^IBCAPR2(IBIFN)  ;WCJ;IB*2.0*432 print all the EOBs (ask device once)
"RTN","IBCB1",112,0)
 . I +$G(IBAC)=1 D END,CTCOPY^IBCCCB(IBIFN)
"RTN","IBCB1",113,0)
 . Q
"RTN","IBCB1",114,0)
 ;
"RTN","IBCB1",115,0)
 ; Below section is for re-prints
"RTN","IBCB1",116,0)
RPNT G:$$NEEDMRA^IBEFUNC(IBIFN) END
"RTN","IBCB1",117,0)
 R !!,"(2)nd Notice, (3)rd Notice, (C)opy or (O)riginal: C// ",IBPNT:DTIME S:IBPNT="" IBPNT="C" G:IBPNT["^" END
"RTN","IBCB1",118,0)
 S IBPNT=$E(IBPNT,1) I "23oOcC"'[IBPNT W !?5,"Enter 'O' to reprint the original bill or",!?5,"Enter 'C' to reprint the bill as a duplicate copy or",!?5,"Enter '2' or '3' to print 2nd or 3rd follow-up notices." S IBPNT=1 G RPNT
"RTN","IBCB1",119,0)
 W "  (",$S("cC"[IBPNT:"COPY","oO"[IBPNT:"ORIGINAL",IBPNT=2:"2nd NOTICE",IBPNT=3:"3rd NOTICE",1:""),")"
"RTN","IBCB1",120,0)
 I $D(IBTXPRT) D
"RTN","IBCB1",121,0)
 . D TXPRTS
"RTN","IBCB1",122,0)
 . I "oOcC"[IBPNT S IBRESUB=$$RESUB^IBCECSA4(IBIFN,1,"P")
"RTN","IBCB1",123,0)
 S IBPNT=$S("oO"[IBPNT:1,"cC"[IBPNT:0,1:IBPNT)
"RTN","IBCB1",124,0)
 D EN1X^IBCF D:$D(IBTXPRT) TXPRT
"RTN","IBCB1",125,0)
 D MRA^IBCEMU1(IBIFN)       ; Printing the MRA
"RTN","IBCB1",126,0)
 ;
"RTN","IBCB1",127,0)
 ;
"RTN","IBCB1",128,0)
END K IBER,IBEND D END^IBCBB1 K IBQUIT,IBVIEW,IBDISP,IBST,IB,PRCAERCD,PRCAERR,PRCASVC,PRCAT,DGRA2,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,PRCAORA,IBX3,DGBILLBS,DGII,DGVISCNT,DGFIL,DGTE,IBTXOK,IBTXSTAT,IBMRA,IBNOFIX
"RTN","IBCB1",129,0)
 K %DT,DIC,DIE,I,J,X,Y,Y1,Y2,IBER,IBDFN,IBDSDT,IBJ,IBNDI1,IBZZ,VA,IBMA,IBXDT,DI,PRCAPAYR,DGBS,DGCNT,DGDA,DGPAG,DGREVC,DGRV,DGTEXT,DGTOTPAG,IBOPV,DGLCNT,DGTEXT1,DGRSPAC,DGSM,IBPNT,DGINPT,DGLL,IBCPTN,IBFL
"RTN","IBCB1",130,0)
 K IBRESUB,IBOPV1,IBOPV2,IBCHG,DGBIL1,DGU,DDH,IBA1,IBINS,IBPROC,PRCARI K:'$D(PRCASV("NOTICE")) PRCASV
"RTN","IBCB1",131,0)
 K ^TMP("IBXDATA",$J),^TMP("IBXEDIT",$J)
"RTN","IBCB1",132,0)
 K IBCISNT,IBCISTAT,IBCIERR   ; remove ClaimsManager variables
"RTN","IBCB1",133,0)
 Q
"RTN","IBCB1",134,0)
 ;
"RTN","IBCB1",135,0)
TX1(IBX,RESUB) ; Transmit a single bill from file 364 entry # IBX
"RTN","IBCB1",136,0)
 ; RESUB = flag (1 = resubmitting a bill, 0 = submitting bill 1st time)
"RTN","IBCB1",137,0)
 ; Returns 1 if successfully extracted to mailman queue for transmission,
"RTN","IBCB1",138,0)
 ;         0 if extract not successful
"RTN","IBCB1",139,0)
 N IBTXOK,IBVVSAVE
"RTN","IBCB1",140,0)
 K ^TMP("IBRESUBMIT",$J),^TMP("IBONE",$J)
"RTN","IBCB1",141,0)
 S IBVVSAVE("IBX")=IBX,^TMP("IBONE",$J)=+$G(RESUB),^($J,IBX)=""
"RTN","IBCB1",142,0)
 D ONE^IBCE837
"RTN","IBCB1",143,0)
 S IBX=IBVVSAVE("IBX")
"RTN","IBCB1",144,0)
 I $P($G(^IBA(364,IBX,0)),U,3)="P" S IBTXOK=1
"RTN","IBCB1",145,0)
 K ^TMP("IBONE",$J)
"RTN","IBCB1",146,0)
 Q $G(IBTXOK)
"RTN","IBCB1",147,0)
 ;
"RTN","IBCB1",148,0)
ARONLY(IBIFN) ; Pass bill to A/R, but that's all
"RTN","IBCB1",149,0)
 D ARPASS(IBIFN,0)
"RTN","IBCB1",150,0)
 Q
"RTN","IBCB1",151,0)
 ;
"RTN","IBCB1",152,0)
ARPASS(IBIFN,UPDOK) ;Pass bill to A/R as NEW BILL
"RTN","IBCB1",153,0)
 ;IBIFN = bill entry #
"RTN","IBCB1",154,0)
 ;UPDOK = flag 1: if error going to A/R, allow interactive edit
"RTN","IBCB1",155,0)
 ;             0: send bulletin to IB EDI for error going to A/R
"RTN","IBCB1",156,0)
 Q:+$$STA^PRCAFN(+IBIFN)'=201  ;Must not have been sent previously
"RTN","IBCB1",157,0)
 D GVAR^IBCBB
"RTN","IBCB1",158,0)
 ;Can't be an ins co that won't reimburse
"RTN","IBCB1",159,0)
 Q:$S($P($G(^DGCR(399,IBIFN,0)),U,11)="i":'IBNDMP,1:0)
"RTN","IBCB1",160,0)
 D ARRAY^IBCBB1,^PRCASVC6
"RTN","IBCB1",161,0)
 D REL^PRCASVC:$G(PRCASV("OKAY"))
"RTN","IBCB1",162,0)
 I '$G(PRCASV("OKAY")) D
"RTN","IBCB1",163,0)
 . N IBQUIT,IBQUIT1
"RTN","IBCB1",164,0)
 . S IBQUIT=0
"RTN","IBCB1",165,0)
 . I $G(UPDOK) D  Q
"RTN","IBCB1",166,0)
 .. F  D  Q:IBQUIT
"RTN","IBCB1",167,0)
 ... D DSPARERR^IBCB2("")
"RTN","IBCB1",168,0)
 ... Q:IBQUIT
"RTN","IBCB1",169,0)
 ... I $$ASKEDIT^IBCB2($G(IBAC)) D VIEW1^IBCB2 Q
"RTN","IBCB1",170,0)
 ... S IBQUIT=1
"RTN","IBCB1",171,0)
 . N XMSUB,XMY,XMTEXT,XMDUZ,IBT
"RTN","IBCB1",172,0)
 . S XMSUB="ERROR PASSING BILL TO A/R ON CONFIRMATION",XMTEXT="IBT(",XMY="G.IB EDI",XMDUZ=.5
"RTN","IBCB1",173,0)
 . S IBT(1)="A problem has been detected while trying to pass bill "_$P($G(^DGCR(399,IBIFN,0)),U)_" to"
"RTN","IBCB1",174,0)
 . S IBT(2)="Accounts Receivable when updating the bill's electronic confirmation."
"RTN","IBCB1",175,0)
 . S IBT(3)="Please use the option PASS BILL TO A/R to complete this process."
"RTN","IBCB1",176,0)
 . D ^XMD
"RTN","IBCB1",177,0)
 Q
"RTN","IBCB1",178,0)
 ;
"RTN","IBCB1",179,0)
ADDTBILL(IBIFN,TXST) ;Add new transmit bill rec to file 364 for bill IBIFN
"RTN","IBCB1",180,0)
 ;JWS;IB*2.0*623;add field .09 setting.
"RTN","IBCB1",181,0)
 ; TXST = test flag 1=live, 2=test
"RTN","IBCB1",182,0)
 N COB,DD,DO,DIC,DLAYGO,X
"RTN","IBCB1",183,0)
 S TXST=($G(TXST)/2\1),COB=$$COB^IBCEF(IBIFN)
"RTN","IBCB1",184,0)
 ;JWS;IB*2.0*623v24;force test claim status if not Production system
"RTN","IBCB1",185,0)
 I '$$PROD^XUPROD(1) S TXST=1
"RTN","IBCB1",186,0)
 S DIC(0)="L",DIC="^IBA(364,",DLAYGO=364,X=IBIFN,DIC("DR")=".03///X;.04///NOW;.07////"_TXST_";.08////"_COB_$S($$GET1^DIQ(350.9,"1,",8.21,"I")=1:";.09////1",1:"") D FILE^DICN
"RTN","IBCB1",187,0)
 Q Y
"RTN","IBCB1",188,0)
 ;
"RTN","IBCB1",189,0)
TXPRTS ; Save off last print date to see if bill was reprinted without queueing
"RTN","IBCB1",190,0)
 I '$$NEEDMRA^IBEFUNC(IBIFN) S IBTXPRT("PRT")=$P($G(^DGCR(399,IBIFN,"S")),U,14)
"RTN","IBCB1",191,0)
 Q
"RTN","IBCB1",192,0)
 ;
"RTN","IBCB1",193,0)
TXPRT ; Set variable if print was tasked or bill was printed (last print date changed)
"RTN","IBCB1",194,0)
 I '$$NEEDMRA^IBEFUNC(IBIFN),$S($G(ZTSK):1,1:IBTXPRT("PRT")'=$P($G(^DGCR(399,IBIFN,"S")),U,14)) S IBTXPRT=1
"RTN","IBCB1",195,0)
 Q
"RTN","IBCB1",196,0)
 ;
"RTN","IBCB2")
0^16^B55241475^B53477183
"RTN","IBCB2",1,0)
IBCB2 ;ALB/AAS - Process bill after enter/edited ;13-DEC-89
"RTN","IBCB2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,161,182,155,447,592,623**;21-MAR-94;Build 70
"RTN","IBCB2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCB2",4,0)
 ;
"RTN","IBCB2",5,0)
 ;MAP TO DGCRB2
"RTN","IBCB2",6,0)
 ;
"RTN","IBCB2",7,0)
 ;IBQUIT = Flag to stop processing
"RTN","IBCB2",8,0)
 ;IBVIEW = Flag showing Bill has been viewed
"RTN","IBCB2",9,0)
 ;IBDISP = Flag showing Bill entering display has been viewed.
"RTN","IBCB2",10,0)
 ;IBNOFIX = Flag to indicate do not ask to edit or review bill screens
"RTN","IBCB2",11,0)
 ;IBREEDIT = Flag to indicate Bill has been re-edited
"RTN","IBCB2",12,0)
 ;
"RTN","IBCB2",13,0)
VIEW ;View screens; if status allows editing , allow editing
"RTN","IBCB2",14,0)
 N Y,DIR
"RTN","IBCB2",15,0)
 S IBPOPOUT=0
"RTN","IBCB2",16,0)
 S IBVIEW=1,IBV=$S($D(IBV):IBV,1:1)
"RTN","IBCB2",17,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="WANT TO "_$S('IBV:"EDIT",1:"REVIEW")_" SCREENS? ",DIR("?",1)="   YES - to "_$S('IBV:"EDIT",1:"REVIEW")_" the screens",DIR("?")="   NO - To take no action"
"RTN","IBCB2",18,0)
 D ^DIR K DIR
"RTN","IBCB2",19,0)
 S:$D(DTOUT) IBQUIT=1
"RTN","IBCB2",20,0)
 Q:Y'=1
"RTN","IBCB2",21,0)
 I $G(IBREEDIT)=1,'IBV S IBREEDIT=2   ; set flag indicating re-edit
"RTN","IBCB2",22,0)
VIEW1 S IBVIEW=1,IBEDIT=0
"RTN","IBCB2",23,0)
 D SCREENS
"RTN","IBCB2",24,0)
 S:$G(IBPOPOUT) IBQUIT=1
"RTN","IBCB2",25,0)
 Q
"RTN","IBCB2",26,0)
 ;
"RTN","IBCB2",27,0)
DISP S IB("S")=$S($D(^DGCR(399,IBIFN,"S")):^("S"),1:"")
"RTN","IBCB2",28,0)
 W ! D DISP^IBCNQ W !
"RTN","IBCB2",29,0)
 S IBDISP=1 Q
"RTN","IBCB2",30,0)
 Q
"RTN","IBCB2",31,0)
 ;
"RTN","IBCB2",32,0)
EDITS ; Perform edits on bill prior to authorization/transmission
"RTN","IBCB2",33,0)
 N IBREEDIT
"RTN","IBCB2",34,0)
ED1 ;
"RTN","IBCB2",35,0)
 S IBQUIT=0
"RTN","IBCB2",36,0)
 I '$D(IBER)!('$D(PRCASV)) D ALLED(.IBQUIT)
"RTN","IBCB2",37,0)
 ;
"RTN","IBCB2",38,0)
 ; If the user is wanting to quit, but there are some unresolved
"RTN","IBCB2",39,0)
 ; errors reported by ClaimsManager, then capture the user's Exit
"RTN","IBCB2",40,0)
 ; comments.
"RTN","IBCB2",41,0)
 ;
"RTN","IBCB2",42,0)
 I $$CM^IBCIUT1(IBIFN),IBQUIT,$P($G(^IBA(351.9,IBIFN,0)),U,2)=4 D COMMENT^IBCIUT7(IBIFN,1)
"RTN","IBCB2",43,0)
 ;
"RTN","IBCB2",44,0)
 Q:IBQUIT
"RTN","IBCB2",45,0)
 D:'$D(IBDISP) DISP
"RTN","IBCB2",46,0)
 ;
"RTN","IBCB2",47,0)
 ; If claim re-edit, then call the IB edit checks again
"RTN","IBCB2",48,0)
 I '$D(IBVIEW) S IBREEDIT=1 D VIEW I $G(IBREEDIT)=2 K IBER,IBDISP,IBVIEW G ED1
"RTN","IBCB2",49,0)
 Q
"RTN","IBCB2",50,0)
 ;
"RTN","IBCB2",51,0)
ALLED(IBQUIT) ; Billing edit/correction
"RTN","IBCB2",52,0)
 N IBQUIT1,IBDONE1,IBDONE,IBEDIT,IBCORR,IBER,IBPRT,IBXERR
"RTN","IBCB2",53,0)
 S (IBQUIT,IBDONE,IBCORR)=0,IBER=""
"RTN","IBCB2",54,0)
 ; IBDONE = 1 ==> exit, no errors 
"RTN","IBCB2",55,0)
 ; IBQUIT = 1 ==> exit, errors not corrected
"RTN","IBCB2",56,0)
 ;JWS;IB*2.0*592:Dental form #7 don't display Box 24 info for dental
"RTN","IBCB2",57,0)
 ;I $$FT^IBCEF(IBIFN)=2,'$G(IBNOFIX) D DISP24(IBIFN,.IBCORR,.IBQUIT)  ;/vd - IB*2.0*623 - Modified this line for US4055
"RTN","IBCB2",58,0)
 I ($$FT^IBCEF(IBIFN)=2!($$FT^IBCEF(IBIFN)=7)),'$G(IBNOFIX) D DISP24(IBIFN,.IBCORR,.IBQUIT)  ;/vd - IB*2.0*623
"RTN","IBCB2",59,0)
 ;JWS;IB*2.0*592:Dental form #7 do same as CMS-1500
"RTN","IBCB2",60,0)
 ;vd/IB*2.0*623 - Modified the following line as part of US4055
"RTN","IBCB2",61,0)
 ;F  D  Q:IBQUIT!IBDONE  D VIEW1 I $$FT^IBCEF(IBIFN)=2!($$FT^IBCEF(IBIFN)=7),'$G(IBNOFIX),'IBQUIT S IBCORR=0 D:$$FT^IBCEF(IBIFN)'=7 DISP24(IBIFN,.IBCORR,.IBQUIT)
"RTN","IBCB2",62,0)
 F  D  Q:IBQUIT!IBDONE  D VIEW1 I ($$FT^IBCEF(IBIFN)=2!($$FT^IBCEF(IBIFN)=7)),'$G(IBNOFIX),'IBQUIT S IBCORR=0 D DISP24(IBIFN,.IBCORR,.IBQUIT)  ;/vd - IB*2.0*623
"RTN","IBCB2",63,0)
 . I $G(IBPOPOUT) S IBQUIT=1
"RTN","IBCB2",64,0)
 . Q:IBQUIT!IBCORR
"RTN","IBCB2",65,0)
 . I $G(IBNOFIX) D
"RTN","IBCB2",66,0)
 .. W !!,"... Checking claim validity"
"RTN","IBCB2",67,0)
 . E  D
"RTN","IBCB2",68,0)
 .. W !!,"... Executing national IB edits"
"RTN","IBCB2",69,0)
 . D EN^IBCBB,LOCERR
"RTN","IBCB2",70,0)
 . I $G(IBER)'=""!$D(IBXERR) D  Q:'IBDONE
"RTN","IBCB2",71,0)
 .. D DSPLERR ; Displays warnings/errors
"RTN","IBCB2",72,0)
 .. K IBXERR
"RTN","IBCB2",73,0)
 .. Q:IBQUIT!(IBDONE)
"RTN","IBCB2",74,0)
 .. I $G(IBNOFIX) S IBDONE=1 Q
"RTN","IBCB2",75,0)
 .. I '$$ASKEDIT($G(IBAC)) W ! S IBQUIT=1 ; Don't want to re-edit
"RTN","IBCB2",76,0)
 .. ;
"RTN","IBCB2",77,0)
 . I $G(IBNOFIX) S IBDONE=1 Q
"RTN","IBCB2",78,0)
 . S IBEDIT=0
"RTN","IBCB2",79,0)
 . I $S($P($G(^DGCR(399,IBIFN,0)),U,13)>2:1,$D(PRCASV):'$D(PRCASV("OKAY")),1:0) D  S:'IBQUIT&'IBEDIT IBDONE=1 Q
"RTN","IBCB2",80,0)
 .. N IBQUIT1
"RTN","IBCB2",81,0)
 .. S IBQUIT1=0
"RTN","IBCB2",82,0)
 .. W !!!,"... Executing A/R edits"
"RTN","IBCB2",83,0)
 .. I $P($G(^DGCR(399,IBIFN,0)),U,13)>2 D GVAR^IBCBB,ARRAY^IBCBB1
"RTN","IBCB2",84,0)
 .. D ARCHK($G(IBNOFIX),0,.IBQUIT1,.IBQUIT,.IBEDIT,.PRCASV)
"RTN","IBCB2",85,0)
 . S IBDONE=1 ; No errors
"RTN","IBCB2",86,0)
 . S:$G(IBPRT("PRT"))'<0 IBQUIT=0
"RTN","IBCB2",87,0)
 Q
"RTN","IBCB2",88,0)
 ;
"RTN","IBCB2",89,0)
ARCHK(IBNOFIX,IBNOPRT,IBQUIT1,IBQUIT,IBEDIT,PRCASV) ; A/R Verification
"RTN","IBCB2",90,0)
 ; Returns IBEDIT, IBQUIT1, IBQUIT,PRCASV array if passed by reference
"RTN","IBCB2",91,0)
 ; IBNOFIX = 1 if no editing needed
"RTN","IBCB2",92,0)
 ; IBNOPRT = 1 if no printing needed
"RTN","IBCB2",93,0)
 F  D ^PRCASVC6 D  Q:IBQUIT1!IBEDIT  D GVAR^IBCBB,ARRAY^IBCBB1
"RTN","IBCB2",94,0)
 . I '$G(IBNOPRT) Q:$G(IBPRT("PRT"))<0
"RTN","IBCB2",95,0)
 . I PRCASV("OKAY") W:'$G(IBNOPRT) !!,"No A/R errors found" S IBQUIT1=1 Q
"RTN","IBCB2",96,0)
 . I 'PRCASV("OKAY") D  Q
"RTN","IBCB2",97,0)
 .. D DSPARERR($G(IBNOPRT)) ; Display A/R errors
"RTN","IBCB2",98,0)
 .. Q:IBQUIT
"RTN","IBCB2",99,0)
 .. I $G(IBNOFIX) S IBQUIT1=1 Q
"RTN","IBCB2",100,0)
 .. I '$$ASKEDIT($G(IBAC)) W !,"There is an unresolved A/R error - cannot authorize bill" D PAUSE^VALM1 S (IBQUIT,IBQUIT1)=1 Q
"RTN","IBCB2",101,0)
 .. S IBEDIT=1
"RTN","IBCB2",102,0)
 ;
"RTN","IBCB2",103,0)
 Q
"RTN","IBCB2",104,0)
 ;
"RTN","IBCB2",105,0)
DSPLERR ; Display national/local edits failed
"RTN","IBCB2",106,0)
 N Z
"RTN","IBCB2",107,0)
 D PRTH(.IBPRT)
"RTN","IBCB2",108,0)
 I IBPRT("PRT")<0 S IBQUIT=1 Q
"RTN","IBCB2",109,0)
 S Z=0 F  S Z=$O(^TMP($J,"BILL-WARN",Z)) Q:'Z  W !,^(Z) W:'$O(^(Z)) !
"RTN","IBCB2",110,0)
 S Y2=""
"RTN","IBCB2",111,0)
 I IBER'="WARN" F I=1:1 S X=$P(IBER,";",I) Q:X=""  W:I=1 !?5,"**Errors**:" I $D(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)) S Y=^(0),Y1=$P(Y,"^",5),Y2=Y2_Y1 I Y1<5 W !?5,$E($P(Y,"^",2),1,80)
"RTN","IBCB2",112,0)
 ; IBXERR = local edits return error array
"RTN","IBCB2",113,0)
 ; If IBXERR returns = 1 then we have at least one error
"RTN","IBCB2",114,0)
 ;                   = "" or 0, then we have only local warnings
"RTN","IBCB2",115,0)
 ;           undefined = no local errors or warnings
"RTN","IBCB2",116,0)
 I $D(IBXERR) D
"RTN","IBCB2",117,0)
 . S I="" W !!,?3,"Local Edits:"
"RTN","IBCB2",118,0)
 . S:$G(IBXERR) Y2=3,IBER="L"
"RTN","IBCB2",119,0)
 . F  S I=$O(IBXERR(I)) Q:I=""  W !,?5,$E(IBXERR(I),1,75)
"RTN","IBCB2",120,0)
 I $G(IBPRT("PRT")) D CLOSE(.IBPRT)
"RTN","IBCB2",121,0)
 G:$G(IBNOFIX) Q
"RTN","IBCB2",122,0)
 I $G(IBER)="WARN"!($G(IBXERR)=0) D  ;Warnings only - make biller stop and look
"RTN","IBCB2",123,0)
 . W !
"RTN","IBCB2",124,0)
 . N DIR,X,Y
"RTN","IBCB2",125,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS BILL STILL HAS ONE OR MORE WARNINGS - PLEASE REVIEW THEM CAREFULLY",DIR("A")="ARE YOU SURE IT'S OK TO CONTINUE? "
"RTN","IBCB2",126,0)
 . D ^DIR K DIR
"RTN","IBCB2",127,0)
 . I Y'=1 S Y2=3 Q
"RTN","IBCB2",128,0)
 . S IBER="",IBDONE=1 K IBXERR
"RTN","IBCB2",129,0)
 I $S(Y2'["3"&'$G(IBXERR):0,1:1) K IBXERR
"RTN","IBCB2",130,0)
Q K ^TMP($J,"BILL-WARN")
"RTN","IBCB2",131,0)
 Q
"RTN","IBCB2",132,0)
 ;
"RTN","IBCB2",133,0)
DSPARERR(IBNOPRT) ; Displays A/R errors
"RTN","IBCB2",134,0)
 N I,J,Y,X,ERRPRT
"RTN","IBCB2",135,0)
 I '$G(IBNOPRT) D PRTH(.IBPRT) I IBPRT("PRT")<0 S IBQUIT=1 Q
"RTN","IBCB2",136,0)
 I $P($G(PRCAERR),U,2)'="" D
"RTN","IBCB2",137,0)
 . N Z
"RTN","IBCB2",138,0)
 . S Z=+$O(^IBE(350.8,"C",$P(PRCAERR,U,2),0)),Z=$P($G(^IBE(350.8,+Z,0)),U,2)
"RTN","IBCB2",139,0)
 . W !,?5,"An A/R error has been reported - bill cannot be authorized",!!,?5,$P(PRCAERR,U,2)," - ",$S(Z'="":Z,1:"??")
"RTN","IBCB2",140,0)
 E  D
"RTN","IBCB2",141,0)
 . W !,?5,"An undetermined A/R error was found - "_$G(PRCAERR)
"RTN","IBCB2",142,0)
 I $G(IBPRT("PRT")) D CLOSE(.IBPRT)
"RTN","IBCB2",143,0)
 Q
"RTN","IBCB2",144,0)
 ;
"RTN","IBCB2",145,0)
NOPTF S IBAC1=1 I $D(^DGCR(399,IBIFN,0)),$P(^(0),"^",8),'$D(^DGPT($P(^(0),"^",8),0)) S IBAC1=0
"RTN","IBCB2",146,0)
 Q
"RTN","IBCB2",147,0)
 ;
"RTN","IBCB2",148,0)
NOPTF1 W !!,*7,"PTF Record for this Bill was DELETED!",!,"Further processing not allowed.  Cancel and re-enter." Q
"RTN","IBCB2",149,0)
 ;
"RTN","IBCB2",150,0)
LOCERR ; Check for local edits
"RTN","IBCB2",151,0)
 ; Execute screen post-processor for bills with local scrn 9 affiliations
"RTN","IBCB2",152,0)
 N IBZ,IBXIEN,IBPRT
"RTN","IBCB2",153,0)
 K IBXERR
"RTN","IBCB2",154,0)
 S IBZ=$$LOCSCRN^IBCSC11(IBIFN)     ; IB*2.0*447 BI
"RTN","IBCB2",155,0)
 I IBZ S IBXIEN=IBIFN W !!,"... Executing local IB edits" D FPOST^IBCEFG7(IBZ,0,.IBXERR) I '$D(IBXERR) W !!,"No errors found for local edits"
"RTN","IBCB2",156,0)
 Q
"RTN","IBCB2",157,0)
 ;
"RTN","IBCB2",158,0)
PRTH(IBPRT,IBA) ; Print a heading for error/warnings sent to a printer
"RTN","IBCB2",159,0)
 ; Returns IBPRT = 1 if valid pritner selected
"RTN","IBCB2",160,0)
 ;         IBPRT = -1 if '^' entered
"RTN","IBCB2",161,0)
 ;         IBPRT = 0 if home device
"RTN","IBCB2",162,0)
 N POP,%ZIS,POP
"RTN","IBCB2",163,0)
 S %ZIS("A")="ERROR/WARNING OUTPUT DEVICE: "
"RTN","IBCB2",164,0)
 D ^%ZIS
"RTN","IBCB2",165,0)
 I POP S IBPRT("PRT")=-1 Q
"RTN","IBCB2",166,0)
 I IO=IO(0) S IBPRT("PRT")=0 Q
"RTN","IBCB2",167,0)
 S IBPRT("PRT")=1
"RTN","IBCB2",168,0)
 U IO
"RTN","IBCB2",169,0)
 W !,"INCONSISTENCIES LIST FOR BILL #: ",$P($G(^DGCR(399,IBIFN,0)),U),!,$J("",29),"AT: ",$$FMTE^XLFDT($$NOW^XLFDT,2),!,$J("",19),"GENERATED BY: ",$P($G(^VA(200,DUZ,0)),U),!!
"RTN","IBCB2",170,0)
 Q
"RTN","IBCB2",171,0)
 ;
"RTN","IBCB2",172,0)
CLOSE(IBPRT) ; Close device, reset printer flag
"RTN","IBCB2",173,0)
 D ^%ZISC
"RTN","IBCB2",174,0)
 S IBPRT("PRT")=0
"RTN","IBCB2",175,0)
 D HOME^%ZIS
"RTN","IBCB2",176,0)
 Q
"RTN","IBCB2",177,0)
 ;
"RTN","IBCB2",178,0)
ASKEDIT(IBAC) ; Ask if edit/review of bill is desired
"RTN","IBCB2",179,0)
 ; FUNCTION returns 0/1 for NO/YES
"RTN","IBCB2",180,0)
 ; IBAC = flag for function being performed - to determine edit/review
"RTN","IBCB2",181,0)
 N DIR,X,Y
"RTN","IBCB2",182,0)
 S DIR(0)="YA"
"RTN","IBCB2",183,0)
 S DIR("A",1)=" ",DIR("A",2)=" ",DIR("A")="Do you wish to "_$S($G(IBAC)<4:"edit",1:"review")_" the inconsistencies now? ",DIR("B")="NO"
"RTN","IBCB2",184,0)
 S DIR("?",1)=" ",DIR("?",2)=" ",DIR("?",3)="   YES - To edit inconsistent fields",DIR("?")="   NO - To discontinue this process."
"RTN","IBCB2",185,0)
 D ^DIR K DIR
"RTN","IBCB2",186,0)
 Q (Y=1)
"RTN","IBCB2",187,0)
 ;
"RTN","IBCB2",188,0)
SCREENS ;
"RTN","IBCB2",189,0)
 N IBH
"RTN","IBCB2",190,0)
 D ^IBCSCU,^IBCSC1
"RTN","IBCB2",191,0)
 I $G(IBV) K IBPOPOUT
"RTN","IBCB2",192,0)
 Q
"RTN","IBCB2",193,0)
 ;
"RTN","IBCB2",194,0)
DISP24(IBIFN,IBCORR,IBQUIT) ;
"RTN","IBCB2",195,0)
 ;/vd - IB*2.0*623/Beginning - modified the following US4055.
"RTN","IBCB2",196,0)
 ;W @IOF D BL24^IBCSCH(IBIFN,0)
"RTN","IBCB2",197,0)
 W @IOF
"RTN","IBCB2",198,0)
 I $$FT^IBCEF(IBIFN)=7 D DENTAL^IBCSCH2(IBIFN) I 1
"RTN","IBCB2",199,0)
 E  D BL24^IBCSCH(IBIFN,0)
"RTN","IBCB2",200,0)
 ;/vd - IB*2.0*623/End
"RTN","IBCB2",201,0)
 S DIR("A",1)=" ",DIR("A")="Are the above charges correct for this bill? ",DIR("B")="YES",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCB2",202,0)
 I Y'=1 D
"RTN","IBCB2",203,0)
 . I Y=0,$$ASKEDIT($G(IBAC)) S IBCORR=1 Q
"RTN","IBCB2",204,0)
 . S IBQUIT=1
"RTN","IBCB2",205,0)
 Q
"RTN","IBCB2",206,0)
 ;
"RTN","IBCB2",207,0)
IICM(IBIFN) ; Ingenix ClaimsManager: Claim Scrubber
"RTN","IBCB2",208,0)
 ; Send the bill to ClaimsManager, the IBCISTAT variable returned from ClaimsManager indicates
"RTN","IBCB2",209,0)
 ;         3 - Passed CM with no errors
"RTN","IBCB2",210,0)
 ;         5 - User overriding the CM errors
"RTN","IBCB2",211,0)
 ;         7 - the CM interface isn't working
"RTN","IBCB2",212,0)
 ;        11 - User overriding the CM errors (CM not updated)
"RTN","IBCB2",213,0)
 ; 
"RTN","IBCB2",214,0)
 ; Returns False (0) if the bill fails the ClaimsManager Scrubber/errors found
"RTN","IBCB2",215,0)
 ; Returns True (1) if the bill passed the ClaimsManager Scrubber/no errors found or ClaimsManager not On at site
"RTN","IBCB2",216,0)
 ;
"RTN","IBCB2",217,0)
 N IBOK S IBOK=1
"RTN","IBCB2",218,0)
 I +$G(IBIFN),$$CM^IBCIUT1(IBIFN) S IBCISNT=1 D ST2^IBCIST I '$F(".3.5.7.11.","."_IBCISTAT_".") S IBOK=0
"RTN","IBCB2",219,0)
 Q IBOK
"RTN","IBCB2",220,0)
 ;
"RTN","IBCB2",221,0)
IIQMED(IBIFN) ; DSS QuadraMed Interface: QuadraMed Claim Scrubber
"RTN","IBCB2",222,0)
 ; Send the bill to the QuadraMed Claim Scrubber
"RTN","IBCB2",223,0)
 ; Returns False (0) if the bill fails the QuadraMed Scrubber/errors found
"RTN","IBCB2",224,0)
 ; Returns True (1) if the bill passed the QuadraMed Scrubber/no errors found or QuadraMed not On at site
"RTN","IBCB2",225,0)
 ;
"RTN","IBCB2",226,0)
 ; QuadraMed Scrubber EN^VEJDIBSC returns IBQMED = 1 if no error found, returns 0 if error found
"RTN","IBCB2",227,0)
 ;
"RTN","IBCB2",228,0)
 N IBQMED S IBQMED=1
"RTN","IBCB2",229,0)
 I +$G(IBIFN),$$QMED^IBCU1("EN^VEJDIBSC",IBIFN) D EN^VEJDIBSC(IBIFN)
"RTN","IBCB2",230,0)
 Q IBQMED
"RTN","IBCBB")
0^42^B105632554^B85882091
"RTN","IBCBB",1,0)
IBCBB ;ALB/AAS - EDIT CHECK ROUTINE TO BE INVOKED BEFORE ALL BILL APPROVAL ACTIONS ;2-NOV-89
"RTN","IBCBB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,51,137,288,327,361,371,377,400,432,461,547,592,623**;21-MAR-94;Build 70
"RTN","IBCBB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB",4,0)
 ;
"RTN","IBCBB",5,0)
 ;MAP TO DGCRBB
"RTN","IBCBB",6,0)
 ;
"RTN","IBCBB",7,0)
 ;IBNDn = IBND(n) = ^ib(399,n)
"RTN","IBCBB",8,0)
 ;RETURNS:
"RTN","IBCBB",9,0)
 ;IBER=fields with errors separated by semi-colons
"RTN","IBCBB",10,0)
 ;PRCASV("OKAY")=1 if iber="" and $D(prcasv("array")) compete
"RTN","IBCBB",11,0)
 ;
"RTN","IBCBB",12,0)
GVAR ;set up variables for mccr
"RTN","IBCBB",13,0)
 Q:'$D(IBIFN)  F I=0,"M","U","U1","S","MP","TX","UF3","UF31","U2" S @("IBND"_I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCBB",14,0)
 S IBBNO=$P(IBND0,"^"),DFN=$P(IBND0,"^",2),IBEVDT=$P(IBND0,"^",3)
"RTN","IBCBB",15,0)
 S IBLOC=$P(IBND0,"^",4),IBCL=$P(IBND0,"^",5),IBTF=$P(IBND0,"^",6)
"RTN","IBCBB",16,0)
 S IBAT=$P(IBND0,"^",7),IBWHO=$P(IBND0,"^",11),IBST=$P(IBND0,"^",13),IBFT=$P(IBND0,"^",19)
"RTN","IBCBB",17,0)
 S IBFDT=$P(IBNDU,"^",1),IBTDT=$P(IBNDU,"^",2)
"RTN","IBCBB",18,0)
 S IBTC=$P(IBNDU1,"^",1),IBFY=$P(IBNDU1,"^",9),IBFYC=$P(IBNDU1,"^",10)
"RTN","IBCBB",19,0)
 S IBEU=$P(IBNDS,"^",2),IBRU=$P(IBNDS,"^",5),IBAU=$P(IBNDS,"^",8)
"RTN","IBCBB",20,0)
 S IBTOB=$$TOB(IBND0),IBTOB12=$E(IBTOB,1,2)
"RTN","IBCBB",21,0)
 K ^TMP($J,"BILL-WARN")
"RTN","IBCBB",22,0)
 Q
"RTN","IBCBB",23,0)
 ;
"RTN","IBCBB",24,0)
EN ;Entry to check for errors
"RTN","IBCBB",25,0)
 N IBQ,IBXERR,IBXDATA,IBXSAVE,IBZPRC92,IBQUIT,IBISEQ,IDDATA,IBFOR,IBC,IBDX,IBDX1
"RTN","IBCBB",26,0)
 I $D(IBFL) N IBFL
"RTN","IBCBB",27,0)
 K ^TMP($J)
"RTN","IBCBB",28,0)
 W !
"RTN","IBCBB",29,0)
 S IBER="" D GVAR I '$D(IBND0) S IBER=-1 Q
"RTN","IBCBB",30,0)
 ;
"RTN","IBCBB",31,0)
 ;patient in patient file
"RTN","IBCBB",32,0)
 I DFN="" S IBER=IBER_"IB057;"
"RTN","IBCBB",33,0)
 I DFN]"",'$D(^DPT(DFN)) S IBER=IBER_"IB057;"
"RTN","IBCBB",34,0)
 ;IB*2.0*623;check date fields for validity;begin
"RTN","IBCBB",35,0)
 I $$DTCK($$GET1^DIQ(2,DFN_",",.03,"I")) S IBER=IBER_"IB368;"
"RTN","IBCBB",36,0)
 I $$DTCK($$GET1^DIQ(2,DFN_",",.351,"I")) S IBER=IBER_"IB369;"
"RTN","IBCBB",37,0)
 S IBDX=0 F  S IBDX=$O(^DPT(DFN,.312,IBDX)) Q:'IBDX  D
"RTN","IBCBB",38,0)
 . S IBDX1=$$GET1^DIQ(2.312,IBDX_","_DFN_",",3.01,"I")
"RTN","IBCBB",39,0)
 . I $$DTCK(IBDX1) S IBER=IBER_"IB366;"
"RTN","IBCBB",40,0)
 . Q
"RTN","IBCBB",41,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",151,"I")) S IBER=IBER_"IB370;"
"RTN","IBCBB",42,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",152,"I")) S IBER=IBER_"IB371;"
"RTN","IBCBB",43,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",166,"I")) S IBER=IBER_"IB372;"
"RTN","IBCBB",44,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",167,"I")) S IBER=IBER_"IB373;"
"RTN","IBCBB",45,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",246,"I")) S IBER=IBER_"IB374;"
"RTN","IBCBB",46,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",245,"I")) S IBER=IBER_"IB375;"
"RTN","IBCBB",47,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",247,"I")) S IBER=IBER_"IB376;"
"RTN","IBCBB",48,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",263,"I")) S IBER=IBER_"IB377;"
"RTN","IBCBB",49,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",264,"I")) S IBER=IBER_"IB378;"
"RTN","IBCBB",50,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",282,"I")) S IBER=IBER_"IB379;"
"RTN","IBCBB",51,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",283,"I")) S IBER=IBER_"IB380;"
"RTN","IBCBB",52,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",262,"I")) S IBER=IBER_"IB381;"
"RTN","IBCBB",53,0)
 I $$DTCK($$GET1^DIQ(399,IBIFN_",",237,"I")) S IBER=IBER_"IB382;"
"RTN","IBCBB",54,0)
 ;
"RTN","IBCBB",55,0)
 ;end;IB*2.0*623
"RTN","IBCBB",56,0)
 ;
"RTN","IBCBB",57,0)
 ;Event date in correct format
"RTN","IBCBB",58,0)
 I IBEVDT="" S IBER=IBER_"IB049;"
"RTN","IBCBB",59,0)
 I IBEVDT]"",IBEVDT'?7N&(IBEVDT'?7N1".".N) S IBER=IBER_"IB049;"
"RTN","IBCBB",60,0)
 ;JWS;IB*2.0*623;add check for event date
"RTN","IBCBB",61,0)
 I IBER'["IB049",$$DTCK(IBEVDT) S IBER=IBER_"IB049;"
"RTN","IBCBB",62,0)
 ;
"RTN","IBCBB",63,0)
 ;Rate Type
"RTN","IBCBB",64,0)
 I IBAT="" S IBER=IBER_"IB059;"
"RTN","IBCBB",65,0)
 I IBAT]"",'$D(^DGCR(399.3,IBAT,0)) S IBER=IBER_"IB059;"
"RTN","IBCBB",66,0)
 I IBAT]"",$D(^DGCR(399.3,IBAT,0)),'$P(^(0),"^",6) S IBER=IBER_"IB059;",IBAT=""
"RTN","IBCBB",67,0)
 I IBAT]"",$P($G(^DGCR(399.3,IBAT,0)),"^",6) S IBARTP=$P($$CATN^PRCAFN($P(^DGCR(399.3,IBAT,0),"^",6)),"^",3)
"RTN","IBCBB",68,0)
 ;Check that AR category expects same debtor as defined in who's responsible.
"RTN","IBCBB",69,0)
 I $D(IBARTP),IBWHO="i"&(IBARTP'="T")!(IBWHO="p"&("PC"'[IBARTP))!(IBWHO="o"&(IBARTP'="N")) S IBER=IBER_"IB058;"
"RTN","IBCBB",70,0)
 ;
"RTN","IBCBB",71,0)
 ;Who's Responsible
"RTN","IBCBB",72,0)
 I IBWHO=""!($L(IBWHO)>1)!("iop"'[IBWHO) S IBER=IBER_"IB065;"
"RTN","IBCBB",73,0)
 S IBMRA=$S($$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)):$$TXMT^IBCEF4(IBIFN)>0,1:0)
"RTN","IBCBB",74,0)
 ;  MCR will not reimburse is only valid if there is subsequent insurance
"RTN","IBCBB",75,0)
 ;   that will reimburse
"RTN","IBCBB",76,0)
 I IBWHO="i" D
"RTN","IBCBB",77,0)
 . ;JWS;IB*2.0*592;US1109; If Dental and Plan Coverage Limitation is NO skip; IA# 3820
"RTN","IBCBB",78,0)
 . I $$FT^IBCEF(IBIFN)=7 D
"RTN","IBCBB",79,0)
 .. N INSONBIL,LOOP
"RTN","IBCBB",80,0)
 .. ;JWS;IB*2.0*592;; only want to check insurance on the bill at this point
"RTN","IBCBB",81,0)
 .. F LOOP="I1","I2","I3" I $D(^DGCR(399,IBIFN,LOOP)) K INSONBIL S INSONBIL(+^(LOOP))="" I '$$PTCOV^IBCNSU3(DFN,$P($G(^DGCR(399,IBIFN,0)),"^",3),"DENTAL",,.INSONBIL),IBER'["IB362" S IBER=IBER_"IB362;"
"RTN","IBCBB",82,0)
 . I IBMRA D  Q
"RTN","IBCBB",83,0)
 .. ;JWS;IB*2.0*592;Do not allow to bill Dental to Medicare WNR
"RTN","IBCBB",84,0)
 .. I $$FT^IBCEF(IBIFN)=7,'$F(IBER,"IB359;") S IBER=IBER_"IB359;"
"RTN","IBCBB",85,0)
 .. N Z,IBZ
"RTN","IBCBB",86,0)
 .. S IBZ=0
"RTN","IBCBB",87,0)
 .. F Z=$$COBN^IBCEF(IBIFN):1:3 I $D(^DGCR(399,IBIFN,"I"_(Z+1))),$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_(Z+1))),0)),U,2)'="N" S IBZ=1 Q
"RTN","IBCBB",88,0)
 .. I 'IBZ S IBER=IBER_"IB054;" D WARN^IBCBB11("A valid claim for MEDICARE WNR needs subsequent ins. that will reimburse")
"RTN","IBCBB",89,0)
 . I $$COB^IBCEF(IBIFN)="S",$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))=1,$D(^DGCR(399,IBIFN,"I3")) Q
"RTN","IBCBB",90,0)
 . I $S('IBNDMP:1,1:$P(IBNDMP,U,2)'=$$BPP^IBCNS2(IBIFN,1)) S IBER=IBER_"IB054;"
"RTN","IBCBB",91,0)
 I IBWHO="o",'$P(IBNDM,"^",11) S IBER=IBER_"IB053;"
"RTN","IBCBB",92,0)
 ;
"RTN","IBCBB",93,0)
 ; Outpatient Statement dates can not span the ICD-10 activation date
"RTN","IBCBB",94,0)
 I IBCL>2,$$ICD10S^IBCU4(IBFDT,IBTDT) S IBER=IBER_"IB354;"
"RTN","IBCBB",95,0)
 ;
"RTN","IBCBB",96,0)
 ; All bill ICD codes must match Code Version on Statement To Date IB356
"RTN","IBCBB",97,0)
 D ICD10V^IBCBB0(IBIFN)
"RTN","IBCBB",98,0)
 ;
"RTN","IBCBB",99,0)
 ; Billing Provider check - IB*2*400
"RTN","IBCBB",100,0)
 D BP^IBCBB0(IBIFN)
"RTN","IBCBB",101,0)
 ;
"RTN","IBCBB",102,0)
 ; Pay-to Provider check - IB*2*400
"RTN","IBCBB",103,0)
 D PAYTO^IBCBB0(IBIFN)
"RTN","IBCBB",104,0)
 ;
"RTN","IBCBB",105,0)
 ; All insurance subscribers must have a birth date on file
"RTN","IBCBB",106,0)
 ;  - 11/10/04 - IB*2.0*288
"RTN","IBCBB",107,0)
 ;  - 12/14/06 - IB*2.0*361 - must have INSURED'S SEX too
"RTN","IBCBB",108,0)
 ; IB error codes
"RTN","IBCBB",109,0)
 ;    IB221 - Primary insurance subscriber missing date of birth
"RTN","IBCBB",110,0)
 ;    IB222 - Secondary insurance subscriber missing date of birth
"RTN","IBCBB",111,0)
 ;    IB223 - Tertiary insurance subscriber missing date of birth
"RTN","IBCBB",112,0)
 ;    IB261 - Primary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",113,0)
 ;    IB262 - Secondary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",114,0)
 ;    IB263 - Tertiary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",115,0)
 ;
"RTN","IBCBB",116,0)
 F IBISEQ=1:1:3 D
"RTN","IBCBB",117,0)
 . I '$P($G(^DGCR(399,IBIFN,"I"_IBISEQ)),U,1) Q   ; no insurance here
"RTN","IBCBB",118,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",119,0)
 . S IDDATA=$$INSDEM^IBCEF(IBIFN,IBISEQ)
"RTN","IBCBB",120,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",121,0)
 . ;
"RTN","IBCBB",122,0)
 . I '$P(IDDATA,U,1) D ERR(221)   ; birth date missing
"RTN","IBCBB",123,0)
 . ;IB*2.0*623;JWS;date validation
"RTN","IBCBB",124,0)
 . I $$DTCK($P(IDDATA,U)) S IBER=IBER_"IB367;"
"RTN","IBCBB",125,0)
 . ;
"RTN","IBCBB",126,0)
 . I "^M^F^"'[(U_$P(IDDATA,U,2)_U) D ERR(261)  ; sex missing
"RTN","IBCBB",127,0)
 . ;
"RTN","IBCBB",128,0)
 . ; IB*2*371 - esg - check for other missing insurance pieces
"RTN","IBCBB",129,0)
 . ; check insured's name, primary ID#, pt. relationship to insured,
"RTN","IBCBB",130,0)
 . ; and subscriber address data  
"RTN","IBCBB",131,0)
 . N INNAME,SUBID,PTREL,SFA,CAS,LN,FN
"RTN","IBCBB",132,0)
 . ;
"RTN","IBCBB",133,0)
 . ;          IB273 - Primary Insurance name of insured missing
"RTN","IBCBB",134,0)
 . ;          IB274 - Secondary Insurance name of insured missing
"RTN","IBCBB",135,0)
 . ;          IB275 - Tertiary Insurance name of insured missing
"RTN","IBCBB",136,0)
 . S INNAME=$$POLICY^IBCEF(IBIFN,17,IBISEQ)
"RTN","IBCBB",137,0)
 . S LN=$P(INNAME,",",1),FN=$P(INNAME,",",2)   ; last name,first name
"RTN","IBCBB",138,0)
 . S LN=$$NOPUNCT^IBCEF(LN,1)
"RTN","IBCBB",139,0)
 . S FN=$$NOPUNCT^IBCEF(FN,1)
"RTN","IBCBB",140,0)
 . ; ib*2.0*547 - subscriber only needs last name
"RTN","IBCBB",141,0)
 . ;I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",142,0)
 . I LN="" D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",143,0)
 . S LN=$$NAME^IBCEFG1(INNAME)  ; additional name checks
"RTN","IBCBB",144,0)
 . S FN=$P(LN,U,2)
"RTN","IBCBB",145,0)
 . S LN=$P(LN,U,1)
"RTN","IBCBB",146,0)
 . ;I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",147,0)
 . I LN="" D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",148,0)
 . ;
"RTN","IBCBB",149,0)
 . ;          IB276 - Primary Insurance subscriber ID missing
"RTN","IBCBB",150,0)
 . ;          IB277 - Secondary Insurance subscriber ID missing
"RTN","IBCBB",151,0)
 . ;          IB278 - Tertiary Insurance subscriber ID missing
"RTN","IBCBB",152,0)
 . S SUBID=$$NOPUNCT^IBCEF($$POLICY^IBCEF(IBIFN,2,IBISEQ),1)
"RTN","IBCBB",153,0)
 . I SUBID="" D ERR(276)     ; subscriber ID# missing
"RTN","IBCBB",154,0)
 . ;
"RTN","IBCBB",155,0)
 . ;          IB279 - Primary Insurance missing pt relationship
"RTN","IBCBB",156,0)
 . ;          IB280 - Secondary Insurance missing pt relationship
"RTN","IBCBB",157,0)
 . ;          IB281 - Tertiary Insurance missing pt relationship
"RTN","IBCBB",158,0)
 . S PTREL=$$POLICY^IBCEF(IBIFN,16,IBISEQ)
"RTN","IBCBB",159,0)
 . I PTREL="" D ERR(279)      ; missing patient relationship to insured
"RTN","IBCBB",160,0)
 . ;
"RTN","IBCBB",161,0)
 . ; subscriber address section
"RTN","IBCBB",162,0)
 . S SFA=$$INSADDR^IBCEF(IBIFN,IBISEQ)     ; full address all pieces
"RTN","IBCBB",163,0)
 . S CAS=$$NOPUNCT^IBCEF($P(SFA,U,2,5),1)  ; string city,st,zip,addr1
"RTN","IBCBB",164,0)
 . ;
"RTN","IBCBB",165,0)
 . ;          IB282 - Primary Insurance address line 1 missing
"RTN","IBCBB",166,0)
 . ;          IB283 - Secondary Insurance address line 1 missing
"RTN","IBCBB",167,0)
 . ;          IB284 - Tertiary Insurance address line 1 missing
"RTN","IBCBB",168,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,5),1)="" D   ; address line 1 is blank
"RTN","IBCBB",169,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",170,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(282) Q
"RTN","IBCBB",171,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",172,0)
 .. I CAS'="" D ERR(282) Q
"RTN","IBCBB",173,0)
 .. Q
"RTN","IBCBB",174,0)
 . ;
"RTN","IBCBB",175,0)
 . ;          IB285 - Primary Insurance city missing
"RTN","IBCBB",176,0)
 . ;          IB286 - Secondary Insurance city missing
"RTN","IBCBB",177,0)
 . ;          IB287 - Tertiary Insurance city missing
"RTN","IBCBB",178,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,2),1)="" D   ; city is blank
"RTN","IBCBB",179,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",180,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(285) Q
"RTN","IBCBB",181,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",182,0)
 .. I CAS'="" D ERR(285) Q
"RTN","IBCBB",183,0)
 .. Q
"RTN","IBCBB",184,0)
 . ;
"RTN","IBCBB",185,0)
 . ;          IB288 - Primary Insurance state missing
"RTN","IBCBB",186,0)
 . ;          IB289 - Secondary Insurance state missing
"RTN","IBCBB",187,0)
 . ;          IB290 - Tertiary Insurance state missing
"RTN","IBCBB",188,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,3),1)="" D   ; state is blank
"RTN","IBCBB",189,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",190,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(288) Q
"RTN","IBCBB",191,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",192,0)
 .. I CAS'="" D ERR(288) Q
"RTN","IBCBB",193,0)
 .. Q
"RTN","IBCBB",194,0)
 . ;
"RTN","IBCBB",195,0)
 . ;          IB291 - Primary Insurance zipcode missing
"RTN","IBCBB",196,0)
 . ;          IB292 - Secondary Insurance zipcode missing
"RTN","IBCBB",197,0)
 . ;          IB293 - Tertiary Insurance zipcode missing
"RTN","IBCBB",198,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,4),1)="" D   ; zipcode is blank
"RTN","IBCBB",199,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",200,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(291) Q
"RTN","IBCBB",201,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",202,0)
 .. I CAS'="" D ERR(291) Q
"RTN","IBCBB",203,0)
 .. Q
"RTN","IBCBB",204,0)
 . ;
"RTN","IBCBB",205,0)
 . Q
"RTN","IBCBB",206,0)
 ;
"RTN","IBCBB",207,0)
 ; esg - IB*2*371 - check patient address fields
"RTN","IBCBB",208,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",209,0)
 ;
"RTN","IBCBB",210,0)
 S IBFOR=0                              ; foreign address flag
"RTN","IBCBB",211,0)
 S IBC=+$$PTADDR^IBCEF(IBIFN,25)        ; country code ien
"RTN","IBCBB",212,0)
 I IBC D
"RTN","IBCBB",213,0)
 . N CODE
"RTN","IBCBB",214,0)
 . S CODE=$$GET1^DIQ(779.004,IBC,.01)   ; .01 code field file 779.004
"RTN","IBCBB",215,0)
 . I CODE'="",CODE'="USA" S IBFOR=1     ; foreign country exists
"RTN","IBCBB",216,0)
 . Q
"RTN","IBCBB",217,0)
 ;
"RTN","IBCBB",218,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,1),1)="" S IBER=IBER_"IB269;"
"RTN","IBCBB",219,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,4),1)="" S IBER=IBER_"IB270;"
"RTN","IBCBB",220,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,5),1)="",'IBFOR S IBER=IBER_"IB271;"
"RTN","IBCBB",221,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,11),1)="",'IBFOR S IBER=IBER_"IB272;"
"RTN","IBCBB",222,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",223,0)
 ;
"RTN","IBCBB",224,0)
 D PAYERADD^IBCBB0(IBIFN)     ; check the payer addresses
"RTN","IBCBB",225,0)
 D ^IBCBB1
"RTN","IBCBB",226,0)
 Q
"RTN","IBCBB",227,0)
 ; The remaining code below is being removed with Patch IB*2.0*432.
"RTN","IBCBB",228,0)
 ;
"RTN","IBCBB",229,0)
 ; esg - 9/20/07 - IB patch 371 - prevent EDI transmission for 3 payer
"RTN","IBCBB",230,0)
 ;       claims for all but the first payer.  To be removed when Emdeon
"RTN","IBCBB",231,0)
 ;       and FSC are able to deal with these.
"RTN","IBCBB",232,0)
 ;
"RTN","IBCBB",233,0)
 I +$G(^DGCR(399,IBIFN,"I2")),+$G(^DGCR(399,IBIFN,"I3")),$$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB",234,0)
 . ; for MRA request claims, make sure the MRA secondary claim is forced to print
"RTN","IBCBB",235,0)
 . I $$REQMRA^IBEFUNC(IBIFN) D  Q
"RTN","IBCBB",236,0)
 .. I '$P($G(^DGCR(399,IBIFN,"TX")),U,9) S IBER=IBER_"IB146;"
"RTN","IBCBB",237,0)
 .. Q
"RTN","IBCBB",238,0)
 . ;
"RTN","IBCBB",239,0)
 . I $$COBN^IBCEF(IBIFN)=1 Q   ; primary payer sequence claims are OK
"RTN","IBCBB",240,0)
 . ;
"RTN","IBCBB",241,0)
 . ; But claims with a payer sequence of 2 or 3 need to print locally
"RTN","IBCBB",242,0)
 . S IBER=IBER_"IB147;"
"RTN","IBCBB",243,0)
 . Q
"RTN","IBCBB",244,0)
 ;
"RTN","IBCBB",245,0)
 Q
"RTN","IBCBB",246,0)
 ;
"RTN","IBCBB",247,0)
EDIT(IBIFN) ; Run edits from within the billing edit screens
"RTN","IBCBB",248,0)
 N IBVIEW,IBDISP,IBNOFIX,DIR,X,Y
"RTN","IBCBB",249,0)
 S (IBNOFIX,IBVIEW,IBDISP)=1
"RTN","IBCBB",250,0)
 D EDITS^IBCB2
"RTN","IBCBB",251,0)
 W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCBB",252,0)
 Q
"RTN","IBCBB",253,0)
 ;
"RTN","IBCBB",254,0)
TOB(IBND0) ;
"RTN","IBCBB",255,0)
 ; IBND0 = the 0-node of the bill (file 399)
"RTN","IBCBB",256,0)
 Q ($P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)_$P(IBND0,U,26))
"RTN","IBCBB",257,0)
 ;
"RTN","IBCBB",258,0)
ERR(Z) ; update IBER variable from the above insurance checks
"RTN","IBCBB",259,0)
 ; Z is the IB error code# for the primary insurance error
"RTN","IBCBB",260,0)
 N IBERRNO
"RTN","IBCBB",261,0)
 S IBERRNO="IB"_(Z+IBISEQ-1)
"RTN","IBCBB",262,0)
 I IBER[IBERRNO Q
"RTN","IBCBB",263,0)
 S IBER=IBER_IBERRNO_";"
"RTN","IBCBB",264,0)
 Q
"RTN","IBCBB",265,0)
 ;
"RTN","IBCBB",266,0)
DTCK(DATE) ; IB*2.0*623 - check for valid date
"RTN","IBCBB",267,0)
 I DATE="" Q 0
"RTN","IBCBB",268,0)
 S X=DATE D H^%DTC
"RTN","IBCBB",269,0)
 I %Y=-1 Q 1
"RTN","IBCBB",270,0)
 Q 0
"RTN","IBCBB",271,0)
 ;
"RTN","IBCBB1")
0^32^B132843227^B130250613
"RTN","IBCBB1",1,0)
IBCBB1 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;2-NOV-89
"RTN","IBCBB1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,80,93,106,51,151,148,153,137,232,280,155,320,343,349,363,371,395,384,432,447,488,554,577,592,608,623**;21-MAR-94;Build 70
"RTN","IBCBB1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB1",4,0)
 ;
"RTN","IBCBB1",5,0)
 ; *** Begin IB*2.0*488 VD  (Issue 46 RBN)
"RTN","IBCBB1",6,0)
 N I
"RTN","IBCBB1",7,0)
 S I=""
"RTN","IBCBB1",8,0)
 S X=+$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCBB1",9,0)
 I 'X,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) S X=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCBB1",10,0)
 ;JWS;IB*2.0*592:US1108 - Dental form check
"RTN","IBCBB1",11,0)
 I X,+$G(^DIC(36,X,3)) S I=$P(^(3),U,$S($$FT^IBCEF(IBIFN)=2:2,$$FT^IBCEF(IBIFN)=7:15,1:4))
"RTN","IBCBB1",12,0)
 S I=$$UP^XLFSTR(I)
"RTN","IBCBB1",13,0)
 I (I'=""&(I["PRNT")&($G(IBER)'["IB488")) D 
"RTN","IBCBB1",14,0)
 . S IBER=$G(IBER)_"IB488;"
"RTN","IBCBB1",15,0)
 ;
"RTN","IBCBB1",16,0)
 ; Cause an error if FORCED TO PRINT TO CLEARINGHOUSE
"RTN","IBCBB1",17,0)
 I $P($G(^DGCR(399,IBIFN,"TX")),U,8)=2 D
"RTN","IBCBB1",18,0)
 . S IBER=$G(IBER)_"IB489;"
"RTN","IBCBB1",19,0)
 ;
"RTN","IBCBB1",20,0)
 ; Cause a fatal error if the claim has no procedures & is NOT a UB-04 Inpatient claim.
"RTN","IBCBB1",21,0)
 I +$O(^DGCR(399,IBIFN,"CP",0))=0 D
"RTN","IBCBB1",22,0)
 .I $$INPAT^IBCEF(IBIFN,1),$$INSPRF^IBCEF(IBIFN) Q   ; inpatient UB-04 check
"RTN","IBCBB1",23,0)
 .I '$$INPAT^IBCEF(IBIFN,1),$$INSPRF^IBCEF(IBIFN) D  Q      ; Outpatient Institutional Claim.
"RTN","IBCBB1",24,0)
 ..I IBER["IB352" Q
"RTN","IBCBB1",25,0)
 ..S IBER=IBER_"IB352;"
"RTN","IBCBB1",26,0)
 .;
"RTN","IBCBB1",27,0)
 .; Professional claim
"RTN","IBCBB1",28,0)
 .I IBER["IB353" Q
"RTN","IBCBB1",29,0)
 .S IBER=IBER_"IB353;"
"RTN","IBCBB1",30,0)
 .Q
"RTN","IBCBB1",31,0)
 ; *** End IB*2.0*488 -- VD
"RTN","IBCBB1",32,0)
 ;
"RTN","IBCBB1",33,0)
 ;MAP TO DGCRBB1
"RTN","IBCBB1",34,0)
 ;
"RTN","IBCBB1",35,0)
% ;Bill Status
"RTN","IBCBB1",36,0)
 N Z,Z0,Z1,IBFT
"RTN","IBCBB1",37,0)
 I $S(+IBST=0:1,1:"^1^2^3^4^7^"'[(U_IBST_U)) S IBER=IBER_"IB045;"
"RTN","IBCBB1",38,0)
 ;
"RTN","IBCBB1",39,0)
 ;Statement Covers From
"RTN","IBCBB1",40,0)
 I IBFDT="" S IBER=IBER_"IB061;"
"RTN","IBCBB1",41,0)
 I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
"RTN","IBCBB1",42,0)
 I IBFDT>IBTDT S IBER=IBER_"IB061;" ; from must be on or before the to date 
"RTN","IBCBB1",43,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",44,0)
 ; if inpat - from date must not be prior to admit date.
"RTN","IBCBB1",45,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBFDT<($P($G(^DGPT(+$P(IBND0,U,8),0)),U,2)\1))  S IBER=IBER_"IB061;"
"RTN","IBCBB1",46,0)
 ;
"RTN","IBCBB1",47,0)
 ;Statement Covers To
"RTN","IBCBB1",48,0)
 I IBTDT="" S IBER=IBER_"IB062;"
"RTN","IBCBB1",49,0)
 I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
"RTN","IBCBB1",50,0)
 I IBTDT>DT!(IBTDT<IBFDT) S IBER=IBER_"IB062;"  ; to date must not be >than today's date
"RTN","IBCBB1",51,0)
 S IBTFY=$$FY^IBOUTL(IBTDT)
"RTN","IBCBB1",52,0)
 ;
"RTN","IBCBB1",53,0)
 ;Total Charges
"RTN","IBCBB1",54,0)
 ; IB*2.0*447/TAZ Removed this error so that zero dollar revenue codes can process on the 837
"RTN","IBCBB1",55,0)
 ;I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
"RTN","IBCBB1",56,0)
 ;
"RTN","IBCBB1",57,0)
 ;Billable charges for secondary claim
"RTN","IBCBB1",58,0)
 I $$MCRONBIL^IBEFUNC(IBIFN)&(($P(IBNDU1,U,1)-$P(IBNDU1,U,2))'>0) S IBER=IBER_"IB094;"
"RTN","IBCBB1",59,0)
 ;Fiscal Year 1
"RTN","IBCBB1",60,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",61,0)
 ;
"RTN","IBCBB1",62,0)
 ;Check provider link for current user, enterer, reviewer and Authorizor
"RTN","IBCBB1",63,0)
 I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",64,0)
 I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",65,0)
 I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
"RTN","IBCBB1",66,0)
 I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
"RTN","IBCBB1",67,0)
 ;
"RTN","IBCBB1",68,0)
 I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
"RTN","IBCBB1",69,0)
 ; If ins bill, must have valid COB sequence
"RTN","IBCBB1",70,0)
 I $P(IBND0,U,11)="i",$S($P(IBND0,U,21)="":1,1:"PST"'[$P(IBND0,U,21)) S IBER=IBER_"IB324;"
"RTN","IBCBB1",71,0)
 ;
"RTN","IBCBB1",72,0)
 ; Check for valid sec provider id for current ins
"RTN","IBCBB1",73,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)),Z1=+$$COBN^IBCEF(IBIFN) I $P(Z0,U,4+Z1)'="",$P(Z0,U,11+Z1)'="" D
"RTN","IBCBB1",74,0)
 . I '$$SECIDCK^IBCEF74(IBIFN,Z1,$P(Z0,U,11+Z1),Z) D WARN^IBCBB11("Prov secondary id type for the "_$P("PRIMARY^SECONDARY^TERTIARY",U,Z1)_" "_$$EXTERNAL^DILFD(399.0222,.01,,+Z0)_" is invalid/won't transmit")
"RTN","IBCBB1",75,0)
 ; Check NPIs
"RTN","IBCBB1",76,0)
 D NPICHK^IBCBB11
"RTN","IBCBB1",77,0)
 ;
"RTN","IBCBB1",78,0)
 ; Check multiple rx NPIs
"RTN","IBCBB1",79,0)
 D RXNPI^IBCBB11(IBIFN)
"RTN","IBCBB1",80,0)
 ;
"RTN","IBCBB1",81,0)
 ; Check taxonomies
"RTN","IBCBB1",82,0)
 D TAXCHK^IBCBB11
"RTN","IBCBB1",83,0)
 ;
"RTN","IBCBB1",84,0)
 ; Check for Physician Name
"RTN","IBCBB1",85,0)
 K IBXDATA D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCBB1",86,0)
 ; IB*2.0*432 - CMS1500 no longer needs a claim level rendering
"RTN","IBCBB1",87,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCBB1",88,0)
 ;JWS;IB*2.0*592:US1108 - Dental form check
"RTN","IBCBB1",89,0)
 I IBFT'=2,IBFT'=7,$P($G(IBXDATA),U)="" S IBER=IBER_"IB303;"
"RTN","IBCBB1",90,0)
 ;
"RTN","IBCBB1",91,0)
 N FUNCTION,IBINS
"RTN","IBCBB1",92,0)
 ; IB*2.0*432 - CMS1500 no longer needs a claim level rendering
"RTN","IBCBB1",93,0)
 ;S FUNCTION=$S($$FT^IBCEF(IBIFN)=3:4,1:3)
"RTN","IBCBB1",94,0)
 S FUNCTION=$S(IBFT=3:4,1:3)
"RTN","IBCBB1",95,0)
 ;JWS;IB*2.0*592:US1108 - Dental form check
"RTN","IBCBB1",96,0)
 I IBFT'=2,IBFT'=7,IBER'["IB303;" D
"RTN","IBCBB1",97,0)
 . F IBINS=1:1:3 D
"RTN","IBCBB1",98,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS)
"RTN","IBCBB1",99,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB1",100,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB1",101,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB1",102,0)
 ... S IBOK=0
"RTN","IBCBB1",103,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB1",104,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB236;",IBINS=2:"IB237;",IBINS=3:"IB238;",1:"")
"RTN","IBCBB1",105,0)
 ;
"RTN","IBCBB1",106,0)
 ; Patch 432 enh5:The IB system shall no longer prevent users from authorizing(fatal error message)a claim because the system cannot find the providersSSNorEIN
"RTN","IBCBB1",107,0)
 ; D PRIIDCHK^IBCBB11
"RTN","IBCBB1",108,0)
 ;
"RTN","IBCBB1",109,0)
 N IBM,IBM1
"RTN","IBCBB1",110,0)
 S IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCBB1",111,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCBB1",112,0)
 I $P(IBM,U),$P($G(^DIC(36,$P(IBM,U),4)),U,6),$P(IBM1,U,2)="" S IBER=IBER_"IB244;"
"RTN","IBCBB1",113,0)
 I $P(IBM,U,2),$P($G(^DIC(36,$P(IBM,U,2),4)),U,6),$P(IBM1,U,3)="" S IBER=IBER_"IB245;"
"RTN","IBCBB1",114,0)
 I $P(IBM,U,3),$P($G(^DIC(36,$P(IBM,U,3),4)),U,6),$P(IBM1,U,4)="" S IBER=IBER_"IB246;"
"RTN","IBCBB1",115,0)
 ;
"RTN","IBCBB1",116,0)
 ; If outside facility, check for ID and qualifier in 355.93
"RTN","IBCBB1",117,0)
 ; 5/15/06 - esg - hard error IB243 turned into warning message instead
"RTN","IBCBB1",118,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCBB1",119,0)
 I Z D
"RTN","IBCBB1",120,0)
 . I $P($G(^IBA(355.93,Z,0)),U,9)=""!($P($G(^IBA(355.93,Z,0)),U,13)="") D
"RTN","IBCBB1",121,0)
 .. N Z1,Z2
"RTN","IBCBB1",122,0)
 .. S Z1="Missing Lab or Facility Primary ID for non-VA facility, "
"RTN","IBCBB1",123,0)
 .. S Z2=$$EXTERNAL^DILFD(399,232,,Z)
"RTN","IBCBB1",124,0)
 .. I $L(Z2)'>19 D WARN^IBCBB11(Z1_Z2) Q
"RTN","IBCBB1",125,0)
 .. D WARN^IBCBB11(Z1),WARN^IBCBB11("     "_Z2)
"RTN","IBCBB1",126,0)
 .. Q
"RTN","IBCBB1",127,0)
 . Q
"RTN","IBCBB1",128,0)
 ;
"RTN","IBCBB1",129,0)
 ; Must be one and only one division on bill
"RTN","IBCBB1",130,0)
 S IBZ=$$MULTDIV^IBCBB11(IBIFN,IBND0)
"RTN","IBCBB1",131,0)
 ; I IBZ S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",132,0)
 ; Allow multi-divisional for OP instutional claims
"RTN","IBCBB1",133,0)
 I IBZ,$$INPAT^IBCEF(IBIFN)!'($$INSPRF^IBCEF(IBIFN)) S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",134,0)
 ; Still need error msg on OP Institutional if No Default division
"RTN","IBCBB1",135,0)
 I IBZ=3,'$$INPAT^IBCEF(IBIFN),$$INSPRF^IBCEF(IBIFN) S IBER=IBER_"IB105;"
"RTN","IBCBB1",136,0)
 ; Division address must be defined in institution file
"RTN","IBCBB1",137,0)
 I $P(IBND0,U,22) D
"RTN","IBCBB1",138,0)
 . N Z,Z0,Z1
"RTN","IBCBB1",139,0)
 . S Z0=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),0))
"RTN","IBCBB1",140,0)
 . S Z1=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),1))
"RTN","IBCBB1",141,0)
 . I $P(Z0,U,2)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",142,0)
 . F Z=1,3,4 I $P(Z1,U,Z)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",143,0)
 ;
"RTN","IBCBB1",144,0)
 ; IB*2.0*432 Check ambulance addresses, COB Non-covered amt. & Attachment Control
"RTN","IBCBB1",145,0)
 I $$AMBCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB329;"
"RTN","IBCBB1",146,0)
 I $$COBAMT^IBCBB11(IBIFN)=1 S IBER=IBER_"IB330;"
"RTN","IBCBB1",147,0)
 I $$TMCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB331;"
"RTN","IBCBB1",148,0)
 I $$ACCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB332;"
"RTN","IBCBB1",149,0)
 I $$COBMRA^IBCBB11(IBIFN)=1 S IBER=IBER_"IB342;"
"RTN","IBCBB1",150,0)
 I $$COBSEC^IBCBB11(IBIFN)=1 S IBER=IBER_"IB343;"
"RTN","IBCBB1",151,0)
 ;
"RTN","IBCBB1",152,0)
 ;CHAMPVA Rate Type and Primary Insurance Carriers Type of Coverage must match
"RTN","IBCBB1",153,0)
 S (IBRTCHV,IBPICHV)=0
"RTN","IBCBB1",154,0)
 I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="CHAMPVA" S IBRTCHV=1
"RTN","IBCBB1",155,0)
 I $P($G(^IBE(355.2,+$P($G(^DIC(36,+IBNDMP,0)),U,13),0)),U,1)="CHAMPVA" S IBPICHV=1
"RTN","IBCBB1",156,0)
 I (+IBRTCHV!+IBPICHV)&('IBRTCHV!'IBPICHV) S IBER=IBER_"IB085;"
"RTN","IBCBB1",157,0)
 ;
"RTN","IBCBB1",158,0)
 ;Non-VA bill must use FEE REIMB INS rate type; FEE REIMB INS rate type can only be used for Non-VA bill
"RTN","IBCBB1",159,0)
 ;IB*2.0*554/DRF 10/9/2015
"RTN","IBCBB1",160,0)
 ;N IBNVART,IBNVAST
"RTN","IBCBB1",161,0)
 ;S (IBNVART,IBNVAST)=0
"RTN","IBCBB1",162,0)
 ;I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="FEE REIMB INS" S IBNVART=1
"RTN","IBCBB1",163,0)
 ;S IBNVAST=$$NONVAFLG(IBIFN)
"RTN","IBCBB1",164,0)
 ;I IBNVART,'IBNVAST S IBER=IBER_"IB360;"  ;Non-VA rate type used for bill that is not Non-VA
"RTN","IBCBB1",165,0)
 ;I 'IBNVART,IBNVAST S IBER=IBER_"IB361;"  ;Non-VA rate type not used for bill that is Non-VA
"RTN","IBCBB1",166,0)
 ;
"RTN","IBCBB1",167,0)
 N IBZPRC,IBZPRCUB
"RTN","IBCBB1",168,0)
 D F^IBCEF("N-ALL PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBCBB1",169,0)
 ; Procedure Clinic is required for Surgical Procedures Outpt Facility Charges
"RTN","IBCBB1",170,0)
 I +$P(IBND0,U,27)'=2,$$BILLRATE^IBCRU3(IBAT,IBCL,IBEVDT,"RC OUTPATIENT") D
"RTN","IBCBB1",171,0)
 . N Z,Z0,Z1,ZE S (ZE,Z)=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  D  I +ZE S IBER=IBER_"IB320;" Q
"RTN","IBCBB1",172,0)
 .. S Z0=$G(^DGCR(399,IBIFN,"CP",Z,0)),Z1=+Z0 I Z0'[";ICPT(" Q
"RTN","IBCBB1",173,0)
 .. I '((Z1'<10000)&(Z1'>69999))&'((Z1'<93501)&(Z1'>93533)) Q
"RTN","IBCBB1",174,0)
 .. I '$P(Z0,U,7) S ZE=1
"RTN","IBCBB1",175,0)
 ;
"RTN","IBCBB1",176,0)
 ; Extract procedures for UB-04
"RTN","IBCBB1",177,0)
 D F^IBCEF("N-UB-04 PROCEDURES","IBZPRCUB",,IBIFN)
"RTN","IBCBB1",178,0)
 ; Does this bill have ANY prescriptions associated with it?
"RTN","IBCBB1",179,0)
 ; Must bill prescriptions separately from other charges
"RTN","IBCBB1",180,0)
 ;
"RTN","IBCBB1",181,0)
 ; DEM;432 - Call line level provider edit checks.
"RTN","IBCBB1",182,0)
 D LNPROV^IBCBB12(IBIFN)  ; DEM;432 - If there are line provider edits, then routine LNPROV^IBCBB12(IBIFN) updates IBER string.
"RTN","IBCBB1",183,0)
 ; DEM;432 - Call to Other Operating/Operating Provider edit checks.
"RTN","IBCBB1",184,0)
 I $$OPPROVCK^IBCBB12(IBIFN)=1 S IBER=IBER_"IB337;"  ; DEM;432
"RTN","IBCBB1",185,0)
 ; DEM;432 - Line level Attachment Control edits.
"RTN","IBCBB1",186,0)
 I $$LNTMCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB331;"  ; DEM;432
"RTN","IBCBB1",187,0)
 I $$LNACCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB332;"  ; DEM;432
"RTN","IBCBB1",188,0)
 ;
"RTN","IBCBB1",189,0)
 ; vd/Beginning of IB*2*577 - Validate Line Level NDC edits.
"RTN","IBCBB1",190,0)
 I $$LNNDCCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB365;"  ;IB*2*577;JWS;11/20/17 FIX
"RTN","IBCBB1",191,0)
 ; vd/End of IB*2*577
"RTN","IBCBB1",192,0)
 I $$ISRX^IBCEF1(IBIFN) D
"RTN","IBCBB1",193,0)
 . N IBZ,IBRXDEF
"RTN","IBCBB1",194,0)
 . S IBRXDEF=$P($G(^IBE(350.9,1,1)),U,30),IBZ=0
"RTN","IBCBB1",195,0)
 . F  S IBZ=$O(IBZPRCUB(IBZ)) Q:'IBZ  I IBZPRCUB(IBZ),+$P(IBZPRCUB(IBZ),U)'=IBRXDEF S IBER=IBER_"IB102;" Q
"RTN","IBCBB1",196,0)
 . K IBZ
"RTN","IBCBB1",197,0)
 ;
"RTN","IBCBB1",198,0)
 ; Check that COB sequences are not skipped
"RTN","IBCBB1",199,0)
 K Z
"RTN","IBCBB1",200,0)
 F Z=1:1:3 S:+$G(^DGCR(399,IBIFN,"I"_Z)) Z(Z)=""
"RTN","IBCBB1",201,0)
 F Z=0:1:2 S Z0=$O(Z(Z)) Q:'Z0  I Z0'=(Z+1) S IBER=IBER_"IB322;" Q
"RTN","IBCBB1",202,0)
 K Z
"RTN","IBCBB1",203,0)
 ; HD64676  IB*2*371 - OK for payer sequence to be blank when the Rate
"RTN","IBCBB1",204,0)
 ;    Type is either Interagency or Sharing Agreement
"RTN","IBCBB1",205,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,21)="",$P($G(^DGCR(399,IBIFN,0)),U,7)'=4,$P($G(^DGCR(399,IBIFN,0)),U,7)'=9 S IBER=IBER_"IB323;"
"RTN","IBCBB1",206,0)
 K IBXDATA D F^IBCEF("N-PROCEDURE CODING METHD",,,IBIFN)
"RTN","IBCBB1",207,0)
 ; Coding method should agree with types of procedure codes
"RTN","IBCBB1",208,0)
 S IBOK=$S('$O(IBZPRC(0))!(IBXDATA=""):1,1:0)
"RTN","IBCBB1",209,0)
 I 'IBOK S IBOK=1,IBZ=0 F  S IBZ=$O(IBZPRC(IBZ)) Q:'IBZ  I IBZPRC(IBZ),$P(IBZPRC(IBZ),U)'[$S(IBXDATA=9:"ICD",1:"ICP") S IBOK=0 Q
"RTN","IBCBB1",210,0)
 I 'IBOK D WARN^IBCBB11("Coding Method does not agree with all procedure codes found on bill")
"RTN","IBCBB1",211,0)
 D EDITMRA^IBCBB3(.IBQUIT,.IBER,IBIFN,IBFT)
"RTN","IBCBB1",212,0)
 Q:$G(IBQUIT)
"RTN","IBCBB1",213,0)
 ;
"RTN","IBCBB1",214,0)
 ;Other things that could be added:  Rev Code - calculating charges
"RTN","IBCBB1",215,0)
 ;        Diagnosis Coding, if MT copay - check for other co-payments
"RTN","IBCBB1",216,0)
 ;
"RTN","IBCBB1",217,0)
 I $P(IBNDTX,U,8),$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB121;"   ; can't force MRAs to print
"RTN","IBCBB1",218,0)
 I $P(IBNDTX,U,8)!$P(IBNDTX,U,9) D
"RTN","IBCBB1",219,0)
 . Q:$P(IBNDTX,U,8)=2    ; Don't want to do this for option 2 any more.
"RTN","IBCBB1",220,0)
 . D WARN^IBCBB11($S($$REQMRA^IBEFUNC(IBIFN)&($P(IBNDTX,U,9)):"MRA Secondary ",1:"")_"Bill has been forced to print "_$S($P(IBNDTX,U,8)=1!($P(IBNDTX,U,9)=1):"locally",1:"at clearinghouse"))
"RTN","IBCBB1",221,0)
 N IBXZ,IBIZ F IBIZ=12,13,14 S IBXZ=$P(IBNDM,U,IBIZ) I +IBXZ S IBXZ=$P($G(^DPT(DFN,.312,IBXZ,0)),U,18) I +IBXZ S IBXZ=$G(^IBA(355.3,+IBXZ,0)) I +$P(IBXZ,U,12) D
"RTN","IBCBB1",222,0)
 . D WARN^IBCBB11($P($G(^DIC(36,+IBXZ,0)),U,1)_" requires Amb Care Certification")
"RTN","IBCBB1",223,0)
 ;
"RTN","IBCBB1",224,0)
 D VALNDC^IBCBB11(IBIFN,DFN)  ;validate NDC#
"RTN","IBCBB1",225,0)
 ;
"RTN","IBCBB1",226,0)
 ;Build AR array if no errors and MRA not needed or already rec'd
"RTN","IBCBB1",227,0)
 I IBER="",$S($$NEEDMRA^IBEFUNC(IBIFN)!($$REQMRA^IBEFUNC(IBIFN)):0,1:1) D ARRAY
"RTN","IBCBB1",228,0)
 ;
"RTN","IBCBB1",229,0)
 ;Check ROI
"RTN","IBCBB1",230,0)
 N ROIERR
"RTN","IBCBB1",231,0)
 ;/vd - IB*2.0*623 (US4995) - Modified the following 2 lines of code with the following conditional.
"RTN","IBCBB1",232,0)
 ;S ROIERR=0 I $P($G(^DGCR(399,IBIFN,"U")),U,5)=1,+$P($G(^DGCR(399,IBIFN,"U")),U,7)=0 S ROIERR=1 ; screen 7 sensitive record and no ROI
"RTN","IBCBB1",233,0)
 ;I $$ROICHK^IBCBB11(IBIFN,DFN,+IBNDMP) S ROIERR=1 ; check file for sensitive Rx and missing ROI
"RTN","IBCBB1",234,0)
 S ROIERR=0
"RTN","IBCBB1",235,0)
 I $$ROIDTCK^IBCEU7(IBIFN) D    ; ROI Eligible based upon Service Date of Claim
"RTN","IBCBB1",236,0)
 . I $P($G(^DGCR(399,IBIFN,"U")),U,5)=1,+$P($G(^DGCR(399,IBIFN,"U")),U,7)=0 S ROIERR=1 ; screen 7 sensitive record and no ROI
"RTN","IBCBB1",237,0)
 . I $$ROICHK^IBCBB11(IBIFN,DFN,+IBNDMP) S ROIERR=1 ; check file for sensitive Rx and missing ROI
"RTN","IBCBB1",238,0)
 I ROIERR S IBER=IBER_"IB328;"
"RTN","IBCBB1",239,0)
 ;
"RTN","IBCBB1",240,0)
 ;Verify Line Charges Match Claim Total Charge. IB*2.0*447 BI
"RTN","IBCBB1",241,0)
 I +$$GET1^DIQ(399,IBIFN_",",201)'=+$$IBLNTOT^IBCBB13(IBIFN) S IBER=IBER_"IB344;"
"RTN","IBCBB1",242,0)
 ;
"RTN","IBCBB1",243,0)
 ;Test for valid EIN/SY ID Values. IB*2.0*447 BI
"RTN","IBCBB1",244,0)
 I $$IBSYEI^IBCBB13(IBIFN) S IBER=IBER_"IB345;"
"RTN","IBCBB1",245,0)
 ;
"RTN","IBCBB1",246,0)
 ;Test for a missing ICN. IB*2.0*447 BI
"RTN","IBCBB1",247,0)
 I $$IBMICN^IBCBB13(IBIFN) S IBER=IBER_"IB346;"
"RTN","IBCBB1",248,0)
 ;
"RTN","IBCBB1",249,0)
 ;Test for a ZERO charge amounts. IB*2.0*447 BI
"RTN","IBCBB1",250,0)
 I $$IBRCCHK^IBCBB13(IBIFN) D WARN^IBCBB11("Claim contains revenue codes with no associated charges.")
"RTN","IBCBB1",251,0)
 ;
"RTN","IBCBB1",252,0)
 ;Test for missing "Patient reason for visit". IB*2.0*447 BI
"RTN","IBCBB1",253,0)
 I $$FT^IBCEF(IBIFN)=3,'$$INPAT^IBCEF(IBIFN),$$IBPRV3^IBCBB13(IBIFN) S IBER=IBER_"IB347;"
"RTN","IBCBB1",254,0)
 ;
"RTN","IBCBB1",255,0)
 ;Test for missing Payer ID. IB*2.0*447 BI
"RTN","IBCBB1",256,0)
 ;I $$IBMPID^IBCBB13(IBIFN) S IBER=IBER_"IB348;"
"RTN","IBCBB1",257,0)
 ;Changed Error to Warning. IB*2.0*447 TAZ
"RTN","IBCBB1",258,0)
 I $$IBMPID^IBCBB13(IBIFN) D WARN^IBCBB11("Not all payers have Payer IDs.")
"RTN","IBCBB1",259,0)
 ;
"RTN","IBCBB1",260,0)
 ;Test for missing "Priority (Type) of Admission" for UB-04. IB*2.0*447 BI
"RTN","IBCBB1",261,0)
 I $$FT^IBCEF(IBIFN)=3,$$GET1^DIQ(399,IBIFN_",",158)="" S IBER=IBER_"IB349;"
"RTN","IBCBB1",262,0)
 ;
"RTN","IBCBB1",263,0)
 I $$FT^IBCEF(IBIFN)=2 S IBER=IBER_$$CMNCHK^IBCBB13(IBIFN)  ;JRA;IB*2.0*608 Check for missing CMN info
"RTN","IBCBB1",264,0)
 ;
"RTN","IBCBB1",265,0)
END ;Don't kill IBIFN, IBER, DFN
"RTN","IBCBB1",266,0)
 I $O(^TMP($J,"BILL-WARN",0)),$G(IBER)="" S IBER="WARN" ;Warnings only
"RTN","IBCBB1",267,0)
 K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBMRA,IBTOB,IBTOB12,IBNDU2,IBNDUF3,IBNDUF31,IBNDTX
"RTN","IBCBB1",268,0)
 K IBNDS,IBND0,IBNDU,IBNDM,IBNDMP,IBNDU1,IBFFY,IBTFY,IBFT,IBRTCHV,IBPICHV,IBXDATA,IBOK
"RTN","IBCBB1",269,0)
 I $D(IBER),IBER="" W !,"No Errors found for National edits"
"RTN","IBCBB1",270,0)
 Q
"RTN","IBCBB1",271,0)
 ;
"RTN","IBCBB1",272,0)
ARRAY ;Build PRCASV(array)
"RTN","IBCBB1",273,0)
 N IBCOBN,X
"RTN","IBCBB1",274,0)
 K PRCASV
"RTN","IBCBB1",275,0)
 Q:$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))
"RTN","IBCBB1",276,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCBB1",277,0)
 S X=IBIFN
"RTN","IBCBB1",278,0)
 S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
"RTN","IBCBB1",279,0)
 S PRCASV("APR")=DUZ
"RTN","IBCBB1",280,0)
 S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
"RTN","IBCBB1",281,0)
 I IBWHO="i" S PRCASV("DEBTOR")=+IBNDMP_";DIC(36,"
"RTN","IBCBB1",282,0)
 S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
"RTN","IBCBB1",283,0)
 S PRCASV("CARE")=$E($$TOB^IBCEF1(IBIFN),1,2)
"RTN","IBCBB1",284,0)
 S PRCASV("FY")=$$FY^IBOUTL(DT)_U_($P(IBNDU1,U)-$P(IBNDU1,U,2))
"RTN","IBCBB1",285,0)
 ;S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
"RTN","IBCBB1",286,0)
PLUS I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
"RTN","IBCBB1",287,0)
 I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
"RTN","IBCBB1",288,0)
 ;
"RTN","IBCBB1",289,0)
 N IBX S IBX=$P(IBND0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:"") Q:IBX=""
"RTN","IBCBB1",290,0)
 N IBNDI1
"RTN","IBCBB1",291,0)
 Q:'$D(^DGCR(399,IBIFN,IBX))  S IBNDI1=^(IBX)
"RTN","IBCBB1",292,0)
 S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
"RTN","IBCBB1",293,0)
 S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
"RTN","IBCBB1",294,0)
 S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
"RTN","IBCBB1",295,0)
 S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
"RTN","IBCBB1",296,0)
 ; Check that this is a secondary or tertiary bill and insurance for previous
"RTN","IBCBB1",297,0)
 ; COB sequence is Medicare WNR and MRA is active --> send data elements to AR
"RTN","IBCBB1",298,0)
 I IBCOBN>1,$$WNRBILL^IBEFUNC(IBIFN,IBCOBN-1),$$EDIACTV^IBCEF4(2) D MRA
"RTN","IBCBB1",299,0)
 Q
"RTN","IBCBB1",300,0)
 ;
"RTN","IBCBB1",301,0)
MRA N IBEOB S IBEOB=0
"RTN","IBCBB1",302,0)
 ;
"RTN","IBCBB1",303,0)
 K PRCASV("MEDURE"),PRCASV("MEDCA")
"RTN","IBCBB1",304,0)
 ; Get EOB data
"RTN","IBCBB1",305,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCBB1",306,0)
 . D MRACALC^IBCEMU2(IBEOB,IBIFN,1,.PRCASV)
"RTN","IBCBB1",307,0)
 Q  ;MRA
"RTN","IBCBB1",308,0)
 ;
"RTN","IBCBB1",309,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB1",310,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB1",311,0)
 ;
"RTN","IBCBB1",312,0)
NONVAFLG(IBIFN) ; Check if Non-VA bill
"RTN","IBCBB1",313,0)
 ; Function returns 1 if Non-VA bill
"RTN","IBCBB1",314,0)
 ; IB*2.0*554/DRF 10/9/2015
"RTN","IBCBB1",315,0)
 N FLAG,PTF
"RTN","IBCBB1",316,0)
 S FLAG=0
"RTN","IBCBB1",317,0)
 I $P($G(^DGCR(399,IBIFN,"U2")),U,10)]"" S FLAG=1 ;Non-VA provider defined
"RTN","IBCBB1",318,0)
 S PTF=$P($G(^DGCR(399,IBIFN,0)),U,8)
"RTN","IBCBB1",319,0)
 I PTF,$P($G(^DGPT(PTF,0)),U,4)=1 S FLAG=1 ;PTF entry indicates Non-VA
"RTN","IBCBB1",320,0)
 Q FLAG
"RTN","IBCBB2")
0^28^B59608888^B57578092
"RTN","IBCBB2",1,0)
IBCBB2 ;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (CMS-1500) ;04/14/92
"RTN","IBCBB2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,245,232,296,320,349,371,403,432,447,473,488,461,623**;21-MAR-94;Build 70
"RTN","IBCBB2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB2",4,0)
 ;
"RTN","IBCBB2",5,0)
 ;MAP TO DGCRBB2
"RTN","IBCBB2",6,0)
 ;
"RTN","IBCBB2",7,0)
EN ;
"RTN","IBCBB2",8,0)
 N IBI,IBJ,IBN,IBY,IBDX,IBDXO,IBDXL,IBDXTYP,IBDXVER,IBCPT,IBCPTL,IBOLAB,Z,IBXSAVE,IBLOC,IBTX,IBPS,IBSP,IBLCT,IBNVFLG,IBU3
"RTN","IBCBB2",9,0)
 I '$D(IBER) S IBER=""
"RTN","IBCBB2",10,0)
 S IBTX=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB2",11,0)
 ;
"RTN","IBCBB2",12,0)
 ; Max 4 modifiers per CPT code allowed before warning
"RTN","IBCBB2",13,0)
 K IBXDATA
"RTN","IBCBB2",14,0)
 D F^IBCEF("N-HCFA 1500 MODIFIERS",,,IBIFN) ;Get modifiers
"RTN","IBCBB2",15,0)
 ;
"RTN","IBCBB2",16,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>4 S IBI="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 4 modifiers - only first 4 will be used" D WARN^IBCBB11(IBI)
"RTN","IBCBB2",17,0)
 ;
"RTN","IBCBB2",18,0)
 ; ICD diagnosis, at least 1 required
"RTN","IBCBB2",19,0)
 D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
"RTN","IBCBB2",20,0)
 ;
"RTN","IBCBB2",21,0)
 ; Principle diagnosis - updated for ICD-10 **461
"RTN","IBCBB2",22,0)
 S IBI=$O(IBDXO(0)) I IBI S IBDXTYP=$$ICD9^IBACSV(+$P(IBDXO(IBI),U),$$BDATE^IBACSV(IBIFN)) D
"RTN","IBCBB2",23,0)
 . S IBDXVER=$P(IBDXTYP,U,19),IBDXTYP=$E(IBDXTYP)
"RTN","IBCBB2",24,0)
 . I IBDXVER=1,IBDXTYP="E" S IBER=IBER_"IB117;"
"RTN","IBCBB2",25,0)
 . I IBDXVER=1,$$INPAT^IBCEF(IBIFN,1),IBDXTYP="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",26,0)
 . I IBDXVER=30,"VWXY"[IBDXTYP S IBER=IBER_"IB355;"
"RTN","IBCBB2",27,0)
 . I IBDXVER=30,$$INPAT^IBCEF(IBIFN,1),IBDXTYP="Z" S Z="Principal Dx Z-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",28,0)
 ;
"RTN","IBCBB2",29,0)
 I '$$OCC10(IBIFN,.IBDX,2) S IBER=IBER_"IB093;"
"RTN","IBCBB2",30,0)
 ;
"RTN","IBCBB2",31,0)
 ; CPT procs must be associated with a dx, must have a defined provider
"RTN","IBCBB2",32,0)
 S (IBLOC,IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
"RTN","IBCBB2",33,0)
 . I 'IBLOC,$P(IBCPT,U,15)'="",IBTX S Z="At least 1 charge has local box 24K data that will not be transmitted - " S IBLOC=1 D WARN^IBCBB11(Z) S Z="  This data will only print locally" D WARN^IBCBB11(Z)
"RTN","IBCBB2",34,0)
 . I $P(IBCPT,U)'["ICPT(" S:IBER'["IB092" IBER=IBER_"IB092;" Q
"RTN","IBCBB2",35,0)
 . S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
"RTN","IBCBB2",36,0)
 I +IBN S IBER=IBER_"IB072;"
"RTN","IBCBB2",37,0)
 ;
"RTN","IBCBB2",38,0)
 ; CMS-1500: dxs associated with procs must be defined dxs for the bill
"RTN","IBCBB2",39,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
"RTN","IBCBB2",40,0)
 S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1 Q
"RTN","IBCBB2",41,0)
 I +IBN S IBER=IBER_"IB073;"
"RTN","IBCBB2",42,0)
 ; ejk *296* Change # of diagnoses codes from 4 to 8 on CMS-1500 Claims. 
"RTN","IBCBB2",43,0)
 ; baa *488* Change # of diagnoses codes from 8 to 12.
"RTN","IBCBB2",44,0)
 ; vd *623-US4055* Modified the logic for dental claims to check for # of diagnosis codes greater than 4.
"RTN","IBCBB2",45,0)
 I IBTX,$$FT^IBCEF(IBIFN)'=7 S IBI=12 F  S IBI=$O(IBDXO(IBI)) Q:'IBI  S Z=+$G(IBDX(+$G(IBDXO(IBI)))) I Z,$D(IBCPTL(Z)) D WARN^IBCBB11("Too many diagnoses for claim & will be rejected - consider printing locally")
"RTN","IBCBB2",46,0)
 I $$FT^IBCEF(IBIFN)=7,$P($G(IBDXO),U,2)>4 D WARN^IBCBB11("Only 4 diagnosis codes are allowed on a dental transaction")
"RTN","IBCBB2",47,0)
 ;
"RTN","IBCBB2",48,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="B" S IBER=IBER_"IB087;"
"RTN","IBCBB2",49,0)
 ;
"RTN","IBCBB2",50,0)
 ; IB*320 - CLIA# error/warning - error msg for MRA claims, else warning
"RTN","IBCBB2",51,0)
 I $P(IBNDU2,U,13)="",$$CLIAREQ^IBCEP8A(IBIFN) D
"RTN","IBCBB2",52,0)
 . I $$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB235;" Q
"RTN","IBCBB2",53,0)
 . D WARN^IBCBB11("Claim contains laboratory services. The payer may require a CLIA #.")
"RTN","IBCBB2",54,0)
 . Q
"RTN","IBCBB2",55,0)
 ;
"RTN","IBCBB2",56,0)
 ; Only one occurrence code can be present for event date for box 14
"RTN","IBCBB2",57,0)
 S Z=$$EVENT^IBCF22(IBIFN,.IBXSAVE,.IBI)
"RTN","IBCBB2",58,0)
 I IBI S IBER=IBER_"IB099;"
"RTN","IBCBB2",59,0)
 ;
"RTN","IBCBB2",60,0)
 ; esg - 6/6/07 - warning if missing non-VA care type for outside facility
"RTN","IBCBB2",61,0)
 S IBNVFLG=0
"RTN","IBCBB2",62,0)
 I $P(IBNDU2,U,10),'$P(IBNDU2,U,11) D WARN^IBCBB11("Non-VA facility indicated, but the Non-VA Care Type field is not defined") S IBNVFLG=1
"RTN","IBCBB2",63,0)
 ;
"RTN","IBCBB2",64,0)
 ; unit/charge limits
"RTN","IBCBB2",65,0)
 K IBXDATA
"RTN","IBCBB2",66,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN) ;Get charge lines
"RTN","IBCBB2",67,0)
 S (IBLCT,IBOLAB)=0,IBPS="",IBSP=$$BILLSPEC^IBCEU3(IBIFN)
"RTN","IBCBB2",68,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBER["IB310"!(IBER["IB311")
"RTN","IBCBB2",69,0)
 . S IBLCT=IBLCT+1
"RTN","IBCBB2",70,0)
 . I $P(IBNDU2,U,11) D
"RTN","IBCBB2",71,0)
 .. I '$P(IBXDATA(IBI),U,11) S IBPS=IBPS_$S(IBPS'="":",",1:"")_IBI Q
"RTN","IBCBB2",72,0)
 .. I $P(IBXDATA(IBI),U,14),"24"'[$P(IBNDU2,U,11) D WARN^IBCBB11("Outside lab charges exist on a non-lab NON-VA bill")
"RTN","IBCBB2",73,0)
 . ; Start IB*2.0*473 Changed the following two warnings to errors.
"RTN","IBCBB2",74,0)
 . ;I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Purchased service amounts are invalid unless this is a NON-VA bill")
"RTN","IBCBB2",75,0)
 . ;I IBNVFLG,'$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Non-VA facility indicated, but no purchased service charge on line# "_IBI)
"RTN","IBCBB2",76,0)
 . I $G(IBER)'["IB350" I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) S IBER=IBER_"IB350;"
"RTN","IBCBB2",77,0)
 . I $G(IBER)'["IB351" I IBNVFLG,'$P(IBXDATA(IBI),U,11) S IBER=IBER_"IB351;"
"RTN","IBCBB2",78,0)
 . ; End IB*2.0*473
"RTN","IBCBB2",79,0)
 . I $G(IBER)'["IB310" I $D(IBXDATA(IBI,"A")) S IBER=IBER_"IB310;" Q
"RTN","IBCBB2",80,0)
 . I $D(IBXDATA(IBI,"ARX")),IBER'["311;" S IBER=IBER_"IB311;" Q
"RTN","IBCBB2",81,0)
 . I $P(IBXDATA(IBI),U,14) S IBOLAB=IBOLAB+1
"RTN","IBCBB2",82,0)
 . ; Place of service required => remove edit below for IB*2.0*488 ; baa
"RTN","IBCBB2",83,0)
 . ;I $G(IBER)'["IB314;",$P(IBXDATA(IBI),U,3)="" S IBER=IBER_"IB314;"
"RTN","IBCBB2",84,0)
 . ; Type of service required => remove edit below for IB*2.0*488 ; baa
"RTN","IBCBB2",85,0)
 . ;I $G(IBER)'["IB313;",$P(IBXDATA(IBI),U,4)="" S IBER=IBER_"IB313;"
"RTN","IBCBB2",86,0)
 . ; 43 and 53 are invalid types of service
"RTN","IBCBB2",87,0)
 . I $G(IBER)'["IB110;",($P(IBXDATA(IBI),U,4)=43!($P(IBXDATA(IBI),U,4)=53)) S IBER=IBER_"IB110;"
"RTN","IBCBB2",88,0)
 . ; Units for the line item must be less than 100/1000 => Remove edit baa *488
"RTN","IBCBB2",89,0)
 . ;I IBER'["IB088",$P(IBXDATA(IBI),U,9)'<100 D
"RTN","IBCBB2",90,0)
 . ;. I $P(IBXDATA(IBI),U,4)'=7 S IBER=IBER_"IB088;" Q
"RTN","IBCBB2",91,0)
 . ;. I $P(IBXDATA(IBI),U,9)'<1000 S IBER=IBER_"IB088;"
"RTN","IBCBB2",92,0)
 . ; Line item total charge must be less than $10,000.00, greater than 0
"RTN","IBCBB2",93,0)
 . ; IB*2.0*432 - The IB system shall provide the ability for users to enter maximum line item dollar amounts of 9999999.99.
"RTN","IBCBB2",94,0)
 . ; I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",95,0)
 . I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",96,0)
 . ; IB*2.0*447 BI Removed individual warning replaced by a claim level warning.
"RTN","IBCBB2",97,0)
 . ; I '($P(IBXDATA(IBI),U,9)*$P(IBXDATA(IBI),U,8)),$$COBN^IBCEF(IBIFN)'>1 S Z="Procedure "_$P(IBXDATA(IBI),U,5)_" has a 0-charge and will not be transmitted" D WARN^IBCBB11(Z)
"RTN","IBCBB2",98,0)
 I IBTX,IBLCT>50 D
"RTN","IBCBB2",99,0)
 . I $G(IBER)'["IB308" I '$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB308;" Q
"RTN","IBCBB2",100,0)
 . I $G(IBER)'["IB325" I '$P(IBNDTX,U,9) S IBER=IBER_"IB325;"
"RTN","IBCBB2",101,0)
 S IBU3=$P($G(^DGCR(399,IBIFN,"U3")),U,4,7) I $TR(IBU3,U)'="" D
"RTN","IBCBB2",102,0)
 .; ib*2.0*432 add line-level check
"RTN","IBCBB2",103,0)
 .;I +IBSP'=35 D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",104,0)
 .I $$LINSPEC^IBCEU3(IBIFN)'[35 D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",105,0)
 .I $G(IBER)'["IB137" I $P(IBU3,U,2)="" S IBER=IBER_"IB137;"
"RTN","IBCBB2",106,0)
 .I $G(IBER)'["IB338" I $P(IBU3,U,4)="" S IBER=IBER_"IB138;" Q
"RTN","IBCBB2",107,0)
 .I $G(IBER)'["IB139" I $P(IBU3,U,3)="","AM"[$P(IBU3,U,4) S IBER=IBER_"IB139;"
"RTN","IBCBB2",108,0)
 .Q
"RTN","IBCBB2",109,0)
 ; IB*2.0*473 BI Changed the following warning to an error.
"RTN","IBCBB2",110,0)
 ;I IBPS'="" D WARN^IBCBB11("NON-VA facility indicated, but no purchased service charge on line item"_$S(IBPS[",":"s",1:"")_" #"_IBPS)
"RTN","IBCBB2",111,0)
 I $G(IBER)'["IB351" I IBPS'="" S IBER=IBER_"IB351;"
"RTN","IBCBB2",112,0)
 I $P(IBNDU2,U,11),$P(IBNDU2,U,11)=4,IBOLAB>1 D WARN^IBCBB11("For proper payment, you must bill each outside lab on a separate claim form")
"RTN","IBCBB2",113,0)
 K IBXDATA
"RTN","IBCBB2",114,0)
 ;
"RTN","IBCBB2",115,0)
 ;       ; Check for Physician Name
"RTN","IBCBB2",116,0)
 D F^IBCEF("N-REFERRING PROVIDER NAME",,,IBIFN)
"RTN","IBCBB2",117,0)
 I $P($G(IBXDATA),U)]"" D
"RTN","IBCBB2",118,0)
 .N IBZ,FUNCTION,IBINS
"RTN","IBCBB2",119,0)
 .S FUNCTION=1
"RTN","IBCBB2",120,0)
 .F IBINS=1:1:3 D
"RTN","IBCBB2",121,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS,FUNCTION)
"RTN","IBCBB2",122,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB2",123,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB2",124,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB2",125,0)
 ... S IBOK=0
"RTN","IBCBB2",126,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB2",127,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB239;",IBINS=2:"IB240;",IBINS=3:"IB241;",1:"")
"RTN","IBCBB2",128,0)
 ;
"RTN","IBCBB2",129,0)
 Q
"RTN","IBCBB2",130,0)
 ;
"RTN","IBCBB2",131,0)
OCC10(IBIFN,IBARR,IBFT) ; Determine if occurrence code 10 exists for pregnancy dx
"RTN","IBCBB2",132,0)
 ; IBARR=array subscripted by ien of DX code if IBFT=2 (CMS-1500 form)
"RTN","IBCBB2",133,0)
 ;                         by seq # and = ien of DX code if IBFT'=2
"RTN","IBCBB2",134,0)
 ;
"RTN","IBCBB2",135,0)
 N IBN,IBI,IBXDATA,IBXSAVE,IBDX,Z
"RTN","IBCBB2",136,0)
 S IBN=1
"RTN","IBCBB2",137,0)
 ;
"RTN","IBCBB2",138,0)
 ; If a pregnancy DX exists, must be an occurrence code 10 for LMP date
"RTN","IBCBB2",139,0)
 ; ICD-9  dx ranges are: V22*-V24*, V27*-V28*, 630*-677*
"RTN","IBCBB2",140,0)
 ; ICD-10 dx ranges are: O00.*-O9A.*, Z34.*-Z36.*, Z37.*-Z39.*, Z3A.*
"RTN","IBCBB2",141,0)
 ;
"RTN","IBCBB2",142,0)
 I '$D(^TMP($J,"LMD")) D
"RTN","IBCBB2",143,0)
 . D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCBB2",144,0)
 . S ^TMP($J,"LMD")=""
"RTN","IBCBB2",145,0)
 . S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  I +IBXSAVE("OCC",Z)=10 S ^TMP($J,"LMD")=1 Q
"RTN","IBCBB2",146,0)
 ;
"RTN","IBCBB2",147,0)
 I '^TMP($J,"LMD") S IBI=0 F  S IBI=$O(IBARR(IBI))  Q:'IBI  D  Q:'IBN
"RTN","IBCBB2",148,0)
 . N Z,Z1,ZC
"RTN","IBCBB2",149,0)
 . S IBDX=$S($G(IBFT)'=2:+IBARR(IBI),1:IBI)
"RTN","IBCBB2",150,0)
 . S ZC=$$ICD9^IBACSV(IBDX,$$BDATE^IBACSV(IBIFN)),Z=$E(ZC,1,3),Z1=$E(Z,2,3) ; Pregnancy Dx exists
"RTN","IBCBB2",151,0)
 . I $P(ZC,U,19)=1,$S(Z'<630&(Z<678):1,$E(Z)="V":$S(Z1'<22&(Z1<25):1,1:Z1'<27&(Z1<28)),1:0) S IBN=0 ; ICD-9 Dx
"RTN","IBCBB2",152,0)
 . I $P(ZC,U,19)=30,$S(Z?1"O"2N:1,Z="O9A":1,$E(Z)="Z"&(Z1'<34)&(Z1<40):1,Z="Z3A":1,1:0) S IBN=0 ; ICD-10 Dx
"RTN","IBCBB2",153,0)
 ;
"RTN","IBCBB2",154,0)
OCC10Q K ^TMP($J,"LMD")
"RTN","IBCBB2",155,0)
 Q IBN
"RTN","IBCBB2",156,0)
 ;
"RTN","IBCCC2")
0^15^B151138395^B139322972
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155,296,320,348,349,371,400,433,432,447,516,577,592,608,623**;21-MAR-94;Build 70
"RTN","IBCCC2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ; NOTE:  any new or changed data nodes may also need to be updated in IBNCPDP5
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 ; MRD;IB*2.0*516 - Added "In7" nodes.
"RTN","IBCCC2",14,0)
 F I="I1","I17","I2","I27","I3","I37","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",15,0)
 ;
"RTN","IBCCC2",16,0)
 ;move top level data node. ;Do not move 'TX' node EXCEPT piece 8 (added with IB*2.0*432)
"RTN","IBCCC2",17,0)
 ;F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",18,0)
 ; add new data nodes introduced with IB*2.0*432
"RTN","IBCCC2",19,0)
 ; vd - IB*2.0*623 - Added "M2".
"RTN","IBCCC2",20,0)
 F I="TX","U","U1","U2","U3","U4","U5","U6","U7","U8","UF2","UF3","UF31","UF32","C","M","M2" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",21,0)
 ;
"RTN","IBCCC2",22,0)
 ;move multiple level data
"RTN","IBCCC2",23,0)
 ;F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",24,0)
 ; add new data nodes introduced with IB*2.0*447 BI
"RTN","IBCCC2",25,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV","U9" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",26,0)
 ;
"RTN","IBCCC2",27,0)
 ;JWS;IB*2.0*592;add new Dental Claim fields; IA# 3820
"RTN","IBCCC2",28,0)
 I $D(^DGCR(399,IBIFN1,"DEN")) S ^DGCR(399,IBIFN,"DEN")=^DGCR(399,IBIFN1,"DEN")
"RTN","IBCCC2",29,0)
 I $D(^DGCR(399,IBIFN1,"DEN1",0)) S ^DGCR(399,IBIFN,"DEN1",0)=^DGCR(399,IBIFN1,"DEN1",0) D
"RTN","IBCCC2",30,0)
 . S K=0 F  S K=$O(^DGCR(399,IBIFN1,"DEN1",K)) Q:'K  S ^DGCR(399,IBIFN,"DEN1",K,0)=^DGCR(399,IBIFN1,"DEN1",K,0)
"RTN","IBCCC2",31,0)
 I $D(^DGCR(399,IBIFN1,"DEN2")) S ^DGCR(399,IBIFN,"DEN2")=^DGCR(399,IBIFN1,"DEN2")
"RTN","IBCCC2",32,0)
 ;
"RTN","IBCCC2",33,0)
 ; IB*2.0*432  ADDED IBSILENT flag so that this can be processed in background
"RTN","IBCCC2",34,0)
 D FTPRV^IBCEU5(IBIFN,$G(IBSILENT)) ; Ask change prov type if form type not the same
"RTN","IBCCC2",35,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",36,0)
 ;
"RTN","IBCCC2",37,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",38,0)
 ;
"RTN","IBCCC2",39,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",40,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",41,0)
 ;
"RTN","IBCCC2",42,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",43,0)
 ;
"RTN","IBCCC2",44,0)
STEP6 N IBGOEND
"RTN","IBCCC2",45,0)
 ;JWS;IB*2.0*623v24;need to identify valid duplicate
"RTN","IBCCC2",46,0)
 I $G(IBCNCRD)=1 D
"RTN","IBCCC2",47,0)
 . N DA,DR,DIE,X,Y
"RTN","IBCCC2",48,0)
 . S DA=IBIFN,DIE="^DGCR(399,",DR="23////1" D ^DIE
"RTN","IBCCC2",49,0)
 . Q
"RTN","IBCCC2",50,0)
 ; need to kill CRD flag prior to entering billing screens in case a copy for corresponding claim is needed
"RTN","IBCCC2",51,0)
 K IBCNCRD
"RTN","IBCCC2",52,0)
 ; don't call IB bill edit screens if this is non-MRA background processing
"RTN","IBCCC2",53,0)
 I $G(IBSTSM)=1 G END
"RTN","IBCCC2",54,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",55,0)
 ;
"RTN","IBCCC2",56,0)
 ;
"RTN","IBCCC2",57,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY,IBCNCRD,IBKEY
"RTN","IBCCC2",58,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",59,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
 ;
"RTN","IBCCC2",62,0)
 ;
"RTN","IBCCC2",63,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",64,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",65,0)
 ; if the user came from CBW->PC and this is a non-MRA claim w/a paper EOB, set force print flag IB*2.0*432
"RTN","IBCCC2",66,0)
 ; also, if the user came from CBW->PC and this is a non-MRA claim and the only EEOB we have has filing errors, set force print flag
"RTN","IBCCC2",67,0)
 I $G(IBMRANOT)=1,$$COBN^IBCEF(IBIFN)>1,$G(IBFROM)=2 D 
"RTN","IBCCC2",68,0)
 .I $G(IBDA)="" D FORCEPRT^IBCAPP($G(IBIFN)) Q
"RTN","IBCCC2",69,0)
 .I $D(^IBM(361.1,IBDA,"ERR")) D FORCEPRT^IBCAPP($G(IBIFN)) Q
"RTN","IBCCC2",70,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",71,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",72,0)
 S IBAC=1
"RTN","IBCCC2",73,0)
 D ^IBCB1
"RTN","IBCCC2",74,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",75,0)
IBSCX ;
"RTN","IBCCC2",76,0)
 Q
"RTN","IBCCC2",77,0)
 ;
"RTN","IBCCC2",78,0)
 ;
"RTN","IBCCC2",79,0)
TX F J=8 I $P(IBND("TX"),"^",J)]"" S $P(^DGCR(399,IBIFN,"TX"),"^",J)=$P(IBND("TX"),"^",J)
"RTN","IBCCC2",80,0)
 Q
"RTN","IBCCC2",81,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",82,0)
 Q
"RTN","IBCCC2",83,0)
U1 F J=1:1:3,15 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",84,0)
 Q
"RTN","IBCCC2",85,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",86,0)
 Q
"RTN","IBCCC2",87,0)
U3 F J=1:1:11 I $P(IBND("U3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U3"),"^",J)=$P(IBND("U3"),"^",J)
"RTN","IBCCC2",88,0)
 Q
"RTN","IBCCC2",89,0)
UF2 F J=1,3 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",90,0)
 Q
"RTN","IBCCC2",91,0)
UF3 F J=4:1:6 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",92,0)
 Q
"RTN","IBCCC2",93,0)
U4 F J=1:1:14 I $P(IBND("U4"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U4"),"^",J)=$P(IBND("U4"),"^",J)
"RTN","IBCCC2",94,0)
 Q
"RTN","IBCCC2",95,0)
U5 F J=1:1:6 I $P(IBND("U5"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U5"),"^",J)=$P(IBND("U5"),"^",J)
"RTN","IBCCC2",96,0)
 Q
"RTN","IBCCC2",97,0)
U6 F J=1:1:6 I $P(IBND("U6"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U6"),"^",J)=$P(IBND("U6"),"^",J)
"RTN","IBCCC2",98,0)
 Q
"RTN","IBCCC2",99,0)
U7 F J=1:1:5 I $P(IBND("U7"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U7"),"^",J)=$P(IBND("U7"),"^",J)
"RTN","IBCCC2",100,0)
 Q
"RTN","IBCCC2",101,0)
U8 F J=1:1:3 I $P(IBND("U8"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U8"),"^",J)=$P(IBND("U8"),"^",J)
"RTN","IBCCC2",102,0)
 Q
"RTN","IBCCC2",103,0)
UF31 F J=3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",104,0)
 Q
"RTN","IBCCC2",105,0)
UF32 F J=1:1:3 I $P(IBND("UF32"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF32"),"^",J)=$P(IBND("UF32"),"^",J)
"RTN","IBCCC2",106,0)
 Q
"RTN","IBCCC2",107,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",108,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",109,0)
 Q
"RTN","IBCCC2",110,0)
M F J=1:1:9,11:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",111,0)
 Q
"RTN","IBCCC2",112,0)
 ; vd - IB*2.0*623 - Added the following module of code.
"RTN","IBCCC2",113,0)
M2 F J=1:1:6 I $P(IBND("M2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M2"),"^",J)=$P(IBND("M2"),"^",J)
"RTN","IBCCC2",114,0)
 Q
"RTN","IBCCC2",115,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",116,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",117,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",118,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",119,0)
 Q
"RTN","IBCCC2",120,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",121,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",122,0)
 Q
"RTN","IBCCC2",123,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",124,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",125,0)
 Q
"RTN","IBCCC2",126,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",127,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",128,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",129,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",130,0)
 Q
"RTN","IBCCC2",131,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",132,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:16 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",133,0)
 Q
"RTN","IBCCC2",134,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",135,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",136,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP1")=$G(^(1)),IBND("CP2")=$G(^(2)),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",137,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",138,0)
 . ; IB*2.0*432 add new 1 node
"RTN","IBCCC2",139,0)
 . ; MRD;IB*2.0*516 - Added pieces 7 & 8 (NDC, Units) to 1-node.
"RTN","IBCCC2",140,0)
 . F K=1:1:8 S $P(^DGCR(399,IBIFN,I,J,1),"^",K)=$P(IBND("CP1"),"^",K)
"RTN","IBCCC2",141,0)
 . ; WCJ;IB*2.0*577 - Added piece 1 (UNITS/BASIS OF MEASUREMENT) to 2-node.
"RTN","IBCCC2",142,0)
 . F K=1:1:1 S $P(^DGCR(399,IBIFN,I,J,2),"^",K)=$P(IBND("CP2"),"^",K)
"RTN","IBCCC2",143,0)
 . ; esg - 11/2/06 - IB*2*348 - 50.09 field was added - AUX piece [9]
"RTN","IBCCC2",144,0)
 . I IBND("CP-AUX")'="" F K=1:1:9 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",145,0)
 . ; IB*2.0*432 add new LNPRV multiple
"RTN","IBCCC2",146,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"LNPRV",0)) S ^DGCR(399,IBIFN,I,J,"LNPRV",0)=^DGCR(399,IBIFN1,I,J,"LNPRV",0) D
"RTN","IBCCC2",147,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"LNPRV",K)) Q:'K  D
"RTN","IBCCC2",148,0)
 ... S ^DGCR(399,IBIFN,I,J,"LNPRV",K,0)=^DGCR(399,IBIFN1,I,J,"LNPRV",K,0)
"RTN","IBCCC2",149,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",150,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",151,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",152,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",153,0)
 . ;JWS;IB*2.0*592;add new Dental claim form fields
"RTN","IBCCC2",154,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"DEN")) S ^DGCR(399,IBIFN,I,J,"DEN")=^DGCR(399,IBIFN1,I,J,"DEN")
"RTN","IBCCC2",155,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"DEN1",0)) S ^DGCR(399,IBIFN,I,J,"DEN1",0)=^DGCR(399,IBIFN1,I,J,"DEN1",0) D
"RTN","IBCCC2",156,0)
 .. N IBDL
"RTN","IBCCC2",157,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"DEN1",K)) Q:'K  D
"RTN","IBCCC2",158,0)
 ... S ^DGCR(399,IBIFN,I,J,"DEN1",K,0)=^DGCR(399,IBIFN1,I,J,"DEN1",K,0)
"RTN","IBCCC2",159,0)
 ... ;JWS;IB*2.0*592;If DENT file 228.2 link, remove it from old invoice.
"RTN","IBCCC2",160,0)
 ... S IBDL=$P($G(^DGCR(399,IBIFN1,I,J,"DEN1",K,0)),"^",7)
"RTN","IBCCC2",161,0)
 ... I IBDL K ^DGCR(399,"ADT",IBDL,IBIFN1)
"RTN","IBCCC2",162,0)
 . ;JRA;IB*2.0*608 Add CMN info - Node 'CMN-10126' contains data specific to only the CMS-10126 form, node 'CMN-484' contains data specific to
"RTN","IBCCC2",163,0)
 . ; only the CMN-484 form, and node 'CMN' contains data common to both forms.
"RTN","IBCCC2",164,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"CMN")) S ^DGCR(399,IBIFN,I,J,"CMN")=^DGCR(399,IBIFN1,I,J,"CMN")
"RTN","IBCCC2",165,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"CMN-10126")) S ^DGCR(399,IBIFN,I,J,"CMN-10126")=^DGCR(399,IBIFN1,I,J,"CMN-10126")
"RTN","IBCCC2",166,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"CMN-484")) S ^DGCR(399,IBIFN,I,J,"CMN-484")=^DGCR(399,IBIFN1,I,J,"CMN-484")
"RTN","IBCCC2",167,0)
CP1 N DGI,IBCOD
"RTN","IBCCC2",168,0)
 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",169,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",170,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",171,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",172,0)
 Q
"RTN","IBCCC2",173,0)
 ;
"RTN","IBCCC2",174,0)
PRV ; Copy providers for cloned claim
"RTN","IBCCC2",175,0)
 N Z,Z0,CNT
"RTN","IBCCC2",176,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19),CNT=0
"RTN","IBCCC2",177,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",178,0)
 . I $$GETNPI^IBCEF73A($P(^DGCR(399,IBIFN1,I,J,0),U,2))="" Q  ;Don't file provider if no NPI - IB*2*516
"RTN","IBCCC2",179,0)
 . S CNT=CNT+1,^DGCR(399,IBIFN,I,CNT,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",180,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,CNT,0),U)=(Z0+1)
"RTN","IBCCC2",181,0)
 I CNT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0),$P(^DGCR(399,IBIFN,I,0),U,3)=CNT,$P(^DGCR(399,IBIFN,I,0),U,4)=CNT
"RTN","IBCCC2",182,0)
 Q
"RTN","IBCCC2",183,0)
 ;
"RTN","IBCCC2",184,0)
U9 ; Added for new data elements in IB*2.0*447 BI
"RTN","IBCCC2",185,0)
 M ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",186,0)
 Q
"RTN","IBCCC2",187,0)
 ;
"RTN","IBCCC2",188,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",189,0)
 Q
"RTN","IBCCC2",190,0)
 ;
"RTN","IBCCC2",191,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",192,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",193,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",194,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",195,0)
 K DGPROCDT
"RTN","IBCCC2",196,0)
 Q
"RTN","IBCCC2",197,0)
 ;
"RTN","IBCCC2",198,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",199,0)
 N IBMAED D SAVERC(IBIFN,.IBMAED)  ; IB*2.0*447 BI - Save the value of piece 16 of each RC node before re-indexing.
"RTN","IBCCC2",200,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",201,0)
 D RESTRC(IBIFN,.IBMAED)  ; IB*2.0*447 BI - Restore the value of piece 16 of each RC node before re-indexing.
"RTN","IBCCC2",202,0)
 Q
"RTN","IBCCC2",203,0)
 ;
"RTN","IBCCC2",204,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",205,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",206,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",207,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",208,0)
 ;
"RTN","IBCCC2",209,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",210,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",211,0)
 Q
"RTN","IBCCC2",212,0)
 ;
"RTN","IBCCC2",213,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",214,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",215,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",216,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",217,0)
 ;
"RTN","IBCCC2",218,0)
 N I,IBFRMTYP,IBTAXLST
"RTN","IBCCC2",219,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",220,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",221,0)
 ;
"RTN","IBCCC2",222,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",223,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",224,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",225,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",226,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",227,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",228,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",229,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",230,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",231,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",232,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",233,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",234,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",235,0)
 . Q
"RTN","IBCCC2",236,0)
 ;
"RTN","IBCCC2",237,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",238,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",239,0)
 ;
"RTN","IBCCC2",240,0)
 ; IB*2.0*211
"RTN","IBCCC2",241,0)
 ; save off Form Type
"RTN","IBCCC2",242,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",243,0)
 ; Save off Taxonomies for providers.
"RTN","IBCCC2",244,0)
 S I=0 F  S I=$O(^DGCR(399,IBIFN,"PRV",I)) Q:'I  S IBTAXLST(I)=$P($G(^DGCR(399,IBIFN,"PRV",I,0)),U,15)
"RTN","IBCCC2",245,0)
 ;
"RTN","IBCCC2",246,0)
 ;vd - IB*2.0*623 (US4100) - Added the following to correctly process MRAs for Alternate Payer ID.
"RTN","IBCCC2",247,0)
 I $D(^DGCR(399,IBIFN,"M2")) S IBND("M2")=^DGCR(399,IBIFN,"M2")
"RTN","IBCCC2",248,0)
 ;
"RTN","IBCCC2",249,0)
 ; fire xrefs set logic
"RTN","IBCCC2",250,0)
 D INDEX
"RTN","IBCCC2",251,0)
 ;
"RTN","IBCCC2",252,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",253,0)
 ;   creating CMS-1500 claim from CTCOPY1^IBCCCB
"RTN","IBCCC2",254,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",255,0)
 ;
"RTN","IBCCC2",256,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",257,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",258,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",259,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",260,0)
 ;
"RTN","IBCCC2",261,0)
 ;vd - Added the following "M2" code for IB*2.0*623 (US4100)
"RTN","IBCCC2",262,0)
 ; Restore Claim Alternate Payer ID data fields since triggers in fields 140-145
"RTN","IBCCC2",263,0)
 ;   will overwrite the correct value when CLONing or processing the MRA/EOB. / vd - Added for IB*2.0*623 (US4100)
"RTN","IBCCC2",264,0)
 I $TR($G(IBND("M2")),U)]"" D  K IBND("M2")
"RTN","IBCCC2",265,0)
 . N DA,DIE,DR,II,JJ
"RTN","IBCCC2",266,0)
 . F II=1:1:6 S JJ=$P($G(IBND("M2")),U,II),DA=IBIFN,DIE="^DGCR(399,",DR=(139+II)_"////"_JJ D ^DIE
"RTN","IBCCC2",267,0)
 ;
"RTN","IBCCC2",268,0)
 ; Only if cloning, then restore Taxonomies in fields 243 and 244 and 252.
"RTN","IBCCC2",269,0)
 I '$G(IBINS),'$G(IBPRCOB) D
"RTN","IBCCC2",270,0)
 . S I=$P($G(IBND("U3")),U,2)
"RTN","IBCCC2",271,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,2) D
"RTN","IBCCC2",272,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="243////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",273,0)
 . ;
"RTN","IBCCC2",274,0)
 . S I=$P($G(IBND("U3")),U,3)
"RTN","IBCCC2",275,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,3) D
"RTN","IBCCC2",276,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="244////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",277,0)
 . ;
"RTN","IBCCC2",278,0)
 . S I=$P($G(IBND("U3")),U,11)
"RTN","IBCCC2",279,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,11) D
"RTN","IBCCC2",280,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="252////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",281,0)
 . Q
"RTN","IBCCC2",282,0)
 ;
"RTN","IBCCC2",283,0)
 ; Restore Taxonomies in field .15 in sub-file 399.0222.
"RTN","IBCCC2",284,0)
 S IBTAXLST=0 F  S IBTAXLST=$O(IBTAXLST(IBTAXLST)) Q:'IBTAXLST  D
"RTN","IBCCC2",285,0)
 . S I=IBTAXLST(IBTAXLST)
"RTN","IBCCC2",286,0)
 . I I=$P($G(^DGCR(399,IBIFN,"PRV",IBTAXLST,0)),U,15) Q  ; No change
"RTN","IBCCC2",287,0)
 . N DA,DIE,DR
"RTN","IBCCC2",288,0)
 . S DA(1)=IBIFN,DA=IBTAXLST
"RTN","IBCCC2",289,0)
 . S DIE="^DGCR(399,"_DA(1)_",""PRV"",",DR=".15////"_$S(I'="":I,1:"@")
"RTN","IBCCC2",290,0)
 . D ^DIE
"RTN","IBCCC2",291,0)
 . Q
"RTN","IBCCC2",292,0)
 ;
"RTN","IBCCC2",293,0)
 K IBCOB("TX")
"RTN","IBCCC2",294,0)
 Q
"RTN","IBCCC2",295,0)
 ;
"RTN","IBCCC2",296,0)
SAVERC(IBIFN,IBMAED)  ; IB*2.0*447 BI - Save the value of piece 16 of each RC node before re-indexing.
"RTN","IBCCC2",297,0)
 Q:$G(IBCTCOPY)=1  Q:$G(IBCTCOPY)=2
"RTN","IBCCC2",298,0)
 N IBCNT S IBCNT=0
"RTN","IBCCC2",299,0)
 Q:'$G(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCCC2",300,0)
 F  S IBCNT=$O(^DGCR(399,IBIFN,"RC",IBCNT)) Q:+IBCNT=0  D
"RTN","IBCCC2",301,0)
 . S IBMAED(IBCNT)=$P($G(^DGCR(399,IBIFN,"RC",IBCNT,0)),U,16)
"RTN","IBCCC2",302,0)
 Q
"RTN","IBCCC2",303,0)
 ;
"RTN","IBCCC2",304,0)
RESTRC(IBIFN,IBMAED)  ; IB*2.0*447 BI - Restore the value of piece 16 of each RC node after re-indexing.
"RTN","IBCCC2",305,0)
 Q:$G(IBCTCOPY)=1  Q:$G(IBCTCOPY)=2
"RTN","IBCCC2",306,0)
 N IBCNT S IBCNT=0
"RTN","IBCCC2",307,0)
 Q:'$G(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCCC2",308,0)
 F  S IBCNT=$O(IBMAED(IBCNT)) Q:+IBCNT=0  D
"RTN","IBCCC2",309,0)
 . S $P(^DGCR(399,IBIFN,"RC",IBCNT,0),U,16)=IBMAED(IBCNT)
"RTN","IBCCC2",310,0)
 Q
"RTN","IBCE")
0^44^B25961337^B25142847
"RTN","IBCE",1,0)
IBCE ;ALB/TMP - 837 EDI TRANSMISSION UTILITIES/NIGHTLY JOB ;22-JAN-96
"RTN","IBCE",2,0)
 ;;2.0;INTEGRATED BILLING;**137,283,296,371,623**;21-MAR-94;Build 70
"RTN","IBCE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCE",4,0)
EN ; Run all jobs needed for EDI processing nightly
"RTN","IBCE",5,0)
 ; including transmit bills waiting for extract, batches not sent,
"RTN","IBCE",6,0)
 N IBLAST,IBZ,IBZ0
"RTN","IBCE",7,0)
 D NOTSENT^IBCEBUL
"RTN","IBCE",8,0)
 D EN^IBCE837
"RTN","IBCE",9,0)
 D EN^IBCEMPRG      ; purge status messages from file 361
"RTN","IBCE",10,0)
 D PURGE^IBCEPTU    ; purge transmission detail and claims status data associated with test transmissions after 60 days
"RTN","IBCE",11,0)
 S IBLAST=$G(^IBA(364.2,"ALAST")),^IBA(364.2,"ALAST")=$$NOW^XLFDT()
"RTN","IBCE",12,0)
 ; Clean up ACOB xref in 364
"RTN","IBCE",13,0)
 S IBZ=0
"RTN","IBCE",14,0)
 F  S IBZ=$O(^IBA(364,"ACOB",IBZ)) Q:'IBZ  S IBZ0=0 F  S IBZ0=$O(^IBA(364,"ACOB",IBZ,IBZ0)) Q:'IBZ0  I '$$COBPOSS^IBCECOB(IBZ0) D UPDEDI^IBCEM(IBZ0,"N",1)
"RTN","IBCE",15,0)
 Q
"RTN","IBCE",16,0)
 ;
"RTN","IBCE",17,0)
EN1 ; Manual entry point for transmitting EDI bills
"RTN","IBCE",18,0)
 N DIR,X,Y,IBLAST,IBTASK,IBOPTX,DTOUT,DUOUT
"RTN","IBCE",19,0)
 I '$$MGCHK(1) G EN1Q
"RTN","IBCE",20,0)
 S DIR("A")="Select transmit option: ",DIR("B")="S",DIR(0)="SAM^A:Transmit (A)LL bills in READY FOR EXTRACT status;S:Transmit only (S)ELECTED bills"
"RTN","IBCE",21,0)
 D ^DIR K DIR
"RTN","IBCE",22,0)
 I $D(DTOUT)!$D(DUOUT) G EN1Q
"RTN","IBCE",23,0)
 S IBOPTX=Y
"RTN","IBCE",24,0)
 I Y="A" D  G EN1Q
"RTN","IBCE",25,0)
 . S DIR("A",1)="This option will run a job to transmit ALL bills ready for EDI transmission"
"RTN","IBCE",26,0)
 . S DIR("A",2)="This option's last scheduled run was "_$$FMTE^XLFDT($G(^IBA(364.2,"ALAST")),2)
"RTN","IBCE",27,0)
 . S DIR("A",3)=" "
"RTN","IBCE",28,0)
 . S DIR("A")="Are you absolutely sure this is what you want to do? "
"RTN","IBCE",29,0)
 . S DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCE",30,0)
 . Q:'Y
"RTN","IBCE",31,0)
 . S DIR(0)="YA",DIR("A",1)=" "
"RTN","IBCE",32,0)
 . S DIR("A",2)="Transmission of ALL bills will be run now"
"RTN","IBCE",33,0)
 . S DIR("A")="Is this OK? ",DIR("B")="NO"
"RTN","IBCE",34,0)
 . D ^DIR K DIR
"RTN","IBCE",35,0)
 . Q:'Y
"RTN","IBCE",36,0)
 . D EN1^IBCE837B(.IBTASK)
"RTN","IBCE",37,0)
 . I $G(IBTASK) D
"RTN","IBCE",38,0)
 .. S DIR("A",1)="Task # for this job is: "_IBTASK
"RTN","IBCE",39,0)
 . E  D
"RTN","IBCE",40,0)
 .. I $G(IBTASK)'="" S DIR("A",1)="Error encountered in tasking job - check IRM for reported errors"
"RTN","IBCE",41,0)
 .. S DIR(0)="EA",DIR("A")=" Press RETURN to continue " W !! D ^DIR K DIR
"RTN","IBCE",42,0)
 I IBOPTX="S" D SUB1^IBCEM03 G EN1Q
"RTN","IBCE",43,0)
EN1Q Q
"RTN","IBCE",44,0)
 ;
"RTN","IBCE",45,0)
RESUB(IB364) ; Manually resubmit bill for transmission (ien file 364 = IB364)
"RTN","IBCE",46,0)
 N DIR,X,Y,IBBTCH,DTOUT,DUOUT,IBIFN,NEW364
"RTN","IBCE",47,0)
 I '$$MGCHK(1) G RESUBQ
"RTN","IBCE",48,0)
 S IBIFN=+$P($G(^IBA(364,+$G(IB364),0)),U,1) I 'IBIFN G RESUBQ
"RTN","IBCE",49,0)
 S IBBTCH=""
"RTN","IBCE",50,0)
 W ! S DIR(0)="SA^I:IMMEDIATE TRANSMIT;L:TRANSMIT LATER WITH REST OF READY FOR EXTRACT BILLS",DIR("A")="TRANSMIT (I)MMEDIATELY OR (L)ATER?: ",DIR("B")="L"
"RTN","IBCE",51,0)
 S DIR("?",1)="IF YOU CHOOSE TO TRANSMIT IMMEDIATELY, THE BILL'S DATA WILL BE BATCHED BY",DIR("?",2)=" ITSELF AND SENT OUT IMMEDIATELY.  IF YOU CHOOSE TO TRANSMIT LATER, THE"
"RTN","IBCE",52,0)
 S DIR("?",3)="  BILL'S TRANSMISSION STATUS WILL BE RESET TO 'READY FOR EXTRACT' AND THE BILL'S",DIR("?",4)="  DATA WILL BE EXTRACTED THE NEXT TIME A GENERAL TRANSMISSION OF YOUR BILLS",DIR("?")="  IN READY TO EXTRACT STATUS OCCURS"
"RTN","IBCE",53,0)
 D ^DIR K DIR
"RTN","IBCE",54,0)
 I $D(DTOUT)!$D(DUOUT) G RESUBQ
"RTN","IBCE",55,0)
 ;
"RTN","IBCE",56,0)
 ; immediate retransmission of claim
"RTN","IBCE",57,0)
 I Y="I" D  G RESUBQ
"RTN","IBCE",58,0)
 . S NEW364=$$ADDTBILL^IBCB1(IBIFN)    ; Add a new transmission record
"RTN","IBCE",59,0)
 . I '$P(NEW364,U,3) D  Q
"RTN","IBCE",60,0)
 .. S DIR("A",1)="FAILED TO ADD A NEW EDI TRANSMISSION",DIR(0)="EA",DIR("A")="PRESS ENTER TO CONTINUE " W ! D ^DIR K DIR
"RTN","IBCE",61,0)
 .. Q
"RTN","IBCE",62,0)
 . K ^TMP("IBONE",$J),^TMP("IBSELX",$J),^TMP("IBCE-BATCH",$J)
"RTN","IBCE",63,0)
 . S ^TMP("IBONE",$J,+NEW364)="",^TMP("IBONE",$J)=0,^TMP("IBSELX",$J)=""
"RTN","IBCE",64,0)
 . D ONE^IBCE837
"RTN","IBCE",65,0)
 . S IBBTCH=$O(^TMP("IBCE-BATCH",$J,0))                     ; external batch#
"RTN","IBCE",66,0)
 . I IBBTCH'="" S IBBTCH=+$G(^TMP("IBCE-BATCH",$J,IBBTCH))  ; internal batch#
"RTN","IBCE",67,0)
 . K ^TMP("IBONE",$J),^TMP("IBSELX",$J),^TMP("IBCE-BATCH",$J)
"RTN","IBCE",68,0)
 . ;
"RTN","IBCE",69,0)
 . I 'IBBTCH D
"RTN","IBCE",70,0)
 .. S DIR("A",1)="BILL NOT RESUBMITTED - CHECK ALERTS/MAIL FOR DETAILS"
"RTN","IBCE",71,0)
 . E  D
"RTN","IBCE",72,0)
 .. ;JWS;IB*2.0*623v24;add setting resubmission flag
"RTN","IBCE",73,0)
 .. D SETSUB^IBCE837I(NEW364,1)
"RTN","IBCE",74,0)
 .. N DIE,DR,DA
"RTN","IBCE",75,0)
 .. D UPDEDI^IBCEM(IB364,"R")   ; update EDI files for old transmission
"RTN","IBCE",76,0)
 .. S DIE="^IBA(364,",DR=".06////"_+IBBTCH,DA=IB364 D ^DIE
"RTN","IBCE",77,0)
 .. S DIR("A",1)="BILL RESUBMITTED IN BATCH #"_$P($G(^IBA(364.1,+IBBTCH,0)),U,1)
"RTN","IBCE",78,0)
 . S DIR(0)="EA",DIR("A")="PRESS ENTER TO CONTINUE " W ! D ^DIR K DIR
"RTN","IBCE",79,0)
 . Q
"RTN","IBCE",80,0)
 ;
"RTN","IBCE",81,0)
 ; Later retransmission of claim
"RTN","IBCE",82,0)
 D UPDEDI^IBCEM(IB364,"R")      ; update EDI files for old transmission record
"RTN","IBCE",83,0)
 S Y=$$ADDTBILL^IBCB1(IBIFN)    ; Add a new transmission record
"RTN","IBCE",84,0)
 ;JWS;IB*2.0*623v24;add setting resubmission flag
"RTN","IBCE",85,0)
 D SETSUB^IBCE837I(+Y,1)
"RTN","IBCE",86,0)
 S DIR("A",1)="BILL'S TRANSMISSION STATUS RESET TO 'READY TO EXTRACT'"
"RTN","IBCE",87,0)
 S DIR(0)="EA",DIR("A")="PRESS ENTER TO CONTINUE " W ! D ^DIR K DIR
"RTN","IBCE",88,0)
 ;
"RTN","IBCE",89,0)
RESUBQ Q
"RTN","IBCE",90,0)
 ;
"RTN","IBCE",91,0)
MGCHK(DSP) ; Returns 1 if mail group IB EDI has at least 1 local member,
"RTN","IBCE",92,0)
 ; 0 if none found
"RTN","IBCE",93,0)
 ; DSP = flag that if =1, displays error message
"RTN","IBCE",94,0)
 N IB
"RTN","IBCE",95,0)
 S IB=$$GOTLOCAL^XMXAPIG("IB EDI")
"RTN","IBCE",96,0)
 I 'IB,$G(DSP) D
"RTN","IBCE",97,0)
 . ; No local members in mail group for EDI messages
"RTN","IBCE",98,0)
 . S DIR("A",1)="YOU MUST HAVE AT LEAST 1 MEMBER IN THE 'IB EDI' MAIL GROUP TO TRANSMIT A BILL",DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","IBCE",99,0)
 . S DIR(0)="EA" D ^DIR K DIR
"RTN","IBCE",100,0)
 Q IB
"RTN","IBCE",101,0)
 ;
"RTN","IBCE837")
0^45^B93949653^B88399984
"RTN","IBCE837",1,0)
IBCE837 ;ALB/TMP - OUTPUT FOR 837 TRANSMISSION ;8/6/03 10:48am
"RTN","IBCE837",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,197,232,296,349,547,592,623**;21-MAR-94;Build 70
"RTN","IBCE837",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCE837",4,0)
 ;
"RTN","IBCE837",5,0)
EN ; Auto-txmt
"RTN","IBCE837",6,0)
 N IBSITE8,IBRUN,X,X1,X2,DA,DIE,DR
"RTN","IBCE837",7,0)
 K ^TMP("IBRESUBMIT",$J),^TMP("IBONE",$J)
"RTN","IBCE837",8,0)
 S IBSITE8=$G(^IBE(350.9,1,8)),IBRUN=1
"RTN","IBCE837",9,0)
 Q:'$P(IBSITE8,U,3)!'$P(IBSITE8,U,10)
"RTN","IBCE837",10,0)
 I '$$MGCHK^IBCE(0) Q
"RTN","IBCE837",11,0)
 I $P(IBSITE8,U,5) D  Q:'IBRUN
"RTN","IBCE837",12,0)
 . S X2=+$P(IBSITE8,U,3),X1=$P(IBSITE8,U,5) D C^%DTC
"RTN","IBCE837",13,0)
 . I X>DT S IBRUN=0 Q
"RTN","IBCE837",14,0)
 D QTXMT^IBCE837B(IBSITE8)
"RTN","IBCE837",15,0)
 I $P(IBSITE8,U,5)'=DT S DIE="^IBE(350.9,",DR="8.05////"_DT,DA=1 D ^DIE
"RTN","IBCE837",16,0)
 Q
"RTN","IBCE837",17,0)
 ;
"RTN","IBCE837",18,0)
SETUP(IBEXTRP) ; Txmn set up
"RTN","IBCE837",19,0)
 ; IBEXTRP=1 prnt 837 data
"RTN","IBCE837",20,0)
 N IB
"RTN","IBCE837",21,0)
 K ^TMP("IBXMSG",$J),^TMP("IBTXMT",$J),^TMP("IBHDR",$J),^TMP("IBHDR1",$J),^TMP("IBXERR",$J),IBXERR,^TMP("IBXINS",$J),^TMP("IBTX",$J),^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCE837",22,0)
 ; Chk extract running
"RTN","IBCE837",23,0)
 Q:$G(IBEXTRP)
"RTN","IBCE837",24,0)
 ; Chk resubmit tst
"RTN","IBCE837",25,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,4) S ^TMP("IBEDI_TEST_BATCH",$J)=1 Q
"RTN","IBCE837",26,0)
 I '$D(^TMP("IBRESUBMIT",$J)),'$D(^TMP("IBONE",$J)) D  Q:$D(IBXERR)
"RTN","IBCE837",27,0)
 . L +^IBA(364,0):5
"RTN","IBCE837",28,0)
 . I '$T D  Q
"RTN","IBCE837",29,0)
 .. S IBXERR=1,^TMP("IBXERR",$J,1)="A PREVIOUS EDI EXTRACT IS RUNNING - ANOTHER CANNOT BE STARTED "_$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","IBCE837",30,0)
 ;
"RTN","IBCE837",31,0)
 I $D(^TMP("IBRESUBMIT",$J)) D  Q:$D(IBXERR)
"RTN","IBCE837",32,0)
 .N Z,Z0
"RTN","IBCE837",33,0)
 .S Z0=$P($G(^TMP("IBRESUBMIT",$J)),U,2),Z=$$LOCK^IBCEM02(364.1,Z0)
"RTN","IBCE837",34,0)
 .I 'Z D
"RTN","IBCE837",35,0)
 ..S IBXERR=1
"RTN","IBCE837",36,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",1)="Another user is currently processing batch "_Z0_".  Batch NOT resubmitted."
"RTN","IBCE837",37,0)
 .I 'Z D
"RTN","IBCE837",38,0)
 ..S IBXERR=1
"RTN","IBCE837",39,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",1)="Another user is currently processing batch "_Z0_".  Batch NOT resubmitted."
"RTN","IBCE837",40,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",2)="Resubmit was attempted by: "_$P($G(^VA(200,DUZ,0)),U)_" ("_DUZ_")"
"RTN","IBCE837",41,0)
 I $D(^TMP("IBONE",$J)) S IB=$G(^($J))+1 D  Q:$D(IBXERR)
"RTN","IBCE837",42,0)
 .N Z,Z0
"RTN","IBCE837",43,0)
 .S Z0=$O(^TMP("IBONE",$J,"")),Z=$$LOCK^IBCEM02(364,Z0)
"RTN","IBCE837",44,0)
 .I 'Z D
"RTN","IBCE837",45,0)
 ..S IBXERR=1
"RTN","IBCE837",46,0)
 ..S ^TMP("IBONE",$J,"IBXERR",1)="Another user is currently processing bill "_$P($G(^DGCR(399,+$G(^IBA(364,Z0,0)),0)),U)_".  Bill NOT "_$P("^re",U,IB)_"submitted."
"RTN","IBCE837",47,0)
 ..S ^TMP("IBONE",$J,"IBXERR",2)=$P("S^Res",U,IB)_"ubmit was attempted by: "_$P($G(^VA(200,DUZ,0)),U)_" ("_DUZ_")"
"RTN","IBCE837",48,0)
 Q
"RTN","IBCE837",49,0)
 ;
"RTN","IBCE837",50,0)
FIND ; Find/sort by CMS-1500/UB-04, test/live, ins ID # & div
"RTN","IBCE837",51,0)
 ;
"RTN","IBCE837",52,0)
 N IBX,IB0,IBCBH,IBINS,IBXIEN,IBNID,IBGBL,IBTXTEST,IBBTYP,IB837R,IBDIV,IBNOTX,IBTXST,IBTEST,IBSEC,IBNF
"RTN","IBCE837",53,0)
 K ^TMP($J,"BILL"),^TMP("IBICT",$J)
"RTN","IBCE837",54,0)
 ;
"RTN","IBCE837",55,0)
 S IBGBL=$S($D(^TMP("IBONE",$J)):"^TMP(""IBONE"","_$J_")",$D(^TMP("IBSELX",$J)):"^TMP(""IBSELX"","_$J_")",'$D(^TMP("IBRESUBMIT",$J)):"^IBA(364,""ASTAT"",""X"")",1:"^TMP(""IBRESUBMIT"","_$J_")")
"RTN","IBCE837",56,0)
 S IBTEST=+$G(^TMP("IBEDI_TEST_BATCH",$J))
"RTN","IBCE837",57,0)
 ;
"RTN","IBCE837",58,0)
 S IBX="" F  S IBX=$O(@IBGBL@(IBX)) Q:'IBX  D
"RTN","IBCE837",59,0)
 .;IB 547, If resubmitting a locally printed claim to test via RCB, there is no entry in 364 yet, so pass the NEW flag
"RTN","IBCE837",60,0)
 .;S IBXIEN=+$G(^IBA(364,IBX,0)),IB0=$G(^DGCR(399,IBXIEN,0))
"RTN","IBCE837",61,0)
 .;S IBTXST=$$TXMT^IBCEF4(IBXIEN,.IBNOTX)
"RTN","IBCE837",62,0)
 .S IBXIEN=+$G(^IBA(364,IBX,0)),IBNF=""
"RTN","IBCE837",63,0)
 .I $G(IBLOC)=1,$G(IBTYPPTC)="TEST" S IBXIEN=IBX,IBNF=1
"RTN","IBCE837",64,0)
 .S IB0=$G(^DGCR(399,IBXIEN,0))
"RTN","IBCE837",65,0)
 .S IBTXST=$$TXMT^IBCEF4(IBXIEN,.IBNOTX,IBNF)
"RTN","IBCE837",66,0)
 .Q:IBTXST=""  ; no txmt
"RTN","IBCE837",67,0)
 .Q:$S(IB0="":1,$P(IB0,U,13)>4&'IBTEST:1,1:$D(^TMP($J,"BILL",$P(IB0,U))))
"RTN","IBCE837",68,0)
 .S IBCBH=$P(IB0,U,21) S:"PST"'[IBCBH!(IBCBH="") IBCBH="P"
"RTN","IBCE837",69,0)
 .S IBINS=$P($G(^DGCR(399,IBXIEN,"I"_($F("PST",IBCBH)-1))),U)
"RTN","IBCE837",70,0)
 .S IBTXTEST=$S(IBTEST:2,1:+$$TEST^IBCEF4(IBXIEN))
"RTN","IBCE837",71,0)
 .;JWS:IB*2.0*592:US131 - EDI Dental Claim
"RTN","IBCE837",72,0)
 .S IBBTYP=$P("P^I^D",U,$S($$FT^IBCEF(IBXIEN)=7:3,1:($$FT^IBCEF(IBXIEN)=3)+1))_"-"_IBTXTEST
"RTN","IBCE837",73,0)
 .Q:$$TESTPT^IBCEU($P(IB0,U,2))&'IBTXTEST  ;Test pt
"RTN","IBCE837",74,0)
 .;
"RTN","IBCE837",75,0)
 .I IBTXTEST=1 D TESTLIM^IBCE837A(.IBINS)
"RTN","IBCE837",76,0)
 .;
"RTN","IBCE837",77,0)
 .I IBINS,$P(IB0,U,2) D
"RTN","IBCE837",78,0)
 .. D SETVAR^IBCE837A(IBXIEN,IBINS,IB0,.IBSEC,.IBNID,.IB837R,.IBDIV)
"RTN","IBCE837",79,0)
 ..S:'$D(^TMP("IBXINS",$J,IBDIV_U_IBBTYP,IBNID)) ^(IBNID)=IBINS S ^TMP("IBTXMT",$J,IBDIV_U_IBBTYP,IB837R_U_IBSEC,IBNID,$P(IB0,U,2),IBXIEN_U_IBX)=IBX
"RTN","IBCE837",80,0)
 .;
"RTN","IBCE837",81,0)
 .S ^TMP($J,"BILL",$P(IB0,U))=""
"RTN","IBCE837",82,0)
 ;
"RTN","IBCE837",83,0)
 I $D(^TMP("IBTXMT",$J)) S ^TMP("IBXDATA",$J)=IBNID
"RTN","IBCE837",84,0)
 K ^TMP($J,"BILL")
"RTN","IBCE837",85,0)
 Q
"RTN","IBCE837",86,0)
 ;
"RTN","IBCE837",87,0)
OUTPUT ; 837
"RTN","IBCE837",88,0)
 ;
"RTN","IBCE837",89,0)
 N IB837,IBSITE,IBMAX,IBQUEUE,IBTQUEUE,IBNID,IBCT,IBCTM,IBSIZE,IBBILL,IBLCNT,IBDFN,IBREF,IBSIZEM,IBPARMS,IBD,IBDESC,IBINS,IBQ,IB3,IBBTYP,IBTXTEST,IBDEFPRT,IB837R,IBBTYPX
"RTN","IBCE837",90,0)
 ;
"RTN","IBCE837",91,0)
 K ^TMP("IBCE-BATCH",$J)
"RTN","IBCE837",92,0)
 S IBSITE=$G(^IBE(350.9,1,8)),IBMAX=$P(IBSITE,U,4),IB837=+$O(^IBE(353,"B","IB 837 TRANSMISSION",0)),IB837=$S($P($G(^IBE(353,+IB837,2)),U,8):$P(^(2),U,8),1:IB837) S:'IBMAX IBMAX=999
"RTN","IBCE837",93,0)
 ;
"RTN","IBCE837",94,0)
 I 'IB837 D  Q
"RTN","IBCE837",95,0)
 . N IBZ,XMBODY
"RTN","IBCE837",96,0)
 . S XMBODY="IBZ"
"RTN","IBCE837",97,0)
 . S IBZ(1)="The transmission form for sending electronic claims is not in your form file",IBZ(2)="NO CLAIMS WERE OUTPUT - FORM = IB 837 TRANSMISSION"
"RTN","IBCE837",98,0)
 . D ERRMSG^IBCE837A(XMBODY)
"RTN","IBCE837",99,0)
 ;
"RTN","IBCE837",100,0)
 S (IBCT,IBCTM,IBSIZE)=0,IBQUEUE=$P(IBSITE,U),IBTQUEUE=$P(IBSITE,U,9),IBDESC=""
"RTN","IBCE837",101,0)
 ;
"RTN","IBCE837",102,0)
 Q:IBQUEUE=""&(IBTQUEUE="")
"RTN","IBCE837",103,0)
 ;
"RTN","IBCE837",104,0)
 S IBQ="",IBBTYPX=""
"RTN","IBCE837",105,0)
 ; Sort: div_^_bill type_-_test stat,ins co transmission destination^sec status,dfn,claim #
"RTN","IBCE837",106,0)
 F  S IBBTYPX=$O(^TMP("IBTXMT",$J,IBBTYPX)),IBBTYP=$P(IBBTYPX,U,2) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,"",IBSITE,.IBSIZE) Q:IBBTYPX=""  D
"RTN","IBCE837",107,0)
 . S IBDEFPRT=$S($E(IBBTYP)="P":"SPRINT",1:"SPRINT")
"RTN","IBCE837",108,0)
 . S IBTXTEST=+$P(IBBTYP,"-",2),IBQ=$S('IBTXTEST:IBQUEUE,IBTXTEST=2:"MCT",1:IBTQUEUE)
"RTN","IBCE837",109,0)
 . Q:IBQ=""  ; Queue
"RTN","IBCE837",110,0)
 . ;
"RTN","IBCE837",111,0)
 . ;JWS:IB*2.0*592:US131 - EDI Dental Claim
"RTN","IBCE837",112,0)
 . S IBD=$S($E(IBBTYP)="P":"PROF",$E(IBBTYP)="D":"DENT",1:"INST")_" CLAIMS-"_$$HTE^XLFDT($H,2)_"  "
"RTN","IBCE837",113,0)
 . S IBDESC=$S('$P(IBSITE,U,7):$S('IBTXTEST:"",1:"TEST ")_IBD,1:"")
"RTN","IBCE837",114,0)
 . ;
"RTN","IBCE837",115,0)
 . S IB837R=""
"RTN","IBCE837",116,0)
 . F  S IB837R=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R)) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,"",IBSITE,.IBSIZE) Q:IB837R=""  D
"RTN","IBCE837",117,0)
 .. S (IBINS,IBNID)="",IBLCNT=0
"RTN","IBCE837",118,0)
 .. F  S IBNID=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID)) K ^TMP("IBHDR1",$J) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,IBINS,IBSITE,.IBSIZE) Q:IBNID=""  D
"RTN","IBCE837",119,0)
 ...;
"RTN","IBCE837",120,0)
 ...S IBDFN=0,IBINS=+$G(^TMP("IBXINS",$J,IBBTYPX,IBNID))
"RTN","IBCE837",121,0)
 ... ;
"RTN","IBCE837",122,0)
 ...I $P(IBSITE,U,7) D  ; 1 ins/batch
"RTN","IBCE837",123,0)
 .... S IBLCNT=0
"RTN","IBCE837",124,0)
 .... S IBDESC=$E($S('IBTXTEST:"",1:"TEST ")_IBD_$P($G(^DIC(36,IBINS,0)),U),1,80)
"RTN","IBCE837",125,0)
 ... ;
"RTN","IBCE837",126,0)
 ... F  S IBDFN=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID,IBDFN)) Q:'IBDFN  S IBREF="" F  S IBREF=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID,IBDFN,IBREF)) Q:'IBREF  D
"RTN","IBCE837",127,0)
 .... I '(IBCTM#IBMAX),IBCTM D MAILIT^IBCE837A(IBQ,.IBBILL,.IBCTM,"",IBDESC,IBBTYP,IBINS) S IBSIZE=0 ;exceeds max #
"RTN","IBCE837",128,0)
 .... ;JWS;IB*2.0*623;begin;if 837 FHIR is on, just set flag to begin transmit
"RTN","IBCE837",129,0)
 .... I $$GET1^DIQ(350.9,"1,",8.21,"I") D  Q
"RTN","IBCE837",130,0)
 ..... ;JWS;IB*2.0*623v24;added resubmit flag parameter to SETCLM^IBCE837I call
"RTN","IBCE837",131,0)
 ..... D SETCLM^IBCE837I($P(IBREF,U,2),IBQ,$S($D(^TMP("IBRESUBMIT",$J,$P(IBREF,U,2))):1,1:0))
"RTN","IBCE837",132,0)
 ..... S IBCT=IBCT+1,IBCTM=IBCTM+1
"RTN","IBCE837",133,0)
 ..... Q
"RTN","IBCE837",134,0)
 .... ;IB*2.0*623;end
"RTN","IBCE837",135,0)
 .... D BILLPARM^IBCEFG0(+IBREF,.IBPARMS)
"RTN","IBCE837",136,0)
 .... S IBSIZEM=$$EXTRACT^IBCEFG(IB837,+IBREF,1,.IBPARMS)
"RTN","IBCE837",137,0)
 .... I (IBSIZEM+IBSIZE)>30000,IBSIZE D  ; exceeds max size
"RTN","IBCE837",138,0)
 ..... D MAILIT^IBCE837A(IBQ,.IBBILL,.IBCTM,"",IBDESC,IBBTYP,IBINS) S IBSIZE=0 K ^TMP("IBXDATA",$J) S IBSIZEM=$$EXTRACT^IBCEFG(IB837,+IBREF,1,.IBPARMS)
"RTN","IBCE837",139,0)
 .... I 'IBSIZEM D:'IBCTM  Q
"RTN","IBCE837",140,0)
 ..... D CHKBTCH^IBCE837A(+$G(^TMP("IBHDR",$J))) K ^TMP("IBHDR",$J)
"RTN","IBCE837",141,0)
 .... S IBCT=IBCT+1,IBCTM=IBCTM+1
"RTN","IBCE837",142,0)
 .... D:$D(^TMP("IBXDATA",$J)) MESSAGE(.IBLCNT,$P(IBREF,U,2),.IBBILL,.IBCTM,.IBSIZE,IBSIZEM,"",IBBTYP,IBINS)
"RTN","IBCE837",143,0)
 ..;
"RTN","IBCE837",144,0)
 .. I $G(IBTXTEST)=1 S IBINS=0 F  S IBINS=$O(^TMP("IBICT",$J,IBINS)) Q:'IBINS  S IB3=$G(^DIC(36,IBINS,3)) D
"RTN","IBCE837",145,0)
 ... N DIE,DA,DR
"RTN","IBCE837",146,0)
 ... S DIE="^DIC(36,",DA=IBINS,DR="3.05////"_DT_";3.07////"_($S($P(IB3,U,5)'=DT:0,1:$P(IB3,U,7))+^TMP("IBICT",$J,IBINS)) D ^DIE
"RTN","IBCE837",147,0)
 ;
"RTN","IBCE837",148,0)
 I $O(^TMP("IBXERR",$J,"")) D  ;Error to mail grp
"RTN","IBCE837",149,0)
 .N XMTO,XMBODY,XMDUZ,XMSUBJ,IBCT,IBERR
"RTN","IBCE837",150,0)
 .K ^TMP("IBXMSG",$J)
"RTN","IBCE837",151,0)
 .S ^TMP("IBXMSG",$J,1)="The following authorized bill(s) were not transmitted due to errors indicated.",^(2)="Once the errors are corrected, the bill(s) will be included in the next run.",^(3)=" "
"RTN","IBCE837",152,0)
 .;
"RTN","IBCE837",153,0)
 .S IBERR=0,IBCT=3
"RTN","IBCE837",154,0)
 .F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  S IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)="Bill #: "_$P($G(^DGCR(399,IBERR,0)),U),IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)=$J("",5)_^TMP("IBXERR",$J,IBERR)
"RTN","IBCE837",155,0)
 .S XMBODY="^TMP(""IBXMSG"","_$J_")" D ERRMSG^IBCE837A(XMBODY)
"RTN","IBCE837",156,0)
 .;
"RTN","IBCE837",157,0)
 .K ^TMP("IBXMSG",$J),^TMP("IBICT",$J)
"RTN","IBCE837",158,0)
 ;
"RTN","IBCE837",159,0)
 I $O(^TMP("IBCE-BATCH",$J,"")) D
"RTN","IBCE837",160,0)
 .N IB,IB0,IBL,IBT,IBX,XMTO,XMDUZ,XMSUBJ,IBRESUB,IBTESTB,XMZ
"RTN","IBCE837",161,0)
 .S IBRESUB=$D(^TMP("IBRESUBMIT",$J))
"RTN","IBCE837",162,0)
 .;
"RTN","IBCE837",163,0)
 .S IBT(1)="The following batches were "_$S('IBRESUB:"",1:"re-")_"submitted to Austin "_$S(IBTXTEST'=2:"",1:"as TEST ")_$$HTE^XLFDT($H,"2D")_":"
"RTN","IBCE837",164,0)
 .S IBT(2)=$S('IBRESUB:" ",1:"   [Resubmitted by: "_$P($G(^VA(200,+DUZ,0)),U)_" (#"_DUZ_")]") S:IBRESUB IBT(3)=" "
"RTN","IBCE837",165,0)
 .;
"RTN","IBCE837",166,0)
 .S IBL=$S('IBRESUB:2,1:3),IB=""
"RTN","IBCE837",167,0)
 .F  S IB=$O(^TMP("IBCE-BATCH",$J,IB)) Q:IB=""  S IBL=IBL+1,IB0=$G(^(IB)) D
"RTN","IBCE837",168,0)
 .. S IBX=IB
"RTN","IBCE837",169,0)
 .. I $P(IB0,U,3)'="",IBTXTEST=2 S IBX=$P(IB0,U,3)_" (AS BATCH "_IB_")"
"RTN","IBCE837",170,0)
 ..S IBT(IBL)=" "_IBX_" "_$P($G(^IBA(364.1,+IB0,0)),U,8),IBL=IBL+1,IBT(IBL)="    ("_+$P(IB0,U,2)_" bills)"
"RTN","IBCE837",171,0)
 .;
"RTN","IBCE837",172,0)
 .S XMTO("I:G.IB EDI")="",XMDUZ="",XMBODY="IBT",XMSUBJ="EDI 837 "_$S('IBRESUB:"",1:"RE-")_"SUBMISSION BATCH LIST"_$S(IBTXTEST'=2:"",1:" FOR TEST")
"RTN","IBCE837",173,0)
 .D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCE837",174,0)
 .;
"RTN","IBCE837",175,0)
 .S:IBRESUB ^TMP("IBRESUBMIT",$J,0)=1
"RTN","IBCE837",176,0)
 Q
"RTN","IBCE837",177,0)
 ;
"RTN","IBCE837",178,0)
CLEANUP ; moved
"RTN","IBCE837",179,0)
 D CLEANUP^IBCE837A
"RTN","IBCE837",180,0)
 Q
"RTN","IBCE837",181,0)
 ;
"RTN","IBCE837",182,0)
MESSAGE(IBLCNT,IBIEN,IBBILL,IBCTM,IBSIZE,IBSIZEM,IBDUZ,IBBTYP,IBINS) ; Create msg in ^TMP("IBXMSG",$J)
"RTN","IBCE837",183,0)
 ;IBLCNT = last msg line extracted
"RTN","IBCE837",184,0)
 ;IBIEN = ien file 364 bill entry
"RTN","IBCE837",185,0)
 ;IBBILL = array file 364 ien's of bills being sent
"RTN","IBCE837",186,0)
 ; IBBILL(IEN)=""
"RTN","IBCE837",187,0)
 ;IBSIZE = # bytes in msg
"RTN","IBCE837",188,0)
 ;IBSIZEM = # bytes in record to be added to msg
"RTN","IBCE837",189,0)
 ;IBCTM = # bills in batch
"RTN","IBCE837",190,0)
 ;IBDUZ = user ien running extract (Postmaster if auto)
"RTN","IBCE837",191,0)
 ;IBBTYP = x-y where x = P for prof, I for inst, D for dental  ;JWS:IB*2.0*592:US131 - EDI Dental Claim
"RTN","IBCE837",192,0)
 ;         y = 1 for test, 0 for live txmt
"RTN","IBCE837",193,0)
 ;IBINS = ien of 1 ins co for batch
"RTN","IBCE837",194,0)
 ;
"RTN","IBCE837",195,0)
 N IB,IBL,IB1,IB2,IB3,IBQ,IBREC,IBDEL
"RTN","IBCE837",196,0)
 S IBDEL=$O(^IBA(364.5,"B","N-SEGMENT DELIMITER","")),IBDEL=$P($G(^IBA(364.5,+IBDEL,0)),U,8) S:IBDEL="" IBDEL="~"
"RTN","IBCE837",197,0)
 S IBSIZE=IBSIZE+IBSIZEM,IB1="",IBREC=""
"RTN","IBCE837",198,0)
 F  S IB1=$O(^TMP("IBXDATA",$J,1,IB1)) Q:IB1=""  D
"RTN","IBCE837",199,0)
 .S (IBREC,IB2)=""
"RTN","IBCE837",200,0)
 .F  S IB2=$O(^TMP("IBXDATA",$J,1,IB1,IB2)) Q:$S(IB2="":1,IB1=1:"",1:'$O(^(IB2,1)))  D
"RTN","IBCE837",201,0)
 ..S IB3="",IBREC=""
"RTN","IBCE837",202,0)
 ..F  S IB3=$O(^TMP("IBXDATA",$J,1,IB1,IB2,IB3)) D:IB3=""&($L(IBREC)) SETG Q:IB3=""  S:$S(IB3=1:1,1:$P(IBREC,U)'="") $P(IBREC,U,IB3)=$$UP^XLFSTR(^TMP("IBXDATA",$J,1,IB1,IB2,IB3))
"RTN","IBCE837",203,0)
 S IBBILL(IBIEN)=""
"RTN","IBCE837",204,0)
 K ^TMP("IBXDATA",$J)
"RTN","IBCE837",205,0)
 Q
"RTN","IBCE837",206,0)
 ;
"RTN","IBCE837",207,0)
SETHDR ; hdr for curr batch
"RTN","IBCE837",208,0)
 S ^TMP("IBHDR",$J)=$G(^TMP("IBXDATA",$J,1,5,1,2))
"RTN","IBCE837",209,0)
 Q
"RTN","IBCE837",210,0)
 ;
"RTN","IBCE837",211,0)
SETHDR1 ; hdr node for curr ins
"RTN","IBCE837",212,0)
 S ^TMP("IBHDR1",$J)=$G(^TMP("IBXDATA",$J,1,20,1,8))
"RTN","IBCE837",213,0)
 Q
"RTN","IBCE837",214,0)
 ;
"RTN","IBCE837",215,0)
SETG ; msg global for each segment
"RTN","IBCE837",216,0)
 S IBREC=$TR(IBREC,IBDEL)
"RTN","IBCE837",217,0)
 S IBREC=IBREC_IBDEL,IBSIZE=IBSIZE+$L(IBDEL)
"RTN","IBCE837",218,0)
 S IBLCNT=IBLCNT+1,^TMP("IBXMSG",$J,IBLCNT)=IBREC
"RTN","IBCE837",219,0)
 Q
"RTN","IBCE837",220,0)
 ;
"RTN","IBCE837",221,0)
ONE ; Txmt 1 or more bills for test or in 'X' status for live
"RTN","IBCE837",222,0)
 Q:'$$MGCHK^IBCE(0)
"RTN","IBCE837",223,0)
 D SETUP(0)
"RTN","IBCE837",224,0)
 I '$D(IBXERR) D FIND,OUTPUT
"RTN","IBCE837",225,0)
 D CLEANUP^IBCE837A
"RTN","IBCE837",226,0)
 Q
"RTN","IBCE837",227,0)
 ;
"RTN","IBCE837A")
0^46^B55539011^B52481474
"RTN","IBCE837A",1,0)
IBCE837A ;ALB/TMP - OUTPUT FOR 837 TRANSMISSION - CONTINUED ;8/6/03 10:50am
"RTN","IBCE837A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,211,232,296,377,592,623**;21-MAR-94;Build 70
"RTN","IBCE837A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCE837A",4,0)
 ;
"RTN","IBCE837A",5,0)
UPD(MSGNUM,BATCH,CNT,BILLS,DESC,IBBTYP,IBINS) ; Upd current batch + bills w/new status
"RTN","IBCE837A",6,0)
 ;MSGNUM = mail msg # for batch
"RTN","IBCE837A",7,0)
 ;BATCH = batch #
"RTN","IBCE837A",8,0)
 ;CNT = # of bills in batch
"RTN","IBCE837A",9,0)
 ;BILLS = array BILLS(bill ien in 364) in batch
"RTN","IBCE837A",10,0)
 ;DESC = 1-80 character description of batch
"RTN","IBCE837A",11,0)
 ;IBBTYP = X-Y where X = P for professional, I for institution, or D for Dental  ;JWS;IB*2.0*592;US131
"RTN","IBCE837A",12,0)
 ;                   Y = 1 for test or 0 for live transmission
"RTN","IBCE837A",13,0)
 ;                         or 2 for live claim resubmitted as test
"RTN","IBCE837A",14,0)
 ;IBINS = ien of single insurance company for the batch (optional)
"RTN","IBCE837A",15,0)
 ;
"RTN","IBCE837A",16,0)
 N DIC,DIE,DR,DA,IBBATCH,IBIFN,IBIEN,IBYY,IBTXTEST,IBMRA
"RTN","IBCE837A",17,0)
 S IBBATCH=$O(^IBA(364.1,"B",+BATCH,"")) Q:'IBBATCH
"RTN","IBCE837A",18,0)
 S IBTXTEST=+$P(IBBTYP,"-",2)
"RTN","IBCE837A",19,0)
 I '$P($G(^IBE(350.9,1,8)),U,7) S IBINS=""
"RTN","IBCE837A",20,0)
 ;
"RTN","IBCE837A",21,0)
 S DIE="^IBA(364.1,",DA=IBBATCH,DR=".02////P;.03///"_CNT_";.04///"_MSGNUM_";.05///0;.07////1;.08///^S X="""_DESC_""""_$S($G(IBINS):";.12////"_IBINS,1:"")
"RTN","IBCE837A",22,0)
 ;
"RTN","IBCE837A",23,0)
 I '$P($G(^TMP("IBRESUBMIT",$J)),U,3) S DR=DR_";1.01///NOW;1.02///.5"
"RTN","IBCE837A",24,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,2) S DR=DR_";.15////"_$P(^($J),U,2)
"RTN","IBCE837A",25,0)
 ;JWS;IB*2.0*592;US131
"RTN","IBCE837A",26,0)
 S DR=DR_";.14////"_$S('IBTXTEST:0,1:1)_";.06////"_$S($E(IBBTYP)="P":2,$E(IBBTYP)="D":7,1:3) D ^DIE ; Update batch
"RTN","IBCE837A",27,0)
 ;
"RTN","IBCE837A",28,0)
 I IBTXTEST=2 D ADDTXM^IBCEPTM(.BILLS,IBBATCH,$$NOW^XLFDT()) Q
"RTN","IBCE837A",29,0)
 I IBTXTEST'=2 S IBIEN=0 F  S IBIEN=$O(BILLS(IBIEN)) Q:'IBIEN  D  ;Update each bill
"RTN","IBCE837A",30,0)
 . ;JWS;IB*2.0*623;update field .09 837 FHIR ReQUEST if using 837 FHIR trans method
"RTN","IBCE837A",31,0)
 . S DA=IBIEN,DIE="^IBA(364,",DR=".02////"_IBBATCH_";.03///P;.04///NOW"
"RTN","IBCE837A",32,0)
 . I $D(^IBA(364,"AC",1,DA)) S DR=DR_";.09////2"
"RTN","IBCE837A",33,0)
 . D ^DIE
"RTN","IBCE837A",34,0)
 . S IBIFN=+$G(^IBA(364,IBIEN,0))
"RTN","IBCE837A",35,0)
 . ; If this claim has just been retransmitted, set the .06 field for the previous transmission entry
"RTN","IBCE837A",36,0)
 . N PRVTXI,PRVTXD
"RTN","IBCE837A",37,0)
 . S PRVTXI=$O(^IBA(364,"B",IBIFN,IBIEN),-1)      ; previous transmission for this claim
"RTN","IBCE837A",38,0)
 . I PRVTXI D
"RTN","IBCE837A",39,0)
 .. S PRVTXD=$G(^IBA(364,PRVTXI,0))
"RTN","IBCE837A",40,0)
 .. I '$F(".R.E.","."_$P(PRVTXD,U,3)_".") Q                 ; prev trans must have status of "R" or "E"
"RTN","IBCE837A",41,0)
 .. I $P(PRVTXD,U,7,8)'=$P($G(^IBA(364,IBIEN,0)),U,7,8) Q   ; test bill and COB must be the same
"RTN","IBCE837A",42,0)
 .. S DA=PRVTXI,DIE=364,DR=".06///"_IBBATCH D ^DIE          ; update the resubmit batch number
"RTN","IBCE837A",43,0)
 .. Q
"RTN","IBCE837A",44,0)
 . ;
"RTN","IBCE837A",45,0)
 .Q:$D(^TMP("IBRESUBMIT",$J))!($P($G(^DGCR(399,IBIFN,0)),U,13)=4)!(+$$TXMT^IBCEF4(IBIEN)=2)
"RTN","IBCE837A",46,0)
 .S IBMRA=$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCE837A",47,0)
 .I IBMRA="C",$P($G(^DGCR(399,IBIFN,0)),U,13)=2 S IBMRA=1
"RTN","IBCE837A",48,0)
 .I IBIFN D
"RTN","IBCE837A",49,0)
 ..S (DIC,DIE)="^DGCR(399,",DA=$P($G(^IBA(364,IBIEN,0)),U),DR="[IB STATUS]",IBYY=$S('IBMRA:"@91",1:"@911") D:DA ^DIE
"RTN","IBCE837A",50,0)
 ..D BSTAT^IBCDC(IBIFN) ; remove from AB list
"RTN","IBCE837A",51,0)
 Q
"RTN","IBCE837A",52,0)
 ;
"RTN","IBCE837A",53,0)
PRE ; Run before processing a bill entry
"RTN","IBCE837A",54,0)
 K IBXSAVE,IBXERR,^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),^TMP($J),^TMP("DIERR",$J)
"RTN","IBCE837A",55,0)
 Q
"RTN","IBCE837A",56,0)
 ;
"RTN","IBCE837A",57,0)
POST ; Run after processing a bill entry for cleanup
"RTN","IBCE837A",58,0)
 N Q
"RTN","IBCE837A",59,0)
 I $G(IBXERR)'="" D
"RTN","IBCE837A",60,0)
 .S ^TMP("IBXERR",$J,IBXIEN)=IBXERR K ^TMP("IBXDATA",$J)
"RTN","IBCE837A",61,0)
 .K ^TMP("IBHDR1",$J)
"RTN","IBCE837A",62,0)
 .I $D(^TMP("IBRESUBMIT",$J)),'$G(^TMP("IBEDI_TEST_BATCH",$J)) D  ;Set not resub flag for non-test bill
"RTN","IBCE837A",63,0)
 ..N Z,Z0
"RTN","IBCE837A",64,0)
 ..S Z0=$P($G(^TMP("IBRESUBMIT",$J)),U) Q:Z0=""
"RTN","IBCE837A",65,0)
 ..S Z=$O(^IBA(364,"ABABI",+$O(^IBA(364.1,"B",Z0,"")),IBXIEN,""))
"RTN","IBCE837A",66,0)
 ..I Z S ^TMP("IBNOT",$J,Z)=IBXIEN
"RTN","IBCE837A",67,0)
 K IBXSAVE,IBXNOREQ,^TMP("IBXSAVE",$J),^TMP($J)
"RTN","IBCE837A",68,0)
 S Q="VA" F  S Q=$O(^UTILITY(Q)) Q:$E(Q,1,2)'="VA"  I $D(^(Q,$J)) K ^UTILITY(Q,$J)
"RTN","IBCE837A",69,0)
 D CLEAN^DILF
"RTN","IBCE837A",70,0)
 Q
"RTN","IBCE837A",71,0)
 ;
"RTN","IBCE837A",72,0)
MAILIT(IBQUEUE,IBBILL,IBCTM,IBDUZ,IBDESC,IBBTYP,IBINS) ; Send mail msg, update bills
"RTN","IBCE837A",73,0)
 ;IBQUEUE = mail queue name to send 837 transactions to
"RTN","IBCE837A",74,0)
 ;IBBILL = array of ien's in file 364 of bills in batch - IBBILL(IEN)=""
"RTN","IBCE837A",75,0)
 ;IBCTM = # of bills in batch, returned reset to 0
"RTN","IBCE837A",76,0)
 ;IBDUZ = ien of user 'running' extract (if any)
"RTN","IBCE837A",77,0)
 ;IBDESC = description of batch
"RTN","IBCE837A",78,0)
 ;IBBTYP = X-Y where X = P for professional, I for institution, or D for Dental ;JWS;IB*2.0*592;US131
"RTN","IBCE837A",79,0)
 ;                   Y = 1 or 2 for test or 0 for live transmission
"RTN","IBCE837A",80,0)
 ;IBINS = ien of insurance company if only one/batch option (optional)
"RTN","IBCE837A",81,0)
 ;
"RTN","IBCE837A",82,0)
 N DIK,DA,XMTO,XMZ,XMBODY,XMDUZ,XMSUBJ,IBBDA,IBBNO
"RTN","IBCE837A",83,0)
 ;
"RTN","IBCE837A",84,0)
 S IBBNO=+$P($G(^TMP("IBHDR",$J)),U),IBBDA=$O(^IBA(364.1,"B",IBBNO,""))
"RTN","IBCE837A",85,0)
 I '$P($G(^IBE(350.9,1,8)),U,7) S IBINS=""
"RTN","IBCE837A",86,0)
 ;
"RTN","IBCE837A",87,0)
 I IBCTM D
"RTN","IBCE837A",88,0)
 . ;JWS;IB*2.0*623
"RTN","IBCE837A",89,0)
 . I $$GET1^DIQ(350.9,"1,",8.21,"I") Q  ;G MAILQ
"RTN","IBCE837A",90,0)
 . I +$G(^TMP("IBEDI_TEST_BATCH",$J)) S IBQUEUE="MCT"
"RTN","IBCE837A",91,0)
 . I IBQUEUE'="",IBQUEUE'["@" S XMTO("XXX@Q-"_IBQUEUE_".DOMAIN.EXT")=""
"RTN","IBCE837A",92,0)
 . ;
"RTN","IBCE837A",93,0)
 . ; ******Note to self - remove when going to sites although it shouldn't hurt if you forget - WCJ **********
"RTN","IBCE837A",94,0)
 . I '$$PROD^XUPROD(1) S XMTO("G.CLAIMS4US")=""
"RTN","IBCE837A",95,0)
 . ;
"RTN","IBCE837A",96,0)
 . I IBQUEUE["@" S XMTO(IBQUEUE)=""
"RTN","IBCE837A",97,0)
 . S XMDUZ=$G(IBDUZ),XMBODY="^TMP(""IBXMSG"","_$J_")",XMSUBJ=$S($P(IBBTYP,U,2):"** TEST"_$S($P(IBBTYP,U,2)=2:"/RESUB OF LIVE",1:""),1:"")_" CLAIM BATCH: "_$S(IBQUEUE'["@":IBQUEUE,1:$P(IBQUEUE,"@"))_"/"_IBBNO
"RTN","IBCE837A",98,0)
 . K XMZ
"RTN","IBCE837A",99,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCE837A",100,0)
 . I $G(XMZ) D
"RTN","IBCE837A",101,0)
 .. D UPD(XMZ,$P($G(^TMP("IBHDR",$J)),U),IBCTM,.IBBILL,IBDESC,IBBTYP,IBINS) ;Update batch/bills
"RTN","IBCE837A",102,0)
 .. S ^TMP("IBCE-BATCH",$J,IBBNO)=IBBDA_U_IBCTM_U_$P($G(^TMP("IBRESUBMIT",$J)),U)
"RTN","IBCE837A",103,0)
MAILQ ;
"RTN","IBCE837A",104,0)
 S IBCTM=0
"RTN","IBCE837A",105,0)
 ;JWS;IB*2.0*623;do not do for FHIR transmissions
"RTN","IBCE837A",106,0)
 I '$$GET1^DIQ(350.9,"1,",8.21,"I") D CHKBTCH(+$G(^TMP("IBHDR",$J)))
"RTN","IBCE837A",107,0)
 K ^TMP("IBHDR",$J),^TMP("IBHDR1",$J),^TMP("IBXMSG",$J),IBBILL
"RTN","IBCE837A",108,0)
 Q
"RTN","IBCE837A",109,0)
 ;
"RTN","IBCE837A",110,0)
CHKNEW(IBQ,IBBILL,IBCTM,IBDESC,IBBTYP,IBINS,IBSITE,IBSIZE) ;
"RTN","IBCE837A",111,0)
 ;  Determine if ok to send msg
"RTN","IBCE837A",112,0)
 ;  Check for one insurance per batch if IBINS defined
"RTN","IBCE837A",113,0)
 ; Returns IBSIZE, IBCTM, IBBILL (pass by reference)
"RTN","IBCE837A",114,0)
 ;
"RTN","IBCE837A",115,0)
 ; IBQ = data queue name
"RTN","IBCE837A",116,0)
 ; IBBILL = the 'list' of bill #'s in the batch
"RTN","IBCE837A",117,0)
 ; IBCTM = the # of claims output so far to the batch
"RTN","IBCE837A",118,0)
 ; IBDESC = the batch description text
"RTN","IBCE837A",119,0)
 ; IBBTYP = X-Y where X = P for professional, I for institution, or D for Dental
"RTN","IBCE837A",120,0)
 ;                    Y = 1 for test or 0 for live transmission
"RTN","IBCE837A",121,0)
 ; IBINS = the ien of the single insurance co. for the batch (optional)
"RTN","IBCE837A",122,0)
 ; IBSITE = the '8' node of file 350.9 (IB PARAMETERS)
"RTN","IBCE837A",123,0)
 ; IBSIZE = the 'running' size of the output message
"RTN","IBCE837A",124,0)
 ;
"RTN","IBCE837A",125,0)
 Q:$S($G(IBINS)="":0,1:'$P(IBSITE,U,7))
"RTN","IBCE837A",126,0)
 ;
"RTN","IBCE837A",127,0)
 ; New batch needed
"RTN","IBCE837A",128,0)
 I IBCTM D MAILIT(IBQ,.IBBILL,.IBCTM,"",IBDESC,IBBTYP,IBINS) S IBSIZE=0
"RTN","IBCE837A",129,0)
 Q
"RTN","IBCE837A",130,0)
 ;
"RTN","IBCE837A",131,0)
ERRMSG(XMBODY) ; Send bulletin for error message
"RTN","IBCE837A",132,0)
 N XMTO,XMSUBJ
"RTN","IBCE837A",133,0)
 S XMTO("I:G.IB EDI")="",XMSUBJ="EDI 837 TRANSMISSION ERRORS"
"RTN","IBCE837A",134,0)
 ;
"RTN","IBCE837A",135,0)
 D SENDMSG^XMXAPI(,XMSUBJ,XMBODY,.XMTO)
"RTN","IBCE837A",136,0)
 D ALERT("One or more EDI bills were not transmitted.  Check your mail for details","G.IB EDI")
"RTN","IBCE837A",137,0)
 Q
"RTN","IBCE837A",138,0)
 ;
"RTN","IBCE837A",139,0)
CLEANUP ; Cleans up bill transmission environment
"RTN","IBCE837A",140,0)
 ;
"RTN","IBCE837A",141,0)
 N IBTEST
"RTN","IBCE837A",142,0)
 S IBTEST=+$G(^TMP("IBEDI_TEST_BATCH",$J))
"RTN","IBCE837A",143,0)
 L -^IBA(364,0)
"RTN","IBCE837A",144,0)
 I $D(^TMP("IBRESUBMIT",$J,"IBXERR"))!$D(^TMP("IBONE",$J,"IBXERR"))!$D(^TMP("IBSELX",$J,"IBXERR")) D  ;Error message to mail group
"RTN","IBCE837A",145,0)
 . N XMTO,XMBODY,XMDUZ,XMSUBJ,XMZ,IBFUNC
"RTN","IBCE837A",146,0)
 . S IBFUNC=$S($D(^TMP("IBRESUBMIT",$J,"IBXERR")):$S('IBTEST:1,1:4),$D(^TMP("IBONE",$J,"IBXERR")):2,1:3)
"RTN","IBCE837A",147,0)
 . Q:'IBFUNC
"RTN","IBCE837A",148,0)
 . S XMTO("I:G.IB EDI")="",XMDUZ="",XMBODY="^TMP("""_$S(IBFUNC=1!(IBFUNC=4):"IBRESUBMIT",1:"IBONE")_""","_$J_",""IBXERR"")"
"RTN","IBCE837A",149,0)
 . S XMSUBJ="EDI 837 B"_$P("ATCH^ILL^ILL(s)^ILL(s)",U,IBFUNC)_" NOT "_$S($G(^TMP("IBONE",$J)):"RE",1:"")_"SUBMITTED"_$S('IBTEST:"",1:" AS TEST CLAIMS")
"RTN","IBCE837A",150,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCE837A",151,0)
 . K ^TMP("IBRESUBMIT",$J),^TMP("IBONE",$J)
"RTN","IBCE837A",152,0)
 ;
"RTN","IBCE837A",153,0)
 I $D(^TMP("IBRESUBMIT",$J)),'IBTEST D RESUBUP^IBCEM02 ;Upd resubmtd batch bills
"RTN","IBCE837A",154,0)
 I '$D(^TMP("IBSELX",$J)) K ^TMP("IBCE-BATCH",$J)
"RTN","IBCE837A",155,0)
 K ^TMP("IBXERR",$J),IBXERR
"RTN","IBCE837A",156,0)
 I 'IBTEST D CHKBTCH(+$G(^TMP("IBHDR",$J)))
"RTN","IBCE837A",157,0)
CLEANP ;  Entrypoint for extract data disply
"RTN","IBCE837A",158,0)
 K ^TMP("IBTXMT",$J),^TMP("IBXINS",$J)
"RTN","IBCE837A",159,0)
 K ^TMP("IBRESUBMIT",$J),^TMP("IBRESUB",$J),^TMP("IBNOT",$J),^TMP("IBONE",$J),^TMP("IBHDR",$J),^TMP("IBTX",$J),^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCE837A",160,0)
 K ^UTILITY("VADM",$J)
"RTN","IBCE837A",161,0)
 D CLEAN^DILF
"RTN","IBCE837A",162,0)
 K ZTREQ S ZTREQ="@"
"RTN","IBCE837A",163,0)
 Q
"RTN","IBCE837A",164,0)
 ;
"RTN","IBCE837A",165,0)
ALERT(XQAMSG,IBGRP) ; Send alert message
"RTN","IBCE837A",166,0)
 N XQA
"RTN","IBCE837A",167,0)
 S XQA(IBGRP)=""
"RTN","IBCE837A",168,0)
 D SETUP^XQALERT
"RTN","IBCE837A",169,0)
 Q
"RTN","IBCE837A",170,0)
CHKBTCH(IBBNO) ; Delete batch whose batch # is IBBNO if no entries in file 364
"RTN","IBCE837A",171,0)
 ; and not a resubmitted batch
"RTN","IBCE837A",172,0)
 N IBZ,DA,DIK
"RTN","IBCE837A",173,0)
 S IBZ=+$O(^IBA(364.1,"B",+IBBNO,""))
"RTN","IBCE837A",174,0)
 I IBZ,'$O(^IBA(364,"C",IBZ,0)),'$P($G(^IBA(364.1,IBZ,0)),U,14) S DA=IBZ,DIK="^IBA(364.1," D ^DIK
"RTN","IBCE837A",175,0)
 Q
"RTN","IBCE837A",176,0)
 ;
"RTN","IBCE837A",177,0)
TESTLIM(IBINS) ; Check for test bill limit per day has been reached
"RTN","IBCE837A",178,0)
 N IB3,DA,DIK
"RTN","IBCE837A",179,0)
 S IB3=$G(^DIC(36,IBINS,3))
"RTN","IBCE837A",180,0)
 I $P(IB3,U,5)'=DT S $P(IB3,U,7)=0
"RTN","IBCE837A",181,0)
 ;JWS;IB*2.0*623v24;for test env don't skip
"RTN","IBCE837A",182,0)
 I '$$PROD^XUPROD(1) G 1
"RTN","IBCE837A",183,0)
 I ($P(IB3,U,7)+$G(^TMP("IBICT",$J,IBINS))+1)>$P(IB3,U,6) D  Q
"RTN","IBCE837A",184,0)
 . S IBINS="" ;max # hit
"RTN","IBCE837A",185,0)
 . S DA=IBX,DIK="^IBA(364," D ^DIK
"RTN","IBCE837A",186,0)
1 S ^TMP("IBICT",$J,IBINS)=$G(^TMP("IBICT",$J,IBINS))+1
"RTN","IBCE837A",187,0)
 Q
"RTN","IBCE837A",188,0)
 ;
"RTN","IBCE837A",189,0)
SETVAR(IBXIEN,IBINS,IB0,IBSEC,IBNID,IB837R,IBDIV) ;
"RTN","IBCE837A",190,0)
 ; Set up variables needed for subscripts in sort global
"RTN","IBCE837A",191,0)
 ; ejk added IBSEC logic for patch 296
"RTN","IBCE837A",192,0)
 ; IBSEC=1 if primary bill, 2 if 2nd/non-MRA, 3 if 2nd/MRA
"RTN","IBCE837A",193,0)
 S IBSEC=$S($$COBN^IBCEF(IBXIEN)=1:1,'$$MRASEC^IBCEF4(IBXIEN):2,1:3)
"RTN","IBCE837A",194,0)
 S IBNID=$$PAYERID^IBCEF2(IBXIEN)
"RTN","IBCE837A",195,0)
 S IB837R=$$RECVR^IBCEF2(IBXIEN)
"RTN","IBCE837A",196,0)
 S IBDIV=$P($S($P(IB0,U,22):$$SITE^VASITE(DT,$P(IB0,U,22)),1:$$SITE^VASITE()),U,3)
"RTN","IBCE837A",197,0)
 I IBNID'="","RPIHS"[$E(IBNID),$E(IBNID,2,$L(IBNID))="PRNT" S IBNID=IBNID_"*"_IBINS
"RTN","IBCE837A",198,0)
 I IBNID="" S IBNID="*"_IBINS
"RTN","IBCE837A",199,0)
 S $P(IBNID,"*",3)=$S($P(IB0,U,22):$P(IB0,U,22),1:"")
"RTN","IBCE837A",200,0)
 Q
"RTN","IBCE837A",201,0)
 ;
"RTN","IBCE837H")
0^47^B24646452^n/a
"RTN","IBCE837H",1,0)
IBCE837H ;EDE/JWS - OUTPUT FOR 837 FHIR TRANSMISSION ;5/23/18 10:48am
"RTN","IBCE837H",2,0)
 ;;2.0;INTEGRATED BILLING;**623**;23-MAY-18;Build 70
"RTN","IBCE837H",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCE837H",4,0)
 ;
"RTN","IBCE837H",5,0)
GET(RESULT,ARG) ;get claim data for TAS Core 837
"RTN","IBCE837H",6,0)
 ;
"RTN","IBCE837H",7,0)
 K RESULT
"RTN","IBCE837H",8,0)
 D CLEANP^IBCE837A
"RTN","IBCE837H",9,0)
 N IBIEN,RES,IBSIZE,X0,X1,X2,X3,X4,X5,X9,DATA1,FIELD,FIELDS,J,I,DONE,FILE,CT,XREC,IBRECCT,IB364,IBTYPE,IBBDA,IBBNO,XX,IBRSBTST
"RTN","IBCE837H",10,0)
 S DUZ(0)="@" D DTNOLF^DICRW
"RTN","IBCE837H",11,0)
 K ^TMP($J,"FHIR837")
"RTN","IBCE837H",12,0)
 ; Get IEN for Claim File 399
"RTN","IBCE837H",13,0)
 S IBIEN=ARG("IEN399")
"RTN","IBCE837H",14,0)
 ;JWS;IB*2.0*623;6/26/19 - added ability to find data from claim#
"RTN","IBCE837H",15,0)
 I IBIEN'=+IBIEN S IBIEN=$O(^DGCR(399,"B",IBIEN,0))
"RTN","IBCE837H",16,0)
 ; Get Resource requested, '*' if all resources
"RTN","IBCE837H",17,0)
 S RES=$$TITLE^XLFSTR($G(ARG("RES"))),RES=$$RES^IBCE837I(RES)
"RTN","IBCE837H",18,0)
 I IBIEN="" D FINISH^IBCE837I Q
"RTN","IBCE837H",19,0)
 I '$D(^DGCR(399,IBIEN,0)) D FINISH^IBCE837I Q
"RTN","IBCE837H",20,0)
 ; JWS 1/1/19 - if IEN is invalid, quit
"RTN","IBCE837H",21,0)
 ; JWS;IB*2.0*623;need to set IBRSBTST if test for patch 608 compliance
"RTN","IBCE837H",22,0)
 S IB364=$$LAST364^IBCEF4(IBIEN)
"RTN","IBCE837H",23,0)
 S IBRSBTST=$$TEST^IBCE837I(IB364)
"RTN","IBCE837H",24,0)
 ; create 837 array of data using Output Formatter for form 8
"RTN","IBCE837H",25,0)
 S IBSIZE=$$EXTRACT^IBCEFG(8,IBIEN,1,.XX)
"RTN","IBCE837H",26,0)
 ; do not want to include BGN record in FHIR Transaction data
"RTN","IBCE837H",27,0)
 K ^TMP("IBXDATA",$J,1,1,1,1),^(2)
"RTN","IBCE837H",28,0)
 S IBBNO=$P($G(^TMP("IBHDR",$J)),U)
"RTN","IBCE837H",29,0)
 I IBBNO="" D FINISH^IBCE837I Q  ;JWS 1/7/19 if for some reason batch # is null
"RTN","IBCE837H",30,0)
 ;;JWS 3/19/19-use function to get IB364 entry
"RTN","IBCE837H",31,0)
 ;S IB364=$O(^IBA(364,"B",IBIEN,""),-1)
"RTN","IBCE837H",32,0)
 S IB364=$$LAST364^IBCEF4(IBIEN)
"RTN","IBCE837H",33,0)
 S IBBDA=$O(^IBA(364.1,"B",IBBNO,""))
"RTN","IBCE837H",34,0)
 S DR=".02////"_IBBDA
"RTN","IBCE837H",35,0)
 S DIE="^IBA(364,",DA=IB364 D ^DIE K DIE,DIC,DA,DINUM,DO,DD,DR
"RTN","IBCE837H",36,0)
 ; loop thru 837 flat file data records and fields
"RTN","IBCE837H",37,0)
 S X1="" F  S X1=$O(^TMP("IBXDATA",$J,1,X1)) Q:X1=""  S X2="" F  S X2=$O(^TMP("IBXDATA",$J,1,X1,X2)) Q:X2=""  D
"RTN","IBCE837H",38,0)
 . ; do not include blank record data
"RTN","IBCE837H",39,0)
 . I '$O(^TMP("IBXDATA",$J,1,X1,X2,1)) K ^(1) Q
"RTN","IBCE837H",40,0)
 . ; build array of # of occurrences of each record
"RTN","IBCE837H",41,0)
 . S XREC=$G(^(1)),XREC=$TR(XREC," ","") I XREC="" Q
"RTN","IBCE837H",42,0)
 . S IBRECCT(XREC)=$G(IBRECCT(XREC))+1
"RTN","IBCE837H",43,0)
 . ; for each field with data, get the Output Formatter defined field name
"RTN","IBCE837H",44,0)
 . S X4="" F  S X4=$O(^TMP("IBXDATA",$J,1,X1,X2,X4)) Q:X4=""  D
"RTN","IBCE837H",45,0)
 .. I $F(X4,".") Q
"RTN","IBCE837H",46,0)
 .. I X4=99 Q
"RTN","IBCE837H",47,0)
 .. ; field ien of file 364.6
"RTN","IBCE837H",48,0)
 .. S X5=$O(^IBA(364.6,"D","8,"_X1_",1,"_X4,0)) I X5="" Q
"RTN","IBCE837H",49,0)
 .. ; [10] field name defined in output formatter
"RTN","IBCE837H",50,0)
 .. S FIELD=$P(^IBA(364.6,X5,0),"^",10)
"RTN","IBCE837H",51,0)
 .. I FIELD["BLANK" Q
"RTN","IBCE837H",52,0)
 .. I FIELD["RECORD ID" S FIELD="RECORD ID"
"RTN","IBCE837H",53,0)
 .. ; get data from output formatter
"RTN","IBCE837H",54,0)
 .. S X0=$G(^TMP("IBXDATA",$J,1,X1,X2,X4))
"RTN","IBCE837H",55,0)
 .. I X0="" Q
"RTN","IBCE837H",56,0)
 .. I X4=1 S X0=$TR(X0," ","")
"RTN","IBCE837H",57,0)
 .. S X0=$$UP^XLFSTR(X0)
"RTN","IBCE837H",58,0)
 .. ;JWS;IB*2.0*623;problem with embedded " in data
"RTN","IBCE837H",59,0)
 .. I $F(X0,"""") S X0=$TR(X0,"""","'")  ;S X0=$$ESC^XLFJSONE(X0)
"RTN","IBCE837H",60,0)
 .. I RES'="*" D  Q
"RTN","IBCE837H",61,0)
 ... S DATA1="^TMP($J,""FHIR837"","""_RES_""")"
"RTN","IBCE837H",62,0)
 ... D SET^IBCE837L(RES,X1,X4,FIELD,X0)
"RTN","IBCE837H",63,0)
 .. F J="Basic","Organization","ValueSet","Coverage","Claim","Practitioner","Patient","Observation" S DATA1="^TMP($J,""FHIR837"","""_J_""")" D SET^IBCE837L(J,X1,X4,FIELD,X0) I DONE Q
"RTN","IBCE837H",64,0)
 .. F J="Location","ExplanationOfBenefit","Condition","Encounter","Procedure","ImagingStudy","CarePlan","EpisodeOfCare" S DATA1="^TMP($J,""FHIR837"","""_J_""")" D SET^IBCE837L(J,X1,X4,FIELD,X0) I DONE Q
"RTN","IBCE837H",65,0)
 .. F J="DocumentManifest","Communication","ClaimResponse","EligibilityRequest","ChargeItem","ProcedureRequest" S DATA1="^TMP($J,""FHIR837"","""_J_""")" D SET^IBCE837L(J,X1,X4,FIELD,X0) I DONE Q
"RTN","IBCE837H",66,0)
 .. F J="HealthcareService","RelatedPerson","Person","PaymentNotice","MedicationRequest","Medication" S DATA1="^TMP($J,""FHIR837"","""_J_""")" D SET^IBCE837L(J,X1,X4,FIELD,X0) I DONE Q
"RTN","IBCE837H",67,0)
 .. F J="MedicationDispense","PractitionerRole","SupplyRequest" S DATA1="^TMP($J,""FHIR837"","""_J_""")" D SET^IBCE837L(J,X1,X4,FIELD,X0) I DONE Q
"RTN","IBCE837H",68,0)
 .. Q
"RTN","IBCE837H",69,0)
 . Q
"RTN","IBCE837H",70,0)
 S X9="" F  S X9=$O(IBRECCT(X9)) Q:X9=""  D
"RTN","IBCE837H",71,0)
 . D UP^IBCE837I
"RTN","IBCE837H",72,0)
 . S ^TMP($J,"FHIR837","RecCount",CT,":")="{""valueString"":"_""""_X9_""""
"RTN","IBCE837H",73,0)
 . D UP^IBCE837I
"RTN","IBCE837H",74,0)
 . S ^TMP($J,"FHIR837","RecCount",CT,":")="""value"":"_""""_IBRECCT(X9)_"""}"
"RTN","IBCE837H",75,0)
 ; add claim type (live or test) to JSON message
"RTN","IBCE837H",76,0)
 ;;S IB364=$O(^IBA(364,"B",IBIEN,""),-1)
"RTN","IBCE837H",77,0)
 ;moved up 6/27/19;S IBTYPE=$$TEST^IBCE837I(IB364)
"RTN","IBCE837H",78,0)
 D UP^IBCE837I
"RTN","IBCE837H",79,0)
 S ^TMP($J,"FHIR837","RecCount",CT,":")="{""valueString"":"_"""status"""
"RTN","IBCE837H",80,0)
 D UP^IBCE837I
"RTN","IBCE837H",81,0)
 ;JWS;IB*2.0*623v24;reset IBRSBTST just in case it's been reused somewhere
"RTN","IBCE837H",82,0)
 S IBRSBTST=$$TEST^IBCE837I(IB364)
"RTN","IBCE837H",83,0)
 S ^TMP($J,"FHIR837","RecCount",CT,":")="""value"":"_""""_$S(IBRSBTST=0:"live",1:"test")_"""}"
"RTN","IBCE837H",84,0)
 ;JWS;IB*2.0*623v24;add re-submission flag, if defined
"RTN","IBCE837H",85,0)
 I $$GET1^DIQ(364,IB364_",",.1,"I") D
"RTN","IBCE837H",86,0)
 . D UP^IBCE837I
"RTN","IBCE837H",87,0)
 . S ^TMP($J,"FHIR837","RecCount",CT,":")="{""valueString"":"_"""isValidDuplicate"""
"RTN","IBCE837H",88,0)
 . D UP^IBCE837I
"RTN","IBCE837H",89,0)
 . S ^TMP($J,"FHIR837","RecCount",CT,":")="""value"":"_"""true""}"
"RTN","IBCE837H",90,0)
 . D SETSUB^IBCE837I(IB364,0)
"RTN","IBCE837H",91,0)
 ; create JSON structured message
"RTN","IBCE837H",92,0)
 D ENCODE^XLFJSONE("^TMP($J,""FHIR837"")","RESULT")
"RTN","IBCE837H",93,0)
 D FINISH^IBCE837I
"RTN","IBCE837H",94,0)
 ; clean up
"RTN","IBCE837H",95,0)
 D CLEANP^IBCE837A
"RTN","IBCE837H",96,0)
 Q
"RTN","IBCE837H",97,0)
 ;
"RTN","IBCE837I")
0^48^B25760500^n/a
"RTN","IBCE837I",1,0)
IBCE837I ;EDE/JWS - OUTPUT FOR 837 FHIR TRANSMISSION ;5/23/18 10:48am
"RTN","IBCE837I",2,0)
 ;;2.0;INTEGRATED BILLING;**623**;23-MAY-18;Build 70
"RTN","IBCE837I",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCE837I",4,0)
 ;
"RTN","IBCE837I",5,0)
RES(RES) ;Set resource name correctly
"RTN","IBCE837I",6,0)
 ;
"RTN","IBCE837I",7,0)
 ; Get Resource requested, '*' if all resources
"RTN","IBCE837I",8,0)
 I RES="*" Q RES
"RTN","IBCE837I",9,0)
 ;S RES=$$TITLE^XLFSTR($G(ARG("RES")))
"RTN","IBCE837I",10,0)
 I RES="Valueset" S RES="ValueSet" G Q
"RTN","IBCE837I",11,0)
 I RES="Explanationofbenefit" S RES="ExplanationOfBenefit" G Q
"RTN","IBCE837I",12,0)
 I RES="Imagingstudy" S RES="ImagingStudy" G Q
"RTN","IBCE837I",13,0)
 I RES="Careplan" S RES="CarePlan" G Q
"RTN","IBCE837I",14,0)
 I RES="Episodeofcare" S RES="EpisodeOfCare" G Q
"RTN","IBCE837I",15,0)
 I RES="Documentmanifest" S RES="DocumentManifest" G Q
"RTN","IBCE837I",16,0)
 I RES="Claimresponse" S RES="ClaimResponse" G Q
"RTN","IBCE837I",17,0)
 I RES="Eligibilityrequest" S RES="EligibilityRequest" G Q
"RTN","IBCE837I",18,0)
 I RES="Chargeitem" S RES="ChargeItem" G Q
"RTN","IBCE837I",19,0)
 I RES="Procedurerequest" S RES="ProcedureRequest" G Q
"RTN","IBCE837I",20,0)
 I RES="Healthcareservice" S RES="HealthcareService" G Q
"RTN","IBCE837I",21,0)
 I RES="Relatedperson" S RES="RelatedPerson" G Q
"RTN","IBCE837I",22,0)
 I RES="Paymentnotice" S RES="PaymentNotice" G Q
"RTN","IBCE837I",23,0)
 I RES="Medicationrequest" S RES="MedicationRequest" G Q
"RTN","IBCE837I",24,0)
 I RES="Medicationdispense" S RES="MedicationDispense" G Q
"RTN","IBCE837I",25,0)
 I RES="Practitionerrole" S RES="PractitionerRole" G Q
"RTN","IBCE837I",26,0)
 I RES="Supplyrequest" S RES="SupplyRequest"
"RTN","IBCE837I",27,0)
Q ;
"RTN","IBCE837I",28,0)
 Q RES
"RTN","IBCE837I",29,0)
 ;
"RTN","IBCE837I",30,0)
FINISH ; enclose message in '[ ]' when a Bundle
"RTN","IBCE837I",31,0)
 N X
"RTN","IBCE837I",32,0)
 I $G(RESULT(1))=""!($G(RESULT(1))="{}") S RESULT(1)="[{}]" Q
"RTN","IBCE837I",33,0)
 I $G(RES)="*" D
"RTN","IBCE837I",34,0)
 . S RESULT(1)="{""Bundle"":["_RESULT(1)
"RTN","IBCE837I",35,0)
 . S X=$O(RESULT("A"),-1)
"RTN","IBCE837I",36,0)
 . S RESULT(X)=RESULT(X)_"]}"
"RTN","IBCE837I",37,0)
 S RESULT(1)="["_RESULT(1)
"RTN","IBCE837I",38,0)
 S X=$O(RESULT("A"),-1)
"RTN","IBCE837I",39,0)
 S RESULT(X)=RESULT(X)_"]"
"RTN","IBCE837I",40,0)
 Q
"RTN","IBCE837I",41,0)
 ;
"RTN","IBCE837I",42,0)
END ; enclose message in '[ ]'
"RTN","IBCE837I",43,0)
 N X
"RTN","IBCE837I",44,0)
 I $G(RESULT(1))="" S RESULT(1)="{}"
"RTN","IBCE837I",45,0)
 S RESULT(1)="["_$G(RESULT(1))_"]"
"RTN","IBCE837I",46,0)
 Q
"RTN","IBCE837I",47,0)
 ;
"RTN","IBCE837I",48,0)
GET(RESULT,ARG) ;RPC - EDICLAIMS; get list of claims to transmit
"RTN","IBCE837I",49,0)
 ;
"RTN","IBCE837I",50,0)
 ;D APPERROR^%ZTER("RPC USER") ; WCJ TEMP LINE TO SEE SOME VARIABLES
"RTN","IBCE837I",51,0)
 N CT,DUZ,IBGBL,IBX,IBTEST,IBXIEN,IB0,IBTXST,IBTXTEST,IBBTYP,IBDIV,IB837R,IBNF,IBNOTX
"RTN","IBCE837I",52,0)
 K ^TMP($J,"BILL"),^TMP($J,"FHIR837")
"RTN","IBCE837I",53,0)
 S DUZ(0)="@" D DTNOLF^DICRW
"RTN","IBCE837I",54,0)
 S IBGBL="^IBA(364,""AC"",1)",CT=1
"RTN","IBCE837I",55,0)
 S IBX="" F  S IBX=$O(@IBGBL@(IBX)) Q:'IBX  D
"RTN","IBCE837I",56,0)
 . S IBTEST=$$GET1^DIQ(364,IBX_",",.07,"I")
"RTN","IBCE837I",57,0)
 . S IBXIEN=+$G(^IBA(364,IBX,0)),IBNF=""
"RTN","IBCE837I",58,0)
 . S IB0=$G(^DGCR(399,IBXIEN,0))
"RTN","IBCE837I",59,0)
 . S IBTXST=$$TXMT^IBCEF4(IBXIEN,.IBNOTX,IBNF)
"RTN","IBCE837I",60,0)
 . ;JWS;IB*2.0*623v25;if claim is invalid to send, remove from 'AC' index
"RTN","IBCE837I",61,0)
 . I IBTXST="" D REMCLM(IBX) Q  ; no txmt
"RTN","IBCE837I",62,0)
 . I IB0="" D REMCLM(IBX) Q
"RTN","IBCE837I",63,0)
 . I $P(IB0,U,13)>4,'IBTEST D REMCLM(IBX) Q
"RTN","IBCE837I",64,0)
 . I $F($P(IB0,U),"-") D REMCLM(IBX) Q
"RTN","IBCE837I",65,0)
 . ;JWS;end IB*2.0*623v25;
"RTN","IBCE837I",66,0)
 . S IBTXTEST=$S(IBTEST:2,1:+$$TEST^IBCEF4(IBXIEN))
"RTN","IBCE837I",67,0)
 . S IBBTYP=$P("P^I^D",U,$S($$FT^IBCEF(IBXIEN)=7:3,1:($$FT^IBCEF(IBXIEN)=3)+1))_"-"_IBTXTEST
"RTN","IBCE837I",68,0)
 . ;JWS;IB*2.0*623v25;if not sending, remove from queue
"RTN","IBCE837I",69,0)
 . I $$TESTPT^IBCEU($P(IB0,U,2)),'IBTXTEST D REMCLM(IBX) Q
"RTN","IBCE837I",70,0)
 . ;JWS;IB*2.0*623v25;if not sending, remove from queue
"RTN","IBCE837I",71,0)
 . I $D(^TMP($J,"BILL",$P(IB0,U))) D REMCLM(IBX) Q  ; do not send duplicates
"RTN","IBCE837I",72,0)
 . S ^TMP($J,"BILL",$P(IB0,U))=""
"RTN","IBCE837I",73,0)
 . S IBDIV=$P($S($P(IB0,U,22):$$SITE^VASITE(DT,$P(IB0,U,22)),1:$$SITE^VASITE()),U,3)
"RTN","IBCE837I",74,0)
 . S IB837R=$$RECVR^IBCEF2(IBXIEN)
"RTN","IBCE837I",75,0)
 . I $L($G(RESULT(CT)))>3000 S RESULT(CT)=RESULT(CT)_",",CT=$G(CT)+1
"RTN","IBCE837I",76,0)
 . ;;I IBDIV=442 S IBDIV=681 ; for eBilling_dev environment
"RTN","IBCE837I",77,0)
 . S RESULT(CT)=$S($G(RESULT(CT))'="":RESULT(CT)_",",1:"")_"{""ien"":"""_IBXIEN_""",""site"":"""_IBDIV_""",""type"":"""_IB837R_""",""status"":"""_$S(IBTXTEST=0:"live",1:"test")_"""}"
"RTN","IBCE837I",78,0)
 . Q
"RTN","IBCE837I",79,0)
 D FINISH
"RTN","IBCE837I",80,0)
 Q
"RTN","IBCE837I",81,0)
 ;
"RTN","IBCE837I",82,0)
TESTING ;
"RTN","IBCE837I",83,0)
 ;K (ARG,U)
"RTN","IBCE837I",84,0)
 N I,RESOURCE
"RTN","IBCE837I",85,0)
 S ARG("IEN399")=2113336 ; 2113336 - PROF  ;2113173 - Dental (1 line)  ;2113182 - dental ;211334 - INST
"RTN","IBCE837I",86,0)
 R !,"Resource Requested: ",RESOURCE:30 Q:RESOURCE=""
"RTN","IBCE837I",87,0)
 S ARG("RES")=RESOURCE  ;"Basic" or "*"
"RTN","IBCE837I",88,0)
 D GET^IBCE837H(.RESULT,.ARG)
"RTN","IBCE837I",89,0)
 F I=1:1 Q:'$D(RESULT(I))  W:I=1 ! W RESULT(I)
"RTN","IBCE837I",90,0)
 Q
"RTN","IBCE837I",91,0)
 ;
"RTN","IBCE837I",92,0)
REC(REC) ;check to see which records are repeating
"RTN","IBCE837I",93,0)
 I $F(",63,104.8,104.91,105,107,110,112,113,114,115,120,125,130,135,170,170.5,171,172,173,176,177,178,178.1,180,",","_REC_",") Q 1
"RTN","IBCE837I",94,0)
 I REC>180 Q 1
"RTN","IBCE837I",95,0)
 Q 0
"RTN","IBCE837I",96,0)
 ;
"RTN","IBCE837I",97,0)
SETD ; update ^TMP global
"RTN","IBCE837I",98,0)
 S DONE=1
"RTN","IBCE837I",99,0)
 D UP
"RTN","IBCE837I",100,0)
 ;S @DATA1@(CT,":")=DATA_FILE_"-"_FLD_"-"_NAME_"("_X1_")"""  ; includes record # for testing
"RTN","IBCE837I",101,0)
 S @DATA1@(CT,":")=DATA_FILE_"-"_FLD_$S($$REC(X1):"."_X2,1:"")_"-"_NAME_""""
"RTN","IBCE837I",102,0)
 D UP
"RTN","IBCE837I",103,0)
 S @DATA1@(CT,":")="""value"":"""_TASDATA_"""}"
"RTN","IBCE837I",104,0)
 Q
"RTN","IBCE837I",105,0)
 ;
"RTN","IBCE837I",106,0)
UP ;increment CT
"RTN","IBCE837I",107,0)
 S CT=$G(CT)+1
"RTN","IBCE837I",108,0)
 Q
"RTN","IBCE837I",109,0)
 ;
"RTN","IBCE837I",110,0)
SETCLM(IBIEN,IBQ,RSUB) ; set the FHIR 837 claim for submission
"RTN","IBCE837I",111,0)
 N DA,D0,DR,DIE,DIC
"RTN","IBCE837I",112,0)
 S DA=IBIEN I DA="" Q
"RTN","IBCE837I",113,0)
 I '$$PROD^XUPROD(1) S IBQ="MCT"  ; if on a non-production server, send to test queue.
"RTN","IBCE837I",114,0)
 ;JWS;IB*2.0*623v24;added field .10 to 364 file entry if a resubmission
"RTN","IBCE837I",115,0)
 S DR=".09////1"_$S(IBQ="MCT":";.07////1",1:";.07////0")_$S($G(RSUB)=1:";.1////1",1:""),DIE="^IBA(364,"
"RTN","IBCE837I",116,0)
 D ^DIE
"RTN","IBCE837I",117,0)
 Q
"RTN","IBCE837I",118,0)
 ;JWS;IB*2.0*623v24
"RTN","IBCE837I",119,0)
SETSUB(IBIEN,IBVAL) ; clear the resubmission flag
"RTN","IBCE837I",120,0)
 N DA,D0,DR,DIE,DIC
"RTN","IBCE837I",121,0)
 S DA=IBIEN I DA="" Q
"RTN","IBCE837I",122,0)
 S DR=".1////"_IBVAL,DIE="^IBA(364,"
"RTN","IBCE837I",123,0)
 D ^DIE
"RTN","IBCE837I",124,0)
 Q
"RTN","IBCE837I",125,0)
 ;
"RTN","IBCE837I",126,0)
TEST(IBIEN364) ; return test flag
"RTN","IBCE837I",127,0)
 N IBTEST,IBXIEN,IBTXTEST
"RTN","IBCE837I",128,0)
 S IBTEST=$$GET1^DIQ(364,IBIEN364_",",.07,"I")
"RTN","IBCE837I",129,0)
 S IBXIEN=+$G(^IBA(364,IBIEN364,0)),IBNF=""
"RTN","IBCE837I",130,0)
 ;JWS;IB*2.0*623v24;7/19/19 - make sure non-prod claims are sent to test queue
"RTN","IBCE837I",131,0)
 S IBTXTEST=$S(IBTEST:2,'$$PROD^XUPROD(1):1,1:+$$TEST^IBCEF4(IBXIEN))
"RTN","IBCE837I",132,0)
 ;S IBTXTEST=$S(IBTEST:2,1:+$$TEST^IBCEF4(IBXIEN))
"RTN","IBCE837I",133,0)
 Q $S(IBTXTEST=0:0,1:1)
"RTN","IBCE837I",134,0)
 ;
"RTN","IBCE837I",135,0)
 ;JWS;IB*2.0*623;v25
"RTN","IBCE837I",136,0)
REMCLM(IB364) ; clear the FHIR 837 claim for submission
"RTN","IBCE837I",137,0)
 N DA,D0,DR,DIE,DIC
"RTN","IBCE837I",138,0)
 S DA=IB364 I DA="" Q
"RTN","IBCE837I",139,0)
 S DR=".03////Z;.09////2",DIE="^IBA(364,"
"RTN","IBCE837I",140,0)
 D ^DIE
"RTN","IBCE837I",141,0)
 Q
"RTN","IBCE837I",142,0)
 ;
"RTN","IBCE837K")
0^49^B10284174^n/a
"RTN","IBCE837K",1,0)
IBCE837K ;EDE/JWS - ACK FOR 837 FHIR TRANSMISSION ;8/6/18 10:48am
"RTN","IBCE837K",2,0)
 ;;2.0;INTEGRATED BILLING;**623**;21-MAR-94;Build 70
"RTN","IBCE837K",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCE837K",4,0)
 ;
"RTN","IBCE837K",5,0)
GET(RESULT,ARG) ;RPC - EDIACKCLAIMS; ack queue posting
"RTN","IBCE837K",6,0)
 ;
"RTN","IBCE837K",7,0)
 N IBIEN,IBRES,IB364,IBTEST,IBBILL,IBTXTEST,IBBTYP,IBDESC,IBBATCH,RES,DUZ
"RTN","IBCE837K",8,0)
 K RESULT
"RTN","IBCE837K",9,0)
 S DUZ(0)="@" D DTNOLF^DICRW
"RTN","IBCE837K",10,0)
 ; Get IEN for Claim File 399
"RTN","IBCE837K",11,0)
 S IBIEN=$G(ARG("IEN399")) ;$G not necessary for VistaLink provides the parameters defined
"RTN","IBCE837K",12,0)
 ; Get IBRES which is the statusCode value of the write to Rabbit MQ 837Transactions queue
"RTN","IBCE837K",13,0)
 ;   837 Business service will not attempt to execute this RPC unless this value = 200, so value will always
"RTN","IBCE837K",14,0)
 ;   be = 200
"RTN","IBCE837K",15,0)
 S IBRES=$G(ARG("RES"))  ;$G not necessary for VistaLink provides the parameters defined
"RTN","IBCE837K",16,0)
 ; execute code to set claim status as received at FSC
"RTN","IBCE837K",17,0)
 I IBRES'=200 S RES=0 G R
"RTN","IBCE837K",18,0)
 ;;S IB364=$O(^IBA(364,"B",IBIEN,""),-1)
"RTN","IBCE837K",19,0)
 S IB364=$$LAST364^IBCEF4(IBIEN)
"RTN","IBCE837K",20,0)
 ;JWS;IB*2.0*623v24;in case there is a newer entry in file 364... seen once @ IOC vegas 7/22/19
"RTN","IBCE837K",21,0)
 I IB364 D
"RTN","IBCE837K",22,0)
 . I '$D(^IBA(364,"AC",1,IB364)) D
"RTN","IBCE837K",23,0)
 .. N X1 S X1="A" F  S X1=$O(^IBA(364,"B",IBIEN,X1),-1) Q:X1=""  I $D(^IBA(364,"AC",1,X1)) Q
"RTN","IBCE837K",24,0)
 .. I X1 S IB364=X1
"RTN","IBCE837K",25,0)
 . ;JWS;IB*2.0*623;7/24/19 make sure non-prod systems are reported posted to test queue
"RTN","IBCE837K",26,0)
 . S IBTEST=$G(^IBA(364,"AC",1,IB364)),IBBILL(IB364)="",IBTXTEST=$S(IBTEST:2,'$$PROD^XUPROD(1):1,1:+$$TEST^IBCEF4(IBIEN)),IBBTYP=$P("P^I^D",U,$S($$FT^IBCEF(IBIEN)=7:3,1:($$FT^IBCEF(IBIEN)=3)+1))_"-"_IBTXTEST
"RTN","IBCE837K",27,0)
 . S IBDESC=$S('IBTXTEST:"",1:"TEST ")_$S($E(IBBTYP)="P":"PROF",$E(IBBTYP)="D":"DENT",1:"INST")_" CLAIM-"_$$HTE^XLFDT($H,2)
"RTN","IBCE837K",28,0)
 . S IBBATCH=$$GET1^DIQ(364,IB364_",",.02,"E")
"RTN","IBCE837K",29,0)
 . D UPD^IBCE837A("",IBBATCH,1,.IBBILL,IBDESC,IBBTYP,"")
"RTN","IBCE837K",30,0)
 . K DIE
"RTN","IBCE837K",31,0)
 . D EMAIL(IBIEN,IBTXTEST,IBBATCH)
"RTN","IBCE837K",32,0)
 . Q
"RTN","IBCE837K",33,0)
 S RES=1
"RTN","IBCE837K",34,0)
 ;
"RTN","IBCE837K",35,0)
R ; setup return JSON
"RTN","IBCE837K",36,0)
 ; create JSON structured message
"RTN","IBCE837K",37,0)
 S RES("ien")=IBIEN
"RTN","IBCE837K",38,0)
 S RES("status")=RES  ;result of update
"RTN","IBCE837K",39,0)
 D ENCODE^XLFJSONE("RES","RESULT")
"RTN","IBCE837K",40,0)
 D FINISH^IBCE837I
"RTN","IBCE837K",41,0)
 Q
"RTN","IBCE837K",42,0)
 ;
"RTN","IBCE837K",43,0)
EMAIL(IBIEN,IBTXTEST,IBBATCH) ; Send an email message to MCT mail group - to emulate existing functionality
"RTN","IBCE837K",44,0)
 N ODUZ,IBCLAIM,IBTQ,IBLQ,IBEQ,SUBJ,MSG,XMTO,XMINSTR,IBBATCHN,X
"RTN","IBCE837K",45,0)
 S ODUZ=DUZ,DUZ=.5
"RTN","IBCE837K",46,0)
 S IBCLAIM=$$GET1^DIQ(399,IBIEN_",",.01)
"RTN","IBCE837K",47,0)
 S IBTQ=$$GET1^DIQ(350.9,"1,",8.09)
"RTN","IBCE837K",48,0)
 S IBLQ=$$GET1^DIQ(350.9,"1,",8.01)
"RTN","IBCE837K",49,0)
 ;JWS;IB*2.0*623;6/5/19 - display claim IEN to force uniqueness
"RTN","IBCE837K",50,0)
 ;S X=$P($H,",",2)
"RTN","IBCE837K",51,0)
 S IBEQ=$S(IBTXTEST:IBTQ,1:IBLQ)
"RTN","IBCE837K",52,0)
 S SUBJ="AEG"_IBIEN_" "_IBEQ_" Confirmation"
"RTN","IBCE837K",53,0)
 S IBBATCHN=$O(^IBA(364.1,"B",IBBATCH,""))
"RTN","IBCE837K",54,0)
 S MSG(1)="Ref:  Your "_IBEQ_" claim ("_IBCLAIM_" #"_IBBATCHN_")"_" ("_IBBATCH_")"
"RTN","IBCE837K",55,0)
 S MSG(2)="was placed successfully onto the 837Transactions"_$S(IBEQ="MCT":"Test",1:"")
"RTN","IBCE837K",56,0)
 S MSG(3)="queue for Austin to process."
"RTN","IBCE837K",57,0)
 ; ***testing email vs live*** must change back to live before putting in build ***
"RTN","IBCE837K",58,0)
 ;S XMTO("john.smith5@domain.ext")=""
"RTN","IBCE837K",59,0)
 ;S XMTO("william.jutzi@domain.ext")=""
"RTN","IBCE837K",60,0)
 ;S XMTO("VHAeBillingRR@domain.ext")=""
"RTN","IBCE837K",61,0)
 ;;S XMTO("SMITH.JOHN@TAS-EBIL-DEV.AAC.DOMAIN.EXT")=""
"RTN","IBCE837K",62,0)
 S XMTO("G.CLAIMS4US")=""
"RTN","IBCE837K",63,0)
 S XMTO("G."_IBEQ)=""
"RTN","IBCE837K",64,0)
 S XMINSTR("FROM")="VistA-eBilling 837 FHIR Submission Process"
"RTN","IBCE837K",65,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO,.XMINSTR)
"RTN","IBCE837K",66,0)
 ;
"RTN","IBCE837K",67,0)
EMAILX ;
"RTN","IBCE837K",68,0)
 ;
"RTN","IBCE837K",69,0)
 D CLEAN^DILF
"RTN","IBCE837K",70,0)
 S DUZ=ODUZ
"RTN","IBCE837K",71,0)
 Q
"RTN","IBCE837K",72,0)
 ;
"RTN","IBCE837L")
0^63^B142355439^n/a
"RTN","IBCE837L",1,0)
IBCE837L ;EDE/JWS - OUTPUT FOR 837 FHIR TRANSMISSION ;5/23/18 10:48am
"RTN","IBCE837L",2,0)
 ;;2.0;INTEGRATED BILLING;**623**;23-MAY-18;Build 70
"RTN","IBCE837L",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCE837L",4,0)
 ;
"RTN","IBCE837L",5,0)
SET(RES,SQ,FLD,NAME,TASDATA) ;
"RTN","IBCE837L",6,0)
 ;RES = FHIR resource name
"RTN","IBCE837L",7,0)
 ;SQ = Output Formatter seq #
"RTN","IBCE837L",8,0)
 ;FLD = Output Formatter field #
"RTN","IBCE837L",9,0)
 ;NAME = Output Formatter field name
"RTN","IBCE837L",10,0)
 N DATA
"RTN","IBCE837L",11,0)
 S DONE=0
"RTN","IBCE837L",12,0)
 S DATA="{""valueString"":""837-"
"RTN","IBCE837L",13,0)
 D  Q:DONE
"RTN","IBCE837L",14,0)
 . I FLD=1 S FILE=TASDATA,DONE=1 Q
"RTN","IBCE837L",15,0)
 . I RES="Basic" D  Q
"RTN","IBCE837L",16,0)
 .. I SQ=5 D  Q  ;GEN
"RTN","IBCE837L",17,0)
 ... I FLD>1 D S Q
"RTN","IBCE837L",18,0)
 .. I SQ=16 D  Q  ;PRV1
"RTN","IBCE837L",19,0)
 ... F I=2,3 I FLD=I D S Q
"RTN","IBCE837L",20,0)
 .. I SQ=30 D  Q  ;CI2
"RTN","IBCE837L",21,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",22,0)
 .. I SQ=32 D  Q  ;CI2A
"RTN","IBCE837L",23,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",24,0)
 .. I SQ=36 D  Q  ;CI3A
"RTN","IBCE837L",25,0)
 ... F I=3:1:9 I FLD=I D S Q
"RTN","IBCE837L",26,0)
 .. I SQ=50 D  Q  ;CL1
"RTN","IBCE837L",27,0)
 ... F I=7,32 I FLD=I D S Q
"RTN","IBCE837L",28,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",29,0)
 ... F I=10:1:12,14,23 I FLD=I D S Q
"RTN","IBCE837L",30,0)
 .. I SQ=65 D  Q  ;OC1-OC12
"RTN","IBCE837L",31,0)
 ... F I=2,3 I FLD=I D S Q
"RTN","IBCE837L",32,0)
 .. I SQ=70 D  Q  ;OS1-OS12
"RTN","IBCE837L",33,0)
 ... I FLD=4 D S Q
"RTN","IBCE837L",34,0)
 .. I SQ=105 D  Q  ;OI1
"RTN","IBCE837L",35,0)
 ... I FLD=9 D S Q
"RTN","IBCE837L",36,0)
 .. I SQ=180 D  Q  ;PRF
"RTN","IBCE837L",37,0)
 ... F I=6,22:1:24,29 I FLD=I D S Q
"RTN","IBCE837L",38,0)
 .. I SQ=185 D  Q  ;INS
"RTN","IBCE837L",39,0)
 ... F I=2,3,5,12,15,16 I FLD=I D S Q
"RTN","IBCE837L",40,0)
 .. I SQ=186 D  Q  ;DEN
"RTN","IBCE837L",41,0)
 ... F I=2,3,14:1:19 I FLD=I D S Q
"RTN","IBCE837L",42,0)
 .. I SQ=186.1 D  Q  ;DEN1
"RTN","IBCE837L",43,0)
 ... F I=2,3,8,10,12,14 I FLD=I D S Q
"RTN","IBCE837L",44,0)
 .. I SQ=186.2 D  Q  ;DEN2
"RTN","IBCE837L",45,0)
 ... I FLD>1 D S Q
"RTN","IBCE837L",46,0)
 .. I SQ=190 D  Q  ;RX1
"RTN","IBCE837L",47,0)
 ... F I=2,11 I FLD=I D S Q
"RTN","IBCE837L",48,0)
 .. I SQ=191 D  Q  ;LDAT
"RTN","IBCE837L",49,0)
 ... F I=2,7,8,11,12 I FLD=I D S Q
"RTN","IBCE837L",50,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",51,0)
 ... F I=2,3,5,10,12,14,15 I FLD=I D S Q
"RTN","IBCE837L",52,0)
 .. I SQ=191.7 D  Q  ;MEA
"RTN","IBCE837L",53,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",54,0)
 .. I SQ=192 D  Q  ;LOPE
"RTN","IBCE837L",55,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",56,0)
 .. I SQ=193 D  Q  ;LOP1
"RTN","IBCE837L",57,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",58,0)
 .. I SQ=193.3 D  Q  ;LREN
"RTN","IBCE837L",59,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",60,0)
 .. I SQ=193.6 D  Q  ;LPUR
"RTN","IBCE837L",61,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",62,0)
 .. I SQ=194 D  Q  ;LSUP
"RTN","IBCE837L",63,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",64,0)
 .. I SQ=194.3 D  Q  ;LREF
"RTN","IBCE837L",65,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",66,0)
 .. I SQ=194.5 D  Q  ;LSUR
"RTN","IBCE837L",67,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",68,0)
 .. I SQ=194.6 D  Q  ;LSR1
"RTN","IBCE837L",69,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",70,0)
 .. I SQ=195 D  Q  ;LCOB
"RTN","IBCE837L",71,0)
 ... F I=2,6,12,13,18 I FLD=I D S Q
"RTN","IBCE837L",72,0)
 .. I SQ=200 D  Q  ;LCAS
"RTN","IBCE837L",73,0)
 ... F I=2,3,9,12,15,18,21,22 I FLD=I D S Q
"RTN","IBCE837L",74,0)
 .. I SQ=205 D  Q  ;LQ
"RTN","IBCE837L",75,0)
 ... F I=2:1:4 I FLD=I D S Q
"RTN","IBCE837L",76,0)
 .. I SQ=210 D  Q  ;FRM
"RTN","IBCE837L",77,0)
 ... F I=2,7 I FLD=I D S Q
"RTN","IBCE837L",78,0)
 . I RES="CarePlan" D  Q
"RTN","IBCE837L",79,0)
 .. I SQ=62 D  Q  ;DN1
"RTN","IBCE837L",80,0)
 ... F I=4:1:6 I FLD=I D S Q
"RTN","IBCE837L",81,0)
 .. I SQ=104.9 D  Q  ;AMB1
"RTN","IBCE837L",82,0)
 ... I FLD=4 D S Q
"RTN","IBCE837L",83,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",84,0)
 ... I FLD=11 D S Q
"RTN","IBCE837L",85,0)
 . I RES="ChargeItem" D  Q
"RTN","IBCE837L",86,0)
 .. I SQ=60 D  Q  ;UB1
"RTN","IBCE837L",87,0)
 ... I FLD=19 D S Q
"RTN","IBCE837L",88,0)
 .. I SQ=80 D  Q  ;VC1-VC12
"RTN","IBCE837L",89,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",90,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",91,0)
 . I RES="Claim" D  Q
"RTN","IBCE837L",92,0)
 .. I SQ=20 D  Q  ;CI1
"RTN","IBCE837L",93,0)
 ... I FLD=15 D S Q
"RTN","IBCE837L",94,0)
 .. I SQ=45 D  Q  ;PT2
"RTN","IBCE837L",95,0)
 ... F I=5,6 I FLD=I D S Q
"RTN","IBCE837L",96,0)
 .. I SQ=50 D  Q  ;CL1
"RTN","IBCE837L",97,0)
 ... F I=2,4:1:6,9:1:17,20,21,28:1:31,38 I FLD=I D S Q
"RTN","IBCE837L",98,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",99,0)
 ... F I=13,29,30 I FLD=I D S Q
"RTN","IBCE837L",100,0)
 .. I SQ=55 D  Q  ;SUB
"RTN","IBCE837L",101,0)
 ... F I=7,10 I FLD=I D S Q
"RTN","IBCE837L",102,0)
 .. I SQ=62 D  Q  ;DN1
"RTN","IBCE837L",103,0)
 ... F I=2,3 I FLD=I D S Q
"RTN","IBCE837L",104,0)
 .. I SQ=63 D  Q  ;DN2
"RTN","IBCE837L",105,0)
 ... F I=2:1:4 I FLD=I D S Q
"RTN","IBCE837L",106,0)
 .. I SQ=105 D  Q  ;OI1
"RTN","IBCE837L",107,0)
 ... I FLD=7 D S Q
"RTN","IBCE837L",108,0)
 .. I SQ=107 D  Q  ;OI1A
"RTN","IBCE837L",109,0)
 ... F I=8,9 I FLD=I D S Q
"RTN","IBCE837L",110,0)
 .. I SQ=112 D  Q  ;OI4
"RTN","IBCE837L",111,0)
 ... F I=11,12 I FLD=I D S Q
"RTN","IBCE837L",112,0)
 .. I SQ=115 D  Q  ;COB1
"RTN","IBCE837L",113,0)
 ... I FLD=7 D S Q
"RTN","IBCE837L",114,0)
 .. I SQ=180 D  Q  ;PRF
"RTN","IBCE837L",115,0)
 ... I FLD=5 D S Q
"RTN","IBCE837L",116,0)
 .. I SQ=185 D  Q  ;INS
"RTN","IBCE837L",117,0)
 ... I FLD=9 D S Q
"RTN","IBCE837L",118,0)
 .. I SQ=186 D  Q  ;DEN
"RTN","IBCE837L",119,0)
 ... I FLD=12 D S Q
"RTN","IBCE837L",120,0)
 .. I SQ=191 D  Q  ;LDAT
"RTN","IBCE837L",121,0)
 ... I FLD=14 D S Q
"RTN","IBCE837L",122,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",123,0)
 ... I FLD=7 D S Q
"RTN","IBCE837L",124,0)
 . I RES="ClaimResponse" D  Q
"RTN","IBCE837L",125,0)
 .. I SQ=60 D  Q  ;UB1
"RTN","IBCE837L",126,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",127,0)
 .. I SQ=105 D  Q  ;OI1
"RTN","IBCE837L",128,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",129,0)
 .. I SQ=107 D  Q  ;OI1A
"RTN","IBCE837L",130,0)
 ... F I=2:1:7 I FLD=I D S Q
"RTN","IBCE837L",131,0)
 .. I SQ=110 D  Q  ;OI2
"RTN","IBCE837L",132,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",133,0)
 .. I SQ=112 D  Q  ;OI4
"RTN","IBCE837L",134,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",135,0)
 .. I SQ=113 D  Q  ;OI5
"RTN","IBCE837L",136,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",137,0)
 .. I SQ=114 D  Q  ;OI6
"RTN","IBCE837L",138,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",139,0)
 .. I SQ=115 D  Q  ;COB1
"RTN","IBCE837L",140,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",141,0)
 .. I SQ=120 D  Q  ;MOA1
"RTN","IBCE837L",142,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",143,0)
 .. I SQ=125 D  Q  ;MIA1
"RTN","IBCE837L",144,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",145,0)
 .. I SQ=130 D  Q  ;MIA2
"RTN","IBCE837L",146,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",147,0)
 .. I SQ=135 D  Q  ;CCAS
"RTN","IBCE837L",148,0)
 ... F I=2:1:21 I FLD=I D S Q
"RTN","IBCE837L",149,0)
 .. I SQ=170 D  Q  ;OP1
"RTN","IBCE837L",150,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",151,0)
 .. I SQ=170.5 D  Q  ;OP1A
"RTN","IBCE837L",152,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",153,0)
 .. I SQ=171 D  Q  ;OP2
"RTN","IBCE837L",154,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",155,0)
 .. I SQ=172 D  Q  ;OP3
"RTN","IBCE837L",156,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",157,0)
 .. I SQ=173 D  Q  ;OP4
"RTN","IBCE837L",158,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",159,0)
 .. I SQ=176 D  Q  ;OP7
"RTN","IBCE837L",160,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",161,0)
 .. I SQ=177 D  Q  ;OP8
"RTN","IBCE837L",162,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",163,0)
 .. I SQ=178 D  Q  ;OP9
"RTN","IBCE837L",164,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",165,0)
 .. I SQ=178.1 D  Q  ;OP10
"RTN","IBCE837L",166,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",167,0)
 .. I SQ=195 D  Q  ;LCOB
"RTN","IBCE837L",168,0)
 ... I FLD=4 D S Q
"RTN","IBCE837L",169,0)
 . I RES="Communication" D  Q
"RTN","IBCE837L",170,0)
 .. I SQ=52 D  Q  ;CL1B
"RTN","IBCE837L",171,0)
 ... F I=3:1:5 I FLD=I D S Q
"RTN","IBCE837L",172,0)
 .. I SQ=60 D  Q  ;UB1
"RTN","IBCE837L",173,0)
 ... F I=20,21 I FLD=I D S Q
"RTN","IBCE837L",174,0)
 .. I SQ=191 D  Q  ;LDAT
"RTN","IBCE837L",175,0)
 ... F I=3:1:6 I FLD=I D S Q
"RTN","IBCE837L",176,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",177,0)
 ... F I=16,17 I FLD=I D S Q
"RTN","IBCE837L",178,0)
 .. I SQ=210 D  Q  ;FRM
"RTN","IBCE837L",179,0)
 ... F I=3:1:6 I FLD=I D S Q
"RTN","IBCE837L",180,0)
 . I RES="Condition" D  Q
"RTN","IBCE837L",181,0)
 .. I SQ=50 D  Q  ;CL1
"RTN","IBCE837L",182,0)
 ... I FLD=18 D S Q
"RTN","IBCE837L",183,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",184,0)
 ... F I=7,8,16,18,20,22,24 I FLD=I D S Q
"RTN","IBCE837L",185,0)
 .. I SQ=85 D  Q  ;CC1-CC12
"RTN","IBCE837L",186,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",187,0)
 .. I SQ=180 D  Q  ;PRF
"RTN","IBCE837L",188,0)
 ... F I=11:1:14 I FLD=I D S Q
"RTN","IBCE837L",189,0)
 .. I SQ=186.1 D  Q  ;DEN1
"RTN","IBCE837L",190,0)
 ... F I=4:1:7,9 I FLD=I D S Q
"RTN","IBCE837L",191,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",192,0)
 ... F I=8,9 I FLD=I D S Q
"RTN","IBCE837L",193,0)
 . I RES="Coverage" D  Q
"RTN","IBCE837L",194,0)
 .. I SQ=20 D  Q  ;CI1
"RTN","IBCE837L",195,0)
 ... I FLD=12 D S Q
"RTN","IBCE837L",196,0)
 .. I SQ=35 D  Q  ;CI3
"RTN","IBCE837L",197,0)
 ... F I=2,3 I FLD=I D S Q
"RTN","IBCE837L",198,0)
 .. I SQ=40 D  Q  ;PT1
"RTN","IBCE837L",199,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",200,0)
 .. I SQ=60 D  Q  ;UB1
"RTN","IBCE837L",201,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",202,0)
 .. I SQ=105 D  Q  ;OI1
"RTN","IBCE837L",203,0)
 ... F I=4,5,8 I FLD=I D S Q
"RTN","IBCE837L",204,0)
 .. I SQ=110 D  Q  ;OI2
"RTN","IBCE837L",205,0)
 ... F I=3,11 I FLD=I D S Q
"RTN","IBCE837L",206,0)
 . I RES="DocumentManifest" D  Q
"RTN","IBCE837L",207,0)
 .. I SQ=52 D  Q  ;CL1B
"RTN","IBCE837L",208,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",209,0)
 . I RES="EligibilityRequest" D  Q
"RTN","IBCE837L",210,0)
 .. I SQ=60 D  Q  ;UB1
"RTN","IBCE837L",211,0)
 ... I FLD=4 D S Q
"RTN","IBCE837L",212,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",213,0)
 ... I FLD=13 D S Q
"RTN","IBCE837L",214,0)
 . I RES="Encounter" D  Q
"RTN","IBCE837L",215,0)
 .. I SQ=50 D  Q  ;CL1
"RTN","IBCE837L",216,0)
 ... F I=22:1:24 I FLD=I D S Q
"RTN","IBCE837L",217,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",218,0)
 ... F I=15,17,19,21 I FLD=I D S Q
"RTN","IBCE837L",219,0)
 .. I SQ=90 D  Q  ;DC1-DC12
"RTN","IBCE837L",220,0)
 ... F I=2:1:4 I FLD=I D S Q
"RTN","IBCE837L",221,0)
 . I RES="EpisodeOfCare" D  Q
"RTN","IBCE837L",222,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",223,0)
 ... F I=25:1:28 I FLD=I D S Q
"RTN","IBCE837L",224,0)
 . I RES="ExplanationOfBenefit" D  Q
"RTN","IBCE837L",225,0)
 .. I SQ=50 D  Q  ;CL1
"RTN","IBCE837L",226,0)
 ... I FLD=8 D S Q
"RTN","IBCE837L",227,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",228,0)
 ... I FLD=5 D S Q
"RTN","IBCE837L",229,0)
 .. I SQ=120 D  Q  ;MOA1
"RTN","IBCE837L",230,0)
 ... F I=3:1:11 I FLD=I D S Q
"RTN","IBCE837L",231,0)
 .. I SQ=125 D  Q  ;MIA1
"RTN","IBCE837L",232,0)
 ... F I=3:1:12 I FLD=I D S Q
"RTN","IBCE837L",233,0)
 .. I SQ=130 D  Q  ;MIA2
"RTN","IBCE837L",234,0)
 ... F I=3:1:15 I FLD=I D S Q
"RTN","IBCE837L",235,0)
 .. I SQ=195 D  Q  ;LCOB
"RTN","IBCE837L",236,0)
 ... F I=14,16,17 I FLD=I D S Q
"RTN","IBCE837L",237,0)
 .. I SQ=200 D  Q  ;LCAS
"RTN","IBCE837L",238,0)
 ... F I=4:1:8,10,11,13,14,16,17,19,20 I FLD=I D S Q
"RTN","IBCE837L",239,0)
 . I RES="HealthcareService" D  Q
"RTN","IBCE837L",240,0)
 .. I SQ=104.9 D  Q  ;AMB1
"RTN","IBCE837L",241,0)
 ... F I=5:1:8 I FLD=I D S Q
"RTN","IBCE837L",242,0)
 .. I SQ=104.91 D  Q  ;AMB2
"RTN","IBCE837L",243,0)
 ... F I=2:1:8 I FLD=I D S Q
"RTN","IBCE837L",244,0)
 .. I SQ=195 D  Q  ;LCOB
"RTN","IBCE837L",245,0)
 ... I FLD=15 D S Q
"RTN","IBCE837L",246,0)
 . I RES="ImagingStudy" D  Q
"RTN","IBCE837L",247,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",248,0)
 ... F I=3,6,9 I FLD=I D S Q
"RTN","IBCE837L",249,0)
 . I RES="Location" D  Q
"RTN","IBCE837L",250,0)
 .. I SQ=50 D  Q  ;CL1
"RTN","IBCE837L",251,0)
 ... F I=3,33 I FLD=I D S Q
"RTN","IBCE837L",252,0)
 .. I SQ=104.8 D  Q  ;AMB
"RTN","IBCE837L",253,0)
 ... I FLD=8 D S Q
"RTN","IBCE837L",254,0)
 .. I SQ=172 D  Q  ;OP3
"RTN","IBCE837L",255,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",256,0)
 .. I SQ=176 D  Q  ;OP7
"RTN","IBCE837L",257,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",258,0)
 .. I SQ=180 D  Q  ;PRF
"RTN","IBCE837L",259,0)
 ... I FLD=7 D S Q
"RTN","IBCE837L",260,0)
 .. I SQ=186 D  Q  ;DEN
"RTN","IBCE837L",261,0)
 ... I FLD=13 D S Q 
"RTN","IBCE837L",262,0)
 . I RES="Medication" D  Q
"RTN","IBCE837L",263,0)
 .. I SQ=190 D  Q  ;RX1
"RTN","IBCE837L",264,0)
 ... I FLD=4 D S Q
"RTN","IBCE837L",265,0)
 . I RES="MedicationDispense" D  Q
"RTN","IBCE837L",266,0)
 .. I SQ=190 D  Q  ;RX1
"RTN","IBCE837L",267,0)
 ... I FLD=7 D S Q
"RTN","IBCE837L",268,0)
 . I RES="MedicationRequest" D  Q
"RTN","IBCE837L",269,0)
 .. I SQ=190 D  Q  ;RX1
"RTN","IBCE837L",270,0)
 ... F I=3,6,8,10,12 I FLD=I D S Q
"RTN","IBCE837L",271,0)
 . I RES="Observation" D  Q
"RTN","IBCE837L",272,0)
 .. I SQ=40 D  Q  ;PT1
"RTN","IBCE837L",273,0)
 ... F I=14,15 I FLD=I D S Q
"RTN","IBCE837L",274,0)
 .. I SQ=50 D  Q  ;CL1
"RTN","IBCE837L",275,0)
 ... I FLD=25 D S Q
"RTN","IBCE837L",276,0)
 .. I SQ=104.9 D  Q  ;AMB1
"RTN","IBCE837L",277,0)
 ... F I=2,3 I FLD=I D S Q
"RTN","IBCE837L",278,0)
 .. I SQ=180 D  Q  ;PRF
"RTN","IBCE837L",279,0)
 ... F I=20,25 I FLD=I D S Q
"RTN","IBCE837L",280,0)
 .. I SQ=185 D  Q  ;INS
"RTN","IBCE837L",281,0)
 ... F I=13,17 I FLD=I D S Q
"RTN","IBCE837L",282,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",283,0)
 ... I FLD=4 D S Q 
"RTN","IBCE837L",284,0)
 .. I SQ=191.7 D  Q  ;MEA
"RTN","IBCE837L",285,0)
 ... F I=3:1:5 I FLD=I D S Q
"RTN","IBCE837L",286,0)
 . I RES="Organization" D  Q
"RTN","IBCE837L",287,0)
 .. I SQ=15 D  Q  ;PRV
"RTN","IBCE837L",288,0)
 ... F I=3:1:9,11,12 I FLD=I D S Q
"RTN","IBCE837L",289,0)
 .. I SQ=16 D  Q  ;PRV1
"RTN","IBCE837L",290,0)
 ... F I=7:1:11 I FLD=I D S Q
"RTN","IBCE837L",291,0)
 .. I SQ=20 D  Q  ;CI1
"RTN","IBCE837L",292,0)
 ... F I=2:1:6,10 I FLD=I D S Q
"RTN","IBCE837L",293,0)
 .. I SQ=36 D  Q  ;CI3A
"RTN","IBCE837L",294,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",295,0)
 .. I SQ=37 D  Q  ;CI5
"RTN","IBCE837L",296,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",297,0)
 .. I SQ=45 D  Q  ;PT2
"RTN","IBCE837L",298,0)
 ... F I=7:1:12 I FLD=I D S Q
"RTN","IBCE837L",299,0)
 .. I SQ=55 D  Q  ;SUB
"RTN","IBCE837L",300,0)
 ... F I=2:1:6,12 I FLD=I D S Q
"RTN","IBCE837L",301,0)
 .. I SQ=57 D  Q  ;SUB2
"RTN","IBCE837L",302,0)
 ... F I=2,3,5:1:13 I FLD=I D S Q
"RTN","IBCE837L",303,0)
 .. I SQ=104.8 D  Q  ;AMB
"RTN","IBCE837L",304,0)
 ... F I=2:1:7 I FLD=I D S Q
"RTN","IBCE837L",305,0)
 .. I SQ=110 D  Q  ;OI2
"RTN","IBCE837L",306,0)
 ... I FLD=7 D S Q
"RTN","IBCE837L",307,0)
 .. I SQ=112 D  Q  ;OI4
"RTN","IBCE837L",308,0)
 ... F I=3:1:7 I FLD=I D S Q
"RTN","IBCE837L",309,0)
 .. I SQ=114 D  Q  ;OI6
"RTN","IBCE837L",310,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",311,0)
 .. I SQ=195 D  Q  ;LCOB
"RTN","IBCE837L",312,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",313,0)
 . I RES="Patient" D  Q
"RTN","IBCE837L",314,0)
 .. I SQ=30 D  Q  ;CI2
"RTN","IBCE837L",315,0)
 ... F I=3:1:8 I FLD=I D S Q
"RTN","IBCE837L",316,0)
 .. I SQ=32 D  Q  ;CI2A
"RTN","IBCE837L",317,0)
 ... F I=3:1:8 I FLD=I D S Q
"RTN","IBCE837L",318,0)
 .. I SQ=38 D  Q  ;CI6
"RTN","IBCE837L",319,0)
 ... F I=2:1:5 I FLD=I D S Q
"RTN","IBCE837L",320,0)
 .. I SQ=40 D  Q  ;PT1
"RTN","IBCE837L",321,0)
 ... F I=4:1:13,16,20 I FLD=I D S Q
"RTN","IBCE837L",322,0)
 .. I SQ=45 D  Q  ;PT2
"RTN","IBCE837L",323,0)
 ... F I=3,4 I FLD=I D S Q
"RTN","IBCE837L",324,0)
 . I RES="PaymentNotice" D  Q
"RTN","IBCE837L",325,0)
 .. I SQ=112 D  Q  ;OI4
"RTN","IBCE837L",326,0)
 ... F I=8:1:10 I FLD=I D S Q
"RTN","IBCE837L",327,0)
 . I RES="Person" D  Q
"RTN","IBCE837L",328,0)
 .. I SQ=110 D  Q  ;OI2
"RTN","IBCE837L",329,0)
 ... F I=4:1:6 I FLD=I D S Q
"RTN","IBCE837L",330,0)
 .. I SQ=113 D  Q  ;OI5
"RTN","IBCE837L",331,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",332,0)
 . I RES="Practitioner" D  Q
"RTN","IBCE837L",333,0)
 .. I SQ=28 D  Q  ;CI1A
"RTN","IBCE837L",334,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",335,0)
 .. I SQ=96 D  Q  ;OPR
"RTN","IBCE837L",336,0)
 ... F I=2:1:4,6:1:11,13:1:17 I FLD=I D S Q
"RTN","IBCE837L",337,0)
 .. I SQ=97 D  Q  ;OPR1
"RTN","IBCE837L",338,0)
 ... F I=2:1:12,14,15 I FLD=I D S Q
"RTN","IBCE837L",339,0)
 .. I SQ=98 D  Q  ;OPR2
"RTN","IBCE837L",340,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",341,0)
 .. I SQ=99 D  Q  ;OPR3
"RTN","IBCE837L",342,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",343,0)
 .. I SQ=100 D  Q  ;OPR4
"RTN","IBCE837L",344,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",345,0)
 .. I SQ=101 D  Q  ;OPR5
"RTN","IBCE837L",346,0)
 ... F I=2:1:10 I FLD=I D S Q
"RTN","IBCE837L",347,0)
 .. I SQ=103 D  Q  ;OPR7
"RTN","IBCE837L",348,0)
 ... F I=2:1:7 I FLD=I D S Q
"RTN","IBCE837L",349,0)
 .. I SQ=104 D  Q  ;OPR8
"RTN","IBCE837L",350,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",351,0)
 .. I SQ=104.2 D  Q  ;OPR9
"RTN","IBCE837L",352,0)
 ... F I=2:1:11 I FLD=I D S Q
"RTN","IBCE837L",353,0)
 .. I SQ=104.4 D  Q  ;OPRA
"RTN","IBCE837L",354,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",355,0)
 .. I SQ=104.6 D  Q  ;OPRB
"RTN","IBCE837L",356,0)
 ... F I=2:1:11 I FLD=I D S Q
"RTN","IBCE837L",357,0)
 .. I SQ=104.61 D  Q  ;OPRC
"RTN","IBCE837L",358,0)
 ... F I=2:1:9 I FLD=I D S Q
"RTN","IBCE837L",359,0)
 .. I SQ=170 D  Q  ;OP1
"RTN","IBCE837L",360,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",361,0)
 .. I SQ=170.5 D  Q  ;OP1A
"RTN","IBCE837L",362,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",363,0)
 .. I SQ=171 D  Q  ;OP2
"RTN","IBCE837L",364,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",365,0)
 .. I SQ=173 D  Q  ;OP4
"RTN","IBCE837L",366,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",367,0)
 .. I SQ=177 D  Q  ;OP8
"RTN","IBCE837L",368,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",369,0)
 .. I SQ=178 D  Q  ;OP9
"RTN","IBCE837L",370,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",371,0)
 .. I SQ=178.1 D  Q  ;OP10
"RTN","IBCE837L",372,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",373,0)
 .. I SQ=191 D  Q  ;LDAT
"RTN","IBCE837L",374,0)
 ... I FLD=13 D S Q
"RTN","IBCE837L",375,0)
 .. I SQ=192 D  Q  ;LOPE
"RTN","IBCE837L",376,0)
 ... F I=4:1:15 I FLD=I D S Q
"RTN","IBCE837L",377,0)
 .. I SQ=193 D  Q  ;LOP1
"RTN","IBCE837L",378,0)
 ... F I=4:1:15 I FLD=I D S Q
"RTN","IBCE837L",379,0)
 .. I SQ=193.3 D  Q  ;LREN
"RTN","IBCE837L",380,0)
 ... F I=4:1:17 I FLD=I D S Q
"RTN","IBCE837L",381,0)
 .. I SQ=193.6 D  Q  ;LPUR
"RTN","IBCE837L",382,0)
 ... F I=4:1:7 I FLD=I D S Q
"RTN","IBCE837L",383,0)
 .. I SQ=194 D  Q  ;LSUP
"RTN","IBCE837L",384,0)
 ... F I=4:1:15 I FLD=I D S Q
"RTN","IBCE837L",385,0)
 .. I SQ=194.3 D  Q  ;LREF
"RTN","IBCE837L",386,0)
 ... F I=4:1:15 I FLD=I D S Q
"RTN","IBCE837L",387,0)
 .. I SQ=194.5 D  Q  ;LSUR
"RTN","IBCE837L",388,0)
 ... F I=4:1:9 I FLD=I D S Q
"RTN","IBCE837L",389,0)
 .. I SQ=194.6 D  Q  ;LSR1
"RTN","IBCE837L",390,0)
 ... F I=3:1:10 I FLD=I D S Q
"RTN","IBCE837L",391,0)
 . I RES="PractitionerRole" D  Q
"RTN","IBCE837L",392,0)
 .. I SQ=192 D  Q  ;LOPE
"RTN","IBCE837L",393,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",394,0)
 .. I SQ=193 D  Q  ;LOP1
"RTN","IBCE837L",395,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",396,0)
 .. I SQ=193.3 D  Q  ;LREN
"RTN","IBCE837L",397,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",398,0)
 .. I SQ=193.6 D  Q  ;LPUR
"RTN","IBCE837L",399,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",400,0)
 .. I SQ=194 D  Q  ;LSUP
"RTN","IBCE837L",401,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",402,0)
 .. I SQ=194.3 D  Q  ;LREF
"RTN","IBCE837L",403,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",404,0)
 .. I SQ=194.5 D  Q  ;LSUR
"RTN","IBCE837L",405,0)
 ... I FLD=3 D S Q
"RTN","IBCE837L",406,0)
 . I RES="Procedure" D  Q
"RTN","IBCE837L",407,0)
 .. I SQ=51 D  Q  ;CL1A
"RTN","IBCE837L",408,0)
 ... I FLD=2 D S Q
"RTN","IBCE837L",409,0)
 .. I SQ=180 D  Q  ;PRF
"RTN","IBCE837L",410,0)
 ... F I=2:1:4,9,10,15:1:19,21,30 I FLD=I D S Q
"RTN","IBCE837L",411,0)
 .. I SQ=185 D  Q  ;INS
"RTN","IBCE837L",412,0)
 ... F I=4,7,8,10,14 I FLD=I D S Q
"RTN","IBCE837L",413,0)
 .. I SQ=186 D  Q  ;DEN
"RTN","IBCE837L",414,0)
 ... F I=4:1:11 I FLD=I D S Q
"RTN","IBCE837L",415,0)
 .. I SQ=186.1 D  Q  ;DEN1
"RTN","IBCE837L",416,0)
 ... F I=11,13,15:1:17 I FLD=I D S Q
"RTN","IBCE837L",417,0)
 .. I SQ=191 D  Q  ;LDAT
"RTN","IBCE837L",418,0)
 ... I FLD=15 D S Q
"RTN","IBCE837L",419,0)
 .. I SQ=195 D  Q  ;LCOB
"RTN","IBCE837L",420,0)
 ... F I=5,7:1:11 I FLD=I D S Q
"RTN","IBCE837L",421,0)
 . I RES="ProcedureRequest" D  Q
"RTN","IBCE837L",422,0)
 .. I SQ=70 D  Q  ;OS1-OS12
"RTN","IBCE837L",423,0)
 ... F I=2,3 I FLD=I D S Q
"RTN","IBCE837L",424,0)
 .. I SQ=75 D  Q  ;PC1-PC12
"RTN","IBCE837L",425,0)
 ... F I=2:1:4 I FLD=I D S Q
"RTN","IBCE837L",426,0)
 .. I SQ=77 S FILE="SPC" D  Q  ;SPC
"RTN","IBCE837L",427,0)
 ... F I=2:1:5 I FLD=I D S Q
"RTN","IBCE837L",428,0)
 . I RES="RelatedPerson" D  Q
"RTN","IBCE837L",429,0)
 .. I SQ=105 D  Q  ;OI1
"RTN","IBCE837L",430,0)
 ... F I=3,6 I FLD=I D S Q
"RTN","IBCE837L",431,0)
 . I RES="SupplyRequest" D  Q
"RTN","IBCE837L",432,0)
 .. I SQ=191.4 D  Q  ;CMN
"RTN","IBCE837L",433,0)
 ... I FLD=6 D S Q
"RTN","IBCE837L",434,0)
 . I RES="ValueSet" D  Q
"RTN","IBCE837L",435,0)
 .. I SQ=15 D  Q  ;PRV
"RTN","IBCE837L",436,0)
 ... F I=13,14 I FLD=I D S Q
"RTN","IBCE837L",437,0)
 Q
"RTN","IBCE837L",438,0)
 ;
"RTN","IBCE837L",439,0)
S ; update ^TMP global
"RTN","IBCE837L",440,0)
 D SETD^IBCE837I
"RTN","IBCE837L",441,0)
 Q
"RTN","IBCE837L",442,0)
 ;
"RTN","IBCECSA")
0^50^B69575708^B60060653
"RTN","IBCECSA",1,0)
IBCECSA ;ALB/CXW - IB CLAIMS STATUS AWAITING RESOLUTION SCREEN ;28-JUL-1999
"RTN","IBCECSA",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320,623**;21-MAR-1994;Build 70
"RTN","IBCECSA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECSA",4,0)
 ;
"RTN","IBCECSA",5,0)
EN ; -- main entry point for claims status awaiting resolution
"RTN","IBCECSA",6,0)
 N IBSORT,IBSORT1,IBSORT2,IBSORT3,IBSORTOR,IBDAYS
"RTN","IBCECSA",7,0)
 D EN^VALM("IBCEM CSA LIST")
"RTN","IBCECSA",8,0)
 Q
"RTN","IBCECSA",9,0)
 ;
"RTN","IBCECSA",10,0)
HDR ; -- header code
"RTN","IBCECSA",11,0)
 ;/vd - IB*2.0*623 (US141) - Instituted the IBHDSORT variable to determine what the Header should be based on the user's selection.
"RTN","IBCECSA",12,0)
 N IBHDSORT
"RTN","IBCECSA",13,0)
 S IBHDSORT=$G(^TMP("IBRTYP",$J,0))
"RTN","IBCECSA",14,0)
 S VALMHDR(1)=$S(IBHDSORT="N":"Non-",IBHDSORT="B":"MCCF and Non-",1:"")_"MCCF Claims"
"RTN","IBCECSA",15,0)
 S VALMSG="* Indicates CSA review in progress"
"RTN","IBCECSA",16,0)
 Q
"RTN","IBCECSA",17,0)
 ;
"RTN","IBCECSA",18,0)
INIT ; -- init variables and list array
"RTN","IBCECSA",19,0)
 N DIC,DIR,DIRUT,DIROUT,DTOUT,DUOUT,Y,X,IBFIRST
"RTN","IBCECSA",20,0)
 K ^TMP("IBBIL",$J),^TMP("IBDIV",$J),VALMQUIT
"RTN","IBCECSA",21,0)
 S VALMCNT=0
"RTN","IBCECSA",22,0)
 ;
"RTN","IBCECSA",23,0)
 S DIR(0)="NA^0:999",DIR("B")=0,DIR("A")="MINIMUM # OF DAYS MSGS WAITING TO BE RESOLVED: ",DIR("?")="Enter the minimum number of days you want a message to have been waiting to be resolved before it will be displayed on this screen."
"RTN","IBCECSA",24,0)
 D ^DIR K DIR
"RTN","IBCECSA",25,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",26,0)
 S IBDAYS=Y
"RTN","IBCECSA",27,0)
 ;
"RTN","IBCECSA",28,0)
 S IBFIRST=1
"RTN","IBCECSA",29,0)
 F  S DIC="^VA(200,",DIC(0)="AEQM",DIC("A")=$S(IBFIRST:"",1:" Another ")_"AUTHORIZING BILLER: "_$S(IBFIRST:"ALL// ",1:"") D ^DIC K DIC Q:Y<0  D
"RTN","IBCECSA",30,0)
 . I $D(^TMP("IBBIL",$J,+Y)) W !,"This biller has already been selected" Q
"RTN","IBCECSA",31,0)
 . S ^TMP("IBBIL",$J,+Y)="",IBFIRST=0
"RTN","IBCECSA",32,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",33,0)
 ;
"RTN","IBCECSA",34,0)
 S IBFIRST=1
"RTN","IBCECSA",35,0)
 F  S DIC="^DG(40.8,",DIC(0)="AEQMN",DIC("A")=$S(IBFIRST:"",1:" Another ")_"DIVISION: "_$S(IBFIRST:"ALL//",1:"") D ^DIC K DIC Q:Y<0  S ^TMP("IBDIV",$J,+Y)="",IBFIRST=0
"RTN","IBCECSA",36,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",37,0)
 ;
"RTN","IBCECSA",38,0)
 ;/vd - IB*2.0*623 (US141) Beginning - Ask to Search by MCCF, Non-MCCf or Both
"RTN","IBCECSA",39,0)
 K ^TMP("IBRTYP",$J)
"RTN","IBCECSA",40,0)
 W !
"RTN","IBCECSA",41,0)
 S DIR(0)="SA^M:MCCF;N:Non-MCCF;B:Both"
"RTN","IBCECSA",42,0)
 S DIR("A")="Search by (M)CCF, (N)on-MCCF, or (B)oth? "
"RTN","IBCECSA",43,0)
 S DIR("B")="M"
"RTN","IBCECSA",44,0)
 S DIR("?",1)="Select one of the following:"
"RTN","IBCECSA",45,0)
 S DIR("?",2)="  M   MCCF Claims Only"
"RTN","IBCECSA",46,0)
 S DIR("?",3)="  N   Non-MCCF Claims Only"
"RTN","IBCECSA",47,0)
 S DIR("?",4)="  B   MCCF and Non-MCCF Claims"
"RTN","IBCECSA",48,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",49,0)
 S ^TMP("IBRTYP",$J,0)=Y
"RTN","IBCECSA",50,0)
 ;/vd - IB*2.0*623 (US141) End.
"RTN","IBCECSA",51,0)
 ;
"RTN","IBCECSA",52,0)
 ; IB*320 - new sorting
"RTN","IBCECSA",53,0)
 W !
"RTN","IBCECSA",54,0)
 K IBSORTOR
"RTN","IBCECSA",55,0)
 D SORT(1) I $G(VALMQUIT) G INITQ
"RTN","IBCECSA",56,0)
 D SORT(2) I $G(VALMQUIT) G INITQ
"RTN","IBCECSA",57,0)
 I $G(IBSORT2)'="" D SORT(3) I $G(VALMQUIT) G INITQ
"RTN","IBCECSA",58,0)
 ;
"RTN","IBCECSA",59,0)
 S DIR(0)="SA^R:REJECTS ONLY;B:BOTH INFORMATIONAL AND REJECTS",DIR("A")="(R)ejects only OR (B)oth informational and rejects?: "
"RTN","IBCECSA",60,0)
 S DIR("?",1)="YOU MAY CHOOSE TO SEE JUST THOSE MESSAGES WE KNOW ARE REJECTS OR YOU MAY",DIR("?")="  CHOOSE TO SEE ALL MESSAGES MEETING YOUR SELECTION CRITERIA",DIR("B")="REJECTS ONLY" W !! D ^DIR K DIR
"RTN","IBCECSA",61,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",62,0)
 S IBSEV=Y
"RTN","IBCECSA",63,0)
 D BLD^IBCECSA1
"RTN","IBCECSA",64,0)
INITQ Q
"RTN","IBCECSA",65,0)
 ;
"RTN","IBCECSA",66,0)
HELP ; -- help code
"RTN","IBCECSA",67,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA",68,0)
 S VALMSG="* Indicates review in progress"
"RTN","IBCECSA",69,0)
 Q
"RTN","IBCECSA",70,0)
 ;
"RTN","IBCECSA",71,0)
EXIT ; -- exit code
"RTN","IBCECSA",72,0)
 K IBDAYS,IBSORT1,IBSORT2,IBSORT3,IBSORTOR
"RTN","IBCECSA",73,0)
 K ^TMP("IBCECSA",$J),^TMP("IBDIV",$J),^TMP("IBBIL",$J)
"RTN","IBCECSA",74,0)
 K ^TMP("IBCECSB",$J),^TMP("IBCECSC",$J),^TMP("IBCECSD",$J)
"RTN","IBCECSA",75,0)
 K ^TMP("IBRTYP",$J)   ;/vd - IB*2.0*623 (US141)
"RTN","IBCECSA",76,0)
 D CLEAN^VALM10
"RTN","IBCECSA",77,0)
 Q
"RTN","IBCECSA",78,0)
 ;
"RTN","IBCECSA",79,0)
SORT(LVL,IBDEFSRT) ; CSA sort
"RTN","IBCECSA",80,0)
 ; LVL - sort level 1,2,or,3
"RTN","IBCECSA",81,0)
 ; IBDEFSRT - default sort value (optional)
"RTN","IBCECSA",82,0)
 NEW DIR,X,Y,LVLD,G,LN,S,SC,SCP,DTOUT,DUOUT,DIRUT,DIROUT,IBZ
"RTN","IBCECSA",83,0)
 K IBSORT3 I LVL<3 K IBSORT2 I LVL=1 K IBSORT1
"RTN","IBCECSA",84,0)
 I '$F(".1.2.3.","."_$G(LVL)_".") G SORTX
"RTN","IBCECSA",85,0)
 I $G(VALMQUIT) G SORTX
"RTN","IBCECSA",86,0)
 ;
"RTN","IBCECSA",87,0)
 I LVL>1,$G(IBSORT1)="" D SORT(1) I $G(IBSORT1)="" G SORTX
"RTN","IBCECSA",88,0)
 I LVL=3,$G(IBSORT2)="" D SORT(2) I $G(IBSORT2)="" G SORTX
"RTN","IBCECSA",89,0)
 ;
"RTN","IBCECSA",90,0)
 S LVLD=$S(LVL=2:"Secondary",LVL=3:"Tertiary",1:"Primary")
"RTN","IBCECSA",91,0)
 ;
"RTN","IBCECSA",92,0)
 S DIR("A")=LVLD_" Sort"
"RTN","IBCECSA",93,0)
 I LVL=1 S DIR("B")=$$SD("E")
"RTN","IBCECSA",94,0)
 I LVL>1 K DIR("B")
"RTN","IBCECSA",95,0)
 I LVL=2,IBSORT1=$G(IBDEFSRT) K IBDEFSRT
"RTN","IBCECSA",96,0)
 I LVL=3,IBSORT1=$G(IBDEFSRT)!(IBSORT2=$G(IBDEFSRT)) K IBDEFSRT
"RTN","IBCECSA",97,0)
 I $G(IBDEFSRT)'="" S DIR("B")=$$SD(IBDEFSRT)   ; passed in default sort
"RTN","IBCECSA",98,0)
 ;
"RTN","IBCECSA",99,0)
 S DIR("?")="Enter a code from the list to indicate the "_LVLD_" sort order."
"RTN","IBCECSA",100,0)
 I LVL>1 S DIR("?",1)="  Primary Sort is "_$$SD($G(IBSORT1)),DIR("?",LVL)=""
"RTN","IBCECSA",101,0)
 I LVL=3 S DIR("?",2)="Secondary Sort is "_$$SD($G(IBSORT2))
"RTN","IBCECSA",102,0)
 ;
"RTN","IBCECSA",103,0)
 I LVL=1 S DIR(0)="SB"    ; primary sort required
"RTN","IBCECSA",104,0)
 I LVL>1 S DIR(0)="SOB"   ; optional sorts
"RTN","IBCECSA",105,0)
 ;
"RTN","IBCECSA",106,0)
 S G=""
"RTN","IBCECSA",107,0)
 F LN=1:1 S S=$P($T(ZZ+LN),";",3) Q:S=""  D
"RTN","IBCECSA",108,0)
 . S SC=$P(S,":",1)     ; sort code letter
"RTN","IBCECSA",109,0)
 . I LVL=2,IBSORT1=SC Q
"RTN","IBCECSA",110,0)
 . I LVL=3,IBSORT1=SC!(IBSORT2=SC) Q
"RTN","IBCECSA",111,0)
 . S SCP=$P(S,":",1,2)  ; sort code:desc pair
"RTN","IBCECSA",112,0)
 . S G=$S(G="":SCP,1:G_";"_SCP)
"RTN","IBCECSA",113,0)
 . Q
"RTN","IBCECSA",114,0)
 ;
"RTN","IBCECSA",115,0)
 S $P(DIR(0),U,2)=G
"RTN","IBCECSA",116,0)
 ;
"RTN","IBCECSA",117,0)
 D ^DIR K DIR
"RTN","IBCECSA",118,0)
 I $D(DTOUT) S VALMQUIT=1 G SORTX         ; timeout
"RTN","IBCECSA",119,0)
 I $D(DIRUT) S:LVL=1 VALMQUIT=1 G SORTX   ; ^ or nil response
"RTN","IBCECSA",120,0)
 S @("IBSORT"_LVL)=Y,IBZ=Y
"RTN","IBCECSA",121,0)
 ;
"RTN","IBCECSA",122,0)
 I IBZ="N" D  G SORTX    ; number of days pending
"RTN","IBCECSA",123,0)
 . S IBSORTOR(IBZ)="D"   ; this sort is always descending
"RTN","IBCECSA",124,0)
 . Q
"RTN","IBCECSA",125,0)
 ;
"RTN","IBCECSA",126,0)
 I IBZ="C" D  G SORTX    ; current balance question
"RTN","IBCECSA",127,0)
 . S DIR(0)="Y"
"RTN","IBCECSA",128,0)
 . S DIR("A")="Display Highest Balances First",DIR("B")="Yes"
"RTN","IBCECSA",129,0)
 . S DIR("A",1)=""
"RTN","IBCECSA",130,0)
 . S DIR("?",1)="Enter Yes or No."
"RTN","IBCECSA",131,0)
 . S DIR("?",2)=""
"RTN","IBCECSA",132,0)
 . S DIR("?",3)="Yes, I want to see the large balances first at the top of the list and the"
"RTN","IBCECSA",133,0)
 . S DIR("?",4)="small balances last at the bottom of the list."
"RTN","IBCECSA",134,0)
 . S DIR("?",5)=""
"RTN","IBCECSA",135,0)
 . S DIR("?",6)="No, I want to see the small balances first at the top of the list and the"
"RTN","IBCECSA",136,0)
 . S DIR("?")="large balances last at the bottom of the list."
"RTN","IBCECSA",137,0)
 . D ^DIR K DIR
"RTN","IBCECSA",138,0)
 . I $D(DTOUT) S VALMQUIT=1 Q    ; timeout
"RTN","IBCECSA",139,0)
 . I $D(DIRUT) S:LVL=1 VALMQUIT=1 K @("IBSORT"_LVL) Q   ; ^ or nil resp
"RTN","IBCECSA",140,0)
 . I Y S IBSORTOR(IBZ)="D"    ; yes, large first, descending
"RTN","IBCECSA",141,0)
 . I 'Y S IBSORTOR(IBZ)="A"   ; no, small first, ascending
"RTN","IBCECSA",142,0)
 . Q
"RTN","IBCECSA",143,0)
 ;
"RTN","IBCECSA",144,0)
 I IBZ="S" D  G SORTX    ; Date of Service question
"RTN","IBCECSA",145,0)
 . S DIR(0)="Y"
"RTN","IBCECSA",146,0)
 . S DIR("A")="Display Oldest Claims First",DIR("B")="Yes"
"RTN","IBCECSA",147,0)
 . S DIR("A",1)=""
"RTN","IBCECSA",148,0)
 . S DIR("?",1)="Enter Yes or No."
"RTN","IBCECSA",149,0)
 . S DIR("?",2)=""
"RTN","IBCECSA",150,0)
 . S DIR("?",3)="Yes, I want to see claims with old dates of service at the top of the list"
"RTN","IBCECSA",151,0)
 . S DIR("?",4)="and claims with recent dates of service at the bottom of the list."
"RTN","IBCECSA",152,0)
 . S DIR("?",5)=""
"RTN","IBCECSA",153,0)
 . S DIR("?",6)="No, I want to see claims with recent dates of service at the top of the list"
"RTN","IBCECSA",154,0)
 . S DIR("?")="and older claims at the bottom of the list."
"RTN","IBCECSA",155,0)
 . D ^DIR K DIR
"RTN","IBCECSA",156,0)
 . I $D(DTOUT) S VALMQUIT=1 Q    ; timeout
"RTN","IBCECSA",157,0)
 . I $D(DIRUT) S:LVL=1 VALMQUIT=1 K @("IBSORT"_LVL) Q   ; ^ or nil resp
"RTN","IBCECSA",158,0)
 . I Y S IBSORTOR(IBZ)="A"    ; yes, old first, ascending sort
"RTN","IBCECSA",159,0)
 . I 'Y S IBSORTOR(IBZ)="D"   ; no, new first, descending sort
"RTN","IBCECSA",160,0)
 . Q
"RTN","IBCECSA",161,0)
 ;
"RTN","IBCECSA",162,0)
 I IBZ="R" D  G SORTX    ; review status question
"RTN","IBCECSA",163,0)
 . S DIR(0)="Y"
"RTN","IBCECSA",164,0)
 . S DIR("A")="Display 'Review in Process' Messages Last",DIR("B")="Yes"
"RTN","IBCECSA",165,0)
 . S DIR("A",1)=""
"RTN","IBCECSA",166,0)
 . S DIR("?",1)="Enter Yes or No."
"RTN","IBCECSA",167,0)
 . S DIR("?",2)=""
"RTN","IBCECSA",168,0)
 . S DIR("?",3)="Yes, I want to group together status messages under review at the bottom of"
"RTN","IBCECSA",169,0)
 . S DIR("?",4)="the list."
"RTN","IBCECSA",170,0)
 . S DIR("?",5)=""
"RTN","IBCECSA",171,0)
 . S DIR("?",6)="No, I want to group together status messages under review at the top of the"
"RTN","IBCECSA",172,0)
 . S DIR("?")="list."
"RTN","IBCECSA",173,0)
 . D ^DIR K DIR
"RTN","IBCECSA",174,0)
 . I $D(DTOUT) S VALMQUIT=1 Q    ; timeout
"RTN","IBCECSA",175,0)
 . I $D(DIRUT) S:LVL=1 VALMQUIT=1 K @("IBSORT"_LVL) Q   ; ^ or nil resp
"RTN","IBCECSA",176,0)
 . I Y S IBSORTOR(IBZ)="A"    ; yes, 1 at bottom, 0 at top, ascending
"RTN","IBCECSA",177,0)
 . I 'Y S IBSORTOR(IBZ)="D"   ; no, 1 at top, 0 at bottom, descending
"RTN","IBCECSA",178,0)
 . Q
"RTN","IBCECSA",179,0)
 ;
"RTN","IBCECSA",180,0)
SORTX ;
"RTN","IBCECSA",181,0)
 Q
"RTN","IBCECSA",182,0)
 ;
"RTN","IBCECSA",183,0)
SD(SORT) ; sort description given the sort code letter
"RTN","IBCECSA",184,0)
 Q $P($P($T(@("ZZ"_$G(SORT))),";",3),":",2)
"RTN","IBCECSA",185,0)
 ;
"RTN","IBCECSA",186,0)
SV(SORT) ; sort value given the sort code letter
"RTN","IBCECSA",187,0)
 NEW S,VAR,VALUE
"RTN","IBCECSA",188,0)
 S S=$P($T(@("ZZ"_$G(SORT))),";",3)
"RTN","IBCECSA",189,0)
 S VAR=$P(S,":",4)   ; variable name
"RTN","IBCECSA",190,0)
 S VALUE=$G(@VAR)    ; value of variable
"RTN","IBCECSA",191,0)
 I VALUE="" S VALUE="~" G SVX    ; get out if undefined
"RTN","IBCECSA",192,0)
 I '$P(S,":",3) G SVX            ; non-numeric
"RTN","IBCECSA",193,0)
 I $G(IBSORTOR(SORT))="D" S VALUE=-VALUE   ; descending sort
"RTN","IBCECSA",194,0)
SVX Q VALUE
"RTN","IBCECSA",195,0)
 ;
"RTN","IBCECSA",196,0)
ZZ ; List of allowable sort criteria
"RTN","IBCECSA",197,0)
ZZA ;;A:Authorizing Biller:0:IBUER;
"RTN","IBCECSA",198,0)
ZZB ;;B:Bill Number:0:IB;
"RTN","IBCECSA",199,0)
ZZC ;;C:Current Balance:1:IBOAM;
"RTN","IBCECSA",200,0)
ZZS ;;S:Date of Service:1:IBSER;
"RTN","IBCECSA",201,0)
ZZD ;;D:Division:0:IBDIV;
"RTN","IBCECSA",202,0)
ZZE ;;E:Error Code Text:0:IBERR;
"RTN","IBCECSA",203,0)
ZZN ;;N:Number of Days Pending:1:IBPEN;
"RTN","IBCECSA",204,0)
ZZM ;;M:Patient Name:0:IBPAT;
"RTN","IBCECSA",205,0)
ZZP ;;P:Payer:0:IBPAY;
"RTN","IBCECSA",206,0)
ZZR ;;R:Review in Process:1:IBREV;
"RTN","IBCECSA",207,0)
ZZL ;;L:SSN Last 4:0:IBSSN;
"RTN","IBCECSA",208,0)
 ;
"RTN","IBCECSA1")
0^51^B49959476^B43330691
"RTN","IBCECSA1",1,0)
IBCECSA1 ;ALB/CXW - IB STATUS AWAITING RESOLUTION SCREEN ;28-JUL-99
"RTN","IBCECSA1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,283,288,320,368,623**;21-MAR-94;Build 70
"RTN","IBCECSA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECSA1",4,0)
 ; DBIA for $$BN1^PRCAFN()
"RTN","IBCECSA1",5,0)
 ;
"RTN","IBCECSA1",6,0)
BLD ; Build list entrypoint
"RTN","IBCECSA1",7,0)
 ;N IBDA,IBREV,IBIFN,IBPAY,IBSSN,IBSER,IB399,IBLOC,IBDIV,IBUER,IBMSG,IBERR,IBPEN,SEVERITY,A,IBOAM,IBPAT,IBSTSMSG,SV1,SV2,SV3
"RTN","IBCECSA1",8,0)
 N A,IB399,IBDA,IBDIV,IBERR,IBIFN,IBLOC,IBMCCF,IBMSG,IBNON,IBOAM,IBPAT,IBPAY,IBPEN   ;/vd-IB*2.0*623 (US141) - Reordered variables
"RTN","IBCECSA1",9,0)
 N IBREV,IBRTYP,IBSER,IBSSN,IBSTSMSG,IBUER,SEVERITY,SV1,SV2,SV3
"RTN","IBCECSA1",10,0)
 K ^TMP("IBCECSA",$J),^TMP("IBCECSB",$J),^TMP("IBCECSD",$J)
"RTN","IBCECSA1",11,0)
 W !!,"Compiling CSA status messages ... "
"RTN","IBCECSA1",12,0)
 S IBMCCF=^TMP("IBRTYP",$J,0)   ; "M"CCF, "N"on-MCCF or "B"oth - IB*2.0*623
"RTN","IBCECSA1",13,0)
 S IBSEV=$G(IBSEV,"R")
"RTN","IBCECSA1",14,0)
 S VALMCNT=0,IB364=""
"RTN","IBCECSA1",15,0)
 S SEVERITY=""
"RTN","IBCECSA1",16,0)
 F  S SEVERITY=$O(^IBM(361,"ACSA",SEVERITY)) Q:SEVERITY=""  I SEVERITY="R"!(IBSEV="B") S IBREV="" F  S IBREV=$O(^IBM(361,"ACSA",SEVERITY,IBREV)) Q:IBREV=""  I IBREV<2 S IBDA=0 F  S IBDA=$O(^IBM(361,"ACSA",SEVERITY,IBREV,IBDA)) Q:'IBDA  D
"RTN","IBCECSA1",17,0)
 . S IB=$G(^IBM(361,IBDA,0)),IBIFN=+IB
"RTN","IBCECSA1",18,0)
 . S IBPEN=$$FMDIFF^XLFDT(DT,$P(IB,U,2),1)
"RTN","IBCECSA1",19,0)
 . ;quit if not pending for at least the minimum # of days requested
"RTN","IBCECSA1",20,0)
 . Q:IBDAYS>IBPEN
"RTN","IBCECSA1",21,0)
 . S IB399=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECSA1",22,0)
 . ;
"RTN","IBCECSA1",23,0)
 . ; no cancelled claims allowed on the CSA screen
"RTN","IBCECSA1",24,0)
 . ; if we find one, then update the appropriate EDI files
"RTN","IBCECSA1",25,0)
 . I $P(IB399,U,13)=7 D UPDEDI^IBCEM(+$P(IB,U,11),"C") Q
"RTN","IBCECSA1",26,0)
 . ;
"RTN","IBCECSA1",27,0)
 . ; automatically review this message if the claim was last printed on
"RTN","IBCECSA1",28,0)
 . ; or after the MCS - 'Resubmit by Print' date
"RTN","IBCECSA1",29,0)
 . I $P(IB,U,16),($P($G(^DGCR(399,IBIFN,"S")),U,14)\1)'<$P(IB,U,16) D UPDEDI^IBCEM(+$P(IB,U,11),"P") Q
"RTN","IBCECSA1",30,0)
 . ;
"RTN","IBCECSA1",31,0)
 . ;/vd - IB*2.0*623 (US141) - Beginning of Code added to support the new sort prompt for MCCF, NON-MCCF or BOTH
"RTN","IBCECSA1",32,0)
 . S IBRTYP=$P(IB399,U,7),IBNON=0   ;Rate type for claim and variable for identifying the sort criteria.
"RTN","IBCECSA1",33,0)
 . I $D(^IBE(350.9,1,28,"B",IBRTYP)) S IBNON=1   ; The claim's Rate Type is a Non-MCCF Rate Type.
"RTN","IBCECSA1",34,0)
 . I IBMCCF="M",+IBNON Q   ; User selected only MCCF Rate Types.
"RTN","IBCECSA1",35,0)
 . I IBMCCF="N",'IBNON Q   ; User selected only Non-MCCF Rate Types.
"RTN","IBCECSA1",36,0)
 . ;/vd - IB*2.0*623 (US141) - End
"RTN","IBCECSA1",37,0)
 . ;
"RTN","IBCECSA1",38,0)
 . S IBDIV=+$P(IB399,U,22)
"RTN","IBCECSA1",39,0)
 . S IBUER=+$P($G(^DGCR(399,IBIFN,"S")),U,11)
"RTN","IBCECSA1",40,0)
 . ;
"RTN","IBCECSA1",41,0)
 . ; If Request MRA bill, pull the MRA Requestor user instead
"RTN","IBCECSA1",42,0)
 . I 'IBUER,$P(IB399,U,13)=2 S IBUER=+$P($G(^DGCR(399,IBIFN,"S")),U,8)
"RTN","IBCECSA1",43,0)
 . I $D(^TMP("IBBIL",$J)),'$D(^TMP("IBBIL",$J,IBUER)) Q  ; User not selected
"RTN","IBCECSA1",44,0)
 . I $D(^TMP("IBDIV",$J)),'$D(^TMP("IBDIV",$J,IBDIV)) Q  ; Div not selected
"RTN","IBCECSA1",45,0)
 . ;
"RTN","IBCECSA1",46,0)
 . S IBPAY=$P($G(^DIC(36,+$P($G(^DGCR(399,IBIFN,"MP")),U),0)),U)
"RTN","IBCECSA1",47,0)
 . I IBPAY="" S IBPAY=$P($G(^DIC(36,+$$CURR^IBCEF2(IBIFN),0)),U)
"RTN","IBCECSA1",48,0)
 . I IBPAY="" S IBPAY="UNKNOWN PAYER"
"RTN","IBCECSA1",49,0)
 . S IBPAT=$G(^DPT(+$P(IB399,U,2),0))
"RTN","IBCECSA1",50,0)
 . S IBSSN=$E($P(IBPAT,U,9),6,9) I IBSSN="" S IBSSN="~unk"
"RTN","IBCECSA1",51,0)
 . S IBPAT=$P(IBPAT,U,1) I IBPAT="" S IBPAT="~UNKNOWN PATIENT NAME"
"RTN","IBCECSA1",52,0)
 . S IBSER=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECSA1",53,0)
 . S IBLOC=$P(IB399,U,4)
"RTN","IBCECSA1",54,0)
 . S IBLOC=$S(IBLOC=1:"HOSPITAL",IBLOC=2:"SKILLED NURSING",1:"CLINIC")
"RTN","IBCECSA1",55,0)
 . I IBDIV S IBDIV=$P($G(^DG(40.8,IBDIV,0)),U)
"RTN","IBCECSA1",56,0)
 . I IBDIV=""!(IBDIV=0) S IBDIV="UNSPECIFIED"
"RTN","IBCECSA1",57,0)
 . S IBMSG=$S($P(IB,U,8):"PAYER",1:"NON-PAYER")
"RTN","IBCECSA1",58,0)
 . S IBUER=$S(IBUER:$P($G(^VA(200,IBUER,0)),U),1:"UNKNOWN")_"~"_IBUER
"RTN","IBCECSA1",59,0)
 . S IB364=$P(IB,U,11)
"RTN","IBCECSA1",60,0)
 . S IBOAM=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBCECSA1",61,0)
 . S IBOAM=$P(IBOAM,U,1)-$P(IBOAM,U,2)     ; current balance (total charges - offset)
"RTN","IBCECSA1",62,0)
 . ;
"RTN","IBCECSA1",63,0)
 . S IBSTSMSG=$$TXT(IBDA)       ; status message text
"RTN","IBCECSA1",64,0)
 . S IBERR=$E(IBSTSMSG,1,60)
"RTN","IBCECSA1",65,0)
 . I IBERR="" S IBERR="-"
"RTN","IBCECSA1",66,0)
 . ;
"RTN","IBCECSA1",67,0)
 . S IB=$$BN1^PRCAFN(IBIFN)     ; external bill#
"RTN","IBCECSA1",68,0)
 . S A=IBIFN_U_IBPAY_U_IBPAT_U_IBSSN_U_IBSER_U_IBOAM_U_IBLOC_U_IBDIV_U_IBUER_U_IBMSG_U_IBPEN_U_$S(IBREV:"*",1:"")_U_IB364_U_IB
"RTN","IBCECSA1",69,0)
 . ;
"RTN","IBCECSA1",70,0)
 . S SV1=$$SRTV($G(IBSORT1),IBDA)
"RTN","IBCECSA1",71,0)
 . S SV2=$$SRTV($G(IBSORT2),IBDA)
"RTN","IBCECSA1",72,0)
 . S SV3=$$SRTV($G(IBSORT3),IBDA)
"RTN","IBCECSA1",73,0)
 . S ^TMP("IBCECSB",$J,SV1,SV2,SV3,IBDA)=A
"RTN","IBCECSA1",74,0)
 . S ^TMP("IBCECSB",$J,SV1,SV2,SV3,IBDA,"MSG")=IBSTSMSG
"RTN","IBCECSA1",75,0)
 . Q
"RTN","IBCECSA1",76,0)
 ;
"RTN","IBCECSA1",77,0)
 I '$D(^TMP("IBCECSB",$J)) D NMAT Q
"RTN","IBCECSA1",78,0)
 D SCRN
"RTN","IBCECSA1",79,0)
 Q
"RTN","IBCECSA1",80,0)
 ;
"RTN","IBCECSA1",81,0)
NMAT ;No CSA list
"RTN","IBCECSA1",82,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECSA1",83,0)
 S ^TMP("IBCECSA",$J,1,0)=" "
"RTN","IBCECSA1",84,0)
 S ^TMP("IBCECSA",$J,2,0)="No Messages Matching Selection Criteria Found"
"RTN","IBCECSA1",85,0)
 Q
"RTN","IBCECSA1",86,0)
 ;
"RTN","IBCECSA1",87,0)
SRTV(SORT,IBDA) ; sort value calculation given the sort code letter
"RTN","IBCECSA1",88,0)
 I SORT="" Q IBDA
"RTN","IBCECSA1",89,0)
 Q $$SV^IBCECSA(SORT)
"RTN","IBCECSA1",90,0)
 ;
"RTN","IBCECSA1",91,0)
SCRN ;
"RTN","IBCECSA1",92,0)
 NEW IBSRT1,IBSRT2,IBSRT3,IBX,IBCNT,IBIFN,IBDA,IB,INFX,DAT,X
"RTN","IBCECSA1",93,0)
 W !,"Building the CSA list display ... "
"RTN","IBCECSA1",94,0)
 S IBCNT=0,IBSRT1=""
"RTN","IBCECSA1",95,0)
 F  S IBSRT1=$O(^TMP("IBCECSB",$J,IBSRT1)) Q:IBSRT1=""  D
"RTN","IBCECSA1",96,0)
 . D SRTBRK(1,$G(IBSORT1),IBSRT1)
"RTN","IBCECSA1",97,0)
 . S IBSRT2=""
"RTN","IBCECSA1",98,0)
 . F  S IBSRT2=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2)) Q:IBSRT2=""  D
"RTN","IBCECSA1",99,0)
 .. D SRTBRK(2,$G(IBSORT2),IBSRT2)
"RTN","IBCECSA1",100,0)
 .. S IBSRT3=""
"RTN","IBCECSA1",101,0)
 .. F  S IBSRT3=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3)) Q:IBSRT3=""  D
"RTN","IBCECSA1",102,0)
 ... D SRTBRK(3,$G(IBSORT3),IBSRT3)
"RTN","IBCECSA1",103,0)
 ... S IBDA=0
"RTN","IBCECSA1",104,0)
 ... F  S IBDA=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA)) Q:'IBDA  D
"RTN","IBCECSA1",105,0)
 .... S IB=$G(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA))
"RTN","IBCECSA1",106,0)
 .... S IBSTSMSG=$G(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA,"MSG"))
"RTN","IBCECSA1",107,0)
 .... S IBIFN=+IB
"RTN","IBCECSA1",108,0)
 .... S IB364=$P(IB,U,13)
"RTN","IBCECSA1",109,0)
 .... S DAT=IBIFN_U_IBDA_U_IBSRT1_U_IBSRT2_U_IB364_U_IBSRT3
"RTN","IBCECSA1",110,0)
 .... ;
"RTN","IBCECSA1",111,0)
 .... S IBCNT=IBCNT+1
"RTN","IBCECSA1",112,0)
 .... S X=$$SETFLD^VALM1($J(IBCNT,3),"","NUMBER")
"RTN","IBCECSA1",113,0)
 .... D SETL1(IB,.X)
"RTN","IBCECSA1",114,0)
 .... D SET(X,IBCNT,DAT)
"RTN","IBCECSA1",115,0)
 .... ;
"RTN","IBCECSA1",116,0)
 .... S X=$$SETSTR^VALM1(IBSTSMSG,"",6,75)
"RTN","IBCECSA1",117,0)
 .... D SET(X,IBCNT,DAT)
"RTN","IBCECSA1",118,0)
 .... Q
"RTN","IBCECSA1",119,0)
 ... Q
"RTN","IBCECSA1",120,0)
 .. Q
"RTN","IBCECSA1",121,0)
 . Q
"RTN","IBCECSA1",122,0)
 Q
"RTN","IBCECSA1",123,0)
 ;
"RTN","IBCECSA1",124,0)
SRTBRK(LVL,SORT,IBSRT) ; sort break for display of certain sort data
"RTN","IBCECSA1",125,0)
 ; LVL   - sort level
"RTN","IBCECSA1",126,0)
 ; SORT  - sort letter code
"RTN","IBCECSA1",127,0)
 ; IBSRT - subscript data
"RTN","IBCECSA1",128,0)
 ;
"RTN","IBCECSA1",129,0)
 NEW IBS,DSPDATA
"RTN","IBCECSA1",130,0)
 I '$F(".A.D.N.","."_$G(SORT)_".") G SRTBRKX
"RTN","IBCECSA1",131,0)
 S IBS=$$SD^IBCECSA(SORT)
"RTN","IBCECSA1",132,0)
 S DSPDATA=IBSRT
"RTN","IBCECSA1",133,0)
 I SORT="A" S DSPDATA=$P(DSPDATA,"~",1)      ; biller name
"RTN","IBCECSA1",134,0)
 I SORT="N" S DSPDATA=-DSPDATA               ; number of days pending
"RTN","IBCECSA1",135,0)
 D SET($J("",LVL-1)_IBS_": "_DSPDATA,IBCNT,"")
"RTN","IBCECSA1",136,0)
SRTBRKX ;
"RTN","IBCECSA1",137,0)
 Q
"RTN","IBCECSA1",138,0)
 ;
"RTN","IBCECSA1",139,0)
SET(X,CNT,DAT) ;set up list manager screen array
"RTN","IBCECSA1",140,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECSA1",141,0)
 I 'CNT S CNT=1
"RTN","IBCECSA1",142,0)
 S ^TMP("IBCECSA",$J,VALMCNT,0)=X
"RTN","IBCECSA1",143,0)
 S ^TMP("IBCECSA",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA1",144,0)
 I DAT'="" S ^TMP("IBCECSA",$J,CNT)=VALMCNT_U_DAT
"RTN","IBCECSA1",145,0)
 Q
"RTN","IBCECSA1",146,0)
 ;
"RTN","IBCECSA1",147,0)
SETL1(IB,X) ;
"RTN","IBCECSA1",148,0)
 S X=$$SETFLD^VALM1($P($G(^DGCR(399,+IB,0)),U,1)_$P(IB,U,12),X,"BILL")
"RTN","IBCECSA1",149,0)
 S X=$$SETFLD^VALM1($P(IB,U,2),X,"PNAME")
"RTN","IBCECSA1",150,0)
 S X=$$SETFLD^VALM1($P(IB,U,3),X,"PANAME")
"RTN","IBCECSA1",151,0)
 S X=$$SETFLD^VALM1($P(IB,U,4),X,"SSN")
"RTN","IBCECSA1",152,0)
 S X=$$SETFLD^VALM1($$FMTE^XLFDT($P(IB,U,5),"2Z"),X,"SERVICE")
"RTN","IBCECSA1",153,0)
 S X=$$SETFLD^VALM1($J("$"_$FN($P(IB,U,6),"",2),10),X,"CURBAL")
"RTN","IBCECSA1",154,0)
 Q
"RTN","IBCECSA1",155,0)
 ;
"RTN","IBCECSA1",156,0)
TXT(IBDA,LEN) ; Return a string of status message text
"RTN","IBCECSA1",157,0)
 ; IBDA - ien to file 361
"RTN","IBCECSA1",158,0)
 ;  LEN - desired maximum length of combined text string
"RTN","IBCECSA1",159,0)
 NEW MSG,LN,STOP,TX,HLN,REFN,DELIM
"RTN","IBCECSA1",160,0)
 S MSG="",LN=0,LEN=$G(LEN,75),STOP=0
"RTN","IBCECSA1",161,0)
 F  S LN=$O(^IBM(361,+$G(IBDA),1,LN)) Q:'LN  D  Q:STOP
"RTN","IBCECSA1",162,0)
 . S TX=$G(^IBM(361,IBDA,1,LN,0))
"RTN","IBCECSA1",163,0)
 . S TX=$$TRIM^XLFSTR(TX)
"RTN","IBCECSA1",164,0)
 . ; Don't include parts added by ^IBCE277
"RTN","IBCECSA1",165,0)
 . Q:TX="Informational Message:"
"RTN","IBCECSA1",166,0)
 . Q:TX="Warning Message:"
"RTN","IBCECSA1",167,0)
 . Q:TX="Error Message:"
"RTN","IBCECSA1",168,0)
 . I $E(TX,1,27)="Clearinghouse Trace Number:" S STOP=1 Q
"RTN","IBCECSA1",169,0)
 . I $E(TX,1,18)="Payer Status Date:" S STOP=1 Q
"RTN","IBCECSA1",170,0)
 . I $E(TX,1,19)="Payer Claim Number:" S STOP=1 Q
"RTN","IBCECSA1",171,0)
 . I $E(TX,1,12)="Split Claim:" S STOP=1 Q
"RTN","IBCECSA1",172,0)
 . I $E(TX,1,11)="Claim Type:" S STOP=1 Q
"RTN","IBCECSA1",173,0)
 . I $E(TX,1,8)="Patient:" S STOP=1 Q
"RTN","IBCECSA1",174,0)
 . I $E(TX,1,14)="Service Dates:" S STOP=1 Q
"RTN","IBCECSA1",175,0)
 . I $E(TX,1,11)="Payer Name:" S STOP=1 Q
"RTN","IBCECSA1",176,0)
 . I $E(TX,1,7)="Source:" S STOP=1 Q
"RTN","IBCECSA1",177,0)
 . I TX["HL=" S HLN=+$P(TX,"HL=",2),DELIM="HL="_HLN,TX=$P(TX,DELIM,1)_"HL= "_$P(TX,DELIM,2,9)
"RTN","IBCECSA1",178,0)
 . I TX["ENVOY REF: " S REFN=$E($P(TX,"ENVOY REF: ",2),1,14),DELIM="ENVOY REF: "_REFN,TX=$P(TX,DELIM,1)_"ENVOY REF: "_$P(TX,DELIM,2,9)
"RTN","IBCECSA1",179,0)
 . I ($L(MSG)+$L(TX))>500 S STOP=1 Q
"RTN","IBCECSA1",180,0)
 . S MSG=MSG_$S(MSG="":"",1:" ")_TX
"RTN","IBCECSA1",181,0)
 . I $L(MSG)>LEN S STOP=1
"RTN","IBCECSA1",182,0)
 . Q
"RTN","IBCECSA1",183,0)
 Q $E(MSG,1,LEN)
"RTN","IBCECSA1",184,0)
 ;
"RTN","IBCEF11")
0^52^B98194583^B100824598
"RTN","IBCEF11",1,0)
IBCEF11 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,309,335,348,349,371,432,447,473,516,577,592,608,623**;21-MAR-94;Build 70
"RTN","IBCEF11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF11",4,0)
 ;
"RTN","IBCEF11",5,0)
BOX24D(A,IB) ; Returns the lines for boxes 19-24 of the CMS-1500 display
"RTN","IBCEF11",6,0)
 ; IB = flag is 1 if only box 24 is needed
"RTN","IBCEF11",7,0)
 Q $S('$G(IB):"36",1:"44")_"^55"
"RTN","IBCEF11",8,0)
 ;
"RTN","IBCEF11",9,0)
RCBOX() ; Returns the lines for revenue code boxes of the UB-04 display
"RTN","IBCEF11",10,0)
 Q "19^41"
"RTN","IBCEF11",11,0)
 ;
"RTN","IBCEF11",12,0)
OUTPT(IBIFN,IBPRINT) ; Returns an array of service line data from
"RTN","IBCEF11",13,0)
 ;                 CMS-1500 box 24.  Output is in IBXDATA(n)
"RTN","IBCEF11",14,0)
 ; IBPRINT = print flag  1: return print fields
"RTN","IBCEF11",15,0)
 ;                       0: return EDI fields
"RTN","IBCEF11",16,0)
 ; Uses diagnosis array ^TMP("IBXSAVE",$J,"DX",IBIFN,DIAG CODE)=SEQ #
"RTN","IBCEF11",17,0)
 ;   if it already exists. If not, it builds it from N-DIAGNOSES element
"RTN","IBCEF11",18,0)
 ;
"RTN","IBCEF11",19,0)
 ; For EDI call: Returns IBXDATA(n)=
"RTN","IBCEF11",20,0)
 ;   begin date(YYYYMMDD) ^ end date(YYYYMMDD) ^ pos ^ tos ^
"RTN","IBCEF11",21,0)
 ;   proc code/revenue code - if no procedure (not the pointers) ^
"RTN","IBCEF11",22,0)
 ;   type of code ^ dx pointer(s ) ^ unit charge ^ units ^ modifiers separated by ;
"RTN","IBCEF11",23,0)
 ;   ^ purchased charge amount ^ anesthesia minutes ^ emergency indicator ^
"RTN","IBCEF11",24,0)
 ;   lab-type service flag ^ NDC ^ Units/Quantity ^ Unit/Basis of Measurement (vd/IB*2*577)
"RTN","IBCEF11",25,0)
 ;
"RTN","IBCEF11",26,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF11",27,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF11",28,0)
 ;      line in the first '^' piece followed by the '0' node data of file
"RTN","IBCEF11",29,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF11",30,0)
 ;       COB = COB sequence # of adjustment's ins co, m = seq #
"RTN","IBCEF11",31,0)
 ;         -- AND --
"RTN","IBCEF11",32,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF11",33,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEF11",34,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEF11",35,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF11",36,0)
 ;
"RTN","IBCEF11",37,0)
 ; For Print call: Returns begin date(DDMMYYYY)^end date(DDMMYYYY) or
"RTN","IBCEF11",38,0)
 ;   null if equal to begin date^pos^tos^bedsection name(if no procedure)
"RTN","IBCEF11",39,0)
 ;   or procedure code(not the pointer)^ ... refer to EDI call results
"RTN","IBCEF11",40,0)
 ;   Also, IBXDATA(n,"TEXT")=the text to print on first line of box 24,
"RTN","IBCEF11",41,0)
 ;   If no procedure code, returns IBXDATA(n,"A")=rev code abbrev
"RTN","IBCEF11",42,0)
 ;
"RTN","IBCEF11",43,0)
 ;  For both calls, returns IBXDATA(n,item type,item ptr)=""
"RTN","IBCEF11",44,0)
 ;      -- AND --
"RTN","IBCEF11",45,0)
 ;   IBXDATA(n,"RX")=RX#^drug name^NDC^refill #^(re)fill date^qty^days
"RTN","IBCEF11",46,0)
 ;                   ^chrge^ien of file 362.4^NDC format
"RTN","IBCEF11",47,0)
 ;           If line references a prescription
"RTN","IBCEF11",48,0)
 ;      -- AND --
"RTN","IBCEF11",49,0)
 ;   If no revenue code for a prescription, returns IBXDATA(n,"ARX")=""
"RTN","IBCEF11",50,0)
 ;      -- AND --
"RTN","IBCEF11",51,0)
 ;   IBXDATA(n,"AUX")='AUX' node of the procedure entry
"RTN","IBCEF11",52,0)
 ;
"RTN","IBCEF11",53,0)
 ; Also returns IBXDATA(n,"CPLNK") = soft link to corresponding entry in PROCEDURES multiple of file 399
"RTN","IBCEF11",54,0)
 ;
"RTN","IBCEF11",55,0)
 N IB,IBI,IBJ,IBFLD,IBDXI,IBXIEN,Z,IBXTRA,IBRX,IBRX0,IBRX1,Z0,Z1
"RTN","IBCEF11",56,0)
 ;
"RTN","IBCEF11",57,0)
 K ^TMP($J,"IBITEM")
"RTN","IBCEF11",58,0)
 S ^TMP($J,"IBITEM")=""
"RTN","IBCEF11",59,0)
 ; Build diagnosis array if not already built
"RTN","IBCEF11",60,0)
 I $O(^TMP("IBXSAVE",$J,"DX",IBIFN,""))="",$O(^IBA(362.3,"AIFN"_IBIFN,"")) D
"RTN","IBCEF11",61,0)
 .N Z,IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCEF11",62,0)
 .S Z="" F  S Z=$O(IBXDATA(Z)) K:$O(IBXDATA(0))=""&(Z="") IBXDATA Q:Z=""  S:$P(IBXDATA(Z),U,2) ^TMP("IBXSAVE",$J,"DX",IBIFN,$P(IBXDATA(Z),U,2))=Z
"RTN","IBCEF11",63,0)
 ;
"RTN","IBCEF11",64,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IB("U")=$G(^("U")),IB("U1")=$G(^("U1"))
"RTN","IBCEF11",65,0)
 S IBI="" F  S IBI=$O(^TMP("IBXSAVE",$J,"DX",IBIFN,IBI)) Q:IBI=""  S IBDXI(IBI)=^(IBI)
"RTN","IBCEF11",66,0)
 I '$G(IBPRINT) D RVCE^IBCF23(IBIFN,IBIFN)
"RTN","IBCEF11",67,0)
 I $G(IBPRINT) D RVCE^IBCF23(,IBIFN)
"RTN","IBCEF11",68,0)
 ; Returns IBFLD(24) = begin date ^ end date ^ pos ^ tos ^
"RTN","IBCEF11",69,0)
 ;     proc/bedsection/revenue code ^ dx pointer ^ unit charge ^
"RTN","IBCEF11",70,0)
 ;     units ^ modifiers ^ purchased charge amount ^ anesthesia minutes ^
"RTN","IBCEF11",71,0)
 ;     emergency indicator ^ soft pointer to PROCEDURES multiple in file 399 ^
"RTN","IBCEF11",72,0)
 ;     NDC ^ Units
"RTN","IBCEF11",73,0)
 ;         IBFLD(24,n,type,item)=""
"RTN","IBCEF11",74,0)
 ;         IBFLD(24,n_"A") = revenue code abbreviation if no procedure
"RTN","IBCEF11",75,0)
 ;         IBFLD(24,n,"AUX") = 'AUX' node of line item 
"RTN","IBCEF11",76,0)
 ;         IBFLD(24,n,"RX") = soft pointer to file 362.4 from 'item' fld
"RTN","IBCEF11",77,0)
 ;                            (can be null)
"RTN","IBCEF11",78,0)
 ;
"RTN","IBCEF11",79,0)
 D SET^IBCSC5A(IBIFN,.IBRX) ;prescriptions
"RTN","IBCEF11",80,0)
 ; IBRX1(ien 362.4)=RX#^drug ien^NDC^refil #^(re)fil date^qty^days^chrge
"RTN","IBCEF11",81,0)
 I IBRX S IBRX="" F  S IBRX=$O(IBRX(IBRX)) Q:IBRX=""  S IBRX0=0 F  S IBRX0=$O(IBRX(IBRX,IBRX0)) Q:'IBRX0  D
"RTN","IBCEF11",82,0)
 . N IBRXH
"RTN","IBCEF11",83,0)
 . S IBRXH=IBRX(IBRX,IBRX0)
"RTN","IBCEF11",84,0)
 . ; **IB*2.0*432** added _U_$P(IBRXH,U,9) (Rx Date) to Output Formatter
"RTN","IBCEF11",85,0)
 . S IBRX1(+IBRXH)=IBRX_U_$P(IBRXH,U,2)_U_$P(IBRXH,U,5)_U_$P(IBRXH,U,7)_U_IBRX0_U_$P(IBRXH,U,4)_U_$P(IBRXH,U,3)_U_$P(IBRXH,U,6)_U_+IBRXH_U_$P(IBRXH,U,8)_U_$P(IBRXH,U,9)
"RTN","IBCEF11",86,0)
 K IBRX
"RTN","IBCEF11",87,0)
 ;
"RTN","IBCEF11",88,0)
 ; for EDI, remove any $0 line items from the IBFLD array before 
"RTN","IBCEF11",89,0)
 ; dropping down into the next loop (IB*2*371)
"RTN","IBCEF11",90,0)
 ; Start IB*2.0*447 BI - Code removed to allow 0 dollars to print.
"RTN","IBCEF11",91,0)
 ;I '$G(IBPRINT) D
"RTN","IBCEF11",92,0)
 ;. NEW IBZ,IBI,Z
"RTN","IBCEF11",93,0)
 ;. M IBZ=IBFLD K IBFLD
"RTN","IBCEF11",94,0)
 ;. S (IBI,Z)=0
"RTN","IBCEF11",95,0)
 ;. F  S IBI=$O(IBZ(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",96,0)
 ;.. I $P(IBZ(24,IBI),U,7)*$P(IBZ(24,IBI),U,8)'>0 Q
"RTN","IBCEF11",97,0)
 ;.. S Z=Z+1
"RTN","IBCEF11",98,0)
 ;.. M IBFLD(24,Z)=IBZ(24,IBI)
"RTN","IBCEF11",99,0)
 ;.. S IBFLD(24)=Z
"RTN","IBCEF11",100,0)
 ;.. Q
"RTN","IBCEF11",101,0)
 ;. Q
"RTN","IBCEF11",102,0)
 ; End IB*2.0*447 BI
"RTN","IBCEF11",103,0)
 ;
"RTN","IBCEF11",104,0)
 S IBI=0
"RTN","IBCEF11",105,0)
 F  S IBI=$O(IBFLD(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",106,0)
 . S IBRX1=0
"RTN","IBCEF11",107,0)
 . S IBXDATA(IBI)=$P(IBFLD(24,IBI),U)_U_$P(IBFLD(24,IBI),U,$S($P(IBFLD(24,IBI),U,2)=""&'$G(IBPRINT):1,1:2))
"RTN","IBCEF11",108,0)
 . S $P(IBXDATA(IBI),U,3,5)=$P(IBFLD(24,IBI),U,3,5)
"RTN","IBCEF11",109,0)
 . S $P(IBXDATA(IBI),U,6)=$S($D(IBFLD(24,IBI_"X")):"CJ",1:"HC")
"RTN","IBCEF11",110,0)
 . S $P(IBXDATA(IBI),U,7,13)=$P(IBFLD(24,IBI),U,6,12)
"RTN","IBCEF11",111,0)
 . S $P(IBXDATA(IBI),U,14)=+$$ISLAB(IBXDATA(IBI))
"RTN","IBCEF11",112,0)
 . ; MRD;IB*2.0*516 - Added NDC and Units to line level of claim,
"RTN","IBCEF11",113,0)
 . ; pieces 14 & 15 of IBFLD, pieces 15 & 16 of IBXDATA. Print
"RTN","IBCEF11",114,0)
 . ; in Box 24 by setting in IBXDATA(IBI,"TEXT").
"RTN","IBCEF11",115,0)
 . ;S $P(IBXDATA(IBI),U,15,16)=$P(IBFLD(24,IBI),U,14,15)
"RTN","IBCEF11",116,0)
 . ;I $P(IBFLD(24,IBI),U,14)'="" S IBXDATA(IBI,"TEXT")="N4"_$P(IBFLD(24,IBI),U,14)_" UN"_$P(IBFLD(24,IBI),U,15)
"RTN","IBCEF11",117,0)
 . ; vd/IB*2*577 - Added Unit/Basis of Measurement to line level of claim,
"RTN","IBCEF11",118,0)
 . ; piece 16 of IBFLD, piece 17 of IBXDATA.
"RTN","IBCEF11",119,0)
 . ; Print in Box 24 by setting in IBXDATA(IBI,"TEXT").
"RTN","IBCEF11",120,0)
 . S $P(IBXDATA(IBI),U,15,17)=$P(IBFLD(24,IBI),U,14,16)
"RTN","IBCEF11",121,0)
 . I $P(IBFLD(24,IBI),U,14)'="" S IBXDATA(IBI,"TEXT")="N4"_$P(IBFLD(24,IBI),U,14)_" "_$P(IBFLD(24,IBI),U,16)_$P(IBFLD(24,IBI),U,15)
"RTN","IBCEF11",122,0)
 . ;
"RTN","IBCEF11",123,0)
 . I $D(IBFLD(24,IBI,"RX")) D  ;Rx
"RTN","IBCEF11",124,0)
 .. S IBRX1=1
"RTN","IBCEF11",125,0)
 .. I $P($G(IBFLD(24,IBI,"AUX")),U,8)'="" S $P(IBFLD(24,IBI,"AUX"),U,8)="",$P(IBFLD(24,IBI,"AUX"),U,9)=""  ;No free text allowed for rx's
"RTN","IBCEF11",126,0)
 .. I $D(IBRX1(+IBFLD(24,IBI,"RX"))) D  Q  ;Soft link exists
"RTN","IBCEF11",127,0)
 ...D ZERO^IBRXUTL(+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2))
"RTN","IBCEF11",128,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(+IBFLD(24,IBI,"RX")),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2),.01)),1,30)
"RTN","IBCEF11",129,0)
 ... K IBRX1(+IBFLD(24,IBI,"RX"))
"RTN","IBCEF11",130,0)
 ... ; No soft link - must find the first Rx with the same charge
"RTN","IBCEF11",131,0)
 .. S IBRX="" F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  I +$P(IBRX1(IBRX),U,8)=+$P(IBXDATA(IBI),U,8) D  Q
"RTN","IBCEF11",132,0)
 ... D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",133,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX) Q
"RTN","IBCEF11",134,0)
 ... Q
"RTN","IBCEF11",135,0)
 .. Q
"RTN","IBCEF11",136,0)
 . ;
"RTN","IBCEF11",137,0)
 . ; MRD;IB*2.0*516 - If additional service line comments to appear in
"RTN","IBCEF11",138,0)
 . ; Box 24, concatenate to front if something (NDC) is already there.
"RTN","IBCEF11",139,0)
 . I $G(IBFLD(24,IBI,"AUX"))'="" D
"RTN","IBCEF11",140,0)
 .. I $G(IBPRINT),$P(IBFLD(24,IBI,"AUX"),U,8)'="" D
"RTN","IBCEF11",141,0)
 ... I $G(IBXDATA(IBI,"TEXT"))'="" S IBXDATA(IBI,"TEXT")=$E($P(IBFLD(24,IBI,"AUX"),U,8)_" "_IBXDATA(IBI,"TEXT"),1,59)
"RTN","IBCEF11",142,0)
 ... E  S IBXDATA(IBI,"TEXT")=$P(IBFLD(24,IBI,"AUX"),U,8)
"RTN","IBCEF11",143,0)
 ... S $P(IBFLD(24,IBI,"AUX"),U,8)=""
"RTN","IBCEF11",144,0)
 ... Q
"RTN","IBCEF11",145,0)
 .. S IBXDATA(IBI,"AUX")=IBFLD(24,IBI,"AUX")
"RTN","IBCEF11",146,0)
 .. Q
"RTN","IBCEF11",147,0)
 . ;
"RTN","IBCEF11",148,0)
 . ;JWS;IB*2.0*592:US131
"RTN","IBCEF11",149,0)
 . I $G(IBFLD(24,IBI,"DEN"))'="" S IBXDATA(IBI,"DEN")=IBFLD(24,IBI,"DEN")
"RTN","IBCEF11",150,0)
 . I $G(IBFLD(24,IBI,"DEND"))'="" S IBXDATA(IBI,"DEND")=$P(IBFLD(24,IBI,"DEND"),"^",4)
"RTN","IBCEF11",151,0)
 . I $O(IBFLD(24,IBI,"DEN1",0)) M IBXDATA(IBI,"DEN1")=IBFLD(24,IBI,"DEN1")
"RTN","IBCEF11",152,0)
 . ;end - ;JWS;IB*2.0*592:US131
"RTN","IBCEF11",153,0)
 . I $G(IBPRINT) D
"RTN","IBCEF11",154,0)
 .. ; START IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCEF11",155,0)
 .. ; I '$P(IBXDATA(IBI),U,8),'$G(IBXDATA(IBI,"RX")) D  Q
"RTN","IBCEF11",156,0)
 .. I $P(IBXDATA(IBI),U,8)="",'$G(IBXDATA(IBI,"RX")) D  Q
"RTN","IBCEF11",157,0)
 ... ; END IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCEF11",158,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",159,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS < #PROCEDURES, THEY MUST BE ="
"RTN","IBCEF11",160,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",161,0)
 ... Q
"RTN","IBCEF11",162,0)
 .. ;
"RTN","IBCEF11",163,0)
 .. I $G(IBFLD(24,IBI_"A"))'="" D  Q
"RTN","IBCEF11",164,0)
 ... S IBXDATA(IBI,"A")=IBFLD(24,IBI_"A")
"RTN","IBCEF11",165,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",166,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS > #PROCEDURES, THEY MUST BE=: "_IBFLD(24,IBI_"A")
"RTN","IBCEF11",167,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",168,0)
 ... Q
"RTN","IBCEF11",169,0)
 .. ;
"RTN","IBCEF11",170,0)
 .. S IBRX=$G(IBXDATA(IBI,"RX"))
"RTN","IBCEF11",171,0)
 .. I IBRX'="" D  ;Format Rx detail
"RTN","IBCEF11",172,0)
 ... N Z
"RTN","IBCEF11",173,0)
 ... S Z=$P(IBRX,U)
"RTN","IBCEF11",174,0)
 ... S Z=$S(Z'="":"Rx#"_Z_" ",1:"RX: ")
"RTN","IBCEF11",175,0)
 ... S IBXDATA(IBI,"TEXT")=Z_$S($P(IBRX,U,3)'="":"NDC: "_$P(IBRX,U,3),1:"NOC: "_$P(IBRX,U,2))_" Qty: "_$P(IBRX,U,6)_" Days: "_$P(IBRX,U,7)
"RTN","IBCEF11",176,0)
 ... S $P(IBXDATA(IBI,"AUX"),U,9)="N4"   ; service line comment qualifier for RX's
"RTN","IBCEF11",177,0)
 ... Q
"RTN","IBCEF11",178,0)
 .. Q
"RTN","IBCEF11",179,0)
 . S IBXDATA(IBI,"CPLNK")=$P(IBFLD(24,IBI),U,13)
"RTN","IBCEF11",180,0)
 . I '$G(IBPRINT) D COBLINE^IBCEU6(IBIFN,IBI,.IBXDATA,,.IBXTRA)
"RTN","IBCEF11",181,0)
 . Q
"RTN","IBCEF11",182,0)
 ;
"RTN","IBCEF11",183,0)
 I $G(IBPRINT) D
"RTN","IBCEF11",184,0)
 . S IBRX=0 F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  D
"RTN","IBCEF11",185,0)
 .. S IBI=+$O(IBXDATA(""),-1)+1
"RTN","IBCEF11",186,0)
 .. S IBXDATA(IBI)=$$DATE($P(IBRX1(IBRX),U,5))
"RTN","IBCEF11",187,0)
 .. S IBXDATA(IBI,"TEXT")="**** ERROR - NO PROC LINK TO REV CODE FOR DRUG: RX#: "_$P(IBRX1(IBRX),U)_"  NDC #: "_$P(IBRX1(IBRX),U,3)
"RTN","IBCEF11",188,0)
 .. I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",189,0)
 .. S IBXDATA(IBI,"ARX")=""
"RTN","IBCEF11",190,0)
 .. D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",191,0)
 .. S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX)
"RTN","IBCEF11",192,0)
 .. Q
"RTN","IBCEF11",193,0)
 . Q
"RTN","IBCEF11",194,0)
 ;
"RTN","IBCEF11",195,0)
 I '$G(IBPRINT),$D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,0) ;Handle bundled/unbundled lines
"RTN","IBCEF11",196,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCEF11",197,0)
 Q
"RTN","IBCEF11",198,0)
 ;
"RTN","IBCEF11",199,0)
ISLAB(LDATA) ; Returns 0/1 if line item data indicates the item is a lab (1)
"RTN","IBCEF11",200,0)
 ; 'LAB' is defined here as type of service = 5
"RTN","IBCEF11",201,0)
 Q $E($P(LDATA,U,4))="5"
"RTN","IBCEF11",202,0)
 ;
"RTN","IBCEF11",203,0)
FMT(DATA,DLEN,FLEN) ; Returns a string in DATA with a max length of DLEN
"RTN","IBCEF11",204,0)
 ;  and a field length of FLEN
"RTN","IBCEF11",205,0)
 Q $E($E(DATA,1,DLEN)_$J("",FLEN),1,FLEN)
"RTN","IBCEF11",206,0)
 ;
"RTN","IBCEF11",207,0)
DATE(X,DEL) ;  Returns FM date in X as MMxDDxYYYY  where x=DEL
"RTN","IBCEF11",208,0)
 S DEL=$G(DEL)
"RTN","IBCEF11",209,0)
 S X=$$DATE^IBCF2(X,1,1)
"RTN","IBCEF11",210,0)
 I X'="" S X=$E(X,1,2)_DEL_$E(X,3,4)_DEL_$E(X,5,8)
"RTN","IBCEF11",211,0)
 Q X
"RTN","IBCEF11",212,0)
 ;
"RTN","IBCEF11",213,0)
BATCH() ; Sets up record for and stores/returns the next batch number
"RTN","IBCEF11",214,0)
 N NUM,FAC,DO,DD,DLAYGO,DIC,X,Y
"RTN","IBCEF11",215,0)
 ;Keep latest batch number for view/print edi bill extract data option
"RTN","IBCEF11",216,0)
 I $D(IBVNUM) S NUM=IBVNUM G BATCHQ
"RTN","IBCEF11",217,0)
 ;Check for batch resubmit - if yes, use same number as original batch
"RTN","IBCEF11",218,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,3)=1 S NUM=$P(^($J),U) G BATCHQ
"RTN","IBCEF11",219,0)
 ;JWS;IB*2.0*623v24;7/17/19 increased lock timeout to 10 sec from 5
"RTN","IBCEF11",220,0)
 L +^IBA(364.1,0):10 I '$T Q 0
"RTN","IBCEF11",221,0)
 S FAC=+$P($$SITE^VASITE(),U,3),NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF11",222,0)
 S NUM=NUM+1
"RTN","IBCEF11",223,0)
 ;I $D(^IBA(364.1,+NUM,0)),$P(^(0),U,2)="" F  D  Q:'NUM!($P($G(^IBA(364.1,+NUM,0)),U,2)'="")
"RTN","IBCEF11",224,0)
 ;. I $D(^IBA(364.1,NUM,0)) S DA=NUM,DIK="^IBA(364.1," D ^DIK
"RTN","IBCEF11",225,0)
 ;. S NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF11",226,0)
 ;JWS;IB*2.0*623v24;commented out code below, thus needed to set NUM=NUM+1 above
"RTN","IBCEF11",227,0)
 ;JWS;IB*2.0*623;bug when number = 4424420000
"RTN","IBCEF11",228,0)
 ;F  S NUM=$S($P(NUM,FAC,2)'="":NUM+1,1:FAC_"0000001") Q:'$D(^IBA(364.1,"B",NUM))
"RTN","IBCEF11",229,0)
 ;JWS;IB*2.0*623v24;commented out code below, looking for unused batch#s
"RTN","IBCEF11",230,0)
 ;I $E(NUM,1,3)'=FAC S NUM=FAC_"0000001"
"RTN","IBCEF11",231,0)
 ;F  Q:'$D(^IBA(364.1,"B",NUM))  S NUM=NUM+1
"RTN","IBCEF11",232,0)
 ;
"RTN","IBCEF11",233,0)
 K DO,DD S DIC="^IBA(364.1,",DLAYGO=364.1,DIC(0)="L",X=NUM D FILE^DICN K DD,DO I Y'>0 S NUM=0
"RTN","IBCEF11",234,0)
 L -^IBA(364.1,0)
"RTN","IBCEF11",235,0)
 ;
"RTN","IBCEF11",236,0)
BATCHQ Q NUM
"RTN","IBCEF11",237,0)
 ;
"RTN","IBCEF11",238,0)
GETLDAT(IBXIEN) ; Extract data for 837 transmission LDAT record
"RTN","IBCEF11",239,0)
 ; IBXIEN - ien in file 399
"RTN","IBCEF11",240,0)
 ; Sets up IBXSAVE("LDAT",n) array:
"RTN","IBCEF11",241,0)
 ; Attachment report type ^ Attachment report transmission code ^ Attachment control number ^ 
"RTN","IBCEF11",242,0)
 ; OB Anesthesia Additional Units ^ Purchase Service Provider ID ^ Purchase Service Amount ^
"RTN","IBCEF11",243,0)
 N CPIEN,FTYPE,IBXDATA,IDS,IBIDS,NODE1,PSAMNT,PSPID,Z,PCE1,LINE
"RTN","IBCEF11",244,0)
 I '+$G(IBXIEN) Q
"RTN","IBCEF11",245,0)
 K IBXSAVE("LDAT")
"RTN","IBCEF11",246,0)
 S FTYPE=$$FT^IBCEF(IBXIEN)
"RTN","IBCEF11",247,0)
 ;JWS;IB*2.0*592; added Dental form
"RTN","IBCEF11",248,0)
 I FTYPE=2!(FTYPE=7) D OUTPT(IBXIEN,0)
"RTN","IBCEF11",249,0)
 I FTYPE=3 D HOS^IBCEF2(IBXIEN)
"RTN","IBCEF11",250,0)
 D ALLIDS^IBCEFP(IBXIEN,.IDS,1)
"RTN","IBCEF11",251,0)
 S (PSPID,PSAMNT)=""
"RTN","IBCEF11",252,0)
 ; IB*2.0*473/TAZ - Convert PROVIDER code to function call to PSID^IBCEFP
"RTN","IBCEF11",253,0)
 I $$SUB1OK^IBCEP8A(IBXIEN),(FTYPE=2) D
"RTN","IBCEF11",254,0)
 . D PSID^IBCEFP(IBXIEN,.IDS,.IBIDS)
"RTN","IBCEF11",255,0)
 . S PSPID=$G(IBIDS(0)) I PSPID="" S PSPID=$P($G(IBIDS(1)),U,1)
"RTN","IBCEF11",256,0)
 ;IB*2.0*473/TAZ - END
"RTN","IBCEF11",257,0)
 S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D
"RTN","IBCEF11",258,0)
 . S CPIEN=+$G(IBXDATA(Z,"CPLNK")) ;I 'CPIEN Q
"RTN","IBCEF11",259,0)
 . I FTYPE=2,$$SUB1OK^IBCEP8A(IBXIEN) S PSAMNT=$$DOLLAR^IBCEFG1($P($G(IBXDATA(Z)),U,11))
"RTN","IBCEF11",260,0)
 . S (PCE1,NODE1)=""
"RTN","IBCEF11",261,0)
 . I CPIEN D
"RTN","IBCEF11",262,0)
 . . S NODE1=$G(^DGCR(399,IBXIEN,"CP",CPIEN,1))
"RTN","IBCEF11",263,0)
 . . S PCE1=$$GET1^DIQ(399.0304,CPIEN_","_IBXIEN_",",71)
"RTN","IBCEF11",264,0)
 . . Q
"RTN","IBCEF11",265,0)
 . ; MRD;IB*2.0*516 - Added addl. procedure description as piece 7 
"RTN","IBCEF11",266,0)
 . ; of IBXSAVE, which will exist only if the procedure ends in '99'
"RTN","IBCEF11",267,0)
 . ; or is an 'NOC/NOS' procedure.
"RTN","IBCEF11",268,0)
 . ;JWS;IB*2.0*592;do not include NOC description here for Dental claims
"RTN","IBCEF11",269,0)
 . S IBXSAVE("LDAT",Z)=PCE1_U_$P(NODE1,U,3)_U_$P(NODE1,U)_U_$P(NODE1,U,5)_U_$G(PSPID)_U_$G(PSAMNT)_U_$S(FTYPE=7:"",1:$P(NODE1,U,4))
"RTN","IBCEF11",270,0)
 . Q
"RTN","IBCEF11",271,0)
 Q
"RTN","IBCEF11",272,0)
 ;
"RTN","IBCEF11",273,0)
 ;/Beginning of IB*2.0*608 (US9) - vd
"RTN","IBCEF11",274,0)
LDAT ;
"RTN","IBCEF11",275,0)
 N Z K IBXDATA
"RTN","IBCEF11",276,0)
 S Z=0 F  S Z=$O(IBXSAVE("LDAT",Z)) Q:'Z  D
"RTN","IBCEF11",277,0)
 . S IBXDATA(Z)=Z D:Z>1 ID^IBCEF2(Z,"LDAT")
"RTN","IBCEF11",278,0)
 ;
"RTN","IBCEF11",279,0)
 I +$G(VC80) D
"RTN","IBCEF11",280,0)
 . S Z=$O(IBXDATA(""),-1)+1
"RTN","IBCEF11",281,0)
 . D ID^IBCEF2(Z,"LDAT")
"RTN","IBCEF11",282,0)
 . D VC80L(IBXIEN,Z)  ; Process for 'SNF' claims & the last claim line
"RTN","IBCEF11",283,0)
 . S A=Z
"RTN","IBCEF11",284,0)
 . S IBXDATA(Z)=A
"RTN","IBCEF11",285,0)
 Q
"RTN","IBCEF11",286,0)
 ;
"RTN","IBCEF11",287,0)
VC80L(IBIFN,LN) ; Extracts the data for the "LDAT" record for VALUE CODE 80 Line item.
"RTN","IBCEF11",288,0)
 ; IBIFN = Claims internal id number
"RTN","IBCEF11",289,0)
 ;    LN = 
"RTN","IBCEF11",290,0)
 N VC80LN
"RTN","IBCEF11",291,0)
 S VC80LN=LN
"RTN","IBCEF11",292,0)
 S $P(IBXSAVE("LDAT",VC80LN),U,11)="6R"
"RTN","IBCEF11",293,0)
 S $P(IBXSAVE("LDAT",VC80LN),U,12)=VC80LN_"_"_$$GET1^DIQ(399,IBIFN_", ",.01)
"RTN","IBCEF11",294,0)
 Q
"RTN","IBCEF11",295,0)
 ;/Ending of IB*2.0*608 - vd
"RTN","IBCEF11",296,0)
 ;
"RTN","IBCEF22")
0^53^B109118409^B107716996
"RTN","IBCEF22",1,0)
IBCEF22 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;06-FEB-96
"RTN","IBCEF22",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,135,155,309,349,389,432,488,516,577,608,623**;21-MAR-94;Build 70
"RTN","IBCEF22",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF22",4,0)
 ;
"RTN","IBCEF22",5,0)
 ;  OVERFLOW FROM ROUTINE IBCEF2
"RTN","IBCEF22",6,0)
HOS(IBIFN) ; Extract rev codes for episode billed on a UB-04 into IBXDATA
"RTN","IBCEF22",7,0)
 ; IBIFN = bill ien
"RTN","IBCEF22",8,0)
 ; Format: IBXDATA(n) =
"RTN","IBCEF22",9,0)
 ;  rev cd ptr ^ CPT CODE ptr ^ unit chg ^ units ^ tot charge
"RTN","IBCEF22",10,0)
 ;    ^ tot uncov ^ FL49 value
"RTN","IBCEF22",11,0)
 ;    ^ ien of rev code multiple entry(s) (separated by ";")
"RTN","IBCEF22",12,0)
 ;    ^ modifiers specific to rev code/proc (separated by ",")
"RTN","IBCEF22",13,0)
 ;    ^ rev code date, if it can be determined by a corresponding proc
"RTN","IBCEF22",14,0)
 ;    ^ NDC from "CP" node of claim ^ Units/Quantity from "CP" node  - vd/IB*2*577
"RTN","IBCEF22",15,0)
 ;    ^ Units/Basis of Measurement for Drugs  - vd/IB*2*577
"RTN","IBCEF22",16,0)
 ;
"RTN","IBCEF22",17,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF22",18,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF22",19,0)
 ;      line in the first '^' piece followed by the '0' node of file
"RTN","IBCEF22",20,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF22",21,0)
 ;       COB = COB seq # of adjustment's ins co, m = seq #
"RTN","IBCEF22",22,0)
 ;         -- AND --
"RTN","IBCEF22",23,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF22",24,0)
 ;           the '0' node for each subordinate entry of file
"RTN","IBCEF22",25,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837)
"RTN","IBCEF22",26,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF22",27,0)
 ;
"RTN","IBCEF22",28,0)
 ;         -- AND --
"RTN","IBCEF22",29,0)
 ;    IBXDATA(n,"CPLNK") = soft link to corresponding entry in PROCEDURES multiple of file 399
"RTN","IBCEF22",30,0)
 ;
"RTN","IBCEF22",31,0)
 N IBDA,IBCOMB,IBINPAT,IBLN,IBX,IBY,IBZ,IBS,IBSS,IBXTRA,IBX1,IBXS,IBP,IBPO,IBP1,IBDEF,Z,Z0,Z1,ZX,QQ,IBMOD,LST
"RTN","IBCEF22",32,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF22",33,0)
 I 'IBINPAT D F^IBCEF("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF22",34,0)
 S IBDEF=$G(IBZ),LST=""
"RTN","IBCEF22",35,0)
 ;
"RTN","IBCEF22",36,0)
 ; Loop through lines of claim beneath ^DGCR(399,IBIFN,"CP") and build
"RTN","IBCEF22",37,0)
 ; the array IBP to be used below.
"RTN","IBCEF22",38,0)
 ;    IBP(Procedure ^ Modifiers, Print Order, Line#) = Procedure Date
"RTN","IBCEF22",39,0)
 ;
"RTN","IBCEF22",40,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"CP",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ D
"RTN","IBCEF22",41,0)
 . S IBP(+$P(IBZ,U)_U_$$GETMOD^IBEFUNC(IBIFN,IBDA,1),$S($P(IBZ,U,4):$P(IBZ,U,4),1:999),IBDA)=$P(IBZ,U,2)
"RTN","IBCEF22",42,0)
 ;
"RTN","IBCEF22",43,0)
 ; Loop through the revenue codes beneath ^DGCR(399,IBIFN,"RC") and
"RTN","IBCEF22",44,0)
 ; build the array IBX to be used below.
"RTN","IBCEF22",45,0)
 ;    IBX(" "_Revenue Code, Print Order, Revenue Line#) =
"RTN","IBCEF22",46,0)
 ;          ^DGCR(399.2, Revenue Code IEN, 0)
"RTN","IBCEF22",47,0)
 ;    IBX(" "_Revenue Code, Print Order, Revenue Line#, "DT") = Procedure Date
"RTN","IBCEF22",48,0)
 ;    IBX(" "_Revenue Code, Print Order, Revenue Line#, "MOD") = Modifiers
"RTN","IBCEF22",49,0)
 ;
"RTN","IBCEF22",50,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ S IBMOD="" D
"RTN","IBCEF22",51,0)
 . S IBX=$G(^DGCR(399.2,+IBZ,0)),IBX1="",IBPO=0
"RTN","IBCEF22",52,0)
 . ; Auto-added procedure charge
"RTN","IBCEF22",53,0)
 . I $P(IBZ,U,10)=4,$P(IBZ,U,11) D  ; Soft link to proc
"RTN","IBCEF22",54,0)
 .. S Z=$G(^DGCR(399,IBIFN,"CP",$P(IBZ,U,11),0))
"RTN","IBCEF22",55,0)
 .. Q:Z=""
"RTN","IBCEF22",56,0)
 .. S ZX=+Z_U_$$GETMOD^IBEFUNC(IBIFN,$P(IBZ,U,11),1)
"RTN","IBCEF22",57,0)
 .. Q:'$O(IBP(ZX,0))&'$O(IBP1(ZX,0))
"RTN","IBCEF22",58,0)
 .. I $P(IBZ,U,6) Q:$S($P(Z,U)'["ICPT":1,1:+$P(Z,U)'=$P(IBZ,U,6))
"RTN","IBCEF22",59,0)
 .. S Z0=$S($D(IBP(ZX)):$O(IBP(ZX,0)),1:$O(IBP1(ZX,0)))
"RTN","IBCEF22",60,0)
 .. S:'Z0 Z0=999
"RTN","IBCEF22",61,0)
 .. Q:'$D(IBP(ZX,+Z0,$P(IBZ,U,11)))&'$D(IBP1(ZX,+Z0,$P(IBZ,U,11)))
"RTN","IBCEF22",62,0)
 .. I '$D(IBP1(ZX,+Z0,$P(IBZ,U,11))) S IBP1(ZX,+Z0,$P(IBZ,U,11))=IBP(ZX,+Z0,$P(IBZ,U,11)) K IBP(ZX,+Z0,$P(IBZ,U,11))
"RTN","IBCEF22",63,0)
 .. S IBX1=$P(Z,U,2),IBPO=+Z0,IBMOD=$P(ZX,U,2)
"RTN","IBCEF22",64,0)
 . ; Manually added charge with a procedure
"RTN","IBCEF22",65,0)
 . I $P(IBZ,U,6),$S($P(IBZ,U,10)=4:'$P(IBZ,U,11),1:1),+$O(IBP($P(IBZ,U,6)))=$P(IBZ,U,6) D
"RTN","IBCEF22",66,0)
 .. ; No direct link, but a proc exists on rev code and in procedure mult without and then with modifiers
"RTN","IBCEF22",67,0)
 .. S ZX=$O(IBP($P(IBZ,U,6)))
"RTN","IBCEF22",68,0)
 .. F QQ=1,2 Q:IBPO  S Z="" F  S Z=$O(IBP(ZX,Z),-1) Q:'Z!(IBPO)  S Z0=0 F  S Z0=$O(IBP(ZX,Z,Z0)) Q:'Z0  S Z1=$G(^DGCR(399,IBIFN,"CP",Z0,0)) D  Q:IBPO
"RTN","IBCEF22",69,0)
 ... ; Ignore if not a CPT or a modifier exists and this is first pass
"RTN","IBCEF22",70,0)
 ... S IBMOD=$$GETMOD^IBEFUNC(IBIFN,Z0,1)
"RTN","IBCEF22",71,0)
 ... Q:$S($P(Z1,U)'["ICPT":1,QQ=1:IBMOD'="",1:0)
"RTN","IBCEF22",72,0)
 ... S IBPO=+$P(Z1,U,4),IBX1=$P(Z1,U,2)
"RTN","IBCEF22",73,0)
 ... K IBP(+Z1_U_IBMOD,Z,Z0)
"RTN","IBCEF22",74,0)
 . ;
"RTN","IBCEF22",75,0)
 . I IBX'="" D  ; revenue code is valid
"RTN","IBCEF22",76,0)
 .. S LST=$S(LST="":900,1:LST+1)
"RTN","IBCEF22",77,0)
 .. F Z=LST:1 S Z0=$S(IBPO:IBPO,$D(IBX(" "_$P(IBX,U),Z)):0,1:Z) I Z0 S (LST,IBPO)=Z0 Q
"RTN","IBCEF22",78,0)
 .. S IBX(" "_$P(IBX,U),IBPO,IBDA)=IBX,IBX(" "_$P(IBX,U),IBPO,IBDA,"DT")=$S(IBX1:IBX1,1:IBDEF),IBX(" "_$P(IBX,U),IBPO,IBDA,"MOD")=IBMOD
"RTN","IBCEF22",79,0)
 ;
"RTN","IBCEF22",80,0)
 ; Loop through revenue codes in IBX and build the array IBX1.
"RTN","IBCEF22",81,0)
 ;
"RTN","IBCEF22",82,0)
 S IBS="" F  S IBS=$O(IBX(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX(IBS,IBPO)) Q:'IBPO  D
"RTN","IBCEF22",83,0)
 . S IBDA=0 F  S IBDA=$O(IBX(IBS,IBPO,IBDA)) Q:'IBDA  S IBX=$G(IBX(IBS,IBPO,IBDA)),IBZ=$G(^DGCR(399,IBIFN,"RC",IBDA,0)) I IBX'="" D
"RTN","IBCEF22",84,0)
 .. ;S IBXS=$P(IBZ,U,2)_U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD"))
"RTN","IBCEF22",85,0)
 .. S IBXS=U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD")) ;combine same proc and modifiers regardless of rate
"RTN","IBCEF22",86,0)
 .. S:IBPO'<900&'$$ACCRV($P(IBS," ",2))&$S(IBINPAT:$P(IBZ,U,6),1:1) IBCOMB(IBS,IBXS,IBPO)=IBDA
"RTN","IBCEF22",87,0)
 .. S:'$D(IBX1(IBS,IBPO,IBXS,1)) IBX1(IBS,IBPO,IBXS,1)=IBX,IBX1(IBS,IBPO,IBXS,2)=IBZ
"RTN","IBCEF22",88,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U)=$P($G(IBX1(IBS,IBPO,IBXS)),U)+$P(IBZ,U,3)
"RTN","IBCEF22",89,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U,2)=$P($G(IBX1(IBS,IBPO,IBXS)),U,2)+$P(IBZ,U,4)
"RTN","IBCEF22",90,0)
 .. S IBX1(IBS,IBPO,IBXS,"DT")=$G(IBX(IBS,IBPO,IBDA,"DT")),IBX1(IBS,IBPO,IBXS,"IEN")=$G(IBX1(IBS,IBPO,IBXS,"IEN"))_$S($G(IBX1(IBS,IBPO,IBXS,"IEN")):";",1:"")_IBDA
"RTN","IBCEF22",91,0)
 ;
"RTN","IBCEF22",92,0)
 S IBS="" F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=899 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  D  ; Check to combine like rev codes without print order
"RTN","IBCEF22",93,0)
 . N Q,Q0,Q1,Z,Z0,Z1,Z2,IBZ1,IBZ2
"RTN","IBCEF22",94,0)
 . S Z=""
"RTN","IBCEF22",95,0)
 . N IBACC
"RTN","IBCEF22",96,0)
 . F  S Z=$O(IBX1(IBS,IBPO,Z)) Q:Z=""  S Q=IBPO F  S Q=$O(IBCOMB(IBS,Z,Q)) Q:'Q  I Q'=IBPO S IBZ1=$G(IBX1(IBS,IBPO,Z,1)),IBZ2=$G(IBX1(IBS,IBPO,Z,2)) D
"RTN","IBCEF22",97,0)
 .. Q:$G(IBX1(IBS,IBPO,Z,1))'=$G(IBX1(IBS,Q,Z,1))
"RTN","IBCEF22",98,0)
 .. S Q1=1,IBACC=$$ACCRV(+$P(IBS," ",2))
"RTN","IBCEF22",99,0)
 .. F Q0=1,5:1:7,10:1:13,15 D  Q:'Q1
"RTN","IBCEF22",100,0)
 ... I IBACC Q:Q0=5!(Q0>6)
"RTN","IBCEF22",101,0)
 ... I (Q0=11!(Q0=15))&($P($G(IBX1(IBS,Q,Z,2)),U,10)=3) Q
"RTN","IBCEF22",102,0)
 ... I Q0=5,'IBINPAT Q
"RTN","IBCEF22",103,0)
 ... I $P($G(IBX1(IBS,IBPO,Z,2)),U,Q0)'=$P($G(IBX1(IBS,Q,Z,2)),U,Q0) S Q1=0
"RTN","IBCEF22",104,0)
 .. Q:'Q1
"RTN","IBCEF22",105,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,3)=$P(IBX1(IBS,IBPO,Z,2),U,3)+$P(IBX1(IBS,Q,Z,2),U,3)
"RTN","IBCEF22",106,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,4)=$P(IBX1(IBS,IBPO,Z,2),U,4)+$P(IBX1(IBS,Q,Z,2),U,4)
"RTN","IBCEF22",107,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,9)=$P(IBX1(IBS,IBPO,Z,2),U,9)+$P(IBX1(IBS,Q,Z,2),U,9)
"RTN","IBCEF22",108,0)
 .. S IBX1(IBS,IBPO,Z)=$P(IBX1(IBS,IBPO,Z,2),U,3)_U_$P(IBX1(IBS,IBPO,Z,2),U,4)
"RTN","IBCEF22",109,0)
 .. S IBX1(IBS,IBPO,Z,"IEN")=IBX1(IBS,IBPO,Z,"IEN")_";"_IBX1(IBS,Q,Z,"IEN")
"RTN","IBCEF22",110,0)
 .. K IBX1(IBS,Q,Z)
"RTN","IBCEF22",111,0)
 ;
"RTN","IBCEF22",112,0)
 D SPLIT  ; 488 ; baa
"RTN","IBCEF22",113,0)
 ;
"RTN","IBCEF22",114,0)
 ; Loop through IBX1 and build the array IBXDATA. Everything in the
"RTN","IBCEF22",115,0)
 ; array IBXDATA comes from the array IBX1.
"RTN","IBCEF22",116,0)
 ;
"RTN","IBCEF22",117,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",118,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  S IBSS="" F  S IBSS=$O(IBX1(IBS,IBPO,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",119,0)
 . S IBX=$G(IBX1(IBS,IBPO,IBSS,1)),IBZ=$G(IBX1(IBS,IBPO,IBSS,2))
"RTN","IBCEF22",120,0)
 . S IBLN=$G(IBLN)+1,IBXDATA(IBLN)=$P(IBX,U)_U_$P(IBZ,U,6)_U_$P(IBZ,U,2)_U_+IBX1(IBS,IBPO,IBSS)_U_+$P(IBX1(IBS,IBPO,IBSS),U,2),$P(IBXDATA(IBLN),U,10)=$G(IBX1(IBS,IBPO,IBSS,"DT"))
"RTN","IBCEF22",121,0)
 . S $P(IBXDATA(IBLN),U,6)=$P(IBZ,U,9),$P(IBXDATA(IBLN),U,7)=$P(IBZ,U,13),$P(IBXDATA(IBLN),U,8)=$G(IBX1(IBS,IBPO,IBSS,"IEN")),$P(IBXDATA(IBLN),U,9)=$P($P(IBSS,U,3),",",1,2)
"RTN","IBCEF22",122,0)
 . S IBXDATA(IBLN,"CPLNK")=$$RC2CP(IBIFN,$P($P(IBXDATA(IBLN),U,8),";"))
"RTN","IBCEF22",123,0)
 . ;
"RTN","IBCEF22",124,0)
 . ; MRD;IB*2.0*516 - Added NDC and Units to line level of claim.
"RTN","IBCEF22",125,0)
 . ;I IBXDATA(IBLN,"CPLNK") S $P(IBXDATA(IBLN),U,11,12)=$TR($P($G(^DGCR(399,IBIFN,"CP",IBXDATA(IBLN,"CPLNK"),1)),U,7,8),"-")
"RTN","IBCEF22",126,0)
 . ; VAD;IB*2.0*577 - Added Unit/Basis of Measurement to line level of claim.
"RTN","IBCEF22",127,0)
 . I IBXDATA(IBLN,"CPLNK") D
"RTN","IBCEF22",128,0)
 . . S $P(IBXDATA(IBLN),U,11,13)=$TR($P($G(^DGCR(399,IBIFN,"CP",IBXDATA(IBLN,"CPLNK"),1)),U,7,8),"-")_U_$P($G(^DGCR(399,IBIFN,"CP",IBXDATA(IBLN,"CPLNK"),2)),U)
"RTN","IBCEF22",129,0)
 . . I +$P(IBXDATA(IBLN),U,12) S $P(IBXDATA(IBLN),U,12)=$S($P(IBXDATA(IBLN),U,12)#1:+$J($P(IBXDATA(IBLN),U,12),0,3),1:$P(IBXDATA(IBLN),U,12))
"RTN","IBCEF22",130,0)
 . ;
"RTN","IBCEF22",131,0)
 . ; Extract line lev COB data for sec or tert bill
"RTN","IBCEF22",132,0)
 . I $$COBN^IBCEF(IBIFN)>1 D COBLINE^IBCEU6(IBIFN,IBLN,.IBXDATA,,.IBXTRA) I $D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,1) ;Handle bundled/unbundled
"RTN","IBCEF22",133,0)
 ;
"RTN","IBCEF22",134,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN))!$D(^IBA(362.5,"AIFN"_IBIFN)) D
"RTN","IBCEF22",135,0)
 . N IBARRAY,IBX,IBZ,IBRX,IBLCNT
"RTN","IBCEF22",136,0)
 . S IBLCNT=0
"RTN","IBCEF22",137,0)
 . ; Print prescriptions, prosthetics on front of UB-04
"RTN","IBCEF22",138,0)
 . D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBCEF22",139,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",140,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",141,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=""
"RTN","IBCEF22",142,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)="PRESCRIPTION REFILLS:",IBLCNT=2
"RTN","IBCEF22",143,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBRX=IBARRAY(IBX,IBY) D
"RTN","IBCEF22",144,0)
 ... D ZERO^IBRXUTL(+$P(IBRX,U,2))
"RTN","IBCEF22",145,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBRX,U,6):"$"_$FN($P(IBRX,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$G(^TMP($J,"IBDRUG",+$P(IBRX,U,2),.01))
"RTN","IBCEF22",146,0)
 ... S IBZ=$S(+$P(IBRX,U,4):"QTY: "_$P(IBRX,U,4)_" ",1:"")_$S(+$P(IBRX,U,3):"for "_$P(IBRX,U,3)_" days supply ",1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",147,0)
 ... S IBZ=$S($P(IBRX,U,5)'="":"NDC #: "_$P(IBRX,U,5),1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",148,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCEF22",149,0)
 ... Q
"RTN","IBCEF22",150,0)
 . ;
"RTN","IBCEF22",151,0)
 . D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF22",152,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",153,0)
 .. S IBLCNT=0
"RTN","IBCEF22",154,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",155,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=""
"RTN","IBCEF22",156,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)="PROSTHETIC REFILLS:",IBLCNT=2
"RTN","IBCEF22",157,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCEF22",158,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($$PINB^IBCSC5B(+IBARRAY(IBX,IBY)),1,54)
"RTN","IBCEF22",159,0)
 Q
"RTN","IBCEF22",160,0)
 ;
"RTN","IBCEF22",161,0)
ACCRV(X) ; Returns 1 if X is an accomodation RC, 0 if not
"RTN","IBCEF22",162,0)
 Q ((X'<100&(X'>219))!(X=224))
"RTN","IBCEF22",163,0)
 ;
"RTN","IBCEF22",164,0)
RC2CP(IBIFN,IBRCIEN) ; returns "CP" multiple pointer that corresponds to a given "RC" multiple pointer in file 399
"RTN","IBCEF22",165,0)
 ; IBIFN - ien in file 399, top level
"RTN","IBCEF22",166,0)
 ; IBRCIEN, ien in sub-file 399.042 (REVENUE CODE)
"RTN","IBCEF22",167,0)
 ;
"RTN","IBCEF22",168,0)
 ; returns pointer to sub-file 399.0304 (PROCEDURES) or 0 if no valid pointer can be found.
"RTN","IBCEF22",169,0)
 ;
"RTN","IBCEF22",170,0)
 N IBRC0,IBCPIEN
"RTN","IBCEF22",171,0)
 I +IBIFN'>0 Q 0
"RTN","IBCEF22",172,0)
 I +IBRCIEN'>0 Q 0
"RTN","IBCEF22",173,0)
 S IBRC0=$G(^DGCR(399,IBIFN,"RC",IBRCIEN,0)),IBCPIEN=0
"RTN","IBCEF22",174,0)
 I $P(IBRC0,U,10)=4 S IBCPIEN=+$P(IBRC0,U,11) ; type = CPT
"RTN","IBCEF22",175,0)
 I $P(IBRC0,U,10)=3 S IBCPIEN=+$P(IBRC0,U,15) ; type = RX
"RTN","IBCEF22",176,0)
 I 'IBCPIEN D
"RTN","IBCEF22",177,0)
 . S IBRC=$P(IBRC0,U,6)
"RTN","IBCEF22",178,0)
 . N IBCPTIEN S IBCPTIEN=IBRC
"RTN","IBCEF22",179,0)
 . F  S IBCPTIEN=$O(^DGCR(399,IBIFN,"CP","B",IBCPTIEN)) Q:(+IBCPTIEN'=IBRC)!IBCPIEN  D
"RTN","IBCEF22",180,0)
 .. N OK,Z S OK="",Z=""
"RTN","IBCEF22",181,0)
 .. S Z=$O(^DGCR(399,IBIFN,"CP","B",IBCPTIEN,Z)) Q:'Z!OK  D
"RTN","IBCEF22",182,0)
 ... N CNTR S CNTR=0
"RTN","IBCEF22",183,0)
 ... F  S CNTR=$O(IBXDATA(CNTR)) Q:'CNTR!'OK  D
"RTN","IBCEF22",184,0)
 .... I $G(IBXDATA(CNTR,"CPLNK"))=Z S OK=0 Q
"RTN","IBCEF22",185,0)
 ... I OK="" S OK=1,IBCPIEN=Z
"RTN","IBCEF22",186,0)
 I IBCPIEN,'$D(^DGCR(399,IBIFN,"CP",IBCPIEN)) S IBCPIEN=0
"RTN","IBCEF22",187,0)
 Q IBCPIEN
"RTN","IBCEF22",188,0)
 ;
"RTN","IBCEF22",189,0)
SPLIT    ; Split codes into multiple lines as needed => baa ; 488
"RTN","IBCEF22",190,0)
 ; The max line $ amount for a printed claim is less than the max line $ amount for an electronically transmitted claim.
"RTN","IBCEF22",191,0)
 ; However, since the clearinghouse can drop to print for a myriad of reasons at any time, the lines may need to be split
"RTN","IBCEF22",192,0)
 ; so they can all fit on a printed claim line just in case. In addition, since some claims are sent to primary payers as 
"RTN","IBCEF22",193,0)
 ; electronic claims but printed for secondary claims, the lines numbers need to be the same going out to ensure the 
"RTN","IBCEF22",194,0)
 ; COB data is correct applied (previous payments adj, etc are applied to the correct line.)
"RTN","IBCEF22",195,0)
 N IBS,IBSS,DATA,CHRG,UNTS,TOT,LNS,MOD,CPT,LNK,RLNK,IBSS1,LTOT,LUNT,REC,LST,FST
"RTN","IBCEF22",196,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",197,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  D
"RTN","IBCEF22",198,0)
 . S LST=$O(IBX1(IBS,""),-1)  ;we have to go through each level so must reset for each
"RTN","IBCEF22",199,0)
 . S LNK=0
"RTN","IBCEF22",200,0)
 . F  S LNK=$O(IBX1(IBS,LNK)) Q:('LNK!(LNK>LST))  S IBSS="" F  S IBSS=$O(IBX1(IBS,LNK,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",201,0)
 .. S DATA=IBX1(IBS,LNK,IBSS,2)
"RTN","IBCEF22",202,0)
 .. S CHRG=$P(DATA,U,2)
"RTN","IBCEF22",203,0)
 .. S UNTS=$P(DATA,U,3)
"RTN","IBCEF22",204,0)
 .. I UNTS=1 Q  ; if only one unit can't split
"RTN","IBCEF22",205,0)
 .. S TOT=UNTS*CHRG
"RTN","IBCEF22",206,0)
 .. I TOT<=9999999.99 Q  ; if the total is less tham max we don't need to split
"RTN","IBCEF22",207,0)
 .. S LNS=TOT\9999999.99
"RTN","IBCEF22",208,0)
 .. S MOD=TOT#9999999.99
"RTN","IBCEF22",209,0)
 .. I MOD S LNS=LNS+1
"RTN","IBCEF22",210,0)
 .. I CHRG>4999999.995 S LNS=UNTS  ; if the charge is greater than half the mas can't put more than one on a line.
"RTN","IBCEF22",211,0)
 .. S LUNT=UNTS\LNS
"RTN","IBCEF22",212,0)
 .. S MOD=UNTS#LNS
"RTN","IBCEF22",213,0)
 .. I MOD S LUNT=LUNT+1
"RTN","IBCEF22",214,0)
 .. F L=1:1:LNS D
"RTN","IBCEF22",215,0)
 ... N Q
"RTN","IBCEF22",216,0)
 ... S Q=$O(IBX1(IBS,""),-1)+1
"RTN","IBCEF22",217,0)
 ... I L=1 S Q=LNK
"RTN","IBCEF22",218,0)
 ... M IBX1(IBS,Q,IBSS)=IBX1(IBS,LNK,IBSS)
"RTN","IBCEF22",219,0)
 ... S $P(IBX1(IBS,Q,IBSS,2),U,3)=LUNT,$P(IBX1(IBS,Q,IBSS,2),U,4)=LUNT*CHRG
"RTN","IBCEF22",220,0)
 ... S $P(IBX1(IBS,Q,IBSS),U,1)=LUNT,$P(IBX1(IBS,Q,IBSS),U,2)=LUNT*CHRG
"RTN","IBCEF22",221,0)
 ... I L>1 S $P(IBX1(IBS,Q,IBSS,2),U,9)=""
"RTN","IBCEF22",222,0)
 ... S UNTS=UNTS-LUNT,LUNT=$S(UNTS>LUNT:LUNT,1:UNTS)
"RTN","IBCEF22",223,0)
 Q
"RTN","IBCEF22",224,0)
 ;
"RTN","IBCEF22",225,0)
 ; /Begin IB*2.0*608 - US9 - vd
"RTN","IBCEF22",226,0)
VC80I(LN)  ; Extracts the data for the "INS" record for VALUE CODE 80 Line item.
"RTN","IBCEF22",227,0)
 ; INPUT:      LN = Line counter
"RTN","IBCEF22",228,0)
 ;
"RTN","IBCEF22",229,0)
 N VC80REC,IBLOOP,IBDOS
"RTN","IBCEF22",230,0)
 S (VC80REC,IBLOOP)=""
"RTN","IBCEF22",231,0)
 F  S IBLOOP=$O(IBXSV("VC80",IBLOOP)) Q:IBLOOP=""  Q:$P(IBXSV("VC80",IBLOOP),U)=80
"RTN","IBCEF22",232,0)
 I IBLOOP]"" S VC80REC=IBXSV("VC80",IBLOOP)
"RTN","IBCEF22",233,0)
 ;
"RTN","IBCEF22",234,0)
 N UNIT,VC80LN
"RTN","IBCEF22",235,0)
 S UNIT=$P(VC80REC,U,2)    ; Service Unit Count
"RTN","IBCEF22",236,0)
 S VC80LN=LN+1             ; Get the next available line number.
"RTN","IBCEF22",237,0)
 ;
"RTN","IBCEF22",238,0)
 S $P(IBXSAVE("INPT",VC80LN),U,1)="0022"
"RTN","IBCEF22",239,0)
 ;JWS;US8323;IB*2.0*623;change Rate Code value from AAA000 to ZZZZZ on or after 10/1/2019
"RTN","IBCEF22",240,0)
 S IBDOS=$P($$GET1^DIQ(399,IBXIEN_",",.03,"I"),".")
"RTN","IBCEF22",241,0)
 S $P(IBXSAVE("INPT",VC80LN),U,2)=$S(IBDOS<3191001:"AAA00",1:"ZZZZZ")
"RTN","IBCEF22",242,0)
 S $P(IBXSAVE("INPT",VC80LN),U,4)=$S(+IBLOOP:UNIT,1:0)
"RTN","IBCEF22",243,0)
 S $P(IBXSAVE("INPT",VC80LN),U,9)=0
"RTN","IBCEF22",244,0)
 S $P(IBXSAVE("INPT",VC80LN),U,13)=$S(+IBLOOP:"DA",1:"UN")
"RTN","IBCEF22",245,0)
 Q
"RTN","IBCEF22",246,0)
 ; /End IB*2.0*608
"RTN","IBCEF22",247,0)
 ;
"RTN","IBCEF72")
0^56^B64748547^B59075267
"RTN","IBCEF72",1,0)
IBCEF72 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;8/6/03 10:56am
"RTN","IBCEF72",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320,349,432,516,592,623**;21-MAR-94;Build 70
"RTN","IBCEF72",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF72",4,0)
 ;
"RTN","IBCEF72",5,0)
 ;
"RTN","IBCEF72",6,0)
 ;Input:
"RTN","IBCEF72",7,0)
 ;IBINSCO - ptr to #36
"RTN","IBCEF72",8,0)
 ;IBFRMTYP 0=unknwn/both,1=UB,2=1500,7=J430D
"RTN","IBCEF72",9,0)
 ;IBCARE - 0=unknwn or both inp/outp,1=inpatient, 2=outpatient, 3 -RX
"RTN","IBCEF72",10,0)
 ;Output: X12 IDtype^ID^ID TYPE ptr to file 355.97
"RTN","IBCEF72",11,0)
CH35591(IBINSCO,IBFRMTYP,IBCARE) ;
"RTN","IBCEF72",12,0)
 N IB35591,IBRET,IB1
"RTN","IBCEF72",13,0)
 S IB35591=0,IBRET=""
"RTN","IBCEF72",14,0)
 F  S IB35591=$O(^IBA(355.91,"B",IBINSCO,IB35591)) Q:+IB35591=0  Q:IBRET'=""  D
"RTN","IBCEF72",15,0)
 . S IB1=$G(^IBA(355.91,IB35591,0))
"RTN","IBCEF72",16,0)
 . I '($P(IB1,"^",4)=0!(IBFRMTYP=0)) Q:$P(IB1,"^",4)'=IBFRMTYP  ;if wrong form type
"RTN","IBCEF72",17,0)
 . I ($P(IB1,"^",5)=3)!(IBCARE=3) Q:IBCARE'=$P(IB1,"^",5)  ;if not RX
"RTN","IBCEF72",18,0)
 . ;JWS;IB*2.0*592 - if dental, no secondary id's
"RTN","IBCEF72",19,0)
 . I IBFRMTYP=7 Q
"RTN","IBCEF72",20,0)
 . I ($P(IB1,"^",5)=1)!($P(IB1,"^",5)=2) I (IBCARE=1)!(IBCARE=2) Q:$P(IB1,"^",5)'=IBCARE  ;if wrong care type
"RTN","IBCEF72",21,0)
 . S IBRET=$P($G(^IBE(355.97,+$P(IB1,"^",6),0)),"^",3)_"^"_$P(IB1,"^",7)_U_+$P(IB1,U,6)
"RTN","IBCEF72",22,0)
 Q IBRET
"RTN","IBCEF72",23,0)
 ;
"RTN","IBCEF72",24,0)
FINDEIN(IBXIEN,IBPROV,IBFAC,IBS) ; find EIN for facility/ SSN for person
"RTN","IBCEF72",25,0)
 ; IBXIEN = ien of bill entry file 399
"RTN","IBCEF72",26,0)
 ; IBFAC = 1 if facility, 0 if individual provider
"RTN","IBCEF72",27,0)
 ; IBPROV = ien of provider (vp format)
"RTN","IBCEF72",28,0)
 ; IBS = 1 if person's EIN should be returned if there, otherwise SSN
"RTN","IBCEF72",29,0)
 ; FUNCTION RETURNS 
"RTN","IBCEF72",30,0)
 ;    EIN or SSN ^ 24 for EIN, 34 for SSN or null if none found
"RTN","IBCEF72",31,0)
 N Z,Z0,IBARR,IBEIN,IBSSN
"RTN","IBCEF72",32,0)
 S (IBEIN,IBSSN)=""
"RTN","IBCEF72",33,0)
 D ALLID^IBCEP8(IBPROV,"",.IBARR)
"RTN","IBCEF72",34,0)
 S Z=0 F  S Z=$O(IBARR(Z)) Q:'Z  D  Q:IBEIN'=""
"RTN","IBCEF72",35,0)
 . I $G(IBFAC) Q:$P(IBARR(Z),U,7)'="EI"  S IBEIN=$P(IBARR(Z),U,2)_U_24 Q
"RTN","IBCEF72",36,0)
 . I $P(IBARR(Z),U,7)="SY" D  Q
"RTN","IBCEF72",37,0)
 .. I $G(IBS) S IBSSN=$P(IBARR(Z),U,2)_U_34 Q
"RTN","IBCEF72",38,0)
 . S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",39,0)
 . I $G(IBS),$P(IBARR(Z),U,7)="EI" S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",40,0)
 I $G(IBS),IBEIN="" S IBEIN=IBSSN
"RTN","IBCEF72",41,0)
 Q IBEIN
"RTN","IBCEF72",42,0)
 ;
"RTN","IBCEF72",43,0)
 ;
"RTN","IBCEF72",44,0)
NONVAID(IBXIEN,IBX,IBFAC,IBS) ; Find the non-VA provider default id
"RTN","IBCEF72",45,0)
 ; IBXIEN = the ien of the bill (file 399)
"RTN","IBCEF72",46,0)
 ; IBX = id data returned if passed by reference
"RTN","IBCEF72",47,0)
 ; IBFAC = 1 if getting the id for the facility or 0 for rendering prov
"RTN","IBCEF72",48,0)
 ; IBS = 1 if getting id for person, but need the EIN if there
"RTN","IBCEF72",49,0)
 ; Function returns the id^type of id^person/facility flag:
"RTN","IBCEF72",50,0)
 ;   Type of id: 1 = SSN    2 = EIN   0 = not found
"RTN","IBCEF72",51,0)
 ;   person/facility: 1 = person   2 = facility
"RTN","IBCEF72",52,0)
 N Z,IBXSAVE,IBU2,IBTYPE,IBZ,IBF,IBPROV,Q,Q0
"RTN","IBCEF72",53,0)
 S IBTYPE=2,IBU2=$G(^DGCR(399,IBXIEN,"U2")),IBF=2,IBPROV=""
"RTN","IBCEF72",54,0)
 ;
"RTN","IBCEF72",55,0)
 S Z=$P(IBU2,U,10)
"RTN","IBCEF72",56,0)
 I 'Z S IBX="",IBTYPE=0 G NONVAQ ; Not a non-VA facility
"RTN","IBCEF72",57,0)
 S IBPROV=Z_";IBA(355.93,"
"RTN","IBCEF72",58,0)
 ;
"RTN","IBCEF72",59,0)
 ; Get EIN
"RTN","IBCEF72",60,0)
 I $G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",61,0)
 . S IBX=$P($$FINDEIN(IBXIEN,IBPROV,IBFAC),U),IBTYPE=2
"RTN","IBCEF72",62,0)
 ;
"RTN","IBCEF72",63,0)
 ; Get EIN/SSN
"RTN","IBCEF72",64,0)
 I '$G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",65,0)
 . S IBX="",IBF=1
"RTN","IBCEF72",66,0)
 . S Q0=($$FT^IBCEF(IBXIEN)=3)+3 ; 3 for rendering/4 for attending
"RTN","IBCEF72",67,0)
 . S Q=+$O(^DGCR(399,IBXIEN,"PRV","B",Q0,0))
"RTN","IBCEF72",68,0)
 . S IBPROV=$P($G(^DGCR(399,IBXIEN,"PRV",Q,0)),U,2)
"RTN","IBCEF72",69,0)
 . I IBPROV S IBX=$$FINDEIN(IBXIEN,IBPROV,IBFAC,$G(IBS)),IBTYPE=$S($P(IBX,U,2)=24:2,$P(IBX,U,2)=34:1,1:0),IBX=$P(IBX,U)
"RTN","IBCEF72",70,0)
 ;
"RTN","IBCEF72",71,0)
NONVAQ I IBTYPE,IBX="",$P(IBU2,U,12)'="" S IBX=$P(IBU2,U,12) ; pull from 399
"RTN","IBCEF72",72,0)
 S IBX=$G(IBX)
"RTN","IBCEF72",73,0)
 Q IBX_U_IBTYPE_U_IBF
"RTN","IBCEF72",74,0)
 ;----
"RTN","IBCEF72",75,0)
 ;checks if there is data for OP* segments and 
"RTN","IBCEF72",76,0)
 ;then populates PROV COB SEQ
"RTN","IBCEF72",77,0)
 ;Input:
"RTN","IBCEF72",78,0)
 ;IBXIEN - ien in #399
"RTN","IBCEF72",79,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF72",80,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF72",81,0)
 ;IBFUNC - FUNCTION from #399 (1-refering, 2 -operating, etc)
"RTN","IBCEF72",82,0)
 ;IBSEGM - segment record ID, optional
"RTN","IBCEF72",83,0)
 ;Output:
"RTN","IBCEF72",84,0)
 ; IBDATA with formatted output
"RTN","IBCEF72",85,0)
PROVSEQ(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBSEGM) ;
"RTN","IBCEF72",86,0)
 N IB1,IBINS,IBFL
"RTN","IBCEF72",87,0)
 ;S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF72",88,0)
 F IB1=1,2 D
"RTN","IBCEF72",89,0)
 . I '$$ISINSUR^IBCEF71($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN) Q  ;don't create anything if there is no such insurance
"RTN","IBCEF72",90,0)
 . ;*432/TAZ - Removed. Attending and Rendering can be on same bill now.
"RTN","IBCEF72",91,0)
 . ;I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4)
"RTN","IBCEF72",92,0)
 . I '$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) Q
"RTN","IBCEF72",93,0)
 . S IBDATA(IB1)=$G(IBSAVE("PROVINF",IBXIEN,"O",IB1))
"RTN","IBCEF72",94,0)
 . I $G(IBSEGM)'="" D ID^IBCEF2(IB1,IBSEGM)
"RTN","IBCEF72",95,0)
 Q
"RTN","IBCEF72",96,0)
 ;
"RTN","IBCEF72",97,0)
OUTPRVID(IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",98,0)
 ; into IBXSAVE array
"RTN","IBCEF72",99,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",100,0)
 N Z,IBXDATA,IBPERSON,TAG
"RTN","IBCEF72",101,0)
 ;WCJ;11/1/2005 Extract the first 3 chars of Z instead.
"RTN","IBCEF72",102,0)
 S Z=$E($$PSPRV^IBCEF7(IBXIEN),1,3),IBPERSON=""
"RTN","IBCEF72",103,0)
 ;EJK 8/23/05 IB*320 - CHANGED Z=101 TO Z=1010. Z WILL ALWAYS BE A 4 DIGIT #. 
"RTN","IBCEF72",104,0)
 ; WCJ 11/1/2005 ; Removed EJK's change and added above change
"RTN","IBCEF72",105,0)
 I Z=111!(Z=101) S TAG=$S(Z=101:"OUTSIDE FAC PROVIDER INF",1:"CUR/OTH PROVIDER INFO") D F^IBCEF("N-ALL "_TAG) S IBPERSON=$S('$E(Z,2):2,1:1)
"RTN","IBCEF72",106,0)
 Q IBPERSON
"RTN","IBCEF72",107,0)
 ;
"RTN","IBCEF72",108,0)
OUTPRV(IBREC,IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",109,0)
 ; into IBXSAVE array
"RTN","IBCEF72",110,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",111,0)
 ; IBREC = the record whose ids should be returned
"RTN","IBCEF72",112,0)
 N IBPERSON,IBFRM,IBTYPE,IBFAC
"RTN","IBCEF72",113,0)
 I IBREC="SUB1"!(IBREC="OP6") D
"RTN","IBCEF72",114,0)
 . K IBXSAVE("PROVINF",IBXIEN),IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",115,0)
 . S IBPERSON=$$OUTPRVID(IBXIEN,.IBXSAVE),IBFAC=$S(IBPERSON=1:0,1:1)
"RTN","IBCEF72",116,0)
 E  D
"RTN","IBCEF72",117,0)
 . K IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",118,0)
 . D F^IBCEF("N-ALL OUTSIDE FAC PROVIDER INF")
"RTN","IBCEF72",119,0)
 . S IBPERSON=2,IBFAC=1
"RTN","IBCEF72",120,0)
 S IBFRM=$$FT^IBCEF(IBXIEN),IBFRM=$S(IBFRM=2:2,1:1)
"RTN","IBCEF72",121,0)
 S IBTYPE=$S(IBREC["SUB":"C",1:"O")
"RTN","IBCEF72",122,0)
 D CHCKSUB^IBCEF73(IBFRM,IBREC,IBFAC,IBTYPE,.IBXSAVE)
"RTN","IBCEF72",123,0)
 Q IBPERSON
"RTN","IBCEF72",124,0)
 ;
"RTN","IBCEF72",125,0)
 ;get IENs in file #36 for other insurances
"RTN","IBCEF72",126,0)
OTHINS(IB399,IBRES) ;
"RTN","IBCEF72",127,0)
 N IBFRMTYP,Z,Z1,Z2,Z4
"RTN","IBCEF72",128,0)
 S Z=$$COBN^IBCEF(IB399),Z0=0
"RTN","IBCEF72",129,0)
 F Z1=1:1:3 I Z1'=Z,$D(^DGCR(399,IB399,"I"_Z1)) D
"RTN","IBCEF72",130,0)
 . S Z0=Z0+1
"RTN","IBCEF72",131,0)
 . ; MRD;IB*2.0*516 - Added HPID as second piece.
"RTN","IBCEF72",132,0)
 . ; vd - IB*2.0*623 - Added M2 as third piece.
"RTN","IBCEF72",133,0)
 . ; JWS - IB*2.0*623 - needs $G around ^DGCR references
"RTN","IBCEF72",134,0)
 . ;S IBRES(Z0)=+$G(^DGCR(399,IB399,"I"_Z1))_U_$P(^DGCR(399,IB399,"M1"),U,12+Z1)
"RTN","IBCEF72",135,0)
 . S IBRES(Z0)=+$G(^DGCR(399,IB399,"I"_Z1))_U_$P($G(^DGCR(399,IB399,"M1")),U,12+Z1)_U_$P($G(^DGCR(399,IB399,"M2")),U,Z1*2)
"RTN","IBCEF72",136,0)
 . Q
"RTN","IBCEF72",137,0)
 Q
"RTN","IBCEF72",138,0)
 ;
"RTN","IBCEF72",139,0)
 ;get other insurance EDI ID NUMBERs
"RTN","IBCEF72",140,0)
OTHINSID(IB399,IBRES) ;insurance EDI 
"RTN","IBCEF72",141,0)
 N IBFRMTYP,IBZ,Z0,Z1,Z4
"RTN","IBCEF72",142,0)
 ;JWS;IB*2.0*592;Dental form
"RTN","IBCEF72",143,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,IBFRMTYP=7:7,1:0)
"RTN","IBCEF72",144,0)
 S Z4=$S(IBFRMTYP=1:4,IBFRMTYP=7:15,1:2) ;UB - piece4,DENTAL - piece 15, 1500 or BOTH -piece 2, 
"RTN","IBCEF72",145,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",146,0)
 S Z1=0
"RTN","IBCEF72",147,0)
 F Z0=1,2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",148,0)
 . S IBRES(Z0)=$S($$MCRWNR^IBEFUNC(+IBZ(Z0)):$S(IBFRMTYP=1:"12M61",1:"SMTX1"),1:$P($G(^DIC(36,+IBZ(Z0),3)),U,Z4))
"RTN","IBCEF72",149,0)
 . ; vd - IB*2.0*623 - Added the following line for US4100.
"RTN","IBCEF72",150,0)
 . I $P(IBZ(Z0),U,3)]"" S IBRES(Z0)=$P(IBZ(Z0),U,3)   ; Return the correct Alternate ID from node "M2"
"RTN","IBCEF72",151,0)
 . ; MRD;IB*2.0*516 - Added HPID as second piece.
"RTN","IBCEF72",152,0)
 . S $P(IBRES(Z0),U,2)=$P(IBZ(Z0),U,2)
"RTN","IBCEF72",153,0)
 . Q
"RTN","IBCEF72",154,0)
 Q
"RTN","IBCEF72",155,0)
 ;
"RTN","IBCEF72",156,0)
 ;get other insurance addresses
"RTN","IBCEF72",157,0)
OTHINADR(IB399,IBRES,IBADDFLD) ;insurance EDI
"RTN","IBCEF72",158,0)
 N IBZ,Z0,Z1,Z4
"RTN","IBCEF72",159,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",160,0)
 S Z1=0
"RTN","IBCEF72",161,0)
 I IBADDFLD=18 D  Q
"RTN","IBCEF72",162,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",163,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",164,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",165,0)
 I IBADDFLD=18.9 D  Q
"RTN","IBCEF72",166,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",167,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",168,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",169,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,3) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",170,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",171,0)
 . . S Z4=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",172,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",173,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,157)
"RTN","IBCEF72",174,0)
 I IBADDFLD=19 D  Q
"RTN","IBCEF72",175,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",176,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2)
"RTN","IBCEF72",177,0)
 . . S IBRES(Z0)=IBRES(Z0)_" "_$P($G(^DIC(36,+IBZ(Z0),.11)),U,3)
"RTN","IBCEF72",178,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",179,0)
 I IBADDFLD=20 D  Q
"RTN","IBCEF72",180,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",181,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4)
"RTN","IBCEF72",182,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,30)
"RTN","IBCEF72",183,0)
 I IBADDFLD=21 D  Q
"RTN","IBCEF72",184,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",185,0)
 . . S IBRES(Z0)=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2)
"RTN","IBCEF72",186,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,2)
"RTN","IBCEF72",187,0)
 I IBADDFLD=22 D  Q
"RTN","IBCEF72",188,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",189,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6)
"RTN","IBCEF72",190,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,15)
"RTN","IBCEF72",191,0)
 Q
"RTN","IBCEF72",192,0)
 ;
"RTN","IBCEF72",193,0)
SFIDQ(IBXIEN,IBXSAVE,IBXDATA) ; Find the service facility id qualifier for
"RTN","IBCEF72",194,0)
 ; 837 record SUB2-5
"RTN","IBCEF72",195,0)
 ;IBXIEN = ien of 399
"RTN","IBCEF72",196,0)
 ;Pass by reference: IBXSAVE (input/output)  IBXDATA (output)
"RTN","IBCEF72",197,0)
 N B,Z
"RTN","IBCEF72",198,0)
 K IBXSAVE("NVID")
"RTN","IBCEF72",199,0)
 D  ; protect IBXDATA
"RTN","IBCEF72",200,0)
 . N IBXDATA
"RTN","IBCEF72",201,0)
 . D F^IBCEF("N-RENDERING INSTITUTION")
"RTN","IBCEF72",202,0)
 . S:IBXDATA'="" IBXSAVE("IBFAC")=IBXDATA
"RTN","IBCEF72",203,0)
 I $P($G(IBXSAVE("IBFAC")),U,2)'=1 K IBXDATA Q
"RTN","IBCEF72",204,0)
 S Z=$$PSPRV^IBCEF7(IBXIEN)
"RTN","IBCEF72",205,0)
 ;WCJ 11/04/2005 If a Non-VA facility 
"RTN","IBCEF72",206,0)
 I $E(Z) D
"RTN","IBCEF72",207,0)
 . S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,$E(Z),1)
"RTN","IBCEF72",208,0)
 .; S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1)
"RTN","IBCEF72",209,0)
 . S IBXDATA=$P("^34^24",U,$P(IBXSAVE("NVID"),U,2)+1)
"RTN","IBCEF72",210,0)
 ;S Z=$$PSPRV^IBCEF7(IBXIEN),IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1),IBXDATA=24
"RTN","IBCEF72",211,0)
 Q
"RTN","IBCEF72",212,0)
 ;
"RTN","IBCEF72",213,0)
OTHP36(IBXIEN,IBZOUT)   ;
"RTN","IBCEF72",214,0)
 N Z,Z0,Z1,IBZ
"RTN","IBCEF72",215,0)
 D F^IBCEF("N-ALL INSURANCE CO 837 ID","IBZ")
"RTN","IBCEF72",216,0)
 F Z=1,2,3 S IBZOUT(Z)=+$$POLICY^IBCEF(IBXIEN,1,$E("PST",Z))
"RTN","IBCEF72",217,0)
 Q
"RTN","IBCEF72",218,0)
 ;
"RTN","IBCEF72",219,0)
 ;---------SORT-----------
"RTN","IBCEF72",220,0)
 ;IBPRNUM - seq #
"RTN","IBCEF72",221,0)
 ;IBPRTYP - type of provider (use FUNCTION value from file 399, fld 222)
"RTN","IBCEF72",222,0)
 ;IB399 = ien file 399
"RTN","IBCEF72",223,0)
 ;IBSRC,IBDST - source,destination arrays
"RTN","IBCEF72",224,0)
 ;IBN - starting #
"RTN","IBCEF72",225,0)
 ;Output:
"RTN","IBCEF72",226,0)
 ; IBDST(1-primary/2-secondary provider,Provider type(FUNCTION),N)=
"RTN","IBCEF72",227,0)
 ; =provider/VARIABLEPTR^Insurance PTR #36 or NONE^ID type^ID^Form type^Care type^state ptr #5 for state license #
"RTN","IBCEF72",228,0)
 ; where N is numeration (1 for ID1, 2 for ID2, etc)
"RTN","IBCEF72",229,0)
GETSSN(IBPTR)   ;look for SSN in #200 first and if not found then look at #355.9
"RTN","IBCEF72",230,0)
 ;if in file #200
"RTN","IBCEF72",231,0)
 I $P(IBPTR,";",2)="VA(200," Q $$SSN200^IBCEF73(IBPTR)
"RTN","IBCEF72",232,0)
 ;if in 355.93 then use 355.9
"RTN","IBCEF72",233,0)
 Q $$SSN3559^IBCEF73(IBPTR)
"RTN","IBCEF72",234,0)
 ;--
"RTN","IBCEF72",235,0)
 ;SSN3559
"RTN","IBCEF72",236,0)
 ;Find SSN from 355.9
"RTN","IBCEF72",237,0)
 ;Input:
"RTN","IBCEF72",238,0)
 ; Variable pointer to ^VA(200 or ^IBA(355.93
"RTN","IBCEF72",239,0)
 ;Output:
"RTN","IBCEF72",240,0)
 ; SSN or null
"RTN","IBCEF72",241,0)
 ;
"RTN","IBCEF72",242,0)
PADNDC(Z) ;PAD LEADING ZERO'S INTO A NON 5-4-2 FORMAT NDC NUMBER
"RTN","IBCEF72",243,0)
 ;Z IS ITERATION, ONLY PAD CURRENT NDC NUMBER
"RTN","IBCEF72",244,0)
 N NDC
"RTN","IBCEF72",245,0)
 S NDC=$P(IBXSAVE("OUTPT",Z,"RX"),"^",3)
"RTN","IBCEF72",246,0)
 Q:$L(NDC)=13
"RTN","IBCEF72",247,0)
 I $L(NDC)=14 D  Q
"RTN","IBCEF72",248,0)
 . S $P(NDC,"-",1)=$E($P(NDC,"-",1),2,$L($P(NDC,"-",1)))
"RTN","IBCEF72",249,0)
 . S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",250,0)
 I $L($P(NDC,"-",1))'=5 S $P(NDC,"-",1)="0"_$P(NDC,"-",1)
"RTN","IBCEF72",251,0)
 I $L($P(NDC,"-",2))'=4 S $P(NDC,"-",2)="0"_$P(NDC,"-",2)
"RTN","IBCEF72",252,0)
 I $L($P(NDC,"-",3))'=2 S $P(NDC,"-",3)="0"_$P(NDC,"-",3)
"RTN","IBCEF72",253,0)
 S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",254,0)
 Q
"RTN","IBCEF72",255,0)
 ;
"RTN","IBCEFP")
0^55^B119401920^B118488673
"RTN","IBCEFP",1,0)
IBCEFP ;ALB/TAZ - Provider ID functions ;28-OCT-10
"RTN","IBCEFP",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,473,516,592,623**;21-MAR-94;Build 70
"RTN","IBCEFP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEFP",4,0)
 ;
"RTN","IBCEFP",5,0)
 Q
"RTN","IBCEFP",6,0)
 ;
"RTN","IBCEFP",7,0)
ALLIDS(IBIFN,IBXSAVE,IBSTRIP,SEG) ; Return all of the Provider IDS
"RTN","IBCEFP",8,0)
 I '$D(IBSTRIP) S IBSTRIP=0
"RTN","IBCEFP",9,0)
 I '$D(SEG) S SEG=""
"RTN","IBCEFP",10,0)
 N IBXIEN,ARINFO,ARID,ARQ,IBFRMTYP,ARIEN,ARINS,Z0,DAT,I,SORT1,SORT2,SORT3,COB,IBCCOB,IBCARE,IBCURR,IBXDATA,NPI,CUROTH
"RTN","IBCEFP",11,0)
 ;JWS;IB*2.0*592;US131
"RTN","IBCEFP",12,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,IBFRMTYP=7:7,1:0)
"RTN","IBCEFP",13,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEFP",14,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEFP",15,0)
 S IBCURR=$$COB^IBCEF(IBIFN) ;current bill payer sequence
"RTN","IBCEFP",16,0)
 ;don't create anything if form type not CMS-1500 or UB or J430D
"RTN","IBCEFP",17,0)
 I IBFRMTYP,'+$G(IBXSAVE("PROVINF",IBIFN)) D
"RTN","IBCEFP",18,0)
 . N IBZ,CUROTH
"RTN","IBCEFP",19,0)
 . ;JWS;IB*2.0*592;US131
"RTN","IBCEFP",20,0)
 . I IBFRMTYP=2!(IBFRMTYP=7) D OUTPT^IBCEF11(IBIFN,0)
"RTN","IBCEFP",21,0)
 . I IBFRMTYP=1 D HOS^IBCEF22(IBIFN)
"RTN","IBCEFP",22,0)
 . ; START IB*2.0*447 BI
"RTN","IBCEFP",23,0)
 . I IBCURR="A" D  Q
"RTN","IBCEFP",24,0)
 .. N IBRESARR
"RTN","IBCEFP",25,0)
 .. S IBLIMIT=5
"RTN","IBCEFP",26,0)
 .. D PROVINF(IBIFN,1,.IBRESARR,1,"C",IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",27,0)
 .. M IBXSAVE=IBRESARR
"RTN","IBCEFP",28,0)
 .. S IBXSAVE("PROVINF",IBIFN)=IBIFN
"RTN","IBCEFP",29,0)
 . ; END IB*2.0*447 BI
"RTN","IBCEFP",30,0)
 . F CUROTH="C","O" D PROVIDER(IBIFN,CUROTH,.IBZ,IBFRMTYP,IBCARE,IBCURR,.IBXDATA) M IBXSAVE=IBZ
"RTN","IBCEFP",31,0)
 . S IBXSAVE("PROVINF",IBIFN)=IBIFN
"RTN","IBCEFP",32,0)
 . Q
"RTN","IBCEFP",33,0)
 ;
"RTN","IBCEFP",34,0)
 D LFIDS^IBCEF76(IBIFN,.IBXSAVE,IBSTRIP,SEG)   ; Get the Lab/Facility IDs
"RTN","IBCEFP",35,0)
 S NPI=$P($$ORGNPI^IBCEF73A(IBIFN),U,1)
"RTN","IBCEFP",36,0)
 F CUROTH="C","O" D
"RTN","IBCEFP",37,0)
 . S IBXSAVE("LAB/FAC",IBIFN,CUROTH,1,0)=$S(NPI]"":"XX",1:"")_U_NPI
"RTN","IBCEFP",38,0)
 ;
"RTN","IBCEFP",39,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN)
"RTN","IBCEFP",40,0)
 S ARIEN=$S(IBFRMTYP=2:3,1:4)
"RTN","IBCEFP",41,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)  ; Current Insurance
"RTN","IBCEFP",42,0)
 F COB=1:1:3 D
"RTN","IBCEFP",43,0)
 . S SORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEFP",44,0)
 . S SORT2=$S(SORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEFP",45,0)
 . S ARINFO=$G(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,ARIEN,1))
"RTN","IBCEFP",46,0)
 . ;
"RTN","IBCEFP",47,0)
 . D BPIDS^IBCEF75(IBIFN,.IBXSAVE,SORT1,SORT2,COB,IBSTRIP,SEG)
"RTN","IBCEFP",48,0)
 ;
"RTN","IBCEFP",49,0)
 D EN^IBCEF81(.IBXSAVE)
"RTN","IBCEFP",50,0)
 ;
"RTN","IBCEFP",51,0)
 I SEG="OPR1" D
"RTN","IBCEFP",52,0)
 . I '$D(IBXSAVE("PROVINF",IBIFN,"C",1,3)) D  G ALLIDSQ
"RTN","IBCEFP",53,0)
 .. N SLC,CRED S SLC=0
"RTN","IBCEFP",54,0)
 .. F  S SLC=$O(IBXSAVE("L-PROV",IBIFN,SLC)) Q:'SLC  D  I $D(IBXSAVE("PROVINF",IBIFN,"C",1,3,"NAME")) Q
"RTN","IBCEFP",55,0)
 ... S CRED=$P($G(IBXSAVE("L-PROV",IBIFN,SLC,"C",1,3,"NAME")),U,4)
"RTN","IBCEFP",56,0)
 ... I CRED]"" S $P(IBXSAVE("PROVINF",IBIFN,"C",1,3,"NAME"),U,4)=CRED
"RTN","IBCEFP",57,0)
 ;
"RTN","IBCEFP",58,0)
 I SEG="LPUR"!(SEG="LPUR1"),$$SUB1OK^IBCEP8A(IBIFN),$G(IBXSAVE("SLC")) D  G ALLIDSQ
"RTN","IBCEFP",59,0)
 . N IBCNT,OUT
"RTN","IBCEFP",60,0)
 . ;IB*2.0*473/TAZ - Moved ID lookup into seperate function.
"RTN","IBCEFP",61,0)
 . D PSID(IBIFN,.IBXSAVE,.IDS)
"RTN","IBCEFP",62,0)
 . ;IB*2.0*473/TAZ - END
"RTN","IBCEFP",63,0)
 . ;JWS;IB*2.0*623;$G in the event IDS is not defined.
"RTN","IBCEFP",64,0)
 . S $P(OUT,U,6)=$G(IDS(0))
"RTN","IBCEFP",65,0)
 . S $P(OUT,U,7,8)=$G(IDS(1)) ; secondary id (1) ^ secondary id qualifier(1)
"RTN","IBCEFP",66,0)
 . F IBCNT=1:1:IBXSAVE("SLC") S IBXSAVE("SLPRV",IBCNT)=OUT,IBXSAVE("SLPRV",IBCNT,"SLC")=IBCNT
"RTN","IBCEFP",67,0)
 ;
"RTN","IBCEFP",68,0)
 I SEG="LOPE" D SLPRV(IBIFN,.IBXSAVE,2) G ALLIDSQ
"RTN","IBCEFP",69,0)
 I SEG="LOP1" D SLPRV(IBIFN,.IBXSAVE,9) G ALLIDSQ
"RTN","IBCEFP",70,0)
 I SEG="LREN" D SLPRV(IBIFN,.IBXSAVE,3) G ALLIDSQ
"RTN","IBCEFP",71,0)
 I SEG="LSUP" D SLPRV(IBIFN,.IBXSAVE,5) G ALLIDSQ
"RTN","IBCEFP",72,0)
 I SEG="LREF" D SLPRV(IBIFN,.IBXSAVE,1) G ALLIDSQ
"RTN","IBCEFP",73,0)
 ;JWS;IB*2.0*592;US131
"RTN","IBCEFP",74,0)
 I SEG="LSUR" D SLPRV(IBIFN,.IBXSAVE,6) G ALLIDSQ
"RTN","IBCEFP",75,0)
 I SEG="LSR1" D SLPRV(IBIFN,.IBXSAVE,6) G ALLIDSQ
"RTN","IBCEFP",76,0)
 ;
"RTN","IBCEFP",77,0)
ALLIDSQ ;
"RTN","IBCEFP",78,0)
 Q
"RTN","IBCEFP",79,0)
 ;
"RTN","IBCEFP",80,0)
PSID(IBIFN,IBXPROV,IBXIDS) ; Build array of either the Fac/Lab ID or Rendering Provider IDs
"RTN","IBCEFP",81,0)
 ;IB*2.0*473/TAZ - Created a function to standardize IDs in LDAT and LPUR
"RTN","IBCEFP",82,0)
 ; Input:
"RTN","IBCEFP",83,0)
 ;   IBXIEN - Internal Entry Number of claim
"RTN","IBCEFP",84,0)
 ;   IBXPROV - Provider Array
"RTN","IBCEFP",85,0)
 ;   IBXIDS - Array for IDs
"RTN","IBCEFP",86,0)
 ; Output:
"RTN","IBCEFP",87,0)
 ;   IBXIDS(0) - Primary ID
"RTN","IBCEFP",88,0)
 ;   IBXIDS(1) - Secondary ID
"RTN","IBCEFP",89,0)
 ;
"RTN","IBCEFP",90,0)
 N LINE,PLINE,PID,SID,SIDQ
"RTN","IBCEFP",91,0)
 K IBXIDS
"RTN","IBCEFP",92,0)
 ; Get Lab/Facility IDs
"RTN","IBCEFP",93,0)
 S (PID,SID,SIDQ)=""
"RTN","IBCEFP",94,0)
 S PID=$P($G(IBXPROV("LAB/FAC",IBIFN,"C",1,0)),U,2)
"RTN","IBCEFP",95,0)
 F LINE=1:1 Q:'$D(IBXPROV("LAB/FAC",IBIFN,"C",1,LINE))  D  I SID'="" Q
"RTN","IBCEFP",96,0)
 . S SIDQ=$P($G(IBXPROV("LAB/FAC",IBIFN,"C",1,LINE)),U) I ",0B,1G,G2,"'[(","_SIDQ_",") S SIDQ="" Q
"RTN","IBCEFP",97,0)
 . S SID=$P($G(IBXPROV("LAB/FAC",IBIFN,"C",1,LINE)),U,2)
"RTN","IBCEFP",98,0)
 I $L(PID)!$L(SID) S IBXIDS(0)=PID,IBXIDS(1)=SID_U_SIDQ G PSIDQ
"RTN","IBCEFP",99,0)
 ; Get Claim Level Rendering Provider IDs
"RTN","IBCEFP",100,0)
 S PID=$P($G(IBXPROV("PROVINF",IBIFN,"C",1,3,0)),U,4)  ; Get claim level Rendering Provider NPI
"RTN","IBCEFP",101,0)
 F LINE=1:1 Q:'$D(IBXPROV("PROVINF",IBIFN,"C",1,3,LINE))  D  I SID'="" Q
"RTN","IBCEFP",102,0)
 . S SIDQ=$P($G(IBXPROV("PROVINF",IBIFN,"C",1,3,LINE)),U,3) I ",0B,1G,G2,"'[(","_SIDQ_",") S SIDQ="" Q
"RTN","IBCEFP",103,0)
 . S SID=$P($G(IBXPROV("PROVINF",IBIFN,"C",1,3,LINE)),U,4)
"RTN","IBCEFP",104,0)
 I $L(PID)!$L(SID) S IBXIDS(0)=PID,IBXIDS(1)=SID_U_SIDQ G PSIDQ
"RTN","IBCEFP",105,0)
 ; Get Line Level Rendering Provider IDs
"RTN","IBCEFP",106,0)
 F PLINE=1:1 Q:'$D(IBXPROV("L-PROV",IBIFN,PLINE))  D  I $L(PID)!$L(SID) Q
"RTN","IBCEFP",107,0)
 . S PID=$P($G(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,0)),U,4)
"RTN","IBCEFP",108,0)
 . F LINE=1:1 Q:'$D(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,LINE))  D  I SID'="" Q
"RTN","IBCEFP",109,0)
 .. S SIDQ=$P($G(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,LINE)),U,3) I ",0B,1G,G2,"'[(","_SIDQ_",") S SIDQ="" Q
"RTN","IBCEFP",110,0)
 .. S SID=$P($G(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,LINE)),U,4)
"RTN","IBCEFP",111,0)
 I $L(PID)!$L(SID) S IBXIDS(0)=PID,IBXIDS(1)=SID_U_SIDQ
"RTN","IBCEFP",112,0)
PSIDQ ;
"RTN","IBCEFP",113,0)
 Q
"RTN","IBCEFP",114,0)
 ;
"RTN","IBCEFP",115,0)
SLPRV(IBXIEN,IBX,PRTYPE) ;Build SLPRV nodes for the line provider type record
"RTN","IBCEFP",116,0)
 N SLC,DATA,IBCNT,NAME,OUT
"RTN","IBCEFP",117,0)
 S (SLC,IBCNT)=0
"RTN","IBCEFP",118,0)
 F  S SLC=$O(IBX("L-PROV",IBXIEN,SLC)) Q:'SLC  D
"RTN","IBCEFP",119,0)
 . I '$D(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE)) Q
"RTN","IBCEFP",120,0)
 . S NAME=$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,"NAME"))
"RTN","IBCEFP",121,0)
 . S OUT=$P(NAME,U,1,3)_U_$P(NAME,U,5)_U_$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,"TAXONOMY"))_U_$P($G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,0)),U,4)
"RTN","IBCEFP",122,0)
 . F IBN=1:1 Q:'$D(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,IBN))  D
"RTN","IBCEFP",123,0)
 .. S DATA=$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,IBN))
"RTN","IBCEFP",124,0)
 .. I ",0B,1G,G2,LU,"[(","_$P(DATA,U,3)_",") S OUT=OUT_U_$P(DATA,U,4)_U_$P(DATA,U,3)
"RTN","IBCEFP",125,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEFP",126,0)
 . S IBX("SLPRV",IBCNT)=OUT
"RTN","IBCEFP",127,0)
 . S IBX("SLPRV",IBCNT,"SLC")=SLC
"RTN","IBCEFP",128,0)
SLPRVQ ;
"RTN","IBCEFP",129,0)
 Q
"RTN","IBCEFP",130,0)
 ;
"RTN","IBCEFP",131,0)
 ;PROVIDER
"RTN","IBCEFP",132,0)
 ;Input:
"RTN","IBCEFP",133,0)
 ; IB399 - ien of #399
"RTN","IBCEFP",134,0)
 ; IBPROV:
"RTN","IBCEFP",135,0)
 ;   "C"- to get info for CURRENT provider
"RTN","IBCEFP",136,0)
 ;   "O"- to get info for all others (in this case the array will contain info fot two providers
"RTN","IBCEFP",137,0)
 ; IBRES - array for results (by reference)
"RTN","IBCEFP",138,0)
 ; IBFRMTYP - Form Type
"RTN","IBCEFP",139,0)
 ; IBCARE - Care Type
"RTN","IBCEFP",140,0)
 ; IBCURR - current bill payer sequence
"RTN","IBCEFP",141,0)
 ;
"RTN","IBCEFP",142,0)
 ;Output:
"RTN","IBCEFP",143,0)
 ; IBRES - array to get back info (by reference)
"RTN","IBCEFP",144,0)
 ; IBRES(IBPROV,PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEFP",145,0)
 ; where:
"RTN","IBCEFP",146,0)
 ; IBPROV - see input parameter
"RTN","IBCEFP",147,0)
 ; PRNUM: 1=primary insurance provider, 2= secondary, 3 -tretiary
"RTN","IBCEFP",148,0)
 ; PRTYPE: Provider type(FUNCTION) 
"RTN","IBCEFP",149,0)
 ; SEQ# : sequence number (1st is used for ID1, 2nd - for ID2, etc)
"RTN","IBCEFP",150,0)
 ; PROV : provider/VARIABLEPTR
"RTN","IBCEFP",151,0)
 ; INSUR: Insurance PTR #36 or NONE
"RTN","IBCEFP",152,0)
 ; IDTYPE: ID type
"RTN","IBCEFP",153,0)
 ; ID: ID 
"RTN","IBCEFP",154,0)
 ; FORMTYP: Form type 1=UB,2=1500
"RTN","IBCEFP",155,0)
 ; CARETYP: Care type 0=both inp/outp,1=inpatient, 2=outpatient
"RTN","IBCEFP",156,0)
PROVIDER(IB399,IBPROV,IBRES,IBFRMTYP,IBCARE,IBCURR,IBXDATA) ;
"RTN","IBCEFP",157,0)
 N IBZ,IBRESARR,IBLIMIT
"RTN","IBCEFP",158,0)
 S IBRESARR=""
"RTN","IBCEFP",159,0)
 Q:IBCURR="A"  ;PATIENT's bill IB*2.0*447 BI Changes IBPROV to IBCURR
"RTN","IBCEFP",160,0)
 I IBPROV="C" D
"RTN","IBCEFP",161,0)
 . S IBLIMIT=5
"RTN","IBCEFP",162,0)
 . D:$$ISINSUR^IBCEF71(IBCURR,IB399) PROVINF(IB399,$S(IBCURR="T":3,IBCURR="S":2,IBCURR="P":1,1:1),.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",163,0)
 I IBPROV="O" D
"RTN","IBCEFP",164,0)
 . S IBLIMIT=3
"RTN","IBCEFP",165,0)
 . I IBCURR="P" D
"RTN","IBCEFP",166,0)
 .. D:$$ISINSUR^IBCEF71("S",IB399) PROVINF(IB399,2,.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",167,0)
 .. D:$$ISINSUR^IBCEF71("T",IB399) PROVINF(IB399,3,.IBRESARR,2,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",168,0)
 . I IBCURR="S" D
"RTN","IBCEFP",169,0)
 .. D:$$ISINSUR^IBCEF71("P",IB399) PROVINF(IB399,1,.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",170,0)
 .. D:$$ISINSUR^IBCEF71("T",IB399) PROVINF(IB399,3,.IBRESARR,2,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",171,0)
 . I IBCURR="T" D
"RTN","IBCEFP",172,0)
 .. D:$$ISINSUR^IBCEF71("P",IB399) PROVINF(IB399,1,.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",173,0)
 .. D:$$ISINSUR^IBCEF71("S",IB399) PROVINF(IB399,2,.IBRESARR,2,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",174,0)
 M IBRES=IBRESARR
"RTN","IBCEFP",175,0)
 Q
"RTN","IBCEFP",176,0)
 ;
"RTN","IBCEFP",177,0)
 ;-- PROVINF --
"RTN","IBCEFP",178,0)
 ;Create array with prov info
"RTN","IBCEFP",179,0)
 ;Input:
"RTN","IBCEFP",180,0)
 ; IB399 - ien #399
"RTN","IBCEFP",181,0)
 ; IBPRNUM - 1=prim ins, 2= sec, 3 -tert
"RTN","IBCEFP",182,0)
 ; IBRES - for results
"RTN","IBCEFP",183,0)
 ; IBSORT - to sort OTHER INSURANCE data 
"RTN","IBCEFP",184,0)
 ;  if PROVINF is called for "C" mode of PROVIDER subroutine then 
"RTN","IBCEFP",185,0)
 ;    IBSORT can be any (say 1)
"RTN","IBCEFP",186,0)
 ;  if PROVINF is called for "O" mode then can be more than set of data
"RTN","IBCEFP",187,0)
 ;    - need to sort array to use it (like IBXDATA(1) and IBXDATA(2))
"RTN","IBCEFP",188,0)
 ;    for mode "O" it should be 1 or 2 (see PROVIDER section)
"RTN","IBCEFP",189,0)
 ;IBINSTP -  "C" -current ins, "O"-other
"RTN","IBCEFP",190,0)
 ;IBFRMTYP - Form Type
"RTN","IBCEFP",191,0)
 ;IBCARE - Care Type
"RTN","IBCEFP",192,0)
 ;IBLIMIT - Limits on Secondary
"RTN","IBCEFP",193,0)
 ;IBCURR - Current Insurance
"RTN","IBCEFP",194,0)
 ;IBXDAYA - Revenue Code Array
"RTN","IBCEFP",195,0)
 ;Output:
"RTN","IBCEFP",196,0)
 ; IBRES(PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEFP",197,0)
 ; where:(see PROVIDER)
"RTN","IBCEFP",198,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,IBXDATA) ;
"RTN","IBCEFP",199,0)
 I $G(IB399)="" G PROVINFQ
"RTN","IBCEFP",200,0)
 I $G(IBINSTP)="" G PROVINFQ
"RTN","IBCEFP",201,0)
 I +$G(IBSORT)=0 S IBSORT=$G(IBPRNUM)
"RTN","IBCEFP",202,0)
 N IBPRTYP,IBINSCO,IBPROV,IB35591,IBN,IBEXC
"RTN","IBCEFP",203,0)
 S IBN=0
"RTN","IBCEFP",204,0)
 S IBINSCO=+$P($G(^DGCR(399,IB399,"M")),"^",IBPRNUM)
"RTN","IBCEFP",205,0)
 S IB35591=$$CH35591^IBCEF72(IBINSCO,IBFRMTYP,IBCARE)
"RTN","IBCEFP",206,0)
 S IBPRTYP=0
"RTN","IBCEFP",207,0)
 F  S IBPRTYP=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP)) Q:'IBPRTYP  D
"RTN","IBCEFP",208,0)
 . N Z,IB355OV,IBPROV,IBARR
"RTN","IBCEFP",209,0)
 . S IBPROV=$$PROVPTR(IB399,IBPRTYP,0),IBEXC=""
"RTN","IBCEFP",210,0)
 . Q:+IBPROV=0
"RTN","IBCEFP",211,0)
 . S Z=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)) I Z S Z=$G(^DGCR(399,IB399,"PRV",Z,0))
"RTN","IBCEFP",212,0)
 . D GETPRV(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBARR,IBPRTYP,IBINSTP,Z)
"RTN","IBCEFP",213,0)
 . M IBRES("PROVINF",IB399,IBINSTP)=IBARR
"RTN","IBCEFP",214,0)
 I $D(IBRES("PROVINF",IB399,IBINSTP,IBSORT))>1 S IBRES("PROVINF",IB399,IBINSTP,IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEFP",215,0)
 N SLC,CPLNK
"RTN","IBCEFP",216,0)
 S SLC=0
"RTN","IBCEFP",217,0)
 F  S SLC=$O(IBXDATA(SLC)) Q:'SLC   S IBXSAVE("SLC")=+SLC D
"RTN","IBCEFP",218,0)
 . S CPLNK=$G(IBXDATA(SLC,"CPLNK")) I 'CPLNK Q
"RTN","IBCEFP",219,0)
 . S IBPRTYP=0
"RTN","IBCEFP",220,0)
 . F  S IBPRTYP=$O(^DGCR(399,IB399,"CP",CPLNK,"LNPRV","B",IBPRTYP)) Q:'IBPRTYP  D
"RTN","IBCEFP",221,0)
 .. N Z,IBPROV,IBARR
"RTN","IBCEFP",222,0)
 .. S IBPROV=$$PROVPTR(IB399,IBPRTYP,CPLNK),IBEXC=""
"RTN","IBCEFP",223,0)
 .. Q:'+IBPROV
"RTN","IBCEFP",224,0)
 .. S Z=$O(^DGCR(399,IB399,"CP",CPLNK,"LNPRV","B",IBPRTYP,0)) I Z S Z=$G(^DGCR(399,IB399,"CP",CPLNK,"LNPRV",Z,0))
"RTN","IBCEFP",225,0)
 .. D GETPRV(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBARR,IBPRTYP,IBINSTP,Z)
"RTN","IBCEFP",226,0)
 .. M IBRES("L-PROV",IB399,SLC,IBINSTP)=IBARR
"RTN","IBCEFP",227,0)
 . I $D(IBRES("L-PROV",IB399,SLC,IBINSTP,IBSORT))>1 S IBRES("L-PROV",IB399,SLC,IBINSTP,IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEFP",228,0)
 ;
"RTN","IBCEFP",229,0)
PROVINFQ ;Exit PROVINF
"RTN","IBCEFP",230,0)
 Q
"RTN","IBCEFP",231,0)
 ;
"RTN","IBCEFP",232,0)
GETPRV(IBINSCO,IBFRMTYP,IBCARE,IBPROV,IBRES,IBPRTYP,IBINSTP,IBD) ;
"RTN","IBCEFP",233,0)
 I "CO"'[$G(IBINSTP) G GETPRVQ
"RTN","IBCEFP",234,0)
 N IBRETARR,IBNPI,IBN,IBMRAND,IB355OV S IBRETARR=0,IB355OV=""
"RTN","IBCEFP",235,0)
 D PRACT^IBCEF71(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBRETARR,IBPRTYP,$G(IBINSTP))
"RTN","IBCEFP",236,0)
 I $P(IBD,U,IBPRNUM+4)'="",$P(IBD,U,IBPRNUM+11)'="" S IB355OV=$P(IBD,U,IBPRNUM+4)_U_$P(IBD,U,IBPRNUM+11)
"RTN","IBCEFP",237,0)
 S IBN=0,IBMRAND=$$MCRONBIL^IBEFUNC(IB399)
"RTN","IBCEFP",238,0)
 ;Calculate MEDICARE (WNR) specific provider qualifier and ID for CMS-1500 secondary claims
"RTN","IBCEFP",239,0)
 I "34"[$G(IBPRTYP),$G(IBFRMTYP)=2,IBMRAND S IB355OV=$$MCR24K^IBCEU3(IB399,IBPROV)_"^12"
"RTN","IBCEFP",240,0)
 I $P(IB355OV,U,2) D
"RTN","IBCEFP",241,0)
 . I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P($G(^IBE(355.97,+$P(IB355OV,U,2),0)),U,3)) D
"RTN","IBCEFP",242,0)
 .. S IBEXC=$P(IB355OV,U,2),IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="OVERRIDE^"_IBINSCO_U_$P($G(^IBE(355.97,+IBEXC,0)),U,3)_U_$P(IB355OV,U)_"^^^^^"_+IBEXC
"RTN","IBCEFP",243,0)
 I IB35591'="",IBEXC'=$P(IB35591,U,3) I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P(IB35591,"^")) D
"RTN","IBCEFP",244,0)
 . S IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="DEFAULT^"_IBINSCO_"^"_IB35591_"^^",$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=$P(IB35591,U,3)
"RTN","IBCEFP",245,0)
 S IBNPI=$$NPI^IBCEFP1(IBPROV)
"RTN","IBCEFP",246,0)
 D SORT^IBCEF77(IBSORT,IBPRTYP,IB399,.IBRETARR,.IBRES,IBN,IBEXC,IBPRNUM,IBLIMIT)
"RTN","IBCEFP",247,0)
 S IBRES(IBSORT,IBPRTYP,0)="PRIMARY"_U_U_$$STRIP^IBCEF76($S(IBNPI]"":"XX",1:"")_U_IBNPI,1,U,IBSTRIP)
"RTN","IBCEFP",248,0)
 F IBN=1:1 Q:'$D(IBRES(IBSORT,IBPRTYP,IBN))  S $P(IBRES(IBSORT,IBPRTYP,IBN),U,3,4)=$$STRIP^IBCEF76($P(IBRES(IBSORT,IBPRTYP,IBN),U,3,4),1,U,IBSTRIP)
"RTN","IBCEFP",249,0)
 S IBRES(IBSORT,IBPRTYP,"NAME")=$$NAME^IBCEFP1(IBPROV,IBIFN,$P(IBD,U,3),$P(IBD,U,8))
"RTN","IBCEFP",250,0)
 S IBRES(IBSORT,IBPRTYP,"ENTITY TYPE")=$S(IBPROV'["355.93,":1,$P($G(^IBA(355.93,+IBPROV,0)),U,2)=2:1,1:2)
"RTN","IBCEFP",251,0)
 S IBRES(IBSORT,IBPRTYP,"TAXONOMY")=$$TAXON^IBCEFP1(IBPROV,$P(IBD,U,15))
"RTN","IBCEFP",252,0)
 S IBRES(IBSORT,IBPRTYP,"COBID")=$$COBID^IBCEFP1(IB399,IBPRTYP,IBMRAND,IBD)
"RTN","IBCEFP",253,0)
 S IBRES(IBSORT,IBPRTYP)=IBPROV
"RTN","IBCEFP",254,0)
GETPRVQ ;
"RTN","IBCEFP",255,0)
 Q
"RTN","IBCEFP",256,0)
 ;
"RTN","IBCEFP",257,0)
PROVPTR(IBIEN399,IBFUNC,IBCP) ; Retrieve Provider Pointer from appropriate file
"RTN","IBCEFP",258,0)
 N IBN,RSLT
"RTN","IBCEFP",259,0)
 S IBCP=+$G(IBCP)
"RTN","IBCEFP",260,0)
 I 'IBCP D
"RTN","IBCEFP",261,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFUNC,0))
"RTN","IBCEFP",262,0)
 . I +IBN=0 S RSLT=0 Q
"RTN","IBCEFP",263,0)
 . S RSLT=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),U,2)
"RTN","IBCEFP",264,0)
 I IBCP D
"RTN","IBCEFP",265,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"CP",IBCP,"LNPRV","B",IBFUNC,0))
"RTN","IBCEFP",266,0)
 . I +IBN=0 S RSLT=0 Q
"RTN","IBCEFP",267,0)
 . S RSLT=$P($G(^DGCR(399,IBIEN399,"CP",IBCP,"LNPRV",+IBN,0)),U,2)
"RTN","IBCEFP",268,0)
 Q RSLT
"RTN","IBCEFP",269,0)
 ;
"RTN","IBCEFP",270,0)
 ;Input:
"RTN","IBCEFP",271,0)
 ;IBXIEN - Internal Entry Number for the current bill/claim
"RTN","IBCEFP",272,0)
 ;IBXSAVE - Array for returning the data
"RTN","IBCEFP",273,0)
 ;
"RTN","IBCEFP",274,0)
 ;Output:
"RTN","IBCEFP",275,0)
 ;IBXSAVE - Data Array
"RTN","IBCEFP",276,0)
AMB(IBXIEN,IBXSAVE) ; Gather Ambulance Data for AMB Record(s) - IB*2.0*447/TAZ
"RTN","IBCEFP",277,0)
 N NODE,CODE,CNT,IBXDATA
"RTN","IBCEFP",278,0)
 K IBXSAVE("AMB")
"RTN","IBCEFP",279,0)
 F NODE="U5","U6","U7" S IBXDATA=$G(^DGCR(399,IBXIEN,NODE)) I $TR(IBXDATA,U)'="" S IBXSAVE("AMB",NODE)=IBXDATA
"RTN","IBCEFP",280,0)
 S CODE="",CNT=0
"RTN","IBCEFP",281,0)
 F  S CODE=$O(^DGCR(399,IBXIEN,"U9","B",CODE)) Q:'CODE  D
"RTN","IBCEFP",282,0)
 . S IBXDATA=$P($G(^IBE(353.5,CODE,0)),U,1) I IBXDATA="" Q
"RTN","IBCEFP",283,0)
 . S CNT=CNT+1,IBXSAVE("AMB","U9",CNT)=IBXDATA
"RTN","IBCEFP",284,0)
 Q
"RTN","IBCEFP",285,0)
 ;
"RTN","IBCEFP",286,0)
SNDS2(IBXDATA,PIECE) ;Determine if a SUB2 record is necessary.
"RTN","IBCEFP",287,0)
 ; Input: IBXDATA
"RTN","IBCEFP",288,0)
 ;       May contain data from field 232 of file 399.
"RTN","IBCEFP",289,0)
 ; Output: IBXDATA
"RTN","IBCEFP",290,0)
 ;       Returns Output for piece 2 or 3 or 1 for any other piece (like 1.5)
"RTN","IBCEFP",291,0)
 ;Any time that ONE of the following criteria is met we should send a SUB2 record
"RTN","IBCEFP",292,0)
 ; 1. Incoming IBXDATA is not null SEND - Non-VA facility in field 232 of file 399
"RTN","IBCEFP",293,0)
 ; 2. If the service facility is a VA Institution in file 4 or a non-VA facility in file 355.93 SEND
"RTN","IBCEFP",294,0)
 ; 3. Not a switchback payer $$SENDSF^IBCEF79(IBXIEN)'=0 SEND
"RTN","IBCEFP",295,0)
 ;
"RTN","IBCEFP",296,0)
 ; MRD;IB*2.0*516 - Due to fields being marked for deletion, the
"RTN","IBCEFP",297,0)
 ; function $$SENDSF^IBCEF79 will always return '1'.  Refer to
"RTN","IBCEFP",298,0)
 ; that function and INSFLGS^^IBCEF79 for more information.
"RTN","IBCEFP",299,0)
 ;
"RTN","IBCEFP",300,0)
 I IBXDATA="" D
"RTN","IBCEFP",301,0)
 . N Z
"RTN","IBCEFP",302,0)
 . S Z=$P($$B^IBCEF79(IBXIEN),U,3)
"RTN","IBCEFP",303,0)
 . ;S Z1=$$SENDSF^IBCEF79(IBXIEN)
"RTN","IBCEFP",304,0)
 . ;S IBXDATA=$S(Z="":0,'Z1:0,1:1)
"RTN","IBCEFP",305,0)
 . S IBXDATA=$S(Z="":0,1:1)
"RTN","IBCEFP",306,0)
 . Q
"RTN","IBCEFP",307,0)
 I 'IBXDATA S IBXDATA=""
"RTN","IBCEFP",308,0)
 I IBXDATA'="" S IBXDATA=$S(PIECE=2:77,PIECE=3:2,1:1)
"RTN","IBCEFP",309,0)
 Q IBXDATA
"RTN","IBCEM03")
0^54^B48666797^B46770743
"RTN","IBCEM03",1,0)
IBCEM03 ;ALB/TMP - 837 EDI RESUBMIT INDIVIDUAL BILL PROCESSING ;17-SEP-96
"RTN","IBCEM03",2,0)
 ;;2.0;INTEGRATED BILLING;**137,199,296,348,349,592,623**;21-MAR-94;Build 70
"RTN","IBCEM03",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEM03",4,0)
 Q
"RTN","IBCEM03",5,0)
 ;
"RTN","IBCEM03",6,0)
BILL2 ; Resubmit a transmitted bill with a new batch #
"RTN","IBCEM03",7,0)
 N DIC,DIR,DIE,DA,DR,IB,IB0,IBDA,IBDA1,IBE,IBSTAT,IBBDA,IBOK,IBNEW,Y,ZTSK,IBTEST
"RTN","IBCEM03",8,0)
 K ^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCEM03",9,0)
 ;
"RTN","IBCEM03",10,0)
 S DIR("A")="ARE YOU RESUBMITTING CLAIMS FOR TESTING?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEM03",11,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","IBCEM03",12,0)
 I +Y S ^TMP("IBEDI_TEST_BATCH",$J)=1
"RTN","IBCEM03",13,0)
ASK N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCEM03",14,0)
 S IBTEST=+$G(^TMP("IBEDI_TEST_BATCH",$J))
"RTN","IBCEM03",15,0)
 ; Only auth or printed transmittable bill valid for non-test
"RTN","IBCEM03",16,0)
 ; All previously transmitted valid for test
"RTN","IBCEM03",17,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ",DIC("S")=$S('IBTEST:"I $P($G(^(""TX"")),U,2),$P($G(^(0)),U,13)'="""",""234""[$P($G(^(0)),U,13)",1:"I $O(^IBA(364,""B"",+Y,0))")
"RTN","IBCEM03",18,0)
 I IBTEST S DIC("A")="Select BILL/CLAIMS BILL NUMBER (FOR RESUBMIT AS TEST): "
"RTN","IBCEM03",19,0)
 D ^DIC K DIC
"RTN","IBCEM03",20,0)
 I Y<0 D  Q
"RTN","IBCEM03",21,0)
 . Q:'IBTEST
"RTN","IBCEM03",22,0)
 . I $O(^TMP("IBEDI_TEST_BATCH",$J,0)) D
"RTN","IBCEM03",23,0)
 .. M ^TMP("IBRESUBMIT",$J)=^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCEM03",24,0)
 .. D ONE^IBCE837
"RTN","IBCEM03",25,0)
 . ;
"RTN","IBCEM03",26,0)
 . K ^TMP("IBEDI_TEST_BATCH",$J),^TMP("IBRESUBMIT",$J)
"RTN","IBCEM03",27,0)
 ;
"RTN","IBCEM03",28,0)
 S IBIFN=+Y,IBDA=+$$LAST364^IBCEF4(IBIFN),IB0=$G(^IBA(364,IBDA,0)),IBSTAT=$P(IB0,U,3)
"RTN","IBCEM03",29,0)
 ;
"RTN","IBCEM03",30,0)
 I IB0="" W !,"Bill does not exist in BILL TRANSMISSION file" G ASK
"RTN","IBCEM03",31,0)
 I IBTEST,$D(^TMP("IBEDI_TEST_BATCH",$J,IBDA)) W !,"Bill already selected for test transmission" G ASK
"RTN","IBCEM03",32,0)
 I $$COBN^IBCEF(IBIFN)=1,IBTEST S IBOK=1 D  G:'IBOK ASK
"RTN","IBCEM03",33,0)
 . S DIR("A")="BILL IS A PRIMARY BILL, ARE YOU SURE YOU WANT TO SEND IT AS A TEST CLAIM?: "
"RTN","IBCEM03",34,0)
 . S DIR("B")="NO",DIR(0)="YA" W ! D ^DIR K DIR
"RTN","IBCEM03",35,0)
 . I Y'=1 S IBOK=0
"RTN","IBCEM03",36,0)
 ;
"RTN","IBCEM03",37,0)
 I 'IBTEST,IBSTAT="X" W !,"Bill is currently awaiting extract - will be submitted with next batch run" G ASK
"RTN","IBCEM03",38,0)
 S IBBDA=+$P(IB0,U,2),IB=$P($G(^IBA(364.1,IBBDA,0)),U,9)
"RTN","IBCEM03",39,0)
 ;
"RTN","IBCEM03",40,0)
 I IB,'IBTEST D  G:'IBOK ASK
"RTN","IBCEM03",41,0)
 . S IBOK=1,ZTSK=IB D STAT^%ZTLOAD
"RTN","IBCEM03",42,0)
 . I ZTSK(0)=0 S DIE="^IBA(364.1,",DA=IBBDA,DR=".09///@" D ^DIE Q  ;Task not scheduled - delete task #
"RTN","IBCEM03",43,0)
 . I "125"[ZTSK(1) W *7,!,"Cannot resubmit this bill.",!,"This bill's current batch is already ",$S("2"[ZTSK(1):"being resubmitted",1:"scheduled for resubmission")," - Task # is: ",IB,! S IBOK=0
"RTN","IBCEM03",44,0)
 ;
"RTN","IBCEM03",45,0)
 W !
"RTN","IBCEM03",46,0)
 S DIR("A",1)="   Previously In Batch #: "_$$EXPAND^IBTRE(364,.02,$P(IB0,U,2))
"RTN","IBCEM03",47,0)
 S DIR("A",2)="Bill Transmission Status: "_$$EXPAND^IBTRE(364,.03,IBSTAT)
"RTN","IBCEM03",48,0)
 S DIR("A",3)="             Status Date: "_$$FMTE^XLFDT($P(IB0,U,4),2)
"RTN","IBCEM03",49,0)
 S DIR("A",5)=" "
"RTN","IBCEM03",50,0)
 S DIR("A",4)="     Current Bill Status: "_$$EXPAND^IBTRE(399,.13,$P($G(^DGCR(399,+IBIFN,0)),U,13))
"RTN","IBCEM03",51,0)
 I 'IBTEST,IBSTAT'="P" S DIR("A",11)="WARNING - BILL TRANSMITTED PREVIOUSLY" S:IBSTAT?1"A".E DIR("A",11)=DIR("A",11)_" & CONFIRMED AS RECEIVED BY "_$P("AUSTIN^GENTRAN^INTERMEDIARY^CARRIER",U,$TR(IBSTAT,"A")+1)
"RTN","IBCEM03",52,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO RESUBMIT THIS BILL"_$S('IBTEST:"",1:" AS A TEST CLAIM")_"?: "
"RTN","IBCEM03",53,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","IBCEM03",54,0)
 D ^DIR K DIR
"RTN","IBCEM03",55,0)
 ;
"RTN","IBCEM03",56,0)
 W ! G:'Y ASK
"RTN","IBCEM03",57,0)
 ;
"RTN","IBCEM03",58,0)
 I IBTEST S ^TMP("IBEDI_TEST_BATCH",$J,IBDA)="" G ASK
"RTN","IBCEM03",59,0)
 ;
"RTN","IBCEM03",60,0)
 S IBDA1=+$$ADDTBILL^IBCB1(IBIFN) ;Add a new transmit bill record
"RTN","IBCEM03",61,0)
 ;
"RTN","IBCEM03",62,0)
 S Y=$$TX1^IBCB1(IBDA1,1)
"RTN","IBCEM03",63,0)
 ;
"RTN","IBCEM03",64,0)
 I 'Y D  G ASK
"RTN","IBCEM03",65,0)
 . W !,*7,"An error has occurred ... bill NOT re-submitted!!"
"RTN","IBCEM03",66,0)
 . S DIK="^IBA(364,",DA=IBDA1 D:DA ^DIK
"RTN","IBCEM03",67,0)
 . L -^IBA(364,IBDA)
"RTN","IBCEM03",68,0)
 ;
"RTN","IBCEM03",69,0)
 S IBNEW=$P($G(^IBA(364,+IBDA1,0)),U,2)
"RTN","IBCEM03",70,0)
 ;
"RTN","IBCEM03",71,0)
 ;Update the old transmit bill record
"RTN","IBCEM03",72,0)
 D UPDEDI^IBCEM(IBDA,"R")
"RTN","IBCEM03",73,0)
 ;
"RTN","IBCEM03",74,0)
 W !,"Bill # ",$P($G(^DGCR(399,+IB0,0)),U)," was re-submitted in batch # ",$P($G(^IBA(364.1,+IBNEW,0)),U)
"RTN","IBCEM03",75,0)
 ;
"RTN","IBCEM03",76,0)
 L -^IBA(364,IBDA)
"RTN","IBCEM03",77,0)
 G ASK
"RTN","IBCEM03",78,0)
 ;
"RTN","IBCEM03",79,0)
PRINT1(IBIFN,IBDA,IB364,IBRESUB) ; Print bill, submit manually as resolution
"RTN","IBCEM03",80,0)
 ; for a returned message
"RTN","IBCEM03",81,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEM03",82,0)
 ; IBDA = array returned from selection of message
"RTN","IBCEM03",83,0)
 ; IB364 = ien of transmit bill entry in file 364
"RTN","IBCEM03",84,0)
 ; IBRESUB = flag to indicate if bill is being resubmitted via print
"RTN","IBCEM03",85,0)
 ;
"RTN","IBCEM03",86,0)
 N IBAC,IBV,IB399,DFN,ZTSK,PRCASV,IBHOLD,IBTXPRT
"RTN","IBCEM03",87,0)
 W !
"RTN","IBCEM03",88,0)
 I IBIFN="" S IBDA="" G PRINT1Q
"RTN","IBCEM03",89,0)
 S IB399=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEM03",90,0)
 I "34"'[$P(IB399,U,13) W !,*7,"Bill status must be AUTHORIZED or PRNT/TX to print the bill" S IBDA="" G PRINT1Q
"RTN","IBCEM03",91,0)
 ;
"RTN","IBCEM03",92,0)
 I $P($G(^DGCR(399,IBIFN,"S")),U,14)=DT W !,*7,"This bill was last printed today.  You must wait at least 1 day from the last",!,"print date to print this bill using this function." S IBDA="" D PAUSE^VALM1 G PRINT1Q
"RTN","IBCEM03",93,0)
 ;
"RTN","IBCEM03",94,0)
 S IBV=1,IBAC=4,DFN=$P(IB399,U,2),IBTXPRT=0
"RTN","IBCEM03",95,0)
 M IBHOLD("IBDA")=IBDA
"RTN","IBCEM03",96,0)
 D 4^IBCB1,ENS^%ZISS
"RTN","IBCEM03",97,0)
 M IBDA=IBHOLD("IBDA")
"RTN","IBCEM03",98,0)
 ;
"RTN","IBCEM03",99,0)
 I 'IBTXPRT W !,"Bill was not printed" S IBDA="" G PRINT1Q
"RTN","IBCEM03",100,0)
 ;
"RTN","IBCEM03",101,0)
 D UPDEDI^IBCEM(IB364,"P")
"RTN","IBCEM03",102,0)
 ;
"RTN","IBCEM03",103,0)
PRINT1Q Q
"RTN","IBCEM03",104,0)
 ;
"RTN","IBCEM03",105,0)
SUB1 ; Select bills in ready for extract status to transmit individually
"RTN","IBCEM03",106,0)
 N IB0,IB399,IBDA,IBIFN,IBSEL,IBU,X,Y,DA,DIC,Z,DIR
"RTN","IBCEM03",107,0)
 K ^TMP("IBSELX",$J)
"RTN","IBCEM03",108,0)
 ;
"RTN","IBCEM03",109,0)
 S IBSEL=""
"RTN","IBCEM03",110,0)
 F  D  Q:'IBSEL
"RTN","IBCEM03",111,0)
 . S DIR("S")="I $P(^(0),U,3)=""X"""
"RTN","IBCEM03",112,0)
 . S DIR(0)="PAO^364:AEMQ",DIR("A")="SELECT "_$S($D(^TMP("IBSELX",$J)):"NEXT ",1:"")_"BILL TO TRANSMIT: "
"RTN","IBCEM03",113,0)
 . S DIR("?")="ONLY BILLS IN 'READY FOR EXTRACT' STATUS CAN BE TRANSMITTED WITH THIS OPTION"
"RTN","IBCEM03",114,0)
 . D ^DIR K DIR
"RTN","IBCEM03",115,0)
 . I Y'>0 K:Y=U ^TMP("IBSELX",$J) S IBSEL="" Q
"RTN","IBCEM03",116,0)
 . S IBSEL=+Y
"RTN","IBCEM03",117,0)
 . S IBDA=+Y,IB0=$G(^IBA(364,IBDA,0)),IBIFN=+IB0,IBU=$G(^DGCR(399,IBIFN,"U")),IB399=$G(^(0))
"RTN","IBCEM03",118,0)
 . S Z=+$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCEM03",119,0)
 . I '$$TXMT^IBCEF4(IBIFN,.IBNOTX),IBNOTX=2 D  Q
"RTN","IBCEM03",120,0)
 .. W !,$S(Z:"MRA",1:"EDI")_" TRANSMISSION PARAMETER HAS BEEN TURNED OFF",!!,"BILL CANNOT BE SELECTED"
"RTN","IBCEM03",121,0)
 . ;
"RTN","IBCEM03",122,0)
 . W !
"RTN","IBCEM03",123,0)
 . ;JWS;IB*2.0*592; added form #7 J430D to display
"RTN","IBCEM03",124,0)
 . S DIR("A",1)="      YOU HAVE SELECTED BILL #: "_$P(IB399,U)_"  ("_$S($$INPAT^IBCEF(IBIFN):"INPATIENT",1:"OUTPATIENT")_"/"_$S($$FT^IBCEF(IBIFN)=3:"UB-04",$$FT^IBCEF(IBIFN)=7:"J430D",1:"CMS-1500")_" FORMAT)"
"RTN","IBCEM03",125,0)
 . S DIR("A",2)="                  PATIENT NAME: "_$E($P($G(^DPT(+$P(IB399,U,2),0)),U)_$J("",28),1,28)_"  SSN: "_$P($G(^DPT(+$P(IB399,U,2),0)),U,9)
"RTN","IBCEM03",126,0)
 . S DIR("A",3)="                  CARE DATE(S): "_$$EXPAND^IBTRE(399,151,$P(IBU,U))_" - "_$$EXPAND^IBTRE(399,152,$P(IBU,U,2))
"RTN","IBCEM03",127,0)
 . S DIR("A",4)="'READY TO EXTRACT' STATUS DATE: "_$$EXPAND^IBTRE(364,.04,$P(IB0,U,4))
"RTN","IBCEM03",128,0)
 . S DIR("?",1)=" "
"RTN","IBCEM03",129,0)
 . S DIR("A",5)=" ",DIR("?")="IF THIS IS THE BILL YOU WANT TO TRANSMIT, RESPOND YES, OTHERWISE, RESPOND NO"
"RTN","IBCEM03",130,0)
 . S DIR("A")="ARE YOU SURE THIS IS THE CORRECT BILL TO TRANSMIT?: "
"RTN","IBCEM03",131,0)
 . S DIR(0)="YAO",DIR("B")="NO" D ^DIR K DIR W !
"RTN","IBCEM03",132,0)
 . I Y'=1 W !,"BILL NOT SELECTED" Q
"RTN","IBCEM03",133,0)
 . ;
"RTN","IBCEM03",134,0)
 . S ^TMP("IBSELX",$J,IBDA)=""
"RTN","IBCEM03",135,0)
 ;
"RTN","IBCEM03",136,0)
 I '$O(^TMP("IBSELX",$J,0)) G SUB1Q
"RTN","IBCEM03",137,0)
 ;
"RTN","IBCEM03",138,0)
 W !,"Bills to be transmitted: "
"RTN","IBCEM03",139,0)
 S Z=0 F  S Z=$O(^TMP("IBSELX",$J,Z)) Q:'Z  W !,?8,$P($G(^DGCR(399,+$G(^IBA(364,Z,0)),0)),U)
"RTN","IBCEM03",140,0)
 W !
"RTN","IBCEM03",141,0)
 S DIR("A")="OK TO TRANSMIT NOW?: ",DIR(0)="YA0",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEM03",142,0)
 G:Y'=1 SUB1Q
"RTN","IBCEM03",143,0)
 W !
"RTN","IBCEM03",144,0)
 S ^TMP("IBSELX",$J)=0
"RTN","IBCEM03",145,0)
 D ONE^IBCE837
"RTN","IBCEM03",146,0)
 ;JWS;IB*2.0*623;if 837 FHIR enabled, display appropriate message
"RTN","IBCEM03",147,0)
 I $$GET1^DIQ(350.9,"1,",8.21,"I") D  G SUB1Q
"RTN","IBCEM03",148,0)
 . W !,"BILL(s) placed onto 837 FHIR Transaction list. They will be submitted shortly..."
"RTN","IBCEM03",149,0)
 W !,"BILL(s) TRANSMITTED ... BATCH #(s): "
"RTN","IBCEM03",150,0)
 S Z=0 F  S Z=$O(^TMP("IBCE-BATCH",$J,Z)) Q:'Z  W Z,$S($O(^(Z)):", ",1:"")
"RTN","IBCEM03",151,0)
 I '$O(^TMP("IBCE-BATCH",$J,0)) W !,"NO BILL(S) TRANSMITTED - CHECK ALERTS/MAIL FOR DETAILS"
"RTN","IBCEM03",152,0)
 ;
"RTN","IBCEM03",153,0)
SUB1Q D PAUSE^VALM1
"RTN","IBCEM03",154,0)
 K ^TMP("IBSELX",$J),^TMP("IBCE-BATCH",$J)
"RTN","IBCEM03",155,0)
 Q
"RTN","IBCEM03",156,0)
 ;
"RTN","IBCEPTC")
0^57^B95452309^B93542817
"RTN","IBCEPTC",1,0)
IBCEPTC ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS ; 4/12/05 11:15am
"RTN","IBCEPTC",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348,349,547,592,623**;21-MAR-94;Build 70
"RTN","IBCEPTC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEPTC",4,0)
 ;
"RTN","IBCEPTC",5,0)
EN ; Main entrypoint
"RTN","IBCEPTC",6,0)
 ; IBDT1,IBDT2 = last transmit date range to use
"RTN","IBCEPTC",7,0)
 ; IBSORT = primary sort criteria to use B=BATCH #,I=INS CO NAME
"RTN","IBCEPTC",8,0)
 ; IBFORM = form type to limit selection to U=UB-04,C=CMS-1500,J=J430D, OR A=ALL
"RTN","IBCEPTC",9,0)
 ; IBCRIT = the additional sort criteria needed
"RTN","IBCEPTC",10,0)
 ; IBPTCCAN = whether or not to include cancelled claims
"RTN","IBCEPTC",11,0)
 ; IBRCBFPC = whether or not to include force print @ clearinghouse
"RTN","IBCEPTC",12,0)
 ; ^TMP("IB_PREV_CLAIM_INS",$J) = 1 for specific ins co/null for all
"RTN","IBCEPTC",13,0)
 ;                        ^($J,1,ien)="" for ien of each ins co selected
"RTN","IBCEPTC",14,0)
 ;                        ^($J,2,payer ID,ien)="" if selected
"RTN","IBCEPTC",15,0)
 ; IBREP = format output should be put in R=report,S=Listman
"RTN","IBCEPTC",16,0)
 ;
"RTN","IBCEPTC",17,0)
 N DIR,DIC,X,Y,Z,Z0,Z1,IBHOW,IBACT,IBCT,IBREP,IBCRIT,IBDT1,IBDT2,IBLOC
"RTN","IBCEPTC",18,0)
 N IBFORM,IBOK,IBQUIT,IBSORT,IBY,DTOUT,DUOUT,%ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCEPTC",19,0)
 N POP,IBPAYER,EDI,INST,PROF,IBPTCCAN,DIROUT,DIRUT,DTOUT,DUOUT,IBRCBFPC
"RTN","IBCEPTC",20,0)
 ;
"RTN","IBCEPTC",21,0)
 W !!,"*** Please Note ***"
"RTN","IBCEPTC",22,0)
 W ?20,"2 '^' are needed to abort this option (^^)"
"RTN","IBCEPTC",23,0)
 W !?20,"1 '^' brings you back to the previous prompt (^)"
"RTN","IBCEPTC",24,0)
 W !
"RTN","IBCEPTC",25,0)
 ; IB*2.0*547 add new prompt for locally printed vs. transmitted claims
"RTN","IBCEPTC",26,0)
 S DIR(0)="SA^P:Printed;T:Transmitted",DIR("A")="Run report for (P)rinted or (T)ransmitted claims?: ",DIR("B")="Transmitted"
"RTN","IBCEPTC",27,0)
 D ^DIR K DIR
"RTN","IBCEPTC",28,0)
 I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","IBCEPTC",29,0)
 ; Set a flag here to indicate user wants locally printed claims and use that to control how the rest of the prompts act.
"RTN","IBCEPTC",30,0)
 S IBLOC=$S(Y="T":"",1:1)
"RTN","IBCEPTC",31,0)
 ;
"RTN","IBCEPTC",32,0)
Q1 ;
"RTN","IBCEPTC",33,0)
 W !
"RTN","IBCEPTC",34,0)
 ;S DIR(0)="SA^C:Claim;B:Batch;L:List",DIR("A")="Select By: (C)laim, (B)atch or see a (L)ist to pick from?: ",DIR("B")="List"
"RTN","IBCEPTC",35,0)
 S DIR(0)="SA^C:Claim;"_$S(IBLOC:"",1:"B:Batch;")_"L:List",DIR("A")="Select By: (C)laim"_$S(IBLOC:"",1:", (B)atch")_" or see a (L)ist to pick from?: ",DIR("B")="List"
"RTN","IBCEPTC",36,0)
 D ^DIR K DIR
"RTN","IBCEPTC",37,0)
 I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","IBCEPTC",38,0)
 S IBHOW=Y
"RTN","IBCEPTC",39,0)
 I IBLOC=1 W !,"Previously printed claims to a payer that does not accept EDI are omitted."
"RTN","IBCEPTC",40,0)
 I IBHOW="L" G Q1A
"RTN","IBCEPTC",41,0)
 ;
"RTN","IBCEPTC",42,0)
 S IBQUIT=0,IBCT=0
"RTN","IBCEPTC",43,0)
 K ^TMP($J,IBHOW)
"RTN","IBCEPTC",44,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",45,0)
 .;I IBHOW="C" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Claim: ",DIR(0)="PA^364:AEMQZ",DIR("S")="I '$P(^(0),U,7),'$O(^IBA(364,""B"",+^(0),Y))"
"RTN","IBCEPTC",46,0)
 . ;JWS;IB*2.0*623;allow previously trans claims in test to be resubmitted if non-production environment "!'$$PROD^XUPROD(1)"
"RTN","IBCEPTC",47,0)
 . I IBHOW="C",IBLOC="" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Claim: ",DIR(0)="PA^364:AEMQZ",DIR("S")="I ('$P(^(0),U,7)!'$$PROD^XUPROD(1)),'$O(^IBA(364,""B"",+^(0),Y))"
"RTN","IBCEPTC",48,0)
 . I IBHOW="C",IBLOC=1 S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Locally Printed Claim: ",DIR(0)="PA^399:AEMQZ",DIR("S")="I '$D(^IBA(364,""B"",Y)),$$INSOK^IBCEF4(+$$CURR^IBCEF2(Y))"
"RTN","IBCEPTC",49,0)
 . I IBHOW="B" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Batch: ",DIR(0)="PA^IBA(364.1,:AEMQ^W ""  "",$P(^(0),U,3),"" Claims""",DIR("S")="I '$P(^(0),U,14)"
"RTN","IBCEPTC",50,0)
 . S DIR("?")="^D SELDSP^IBCEPTC(IBHOW)"
"RTN","IBCEPTC",51,0)
 . S:IBCT $P(DIR(0),U)=$P(DIR(0),U)_"O" ; Optional prompt after one is selected
"RTN","IBCEPTC",52,0)
 . D ^DIR K DIR
"RTN","IBCEPTC",53,0)
 . I Y'>0 S IBQUIT=$S(X="^":2,X="^^":3,1:1) Q
"RTN","IBCEPTC",54,0)
 . S IBY=$S(IBHOW="C":+Y,1:""),Y=$S(IBHOW="C":+Y(0),1:Y) S:IBLOC=1 Y=IBY
"RTN","IBCEPTC",55,0)
 . I '$D(^TMP($J,IBHOW,+Y)) S IBCT=IBCT+1,^TMP($J,IBHOW,+Y)=IBY
"RTN","IBCEPTC",56,0)
 ;
"RTN","IBCEPTC",57,0)
 G:IBQUIT=3 ENQ
"RTN","IBCEPTC",58,0)
 G:IBQUIT=2!'$O(^TMP($J,IBHOW,0)) Q1
"RTN","IBCEPTC",59,0)
 S Z=0
"RTN","IBCEPTC",60,0)
 I IBHOW="C" F  S Z=$O(^TMP($J,"C",Z)) Q:'Z  S ^TMP("IB_PREV_CLAIM_SELECT",$J,Z,0)=^TMP($J,"C",Z)
"RTN","IBCEPTC",61,0)
 I IBHOW="B" S (Z,IBCT)=0 F  S Z=$O(^TMP($J,"B",Z)) Q:'Z  D
"RTN","IBCEPTC",62,0)
 . S Z0=0 F  S Z0=$O(^IBA(364,"C",Z,Z0)) Q:'Z0  S Z1=+$G(^IBA(364,Z0,0)) I Z1,'$D(^TMP("IB_PREV_CLAIM_SELECT",$J,Z1,0)) S ^(0)=Z0,IBCT=IBCT+1
"RTN","IBCEPTC",63,0)
 S ^TMP("IB_PREV_CLAIM_SELECT",$J)=IBCT
"RTN","IBCEPTC",64,0)
 D RESUB^IBCEPTC3
"RTN","IBCEPTC",65,0)
 G ENQ
"RTN","IBCEPTC",66,0)
 ;
"RTN","IBCEPTC",67,0)
Q1A K ^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC",68,0)
 S DIR(0)="SA^A:All Payers;S:Selected Payers"
"RTN","IBCEPTC",69,0)
 S DIR("A")="Run for (A)ll Payers or (S)elected Payers?: " S DIR("B")="Selected Payers"
"RTN","IBCEPTC",70,0)
 W !!,"PAYER SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",71,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",72,0)
 I $D(DTOUT)!$D(DUOUT) G Q1
"RTN","IBCEPTC",73,0)
 ;
"RTN","IBCEPTC",74,0)
 I Y="A" S ^TMP("IB_PREV_CLAIM_INS",$J)="" G Q2
"RTN","IBCEPTC",75,0)
 ;
"RTN","IBCEPTC",76,0)
 ; esg - 11/21/05 - patch 320 question
"RTN","IBCEPTC",77,0)
 W !
"RTN","IBCEPTC",78,0)
 S DIR(0)="Y",DIR("A")="   Include all payers with the same electronic Payer ID",DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCEPTC",79,0)
 I $D(DIROUT) G ENQ
"RTN","IBCEPTC",80,0)
 I $D(DIRUT) G Q1A
"RTN","IBCEPTC",81,0)
 S IBPAYER=Y
"RTN","IBCEPTC",82,0)
 W !
"RTN","IBCEPTC",83,0)
 ;
"RTN","IBCEPTC",84,0)
 S ^TMP("IB_PREV_CLAIM_INS",$J)=1
"RTN","IBCEPTC",85,0)
 S IBQUIT=0
"RTN","IBCEPTC",86,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",87,0)
 . ; IB*2.0*547 allow lookup by EDI#'s using new cross-ref
"RTN","IBCEPTC",88,0)
 . ;S DIC(0)="AEMQ",DIC=36,DIC("A")="   Select Insurance Company: "
"RTN","IBCEPTC",89,0)
 . S DIC(0)="AEMQn",DIC=36,DIC("A")="   Select Insurance Company: "
"RTN","IBCEPTC",90,0)
 . I $O(^TMP("IB_PREV_CLAIM_INS",$J,1,"")) S DIC("A")="   Select Another Insurance Company: "
"RTN","IBCEPTC",91,0)
 . S DIC("W")="D INSLIST^IBCEMCA(Y)"
"RTN","IBCEPTC",92,0)
 . ;D ^DIC K DIC                   ; lookup
"RTN","IBCEPTC",93,0)
 . N D S D="B^AEI^AEP" D MIX^DIC1 K DIC,D
"RTN","IBCEPTC",94,0)
 . I X="^^" S IBQUIT=2 Q          ; user entered "^^"
"RTN","IBCEPTC",95,0)
 . I +Y'>0 S IBQUIT=1 Q           ; user is done
"RTN","IBCEPTC",96,0)
 . W !
"RTN","IBCEPTC",97,0)
 . S ^TMP("IB_PREV_CLAIM_INS",$J,1,+Y)=""
"RTN","IBCEPTC",98,0)
 . I 'IBPAYER Q
"RTN","IBCEPTC",99,0)
 . S EDI=$$UP^XLFSTR($G(^DIC(36,+Y,3)))
"RTN","IBCEPTC",100,0)
 . S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)
"RTN","IBCEPTC",101,0)
 . I PROF'="",PROF'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,PROF,+Y)=""
"RTN","IBCEPTC",102,0)
 . I INST'="",INST'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,INST,+Y)=""
"RTN","IBCEPTC",103,0)
 . Q
"RTN","IBCEPTC",104,0)
 ;
"RTN","IBCEPTC",105,0)
 I IBQUIT=2 G ENQ
"RTN","IBCEPTC",106,0)
 ;
"RTN","IBCEPTC",107,0)
 I '$O(^TMP("IB_PREV_CLAIM_INS",$J,1,0)) D  G Q1A
"RTN","IBCEPTC",108,0)
 . W *7,!!?3,"No payers have been selected.  Please try again."
"RTN","IBCEPTC",109,0)
 . Q
"RTN","IBCEPTC",110,0)
 ;
"RTN","IBCEPTC",111,0)
Q2 ;; JWS;IB*2.0*592 US1108 - Dental EDI 837D / form J430D
"RTN","IBCEPTC",112,0)
 ;IA# 10026
"RTN","IBCEPTC",113,0)
 S DIR(0)="SA^C:CMS-1500;U:UB-04;J:J430D;A:All",DIR("B")="All"
"RTN","IBCEPTC",114,0)
 S DIR("A")="Run for (U)B-04, (C)MS-1500, (J)430D or (A)ll: "
"RTN","IBCEPTC",115,0)
 W !!,"BILL FORM TYPE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",116,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",117,0)
 I $D(DTOUT)!$D(DUOUT) G Q1A
"RTN","IBCEPTC",118,0)
 S IBFORM=Y
"RTN","IBCEPTC",119,0)
 ;
"RTN","IBCEPTC",120,0)
Q3 S DIR(0)="DA^0:9999999:EPX",DIR("A")="Start with Date "_$S(IBLOC:"First Printed:  ",1:"Last Transmitted: ")
"RTN","IBCEPTC",121,0)
 ;S DIR("?",1)="This is the earliest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",122,0)
 S DIR("?",1)="This is the earliest date on which a batch that you want to include on this",DIR("?",2)=" report was "_$S(IBLOC=1:"first printed",1:"last transmitted")_". You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",123,0)
 ;W !!,"LAST BATCH TRANSMIT DATE RANGE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",124,0)
 W !!,$S(IBLOC:"FIRST PRINT",1:"LAST BATCH TRANSMIT")_" DATE RANGE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",125,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",126,0)
 I $D(DTOUT)!$D(DUOUT) G Q2
"RTN","IBCEPTC",127,0)
 S IBDT1=Y
"RTN","IBCEPTC",128,0)
 S IBDT2=$$FMADD^XLFDT(IBDT1,90) I IBDT2>DT S IBDT2=DT
"RTN","IBCEPTC",129,0)
 S DIR("?",1)="This is the latest date on which a batch that you want to include on this",DIR("?",2)=" report was "_$S(IBLOC:"first printed",1:"last transmitted")_". You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",130,0)
 S DIR("B")=$$FMTE^XLFDT(IBDT2,2),DIR(0)="DA^"_IBDT1_":"_IBDT2_":EPX"
"RTN","IBCEPTC",131,0)
 S DIR("A")="Go to Date "_$S(IBLOC:"First Printed",1:"Last Transmitted")_":("_$$FMTE^XLFDT(IBDT1,2)_"-"_$$FMTE^XLFDT(IBDT2,2)_"): " D ^DIR K DIR
"RTN","IBCEPTC",132,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",133,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",134,0)
 S IBDT2=Y
"RTN","IBCEPTC",135,0)
 ;
"RTN","IBCEPTC",136,0)
Q4 ; Additional selection criteria
"RTN","IBCEPTC",137,0)
 S DIR(0)="SAO^1:MRA Secondary Only;2:Primary Claims Only;3:Secondary Claims Only;4:Claims Previously Printed at Clearinghouse"
"RTN","IBCEPTC",138,0)
 S DIR("A",1)="ADDITIONAL SELECTION CRITERIA:",DIR("A",2)=" ",DIR("A",3)="1 - MRA Secondary Only",DIR("A",4)="2 - Primary Claims Only",DIR("A",5)="3 - Secondary Claims Only"
"RTN","IBCEPTC",139,0)
 S DIR("A",6)=$S(IBLOC:"",1:"4 - Claims Sent to Print at Clearinghouse Only"),DIR("A",7)=" ",DIR("A")="Select Additional Limiting Criteria (optional): "
"RTN","IBCEPTC",140,0)
 S DIR("?")="Select one of the listed criteria to further limit the claims to include"
"RTN","IBCEPTC",141,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",142,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",143,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",144,0)
 S IBCRIT=Y
"RTN","IBCEPTC",145,0)
 ;
"RTN","IBCEPTC",146,0)
Q41 ; Ask user if they want to include cancelled claims
"RTN","IBCEPTC",147,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include cancelled claims"
"RTN","IBCEPTC",148,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",149,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",150,0)
 I $D(DIRUT) G Q4
"RTN","IBCEPTC",151,0)
 S IBPTCCAN=Y
"RTN","IBCEPTC",152,0)
 ; IB*2.0*547 skip next 2 questions if looking for locally printed claims
"RTN","IBCEPTC",153,0)
 I IBLOC S IBSORT=2,IBRCBFPC=0 G Q6
"RTN","IBCEPTC",154,0)
 ;
"RTN","IBCEPTC",155,0)
Q42 ; Include claims that are forced to print at clearinghouse?
"RTN","IBCEPTC",156,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include claims Forced to Print at the Clearinghouse"
"RTN","IBCEPTC",157,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",158,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",159,0)
 I $D(DIRUT) G Q41
"RTN","IBCEPTC",160,0)
 S IBRCBFPC=Y
"RTN","IBCEPTC",161,0)
 ;
"RTN","IBCEPTC",162,0)
Q5 S DIR("L",1)="Select one of the following: ",DIR("L",2)=" ",DIR("L",3)=$J("",10)_"1         Batch By Last Transmitted Date (Claims within a Batch)",DIR("L",4)=$J("",10)_"2         Current Payer (Insurance Company)"
"RTN","IBCEPTC",163,0)
 S DIR("L",5)=" "
"RTN","IBCEPTC",164,0)
 S DIR(0)="SA^1:Batch By Last Transmitted Date (Claims within a Batch);2:Current Payer (Insurance Company)",DIR("B")="Current Payer"
"RTN","IBCEPTC",165,0)
 S DIR("A")="Sort By: "
"RTN","IBCEPTC",166,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",167,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",168,0)
 I $D(DTOUT)!$D(DUOUT) G Q42
"RTN","IBCEPTC",169,0)
 S IBSORT=Y
"RTN","IBCEPTC",170,0)
 ;
"RTN","IBCEPTC",171,0)
Q6 S DIR(0)="SA^R:Report;S:Screen List"
"RTN","IBCEPTC",172,0)
 S DIR("A")="Do you want a (R)eport or a (S)creen List format?: "
"RTN","IBCEPTC",173,0)
 S DIR("B")="Screen List"
"RTN","IBCEPTC",174,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",175,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",176,0)
 I $D(DTOUT)!$D(DUOUT) G Q5
"RTN","IBCEPTC",177,0)
 S IBREP=Y
"RTN","IBCEPTC",178,0)
 ; IB *2.0*547 call new SUB-routine for locally printed claims (not in file 364)
"RTN","IBCEPTC",179,0)
 I IBREP="S",IBLOC D LOC^IBCEPTC0 G ENQ
"RTN","IBCEPTC",180,0)
 ;
"RTN","IBCEPTC",181,0)
 I IBREP="S",'IBLOC D LIST^IBCEPTC0 G ENQ
"RTN","IBCEPTC",182,0)
 ;
"RTN","IBCEPTC",183,0)
Q7 ; Select device
"RTN","IBCEPTC",184,0)
 F  S IBACT=0 D DEVSEL(.IBACT) Q:IBACT
"RTN","IBCEPTC",185,0)
 I IBACT=99 G ENQ
"RTN","IBCEPTC",186,0)
 U IO
"RTN","IBCEPTC",187,0)
 ; IB *2.0*547 call new SUB-routine for locally printed claims (not in file 364)
"RTN","IBCEPTC",188,0)
 D:'IBLOC LIST^IBCEPTC0
"RTN","IBCEPTC",189,0)
 D:IBLOC LOC^IBCEPTC0
"RTN","IBCEPTC",190,0)
 ;
"RTN","IBCEPTC",191,0)
ENQ K ^TMP("IB_PREV_CLAIM_INS",$J),^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC",192,0)
 Q
"RTN","IBCEPTC",193,0)
 ;
"RTN","IBCEPTC",194,0)
DEVSEL(IBACT) ;
"RTN","IBCEPTC",195,0)
 N DIR,POP,X,Y,ZTRTN,ZTSAVE
"RTN","IBCEPTC",196,0)
 W !!,"You will need a 132 column printer for this report!"
"RTN","IBCEPTC",197,0)
 S %ZIS="QM" D ^%ZIS I POP S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",198,0)
 I $G(IOM),IOM<132 S IBOK=1 D  I 'IBOK S IBACT=0 G DEVSELQ
"RTN","IBCEPTC",199,0)
 . S DIR(0)="YA",DIR("A",1)="This report requires output to a 132 column device.",DIR("A",2)="The device you have chosen is only set for "_IOM_".",DIR("A")="Are you sure you want to continue?: ",DIR("B")="No"
"RTN","IBCEPTC",200,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC",201,0)
 . I Y'=1 S IBOK=0 W !
"RTN","IBCEPTC",202,0)
 I $D(IO("Q")) D  S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",203,0)
 . K IO("Q")
"RTN","IBCEPTC",204,0)
 . S ZTRTN="LIST^IBCEPTC0",ZTSAVE("IBCRIT(")="",ZTSAVE("IB*")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J)")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J,")="",ZTDESC="IB - Previously Transmitted Claims Report"
"RTN","IBCEPTC",205,0)
 . D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCEPTC",206,0)
 S IBACT=1
"RTN","IBCEPTC",207,0)
DEVSELQ Q
"RTN","IBCEPTC",208,0)
 ;
"RTN","IBCEPTC",209,0)
SELDSP(IBHOW) ; Display list of selected claims/batches
"RTN","IBCEPTC",210,0)
 ; IBHOW = "C" for claims   "B" for batches
"RTN","IBCEPTC",211,0)
 N Z,DIR,CT,QUIT
"RTN","IBCEPTC",212,0)
 I '$O(^TMP($J,IBHOW,0)) Q
"RTN","IBCEPTC",213,0)
 S (CT,QUIT)=0
"RTN","IBCEPTC",214,0)
 W !!,$S(IBHOW="C":"Claims",1:"Batches")," Already Selected:"
"RTN","IBCEPTC",215,0)
 S Z=0 F  S Z=$O(^TMP($J,IBHOW,Z)) Q:'Z!QUIT  S Z0=$G(^(Z)) D  Q:QUIT
"RTN","IBCEPTC",216,0)
 . I IBHOW="C" W !,?3,$P($G(^DGCR(399,Z,0)),U) Q
"RTN","IBCEPTC",217,0)
 . W !,?3,$P($G(^IBA(364.1,Z,0)),U),"  ",$P(^(0),U,3)," Claims"
"RTN","IBCEPTC",218,0)
 . S CT=CT+1
"RTN","IBCEPTC",219,0)
 . I '(CT#10),$O(^TMP($J,IBHOW,Z)) S DIR("A")="Press return for more or '^' to exit ",DIR(0)="EA" W ! D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S QUIT=1
"RTN","IBCEPTC",220,0)
 W !
"RTN","IBCEPTC",221,0)
 Q
"RTN","IBCEPTC",222,0)
 ;
"RTN","IBCERP7")
0^58^B40941379^B33534777
"RTN","IBCERP7",1,0)
IBCERP7 ;AITC/KDM - HID   HCCH Payer ID Report ;5/4/2017
"RTN","IBCERP7",2,0)
 ;;2.0;INTEGRATED BILLING;**577,592,623**;21-MAR-94;Build 70
"RTN","IBCERP7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCERP7",4,0)
 ; This report is a PAYER ID report based on the 277stat msg responses from the clearing house
"RTN","IBCERP7",5,0)
 ; This report will give a snap shot view of what is on file at the time of running.
"RTN","IBCERP7",6,0)
 ; The results may vary each running depending on the timing of transactions posted to the file   
"RTN","IBCERP7",7,0)
 ; Refer to US976
"RTN","IBCERP7",8,0)
 ; Called by IB BILLING SUPERVISOR MENU, Opt:SYST, Opt:HID
"RTN","IBCERP7",9,0)
 ;
"RTN","IBCERP7",10,0)
ENT ; Menu Option Entry Point
"RTN","IBCERP7",11,0)
 N BEGDT,BEGIN,DT,END,ENDDT,HDR1,HDR2,HDR3,IBABEG,IBAEND,IBEOB,IBIFN,IBQUIT,LNTOT,MAX,PAGES,PGC,RNAME,U,Y
"RTN","IBCERP7",12,0)
 N ASTERISK,CNT,DASH,EORMSG,LEGEND,NONEMSG,POP
"RTN","IBCERP7",13,0)
 S (ASTERISK,IBQUIT)=0,RNAME="IBCERP7",LEGEND="'*' = No available fields to allow for an update in the insurance file"
"RTN","IBCERP7",14,0)
 D DATES Q:IBQUIT  Q:'Y
"RTN","IBCERP7",15,0)
 D DEVICE Q:POP  Q:IBQUIT
"RTN","IBCERP7",16,0)
QUE ; Queued Entry Point
"RTN","IBCERP7",17,0)
 K ^TMP(RNAME,$J)
"RTN","IBCERP7",18,0)
 D GATHER
"RTN","IBCERP7",19,0)
 D HDRINIT
"RTN","IBCERP7",20,0)
 D HEADER Q:IBQUIT
"RTN","IBCERP7",21,0)
 D PRINT
"RTN","IBCERP7",22,0)
 D EXIT
"RTN","IBCERP7",23,0)
 Q
"RTN","IBCERP7",24,0)
DATES ;  Enter the from and to dates for this report
"RTN","IBCERP7",25,0)
 ;
"RTN","IBCERP7",26,0)
 N DIR
"RTN","IBCERP7",27,0)
 W ! S DIR(0)="DA^:DT:EX",DIR("A")="Enter Earliest Date: ",DIR("B")=$$HTE^XLFDT($H-30),DIR("?")="Enter the earliest transaction date for the transaction report."
"RTN","IBCERP7",28,0)
 D ^DIR K DIR Q:'Y  S IBABEG=+Y,BEGIN=Y(0),BEGDT=$$FMTE^XLFDT(IBABEG,2)
"RTN","IBCERP7",29,0)
 ;
"RTN","IBCERP7",30,0)
 W ! S DIR(0)="DA^"_+Y_":DT:EX",DIR("A")="Enter Latest Date: ",DIR("B")=$$FMTE^XLFDT(DT,1)
"RTN","IBCERP7",31,0)
 ; DIR("?")="Enter the latest date for the transaction report."
"RTN","IBCERP7",32,0)
 D ^DIR K DIR Q:'Y  S IBAEND=+Y,END=Y(0),ENDDT=$$FMTE^XLFDT(IBAEND,2)
"RTN","IBCERP7",33,0)
 ;
"RTN","IBCERP7",34,0)
 Q
"RTN","IBCERP7",35,0)
 ;
"RTN","IBCERP7",36,0)
DEVICE ; - Ask device
"RTN","IBCERP7",37,0)
 ;
"RTN","IBCERP7",38,0)
 N %ZIS,ZTDESC,ZTIO,ZTQUEUED,ZTRTN,ZTSAVE
"RTN","IBCERP7",39,0)
 W !!!,"You will need a 132 column printer for this report",!
"RTN","IBCERP7",40,0)
 S %ZIS="QM" D ^%ZIS S:POP IBQUIT=1 Q:POP
"RTN","IBCERP7",41,0)
 I $D(IO("Q")) D  S IBQUIT=1 Q
"RTN","IBCERP7",42,0)
 . S ZTRTN="QUE^IBCERP7",ZTDESC="HCCH Payer ID Report"
"RTN","IBCERP7",43,0)
 . S ZTSAVE("BEGIN")=""
"RTN","IBCERP7",44,0)
 . S ZTSAVE("END")=""
"RTN","IBCERP7",45,0)
 . S ZTSAVE("IBABEG")=""
"RTN","IBCERP7",46,0)
 . S ZTSAVE("IBAEND")=""
"RTN","IBCERP7",47,0)
 . S ZTSAVE("BEGDT")=""
"RTN","IBCERP7",48,0)
 . S ZTSAVE("ENDDT")=""
"RTN","IBCERP7",49,0)
 . S ZTSAVE("RNAME")=""
"RTN","IBCERP7",50,0)
 . S ZTSAVE("IBQUIT")=""
"RTN","IBCERP7",51,0)
 . D ^%ZTLOAD
"RTN","IBCERP7",52,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCERP7",53,0)
 . K ZTSK D HOME^%ZIS
"RTN","IBCERP7",54,0)
 . W !!! I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR    ;pause to see task no.
"RTN","IBCERP7",55,0)
 U IO
"RTN","IBCERP7",56,0)
 Q
"RTN","IBCERP7",57,0)
 ;
"RTN","IBCERP7",58,0)
GATHER ;GO GET THE INFO BASED ON THE DATES ENTERED
"RTN","IBCERP7",59,0)
 ; uses ^DIC(36,"AEDIX",DATE,INSURANCE IEN,) to get data within date range.  
"RTN","IBCERP7",60,0)
 ; If data is within date range sets up ^TMP($J file with all data needed for the report.
"RTN","IBCERP7",61,0)
 ; ^DIC(36,"AEDIX",DATE,INSURANCE IEN ,EDI ID NUMBER,TYPE "P" OR "I")=EDI ID NUMBER ON FILE ;
"RTN","IBCERP7",62,0)
 ;
"RTN","IBCERP7",63,0)
 ;(If  EDI NUMBER ON FILE is null- it is considered  updated, not attempted)
"RTN","IBCERP7",64,0)
 ;
"RTN","IBCERP7",65,0)
 ;  Uses the insurance ien from Cross ref to extract the name, address, city, and state from the ^DIC(36,IEN)
"RTN","IBCERP7",66,0)
 ;  Uses the Type from cross ref as the EDI PayerID for the report. For printing the I="Inst";P="Prof"
"RTN","IBCERP7",67,0)
 ;  Uses the EDI ID NUMBER from Cross ref to be the NewValue on report.
"RTN","IBCERP7",68,0)
 ;  Uses the EDI ID NUMBER ON FILE from cross ref to be the OldValue on report
"RTN","IBCERP7",69,0)
 ;  If the EDI ID NUMBER ON FILE from cross ref is null- set the "updated" value for report to be "Yes", otherwise "No"
"RTN","IBCERP7",70,0)
 ;
"RTN","IBCERP7",71,0)
 ;
"RTN","IBCERP7",72,0)
 N DATE,EDIONFILE,EDINO,IBADDRESS,IBCITY,IBNAME,IBSTATE,IBPIEN,LNCNT,TYPE
"RTN","IBCERP7",73,0)
 S $P(DASH,"_",132)=""
"RTN","IBCERP7",74,0)
 S U="^",LNTOT=0,PGC=1,MAX=IOSL
"RTN","IBCERP7",75,0)
 S DATE=IBABEG-1
"RTN","IBCERP7",76,0)
 F  S DATE=$O(^DIC(36,"AEDIX",DATE)) Q:DATE=""  Q:DATE>IBAEND  D
"RTN","IBCERP7",77,0)
 . S IBPIEN="" F  S IBPIEN=$O(^DIC(36,"AEDIX",DATE,IBPIEN)) Q:IBPIEN=""  D
"RTN","IBCERP7",78,0)
 .. S EDINO="" F  S EDINO=$O(^DIC(36,"AEDIX",DATE,IBPIEN,EDINO)) Q:EDINO=""  D
"RTN","IBCERP7",79,0)
 ... S TYPE="" F  S TYPE=$O(^DIC(36,"AEDIX",DATE,IBPIEN,EDINO,TYPE)) Q:TYPE=""  D
"RTN","IBCERP7",80,0)
 .... S EDIONFILE=$G(^DIC(36,"AEDIX",DATE,IBPIEN,EDINO,TYPE))
"RTN","IBCERP7",81,0)
 .... I EDIONFILE["*" S ASTERISK=1
"RTN","IBCERP7",82,0)
 .... S IBNAME=$$GET1^DIQ(36,IBPIEN,.01)
"RTN","IBCERP7",83,0)
 .... S IBADDRESS=$$GET1^DIQ(36,IBPIEN,.111)
"RTN","IBCERP7",84,0)
 .... S IBCITY=$$GET1^DIQ(36,IBPIEN,.114)
"RTN","IBCERP7",85,0)
 .... S IBSTATE=$$GET1^DIQ(36,IBPIEN,.115,"I")
"RTN","IBCERP7",86,0)
 .... S ^TMP(RNAME,$J,IBNAME,DATE,EDINO,TYPE)=IBPIEN_U_IBADDRESS_U_IBCITY_U_IBSTATE_U_EDIONFILE
"RTN","IBCERP7",87,0)
 .... S LNTOT=LNTOT+1
"RTN","IBCERP7",88,0)
 Q
"RTN","IBCERP7",89,0)
 ;
"RTN","IBCERP7",90,0)
PRINT ;  Print data
"RTN","IBCERP7",91,0)
 ;  PGC=page ct,LNTOT=no of lines to be printed,LNCNT=when to page break
"RTN","IBCERP7",92,0)
 ;  MAX=IOSL (device length)
"RTN","IBCERP7",93,0)
 ;
"RTN","IBCERP7",94,0)
 N ADDRESS,COMPADDR,CITY,DATE,EDINO,EDIONFILE,IEN,NAME,PID,PIDPOS,STATE,TYPE,UPDATE
"RTN","IBCERP7",95,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCERP7",96,0)
 S NONEMSG="* * * N O   D A T A   T O   P R I N T * * *"
"RTN","IBCERP7",97,0)
 ;
"RTN","IBCERP7",98,0)
 I '$D(^TMP(RNAME,$J)) W !!!,NONEMSG D END Q
"RTN","IBCERP7",99,0)
 S NAME="" F  S NAME=$O(^TMP(RNAME,$J,NAME)) Q:NAME=""  D
"RTN","IBCERP7",100,0)
 . S DATE="" F  S DATE=$O(^TMP(RNAME,$J,NAME,DATE)) Q:DATE=""  D
"RTN","IBCERP7",101,0)
 .. S EDINO="" F  S EDINO=$O(^TMP(RNAME,$J,NAME,DATE,EDINO)) Q:EDINO=""  D
"RTN","IBCERP7",102,0)
 ... S TYPE="" F  S TYPE=$O(^TMP(RNAME,$J,NAME,DATE,EDINO,TYPE)) Q:TYPE=""  Q:IBQUIT  D
"RTN","IBCERP7",103,0)
 .... ;JWS;IB*2.0*592;added 'Dent' for Dental
"RTN","IBCERP7",104,0)
 .... ;S PID=$S(TYPE="I":"Inst",TYPE="D":"Dent",1:"Prof")
"RTN","IBCERP7",105,0)
 .... ;/vd - US3995 - IB*2*623 - Modified the above line.
"RTN","IBCERP7",106,0)
 .... S PID=$S($E(TYPE,1)="I":"Inst",$E(TYPE,1)="D":"Dent",1:"Prof")
"RTN","IBCERP7",107,0)
 .... S PIDPOS=$S($E(TYPE,2)=2:94,1:82)
"RTN","IBCERP7",108,0)
 .... ;S NAME=$P(^TMP(RNAME,$J,DATE,IEN,EDINO,TYPE),U,1)
"RTN","IBCERP7",109,0)
 .... S ADDRESS=$P(^TMP(RNAME,$J,NAME,DATE,EDINO,TYPE),U,2)
"RTN","IBCERP7",110,0)
 .... S CITY=$P(^TMP(RNAME,$J,NAME,DATE,EDINO,TYPE),U,3)
"RTN","IBCERP7",111,0)
 .... S STATE=$P(^DIC(5,$P(^TMP(RNAME,$J,NAME,DATE,EDINO,TYPE),U,4),0),U,2)
"RTN","IBCERP7",112,0)
 .... S EDIONFILE=$P(^TMP(RNAME,$J,NAME,DATE,EDINO,TYPE),U,5)
"RTN","IBCERP7",113,0)
 .... S UPDATE=$S(EDIONFILE="":"Yes",1:"No")
"RTN","IBCERP7",114,0)
 .... I LNCNT>MAX D HEADER Q:IBQUIT
"RTN","IBCERP7",115,0)
 .... ;/vd - US3995 - IB*2*623 Modified the following line.
"RTN","IBCERP7",116,0)
 .... S COMPADDR=$E(ADDRESS,1,39-$L(CITY)-$L(STATE)-3)_" "_CITY_", "_STATE  ; modified IB*2.0*623 v25
"RTN","IBCERP7",117,0)
 .... ;W !,$E(NAME,1,30),?33,$E(ADDRESS,1,35)," ",CITY,", ",STATE,?73,$$FMTE^XLFDT(DATE,2),?84,PID,?97,EDIONFILE,?109,EDINO,?121,UPDATE
"RTN","IBCERP7",118,0)
 .... W !,$E(NAME,1,30),?32,COMPADDR,?72,$$FMTE^XLFDT(DATE,2),?PIDPOS,PID,?105,EDIONFILE,?115,EDINO,?125,UPDATE
"RTN","IBCERP7",119,0)
 .... S LNCNT=LNCNT+1
"RTN","IBCERP7",120,0)
 I LNCNT>MAX D HEADER
"RTN","IBCERP7",121,0)
 Q:IBQUIT
"RTN","IBCERP7",122,0)
END W !!!,?49,EORMSG,!!!
"RTN","IBCERP7",123,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR    ;pause at end of report
"RTN","IBCERP7",124,0)
 Q
"RTN","IBCERP7",125,0)
 ;
"RTN","IBCERP7",126,0)
HDRINIT ; Initial setting
"RTN","IBCERP7",127,0)
 ;
"RTN","IBCERP7",128,0)
 S LNCNT=0
"RTN","IBCERP7",129,0)
 I PGC=1,$E(IOST,1,2)["C-" W @IOF  ; refresh terminal screen on 1st hdr
"RTN","IBCERP7",130,0)
 I 'LNTOT S PAGES=1
"RTN","IBCERP7",131,0)
 I LNTOT,PGC=1 D
"RTN","IBCERP7",132,0)
 . S LNCNT=0
"RTN","IBCERP7",133,0)
 . S PAGES=LNTOT/(MAX-10) I PAGES<1 S PAGES=1
"RTN","IBCERP7",134,0)
 . I PAGES["." S PAGES=$P(PAGES+1,".")    ; if more than one page set whole number
"RTN","IBCERP7",135,0)
 S HDR1="Clearinghouse Payer ID Report"
"RTN","IBCERP7",136,0)
 S HDR2=$$FMTE^XLFDT($$NOW^XLFDT,1)
"RTN","IBCERP7",137,0)
 Q
"RTN","IBCERP7",138,0)
 ;
"RTN","IBCERP7",139,0)
HEADER ; Print Header info
"RTN","IBCERP7",140,0)
 ;
"RTN","IBCERP7",141,0)
 N DIR,DUOUT
"RTN","IBCERP7",142,0)
 S LNCNT=0
"RTN","IBCERP7",143,0)
 I PGC'=1 D  Q:IBQUIT
"RTN","IBCERP7",144,0)
 . W !
"RTN","IBCERP7",145,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR I $D(DUOUT) S IBQUIT=1 Q:IBQUIT
"RTN","IBCERP7",146,0)
 . W @IOF   ; refresh terminal screen on hdr
"RTN","IBCERP7",147,0)
 W !,HDR1,?43,HDR2,?98,"  Page: "_PGC_" of "_PAGES
"RTN","IBCERP7",148,0)
 W !,"Timeframe: "_BEGDT_" thru "_ENDDT
"RTN","IBCERP7",149,0)
 W !!
"RTN","IBCERP7",150,0)
 ;/vd - US3995 IB*2*623 - The following was changed modified.
"RTN","IBCERP7",151,0)
 ;W !,"Insurance Co",?33,"Address",?73,"Date",?84,"EDI-PayerID",?97,"OldValue",?109,"NewValue",?121,"Updated"
"RTN","IBCERP7",152,0)
 W !,"Insurance Co",?32,"Address",?72,"Date",?82,"EDI-PayerID",?94,"CLM-OFC-ID",?105,"OldValue",?115,"NewValue",?125,"Updated"
"RTN","IBCERP7",153,0)
 W:+ASTERISK !,LEGEND W !,DASH    ;vd - IB*2.0*623 - added legend for US3994.
"RTN","IBCERP7",154,0)
 S LNCNT=LNCNT+10,PGC=PGC+1
"RTN","IBCERP7",155,0)
 Q
"RTN","IBCERP7",156,0)
EXIT() ;clean up and quit
"RTN","IBCERP7",157,0)
 N ZTREQ
"RTN","IBCERP7",158,0)
 ; Force a form feed at end of a printer report
"RTN","IBCERP7",159,0)
 I $E(IOST,1,2)'["C-" W @IOF
"RTN","IBCERP7",160,0)
 ; handle device closing before exiting
"RTN","IBCERP7",161,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCERP7",162,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBCERP7",163,0)
 K ^TMP(RNAME,$J)
"RTN","IBCERP7",164,0)
 K BEGIN,BEGDT,ENDDT,IBABEG,IBAEND,IBQUIT,IEN,LNCNT,Y
"RTN","IBCERP7",165,0)
 Q
"RTN","IBCESRV")
0^59^B71687947^B69744017
"RTN","IBCESRV",1,0)
IBCESRV ;ALB/TMP - Server interface to IB from Austin ;8/6/03 10:04am
"RTN","IBCESRV",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,196,232,296,320,407,623**;21-MAR-94;Build 70
"RTN","IBCESRV",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCESRV",4,0)
SERVER ; Entry point for server option to process EDI msgs received from Austin
"RTN","IBCESRV",5,0)
 ;
"RTN","IBCESRV",6,0)
 N IBEFLG,IBERR,IBTDA,XMER,IBXMZ,IBHOLDCT
"RTN","IBCESRV",7,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J),^TMP("IBMSG-H",$J)
"RTN","IBCESRV",8,0)
 S IBXMZ=$G(XMZ)
"RTN","IBCESRV",9,0)
 S IBEFLG=$$MSG(.XMER,.IBTDA,IBXMZ)
"RTN","IBCESRV",10,0)
 D:$G(IBEFLG) PERROR^IBCESRV1(.IBERR,.IBTDA,"G.IB EDI",IBXMZ)
"RTN","IBCESRV",11,0)
 N ZTREQ
"RTN","IBCESRV",12,0)
 D DKILL^IBCESRV1(IBXMZ) S ZTREQ="@"
"RTN","IBCESRV",13,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J),^TMP("IBMSG-H",$J)
"RTN","IBCESRV",14,0)
 Q
"RTN","IBCESRV",15,0)
 ;
"RTN","IBCESRV",16,0)
MSG(XMER,IBTDA,IBXMZ) ; Read/Store message lines
"RTN","IBCESRV",17,0)
 ;
"RTN","IBCESRV",18,0)
 I '$D(XMER) S XMER=""  ;JWS IB*2.0*623
"RTN","IBCESRV",19,0)
 ;     Return message formats:
"RTN","IBCESRV",20,0)
 ;        Ref:  Your <queue name> message #<msg#> with Austin ID #<id #>,
"RTN","IBCESRV",21,0)
 ;              is assigned confirmation number <confirmation #>.
"RTN","IBCESRV",22,0)
 ;              Generates an 837REC0 message
"RTN","IBCESRV",23,0)
 ;        277STAT - claim status messages - Generates one or more 837REC1
"RTN","IBCESRV",24,0)
 ;                                          837REC2 or 837REJ1 messages
"RTN","IBCESRV",25,0)
 ;        837DEL - bill entry # from File 364
"RTN","IBCESRV",26,0)
 ;        835EOB - Explanation of Benefits messages
"RTN","IBCESRV",27,0)
 ;        REPORT - Free text Envoy report file - may contain one or more
"RTN","IBCESRV",28,0)
 ;                 reports that are turned into bulletins
"RTN","IBCESRV",29,0)
 ;
"RTN","IBCESRV",30,0)
 ; OUTPUT:
"RTN","IBCESRV",31,0)
 ;  Function returns flag ... 0 = no errors    1 = errors
"RTN","IBCESRV",32,0)
 ;  IBTDA - array subscripted by ien of message file entries created
"RTN","IBCESRV",33,0)
 ;          If array entry = 1, the message was only partially stored
"RTN","IBCESRV",34,0)
 ;
"RTN","IBCESRV",35,0)
 N IBLAST,IBTYP,IBTYP1,IB0,IBBTCH,IBDATE,IBHD,IBMG,IBRTN,IBTXN,IBTXND,XMDUZ,IBGBL,IBD,IBEFLG,IBHOLDCT,IBWANT,X,Y,Z
"RTN","IBCESRV",36,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J)
"RTN","IBCESRV",37,0)
 ;
"RTN","IBCESRV",38,0)
 S (IBEFLG,IBERR,IBTXN)="",IBGBL="IBTXN",IBLAST=0
"RTN","IBCESRV",39,0)
 S IBD("MSG#")=IBXMZ
"RTN","IBCESRV",40,0)
 S IBHD=$$NET^XMRENT(IBXMZ)
"RTN","IBCESRV",41,0)
 S IBD("SUBJ")=$P(IBHD,U,6)
"RTN","IBCESRV",42,0)
 S (X,IBDATE)=$P(IBHD,U)
"RTN","IBCESRV",43,0)
 I X'="" D  ;Reformat date, if needed
"RTN","IBCESRV",44,0)
 . I X'["@" S X=$P(X," ",1,3)_"@"_$P(X," ",4)
"RTN","IBCESRV",45,0)
 . N %DT
"RTN","IBCESRV",46,0)
 . S %DT="XTS" D ^%DT S:Y>0 IBDATE=Y\.0001*.0001
"RTN","IBCESRV",47,0)
 ;
"RTN","IBCESRV",48,0)
 K ^TMP("IB-HOLD",$J) N IBHOLDCT S IBHOLDCT=0
"RTN","IBCESRV",49,0)
 S IBD("Q")=$E(IBD("SUBJ"),1,3)
"RTN","IBCESRV",50,0)
 I $G(IBD("SUBJ"))?.E1(1" MCR",1" MCT",1" MCH")1" Confirmation" D  G MSGQ:$G(IBERR),MSG1
"RTN","IBCESRV",51,0)
 . S IBD("Q")="MC"_$E($P(IBD("SUBJ")," MC",2))
"RTN","IBCESRV",52,0)
 . ;Austin confirmation
"RTN","IBCESRV",53,0)
 . X XMREC ; Line 1 of message
"RTN","IBCESRV",54,0)
 . S:XMER'<0 IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",55,0)
 . I XMER<0 D  Q
"RTN","IBCESRV",56,0)
 .. S IBERR=3
"RTN","IBCESRV",57,0)
 .. S ^TMP("IBERR",$J,"MSG",1)=IBHD
"RTN","IBCESRV",58,0)
 .. S ^TMP("IBERR",$J,"MSG",2)=$G(XMRG)
"RTN","IBCESRV",59,0)
 . S IBTXN=XMRG
"RTN","IBCESRV",60,0)
 . S IBBTCH=+$O(^IBA(364.1,"MSG",+$P(IBTXN,"#",2)\1,""),-1)
"RTN","IBCESRV",61,0)
 . ;;JWS IB*2.0*623 - looking for original message #, but there won't be one, so check if FHIR
"RTN","IBCESRV",62,0)
 . I 'IBBTCH S IBBTCH=$P($P(IBTXN,"#",2),")")
"RTN","IBCESRV",63,0)
 . I 'IBBTCH S IBERR=6 D REST(.IBTXN,IBGBL) Q  ;No msgs match conf recpt
"RTN","IBCESRV",64,0)
 . S IBTXN("BATCH",IBBTCH,0)="837REC0^"_IBD("MSG#")_U_+$E($P(IBD("SUBJ")," "),4,14)_"^^"_IBBTCH_U_IBDATE
"RTN","IBCESRV",65,0)
 . X XMREC ;Get second line of the message
"RTN","IBCESRV",66,0)
 . I XMER<0 S IBERR=2 Q
"RTN","IBCESRV",67,0)
 . S IBTXN("BATCH",IBBTCH,1)=IBTXN_" "_XMRG_"$",IBTXN=IBTXN("BATCH",IBBTCH,0)
"RTN","IBCESRV",68,0)
 . S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",69,0)
 . S IBLAST=1
"RTN","IBCESRV",70,0)
 . Q
"RTN","IBCESRV",71,0)
 ; Read header line of non-confirmation message (line 1)
"RTN","IBCESRV",72,0)
 F  X XMREC Q:$S(XMER<0:1,1:$E(XMRG,1,13)'="RACUBOTH RUCH")
"RTN","IBCESRV",73,0)
 S:XMER'<0 IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",74,0)
 I XMER<0 D  G MSGQ
"RTN","IBCESRV",75,0)
 . S IBERR=3
"RTN","IBCESRV",76,0)
 . S ^TMP("IBERR",$J,"MSG",1)=IBHD
"RTN","IBCESRV",77,0)
 . S ^TMP("IBERR",$J,"MSG",2)=$G(XMRG)
"RTN","IBCESRV",78,0)
 ;
"RTN","IBCESRV",79,0)
 S IBTXN=XMRG
"RTN","IBCESRV",80,0)
MSG1 I $E(IBTXN,$L(IBTXN)-3,$L(IBTXN))?3A1"."!(IBTXN="NNNN"),IBHOLDCT>1 S XMER=-1,IBLAST=1 G MSGQ
"RTN","IBCESRV",81,0)
 ;
"RTN","IBCESRV",82,0)
 S IBTYP1=$S($P(IBTXN,U)="277STAT":"837REC1",1:$P(IBTXN,U))
"RTN","IBCESRV",83,0)
 S IBTYP=$S(IBTYP1="":"",1:$O(^IBE(364.3,"B",IBTYP1,"")))
"RTN","IBCESRV",84,0)
 I IBTYP="" S IBERR=1 D REST(.IBTXN,IBGBL) G MSGQ ;Bad msg type
"RTN","IBCESRV",85,0)
 ;
"RTN","IBCESRV",86,0)
 S IB0=$G(^IBE(364.3,IBTYP,0)),IBRTN=$P(IB0,U,3,4),IBMG=$P(IB0,U,2)
"RTN","IBCESRV",87,0)
 I $TR(IBRTN,U)="" S IBERR=5 D REST(.IBTXN,IBGBL) G MSGQ ;No routine defined
"RTN","IBCESRV",88,0)
 ;
"RTN","IBCESRV",89,0)
 S IBWANT=1
"RTN","IBCESRV",90,0)
 I 'IBLAST,XMER'<0 D  G:IBLAST&(XMER<0) MSGQ ;Message is other than Austin confirmation
"RTN","IBCESRV",91,0)
 . S IBGBL="^TMP(""IBMSG"","_$J_")"
"RTN","IBCESRV",92,0)
 . S @IBGBL=$P(IBTXN,U),^TMP("IBMSGH",$J,0)=IBTXN
"RTN","IBCESRV",93,0)
 . ;
"RTN","IBCESRV",94,0)
 . I $P(IBTXN,U)="277STAT" D  Q  ;Claim status message
"RTN","IBCESRV",95,0)
 .. F  X XMREC Q:XMER<0  D  Q:IBLAST  ;Extract rest of message
"RTN","IBCESRV",96,0)
 ... S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",97,0)
 ... I +XMRG=99,$P(XMRG,U,2)="$" S IBLAST=1 Q
"RTN","IBCESRV",98,0)
 ... S IBD=XMRG,Z=+XMRG_"^IBCE277(.IBD)"
"RTN","IBCESRV",99,0)
 ... S IBTXN=XMRG
"RTN","IBCESRV",100,0)
 ... I '$$CKLABEL(Z,.IBTXN,IBGBL) S IBLAST=1,IBWANT=0,XMER=-1,IBERR=7 Q
"RTN","IBCESRV",101,0)
 ... D @Z
"RTN","IBCESRV",102,0)
 . ;
"RTN","IBCESRV",103,0)
 . I $P(IBTXN,U)="835EOB" D  Q  ;Explanation of Benefits message
"RTN","IBCESRV",104,0)
 .. F  X XMREC Q:XMER<0  D  Q:IBLAST  ;Extract rest of message
"RTN","IBCESRV",105,0)
 ... S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",106,0)
 ... I +XMRG=99,$P(XMRG,U,2)="$" S IBLAST=1 Q
"RTN","IBCESRV",107,0)
 ... S IBD=XMRG,Z=+XMRG_"^IBCE835(.IBD)"
"RTN","IBCESRV",108,0)
 ... S IBTXN=XMRG
"RTN","IBCESRV",109,0)
 ... I '$$CKLABEL(Z,.IBTXN,IBGBL) S IBLAST=1,IBWANT=0,XMER=-1,IBERR=7 Q
"RTN","IBCESRV",110,0)
 ... D @Z
"RTN","IBCESRV",111,0)
 . ;
"RTN","IBCESRV",112,0)
 . I $P(IBTXN,U)="REPORT" D  Q  ; Report file
"RTN","IBCESRV",113,0)
 .. D REPORT^IBCERPT(IBHD,IBDATE,.IBD,IBTXN)
"RTN","IBCESRV",114,0)
 .. I '$O(^TMP("IBMSG",$J,"REPORT",0,"D",0,0)) S IBWANT=0
"RTN","IBCESRV",115,0)
 . ;
"RTN","IBCESRV",116,0)
 . ; ****** Insert code for additional message types here and in ^IBCEM
"RTN","IBCESRV",117,0)
 ;
"RTN","IBCESRV",118,0)
 I IBLAST,IBWANT D ADD(IBGBL,.IBTDA,.IBERR)
"RTN","IBCESRV",119,0)
 ;
"RTN","IBCESRV",120,0)
 I 'IBLAST,'$G(IBERR) K @IBGBL S IBERR=2 ;No $ as last character of message
"RTN","IBCESRV",121,0)
MSGQ I $G(IBERR) D ERRUPD^IBCESRV1(IBGBL,.IBERR) S IBEFLG=1
"RTN","IBCESRV",122,0)
 Q IBEFLG
"RTN","IBCESRV",123,0)
 ;
"RTN","IBCESRV",124,0)
REST(IBTXN,IBGBL) ;Extract raw message data if not id-ed or can't process
"RTN","IBCESRV",125,0)
 N CT,Z
"RTN","IBCESRV",126,0)
 S CT=0
"RTN","IBCESRV",127,0)
 S Z=0 F  S Z=$O(^TMP("IB-HOLD",$J,Z)) Q:'Z  S CT=CT+1,@IBGBL@("BATCH",0,"D",0,CT)="##RAW DATA: "_$G(^TMP("IB-HOLD",$J,Z))
"RTN","IBCESRV",128,0)
 F  X XMREC Q:XMER<0  S:XMRG'="" CT=CT+1,@IBGBL@("BATCH",0,"D",0,CT)="##RAW DATA: "_XMRG
"RTN","IBCESRV",129,0)
 Q
"RTN","IBCESRV",130,0)
 ;
"RTN","IBCESRV",131,0)
ADD(IBGBL,IBTDA,IBERR) ; Add message(s) in @IBGBL to file #364.2
"RTN","IBCESRV",132,0)
 ;   Errors returned in IBERR
"RTN","IBCESRV",133,0)
 ;   Message entry #'s are returned in IBTDA(ien)=""
"RTN","IBCESRV",134,0)
 ;
"RTN","IBCESRV",135,0)
 N IB,IBA,IBB,IBC,IBDATA,IBHDR,IBLINE,IBTYP,IBRTN
"RTN","IBCESRV",136,0)
 S IBA="" F  S IBA=$O(@IBGBL@(IBA)) Q:IBA=""!(IBERR=3)  S IBB="" F  S IBB=$O(@IBGBL@(IBA,IBB)) Q:IBB=""!(IBERR=3)  D
"RTN","IBCESRV",137,0)
 . S IBHDR=$G(@IBGBL@(IBA,IBB,0))
"RTN","IBCESRV",138,0)
 . Q:IBHDR=""
"RTN","IBCESRV",139,0)
 . S IBTYP=$S($P(IBHDR,U)="":"",1:$O(^IBE(364.3,"B",$P(IBHDR,U),""))),IBRTN=$P($G(^IBE(364.3,IBTYP,0)),U,3,4)
"RTN","IBCESRV",140,0)
 . S IBTDA=$$ADDTXN(IBHDR) ;File message hdr data
"RTN","IBCESRV",141,0)
 . I IBTDA'>0 S IBERR=3 Q  ;msg hdr can't be filed
"RTN","IBCESRV",142,0)
 . S IBTDA(IBTDA)=""
"RTN","IBCESRV",143,0)
 . D LOADDET(IBA,IBB,.IBTDA,IBGBL,.IBERR,$P(IBHDR,U,1))
"RTN","IBCESRV",144,0)
 . Q:$G(IBERR)  ;Message not completely filed
"RTN","IBCESRV",145,0)
 . D TRTN^IBCESRV1(IBTDA):$TR(IBRTN,U)'="" ;Task update to run
"RTN","IBCESRV",146,0)
 Q
"RTN","IBCESRV",147,0)
 ;
"RTN","IBCESRV",148,0)
ADDTXN(IBDATA,REPORT) ; Add a trxn for msg in IBDATA to file 364.2
"RTN","IBCESRV",149,0)
 ; REPORT = 1 if storing a report format message
"RTN","IBCESRV",150,0)
 ;Function returns ien of the new entry in file 364.2 or "" if an error
"RTN","IBCESRV",151,0)
 ;
"RTN","IBCESRV",152,0)
 N A,IBDA,IBBTCH,IBBILL,IBDT,IBTEST,DLAYGO,DIC,DD,DO,X,Y,Z,IBIFN
"RTN","IBCESRV",153,0)
 ;
"RTN","IBCESRV",154,0)
 S IBDA="",IBBTCH=$P(IBDATA,U,5),IBBILL=$P(IBDATA,U,4),IBIFN=0
"RTN","IBCESRV",155,0)
 I IBBILL S IBIFN=+$G(^IBA(364,IBBILL,0))
"RTN","IBCESRV",156,0)
 S IBDT=$P(IBDATA,U,6)
"RTN","IBCESRV",157,0)
 S IBTEST=0
"RTN","IBCESRV",158,0)
 I $E($G(IBD("Q")),1,3)="MCT" D
"RTN","IBCESRV",159,0)
 . I IBBILL,'$P($G(^IBA(364,IBBILL,0)),U,7),$D(^IBM(361.4,IBIFN,0)) S IBTEST=1 Q  ; Resubmit live claim for test (make sure 361.4 exists)
"RTN","IBCESRV",160,0)
 . I IBBTCH,$O(^IBM(361.4,"C",IBBTCH,0)) S IBTEST=1 Q  ; Resubmit live claim as test batch
"RTN","IBCESRV",161,0)
 ;
"RTN","IBCESRV",162,0)
 S (X,A)=$G(IBD("MSG#")) ; Use msg ID for .01 field
"RTN","IBCESRV",163,0)
 F Z=1:1 Q:'$D(^IBA(364.2,"B",A))  S A=X_"."_Z
"RTN","IBCESRV",164,0)
 S X=A
"RTN","IBCESRV",165,0)
 S DIC(0)="L",DIC="^IBA(364.2,",DLAYGO=364.2
"RTN","IBCESRV",166,0)
 S DIC("DR")=".02///"_$P(IBDATA,U)_";.03///^S X=""NOW"";.08////"_($P(IBDATA,U,7)="Y")_";.13////"_$P(IBDATA,U,8)_$S(IBBILL="":"",1:";.05////"_IBBILL)_";.06////P;.1////"_IBDT_$S(IBBTCH="":"",1:";.04////"_IBBTCH)_";.14////"_IBTEST
"RTN","IBCESRV",167,0)
 D FILE^DICN
"RTN","IBCESRV",168,0)
 S:Y>0 IBDA=+Y
"RTN","IBCESRV",169,0)
 ;
"RTN","IBCESRV",170,0)
 Q IBDA
"RTN","IBCESRV",171,0)
 ;
"RTN","IBCESRV",172,0)
LOADDET(IB1,IB2,IBTDA,IBGBL,IBERR,IBTNM) ; Load the rest of the message text into the message
"RTN","IBCESRV",173,0)
 ; IB1 = "BATCH" or "CLAIM" or "REPORT"
"RTN","IBCESRV",174,0)
 ; IB2 = batch # or claim # or 0
"RTN","IBCESRV",175,0)
 ; IBTDA = ien in file 364.2 being updated
"RTN","IBCESRV",176,0)
 ; IBGBL = name of the array holding the detail message text to be loaded
"RTN","IBCESRV",177,0)
 ; IBTNM = message name (i.e. "835EOB","837REC0","REPORT",etc.)
"RTN","IBCESRV",178,0)
 ;
"RTN","IBCESRV",179,0)
 ; OUTPUT: IBERR if any errors found, pass by reference
"RTN","IBCESRV",180,0)
 ;         IBTDA(IBTDA)=1 if errors - pass by reference
"RTN","IBCESRV",181,0)
 ;
"RTN","IBCESRV",182,0)
 S IBTDA=+$G(IBTDA)
"RTN","IBCESRV",183,0)
 N CT,IB3,IBE,IBZ,Q
"RTN","IBCESRV",184,0)
 ;
"RTN","IBCESRV",185,0)
 K ^TMP("IBTEXT",$J)
"RTN","IBCESRV",186,0)
 ;
"RTN","IBCESRV",187,0)
 S (CT,IB3)=0 ;Put formatted data into msg
"RTN","IBCESRV",188,0)
 F  S IB3=$O(@IBGBL@(IB1,IB2,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,IB3)
"RTN","IBCESRV",189,0)
 ; Add identifying data from hdr record
"RTN","IBCESRV",190,0)
 S IB3=0 F  S IB3=$O(^TMP("IBMSG-H",$J,IB1,IB2,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=^TMP("IBMSG-H",$J,IB1,IB2,IB3)
"RTN","IBCESRV",191,0)
 ;
"RTN","IBCESRV",192,0)
 ; Put raw data into msg
"RTN","IBCESRV",193,0)
 I $G(IBTNM)'="835EOB" D
"RTN","IBCESRV",194,0)
 . S IBZ="" F  S IBZ=$O(@IBGBL@(IB1,IB2,"D",IBZ)) Q:IBZ=""  S IB3=0 F  S IB3=$O(@IBGBL@(IB1,IB2,"D",IBZ,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,"D",IBZ,IB3)
"RTN","IBCESRV",195,0)
 I $G(IBTNM)="835EOB" D
"RTN","IBCESRV",196,0)
 . S IB3=0 F  S IB3=$O(@IBGBL@(IB1,IB2,"D1",IB3)) Q:'IB3  S IBZ="" F  S IBZ=$O(@IBGBL@(IB1,IB2,"D1",IB3,IBZ)) Q:IBZ=""  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,"D1",IB3,IBZ)
"RTN","IBCESRV",197,0)
 ;
"RTN","IBCESRV",198,0)
 D STOREM^IBCESRV2(IBTDA,"^TMP(""IBTEXT"",$J)",.IBE)
"RTN","IBCESRV",199,0)
 ;
"RTN","IBCESRV",200,0)
 I $D(IBE("DIERR")) D  S:$L($G(IBE)) IBERR(IBTDA,IB1,IB2)=IBE ; Extract error
"RTN","IBCESRV",201,0)
 . D EXTERR^IBCESRV1(.IBERR,.IBTDA,.IBE)
"RTN","IBCESRV",202,0)
 K ^TMP("IBTEXT",$J)
"RTN","IBCESRV",203,0)
 Q
"RTN","IBCESRV",204,0)
 ;
"RTN","IBCESRV",205,0)
CKLABEL(Z,IBTXN,IBGBL) ;  Checks to be sure label in Z exists.
"RTN","IBCESRV",206,0)
 ; If it doesn't exist, files an error and returns 0 
"RTN","IBCESRV",207,0)
 ;  OR  returns 1 if it does exist
"RTN","IBCESRV",208,0)
 N X,LAB
"RTN","IBCESRV",209,0)
 S X=1,LAB=$P(Z,"(")
"RTN","IBCESRV",210,0)
 I $S('LAB!($L($P(LAB,U))>8):1,1:$T(@LAB)="") S X=0 D REST(.IBTXN,IBGBL)
"RTN","IBCESRV",211,0)
 Q X
"RTN","IBCESRV",212,0)
 ;
"RTN","IBCESRV",213,0)
ERROR ; Error condition messages
"RTN","IBCESRV",214,0)
 ;;Message code does not exist in IB MESSAGE ROUTER file (364.3).
"RTN","IBCESRV",215,0)
 ;;This message has no ending $.
"RTN","IBCESRV",216,0)
 ;;Message file problem - no message stored.
"RTN","IBCESRV",217,0)
 ;;Message file problem - message partially stored.
"RTN","IBCESRV",218,0)
 ;;Routine to process this message type does not exist.
"RTN","IBCESRV",219,0)
 ;;Batch does not exist for this confirmation message.
"RTN","IBCESRV",220,0)
 ;;Bad message format found - cannot store message.
"RTN","IBCESRV",221,0)
 ;
"RTN","IBCEST")
0^60^B133235961^B99553380
"RTN","IBCEST",1,0)
IBCEST ;ALB/TMP - 837 EDI STATUS MESSAGE PROCESSING ;17-APR-96
"RTN","IBCEST",2,0)
 ;;2.0;INTEGRATED BILLING;**137,189,197,135,283,320,368,397,407,577,592,623**;21-MAR-94;Build 70
"RTN","IBCEST",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEST",4,0)
 ; IA 4043 for call to AUDITX^PRCAUDT
"RTN","IBCEST",5,0)
 Q
"RTN","IBCEST",6,0)
 ;
"RTN","IBCEST",7,0)
UPD361(IBTDA) ; Update IB BILL STATUS MESSAGES file
"RTN","IBCEST",8,0)
 ; IBTDA = ien of return message in file 364.2
"RTN","IBCEST",9,0)
 ;
"RTN","IBCEST",10,0)
 N IB,IB0,IBSEQ,IB00,IBBILL,IBBTCH,IBMNUM,IBDATE,IBTYP
"RTN","IBCEST",11,0)
 ;
"RTN","IBCEST",12,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock message in file 364.2
"RTN","IBCEST",13,0)
 ;
"RTN","IBCEST",14,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEST",15,0)
 S IBMNUM=$P(IB0,U) ; Message number
"RTN","IBCEST",16,0)
 S IB00=$G(^IBA(364,+$P(IB0,U,5),0)) ; Transmit bill entry
"RTN","IBCEST",17,0)
 S IBBILL=+IB00 ; Actual bill ien in file 399
"RTN","IBCEST",18,0)
 S IBBTCH=$P(IB0,U,4) ; Batch #
"RTN","IBCEST",19,0)
 ;
"RTN","IBCEST",20,0)
 ; Auto-audit bills based on status code on '10' record of status msg
"RTN","IBCEST",21,0)
 ; flat file
"RTN","IBCEST",22,0)
 I IBBILL,$P($T(PRCAUDT+1^PRCAUDT),"**",2)[",173" D
"RTN","IBCEST",23,0)
 . N Z,Z0,Z1,OK
"RTN","IBCEST",24,0)
 . Q:+$$STA^PRCAFN(IBBILL)'=104
"RTN","IBCEST",25,0)
 . S (Z,OK)=0
"RTN","IBCEST",26,0)
 . F  S Z=$O(^IBA(364.2,IBTDA,2,Z)) Q:'Z  S Z0=$P($G(^(Z,0)),"##RAW DATA: ",2) I +Z0=10 S Z0=$P(Z0,U,5) D  Q:OK
"RTN","IBCEST",27,0)
 .. ; Strip leading spaces
"RTN","IBCEST",28,0)
 .. S Z0=$$TRIM^XLFSTR(Z0)
"RTN","IBCEST",29,0)
 .. Q:Z0=""
"RTN","IBCEST",30,0)
 .. I $$SCODE^IBCEST1(Z0),$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBBILL,0)),U,7),0)),U,11) D AUDITX^PRCAUDT(IBBILL) S OK=1 ; IA 4043
"RTN","IBCEST",31,0)
 ;
"RTN","IBCEST",32,0)
 I $S(IBMNUM="":1,1:'IBBILL&(IBBTCH="")) D DELMSG^IBCESRV2(IBTDA) G UPDQ
"RTN","IBCEST",33,0)
 ;
"RTN","IBCEST",34,0)
 ; Individual bill   ; KDM US129 IB*2*577 rework Individual vs. Batch to Correct Storage of Payer ID
"RTN","IBCEST",35,0)
 I IBBILL D UPDTBILL() G UPDQ
"RTN","IBCEST",36,0)
 ;
"RTN","IBCEST",37,0)
 ; Batch - update each bill separately
"RTN","IBCEST",38,0)
 S IBBILL=""
"RTN","IBCEST",39,0)
 F  S IBBILL=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL)) Q:'IBBILL  D
"RTN","IBCEST",40,0)
 . Q:$D(^TMP("IBCONF",$J,IBBILL))  ;Bill was rejected
"RTN","IBCEST",41,0)
 . S IB=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL,0))
"RTN","IBCEST",42,0)
 . Q:'IB
"RTN","IBCEST",43,0)
 . D UPDTBILL()     ;KDM US129 IB*2*577 Correct Storage of PAYER ID
"RTN","IBCEST",44,0)
 ;
"RTN","IBCEST",45,0)
 Q
"RTN","IBCEST",46,0)
 ;
"RTN","IBCEST",47,0)
UPDTBILL()     ;KDM US129 IB*2*577 New section to Correct Storage of PAYER ID
"RTN","IBCEST",48,0)
 N IBA1,IBMSG0,IBPID
"RTN","IBCEST",49,0)
 S IBPID="",IBA1=0
"RTN","IBCEST",50,0)
 ;
"RTN","IBCEST",51,0)
 F  S IBA1=$O(^IBA(364.2,IBTDA,2,IBA1)) Q:'IBA1  D  Q:IBPID]""
"RTN","IBCEST",52,0)
 . S IBMSG0=$P($G(^(IBA1,0)),"##RAW DATA: ",2)
"RTN","IBCEST",53,0)
 . I +IBMSG0=277,$P(IBMSG0,U,5)="N" S IBPID=$P(IBMSG0,U,11)
"RTN","IBCEST",54,0)
 ;
"RTN","IBCEST",55,0)
 S IBSEQ=$P(IB00,U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",56,0)
 D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,1)
"RTN","IBCEST",57,0)
 Q
"RTN","IBCEST",58,0)
 ;
"RTN","IBCEST",59,0)
STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,IB1) ;
"RTN","IBCEST",60,0)
 ;
"RTN","IBCEST",61,0)
 ; IB0 = 0-node of message in file 364.2
"RTN","IBCEST",62,0)
 ; IBBTCH = ien of batch in file 364.1
"RTN","IBCEST",63,0)
 ; IBMNUM = actual message number
"RTN","IBCEST",64,0)
 ; IBTDA = ien of message in file 364.2
"RTN","IBCEST",65,0)
 ; IBBILL = ien of bill in 399
"RTN","IBCEST",66,0)
 ; IBSEQ = P/S/T/ for COB sequence related to message
"RTN","IBCEST",67,0)
 ; IBPID = the payer id returned from clearinghouse for the claim
"RTN","IBCEST",68,0)
 ; IB1 = flag that says if the message was for a single bill or a batch.
"RTN","IBCEST",69,0)
 ;       Batch statuses have an additional standard text entry.
"RTN","IBCEST",70,0)
 ;       1 = single bill 0 = batch
"RTN","IBCEST",71,0)
 ; 
"RTN","IBCEST",72,0)
 N DA,DIK,DIE,DIC,X,Y,DR,DO,DD,DLAYGO,Z,Z0,Z1,Z2,Z3,IBT,IBDUP,IBFLDS,IBY,IBAUTO,IBLN
"RTN","IBCEST",73,0)
 ;
"RTN","IBCEST",74,0)
 S X=IBBILL,IBDUP=0
"RTN","IBCEST",75,0)
 ;
"RTN","IBCEST",76,0)
 S IBFLDS=".02////"_$P(IB0,U,3)
"RTN","IBCEST",77,0)
 S IBFLDS=IBFLDS_";.03////"_$S($$EXTERNAL^DILFD(364.2,.02,"U",$P(IB0,U,2))["REJ":"R",1:"I")_";.05////"_IBBTCH_";.06////"_IBMNUM_";.04////"_+$P(IB0,U,8)_";.07////"_IBSEQ_$S($P(IB0,U,5):";.11////"_$P(IB0,U,5),1:"")
"RTN","IBCEST",78,0)
 S IBFLDS=IBFLDS_";.12////"_$P(IB0,U,10)_";.09////0"
"RTN","IBCEST",79,0)
 S IBFLDS=IBFLDS_";.15////"_$$CHKSUM^IBCEST1("^IBA(364.2,"_IBTDA_",2)")
"RTN","IBCEST",80,0)
 I IBPID'="" D
"RTN","IBCEST",81,0)
 . ;JWS;IB*2.0*592;Dental Form 7
"RTN","IBCEST",82,0)
 . S IBPID("TYPE")=$S($$FT^IBCEF(IBBILL)=2:"P",$$FT^IBCEF(IBBILL)=7:"D",1:"I")
"RTN","IBCEST",83,0)
 . D UPDINS(.IBPID,$$POLICY^IBCEF(IBBILL,1,$TR(IBSEQ,"PST","123")),IBBILL,IBTDA)      ;KDM US129 IB*2*577
"RTN","IBCEST",84,0)
 ;
"RTN","IBCEST",85,0)
 I IBDUP D  I $D(Y) G UPDQ
"RTN","IBCEST",86,0)
 . ; Stuff fields into existing entry
"RTN","IBCEST",87,0)
 . ; (may be needed for reprocessing of aborted updates)
"RTN","IBCEST",88,0)
 . S DIE="^IBM(361,",DA=IBDUP,DR=IBFLDS_";1///@"
"RTN","IBCEST",89,0)
 . D ^DIE
"RTN","IBCEST",90,0)
 . I $D(Y) S IBY=-1 Q  ;Update not successful
"RTN","IBCEST",91,0)
 . S IBY=IBDUP
"RTN","IBCEST",92,0)
 ;
"RTN","IBCEST",93,0)
 K IBT
"RTN","IBCEST",94,0)
 I 'IBDUP D  ; Create new entry and stuff fields
"RTN","IBCEST",95,0)
 . S DIC(0)="L",DIC="^IBM(361,",DLAYGO=361
"RTN","IBCEST",96,0)
 . S DIC("DR")=IBFLDS
"RTN","IBCEST",97,0)
 . D FILE^DICN
"RTN","IBCEST",98,0)
 . K DO,DD,DLAYGO,DIC
"RTN","IBCEST",99,0)
 . S IBY=+Y
"RTN","IBCEST",100,0)
 . Q:IBY'>0
"RTN","IBCEST",101,0)
 . ;
"RTN","IBCEST",102,0)
 . ; IB*2*320 - Check for duplicate status message
"RTN","IBCEST",103,0)
 . NEW IBNEW,IBOLD,PCE,Z,DIK,DA
"RTN","IBCEST",104,0)
 . S IBNEW=""
"RTN","IBCEST",105,0)
 . F PCE=3,4,5,7,8,11,15 S IBNEW=IBNEW_$P($G(^IBM(361,IBY,0)),U,PCE)_U
"RTN","IBCEST",106,0)
 . S Z=0
"RTN","IBCEST",107,0)
 . F  S Z=$O(^IBM(361,"B",IBBILL,Z)) Q:'Z  I Z'=IBY D  Q:IBY'>0
"RTN","IBCEST",108,0)
 .. S IBOLD=""
"RTN","IBCEST",109,0)
 .. F PCE=3,4,5,7,8,11,15 S IBOLD=IBOLD_$P($G(^IBM(361,Z,0)),U,PCE)_U
"RTN","IBCEST",110,0)
 .. I IBNEW'=IBOLD Q   ; no duplicate so get the next one
"RTN","IBCEST",111,0)
 .. S DIK="^IBM(361,",DA=IBY,IBY=-1 D ^DIK D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",112,0)
 .. Q
"RTN","IBCEST",113,0)
 . Q
"RTN","IBCEST",114,0)
 ;
"RTN","IBCEST",115,0)
 I IBY>0 D  ;Move text over
"RTN","IBCEST",116,0)
 . K IBT
"RTN","IBCEST",117,0)
 . ;
"RTN","IBCEST",118,0)
 . D BLDMSG(IB1,IBTDA,.IBT,.IBAUTO)
"RTN","IBCEST",119,0)
 . ;
"RTN","IBCEST",120,0)
 . ; IB*2*368 - ymg - 2Q,RE,RP messages will be filed as informational
"RTN","IBCEST",121,0)
 . ; Z0 is the flag for 2Q code
"RTN","IBCEST",122,0)
 . ; Z1 is the flag for RE code
"RTN","IBCEST",123,0)
 . ; Z2 is the flag for RP code
"RTN","IBCEST",124,0)
 . ; Z3 is the flag for autofiling the message
"RTN","IBCEST",125,0)
 . I $P($G(^IBM(361,+IBY,0)),U,3)="R" D
"RTN","IBCEST",126,0)
 .. S Z="",(Z0,Z1,Z2,Z3)=0 F  S Z=$O(IBT(Z)) Q:Z=""!(Z3=1)  D
"RTN","IBCEST",127,0)
 ... S IBLN=$$UP^XLFSTR($G(IBT(Z)))
"RTN","IBCEST",128,0)
 ... I (Z0!Z1!Z2)=0 D
"RTN","IBCEST",129,0)
 .... S:IBLN?.E1"CODE:".P1"2Q".E Z0=1
"RTN","IBCEST",130,0)
 .... S:IBLN?.E1"CODE:".P1"RE".E Z1=1
"RTN","IBCEST",131,0)
 .... S:IBLN?.E1"CODE:".P1"RP".E Z2=1
"RTN","IBCEST",132,0)
 ... I Z0=1 S:IBLN?.P1"CLAIM".P1"REJECTED".P1"BY".P1"CLEARINGHOUSE".E Z3=1
"RTN","IBCEST",133,0)
 ... I Z1=1 S:IBLN?.P1"ELECTRONIC".P1"CLAIM".P1"REJECTED".P1"BY".P1"EMDEON".E Z3=1
"RTN","IBCEST",134,0)
 ... I Z2=1 S:IBLN?.P1"PAPER".P1"CLAIM".P1"REJECTED".P1"BY".P1"EMDEON".E Z3=1
"RTN","IBCEST",135,0)
 .. I Z3=1 S IBAUTO=1,DIE=361,DA=+IBY,DR=".03////I" D ^DIE
"RTN","IBCEST",136,0)
 .. Q
"RTN","IBCEST",137,0)
 . ;
"RTN","IBCEST",138,0)
 . ; if info msg, ck for no review needed based on first line of text
"RTN","IBCEST",139,0)
 . I $G(IBAUTO),$P($G(^IBM(361,+IBY,0)),U,3)="I" D
"RTN","IBCEST",140,0)
 .. S DIE="^IBM(361,",DR=".09////2;.14////1;.1////F",DA=+IBY D ^DIE
"RTN","IBCEST",141,0)
 .. I IB1,$P($G(^IBM(361,+IBY,0)),U,11) S Z="",Z0=0 F  S Z=$O(IBT(Z)) Q:Z=""!(Z0=1)  D
"RTN","IBCEST",142,0)
 ... S Z0=$$PRINTUPD^IBCEU0($$UP^XLFSTR($G(IBT(Z))),$P($G(^IBM(361,+IBY,0)),U,11))
"RTN","IBCEST",143,0)
 . ;
"RTN","IBCEST",144,0)
 . D MSGLNSZ(.IBT) ; Convert Message Lines in IBT to be no longer than 70 chars
"RTN","IBCEST",145,0)
 . D WP^DIE(361,+IBY_",",1,"A","IBT")    ; file message text
"RTN","IBCEST",146,0)
 . ;
"RTN","IBCEST",147,0)
 . ; Delete message after it successfully updates the database.
"RTN","IBCEST",148,0)
 . D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",149,0)
 . Q
"RTN","IBCEST",150,0)
 ;
"RTN","IBCEST",151,0)
UPDQ L -^IBA(364.2,IBTDA,0)
"RTN","IBCEST",152,0)
 Q
"RTN","IBCEST",153,0)
 ;
"RTN","IBCEST",154,0)
BLDMSG(IB1,IBTDA,IBT,IBAUTO) ; Builds message text
"RTN","IBCEST",155,0)
 ; IB1 = flag for batch message
"RTN","IBCEST",156,0)
 ; IBTDA = ien of entry in file 364.2
"RTN","IBCEST",157,0)
 ; IBT = array returned with message text
"RTN","IBCEST",158,0)
 ; IBAUTO = if passed by reference, returns 1 if text indicates review
"RTN","IBCEST",159,0)
 ;          not needed
"RTN","IBCEST",160,0)
 N IBDATA,IBCK,IBZ,IBZ0,IBZ1,Z
"RTN","IBCEST",161,0)
 S (IBZ,IBZ0,IBDATA,IBAUTO,IBCK)=0
"RTN","IBCEST",162,0)
 I 'IB1 S IBT(1)="Status message received for batch "_$P($G(^IBA(364.1,IBBTCH,0)),U)_" dated "_$$FMTE^XLFDT($P($G(^IBA(364.2,IBTDA,0)),U,10),2),IBZ0=1
"RTN","IBCEST",163,0)
 ; Don't move the raw data over, just move the text of the message
"RTN","IBCEST",164,0)
 F  S IBZ=$O(^IBA(364.2,IBTDA,2,IBZ)) Q:'IBZ  S IBZ1=$G(^(IBZ,0)) S IBDATA=($E(IBZ1,1,2)="##") Q:IBDATA  S IBZ0=IBZ0+1,IBT(IBZ0)=IBZ1 I 'IBCK S Z=$$CKREVU^IBCEM4(IBZ1,,,.IBCK),IBAUTO=$S(IBCK:0,Z:1,1:IBAUTO)
"RTN","IBCEST",165,0)
 Q
"RTN","IBCEST",166,0)
 ;
"RTN","IBCEST",167,0)
UPDINS(IBPID,IBINS,IBIFN,IBTDA)     ;KDM US129 IB*2*577
"RTN","IBCEST",168,0)
 ; Update the insurance id or the bill printed at
"RTN","IBCEST",169,0)
 ;    the EDI contractor's print shop and mailed to the ins co.
"RTN","IBCEST",170,0)
 ; IBPID = the id returned from the EDI contractor for the ins co
"RTN","IBCEST",171,0)
 ;      ("TYPE") = P if professional id or I if institutional id or D if Dental
"RTN","IBCEST",172,0)
 ; IBINS = the ien of the insurance co it was sent to (file 36)
"RTN","IBCEST",173,0)
 ; IBIFN = the ien of the claim (file 399)
"RTN","IBCEST",174,0)
 ; IBTDA = ien of entry in file 364.2     ;KDM US129 IB*2*577
"RTN","IBCEST",175,0)
 ;
"RTN","IBCEST",176,0)
 ;N IBID,IBIDFLD,IBPRT,IBLOOK,DA,DR,DIE,X,Y,Z,UPD     ;KDM US129 IB*2*577
"RTN","IBCEST",177,0)
 N DA,DIE,DONE,DR,HAVONE,IBHOLD,IBID,IBIDFLD,IBIDQ,IBPRT,IBLOOK,IBPID69,IBQUAL,IBSID,II,UPDATE,X,Y,Z   ; vd US3994 - IB*2*623
"RTN","IBCEST",178,0)
 ;
"RTN","IBCEST",179,0)
 Q:'$G(IBINS)!($G(IBPID)="")
"RTN","IBCEST",180,0)
 ;
"RTN","IBCEST",181,0)
 ; Strip spaces off the end of data
"RTN","IBCEST",182,0)
 S IBLOOK=""
"RTN","IBCEST",183,0)
 ;I $L(IBPID) F Z=$L(IBPID):-1:1 I $E(IBPID,Z)'=" " S IBLOOK=$E(IBPID,1,Z) Q
"RTN","IBCEST",184,0)
 ;
"RTN","IBCEST",185,0)
 ;S IBPRT=($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",186,0)
 I $L(IBPID) F Z=$L(IBPID):-1:1 I $E(IBPID,Z)'=" " S IBHOLD=$E(IBPID,1,Z) Q   ; vd US3994 - IB*2*623
"RTN","IBCEST",187,0)
 ;
"RTN","IBCEST",188,0)
 S IBPRT=($E(IBHOLD,2,5)="PRNT")  ; vd US3994 - IB*2*623
"RTN","IBCEST",189,0)
 I IBPRT D  ; Set printed via EDI field on bill
"RTN","IBCEST",190,0)
 . S DA=IBIFN,DIE="^DGCR(399,",DR="26////1" D ^DIE
"RTN","IBCEST",191,0)
 ;
"RTN","IBCEST",192,0)
 ; KDM US129 IB*2*577  correct payer ID storage
"RTN","IBCEST",193,0)
 ;S IBLOOK=$E($S('IBPRT:$P(IBLOOK,"PAYID=",2),1:""),1,5)
"RTN","IBCEST",194,0)
 ;Q:IBLOOK=""!($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",195,0)
 I IBPRT Q
"RTN","IBCEST",196,0)
 I IBHOLD'["PAYID=",IBHOLD'["COBID=" Q     ; vd US3994 IB*2*623
"RTN","IBCEST",197,0)
 S IBLOOK=$E($P(IBHOLD,"ID=",2),1,5)     ; vd US3994 IB*2*623
"RTN","IBCEST",198,0)
 Q:IBLOOK=""
"RTN","IBCEST",199,0)
 ;
"RTN","IBCEST",200,0)
 ;/vd IB*2*623 (US3994) - Beginning
"RTN","IBCEST",201,0)
 S IBDATE=DT,IBTYP=$G(IBPID("TYPE")),IBPID69=$E(IBPID,6,9),UPDATE=1
"RTN","IBCEST",202,0)
 S (IBID,IBIDQ)=""
"RTN","IBCEST",203,0)
 I "^I^P^"[(U_IBTYP_U),IBHOLD["COBID=",IBPID69'="0000" D   ; Update the CLM-OFC-IDs for I & P only with valid Secondary Payer IDs.
"RTN","IBCEST",204,0)
 . S IBQUAL(1)=$S(IBTYP="I":6.01,1:6.05),IBQUAL(2)=$S(IBTYP="I":6.03,1:6.07)  ; Get appropriate Qualifier field numbers.
"RTN","IBCEST",205,0)
 . S IBSID(1)=$S(IBTYP="I":6.02,1:6.06),IBSID(2)=$S(IBTYP="I":6.04,1:6.08)   ; Get appropriate Current Secondary Payer IDs.
"RTN","IBCEST",206,0)
 . S (DONE,HAVONE)=0
"RTN","IBCEST",207,0)
 . F II=1,2 D  Q:((+DONE)!(+HAVONE))   ; PROCESS THRU BOTH SECONDARY PAYER IDS OR UNTIL WE PERFORMED AN UPDATE.
"RTN","IBCEST",208,0)
 . . S IBIDQ=$$GET1^DIQ(36,+IBINS,IBQUAL(II),"I")  ; Get the current qualifier value
"RTN","IBCEST",209,0)
 . . S IBID=$$GET1^DIQ(36,+IBINS,IBSID(II),"I")    ; Get the current id value
"RTN","IBCEST",210,0)
 . . I IBIDQ="FY" S HAVONE=1 Q   ; Already have a Claim Office ID.
"RTN","IBCEST",211,0)
 . . I IBIDQ="" D  Q      ; Current value doesn't exists.okay to update.
"RTN","IBCEST",212,0)
 . . . S DIE="^DIC(36,",DR=IBSID(II)_"////"_IBPID69_";"_IBQUAL(II)_"////FY",DA=IBINS D ^DIE  ; Update the CLM-OFC-ID and Qualifier fields.
"RTN","IBCEST",213,0)
 . . . D UPDLOG(1,IBDATE,IBINS,IBPID69,IBTYP_"2",IBID) ; Log the CLM-OFC-ID "UPDATE".
"RTN","IBCEST",214,0)
 . . . S DONE=1      ; Success. Updated one so we can quit out.
"RTN","IBCEST",215,0)
 . . . Q
"RTN","IBCEST",216,0)
 . ; Should only get to the following line if no update was accomplished because there was no available room to add an "FY".
"RTN","IBCEST",217,0)
 . I '+DONE D UPDLOG(0,IBDATE,IBINS,IBPID69,IBTYP_"2",$S(+HAVONE:IBID,1:"*N/A FULL")) ; Log the CLM-OFC-ID "ATTEMPT"
"RTN","IBCEST",218,0)
 . Q
"RTN","IBCEST",219,0)
 ;/vd IB*2*623 (US3994) - End
"RTN","IBCEST",220,0)
 ;
"RTN","IBCEST",221,0)
 S IBIDFLD="3.0"_$S($G(IBPID("TYPE"))="I":4,1:2)
"RTN","IBCEST",222,0)
 ;JWS;IB*2.0*592;Dental
"RTN","IBCEST",223,0)
 I $G(IBPID("TYPE"))="D" S IBIDFLD=3.15
"RTN","IBCEST",224,0)
 S IBID=$P($G(^DIC(36,+IBINS,3)),U,IBIDFLD*100#100)
"RTN","IBCEST",225,0)
 Q:IBID=IBLOOK
"RTN","IBCEST",226,0)
 ;/vd IB*2*623 (US3994) Moved the following line up prior to some new lines of code.
"RTN","IBCEST",227,0)
 ; S IBDATE=DT,IBTYP=$G(IBPID("TYPE"))     ;KDM  US129 IB*2*577
"RTN","IBCEST",228,0)
 I IBID="" D  G UPDINSQ ; Update insurance co electronic id # if blank
"RTN","IBCEST",229,0)
 . S DIE="^DIC(36,",DR=IBIDFLD_"////"_IBLOOK,DA=IBINS D ^DIE
"RTN","IBCEST",230,0)
 . D UPDLOG(1,IBDATE,IBINS,IBLOOK,IBTYP,IBID)     ;KDM US129 IB*2*577
"RTN","IBCEST",231,0)
 I IBID'="",IBLOOK'="" D  ; Bulletin that the id on file and id returned
"RTN","IBCEST",232,0)
 . ; are different
"RTN","IBCEST",233,0)
 . N XMTO,XMDUZ,XMBODY,IBXM,XMSUBJ,XMZ
"RTN","IBCEST",234,0)
 . S XMTO("I:G.IB EDI")=""
"RTN","IBCEST",235,0)
 . S XMDUZ="",XMBODY="IBXM",XMSUBJ="PAYER ID RETURNED IS DIFFERENT THAN PAYER ID ON FILE"
"RTN","IBCEST",236,0)
 . S IBXM(1)="BILL #     : "_$P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBCEST",237,0)
 . S IBXM(2)="PAYER      : "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEST",238,0)
 . ;JWS;IB*2.0*592;Dental
"RTN","IBCEST",239,0)
 . S IBXM(3)="BILL TYPE  : "_$S($G(IBPID("TYPE"))="I":"INSTITUTIONAL",$G(IBPID("TYPE"))="D":"DENTAL",1:"PROFESSIONAL")
"RTN","IBCEST",240,0)
 . S IBXM(4)="ID ON FILE : "_IBID
"RTN","IBCEST",241,0)
 . S IBXM(5)="ID RETURNED: "_IBLOOK
"RTN","IBCEST",242,0)
 . S IBXM(6)=" ",IBXM(7)="   Please determine which id number is correct and correct the id in the",IBXM(8)="insurance file for this payer, if needed"
"RTN","IBCEST",243,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEST",244,0)
 . D UPDLOG(0,IBDATE,IBINS,IBLOOK,IBTYP,IBID)     ;KDM US129, US976 IB*2*577
"RTN","IBCEST",245,0)
 ;
"RTN","IBCEST",246,0)
UPDINSQ Q
"RTN","IBCEST",247,0)
 ;
"RTN","IBCEST",248,0)
UPDLOG(UPD,IBDATE,IBINS,IBLOOK,IBTYP,IBID)    ;KDM US129, US976 IB*2*577 New section for New Payer Report 
"RTN","IBCEST",249,0)
 ; store flds for reporting purposes when updating or attempting to update Payer information (US129)
"RTN","IBCEST",250,0)
 ; ^DIC(36 -17.0 277EDI ID Number
"RTN","IBCEST",251,0)
 ;          17.01 277EDI ID Number
"RTN","IBCEST",252,0)
 ;          17.02 277Date EDI ID Number
"RTN","IBCEST",253,0)
 ;          17.03 277EDI Type (P)ROF or (I)nst or (D)ental
"RTN","IBCEST",254,0)
 ;          17.04 277EDI ID NUMBER ON FILE ;if blank it was an update otherwise it was an attempted update. 
"RTN","IBCEST",255,0)
 ;
"RTN","IBCEST",256,0)
 Q:(($D(^DIC(36,"AEDIX",IBDATE,IBINS,IBLOOK,IBTYP)))&(UPD=0))     ;store only one attempt a day
"RTN","IBCEST",257,0)
 N ERROR,IBFDA,LEV
"RTN","IBCEST",258,0)
 S LEV="+2,"_IBINS_","
"RTN","IBCEST",259,0)
 S IBFDA(36.017,LEV,.01)=IBLOOK     ;New Value from 277STAT
"RTN","IBCEST",260,0)
 S IBFDA(36.017,LEV,.02)=IBDATE     ;Date transaction is processed
"RTN","IBCEST",261,0)
 S IBFDA(36.017,LEV,.03)=IBTYP      ;"P" or "I" for "EDI-PayerID, or "P2" or "I2" for CLM-OFC-ID
"RTN","IBCEST",262,0)
 S IBFDA(36.017,LEV,.04)=$G(IBID)   ;Value already on file- if blank it was an update, otherwise attempted update
"RTN","IBCEST",263,0)
 D UPDATE^DIE("","IBFDA","","ERROR")
"RTN","IBCEST",264,0)
 Q
"RTN","IBCEST",265,0)
 ;
"RTN","IBCEST",266,0)
MSGLNSZ(MSG) ; Change Input Message Lines to be no more than 70 characters long each
"RTN","IBCEST",267,0)
 ;
"RTN","IBCEST",268,0)
 ; Input/Output:   MSG  - array of Input Message Lines; this is also the Output Message
"RTN","IBCEST",269,0)
 ; which is an array of Converted Message Lines (with lines no more than 70 chars each)
"RTN","IBCEST",270,0)
 ;
"RTN","IBCEST",271,0)
 N LN,XARY,XARYLN,CNT,OUTMSG,TMPMSG,LDNGSP,LDNGSPN
"RTN","IBCEST",272,0)
 S LN="",CNT=0 F  S LN=$O(MSG(LN)) Q:LN=""  D  ;
"RTN","IBCEST",273,0)
 . ; Find any leading spaces in original message line, 
"RTN","IBCEST",274,0)
 . ; to be used if line got split below
"RTN","IBCEST",275,0)
 . S TMPMSG=$$TRIM^XLFSTR(MSG(LN),"L"," ")  ;Trim Leading Spaces
"RTN","IBCEST",276,0)
 . S LDNGSP=$P(MSG(LN),TMPMSG,1)  ;get leading spaces if any
"RTN","IBCEST",277,0)
 . S LDNGSPN=$L(LDNGSP) S:LDNGSPN>30 LDNGSP=$E(LDNGSP,1,30) ;make sure there are no more than 30 leading spaces 
"RTN","IBCEST",278,0)
 . ; Converts a single line to multiple lines with a maximum width of 70 each
"RTN","IBCEST",279,0)
 . ; If line is 70 chars or less, this call returns the exact line
"RTN","IBCEST",280,0)
 . K XARY D FSTRNG^IBJU1(TMPMSG,70-LDNGSPN,.XARY)
"RTN","IBCEST",281,0)
 . ; Scan lines and merge them into the final output array (OUTMSG)
"RTN","IBCEST",282,0)
 . ; On lines 2 and higher, add Leading Spaces found above, if any.
"RTN","IBCEST",283,0)
 . S XARYLN="" F  S XARYLN=$O(XARY(XARYLN)) Q:XARYLN=""  S CNT=CNT+1,OUTMSG(CNT)=LDNGSP_XARY(XARYLN)
"RTN","IBCEST",284,0)
 ;
"RTN","IBCEST",285,0)
 ; Move the final Message Lines (OUTMSG) into MSG array to be returned
"RTN","IBCEST",286,0)
 K MSG M MSG=OUTMSG
"RTN","IBCEST",287,0)
 Q
"RTN","IBCEST",288,0)
 ;
"RTN","IBCEU7")
0^61^B38663293^B36671868
"RTN","IBCEU7",1,0)
IBCEU7 ;ALB/DEM - EDI UTILITIES ;26-SEP-2010
"RTN","IBCEU7",2,0)
 ;;2.0;INTEGRATED BILLING;**432,592,623**;21-MAR-94;Build 70
"RTN","IBCEU7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEU7",4,0)
 Q
"RTN","IBCEU7",5,0)
 ;
"RTN","IBCEU7",6,0)
LNPRVOK(VAL,IBIFN) ; Check bill form & line prov function agree
"RTN","IBCEU7",7,0)
 ; DEM;432 - New routine for Claim Line Provider.
"RTN","IBCEU7",8,0)
 ; VAL = internal value of prov function
"RTN","IBCEU7",9,0)
 ;
"RTN","IBCEU7",10,0)
 ; Allowable line provider functions for UB04 (FORM TYPE = 3)
"RTN","IBCEU7",11,0)
 ; Inpatient and UB04 Outpatient:
"RTN","IBCEU7",12,0)
 ;   - Rendering Provider(3).
"RTN","IBCEU7",13,0)
 ;   - Referring Provider(1).
"RTN","IBCEU7",14,0)
 ;   - Operating Physician(2).
"RTN","IBCEU7",15,0)
 ;   - Other Operating Physician(9).
"RTN","IBCEU7",16,0)
 ;
"RTN","IBCEU7",17,0)
 ; Allowable line provider functions for CMS 1500 (FORM TYPE = 2)
"RTN","IBCEU7",18,0)
 ; Inpatient and CMS 1500 Outpatient:
"RTN","IBCEU7",19,0)
 ;   - Rendering Provider(3).
"RTN","IBCEU7",20,0)
 ;   - Referring Provider(1).
"RTN","IBCEU7",21,0)
 ;   - Supervising Provider(5).
"RTN","IBCEU7",22,0)
 ;
"RTN","IBCEU7",23,0)
 ;JWS;IB*2.0*592 US1108
"RTN","IBCEU7",24,0)
 ; Allowable line provider functions for J430D Dental (FORM TYPE = 7)
"RTN","IBCEU7",25,0)
 ; Inpatient and CMS 1500 Outpatient:
"RTN","IBCEU7",26,0)
 ;   - Rendering Provider(3).
"RTN","IBCEU7",27,0)
 ;   - Referring Provider(1).
"RTN","IBCEU7",28,0)
 ;   - Supervising Provider(5).
"RTN","IBCEU7",29,0)
 ;   - Assistant Surgeon (6). - Dental J430D only
"RTN","IBCEU7",30,0)
 ;
"RTN","IBCEU7",31,0)
 N OK,IBUB
"RTN","IBCEU7",32,0)
 S VAL=$$UP^XLFSTR(VAL)
"RTN","IBCEU7",33,0)
 S OK=$S(VAL'="":1,1:0)
"RTN","IBCEU7",34,0)
 G:'OK!'$G(IBIFN) PRVQ
"RTN","IBCEU7",35,0)
 ;
"RTN","IBCEU7",36,0)
 ;JWS;IB*2.0*592 US1108 - 2 for form#7 Dental
"RTN","IBCEU7",37,0)
 S IBUB=$S($$FT^IBCEF(IBIFN)=7:2,1:($$FT^IBCEF(IBIFN)=3)) ; 1 if UB-04 ; 0 if CMS-1500 ; 2 if J430D Dental form
"RTN","IBCEU7",38,0)
 ;
"RTN","IBCEU7",39,0)
 S OK=0
"RTN","IBCEU7",40,0)
 I IBUB=1,"1239"[VAL S OK=1  ; UB-04
"RTN","IBCEU7",41,0)
 I 'IBUB,"135"[VAL S OK=1  ; CMS-1500
"RTN","IBCEU7",42,0)
 ;JWS;IB*2.0*592 US1108 J430D Dental
"RTN","IBCEU7",43,0)
 I IBUB=2,"1356"[VAL S OK=1
"RTN","IBCEU7",44,0)
 ;
"RTN","IBCEU7",45,0)
PRVQ Q OK
"RTN","IBCEU7",46,0)
 ;
"RTN","IBCEU7",47,0)
LNPRVHLP ;Helptext for line provider function.
"RTN","IBCEU7",48,0)
 ;
"RTN","IBCEU7",49,0)
 N IBZ,IBQUIT,VALUE,FORMAT
"RTN","IBCEU7",50,0)
 F IBZ=1:1 S:$P($T(HLPTXT+IBZ),";;",2)="END" IBQUIT=1 Q:$G(IBQUIT)  D
"RTN","IBCEU7",51,0)
 . S VALUE=$P($T(HLPTXT+IBZ),";;",2)
"RTN","IBCEU7",52,0)
 . S FORMAT=$S(VALUE="":"!",1:"")
"RTN","IBCEU7",53,0)
 . D EN^DDIOL(VALUE,"",FORMAT)
"RTN","IBCEU7",54,0)
 . Q
"RTN","IBCEU7",55,0)
 Q
"RTN","IBCEU7",56,0)
 ;
"RTN","IBCEU7",57,0)
HLPTXT ; Helptext for line provider function.
"RTN","IBCEU7",58,0)
 ;;
"RTN","IBCEU7",59,0)
 ;;Enter the name of the line level provider who provided this service.
"RTN","IBCEU7",60,0)
 ;;Line level providers are optional and should only be entered if
"RTN","IBCEU7",61,0)
 ;;different from the claim level provider.
"RTN","IBCEU7",62,0)
 ;;
"RTN","IBCEU7",63,0)
 ;;
"RTN","IBCEU7",64,0)
 ;;END
"RTN","IBCEU7",65,0)
 ;
"RTN","IBCEU7",66,0)
HLPTXT2 ; ***Currently, not activated*** - Helptext for line provider function.
"RTN","IBCEU7",67,0)
 ;;
"RTN","IBCEU7",68,0)
 ;;LINE PROVIDER FUNCTION requirements:
"RTN","IBCEU7",69,0)
 ;;
"RTN","IBCEU7",70,0)
 ;;Allowable line provider functions for UB04 Inpatient and Outpatient:
"RTN","IBCEU7",71,0)
 ;;
"RTN","IBCEU7",72,0)
 ;;  - Rendering Provider(3).
"RTN","IBCEU7",73,0)
 ;;  - Referring Provider(1).
"RTN","IBCEU7",74,0)
 ;;  - Operating Physician(2).
"RTN","IBCEU7",75,0)
 ;;  - Other Operating Physician(9).
"RTN","IBCEU7",76,0)
 ;;
"RTN","IBCEU7",77,0)
 ;;Allowable line provider functions for CMS 1500 Inpatient and Outpatient:
"RTN","IBCEU7",78,0)
 ;;
"RTN","IBCEU7",79,0)
 ;;  - Rendering Provider(3).
"RTN","IBCEU7",80,0)
 ;;  - Referring Provider(1).
"RTN","IBCEU7",81,0)
 ;;  - Supervising Provider(5).
"RTN","IBCEU7",82,0)
 ;;
"RTN","IBCEU7",83,0)
 ;; Allowable line provider functions for J430D Dental (FORM TYPE = 7)
"RTN","IBCEU7",84,0)
 ;; Inpatient and CMS 1500 Outpatient:
"RTN","IBCEU7",85,0)
 ;;   - Rendering Provider(3).
"RTN","IBCEU7",86,0)
 ;;   - Referring Provider(1).
"RTN","IBCEU7",87,0)
 ;;   - Supervising Provider(5).
"RTN","IBCEU7",88,0)
 ;;   - Assistant Surgeon (6).
"RTN","IBCEU7",89,0)
 ;;
"RTN","IBCEU7",90,0)
 ;;END
"RTN","IBCEU7",91,0)
 Q
"RTN","IBCEU7",92,0)
 ;
"RTN","IBCEU7",93,0)
LNPRVFT(IBFT,IBLNPRV) ; DEM;432 - Field Index "AK" (#301) on FORM TYPE field (399,.19).
"RTN","IBCEU7",94,0)
 ;
"RTN","IBCEU7",95,0)
 ; Description:
"RTN","IBCEU7",96,0)
 ;
"RTN","IBCEU7",97,0)
 ; This function is called by the FORM TYPE (399,.19) "AK" field index.
"RTN","IBCEU7",98,0)
 ; In the case when the FORM TYPE field is changed, then the line
"RTN","IBCEU7",99,0)
 ; provider types are checked to see if any, or all, line providers
"RTN","IBCEU7",100,0)
 ; need to be deleted from the claim.
"RTN","IBCEU7",101,0)
 ;
"RTN","IBCEU7",102,0)
 ; Input:
"RTN","IBCEU7",103,0)
 ;
"RTN","IBCEU7",104,0)
 ; IBFT = FORM TYPE = 2 = (CMS-1500), or FORM TYPE = 3 = (UB-04).
"RTN","IBCEU7",105,0)
 ;        Must be either FORM TYPE 2, or FORM TYPE 3 to continue.
"RTN","IBCEU7",106,0)
 ;        See allowable line provider functions by FORM TYPE below.
"RTN","IBCEU7",107,0)
 ; IBLNPRV = Array passed by reference.
"RTN","IBCEU7",108,0)
 ;
"RTN","IBCEU7",109,0)
 ; Output:
"RTN","IBCEU7",110,0)
 ;
"RTN","IBCEU7",111,0)
 ; OK = 1 = line providers to delete, OK = 0 = no line providers to delete.
"RTN","IBCEU7",112,0)
 ; IBLNPRV Array = If line providers to delete, then array contains
"RTN","IBCEU7",113,0)
 ;                 these line providers - IBLNPRV(399.0404,"IENS",.01)="@"
"RTN","IBCEU7",114,0)
 ;
"RTN","IBCEU7",115,0)
 ; Allowable line provider functions for UB04 (FORM TYPE = 3)
"RTN","IBCEU7",116,0)
 ; Inpatient and UB04 Outpatient:
"RTN","IBCEU7",117,0)
 ;   - Rendering Provider(VAL=3).
"RTN","IBCEU7",118,0)
 ;   - Referring Provider(VAL=1).
"RTN","IBCEU7",119,0)
 ;   - Operating Physician(VAL=2).
"RTN","IBCEU7",120,0)
 ;   - Other Operating Physician(VAL=9).
"RTN","IBCEU7",121,0)
 ;
"RTN","IBCEU7",122,0)
 ; Allowable line provider functions for CMS 1500 (FORM TYPE = 2)
"RTN","IBCEU7",123,0)
 ; Inpatient and CMS 1500 Outpatient:
"RTN","IBCEU7",124,0)
 ;   - Rendering Provider(VAL=3).
"RTN","IBCEU7",125,0)
 ;   - Referring Provider(VAL=1).
"RTN","IBCEU7",126,0)
 ;   - Supervising Provider(VAL=5).
"RTN","IBCEU7",127,0)
 ;
"RTN","IBCEU7",128,0)
 ; Allowable line provider functions for J430D (FORM TYPE = 7)
"RTN","IBCEU7",129,0)
 ; Dental:
"RTN","IBCEU7",130,0)
 ;   - Rendering Provider(VAL=3).
"RTN","IBCEU7",131,0)
 ;   - Referring Provider(VAL=1).
"RTN","IBCEU7",132,0)
 ;   - Supervising Provider(VAL=5).
"RTN","IBCEU7",133,0)
 ;   - Assistant Surgeon(VAL=6).
"RTN","IBCEU7",134,0)
 ;
"RTN","IBCEU7",135,0)
 Q:'$G(IBIFN) 0  ; QUIT 0 if no claim number.
"RTN","IBCEU7",136,0)
 Q:'$G(IBFT) 0  ; QUIT 0 if no FORM TYPE.
"RTN","IBCEU7",137,0)
 ;JWS;IB*2.0*592 US1108
"RTN","IBCEU7",138,0)
 Q:(IBFT'=2)&(IBFT'=3)&(IBFT'=7) 0  ; QUIT 0 - Must be CMS-1500 (2) or UB-04 (3) or J430D (7) FORM TYPE.
"RTN","IBCEU7",139,0)
 ;
"RTN","IBCEU7",140,0)
 N IBPRVFUN,OK
"RTN","IBCEU7",141,0)
 S:IBFT=3 IBPRVFUN("VAL",IBFT)="1239"  ; Allowable LINE PROVIDER FUNCTIONs for UB-04.
"RTN","IBCEU7",142,0)
 S:IBFT=2 IBPRVFUN("VAL",IBFT)="135"  ; Allowable LINE PROVIDER FUNCTIONs for CMS-1500.
"RTN","IBCEU7",143,0)
 ;JWS;IB*2.0*592 US1108
"RTN","IBCEU7",144,0)
 S:IBFT=7 IBPRVFUN("VAL",IBFT)="1356"  ;Allowable LINE PROVIDER FUNCTIONs for J430D.
"RTN","IBCEU7",145,0)
 ;
"RTN","IBCEU7",146,0)
 S OK=0  ; Initialize OK=0.
"RTN","IBCEU7",147,0)
 ;
"RTN","IBCEU7",148,0)
 N IBPROCP,IBLPIEN,IBLNPROV,DA
"RTN","IBCEU7",149,0)
 S IBPROCP=0 F  S IBPROCP=$O(^DGCR(399,IBIFN,"CP",IBPROCP)) Q:'IBPROCP  D  ; Loop on PROCEDURES multiple.
"RTN","IBCEU7",150,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,0))#10)  ; No zero node for procedure.
"RTN","IBCEU7",151,0)
 . S IBPRVFUN=0 F  S IBPRVFUN=$O(^DGCR(399,IBIFN,"CP",IBPROCP,"LNPRV","B",IBPRVFUN)) Q:'IBPRVFUN  D:IBPRVFUN("VAL",IBFT)'[IBPRVFUN
"RTN","IBCEU7",152,0)
 . . S IBLPIEN=0 F  S IBLPIEN=$O(^DGCR(399,IBIFN,"CP",IBPROCP,"LNPRV","B",IBPRVFUN,IBLPIEN)) Q:'IBLPIEN  D
"RTN","IBCEU7",153,0)
 . . . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,"LNPRV",IBLPIEN,0))#10)  ; No zero node for line level provider.
"RTN","IBCEU7",154,0)
 . . . S IBLNPROV=$P(^DGCR(399,IBIFN,"CP",IBPROCP,"LNPRV",IBLPIEN,0),U,2)
"RTN","IBCEU7",155,0)
 . . . Q:'IBLNPROV  ; No line provider for this line provider function.
"RTN","IBCEU7",156,0)
 . . . S OK=1,IBLNPRV(399.0404,IBLPIEN_","_IBPROCP_","_IBIFN_",",.01)="@"  ; We have at leaset one line provider to delete from claim.
"RTN","IBCEU7",157,0)
 . . . Q
"RTN","IBCEU7",158,0)
 . . Q
"RTN","IBCEU7",159,0)
 . Q
"RTN","IBCEU7",160,0)
 ;
"RTN","IBCEU7",161,0)
 Q OK
"RTN","IBCEU7",162,0)
 ;
"RTN","IBCEU7",163,0)
REMOVE(IBIFN,IBFT) ; This will be used to remove all line level providers and all line level attachments from inpatient UB claims
"RTN","IBCEU7",164,0)
 ;
"RTN","IBCEU7",165,0)
 ; Input IBIFN - Claim Number
"RTN","IBCEU7",166,0)
 ;
"RTN","IBCEU7",167,0)
 Q:IBFT'=3   ; Only worried about UBs
"RTN","IBCEU7",168,0)
 N IBINPAT
"RTN","IBCEU7",169,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN) Q:'IBINPAT   ; Quit if it's not an inpatient
"RTN","IBCEU7",170,0)
 ;
"RTN","IBCEU7",171,0)
 ; If we got here, we have an inpatient UB
"RTN","IBCEU7",172,0)
 ; In which case, we should not have any line level providers or line level attachment control numbers
"RTN","IBCEU7",173,0)
 ; If we do, then let's remove them
"RTN","IBCEU7",174,0)
 ;
"RTN","IBCEU7",175,0)
 N CPIEN,LNPRVIEN,FDA,ERR
"RTN","IBCEU7",176,0)
 S CPIEN=0 F  S CPIEN=$O(^DGCR(399,IBIFN,"CP",CPIEN)) Q:'+CPIEN  D
"RTN","IBCEU7",177,0)
 . ;
"RTN","IBCEU7",178,0)
 . ; Remove the Line level attachments
"RTN","IBCEU7",179,0)
 . S FDA(399.0304,CPIEN_","_IBIFN_",",70)="@"
"RTN","IBCEU7",180,0)
 . S FDA(399.0304,CPIEN_","_IBIFN_",",71)="@"
"RTN","IBCEU7",181,0)
 . S FDA(399.0304,CPIEN_","_IBIFN_",",72)="@"
"RTN","IBCEU7",182,0)
 . D FILE^DIE("E","FDA")
"RTN","IBCEU7",183,0)
 . ;
"RTN","IBCEU7",184,0)
 . K FDA
"RTN","IBCEU7",185,0)
 . S LNPRVIEN=0 F  S LNPRVIEN=$O(^DGCR(399,IBIFN,"CP",CPIEN,"LNPRV",LNPRVIEN)) Q:'+LNPRVIEN  D
"RTN","IBCEU7",186,0)
 .. ;
"RTN","IBCEU7",187,0)
 .. ;Remove the line level providers
"RTN","IBCEU7",188,0)
 .. S FDA(399.0404,LNPRVIEN_","_CPIEN_","_IBIFN_",",.01)="@"
"RTN","IBCEU7",189,0)
 . I $D(FDA) D FILE^DIE("E","FDA")
"RTN","IBCEU7",190,0)
 Q
"RTN","IBCEU7",191,0)
 ;
"RTN","IBCEU7",192,0)
 ; vd - IB*2.0*623 (US4995) - Added the following module of code for ROI validation.
"RTN","IBCEU7",193,0)
ROIDTCK(IBIFN) ; Date validator for ROI checking
"RTN","IBCEU7",194,0)
 ; INPUT:
"RTN","IBCEU7",195,0)
 ;   IBIFN is the internal Claim Number.
"RTN","IBCEU7",196,0)
 ; OUTPUT:
"RTN","IBCEU7",197,0)
 ;   0 means the Claim is NOT ROI eligible based upon the Date of Service
"RTN","IBCEU7",198,0)
 ;   1 means the Claim IS ROI eligible based upon the Date of Service.
"RTN","IBCEU7",199,0)
 N IBDOS,IBTBD,ROIELG,X,Y
"RTN","IBCEU7",200,0)
 S ROIELG=0
"RTN","IBCEU7",201,0)
 S IBDOS=$$BDATE^IBACSV(IBIFN)
"RTN","IBCEU7",202,0)
 S X=20190128 D ^%DT S IBTBD=Y
"RTN","IBCEU7",203,0)
 ; DOS prior to 1/28/19 with sensitive diagnosis requires ROI to bill
"RTN","IBCEU7",204,0)
 ; DOS on or after 1/28/19 with sensitive diagnosis does not require ROI to bill
"RTN","IBCEU7",205,0)
 I IBDOS<IBTBD S ROIELG=1
"RTN","IBCEU7",206,0)
 Q ROIELG
"RTN","IBCEU7",207,0)
 ;
"RTN","IBCEXTRP")
0^62^B53771713^B50603879
"RTN","IBCEXTRP",1,0)
IBCEXTRP ;ALB/JEH - VIEW/PRINT EDI EXTRACT DATA ;4/22/03 9:59am
"RTN","IBCEXTRP",2,0)
 ;;2.0;INTEGRATED BILLING;**137,197,211,348,349,377,592,623**;21-MAR-94;Build 70
"RTN","IBCEXTRP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEXTRP",4,0)
 ;
"RTN","IBCEXTRP",5,0)
EN ;
"RTN","IBCEXTRP",6,0)
INIT ;
"RTN","IBCEXTRP",7,0)
 W !!,"This option will display the EDI extract data for a bill.",!
"RTN","IBCEXTRP",8,0)
 N IBREC1,IBIEN,IBINC,DIC,X,Y,DIR,IB364IEN,IBVNUM,IBSEG,STOP,POP,DTOUT,DUOUT
"RTN","IBCEXTRP",9,0)
 ;
"RTN","IBCEXTRP",10,0)
 N DPTNOFZY S DPTNOFZY=1 ; Suppress PATIENT file fuzzy lookups
"RTN","IBCEXTRP",11,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ",DIC("S")="I 234[$P(^(0),U,13)" D ^DIC
"RTN","IBCEXTRP",12,0)
 I Y<1 G EXITQ
"RTN","IBCEXTRP",13,0)
 S IBIEN=+Y,IBREC1=$G(^DGCR(399,IBIEN,0))
"RTN","IBCEXTRP",14,0)
 S IB364IEN=$$LAST364^IBCEF4(IBIEN) I +$G(IB364IEN)=0 D  G EXITQ
"RTN","IBCEXTRP",15,0)
 . W !,"There is no entry in the EDI Transmit Bill file for this bill number."
"RTN","IBCEXTRP",16,0)
 S IBVNUM=$P($G(^IBA(364,IB364IEN,0)),U,2)
"RTN","IBCEXTRP",17,0)
 ;JWS;IB*2.0*623;add check for 837 FHIR not on
"RTN","IBCEXTRP",18,0)
 I +$G(IBVNUM)=0,'$$GET1^DIQ(350.9,"1,",8.21,"I") D  G EXITQ
"RTN","IBCEXTRP",19,0)
 . W !!,"There is no batch # for this bill.  It has not been transmitted."
"RTN","IBCEXTRP",20,0)
 I +$G(IBVNUM) S IBVNUM=$P($G(^IBA(364.1,IBVNUM,0)),U)
"RTN","IBCEXTRP",21,0)
 S DIR("A")="Include Fields With No Data?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","IBCEXTRP",22,0)
 W ! D ^DIR K DIR
"RTN","IBCEXTRP",23,0)
 I $D(DTOUT)!$D(DUOUT) G EXITQ
"RTN","IBCEXTRP",24,0)
 S IBINC=+Y
"RTN","IBCEXTRP",25,0)
 ;
"RTN","IBCEXTRP",26,0)
 ; IB*2*377 - esg - Ask for specific EDI segments to view
"RTN","IBCEXTRP",27,0)
 ;
"RTN","IBCEXTRP",28,0)
 W !
"RTN","IBCEXTRP",29,0)
 S DIR(0)="SA^A:All EDI Segments;S:Selected EDI Segments"
"RTN","IBCEXTRP",30,0)
 S DIR("A")="Include (A)ll or (S)elected EDI Segments?: "
"RTN","IBCEXTRP",31,0)
 S DIR("B")="All EDI Segments"
"RTN","IBCEXTRP",32,0)
 D ^DIR K DIR
"RTN","IBCEXTRP",33,0)
 I $D(DTOUT)!$D(DUOUT) G EXITQ
"RTN","IBCEXTRP",34,0)
 I Y="A" G DEV                    ; all segments, skip to device prompt
"RTN","IBCEXTRP",35,0)
 ;
"RTN","IBCEXTRP",36,0)
 W !
"RTN","IBCEXTRP",37,0)
 K IBSEG
"RTN","IBCEXTRP",38,0)
 S STOP=0
"RTN","IBCEXTRP",39,0)
 F  D  Q:STOP
"RTN","IBCEXTRP",40,0)
 . S DIR(0)="FO^3:4"
"RTN","IBCEXTRP",41,0)
 . S DIR("A")=" Select EDI Segment"
"RTN","IBCEXTRP",42,0)
 . I $D(IBSEG) S DIR("A")="Another EDI Segment"
"RTN","IBCEXTRP",43,0)
 . S DIR("?")="Enter the name of the EDI segment to include."
"RTN","IBCEXTRP",44,0)
 . D ^DIR K DIR
"RTN","IBCEXTRP",45,0)
 . I $D(DTOUT)!$D(DUOUT) S STOP=1 Q
"RTN","IBCEXTRP",46,0)
 . S Y=$$UP^XLFSTR(Y),Y=$$TRIM^XLFSTR(Y)   ; uppercase/trim spaces
"RTN","IBCEXTRP",47,0)
 . I Y="" S STOP=1 Q
"RTN","IBCEXTRP",48,0)
 . S IBSEG(Y)=""
"RTN","IBCEXTRP",49,0)
 . Q
"RTN","IBCEXTRP",50,0)
 I $D(DTOUT)!$D(DUOUT) G EXITQ
"RTN","IBCEXTRP",51,0)
 ;
"RTN","IBCEXTRP",52,0)
DEV ; - Select device
"RTN","IBCEXTRP",53,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCEXTRP",54,0)
 W !
"RTN","IBCEXTRP",55,0)
 S %ZIS="QM" D ^%ZIS G:POP EXITQ
"RTN","IBCEXTRP",56,0)
 I $D(IO("Q")) D  G EXITQ
"RTN","IBCEXTRP",57,0)
 . S ZTRTN="LIST^IBCEXTRP",ZTDESC="Transmitted Bill Extract Data"
"RTN","IBCEXTRP",58,0)
 . S ZTSAVE("IB*")=""
"RTN","IBCEXTRP",59,0)
 . D ^%ZTLOAD
"RTN","IBCEXTRP",60,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCEXTRP",61,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCEXTRP",62,0)
 U IO
"RTN","IBCEXTRP",63,0)
 ;
"RTN","IBCEXTRP",64,0)
LIST ; - set up array and print data
"RTN","IBCEXTRP",65,0)
 N IBPG,IBSEQ,IBPC,IBDA,IBREC,IBQUIT,IBILL,IBLINE,IBXDATA,IBERR,IBXERR,Z,Z0,Z1
"RTN","IBCEXTRP",66,0)
 D EXTRACT(IBIEN,IBVNUM,8,1)
"RTN","IBCEXTRP",67,0)
 S (IBPG,IBQUIT,IBSEQ,IBPC,IBDA,IBLINE)=0
"RTN","IBCEXTRP",68,0)
 K ^TMP($J,"IBLINES")
"RTN","IBCEXTRP",69,0)
 ;IB*2.0*211 - rely on form type instead of bill charge type
"RTN","IBCEXTRP",70,0)
 N IBFMTYP S IBFMTYP=$$FT^IBCEF(IBIEN)
"RTN","IBCEXTRP",71,0)
 ;JWS;IB*2.0*592 - Dental form 7 (J430D)
"RTN","IBCEXTRP",72,0)
 S IBFMTYP=$S(IBFMTYP=2:"CMS-1500",IBFMTYP=3:"UB-04",IBFMTYP=7:"J430D",1:"OTHER"_"("_IBFMTYP_")")
"RTN","IBCEXTRP",73,0)
 S IBILL=$S($$INPAT^IBCEF(IBIEN,1):"Inpt",1:"Oupt")_"/"_IBFMTYP
"RTN","IBCEXTRP",74,0)
 ;
"RTN","IBCEXTRP",75,0)
 I $D(^TMP("IBXERR",$J)) D  G EXITQ
"RTN","IBCEXTRP",76,0)
 . S IBERR=0 F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  W !,$G(^TMP("IBXERR",$J,IBERR))
"RTN","IBCEXTRP",77,0)
 . Q
"RTN","IBCEXTRP",78,0)
 ;
"RTN","IBCEXTRP",79,0)
 F  S IBSEQ=$O(^IBA(364.6,"ASEQ",8,IBSEQ)) Q:'IBSEQ  I $$INCLUDE(IBSEQ) F  S IBPC=$O(^IBA(364.6,"ASEQ",8,IBSEQ,1,IBPC)) Q:'IBPC  F  S IBDA=$O(^IBA(364.6,"ASEQ",8,IBSEQ,1,IBPC,IBDA)) Q:'IBDA  D
"RTN","IBCEXTRP",80,0)
 . N IBOK,Z,IBMULT,DSP,IBDATA,PCD,SN
"RTN","IBCEXTRP",81,0)
 . S IBREC=$G(^IBA(364.6,IBDA,0))
"RTN","IBCEXTRP",82,0)
 . I $P(IBREC,U,11)=1 Q     ; calculate only field
"RTN","IBCEXTRP",83,0)
 . ;
"RTN","IBCEXTRP",84,0)
 . ; processing for piece 1 of this EDI segment to see if there is any
"RTN","IBCEXTRP",85,0)
 . ; other data that exists in this segment
"RTN","IBCEXTRP",86,0)
 . I IBPC=1 S IBOK=0 D
"RTN","IBCEXTRP",87,0)
 .. S Z=1 F  S Z=$O(^TMP("IBXDATA",$J,1,IBSEQ,1,Z)) Q:'Z  I $G(^(Z))'="" S IBOK=1 Q
"RTN","IBCEXTRP",88,0)
 .. I IBOK Q   ; data exists so include segment normally
"RTN","IBCEXTRP",89,0)
 .. S SN=$P($G(^TMP("IBXDATA",$J,1,IBSEQ,1,1)),U,1)   ; segment name
"RTN","IBCEXTRP",90,0)
 .. I SN="" S SN=$P($P(IBREC,U,10),"'",2)
"RTN","IBCEXTRP",91,0)
 .. S SN=SN_" (No Data - Record Not Sent)"
"RTN","IBCEXTRP",92,0)
 .. S $P(^TMP("IBXDATA",$J,1,IBSEQ,1,1),U,1)=SN
"RTN","IBCEXTRP",93,0)
 .. Q
"RTN","IBCEXTRP",94,0)
 . ;
"RTN","IBCEXTRP",95,0)
 . ; loop thru all multiple occurrences of this segment
"RTN","IBCEXTRP",96,0)
 . S IBMULT=0 F  S IBMULT=$O(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT)) Q:'IBMULT   D
"RTN","IBCEXTRP",97,0)
 .. ;
"RTN","IBCEXTRP",98,0)
 .. ; field with no data; check user preference
"RTN","IBCEXTRP",99,0)
 .. I '$G(IBINC),$P($G(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT,IBPC)),U,1)="" Q
"RTN","IBCEXTRP",100,0)
 .. ;
"RTN","IBCEXTRP",101,0)
 .. ; build display data
"RTN","IBCEXTRP",102,0)
 .. S PCD="["_IBPC_"] "      ; piece#
"RTN","IBCEXTRP",103,0)
 .. S DSP=$P(IBREC,U,10)     ; short description field
"RTN","IBCEXTRP",104,0)
 .. S IBDATA=$P($G(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT,IBPC)),U,1)   ; data
"RTN","IBCEXTRP",105,0)
 .. S DSP=$J(PCD,5)_$$FO^IBCNEUT1(DSP,40)_": "_IBDATA
"RTN","IBCEXTRP",106,0)
 .. S ^TMP($J,"IBLINES",IBSEQ,IBMULT,IBPC)=DSP
"RTN","IBCEXTRP",107,0)
 .. Q
"RTN","IBCEXTRP",108,0)
 . Q
"RTN","IBCEXTRP",109,0)
 ;
"RTN","IBCEXTRP",110,0)
 S IBQUIT=0
"RTN","IBCEXTRP",111,0)
 W:$E(IOST,1,2)["C-" @IOF ; initial form feed for screen print
"RTN","IBCEXTRP",112,0)
 N IBFMTYP S IBFMTYP=$$FT^IBCEF(IBIEN)
"RTN","IBCEXTRP",113,0)
 ;JWS;IB*2.0*592 - Dental form 7 (J430D)
"RTN","IBCEXTRP",114,0)
 S IBFMTYP=$S(IBFMTYP=2:"CMS-1500",IBFMTYP=3:"UB-04",IBFMTYP=7:"J430D",1:"OTHER"_"("_IBFMTYP_")")
"RTN","IBCEXTRP",115,0)
 S IBILL=$S($$INPAT^IBCEF(IBIEN,1):"Inpt",1:"Oupt")_"/"_IBFMTYP
"RTN","IBCEXTRP",116,0)
 D HDR
"RTN","IBCEXTRP",117,0)
 S Z=0 F  S Z=$O(^TMP($J,"IBLINES",Z)) Q:'Z!IBQUIT  S Z0=0 F  S Z0=$O(^TMP($J,"IBLINES",Z,Z0)) Q:'Z0!IBQUIT  S Z1=0 F  S Z1=$O(^TMP($J,"IBLINES",Z,Z0,Z1)) Q:'Z1!IBQUIT  D  Q:IBQUIT
"RTN","IBCEXTRP",118,0)
 . I IBLINE>(IOSL-3) D HDR Q:IBQUIT
"RTN","IBCEXTRP",119,0)
 . ;JWS;IB*2.0*592;Wrap long Dental Proc Description
"RTN","IBCEXTRP",120,0)
 . I Z=60,Z1=19 D  Q:IBQUIT
"RTN","IBCEXTRP",121,0)
 . . N IBNOTE,X,IBDATA
"RTN","IBCEXTRP",122,0)
 . . S IBDATA=$G(^TMP($J,"IBLINES",Z,Z0,Z1)) I IBDATA="" Q
"RTN","IBCEXTRP",123,0)
 . . S IBDATA(1)=$P(IBDATA,": "),IBDATA(2)=$P(IBDATA,": ",2),IBDATA(1)=IBDATA(1)_": "
"RTN","IBCEXTRP",124,0)
 . . S IBNOTE=$$WRAP^IBCSC10H(IBDATA(2),32,32,.IBNOTE)
"RTN","IBCEXTRP",125,0)
 . . W !,IBDATA(1)
"RTN","IBCEXTRP",126,0)
 . . S X=0 F  S X=$O(IBNOTE(X)) Q:X=""  Q:IBQUIT  W:X'=1 ! W ?47,IBNOTE(X) S IBLINE=IBLINE+1 I IBLINE>(IOSL-3) D HDR Q:IBQUIT
"RTN","IBCEXTRP",127,0)
 . E  W !,^TMP($J,"IBLINES",Z,Z0,Z1)
"RTN","IBCEXTRP",128,0)
 . S IBLINE=IBLINE+1
"RTN","IBCEXTRP",129,0)
 . I IBLINE>(IOSL-3) D HDR Q:IBQUIT
"RTN","IBCEXTRP",130,0)
 . ;
"RTN","IBCEXTRP",131,0)
 . ; end of segment add an extra line feed
"RTN","IBCEXTRP",132,0)
 . I '$O(^TMP($J,"IBLINES",Z,Z0,Z1)) W ! S IBLINE=IBLINE+1
"RTN","IBCEXTRP",133,0)
 . Q
"RTN","IBCEXTRP",134,0)
 ;
"RTN","IBCEXTRP",135,0)
 K ^TMP($J,"IBLINES")
"RTN","IBCEXTRP",136,0)
 G EXITQ
"RTN","IBCEXTRP",137,0)
 ;
"RTN","IBCEXTRP",138,0)
 ;
"RTN","IBCEXTRP",139,0)
HDR ; - Report header
"RTN","IBCEXTRP",140,0)
 N DIR,Y
"RTN","IBCEXTRP",141,0)
 I IBPG D  Q:IBQUIT
"RTN","IBCEXTRP",142,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBQUIT=('Y) Q:IBQUIT
"RTN","IBCEXTRP",143,0)
 . W @IOF
"RTN","IBCEXTRP",144,0)
 ;
"RTN","IBCEXTRP",145,0)
 S IBPG=IBPG+1
"RTN","IBCEXTRP",146,0)
 W !,?25,"EDI Transmitted Bill Extract Data",!,"Bill #",?11,"Type",?27,"Patient Name",?52,"SSN",?57,$$FMTE^XLFDT(DT),?71,"Page: "_IBPG
"RTN","IBCEXTRP",147,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","IBCEXTRP",148,0)
 W !,$P(IBREC1,U)_" "_"("_IBILL_")",?27,$P($G(^DPT(+$P(IBREC1,U,2),0)),U),?52,$P($G(^DPT($P(IBREC1,U,2),0)),U,9),!
"RTN","IBCEXTRP",149,0)
 S IBLINE=6
"RTN","IBCEXTRP",150,0)
 Q
"RTN","IBCEXTRP",151,0)
 ;
"RTN","IBCEXTRP",152,0)
EXITQ ; - clean up and exit
"RTN","IBCEXTRP",153,0)
 I $E(IOST,1,2)["C-",'$G(IBQUIT) K DIR S DIR(0)="E" W ! D ^DIR K DIR
"RTN","IBCEXTRP",154,0)
 K ^TMP("IBXERR",$J),^TMP("IBXDATA",$J),IBXERR
"RTN","IBCEXTRP",155,0)
 D CLEAN^DILF
"RTN","IBCEXTRP",156,0)
 Q
"RTN","IBCEXTRP",157,0)
 ;
"RTN","IBCEXTRP",158,0)
EXTRACT(IBIFN,IBBATCH,IBFORM,IBLOCAL) ; Extracts transmitted form data into global
"RTN","IBCEXTRP",159,0)
 ; ^TMP("IBXDATA",$J).  Errors are in ^TMP("IBXERR",$J,err_num)=text.
"RTN","IBCEXTRP",160,0)
 ; IBBATCH = Batch # of bill (if known), otherwise, set to 1.  This
"RTN","IBCEXTRP",161,0)
 ;          variable must be > 0 to prevent a new batch from being added
"RTN","IBCEXTRP",162,0)
 ; IBFORM = the ien of the form in file 353
"RTN","IBCEXTRP",163,0)
 ; IBLOCAL = 1 if OK to use local form, 0 if not
"RTN","IBCEXTRP",164,0)
 N IBVNUM,IBL,IBINC,IBSEG
"RTN","IBCEXTRP",165,0)
 D FORMPRE^IBCFP1
"RTN","IBCEXTRP",166,0)
 S IBVNUM=$G(IBBATCH)
"RTN","IBCEXTRP",167,0)
 S IBL=$S('$G(IBLOCAL):IBFORM,1:"") ; No local form ... set = main form
"RTN","IBCEXTRP",168,0)
 ; Get local form associated with parent, if any
"RTN","IBCEXTRP",169,0)
 I IBL="" S IBL=$S($P($G(^IBE(353,+IBFORM,2)),U,8):$P(^(2),U,8),1:IBFORM)
"RTN","IBCEXTRP",170,0)
 D SETUP^IBCE837(1)
"RTN","IBCEXTRP",171,0)
 ;;JWS;IB*2.0*623;allow display without Batch #
"RTN","IBCEXTRP",172,0)
 I $$GET1^DIQ(350.9,"1,",8.21,"I"),IB364IEN,$P(^IBA(364,IB364IEN,0),"^",2)="" S ^TMP("IBHDR",$J)="NOT YET ASSIGNED"
"RTN","IBCEXTRP",173,0)
 D ROUT^IBCFP1(IBFORM,1,IBIFN,0,IBL)
"RTN","IBCEXTRP",174,0)
 Q
"RTN","IBCEXTRP",175,0)
 ;
"RTN","IBCEXTRP",176,0)
INCLUDE(IBSEQ) ; Function to determine if segment should be included or not
"RTN","IBCEXTRP",177,0)
 N OK,LZ,SEGNAME
"RTN","IBCEXTRP",178,0)
 S OK=1                   ; default is to include it
"RTN","IBCEXTRP",179,0)
 I '$D(IBSEG) G INCLX     ; if nothing in array, then include all
"RTN","IBCEXTRP",180,0)
 I '$D(^TMP("IBXDATA",$J,1,IBSEQ)) S OK=0 G INCLX        ; no data there
"RTN","IBCEXTRP",181,0)
 S LZ=+$O(^TMP("IBXDATA",$J,1,IBSEQ,""))   ; first line# found in data
"RTN","IBCEXTRP",182,0)
 S SEGNAME=$P($G(^TMP("IBXDATA",$J,1,IBSEQ,LZ,1)),U,1)   ; piece 1
"RTN","IBCEXTRP",183,0)
 S SEGNAME=$$TRIM^XLFSTR(SEGNAME)
"RTN","IBCEXTRP",184,0)
 I SEGNAME'="",'$D(IBSEG(SEGNAME)) S OK=0   ; don't include
"RTN","IBCEXTRP",185,0)
INCLX ;
"RTN","IBCEXTRP",186,0)
 Q OK
"RTN","IBCEXTRP",187,0)
 ;
"RTN","IBCF23A")
0^43^B52870803^B52551501
"RTN","IBCF23A",1,0)
IBCF23A ;ALB/ARH - HCFA 1500 19-90 DATA - Split from IBCF23 ;12-JUN-93
"RTN","IBCF23A",2,0)
 ;;2.0;INTEGRATED BILLING;**51,432,516,547,577,592,608,623**;21-MAR-94;Build 70
"RTN","IBCF23A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCF23A",4,0)
 ;
"RTN","IBCF23A",5,0)
 ; $$INSTALDT^XPDUTL(IBPATCH,.IBARY) - ICR 10141
"RTN","IBCF23A",6,0)
 ;
"RTN","IBCF23A",7,0)
B24 ; set individual entries in print array, external format
"RTN","IBCF23A",8,0)
 ; IBAUX = additional data for EDI output
"RTN","IBCF23A",9,0)
 ; IBRXF = array of RX procedures
"RTN","IBCF23A",10,0)
 ;JWS;IB*2.0*592;US131
"RTN","IBCF23A",11,0)
 ; IBDEN = Dental data for EDI output
"RTN","IBCF23A",12,0)
 ; IBDEN1 = array of Dental data for EDI output
"RTN","IBCF23A",13,0)
 N IBX,Z,IBD1,IBD2,IBCPLINK
"RTN","IBCF23A",14,0)
 S IBI=IBI+1,IBPROC=$P(IBSS,U,2),IBD1=$$DATE^IBCF23(IBDT1),IBD2=$S(IBDT1'=IBDT2:$$DATE^IBCF23(IBDT2),1:"")
"RTN","IBCF23A",15,0)
 I '$D(IBXIEN) S IBD1=$E(IBD1,5,8)_$E(IBD1,1,4),IBD2=$E(IBD2,5,8)_$E(IBD2,1,4)
"RTN","IBCF23A",16,0)
 S IBFLD(24,IBI)=IBD1_U_IBD2_U_$P($G(^IBE(353.1,+$P(IBSS,U,6),0)),U)_U_$P($G(^IBE(353.2,+$P(IBSS,U,7),0)),U)
"RTN","IBCF23A",17,0)
 I +IBPROC D
"RTN","IBCF23A",18,0)
 . S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$P($$PRCD^IBCEF1(IBPROC,1),U,2) S:$P(IBPROC,";",2)'["ICPT" IBFLD(24,IBI_"X")=""
"RTN","IBCF23A",19,0)
 I 'IBPROC S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$S('$D(IBXIEN):IBPROC,1:+IBREV),IBFLD(24,IBI_"A")=$P($G(^DGCR(399.2,+IBREV,0)),U,2)
"RTN","IBCF23A",20,0)
 I $D(IBRXF),IBCHARG="" S IBFLD(24,IBI_"A")=$P($G(^DGCR(399.2,+IBREV,0)),U,2)
"RTN","IBCF23A",21,0)
 S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$P(IBSS,U,5)_U_IBCHARG_U_IBUNIT_U_$P(IBSS,U,8)_U_$G(IBPCHG)_U_$G(IBMIN)_U_$G(IBEMG)
"RTN","IBCF23A",22,0)
 I $D(IBSS("L")) S Z=0 F  S Z=$O(IBSS("L",Z)) Q:'Z  S IBFLD(24,IBI,$P(IBSS("L",Z),U),$P(IBSS("L",Z),U,2))=$G(IBFLD(24,IBI,$P(IBSS("L",Z),U),$P(IBSS("L",Z),U,2)))+1
"RTN","IBCF23A",23,0)
 S:$TR($G(IBAUX),U)'="" IBFLD(24,IBI,"AUX")=$G(IBAUX)
"RTN","IBCF23A",24,0)
 S:$D(IBRXF) IBFLD(24,IBI,"RX")=IBRXF
"RTN","IBCF23A",25,0)
 K IBPROC,IBSS("L")
"RTN","IBCF23A",26,0)
 S IBCPLINK=$P(IBSS,U,$L(IBSS,U))
"RTN","IBCF23A",27,0)
 S IBFLD(24,IBI)=IBFLD(24,IBI)_U_IBCPLINK
"RTN","IBCF23A",28,0)
 ; MRD;IB*2.0*516 - Added NDC and Units to line level of claim.
"RTN","IBCF23A",29,0)
 ;I IBCPLINK'="" S $P(IBFLD(24,IBI),U,14,15)=$TR($P($G(^DGCR(399,IBIFN,"CP",IBCPLINK,1)),U,7,8),"-")
"RTN","IBCF23A",30,0)
 ; vd/Beginning of IB*2*577 - Added Unit/Basis of Measurment to line level of claim.
"RTN","IBCF23A",31,0)
 I IBCPLINK'="" S $P(IBFLD(24,IBI),U,14,16)=$TR($P($G(^DGCR(399,IBIFN,"CP",IBCPLINK,1)),U,7,8),"-")_U_$P($G(^DGCR(399,IBIFN,"CP",IBCPLINK,2)),U)
"RTN","IBCF23A",32,0)
 ; vd/End of IB*2*577
"RTN","IBCF23A",33,0)
 ;JWS;IB*2.0*592;US131
"RTN","IBCF23A",34,0)
 I $G(IBDEN)'="" S IBFLD(24,IBI,"DEN")=$G(IBDEN)
"RTN","IBCF23A",35,0)
 I $D(IBDEN1) M IBFLD(24,IBI,"DEN1")=IBDEN1
"RTN","IBCF23A",36,0)
 I $D(IBDEND) S IBFLD(24,IBI,"DEND")=$G(IBDEND)
"RTN","IBCF23A",37,0)
 ;end ;JWS;IB*2.0*592;US131
"RTN","IBCF23A",38,0)
 Q
"RTN","IBCF23A",39,0)
 ;
"RTN","IBCF23A",40,0)
AUXOK(IBSS,IBSS1) ; Check all other flds are the same to combine procs
"RTN","IBCF23A",41,0)
 ; IBSS = subscript of IBCP to check for dups to combine - pass by ref
"RTN","IBCF23A",42,0)
 ; IBSS(IBSS,"AUX-X",n) = all the previously extracted line items for the
"RTN","IBCF23A",43,0)
 ;  same set of basic data, but having different "AUX" data
"RTN","IBCF23A",44,0)
 ; IBSS1 = the "AUX" data of the current IBCP entry
"RTN","IBCF23A",45,0)
 ;
"RTN","IBCF23A",46,0)
 ; Returns entry # in IBSS array if match found, or 0 if no match
"RTN","IBCF23A",47,0)
 ; Set the IBSS "AUX-X" node for no match
"RTN","IBCF23A",48,0)
 N Z,Z0,Z1,XIEN
"RTN","IBCF23A",49,0)
 S Z=0 F  S Z=$O(IBSS(IBSS,"AUX-X",Z)) Q:'Z  I IBSS1=IBSS(IBSS,"AUX-X",Z) Q
"RTN","IBCF23A",50,0)
 ;JWS;IB*2.0*592;Dental fields to check for roll-up
"RTN","IBCF23A",51,0)
 S XIEN=$G(IBSS(IBSS,1))
"RTN","IBCF23A",52,0)
 I $D(IBCP(IBPO,"DEN"))!($D(IBCP(IBPO,"DEN1")))!($D(IBCP(IBPO,"DEND")))!($D(IBCP(XIEN,"DEN")))!($D(IBCP(XIEN,"DEN1")))!($D(IBCP(XIEN,"DEND"))) D
"RTN","IBCF23A",53,0)
 . I $G(IBCP(IBPO,"DEN"))'=$G(IBCP(XIEN,"DEN")) S Z=0 Q
"RTN","IBCF23A",54,0)
 . I $G(IBCP(IBPO,"DEND"))'=$G(IBCP(XIEN,"DEND")) S Z=0 Q
"RTN","IBCF23A",55,0)
 . S Z1=0 F  S Z1=$O(IBCP(IBPO,"DEN1",Z1)) Q:'Z1  I $G(IBCP(IBPO,"DEN1",Z1,0))'=$G(IBCP(XIEN,"DEN1",Z1,0)) S Z=0 Q
"RTN","IBCF23A",56,0)
 I 'Z S Z0=+$O(IBSS(IBSS,"AUX-X",""),-1)+1,IBSS(IBSS,"AUX-X",Z0)=IBSS1
"RTN","IBCF23A",57,0)
 Q +Z
"RTN","IBCF23A",58,0)
 ;
"RTN","IBCF23A",59,0)
PRC ; Extract procedure data for HCFA 1500
"RTN","IBCF23A",60,0)
 ; IBRC(IBSS) = #rev codes with same billing criteria (IBSS)
"RTN","IBCF23A",61,0)
 ; IBLINK('CP' ien,'RC' ien) = IBSS including modifiers,rx seq in pc 7,8
"RTN","IBCF23A",62,0)
 ; IBLINK1(IBSS, 'RC' ien) =  auto (1)^ 'CP' ien (soft link)
"RTN","IBCF23A",63,0)
 ;
"RTN","IBCF23A",64,0)
 ; proc array w/chrg
"RTN","IBCF23A",65,0)
 ;JWS;IB*2.0*592;US131; added IBLN1, IBDENLN
"RTN","IBCF23A",66,0)
 ;IA# 3820
"RTN","IBCF23A",67,0)
 N IBPR,IBP,IBDENLN,IBLN1
"RTN","IBCF23A",68,0)
 ;JWS;6/24/19;IB*2.0*623;found orphan nodes leftover by FileMan, causing errors-added $G(^(IBI,0))
"RTN","IBCF23A",69,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  K IBDENLN S IBLN=$G(^(IBI,0)),IBLN1=$G(^(1)),IBAUXLN=$G(^("AUX")),IBDENLN=$G(^("DEN")) D
"RTN","IBCF23A",70,0)
 . I $O(^DGCR(399,IBIFN,"CP",IBI,"DEN1",0)) M IBDENLN("DEN1")=^DGCR(399,IBIFN,"CP",IBI,"DEN1")
"RTN","IBCF23A",71,0)
 . ;end ;JWS;IB*2.0*592;US131
"RTN","IBCF23A",72,0)
 . N Z,Z0,Z1,Q1
"RTN","IBCF23A",73,0)
 . S IBPDT=$P(IBLN,U,2)
"RTN","IBCF23A",74,0)
 . S IBSS=$$IBSS(IBI,.IBDXI,IBLN)
"RTN","IBCF23A",75,0)
 . S IBPO=$S($P(IBLN,U,4):+$P(IBLN,U,4),1:IBI+1000) ;Set print order
"RTN","IBCF23A",76,0)
 . S IBCP(IBPO)=IBPDT_"^"_IBSS,IBCP(IBPO,"AUX")=IBAUXLN
"RTN","IBCF23A",77,0)
 . S IBCP(IBPO,"LNK")=IBI
"RTN","IBCF23A",78,0)
 . ;JWS;IB*2.0*592;US131
"RTN","IBCF23A",79,0)
 . I $G(IBLN1)'="" S IBCP(IBPO,"DEND")=IBLN1
"RTN","IBCF23A",80,0)
 . I $G(IBDENLN)'="" S IBCP(IBPO,"DEN")=IBDENLN
"RTN","IBCF23A",81,0)
 . I $O(IBDENLN("DEN1",0)) M IBCP(IBPO,"DEN1")=IBDENLN("DEN1")
"RTN","IBCF23A",82,0)
 . ;end ;JWS;IB*2.0*592;US131
"RTN","IBCF23A",83,0)
 . ; Rx
"RTN","IBCF23A",84,0)
 . N IBZ,IBITEM
"RTN","IBCF23A",85,0)
 . S IBZ=$S($P(IBSS,U):$P(IBSS,U),1:"")
"RTN","IBCF23A",86,0)
 . I IBZ'="",$D(IBLINKRX(IBZ,IBI)) D  Q:IBCHARG'=""
"RTN","IBCF23A",87,0)
 .. S IBPO1=IBPO
"RTN","IBCF23A",88,0)
 .. S IBITEM=+$O(IBLINKRX(IBZ,IBI,0)),IBRV=$G(IBLINKRX(IBZ,IBI,IBITEM))
"RTN","IBCF23A",89,0)
 .. Q:$S(IBRV="":1,1:'$G(IBRC(IBRV)))
"RTN","IBCF23A",90,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",91,0)
 .. S $P(IBCP(IBPO1),U,9)=IBCHARG,IBCP(IBPO1,"RX")=IBITEM K IBLINKRX(IBZ,IBI,IBITEM)
"RTN","IBCF23A",92,0)
 . ; find chrgs directly linked to proc
"RTN","IBCF23A",93,0)
 . S IBK=0 F  S IBK=$O(IBLINK(IBI,IBK)) Q:'IBK  S IBRV1=IBLINK(IBI,IBK),IBRV=$P(IBRV1,U,1,6) I +IBRC(IBRV1) D
"RTN","IBCF23A",94,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV1)=IBRC(IBRV1)-1
"RTN","IBCF23A",95,0)
 .. I IBCHARG'="" S $P(IBSS,U,8)=IBCHARG,IBCP(IBPO)=IBPDT_"^"_IBSS,IBPO=IBPO+.1
"RTN","IBCF23A",96,0)
 ;
"RTN","IBCF23A",97,0)
 ; add chrgs associated with a proc (not a direct link)
"RTN","IBCF23A",98,0)
 ; find chrg associated with proc, if any (match proc,div,+/-basc)
"RTN","IBCF23A",99,0)
 K IBP(0)
"RTN","IBCF23A",100,0)
 F IBP=3,2 Q:$D(IBP(0))  S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  I $P(IBCP(IBPO),U,9)="" D
"RTN","IBCF23A",101,0)
 . S IBSS=$P(IBCP(IBPO),U,2,9)
"RTN","IBCF23A",102,0)
 . S IBCHARG="",(IBRV,IBSS)=$P(IBSS,U,1,IBP) F  S IBRV=$O(IBRC(IBRV)) Q:$P(IBRV,U,1,IBP)'=IBSS  S IBP(0)=0 I +IBRC(IBRV) D  Q
"RTN","IBCF23A",103,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",104,0)
 .. I IBRC(IBRV) S Z=0 F  S Z=$O(IBCP(IBPO,Z)) Q:'Z  S IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",105,0)
 . S $P(IBCP(IBPO),U,9)=IBCHARG
"RTN","IBCF23A",106,0)
 . I IBCHARG'="" S Z=$O(IBLINK1(IBRV,0)) I Z S IBCP(IBPO,"L",Z)=IBLINK1(IBRV,Z) K IBLINK1(IBRV,Z)
"RTN","IBCF23A",107,0)
 ;
"RTN","IBCF23A",108,0)
 ; add chrgs not associated with a proc to first proc with no chrg
"RTN","IBCF23A",109,0)
 ; Aggggh!!! TP
"RTN","IBCF23A",110,0)
 S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  I $P(IBCP(IBPO),U,9)="" D
"RTN","IBCF23A",111,0)
 . S IBCHARG="",IBRV="^" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""!+IBRV  I +IBRC(IBRV) D  Q
"RTN","IBCF23A",112,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",113,0)
 .. S Z=$O(IBLINK1(IBRV,0)) I Z S IBCP(IBPO,"L",Z)=IBLINK1(IBRV,Z) K IBLINK1(IBRV,Z)
"RTN","IBCF23A",114,0)
 . S $P(IBCP(IBPO),U,9)=IBCHARG
"RTN","IBCF23A",115,0)
 ;
"RTN","IBCF23A",116,0)
 Q
"RTN","IBCF23A",117,0)
IBSS(IBI,IBDXI,IBLN) ; Creates index sequence for procedure
"RTN","IBCF23A",118,0)
 N IBPC,IBJ,IBSS,IBLPI,IBX,IBLPAR
"RTN","IBCF23A",119,0)
 S (IBPC,IBLPI)=0
"RTN","IBCF23A",120,0)
 F IBJ=1,6,5,0,9,10 S IBPC=IBPC+1 S:IBJ $P(IBSS,U,IBPC,IBPC+1)=($P(IBLN,U,IBJ)_U)
"RTN","IBCF23A",121,0)
 S $P(IBSS,U,7)=($$GETMOD^IBEFUNC(IBIFN,IBI)_U) ;Modifiers
"RTN","IBCF23A",122,0)
 ;IB*547/TAZ - IBDXI not defined, use internal DX pointer
"RTN","IBCF23A",123,0)
 I '$G(IBNWPTCH) F IBJ=11:1:14 I $P(IBLN,U,IBJ) S $P(IBSS,U,4)=$P(IBSS,U,4)_$S(IBJ>11:",",1:"")_$G(IBDXI(+$P(IBLN,U,IBJ))) ; dx
"RTN","IBCF23A",124,0)
 I $G(IBNWPTCH) F IBJ=11:1:14 S IBX=$P(IBLN,U,IBJ) I IBX S $P(IBSS,U,4)=$P(IBSS,U,4)_$S(IBJ>11:",",1:"")_$G(IBDXI(IBX),IBX) ; dx
"RTN","IBCF23A",125,0)
 S $P(IBSS,U,10)=$P(IBLN,U,16),$P(IBSS,U,9)=$P(IBLN,U,19),$P(IBSS,U,11)=+$P(IBLN,U,17)
"RTN","IBCF23A",126,0)
 G:'$G(IBNWPTCH) IBSSX
"RTN","IBCF23A",127,0)
 ;IB*547/TAZ - Add additional fields for roll-up compare
"RTN","IBCF23A",128,0)
 S $P(IBSS,U,21)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","ASSOCIATED CLINIC","I")
"RTN","IBCF23A",129,0)
 S $P(IBSS,U,22)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","TYPE OF SERVICE","I")
"RTN","IBCF23A",130,0)
 S $P(IBSS,U,23)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","ATTACHMENT CONTROL NUMBER","I")
"RTN","IBCF23A",131,0)
 S $P(IBSS,U,24)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","NDC","I")
"RTN","IBCF23A",132,0)
 S $P(IBSS,U,25)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","PROCEDURE DESCRIPTION","I")
"RTN","IBCF23A",133,0)
 S $P(IBSS,U,26)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","ADDITIONAL OB MINUTES","I")
"RTN","IBCF23A",134,0)
 ;JRA;IB*2.0*608 Put Certificate of Medical Necessity (CMN) info in pieces 30,31,32
"RTN","IBCF23A",135,0)
 M IBLPAR=^DGCR(399,IBIFN,"CP",IBI)
"RTN","IBCF23A",136,0)
 S $P(IBSS,U,30)=$TR($G(IBLPAR("CMN")),U,"~")
"RTN","IBCF23A",137,0)
 S $P(IBSS,U,31)=$TR($G(IBLPAR("CMN-10126")),U,"~")
"RTN","IBCF23A",138,0)
 S $P(IBSS,U,32)=$TR($G(IBLPAR("CMN-484")),U,"~")
"RTN","IBCF23A",139,0)
 K IBLPAR
"RTN","IBCF23A",140,0)
 ;Add Provider info in pieces 41-49
"RTN","IBCF23A",141,0)
 M IBLPAR=^DGCR(399,IBIFN,"CP",IBI,"LNPRV")
"RTN","IBCF23A",142,0)
 F  S IBLPI=$O(IBLPAR(IBLPI)) Q:'IBLPI  S IBX=IBLPAR(IBLPI,0),$P(IBSS,U,40+IBX)=$TR(IBX,"^","~")
"RTN","IBCF23A",143,0)
 K IBLPAR
"RTN","IBCF23A",144,0)
IBSSX ;
"RTN","IBCF23A",145,0)
 Q IBSS
"RTN","IBCF23A",146,0)
 ;
"RTN","IBCF23A",147,0)
IBNWPTCH(IBIFN,IBPATCH) ;
"RTN","IBCF23A",148,0)
 ;Checks the date the primary claim was 1st transmitted and returns 1 if the transmitted date is after the patch
"RTN","IBCF23A",149,0)
 ;referenced in variable IBPATCH was released. This allows the MRA/EOBs returning to roll up procedures the same
"RTN","IBCF23A",150,0)
 ;way as they went out.  Otherwise the order changes and the MRA/EOB won't match up.
"RTN","IBCF23A",151,0)
 ;
"RTN","IBCF23A",152,0)
 N IBARY,IBIDT,IBPFN,IBEFN,IBBN,IBX,IBBDT
"RTN","IBCF23A",153,0)
 S IBX=0
"RTN","IBCF23A",154,0)
 I $$INSTALDT^XPDUTL(IBPATCH,.IBARY) D   ;ICR 10141
"RTN","IBCF23A",155,0)
 . S IBX=1
"RTN","IBCF23A",156,0)
 . S IBIDT=$O(IBARY(""))
"RTN","IBCF23A",157,0)
 . ; Get Primary Bill Number. This will insure COB data is consistent across all bills.
"RTN","IBCF23A",158,0)
 . S IBPFN=$$GET1^DIQ(399,IBIFN_",","PRIMARY BILL #","I") I 'IBPFN S IBPFN=IBIFN
"RTN","IBCF23A",159,0)
 . ; Find 1st Accepted Entry (A1, A2, or Z) of Primary Bill in EDI TRANSMIT BILL FILE (364) to determine Batch Number
"RTN","IBCF23A",160,0)
 . S (IBEFN,IBBN)=0 F  S IBEFN=$O(^IBA(364,"B",IBPFN,IBEFN)) Q:'IBEFN  D  I IBBN Q
"RTN","IBCF23A",161,0)
 .. I ",A1,A2,Z,"'[(","_$$GET1^DIQ(364,IBEFN_",","TRANSMISSION STATUS","I")_",") Q
"RTN","IBCF23A",162,0)
 .. S IBBN=$$GET1^DIQ(364,IBEFN_",","BATCH NUMBER","I")
"RTN","IBCF23A",163,0)
 . ;Retrieve the date the batch was 1st sent.  If IBBN="" IBBDT will be null
"RTN","IBCF23A",164,0)
 . S IBBDT=$$GET1^DIQ(364.1,$$GET1^DIQ(364,IBBN_",","BATCH NUMBER","I")_",","DATE FIRST SENT","I")
"RTN","IBCF23A",165,0)
 . I IBBDT,(IBBDT<IBIDT) S IBX=0
"RTN","IBCF23A",166,0)
 Q IBX
"RTN","IBCSC6")
0^33^B15643849^B15100068
"RTN","IBCSC6",1,0)
IBCSC6 ;ALB/MJB - MCCR SCREEN 6 (INPT. BILLING INFO) ;27 MAY 88 10:19
"RTN","IBCSC6",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,106,51,137,343,400,432,623**;21-MAR-94;Build 70
"RTN","IBCSC6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC6",4,0)
 ;
"RTN","IBCSC6",5,0)
 ;MAP TO DGCRSC6
"RTN","IBCSC6",6,0)
 ;
"RTN","IBCSC6",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC7
"RTN","IBCSC6",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC6",9,0)
 D ^IBCSCU S IBSR=6,IBSR1="",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1",0,"U2","U3" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC6",10,0)
 D H^IBCSCU
"RTN","IBCSC6",11,0)
 S IBBT=$P(IB(0),U,24)_$P(IB(0),U,5)_$P(IB(0),U,26)
"RTN","IBCSC6",12,0)
 S IBBT1=$P(IB(0),U,24)_$P($G(^DGCR(399.1,+$P(IB(0),U,25),0)),U,2)_$P(IB(0),U,26)
"RTN","IBCSC6",13,0)
 D 4^IBCVA1,5^IBCVA1
"RTN","IBCSC6",14,0)
 ;
"RTN","IBCSC6",15,0)
1 S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT1):IBU,IBBT1="":IBU,1:IBBT1)
"RTN","IBCSC6",16,0)
 W $J("",14),"Loc. of Care: ",$E($G(IBBTP1),1,30) K IBBTP1
"RTN","IBCSC6",17,0)
 ;W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC6",18,0)
 W !?4,"Charge Type : ",$S($P(IB(0),U,27)=1:"INSTITUTIONAL",$P(IB(0),U,27)=2:"PROFESSIONAL",1:IBU)
"RTN","IBCSC6",19,0)
 ; IB*2.0*432 - remove Covered, Non-covered and co-insurance days
"RTN","IBCSC6",20,0)
 ;W !?4,"Non-Cov Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
"RTN","IBCSC6",21,0)
 W ?38,"Timeframe: ",$S($D(IBBTP3):$E(IBBTP3,1,30),1:"") K IBBTP3
"RTN","IBCSC6",22,0)
 W !?4,"Form Type   : ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC6",23,0)
 W ?39,"Division: ",$E($P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,1),1,30)
"RTN","IBCSC6",24,0)
 W !,?4,"Bill Classif: ",$E($G(IBBTP2),1,30) K IBBTP2
"RTN","IBCSC6",25,0)
 ;W ?34,"Co-Insur Days: ",$S($P(IB("U2"),U,7)="":$S($$MCRONBIL^IBEFUNC(IBIFN):IBU,1:IBUN),1:$P(IB("U2"),U,7))
"RTN","IBCSC6",26,0)
 ;
"RTN","IBCSC6",27,0)
ROI S Z=2,IBW=1 X IBWW
"RTN","IBCSC6",28,0)
 W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
"RTN","IBCSC6",29,0)
 W ?46,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
"RTN","IBCSC6",30,0)
 ;/vd - IB*2.0*623 (US4995) - Modified the following line of code with the following conditional to validate that a
"RTN","IBCSC6",31,0)
 ;                            claim is ROI Eligible based upon the Date of Service.
"RTN","IBCSC6",32,0)
 ;I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC6",33,0)
 I $$ROIDTCK^IBCEU7(IBIFN) D
"RTN","IBCSC6",34,0)
 . I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC6",35,0)
 S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
"RTN","IBCSC6",36,0)
 W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC6",37,0)
 ;
"RTN","IBCSC6",38,0)
3 S Z=3,IBW=1 X IBWW D FROMTO
"RTN","IBCSC6",39,0)
 ;
"RTN","IBCSC6",40,0)
BED S Z=4,IBW=1 X IBWW
"RTN","IBCSC6",41,0)
 W " Bedsection  : ",$S(IB("U")="":IBU,$P(IB("U"),U,11)'="":$P(^DGCR(399.1,$P(IB("U"),U,11),0),U,1),1:IBU)
"RTN","IBCSC6",42,0)
 W !?4,"LOS         : ",IBLS
"RTN","IBCSC6",43,0)
 ;
"RTN","IBCSC6",44,0)
 I $P($G(^DPT(DFN,.3)),"^")="Y" D SC I IBSCM>0 W !?4,"PTF record indicates ",IBSCM," of ",IBM," movements are for Service Connected Care."
"RTN","IBCSC6",45,0)
 ;
"RTN","IBCSC6",46,0)
REV S Z=5,IBREVC=0,IBW=1 X IBWW W " Rev. Code   : " F I=1:1:8 Q:'$D(IBREVC(I))  D:$S(IBREVC<7:1,1:$P(IBREVC(I),U,9)="") REV^IBCSC61 S IBREVC=IBREVC+1 Q:IBREVC>7
"RTN","IBCSC6",47,0)
 I $G(IBREVC)>9 W !,?4,"Too many Revenue Codes to display, enter '5' to list"
"RTN","IBCSC6",48,0)
BILL D OFFSET^IBCSC61
"RTN","IBCSC6",49,0)
 I $G(IBUCH),$$FT^IBCEF(IBIFN)=3 S X=IBUCH,X2="2$" D COMMA^%DTC W !,?39,"Non-Cov: ",X
"RTN","IBCSC6",50,0)
 ;
"RTN","IBCSC6",51,0)
RS S Z=6,IBW=1 X IBWW W " Rate Sched  : (re-calculate charges)"
"RTN","IBCSC6",52,0)
 ;
"RTN","IBCSC6",53,0)
PRPAY S Z=7,IBW=1 X IBWW
"RTN","IBCSC6",54,0)
 S IB("M1")=$G(^DGCR(399,IBIFN,"M1")),X3=0,IBI="Prior Payments:" F X=0,1,2 D
"RTN","IBCSC6",55,0)
 . S X1=$P(IB("U2"),U,(X+4)),X2=$P(IB("M1"),U,(5+X)) I X1="",X2="" Q
"RTN","IBCSC6",56,0)
 . S IBI=IBI_$J("",(17-$L(IBI)))_$S(X=0:"Primary",X=1:"Secondary",X=2:"Tertiary",1:"")
"RTN","IBCSC6",57,0)
 . S IBI=IBI_$J("",(28-$L(IBI)))_$S(X1'="":$J(X1,11,2),1:IBU)
"RTN","IBCSC6",58,0)
 . S IBI=IBI_$J("",(50-$L(IBI)))_"Bill #: "_$S(+X2:$P($G(^DGCR(399,+X2,0)),U,1),1:IBU)
"RTN","IBCSC6",59,0)
 . W:'X3 " " W:X3 !,?4 W IBI S X3=1,IBI=""
"RTN","IBCSC6",60,0)
 I 'X3 W " Prior Claims: ",IBU
"RTN","IBCSC6",61,0)
 ;
"RTN","IBCSC6",62,0)
 G ^IBCSCP
"RTN","IBCSC6",63,0)
 Q
"RTN","IBCSC6",64,0)
 ;
"RTN","IBCSC6",65,0)
FROMTO ;  - Print From and To dates of bill
"RTN","IBCSC6",66,0)
 W " Bill From   : " S Y=$P(IB("U"),"^") D D^DIQ W $S($L(Y):Y,1:IBU)
"RTN","IBCSC6",67,0)
 W ?49,"Bill To: " S Y=$P(IB("U"),"^",2) D D^DIQ W $S($L(Y):Y,1:IBU)
"RTN","IBCSC6",68,0)
 Q
"RTN","IBCSC6",69,0)
 ;
"RTN","IBCSC6",70,0)
SC ;  -if patient is sc, are movements for sc care
"RTN","IBCSC6",71,0)
 S PTF=$P(IB(0),"^",8)
"RTN","IBCSC6",72,0)
 ;
"RTN","IBCSC6",73,0)
SC1 ;
"RTN","IBCSC6",74,0)
 ;  -input ptf
"RTN","IBCSC6",75,0)
 ;
"RTN","IBCSC6",76,0)
 ;  -output IBm   = number of movements
"RTN","IBCSC6",77,0)
 ;          IBscm = number of SC movements
"RTN","IBCSC6",78,0)
 S (IBM,IBSCM,M)=0
"RTN","IBCSC6",79,0)
 I $S('PTF:1,'$D(^DGPT(PTF,0)):1,1:0) Q
"RTN","IBCSC6",80,0)
 F  S M=$O(^DGPT(PTF,"M",M)) Q:'M  S IBM=IBM+1 I $P($G(^DGPT(PTF,"M",M,0)),"^",18)=1 S IBSCM=IBSCM+1
"RTN","IBCSC6",81,0)
 Q
"RTN","IBCSC6",82,0)
 ;IBCSC6
"RTN","IBCSC7")
0^34^B7195789^B6990382
"RTN","IBCSC7",1,0)
IBCSC7 ;ALB/MJB - MCCR SCREEN 7 (INPT. BILLING INFO)  ;27 MAY 88 10:19
"RTN","IBCSC7",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,106,343,400,432,623**;21-MAR-94;Build 70
"RTN","IBCSC7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC7",4,0)
 ;
"RTN","IBCSC7",5,0)
 ;MAP TO DGCRSC7
"RTN","IBCSC7",6,0)
 ;
"RTN","IBCSC7",7,0)
 I $P(^DGCR(399,IBIFN,0),"^",5)'>2 G ^IBCSC8
"RTN","IBCSC7",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC7",9,0)
EN D ^IBCSCU S IBSR=7,IBSR1="",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1",0,"U2","U3" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC7",10,0)
 D H^IBCSCU
"RTN","IBCSC7",11,0)
 D 4^IBCVA1,5^IBCVA1
"RTN","IBCSC7",12,0)
 S IBBT=$P(IB(0),U,24)_$P($G(^DGCR(399.1,+$P(IB(0),U,25),0)),U,2)_$P(IB(0),U,26)
"RTN","IBCSC7",13,0)
 S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT):IBU,IBBT="":IBU,1:IBBT)
"RTN","IBCSC7",14,0)
 W $J("",14),"Loc. of Care: ",$E($G(IBBTP1),1,30) K IBBTP1
"RTN","IBCSC7",15,0)
 ; IB*2.0*432 - remove Covered, Non-covered and co-insurance days
"RTN","IBCSC7",16,0)
 ;W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC7",17,0)
 W !?4,"Charge Type : ",$S($P(IB(0),U,27)=1:"INSTITUTIONAL",$P(IB(0),U,27)=2:"PROFESSIONAL",1:IBU)
"RTN","IBCSC7",18,0)
 W ?37,"Disch Stat: ",$E($$EXTERNAL^DILFD(399,162,"",$P(IB("U"),U,12)),1,30)
"RTN","IBCSC7",19,0)
 W !?4,"Form Type   : ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC7",20,0)
 W ?38,"Timeframe: ",$S($D(IBBTP3):$E(IBBTP3,1,30),1:"") K IBBTP3
"RTN","IBCSC7",21,0)
 W !,?4,"Bill Classif: ",$E($G(IBBTP2),1,30) K IBBTP2
"RTN","IBCSC7",22,0)
 ;W !?4,"Non-Cov Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
"RTN","IBCSC7",23,0)
 W ?39,"Division: ",$E($P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,1),1,30)
"RTN","IBCSC7",24,0)
 ;
"RTN","IBCSC7",25,0)
ROI S Z=2,IBW=1 X IBWW
"RTN","IBCSC7",26,0)
 W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
"RTN","IBCSC7",27,0)
 W ?46,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
"RTN","IBCSC7",28,0)
 ;/vd - IB*2.0*623 (US4995) - Modified the following line of code with the following conditional to validate that a
"RTN","IBCSC7",29,0)
 ;                            claim is ROI Eligible based upon the Date of Service.
"RTN","IBCSC7",30,0)
 ;I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC7",31,0)
 I $$ROIDTCK^IBCEU7(IBIFN) D
"RTN","IBCSC7",32,0)
 . I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC7",33,0)
 S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
"RTN","IBCSC7",34,0)
 W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC7",35,0)
 ;
"RTN","IBCSC7",36,0)
 S Z=3,IBW=1 X IBWW D FROMTO^IBCSC6
"RTN","IBCSC7",37,0)
 ;
"RTN","IBCSC7",38,0)
OP S Z=4,IBW=1 X IBWW W " OP Visits   : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?18 W Y_", "
"RTN","IBCSC7",39,0)
 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
"RTN","IBCSC7",40,0)
 ;
"RTN","IBCSC7",41,0)
 G REV^IBCSC6
"RTN","IBCSC7",42,0)
 ;
"RTN","IBCSC7",43,0)
 ;IBCSC7
"RTN","IBCSCH")
0^26^B53996574^B50914116
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ;03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245,232,287,348,349,374,371,395,400,432,447,458,488,623**;21-MAR-94;Build 70
"RTN","IBCSCH",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N I,C,IBSCNNZ,IBQ,IBPRNT,Z S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $F(".?1500.?HCFA.","."_$G(IBSCNNZ)_"."),$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,0) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?J430D",$$FT^IBCEF(IBIFN)=7 S IBQ=1 D DENTAL^IBCSCH2(IBIFN) Q   ;/vd - IB*2.0*623 - US4055. Added to display DENTAL Mock-up screen when ?J430D is entered on any screen.
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?INX" S IBQ=1 D INSDSPLX(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPROPT(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",18,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",19,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",20,0)
 . I $G(IBSCNNZ)="?MRA",$$MCRONBIL^IBEFUNC(IBIFN),$T(SCR^IBCEMVU)'="" S IBQ=1 D SCR^IBCEMVU(IBIFN) Q
"RTN","IBCSCH",21,0)
 . I $G(IBSCNNZ)="?ID" S IBQ=1 D DISPID^IBCEF74(IBIFN) Q
"RTN","IBCSCH",22,0)
 . I $G(IBSCNNZ)="?RX" S IBQ=1 D DISPRX^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",23,0)
 . I $G(IBSCNNZ)="?RNB" S IBQ=1 D EDITRNB^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",24,0)
 . Q
"RTN","IBCSCH",25,0)
 ;
"RTN","IBCSCH",26,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",27,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",28,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",29,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",30,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",31,0)
M W "  Special help screens:"
"RTN","IBCSCH",32,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",34,0)
 W !,?5,"Enter '?INX' to view the patients insurance policies with comments."
"RTN","IBCSCH",35,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",36,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",37,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",38,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",39,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?1500' to view how block 24 will print on a CMS-1500."
"RTN","IBCSCH",40,0)
 I $$FT^IBCEF(IBIFN)=7 W !,?5,"Enter '?J430D' to view data entered on the Dental claim."  ;/vd - Added for IB*2.0*623 - US4055.
"RTN","IBCSCH",41,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",42,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",43,0)
 I $$MCRONBIL^IBEFUNC(IBIFN) W !?5,"Enter '?MRA' to view Medicare Remittance Advice EOB's on file."
"RTN","IBCSCH",44,0)
 W !,?5,"Enter '?ID' to view all IDs to be electronically transmitted on this claim."
"RTN","IBCSCH",45,0)
 W !,?5,"Enter '?RX' to view all prescriptions on this claim."
"RTN","IBCSCH",46,0)
 W !,?5,"Enter '?RNB' to enter an RNB for bill associated Claims Tracking entries."
"RTN","IBCSCH",47,0)
 ;
"RTN","IBCSCH",48,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",49,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR
"RTN","IBCSCH",50,0)
 R X:DTIME
"RTN","IBCSCH",51,0)
 Q
"RTN","IBCSCH",52,0)
 ;
"RTN","IBCSCH",53,0)
M1 N I,Z S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",54,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN"
"RTN","IBCSCH",55,0)
 R X:DTIME
"RTN","IBCSCH",56,0)
 Q
"RTN","IBCSCH",57,0)
 ;
"RTN","IBCSCH",58,0)
 ;
"RTN","IBCSCH",59,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",60,0)
 ;
"RTN","IBCSCH",61,0)
S ; display the available screen data
"RTN","IBCSCH",62,0)
 N C,I,Z,J W ! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",63,0)
 ; Start IB*2.0*447 BI
"RTN","IBCSCH",64,0)
 ;S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Claim Information^Locally Defined^Billing - Specific"
"RTN","IBCSCH",65,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Claim Information^Ambulance^Billing - Specific^Locally Defined"
"RTN","IBCSCH",66,0)
 ; End IB*2.0*447 BI
"RTN","IBCSCH",67,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",68,0)
 Q
"RTN","IBCSCH",69,0)
 ;
"RTN","IBCSCH",70,0)
W ;
"RTN","IBCSCH",71,0)
 N I,J,Z
"RTN","IBCSCH",72,0)
 F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",73,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",74,0)
 Q
"RTN","IBCSCH",75,0)
 ;IBCSCH
"RTN","IBCSCH",76,0)
 ;
"RTN","IBCSCH",77,0)
 ;
"RTN","IBCSCH",78,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of CMS-1500
"RTN","IBCSCH",79,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",80,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE,IBNXPG,L,T,NUM
"RTN","IBCSCH",81,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",82,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",83,0)
 ;
"RTN","IBCSCH",84,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",85,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",86,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",87,0)
 ;
"RTN","IBCSCH",88,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the CMS-1500"
"RTN","IBCSCH",89,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",90,0)
 ;
"RTN","IBCSCH",91,0)
 ; box 19 - lines 36-37
"RTN","IBCSCH",92,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",93,0)
 ;
"RTN","IBCSCH",94,0)
 ; box 21 - lines 39-41
"RTN","IBCSCH",95,0)
 W !,"21. Diagnosis"
"RTN","IBCSCH",96,0)
 ;I $D(^TMP("IBXDISP",$J,2,IBLIN+3)) W ?16,"(1st 4 only)"   ; -> baa *488*
"RTN","IBCSCH",97,0)
 ; Print all 12 diagnosis codes  -> baa *488*
"RTN","IBCSCH",98,0)
 F L=3,4,5 D
"RTN","IBCSCH",99,0)
 .W !
"RTN","IBCSCH",100,0)
 .F T=3,16,29,42 D
"RTN","IBCSCH",101,0)
 ..S NUM=""
"RTN","IBCSCH",102,0)
 ..I L=3 S NUM=$S(T=3:1,T=16:2,T=29:3,T=42:4,1:"")
"RTN","IBCSCH",103,0)
 ..I L=4 S NUM=$S(T=3:5,T=16:6,T=29:7,T=42:8,1:"")
"RTN","IBCSCH",104,0)
 ..I L=5 S NUM=$S(T=3:9,T=16:10,T=29:11,T=42:12,1:"")
"RTN","IBCSCH",105,0)
 ..S T2=T+2,T1=T I NUM>9 S T1=T-1
"RTN","IBCSCH",106,0)
 ..W ?T1,NUM,".",?T2,$G(^TMP("IBXDISP",$J,1,IBLIN+L,T))
"RTN","IBCSCH",107,0)
 ;W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,30))
"RTN","IBCSCH",108,0)
 ;W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,30))
"RTN","IBCSCH",109,0)
 ;
"RTN","IBCSCH",110,0)
 ; box 24 - lines 44-55
"RTN","IBCSCH",111,0)
 D PG
"RTN","IBCSCH",112,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",113,0)
 . I '$D(^TMP("IBXDISP",$J,IBPG,IBLIN+9)) Q   ; no line's on this page
"RTN","IBCSCH",114,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",115,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",116,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",117,0)
 . S IBNXPG=$O(^TMP("IBXDISP",$J,IBPG))   ; next page
"RTN","IBCSCH",118,0)
 . I 'IBQ,IBNXPG,$D(^TMP("IBXDISP",$J,IBNXPG,IBLIN+9)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",119,0)
 . Q
"RTN","IBCSCH",120,0)
 ;
"RTN","IBCSCH",121,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",122,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",123,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",124,0)
 Q
"RTN","IBCSCH",125,0)
 ;
"RTN","IBCSCH",126,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",127,0)
 W !,"24. A             B  C    D                 E         F     G H I    J"
"RTN","IBCSCH",128,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",129,0)
 Q
"RTN","IBCSCH",130,0)
 ;
"RTN","IBCSCH",131,0)
INSDSPL(IBIFN) ; Display patient's policies
"RTN","IBCSCH",132,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",133,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",134,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",135,0)
 Q
"RTN","IBCSCH",136,0)
 ;
"RTN","IBCSCH",137,0)
INSDSPLX(IBIFN) ; Display patient's policies extended (?INX)
"RTN","IBCSCH",138,0)
 N IBX,DFN,IBDATE S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDATE=$P(IBX,U,3) D DISP^IBCNS3(DFN,IBDATE,123)
"RTN","IBCSCH",139,0)
 Q
"RTN","IBCSCH",140,0)
 ;
"RTN","IBCSCH",141,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",142,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",143,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",144,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",145,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",146,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",147,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",148,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",149,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",150,0)
 Q
"RTN","IBCSCH",151,0)
 ;
"RTN","IBCSCH",152,0)
DISPROPT(IBIFN) ; prompt for VA or Non-VA provider.
"RTN","IBCSCH",153,0)
 N X,Y,DIR
"RTN","IBCSCH",154,0)
 S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA Provider: ",DIR("B")="V"
"RTN","IBCSCH",155,0)
 D ^DIR
"RTN","IBCSCH",156,0)
 I Y="V" D DISPPRV^IBCSCH2(IBIFN) Q
"RTN","IBCSCH",157,0)
 I Y="N" D DISPNVA^IBCSCH2(IBIFN)
"RTN","IBCSCH",158,0)
 Q
"RTN","IBCSCH",159,0)
 ;
"RTN","IBCSCH2")
0^17^B81743485^B35721054
"RTN","IBCSCH2",1,0)
IBCSCH2 ;ALB/DLS - Continuation of routine IBCSCH ;12 JUN 2007
"RTN","IBCSCH2",2,0)
 ;;2.0;INTEGRATED BILLING;**374,623**;21-MAR-94;Build 70
"RTN","IBCSCH2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSCH2",4,0)
 Q
"RTN","IBCSCH2",5,0)
 ;
"RTN","IBCSCH2",6,0)
DISPPRV(IBIFN) ; Display provider information: interactive - user selects provider
"RTN","IBCSCH2",7,0)
 N DIC,DA,X,Y,IBI,IBJ,IBW,IBPRV,IBPX,IBDT,IBARR,IBNPISTR,IBNPI,IBPRVTAX,IBTAXFLG
"RTN","IBCSCH2",8,0)
 N IBPRVDAT,IBTAXID,IBTAXEFF,IBTAXTRM,IBTAXX12
"RTN","IBCSCH2",9,0)
 W !!,"This is a display of provider specific information."
"RTN","IBCSCH2",10,0)
 D SPECIFIC^IBCEU5(IBIFN)
"RTN","IBCSCH2",11,0)
 S IBDT=+$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBDT S IBDT=DT
"RTN","IBCSCH2",12,0)
 ;
"RTN","IBCSCH2",13,0)
 F IBI=1:1 W ! S DIC("A")="Select PROVIDER NAME: ",DIC="^VA(200,",DIC(0)="AEQM" D ^DIC Q:Y'>0  D
"RTN","IBCSCH2",14,0)
 . S IBPRV=Y
"RTN","IBCSCH2",15,0)
 . W !!,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH2",16,0)
 . S IBPX=$$ESBLOCK^XUSESIG1(+IBPRV)
"RTN","IBCSCH2",17,0)
 . W !," Signature Name: ",$P(IBPX,U,1)
"RTN","IBCSCH2",18,0)
 . W !,"Signature Title: ",$P(IBPX,U,3)
"RTN","IBCSCH2",19,0)
 . W !,"         Degree: ",$P(IBPX,U,2)
"RTN","IBCSCH2",20,0)
 . ;
"RTN","IBCSCH2",21,0)
 . ; PRXM/DLS - Patch 374. Adding NPI to Signature information.
"RTN","IBCSCH2",22,0)
 . S IBNPISTR=$$NPI^XUSNPI("Individual_ID",+IBPRV)                               ; Get NPI information.
"RTN","IBCSCH2",23,0)
 . S IBNPI=$P(IBNPISTR,U)                                                        ; Get NPI.
"RTN","IBCSCH2",24,0)
 . W !,"            NPI: ",$S(IBNPI>0:IBNPI,1:"")                                ; Write NPI.
"RTN","IBCSCH2",25,0)
 . ;
"RTN","IBCSCH2",26,0)
 . S IBPX=$$PRVLIC^IBCU1(+IBPRV,IBDT,.IBARR)                                     ; Get License Info.
"RTN","IBCSCH2",27,0)
 . W !!,"     License(s): " D
"RTN","IBCSCH2",28,0)
 . . I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH2",29,0)
 . . S IBJ=0,IBW=0 F  S IBJ=$O(IBARR(IBJ)) Q:'IBJ  D
"RTN","IBCSCH2",30,0)
 . . . S IBPX=IBARR(IBJ),IBPX=$P($G(^DIC(5,+IBPX,0)),U,2)_": "_$P(IBPX,U,2)
"RTN","IBCSCH2",31,0)
 . . . I (IBW+$L(IBPX))>61 W !,?17 S IBW=0
"RTN","IBCSCH2",32,0)
 . . . W IBPX,"  " S IBW=IBW+$L(IBPX)+2
"RTN","IBCSCH2",33,0)
 . ;
"RTN","IBCSCH2",34,0)
 . ; PRXM/DLS - Display Person Class/Taxonomy Information.
"RTN","IBCSCH2",35,0)
 . S IBTAXFLG=0                                                                  ; Init to 0, set to 1 if Person Class info found.
"RTN","IBCSCH2",36,0)
 . S IBPRVTAX=0                                                                  ; Loop through prov's Person Class entries.
"RTN","IBCSCH2",37,0)
 . F  S IBPRVTAX=$O(^VA(200,+IBPRV,"USC1",IBPRVTAX)) Q:'IBPRVTAX  D
"RTN","IBCSCH2",38,0)
 . . ; Get Basic Information
"RTN","IBCSCH2",39,0)
 . . S IBTAXID=$$GET1^DIQ(200.05,IBPRVTAX_","_+IBPRV_",",.01,"I") Q:IBTAXID=""   ; Person Class IEN.
"RTN","IBCSCH2",40,0)
 . . S IBTAXEFF=$$GET1^DIQ(200.05,IBPRVTAX_","_+IBPRV_",",2,"I")                 ; Person Class Eff Date.
"RTN","IBCSCH2",41,0)
 . . S IBTAXTRM=$$GET1^DIQ(200.05,IBPRVTAX_","_+IBPRV_",",3,"I") ;I IBTAXTRM=""   ; Person Class Term Date.
"RTN","IBCSCH2",42,0)
 . . I IBTAXTRM="" S IBTAXTRM=9999999
"RTN","IBCSCH2",43,0)
 . . ; See if claim beginning service date falls within Eff date range. If so, proceed.
"RTN","IBCSCH2",44,0)
 . . I (IBTAXEFF'>IBDT),(IBTAXTRM>IBDT) D
"RTN","IBCSCH2",45,0)
 . . . S IBTAXFLG=1                                                              ; A Person Class found, set flag to 1.
"RTN","IBCSCH2",46,0)
 . . . ; Get Detailed Information and Display.
"RTN","IBCSCH2",47,0)
 . . . S IBPX=$$IEN2DATA^XUA4A72(IBTAXID)                                        ; Person Class Details.
"RTN","IBCSCH2",48,0)
 . . . S IBTAXX12=$$GET1^DIQ(8932.1,IBTAXID_",",6)                               ; Get X12 Code.
"RTN","IBCSCH2",49,0)
 . . . W !
"RTN","IBCSCH2",50,0)
 . . . W !,"   Person Class: ",$P(IBPX,U,6)                                      ; Display Person Class Name.
"RTN","IBCSCH2",51,0)
 . . . W !,"  PROVIDER TYPE: ",$P(IBPX,U)                                        ; Display Provider Type.
"RTN","IBCSCH2",52,0)
 . . . W !," CLASSIFICATION: ",$P(IBPX,U,2)                                      ; Display Classification.
"RTN","IBCSCH2",53,0)
 . . . W !," SPECIALIZATION: ",$P(IBPX,U,3)                                      ; Display Specialization.
"RTN","IBCSCH2",54,0)
 . . . W !,"       TAXONOMY: ",IBTAXX12,$S(IBTAXX12'="":" ("_IBTAXID_")",1:"")   ; Display X12 Code and Internal Code (IEN).
"RTN","IBCSCH2",55,0)
 . . . W !,"      EFFECTIVE: ",$$FMTE^XLFDT(IBTAXEFF,2)                          ; Display EFF Date.
"RTN","IBCSCH2",56,0)
 . . . I IBTAXTRM'=9999999 W " - ",$$FMTE^XLFDT(IBTAXTRM,2)                      ; Display TRM Date, if it exists.
"RTN","IBCSCH2",57,0)
 . ; If no Person Class entries exists for this Provider, notate it.
"RTN","IBCSCH2",58,0)
 . I 'IBTAXFLG W !!,"   Person Class: None Active on ",$$FMTE^XLFDT(IBDT,2)
"RTN","IBCSCH2",59,0)
 . S IBPX=$$PRVTYP^IBCRU6(+IBPRV,+IBDT)
"RTN","IBCSCH2",60,0)
 . W !!,"RC Provider Group: ",$S(+IBPX:$P(IBPX,U,3)_", "_$P(IBPX,U,5)_"%",1:"None")
"RTN","IBCSCH2",61,0)
 . W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH2",62,0)
 Q
"RTN","IBCSCH2",63,0)
 ;
"RTN","IBCSCH2",64,0)
DISPNVA(IBIFN) ; Display Non-VA individual provider information.
"RTN","IBCSCH2",65,0)
 N IBDT,IBI,IBNVFLG,IBNVID,IBNVTX,IBNVTX2,IBNVTXID,IBNVSL,X,Y,DIC,DA,IBTAXX12,IBPX
"RTN","IBCSCH2",66,0)
 S IBDT=+$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBDT S IBDT=DT
"RTN","IBCSCH2",67,0)
 ; Select Non-VA Provider
"RTN","IBCSCH2",68,0)
 F IBI=1:1 W ! S DIC("A")="Select NON-VA PROVIDER NAME: ",DIC="^IBA(355.93,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U,2)=2" D ^DIC Q:Y'>0  D
"RTN","IBCSCH2",69,0)
 . S IBNVID=+Y W !!,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH2",70,0)
 . W !," Signature Name: ",$$GET1^DIQ(355.93,IBNVID_",",.01)
"RTN","IBCSCH2",71,0)
 . W !,"            NPI: ",$$GET1^DIQ(355.93,IBNVID_",",41.01)
"RTN","IBCSCH2",72,0)
 . W !
"RTN","IBCSCH2",73,0)
 . S IBNVSL=$$GET1^DIQ(355.93,IBNVID_",",.12)                                        ; Get and Display License info.
"RTN","IBCSCH2",74,0)
 . W !,"     License(s): ",$S(IBNVSL'="":IBNVSL,1:"None Active on "_$$FMTE^XLFDT(IBDT,2))
"RTN","IBCSCH2",75,0)
 . W !
"RTN","IBCSCH2",76,0)
 . S IBNVTX=""
"RTN","IBCSCH2",77,0)
 . S IBNVFLG=0
"RTN","IBCSCH2",78,0)
 . F  S IBNVTX=$O(^IBA(355.93,IBNVID,"TAXONOMY","D",IBNVTX),-1) Q:IBNVTX=""  D       ; Loop through prov's Person Class X-Ref.
"RTN","IBCSCH2",79,0)
 . . S IBNVTX2=""
"RTN","IBCSCH2",80,0)
 . . F  S IBNVTX2=$O(^IBA(355.93,IBNVID,"TAXONOMY","D",IBNVTX,IBNVTX2)) Q:'IBNVTX2  D
"RTN","IBCSCH2",81,0)
 . . . I $$GET1^DIQ(355.9342,IBNVTX2_","_IBNVID_",",.03,"I")="A" D                   ; Proceed if the Person Class is Active.
"RTN","IBCSCH2",82,0)
 . . . . S IBNVFLG=1
"RTN","IBCSCH2",83,0)
 . . . . S IBNVTXID=$$GET1^DIQ(355.9342,IBNVTX2_","_IBNVID_",",.01,"I")
"RTN","IBCSCH2",84,0)
 . . . . ; Get Detailed Information and Display.
"RTN","IBCSCH2",85,0)
 . . . . S IBPX=$$IEN2DATA^XUA4A72(IBNVTXID)                                         ; Person Class Details.
"RTN","IBCSCH2",86,0)
 . . . . S IBTAXX12=$$GET1^DIQ(8932.1,IBNVTXID_",",6)                                ; Get X12 Code.
"RTN","IBCSCH2",87,0)
 . . . . W !,"   Person Class: ",$P(IBPX,U,6)                                        ; Display Person Class Name.
"RTN","IBCSCH2",88,0)
 . . . . W $S($G(IBNVTX)=1:" (Primary)",1:" (Secondary)")
"RTN","IBCSCH2",89,0)
 . . . . W !,"  PROVIDER TYPE: ",$P(IBPX,U)                                          ; Display Provider Type.
"RTN","IBCSCH2",90,0)
 . . . . W !," CLASSIFICATION: ",$P(IBPX,U,2)                                        ; Display Classification.
"RTN","IBCSCH2",91,0)
 . . . . W !," SPECIALIZATION: ",$P(IBPX,U,3)                                        ; Display Specialization.
"RTN","IBCSCH2",92,0)
 . . . . W !,"       TAXONOMY: ",IBTAXX12,$S(IBTAXX12'="":" ("_IBNVTXID_")",1:""),!  ; Display X12 Code and Internal Code (IEN).
"RTN","IBCSCH2",93,0)
 . I 'IBNVFLG W !,"   Person Class: None Active on ",$$FMTE^XLFDT(IBDT,2),!
"RTN","IBCSCH2",94,0)
 . W $TR($J(" ",IOM)," ","-"),!
"RTN","IBCSCH2",95,0)
 Q
"RTN","IBCSCH2",96,0)
 ;
"RTN","IBCSCH2",97,0)
 ;/vd - IB*2.0*623 (US4055) - Beginning.
"RTN","IBCSCH2",98,0)
DENTAL(IBIFN) ; Select Dental Claim detail gathered and displayed here
"RTN","IBCSCH2",99,0)
 Q:'$G(IBIFN)
"RTN","IBCSCH2",100,0)
 N ARY,CPTMOD,I,IBLC,IBLIN,IBQ,IBRORA,IBRORARES,IBRORATX,IBX,IBXDATA,L,N,NN,NPI,NUM,POS,PRVARY,SEQ,T,T1,T2,XABCD,XIBI,XDIAG
"RTN","IBCSCH2",101,0)
 K ^TMP("IBXSAVE",$J),^TMP("IBXDISP",$J)
"RTN","IBCSCH2",102,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH2",103,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,2)  ;Set ^TMP("IBXDISP",$J) w/ data for Diagnosis display
"RTN","IBCSCH2",104,0)
 D OUTPT^IBCEF11(IBIFN,1) ;Gather procedure-level Dental data - stored in IBXDATA array
"RTN","IBCSCH2",105,0)
 D GETPROVS(IBIFN,.PRVARY)  ;Get the Provider Types.
"RTN","IBCSCH2",106,0)
 ;Output claim-level information
"RTN","IBCSCH2",107,0)
 W @IOF,"Example of dx, procedures, teeth info, and charges entered on the Dental claim"
"RTN","IBCSCH2",108,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH2",109,0)
 W !,"Claim Provider:"
"RTN","IBCSCH2",110,0)
 S IBRORA=0
"RTN","IBCSCH2",111,0)
 I $D(PRVARY) D    ; Display the Provider Types & their IDs.
"RTN","IBCSCH2",112,0)
 . W !
"RTN","IBCSCH2",113,0)
 . S POS=0,SEQ=""
"RTN","IBCSCH2",114,0)
 . F  S SEQ=$O(PRVARY("SQ",SEQ)) Q:SEQ=""  D
"RTN","IBCSCH2",115,0)
 . . W ?POS,PRVARY("SQ",SEQ) S POS=POS+$L(PRVARY("SQ",SEQ))+5
"RTN","IBCSCH2",116,0)
 ;
"RTN","IBCSCH2",117,0)
 ;Output diagnosis codes using ^TMP("IBXDISP",$J) created by $$BILLN^IBCEFG0 function
"RTN","IBCSCH2",118,0)
 W !!,"34a. Diagnosis:"
"RTN","IBCSCH2",119,0)
 F L=3,4,5 D
"RTN","IBCSCH2",120,0)
 .Q:(L'=3)   ; Due to a request by eBiz...only 4 diagnosis codes should display on a Dental Claim (US4055).
"RTN","IBCSCH2",121,0)
 .W !
"RTN","IBCSCH2",122,0)
 .F T=3,16,29,42 D
"RTN","IBCSCH2",123,0)
 ..S NUM=""
"RTN","IBCSCH2",124,0)
 ..I L=3 S NUM=$S(T=3:1,T=16:2,T=29:3,T=42:4,1:"")
"RTN","IBCSCH2",125,0)
 ..S T2=T+2,T1=T I NUM>9 S T1=T-1
"RTN","IBCSCH2",126,0)
 ..W ?T1,NUM,".",?T2,$G(^TMP("IBXDISP",$J,1,IBLIN+L,T))
"RTN","IBCSCH2",127,0)
 W !,"35. Dental Claim Note:"
"RTN","IBCSCH2",128,0)
 W !,$$GET1^DIQ(399,IBIFN,97)
"RTN","IBCSCH2",129,0)
 ;
"RTN","IBCSCH2",130,0)
 W ! D PG S IBLC=13
"RTN","IBCSCH2",131,0)
 ;Order thru IBXDATA array to output procedure-level data
"RTN","IBCSCH2",132,0)
 S ARY="TMP(""IBXDATA"",$J)" K @ARY
"RTN","IBCSCH2",133,0)
 I $D(IBXDATA)>1 S N="" F  S N=$O(IBXDATA(N)) Q:N=""  D
"RTN","IBCSCH2",134,0)
 . S @ARY@(N,"POS")=$P($G(IBXDATA(N)),U,3)
"RTN","IBCSCH2",135,0)
 . S @ARY@(N,"CPT")=$P($G(IBXDATA(N)),U,5)
"RTN","IBCSCH2",136,0)
 . S XIBI=+$G(IBXDATA(N,"CPLNK"))
"RTN","IBCSCH2",137,0)
 . S XDIAG=$P($G(IBXDATA(N)),U,7),XABCD=""
"RTN","IBCSCH2",138,0)
 . F I=1:1:4 I +$P(XDIAG,",",I),$P(XDIAG,",",I)<5 S XABCD=XABCD_$TR($P(XDIAG,",",I),"1234,","ABCD")
"RTN","IBCSCH2",139,0)
 . S @ARY@(N,"DIAG")=XABCD
"RTN","IBCSCH2",140,0)
 . S @ARY@(N,"QTY")=$P($G(IBXDATA(N)),U,9)
"RTN","IBCSCH2",141,0)
 . S @ARY@(N,"CHARGE")=$P($G(IBXDATA(N)),U,8)*@ARY@(N,"QTY")*100
"RTN","IBCSCH2",142,0)
 . S CPTMOD=$P($G(IBXDATA(N)),U,10) I $TR(CPTMOD,",")]"" F I=1:1:$L(CPTMOD,",") D
"RTN","IBCSCH2",143,0)
 . . Q:$P(CPTMOD,",",I)=""
"RTN","IBCSCH2",144,0)
 . . S $P(CPTMOD,",",I)=$P($G(^DIC(81.3,$P(CPTMOD,",",I),0)),U)
"RTN","IBCSCH2",145,0)
 . . S @ARY@(N,"CPTMOD")=$TR(CPTMOD,","," ")
"RTN","IBCSCH2",146,0)
 . S @ARY@(N,"ORALCAV")=$TR($P($G(IBXDATA(N,"DEN")),U,1,5),U," ")
"RTN","IBCSCH2",147,0)
 . ;
"RTN","IBCSCH2",148,0)
 . S @ARY@(N,"START")=$E($P($G(IBXDATA(N)),U,1),1,2)_" "_$E($P($G(IBXDATA(N)),U,1),3,4)_" "_$E($P($G(IBXDATA(N)),U,1),7,8)
"RTN","IBCSCH2",149,0)
 . S @ARY@(N,"END")=$E($P($G(IBXDATA(N)),U,2),1,2)_" "_$E($P($G(IBXDATA(N)),U,2),3,4)_" "_$E($P($G(IBXDATA(N)),U,2),7,8)
"RTN","IBCSCH2",150,0)
 . I $P($G(IBXDATA(N)),U,2)="" S @ARY@(N,"END")=@ARY@(N,"START")
"RTN","IBCSCH2",151,0)
 . ;
"RTN","IBCSCH2",152,0)
 . S NN=0 F  S NN=$O(IBXDATA(N,"DEN1",NN)) Q:NN=""  I NN?1.N D
"RTN","IBCSCH2",153,0)
 . . S @ARY@(N,NN,"TOOTH")=$P($G(IBXDATA(N,"DEN1",NN,0)),U)
"RTN","IBCSCH2",154,0)
 . . S @ARY@(N,NN,"SURFACE")=$TR($P($G(IBXDATA(N,"DEN1",NN,0)),U,2,6),U)
"RTN","IBCSCH2",155,0)
 ;
"RTN","IBCSCH2",156,0)
 S N="" F  S N=$O(@ARY@(N)) Q:N=""  D
"RTN","IBCSCH2",157,0)
 . W !,@ARY@(N,"START"),?9,@ARY@(N,"END"),?18,@ARY@(N,"ORALCAV")
"RTN","IBCSCH2",158,0)
 . W ?33,$G(@ARY@(N,1,"TOOTH")),?36,$G(@ARY@(N,1,"SURFACE")),?42,$G(@ARY@(N,"CPT"))
"RTN","IBCSCH2",159,0)
 . W ?48,$G(@ARY@(N,"CPTMOD")),?60,$G(@ARY@(N,"DIAG")),?65,$G(@ARY@(N,"QTY")),?68,$G(@ARY@(N,"CHARGE")),?77,@ARY@(N,"POS")
"RTN","IBCSCH2",160,0)
 . S IBLC=IBLC+1 I IBLC>20,($O(@ARY@(N))!($O(@ARY@(N,1)))) W !,$TR($J("-",80)," ","-") S IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  W @IOF D PG
"RTN","IBCSCH2",161,0)
 . S NN=1 F  S NN=$O(@ARY@(N,NN)) Q:NN=""  D
"RTN","IBCSCH2",162,0)
 . . I $G(@ARY@(N,NN,"TOOTH"))="",($G(@ARY@(N,NN,"SURFACE")))="" Q
"RTN","IBCSCH2",163,0)
 . . W !,?33,$G(@ARY@(N,NN,"TOOTH")),?36,$G(@ARY@(N,NN,"SURFACE"))
"RTN","IBCSCH2",164,0)
 . . S IBLC=IBLC+1 I IBLC>20,$O(@ARY@(N,NN)) W !,$TR($J("-",80)," ","-") I  S IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  W @IOF D PG
"RTN","IBCSCH2",165,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH2",166,0)
 S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH2",167,0)
 K @ARY
"RTN","IBCSCH2",168,0)
 Q
"RTN","IBCSCH2",169,0)
 ;
"RTN","IBCSCH2",170,0)
GETPROVS(IBIFN,PRVARY) ;Get the Provider Types
"RTN","IBCSCH2",171,0)
 N FILE,FLD,PROV,SQ,TYPE,UCTYPE
"RTN","IBCSCH2",172,0)
 K PRVARY
"RTN","IBCSCH2",173,0)
 Q:'IBIFN
"RTN","IBCSCH2",174,0)
 S TYPE=""
"RTN","IBCSCH2",175,0)
 F  S TYPE=$O(^DGCR(399,IBIFN,"PRV","C",TYPE)) Q:TYPE=""  D
"RTN","IBCSCH2",176,0)
 . S UCTYPE=$$UP^XLFSTR(TYPE)
"RTN","IBCSCH2",177,0)
 . I UCTYPE="ASSISTANT SURGEON" S UCTYPE="ASST SURGEON"
"RTN","IBCSCH2",178,0)
 . I $D(PRVARY("P",UCTYPE)) Q  ; Already have capitalized version of this Provider Type.
"RTN","IBCSCH2",179,0)
 . S SQ=$O(^DGCR(399,IBIFN,"PRV","C",TYPE,"")) Q:SQ=""
"RTN","IBCSCH2",180,0)
 . S FILE=+$P($P($G(^DGCR(399,IBIFN,"PRV",SQ,0)),U,2),"(",2)
"RTN","IBCSCH2",181,0)
 . S PROV=$P($P($G(^DGCR(399,IBIFN,"PRV",SQ,0)),U,2),";")
"RTN","IBCSCH2",182,0)
 . S FLD=$S(FILE["355.93":41.01,1:41.99)
"RTN","IBCSCH2",183,0)
 . S NPI=$$GET1^DIQ(FILE,PROV,FLD) S:$TR(NPI," ")="" NPI="**NO NPI**"
"RTN","IBCSCH2",184,0)
 . S PRVARY("P",UCTYPE)=SQ,PRVARY("SQ",SQ)=UCTYPE_"/"_NPI
"RTN","IBCSCH2",185,0)
 Q
"RTN","IBCSCH2",186,0)
 ;
"RTN","IBCSCH2",187,0)
PG ; Display Dental form box numbers at top of charge list
"RTN","IBCSCH2",188,0)
 W "24                25             27 28    29                29a  29b 31      38"
"RTN","IBCSCH2",189,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH2",190,0)
 S IBLC=3
"RTN","IBCSCH2",191,0)
 Q
"RTN","IBCSCH2",192,0)
 ;/vd - IB*2.0*623 (US4055) - End.
"RTN","IBCSCH2",193,0)
 ;
"RTN","IBJPS")
0^18^B7758278^B6807999
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461,516,547,592,608,623**;21-MAR-94;Build 70
"RTN","IBJPS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 N DR
"RTN","IBJPS",39,0)
 I IBSET'="" D
"RTN","IBJPS",40,0)
 . ; MRD;IB*2.0*516 - Added TRICARE Pay-To Providers.
"RTN","IBJPS",41,0)
 . ; WCJ;IB*2.0*547 - shifted the numbers down to insert a new one
"RTN","IBJPS",42,0)
 . I IBSET=8 D EN^IBJPS5 Q
"RTN","IBJPS",43,0)
 . I IBSET=11 D EN^IBJPS3(0) Q
"RTN","IBJPS",44,0)
 . I IBSET=12 D EN^IBJPS3(1) Q
"RTN","IBJPS",45,0)
 . ;WCJ;IB*2.0*547 added default Administrative contractors for billing (medicare and commercial)
"RTN","IBJPS",46,0)
 . I IBSET=17 D EN^IBJPS6(1) Q   ; medicare
"RTN","IBJPS",47,0)
 . I IBSET=18 D EN^IBJPS6(2) Q   ; commercial
"RTN","IBJPS",48,0)
 . I IBSET=21 D EN^IBJPS8 Q   ; WCJ;IB*2.0*608;US3;
"RTN","IBJPS",49,0)
 . S DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",50,0)
 . Q
"RTN","IBJPS",51,0)
 ; WCJ;IB*2.0*547 - shifted the number down to insert a new one
"RTN","IBJPS",52,0)
 I IBSET=9,$$ICD9SYS^IBACSV(DT)=30 S $P(DR,";",1)=7.05
"RTN","IBJPS",53,0)
 ;
"RTN","IBJPS",54,0)
 I $G(DR)'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",55,0)
 ;JWS;IB*2.0*623;If 837 FHIR transaction is turned off, then reset 364 field .09 AC index
"RTN","IBJPS",56,0)
 I '$$GET1^DIQ(350.9,"1,",8.21,"I") D
"RTN","IBJPS",57,0)
 . S DA=""
"RTN","IBJPS",58,0)
 . F  S DA=$O(^IBA(364,"AC",1,DA)) Q:DA=""  D
"RTN","IBJPS",59,0)
 .. S DR=".09////0",DIE="^IBA(364," D ^DIE
"RTN","IBJPS",60,0)
 .. Q
"RTN","IBJPS",61,0)
 . K DA,DR,DIE,DIC,X
"RTN","IBJPS",62,0)
 . Q
"RTN","IBJPS",63,0)
 ;JWS;IB*2.0*623;end
"RTN","IBJPS",64,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",65,0)
 Q
"RTN","IBJPS",66,0)
 ;
"RTN","IBJPS",67,0)
 ;WCJ;IB*2.0*547 - cleared the spot for the new #8, added 17 & 18, move 16 to 19.
"RTN","IBJPS",68,0)
 ;gef;IB*2.0*547 - added 20
"RTN","IBJPS",69,0)
 ;JWS;IB*2.0*592 - added field 8.2 to 16
"RTN","IBJPS",70,0)
 ;JWS;IB*2.0*623 - added field 8.21 to 16
"RTN","IBJPS",71,0)
1 ;;.09;.13;.14
"RTN","IBJPS",72,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",73,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",74,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",75,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",76,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",77,0)
7 ;;1.33;1.32;1.31;1.27;8.14T;8.15T;8.16T;8.19T
"RTN","IBJPS",78,0)
9 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",79,0)
10 ;;1.01;1.02;1.05
"RTN","IBJPS",80,0)
13 ;;2.08;2.09
"RTN","IBJPS",81,0)
14 ;;11.01
"RTN","IBJPS",82,0)
15 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",83,0)
16 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T;8.17T;8.2T;8.21T
"RTN","IBJPS",84,0)
19 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",85,0)
20 ;;52.01;52.02
"RTN","IBJPS",86,0)
 ;
"RTN","IBJPS2")
0^19^B62122372^B59492878
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461,516,547,592,608,623**;21-MAR-94;Build 70
"RTN","IBJPS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0,PTPSTR,BPZZ
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 ; IB patch 349 for UB-04 claim form and parameters
"RTN","IBJPS2",27,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("UB-04 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,33),350.9,1.33),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 S IBLN=$$SET("CMS-1500 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,32),350.9,1.32),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",30,0)
 S IBLN=$$SET("CMS-1500 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,14),350.9,8.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",31,0)
 S IBLN=$$SET("EOB Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,16),350.9,8.16),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",32,0)
 ;
"RTN","IBJPS2",33,0)
 D LEFT(2)
"RTN","IBJPS2",34,0)
 S IBLN=$$SET("UB-04 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",35,0)
 S IBLN=$$SET("CMS-1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("UB-04 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,15),350.9,8.15),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 S IBLN=$$SET("MRA Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,19),350.9,8.19),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",38,0)
 ;
"RTN","IBJPS2",39,0)
 ; VAD - IB*2.0*547 - inserted a new section 8.  Only count activated codes
"RTN","IBJPS2",40,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",41,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,15,"B",Z)) Q:'Z  I $P($G(^DGCR(399.2,Z,0)),U,3)=1 S Z0=Z0+1
"RTN","IBJPS2",42,0)
 S PTPSTR=Z0_" Activated Codes Defined"
"RTN","IBJPS2",43,0)
 S IBLN=$$SET("Printed Claims Rev Code Excl",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",44,0)
 ;
"RTN","IBJPS2",45,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",46,0)
 S Z=$$ICD9SYS^IBACSV(DT)
"RTN","IBJPS2",47,0)
 I Z=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29)_" (ICD-9)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",48,0)
 I Z'=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD7,U,5),350.9,7.05)_" (ICD-10)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",49,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",50,0)
 ;
"RTN","IBJPS2",51,0)
 D LEFT(2)
"RTN","IBJPS2",52,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",53,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",54,0)
 ;
"RTN","IBJPS2",55,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",56,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",57,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",58,0)
 ;
"RTN","IBJPS2",59,0)
 D LEFT(2)
"RTN","IBJPS2",60,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",61,0)
 ;
"RTN","IBJPS2",62,0)
 D RIGHT(3,1,1) ; - Pay-To Providers - section 11
"RTN","IBJPS2",63,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,19,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,19,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",64,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,3),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z,0),U),1:"")
"RTN","IBJPS2",65,0)
 S IBLN=$$SET("Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",66,0)
 ;
"RTN","IBJPS2",67,0)
 ; MRD;IB*2.0*516 - Added TRICARE Pay-To Providers.
"RTN","IBJPS2",68,0)
 D RIGHT(3,1,1) ; - TRICARE Pay-To Providers - section 12
"RTN","IBJPS2",69,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,29,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,29,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",70,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,4),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z,1),U),1:"")
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("Non-MCCF Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)  ; IB*2*608 (vd) - Changed "TRICARE..." to "Non-MCCF..."
"RTN","IBJPS2",72,0)
 ;
"RTN","IBJPS2",73,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",74,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",75,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",76,0)
 ;
"RTN","IBJPS2",77,0)
 ; ePharmacy parameters
"RTN","IBJPS2",78,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET("HIPPA NCPDP Active Flag",$S($P(IBPD11,U)=1:"Active",1:"Not Active"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 ;
"RTN","IBJPS2",81,0)
 ; transfer pricing
"RTN","IBJPS2",82,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",83,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",84,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 ;
"RTN","IBJPS2",88,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",89,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",90,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",91,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",92,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",93,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",94,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",95,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",98,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",99,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",100,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",103,0)
 S IBLN=$$SET(" Enable Auto Reg EOB Processing?",$$YN(+$P(IBPD8,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 ;JWS;IB*2.0*592;add on/off for Dental
"RTN","IBJPS2",105,0)
 I $P(IBPD8,U,20)="" S $P(IBPD8,U,20)=1  ;default to yes
"RTN","IBJPS2",106,0)
 S IBLN=$$SET(" Allow Dental Claim Processing?",$$YN(+$P(IBPD8,U,20)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",107,0)
 ;JWS;IB*2.0*623; add on/off for 837 FHIR transaction
"RTN","IBJPS2",108,0)
 I $P(IBPD8,U,21)="" S $P(IBPD8,U,21)=0 D  ;default to no
"RTN","IBJPS2",109,0)
 . N DIE,DA,DR
"RTN","IBJPS2",110,0)
 . S DIE="^IBE(350.9,",DA=1,DR="8.21////0" D ^DIE
"RTN","IBJPS2",111,0)
 S IBLN=$$SET(" Allow 837 FHIR Trans processing?",$$YN(+$P(IBPD8,U,21)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",112,0)
 ;
"RTN","IBJPS2",113,0)
 ; WCJ;IB*2.0*547;administrative contractors medicare
"RTN","IBJPS2",114,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",115,0)
 S Z=+$P($G(^IBE(350.9,1,81,0)),U,4)_" defined"
"RTN","IBJPS2",116,0)
 S IBLN=$$SET("Alt Prim Payer ID Typ-Medicare",Z,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",117,0)
 ;
"RTN","IBJPS2",118,0)
 ; WCJ;IB*2.0*547;administrative contractors commercial
"RTN","IBJPS2",119,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",120,0)
 S Z=+$P($G(^IBE(350.9,1,82,0)),U,4)_" defined"
"RTN","IBJPS2",121,0)
 S IBLN=$$SET("Alt Prim Payer ID Typ-Commercial",Z,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",122,0)
 ;
"RTN","IBJPS2",123,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",124,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",125,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",126,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",127,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",128,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",129,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",130,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",131,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",132,0)
 . Q
"RTN","IBJPS2",133,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",134,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",135,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",136,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",137,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",138,0)
 ;
"RTN","IBJPS2",139,0)
 ; Request For Additional Info patch 547
"RTN","IBJPS2",140,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",141,0)
 S Z=$G(^IBE(350.9,1,52)) S:$P(Z,U)="" $P(Z,U)="No Purge"
"RTN","IBJPS2",142,0)
 S IBLN=$$SET("Days to store 277RFAI Transactions",$P(Z,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",143,0)
 S IBLN=$$SET("Days to wait to purge entry on RFAI Management Worklist",$P(Z,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",144,0)
 ;
"RTN","IBJPS2",145,0)
 ; WCJ - IB*2.0*608;US3 - inserted a new section 20.
"RTN","IBJPS2",146,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",147,0)
 S Z="",Z0=0 F  S Z=$O(^IBE(350.9,1,16,"B",Z)) Q:'Z  S Z0=Z0+1
"RTN","IBJPS2",148,0)
 S PTPSTR=Z0_" CMN CPT Codes Included"
"RTN","IBJPS2",149,0)
 S IBLN=$$SET("CMN CPT Code Inclusion",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",150,0)
 Q
"RTN","IBJPS2",151,0)
 ;
"RTN","IBJPS2",152,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",153,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",154,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",155,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",156,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",157,0)
 S LN=LN+1
"RTN","IBJPS2",158,0)
 Q LN
"RTN","IBJPS2",159,0)
 ;
"RTN","IBJPS2",160,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",161,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",162,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",163,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",164,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",165,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",166,0)
 Q
"RTN","IBJPS2",167,0)
 ;
"RTN","IBJPS2",168,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",169,0)
 ;
"RTN","IBJPS2",170,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",171,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",172,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",173,0)
 Q
"RTN","IBJPS2",174,0)
 ;
"RTN","IBJPS2",175,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",176,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",177,0)
 Q
"RTN","IBTASHLT")
0^41^B716320^n/a
"RTN","IBTASHLT",1,0)
IBTASHLT ;ASF/HALF - HEALTH CHECK RPC ;4/26/18
"RTN","IBTASHLT",2,0)
 ;;2.0;INTEGRATED BILLING;**623**;26-APR-18;Build 70
"RTN","IBTASHLT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTASHLT",4,0)
 Q
"RTN","IBTASHLT",5,0)
 ;DBIA#2098
"RTN","IBTASHLT",6,0)
 ;
"RTN","IBTASHLT",7,0)
HEALTH(RESULT,ARG) ;
"RTN","IBTASHLT",8,0)
 ;
"RTN","IBTASHLT",9,0)
 N G,STATION,SNUMB,TMP
"RTN","IBTASHLT",10,0)
 S DUZ(0)="@" D DTNOLF^DICRW  ;DBIA#2098
"RTN","IBTASHLT",11,0)
 S G=$$SITE^VASITE,STATION=$P(G,U,2),SNUMB=$P(G,U,3)
"RTN","IBTASHLT",12,0)
 S TMP("HEALTH")="OK"
"RTN","IBTASHLT",13,0)
 S TMP("STATION")=STATION
"RTN","IBTASHLT",14,0)
 S TMP("STATION NUMBER")=SNUMB
"RTN","IBTASHLT",15,0)
 D ENCODE^XLFJSONE("TMP","RESULT")
"RTN","IBTASHLT",16,0)
 S RESULT(1)="["_RESULT(1)_"]"
"RTN","IBTASHLT",17,0)
 Q
"RTN","IBTASHLT",18,0)
 ;
"RTN","IBY623PO")
0^^B21565752^n/a
"RTN","IBY623PO",1,0)
IBY623PO ;EDE/WCJ - POST-INSTALL FOR IB*2.0*623 ;13-JUL-2018
"RTN","IBY623PO",2,0)
 ;;2.0;INTEGRATED BILLING;**623**;21-MAR-94;Build 70
"RTN","IBY623PO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY623PO",4,0)
 ;
"RTN","IBY623PO",5,0)
 ; IA# 10141 - MES^XPDUTL
"RTN","IBY623PO",6,0)
 ; IA#4677 - $$CREATE^XUSAP
"RTN","IBY623PO",7,0)
 ;
"RTN","IBY623PO",8,0)
EN ;Entry Point
"RTN","IBY623PO",9,0)
 N IBA
"RTN","IBY623PO",10,0)
 S IBA(2)="IB*2*623 Post-Install...",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBY623PO",11,0)
 D ADDPROXY
"RTN","IBY623PO",12,0)
 D ADDRTYPS
"RTN","IBY623PO",13,0)
 D UPDERR
"RTN","IBY623PO",14,0)
 S IBA(2)="IB*2*623 Post-Install Complete.",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBY623PO",15,0)
 Q
"RTN","IBY623PO",16,0)
 ;
"RTN","IBY623PO",17,0)
ADDPROXY ;Add APPLICATION PROXY user to file 200.  Supported by IA#4677.
"RTN","IBY623PO",18,0)
 N IEN200
"RTN","IBY623PO",19,0)
 D MES^XPDUTL("Adding entry 'IBTAS,APPLICATION PROXY' to the New Person file (#200)")
"RTN","IBY623PO",20,0)
 S IEN200=$$CREATE^XUSAP("IBTAS,APPLICATION PROXY","","IBTAS EBILLING RPCS")
"RTN","IBY623PO",21,0)
 I +IEN200=0 D MES^XPDUTL("........'IBTAS,APPLICATION PROXY' already exists.")
"RTN","IBY623PO",22,0)
 I +IEN200>0 D MES^XPDUTL("........'IBTAS,APPLICATION PROXY' added.")
"RTN","IBY623PO",23,0)
 I IEN200<0 D MES^XPDUTL("........'ERROR: IBTAS,APPLICATION PROXY' NOT added.")
"RTN","IBY623PO",24,0)
 Q
"RTN","IBY623PO",25,0)
 ;
"RTN","IBY623PO",26,0)
ADDRTYPS ;Add the Non-MCCF Rate Types that don't exist in the Non-MCCF Pay-To
"RTN","IBY623PO",27,0)
 ;Providers Rate Table (File #350.928) - vd (US141).
"RTN","IBY623PO",28,0)
 N FDA,IBRTYP,LOOP,NONMCCF,Y
"RTN","IBY623PO",29,0)
 S NONMCCF="INTERAGENCY^CHAMPVA REIMB. INS.^CHAMPVA^TRICARE REIMB. INS.^TRICARE^INELIGIBLE^SHARING AGREEMENT^INELIGIBLE REIMB. INS."
"RTN","IBY623PO",30,0)
 S NONMCCF=NONMCCF_"^DOD DISABILITY EVALUATION^DOD SPINAL CORD INJURY^DOD TRAUMATIC BRAIN INJURY^DOD BLIND REHABILITATION^TRICARE DENTAL^TRICARE PHARMACY"
"RTN","IBY623PO",31,0)
 D MES^XPDUTL("Adding missing Rate Types to the Non-MCCF PTP Rate Type File")
"RTN","IBY623PO",32,0)
 F LOOP=1:1 S IBRTYP=$P(NONMCCF,U,LOOP) Q:IBRTYP=""  D
"RTN","IBY623PO",33,0)
 . S Y=$O(^DGCR(399.3,"B",IBRTYP,0))
"RTN","IBY623PO",34,0)
 . I $D(^IBE(350.9,1,28,"B",+Y)) Q  ; Rate Type already exists in the Non-MCCF PTP Rate Type File - Don't Add.
"RTN","IBY623PO",35,0)
 . ; create entry for Rate Type
"RTN","IBY623PO",36,0)
 . K FDA
"RTN","IBY623PO",37,0)
 . S FDA("350.928","+1,1,",.01)=+Y
"RTN","IBY623PO",38,0)
 . D UPDATE^DIE("","FDA")
"RTN","IBY623PO",39,0)
 . Q
"RTN","IBY623PO",40,0)
 ;
"RTN","IBY623PO",41,0)
UPDERR ; Update existing error code message for 350.8
"RTN","IBY623PO",42,0)
 N IBCODE,IBMESN,IBIEN,DIE,DIC,DA,DR,X,Y
"RTN","IBY623PO",43,0)
 S IBCODE="IB366",IBMESN="Insured's Date of Birth is not a valid date."
"RTN","IBY623PO",44,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",45,0)
 S IBCODE="IB367",IBMESN="Insurance subscriber Date of Birth is invalid."
"RTN","IBY623PO",46,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",47,0)
 S IBCODE="IB368",IBMESN="Patient's Date of Birth is invalid."
"RTN","IBY623PO",48,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",49,0)
 S IBCODE="IB369",IBMESN="Patient's Date of Death is invalid."
"RTN","IBY623PO",50,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",51,0)
 S IBCODE="IB370",IBMESN="Bill Statement Covers From Date is invalid."
"RTN","IBY623PO",52,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",53,0)
 S IBCODE="IB371",IBMESN="Bill Statement Covers To Date is invalid."
"RTN","IBY623PO",54,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",55,0)
 S IBCODE="IB372",IBMESN="Unable to Work From date is invalid."
"RTN","IBY623PO",56,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",57,0)
 S IBCODE="IB373",IBMESN="Unable to Work To date is invalid."
"RTN","IBY623PO",58,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",59,0)
 S IBCODE="IB374",IBMESN="Date of Initial Treatment is invalid."
"RTN","IBY623PO",60,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",61,0)
 S IBCODE="IB375",IBMESN="Last X-Ray Date is invalid."
"RTN","IBY623PO",62,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",63,0)
 S IBCODE="IB376",IBMESN="Date of Acute Manifestation is invalid."
"RTN","IBY623PO",64,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",65,0)
 S IBCODE="IB377",IBMESN="Disability Start Date is invalid."
"RTN","IBY623PO",66,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",67,0)
 S IBCODE="IB378",IBMESN="Disability End Date is invalid."
"RTN","IBY623PO",68,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",69,0)
 S IBCODE="IB379",IBMESN="Assumed Care Date is invalid."
"RTN","IBY623PO",70,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",71,0)
 S IBCODE="IB380",IBMESN="Relinquished Care Date is invalid."
"RTN","IBY623PO",72,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",73,0)
 S IBCODE="IB381",IBMESN="Property Casualty Date of 1st Contact is invalid."
"RTN","IBY623PO",74,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",75,0)
 S IBCODE="IB382",IBMESN="Date Last Seen is invalid."
"RTN","IBY623PO",76,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE
"RTN","IBY623PO",77,0)
 Q
"RTN","IBY623PO",78,0)
 ;
"RTN","IBY623PO",79,0)
CREATE ;Create entry for IB error file in D350.8 if not there
"RTN","IBY623PO",80,0)
 S DIC="^IBE(350.8,",DIC(0)="",X=IBCODE D FILE^DICN K DIC,X
"RTN","IBY623PO",81,0)
 I Y=-1 D MES^XPDUTL(">> IB ERROR - Entry '"_IBCODE_"' was unable to be created <<") Q
"RTN","IBY623PO",82,0)
 S IBIEN=+Y
"RTN","IBY623PO",83,0)
 S DIE="^IBE(350.8,",DA=IBIEN,DR=".02////"_IBMESN_";.03////"_IBCODE_";.04////1;.05////1" D ^DIE K DIE,DIC,DA,DR
"RTN","IBY623PO",84,0)
 Q
"RTN","IBY623PO",85,0)
 ;
"RTN","IBY623PR")
0^^B3335042^n/a
"RTN","IBY623PR",1,0)
IBY623PR ;EDE/JWS - Pre-Installation for IB patch 623 ; 2/28/17 4:33pm
"RTN","IBY623PR",2,0)
 ;;2.0;INTEGRATED BILLING;**623**;21-MAR-94;Build 70
"RTN","IBY623PR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY623PR",4,0)
 ;
"RTN","IBY623PR",5,0)
 Q
"RTN","IBY623PR",6,0)
EN ; entry point
"RTN","IBY623PR",7,0)
 ;
"RTN","IBY623PR",8,0)
 ; delete all output formatter (O.F.) data elements included in build
"RTN","IBY623PR",9,0)
 D DELOF
"RTN","IBY623PR",10,0)
 Q
"RTN","IBY623PR",11,0)
 ;
"RTN","IBY623PR",12,0)
INCLUDE(FILE,Y) ; function to determine if O.F. entry should be included in the build
"RTN","IBY623PR",13,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY623PR",14,0)
 ; Y=ien to file
"RTN","IBY623PR",15,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY623PR",16,0)
 S OK=0
"RTN","IBY623PR",17,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY623PR",18,0)
 Q OK
"RTN","IBY623PR",19,0)
 ;
"RTN","IBY623PR",20,0)
 ;Delete edited entries to insure clean install of new entries
"RTN","IBY623PR",21,0)
 ;Delete obsolete entries.
"RTN","IBY623PR",22,0)
DELOF   ; Delete included OF entries
"RTN","IBY623PR",23,0)
 NEW FILE,DIK,LN,TAG,TAGLN,DATA,PCE,DA,Y
"RTN","IBY623PR",24,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," D
"RTN","IBY623PR",25,0)
 . F TAG="ENT"_FILE,"DEL"_FILE D
"RTN","IBY623PR",26,0)
 .. F LN=2:1 S TAGLN=TAG_"+"_LN,DATA=$P($T(@TAGLN),";;",2) Q:DATA=""  D
"RTN","IBY623PR",27,0)
 ... F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY623PR",28,0)
 Q
"RTN","IBY623PR",29,0)
 ;
"RTN","IBY623PR",30,0)
 ; Example for ENT5, ENT6, ENT7, DEL5, DEL6, and DEL7:
"RTN","IBY623PR",31,0)
 ;;^195^254^259^269^324^325^
"RTN","IBY623PR",32,0)
 ; Note:  Must have beginning and ending up-carat
"RTN","IBY623PR",33,0)
 ;
"RTN","IBY623PR",34,0)
 ;-----------------------------------------------------------------------
"RTN","IBY623PR",35,0)
 ; 364.5 entries modified:
"RTN","IBY623PR",36,0)
 ;
"RTN","IBY623PR",37,0)
 ;
"RTN","IBY623PR",38,0)
ENT5 ; OF entries in file 364.5 to be included
"RTN","IBY623PR",39,0)
 ;
"RTN","IBY623PR",40,0)
 ;;^^
"RTN","IBY623PR",41,0)
 ;
"RTN","IBY623PR",42,0)
 ;-----------------------------------------------------------------------
"RTN","IBY623PR",43,0)
 ; 364.6 entries modified:
"RTN","IBY623PR",44,0)
 ;
"RTN","IBY623PR",45,0)
 ; 1999 - seg 104.2, 2-Rendering Provider qualifier
"RTN","IBY623PR",46,0)
 ; 1224 - seq 98, 2-Attending Prov Sec ID Qualifier (1)
"RTN","IBY623PR",47,0)
 ; 2254 - seq 32, 2-Payer Responsibility Sequence
"RTN","IBY623PR",48,0)
 ; 1973 - seq 52, 5-Attachment Control Number
"RTN","IBY623PR",49,0)
 ;
"RTN","IBY623PR",50,0)
ENT6 ; O.F. entries in file 364.6 to be included
"RTN","IBY623PR",51,0)
 ;
"RTN","IBY623PR",52,0)
 ;;^1999^1224^2254^1973^
"RTN","IBY623PR",53,0)
 ;-----------------------------------------------------------------------
"RTN","IBY623PR",54,0)
 ; 364.7 entries modified:
"RTN","IBY623PR",55,0)
 ;
"RTN","IBY623PR",56,0)
 ;   68 - CL1.7 - Release of Information Code
"RTN","IBY623PR",57,0)
 ;  816 - MIA2.2 - Payer Responsibility Sequence # Code
"RTN","IBY623PR",58,0)
 ;
"RTN","IBY623PR",59,0)
ENT7 ; O.F. entries in file 364.7 to be included
"RTN","IBY623PR",60,0)
 ;
"RTN","IBY623PR",61,0)
 ;;^68^816^
"RTN","IBY623PR",62,0)
 ;
"RTN","IBY623PR",63,0)
 ;-----------------------------------------------------------------------
"RTN","IBY623PR",64,0)
 ; 364.5 entries deleted:
"RTN","IBY623PR",65,0)
 ;
"RTN","IBY623PR",66,0)
DEL5    ; remove O.F. entries in file 364.5 (not re-added)
"RTN","IBY623PR",67,0)
 ;
"RTN","IBY623PR",68,0)
 ;;
"RTN","IBY623PR",69,0)
 ;
"RTN","IBY623PR",70,0)
 ;-----------------------------------------------------------------------
"RTN","IBY623PR",71,0)
 ; 364.6 entries deleted:
"RTN","IBY623PR",72,0)
 ;
"RTN","IBY623PR",73,0)
 ;
"RTN","IBY623PR",74,0)
DEL6    ; remove O.F. entries in file 364.6 (not re-added)
"RTN","IBY623PR",75,0)
 ;
"RTN","IBY623PR",76,0)
 ;;
"RTN","IBY623PR",77,0)
 ;
"RTN","IBY623PR",78,0)
 ;-----------------------------------------------------------------------
"RTN","IBY623PR",79,0)
 ; 364.7 entries deleted:
"RTN","IBY623PR",80,0)
 ;
"RTN","IBY623PR",81,0)
 ;
"RTN","IBY623PR",82,0)
DEL7    ; remove O.F. entries in file 364.7 (not re-added)
"RTN","IBY623PR",83,0)
 ;
"RTN","IBY623PR",84,0)
 ;;
"RTN","IBY623PR",85,0)
 ;
"RTN","IBY623PR",86,0)
 ;-----------------------------------------------------------------------
"UP",36,36.017,-1)
36^17
"UP",36,36.017,0)
36.017
"VER")
8.0^22.2
"^DD",36,36.017,.03,0)
277EDI TYPE^S^P:PROFESSIONAL;I:INSTITUTIONAL;D:DENTAL;P2:PROFESSIONAL (Secondary);I2:INSTITUTIONAL (Secondary);^0;3^Q
"^DD",36,36.017,.03,3)
Enter the type of claim "P" for professional, "I" for institutional, or "D" for Dental. Enter 2nd char as a "2" if the data is for a Secondary ID otherwise the data is for a Primary ID.
"^DD",36,36.017,.03,21,0)
^^1^1^3190709^
"^DD",36,36.017,.03,21,1,0)
This determines the specific PAYER ID being reported.
"^DD",36,36.017,.03,"AUDIT")
n
"^DD",36,36.017,.03,"DT")
3190709
"^DD",350.9,350.9,8.21,0)
837 FHIR ENABLED?^S^0:NO;1:YES;^8;21^Q
"^DD",350.9,350.9,8.21,.1)
Allow 837 FHIR Trans processing?
"^DD",350.9,350.9,8.21,3)
Enter 'Yes' to indicate using TAS Core platform and FHIR for all 837 transactions.  Otherwise, enter 'No'.
"^DD",350.9,350.9,8.21,21,0)
^.001^4^4^3180614^^^^
"^DD",350.9,350.9,8.21,21,1,0)
This field indicates whether all EDI 837 Claim Transactions are to be 
"^DD",350.9,350.9,8.21,21,2,0)
submitted to FSC through the TAS Core platform using FHIR. A 'Yes' value 
"^DD",350.9,350.9,8.21,21,3,0)
will indicate using FHIR and 'No' will indicate still using MailMan 
"^DD",350.9,350.9,8.21,21,4,0)
format.
"^DD",350.9,350.9,8.21,"DT")
3180614
"^DD",364,364,.09,0)
837 FHIR TRANS REQUEST^S^0:NEVER REQUESTED;1:REQUESTED FOR SUBMISSION;2:REQUEST COMPLETED;^0;9^Q
"^DD",364,364,.09,1,0)
^.1^^0
"^DD",364,364,.09,3)
Enter 'Yes' to request submission of 837 transaction using FHIR.  Otherwise, enter 'No'.
"^DD",364,364,.09,21,0)
^^2^2^3180614^
"^DD",364,364,.09,21,1,0)
This field will be  used to determine when an 837 claim transaction is 
"^DD",364,364,.09,21,2,0)
ready for submission using the new FHIR Transaction format.
"^DD",364,364,.09,"DT")
3180614
"^DD",364,364,.1,0)
RESUBMISSION^S^0:No;1:Yes;^0;10^Q
"^DD",364,364,.1,3)
Enter 'Yes' if this claim is a re-submission, otherwise enter 'No'.
"^DD",364,364,.1,21,0)
^^1^1^3190909^
"^DD",364,364,.1,21,1,0)
This field indicates if this claim was a re-submitted claim.
"^DD",364,364,.1,"DT")
3190909
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3071126
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>40!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1^^0
"^DD",364.6,364.6,.1,3)
Answer must be 1-40 characters in length
"^DD",364.6,364.6,.1,21,0)
^^2^2^3071126^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
3080310
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,23,0)
IS DUPLICATE?^S^0:NO;1:YES;^S;20^Q
"^DD",399,399,23,3)
Enter 'Yes' if this claim is a valid duplicate claim.  Otherwise, enter 'No'.
"^DD",399,399,23,21,0)
^^3^3^3191008^
"^DD",399,399,23,21,1,0)
If this claim is an EDI resubmission of a claim, then this field 
"^DD",399,399,23,21,2,0)
will be set to 'Yes'.  If this field value is 'No' and FSC identifies this
"^DD",399,399,23,21,3,0)
claim as a duplicate (already transmitted), then it will be ignored.
"^DD",399,399,23,"DT")
3191008
"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",10997,6)
^599
**END**
**END**

