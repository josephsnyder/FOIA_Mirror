Released IB*2*407 SEQ #386
Extracted from mail message
**KIDS**:IB*2.0*407^

**INSTALL NAME**
IB*2.0*407
"BLD",7858,0)
IB*2.0*407^INTEGRATED BILLING^0^3090720^y
"BLD",7858,1,0)
^^4^4^3081204^
"BLD",7858,1,1,0)
This patch addresses the issue regarding site not receiving the Medicare 
"BLD",7858,1,2,0)
Remittance Advice (MRA) payments as noted on the Bill Status Report. Site
"BLD",7858,1,3,0)
runs the report on a daily to weekly basis to generate a summary of bill
"BLD",7858,1,4,0)
rate types and statuses.
"BLD",7858,4,0)
^9.64PA^^0
"BLD",7858,6)
^327
"BLD",7858,6.3)
29
"BLD",7858,"INIT")
START^IB20P407
"BLD",7858,"KRN",0)
^9.67PA^779.2^20
"BLD",7858,"KRN",.4,0)
.4
"BLD",7858,"KRN",.401,0)
.401
"BLD",7858,"KRN",.402,0)
.402
"BLD",7858,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",7858,"KRN",.403,0)
.403
"BLD",7858,"KRN",.5,0)
.5
"BLD",7858,"KRN",.84,0)
.84
"BLD",7858,"KRN",3.6,0)
3.6
"BLD",7858,"KRN",3.8,0)
3.8
"BLD",7858,"KRN",9.2,0)
9.2
"BLD",7858,"KRN",9.8,0)
9.8
"BLD",7858,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7858,"KRN",9.8,"NM",1,0)
IBCESRV^^0^B69744017
"BLD",7858,"KRN",9.8,"NM",2,0)
IBCEOB^^0^B58398383
"BLD",7858,"KRN",9.8,"NM",3,0)
IBCEST^^0^B76027306
"BLD",7858,"KRN",9.8,"NM","B","IBCEOB",2)

"BLD",7858,"KRN",9.8,"NM","B","IBCESRV",1)

"BLD",7858,"KRN",9.8,"NM","B","IBCEST",3)

"BLD",7858,"KRN",19,0)
19
"BLD",7858,"KRN",19.1,0)
19.1
"BLD",7858,"KRN",101,0)
101
"BLD",7858,"KRN",409.61,0)
409.61
"BLD",7858,"KRN",771,0)
771
"BLD",7858,"KRN",779.2,0)
779.2
"BLD",7858,"KRN",870,0)
870
"BLD",7858,"KRN",8989.51,0)
8989.51
"BLD",7858,"KRN",8989.52,0)
8989.52
"BLD",7858,"KRN",8994,0)
8994
"BLD",7858,"KRN","B",.4,.4)

"BLD",7858,"KRN","B",.401,.401)

"BLD",7858,"KRN","B",.402,.402)

"BLD",7858,"KRN","B",.403,.403)

"BLD",7858,"KRN","B",.5,.5)

"BLD",7858,"KRN","B",.84,.84)

"BLD",7858,"KRN","B",3.6,3.6)

"BLD",7858,"KRN","B",3.8,3.8)

"BLD",7858,"KRN","B",9.2,9.2)

"BLD",7858,"KRN","B",9.8,9.8)

"BLD",7858,"KRN","B",19,19)

"BLD",7858,"KRN","B",19.1,19.1)

"BLD",7858,"KRN","B",101,101)

"BLD",7858,"KRN","B",409.61,409.61)

"BLD",7858,"KRN","B",771,771)

"BLD",7858,"KRN","B",779.2,779.2)

"BLD",7858,"KRN","B",870,870)

"BLD",7858,"KRN","B",8989.51,8989.51)

"BLD",7858,"KRN","B",8989.52,8989.52)

"BLD",7858,"KRN","B",8994,8994)

"BLD",7858,"QUES",0)
^9.62^^
"BLD",7858,"REQB",0)
^9.611^3^2
"BLD",7858,"REQB",2,0)
IB*2.0*377^2
"BLD",7858,"REQB",3,0)
IB*2.0*397^2
"BLD",7858,"REQB","B","IB*2.0*377",2)

"BLD",7858,"REQB","B","IB*2.0*397",3)

"INIT")
START^IB20P407
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
407^3090720
"PKG",200,22,1,"PAH",1,1,0)
^^4^4^3090720
"PKG",200,22,1,"PAH",1,1,1,0)
This patch addresses the issue regarding site not receiving the Medicare 
"PKG",200,22,1,"PAH",1,1,2,0)
Remittance Advice (MRA) payments as noted on the Bill Status Report. Site
"PKG",200,22,1,"PAH",1,1,3,0)
runs the report on a daily to weekly basis to generate a summary of bill
"PKG",200,22,1,"PAH",1,1,4,0)
rate types and statuses.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","IB20P407")
0^^B39074068^n/a
"RTN","IB20P407",1,0)
IB20P407 ;ALB/CXW - IB*2.0*407 POST INIT ;10-SEP-08
"RTN","IB20P407",2,0)
 ;;2.0;INTEGRATED BILLING;**407**;21-MAR-94;Build 29
"RTN","IB20P407",3,0)
 ;;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB20P407",4,0)
 ;
"RTN","IB20P407",5,0)
 ;This routine is to follow the logic design:
"RTN","IB20P407",6,0)
 ;;Queue a task to run in the background.
"RTN","IB20P407",7,0)
 ;;Filing message:
"RTN","IB20P407",8,0)
 ; - Loop through the entries in file #364.2 by checking the Date
"RTN","IB20P407",9,0)
 ;   Recorded field (#.03) within one-year time frame.
"RTN","IB20P407",10,0)
 ; - Process the associated message based on the Message Type field
"RTN","IB20P407",11,0)
 ;   (#.02) pointing to file #364.3 and file them properly where they
"RTN","IB20P407",12,0)
 ;   need to be.
"RTN","IB20P407",13,0)
 ;;Deleting message:
"RTN","IB20P407",14,0)
 ; - Loop through all types of entries older than one year in file
"RTN","IB20P407",15,0)
 ;   #364.2 by checking the Date Recorded field and the Message Type.
"RTN","IB20P407",16,0)
 ; - Delete the message in file #364.2 when the Current Status field
"RTN","IB20P407",17,0)
 ;   (#8) pointing to file (#430.3) is 108 for Collected/Closed or 210
"RTN","IB20P407",18,0)
 ;   for Cancel Bill or 111 for Cancellation for the associated bill
"RTN","IB20P407",19,0)
 ;   in the AR file #430.
"RTN","IB20P407",20,0)
 ;;Send two bulletin messages to list the filing messages with the
"RTN","IB20P407",21,0)
 ;   bills and the deleting messages with the bills when the background
"RTN","IB20P407",22,0)
 ;   job has been completed.
"RTN","IB20P407",23,0)
 ;
"RTN","IB20P407",24,0)
 ;;Output:
"RTN","IB20P407",25,0)
 ; - ^XTMP(IB407,0)=purge date_U_today's date_U_patch #_U_total "F" msg_
"RTN","IB20P407",26,0)
 ;                  U_total "D" msg_U_date prior to a year_U_oldest date
"RTN","IB20P407",27,0)
 ;                  _U_task number
"RTN","IB20P407",28,0)
 ; - ^XTMP(IB407,"F",IEN)=message id_U_type_U_recorded dt_U_message dt_
"RTN","IB20P407",29,0)
 ;                        U_batch #_U_bill #_U_status
"RTN","IB20P407",30,0)
 ; - ^XTMP(IB407,"D",IEN)=messaage id_U_type_U_recorded dt_U_message dt_
"RTN","IB20P407",31,0)
 ;                        U_batch #_U_bill #_U_status
"RTN","IB20P407",32,0)
 ;Not delete XTMP file until 30 days from now
"RTN","IB20P407",33,0)
 ;
"RTN","IB20P407",34,0)
START ;
"RTN","IB20P407",35,0)
 D BMES^XPDUTL("Tasking the cleanup of the return messages for file 364.2 in a background job.")
"RTN","IB20P407",36,0)
 D BMES^XPDUTL("Two Mailman messages will be sent to list the filing messages and the deleting")
"RTN","IB20P407",37,0)
 D BMES^XPDUTL("messages when the task has been completed.")
"RTN","IB20P407",38,0)
 N ZTSK,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE
"RTN","IB20P407",39,0)
 S ZTRTN="JOB^IB20P407",ZTDESC="IB*2.0*407 post-init process"
"RTN","IB20P407",40,0)
 S ZTSAVE("*")="",ZTDTH=$H,ZTIO="" D ^%ZTLOAD
"RTN","IB20P407",41,0)
 Q
"RTN","IB20P407",42,0)
JOB ;
"RTN","IB20P407",43,0)
 N %H,U,X,X1,X2,IB0,IBCT,IBBDA,IBRTN,IBMDT,IBTDA,IBEOB,IBTYP,IB407,IBTDT,IBBIL
"RTN","IB20P407",44,0)
 S U="^" S IB407="IB20P407"
"RTN","IB20P407",45,0)
 K ^XTMP(IB407)
"RTN","IB20P407",46,0)
 S DT=$$DT^XLFDT,X1=DT,X2=30 D C^%DTC
"RTN","IB20P407",47,0)
 S ^XTMP(IB407,0)=X_U_DT_U_"IB*2.0*407 POST-INIT"
"RTN","IB20P407",48,0)
 ;
"RTN","IB20P407",49,0)
FILE S IBCT=0,IBEOB=+$O(^IBE(364.3,"B","835EOB",0))
"RTN","IB20P407",50,0)
 S X=DT D H^%DTC S %H=%H-365 D YMD^%DTC
"RTN","IB20P407",51,0)
 S $P(^XTMP(IB407,0),U,6)=X,IBTDT=X
"RTN","IB20P407",52,0)
 S IBMDT=IBTDT-1 ;prior to one year
"RTN","IB20P407",53,0)
 S $P(^XTMP(IB407,0),U,7)=$O(^IBA(364.2,"ARD","")) ;oldest date
"RTN","IB20P407",54,0)
 F  S IBMDT=$O(^IBA(364.2,"ARD",IBMDT)) Q:IBMDT=""  S IBTDA=0 F  S IBTDA=$O(^IBA(364.2,"ARD",IBMDT,IBTDA)) Q:'IBTDA  D
"RTN","IB20P407",55,0)
 . ;
"RTN","IB20P407",56,0)
 . S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IB20P407",57,0)
 . S IBBIL=$$BILLNO^IBCEM1($P(IB0,U,5))
"RTN","IB20P407",58,0)
 . Q:$$CK(IBEOB,IBTDA)
"RTN","IB20P407",59,0)
 . S X=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,6) S:X="EOB" X="MRA"
"RTN","IB20P407",60,0)
 . S IBBDA=$P(IB0,U,4)  ;batch #
"RTN","IB20P407",61,0)
 . S IBRTN=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U)
"RTN","IB20P407",62,0)
 . S IBTYP=$S(IBRTN["837":$E(IBRTN,$L(IBRTN)),1:2)
"RTN","IB20P407",63,0)
 . ;
"RTN","IB20P407",64,0)
 . ; IBRTN=routine to execute, IBBDA=batch #
"RTN","IB20P407",65,0)
 . ; IBTDA=internal entry of msg, IBTYP=last digit in the msg type
"RTN","IB20P407",66,0)
 . I IBRTN["REPORT" D MAILIT^IBCESRV2
"RTN","IB20P407",67,0)
 . I IBRTN["837REC" D CON837^IBCESRV2
"RTN","IB20P407",68,0)
 . I IBRTN["837REJ" D REJ837^IBCESRV2
"RTN","IB20P407",69,0)
 . I IBRTN["835EOB" D EOB835^IBCESRV3
"RTN","IB20P407",70,0)
 . ;
"RTN","IB20P407",71,0)
 . N DA,DR,DIE
"RTN","IB20P407",72,0)
 . I $G(ZTSK),$G(^IBA(364.2,IBTDA,0)) S DIE="^IBA(364.2,",DR=".11////"_ZTSK_";.06////U",DA=IBTDA D ^DIE
"RTN","IB20P407",73,0)
 . I '$D(^IBA(364.2,IBTDA)) D
"RTN","IB20P407",74,0)
 .. S ^XTMP(IB407,"F",IBTDA)=$P(IB0,U)_U_$S($P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,6)="EOB":"MRA",1:$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,6))_U_$$FMTE^XLFDT(IBMDT,2)
"RTN","IB20P407",75,0)
 .. S $P(^XTMP(IB407,"F",IBTDA),U,4)=$$FMTE^XLFDT($P(IB0,U,10),2)_U_$P($G(^IBA(364.1,+$P(IB0,U,4),0)),U)_U_IBBIL_U_$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6))
"RTN","IB20P407",76,0)
 .. S IBCT=IBCT+1
"RTN","IB20P407",77,0)
 S $P(^XTMP(IB407,0),U,4)=IBCT
"RTN","IB20P407",78,0)
 D SNDMAIL("F")
"RTN","IB20P407",79,0)
DEL ;
"RTN","IB20P407",80,0)
 N SITE,ARIEN,ARST
"RTN","IB20P407",81,0)
 S SITE=$P($$SITE^VASITE,U,3)
"RTN","IB20P407",82,0)
 S IBCT=0,IBMDT=""
"RTN","IB20P407",83,0)
 F  S IBMDT=$O(^IBA(364.2,"ARD",IBMDT)) Q:((IBMDT\1)>(IBTDT-1))!(IBMDT="")  S IBTDA=0 F  S IBTDA=$O(^IBA(364.2,"ARD",IBMDT,IBTDA)) Q:'IBTDA  D
"RTN","IB20P407",84,0)
 . S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IB20P407",85,0)
 . S IBBIL=$$BILLNO^IBCEM1($P(IB0,U,5))
"RTN","IB20P407",86,0)
 . Q:$$CK(IBEOB,IBTDA)
"RTN","IB20P407",87,0)
 . S ARIEN=$O(^PRCA(430,"B",SITE_"-"_IBBIL,0))
"RTN","IB20P407",88,0)
 . Q:ARIEN=""
"RTN","IB20P407",89,0)
 . S ARST=$P(^PRCA(430.3,+$P($G(^PRCA(430,+ARIEN,0)),U,8),0),U,3)
"RTN","IB20P407",90,0)
 . Q:(ARST'=108)&(ARST'=210)&(ARST'=111)
"RTN","IB20P407",91,0)
 . D DELMSG^IBCESRV2(IBTDA)
"RTN","IB20P407",92,0)
 . S ^XTMP(IB407,"D",IBTDA)=$P(IB0,U)_U_$S($P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,6)="EOB":"MRA",1:$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,6))_U_$$FMTE^XLFDT(IBMDT,2)
"RTN","IB20P407",93,0)
 . S $P(^XTMP(IB407,"D",IBTDA),U,4)=$$FMTE^XLFDT($P(IB0,U,10),2)_U_$P($G(^IBA(364.1,+$P(IB0,U,4),0)),U)_U_IBBIL_U_$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6))
"RTN","IB20P407",94,0)
 . S IBCT=IBCT+1
"RTN","IB20P407",95,0)
 S $P(^XTMP(IB407,0),U,5)=IBCT
"RTN","IB20P407",96,0)
 S:$G(ZTSK) $P(^XTMP(IB407,0),U,8)=ZTSK
"RTN","IB20P407",97,0)
 D SNDMAIL("D")
"RTN","IB20P407",98,0)
 Q
"RTN","IB20P407",99,0)
CK(IBEOB,IBTDA) ;
"RTN","IB20P407",100,0)
 N IB1,IBSTOP,IBMSGT
"RTN","IB20P407",101,0)
 S IB1=$G(^IBA(364.2,IBTDA,0))
"RTN","IB20P407",102,0)
 S IBSTOP=0,IBMSGT=$P(IB1,U,2)
"RTN","IB20P407",103,0)
 I IBMSGT,IBEOB,IBMSGT=IBEOB D
"RTN","IB20P407",104,0)
 . N Z,Z0 ; Only allow MRA EOB's to be processed
"RTN","IB20P407",105,0)
 . S Z=0 F  S Z=$O(^IBA(364.2,IBTDA,2,Z)) Q:'Z!(IBSTOP)  S Z0=$G(^(Z,0)) I $E(Z0,1,12)="##RAW DATA: ",$E(Z0,13,18)="835EOB",$P(Z0,U,5)'="Y" S IBSTOP=1
"RTN","IB20P407",106,0)
 I $P(IB1,U,6)=""!("UP"'[$P(IB1,U,6)) S IBSTOP=1 ;message status
"RTN","IB20P407",107,0)
 Q IBSTOP
"RTN","IB20P407",108,0)
 ;
"RTN","IB20P407",109,0)
SNDMAIL(FD) ;                              
"RTN","IB20P407",110,0)
 N DIFROM,IBTXT,XMSUB,XMDUZ,XMTEXT,XMY,IBTDT
"RTN","IB20P407",111,0)
 S XMSUB="IB*2.0*407 Post-Init Completed "_$S(FD="F":"(1)",1:"(2)")
"RTN","IB20P407",112,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IB20P407",113,0)
 S XMTEXT="IBTXT("
"RTN","IB20P407",114,0)
 S IB0=$G(^XTMP(IB407,0))
"RTN","IB20P407",115,0)
 S IBMDT=$S('$P(IB0,U,7):"",FD="F":$P(IB0,U,6),1:$P(IB0,U,7))
"RTN","IB20P407",116,0)
 S IBTDT=$S(FD="F":DT,1:$P(IB0,U,6)-1)
"RTN","IB20P407",117,0)
 S IBTXT(1)=$S(FD="F":"Filing",1:"Deleting")_" Return Messages recorded "
"RTN","IB20P407",118,0)
 I IBMDT S IBTXT(1)=IBTXT(1)_"from "_$E(IBMDT,4,7)_(1700+$E(IBMDT,1,3))_" to "_$E(IBTDT,4,7)_(1700+$E(IBTDT,1,3))
"RTN","IB20P407",119,0)
 I 'IBMDT S IBTXT(1)=IBTXT(1)_"- No Begining Date Found"
"RTN","IB20P407",120,0)
 S IBTXT(2)=$S(FD="F":"",1:"** The associated bill has been Collected/Closed or Cancelled in AR **")
"RTN","IB20P407",121,0)
 S IBTXT(3)=""
"RTN","IB20P407",122,0)
 S IBTXT(4)="Message #  Type    Date Recorded   Message Date    Batch #   Bill #    Status"
"RTN","IB20P407",123,0)
 S IBTXT(5)="========== ======  ==============  ==============  ========  ========  ========"
"RTN","IB20P407",124,0)
 S IBTDA=0,IBCT=6
"RTN","IB20P407",125,0)
 F  S IBTDA=$O(^XTMP(IB407,FD,IBTDA)) Q:'IBTDA  D
"RTN","IB20P407",126,0)
 . S IBMSGT=$G(^XTMP(IB407,FD,IBTDA))
"RTN","IB20P407",127,0)
 . S IBTXT(IBCT)=$P(IBMSGT,U)_$J("",11-$L($P(IBMSGT,U)))_$P(IBMSGT,U,2)_$J("",8-$L($P(IBMSGT,U,2)))_$P(IBMSGT,U,3)_$J("",16-$L($P(IBMSGT,U,3)))
"RTN","IB20P407",128,0)
 . S IBTXT(IBCT)=IBTXT(IBCT)_$P(IBMSGT,U,4)_$J("",16-$L($P(IBMSGT,U,4)))_$P(IBMSGT,U,5)_$J("",10-$L($P(IBMSGT,U,5)))_$P(IBMSGT,U,6)_$J("",10-$L($P(IBMSGT,U,6)))_$P(IBMSGT,U,7)
"RTN","IB20P407",129,0)
 . S IBCT=IBCT+1
"RTN","IB20P407",130,0)
 S IBTXT(IBCT)="Total EDI Messages:"_$S(FD="F":$P(^XTMP(IB407,0),U,4),1:$P(^XTMP(IB407,0),U,5))
"RTN","IB20P407",131,0)
 S XMY(DUZ)=""
"RTN","IB20P407",132,0)
 D ^XMD
"RTN","IB20P407",133,0)
 Q
"RTN","IBCEOB")
0^2^B58398383^B58527801
"RTN","IBCEOB",1,0)
IBCEOB ;ALB/TMP - 835 EDI EOB MESSAGE PROCESSING ;20-JAN-99
"RTN","IBCEOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,265,155,377,407**;21-MAR-94;Build 29
"RTN","IBCEOB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB",4,0)
 ;
"RTN","IBCEOB",5,0)
 Q
"RTN","IBCEOB",6,0)
 ;
"RTN","IBCEOB",7,0)
UPDEOB(IBTDA) ; Update EXPLANATION OF BENEFITS file (#361.1) from return msg
"RTN","IBCEOB",8,0)
 ; IBTDA = ien of return message
"RTN","IBCEOB",9,0)
 ; Function returns ien of EOB file entry or "" if errors found
"RTN","IBCEOB",10,0)
 ;          the data.  Any errors found are
"RTN","IBCEOB",11,0)
 ;          stored in array ^TMP("IBCERR-EOB",$J,n) in text format
"RTN","IBCEOB",12,0)
 ;          n = seq # and are stored with the EOB in a wp field
"RTN","IBCEOB",13,0)
 ;
"RTN","IBCEOB",14,0)
 N IB0,IB100,IBBTCH,IBE,IBMNUM,IBT,DLAYGO,DIC,DD,DO,X,Y,Z,Z0,Z1,IBEOB,IBBAD,IBOK,IB,IBA1,IBIFN,IBFILE
"RTN","IBCEOB",15,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",16,0)
 ;
"RTN","IBCEOB",17,0)
 S (IBBAD,IBEOB)=""
"RTN","IBCEOB",18,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEOB",19,0)
 S IBMNUM=+$P(IB0,U)
"RTN","IBCEOB",20,0)
 S X=+$G(^IBA(364,+$P(IB0,U,5),0))
"RTN","IBCEOB",21,0)
 ;
"RTN","IBCEOB",22,0)
 I IBMNUM=""!(X="") G UPDQ
"RTN","IBCEOB",23,0)
 ;
"RTN","IBCEOB",24,0)
 ; Duplicate EOB Check
"RTN","IBCEOB",25,0)
 S IBFILE="^IBA(364.2,"_IBTDA_",2)"
"RTN","IBCEOB",26,0)
 I $$DUP(IBFILE,X) D DELMSG^IBCESRV2(IBTDA) G UPDQ
"RTN","IBCEOB",27,0)
 ;
"RTN","IBCEOB",28,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock msg file 364.2
"RTN","IBCEOB",29,0)
 S IBEOB=+$$ADD3611(IBMNUM,$P(IB0,U,5),$P(IB0,U,4),X,0,IBFILE)
"RTN","IBCEOB",30,0)
 L -^IBA(364.2,IBTDA,0)
"RTN","IBCEOB",31,0)
 ;
"RTN","IBCEOB",32,0)
 I IBEOB<0 S IBEOB="" G UPDQ
"RTN","IBCEOB",33,0)
 D UPD3611(IBEOB,IBTDA,0)
"RTN","IBCEOB",34,0)
 ;
"RTN","IBCEOB",35,0)
UPDQ I IBEOB,$O(^TMP("IBCERR-EOB",$J,0)) D ERRUPD(IBEOB,"IBCERR-EOB")
"RTN","IBCEOB",36,0)
 K ^TMP($J),^TMP("IBCERR-EOB",$J)
"RTN","IBCEOB",37,0)
 D CLEAN^DILF
"RTN","IBCEOB",38,0)
 Q +IBEOB
"RTN","IBCEOB",39,0)
 ;
"RTN","IBCEOB",40,0)
 ;
"RTN","IBCEOB",41,0)
 ; NOTE: **** For all variables IB0,IBEGBL,IBEOB below:
"RTN","IBCEOB",42,0)
 ; IB0 = raw data received for this record type on the 835 flat file
"RTN","IBCEOB",43,0)
 ; IBEGBL = subscript to use in error global
"RTN","IBCEOB",44,0)
 ; IBEOB = ien in file 361.1 for this EOB
"RTN","IBCEOB",45,0)
 ;
"RTN","IBCEOB",46,0)
835(IB0,IBEGBL,IBEOB) ; Store header
"RTN","IBCEOB",47,0)
 ;
"RTN","IBCEOB",48,0)
 Q $$HDR^IBCEOB1(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",49,0)
 ;
"RTN","IBCEOB",50,0)
5(IB0,IBEGBL,IBEOB) ; Record '05'
"RTN","IBCEOB",51,0)
 ;
"RTN","IBCEOB",52,0)
 N IBOK,DA,DR,DIE,X,Y
"RTN","IBCEOB",53,0)
 K IBZDATA
"RTN","IBCEOB",54,0)
 S DR=";",IBOK=1
"RTN","IBCEOB",55,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",56,0)
 ;
"RTN","IBCEOB",57,0)
 I $P(IB0,U,9) S DR=DR_"1.1///"_$$DATE^IBCEU($P(IB0,U,9))_";"         ; statement start date
"RTN","IBCEOB",58,0)
 I $P(IB0,U,10) S DR=DR_"1.11///"_$$DATE^IBCEU($P(IB0,U,10))_";"      ; statement end date
"RTN","IBCEOB",59,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB",60,0)
 I DR'="" D ^DIE S IBOK=$D(Y)=0
"RTN","IBCEOB",61,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 5 data"
"RTN","IBCEOB",62,0)
 Q IBOK
"RTN","IBCEOB",63,0)
 ;
"RTN","IBCEOB",64,0)
6(IB0,IBEGBL,IBEOB) ; Record '06' - corrected patient name and/or ID#
"RTN","IBCEOB",65,0)
 ; This data is not going to be filed into file 361.1 so the value of this function will always be a 1 so as to
"RTN","IBCEOB",66,0)
 ; not interrupt the filing process of the EOB/MRA data into file 361.1.
"RTN","IBCEOB",67,0)
 ;
"RTN","IBCEOB",68,0)
 ; perform overall integrity checks on the incoming 06 record.  If anything is out of place, don't update anything
"RTN","IBCEOB",69,0)
 ; and report the problem and get out.
"RTN","IBCEOB",70,0)
 NEW CLM,SITE,IBM,IBIFN,IBIFN1,DFN,SEQ,DIE,DA,DR
"RTN","IBCEOB",71,0)
 S DIE=361.1,DA=IBEOB,DR="61.01////^S X=IB0" D ^DIE    ; archive the raw 06 record data
"RTN","IBCEOB",72,0)
 S CLM=$P(IB0,U,2),SITE=+CLM,CLM=$P(CLM,"-",2) I CLM="" D MSG(IBEOB,"The claim# in piece 2 is invalid.") G Q6
"RTN","IBCEOB",73,0)
 S IBM=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB",74,0)
 I $P(IBM,U,4)'=1 D MSG(IBEOB,"This is a non-Medicare EOB.") G Q6
"RTN","IBCEOB",75,0)
 S IBIFN=+$P(IBM,U,1)                    ; claim# from MRA
"RTN","IBCEOB",76,0)
 S IBIFN1=+$O(^DGCR(399,"B",CLM,""))     ; claim# from 06 record
"RTN","IBCEOB",77,0)
 I IBIFN'=IBIFN1 D MSG(IBEOB,"Claim mismatch error."_IBIFN_","_IBIFN1_","_CLM_".") G Q6
"RTN","IBCEOB",78,0)
 I $P($$SITE^VASITE,U,3)'=SITE D MSG(IBEOB,"Invalid station# mismatch."_$P($$SITE^VASITE,U,3)_","_SITE_".") G Q6
"RTN","IBCEOB",79,0)
 S SEQ=$$COBN^IBCEF(IBIFN)               ; current payer sequence# on claim
"RTN","IBCEOB",80,0)
 I '$$WNRBILL^IBEFUNC(IBIFN,SEQ) D MSG(IBEOB,"The current payer on this claim is not MEDICARE (WNR).") G Q6
"RTN","IBCEOB",81,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)   ; patient ien
"RTN","IBCEOB",82,0)
 I 'DFN D MSG(IBEOB,"The patient DFN cannot be determined.") G Q6
"RTN","IBCEOB",83,0)
 ;
"RTN","IBCEOB",84,0)
 D UPD^IBCEOB01(IB0,IBEOB,IBIFN,DFN,SEQ)     ; update patient insurance policy data
"RTN","IBCEOB",85,0)
 ;
"RTN","IBCEOB",86,0)
Q6 ; exit point for $$6 function
"RTN","IBCEOB",87,0)
 Q 1
"RTN","IBCEOB",88,0)
 ;
"RTN","IBCEOB",89,0)
10(IB0,IBEGBL,IBEOB) ; Record '10'
"RTN","IBCEOB",90,0)
 ;
"RTN","IBCEOB",91,0)
 N DA,DR,DIE,X,Y,VAL,IBOK
"RTN","IBCEOB",92,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB",93,0)
 S DR=".13////"_$S($P(IB0,U,3)="Y":1,$P(IB0,U,4)="Y":2,$P(IB0,U,5)="Y":3,$P(IB0,U,6)="Y":4,1:5)_";.21////"_$P(IB0,U,7)
"RTN","IBCEOB",94,0)
 S DR=DR_";2.04////"_$$DOLLAR($P(IB0,U,10))_";1.01////"_$$DOLLAR($P(IB0,U,11))_$S($P(IB0,U,12)'="":";.14///"_$P(IB0,U,12),1:"")
"RTN","IBCEOB",95,0)
 S DR=DR_$S($P(IB0,U,13)'="":";.1///"_$P(IB0,U,13),1:"")_";.11///"_($P(IB0,U,14)/10000)_";.12///"_($P(IB0,U,15)/100)
"RTN","IBCEOB",96,0)
 I $P(IB0,U,8)'="" S DR=DR_";.08////"_$P(IB0,U,8)_$S($P(IB0,U,9)'="":";.09///"_$P(IB0,U,9),1:"")
"RTN","IBCEOB",97,0)
 ;
"RTN","IBCEOB",98,0)
 D ^DIE
"RTN","IBCEOB",99,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB",100,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 10 data" G Q10
"RTN","IBCEOB",101,0)
 ;
"RTN","IBCEOB",102,0)
 ; File ICN in Bill
"RTN","IBCEOB",103,0)
 D ICN^IBCEOB00(IBEOB,$P(IB0,U,12),$P($G(^IBM(361.1,IBEOB,0)),U,15),.IBOK)
"RTN","IBCEOB",104,0)
 ;
"RTN","IBCEOB",105,0)
Q10 Q IBOK
"RTN","IBCEOB",106,0)
 ;
"RTN","IBCEOB",107,0)
15(IB0,IBEGBL,IBEOB) ; Record '15'
"RTN","IBCEOB",108,0)
 ; Moved due to space constraints
"RTN","IBCEOB",109,0)
Q15 Q $$15^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",110,0)
 ;
"RTN","IBCEOB",111,0)
17(IB0,IBEGBL,IBEOB) ; Record '17'
"RTN","IBCEOB",112,0)
 N A,IBOK
"RTN","IBCEOB",113,0)
 S A="3;25.01;0;1;0^4;25.02;0;1;0^5;25.03;0;1;0^6;25.04;0;1;0^7;25.05;0;1;0^8;25.06;0;1;0^9;25.07;0;1;0"
"RTN","IBCEOB",114,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB",115,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad record 17 data"
"RTN","IBCEOB",116,0)
Q17 Q IBOK
"RTN","IBCEOB",117,0)
 ;
"RTN","IBCEOB",118,0)
20(IB0,IBEGBL,IBEOB) ; Record '20'
"RTN","IBCEOB",119,0)
 ; Moved due to space constraints
"RTN","IBCEOB",120,0)
Q20 Q $$20^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",121,0)
 ;
"RTN","IBCEOB",122,0)
30(IB0,IBEGBL,IBEOB) ; Record '30'
"RTN","IBCEOB",123,0)
 ;
"RTN","IBCEOB",124,0)
 N IBOK
"RTN","IBCEOB",125,0)
 D 30^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",126,0)
Q30 Q $G(IBOK)
"RTN","IBCEOB",127,0)
 ;
"RTN","IBCEOB",128,0)
35(IB0,IBEGBL,IBEOB) ; Record '35'
"RTN","IBCEOB",129,0)
 ; Moved due to space constraints
"RTN","IBCEOB",130,0)
Q35 Q $$35^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",131,0)
 ;
"RTN","IBCEOB",132,0)
37(IB0,IBEGBL,IBEOB) ; Record '37'
"RTN","IBCEOB",133,0)
 ; Moved due to space constraints
"RTN","IBCEOB",134,0)
Q37 Q $$37^IBCEOB00(IB0,IBEGBL,IBEOB)
"RTN","IBCEOB",135,0)
 ;
"RTN","IBCEOB",136,0)
40(IB0,IBEGBL,IBEOB) ; Record '40'
"RTN","IBCEOB",137,0)
 ;
"RTN","IBCEOB",138,0)
 N IBOK
"RTN","IBCEOB",139,0)
 D 40^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",140,0)
Q40 Q $G(IBOK)
"RTN","IBCEOB",141,0)
 ;
"RTN","IBCEOB",142,0)
41(IB0,IBEGBL,IBEOB) ; Record '41'
"RTN","IBCEOB",143,0)
 ;
"RTN","IBCEOB",144,0)
 N IBOK
"RTN","IBCEOB",145,0)
 D 41^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",146,0)
Q41 Q $G(IBOK)
"RTN","IBCEOB",147,0)
 ;
"RTN","IBCEOB",148,0)
42(IB0,IBEGBL,IBEOB) ; Record '42'
"RTN","IBCEOB",149,0)
 ;
"RTN","IBCEOB",150,0)
 N IBOK
"RTN","IBCEOB",151,0)
 D 42^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",152,0)
Q42 Q $G(IBOK)
"RTN","IBCEOB",153,0)
 ;
"RTN","IBCEOB",154,0)
45(IB0,IBEGBL,IBEOB) ; Record '45'
"RTN","IBCEOB",155,0)
 ;
"RTN","IBCEOB",156,0)
 N IBOK
"RTN","IBCEOB",157,0)
 D 45^IBCEOB0(IB0,IBEOB,.IBOK)
"RTN","IBCEOB",158,0)
 Q $G(IBOK)
"RTN","IBCEOB",159,0)
 ;
"RTN","IBCEOB",160,0)
MSG(IBEOB,MSG) ; procedure to file message into field 6.03
"RTN","IBCEOB",161,0)
 ; Results of processing of the "06" record type
"RTN","IBCEOB",162,0)
 N DIE,DA,DR,Z
"RTN","IBCEOB",163,0)
 S DIE=361.1,DA=+$G(IBEOB)
"RTN","IBCEOB",164,0)
 I $G(MSG)="" G MSGX
"RTN","IBCEOB",165,0)
 S Z=$P($G(^IBM(361.1,DA,6)),U,3)    ; already existing message
"RTN","IBCEOB",166,0)
 I Z'="" S MSG=Z_"  "_MSG            ; append new message to existing message
"RTN","IBCEOB",167,0)
 S MSG=$E(MSG,1,190)
"RTN","IBCEOB",168,0)
 S DR="6.03///^S X=MSG"
"RTN","IBCEOB",169,0)
 D ^DIE
"RTN","IBCEOB",170,0)
MSGX ;
"RTN","IBCEOB",171,0)
 Q
"RTN","IBCEOB",172,0)
 ;
"RTN","IBCEOB",173,0)
DOLLAR(X) ; Convert value in X to dollar format XXX.XX
"RTN","IBCEOB",174,0)
 Q $S(+X:$J(X/100,$L(+X),2),1:0)
"RTN","IBCEOB",175,0)
 ;
"RTN","IBCEOB",176,0)
ADD3611(IBMNUM,IBTBILL,IBBATCH,X,IBAR,IBFILE) ; Add stub record to file 361.1
"RTN","IBCEOB",177,0)
 ; X = the ien of the referenced bill in file 399
"RTN","IBCEOB",178,0)
 ; IBTBILL = ien of transmitted bill (optional)
"RTN","IBCEOB",179,0)
 ; IBBATCH = ien of batch # the transmitted bill was in (optional)
"RTN","IBCEOB",180,0)
 ; IBMNUM = the message # from which this record originally came
"RTN","IBCEOB",181,0)
 ; IBAR = 1 only if called from AR
"RTN","IBCEOB",182,0)
 ; IBFILE = array reference of raw EOB data
"RTN","IBCEOB",183,0)
 ;
"RTN","IBCEOB",184,0)
 N DIC,DA,DR,DO,DD,DLAYGO,Y,REVSTAT,BS,MMI
"RTN","IBCEOB",185,0)
 F  L +^IBM(361.1,0):10 Q:$T
"RTN","IBCEOB",186,0)
 ;
"RTN","IBCEOB",187,0)
 ; default proper review status
"RTN","IBCEOB",188,0)
 S BS=$P($G(^DGCR(399,X,0)),U,13)   ; bill status
"RTN","IBCEOB",189,0)
 S REVSTAT=$S(BS=7:9,BS=3:3,BS=4:3,1:0)
"RTN","IBCEOB",190,0)
 S MMI=$$NET^XMRENT(IBMNUM)         ; MailMan header info
"RTN","IBCEOB",191,0)
 S DIC(0)="L",DIC="^IBM(361.1,",DLAYGO=361.1
"RTN","IBCEOB",192,0)
 S DIC("DR")=".16////"_REVSTAT_";.17////0"_";100.02////"_IBMNUM_$S('$G(IBAR):";.19////"_+IBTBILL_";100.01////"_IBBATCH,1:"")
"RTN","IBCEOB",193,0)
 S DIC("DR")=DIC("DR")_";100.05////"_$$CHKSUM^IBCEMU1(IBFILE)_";62.01////^S X=MMI"
"RTN","IBCEOB",194,0)
 D FILE^DICN
"RTN","IBCEOB",195,0)
 L -^IBM(361.1,0)
"RTN","IBCEOB",196,0)
 Q +Y
"RTN","IBCEOB",197,0)
 ;
"RTN","IBCEOB",198,0)
UPD3611(IBEOB,IBTDA,IBAR) ; From flat file 835 format, add EOB record
"RTN","IBCEOB",199,0)
 ; IBEOB = the ien of the entry in file 361.1 being updated
"RTN","IBCEOB",200,0)
 ; IBTDA = the ien in the source file
"RTN","IBCEOB",201,0)
 ; IBAR = 1 if being called from AR
"RTN","IBCEOB",202,0)
 N IBA1,IBFILE,IBEGBL,Z,IBREC,Q
"RTN","IBCEOB",203,0)
 S IBFILE=$S('$G(IBAR):"^IBA(364.2,"_IBTDA_",2)",1:"^TMP("_$J_",""RCDP-EOB"","_IBTDA_")")
"RTN","IBCEOB",204,0)
 S IBEGBL=$S('$G(IBAR):"IBCERR-EOB",1:"RCDPERR-EOB")
"RTN","IBCEOB",205,0)
 I $G(IBAR),'$$HDR^IBCEOB1($G(^TMP($J,"RCDPEOB","HDR")),IBEGBL,IBEOB) Q
"RTN","IBCEOB",206,0)
 S IBA1=0
"RTN","IBCEOB",207,0)
 F  S IBA1=$O(@IBFILE@(IBA1)) Q:'IBA1  S IB0=$S('$G(IBAR):$P($G(^(IBA1,0)),"##RAW DATA: ",2),1:$G(@IBFILE@(IBA1,0))) I IB0'="" D
"RTN","IBCEOB",208,0)
 . S IBREC=+IB0
"RTN","IBCEOB",209,0)
 . I IBREC'=37 K ^TMP($J,37)
"RTN","IBCEOB",210,0)
 . I IBREC S IB="S IBOK=$$"_IBREC_"(IB0,IBEGBL,IBEOB)",Q=IBREC_"^IBCEOB" I $T(@Q)'="" X IB S:'IBOK ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=$S('$G(IBAR):"  ##RAW DATA: ",1:"")_IB0
"RTN","IBCEOB",211,0)
 ;
"RTN","IBCEOB",212,0)
 Q
"RTN","IBCEOB",213,0)
 ;
"RTN","IBCEOB",214,0)
ERRUPD(IBEOB,IBEGBL) ; Update error text in entry, if needed
"RTN","IBCEOB",215,0)
 D WP^DIE(361.1,IBEOB_",",20,"","^TMP(IBEGBL,$J)","")
"RTN","IBCEOB",216,0)
 Q
"RTN","IBCEOB",217,0)
 ;
"RTN","IBCEOB",218,0)
 ;
"RTN","IBCEOB",219,0)
DUP(IBARRAY,IBIFN) ; Duplicate Check
"RTN","IBCEOB",220,0)
 ; This function determines if the EOB data already exists in file
"RTN","IBCEOB",221,0)
 ; 361.1 by comparing the checksums of the raw 835 data.
"RTN","IBCEOB",222,0)
 ;
"RTN","IBCEOB",223,0)
 ; IBARRAY = Literal array reference where the raw 835 data exists.
"RTN","IBCEOB",224,0)
 ;           The data exists at @IBARRAY@(n,0), where n is the seq#.
"RTN","IBCEOB",225,0)
 ;           For example, IBARRAY = "^IBA(364.2,IBIEN,2)"
"RTN","IBCEOB",226,0)
 ;
"RTN","IBCEOB",227,0)
 ; IBIFN = the bill # (ptr to 399).  The checksums of the EOB's on 
"RTN","IBCEOB",228,0)
 ;         file for this bill will be compared to the checksum of the
"RTN","IBCEOB",229,0)
 ;         835 raw data in the IBARRAY reference.
"RTN","IBCEOB",230,0)
 ;
"RTN","IBCEOB",231,0)
 ; This function returns 0 if the entry is not found (no duplicate),
"RTN","IBCEOB",232,0)
 ; Otherwise, the IEN of the entry in file 361.1 is returned if this
"RTN","IBCEOB",233,0)
 ; is a duplicate EOB.
"RTN","IBCEOB",234,0)
 ;
"RTN","IBCEOB",235,0)
 NEW DUP,IBEOB,CHKSUM1,CHKSUM2
"RTN","IBCEOB",236,0)
 S DUP=0,IBIFN=+$G(IBIFN)
"RTN","IBCEOB",237,0)
 I $G(IBARRAY)=""!'IBIFN G DUPX
"RTN","IBCEOB",238,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G DUPX     ; no EOB's on file yet
"RTN","IBCEOB",239,0)
 S CHKSUM1=$$CHKSUM^IBCEMU1(IBARRAY)     ; checksum of current EOB
"RTN","IBCEOB",240,0)
 I 'CHKSUM1 G DUPX                       ; must be able to be calculated
"RTN","IBCEOB",241,0)
 S IBEOB=0
"RTN","IBCEOB",242,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:DUP
"RTN","IBCEOB",243,0)
 . S CHKSUM2=+$P($G(^IBM(361.1,IBEOB,100)),U,5)   ; checksum of old EOB
"RTN","IBCEOB",244,0)
 . I 'CHKSUM2 Q
"RTN","IBCEOB",245,0)
 . I CHKSUM1=CHKSUM2 S DUP=IBEOB Q                    ; comparison
"RTN","IBCEOB",246,0)
 . Q
"RTN","IBCEOB",247,0)
DUPX ;
"RTN","IBCEOB",248,0)
 Q DUP
"RTN","IBCEOB",249,0)
 ;
"RTN","IBCESRV")
0^1^B69744017^B69133762
"RTN","IBCESRV",1,0)
IBCESRV ;ALB/TMP - Server interface to IB from Austin ;8/6/03 10:04am
"RTN","IBCESRV",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,196,232,296,320,407**;21-MAR-94;Build 29
"RTN","IBCESRV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCESRV",4,0)
SERVER ; Entry point for server option to process EDI msgs received from Austin
"RTN","IBCESRV",5,0)
 ;
"RTN","IBCESRV",6,0)
 N IBEFLG,IBERR,IBTDA,XMER,IBXMZ,IBHOLDCT
"RTN","IBCESRV",7,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J),^TMP("IBMSG-H",$J)
"RTN","IBCESRV",8,0)
 S IBXMZ=$G(XMZ)
"RTN","IBCESRV",9,0)
 S IBEFLG=$$MSG(.XMER,.IBTDA,IBXMZ)
"RTN","IBCESRV",10,0)
 D:$G(IBEFLG) PERROR^IBCESRV1(.IBERR,.IBTDA,"G.IB EDI",IBXMZ)
"RTN","IBCESRV",11,0)
 N ZTREQ
"RTN","IBCESRV",12,0)
 D DKILL^IBCESRV1(IBXMZ) S ZTREQ="@"
"RTN","IBCESRV",13,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J),^TMP("IBMSG-H",$J)
"RTN","IBCESRV",14,0)
 Q
"RTN","IBCESRV",15,0)
 ;
"RTN","IBCESRV",16,0)
MSG(XMER,IBTDA,IBXMZ) ; Read/Store message lines
"RTN","IBCESRV",17,0)
 ;     Return message formats:
"RTN","IBCESRV",18,0)
 ;        Ref:  Your <queue name> message #<msg#> with Austin ID #<id #>,
"RTN","IBCESRV",19,0)
 ;              is assigned confirmation number <confirmation #>.
"RTN","IBCESRV",20,0)
 ;              Generates an 837REC0 message
"RTN","IBCESRV",21,0)
 ;        277STAT - claim status messages - Generates one or more 837REC1
"RTN","IBCESRV",22,0)
 ;                                          837REC2 or 837REJ1 messages
"RTN","IBCESRV",23,0)
 ;        837DEL - bill entry # from File 364
"RTN","IBCESRV",24,0)
 ;        835EOB - Explanation of Benefits messages
"RTN","IBCESRV",25,0)
 ;        REPORT - Free text Envoy report file - may contain one or more
"RTN","IBCESRV",26,0)
 ;                 reports that are turned into bulletins
"RTN","IBCESRV",27,0)
 ;
"RTN","IBCESRV",28,0)
 ; OUTPUT:
"RTN","IBCESRV",29,0)
 ;  Function returns flag ... 0 = no errors    1 = errors
"RTN","IBCESRV",30,0)
 ;  IBTDA - array subscripted by ien of message file entries created
"RTN","IBCESRV",31,0)
 ;          If array entry = 1, the message was only partially stored
"RTN","IBCESRV",32,0)
 ;
"RTN","IBCESRV",33,0)
 N IBLAST,IBTYP,IBTYP1,IB0,IBBTCH,IBDATE,IBHD,IBMG,IBRTN,IBTXN,IBTXND,XMDUZ,IBGBL,IBD,IBEFLG,IBHOLDCT,IBWANT,X,Y,Z
"RTN","IBCESRV",34,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J)
"RTN","IBCESRV",35,0)
 ;
"RTN","IBCESRV",36,0)
 S (IBEFLG,IBERR,IBTXN)="",IBGBL="IBTXN",IBLAST=0
"RTN","IBCESRV",37,0)
 S IBD("MSG#")=IBXMZ
"RTN","IBCESRV",38,0)
 S IBHD=$$NET^XMRENT(IBXMZ)
"RTN","IBCESRV",39,0)
 S IBD("SUBJ")=$P(IBHD,U,6)
"RTN","IBCESRV",40,0)
 S (X,IBDATE)=$P(IBHD,U)
"RTN","IBCESRV",41,0)
 I X'="" D  ;Reformat date, if needed
"RTN","IBCESRV",42,0)
 . I X'["@" S X=$P(X," ",1,3)_"@"_$P(X," ",4)
"RTN","IBCESRV",43,0)
 . N %DT
"RTN","IBCESRV",44,0)
 . S %DT="XTS" D ^%DT S:Y>0 IBDATE=Y\.0001*.0001
"RTN","IBCESRV",45,0)
 ;
"RTN","IBCESRV",46,0)
 K ^TMP("IB-HOLD",$J) N IBHOLDCT S IBHOLDCT=0
"RTN","IBCESRV",47,0)
 S IBD("Q")=$E(IBD("SUBJ"),1,3)
"RTN","IBCESRV",48,0)
 I $G(IBD("SUBJ"))?.E1(1" MCR",1" MCT",1" MCH")1" Confirmation" D  G MSGQ:$G(IBERR),MSG1
"RTN","IBCESRV",49,0)
 . S IBD("Q")="MC"_$E($P(IBD("SUBJ")," MC",2))
"RTN","IBCESRV",50,0)
 . ;Austin confirmation
"RTN","IBCESRV",51,0)
 . X XMREC ; Line 1 of message
"RTN","IBCESRV",52,0)
 . S:XMER'<0 IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",53,0)
 . I XMER<0 D  Q
"RTN","IBCESRV",54,0)
 .. S IBERR=3
"RTN","IBCESRV",55,0)
 .. S ^TMP("IBERR",$J,"MSG",1)=IBHD
"RTN","IBCESRV",56,0)
 .. S ^TMP("IBERR",$J,"MSG",2)=$G(XMRG)
"RTN","IBCESRV",57,0)
 . S IBTXN=XMRG
"RTN","IBCESRV",58,0)
 . ;
"RTN","IBCESRV",59,0)
 . S IBBTCH=+$O(^IBA(364.1,"MSG",+$P(IBTXN,"#",2)\1,""),-1)
"RTN","IBCESRV",60,0)
 . I 'IBBTCH S IBERR=6 D REST(.IBTXN,IBGBL) Q  ;No msgs match conf recpt
"RTN","IBCESRV",61,0)
 . S IBTXN("BATCH",IBBTCH,0)="837REC0^"_IBD("MSG#")_U_+$E($P(IBD("SUBJ")," "),4,14)_"^^"_IBBTCH_U_IBDATE
"RTN","IBCESRV",62,0)
 . ;
"RTN","IBCESRV",63,0)
 . X XMREC ;Get second line of the message
"RTN","IBCESRV",64,0)
 . I XMER<0 S IBERR=2 Q
"RTN","IBCESRV",65,0)
 . S IBTXN("BATCH",IBBTCH,1)=IBTXN_" "_XMRG_"$",IBTXN=IBTXN("BATCH",IBBTCH,0)
"RTN","IBCESRV",66,0)
 . S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",67,0)
 . S IBLAST=1
"RTN","IBCESRV",68,0)
 ;
"RTN","IBCESRV",69,0)
 ; Read header line of non-confirmation message (line 1)
"RTN","IBCESRV",70,0)
 F  X XMREC Q:$S(XMER<0:1,1:$E(XMRG,1,13)'="RACUBOTH RUCH")
"RTN","IBCESRV",71,0)
 S:XMER'<0 IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",72,0)
 I XMER<0 D  G MSGQ
"RTN","IBCESRV",73,0)
 . S IBERR=3
"RTN","IBCESRV",74,0)
 . S ^TMP("IBERR",$J,"MSG",1)=IBHD
"RTN","IBCESRV",75,0)
 . S ^TMP("IBERR",$J,"MSG",2)=$G(XMRG)
"RTN","IBCESRV",76,0)
 ;
"RTN","IBCESRV",77,0)
 S IBTXN=XMRG
"RTN","IBCESRV",78,0)
MSG1 I $E(IBTXN,$L(IBTXN)-3,$L(IBTXN))?3A1"."!(IBTXN="NNNN"),IBHOLDCT>1 S XMER=-1,IBLAST=1 G MSGQ
"RTN","IBCESRV",79,0)
 ;
"RTN","IBCESRV",80,0)
 S IBTYP1=$S($P(IBTXN,U)="277STAT":"837REC1",1:$P(IBTXN,U))
"RTN","IBCESRV",81,0)
 S IBTYP=$S(IBTYP1="":"",1:$O(^IBE(364.3,"B",IBTYP1,"")))
"RTN","IBCESRV",82,0)
 I IBTYP="" S IBERR=1 D REST(.IBTXN,IBGBL) G MSGQ ;Bad msg type
"RTN","IBCESRV",83,0)
 ;
"RTN","IBCESRV",84,0)
 S IB0=$G(^IBE(364.3,IBTYP,0)),IBRTN=$P(IB0,U,3,4),IBMG=$P(IB0,U,2)
"RTN","IBCESRV",85,0)
 I $TR(IBRTN,U)="" S IBERR=5 D REST(.IBTXN,IBGBL) G MSGQ ;No routine defined
"RTN","IBCESRV",86,0)
 ;
"RTN","IBCESRV",87,0)
 S IBWANT=1
"RTN","IBCESRV",88,0)
 I 'IBLAST,XMER'<0 D  G:IBLAST&(XMER<0) MSGQ ;Message is other than Austin confirmation
"RTN","IBCESRV",89,0)
 . S IBGBL="^TMP(""IBMSG"","_$J_")"
"RTN","IBCESRV",90,0)
 . S @IBGBL=$P(IBTXN,U),^TMP("IBMSGH",$J,0)=IBTXN
"RTN","IBCESRV",91,0)
 . ;
"RTN","IBCESRV",92,0)
 . I $P(IBTXN,U)="277STAT" D  Q  ;Claim status message
"RTN","IBCESRV",93,0)
 .. F  X XMREC Q:XMER<0  D  Q:IBLAST  ;Extract rest of message
"RTN","IBCESRV",94,0)
 ... S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",95,0)
 ... I +XMRG=99,$P(XMRG,U,2)="$" S IBLAST=1 Q
"RTN","IBCESRV",96,0)
 ... S IBD=XMRG,Z=+XMRG_"^IBCE277(.IBD)"
"RTN","IBCESRV",97,0)
 ... S IBTXN=XMRG
"RTN","IBCESRV",98,0)
 ... I '$$CKLABEL(Z,.IBTXN,IBGBL) S IBLAST=1,IBWANT=0,XMER=-1,IBERR=7 Q
"RTN","IBCESRV",99,0)
 ... D @Z
"RTN","IBCESRV",100,0)
 . ;
"RTN","IBCESRV",101,0)
 . I $P(IBTXN,U)="835EOB" D  Q  ;Explanation of Benefits message
"RTN","IBCESRV",102,0)
 .. F  X XMREC Q:XMER<0  D  Q:IBLAST  ;Extract rest of message
"RTN","IBCESRV",103,0)
 ... S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",104,0)
 ... I +XMRG=99,$P(XMRG,U,2)="$" S IBLAST=1 Q
"RTN","IBCESRV",105,0)
 ... S IBD=XMRG,Z=+XMRG_"^IBCE835(.IBD)"
"RTN","IBCESRV",106,0)
 ... S IBTXN=XMRG
"RTN","IBCESRV",107,0)
 ... I '$$CKLABEL(Z,.IBTXN,IBGBL) S IBLAST=1,IBWANT=0,XMER=-1,IBERR=7 Q
"RTN","IBCESRV",108,0)
 ... D @Z
"RTN","IBCESRV",109,0)
 . ;
"RTN","IBCESRV",110,0)
 . I $P(IBTXN,U)="REPORT" D  Q  ; Report file
"RTN","IBCESRV",111,0)
 .. D REPORT^IBCERPT(IBHD,IBDATE,.IBD,IBTXN)
"RTN","IBCESRV",112,0)
 .. I '$O(^TMP("IBMSG",$J,"REPORT",0,"D",0,0)) S IBWANT=0
"RTN","IBCESRV",113,0)
 . ;
"RTN","IBCESRV",114,0)
 . ; ****** Insert code for additional message types here and in ^IBCEM
"RTN","IBCESRV",115,0)
 ;
"RTN","IBCESRV",116,0)
 I IBLAST,IBWANT D ADD(IBGBL,.IBTDA,.IBERR)
"RTN","IBCESRV",117,0)
 ;
"RTN","IBCESRV",118,0)
 I 'IBLAST,'$G(IBERR) K @IBGBL S IBERR=2 ;No $ as last character of message
"RTN","IBCESRV",119,0)
MSGQ I $G(IBERR) D ERRUPD^IBCESRV1(IBGBL,.IBERR) S IBEFLG=1
"RTN","IBCESRV",120,0)
 Q IBEFLG
"RTN","IBCESRV",121,0)
 ;
"RTN","IBCESRV",122,0)
REST(IBTXN,IBGBL) ;Extract raw message data if not id-ed or can't process
"RTN","IBCESRV",123,0)
 N CT,Z
"RTN","IBCESRV",124,0)
 S CT=0
"RTN","IBCESRV",125,0)
 S Z=0 F  S Z=$O(^TMP("IB-HOLD",$J,Z)) Q:'Z  S CT=CT+1,@IBGBL@("BATCH",0,"D",0,CT)="##RAW DATA: "_$G(^TMP("IB-HOLD",$J,Z))
"RTN","IBCESRV",126,0)
 F  X XMREC Q:XMER<0  S:XMRG'="" CT=CT+1,@IBGBL@("BATCH",0,"D",0,CT)="##RAW DATA: "_XMRG
"RTN","IBCESRV",127,0)
 Q
"RTN","IBCESRV",128,0)
 ;
"RTN","IBCESRV",129,0)
ADD(IBGBL,IBTDA,IBERR) ; Add message(s) in @IBGBL to file #364.2
"RTN","IBCESRV",130,0)
 ;   Errors returned in IBERR
"RTN","IBCESRV",131,0)
 ;   Message entry #'s are returned in IBTDA(ien)=""
"RTN","IBCESRV",132,0)
 ;
"RTN","IBCESRV",133,0)
 N IB,IBA,IBB,IBC,IBDATA,IBHDR,IBLINE,IBTYP,IBRTN
"RTN","IBCESRV",134,0)
 S IBA="" F  S IBA=$O(@IBGBL@(IBA)) Q:IBA=""!(IBERR=3)  S IBB="" F  S IBB=$O(@IBGBL@(IBA,IBB)) Q:IBB=""!(IBERR=3)  D
"RTN","IBCESRV",135,0)
 . S IBHDR=$G(@IBGBL@(IBA,IBB,0))
"RTN","IBCESRV",136,0)
 . Q:IBHDR=""
"RTN","IBCESRV",137,0)
 . S IBTYP=$S($P(IBHDR,U)="":"",1:$O(^IBE(364.3,"B",$P(IBHDR,U),""))),IBRTN=$P($G(^IBE(364.3,IBTYP,0)),U,3,4)
"RTN","IBCESRV",138,0)
 . S IBTDA=$$ADDTXN(IBHDR) ;File message hdr data
"RTN","IBCESRV",139,0)
 . I IBTDA'>0 S IBERR=3 Q  ;msg hdr can't be filed
"RTN","IBCESRV",140,0)
 . S IBTDA(IBTDA)=""
"RTN","IBCESRV",141,0)
 . D LOADDET(IBA,IBB,.IBTDA,IBGBL,.IBERR,$P(IBHDR,U,1))
"RTN","IBCESRV",142,0)
 . Q:$G(IBERR)  ;Message not completely filed
"RTN","IBCESRV",143,0)
 . D TRTN^IBCESRV1(IBTDA):$TR(IBRTN,U)'="" ;Task update to run
"RTN","IBCESRV",144,0)
 Q
"RTN","IBCESRV",145,0)
 ;
"RTN","IBCESRV",146,0)
ADDTXN(IBDATA,REPORT) ; Add a trxn for msg in IBDATA to file 364.2
"RTN","IBCESRV",147,0)
 ; REPORT = 1 if storing a report format message
"RTN","IBCESRV",148,0)
 ;Function returns ien of the new entry in file 364.2 or "" if an error
"RTN","IBCESRV",149,0)
 ;
"RTN","IBCESRV",150,0)
 N A,IBDA,IBBTCH,IBBILL,IBDT,IBTEST,DLAYGO,DIC,DD,DO,X,Y,Z,IBIFN
"RTN","IBCESRV",151,0)
 ;
"RTN","IBCESRV",152,0)
 S IBDA="",IBBTCH=$P(IBDATA,U,5),IBBILL=$P(IBDATA,U,4),IBIFN=0
"RTN","IBCESRV",153,0)
 I IBBILL S IBIFN=+$G(^IBA(364,IBBILL,0))
"RTN","IBCESRV",154,0)
 S IBDT=$P(IBDATA,U,6)
"RTN","IBCESRV",155,0)
 S IBTEST=0
"RTN","IBCESRV",156,0)
 I $E($G(IBD("Q")),1,3)="MCT" D
"RTN","IBCESRV",157,0)
 . I IBBILL,'$P($G(^IBA(364,IBBILL,0)),U,7),$D(^IBM(361.4,IBIFN,0)) S IBTEST=1 Q  ; Resubmit live claim for test (make sure 361.4 exists)
"RTN","IBCESRV",158,0)
 . I IBBTCH,$O(^IBM(361.4,"C",IBBTCH,0)) S IBTEST=1 Q  ; Resubmit live claim as test batch
"RTN","IBCESRV",159,0)
 ;
"RTN","IBCESRV",160,0)
 S (X,A)=$G(IBD("MSG#")) ; Use msg ID for .01 field
"RTN","IBCESRV",161,0)
 F Z=1:1 Q:'$D(^IBA(364.2,"B",A))  S A=X_"."_Z
"RTN","IBCESRV",162,0)
 S X=A
"RTN","IBCESRV",163,0)
 S DIC(0)="L",DIC="^IBA(364.2,",DLAYGO=364.2
"RTN","IBCESRV",164,0)
 S DIC("DR")=".02///"_$P(IBDATA,U)_";.03///^S X=""NOW"";.08////"_($P(IBDATA,U,7)="Y")_";.13////"_$P(IBDATA,U,8)_$S(IBBILL="":"",1:";.05////"_IBBILL)_";.06////P;.1////"_IBDT_$S(IBBTCH="":"",1:";.04////"_IBBTCH)_";.14////"_IBTEST
"RTN","IBCESRV",165,0)
 D FILE^DICN
"RTN","IBCESRV",166,0)
 S:Y>0 IBDA=+Y
"RTN","IBCESRV",167,0)
 ;
"RTN","IBCESRV",168,0)
 Q IBDA
"RTN","IBCESRV",169,0)
 ;
"RTN","IBCESRV",170,0)
LOADDET(IB1,IB2,IBTDA,IBGBL,IBERR,IBTNM) ; Load the rest of the message text into the message
"RTN","IBCESRV",171,0)
 ; IB1 = "BATCH" or "CLAIM" or "REPORT"
"RTN","IBCESRV",172,0)
 ; IB2 = batch # or claim # or 0
"RTN","IBCESRV",173,0)
 ; IBTDA = ien in file 364.2 being updated
"RTN","IBCESRV",174,0)
 ; IBGBL = name of the array holding the detail message text to be loaded
"RTN","IBCESRV",175,0)
 ; IBTNM = message name (i.e. "835EOB","837REC0","REPORT",etc.)
"RTN","IBCESRV",176,0)
 ;
"RTN","IBCESRV",177,0)
 ; OUTPUT: IBERR if any errors found, pass by reference
"RTN","IBCESRV",178,0)
 ;         IBTDA(IBTDA)=1 if errors - pass by reference
"RTN","IBCESRV",179,0)
 ;
"RTN","IBCESRV",180,0)
 S IBTDA=+$G(IBTDA)
"RTN","IBCESRV",181,0)
 N CT,IB3,IBE,IBZ,Q
"RTN","IBCESRV",182,0)
 ;
"RTN","IBCESRV",183,0)
 K ^TMP("IBTEXT",$J)
"RTN","IBCESRV",184,0)
 ;
"RTN","IBCESRV",185,0)
 S (CT,IB3)=0 ;Put formatted data into msg
"RTN","IBCESRV",186,0)
 F  S IB3=$O(@IBGBL@(IB1,IB2,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,IB3)
"RTN","IBCESRV",187,0)
 ; Add identifying data from hdr record
"RTN","IBCESRV",188,0)
 S IB3=0 F  S IB3=$O(^TMP("IBMSG-H",$J,IB1,IB2,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=^TMP("IBMSG-H",$J,IB1,IB2,IB3)
"RTN","IBCESRV",189,0)
 ;
"RTN","IBCESRV",190,0)
 ; Put raw data into msg
"RTN","IBCESRV",191,0)
 I $G(IBTNM)'="835EOB" D
"RTN","IBCESRV",192,0)
 . S IBZ="" F  S IBZ=$O(@IBGBL@(IB1,IB2,"D",IBZ)) Q:IBZ=""  S IB3=0 F  S IB3=$O(@IBGBL@(IB1,IB2,"D",IBZ,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,"D",IBZ,IB3)
"RTN","IBCESRV",193,0)
 I $G(IBTNM)="835EOB" D
"RTN","IBCESRV",194,0)
 . S IB3=0 F  S IB3=$O(@IBGBL@(IB1,IB2,"D1",IB3)) Q:'IB3  S IBZ="" F  S IBZ=$O(@IBGBL@(IB1,IB2,"D1",IB3,IBZ)) Q:IBZ=""  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,"D1",IB3,IBZ)
"RTN","IBCESRV",195,0)
 ;
"RTN","IBCESRV",196,0)
 D STOREM^IBCESRV2(IBTDA,"^TMP(""IBTEXT"",$J)",.IBE)
"RTN","IBCESRV",197,0)
 ;
"RTN","IBCESRV",198,0)
 I $D(IBE("DIERR")) D  S:$L($G(IBE)) IBERR(IBTDA,IB1,IB2)=IBE ; Extract error
"RTN","IBCESRV",199,0)
 . D EXTERR^IBCESRV1(.IBERR,.IBTDA,.IBE)
"RTN","IBCESRV",200,0)
 K ^TMP("IBTEXT",$J)
"RTN","IBCESRV",201,0)
 Q
"RTN","IBCESRV",202,0)
 ;
"RTN","IBCESRV",203,0)
CKLABEL(Z,IBTXN,IBGBL) ;  Checks to be sure label in Z exists.
"RTN","IBCESRV",204,0)
 ; If it doesn't exist, files an error and returns 0 
"RTN","IBCESRV",205,0)
 ;  OR  returns 1 if it does exist
"RTN","IBCESRV",206,0)
 N X,LAB
"RTN","IBCESRV",207,0)
 S X=1,LAB=$P(Z,"(")
"RTN","IBCESRV",208,0)
 I $S('LAB!($L($P(LAB,U))>8):1,1:$T(@LAB)="") S X=0 D REST(.IBTXN,IBGBL)
"RTN","IBCESRV",209,0)
 Q X
"RTN","IBCESRV",210,0)
 ;
"RTN","IBCESRV",211,0)
ERROR ; Error condition messages
"RTN","IBCESRV",212,0)
 ;;Message code does not exist in IB MESSAGE ROUTER file (364.3).
"RTN","IBCESRV",213,0)
 ;;This message has no ending $.
"RTN","IBCESRV",214,0)
 ;;Message file problem - no message stored.
"RTN","IBCESRV",215,0)
 ;;Message file problem - message partially stored.
"RTN","IBCESRV",216,0)
 ;;Routine to process this message type does not exist.
"RTN","IBCESRV",217,0)
 ;;Batch does not exist for this confirmation message.
"RTN","IBCESRV",218,0)
 ;;Bad message format found - cannot store message.
"RTN","IBCESRV",219,0)
 ;
"RTN","IBCEST")
0^3^B76027306^B78288248
"RTN","IBCEST",1,0)
IBCEST ;ALB/TMP - 837 EDI STATUS MESSAGE PROCESSING ;17-APR-96
"RTN","IBCEST",2,0)
 ;;2.0;INTEGRATED BILLING;**137,189,197,135,283,320,368,397,407**;21-MAR-94;Build 29
"RTN","IBCEST",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEST",4,0)
 ; IA 4043 for call to AUDITX^PRCAUDT
"RTN","IBCEST",5,0)
 Q
"RTN","IBCEST",6,0)
 ;
"RTN","IBCEST",7,0)
UPD361(IBTDA) ; Update IB BILL STATUS MESSAGES file
"RTN","IBCEST",8,0)
 ; IBTDA = ien of return message in file 364.2
"RTN","IBCEST",9,0)
 ;
"RTN","IBCEST",10,0)
 N IB,IB0,IBSEQ,IB00,IBBILL,IBBTCH,IBMNUM
"RTN","IBCEST",11,0)
 ;
"RTN","IBCEST",12,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock message in file 364.2
"RTN","IBCEST",13,0)
 ;
"RTN","IBCEST",14,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEST",15,0)
 S IBMNUM=$P(IB0,U) ; Message number
"RTN","IBCEST",16,0)
 S IB00=$G(^IBA(364,+$P(IB0,U,5),0)) ; Transmit bill entry
"RTN","IBCEST",17,0)
 S IBBILL=+IB00 ; Actual bill ien in file 399
"RTN","IBCEST",18,0)
 S IBBTCH=$P(IB0,U,4) ; Batch #
"RTN","IBCEST",19,0)
 ;
"RTN","IBCEST",20,0)
 ; Auto-audit bills based on status code on '10' record of status msg
"RTN","IBCEST",21,0)
 ; flat file
"RTN","IBCEST",22,0)
 I IBBILL,$P($T(PRCAUDT+1^PRCAUDT),"**",2)[",173" D
"RTN","IBCEST",23,0)
 . N Z,Z0,Z1,OK
"RTN","IBCEST",24,0)
 . Q:+$$STA^PRCAFN(IBBILL)'=104
"RTN","IBCEST",25,0)
 . S (Z,OK)=0
"RTN","IBCEST",26,0)
 . F  S Z=$O(^IBA(364.2,IBTDA,2,Z)) Q:'Z  S Z0=$P($G(^(Z,0)),"##RAW DATA: ",2) I +Z0=10 S Z0=$P(Z0,U,5) D  Q:OK
"RTN","IBCEST",27,0)
 .. ; Strip leading spaces
"RTN","IBCEST",28,0)
 .. S Z0=$$TRIM^XLFSTR(Z0)
"RTN","IBCEST",29,0)
 .. Q:Z0=""
"RTN","IBCEST",30,0)
 .. I $$SCODE^IBCEST1(Z0),$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBBILL,0)),U,7),0)),U,11) D AUDITX^PRCAUDT(IBBILL) S OK=1 ; IA 4043
"RTN","IBCEST",31,0)
 ;
"RTN","IBCEST",32,0)
 I $S(IBMNUM="":1,1:'IBBILL&(IBBTCH="")) D DELMSG^IBCESRV2(IBTDA) G UPDQ
"RTN","IBCEST",33,0)
 ;
"RTN","IBCEST",34,0)
 ; Individual bill
"RTN","IBCEST",35,0)
 I IBBILL D  G UPDQ
"RTN","IBCEST",36,0)
 . N IBA1,IBMSG0,IBPID
"RTN","IBCEST",37,0)
 . S IBPID="",IBA1=0
"RTN","IBCEST",38,0)
 . F  S IBA1=$O(^IBA(364.2,IBTDA,2,IBA1)) Q:'IBA1  S IBMSG0=$P($G(^(IBA1,0)),"##RAW DATA: ",2) I +IBMSG0=277,$P(IBMSG0,U,5)="N" S IBPID=$P(IBMSG0,U,11) Q
"RTN","IBCEST",39,0)
 . S IBSEQ=$P(IB00,U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",40,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,1)
"RTN","IBCEST",41,0)
 ;
"RTN","IBCEST",42,0)
 ; Batch - update each bill separately
"RTN","IBCEST",43,0)
 S IBBILL=""
"RTN","IBCEST",44,0)
 F  S IBBILL=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL)) Q:'IBBILL  D
"RTN","IBCEST",45,0)
 . Q:$D(^TMP("IBCONF",$J,IBBILL))  ;Bill was rejected
"RTN","IBCEST",46,0)
 . S IB=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL,0)) Q:'IB
"RTN","IBCEST",47,0)
 . S IBSEQ=$P($G(^IBA(364,IB,0)),U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",48,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,"",0)
"RTN","IBCEST",49,0)
 ;
"RTN","IBCEST",50,0)
 Q
"RTN","IBCEST",51,0)
 ;
"RTN","IBCEST",52,0)
STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,IB1) ;
"RTN","IBCEST",53,0)
 ;
"RTN","IBCEST",54,0)
 ; IB0 = 0-node of message in file 364.2
"RTN","IBCEST",55,0)
 ; IBBTCH = ien of batch in file 364.1
"RTN","IBCEST",56,0)
 ; IBMNUM = actual message number
"RTN","IBCEST",57,0)
 ; IBTDA = ien of message in file 364.2
"RTN","IBCEST",58,0)
 ; IBBILL = ien of bill in 399
"RTN","IBCEST",59,0)
 ; IBSEQ = P/S/T/ for COB sequence related to message
"RTN","IBCEST",60,0)
 ; IBPID = the payer id returned from clearinghouse for the claim
"RTN","IBCEST",61,0)
 ; IB1 = flag that says if the message was for a single bill or a batch.
"RTN","IBCEST",62,0)
 ;       Batch statuses have an additional standard text entry.
"RTN","IBCEST",63,0)
 ;       1 = single bill 0 = batch
"RTN","IBCEST",64,0)
 ; 
"RTN","IBCEST",65,0)
 N DA,DIK,DIE,DIC,X,Y,DR,DO,DD,DLAYGO,Z,Z0,Z1,Z2,Z3,IBT,IBDUP,IBFLDS,IBY,IBAUTO,IBLN
"RTN","IBCEST",66,0)
 ;
"RTN","IBCEST",67,0)
 S X=IBBILL,IBDUP=0
"RTN","IBCEST",68,0)
 ;
"RTN","IBCEST",69,0)
 S IBFLDS=".02////"_$P(IB0,U,3)
"RTN","IBCEST",70,0)
 S IBFLDS=IBFLDS_";.03////"_$S($$EXTERNAL^DILFD(364.2,.02,"U",$P(IB0,U,2))["REJ":"R",1:"I")_";.05////"_IBBTCH_";.06////"_IBMNUM_";.04////"_+$P(IB0,U,8)_";.07////"_IBSEQ_$S($P(IB0,U,5):";.11////"_$P(IB0,U,5),1:"")
"RTN","IBCEST",71,0)
 S IBFLDS=IBFLDS_";.12////"_$P(IB0,U,10)_";.09////0"
"RTN","IBCEST",72,0)
 S IBFLDS=IBFLDS_";.15////"_$$CHKSUM^IBCEST1("^IBA(364.2,"_IBTDA_",2)")
"RTN","IBCEST",73,0)
 I IBPID'="" D
"RTN","IBCEST",74,0)
 . S IBPID("TYPE")=$S($$FT^IBCEF(IBBILL)=2:"P",1:"I")
"RTN","IBCEST",75,0)
 . D UPDINS(.IBPID,$$POLICY^IBCEF(IBBILL,1,$TR(IBSEQ,"PST","123")),IBBILL)
"RTN","IBCEST",76,0)
 ;
"RTN","IBCEST",77,0)
 I IBDUP D  I $D(Y) G UPDQ
"RTN","IBCEST",78,0)
 . ; Stuff fields into existing entry
"RTN","IBCEST",79,0)
 . ; (may be needed for reprocessing of aborted updates)
"RTN","IBCEST",80,0)
 . S DIE="^IBM(361,",DA=IBDUP,DR=IBFLDS_";1///@"
"RTN","IBCEST",81,0)
 . D ^DIE
"RTN","IBCEST",82,0)
 . I $D(Y) S IBY=-1 Q  ;Update not successful
"RTN","IBCEST",83,0)
 . S IBY=IBDUP
"RTN","IBCEST",84,0)
 ;
"RTN","IBCEST",85,0)
 K IBT
"RTN","IBCEST",86,0)
 I 'IBDUP D  ; Create new entry and stuff fields
"RTN","IBCEST",87,0)
 . S DIC(0)="L",DIC="^IBM(361,",DLAYGO=361
"RTN","IBCEST",88,0)
 . S DIC("DR")=IBFLDS
"RTN","IBCEST",89,0)
 . D FILE^DICN
"RTN","IBCEST",90,0)
 . K DO,DD,DLAYGO,DIC
"RTN","IBCEST",91,0)
 . S IBY=+Y
"RTN","IBCEST",92,0)
 . Q:IBY'>0
"RTN","IBCEST",93,0)
 . ;
"RTN","IBCEST",94,0)
 . ; IB*2*320 - Check for duplicate status message
"RTN","IBCEST",95,0)
 . NEW IBNEW,IBOLD,PCE,Z,DIK,DA
"RTN","IBCEST",96,0)
 . S IBNEW=""
"RTN","IBCEST",97,0)
 . F PCE=3,4,5,7,8,11,15 S IBNEW=IBNEW_$P($G(^IBM(361,IBY,0)),U,PCE)_U
"RTN","IBCEST",98,0)
 . S Z=0
"RTN","IBCEST",99,0)
 . F  S Z=$O(^IBM(361,"B",IBBILL,Z)) Q:'Z  I Z'=IBY D  Q:IBY'>0
"RTN","IBCEST",100,0)
 .. S IBOLD=""
"RTN","IBCEST",101,0)
 .. F PCE=3,4,5,7,8,11,15 S IBOLD=IBOLD_$P($G(^IBM(361,Z,0)),U,PCE)_U
"RTN","IBCEST",102,0)
 .. I IBNEW'=IBOLD Q   ; no duplicate so get the next one
"RTN","IBCEST",103,0)
 .. S DIK="^IBM(361,",DA=IBY,IBY=-1 D ^DIK D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",104,0)
 .. Q
"RTN","IBCEST",105,0)
 . Q
"RTN","IBCEST",106,0)
 ;
"RTN","IBCEST",107,0)
 I IBY>0 D  ;Move text over
"RTN","IBCEST",108,0)
 . K IBT
"RTN","IBCEST",109,0)
 . ;
"RTN","IBCEST",110,0)
 . D BLDMSG(IB1,IBTDA,.IBT,.IBAUTO)
"RTN","IBCEST",111,0)
 . ;
"RTN","IBCEST",112,0)
 . ; IB*2*368 - ymg - 2Q,RE,RP messages will be filed as informational
"RTN","IBCEST",113,0)
 . ; Z0 is the flag for 2Q code
"RTN","IBCEST",114,0)
 . ; Z1 is the flag for RE code
"RTN","IBCEST",115,0)
 . ; Z2 is the flag for RP code
"RTN","IBCEST",116,0)
 . ; Z3 is the flag for autofiling the message
"RTN","IBCEST",117,0)
 . I $P($G(^IBM(361,+IBY,0)),U,3)="R" D
"RTN","IBCEST",118,0)
 .. S Z="",(Z0,Z1,Z2,Z3)=0 F  S Z=$O(IBT(Z)) Q:Z=""!(Z3=1)  D
"RTN","IBCEST",119,0)
 ... S IBLN=$$UP^XLFSTR($G(IBT(Z)))
"RTN","IBCEST",120,0)
 ... I (Z0!Z1!Z2)=0 D
"RTN","IBCEST",121,0)
 .... S:IBLN?.E1"CODE:".P1"2Q".E Z0=1
"RTN","IBCEST",122,0)
 .... S:IBLN?.E1"CODE:".P1"RE".E Z1=1
"RTN","IBCEST",123,0)
 .... S:IBLN?.E1"CODE:".P1"RP".E Z2=1
"RTN","IBCEST",124,0)
 ... I Z0=1 S:IBLN?.P1"CLAIM".P1"REJECTED".P1"BY".P1"CLEARINGHOUSE".E Z3=1
"RTN","IBCEST",125,0)
 ... I Z1=1 S:IBLN?.P1"ELECTRONIC".P1"CLAIM".P1"REJECTED".P1"BY".P1"EMDEON".E Z3=1
"RTN","IBCEST",126,0)
 ... I Z2=1 S:IBLN?.P1"PAPER".P1"CLAIM".P1"REJECTED".P1"BY".P1"EMDEON".E Z3=1
"RTN","IBCEST",127,0)
 .. I Z3=1 S IBAUTO=1,DIE=361,DA=+IBY,DR=".03////I" D ^DIE
"RTN","IBCEST",128,0)
 .. Q
"RTN","IBCEST",129,0)
 . ;
"RTN","IBCEST",130,0)
 . ; if info msg, ck for no review needed based on first line of text
"RTN","IBCEST",131,0)
 . I $G(IBAUTO),$P($G(^IBM(361,+IBY,0)),U,3)="I" D
"RTN","IBCEST",132,0)
 .. S DIE="^IBM(361,",DR=".09////2;.14////1;.1////F",DA=+IBY D ^DIE
"RTN","IBCEST",133,0)
 .. I IB1,$P($G(^IBM(361,+IBY,0)),U,11) S Z="",Z0=0 F  S Z=$O(IBT(Z)) Q:Z=""!(Z0=1)  D
"RTN","IBCEST",134,0)
 ... S Z0=$$PRINTUPD^IBCEU0($$UP^XLFSTR($G(IBT(Z))),$P($G(^IBM(361,+IBY,0)),U,11))
"RTN","IBCEST",135,0)
 . ;
"RTN","IBCEST",136,0)
 . D MSGLNSZ(.IBT) ; Convert Message Lines in IBT to be no longer than 70 chars
"RTN","IBCEST",137,0)
 . D WP^DIE(361,+IBY_",",1,"A","IBT")    ; file message text
"RTN","IBCEST",138,0)
 . ;
"RTN","IBCEST",139,0)
 . ; Delete message after it successfully updates the database.
"RTN","IBCEST",140,0)
 . D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",141,0)
 . Q
"RTN","IBCEST",142,0)
 ;
"RTN","IBCEST",143,0)
UPDQ L -^IBA(364.2,IBTDA,0)
"RTN","IBCEST",144,0)
 Q
"RTN","IBCEST",145,0)
 ;
"RTN","IBCEST",146,0)
BLDMSG(IB1,IBTDA,IBT,IBAUTO) ; Builds message text
"RTN","IBCEST",147,0)
 ; IB1 = flag for batch message
"RTN","IBCEST",148,0)
 ; IBTDA = ien of entry in file 364.2
"RTN","IBCEST",149,0)
 ; IBT = array returned with message text
"RTN","IBCEST",150,0)
 ; IBAUTO = if passed by reference, returns 1 if text indicates review
"RTN","IBCEST",151,0)
 ;          not needed
"RTN","IBCEST",152,0)
 N IBDATA,IBCK,IBZ,IBZ0,IBZ1,Z
"RTN","IBCEST",153,0)
 S (IBZ,IBZ0,IBDATA,IBAUTO,IBCK)=0
"RTN","IBCEST",154,0)
 I 'IB1 S IBT(1)="Status message received for batch "_$P($G(^IBA(364.1,IBBTCH,0)),U)_" dated "_$$FMTE^XLFDT($P($G(^IBA(364.2,IBTDA,0)),U,10),2),IBZ0=1
"RTN","IBCEST",155,0)
 ; Don't move the raw data over, just move the text of the message
"RTN","IBCEST",156,0)
 F  S IBZ=$O(^IBA(364.2,IBTDA,2,IBZ)) Q:'IBZ  S IBZ1=$G(^(IBZ,0)) S IBDATA=($E(IBZ1,1,2)="##") Q:IBDATA  S IBZ0=IBZ0+1,IBT(IBZ0)=IBZ1 I 'IBCK S Z=$$CKREVU^IBCEM4(IBZ1,,,.IBCK),IBAUTO=$S(IBCK:0,Z:1,1:IBAUTO)
"RTN","IBCEST",157,0)
 Q
"RTN","IBCEST",158,0)
 ;
"RTN","IBCEST",159,0)
UPDINS(IBPID,IBINS,IBIFN) ; Update the insurance id or the bill printed at
"RTN","IBCEST",160,0)
 ;    the EDI contractor's print shop and mailed to the ins co.
"RTN","IBCEST",161,0)
 ; IBPID = the id returned from the EDI contractor for the ins co
"RTN","IBCEST",162,0)
 ;      ("TYPE") = P if professional id or I if institutional id
"RTN","IBCEST",163,0)
 ; IBINS = the ien of the insurance co it was sent to (file 36)
"RTN","IBCEST",164,0)
 ; IBIFN = the ien of the claim (file 399)
"RTN","IBCEST",165,0)
 ;
"RTN","IBCEST",166,0)
 N IBID,IBIDFLD,IBPRT,IBLOOK,DA,DR,DIE,X,Y,Z
"RTN","IBCEST",167,0)
 ;
"RTN","IBCEST",168,0)
 Q:'$G(IBINS)!($G(IBPID)="")
"RTN","IBCEST",169,0)
 ;
"RTN","IBCEST",170,0)
 ; Strip spaces off the end of data
"RTN","IBCEST",171,0)
 S IBLOOK=""
"RTN","IBCEST",172,0)
 I $L(IBPID) F Z=$L(IBPID):-1:1 I $E(IBPID,Z)'=" " S IBLOOK=$E(IBPID,1,Z) Q
"RTN","IBCEST",173,0)
 ;
"RTN","IBCEST",174,0)
 S IBPRT=($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",175,0)
 I IBPRT D  ; Set printed via EDI field on bill
"RTN","IBCEST",176,0)
 . S DA=IBIFN,DIE="^DGCR(399,",DR="26////1" D ^DIE
"RTN","IBCEST",177,0)
 ;
"RTN","IBCEST",178,0)
 S IBLOOK=$E($S('IBPRT:$P(IBLOOK,"PAYID=",2),1:""),1,5)
"RTN","IBCEST",179,0)
 Q:IBLOOK=""!($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",180,0)
 S IBIDFLD="3.0"_$S($G(IBPID("TYPE"))="I":4,1:2)
"RTN","IBCEST",181,0)
 S IBID=$P($G(^DIC(36,+IBINS,3)),U,IBIDFLD*100#100)
"RTN","IBCEST",182,0)
 Q:IBID=IBLOOK
"RTN","IBCEST",183,0)
 I IBID="" D  G UPDINSQ ; Update insurance co electronic id # if blank
"RTN","IBCEST",184,0)
 . S DIE="^DIC(36,",DR=IBIDFLD_"////"_IBLOOK,DA=IBINS D ^DIE
"RTN","IBCEST",185,0)
 I IBID'="",IBLOOK'="" D  ; Bulletin that the id on file and id returned
"RTN","IBCEST",186,0)
 . ; are different
"RTN","IBCEST",187,0)
 . N XMTO,XMDUZ,XMBODY,IBXM,XMSUBJ,XMZ
"RTN","IBCEST",188,0)
 . S XMTO("I:G.IB EDI")=""
"RTN","IBCEST",189,0)
 . S XMDUZ="",XMBODY="IBXM",XMSUBJ="PAYER ID RETURNED IS DIFFERENT THAN PAYER ID ON FILE"
"RTN","IBCEST",190,0)
 . S IBXM(1)="BILL #     : "_$P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBCEST",191,0)
 . S IBXM(2)="PAYER      : "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEST",192,0)
 . S IBXM(3)="BILL TYPE  : "_$S($G(IBPID("TYPE"))="I":"INSTITUT",1:"PROFESS")_"IONAL"
"RTN","IBCEST",193,0)
 . S IBXM(4)="ID ON FILE : "_IBID
"RTN","IBCEST",194,0)
 . S IBXM(5)="ID RETURNED: "_IBLOOK
"RTN","IBCEST",195,0)
 . S IBXM(6)=" ",IBXM(7)="   Please determine which id number is correct and correct the id in the",IBXM(8)="insurance file for this payer, if needed"
"RTN","IBCEST",196,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEST",197,0)
 ;
"RTN","IBCEST",198,0)
UPDINSQ Q
"RTN","IBCEST",199,0)
 ;
"RTN","IBCEST",200,0)
MSGLNSZ(MSG) ; Change Input Message Lines to be no more than 70 characters long each
"RTN","IBCEST",201,0)
 ;
"RTN","IBCEST",202,0)
 ; Input/Output:   MSG  - array of Input Message Lines; this is also the Output Message
"RTN","IBCEST",203,0)
 ; which is an array of Converted Message Lines (with lines no more than 70 chars each)
"RTN","IBCEST",204,0)
 ;
"RTN","IBCEST",205,0)
 N LN,XARY,XARYLN,CNT,OUTMSG,TMPMSG,LDNGSP,LDNGSPN
"RTN","IBCEST",206,0)
 S LN="",CNT=0 F  S LN=$O(MSG(LN)) Q:LN=""  D  ;
"RTN","IBCEST",207,0)
 . ; Find any leading spaces in original message line, 
"RTN","IBCEST",208,0)
 . ; to be used if line got split below
"RTN","IBCEST",209,0)
 . S TMPMSG=$$TRIM^XLFSTR(MSG(LN),"L"," ")  ;Trim Leading Spaces
"RTN","IBCEST",210,0)
 . S LDNGSP=$P(MSG(LN),TMPMSG,1)  ;get leading spaces if any
"RTN","IBCEST",211,0)
 . S LDNGSPN=$L(LDNGSP) S:LDNGSPN>30 LDNGSP=$E(LDNGSP,1,30) ;make sure there are no more than 30 leading spaces 
"RTN","IBCEST",212,0)
 . ; Converts a single line to multiple lines with a maximum width of 70 each
"RTN","IBCEST",213,0)
 . ; If line is 70 chars or less, this call returns the exact line
"RTN","IBCEST",214,0)
 . K XARY D FSTRNG^IBJU1(TMPMSG,70-LDNGSPN,.XARY)
"RTN","IBCEST",215,0)
 . ; Scan lines and merge them into the final output array (OUTMSG)
"RTN","IBCEST",216,0)
 . ; On lines 2 and higher, add Leading Spaces found above, if any.
"RTN","IBCEST",217,0)
 . S XARYLN="" F  S XARYLN=$O(XARY(XARYLN)) Q:XARYLN=""  S CNT=CNT+1,OUTMSG(CNT)=LDNGSP_XARY(XARYLN)
"RTN","IBCEST",218,0)
 ;
"RTN","IBCEST",219,0)
 ; Move the final Message Lines (OUTMSG) into MSG array to be returned
"RTN","IBCEST",220,0)
 K MSG M MSG=OUTMSG
"RTN","IBCEST",221,0)
 Q
"RTN","IBCEST",222,0)
 ;
"VER")
8.0^22.0
"BLD",7858,6)
^386
**END**
**END**
