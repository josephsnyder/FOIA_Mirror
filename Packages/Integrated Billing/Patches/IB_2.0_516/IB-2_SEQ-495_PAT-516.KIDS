Released IB*2*516 SEQ #495
Extracted from mail message
**KIDS**:IB*2.0*516^

**INSTALL NAME**
IB*2.0*516
"BLD",8791,0)
IB*2.0*516^INTEGRATED BILLING^0^3150319^y
"BLD",8791,1,0)
^^1^1^3140408^
"BLD",8791,1,1,0)
eBilling Build 3
"BLD",8791,4,0)
^9.64PA^2^9
"BLD",8791,4,2,0)
2
"BLD",8791,4,2,2,0)
^9.641^2.312^1
"BLD",8791,4,2,2,2.312,0)
INSURANCE TYPE  (sub-file)
"BLD",8791,4,2,2,2.312,1,0)
^9.6411^21^2
"BLD",8791,4,2,2,2.312,1,20,0)
NEW GROUP NAME
"BLD",8791,4,2,2,2.312,1,21,0)
NEW GROUP NUMBER
"BLD",8791,4,2,222)
y^y^p^^^^n^^n
"BLD",8791,4,2,224)

"BLD",8791,4,36,0)
36
"BLD",8791,4,36,2,0)
^9.641^36^1
"BLD",8791,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",8791,4,36,2,36,1,0)
^9.6411^4.13^4
"BLD",8791,4,36,2,36,1,4.07,0)
*SEND LAB OR FAC IDS FOR VAMC
"BLD",8791,4,36,2,36,1,4.11,0)
*USE VAMC AS BILL PROV ON 1500
"BLD",8791,4,36,2,36,1,4.12,0)
*USE VAMC AS BILL PROV ON UB04
"BLD",8791,4,36,2,36,1,4.13,0)
*USE BILL PROV VAMC ADDRESS
"BLD",8791,4,36,222)
y^y^p^^^^n^^n
"BLD",8791,4,36,224)

"BLD",8791,4,350.9,0)
350.9
"BLD",8791,4,350.9,2,0)
^9.641^350.9004^3
"BLD",8791,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",8791,4,350.9,2,350.9,1,0)
^9.6411^11.04^1
"BLD",8791,4,350.9,2,350.9,1,11.04,0)
DEFAULT TRICARE PAY-TO PROV
"BLD",8791,4,350.9,2,350.9004,0)
PAY-TO PROVIDERS  (sub-file)
"BLD",8791,4,350.9,2,350.9004,1,0)
^9.6411^.01^1
"BLD",8791,4,350.9,2,350.9004,1,.01,0)
FACILITY
"BLD",8791,4,350.9,2,350.929,0)
TRICARE PAY-TO PROVIDERS  (sub-file)
"BLD",8791,4,350.9,2,350.929,1,0)
^9.6411^^0
"BLD",8791,4,350.9,222)
y^y^p^^^^n^^n
"BLD",8791,4,350.9,224)

"BLD",8791,4,355.3,0)
355.3
"BLD",8791,4,355.3,2,0)
^9.641^355.3^1
"BLD",8791,4,355.3,2,355.3,0)
GROUP INSURANCE PLAN  (File-top level)
"BLD",8791,4,355.3,2,355.3,1,0)
^9.6411^.15^1
"BLD",8791,4,355.3,2,355.3,1,.15,0)
ELECTRONIC PLAN TYPE
"BLD",8791,4,355.3,222)
y^n^p^^^^n^^n
"BLD",8791,4,355.3,224)

"BLD",8791,4,355.93,0)
355.93
"BLD",8791,4,355.93,2,0)
^9.641^355.93^1
"BLD",8791,4,355.93,2,355.93,0)
IB NON/OTHER VA BILLING PROVIDER  (File-top level)
"BLD",8791,4,355.93,2,355.93,1,0)
^9.6411^.18^2
"BLD",8791,4,355.93,2,355.93,1,.17,0)
SOLE PROPRIETORSHIP
"BLD",8791,4,355.93,2,355.93,1,.18,0)
NON-VA PROVIDER
"BLD",8791,4,355.93,222)
y^n^p^^^^n^^n
"BLD",8791,4,355.93,224)

"BLD",8791,4,364.5,0)
364.5
"BLD",8791,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",8791,4,364.5,224)
I $$INCLUDE^IBY516PR(5,Y)
"BLD",8791,4,364.6,0)
364.6
"BLD",8791,4,364.6,222)
n^n^f^^n^^y^o^n
"BLD",8791,4,364.6,223)

"BLD",8791,4,364.6,224)
I $$INCLUDE^IBY516PR(6,Y)
"BLD",8791,4,364.7,0)
364.7
"BLD",8791,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",8791,4,364.7,224)
I $$INCLUDE^IBY516PR(7,Y)
"BLD",8791,4,399,0)
399
"BLD",8791,4,399,2,0)
^9.641^399.041^5
"BLD",8791,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",8791,4,399,2,399,1,0)
^9.6411^261^7
"BLD",8791,4,399,2,399,1,261,0)
PROPERTY/CASUALTY CLAIM NUMBER
"BLD",8791,4,399,2,399,1,371,0)
PRIMARY NODE 7
"BLD",8791,4,399,2,399,1,372,0)
SECONDARY NODE 7
"BLD",8791,4,399,2,399,1,373,0)
TERTIARY NODE 7
"BLD",8791,4,399,2,399,1,471,0)
PRIMARY INSURANCE HPID
"BLD",8791,4,399,2,399,1,472,0)
SECONDARY INSURANCE HPID
"BLD",8791,4,399,2,399,1,473,0)
TERTIARY INSURANCE HPID
"BLD",8791,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",8791,4,399,2,399.0304,1,0)
^9.6411^51^3
"BLD",8791,4,399,2,399.0304,1,51,0)
PROCEDURE DESCRIPTION
"BLD",8791,4,399,2,399.0304,1,53,0)
NDC
"BLD",8791,4,399,2,399.0304,1,54,0)
UNITS
"BLD",8791,4,399,2,399.04,0)
CONDITION CODE  (sub-file)
"BLD",8791,4,399,2,399.04,1,0)
^9.6411^.01^1
"BLD",8791,4,399,2,399.04,1,.01,0)
CONDITION CODE
"BLD",8791,4,399,2,399.041,0)
OCCURRENCE CODE  (sub-file)
"BLD",8791,4,399,2,399.041,1,0)
^9.6411^.01^1
"BLD",8791,4,399,2,399.041,1,.01,0)
OCCURRENCE CODE
"BLD",8791,4,399,2,399.047,0)
VALUE CODE  (sub-file)
"BLD",8791,4,399,2,399.047,1,0)
^9.6411^.01^1
"BLD",8791,4,399,2,399.047,1,.01,0)
VALUE CODE
"BLD",8791,4,399,222)
y^n^p^^^^n^^n
"BLD",8791,4,399,224)

"BLD",8791,4,"APDD",2,2.312)

"BLD",8791,4,"APDD",2,2.312,20)

"BLD",8791,4,"APDD",2,2.312,21)

"BLD",8791,4,"APDD",36,36)

"BLD",8791,4,"APDD",36,36,4.07)

"BLD",8791,4,"APDD",36,36,4.11)

"BLD",8791,4,"APDD",36,36,4.12)

"BLD",8791,4,"APDD",36,36,4.13)

"BLD",8791,4,"APDD",350.9,350.9)

"BLD",8791,4,"APDD",350.9,350.9,11.04)

"BLD",8791,4,"APDD",350.9,350.9004)

"BLD",8791,4,"APDD",350.9,350.9004,.01)

"BLD",8791,4,"APDD",350.9,350.929)

"BLD",8791,4,"APDD",355.3,355.3)

"BLD",8791,4,"APDD",355.3,355.3,.15)

"BLD",8791,4,"APDD",355.93,355.93)

"BLD",8791,4,"APDD",355.93,355.93,.17)

"BLD",8791,4,"APDD",355.93,355.93,.18)

"BLD",8791,4,"APDD",399,399)

"BLD",8791,4,"APDD",399,399,261)

"BLD",8791,4,"APDD",399,399,371)

"BLD",8791,4,"APDD",399,399,372)

"BLD",8791,4,"APDD",399,399,373)

"BLD",8791,4,"APDD",399,399,471)

"BLD",8791,4,"APDD",399,399,472)

"BLD",8791,4,"APDD",399,399,473)

"BLD",8791,4,"APDD",399,399.0304)

"BLD",8791,4,"APDD",399,399.0304,51)

"BLD",8791,4,"APDD",399,399.0304,53)

"BLD",8791,4,"APDD",399,399.0304,54)

"BLD",8791,4,"APDD",399,399.04)

"BLD",8791,4,"APDD",399,399.04,.01)

"BLD",8791,4,"APDD",399,399.041)

"BLD",8791,4,"APDD",399,399.041,.01)

"BLD",8791,4,"APDD",399,399.047)

"BLD",8791,4,"APDD",399,399.047,.01)

"BLD",8791,4,"B",2,2)

"BLD",8791,4,"B",36,36)

"BLD",8791,4,"B",350.9,350.9)

"BLD",8791,4,"B",355.3,355.3)

"BLD",8791,4,"B",355.93,355.93)

"BLD",8791,4,"B",364.5,364.5)

"BLD",8791,4,"B",364.6,364.6)

"BLD",8791,4,"B",364.7,364.7)

"BLD",8791,4,"B",399,399)

"BLD",8791,6.3)
123
"BLD",8791,"ABPKG")
n
"BLD",8791,"INI")
IBY516PR
"BLD",8791,"INIT")
IBY516PO
"BLD",8791,"KRN",0)
^9.67PA^779.2^20
"BLD",8791,"KRN",.4,0)
.4
"BLD",8791,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",8791,"KRN",.4,"NM",1,0)
IBNOTVER    FILE #2^2^0
"BLD",8791,"KRN",.4,"NM","B","IBNOTVER    FILE #2",1)

"BLD",8791,"KRN",.401,0)
.401
"BLD",8791,"KRN",.402,0)
.402
"BLD",8791,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",8791,"KRN",.402,"NM",1,0)
IB SCREEN3    FILE #399^399^0
"BLD",8791,"KRN",.402,"NM",2,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",8791,"KRN",.402,"NM","B","IB SCREEN3    FILE #399",1)

"BLD",8791,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",2)

"BLD",8791,"KRN",.403,0)
.403
"BLD",8791,"KRN",.5,0)
.5
"BLD",8791,"KRN",.84,0)
.84
"BLD",8791,"KRN",3.6,0)
3.6
"BLD",8791,"KRN",3.8,0)
3.8
"BLD",8791,"KRN",9.2,0)
9.2
"BLD",8791,"KRN",9.8,0)
9.8
"BLD",8791,"KRN",9.8,"NM",0)
^9.68A^166^120
"BLD",8791,"KRN",9.8,"NM",1,0)
IBCBB7^^0^B28514446
"BLD",8791,"KRN",9.8,"NM",2,0)
IBCU7^^0^B111564056
"BLD",8791,"KRN",9.8,"NM",3,0)
IBCBB11^^0^B95727608
"BLD",8791,"KRN",9.8,"NM",6,0)
IBCSC4D^^0^B75384760
"BLD",8791,"KRN",9.8,"NM",7,0)
IBTUBO^^0^B35610159
"BLD",8791,"KRN",9.8,"NM",8,0)
IBTUBOA^^0^B37900623
"BLD",8791,"KRN",9.8,"NM",9,0)
IBTUBO1^^0^B62446159
"BLD",8791,"KRN",9.8,"NM",10,0)
IBTUBO3^^0^B28228475
"BLD",8791,"KRN",9.8,"NM",13,0)
IBJTLA1^^0^B11361045
"BLD",8791,"KRN",9.8,"NM",15,0)
IBJTLB1^^0^B11794378
"BLD",8791,"KRN",9.8,"NM",16,0)
IBJTCA1^^0^B59453492
"BLD",8791,"KRN",9.8,"NM",17,0)
IBCECOB1^^0^B141608790
"BLD",8791,"KRN",9.8,"NM",18,0)
IBCAPP2^^0^B49339546
"BLD",8791,"KRN",9.8,"NM",19,0)
IBCEF78^^0^B7140538
"BLD",8791,"KRN",9.8,"NM",20,0)
IBCEF72^^0^B57296289
"BLD",8791,"KRN",9.8,"NM",21,0)
IBCEF22^^0^B90984490
"BLD",8791,"KRN",9.8,"NM",22,0)
IBCF23A^^0^B20324273
"BLD",8791,"KRN",9.8,"NM",23,0)
IBCEF11^^0^B80990662
"BLD",8791,"KRN",9.8,"NM",24,0)
IBCC^^0^B65165308
"BLD",8791,"KRN",9.8,"NM",25,0)
IBCEP8^^0^B134052747
"BLD",8791,"KRN",9.8,"NM",26,0)
IBJPS^^0^B4384435
"BLD",8791,"KRN",9.8,"NM",27,0)
IBJPS2^^0^B45274108
"BLD",8791,"KRN",9.8,"NM",28,0)
IBJPS3^^0^B111722417
"BLD",8791,"KRN",9.8,"NM",29,0)
IBJPS4^^0^B36439628
"BLD",8791,"KRN",9.8,"NM",32,0)
IBCNSC1^^0^B80307925
"BLD",8791,"KRN",9.8,"NM",33,0)
IBCNSGE^^0^B98010090
"BLD",8791,"KRN",9.8,"NM",34,0)
IBCNSGM^^0^B42739860
"BLD",8791,"KRN",9.8,"NM",35,0)
IBVCB^^0^B123320263
"BLD",8791,"KRN",9.8,"NM",36,0)
IBVCB1^^0^B135425175
"BLD",8791,"KRN",9.8,"NM",38,0)
IBTUBO2^^0^B49823798
"BLD",8791,"KRN",9.8,"NM",39,0)
IBY516PO^^0^B4162987
"BLD",8791,"KRN",9.8,"NM",40,0)
IBCECOB^^0^B27628888
"BLD",8791,"KRN",9.8,"NM",41,0)
IBCEP81^^0^B67515820
"BLD",8791,"KRN",9.8,"NM",42,0)
IBCEP8B^^0^B35610752
"BLD",8791,"KRN",9.8,"NM",43,0)
IBJTCA2^^0^B40902439
"BLD",8791,"KRN",9.8,"NM",44,0)
IBCD3^^0^B32514703
"BLD",8791,"KRN",9.8,"NM",45,0)
IBY516PR^^0^B10110091
"BLD",8791,"KRN",9.8,"NM",47,0)
IBATLM3A^^0^B24217228
"BLD",8791,"KRN",9.8,"NM",48,0)
IBBFAPI^^0^B43892084
"BLD",8791,"KRN",9.8,"NM",51,0)
IBCEF21^^0^B23973664
"BLD",8791,"KRN",9.8,"NM",53,0)
IBCEOB01^^0^B25712240
"BLD",8791,"KRN",9.8,"NM",54,0)
IBCEQ1A^^0^B67430449
"BLD",8791,"KRN",9.8,"NM",55,0)
IBCF21^^0^B16291620
"BLD",8791,"KRN",9.8,"NM",56,0)
IBCF31^^0^B19880263
"BLD",8791,"KRN",9.8,"NM",58,0)
IBCNBLP^^0^B28291070
"BLD",8791,"KRN",9.8,"NM",59,0)
IBCNBLP1^^0^B34470080
"BLD",8791,"KRN",9.8,"NM",60,0)
IBCNEHLQ^^0^B49920378
"BLD",8791,"KRN",9.8,"NM",62,0)
IBCNRP5^^0^B56117515
"BLD",8791,"KRN",9.8,"NM",63,0)
IBCNRPM1^^0^B7640127
"BLD",8791,"KRN",9.8,"NM",64,0)
IBCNRPS2^^0^B24644732
"BLD",8791,"KRN",9.8,"NM",65,0)
IBCNRRP3^^0^B58110020
"BLD",8791,"KRN",9.8,"NM",67,0)
IBCNS^^0^B28265165
"BLD",8791,"KRN",9.8,"NM",68,0)
IBCNS1^^0^B42707809
"BLD",8791,"KRN",9.8,"NM",69,0)
IBCNS2^^0^B29335309
"BLD",8791,"KRN",9.8,"NM",70,0)
IBCNS3^^0^B60729122
"BLD",8791,"KRN",9.8,"NM",71,0)
IBCNSBL1^^0^B37090504
"BLD",8791,"KRN",9.8,"NM",72,0)
IBCNSC3^^0^B18386728
"BLD",8791,"KRN",9.8,"NM",73,0)
IBCNSJ2^^0^B22855491
"BLD",8791,"KRN",9.8,"NM",74,0)
IBCNSJ4^^0^B30114071
"BLD",8791,"KRN",9.8,"NM",75,0)
IBCNSJ5^^0^B19961411
"BLD",8791,"KRN",9.8,"NM",76,0)
IBCNSM2^^0^B21200856
"BLD",8791,"KRN",9.8,"NM",77,0)
IBCNSM3^^0^B15749953
"BLD",8791,"KRN",9.8,"NM",79,0)
IBCNSMM^^0^B21594622
"BLD",8791,"KRN",9.8,"NM",80,0)
IBCNSP11^^0^B11721673
"BLD",8791,"KRN",9.8,"NM",81,0)
IBCNSUR1^^0^B57694333
"BLD",8791,"KRN",9.8,"NM",82,0)
IBCNSUX1^^0^B20451867
"BLD",8791,"KRN",9.8,"NM",83,0)
IBCOMA1^^0^B34536686
"BLD",8791,"KRN",9.8,"NM",85,0)
IBCONS1^^0^B79511698
"BLD",8791,"KRN",9.8,"NM",86,0)
IBCOPP2^^0^B20749250
"BLD",8791,"KRN",9.8,"NM",87,0)
IBCSCE1^^0^B7430380
"BLD",8791,"KRN",9.8,"NM",88,0)
IBJDF51^^0^B58912743
"BLD",8791,"KRN",9.8,"NM",90,0)
IBJTU1^^0^B7959085
"BLD",8791,"KRN",9.8,"NM",91,0)
IBJTU31^^0^B8926798
"BLD",8791,"KRN",9.8,"NM",94,0)
IBNCPDP3^^0^B84489638
"BLD",8791,"KRN",9.8,"NM",95,0)
IBNCPDS1^^0^B11865744
"BLD",8791,"KRN",9.8,"NM",96,0)
IBNCPEV^^0^B102192248
"BLD",8791,"KRN",9.8,"NM",97,0)
IBNCPEV1^^0^B67774383
"BLD",8791,"KRN",9.8,"NM",98,0)
IBRBUL^^0^B39836566
"BLD",8791,"KRN",9.8,"NM",99,0)
IBRFN3^^0^B30451954
"BLD",8791,"KRN",9.8,"NM",100,0)
IBRFN4^^0^B27444633
"BLD",8791,"KRN",9.8,"NM",101,0)
IBTRCD0^^0^B16868309
"BLD",8791,"KRN",9.8,"NM",102,0)
IBCEF79^^0^B118916763
"BLD",8791,"KRN",9.8,"NM",103,0)
IBCNSM5^^0^B22650774
"BLD",8791,"KRN",9.8,"NM",107,0)
IBCRBC^^0^B13081185
"BLD",8791,"KRN",9.8,"NM",131,0)
IBCEF^^0^B64641917
"BLD",8791,"KRN",9.8,"NM",132,0)
IBCEP82^^0^B72564022
"BLD",8791,"KRN",9.8,"NM",133,0)
IBVCB2^^0^B110047132
"BLD",8791,"KRN",9.8,"NM",134,0)
IBCCC2^^0^B113680571
"BLD",8791,"KRN",9.8,"NM",135,0)
IBCEF77^^0^B27920356
"BLD",8791,"KRN",9.8,"NM",136,0)
IBCEPB^^0^B7598816
"BLD",8791,"KRN",9.8,"NM",137,0)
IBCEF73A^^0^B43076924
"BLD",8791,"KRN",9.8,"NM",138,0)
IBCEF74A^^0^B39038241
"BLD",8791,"KRN",9.8,"NM",139,0)
IBCEF76^^0^B48153213
"BLD",8791,"KRN",9.8,"NM",140,0)
IBCEFP^^0^B115631357
"BLD",8791,"KRN",9.8,"NM",141,0)
IBCSC3^^0^B37464352
"BLD",8791,"KRN",9.8,"NM",142,0)
IBTOBI1^^0^B19861632
"BLD",8791,"KRN",9.8,"NM",143,0)
IBCOPP3^^0^B10453963
"BLD",8791,"KRN",9.8,"NM",144,0)
IBCNSP0^^0^B38008161
"BLD",8791,"KRN",9.8,"NM",145,0)
IBCNBLE^^0^B108261560
"BLD",8791,"KRN",9.8,"NM",146,0)
IBCNBLE1^^0^B32419797
"BLD",8791,"KRN",9.8,"NM",147,0)
IBOTR3^^0^B31663645
"BLD",8791,"KRN",9.8,"NM",148,0)
IBTUBUL^^0^B72452562
"BLD",8791,"KRN",9.8,"NM",149,0)
IBCNRP^^0^B23991821
"BLD",8791,"KRN",9.8,"NM",150,0)
IBCNRPMT^^0^B4159618
"BLD",8791,"KRN",9.8,"NM",151,0)
IBCU74^^0^B36449231
"BLD",8791,"KRN",9.8,"NM",152,0)
IBCNSC4^^0^B18719019
"BLD",8791,"KRN",9.8,"NM",153,0)
IBCOMC2^^0^B12669229
"BLD",8791,"KRN",9.8,"NM",154,0)
IBCNSP^^0^B49297563
"BLD",8791,"KRN",9.8,"NM",155,0)
IBCNSUR^^0^B24287477
"BLD",8791,"KRN",9.8,"NM",156,0)
IBCNSJ14^^0^B9400113
"BLD",8791,"KRN",9.8,"NM",157,0)
IBCNSM31^^0^B21467883
"BLD",8791,"KRN",9.8,"NM",158,0)
IBCNSUX^^0^B16407219
"BLD",8791,"KRN",9.8,"NM",159,0)
IBCVA0^^0^B10440495
"BLD",8791,"KRN",9.8,"NM",160,0)
IBCEOB0^^0^B91995821
"BLD",8791,"KRN",9.8,"NM",161,0)
IBNCPDP5^^0^B80792303
"BLD",8791,"KRN",9.8,"NM",162,0)
IBCCC^^0^B22970985
"BLD",8791,"KRN",9.8,"NM",163,0)
IBCEF3^^0^B47786755
"BLD",8791,"KRN",9.8,"NM",164,0)
IBCEF31^^0^B14588723
"BLD",8791,"KRN",9.8,"NM",165,0)
IBCECSA4^^0^B61845851
"BLD",8791,"KRN",9.8,"NM",166,0)
IBCECOB2^^0^B183699434
"BLD",8791,"KRN",9.8,"NM","B","IBATLM3A",47)

"BLD",8791,"KRN",9.8,"NM","B","IBBFAPI",48)

"BLD",8791,"KRN",9.8,"NM","B","IBCAPP2",18)

"BLD",8791,"KRN",9.8,"NM","B","IBCBB11",3)

"BLD",8791,"KRN",9.8,"NM","B","IBCBB7",1)

"BLD",8791,"KRN",9.8,"NM","B","IBCC",24)

"BLD",8791,"KRN",9.8,"NM","B","IBCCC",162)

"BLD",8791,"KRN",9.8,"NM","B","IBCCC2",134)

"BLD",8791,"KRN",9.8,"NM","B","IBCD3",44)

"BLD",8791,"KRN",9.8,"NM","B","IBCECOB",40)

"BLD",8791,"KRN",9.8,"NM","B","IBCECOB1",17)

"BLD",8791,"KRN",9.8,"NM","B","IBCECOB2",166)

"BLD",8791,"KRN",9.8,"NM","B","IBCECSA4",165)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF",131)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF11",23)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF21",51)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF22",21)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF3",163)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF31",164)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF72",20)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF73A",137)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF74A",138)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF76",139)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF77",135)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF78",19)

"BLD",8791,"KRN",9.8,"NM","B","IBCEF79",102)

"BLD",8791,"KRN",9.8,"NM","B","IBCEFP",140)

"BLD",8791,"KRN",9.8,"NM","B","IBCEOB0",160)

"BLD",8791,"KRN",9.8,"NM","B","IBCEOB01",53)

"BLD",8791,"KRN",9.8,"NM","B","IBCEP8",25)

"BLD",8791,"KRN",9.8,"NM","B","IBCEP81",41)

"BLD",8791,"KRN",9.8,"NM","B","IBCEP82",132)

"BLD",8791,"KRN",9.8,"NM","B","IBCEP8B",42)

"BLD",8791,"KRN",9.8,"NM","B","IBCEPB",136)

"BLD",8791,"KRN",9.8,"NM","B","IBCEQ1A",54)

"BLD",8791,"KRN",9.8,"NM","B","IBCF21",55)

"BLD",8791,"KRN",9.8,"NM","B","IBCF23A",22)

"BLD",8791,"KRN",9.8,"NM","B","IBCF31",56)

"BLD",8791,"KRN",9.8,"NM","B","IBCNBLE",145)

"BLD",8791,"KRN",9.8,"NM","B","IBCNBLE1",146)

"BLD",8791,"KRN",9.8,"NM","B","IBCNBLP",58)

"BLD",8791,"KRN",9.8,"NM","B","IBCNBLP1",59)

"BLD",8791,"KRN",9.8,"NM","B","IBCNEHLQ",60)

"BLD",8791,"KRN",9.8,"NM","B","IBCNRP",149)

"BLD",8791,"KRN",9.8,"NM","B","IBCNRP5",62)

"BLD",8791,"KRN",9.8,"NM","B","IBCNRPM1",63)

"BLD",8791,"KRN",9.8,"NM","B","IBCNRPMT",150)

"BLD",8791,"KRN",9.8,"NM","B","IBCNRPS2",64)

"BLD",8791,"KRN",9.8,"NM","B","IBCNRRP3",65)

"BLD",8791,"KRN",9.8,"NM","B","IBCNS",67)

"BLD",8791,"KRN",9.8,"NM","B","IBCNS1",68)

"BLD",8791,"KRN",9.8,"NM","B","IBCNS2",69)

"BLD",8791,"KRN",9.8,"NM","B","IBCNS3",70)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSBL1",71)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSC1",32)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSC3",72)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSC4",152)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSGE",33)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSGM",34)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSJ14",156)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSJ2",73)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSJ4",74)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSJ5",75)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSM2",76)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSM3",77)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSM31",157)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSM5",103)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSMM",79)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSP",154)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSP0",144)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSP11",80)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSUR",155)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSUR1",81)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSUX",158)

"BLD",8791,"KRN",9.8,"NM","B","IBCNSUX1",82)

"BLD",8791,"KRN",9.8,"NM","B","IBCOMA1",83)

"BLD",8791,"KRN",9.8,"NM","B","IBCOMC2",153)

"BLD",8791,"KRN",9.8,"NM","B","IBCONS1",85)

"BLD",8791,"KRN",9.8,"NM","B","IBCOPP2",86)

"BLD",8791,"KRN",9.8,"NM","B","IBCOPP3",143)

"BLD",8791,"KRN",9.8,"NM","B","IBCRBC",107)

"BLD",8791,"KRN",9.8,"NM","B","IBCSC3",141)

"BLD",8791,"KRN",9.8,"NM","B","IBCSC4D",6)

"BLD",8791,"KRN",9.8,"NM","B","IBCSCE1",87)

"BLD",8791,"KRN",9.8,"NM","B","IBCU7",2)

"BLD",8791,"KRN",9.8,"NM","B","IBCU74",151)

"BLD",8791,"KRN",9.8,"NM","B","IBCVA0",159)

"BLD",8791,"KRN",9.8,"NM","B","IBJDF51",88)

"BLD",8791,"KRN",9.8,"NM","B","IBJPS",26)

"BLD",8791,"KRN",9.8,"NM","B","IBJPS2",27)

"BLD",8791,"KRN",9.8,"NM","B","IBJPS3",28)

"BLD",8791,"KRN",9.8,"NM","B","IBJPS4",29)

"BLD",8791,"KRN",9.8,"NM","B","IBJTCA1",16)

"BLD",8791,"KRN",9.8,"NM","B","IBJTCA2",43)

"BLD",8791,"KRN",9.8,"NM","B","IBJTLA1",13)

"BLD",8791,"KRN",9.8,"NM","B","IBJTLB1",15)

"BLD",8791,"KRN",9.8,"NM","B","IBJTU1",90)

"BLD",8791,"KRN",9.8,"NM","B","IBJTU31",91)

"BLD",8791,"KRN",9.8,"NM","B","IBNCPDP3",94)

"BLD",8791,"KRN",9.8,"NM","B","IBNCPDP5",161)

"BLD",8791,"KRN",9.8,"NM","B","IBNCPDS1",95)

"BLD",8791,"KRN",9.8,"NM","B","IBNCPEV",96)

"BLD",8791,"KRN",9.8,"NM","B","IBNCPEV1",97)

"BLD",8791,"KRN",9.8,"NM","B","IBOTR3",147)

"BLD",8791,"KRN",9.8,"NM","B","IBRBUL",98)

"BLD",8791,"KRN",9.8,"NM","B","IBRFN3",99)

"BLD",8791,"KRN",9.8,"NM","B","IBRFN4",100)

"BLD",8791,"KRN",9.8,"NM","B","IBTOBI1",142)

"BLD",8791,"KRN",9.8,"NM","B","IBTRCD0",101)

"BLD",8791,"KRN",9.8,"NM","B","IBTUBO",7)

"BLD",8791,"KRN",9.8,"NM","B","IBTUBO1",9)

"BLD",8791,"KRN",9.8,"NM","B","IBTUBO2",38)

"BLD",8791,"KRN",9.8,"NM","B","IBTUBO3",10)

"BLD",8791,"KRN",9.8,"NM","B","IBTUBOA",8)

"BLD",8791,"KRN",9.8,"NM","B","IBTUBUL",148)

"BLD",8791,"KRN",9.8,"NM","B","IBVCB",35)

"BLD",8791,"KRN",9.8,"NM","B","IBVCB1",36)

"BLD",8791,"KRN",9.8,"NM","B","IBVCB2",133)

"BLD",8791,"KRN",9.8,"NM","B","IBY516PO",39)

"BLD",8791,"KRN",9.8,"NM","B","IBY516PR",45)

"BLD",8791,"KRN",19,0)
19
"BLD",8791,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",8791,"KRN",19,"NM",1,0)
IB COPY AND CANCEL^^0
"BLD",8791,"KRN",19,"NM",2,0)
IBCN INS BILL PROV FLAG RPT^^1^
"BLD",8791,"KRN",19,"NM",3,0)
IB VIEW CANCEL BILL^^0
"BLD",8791,"KRN",19,"NM",4,0)
IB THIRD PARTY BILLING MENU^^2
"BLD",8791,"KRN",19,"NM","B","IB COPY AND CANCEL",1)

"BLD",8791,"KRN",19,"NM","B","IB THIRD PARTY BILLING MENU",4)

"BLD",8791,"KRN",19,"NM","B","IB VIEW CANCEL BILL",3)

"BLD",8791,"KRN",19,"NM","B","IBCN INS BILL PROV FLAG RPT",2)

"BLD",8791,"KRN",19.1,0)
19.1
"BLD",8791,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",8791,"KRN",19.1,"NM",1,0)
IB EDIT PAY-TO^^0
"BLD",8791,"KRN",19.1,"NM",2,0)
IB EDIT PAY-TO TC^^0
"BLD",8791,"KRN",19.1,"NM","B","IB EDIT PAY-TO",1)

"BLD",8791,"KRN",19.1,"NM","B","IB EDIT PAY-TO TC",2)

"BLD",8791,"KRN",101,0)
101
"BLD",8791,"KRN",101,"NM",0)
^9.68A^19^14
"BLD",8791,"KRN",101,"NM",1,0)
IBJP IB PAY-TO PROVIDER ADD^^0
"BLD",8791,"KRN",101,"NM",2,0)
IBJP IB PAY-TO PROVIDER DEL^^0
"BLD",8791,"KRN",101,"NM",3,0)
IBJP IB PAY-TO PROVIDER EDIT^^0
"BLD",8791,"KRN",101,"NM",4,0)
IBJP IB PAY-TO DIVISION ADD^^0
"BLD",8791,"KRN",101,"NM",5,0)
IBJP IB TRICARE PAY-TO PROVIDERS MENU^^0
"BLD",8791,"KRN",101,"NM",6,0)
IBJP IB TRICARE PAY-TO PROVIDER ADD^^0
"BLD",8791,"KRN",101,"NM",7,0)
IBJP IB TRICARE PAY-TO PROVIDER DEL^^0
"BLD",8791,"KRN",101,"NM",8,0)
IBJP IB TRICARE PAY-TO PROVIDER EDIT^^0
"BLD",8791,"KRN",101,"NM",9,0)
IBJP IB TRICARE PAY-TO PROVIDER DIVISIONS^^0
"BLD",8791,"KRN",101,"NM",10,0)
IBJP IB TRICARE PAY-TO ASSOCIATIONS MENU^^0
"BLD",8791,"KRN",101,"NM",11,0)
IBJP IB TRICARE PAY-TO DIVISION ADD^^0
"BLD",8791,"KRN",101,"NM",17,0)
IBJP IB PAY-TO PROVIDERS MENU^^0
"BLD",8791,"KRN",101,"NM",18,0)
IBCEM CSA CANCEL/CLONE BILL^^0
"BLD",8791,"KRN",101,"NM",19,0)
IBCEM CSA MSG MENU^^2
"BLD",8791,"KRN",101,"NM","B","IBCEM CSA CANCEL/CLONE BILL",18)

"BLD",8791,"KRN",101,"NM","B","IBCEM CSA MSG MENU",19)

"BLD",8791,"KRN",101,"NM","B","IBJP IB PAY-TO DIVISION ADD",4)

"BLD",8791,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDER ADD",1)

"BLD",8791,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDER DEL",2)

"BLD",8791,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDER EDIT",3)

"BLD",8791,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDERS MENU",17)

"BLD",8791,"KRN",101,"NM","B","IBJP IB TRICARE PAY-TO ASSOCIATIONS MENU",10)

"BLD",8791,"KRN",101,"NM","B","IBJP IB TRICARE PAY-TO DIVISION ADD",11)

"BLD",8791,"KRN",101,"NM","B","IBJP IB TRICARE PAY-TO PROVIDER ADD",6)

"BLD",8791,"KRN",101,"NM","B","IBJP IB TRICARE PAY-TO PROVIDER DEL",7)

"BLD",8791,"KRN",101,"NM","B","IBJP IB TRICARE PAY-TO PROVIDER DIVISIONS",9)

"BLD",8791,"KRN",101,"NM","B","IBJP IB TRICARE PAY-TO PROVIDER EDIT",8)

"BLD",8791,"KRN",101,"NM","B","IBJP IB TRICARE PAY-TO PROVIDERS MENU",5)

"BLD",8791,"KRN",409.61,0)
409.61
"BLD",8791,"KRN",409.61,"NM",0)
^9.68A^4^4
"BLD",8791,"KRN",409.61,"NM",1,0)
IBJP IB PAY-TO PROVIDERS^^0
"BLD",8791,"KRN",409.61,"NM",2,0)
IBJP IB PAY-TO ASSOCIATIONS^^0
"BLD",8791,"KRN",409.61,"NM",3,0)
IBJP IB TRICARE PAY-TO PROVS^^0
"BLD",8791,"KRN",409.61,"NM",4,0)
IBJP IB TRICARE PAY-TO ASSOCS^^0
"BLD",8791,"KRN",409.61,"NM","B","IBJP IB PAY-TO ASSOCIATIONS",2)

"BLD",8791,"KRN",409.61,"NM","B","IBJP IB PAY-TO PROVIDERS",1)

"BLD",8791,"KRN",409.61,"NM","B","IBJP IB TRICARE PAY-TO ASSOCS",4)

"BLD",8791,"KRN",409.61,"NM","B","IBJP IB TRICARE PAY-TO PROVS",3)

"BLD",8791,"KRN",771,0)
771
"BLD",8791,"KRN",771,"NM",0)
^9.68A^^
"BLD",8791,"KRN",779.2,0)
779.2
"BLD",8791,"KRN",870,0)
870
"BLD",8791,"KRN",8989.51,0)
8989.51
"BLD",8791,"KRN",8989.52,0)
8989.52
"BLD",8791,"KRN",8994,0)
8994
"BLD",8791,"KRN","B",.4,.4)

"BLD",8791,"KRN","B",.401,.401)

"BLD",8791,"KRN","B",.402,.402)

"BLD",8791,"KRN","B",.403,.403)

"BLD",8791,"KRN","B",.5,.5)

"BLD",8791,"KRN","B",.84,.84)

"BLD",8791,"KRN","B",3.6,3.6)

"BLD",8791,"KRN","B",3.8,3.8)

"BLD",8791,"KRN","B",9.2,9.2)

"BLD",8791,"KRN","B",9.8,9.8)

"BLD",8791,"KRN","B",19,19)

"BLD",8791,"KRN","B",19.1,19.1)

"BLD",8791,"KRN","B",101,101)

"BLD",8791,"KRN","B",409.61,409.61)

"BLD",8791,"KRN","B",771,771)

"BLD",8791,"KRN","B",779.2,779.2)

"BLD",8791,"KRN","B",870,870)

"BLD",8791,"KRN","B",8989.51,8989.51)

"BLD",8791,"KRN","B",8989.52,8989.52)

"BLD",8791,"KRN","B",8994,8994)

"BLD",8791,"QDEF")
^^^^^^^^YES
"BLD",8791,"QUES",0)
^9.62^^
"BLD",8791,"REQB",0)
^9.611^21^21
"BLD",8791,"REQB",1,0)
IB*2.0*66^1
"BLD",8791,"REQB",2,0)
IB*2.0*68^1
"BLD",8791,"REQB",3,0)
IB*2.0*93^1
"BLD",8791,"REQB",4,0)
IB*2.0*139^1
"BLD",8791,"REQB",5,0)
IB*2.0*370^1
"BLD",8791,"REQB",6,0)
IB*2.0*404^1
"BLD",8791,"REQB",7,0)
IB*2.0*437^1
"BLD",8791,"REQB",8,0)
IB*2.0*448^1
"BLD",8791,"REQB",9,0)
IB*2.0*451^1
"BLD",8791,"REQB",10,0)
IB*2.0*458^1
"BLD",8791,"REQB",11,0)
IB*2.0*488^1
"BLD",8791,"REQB",12,0)
IB*2.0*494^1
"BLD",8791,"REQB",13,0)
IB*2.0*497^1
"BLD",8791,"REQB",14,0)
IB*2.0*506^1
"BLD",8791,"REQB",15,0)
IB*2.0*515^1
"BLD",8791,"REQB",16,0)
IB*2.0*519^1
"BLD",8791,"REQB",17,0)
IB*2.0*431^1
"BLD",8791,"REQB",18,0)
IB*2.0*476^1
"BLD",8791,"REQB",19,0)
IB*2.0*533^1
"BLD",8791,"REQB",20,0)
IB*2.0*526^1
"BLD",8791,"REQB",21,0)
IB*2.0*521^1
"BLD",8791,"REQB","B","IB*2.0*139",4)

"BLD",8791,"REQB","B","IB*2.0*370",5)

"BLD",8791,"REQB","B","IB*2.0*404",6)

"BLD",8791,"REQB","B","IB*2.0*431",17)

"BLD",8791,"REQB","B","IB*2.0*437",7)

"BLD",8791,"REQB","B","IB*2.0*448",8)

"BLD",8791,"REQB","B","IB*2.0*451",9)

"BLD",8791,"REQB","B","IB*2.0*458",10)

"BLD",8791,"REQB","B","IB*2.0*476",18)

"BLD",8791,"REQB","B","IB*2.0*488",11)

"BLD",8791,"REQB","B","IB*2.0*494",12)

"BLD",8791,"REQB","B","IB*2.0*497",13)

"BLD",8791,"REQB","B","IB*2.0*506",14)

"BLD",8791,"REQB","B","IB*2.0*515",15)

"BLD",8791,"REQB","B","IB*2.0*519",16)

"BLD",8791,"REQB","B","IB*2.0*521",21)

"BLD",8791,"REQB","B","IB*2.0*526",20)

"BLD",8791,"REQB","B","IB*2.0*533",19)

"BLD",8791,"REQB","B","IB*2.0*66",1)

"BLD",8791,"REQB","B","IB*2.0*68",2)

"BLD",8791,"REQB","B","IB*2.0*93",3)

"DATA",364.5,199,0)
N-ALL INSURANCE GROUP NAME^N^E^G^399^^^
"DATA",364.5,199,1)
D GRPNAME^IBCEF31(IBXIEN,.IBXDATA)
"DATA",364.5,199,3,0)
^^8^8^3140602^
"DATA",364.5,199,3,1,0)
Populates the IBXDATA(z) array with the primary, secondary and tertiary 
"DATA",364.5,199,3,2,0)
insurance group names for bill IBXIEN, if any.  Fields are pulled in this 
"DATA",364.5,199,3,3,0)
order:
"DATA",364.5,199,3,4,0)
GROUP NAME from ^IBA(355.3,Plan,2);1, where Plan is 
"DATA",364.5,199,3,5,0)
^DGCR(399,IBXIEN,"I"_z);18.  If blank, then *GROUP NAME from 
"DATA",364.5,199,3,6,0)
^IBA(355.3,Plan,0);3.  If blank, then NAME from ^DIC(36,Ins,0);1, where 
"DATA",364.5,199,3,7,0)
Ins is ^DGCR(399,IBXIEN,"I"_z);1.
"DATA",364.5,199,3,8,0)
MRD;IB*2.0*516.
"DATA",364.5,200,0)
N-ALL INSURANCE GROUP NUMBER^N^E^G^399^^^
"DATA",364.5,200,1)
D GRPNUM^IBCEF31(IBXIEN,.IBXDATA)
"DATA",364.5,200,3,0)
^^7^7^3140602^
"DATA",364.5,200,3,1,0)
Populates the IBXDATA(z) array with the primary, secondary and tertiary 
"DATA",364.5,200,3,2,0)
insurance group numbers for bill IBXIEN, if any.  Fields are pulled in 
"DATA",364.5,200,3,3,0)
this order: 
"DATA",364.5,200,3,4,0)
GROUP NUMBER from ^IBA(355.3,Plan,2);2, where Plan is 
"DATA",364.5,200,3,5,0)
^DGCR(399,IBXIEN,"I"_z);18.  If blank, then *GROUP NUMBER from 
"DATA",364.5,200,3,6,0)
^IBA(355.3,Plan,0);4.
"DATA",364.5,200,3,7,0)
MRD;IB*2.0*516.
"DATA",364.6,66,0)
8^N^^50^1^^0^26^3^BLANK^0^1
"DATA",364.6,127,0)
8^N^^185^1^^0^6^8^BLANK^^1
"DATA",364.6,132,0)
8^N^^185^1^^0^11^8^BLANK^^1
"DATA",364.6,483,0)
8^N^^180^1^^0^10^8^Service DT To^^1
"DATA",364.6,810,0)
8^N^^115^1^^0^4^15^BLANK^^1
"DATA",364.6,811,0)
8^N^^115^1^^0^5^15^BLANK^^1
"DATA",364.6,812,0)
8^N^^115^1^^0^6^15^BLANK^^1
"DATA",364.6,958,0)
8^N^^185^1^^0^14^2^Service ID Qualifier^0^1
"DATA",364.6,964,0)
8^N^^115^1^^0^13^3^BLANK^0^1
"DATA",364.6,974,0)
8^N^^180^1^^0^21^2^Service ID Qualifier^0^1
"DATA",364.6,975,0)
8^N^^180^1^^0^22^48^NDC^0^1
"DATA",364.6,977,0)
8^N^^180^1^^0^23^15^National Drug Unit Count^0^1
"DATA",364.6,979,0)
8^N^^180^1^^0^25^2^Unit or Basis of Measurement Code^0^1
"DATA",364.6,1014,0)
8^N^^5^1^^0^7^13^X12 Version Number for HIPAA^0^1
"DATA",364.6,1029,0)
8^N^^40^1^^0^17^2^BLANK^0^1^0
"DATA",364.6,1030,0)
8^N^^40^1^^0^18^10^BLANK^0^1^0
"DATA",364.6,1031,0)
8^N^^40^1^^0^19^1^BLANK^0^1^0
"DATA",364.6,1034,0)
8^N^^51^1^^0^4^8^BLANK^0^1^0
"DATA",364.6,1043,0)
8^N^^57^1^^0^4^35^BLANK^0^1^0
"DATA",364.6,1839,0)
8^N^^114^1^^0^9^2^Other Payer ID Qualifier^0^1
"DATA",364.6,1840,0)
8^N^^114^1^^0^10^30^Other Payer Primary ID (HPID)^0^1
"DATA",364.6,1851,0)
8^N^^114^1^^0^10.1^^PAYER SEC ID CLEAR^1^1
"DATA",364.6,2059,0)
8^N^^191^1^^0^9^2^BLANK^0^1
"DATA",364.6,2060,0)
8^N^^191^1^^0^10^25^BLANK^0^1
"DATA",364.6,2231,0)
8^N^^37^1^^^9^80^Payer Primary ID (HPID)^0^1^0
"DATA",364.6,2235,0)
8^N^^185^1^^0^15^48^NDC^0
"DATA",364.6,2236,0)
8^N^^185^1^^^16^15^National Drug Unit Count^0
"DATA",364.6,2237,0)
8^N^^185^1^^^17^2^Unit or Basis of Measurement Code^0
"DATA",364.6,2251,0)
8^N^^37^1^^^8^2^Payer ID Qualifier^0
"DATA",364.6,2252,0)
8^N^^191^1^^^15^80^Description (NOC Procedure)^0
"DATA",364.7,37,0)
139^N^16^^^^N
"DATA",364.7,37,1)
K:$$FT^IBCEF(IBXIEN)=2!'$$INPAT^IBCEF(IBXIEN) IBXDATA N Z S Z=0 F  S Z=$O(IBXDATA(Z)) K:'Z IBXDATA Q:'Z  I '$D(IBXDATA(Z,"M")) S IBXSAVE("PROC",Z)=IBXDATA(Z) I Z'<12 K IBXDATA Q
"DATA",364.7,37,3,0)
^364.73^6^6^3140812^^^^
"DATA",364.7,37,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,37,3,2,0)
possible for the data element in the IBXDATA array.  If an institutional
"DATA",364.7,37,3,3,0)
bill or if the bill is professional and the procedure being extracted was
"DATA",364.7,37,3,4,0)
not added as a result of being a modifier with a 5-digit code starting with
"DATA",364.7,37,3,5,0)
0 ("M" node does not exist), save in an IBXSAVE array for later use.  No
"DATA",364.7,37,3,6,0)
output.
"DATA",364.7,69,0)
66^N^5^^^^N
"DATA",364.7,69,1)
K IBXDATA
"DATA",364.7,69,3,0)
^364.73^1^1^3140807^^
"DATA",364.7,69,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,88,0)
1029^N^5^^^^N^0
"DATA",364.7,88,1)
S IBXDATA=""
"DATA",364.7,88,3,0)
^^1^1^3140416^
"DATA",364.7,88,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,89,0)
1030^N^5^^^^N^0
"DATA",364.7,89,1)
S IBXDATA=""
"DATA",364.7,89,3,0)
^^1^1^3140416^
"DATA",364.7,89,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,110,0)
1031^N^5^^^^N^0
"DATA",364.7,110,1)
S IBXDATA=""
"DATA",364.7,110,3,0)
^^1^1^3140416^
"DATA",364.7,110,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,179,0)
127^N^5^^^^N
"DATA",364.7,179,1)
S IBXDATA=""
"DATA",364.7,179,3,0)
^^1^1^3140416^
"DATA",364.7,179,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,184,0)
132^N^5^^^^N
"DATA",364.7,184,1)
S IBXDATA=""
"DATA",364.7,184,3,0)
^364.73^1^1^3140416^^
"DATA",364.7,184,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,192,0)
1034^N^5^^^^N^0
"DATA",364.7,192,1)
S IBXDATA=""
"DATA",364.7,192,3,0)
^^1^1^3140416^
"DATA",364.7,192,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,205,0)
1041^N^274^^^^N^0
"DATA",364.7,205,1)
S IBXDATA=$$SNDS2^IBCEFP(.IBXDATA,2)
"DATA",364.7,205,3,0)
^^8^8^3140728^
"DATA",364.7,205,3,1,0)
If the service is performed at an outside facility, output the
"DATA",364.7,205,3,2,0)
service facility type of facility if defined for the outside facility.
"DATA",364.7,205,3,3,0)
If none defined, output the default of 'FA' for non-lab and 'LI' for lab.
"DATA",364.7,205,3,4,0)
With Patch IB*2.0*432 always send '77' if the record is created.
"DATA",364.7,205,3,5,0)
With Patch IB*2.0*447 always send if Facility Name is defined in SUB 
"DATA",364.7,205,3,6,0)
record.  Check by using $$SENDSF^IBCEF79(IBXIEN).
"DATA",364.7,205,3,7,0)
MRD;IB*2.0*516 - The function $$SENDSF^IBCEF79 now will always return
"DATA",364.7,205,3,8,0)
'1'.
"DATA",364.7,206,0)
1042^N^274^^^^N^0
"DATA",364.7,206,1)
S IBXDATA=$$SNDS2^IBCEFP(.IBXDATA,3)
"DATA",364.7,206,3,0)
^^7^7^3140728^
"DATA",364.7,206,3,1,0)
Output the service facility entity as a non-person (2) if service was
"DATA",364.7,206,3,2,0)
performed at an outside facility.
"DATA",364.7,206,3,3,0)
With Patch IB*2.0*432 always send 2 if the record is created.
"DATA",364.7,206,3,4,0)
With Patch IB*2.0*447 always send 2 if the Facility Name is defined in 
"DATA",364.7,206,3,5,0)
the SUB record. Determine by using $$SENDSF^IBCEF79(IBXIEN).
"DATA",364.7,206,3,6,0)
MRD;IB*2.0*516 - The function $$SENDSF^IBCEF79 now will always return
"DATA",364.7,206,3,7,0)
'1'.
"DATA",364.7,207,0)
1043^N^268^^^^N^0
"DATA",364.7,207,1)
S IBXDATA=""
"DATA",364.7,207,3,0)
^^1^1^3140416^
"DATA",364.7,207,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,475,0)
483^N^5^^^^N
"DATA",364.7,475,1)
K IBXDATA N Z,Z0,A,A1 S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  S A=$P(IBXSAVE("OUTPT",Z),U),A1=$P(IBXSAVE("OUTPT",Z),U,2),Z0=$S('$$INPAT^IBCEF(IBXIEN):$S(A:A,1:A1),1:A1) I Z0 S IBXDATA(Z)=Z0
"DATA",364.7,475,3,0)
^^4^4^3140714^
"DATA",364.7,475,3,1,0)
This is a group data element so more than 1 occurrence of a value is 
"DATA",364.7,475,3,2,0)
possible for the data element in the previously extract IBXSAVE array.  
"DATA",364.7,475,3,3,0)
If any service line data is found, the data is output.  Data is taken 
"DATA",364.7,475,3,4,0)
from the 'from' date if there is no 'to' date.
"DATA",364.7,829,0)
810^N^5^^^^N
"DATA",364.7,829,1)
S IBXDATA=""
"DATA",364.7,829,3,0)
^^1^1^3140416^
"DATA",364.7,829,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,840,0)
811^N^5^^^^N
"DATA",364.7,840,1)
S IBXDATA=""
"DATA",364.7,840,3,0)
^^1^1^3140416^
"DATA",364.7,840,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,842,0)
812^N^5^^^^N
"DATA",364.7,842,1)
S IBXDATA=""
"DATA",364.7,842,3,0)
^^1^1^3140416^
"DATA",364.7,842,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,933,0)
958^N^5^^^^N
"DATA",364.7,933,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  I $P(IBXSAVE("INPT",Z),U,11)'="" S IBXDATA(Z)="N4"
"DATA",364.7,933,3,0)
^364.73^1^1^3140305^^^^
"DATA",364.7,933,3,1,0)
If data element's value is null, do not output.
"DATA",364.7,939,0)
977^N^5^^^^N
"DATA",364.7,939,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  I $P(IBXSAVE("OUTPT",Z),U,16)'="" S IBXDATA(Z)=$P(IBXSAVE("OUTPT",Z),U,16)
"DATA",364.7,939,3,0)
^364.73^1^1^3140414^^^^
"DATA",364.7,939,3,1,0)
This element is blank.
"DATA",364.7,941,0)
979^N^5^^^^N
"DATA",364.7,941,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  I $P(IBXSAVE("OUTPT",Z),U,16)'="" S IBXDATA(Z)="UN"
"DATA",364.7,941,3,0)
^364.73^1^1^3140414^^^^
"DATA",364.7,941,3,1,0)
This element is blank.
"DATA",364.7,952,0)
974^N^5^^^^N
"DATA",364.7,952,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  I $P(IBXSAVE("OUTPT",Z),U,15)'="" S IBXDATA(Z)="N4"
"DATA",364.7,952,3,0)
^^1^1^3140305^
"DATA",364.7,952,3,1,0)
Added NDC code in piece 22 as part of IB*2.0*516.
"DATA",364.7,953,0)
975^N^5^^^^N
"DATA",364.7,953,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("OUTPT",Z)) Q:'Z  I $P(IBXSAVE("OUTPT",Z),U,15)'="" S IBXDATA(Z)=$P(IBXSAVE("OUTPT",Z),U,15)
"DATA",364.7,953,3,0)
^^4^4^3060818^
"DATA",364.7,953,3,1,0)
esg - 8/18/06 - IB patch 348 - New CMS-1500 claim form project
"DATA",364.7,953,3,2,0)
 
"DATA",364.7,953,3,3,0)
Box 24K no longer exists on the 1500 form.  Austin FSC was not mapping 
"DATA",364.7,953,3,4,0)
this field to anything anyway.
"DATA",364.7,956,0)
964^N^5^^^^N
"DATA",364.7,956,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,956,3,0)
^^1^1^3150319^
"DATA",364.7,956,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,1015,0)
1014^N^5^^^^N
"DATA",364.7,1015,1)
S IBXDATA="516.0" I '$$PROD^XUPROD(1) S $E(IBXDATA,11)="D"
"DATA",364.7,1015,3,0)
^364.73^7^7^3140812^^^^
"DATA",364.7,1015,3,1,0)
This field contains the VistA IB patch# that pertains to the
"DATA",364.7,1015,3,2,0)
applicable changes in the claim map.  Austin uses this field to determine
"DATA",364.7,1015,3,3,0)
which set of EDI claim maps to use when processing the EDI claims.
"DATA",364.7,1015,3,4,0)

"DATA",364.7,1015,3,5,0)
If the EDI claims are being transmitted from a non-production account,
"DATA",364.7,1015,3,6,0)
then the "D" in the 11th position indicates to Austin that it is test
"DATA",364.7,1015,3,7,0)
data.
"DATA",364.7,1539,0)
1839^N^5^^^^N
"DATA",364.7,1539,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("OI_HPID",Z)),U)
"DATA",364.7,1540,0)
1840^N^5^^^^N
"DATA",364.7,1540,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("OI_HPID",Z)),U,2)
"DATA",364.7,1615,0)
1915^N^96^^^^N
"DATA",364.7,1615,1)
S IBXSAVE("SERVFACFLAG")=$S($P(IBXDATA,U,3)="":0,1:1) I IBXSAVE("SERVFACFLAG") S IBXSAVE("SERVFACDATA")=IBXDATA
"DATA",364.7,1615,3,0)
^^19^19^3140728^
"DATA",364.7,1615,3,1,0)
SUB, piece 1.5
"DATA",364.7,1615,3,2,0)
Use the data element to extract the billing provider/service facility 
"DATA",364.7,1615,3,3,0)
information.
"DATA",364.7,1615,3,4,0)
IBXSAVE("SERVFACFLAG")=0 to indicate there is no service facility info
"DATA",364.7,1615,3,5,0)
IBXSAVE("SERVFACFLAG")=1 to indicate there is service facility info
"DATA",364.7,1615,3,6,0)
 
"DATA",364.7,1615,3,7,0)
IBXSAVE("SERVFACDATA") is the string of data from the $$B^IBCEF79 
"DATA",364.7,1615,3,8,0)
function.  Therefore [3] is "" if there is no service facility data, or 
"DATA",364.7,1615,3,9,0)
[3] is 0 if the service facility is a VA institution in file 4, or [3] is 
"DATA",364.7,1615,3,10,0)
a 1 if the service facility is a non-VA facility in file 355.93.
"DATA",364.7,1615,3,11,0)
Piece [4] is the IEN to either file 4 or 355.93.
"DATA",364.7,1615,3,12,0)
 
"DATA",364.7,1615,3,13,0)
Variable Z1 is the value of the $$SENDSF function call.  This function 
"DATA",364.7,1615,3,14,0)
will only return 0 (don't send) if the pre-patch 400 switchback flag is 
"DATA",364.7,1615,3,15,0)
set to ON, and care was provided at the main division in the database, 
"DATA",364.7,1615,3,16,0)
and the insurance company parameter that says to send the service 
"DATA",364.7,1615,3,17,0)
facility data is set to NO (don't send).
"DATA",364.7,1615,3,18,0)
MRD;IB*2.0*516 - The function $$SENDSF^IBCEF79 now will always return
"DATA",364.7,1615,3,19,0)
'1'.
"DATA",364.7,1674,0)
1974^N^345^^^^N
"DATA",364.7,1674,1)
S IBXDATA=$S($TR(IBXDATA," ")]"":"Y4",1:"")
"DATA",364.7,1675,0)
1975^N^345^^^^N
"DATA",364.7,1675,1)
S IBXDATA=$TR(IBXDATA," "),IBXSAVE("PCCLAIM")=0 I IBXDATA]"" S IBXSAVE("PCCLAIM")=1
"DATA",364.7,1675,3,0)
^364.73^5^5^3140812^^
"DATA",364.7,1675,3,1,0)
SUbsequeNt fields Prop/Cas COntact Name, Prop/Cas Contact Phone and
"DATA",364.7,1675,3,2,0)
Prop/Cas COntact Extension should ONLY be sent if this field has a value,
"DATA",364.7,1675,3,3,0)
indicating that this IS a Property & Casualty claim.
"DATA",364.7,1675,3,4,0)
Setting IBXSAVE("PCCLAIM") here to 0 (Not a P&C Claim) or 1 (IS a P&C 
"DATA",364.7,1675,3,5,0)
Claim) for reference in these later fields.
"DATA",364.7,1759,0)
2059^N^5^^^^N
"DATA",364.7,1759,1)
S IBXDATA=""
"DATA",364.7,1759,3,0)
^^1^1^3140416^
"DATA",364.7,1759,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,1760,0)
2060^N^5^^^^N
"DATA",364.7,1760,1)
S IBXDATA=""
"DATA",364.7,1760,3,0)
^^1^1^3140416^
"DATA",364.7,1760,3,1,0)
MRD;IB*2.0*516 - Changed to be blank.
"DATA",364.7,1945,0)
2251^N^5^^^^N
"DATA",364.7,1945,1)
S IBXDATA=$P($G(IBXSAVE("CI_HPID",1)),U)
"DATA",364.7,1945,3,0)
^^2^2^3140520^
"DATA",364.7,1945,3,1,0)
If there is an HPID (Sequence 37, Piece 9), then this field will be 'XV'. 
"DATA",364.7,1945,3,2,0)
MRD;IB*2.0*516
"DATA",364.7,1946,0)
2231^N^5^^^^N
"DATA",364.7,1946,1)
S IBXDATA=$P($G(IBXSAVE("CI_HPID",1)),U,2) D CLEANUP^IBCEF78(.IBXSAVE)
"DATA",364.7,1946,3,0)
^^1^1^3140520^
"DATA",364.7,1946,3,1,0)
This will be the HPID from the bill/claim. MRD;IB*2.0*516
"DATA",364.7,1947,0)
2252^N^5^^^^N^0
"DATA",364.7,1947,1)
N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE("LDAT",Z)) Q:'Z  S IBXDATA(Z)=$P(IBXSAVE("LDAT",Z),U,7)
"DATA",364.7,1947,3,0)
^364.73^4^4^3140707^^
"DATA",364.7,1947,3,1,0)
This field may contain an additional description of this procedure, which 
"DATA",364.7,1947,3,2,0)
the user is able to enter only for NOC procedures (those procedures which 
"DATA",364.7,1947,3,3,0)
end in '99' or whose descriptions contain verbiage such as 'NOT OTHERWISE
"DATA",364.7,1947,3,4,0)
CLASSIFIED', 'NOC', 'NOS', etc.). MRD;IB*2.0*516
"DATA",364.7,1948,0)
2235^N^5^^^^N^0
"DATA",364.7,1948,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  I $P(IBXSAVE("INPT",Z),U,11)'="" S IBXDATA(Z)=$P(IBXSAVE("INPT",Z),U,11)
"DATA",364.7,1948,3,0)
^364.73^2^2^3140520^
"DATA",364.7,1948,3,1,0)
This field may contain an NDC enterd by the user for this line of the 
"DATA",364.7,1948,3,2,0)
claim. MRD;IB*2.0*516
"DATA",364.7,1949,0)
2236^N^5^^^^N^0
"DATA",364.7,1949,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  I $P(IBXSAVE("INPT",Z),U,12)'="" S IBXDATA(Z)=$P(IBXSAVE("INPT",Z),U,12)
"DATA",364.7,1949,3,0)
^^2^2^3140520^
"DATA",364.7,1949,3,1,0)
If the user added an NDC to this line of the claim, they are then allowed 
"DATA",364.7,1949,3,2,0)
to enter a unit. MRD;IB*2.0*516
"DATA",364.7,1950,0)
2237^N^5^^^^N^0
"DATA",364.7,1950,1)
K IBXDATA N Z S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  I $P(IBXSAVE("INPT",Z),U,12)'="" S IBXDATA(Z)="UN"
"DATA",364.7,1950,3,0)
^^3^3^3140520^
"DATA",364.7,1950,3,1,0)
If the user added an NDC to this line of the claim, there should also be 
"DATA",364.7,1950,3,2,0)
a value in the unit field ($P(IBXSAVE("INPT",Z),U,12), and if there is, 
"DATA",364.7,1950,3,3,0)
then this field should be 'UN'. MRD;IB*2.0*516
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
2.0^IB
"FIA",2,2)
1
"FIA",2,2.312)
1
"FIA",2,2.312,20)

"FIA",2,2.312,21)

"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^y^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,4.07)

"FIA",36,36,4.11)

"FIA",36,36,4.12)

"FIA",36,36,4.13)

"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^y^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,11.04)

"FIA",350.9,350.9,19)

"FIA",350.9,350.9,29)

"FIA",350.9,350.9004)
1
"FIA",350.9,350.9004,.01)

"FIA",350.9,350.929)
0
"FIA",355.3)
GROUP INSURANCE PLAN
"FIA",355.3,0)
^IBA(355.3,
"FIA",355.3,0,0)
355.3IP
"FIA",355.3,0,1)
y^n^p^^^^n^^n
"FIA",355.3,0,10)

"FIA",355.3,0,11)

"FIA",355.3,0,"RLRO")

"FIA",355.3,0,"VR")
2.0^IB
"FIA",355.3,355.3)
1
"FIA",355.3,355.3,.15)

"FIA",355.93)
IB NON/OTHER VA BILLING PROVIDER
"FIA",355.93,0)
^IBA(355.93,
"FIA",355.93,0,0)
355.93I
"FIA",355.93,0,1)
y^n^p^^^^n^^n
"FIA",355.93,0,10)

"FIA",355.93,0,11)

"FIA",355.93,0,"RLRO")

"FIA",355.93,0,"VR")
2.0^IB
"FIA",355.93,355.93)
1
"FIA",355.93,355.93,.17)

"FIA",355.93,355.93,.18)

"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IBY516PR(5,Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^n^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY516PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY516PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,40)

"FIA",399,399,41)

"FIA",399,399,47)

"FIA",399,399,261)

"FIA",399,399,371)

"FIA",399,399,372)

"FIA",399,399,373)

"FIA",399,399,471)

"FIA",399,399,472)

"FIA",399,399,473)

"FIA",399,399.0304)
1
"FIA",399,399.0304,51)

"FIA",399,399.0304,53)

"FIA",399,399.0304,54)

"FIA",399,399.04)
1
"FIA",399,399.04,.01)

"FIA",399,399.041)
1
"FIA",399,399.041,.01)

"FIA",399,399.047)
1
"FIA",399,399.047,.01)

"INI")
IBY516PR
"INIT")
IBY516PO
"IX",350.9,350.9004,"AC",0)
350.9004^AC^Name and address defaults^MU^^F^IR^I^350.9004^^^^^A
"IX",350.9,350.9004,"AC",.1,0)
^^6^6^3140709^
"IX",350.9,350.9004,"AC",.1,1,0)
The purpose of this x-ref is to default the name and address fields in 
"IX",350.9,350.9004,"AC",.1,2,0)
this sub-file from data found in the Institution file.  The idea is that 
"IX",350.9,350.9004,"AC",.1,3,0)
the user will select a VA Institution from file 4 to be one of the Pay-To 
"IX",350.9,350.9004,"AC",.1,4,0)
providers in this sub-file.  The name and address of the VA Institution 
"IX",350.9,350.9004,"AC",.1,5,0)
will be used as defaults for the name and address fields here in this 
"IX",350.9,350.9004,"AC",.1,6,0)
sub-file.  The default name and address information may be overridden.
"IX",350.9,350.9004,"AC",1)
I $G(X1(1))'=$G(X2(1)) D DEF^IBJPS3(+$G(X2(1)),.DA,0)
"IX",350.9,350.9004,"AC",2)
Q
"IX",350.9,350.9004,"AC",11.1,0)
^.114IA^1^1
"IX",350.9,350.9004,"AC",11.1,1,0)
1^F^350.9004^.01^^^F
"IX",350.9,350.9004,"AC",11.1,1,3)

"IX",350.9,350.929,"AC",0)
350.929^AC^Name and address defaults^MU^^F^IR^I^350.929^^^^^A
"IX",350.9,350.929,"AC",.1,0)
^^8^8^3140709^
"IX",350.9,350.929,"AC",.1,1,0)
The purpose of this x-ref is to default the name and address
"IX",350.9,350.929,"AC",.1,2,0)
fields in this sub-file from data found in the Institution
"IX",350.9,350.929,"AC",.1,3,0)
file.  The idea is that the user will select a VA Institution
"IX",350.9,350.929,"AC",.1,4,0)
from file 4 to be one of the TRICARE-specific Pay-To Providers
"IX",350.9,350.929,"AC",.1,5,0)
in this sub-file.  The name and address of the VA Institution
"IX",350.9,350.929,"AC",.1,6,0)
will be used as defaults for the name and address fields here
"IX",350.9,350.929,"AC",.1,7,0)
in this sub-file.  The default name and address information
"IX",350.9,350.929,"AC",.1,8,0)
may be overridden.
"IX",350.9,350.929,"AC",1)
I $G(X1(1))'=$G(X2(1)) D DEF^IBJPS3(+$G(X2(1)),.DA,1)
"IX",350.9,350.929,"AC",2)
Q
"IX",350.9,350.929,"AC",11.1,0)
^.114IA^1^1
"IX",350.9,350.929,"AC",11.1,1,0)
1^F^350.929^.01^^^F
"IX",350.9,350.929,"AC",11.1,1,3)

"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"C",0)
364.6^C^Field name lookup^R^^F^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"C",1)
S ^IBA(364.6,"C",$E(X,1,40),DA)=""
"IX",364.6,364.6,"C",2)
K ^IBA(364.6,"C",$E(X,1,40),DA)
"IX",364.6,364.6,"C",2.5)
K ^IBA(364.6,"C")
"IX",364.6,364.6,"C",11.1,0)
^.114IA^1^1
"IX",364.6,364.6,"C",11.1,1,0)
1^F^364.6^.1^40^1^F
"IX",364.6,364.6,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"IX",399,399.047,"AC",0)
399.047^AC^VALUE field clean up^MU^^F^^I^399.047^^^^^A
"IX",399,399.047,"AC",.1,0)
^^2^2^3090128
"IX",399,399.047,"AC",.1,1,0)
If the VALUE CODE field is modified, make sure the VALUE field associated
"IX",399,399.047,"AC",.1,2,0)
with it is still VALID.  If not, delete the VALUE.
"IX",399,399.047,"AC",1)
D REMOVE^IBCVC(.DA)
"IX",399,399.047,"AC",1.4)
S X=$$COND^IBCVC(.DA,X1(1),X2(1))
"IX",399,399.047,"AC",2)
Q
"IX",399,399.047,"AC",11.1,0)
^.114IA^1^1
"IX",399,399.047,"AC",11.1,1,0)
1^F^399.047^.01^^^F
"KRN",.4,1128,-1)
0^1
"KRN",.4,1128,0)
IBNOTVER^3140805.125^@^2^^@^3140805
"KRN",.4,1128,"DCL")
1
"KRN",.4,1128,"DCL","2.312^7.02")
1*
"KRN",.4,1128,"DCL","2^.01")
!
"KRN",.4,1128,"F",1)
.01;C1;L25;"PATIENT";S~.09;C28;L10;"PATIENT ID"~.3121,.01;C40;L25;"INSURANCE CO"~.3121,7.02;C68;L30;"SUBSCRIBER ID"~.3121,1.02;C100;L19;"WHO ENTERED"~
"KRN",.4,1128,"F",2)
.3121,1.01;C121;L12;"DATE ENTERED"~
"KRN",.4,1128,"H")
REPORT OF NEW, NOT VERIFIED INSURANCE ENTRIES
"KRN",.402,1276,-1)
0^2
"KRN",.402,1276,0)
IBEDIT INS CO1^3140429.1821^^36^^^3150106
"KRN",.402,1276,"DIAB",1,0,36,5)
EDI INST SECONDARY ID(1);"EDI - 1ST Inst Payer Sec. ID"
"KRN",.402,1276,"DIAB",1,0,36,14)
EDI PROF SECONDARY ID(2);"EDI - 2ND Prof Payer Sec. ID"
"KRN",.402,1276,"DIAB",1,0,36,15)
ELECTRONIC INSURANCE TYPE;"EDI - Insurance Type"
"KRN",.402,1276,"DIAB",1,0,36,16)
PRINT SEC MED CLAIMS W/O MRA;"EDI - Print Medicare Sec Claims w/o MRA?"
"KRN",.402,1276,"DIAB",1,0,36,17)
PERF PROV SECOND ID TYPE UB;"Default ID (UB)"
"KRN",.402,1276,"DIAB",1,0,36,18)
ATT/REND ID BILL SEC ID PROF//NO;"Use Att/Rend ID as Billing Provider Sec. ID (1500)?"
"KRN",.402,1276,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,1276,"DIAB",2,0,36,6)
EDI INST SECONDARY ID QUAL(2);"EDI - 2ND Inst Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",2,0,36,17)
SECONDARY ID REQUIREMENTS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",2,0,36,18)
ATT/REND ID BILL SEC ID INST//NO;"Use Att/Rend ID as Billing Provider Sec. ID (UB)?"
"KRN",.402,1276,"DIAB",2,0,36,19)
SEND LAB OR FAC IDS FOR VAMC//YES;"Send VA Lab/Facility IDs or Facility Data for VAMC?"
"KRN",.402,1276,"DIAB",3,0,36,1)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,1276,"DIAB",3,0,36,16)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,1276,"DIAB",3,0,36,19)
USE BILL PROV VAMC ADDRESS//NO;"Use the Billing Provider (VAMC) Name and Street Address?"
"KRN",.402,1276,"DIAB",4,0,36,17)
REF PROV SEC ID DEF CMS-1500//UPIN;"Default ID (1500)"
"KRN",.402,1276,"DIAB",4,0,36,22)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,1276,"DIAB",5,0,36,3)
EDI INST SECONDARY ID QUAL(1);"EDI - 1ST Inst Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",5,0,36,11)
EDI PROF SECONDARY ID(1);"EDI - 1ST Prof Payer Sec. ID"
"KRN",.402,1276,"DIAB",5,0,36,17)
REF PROV SEC ID REQ ON CLAIMS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",6,0,36,2)
EDI ID NUMBER - INST;"EDI - Inst Payer Primary ID"
"KRN",.402,1276,"DIAB",6,0,36,12)
EDI PROF SECONDARY ID QUAL(2);"EDI - 2ND Prof Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",7,0,36,7)
EDI INST SECONDARY ID(2);"EDI - 2ND Inst Payer Sec. ID"
"KRN",.402,1276,"DIAB",7,0,36,8)
EDI ID NUMBER - PROF;"EDI - Prof Payer Primary ID"
"KRN",.402,1276,"DIAB",7,0,36,9)
EDI PROF SECONDARY ID QUAL(1);"EDI - 1ST Prof Payer Sec. ID Qualifier"
"KRN",.402,1276,"DIAB",7,0,36,16)
PERF PROV SECOND ID TYPE 1500;"Default ID (1500)"
"KRN",.402,1276,"DIAB",7,0,36,25)
INS COMPANY LINK PARENT;T
"KRN",.402,1276,"DIAB",8,0,36,15)
BIN NUMBER;"EDI - Bin Number"
"KRN",.402,1276,"DIAB",9,0,36,15)
PRINT SEC/TERT AUTO CLAIMS?;"EDI - Print Sec/Tert Auto Claims?"
"KRN",.402,1276,"DIAB",11,0,36,1)
TRANSMIT ELECTRONICALLY;"EDI - Transmit?"
"KRN",.402,1276,"DIAB",11,0,36,24)
INS COMPANY LINK TYPE;T
"KRN",.402,1276,"DIAB",13,0,36,0)
STANDARD FTF;"STANDARD FILING TIME FRAME"
"KRN",.402,1276,"DIAB",15,0,36,21)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,1276,"DIAB",16,0,36,0)
STANDARD FTF VALUE;"STANDARD FILING TIME FRAME VALUE"
"KRN",.402,1276,"DIAB",18,0,36,20)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,1276,"DIAB",19,0,36,23)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,1276,"DIAB",24,0,36,22)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,1276,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;.18STANDARD FILING TIME FRAME~;I 'X S Y="@016";I '$$FTFV^IBCNSU31(X) S Y="@016";.19STANDARD FILING TIME FRAME VALUE~;@016;.12;.13;
"KRN",.402,1276,"DR",1,36,1)
.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@171";3.01EDI - Transmit?~;S DIPA("IBTX")=X;I X=$G(IBEDIKEY(1))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1721";
"KRN",.402,1276,"DR",1,36,2)
3.01////^S X=$G(IBEDIKEY(1));I $$EDIKEY^IBCNSC();S Y="@171";@1721;I '$G(DIPA("IBTX")) S Y="@17";3.04EDI - Inst Payer Primary ID~;I X=$G(IBEDIKEY(4))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17211";3.04////^S X=$G(IBEDIKEY(4));
"KRN",.402,1276,"DR",1,36,3)
I $$EDIKEY^IBCNSC();S Y="@171";@17211;I '$G(DIPA("IBTX")) S Y="@17";6.01EDI - 1ST Inst Payer Sec. ID Qualifier~;I X=""&($G(IBEDIKEY(3,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";
"KRN",.402,1276,"DR",1,36,4)
I X=$G(IBEDIKEY(1,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17212";6.01////^S X=$G(IBEDIKEY(1,6));6.02////^S X=$G(IBEDIKEY(2,6));I $$EDIKEY^IBCNSC();S Y="@171";@17212;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,1276,"DR",1,36,5)
6.02EDI - 1ST Inst Payer Sec. ID~;I X=$G(IBEDIKEY(2,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17213";6.02////^S X=$G(IBEDIKEY(2,6));6.01////^S X=$G(IBEDIKEY(1,6));I $$EDIKEY^IBCNSC();S Y="@171";@17213;
"KRN",.402,1276,"DR",1,36,6)
I '$G(DIPA("IBTX")) S Y="@17";6.03EDI - 2ND Inst Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";I X=$G(IBEDIKEY(3,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17214";
"KRN",.402,1276,"DR",1,36,7)
6.03////^S X=$G(IBEDIKEY(3,6));6.04////^S X=$G(IBEDIKEY(4,6));I $$EDIKEY^IBCNSC();S Y="@171";@17214;I '$G(DIPA("IBTX")) S Y="@17";6.04EDI - 2ND Inst Payer Sec. ID~;
"KRN",.402,1276,"DR",1,36,8)
I X=$G(IBEDIKEY(4,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";6.04////^S X=$G(IBEDIKEY(4,6));6.03////^S X=$G(IBEDIKEY(3,6));I $$EDIKEY^IBCNSC();S Y="@171";@1722;3.02EDI - Prof Payer Primary ID~;
"KRN",.402,1276,"DR",1,36,9)
I X=$G(IBEDIKEY(2))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17221";3.02////^S X=$G(IBEDIKEY(2));I $$EDIKEY^IBCNSC();S Y="@171";@17221;I '$G(DIPA("IBTX")) S Y="@17";6.05EDI - 1ST Prof Payer Sec. ID Qualifier~;
"KRN",.402,1276,"DR",1,36,10)
I X=""&($G(IBEDIKEY(7,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";I X=$G(IBEDIKEY(5,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17222";6.05////^S X=$G(IBEDIKEY(5,6));6.06////^S X=$G(IBEDIKEY(6,6));
"KRN",.402,1276,"DR",1,36,11)
I $$EDIKEY^IBCNSC();S Y="@171";@17222;I '$G(DIPA("IBTX")) S Y="@17";6.06EDI - 1ST Prof Payer Sec. ID~;I X=$G(IBEDIKEY(6,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17223";6.06////^S X=$G(IBEDIKEY(6,6));
"KRN",.402,1276,"DR",1,36,12)
6.05////^S X=$G(IBEDIKEY(5,6));I $$EDIKEY^IBCNSC();S Y="@171";@17223;I '$G(DIPA("IBTX")) S Y="@17";6.07EDI - 2ND Prof Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";
"KRN",.402,1276,"DR",1,36,13)
I X=$G(IBEDIKEY(7,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17224";6.07////^S X=$G(IBEDIKEY(7,6));6.08////^S X=$G(IBEDIKEY(8,6));I $$EDIKEY^IBCNSC();S Y="@171";@17224;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,1276,"DR",1,36,14)
6.08EDI - 2ND Prof Payer Sec. ID~;I X=$G(IBEDIKEY(8,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";6.08////^S X=$G(IBEDIKEY(8,6));6.07////^S X=$G(IBEDIKEY(7,6));I $$EDIKEY^IBCNSC();S Y="@171";@1723;@17;
"KRN",.402,1276,"DR",1,36,15)
3.09EDI - Insurance Type~;I X=$G(IBEDIKEY(9))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1724";3.09////^S X=$G(IBEDIKEY(9));I $$EDIKEY^IBCNSC();S Y="@171";@1724;@171;3.03EDI - Bin Number~;6.09EDI - Print Sec/Tert Auto Claims?~;
"KRN",.402,1276,"DR",1,36,16)
6.1EDI - Print Medicare Sec Claims w/o MRA?~;I $G(DIPA("IBTX"))'=2 S Y="@18";3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@18;S:",6,12,"'[IBY Y="@181";W !!,"Attending/Rendering Provider Secondary ID";4.01Default ID (1500)~;
"KRN",.402,1276,"DR",1,36,17)
4.02Default ID (UB)~;4.03Require ID on Claim~;W !!,"Referring Provider Secondary ID";4.04Default ID (1500)~//UPIN;4.05Require ID on Claim~;W !!,"Billing Provider Secondary IDs";
"KRN",.402,1276,"DR",1,36,18)
4.06Use Att/Rend ID as Billing Provider Sec. ID (1500)?~//NO;4.08Use Att/Rend ID as Billing Provider Sec. ID (UB)?~//NO;W !!,"Billing Provider/Service Facility";
"KRN",.402,1276,"DR",1,36,19)
N NODE4 S NODE4=$G(^DIC(36,DA,4)) I '$P(NODE4,U,11)&('$P(NODE4,U,12)) S Y="@181";4.07Send VA Lab/Facility IDs or Facility Data for VAMC?~//YES;4.13Use the Billing Provider (VAMC) Name and Street Address?~//NO;@181;
"KRN",.402,1276,"DR",1,36,20)
S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";.112;S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;
"KRN",.402,1276,"DR",1,36,21)
S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;
"KRN",.402,1276,"DR",1,36,22)
S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";
"KRN",.402,1276,"DR",1,36,23)
.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;S:",5,6,"'[IBY Y="@55";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;
"KRN",.402,1276,"DR",1,36,24)
.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@55;S:",13,6,"'[IBY Y="@60";I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@551";I $D(^DIC(36,"APC",+$G(DA))),$P($G(^DIC(36,+$G(DA),3)),U,13)="P" S Y="@551";3.13T~;S DIPA("IBLNK")=X;
"KRN",.402,1276,"DR",1,36,25)
I X=$G(IBEDIKEY(13))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@552";3.13////^S X=$G(IBEDIKEY(13));I $$EDIKEY^IBCNSC();S Y="@551";@552;I $G(DIPA("IBLNK"))'="C" S Y="@551";3.14T~;
"KRN",.402,1276,"DR",1,36,26)
I X=$G(IBEDIKEY(14))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@553";3.14////^S X=$G(IBEDIKEY(14));I $$EDIKEY^IBCNSC();S Y="@551";@553;D COPY^IBCEPCID(+$G(DA));@551;S:IBY=",13," Y="@99";@60;S:",7,6,"'[IBY Y="@50";3.1;@50;
"KRN",.402,1276,"DR",1,36,27)
S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,1276,"DR",2,36.03)
.01
"KRN",.402,1297,-1)
0^1
"KRN",.402,1297,0)
IB SCREEN3^3140630.0821^@^399^^@^3150109
"KRN",.402,1297,"AR",399,121)
1^IBXS34
"KRN",.402,1297,"AR",399,840)
2^IBXS34
"KRN",.402,1297,"DIAB",1,0,399,16)
TERTIARY PROVIDER #//VAR("IBPSID")
"KRN",.402,1297,"DIAB",1,0,399,17)
TERTIARY ID QUALIFIER;"Tertiary ID Qualifier"
"KRN",.402,1297,"DIAB",3,0,399,7)
PRIMARY PROVIDER #//VAR("IBPSID")
"KRN",.402,1297,"DIAB",3,0,399,8)
PRIMARY ID QUALIFIER///VAR("IBPSQUAL")
"KRN",.402,1297,"DIAB",3,0,399,12)
SECONDARY ID QUALIFIER///VAR("IBPSQUAL")
"KRN",.402,1297,"DIAB",4,0,399,11)
SECONDARY PROVIDER #//VAR("IBPSID")
"KRN",.402,1297,"DIAB",5,0,399,16)
TERTIARY ID QUALIFIER///VAR("IBPSQUAL")
"KRN",.402,1297,"DIAB",6,0,399,8)
PRIMARY ID QUALIFIER;"Primary ID Qualifier"
"KRN",.402,1297,"DIAB",6,0,399,12)
SECONDARY ID QUALIFIER;"Secondary ID Qualifier"
"KRN",.402,1297,"DR",1,399)
S:$G(IBCNRTN) Y="@313" K IBCNRTN;S:IBDR20'["31" Y="@31";.07;S:'+$P(^IBE(350.9,1,1),U,22) Y="@314";S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);@5;.19;S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);
"KRN",.402,1297,"DR",1,399,1)
I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@10";W !,*7,"Must be a printable national form type";.19///^S X=$G(DIPA("FT1"));S Y="@5";@10;D FTPRV^IBCEU5(DA);@314;
"KRN",.402,1297,"DR",1,399,2)
S X=$P(^DGCR(399,DA,0),U,11);S Y="@"_$S(X']"":31,X="p":31,X="o":311,1:310);@310;D 1^IBCSCH1 S Y="@"_$S(IBADI=-1:31,'IBADI:312,1:33);@313;@312;112;I X'="" S:$E(IBVV,9) IBVV=$E(IBVV,1,8)_"0";S:X="" Y="@998";
"KRN",.402,1297,"DR",1,399,3)
S IBINS=$P($G(^DPT(DFN,.312,X,0)),U);S IBHPID=$$HPD^IBCNHUT1(IBINS);471//^S X=IBHPID;113;S:X="" Y="@998";S IBINS=$P($G(^DPT(DFN,.312,X,0)),U);S IBHPID=$$HPD^IBCNHUT1(IBINS);472//^S X=IBHPID;114;S:X="" Y="@998";
"KRN",.402,1297,"DR",1,399,4)
S IBINS=$P($G(^DPT(DFN,.312,X,0)),U);S IBHPID=$$HPD^IBCNHUT1(IBINS);473//^S X=IBHPID;@998;S Y="@31";@311;D INST^IBCU;111;K DIC("DR"),DLAYGO;@31;.21;S:IBDR20'["32" Y="@33";@3211;I '$$SUPPPT^IBCEP7B(DA,1) S Y="@3212";122///@;128///@;
"KRN",.402,1297,"DR",1,399,5)
W !,"No Billing Prov Secondary IDs will be sent for Primary Ins/Elect Plan Type.";S Y="@3221";@3212;I '$$ATTREND^IBCEP7B(DA,1) S Y="@3213";I $P($G(^DGCR(399,DA,"M1")),U,2)]"" S Y="@3213";
"KRN",.402,1297,"DR",1,399,6)
W !,"The Att/Rend ID will be sent as the primary ins. Billing Prov Sec ID.";S Y="@3221";@3213;S IBPSDAT=$$GETID^IBCEP7B(DA,1),IBPSID=$P(IBPSDAT,U),IBPSQUAL=$P(IBPSDAT,U,2) I IBPSID="" S Y="@321";122///@;128///@;S DIE("NO^")=1;@321;
"KRN",.402,1297,"DR",1,399,7)
S IBPSIDO=$P($G(^DGCR(399,DA,"M1")),U,2),IBPSQO=$P($G(^DGCR(399,DA,"M1")),U,10);Q;122//^S X="IBPSID" Q:X  Q:$NA(@X)[U  S X=$G(@X);I $G(IBPSQO)]"",X'=$G(IBPSID),X'=$G(IBPSIDO) S Y="@3214";
"KRN",.402,1297,"DR",1,399,8)
I $G(IBPSQO)="",$G(IBPSQUAL)="",X]"" S Y="@3214";Q;128///^S X="IBPSQUAL" Q:X  Q:$NA(@X)[U  S X=$G(@X);S Y="@3215";@3214;128Primary ID Qualifier~;@3215;K DIE("NO^");@3221;I '$$SUPPPT^IBCEP7B(DA,2) S Y="@3222";123///@;129///@;
"KRN",.402,1297,"DR",1,399,9)
W !,"No Billing Prov Secondary IDs will be sent for Secondary Ins/Elect Plan Type.";S Y="@3231";@3222;I '$$ATTREND^IBCEP7B(DA,2) S Y="@3223";I $P($G(^DGCR(399,DA,"M1")),U,3)]"" S Y="@3223";
"KRN",.402,1297,"DR",1,399,10)
W !,"The Att/Rend ID will be sent as the secondary ins. Billing Prov Sec ID.";S Y="@3231";@3223;S IBPSDAT=$$GETID^IBCEP7B(DA,2),IBPSID=$P(IBPSDAT,U),IBPSQUAL=$P(IBPSDAT,U,2) I IBPSID="" S Y="@322";123///@;129///@;S DIE("NO^")=1;
"KRN",.402,1297,"DR",1,399,11)
@322;S IBPSIDO=$P($G(^DGCR(399,DA,"M1")),U,3),IBPSQO=$P($G(^DGCR(399,DA,"M1")),U,11);Q;123//^S X="IBPSID" Q:X  Q:$NA(@X)[U  S X=$G(@X);I $G(IBPSQO)]"",X'=$G(IBPSID),X'=$G(IBPSIDO) S Y="@3224";
"KRN",.402,1297,"DR",1,399,12)
I $G(IBPSQO)="",$G(IBPSQUAL)="",X]"" S Y="@3224";Q;129///^S X="IBPSQUAL" Q:X  Q:$NA(@X)[U  S X=$G(@X);S Y="@3225";@3224;129Secondary ID Qualifier~;@3225;K DIE("NO^");@3231;I '$$SUPPPT^IBCEP7B(DA,3) S Y="@3232";124///@;130///@;
"KRN",.402,1297,"DR",1,399,13)
W !,"No Billing Prov Secondary IDs will be sent for Tertiary Ins/Elect Plan Type.";D:(IBDRLP'[33&(IBDRLP'[34)) PAUSE^VALM1 S Y="@33";@3232;I '$$ATTREND^IBCEP7B(DA,3) S Y="@3233";I $P($G(^DGCR(399,DA,"M1")),U,4)]"" S Y="@3233";
"KRN",.402,1297,"DR",1,399,14)
W !,"The Att/Rend ID will be sent as the tertiary ins. Billing Prov Sec ID.";D:(IBDRLP'[33&(IBDRLP'[34)) PAUSE^VALM1 S Y="@33";@3233;
"KRN",.402,1297,"DR",1,399,15)
S IBPSDAT=$$GETID^IBCEP7B(DA,3),IBPSID=$P(IBPSDAT,U),IBPSQUAL=$P(IBPSDAT,U,2) I IBPSID="" S Y="@323";124///@;130///@;S DIE("NO^")=1;@323;S IBPSIDO=$P($G(^DGCR(399,DA,"M1")),U,4),IBPSQO=$P($G(^DGCR(399,DA,"M1")),U,12);Q;
"KRN",.402,1297,"DR",1,399,16)
124//^S X="IBPSID" Q:X  Q:$NA(@X)[U  S X=$G(@X);I $G(IBPSQO)]"",X'=$G(IBPSID),X'=$G(IBPSIDO) S Y="@3234";I $G(IBPSQO)="",$G(IBPSQUAL)="",X]"" S Y="@3234";Q;130///^S X="IBPSQUAL" Q:X  Q:$NA(@X)[U  S X=$G(@X);S Y="@3235";@3234;
"KRN",.402,1297,"DR",1,399,17)
130Tertiary ID Qualifier~;@3235;K DIE("NO^");@33;S:IBDR20'["33" Y="@34";104;105;106;S:X="" Y=107;121;107;108;109;@34;@999;
"KRN",.402,1297,"ROU")
^IBXS3
"KRN",.402,1297,"ROUOLD")
IBXS3
"KRN",19,2248,-1)
0^1
"KRN",19,2248,0)
IB COPY AND CANCEL^Copy and Cancel^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,2248,1,0)
^19.06^2^2^3140424^^^^
"KRN",19,2248,1,1,0)
This option will allow cancelling a bill and then will create an exact
"KRN",19,2248,1,2,0)
duplicate bill except its status will be ENTERED/NOT REVIEWED.
"KRN",19,2248,25)
IBCCC
"KRN",19,2248,"U")
COPY AND CANCEL
"KRN",19,3372,-1)
2^4
"KRN",19,3372,0)
IB THIRD PARTY BILLING MENU^Third Party Billing Menu^^M^12540^^^^^^y^200^^1
"KRN",19,3372,10,0)
^19.01IP^21^20
"KRN",19,3372,10,4,0)
2248^CLON
"KRN",19,3372,10,4,"^")
IB COPY AND CANCEL
"KRN",19,3372,10,21,0)
13561^VCB^
"KRN",19,3372,10,21,"^")
IB VIEW CANCEL BILL
"KRN",19,3372,"U")
THIRD PARTY BILLING MENU
"KRN",19,13561,-1)
0^3
"KRN",19,13561,0)
IB VIEW CANCEL BILL^View Cancelled Bill^^R^^^^^^^^^^1
"KRN",19,13561,1,0)
^^2^2^3141021^
"KRN",19,13561,1,1,0)
This option will allow the user to select and view
"KRN",19,13561,1,2,0)
a bill that is in CANCELLED status.
"KRN",19,13561,20)
D EN^IBVCB
"KRN",19,13561,83)
N
"KRN",19,13561,99)
63305,38732
"KRN",19,13561,"U")
VIEW CANCELLED BILL
"KRN",19,13617,-1)
1^2
"KRN",19,13617,0)
IBCN INS BILL PROV FLAG RPT
"KRN",19.1,641,-1)
0^1
"KRN",19.1,641,0)
IB EDIT PAY-TO
"KRN",19.1,641,1,0)
^19.11^2^2^3140418^^
"KRN",19.1,641,1,1,0)
This key allows a user to edit the pay-to provider information under IB
"KRN",19.1,641,1,2,0)
Site Parameters.
"KRN",19.1,642,-1)
0^2
"KRN",19.1,642,0)
IB EDIT PAY-TO TC
"KRN",19.1,642,1,0)
^^2^2^3140417^
"KRN",19.1,642,1,1,0)
This key allows a user to edit the TRICARE-specific pay-to provider
"KRN",19.1,642,1,2,0)
information under IB Site Parameters.
"KRN",101,3166,-1)
2^19
"KRN",101,3166,0)
IBCEM CSA MSG MENU^Select Message Menu^^M^123456875^^^^^^^200
"KRN",101,3166,10,0)
^101.01PA^17^16
"KRN",101,3166,10,17,0)
4575^^20^
"KRN",101,3166,10,17,"^")
IBCEM CSA CANCEL/CLONE BILL
"KRN",101,4285,-1)
0^3
"KRN",101,4285,0)
IBJP IB PAY-TO PROVIDER EDIT^Edit Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4285,4)
^^^EP
"KRN",101,4285,20)
D PRVEDIT^IBJPS3(0)
"KRN",101,4285,99)
61628,49115
"KRN",101,4286,-1)
0^2
"KRN",101,4286,0)
IBJP IB PAY-TO PROVIDER DEL^Delete Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4286,4)
^^^DP
"KRN",101,4286,20)
D PRVDEL^IBJPS3(0)
"KRN",101,4286,99)
61628,49115
"KRN",101,4287,-1)
0^1
"KRN",101,4287,0)
IBJP IB PAY-TO PROVIDER ADD^Add Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4287,4)
^^^AP
"KRN",101,4287,20)
D PRVADD^IBJPS3(0)
"KRN",101,4287,99)
61628,49115
"KRN",101,4288,-1)
0^17
"KRN",101,4288,0)
IBJP IB PAY-TO PROVIDERS MENU^Pay-To Providers Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4288,4)
26^4
"KRN",101,4288,10,0)
^101.01PA^5^5
"KRN",101,4288,10,1,0)
4287^AP^2^
"KRN",101,4288,10,1,"^")
IBJP IB PAY-TO PROVIDER ADD
"KRN",101,4288,10,2,0)
4286^DP^7^
"KRN",101,4288,10,2,"^")
IBJP IB PAY-TO PROVIDER DEL
"KRN",101,4288,10,3,0)
4285^EP^5^
"KRN",101,4288,10,3,"^")
IBJP IB PAY-TO PROVIDER EDIT
"KRN",101,4288,24)
I $D(^XUSEC("IB EDIT PAY-TO",DUZ))
"KRN",101,4288,26)
D SHOW^VALM
"KRN",101,4288,99)
63245,59670
"KRN",101,4289,-1)
0^4
"KRN",101,4289,0)
IBJP IB PAY-TO DIVISION ADD^Associate Division^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4289,4)
^^^AD
"KRN",101,4289,20)
D DIVADD^IBJPS4(0)
"KRN",101,4289,99)
61628,49115
"KRN",101,4511,-1)
0^6
"KRN",101,4511,0)
IBJP IB TRICARE PAY-TO PROVIDER ADD^Add Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4511,4)
^^^AT
"KRN",101,4511,10,0)
^101.01PA
"KRN",101,4511,20)
D PRVADD^IBJPS3(1)
"KRN",101,4511,99)
63250,59024
"KRN",101,4512,-1)
0^7
"KRN",101,4512,0)
IBJP IB TRICARE PAY-TO PROVIDER DEL^Delete Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4512,4)
^^^DT
"KRN",101,4512,20)
D PRVDEL^IBJPS3(1)
"KRN",101,4512,99)
63250,59049
"KRN",101,4513,-1)
0^8
"KRN",101,4513,0)
IBJP IB TRICARE PAY-TO PROVIDER EDIT^Edit Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4513,4)
^^^ET
"KRN",101,4513,20)
D PRVEDIT^IBJPS3(1)
"KRN",101,4513,99)
63250,59068
"KRN",101,4514,-1)
0^9
"KRN",101,4514,0)
IBJP IB TRICARE PAY-TO PROVIDER DIVISIONS^Associate Divisions^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4514,4)
^^^ST
"KRN",101,4514,20)
D EN^IBJPS4(1)
"KRN",101,4514,99)
63250,59177
"KRN",101,4515,-1)
0^5
"KRN",101,4515,0)
IBJP IB TRICARE PAY-TO PROVIDERS MENU^TRICARE Pay-To Providers Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4515,3,0)
^101.03P^^0
"KRN",101,4515,4)
26^4
"KRN",101,4515,10,0)
^101.01PA^5^5
"KRN",101,4515,10,2,0)
4511^AP^2^
"KRN",101,4515,10,2,"^")
IBJP IB TRICARE PAY-TO PROVIDER ADD
"KRN",101,4515,10,3,0)
4512^DP^6^
"KRN",101,4515,10,3,"^")
IBJP IB TRICARE PAY-TO PROVIDER DEL
"KRN",101,4515,10,4,0)
4513^EP^4^
"KRN",101,4515,10,4,"^")
IBJP IB TRICARE PAY-TO PROVIDER EDIT
"KRN",101,4515,10,5,0)
4514^AS^8^
"KRN",101,4515,10,5,"^")
IBJP IB TRICARE PAY-TO PROVIDER DIVISIONS
"KRN",101,4515,24)
I $D(^XUSEC("IB EDIT PAY-TO TC",DUZ))
"KRN",101,4515,26)
D SHOW^VALM
"KRN",101,4515,99)
63250,59194
"KRN",101,4516,-1)
0^10
"KRN",101,4516,0)
IBJP IB TRICARE PAY-TO ASSOCIATIONS MENU^TRICARE Pay-To Associations Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4516,4)
40^4
"KRN",101,4516,10,0)
^101.01PA^2^2
"KRN",101,4516,10,2,0)
4517^AS^3^
"KRN",101,4516,10,2,"^")
IBJP IB TRICARE PAY-TO DIVISION ADD
"KRN",101,4516,26)
D SHOW^VALM
"KRN",101,4516,99)
63250,59331
"KRN",101,4517,-1)
0^11
"KRN",101,4517,0)
IBJP IB TRICARE PAY-TO DIVISION ADD^Associate Division^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4517,10,0)
^101.01PA
"KRN",101,4517,20)
D DIVADD^IBJPS4(1)
"KRN",101,4517,99)
63250,59311
"KRN",101,4575,-1)
0^18
"KRN",101,4575,0)
IBCEM CSA CANCEL/CLONE BILL^Cancel/Clone A Bill^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4575,1,0)
^^2^2^3141201^
"KRN",101,4575,1,1,0)
This action allows a user to cancel/clone a bill that has been returned
"KRN",101,4575,1,2,0)
to the site in error.
"KRN",101,4575,4)
^^^
"KRN",101,4575,15)
I '$D(IOUON) D ENS^%ZISS
"KRN",101,4575,20)
D CLONE^IBCECSA4
"KRN",101,4575,99)
63522,50636
"KRN",409.61,823,-1)
0^1
"KRN",409.61,823,0)
IBJP IB PAY-TO PROVIDERS^1^^80^2^19^1^1^IB Pay-To Providers^IBJP IB PAY-TO PROVIDERS MENU^Pay-To Providers^1^^1
"KRN",409.61,823,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,823,"ARRAY")

"KRN",409.61,823,"FNL")
D EXIT^IBJPS3
"KRN",409.61,823,"HDR")
D HDR^IBJPS3(0)
"KRN",409.61,823,"HLP")
D HELP^IBJPS3
"KRN",409.61,823,"INIT")
D INIT^IBJPS3(0)
"KRN",409.61,824,-1)
0^2
"KRN",409.61,824,0)
IBJP IB PAY-TO ASSOCIATIONS^1^^80^2^17^1^1^IB Pay-To Associations^IBJP IB PAY-TO ASSOCIATIONS MENU^Pay-To Provider Associations^1^^1
"KRN",409.61,824,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,824,"FNL")
D EXIT^IBJPS4
"KRN",409.61,824,"HDR")
D HDR^IBJPS4
"KRN",409.61,824,"HLP")
D HELP^IBJPS4
"KRN",409.61,824,"INIT")
D INIT^IBJPS4(0)
"KRN",409.61,851,-1)
0^3
"KRN",409.61,851,0)
IBJP IB TRICARE PAY-TO PROVS^1^^80^2^18^1^1^IB TRICARE Pay-To Providers^IBJP IB TRICARE PAY-TO PROVIDERS MENU^TRICARE Pay-To Providers^1^^1
"KRN",409.61,851,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,851,"FNL")
D EXIT^IBJPS3
"KRN",409.61,851,"HDR")
D HDR^IBJPS3(1)
"KRN",409.61,851,"HLP")
D HELP^IBJPS3
"KRN",409.61,851,"INIT")
D INIT^IBJPS3(1)
"KRN",409.61,852,-1)
0^4
"KRN",409.61,852,0)
IBJP IB TRICARE PAY-TO ASSOCS^1^^80^2^17^1^1^IB TRICARE Pay-To Associations^IBJP IB TRICARE PAY-TO ASSOCIATIONS MENU^TRICARE Pay-To Prov Assocs^1^^1
"KRN",409.61,852,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,852,"FNL")
D EXIT^IBJPS4
"KRN",409.61,852,"HDR")
D HDR^IBJPS4
"KRN",409.61,852,"HLP")
D HELP^IBJPS4
"KRN",409.61,852,"INIT")
D INIT^IBJPS4(1)
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
516^3150319
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3150319
"PKG",200,22,1,"PAH",1,1,1,0)
eBilling Build 3
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
120
"RTN","IBATLM3A")
0^47^B24217228^B22313695
"RTN","IBATLM3A",1,0)
IBATLM3A ;LL/ELZ - TRANSFER PRICING PT INFO SCREEN BUILD ; 16-APR-1999
"RTN","IBATLM3A",2,0)
 ;;2.0;INTEGRATED BILLING;**115,516**;21-MAR-94;Build 123
"RTN","IBATLM3A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBATLM3A",4,0)
 ;
"RTN","IBATLM3A",5,0)
 N IBX,IBY,IBINPT,IBINS,IBCNT K ^TMP("IBATPT",$J)
"RTN","IBATLM3A",6,0)
 ;
"RTN","IBATLM3A",7,0)
 S IBCNT=0
"RTN","IBATLM3A",8,0)
 S VAIP("D")="LAST" D A5^VADPT ; dbia 10061
"RTN","IBATLM3A",9,0)
 S IBINPT=$G(^DPT(DFN,.105)) ; dbia 10035
"RTN","IBATLM3A",10,0)
 S IBINS=$$INSURED^IBCNS1(DFN)
"RTN","IBATLM3A",11,0)
 ;
"RTN","IBATLM3A",12,0)
 S IBY=""
"RTN","IBATLM3A",13,0)
 D SET("*** Demographic Information ***",.IBY,24,31)
"RTN","IBATLM3A",14,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",15,0)
 D CNTRL^VALM10(VALMCNT,24,31,IOINHI,IOINORM)
"RTN","IBATLM3A",16,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",17,0)
 ;
"RTN","IBATLM3A",18,0)
 D SET("Sex:",.IBY,21,4)
"RTN","IBATLM3A",19,0)
 D SET($P(VADM(5),"^",2),.IBY,26,15)
"RTN","IBATLM3A",20,0)
 D SET("Date of Birth:",.IBY,52,14)
"RTN","IBATLM3A",21,0)
 D SET($P(VADM(3),"^",2),.IBY,67,13)
"RTN","IBATLM3A",22,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",23,0)
 ;
"RTN","IBATLM3A",24,0)
 D SET("Primary Care Provider:",.IBY,3,22)
"RTN","IBATLM3A",25,0)
 D SET($P($$OUTPTPR^SDUTL3(DFN),"^",2),.IBY,26,15) ; dbia 1252
"RTN","IBATLM3A",26,0)
 D SET("Date of Death:",.IBY,52,14)
"RTN","IBATLM3A",27,0)
 D SET($$DATE(+VADM(6)),.IBY,67,13)
"RTN","IBATLM3A",28,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",29,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",30,0)
 ;
"RTN","IBATLM3A",31,0)
 D SET("Address:",.IBY,17,8)
"RTN","IBATLM3A",32,0)
 F IBX=1:1:3 D:VAPA(IBX)'=""
"RTN","IBATLM3A",33,0)
 . D SET(VAPA(IBX),.IBY,26,30)
"RTN","IBATLM3A",34,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",35,0)
 D:IBY'="" SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",36,0)
 ;
"RTN","IBATLM3A",37,0)
 D SET(VAPA(4)_", "_$P(VAPA(5),"^",2)_"  "_VAPA(6),.IBY,26,30)
"RTN","IBATLM3A",38,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",39,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",40,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",41,0)
 ;
"RTN","IBATLM3A",42,0)
 D SET("*** Eligibility Information ***",.IBY,24,31)
"RTN","IBATLM3A",43,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",44,0)
 D CNTRL^VALM10(VALMCNT,24,31,IOINHI,IOINORM)
"RTN","IBATLM3A",45,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",46,0)
 ;
"RTN","IBATLM3A",47,0)
 D SET("Patient Type:",.IBY,12,13)
"RTN","IBATLM3A",48,0)
 D SET($P(VAEL(6),"^",2),.IBY,26,15)
"RTN","IBATLM3A",49,0)
 D SET("Means Test Status:",.IBY,48,18)
"RTN","IBATLM3A",50,0)
 D SET($P(VAEL(9),"^",2),.IBY,67,13)
"RTN","IBATLM3A",51,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",52,0)
 ;
"RTN","IBATLM3A",53,0)
 D SET("Primary Eligibility:",.IBY,5,20)
"RTN","IBATLM3A",54,0)
 D SET($P(VAEL(1),"^",2),.IBY,26,15)
"RTN","IBATLM3A",55,0)
 D SET("Enrollment Priority:",.IBY,46,31)
"RTN","IBATLM3A",56,0)
 D SET($$PRIORITY^DGENA(DFN),.IBY,67,3) ; dbia #2918
"RTN","IBATLM3A",57,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",58,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",59,0)
 ;
"RTN","IBATLM3A",60,0)
 D SET("Secondary Eligibilities:",.IBY,1,24)
"RTN","IBATLM3A",61,0)
 S IBX=0 F  S IBX=$O(VAEL(1,IBX)) Q:IBX<1  D
"RTN","IBATLM3A",62,0)
 . D SET($P(VAEL(1,IBX),"^",2),.IBY,26,30)
"RTN","IBATLM3A",63,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",64,0)
 D:IBY'="" SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",65,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",66,0)
 ;
"RTN","IBATLM3A",67,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",68,0)
 D SET("*** Insurance Information ***",.IBY,25,29)
"RTN","IBATLM3A",69,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",70,0)
 D CNTRL^VALM10(VALMCNT,25,29,IOINHI,IOINORM)
"RTN","IBATLM3A",71,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",72,0)
 ;
"RTN","IBATLM3A",73,0)
 I IBINS D ALL^IBCNS1(DFN,"^TMP(""IBINS"",$J)",1) D  K ^TMP("IBINS",$J)
"RTN","IBATLM3A",74,0)
 . S IBX=0 F  S IBX=$O(^TMP("IBINS",$J,IBX))  Q:IBX<1  S IBX(0)=^(IBX,0) D
"RTN","IBATLM3A",75,0)
 .. D SET($P(^DIC(36,+IBX(0),0),"^"),.IBY,5,30)
"RTN","IBATLM3A",76,0)
 .. D SET($P(IBX(0),"^",2),.IBY,35,15)
"RTN","IBATLM3A",77,0)
 .. ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBATLM3A",78,0)
 .. ; HIPAA compliant Group Number is returned in piece 3 of ^TMP("IBINS",$J,IBX,0).
"RTN","IBATLM3A",79,0)
 .. ;I $P(IBX(0),"^",18),$D(^IBA(355.3,$P(IBX(0),"^",18),0)) D SET($P(^IBA(355.3,$P(IBX(0),"^",18),0),"^",3),.IBY,60,20)
"RTN","IBATLM3A",80,0)
 .. D SET($P(IBX(0),U,3),.IBY,60,20)
"RTN","IBATLM3A",81,0)
 .. ; end changes for 516
"RTN","IBATLM3A",82,0)
 .. D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",83,0)
 E  D SET("Patient has no active insurance information",.IBY,5,75),SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",84,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",85,0)
 ;
"RTN","IBATLM3A",86,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",87,0)
 D SET("*** Inpatient Information ***",.IBY,26,29)
"RTN","IBATLM3A",88,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",89,0)
 D CNTRL^VALM10(VALMCNT,26,29,IOINHI,IOINORM)
"RTN","IBATLM3A",90,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",91,0)
 ;
"RTN","IBATLM3A",92,0)
 D SET("Inpatient Status:",.IBY,8,17)
"RTN","IBATLM3A",93,0)
 D SET($S(IBINPT:"Active",1:"Inactive"),.IBY,26,10)
"RTN","IBATLM3A",94,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",95,0)
 ;
"RTN","IBATLM3A",96,0)
 D SET("Last Admission:",.IBY,10,17)
"RTN","IBATLM3A",97,0)
 D SET($S(VAIP(1)="":"Never Admitted",1:$P(VAIP(13,1),"^",2)),.IBY,26,17)
"RTN","IBATLM3A",98,0)
 D SET("Ward Location:",.IBY,47,14)
"RTN","IBATLM3A",99,0)
 D SET($P(VAIP(13,4),"^",2),.IBY,62,18)
"RTN","IBATLM3A",100,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",101,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",102,0)
 ;
"RTN","IBATLM3A",103,0)
 D APPTS
"RTN","IBATLM3A",104,0)
 ;
"RTN","IBATLM3A",105,0)
 D KVAR^VADPT ; dbia 10061
"RTN","IBATLM3A",106,0)
 ;
"RTN","IBATLM3A",107,0)
 Q
"RTN","IBATLM3A",108,0)
APPTS ; -- displays last 5 appointments
"RTN","IBATLM3A",109,0)
 ;
"RTN","IBATLM3A",110,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",111,0)
 D SET("*** Last Outpatient Appointments ***",.IBY,22,36)
"RTN","IBATLM3A",112,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",113,0)
 D CNTRL^VALM10(VALMCNT,22,36,IOINHI,IOINORM)
"RTN","IBATLM3A",114,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM3A",115,0)
 ;
"RTN","IBATLM3A",116,0)
 N IBVAL,IBFILTER
"RTN","IBATLM3A",117,0)
 S IBVAL("DFN")=DFN
"RTN","IBATLM3A",118,0)
 S IBVAL("BDT")=0
"RTN","IBATLM3A",119,0)
 S IBVAL("EDT")=$$NOW^XLFDT
"RTN","IBATLM3A",120,0)
 ; screen children and inpatient encounters
"RTN","IBATLM3A",121,0)
 S IBFILTER="I '$P(Y0,""^"",6),$P(Y0,""^"",12)'=8"
"RTN","IBATLM3A",122,0)
 ;
"RTN","IBATLM3A",123,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,"D APPTCB^IBATLM3A",0,,"BACKWARD")
"RTN","IBATLM3A",124,0)
 ;
"RTN","IBATLM3A",125,0)
 Q
"RTN","IBATLM3A",126,0)
APPTCB ; call back for scan to set up global
"RTN","IBATLM3A",127,0)
 ;
"RTN","IBATLM3A",128,0)
 D SET($$DATE($P(Y0,"^"),5),.IBY,5,17)
"RTN","IBATLM3A",129,0)
 D SET($P(^SC($P(Y0,"^",4),0),"^"),.IBY,25,30) ; dbia 10040
"RTN","IBATLM3A",130,0)
 D SET($$EX^IBATUTL(409.68,.12,$P(Y0,"^",12)),.IBY,60,20)
"RTN","IBATLM3A",131,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM3A",132,0)
 ;
"RTN","IBATLM3A",133,0)
 S IBCNT=IBCNT+1
"RTN","IBATLM3A",134,0)
 S:IBCNT>4 SDSTOP=1
"RTN","IBATLM3A",135,0)
 Q
"RTN","IBATLM3A",136,0)
 ;
"RTN","IBATLM3A",137,0)
SET(TEXT,STRING,COL,LENGTH) ; -- set up string with valm1
"RTN","IBATLM3A",138,0)
 S STRING=$$SETSTR^VALM1($$LOWER^VALM1(TEXT),STRING,COL,LENGTH)
"RTN","IBATLM3A",139,0)
 Q
"RTN","IBATLM3A",140,0)
SETVALM(LINE,TEXT) ; -- sets line for display
"RTN","IBATLM3A",141,0)
 S LINE=LINE+1
"RTN","IBATLM3A",142,0)
 S ^TMP("IBATPT",$J,LINE,0)=TEXT
"RTN","IBATLM3A",143,0)
 S TEXT=""
"RTN","IBATLM3A",144,0)
 Q
"RTN","IBATLM3A",145,0)
DATE(X,Y) ; -- returns date for display
"RTN","IBATLM3A",146,0)
 S:'$D(Y) Y="5D"
"RTN","IBATLM3A",147,0)
 Q $S(X:$$FMTE^XLFDT(X,Y),1:"")
"RTN","IBBFAPI")
0^48^B43892084^B43623282
"RTN","IBBFAPI",1,0)
IBBFAPI ;OAK/ELZ - FOR OTHER PACKAGES TO QUERY INSURANCE INFO ;2/18/10 3:42pm
"RTN","IBBFAPI",2,0)
 ;;2.0;INTEGRATED BILLING;**267,297,249,317,361,384,404,516**;21-MAR-94;Build 123
"RTN","IBBFAPI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBBFAPI",4,0)
 ;
"RTN","IBBFAPI",5,0)
 ; -- see IBBDOC for API documentation
"RTN","IBBFAPI",6,0)
 ;    no applications should call here directly
"RTN","IBBFAPI",7,0)
INSUR(DFN,IBDT,IBSTAT,IBR,IBFLDS) ; Return Patient Insurance Information
"RTN","IBBFAPI",8,0)
 ;
"RTN","IBBFAPI",9,0)
 N ERROR,ERRORT,FCNT,IBPLN,ICNT,INSP,N,N1,NOK,PASS,PASS1,X,%
"RTN","IBBFAPI",10,0)
 K ERRORT D ERRORLD
"RTN","IBBFAPI",11,0)
 S NOK=-1
"RTN","IBBFAPI",12,0)
 S DFN=$G(DFN)
"RTN","IBBFAPI",13,0)
 S IBSTAT=$G(IBSTAT)
"RTN","IBBFAPI",14,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBBFAPI",15,0)
 S IBFLDS=$G(IBFLDS)
"RTN","IBBFAPI",16,0)
 I IBDT,IBSTAT["A" S ERROR=107 D ERROR Q NOK
"RTN","IBBFAPI",17,0)
 S (ERROR,PASS)=0 K IBR
"RTN","IBBFAPI",18,0)
 I 'DFN S ERROR=102 D ERROR Q NOK
"RTN","IBBFAPI",19,0)
 I '$D(^DPT(DFN)) S ERROR=106 D ERROR Q NOK
"RTN","IBBFAPI",20,0)
 I IBDT]"",IBDT'?7N S ERROR=104 D ERROR Q NOK
"RTN","IBBFAPI",21,0)
 I +IBDT=0 D NOW^%DTC S IBDT=$P(%,".",1)
"RTN","IBBFAPI",22,0)
 I IBSTAT]"" N Y F X=1:1:$L(IBSTAT) S Y=$E(IBSTAT,X) I '$F("^A^R^P^O^I^B^E^",(U_Y_U)) S ERROR=105 D ERROR Q
"RTN","IBBFAPI",23,0)
 I ERROR=105 Q NOK
"RTN","IBBFAPI",24,0)
 I IBFLDS]"",IBFLDS'="*" N Y F X=1:1:$L(IBFLDS,",") D
"RTN","IBBFAPI",25,0)
 . S Y=$P(IBFLDS,",",X)
"RTN","IBBFAPI",26,0)
 . I Y'?1N.N S ERROR=103
"RTN","IBBFAPI",27,0)
 . I Y?1N.N,(Y<1)!(Y>24) S ERROR=103
"RTN","IBBFAPI",28,0)
 I ERROR=103 D ERROR Q NOK
"RTN","IBBFAPI",29,0)
 K IBR
"RTN","IBBFAPI",30,0)
 ; set buffer file flag
"RTN","IBBFAPI",31,0)
 S (X,IBR("BUFFER"))=0 F  S X=$O(^IBA(355.33,"C",DFN,X)) Q:'X  S IBR("BUFFER")=IBR("BUFFER")+1
"RTN","IBBFAPI",32,0)
 ; if ePharmacy requested then don't do Rx coverage, will do that elsewhere,
"RTN","IBBFAPI",33,0)
 ; if E then no generic P allowed!!!  E will limit the P check even more.
"RTN","IBBFAPI",34,0)
 I IBSTAT["E" S IBSTAT=$TR(IBSTAT,"P","")
"RTN","IBBFAPI",35,0)
 S (ICNT,N)=0 F  S N=$O(^DPT(DFN,.312,N)) Q:'N  I $D(^(N,0)) D
"RTN","IBBFAPI",36,0)
 . S X=^DPT(DFN,.312,N,0)
"RTN","IBBFAPI",37,0)
 . N X1
"RTN","IBBFAPI",38,0)
 . S X1=$G(^DIC(36,+X,0)) I X1="" Q  ; no insurance company entry
"RTN","IBBFAPI",39,0)
 . S INSP=$P(X,U,1),IBPLN=$P(X,U,18)
"RTN","IBBFAPI",40,0)
 . I IBSTAT'["R",$P(X1,U,2)="N" Q  ; does not reimburse
"RTN","IBBFAPI",41,0)
 . I IBSTAT'["B",$$INDEM^IBCNS1(X) Q  ; indemnity policy
"RTN","IBBFAPI",42,0)
 . S PASS1=0
"RTN","IBBFAPI",43,0)
 . I IBSTAT'["A" D
"RTN","IBBFAPI",44,0)
 . . I $P(X,U,8),IBDT<$P(X,U,8) S PASS1=1 Q  ;effective after care date
"RTN","IBBFAPI",45,0)
 . . I $P(X,U,4),IBDT>$P(X,U,4) S PASS1=1 Q  ;terminated before care date
"RTN","IBBFAPI",46,0)
 . . I $P($G(^IBA(355.3,+$P(X,U,18),0)),U,11) S PASS1=1 Q  ;inactive plan
"RTN","IBBFAPI",47,0)
 . . I $P(X1,U,5) S PASS1=1 Q  ; inactive insurance company
"RTN","IBBFAPI",48,0)
 . Q:PASS1
"RTN","IBBFAPI",49,0)
 . S ICNT=ICNT+1
"RTN","IBBFAPI",50,0)
 . S FCNT=$S(IBFLDS="*":24,1:$L(IBFLDS,",")) ; number of fields to pull
"RTN","IBBFAPI",51,0)
 . S IBR("IBBAPI","INSUR",ICNT)=""
"RTN","IBBFAPI",52,0)
 . I IBFLDS'="" F N1=1:1:FCNT D
"RTN","IBBFAPI",53,0)
 . . N RET,RETVAL
"RTN","IBBFAPI",54,0)
 . . S RET=$S(IBFLDS="*":N1,1:$P(IBFLDS,",",N1)),RETVAL="" I RET?1N.N,RET>0,RET<25 D @RET S IBR("IBBAPI","INSUR",ICNT,RET)=RETVAL
"RTN","IBBFAPI",55,0)
 . I IBSTAT["P"!(IBSTAT["O")!(IBSTAT["I")!(IBSTAT["E") D  I PASS1=0 K IBR("IBBAPI","INSUR",ICNT) S ICNT=ICNT-1
"RTN","IBBFAPI",56,0)
 . . S PASS1=0 Q:IBPLN=""
"RTN","IBBFAPI",57,0)
 . . I IBSTAT["P",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0 S PASS1=1
"RTN","IBBFAPI",58,0)
 . . I IBSTAT["O",+$$PLCOV(IBPLN,IBDT,"OUTPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",59,0)
 . . I IBSTAT["I",+$$PLCOV(IBPLN,IBDT,"INPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",60,0)
 . . I IBSTAT["E",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0,$$EPHARM(IBPLN) S PASS1=1
"RTN","IBBFAPI",61,0)
 I $D(IBR("IBBAPI","INSUR")),$O(IBR("IBBAPI","INSUR",0))'="ERROR" S PASS=1 F X=1:1 Q:'$D(IBR("IBBAPI","INSUR",X))  K:'$O(IBR("IBBAPI","INSUR",X,"")) IBR("IBBAPI","INSUR",X)
"RTN","IBBFAPI",62,0)
 Q PASS
"RTN","IBBFAPI",63,0)
ERRORLD ;  load error array
"RTN","IBBFAPI",64,0)
 F X=1:1:9 S ERRORT(X+100)=$P($T(ERRORLD1+X),";;",2)
"RTN","IBBFAPI",65,0)
 Q
"RTN","IBBFAPI",66,0)
 ;
"RTN","IBBFAPI",67,0)
ERRORLD1 ; error messages
"RTN","IBBFAPI",68,0)
 ;;DATABASE IS UNAVAILABLE
"RTN","IBBFAPI",69,0)
 ;;PATIENT ID IS REQUIRED
"RTN","IBBFAPI",70,0)
 ;;INVALID FIELD LIST
"RTN","IBBFAPI",71,0)
 ;;INVALID EFFECTIVE DATE
"RTN","IBBFAPI",72,0)
 ;;INVALID INSURANCE STATUS FILTER
"RTN","IBBFAPI",73,0)
 ;;INVALID PATIENT ID
"RTN","IBBFAPI",74,0)
 ;;INVALID COMBINATION, YOU CANNOT USE ""A"" WITH A DATE
"RTN","IBBFAPI",75,0)
 ;;DATA SOURCE IS NOT DEFINED
"RTN","IBBFAPI",76,0)
 ;;NO DATA ELEMENTS TO STORE
"RTN","IBBFAPI",77,0)
 ;;
"RTN","IBBFAPI",78,0)
ERROR ;
"RTN","IBBFAPI",79,0)
 K IBR S IBR("IBBAPI","INSUR","ERROR",ERROR)=ERRORT(ERROR)
"RTN","IBBFAPI",80,0)
 Q
"RTN","IBBFAPI",81,0)
 ;
"RTN","IBBFAPI",82,0)
1 ; Ins. Comp. name
"RTN","IBBFAPI",83,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.01,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.01)
"RTN","IBBFAPI",84,0)
 Q
"RTN","IBBFAPI",85,0)
2 ; Ins. Comp. Street Address Line 1
"RTN","IBBFAPI",86,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.111)
"RTN","IBBFAPI",87,0)
 Q
"RTN","IBBFAPI",88,0)
3 ; Ins. Comp. City
"RTN","IBBFAPI",89,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.114)
"RTN","IBBFAPI",90,0)
 Q
"RTN","IBBFAPI",91,0)
4 ; Ins. Comp. State
"RTN","IBBFAPI",92,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.115,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(36,INSP_",",.115)
"RTN","IBBFAPI",93,0)
 Q
"RTN","IBBFAPI",94,0)
5 ; Ins. Comp. Zip
"RTN","IBBFAPI",95,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.116)
"RTN","IBBFAPI",96,0)
 Q
"RTN","IBBFAPI",97,0)
6 ; Ins. Comp. Phone
"RTN","IBBFAPI",98,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.131)
"RTN","IBBFAPI",99,0)
 Q
"RTN","IBBFAPI",100,0)
7 ; Coordination of Benefits
"RTN","IBBFAPI",101,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.2,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.2)
"RTN","IBBFAPI",102,0)
 I RETVAL="^" S RETVAL=""
"RTN","IBBFAPI",103,0)
 Q
"RTN","IBBFAPI",104,0)
8 ; Policy Name ; patch 516 - baa
"RTN","IBBFAPI",105,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(355.3,RETVAL_",",2.01)
"RTN","IBBFAPI",106,0)
 Q
"RTN","IBBFAPI",107,0)
9 ; Policy Reimbursable?
"RTN","IBBFAPI",108,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",1,"I")
"RTN","IBBFAPI",109,0)
 S RETVAL=$S(RETVAL="Y":"1^YES",RETVAL="*":"1^YES",RETVAL="**":"1^YES",RETVAL="":"1^YES",1:"0^NO")
"RTN","IBBFAPI",110,0)
 Q
"RTN","IBBFAPI",111,0)
10 ; Policy Effective Date
"RTN","IBBFAPI",112,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",8,"I")
"RTN","IBBFAPI",113,0)
 Q
"RTN","IBBFAPI",114,0)
11 ; Policy Expiration Date
"RTN","IBBFAPI",115,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3,"I")
"RTN","IBBFAPI",116,0)
 Q
"RTN","IBBFAPI",117,0)
12 ; Subscriber Relationship
"RTN","IBBFAPI",118,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I")
"RTN","IBBFAPI",119,0)
 S RETVAL=$S(RETVAL="01":"P^PATIENT",RETVAL="02":"S^SPOUSE",RETVAL:"O^OTHER",1:"")
"RTN","IBBFAPI",120,0)
 Q
"RTN","IBBFAPI",121,0)
13 ; Subscriber Name ; patch 516 - baa
"RTN","IBBFAPI",122,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",7.01)
"RTN","IBBFAPI",123,0)
 Q
"RTN","IBBFAPI",124,0)
14  ; Subscriber ID ; patch 516 - baa
"RTN","IBBFAPI",125,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",7.02)
"RTN","IBBFAPI",126,0)
 Q
"RTN","IBBFAPI",127,0)
15 ; Pharmacy Coverage?
"RTN","IBBFAPI",128,0)
 N IBCOV
"RTN","IBBFAPI",129,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"PHARMACY")
"RTN","IBBFAPI",130,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",131,0)
 Q
"RTN","IBBFAPI",132,0)
16 ; Outpatient Coverage?
"RTN","IBBFAPI",133,0)
 N IBCOV
"RTN","IBBFAPI",134,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"OUTPATIENT")
"RTN","IBBFAPI",135,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",136,0)
 Q
"RTN","IBBFAPI",137,0)
17 ; Inpatient Coverage?
"RTN","IBBFAPI",138,0)
 N IBCOV
"RTN","IBBFAPI",139,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"INPATIENT")
"RTN","IBBFAPI",140,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",141,0)
 Q
"RTN","IBBFAPI",142,0)
18 ; Group Number ; patch 516 - baa
"RTN","IBBFAPI",143,0)
 S RETVAL=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")_",",2.02)
"RTN","IBBFAPI",144,0)
 Q
"RTN","IBBFAPI",145,0)
 ;
"RTN","IBBFAPI",146,0)
19 ; Patient Relationship to Subscriber
"RTN","IBBFAPI",147,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",16)
"RTN","IBBFAPI",148,0)
 Q
"RTN","IBBFAPI",149,0)
 ;
"RTN","IBBFAPI",150,0)
20 ; VA Advantage and Tricare plan
"RTN","IBBFAPI",151,0)
 S RETVAL=0  ; VA Advantage to be determined at a later date
"RTN","IBBFAPI",152,0)
 N PLN,TYP1,TYP2,RETVAL1
"RTN","IBBFAPI",153,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",154,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",155,0)
 S TYP2=$$GET1^DIQ(355.1,TYP1_",",.03,"I")
"RTN","IBBFAPI",156,0)
 S RETVAL1=$S(TYP2=7:1,1:0)  ; determine if Tricare plan
"RTN","IBBFAPI",157,0)
 S RETVAL=RETVAL_U_RETVAL1
"RTN","IBBFAPI",158,0)
 Q
"RTN","IBBFAPI",159,0)
 ;
"RTN","IBBFAPI",160,0)
21 ; Plan Type
"RTN","IBBFAPI",161,0)
 N PLN,TYP1
"RTN","IBBFAPI",162,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",163,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",164,0)
 S RETVAL=$S(TYP1:TYP1_U_$$GET1^DIQ(355.1,TYP1_",",.01,"I"),1:"")
"RTN","IBBFAPI",165,0)
 Q
"RTN","IBBFAPI",166,0)
 ;
"RTN","IBBFAPI",167,0)
22 ; Subscriber Sex
"RTN","IBBFAPI",168,0)
 D 12
"RTN","IBBFAPI",169,0)
 I $E(RETVAL)="P" S RETVAL=$$GET1^DIQ(2,DFN_",",.02,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2,DFN_",",.02)
"RTN","IBBFAPI",170,0)
 E  S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3.12,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",3.12)
"RTN","IBBFAPI",171,0)
 Q
"RTN","IBBFAPI",172,0)
 ;
"RTN","IBBFAPI",173,0)
23 ; Ins. Company Street Address Line 2
"RTN","IBBFAPI",174,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.112)
"RTN","IBBFAPI",175,0)
 Q
"RTN","IBBFAPI",176,0)
 ;
"RTN","IBBFAPI",177,0)
24 ; Ins. Company Street Address Line 3
"RTN","IBBFAPI",178,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.113)
"RTN","IBBFAPI",179,0)
 Q
"RTN","IBBFAPI",180,0)
 ;
"RTN","IBBFAPI",181,0)
PLCOV(IBPL,IBVDT,IBCAT) ; Determine if a specific plan covers a category of coverage as of a date
"RTN","IBBFAPI",182,0)
 ; IBPL - pointer to file 355.3 group insurance plan (req)
"RTN","IBBFAPI",183,0)
 ; IBVDT - fileman format visit date (req)
"RTN","IBBFAPI",184,0)
 ; IBCAT -  pointer to file 355.31 limitation of coverage category (req)
"RTN","IBBFAPI",185,0)
 N CATLIM,X,Y
"RTN","IBBFAPI",186,0)
 I '$G(IBPL)!('$G(IBVDT))!('$L($G(IBCAT))) Q 0
"RTN","IBBFAPI",187,0)
 S X=0
"RTN","IBBFAPI",188,0)
 S IBCAT=$O(^IBE(355.31,"B",IBCAT,"")) G:IBCAT="" PLCOVQ
"RTN","IBBFAPI",189,0)
 S CATLIM=$O(^IBA(355.32,"APCD",IBPL,IBCAT,+$O(^IBA(355.32,"APCD",IBPL,IBCAT,-(IBVDT+1))),""))
"RTN","IBBFAPI",190,0)
 S X=$S(CATLIM="":1,1:+$P($G(^IBA(355.32,CATLIM,0)),U,4))
"RTN","IBBFAPI",191,0)
PLCOVQ Q X
"RTN","IBBFAPI",192,0)
 ;
"RTN","IBBFAPI",193,0)
EPHARM(IBPL) ; return if a plan is epharmacy billable
"RTN","IBBFAPI",194,0)
 N IBPIEN,IBOK,IBY
"RTN","IBBFAPI",195,0)
 S IBOK=1
"RTN","IBBFAPI",196,0)
 S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBBFAPI",197,0)
 I 'IBPIEN S IBOK=0 G EPHARMQ
"RTN","IBBFAPI",198,0)
 D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBBFAPI",199,0)
 I $E($G(IBY(1)))'="A" S IBOK=0
"RTN","IBBFAPI",200,0)
EPHARMQ ;
"RTN","IBBFAPI",201,0)
 Q IBOK
"RTN","IBBFAPI",202,0)
 ;
"RTN","IBCAPP2")
0^18^B49339546^B43298709
"RTN","IBCAPP2",1,0)
IBCAPP2 ;ALB/GEF - Claims Auto Processing ;14-OCT-10
"RTN","IBCAPP2",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,516**;21-MAR-94;Build 123
"RTN","IBCAPP2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCAPP2",4,0)
 ;
"RTN","IBCAPP2",5,0)
 ; IBMRANOT = 1 when dealing with the COB Management Worklist.   
"RTN","IBCAPP2",6,0)
 ;            It is set by the entry action in the option file. 
"RTN","IBCAPP2",7,0)
 ;
"RTN","IBCAPP2",8,0)
CAP ; Build list from CAP x-ref entrypoint.  Called from BLD^IBCECOB1 for non-MRA worklist
"RTN","IBCAPP2",9,0)
 N IBDA,IBIFN
"RTN","IBCAPP2",10,0)
 S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"CAP",1,IBIFN)) Q:'IBIFN  D
"RTN","IBCAPP2",11,0)
 .; screen all eob's for the claim to see if claim can be on worklist
"RTN","IBCAPP2",12,0)
 .; IBDA= ien of 1st eob to pass all checks - or - 0 if none passed - or - -1 if process as paper EOB
"RTN","IBCAPP2",13,0)
 .S IBDA=$$MELG(IBIFN,IBMRADUP) Q:'IBDA
"RTN","IBCAPP2",14,0)
 .D BLD1(IBIFN,$S(IBDA=-1:"",1:IBDA))
"RTN","IBCAPP2",15,0)
 Q
"RTN","IBCAPP2",16,0)
 ;
"RTN","IBCAPP2",17,0)
BLD1(IBIFN,IBDA) ;
"RTN","IBCAPP2",18,0)
 N IB3611,IBTXT,IBX,IBPY,I,IB364,IBDT,IBAPY,IBB,IBB364,IBBPY,IBDAY,IBEUT
"RTN","IBCAPP2",19,0)
 N IBINS1,IBINS2,IBMRACNT,Z,Z0,IBMUT,IBNBAL,IBNDI1,IBNDI2,IBNDI3,IBNDM
"RTN","IBCAPP2",20,0)
 N IBPTRSP,IBQ,IBSEQ,IBSRVC,IBEXPY,IBFND,IBINS,IBNDS,IBOAM,IBPTNM,IBDENDUP
"RTN","IBCAPP2",21,0)
 ;
"RTN","IBCAPP2",22,0)
 Q:$D(^TMP("IBCOBSTX",$J,IBIFN))  ;show each bill once on the worklist
"RTN","IBCAPP2",23,0)
 S IBB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCAPP2",24,0)
 ;
"RTN","IBCAPP2",25,0)
 ; MRD;IB*2.0*516 - Use Division to sort claims.  If user has specified
"RTN","IBCAPP2",26,0)
 ; one or more divisions to include, then quit if this claim's division
"RTN","IBCAPP2",27,0)
 ; is not on that list.
"RTN","IBCAPP2",28,0)
 ;
"RTN","IBCAPP2",29,0)
 S IBDIV=$P(IBB,U,22) I IBDIV="" S IBDIV="UNKNOWN"
"RTN","IBCAPP2",30,0)
 I $D(^TMP("IBBIL-DIV",$J)),'$D(^TMP("IBBIL-DIV",$J,IBDIV)) Q
"RTN","IBCAPP2",31,0)
 ;
"RTN","IBCAPP2",32,0)
 S IBNDS=$G(^DGCR(399,IBIFN,"S")),IBNDI1=$G(^("I1")),IBNDI2=$G(^("I2")),IBNDI3=$G(^("I3")),IBNDM=$G(^("M"))
"RTN","IBCAPP2",33,0)
 S IBMUT=+$P(IBNDS,U,8),IBEUT=+$P(IBNDS,U,2)
"RTN","IBCAPP2",34,0)
 S IBINS="",IBSEQ=$$COBN^IBCEF(IBIFN),IB364="UNKNOWN",IBDT="UNKNOWN"
"RTN","IBCAPP2",35,0)
 S IB3611=$S($G(IBDA)'="":$G(^IBM(361.1,IBDA,0)),1:"")
"RTN","IBCAPP2",36,0)
 I $G(IB3611)'="" S IB364=$P(IB3611,U,19),IBDT=+$P(IB3611,U,6),IBSEQ=$P(IB3611,U,15)
"RTN","IBCAPP2",37,0)
 F I=1:1:3 S Z="IBNDI"_I I @Z D
"RTN","IBCAPP2",38,0)
 . N Q
"RTN","IBCAPP2",39,0)
 . S Q=(IBSEQ=I)
"RTN","IBCAPP2",40,0)
 . I Q S IBINS1=+@Z_U_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCAPP2",41,0)
 . S IBINS=IBINS_$S(IBINS="":"",1:", ")_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCAPP2",42,0)
 ;
"RTN","IBCAPP2",43,0)
 ; Get the payer/insurance company that comes after Medicare WNR
"RTN","IBCAPP2",44,0)
 ; If WNR is Primary, get the secondary ins. co.
"RTN","IBCAPP2",45,0)
 ; If WNR is secondary, get the tertiary ins. co.
"RTN","IBCAPP2",46,0)
 D  I $P($G(IBINS2),U,2)="" S $P(IBINS2,U,2)="UNKNOWN"
"RTN","IBCAPP2",47,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,1) S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U) Q
"RTN","IBCAPP2",48,0)
 . S IBINS2=+IBNDI3_U_$P($G(^DIC(36,+IBNDI3,0)),U)
"RTN","IBCAPP2",49,0)
 ;
"RTN","IBCAPP2",50,0)
 S IBFND=0
"RTN","IBCAPP2",51,0)
 ; biller entry not ALL and no biller, then get entered/edited by user
"RTN","IBCAPP2",52,0)
 I $D(^TMP("IBBIL",$J)) D  Q:'IBFND
"RTN","IBCAPP2",53,0)
 . S IBFND=$S($D(^TMP("IBBIL",$J,IBMUT)):IBMUT,$D(^TMP("IBBIL",$J,IBEUT)):IBEUT,1:0)
"RTN","IBCAPP2",54,0)
 S Z=$S(IBFND:IBFND,IBMUT:IBMUT,1:IBEUT)
"RTN","IBCAPP2",55,0)
 S IBMUT=$P($G(^VA(200,+Z,0)),U)_"~"_Z
"RTN","IBCAPP2",56,0)
 S:'$P(IBMUT,"~",2) IBMUT="UNKNOWN~0"
"RTN","IBCAPP2",57,0)
 S IBBPY=+$$COBN^IBCEF(IBIFN),IBQ=1
"RTN","IBCAPP2",58,0)
 ;IBQ;1=EOB without subsequent insurer,0=COB,2=0 balance
"RTN","IBCAPP2",59,0)
 D  ;I IBQ Q
"RTN","IBCAPP2",60,0)
 . ;Check for no reimbursable subsequent insurance
"RTN","IBCAPP2",61,0)
 .  F I=IBBPY+1:1:3 D  Q:'IBQ
"RTN","IBCAPP2",62,0)
 .. S Z="IBNDI"_I,Z=$G(@Z)
"RTN","IBCAPP2",63,0)
 .. I $P($G(^DIC(36,+Z,0)),U,2)="N" S IBQ=0 Q
"RTN","IBCAPP2",64,0)
 . ;Check if next ins doesn't exist or next bill# already created
"RTN","IBCAPP2",65,0)
 . S Z="IBNDI"_(IBBPY+1),Z=$G(@Z)
"RTN","IBCAPP2",66,0)
 . I Z,'$P($G(^DGCR(399,IBIFN,"M1")),U,5+IBBPY) S IBQ=0
"RTN","IBCAPP2",67,0)
 ;
"RTN","IBCAPP2",68,0)
 ; Days since transmission of latest bill in COB - IBDAY
"RTN","IBCAPP2",69,0)
 S IBDAY=+$P($G(^DGCR(399,IBIFN,"TX")),U,2) I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1)
"RTN","IBCAPP2",70,0)
 ; if no Last Electronic Extract Date on file 399, get it from file 364
"RTN","IBCAPP2",71,0)
 I 'IBDAY D  I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1) ;calc. the difference
"RTN","IBCAPP2",72,0)
 . S IBB364=$$LAST364^IBCEF4(IBIFN) I IBB364'="" S IBDAY=+$P($P($G(^IBA(364,IBB364,0)),U,4),".",1)
"RTN","IBCAPP2",73,0)
 ;
"RTN","IBCAPP2",74,0)
 S IBAPY=$$TPR^PRCAFN(IBIFN) ; payment on this bill from A/R  IA#380
"RTN","IBCAPP2",75,0)
 S:$G(IBDA)'="" IBEXPY=+$G(^IBM(361.1,IBDA,1))       ; payer paid amount
"RTN","IBCAPP2",76,0)
 S IBPY=$S(IBAPY:IBAPY,1:+$G(IBEXPY))
"RTN","IBCAPP2",77,0)
 S IBOAM=+$G(^DGCR(399,IBIFN,"U1"))     ; total charges for bill
"RTN","IBCAPP2",78,0)
 ; Don't include claim if AR STATUS is COLLECTED/CLOSED and no subsequent payer and not one of the TRICARE/Champus claims that needs to be evaluated for Pt Payment,remove from list and quit
"RTN","IBCAPP2",79,0)
 I $P($$BILL^RCJIBFN2(IBIFN),U,2)=22 S IBX=$$EOB^IBCNSBL2(IBIFN,IBOAM,IBPY,.IBTXT) I '$D(IBTXT) D RMV(IBIFN) Q
"RTN","IBCAPP2",80,0)
 S IBNBAL=IBOAM-IBPY
"RTN","IBCAPP2",81,0)
 S IBPTRSP=$S(IBNBAL>0:IBNBAL,1:0)
"RTN","IBCAPP2",82,0)
 I IBNBAL'>0 S IBQ=2
"RTN","IBCAPP2",83,0)
 S IBPTNM=$P($G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0)),U) I IBPTNM="" S IBPTNM="UNKNOWN"
"RTN","IBCAPP2",84,0)
 S IBSRVC=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCAPP2",85,0)
 S Z0=$S(IBSRT="B":IBMUT,IBSRT="D":-IBDAY,IBSRT="I":$P(IBINS2,U,2)_"~"_$P(IBINS2,U),IBSRT="M":$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13)),IBSRT="R":-IBPTRSP,IBSRT="P":IBPTNM,IBSRT="S":+IBSRVC,1:+IBDT)
"RTN","IBCAPP2",86,0)
 S:((IBSRT="M")&(Z0="")) Z0="UNKNOWN"   ;USE UNKNOWN IF NOT SET - BI;IB*2.0*432
"RTN","IBCAPP2",87,0)
 ;
"RTN","IBCAPP2",88,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCAPP2",89,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_$G(IBDA)_U_$$HIS(IBIFN)_U_$G(IBDAY)_U_$G(IBDT)_U_IBQ_U_$G(IB364)_U_IBSEQ_U_$G(IBEXPY)_U_IBPTRSP
"RTN","IBCAPP2",90,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN,1)=$S($G(IB3611)="":"No EEOB Received ",1:$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16))
"RTN","IBCAPP2",91,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_$G(IBDA)_U_$$HIS(IBIFN)_U_$G(IBDAY)_U_$G(IBDT)_U_IBQ_U_$G(IB364)_U_IBSEQ_U_$G(IBEXPY)_U_IBPTRSP
"RTN","IBCAPP2",92,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1)=$S($G(IB3611)="":"No EEOB Received ",1:$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16))
"RTN","IBCAPP2",93,0)
 S ^TMP("IBCOBSTX",$J,IBIFN)=$G(IBDA)  ;keep track of compiled IBIFN's
"RTN","IBCAPP2",94,0)
 ;
"RTN","IBCAPP2",95,0)
 ; Save some data when there are multiple MRA's on file for this bill
"RTN","IBCAPP2",96,0)
 S IBMRACNT=$$MRACNT^IBCEMU1(IBIFN,$G(IBMRANOT))   ;WCJ IB*2.0*432
"RTN","IBCAPP2",97,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCAPP2",98,0)
 ;I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCAPP2",99,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCAPP2",100,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=$G(IBDENDUP)
"RTN","IBCAPP2",101,0)
 ;S:$G(IBDA)'="" $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=$$DENDUP^IBCEMU4(IBDA,1)
"RTN","IBCAPP2",102,0)
 I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCAPP2",103,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCAPP2",104,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,4)=$G(IBDENDUP)
"RTN","IBCAPP2",105,0)
 S:$G(IBDA)'="" $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,4)=$$DENDUP^IBCEMU4(IBDA,1)
"RTN","IBCAPP2",106,0)
 Q
"RTN","IBCAPP2",107,0)
 ;
"RTN","IBCAPP2",108,0)
HIS(IBIFN) ; COB history
"RTN","IBCAPP2",109,0)
 N A,B,IBST,IBBIL,IBHIS
"RTN","IBCAPP2",110,0)
 S IBHIS="",A=0 F  S A=$O(^IBM(361.1,"ABS",IBIFN,A)) Q:'A  S B=0 F  S B=$O(^IBM(361.1,"ABS",IBIFN,A,B)) Q:'B  D
"RTN","IBCAPP2",111,0)
 . S IBST=$P($G(^IBM(361.1,B,0)),U,4),IBBIL=$P($G(^DGCR(399,IBIFN,"M1")),U,4+A)   ;WCJ IB*2.0*432 added $G
"RTN","IBCAPP2",112,0)
 . Q:IBBIL=""
"RTN","IBCAPP2",113,0)
 . S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",1:"TERTIARY")_" "_$S(IBST:"MRA",1:"EOB")_" RECEIVED - "_IBBIL
"RTN","IBCAPP2",114,0)
 I '$D(^IBM(361.1,"ABS",IBIFN)) F A=1:1:3 S IBBIL=$P($G(^DGCR(399,IBIFN,"M1")),U,4+A) I IBBIL'="" S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",A=3:"TERTIARY",1:"UNKNOWN")_" No EOB RECEIVED - "_IBBIL
"RTN","IBCAPP2",115,0)
 Q IBHIS
"RTN","IBCAPP2",116,0)
 ;
"RTN","IBCAPP2",117,0)
MELG(IBIFN,IBMRADUP) ; function to check all EOBs for a claim and determine if they are
"RTN","IBCAPP2",118,0)
 ; eligible for inclusion on the COB management worklist, uses both B & C x-ref
"RTN","IBCAPP2",119,0)
 ; IBIFN - claim ien (required)
"RTN","IBCAPP2",120,0)
 ; IBMRADUP - indicates user said NO to "include denied for duplicate" prompt
"RTN","IBCAPP2",121,0)
 ;
"RTN","IBCAPP2",122,0)
 ; Returns EOB ien to use for display, if at least 1 EOB passed all checks
"RTN","IBCAPP2",123,0)
 ; if multiple EOBs passed but some have filing errors, returns the 1st EOB found that does NOT have filing errors
"RTN","IBCAPP2",124,0)
 ; if all EOBs have filing errors, tries to find one that is a PROCESSED status and return that one for CBW display
"RTN","IBCAPP2",125,0)
 ; Returns -1 if claim should appear on the worklist with no EOB
"RTN","IBCAPP2",126,0)
 ; Returns 0 if no EOBs passed the checks and claim should not appear on the worklist, also removes it
"RTN","IBCAPP2",127,0)
 ;
"RTN","IBCAPP2",128,0)
 ; IBCK = Total number of EOBs found for this claim ien
"RTN","IBCAPP2",129,0)
 ; IBECT = Total number of EOBs that failed the EOB TYPE check
"RTN","IBCAPP2",130,0)
 ; IBCT = Total number of EOBs for a claim that passed ALL the checks
"RTN","IBCAPP2",131,0)
 ;
"RTN","IBCAPP2",132,0)
 N IBDA,IBCT,IBEOBNDX,IBEOB,IB3611,IBCK,IBETC
"RTN","IBCAPP2",133,0)
 S IBCT=0,IBCK=0,IBETC=0
"RTN","IBCAPP2",134,0)
 F IBEOBNDX="B","C" D
"RTN","IBCAPP2",135,0)
 .S IBDA=0 F  S IBDA=$O(^IBM(361.1,IBEOBNDX,IBIFN,IBDA)) Q:'+IBDA  D
"RTN","IBCAPP2",136,0)
 ..Q:$D(IBEOB(IBDA))
"RTN","IBCAPP2",137,0)
 ..S IB3611=$G(^IBM(361.1,IBDA,0)),IBCK=IBCK+1
"RTN","IBCAPP2",138,0)
 ..Q:$D(^IBM(361.1,IBDA,"ERR"))
"RTN","IBCAPP2",139,0)
 ..; if this is a denied EOB and user does NOT want to include denied as duplicates and this EOB was denied as duplicate, don't include
"RTN","IBCAPP2",140,0)
 ..I $P(IB3611,U,13)=2,'$G(IBMRADUP),$$DENDUP^IBCEMU4(IBDA,1) Q
"RTN","IBCAPP2",141,0)
 ..; eob type must be correct for this worklist
"RTN","IBCAPP2",142,0)
 ..I $P(IB3611,U,4)=1 S IBETC=IBETC+1 Q
"RTN","IBCAPP2",143,0)
 ..; allow filing errors on worklist, but try to find at least 1 Processed EOB w/out errors
"RTN","IBCAPP2",144,0)
 ..I $D(^IBM(361.1,IBDA,"ERR")) S:$P($G(^IBM(361.1,IBDA,0)),U,13)'=1 IBEOB("DER",IBDA)="" S:$P($G(^IBM(361.1,IBDA,0)),U,13)=1 IBEOB("PER",IBDA)="" Q
"RTN","IBCAPP2",145,0)
 ..S IBEOB(IBDA)="",IBCT=IBCT+1
"RTN","IBCAPP2",146,0)
 ; if no EOB was found to check, return -1 to process as no EOB
"RTN","IBCAPP2",147,0)
 Q:IBCK=0 -1
"RTN","IBCAPP2",148,0)
 ; if no EOB passed, check to see if the EOBs were all MRA primaries that failed the EOB type check (2ndary/tertiaries were paper)
"RTN","IBCAPP2",149,0)
 I IBCT=0,$$WNRBILL^IBEFUNC(IBIFN,1),$$COBN^IBCEF(IBIFN)>1,(IBCK=IBETC) Q -1
"RTN","IBCAPP2",150,0)
 ; if no EOB's passed, check for filing errors and use that EOB, with Processed EOB's taking priority over denied
"RTN","IBCAPP2",151,0)
 I IBCT=0,$D(IBEOB("PER")) Q $O(IBEOB("PER",0))
"RTN","IBCAPP2",152,0)
 I IBCT=0,$D(IBEOB("DER")) Q $O(IBEOB("DER",0))
"RTN","IBCAPP2",153,0)
 ; if no EOB passed and not MRA primary w/subsequent paper EOB's or filing errors, do not put on CBW
"RTN","IBCAPP2",154,0)
 Q:IBCT=0 0
"RTN","IBCAPP2",155,0)
 ; if one or more EOBs passed, return the 1st one that passed the checks as the one to use for CBW display
"RTN","IBCAPP2",156,0)
 Q $O(IBEOB(0))
"RTN","IBCAPP2",157,0)
 ;
"RTN","IBCAPP2",158,0)
RMV(DA) ;remove from worklist claims that are erroneously there
"RTN","IBCAPP2",159,0)
 N DIE,DR
"RTN","IBCAPP2",160,0)
 S DIE="^DGCR(399,",DR="35////@" D ^DIE ; Should never have been on the WORKLIST
"RTN","IBCAPP2",161,0)
 Q
"RTN","IBCAPP2",162,0)
 ;
"RTN","IBCBB11")
0^3^B95727608^B97720533
"RTN","IBCBB11",1,0)
IBCBB11 ;ALB/AAS/OIFO-BP/PIJ - CONTINUATION OF EDIT CHECK ROUTINE ;12 Jun 2006  3:45 PM
"RTN","IBCBB11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,343,363,371,395,392,401,384,400,436,432,516**;21-MAR-94;Build 123
"RTN","IBCBB11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB11",4,0)
 ;
"RTN","IBCBB11",5,0)
WARN(IBDISP) ; Set warning in global
"RTN","IBCBB11",6,0)
 ; DISP = warning text to display
"RTN","IBCBB11",7,0)
 ;
"RTN","IBCBB11",8,0)
 N Z
"RTN","IBCBB11",9,0)
 S Z=+$O(^TMP($J,"BILL-WARN",""),-1)
"RTN","IBCBB11",10,0)
 I Z=0 S ^TMP($J,"BILL-WARN",1)=$J("",5)_"**Warnings**:",Z=1
"RTN","IBCBB11",11,0)
 S Z=Z+1,^TMP($J,"BILL-WARN",Z)=$J("",5)_IBDISP
"RTN","IBCBB11",12,0)
 Q
"RTN","IBCBB11",13,0)
 ;
"RTN","IBCBB11",14,0)
MULTDIV(IBIFN,IBND0) ; Check for multiple divisions on a bill ien IBIFN
"RTN","IBCBB11",15,0)
 ; IBND0 = 0-node of bill
"RTN","IBCBB11",16,0)
 ;
"RTN","IBCBB11",17,0)
 ;  Function returns 1 if more than 1 division found on bill
"RTN","IBCBB11",18,0)
 N Z,Z0,Z1,MULT
"RTN","IBCBB11",19,0)
 S MULT=0,Z1=$P(IBND0,U,22)
"RTN","IBCBB11",20,0)
 I Z1 D
"RTN","IBCBB11",21,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$P(^(Z,0),U,7) I Z0,Z0'=Z1 S MULT=1 Q
"RTN","IBCBB11",22,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=$P(^(Z,0),U,6) I Z0,Z0'=Z1 S MULT=2 Q
"RTN","IBCBB11",23,0)
 I 'Z1 S MULT=3
"RTN","IBCBB11",24,0)
 Q MULT
"RTN","IBCBB11",25,0)
 ;
"RTN","IBCBB11",26,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB11",27,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB11",28,0)
 ;
"RTN","IBCBB11",29,0)
NPICHK ; Check for required NPIs
"RTN","IBCBB11",30,0)
 N IBNPIS,IBNONPI,IBNPIREQ,Z,IBNFI,IBTF,IBWC,IBXSAVE,IBPRV,IBLINE
"RTN","IBCBB11",31,0)
 ;*** pij start IB*20*436 ***
"RTN","IBCBB11",32,0)
 N IBRATYPE,IBLEGAL
"RTN","IBCBB11",33,0)
 S (IBRATYPE,IBLEGAL)=""
"RTN","IBCBB11",34,0)
 S IBRATYPE=$P($G(^DGCR(399,IBIFN,0)),U,7)
"RTN","IBCBB11",35,0)
 ; Legal types for this use.
"RTN","IBCBB11",36,0)
 ;  7=NO FAULT INS.
"RTN","IBCBB11",37,0)
 ; 10=TORT FEASOR
"RTN","IBCBB11",38,0)
 ; 11=WORKERS' COMP.
"RTN","IBCBB11",39,0)
 S IBNFI=$O(^DGCR(399.3,"B","NO FAULT INS.",0)) S:'IBNFI IBNFI=7
"RTN","IBCBB11",40,0)
 S IBTF=$O(^DGCR(399.3,"B","TORT FEASOR",0)) S:'IBTF IBTF=10
"RTN","IBCBB11",41,0)
 S IBWC=$O(^DGCR(399.3,"B","WORKERS' COMP.",0)) S:'IBWC IBWC=11
"RTN","IBCBB11",42,0)
 ;
"RTN","IBCBB11",43,0)
 I IBRATYPE=IBNFI!(IBRATYPE=IBTF)!(IBRATYPE=IBWC) D
"RTN","IBCBB11",44,0)
 . ; One of the legal types - force local print
"RTN","IBCBB11",45,0)
 . S IBLEGAL=1
"RTN","IBCBB11",46,0)
 ;*** pij end ***
"RTN","IBCBB11",47,0)
 S IBNPIREQ=$$NPIREQ^IBCEP81(DT)  ; Check if NPI is required
"RTN","IBCBB11",48,0)
 ; Check providers
"RTN","IBCBB11",49,0)
 ; IB*2.0*432 changed the NPI check to the new Provider Array
"RTN","IBCBB11",50,0)
 ;S IBNPIS=$$PROVNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",51,0)
 D ALLIDS^IBCEFP(IBIFN,.IBXSAVE,1)
"RTN","IBCBB11",52,0)
 S IBPRV=""
"RTN","IBCBB11",53,0)
 F  S IBPRV=$O(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",54,0)
 . I $P($G(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV,0)),U,4)="" S IBNONPI(IBPRV)=""
"RTN","IBCBB11",55,0)
 S IBLINE=""
"RTN","IBCBB11",56,0)
 F  S IBLINE=$O(IBXSAVE("L-PROV",IBIFN,IBLINE)) Q:'IBLINE  D
"RTN","IBCBB11",57,0)
 . S IBPRV=""
"RTN","IBCBB11",58,0)
 . F  S IBPRV=$O(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV)) Q:IBPRV=""  D
"RTN","IBCBB11",59,0)
 .. I $P($G(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV,0)),U,4)="" S IBNONPI(IBPRV)=""
"RTN","IBCBB11",60,0)
 I $D(IBNONPI) S IBPRV="" F  S IBPRV=$O(IBNONPI(IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",61,0)
 . S IBER=IBER_"IB"_(140+IBPRV)_";" Q  ; If required, set error IB*2*516
"RTN","IBCBB11",62,0)
 ; Check organizations
"RTN","IBCBB11",63,0)
 S IBNONPI=""
"RTN","IBCBB11",64,0)
 S IBNPIS=$$ORGNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",65,0)
 I $L(IBNONPI) F Z=1:1:$L(IBNONPI,U) D
"RTN","IBCBB11",66,0)
 . S IBER=IBER_$P("IB339;^IB340;^IB341;",U,$P(IBNONPI,U,Z))  ; DEM;432 Added NPI errors.
"RTN","IBCBB11",67,0)
 Q
"RTN","IBCBB11",68,0)
 ;
"RTN","IBCBB11",69,0)
TAXCHK ; Check for required taxonomies
"RTN","IBCBB11",70,0)
 N IBDT,IBLINE,IBNOTAX,IBPRV,IBTAXS,IBXSAVE,Z
"RTN","IBCBB11",71,0)
 ;
"RTN","IBCBB11",72,0)
 ; MRD;IB*2.0*516 - This check is now moot; 'today' is always on or
"RTN","IBCBB11",73,0)
 ; after May 23, 2008, so taxonomy codes are always required
"RTN","IBCBB11",74,0)
 ; for certain providers.
"RTN","IBCBB11",75,0)
 ;S IBTAXREQ=$$TAXREQ^IBCEP81(DT)  ; Check if taxonomy is required
"RTN","IBCBB11",76,0)
 ;
"RTN","IBCBB11",77,0)
 ; Check providers
"RTN","IBCBB11",78,0)
 ; IB*2.0*432 changed the Taxonomy check to the new Provider Array
"RTN","IBCBB11",79,0)
 ;S IBTAXS=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",80,0)
 D ALLIDS^IBCEFP(IBIFN,.IBXSAVE,1)
"RTN","IBCBB11",81,0)
 S IBPRV=""
"RTN","IBCBB11",82,0)
 F  S IBPRV=$O(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",83,0)
 . I $G(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV,"TAXONOMY"))="" S IBNOTAX(IBPRV)=""
"RTN","IBCBB11",84,0)
 . Q
"RTN","IBCBB11",85,0)
 ;
"RTN","IBCBB11",86,0)
 S IBLINE=""
"RTN","IBCBB11",87,0)
 F  S IBLINE=$O(IBXSAVE("L-PROV",IBIFN,IBLINE)) Q:'IBLINE  D
"RTN","IBCBB11",88,0)
 . S IBPRV=""
"RTN","IBCBB11",89,0)
 . F  S IBPRV=$O(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV)) Q:IBPRV=""  D
"RTN","IBCBB11",90,0)
 . . I $G(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV,"TAXONOMY"))="" S IBNOTAX(IBPRV)=""
"RTN","IBCBB11",91,0)
 . . Q
"RTN","IBCBB11",92,0)
 . Q
"RTN","IBCBB11",93,0)
 ;
"RTN","IBCBB11",94,0)
 ; IB251 = Referring provider taxonomy missing.
"RTN","IBCBB11",95,0)
 ; IB253 = Rendering provider taxonomy missing.
"RTN","IBCBB11",96,0)
 ; IB254 = Attending provider taxonomy missing.
"RTN","IBCBB11",97,0)
 ;
"RTN","IBCBB11",98,0)
 I $D(IBNOTAX) S IBPRV="" F  S IBPRV=$O(IBNOTAX(IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",99,0)
 . ; Only Referring, Rendering and Attending are currently sent to the payer
"RTN","IBCBB11",100,0)
 . ;I IBTAXREQ,"134"[IBPRV S IBER=IBER_"IB"_(250+IBPRV)_";" Q  ; MRD;IB*2.0*516 - Always required.
"RTN","IBCBB11",101,0)
 . I "134"[IBPRV S IBER=IBER_"IB"_(250+IBPRV)_";" Q  ; If required, set error and quit
"RTN","IBCBB11",102,0)
 . D WARN("Taxonomy for the "_$P("referring^operating^rendering^attending^supervising^^^^other",U,IBPRV)_" provider has no value")  ; Else, set warning
"RTN","IBCBB11",103,0)
 . Q
"RTN","IBCBB11",104,0)
 ;
"RTN","IBCBB11",105,0)
 ; Check organizations.  The function ORGTAX will set IBNOTAX to be a
"RTN","IBCBB11",106,0)
 ; list of entities missing taxonomy codes, if any (n, n^m, n^m^p,
"RTN","IBCBB11",107,0)
 ; where each 1 is service facility, 2 is non-VA service facility and
"RTN","IBCBB11",108,0)
 ; 3 is billing provider.
"RTN","IBCBB11",109,0)
 ;
"RTN","IBCBB11",110,0)
 S IBNOTAX=""
"RTN","IBCBB11",111,0)
 S IBTAXS=$$ORGTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",112,0)
 I $L(IBNOTAX) F Z=1:1:$L(IBNOTAX,U) D
"RTN","IBCBB11",113,0)
 . ; IB167 = Billing Provider taxonomy missing.
"RTN","IBCBB11",114,0)
 . ;I IBTAXREQ,$P(IBNOTAX,U,Z)=3 S IBER=IBER_"IB167;" Q  ; MRD;IB*2.0*516 - Always required.
"RTN","IBCBB11",115,0)
 . I $P(IBNOTAX,U,Z)=3 S IBER=IBER_"IB167;" Q
"RTN","IBCBB11",116,0)
 . ; MRD;IB*2.0*516 - Remove warning message for missing taxonomy code for lab or facility.
"RTN","IBCBB11",117,0)
 . ; D WARN("Taxonomy for the "_$P("Service Facility^Non-VA Service Facility^Billing Provider",U,$P(IBNOTAX,U,Z))_" has no value")  ; Else, set warning
"RTN","IBCBB11",118,0)
 . Q
"RTN","IBCBB11",119,0)
 ;
"RTN","IBCBB11",120,0)
 Q
"RTN","IBCBB11",121,0)
 ;
"RTN","IBCBB11",122,0)
VALNDC(IBIFN,IBDFN) ; IB*2*363 - validate NDC# between PRESCRIPTION file (#52)
"RTN","IBCBB11",123,0)
 ; and IB BILL/CLAIMS PRESCRIPTION REFILL file (#362.4)
"RTN","IBCBB11",124,0)
 ; input - IBIFN = internal entry number of the billing record in the BILL/CLAIMS file (#399)
"RTN","IBCBB11",125,0)
 ;         IBDFN = internal entry number of patient record in the PATIENT file (#2)
"RTN","IBCBB11",126,0)
 N IBX,IBRXCOL
"RTN","IBCBB11",127,0)
 ; call program that determines if NDC differences exist
"RTN","IBCBB11",128,0)
 D VALNDC^IBEFUNC3(IBIFN,IBDFN,.IBRXCOL)
"RTN","IBCBB11",129,0)
 Q:'$D(IBRXCOL)
"RTN","IBCBB11",130,0)
 ; at least one RX on the IB record has an NDC discrepancy 
"RTN","IBCBB11",131,0)
 S IBX=0 F  S IBX=$O(IBRXCOL(IBX)) Q:'IBX  D WARN("NDC# on Bill does not equal the NDC# on Rx "_IBRXCOL(IBX))
"RTN","IBCBB11",132,0)
 Q
"RTN","IBCBB11",133,0)
 ;
"RTN","IBCBB11",134,0)
PRIIDCHK ; Check for required Pimarary ID (SSN/EIN)
"RTN","IBCBB11",135,0)
 ; If the provider is on the claim, he must have one
"RTN","IBCBB11",136,0)
 ; 
"RTN","IBCBB11",137,0)
 N IBI,IBZ
"RTN","IBCBB11",138,0)
 I $$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB11",139,0)
 . D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ",,IBIFN)
"RTN","IBCBB11",140,0)
 . S IBI="" F  S IBI=$O(^DGCR(399,IBIFN,"PRV","B",IBI)) Q:IBI=""  D
"RTN","IBCBB11",141,0)
 .. I $P(IBZ,U,IBI)="" S IBER=IBER_$S(IBI=1:"IB151;",IBI=2:"IB152;",IBI=3!(IBI=4):"IB321;",IBI=5:"IB153;",IBI=9:"IB154;",1:"")
"RTN","IBCBB11",142,0)
 Q
"RTN","IBCBB11",143,0)
 ;
"RTN","IBCBB11",144,0)
RXNPI(IBIFN) ; check for multiple pharmacy npi's on the same bill
"RTN","IBCBB11",145,0)
 N IBORG,IBRXNPI,IBX,IBY
"RTN","IBCBB11",146,0)
 S IBORG=$$RXSITE^IBCEF73A(IBIFN,.IBORG)
"RTN","IBCBB11",147,0)
 S IBX=0 F  S IBX=$O(IBORG(IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(IBORG(IBX,IBY)) Q:'IBY  S IBRXNPI(+IBORG(IBX,IBY))=""
"RTN","IBCBB11",148,0)
 S (IBX,IBY)=0 F  S IBX=$O(IBRXNPI(IBX)) Q:'IBX  S IBY=IBY+1
"RTN","IBCBB11",149,0)
 I IBY>1 D WARN("Bill has prescriptions resulting from "_IBY_" different NPI locations")
"RTN","IBCBB11",150,0)
 Q
"RTN","IBCBB11",151,0)
 ;
"RTN","IBCBB11",152,0)
ROICHK(IBIFN,IBDFN,IBINS) ; IB*2.0*384 - check prescriptions that contain the
"RTN","IBCBB11",153,0)
 ; special handling code U against the Claims Tracking ROI file (#356.25)
"RTN","IBCBB11",154,0)
 ; to see if an ROI is on file
"RTN","IBCBB11",155,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",156,0)
 ;         IBDFN = IEN of the patient
"RTN","IBCBB11",157,0)
 ;         IBINS = IEN of the payer insurance company (#36)
"RTN","IBCBB11",158,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",159,0)
 ;          1 = a prescription is sensitive and there is no ROI on file
"RTN","IBCBB11",160,0)
 ;
"RTN","IBCBB11",161,0)
 N IBX,IBY0,IBRXIEN,IBDT,IBDRUG,ROIQ
"RTN","IBCBB11",162,0)
 S ROIQ=0
"RTN","IBCBB11",163,0)
 S IBX=0 F  S IBX=$O(^IBA(362.4,"C",IBIFN,IBX)) Q:'IBX  D
"RTN","IBCBB11",164,0)
 .S IBY0=^IBA(362.4,IBX,0),IBRXIEN=$P(IBY0,U,5) I 'IBRXIEN Q
"RTN","IBCBB11",165,0)
 .S IBDT=$P(IBY0,U,3),IBDRUG=$P(IBY0,U,4)
"RTN","IBCBB11",166,0)
 .D ZERO^IBRXUTL(IBDRUG)
"RTN","IBCBB11",167,0)
 .I ^TMP($J,"IBDRUG",IBDRUG,3)["U" D
"RTN","IBCBB11",168,0)
 .. I $$ROI^IBNCPDR4(IBDFN,IBDRUG,IBINS,IBDT) Q  ;ROI is on file
"RTN","IBCBB11",169,0)
 .. D WARN("ROI not on file for prescription "_$$RXAPI1^IBNCPUT1(IBRXIEN,.01,"E"))
"RTN","IBCBB11",170,0)
 .. S ROIQ=1
"RTN","IBCBB11",171,0)
ROICHKQ ;
"RTN","IBCBB11",172,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCBB11",173,0)
 Q ROIQ
"RTN","IBCBB11",174,0)
 ;
"RTN","IBCBB11",175,0)
AMBCK(IBIFN)    ; IB*2.0*432 - if ambulance location defined, address must be defined
"RTN","IBCBB11",176,0)
 ; if there is anything entered in any of the address fields (either p/up or drop/off fields), than there needs to be: 
"RTN","IBCBB11",177,0)
 ; Address 1, State and ZIP unless the State is not a US state or possession, then zip code is not needed (CMS1500 only)
"RTN","IBCBB11",178,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",179,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",180,0)
 ;          1 = Error
"RTN","IBCBB11",181,0)
 ;
"RTN","IBCBB11",182,0)
 N IBPAMB,IBDAMB,IBAMBR,IBCK
"RTN","IBCBB11",183,0)
 S IBAMBR=0
"RTN","IBCBB11",184,0)
 Q:$$INSPRF^IBCEF(IBIFN)'=0 IBAMBR
"RTN","IBCBB11",185,0)
 S IBPAMB=$G(^DGCR(399,IBIFN,"U5")),IBDAMB=$G(^DGCR(399,IBIFN,"U6"))
"RTN","IBCBB11",186,0)
 S IBCK(5)=$$NOPUNCT^IBCEF($P(IBPAMB,U,2,6),1),IBCK(6)=$$NOPUNCT^IBCEF($P(IBDAMB,U,1,6),1)
"RTN","IBCBB11",187,0)
 I IBCK(5)="",IBCK(6)="" Q IBAMBR
"RTN","IBCBB11",188,0)
 ; at this point we know that at least one ambulance field has data, so check to see if all have data
"RTN","IBCBB11",189,0)
 I IBCK(5)'="" F I=2,4,5 I $P(IBPAMB,U,I)="" S IBAMBR=1
"RTN","IBCBB11",190,0)
 I IBCK(6)'="" F I=1,2,4,5 I $P(IBDAMB,U,I)="" S IBAMBR=1
"RTN","IBCBB11",191,0)
 Q:IBAMBR=1 IBAMBR
"RTN","IBCBB11",192,0)
 ; now check zip code.  OK to be null if state is not a US Posession
"RTN","IBCBB11",193,0)
 F I="IBPAMB","IBDAMB" I $P(I,U,5)'="",$P($G(^DIC(5,$P(I,U,5),0)),U,6)=1,$P(I,U,6)="" S IBAMBR=1
"RTN","IBCBB11",194,0)
 Q IBAMBR
"RTN","IBCBB11",195,0)
 ;
"RTN","IBCBB11",196,0)
COBAMT(IBIFN)   ; IB*2.0*432 - IF there is a COB amt. it must equal the Total Claim Charge Amount
"RTN","IBCBB11",197,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",198,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",199,0)
 ;          1 = Error
"RTN","IBCBB11",200,0)
 ;
"RTN","IBCBB11",201,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",202,0)
 Q:$P($G(^DGCR(399,IBIFN,"U4")),U)="" 0
"RTN","IBCBB11",203,0)
 Q:+$P($G(^DGCR(399,IBIFN,"U1")),U)'=+$P($G(^DGCR(399,IBIFN,"U4")),U) 1
"RTN","IBCBB11",204,0)
 Q 0
"RTN","IBCBB11",205,0)
 ;
"RTN","IBCBB11",206,0)
COBMRA(IBIFN)   ; IB*2.0*432 - If there is a 'COB total non-covered amount' (File#399, Field#260), 
"RTN","IBCBB11",207,0)
 ; Primary Insurance must be Medicare that never went to Medicare, and this must be a 2ndary or tertiary claim
"RTN","IBCBB11",208,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",209,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",210,0)
 ;          1 = Error
"RTN","IBCBB11",211,0)
 ;
"RTN","IBCBB11",212,0)
 N IBP
"RTN","IBCBB11",213,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",214,0)
 Q:$P($G(^DGCR(399,IBIFN,"U4")),U)="" 0
"RTN","IBCBB11",215,0)
 S IBP=$P($G(^DGCR(399,IBIFN,"M1")),U,5) S:IBP="" IBP=IBIFN
"RTN","IBCBB11",216,0)
 I $$WNRBILL^IBEFUNC(IBIFN,1),$P($G(^DGCR(399,IBP,"S")),U,7)="",$$COBN^IBCEF(IBIFN)>1 Q 0
"RTN","IBCBB11",217,0)
 Q 1
"RTN","IBCBB11",218,0)
 ;
"RTN","IBCBB11",219,0)
COBSEC(IBIFN)   ; IB*2.0*432 - If there is NOT a 'COB total non-covered amount' (File#399, Field#260), 
"RTN","IBCBB11",220,0)
 ; and Primary Insurance is Medicare that never went to Medicare, 2ndary or tertiary claim cannot be set to transmit
"RTN","IBCBB11",221,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",222,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",223,0)
 ;          1 = Error
"RTN","IBCBB11",224,0)
 ;
"RTN","IBCBB11",225,0)
 N IBP
"RTN","IBCBB11",226,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",227,0)
 Q:$P($G(^DGCR(399,IBIFN,"U4")),U)'="" 0
"RTN","IBCBB11",228,0)
 Q:$$COBN^IBCEF(IBIFN)<2 0
"RTN","IBCBB11",229,0)
 S IBP=$P($G(^DGCR(399,IBIFN,"M1")),U,5) S:IBP="" IBP=IBIFN
"RTN","IBCBB11",230,0)
 I $$WNRBILL^IBEFUNC(IBIFN,1),$P($G(^DGCR(399,IBP,"S")),U,7)="",$P($G(^DGCR(399,IBIFN,"TX")),U,8)'=1 Q 1
"RTN","IBCBB11",231,0)
 Q 0
"RTN","IBCBB11",232,0)
 ;
"RTN","IBCBB11",233,0)
TMCK(IBIFN) ;  IB*2.0*432 - Attachment Control Number - REQUIRED when Transmission Method = BM, EL, EM, or FT
"RTN","IBCBB11",234,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",235,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",236,0)
 ;          1 = Error
"RTN","IBCBB11",237,0)
 ;
"RTN","IBCBB11",238,0)
 N IBAC
"RTN","IBCBB11",239,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",240,0)
 F I=1,3 S IBAC(I)=$P($G(^DGCR(399,IBIFN,"U8")),U,I)
"RTN","IBCBB11",241,0)
 Q:IBAC(3)="" 0
"RTN","IBCBB11",242,0)
 Q:IBAC(1)'="" 0
"RTN","IBCBB11",243,0)
 Q:IBAC(3)="AA" 0
"RTN","IBCBB11",244,0)
 Q 1
"RTN","IBCBB11",245,0)
 ;
"RTN","IBCBB11",246,0)
ACCK(IBIFN) ; IB*2.0*432 If any of the loop info is present, then Report Type & Transmission Method req'd
"RTN","IBCBB11",247,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",248,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",249,0)
 ;          1 = Error
"RTN","IBCBB11",250,0)
 ;
"RTN","IBCBB11",251,0)
 N IBAC
"RTN","IBCBB11",252,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",253,0)
 F I=1:1:3 S IBAC(I)=$P($G(^DGCR(399,IBIFN,"U8")),U,I)
"RTN","IBCBB11",254,0)
 ; All fields null, no error
"RTN","IBCBB11",255,0)
 I IBAC(1)="",IBAC(2)="",IBAC(3)="" Q 0
"RTN","IBCBB11",256,0)
 ; Both required fields complete, no error
"RTN","IBCBB11",257,0)
 I IBAC(2)'="",IBAC(3)'="" Q 0
"RTN","IBCBB11",258,0)
 ; At this point, one of the 2 required fields has data and one does not, so error
"RTN","IBCBB11",259,0)
 Q 1
"RTN","IBCBB11",260,0)
 ;
"RTN","IBCBB11",261,0)
LNTMCK(IBIFN) ;  DEM;IB*2.0*432 - (Line Level) Attachment Control Number - REQUIRED when Transmission Method = BM, EL, EM, or FT
"RTN","IBCBB11",262,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",263,0)
 ; OUTPUT - IBLNERR = 0 = no error        
"RTN","IBCBB11",264,0)
 ;          IBLNERR = 1 = Error
"RTN","IBCBB11",265,0)
 ;
"RTN","IBCBB11",266,0)
 N IBAC,IBPROCP,I,IBLNERR
"RTN","IBCBB11",267,0)
 S IBLNERR=0  ; DEM;432 - Initialize error flag IBLNERR to '0' for no errors.
"RTN","IBCBB11",268,0)
 Q:IBIFN="" IBLNERR
"RTN","IBCBB11",269,0)
 S IBPROCP=0 F  S IBPROCP=$O(^DGCR(399,IBIFN,"CP",IBPROCP)) Q:'IBPROCP  D  Q:IBLNERR
"RTN","IBCBB11",270,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,0))#10)  ; DEM;432 - Node '0' is procedure node.
"RTN","IBCBB11",271,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,1))#10)  ; DEM;432 - Node '1' is line level Attachment Control fields.
"RTN","IBCBB11",272,0)
 . F I=1,3 S IBAC(I)=$P(^DGCR(399,IBIFN,"CP",IBPROCP,1),U,I)
"RTN","IBCBB11",273,0)
 . I IBAC(3)="" S IBLNERR=0 Q
"RTN","IBCBB11",274,0)
 . I IBAC(1)'="" S IBLNERR=0 Q
"RTN","IBCBB11",275,0)
 . I (IBAC(3)="AA") S IBLNERR=0 Q
"RTN","IBCBB11",276,0)
 . S IBLNERR=1
"RTN","IBCBB11",277,0)
 . Q
"RTN","IBCBB11",278,0)
 ;
"RTN","IBCBB11",279,0)
 Q IBLNERR
"RTN","IBCBB11",280,0)
 ;
"RTN","IBCBB11",281,0)
LNACCK(IBIFN) ; DEM;IB*2.0*432 (Line Level) If any of the loop info is present, then Report Type & Transmission Method req'd
"RTN","IBCBB11",282,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",283,0)
 ; OUTPUT - IBLNERR = 0 = no error        
"RTN","IBCBB11",284,0)
 ;          IBLNERR = 1 = Error
"RTN","IBCBB11",285,0)
 ;
"RTN","IBCBB11",286,0)
 N IBAC,IBPROCP,I,IBLNERR
"RTN","IBCBB11",287,0)
 S IBLNERR=0  ; DEM;432 - Initialize error flag IBLNERR to '0' for no errors.
"RTN","IBCBB11",288,0)
 Q:IBIFN="" IBLNERR
"RTN","IBCBB11",289,0)
 S IBPROCP=0 F  S IBPROCP=$O(^DGCR(399,IBIFN,"CP",IBPROCP)) Q:'IBPROCP  D  Q:IBLNERR
"RTN","IBCBB11",290,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,0))#10)  ; DEM;432 - Node '0' is procedure node.
"RTN","IBCBB11",291,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,1))#10)  ; DEM;432 - Node '1' is line level Attachment Control fields.
"RTN","IBCBB11",292,0)
 . F I=1:1:3 S IBAC(I)=$P(^DGCR(399,IBIFN,"CP",IBPROCP,1),U,I)
"RTN","IBCBB11",293,0)
 . ; All fields null, no error
"RTN","IBCBB11",294,0)
 . I IBAC(1)="",IBAC(2)="",IBAC(3)="" S IBLNERR=0 Q
"RTN","IBCBB11",295,0)
 . ; Both required fields complete, no error
"RTN","IBCBB11",296,0)
 . I IBAC(2)'="",IBAC(3)'="" S IBLNERR=0 Q
"RTN","IBCBB11",297,0)
 . ; At this point, one of the 2 required fields has data and one does not, so error
"RTN","IBCBB11",298,0)
 . S IBLNERR=1
"RTN","IBCBB11",299,0)
 . Q
"RTN","IBCBB11",300,0)
 ;
"RTN","IBCBB11",301,0)
 Q IBLNERR
"RTN","IBCBB7")
0^1^B28514446^B28157499
"RTN","IBCBB7",1,0)
IBCBB7 ;ALB/BGA - CONT. OF MEDICARE EDIT CHECKS ;09/10/98
"RTN","IBCBB7",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,240,447,488,516**;21-MAR-94;Build 123
"RTN","IBCBB7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB7",4,0)
 ;
"RTN","IBCBB7",5,0)
 ; Revenue Codes
"RTN","IBCBB7",6,0)
 ;
"RTN","IBCBB7",7,0)
 ; MRD;IB*2.0*516 - Remove check; allow any revenue code.
"RTN","IBCBB7",8,0)
 ;; rev codes must be between 100 AND 999
"RTN","IBCBB7",9,0)
 ;I $O(IBREV1(100),-1)>0!($O(IBREV1(999))>0) S IBQUIT=$$IBER^IBCBB3(.IBER,184) Q:IBQUIT
"RTN","IBCBB7",10,0)
 ;
"RTN","IBCBB7",11,0)
 N IBRATYP
"RTN","IBCBB7",12,0)
 ;
"RTN","IBCBB7",13,0)
 ; ibrev1(rev cd,seq #)=Rev code^ptr cpt^unit chg^units^total^tot unc^^^mod ptrs
"RTN","IBCBB7",14,0)
 ; 3 subsection edits
"RTN","IBCBB7",15,0)
 ;
"RTN","IBCBB7",16,0)
 D F^IBCEF("N-BILL RATE TYPE","IBZ",,IBIFN)
"RTN","IBCBB7",17,0)
 ; Don't apply some edits unless specific rate types
"RTN","IBCBB7",18,0)
 S IBZ=$P($G(^DGCR(399.3,+IBZ,0)),U)
"RTN","IBCBB7",19,0)
 S IBRATYP=$S(IBZ="":1,IBZ["TRICARE"!(IBZ["CHAMPVA")!(IBZ["SHARING")!(IBZ["REIMBURS"):1,1:0)
"RTN","IBCBB7",20,0)
 S IBREVC=0 F  S IBREVC=$O(IBREV1(IBREVC)) Q:IBREVC=""  D  Q:IBQUIT
"RTN","IBCBB7",21,0)
 . S IBI=0
"RTN","IBCBB7",22,0)
 . F  S IBI=$O(IBREV1(IBREVC,IBI)) Q:'IBI  D  Q:IBQUIT
"RTN","IBCBB7",23,0)
 . . ;
"RTN","IBCBB7",24,0)
 . . S IBREVD=IBREV1(IBREVC,IBI),IBREVC12=$E(IBREVC,1,2),IBBCPT=$P(IBREVD,U,2)
"RTN","IBCBB7",25,0)
 . . ;
"RTN","IBCBB7",26,0)
 . . ; IB*2.0*447/TAZ Removed this error so that zero dollar revenue codes can process on the 837
"RTN","IBCBB7",27,0)
 . . ; No charge associated with rev code
"RTN","IBCBB7",28,0)
 . . ;I '$P(IBREVD,U,3),IBREVC12'=18 S IBQUIT=$$IBER^IBCBB3(.IBER,185) Q:IBQUIT
"RTN","IBCBB7",29,0)
 . . ;
"RTN","IBCBB7",30,0)
 . . ; Charges cannot be negative dollar amounts
"RTN","IBCBB7",31,0)
 . . I $P(IBREVD,U,5)<0 S IBQUIT=$$IBER^IBCBB3(.IBER,213) Q:IBQUIT
"RTN","IBCBB7",32,0)
 . . ;
"RTN","IBCBB7",33,0)
 . . ; Non Covered charges cannot be a negative amount
"RTN","IBCBB7",34,0)
 . . ;     and must not be > total charge
"RTN","IBCBB7",35,0)
 . . I $P(IBREVD,U,6)>$P(IBREVD,U,5)!($P(IBREVD,U,6)<0) S IBQUIT=$$IBER^IBCBB3(.IBER,214) Q:IBQUIT
"RTN","IBCBB7",36,0)
 . . ;
"RTN","IBCBB7",37,0)
 . . ; =====
"RTN","IBCBB7",38,0)
 . . ; Accommodation revenue code edits
"RTN","IBCBB7",39,0)
 . . I IBREV1(IBREVC)="AC" D  Q
"RTN","IBCBB7",40,0)
 . . . N IBBSEC
"RTN","IBCBB7",41,0)
 . . . ; dup Rev accom cds must have diff rates and bedsections
"RTN","IBCBB7",42,0)
 . . . S IBBSEC=$P($G(^DGCR(399,IBIFN,"RC",+$P(IBREVD,U,8),0)),U,5)
"RTN","IBCBB7",43,0)
 . . . I $O(IBREV1(IBREVC,1)) D  Q:IBQUIT
"RTN","IBCBB7",44,0)
 . . . . I IBI=1 K IBREVDUP S IBREVDUP(+$P(IBREVD,U,3)_" "_IBBSEC)=""
"RTN","IBCBB7",45,0)
 . . . . I IBI>1,$D(IBREVDUP(+$P(IBREVD,U,3)_" "_IBBSEC)) S IBQUIT=$$IBER^IBCBB3(.IBER,186)
"RTN","IBCBB7",46,0)
 . . . ; Total Line charges for accom rev codes can not be < 0
"RTN","IBCBB7",47,0)
 . . . I IBREVC>99,IBREVC<220,IBREVTOT("AC")<0 S IBQUIT=$$IBER^IBCBB3(.IBER,211)
"RTN","IBCBB7",48,0)
 . . . ; For accom rev codes, detail charge for revc=18x must be 0
"RTN","IBCBB7",49,0)
 . . . I IBREVC12=18,$P(IBREV1(IBREVC,IBI),U,3) S IBQUIT=$$IBER^IBCBB3(.IBER,212)
"RTN","IBCBB7",50,0)
 . . ;
"RTN","IBCBB7",51,0)
 . . ; =====
"RTN","IBCBB7",52,0)
 . . ; Inpatient Ancillary only Rev Codes edit 60-4
"RTN","IBCBB7",53,0)
 . . I IBREV1(IBREVC)="AI" D  Q
"RTN","IBCBB7",54,0)
 . . . ; Cannot have dup anc REV codes except 24X
"RTN","IBCBB7",55,0)
 . . . N IBMOD
"RTN","IBCBB7",56,0)
 . . . S IBMOD=$P(IBREVD,U,9)
"RTN","IBCBB7",57,0)
 . . . ;I IBRATYP,IBI>1,IBREVC12'=24 S IBQUIT=$$IBER^IBCBB3(.IBER,188)
"RTN","IBCBB7",58,0)
 . . . ;
"RTN","IBCBB7",59,0)
 . . . ;HCPCS code is required for rev code 636 and TOB 13X, 14X, 83X
"RTN","IBCBB7",60,0)
 . . . I IBREVC=636,IBBCPT="",(IBTOB12=13!(IBTOB12=14)!(IBTOB12=83)) S IBQUIT=$$IBER^IBCBB3(.IBER,191)
"RTN","IBCBB7",61,0)
 . . . ;
"RTN","IBCBB7",62,0)
 . . ; =====
"RTN","IBCBB7",63,0)
 . . ; OUTPATIENT ANCILLARY only Rev Codes edit rec 61-04
"RTN","IBCBB7",64,0)
 . . I IBREV1(IBREVC)="AO" D  Q
"RTN","IBCBB7",65,0)
 . . . ;
"RTN","IBCBB7",66,0)
 . . . ; Rev codes with different HCPCS codes can be duplicated => baa ; 488 ; removed to allow splitting.
"RTN","IBCBB7",67,0)
 . . . ;I $$FT^IBCEF(IBIFN)=3,$O(IBREV1(IBREVC,1))  D  Q:IBQUIT
"RTN","IBCBB7",68,0)
 . . . ;. N IBMOD
"RTN","IBCBB7",69,0)
 . . . ;. S IBMOD=$P(IBREVD,U,9)
"RTN","IBCBB7",70,0)
 . . . ;. I IBI=1 K IBREVDUP S IBREVDUP(IBBCPT_" "_IBMOD)=""
"RTN","IBCBB7",71,0)
 . . . ;. I '$$ISRX^IBCEF1(IBIFN),IBI>1,$D(IBREVDUP(IBBCPT_" "_IBMOD)),IBER'["IB192;" S IBQUIT=$$IBER^IBCBB3(.IBER,192)
"RTN","IBCBB7",72,0)
 . . . ;
"RTN","IBCBB7",73,0)
 . . . ; Rev Code 49x can not be entered with 36x and 37x
"RTN","IBCBB7",74,0)
 . . . I IBREVC12=49,$O(IBREV1(380),-1)'<360 S IBQUIT=$$IBER^IBCBB3(.IBER,195) Q:IBQUIT
"RTN","IBCBB7",75,0)
 . . . ;
"RTN","IBCBB7",76,0)
 . . . ; If Rev=42x & billtype=83x!13x req occ cds 11&35 and val code 50
"RTN","IBCBB7",77,0)
 . . . ;I IBREVC12=42,(IBTOB12=83!(IBTOB12=13)) D  Q:IBQUIT
"RTN","IBCBB7",78,0)
 . . . ;. I '$D(IBVALCD(50))!'$D(IBOCCD(11))!'$D(IBOCCD(35)) S IBQUIT=$$IBER^IBCBB3(.IBER,196)
"RTN","IBCBB7",79,0)
 . . . ;
"RTN","IBCBB7",80,0)
 . . . ; If Rev=43x & billtype=83x!13x req occ cds 11&44 and val code 51
"RTN","IBCBB7",81,0)
 . . . ;I IBREVC12=43,(IBTOB12=83!(IBTOB12=13)) D
"RTN","IBCBB7",82,0)
 . . . ;. I '$D(IBVALCD(51))!'$D(IBOCCD(11))!'$D(IBOCCD(44)) S IBQUIT=$$IBER^IBCBB3(.IBER,197)
"RTN","IBCBB7",83,0)
 . . . ;
"RTN","IBCBB7",84,0)
 . . . ; If Rev=44x & billtype=83x!13x req occ cds 11&45 and val code 52
"RTN","IBCBB7",85,0)
 . . . ;I IBREVC12=44,(IBTOB12=83!(IBTOB12=13)) D
"RTN","IBCBB7",86,0)
 . . . ;. I '$D(IBVALCD(52))!'$D(IBOCCD(11))!'$D(IBOCCD(45)) S IBQUIT=$$IBER^IBCBB3(.IBER,198)
"RTN","IBCBB7",87,0)
 . . . ;
"RTN","IBCBB7",88,0)
 . . . ; If Rev=943 & billtype=83x!13x req occ cds 11&46 and val code 53
"RTN","IBCBB7",89,0)
 . . . ;I IBREVC=943,(IBTOB12=83!IBTOB12=13) D
"RTN","IBCBB7",90,0)
 . . . ;. I '$D(IBVALCD(53))!('$D(IBOCCD(11)))!('$D(IBOCCD(46))) S IBQUIT=$$IBER^IBCBB3(.IBER,199)
"RTN","IBCBB7",91,0)
 . . . ;
"RTN","IBCBB7",92,0)
 . . . ; If Rev=403 & bill type=14x!23x and service date >= 01-01-91
"RTN","IBCBB7",93,0)
 . . . ;   require only HCPCS codes 76092 and no other rev codes
"RTN","IBCBB7",94,0)
 . . . I IBREVC=403,IBFDT'<2910101,(IBTOB12=14!(IBTOB12=23)) D
"RTN","IBCBB7",95,0)
 . . . . I $O(IBREV1(403))!$O(IBREV1(403),-1)!(IBBCPT'=76092) S IBQUIT=$$IBER^IBCBB3(.IBER,194) Q
"RTN","IBCBB7",96,0)
 . . . ;
"RTN","IBCBB7",97,0)
 . . . ; If Rev=401 & bill type=13x!14x!23x!71x allow only HCPSCS codes
"RTN","IBCBB7",98,0)
 . . . ;   76090 or 78091
"RTN","IBCBB7",99,0)
 . . . ;I IBREVC=401,(IBTOB12=13!(IBTOB12=14)!(IBTOB12=23)!(IBTOB12=71)),IBBCPT'="",IBBCPT'=76090,IBBCPT'=78091 S IBQUIT=$$IBER^IBCBB3(.IBER,201)
"RTN","IBCBB7",100,0)
 . . . ;
"RTN","IBCBB7",101,0)
 . . . ; Rev code cannot equal 227 or 29x
"RTN","IBCBB7",102,0)
 . . . ;I IBREVC=227!(IBREVC12=29) S IBQUIT=$$IBER^IBCBB3(.IBER,202)
"RTN","IBCBB7",103,0)
 . . . D REVC^IBCBB7A(IBREVD,IBREVC,IBBCPT,IBREVC12,.IBER)
"RTN","IBCBB7",104,0)
 Q:IBQUIT
"RTN","IBCBB7",105,0)
 ;
"RTN","IBCBB7",106,0)
 D ^IBCBB8
"RTN","IBCBB7",107,0)
 Q
"RTN","IBCC")
0^24^B65165308^B57603103
"RTN","IBCC",1,0)
IBCC ;ALB/MJB - CANCEL THIRD PARTY BILL ;14 JUN 88  10:12
"RTN","IBCC",2,0)
 ;;2.0;INTEGRATED BILLING;**2,19,77,80,51,142,137,161,199,241,155,276,320,358,433,432,447,516**;21-MAR-94;Build 123
"RTN","IBCC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCC",4,0)
 ;
"RTN","IBCC",5,0)
 ;MAP TO DGCRC
"RTN","IBCC",6,0)
 ;
"RTN","IBCC",7,0)
 I '$D(IBCAN) S IBCAN=1
"RTN","IBCC",8,0)
ASK ;
"RTN","IBCC",9,0)
 ;***
"RTN","IBCC",10,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",11,0)
 ;S XRTL=$ZU(0),XRTN="IBCC-1" D T0^%ZOSV ;start rt clock
"RTN","IBCC",12,0)
 ;
"RTN","IBCC",13,0)
 ; If called at entry point PROCESS, variable IBNOASK will exist.
"RTN","IBCC",14,0)
 ; First time through, IBNOASK=1
"RTN","IBCC",15,0)
 ; Second time through, IBNOASK=2 and it will quit
"RTN","IBCC",16,0)
 I $G(IBNOASK)=2 G Q
"RTN","IBCC",17,0)
 I $G(IBNOASK)=1 S IBNOASK=2
"RTN","IBCC",18,0)
 ;
"RTN","IBCC",19,0)
 G Q:$G(IBCE("EDI"))
"RTN","IBCC",20,0)
 D Q
"RTN","IBCC",21,0)
 S IBQUIT=0
"RTN","IBCC",22,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCC",23,0)
 I '$G(IBNOASK) S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " W !! D ^DIC I Y<1 S IBQUIT=1 G Q1
"RTN","IBCC",24,0)
 K IB364
"RTN","IBCC",25,0)
NOPTF ; Note if IB364 is >0 it will be used as the ien to update in file 364
"RTN","IBCC",26,0)
 N DA,I
"RTN","IBCC",27,0)
 I '$G(IBNOASK) S IBIFN=+$G(Y)
"RTN","IBCC",28,0)
 I '$G(IBIFN) G ASK
"RTN","IBCC",29,0)
 I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK
"RTN","IBCC",30,0)
 ;
"RTN","IBCC",31,0)
 I $G(IBCNCRD)=1,$P($P($G(^DGCR(399,IBIFN,0)),U),"-",2)>98 D  Q
"RTN","IBCC",32,0)
 .W !!,"Please note that you have exceeded the maximum number of iterations (99) for this claim."
"RTN","IBCC",33,0)
 .W "Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",34,0)
 .S IBQUIT=1 H 3
"RTN","IBCC",35,0)
 ; Check if bill has been referred to Counsel
"RTN","IBCC",36,0)
 I $P($G(^PRCA(430,IBIFN,6)),U,4) D  G ASK
"RTN","IBCC",37,0)
 . W !,"This bill has been referred to Regional Counsel and cannot be 'CANCELLED' in"
"RTN","IBCC",38,0)
 . W !,"Integrated Billing.  Please use the option 'TP Referred Follow-up'"
"RTN","IBCC",39,0)
 . W !,"[PRCA RC ACTION MENU] in Accounts Receivable to request that Regional"
"RTN","IBCC",40,0)
 . W !,"Counsel return the bill to your facility."
"RTN","IBCC",41,0)
 . Q
"RTN","IBCC",42,0)
 ;
"RTN","IBCC",43,0)
 F I=0,"S","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCC",44,0)
 S IBSTAT=$P(IB(0),U,13)
"RTN","IBCC",45,0)
 ; REMOVE New messages for CRD option IB*2.0*433 in IB*2.0*447  IA#5630
"RTN","IBCC",46,0)
 ;I $G(IBCNCRD)=1,IBSTAT'=2,'$$ACCK^PRCAACC(IBIFN) D  Q
"RTN","IBCC",47,0)
 ;.W !!,"This option cannot be used to correct some Billing Rate Types (Example: TRICARE)"
"RTN","IBCC",48,0)
 ;.W "Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",49,0)
 ;.S IBQUIT=1 H 3
"RTN","IBCC",50,0)
 ;
"RTN","IBCC",51,0)
 ; Restrict access to this process for REQUEST MRA bills
"RTN","IBCC",52,0)
 I IBSTAT=2,'$G(IBCE("EDI")),$$MRAWL^IBCEMU2(IBIFN) D  G ASK
"RTN","IBCC",53,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it does appear on the"
"RTN","IBCC",54,0)
 . W !?4,"MRA Management Work List.  Please use the 'MRA Management Menu' options"
"RTN","IBCC",55,0)
 . W !?4,"for all processing related to this bill."
"RTN","IBCC",56,0)
 . Q
"RTN","IBCC",57,0)
 ;
"RTN","IBCC",58,0)
 ; IB*2.0*432 Restrict access to claims on the new CBW Worklist
"RTN","IBCC",59,0)
 I $P($G(^DGCR(399,IBIFN,"S1")),U,7)=1,$G(IBMRANOT)'=1 D  G ASK
"RTN","IBCC",60,0)
 . W !!?4,"This bill appears on the CBW Management Work List.  Please use the"
"RTN","IBCC",61,0)
 . W !?4,"'CBW Management Menu' options for all processing related to this bill."
"RTN","IBCC",62,0)
 . Q
"RTN","IBCC",63,0)
 ;
"RTN","IBCC",64,0)
 ; Check if this is a paper claim. If not, check for split EOB.  If split, don't allow CRD unless more than 1 EOB has been returned
"RTN","IBCC",65,0)
 I $G(IBCNCRD)=1,$P($G(^DGCR(399,IBIFN,"TX")),U,8)'=1,$$SPLTMRA^IBCEMU1(IBIFN)=1 D  Q
"RTN","IBCC",66,0)
 .W !!,"There is a split EOB associated with this claim.  You cannot use this option to Correct this claim until the second EOB has been received."
"RTN","IBCC",67,0)
 .S IBQUIT=1 H 3
"RTN","IBCC",68,0)
 .Q
"RTN","IBCC",69,0)
 ;
"RTN","IBCC",70,0)
 ; Warning message if in a REQUEST MRA status with no MRA on file
"RTN","IBCC",71,0)
 ; IB*2.0*516/TAZ,MRD - Forbid the user from using the option CRD
"RTN","IBCC",72,0)
 ; (Correct Rejected/Denied Bill) on an MRA claim if the status is
"RTN","IBCC",73,0)
 ; REQUEST MRA (IBSTAT=2).
"RTN","IBCC",74,0)
 I IBSTAT=2,'$$MRACNT^IBCEMU1(IBIFN) D  I $G(IBQUIT) H 3 Q
"RTN","IBCC",75,0)
 . N REJ
"RTN","IBCC",76,0)
 . D TXSTS^IBCEMU2(IBIFN,,.REJ)
"RTN","IBCC",77,0)
 . ;IB*2.0*516/TAZ - If CRD is from CSA allow a REJected claim to be CRD'ed without displaying a warning.
"RTN","IBCC",78,0)
 . I $G(IBCNCSA),REJ Q
"RTN","IBCC",79,0)
 . W *7,!!?4,$S('$G(IBCNCRD):"Warning!  ",1:""),"This bill is in a status of REQUEST MRA."
"RTN","IBCC",80,0)
 . W !?4,"No MRAs have been received"
"RTN","IBCC",81,0)
 . I REJ W ", but the most recent transmission of this",!?4,"MRA request bill was rejected."
"RTN","IBCC",82,0)
 . I 'REJ W " and there are no rejection messages on file",!?4,"for the most recent transmission of this MRA request bill."
"RTN","IBCC",83,0)
 . I $G(IBCNCRD) S IBQUIT=1
"RTN","IBCC",84,0)
 . Q
"RTN","IBCC",85,0)
 ;
"RTN","IBCC",86,0)
 I IBCAN=2,IB("S")]"",+$P(IB("S"),U,16),$P(IB("S"),U,17)]"" D  G 1
"RTN","IBCC",87,0)
 . W !!,"This bill was cancelled on " S Y=$P(IB("S"),U,17) X ^DD("DD") W Y," by ",$S($P(IB("S"),U,18)']"":IBU,$D(^VA(200,$P(IB("S"),U,18),0)):$P(^(0),U,1),1:IBU),"."
"RTN","IBCC",88,0)
 . S IBQUIT=1
"RTN","IBCC",89,0)
 ;
"RTN","IBCC",90,0)
 ; IB*2.0*516/TAZ,MRD - Forbid the user from using the option CRD
"RTN","IBCC",91,0)
 ; (Correct Rejected/Denied Bill) on all but primary claims.
"RTN","IBCC",92,0)
 I $G(IBCNCRD),($$COB^IBCEF(IBIFN)'="P") D  Q
"RTN","IBCC",93,0)
 . W !!,"Please note that COB data may exist for this bill."
"RTN","IBCC",94,0)
 . W !,"Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",95,0)
 . S IBQUIT=1
"RTN","IBCC",96,0)
 . H 3
"RTN","IBCC",97,0)
 . Q
"RTN","IBCC",98,0)
 ;
"RTN","IBCC",99,0)
 ; Notify if a payment has been posted to this bill before cancel
"RTN","IBCC",100,0)
 N PRCABILL
"RTN","IBCC",101,0)
 S PRCABILL=$$TPR^PRCAFN(IBIFN)
"RTN","IBCC",102,0)
 I PRCABILL=-1 W !!,"Please note: PRCA was unable to determine if a payment has been posted." I $G(IBCNCRD)=1 W !,"Copy and cancel (CLON) must be used to correct this bill." S IBQUIT=1 H 3 Q
"RTN","IBCC",103,0)
 I PRCABILL>0 W !!,"Please note a PAYMENT of **$"_$$TPR^PRCAFN(IBIFN)_"** has been POSTED to this bill."
"RTN","IBCC",104,0)
 ; New message for CRD option
"RTN","IBCC",105,0)
 I $G(IBCNCRD)=1,PRCABILL>0 W !,"Copy and cancel (CLON) must be used to correct this bill." S IBQUIT=1 H 3 Q
"RTN","IBCC",106,0)
 ;
"RTN","IBCC",107,0)
 ; If bill was created via Electronic claims process then notify
"RTN","IBCC",108,0)
 ; user that cancellation should occur using ECME package
"RTN","IBCC",109,0)
 I $$GET1^DIQ(399,IBIFN_",",460)]"" D  G:'Y ASK
"RTN","IBCC",110,0)
 . W !!!?5,"This bill was created by the"
"RTN","IBCC",111,0)
 . W !?5,"Electronic Claims Management Engine (ECME)."
"RTN","IBCC",112,0)
 . W !?5,"Cancellation needs to occur in the ECME package by"
"RTN","IBCC",113,0)
 . W !?5,"submitting a REVERSAL to the Payer.",!!
"RTN","IBCC",114,0)
 . K DIR S DIR("A",1)="Has a REVERSAL for this e-Claim already been",DIR("A")="submitted to the payer via the ECME package (Y/N)",DIR(0)="Y",DIR("B")="NO" D ^DIR
"RTN","IBCC",115,0)
 . I Y=0 W !!,"<PLEASE SUBMIT A REVERSAL USING THE APPROPRIATE OPTION IN THE ECME PACKAGE>",$C(7)
"RTN","IBCC",116,0)
 ;
"RTN","IBCC",117,0)
CHK ;
"RTN","IBCC",118,0)
 ; if user came from CLON, make sure they know about the new CRD option  IB*2.0*447 remove TRICARE msg.
"RTN","IBCC",119,0)
 I $G(IBCNCOPY)=1 D
"RTN","IBCC",120,0)
 .W !!,*7,"Warning:  This option should NOT be used to correct Rejected/Denied claims."
"RTN","IBCC",121,0)
 .W !,"          It should ONLY be used to correct DENIED claims which have payments"
"RTN","IBCC",122,0)
 .W !,"          posted against them.***" ; and claims with certain Billing Rate Types (Example: TRICARE)."
"RTN","IBCC",123,0)
 ;
"RTN","IBCC",124,0)
 S (IBCCCC,IBQUIT)=0 I '$G(IBCEAUTO),'$G(IBMCSCAN) W !!,"ARE YOU SURE YOU WANT TO CANCEL THIS BILL" S %=2 D YN^DICN G:%=0 HELP I %'=1 S IBQUIT=1 G NO
"RTN","IBCC",125,0)
 ;
"RTN","IBCC",126,0)
 I '$G(IBCEAUTO) W !!,"LAST CHANCE TO CHANGE YOUR MIND..."
"RTN","IBCC",127,0)
 S DIE=399,DA=IBIFN,DIE("NO^")=""
"RTN","IBCC",128,0)
 S DR="16;S:'X Y=0;19;S IBCCCC=1;"
"RTN","IBCC",129,0)
 I $G(IBCEAUTO) S DR="16////1;19////EDI/MRA TURNED OFF;S IBCCCC=1;"
"RTN","IBCC",130,0)
 ;
"RTN","IBCC",131,0)
 ; esg - 8/23/06 - IB*2*358 - fix semi-colon in free text field
"RTN","IBCC",132,0)
 I $G(IBMCSRSC)'="" S DR="16;S:'X Y=0;19//^S X=IBMCSRSC;S IBCCCC=1;"
"RTN","IBCC",133,0)
 D ^DIE K DIE,DR
"RTN","IBCC",134,0)
 ;
"RTN","IBCC",135,0)
NO I 'IBCCCC W !!,"<NO ACTION TAKEN>",*7 S IBQUIT=1 G ASK:IBCAN<2,Q
"RTN","IBCC",136,0)
 S IBCCR=$P($G(^DGCR(399,IBIFN,"S")),U,19)
"RTN","IBCC",137,0)
 ; update claim # with new iteration  IB*2.0*447 move to later in the process
"RTN","IBCC",138,0)
 ;D:$G(IBCNCRD)=1 CRD
"RTN","IBCC",139,0)
 W !!,"...Bill has been cancelled..." D BULL^IBCBULL,BSTAT^IBCDC(IBIFN),PRIOR^IBCCC2(IBIFN)
"RTN","IBCC",140,0)
 ;
"RTN","IBCC",141,0)
 ; cancelling in ingenix claimsmanager if ingenix is running
"RTN","IBCC",142,0)
 ; clean-up of variables is OK if not coming in from ListMan screen
"RTN","IBCC",143,0)
 I $$CM^IBCIUT1(IBIFN) S IBCISNT=4 D ST2^IBCIST I '$G(IBCICNCL) K IBCISNT,IBCISTAT,IBCIREDT,IBCIERR
"RTN","IBCC",144,0)
 ;
"RTN","IBCC",145,0)
 S IBEDI=$G(IB364)
"RTN","IBCC",146,0)
 I 'IBEDI S IBEDI=+$$LAST364^IBCEF4(IBIFN)
"RTN","IBCC",147,0)
 I IBEDI D UPDEDI^IBCEM(IBEDI,"C") ;Update EDI files, if needed
"RTN","IBCC",148,0)
 ;
"RTN","IBCC",149,0)
 F I="S","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCC",150,0)
 S PRCASV("ARREC")=IBIFN,PRCASV("AMT")=$S(IB("U1")']"":0,1:$P(IB("U1"),"^")),PRCASV("DATE")=$P(IB("S"),"^",17),PRCASV("BY")=$P(IB("S"),"^",18)
"RTN","IBCC",151,0)
 S PRCASV("COMMENT")=$S($P(IB("S"),U,19)]"":$P(IB("S"),U,19),$P(^IBE(350.9,1,2),"^",7)]"":$P(^(2),"^",7),1:"BILL CANCELLED IN MAS")
"RTN","IBCC",152,0)
 S PRCASV("BY")=$S($P(IB("S"),U,18)]"":$P(IB("S"),U,18),1:"")
"RTN","IBCC",153,0)
 ; IA#3374/IB*2.0*433 Pass the CRD flag so FMS knows to send a cancel record before the new E record is sent
"RTN","IBCC",154,0)
 ;S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")))
"RTN","IBCC",155,0)
 S PRCASV("ARCRD")=$G(IBCNCRD)
"RTN","IBCC",156,0)
 S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")),$G(PRCASV("ARCRD")))
"RTN","IBCC",157,0)
 W !,$S(X:">> The receivable associated with the claim was cancelled.",1:">> The receivable associated with the claim was not cancelled.")
"RTN","IBCC",158,0)
 I $P(X,U,2)]"" W !,">>> ",$P(X,U,2) ; The reason why the claim can not be cancelled.
"RTN","IBCC",159,0)
 I IBCAN<2 D RNB^IBCC1 ;assign a reason not billable
"RTN","IBCC",160,0)
 G ASK:IBCAN<2,Q
"RTN","IBCC",161,0)
 ;
"RTN","IBCC",162,0)
HELP W !,?3,"Answer 'YES' or 'Y' if you wish to cancel this bill.",!,?3,"Answer 'NO' or 'N' if you want to abort." G CHK
"RTN","IBCC",163,0)
 Q
"RTN","IBCC",164,0)
1 I $P(IB(0),U,13)=1 W !,"This record was re-opened on " S Y=$P(IB(0),U,14) X ^DD("DD") W Y,"." G CHK
"RTN","IBCC",165,0)
 G ASK
"RTN","IBCC",166,0)
Q1 K:IBCAN=1 IBQUIT K IBCAN
"RTN","IBCC",167,0)
Q K %,IBEPAR,IBSTAT,IBARST,IBAC1,IB,DFN,IBX,IBZ,DIC,DIE,DR,PRCASV,PRCASVC,X,Y,IBEDI
"RTN","IBCC",168,0)
 ;***
"RTN","IBCC",169,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",170,0)
 Q
"RTN","IBCC",171,0)
CRD(IBIFN) ; entry to point to add iteration # to claim
"RTN","IBCC",172,0)
 N IBFDA
"RTN","IBCC",173,0)
 S IBITN=$$ITN^IBCCC(IBIFN)
"RTN","IBCC",174,0)
 S IBFDA(399,IBIFN_",",.01)=IBITN
"RTN","IBCC",175,0)
 D FILE^DIE("","IBFDA")
"RTN","IBCC",176,0)
 ; this will re-open the claim, so reset to cancelled
"RTN","IBCC",177,0)
 S DIE=399,DA=IBIFN
"RTN","IBCC",178,0)
 S DR="16////1"
"RTN","IBCC",179,0)
 D ^DIE K DIE,DR
"RTN","IBCC",180,0)
 Q
"RTN","IBCC",181,0)
 ;
"RTN","IBCC",182,0)
PROCESS(IBIFN,IBCAN) ;
"RTN","IBCC",183,0)
 ; Entry point when the bill number is already known.  Use this when
"RTN","IBCC",184,0)
 ; you just want to try to cancel this bill and this bill only.
"RTN","IBCC",185,0)
 ; Input:
"RTN","IBCC",186,0)
 ;   IBIFN - Internal bill# (Required)
"RTN","IBCC",187,0)
 ;   IBCAN - Cancel Flag (optional, defaults to 1 if not included)
"RTN","IBCC",188,0)
 ;
"RTN","IBCC",189,0)
 NEW IBNOASK
"RTN","IBCC",190,0)
 S IBNOASK=1
"RTN","IBCC",191,0)
 S IBCAN=$G(IBCAN,1)
"RTN","IBCC",192,0)
 G ASK
"RTN","IBCC",193,0)
 ;
"RTN","IBCC",194,0)
 ;IBCC
"RTN","IBCCC")
0^162^B22970985^B20967189
"RTN","IBCCC",1,0)
IBCCC ;ALB/AAS - CANCEL AND CLONE A BILL ;25-JAN-90
"RTN","IBCCC",2,0)
 ;;2.0;INTEGRATED BILLING;**80,109,106,51,320,433,432,447,516**;21-MAR-94;Build 123
"RTN","IBCCC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCCC",4,0)
 ;
"RTN","IBCCC",5,0)
 ;MAP TO DGCRCC
"RTN","IBCCC",6,0)
 ;
"RTN","IBCCC",7,0)
 ;STEP 1 - cancel bill
"RTN","IBCCC",8,0)
 ;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancel)
"RTN","IBCCC",9,0)
 ;STEP 2 - build array of IBIDS call screen that asks ok
"RTN","IBCCC",10,0)
 ;STEP 3 - pass stub entry to ar
"RTN","IBCCC",11,0)
 ;STEP 4 - store stub data in MCCR then x-ref
"RTN","IBCCC",12,0)
 ;STEP 4.5 - store claim clone info on "S1" node.
"RTN","IBCCC",13,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC",14,0)
 ;STEP 6 - go to screens, come out to IBB1 
"RTN","IBCCC",15,0)
EN ;
"RTN","IBCCC",16,0)
 N IBBCF,IBBCT,IBBCB,IBCCR,IBDBC,IBCNCOPY,IBNOCALC
"RTN","IBCCC",17,0)
 S IBDBC=DT    ;date claim was cloned
"RTN","IBCCC",18,0)
 S IBBCB=DUZ   ;user-id of person cloning the claim.
"RTN","IBCCC",19,0)
 S IBCNCOPY=1 ; flag indicating this function is entered as the copy/cancel option
"RTN","IBCCC",20,0)
 ;
"RTN","IBCCC",21,0)
 ; MRD;IB*2.0*516 - Added the flag IBNOCALC.  This flag is set here and
"RTN","IBCCC",22,0)
 ; below.  When charges are recalculated in BILL^IBCRBC, the first time
"RTN","IBCCC",23,0)
 ; that procedure is entered for the new claim, if the IBNOCALC flag is
"RTN","IBCCC",24,0)
 ; set, it will reset the flag and quit out.  That is, it does not re-
"RTN","IBCCC",25,0)
 ; calculate the charges the first time it otherwise would if the user
"RTN","IBCCC",26,0)
 ; is doing either a CRD or CLON.
"RTN","IBCCC",27,0)
 ;
"RTN","IBCCC",28,0)
 S IBNOCALC=1
"RTN","IBCCC",29,0)
 ;
"RTN","IBCCC",30,0)
STEP1 I $G(IBCE("EDI"))>1 G END1
"RTN","IBCCC",31,0)
 S IBCAN=2,IBQUIT=0,IBAC=6,IBU="UNSPECIFIED"
"RTN","IBCCC",32,0)
 I '$G(IBCE("EDI")) D ASK^IBCC
"RTN","IBCCC",33,0)
 I $G(IBCE("EDI"))=1 S IB364="" D NOPTF^IBCC
"RTN","IBCCC",34,0)
 G:IBQUIT END1
"RTN","IBCCC",35,0)
 I 'IBCCCC!('$D(IBIFN)) G STEP1:'$G(IBCE("EDI")),END1
"RTN","IBCCC",36,0)
 I $G(IBCE("EDI")) S IBCE("EDI")=2
"RTN","IBCCC",37,0)
EN1 ;
"RTN","IBCCC",38,0)
STEP1P5 I '$D(IBIFN) S IBCAN=2,IBQUIT=0,IBAC=6 W !,"Copy Previously Cancelled Bill.",!! S DIC="^DGCR(399,",DIC("S")="I $P(^(0),U,13)=7",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " D ^DIC G:Y<1 END S IBIFN=+Y
"RTN","IBCCC",39,0)
 ;
"RTN","IBCCC",40,0)
 S IBBCF=IBIFN    ;this is the claim we are copying FROM
"RTN","IBCCC",41,0)
 S IBIDS(.15)=IBIFN K IBIFN
"RTN","IBCCC",42,0)
STEP2 S IBND0=^DGCR(399,IBIDS(.15),0) I $D(^("U")) S IBNDU=^("U")
"RTN","IBCCC",43,0)
 ; *** Note - all these fields should also be included in WHERE^IBCCC1
"RTN","IBCCC",44,0)
 ; IB*2.0*432 added check of variable IBSILENT to allow COB copy in background mode
"RTN","IBCCC",45,0)
 F I=2:1:12 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBCCC",46,0)
 F I=16:1:19,21:1:27 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBCCC",47,0)
 F I=151,152,155 S IBIDS(I)=$P(IBNDU,"^",(I-150))
"RTN","IBCCC",48,0)
 S IBIDS(159.5)=$P(IBNDU,U,20)
"RTN","IBCCC",49,0)
 ; ***
"RTN","IBCCC",50,0)
 D:$G(IBSILENT)="" HOME^%ZIS
"RTN","IBCCC",51,0)
 S DFN=IBIDS(.02) D DEM^VADPT
"RTN","IBCCC",52,0)
 I +$G(IBCTCOPY)!$G(IBCE("EDI")) G STEP3
"RTN","IBCCC",53,0)
 D ^IBCA1
"RTN","IBCCC",54,0)
ASK S IBYN=0 W !!,"IS THE ABOVE INFORMATION CORRECT AS SHOWN" S %=1 D YN^DICN G END:%=2,STEP3:%=1 I % G END
"RTN","IBCCC",55,0)
 W !!?4,"YES - If this information is correct as shown and you wish to file the bill.",!?4,"NO  - If you wish to change this information prior to filing."
"RTN","IBCCC",56,0)
 W !?4,"'^' - Enter the up-arrow character to DELETE this Bill at this time." G ASK
"RTN","IBCCC",57,0)
 ;
"RTN","IBCCC",58,0)
STEP3 ;
"RTN","IBCCC",59,0)
 S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),"^",14)
"RTN","IBCCC",60,0)
 S PRCASV("SITE")=$P($$SITE^VASITE,"^",3),IBNWBL="",PRCASV("ARCRD")=$G(IBCNCRD)
"RTN","IBCCC",61,0)
 ; IA#386 & 1992  If user came from CRD option, need to pass old bill # and claim ien, as well as new iteration number
"RTN","IBCCC",62,0)
 I $G(IBCNCRD)=1 D CRD^IBCC(IBBCF) S PRCASV("ARREC")=IBBCF,PRCASV("ARBIL")=PRCASV("SITE")_"-"_$P(IBITN,"-"),PRCASV("ARITN")=PRCASV("SITE")_"-"_IBITN
"RTN","IBCCC",63,0)
 W:$G(IBSILENT)="" !,"Passing bill to Accounts Receivable Module..." D SETUP^PRCASVC3 I $S($P(PRCASV("ARREC"),"^")=-1:1,$P(PRCASV("ARBIL"),"^")=-1:1,1:0) W:$G(IBSILENT)="" *7,"  ",$P(PRCASV("ARREC"),"^",2),$P(PRCASV("ARBIL"),"^",2) G END
"RTN","IBCCC",64,0)
 S IBIDS(.01)=$P(PRCASV("ARBIL"),"-",2),IBIDS(.17)=$S($D(IBIDS(.17)):IBIDS(.17),1:PRCASV("ARREC"))
"RTN","IBCCC",65,0)
 I '$G(IBCE("EDI")) W !,"Billing Record #",IBIDS(.01)," being established for '",VADM(1),"'..." S IBIDS(.02)=DFN,IBHV("IBIFN")=$S($G(IBIFN):IBIFN,1:$G(IBIDS(.15)))
"RTN","IBCCC",66,0)
 G ^IBCCC1 ;go to step4
"RTN","IBCCC",67,0)
 Q
"RTN","IBCCC",68,0)
 ;
"RTN","IBCCC",69,0)
END W:$G(IBSILENT)="" !!,"No Billing Record Set up.  You must manually enter the bill."
"RTN","IBCCC",70,0)
END1 K %,%DT,IBCAN,IBAC,IBND0,IBNDU,IBYN,IBCCCC,IBIFN,IB,IBA,IBNWBL,IBBT,IBIDS,IBU,I,J,VA,VADM,X,X1,X2,X3,X4,D,Y
"RTN","IBCCC",71,0)
 ;I '$G(IBQUIT),$S(+$G(IBCNCOPY):1,1:'$G(IBCE("EDI"))) G STEP1
"RTN","IBCCC",72,0)
 I '$G(IBQUIT),$S(+$G(IBCNCOPY)!(+$G(IBCNCRD)):1,1:'$G(IBCE("EDI"))) G STEP1
"RTN","IBCCC",73,0)
 K IBQUIT,IBCNCOPY,IBCNCRD,IBNOCALC
"RTN","IBCCC",74,0)
 Q
"RTN","IBCCC",75,0)
 ;
"RTN","IBCCC",76,0)
ITN(IBX) ; determine iteration # for rejected or denied claim
"RTN","IBCCC",77,0)
 N IBCF,IBCL
"RTN","IBCCC",78,0)
 S IBCF=$P($G(^DGCR(399,IBX,"S1")),U,2)
"RTN","IBCCC",79,0)
 ; if this claim has never been cloned, iteration # is -01
"RTN","IBCCC",80,0)
 Q:IBCF="" $P($G(^DGCR(399,IBX,0)),U)_"-01"
"RTN","IBCCC",81,0)
 S IBCL=$P($G(^DGCR(399,IBCF,0)),U)
"RTN","IBCCC",82,0)
 ; if claim was a CLON 1st and now a CORRECT, this is the 1st iteration
"RTN","IBCCC",83,0)
 I $P(IBCL,"-")'=$P($P($G(^DGCR(399,IBX,0)),U),"-") Q $P($G(^DGCR(399,IBX,0)),U)_"-01"
"RTN","IBCCC",84,0)
 ; to determine iteration#, need to incriment from claim that was cloned from
"RTN","IBCCC",85,0)
 S IBITN=$P(IBCL,"-",2),IBITN=IBITN+1 I $L(IBITN)=1 S IBITN="0"_IBITN
"RTN","IBCCC",86,0)
 Q $P(IBCL,"-")_"-"_IBITN
"RTN","IBCCC",87,0)
 ;
"RTN","IBCCC",88,0)
CRD ; new entry point if user comes from CRD option instead of CLON  
"RTN","IBCCC",89,0)
 N IBBCF,IBBCT,IBBCB,IBCCR,IBDBC,IBCNCRD,IBITN,IBNOCALC
"RTN","IBCCC",90,0)
 S IBDBC=DT    ;date claim was cloned
"RTN","IBCCC",91,0)
 S IBBCB=DUZ   ;user-id of person cloning the claim.
"RTN","IBCCC",92,0)
 S IBCNCRD=1 ; flag indicating this function is entered as the CRD option
"RTN","IBCCC",93,0)
 ;
"RTN","IBCCC",94,0)
 ; MRD;IB*2.0*516 - Added the flag IBNOCALC.  This flag is set here and
"RTN","IBCCC",95,0)
 ; above.  When charges are recalculated in BILL^IBCRBC, the first time
"RTN","IBCCC",96,0)
 ; that procedure is entered for the new claim, if the IBNOCALC flag is
"RTN","IBCCC",97,0)
 ; set, it will reset the flag and quit out.  That is, it does not re-
"RTN","IBCCC",98,0)
 ; calculate the charges the first time it otherwise would if the user
"RTN","IBCCC",99,0)
 ; is doing either a CRD or CLON.
"RTN","IBCCC",100,0)
 ;
"RTN","IBCCC",101,0)
 S IBNOCALC=1
"RTN","IBCCC",102,0)
 ;
"RTN","IBCCC",103,0)
 G STEP1
"RTN","IBCCC",104,0)
 Q
"RTN","IBCCC",105,0)
 ;
"RTN","IBCCC2")
0^134^B113680571^B108841715
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155,296,320,348,349,371,400,433,432,447,516**;21-MAR-94;Build 123
"RTN","IBCCC2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ; NOTE:  any new or changed data nodes may also need to be updated in IBNCPDP5
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 ; MRD;IB*2.0*516 - Added "In7" nodes.
"RTN","IBCCC2",14,0)
 F I="I1","I17","I2","I27","I3","I37","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",15,0)
 ;
"RTN","IBCCC2",16,0)
 ;move top level data node. ;Do not move 'TX' node EXCEPT piece 8 (added with IB*2.0*432)
"RTN","IBCCC2",17,0)
 ;F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",18,0)
 ; add new data nodes introduced with IB*2.0*432
"RTN","IBCCC2",19,0)
 F I="TX","U","U1","U2","U3","U4","U5","U6","U7","U8","UF2","UF3","UF31","UF32","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 ;move multiple level data
"RTN","IBCCC2",22,0)
 ;F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",23,0)
 ; add new data nodes introduced with IB*2.0*447 BI
"RTN","IBCCC2",24,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV","U9" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 ; IB*2.0*432  ADDED IBSILENT flag so that this can be processed in background
"RTN","IBCCC2",27,0)
 D FTPRV^IBCEU5(IBIFN,$G(IBSILENT)) ; Ask change prov type if form type not the same
"RTN","IBCCC2",28,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",31,0)
 ;
"RTN","IBCCC2",32,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",33,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",34,0)
 ;
"RTN","IBCCC2",35,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",36,0)
 ;
"RTN","IBCCC2",37,0)
STEP6 N IBGOEND
"RTN","IBCCC2",38,0)
 ; need to kill CRD flag prior to entering billing screens in case a copy for corresponding claim is needed
"RTN","IBCCC2",39,0)
 K IBCNCRD
"RTN","IBCCC2",40,0)
 ; don't call IB bill edit screens if this is non-MRA background processing
"RTN","IBCCC2",41,0)
 I $G(IBSTSM)=1 G END
"RTN","IBCCC2",42,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",43,0)
 ;
"RTN","IBCCC2",44,0)
 ;
"RTN","IBCCC2",45,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY,IBCNCRD,IBKEY
"RTN","IBCCC2",46,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",47,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",48,0)
 Q
"RTN","IBCCC2",49,0)
 ;
"RTN","IBCCC2",50,0)
 ;
"RTN","IBCCC2",51,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",52,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",53,0)
 ; if the user came from CBW->PC and this is a non-MRA claim w/a paper EOB, set force print flag IB*2.0*432
"RTN","IBCCC2",54,0)
 ; also, if the user came from CBW->PC and this is a non-MRA claim and the only EEOB we have has filing errors, set force print flag
"RTN","IBCCC2",55,0)
 I $G(IBMRANOT)=1,$$COBN^IBCEF(IBIFN)>1,$G(IBFROM)=2 D 
"RTN","IBCCC2",56,0)
 .I $G(IBDA)="" D FORCEPRT^IBCAPP($G(IBIFN)) Q
"RTN","IBCCC2",57,0)
 .I $D(^IBM(361.1,IBDA,"ERR")) D FORCEPRT^IBCAPP($G(IBIFN)) Q
"RTN","IBCCC2",58,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",59,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",60,0)
 S IBAC=1
"RTN","IBCCC2",61,0)
 D ^IBCB1
"RTN","IBCCC2",62,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",63,0)
IBSCX ;
"RTN","IBCCC2",64,0)
 Q
"RTN","IBCCC2",65,0)
 ;
"RTN","IBCCC2",66,0)
 ;
"RTN","IBCCC2",67,0)
TX F J=8 I $P(IBND("TX"),"^",J)]"" S $P(^DGCR(399,IBIFN,"TX"),"^",J)=$P(IBND("TX"),"^",J)
"RTN","IBCCC2",68,0)
 Q
"RTN","IBCCC2",69,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",70,0)
 Q
"RTN","IBCCC2",71,0)
U1 F J=1:1:3,15 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",72,0)
 Q
"RTN","IBCCC2",73,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",74,0)
 Q
"RTN","IBCCC2",75,0)
U3 F J=1:1:11 I $P(IBND("U3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U3"),"^",J)=$P(IBND("U3"),"^",J)
"RTN","IBCCC2",76,0)
 Q
"RTN","IBCCC2",77,0)
UF2 F J=1,3 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",78,0)
 Q
"RTN","IBCCC2",79,0)
UF3 F J=4:1:6 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",80,0)
 Q
"RTN","IBCCC2",81,0)
U4 F J=1:1:14 I $P(IBND("U4"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U4"),"^",J)=$P(IBND("U4"),"^",J)
"RTN","IBCCC2",82,0)
 Q
"RTN","IBCCC2",83,0)
U5 F J=1:1:6 I $P(IBND("U5"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U5"),"^",J)=$P(IBND("U5"),"^",J)
"RTN","IBCCC2",84,0)
 Q
"RTN","IBCCC2",85,0)
U6 F J=1:1:6 I $P(IBND("U6"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U6"),"^",J)=$P(IBND("U6"),"^",J)
"RTN","IBCCC2",86,0)
 Q
"RTN","IBCCC2",87,0)
U7 F J=1:1:5 I $P(IBND("U7"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U7"),"^",J)=$P(IBND("U7"),"^",J)
"RTN","IBCCC2",88,0)
 Q
"RTN","IBCCC2",89,0)
U8 F J=1:1:3 I $P(IBND("U8"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U8"),"^",J)=$P(IBND("U8"),"^",J)
"RTN","IBCCC2",90,0)
 Q
"RTN","IBCCC2",91,0)
UF31 F J=3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",92,0)
 Q
"RTN","IBCCC2",93,0)
UF32 F J=1:1:3 I $P(IBND("UF32"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF32"),"^",J)=$P(IBND("UF32"),"^",J)
"RTN","IBCCC2",94,0)
 Q
"RTN","IBCCC2",95,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",96,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",97,0)
 Q
"RTN","IBCCC2",98,0)
M F J=1:1:9,11:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",99,0)
 Q
"RTN","IBCCC2",100,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",101,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",102,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",103,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",104,0)
 Q
"RTN","IBCCC2",105,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",106,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",107,0)
 Q
"RTN","IBCCC2",108,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",109,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",110,0)
 Q
"RTN","IBCCC2",111,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",112,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",113,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",114,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",115,0)
 Q
"RTN","IBCCC2",116,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",117,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:16 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",118,0)
 Q
"RTN","IBCCC2",119,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",120,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",121,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP1")=$G(^(1)),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",122,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",123,0)
 . ; IB*2.0*432 add new 1 node
"RTN","IBCCC2",124,0)
 . ; MRD;IB*2.0*516 - Added pieces 7 & 8 (NDC, Units) to 1-node.
"RTN","IBCCC2",125,0)
 . F K=1:1:8 S $P(^DGCR(399,IBIFN,I,J,1),"^",K)=$P(IBND("CP1"),"^",K)
"RTN","IBCCC2",126,0)
 . ; esg - 11/2/06 - IB*2*348 - 50.09 field was added - AUX piece [9]
"RTN","IBCCC2",127,0)
 . I IBND("CP-AUX")'="" F K=1:1:9 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",128,0)
 . ; IB*2.0*432 add new LNPRV multiple
"RTN","IBCCC2",129,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"LNPRV",0)) S ^DGCR(399,IBIFN,I,J,"LNPRV",0)=^DGCR(399,IBIFN1,I,J,"LNPRV",0) D
"RTN","IBCCC2",130,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"LNPRV",K)) Q:'K  D
"RTN","IBCCC2",131,0)
 ... S ^DGCR(399,IBIFN,I,J,"LNPRV",K,0)=^DGCR(399,IBIFN1,I,J,"LNPRV",K,0)
"RTN","IBCCC2",132,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",133,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",134,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",135,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",136,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",137,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",138,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",139,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",140,0)
 Q
"RTN","IBCCC2",141,0)
 ;
"RTN","IBCCC2",142,0)
PRV ; Copy providers for cloned claim
"RTN","IBCCC2",143,0)
 N Z,Z0,CNT
"RTN","IBCCC2",144,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19),CNT=0
"RTN","IBCCC2",145,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",146,0)
 . I $$GETNPI^IBCEF73A($P(^DGCR(399,IBIFN1,I,J,0),U,2))="" Q  ;Don't file provider if no NPI - IB*2*516
"RTN","IBCCC2",147,0)
 . S CNT=CNT+1,^DGCR(399,IBIFN,I,CNT,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",148,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,CNT,0),U)=(Z0+1)
"RTN","IBCCC2",149,0)
 I CNT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0),$P(^DGCR(399,IBIFN,I,0),U,3)=CNT,$P(^DGCR(399,IBIFN,I,0),U,4)=CNT
"RTN","IBCCC2",150,0)
 Q
"RTN","IBCCC2",151,0)
 ;
"RTN","IBCCC2",152,0)
U9 ; Added for new data elements in IB*2.0*447 BI
"RTN","IBCCC2",153,0)
 M ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",154,0)
 Q
"RTN","IBCCC2",155,0)
 ;
"RTN","IBCCC2",156,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",157,0)
 Q
"RTN","IBCCC2",158,0)
 ;
"RTN","IBCCC2",159,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",160,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",161,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",162,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",163,0)
 K DGPROCDT
"RTN","IBCCC2",164,0)
 Q
"RTN","IBCCC2",165,0)
 ;
"RTN","IBCCC2",166,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",167,0)
 N IBMAED D SAVERC(IBIFN,.IBMAED)  ; IB*2.0*447 BI - Save the value of piece 16 of each RC node before re-indexing.
"RTN","IBCCC2",168,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",169,0)
 D RESTRC(IBIFN,.IBMAED)  ; IB*2.0*447 BI - Restore the value of piece 16 of each RC node before re-indexing.
"RTN","IBCCC2",170,0)
 Q
"RTN","IBCCC2",171,0)
 ;
"RTN","IBCCC2",172,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",173,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",174,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",175,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",176,0)
 ;
"RTN","IBCCC2",177,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",178,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",179,0)
 Q
"RTN","IBCCC2",180,0)
 ;
"RTN","IBCCC2",181,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",182,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",183,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",184,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",185,0)
 ;
"RTN","IBCCC2",186,0)
 N I,IBFRMTYP,IBTAXLST
"RTN","IBCCC2",187,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",188,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",189,0)
 ;
"RTN","IBCCC2",190,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",191,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",192,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",193,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",194,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",195,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",196,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",197,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",198,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",199,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",200,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",201,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",202,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",203,0)
 . Q
"RTN","IBCCC2",204,0)
 ;
"RTN","IBCCC2",205,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",206,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",207,0)
 ;
"RTN","IBCCC2",208,0)
 ; IB*2.0*211
"RTN","IBCCC2",209,0)
 ; save off Form Type
"RTN","IBCCC2",210,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",211,0)
 ; Save off Taxonomies for providers.
"RTN","IBCCC2",212,0)
 S I=0 F  S I=$O(^DGCR(399,IBIFN,"PRV",I)) Q:'I  S IBTAXLST(I)=$P($G(^DGCR(399,IBIFN,"PRV",I,0)),U,15)
"RTN","IBCCC2",213,0)
 ;
"RTN","IBCCC2",214,0)
 ; fire xrefs set logic
"RTN","IBCCC2",215,0)
 D INDEX
"RTN","IBCCC2",216,0)
 ;
"RTN","IBCCC2",217,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",218,0)
 ;   creating CMS-1500 claim from CTCOPY1^IBCCCB
"RTN","IBCCC2",219,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",220,0)
 ;
"RTN","IBCCC2",221,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",222,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",223,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",224,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",225,0)
 ;
"RTN","IBCCC2",226,0)
 ; Only if cloning, then restore Taxonomies in fields 243 and 244 and 252.
"RTN","IBCCC2",227,0)
 I '$G(IBINS),'$G(IBPRCOB) D
"RTN","IBCCC2",228,0)
 . S I=$P($G(IBND("U3")),U,2)
"RTN","IBCCC2",229,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,2) D
"RTN","IBCCC2",230,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="243////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",231,0)
 . ;
"RTN","IBCCC2",232,0)
 . S I=$P($G(IBND("U3")),U,3)
"RTN","IBCCC2",233,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,3) D
"RTN","IBCCC2",234,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="244////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",235,0)
 . ;
"RTN","IBCCC2",236,0)
 . S I=$P($G(IBND("U3")),U,11)
"RTN","IBCCC2",237,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,11) D
"RTN","IBCCC2",238,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="252////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",239,0)
 . Q
"RTN","IBCCC2",240,0)
 ;
"RTN","IBCCC2",241,0)
 ; Restore Taxonomies in field .15 in sub-file 399.0222.
"RTN","IBCCC2",242,0)
 S IBTAXLST=0 F  S IBTAXLST=$O(IBTAXLST(IBTAXLST)) Q:'IBTAXLST  D
"RTN","IBCCC2",243,0)
 . S I=IBTAXLST(IBTAXLST)
"RTN","IBCCC2",244,0)
 . I I=$P($G(^DGCR(399,IBIFN,"PRV",IBTAXLST,0)),U,15) Q  ; No change
"RTN","IBCCC2",245,0)
 . N DA,DIE,DR
"RTN","IBCCC2",246,0)
 . S DA(1)=IBIFN,DA=IBTAXLST
"RTN","IBCCC2",247,0)
 . S DIE="^DGCR(399,"_DA(1)_",""PRV"",",DR=".15////"_$S(I'="":I,1:"@")
"RTN","IBCCC2",248,0)
 . D ^DIE
"RTN","IBCCC2",249,0)
 . Q
"RTN","IBCCC2",250,0)
 ;
"RTN","IBCCC2",251,0)
 K IBCOB("TX")
"RTN","IBCCC2",252,0)
 Q
"RTN","IBCCC2",253,0)
 ;
"RTN","IBCCC2",254,0)
SAVERC(IBIFN,IBMAED)  ; IB*2.0*447 BI - Save the value of piece 16 of each RC node before re-indexing.
"RTN","IBCCC2",255,0)
 Q:$G(IBCTCOPY)=1  Q:$G(IBCTCOPY)=2
"RTN","IBCCC2",256,0)
 N IBCNT S IBCNT=0
"RTN","IBCCC2",257,0)
 Q:'$G(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCCC2",258,0)
 F  S IBCNT=$O(^DGCR(399,IBIFN,"RC",IBCNT)) Q:+IBCNT=0  D
"RTN","IBCCC2",259,0)
 . S IBMAED(IBCNT)=$P($G(^DGCR(399,IBIFN,"RC",IBCNT,0)),U,16)
"RTN","IBCCC2",260,0)
 Q
"RTN","IBCCC2",261,0)
 ;
"RTN","IBCCC2",262,0)
RESTRC(IBIFN,IBMAED)  ; IB*2.0*447 BI - Restore the value of piece 16 of each RC node after re-indexing.
"RTN","IBCCC2",263,0)
 Q:$G(IBCTCOPY)=1  Q:$G(IBCTCOPY)=2
"RTN","IBCCC2",264,0)
 N IBCNT S IBCNT=0
"RTN","IBCCC2",265,0)
 Q:'$G(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCCC2",266,0)
 F  S IBCNT=$O(IBMAED(IBCNT)) Q:+IBCNT=0  D
"RTN","IBCCC2",267,0)
 . S $P(^DGCR(399,IBIFN,"RC",IBCNT,0),U,16)=IBMAED(IBCNT)
"RTN","IBCCC2",268,0)
 Q
"RTN","IBCD3")
0^44^B32514703^B31598371
"RTN","IBCD3",1,0)
IBCD3 ;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - CREATE BILL ENTRY) ;9/5/93
"RTN","IBCD3",2,0)
 ;;2.0;INTEGRATED BILLING;**14,55,52,91,106,125,51,148,160,137,210,245,260,405,384,516**;21-MAR-94;Build 123
"RTN","IBCD3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCD3",4,0)
 ;
"RTN","IBCD3",5,0)
 ;Called by IBCD2,IBACUS2
"RTN","IBCD3",6,0)
 ;
"RTN","IBCD3",7,0)
EN(IBQUERY) ;
"RTN","IBCD3",8,0)
 N IBI,IBX,IBY,I,X,X1,X2,IBAC,IBCPY K IBDR,IBDR222 S IBAC=1
"RTN","IBCD3",9,0)
 S X=$P($T(WHERE),";;",2),X2=$P($T(WHERE+1),";;",2) F I=0:0 S I=$O(IB(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1) S:X1="" X1=$P($E(X2,$F(X2,I)+1,999),";",1) I $D(IB(I))=1 S $P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IB(I)
"RTN","IBCD3",10,0)
 F I=0,"C","M","M1","S","U","U1","U2" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCD3",11,0)
 S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1
"RTN","IBCD3",12,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK ; set cross-references
"RTN","IBCD3",13,0)
 ;
"RTN","IBCD3",14,0)
 ; Set the attending/rendering provider into provider multiple
"RTN","IBCD3",15,0)
 I $G(IB("PRV",.01))'="" D
"RTN","IBCD3",16,0)
 . S DIC("DR")="",I=.01
"RTN","IBCD3",17,0)
 . N IBV
"RTN","IBCD3",18,0)
 . F  S I=$O(IB("PRV",I)) Q:'I  D
"RTN","IBCD3",19,0)
 .. I IB("PRV",I)="" Q
"RTN","IBCD3",20,0)
 .. I $$GETNPI^IBCEF73A($P(IB("PRV",I),"^",2))="" Q  ;Don't file provider if no NPI - IB*2*516
"RTN","IBCD3",21,0)
 .. S IBV(I)=IB("PRV",I),DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////^S X=IBV("_I_")"
"RTN","IBCD3",22,0)
 . S DIC="^DGCR(399,"_IBIFN_",""PRV"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,X=IB("PRV",.01)
"RTN","IBCD3",23,0)
 . K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",24,0)
 ;
"RTN","IBCD3",25,0)
 ; Set the occurrence span codes for leave/pass days
"RTN","IBCD3",26,0)
 I $O(IB("OC",0)) D
"RTN","IBCD3",27,0)
 . N I,I1
"RTN","IBCD3",28,0)
 . S I1=0 F  S I1=$O(IB("OC",I1)) Q:'I1  D
"RTN","IBCD3",29,0)
 .. S I=0,DIC("DR")=""
"RTN","IBCD3",30,0)
 .. F  S I=$O(IB("OC",I1,I)) Q:'I  S DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////"_IB("OC",I1,I)
"RTN","IBCD3",31,0)
 .. S DIC="^DGCR(399,"_IBIFN_",""OC"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC("P")=$$GETSPEC^IBEFUNC(399,41),X=IB("OC")
"RTN","IBCD3",32,0)
 .. K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",33,0)
 ;
"RTN","IBCD3",34,0)
 ; file rx refills, default CPT and Dx if defined
"RTN","IBCD3",35,0)
 I $D(IB(362.4))>2 D  G END
"RTN","IBCD3",36,0)
 . N IBZ
"RTN","IBCD3",37,0)
 . S IBRX=0 F  S IBRX=$O(IB(362.4,IBRX)) Q:'IBRX  S IBY="" F  S IBY=$O(IB(362.4,IBRX,IBY)) Q:IBY=""  D
"RTN","IBCD3",38,0)
 .. S IBX=IB(362.4,IBRX,IBY) Q:IBX=""
"RTN","IBCD3",39,0)
 .. S IBZ=$$ADD^IBCSC5A($P(IBX,U),IBIFN,$P(IBX,U,4),$P(IBX,U,2),+IBRX,$P(IBX,U,3)_U_$P(IBX,U,5)_U_$P(IBX,U,6),IBY)
"RTN","IBCD3",40,0)
 ;
"RTN","IBCD3",41,0)
 ;file outpatient visit dates and find/store outpatient procedures and dx
"RTN","IBCD3",42,0)
 ;NOTE: If IBQUERY is defined at this point, it will be used to perform
"RTN","IBCD3",43,0)
 ;       the scan for outpatient procedures
"RTN","IBCD3",44,0)
 I '$$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",45,0)
 . I $D(IB(43))>2 D
"RTN","IBCD3",46,0)
 .. S ^DGCR(399,IBIFN,"OP",0)="^399.043DA^" S IBX=0 F  S IBX=$O(IB(43,IBX)) Q:'IBX  D
"RTN","IBCD3",47,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""OP"",",DIC(0)="L",DA(1)=IBIFN,(DINUM,X)=IBX,DLAYGO=399.043 K DD,DO D FILE^DICN K DIC,DA,DINUM,DO,DD,DLAYGO
"RTN","IBCD3",48,0)
 . ;
"RTN","IBCD3",49,0)
 . D VST^IBCCPT(.IBQUERY) I $D(^UTILITY($J,"CPT-CNT")) D
"RTN","IBCD3",50,0)
 .. N IBPRX
"RTN","IBCD3",51,0)
 .. S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCD3",52,0)
 .. S IBY=0 F  S IBY=$O(^UTILITY($J,"CPT-CNT",IBY)) Q:'IBY  S IBX=^(IBY) I '$P(IBX,U,6) D
"RTN","IBCD3",53,0)
 ... S IBPRX(+$P(IBX,U,8))=""
"RTN","IBCD3",54,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBX_";ICPT(",DLAYGO=399 K DD,DO D FILE^DICN K DO,DD,DLAYGO Q:Y'>0
"RTN","IBCD3",55,0)
 ... ;
"RTN","IBCD3",56,0)
 ... S IBCPY=+Y
"RTN","IBCD3",57,0)
 ... ;
"RTN","IBCD3",58,0)
 ... ; add dx to 362.3 for associations if they exist
"RTN","IBCD3",59,0)
 ... I $G(^UTILITY($J,"CPT-CNT",IBY,"DX")) D ADDDX^IBCCPT1(IBIFN,IBCPY,^("DX"),.IBDR) I $L($G(IBDR)) S IBDR=IBDR_";"
"RTN","IBCD3",60,0)
 ... ;
"RTN","IBCD3",61,0)
 ... ;
"RTN","IBCD3",62,0)
 ... S DR=$G(IBDR)_"1////"_$P(IBX,U,2)_$S(+$P(IBX,U,8):";18////"_+$P(IBX,U,8),1:"") K IBDR
"RTN","IBCD3",63,0)
 ... S DR=DR_$S(+$P(IBX,U,9):";6////"_+$P(IBX,U,9),1:"")_$S(+$P(IBX,U,5):";5////"_+$P(IBX,U,5),1:"")
"RTN","IBCD3",64,0)
 ... S DR=DR_$S(+$P(IBX,U,11):";20////"_+$P(IBX,U,11),1:"")
"RTN","IBCD3",65,0)
 ... S DIE=DIC,DA=+IBCPY D ^DIE K DIE,DIC,DA,DINUM,DO,DD
"RTN","IBCD3",66,0)
 ... I $P(IBX,U,10) D ADDMOD^IBCCPT(IBIFN,IBCPY,$P(IBX,U,10)) ;Modifiers
"RTN","IBCD3",67,0)
 .. I $O(IBPRX(""))=$O(IBPRX(""),-1),$O(IBPRX(0)) D
"RTN","IBCD3",68,0)
 ... ;If only 1 provider - make it the rendering
"RTN","IBCD3",69,0)
 ... S IB("PRV",.02)=+$O(IBPRX(0))_";VA(200,",IB("PRV",.01)=3
"RTN","IBCD3",70,0)
 . K DGCNT,V,IBOPV1,IBOPV2,I,DGDIV,I1,DGNOD,DGCPTS,I7,I2,DGCPT,^UTILITY($J,"CPT-CNT")
"RTN","IBCD3",71,0)
 . ;
"RTN","IBCD3",72,0)
 . D OPTDX^IBCSC4D(DFN,IB(151),IB(152),.IBDX) I +IBDX D  K IBDX
"RTN","IBCD3",73,0)
 .. S IBY=0 F  S IBY=$O(IBDX(IBY)) Q:IBY=""  S IBX=IBDX(IBY) I '$P(IBX,U,5) D
"RTN","IBCD3",74,0)
 ... I '$D(^DGCR(399,"AOPV",DFN,(+$P(IBX,U,4)\1),IBIFN)) Q
"RTN","IBCD3",75,0)
 ... S DIC("DR")=".02////"_IBIFN,DIC="^IBA(362.3,",DIC(0)="L",X=+IBX,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",76,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",77,0)
 ;
"RTN","IBCD3",78,0)
 ;store inpatient diagnosis and procedures, default admit dx to first dx found
"RTN","IBCD3",79,0)
 I $$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",80,0)
 . I $G(^TMP("IBDX",$J))=IB(.08) D  K ^TMP("IBDX",$J)
"RTN","IBCD3",81,0)
 .. N IBXDEF S IBXDEF=0
"RTN","IBCD3",82,0)
 .. S (IBI,IBX)="" F  S IBX=$O(^TMP("IBDX",$J,IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(^TMP("IBDX",$J,IBX,IBY)) Q:'IBY  D
"RTN","IBCD3",83,0)
 ... S IBZ=^TMP("IBDX",$J,IBX,IBY) Q:($$ICD9^IBACSV(+IBZ)="")  S IBI=IBI+1
"RTN","IBCD3",84,0)
 ... S DIC("DR")=".02////"_IBIFN_";.03////"_IBI,DIC="^IBA(362.3,",DIC(0)="L",X=+IBZ,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",85,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",86,0)
 ... I Y>0,'IBXDEF S IBXDEF=1,DR="215////"_+IBZ,DIE="^DGCR(399,",DA=IBIFN D ^DIE
"RTN","IBCD3",87,0)
 . ;
"RTN","IBCD3",88,0)
 . D IPRC^IBCD4(+IB(.08),IB(151),IB(152)) I $D(^TMP("IBIPRC",$J)) D  K ^TMP("IBIPRC",$J)
"RTN","IBCD3",89,0)
 .. S ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI^"
"RTN","IBCD3",90,0)
 .. S IBX=0 F  S IBX=$O(^TMP("IBIPRC",$J,IBX)) Q:'IBX  D
"RTN","IBCD3",91,0)
 ... S IBY=^TMP("IBIPRC",$J,IBX) F IBI=1:1 S IBZ=$P(IBY,U,IBI) Q:'IBZ  D
"RTN","IBCD3",92,0)
 .... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBZ_";ICD0(",DLAYGO=399.0304 K DD,DO D FILE^DICN
"RTN","IBCD3",93,0)
 .... I Y>0 S DIE=DIC,DA=+Y,DR="1////"_(IBX\1) D ^DIE K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",94,0)
 ;
"RTN","IBCD3",95,0)
END S IBX="1^Billing Record #"_$P(^DGCR(399,+IBIFN,0),"^",1)_" established for "_$P($G(^DPT(IBDFN,0)),U,1)
"RTN","IBCD3",96,0)
 ;
"RTN","IBCD3",97,0)
 S IBAUTO=1,DGPTUPDT="" I '$G(IBCHTRN) D PROC^IBCU7A(IBIFN) D ^IBCU6 ; auto calculate/store revenue codes
"RTN","IBCD3",98,0)
 ;
"RTN","IBCD3",99,0)
Q K %,%DT,IBDR,X1,X2,X3,X4,Y,DGDIRA,DGDIRB,DGDIR0,DIR,DGRVRCAL,DIC,DA,DR,DINUM,DGPTUPDT,DGXRF1,IBCHK,IBINDT,IBIDS,DLAYGO
"RTN","IBCD3",100,0)
 Q
"RTN","IBCD3",101,0)
 ;
"RTN","IBCD3",102,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.17^0^17;.16^0^16;.18^0^18;.19^0^19;.2^0^20;.22^0^22;.27^0^27;112^M^12;151^U^1;152^U^2;155^U^5;157^U^7;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;
"RTN","IBCD3",103,0)
 ;;217^U2^3;221^U2^7;
"RTN","IBCECOB")
0^40^B27628888^B17969465
"RTN","IBCECOB",1,0)
IBCECOB ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,432,488,516**;21-MAR-94;Build 123
"RTN","IBCECOB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECOB",4,0)
 ;
"RTN","IBCECOB",5,0)
EN ; -- main entry point for COB management
"RTN","IBCECOB",6,0)
 K IBSRT,IBMRADUP
"RTN","IBCECOB",7,0)
 I $G(IBMRANOT) D EN^VALM("IBCEM COB MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",8,0)
 I '$G(IBMRANOT) D EN^VALM("IBCEM MRA MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",9,0)
 Q
"RTN","IBCECOB",10,0)
 ;
"RTN","IBCECOB",11,0)
HDR ; -- header code
"RTN","IBCECOB",12,0)
 I '$G(IBMRANOT) S VALMSG="!=Data Mismatch/MSE      Enter ?? for more actions"
"RTN","IBCECOB",13,0)
 Q
"RTN","IBCECOB",14,0)
 ;
"RTN","IBCECOB",15,0)
INIT ; -- init variables and list array
"RTN","IBCECOB",16,0)
 N DIC,DIRUT,DIROUT,DTOUT,DUOUT,X,Y,DIR,IB1
"RTN","IBCECOB",17,0)
 K ^TMP("IBBIL",$J),^TMP("IBBIL-DIV",$J)
"RTN","IBCECOB",18,0)
 S IBSRT=""
"RTN","IBCECOB",19,0)
 S IB1=1
"RTN","IBCECOB",20,0)
 W !
"RTN","IBCECOB",21,0)
 F  S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select "_$S('IB1:"Another ",1:"")_"BILLER: "_$S('IB1:"",1:"ALL//") D ^DIC K DIC D  Q:Y<0
"RTN","IBCECOB",22,0)
 . Q:Y<0
"RTN","IBCECOB",23,0)
 . I $D(^TMP("IBBIL",$J,+Y)) W !,"This biller has already been selected" Q
"RTN","IBCECOB",24,0)
 . S ^TMP("IBBIL",$J,+Y)=""
"RTN","IBCECOB",25,0)
 . S IB1=0
"RTN","IBCECOB",26,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",27,0)
 ;
"RTN","IBCECOB",28,0)
 I '$G(IBMRANOT) G DIVX
"RTN","IBCECOB",29,0)
 ;
"RTN","IBCECOB",30,0)
DIV ; division
"RTN","IBCECOB",31,0)
 W !
"RTN","IBCECOB",32,0)
 S DIR(0)="SA^A:All Divisions;S:Selected Divisions"
"RTN","IBCECOB",33,0)
 S DIR("A")="Include All Divisions or Selected Divisions? "
"RTN","IBCECOB",34,0)
 S DIR("B")="All"
"RTN","IBCECOB",35,0)
 D ^DIR K DIR
"RTN","IBCECOB",36,0)
 I $D(DIROUT)!$D(DIRUT) S VALMQUIT=1 G INITQ  ;Timeout or User "^"
"RTN","IBCECOB",37,0)
 I Y="A" G DIVX
"RTN","IBCECOB",38,0)
 ;
"RTN","IBCECOB",39,0)
 W !
"RTN","IBCECOB",40,0)
 S IBQUIT=0
"RTN","IBCECOB",41,0)
 F  D  I IBQUIT S IBQUIT=IBQUIT-1 Q
"RTN","IBCECOB",42,0)
 . S DIC=40.8,DIC(0)="AEMQ",DIC("A")="   Select Division: "
"RTN","IBCECOB",43,0)
 . I $O(^TMP("IBBIL-DIV",$J,"")) S DIC("A")="   Select Another Division: "
"RTN","IBCECOB",44,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBCECOB",45,0)
 . I X="^^" S IBQUIT=2 Q       ; user entered ^^
"RTN","IBCECOB",46,0)
 . I +Y'>0 S IBQUIT=1 Q        ; user is done
"RTN","IBCECOB",47,0)
 . S ^TMP("IBBIL-DIV",$J,+Y)=$P(Y,U,2)
"RTN","IBCECOB",48,0)
 . Q
"RTN","IBCECOB",49,0)
 ;
"RTN","IBCECOB",50,0)
 I IBQUIT S VALMQUIT=1 G INITQ  ;User "^" out of the selection
"RTN","IBCECOB",51,0)
 ;
"RTN","IBCECOB",52,0)
 I '$O(^TMP("IBBIL-DIV",$J,"")) D  G DIV
"RTN","IBCECOB",53,0)
 . W *7,!!?3,"No divisions have been selected.  Please try again."
"RTN","IBCECOB",54,0)
 . Q
"RTN","IBCECOB",55,0)
 ;
"RTN","IBCECOB",56,0)
DIVX ; Exit Division selection.
"RTN","IBCECOB",57,0)
 ;
"RTN","IBCECOB",58,0)
 W !
"RTN","IBCECOB",59,0)
 S DIR("A")=""
"RTN","IBCECOB",60,0)
 I '$G(IBMRANOT) S DIR("A")="Within Division "
"RTN","IBCECOB",61,0)
 S DIR("A")=DIR("A")_"Sort By: ",DIR("B")="BILLER"
"RTN","IBCECOB",62,0)
 S DIR(0)="SBA^B:BILLER;D:DAYS SINCE TRANSMISSION OF LATEST BILL;L:DATE LAST "_$S($G(IBMRANOT):"EOB",1:"MRA")_" RECEIVED;"
"RTN","IBCECOB",63,0)
 S DIR(0)=DIR(0)_"I:SECONDARY INSURANCE COMPANY;M:"_$S($G(IBMRANOT):"EOB",1:"MRA")_" STATUS;P:PATIENT NAME;R:PATIENT RESPONSIBILITY;S:SERVICE DATE"
"RTN","IBCECOB",64,0)
 S DIR("?")="Enter the code to indicate how the list should be sorted." D ^DIR K DIR
"RTN","IBCECOB",65,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",66,0)
 S IBSRT=Y
"RTN","IBCECOB",67,0)
 ;
"RTN","IBCECOB",68,0)
 W !
"RTN","IBCECOB",69,0)
 S IBMRADUP=0
"RTN","IBCECOB",70,0)
 S DIR("A")="Do you want to include Denied "_$S($G(IBMRANOT):"EOB",1:"MRA")_"s for Duplicate Claim/Service",DIR("B")="No",DIR(0)="YO"
"RTN","IBCECOB",71,0)
 D ^DIR K DIR
"RTN","IBCECOB",72,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",73,0)
 I Y S IBMRADUP=1
"RTN","IBCECOB",74,0)
 ;
"RTN","IBCECOB",75,0)
 D BLD^IBCECOB1
"RTN","IBCECOB",76,0)
 ;
"RTN","IBCECOB",77,0)
INITQ Q
"RTN","IBCECOB",78,0)
 ;
"RTN","IBCECOB",79,0)
HELP ; -- help code
"RTN","IBCECOB",80,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECOB",81,0)
 Q
"RTN","IBCECOB",82,0)
 ;
"RTN","IBCECOB",83,0)
EXIT ; -- exit code
"RTN","IBCECOB",84,0)
 K ^TMP("IBBIL",$J),^TMP("IBBIL-DIV",$J)
"RTN","IBCECOB",85,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J)
"RTN","IBCECOB",86,0)
 K ^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB",87,0)
 D CLEAN^VALM10
"RTN","IBCECOB",88,0)
 Q
"RTN","IBCECOB",89,0)
 ;
"RTN","IBCECOB",90,0)
EXP ; -- expand code to show additional details of the EOB record
"RTN","IBCECOB",91,0)
 NEW IBDA,IBIFN,LSTENTRY
"RTN","IBCECOB",92,0)
 D SEL^IBCECOB2(.IBDA,1)                       ; selects a bill
"RTN","IBCECOB",93,0)
 S LSTENTRY=+$O(IBDA(0)) I 'LSTENTRY G EXPQ    ; list entry number
"RTN","IBCECOB",94,0)
 S IBIFN=+$G(IBDA(LSTENTRY)) I 'IBIFN G EXPQ   ; bill#
"RTN","IBCECOB",95,0)
 ;
"RTN","IBCECOB",96,0)
 ; If only one MRA on file, call the listman screen and quit
"RTN","IBCECOB",97,0)
 I $$MRACNT^IBCEMU1(IBIFN)=1 D EN^VALM("IBCEM MRA DETAIL") G EXPQ
"RTN","IBCECOB",98,0)
 ;
"RTN","IBCECOB",99,0)
EXPLOOP ; At this point, we know there are multiple MRA's on file
"RTN","IBCECOB",100,0)
 ;
"RTN","IBCECOB",101,0)
 D FULL^VALM1
"RTN","IBCECOB",102,0)
 I $$SEL^IBCEMU1(IBIFN,1,LSTENTRY) D  G EXPLOOP  ; MRA lister/selection
"RTN","IBCECOB",103,0)
 . NEW IBIFN,LSTENTRY,IBDASAVE                   ; protect variables
"RTN","IBCECOB",104,0)
 . M IBDASAVE=IBDA                               ; save off IBDA array
"RTN","IBCECOB",105,0)
 . D EN^VALM("IBCEM MRA DETAIL")                 ; call the listman
"RTN","IBCECOB",106,0)
 . M IBDA=IBDASAVE                               ; restore IBDA array
"RTN","IBCECOB",107,0)
 . Q
"RTN","IBCECOB",108,0)
EXPQ ;
"RTN","IBCECOB",109,0)
 S VALMBCK="R"
"RTN","IBCECOB",110,0)
 Q
"RTN","IBCECOB",111,0)
 ;
"RTN","IBCECOB",112,0)
COBPOSS(IB364) ; Returns 1 if transmit bill ien in IB364 is currently
"RTN","IBCECOB",113,0)
 ; in a status where COB may be performed on the bill
"RTN","IBCECOB",114,0)
 ; Used by index "ACOB", file 364
"RTN","IBCECOB",115,0)
 N IBWNR,IBNSEQ,IB01,IBM1,IBU1,IB0,IBOK,IBMRA
"RTN","IBCECOB",116,0)
 S IBOK=1
"RTN","IBCECOB",117,0)
 S IB0=$G(^IBA(364,IB364,0))
"RTN","IBCECOB",118,0)
 S IBWNR=$$WNRBILL^IBEFUNC(+IB0),IBMRA=$P($G(^DGCR(399,+IB0,"TX")),U,5)
"RTN","IBCECOB",119,0)
 S IB01=$G(^DGCR(399,+IB0,0)),IBM1=$G(^("M1")),IBU1=$G(^("U1"))
"RTN","IBCECOB",120,0)
 I 'IBWNR,IBU1-$P(IBU1,U,2)'>0 S IBOK=0 G COBQ ; Bill has a 0 balance
"RTN","IBCECOB",121,0)
 I $S('IBWNR:$E($P(IB0,U,3))'="A",1:IBMRA'="1N"&(IBMRA'="A")) S IBOK=0 G COBQ ; Not in correct transmit status
"RTN","IBCECOB",122,0)
 S IBNSEQ=+$TR($P(IB0,U,8),"PST","230")
"RTN","IBCECOB",123,0)
 I 'IBNSEQ!'$D(^DGCR(399,+IB0,"I"_IBNSEQ)) S IBOK=0 G COBQ ; No next ins
"RTN","IBCECOB",124,0)
 I "234"'[$P(IB01,U,13) S IBOK=0 G COBQ ; Bill invalid status for COB
"RTN","IBCECOB",125,0)
 I IBNSEQ D
"RTN","IBCECOB",126,0)
 . N Z,IBSTOP
"RTN","IBCECOB",127,0)
 . S IBSTOP=0
"RTN","IBCECOB",128,0)
 . F Z=IBNSEQ:1:3 D  Q:IBSTOP
"RTN","IBCECOB",129,0)
 .. I $D(^DGCR(399,+IB0,"I"_Z)) D
"RTN","IBCECOB",130,0)
 ... ;Insurance must reimburse
"RTN","IBCECOB",131,0)
 ... I $P($G(^DIC(36,+^DGCR(399,+IB0,"I"_Z),0)),U,2)="N" S IBOK=0 Q
"RTN","IBCECOB",132,0)
 ... I $P(IBM1,U,4+Z) S IBOK=0,IBSTOP=1 Q  ; Already has a next seq bill
"RTN","IBCECOB",133,0)
 ... S (IBOK,IBSTOP)=1
"RTN","IBCECOB",134,0)
 ;
"RTN","IBCECOB",135,0)
COBQ Q IBOK
"RTN","IBCECOB",136,0)
 ;
"RTN","IBCECOB1")
0^17^B141608790^B112283735
"RTN","IBCECOB1",1,0)
IBCECOB1 ;ALB/CXW - IB COB MANAGEMENT SCREEN/REPORT ;14-JUN-99
"RTN","IBCECOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,348,377,417,432,447,488,516**;21-MAR-94;Build 123
"RTN","IBCECOB1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECOB1",4,0)
 ;
"RTN","IBCECOB1",5,0)
 ; IBMRANOT = 1 when dealing with the COB Management Worklist.   
"RTN","IBCECOB1",6,0)
 ;            It is set by the entry action in the option file. 
"RTN","IBCECOB1",7,0)
 ;
"RTN","IBCECOB1",8,0)
BLD ; Build list entrypoint
"RTN","IBCECOB1",9,0)
 ;
"RTN","IBCECOB1",10,0)
 N I,IB3611,IB364,IBAMT,IBAPY,IBB,IBB364,IBBPY,IBDA,IBDA1,IBDAY
"RTN","IBCECOB1",11,0)
 N IBDENDUP,IBDIV,IBDT,IBDTN,IBEOBREV,IBEUT,IBEXPY,IBFND,IBHIS
"RTN","IBCECOB1",12,0)
 N IBIFN,IBINS,IBINS1,IBINS2,IBMRACNT,IBMUT,IBNBAL,IBNDI1,IBNDI2
"RTN","IBCECOB1",13,0)
 N IBNDI3,IBNDM,IBNDS,IBOAM,IBPTNM,IBPTRSP,IBPY,IBQ,IBSEQ,IBSRVC
"RTN","IBCECOB1",14,0)
 N EOBTYPE,MSEFLG,Z,Z0
"RTN","IBCECOB1",15,0)
 ;
"RTN","IBCECOB1",16,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J),^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB1",17,0)
 D CLEAN^VALM10      ; kill data and video control arrays
"RTN","IBCECOB1",18,0)
 S (VALMCNT,MSEFLG)=0,IBHIS=""
"RTN","IBCECOB1",19,0)
 ; IB*2.0*432 IF not MRA, use new CAP index on 399 file
"RTN","IBCECOB1",20,0)
 D:$G(IBMRANOT)=1 CAP^IBCAPP2
"RTN","IBCECOB1",21,0)
 ; since 0 is a valid Review Status, init w/null
"RTN","IBCECOB1",22,0)
 S IBEOBREV=""
"RTN","IBCECOB1",23,0)
 ; get EOB's w/Review Status of 0, 1, 1.5 or 2; If 3 or higher, not needed
"RTN","IBCECOB1",24,0)
 I $G(IBMRANOT)'=1 F  S IBEOBREV=$O(^IBM(361.1,"AMRA",1,IBEOBREV)) Q:IBEOBREV=""  Q:IBEOBREV>2  D
"RTN","IBCECOB1",25,0)
 . S IBDA="A" F  S IBDA=$O(^IBM(361.1,"AMRA",1,IBEOBREV,IBDA),-1) Q:'IBDA  D BLD1
"RTN","IBCECOB1",26,0)
 ;
"RTN","IBCECOB1",27,0)
 ; no data accumulated
"RTN","IBCECOB1",28,0)
 I $O(^TMP("IBCOBST",$J,""))="" D NMAT Q
"RTN","IBCECOB1",29,0)
 ;
"RTN","IBCECOB1",30,0)
 ; display accumulated data
"RTN","IBCECOB1",31,0)
 D SCRN
"RTN","IBCECOB1",32,0)
 Q
"RTN","IBCECOB1",33,0)
 ;
"RTN","IBCECOB1",34,0)
BLD1 ;
"RTN","IBCECOB1",35,0)
 ;
"RTN","IBCECOB1",36,0)
 S MSEFLG=$$ELIG(IBDA) Q:'MSEFLG
"RTN","IBCECOB1",37,0)
 S IBDENDUP=$$DENDUP^IBCEMU4(IBDA,$G(IBMRANOT))
"RTN","IBCECOB1",38,0)
 I '$G(IBMRADUP),IBDENDUP Q     ; don't include denied MRAs/EOBs for Duplicate Claim/Service
"RTN","IBCECOB1",39,0)
 S IB3611=$G(^IBM(361.1,IBDA,0))
"RTN","IBCECOB1",40,0)
 S IBIFN=+IB3611,IB364=$P(IB3611,U,19),IBDT=+$P(IB3611,U,6)
"RTN","IBCECOB1",41,0)
 I $D(^TMP("IBCOBSTX",$J,IBIFN)) Q  ;show each bill once on the worklist
"RTN","IBCECOB1",42,0)
 S IBB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECOB1",43,0)
 ;
"RTN","IBCECOB1",44,0)
 ; MRD;IB*2.0*516 - User requested the ability to sort the COB Mgmt
"RTN","IBCECOB1",45,0)
 ; Worklist by Division.  To enable this, the Division was added as
"RTN","IBCECOB1",46,0)
 ; a subscript to the ^TMP("IBCOBST") array. For now, that subscript
"RTN","IBCECOB1",47,0)
 ; will always be "UNKNOWN" when building the MRA Worklist.  To turn
"RTN","IBCECOB1",48,0)
 ; on sort-by-division for the MRA Worklist, uncomment out the fol-
"RTN","IBCECOB1",49,0)
 ; lowing two lines and delete the line Setting IBDIV to "UNKNOWN".
"RTN","IBCECOB1",50,0)
 ;S IBDIV=$P(IBB,U,22) I IBDIV="" S IBDIV="UNKNOWN"
"RTN","IBCECOB1",51,0)
 ;I $D(^TMP("IBBIL-DIV",$J)),'$D(^TMP("IBBIL-DIV",$J,IBDIV)) Q
"RTN","IBCECOB1",52,0)
 S IBDIV="UNKNOWN"
"RTN","IBCECOB1",53,0)
 ;
"RTN","IBCECOB1",54,0)
 S IBNDS=$G(^DGCR(399,IBIFN,"S")),IBNDI1=$G(^("I1")),IBNDI2=$G(^("I2")),IBNDI3=$G(^("I3")),IBNDM=$G(^("M"))
"RTN","IBCECOB1",55,0)
 S IBMUT=+$P(IBNDS,U,8),IBEUT=+$P(IBNDS,U,2)
"RTN","IBCECOB1",56,0)
 S IBINS="",IBSEQ=$P(IB3611,U,15)
"RTN","IBCECOB1",57,0)
 F I=1:1:3 S Z="IBNDI"_I I @Z D
"RTN","IBCECOB1",58,0)
 . N Q
"RTN","IBCECOB1",59,0)
 . S Q=(IBSEQ=I)
"RTN","IBCECOB1",60,0)
 . I Q S IBINS1=+@Z_U_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",61,0)
 . S IBINS=IBINS_$S(IBINS="":"",1:", ")_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",62,0)
 . Q
"RTN","IBCECOB1",63,0)
 ; Get the payer/insurance company that comes after Medicare WNR
"RTN","IBCECOB1",64,0)
 ; If WNR is Primary, get the secondary ins. co.
"RTN","IBCECOB1",65,0)
 ; If WNR is secondary, get the tertiary ins. co.
"RTN","IBCECOB1",66,0)
 D  I $P($G(IBINS2),U,2)="" S $P(IBINS2,U,2)="UNKNOWN"
"RTN","IBCECOB1",67,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,1) S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U) Q
"RTN","IBCECOB1",68,0)
 . S IBINS2=+IBNDI3_U_$P($G(^DIC(36,+IBNDI3,0)),U)
"RTN","IBCECOB1",69,0)
 . Q
"RTN","IBCECOB1",70,0)
 S IBFND=0
"RTN","IBCECOB1",71,0)
 ; biller entry not ALL and no biller, then get entered/edited by user
"RTN","IBCECOB1",72,0)
 I $D(^TMP("IBBIL",$J)) D  Q:'IBFND
"RTN","IBCECOB1",73,0)
 . S IBFND=$S($D(^TMP("IBBIL",$J,IBMUT)):IBMUT,$D(^TMP("IBBIL",$J,IBEUT)):IBEUT,1:0)
"RTN","IBCECOB1",74,0)
 . Q
"RTN","IBCECOB1",75,0)
 S Z=$S(IBFND:IBFND,IBMUT:IBMUT,1:IBEUT)
"RTN","IBCECOB1",76,0)
 S IBMUT=$P($G(^VA(200,+Z,0)),U)_"~"_Z
"RTN","IBCECOB1",77,0)
 S:'$P(IBMUT,"~",2) IBMUT="UNKNOWN~0"
"RTN","IBCECOB1",78,0)
 S IBBPY=+$$COBN^IBCEF(IBIFN),IBQ=1
"RTN","IBCECOB1",79,0)
 ;
"RTN","IBCECOB1",80,0)
 ;IBQ;1=EOB without subsequent insurer,0=COB,2=0 balance
"RTN","IBCECOB1",81,0)
 D  ;I IBQ Q
"RTN","IBCECOB1",82,0)
 . ;Check for no reimbursable subsequent insurance
"RTN","IBCECOB1",83,0)
 . F I=IBBPY+1:1:3 D  Q:'IBQ
"RTN","IBCECOB1",84,0)
 .. S Z="IBNDI"_I,Z=$G(@Z)
"RTN","IBCECOB1",85,0)
 .. I $P($G(^DIC(36,+Z,0)),U,2)="N" S IBQ=0 Q
"RTN","IBCECOB1",86,0)
 .. Q
"RTN","IBCECOB1",87,0)
 . ;Check if next ins doesn't exist or next bill# already created
"RTN","IBCECOB1",88,0)
 . S Z="IBNDI"_(IBBPY+1),Z=$G(@Z)
"RTN","IBCECOB1",89,0)
 . I Z,'$P($G(^DGCR(399,IBIFN,"M1")),U,5+IBBPY) S IBQ=0
"RTN","IBCECOB1",90,0)
 . Q
"RTN","IBCECOB1",91,0)
 ;
"RTN","IBCECOB1",92,0)
 ; Days since transmission of latest bill in COB - IBDAY
"RTN","IBCECOB1",93,0)
 S IBDAY=+$P($G(^DGCR(399,IBIFN,"TX")),U,2) I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1)
"RTN","IBCECOB1",94,0)
 ; if no Last Electronic Extract Date on file 399, get it from file 364
"RTN","IBCECOB1",95,0)
 I 'IBDAY D  I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1) ;calc. the difference
"RTN","IBCECOB1",96,0)
 . S IBB364=$$LAST364^IBCEF4(IBIFN) I IBB364'="" S IBDAY=+$P($P($G(^IBA(364,IBB364,0)),U,4),".",1)
"RTN","IBCECOB1",97,0)
 ;
"RTN","IBCECOB1",98,0)
 S IBAPY=$$TPR^PRCAFN(IBIFN) ; payment on this bill from A/R
"RTN","IBCECOB1",99,0)
 S IBEXPY=+$G(^IBM(361.1,IBDA,1))       ; payer paid amount
"RTN","IBCECOB1",100,0)
 ; IB*2.0*447 add excess indicator to MRW screen and adjust calcs to include percentages
"RTN","IBCECOB1",101,0)
 S IBPTRSP=$S($$MSEDT^IBCEMU4(IBIFN)'="":$$MSPRE^IBCEMU4(IBIFN,1),1:$$PREOBTOT^IBCEU0(IBIFN)) ; patient resp. function
"RTN","IBCECOB1",102,0)
 S IBPY=$S(IBAPY:IBAPY,1:IBEXPY)
"RTN","IBCECOB1",103,0)
 S IBOAM=+$G(^DGCR(399,IBIFN,"U1"))     ; total charges for bill
"RTN","IBCECOB1",104,0)
 S IBNBAL=IBOAM-IBPY
"RTN","IBCECOB1",105,0)
 I IBNBAL'>0 S IBQ=2
"RTN","IBCECOB1",106,0)
 S IBPTNM=$P($G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0)),U) I IBPTNM="" S IBPTNM="UNKNOWN"
"RTN","IBCECOB1",107,0)
 S IBSRVC=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECOB1",108,0)
 ;
"RTN","IBCECOB1",109,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCECOB1",110,0)
 S Z0=$S(IBSRT="B":IBMUT,IBSRT="D":-IBDAY,IBSRT="I":$P(IBINS2,U,2)_"~"_$P(IBINS2,U),IBSRT="M":$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13)),IBSRT="R":-IBPTRSP,IBSRT="P":IBPTNM,IBSRT="S":+IBSRVC,1:+IBDT)
"RTN","IBCECOB1",111,0)
 S:((IBSRT="M")&(Z0="")) Z0="UNKNOWN"   ;USE UNKNOWN IF NOT SET - BI;IB*2.0*432
"RTN","IBCECOB1",112,0)
 ;I $D(^TMP("IBCOBST",$J,Z0,IBIFN)),$P(^TMP("IBCOBST",$J,Z0,IBIFN),U,19)=-1 S MSEFLG=-1   ; If a MSE was previously found for IBIFN, we want to insure that we don't ignore that by resetting the 19th piece to something else.
"RTN","IBCECOB1",113,0)
 I $D(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN)),$P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN),U,19)=-1 S MSEFLG=-1   ; If a MSE was previously found for IBIFN, we want to insure that we don't ignore that by resetting the 19th piece to something else.
"RTN","IBCECOB1",114,0)
 ;
"RTN","IBCECOB1",115,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_IBDA_U_$$HIS(IBIFN)_U_IBDAY_U_IBDT_U_IBQ_U_IB364_U_IBSEQ_U_IBEXPY_U_IBPTRSP_U_MSEFLG
"RTN","IBCECOB1",116,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN,1)=$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16)
"RTN","IBCECOB1",117,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_IBDA_U_$$HIS(IBIFN)_U_IBDAY_U_IBDT_U_IBQ_U_IB364_U_IBSEQ_U_IBEXPY_U_IBPTRSP_U_MSEFLG
"RTN","IBCECOB1",118,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1)=$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16)
"RTN","IBCECOB1",119,0)
 S ^TMP("IBCOBSTX",$J,IBIFN)=IBDA  ;keep track of compiled IBIFN's
"RTN","IBCECOB1",120,0)
 ;
"RTN","IBCECOB1",121,0)
 ; Save some data when there are multiple MRA's on file for this bill
"RTN","IBCECOB1",122,0)
 S IBMRACNT=$$MRACNT^IBCEMU1(IBIFN,$G(IBMRANOT))   ;WCJ IB*2.0*432
"RTN","IBCECOB1",123,0)
 ;I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCECOB1",124,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCECOB1",125,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=IBDENDUP
"RTN","IBCECOB1",126,0)
 I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCECOB1",127,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCECOB1",128,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,4)=IBDENDUP
"RTN","IBCECOB1",129,0)
 Q
"RTN","IBCECOB1",130,0)
 ;
"RTN","IBCECOB1",131,0)
HIS(IBIFN) ; COB history
"RTN","IBCECOB1",132,0)
 N A,B,IBST,IBBIL,IBHIS
"RTN","IBCECOB1",133,0)
 S IBHIS="",A=0 F  S A=$O(^IBM(361.1,"ABS",IBIFN,A)) Q:'A  S B=0 F  S B=$O(^IBM(361.1,"ABS",IBIFN,A,B)) Q:'B  D
"RTN","IBCECOB1",134,0)
 . S IBST=$P($G(^IBM(361.1,B,0)),U,4),IBBIL=$P($G(^DGCR(399,IBIFN,"M1")),U,4+A)   ;WCJ IB*2.0*432 added $G
"RTN","IBCECOB1",135,0)
 . Q:IBBIL=""
"RTN","IBCECOB1",136,0)
 . S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",1:"TERTIARY")_" "_$S(IBST:"MRA",1:"EOB")_" RECEIVED - "_IBBIL
"RTN","IBCECOB1",137,0)
 Q IBHIS
"RTN","IBCECOB1",138,0)
 ;
"RTN","IBCECOB1",139,0)
NMAT ;No COB list
"RTN","IBCECOB1",140,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECOB1",141,0)
 S ^TMP("IBCECOB",$J,1,0)=" "
"RTN","IBCECOB1",142,0)
 S ^TMP("IBCECOB",$J,2,0)="    No "_$S($G(IBMRANOT)=1:"EOB's",1:"MRA's")_" Matching Selection Criteria Were Found"
"RTN","IBCECOB1",143,0)
 Q
"RTN","IBCECOB1",144,0)
 ;
"RTN","IBCECOB1",145,0)
SCRN ;
"RTN","IBCECOB1",146,0)
 N IB,IBCNT,IBDA,IBDIV,IBIFN,IBFORM,IBK,IBPAT,IBS1,IBX,MSEFLG,X,Z
"RTN","IBCECOB1",147,0)
 ;
"RTN","IBCECOB1",148,0)
 S IBCNT=0
"RTN","IBCECOB1",149,0)
 S IBS1=$S(IBSRT="B":"BILLER",IBSRT="D":"Days Since Last Transmission",IBSRT="L":"Date Last "_$S($G(IBMRANOT):"EOB",1:"MRA")_" Received",IBSRT="I":"SECONDARY INSURANCE COMPANY",IBSRT="M":$S($G(IBMRANOT):"EOB",1:"MRA")_" Status",1:"")
"RTN","IBCECOB1",150,0)
 ;
"RTN","IBCECOB1",151,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCECOB1",152,0)
 S IBDIV=""
"RTN","IBCECOB1",153,0)
 F  S IBDIV=$O(^TMP("IBCOBST",$J,IBDIV)) Q:IBDIV=""  D
"RTN","IBCECOB1",154,0)
 . I IBCNT D SET("",IBCNT+1)
"RTN","IBCECOB1",155,0)
 . D SET("Division: "_$$GET1^DIQ(40.8,IBDIV_",",.01,"E"),IBCNT+1)
"RTN","IBCECOB1",156,0)
 . ;
"RTN","IBCECOB1",157,0)
 . ;S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBX)) Q:IBX=""  D
"RTN","IBCECOB1",158,0)
 . S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBDIV,IBX)) Q:IBX=""  D
"RTN","IBCECOB1",159,0)
 .. I IBSRT="B"!(IBSRT="I")!(IBSRT="M") D
"RTN","IBCECOB1",160,0)
 ... I IBCNT D SET("",IBCNT+1)
"RTN","IBCECOB1",161,0)
 ... D SET(IBS1_": "_$P(IBX,"~"),IBCNT+1)
"RTN","IBCECOB1",162,0)
 ... Q
"RTN","IBCECOB1",163,0)
 .. ;
"RTN","IBCECOB1",164,0)
 .. ;S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBX,IBIFN)) Q:'IBIFN  D
"RTN","IBCECOB1",165,0)
 .. S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBDIV,IBX,IBIFN)) Q:'IBIFN  D
"RTN","IBCECOB1",166,0)
 ... ;S IB=$G(^TMP("IBCOBST",$J,IBX,IBIFN))
"RTN","IBCECOB1",167,0)
 ... S IB=$G(^TMP("IBCOBST",$J,IBDIV,IBX,IBIFN))
"RTN","IBCECOB1",168,0)
 ... S Z=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCECOB1",169,0)
 ... S IBPAT=$$LJ^XLFSTR($E($P(Z,U),1,18),18," ")_" "_$E($P(Z,U,9),6,9)
"RTN","IBCECOB1",170,0)
 ... S IBDA=$P(IB,U,10) ;361.1-ien
"RTN","IBCECOB1",171,0)
 ... S IBQ=$P(IB,U,14),IB364=$P(IB,U,15)
"RTN","IBCECOB1",172,0)
 ... ; IB*2.0*447 shorten form column to I for Instutional and P for Professional
"RTN","IBCECOB1",173,0)
 ... ;S IBFORM=$$EXTERNAL^DILFD(399,.19,,+$P(IB,U,6))
"RTN","IBCECOB1",174,0)
 ... ;I +$P(IB,U,6)=2 S IBFORM=1500   ; for space reasons
"RTN","IBCECOB1",175,0)
 ... S IBFORM=$S(+$P(IB,U,6)=2:"P",1:"I")
"RTN","IBCECOB1",176,0)
 ... S IBPTRSP=$P(IB,U,18)
"RTN","IBCECOB1",177,0)
 ... S MSEFLG=$P(IB,U,19)
"RTN","IBCECOB1",178,0)
 ... S IBAMT=$P(IB,U,2)
"RTN","IBCECOB1",179,0)
 ... S IBCNT=IBCNT+1
"RTN","IBCECOB1",180,0)
 ... S X=""
"RTN","IBCECOB1",181,0)
 ... S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBCECOB1",182,0)
 ... ;;;S X=$$SETFLD^VALM1($$BN1^PRCAFN(IBIFN)_$S($P($G(^DGCR(399,IBIFN,"TX")),U,10)=1:"*",1:""),X,"BILL")
"RTN","IBCECOB1",183,0)
 ... S X=$$SETFLD^VALM1($S(MSEFLG=-1:"!",1:" ")_$$BN1^PRCAFN(IBIFN)_$S($P($G(^DGCR(399,IBIFN,"TX")),U,10)=1:"*",1:""),X,"BILL")  ; per IB*2.0*488
"RTN","IBCECOB1",184,0)
 ... S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IB,U)),X,"SERVICE")
"RTN","IBCECOB1",185,0)
 ... S X=$$SETFLD^VALM1(IBPAT,X,"PATNM")
"RTN","IBCECOB1",186,0)
 ... S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBPTRSP,"",2),9," "),X,"PTRESP")
"RTN","IBCECOB1",187,0)
 ... S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBAMT,"",2),9," "),X,"IBAMT")
"RTN","IBCECOB1",188,0)
 ... S X=$$SETFLD^VALM1($E($$TYPE^IBJTLA1($P(IB,U,5)))_"/"_IBFORM,X,"BTYPE")
"RTN","IBCECOB1",189,0)
 ... D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",190,0)
 ... ;
"RTN","IBCECOB1",191,0)
 ... ;For R (Pt Resp), P (Pt Name) and S (Service Date) don't display sub-headers
"RTN","IBCECOB1",192,0)
 ... I "BIMRPS"'[IBSRT D
"RTN","IBCECOB1",193,0)
 .... S Z=$S(IBSRT="L":$$DAT1^IBOUTL(IBX),IBSRT="D":-IBX,1:IBX)
"RTN","IBCECOB1",194,0)
 .... D SET("   "_IBS1_": "_Z,IBCNT)
"RTN","IBCECOB1",195,0)
 .... Q
"RTN","IBCECOB1",196,0)
 ... S X=$$SETSTR^VALM1("Insurers:  "_$P(IB,U,9),"",7,74)
"RTN","IBCECOB1",197,0)
 ... D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",198,0)
 ... ;
"RTN","IBCECOB1",199,0)
 ... ; line 3 of display:  MRA status/date/split claim indicator
"RTN","IBCECOB1",200,0)
 ... S X=$$SETSTR^VALM1($S($G(IBMRANOT):"EOB",1:"MRA")_" Status:  ","",5,13)
"RTN","IBCECOB1",201,0)
 ... ;S IBK=$G(^TMP("IBCOBST",$J,IBX,IBIFN,1))
"RTN","IBCECOB1",202,0)
 ... S IBK=$G(^TMP("IBCOBST",$J,IBDIV,IBX,IBIFN,1))
"RTN","IBCECOB1",203,0)
 ... S X=$$SETSTR^VALM1($P(IBK,U,1),X,18,63)
"RTN","IBCECOB1",204,0)
 ... I $P(IBK,U,2)=2 S X=$$SETSTR^VALM1("** SPLIT CLAIM **",X,63,18)
"RTN","IBCECOB1",205,0)
 ... I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 S X=$$SETSTR^VALM1("** Denied for Duplicate **",X,54,27)
"RTN","IBCECOB1",206,0)
 ... D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",207,0)
 ... ;
"RTN","IBCECOB1",208,0)
 ... ; conditionally update video attributes of line 3
"RTN","IBCECOB1",209,0)
 ... I '$D(IOINHI) D ENS^%ZISS
"RTN","IBCECOB1",210,0)
 ... ; split claim
"RTN","IBCECOB1",211,0)
 ... I $P(IBK,U,2)=2 D CNTRL^VALM10(VALMCNT,63,17,IOINHI,IOINORM)
"RTN","IBCECOB1",212,0)
 ... ; multiple mra's on file
"RTN","IBCECOB1",213,0)
 ... I $P(IBK,U,3)>1 D CNTRL^VALM10(VALMCNT,18,22,IOINHI,IOINORM)
"RTN","IBCECOB1",214,0)
 ... ; Denied for Duplicate - no split claim and single MRA only
"RTN","IBCECOB1",215,0)
 ... I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 D CNTRL^VALM10(VALMCNT,54,26,IOINHI,IOINORM)
"RTN","IBCECOB1",216,0)
 ... Q
"RTN","IBCECOB1",217,0)
 .. Q
"RTN","IBCECOB1",218,0)
 . Q
"RTN","IBCECOB1",219,0)
 ;
"RTN","IBCECOB1",220,0)
 Q
"RTN","IBCECOB1",221,0)
 ;
"RTN","IBCECOB1",222,0)
SET(X,CNT,IBIFN,IBDA,IBQ,IB364,IBX,IB) ;set up list manager screen array
"RTN","IBCECOB1",223,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB1",224,0)
 S ^TMP("IBCECOB",$J,VALMCNT,0)=X
"RTN","IBCECOB1",225,0)
 S ^TMP("IBCECOB",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECOB1",226,0)
 I $G(IBIFN),$G(^TMP("IBCECOB",$J,CNT))="" S ^TMP("IBCECOB",$J,CNT)=VALMCNT_U_IBIFN_U_IB364_U_IBDA_U_IBQ_U_IBX,^TMP("IBCECOB1",$J,CNT)=IB
"RTN","IBCECOB1",227,0)
 Q
"RTN","IBCECOB1",228,0)
 ;
"RTN","IBCECOB1",229,0)
FTYPE(Y) ;type classification
"RTN","IBCECOB1",230,0)
 Q $E($P($G(^IBE(353,Y,0)),U),1,8)
"RTN","IBCECOB1",231,0)
 ;
"RTN","IBCECOB1",232,0)
PTRESPI(IBEOB) ; Function - Computes the Patient's Responsibility based on IBEOB
"RTN","IBCECOB1",233,0)
 ; of 361.1 for Claims/Bills with form type 3=UB
"RTN","IBCECOB1",234,0)
 ; Input IBEOB - a single EOB ien; Required
"RTN","IBCECOB1",235,0)
 ; Output      - Function Returns IBPTRES - Patient Responsibility Amount for the EOB
"RTN","IBCECOB1",236,0)
 ;
"RTN","IBCECOB1",237,0)
 N IBPTRES,IBC,EOBADJ
"RTN","IBCECOB1",238,0)
 S IBPTRES=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",239,0)
 I 'IBEOB Q IBPTRES   ;PTRESPI
"RTN","IBCECOB1",240,0)
 ; filing error
"RTN","IBCECOB1",241,0)
 Q:$D(^IBM(361.1,IBEOB,"ERR")) IBPTRES
"RTN","IBCECOB1",242,0)
 ;
"RTN","IBCECOB1",243,0)
 ; get claim level adjustments
"RTN","IBCECOB1",244,0)
 K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCECOB1",245,0)
 S IBPTRES=$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",246,0)
 ;
"RTN","IBCECOB1",247,0)
 ; get line level adjustments
"RTN","IBCECOB1",248,0)
 S IBC=0 F  S IBC=$O(^IBM(361.1,IBEOB,15,IBC)) Q:'IBC  D
"RTN","IBCECOB1",249,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,15,IBC,1)
"RTN","IBCECOB1",250,0)
 . S IBPTRES=IBPTRES+$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",251,0)
 Q IBPTRES
"RTN","IBCECOB1",252,0)
 ;
"RTN","IBCECOB1",253,0)
ELIG(IBEOB) ; Function to determine if an EOB entry is eligible for
"RTN","IBCECOB1",254,0)
 ; inclusion on the MRA or COB management worklist or not.
"RTN","IBCECOB1",255,0)
 ; IBEOB - ien into file 361.1 (required)
"RTN","IBCECOB1",256,0)
 ; Returns 1 if EOB should appear on the worklist
"RTN","IBCECOB1",257,0)
 ; Returns 0 if EOB should not appear on the worklist
"RTN","IBCECOB1",258,0)
 ; Returns -1 if EOB contains Message Storage Errors
"RTN","IBCECOB1",259,0)
 ;
"RTN","IBCECOB1",260,0)
 NEW ELIG,IB3611,IBIFN
"RTN","IBCECOB1",261,0)
 S ELIG=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",262,0)
 S IB3611=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCECOB1",263,0)
 I $P(IB3611,U,4)'=1 G ELIGX    ; eob type must be correct for this worklist
"RTN","IBCECOB1",264,0)
 I $P(IB3611,U,16)>2 G ELIGX    ; review status must be <= 2
"RTN","IBCECOB1",265,0)
 S IBIFN=+IB3611
"RTN","IBCECOB1",266,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=2 G ELIGX  ; Request MRA bill status
"RTN","IBCECOB1",267,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) S ELIG=$S('$G(IBMRANOT):-1,1:ELIG) G ELIGX         ; filing errors - contains Message Storage Errors
"RTN","IBCECOB1",268,0)
 ;
"RTN","IBCECOB1",269,0)
 S ELIG=1    ; this EOB is eligible for the worklist
"RTN","IBCECOB1",270,0)
 ;
"RTN","IBCECOB1",271,0)
ELIGX ;
"RTN","IBCECOB1",272,0)
 Q ELIG
"RTN","IBCECOB1",273,0)
 ;
"RTN","IBCECOB1",274,0)
WLRMV ; REMOVE FROM EOB WORK LIST
"RTN","IBCECOB1",275,0)
 ; IBDA(IBDA)=IBIFN^IB364^ien of 361.1^user selection seq^user name~duz#
"RTN","IBCECOB1",276,0)
 N IBIFN,IBDA,DIR,DTOUT,DUOUT,DA,DIE,DR,X
"RTN","IBCECOB1",277,0)
 D SEL^IBCECOB2(.IBDA,1)
"RTN","IBCECOB1",278,0)
 S VALMBCK="R"
"RTN","IBCECOB1",279,0)
 S IBDA=$O(IBDA(0)) I 'IBDA Q
"RTN","IBCECOB1",280,0)
 S IBIFN=$P(IBDA(IBDA),U,1) I 'IBIFN Q
"RTN","IBCECOB1",281,0)
 S DIR("A",1)=""
"RTN","IBCECOB1",282,0)
 S DIR("A",2)="    Bill #: "_$$GET1^DIQ(399,IBIFN_", ",.01,"E")
"RTN","IBCECOB1",283,0)
 S DIR("A",3)="   Patient: "_$$GET1^DIQ(399,IBIFN_", ",.02,"E")
"RTN","IBCECOB1",284,0)
 S DIR("A",4)=" Bill Type: "_$$GET1^DIQ(399,IBIFN_", ",.05,"E")
"RTN","IBCECOB1",285,0)
 S DIR("A",5)="Bill Dates: "_$$GET1^DIQ(399,IBIFN_", ",151,"E")_" - "_$$GET1^DIQ(399,IBIFN_", ",152,"E")
"RTN","IBCECOB1",286,0)
 S DIR("A",6)=" "
"RTN","IBCECOB1",287,0)
 S DIR("A")="Are you sure remove this claim from the worklist? "
"RTN","IBCECOB1",288,0)
 S DIR("B")="NO"
"RTN","IBCECOB1",289,0)
 S DIR(0)="YA" D ^DIR K DIR
"RTN","IBCECOB1",290,0)
 I $D(DTOUT)!$D(DUOUT)!'Y Q
"RTN","IBCECOB1",291,0)
 ;FLAG IF USER ANSWERS YES
"RTN","IBCECOB1",292,0)
 S X=$$WLRMVF^IBCECOB1(IBIFN,"RM")
"RTN","IBCECOB1",293,0)
 D BLD^IBCECOB1
"RTN","IBCECOB1",294,0)
 Q
"RTN","IBCECOB1",295,0)
 ;
"RTN","IBCECOB1",296,0)
WLRMVF(IBIFN,METHOD,BKFL) ;
"RTN","IBCECOB1",297,0)
 ; BFKL = 1 means background process, remove NOT initiated by a user
"RTN","IBCECOB1",298,0)
 N SOC,SOCCNT,SOCLIST,STATUS,IBDUZ
"RTN","IBCECOB1",299,0)
 S STATUS=0
"RTN","IBCECOB1",300,0)
 Q:'$G(DUZ) STATUS_"^MISSING DUZ"
"RTN","IBCECOB1",301,0)
 Q:'$G(IBIFN) STATUS_"^MISSING IBIFN"
"RTN","IBCECOB1",302,0)
 Q:'$D(^DGCR(399,IBIFN)) STATUS_"^INVALID IBIFN"
"RTN","IBCECOB1",303,0)
 ; if this is a background process, set user who removed to AUTHORIZER,IB REG
"RTN","IBCECOB1",304,0)
 S IBDUZ=$S($G(BKFL)=1:$$IBREG^IBCAPP(),1:$G(DUZ))
"RTN","IBCECOB1",305,0)
 ; GET DICTIONARY SET OF CODES.
"RTN","IBCECOB1",306,0)
 ; SOC("POINTER")="RM:REMOVE ACTION;PC:PROCESS COB ACTION;CL:CLONE ACTION;"
"RTN","IBCECOB1",307,0)
 D FIELD^DID(399,38,"","POINTER","SOC")
"RTN","IBCECOB1",308,0)
 S SOC=$G(SOC("POINTER"))
"RTN","IBCECOB1",309,0)
 F SOCCNT=1:1:$L(SOC,";")-1 S SOCLIST($P($P(SOC,";",SOCCNT),":",1))=""
"RTN","IBCECOB1",310,0)
 Q:$D(SOCLIST(METHOD))=0 STATUS_"^INVALID METHOD"
"RTN","IBCECOB1",311,0)
 S DA=IBIFN
"RTN","IBCECOB1",312,0)
 S DIE="^DGCR(399,"
"RTN","IBCECOB1",313,0)
 S DR="35////4"                ; AUTO PROCESS, NO LONGER ON WORKLIST
"RTN","IBCECOB1",314,0)
 S:IBDUZ'=-1 DR=DR_";"_"37////"_IBDUZ    ; WHO REMOVED FROM WORKLIST
"RTN","IBCECOB1",315,0)
 S DR=DR_";"_"38////"_METHOD   ; METHOD USED TO REMOVE FROM WORKLIST
"RTN","IBCECOB1",316,0)
 S DR=DR_";"_"39///NOW"        ; DATE STAMP WHEN REMOVED FOR WORKLIST
"RTN","IBCECOB1",317,0)
 D ^DIE
"RTN","IBCECOB1",318,0)
 S STATUS=1
"RTN","IBCECOB1",319,0)
 Q STATUS
"RTN","IBCECOB2")
0^166^B183699434^B183092638
"RTN","IBCECOB2",1,0)
IBCECOB2 ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,433,432,447,488,516**;21-MAR-1994;Build 123
"RTN","IBCECOB2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECOB2",4,0)
 ;
"RTN","IBCECOB2",5,0)
EDI ;history detail display
"RTN","IBCECOB2",6,0)
 N IBIFN,IBDA
"RTN","IBCECOB2",7,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",8,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",9,0)
 D EDI1(IBIFN)
"RTN","IBCECOB2",10,0)
 S VALMBCK="R"
"RTN","IBCECOB2",11,0)
 Q
"RTN","IBCECOB2",12,0)
 ;
"RTN","IBCECOB2",13,0)
EDI1(IBIFN) ;
"RTN","IBCECOB2",14,0)
 N DFN
"RTN","IBCECOB2",15,0)
 Q:'IBIFN
"RTN","IBCECOB2",16,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",17,0)
 D EN^VALM("IBJT EDI STATUS")
"RTN","IBCECOB2",18,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",19,0)
 Q
"RTN","IBCECOB2",20,0)
 ;
"RTN","IBCECOB2",21,0)
EDI2(IBIFN) ;
"RTN","IBCECOB2",22,0)
 N DFN
"RTN","IBCECOB2",23,0)
 Q:'IBIFN
"RTN","IBCECOB2",24,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",25,0)
 D EN^VALM("IBJT EDI STATUS ALONE")
"RTN","IBCECOB2",26,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",27,0)
 Q
"RTN","IBCECOB2",28,0)
 ;
"RTN","IBCECOB2",29,0)
CSA ;claims status awaiting resolution
"RTN","IBCECOB2",30,0)
 N IBDAX
"RTN","IBCECOB2",31,0)
 D EN^IBCECSA
"RTN","IBCECOB2",32,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECOB2",33,0)
 S VALMBCK="R"
"RTN","IBCECOB2",34,0)
 Q
"RTN","IBCECOB2",35,0)
 ;
"RTN","IBCECOB2",36,0)
RVEOB ;Review EOB
"RTN","IBCECOB2",37,0)
 D FULL^VALM1 W !
"RTN","IBCECOB2",38,0)
 N IBDA,IBIFN,IBCMT,IBSEL
"RTN","IBCECOB2",39,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",40,0)
 S IBSEL=+$O(IBDA(0))
"RTN","IBCECOB2",41,0)
 S IBDA=$G(IBDA(IBSEL))
"RTN","IBCECOB2",42,0)
 S IBIFN=$P(IBDA,U),IBDA=$P(IBDA,U,3)
"RTN","IBCECOB2",43,0)
 I 'IBIFN G VEOBQ
"RTN","IBCECOB2",44,0)
 S IBCMT=$G(^TMP("IBCECOB1",$J,IBSEL))
"RTN","IBCECOB2",45,0)
 I IBCMT'="" D EN^VALM("IBCEM MRA REVIEW")
"RTN","IBCECOB2",46,0)
VEOBQ K ^TMP("IBCECOC",$J)
"RTN","IBCECOB2",47,0)
 S VALMBCK="R"
"RTN","IBCECOB2",48,0)
 Q
"RTN","IBCECOB2",49,0)
 ;
"RTN","IBCECOB2",50,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECOB2",51,0)
 N IBDA,IBIFN
"RTN","IBCECOB2",52,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",53,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(IBDA))
"RTN","IBCECOB2",54,0)
 I IBDA="" G TPJIQ
"RTN","IBCECOB2",55,0)
 D TPJI1(IBIFN)
"RTN","IBCECOB2",56,0)
TPJIQ S VALMBCK="R"
"RTN","IBCECOB2",57,0)
 Q
"RTN","IBCECOB2",58,0)
 ;
"RTN","IBCECOB2",59,0)
TPJI1(IBIFN) ;
"RTN","IBCECOB2",60,0)
 N DFN,IBNOTPJI
"RTN","IBCECOB2",61,0)
 Q:'IBIFN
"RTN","IBCECOB2",62,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2),IBNOTPJI=1
"RTN","IBCECOB2",63,0)
 D EN^VALM("IBJT CLAIM INFO")
"RTN","IBCECOB2",64,0)
 K:$D(IBFASTXT) IBFASTXT
"RTN","IBCECOB2",65,0)
 Q
"RTN","IBCECOB2",66,0)
 ;
"RTN","IBCECOB2",67,0)
PBILL ;Print bill
"RTN","IBCECOB2",68,0)
 N IBIFN,IBDA,IBRESUB
"RTN","IBCECOB2",69,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",70,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA))
"RTN","IBCECOB2",71,0)
 I IBDA="" G PBOUT
"RTN","IBCECOB2",72,0)
 S IBRESUB=$$RESUB^IBCECSA4(IBIFN,1,"P")
"RTN","IBCECOB2",73,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PBOUT
"RTN","IBCECOB2",74,0)
 I IBRESUB=2 D  G PBOUT
"RTN","IBCECOB2",75,0)
 . N IB364
"RTN","IBCECOB2",76,0)
 . S IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",77,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",78,0)
 D PBILL1(IBIFN)
"RTN","IBCECOB2",79,0)
PBOUT S VALMBCK="R"
"RTN","IBCECOB2",80,0)
 Q
"RTN","IBCECOB2",81,0)
 ;
"RTN","IBCECOB2",82,0)
PMRA ;Print MRA
"RTN","IBCECOB2",83,0)
 N IBIFN,IBDA,IBDAX
"RTN","IBCECOB2",84,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",85,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IBDAX=$P(IBDA(+IBDA),U,3)
"RTN","IBCECOB2",86,0)
 G:'IBIFN PRMQ
"RTN","IBCECOB2",87,0)
 I '$G(IBMRANOT),$D(^IBM(361.1,IBDAX,"ERR")),'$$WARNMSE G PRMQ        ; Claim contains Message Storage Errors
"RTN","IBCECOB2",88,0)
 D MRA^IBCEMRAA(.IBIFN)
"RTN","IBCECOB2",89,0)
PRMQ S VALMBCK="R"
"RTN","IBCECOB2",90,0)
 Q
"RTN","IBCECOB2",91,0)
PBILL1(IBIFN) ;
"RTN","IBCECOB2",92,0)
 N IBAC1,IBAC,DFN
"RTN","IBCECOB2",93,0)
 Q:'IBIFN
"RTN","IBCECOB2",94,0)
 S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",95,0)
 S IBAC=4,IBAC1=1
"RTN","IBCECOB2",96,0)
 D 4^IBCB1
"RTN","IBCECOB2",97,0)
 D FULL^VALM1,PAUSE^VALM1
"RTN","IBCECOB2",98,0)
 Q
"RTN","IBCECOB2",99,0)
 ;
"RTN","IBCECOB2",100,0)
CANCEL ;Cancel bill
"RTN","IBCECOB2",101,0)
 ; IBDA(IBDA)=IBIFN^IB364^ien of 361.1^user selection seq^user name~duz#
"RTN","IBCECOB2",102,0)
 ;
"RTN","IBCECOB2",103,0)
 N IBIFN,IBDA,IB364,IBEOBIFN,X,IBDENCT
"RTN","IBCECOB2",104,0)
 ;
"RTN","IBCECOB2",105,0)
 ; Check for security key
"RTN","IBCECOB2",106,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECOB2",107,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",108,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",109,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",110,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",111,0)
 . Q
"RTN","IBCECOB2",112,0)
 ;
"RTN","IBCECOB2",113,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",114,0)
 S IBDA=$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=$P($G(IBDA(+IBDA)),U,2)
"RTN","IBCECOB2",115,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",116,0)
 ;
"RTN","IBCECOB2",117,0)
 ; IB*2.0*432 - if not mra, only allow cancel of denied claims.  If no EOB, check AR status instead
"RTN","IBCECOB2",118,0)
 I 'IBEOBIFN,$G(IBMRANOT)=1,$P($$ARSTATA^IBJTU4(IBIFN),U)="COLLECTED/CLOSED" D  G CANCELQ
"RTN","IBCECOB2",119,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",120,0)
 . W !!,*7,"You can only cancel denied claims.  This claim is in a COLLECTED/CLOSED status"
"RTN","IBCECOB2",121,0)
 . W !,"Use Remove Action to remove claim from this worklist."
"RTN","IBCECOB2",122,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",123,0)
 . Q
"RTN","IBCECOB2",124,0)
 ;
"RTN","IBCECOB2",125,0)
 ; IB*2.0*432 - if not mra, only allow cancel of claims with multiple EOBS if none have processed.
"RTN","IBCECOB2",126,0)
 I $G(IBMRANOT)=1,'$$DENCHK(IBIFN,.IBDENCT),$G(IBDENCT)>1 D  G CANCELQ
"RTN","IBCECOB2",127,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",128,0)
 . W !!,*7,"Multiple EOBs exist for this claim and at least one has EOB status of PROCESSED."
"RTN","IBCECOB2",129,0)
 . W !,"Use Remove Action to remove claim from this worklist."
"RTN","IBCECOB2",130,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",131,0)
 . Q
"RTN","IBCECOB2",132,0)
 ;
"RTN","IBCECOB2",133,0)
 ; IB*2.0*432 - if not mra, only allow cancel of denied claims
"RTN","IBCECOB2",134,0)
 I IBEOBIFN,$G(IBMRANOT)=1,$P($G(^IBM(361.1,IBEOBIFN,0)),U,13)'=2 D  G CANCELQ
"RTN","IBCECOB2",135,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",136,0)
 . W !!?5,*7,"You can only cancel denied claims."
"RTN","IBCECOB2",137,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",138,0)
 . Q
"RTN","IBCECOB2",139,0)
 ;
"RTN","IBCECOB2",140,0)
 I IBDA D
"RTN","IBCECOB2",141,0)
 . I '$$LOCK^IBCEU0(361.1,IBEOBIFN) Q
"RTN","IBCECOB2",142,0)
 . D CANCEL^IBCEM3(.IBDA,IBIFN,IB364)
"RTN","IBCECOB2",143,0)
 . D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",144,0)
 S VALMBCK="R"
"RTN","IBCECOB2",145,0)
 ;
"RTN","IBCECOB2",146,0)
 ; for non-MRA claims cancelled from worklist, set field 38
"RTN","IBCECOB2",147,0)
 I $G(IBMRANOT)=1,$P($G(^DGCR(399,IBIFN,0)),U,13)=7 S X=$$WLRMVF^IBCECOB1($S($G(IBIFN)'="":IBIFN,1:+$G(IBDA(IBDA))),"CA")
"RTN","IBCECOB2",148,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",149,0)
CANCELQ Q
"RTN","IBCECOB2",150,0)
 ;
"RTN","IBCECOB2",151,0)
CRD ; Correct Rejected/Denied claim protocol action
"RTN","IBCECOB2",152,0)
 N IBCNCRD
"RTN","IBCECOB2",153,0)
 S IBCNCRD=1
"RTN","IBCECOB2",154,0)
CLONE ; 'Copy/cancel bill' protocol action
"RTN","IBCECOB2",155,0)
 N IBDA,IBQ,IBEOBIFN,IBKEY,X,IBDENCT
"RTN","IBCECOB2",156,0)
 ;
"RTN","IBCECOB2",157,0)
 ; Check for security key
"RTN","IBCECOB2",158,0)
 ;IB*2.0*516/TAZ - Remove check for IB CLON
"RTN","IBCECOB2",159,0)
 ;I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECOB2",160,0)
 ;S IBKEY=$S($G(IBCNCRD)=1:"IB AUTHORIZE",1:"IB CLON")
"RTN","IBCECOB2",161,0)
 S IBKEY="IB AUTHORIZE"
"RTN","IBCECOB2",162,0)
 I '$$KCHK^XUSRB(IBKEY) D  G CLONEQ
"RTN","IBCECOB2",163,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",164,0)
 . ;W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECOB2",165,0)
 . ;W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECOB2",166,0)
 . W !!?5,"You must hold the "_IBKEY_" security key to access this function."
"RTN","IBCECOB2",167,0)
 . W !?5,"Please see your manager."
"RTN","IBCECOB2",168,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",169,0)
 . Q
"RTN","IBCECOB2",170,0)
 ;
"RTN","IBCECOB2",171,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",172,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCECOB2",173,0)
 I IBDA="" G CLONEQ
"RTN","IBCECOB2",174,0)
 ;
"RTN","IBCECOB2",175,0)
 ; IB*2.0*432 - if not mra, only allow cancel of claims with multiple EOBS if none have processed.
"RTN","IBCECOB2",176,0)
 I $G(IBMRANOT)=1,'$$DENCHK(+IBDA(IBDA),.IBDENCT),$G(IBDENCT)>1 D  G CANCELQ
"RTN","IBCECOB2",177,0)
 . D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECOB2",178,0)
 . W !!,*7,"Multiple EOBs exist for this claim and at least one has EOB status of PROCESSED."
"RTN","IBCECOB2",179,0)
 . W !,"Use Remove Action to remove claim from this worklist."
"RTN","IBCECOB2",180,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",181,0)
 . Q
"RTN","IBCECOB2",182,0)
 ;
"RTN","IBCECOB2",183,0)
 S IBEOBIFN=$P($G(IBDA(+IBDA)),U,3)
"RTN","IBCECOB2",184,0)
 I '$$LOCK^IBCEU0(361.1,IBEOBIFN) G CLONEQ
"RTN","IBCECOB2",185,0)
 D COPYCLON(+$G(IBDA(IBDA)),$P($G(IBDA(+IBDA)),U,2),.IBQ)
"RTN","IBCECOB2",186,0)
 D UNLOCK^IBCEU0(361.1,IBEOBIFN)
"RTN","IBCECOB2",187,0)
 ;
"RTN","IBCECOB2",188,0)
 ; for non-MRA claims cloned or corrected from worklist, set field 38
"RTN","IBCECOB2",189,0)
 I $G(IBMRANOT)=1,$G(IBQ)'="" S X=$$WLRMVF^IBCECOB1(+$G(IBDA(IBDA)),$S($G(IBCNCRD)=1:"CR",1:"CL"))
"RTN","IBCECOB2",190,0)
 ;
"RTN","IBCECOB2",191,0)
CLONEQ ;
"RTN","IBCECOB2",192,0)
 S VALMBCK="R"
"RTN","IBCECOB2",193,0)
 D:$G(IBQ)'="" BLD^IBCECOB1
"RTN","IBCECOB2",194,0)
 Q
"RTN","IBCECOB2",195,0)
 ;
"RTN","IBCECOB2",196,0)
COPYCLON(IBIFN,IB364,IBQ) ; Generic entry point for clone a bill from EDI processing
"RTN","IBCECOB2",197,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",198,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",199,0)
 ; IBQ = If bill is not cancelled, this is returned as null
"RTN","IBCECOB2",200,0)
 ;        - pass by reference -
"RTN","IBCECOB2",201,0)
 ;
"RTN","IBCECOB2",202,0)
 N IBQUIT,IBCCCC,IBHV,Y,IBCAN,IBCE,IBDA,IBCNCOPY
"RTN","IBCECOB2",203,0)
 ;I '$$CANCKS^IBCEM3("CC",IBIFN) S IBQ="" G CCQ
"RTN","IBCECOB2",204,0)
 I $G(IBCNCRD)'=1,'$$CANCKS^IBCEM3("CC",IBIFN) S IBQ="" G CCQ
"RTN","IBCECOB2",205,0)
 ;
"RTN","IBCECOB2",206,0)
 ;S IBCAN=2,IBCE("EDI")=1,Y=IBIFN,IBCCCC=0,IBHV("IBIFN")=IBIFN,IBHV("IBIFN1")="",IBCNCOPY=1
"RTN","IBCECOB2",207,0)
 S IBCAN=2,IBCE("EDI")=1,Y=IBIFN,IBCCCC=0,IBHV("IBIFN")=IBIFN,IBHV("IBIFN1")=""
"RTN","IBCECOB2",208,0)
 I $G(IBCNCRD)'=1 S IBCNCOPY=1 D ^IBCCC
"RTN","IBCECOB2",209,0)
 I $G(IBCNCRD)=1 D CRD^IBCCC
"RTN","IBCECOB2",210,0)
 ;D ^IBCCC
"RTN","IBCECOB2",211,0)
 S IBIFN=IBHV("IBIFN")
"RTN","IBCECOB2",212,0)
 K IBCE("EDI") S IBQ=1
"RTN","IBCECOB2",213,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=7 S IBQ=""
"RTN","IBCECOB2",214,0)
 I IBHV("IBIFN1") D
"RTN","IBCECOB2",215,0)
 . N IBU
"RTN","IBCECOB2",216,0)
 . S IBU="R"
"RTN","IBCECOB2",217,0)
 . S IBNIEN=+IBHV("IBIFN1")
"RTN","IBCECOB2",218,0)
 . I "23"'[$P($G(^DGCR(399,+IBHV("IBIFN1"),0)),U,13) D
"RTN","IBCECOB2",219,0)
 .. W:'$G(IBCEAUTO) !,*7,"Please note: the new bill was not AUTHORIZED.",!,"It can only be accessed now via the normal, non-EDI functions.",!,"Status of new bill is ",$$EXPAND^IBTRE(399,.13,$P(^DGCR(399,IBHV("IBIFN1"),0),U,13)) S IBU="C"
"RTN","IBCECOB2",220,0)
 . D UPDEDI^IBCEM(IB364,IBU)
"RTN","IBCECOB2",221,0)
 ;
"RTN","IBCECOB2",222,0)
 I '$G(IBCEAUTO) D PAUSE^VALM1
"RTN","IBCECOB2",223,0)
CCQ Q
"RTN","IBCECOB2",224,0)
 ;
"RTN","IBCECOB2",225,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECOB2",226,0)
 N VALMY,IBDA,Z,IBIFN,IBIFNH,IB364,IBCE,IBNCN
"RTN","IBCECOB2",227,0)
 ;I '$P($G(^IBE(350.9,1,8)),U,12) D  G PROQ
"RTN","IBCECOB2",228,0)
 I '$P($G(^IBE(350.9,1,8)),U,12),$G(IBMRANOT)'=1 D  G PROQ
"RTN","IBCECOB2",229,0)
 . D FULL^VALM1
"RTN","IBCECOB2",230,0)
 . W !!?5,"MRA's may not be processed at this time."
"RTN","IBCECOB2",231,0)
 . W !?5,"The IB site parameter ""Allow MRA Processing?"" is set to NO."
"RTN","IBCECOB2",232,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",233,0)
 . Q
"RTN","IBCECOB2",234,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",235,0)
 S Z=$O(IBDA(0)),Z=$G(IBDA(+Z)) G:'Z PROQ
"RTN","IBCECOB2",236,0)
 S IBIFN=$P(Z,U),IB364=$P(Z,U,2),IBDA=$P(Z,U,3),IBIFNH=IBIFN
"RTN","IBCECOB2",237,0)
 I 'IBIFN G PROQ
"RTN","IBCECOB2",238,0)
 I '$G(IBMRANOT),$D(^IBM(361.1,IBDA,"ERR")),'$$WARNMSE G PROQ        ; Claim contains Message Storage Errors
"RTN","IBCECOB2",239,0)
 I '$$LOCK^IBCEU0(361.1,IBDA) G PROQ
"RTN","IBCECOB2",240,0)
 D COBCOPY(IBIFN,IB364,2,IBDA,"BLD^IBCECOB1",.IBNCN)
"RTN","IBCECOB2",241,0)
 D UNLOCK^IBCEU0(361.1,IBDA)
"RTN","IBCECOB2",242,0)
 ;
"RTN","IBCECOB2",243,0)
 ; for non-MRA claims copied from work list, set field 38
"RTN","IBCECOB2",244,0)
 I $G(IBMRANOT)=1,$G(IBNCN)'="",($G(IBNCN)'=$G(IBIFN)) D
"RTN","IBCECOB2",245,0)
 .S X=$$WLRMVF^IBCECOB1($G(IBIFN),"PC")
"RTN","IBCECOB2",246,0)
 .;I $P($G(^DGCR(399,+IBNCN,"S")),U,9)'=1 D
"RTN","IBCECOB2",247,0)
 .;.W:'$G(IBCEAUTO) !,*7,"Please note: the new bill was not AUTHORIZED.",!,"It can only be accessed now via the normal, non-EDI functions.",!,"Status of new bill is ",$$EXPAND^IBTRE(399,.13,$P(^DGCR(399,IBNCN,0),U,13))
"RTN","IBCECOB2",248,0)
 .;.D PAUSE^VALM1
"RTN","IBCECOB2",249,0)
 .D:$G(IBMRANOT)=1 BLD^IBCECOB1
"RTN","IBCECOB2",250,0)
 .Q
"RTN","IBCECOB2",251,0)
 ;
"RTN","IBCECOB2",252,0)
PROQ S VALMBCK="R"
"RTN","IBCECOB2",253,0)
 Q
"RTN","IBCECOB2",254,0)
 ;
"RTN","IBCECOB2",255,0)
COBCOPY(IBIFN,IB364,IBFROM,IBIEN,IBBLD,IBNCN) ; Generic entry point for EDI COB copy
"RTN","IBCECOB2",256,0)
 ; IBIFN = original bill ien
"RTN","IBCECOB2",257,0)
 ; IB364 = the ien of the transmission bill entry in file 364
"RTN","IBCECOB2",258,0)
 ; IBFROM = 1 if called from CSA, 2 if called from COB/EOB processing
"RTN","IBCECOB2",259,0)
 ; IBIEN = entry in 361 (IBFROM=1) or 361.1 (IBFROM=2) being processed
"RTN","IBCECOB2",260,0)
 ; IBBLD = the name of the entrypoint that will rebuild the display
"RTN","IBCECOB2",261,0)
 ; IBNCN = by reference, returns the new claim ien if user completed the Copy process
"RTN","IBCECOB2",262,0)
 ;
"RTN","IBCECOB2",263,0)
 N IBCBASK,IBCBCOPY,IBCAN,IBIFNH,IBNSTAT,IBOSTAT,IBPRCOB,IBSECHK,IBLMVAR,IBAC,IBMRAIEN,IBDA,IBAUTO
"RTN","IBCECOB2",264,0)
 N IBCOB,IBCOBIL,IBCOBN,IBINS,IBINSN,IBINSOLD,IBMRAIO,IBMRAO,IBNMOLD,IBQUIT
"RTN","IBCECOB2",265,0)
 S (IBCBASK,IBCBCOPY,IBCAN,IBAUTO)=1,(IBPRCOB,IBSECHK)=0,(IBMRAIEN,IBDA)=IBIEN
"RTN","IBCECOB2",266,0)
 I $G(IBMRANOT)'=1,'IB364!'IBIFN W !,"Transmission record is missing for this bill" D PAUSE^VALM1 G COBCOPX
"RTN","IBCECOB2",267,0)
 ;
"RTN","IBCECOB2",268,0)
 S IBIFNH=IBIFN
"RTN","IBCECOB2",269,0)
 I IBFROM=2 S IBPRCOB=1
"RTN","IBCECOB2",270,0)
 ; IB*2.0*447 Check PR to include excess and percentages where applicable
"RTN","IBCECOB2",271,0)
 ;I $S($G(IBMRANOT)=1:$$TOT(IBIFN)'>0,1:$$PREOBTOT^IBCEU0(IBIFN,$G(IBMRANOT))'>0) D  G COBCOPX
"RTN","IBCECOB2",272,0)
 I $$TOT(IBIFN,$G(IBMRANOT))'>0 D  G COBCOPX
"RTN","IBCECOB2",273,0)
 . D FULL^VALM1
"RTN","IBCECOB2",274,0)
 . W !!?5,"There is no "_$S($G(IBMRANOT)=1:"balance remaining",1:"patient responsibility and/or excess charges")_" for this claim."
"RTN","IBCECOB2",275,0)
 . W !?5,"This claim may not be processed."
"RTN","IBCECOB2",276,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",277,0)
 . Q
"RTN","IBCECOB2",278,0)
 ;
"RTN","IBCECOB2",279,0)
 I $G(IBDA)'="",$P($G(^IBM(361.1,IBDA,0)),U,16)="1.5" D  G COBCOPX
"RTN","IBCECOB2",280,0)
 . W !!,"This claim has already been processed as a sec/tert claim."
"RTN","IBCECOB2",281,0)
 . W !,"You will need to complete the authorization process for this claim."
"RTN","IBCECOB2",282,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",283,0)
 . D AUTH
"RTN","IBCECOB2",284,0)
 . Q
"RTN","IBCECOB2",285,0)
 ;
"RTN","IBCECOB2",286,0)
 ; If multiple EOBs and one is processed, make sure collected closed.
"RTN","IBCECOB2",287,0)
 I $G(IBMRANOT),$$CCCHK(IBIFN)<0 D  G COBCOPX
"RTN","IBCECOB2",288,0)
 . W !,"Multiple EOBs exist for this claim and at least one has EOB status of PROCESSED."
"RTN","IBCECOB2",289,0)
 . W !,"Claim cannot be sent to next payer until AR status is Collected/Closed."
"RTN","IBCECOB2",290,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",291,0)
 . Q
"RTN","IBCECOB2",292,0)
 ;
"RTN","IBCECOB2",293,0)
 ; Get out if no next payer
"RTN","IBCECOB2",294,0)
 I '$P($G(^DGCR(399,IBIFN,"I"_($$COBN^IBCEF(IBIFN)+1))),U,1) D  G COBCOPX
"RTN","IBCECOB2",295,0)
 . W !,"There is no next payer for this bill"
"RTN","IBCECOB2",296,0)
 . D PAUSE^VALM1
"RTN","IBCECOB2",297,0)
 . Q
"RTN","IBCECOB2",298,0)
 ;
"RTN","IBCECOB2",299,0)
 D DSPRB^IBCCCB0(IBIFN)        ; display related bills
"RTN","IBCECOB2",300,0)
 S IBCE("EDI")=1
"RTN","IBCECOB2",301,0)
 D CHKB^IBCCCB                 ; process COB, create secondary bill
"RTN","IBCECOB2",302,0)
 S IBNCN=$G(IBCE("EDI","NEW")) ; get new claim ien
"RTN","IBCECOB2",303,0)
 S IBIFN=IBIFNH
"RTN","IBCECOB2",304,0)
 I IBSECHK G COBCOPX
"RTN","IBCECOB2",305,0)
 ;
"RTN","IBCECOB2",306,0)
 ; if user came from CBW, no need to view and authorize a 2nd time (already happens in IBCCCB)
"RTN","IBCECOB2",307,0)
 Q:$G(IBMRANOT)=1
"RTN","IBCECOB2",308,0)
 S IBV=1 D VIEW^IBCB2          ; display billing screens
"RTN","IBCECOB2",309,0)
 D AUTH                        ; authorize bill
"RTN","IBCECOB2",310,0)
COBCOPX ;
"RTN","IBCECOB2",311,0)
 Q
"RTN","IBCECOB2",312,0)
 ;
"RTN","IBCECOB2",313,0)
AUTH ; procedure to authorize the claim and refresh the screen
"RTN","IBCECOB2",314,0)
 K ^UTILITY($J) S IBAC=1,IBQUIT=0 D 3^IBCB1
"RTN","IBCECOB2",315,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",316,0)
 I $P($G(^IBM(361.1,IBMRAIEN,0)),U,16)=3 D UPDEDI^IBCEM(IB364,"Z")
"RTN","IBCECOB2",317,0)
 I $G(IBBLD)'="" D @IBBLD
"RTN","IBCECOB2",318,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",319,0)
AUTHX ;
"RTN","IBCECOB2",320,0)
 Q
"RTN","IBCECOB2",321,0)
 ;
"RTN","IBCECOB2",322,0)
RES ;Resubmit bill by print
"RTN","IBCECOB2",323,0)
 N IBDA,IBIFN,IB364
"RTN","IBCECOB2",324,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",325,0)
 S IBDA=+$O(IBDA(0)),IBIFN=+$G(IBDA(+IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2)
"RTN","IBCECOB2",326,0)
 I 'IBIFN G RESQ
"RTN","IBCECOB2",327,0)
 D PRINT1^IBCEM03(IBIFN,.IBDA,IB364)
"RTN","IBCECOB2",328,0)
 D PAUSE^VALM1
"RTN","IBCECOB2",329,0)
 I $G(IBDA)'="" D BLD^IBCECOB1
"RTN","IBCECOB2",330,0)
RESQ S VALMBCK="R"
"RTN","IBCECOB2",331,0)
 Q
"RTN","IBCECOB2",332,0)
 ;
"RTN","IBCECOB2",333,0)
EBI ;View an unauthorized transmitted bill
"RTN","IBCECOB2",334,0)
 N IBFLG,IBDA,IBIFN,IB364,DFN
"RTN","IBCECOB2",335,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECOB2",336,0)
 D FULL^VALM1
"RTN","IBCECOB2",337,0)
 ;
"RTN","IBCECOB2",338,0)
 D SEL(.IBDA,1)
"RTN","IBCECOB2",339,0)
 S IBDA=+$O(IBDA(""))
"RTN","IBCECOB2",340,0)
 S IBIFN=+$G(IBDA(IBDA)),IB364=+$P($G(IBDA(IBDA)),U,2),DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCECOB2",341,0)
 G:'IBIFN EDITQ
"RTN","IBCECOB2",342,0)
 S IBV=1 D VIEW^IBCB2
"RTN","IBCECOB2",343,0)
 I '$D(IOUON)!'$D(IORVON) D ENS^%ZISS
"RTN","IBCECOB2",344,0)
 D BLD^IBCECOB1
"RTN","IBCECOB2",345,0)
EDITQ S VALMBCK="R"
"RTN","IBCECOB2",346,0)
 Q
"RTN","IBCECOB2",347,0)
 ;
"RTN","IBCECOB2",348,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECOB2",349,0)
 ; IBDA = array returned if selections made
"RTN","IBCECOB2",350,0)
 ;    IBDA(n)=ien of bill selected (file 399)
"RTN","IBCECOB2",351,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECOB2",352,0)
 N IB
"RTN","IBCECOB2",353,0)
 K IBDA
"RTN","IBCECOB2",354,0)
 D FULL^VALM1
"RTN","IBCECOB2",355,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECOB2",356,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IBDA(IBDA)=$P($G(^TMP("IBCECOB",$J,+IBDA)),U,2,6)
"RTN","IBCECOB2",357,0)
 Q
"RTN","IBCECOB2",358,0)
 ;
"RTN","IBCECOB2",359,0)
EXIT ; Exit out of COB
"RTN","IBCECOB2",360,0)
 D FASTEXIT^IBCEFG4
"RTN","IBCECOB2",361,0)
 I $G(IBFASTXT)=1 S IBFASTXT=5
"RTN","IBCECOB2",362,0)
 Q
"RTN","IBCECOB2",363,0)
 ;
"RTN","IBCECOB2",364,0)
TOT(IBIFN,IBMRANOT) ; calculate if any balance remaining on non-MRA claim
"RTN","IBCECOB2",365,0)
 ; IBIFN = claim ien
"RTN","IBCECOB2",366,0)
 ; IBMRANOT = MRW/CBW flag (1=user came from CBW)  added with IB*2.0*447
"RTN","IBCECOB2",367,0)
 N IBPRTOT,IBBLD,IBCBN,IBU2
"RTN","IBCECOB2",368,0)
 I $G(IBMRANOT)'=1 Q $S($$MSEDT^IBCEMU4(IBIFN)'="":$$MSPRE^IBCEMU4(IBIFN),1:$$PREOBTOT^IBCEU0(IBIFN))
"RTN","IBCECOB2",369,0)
 ; total up the payer paid amounts, if this is a 2ndary claim, be sure to account for what the primary paid also
"RTN","IBCECOB2",370,0)
 S IBU2=$G(^DGCR(399,IBIFN,"U2")),IBCBN=$$COBN^IBCEF(IBIFN),IBPRTOT=$$EOBTOT^IBCEU1(IBIFN,IBCBN)
"RTN","IBCECOB2",371,0)
 S:IBPRTOT<0 IBPRTOT=0      ; don't allow negative prior payment or offset
"RTN","IBCECOB2",372,0)
 S:IBCBN=2 IBPRTOT=IBPRTOT+$P(IBU2,U,4)
"RTN","IBCECOB2",373,0)
 S:IBCBN=3 IBPRTOT=IBPRTOT+$P(IBU2,U,4)+$P(IBU2,U,5)
"RTN","IBCECOB2",374,0)
 S:IBPRTOT<0 IBPRTOT=0      ; don't allow negative prior payment or offset
"RTN","IBCECOB2",375,0)
 ; Subtract payer paid amount from Total Charges from BILLS/CLAIMS (#399) file, don't allow neg
"RTN","IBCECOB2",376,0)
 S IBBLD=$P($G(^DGCR(399,IBIFN,"U1")),U,1)-IBPRTOT
"RTN","IBCECOB2",377,0)
 S:IBBLD<0 IBBLD=0
"RTN","IBCECOB2",378,0)
 Q IBBLD
"RTN","IBCECOB2",379,0)
 ;
"RTN","IBCECOB2",380,0)
CCCHK(IBIFN) ; If there are multiple EOBS on file for this claim, then one of them must be processed and AR status must be collected closed to process.
"RTN","IBCECOB2",381,0)
 ; returns 1 if true
"RTN","IBCECOB2",382,0)
 ;         0 if there are not multiple EOBs or mulitple EOBs and none are processed (all denials)
"RTN","IBCECOB2",383,0)
 ;        -1 if false
"RTN","IBCECOB2",384,0)
 N IBDA,IBCT,IBPROC,IBARSTAT,IBEOBNDX,IBEOB
"RTN","IBCECOB2",385,0)
 S IBCT=0,IBPROC=0
"RTN","IBCECOB2",386,0)
 F IBEOBNDX="B","C" D
"RTN","IBCECOB2",387,0)
 .S IBDA=0 F  S IBDA=$O(^IBM(361.1,IBEOBNDX,IBIFN,IBDA)) Q:'+IBDA  D
"RTN","IBCECOB2",388,0)
 ..Q:$D(IBEOB(IBDA))
"RTN","IBCECOB2",389,0)
 ..Q:$P($G(^IBM(361.1,IBDA,0)),U,4)=1    ; only count EOBs
"RTN","IBCECOB2",390,0)
 ..S IBEOB(IBDA)="",IBCT=IBCT+1
"RTN","IBCECOB2",391,0)
 ..I $P($G(^IBM(361.1,IBDA,0)),U,13)=1 S IBPROC=1
"RTN","IBCECOB2",392,0)
 I IBCT<2 Q 0  ; less than 2 EOBs
"RTN","IBCECOB2",393,0)
 I 'IBPROC Q 0  ; no EOBs with status processed 
"RTN","IBCECOB2",394,0)
 S IBARSTAT=$$ARSTATA^IBJTU4(IBIFN)  ; get status of AR
"RTN","IBCECOB2",395,0)
 I $P(IBARSTAT,U)="COLLECTED/CLOSED" Q 1
"RTN","IBCECOB2",396,0)
 Q -1
"RTN","IBCECOB2",397,0)
 ;
"RTN","IBCECOB2",398,0)
DENCHK(IBIFN,IBCT) ; Make sure all EOBs from this claim are denied.
"RTN","IBCECOB2",399,0)
 ; Input: IBIFN - IEN to 399
"RTN","IBCECOB2",400,0)
 ;        IBCT - by reference. Return count of EOBs.
"RTN","IBCECOB2",401,0)
 ; Output: returns 1 if there is at least one EOB and that none of the EOBS are processed.
"RTN","IBCECOB2",402,0)
 ; otherwise 0
"RTN","IBCECOB2",403,0)
 ;
"RTN","IBCECOB2",404,0)
 N IBDA,IBPROC,IBEOBNDX,IBEOB
"RTN","IBCECOB2",405,0)
 S IBCT=0,IBPROC=0
"RTN","IBCECOB2",406,0)
 F IBEOBNDX="B","C" D
"RTN","IBCECOB2",407,0)
 .S IBDA=0 F  S IBDA=$O(^IBM(361.1,IBEOBNDX,IBIFN,IBDA)) Q:'+IBDA  D
"RTN","IBCECOB2",408,0)
 ..Q:$D(IBEOB(IBDA))
"RTN","IBCECOB2",409,0)
 ..Q:$P($G(^IBM(361.1,IBDA,0)),U,4)=1    ; only count EOBs
"RTN","IBCECOB2",410,0)
 ..S IBEOB(IBDA)="",IBCT=IBCT+1
"RTN","IBCECOB2",411,0)
 ..I $P($G(^IBM(361.1,IBDA,0)),U,13)=1 S IBPROC=1
"RTN","IBCECOB2",412,0)
 I IBCT,'IBPROC Q 1  ; there is at least one EOB and none of the EOBS are processed.
"RTN","IBCECOB2",413,0)
 Q 0  ;
"RTN","IBCECOB2",414,0)
 ;
"RTN","IBCECOB2",415,0)
WARNMSE() ; Display MSE Warning and check if we should continue.
"RTN","IBCECOB2",416,0)
 D FULL^VALM1
"RTN","IBCECOB2",417,0)
 N DIR,X,Y
"RTN","IBCECOB2",418,0)
 S DIR("A",1)="WARNING : The MRA for this claim caused a Data Mismatch/Message Storage Error."
"RTN","IBCECOB2",419,0)
 S DIR("A",2)="If you continue, the secondary claim may not contain the correct data."
"RTN","IBCECOB2",420,0)
 S DIR("A")="Do you wish to continue? ",DIR("B")="NO",DIR(0)="YA" D ^DIR
"RTN","IBCECOB2",421,0)
 I Y>0 Q 1   ; Okay to continue.
"RTN","IBCECOB2",422,0)
 Q 0  ;
"RTN","IBCECSA4")
0^165^B61845851^B60720503
"RTN","IBCECSA4",1,0)
IBCECSA4 ;ALB/CXW - IB CLAIMS STATUS AWAITING RESOLUTION SCREEN ;5-AUG-1999
"RTN","IBCECSA4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,320,371,433,516**;21-MAR-1994;Build 123
"RTN","IBCECSA4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECSA4",4,0)
 ;
"RTN","IBCECSA4",5,0)
SMSG ;select message
"RTN","IBCECSA4",6,0)
 N IBCOM,IBX,IBDAX,IBA
"RTN","IBCECSA4",7,0)
 D SEL(.IBDAX,1)
"RTN","IBCECSA4",8,0)
 I $O(IBDAX(""))="" G SMSGQ
"RTN","IBCECSA4",9,0)
 S IBDAX=+$O(IBDAX(0)),IBA=$G(IBDAX(IBDAX))
"RTN","IBCECSA4",10,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,6),$P(IBA,U,2)))
"RTN","IBCECSA4",11,0)
 I IBX'="" D
"RTN","IBCECSA4",12,0)
 . Q:'$$LOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",13,0)
 . D EN^VALM("IBCEM CSA MSG")
"RTN","IBCECSA4",14,0)
 . D UNLOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",15,0)
SMSGQ S VALMBCK="R"
"RTN","IBCECSA4",16,0)
 I $G(IBFASTXT) S VALMBCK="Q" K IBDAX
"RTN","IBCECSA4",17,0)
 D:$O(IBDAX(0)) BLD^IBCECSA1
"RTN","IBCECSA4",18,0)
 Q
"RTN","IBCECSA4",19,0)
 ;
"RTN","IBCECSA4",20,0)
COB ; COB management link from CSA
"RTN","IBCECSA4",21,0)
 N IBA,IBX
"RTN","IBCECSA4",22,0)
 ;IBX,IBA are killed during cancel execution
"RTN","IBCECSA4",23,0)
 D FULL^VALM1
"RTN","IBCECSA4",24,0)
 D EN^IBCECOB
"RTN","IBCECSA4",25,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECSA4",26,0)
 S VALMBCK="R"
"RTN","IBCECSA4",27,0)
 Q
"RTN","IBCECSA4",28,0)
 ;
"RTN","IBCECSA4",29,0)
EDI ;History detail display
"RTN","IBCECSA4",30,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",31,0)
 D FULL^VALM1
"RTN","IBCECSA4",32,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",33,0)
 D EDI2^IBCECOB2(IBIFN)
"RTN","IBCECSA4",34,0)
 S VALMBCK="R"
"RTN","IBCECSA4",35,0)
 Q
"RTN","IBCECSA4",36,0)
EOB ;View an EOB
"RTN","IBCECSA4",37,0)
 N IBIFN,IBA,IBX
"RTN","IBCECSA4",38,0)
 D FULL^VALM1
"RTN","IBCECSA4",39,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",40,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA4",41,0)
 Q
"RTN","IBCECSA4",42,0)
 ;
"RTN","IBCECSA4",43,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECSA4",44,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",45,0)
 D FULL^VALM1
"RTN","IBCECSA4",46,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",47,0)
 D TPJI1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",48,0)
 S VALMBCK="R"
"RTN","IBCECSA4",49,0)
 Q
"RTN","IBCECSA4",50,0)
 ;
"RTN","IBCECSA4",51,0)
PBILL ;Print bill - not for resubmit
"RTN","IBCECSA4",52,0)
 ; IB*320 - allow action for MRA request claims
"RTN","IBCECSA4",53,0)
 N IBIFN,IBX,IBA,IBRESUB
"RTN","IBCECSA4",54,0)
 D FULL^VALM1
"RTN","IBCECSA4",55,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",56,0)
 I "234"'[$P($G(^DGCR(399,IBIFN,0)),U,13) W !!,"Bill status must be REQUEST MRA, AUTHORIZED or PRNT/TX to print the bill." D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",57,0)
 ;
"RTN","IBCECSA4",58,0)
 ; don't update review status for MRA's
"RTN","IBCECSA4",59,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 S IBRESUB=1
"RTN","IBCECSA4",60,0)
 E  S IBRESUB=$$RESUB(IBIFN,1,"PX")
"RTN","IBCECSA4",61,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",62,0)
 I IBRESUB=2 D  G PB1
"RTN","IBCECSA4",63,0)
 . N IB364
"RTN","IBCECSA4",64,0)
 . S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",65,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364)
"RTN","IBCECSA4",66,0)
 D PBILL1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",67,0)
PB1 ;
"RTN","IBCECSA4",68,0)
 S VALMBCK="R"
"RTN","IBCECSA4",69,0)
 Q
"RTN","IBCECSA4",70,0)
 ;
"RTN","IBCECSA4",71,0)
CANCEL ;Cancel bill
"RTN","IBCECSA4",72,0)
 N IBIFN,IB364,IBX,IBA,MRACHK
"RTN","IBCECSA4",73,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",74,0)
 D FULL^VALM1
"RTN","IBCECSA4",75,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",76,0)
 ; Check for security key
"RTN","IBCECSA4",77,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECSA4",78,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",79,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",80,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",81,0)
 . Q
"RTN","IBCECSA4",82,0)
 D MRACHK I MRACHK G CANCELQ
"RTN","IBCECSA4",83,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",84,0)
 D CANCEL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",85,0)
CANCELQ S VALMBCK="R"
"RTN","IBCECSA4",86,0)
 Q
"RTN","IBCECSA4",87,0)
 ;
"RTN","IBCECSA4",88,0)
CRD ; enter here if correcting a bill
"RTN","IBCECSA4",89,0)
 ;IB*2.0*516/TAZ - Added variable IBCNCSA to show the source of the CRD function.
"RTN","IBCECSA4",90,0)
 ; This will allow the users to CRD a claim in CSA even though a claim has a status
"RTN","IBCECSA4",91,0)
 ; of REQUEST MRA.
"RTN","IBCECSA4",92,0)
 N IBCNCRD,IBCNCSA
"RTN","IBCECSA4",93,0)
 S (IBCNCRD,IBCNCSA)=1
"RTN","IBCECSA4",94,0)
CLONE ;'Copy/cancel bill' protocol action
"RTN","IBCECSA4",95,0)
 N IBX,IBA,IB364,MRACHK,IBIFN,IBKEY
"RTN","IBCECSA4",96,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",97,0)
 D FULL^VALM1
"RTN","IBCECSA4",98,0)
 S IBDAX=$O(IBDAX("")),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",99,0)
 I IBDAX="" G CLONEQ
"RTN","IBCECSA4",100,0)
 ; Check for security key
"RTN","IBCECSA4",101,0)
 ;IB*2.0*516/TAZ - Remove check for IB CLON
"RTN","IBCECSA4",102,0)
 ;S IBKEY=$S($G(IBCNCRD)=1:"IB AUTHORIZE",1:"IB CLON")
"RTN","IBCECSA4",103,0)
 S IBKEY="IB AUTHORIZE"
"RTN","IBCECSA4",104,0)
 ;I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECSA4",105,0)
 I '$$KCHK^XUSRB(IBKEY) D  G CLONEQ
"RTN","IBCECSA4",106,0)
 . ;W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",107,0)
 . ;W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",108,0)
 . W !!?5,"You must hold the "_IBKEY_" security key to access this function."
"RTN","IBCECSA4",109,0)
 . W !?5,"Please see your manager."
"RTN","IBCECSA4",110,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",111,0)
 . Q
"RTN","IBCECSA4",112,0)
 D MRACHK I MRACHK G CLONEQ
"RTN","IBCECSA4",113,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",114,0)
 D COPYCLON^IBCECOB2(+$G(IBDAX(IBDAX)),IB364,.IBDAX)
"RTN","IBCECSA4",115,0)
CLONEQ S VALMBCK="R"
"RTN","IBCECSA4",116,0)
 Q
"RTN","IBCECSA4",117,0)
 ;
"RTN","IBCECSA4",118,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECSA4",119,0)
 N IBIFNH,IBIFN,IB364,IBX,IBA,Z,IBCBASK,IBCBCOPY,IBCAN
"RTN","IBCECSA4",120,0)
 D FULL^VALM1
"RTN","IBCECSA4",121,0)
 ;IBDAX - array from selection of message
"RTN","IBCECSA4",122,0)
 S IBA=$G(IBDAX(+$G(IBDAX)))
"RTN","IBCECSA4",123,0)
 G:'IBA PROQ
"RTN","IBCECSA4",124,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,6),$P(IBA,U,2))),IBIFN=$P(IBA,U)
"RTN","IBCECSA4",125,0)
 S IB364=+$P(IBA,U,5)
"RTN","IBCECSA4",126,0)
 G:'IBIFN PROQ
"RTN","IBCECSA4",127,0)
 ;
"RTN","IBCECSA4",128,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 D  G PROQ
"RTN","IBCECSA4",129,0)
 . W !!?4,"This bill is in a status of REQUEST MRA."
"RTN","IBCECSA4",130,0)
 . I $$CHK^IBCEMU1(IBIFN) W !?4,"MRA EOBs must be processed from the MRA management worklist."
"RTN","IBCECSA4",131,0)
 . E  W !?4,"There are no MRA EOBs on file."
"RTN","IBCECSA4",132,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",133,0)
 . Q
"RTN","IBCECSA4",134,0)
 ;
"RTN","IBCECSA4",135,0)
 D COBCOPY^IBCECOB2(IBIFN,IB364,1,$P(IBA,U,2),"INIT^IBCECSA2")
"RTN","IBCECSA4",136,0)
PROQ S VALMBCK="R"
"RTN","IBCECSA4",137,0)
 Q
"RTN","IBCECSA4",138,0)
 ;
"RTN","IBCECSA4",139,0)
RES ;Resubmit bill by print
"RTN","IBCECSA4",140,0)
 N IBTMP,IB364,IBIFN,IBX,IBA
"RTN","IBCECSA4",141,0)
 D FULL^VALM1
"RTN","IBCECSA4",142,0)
 S (IBTMP,IBDAX)=$O(IBDAX(0)),IBTMP(IBTMP)=IBDAX(IBDAX)
"RTN","IBCECSA4",143,0)
 S IBIFN=$P($G(IBDAX(+IBDAX)),U)
"RTN","IBCECSA4",144,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",145,0)
 I IBIFN D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364),PAUSE^VALM1,INIT^IBCECSA2
"RTN","IBCECSA4",146,0)
 S IBDAX(IBTMP)=IBTMP(IBTMP)
"RTN","IBCECSA4",147,0)
 S VALMBCK="R"
"RTN","IBCECSA4",148,0)
 Q
"RTN","IBCECSA4",149,0)
 ;
"RTN","IBCECSA4",150,0)
EBI ;Edit bill
"RTN","IBCECSA4",151,0)
 N IBFLG,IBIFN,IB364,IBX,IBA
"RTN","IBCECSA4",152,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECSA4",153,0)
 D FULL^VALM1
"RTN","IBCECSA4",154,0)
 S IBDAX=$O(IBDAX(""))
"RTN","IBCECSA4",155,0)
 I IBDAX="" G EDITQ
"RTN","IBCECSA4",156,0)
 S IBIFN=$P(IBDAX(IBDAX),U)
"RTN","IBCECSA4",157,0)
 S IBFLG=1 D  I IBFLG S IBDAX="" D PAUSE^VALM1 G EDITQ
"RTN","IBCECSA4",158,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,13)>2 W !,*7,"An authorized bill can not be edited." Q
"RTN","IBCECSA4",159,0)
 . I '$D(^XUSEC("IB EDIT",DUZ)) W !,*7,"You are not authorized to edit a bill" Q
"RTN","IBCECSA4",160,0)
 . S IBFLG=0
"RTN","IBCECSA4",161,0)
 S IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",162,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",163,0)
 D EBILL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",164,0)
EDITQ S VALMBCK="R"
"RTN","IBCECSA4",165,0)
 Q
"RTN","IBCECSA4",166,0)
 ;
"RTN","IBCECSA4",167,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECSA4",168,0)
 ; IBDA = array returned if selections made
"RTN","IBCECSA4",169,0)
 ;    IBDAX(n)=ien of bill selected (file 399)
"RTN","IBCECSA4",170,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECSA4",171,0)
 N IB
"RTN","IBCECSA4",172,0)
 K IBDA
"RTN","IBCECSA4",173,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA4",174,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA4",175,0)
 . S IBDA(IBDA)=$P($G(^TMP("IBCECSA",$J,IBDA)),U,2,7)
"RTN","IBCECSA4",176,0)
 Q
"RTN","IBCECSA4",177,0)
 ;
"RTN","IBCECSA4",178,0)
RESUB(IBIFN,TXMT,IBFUNC,IBTBA) ; Function asks if resubmit as resolution to a
"RTN","IBCECSA4",179,0)
 ;   message is the intention
"RTN","IBCECSA4",180,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCECSA4",181,0)
 ; TXMT = flag if = 1, assume it's transmittable, don't have to check
"RTN","IBCECSA4",182,0)
 ; IBFUNC = code to say where the code is called from
"RTN","IBCECSA4",183,0)
 ;  'E'=edit/authorize  'P'=print 'PX'= print/not to resubmit  'C'=cancel
"RTN","IBCECSA4",184,0)
 ; IBTBA = transmit bill array returned to calling routine.  Optional
"RTN","IBCECSA4",185,0)
 ;    parameter to be passed by reference.
"RTN","IBCECSA4",186,0)
 ;    IBTBA(364ptr)=""
"RTN","IBCECSA4",187,0)
 ;
"RTN","IBCECSA4",188,0)
 ; Returns:
"RTN","IBCECSA4",189,0)
 ; -1 = ^ or timeout at prompt
"RTN","IBCECSA4",190,0)
 ;  0 = not a transmittable bill or review not needed
"RTN","IBCECSA4",191,0)
 ;  1 = don't update the review status (user choice)
"RTN","IBCECSA4",192,0)
 ;  2 = Yes, update the review status (user choice), or resubmit by print
"RTN","IBCECSA4",193,0)
 ;
"RTN","IBCECSA4",194,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,STAT
"RTN","IBCECSA4",195,0)
 KILL IBTBA
"RTN","IBCECSA4",196,0)
 I '$G(TXMT),'$$TXMT^IBCEF4(IBIFN) S Y=0 G RESUB1   ; not transmittable
"RTN","IBCECSA4",197,0)
 ;
"RTN","IBCECSA4",198,0)
 ; Check for any messages or EOB's needing review
"RTN","IBCECSA4",199,0)
 S STAT=$$STATUS^IBCEF4(IBIFN)
"RTN","IBCECSA4",200,0)
 I '$TR(STAT,U) S Y=0 G RESUB1                ; no unreviewed items
"RTN","IBCECSA4",201,0)
 I $P(STAT,U,1) S IBTBA($P(STAT,U,1))=""      ; 364 ien for 361 data
"RTN","IBCECSA4",202,0)
 I $P(STAT,U,2) S IBTBA($P(STAT,U,2))=""      ; 364 ien for 361.1 data
"RTN","IBCECSA4",203,0)
 ;
"RTN","IBCECSA4",204,0)
 I IBFUNC'="P" D
"RTN","IBCECSA4",205,0)
 . S DIR(0)="YA",DIR("A",1)="",DIR("A",2)="This bill is in need of review due to receipt of a status msg or EOB",DIR("A")="OK to update the review status to 'REVIEW COMPLETE' based on this action?: ",DIR("B")="NO"
"RTN","IBCECSA4",206,0)
 . S DIR("?",1)="You have just "_$S(IBFUNC="E":"requested re-transmission of",IBFUNC="C":"cancelled",1:"")_" the bill"
"RTN","IBCECSA4",207,0)
 . S DIR("?",2)="You can update the review status of the unreviewed message to ",DIR("?",3)=" 'REVIEW COMPLETE' if you say YES here"
"RTN","IBCECSA4",208,0)
 . S DIR("?")="Press ENTER to continue "
"RTN","IBCECSA4",209,0)
 . D ^DIR K DIR
"RTN","IBCECSA4",210,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-1 Q
"RTN","IBCECSA4",211,0)
 . S Y=Y+1
"RTN","IBCECSA4",212,0)
 E  D
"RTN","IBCECSA4",213,0)
 . W !,"The review status of this message will be updated to 'REVIEW COMPLETE'",!,"  based on this action"
"RTN","IBCECSA4",214,0)
 . S Y=2
"RTN","IBCECSA4",215,0)
 ;
"RTN","IBCECSA4",216,0)
RESUB1 Q +Y
"RTN","IBCECSA4",217,0)
 ;
"RTN","IBCECSA4",218,0)
RETXMT ;
"RTN","IBCECSA4",219,0)
 N IB364,IBIFN
"RTN","IBCECSA4",220,0)
 D FULL^VALM1
"RTN","IBCECSA4",221,0)
 S IBDAX=$O(IBDAX(0)),IB364=+$P($G(IBDAX(IBDAX)),U,5),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",222,0)
 I 'IB364!('IBIFN) G RETXMTQ
"RTN","IBCECSA4",223,0)
 D MRACHK I MRACHK G RETXMTQ
"RTN","IBCECSA4",224,0)
 D RESUB^IBCE(IB364)
"RTN","IBCECSA4",225,0)
RETXMTQ S VALMBCK="R"
"RTN","IBCECSA4",226,0)
 Q
"RTN","IBCECSA4",227,0)
 ;
"RTN","IBCECSA4",228,0)
MRACHK ; Restrict access to process REQUEST MRA claims
"RTN","IBCECSA4",229,0)
 S MRACHK=0
"RTN","IBCECSA4",230,0)
 ; At least one MRA EOB appears on the MRA management worklist
"RTN","IBCECSA4",231,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,$$MRAWL^IBCEMU2(IBIFN) S MRACHK=1 D  D PAUSE^VALM1
"RTN","IBCECSA4",232,0)
 . W !,?4,"This bill is in a status of REQUEST MRA and it does appear on"
"RTN","IBCECSA4",233,0)
 . W !,?4,"the MRA Management Worklist.  Please use the MRA Management Menu"
"RTN","IBCECSA4",234,0)
 . W !,?4,"options for all processing related to this bill."
"RTN","IBCECSA4",235,0)
 Q
"RTN","IBCEF")
0^131^B64641917^B58449164
"RTN","IBCEF",1,0)
IBCEF ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;22-JAN-96
"RTN","IBCEF",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,51,137,288,296,361,371,447,516**;21-MAR-94;Build 123
"RTN","IBCEF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF",4,0)
 ;
"RTN","IBCEF",5,0)
 ;IBIFN = bill ien throughout this routine
"RTN","IBCEF",6,0)
COB(IBIFN) ; Bill seq
"RTN","IBCEF",7,0)
 N A
"RTN","IBCEF",8,0)
 S A=$P($G(^DGCR(399,IBIFN,0)),U,21) S:A="" A="P"
"RTN","IBCEF",9,0)
 Q A
"RTN","IBCEF",10,0)
 ;
"RTN","IBCEF",11,0)
COBN(IBIFN,A) ; Return seq # of selected payer
"RTN","IBCEF",12,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","IBCEF",13,0)
 I $G(A)="" S A=$$COB(IBIFN) S:"PST"'[A A="P"
"RTN","IBCEF",14,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","IBCEF",15,0)
 Q A
"RTN","IBCEF",16,0)
 ;
"RTN","IBCEF",17,0)
POLICY(IBIFN,IBPC,IBCOBN) ; Return raw data from policy info on bill
"RTN","IBCEF",18,0)
 ; IBPC  = pc # of data element in policy (optional)
"RTN","IBCEF",19,0)
 ;          if null, 0-node is returned
"RTN","IBCEF",20,0)
 ; IBCOBN = bill designation 1-3 or 'PST' (optional)
"RTN","IBCEF",21,0)
 ;          if null, default to current
"RTN","IBCEF",22,0)
 N IBI,IBY
"RTN","IBCEF",23,0)
 I "PST"[$G(IBCOBN) S IBCOBN=$$COBN(IBIFN,$G(IBCOBN))
"RTN","IBCEF",24,0)
 S IBI=$G(^DGCR(399,IBIFN,"I"_IBCOBN))
"RTN","IBCEF",25,0)
 ;IB*516/TAZ - 
"RTN","IBCEF",26,0)
 ; The I1,I2,I3 nodes of the claim are copies of the zero node insurance
"RTN","IBCEF",27,0)
 ; information from the patient file.  Four fields on that node are now
"RTN","IBCEF",28,0)
 ; marked for deletion because their lengths are not HIPAA-compliant.
"RTN","IBCEF",29,0)
 ; The correct values for Name of Insured and Subscriber ID should now
"RTN","IBCEF",30,0)
 ; be pulled from the I17,I27,I37 nodes of the claim.  The Group Name
"RTN","IBCEF",31,0)
 ; and Number should come from file 355.3 based on the Plan.
"RTN","IBCEF",32,0)
 S IBY=$G(^DGCR(399,IBIFN,"I"_IBCOBN_"7"))  ; new I7 node - 516 - baa
"RTN","IBCEF",33,0)
 I $P(IBY,U,1)'="" S $P(IBI,U,17)=$P(IBY,U,1)  ; Name of insured long - 516 - baa
"RTN","IBCEF",34,0)
 I $P(IBY,U,2)'="" S $P(IBI,U,2)=$P(IBY,U,2)  ; Subscriber ID long -516 - baa
"RTN","IBCEF",35,0)
 S IBY=$P(IBI,U,18)
"RTN","IBCEF",36,0)
 S $P(IBI,U,3)=$$GET1^DIQ(355.3,+IBY_",",2.02) ; Group Number - 516 -taz
"RTN","IBCEF",37,0)
 S $P(IBI,U,15)=$$GET1^DIQ(355.3,+IBY_",",2.01) ; Group Name - 516 - taz
"RTN","IBCEF",38,0)
 I $G(IBPC) S IBI=$P(IBI,U,IBPC)
"RTN","IBCEF",39,0)
POLICYQ Q IBI
"RTN","IBCEF",40,0)
 ;
"RTN","IBCEF",41,0)
INSADDR(IBIFN,IBCOB) ; Return insured's address in 7 pieces:
"RTN","IBCEF",42,0)
 ; ALL STREET ADDRESSES^CITY^STATE ABBREVIATION^ZIP^STREET ADDRESS 1^
"RTN","IBCEF",43,0)
 ;  STREET ADDRESS 2^STREET ADDRESS 3
"RTN","IBCEF",44,0)
 ; IBIFN = bill ien
"RTN","IBCEF",45,0)
 ; IBCOB = bill designation (P)rimary, (S)econdary, (T)ertiary
"RTN","IBCEF",46,0)
 ;          or 1-2-3. If not defined or null, return current
"RTN","IBCEF",47,0)
 ; If insured is patient or spouse, take from patient file top level
"RTN","IBCEF",48,0)
 ;   fields, then if top-level street addresses are blank and policy
"RTN","IBCEF",49,0)
 ;   level fields are not, use policy level
"RTN","IBCEF",50,0)
 ; If insured is other than patient/spouse, use policy level fields only
"RTN","IBCEF",51,0)
 N A,B,IBADDR,IBI,DFN,VAPA,VATEST
"RTN","IBCEF",52,0)
 S:$G(IBCOB)="" IBCOB=""
"RTN","IBCEF",53,0)
 I 'IBCOB S IBCOB=$$COBN(IBIFN,$G(IBCOB))
"RTN","IBCEF",54,0)
 S IBI=+$$POLICY(IBIFN,16,IBCOB)     ; pt relationship to insured
"RTN","IBCEF",55,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",56,0)
 I $S('IBI:1,1:"12"'[IBI) S IBADDR="" G INSADDQ
"RTN","IBCEF",57,0)
 ; insured's address (patient/spouse) same as patient's
"RTN","IBCEF",58,0)
 S VATEST("ADD",9)=+$G(^DGCR(399,IBIFN,"U")),VATEST("ADD",10)=+$P($G(^("U")),U,2)
"RTN","IBCEF",59,0)
 D ADD^VADPT
"RTN","IBCEF",60,0)
 S IBADDR=VAPA(1)_" "_VAPA(2)_" "_VAPA(3)_U_VAPA(4)_U_$P($G(^DIC(5,+VAPA(5),0)),U,2)_U_VAPA(6)_U_VAPA(1)_U_VAPA(2)_U_VAPA(3)
"RTN","IBCEF",61,0)
INSADDQ S A=$P($G(^DGCR(399,IBIFN,"M")),U,(11+IBCOB))
"RTN","IBCEF",62,0)
 S A=$G(^DPT(DFN,.312,+A,3))
"RTN","IBCEF",63,0)
 I $TR($P(IBADDR,U)," ")="" D PI3
"RTN","IBCEF",64,0)
 I IBI=2,$$NOPUNCT($P(A,U,6,10),1)'="" D PI3
"RTN","IBCEF",65,0)
 Q IBADDR
"RTN","IBCEF",66,0)
 ;
"RTN","IBCEF",67,0)
PI3 ; build IBADDR string from patient insurance 3 node data
"RTN","IBCEF",68,0)
 S $P(IBADDR,U,1)=$P(A,U,6)_" "_$P(A,U,7)
"RTN","IBCEF",69,0)
 S $P(IBADDR,U,5,6)=$P(A,U,6,7)
"RTN","IBCEF",70,0)
 F B=2,4 S $P(IBADDR,U,B)=$P(A,U,B+6)
"RTN","IBCEF",71,0)
 S $P(IBADDR,U,3)=$P($G(^DIC(5,+$P(A,U,9),0)),U,2)
"RTN","IBCEF",72,0)
 S $P(IBADDR,U,7)=""   ; no street address 3 in file 2.312
"RTN","IBCEF",73,0)
 Q
"RTN","IBCEF",74,0)
 ;
"RTN","IBCEF",75,0)
PTADDR(IBIFN,ELE) ;Return part of patient's permanent address
"RTN","IBCEF",76,0)
 ;IBIFN = bill ien
"RTN","IBCEF",77,0)
 ;ELE = subscript in ^UTILITY("VAPA", array for element needed
"RTN","IBCEF",78,0)
 ;
"RTN","IBCEF",79,0)
 I '$D(^UTILITY("VAPA",$J)) D  ; once per pt
"RTN","IBCEF",80,0)
 .N VAHOW,DFN,VAPA
"RTN","IBCEF",81,0)
 .S VAHOW=2,DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2),VAPA("P")=""
"RTN","IBCEF",82,0)
 .D ADD^VADPT
"RTN","IBCEF",83,0)
 Q $P($G(^UTILITY("VAPA",$J,ELE)),U)
"RTN","IBCEF",84,0)
 ;
"RTN","IBCEF",85,0)
PTDEM(IBIFN,ELE,PC) ;Return part of patient's demographics
"RTN","IBCEF",86,0)
 ;IBIFN = bill ien
"RTN","IBCEF",87,0)
 ;ELE = subscript in ^UTILITY("VADM" array for demographic element needed
"RTN","IBCEF",88,0)
 ;PC = pc of string at subscript ELE to be returned
"RTN","IBCEF",89,0)
 ;
"RTN","IBCEF",90,0)
 I '$G(PC) S PC=1
"RTN","IBCEF",91,0)
 I '$D(^UTILITY("VADM",$J)) D  ; once per pt
"RTN","IBCEF",92,0)
 .N VAHOW,DFN,VADM
"RTN","IBCEF",93,0)
 .S VAHOW=2,DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",94,0)
 .D DEM^VADPT
"RTN","IBCEF",95,0)
 Q $P($G(^UTILITY("VADM",$J,ELE)),U,PC)
"RTN","IBCEF",96,0)
 ;
"RTN","IBCEF",97,0)
PTEMPL(IBIFN,ELE,WHOSE,VAOA) ;Return part of pt's or spouse's employer info
"RTN","IBCEF",98,0)
 ;ELE = subscript in VAOA array for employer element needed
"RTN","IBCEF",99,0)
 ;WHOSE = 6 if spouse's info needed  5 if pt info needed (DEFAULT)
"RTN","IBCEF",100,0)
 ;
"RTN","IBCEF",101,0)
 N DFN
"RTN","IBCEF",102,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2),VAOA("A")=$S($G(WHOSE):WHOSE,1:5)
"RTN","IBCEF",103,0)
 D OAD^VADPT
"RTN","IBCEF",104,0)
 Q $P($G(VAOA(ELE)),U)
"RTN","IBCEF",105,0)
 ;
"RTN","IBCEF",106,0)
INSDEM(IBIFN,IBCOB) ; Return insured's demographics in 6 pieces:
"RTN","IBCEF",107,0)
 ; DATE OF BIRTH^SEX^PHONE^BRANCH pointer^RANK^SSN(no dashes)
"RTN","IBCEF",108,0)
 ; IBIFN = bill ien
"RTN","IBCEF",109,0)
 ; IBCOB = bill designation (P)rimary (default), (S)econdary, (T)ertiary
"RTN","IBCEF",110,0)
 ;          or 1,2,3 ... if not defined or null, return current
"RTN","IBCEF",111,0)
 ; If insured is patient/spouse, take from patient file top level
"RTN","IBCEF",112,0)
 ;   fields, then if top-level are blank and policy level aren't,
"RTN","IBCEF",113,0)
 ;   use policy level
"RTN","IBCEF",114,0)
 ; If insured other than patient/spouse, use policy level fields only
"RTN","IBCEF",115,0)
 N A,B,IBDEM,IBI,DFN,VADM
"RTN","IBCEF",116,0)
 S:$G(IBCOB)="" IBCOB=""
"RTN","IBCEF",117,0)
 S:'IBCOB IBCOB=$$COBN(IBIFN,IBCOB)
"RTN","IBCEF",118,0)
 S IBI=$$WHOSINS(IBIFN,IBCOB)
"RTN","IBCEF",119,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",120,0)
 I $S('IBI:1,1:"12"'[IBI) S IBDEM="" G INSDEM1
"RTN","IBCEF",121,0)
 ; If it gets here, assume insured is patient/spouse
"RTN","IBCEF",122,0)
 S A=$$PTDEM(IBIFN,0),A=$$PTADDR(IBIFN,0)
"RTN","IBCEF",123,0)
 F A=2,3,5 S VADM(A)=$P($G(^UTILITY("VADM",$J,A)),U)
"RTN","IBCEF",124,0)
 S VAPA(8)=$P($G(^UTILITY("VAPA",$J,8)),U)
"RTN","IBCEF",125,0)
 I VADM(5)="",'VADM(3),VAPA(8)="" S IBDEM="" G INSDEM1
"RTN","IBCEF",126,0)
 S $P(IBDEM,U,3)=VAPA(8),$P(IBDEM,U,6)=VADM(2)
"RTN","IBCEF",127,0)
 I IBI=1,VADM(3) S $P(IBDEM,U)=VADM(3) ;Patient's own policy only
"RTN","IBCEF",128,0)
INSDEM1 S A=$P($G(^DGCR(399,IBIFN,"M")),U,(11+IBCOB))
"RTN","IBCEF",129,0)
 S A=$G(^DPT(DFN,.312,+A,3))
"RTN","IBCEF",130,0)
 S:"MF"'[$G(VADM(5)) VADM(5)=""
"RTN","IBCEF",131,0)
 S $P(IBDEM,U,2)=$S(IBI=1:VADM(5),1:$P(A,U,12))
"RTN","IBCEF",132,0)
 S $P(IBDEM,U,4,5)=$P(A,U,2)_U_$P(A,U,3)
"RTN","IBCEF",133,0)
 S:'$P(IBDEM,U) $P(IBDEM,U)=$P(A,U)
"RTN","IBCEF",134,0)
 S:$P(IBDEM,U,3)="" $P(IBDEM,U,3)=$P(A,U,11)
"RTN","IBCEF",135,0)
 S:$P(IBDEM,U,6)="" $P(IBDEM,U,6)=$P(A,U,5)
"RTN","IBCEF",136,0)
 Q IBDEM
"RTN","IBCEF",137,0)
 ;
"RTN","IBCEF",138,0)
INSEMPL(IBIFN,IBCOB) ; Return insured's employer data in 5 pieces:
"RTN","IBCEF",139,0)
 ; EMPLOYER NAME^EMPLOYER CITY^EMPLOYER STATE ABBREVIATION^STATE IEN^STREET 1
"RTN","IBCEF",140,0)
 ; IBCOB = bill designation (P)rimary-default, (S)econdary, (T)ertiary
"RTN","IBCEF",141,0)
 ;            or 123 - if not defined or null, return current
"RTN","IBCEF",142,0)
 N A,IBEMPL,IBI,DFN,VAOA
"RTN","IBCEF",143,0)
 S IBI=$$WHOSINS(IBIFN,$G(IBCOB))
"RTN","IBCEF",144,0)
 I $S('IBI:1,1:"12"'[IBI) S IBEMPL="^^" G INSEMPQ
"RTN","IBCEF",145,0)
 ; insured = pt/spouse
"RTN","IBCEF",146,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",147,0)
 S A=$$PTEMPL(IBIFN,0,IBI+4,.VAOA)
"RTN","IBCEF",148,0)
 S IBEMPL=VAOA(9)_U_VAOA(4)_U_$P($G(^DIC(5,+VAOA(5),0)),U,2)_U_+VAOA(5)_U_VAOA(1)
"RTN","IBCEF",149,0)
INSEMPQ Q IBEMPL
"RTN","IBCEF",150,0)
 ;
"RTN","IBCEF",151,0)
WHOSINS(IBIFN,IBCOB) ; Determine who is insured for bill IBIFN and 
"RTN","IBCEF",152,0)
 ; seq of coverage COB (123 or PST) or if not defined or null, current
"RTN","IBCEF",153,0)
 N Z,Z0,VAEL,DFN
"RTN","IBCEF",154,0)
 S Z=+$$POLICY(IBIFN,16,$G(IBCOB))
"RTN","IBCEF",155,0)
 I 'Z D
"RTN","IBCEF",156,0)
 .S Z0=$$POLICY(IBIFN,6,$G(IBCOB)),DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",157,0)
 .I Z0="v" D ELIG^VADPT I VAEL(4) S Z=1 Q  ;vet is pt
"RTN","IBCEF",158,0)
 .I Z0="s" D ELIG^VADPT I VAEL(4) S Z=2 Q  ;vet is pt, so vets spouse is pt's spouse
"RTN","IBCEF",159,0)
 .S Z=9 ; relationship of insured to pt unknown
"RTN","IBCEF",160,0)
 Q Z
"RTN","IBCEF",161,0)
 ;
"RTN","IBCEF",162,0)
EMPSTAT(IBIFN,WHOSE) ;Return employment status
"RTN","IBCEF",163,0)
 ; IBIFN = bill ien
"RTN","IBCEF",164,0)
 ; WHOSE = v for vet, s for spouse status
"RTN","IBCEF",165,0)
 N STAT,DFN,VAPD
"RTN","IBCEF",166,0)
 S STAT="",DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF",167,0)
 I WHOSE="v" D OPD^VADPT S STAT=$P(VAPD(7),U)
"RTN","IBCEF",168,0)
 I WHOSE="s" S STAT=$P($G(^DPT(DFN,.25)),U,15)
"RTN","IBCEF",169,0)
 I STAT="" S STAT=9
"RTN","IBCEF",170,0)
 Q STAT
"RTN","IBCEF",171,0)
 ;
"RTN","IBCEF",172,0)
INPAT(IBIFN,OUT) ; Determine if bill is inpatient
"RTN","IBCEF",173,0)
 ; OUT = optional - if 1, return output value based on 
"RTN","IBCEF",174,0)
 ;  inpatient/outpatient from UB-04 type of bill field
"RTN","IBCEF",175,0)
 ; Return 1 if inpatient, 0 if not inpatient or can't be determined
"RTN","IBCEF",176,0)
 N INPT,CODE,CODE0,IB0
"RTN","IBCEF",177,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF",178,0)
 S OUT=+$G(OUT),CODE=+$P(IB0,U,5)
"RTN","IBCEF",179,0)
 I 'OUT S INPT=CODE
"RTN","IBCEF",180,0)
 I OUT D
"RTN","IBCEF",181,0)
 . S CODE0=$P($G(^DGCR(399.1,+$P(IB0,U,25),0)),U,2)
"RTN","IBCEF",182,0)
 . I CODE0=8,$P(IB0,U,24)=1 S INPT=$P(IB0,U,5) Q  ; 18X
"RTN","IBCEF",183,0)
 . I CODE0=9,$P(IB0,U,24)=8 S INPT=$P(IB0,U,5) Q  ; 89X
"RTN","IBCEF",184,0)
 . I CODE0=1,$P(IB0,U,24)=8 S INPT=0 Q  ; 81X
"RTN","IBCEF",185,0)
 . I CODE0=1,$P(IB0,U,24)=7 S INPT=0 Q  ; 71X
"RTN","IBCEF",186,0)
 . I CODE0=2,$P(IB0,U,24)=7 S INPT=0 Q  ; 72X
"RTN","IBCEF",187,0)
 . S INPT=CODE0
"RTN","IBCEF",188,0)
 Q $S(INPT:INPT'>2,1:0)
"RTN","IBCEF",189,0)
 ;
"RTN","IBCEF",190,0)
INSPRF(IBIFN) ; Function to determine if bill is prof or inst
"RTN","IBCEF",191,0)
 ; Return 1 if institutional (UB-04) claim, 0 if professional (CMS-1500) claim
"RTN","IBCEF",192,0)
 N A
"RTN","IBCEF",193,0)
 S A=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF",194,0)
 I $P(A,U,27)="" S $P(A,U,27)=$S($P(A,U,19)=3:1,1:0)
"RTN","IBCEF",195,0)
 Q $S($P(A,U,27)=1:1,1:0)
"RTN","IBCEF",196,0)
 ;
"RTN","IBCEF",197,0)
F(FLD,IBXRET,IBXERR1,IBIEN) ;Execute extract for data element FLD and bill IBIEN
"RTN","IBCEF",198,0)
 ; If IBXDATA array to be returned as data value(s) of fld
"RTN","IBCEF",199,0)
 ;   D F^IBCEF("FLD NAME","IBXDATA","IBXERR") or D F^IBCEF("FLD NAME") 
"RTN","IBCEF",200,0)
 ; Variable ref-ed by IBXERR1 will contain error message if an error
"RTN","IBCEF",201,0)
 ; @IBXRET always defined on return.  It will be null if error
"RTN","IBCEF",202,0)
 I $G(IBIEN) N IBXIEN S IBXIEN=IBIEN
"RTN","IBCEF",203,0)
 I $G(IBXERR1)="" S IBXERR1="IBXERR"
"RTN","IBCEF",204,0)
 N IBXHOLD
"RTN","IBCEF",205,0)
 S IBXHOLD=""
"RTN","IBCEF",206,0)
 I $G(IBXRET)=""!($G(IBXRET)="IBXDATA") S IBXHOLD="IBXDATA",IBXRET="IBXRET"
"RTN","IBCEF",207,0)
 S @IBXERR1=""
"RTN","IBCEF",208,0)
 ;
"RTN","IBCEF",209,0)
 N FLDN,OFLD,STOP,Z,IBXERR2,IBXRETX
"RTN","IBCEF",210,0)
 ;
"RTN","IBCEF",211,0)
 I '$G(IBXIEN) S @IBXERR1="Invalid entry #" G FQ
"RTN","IBCEF",212,0)
 I '$D(^IBA(364.5,"B",FLD)) S OFLD=FLD,STOP=0 D  I FLD="" S @IBXERR1=OFLD_" Field not found!!" G FQ
"RTN","IBCEF",213,0)
 .F  S FLD=$O(^IBA(364.5,"B",FLD))  D  Q:STOP
"RTN","IBCEF",214,0)
 ..I $E(FLD,1,$L(OFLD))'=OFLD S FLD=""
"RTN","IBCEF",215,0)
 ..S STOP=1
"RTN","IBCEF",216,0)
 ;
"RTN","IBCEF",217,0)
 S Z=0
"RTN","IBCEF",218,0)
 F  S Z=$O(^IBA(364.5,"B",FLD,Z)) Q:'Z  I $P($G(^IBA(364.5,Z,0)),U,5)=399 Q
"RTN","IBCEF",219,0)
 I 'Z S @IBXERR1=FLD_" Field not found!!" G FQ
"RTN","IBCEF",220,0)
 ;
"RTN","IBCEF",221,0)
 S FLDN(1)=Z D EXTONE^IBCEFG0(IBXIEN,.FLDN,""_IBXRET_"",.IBXERR2)
"RTN","IBCEF",222,0)
 ;
"RTN","IBCEF",223,0)
 I $G(IBXERR2)'="" S @IBXERR1=IBXERR2
"RTN","IBCEF",224,0)
FQ S IBXARRY=$S(IBXHOLD="IBXDATA":"IBXDATA",1:""_IBXRET_"")
"RTN","IBCEF",225,0)
 I @IBXERR1'="" K @IBXARRY S @IBXARRY="" Q
"RTN","IBCEF",226,0)
 ;
"RTN","IBCEF",227,0)
 I IBXHOLD="IBXDATA" S IBXRET="IBXRET"
"RTN","IBCEF",228,0)
 M IBXRETX=@IBXRET K @IBXARRY M @IBXARRY=IBXRETX(1)
"RTN","IBCEF",229,0)
 S:'($D(@IBXARRY)#2) @IBXARRY=""
"RTN","IBCEF",230,0)
 Q
"RTN","IBCEF",231,0)
 ;
"RTN","IBCEF",232,0)
SERVDT(IBIFN,LENGTH,FORMAT) ; Return default service date for 
"RTN","IBCEF",233,0)
 ; outpatient/UB-04 lines or X12-837 institutional lines
"RTN","IBCEF",234,0)
 ; LENGTH = null/8 for 8 digit date, 6 for 6 digit date
"RTN","IBCEF",235,0)
 ; FORMAT = 1 = X12 format (YYYYMMDD), 2 = FM internal (NNNNNNN),
"RTN","IBCEF",236,0)
 ;          0 = external (MMDDYY or MMDDYYYY)
"RTN","IBCEF",237,0)
 N IBZ
"RTN","IBCEF",238,0)
 G:$$INPAT^IBCEF(IBIFN,1)!($$FT^IBCEF(IBIFN)'=3) SERVDTQ ;Inpatient claim or billed on a CMS-1500
"RTN","IBCEF",239,0)
 S LENGTH=$G(LENGTH),FORMAT=$G(FORMAT)
"RTN","IBCEF",240,0)
 D F("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF",241,0)
 I '$G(IBZ)!(FORMAT=2) G SERVDTQ
"RTN","IBCEF",242,0)
 ;
"RTN","IBCEF",243,0)
 I FORMAT=1 S IBZ=$$DT^IBCEFG1(IBZ,"",$S(LENGTH'=6:"D8",1:"D6")) G SERVDTQ
"RTN","IBCEF",244,0)
 S IBZ=$$DATE^IBCF2(IBZ,$S(LENGTH=6:0,1:1),1)
"RTN","IBCEF",245,0)
 ;
"RTN","IBCEF",246,0)
SERVDTQ Q $G(IBZ)
"RTN","IBCEF",247,0)
 ;
"RTN","IBCEF",248,0)
NOPUNCT(X,SPACE,EXC) ; Strip punctuation from data in X
"RTN","IBCEF",249,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF",250,0)
 ; EXC = list of punctuation not to strip
"RTN","IBCEF",251,0)
 ;
"RTN","IBCEF",252,0)
 N PUNCT,Z
"RTN","IBCEF",253,0)
 S PUNCT=".,-+(){}[]\/><:;?|=_*&%$#@!~`^'"""
"RTN","IBCEF",254,0)
 I $G(SPACE) S PUNCT=PUNCT_" "
"RTN","IBCEF",255,0)
 I $G(EXC)'="" F Z=1:1:$L(EXC) S PUNCT=$TR(PUNCT,$E(EXC,Z))
"RTN","IBCEF",256,0)
 S X=$TR(X,PUNCT)
"RTN","IBCEF",257,0)
 Q X
"RTN","IBCEF",258,0)
 ;
"RTN","IBCEF",259,0)
FT(IBIFN) ; Internal code for bill form type
"RTN","IBCEF",260,0)
 Q +$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCEF",261,0)
 ;
"RTN","IBCEF",262,0)
COBCT(IBIFN) ; # of payers on claim
"RTN","IBCEF",263,0)
 N CT,Z
"RTN","IBCEF",264,0)
 S CT=0 F Z="I1","I2","I3" Q:'$D(^DGCR(399,IBIFN,Z))  S CT=CT+1
"RTN","IBCEF",265,0)
 Q CT
"RTN","IBCEF",266,0)
 ;
"RTN","IBCEF",267,0)
INSTOUT(IBIFN)   ; Identify a Outpatient Institutional Claim. IB*2.0*447 BI
"RTN","IBCEF",268,0)
 ; Return a 1 if claim/bill is Institutional and Outpatient, otherwise return 0.
"RTN","IBCEF",269,0)
 Q (($$INPAT^IBCEF(IBIFN)=0)&($$INSPRF^IBCEF(IBIFN)=1))
"RTN","IBCEF",270,0)
 ;
"RTN","IBCEF11")
0^23^B80990662^B67207596
"RTN","IBCEF11",1,0)
IBCEF11 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,309,335,348,349,371,432,447,473,516**;21-MAR-94;Build 123
"RTN","IBCEF11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF11",4,0)
 ;
"RTN","IBCEF11",5,0)
BOX24D(A,IB) ; Returns the lines for boxes 19-24 of the CMS-1500 display
"RTN","IBCEF11",6,0)
 ; IB = flag is 1 if only box 24 is needed
"RTN","IBCEF11",7,0)
 Q $S('$G(IB):"36",1:"44")_"^55"
"RTN","IBCEF11",8,0)
 ;
"RTN","IBCEF11",9,0)
RCBOX() ; Returns the lines for revenue code boxes of the UB-04 display
"RTN","IBCEF11",10,0)
 Q "19^41"
"RTN","IBCEF11",11,0)
 ;
"RTN","IBCEF11",12,0)
OUTPT(IBIFN,IBPRINT) ; Returns an array of service line data from
"RTN","IBCEF11",13,0)
 ;                 CMS-1500 box 24.  Output is in IBXDATA(n)
"RTN","IBCEF11",14,0)
 ; IBPRINT = print flag  1: return print fields
"RTN","IBCEF11",15,0)
 ;                       0: return EDI fields
"RTN","IBCEF11",16,0)
 ; Uses diagnosis array ^TMP("IBXSAVE",$J,"DX",IBIFN,DIAG CODE)=SEQ #
"RTN","IBCEF11",17,0)
 ;   if it already exists. If not, it builds it from N-DIAGNOSES element
"RTN","IBCEF11",18,0)
 ;
"RTN","IBCEF11",19,0)
 ; For EDI call: Returns IBXDATA(n)=
"RTN","IBCEF11",20,0)
 ;   begin date(YYYYMMDD) ^ end date(YYYYMMDD) ^ pos ^ tos ^
"RTN","IBCEF11",21,0)
 ;   proc code/revenue code - if no procedure (not the pointers) ^
"RTN","IBCEF11",22,0)
 ;   type of code ^ dx pointer(s ) ^ unit charge ^ units ^ modifiers separated by ;
"RTN","IBCEF11",23,0)
 ;   ^ purchased charge amount ^ anesthesia minutes ^ emergency indicator ^
"RTN","IBCEF11",24,0)
 ;   lab-type service flag ^ NDC ^ Units
"RTN","IBCEF11",25,0)
 ;
"RTN","IBCEF11",26,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF11",27,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF11",28,0)
 ;      line in the first '^' piece followed by the '0' node data of file
"RTN","IBCEF11",29,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF11",30,0)
 ;       COB = COB sequence # of adjustment's ins co, m = seq #
"RTN","IBCEF11",31,0)
 ;         -- AND --
"RTN","IBCEF11",32,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF11",33,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEF11",34,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEF11",35,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF11",36,0)
 ;
"RTN","IBCEF11",37,0)
 ; For Print call: Returns begin date(DDMMYYYY)^end date(DDMMYYYY) or
"RTN","IBCEF11",38,0)
 ;   null if equal to begin date^pos^tos^bedsection name(if no procedure)
"RTN","IBCEF11",39,0)
 ;   or procedure code(not the pointer)^ ... refer to EDI call results
"RTN","IBCEF11",40,0)
 ;   Also, IBXDATA(n,"TEXT")=the text to print on first line of box 24,
"RTN","IBCEF11",41,0)
 ;   If no procedure code, returns IBXDATA(n,"A")=rev code abbrev
"RTN","IBCEF11",42,0)
 ;
"RTN","IBCEF11",43,0)
 ;  For both calls, returns IBXDATA(n,item type,item ptr)=""
"RTN","IBCEF11",44,0)
 ;      -- AND --
"RTN","IBCEF11",45,0)
 ;   IBXDATA(n,"RX")=RX#^drug name^NDC^refill #^(re)fill date^qty^days
"RTN","IBCEF11",46,0)
 ;                   ^chrge^ien of file 362.4^NDC format
"RTN","IBCEF11",47,0)
 ;           If line references a prescription
"RTN","IBCEF11",48,0)
 ;      -- AND --
"RTN","IBCEF11",49,0)
 ;   If no revenue code for a prescription, returns IBXDATA(n,"ARX")=""
"RTN","IBCEF11",50,0)
 ;      -- AND --
"RTN","IBCEF11",51,0)
 ;   IBXDATA(n,"AUX")='AUX' node of the procedure entry
"RTN","IBCEF11",52,0)
 ;
"RTN","IBCEF11",53,0)
 ; Also returns IBXDATA(n,"CPLNK") = soft link to corresponding entry in PROCEDURES multiple of file 399
"RTN","IBCEF11",54,0)
 ;
"RTN","IBCEF11",55,0)
 N IB,IBI,IBJ,IBFLD,IBDXI,IBXIEN,Z,IBXTRA,IBRX,IBRX0,IBRX1,Z0,Z1
"RTN","IBCEF11",56,0)
 ;
"RTN","IBCEF11",57,0)
 K ^TMP($J,"IBITEM")
"RTN","IBCEF11",58,0)
 S ^TMP($J,"IBITEM")=""
"RTN","IBCEF11",59,0)
 ; Build diagnosis array if not already built
"RTN","IBCEF11",60,0)
 I $O(^TMP("IBXSAVE",$J,"DX",IBIFN,""))="",$O(^IBA(362.3,"AIFN"_IBIFN,"")) D
"RTN","IBCEF11",61,0)
 .N Z,IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCEF11",62,0)
 .S Z="" F  S Z=$O(IBXDATA(Z)) K:$O(IBXDATA(0))=""&(Z="") IBXDATA Q:Z=""  S:$P(IBXDATA(Z),U,2) ^TMP("IBXSAVE",$J,"DX",IBIFN,$P(IBXDATA(Z),U,2))=Z
"RTN","IBCEF11",63,0)
 ;
"RTN","IBCEF11",64,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IB("U")=$G(^("U")),IB("U1")=$G(^("U1"))
"RTN","IBCEF11",65,0)
 S IBI="" F  S IBI=$O(^TMP("IBXSAVE",$J,"DX",IBIFN,IBI)) Q:IBI=""  S IBDXI(IBI)=^(IBI)
"RTN","IBCEF11",66,0)
 I '$G(IBPRINT) D RVCE^IBCF23(IBIFN,IBIFN)
"RTN","IBCEF11",67,0)
 I $G(IBPRINT) D RVCE^IBCF23(,IBIFN)
"RTN","IBCEF11",68,0)
 ; Returns IBFLD(24) = begin date ^ end date ^ pos ^ tos ^
"RTN","IBCEF11",69,0)
 ;     proc/bedsection/revenue code ^ dx pointer ^ unit charge ^
"RTN","IBCEF11",70,0)
 ;     units ^ modifiers ^ purchased charge amount ^ anesthesia minutes ^
"RTN","IBCEF11",71,0)
 ;     emergency indicator ^ soft pointer to PROCEDURES multiple in file 399 ^
"RTN","IBCEF11",72,0)
 ;     NDC ^ Units
"RTN","IBCEF11",73,0)
 ;         IBFLD(24,n,type,item)=""
"RTN","IBCEF11",74,0)
 ;         IBFLD(24,n_"A") = revenue code abbreviation if no procedure
"RTN","IBCEF11",75,0)
 ;         IBFLD(24,n,"AUX") = 'AUX' node of line item 
"RTN","IBCEF11",76,0)
 ;         IBFLD(24,n,"RX") = soft pointer to file 362.4 from 'item' fld
"RTN","IBCEF11",77,0)
 ;                            (can be null)
"RTN","IBCEF11",78,0)
 ;
"RTN","IBCEF11",79,0)
 D SET^IBCSC5A(IBIFN,.IBRX) ;prescriptions
"RTN","IBCEF11",80,0)
 ; IBRX1(ien 362.4)=RX#^drug ien^NDC^refil #^(re)fil date^qty^days^chrge
"RTN","IBCEF11",81,0)
 I IBRX S IBRX="" F  S IBRX=$O(IBRX(IBRX)) Q:IBRX=""  S IBRX0=0 F  S IBRX0=$O(IBRX(IBRX,IBRX0)) Q:'IBRX0  D
"RTN","IBCEF11",82,0)
 . N IBRXH
"RTN","IBCEF11",83,0)
 . S IBRXH=IBRX(IBRX,IBRX0)
"RTN","IBCEF11",84,0)
 . ; **IB*2.0*432** added _U_$P(IBRXH,U,9) (Rx Date) to Output Formatter
"RTN","IBCEF11",85,0)
 . S IBRX1(+IBRXH)=IBRX_U_$P(IBRXH,U,2)_U_$P(IBRXH,U,5)_U_$P(IBRXH,U,7)_U_IBRX0_U_$P(IBRXH,U,4)_U_$P(IBRXH,U,3)_U_$P(IBRXH,U,6)_U_+IBRXH_U_$P(IBRXH,U,8)_U_$P(IBRXH,U,9)
"RTN","IBCEF11",86,0)
 K IBRX
"RTN","IBCEF11",87,0)
 ;
"RTN","IBCEF11",88,0)
 ; for EDI, remove any $0 line items from the IBFLD array before 
"RTN","IBCEF11",89,0)
 ; dropping down into the next loop (IB*2*371)
"RTN","IBCEF11",90,0)
 ; Start IB*2.0*447 BI - Code removed to allow 0 dollars to print.
"RTN","IBCEF11",91,0)
 ;I '$G(IBPRINT) D
"RTN","IBCEF11",92,0)
 ;. NEW IBZ,IBI,Z
"RTN","IBCEF11",93,0)
 ;. M IBZ=IBFLD K IBFLD
"RTN","IBCEF11",94,0)
 ;. S (IBI,Z)=0
"RTN","IBCEF11",95,0)
 ;. F  S IBI=$O(IBZ(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",96,0)
 ;.. I $P(IBZ(24,IBI),U,7)*$P(IBZ(24,IBI),U,8)'>0 Q
"RTN","IBCEF11",97,0)
 ;.. S Z=Z+1
"RTN","IBCEF11",98,0)
 ;.. M IBFLD(24,Z)=IBZ(24,IBI)
"RTN","IBCEF11",99,0)
 ;.. S IBFLD(24)=Z
"RTN","IBCEF11",100,0)
 ;.. Q
"RTN","IBCEF11",101,0)
 ;. Q
"RTN","IBCEF11",102,0)
 ; End IB*2.0*447 BI
"RTN","IBCEF11",103,0)
 ;
"RTN","IBCEF11",104,0)
 S IBI=0
"RTN","IBCEF11",105,0)
 F  S IBI=$O(IBFLD(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",106,0)
 . S IBRX1=0
"RTN","IBCEF11",107,0)
 . S IBXDATA(IBI)=$P(IBFLD(24,IBI),U)_U_$P(IBFLD(24,IBI),U,$S($P(IBFLD(24,IBI),U,2)=""&'$G(IBPRINT):1,1:2))
"RTN","IBCEF11",108,0)
 . S $P(IBXDATA(IBI),U,3,5)=$P(IBFLD(24,IBI),U,3,5)
"RTN","IBCEF11",109,0)
 . S $P(IBXDATA(IBI),U,6)=$S($D(IBFLD(24,IBI_"X")):"CJ",1:"HC")
"RTN","IBCEF11",110,0)
 . S $P(IBXDATA(IBI),U,7,13)=$P(IBFLD(24,IBI),U,6,12)
"RTN","IBCEF11",111,0)
 . S $P(IBXDATA(IBI),U,14)=+$$ISLAB(IBXDATA(IBI))
"RTN","IBCEF11",112,0)
 . ; MRD;IB*2.0*516 - Added NDC and Units to line level of claim,
"RTN","IBCEF11",113,0)
 . ; pieces 14 & 15 of IBFLD, pieces 15 & 16 of IBXDATA. Print
"RTN","IBCEF11",114,0)
 . ; in Box 24 by setting in IBXDATA(IBI,"TEXT").
"RTN","IBCEF11",115,0)
 . S $P(IBXDATA(IBI),U,15,16)=$P(IBFLD(24,IBI),U,14,15)
"RTN","IBCEF11",116,0)
 . I $P(IBFLD(24,IBI),U,14)'="" S IBXDATA(IBI,"TEXT")="N4"_$P(IBFLD(24,IBI),U,14)_" UN"_$P(IBFLD(24,IBI),U,15)
"RTN","IBCEF11",117,0)
 . ;
"RTN","IBCEF11",118,0)
 . I $D(IBFLD(24,IBI,"RX")) D  ;Rx
"RTN","IBCEF11",119,0)
 .. S IBRX1=1
"RTN","IBCEF11",120,0)
 .. I $P($G(IBFLD(24,IBI,"AUX")),U,8)'="" S $P(IBFLD(24,IBI,"AUX"),U,8)="",$P(IBFLD(24,IBI,"AUX"),U,9)=""  ;No free text allowed for rx's
"RTN","IBCEF11",121,0)
 .. I $D(IBRX1(+IBFLD(24,IBI,"RX"))) D  Q  ;Soft link exists
"RTN","IBCEF11",122,0)
 ...D ZERO^IBRXUTL(+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2))
"RTN","IBCEF11",123,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(+IBFLD(24,IBI,"RX")),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2),.01)),1,30)
"RTN","IBCEF11",124,0)
 ... K IBRX1(+IBFLD(24,IBI,"RX"))
"RTN","IBCEF11",125,0)
 ... ; No soft link - must find the first Rx with the same charge
"RTN","IBCEF11",126,0)
 .. S IBRX="" F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  I +$P(IBRX1(IBRX),U,8)=+$P(IBXDATA(IBI),U,8) D  Q
"RTN","IBCEF11",127,0)
 ... D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",128,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX) Q
"RTN","IBCEF11",129,0)
 ... Q
"RTN","IBCEF11",130,0)
 .. Q
"RTN","IBCEF11",131,0)
 . ;
"RTN","IBCEF11",132,0)
 . ; MRD;IB*2.0*516 - If additional service line comments to appear in
"RTN","IBCEF11",133,0)
 . ; Box 24, concatenate to front if something (NDC) is already there.
"RTN","IBCEF11",134,0)
 . I $G(IBFLD(24,IBI,"AUX"))'="" D
"RTN","IBCEF11",135,0)
 .. I $G(IBPRINT),$P(IBFLD(24,IBI,"AUX"),U,8)'="" D
"RTN","IBCEF11",136,0)
 ... I $G(IBXDATA(IBI,"TEXT"))'="" S IBXDATA(IBI,"TEXT")=$E($P(IBFLD(24,IBI,"AUX"),U,8)_" "_IBXDATA(IBI,"TEXT"),1,59)
"RTN","IBCEF11",137,0)
 ... E  S IBXDATA(IBI,"TEXT")=$P(IBFLD(24,IBI,"AUX"),U,8)
"RTN","IBCEF11",138,0)
 ... S $P(IBFLD(24,IBI,"AUX"),U,8)=""
"RTN","IBCEF11",139,0)
 ... Q
"RTN","IBCEF11",140,0)
 .. S IBXDATA(IBI,"AUX")=IBFLD(24,IBI,"AUX")
"RTN","IBCEF11",141,0)
 .. Q
"RTN","IBCEF11",142,0)
 . ;
"RTN","IBCEF11",143,0)
 . I $G(IBPRINT) D
"RTN","IBCEF11",144,0)
 .. ; START IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCEF11",145,0)
 .. ; I '$P(IBXDATA(IBI),U,8),'$G(IBXDATA(IBI,"RX")) D  Q
"RTN","IBCEF11",146,0)
 .. I $P(IBXDATA(IBI),U,8)="",'$G(IBXDATA(IBI,"RX")) D  Q
"RTN","IBCEF11",147,0)
 ... ; END IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCEF11",148,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",149,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS < #PROCEDURES, THEY MUST BE ="
"RTN","IBCEF11",150,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",151,0)
 ... Q
"RTN","IBCEF11",152,0)
 .. ;
"RTN","IBCEF11",153,0)
 .. I $G(IBFLD(24,IBI_"A"))'="" D  Q
"RTN","IBCEF11",154,0)
 ... S IBXDATA(IBI,"A")=IBFLD(24,IBI_"A")
"RTN","IBCEF11",155,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",156,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS > #PROCEDURES, THEY MUST BE=: "_IBFLD(24,IBI_"A")
"RTN","IBCEF11",157,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",158,0)
 ... Q
"RTN","IBCEF11",159,0)
 .. ;
"RTN","IBCEF11",160,0)
 .. S IBRX=$G(IBXDATA(IBI,"RX"))
"RTN","IBCEF11",161,0)
 .. I IBRX'="" D  ;Format Rx detail
"RTN","IBCEF11",162,0)
 ... N Z
"RTN","IBCEF11",163,0)
 ... S Z=$P(IBRX,U)
"RTN","IBCEF11",164,0)
 ... S Z=$S(Z'="":"Rx#"_Z_" ",1:"RX: ")
"RTN","IBCEF11",165,0)
 ... S IBXDATA(IBI,"TEXT")=Z_$S($P(IBRX,U,3)'="":"NDC: "_$P(IBRX,U,3),1:"NOC: "_$P(IBRX,U,2))_" Qty: "_$P(IBRX,U,6)_" Days: "_$P(IBRX,U,7)
"RTN","IBCEF11",166,0)
 ... S $P(IBXDATA(IBI,"AUX"),U,9)="N4"   ; service line comment qualifier for RX's
"RTN","IBCEF11",167,0)
 ... Q
"RTN","IBCEF11",168,0)
 .. Q
"RTN","IBCEF11",169,0)
 . S IBXDATA(IBI,"CPLNK")=$P(IBFLD(24,IBI),U,13)
"RTN","IBCEF11",170,0)
 . I '$G(IBPRINT) D COBLINE^IBCEU6(IBIFN,IBI,.IBXDATA,,.IBXTRA)
"RTN","IBCEF11",171,0)
 . Q
"RTN","IBCEF11",172,0)
 ;
"RTN","IBCEF11",173,0)
 I $G(IBPRINT) D
"RTN","IBCEF11",174,0)
 . S IBRX=0 F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  D
"RTN","IBCEF11",175,0)
 .. S IBI=+$O(IBXDATA(""),-1)+1
"RTN","IBCEF11",176,0)
 .. S IBXDATA(IBI)=$$DATE($P(IBRX1(IBRX),U,5))
"RTN","IBCEF11",177,0)
 .. S IBXDATA(IBI,"TEXT")="**** ERROR - NO PROC LINK TO REV CODE FOR DRUG: RX#: "_$P(IBRX1(IBRX),U)_"  NDC #: "_$P(IBRX1(IBRX),U,3)
"RTN","IBCEF11",178,0)
 .. I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",179,0)
 .. S IBXDATA(IBI,"ARX")=""
"RTN","IBCEF11",180,0)
 .. D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",181,0)
 .. S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX)
"RTN","IBCEF11",182,0)
 .. Q
"RTN","IBCEF11",183,0)
 . Q
"RTN","IBCEF11",184,0)
 ;
"RTN","IBCEF11",185,0)
 I '$G(IBPRINT),$D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,0) ;Handle bundled/unbundled lines
"RTN","IBCEF11",186,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCEF11",187,0)
 Q
"RTN","IBCEF11",188,0)
 ;
"RTN","IBCEF11",189,0)
ISLAB(LDATA) ; Returns 0/1 if line item data indicates the item is a lab (1)
"RTN","IBCEF11",190,0)
 ; 'LAB' is defined here as type of service = 5
"RTN","IBCEF11",191,0)
 Q $E($P(LDATA,U,4))="5"
"RTN","IBCEF11",192,0)
 ;
"RTN","IBCEF11",193,0)
FMT(DATA,DLEN,FLEN) ; Returns a string in DATA with a max length of DLEN
"RTN","IBCEF11",194,0)
 ;  and a field length of FLEN
"RTN","IBCEF11",195,0)
 Q $E($E(DATA,1,DLEN)_$J("",FLEN),1,FLEN)
"RTN","IBCEF11",196,0)
 ;
"RTN","IBCEF11",197,0)
DATE(X,DEL) ;  Returns FM date in X as MMxDDxYYYY  where x=DEL
"RTN","IBCEF11",198,0)
 S DEL=$G(DEL)
"RTN","IBCEF11",199,0)
 S X=$$DATE^IBCF2(X,1,1)
"RTN","IBCEF11",200,0)
 I X'="" S X=$E(X,1,2)_DEL_$E(X,3,4)_DEL_$E(X,5,8)
"RTN","IBCEF11",201,0)
 Q X
"RTN","IBCEF11",202,0)
 ;
"RTN","IBCEF11",203,0)
BATCH() ; Sets up record for and stores/returns the next batch number
"RTN","IBCEF11",204,0)
 N NUM,FAC,DO,DD,DLAYGO,DIC,X,Y
"RTN","IBCEF11",205,0)
 ;Keep latest batch number for view/print edi bill extract data option
"RTN","IBCEF11",206,0)
 I $D(IBVNUM) S NUM=IBVNUM G BATCHQ
"RTN","IBCEF11",207,0)
 ;Check for batch resubmit - if yes, use same number as original batch
"RTN","IBCEF11",208,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,3)=1 S NUM=$P(^($J),U) G BATCHQ
"RTN","IBCEF11",209,0)
 L +^IBA(364.1,0):5 I '$T Q 0
"RTN","IBCEF11",210,0)
 S FAC=+$P($$SITE^VASITE(),U,3),NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF11",211,0)
 I $D(^IBA(364.1,+NUM,0)),$P(^(0),U,2)="" F  D  Q:'NUM!($P($G(^IBA(364.1,+NUM,0)),U,2)'="")
"RTN","IBCEF11",212,0)
 . I $D(^IBA(364.1,NUM,0)) S DA=NUM,DIK="^IBA(364.1," D ^DIK
"RTN","IBCEF11",213,0)
 . S NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF11",214,0)
 F  S NUM=$S($P(NUM,FAC,2)'="":NUM+1,1:FAC_"0000001") Q:'$D(^IBA(364.1,"B",NUM))
"RTN","IBCEF11",215,0)
 K DO,DD S DIC="^IBA(364.1,",DLAYGO=364.1,DIC(0)="L",X=NUM D FILE^DICN K DD,DO I Y'>0 S NUM=0
"RTN","IBCEF11",216,0)
 L -^IBA(364.1,0)
"RTN","IBCEF11",217,0)
BATCHQ Q NUM
"RTN","IBCEF11",218,0)
 ;
"RTN","IBCEF11",219,0)
GETLDAT(IBXIEN) ; Extract data for 837 transmission LDAT record
"RTN","IBCEF11",220,0)
 ; IBXIEN - ien in file 399
"RTN","IBCEF11",221,0)
 ; Sets up IBXSAVE("LDAT",n) array:
"RTN","IBCEF11",222,0)
 ; Attachment report type ^ Attachment report transmission code ^ Attachment control number ^ 
"RTN","IBCEF11",223,0)
 ; OB Anesthesia Additional Units ^ Purchase Service Provider ID ^ Purchase Service Amount ^
"RTN","IBCEF11",224,0)
 N CPIEN,FTYPE,IBXDATA,IDS,IBIDS,NODE1,PSAMNT,PSPID,Z,PCE1,LINE
"RTN","IBCEF11",225,0)
 I '+$G(IBXIEN) Q
"RTN","IBCEF11",226,0)
 K IBXSAVE("LDAT")
"RTN","IBCEF11",227,0)
 S FTYPE=$$FT^IBCEF(IBXIEN)
"RTN","IBCEF11",228,0)
 I FTYPE=2 D OUTPT(IBXIEN,0)
"RTN","IBCEF11",229,0)
 I FTYPE=3 D HOS^IBCEF2(IBXIEN)
"RTN","IBCEF11",230,0)
 D ALLIDS^IBCEFP(IBXIEN,.IDS,1)
"RTN","IBCEF11",231,0)
 S (PSPID,PSAMNT)=""
"RTN","IBCEF11",232,0)
 ; IB*2.0*473/TAZ - Convert PROVIDER code to function call to PSID^IBCEFP
"RTN","IBCEF11",233,0)
 I $$SUB1OK^IBCEP8A(IBXIEN),(FTYPE=2) D
"RTN","IBCEF11",234,0)
 . D PSID^IBCEFP(IBXIEN,.IDS,.IBIDS)
"RTN","IBCEF11",235,0)
 . S PSPID=$G(IBIDS(0)) I PSPID="" S PSPID=$P($G(IBIDS(1)),U,1)
"RTN","IBCEF11",236,0)
 ;IB*2.0*473/TAZ - END
"RTN","IBCEF11",237,0)
 S Z=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D
"RTN","IBCEF11",238,0)
 . S CPIEN=+$G(IBXDATA(Z,"CPLNK")) ;I 'CPIEN Q
"RTN","IBCEF11",239,0)
 . I FTYPE=2,$$SUB1OK^IBCEP8A(IBXIEN) S PSAMNT=$$DOLLAR^IBCEFG1($P($G(IBXDATA(Z)),U,11))
"RTN","IBCEF11",240,0)
 . S (PCE1,NODE1)=""
"RTN","IBCEF11",241,0)
 . I CPIEN D
"RTN","IBCEF11",242,0)
 . . S NODE1=$G(^DGCR(399,IBXIEN,"CP",CPIEN,1))
"RTN","IBCEF11",243,0)
 . . S PCE1=$$GET1^DIQ(399.0304,CPIEN_","_IBXIEN_",",71)
"RTN","IBCEF11",244,0)
 . . Q
"RTN","IBCEF11",245,0)
 . ; MRD;IB*2.0*516 - Added addl. procedure description as piece 7 
"RTN","IBCEF11",246,0)
 . ; of IBXSAVE, which will exist only if the procedure ends in '99'
"RTN","IBCEF11",247,0)
 . ; or is an 'NOC/NOS' procedure.
"RTN","IBCEF11",248,0)
 . S IBXSAVE("LDAT",Z)=PCE1_U_$P(NODE1,U,3)_U_$P(NODE1,U)_U_$P(NODE1,U,5)_U_$G(PSPID)_U_$G(PSAMNT)_U_$P(NODE1,U,4)
"RTN","IBCEF11",249,0)
 . Q
"RTN","IBCEF11",250,0)
 Q
"RTN","IBCEF21")
0^51^B23973664^B23776552
"RTN","IBCEF21",1,0)
IBCEF21 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS CONTINUED ; 3/9/11 1:12pm
"RTN","IBCEF21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,296,371,389,448,516**;21-MAR-94;Build 123
"RTN","IBCEF21",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF21",4,0)
 ;
"RTN","IBCEF21",5,0)
COID(IBIFN) ; Claim office ID
"RTN","IBCEF21",6,0)
 N IBCOID,IBCOID1,IBIN
"RTN","IBCEF21",7,0)
 S IBIN=$$CURR^IBCEF2(IBIFN),IBCOID1="",IBCOID=$P($$ADDRESS^IBCNSC0(IBIN,.11,5),U,11)
"RTN","IBCEF21",8,0)
 ;
"RTN","IBCEF21",9,0)
 I IBIN D
"RTN","IBCEF21",10,0)
 . I $D(^IBA(364.2,"C",IBIFN)) S IBCOID1=$P($$ADDRESS^IBCNSC0(IBIN,.18,5),U,11) Q  ;Rx
"RTN","IBCEF21",11,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,5)<3 S IBCOID1=$P($$ADDRESS^IBCNSC0(IBIN,.12,5),U,11) Q  ;Inpt
"RTN","IBCEF21",12,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,5)'<3 S IBCOID1=$P($$ADDRESS^IBCNSC0(IBIN,.16,5),U,11) Q  ;Outpt
"RTN","IBCEF21",13,0)
 ;
"RTN","IBCEF21",14,0)
 Q $S(IBCOID1'="":IBCOID1,1:IBCOID)
"RTN","IBCEF21",15,0)
 ;
"RTN","IBCEF21",16,0)
ESGHPST(IBIFN,COB) ; return insureds employment status if the bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF21",17,0)
 ; ESGHP FLAG (2.312,2.1) ^ the employment status (2.312,2.11)
"RTN","IBCEF21",18,0)
 ;
"RTN","IBCEF21",19,0)
 N PPOL,DFN,X,Y S Y=""
"RTN","IBCEF21",20,0)
 S PPOL=$$PPOL^IBCEF2($G(IBIFN),$G(COB)),DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,2)
"RTN","IBCEF21",21,0)
 I +PPOL,+DFN S X=$G(^DPT(DFN,.312,+PPOL,2)) S Y=+$P(X,U,10)_U_$P(X,U,11)
"RTN","IBCEF21",22,0)
 Q Y
"RTN","IBCEF21",23,0)
 ;
"RTN","IBCEF21",24,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if the bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF21",25,0)
 ; ESGHP FLAG (2.312,2.1) ^ employer name (2.312,2.015) ^ employer city (2.312,2.05) 
"RTN","IBCEF21",26,0)
 ;                        ^ employer state abbr (2.312,2.06) ^ employer state ifn  (2.312,2.06)
"RTN","IBCEF21",27,0)
 ;
"RTN","IBCEF21",28,0)
 N PPOL,DFN,X,Y S Y=""
"RTN","IBCEF21",29,0)
 S PPOL=$$PPOL^IBCEF2($G(IBIFN),$G(COB)),DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,2)
"RTN","IBCEF21",30,0)
 I +PPOL,+DFN S X=$G(^DPT(DFN,.312,+PPOL,2)) S Y=+$P(X,U,10)_U_$P(X,U,9)_U_$P(X,U,5)_U_$P($G(^DIC(5,+$P(X,U,6),0)),U,2)_U_$P(X,U,6)
"RTN","IBCEF21",31,0)
 Q Y
"RTN","IBCEF21",32,0)
 ;
"RTN","IBCEF21",33,0)
REMARKS(IBIFN) ; Compile array of bill remarks
"RTN","IBCEF21",34,0)
 ;IBIFN = bill ien
"RTN","IBCEF21",35,0)
 N Z,Z0,Z1,IBARRAY,IBSM
"RTN","IBCEF21",36,0)
 S Z=0
"RTN","IBCEF21",37,0)
 ;S:$P($G(^DGCR(399,IBIFN,"U1")),U,2) Z=Z+1,Z0=$P(^("U1"),U,2),IBXDATA(Z)="OFFSET AMOUNT: "_"$"_+$P(Z0,".")_"."_$E($P(Z0,".",2)_"00",1,2)
"RTN","IBCEF21",38,0)
 S:$P($G(^DGCR(399,IBIFN,"U1")),U,8)'="" Z=Z+1,IBXDATA(Z)=$P(^("U1"),U,8) ;Bill comment on bill
"RTN","IBCEF21",39,0)
 S Z0=$G(^DGCR(399,IBIFN,0)),Z1=$G(^DGCR(399.3,+$P(Z0,U,7),0))
"RTN","IBCEF21",40,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF21",41,0)
 I $P($G(IBARRAY),U,2) D  ;Prosthetics
"RTN","IBCEF21",42,0)
 . S Z0=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1,IBXDATA(Z)="Prosthetic: "_$E($$PINB^IBCSC5B(+IBARRAY(Z0,Z1)),1,39)_" "_$E(Z0,4,5)_"/"_$E(Z0,6,7)_"/"_$E(Z0,1,2)
"RTN","IBCEF21",43,0)
 Q
"RTN","IBCEF21",44,0)
 ;
"RTN","IBCEF21",45,0)
CREM(IBIFN) ; Compile array of bill remarks common to every bill
"RTN","IBCEF21",46,0)
 ;IBIFN = bill ien
"RTN","IBCEF21",47,0)
 N Z
"RTN","IBCEF21",48,0)
 S Z=0
"RTN","IBCEF21",49,0)
 S:$P($G(^IBE(350.9,1,1)),U,4)'="" Z=Z+1,IBXDATA(Z)=$P(^(1),U,4) ;Site specific 'every bill' comment
"RTN","IBCEF21",50,0)
 Q
"RTN","IBCEF21",51,0)
 ;
"RTN","IBCEF21",52,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF21",53,0)
 ; IBIFN = bill ien
"RTN","IBCEF21",54,0)
 ; NOOUTCK = flag that will:
"RTN","IBCEF21",55,0)
 ;          (1) no check for inpt episode overlap for outpt
"RTN","IBCEF21",56,0)
 ;          (0 or null) performs check for inpt episode overlap for outpt
"RTN","IBCEF21",57,0)
 ;                                      
"RTN","IBCEF21",58,0)
 ; Returns IBXDATA = fileman date format
"RTN","IBCEF21",59,0)
 N Z,Z0,Z1
"RTN","IBCEF21",60,0)
 S Z=$G(^DGCR(399,IBIFN,0)),Z1=$P($G(^("U")),U,20),Z0=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF21",61,0)
 S IBXDATA=$S(Z0&$P(Z,U,8):$P($G(^DGPT(+$P(Z,U,8),0)),U,2),1:"")
"RTN","IBCEF21",62,0)
 S:'IBXDATA IBXDATA=$P(Z,U,3)_$S(Z0&(Z1<25):"."_$E("0",$L(Z1))_Z1,1:"")
"RTN","IBCEF21",63,0)
 ; Check to see if outpt episode (date in event date) overlaps inpt
"RTN","IBCEF21",64,0)
 ;  episode - use admit date if it does
"RTN","IBCEF21",65,0)
 I 'Z0,IBXDATA,'$G(NOOUTCK) D
"RTN","IBCEF21",66,0)
 . N VAINDT,VAIN,DFN
"RTN","IBCEF21",67,0)
 . S VAINDT=IBXDATA,DFN=$P($G(^DGCR(399,IBIFN,0)),U,2)
"RTN","IBCEF21",68,0)
 . D INP^VADPT S IBXDATA=+VAIN(7) S:'IBXDATA IBXDATA=""
"RTN","IBCEF21",69,0)
 I 'IBXDATA,'Z0 S IBXDATA=$$SERVDT^IBCEF(IBIFN,,2)
"RTN","IBCEF21",70,0)
 Q
"RTN","IBCEF21",71,0)
 ;
"RTN","IBCEF21",72,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF21",73,0)
 ; IBIFN = bill ien
"RTN","IBCEF21",74,0)
 N Z,Z0
"RTN","IBCEF21",75,0)
 S Z=$$INPAT^IBCEF(IBIFN,1),Z0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF21",76,0)
 I Z S IBXDATA=+$G(^DGPT(+$P(Z0,U,8),70)) S:'IBXDATA IBXDATA=$P(Z0,U,16)
"RTN","IBCEF21",77,0)
 I 'Z N VAINDT,VAIN,DFN S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2) D INP^VADPT I VAIN(1) S IBXDATA=+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF21",78,0)
 Q
"RTN","IBCEF21",79,0)
 ;
"RTN","IBCEF21",80,0)
INSSECID(IBIFN,TYPE,SEQ) ; Extract subscriber and patient prim/sec ID's
"RTN","IBCEF21",81,0)
 ; IBIFN required
"RTN","IBCEF21",82,0)
 ; TYPE is either "PAT" or "SUB" to indicate we need to extract either
"RTN","IBCEF21",83,0)
 ;          patient or subscriber ID information.  Default="SUB".
"RTN","IBCEF21",84,0)
 ; SEQ is the insurance sequence# (1,2,3).  Default is current ins seq#.
"RTN","IBCEF21",85,0)
 ;
"RTN","IBCEF21",86,0)
 ; Output:
"RTN","IBCEF21",87,0)
 ; Function returns an 8-piece string as follows.
"RTN","IBCEF21",88,0)
 ;   [1] primary qualifier
"RTN","IBCEF21",89,0)
 ;   [2] primary ID
"RTN","IBCEF21",90,0)
 ;   [3] secondary qual(1)
"RTN","IBCEF21",91,0)
 ;   [4] secondary ID(1)
"RTN","IBCEF21",92,0)
 ;   [5] secondary qual(2)
"RTN","IBCEF21",93,0)
 ;   [6] secondary ID(2)
"RTN","IBCEF21",94,0)
 ;   [7] secondary qual(3)
"RTN","IBCEF21",95,0)
 ;   [8] secondary ID(3)
"RTN","IBCEF21",96,0)
 ;
"RTN","IBCEF21",97,0)
 NEW DATA,DFN,POL,IB0,IB5,REL
"RTN","IBCEF21",98,0)
 S DATA=""
"RTN","IBCEF21",99,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN G INSSX
"RTN","IBCEF21",100,0)
 I $G(TYPE)="" S TYPE="SUB"               ; default type of ID's to get
"RTN","IBCEF21",101,0)
 I '$F(".PAT.SUB.","."_TYPE_".") G INSSX
"RTN","IBCEF21",102,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)     ; default current ins seq#
"RTN","IBCEF21",103,0)
 I '$F(".1.2.3.","."_SEQ_".") G INSSX
"RTN","IBCEF21",104,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2) I 'DFN G INSSX
"RTN","IBCEF21",105,0)
 S POL=+$P($G(^DGCR(399,IBIFN,"M")),U,SEQ+11) I 'POL G INSSX
"RTN","IBCEF21",106,0)
 ;IB*2.0*516/baa - Use HIPAA compliant fields
"RTN","IBCEF21",107,0)
 ;S IB0=$G(^DPT(DFN,.312,POL,0)) I IB0="" G INSSX ;516 - baa
"RTN","IBCEF21",108,0)
 S IB0=$$ZND^IBCNS1(DFN,POL) I IB0="" G INSSX  ;516 - baa
"RTN","IBCEF21",109,0)
 S IB5=$G(^DPT(DFN,.312,POL,5))
"RTN","IBCEF21",110,0)
 S REL=+$P(IB0,U,16)                      ; pat rel to insured
"RTN","IBCEF21",111,0)
 S $P(DATA,U,1)="MI"
"RTN","IBCEF21",112,0)
 S $P(DATA,U,2)=$P(IB0,U,2)               ; subscriber primary ID 
"RTN","IBCEF21",113,0)
 S $P(DATA,U,3,8)=$P(IB5,U,2,7)           ; subscriber secondary data
"RTN","IBCEF21",114,0)
 I TYPE="PAT",REL'=1 D
"RTN","IBCEF21",115,0)
 . S $P(DATA,U,2)=$P(IB5,U,1)             ; patient primary ID
"RTN","IBCEF21",116,0)
 . S $P(DATA,U,3,8)=$P(IB5,U,8,13)        ; patient secondary data
"RTN","IBCEF21",117,0)
 . Q
"RTN","IBCEF21",118,0)
 ;
"RTN","IBCEF21",119,0)
 S DATA=$$SCRUB(DATA)     ; scrub the data
"RTN","IBCEF21",120,0)
INSSX ;
"RTN","IBCEF21",121,0)
 Q DATA
"RTN","IBCEF21",122,0)
 ;
"RTN","IBCEF21",123,0)
SCRUB(DATA) ; Scrub the 8-piece string gathered above
"RTN","IBCEF21",124,0)
 NEW PCE
"RTN","IBCEF21",125,0)
 ;
"RTN","IBCEF21",126,0)
 ; make sure you can't have an ID without a qualifier or a qualifier
"RTN","IBCEF21",127,0)
 ; without an ID.  Check all 4 pairs.
"RTN","IBCEF21",128,0)
 F PCE=1,3,5,7 D
"RTN","IBCEF21",129,0)
 . I $P(DATA,U,PCE)'="",$P(DATA,U,PCE+1)'="" Q
"RTN","IBCEF21",130,0)
 . S ($P(DATA,U,PCE),$P(DATA,U,PCE+1))=""
"RTN","IBCEF21",131,0)
 . Q
"RTN","IBCEF21",132,0)
 ;
"RTN","IBCEF21",133,0)
 ; fill in secondary gaps.  If Set1 and Set2 are blank, but Set3 exists
"RTN","IBCEF21",134,0)
 ; then move Set3 to Set1 and delete Set3.
"RTN","IBCEF21",135,0)
 I $P(DATA,U,3)="",$P(DATA,U,5)="",$P(DATA,U,7)'="" D
"RTN","IBCEF21",136,0)
 . S $P(DATA,U,3)=$P(DATA,U,7),$P(DATA,U,4)=$P(DATA,U,8)
"RTN","IBCEF21",137,0)
 . S ($P(DATA,U,7),$P(DATA,U,8))=""
"RTN","IBCEF21",138,0)
 . Q
"RTN","IBCEF21",139,0)
 ;
"RTN","IBCEF21",140,0)
 ; fill in secondary gaps more generically.
"RTN","IBCEF21",141,0)
 ; If Set(n) is blank, but Set(n+1) exists, then move it up.
"RTN","IBCEF21",142,0)
 F PCE=3,5 D
"RTN","IBCEF21",143,0)
 . I $P(DATA,U,PCE)="",$P(DATA,U,PCE+2)'="" D
"RTN","IBCEF21",144,0)
 .. S $P(DATA,U,PCE)=$P(DATA,U,PCE+2)
"RTN","IBCEF21",145,0)
 .. S $P(DATA,U,PCE+1)=$P(DATA,U,PCE+3)
"RTN","IBCEF21",146,0)
 .. S ($P(DATA,U,PCE+2),$P(DATA,U,PCE+3))=""
"RTN","IBCEF21",147,0)
 .. Q
"RTN","IBCEF21",148,0)
 . Q
"RTN","IBCEF21",149,0)
 ;
"RTN","IBCEF21",150,0)
 Q DATA
"RTN","IBCEF21",151,0)
 ;
"RTN","IBCEF22")
0^21^B90984490^B79219296
"RTN","IBCEF22",1,0)
IBCEF22 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;06-FEB-96
"RTN","IBCEF22",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,135,155,309,349,389,432,488,516**;21-MAR-94;Build 123
"RTN","IBCEF22",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF22",4,0)
 ;
"RTN","IBCEF22",5,0)
 ;  OVERFLOW FROM ROUTINE IBCEF2
"RTN","IBCEF22",6,0)
HOS(IBIFN) ; Extract rev codes for episode billed on a UB-04 into IBXDATA
"RTN","IBCEF22",7,0)
 ; IBIFN = bill ien
"RTN","IBCEF22",8,0)
 ; Format: IBXDATA(n) =
"RTN","IBCEF22",9,0)
 ;  rev cd ptr ^ CPT CODE ptr ^ unit chg ^ units ^ tot charge
"RTN","IBCEF22",10,0)
 ;    ^ tot uncov ^ FL49 value
"RTN","IBCEF22",11,0)
 ;    ^ ien of rev code multiple entry(s) (separated by ";")
"RTN","IBCEF22",12,0)
 ;    ^ modifiers specific to rev code/proc (separated by ",")
"RTN","IBCEF22",13,0)
 ;    ^ rev code date, if it can be determined by a corresponding proc
"RTN","IBCEF22",14,0)
 ;    ^ NDC from "CP" node of claim ^ Units from "CP" node
"RTN","IBCEF22",15,0)
 ;
"RTN","IBCEF22",16,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF22",17,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF22",18,0)
 ;      line in the first '^' piece followed by the '0' node of file
"RTN","IBCEF22",19,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF22",20,0)
 ;       COB = COB seq # of adjustment's ins co, m = seq #
"RTN","IBCEF22",21,0)
 ;         -- AND --
"RTN","IBCEF22",22,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF22",23,0)
 ;           the '0' node for each subordinate entry of file
"RTN","IBCEF22",24,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837)
"RTN","IBCEF22",25,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF22",26,0)
 ;
"RTN","IBCEF22",27,0)
 ;         -- AND --
"RTN","IBCEF22",28,0)
 ;    IBXDATA(n,"CPLNK") = soft link to corresponding entry in PROCEDURES multiple of file 399
"RTN","IBCEF22",29,0)
 ;
"RTN","IBCEF22",30,0)
 N IBDA,IBCOMB,IBINPAT,IBLN,IBX,IBY,IBZ,IBS,IBSS,IBXTRA,IBX1,IBXS,IBP,IBPO,IBP1,IBDEF,Z,Z0,Z1,ZX,QQ,IBMOD,LST
"RTN","IBCEF22",31,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF22",32,0)
 I 'IBINPAT D F^IBCEF("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF22",33,0)
 S IBDEF=$G(IBZ),LST=""
"RTN","IBCEF22",34,0)
 ;
"RTN","IBCEF22",35,0)
 ; Loop through lines of claim beneath ^DGCR(399,IBIFN,"CP") and build
"RTN","IBCEF22",36,0)
 ; the array IBP to be used below.
"RTN","IBCEF22",37,0)
 ;    IBP(Procedure ^ Modifiers, Print Order, Line#) = Procedure Date
"RTN","IBCEF22",38,0)
 ;
"RTN","IBCEF22",39,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"CP",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ D
"RTN","IBCEF22",40,0)
 . S IBP(+$P(IBZ,U)_U_$$GETMOD^IBEFUNC(IBIFN,IBDA,1),$S($P(IBZ,U,4):$P(IBZ,U,4),1:999),IBDA)=$P(IBZ,U,2)
"RTN","IBCEF22",41,0)
 ;
"RTN","IBCEF22",42,0)
 ; Loop through the revenue codes beneath ^DGCR(399,IBIFN,"RC") and
"RTN","IBCEF22",43,0)
 ; build the array IBX to be used below.
"RTN","IBCEF22",44,0)
 ;    IBX(" "_Revenue Code, Print Order, Revenue Line#) =
"RTN","IBCEF22",45,0)
 ;          ^DGCR(399.2, Revenue Code IEN, 0)
"RTN","IBCEF22",46,0)
 ;    IBX(" "_Revenue Code, Print Order, Revenue Line#, "DT") = Procedure Date
"RTN","IBCEF22",47,0)
 ;    IBX(" "_Revenue Code, Print Order, Revenue Line#, "MOD") = Modifiers
"RTN","IBCEF22",48,0)
 ;
"RTN","IBCEF22",49,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ S IBMOD="" D
"RTN","IBCEF22",50,0)
 . S IBX=$G(^DGCR(399.2,+IBZ,0)),IBX1="",IBPO=0
"RTN","IBCEF22",51,0)
 . ; Auto-added procedure charge
"RTN","IBCEF22",52,0)
 . I $P(IBZ,U,10)=4,$P(IBZ,U,11) D  ; Soft link to proc
"RTN","IBCEF22",53,0)
 .. S Z=$G(^DGCR(399,IBIFN,"CP",$P(IBZ,U,11),0))
"RTN","IBCEF22",54,0)
 .. Q:Z=""
"RTN","IBCEF22",55,0)
 .. S ZX=+Z_U_$$GETMOD^IBEFUNC(IBIFN,$P(IBZ,U,11),1)
"RTN","IBCEF22",56,0)
 .. Q:'$O(IBP(ZX,0))&'$O(IBP1(ZX,0))
"RTN","IBCEF22",57,0)
 .. I $P(IBZ,U,6) Q:$S($P(Z,U)'["ICPT":1,1:+$P(Z,U)'=$P(IBZ,U,6))
"RTN","IBCEF22",58,0)
 .. S Z0=$S($D(IBP(ZX)):$O(IBP(ZX,0)),1:$O(IBP1(ZX,0)))
"RTN","IBCEF22",59,0)
 .. S:'Z0 Z0=999
"RTN","IBCEF22",60,0)
 .. Q:'$D(IBP(ZX,+Z0,$P(IBZ,U,11)))&'$D(IBP1(ZX,+Z0,$P(IBZ,U,11)))
"RTN","IBCEF22",61,0)
 .. I '$D(IBP1(ZX,+Z0,$P(IBZ,U,11))) S IBP1(ZX,+Z0,$P(IBZ,U,11))=IBP(ZX,+Z0,$P(IBZ,U,11)) K IBP(ZX,+Z0,$P(IBZ,U,11))
"RTN","IBCEF22",62,0)
 .. S IBX1=$P(Z,U,2),IBPO=+Z0,IBMOD=$P(ZX,U,2)
"RTN","IBCEF22",63,0)
 . ; Manually added charge with a procedure
"RTN","IBCEF22",64,0)
 . I $P(IBZ,U,6),$S($P(IBZ,U,10)=4:'$P(IBZ,U,11),1:1),+$O(IBP($P(IBZ,U,6)))=$P(IBZ,U,6) D
"RTN","IBCEF22",65,0)
 .. ; No direct link, but a proc exists on rev code and in procedure mult without and then with modifiers
"RTN","IBCEF22",66,0)
 .. S ZX=$O(IBP($P(IBZ,U,6)))
"RTN","IBCEF22",67,0)
 .. F QQ=1,2 Q:IBPO  S Z="" F  S Z=$O(IBP(ZX,Z),-1) Q:'Z!(IBPO)  S Z0=0 F  S Z0=$O(IBP(ZX,Z,Z0)) Q:'Z0  S Z1=$G(^DGCR(399,IBIFN,"CP",Z0,0)) D  Q:IBPO
"RTN","IBCEF22",68,0)
 ... ; Ignore if not a CPT or a modifier exists and this is first pass
"RTN","IBCEF22",69,0)
 ... S IBMOD=$$GETMOD^IBEFUNC(IBIFN,Z0,1)
"RTN","IBCEF22",70,0)
 ... Q:$S($P(Z1,U)'["ICPT":1,QQ=1:IBMOD'="",1:0)
"RTN","IBCEF22",71,0)
 ... S IBPO=+$P(Z1,U,4),IBX1=$P(Z1,U,2)
"RTN","IBCEF22",72,0)
 ... K IBP(+Z1_U_IBMOD,Z,Z0)
"RTN","IBCEF22",73,0)
 . ;
"RTN","IBCEF22",74,0)
 . I IBX'="" D  ; revenue code is valid
"RTN","IBCEF22",75,0)
 .. S LST=$S(LST="":900,1:LST+1)
"RTN","IBCEF22",76,0)
 .. F Z=LST:1 S Z0=$S(IBPO:IBPO,$D(IBX(" "_$P(IBX,U),Z)):0,1:Z) I Z0 S (LST,IBPO)=Z0 Q
"RTN","IBCEF22",77,0)
 .. S IBX(" "_$P(IBX,U),IBPO,IBDA)=IBX,IBX(" "_$P(IBX,U),IBPO,IBDA,"DT")=$S(IBX1:IBX1,1:IBDEF),IBX(" "_$P(IBX,U),IBPO,IBDA,"MOD")=IBMOD
"RTN","IBCEF22",78,0)
 ;
"RTN","IBCEF22",79,0)
 ; Loop through revenue codes in IBX and build the array IBX1.
"RTN","IBCEF22",80,0)
 ;
"RTN","IBCEF22",81,0)
 S IBS="" F  S IBS=$O(IBX(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX(IBS,IBPO)) Q:'IBPO  D
"RTN","IBCEF22",82,0)
 . S IBDA=0 F  S IBDA=$O(IBX(IBS,IBPO,IBDA)) Q:'IBDA  S IBX=$G(IBX(IBS,IBPO,IBDA)),IBZ=$G(^DGCR(399,IBIFN,"RC",IBDA,0)) I IBX'="" D
"RTN","IBCEF22",83,0)
 .. ;S IBXS=$P(IBZ,U,2)_U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD"))
"RTN","IBCEF22",84,0)
 .. S IBXS=U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD")) ;combine same proc and modifiers regardless of rate
"RTN","IBCEF22",85,0)
 .. S:IBPO'<900&'$$ACCRV($P(IBS," ",2))&$S(IBINPAT:$P(IBZ,U,6),1:1) IBCOMB(IBS,IBXS,IBPO)=IBDA
"RTN","IBCEF22",86,0)
 .. S:'$D(IBX1(IBS,IBPO,IBXS,1)) IBX1(IBS,IBPO,IBXS,1)=IBX,IBX1(IBS,IBPO,IBXS,2)=IBZ
"RTN","IBCEF22",87,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U)=$P($G(IBX1(IBS,IBPO,IBXS)),U)+$P(IBZ,U,3)
"RTN","IBCEF22",88,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U,2)=$P($G(IBX1(IBS,IBPO,IBXS)),U,2)+$P(IBZ,U,4)
"RTN","IBCEF22",89,0)
 .. S IBX1(IBS,IBPO,IBXS,"DT")=$G(IBX(IBS,IBPO,IBDA,"DT")),IBX1(IBS,IBPO,IBXS,"IEN")=$G(IBX1(IBS,IBPO,IBXS,"IEN"))_$S($G(IBX1(IBS,IBPO,IBXS,"IEN")):";",1:"")_IBDA
"RTN","IBCEF22",90,0)
 ;
"RTN","IBCEF22",91,0)
 S IBS="" F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=899 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  D  ; Check to combine like rev codes without print order
"RTN","IBCEF22",92,0)
 . N Q,Q0,Q1,Z,Z0,Z1,Z2,IBZ1,IBZ2
"RTN","IBCEF22",93,0)
 . S Z=""
"RTN","IBCEF22",94,0)
 . N IBACC
"RTN","IBCEF22",95,0)
 . F  S Z=$O(IBX1(IBS,IBPO,Z)) Q:Z=""  S Q=IBPO F  S Q=$O(IBCOMB(IBS,Z,Q)) Q:'Q  I Q'=IBPO S IBZ1=$G(IBX1(IBS,IBPO,Z,1)),IBZ2=$G(IBX1(IBS,IBPO,Z,2)) D
"RTN","IBCEF22",96,0)
 .. Q:$G(IBX1(IBS,IBPO,Z,1))'=$G(IBX1(IBS,Q,Z,1))
"RTN","IBCEF22",97,0)
 .. S Q1=1,IBACC=$$ACCRV(+$P(IBS," ",2))
"RTN","IBCEF22",98,0)
 .. F Q0=1,5:1:7,10:1:13,15 D  Q:'Q1
"RTN","IBCEF22",99,0)
 ... I IBACC Q:Q0=5!(Q0>6)
"RTN","IBCEF22",100,0)
 ... I (Q0=11!(Q0=15))&($P($G(IBX1(IBS,Q,Z,2)),U,10)=3) Q
"RTN","IBCEF22",101,0)
 ... I Q0=5,'IBINPAT Q
"RTN","IBCEF22",102,0)
 ... I $P($G(IBX1(IBS,IBPO,Z,2)),U,Q0)'=$P($G(IBX1(IBS,Q,Z,2)),U,Q0) S Q1=0
"RTN","IBCEF22",103,0)
 .. Q:'Q1
"RTN","IBCEF22",104,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,3)=$P(IBX1(IBS,IBPO,Z,2),U,3)+$P(IBX1(IBS,Q,Z,2),U,3)
"RTN","IBCEF22",105,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,4)=$P(IBX1(IBS,IBPO,Z,2),U,4)+$P(IBX1(IBS,Q,Z,2),U,4)
"RTN","IBCEF22",106,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,9)=$P(IBX1(IBS,IBPO,Z,2),U,9)+$P(IBX1(IBS,Q,Z,2),U,9)
"RTN","IBCEF22",107,0)
 .. S IBX1(IBS,IBPO,Z)=$P(IBX1(IBS,IBPO,Z,2),U,3)_U_$P(IBX1(IBS,IBPO,Z,2),U,4)
"RTN","IBCEF22",108,0)
 .. S IBX1(IBS,IBPO,Z,"IEN")=IBX1(IBS,IBPO,Z,"IEN")_";"_IBX1(IBS,Q,Z,"IEN")
"RTN","IBCEF22",109,0)
 .. K IBX1(IBS,Q,Z)
"RTN","IBCEF22",110,0)
 ;
"RTN","IBCEF22",111,0)
 D SPLIT  ; 488 ; baa
"RTN","IBCEF22",112,0)
 ;
"RTN","IBCEF22",113,0)
 ; Loop through IBX1 and build the array IBXDATA. Everything in the
"RTN","IBCEF22",114,0)
 ; array IBXDATA comes from the array IBX1.
"RTN","IBCEF22",115,0)
 ;
"RTN","IBCEF22",116,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",117,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  S IBSS="" F  S IBSS=$O(IBX1(IBS,IBPO,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",118,0)
 . S IBX=$G(IBX1(IBS,IBPO,IBSS,1)),IBZ=$G(IBX1(IBS,IBPO,IBSS,2))
"RTN","IBCEF22",119,0)
 . S IBLN=$G(IBLN)+1,IBXDATA(IBLN)=$P(IBX,U)_U_$P(IBZ,U,6)_U_$P(IBZ,U,2)_U_+IBX1(IBS,IBPO,IBSS)_U_+$P(IBX1(IBS,IBPO,IBSS),U,2),$P(IBXDATA(IBLN),U,10)=$G(IBX1(IBS,IBPO,IBSS,"DT"))
"RTN","IBCEF22",120,0)
 . S $P(IBXDATA(IBLN),U,6)=$P(IBZ,U,9),$P(IBXDATA(IBLN),U,7)=$P(IBZ,U,13),$P(IBXDATA(IBLN),U,8)=$G(IBX1(IBS,IBPO,IBSS,"IEN")),$P(IBXDATA(IBLN),U,9)=$P($P(IBSS,U,3),",",1,2)
"RTN","IBCEF22",121,0)
 . S IBXDATA(IBLN,"CPLNK")=$$RC2CP(IBIFN,$P($P(IBXDATA(IBLN),U,8),";"))
"RTN","IBCEF22",122,0)
 . ;
"RTN","IBCEF22",123,0)
 . ; MRD;IB*2.0*516 - Added NDC and Units to line level of claim.
"RTN","IBCEF22",124,0)
 . I IBXDATA(IBLN,"CPLNK") S $P(IBXDATA(IBLN),U,11,12)=$TR($P($G(^DGCR(399,IBIFN,"CP",IBXDATA(IBLN,"CPLNK"),1)),U,7,8),"-")
"RTN","IBCEF22",125,0)
 . ;
"RTN","IBCEF22",126,0)
 . ; Extract line lev COB data for sec or tert bill
"RTN","IBCEF22",127,0)
 . I $$COBN^IBCEF(IBIFN)>1 D COBLINE^IBCEU6(IBIFN,IBLN,.IBXDATA,,.IBXTRA) I $D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,1) ;Handle bundled/unbundled
"RTN","IBCEF22",128,0)
 ;
"RTN","IBCEF22",129,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN))!$D(^IBA(362.5,"AIFN"_IBIFN)) D
"RTN","IBCEF22",130,0)
 . N IBARRAY,IBX,IBZ,IBRX,IBLCNT
"RTN","IBCEF22",131,0)
 . S IBLCNT=0
"RTN","IBCEF22",132,0)
 . ; Print prescriptions, prosthetics on front of UB-04
"RTN","IBCEF22",133,0)
 . D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBCEF22",134,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",135,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",136,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=""
"RTN","IBCEF22",137,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)="PRESCRIPTION REFILLS:",IBLCNT=2
"RTN","IBCEF22",138,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBRX=IBARRAY(IBX,IBY) D
"RTN","IBCEF22",139,0)
 ... D ZERO^IBRXUTL(+$P(IBRX,U,2))
"RTN","IBCEF22",140,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBRX,U,6):"$"_$FN($P(IBRX,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$G(^TMP($J,"IBDRUG",+$P(IBRX,U,2),.01))
"RTN","IBCEF22",141,0)
 ... S IBZ=$S(+$P(IBRX,U,4):"QTY: "_$P(IBRX,U,4)_" ",1:"")_$S(+$P(IBRX,U,3):"for "_$P(IBRX,U,3)_" days supply ",1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",142,0)
 ... S IBZ=$S($P(IBRX,U,5)'="":"NDC #: "_$P(IBRX,U,5),1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",143,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCEF22",144,0)
 ... Q
"RTN","IBCEF22",145,0)
 . ;
"RTN","IBCEF22",146,0)
 . D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF22",147,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",148,0)
 .. S IBLCNT=0
"RTN","IBCEF22",149,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",150,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=""
"RTN","IBCEF22",151,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)="PROSTHETIC REFILLS:",IBLCNT=2
"RTN","IBCEF22",152,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCEF22",153,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($$PINB^IBCSC5B(+IBARRAY(IBX,IBY)),1,54)
"RTN","IBCEF22",154,0)
 Q
"RTN","IBCEF22",155,0)
 ;
"RTN","IBCEF22",156,0)
ACCRV(X) ; Returns 1 if X is an accomodation RC, 0 if not
"RTN","IBCEF22",157,0)
 Q ((X'<100&(X'>219))!(X=224))
"RTN","IBCEF22",158,0)
 ;
"RTN","IBCEF22",159,0)
RC2CP(IBIFN,IBRCIEN) ; returns "CP" multiple pointer that corresponds to a given "RC" multiple pointer in file 399
"RTN","IBCEF22",160,0)
 ; IBIFN - ien in file 399, top level
"RTN","IBCEF22",161,0)
 ; IBRCIEN, ien in sub-file 399.042 (REVENUE CODE)
"RTN","IBCEF22",162,0)
 ;
"RTN","IBCEF22",163,0)
 ; returns pointer to sub-file 399.0304 (PROCEDURES) or 0 if no valid pointer can be found.
"RTN","IBCEF22",164,0)
 ;
"RTN","IBCEF22",165,0)
 N IBRC0,IBCPIEN
"RTN","IBCEF22",166,0)
 I +IBIFN'>0 Q 0
"RTN","IBCEF22",167,0)
 I +IBRCIEN'>0 Q 0
"RTN","IBCEF22",168,0)
 S IBRC0=$G(^DGCR(399,IBIFN,"RC",IBRCIEN,0)),IBCPIEN=0
"RTN","IBCEF22",169,0)
 I $P(IBRC0,U,10)=4 S IBCPIEN=+$P(IBRC0,U,11) ; type = CPT
"RTN","IBCEF22",170,0)
 I $P(IBRC0,U,10)=3 S IBCPIEN=+$P(IBRC0,U,15) ; type = RX
"RTN","IBCEF22",171,0)
 I 'IBCPIEN D
"RTN","IBCEF22",172,0)
 . S IBRC=$P(IBRC0,U,6)
"RTN","IBCEF22",173,0)
 . N IBCPTIEN S IBCPTIEN=IBRC
"RTN","IBCEF22",174,0)
 . F  S IBCPTIEN=$O(^DGCR(399,IBIFN,"CP","B",IBCPTIEN)) Q:(+IBCPTIEN'=IBRC)!IBCPIEN  D
"RTN","IBCEF22",175,0)
 .. N OK,Z S OK="",Z=""
"RTN","IBCEF22",176,0)
 .. S Z=$O(^DGCR(399,IBIFN,"CP","B",IBCPTIEN,Z)) Q:'Z!OK  D
"RTN","IBCEF22",177,0)
 ... N CNTR S CNTR=0
"RTN","IBCEF22",178,0)
 ... F  S CNTR=$O(IBXDATA(CNTR)) Q:'CNTR!'OK  D
"RTN","IBCEF22",179,0)
 .... I $G(IBXDATA(CNTR,"CPLNK"))=Z S OK=0 Q
"RTN","IBCEF22",180,0)
 ... I OK="" S OK=1,IBCPIEN=Z
"RTN","IBCEF22",181,0)
 I IBCPIEN,'$D(^DGCR(399,IBIFN,"CP",IBCPIEN)) S IBCPIEN=0
"RTN","IBCEF22",182,0)
 Q IBCPIEN
"RTN","IBCEF22",183,0)
 ;
"RTN","IBCEF22",184,0)
SPLIT    ; Split codes into multiple lines as needed => baa ; 488
"RTN","IBCEF22",185,0)
 ; The max line $ amount for a printed claim is less than the max line $ amount for an electronically transmitted claim.
"RTN","IBCEF22",186,0)
 ; However, since the clearinghouse can drop to print for a myriad of reasons at any time, the lines may need to be split
"RTN","IBCEF22",187,0)
 ; so they can all fit on a printed claim line just in case. In addition, since some claims are sent to primary payers as 
"RTN","IBCEF22",188,0)
 ; electronic claims but printed for secondary claims, the lines numbers need to be the same going out to ensure the 
"RTN","IBCEF22",189,0)
 ; COB data is correct applied (previous payments adj, etc are applied to the correct line.)
"RTN","IBCEF22",190,0)
 N IBS,IBSS,DATA,CHRG,UNTS,TOT,LNS,MOD,CPT,LNK,RLNK,IBSS1,LTOT,LUNT,REC,LST,FST
"RTN","IBCEF22",191,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",192,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  D
"RTN","IBCEF22",193,0)
 . S LST=$O(IBX1(IBS,""),-1)  ;we have to go through each level so must reset for each
"RTN","IBCEF22",194,0)
 . S LNK=0
"RTN","IBCEF22",195,0)
 . F  S LNK=$O(IBX1(IBS,LNK)) Q:('LNK!(LNK>LST))  S IBSS="" F  S IBSS=$O(IBX1(IBS,LNK,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",196,0)
 .. S DATA=IBX1(IBS,LNK,IBSS,2)
"RTN","IBCEF22",197,0)
 .. S CHRG=$P(DATA,U,2)
"RTN","IBCEF22",198,0)
 .. S UNTS=$P(DATA,U,3)
"RTN","IBCEF22",199,0)
 .. I UNTS=1 Q  ; if only one unit can't split
"RTN","IBCEF22",200,0)
 .. S TOT=UNTS*CHRG
"RTN","IBCEF22",201,0)
 .. I TOT<=9999999.99 Q  ; if the total is less tham max we don't need to split
"RTN","IBCEF22",202,0)
 .. S LNS=TOT\9999999.99
"RTN","IBCEF22",203,0)
 .. S MOD=TOT#9999999.99
"RTN","IBCEF22",204,0)
 .. I MOD S LNS=LNS+1
"RTN","IBCEF22",205,0)
 .. I CHRG>4999999.995 S LNS=UNTS  ; if the charge is greater than half the mas can't put more than one on a line.
"RTN","IBCEF22",206,0)
 .. S LUNT=UNTS\LNS
"RTN","IBCEF22",207,0)
 .. S MOD=UNTS#LNS
"RTN","IBCEF22",208,0)
 .. I MOD S LUNT=LUNT+1
"RTN","IBCEF22",209,0)
 .. F L=1:1:LNS D
"RTN","IBCEF22",210,0)
 ... N Q
"RTN","IBCEF22",211,0)
 ... S Q=$O(IBX1(IBS,""),-1)+1
"RTN","IBCEF22",212,0)
 ... I L=1 S Q=LNK
"RTN","IBCEF22",213,0)
 ... M IBX1(IBS,Q,IBSS)=IBX1(IBS,LNK,IBSS)
"RTN","IBCEF22",214,0)
 ... S $P(IBX1(IBS,Q,IBSS,2),U,3)=LUNT,$P(IBX1(IBS,Q,IBSS,2),U,4)=LUNT*CHRG
"RTN","IBCEF22",215,0)
 ... S $P(IBX1(IBS,Q,IBSS),U,1)=LUNT,$P(IBX1(IBS,Q,IBSS),U,2)=LUNT*CHRG
"RTN","IBCEF22",216,0)
 ... I L>1 S $P(IBX1(IBS,Q,IBSS,2),U,9)=""
"RTN","IBCEF22",217,0)
 ... S UNTS=UNTS-LUNT,LUNT=$S(UNTS>LUNT:LUNT,1:UNTS)
"RTN","IBCEF22",218,0)
 Q
"RTN","IBCEF3")
0^163^B47786755^B47162871
"RTN","IBCEF3",1,0)
IBCEF3 ;ALB/TMP - FORMATTER SPECIFIC BILL FLD FUNCTIONS ;17-JUNE-96
"RTN","IBCEF3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,121,51,152,210,155,348,349,389,488,516**;21-MAR-94;Build 123
"RTN","IBCEF3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF3",4,0)
 ;
"RTN","IBCEF3",5,0)
MPG(PG,FLDS,FORM) ; Set static flds on pages after page 1
"RTN","IBCEF3",6,0)
 ;        for either 1500 or UB
"RTN","IBCEF3",7,0)
 ;  PG = page #
"RTN","IBCEF3",8,0)
 ; FORM= 1 for UB, otherwise for 1500
"RTN","IBCEF3",9,0)
 ;  FLDS: array passed by reference and containing lines OR
"RTN","IBCEF3",10,0)
 ;        line/column from pg 1 to repeat on subsequent pages
"RTN","IBCEF3",11,0)
 ;        Format: FLDS(LINE,COL)  or  FLDS(LINE) for whole line
"RTN","IBCEF3",12,0)
 ;   CMS-1500:        LINES 1-5,7-43,57 from col 1 to 50, 58-63
"RTN","IBCEF3",13,0)
 ;         UB:        see CKPGUB for lines and columns
"RTN","IBCEF3",14,0)
 ;
"RTN","IBCEF3",15,0)
 N Z,Z0,Z1,LPG
"RTN","IBCEF3",16,0)
 S FORM=$S($G(FORM)=1:3,1:2)
"RTN","IBCEF3",17,0)
 I FORM=2 D  ; print page # on each pg, totals on last page of 1500
"RTN","IBCEF3",18,0)
 . S LPG=+$O(^TMP("IBXDATA",$J,IBXREC,""),-1)
"RTN","IBCEF3",19,0)
 . S Z="[Page "_PG_" of "_LPG_"]"
"RTN","IBCEF3",20,0)
 . S Z=$$FO^IBCNEUT1(Z,17,"R")
"RTN","IBCEF3",21,0)
 . D SETGBL^IBCEFG(PG,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",22,0)
 . I PG=2 S Z=$P(Z,"[",1)_"[Page 1 of "_LPG_"]" D SETGBL^IBCEFG(1,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",23,0)
 . I LPG=PG D
"RTN","IBCEF3",24,0)
 .. ;
"RTN","IBCEF3",25,0)
 .. ; esg - IB*2*348 - update dollar format for last page of 1500
"RTN","IBCEF3",26,0)
 .. ;
"RTN","IBCEF3",27,0)
 .. D SETGBL^IBCEFG(PG,57,51,$$DOL^IBCEF77($G(IBXSAVE("TOT")),9),.IBXSIZE)
"RTN","IBCEF3",28,0)
 .. D SETGBL^IBCEFG(PG,57,62,$$DOL^IBCEF77($G(IBXSAVE("PAID")),8),.IBXSIZE)
"RTN","IBCEF3",29,0)
 .. ;IB*2.0*516/DRF - Blank Box 30 on last page of multi-page claims
"RTN","IBCEF3",30,0)
 .. ;D SETGBL^IBCEFG(PG,57,71,$$DOL^IBCEF77($G(IBXSAVE("BDUE")),8),.IBXSIZE)
"RTN","IBCEF3",31,0)
 .. K IBXSAVE("PTOT"),IBXSAVE("TOT"),IBXSAVE("BDUE"),IBXSAVE("PAID")
"RTN","IBCEF3",32,0)
 ;
"RTN","IBCEF3",33,0)
 S Z=0 F  S Z=$O(FLDS(Z)) Q:'Z  D
"RTN","IBCEF3",34,0)
 . I $O(FLDS(Z,""))="" D  Q  ;repeats line
"RTN","IBCEF3",35,0)
 .. S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) Q:'Z0  S Z1=$G(^(Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",36,0)
 . S Z0=0 F  S Z0=$O(FLDS(Z,Z0)) Q:'Z0  S Z1=$G(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",37,0)
 . I FORM=2,LPG'=PG D
"RTN","IBCEF3",38,0)
 .. D SETGBL^IBCEFG(PG,57,51,"",.IBXSIZE)
"RTN","IBCEF3",39,0)
 .. D SETGBL^IBCEFG(PG,57,71,"",.IBXSIZE)
"RTN","IBCEF3",40,0)
 Q
"RTN","IBCEF3",41,0)
 ;
"RTN","IBCEF3",42,0)
NONSERV(Z,Z0) ; Set variable if non-service/non-text data is present for box
"RTN","IBCEF3",43,0)
 ;  24 of CMS-1500
"RTN","IBCEF3",44,0)
 ; Z = sequence of IBXSAVE being processed
"RTN","IBCEF3",45,0)
 ; Z0 = sequnce within IBXDATA to indicate actual line #
"RTN","IBCEF3",46,0)
 I $P(IBXSAVE("BOX24",Z),U)="" S IBXSAVE("NON-SERV",Z0)=""
"RTN","IBCEF3",47,0)
 Q
"RTN","IBCEF3",48,0)
 ;
"RTN","IBCEF3",49,0)
PG(VAL,LNCT) ;Set next pg for CMS-1500 lines
"RTN","IBCEF3",50,0)
 ;VAL = value of fld
"RTN","IBCEF3",51,0)
 ;LNCT = line # from IBXSAVE("BOX24") array
"RTN","IBCEF3",52,0)
 N IBP,IBL
"RTN","IBCEF3",53,0)
 S IBP=LNCT\12+(LNCT#12>0),IBL=LNCT-(12*(IBP-1))-1
"RTN","IBCEF3",54,0)
 I IBL'<0 S VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA)) D SETGBL^IBCEFG(IBP,IBXLN+IBL,IBXCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",55,0)
 K IBXDATA(LNCT)
"RTN","IBCEF3",56,0)
 Q
"RTN","IBCEF3",57,0)
 ;
"RTN","IBCEF3",58,0)
MPGUB(PG,OFFSET,VAL,IBLN,IBCOL,NOFORM) ; Set up pages > 1 for UB overflows
"RTN","IBCEF3",59,0)
 ; PG = Page # to set (REQUIRED)
"RTN","IBCEF3",60,0)
 ; OFFSET = offset from first line this should be extracted into
"RTN","IBCEF3",61,0)
 ;          0 = first line (REQUIRED)
"RTN","IBCEF3",62,0)
 ; VAL = value to set (REQUIRED)
"RTN","IBCEF3",63,0)
 ; IBLN = line to set data at (if null, uses IBXLN)
"RTN","IBCEF3",64,0)
 ; IBCOL = column to set data at (if null, uses IBXCOL)
"RTN","IBCEF3",65,0)
 ; NOFORM = don't format, just output data as passed
"RTN","IBCEF3",66,0)
 ; Assumes formatter IBXLN,IBXCOL variables exist
"RTN","IBCEF3",67,0)
 ;
"RTN","IBCEF3",68,0)
 I $G(IBLN)="" S IBLN=IBXLN
"RTN","IBCEF3",69,0)
 I $G(IBCOL)="" S IBCOL=IBXCOL
"RTN","IBCEF3",70,0)
 S:'$G(NOFORM) VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA))
"RTN","IBCEF3",71,0)
 D SETGBL^IBCEFG(PG,IBLN+OFFSET,IBCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",72,0)
 Q
"RTN","IBCEF3",73,0)
 ;
"RTN","IBCEF3",74,0)
CKREV(CT,VAL) ; Check too many rev code lines to fit on page
"RTN","IBCEF3",75,0)
 ; This procedure is only called when CT>22 (i.e. 23 or more)
"RTN","IBCEF3",76,0)
 ;
"RTN","IBCEF3",77,0)
 D MPGUB((CT-1)\22+1,CT-1#22,VAL) ; 22 codes on a single page
"RTN","IBCEF3",78,0)
 Q
"RTN","IBCEF3",79,0)
 ;
"RTN","IBCEF3",80,0)
CKPGUB ; Check to see if multiple UB pages are needed then populate
"RTN","IBCEF3",81,0)
 ; static flds from page 1, add page numbers
"RTN","IBCEF3",82,0)
 ;
"RTN","IBCEF3",83,0)
 N FLDS,LPG,IBPG,IBP,Z,Z0,TOT1,TOT2
"RTN","IBCEF3",84,0)
 ;
"RTN","IBCEF3",85,0)
 S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1),IBP=0
"RTN","IBCEF3",86,0)
 S Z="" F  S Z=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z,Z0)) Q:'Z0  I $G(^(Z0))'="" S IBP=1 Q
"RTN","IBCEF3",87,0)
 I 'IBP K ^TMP("IBXDATA",$J,IBXREC,LPG) S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1) Q:LPG=1
"RTN","IBCEF3",88,0)
 ;
"RTN","IBCEF3",89,0)
 ; Static flds
"RTN","IBCEF3",90,0)
 F Z=2:1:7 S FLDS(Z)=""    ; FL-1 thru FL-9
"RTN","IBCEF3",91,0)
 F Z=1,10,13,19,22,25,28,31 S FLDS(9,Z)=""    ; FL-10 thru FL-17
"RTN","IBCEF3",92,0)
 F Z=13:1:17 S FLDS(Z,1)=""   ; payer address in FL-38
"RTN","IBCEF3",93,0)
 S FLDS(41,46)=""     ; creation date
"RTN","IBCEF3",94,0)
 F Z=42,43,44,45,47,48,49,51,52,53 S FLDS(Z)=""   ; FL-50 thru FL-65
"RTN","IBCEF3",95,0)
 F Z=57,59,61,63 S (FLDS(Z,59),FLDS(Z,72),FLDS(Z,74))=""   ; FL-76-79 ID's
"RTN","IBCEF3",96,0)
 F Z=58,60,62,64 S (FLDS(Z,53),FLDS(Z,71))=""    ; FL-76-79 Names
"RTN","IBCEF3",97,0)
 ;
"RTN","IBCEF3",98,0)
 F IBPG=1:1:LPG D
"RTN","IBCEF3",99,0)
 . ; Add pg # to last line of rev codes if multiple pages
"RTN","IBCEF3",100,0)
 . N IB,IBP
"RTN","IBCEF3",101,0)
 . S IB=$G(^TMP("IBXDATA",$J,IBXREC,IBPG,41,6))
"RTN","IBCEF3",102,0)
 . D MPGUB(IBPG,0,IBPG,41,10,1)
"RTN","IBCEF3",103,0)
 . D MPGUB(IBPG,0,LPG,41,16,1)
"RTN","IBCEF3",104,0)
 . D:IBPG>1 MPG(IBPG,.FLDS,1)
"RTN","IBCEF3",105,0)
 . Q
"RTN","IBCEF3",106,0)
 ; print totals on line 41 of the last page
"RTN","IBCEF3",107,0)
 S (TOT1,TOT2)=0
"RTN","IBCEF3",108,0)
 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z0=^(Z) I +Z0=1 S TOT1=TOT1+$P(Z0,U,7),TOT2=TOT2+$P(Z0,U,8)
"RTN","IBCEF3",109,0)
 ; Make sure totals are only 9 digits => baa IB*2.0*488
"RTN","IBCEF3",110,0)
 S TOT1=$$DOL^IBCEF77(TOT1,9)
"RTN","IBCEF3",111,0)
 S TOT1=$E(TOT1,1,9)
"RTN","IBCEF3",112,0)
 S TOT2=$$DOL^IBCEF77(TOT2,9)
"RTN","IBCEF3",113,0)
 S TOT2=$E(TOT2,1,9)
"RTN","IBCEF3",114,0)
 D MPGUB(IBPG,0,"0001",41,1,1)
"RTN","IBCEF3",115,0)
 D MPGUB(IBPG,0,TOT1,41,61,1)
"RTN","IBCEF3",116,0)
 D MPGUB(IBPG,0,TOT2,41,71,1)
"RTN","IBCEF3",117,0)
 ;End changes => baa IB*2.0*488
"RTN","IBCEF3",118,0)
 Q
"RTN","IBCEF3",119,0)
 ;
"RTN","IBCEF3",120,0)
HCPC(R) ;FORMAT HCPC fld FOR UB (returns formatted value)
"RTN","IBCEF3",121,0)
 ; R = flag for type of fld (1/2/3) being printed in rev code block
"RTN","IBCEF3",122,0)
 Q R  ;No longer used as of patch IB*2.0*51
"RTN","IBCEF3",123,0)
 ;
"RTN","IBCEF3",124,0)
PROS(IBIFN) ; Extract billable prosthetics for 837
"RTN","IBCEF3",125,0)
 N IBARRAY,Z,Z0,CT,PROS
"RTN","IBCEF3",126,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF3",127,0)
 I '$P(IBARRAY,U,2) S CT="" G PROSQ
"RTN","IBCEF3",128,0)
 S Z="",CT=0
"RTN","IBCEF3",129,0)
 F  S Z=$O(IBARRAY(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBARRAY(Z,Z0)) Q:Z0=""  S CT=CT+1 D
"RTN","IBCEF3",130,0)
 .S PROS=$$PINB^IBCSC5B(+IBARRAY(Z,Z0)) ; P389 removed p2 - item ptr file 661
"RTN","IBCEF3",131,0)
 .;date^^short descr^entry # in file 362.5
"RTN","IBCEF3",132,0)
 .S IBXDATA(CT)=Z_U_U_PROS_U_+IBARRAY(Z,Z0)
"RTN","IBCEF3",133,0)
PROSQ Q CT
"RTN","IBCEF3",134,0)
 ;
"RTN","IBCEF3",135,0)
B24(IBXSV,IBIFN,IBNOSHOW) ; Code to execute to set up IBXSV("BOX24") for
"RTN","IBCEF3",136,0)
 ;   print or IBXSAVE("OUTPT") for transmit - called by output formatter
"RTN","IBCEF3",137,0)
 ; IBNOSHOW = 1 if not to show error/warning text lines
"RTN","IBCEF3",138,0)
 ; Pass IBXSV by reference
"RTN","IBCEF3",139,0)
 N IBSUB
"RTN","IBCEF3",140,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEF3",141,0)
 K IBXSV(IBSUB)
"RTN","IBCEF3",142,0)
 I '$D(IBIFN) S IBIFN=$G(IBXIEN)
"RTN","IBCEF3",143,0)
 I IBIFN D F^IBCEF("N-HCFA 1500 SERVICE"_$S(IBSUB["24":"S (PRINT",1:" LINE (EDI")_")",,,IBIFN)
"RTN","IBCEF3",144,0)
 I $S(IBSUB'["24":1,1:'$G(IBNOSHOW)) D
"RTN","IBCEF3",145,0)
 . M IBXSV(IBSUB)=IBXDATA
"RTN","IBCEF3",146,0)
 E  D
"RTN","IBCEF3",147,0)
 . N Z,CT
"RTN","IBCEF3",148,0)
 . S (Z,CT)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  I '$D(IBXDATA(Z,"ARX")) S CT=CT+1 M IBXSV(IBSUB,CT)=IBXDATA(Z)
"RTN","IBCEF3",149,0)
 Q
"RTN","IBCEF3",150,0)
 ;
"RTN","IBCEF3",151,0)
 ; esg - 11/14/03 - Moved the below functions due to space constraints
"RTN","IBCEF3",152,0)
 ;
"RTN","IBCEF3",153,0)
ALLTYP(IBIFN) Q $$ALLTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",154,0)
INSTYP(IBIFN,SEQ) Q $$INSTYP^IBCEF31(IBIFN,$G(SEQ))
"RTN","IBCEF3",155,0)
POLTYP(IBIFN,IBSEQ) Q $$POLTYP^IBCEF31(IBIFN,$G(IBSEQ))
"RTN","IBCEF3",156,0)
ALLPTYP(IBIFN) Q $$ALLPTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",157,0)
 ;
"RTN","IBCEF3",158,0)
FILL(Z) ;
"RTN","IBCEF3",159,0)
 Q
"RTN","IBCEF3",160,0)
 ;
"RTN","IBCEF3",161,0)
 ;  ***** 
"RTN","IBCEF3",162,0)
 ;  The following code performs the multi-page set up for
"RTN","IBCEF3",163,0)
 ;  printing overflow data on the UB
"RTN","IBCEF3",164,0)
 ;  *****
"RTN","IBCEF3",165,0)
 ;
"RTN","IBCEF3",166,0)
XPROC(DATA,CT) ; Output any UB procedures after 6 on new page(s)
"RTN","IBCEF3",167,0)
 ; DATA = output data from IBXSAVE("PROC",CT)
"RTN","IBCEF3",168,0)
 ; CT = array sequence # of the procedure being output
"RTN","IBCEF3",169,0)
 ; Only used for local prints
"RTN","IBCEF3",170,0)
 N OFFSET,PG,COL,PRCODE,Q
"RTN","IBCEF3",171,0)
 S Q=(CT-1)\3#2,OFFSET=$S('Q:0,1:2)
"RTN","IBCEF3",172,0)
 S PG=(CT-1)\6+1,COL=1+(CT-1#3*15)
"RTN","IBCEF3",173,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),58,COL)
"RTN","IBCEF3",174,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),58,COL+9)
"RTN","IBCEF3",175,0)
 Q
"RTN","IBCEF3",176,0)
 ;
"RTN","IBCEF3",177,0)
XDIAG(DATA,CT) ; Output any UB other diagnoses after 8 on new page(s)
"RTN","IBCEF3",178,0)
 ; DATA = output data from IBXSAVE("DX",CT)
"RTN","IBCEF3",179,0)
 ; CT = array sequence # of the diagnosis being output
"RTN","IBCEF3",180,0)
 ; Only used for local prints
"RTN","IBCEF3",181,0)
 N COL,PG
"RTN","IBCEF3",182,0)
 S PG=(CT-1)\8+1,COL=8+(CT-1#9*7)
"RTN","IBCEF3",183,0)
 S DATA=$P($$ICD9^IBACSV(+DATA),U,1)
"RTN","IBCEF3",184,0)
 D MPGUB(PG,0,DATA,56,COL)
"RTN","IBCEF3",185,0)
 Q
"RTN","IBCEF3",186,0)
 ;
"RTN","IBCEF3",187,0)
XVAL(DATA,CT) ; Output any UB value codes after 12 on new page(s)
"RTN","IBCEF3",188,0)
 ; DATA = output data from IBXSAVE("VC",CT)
"RTN","IBCEF3",189,0)
 ; CT = array sequence # of the value code being output
"RTN","IBCEF3",190,0)
 ;
"RTN","IBCEF3",191,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",192,0)
 S PG=(CT-1)\12+1,COL=44+(CT-1#3*13),OFFSET=(CT-(12*(PG-1))-1)\3
"RTN","IBCEF3",193,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),14,COL)
"RTN","IBCEF3",194,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),14,COL+3)
"RTN","IBCEF3",195,0)
 Q
"RTN","IBCEF3",196,0)
 ;
"RTN","IBCEF3",197,0)
XCC(DATA,CT) ; Output any UB condition codes after 11 on new page(s)
"RTN","IBCEF3",198,0)
 ; 11 condition codes per page, starting columns 34 thru 64
"RTN","IBCEF3",199,0)
 ; DATA = output data from IBXSAVE("CC",CT)
"RTN","IBCEF3",200,0)
 ; CT = array sequence # of the condition code being output
"RTN","IBCEF3",201,0)
 ;
"RTN","IBCEF3",202,0)
 N COL,PG
"RTN","IBCEF3",203,0)
 S PG=(CT-1)\11+1,COL=34+(CT-1#11*3)
"RTN","IBCEF3",204,0)
 D MPGUB(PG,0,DATA,9,COL)
"RTN","IBCEF3",205,0)
 Q
"RTN","IBCEF3",206,0)
 ;
"RTN","IBCEF3",207,0)
XOCC(DATA,CT,FL) ; Output any UB occurrence codes after 8 (2 per form
"RTN","IBCEF3",208,0)
 ;  locators 31-34) on new page(s)
"RTN","IBCEF3",209,0)
 ; DATA = data from IBXSAVE("OCC",z) to be output
"RTN","IBCEF3",210,0)
 ; CT = array sequence # of occurrence code being output
"RTN","IBCEF3",211,0)
 ; FL = # of form locator being populated with the occ code
"RTN","IBCEF3",212,0)
 ;
"RTN","IBCEF3",213,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",214,0)
 S PG=(CT-1)\2+1,COL=1+((FL-31)*10),OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",215,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",216,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",217,0)
 Q
"RTN","IBCEF3",218,0)
 ;
"RTN","IBCEF3",219,0)
XOCCS(DATA,CT,FL) ; Output any UB occurrence span codes after 4 on new page(s)
"RTN","IBCEF3",220,0)
 ; DATA = data from IBXSAVE("OCCS",z) to be output
"RTN","IBCEF3",221,0)
 ; CT = array sequence # of occurrence span code being output
"RTN","IBCEF3",222,0)
 ; FL = # of form locator being populated (either FL 35 or 36)
"RTN","IBCEF3",223,0)
 ;
"RTN","IBCEF3",224,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",225,0)
 S PG=(CT-1)\2+1,OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",226,0)
 S COL=41+((FL-35)*17)
"RTN","IBCEF3",227,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",228,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",229,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,3),11,COL+11)
"RTN","IBCEF3",230,0)
 Q
"RTN","IBCEF3",231,0)
 ;
"RTN","IBCEF3",232,0)
FORMAT(VAL,IBX0,IBXDA) ;
"RTN","IBCEF3",233,0)
 I IBX0'="",IBXDA S VAL=$$FORMAT^IBCEFG(VAL,$P($G(^IBA(364.6,+IBXDA,0)),U,9),$P(IBX0,U,7),IBX0)
"RTN","IBCEF3",234,0)
 Q VAL
"RTN","IBCEF3",235,0)
 ;
"RTN","IBCEF3",236,0)
OUTPDT(IBIFN,IBXSAVE,IBXDATA) ; Returns outpatient service to date
"RTN","IBCEF3",237,0)
 ;  formatted CCYYMMDD for UB 837
"RTN","IBCEF3",238,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEF3",239,0)
 ; IBXSAVE = pass by reference for IBXSAVE("INPT") and IBXSAVE("DATE")
"RTN","IBCEF3",240,0)
 ; IBXDATA = array with formatted date or each line item - CCYYMMDD
"RTN","IBCEF3",241,0)
 N Z
"RTN","IBCEF3",242,0)
 S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,10):$$DT^IBCEFG1($P(IBXSAVE("INPT",Z),U,10),,"D8"),1:IBXSAVE("DATE"))
"RTN","IBCEF3",243,0)
 K IBXSAVE("DATE")
"RTN","IBCEF3",244,0)
 Q
"RTN","IBCEF3",245,0)
 ;
"RTN","IBCEF31")
0^164^B14588723^B11345418
"RTN","IBCEF31",1,0)
IBCEF31 ;ALB/ESG - FORMATTER SPECIFIC BILL FLD FUNCTIONS - CONT ;14-NOV-03
"RTN","IBCEF31",2,0)
 ;;2.0;INTEGRATED BILLING;**155,296,349,400,432,488,516**;21-MAR-94;Build 123
"RTN","IBCEF31",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF31",4,0)
 ;
"RTN","IBCEF31",5,0)
 Q
"RTN","IBCEF31",6,0)
 ;
"RTN","IBCEF31",7,0)
ALLTYP(IBIFN) ; returns codes to translate to ALL ins types on a bill
"RTN","IBCEF31",8,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",9,0)
 N IBX,Z
"RTN","IBCEF31",10,0)
 F Z=1:1:3 S $P(IBX,U,Z)=$$INSTYP(IBIFN,Z)
"RTN","IBCEF31",11,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",12,0)
 Q IBX
"RTN","IBCEF31",13,0)
 ;
"RTN","IBCEF31",14,0)
INSTYP(IBIFN,SEQ) ; Returns insurance type code for an ins on a bill
"RTN","IBCEF31",15,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",16,0)
 ; SEQ = sequence (1,2,3) of insurance wanted - prim, second, tert
"RTN","IBCEF31",17,0)
 ;       Default is current insurance co
"RTN","IBCEF31",18,0)
 ;
"RTN","IBCEF31",19,0)
 N IBA,Z
"RTN","IBCEF31",20,0)
 ;
"RTN","IBCEF31",21,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",22,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ))
"RTN","IBCEF31",23,0)
 ;Codes 1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER
"RTN","IBCEF31",24,0)
 I Z D
"RTN","IBCEF31",25,0)
 . S IBA=$P($G(^DIC(36,Z,3)),U,9)
"RTN","IBCEF31",26,0)
 . I $$MCRWNR^IBEFUNC(Z) S IBA=3   ; force Medicare (WNR) definition to be correct
"RTN","IBCEF31",27,0)
 . I IBA="" S IBA=5 ;Default is group policy - 5 if blank
"RTN","IBCEF31",28,0)
 ;
"RTN","IBCEF31",29,0)
 Q $G(IBA)
"RTN","IBCEF31",30,0)
 ;
"RTN","IBCEF31",31,0)
POLTYP(IBIFN,IBSEQ) ; Returns ins electronic policy type code for one
"RTN","IBCEF31",32,0)
 ;   ins policy on a bill
"RTN","IBCEF31",33,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",34,0)
 ; IBSEQ = sequence (1,2,3) of ins policy wanted - prim, second, tert
"RTN","IBCEF31",35,0)
 ;       Default is current insurance co
"RTN","IBCEF31",36,0)
 ;
"RTN","IBCEF31",37,0)
 N IBPLAN,IBPLTYP
"RTN","IBCEF31",38,0)
 ;
"RTN","IBCEF31",39,0)
 I '$G(IBSEQ) S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",40,0)
 S IBPLAN=$G(^IBA(355.3,+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U,18),0))
"RTN","IBCEF31",41,0)
 S IBPLTYP=$P(IBPLAN,U,15)
"RTN","IBCEF31",42,0)
 ;
"RTN","IBCEF31",43,0)
 ; esg - 06/30/05 - IB*2.0*296 - Force Medicare (WNR) to be correct
"RTN","IBCEF31",44,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=2 S IBPLTYP="MB"   ; CMS-1500 ----> Medicare Part B
"RTN","IBCEF31",45,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=3 S IBPLTYP="MA"   ; UB-04 -------> Medicare Part A
"RTN","IBCEF31",46,0)
 ;
"RTN","IBCEF31",47,0)
 I IBPLTYP="" S IBPLTYP="CI" ;Default is commercial - 'CI'
"RTN","IBCEF31",48,0)
 I IBPLTYP="MX" D
"RTN","IBCEF31",49,0)
 . I $P(IBPLAN,U,14)'="","AB"[$P(IBPLAN,U,14) S IBPLTYP="M"_$P(IBPLAN,U,14) Q
"RTN","IBCEF31",50,0)
 . S IBPLTYP="CI"
"RTN","IBCEF31",51,0)
 Q $G(IBPLTYP)
"RTN","IBCEF31",52,0)
 ;
"RTN","IBCEF31",53,0)
ALLPTYP(IBIFN) ; returns insurance policy type codes for ALL ins on a bill
"RTN","IBCEF31",54,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",55,0)
 N IBX,Z S IBX=""
"RTN","IBCEF31",56,0)
 F Z=1:1:3 I $D(^DGCR(399,IBIFN,"I"_Z)) S $P(IBX,U,Z)=$$POLTYP(IBIFN,Z)
"RTN","IBCEF31",57,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",58,0)
 Q IBX
"RTN","IBCEF31",59,0)
 ;
"RTN","IBCEF31",60,0)
PGDX(DXCNT,IBX0,IBXDA,IBXLN,IBXCOL,IBXSIZE,IBXSAVE) ; Subroutine - Checks for Diagnosis Codes (Dx) beyond 
"RTN","IBCEF31",61,0)
 ; the first four, that relate to the current Dx position passed in DXCNT.
"RTN","IBCEF31",62,0)
 ; This subroutine stores the Diagnosis Codes in output global using display parameters (IBXLN,IBXCOL)
"RTN","IBCEF31",63,0)
 ;  THE PAGE IS ALWAYS 1 NOW SO WE DON'T NEED 4 LINES BELOW  BAA *488*
"RTN","IBCEF31",64,0)
 ; If DXCNT is 1, check for Dx's 5,9,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",65,0)
 ; If DXCNT is 2, check for Dx's 6,10,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",66,0)
 ; If DXCNT is 3, check for Dx's 7,11,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",67,0)
 ; If DXCNT is 4, check for Dx's 8,12,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",68,0)
 ;
"RTN","IBCEF31",69,0)
 ; Input: DXCNT= position of current Dx (from 1 to 4)
"RTN","IBCEF31",70,0)
 ;        IBX0= zero-level of file 364.7 of current Dx
"RTN","IBCEF31",71,0)
 ;        IBXDA= ien# of file 364.6 of current Dx
"RTN","IBCEF31",72,0)
 ;        IBXLN IBXCOL= line# & Column# of current Dx
"RTN","IBCEF31",73,0)
 ;        IBXSIZE= size counter
"RTN","IBCEF31",74,0)
 ;        IBXSAVE("DX")= local array with all Dx's on current bill
"RTN","IBCEF31",75,0)
 ;
"RTN","IBCEF31",76,0)
 ;  For patch *488* 
"RTN","IBCEF31",77,0)
 ;  S DXNM = 12  This is the number of diagnosis on a 1500 form  
"RTN","IBCEF31",78,0)
 ;  S IBPG=1  This is the page number.  All 12 print on page 1
"RTN","IBCEF31",79,0)
 N IBPG,VAL
"RTN","IBCEF31",80,0)
 S IBPG=1
"RTN","IBCEF31",81,0)
 I '$D(IBXSAVE("DX",DXCNT)) Q
"RTN","IBCEF31",82,0)
 S VAL=$P($$ICD9^IBACSV(+IBXSAVE("DX",DXCNT)),U)   ; resolve Dx pointer
"RTN","IBCEF31",83,0)
 S VAL=$$FORMAT^IBCEF3(VAL,$G(IBX0),$G(IBXDA))  ;format Dx value
"RTN","IBCEF31",84,0)
 D SETGBL^IBCEFG(IBPG,IBXLN,IBXCOL,VAL,.IBXSIZE) ;store in output global
"RTN","IBCEF31",85,0)
 Q  ;PGDX
"RTN","IBCEF31",86,0)
 ;
"RTN","IBCEF31",87,0)
DXSV(IB,IBXSAVE) ; output formatter subroutine
"RTN","IBCEF31",88,0)
 ; save off DX codes in IBXSAVE("DX")
"RTN","IBCEF31",89,0)
 N Z,IBCT
"RTN","IBCEF31",90,0)
 S (Z,IBCT)=0
"RTN","IBCEF31",91,0)
 F  S Z=$O(IB(Z)) Q:'Z  I $G(IB(Z)) S IBCT=IBCT+1 M IBXSAVE("DX",IBCT)=IB(Z)
"RTN","IBCEF31",92,0)
 Q
"RTN","IBCEF31",93,0)
 ;
"RTN","IBCEF31",94,0)
AUTRF(IBXIEN,IBL,Z) ; returns auth # and referral# if room for both, separated by a space - IB*2.0*432
"RTN","IBCEF31",95,0)
 ; IBXIEN=  claim ien
"RTN","IBCEF31",96,0)
 ; IBL   =  field length-1 to allow for 1 blank space between numbers (28 for CMS 1500, 30 for UB-04)
"RTN","IBCEF31",97,0)
 ; Z     =  1 for PRIMARY, 2 for SECONDARY, 3 for TERTIARY
"RTN","IBCEF31",98,0)
 ; 
"RTN","IBCEF31",99,0)
 N IBXDATA,IBZ
"RTN","IBCEF31",100,0)
 Q:$G(IBXIEN)="" ""
"RTN","IBCEF31",101,0)
 ; if CMS 1500, find current codes
"RTN","IBCEF31",102,0)
 I $G(Z)="",$G(IBL)=28 S Z=$$COBN^IBCEF(IBXIEN)
"RTN","IBCEF31",103,0)
 Q:$G(Z)="" ""
"RTN","IBCEF31",104,0)
 ; if length not defined, default to shortest
"RTN","IBCEF31",105,0)
 S:IBL="" IBL=28
"RTN","IBCEF31",106,0)
 D F^IBCEF("N-"_$P("PRIMARY^SECONDARY^TERTIARY",U,Z)_" AUTH CODE",,,IBXIEN)
"RTN","IBCEF31",107,0)
 D F^IBCEF("N-"_$P("PRIMARY^SECONDARY^TERTIARY",U,Z)_" REFERRAL NUMBER","IBZ",,IBXIEN)
"RTN","IBCEF31",108,0)
 ; if length of auth and referral combined is too long, only return auth code
"RTN","IBCEF31",109,0)
 Q $S(IBZ="":IBXDATA,IBXDATA="":IBZ,$L(IBXDATA)+$L(IBZ)>IBL:IBXDATA,1:IBXDATA_" "_IBZ)
"RTN","IBCEF31",110,0)
 ;
"RTN","IBCEF31",111,0)
GRPNAME(IBIEN,IBXDATA) ; Populate IBXDATA with the Group Name(s).
"RTN","IBCEF31",112,0)
 ; MRD;IB*2.0*516 - Created this procedure as extract code for
"RTN","IBCEF31",113,0)
 ; ^IBA(364.5,199), N-ALL INSURANCE GROUP NAME.
"RTN","IBCEF31",114,0)
 N A,Z
"RTN","IBCEF31",115,0)
 F Z=1:1:3 I $D(^DGCR(399,IBIEN,"I"_Z)) D
"RTN","IBCEF31",116,0)
 . S IBXDATA(Z)=$$POLICY^IBCEF(IBIEN,15,Z) I IBXDATA(Z)'="" Q
"RTN","IBCEF31",117,0)
 . S A=$$POLICY^IBCEF(IBIEN,1,Z)           ; Pull piece 1, Ins. Type.
"RTN","IBCEF31",118,0)
 . I A'="" S IBXDATA(Z)=$P($G(^DIC(36,+A,0)),U)
"RTN","IBCEF31",119,0)
 . Q
"RTN","IBCEF31",120,0)
 Q
"RTN","IBCEF31",121,0)
 ;
"RTN","IBCEF31",122,0)
GRPNUM(IBXIEN,IBXDATA) ; Populate IBXDATA with the Group Number(s).
"RTN","IBCEF31",123,0)
 ; MRD;IB*2.0*516 - Created this procedure as extract code for
"RTN","IBCEF31",124,0)
 ; ^IBA(364.5,200), N-ALL INSURANCE GROUP NUMBER.
"RTN","IBCEF31",125,0)
 N Z
"RTN","IBCEF31",126,0)
 F Z=1:1:3 I $D(^DGCR(399,IBXIEN,"I"_Z)) S IBXDATA(Z)=$$POLICY^IBCEF(IBXIEN,3,Z)
"RTN","IBCEF31",127,0)
 Q
"RTN","IBCEF31",128,0)
 ;
"RTN","IBCEF72")
0^20^B57296289^B54190068
"RTN","IBCEF72",1,0)
IBCEF72 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;8/6/03 10:56am
"RTN","IBCEF72",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320,349,432,516**;21-MAR-94;Build 123
"RTN","IBCEF72",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF72",4,0)
 ;
"RTN","IBCEF72",5,0)
 ;
"RTN","IBCEF72",6,0)
 ;Input:
"RTN","IBCEF72",7,0)
 ;IBINSCO - ptr to #36
"RTN","IBCEF72",8,0)
 ;IBFRMTYP 0=unknwn/both,1=UB,2=1500
"RTN","IBCEF72",9,0)
 ;IBCARE - 0=unknwn or both inp/outp,1=inpatient, 2=outpatient, 3 -RX
"RTN","IBCEF72",10,0)
 ;Output: X12 IDtype^ID^ID TYPE ptr to file 355.97
"RTN","IBCEF72",11,0)
CH35591(IBINSCO,IBFRMTYP,IBCARE) ;
"RTN","IBCEF72",12,0)
 N IB35591,IBRET,IB1
"RTN","IBCEF72",13,0)
 S IB35591=0,IBRET=""
"RTN","IBCEF72",14,0)
 F  S IB35591=$O(^IBA(355.91,"B",IBINSCO,IB35591)) Q:+IB35591=0  Q:IBRET'=""  D
"RTN","IBCEF72",15,0)
 . S IB1=$G(^IBA(355.91,IB35591,0))
"RTN","IBCEF72",16,0)
 . I '($P(IB1,"^",4)=0!(IBFRMTYP=0)) Q:$P(IB1,"^",4)'=IBFRMTYP  ;if wrong form type
"RTN","IBCEF72",17,0)
 . I ($P(IB1,"^",5)=3)!(IBCARE=3) Q:IBCARE'=$P(IB1,"^",5)  ;if not RX
"RTN","IBCEF72",18,0)
 . I ($P(IB1,"^",5)=1)!($P(IB1,"^",5)=2) I (IBCARE=1)!(IBCARE=2) Q:$P(IB1,"^",5)'=IBCARE  ;if wrong care type
"RTN","IBCEF72",19,0)
 . S IBRET=$P($G(^IBE(355.97,+$P(IB1,"^",6),0)),"^",3)_"^"_$P(IB1,"^",7)_U_+$P(IB1,U,6)
"RTN","IBCEF72",20,0)
 Q IBRET
"RTN","IBCEF72",21,0)
 ;
"RTN","IBCEF72",22,0)
FINDEIN(IBXIEN,IBPROV,IBFAC,IBS) ; find EIN for facility/ SSN for person
"RTN","IBCEF72",23,0)
 ; IBXIEN = ien of bill entry file 399
"RTN","IBCEF72",24,0)
 ; IBFAC = 1 if facility, 0 if individual provider
"RTN","IBCEF72",25,0)
 ; IBPROV = ien of provider (vp format)
"RTN","IBCEF72",26,0)
 ; IBS = 1 if person's EIN should be returned if there, otherwise SSN
"RTN","IBCEF72",27,0)
 ; FUNCTION RETURNS 
"RTN","IBCEF72",28,0)
 ;    EIN or SSN ^ 24 for EIN, 34 for SSN or null if none found
"RTN","IBCEF72",29,0)
 N Z,Z0,IBARR,IBEIN,IBSSN
"RTN","IBCEF72",30,0)
 S (IBEIN,IBSSN)=""
"RTN","IBCEF72",31,0)
 D ALLID^IBCEP8(IBPROV,"",.IBARR)
"RTN","IBCEF72",32,0)
 S Z=0 F  S Z=$O(IBARR(Z)) Q:'Z  D  Q:IBEIN'=""
"RTN","IBCEF72",33,0)
 . I $G(IBFAC) Q:$P(IBARR(Z),U,7)'="EI"  S IBEIN=$P(IBARR(Z),U,2)_U_24 Q
"RTN","IBCEF72",34,0)
 . I $P(IBARR(Z),U,7)="SY" D  Q
"RTN","IBCEF72",35,0)
 .. I $G(IBS) S IBSSN=$P(IBARR(Z),U,2)_U_34 Q
"RTN","IBCEF72",36,0)
 . S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",37,0)
 . I $G(IBS),$P(IBARR(Z),U,7)="EI" S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",38,0)
 I $G(IBS),IBEIN="" S IBEIN=IBSSN
"RTN","IBCEF72",39,0)
 Q IBEIN
"RTN","IBCEF72",40,0)
 ;
"RTN","IBCEF72",41,0)
 ;
"RTN","IBCEF72",42,0)
NONVAID(IBXIEN,IBX,IBFAC,IBS) ; Find the non-VA provider default id
"RTN","IBCEF72",43,0)
 ; IBXIEN = the ien of the bill (file 399)
"RTN","IBCEF72",44,0)
 ; IBX = id data returned if passed by reference
"RTN","IBCEF72",45,0)
 ; IBFAC = 1 if getting the id for the facility or 0 for rendering prov
"RTN","IBCEF72",46,0)
 ; IBS = 1 if getting id for person, but need the EIN if there
"RTN","IBCEF72",47,0)
 ; Function returns the id^type of id^person/facility flag:
"RTN","IBCEF72",48,0)
 ;   Type of id: 1 = SSN    2 = EIN   0 = not found
"RTN","IBCEF72",49,0)
 ;   person/facility: 1 = person   2 = facility
"RTN","IBCEF72",50,0)
 N Z,IBXSAVE,IBU2,IBTYPE,IBZ,IBF,IBPROV,Q,Q0
"RTN","IBCEF72",51,0)
 S IBTYPE=2,IBU2=$G(^DGCR(399,IBXIEN,"U2")),IBF=2,IBPROV=""
"RTN","IBCEF72",52,0)
 ;
"RTN","IBCEF72",53,0)
 S Z=$P(IBU2,U,10)
"RTN","IBCEF72",54,0)
 I 'Z S IBX="",IBTYPE=0 G NONVAQ ; Not a non-VA facility
"RTN","IBCEF72",55,0)
 S IBPROV=Z_";IBA(355.93,"
"RTN","IBCEF72",56,0)
 ;
"RTN","IBCEF72",57,0)
 ; Get EIN
"RTN","IBCEF72",58,0)
 I $G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",59,0)
 . S IBX=$P($$FINDEIN(IBXIEN,IBPROV,IBFAC),U),IBTYPE=2
"RTN","IBCEF72",60,0)
 ;
"RTN","IBCEF72",61,0)
 ; Get EIN/SSN
"RTN","IBCEF72",62,0)
 I '$G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",63,0)
 . S IBX="",IBF=1
"RTN","IBCEF72",64,0)
 . S Q0=($$FT^IBCEF(IBXIEN)=3)+3 ; 3 for rendering/4 for attending
"RTN","IBCEF72",65,0)
 . S Q=+$O(^DGCR(399,IBXIEN,"PRV","B",Q0,0))
"RTN","IBCEF72",66,0)
 . S IBPROV=$P($G(^DGCR(399,IBXIEN,"PRV",Q,0)),U,2)
"RTN","IBCEF72",67,0)
 . I IBPROV S IBX=$$FINDEIN(IBXIEN,IBPROV,IBFAC,$G(IBS)),IBTYPE=$S($P(IBX,U,2)=24:2,$P(IBX,U,2)=34:1,1:0),IBX=$P(IBX,U)
"RTN","IBCEF72",68,0)
 ;
"RTN","IBCEF72",69,0)
NONVAQ I IBTYPE,IBX="",$P(IBU2,U,12)'="" S IBX=$P(IBU2,U,12) ; pull from 399
"RTN","IBCEF72",70,0)
 S IBX=$G(IBX)
"RTN","IBCEF72",71,0)
 Q IBX_U_IBTYPE_U_IBF
"RTN","IBCEF72",72,0)
 ;----
"RTN","IBCEF72",73,0)
 ;checks if there is data for OP* segments and 
"RTN","IBCEF72",74,0)
 ;then populates PROV COB SEQ
"RTN","IBCEF72",75,0)
 ;Input:
"RTN","IBCEF72",76,0)
 ;IBXIEN - ien in #399
"RTN","IBCEF72",77,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF72",78,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF72",79,0)
 ;IBFUNC - FUNCTION from #399 (1-refering, 2 -operating, etc)
"RTN","IBCEF72",80,0)
 ;IBSEGM - segment record ID, optional
"RTN","IBCEF72",81,0)
 ;Output:
"RTN","IBCEF72",82,0)
 ; IBDATA with formatted output
"RTN","IBCEF72",83,0)
PROVSEQ(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBSEGM) ;
"RTN","IBCEF72",84,0)
 N IB1,IBINS,IBFL
"RTN","IBCEF72",85,0)
 ;S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF72",86,0)
 F IB1=1,2 D
"RTN","IBCEF72",87,0)
 . I '$$ISINSUR^IBCEF71($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN) Q  ;don't create anything if there is no such insurance
"RTN","IBCEF72",88,0)
 . ;*432/TAZ - Removed. Attending and Rendering can be on same bill now.
"RTN","IBCEF72",89,0)
 . ;I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4)
"RTN","IBCEF72",90,0)
 . I '$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) Q
"RTN","IBCEF72",91,0)
 . S IBDATA(IB1)=$G(IBSAVE("PROVINF",IBXIEN,"O",IB1))
"RTN","IBCEF72",92,0)
 . I $G(IBSEGM)'="" D ID^IBCEF2(IB1,IBSEGM)
"RTN","IBCEF72",93,0)
 Q
"RTN","IBCEF72",94,0)
 ;
"RTN","IBCEF72",95,0)
OUTPRVID(IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",96,0)
 ; into IBXSAVE array
"RTN","IBCEF72",97,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",98,0)
 N Z,IBXDATA,IBPERSON,TAG
"RTN","IBCEF72",99,0)
 ;WCJ;11/1/2005 Extract the first 3 chars of Z instead.
"RTN","IBCEF72",100,0)
 S Z=$E($$PSPRV^IBCEF7(IBXIEN),1,3),IBPERSON=""
"RTN","IBCEF72",101,0)
 ;EJK 8/23/05 IB*320 - CHANGED Z=101 TO Z=1010. Z WILL ALWAYS BE A 4 DIGIT #. 
"RTN","IBCEF72",102,0)
 ; WCJ 11/1/2005 ; Removed EJK's change and added above change
"RTN","IBCEF72",103,0)
 I Z=111!(Z=101) S TAG=$S(Z=101:"OUTSIDE FAC PROVIDER INF",1:"CUR/OTH PROVIDER INFO") D F^IBCEF("N-ALL "_TAG) S IBPERSON=$S('$E(Z,2):2,1:1)
"RTN","IBCEF72",104,0)
 Q IBPERSON
"RTN","IBCEF72",105,0)
 ;
"RTN","IBCEF72",106,0)
OUTPRV(IBREC,IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",107,0)
 ; into IBXSAVE array
"RTN","IBCEF72",108,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",109,0)
 ; IBREC = the record whose ids should be returned
"RTN","IBCEF72",110,0)
 N IBPERSON,IBFRM,IBTYPE,IBFAC
"RTN","IBCEF72",111,0)
 I IBREC="SUB1"!(IBREC="OP6") D
"RTN","IBCEF72",112,0)
 . K IBXSAVE("PROVINF",IBXIEN),IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",113,0)
 . S IBPERSON=$$OUTPRVID(IBXIEN,.IBXSAVE),IBFAC=$S(IBPERSON=1:0,1:1)
"RTN","IBCEF72",114,0)
 E  D
"RTN","IBCEF72",115,0)
 . K IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",116,0)
 . D F^IBCEF("N-ALL OUTSIDE FAC PROVIDER INF")
"RTN","IBCEF72",117,0)
 . S IBPERSON=2,IBFAC=1
"RTN","IBCEF72",118,0)
 S IBFRM=$$FT^IBCEF(IBXIEN),IBFRM=$S(IBFRM=2:2,1:1)
"RTN","IBCEF72",119,0)
 S IBTYPE=$S(IBREC["SUB":"C",1:"O")
"RTN","IBCEF72",120,0)
 D CHCKSUB^IBCEF73(IBFRM,IBREC,IBFAC,IBTYPE,.IBXSAVE)
"RTN","IBCEF72",121,0)
 Q IBPERSON
"RTN","IBCEF72",122,0)
 ;
"RTN","IBCEF72",123,0)
 ;get IENs in file #36 for other insurances
"RTN","IBCEF72",124,0)
OTHINS(IB399,IBRES) ;
"RTN","IBCEF72",125,0)
 N IBFRMTYP,Z,Z1,Z2,Z4
"RTN","IBCEF72",126,0)
 S Z=$$COBN^IBCEF(IB399),Z0=0
"RTN","IBCEF72",127,0)
 F Z1=1:1:3 I Z1'=Z,$D(^DGCR(399,IB399,"I"_Z1)) D
"RTN","IBCEF72",128,0)
 . S Z0=Z0+1
"RTN","IBCEF72",129,0)
 . ; MRD;IB*2.0*516 - Added HPID as second piece.
"RTN","IBCEF72",130,0)
 . S IBRES(Z0)=+$G(^DGCR(399,IB399,"I"_Z1))_U_$P(^DGCR(399,IB399,"M1"),U,12+Z1)
"RTN","IBCEF72",131,0)
 . Q
"RTN","IBCEF72",132,0)
 Q
"RTN","IBCEF72",133,0)
 ;
"RTN","IBCEF72",134,0)
 ;get other insurance EDI ID NUMBERs
"RTN","IBCEF72",135,0)
OTHINSID(IB399,IBRES) ;insurance EDI 
"RTN","IBCEF72",136,0)
 N IBFRMTYP,IBZ,Z0,Z1,Z4
"RTN","IBCEF72",137,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF72",138,0)
 S Z4=$S(IBFRMTYP=1:4,1:2) ;UB - piece4,1500 or BOTH -piece 2
"RTN","IBCEF72",139,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",140,0)
 S Z1=0
"RTN","IBCEF72",141,0)
 F Z0=1,2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",142,0)
 . S IBRES(Z0)=$S($$MCRWNR^IBEFUNC(+IBZ(Z0)):$S(IBFRMTYP=1:"12M61",1:"SMTX1"),1:$P($G(^DIC(36,+IBZ(Z0),3)),U,Z4))
"RTN","IBCEF72",143,0)
 . ; MRD;IB*2.0*516 - Added HPID as second piece.
"RTN","IBCEF72",144,0)
 . S $P(IBRES(Z0),U,2)=$P(IBZ(Z0),U,2)
"RTN","IBCEF72",145,0)
 . Q
"RTN","IBCEF72",146,0)
 Q
"RTN","IBCEF72",147,0)
 ;
"RTN","IBCEF72",148,0)
 ;get other insurance addresses
"RTN","IBCEF72",149,0)
OTHINADR(IB399,IBRES,IBADDFLD) ;insurance EDI
"RTN","IBCEF72",150,0)
 N IBZ,Z0,Z1,Z4
"RTN","IBCEF72",151,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",152,0)
 S Z1=0
"RTN","IBCEF72",153,0)
 I IBADDFLD=18 D  Q
"RTN","IBCEF72",154,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",155,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",156,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",157,0)
 I IBADDFLD=18.9 D  Q
"RTN","IBCEF72",158,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",159,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",160,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",161,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,3) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",162,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",163,0)
 . . S Z4=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",164,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",165,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,157)
"RTN","IBCEF72",166,0)
 I IBADDFLD=19 D  Q
"RTN","IBCEF72",167,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",168,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2)
"RTN","IBCEF72",169,0)
 . . S IBRES(Z0)=IBRES(Z0)_" "_$P($G(^DIC(36,+IBZ(Z0),.11)),U,3)
"RTN","IBCEF72",170,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",171,0)
 I IBADDFLD=20 D  Q
"RTN","IBCEF72",172,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",173,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4)
"RTN","IBCEF72",174,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,30)
"RTN","IBCEF72",175,0)
 I IBADDFLD=21 D  Q
"RTN","IBCEF72",176,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",177,0)
 . . S IBRES(Z0)=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2)
"RTN","IBCEF72",178,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,2)
"RTN","IBCEF72",179,0)
 I IBADDFLD=22 D  Q
"RTN","IBCEF72",180,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",181,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6)
"RTN","IBCEF72",182,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,15)
"RTN","IBCEF72",183,0)
 Q
"RTN","IBCEF72",184,0)
 ;
"RTN","IBCEF72",185,0)
SFIDQ(IBXIEN,IBXSAVE,IBXDATA) ; Find the service facility id qualifier for
"RTN","IBCEF72",186,0)
 ; 837 record SUB2-5
"RTN","IBCEF72",187,0)
 ;IBXIEN = ien of 399
"RTN","IBCEF72",188,0)
 ;Pass by reference: IBXSAVE (input/output)  IBXDATA (output)
"RTN","IBCEF72",189,0)
 N B,Z
"RTN","IBCEF72",190,0)
 K IBXSAVE("NVID")
"RTN","IBCEF72",191,0)
 D  ; protect IBXDATA
"RTN","IBCEF72",192,0)
 . N IBXDATA
"RTN","IBCEF72",193,0)
 . D F^IBCEF("N-RENDERING INSTITUTION")
"RTN","IBCEF72",194,0)
 . S:IBXDATA'="" IBXSAVE("IBFAC")=IBXDATA
"RTN","IBCEF72",195,0)
 I $P($G(IBXSAVE("IBFAC")),U,2)'=1 K IBXDATA Q
"RTN","IBCEF72",196,0)
 S Z=$$PSPRV^IBCEF7(IBXIEN)
"RTN","IBCEF72",197,0)
 ;WCJ 11/04/2005 If a Non-VA facility 
"RTN","IBCEF72",198,0)
 I $E(Z) D
"RTN","IBCEF72",199,0)
 . S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,$E(Z),1)
"RTN","IBCEF72",200,0)
 .; S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1)
"RTN","IBCEF72",201,0)
 . S IBXDATA=$P("^34^24",U,$P(IBXSAVE("NVID"),U,2)+1)
"RTN","IBCEF72",202,0)
 ;S Z=$$PSPRV^IBCEF7(IBXIEN),IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1),IBXDATA=24
"RTN","IBCEF72",203,0)
 Q
"RTN","IBCEF72",204,0)
 ;
"RTN","IBCEF72",205,0)
OTHP36(IBXIEN,IBZOUT)   ;
"RTN","IBCEF72",206,0)
 N Z,Z0,Z1,IBZ
"RTN","IBCEF72",207,0)
 D F^IBCEF("N-ALL INSURANCE CO 837 ID","IBZ")
"RTN","IBCEF72",208,0)
 F Z=1,2,3 S IBZOUT(Z)=+$$POLICY^IBCEF(IBXIEN,1,$E("PST",Z))
"RTN","IBCEF72",209,0)
 Q
"RTN","IBCEF72",210,0)
 ;
"RTN","IBCEF72",211,0)
 ;---------SORT-----------
"RTN","IBCEF72",212,0)
 ;IBPRNUM - seq #
"RTN","IBCEF72",213,0)
 ;IBPRTYP - type of provider (use FUNCTION value from file 399, fld 222)
"RTN","IBCEF72",214,0)
 ;IB399 = ien file 399
"RTN","IBCEF72",215,0)
 ;IBSRC,IBDST - source,destination arrays
"RTN","IBCEF72",216,0)
 ;IBN - starting #
"RTN","IBCEF72",217,0)
 ;Output:
"RTN","IBCEF72",218,0)
 ; IBDST(1-primary/2-secondary provider,Provider type(FUNCTION),N)=
"RTN","IBCEF72",219,0)
 ; =provider/VARIABLEPTR^Insurance PTR #36 or NONE^ID type^ID^Form type^Care type^state ptr #5 for state license #
"RTN","IBCEF72",220,0)
 ; where N is numeration (1 for ID1, 2 for ID2, etc)
"RTN","IBCEF72",221,0)
GETSSN(IBPTR)   ;look for SSN in #200 first and if not found then look at #355.9
"RTN","IBCEF72",222,0)
 ;if in file #200
"RTN","IBCEF72",223,0)
 I $P(IBPTR,";",2)="VA(200," Q $$SSN200^IBCEF73(IBPTR)
"RTN","IBCEF72",224,0)
 ;if in 355.93 then use 355.9
"RTN","IBCEF72",225,0)
 Q $$SSN3559^IBCEF73(IBPTR)
"RTN","IBCEF72",226,0)
 ;--
"RTN","IBCEF72",227,0)
 ;SSN3559
"RTN","IBCEF72",228,0)
 ;Find SSN from 355.9
"RTN","IBCEF72",229,0)
 ;Input:
"RTN","IBCEF72",230,0)
 ; Variable pointer to ^VA(200 or ^IBA(355.93
"RTN","IBCEF72",231,0)
 ;Output:
"RTN","IBCEF72",232,0)
 ; SSN or null
"RTN","IBCEF72",233,0)
 ;
"RTN","IBCEF72",234,0)
PADNDC(Z) ;PAD LEADING ZERO'S INTO A NON 5-4-2 FORMAT NDC NUMBER
"RTN","IBCEF72",235,0)
 ;Z IS ITERATION, ONLY PAD CURRENT NDC NUMBER
"RTN","IBCEF72",236,0)
 N NDC
"RTN","IBCEF72",237,0)
 S NDC=$P(IBXSAVE("OUTPT",Z,"RX"),"^",3)
"RTN","IBCEF72",238,0)
 Q:$L(NDC)=13
"RTN","IBCEF72",239,0)
 I $L(NDC)=14 D  Q
"RTN","IBCEF72",240,0)
 . S $P(NDC,"-",1)=$E($P(NDC,"-",1),2,$L($P(NDC,"-",1)))
"RTN","IBCEF72",241,0)
 . S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",242,0)
 I $L($P(NDC,"-",1))'=5 S $P(NDC,"-",1)="0"_$P(NDC,"-",1)
"RTN","IBCEF72",243,0)
 I $L($P(NDC,"-",2))'=4 S $P(NDC,"-",2)="0"_$P(NDC,"-",2)
"RTN","IBCEF72",244,0)
 I $L($P(NDC,"-",3))'=2 S $P(NDC,"-",3)="0"_$P(NDC,"-",3)
"RTN","IBCEF72",245,0)
 S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",246,0)
 Q
"RTN","IBCEF72",247,0)
 ;
"RTN","IBCEF73A")
0^137^B43076924^B55865498
"RTN","IBCEF73A",1,0)
IBCEF73A ;ALB/KJH - FORMATTER AND EXTRACTOR SPECIFIC (NPI) BILL FUNCTIONS ;30 Aug 2006  10:38 AM
"RTN","IBCEF73A",2,0)
 ;;2.0;INTEGRATED BILLING;**343,374,395,391,400,432,516**;21-MAR-94;Build 123
"RTN","IBCEF73A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF73A",4,0)
 Q
"RTN","IBCEF73A",5,0)
 ;
"RTN","IBCEF73A",6,0)
PROVNPI(IBIEN399,IBNONPI) ;
"RTN","IBCEF73A",7,0)
 ;Retrieves NPIs from #200 or 355.93
"RTN","IBCEF73A",8,0)
 ; Input:
"RTN","IBCEF73A",9,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",10,0)
 ;       IBNONPI - variable to pass info on missing NPI to calling routine.  Pass by reference
"RTN","IBCEF73A",11,0)
 ; Output:
"RTN","IBCEF73A",12,0)
 ;       NPI codes for all providers
"RTN","IBCEF73A",13,0)
 ;       IBNONPI - U-delimited list of provider types with missing NPIs
"RTN","IBCEF73A",14,0)
 N IBRETVAL,IBPTR,IBFT
"RTN","IBCEF73A",15,0)
 S IBRETVAL="",IBNONPI=""
"RTN","IBCEF73A",16,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",17,0)
 . S IBPTR=$$PROVPTR^IBCEF7(IBIEN399,IBFT)
"RTN","IBCEF73A",18,0)
 . I IBPTR S $P(IBRETVAL,"^",IBFT)=$$GETNPI(IBPTR)
"RTN","IBCEF73A",19,0)
 Q IBRETVAL
"RTN","IBCEF73A",20,0)
GETNPI(IBPTR) ;look for NPI in #200 or #355.93
"RTN","IBCEF73A",21,0)
 ;Input: IBPTR from 399.0222, field .02
"RTN","IBCEF73A",22,0)
 ;Output: NPI
"RTN","IBCEF73A",23,0)
 ;if in file #200
"RTN","IBCEF73A",24,0)
 N NPI
"RTN","IBCEF73A",25,0)
 S NPI=""
"RTN","IBCEF73A",26,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",27,0)
 I $P(IBPTR,";",2)="VA(200," S NPI=$P($$NPI^XUSNPI("Individual_ID",$P(IBPTR,";")),U) S:NPI<1 NPI=""
"RTN","IBCEF73A",28,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",29,0)
 I $P(IBPTR,";",2)="IBA(355.93," S NPI=$$NPIGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",30,0)
 I NPI="",$D(IBNONPI) S IBNONPI=$S(IBNONPI="":IBFT,1:IBNONPI_U_IBFT)
"RTN","IBCEF73A",31,0)
 Q NPI
"RTN","IBCEF73A",32,0)
 ;
"RTN","IBCEF73A",33,0)
SPECTAX(IBIEN399,IBNOSPEC) ;
"RTN","IBCEF73A",34,0)
 ;Retrieves Specialty Codes from Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",35,0)
 ; Input:
"RTN","IBCEF73A",36,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",37,0)
 ;       IBNOSPEC - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",38,0)
 ; Output:
"RTN","IBCEF73A",39,0)
 ;       Taxonomy Specialty Codes for all providers
"RTN","IBCEF73A",40,0)
 ;       IBNOSPEC - U-delimited list of provider types with missing Taxonomy Specialty codes
"RTN","IBCEF73A",41,0)
 N IBRETVAL,IBN,IBFT,IBSPEC,SPEC
"RTN","IBCEF73A",42,0)
 S IBRETVAL="",IBNOSPEC=""
"RTN","IBCEF73A",43,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",44,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",45,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",46,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",47,0)
 . S IBSPEC=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",48,0)
 . S SPEC=$$GET1^DIQ(8932.1,IBSPEC,"SPECIALTY CODE")
"RTN","IBCEF73A",49,0)
 . S $P(IBRETVAL,"^",IBFT)=SPEC
"RTN","IBCEF73A",50,0)
 . I SPEC="",$D(IBNOSPEC) S IBNOSPEC=$S(IBNOSPEC="":IBFT,1:IBNOSPEC_U_IBFT)
"RTN","IBCEF73A",51,0)
 Q IBRETVAL
"RTN","IBCEF73A",52,0)
 ;
"RTN","IBCEF73A",53,0)
PROVTAX(IBIEN399,IBNOTAX) ;
"RTN","IBCEF73A",54,0)
 ;Retrieves Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",55,0)
 ; Input:
"RTN","IBCEF73A",56,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",57,0)
 ;       IBNOTAX - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",58,0)
 ; Output:
"RTN","IBCEF73A",59,0)
 ;       Taxonomy X12 codes for all providers
"RTN","IBCEF73A",60,0)
 ;       IBNOTAX - U-delimited list of provider types with missing Taxonomy X12 codes
"RTN","IBCEF73A",61,0)
 N IBRETVAL,IBN,IBFT,IBTAX,TAX
"RTN","IBCEF73A",62,0)
 S IBRETVAL="",IBNOTAX=""
"RTN","IBCEF73A",63,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",64,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",65,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",66,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",67,0)
 . S IBTAX=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",68,0)
 . S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",69,0)
 . S $P(IBRETVAL,"^",IBFT)=TAX
"RTN","IBCEF73A",70,0)
 . I TAX="",$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":IBFT,1:IBNOTAX_U_IBFT)
"RTN","IBCEF73A",71,0)
 Q IBRETVAL
"RTN","IBCEF73A",72,0)
GETTAX(IBPTR,IBDTEV) ;look for Taxonomy in #200 or #355.93
"RTN","IBCEF73A",73,0)
 ;Input: IBPTR from 399.0222, field .02, IBDTEV from 399, field .03
"RTN","IBCEF73A",74,0)
 ;       IBPTR can be from 399.0404, field .02, as well (DEM;432)
"RTN","IBCEF73A",75,0)
 ;Output: Taxonomy X12 code_"^"_IEN
"RTN","IBCEF73A",76,0)
 N TAX,IBX12
"RTN","IBCEF73A",77,0)
 S TAX="^",IBX12=""
"RTN","IBCEF73A",78,0)
 S:'$G(IBDTEV) IBDTEV=DT
"RTN","IBCEF73A",79,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",80,0)
 I $P(IBPTR,";",2)="VA(200," S IBX12=$P($$GET^XUA4A72($P(IBPTR,";"),IBDTEV),U,1),TAX=$S(IBX12'>0:TAX,1:$$GET1^DIQ(8932.1,IBX12,6)_U_IBX12)
"RTN","IBCEF73A",81,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",82,0)
 I $P(IBPTR,";",2)="IBA(355.93," S TAX=$$TAXGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",83,0)
 Q TAX
"RTN","IBCEF73A",84,0)
 ;
"RTN","IBCEF73A",85,0)
ORGNPI(IBIEN399,IBNONPI) ; Extract NPIs for organizations on this claim
"RTN","IBCEF73A",86,0)
 ; Input
"RTN","IBCEF73A",87,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",88,0)
 ;       IBNONPI - Variable to pass info on missing NPI back to calling routine.  Pass by reference.
"RTN","IBCEF73A",89,0)
 ; Output - NPI codes for facilities
"RTN","IBCEF73A",90,0)
 ;        Piece 1) Service Facility NPI code (with IB patch 400, a claim may not have a service facility)
"RTN","IBCEF73A",91,0)
 ;        Piece 2) Non-VA Service Facility NPI code
"RTN","IBCEF73A",92,0)
 ;        Piece 3) Billing Provider NPI code (IB patch 400 definition)
"RTN","IBCEF73A",93,0)
 ;
"RTN","IBCEF73A",94,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,NPI,BSZ
"RTN","IBCEF73A",95,0)
 S IBNONPI=""
"RTN","IBCEF73A",96,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",97,0)
 S IBRETVAL=""
"RTN","IBCEF73A",98,0)
 S BSZ=$$B^IBCEF79(IBIEN399)    ; get billing provider/service facility information
"RTN","IBCEF73A",99,0)
 ;
"RTN","IBCEF73A",100,0)
 ; MRD;IB*2.0*516 - The field used as the switchback flag is being
"RTN","IBCEF73A",101,0)
 ; marked for deletion, to be deleted after 3/15/2018.  That flag
"RTN","IBCEF73A",102,0)
 ; will now always be null.  The following section of code was
"RTN","IBCEF73A",103,0)
 ; commented out because of this.  This section can be deleted in
"RTN","IBCEF73A",104,0)
 ; the future.
"RTN","IBCEF73A",105,0)
 ;
"RTN","IBCEF73A",106,0)
 ;S SWBCK=(+$$INSFLGS^IBCEF79(IBIEN399)>0)    ; pre-patch 400 switchback flag & processing
"RTN","IBCEF73A",107,0)
 ;I SWBCK D  G ORGNPIX
"RTN","IBCEF73A",108,0)
 ;. N PHARM,DPORG,PHARMNPI
"RTN","IBCEF73A",109,0)
 ;. S PHARM=+$$ISRX^IBCEF1(IBIEN399)          ; pharmacy claim flag switchback
"RTN","IBCEF73A",110,0)
 ;. S PHARMNPI=""
"RTN","IBCEF73A",111,0)
 ;. I PHARM S DPORG=$$RXSITE(IBIEN399) I DPORG S PHARMNPI=$P($$NPI^XUSNPI("Organization_ID",DPORG),U,1)
"RTN","IBCEF73A",112,0)
 ;. ;
"RTN","IBCEF73A",113,0)
 ;. ; service facility NPI switchback
"RTN","IBCEF73A",114,0)
 ;. S NPI=""
"RTN","IBCEF73A",115,0)
 ;. S IBORG=+$P(BSZ,U,4)    ; service facility ien (either ptr file 4 or 355.93)
"RTN","IBCEF73A",116,0)
 ;. I $P(BSZ,U,3)=0,IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)    ; file 4
"RTN","IBCEF73A",117,0)
 ;. I $P(BSZ,U,3)=1,IBORG S NPI=$$NPIGET^IBCEP81(IBORG)                          ; file 355.93
"RTN","IBCEF73A",118,0)
 ;. I PHARM S NPI=PHARMNPI      ; in switchback mode for pharmacy claims, use the pharmacy NPI
"RTN","IBCEF73A",119,0)
 ;. I NPI>0 S $P(IBRETVAL,U,1)=NPI
"RTN","IBCEF73A",120,0)
 ;. I NPI<1 S IBNONPI=1
"RTN","IBCEF73A",121,0)
 ;. ;
"RTN","IBCEF73A",122,0)
 ;. ; non-VA facility NPI switchback
"RTN","IBCEF73A",123,0)
 ;. S IBORG=$$GET1^DIQ(399,IBIEN399_",",232,"I")
"RTN","IBCEF73A",124,0)
 ;. I IBORG S NPI=$$NPIGET^IBCEP81(IBORG),$P(IBRETVAL,U,2)=NPI I 'NPI S IBNONPI=$S(IBNONPI="":2,1:IBNONPI_U_2)
"RTN","IBCEF73A",125,0)
 ;. ;
"RTN","IBCEF73A",126,0)
 ;. ; billing provider NPI switchback
"RTN","IBCEF73A",127,0)
 ;. S IBORG=+$P(BSZ,U,1),NPI=""
"RTN","IBCEF73A",128,0)
 ;. I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)
"RTN","IBCEF73A",129,0)
 ;. I PHARM S NPI=PHARMNPI      ; in switchback mode for pharmacy claims, use the pharmacy NPI
"RTN","IBCEF73A",130,0)
 ;. I NPI>0 S $P(IBRETVAL,U,3)=NPI
"RTN","IBCEF73A",131,0)
 ;. I NPI<1 S IBNONPI=$S(IBNONPI="":3,1:IBNONPI_U_3)
"RTN","IBCEF73A",132,0)
 ;. ;
"RTN","IBCEF73A",133,0)
 ;. Q
"RTN","IBCEF73A",134,0)
 ;
"RTN","IBCEF73A",135,0)
 ; service facility NPI regular
"RTN","IBCEF73A",136,0)
 S NPI=""
"RTN","IBCEF73A",137,0)
 S IBORG=+$P(BSZ,U,4)    ; service facility ien (either ptr file 4 or 355.93)
"RTN","IBCEF73A",138,0)
 I $P(BSZ,U,3)=0,IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)    ; file 4
"RTN","IBCEF73A",139,0)
 I $P(BSZ,U,3)=1,IBORG S NPI=$$NPIGET^IBCEP81(IBORG)                          ; file 355.93
"RTN","IBCEF73A",140,0)
 I NPI>0 S $P(IBRETVAL,U,1)=NPI
"RTN","IBCEF73A",141,0)
 I NPI<1,$P(BSZ,U,3)=1 S IBNONPI=1   ; only report missing service facility NPI for non-VA facilities
"RTN","IBCEF73A",142,0)
 ;
"RTN","IBCEF73A",143,0)
 ; non-VA facility NPI regular
"RTN","IBCEF73A",144,0)
 S IBORG=$$GET1^DIQ(399,IBIEN399_",",232,"I")
"RTN","IBCEF73A",145,0)
 ; Let this one (#2) override #1 if both #1 and #2 are missing
"RTN","IBCEF73A",146,0)
 I IBORG S NPI=$$NPIGET^IBCEP81(IBORG),$P(IBRETVAL,U,2)=NPI I 'NPI S IBNONPI=2
"RTN","IBCEF73A",147,0)
 ;
"RTN","IBCEF73A",148,0)
 ; billing provider NPI regular
"RTN","IBCEF73A",149,0)
 S IBORG=+$P(BSZ,U,1),NPI=""
"RTN","IBCEF73A",150,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1) S:NPI>0 $P(IBRETVAL,U,3)=NPI
"RTN","IBCEF73A",151,0)
 I NPI<1 S IBNONPI=$S(IBNONPI="":3,1:IBNONPI_U_3)
"RTN","IBCEF73A",152,0)
 ;
"RTN","IBCEF73A",153,0)
 ;ORGNPIX ; MRD;IB*2.0*516 - Delete this label when deleting
"RTN","IBCEF73A",154,0)
 ; above code commented out.
"RTN","IBCEF73A",155,0)
 ;
"RTN","IBCEF73A",156,0)
 Q IBRETVAL
"RTN","IBCEF73A",157,0)
 ;
"RTN","IBCEF73A",158,0)
ORGTAX(IBIEN399,IBNOTAX) ; Extract Taxonomies for organizations on this claim
"RTN","IBCEF73A",159,0)
 ; Input
"RTN","IBCEF73A",160,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",161,0)
 ;       IBNOTAX - Variable to pass info on missing taxonomies back to calling routine.  Pass by reference.
"RTN","IBCEF73A",162,0)
 ; Output - Taxonomy X12 codes for facilities
"RTN","IBCEF73A",163,0)
 ;        Piece 1) Service Facility Taxonomy X12 code (with IB patch 400, a claim may not have a service facility)
"RTN","IBCEF73A",164,0)
 ;        Piece 2) Non-VA Service Facility Taxonomy X12 code
"RTN","IBCEF73A",165,0)
 ;        Piece 3) Billing Provider Taxonomy X12 code (IB patch 400 definition)
"RTN","IBCEF73A",166,0)
 N IBRETVAL,IBTAX,TAX,BSZ
"RTN","IBCEF73A",167,0)
 ;
"RTN","IBCEF73A",168,0)
 S BSZ=$$B^IBCEF79(IBIEN399)    ; get billing provider/service facility information
"RTN","IBCEF73A",169,0)
 ;
"RTN","IBCEF73A",170,0)
 ; claim field# 243 - service facility taxonomy code
"RTN","IBCEF73A",171,0)
 I $P(BSZ,U,3)="" S (IBTAX,TAX)=""     ; no service facility
"RTN","IBCEF73A",172,0)
 I $P(BSZ,U,3)'="" S IBTAX=$$GET1^DIQ(399,IBIEN399_",",243,"I"),TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",173,0)
 S $P(IBRETVAL,U,1)=TAX
"RTN","IBCEF73A",174,0)
 ; only record service facility taxonomy code missing if there is a service facility
"RTN","IBCEF73A",175,0)
 I '$L(TAX),$D(IBNOTAX),$P(BSZ,U,3)'="" S IBNOTAX=1
"RTN","IBCEF73A",176,0)
 ;
"RTN","IBCEF73A",177,0)
 ; claim field# 244 - non-VA facility taxonomy code
"RTN","IBCEF73A",178,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",244,"I")
"RTN","IBCEF73A",179,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",180,0)
 S $P(IBRETVAL,U,2)=TAX
"RTN","IBCEF73A",181,0)
 I '$L(TAX),$$GET1^DIQ(399,IBIEN399_",",232,"I"),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":2,1:IBNOTAX_U_2)
"RTN","IBCEF73A",182,0)
 ;
"RTN","IBCEF73A",183,0)
 ; claim field# 252 - billing provider taxonomy code
"RTN","IBCEF73A",184,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",252,"I")
"RTN","IBCEF73A",185,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",186,0)
 S $P(IBRETVAL,U,3)=TAX
"RTN","IBCEF73A",187,0)
 I '$L(TAX),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":3,1:IBNOTAX_U_3)
"RTN","IBCEF73A",188,0)
 ;
"RTN","IBCEF73A",189,0)
 Q IBRETVAL
"RTN","IBCEF73A",190,0)
 ;
"RTN","IBCEF73A",191,0)
RXSITE(IBIEN399,IBLIST) ; returns prescription organization (file 4) pointer
"RTN","IBCEF73A",192,0)
 ; for the given bill.  If IBLIST passed by reference, then a list of
"RTN","IBCEF73A",193,0)
 ; the possible organizations are returned for a bill, since a bill may
"RTN","IBCEF73A",194,0)
 ; have more than one prescription.  If more than one rx on the bill, the
"RTN","IBCEF73A",195,0)
 ; $$ return is the pointer of the last prescription found.
"RTN","IBCEF73A",196,0)
 ; IBLIST(rx ien,fill date)=ORGINATION (file 4 pointer)
"RTN","IBCEF73A",197,0)
 ;
"RTN","IBCEF73A",198,0)
 N IBX,IBDATA,IBORG,IBRX,IBDT,IBY,IBRXN,DFN
"RTN","IBCEF73A",199,0)
 K ^TMP($J,"IBCEF73A")
"RTN","IBCEF73A",200,0)
 S IBORG=0,DFN=$P($G(^DGCR(399,IBIEN399,0)),"^",2),IBLIST="IBCEF73A"
"RTN","IBCEF73A",201,0)
 S IBRXN=0 F  S IBRXN=$O(^IBA(362.4,"AIFN"_IBIEN399,IBRXN)) Q:'IBRXN  S IBX=0 F  S IBX=$O(^IBA(362.4,"AIFN"_IBIEN399,IBRXN,IBX)) Q:'IBX  D
"RTN","IBCEF73A",202,0)
 . S IBDATA=$G(^IBA(362.4,IBX,0))
"RTN","IBCEF73A",203,0)
 . S IBRX=$P(IBDATA,"^",5),IBDT=$P(IBDATA,"^",3) Q:'IBRX!('IBDT)
"RTN","IBCEF73A",204,0)
 . D RX^PSO52API(DFN,IBLIST,IBRX,,"0,2,R")
"RTN","IBCEF73A",205,0)
 . I IBDT=+$G(^TMP($J,"IBCEF73A",DFN,IBRX,22)) S (IBORG,IBLIST(IBRX,IBDT))=$$PSONPI(+$G(^TMP($J,"IBCEF73A",DFN,IBRX,20))) Q
"RTN","IBCEF73A",206,0)
 . S IBY=0 F  S IBY=$O(^TMP($J,"IBCEF73A",DFN,IBRX,"RF",IBY)) Q:'IBY  I IBDT=+$G(^TMP($J,"IBCEF73A",DFN,IBRX,"RF",IBY,.01)) S (IBORG,IBLIST(IBRX,IBDT))=$$PSONPI(+$G(^TMP($J,"IBCEF73A",DFN,IBRX,"RF",IBY,8))) Q
"RTN","IBCEF73A",207,0)
 K ^TMP($J,"IBCEF73A")
"RTN","IBCEF73A",208,0)
 Q IBORG
"RTN","IBCEF73A",209,0)
 ;
"RTN","IBCEF73A",210,0)
PSONPI(IB59IEN) ; returns institution ien for a file 59 ien
"RTN","IBCEF73A",211,0)
 N IB4IEN
"RTN","IBCEF73A",212,0)
 K ^TMP($J,"IBCEF59")
"RTN","IBCEF73A",213,0)
 D PSS^PSO59(IB59IEN,,"IBCEF59")
"RTN","IBCEF73A",214,0)
 S IB4IEN=+$G(^TMP($J,"IBCEF59",IB59IEN,101))
"RTN","IBCEF73A",215,0)
 K ^TMP($J,"IBCEF59")
"RTN","IBCEF73A",216,0)
 Q IB4IEN
"RTN","IBCEF74A")
0^138^B39038241^B39969650
"RTN","IBCEF74A",1,0)
IBCEF74A ;ALB/ESG - Provider ID maint ?ID continuation ;7 Mar 2006
"RTN","IBCEF74A",2,0)
 ;;2.0;INTEGRATED BILLING;**320,343,349,395,400,432,516**;21-MAR-94;Build 123
"RTN","IBCEF74A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF74A",4,0)
 ;
"RTN","IBCEF74A",5,0)
 Q
"RTN","IBCEF74A",6,0)
 ;
"RTN","IBCEF74A",7,0)
EN(IBIFN,IBQUIT,IBID) ; Display billing provider and service provider IDs as part
"RTN","IBCEF74A",8,0)
 ; of the ?ID display/help in the billing screens.
"RTN","IBCEF74A",9,0)
 ; Called from DISPID^IBCEF74.
"RTN","IBCEF74A",10,0)
 NEW IBX,Z,ZI,ZN,SEQ,PSIN,DATA,QUALNM,IDNUM,FACNAME,IBZ,ORGNPI,BPZ,BPNAME,BPNPI,BPTAX,SFNPI,SFTAX
"RTN","IBCEF74A",11,0)
 ;
"RTN","IBCEF74A",12,0)
 ;D ALLIDS^IBCEF75(IBIFN,.IBID)
"RTN","IBCEF74A",13,0)
 ;
"RTN","IBCEF74A",14,0)
 ; Re-sort array by insurance sequence (P/S/T)
"RTN","IBCEF74A",15,0)
 K IBX
"RTN","IBCEF74A",16,0)
 F Z="BILLING PRV","LAB/FAC" F ZI="C","O" S ZN=0 F  S ZN=$O(IBID(Z,IBIFN,ZI,ZN)) Q:'ZN  D
"RTN","IBCEF74A",17,0)
 . S SEQ=$P($G(IBID(Z,IBIFN,ZI,ZN)),U,1) Q:SEQ=""
"RTN","IBCEF74A",18,0)
 . S IBX(Z,SEQ,ZI,ZN)=""
"RTN","IBCEF74A",19,0)
 . Q
"RTN","IBCEF74A",20,0)
 ;
"RTN","IBCEF74A",21,0)
 ; Display billing provider information - IB*2*400
"RTN","IBCEF74A",22,0)
 S BPZ=$$B^IBCEF79(IBIFN)
"RTN","IBCEF74A",23,0)
 D GETBP^IBCEF79(IBIFN,"",+BPZ,"?ID",.IBZ)
"RTN","IBCEF74A",24,0)
 S ORGNPI=$$ORGNPI^IBCEF73A(IBIFN)
"RTN","IBCEF74A",25,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",26,0)
 W !!,"Billing Provider Name and ID Information"
"RTN","IBCEF74A",27,0)
 S BPNAME=$G(IBZ("?ID","NAME"))
"RTN","IBCEF74A",28,0)
 I BPNAME="" S BPNAME="***MISSING***"
"RTN","IBCEF74A",29,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",30,0)
 W !,"Billing Provider:  ",BPNAME
"RTN","IBCEF74A",31,0)
 ;
"RTN","IBCEF74A",32,0)
 S BPNPI=$P(ORGNPI,U,3)
"RTN","IBCEF74A",33,0)
 I BPNPI="" S BPNPI="***MISSING***"
"RTN","IBCEF74A",34,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",35,0)
 W !?5,"Billing Provider NPI:  ",BPNPI
"RTN","IBCEF74A",36,0)
 ;
"RTN","IBCEF74A",37,0)
 S BPTAX=$$NOPUNCT^IBCEF($P($G(^IBE(350.9,1,1)),U,5),1)
"RTN","IBCEF74A",38,0)
 I BPTAX="" S BPTAX="***MISSING***"
"RTN","IBCEF74A",39,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",40,0)
 W !?5,"Billing Provider Tax ID (VistA Record PRV):  ",BPTAX
"RTN","IBCEF74A",41,0)
 ;
"RTN","IBCEF74A",42,0)
 ; Display billing provider secondary ID's (current ins only)
"RTN","IBCEF74A",43,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",44,0)
 W !?5,"Billing Provider Secondary IDs (VistA Record CI1A):"
"RTN","IBCEF74A",45,0)
 S Z="BILLING PRV"
"RTN","IBCEF74A",46,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",47,0)
 I IBQUIT G EX
"RTN","IBCEF74A",48,0)
 ;
"RTN","IBCEF74A",49,0)
 ; Now display the lab or facility primary and secondary IDs
"RTN","IBCEF74A",50,0)
 ; This is the service facility information
"RTN","IBCEF74A",51,0)
 ; IB*2*400 - check to make sure there is a service facility
"RTN","IBCEF74A",52,0)
 ;
"RTN","IBCEF74A",53,0)
 I $P(BPZ,U,3)="" G LPRV     ; no service facility information to display
"RTN","IBCEF74A",54,0)
 ;
"RTN","IBCEF74A",55,0)
 ; Service facility name, similar code as found in SUB-2
"RTN","IBCEF74A",56,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",57,0)
 W !!,"Service Facility Name and ID Information"
"RTN","IBCEF74A",58,0)
 ;
"RTN","IBCEF74A",59,0)
 ; MRD;IB*2.0*516 - Due to fields being marked for deletion, the
"RTN","IBCEF74A",60,0)
 ; function $$SENDSF^IBCEF79 will always return '1'.  Refer to
"RTN","IBCEF74A",61,0)
 ; that function and INSFLGS^IBCEF79 for more information.
"RTN","IBCEF74A",62,0)
 ;
"RTN","IBCEF74A",63,0)
 ; Display note if ins co flag to suppress lab/fac data is set (only applies in switchback mode)
"RTN","IBCEF74A",64,0)
 ;I '$$SENDSF^IBCEF79(IBIFN) D  I IBQUIT G EX
"RTN","IBCEF74A",65,0)
 ;. I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",66,0)
 ;. W !!,"Note:  Service Facility Data not sent for Current Insurance"
"RTN","IBCEF74A",67,0)
 ;. W !,"       'Send VA Lab/Facility IDs or Facility Data for VAMC?' is set to NO",!
"RTN","IBCEF74A",68,0)
 ;. Q
"RTN","IBCEF74A",69,0)
 ;
"RTN","IBCEF74A",70,0)
 S FACNAME=$$GETFAC^IBCEP8(+$P(BPZ,U,4),$P(BPZ,U,3),0)
"RTN","IBCEF74A",71,0)
 I FACNAME="" S FACNAME="***MISSING***"
"RTN","IBCEF74A",72,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",73,0)
 W !?5,"Facility:  ",FACNAME
"RTN","IBCEF74A",74,0)
 ;
"RTN","IBCEF74A",75,0)
 S SFNPI=$P(ORGNPI,U,1)
"RTN","IBCEF74A",76,0)
 I SFNPI="" S SFNPI="***MISSING***"
"RTN","IBCEF74A",77,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",78,0)
 W !?5,"Lab or Facility NPI:  ",SFNPI
"RTN","IBCEF74A",79,0)
 ;
"RTN","IBCEF74A",80,0)
 S SFTAX=$$NOPUNCT^IBCEF($$EIN^IBCEP8A(IBIFN),1)
"RTN","IBCEF74A",81,0)
 I SFTAX="" S SFTAX="***MISSING***"
"RTN","IBCEF74A",82,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",83,0)
 W !?5,"Lab or Facility Tax ID (VistA Record SUB):  ",SFTAX
"RTN","IBCEF74A",84,0)
 ;
"RTN","IBCEF74A",85,0)
 ; lab/fac secondary IDs
"RTN","IBCEF74A",86,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",87,0)
 W !?5,"Lab or Facility Secondary IDs (VistA Records SUB1,SUB2,OP3,OP6,OP7):"
"RTN","IBCEF74A",88,0)
 S Z="LAB/FAC"
"RTN","IBCEF74A",89,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",90,0)
 I IBQUIT G EX
"RTN","IBCEF74A",91,0)
 ;
"RTN","IBCEF74A",92,0)
LPRV ;Service Line Providers
"RTN","IBCEF74A",93,0)
 I '$D(IBID("L-PROV")) G EX  ; No Line Level Providers
"RTN","IBCEF74A",94,0)
 N IBSLC,IBN,CO,IBCODE,IBTYP,IBPRTYP,Z0
"RTN","IBCEF74A",95,0)
 S IBSLC=0
"RTN","IBCEF74A",96,0)
 W !!,"Service Line Providers"
"RTN","IBCEF74A",97,0)
 F  S IBSLC=$O(IBID("L-PROV",IBIFN,IBSLC)) Q:'IBSLC  D  I IBQUIT Q
"RTN","IBCEF74A",98,0)
 . I ($Y+6)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT Q
"RTN","IBCEF74A",99,0)
 . W !!?5,"Service Line: ",IBSLC
"RTN","IBCEF74A",100,0)
 . F IBPRTYP=4,3,1,2,5,9 I $D(IBID("L-PROV",IBIFN,IBSLC,"C",1,IBPRTYP)) D  ; Process providers in order: Attending, Rendering, Referring, Operating, Supervising, and Other Operating if they exist
"RTN","IBCEF74A",101,0)
 .. I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT Q
"RTN","IBCEF74A",102,0)
 .. W !?5,$$EXTERNAL^DILFD(399.0404,.01,"",IBPRTYP),": ",$$EXTERNAL^DILFD(399.0404,.02,"",$P(IBID("L-PROV",IBIFN,IBSLC,"C",1,IBPRTYP),U,1))
"RTN","IBCEF74A",103,0)
 .. W !?8,"NPI:",?40,$S($P(IBID("L-PROV",IBIFN,IBSLC,"C",1,IBPRTYP,0),U,4)]"":$P(IBID("L-PROV",IBIFN,IBSLC,"C",1,IBPRTYP,0),U,4),1:"***MISSING***")
"RTN","IBCEF74A",104,0)
 .. K IBTYP
"RTN","IBCEF74A",105,0)
 .. F CO="C","O" D
"RTN","IBCEF74A",106,0)
 ... F IBN=1,2 D
"RTN","IBCEF74A",107,0)
 .... F Z0=1:1 Q:'$D(IBID("L-PROV",IBIFN,IBSLC,CO,IBN,IBPRTYP,Z0))!IBQUIT  D
"RTN","IBCEF74A",108,0)
 ..... S IBCODE=$P(IBID("L-PROV",IBIFN,IBSLC,CO,IBN,IBPRTYP,Z0),U,9)
"RTN","IBCEF74A",109,0)
 ..... Q:$D(IBTYP(IBCODE))  ; 1st of each type transmits
"RTN","IBCEF74A",110,0)
 ..... I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",111,0)
 ..... S IBTYP(IBCODE)=""
"RTN","IBCEF74A",112,0)
 ..... W !,?8,"(",IBID("L-PROV",IBIFN,IBSLC,CO,IBN),") ",$$EXTERNAL^DILFD(36,4.01,"",IBCODE),?40,$P(IBID("L-PROV",IBIFN,IBSLC,CO,IBN,IBPRTYP,Z0),U,4)
"RTN","IBCEF74A",113,0)
 ;
"RTN","IBCEF74A",114,0)
EX ;
"RTN","IBCEF74A",115,0)
 Q
"RTN","IBCEF74A",116,0)
 ;
"RTN","IBCEF74A",117,0)
QUAL(Z,FORMTYPE) ; turn the qualifier code into a qualifier description
"RTN","IBCEF74A",118,0)
 NEW QUAL,IEN
"RTN","IBCEF74A",119,0)
 S QUAL=""
"RTN","IBCEF74A",120,0)
 I $G(Z)="" G QUALX
"RTN","IBCEF74A",121,0)
 I Z="1C" D  G QUALX   ; qualifier for Medicare Part ?
"RTN","IBCEF74A",122,0)
 . I $G(FORMTYPE)=2 S QUAL="MEDICARE PART B"   ; 1500
"RTN","IBCEF74A",123,0)
 . I $G(FORMTYPE)=3 S QUAL="MEDICARE PART A"   ; ub
"RTN","IBCEF74A",124,0)
 . Q
"RTN","IBCEF74A",125,0)
 I Z=34 S Z="SY"       ; qualifier for SSN
"RTN","IBCEF74A",126,0)
 S IEN=+$O(^IBE(355.97,"C",Z,"")) I 'IEN G QUALX
"RTN","IBCEF74A",127,0)
 S QUAL=$P($G(^IBE(355.97,IEN,0)),U,1)
"RTN","IBCEF74A",128,0)
QUALX ;
"RTN","IBCEF74A",129,0)
 Q QUAL
"RTN","IBCEF74A",130,0)
 ;
"RTN","IBCEF74A",131,0)
SECID(Z,IBQUIT) ; Display secondary ID and qualifier information
"RTN","IBCEF74A",132,0)
 ; Z is the type of IDs passed in; either BILLING PRV or LAB/FAC
"RTN","IBCEF74A",133,0)
 ; IBQUIT is returned if passed by reference
"RTN","IBCEF74A",134,0)
 NEW SEQ,ZI,ZN,PSIN,DATA,QUALNM,IDNUM,NODATA
"RTN","IBCEF74A",135,0)
 S IBQUIT=0,NODATA=1
"RTN","IBCEF74A",136,0)
 F SEQ="P","S","T" D  Q:IBQUIT
"RTN","IBCEF74A",137,0)
 . ;
"RTN","IBCEF74A",138,0)
 . ; current ins only for billing provider secondary IDs
"RTN","IBCEF74A",139,0)
 . I Z="BILLING PRV",SEQ'=$$COB^IBCEF(IBIFN) Q
"RTN","IBCEF74A",140,0)
 . S ZI=""
"RTN","IBCEF74A",141,0)
 . F  S ZI=$O(IBX(Z,SEQ,ZI)) Q:ZI=""  D  Q:IBQUIT
"RTN","IBCEF74A",142,0)
 .. S ZN=0
"RTN","IBCEF74A",143,0)
 .. F  S ZN=$O(IBX(Z,SEQ,ZI,ZN)) Q:'ZN  D  Q:IBQUIT
"RTN","IBCEF74A",144,0)
 ... S PSIN=0   ; start at 0 to skip primary IDs
"RTN","IBCEF74A",145,0)
 ... ;*432/TAZ - Changed Q:PSIN="" to Q:'PSIN to prevent "CONTACTS" node from printing as secondary ID
"RTN","IBCEF74A",146,0)
 ... F  S PSIN=$O(IBID(Z,IBIFN,ZI,ZN,PSIN)) Q:'PSIN  D  Q:IBQUIT
"RTN","IBCEF74A",147,0)
 .... S DATA=$G(IBID(Z,IBIFN,ZI,ZN,PSIN))
"RTN","IBCEF74A",148,0)
 .... S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",149,0)
 .... S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",150,0)
 .... I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",151,0)
 .... S NODATA=0
"RTN","IBCEF74A",152,0)
 .... W !?8,"(",SEQ,") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",153,0)
 .... I Z="LAB/FAC",$D(^DGCR(399,IBIFN,"I2")),SEQ=$$COB^IBCEF(IBIFN) W ?54,"<<<Current Ins"
"RTN","IBCEF74A",154,0)
 .... I Z="BILLING PRV",PSIN=1 W ?54,"<<<System Generated ID"
"RTN","IBCEF74A",155,0)
 .... Q
"RTN","IBCEF74A",156,0)
 ... Q
"RTN","IBCEF74A",157,0)
 .. Q
"RTN","IBCEF74A",158,0)
 . Q
"RTN","IBCEF74A",159,0)
 I NODATA,'IBQUIT W !?8,"(-) None Found"
"RTN","IBCEF74A",160,0)
SECIDX ;
"RTN","IBCEF74A",161,0)
 Q
"RTN","IBCEF74A",162,0)
 ;
"RTN","IBCEF76")
0^139^B48153213^B45722940
"RTN","IBCEF76",1,0)
IBCEF76 ;ALB/WCJ - Provider ID functions ;13 Feb 2006
"RTN","IBCEF76",2,0)
 ;;2.0;INTEGRATED BILLING;**320,349,400,432,516**;21-MAR-94;Build 123
"RTN","IBCEF76",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF76",4,0)
 ;
"RTN","IBCEF76",5,0)
 G AWAY
"RTN","IBCEF76",6,0)
AWAY Q
"RTN","IBCEF76",7,0)
 ;
"RTN","IBCEF76",8,0)
LFIDS(IBIFN,IDS,IBSTRIP,SEG) ;
"RTN","IBCEF76",9,0)
 ;  Pass in the the internal claim number and return the array of IDS.
"RTN","IBCEF76",10,0)
 ;  IDS("C"urrent or "O"ther, Order of Insurance within subscript 1, order of ID within subscript 2)
"RTN","IBCEF76",11,0)
 ;  IDS("C",1)="P"
"RTN","IBCEF76",12,0)
 ;  IDS("C",1,0)=Qualifier^Primary ID
"RTN","IBCEF76",13,0)
 ;  IDS("C",1,1)=Qualifier^Sec ID #1
"RTN","IBCEF76",14,0)
 ;  IDS("C",1,2)=Qualifier^Sec ID #2
"RTN","IBCEF76",15,0)
 ;
"RTN","IBCEF76",16,0)
 N DAT,IBFRMTYP,IBCARE,IBDIV,IBINS,OUTFAC,MAIN,IBCCOB,TMPIDS,COB,IBSORT1,IBSORT2,IBLIMIT,IBLF
"RTN","IBCEF76",17,0)
 ;
"RTN","IBCEF76",18,0)
 S DAT=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF76",19,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF76",20,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEF76",21,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF76",22,0)
 S IBDIV=+$P(DAT,U,22)
"RTN","IBCEF76",23,0)
 S OUTFAC=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCEF76",24,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",25,0)
 ;
"RTN","IBCEF76",26,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF76",27,0)
 F COB=1:1:3 D
"RTN","IBCEF76",28,0)
 . S IBSORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEF76",29,0)
 . S IBSORT2=$S(IBSORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEF76",30,0)
 . S IBLIMIT=$S(IBSORT1="C":5,1:3)  ; Limit secondary IDs
"RTN","IBCEF76",31,0)
 . S DAT=$G(^DGCR(399,IBIFN,"I"_COB))
"RTN","IBCEF76",32,0)
 . ;
"RTN","IBCEF76",33,0)
 . S IBINS=$P(DAT,U)  ; insurance PTR 36
"RTN","IBCEF76",34,0)
 . Q:IBINS=""
"RTN","IBCEF76",35,0)
 . ;
"RTN","IBCEF76",36,0)
 . ; IB*2*400 - esg - 9/24/08, 2/24/09 - if there is no service facility for this claim at this COB, then get out
"RTN","IBCEF76",37,0)
 . S IBLF=$$B^IBCEF79(IBIFN,COB)       ; billing provider/service facility function
"RTN","IBCEF76",38,0)
 . I $P(IBLF,U,3)="" Q                 ; no service facility data at this COB, don't build this "LAB/FAC" area
"RTN","IBCEF76",39,0)
 . ;
"RTN","IBCEF76",40,0)
 . I OUTFAC]"" D  Q
"RTN","IBCEF76",41,0)
 .. D NONVALF(IBIFN,OUTFAC_";IBA(355.93,",IBINS,IBFRMTYP,IBCARE,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",42,0)
 . ;
"RTN","IBCEF76",43,0)
 . I OUTFAC="" D
"RTN","IBCEF76",44,0)
 .. ;
"RTN","IBCEF76",45,0)
 .. ; MRD;IB*2.0*516 - Due to fields being marked for deletion, the
"RTN","IBCEF76",46,0)
 .. ; function $$SENDSF^IBCEF79 will always return '1'.  Refer to
"RTN","IBCEF76",47,0)
 .. ; that function and INSFLGS^^IBCEF79 for more information.
"RTN","IBCEF76",48,0)
 .. ;
"RTN","IBCEF76",49,0)
 .. ; if ins co flag says to not send svc fac data and we're sending an EDI claim, then get out
"RTN","IBCEF76",50,0)
 .. ;I '$$SENDSF^IBCEF79(IBIFN,COB),$G(^TMP("IBTX",$J,IBIFN)) Q
"RTN","IBCEF76",51,0)
 .. ;
"RTN","IBCEF76",52,0)
 .. ;IB*2.0*432/TAZ Moved Taxid setup inside VALF look to send as secondary ID for Medicare claims.
"RTN","IBCEF76",53,0)
 .. ;S IDS("LAB/FAC",IBIFN,IBSORT1,IBSORT2,0)=$$STRIP($$TAXID^IBCEF75(),1,U,IBSTRIP)
"RTN","IBCEF76",54,0)
 .. D VALF(IBIFN,IBINS,IBFRMTYP,IBDIV,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",55,0)
 Q
"RTN","IBCEF76",56,0)
 ;
"RTN","IBCEF76",57,0)
VALF(IBIFN,INS,FT,DIV,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get VA Lab/Fac Secondary IDs
"RTN","IBCEF76",58,0)
 ; Pass in INS - IEN to file 36
"RTN","IBCEF76",59,0)
 ; FT - 1 = UB 2 = 1500
"RTN","IBCEF76",60,0)
 ; DIV - PTR to 40.8
"RTN","IBCEF76",61,0)
 ;
"RTN","IBCEF76",62,0)
 N Z,Z0,ID,QUAL,MAIN,IDTBL,CNT,Z,IBMCR
"RTN","IBCEF76",63,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",64,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",INS,Z)) Q:'Z  D
"RTN","IBCEF76",65,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEF76",66,0)
 . Q:$P(Z0,U,8)'="LF"   ; Screen out anything other than Lab or Facility
"RTN","IBCEF76",67,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both
"RTN","IBCEF76",68,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",69,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",70,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",71,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",72,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",73,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",74,0)
 . I $P(Z0,U,5)=""!($P(Z0,U,5)=0)!($P(Z0,U,5)=MAIN) S IDTBL("DEF",QUAL)=ID  ; set up default for main division
"RTN","IBCEF76",75,0)
 . I $P(Z0,U,5)=DIV S IDTBL("DIV",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",76,0)
 S CNT=0
"RTN","IBCEF76",77,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)
"RTN","IBCEF76",78,0)
 ;IB*2.0*432/TAZ If Medicare send Tax ID as 1st Secondary ID ; only if it's not a printed form
"RTN","IBCEF76",79,0)
 S IBMCR=""
"RTN","IBCEF76",80,0)
 I '(($G(IBXFORM)=2)!($G(IBXFORM)=3)) S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN)
"RTN","IBCEF76",81,0)
 I IBMCR S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)="LU"_U_$$STRIP($P($$TAXID^IBCEF75(),U,2),1,U,IBSTRIP)
"RTN","IBCEF76",82,0)
 I $D(IDTBL("DIV")) D  Q
"RTN","IBCEF76",83,0)
 . S Z="" F  S Z=$O(IDTBL("DIV",Z)) Q:Z=""  D
"RTN","IBCEF76",84,0)
 .. ;IB*2.0*432/TAZ If Medicare, screen out Tax ID
"RTN","IBCEF76",85,0)
 .. I IBMCR,(Z=24) Q
"RTN","IBCEF76",86,0)
 .. S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DIV",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",87,0)
 I $D(IDTBL("DEF")) D  Q
"RTN","IBCEF76",88,0)
 . S Z="" F  S Z=$O(IDTBL("DEF",Z)) Q:Z=""  D
"RTN","IBCEF76",89,0)
 .. ;IB*2.0*432/TAZ If Medicare, screen out Tax ID
"RTN","IBCEF76",90,0)
 .. I IBMCR,(Z=24) Q
"RTN","IBCEF76",91,0)
 .. S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DEF",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",92,0)
 Q
"RTN","IBCEF76",93,0)
 ;
"RTN","IBCEF76",94,0)
NONVALF(IBIFN,PRV,INS,FT,PT,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get Non VA Lab/Fac Secondary IDs
"RTN","IBCEF76",95,0)
 ; Pass in PRV - VPTR - PTR to 355.93 (in format of variabel pointer IEN;IBA(355.93,
"RTN","IBCEF76",96,0)
 ; Pass in INS - PTR to 36 of null (not provide by insurance company)
"RTN","IBCEF76",97,0)
 ; FT - 1 = UB 2 = 1500
"RTN","IBCEF76",98,0)
 ; PT - Patient Type - 1 inpatient 2 outpatient
"RTN","IBCEF76",99,0)
 ; IDS array being returned
"RTN","IBCEF76",100,0)
 ; SORT1 - "C"urrent or "O"ther
"RTN","IBCEF76",101,0)
 ; SORT2 - 1 if current or (1 or 2 if other)
"RTN","IBCEF76",102,0)
 N Z,Z0,ID,QUAL,IDTBL,CNT,IBMCR
"RTN","IBCEF76",103,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",PRV,Z)) Q:'Z  D
"RTN","IBCEF76",104,0)
 . S Z0=$G(^IBA(355.9,Z,0))
"RTN","IBCEF76",105,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both UB and 1500
"RTN","IBCEF76",106,0)
 . I +$P(Z0,U,5) Q:$P(Z0,U,5)'=PT   ; Patient type must match that passed in or be a 0 which allows both in patient and outpatient
"RTN","IBCEF76",107,0)
 . I INS]"",$P(Z0,U,2)]"",INS'=$P(Z0,U,2) Q
"RTN","IBCEF76",108,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",109,0)
 . Q:ID=""
"RTN","IBCEF76",110,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",111,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",112,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",113,0)
 . Q:QUAL=""
"RTN","IBCEF76",114,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",115,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",116,0)
 . I $G(SEG)="SUB1" Q:$$SUB1^IBCEF73(FT)'[(U_QUAL_U)
"RTN","IBCEF76",117,0)
 . I $P(Z0,U,2)="" S IDTBL("OWN",QUAL)=ID  ; set up default of lab or facilities own ids
"RTN","IBCEF76",118,0)
 . I $P(Z0,U,2)=INS S IDTBL("INS",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",119,0)
 ;
"RTN","IBCEF76",120,0)
 S CNT=0
"RTN","IBCEF76",121,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)_U_PRV
"RTN","IBCEF76",122,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2,"CONTACT")=$G(^IBA(355.93,+PRV,1))
"RTN","IBCEF76",123,0)
 ; get primary
"RTN","IBCEF76",124,0)
 S Z0=$G(^IBA(355.93,+PRV,0))
"RTN","IBCEF76",125,0)
 ;IB*2.0*432/TAZ If Medicare send Tax ID as 1st Secondary ID
"RTN","IBCEF76",126,0)
 S IBMCR=""
"RTN","IBCEF76",127,0)
 I '(($G(IBXFORM)=2)!($G(IBXFORM)=3)) S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN)
"RTN","IBCEF76",128,0)
 ;I $P(Z0,U,9)]"",$P(Z0,U,13)]"",IBMCR S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)="LU"_U_$$STRIP($P($G(^IBE(355.97,$P(Z0,U,13),0)),U,3)_U_$P(Z0,U,9),1,U,IBSTRIP)
"RTN","IBCEF76",129,0)
 I $P(Z0,U,9)]"",$P(Z0,U,13)]"",IBMCR S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)="LU"_U_$$STRIP($P(Z0,U,9),1,U,IBSTRIP)
"RTN","IBCEF76",130,0)
 ; get secondarys in order
"RTN","IBCEF76",131,0)
 I $D(IDTBL("INS")) D
"RTN","IBCEF76",132,0)
 . N Z S Z="" F  S Z=$O(IDTBL("INS",Z)) Q:Z=""  D
"RTN","IBCEF76",133,0)
 .. ;IB*2.0*432/TAZ If Medicare, screen out Tax ID
"RTN","IBCEF76",134,0)
 .. I IBMCR,(Z=24) Q
"RTN","IBCEF76",135,0)
 .. S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("INS",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",136,0)
 I $D(IDTBL("OWN")),CNT'=IBLIMIT D
"RTN","IBCEF76",137,0)
 . N Z S Z="" F  S Z=$O(IDTBL("OWN",Z)) Q:Z=""  D
"RTN","IBCEF76",138,0)
 .. ;IB*2.0*432/TAZ If Medicare, screen out Tax ID
"RTN","IBCEF76",139,0)
 .. I IBMCR,(Z=24) Q
"RTN","IBCEF76",140,0)
 .. I '$D(IDTBL("INS",Z)) S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("OWN",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",141,0)
 Q
"RTN","IBCEF76",142,0)
 ;
"RTN","IBCEF76",143,0)
STRIP(X,SPACE,EXC,IBSTRIP) ;
"RTN","IBCEF76",144,0)
 ; Strip punctuation from data in X
"RTN","IBCEF76",145,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF76",146,0)
 ; EXC = list of punct not to strip
"RTN","IBCEF76",147,0)
 ; 
"RTN","IBCEF76",148,0)
 Q:'$G(IBSTRIP) X
"RTN","IBCEF76",149,0)
 Q $$NOPUNCT^IBCEF(X,$G(SPACE),$G(EXC))
"RTN","IBCEF76",150,0)
 ;
"RTN","IBCEF76",151,0)
OTH(IBIFN,IBXSAVE,IBXDATA,COND,SEG) ; Procedure used in piece 2 of some output
"RTN","IBCEF76",152,0)
 ; formatter segments for other insurance
"RTN","IBCEF76",153,0)
 ; COND = 0/1 value passed in that determines whether or not to call the
"RTN","IBCEF76",154,0)
 ;        provider ID function
"RTN","IBCEF76",155,0)
 ;  SEG = name of segment for use in calling ID^IBCEF2 (4 characters)
"RTN","IBCEF76",156,0)
 ;
"RTN","IBCEF76",157,0)
 N Z
"RTN","IBCEF76",158,0)
 ;*432/TAZ - Changed Clean up and Setup routines to IBCEFP*
"RTN","IBCEF76",159,0)
 ;D CLEANUP^IBCEF75(.IBXSAVE)
"RTN","IBCEF76",160,0)
 ;I COND D ALLIDS^IBCEF75(IBIFN,.IBXSAVE,1)
"RTN","IBCEF76",161,0)
 D CLEANUP^IBCEFP1(.IBXSAVE)
"RTN","IBCEF76",162,0)
 I COND D ALLIDS^IBCEFP(IBIFN,.IBXSAVE,1)
"RTN","IBCEF76",163,0)
 ;
"RTN","IBCEF76",164,0)
 ; Special Check:  if Other Insurance #2 has secondary ID's while Other
"RTN","IBCEF76",165,0)
 ; Insurance #1 does not, then move up #2 to be #1 here.  This is to
"RTN","IBCEF76",166,0)
 ; ensure the output formatter IBXDATA array is built properly.
"RTN","IBCEF76",167,0)
 ;
"RTN","IBCEF76",168,0)
 I $O(IBXSAVE("LAB/FAC",IBIFN,"O",2,0)),'$O(IBXSAVE("LAB/FAC",IBIFN,"O",1,0)) D
"RTN","IBCEF76",169,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",1)
"RTN","IBCEF76",170,0)
 . M IBXSAVE("LAB/FAC",IBIFN,"O",1)=IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",171,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",172,0)
 . Q
"RTN","IBCEF76",173,0)
 ;
"RTN","IBCEF76",174,0)
 K IBXDATA
"RTN","IBCEF76",175,0)
 S Z=0
"RTN","IBCEF76",176,0)
 F  S Z=$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z)) Q:'Z  D
"RTN","IBCEF76",177,0)
 . I '$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z,0)) Q
"RTN","IBCEF76",178,0)
 . S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBIFN,"O",Z)),U,1)
"RTN","IBCEF76",179,0)
 . I Z>1 D ID^IBCEF2(Z,SEG)
"RTN","IBCEF76",180,0)
 . Q
"RTN","IBCEF76",181,0)
OTHX ;
"RTN","IBCEF76",182,0)
 Q
"RTN","IBCEF76",183,0)
 ;
"RTN","IBCEF77")
0^135^B27920356^B24927059
"RTN","IBCEF77",1,0)
IBCEF77 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF77",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291,320,348,349,516**;21-MAR-94;Build 123
"RTN","IBCEF77",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF77",4,0)
 ;
"RTN","IBCEF77",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ,IBLIMIT) ;
"RTN","IBCEF77",6,0)
 N IBXIEN,IBXDATA,IBNET,IBTRI,IB1,IB2,IBID,Z,IBZ,IBZ1,IBSVP
"RTN","IBCEF77",7,0)
 S (IB1,IB2,IBZ,IBZ1,IBTRI)=""
"RTN","IBCEF77",8,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBZ",,IB399)
"RTN","IBCEF77",9,0)
 S IBZ1=$$ALLPTYP^IBCEF3(IB399)
"RTN","IBCEF77",10,0)
 F Z=1:1:3 S $P(IBZ1,U,Z)=$S($P(IBZ1,U,Z)="CH":1,1:"") S:$P(IBZ1,U,Z) IBTRI=1
"RTN","IBCEF77",11,0)
 S IBNET=$$NETID^IBCEP() ; netwrk id type
"RTN","IBCEF77",12,0)
 I $G(IBN) D
"RTN","IBCEF77",13,0)
 . S Z=0 F  S Z=$O(IBDST(IBPRNUM,IBPRTYP,Z)) Q:'Z  S IBID(+$P(IBDST(IBPRNUM,IBPRTYP,Z),U,9))=""
"RTN","IBCEF77",14,0)
 F  S IB1=$O(IBSRC(IB1)) Q:IB1=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",15,0)
 . N OK,IBSTLIC
"RTN","IBCEF77",16,0)
 . S IBSTLIC=""
"RTN","IBCEF77",17,0)
 . F  S IB2=$O(IBSRC(IB1,IB2)) Q:IB2=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",18,0)
 . . S IBSVP=$P(IBSRC(IB1,IB2),U)
"RTN","IBCEF77",19,0)
 . . ; If ID overridden, output no others of this type
"RTN","IBCEF77",20,0)
 . . I $G(IBEXC),$P($G(IBSRC(IB1,IB2)),U,9)=IBEXC Q
"RTN","IBCEF77",21,0)
 . . ; Ck state of care/lic match if st lic#
"RTN","IBCEF77",22,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="0B" S OK=1 D  Q:'OK
"RTN","IBCEF77",23,0)
 . . . I +$$CAREST^IBCEP2A(IB399)'=$P(IBSRC(IB1,IB2),U,7) S IBSTLIC=1 Q
"RTN","IBCEF77",24,0)
 . . . I $G(IBSTLIC(0))'="" S OK=0 Q
"RTN","IBCEF77",25,0)
 . . . S IBSTLIC(0)=$G(IBSRC(IB1,IB2)),OK=0
"RTN","IBCEF77",26,0)
 . . ; Exclude SSN from sec ids unless required
"RTN","IBCEF77",27,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="SY" Q
"RTN","IBCEF77",28,0)
 . . ; Only 1 of each prov id type
"RTN","IBCEF77",29,0)
 . . Q:$D(IBID(+$P($G(IBSRC(IB1,IB2)),U,9)))
"RTN","IBCEF77",30,0)
 . . S IBN=IBN+1,IBID(+$P($G(IBSRC(IB1,IB2)),U,9))=""
"RTN","IBCEF77",31,0)
 . . S IBDST(IBPRNUM,IBPRTYP,IBN)=$G(IBSRC(IB1,IB2))
"RTN","IBCEF77",32,0)
 . I IBN'=IBLIMIT,'$G(IBSTLIC),$G(IBSTLIC(0))'="" S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=IBSTLIC(0)
"RTN","IBCEF77",33,0)
 I $$FT^IBCEF(IB399)=2,$G(IBID(IBNET))="",IBTRI,$P(IBZ1,U,IBSEQ) D    ; WCJ 02/13/2006
"RTN","IBCEF77",34,0)
 . Q:$P(IBZ,U,IBPRTYP)=""
"RTN","IBCEF77",35,0)
 . ; here, no network id & TRICARE ins co.
"RTN","IBCEF77",36,0)
 . N Z
"RTN","IBCEF77",37,0)
 . S Z=+$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)),Z=$P($G(^DGCR(399,IB399,"PRV",Z,0)),U,2)
"RTN","IBCEF77",38,0)
 . S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=Z_U_+$$POLICY^IBCEF(IB399,1,IBSEQ)_U_$P($G(^IBE(355.97,IBNET,0)),U,3)_U_$P(IBZ,U,IBPRTYP)_U_"0^0^^^"_IBNET
"RTN","IBCEF77",39,0)
 Q
"RTN","IBCEF77",40,0)
 ;
"RTN","IBCEF77",41,0)
 ; esg - 8/25/06 - IB*2*348 - CFIDS function
"RTN","IBCEF77",42,0)
 ;
"RTN","IBCEF77",43,0)
CFIDS(IBIFN,PRVTYP,ALLOWIDS) ; Claim Form IDs for human providers
"RTN","IBCEF77",44,0)
 ; Function returns a 3 piece string:  [1] default secondary ID qual
"RTN","IBCEF77",45,0)
 ;                                     [2] default secondary ID
"RTN","IBCEF77",46,0)
 ;                                     [3] NPI
"RTN","IBCEF77",47,0)
 ; Input:   IBIFN - internal claim#
"RTN","IBCEF77",48,0)
 ;         PRVTYP - internal provider type ID number
"RTN","IBCEF77",49,0)
 ;                - 1:REFER;2:OPER;3:REND;4:ATT;5:SUPER;9:OTHER
"RTN","IBCEF77",50,0)
 ;                - if blank, then default Att/Rend based on form type
"RTN","IBCEF77",51,0)
 ;         ALLOWIDS - List of allowable Secondary IDS ^ delimited. 
"RTN","IBCEF77",52,0)
 ;                  ex "^1A^1B^1C^1H^G2^LU^N5^"
"RTN","IBCEF77",53,0)
 ;                  UB-04 only wants IDs provided by the payer, not the providers own IDS
"RTN","IBCEF77",54,0)
 ;                  Also, they want the qualifier to be G2 (Commercial)
"RTN","IBCEF77",55,0)
 ;                  if it is a payer provided ID
"RTN","IBCEF77",56,0)
 NEW ID,FT,IBZ,IBQ,IBSID,IBNPI,I,OK
"RTN","IBCEF77",57,0)
 S ID=""
"RTN","IBCEF77",58,0)
 I '$G(IBIFN) G CFIDSX
"RTN","IBCEF77",59,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF77",60,0)
 I '$G(PRVTYP) S PRVTYP=3 I FT=3 S PRVTYP=4
"RTN","IBCEF77",61,0)
 D ALLIDS^IBCEF75(IBIFN,.IBZ,1)
"RTN","IBCEF77",62,0)
 S OK=0 I $G(ALLOWIDS)="" S OK=1
"RTN","IBCEF77",63,0)
 F I=1:1 D  Q:OK
"RTN","IBCEF77",64,0)
 . S IBQ=$P($G(IBZ("PROVINF",IBIFN,"C",1,PRVTYP,I)),U,3)    ; qualifier
"RTN","IBCEF77",65,0)
 . S IBSID=$P($G(IBZ("PROVINF",IBIFN,"C",1,PRVTYP,I)),U,4)  ; ID#
"RTN","IBCEF77",66,0)
 . I IBQ="",IBSID="" S OK=1 Q
"RTN","IBCEF77",67,0)
 . Q:OK
"RTN","IBCEF77",68,0)
 . I $G(ALLOWIDS)[(U_IBQ_U) S OK=1,IBQ="G2" Q
"RTN","IBCEF77",69,0)
 . S (IBQ,IBSID)=""
"RTN","IBCEF77",70,0)
 S IBNPI=""
"RTN","IBCEF77",71,0)
 D F^IBCEF("N-PROVIDER NPI CODES","IBNPI",,IBIFN)
"RTN","IBCEF77",72,0)
 S IBNPI=$P(IBNPI,U,PRVTYP)                               ; NPI
"RTN","IBCEF77",73,0)
 ;
"RTN","IBCEF77",74,0)
 ; special check for the referring doc
"RTN","IBCEF77",75,0)
 I PRVTYP=1,$D(IBZ("PROVINF",IBIFN,"C",1,PRVTYP)),IBQ="",IBSID="" S IBQ="1G",IBSID="VAD000"
"RTN","IBCEF77",76,0)
 ;
"RTN","IBCEF77",77,0)
 ; If UB-04 and no IDs, use VA UPIN as deafult
"RTN","IBCEF77",78,0)
 I $D(IBZ("PROVINF",IBIFN,"C",1,PRVTYP)),FT=3,IBQ="",IBSID="" S IBQ="1G",IBSID="VAD000"
"RTN","IBCEF77",79,0)
 ;
"RTN","IBCEF77",80,0)
 ; determine if legacy ID's should be displayed
"RTN","IBCEF77",81,0)
 I '$$PRTLID(IBIFN,IBNPI) S (IBQ,IBSID)=""
"RTN","IBCEF77",82,0)
 ;
"RTN","IBCEF77",83,0)
 S ID=IBQ_U_IBSID_U_IBNPI
"RTN","IBCEF77",84,0)
CFIDSX ;
"RTN","IBCEF77",85,0)
 Q ID
"RTN","IBCEF77",86,0)
 ;
"RTN","IBCEF77",87,0)
DOL(AMT,LEN,DEC) ; format dollar amounts for printed claim forms
"RTN","IBCEF77",88,0)
 ; AMT = amount to be formatted
"RTN","IBCEF77",89,0)
 ; LEN = length of field - right justified to this length
"RTN","IBCEF77",90,0)
 ; DEC = flag to include the decimal point or not
"RTN","IBCEF77",91,0)
 ;       DEFAULT value is to not include the decimal point
"RTN","IBCEF77",92,0)
 ;       if DEC is not defined or 0, assume no decimal point
"RTN","IBCEF77",93,0)
 ;       so 15 will be returned as 1500, 6.77 will be returned as 677
"RTN","IBCEF77",94,0)
 ;       if DEC is 1, then the decimal point will be included
"RTN","IBCEF77",95,0)
 ;
"RTN","IBCEF77",96,0)
 S LEN=$G(LEN,10),DEC=$G(DEC,0)     ; defaults
"RTN","IBCEF77",97,0)
 S AMT=$FN(+$G(AMT),"",2)           ; format # with 2 decimals
"RTN","IBCEF77",98,0)
 I 'DEC S AMT=$TR(AMT,".")          ; strip or leave decimal
"RTN","IBCEF77",99,0)
 S AMT=$J(AMT,LEN)                  ; right justify
"RTN","IBCEF77",100,0)
 Q AMT
"RTN","IBCEF77",101,0)
 ;
"RTN","IBCEF77",102,0)
PRTLID(IBIFN,NPI) ; YMG; Print Legacy IDs on the CMS-1500 or UB-04 form
"RTN","IBCEF77",103,0)
 ; Function fetches form type associated with given claim number
"RTN","IBCEF77",104,0)
 ; (values: 2 - CMS-1500 form, 3 - UB-04 form), then looks at
"RTN","IBCEF77",105,0)
 ; "Print Legacy ID" site parameter for this particular form type.
"RTN","IBCEF77",106,0)
 ; 
"RTN","IBCEF77",107,0)
 ; Possible site parameter values are:
"RTN","IBCEF77",108,0)
 ;   "Y" - always print Legacy ID
"RTN","IBCEF77",109,0)
 ;   "N" - never print Legacy ID
"RTN","IBCEF77",110,0)
 ;   "C" - only print Legacy ID if NPI is not available.
"RTN","IBCEF77",111,0)
 ;   
"RTN","IBCEF77",112,0)
 ; This information is used to determine if Legacy ID should be printed
"RTN","IBCEF77",113,0)
 ; for claim number in question.
"RTN","IBCEF77",114,0)
 ; 
"RTN","IBCEF77",115,0)
 ; Note: Situation when "Print Legacy ID" site parameter is not set is treated
"RTN","IBCEF77",116,0)
 ;       as if this parameter was set to "Y" - always print Legacy ID.
"RTN","IBCEF77",117,0)
 ; 
"RTN","IBCEF77",118,0)
 ; Input:
"RTN","IBCEF77",119,0)
 ;             IBIFN - internal claim number
"RTN","IBCEF77",120,0)
 ;       NPI   - NPI number (or "" if no NPI is available)
"RTN","IBCEF77",121,0)
 ; 
"RTN","IBCEF77",122,0)
 ; Returns:
"RTN","IBCEF77",123,0)
 ;       0  - Legacy ID should not be printed
"RTN","IBCEF77",124,0)
 ;       1  - Legacy ID should be printed
"RTN","IBCEF77",125,0)
 ;
"RTN","IBCEF77",126,0)
 Q $S(NPI="":"YC",1:"Y")[$P($G(^IBE(350.9,1,1)),U,$S($$FT^IBCEF(IBIFN)=2:32,1:33))
"RTN","IBCEF77",127,0)
 ;
"RTN","IBCEF77",128,0)
REMARK(IBIFN,IBXDATA,OFLG) ; procedure to return array of UB-04 remark text
"RTN","IBCEF77",129,0)
 ; for claim IBIFN.  Data pulled from field# 402 of file 399 and
"RTN","IBCEF77",130,0)
 ; formatted into an array IBXDATA(n) where each line is not greater
"RTN","IBCEF77",131,0)
 ; than 24 characters long.  This will fit into UB-04 FL-80.
"RTN","IBCEF77",132,0)
 ;
"RTN","IBCEF77",133,0)
 ; OFLG=1 only when called in the output formatter.  In this case, only
"RTN","IBCEF77",134,0)
 ; 4 lines in IBXDATA will be returned.
"RTN","IBCEF77",135,0)
 ;
"RTN","IBCEF77",136,0)
 NEW TEXT,LEN,IBZ,J,PCE,CHS,NEWCHS,IBK,J,TX,IBCP1
"RTN","IBCEF77",137,0)
 K IBXDATA
"RTN","IBCEF77",138,0)
 ;
"RTN","IBCEF77",139,0)
 ; MRD;IB*2.0*516 - Pull the Bill Remarks for the claim.  If this was
"RTN","IBCEF77",140,0)
 ; called from the Output Formatter, then look at lines of claim for
"RTN","IBCEF77",141,0)
 ; NDC's.  If any are found, they should be added to the end of TEXT.
"RTN","IBCEF77",142,0)
 ;
"RTN","IBCEF77",143,0)
 S TEXT=$P($G(^DGCR(399,+$G(IBIFN),"UF2")),U,3)
"RTN","IBCEF77",144,0)
 I $G(OFLG) D
"RTN","IBCEF77",145,0)
 . S J=0
"RTN","IBCEF77",146,0)
 . F  S J=$O(^DGCR(399,+$G(IBIFN),"CP",J)) Q:'J  S IBCP1=$G(^(J,1)) I $P(IBCP1,U,7)'="" D
"RTN","IBCEF77",147,0)
 . . I TEXT'="" S TEXT=TEXT_" "
"RTN","IBCEF77",148,0)
 . . S TEXT=TEXT_"N4"_$TR($P(IBCP1,U,7),"-")_" UN"_$P(IBCP1,U,8)
"RTN","IBCEF77",149,0)
 . . Q
"RTN","IBCEF77",150,0)
 . Q
"RTN","IBCEF77",151,0)
 ;
"RTN","IBCEF77",152,0)
 ; If there's nothing in TEXT, then Quit.
"RTN","IBCEF77",153,0)
 ;
"RTN","IBCEF77",154,0)
 I TEXT="" Q
"RTN","IBCEF77",155,0)
 ;
"RTN","IBCEF77",156,0)
 ; need to break up large words for word wrapping purposes to get
"RTN","IBCEF77",157,0)
 ; as many characters as possible in the box.
"RTN","IBCEF77",158,0)
 S LEN=17
"RTN","IBCEF77",159,0)
 F PCE=1:1 Q:PCE>$L(TEXT," ")  S CHS=$P(TEXT," ",PCE) I $L(CHS)>LEN D
"RTN","IBCEF77",160,0)
 . S NEWCHS=$E(CHS,1,LEN)_" "_$E(CHS,LEN+1,999)
"RTN","IBCEF77",161,0)
 . S $P(TEXT," ",PCE)=NEWCHS
"RTN","IBCEF77",162,0)
 . Q
"RTN","IBCEF77",163,0)
 ;
"RTN","IBCEF77",164,0)
 ; When calling FSTRNG^IBJU1 which calls ^DIWP, FileMan builds the
"RTN","IBCEF77",165,0)
 ; array with strings of max length=1 less than what you tell it.
"RTN","IBCEF77",166,0)
 ;
"RTN","IBCEF77",167,0)
 S LEN=20                             ; line 1 is 19 chars
"RTN","IBCEF77",168,0)
 D FSTRNG^IBJU1(TEXT,LEN,.IBZ)        ; build IBZ array
"RTN","IBCEF77",169,0)
 S IBK=$$TRIM^XLFSTR($G(IBZ(1)))      ; save off the first line
"RTN","IBCEF77",170,0)
 S TEXT=$P(TEXT,IBK,2,99)             ; restore the rest of the text
"RTN","IBCEF77",171,0)
 S TEXT=$$TRIM^XLFSTR(TEXT)           ; trim spaces
"RTN","IBCEF77",172,0)
 ;
"RTN","IBCEF77",173,0)
 S LEN=25                             ; the rest is 24 chars
"RTN","IBCEF77",174,0)
 D FSTRNG^IBJU1(TEXT,LEN,.IBZ)        ; build IBZ array
"RTN","IBCEF77",175,0)
 S IBXDATA(1)="     "_IBK             ; line 1
"RTN","IBCEF77",176,0)
 S J=0 F  S J=$O(IBZ(J)) Q:'J  D      ; lines 2-n
"RTN","IBCEF77",177,0)
 . I J>3,$G(OFLG) Q                   ; only 4 lines for output formatter
"RTN","IBCEF77",178,0)
 . S TX=$$TRIM^XLFSTR($G(IBZ(J)))
"RTN","IBCEF77",179,0)
 . I TX'="" S IBXDATA(J+1)=TX
"RTN","IBCEF77",180,0)
 . Q
"RTN","IBCEF77",181,0)
 Q
"RTN","IBCEF77",182,0)
 ;
"RTN","IBCEF78")
0^19^B7140538^B4445010
"RTN","IBCEF78",1,0)
IBCEF78 ;ALB/WCJ - Provider ID functions ;13 May 2007
"RTN","IBCEF78",2,0)
 ;;2.0;INTEGRATED BILLING;**371,516**;21-MAR-94;Build 123
"RTN","IBCEF78",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF78",4,0)
 ;;
"RTN","IBCEF78",5,0)
 G AWAY
"RTN","IBCEF78",6,0)
AWAY Q
"RTN","IBCEF78",7,0)
 ;
"RTN","IBCEF78",8,0)
PAYERIDS(IBXIEN,IBRET) ; This function returns all the PAYER IDS for the current and other insurance(s)
"RTN","IBCEF78",9,0)
 ; 
"RTN","IBCEF78",10,0)
 D PRIPAYID(IBXIEN,.IBRET)
"RTN","IBCEF78",11,0)
 D SECPAYID(IBXIEN,.IBRET)
"RTN","IBCEF78",12,0)
 Q
"RTN","IBCEF78",13,0)
 ;
"RTN","IBCEF78",14,0)
PRIPAYID(IBXIEN,IBXRET) ; Primary Payer IDs
"RTN","IBCEF78",15,0)
 ; Incoming:
"RTN","IBCEF78",16,0)
 ; IBXIEN = IEN for File # 399
"RTN","IBCEF78",17,0)
 ; IBXRET = Return Array for Qualifiers and IDs
"RTN","IBCEF78",18,0)
 ;
"RTN","IBCEF78",19,0)
 ; Outgoing
"RTN","IBCEF78",20,0)
 ; IBXRET("CI_PID",1)=QUAL^ID
"RTN","IBCEF78",21,0)
 ; IBXRET("OI_PID",#)=QUAL^ID
"RTN","IBCEF78",22,0)
 ; 
"RTN","IBCEF78",23,0)
 N RET,I
"RTN","IBCEF78",24,0)
 S RET=$$PAYERID^IBCEF2(IBXIEN)
"RTN","IBCEF78",25,0)
 I RET]"" S IBXRET("CI_PID",1)="PI"_U_RET
"RTN","IBCEF78",26,0)
 ;
"RTN","IBCEF78",27,0)
 ; MRD;IB*2.0*516 - Added HPID here (CI) and below (OI).
"RTN","IBCEF78",28,0)
 S RET=$$HPID(IBXIEN)
"RTN","IBCEF78",29,0)
 I RET]"" S IBXRET("CI_HPID",1)="XV"_U_RET
"RTN","IBCEF78",30,0)
 ;
"RTN","IBCEF78",31,0)
 S RET=""
"RTN","IBCEF78",32,0)
 D OTHINSID^IBCEF72(IBXIEN,.RET)
"RTN","IBCEF78",33,0)
 F I=1,2 D
"RTN","IBCEF78",34,0)
 . I $P($G(RET(I)),U)]"" S IBXRET("OI_PID",I)="PI"_U_$P(RET(I),U)
"RTN","IBCEF78",35,0)
 . I $P($G(RET(I)),U,2)]"" S IBXRET("OI_HPID",I)="XV"_U_$P(RET(I),U,2)
"RTN","IBCEF78",36,0)
 . Q
"RTN","IBCEF78",37,0)
 Q
"RTN","IBCEF78",38,0)
 ;
"RTN","IBCEF78",39,0)
SECPAYID(IBXIEN,IBXRET) ; This returns all of the secondary payer IDs from file #36 
"RTN","IBCEF78",40,0)
 ; for the insurance companies on a given claim
"RTN","IBCEF78",41,0)
 ; 
"RTN","IBCEF78",42,0)
 ; Incoming:
"RTN","IBCEF78",43,0)
 ; IBXIEN = IEN for File # 399
"RTN","IBCEF78",44,0)
 ; IBXRET = Return Array for Qualifiers and IDs
"RTN","IBCEF78",45,0)
 ;
"RTN","IBCEF78",46,0)
 ; Outgoing
"RTN","IBCEF78",47,0)
 ; IBXRET("CI_PSIDS",1)=QUAL^ID^QUAL^ID
"RTN","IBCEF78",48,0)
 ; IBXRET("OI_PSIDS",#)=QUAL^ID^QUAL^ID
"RTN","IBCEF78",49,0)
 ;
"RTN","IBCEF78",50,0)
 N Z,C,IBZ,Z0,FT
"RTN","IBCEF78",51,0)
 F Z=1:1:3 S IBZ(Z)=$$POLICY^IBCEF(IBXIEN,1,Z)
"RTN","IBCEF78",52,0)
 S Z0=0,C=$$COBN^IBCEF(IBXIEN),FT=$$FT^IBCEF(IBXIEN)
"RTN","IBCEF78",53,0)
 F Z=1:1:3 S:C'=Z Z0=Z0+1 S IBXRET($S(C=Z:"CI_PSIDS",1:"OI_PSIDS"),$S(C=Z:1,1:Z0))=$$SPIDS(+IBZ(Z),FT)
"RTN","IBCEF78",54,0)
 Q
"RTN","IBCEF78",55,0)
 ;
"RTN","IBCEF78",56,0)
SPIDS(INS,FT) ;
"RTN","IBCEF78",57,0)
 ; FT = FORM TYPE (2 PROFESSIONAL 3 INSTITUTIONAL)
"RTN","IBCEF78",58,0)
 ; INS = INSURANCE COMPANY (FILE #36) IEN
"RTN","IBCEF78",59,0)
 ; Returns String (^ delimited)
"RTN","IBCEF78",60,0)
 ; [1] = QUAL 1
"RTN","IBCEF78",61,0)
 ; [2] = PAYER ID 1
"RTN","IBCEF78",62,0)
 ; [3] = QUAL 2
"RTN","IBCEF78",63,0)
 ; [4] = PAYER ID 2
"RTN","IBCEF78",64,0)
 Q:'+INS ""
"RTN","IBCEF78",65,0)
 ;
"RTN","IBCEF78",66,0)
 N DATA,PCE
"RTN","IBCEF78",67,0)
 S DATA=$S(FT=3:$P($G(^DIC(36,+INS,6)),U,1,4),FT=2:$P($G(^DIC(36,+INS,6)),U,5,8),1:"")
"RTN","IBCEF78",68,0)
 ;
"RTN","IBCEF78",69,0)
 ; Check for dangling IDs/Qualifiers
"RTN","IBCEF78",70,0)
 F PCE=1,3 D
"RTN","IBCEF78",71,0)
 . I $P(DATA,U,PCE)'="",$P(DATA,U,PCE+1)'="" Q
"RTN","IBCEF78",72,0)
 . S ($P(DATA,U,PCE),$P(DATA,U,PCE+1))=""
"RTN","IBCEF78",73,0)
 ;
"RTN","IBCEF78",74,0)
 ; fill in the gap if there is one
"RTN","IBCEF78",75,0)
 I $P(DATA,U,1)="",$P(DATA,U,3)'="" D
"RTN","IBCEF78",76,0)
 . S $P(DATA,U,1)=$P(DATA,U,3)
"RTN","IBCEF78",77,0)
 . S $P(DATA,U,2)=$P(DATA,U,4)
"RTN","IBCEF78",78,0)
 . S ($P(DATA,U,3),$P(DATA,U,4))=""
"RTN","IBCEF78",79,0)
 ;
"RTN","IBCEF78",80,0)
 Q DATA
"RTN","IBCEF78",81,0)
 ;
"RTN","IBCEF78",82,0)
HPID(IBXIEN) ; Determine HPID for current payer.
"RTN","IBCEF78",83,0)
 ; MRD;IB*2.0*516 - Added HPID.
"RTN","IBCEF78",84,0)
 ;
"RTN","IBCEF78",85,0)
 N IBHPID,IBSEQ
"RTN","IBCEF78",86,0)
 S IBSEQ=$$COBN^IBCEF(IBXIEN)  ; IBSEQ should be 1, 2 or 3.
"RTN","IBCEF78",87,0)
 I IBSEQ S IBHPID=$P($G(^DGCR(399,IBXIEN,"M1")),U,12+IBSEQ)  ; Pull piece 13, 14 or 15.
"RTN","IBCEF78",88,0)
 Q IBHPID
"RTN","IBCEF78",89,0)
 ;
"RTN","IBCEF78",90,0)
CLEANUP(IBRET) ;
"RTN","IBCEF78",91,0)
 K IBRET("CI_PID"),IBRET("OI_PID"),IBRET("CI_PSIDS"),IBRET("OI_PSIDS"),IBRET("CI_HPID"),IBRET("OI_HPID")
"RTN","IBCEF78",92,0)
 Q
"RTN","IBCEF78",93,0)
 ;
"RTN","IBCEF79")
0^102^B118916763^B170462166
"RTN","IBCEF79",1,0)
IBCEF79 ;ALB/ESG - Billing Provider functions ;13-Aug-2008
"RTN","IBCEF79",2,0)
 ;;2.0;INTEGRATED BILLING;**400,419,432,516**;21-MAR-94;Build 123
"RTN","IBCEF79",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF79",4,0)
 ;
"RTN","IBCEF79",5,0)
 Q
"RTN","IBCEF79",6,0)
 ;
"RTN","IBCEF79",7,0)
B(IBIFN,COB) ; Determine Billing Provider and Service Facility information
"RTN","IBCEF79",8,0)
 ; This function returns a string in the following format:
"RTN","IBCEF79",9,0)
 ;  [1] billing provider Institution file pointer (IEN to file 4) or "0"
"RTN","IBCEF79",10,0)
 ;      if the billing provider cannot be determined
"RTN","IBCEF79",11,0)
 ;  [2] billing provider name (.01 field in file 4) or Error reason why
"RTN","IBCEF79",12,0)
 ;      the billing provider cannot be determined - used when piece [1]=0
"RTN","IBCEF79",13,0)
 ;  [3] 0 if the service facility is a VA institution in file 4
"RTN","IBCEF79",14,0)
 ;      1 if the service facility is a non-VA facility in file 355.93
"RTN","IBCEF79",15,0)
 ;      "" if the service facility is blank - when there is no service facility
"RTN","IBCEF79",16,0)
 ;  [4] service facility IEN - either an IEN to file 4 or to file 355.93
"RTN","IBCEF79",17,0)
 ;      or "" if the service facility is blank
"RTN","IBCEF79",18,0)
 ;
"RTN","IBCEF79",19,0)
 ; Input parameters
"RTN","IBCEF79",20,0)
 ;   IBIFN - claim# required
"RTN","IBCEF79",21,0)
 ;     COB - payer sequence# - optional - defaults to current payer sequence# if not passed in
"RTN","IBCEF79",22,0)
 ;
"RTN","IBCEF79",23,0)
 NEW %,Z,IBU2,NVAFAC,BP,IB0,EVDT,IBDIV,BPDIV,BPDIVCHK,RXFLG,D,D0,DI,DIQ2,X,Y
"RTN","IBCEF79",24,0)
 S Z=""
"RTN","IBCEF79",25,0)
 S IBIFN=+$G(IBIFN)
"RTN","IBCEF79",26,0)
 I 'IBIFN S Z="0^Invalid claim.^^" G BX
"RTN","IBCEF79",27,0)
 I '$D(^DGCR(399,IBIFN,0)) S Z="0^Claim doesn't exist.^^" G BX
"RTN","IBCEF79",28,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)    ; current payer sequence default
"RTN","IBCEF79",29,0)
 I '$F(".1.2.3.","."_COB_".") S Z="0^Invalid Payer Sequence#: """_COB_"""^^" G BX
"RTN","IBCEF79",30,0)
 ;
"RTN","IBCEF79",31,0)
 ; set some initial variables for all claims
"RTN","IBCEF79",32,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF79",33,0)
 S EVDT=$P(IB0,U,3)                      ; claim event date
"RTN","IBCEF79",34,0)
 I 'EVDT S EVDT=DT                       ;   - default today if undefined
"RTN","IBCEF79",35,0)
 S IBDIV=+$P(IB0,U,22)                   ; division ptr file 40.8
"RTN","IBCEF79",36,0)
 I 'IBDIV S IBDIV=$$PRIM^VASITE(EVDT)    ;   - default primary division as of event date
"RTN","IBCEF79",37,0)
 I IBDIV'>0 S $P(Z,U,1,2)="0^Invalid Division for Event Date "_$$FMTE^XLFDT(EVDT,"5Z")_"." G BX
"RTN","IBCEF79",38,0)
 S BPDIV=+$$SITE^VASITE(EVDT,IBDIV)      ; division institution ptr file 4
"RTN","IBCEF79",39,0)
 I BPDIV'>0 S $P(Z,U,1,2)="0^Invalid Institution for Event Date "_$$FMTE^XLFDT(EVDT,"5Z")_"." G BX
"RTN","IBCEF79",40,0)
 ;
"RTN","IBCEF79",41,0)
 ; MRD;IB*2.0*516 - The field used as the switchback flag is being
"RTN","IBCEF79",42,0)
 ; marked for deletion, to be deleted after 3/15/2018.  That flag
"RTN","IBCEF79",43,0)
 ; will now always be null.  The following section of code was
"RTN","IBCEF79",44,0)
 ; commented out because of this.  This section can be deleted in
"RTN","IBCEF79",45,0)
 ; the future.
"RTN","IBCEF79",46,0)
 ;
"RTN","IBCEF79",47,0)
 ;; check ins co switchback flag
"RTN","IBCEF79",48,0)
 ;I $$INSFLGS(IBIFN,COB)>0 D  G BX
"RTN","IBCEF79",49,0)
 ;. N IBZ,SVCIEN,SVCTYP
"RTN","IBCEF79",50,0)
 ;. ; revert billing provider and service facility calculation to pre-patch 400 methods
"RTN","IBCEF79",51,0)
 ;. ;
"RTN","IBCEF79",52,0)
 ;. ; service facility is legacy N-RENDERING INSTITUTION data
"RTN","IBCEF79",53,0)
 ;. D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,IBIFN)
"RTN","IBCEF79",54,0)
 ;. S SVCIEN=+IBZ              ; service facility ien
"RTN","IBCEF79",55,0)
 ;. S SVCTYP=+$P(IBZ,U,2)      ; service facility type - 0=VA inst, 1=non-VA facility
"RTN","IBCEF79",56,0)
 ;. ;
"RTN","IBCEF79",57,0)
 ;. I 'SVCIEN S $P(Z,U,3)="",$P(Z,U,4)=""          ;  no svc fac
"RTN","IBCEF79",58,0)
 ;. I SVCIEN S $P(Z,U,3)=SVCTYP,$P(Z,U,4)=SVCIEN   ; yes svc fac
"RTN","IBCEF79",59,0)
 ;. ;
"RTN","IBCEF79",60,0)
 ;. ; billing provider = institution of main division in the database
"RTN","IBCEF79",61,0)
 ;. S BP=+$$SITE^VASITE
"RTN","IBCEF79",62,0)
 ;. I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) Q
"RTN","IBCEF79",63,0)
 ;. S $P(Z,U,1,2)="0^Facility Type of Main Division Institution is invalid."
"RTN","IBCEF79",64,0)
 ;. Q
"RTN","IBCEF79",65,0)
 ;
"RTN","IBCEF79",66,0)
 S IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEF79",67,0)
 S NVAFAC=+$P(IBU2,U,10)          ; non-VA facility
"RTN","IBCEF79",68,0)
 I NVAFAC D  G BX
"RTN","IBCEF79",69,0)
 . S $P(Z,U,3)=1                  ; service facility is the non-VA facility
"RTN","IBCEF79",70,0)
 . S $P(Z,U,4)=NVAFAC             ; ien to file 355.93
"RTN","IBCEF79",71,0)
 . S BP=BPDIV                     ; institution of division on claim (IB*2*419)
"RTN","IBCEF79",72,0)
 . I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) Q
"RTN","IBCEF79",73,0)
 . S $P(Z,U,1,2)="0^Facility Type of Claim's Division is invalid for the Billing Provider."
"RTN","IBCEF79",74,0)
 . Q
"RTN","IBCEF79",75,0)
 ;
"RTN","IBCEF79",76,0)
 S BPDIVCHK=0                            ; flag indicating if the div inst has been checked
"RTN","IBCEF79",77,0)
 S RXFLG=$$ISRX^IBCEF1(IBIFN)            ; pharmacy flag
"RTN","IBCEF79",78,0)
 ;
"RTN","IBCEF79",79,0)
 I RXFLG D
"RTN","IBCEF79",80,0)
 . S BP=+$$RXSITE^IBCEF73A(IBIFN)        ; dispensing pharmacy ien for pharmacy claims
"RTN","IBCEF79",81,0)
 . I 'BP S BP=BPDIV,BPDIVCHK=1           ; use division institution if pharmacy not found
"RTN","IBCEF79",82,0)
 . Q
"RTN","IBCEF79",83,0)
 ;
"RTN","IBCEF79",84,0)
 I 'RXFLG S BP=BPDIV,BPDIVCHK=1          ; non-Rx claims use division institution
"RTN","IBCEF79",85,0)
 ;
"RTN","IBCEF79",86,0)
 I BP,$$BPFACTYP(BP) D  G BX             ; billing provider type is valid
"RTN","IBCEF79",87,0)
 . S $P(Z,U,1,2)=$$CHK(BP)
"RTN","IBCEF79",88,0)
 . ;
"RTN","IBCEF79",89,0)
 . ; 3/27/09 - Special Case
"RTN","IBCEF79",90,0)
 . ;   If we are printing the CMS-1500 claim form, then populate the service facility with the billing provider.
"RTN","IBCEF79",91,0)
 . ;   For any other calculation, the service facility is blank here.
"RTN","IBCEF79",92,0)
 . ;
"RTN","IBCEF79",93,0)
 . I $G(^TMP("IB 1500 PRINT",$J,IBIFN)) D
"RTN","IBCEF79",94,0)
 .. S $P(Z,U,3)=0           ; service facility is in file 4
"RTN","IBCEF79",95,0)
 .. S $P(Z,U,4)=$P(Z,U,1)   ; move billing provider ien over
"RTN","IBCEF79",96,0)
 .. Q
"RTN","IBCEF79",97,0)
 . Q
"RTN","IBCEF79",98,0)
 ;
"RTN","IBCEF79",99,0)
 ; here, the BP has an invalid billing provider facility type
"RTN","IBCEF79",100,0)
 ; move this BP over to the service facility
"RTN","IBCEF79",101,0)
 S $P(Z,U,3)=0    ; service facility is in file 4
"RTN","IBCEF79",102,0)
 S $P(Z,U,4)=BP   ; move this BP over to the service facility
"RTN","IBCEF79",103,0)
 ;
"RTN","IBCEF79",104,0)
 I BPDIVCHK G B1  ; the division institution has already been checked...skip down to tag B1 to check the parent
"RTN","IBCEF79",105,0)
 ;
"RTN","IBCEF79",106,0)
 ; check the division institution
"RTN","IBCEF79",107,0)
 S BP=BPDIV,BPDIVCHK=1
"RTN","IBCEF79",108,0)
 I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) G BX
"RTN","IBCEF79",109,0)
 ;
"RTN","IBCEF79",110,0)
B1 ;
"RTN","IBCEF79",111,0)
 ; check the parent
"RTN","IBCEF79",112,0)
 S BP=$$BPPAR(BPDIV)    ; institution of the parent of the division
"RTN","IBCEF79",113,0)
 I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) G BX
"RTN","IBCEF79",114,0)
 ;
"RTN","IBCEF79",115,0)
 ; here, the facility type of the parent is also not valid, so it is an error
"RTN","IBCEF79",116,0)
 S $P(Z,U,1,2)="0^Facility Type of Division and the Division's Parent Institution are Invalid."
"RTN","IBCEF79",117,0)
BX ;
"RTN","IBCEF79",118,0)
 Q Z
"RTN","IBCEF79",119,0)
 ;
"RTN","IBCEF79",120,0)
CHK(IEN) ; Perform final billing provider checks on passed in Institution
"RTN","IBCEF79",121,0)
 ; file pointer - File 4 ien
"RTN","IBCEF79",122,0)
 ; Function returns final pieces 1 and 2 of $$B function as described above
"RTN","IBCEF79",123,0)
 NEW BP
"RTN","IBCEF79",124,0)
 S IEN=+$G(IEN)
"RTN","IBCEF79",125,0)
 I 'IEN S BP="0^Invalid Institution pointer IEN." G CHKX
"RTN","IBCEF79",126,0)
 I '$$BPCHKN(IEN) S BP="0^Not a National Institution." G CHKX
"RTN","IBCEF79",127,0)
 I '$$BPCHKA(IEN) S BP="0^Not an Active Institution." G CHKX
"RTN","IBCEF79",128,0)
 ;
"RTN","IBCEF79",129,0)
 S BP=IEN_U_$P($$NS^XUAF4(IEN),U,1)    ; ien^name  DBIA# 2171
"RTN","IBCEF79",130,0)
CHKX ;
"RTN","IBCEF79",131,0)
 Q BP
"RTN","IBCEF79",132,0)
 ;
"RTN","IBCEF79",133,0)
BPCHKN(IEN) ; Is this a national Institution?
"RTN","IBCEF79",134,0)
 N Z S Z=0
"RTN","IBCEF79",135,0)
 I $$STATUS^XUAF4(+IEN)="N" S Z=1    ; DBIA# 2171
"RTN","IBCEF79",136,0)
BPCHKNX ;
"RTN","IBCEF79",137,0)
 Q Z
"RTN","IBCEF79",138,0)
 ;
"RTN","IBCEF79",139,0)
BPCHKA(IEN) ; Is this an active Institution?
"RTN","IBCEF79",140,0)
 N Z S Z=0
"RTN","IBCEF79",141,0)
 I $$ACTIVE^XUAF4(+IEN) S Z=1        ; DBIA# 2171
"RTN","IBCEF79",142,0)
BPCHKAX ;
"RTN","IBCEF79",143,0)
 Q Z
"RTN","IBCEF79",144,0)
 ;
"RTN","IBCEF79",145,0)
BPFACTYP(IEN) ; Is the facility type of this Institution a valid Billing Provider facility type?
"RTN","IBCEF79",146,0)
 N Z S Z=0
"RTN","IBCEF79",147,0)
 I $D(^IBE(350.9,1,20,"B",+$$GET1^DIQ(4,+IEN_",",13,"I"))) S Z=1
"RTN","IBCEF79",148,0)
BPFACTPX ;
"RTN","IBCEF79",149,0)
 Q Z
"RTN","IBCEF79",150,0)
 ;
"RTN","IBCEF79",151,0)
BPPAR(IEN) ; Who is the parent for this Institution?
"RTN","IBCEF79",152,0)
 ; Function returns the IEN to file 4 of the parent institution as defined in File 4
"RTN","IBCEF79",153,0)
 N Z,PIA
"RTN","IBCEF79",154,0)
 D PARENT^XUAF4($NA(PIA),("`"_+IEN),"PARENT FACILITY")    ; DBIA# 2171
"RTN","IBCEF79",155,0)
 S Z=+$O(PIA("P",""))
"RTN","IBCEF79",156,0)
BPPARX ;
"RTN","IBCEF79",157,0)
 Q Z
"RTN","IBCEF79",158,0)
 ;
"RTN","IBCEF79",159,0)
TAX(IBIFN) ; Update default billing provider and service facility taxonomy codes
"RTN","IBCEF79",160,0)
 ; and billing provider secondary IDs and Qualifiers.
"RTN","IBCEF79",161,0)
 ; This is called via new style xrefs to update the default value of these fields
"RTN","IBCEF79",162,0)
 ;
"RTN","IBCEF79",163,0)
 N BPZ,BPTAX,SFTAX,IENS,IBTAXO,IBU3,IBM1,BPID1,BPQL1,BPID2,BPQL2,BPID3,BPQL3
"RTN","IBCEF79",164,0)
 N D,D0,DI,DIQ2,X,Y
"RTN","IBCEF79",165,0)
 ;
"RTN","IBCEF79",166,0)
 I '$G(IBIFN) G TAXQ
"RTN","IBCEF79",167,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=1 G TAXQ      ; claim is not editable
"RTN","IBCEF79",168,0)
 ;
"RTN","IBCEF79",169,0)
 S BPZ=$$B(IBIFN)     ; billing provider/service facility string
"RTN","IBCEF79",170,0)
 ;
"RTN","IBCEF79",171,0)
 ; billing provider taxonomy
"RTN","IBCEF79",172,0)
 S BPTAX=""
"RTN","IBCEF79",173,0)
 I +BPZ S BPTAX=+$P($$TAXORG^XUSTAX(+BPZ),U,2)      ; ien to file 8932.1 for VA billing provider
"RTN","IBCEF79",174,0)
 I 'BPTAX S BPTAX=""
"RTN","IBCEF79",175,0)
 ;
"RTN","IBCEF79",176,0)
 ; service facility taxonomy
"RTN","IBCEF79",177,0)
 S SFTAX=""
"RTN","IBCEF79",178,0)
 I $P(BPZ,U,3)=0,+$P(BPZ,U,4) S SFTAX=+$P($$TAXORG^XUSTAX(+$P(BPZ,U,4)),U,2)     ; ien to file 8932.1 for VA svc fac
"RTN","IBCEF79",179,0)
 I $P(BPZ,U,3)=1,+$P(BPZ,U,4) S SFTAX=+$P($$TAXGET^IBCEP81(+$P(BPZ,U,4)),U,2)    ; ien to file 8932.1 for non-VA svc fac
"RTN","IBCEF79",180,0)
 I 'SFTAX S SFTAX=""
"RTN","IBCEF79",181,0)
 ;
"RTN","IBCEF79",182,0)
 ; billing provider secondary ID#2 and qualifier#2 for each payer on the claim
"RTN","IBCEF79",183,0)
 S BPID1=$$PRVNUM^IBCU(IBIFN,,1)    ; #122
"RTN","IBCEF79",184,0)
 S BPQL1=$$PRVQUAL^IBCU(IBIFN,,1)   ; #128
"RTN","IBCEF79",185,0)
 S BPID2=$$PRVNUM^IBCU(IBIFN,,2)    ; #123
"RTN","IBCEF79",186,0)
 S BPQL2=$$PRVQUAL^IBCU(IBIFN,,2)   ; #129
"RTN","IBCEF79",187,0)
 S BPID3=$$PRVNUM^IBCU(IBIFN,,3)    ; #124
"RTN","IBCEF79",188,0)
 S BPQL3=$$PRVQUAL^IBCU(IBIFN,,3)   ; #130
"RTN","IBCEF79",189,0)
 ;
"RTN","IBCEF79",190,0)
 ; Use FileMan DBS call to update these fields if changes are necessary
"RTN","IBCEF79",191,0)
 S IENS=IBIFN_","
"RTN","IBCEF79",192,0)
 S IBU3=$G(^DGCR(399,IBIFN,"U3"))
"RTN","IBCEF79",193,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCEF79",194,0)
 I SFTAX'=$P(IBU3,U,2) S IBTAXO(399,IENS,243)=SFTAX        ; service facility taxonomy
"RTN","IBCEF79",195,0)
 I BPTAX'=$P(IBU3,U,11) S IBTAXO(399,IENS,252)=BPTAX       ; billing provider taxonomy
"RTN","IBCEF79",196,0)
 I BPID1'=$P(IBM1,U,2) S IBTAXO(399,IENS,122)=BPID1        ; primary ID
"RTN","IBCEF79",197,0)
 I BPQL1'=$P(IBM1,U,10) S IBTAXO(399,IENS,128)=BPQL1       ; primary Qual
"RTN","IBCEF79",198,0)
 I BPID2'=$P(IBM1,U,3) S IBTAXO(399,IENS,123)=BPID2        ; secondary ID
"RTN","IBCEF79",199,0)
 I BPQL2'=$P(IBM1,U,11) S IBTAXO(399,IENS,129)=BPQL2       ; secondary Qual
"RTN","IBCEF79",200,0)
 I BPID3'=$P(IBM1,U,4) S IBTAXO(399,IENS,124)=BPID3        ; tertiary ID
"RTN","IBCEF79",201,0)
 I BPQL3'=$P(IBM1,U,12) S IBTAXO(399,IENS,130)=BPQL3       ; tertiary Qual
"RTN","IBCEF79",202,0)
 ;
"RTN","IBCEF79",203,0)
 I '$D(IBTAXO) G TAXQ    ; no changes necessary
"RTN","IBCEF79",204,0)
 ;
"RTN","IBCEF79",205,0)
 D FILE^DIE(,"IBTAXO")   ; update fields
"RTN","IBCEF79",206,0)
TAXQ ;
"RTN","IBCEF79",207,0)
 Q
"RTN","IBCEF79",208,0)
 ;
"RTN","IBCEF79",209,0)
INSFLGS(IBIFN,COB) ; get insurance company flags for a given claim
"RTN","IBCEF79",210,0)
 ; returns string of flags in the following format:
"RTN","IBCEF79",211,0)
 ; switchback flag ^ send service facility flag ^ institution file address flag ^ error
"RTN","IBCEF79",212,0)
 ; switchback flag: field 36/4.11 or 36/4.12, depending on form type. "-1" if error has occurred.
"RTN","IBCEF79",213,0)
 ; send service facility flag: field 36/4.07, empty if error has occurred or switchback flag is not set.
"RTN","IBCEF79",214,0)
 ; institution file address flag: field 36/4.13, empty if error has occurred or switchback flag is not set.
"RTN","IBCEF79",215,0)
 ; 
"RTN","IBCEF79",216,0)
 ; MRD;IB*2.0*516 - The four flag fields described above (File #36,
"RTN","IBCEF79",217,0)
 ; Field #'s 4.07, 4.11, 4.12, 4.13) are all being marked for
"RTN","IBCEF79",218,0)
 ; deletion.  All references to those fields are being removed
"RTN","IBCEF79",219,0)
 ; as part of this patch.
"RTN","IBCEF79",220,0)
 ;
"RTN","IBCEF79",221,0)
 Q ""
"RTN","IBCEF79",222,0)
 ; 
"RTN","IBCEF79",223,0)
 ;N FLGS,FT,INSIEN,INS4
"RTN","IBCEF79",224,0)
 ;S IBIFN=+$G(IBIFN) I 'IBIFN Q "-1^^^Invalid claim."
"RTN","IBCEF79",225,0)
 ;I '$D(^DGCR(399,IBIFN,0)) Q "-1^^^Claim doesn't exist."
"RTN","IBCEF79",226,0)
 ;I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)    ; current payer sequence default
"RTN","IBCEF79",227,0)
 ;I '(".1.2.3."[("."_COB_".")) Q "-1^^^Invalid Payer Sequence#: """_COB_"""."
"RTN","IBCEF79",228,0)
 ;S INSIEN=$$POLICY^IBCEF(IBIFN,1,COB) I 'INSIEN Q "-1^^^No insurance company associated with the claim."
"RTN","IBCEF79",229,0)
 ;S INS4=$G(^DIC(36,INSIEN,4)),FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF79",230,0)
 ;S FLGS=$P(INS4,U,$S(FT=2:11,1:12)) I '+FLGS Q FLGS ; we are done if switchback flag is not set
"RTN","IBCEF79",231,0)
 ;S $P(FLGS,U,2)=$P(INS4,U,7),$P(FLGS,U,3)=$P(INS4,U,13) ; if switchback is set, get the other 2 flags
"RTN","IBCEF79",232,0)
 ;Q FLGS
"RTN","IBCEF79",233,0)
 ;
"RTN","IBCEF79",234,0)
GETBP(IBIFN,COB,INST,SUB,IBXSAVE) ; Get billing provider data for claim output
"RTN","IBCEF79",235,0)
 ; Used to extract billing provider name, address, and phone# for PRV segment and for CMS-1500, Box 33
"RTN","IBCEF79",236,0)
 ;   IBIFN - claim ien required
"RTN","IBCEF79",237,0)
 ;     COB - payer sequence (optional, defaults to current payer seq)
"RTN","IBCEF79",238,0)
 ;    INST - billing provider VA file 4 ien required
"RTN","IBCEF79",239,0)
 ;     SUB - subscript to use in IBXSAVE local array required
"RTN","IBCEF79",240,0)
 ; IBXSAVE - pass by reference
"RTN","IBCEF79",241,0)
 ;           Returns IBXSAVE(SUB,"NAME")
"RTN","IBCEF79",242,0)
 ;                   IBXSAVE(SUB,"ADDR1")
"RTN","IBCEF79",243,0)
 ;                   IBXSAVE(SUB,"ADDR2")
"RTN","IBCEF79",244,0)
 ;                   IBXSAVE(SUB,"CITY")
"RTN","IBCEF79",245,0)
 ;                   IBXSAVE(SUB,"ST")
"RTN","IBCEF79",246,0)
 ;                   IBXSAVE(SUB,"ZIP")
"RTN","IBCEF79",247,0)
 ;                   IBXSAVE(SUB,"PHONE")
"RTN","IBCEF79",248,0)
 ;
"RTN","IBCEF79",249,0)
 ; MRD;IB*2.0*516 - The field used as the switchback flag is being
"RTN","IBCEF79",250,0)
 ; marked for deletion, to be deleted after 3/15/2018.  That flag
"RTN","IBCEF79",251,0)
 ; will now always be null.  Several sections of this procedure have
"RTN","IBCEF79",252,0)
 ; been commented out because of this.  Those sections can be
"RTN","IBCEF79",253,0)
 ; deleted in the future.
"RTN","IBCEF79",254,0)
 ;
"RTN","IBCEF79",255,0)
 NEW IBZ
"RTN","IBCEF79",256,0)
 K IBXSAVE(SUB)
"RTN","IBCEF79",257,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF79",258,0)
 ;
"RTN","IBCEF79",259,0)
 ;S INSFLGS=$$INSFLGS(IBIFN,COB)           ; all ins co flags
"RTN","IBCEF79",260,0)
 ;S SWBFLG=(+INSFLGS>0)                    ; main switchback flag
"RTN","IBCEF79",261,0)
 ;S (BPTP,MAINPTP)=""                      ; initialize vars used only in switchback mode
"RTN","IBCEF79",262,0)
 ;I SWBFLG D
"RTN","IBCEF79",263,0)
 ;. S BPTP=$$MAINPRV^IBJPS3                ; main division pay-to provider data string
"RTN","IBCEF79",264,0)
 ;. S MAINPTP=($P(BPTP,U,10)'["IB177")     ; flag that says whether main div exists as a pay-to
"RTN","IBCEF79",265,0)
 ;. Q
"RTN","IBCEF79",266,0)
 ;
"RTN","IBCEF79",267,0)
 ; If Switchback is ON and the ins. company parameter Use billing provider VAMC address is not on and
"RTN","IBCEF79",268,0)
 ; main div pay-to exists, then use the pay-to provider data for the main division in the database.
"RTN","IBCEF79",269,0)
 ; This is the "normal" switchback data.
"RTN","IBCEF79",270,0)
 ;I SWBFLG,'$P(INSFLGS,U,3),MAINPTP D  G GETBPX    ; switchback + billing provider address flag + main ptp exists
"RTN","IBCEF79",271,0)
 ;. ; IB*2.0*432 - Retrieve the BP name from "gold standard" name field of file #4 and if not populated, retrieve from .01 field - IA#2171
"RTN","IBCEF79",272,0)
 ;. ;S IBXSAVE(SUB,"NAME")=$P(BPTP,U,1)
"RTN","IBCEF79",273,0)
 ;. S IBXSAVE(SUB,"NAME")=$$BNIEN^XUAF4(INST)
"RTN","IBCEF79",274,0)
 ;. S:IBXSAVE(SUB,"NAME")="" IBXSAVE(SUB,"NAME")=$P(BPTP,U,1)
"RTN","IBCEF79",275,0)
 ;. S IBXSAVE(SUB,"ADDR1")=$P(BPTP,U,5)
"RTN","IBCEF79",276,0)
 ;. S IBXSAVE(SUB,"ADDR2")=$P(BPTP,U,6)
"RTN","IBCEF79",277,0)
 ;. S IBXSAVE(SUB,"CITY")=$P(BPTP,U,7)
"RTN","IBCEF79",278,0)
 ;. S IBXSAVE(SUB,"ST")=$P(BPTP,U,8)
"RTN","IBCEF79",279,0)
 ;. S IBXSAVE(SUB,"ZIP")=$P(BPTP,U,9)
"RTN","IBCEF79",280,0)
 ;. S IBXSAVE(SUB,"PHONE")=$P(BPTP,U,4)
"RTN","IBCEF79",281,0)
 ;. Q
"RTN","IBCEF79",282,0)
 ;
"RTN","IBCEF79",283,0)
 ; Special Case:  Switchback is ON, the ins. company parameter Use billing provider VAMC address
"RTN","IBCEF79",284,0)
 ; is not on, but the main division is NOT defined as a Pay-To provider.
"RTN","IBCEF79",285,0)
 ; Get the name from the Institution File, but everything else from the claim's Pay-to provider
"RTN","IBCEF79",286,0)
 ;I SWBFLG,'$P(INSFLGS,U,3),'MAINPTP D  G GETBPX
"RTN","IBCEF79",287,0)
 ;. ; IB*2.0*432 - Retrieve the BP name from "gold standard" name field of file #4 and if not populated, retrieve from .01 field - IA#2171
"RTN","IBCEF79",288,0)
 ;. ;S IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)
"RTN","IBCEF79",289,0)
 ;. S IBXSAVE(SUB,"NAME")=$$BNIEN^XUAF4(INST)
"RTN","IBCEF79",290,0)
 ;. S:IBXSAVE(SUB,"NAME")="" IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)   ; Inst name
"RTN","IBCEF79",291,0)
 ;. S IBZ=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCEF79",292,0)
 ;. S IBXSAVE(SUB,"ADDR1")=$P(IBZ,U,5)
"RTN","IBCEF79",293,0)
 ;. S IBXSAVE(SUB,"ADDR2")=$P(IBZ,U,6)
"RTN","IBCEF79",294,0)
 ;. S IBXSAVE(SUB,"CITY")=$P(IBZ,U,7)
"RTN","IBCEF79",295,0)
 ;. S IBXSAVE(SUB,"ST")=$P(IBZ,U,8)
"RTN","IBCEF79",296,0)
 ;. S IBXSAVE(SUB,"ZIP")=$P(IBZ,U,9)
"RTN","IBCEF79",297,0)
 ;. S IBXSAVE(SUB,"PHONE")=$P(IBZ,U,4)
"RTN","IBCEF79",298,0)
 ;. Q
"RTN","IBCEF79",299,0)
 ;
"RTN","IBCEF79",300,0)
 ; At this point, we want to get the billing provider data from the Institution file
"RTN","IBCEF79",301,0)
 ; IB*2.0*432 - Retrieve the BP name from "gold standard" name field of file #4 and if not populated, retrieve from .01 field - IA#2171
"RTN","IBCEF79",302,0)
 ;S IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)
"RTN","IBCEF79",303,0)
 S IBXSAVE(SUB,"NAME")=$$BNIEN^XUAF4(INST)
"RTN","IBCEF79",304,0)
 S:IBXSAVE(SUB,"NAME")="" IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)
"RTN","IBCEF79",305,0)
 S IBXSAVE(SUB,"ADDR1")=$$GETFAC^IBCEP8(INST,0,1)
"RTN","IBCEF79",306,0)
 S IBXSAVE(SUB,"ADDR2")=$$GETFAC^IBCEP8(INST,0,2)
"RTN","IBCEF79",307,0)
 S IBXSAVE(SUB,"CITY")=$$GETFAC^IBCEP8(INST,0,"3C")
"RTN","IBCEF79",308,0)
 S IBXSAVE(SUB,"ST")=$$GETFAC^IBCEP8(INST,0,"3S")
"RTN","IBCEF79",309,0)
 S IBXSAVE(SUB,"ZIP")=$$GETFAC^IBCEP8(INST,0,"3Z")
"RTN","IBCEF79",310,0)
 S IBXSAVE(SUB,"PHONE")=$$PRVPHONE^IBJPS3(IBIFN)        ; pay-to phone for claim
"RTN","IBCEF79",311,0)
 ;I SWBFLG,MAINPTP S IBXSAVE(SUB,"PHONE")=$P(BPTP,U,4)   ; switchback: pay-to phone for main division
"RTN","IBCEF79",312,0)
 ;
"RTN","IBCEF79",313,0)
 ; 3/30/09 - new requirement - for locally printed CMS-1500 claims, use the pay-to provider address information - Box 33
"RTN","IBCEF79",314,0)
 ;I 'SWBFLG,SUB="BOX33" D
"RTN","IBCEF79",315,0)
 I SUB="BOX33" D
"RTN","IBCEF79",316,0)
 . S IBZ=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCEF79",317,0)
 . S IBXSAVE(SUB,"ADDR1")=$P(IBZ,U,5)
"RTN","IBCEF79",318,0)
 . S IBXSAVE(SUB,"ADDR2")=$P(IBZ,U,6)
"RTN","IBCEF79",319,0)
 . S IBXSAVE(SUB,"CITY")=$P(IBZ,U,7)
"RTN","IBCEF79",320,0)
 . S IBXSAVE(SUB,"ST")=$P(IBZ,U,8)
"RTN","IBCEF79",321,0)
 . S IBXSAVE(SUB,"ZIP")=$P(IBZ,U,9)
"RTN","IBCEF79",322,0)
 . Q
"RTN","IBCEF79",323,0)
 ;
"RTN","IBCEF79",324,0)
GETBPX ;
"RTN","IBCEF79",325,0)
 Q
"RTN","IBCEF79",326,0)
 ;
"RTN","IBCEF79",327,0)
SENDSF(IBIFN,COB) ; Send service facility information for the EDI claim?
"RTN","IBCEF79",328,0)
 ; Function value returns 1 (send service facility information) or 0 (don't send it)
"RTN","IBCEF79",329,0)
 ; The only time this function returns 0 is when the pre-patch 400 switchback flag is set, and
"RTN","IBCEF79",330,0)
 ; care was provided at the main division (VAMC) in the database, and the 36,4.07 ins. co. flag is set to NO.
"RTN","IBCEF79",331,0)
 ; This function is used in the EDI claim (segments SUB, SUB2, NPI-16, and NPI-17).
"RTN","IBCEF79",332,0)
 ; IBIFN required
"RTN","IBCEF79",333,0)
 ; COB optional, defaults to current payer sequence
"RTN","IBCEF79",334,0)
 ;
"RTN","IBCEF79",335,0)
 ; MRD;IB*2.0*516 - The field used as the switchback flag is being
"RTN","IBCEF79",336,0)
 ; marked for deletion, to be deleted after 3/15/2018.  That flag
"RTN","IBCEF79",337,0)
 ; will now always be null.  This function will now always return
"RTN","IBCEF79",338,0)
 ; '1'.
"RTN","IBCEF79",339,0)
 ;
"RTN","IBCEF79",340,0)
 NEW SEND,IBDIV,MAIN
"RTN","IBCEF79",341,0)
 S SEND=1
"RTN","IBCEF79",342,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)       ; current payer sequence default
"RTN","IBCEF79",343,0)
 ;S INSFLGS=$$INSFLGS(IBIFN,COB)             ; all ins co flags
"RTN","IBCEF79",344,0)
 ;I +INSFLGS'>0 G SENDSFX                    ; switchback is OFF...get out
"RTN","IBCEF79",345,0)
 G SENDSFX
"RTN","IBCEF79",346,0)
 ;
"RTN","IBCEF79",347,0)
 I $P($G(^DGCR(399,IBIFN,"U2")),U,10) G SENDSFX    ; if we have a non-VA facility on the claim, always send it
"RTN","IBCEF79",348,0)
 ;
"RTN","IBCEF79",349,0)
 S IBDIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)   ; division on claim
"RTN","IBCEF79",350,0)
 S MAIN=$$MAIN^IBCEP2B()                    ; main division in database
"RTN","IBCEF79",351,0)
 I IBDIV'=MAIN G SENDSFX                    ; care was not provided at the main division - always send it
"RTN","IBCEF79",352,0)
 ;
"RTN","IBCEF79",353,0)
 ;I $P(INSFLGS,U,2) G SENDSFX                ; ins. co. flag is ON so send it
"RTN","IBCEF79",354,0)
 ;
"RTN","IBCEF79",355,0)
 S SEND=0                                   ; otherwise, do not send service facility data
"RTN","IBCEF79",356,0)
 ;
"RTN","IBCEF79",357,0)
SENDSFX ;
"RTN","IBCEF79",358,0)
 Q SEND
"RTN","IBCEF79",359,0)
 ;
"RTN","IBCEF79",360,0)
SLPROV(IBXIEN,TYPE) ; return array of service line provider data
"RTN","IBCEF79",361,0)
 ; IBXIEN - ien in file 399
"RTN","IBCEF79",362,0)
 ; TYPE: O1 = operating physician, O2 = other operating physician, RE = rendering provider,
"RTN","IBCEF79",363,0)
 ;       P = purchase service provider, S = supervising provider, RF = referring provider
"RTN","IBCEF79",364,0)
 ;
"RTN","IBCEF79",365,0)
 ; returns IBXSAVE("SLPRV", counter) = last name ^ first name ^ middle name ^ suffix
"RTN","IBCEF79",366,0)
 ; ^ taxonomy code ^ primary id ^ secondary id (1) ^ secondary id qualifier (1) ^ ...
"RTN","IBCEF79",367,0)
 ; ^ secondary id (n) ^ secondary id qualifier (n)
"RTN","IBCEF79",368,0)
 ; IBXSAVE("SLPRV", counter,"SLC") = service line conter
"RTN","IBCEF79",369,0)
 ;
"RTN","IBCEF79",370,0)
 N DATA,IBN,IBX,IENS,MODE,NAME,PRNUM,PRTYPE,OUT,SLC,TMP,IBCNT
"RTN","IBCEF79",371,0)
 I '+IBXIEN Q
"RTN","IBCEF79",372,0)
 D ALLIDS^IBCEFP(IBXIEN,.IBX,1)
"RTN","IBCEF79",373,0)
 S IBCNT=0
"RTN","IBCEF79",374,0)
 ;
"RTN","IBCEF79",375,0)
 S SLC="" F  S SLC=$O(IBX("L-PROV",IBXIEN,SLC)) Q:'SLC  D
"RTN","IBCEF79",376,0)
 . I '$D(IBX("L-PROV",IBXIEN,SLC,"C",1,TYPE)) Q
"RTN","IBCEF79",377,0)
 .I TYPE="O1",PRTYPE'=2 Q                ; not operating
"RTN","IBCEF79",378,0)
 .I TYPE="O2",PRTYPE'=9 Q                ; not other operating
"RTN","IBCEF79",379,0)
 .I TYPE="RE",PRTYPE'=3 Q                ; not rendering
"RTN","IBCEF79",380,0)
 .I TYPE="S",PRTYPE'=5 Q                 ; not supervising
"RTN","IBCEF79",381,0)
 .I TYPE="RF",PRTYPE'=1 Q                ; not referring
"RTN","IBCEF79",382,0)
 .;
"RTN","IBCEF79",383,0)
 .S DATA=$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE))
"RTN","IBCEF79",384,0)
 .; name components
"RTN","IBCEF79",385,0)
 .S IENS=$P($P(DATA,U),";")_","
"RTN","IBCEF79",386,0)
 .I $P(DATA,U)["VA(200" S NAME=$$GET1^DIQ(200,IENS,.01)
"RTN","IBCEF79",387,0)
 .I $P(DATA,U)["IBA(355.93" S NAME=$$GET1^DIQ(355.93,IENS,.01)
"RTN","IBCEF79",388,0)
 .S TMP=$P(NAME,",",2),OUT=$P(NAME,",")_U_$P(TMP," ")_U_$P(TMP," ",2)_U_$P(TMP," ",3)
"RTN","IBCEF79",389,0)
 .; taxonomy code
"RTN","IBCEF79",390,0)
 .S $P(OUT,U,5)=$P($$GETTAX^IBCEF73A($P(DATA,U)),U)
"RTN","IBCEF79",391,0)
 .S IBN="" F  S IBN=$O(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,IBN)) Q:IBN=""  D
"RTN","IBCEF79",392,0)
 ..S DATA=$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,IBN))
"RTN","IBCEF79",393,0)
 ..; primary id
"RTN","IBCEF79",394,0)
 ..I IBN=0 S $P(OUT,U,6)=$P(DATA,U,4) Q
"RTN","IBCEF79",395,0)
 ..;
"RTN","IBCEF79",396,0)
 ..; secondary ids
"RTN","IBCEF79",397,0)
 ..S OUT=OUT_U_$P(DATA,U,4)_U_$P(DATA,U,3)
"RTN","IBCEF79",398,0)
 ..Q
"RTN","IBCEF79",399,0)
 .Q
"RTN","IBCEF79",400,0)
 S IBCNT=IBCNT+1
"RTN","IBCEF79",401,0)
 S IBXSAVE("SLPRV",IBCNT)=OUT
"RTN","IBCEF79",402,0)
 S IBXSAVE("SLPRV",IBCNT,"SLC")=SLC
"RTN","IBCEF79",403,0)
 Q
"RTN","IBCEFP")
0^140^B115631357^B115077680
"RTN","IBCEFP",1,0)
IBCEFP ;ALB/TAZ - Provider ID functions ;28-OCT-10
"RTN","IBCEFP",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,473,516**;21-MAR-94;Build 123
"RTN","IBCEFP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEFP",4,0)
 ;
"RTN","IBCEFP",5,0)
 Q
"RTN","IBCEFP",6,0)
 ;
"RTN","IBCEFP",7,0)
ALLIDS(IBIFN,IBXSAVE,IBSTRIP,SEG) ; Return all of the Provider IDS
"RTN","IBCEFP",8,0)
 I '$D(IBSTRIP) S IBSTRIP=0
"RTN","IBCEFP",9,0)
 I '$D(SEG) S SEG=""
"RTN","IBCEFP",10,0)
 N IBXIEN,ARINFO,ARID,ARQ,IBFRMTYP,ARIEN,ARINS,Z0,DAT,I,SORT1,SORT2,SORT3,COB,IBCCOB,IBCARE,IBCURR,IBXDATA,NPI,CUROTH
"RTN","IBCEFP",11,0)
 ;
"RTN","IBCEFP",12,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEFP",13,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEFP",14,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEFP",15,0)
 S IBCURR=$$COB^IBCEF(IBIFN) ;current bill payer sequence
"RTN","IBCEFP",16,0)
 ;don't create anything if form type not CMS-1500 or UB
"RTN","IBCEFP",17,0)
 I IBFRMTYP,'+$G(IBXSAVE("PROVINF",IBIFN)) D
"RTN","IBCEFP",18,0)
 . N IBZ,CUROTH
"RTN","IBCEFP",19,0)
 . I IBFRMTYP=2 D OUTPT^IBCEF11(IBIFN,0)
"RTN","IBCEFP",20,0)
 . I IBFRMTYP=1 D HOS^IBCEF22(IBIFN)
"RTN","IBCEFP",21,0)
 . ; START IB*2.0*447 BI
"RTN","IBCEFP",22,0)
 . I IBCURR="A" D  Q
"RTN","IBCEFP",23,0)
 .. N IBRESARR
"RTN","IBCEFP",24,0)
 .. S IBLIMIT=5
"RTN","IBCEFP",25,0)
 .. D PROVINF(IBIFN,1,.IBRESARR,1,"C",IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",26,0)
 .. M IBXSAVE=IBRESARR
"RTN","IBCEFP",27,0)
 .. S IBXSAVE("PROVINF",IBIFN)=IBIFN
"RTN","IBCEFP",28,0)
 . ; END IB*2.0*447 BI
"RTN","IBCEFP",29,0)
 . F CUROTH="C","O" D PROVIDER(IBIFN,CUROTH,.IBZ,IBFRMTYP,IBCARE,IBCURR,.IBXDATA) M IBXSAVE=IBZ
"RTN","IBCEFP",30,0)
 . S IBXSAVE("PROVINF",IBIFN)=IBIFN
"RTN","IBCEFP",31,0)
 . Q
"RTN","IBCEFP",32,0)
 ;
"RTN","IBCEFP",33,0)
 D LFIDS^IBCEF76(IBIFN,.IBXSAVE,IBSTRIP,SEG)   ; Get the Lab/Facility IDs
"RTN","IBCEFP",34,0)
 S NPI=$P($$ORGNPI^IBCEF73A(IBIFN),U,1)
"RTN","IBCEFP",35,0)
 F CUROTH="C","O" D
"RTN","IBCEFP",36,0)
 . S IBXSAVE("LAB/FAC",IBIFN,CUROTH,1,0)=$S(NPI]"":"XX",1:"")_U_NPI
"RTN","IBCEFP",37,0)
 ;
"RTN","IBCEFP",38,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN)
"RTN","IBCEFP",39,0)
 S ARIEN=$S(IBFRMTYP=2:3,1:4)
"RTN","IBCEFP",40,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)  ; Current Insurance
"RTN","IBCEFP",41,0)
 F COB=1:1:3 D
"RTN","IBCEFP",42,0)
 . S SORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEFP",43,0)
 . S SORT2=$S(SORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEFP",44,0)
 . S ARINFO=$G(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,ARIEN,1))
"RTN","IBCEFP",45,0)
 . ;
"RTN","IBCEFP",46,0)
 . D BPIDS^IBCEF75(IBIFN,.IBXSAVE,SORT1,SORT2,COB,IBSTRIP,SEG)
"RTN","IBCEFP",47,0)
 ;
"RTN","IBCEFP",48,0)
 D EN^IBCEF81(.IBXSAVE)
"RTN","IBCEFP",49,0)
 ;
"RTN","IBCEFP",50,0)
 I SEG="OPR1" D
"RTN","IBCEFP",51,0)
 . I '$D(IBXSAVE("PROVINF",IBIFN,"C",1,3)) D  G ALLIDSQ
"RTN","IBCEFP",52,0)
 .. N SLC,CRED S SLC=0
"RTN","IBCEFP",53,0)
 .. F  S SLC=$O(IBXSAVE("L-PROV",IBIFN,SLC)) Q:'SLC  D  I $D(IBXSAVE("PROVINF",IBIFN,"C",1,3,"NAME")) Q
"RTN","IBCEFP",54,0)
 ... S CRED=$P($G(IBXSAVE("L-PROV",IBIFN,SLC,"C",1,3,"NAME")),U,4)
"RTN","IBCEFP",55,0)
 ... I CRED]"" S $P(IBXSAVE("PROVINF",IBIFN,"C",1,3,"NAME"),U,4)=CRED
"RTN","IBCEFP",56,0)
 ;
"RTN","IBCEFP",57,0)
 I SEG="LPUR",$$SUB1OK^IBCEP8A(IBIFN),$G(IBXSAVE("SLC")) D  G ALLIDSQ
"RTN","IBCEFP",58,0)
 . N IBCNT,OUT
"RTN","IBCEFP",59,0)
 . ;IB*2.0*473/TAZ - Moved ID lookup into seperate function.
"RTN","IBCEFP",60,0)
 . D PSID(IBIFN,.IBXSAVE,.IDS)
"RTN","IBCEFP",61,0)
 . ;IB*2.0*473/TAZ - END
"RTN","IBCEFP",62,0)
 . S $P(OUT,U,6)=IDS(0)
"RTN","IBCEFP",63,0)
 . S $P(OUT,U,7,8)=IDS(1) ; secondary id (1) ^ secondary id qualifier(1)
"RTN","IBCEFP",64,0)
 . F IBCNT=1:1:IBXSAVE("SLC") S IBXSAVE("SLPRV",IBCNT)=OUT,IBXSAVE("SLPRV",IBCNT,"SLC")=IBCNT
"RTN","IBCEFP",65,0)
 ;
"RTN","IBCEFP",66,0)
 I SEG="LOPE" D SLPRV(IBIFN,.IBXSAVE,2) G ALLIDSQ
"RTN","IBCEFP",67,0)
 I SEG="LOP1" D SLPRV(IBIFN,.IBXSAVE,9) G ALLIDSQ
"RTN","IBCEFP",68,0)
 I SEG="LREN" D SLPRV(IBIFN,.IBXSAVE,3) G ALLIDSQ
"RTN","IBCEFP",69,0)
 I SEG="LSUP" D SLPRV(IBIFN,.IBXSAVE,5) G ALLIDSQ
"RTN","IBCEFP",70,0)
 I SEG="LREF" D SLPRV(IBIFN,.IBXSAVE,1) G ALLIDSQ
"RTN","IBCEFP",71,0)
 ;
"RTN","IBCEFP",72,0)
ALLIDSQ ;
"RTN","IBCEFP",73,0)
 Q
"RTN","IBCEFP",74,0)
 ;
"RTN","IBCEFP",75,0)
PSID(IBIFN,IBXPROV,IBXIDS) ; Build array of either the Fac/Lab ID or Rendering Provider IDs
"RTN","IBCEFP",76,0)
 ;IB*2.0*473/TAZ - Created a function to standardize IDs in LDAT and LPUR
"RTN","IBCEFP",77,0)
 ; Input:
"RTN","IBCEFP",78,0)
 ;   IBXIEN - Internal Entry Number of claim
"RTN","IBCEFP",79,0)
 ;   IBXPROV - Provider Array
"RTN","IBCEFP",80,0)
 ;   IBXIDS - Array for IDs
"RTN","IBCEFP",81,0)
 ; Output:
"RTN","IBCEFP",82,0)
 ;   IBXIDS(0) - Primary ID
"RTN","IBCEFP",83,0)
 ;   IBXIDS(1) - Secondary ID
"RTN","IBCEFP",84,0)
 ;
"RTN","IBCEFP",85,0)
 N LINE,PLINE,PID,SID,SIDQ
"RTN","IBCEFP",86,0)
 K IBXIDS
"RTN","IBCEFP",87,0)
 ; Get Lab/Facility IDs
"RTN","IBCEFP",88,0)
 S (PID,SID,SIDQ)=""
"RTN","IBCEFP",89,0)
 S PID=$P($G(IBXPROV("LAB/FAC",IBIFN,"C",1,0)),U,2)
"RTN","IBCEFP",90,0)
 F LINE=1:1 Q:'$D(IBXPROV("LAB/FAC",IBIFN,"C",1,LINE))  D  I SID'="" Q
"RTN","IBCEFP",91,0)
 . S SIDQ=$P($G(IBXPROV("LAB/FAC",IBIFN,"C",1,LINE)),U) I ",0B,1G,G2,"'[(","_SIDQ_",") S SIDQ="" Q
"RTN","IBCEFP",92,0)
 . S SID=$P($G(IBXPROV("LAB/FAC",IBIFN,"C",1,LINE)),U,2)
"RTN","IBCEFP",93,0)
 I $L(PID)!$L(SID) S IBXIDS(0)=PID,IBXIDS(1)=SID_U_SIDQ G PSIDQ
"RTN","IBCEFP",94,0)
 ; Get Claim Level Rendering Provider IDs
"RTN","IBCEFP",95,0)
 S PID=$P($G(IBXPROV("PROVINF",IBIFN,"C",1,3,0)),U,4)  ; Get claim level Rendering Provider NPI
"RTN","IBCEFP",96,0)
 F LINE=1:1 Q:'$D(IBXPROV("PROVINF",IBIFN,"C",1,3,LINE))  D  I SID'="" Q
"RTN","IBCEFP",97,0)
 . S SIDQ=$P($G(IBXPROV("PROVINF",IBIFN,"C",1,3,LINE)),U,3) I ",0B,1G,G2,"'[(","_SIDQ_",") S SIDQ="" Q
"RTN","IBCEFP",98,0)
 . S SID=$P($G(IBXPROV("PROVINF",IBIFN,"C",1,3,LINE)),U,4)
"RTN","IBCEFP",99,0)
 I $L(PID)!$L(SID) S IBXIDS(0)=PID,IBXIDS(1)=SID_U_SIDQ G PSIDQ
"RTN","IBCEFP",100,0)
 ; Get Line Level Rendering Provider IDs
"RTN","IBCEFP",101,0)
 F PLINE=1:1 Q:'$D(IBXPROV("L-PROV",IBIFN,PLINE))  D  I $L(PID)!$L(SID) Q
"RTN","IBCEFP",102,0)
 . S PID=$P($G(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,0)),U,4)
"RTN","IBCEFP",103,0)
 . F LINE=1:1 Q:'$D(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,LINE))  D  I SID'="" Q
"RTN","IBCEFP",104,0)
 .. S SIDQ=$P($G(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,LINE)),U,3) I ",0B,1G,G2,"'[(","_SIDQ_",") S SIDQ="" Q
"RTN","IBCEFP",105,0)
 .. S SID=$P($G(IBXPROV("L-PROV",IBIFN,PLINE,"C",1,3,LINE)),U,4)
"RTN","IBCEFP",106,0)
 I $L(PID)!$L(SID) S IBXIDS(0)=PID,IBXIDS(1)=SID_U_SIDQ
"RTN","IBCEFP",107,0)
PSIDQ ;
"RTN","IBCEFP",108,0)
 Q
"RTN","IBCEFP",109,0)
 ;
"RTN","IBCEFP",110,0)
SLPRV(IBXIEN,IBX,PRTYPE) ;Build SLPRV nodes for the line provider type record
"RTN","IBCEFP",111,0)
 N SLC,DATA,IBCNT,NAME,OUT
"RTN","IBCEFP",112,0)
 S (SLC,IBCNT)=0
"RTN","IBCEFP",113,0)
 F  S SLC=$O(IBX("L-PROV",IBXIEN,SLC)) Q:'SLC  D
"RTN","IBCEFP",114,0)
 . I '$D(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE)) Q
"RTN","IBCEFP",115,0)
 . S NAME=$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,"NAME"))
"RTN","IBCEFP",116,0)
 . S OUT=$P(NAME,U,1,3)_U_$P(NAME,U,5)_U_$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,"TAXONOMY"))_U_$P($G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,0)),U,4)
"RTN","IBCEFP",117,0)
 . F IBN=1:1 Q:'$D(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,IBN))  D
"RTN","IBCEFP",118,0)
 .. S DATA=$G(IBX("L-PROV",IBXIEN,SLC,"C",1,PRTYPE,IBN))
"RTN","IBCEFP",119,0)
 .. I ",0B,1G,G2,LU,"[(","_$P(DATA,U,3)_",") S OUT=OUT_U_$P(DATA,U,4)_U_$P(DATA,U,3)
"RTN","IBCEFP",120,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEFP",121,0)
 . S IBX("SLPRV",IBCNT)=OUT
"RTN","IBCEFP",122,0)
 . S IBX("SLPRV",IBCNT,"SLC")=SLC
"RTN","IBCEFP",123,0)
SLPRVQ ;
"RTN","IBCEFP",124,0)
 Q
"RTN","IBCEFP",125,0)
 ;
"RTN","IBCEFP",126,0)
 ;PROVIDER
"RTN","IBCEFP",127,0)
 ;Input:
"RTN","IBCEFP",128,0)
 ; IB399 - ien of #399
"RTN","IBCEFP",129,0)
 ; IBPROV:
"RTN","IBCEFP",130,0)
 ;   "C"- to get info for CURRENT provider
"RTN","IBCEFP",131,0)
 ;   "O"- to get info for all others (in this case the array will contain info fot two providers
"RTN","IBCEFP",132,0)
 ; IBRES - array for results (by reference)
"RTN","IBCEFP",133,0)
 ; IBFRMTYP - Form Type
"RTN","IBCEFP",134,0)
 ; IBCARE - Care Type
"RTN","IBCEFP",135,0)
 ; IBCURR - current bill payer sequence
"RTN","IBCEFP",136,0)
 ;
"RTN","IBCEFP",137,0)
 ;Output:
"RTN","IBCEFP",138,0)
 ; IBRES - array to get back info (by reference)
"RTN","IBCEFP",139,0)
 ; IBRES(IBPROV,PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEFP",140,0)
 ; where:
"RTN","IBCEFP",141,0)
 ; IBPROV - see input parameter
"RTN","IBCEFP",142,0)
 ; PRNUM: 1=primary insurance provider, 2= secondary, 3 -tretiary
"RTN","IBCEFP",143,0)
 ; PRTYPE: Provider type(FUNCTION) 
"RTN","IBCEFP",144,0)
 ; SEQ# : sequence number (1st is used for ID1, 2nd - for ID2, etc)
"RTN","IBCEFP",145,0)
 ; PROV : provider/VARIABLEPTR
"RTN","IBCEFP",146,0)
 ; INSUR: Insurance PTR #36 or NONE
"RTN","IBCEFP",147,0)
 ; IDTYPE: ID type
"RTN","IBCEFP",148,0)
 ; ID: ID 
"RTN","IBCEFP",149,0)
 ; FORMTYP: Form type 1=UB,2=1500
"RTN","IBCEFP",150,0)
 ; CARETYP: Care type 0=both inp/outp,1=inpatient, 2=outpatient
"RTN","IBCEFP",151,0)
PROVIDER(IB399,IBPROV,IBRES,IBFRMTYP,IBCARE,IBCURR,IBXDATA) ;
"RTN","IBCEFP",152,0)
 N IBZ,IBRESARR,IBLIMIT
"RTN","IBCEFP",153,0)
 S IBRESARR=""
"RTN","IBCEFP",154,0)
 Q:IBCURR="A"  ;PATIENT's bill IB*2.0*447 BI Changes IBPROV to IBCURR
"RTN","IBCEFP",155,0)
 I IBPROV="C" D
"RTN","IBCEFP",156,0)
 . S IBLIMIT=5
"RTN","IBCEFP",157,0)
 . D:$$ISINSUR^IBCEF71(IBCURR,IB399) PROVINF(IB399,$S(IBCURR="T":3,IBCURR="S":2,IBCURR="P":1,1:1),.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",158,0)
 I IBPROV="O" D
"RTN","IBCEFP",159,0)
 . S IBLIMIT=3
"RTN","IBCEFP",160,0)
 . I IBCURR="P" D
"RTN","IBCEFP",161,0)
 .. D:$$ISINSUR^IBCEF71("S",IB399) PROVINF(IB399,2,.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",162,0)
 .. D:$$ISINSUR^IBCEF71("T",IB399) PROVINF(IB399,3,.IBRESARR,2,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",163,0)
 . I IBCURR="S" D
"RTN","IBCEFP",164,0)
 .. D:$$ISINSUR^IBCEF71("P",IB399) PROVINF(IB399,1,.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",165,0)
 .. D:$$ISINSUR^IBCEF71("T",IB399) PROVINF(IB399,3,.IBRESARR,2,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",166,0)
 . I IBCURR="T" D
"RTN","IBCEFP",167,0)
 .. D:$$ISINSUR^IBCEF71("P",IB399) PROVINF(IB399,1,.IBRESARR,1,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",168,0)
 .. D:$$ISINSUR^IBCEF71("S",IB399) PROVINF(IB399,2,.IBRESARR,2,IBPROV,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,.IBXDATA)
"RTN","IBCEFP",169,0)
 M IBRES=IBRESARR
"RTN","IBCEFP",170,0)
 Q
"RTN","IBCEFP",171,0)
 ;
"RTN","IBCEFP",172,0)
 ;-- PROVINF --
"RTN","IBCEFP",173,0)
 ;Create array with prov info
"RTN","IBCEFP",174,0)
 ;Input:
"RTN","IBCEFP",175,0)
 ; IB399 - ien #399
"RTN","IBCEFP",176,0)
 ; IBPRNUM - 1=prim ins, 2= sec, 3 -tert
"RTN","IBCEFP",177,0)
 ; IBRES - for results
"RTN","IBCEFP",178,0)
 ; IBSORT - to sort OTHER INSURANCE data 
"RTN","IBCEFP",179,0)
 ;  if PROVINF is called for "C" mode of PROVIDER subroutine then 
"RTN","IBCEFP",180,0)
 ;    IBSORT can be any (say 1)
"RTN","IBCEFP",181,0)
 ;  if PROVINF is called for "O" mode then can be more than set of data
"RTN","IBCEFP",182,0)
 ;    - need to sort array to use it (like IBXDATA(1) and IBXDATA(2))
"RTN","IBCEFP",183,0)
 ;    for mode "O" it should be 1 or 2 (see PROVIDER section)
"RTN","IBCEFP",184,0)
 ;IBINSTP -  "C" -current ins, "O"-other
"RTN","IBCEFP",185,0)
 ;IBFRMTYP - Form Type
"RTN","IBCEFP",186,0)
 ;IBCARE - Care Type
"RTN","IBCEFP",187,0)
 ;IBLIMIT - Limits on Secondary
"RTN","IBCEFP",188,0)
 ;IBCURR - Current Insurance
"RTN","IBCEFP",189,0)
 ;IBXDAYA - Revenue Code Array
"RTN","IBCEFP",190,0)
 ;Output:
"RTN","IBCEFP",191,0)
 ; IBRES(PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEFP",192,0)
 ; where:(see PROVIDER)
"RTN","IBCEFP",193,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP,IBFRMTYP,IBCARE,IBLIMIT,IBCURR,IBXDATA) ;
"RTN","IBCEFP",194,0)
 I $G(IB399)="" G PROVINFQ
"RTN","IBCEFP",195,0)
 I $G(IBINSTP)="" G PROVINFQ
"RTN","IBCEFP",196,0)
 I +$G(IBSORT)=0 S IBSORT=$G(IBPRNUM)
"RTN","IBCEFP",197,0)
 N IBPRTYP,IBINSCO,IBPROV,IB35591,IBN,IBEXC
"RTN","IBCEFP",198,0)
 S IBN=0
"RTN","IBCEFP",199,0)
 S IBINSCO=+$P($G(^DGCR(399,IB399,"M")),"^",IBPRNUM)
"RTN","IBCEFP",200,0)
 S IB35591=$$CH35591^IBCEF72(IBINSCO,IBFRMTYP,IBCARE)
"RTN","IBCEFP",201,0)
 S IBPRTYP=0
"RTN","IBCEFP",202,0)
 F  S IBPRTYP=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP)) Q:'IBPRTYP  D
"RTN","IBCEFP",203,0)
 . N Z,IB355OV,IBPROV,IBARR
"RTN","IBCEFP",204,0)
 . S IBPROV=$$PROVPTR(IB399,IBPRTYP,0),IBEXC=""
"RTN","IBCEFP",205,0)
 . Q:+IBPROV=0
"RTN","IBCEFP",206,0)
 . S Z=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)) I Z S Z=$G(^DGCR(399,IB399,"PRV",Z,0))
"RTN","IBCEFP",207,0)
 . D GETPRV(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBARR,IBPRTYP,IBINSTP,Z)
"RTN","IBCEFP",208,0)
 . M IBRES("PROVINF",IB399,IBINSTP)=IBARR
"RTN","IBCEFP",209,0)
 I $D(IBRES("PROVINF",IB399,IBINSTP,IBSORT))>1 S IBRES("PROVINF",IB399,IBINSTP,IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEFP",210,0)
 N SLC,CPLNK
"RTN","IBCEFP",211,0)
 S SLC=0
"RTN","IBCEFP",212,0)
 F  S SLC=$O(IBXDATA(SLC)) Q:'SLC   S IBXSAVE("SLC")=+SLC D
"RTN","IBCEFP",213,0)
 . S CPLNK=$G(IBXDATA(SLC,"CPLNK")) I 'CPLNK Q
"RTN","IBCEFP",214,0)
 . S IBPRTYP=0
"RTN","IBCEFP",215,0)
 . F  S IBPRTYP=$O(^DGCR(399,IB399,"CP",CPLNK,"LNPRV","B",IBPRTYP)) Q:'IBPRTYP  D
"RTN","IBCEFP",216,0)
 .. N Z,IBPROV,IBARR
"RTN","IBCEFP",217,0)
 .. S IBPROV=$$PROVPTR(IB399,IBPRTYP,CPLNK),IBEXC=""
"RTN","IBCEFP",218,0)
 .. Q:'+IBPROV
"RTN","IBCEFP",219,0)
 .. S Z=$O(^DGCR(399,IB399,"CP",CPLNK,"LNPRV","B",IBPRTYP,0)) I Z S Z=$G(^DGCR(399,IB399,"CP",CPLNK,"LNPRV",Z,0))
"RTN","IBCEFP",220,0)
 .. D GETPRV(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBARR,IBPRTYP,IBINSTP,Z)
"RTN","IBCEFP",221,0)
 .. M IBRES("L-PROV",IB399,SLC,IBINSTP)=IBARR
"RTN","IBCEFP",222,0)
 . I $D(IBRES("L-PROV",IB399,SLC,IBINSTP,IBSORT))>1 S IBRES("L-PROV",IB399,SLC,IBINSTP,IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEFP",223,0)
 ;
"RTN","IBCEFP",224,0)
PROVINFQ ;Exit PROVINF
"RTN","IBCEFP",225,0)
 Q
"RTN","IBCEFP",226,0)
 ;
"RTN","IBCEFP",227,0)
GETPRV(IBINSCO,IBFRMTYP,IBCARE,IBPROV,IBRES,IBPRTYP,IBINSTP,IBD) ;
"RTN","IBCEFP",228,0)
 I "CO"'[$G(IBINSTP) G GETPRVQ
"RTN","IBCEFP",229,0)
 N IBRETARR,IBNPI,IBN,IBMRAND,IB355OV S IBRETARR=0,IB355OV=""
"RTN","IBCEFP",230,0)
 D PRACT^IBCEF71(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBRETARR,IBPRTYP,$G(IBINSTP))
"RTN","IBCEFP",231,0)
 I $P(IBD,U,IBPRNUM+4)'="",$P(IBD,U,IBPRNUM+11)'="" S IB355OV=$P(IBD,U,IBPRNUM+4)_U_$P(IBD,U,IBPRNUM+11)
"RTN","IBCEFP",232,0)
 S IBN=0,IBMRAND=$$MCRONBIL^IBEFUNC(IB399)
"RTN","IBCEFP",233,0)
 ;Calculate MEDICARE (WNR) specific provider qualifier and ID for CMS-1500 secondary claims
"RTN","IBCEFP",234,0)
 I "34"[$G(IBPRTYP),$G(IBFRMTYP)=2,IBMRAND S IB355OV=$$MCR24K^IBCEU3(IB399,IBPROV)_"^12"
"RTN","IBCEFP",235,0)
 I $P(IB355OV,U,2) D
"RTN","IBCEFP",236,0)
 . I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P($G(^IBE(355.97,+$P(IB355OV,U,2),0)),U,3)) D
"RTN","IBCEFP",237,0)
 .. S IBEXC=$P(IB355OV,U,2),IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="OVERRIDE^"_IBINSCO_U_$P($G(^IBE(355.97,+IBEXC,0)),U,3)_U_$P(IB355OV,U)_"^^^^^"_+IBEXC
"RTN","IBCEFP",238,0)
 I IB35591'="",IBEXC'=$P(IB35591,U,3) I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P(IB35591,"^")) D
"RTN","IBCEFP",239,0)
 . S IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="DEFAULT^"_IBINSCO_"^"_IB35591_"^^",$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=$P(IB35591,U,3)
"RTN","IBCEFP",240,0)
 S IBNPI=$$NPI^IBCEFP1(IBPROV)
"RTN","IBCEFP",241,0)
 D SORT^IBCEF77(IBSORT,IBPRTYP,IB399,.IBRETARR,.IBRES,IBN,IBEXC,IBPRNUM,IBLIMIT)
"RTN","IBCEFP",242,0)
 S IBRES(IBSORT,IBPRTYP,0)="PRIMARY"_U_U_$$STRIP^IBCEF76($S(IBNPI]"":"XX",1:"")_U_IBNPI,1,U,IBSTRIP)
"RTN","IBCEFP",243,0)
 F IBN=1:1 Q:'$D(IBRES(IBSORT,IBPRTYP,IBN))  S $P(IBRES(IBSORT,IBPRTYP,IBN),U,3,4)=$$STRIP^IBCEF76($P(IBRES(IBSORT,IBPRTYP,IBN),U,3,4),1,U,IBSTRIP)
"RTN","IBCEFP",244,0)
 S IBRES(IBSORT,IBPRTYP,"NAME")=$$NAME^IBCEFP1(IBPROV,IBIFN,$P(IBD,U,3),$P(IBD,U,8))
"RTN","IBCEFP",245,0)
 S IBRES(IBSORT,IBPRTYP,"ENTITY TYPE")=$S(IBPROV'["355.93,":1,$P($G(^IBA(355.93,+IBPROV,0)),U,2)=2:1,1:2)
"RTN","IBCEFP",246,0)
 S IBRES(IBSORT,IBPRTYP,"TAXONOMY")=$$TAXON^IBCEFP1(IBPROV,$P(IBD,U,15))
"RTN","IBCEFP",247,0)
 S IBRES(IBSORT,IBPRTYP,"COBID")=$$COBID^IBCEFP1(IB399,IBPRTYP,IBMRAND,IBD)
"RTN","IBCEFP",248,0)
 S IBRES(IBSORT,IBPRTYP)=IBPROV
"RTN","IBCEFP",249,0)
GETPRVQ ;
"RTN","IBCEFP",250,0)
 Q
"RTN","IBCEFP",251,0)
 ;
"RTN","IBCEFP",252,0)
PROVPTR(IBIEN399,IBFUNC,IBCP) ; Retrieve Provider Pointer from appropriate file
"RTN","IBCEFP",253,0)
 N IBN,RSLT
"RTN","IBCEFP",254,0)
 S IBCP=+$G(IBCP)
"RTN","IBCEFP",255,0)
 I 'IBCP D
"RTN","IBCEFP",256,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFUNC,0))
"RTN","IBCEFP",257,0)
 . I +IBN=0 S RSLT=0 Q
"RTN","IBCEFP",258,0)
 . S RSLT=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),U,2)
"RTN","IBCEFP",259,0)
 I IBCP D
"RTN","IBCEFP",260,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"CP",IBCP,"LNPRV","B",IBFUNC,0))
"RTN","IBCEFP",261,0)
 . I +IBN=0 S RSLT=0 Q
"RTN","IBCEFP",262,0)
 . S RSLT=$P($G(^DGCR(399,IBIEN399,"CP",IBCP,"LNPRV",+IBN,0)),U,2)
"RTN","IBCEFP",263,0)
 Q RSLT
"RTN","IBCEFP",264,0)
 ;
"RTN","IBCEFP",265,0)
 ;Input:
"RTN","IBCEFP",266,0)
 ;IBXIEN - Internal Entry Number for the current bill/claim
"RTN","IBCEFP",267,0)
 ;IBXSAVE - Array for returning the data
"RTN","IBCEFP",268,0)
 ;
"RTN","IBCEFP",269,0)
 ;Output:
"RTN","IBCEFP",270,0)
 ;IBXSAVE - Data Array
"RTN","IBCEFP",271,0)
AMB(IBXIEN,IBXSAVE) ; Gather Ambulance Data for AMB Record(s) - IB*2.0*447/TAZ
"RTN","IBCEFP",272,0)
 N NODE,CODE,CNT,IBXDATA
"RTN","IBCEFP",273,0)
 K IBXSAVE("AMB")
"RTN","IBCEFP",274,0)
 F NODE="U5","U6","U7" S IBXDATA=$G(^DGCR(399,IBXIEN,NODE)) I $TR(IBXDATA,U)'="" S IBXSAVE("AMB",NODE)=IBXDATA
"RTN","IBCEFP",275,0)
 S CODE="",CNT=0
"RTN","IBCEFP",276,0)
 F  S CODE=$O(^DGCR(399,IBXIEN,"U9","B",CODE)) Q:'CODE  D
"RTN","IBCEFP",277,0)
 . S IBXDATA=$P($G(^IBE(353.5,CODE,0)),U,1) I IBXDATA="" Q
"RTN","IBCEFP",278,0)
 . S CNT=CNT+1,IBXSAVE("AMB","U9",CNT)=IBXDATA
"RTN","IBCEFP",279,0)
 Q
"RTN","IBCEFP",280,0)
 ;
"RTN","IBCEFP",281,0)
SNDS2(IBXDATA,PIECE) ;Determine if a SUB2 record is necessary.
"RTN","IBCEFP",282,0)
 ; Input: IBXDATA
"RTN","IBCEFP",283,0)
 ;       May contain data from field 232 of file 399.
"RTN","IBCEFP",284,0)
 ; Output: IBXDATA
"RTN","IBCEFP",285,0)
 ;       Returns Output for piece 2 or 3 or 1 for any other piece (like 1.5)
"RTN","IBCEFP",286,0)
 ;Any time that ONE of the following criteria is met we should send a SUB2 record
"RTN","IBCEFP",287,0)
 ; 1. Incoming IBXDATA is not null SEND - Non-VA facility in field 232 of file 399
"RTN","IBCEFP",288,0)
 ; 2. If the service facility is a VA Institution in file 4 or a non-VA facility in file 355.93 SEND
"RTN","IBCEFP",289,0)
 ; 3. Not a switchback payer $$SENDSF^IBCEF79(IBXIEN)'=0 SEND
"RTN","IBCEFP",290,0)
 ;
"RTN","IBCEFP",291,0)
 ; MRD;IB*2.0*516 - Due to fields being marked for deletion, the
"RTN","IBCEFP",292,0)
 ; function $$SENDSF^IBCEF79 will always return '1'.  Refer to
"RTN","IBCEFP",293,0)
 ; that function and INSFLGS^^IBCEF79 for more information.
"RTN","IBCEFP",294,0)
 ;
"RTN","IBCEFP",295,0)
 I IBXDATA="" D
"RTN","IBCEFP",296,0)
 . N Z
"RTN","IBCEFP",297,0)
 . S Z=$P($$B^IBCEF79(IBXIEN),U,3)
"RTN","IBCEFP",298,0)
 . ;S Z1=$$SENDSF^IBCEF79(IBXIEN)
"RTN","IBCEFP",299,0)
 . ;S IBXDATA=$S(Z="":0,'Z1:0,1:1)
"RTN","IBCEFP",300,0)
 . S IBXDATA=$S(Z="":0,1:1)
"RTN","IBCEFP",301,0)
 . Q
"RTN","IBCEFP",302,0)
 I 'IBXDATA S IBXDATA=""
"RTN","IBCEFP",303,0)
 I IBXDATA'="" S IBXDATA=$S(PIECE=2:77,PIECE=3:2,1:1)
"RTN","IBCEFP",304,0)
 Q IBXDATA
"RTN","IBCEOB0")
0^160^B91995821^B90917821
"RTN","IBCEOB0",1,0)
IBCEOB0 ;ALB/TMP/PJH - 835 EDI EOB MSG PROCESSING ; 8/24/10 7:23pm
"RTN","IBCEOB0",2,0)
 ;;2.0;INTEGRATED BILLING;**135,280,155,431,488,516**;21-MAR-94;Build 123
"RTN","IBCEOB0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEOB0",4,0)
 Q
"RTN","IBCEOB0",5,0)
 ;
"RTN","IBCEOB0",6,0)
LINE() ;Extract Provider Line Reference from 42 record
"RTN","IBCEOB0",7,0)
 N SUB,NODE,VAL
"RTN","IBCEOB0",8,0)
 S VAL="",SUB=IBA1 ; from loop in UPD3611^IBCEOB
"RTN","IBCEOB0",9,0)
 ;IB*2.0*516/TAZ - Quit when another RT 40 is encountered to prevent group of
"RTN","IBCEOB0",10,0)
 ;mismatched procedures
"RTN","IBCEOB0",11,0)
 F  S SUB=$O(@IBFILE@(SUB)) Q:SUB=""  D  Q:(+NODE>42)!(+NODE=40)
"RTN","IBCEOB0",12,0)
 .S NODE=$G(@IBFILE@(SUB,0))
"RTN","IBCEOB0",13,0)
 .S:NODE["RAW DATA" NODE=$P(NODE," ",3,99)
"RTN","IBCEOB0",14,0)
 .Q:+NODE'=42  S VAL=$P(NODE,U,5)
"RTN","IBCEOB0",15,0)
 Q VAL
"RTN","IBCEOB0",16,0)
 ;
"RTN","IBCEOB0",17,0)
30(IB0,IBEOB,IBOK) ; Process record type 30 for EOB
"RTN","IBCEOB0",18,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",19,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",20,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",21,0)
 ;
"RTN","IBCEOB0",22,0)
 N A
"RTN","IBCEOB0",23,0)
 S A="3;4.01;0;1;1^5;4.02;0;1;1^6;4.03;1;0;0^7;4.05;1;0;0^8;4.06;1;0;0^9;4.07;1;0;0^10;4.08;1;0;0^11;4.09;1;0;0^12;4.1;1;0;0^13;4.11;1;0;0^14;4.19;0;1;1"
"RTN","IBCEOB0",24,0)
 ;
"RTN","IBCEOB0",25,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB0",26,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB0",27,0)
Q30 Q
"RTN","IBCEOB0",28,0)
 ;
"RTN","IBCEOB0",29,0)
40(IB0,IBEOB,IBOK) ; Process record type 40 for EOB
"RTN","IBCEOB0",30,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",31,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",32,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",33,0)
 ;
"RTN","IBCEOB0",34,0)
 ; IBZDATA is also assumed to exist or if not, it is created in FINDLN
"RTN","IBCEOB0",35,0)
 ;
"RTN","IBCEOB0",36,0)
 N A,LEVEL,IBSEQ,IBDA,IBPC,IBLREF,IBIFN,Q,X,Y,DA,DD,DO,DIC,DLAYGO,PLREF,ERRCOD
"RTN","IBCEOB0",37,0)
 K ^TMP($J,40) ; the entry # for corresponding 41, 42, and 45 records
"RTN","IBCEOB0",38,0)
 ;
"RTN","IBCEOB0",39,0)
 S IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB0",40,0)
 L +^IBM(361.1,IBEOB,15):0 I $T S IBSEQ=+$O(^IBM(361.1,IBEOB,15," "),-1)+1
"RTN","IBCEOB0",41,0)
 I '$G(IBSEQ) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Record lock failure - could not acquire next service line number" G Q40
"RTN","IBCEOB0",42,0)
 ;
"RTN","IBCEOB0",43,0)
 ; Update the 40 record data a little bit (pieces 3/4/16)
"RTN","IBCEOB0",44,0)
 I $P(IB0,U,21)="NU" S $P(IB0,U,4)=$P(IB0,U,3),$P(IB0,U,3)=""
"RTN","IBCEOB0",45,0)
 S $P(IB0,U,16)=$S(+$P(IB0,U,16):$P(IB0,U,16)/100,1:+$P(IB0,U,18)/100)
"RTN","IBCEOB0",46,0)
 I $P(IB0,U,4)?1.N S $P(IB0,U,4)=+$P(IB0,U,4)
"RTN","IBCEOB0",47,0)
 ;
"RTN","IBCEOB0",48,0)
 ; Find the line item from original bill for this adjustment
"RTN","IBCEOB0",49,0)
 S PLREF=$S('HIPAA:$P(IB0,U,22),1:$$LINE()) ; old format from 40 record, new format from 42
"RTN","IBCEOB0",50,0)
 S ERRCOD=0
"RTN","IBCEOB0",51,0)
 S IBLREF=+$$FINDLN^IBCEOB1(IB0,IBEOB,.IBZDATA,+PLREF,.ERRCOD)
"RTN","IBCEOB0",52,0)
 I 'IBLREF D  G Q40
"RTN","IBCEOB0",53,0)
 . N Z,Z0,CT,ETEXT
"RTN","IBCEOB0",54,0)
 . S EFLAG=0,ETEXT=""
"RTN","IBCEOB0",55,0)
 . ;;S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line detail could not be matched to a billed item"
"RTN","IBCEOB0",56,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=" "
"RTN","IBCEOB0",57,0)
 . S ETEXT=$P("Revenue Code^Procedure Code^Amount of Units^Charge Amount^Procedure Code Modifier",U,+ERRCOD)
"RTN","IBCEOB0",58,0)
 . I ETEXT="" S ETEXT="Data"
"RTN","IBCEOB0",59,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched "_ETEXT_":"
"RTN","IBCEOB0",60,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)=" "
"RTN","IBCEOB0",61,0)
 . D DET40^IBCEOB00(IB0,.Z0,ERRCOD)
"RTN","IBCEOB0",62,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",63,0)
 ;
"RTN","IBCEOB0",64,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,",DIC(0)="L",DLAYGO=361.115,DA(1)=IBEOB
"RTN","IBCEOB0",65,0)
 S X=IBSEQ
"RTN","IBCEOB0",66,0)
 S DIC("DR")=".12////"_+IBLREF_$S($P(IBLREF,U,2)="":"",1:";.15////"_$P(IBLREF,U,2))_";.16////"_$$DATE^IBCEU($P(IB0,U,19))_$S($P(IB0,U,20):";.17////"_$$DATE^IBCEU($P(IB0,U,20)),1:"")
"RTN","IBCEOB0",67,0)
 D FILE^DICN K DIC,DO,DD,DLAYGO ;Add a new LINE LEVEL ADJUSTMENT ('SVC')
"RTN","IBCEOB0",68,0)
 I Y<0 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add a LINE LEVEL ADJUSTMENT ("_IBSEQ_")" G Q40
"RTN","IBCEOB0",69,0)
 ;
"RTN","IBCEOB0",70,0)
 L -^IBM(361.1,IBEOB,15)
"RTN","IBCEOB0",71,0)
 ;
"RTN","IBCEOB0",72,0)
 S LEVEL=15.1,LEVEL(0)=+Y,LEVEL(1)=IBEOB,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"
"RTN","IBCEOB0",73,0)
 S A="3;.04;0;0;0^4;.1;0;0;0^9;.09;0;0;0^17;.03;1;0;0^18;.11;0;1;D2^21;.18;0;0;0"
"RTN","IBCEOB0",74,0)
 I '$P(IB0,U,18),$P(IB0,U,16) S $P(A,U,5)="16;.11;0;1;1"
"RTN","IBCEOB0",75,0)
 I $$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL) S ^TMP($J,40)=LEVEL(0),IBOK=1
"RTN","IBCEOB0",76,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",77,0)
 ;
"RTN","IBCEOB0",78,0)
 ; Store modifiers in multiple
"RTN","IBCEOB0",79,0)
 S DIC="^IBM(361.1,"_IBEOB_",15,"_LEVEL(0)_",2,",DIC(0)="L",DLAYGO=361.1152,DA(2)=IBEOB,DA(1)=LEVEL(0)
"RTN","IBCEOB0",80,0)
 F Q=5:1:8 S X=$P(IB0,U,Q) I X'="" D FILE^DICN K DO,DD I Y<0 S IBOK=0 Q
"RTN","IBCEOB0",81,0)
 K DLAYGO,DIC,DR,DA
"RTN","IBCEOB0",82,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file modifier data for line level adjustment "_IBSEQ G Q40
"RTN","IBCEOB0",83,0)
Q40 Q
"RTN","IBCEOB0",84,0)
 ;
"RTN","IBCEOB0",85,0)
41(IB0,IBEOB,IBOK) ; Process record type 41 for EOB
"RTN","IBCEOB0",86,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",87,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",88,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",89,0)
 ;
"RTN","IBCEOB0",90,0)
 N DA,DR,DIE,X,Y,Z,Z0,CT
"RTN","IBCEOB0",91,0)
 I '$G(^TMP($J,40)) D  G Q41
"RTN","IBCEOB0",92,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 41) has no matching service line"
"RTN","IBCEOB0",93,0)
 . D DET4X^IBCEOB00(41,IB0,.Z0)
"RTN","IBCEOB0",94,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",95,0)
 ;
"RTN","IBCEOB0",96,0)
 S DR="",IBOK=1
"RTN","IBCEOB0",97,0)
 S DA=+^TMP($J,40),DA(1)=IBEOB
"RTN","IBCEOB0",98,0)
 S DIE="^IBM(361.1,"_DA(1)_",15,"
"RTN","IBCEOB0",99,0)
 I +$P(IB0,U,3) S DR=".13///"_$$DOLLAR^IBCEOB($P(IB0,U,3))
"RTN","IBCEOB0",100,0)
 I +$P(IB0,U,4) S DR=DR_$S(DR="":"",1:";")_".14///"_$$DOLLAR^IBCEOB($P(IB0,U,4))
"RTN","IBCEOB0",101,0)
 I DR'="" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB0",102,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched data for service line adjustment-2 (EEOB Record 41)"
"RTN","IBCEOB0",103,0)
 ;
"RTN","IBCEOB0",104,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB0",105,0)
 ; If the Allowed Amount field is present, then we need to file an
"RTN","IBCEOB0",106,0)
 ; adjustment:  Group code PR, Reason code AAA, Amount, Quantity, and
"RTN","IBCEOB0",107,0)
 ; Reason Text.  This is data normally found on the 45 record, so we're
"RTN","IBCEOB0",108,0)
 ; going to create our own "45" record and file it.
"RTN","IBCEOB0",109,0)
 ;
"RTN","IBCEOB0",110,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,+$P(IB0,U,3) D
"RTN","IBCEOB0",111,0)
 . N IB45,IBSAV40
"RTN","IBCEOB0",112,0)
 . S IB45=45_U_$P(IB0,U,2)_U_"PR"_U_"AAA"_U_$P(IB0,U,3)_U_"0000000001"
"RTN","IBCEOB0",113,0)
 . S IB45=IB45_U_"Allowed Amount"
"RTN","IBCEOB0",114,0)
 . S IBSAV40=$G(^TMP($J,40))
"RTN","IBCEOB0",115,0)
 . D 45(IB45,IBEOB,.IBOK)
"RTN","IBCEOB0",116,0)
 . S ^TMP($J,40)=IBSAV40
"RTN","IBCEOB0",117,0)
 . I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the PR-AAA adjustment for the Allowed Amount at line "_+^TMP($J,40)
"RTN","IBCEOB0",118,0)
 . Q
"RTN","IBCEOB0",119,0)
 ;
"RTN","IBCEOB0",120,0)
Q41 Q
"RTN","IBCEOB0",121,0)
 ;
"RTN","IBCEOB0",122,0)
42(IB0,IBEOB,IBOK) ; Process record type 42 for EOB 
"RTN","IBCEOB0",123,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",124,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",125,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",126,0)
 ;
"RTN","IBCEOB0",127,0)
 N DO,DD,DLAYGO,DIC,DA,X,Y,Z,Z0,CT
"RTN","IBCEOB0",128,0)
 S IBOK=0
"RTN","IBCEOB0",129,0)
 I '$G(^TMP($J,40)) D  G Q42
"RTN","IBCEOB0",130,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 42) has no matching service line"
"RTN","IBCEOB0",131,0)
 . D DET4X^IBCEOB00(42,IB0,.Z0)
"RTN","IBCEOB0",132,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",133,0)
 ;
"RTN","IBCEOB0",134,0)
 K DO,DD,DLAYGO
"RTN","IBCEOB0",135,0)
 S IBOK=1
"RTN","IBCEOB0",136,0)
 S DA(1)=+^TMP($J,40),DA(2)=IBEOB
"RTN","IBCEOB0",137,0)
 S X=+$O(^IBM(361.1,DA(2),15,DA(1),4," "),-1)+1,DIC="^IBM(361.1,"_DA(2)_",15,"_DA(1)_",4,",DIC(0)="L",DLAYGO=361.1154
"RTN","IBCEOB0",138,0)
 S DIC("DR")=$S($P(IB0,U,3)'="":".02////"_$P(IB0,U,3),1:"")
"RTN","IBCEOB0",139,0)
 I $P(IB0,U,4)'="" S:$L(DIC("DR")) DIC("DR")=DIC("DR")_";" S DIC("DR")=DIC("DR")_".03////"_$TR($P(IB0,U,4),";"," ")
"RTN","IBCEOB0",140,0)
 D FILE^DICN K DO,DD,DLAYGO
"RTN","IBCEOB0",141,0)
 I Y'>0 S IBOK=0
"RTN","IBCEOB0",142,0)
 I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched data for service line adjustment-3 (EEOB Record 42)"
"RTN","IBCEOB0",143,0)
 ;
"RTN","IBCEOB0",144,0)
 ; For Medicare MRA's only:
"RTN","IBCEOB0",145,0)
 ; Process and store the line level remark code as an LQ kludge line
"RTN","IBCEOB0",146,0)
 ; level adjustment.
"RTN","IBCEOB0",147,0)
 ;
"RTN","IBCEOB0",148,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$P(IB0,U,3)'="" D
"RTN","IBCEOB0",149,0)
 . N IB45,IBSAV40
"RTN","IBCEOB0",150,0)
 . S IB45=45_U_$P(IB0,U,2)_U_"LQ"_U_$P(IB0,U,3)_U_0_U_0_U_$P(IB0,U,4)
"RTN","IBCEOB0",151,0)
 . S IBSAV40=$G(^TMP($J,40))
"RTN","IBCEOB0",152,0)
 . D 45(IB45,IBEOB,.IBOK)
"RTN","IBCEOB0",153,0)
 . S ^TMP($J,40)=IBSAV40
"RTN","IBCEOB0",154,0)
 . I '$G(IBOK) S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not file the LQ-remark code adjustment at line "_+^TMP($J,40)
"RTN","IBCEOB0",155,0)
 . Q
"RTN","IBCEOB0",156,0)
Q42 Q
"RTN","IBCEOB0",157,0)
 ;
"RTN","IBCEOB0",158,0)
45(IB0,IBEOB,IBOK) ; Process record type 45 for EOB 
"RTN","IBCEOB0",159,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",160,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",161,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",162,0)
 ;
"RTN","IBCEOB0",163,0)
 N IBDA,LEVEL,A,Z0,CT,Z
"RTN","IBCEOB0",164,0)
 I '$G(^TMP($J,40)) D  G Q45
"RTN","IBCEOB0",165,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 45) has no matching service line"
"RTN","IBCEOB0",166,0)
 . D DET4X^IBCEOB00(45,IB0,.Z0)
"RTN","IBCEOB0",167,0)
 . S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",168,0)
 ;
"RTN","IBCEOB0",169,0)
 I $P(IB0,U,3)'="" S $P(^TMP($J,40),U,2)=$P(IB0,U,3)
"RTN","IBCEOB0",170,0)
 I $P(IB0,U,3)="" S $P(IB0,U,3)=$P(^TMP($J,40),U,2)
"RTN","IBCEOB0",171,0)
 I $P(IB0,U,3)="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 45) is missing its group code" G Q45
"RTN","IBCEOB0",172,0)
 ;
"RTN","IBCEOB0",173,0)
 S IBDA(2)=+^TMP($J,40)
"RTN","IBCEOB0",174,0)
 S IBDA(1)=+$O(^IBM(361.1,IBEOB,15,IBDA(2),1,"B",$P(IB0,U,3),0))
"RTN","IBCEOB0",175,0)
 ;
"RTN","IBCEOB0",176,0)
 I 'IBDA(1) D  ;Needs a new entry at group level
"RTN","IBCEOB0",177,0)
 . N X,Y,DA,DD,DO,DIC,DLAYGO
"RTN","IBCEOB0",178,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,",DIC(0)="L",DLAYGO=361.1151,DA(2)=IBEOB,DA(1)=IBDA(2)
"RTN","IBCEOB0",179,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.115,1)
"RTN","IBCEOB0",180,0)
 . S X=$P(IB0,U,3)
"RTN","IBCEOB0",181,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",182,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",183,0)
 . S IBDA(1)=+Y
"RTN","IBCEOB0",184,0)
 ;
"RTN","IBCEOB0",185,0)
 ;Add a new entry at the reason code level
"RTN","IBCEOB0",186,0)
 I $G(IBDA(1)) D
"RTN","IBCEOB0",187,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,",DIC(0)="L",DLAYGO=361.11511,DA(1)=IBDA(1),DA(2)=IBDA(2),DA(3)=IBEOB
"RTN","IBCEOB0",188,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1151,1)
"RTN","IBCEOB0",189,0)
 . S X=$P(IB0,U,4)
"RTN","IBCEOB0",190,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",191,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add reason code ("_$P(IB0,U,4)_") for adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",192,0)
 . S IBDA=+Y
"RTN","IBCEOB0",193,0)
 ;
"RTN","IBCEOB0",194,0)
 I $G(IBDA) D
"RTN","IBCEOB0",195,0)
 . S LEVEL=15,LEVEL("DIE")="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",1,"
"RTN","IBCEOB0",196,0)
 . S LEVEL(0)=IBDA,LEVEL(1)=IBDA(1),LEVEL(2)=IBDA(2),LEVEL(3)=IBEOB
"RTN","IBCEOB0",197,0)
 . S A="5;.02;1;0;0^6;.03;0;1;1^7;.04;0;1;0"
"RTN","IBCEOB0",198,0)
 . S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB,.LEVEL)
"RTN","IBCEOB0",199,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Mismatched data for reason code ("_$P(IB0,U,4)_"), adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",200,0)
 ;
"RTN","IBCEOB0",201,0)
Q45 Q
"RTN","IBCEOB0",202,0)
 ;
"RTN","IBCEOB0",203,0)
46(IB0,IBEOB,IBOK) ; Process record type 46 for EOB 
"RTN","IBCEOB0",204,0)
 ; IB0 = the record being processed
"RTN","IBCEOB0",205,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB0",206,0)
 ; IBOK = Returned as 1 if record filed OK, 0 if error occurred
"RTN","IBCEOB0",207,0)
 ;
"RTN","IBCEOB0",208,0)
 S IBOK=0
"RTN","IBCEOB0",209,0)
 N AGC,IBDA,LEVEL,A,Z0,CT,Z
"RTN","IBCEOB0",210,0)
 I '$G(^TMP($J,40)) D  G Q46
"RTN","IBCEOB0",211,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 46) has no matching service line"
"RTN","IBCEOB0",212,0)
 . D DET4X^IBCEOB00(46,IB0,.Z0)
"RTN","IBCEOB0",213,0)
 . ;S CT=+$O(^TMP(IBEGBL,$J,""),-1),Z=0 F  S Z=$O(Z0(Z)) Q:'Z  S CT=CT+1,^TMP(IBEGBL,$J,CT)=Z0(Z)
"RTN","IBCEOB0",214,0)
 ;
"RTN","IBCEOB0",215,0)
 S AGC=$P(^TMP($J,40),U,2)
"RTN","IBCEOB0",216,0)
 I AGC="" S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Service line adjustment (EEOB Record 46) is missing its group code" G Q46
"RTN","IBCEOB0",217,0)
 ;
"RTN","IBCEOB0",218,0)
 S IBDA(2)=+^TMP($J,40)
"RTN","IBCEOB0",219,0)
 S IBDA(1)=+$O(^IBM(361.1,IBEOB,15,IBDA(2),1,"B",AGC,0))
"RTN","IBCEOB0",220,0)
 ;
"RTN","IBCEOB0",221,0)
 ;
"RTN","IBCEOB0",222,0)
 ;Add a new entry at the Payer Policy level
"RTN","IBCEOB0",223,0)
 I $G(IBDA(1)) D
"RTN","IBCEOB0",224,0)
 . S DIC="^IBM(361.1,"_IBEOB_",15,"_IBDA(2)_",1,"_IBDA(1)_",2,",DIC(0)="L",DLAYGO=361.11511,DA(1)=IBDA(1),DA(2)=IBDA(2),DA(3)=IBEOB
"RTN","IBCEOB0",225,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1151,1)
"RTN","IBCEOB0",226,0)
 . S X=$P(IB0,U,3)
"RTN","IBCEOB0",227,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEOB0",228,0)
 . I Y<0 K IBDA S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Could not add payer policy ("_$P(IB0,U,4)_") for adjustment group code ("_$P(IB0,U,3)_") at line adjustment "_+^TMP($J,40) Q
"RTN","IBCEOB0",229,0)
 . S IBDA=+Y,IBOK=1
"RTN","IBCEOB0",230,0)
 ;
"RTN","IBCEOB0",231,0)
Q46 Q
"RTN","IBCEOB0",232,0)
 ;
"RTN","IBCEOB01")
0^53^B25712240^B24417822
"RTN","IBCEOB01",1,0)
IBCEOB01 ;ALB/ESG - 835 EDI EOB MSG PROCESSING CONT ;16-JAN-2008
"RTN","IBCEOB01",2,0)
 ;;2.0;INTEGRATED BILLING;**377,516**;21-MAR-94;Build 123
"RTN","IBCEOB01",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEOB01",4,0)
 ;
"RTN","IBCEOB01",5,0)
 Q
"RTN","IBCEOB01",6,0)
 ;
"RTN","IBCEOB01",7,0)
 ; This routine processes the "06" record on the incoming 835 and
"RTN","IBCEOB01",8,0)
 ; updates the patient insurance files with the corrected name and/or
"RTN","IBCEOB01",9,0)
 ; subscriber ID# data.
"RTN","IBCEOB01",10,0)
 ;
"RTN","IBCEOB01",11,0)
UPD(IB0,IBEOB,IBIFN,DFN,SEQ) ; update pat ins policy data
"RTN","IBCEOB01",12,0)
 ; IB0   - This is the full "06" record data
"RTN","IBCEOB01",13,0)
 ; IBEOB - ien# to file 361.1
"RTN","IBCEOB01",14,0)
 ; IBIFN - ien# to file 399
"RTN","IBCEOB01",15,0)
 ; DFN   - patient ien# to file 2
"RTN","IBCEOB01",16,0)
 ; SEQ   - payer sequence number
"RTN","IBCEOB01",17,0)
 ;
"RTN","IBCEOB01",18,0)
 NEW CORRID,IBIT,IBZ,IBZ1,IDCHG,INS,MAX,NAMECHG,NNM,NNM1,PD,POL,X,MCRSFX,MCRLEN,LN
"RTN","IBCEOB01",19,0)
 ;
"RTN","IBCEOB01",20,0)
 ; patient ID# processing
"RTN","IBCEOB01",21,0)
 S IDCHG=0   ; flag indicating an ID# change
"RTN","IBCEOB01",22,0)
 S CORRID=$P(IB0,U,6)   ; corrected patient ID#
"RTN","IBCEOB01",23,0)
 S CORRID=$TR(CORRID,"-","")
"RTN","IBCEOB01",24,0)
 I CORRID'="" D
"RTN","IBCEOB01",25,0)
 . I $$VALHIC^IBCNSMM(CORRID) S IDCHG=1   ; valid HIC#
"RTN","IBCEOB01",26,0)
 . E  D MSG^IBCEOB(IBEOB,"The corrected ID# "_CORRID_" is not a valid Medicare HIC#.  No ID# correction done.")
"RTN","IBCEOB01",27,0)
 . Q
"RTN","IBCEOB01",28,0)
 ;
"RTN","IBCEOB01",29,0)
 ; corrected name processing
"RTN","IBCEOB01",30,0)
 S NAMECHG=0   ; flag indicating a name change
"RTN","IBCEOB01",31,0)
 I $P(IB0,U,3)="",$P(IB0,U,4)="",$P(IB0,U,5)="" G UPD1    ; no corrected name components indicated
"RTN","IBCEOB01",32,0)
 ;
"RTN","IBCEOB01",33,0)
 D F^IBCEF("N-CURR INSURED FULL NAME","IBZ",,IBIFN)   ; get the existing name in standard format (see CI2-2.9)
"RTN","IBCEOB01",34,0)
 I IBZ="" D MSG^IBCEOB(IBEOB,"Unable to determine the existing subscriber name.") G UPD1
"RTN","IBCEOB01",35,0)
 S IBZ1=$$NAME^IBCEFG1(IBZ)   ; parse existing name into component pieces (see CI2-2.9)
"RTN","IBCEOB01",36,0)
 ;
"RTN","IBCEOB01",37,0)
 ; Determine if Medicare sent the suffix in the last name field
"RTN","IBCEOB01",38,0)
 S MCRSFX=""                              ; default Medicare suffix found in last name
"RTN","IBCEOB01",39,0)
 S LN=$P(IB0,U,3)                         ; last name
"RTN","IBCEOB01",40,0)
 S MCRLEN=$L(LN," ")                      ; how many " " pieces there are in the Medicare last name
"RTN","IBCEOB01",41,0)
 I MCRLEN>1 D
"RTN","IBCEOB01",42,0)
 . S MCRSFX=$$CHKSUF($P(LN," ",MCRLEN))   ; check the last piece to see if it is a common suffix
"RTN","IBCEOB01",43,0)
 . Q
"RTN","IBCEOB01",44,0)
 ;
"RTN","IBCEOB01",45,0)
 ; build new name components
"RTN","IBCEOB01",46,0)
 S NNM("FAMILY")=$S($P(IB0,U,3)'="":$P(IB0,U,3),1:$P(IBZ1,U,1))
"RTN","IBCEOB01",47,0)
 S NNM("GIVEN")=$S($P(IB0,U,4)'="":$P(IB0,U,4),1:$P(IBZ1,U,2))
"RTN","IBCEOB01",48,0)
 S NNM("MIDDLE")=$S($P(IB0,U,5)'="":$P(IB0,U,5),1:$P(IBZ1,U,3))
"RTN","IBCEOB01",49,0)
 S NNM("SUFFIX")=$S(MCRSFX'="":"",1:$P(IBZ1,U,5))     ; if suffix is in the Medicare last name, blank it out here
"RTN","IBCEOB01",50,0)
 ;
"RTN","IBCEOB01",51,0)
 I NNM("FAMILY")="" D MSG^IBCEOB(IBEOB,"Last name is nil.") G UPD1
"RTN","IBCEOB01",52,0)
 I NNM("GIVEN")="" D MSG^IBCEOB(IBEOB,"First name is nil.") G UPD1
"RTN","IBCEOB01",53,0)
 ;
"RTN","IBCEOB01",54,0)
 K MAX D FIELD^DID(2.312,17,,"FIELD LENGTH","MAX") S MAX=$G(MAX("FIELD LENGTH"))
"RTN","IBCEOB01",55,0)
 I 'MAX D MSG^IBCEOB(IBEOB,"Unable to determine the maximum field length for 2.312,17.") G UPD1
"RTN","IBCEOB01",56,0)
 S NNM1=$$NAMEFMT^XLFNAME(.NNM,"F","CL"_MAX)     ; construct the new name
"RTN","IBCEOB01",57,0)
 K IBIT D FIELD^DID(2.312,17,,"INPUT TRANSFORM","IBIT") S IBIT=$G(IBIT("INPUT TRANSFORM"))
"RTN","IBCEOB01",58,0)
 S X=NNM1 X IBIT        ; invoke the input transform on the field to see if it is valid
"RTN","IBCEOB01",59,0)
 I '$D(X) D MSG^IBCEOB(IBEOB,"New name '"_NNM1_"' failed the input transform for field 2.312,17.") G UPD1
"RTN","IBCEOB01",60,0)
 ;
"RTN","IBCEOB01",61,0)
 ; at this point, all name checks have passed and we have a valid, new, corrected name in NNM1
"RTN","IBCEOB01",62,0)
 S NAMECHG=1
"RTN","IBCEOB01",63,0)
 ;
"RTN","IBCEOB01",64,0)
UPD1 ;
"RTN","IBCEOB01",65,0)
 ;
"RTN","IBCEOB01",66,0)
 I 'NAMECHG,'IDCHG D MSG^IBCEOB(IBEOB,"No changes made.") G UPDX
"RTN","IBCEOB01",67,0)
 ;
"RTN","IBCEOB01",68,0)
 I NAMECHG D
"RTN","IBCEOB01",69,0)
 . N DIE,DA,DR
"RTN","IBCEOB01",70,0)
 . D MSG^IBCEOB(IBEOB,"Name corrected from "_IBZ_" to "_NNM1_".")
"RTN","IBCEOB01",71,0)
 . S DIE=361.1,DA=IBEOB,DR="6.01////^S X=NNM1" D ^DIE
"RTN","IBCEOB01",72,0)
 . Q
"RTN","IBCEOB01",73,0)
 ;
"RTN","IBCEOB01",74,0)
 I IDCHG D
"RTN","IBCEOB01",75,0)
 . N DIE,DA,DR
"RTN","IBCEOB01",76,0)
 . D MSG^IBCEOB(IBEOB,"ID# corrected from "_$$POLICY^IBCEF(IBIFN,2,SEQ)_" to "_CORRID_".")
"RTN","IBCEOB01",77,0)
 . S DIE=361.1,DA=IBEOB,DR="6.02////^S X=CORRID" D ^DIE
"RTN","IBCEOB01",78,0)
 . Q
"RTN","IBCEOB01",79,0)
 ;
"RTN","IBCEOB01",80,0)
 ; Loop thru patient policies looking to update all Medicare entries
"RTN","IBCEOB01",81,0)
 S POL=0
"RTN","IBCEOB01",82,0)
 F  S POL=$O(^DPT(DFN,.312,POL)) Q:'POL  D
"RTN","IBCEOB01",83,0)
 . ;S PD=$G(^DPT(DFN,.312,POL,0))   ; policy data on the 0 node ;516 - baa
"RTN","IBCEOB01",84,0)
 . S PD=$$ZND^IBCNS1(DFN,POL)  ; policy data on the 0 node ;516 - baa
"RTN","IBCEOB01",85,0)
 . S INS=+PD
"RTN","IBCEOB01",86,0)
 . I '$$MCRWNR^IBEFUNC(INS) Q      ; quit if ins co isn't Medicare
"RTN","IBCEOB01",87,0)
 . I IDCHG,CORRID'=$P(PD,U,2) D UPDID(DFN,POL,CORRID)   ; ID# change
"RTN","IBCEOB01",88,0)
 . I NAMECHG,NNM1'=$P(PD,U,17) D UPDNM(DFN,POL,NNM1)    ; name change
"RTN","IBCEOB01",89,0)
 . Q
"RTN","IBCEOB01",90,0)
UPDX ;
"RTN","IBCEOB01",91,0)
 Q
"RTN","IBCEOB01",92,0)
 ;
"RTN","IBCEOB01",93,0)
UPDID(DFN,DA,ID) ; update the subscriber ID# field
"RTN","IBCEOB01",94,0)
 N DR,DIE,DIC
"RTN","IBCEOB01",95,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN
"RTN","IBCEOB01",96,0)
 S DR="7.02///^S X=ID" ;patch 516 - baa changes
"RTN","IBCEOB01",97,0)
 D ^DIE
"RTN","IBCEOB01",98,0)
 D UPDAUD(DFN,DA)           ; audit info
"RTN","IBCEOB01",99,0)
 Q
"RTN","IBCEOB01",100,0)
 ;
"RTN","IBCEOB01",101,0)
UPDNM(DFN,DA,NM) ; update the subscriber name field
"RTN","IBCEOB01",102,0)
 N DR,DIE,DIC
"RTN","IBCEOB01",103,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN
"RTN","IBCEOB01",104,0)
 S DR="7.01///^S X=NM" ;patch 516 - baa changes
"RTN","IBCEOB01",105,0)
 D ^DIE
"RTN","IBCEOB01",106,0)
 D UPDAUD(DFN,DA)           ; audit info
"RTN","IBCEOB01",107,0)
 Q
"RTN","IBCEOB01",108,0)
 ;
"RTN","IBCEOB01",109,0)
UPDAUD(DFN,DA) ; update the audit information for this patient insurance policy
"RTN","IBCEOB01",110,0)
 N DR,DIE,DIC
"RTN","IBCEOB01",111,0)
 D UPDATPT^IBCNSP3(DFN,DA)   ; date and time last edited and by whom
"RTN","IBCEOB01",112,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN
"RTN","IBCEOB01",113,0)
 S DR="1.09///MEDICARE"      ; source of information is MEDICARE
"RTN","IBCEOB01",114,0)
 D ^DIE
"RTN","IBCEOB01",115,0)
 D UPDCLM^IBCNSP1(DFN,DA)    ; update editable claims
"RTN","IBCEOB01",116,0)
 Q
"RTN","IBCEOB01",117,0)
 ;
"RTN","IBCEOB01",118,0)
CHKSUF(X) ; Return X if it looks like a suffix; otherwise, return null
"RTN","IBCEOB01",119,0)
 Q:"^I^II^III^IV^V^VI^VII^VIII^IX^X^JR^SR^DR^MD^ESQ^DDS^RN^"[(U_X_U) X
"RTN","IBCEOB01",120,0)
 Q:"^1ST^2ND^3RD^4TH^5TH^6TH^7TH^8TH^9TH^10TH^"[(U_X_U) X
"RTN","IBCEOB01",121,0)
 Q ""
"RTN","IBCEOB01",122,0)
 ;
"RTN","IBCEP8")
0^25^B134052747^B129710257
"RTN","IBCEP8",1,0)
IBCEP8 ;ALB/TMP/OIFO-BP/RBN - Functions for NON-VA PROVIDER ;11-07-00
"RTN","IBCEP8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,288,320,343,374,377,391,400,436,432,476,516**;21-MAR-94;Build 123
"RTN","IBCEP8",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEP8",4,0)
 ;
"RTN","IBCEP8",5,0)
EN ; -- main entry point
"RTN","IBCEP8",6,0)
 N IBNPRV
"RTN","IBCEP8",7,0)
 K IBFASTXT
"RTN","IBCEP8",8,0)
 D FULL^VALM1
"RTN","IBCEP8",9,0)
 D EN^VALM("IBCE PRVNVA MAINT")
"RTN","IBCEP8",10,0)
 Q
"RTN","IBCEP8",11,0)
 ;
"RTN","IBCEP8",12,0)
HDR ; -- header code
"RTN","IBCEP8",13,0)
 K VALMHDR
"RTN","IBCEP8",14,0)
 Q
"RTN","IBCEP8",15,0)
 ;
"RTN","IBCEP8",16,0)
INIT ; Initialization
"RTN","IBCEP8",17,0)
 N DIC,DA,X,Y,DLAYGO,IBIF,DIR,DTOUT,DUOUT
"RTN","IBCEP8",18,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",19,0)
 ;
"RTN","IBCEP8",20,0)
 ; if coming in from main routine ^IBCEP6 this special variable IBNVPMIF is set already
"RTN","IBCEP8",21,0)
 I $G(IBNVPMIF)'="" S IBIF=IBNVPMIF G INIT1
"RTN","IBCEP8",22,0)
 ;
"RTN","IBCEP8",23,0)
 S DIR("A")="(I)NDIVIDUAL OR (F)ACILITY?: ",DIR(0)="SA^I:INDIVIDUAL;F:FACILITY" D ^DIR K DIR
"RTN","IBCEP8",24,0)
 I $D(DUOUT)!$D(DTOUT) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",25,0)
 S IBIF=Y
"RTN","IBCEP8",26,0)
 ;
"RTN","IBCEP8",27,0)
INIT1 ;
"RTN","IBCEP8",28,0)
 ;
"RTN","IBCEP8",29,0)
 ; Begin IB*2.0*436 - RBN
"RTN","IBCEP8",30,0)
 ;
"RTN","IBCEP8",31,0)
 ;I IBIF="F" D
"RTN","IBCEP8",32,0)
 ;. S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",33,0)
 ;. K VALM("PROTOCOL")
"RTN","IBCEP8",34,0)
 ;. S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",35,0)
 ;. I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",36,0)
 ;
"RTN","IBCEP8",37,0)
 ; End IB*2.0*436 - RBN
"RTN","IBCEP8",38,0)
 ;
"RTN","IBCEP8",39,0)
 S DIC="^IBA(355.93,",DIC("DR")=".02///"_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",40,0)
 S DIC("S")="I $P(^(0),U,2)="_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",41,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON"_$S(IBIF="I":"-",1:"/OTHER ")_"VA PROVIDER: "
"RTN","IBCEP8",42,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",43,0)
 I Y'>0 S VALMQUIT=1 G INITQ
"RTN","IBCEP8",44,0)
 S IBNPRV=+Y
"RTN","IBCEP8",45,0)
 ;
"RTN","IBCEP8",46,0)
 ; *** Begin IB*2.0*436 - RBN
"RTN","IBCEP8",47,0)
 ;
"RTN","IBCEP8",48,0)
 N NEWENTRY
"RTN","IBCEP8",49,0)
 S IBNPRV=+Y,NEWENTRY=$P($G(Y),U,3),IBFLPFLP=0
"RTN","IBCEP8",50,0)
 I 'NEWENTRY D
"RTN","IBCEP8",51,0)
 . N DA,X,Y,DIE,DR
"RTN","IBCEP8",52,0)
 . ;D EN^DDIOL(" ")
"RTN","IBCEP8",53,0)
 . ;D EN^DDIOL("If you do NOT want to edit the provider name or the provider type,","","!")
"RTN","IBCEP8",54,0)
 . ;D EN^DDIOL("then press return at the following NAME prompt.  Otherwise,")
"RTN","IBCEP8",55,0)
 . ;D EN^DDIOL("retype the name as you want it entered into the system.")
"RTN","IBCEP8",56,0)
 . ;D EN^DDIOL(" ")
"RTN","IBCEP8",57,0)
 . ;S DA=IBNPRV
"RTN","IBCEP8",58,0)
 . ;S DIE="^IBA(355.93,"
"RTN","IBCEP8",59,0)
 . ;S DR=".01"
"RTN","IBCEP8",60,0)
 . ;D ^DIE
"RTN","IBCEP8",61,0)
 . D SCREEN(IBNPRV)
"RTN","IBCEP8",62,0)
 . I $D(Y) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",63,0)
 . I $G(IBFLPFLP) S IBIF=$S(IBIF="F":"I",1:"F")
"RTN","IBCEP8",64,0)
 ;
"RTN","IBCEP8",65,0)
 ; *** End IB*2.0*436 - rbn
"RTN","IBCEP8",66,0)
 ;
"RTN","IBCEP8",67,0)
 I IBIF="F" D
"RTN","IBCEP8",68,0)
 . S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",69,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP8",70,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",71,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",72,0)
 D BLD^IBCEP8B(IBNPRV)
"RTN","IBCEP8",73,0)
INITQ Q
"RTN","IBCEP8",74,0)
 ;
"RTN","IBCEP8",75,0)
EXPND ;
"RTN","IBCEP8",76,0)
 Q
"RTN","IBCEP8",77,0)
 ;
"RTN","IBCEP8",78,0)
HELP ;
"RTN","IBCEP8",79,0)
 Q
"RTN","IBCEP8",80,0)
 ;
"RTN","IBCEP8",81,0)
EXIT ;
"RTN","IBCEP8",82,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",83,0)
 D CLEAN^VALM10
"RTN","IBCEP8",84,0)
 K IBFASTXT
"RTN","IBCEP8",85,0)
 Q
"RTN","IBCEP8",86,0)
 ;
"RTN","IBCEP8",87,0)
EDIT1(IBNPRV,IBNOLM) ; Edit non-VA provider/facility demographics
"RTN","IBCEP8",88,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",89,0)
 ; IBNOLM = 1 if not called from list manager
"RTN","IBCEP8",90,0)
 ;
"RTN","IBCEP8",91,0)
 N DA,X,Y,DIE,DR,IBP
"RTN","IBCEP8",92,0)
 I '$G(IBNOLM) D FULL^VALM1
"RTN","IBCEP8",93,0)
 I IBNPRV D
"RTN","IBCEP8",94,0)
 . I '$G(IBNOLM) D CLEAR^VALM1
"RTN","IBCEP8",95,0)
 . S DIE="^IBA(355.93,",DA=IBNPRV,IBP=($P($G(^IBA(355.93,IBNPRV,0)),U,2)=2)
"RTN","IBCEP8",96,0)
 . ; PRXM/KJH - Added NPI and Taxonomy to the list of fields to be edited. Put a "NO^" around the Taxonomy multiple (#42) since some of the sub-field entries are 'required'.
"RTN","IBCEP8",97,0)
 . ; Begin IB*2.0*436 - RBN
"RTN","IBCEP8",98,0)
 . ;S DR=".01;"_$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")_";D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",99,0)
 . ;S DR=$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")_";D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",100,0)
 . ; End IB*2.0*436 - RBN
"RTN","IBCEP8",101,0)
 . ;IB*2.0*432  - add contact phone and name
"RTN","IBCEP8",102,0)
 . S DR=$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;1.01;I X="""" S Y=""@2"";1.02R;S Y=""@3"";@2;1.02;@3;1.03;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")
"RTN","IBCEP8",103,0)
 . D ^DIE
"RTN","IBCEP8",104,0)
 . I 'IBP D
"RTN","IBCEP8",105,0)
 . . S DR=".17" D ^DIE
"RTN","IBCEP8",106,0)
 . . I X="Y" D  ;If sole proprietor, prompt for pointer to #355.93
"RTN","IBCEP8",107,0)
 . . . S DR=".18" D ^DIE
"RTN","IBCEP8",108,0)
 . . . N NPIDEF S NPIDEF=$P($G(^IBA(355.93,IBNPRV,0)),U,14)
"RTN","IBCEP8",109,0)
 . . I X="N" D  ;If not sole proprietor, clear sole proprietor pointer to #355.93
"RTN","IBCEP8",110,0)
 . . . S DR=".18////@" D ^DIE
"RTN","IBCEP8",111,0)
 . ;IB*2.0*476 - Add FEE BASIS allow multiple value
"RTN","IBCEP8",112,0)
 . S DR="D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"");D FBTGLSET^IBCEP8C1(IBNPRV)"
"RTN","IBCEP8",113,0)
 . D ^DIE
"RTN","IBCEP8",114,0)
 . Q:$G(IBNOLM)
"RTN","IBCEP8",115,0)
 . D BLD^IBCEP8B(IBNPRV)
"RTN","IBCEP8",116,0)
 I '$G(IBNOLM) K VALMBCK S VALMBCK="R"
"RTN","IBCEP8",117,0)
 Q
"RTN","IBCEP8",118,0)
 ;
"RTN","IBCEP8",119,0)
EDITID(IBNPRV,IBSLEV) ; Link from this list template to maintain provider-specific ids
"RTN","IBCEP8",120,0)
 ; This entry point is called by 4 action protocols.
"RTN","IBCEP8",121,0)
 ; IBNPRV = ien of entry in file 355.93 (can be either an individual or a facility) (required)
"RTN","IBCEP8",122,0)
 ; IBSLEV = 1 for facility/provider own ID's
"RTN","IBCEP8",123,0)
 ; IBSLEV = 2 for facility/provider ID's furnished by an insurance company
"RTN","IBCEP8",124,0)
 ;
"RTN","IBCEP8",125,0)
 Q:'$G(IBNPRV)
"RTN","IBCEP8",126,0)
 Q:'$G(IBSLEV)
"RTN","IBCEP8",127,0)
 N IBPRV,IBIF
"RTN","IBCEP8",128,0)
 D FULL^VALM1    ; set full scrolling region
"RTN","IBCEP8",129,0)
 D CLEAR^VALM1   ; clear screen
"RTN","IBCEP8",130,0)
 S IBPRV=IBNPRV
"RTN","IBCEP8",131,0)
 ;
"RTN","IBCEP8",132,0)
 K IBFASTXT
"RTN","IBCEP8",133,0)
 S IBIF=$$GET1^DIQ(355.93,IBPRV,.02,"I")    ; 1=facility/group      2=individual
"RTN","IBCEP8",134,0)
 D EN^VALM("IBCE PRVPRV MAINT")
"RTN","IBCEP8",135,0)
 ;
"RTN","IBCEP8",136,0)
 K VALMQUIT
"RTN","IBCEP8",137,0)
 S VALMBCK=$S($G(IBFASTXT)'="":"Q",1:"R")
"RTN","IBCEP8",138,0)
 Q
"RTN","IBCEP8",139,0)
 ;
"RTN","IBCEP8",140,0)
NVAFAC ; Enter/edit Non-VA facility information
"RTN","IBCEP8",141,0)
 ; This entry point is called by the menu system for option IBCE PRVNVA FAC EDIT
"RTN","IBCEP8",142,0)
 N X,Y,DA,DIC,IBNPRV,DLAYGO
"RTN","IBCEP8",143,0)
 S DIC="^IBA(355.93,",DIC("S")="I $P(^(0),U,2)=1",DIC("DR")=".02///1"
"RTN","IBCEP8",144,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON/Other VA FACILITY: "
"RTN","IBCEP8",145,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",146,0)
 I Y'>0 S VALMQUIT=1 G NVAFACQ
"RTN","IBCEP8",147,0)
 S IBNPRV=+Y
"RTN","IBCEP8",148,0)
 D EDIT1(IBNPRV,1)
"RTN","IBCEP8",149,0)
 ;
"RTN","IBCEP8",150,0)
NVAFACQ Q
"RTN","IBCEP8",151,0)
 ;
"RTN","IBCEP8",152,0)
GETFAC(IB,IBFILE,IBELE,CSZLEN) ; Returns facility name, address lines or city-state-zip
"RTN","IBCEP8",153,0)
 ;        IB = ien of entry in file
"RTN","IBCEP8",154,0)
 ;    IBFILE = 0 for retrieval from file 4, 1 for retrieval from file 355.93
"RTN","IBCEP8",155,0)
 ;  If IBELE = 0, returns name
"RTN","IBCEP8",156,0)
 ;           = 1, returns address line 1
"RTN","IBCEP8",157,0)
 ;           = 2, returns address line 2
"RTN","IBCEP8",158,0)
 ;           = 12, returns address lines 1 and 2 together
"RTN","IBCEP8",159,0)
 ;           = 3, returns city, state zip
"RTN","IBCEP8",160,0)
 ;           = "3C", returns city    = "3S", state    = "3Z", zip
"RTN","IBCEP8",161,0)
 ;    CSZLEN = max length allowed for city,st,zip string - Only applies when IBELE=3
"RTN","IBCEP8",162,0)
 ;
"RTN","IBCEP8",163,0)
 N Z,IBX,IC,IS,IZ,DIFF
"RTN","IBCEP8",164,0)
 S IBX=""
"RTN","IBCEP8",165,0)
 ;
"RTN","IBCEP8",166,0)
 S Z=$S('IBFILE:$G(^DIC(4,+IB,1)),1:$G(^IBA(355.93,+IB,0)))
"RTN","IBCEP8",167,0)
 I +IBELE=0 S IBX=$S('IBFILE:$P($G(^DIC(4,+IB,0)),U),1:$P($G(^IBA(355.93,+IB,0)),U))
"RTN","IBCEP8",168,0)
 I IBELE=1!(IBELE=12) S IBX=$S('IBFILE:$P(Z,U),1:$P(Z,U,5))
"RTN","IBCEP8",169,0)
 I IBELE=2!(IBELE=12) S IBX=$S(IBELE=12:IBX_" ",1:"")_$S('IBFILE:$P(Z,U,2),1:$P(Z,U,10))
"RTN","IBCEP8",170,0)
 ;
"RTN","IBCEP8",171,0)
 I +IBELE=3 D
"RTN","IBCEP8",172,0)
 . I 'IBFILE S IC=$P(Z,U,3),IS=$$STATE^IBCEFG1($P($G(^DIC(4,+IB,0)),U,2)),IZ=$P(Z,U,4)
"RTN","IBCEP8",173,0)
 . I IBFILE S IC=$P(Z,U,6),IS=$$STATE^IBCEFG1($P(Z,U,7)),IZ=$P(Z,U,8)
"RTN","IBCEP8",174,0)
 . ;
"RTN","IBCEP8",175,0)
 . I IBELE="3C" S IBX=IC Q
"RTN","IBCEP8",176,0)
 . I IBELE="3S" S IBX=IS Q
"RTN","IBCEP8",177,0)
 . I IBELE="3Z" S IBX=IZ Q
"RTN","IBCEP8",178,0)
 . ;
"RTN","IBCEP8",179,0)
 . S IBX=$$CSZ(IC,IS,IZ,+$G(CSZLEN))    ; build the city, st zip string since IBELE=3 here
"RTN","IBCEP8",180,0)
 . Q
"RTN","IBCEP8",181,0)
 ;
"RTN","IBCEP8",182,0)
GETFACX ;
"RTN","IBCEP8",183,0)
 Q IBX
"RTN","IBCEP8",184,0)
 ;
"RTN","IBCEP8",185,0)
CSZ(IC,IS,IZ,CSZLEN) ; build city, state, zip string
"RTN","IBCEP8",186,0)
 ; IC - city
"RTN","IBCEP8",187,0)
 ; IS - state abbreviation
"RTN","IBCEP8",188,0)
 ; IZ - zip
"RTN","IBCEP8",189,0)
 ; CSZLEN - max length allowed for city, st zip string
"RTN","IBCEP8",190,0)
 ;
"RTN","IBCEP8",191,0)
 NEW IBX,DIFF
"RTN","IBCEP8",192,0)
 ;
"RTN","IBCEP8",193,0)
 ; build the full city, st zip string
"RTN","IBCEP8",194,0)
 S IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ
"RTN","IBCEP8",195,0)
 ;
"RTN","IBCEP8",196,0)
 I '$G(CSZLEN) G CSZX          ; no max length to worry about
"RTN","IBCEP8",197,0)
 I $L(IBX)'>CSZLEN G CSZX      ; length is OK so get out
"RTN","IBCEP8",198,0)
 ;
"RTN","IBCEP8",199,0)
 ; string is too long so try to shorten the zip if it has a dash
"RTN","IBCEP8",200,0)
 I IZ["-" S IZ=$P(IZ,"-",1),IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ I $L(IBX)'>CSZLEN G CSZX
"RTN","IBCEP8",201,0)
 ;
"RTN","IBCEP8",202,0)
 ; string is still too long so truncate the city name until it fits
"RTN","IBCEP8",203,0)
 S DIFF=$L(IBX)-CSZLEN
"RTN","IBCEP8",204,0)
 S IC=$E(IC,1,$L(IC)-DIFF)
"RTN","IBCEP8",205,0)
 S IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ
"RTN","IBCEP8",206,0)
CSZX ;
"RTN","IBCEP8",207,0)
 Q IBX
"RTN","IBCEP8",208,0)
 ;
"RTN","IBCEP8",209,0)
ALLID(IBPRV,IBPTYP,IBZ) ; Returns array IBZ for all ids for provider IBPRV
"RTN","IBCEP8",210,0)
 ; for all provider id types or for id type in IBPTYP
"RTN","IBCEP8",211,0)
 ; IBPRV = vp ien of provider
"RTN","IBCEP8",212,0)
 ; IBPTYP = ien of provider id type to return or "" for all
"RTN","IBCEP8",213,0)
 ; IBZ = array returned with internal data:
"RTN","IBCEP8",214,0)
 ;  IBZ(file 355.9 ien)=ID type^ID#^ins co^form type^bill care type^care un^X12 code for id type
"RTN","IBCEP8",215,0)
 N Z,Z0
"RTN","IBCEP8",216,0)
 K IBZ
"RTN","IBCEP8",217,0)
 G:'$G(IBPRV) ALLIDQ
"RTN","IBCEP8",218,0)
 S IBPTYP=$G(IBPTYP)
"RTN","IBCEP8",219,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",IBPRV,Z)) Q:'Z  S Z0=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP8",220,0)
 . I $S(IBPTYP="":1,1:($P(Z0,U,6)=IBPTYP)) S IBZ(Z)=($P(Z0,U,6)_U_$P(Z0,U,7)_U_$P(Z0,U,2)_U_$P(Z0,U,4)_U_$P(Z0,U,5)_U_$P(Z0,U,3))_U_$P($G(^IBE(355.97,+$P(Z0,U,6),0)),U,3)
"RTN","IBCEP8",221,0)
 ;
"RTN","IBCEP8",222,0)
ALLIDQ Q
"RTN","IBCEP8",223,0)
 ;
"RTN","IBCEP8",224,0)
CLIA() ; Returns ien of CLIA # provider id type
"RTN","IBCEP8",225,0)
 N Z,IBZ
"RTN","IBCEP8",226,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,0)),U,3)="X4",$P(^(0),U)["CLIA" S IBZ=Z Q
"RTN","IBCEP8",227,0)
 Q IBZ
"RTN","IBCEP8",228,0)
 ;
"RTN","IBCEP8",229,0)
STLIC() ; Returns ien of STLIC# provider id type
"RTN","IBCEP8",230,0)
 N Z,IBZ
"RTN","IBCEP8",231,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,3) S IBZ=Z Q
"RTN","IBCEP8",232,0)
 Q IBZ
"RTN","IBCEP8",233,0)
 ;
"RTN","IBCEP8",234,0)
TAXID() ; Returns ien of Fed tax id provider id type
"RTN","IBCEP8",235,0)
 N Z,IBZ
"RTN","IBCEP8",236,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,4) S IBZ=Z Q
"RTN","IBCEP8",237,0)
 Q IBZ
"RTN","IBCEP8",238,0)
 ;
"RTN","IBCEP8",239,0)
CLIANVA(IBIFN) ; Returns CLIA # for a non-VA facility on bill ien IBIFN
"RTN","IBCEP8",240,0)
 N IBCLIA,IBZ,IBNVA,Z
"RTN","IBCEP8",241,0)
 S IBCLIA="",IBZ=$$CLIA()
"RTN","IBCEP8",242,0)
 I IBZ D
"RTN","IBCEP8",243,0)
 . S IBNVA=$P($G(^DGCR(399,IBIFN,"U2")),U,10) Q:'IBNVA
"RTN","IBCEP8",244,0)
 . S IBCLIA=$$IDFIND^IBCEP2(IBIFN,IBZ,IBNVA_";IBA(355.93,","",1)
"RTN","IBCEP8",245,0)
 Q IBCLIA
"RTN","IBCEP8",246,0)
 ;
"RTN","IBCEP8",247,0)
VALFAC(X) ; Function returns 1 if format is valid for X12 facility name
"RTN","IBCEP8",248,0)
 ; Alpha/numeric/certain punctuation valid.  Must start with an Alpha
"RTN","IBCEP8",249,0)
 N OK,VAL
"RTN","IBCEP8",250,0)
 S OK=1
"RTN","IBCEP8",251,0)
 S VAL("A")="",VAL("N")="",VAL=",.- "
"RTN","IBCEP8",252,0)
 I $E(X)'?1A!'$$VALFMT(X,.VAL) S OK=0
"RTN","IBCEP8",253,0)
 Q OK
"RTN","IBCEP8",254,0)
 ;
"RTN","IBCEP8",255,0)
VALFMT(X,VAL) ; Returns 1 if format of X is valid, 0 if not
"RTN","IBCEP8",256,0)
 ; X = data to be examined
"RTN","IBCEP8",257,0)
 ; VAL = a 'string' of valid characters AND/OR (passed by reference)
"RTN","IBCEP8",258,0)
 ;    if VAL("A") defined ==> Alpha
"RTN","IBCEP8",259,0)
 ;    if VAL("A") defined ==> Numeric valid
"RTN","IBCEP8",260,0)
 ;    if VAL("A") defined ==> Punctuation valid
"RTN","IBCEP8",261,0)
 ;   any other character included in the string is checked individually
"RTN","IBCEP8",262,0)
 N Z
"RTN","IBCEP8",263,0)
 I $D(VAL("A")) D
"RTN","IBCEP8",264,0)
 . N Z0
"RTN","IBCEP8",265,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1A S Z0(Z)=""
"RTN","IBCEP8",266,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",267,0)
 I $D(VAL("N")) D
"RTN","IBCEP8",268,0)
 . N Z0
"RTN","IBCEP8",269,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1N S Z0(Z)=""
"RTN","IBCEP8",270,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",271,0)
 I $D(VAL("P")) D
"RTN","IBCEP8",272,0)
 . N Z0
"RTN","IBCEP8",273,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1P S Z0(Z)=""
"RTN","IBCEP8",274,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",275,0)
 I $G(VAL)'="" S X=$TR(X,VAL,"")
"RTN","IBCEP8",276,0)
 Q (X="")
"RTN","IBCEP8",277,0)
 ;
"RTN","IBCEP8",278,0)
PS(IBXSAVE) ; Returns 1 if IBXSAVE("PSVC") indicates the svc was non-lab
"RTN","IBCEP8",279,0)
 ; 
"RTN","IBCEP8",280,0)
 Q $S($G(IBXSAVE("PSVC"))="":0,1:"13"[IBXSAVE("PSVC"))
"RTN","IBCEP8",281,0)
 ;
"RTN","IBCEP8",282,0)
 ; Pass in the Internal Entry number to File 355.93
"RTN","IBCEP8",283,0)
 ; Return the Primary ID and Qualifier (ID Type) from 355.9
"RTN","IBCEP8",284,0)
PRIMID(IEN35593) ; Return External Primary ID and ID Quailier
"RTN","IBCEP8",285,0)
 N INDXVAL,LIST,MSG,IDCODE
"RTN","IBCEP8",286,0)
 S INDXVAL=IEN35593_";IBA(355.93,"
"RTN","IBCEP8",287,0)
 N SCREEN S SCREEN="I $P(^(0),U,8)"
"RTN","IBCEP8",288,0)
 D FIND^DIC(355.9,,"@;.06EI;.07","Q",INDXVAL,,,SCREEN,,"LIST","MSG")
"RTN","IBCEP8",289,0)
 I '+$G(LIST("DILIST",0)) Q ""   ; No Primary ID
"RTN","IBCEP8",290,0)
 I +$G(LIST("DILIST",0))>1 Q "***ERROR***^***ERROR***"  ; Bad.  More than one. 
"RTN","IBCEP8",291,0)
 ; Found just one
"RTN","IBCEP8",292,0)
 S IDCODE=$$GET1^DIQ(355.97,LIST("DILIST","ID",1,.06,"I"),.03)
"RTN","IBCEP8",293,0)
 Q $G(LIST("DILIST","ID",1,.07))_U_IDCODE_" - "_$G(LIST("DILIST","ID",1,.06,"E"))
"RTN","IBCEP8",294,0)
 ;
"RTN","IBCEP8",295,0)
 ; Begin IB*2.0*436 - RBN
"RTN","IBCEP8",296,0)
 ;
"RTN","IBCEP8",297,0)
PRVFMT ;  called only by the INPUT TRANSFORM of #355.93,.01
"RTN","IBCEP8",298,0)
 ;      no other calls are allowed to this tag
"RTN","IBCEP8",299,0)
 ;
"RTN","IBCEP8",300,0)
 ; DSS/SCR 032812 PATCH 476 : Modified to support FB PAID TO IB background job
"RTN","IBCEP8",301,0)
 ;
"RTN","IBCEP8",302,0)
 ; DESCRIPTION  : Sets the NAME (.01) and the ENTITY TYPE (.02) fields
"RTN","IBCEP8",303,0)
 ;                of file 355.93.  Allows the user to change the ENTITY
"RTN","IBCEP8",304,0)
 ;                TYPE and forces reentry of the provider data so
"RTN","IBCEP8",305,0)
 ;                that it matches the ENTITY TYPE,if changes are being 
"RTN","IBCEP8",306,0)
 ;                made through IB menues.  Also formats the 
"RTN","IBCEP8",307,0)
 ;                NAME to correspond to the ENTITY TYPE. Disallows
"RTN","IBCEP8",308,0)
 ;                changing of the NAME field from ANYWHERE other than
"RTN","IBCEP8",309,0)
 ;                PROVIDER ID MAINTENANCE or IB EDIT BILLING INFO 
"RTN","IBCEP8",310,0)
 ;                (billing screens) or FB AUTO INTERFACE TO IB.  
"RTN","IBCEP8",311,0)
 ;                Adding new entries directly from FileMan is no longer permitted.
"RTN","IBCEP8",312,0)
 ; 
"RTN","IBCEP8",313,0)
 ; INPUTS       : Variables set by user selected option, screen actions
"RTN","IBCEP8",314,0)
 ;                and user input:
"RTN","IBCEP8",315,0)
 ;                X        - Provider name passed in by .01 field input
"RTN","IBCEP8",316,0)
 ;                           transform.
"RTN","IBCEP8",317,0)
 ;                XQY0     - IB option selected by the user OR "FB PAID TO IB"
"RTN","IBCEP8",318,0)
 ;                DA       - IEN of the record selected by the user or provided 
"RTN","IBCEP8",319,0)
 ;                            by the OPTION: FB PAID TO IB
"RTN","IBCEP8",320,0)
 ;                IBNVPMIF - ENTITY TYPE flag passed in from ListManager or provided 
"RTN","IBCEP8",321,0)
 ;                           by the OPTION: FB PAID TO IB
"RTN","IBCEP8",322,0)
 ;                           (F=Facility,I=Individual).
"RTN","IBCEP8",323,0)
 ;                IBSCNN   - IB variable indication of the actions/submenu:
"RTN","IBCEP8",324,0)
 ;                           #3, #4, and #7 found on bill screen #8  OR "" for FB PAID TO IB
"RTN","IBCEP8",325,0)
 ;
"RTN","IBCEP8",326,0)
 ; OUTPUTS      : IBFLPFLP - Indicate that the user is changing the
"RTN","IBCEP8",327,0)
 ;                           ENTITY TYPE (flip flop).  Possible states:
"RTN","IBCEP8",328,0)
 ;
"RTN","IBCEP8",329,0)
 ;                   IBFLPFLP = 0 - The type was not changed.
"RTN","IBCEP8",330,0)
 ;                            = 1 - The type changed to facility type.
"RTN","IBCEP8",331,0)
 ;                            = 2 - The type changed to individual type.
"RTN","IBCEP8",332,0)
 ;
"RTN","IBCEP8",333,0)
 ; 
"RTN","IBCEP8",334,0)
 ; GLOBALS      : ^IBA(355.93  - IB NON/OTHER VA BILLING PROVIDER file
"RTN","IBCEP8",335,0)
 ; 
"RTN","IBCEP8",336,0)
 ; 
"RTN","IBCEP8",337,0)
 ;
"RTN","IBCEP8",338,0)
 N OKRTN,IBNAM,IBCEPDA,IBTYPE
"RTN","IBCEP8",339,0)
 S (IBFLPFLP,OKRTN)=0,IBNAM=X,IBCEPDA=$G(DA)
"RTN","IBCEP8",340,0)
 ;
"RTN","IBCEP8",341,0)
 ; Prevent modification of NAME (#.01) in file #355.93 from anywhere
"RTN","IBCEP8",342,0)
 ; but the PROVIDER ID MAINTENANCE or IB EDIT BILLING INFO screens.
"RTN","IBCEP8",343,0)
 ;
"RTN","IBCEP8",344,0)
 I $P($G(XQY0),U,1)="IB EDIT BILLING INFO" D PRVINIT,PRVMANT S OKRTN=1
"RTN","IBCEP8",345,0)
 I $P($G(XQY0),U,1)="IBCE PROVIDER MAINT" D PRVINIT,PRVMANT S OKRTN=1
"RTN","IBCEP8",346,0)
 ;
"RTN","IBCEP8",347,0)
 I $P($G(XQY0),U,1)="IB AUTO INTERFACE FROM FB" D EPTRANS^IBCEP8C() S OKRTN=1  ;IB*2.0*476
"RTN","IBCEP8",348,0)
 ;
"RTN","IBCEP8",349,0)
 I 'OKRTN K X
"RTN","IBCEP8",350,0)
 Q
"RTN","IBCEP8",351,0)
 ;==========================
"RTN","IBCEP8",352,0)
PRVINIT ; initialization
"RTN","IBCEP8",353,0)
 ;
"RTN","IBCEP8",354,0)
 ; If arriving from the billing screens (IBSCNN is 3 or 4) the
"RTN","IBCEP8",355,0)
 ; variable DA is the ien of the bill (file #399) - need to find the ien
"RTN","IBCEP8",356,0)
 ; of 355.93 of the provider that the user entered/selected
"RTN","IBCEP8",357,0)
 ;
"RTN","IBCEP8",358,0)
 ; *** Begin IB*2.0*436 -RBN ***
"RTN","IBCEP8",359,0)
 ;I $G(IBSCNN)=3!($G(IBSCNN)=4) S IBCEPDA=$O(^IBA(355.93,"B",IBNAM,"")),IBTYPE=$S(IBSCNN=3:2,1:1)
"RTN","IBCEP8",360,0)
 I $G(IBDR20),'$G(IBCEP6FL) S IBCEPDA=$O(^IBA(355.93,"B",IBNAM,"")),IBTYPE=$S(IBDR20=84:1,IBDR20=104:1,1:2)
"RTN","IBCEP8",361,0)
 ; *** End IB*2.0*436 -RBN ***
"RTN","IBCEP8",362,0)
 ;
"RTN","IBCEP8",363,0)
 ; If arriving from the Provider ID Maintenance call (billing screen or
"RTN","IBCEP8",364,0)
 ; direct call to the option) & the user entered a brand new record, the
"RTN","IBCEP8",365,0)
 ; IBNVPMIF variable is set to indicate if the user was entering a
"RTN","IBCEP8",366,0)
 ; Non-VA facility ("F") or a Non-VA Provider (ie. individual) ("I")
"RTN","IBCEP8",367,0)
 I '$G(IBCEPDA)&$D(IBNVPMIF) S IBTYPE=$S(IBNVPMIF="F":1,1:2)
"RTN","IBCEP8",368,0)
 ;
"RTN","IBCEP8",369,0)
 ; If arriving from the Provider ID Maintenance call (billing screen or
"RTN","IBCEP8",370,0)
 ; direct call to the option) & the user selected an existing record
"RTN","IBCEP8",371,0)
 I $G(IBCEPDA) S IBTYPE=$P($G(^IBA(355.93,IBCEPDA,0)),U,2)
"RTN","IBCEP8",372,0)
 Q
"RTN","IBCEP8",373,0)
 ;----------------------------
"RTN","IBCEP8",374,0)
PRVMANT ; is the user flipping the provider type (for existing records only)
"RTN","IBCEP8",375,0)
 N TXT,TXT2,%
"RTN","IBCEP8",376,0)
 ;
"RTN","IBCEP8",377,0)
 ; IBTYPE - based on the current value of provider type (#355.93,.02)
"RTN","IBCEP8",378,0)
 ;          where "1" = Facility/Group  & "2" = Individual
"RTN","IBCEP8",379,0)
 ;
"RTN","IBCEP8",380,0)
 I '$G(IBTYPE) Q    ; one of the calls that triggers this routine needs
"RTN","IBCEP8",381,0)
 ;               ; this check when creating a new record in file #355.93
"RTN","IBCEP8",382,0)
 ;
"RTN","IBCEP8",383,0)
 ; If record is not brand new (IBCEPDA exists) - give the user the
"RTN","IBCEP8",384,0)
 ; opportunity to change the provider type field (#355.93,.02)
"RTN","IBCEP8",385,0)
 I IBTYPE,$G(IBCEPDA) D
"RTN","IBCEP8",386,0)
 . ;
"RTN","IBCEP8",387,0)
 . S %=2  ; Default answer is no
"RTN","IBCEP8",388,0)
 . ;
"RTN","IBCEP8",389,0)
 . I IBTYPE=1 S TXT="Facility",TXT2="Individual/Provider"
"RTN","IBCEP8",390,0)
 . I IBTYPE=2 S TXT="Individual/Provider",TXT2="Facility"
"RTN","IBCEP8",391,0)
 . ;
"RTN","IBCEP8",392,0)
 . D EN^DDIOL("This provider name exists and is a "_TXT_".","","!")
"RTN","IBCEP8",393,0)
 . D EN^DDIOL("Do you want to change this record to be a "_TXT2)
"RTN","IBCEP8",394,0)
 . ;
"RTN","IBCEP8",395,0)
 . D YN^DICN
"RTN","IBCEP8",396,0)
 . ;
"RTN","IBCEP8",397,0)
 . I %=1 D
"RTN","IBCEP8",398,0)
 . . ;
"RTN","IBCEP8",399,0)
 . . S IBTYPE=$S(IBTYPE=1:2,1:1),IBFLPFLP=IBTYPE
"RTN","IBCEP8",400,0)
 ;
"RTN","IBCEP8",401,0)
 I IBTYPE=2 D STDNAME^XLFNAME(.IBNAM,"GP") S X=IBNAM
"RTN","IBCEP8",402,0)
 I IBTYPE=1,('$$VALFAC^IBCEP8(IBNAM)) K X
"RTN","IBCEP8",403,0)
 Q
"RTN","IBCEP8",404,0)
 ;
"RTN","IBCEP8",405,0)
 ; DESCRIPTION: This routine inputs a provider name and formats it appropriately as an 
"RTN","IBCEP8",406,0)
 ;              individual or a facility name.
"RTN","IBCEP8",407,0)
 ; 
"RTN","IBCEP8",408,0)
 ; INPUTS     : name
"RTN","IBCEP8",409,0)
 ; 
"RTN","IBCEP8",410,0)
 ; OUTPUTS    : formatted name and provider type
"RTN","IBCEP8",411,0)
 ; 
"RTN","IBCEP8",412,0)
 ; VARIABLES  :
"RTN","IBCEP8",413,0)
 ; 
"RTN","IBCEP8",414,0)
 ; GLOBALS      : 
"RTN","IBCEP8",415,0)
 ; 
"RTN","IBCEP8",416,0)
 ; FUNCTIONS    : None
"RTN","IBCEP8",417,0)
 ; 
"RTN","IBCEP8",418,0)
 ; SUBROUTINES  : 
"RTN","IBCEP8",419,0)
 ; 
"RTN","IBCEP8",420,0)
 ; HISTORY    : Original version - 21 September 2010
"RTN","IBCEP8",421,0)
 ;
"RTN","IBCEP8",422,0)
SCREEN(IBNPRV) ;
"RTN","IBCEP8",423,0)
 N IBNPRVN,IBNAME,DR,DIR,DA,DIRUT,X,DTOUT,DUOUT
"RTN","IBCEP8",424,0)
 S IBNPRVN=""
"RTN","IBCEP8",425,0)
 D EN^DDIOL(" ")
"RTN","IBCEP8",426,0)
 D EN^DDIOL("If you do NOT want to edit the provider name or the provider type,","","!")
"RTN","IBCEP8",427,0)
 D EN^DDIOL("then press return at the following NAME prompt.  Otherwise,")
"RTN","IBCEP8",428,0)
 D EN^DDIOL("retype the name as you want it entered into the system.")
"RTN","IBCEP8",429,0)
 D EN^DDIOL(" ")
"RTN","IBCEP8",430,0)
 ;
"RTN","IBCEP8",431,0)
 ; Get the current provider name
"RTN","IBCEP8",432,0)
 ;
"RTN","IBCEP8",433,0)
 S IBNAME=$P(^IBA(355.93,IBNPRV,0),U,1)
"RTN","IBCEP8",434,0)
 ;
"RTN","IBCEP8",435,0)
 ; Get the user's input
"RTN","IBCEP8",436,0)
 ;
"RTN","IBCEP8",437,0)
INPUT ;
"RTN","IBCEP8",438,0)
 S DIR(0)="FOUr^3:30"
"RTN","IBCEP8",439,0)
 S DIR("A")="NAME: "_IBNAME_"//"
"RTN","IBCEP8",440,0)
 ;
"RTN","IBCEP8",441,0)
 S DIR("?")=" "
"RTN","IBCEP8",442,0)
 S DIR("?",1)="Press <ENTER> to accept the displayed provider name"
"RTN","IBCEP8",443,0)
 S DIR("?",2)="or enter the name as you would like it displayed."
"RTN","IBCEP8",444,0)
 ;
"RTN","IBCEP8",445,0)
 S DIR("??")="IB PROV ID MAINT^"
"RTN","IBCEP8",446,0)
 ;
"RTN","IBCEP8",447,0)
 D ^DIR
"RTN","IBCEP8",448,0)
 ;
"RTN","IBCEP8",449,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEP8",450,0)
 I X["?" G INPUT
"RTN","IBCEP8",451,0)
 S:'$D(DIRUT) IBNPRVN=X
"RTN","IBCEP8",452,0)
 ; The user entered something else
"RTN","IBCEP8",453,0)
 ;
"RTN","IBCEP8",454,0)
 S DIE="^IBA(355.93,"
"RTN","IBCEP8",455,0)
 S DA=IBNPRV
"RTN","IBCEP8",456,0)
 S DR=".01///"_IBNPRVN
"RTN","IBCEP8",457,0)
 D ^DIE
"RTN","IBCEP8",458,0)
 Q
"RTN","IBCEP8",459,0)
 ;
"RTN","IBCEP8",460,0)
 ; End IB*2.0*436 - RBN
"RTN","IBCEP8",461,0)
 ;
"RTN","IBCEP81")
0^41^B67515820^B65647537
"RTN","IBCEP81",1,0)
IBCEP81 ;ALB/KJH - NPI and Taxonomy Functions ;19 Apr 2008  5:17 PM
"RTN","IBCEP81",2,0)
 ;;2.0;INTEGRATED BILLING;**343,391,400,476,516**;21-MAR-94;Build 123
"RTN","IBCEP81",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEP81",4,0)
 ;
"RTN","IBCEP81",5,0)
 ; Must call at an entry point  
"RTN","IBCEP81",6,0)
 Q
"RTN","IBCEP81",7,0)
 ;
"RTN","IBCEP81",8,0)
 ; NPIREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",9,0)
 ;          if the NPI 'drop dead date' has passed.
"RTN","IBCEP81",10,0)
 ; Input
"RTN","IBCEP81",11,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",12,0)
 ; Output
"RTN","IBCEP81",13,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",14,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",15,0)
NPIREQ(IBDT) ; Check NPI drop dead date
"RTN","IBCEP81",16,0)
 N IBCHKDT
"RTN","IBCEP81",17,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",18,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",19,0)
 ;
"RTN","IBCEP81",20,0)
 ; TAXREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",21,0)
 ;          if the Taxonomy 'drop dead date' has passed.
"RTN","IBCEP81",22,0)
 ; Input
"RTN","IBCEP81",23,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",24,0)
 ; Output
"RTN","IBCEP81",25,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",26,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",27,0)
TAXREQ(IBDT) ; Check Taxonomy drop dead date
"RTN","IBCEP81",28,0)
 N IBCHKDT
"RTN","IBCEP81",29,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",30,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",31,0)
 ;
"RTN","IBCEP81",32,0)
 ; NPIGET - Extrinsic function to retrieve the NPI of a specified
"RTN","IBCEP81",33,0)
 ;          record from file 355.93.
"RTN","IBCEP81",34,0)
 ; Input
"RTN","IBCEP81",35,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",36,0)
 ; Output
"RTN","IBCEP81",37,0)
 ;    NPI of that record or "" if not yet defined
"RTN","IBCEP81",38,0)
NPIGET(IBIEN) ; Get NPI
"RTN","IBCEP81",39,0)
 I IBIEN="" Q ""
"RTN","IBCEP81",40,0)
 N NPI
"RTN","IBCEP81",41,0)
 S NPI=$$GET1^DIQ(355.93,IBIEN_",",41.01,"I")
"RTN","IBCEP81",42,0)
 Q NPI
"RTN","IBCEP81",43,0)
 ;
"RTN","IBCEP81",44,0)
 ; TAXGET - Extrinsic function to retrieve the Taxonomy of a specified
"RTN","IBCEP81",45,0)
 ;          record from file 355.93. (NOTE: Returns data for the 'active'
"RTN","IBCEP81",46,0)
 ;          primary record from the Taxonomy multiple or the earliest
"RTN","IBCEP81",47,0)
 ;          'active' secondary record if no primary is present.)
"RTN","IBCEP81",48,0)
 ;
"RTN","IBCEP81",49,0)
 ;          The 'optional' array parameter returns all Taxonomies in a
"RTN","IBCEP81",50,0)
 ;          formatted array so they can be displayed.
"RTN","IBCEP81",51,0)
 ; Input
"RTN","IBCEP81",52,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",53,0)
 ; Output
"RTN","IBCEP81",54,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",55,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",56,0)
 ;
"RTN","IBCEP81",57,0)
 ;    IBARR = IEN of the record from the main output
"RTN","IBCEP81",58,0)
 ;    IBARR(IEN) = 3 pieces for each Taxonomy record
"RTN","IBCEP81",59,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",60,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",61,0)
 ;    Piece 3 = Primary/Secondary (1/0)
"RTN","IBCEP81",62,0)
 ;    
"RTN","IBCEP81",63,0)
TAXGET(IBIEN,IBARR) ; Get Taxonomy
"RTN","IBCEP81",64,0)
 I IBIEN="" Q U
"RTN","IBCEP81",65,0)
 N TAX,IBPTR,IEN,IENS
"RTN","IBCEP81",66,0)
 S IEN=0,IBPTR=""
"RTN","IBCEP81",67,0)
 F  S IEN=$O(^IBA(355.93,IBIEN,"TAXONOMY",IEN)) Q:'IEN  D
"RTN","IBCEP81",68,0)
 . S IENS=IEN_","_IBIEN_","
"RTN","IBCEP81",69,0)
 . I $$GET1^DIQ(355.9342,IENS,.03,"E")'="ACTIVE" Q
"RTN","IBCEP81",70,0)
 . S IBARR(IEN)=U_$$GET1^DIQ(355.9342,IENS,.01,"I")_U_$$GET1^DIQ(355.9342,IENS,.02,"I")
"RTN","IBCEP81",71,0)
 . S $P(IBARR(IEN),U)=$$GET1^DIQ(8932.1,$P(IBARR(IEN),U,2),"X12 CODE")
"RTN","IBCEP81",72,0)
 . I $$GET1^DIQ(355.9342,IENS,.02,"E")="YES" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN Q
"RTN","IBCEP81",73,0)
 . I IBPTR="" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN
"RTN","IBCEP81",74,0)
 S TAX=$$GET1^DIQ(8932.1,IBPTR,"X12 CODE")
"RTN","IBCEP81",75,0)
 Q TAX_U_IBPTR
"RTN","IBCEP81",76,0)
 ;
"RTN","IBCEP81",77,0)
 ; TAXDEF - Extrinsic function to retrieve the Taxonomy for the Default
"RTN","IBCEP81",78,0)
 ;          Division from a record in file 399.
"RTN","IBCEP81",79,0)
 ; Input
"RTN","IBCEP81",80,0)
 ;    IBIEN399 - IEN of the record from file 399
"RTN","IBCEP81",81,0)
 ; Output
"RTN","IBCEP81",82,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",83,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",84,0)
TAXDEF(IBIEN399) ; Get Taxonomy for Default Division
"RTN","IBCEP81",85,0)
 I IBIEN399="" Q U
"RTN","IBCEP81",86,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,TAX
"RTN","IBCEP81",87,0)
 S IBDIV=$$GET1^DIQ(399,IBIEN399_",",.22,"I")
"RTN","IBCEP81",88,0)
 S IBEVDT=$$GET1^DIQ(399,IBIEN399_",",.03,"I")
"RTN","IBCEP81",89,0)
 S IBORG=$P($$SITE^VASITE(IBEVDT,IBDIV),U)
"RTN","IBCEP81",90,0)
 Q $$TAXORG^XUSTAX(IBORG)
"RTN","IBCEP81",91,0)
 ;
"RTN","IBCEP81",92,0)
 ; NPIUSED - Extrinsic function to determine whether a given NPI is already being used in files 200, 4, or 355.93.
"RTN","IBCEP81",93,0)
 ;
"RTN","IBCEP81",94,0)
 ; Input
"RTN","IBCEP81",95,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",96,0)
 ;    IBOLDNPI - NPI that is being replaced or deleted
"RTN","IBCEP81",97,0)
 ;    IBIEN - entry number for file 355.93 of entry being edited
"RTN","IBCEP81",98,0)
 ;    IBCHECK - Is this a new NPI entry or existing
"RTN","IBCEP81",99,0)
 ;    IBKEY - They security key XUSNPIMTL
"RTN","IBCEP81",100,0)
 ; Output
"RTN","IBCEP81",101,0)
 ;    1 = NPI is already being used.
"RTN","IBCEP81",102,0)
 ;    0 = NPI is not currently being used.
"RTN","IBCEP81",103,0)
 ;
"RTN","IBCEP81",104,0)
NPIUSED(IBNPI,IBOLDNPI,IBIEN,IBCHECK,IBKEY) ; Check whether NPI is already used within files 200, 4, or 355.93.
"RTN","IBCEP81",105,0)
 N IBNOTIFY,IBVA200,DUP,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCEP81",106,0)
 I $G(IBFBFLAG)=1 Q ""  ;IB*2.0*476 Consider updating RULES^IBCEP8C for FB PAID TO IB interface if changes are made
"RTN","IBCEP81",107,0)
 S (IBNOTIFY,IBVA200,DUP)=""
"RTN","IBCEP81",108,0)
 S IBNOTIFY=$S(IBCHECK=2:1,1:$$RULES(IBNPI,IBIEN,IBOLDNPI))
"RTN","IBCEP81",109,0)
 I IBNOTIFY=0!(IBNOTIFY="") Q ""
"RTN","IBCEP81",110,0)
 ;Associating NPI to an entry in NEW PERSON file
"RTN","IBCEP81",111,0)
 ;IBNOTIFY of 14 = Replacing an NPI from NEW PERSON file with an NPI from NEW PERSON file
"RTN","IBCEP81",112,0)
 I IBNOTIFY=1!(IBNOTIFY=14) D:$G(IBOLDNPI)'=$G(IBNPI)  Q $S($G(Y)=1:0,$G(IBCHECK)=2:0,1:1)
"RTN","IBCEP81",113,0)
 . D EN^DDIOL("The NPI of "_IBNPI_" is also associated with the INDIVIDUAL provider","","!!")
"RTN","IBCEP81",114,0)
 . I $G(IBVA200)="" S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",115,0)
 . D EN^DDIOL($$GET1^DIQ(200,$P(IBVA200,U,2),.01))
"RTN","IBCEP81",116,0)
 . D EN^DDIOL(" in the NEW PERSON file.  You are trying to associate","","?0")
"RTN","IBCEP81",117,0)
 . D EN^DDIOL("it with "_$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")_" provider")
"RTN","IBCEP81",118,0)
 . D EN^DDIOL(" in the IB NON/OTHER VA BILLING PROVIDER file.","","?0"),EN^DDIOL("")
"RTN","IBCEP81",119,0)
 . S DIR(0)="Y",DIR("A")="Do you still want to add this NPI to provider "_$$GET1^DIQ(355.93,IBIEN,.01),DIR("B")="NO"
"RTN","IBCEP81",120,0)
 . S DIR("?")="Answer YES if you wish to associate the NPI from the IB NON/OTHER VA PROVIDER file with the entry in the NEW PERSON file."
"RTN","IBCEP81",121,0)
 . D ^DIR,EN^DDIOL("") Q
"RTN","IBCEP81",122,0)
 ; NPI is now or was in the past in use in File 4
"RTN","IBCEP81",123,0)
 I IBNOTIFY=9 D EN^DDIOL("The NPI of "_IBNPI_" is now, or was in the past, associated with "_$$GET1^DIQ(4,$O(^DIC(4,"ANPI",IBNPI,"")),.01),"","!!"),EN^DDIOL(" in the INSTITUTION file.") Q 1
"RTN","IBCEP81",124,0)
 ; NPI is now or was in the past in use in 355.93
"RTN","IBCEP81",125,0)
 I IBNOTIFY=11 D EN^DDIOL("The NPI of "_IBNPI_" is now, or was in the past, associated with "_$$GET1^DIQ(355.93,$$DUP(IBNPI),.01),"","!!"),EN^DDIOL(" in the IB NON/OTHER VA BILLING PROVIDER file.") Q 1
"RTN","IBCEP81",126,0)
 ;Inactive NPI in 355.93
"RTN","IBCEP81",127,0)
 I IBNOTIFY=12 D EN^DDIOL("The NPI of "_IBNPI_" is already associated with the provider "_$$GET1^DIQ(355.93,$$DUP(IBNPI),.01)_" as","","!!") D  Q 1
"RTN","IBCEP81",128,0)
 . D EN^DDIOL("INACTIVE in the IB NON/OTHER VA BILLING PROVIDER file.")
"RTN","IBCEP81",129,0)
 . D EN^DDIOL("You are updating "_$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:""),"","!!")
"RTN","IBCEP81",130,0)
 . D EN^DDIOL("in the IB NON/OTHER VA BILLING PROVIDER file.")
"RTN","IBCEP81",131,0)
 ;Inactive NPI in NEW PERSON file
"RTN","IBCEP81",132,0)
 I IBNOTIFY=13 D  Q 1
"RTN","IBCEP81",133,0)
 .D EN^DDIOL("The NPI of "_IBNPI_" is also associated with the INDIVIDUAL provider","","!!"),EN^DDIOL($$GET1^DIQ(200,$P(IBVA200,U,2),.01)_" in the NEW PERSON file."),EN^DDIOL("The NPI is INACTIVE and may not be used."),EN^DDIOL("")
"RTN","IBCEP81",134,0)
 Q ""
"RTN","IBCEP81",135,0)
 ;
"RTN","IBCEP81",136,0)
 ; DUP - Extrinsic function to determine whether a given NPI is already being used in file# 355.93.
"RTN","IBCEP81",137,0)
 ;
"RTN","IBCEP81",138,0)
 ; Input
"RTN","IBCEP81",139,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",140,0)
 ; Output
"RTN","IBCEP81",141,0)
 ;    NULL - NPI is not currently being used.
"RTN","IBCEP81",142,0)
 ;    Otherwise, the IEN of the entry in file# 355.93 associated with that NPI.
"RTN","IBCEP81",143,0)
 ;
"RTN","IBCEP81",144,0)
DUP(IBNPI) ; Check whether this is a duplicate NPI within file# 355.93
"RTN","IBCEP81",145,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",146,0)
 Q $O(^IBA(355.93,"NPIHISTORY",IBNPI,""))
"RTN","IBCEP81",147,0)
 ;
"RTN","IBCEP81",148,0)
 ; DISPTAX - Function to display extra Taxonomy info in the input templates in screens 6, 7, and 8 in IB EDIT BILLING INFO
"RTN","IBCEP81",149,0)
 ; 
"RTN","IBCEP81",150,0)
 ; Input
"RTN","IBCEP81",151,0)
 ;    IBIEN - IEN of the entry in file 8932.1 to be displayed
"RTN","IBCEP81",152,0)
 ;    IBTXT - (optional) extra text to be displayed before the entry
"RTN","IBCEP81",153,0)
 ;            (i.e. "Billing Provider" or "Non-VA Facility")
"RTN","IBCEP81",154,0)
 ;
"RTN","IBCEP81",155,0)
DISPTAX(IBIEN,IBTXT) ; Display extra Taxonomy info (when available)
"RTN","IBCEP81",156,0)
 N IBX
"RTN","IBCEP81",157,0)
 I $G(IBIEN)="" Q
"RTN","IBCEP81",158,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,1) I IBX]"" W !,"    ",$G(IBTXT)," Classification: ",IBX
"RTN","IBCEP81",159,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,2) I IBX]"" W !,"    ",$G(IBTXT)," Area of Specialization: ",IBX
"RTN","IBCEP81",160,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,8) I IBX]"" W !,"    ",$G(IBTXT)," Specialty Code: ",IBX
"RTN","IBCEP81",161,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,6) W !,"    ",$G(IBTXT)," Taxonomy X12 Code: ",IBX
"RTN","IBCEP81",162,0)
 Q
"RTN","IBCEP81",163,0)
RULES(IBNPI,IBIEN,IBOLDNPI) ;Verify that the NPI meets all rules for usage
"RTN","IBCEP81",164,0)
 N IBIEN1,IBIEN2,DUP,SPIBIEN
"RTN","IBCEP81",165,0)
 I $G(IBOLDNPI)>0,IBNPI=IBOLDNPI,$D(^VA(200,"ANPI",IBOLDNPI)) Q 1
"RTN","IBCEP81",166,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",167,0)
 S DUP=$$DUP(IBNPI)
"RTN","IBCEP81",168,0)
 ;Duplicate in 355.93
"RTN","IBCEP81",169,0)
 ; If facility is sole proprietor, NPI is the one pointed to by the sole proprietor, then not a dup - IB*2*516
"RTN","IBCEP81",170,0)
 I $P(^IBA(355.93,IBIEN,0),U,17)="Y",$P(^IBA(355.93,IBIEN,0),U,18) S SPIBIEN=$P(^IBA(355.93,IBIEN,0),U,18)
"RTN","IBCEP81",171,0)
 I DUP'="",DUP'=IBIEN,DUP'=$G(SPIBIEN) Q 11
"RTN","IBCEP81",172,0)
 ;Replacing an NPI that is associated to NEW PERSON file with another NPI that is associated with the NEW PERSON file
"RTN","IBCEP81",173,0)
 I $G(IBOLDNPI)>0,$D(^VA(200,"ANPI",IBOLDNPI)),$D(^VA(200,"ANPI",IBNPI)) Q 14
"RTN","IBCEP81",174,0)
 ;Already an inactive NPI
"RTN","IBCEP81",175,0)
 S IBIEN2=$O(^IBA(355.93,"NPIHISTORY",IBNPI,"")) D:$G(IBIEN2)'=""
"RTN","IBCEP81",176,0)
 . S IBIEN1=$O(^IBA(355.93,IBIEN2,"NPISTATUS","C",IBNPI,""),-1)
"RTN","IBCEP81",177,0)
 I $G(IBIEN1)'="",$D(^IBA(355.93,IBIEN2,"NPISTATUS","NPISTATUS",0,IBIEN1)) Q 12
"RTN","IBCEP81",178,0)
 ;Check for existence in New Person 
"RTN","IBCEP81",179,0)
 ;file (#200) and/or Institution file (#4)
"RTN","IBCEP81",180,0)
 S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",181,0)
 I $E($P(IBVA200,U,4),1,8)="Inactive" Q 13
"RTN","IBCEP81",182,0)
 I $P(IBVA200,U)="Individual_ID",$P(IBVA200,U,4)["Active" Q 1
"RTN","IBCEP81",183,0)
 I $P(IBVA200,U)="Organization_ID",$P(IBVA200,U,4)["Active" Q 9
"RTN","IBCEP81",184,0)
 I $D(^DIC(4,"ANPI",IBNPI)) Q 9
"RTN","IBCEP81",185,0)
 Q 0
"RTN","IBCEP81",186,0)
 ;
"RTN","IBCEP81",187,0)
PRENPI(IBIEN) ;Pre-NPI edit messages
"RTN","IBCEP81",188,0)
 N IBNPI,IBVA200
"RTN","IBCEP81",189,0)
 Q:$G(IBIEN)=""
"RTN","IBCEP81",190,0)
 S IBNPI=$P($G(^IBA(355.93,IBIEN,0)),U,14)
"RTN","IBCEP81",191,0)
 Q:$G(IBNPI)=""
"RTN","IBCEP81",192,0)
 S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",193,0)
 ;NPI that exists in 355.93 also is used in 200
"RTN","IBCEP81",194,0)
 I $P(IBVA200,U,1)="Individual_ID",$P(IBVA200,U,4)["Active" D
"RTN","IBCEP81",195,0)
 . W !!,"The NPI of ",IBNPI," is also associated with the INDIVIDUAL provider ",!,$$GET1^DIQ(200,$P(IBVA200,U,2),.01)," in the NEW PERSON file."
"RTN","IBCEP81",196,0)
 . W !!,"You are updating ",$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")," provider in the"
"RTN","IBCEP81",197,0)
 . W !,"IB NON/OTHER VA BILLING PROVIDER file.",!
"RTN","IBCEP81",198,0)
 ;The NPI used in 355.93 is inactive in 200
"RTN","IBCEP81",199,0)
 I $P(IBVA200,U,1)="Individual_ID",$P(IBVA200,U,4)["Inactive" D
"RTN","IBCEP81",200,0)
 . W !!,"The NPI of ",IBNPI," is also associated with the INDIVIDUAL provider ",!,$$GET1^DIQ(200,$P(IBVA200,U,2),.01)," as INACTIVE in the NEW PERSON file."
"RTN","IBCEP81",201,0)
 . W !!,"You are updating ",$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")," provider in the"
"RTN","IBCEP81",202,0)
 . W !,"IB NON/OTHER VA BILLING PROVIDER file.",!
"RTN","IBCEP81",203,0)
 Q
"RTN","IBCEP82")
0^132^B72564022^B73798180
"RTN","IBCEP82",1,0)
IBCEP82 ;ALB/CLT - Special cross references and data entry for fields in file 355.93 ;18 Apr 2008  3:46 PM
"RTN","IBCEP82",2,0)
 ;;2.0;INTEGRATED BILLING;**343,374,377,391,516**;21-MAR-94;Build 123
"RTN","IBCEP82",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEP82",4,0)
 ;
"RTN","IBCEP82",5,0)
 ; Call at tags only
"RTN","IBCEP82",6,0)
 Q
"RTN","IBCEP82",7,0)
 ;This routine will ask for the NPI, check for duplicate entries, and check for proper
"RTN","IBCEP82",8,0)
 ;format using the double-add-double formula.  If the NPI is being deleted it will ask
"RTN","IBCEP82",9,0)
 ;the user why it is being deleted.
"RTN","IBCEP82",10,0)
 ;If it is being deleted because of an erroneous entry it will be completely deleted.
"RTN","IBCEP82",11,0)
 ;If it is a valid NPI being deleted because of possible inappropriate usage it will be
"RTN","IBCEP82",12,0)
 ;maintained in the history cross reference to preclude anyone from using this NPI again.
"RTN","IBCEP82",13,0)
 ;
"RTN","IBCEP82",14,0)
EN(IBNPRV) ;Routine primary entry point
"RTN","IBCEP82",15,0)
 N DTOUT,DUOUT,DA,DIR,DIE,DIC,DR,X,Y,IBKEY
"RTN","IBCEP82",16,0)
 N IBIEN,IBNPI,IBCHECK,IBOLDNPI,IBRBNPI,IBRB
"RTN","IBCEP82",17,0)
 S IBOLDNPI="",IBNPI="",IBKEY="XUSNPIMTL"
"RTN","IBCEP82",18,0)
EN1 ;
"RTN","IBCEP82",19,0)
 S (DA,IBIEN)=IBNPRV
"RTN","IBCEP82",20,0)
 K DIR
"RTN","IBCEP82",21,0)
 S DIR(0)="FO^10:10",DIR("A")="NPI",DIR("?")="Enter a 10 digit National Provider Identifier"
"RTN","IBCEP82",22,0)
 I $G(DA) S:$P($G(^IBA(355.93,DA,0)),U,14)'="" (DIR("B"),IBOLDNPI,IBNPI)=$P($G(^IBA(355.93,DA,0)),U,14)
"RTN","IBCEP82",23,0)
 ;Sole Proprietor IB*2*516
"RTN","IBCEP82",24,0)
 I $P($G(^IBA(355.93,DA,0)),U,17)="Y" D
"RTN","IBCEP82",25,0)
 . N IBA35593
"RTN","IBCEP82",26,0)
 . S IBA35593=$P($G(^IBA(355.93,DA,0)),U,18)
"RTN","IBCEP82",27,0)
 . I IBA35593,$P($G(^IBA(355.93,IBA35593,0)),U,14)]"" S DIR("B")=$P(^(0),U,14)
"RTN","IBCEP82",28,0)
 D ^DIR S IBCHECK=$S(Y=IBOLDNPI:2,1:0)
"RTN","IBCEP82",29,0)
 I X="^" W *7,!,"   EXIT NOT ALLOWED ??" G EN1
"RTN","IBCEP82",30,0)
 I $E(X)="^" W *7,!,"   JUMPING NOT ALLOWED ??" G EN1
"RTN","IBCEP82",31,0)
 I X="@" G:IBOLDNPI'="" DEL W *7,"??" G EN1
"RTN","IBCEP82",32,0)
 I $G(DUOUT)!$G(DTOUT) G XIT
"RTN","IBCEP82",33,0)
 I $G(IBOLDNPI)="",$G(X)="" G XIT
"RTN","IBCEP82",34,0)
 S IBNPI=$S(X="":$G(IBOLDNPI),1:X)
"RTN","IBCEP82",35,0)
 I '$$PROC(IBNPI,IBOLDNPI,IBIEN) G EN1
"RTN","IBCEP82",36,0)
 G XIT
"RTN","IBCEP82",37,0)
 ;
"RTN","IBCEP82",38,0)
EN2(IBNPRV,INDENT) ; entry point from input templates IB SCREEN82 and IB SCREEN8H
"RTN","IBCEP82",39,0)
 N DTOUT,DUOUT,DA,DIR,DIE,DIC,DR,X,Y,IBKEY
"RTN","IBCEP82",40,0)
 N IBIEN,IBNPI,IBCHECK,IBOLDNPI,IBRBNPI,IBRB,SPACES
"RTN","IBCEP82",41,0)
 S IBNPI="",IBKEY="XUSNPIMTL",IBOLDNPI="",SPACES="          "
"RTN","IBCEP82",42,0)
EN21 ;
"RTN","IBCEP82",43,0)
 S (DA,IBIEN)=IBNPRV
"RTN","IBCEP82",44,0)
 K DIR
"RTN","IBCEP82",45,0)
 S DIR(0)="FO^10:10",DIR("A")=$E(SPACES,1,INDENT)_"NPI",DIR("?")=$E(SPACES,1,INDENT)_"Enter a 10 digit National Provider Identifier"
"RTN","IBCEP82",46,0)
 I $G(DA) S:$P($G(^IBA(355.93,DA,0)),U,14)'="" (DIR("B"),IBOLDNPI,IBNPI)=$P($G(^IBA(355.93,DA,0)),U,14)
"RTN","IBCEP82",47,0)
 D ^DIR S IBCHECK=$S(Y=IBOLDNPI:2,1:0)
"RTN","IBCEP82",48,0)
 I X="@" G:IBOLDNPI'="" DEL W *7,"??" G EN21
"RTN","IBCEP82",49,0)
 I $G(DUOUT)!$G(DTOUT) G XIT
"RTN","IBCEP82",50,0)
 I $G(IBOLDNPI)="",$G(X)="" G XIT
"RTN","IBCEP82",51,0)
 S IBNPI=$S(X="":$G(IBOLDNPI),1:X)
"RTN","IBCEP82",52,0)
 I '$$PROC(IBNPI,IBOLDNPI,IBIEN) G EN21
"RTN","IBCEP82",53,0)
 G XIT
"RTN","IBCEP82",54,0)
 ;
"RTN","IBCEP82",55,0)
PROC(IBNPI,IBOLDNPI,IBIEN) ; process new NPI
"RTN","IBCEP82",56,0)
 I '$$CHKDGT^XUSNPI(IBNPI) W !,*7,$E($G(SPACES),1,+$G(INDENT))_"Not a valid NPI.  Please try again.",! Q 0
"RTN","IBCEP82",57,0)
 I $$NPIUSED^IBCEP81(IBNPI,IBOLDNPI,IBIEN,IBCHECK,IBKEY)=1 Q 0
"RTN","IBCEP82",58,0)
 S IBCHECK=1
"RTN","IBCEP82",59,0)
 I IBOLDNPI="" D ACTI
"RTN","IBCEP82",60,0)
 I IBOLDNPI'="" D:IBNPI'=IBOLDNPI INACT
"RTN","IBCEP82",61,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBNPI,^IBA(355.93,"NPI",IBNPI,IBIEN)="",^IBA(355.93,"NPIHISTORY",IBNPI,IBIEN)=""
"RTN","IBCEP82",62,0)
 Q 1
"RTN","IBCEP82",63,0)
 ;
"RTN","IBCEP82",64,0)
ACTI ;CREATE AN ACTIVATED ENTRY IN MULTIPLE NPISTATUS FIELD
"RTN","IBCEP82",65,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",66,0)
 S DIC("DR")=".02////^S X=1;.03////^S X=IBNPI;.04////^S X=DUZ"
"RTN","IBCEP82",67,0)
 D FILE^DICN
"RTN","IBCEP82",68,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBNPI
"RTN","IBCEP82",69,0)
 Q
"RTN","IBCEP82",70,0)
 ;
"RTN","IBCEP82",71,0)
DEL ;NPI HAS BEEN DELETED
"RTN","IBCEP82",72,0)
 ;If the user deletes the NPI this subroutine will determine why it was deleted and, if it was because it was found
"RTN","IBCEP82",73,0)
 ;in a false identity situation, will mark it in history to never be used again.
"RTN","IBCEP82",74,0)
 S IBNPI=$G(DIR("B"))
"RTN","IBCEP82",75,0)
 K DIR
"RTN","IBCEP82",76,0)
 S DIR(0)="Y"
"RTN","IBCEP82",77,0)
 S DIR("A")="Are you sure you wish to delete this NPI"
"RTN","IBCEP82",78,0)
 S DIR("?")="You have indicated you wish to delete the NPI.  This is a second chance check."
"RTN","IBCEP82",79,0)
 D ^DIR
"RTN","IBCEP82",80,0)
 G:Y(0)="NO" XIT
"RTN","IBCEP82",81,0)
 ;S DIR(0)="S^E:ERROR;V:VALID",DIR("A")="Was this a Valid NPI or an NPI entered in Error"
"RTN","IBCEP82",82,0)
 ;S DIR("?",1)="An example of an NPI entered in error is if the entry person transposed numbers,"
"RTN","IBCEP82",83,0)
 ;S DIR("?",2)="or if the NPI for one provider is accidentally assigned to a different provider."
"RTN","IBCEP82",84,0)
 ;S DIR("?")="Enter an 'E' for Error or a 'V' for Valid."
"RTN","IBCEP82",85,0)
 ;D ^DIR
"RTN","IBCEP82",86,0)
 D COMP W !,"This NPI will be designated as Entered in Error.",!
"RTN","IBCEP82",87,0)
 ;I Y="V" S IBCHECK=2 D INACT W !,"The NPI is now inactive.",!
"RTN","IBCEP82",88,0)
 ;Q:$D(DTOUT)!($D(DUOUT))
"RTN","IBCEP82",89,0)
 S IBOLDNPI=IBNPI D WARND(IBIEN,IBOLDNPI,IBKEY)
"RTN","IBCEP82",90,0)
 Q
"RTN","IBCEP82",91,0)
 ;
"RTN","IBCEP82",92,0)
COMP ;COMPLETELY DELETE THE NPI
"RTN","IBCEP82",93,0)
 ;This subroutine will delete the NPI from the file 355.93.
"RTN","IBCEP82",94,0)
 S OIEN=$O(^IBA(355.93,IBIEN,"NPISTATUS","C",IBOLDNPI,"A"),-1)
"RTN","IBCEP82",95,0)
 D DELNPI(IBIEN,OIEN)
"RTN","IBCEP82",96,0)
 K ^IBA(355.93,"NPI",IBOLDNPI,DA),^IBA(355.93,"NPIHISTORY",IBOLDNPI,DA)
"RTN","IBCEP82",97,0)
 S IBRB=0
"RTN","IBCEP82",98,0)
 D  ; Find the most recent status '0' (inactive) NPI entry in the list.
"RTN","IBCEP82",99,0)
 . N IBRBLST,IBRBTMP
"RTN","IBCEP82",100,0)
 . ; Don't want to roll back to the same number you are deleting.
"RTN","IBCEP82",101,0)
 . S IBRBLST(IBOLDNPI)=""
"RTN","IBCEP82",102,0)
 . S IBRBTMP="A"
"RTN","IBCEP82",103,0)
 . ; Go through each entry in reverse order
"RTN","IBCEP82",104,0)
 . F  S IBRBTMP=$O(^IBA(355.93,IBIEN,"NPISTATUS",IBRBTMP),-1) Q:'IBRBTMP  D  Q:IBRB'=0
"RTN","IBCEP82",105,0)
 .. S IBRBLST=^IBA(355.93,IBIEN,"NPISTATUS",IBRBTMP,0)
"RTN","IBCEP82",106,0)
 .. ; If this is an 'active' entry then ignore it.
"RTN","IBCEP82",107,0)
 .. I $P(IBRBLST,U,2)=1 Q
"RTN","IBCEP82",108,0)
 .. ; If this entry does not have an NPI then ignore it.
"RTN","IBCEP82",109,0)
 .. I $P(IBRBLST,U,3)="" Q
"RTN","IBCEP82",110,0)
 .. ;If this is an inactive entry then report it.
"RTN","IBCEP82",111,0)
 .. I $P(IBRBLST,U,2)=0 S IBRB=IBRBTMP Q
"RTN","IBCEP82",112,0)
 .. Q
"RTN","IBCEP82",113,0)
 . Q
"RTN","IBCEP82",114,0)
 I IBRB>0 D ROLLBACK
"RTN","IBCEP82",115,0)
 Q
"RTN","IBCEP82",116,0)
 ;
"RTN","IBCEP82",117,0)
DELNPI(IEN,OIEN) ;DELETE-INVALID removes NPI from file.
"RTN","IBCEP82",118,0)
 NEW DIE,DIK,DIC,DA,DR,D,D0,DI,DIC,DQ,X
"RTN","IBCEP82",119,0)
 NEW DP,DM,DK,DL,DIEL
"RTN","IBCEP82",120,0)
 S DIE="^IBA(355.93,",DA=IEN,DR="41.01////@"
"RTN","IBCEP82",121,0)
 D ^DIE
"RTN","IBCEP82",122,0)
 S DA(1)=IEN,DIK="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DA=OIEN
"RTN","IBCEP82",123,0)
 D ^DIK
"RTN","IBCEP82",124,0)
 Q
"RTN","IBCEP82",125,0)
 ;
"RTN","IBCEP82",126,0)
INACT ;INACTIVATE AN ENTRY
"RTN","IBCEP82",127,0)
 ;This subroutine makes two entries in the NPI multiple field:
"RTN","IBCEP82",128,0)
 ;one for the deactivation of the old NPI and the second
"RTN","IBCEP82",129,0)
 ;for the activation of a new NPI.
"RTN","IBCEP82",130,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",131,0)
 S DIC("DR")=".02////^S X=0;.03////^S X=IBOLDNPI;.04////^S X=DUZ"
"RTN","IBCEP82",132,0)
 D FILE^DICN
"RTN","IBCEP82",133,0)
 S ^IBA(355.93,"NPIHISTORY",IBOLDNPI,DA(1))=""
"RTN","IBCEP82",134,0)
 K ^IBA(355.93,"NPI",IBOLDNPI,DA(1))
"RTN","IBCEP82",135,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=""
"RTN","IBCEP82",136,0)
 I $G(IBCHECK)<2 D
"RTN","IBCEP82",137,0)
 .D ACTI
"RTN","IBCEP82",138,0)
 .S ^IBA(355.93,"NPIHISTORY",IBNPI,DA(1))=""
"RTN","IBCEP82",139,0)
 .D WARNR(IBIEN,IBOLDNPI,IBKEY)
"RTN","IBCEP82",140,0)
 Q
"RTN","IBCEP82",141,0)
 ;
"RTN","IBCEP82",142,0)
ROLLBACK ;Rollback or delete NPI
"RTN","IBCEP82",143,0)
 S IBRBNPI=$P(^IBA(355.93,IBIEN,"NPISTATUS",IBRB,0),U,3)
"RTN","IBCEP82",144,0)
 NEW DIE,DIK,DIC,DA,DR,D,D0,DI,DIC,DQ,X
"RTN","IBCEP82",145,0)
 NEW DP,DM,DK,DL,DIEL
"RTN","IBCEP82",146,0)
 S DA(1)=IBIEN,DIK="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DA=IBRB
"RTN","IBCEP82",147,0)
 D ^DIK
"RTN","IBCEP82",148,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBRBNPI,^IBA(355.93,"NPI",IBRBNPI,IBIEN)=""
"RTN","IBCEP82",149,0)
 Q
"RTN","IBCEP82",150,0)
 ;
"RTN","IBCEP82",151,0)
XIT ;CLEAN AND EXIT
"RTN","IBCEP82",152,0)
 Q
"RTN","IBCEP82",153,0)
 ;
"RTN","IBCEP82",154,0)
XR ;Set the primary taxonomy code cross reference for field 42
"RTN","IBCEP82",155,0)
 N ATAX S ATAX=""
"RTN","IBCEP82",156,0)
 I $D(^IBA(355.93,DA(1),"TAXONOMY","D")) D:X=1
"RTN","IBCEP82",157,0)
 . F  S ATAX=$O(^IBA(355.93,DA(1),"TAXONOMY","D",1,ATAX)) Q:ATAX=""  D
"RTN","IBCEP82",158,0)
 .. K ^IBA(355.93,DA(1),"TAXONOMY","D",1,ATAX)
"RTN","IBCEP82",159,0)
 .. I ATAX'=DA S $P(^IBA(355.93,DA(1),"TAXONOMY",ATAX,0),U,2)=0,^IBA(355.93,DA(1),"TAXONOMY","D",0,ATAX)=""
"RTN","IBCEP82",160,0)
 S ^IBA(355.93,DA(1),"TAXONOMY","D",X,DA)=""
"RTN","IBCEP82",161,0)
 Q
"RTN","IBCEP82",162,0)
 ;
"RTN","IBCEP82",163,0)
KXR ;Kill primary taxonomy code cross reference for field 42
"RTN","IBCEP82",164,0)
 N K
"RTN","IBCEP82",165,0)
 F K=0,1 K ^IBA(355.93,DA(1),"TAXONOMY","D",K,DA)
"RTN","IBCEP82",166,0)
 Q
"RTN","IBCEP82",167,0)
 ;
"RTN","IBCEP82",168,0)
WARNR(IBIEN,IBOLDNPI,IBKEY) ;Warn user that the old NPI that was replaced is currently used by an entry in the New Person file (#200)
"RTN","IBCEP82",169,0)
 N IBIEN200
"RTN","IBCEP82",170,0)
 Q:$G(IBOLDNPI)=""
"RTN","IBCEP82",171,0)
 S IBIEN200=$O(^VA(200,"ANPI",IBOLDNPI,""))
"RTN","IBCEP82",172,0)
 Q:IBIEN200=""
"RTN","IBCEP82",173,0)
 W !!,"WARNING: NPI ",IBOLDNPI," is also associated with Provider ",$$GET1^DIQ(200,IBIEN200,.01),".",!
"RTN","IBCEP82",174,0)
 I $O(^XUSEC(IBKEY,""))="" W !!,"There are no holders of the ",IBKEY," security key on the VistA system.  Contact your IRM department for further direction." Q
"RTN","IBCEP82",175,0)
 W !,"A MailMan message has been sent to holders of the "_""""_IBKEY_""""_" security key."
"RTN","IBCEP82",176,0)
 D MAILR(IBIEN,IBKEY,IBIEN200,IBOLDNPI)
"RTN","IBCEP82",177,0)
 Q
"RTN","IBCEP82",178,0)
 ;
"RTN","IBCEP82",179,0)
WARND(IBIEN,IBOLDNPI,IBKEY) ;Warn user that the old NPI that was deleted is currently used by an entry in the New Person file (#200)
"RTN","IBCEP82",180,0)
 N IBIEN200
"RTN","IBCEP82",181,0)
 Q:$G(IBOLDNPI)=""
"RTN","IBCEP82",182,0)
 S IBIEN200=$O(^VA(200,"ANPI",IBOLDNPI,""))
"RTN","IBCEP82",183,0)
 Q:IBIEN200=""
"RTN","IBCEP82",184,0)
 W !!,"WARNING: NPI ",IBOLDNPI," is also associated with VA Provider ",$$GET1^DIQ(200,IBIEN200,.01),".",!
"RTN","IBCEP82",185,0)
 I $O(^XUSEC(IBKEY,""))="" W !!,"There are no holders of the ",IBKEY," security key on the VistA system.  Contact your IRM department for further direction." Q
"RTN","IBCEP82",186,0)
 W !,"A MailMan message has been sent to holders of the "_""""_IBKEY_""""_" security key."
"RTN","IBCEP82",187,0)
 D MAILD(IBIEN,IBKEY,IBIEN200,IBOLDNPI)
"RTN","IBCEP82",188,0)
 Q
"RTN","IBCEP82",189,0)
 ;
"RTN","IBCEP82",190,0)
MAILR(IBIEN,IBKEY,IBIEN200,IBOLDNPI) ;Send mailman message for replacement of NPI
"RTN","IBCEP82",191,0)
 ;This subroutine is supported by IA# 10070
"RTN","IBCEP82",192,0)
 ;Lookups in NEW PERSON file (#200) are supported by IA#10076
"RTN","IBCEP82",193,0)
 N IBIEN2,XMDUZ,XMSUB,XMTEXT,XMY,IBMSG,XMZ,XMMG
"RTN","IBCEP82",194,0)
 S IBIEN2=0 F  S IBIEN2=$O(^XUSEC(IBKEY,IBIEN2)) Q:IBIEN2=""  S XMY(IBIEN2)=""
"RTN","IBCEP82",195,0)
 S XMDUZ=$S($G(DUZ):DUZ,1:.5),XMSUB="NPI Replacement"
"RTN","IBCEP82",196,0)
 S IBMSG(1)="The NPI "_IBOLDNPI_" was changed to "_IBNPI_" for"
"RTN","IBCEP82",197,0)
 S IBMSG(2)=$$GET1^DIQ(355.93,IBIEN,.01)_" in the IB NON/OTHER VA BILLING PROVIDER"
"RTN","IBCEP82",198,0)
 S IBMSG(3)="file.  The NPI "_IBOLDNPI_" is also associated with"
"RTN","IBCEP82",199,0)
 S IBMSG(4)=$$GET1^DIQ(200,IBIEN200,.01)_" in the NEW PERSON file."
"RTN","IBCEP82",200,0)
 S IBMSG(5)=""
"RTN","IBCEP82",201,0)
 S IBMSG(6)="The same change may need to be made to the NEW PERSON file using the"
"RTN","IBCEP82",202,0)
 S IBMSG(7)="Add/Edit NPI values for Providers option."
"RTN","IBCEP82",203,0)
 S XMTEXT="IBMSG(" D ^XMD
"RTN","IBCEP82",204,0)
 Q
"RTN","IBCEP82",205,0)
 ;
"RTN","IBCEP82",206,0)
MAILD(IBIEN,IBKEY,IBIEN200,IBOLDNPI) ;Send mailman message for deletion of an NPI
"RTN","IBCEP82",207,0)
 ;This subroutine is supported by IA# 10070
"RTN","IBCEP82",208,0)
 ;Lookups in NEW PERSON file (#200) are supported by IA#10076
"RTN","IBCEP82",209,0)
 N IBIEN2,XMDUZ,XMSUB,XMTEXT,XMY,IBMSG,XMZ,XMMG
"RTN","IBCEP82",210,0)
 S IBIEN2=0 F  S IBIEN2=$O(^XUSEC(IBKEY,IBIEN2)) Q:IBIEN2=""  S XMY(IBIEN2)=""
"RTN","IBCEP82",211,0)
 S XMDUZ=$S($G(DUZ):DUZ,1:.5),XMSUB="NPI Deletion"
"RTN","IBCEP82",212,0)
 S IBMSG(1)="The NPI "_IBOLDNPI_" was deleted for "_$$GET1^DIQ(355.93,IBIEN,.01)
"RTN","IBCEP82",213,0)
 S IBMSG(2)="in the IB NON/OTHER VA BILLING PROVIDER file.  The NPI "_IBOLDNPI_" is also"
"RTN","IBCEP82",214,0)
 S IBMSG(3)="associated with "_$$GET1^DIQ(200,IBIEN200,.01)_" in the NEW PERSON file."
"RTN","IBCEP82",215,0)
 S IBMSG(4)=""
"RTN","IBCEP82",216,0)
 S IBMSG(5)="The same change may need to be made to the NEW PERSON file using the"
"RTN","IBCEP82",217,0)
 S IBMSG(6)="Add/Edit NPI values for Providers option."
"RTN","IBCEP82",218,0)
 S XMTEXT="IBMSG(" D ^XMD
"RTN","IBCEP82",219,0)
 Q
"RTN","IBCEP8B")
0^42^B35610752^B34200270
"RTN","IBCEP8B",1,0)
IBCEP8B ;ALB/CJS - Functions for NON-VA PROVIDER cont'd ;06-06-08
"RTN","IBCEP8B",2,0)
 ;;2.0;INTEGRATED BILLING;**391,432,476,488,516**;21-MAR-94;Build 123
"RTN","IBCEP8B",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEP8B",4,0)
 ;
"RTN","IBCEP8B",5,0)
BLD(IBNPRV) ; Build/Rebuild display
"RTN","IBCEP8B",6,0)
 N IBLCT,IBCT,IBLST,IBPRI,IBIEN,Z,Z1,Z2,IB1
"RTN","IBCEP8B",7,0)
 N IBFBTGL,IBFBOK ;IB*2.0*476
"RTN","IBCEP8B",8,0)
 K @VALMAR
"RTN","IBCEP8B",9,0)
 ;S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0))
"RTN","IBCEP8B",10,0)
 S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0)),IB1=$G(^IBA(355.93,IBNPRV,1))
"RTN","IBCEP8B",11,0)
 ;
"RTN","IBCEP8B",12,0)
 ;  Moved IBCT & NAME into each section as the tabbing is different for each type  IB*2*488
"RTN","IBCEP8B",13,0)
 ;S IBCT=IBCT+1
"RTN","IBCEP8B",14,0)
 ;S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",15,0)
 ;
"RTN","IBCEP8B",16,0)
 I $P(Z,U,2)=2 D                 ; Individual provider (not a facility)
"RTN","IBCEP8B",17,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",18,0)
 . S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",19,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",20,0)
 . S Z1=$J("Type: ",15)_$S($P(Z,U,2)=2:"INDIVIDUAL PROVIDER",1:"OUTSIDE OR OTHER VA FACILITY") D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",21,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",22,0)
 . S Z1=$J("Credentials: ",15)_$P(Z,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",23,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",24,0)
 . S Z1=$J("Specialty: ",15)_$P(Z,U,4) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",25,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",26,0)
 . S Z1=$J("NPI: ",15)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",27,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",28,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8B",29,0)
 . S Z1=$J("Taxonomy Code: ",15)_$P(IBPRI,U)
"RTN","IBCEP8B",30,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",31,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",32,0)
 . S IBIEN=""
"RTN","IBCEP8B",33,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8B",34,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8B",35,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",36,0)
 .. S Z1=$J("",15)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",37,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",38,0)
 . ;IB*2.0*476 - BEGIN added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",39,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",40,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",41,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",42,0)
 . S IBFBTGL=$$FBTGLGET^IBCEP8C1(IBNPRV)  ;RETURNS 0,1 OR ""
"RTN","IBCEP8B",43,0)
 . S IBFBOK="YES"
"RTN","IBCEP8B",44,0)
 . S:IBFBTGL=0 IBFBOK="NO"
"RTN","IBCEP8B",45,0)
 . S Z1=$J("Allow future updates by FEE BASIS automatic interface? : ",50)_IBFBOK
"RTN","IBCEP8B",46,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",47,0)
 ;E  D
"RTN","IBCEP8B",48,0)
 I $P(Z,U,2)'=2 D
"RTN","IBCEP8B",49,0)
 .;IB*2.0*476 - END added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",50,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",51,0)
 . S Z1=$J("Name: ",19)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",52,0)
 . ;;
"RTN","IBCEP8B",53,0)
 . ;; Begin IB*2.0*488 -RBN
"RTN","IBCEP8B",54,0)
 . ;;
"RTN","IBCEP8B",55,0)
 . N XX,BADADD,BADZIP,MSG
"RTN","IBCEP8B",56,0)
 . S MSG="     "
"RTN","IBCEP8B",57,0)
 . S (BADADD,BADZIP)=0
"RTN","IBCEP8B",58,0)
 . S XX=$P(Z,U,5)
"RTN","IBCEP8B",59,0)
 . I $L(XX)>30!($L(XX)<1) S BADADD=1
"RTN","IBCEP8B",60,0)
 . S BADADD=$$BADADD(XX)
"RTN","IBCEP8B",61,0)
 . S XX=$P(Z,U,8)
"RTN","IBCEP8B",62,0)
 . I $L(XX)>10!($L(XX)<9)!'((XX?9N)!(XX?5N1"-"4N))!($E(XX,$L(XX)-3,$L(XX))="0000") S BADZIP=1
"RTN","IBCEP8B",63,0)
 . ;;
"RTN","IBCEP8B",64,0)
 . ;; End IB*2.0*488
"RTN","IBCEP8B",65,0)
 . ;;
"RTN","IBCEP8B",66,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",67,0)
 . S Z1=$J("Address: ",19)_$P(Z,U,5) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",68,0)
 . I $P(Z,U,10) D
"RTN","IBCEP8B",69,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",70,0)
 .. S Z1=$J("",19)_$P(Z,U,10)  ; This is the street2 of the address - NOT displayed
"RTN","IBCEP8B",71,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",72,0)
 . S Z1=$J("",19)_$P(Z,U,6)_$S($P(Z,U,6)'="":", ",1:"")_$S($P(Z,U,7):$$EXTERNAL^DILFD(355.93,.07,"",$P(Z,U,7))_"  ",1:"")_$P(Z,U,8)
"RTN","IBCEP8B",73,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",74,0)
 . ;;
"RTN","IBCEP8B",75,0)
 . ;; Begin IB*2.0*488 - RBN
"RTN","IBCEP8B",76,0)
 . ;;
"RTN","IBCEP8B",77,0)
 . I BADADD S MSG=MSG_"Address cannot be a PO BOX"
"RTN","IBCEP8B",78,0)
 . I BADZIP S MSG=$S(MSG'="     ":MSG_" & ",1:MSG) S MSG=MSG_"ZIP must be 9-10 digits not ending in 0000"
"RTN","IBCEP8B",79,0)
 . I BADADD!BADZIP D
"RTN","IBCEP8B",80,0)
 . . S IBCT=IBCT+1
"RTN","IBCEP8B",81,0)
 . . S Z1=" "
"RTN","IBCEP8B",82,0)
 . . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",83,0)
 . . S IBCT=IBCT+1
"RTN","IBCEP8B",84,0)
 . . D SET1(.IBLCT,MSG,IBCT)
"RTN","IBCEP8B",85,0)
 . . S IBCT=IBCT+1
"RTN","IBCEP8B",86,0)
 . . S Z1=" "
"RTN","IBCEP8B",87,0)
 . . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",88,0)
 . ;;
"RTN","IBCEP8B",89,0)
 . ;; End IB*2.0*488
"RTN","IBCEP8B",90,0)
 . ;;
"RTN","IBCEP8B",91,0)
 . ; start contact changes here
"RTN","IBCEP8B",92,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",93,0)
 . S Z1=$J("P&C Contact Name: ",19)_$P(IB1,U,1) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",94,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",95,0)
 . S Z1=$J("P&C Contact Phone: ",19)_$P(IB1,U,2)_"  "_$P(IB1,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",96,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",97,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",98,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",99,0)
 . S Z1=$J("Type of Facility: ",30)_$$EXTERNAL^DILFD(355.93,.11,,$P(Z,U,11))
"RTN","IBCEP8B",100,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",101,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",102,0)
 . S Z1=$J("Primary ID: ",30)_$P(Z,U,9)
"RTN","IBCEP8B",103,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",104,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",105,0)
 . S Z1=$J("ID Qualifier: ",30)_$$GET1^DIQ(355.97,$P(Z,U,13),.03) I $P(Z,U,13)]"" S Z1=Z1_" - "_$$GET1^DIQ(355.97,$P(Z,U,13),.01)
"RTN","IBCEP8B",106,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",107,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",108,0)
 . S Z1=$J("Mammography Certification #: ",30)_$P(Z,U,15)
"RTN","IBCEP8B",109,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",110,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",111,0)
 . S Z1=$J("Sole Proprietor: ",30)_$S($P(Z,U,18):$$GET1^DIQ(355.93,$P(Z,U,18),.01),1:"NO")
"RTN","IBCEP8B",112,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",113,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",114,0)
 . S Z1=$J("NPI: ",30)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",115,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",116,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8B",117,0)
 . S Z1=$J("Taxonomy Code: ",30)_$P(IBPRI,U)
"RTN","IBCEP8B",118,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",119,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",120,0)
 . S IBIEN=""
"RTN","IBCEP8B",121,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8B",122,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8B",123,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8B",124,0)
 .. S Z1=$J("",30)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8B",125,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",126,0)
 . ;IB*2.0*476 - BEGIN added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",127,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",128,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",129,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8B",130,0)
 . S IBFBTGL=$$FBTGLGET^IBCEP8C1(IBNPRV)  ;RETURNS 1,0 OR ""
"RTN","IBCEP8B",131,0)
 . S IBFBOK="YES"
"RTN","IBCEP8B",132,0)
 . S:IBFBTGL=0 IBFBOK="NO"
"RTN","IBCEP8B",133,0)
 . S Z1=$J("Allow future updates by FEE BASIS automatic interface? : ",60)_IBFBOK
"RTN","IBCEP8B",134,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8B",135,0)
 . ;IB*2.0*476 - END added prompt to allow OPTION FB PAID TO IB to make updates or not
"RTN","IBCEP8B",136,0)
 K VALMBG,VALMCNT
"RTN","IBCEP8B",137,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP8B",138,0)
 Q
"RTN","IBCEP8B",139,0)
 ;
"RTN","IBCEP8B",140,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP8B",141,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP8B",142,0)
 Q
"RTN","IBCEP8B",143,0)
 ;
"RTN","IBCEP8B",144,0)
 ; This checks for a post office box.  baa *488*
"RTN","IBCEP8B",145,0)
 ; Called by the input transform for file 355.93 field .05 Street Address.
"RTN","IBCEP8B",146,0)
 ;
"RTN","IBCEP8B",147,0)
BADADD(XX) ;
"RTN","IBCEP8B",148,0)
 N NOK,BADADD
"RTN","IBCEP8B",149,0)
 S NOK=0
"RTN","IBCEP8B",150,0)
 S XX=$$UP^XLFSTR(XX) ;make lower case upper
"RTN","IBCEP8B",151,0)
 I XX[" BOX #" S NOK=1
"RTN","IBCEP8B",152,0)
 I XX?.E1"BOX"." "."#"." "1N.E S NOK=1
"RTN","IBCEP8B",153,0)
 S XX=$$STRIP^XLFSTR(XX,". ") ; strip out punctuation
"RTN","IBCEP8B",154,0)
 I XX="BOX" S NOK=1
"RTN","IBCEP8B",155,0)
 I XX="BOX#" S NOK=1
"RTN","IBCEP8B",156,0)
 I XX="PO" S NOK=1
"RTN","IBCEP8B",157,0)
 I XX="POB" S NOK=1
"RTN","IBCEP8B",158,0)
 I XX="POBOX" S NOK=1
"RTN","IBCEP8B",159,0)
 I XX="POSTALBOX" S NOK=1
"RTN","IBCEP8B",160,0)
 Q NOK
"RTN","IBCEPB")
0^136^B7598816^B10650639
"RTN","IBCEPB",1,0)
IBCEPB ;ALB/WCJ - Insurance company ID parameters ;22-DEC-2005
"RTN","IBCEPB",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348,349,400,516**;21-MAR-94;Build 123
"RTN","IBCEPB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEPB",4,0)
EN ; -- main entry point for IBCE INSCO ID MAINT
"RTN","IBCEPB",5,0)
 D EN^VALM("IBCE INSCO ID MAINT")
"RTN","IBCEPB",6,0)
 Q
"RTN","IBCEPB",7,0)
 ;
"RTN","IBCEPB",8,0)
HDR ; -- header code
"RTN","IBCEPB",9,0)
 N PCF,PCDISP
"RTN","IBCEPB",10,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",11,0)
 S PCF=$P($G(^DIC(36,+IBCNS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEPB",12,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBCNS,0)),U)_PCDISP
"RTN","IBCEPB",13,0)
 Q
"RTN","IBCEPB",14,0)
 ;
"RTN","IBCEPB",15,0)
INIT ; Initialize
"RTN","IBCEPB",16,0)
 D CLEAN^VALM10
"RTN","IBCEPB",17,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",18,0)
 N IBLCT
"RTN","IBCEPB",19,0)
 S IBLCT=0
"RTN","IBCEPB",20,0)
 ; Display the list
"RTN","IBCEPB",21,0)
 D SET1(.IBLCT,"Attending/Rendering Provider Secondary ID")
"RTN","IBCEPB",22,0)
 D SET1(.IBLCT,"Default ID (1500) : "_$$GET1^DIQ(36,IBCNS,4.01))
"RTN","IBCEPB",23,0)
 D SET1(.IBLCT,"Default ID (UB-04): "_$$GET1^DIQ(36,IBCNS,4.02))
"RTN","IBCEPB",24,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.03))
"RTN","IBCEPB",25,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",26,0)
 D SET1(.IBLCT,"Referring Provider Secondary ID")
"RTN","IBCEPB",27,0)
 D SET1(.IBLCT,"Default ID (1500): "_$$GET1^DIQ(36,IBCNS,4.04))
"RTN","IBCEPB",28,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.05))
"RTN","IBCEPB",29,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",30,0)
 D SET1(.IBLCT,"Billing Provider Secondary IDs")
"RTN","IBCEPB",31,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (1500)? : "_$$GET1^DIQ(36,IBCNS,4.06))
"RTN","IBCEPB",32,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (UB-04)?: "_$$GET1^DIQ(36,IBCNS,4.08))
"RTN","IBCEPB",33,0)
 D SET1(.IBLCT,"Transmit no Billing Provider Sec ID for the following Electronic Plan Types:")
"RTN","IBCEPB",34,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCEPB",35,0)
 F I=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCEPB",36,0)
 . D SET1(.IBLCT,TAR("DILIST",1,I))
"RTN","IBCEPB",37,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",38,0)
 D SET1(.IBLCT,"Billing Provider/Service Facility")
"RTN","IBCEPB",39,0)
 ;
"RTN","IBCEPB",40,0)
 S IBCNS4=$G(^DIC(36,+IBCNS,4))
"RTN","IBCEPB",41,0)
 ; MRD;IB*2.0*516 - Marked fields 4.07, 4.11, 4.12 and 4.13 for
"RTN","IBCEPB",42,0)
 ; deletion and removed all references to them.
"RTN","IBCEPB",43,0)
 ;D SET1(.IBLCT,"Always use main VAMC as Billing Provider (1500)?: "_$$EXPAND^IBTRE(36,4.11,+$P(IBCNS4,U,11)))
"RTN","IBCEPB",44,0)
 ;D SET1(.IBLCT,"Always use main VAMC as Billing Provider (UB-04)?: "_$$EXPAND^IBTRE(36,4.12,+$P(IBCNS4,U,12)))
"RTN","IBCEPB",45,0)
 ;I $P(IBCNS4,U,11)!($P(IBCNS4,U,12)) D
"RTN","IBCEPB",46,0)
 ;.D SET1(.IBLCT,"Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7)))
"RTN","IBCEPB",47,0)
 ;.D SET1(.IBLCT,"Use the Billing Prov (VAMC) Name and Street Address?: "_$$EXPAND^IBTRE(36,4.13,+$P(IBCNS4,U,13)))
"RTN","IBCEPB",48,0)
 ;.Q
"RTN","IBCEPB",49,0)
 ;
"RTN","IBCEPB",50,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEPB",51,0)
 Q
"RTN","IBCEPB",52,0)
 ;
"RTN","IBCEPB",53,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEPB",54,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT)
"RTN","IBCEPB",55,0)
 Q
"RTN","IBCEPB",56,0)
 ;
"RTN","IBCEPB",57,0)
EXPND ;
"RTN","IBCEPB",58,0)
 Q
"RTN","IBCEPB",59,0)
HELP ;
"RTN","IBCEPB",60,0)
 Q
"RTN","IBCEPB",61,0)
EXIT ;
"RTN","IBCEPB",62,0)
 D CLEAN^VALM10
"RTN","IBCEPB",63,0)
 Q
"RTN","IBCEPB",64,0)
 ;
"RTN","IBCEPB",65,0)
IDPARAM ;
"RTN","IBCEPB",66,0)
 D FULL^VALM1
"RTN","IBCEPB",67,0)
 N DIE,DA,DR
"RTN","IBCEPB",68,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",69,0)
 S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]"
"RTN","IBCEPB",70,0)
 I '$D(IBY) N IBY S IBY=",12,"
"RTN","IBCEPB",71,0)
 D ^DIE K DIE
"RTN","IBCEPB",72,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",73,0)
 D INIT
"RTN","IBCEPB",74,0)
 S VALMBCK="R"
"RTN","IBCEPB",75,0)
 Q
"RTN","IBCEPB",76,0)
 ;
"RTN","IBCEPB",77,0)
BILLPRVP ;
"RTN","IBCEPB",78,0)
 D FULL^VALM1
"RTN","IBCEPB",79,0)
 D EN^IBCEPC
"RTN","IBCEPB",80,0)
 D INIT
"RTN","IBCEPB",81,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",82,0)
 S VALMBCK="R"
"RTN","IBCEPB",83,0)
 Q
"RTN","IBCEQ1A")
0^54^B67430449^B62926268
"RTN","IBCEQ1A",1,0)
IBCEQ1A ;ALB/BSL,TMK - PROVIDER ID QUERY REPORT ;25-AUG-03
"RTN","IBCEQ1A",2,0)
 ;;2.0;INTEGRATED BILLING;**232,348,349,516**;21-MAR-94;Build 123
"RTN","IBCEQ1A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEQ1A",4,0)
 ;
"RTN","IBCEQ1A",5,0)
RPTOUT ; Print from data in ^XTMP
"RTN","IBCEQ1A",6,0)
 N IBP,IBA,IBI,IBIN,IBPNM,IBPNUM,IBSTOP,IBX,IBZ,IBPG,IBICONT,Z
"RTN","IBCEQ1A",7,0)
 K ^TMP($J,"IBZ232")
"RTN","IBCEQ1A",8,0)
 F Z=1:1:6 S ^TMP($J,"IBZ232",Z)=""
"RTN","IBCEQ1A",9,0)
 S (IBPG,IBSTOP)=0
"RTN","IBCEQ1A",10,0)
 S IBA=0 F  S IBA=$O(^XTMP("IB_PLAN232",1,IBA)) Q:'IBA  D
"RTN","IBCEQ1A",11,0)
 . S IBX=$G(^XTMP("IB_PLAN232",1,IBA,0))
"RTN","IBCEQ1A",12,0)
 . ; Sort by err type, ins co ien
"RTN","IBCEQ1A",13,0)
 . S ^TMP($J,"IBZ232",+$P(IBX,U,16),+$P(IBX,U,11),IBA)=IBX
"RTN","IBCEQ1A",14,0)
 ;
"RTN","IBCEQ1A",15,0)
 S IBZ=0 F  S IBZ=$O(^TMP($J,"IBZ232",IBZ)) Q:'IBZ!IBSTOP!(IBZ>6)  D HDR1(.IBPG,.IBSTOP,IBZ,0) S IBI=0 F  S IBI=$O(^TMP($J,"IBZ232",IBZ,IBI)) Q:'IBI!IBSTOP  D
"RTN","IBCEQ1A",16,0)
 . S IBIN=$P($G(^DIC(36,+IBI,0)),U)_" ("_$S(+$G(^(3))=1:"",1:"NOT ")_"SET TO TRANSMIT LIVE)"
"RTN","IBCEQ1A",17,0)
 . D INSHDR(.IBPG,.IBSTOP,IBIN,IBZ,0) S IBICONT=0
"RTN","IBCEQ1A",18,0)
 . S IBA=0 F  S IBA=$O(^TMP($J,"IBZ232",IBZ,IBI,IBA)) Q:'IBA!IBSTOP  S IBX=$G(^(IBA)) D
"RTN","IBCEQ1A",19,0)
 .. I ($Y+5)>IOSL D INSHDR(.IBPG,.IBSTOP,IBIN,IBZ,IBICONT) Q:IBSTOP
"RTN","IBCEQ1A",20,0)
 .. ;
"RTN","IBCEQ1A",21,0)
 .. I IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",22,0)
 ... S IBP=+$P(IBX,U,14)
"RTN","IBCEQ1A",23,0)
 ... I $P(IBX,U,14)[".91" S IBPNM="ALL PROVIDERS"
"RTN","IBCEQ1A",24,0)
 ... I $P(IBX,U,14)'[".91" D
"RTN","IBCEQ1A",25,0)
 .... N Z
"RTN","IBCEQ1A",26,0)
 .... S Z=$P($G(^IBA(355.9,IBP,0)),U)
"RTN","IBCEQ1A",27,0)
 .... S IBPNM=$S(Z["VA(200":"",1:"#")_$$EXTERNAL^DILFD(355.9,.01,"",Z)
"RTN","IBCEQ1A",28,0)
 ... S IBPNUM=$P($G(^IBA(+$P($P(IBX,U,14),";",2),IBP,0)),U,7)
"RTN","IBCEQ1A",29,0)
 ... D WRT(1,"   "_$E($P("BOTH^UB-04^CMS-1500",U,$P(IBX,U,4)+1)_$J("",9),1,9)_"  "_$E($P(IBX,U,15)_$J("",23),1,23)_" "_$E(IBPNM_$J("",28),1,28)_"  "_$E(IBPNUM,1,11))
"RTN","IBCEQ1A",30,0)
 .. ;
"RTN","IBCEQ1A",31,0)
 .. I IBZ=4!(IBZ=5) D
"RTN","IBCEQ1A",32,0)
 ... ;IB*516/TAZ - Change Group Name from piece 3 to field 2.01, and group Number from piece 4 to field 2.02
"RTN","IBCEQ1A",33,0)
 ... ;N Z
"RTN","IBCEQ1A",34,0)
 ... N GNUM,GNAM,EPTYP
"RTN","IBCEQ1A",35,0)
 ... ;S Z=$G(^IBA(355.3,+$P(IBX,U,13),0))
"RTN","IBCEQ1A",36,0)
 ... ;D WRT(1,"   "_$E($P(Z,U,3)_$J("",20),1,20)_"  "_$E($P(Z,U,4)_$J("",17),1,17)_"  "_$$EXTERNAL^DILFD(355.3,.15,"",$P(Z,U,15)))
"RTN","IBCEQ1A",37,0)
 ... S GNUM=$$GET1^DIQ(355.3,+$P(IBX,U,13)_",",2.02)  ;Group Number
"RTN","IBCEQ1A",38,0)
 ... S GNAM=$$GET1^DIQ(355.3,+$P(IBX,U,13)_",",2.01)  ;Group Name
"RTN","IBCEQ1A",39,0)
 ... S EPTYP=$$GET1^DIQ(355.3,+$P(IBX,U,13)_",",.15)  ;Electronic Plan Type
"RTN","IBCEQ1A",40,0)
 ... D WRT(1,"   "_$E(GNUM_$J("",20),1,20)_"  "_$E(GNAM_$J("",17),1,17)_"  "_EPTYP)
"RTN","IBCEQ1A",41,0)
 .. S:'IBICONT IBICONT=1
"RTN","IBCEQ1A",42,0)
 ;
"RTN","IBCEQ1A",43,0)
 I 'IBSTOP D  ;Totals
"RTN","IBCEQ1A",44,0)
 . N Z
"RTN","IBCEQ1A",45,0)
 . S Z=$G(^XTMP("IB_PLAN232"))
"RTN","IBCEQ1A",46,0)
 . I ($Y+10)>IOSL!'IBPG D HDR(.IBPG,.IBSTOP,"") Q:IBSTOP
"RTN","IBCEQ1A",47,0)
 . D WRT(2,$J("",25)_"TOTAL # OF IDs CHECKED: "_+$P(Z,U,4))
"RTN","IBCEQ1A",48,0)
 . D WRT(1,$J("",14)_"TOT # BLUE CROSS/SHIELD IDS FOUND: "_+$P(Z,U,5))
"RTN","IBCEQ1A",49,0)
 . D WRT(1,"TOTAL # OF INS CO. W/BLUE PLANS AND NO BLUE IDS: "_+$P(Z,U,3))
"RTN","IBCEQ1A",50,0)
 . D WRT(1,$J("",21)_"TOTAL # OF ERRORS/WARNINGS: "_+$P(Z,U,6))
"RTN","IBCEQ1A",51,0)
 ;
"RTN","IBCEQ1A",52,0)
 I '$D(ZTQUEUED) D ^%ZISC I 'IBSTOP,IBPG D ASK()
"RTN","IBCEQ1A",53,0)
 I $D(ZTQUEUED),'IBSTOP S ZTREQ="@"
"RTN","IBCEQ1A",54,0)
 I $G(^TMP($J,"SENDMSG")),'IBSTOP D
"RTN","IBCEQ1A",55,0)
 . N XMDUZ,XMSUBJ,XMBODY,XMTO,XMZ
"RTN","IBCEQ1A",56,0)
 . S XMDUZ=DUZ,XMSUBJ=$E("PROVIDER ID QUERY FROM "_$P($G(^DIC(4,+$P($G(^IBE(350.9,1,0)),U,2),0)),U),1,65),XMBODY="^TMP($J,""SENDMSG"",1)"
"RTN","IBCEQ1A",57,0)
 . M XMTO=^TMP($J,"SENDMSG",0)
"RTN","IBCEQ1A",58,0)
 . S Z="" F  S Z=$O(^TMP($J,"SENDMSG",0,Z)) Q:Z=""  S XMZ(Z)=""
"RTN","IBCEQ1A",59,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,"",.XMZ)
"RTN","IBCEQ1A",60,0)
 K ^TMP($J,"IBZ232"),^TMP($J,"SENDMSG")
"RTN","IBCEQ1A",61,0)
 Q
"RTN","IBCEQ1A",62,0)
 ;
"RTN","IBCEQ1A",63,0)
HDR(IBPG,IBSTOP,IBZ,FF) ; Main hdr
"RTN","IBCEQ1A",64,0)
 ; FF = 0 if continuation pg so it writes it to report, but not mail msg
"RTN","IBCEQ1A",65,0)
 N Z,IBT
"RTN","IBCEQ1A",66,0)
 Q:$G(IBSTOP)
"RTN","IBCEQ1A",67,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (IBSTOP,ZTSTOP)=1 K ZTREQ I +$G(IBPG) D WRT(2,"***TASK STOPPED BY USER***") Q
"RTN","IBCEQ1A",68,0)
 I IBPG&($E(IOST,1,2)="C-") D ASK(.IBSTOP) Q:IBSTOP
"RTN","IBCEQ1A",69,0)
 S IBT=$S(IBPG:1,1:0)
"RTN","IBCEQ1A",70,0)
 S IBPG=IBPG+1
"RTN","IBCEQ1A",71,0)
 S Z="PROVIDER ID VERIFICATION QUERY REPORT"
"RTN","IBCEQ1A",72,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z)\2)_Z,"",1,79)
"RTN","IBCEQ1A",73,0)
 S Z=$$SETSTR^VALM1("Page: "_IBPG,Z,70,10)
"RTN","IBCEQ1A",74,0)
 D WRT(0,"@IOF",$G(FF))
"RTN","IBCEQ1A",75,0)
 D WRT(1,Z,$G(FF))
"RTN","IBCEQ1A",76,0)
 S Z="RUN DATE: "_$$FMTE^XLFDT(DT,2),Z=$J("",80-$L(Z)\2)_Z
"RTN","IBCEQ1A",77,0)
 D WRT(1,Z,$G(FF))
"RTN","IBCEQ1A",78,0)
 I IBZ'="",IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",79,0)
 . D WRT(2,"   FORM TYPE  PROV ID TYPE"_$J("",12)_"PROVIDER NAME (#=Non-VA)"_$J("",6)_"PROV ID",$G(FF))
"RTN","IBCEQ1A",80,0)
 I IBZ=4!(IBZ=5) D
"RTN","IBCEQ1A",81,0)
 . D WRT(2,"   GROUP NAME"_$J("",12)_"GROUP NUMBER"_$J("",7)_"ELECTRONIC PLAN TYPE",$G(FF))
"RTN","IBCEQ1A",82,0)
 D WRT(1,$TR($J("",IOM-1)," ","-"),$G(FF))
"RTN","IBCEQ1A",83,0)
 Q
"RTN","IBCEQ1A",84,0)
 ;
"RTN","IBCEQ1A",85,0)
HDR1(IBPG,IBSTOP,IBZ,IBCONT) ; Hdr err typ
"RTN","IBCEQ1A",86,0)
 N Z,Z0,Z1
"RTN","IBCEQ1A",87,0)
 D HDR(.IBPG,.IBSTOP,IBZ,IBCONT) Q:IBSTOP
"RTN","IBCEQ1A",88,0)
 S Z="",$P(Z,"*",80)="" D WRT(1,Z,IBCONT)
"RTN","IBCEQ1A",89,0)
 S Z0="* "_$S(IBZ>1:"WARNING: ",1:"ERROR: ")
"RTN","IBCEQ1A",90,0)
 ;
"RTN","IBCEQ1A",91,0)
 I IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",92,0)
 . N X
"RTN","IBCEQ1A",93,0)
 . S X="BLUE CROSS ID FOUND FOR A 1500 FORM TYPE ONLY^BLUE SHIELD ID FOUND FOR A UB-04 FORM TYPE ONLY^BLUE CROSS ID FOUND FOR BOTH FORM TYPES^BL CROSS/BL SHIELD IDs FOUND FOR PLANS NOT HAVING 'BL' ELECTRONIC PLAN TYPE"
"RTN","IBCEQ1A",94,0)
 . S Z0=Z0_$S(IBZ<6:$P(X,U,IBZ),IBZ=6:"""VAD000"" PROVIDER ID FOUND NOT SET UP AS A UPIN PROVIDER ID TYPE",1:"")
"RTN","IBCEQ1A",95,0)
 I IBZ=4 D
"RTN","IBCEQ1A",96,0)
 . S Z0=Z0_"BL CROSS/BL SHIELD IDs FOUND FOR PLANS NOT HAVING 'BL' ELECTRONIC" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",97,0)
 . S Z0="*"_$J("",10)_"PLAN TYPE"
"RTN","IBCEQ1A",98,0)
 ;
"RTN","IBCEQ1A",99,0)
 I IBZ=5 D
"RTN","IBCEQ1A",100,0)
 . S Z0=Z0_"INSURANCE CO HAS BL CROSS/SHIELD PLANS, BUT NO BL CROSS/SHIELD IDs"
"RTN","IBCEQ1A",101,0)
 ;
"RTN","IBCEQ1A",102,0)
 S Z0=Z0_$S(IBCONT:" (CONT)",1:"")
"RTN","IBCEQ1A",103,0)
 D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",104,0)
 ;
"RTN","IBCEQ1A",105,0)
 I 'IBCONT D
"RTN","IBCEQ1A",106,0)
 . I IBZ=1 D
"RTN","IBCEQ1A",107,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",108,0)
 .. S Z0="* SOLUTION: THIS ID WILL NEVER BE USED ELECTRONICALLY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",109,0)
 .. S Z0="*"_$J("",11)_"CHANGE PROVIDER ID TYPE TO BLUE SHIELD IF THIS ID SHOULD BE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",110,0)
 .. S Z0="*"_$J("",11)_"TRANSMITTED ON A 1500." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",111,0)
 . ;
"RTN","IBCEQ1A",112,0)
 . I IBZ=2 D
"RTN","IBCEQ1A",113,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",114,0)
 .. S Z0="* SUGGESTION: VISTA WILL TRANSMIT THIS ID ELECTRONICALLY, BUT IT IS OPTIMAL"  D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",115,0)
 .. S Z0="*"_$J("",13)_"TO HAVE THIS ID SET UP AS BLUE CROSS." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",116,0)
 . ;
"RTN","IBCEQ1A",117,0)
 . I IBZ=3 D
"RTN","IBCEQ1A",118,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",119,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS ID CAN ONLY BE APPLIED TO A UB-04 FORM TYPE." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",120,0)
 .. S Z0="*"_$J("",13)_"EDIT THE 'APPLIED TO FORM TYPE' FOR THE ID TO BE UB-04 ONLY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",121,0)
 .. S Z0="*"_$J("",13)_"IF YOU NEED THIS ID ON A 1500, SET IT UP AS A BLUE SHIELD ID" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",122,0)
 .. S Z0="*"_$J("",13)_"APPLIED TO A CMS-1500 FORM TYPE." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",123,0)
 . ;
"RTN","IBCEQ1A",124,0)
 . I IBZ=4 D
"RTN","IBCEQ1A",125,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",126,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS OR BLUE SHIELD ID IS DEFINED FOR THE INSURANCE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",127,0)
 .. S Z0="*"_$J("",13)_"COMPANY, BUT THE ELECTRONIC PLAN TYPE FOR ONE OR MORE OF THE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",128,0)
 .. S Z0="*"_$J("",13)_"COMPANY'S PLANS IS NOT SET TO 'BL' (BLUE CROSS/BLUE SHIELD)." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",129,0)
 .. S Z0="*"_$J("",13)_"IF BLUE CROSS/BLUE SHIELD IDs ARE NEEDED TO PRINT FOR ANY" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",130,0)
 .. S Z0="*"_$J("",13)_"OF THESE PLANS, ITS ELECTRONIC PLAN TYPE MUST BE CHANGED TO BL." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",131,0)
 . ;
"RTN","IBCEQ1A",132,0)
 . I IBZ=5 D
"RTN","IBCEQ1A",133,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",134,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS OR BLUE SHIELD PLAN IS DEFINED FOR THE INSURANCE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",135,0)
 .. S Z0="*"_$J("",13)_"COMPANY, BUT YOU HAVE ONLY NON-BLUE CROSS/SHIELD IDS SET UP." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",136,0)
 .. S Z0="*"_$J("",13)_"YOU MUST SET UP THE APPROPRIATE BLUE CROSS/BLUE SHIELD IDs" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",137,0)
 .. S Z0="*"_$J("",13)_"FOR THE INSURANCE COMPANY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",138,0)
 . ;
"RTN","IBCEQ1A",139,0)
 . I IBZ=6 D
"RTN","IBCEQ1A",140,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",141,0)
 .. S Z0="* SUGGESTION: CHANGE PROVIDER ID TYPE TO UPIN."
"RTN","IBCEQ1A",142,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",143,0)
 .. S Z0="*"_$J("",13)_"ONCE ALL PAYERS FULLY IMPLEMENT HIPAA EDITS, YOU"
"RTN","IBCEQ1A",144,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",145,0)
 .. S Z0="*"_$J("",13)_"MUST USE THE CORRECT ID TYPE FOR THE ID ENTERED."
"RTN","IBCEQ1A",146,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",147,0)
 . ;
"RTN","IBCEQ1A",148,0)
 . D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",149,0)
 . S Z1="*"_$J("",$S(IBZ'=1:13,1:11))_"VISTA OPTION TO USE: "
"RTN","IBCEQ1A",150,0)
 . I IBZ'=4 D
"RTN","IBCEQ1A",151,0)
 .. S Z0=Z1_"PROVIDER ID MAINTENANCE"
"RTN","IBCEQ1A",152,0)
 . I IBZ=4 D
"RTN","IBCEQ1A",153,0)
 .. S Z0=Z1_"INSURANCE COMPANY ENTRY/EDIT"
"RTN","IBCEQ1A",154,0)
 . D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",155,0)
 ;
"RTN","IBCEQ1A",156,0)
 D WRT(1,Z,IBCONT)
"RTN","IBCEQ1A",157,0)
 ;
"RTN","IBCEQ1A",158,0)
 I '$O(^TMP($J,"IBZ232",IBZ,0)) D WRT(2,"***** NOTHING FOUND FOR THIS ERROR/WARNING *****",IBCONT)
"RTN","IBCEQ1A",159,0)
 Q
"RTN","IBCEQ1A",160,0)
 ;
"RTN","IBCEQ1A",161,0)
INSHDR(IBPG,IBSTOP,IBINM,IBZ,IBICONT) ; Ins Co info
"RTN","IBCEQ1A",162,0)
 I ($Y+7)>IOSL D HDR1(.IBPG,.IBSTOP,IBZ,1)
"RTN","IBCEQ1A",163,0)
 Q:IBSTOP
"RTN","IBCEQ1A",164,0)
 D WRT(2,"INSURANCE CO NAME: "_IBINM_$S($G(IBICONT):" (Continued)",1:""),IBICONT)
"RTN","IBCEQ1A",165,0)
 Q
"RTN","IBCEQ1A",166,0)
 ;
"RTN","IBCEQ1A",167,0)
ASK(IBSTOP) ; Ask continue
"RTN","IBCEQ1A",168,0)
 ; If passed by ref, IBSTOP returned = 1 if print aborted
"RTN","IBCEQ1A",169,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCEQ1A",170,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCEQ1A",171,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","IBCEQ1A",172,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBSTOP=1 Q
"RTN","IBCEQ1A",173,0)
 Q
"RTN","IBCEQ1A",174,0)
 ;
"RTN","IBCEQ1A",175,0)
WRT(FF,TEXT,NOT) ; Wrt/store line
"RTN","IBCEQ1A",176,0)
 N Z,A
"RTN","IBCEQ1A",177,0)
 S A=+$O(^TMP($J,"SENDMSG",1,""),-1),NOT=$G(NOT)
"RTN","IBCEQ1A",178,0)
 I FF F Z=1:1:FF W ! I $G(^TMP($J,"SENDMSG")),'NOT,Z>1 S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",179,0)
 ;
"RTN","IBCEQ1A",180,0)
 I TEXT="@IOF" D  Q
"RTN","IBCEQ1A",181,0)
 . W @IOF
"RTN","IBCEQ1A",182,0)
 . I $G(^TMP($J,"SENDMSG")),'NOT,IBPG>1 D
"RTN","IBCEQ1A",183,0)
 .. S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",184,0)
 .. F Z=1:1:2 S A=A+1,^TMP($J,"SENDMSG",1,A)="*** TOP OF NEW PAGE ***"
"RTN","IBCEQ1A",185,0)
 .. S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",186,0)
 ;
"RTN","IBCEQ1A",187,0)
 W TEXT
"RTN","IBCEQ1A",188,0)
 I $G(^TMP($J,"SENDMSG")),'NOT S A=A+1,^TMP($J,"SENDMSG",1,A)=TEXT
"RTN","IBCEQ1A",189,0)
 Q
"RTN","IBCEQ1A",190,0)
 ;
"RTN","IBCF21")
0^55^B16291620^B15664460
"RTN","IBCF21",1,0)
IBCF21 ;ALB/ARH - HCFA 1500 19-90 DATA (gather insurance, cc) ;12-JUN-93
"RTN","IBCF21",2,0)
 ;;2.0;INTEGRATED BILLING;**8,80,51,488,516**;21-MAR-94;Build 123
"RTN","IBCF21",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCF21",4,0)
 ;
"RTN","IBCF21",5,0)
 ; requires IBIFN
"RTN","IBCF21",6,0)
INS S IBFLD("11AD")=""
"RTN","IBCF21",7,0)
 ;IB*2.0*516/BAA - Call $$POLICY^IBCEF to insert HIPAA compliant fields into variable IBDI1. Data will
"RTN","IBCF21",8,0)
 ;continue to be extracted from IBDI1 original location.
"RTN","IBCF21",9,0)
 ;F IBI=1,2,3 S IB("I"_IBI)=$G(^DGCR(399,IBIFN,("I"_IBI)))  ; 516 - baa
"RTN","IBCF21",10,0)
 F IBI=1,2,3 S IB("I"_IBI)=$$POLICY^IBCEF(IBIFN,,IBI)  ; 516 - baa
"RTN","IBCF21",11,0)
 F IBI="I1","I2","I3" I IB(IBI)'="" S IBX=+$P(IB(IBI),U,16),IBY="IBR"_IBI,@IBY=IBX I IBX'=1,IBX'=2 D  S @IBY=IBX ;pt's rel to insured
"RTN","IBCF21",12,0)
 . I $P(IB(IBI),U,6)="v" D:'$D(VAEL) ELIG^VADPT I +VAEL(4) S IBX=1 Q  ;vet is the patient
"RTN","IBCF21",13,0)
 . I $P(IB(IBI),U,6)="s" D:'$D(VAEL) ELIG^VADPT I +VAEL(4) S IBX=2 Q  ;vet is pt, so vets spouse is pt's spouse
"RTN","IBCF21",14,0)
 . I 'IBX S IBX=9 ; else relationship of insured to patient unknown
"RTN","IBCF21",15,0)
 K VAEL
"RTN","IBCF21",16,0)
 ;
"RTN","IBCF21",17,0)
 S IBCOB=$P($G(^DGCR(399,IBIFN,0)),U,21),IBPRIM="I1",IBRIP=$G(IBRI1),IBSECD="I2",IBRIS=$G(IBRI2)
"RTN","IBCF21",18,0)
 I IBCOB="S" S IBPRIM="I2",IBRIP=$G(IBRI2),IBSECD="I1",IBRIS=$G(IBRI1)
"RTN","IBCF21",19,0)
 I IBCOB="T" S IBPRIM="I3",IBRIP=$G(IBRI3),IBSECD="I1",IBRIS=$G(IBRI1)
"RTN","IBCF21",20,0)
 ;
"RTN","IBCF21",21,0)
INS1 G INS2:IB(IBPRIM)=""!('$D(^DIC(36,+IB(IBPRIM),0)))
"RTN","IBCF21",22,0)
 F IBI=$P(IB(IBPRIM),U,2),$P(IB(IBPRIM),U,3) I IBI'="" S IBFLD("1A")=IBI Q  ;policy number
"RTN","IBCF21",23,0)
 S IBFLD(4)=$S(IBRIP=1:"SAME",1:$P(IB(IBPRIM),U,17)) ; insureds name
"RTN","IBCF21",24,0)
 S IBFLD(6)=$S('$P(IB(IBPRIM),U,16):IBRIP,1:+$P(IB(IBPRIM),U,16)) ; patient relationship to insured
"RTN","IBCF21",25,0)
 I IBRIP=1!(IBRIP=2) S IBFLD(7)="SAME" ; insured's address
"RTN","IBCF21",26,0)
 ;
"RTN","IBCF21",27,0)
 I $P(IB(IBPRIM),U,2)'="" S IBFLD(11)=$P(IB(IBPRIM),U,3) ; group number
"RTN","IBCF21",28,0)
 I IBRIP=1 S IBFLD("11AD")=IBFLD("3D"),IBFLD("11AX")=IBFLD("3X")
"RTN","IBCF21",29,0)
 ;I +IBRIP=1,IBFLD("8E")="E" S VAOA("A")=5 D OAD^VADPT S IBFLD("11B")=VAOA(9) K VAOA ;employer *488*
"RTN","IBCF21",30,0)
 I +IBRIP=2 D
"RTN","IBCF21",31,0)
 . I IBFLD("3X")'="" S X="MFM",IBFLD("11AX")=$E(X,$F(X,IBFLD("3X")))
"RTN","IBCF21",32,0)
 . ;I IBSPE="E" S VAOA("A")=6 D OAD^VADPT S IBFLD("11B")=VAOA(9) K VAOA ;spouses employer *488*
"RTN","IBCF21",33,0)
 S IBFLD("11C")=$P(IB(IBPRIM),U,15)
"RTN","IBCF21",34,0)
 ;
"RTN","IBCF21",35,0)
INS2 G COND:IB(IBSECD)=""!('$D(^DIC(36,+IB(IBSECD),0))) ; secondary insurance
"RTN","IBCF21",36,0)
 S IBFLD("11D")=1
"RTN","IBCF21",37,0)
 S IBFLD(9)=$P(IB(IBSECD),U,17) I IBFLD(9)'="",IBFLD(9)=$P(IB(IBPRIM),U,17) S IBFLD(9)="SAME" ;secondary insureds nam
"RTN","IBCF21",38,0)
 F IBI=$P(IB(IBSECD),U,2),$P(IB(IBSECD),U,3) I IBI'="" S IBFLD("9A")=IBI Q  ;policy number
"RTN","IBCF21",39,0)
 I +IBRIS=1 D  ;box 9b & 9c no longer used *488*
"RTN","IBCF21",40,0)
 . ;S IBFLD("9BD")=IBFLD("3D"),IBFLD("9BX")=IBFLD("3X")
"RTN","IBCF21",41,0)
 . ;I IBFLD("8E")="E" S VAOA("A")=5 D OAD^VADPT S IBFLD("9C")=VAOA(9) K VAOA ;employer
"RTN","IBCF21",42,0)
 I +IBRIS=2 D  ;box 9b & 9c no longer used *488*
"RTN","IBCF21",43,0)
 . ;I IBFLD("3X")'="" S X="MFM",IBFLD("9BX")=$E(X,$F(X,IBFLD("3X")))
"RTN","IBCF21",44,0)
 . ;I IBSPE="E" S VAOA("A")=6 D OAD^VADPT S IBFLD("9C")=VAOA(9) K VAOA ;spouses employer
"RTN","IBCF21",45,0)
 I IBFLD("9A")=$P(IB(IBSECD),U,3) S IBFLD("9D")=$P(IB(IBSECD),U,15) ;group name
"RTN","IBCF21",46,0)
 I IBFLD("9D")="" S IBFLD("9D")=$P($G(^DIC(36,+IB(IBSECD),0)),U) ;company name
"RTN","IBCF21",47,0)
 ;
"RTN","IBCF21",48,0)
COND ;condition related to employment, auto accident (place), other accident
"RTN","IBCF21",49,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CC",IBI)) Q:'IBI  S X=$G(^(IBI,0)) I +X D
"RTN","IBCF21",50,0)
 . S Y=$G(^DGCR(399.1,+X,0)) Q:Y=""  I $P(Y,U,2)="02" S IBFLD("10A")=1
"RTN","IBCF21",51,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S X=$G(^(IBI,0)) I +X D
"RTN","IBCF21",52,0)
 . S Y=$G(^DGCR(399.1,+X,0)) Q:Y=""
"RTN","IBCF21",53,0)
 . I $P(Y,U,9)=1 S IBFLD("10A")=1
"RTN","IBCF21",54,0)
 . I $P(Y,U,9)=2 S IBFLD("10B")=1 S X=$$STATE^IBCF2($P(X,U,3)) I X'="" S IBFLD("10BS")=X
"RTN","IBCF21",55,0)
 . I $P(Y,U,9)=3 S IBFLD("10C")=1
"RTN","IBCF21",56,0)
 . ;I $P(Y,U,1)="ONSET OF SYMPTOMS/ILLNESS" S IBFLD(15)=$$DATE^IBCF2($P(X,U,2),1) ; see DATES+1^IBCF22
"RTN","IBCF21",57,0)
 ;
"RTN","IBCF21",58,0)
BX10D ; box 10D now condition codes *488*
"RTN","IBCF21",59,0)
 S IBFLD("10D")=$$CLMCDS(IBIFN)
"RTN","IBCF21",60,0)
 ;
"RTN","IBCF21",61,0)
BX11B ; box 11b now property/casualty claim number  *488*
"RTN","IBCF21",62,0)
 N BX11B
"RTN","IBCF21",63,0)
 S BX11B=$P($G(^DGCR(399,IBIFN,"U4")),U,2) S IBFLD("11B")=$S(BX11B'="":"Y4 "_BX11B,1:"")
"RTN","IBCF21",64,0)
 ;
"RTN","IBCF21",65,0)
 K IBRI1,IBRI2,IBRI3,IBCOB,IBPRIM,IBSECD,IBRIP,IBRIS,BX11B
"RTN","IBCF21",66,0)
 D ^IBCF22
"RTN","IBCF21",67,0)
 Q
"RTN","IBCF21",68,0)
 ;
"RTN","IBCF21",69,0)
CLMCDS(IBIFN) ; Claim codes for box 10D. Add with *488*
"RTN","IBCF21",70,0)
 N IBI,DEL,IBXDATA,CLMCDS,CLCD
"RTN","IBCF21",71,0)
 S IBI=0,DEL=" ",CLMCDS=""
"RTN","IBCF21",72,0)
 K IBXDATA D F^IBCEF("N-CONDITION CODES",,,IBIFN)
"RTN","IBCF21",73,0)
 ; Build data
"RTN","IBCF21",74,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D
"RTN","IBCF21",75,0)
 .S CLCD=IBXDATA(IBI)
"RTN","IBCF21",76,0)
 .I $L(CLMCDS_DEL_CLCD)<20 S CLMCDS=CLMCDS_$S(CLMCDS="":"",1:DEL)_CLCD
"RTN","IBCF21",77,0)
 Q CLMCDS
"RTN","IBCF23A")
0^22^B20324273^B19444201
"RTN","IBCF23A",1,0)
IBCF23A ;ALB/ARH - HCFA 1500 19-90 DATA - Split from IBCF23 ;12-JUN-93
"RTN","IBCF23A",2,0)
 ;;2.0;INTEGRATED BILLING;**51,432,516**;21-MAR-94;Build 123
"RTN","IBCF23A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCF23A",4,0)
 ;
"RTN","IBCF23A",5,0)
B24 ; set individual entries in print array, external format
"RTN","IBCF23A",6,0)
 ; IBAUX = additional data for EDI output
"RTN","IBCF23A",7,0)
 ; IBRXF = array of RX procedures
"RTN","IBCF23A",8,0)
 N IBX,Z,IBD1,IBD2,IBCPLINK
"RTN","IBCF23A",9,0)
 S IBI=IBI+1,IBPROC=$P(IBSS,U,2),IBD1=$$DATE^IBCF23(IBDT1),IBD2=$S(IBDT1'=IBDT2:$$DATE^IBCF23(IBDT2),1:"")
"RTN","IBCF23A",10,0)
 I '$D(IBXIEN) S IBD1=$E(IBD1,5,8)_$E(IBD1,1,4),IBD2=$E(IBD2,5,8)_$E(IBD2,1,4)
"RTN","IBCF23A",11,0)
 S IBFLD(24,IBI)=IBD1_U_IBD2_U_$P($G(^IBE(353.1,+$P(IBSS,U,6),0)),U)_U_$P($G(^IBE(353.2,+$P(IBSS,U,7),0)),U)
"RTN","IBCF23A",12,0)
 I +IBPROC D
"RTN","IBCF23A",13,0)
 . S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$P($$PRCD^IBCEF1(IBPROC,1),U,2) S:$P(IBPROC,";",2)'["ICPT" IBFLD(24,IBI_"X")=""
"RTN","IBCF23A",14,0)
 I 'IBPROC S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$S('$D(IBXIEN):IBPROC,1:+IBREV),IBFLD(24,IBI_"A")=$P($G(^DGCR(399.2,+IBREV,0)),U,2)
"RTN","IBCF23A",15,0)
 I $D(IBRXF),IBCHARG="" S IBFLD(24,IBI_"A")=$P($G(^DGCR(399.2,+IBREV,0)),U,2)
"RTN","IBCF23A",16,0)
 S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$P(IBSS,U,5)_U_IBCHARG_U_IBUNIT_U_$P(IBSS,U,8)_U_$G(IBPCHG)_U_$G(IBMIN)_U_$G(IBEMG)
"RTN","IBCF23A",17,0)
 I $D(IBSS("L")) S Z=0 F  S Z=$O(IBSS("L",Z)) Q:'Z  S IBFLD(24,IBI,$P(IBSS("L",Z),U),$P(IBSS("L",Z),U,2))=$G(IBFLD(24,IBI,$P(IBSS("L",Z),U),$P(IBSS("L",Z),U,2)))+1
"RTN","IBCF23A",18,0)
 S:$TR($G(IBAUX),U)'="" IBFLD(24,IBI,"AUX")=$G(IBAUX)
"RTN","IBCF23A",19,0)
 S:$D(IBRXF) IBFLD(24,IBI,"RX")=IBRXF
"RTN","IBCF23A",20,0)
 K IBPROC,IBSS("L")
"RTN","IBCF23A",21,0)
 S IBCPLINK=$P(IBSS,U,$L(IBSS,U))
"RTN","IBCF23A",22,0)
 S IBFLD(24,IBI)=IBFLD(24,IBI)_U_IBCPLINK
"RTN","IBCF23A",23,0)
 ; MRD;IB*2.0*516 - Added NDC and Units to line level of claim.
"RTN","IBCF23A",24,0)
 I IBCPLINK'="" S $P(IBFLD(24,IBI),U,14,15)=$TR($P($G(^DGCR(399,IBIFN,"CP",IBCPLINK,1)),U,7,8),"-")
"RTN","IBCF23A",25,0)
 Q
"RTN","IBCF23A",26,0)
 ;
"RTN","IBCF23A",27,0)
AUXOK(IBSS,IBSS1) ; Check all other flds are the same to combine procs
"RTN","IBCF23A",28,0)
 ; IBSS = subscript of IBCP to check for dups to combine - pass by ref
"RTN","IBCF23A",29,0)
 ; IBSS(IBSS,"AUX-X",n) = all the previously extracted line items for the
"RTN","IBCF23A",30,0)
 ;  same set of basic data, but having different "AUX" data
"RTN","IBCF23A",31,0)
 ; IBSS1 = the "AUX" data of the current IBCP entry
"RTN","IBCF23A",32,0)
 ;
"RTN","IBCF23A",33,0)
 ; Returns entry # in IBSS array if match found, or 0 if no match
"RTN","IBCF23A",34,0)
 ; Set the IBSS "AUX-X" node for no match
"RTN","IBCF23A",35,0)
 N Z,Z0
"RTN","IBCF23A",36,0)
 S Z=0 F  S Z=$O(IBSS(IBSS,"AUX-X",Z)) Q:'Z  I IBSS1=IBSS(IBSS,"AUX-X",Z) Q
"RTN","IBCF23A",37,0)
 I 'Z S Z0=+$O(IBSS(IBSS,"AUX-X",""),-1)+1,IBSS(IBSS,"AUX-X",Z0)=IBSS1
"RTN","IBCF23A",38,0)
 Q +Z
"RTN","IBCF23A",39,0)
 ;
"RTN","IBCF23A",40,0)
PRC ; Extract procedure data for HCFA 1500
"RTN","IBCF23A",41,0)
 ; IBRC(IBSS) = #rev codes with same billing criteria (IBSS)
"RTN","IBCF23A",42,0)
 ; IBLINK('CP' ien,'RC' ien) = IBSS including modifiers,rx seq in pc 7,8
"RTN","IBCF23A",43,0)
 ; IBLINK1(IBSS, 'RC' ien) =  auto (1)^ 'CP' ien (soft link)
"RTN","IBCF23A",44,0)
 ;
"RTN","IBCF23A",45,0)
 ; proc array w/chrg
"RTN","IBCF23A",46,0)
 N IBPR,IBP
"RTN","IBCF23A",47,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  S IBLN=^(IBI,0),IBAUXLN=$G(^("AUX")) D
"RTN","IBCF23A",48,0)
 . N Z,Z0,Z1,Q1
"RTN","IBCF23A",49,0)
 . S IBPDT=$P(IBLN,U,2)
"RTN","IBCF23A",50,0)
 . S IBSS=$$IBSS(IBI,.IBDXI,IBLN)
"RTN","IBCF23A",51,0)
 . S IBPO=$S($P(IBLN,U,4):+$P(IBLN,U,4),1:IBI+1000) ;Set print order
"RTN","IBCF23A",52,0)
 . S IBCP(IBPO)=IBPDT_"^"_IBSS,IBCP(IBPO,"AUX")=IBAUXLN
"RTN","IBCF23A",53,0)
 . S IBCP(IBPO,"LNK")=IBI
"RTN","IBCF23A",54,0)
 . ; Rx
"RTN","IBCF23A",55,0)
 . N IBZ,IBITEM
"RTN","IBCF23A",56,0)
 . S IBZ=$S($P(IBSS,U):$P(IBSS,U),1:"")
"RTN","IBCF23A",57,0)
 . I IBZ'="",$D(IBLINKRX(IBZ,IBI)) D  Q:IBCHARG'=""
"RTN","IBCF23A",58,0)
 .. S IBPO1=IBPO
"RTN","IBCF23A",59,0)
 .. S IBITEM=+$O(IBLINKRX(IBZ,IBI,0)),IBRV=$G(IBLINKRX(IBZ,IBI,IBITEM))
"RTN","IBCF23A",60,0)
 .. Q:$S(IBRV="":1,1:'$G(IBRC(IBRV)))
"RTN","IBCF23A",61,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",62,0)
 .. S $P(IBCP(IBPO1),U,9)=IBCHARG,IBCP(IBPO1,"RX")=IBITEM K IBLINKRX(IBZ,IBI,IBITEM)
"RTN","IBCF23A",63,0)
 . ; find chrgs directly linked to proc
"RTN","IBCF23A",64,0)
 . S IBK=0 F  S IBK=$O(IBLINK(IBI,IBK)) Q:'IBK  S IBRV1=IBLINK(IBI,IBK),IBRV=$P(IBRV1,U,1,6) I +IBRC(IBRV1) D
"RTN","IBCF23A",65,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV1)=IBRC(IBRV1)-1
"RTN","IBCF23A",66,0)
 .. I IBCHARG'="" S $P(IBSS,U,8)=IBCHARG,IBCP(IBPO)=IBPDT_"^"_IBSS,IBPO=IBPO+.1
"RTN","IBCF23A",67,0)
 ;
"RTN","IBCF23A",68,0)
 ; add chrgs associated with a proc (not a direct link)
"RTN","IBCF23A",69,0)
 ; find chrg associated with proc, if any (match proc,div,+/-basc)
"RTN","IBCF23A",70,0)
 K IBP(0)
"RTN","IBCF23A",71,0)
 F IBP=3,2 Q:$D(IBP(0))  S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  I $P(IBCP(IBPO),U,9)="" D
"RTN","IBCF23A",72,0)
 . S IBSS=$P(IBCP(IBPO),U,2,9)
"RTN","IBCF23A",73,0)
 . S IBCHARG="",(IBRV,IBSS)=$P(IBSS,U,1,IBP) F  S IBRV=$O(IBRC(IBRV)) Q:$P(IBRV,U,1,IBP)'=IBSS  S IBP(0)=0 I +IBRC(IBRV) D  Q
"RTN","IBCF23A",74,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",75,0)
 .. I IBRC(IBRV) S Z=0 F  S Z=$O(IBCP(IBPO,Z)) Q:'Z  S IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",76,0)
 . S $P(IBCP(IBPO),U,9)=IBCHARG
"RTN","IBCF23A",77,0)
 . I IBCHARG'="" S Z=$O(IBLINK1(IBRV,0)) I Z S IBCP(IBPO,"L",Z)=IBLINK1(IBRV,Z) K IBLINK1(IBRV,Z)
"RTN","IBCF23A",78,0)
 ;
"RTN","IBCF23A",79,0)
 ; add chrgs not associated with a proc to first proc with no chrg
"RTN","IBCF23A",80,0)
 ; Aggggh!!! TP
"RTN","IBCF23A",81,0)
 S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  I $P(IBCP(IBPO),U,9)="" D
"RTN","IBCF23A",82,0)
 . S IBCHARG="",IBRV="^" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""!+IBRV  I +IBRC(IBRV) D  Q
"RTN","IBCF23A",83,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",84,0)
 .. S Z=$O(IBLINK1(IBRV,0)) I Z S IBCP(IBPO,"L",Z)=IBLINK1(IBRV,Z) K IBLINK1(IBRV,Z)
"RTN","IBCF23A",85,0)
 . S $P(IBCP(IBPO),U,9)=IBCHARG
"RTN","IBCF23A",86,0)
 ;
"RTN","IBCF23A",87,0)
 Q
"RTN","IBCF23A",88,0)
IBSS(IBI,IBDXI,IBLN) ; Creates index sequence for procedure
"RTN","IBCF23A",89,0)
 N IBPC,IBJ,IBSS
"RTN","IBCF23A",90,0)
 S IBPC=0
"RTN","IBCF23A",91,0)
 F IBJ=1,6,5,0,9,10 S IBPC=IBPC+1 S:IBJ $P(IBSS,U,IBPC,IBPC+1)=($P(IBLN,U,IBJ)_U)
"RTN","IBCF23A",92,0)
 S $P(IBSS,U,7)=($$GETMOD^IBEFUNC(IBIFN,IBI)_U) ;Modifiers
"RTN","IBCF23A",93,0)
 F IBJ=11:1:14 I $P(IBLN,U,IBJ) S $P(IBSS,U,4)=$P(IBSS,U,4)_$S(IBJ>11:",",1:"")_$G(IBDXI(+$P(IBLN,U,IBJ))) ; dx
"RTN","IBCF23A",94,0)
 S $P(IBSS,U,10)=$P(IBLN,U,16),$P(IBSS,U,9)=$P(IBLN,U,19),$P(IBSS,U,11)=+$P(IBLN,U,17)
"RTN","IBCF23A",95,0)
 Q IBSS
"RTN","IBCF23A",96,0)
 ;
"RTN","IBCF31")
0^56^B19880263^B19588940
"RTN","IBCF31",1,0)
IBCF31 ;ALB/BGA -UB92 HCFA-1450 (GATHER CODES) ;25-AUG-1993
"RTN","IBCF31",2,0)
 ;;2.0;INTEGRATED BILLING;**17,52,80,51,516**;21-MAR-94;Build 123
"RTN","IBCF31",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCF31",4,0)
 ;
"RTN","IBCF31",5,0)
EN ;This routine requires prior execution of ibcf3.
"RTN","IBCF31",6,0)
 ; OUTPUT FORMATTER DOES NOT USE THIS ROUTINE - MAY BE OBSOLETE
"RTN","IBCF31",7,0)
 ;Field locators 22-62 are addressed here.
"RTN","IBCF31",8,0)
 ;
"RTN","IBCF31",9,0)
 S IBMAIL1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCF31",10,0)
 ;
"RTN","IBCF31",11,0)
22 ;patient status
"RTN","IBCF31",12,0)
 S IBFL(22)="" I +IBINPAT,$P(IBSTATE,U,12) S IBX=$P(IBSTATE,U,12),IBFL(22)=$P($G(^DGCR(399.1,+IBX,0)),U,2)
"RTN","IBCF31",13,0)
23 ;medical/health record number ssn
"RTN","IBCF31",14,0)
 S IBFL(23)=$P(VADM(2),U,2)
"RTN","IBCF31",15,0)
 ;
"RTN","IBCF31",16,0)
24 ;condition codes 24-30
"RTN","IBCF31",17,0)
 S (IBI,IBJ)=0 F  S IBJ=$O(^DGCR(399,+IBIFN,"CC",IBJ)) Q:'IBJ  S IBX=+$G(^(IBJ,0)),IBI=IBI+1,IBFL(24,IBI)=$P($G(^DGCR(399.1,+IBX,0)),U,2)
"RTN","IBCF31",18,0)
 S IBFL(24)=IBI_U_0
"RTN","IBCF31",19,0)
 ;
"RTN","IBCF31",20,0)
 S IBX=$P(IBCUF3,U,3) D SPLIT^IBCF3(31,2,6,IBX) ; set IBFL(31)
"RTN","IBCF31",21,0)
32 ;occurrence codes/span and dates 32-35 ,36
"RTN","IBCF31",22,0)
 ;S (IBI,IBJ,IBX)=0 F  S IBX=$O(^DGCR(399,+IBIFN,"OC",IBX)) Q:'IBX  S IBY=$G(^(IBX,0)),IBC=$G(^DGCR(399.1,+IBY,0)) I IBC'="" D
"RTN","IBCF31",23,0)
 ;. I +$P(IBC,U,10) S IBJ=IBJ+1,IBFL(36,IBJ)=$P(IBC,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))_U_$$DATE^IBCF3($P(IBY,U,4)) Q
"RTN","IBCF31",24,0)
 ;. S IBI=IBI+1,IBFL(32,IBI)=$P(IBC,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))
"RTN","IBCF31",25,0)
 ;S IBFL(32)=IBI_U_0
"RTN","IBCF31",26,0)
 ;S IBFL(36)=IBJ_U_0
"RTN","IBCF31",27,0)
 D 32^IBCF32
"RTN","IBCF31",28,0)
 ;
"RTN","IBCF31",29,0)
 F IBI=1:1:3 S IBFL(37,IBI)=$P(IBCUF3,U,(IBI+3))
"RTN","IBCF31",30,0)
 ;
"RTN","IBCF31",31,0)
38 ;responsible party with name and address
"RTN","IBCF31",32,0)
 S IBFL(38,1)="" I $P(IBPMAILN,U,4)'="" S IBJ=0 D
"RTN","IBCF31",33,0)
 . F IBI=4,5,6 I $P(IBPMAILN,U,IBI)'="" S IBJ=IBJ+1,IBFL(38,IBJ)=$P(IBPMAILN,U,IBI)
"RTN","IBCF31",34,0)
 . S IBX=$P(IBMAIL1,U,1) I IBX'="" S IBJ=IBJ+1,IBFL(38,IBJ)=IBX
"RTN","IBCF31",35,0)
 . K Y S Y=$P(IBPMAILN,U,9) D ZIPOUT^VAFADDR
"RTN","IBCF31",36,0)
 . S IBJ=IBJ+1,IBFL(38,IBJ)=$P(IBPMAILN,U,7)_", "_$$STATE(+$P(IBPMAILN,U,8))_" "_Y K Y
"RTN","IBCF31",37,0)
 ;
"RTN","IBCF31",38,0)
 ;
"RTN","IBCF31",39,0)
39 ;value codes, 39-41
"RTN","IBCF31",40,0)
 S (IBI,IBX)=0 F  S IBX=$O(^DGCR(399,+IBIFN,"CV",IBX)) Q:'IBX  S IBY=$G(^(IBX,0)),IBJ=$G(^DGCR(399.1,+IBY,0)) I IBJ'="" D
"RTN","IBCF31",41,0)
 . S IBI=IBI+1,IBFL(39,IBI)=$P(IBJ,U,2)_U_$P(IBY,U,2)_U_$P(IBJ,U,12)
"RTN","IBCF31",42,0)
 S IBFL(39)=IBI_U_0
"RTN","IBCF31",43,0)
 ;
"RTN","IBCF31",44,0)
 S IBFL(57)=$P(IBCUF31,U,1)
"RTN","IBCF31",45,0)
 S IBX=$P(IBCUF3,U,7) D SPLIT^IBCF3(56,5,14,IBX) ; set IBFL(56)
"RTN","IBCF31",46,0)
 I IBX="" F IBI=2,3,4 S IBX=+$P(IBMAIL1,U,(IBI+3)) I +IBX S IBFL(56,IBI)=$$BN1^PRCAFN(IBX) ; use prior bills
"RTN","IBCF31",47,0)
 ;
"RTN","IBCF31",48,0)
50 F IBI=1:1:3 F IBJ=50:1:54,58:1:66 S IBFL(IBJ,IBI)=""
"RTN","IBCF31",49,0)
 I '$D(^DGCR(399,IBIFN,"AIC")) D  G 80
"RTN","IBCF31",50,0)
 . S IBFL(52,1)=$S(+$P(IBSTATE,U,5):"R",1:"Y") ; roi
"RTN","IBCF31",51,0)
 . S IBFL(53,1)=$S("Nn0"[$P(IBSTATE,U,6)&($P(IBSTATE,U,6)'=""):"N",1:"Y") ; assign of benifits
"RTN","IBCF31",52,0)
 . S IBFL(63,1)=$P(IBSTATE,U,13) ; tx auth cd
"RTN","IBCF31",53,0)
 . I $P($G(^DGCR(399.3,+$P(IBCBILL,U,7),0)),U,1)["MEDICARE ESRD" D
"RTN","IBCF31",54,0)
 .. S IBFL(50,1)="MEDICARE ESRD",IBFL(51,1)=$P(IBSIGN,U,21),IBFL(58,1)=VADM(1),IBFL(59,1)="01",IBFL(60,1)=$P(VADM(2),U,2)
"RTN","IBCF31",55,0)
 ;
"RTN","IBCF31",56,0)
INS ;list the primary, secondary .. insurance companies
"RTN","IBCF31",57,0)
 ;IB*2.0*516/BAA - Call $$POLICY^IBCEF to insert HIPAA compliant fields into variable IBDI1. Data will
"RTN","IBCF31",58,0)
 ;continue to be extracted from IBDI1 original location.
"RTN","IBCF31",59,0)
 ;F IBI=1:1:3 S IBJ="I"_IBI S IBX=$G(^DGCR(399,IBIFN,IBJ)) I IBX'="" D  ; 516 - baa
"RTN","IBCF31",60,0)
 F IBI=1:1:3 S IBX=$$POLICY^IBCEF(IBIFN,,IBI) I IBX'="" D  ; 516 - baa
"RTN","IBCF31",61,0)
 . S IBY=$G(^DIC(36,+IBX,0)) Q:IBY=""
"RTN","IBCF31",62,0)
 . S IBFL(50,IBI)=$P(IBY,U,1) ; payer
"RTN","IBCF31",63,0)
 . S IBFL(51,IBI)=$P(IBMAIL1,U,(IBI+1)) ; provider #
"RTN","IBCF31",64,0)
 . S IBFL(52,IBI)=$S(+$P(IBSTATE,U,5):"R",1:"Y") ; roi
"RTN","IBCF31",65,0)
 . S IBFL(53,IBI)=$S("Nn0"[$P(IBSTATE,U,6)&($P(IBSTATE,U,6)'=""):"N",1:"Y") ;assign of benifits
"RTN","IBCF31",66,0)
 . S IBFL(54,IBI)=$P(IBCU2,U,3+IBI) ;prior payment
"RTN","IBCF31",67,0)
 . S IBFL(58,IBI)=$P(IBX,U,17) ; insureds name
"RTN","IBCF31",68,0)
 . S IBFL(59,IBI)=$P(IBX,U,16) ; pt. rel to insured
"RTN","IBCF31",69,0)
 . S IBFL(60,IBI)=$P(IBX,U,2) ; insurance number
"RTN","IBCF31",70,0)
 . S IBFL(61,IBI)=$P(IBX,U,15) ; insurance group name
"RTN","IBCF31",71,0)
 . S IBFL(62,IBI)=$P(IBX,U,3) ; insurance group number
"RTN","IBCF31",72,0)
 . S IBFL(63,IBI)="" I IBI=1 S IBFL(63,IBI)=$P(IBSTATE,U,13) ; tx auth cd
"RTN","IBCF31",73,0)
 . I $P(IBX,U,6)="v" D
"RTN","IBCF31",74,0)
 .. D OPD^VADPT S IBFL(64,IBI)=$P(VAPD(7),U,1) K VAPD I ",3,9,"[+IBFL(64,IBI) Q
"RTN","IBCF31",75,0)
 .. S VAOA("A")=5 D OAD^VADPT S IBFL(65,IBI)=VAOA(9),IBFL(66,IBI)=VAOA(4)_$S(VAOA(4)'="":", ",1:"")_$P(VAOA(5),U,2) K VAOA
"RTN","IBCF31",76,0)
 . I $P(IBX,U,6)="s" D
"RTN","IBCF31",77,0)
 .. S IBFL(64,IBI)=$P($G(^DPT(DFN,.25)),U,15) I ",3,9,"[+IBFL(64,IBI) Q
"RTN","IBCF31",78,0)
 .. S VAOA("A")=6 D OAD^VADPT S IBFL(65,IBI)=VAOA(9),IBFL(66,IBI)=VAOA(4)_$S(VAOA(4)'="":", ",1:"")_$P(VAOA(5),U,2)
"RTN","IBCF31",79,0)
 . I 'IBFL(64,IBI) S IBFL(64,IBI)=9
"RTN","IBCF31",80,0)
 ;
"RTN","IBCF31",81,0)
80 ;procedure field locator 80
"RTN","IBCF31",82,0)
 K IBPROC
"RTN","IBCF31",83,0)
 D PROC^IBCVA1 S IBFL(80)=IBPROC_U_0_U_1,IBFL(80,1)=""
"RTN","IBCF31",84,0)
 I +IBPROC S (IBI,IBX)=0 F  S IBX=$O(IBPROC(IBX)) Q:'IBX  D
"RTN","IBCF31",85,0)
 . S IBY=$P($$PRCD^IBCEF1($P(IBPROC(IBX),U)),U)
"RTN","IBCF31",86,0)
 . S IBI=IBI+1,IBFL(80,IBI)=IBY_U_$$DATE^IBCF3($P(IBPROC(IBX),U,2))
"RTN","IBCF31",87,0)
 . I $P(IBPROC(IBX),U,15)'="" S IBM=$P(IBPROC(IBX),U,15) D
"RTN","IBCF31",88,0)
 .. F I=1:1:$L(IBM,",") I $P(IBM,",",I)'="" S IBY=$P($$MOD^ICPTMOD($P(IBM,",",I),"I"),U,4) I IBY'="" S IBI=IBI+1,IBFL(80,IBI)=IBY_U_$$DATE^IBCF3($P(IBPROC(IBX),U,2))
"RTN","IBCF31",89,0)
 K IBPROC,I,J
"RTN","IBCF31",90,0)
 ;
"RTN","IBCF31",91,0)
 Q
"RTN","IBCF31",92,0)
 ;
"RTN","IBCF31",93,0)
STATE(X) ;returns 2 letter abbreviation for state pointer
"RTN","IBCF31",94,0)
 Q $P($G(^DIC(5,+$G(X),0)),U,2)
"RTN","IBCNBLE")
0^145^B108261560^B108261556
"RTN","IBCNBLE",1,0)
IBCNBLE ;ALB/ARH - Ins Buffer: LM buffer entry screen ;1-Jun-97
"RTN","IBCNBLE",2,0)
 ;;2.0;INTEGRATED BILLING;**82,231,184,251,371,416,435,452,497,519,516**;21-MAR-94;Build 123
"RTN","IBCNBLE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBLE",4,0)
 ;
"RTN","IBCNBLE",5,0)
EN ; - main entry point for list manager display
"RTN","IBCNBLE",6,0)
 N DFN
"RTN","IBCNBLE",7,0)
 D EN^VALM("IBCNB INSURANCE BUFFER ENTRY")
"RTN","IBCNBLE",8,0)
 Q
"RTN","IBCNBLE",9,0)
 ;
"RTN","IBCNBLE",10,0)
HDR ; - header code for list manager display
"RTN","IBCNBLE",11,0)
 N IBX,IB0,VADM,VA,VAERR S IBX=""
"RTN","IBCNBLE",12,0)
 I +$G(DFN) D DEM^VADPT S IBX=$E(VADM(1),1,28),IBX=IBX_$J("",35-$L(IBX))_$P(VADM(2),U,2)_"    DOB: "_$P(VADM(3),U,2)_"    AGE: "_VADM(4)
"RTN","IBCNBLE",13,0)
 S VALMHDR(1)=IBX
"RTN","IBCNBLE",14,0)
 S IB0=$G(^IBA(355.33,+$G(IBBUFDA),0))
"RTN","IBCNBLE",15,0)
 S IBX=$E($P($G(^VA(200,+$P(IB0,U,2),0)),U,1),1,27)_" ("_$E($$EXPAND^IBTRE(355.33,.03,$P(IB0,U,3)),1,11)_")"
"RTN","IBCNBLE",16,0)
 S IBX="Buffer entry created on "_$$DATE(+IB0)_" by "_IBX,IBX=$J("",40-($L(IBX)\2))_IBX
"RTN","IBCNBLE",17,0)
 S VALMHDR(2)=IBX
"RTN","IBCNBLE",18,0)
 S IBX="" I +$P(IB0,U,10) S IBX="Buffer entry verified on "_$$DATE(+$P(IB0,U,10))_" by "_$E($P($G(^VA(200,+$P(IB0,U,11),0)),U,1),1,27),IBX=$J("",40-($L(IBX)\2))_IBX
"RTN","IBCNBLE",19,0)
 S VALMHDR(3)=IBX
"RTN","IBCNBLE",20,0)
 Q
"RTN","IBCNBLE",21,0)
 ;
"RTN","IBCNBLE",22,0)
INIT ; - initialization of list manager screen, ifn of record to display required IBBUFDA
"RTN","IBCNBLE",23,0)
 K ^TMP("IBCNBLE",$J)
"RTN","IBCNBLE",24,0)
 I '$G(IBBUFDA) S VALMQUIT="" Q
"RTN","IBCNBLE",25,0)
 S DFN=+$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBLE",26,0)
 D BLD
"RTN","IBCNBLE",27,0)
 Q
"RTN","IBCNBLE",28,0)
 ;
"RTN","IBCNBLE",29,0)
HELP ; - help text for list manager screen
"RTN","IBCNBLE",30,0)
 D FULL^VALM1
"RTN","IBCNBLE",31,0)
 W !!,"This screen displays all data in a Buffer File entry."
"RTN","IBCNBLE",32,0)
 W !!,"The actions allow editing of all data and verification of coverage."
"RTN","IBCNBLE",33,0)
 W !!,"It is not necessary to use the Verify Entry action, this action is optional.",!,"If the Verify Entry action is not used, the policy will be automatically flagged",!,"as verified when it is Accepted and stored in the main Insurance files."
"RTN","IBCNBLE",34,0)
 D PAUSE^VALM1 S VALMBCK="R"
"RTN","IBCNBLE",35,0)
 Q
"RTN","IBCNBLE",36,0)
 ;
"RTN","IBCNBLE",37,0)
EXIT ; - exit list manager screen
"RTN","IBCNBLE",38,0)
 K ^TMP("IBCNBLE",$J)
"RTN","IBCNBLE",39,0)
 D CLEAR^VALM1
"RTN","IBCNBLE",40,0)
 Q
"RTN","IBCNBLE",41,0)
 ;
"RTN","IBCNBLE",42,0)
BLD ; display buffer entry
"RTN","IBCNBLE",43,0)
 N DFN,CLIEN,CLDT,IB0,IB20,IB40,IB60,IB61,IB62,IB90,IB91,IBL,IBLINE,ADDR,IBI,IBY,SRVARRAY
"RTN","IBCNBLE",44,0)
 S VALMCNT=0
"RTN","IBCNBLE",45,0)
 S IB0=$G(^IBA(355.33,IBBUFDA,0)),IB20=$G(^IBA(355.33,IBBUFDA,20)),IB40=$G(^IBA(355.33,IBBUFDA,40))
"RTN","IBCNBLE",46,0)
 S IB60=$G(^IBA(355.33,IBBUFDA,60)),IB61=$G(^IBA(355.33,IBBUFDA,61)),IB62=$G(^IBA(355.33,IBBUFDA,62))
"RTN","IBCNBLE",47,0)
 S IB90=$G(^IBA(355.33,IBBUFDA,90)),IB91=$G(^IBA(355.33,IBBUFDA,91))
"RTN","IBCNBLE",48,0)
 ; check if we are coming from appointments view
"RTN","IBCNBLE",49,0)
 I $G(AVIEW) D
"RTN","IBCNBLE",50,0)
 .D SET(" ") S IBY=$J("",26)_"Appointment Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",51,0)
 .S DFN=+IB60
"RTN","IBCNBLE",52,0)
 .S CLIEN="" F  S CLIEN=$O(^TMP($J,"IBCNAPPTS",DFN,CLIEN)) Q:CLIEN=""  D
"RTN","IBCNBLE",53,0)
 ..S CLDT="" F  S CLDT=$O(^TMP($J,"IBCNAPPTS",DFN,CLIEN,CLDT)) Q:CLDT=""  D
"RTN","IBCNBLE",54,0)
 ...S IBL="Clinic: ",IBY=$P($P(^TMP($J,"IBCNAPPTS",DFN,CLIEN,CLDT),U,2),";",2)
"RTN","IBCNBLE",55,0)
 ...S IBLINE=$$SETL(IBLINE,IBY,IBL,10,30)
"RTN","IBCNBLE",56,0)
 ...S IBL="Appt. D/T: ",IBY=$$FMTE^XLFDT(CLDT)
"RTN","IBCNBLE",57,0)
 ...S IBLINE=$$SETL(IBLINE,IBY,IBL,50,22)
"RTN","IBCNBLE",58,0)
 ...D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",59,0)
 ...Q
"RTN","IBCNBLE",60,0)
 ..Q
"RTN","IBCNBLE",61,0)
 .Q
"RTN","IBCNBLE",62,0)
 ;
"RTN","IBCNBLE",63,0)
 I +$P(IB0,U,17) D EN^IBCNBLE2    ; IB*2*435 - Display e-Pharmacy ELIG response data
"RTN","IBCNBLE",64,0)
 ;
"RTN","IBCNBLE",65,0)
 D SET(" ") S IBY=$J("",26)_"Insurance Company Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",66,0)
 S IBL="Name: ",IBY=$P(IB20,U,1) S IBLINE=$$SETL("",IBY,IBL,10,30)
"RTN","IBCNBLE",67,0)
 S IBL="Reimburse?: ",IBY=$$EXPAND^IBTRE(355.33,20.05,$P(IB20,U,5)) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",68,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",69,0)
 S IBL="Phone: ",IBY=$P(IB20,U,2) S IBLINE=$$SETL(IBLINE,IBY,IBL,10,20)
"RTN","IBCNBLE",70,0)
 S IBL="Billing Phone: ",IBY=$P(IB20,U,3) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",71,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",72,0)
 S IBL="Precert Phone: ",IBY=$P(IB20,U,4) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",73,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",74,0)
 S IBL="Remote Query From: ",IBY=$$EXTERNAL^DILFD(355.33,.14,"",$P(IB0,"^",14)) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",75,0)
 D SET(IBLINE) S IBLINE="" D ADDR(21,1)
"RTN","IBCNBLE",76,0)
 S IBL="Address: ",IBY=ADDR(1) S IBLINE=$$SETL(IBLINE,IBY,IBL,10,69)
"RTN","IBCNBLE",77,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",78,0)
 F IBI=2:1:9 S IBL="",IBY=$G(ADDR(IBI)) Q:IBY=""  S IBLINE=$$SETL(IBLINE,IBY,IBL,10,69) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",79,0)
 D SET(" ") S IBY=$J("",29)_"Group/Plan Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",80,0)
 S IBL="Group Plan?: ",IBY=$$YN($P(IB40,U,1)) S IBLINE=$$SETL("",IBY,IBL,16,3)
"RTN","IBCNBLE",81,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",82,0)
 S IBL="Group Name: ",IBY=$P(IB90,U,1) S IBLINE=$$SETL("",IBY,IBL,16,58) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",83,0)
 I $TR($E(IBY,59,80)," ","")'="" S IBLINE=$$SETL("",$E(IBY,59,80),"",16,22) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",84,0)
 ;
"RTN","IBCNBLE",85,0)
 S IBL="Group Number: ",IBY=$P(IB90,U,2) S IBLINE=$$SETL("",IBY,IBL,16,55)
"RTN","IBCNBLE",86,0)
 ;;Daou/EEN - Adding BIN and PCN
"RTN","IBCNBLE",87,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",88,0)
 S IBL="BIN: ",IBY=$P(IB40,U,10) S IBLINE=$$SETL("",IBY,IBL,16,10)
"RTN","IBCNBLE",89,0)
 S IBL="Require UR: ",IBY=$$YN($P(IB40,U,4)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",90,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",91,0)
 S IBL="PCN: ",IBY=$P(IB40,U,11) S IBLINE=$$SETL("",IBY,IBL,16,20)
"RTN","IBCNBLE",92,0)
 S IBL="Require Amb Cert: ",IBY=$$YN($P(IB40,U,6)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",93,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",94,0)
 S IBL="Require Pre-Cert: ",IBY=$$YN($P(IB40,U,5)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",95,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",96,0)
 ;
"RTN","IBCNBLE",97,0)
 S IBL="Type of Plan: ",IBY=$P($G(^IBE(355.1,+$P(IB40,U,9),0)),U,1) S IBLINE=$$SETL("",IBY,IBL,16,25)
"RTN","IBCNBLE",98,0)
 S IBL="Exclude Pre-Cond: ",IBY=$$YN($P(IB40,U,7)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",99,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",100,0)
 S IBL="Benefits Assignable: ",IBY=$$YN($P(IB40,U,8)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",101,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",102,0)
 ;
"RTN","IBCNBLE",103,0)
 D SET(" ") S IBY=$J("",26)_"Policy/Subscriber Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",104,0)
 S IBL="Whose Insurance: ",IBY=$$EXPAND^IBTRE(355.33,60.05,$P(IB60,U,5)) S IBLINE=$$SETL("",IBY,IBL,18,7)
"RTN","IBCNBLE",105,0)
 S IBL="Effective: ",IBY=$$DATE($P(IB60,U,2)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,8)
"RTN","IBCNBLE",106,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",107,0)
 S IBL="Expiration: ",IBY=$$DATE($P(IB60,U,3)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,13)
"RTN","IBCNBLE",108,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",109,0)
 S IBL="Insured's Name: ",IBY=$P(IB91,U,1) S IBLINE=$$SETL("",IBY,IBL,18,56) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",110,0)
 I $TR($E(IBY,57,112)," ","")'="" S IBLINE=$$SETL("",$E(IBY,57,112),"",18,56) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",111,0)
 I $TR($E(IBY,113,130)," ","")'="" S IBLINE=$$SETL("",$E(IBY,113,130),"",18,18) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",112,0)
 S IBL="Subscriber Id: ",IBY=$P(IB90,U,3) S IBLINE=$$SETL("",IBY,IBL,18,56) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",113,0)
 I $TR($E(IBY,57,80)," ","")'="" S IBLINE=$$SETL("",$E(IBY,57,80),"",18,24) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",114,0)
 ;
"RTN","IBCNBLE",115,0)
 S IBL="Relationship: ",IBY=$$EXPAND^IBTRE(355.33,60.06,$P(IB60,U,6)) S IBLINE=$$SETL("",IBY,IBL,18,16)
"RTN","IBCNBLE",116,0)
 S IBL="Primary Provider: ",IBY=$P(IB60,U,10) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",117,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",118,0)
 S IBL="Provider Phone: ",IBY=$P(IB60,U,11) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,16)
"RTN","IBCNBLE",119,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",120,0)
 I $P(IB60,U,6)'="01"!($P(IB60,U,8)'="") S IBL="Insured's DOB: ",IBY=$$DATE($P(IB60,U,8)) S IBLINE=$$SETL("",IBY,IBL,18,8)
"RTN","IBCNBLE",121,0)
 S IBL="Coord of Benefits: ",IBY=$$EXPAND^IBTRE(355.33,60.12,$P(IB60,U,12)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,16)
"RTN","IBCNBLE",122,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",123,0)
 ;
"RTN","IBCNBLE",124,0)
 I $P(IB60,U,15)'=""!($P(IB60,U,16)'="") D      ; IB*2*452 - esg - display Pharmacy fields if they exist
"RTN","IBCNBLE",125,0)
 . S IBL="Rx Relationship: ",IBY=""
"RTN","IBCNBLE",126,0)
 . N G S G=+$P(IB60,U,15)
"RTN","IBCNBLE",127,0)
 . I G S IBY=$$GET1^DIQ(9002313.19,G_",",.01)_" - "_$$GET1^DIQ(9002313.19,G_",",.02)
"RTN","IBCNBLE",128,0)
 . S IBLINE=$$SETL("",IBY,IBL,18,20)
"RTN","IBCNBLE",129,0)
 . S IBL="Rx Person Code: ",IBY=$P(IB60,U,16),IBLINE=$$SETL(IBLINE,IBY,IBL,62,10)
"RTN","IBCNBLE",130,0)
 . D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",131,0)
 . Q
"RTN","IBCNBLE",132,0)
 ;
"RTN","IBCNBLE",133,0)
 I $P(IB62,U,1)'="" S IBL="Patient Id: ",IBY=$P(IB62,U,1) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,13)
"RTN","IBCNBLE",134,0)
 I IBLINE'="" D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",135,0)
 ;
"RTN","IBCNBLE",136,0)
 I '$P(IB61,U,1) D SET(" ") S IBL="Employer Sponsored Group Health Plan?: ",IBY=$$YN($P(IB61,U,1)) S IBLINE=$$SETL("",IBY,IBL,40,3) D SET(IBLINE) S IBLINE="" G NXT
"RTN","IBCNBLE",137,0)
 ;
"RTN","IBCNBLE",138,0)
 D ADDR(61,6)
"RTN","IBCNBLE",139,0)
 D SET(" ") S IBY=$J("",24)_"Subscriber's Employer Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",140,0)
 S IBL="Employer Sponsored?: ",IBY=$$YN($P(IB61,U,1)) S IBLINE=$$SETL("",IBY,IBL,22,3)
"RTN","IBCNBLE",141,0)
 S IBL="Employment Status: ",IBY=$$EXPAND^IBTRE(355.33,61.03,$P(IB61,U,3)) S IBLINE=$$SETL(IBLINE,IBY,IBL,64,15)
"RTN","IBCNBLE",142,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",143,0)
 S IBL="Claim to Employer: ",IBY=$$YN($P(IB61,U,5)) S IBLINE=$$SETL("",IBY,IBL,22,3)
"RTN","IBCNBLE",144,0)
 S IBL="Retirement Date: ",IBY=$$DATE($P(IB61,U,4)) S IBLINE=$$SETL(IBLINE,IBY,IBL,64,8)
"RTN","IBCNBLE",145,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",146,0)
 S IBL="Employer Name: ",IBY=$P(IB61,U,2) S IBLINE=$$SETL("",IBY,IBL,16,30)
"RTN","IBCNBLE",147,0)
 S IBL="Employer Phone: ",IBY=$P(IB61,U,12) S IBLINE=$$SETL(IBLINE,IBY,IBL,64,15)
"RTN","IBCNBLE",148,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",149,0)
 S IBL="Address: ",IBY=ADDR(1) S IBLINE=$$SETL(IBLINE,IBY,IBL,16,64)
"RTN","IBCNBLE",150,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",151,0)
 F IBI=2:1:9 S IBL="",IBY=$G(ADDR(IBI)) Q:IBY=""  S IBLINE=$$SETL(IBLINE,IBY,IBL,16,64) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",152,0)
 ;
"RTN","IBCNBLE",153,0)
NXT ;
"RTN","IBCNBLE",154,0)
 D SET(" ") S IBY=$J("",26)_"Buffer Entry Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",155,0)
 S IBL="Date Entered: ",IBY=$$FMTE^XLFDT($P(IB0,U,1),2) S IBLINE=$$SETL("",IBY,IBL,18,17)
"RTN","IBCNBLE",156,0)
 S IBL="Date Verified: ",IBY=$$FMTE^XLFDT($P(IB0,U,10),2) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",157,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",158,0)
 S IBL="Entered By: ",IBY=$$EXPAND^IBTRE(355.33,.02,$P(IB0,U,2)) S IBLINE=$$SETL("",IBY,IBL,18,40)
"RTN","IBCNBLE",159,0)
 S IBL="Verified By: ",IBY=$$EXPAND^IBTRE(355.33,.11,$P(IB0,U,11)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",160,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",161,0)
 ; service date / service code
"RTN","IBCNBLE",162,0)
 D SERVLN(IBBUFDA,.SRVARRAY) I SRVARRAY F IBI=1:1:SRVARRAY D SET(SRVARRAY(IBI))
"RTN","IBCNBLE",163,0)
 K SRVARRAY
"RTN","IBCNBLE",164,0)
 ;
"RTN","IBCNBLE",165,0)
 S IBLINE=$$TRACE(IBLINE,IBBUFDA)       ; eIIV trace #
"RTN","IBCNBLE",166,0)
 S IBL="eIV Processed Date: ",IBY=$S($P(IB0,U,15)="":"",1:$$FMTE^XLFDT($P(IB0,U,15),"2M"))
"RTN","IBCNBLE",167,0)
 S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",168,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",169,0)
 S IBL="Source: ",IBY=$$EXPAND^IBTRE(355.33,.03,$P(IB0,U,3))
"RTN","IBCNBLE",170,0)
 S IBLINE=$$SETL("",IBY,IBL,18,17)
"RTN","IBCNBLE",171,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",172,0)
 ;
"RTN","IBCNBLE",173,0)
 ; Call another routine for continuation of list build
"RTN","IBCNBLE",174,0)
 D BLD^IBCNBLE1
"RTN","IBCNBLE",175,0)
 ;
"RTN","IBCNBLE",176,0)
BLDQ Q
"RTN","IBCNBLE",177,0)
 ;
"RTN","IBCNBLE",178,0)
 ;
"RTN","IBCNBLE",179,0)
SETL(LINE,DATA,LABEL,COL,LNG) ;
"RTN","IBCNBLE",180,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBCNBLE",181,0)
 Q LINE
"RTN","IBCNBLE",182,0)
 ;
"RTN","IBCNBLE",183,0)
SET(LINE,SPEC) ;
"RTN","IBCNBLE",184,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCNBLE",185,0)
 S ^TMP("IBCNBLE",$J,VALMCNT,0)=LINE
"RTN","IBCNBLE",186,0)
 I $G(SPEC)="B" D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM)
"RTN","IBCNBLE",187,0)
 Q
"RTN","IBCNBLE",188,0)
 ;
"RTN","IBCNBLE",189,0)
DATE(X) ;
"RTN","IBCNBLE",190,0)
 N Y S Y="" I X?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCNBLE",191,0)
 Q Y
"RTN","IBCNBLE",192,0)
 ;
"RTN","IBCNBLE",193,0)
YN(X) ;
"RTN","IBCNBLE",194,0)
 N Y S X=$G(X),Y=$S(X=1:"Yes",X=0:"No",1:"")
"RTN","IBCNBLE",195,0)
 Q Y
"RTN","IBCNBLE",196,0)
 ;
"RTN","IBCNBLE",197,0)
ADDR(NODE,FLD) ; format address for output
"RTN","IBCNBLE",198,0)
 N IBY,IB0,IBCS,IBST,IBZIP,IBJ,IBZ,IBX K ADDR S ADDR(1)=""
"RTN","IBCNBLE",199,0)
 S IB0=$G(^IBA(355.33,IBBUFDA,NODE))
"RTN","IBCNBLE",200,0)
 S IBCS=$P(IB0,U,FLD+3),IBST=$P($G(^DIC(5,+$P(IB0,U,FLD+4),0)),U,2),IBZIP=$P(IB0,U,FLD+5)
"RTN","IBCNBLE",201,0)
 S IBZIP=$E(IBZIP,1,5)_$S($E(IBZIP,6,9)'="":"-"_$E(IBZIP,6,9),1:"")
"RTN","IBCNBLE",202,0)
 S IBST=IBST_$S(IBST=""!(IBZIP=""):"",1:"  ")_IBZIP
"RTN","IBCNBLE",203,0)
 S IBCS=IBCS_$S(IBCS=""!(IBST=""):"",1:", ")_IBST
"RTN","IBCNBLE",204,0)
 ;
"RTN","IBCNBLE",205,0)
 S IBJ=1 F IBY=$P(IB0,U,FLD),$P(IB0,U,(FLD+1)),$P(IB0,U,(FLD+2)),IBCS I IBY'="" S IBX=$G(ADDR(IBJ)),IBZ=", " D
"RTN","IBCNBLE",206,0)
 . S:IBX="" IBZ="" S:($L(IBX)+2+$L(IBY))>64 IBZ="",IBJ=IBJ+1
"RTN","IBCNBLE",207,0)
 . S ADDR(IBJ)=$G(ADDR(IBJ))_IBZ_IBY
"RTN","IBCNBLE",208,0)
 Q
"RTN","IBCNBLE",209,0)
 ;
"RTN","IBCNBLE",210,0)
TRACE(IBLINE,IBBUFDA) ; Add the eIIV Trace Number to the display
"RTN","IBCNBLE",211,0)
 NEW RESP,TRACENUM,IBL,IBY
"RTN","IBCNBLE",212,0)
 I '$G(IBBUFDA) G TRACEX
"RTN","IBCNBLE",213,0)
 S RESP=$O(^IBCN(365,"AF",IBBUFDA,""),-1)          ; response ien
"RTN","IBCNBLE",214,0)
 S TRACENUM=""
"RTN","IBCNBLE",215,0)
 I RESP S TRACENUM=$P($G(^IBCN(365,RESP,0)),U,9)   ; trace# field
"RTN","IBCNBLE",216,0)
 S IBL="eIV Trace #: ",IBY=TRACENUM               ; field label/data
"RTN","IBCNBLE",217,0)
 S IBLINE=$$SETL("",IBY,IBL,18,17)             ; add it
"RTN","IBCNBLE",218,0)
TRACEX ;
"RTN","IBCNBLE",219,0)
 Q IBLINE
"RTN","IBCNBLE",220,0)
 ;
"RTN","IBCNBLE",221,0)
SERVLN(IBBUFDA,SRVARRAY) ; create a service date/service type line for the display
"RTN","IBCNBLE",222,0)
 N NODE0,RIEN,SRVCODE,SRVDT,SRVSTR,TQIEN
"RTN","IBCNBLE",223,0)
 S SRVSTR=""
"RTN","IBCNBLE",224,0)
 I '$G(IBBUFDA) G SERVLNX
"RTN","IBCNBLE",225,0)
 ;IB*2.0*519 Start: Fix retrieving RIEN and TQIEN so display gets correct values
"RTN","IBCNBLE",226,0)
 S RIEN=+$O(^IBCN(365,"AF",IBBUFDA,""))
"RTN","IBCNBLE",227,0)
 S TQIEN=+$O(^IBCN(365.1,"D",IBBUFDA,""),-1)
"RTN","IBCNBLE",228,0)
 I TQIEN=0 S TQIEN=$P($G(^IBCN(365,RIEN,0)),U,5)
"RTN","IBCNBLE",229,0)
 ;IB*2.0*519 End: Fix retrieving RIEN and TQIEN so display gets correct values
"RTN","IBCNBLE",230,0)
 ;
"RTN","IBCNBLE",231,0)
 S (SRVDT,SRVCODE)="" I TQIEN D
"RTN","IBCNBLE",232,0)
 .S NODE0=$G(^IBCN(365.1,TQIEN,0)),SRVCODE=$P(NODE0,U,20)
"RTN","IBCNBLE",233,0)
 .;S RIEN=+$O(^IBCN(365,"AF",IBBUFDA,""))  ;IB*2.0*519: RIEN already retrieved above
"RTN","IBCNBLE",234,0)
 .I RIEN S SRVDT=$P($G(^IBCN(365,RIEN,1)),U,10) ; try to get service date from file 365
"RTN","IBCNBLE",235,0)
 .I SRVDT="" S SRVDT=$P(NODE0,U,12) ; if unsuccessful, get it from file 365.1
"RTN","IBCNBLE",236,0)
 .Q
"RTN","IBCNBLE",237,0)
 S SRVSTR="** This response is based on service date "_$S(SRVDT:$$FMTE^XLFDT(SRVDT,"5Z"),1:"UNKNOWN")
"RTN","IBCNBLE",238,0)
 S SRVSTR=SRVSTR_" and service type: "_$S(SRVCODE:$P($G(^IBE(365.013,SRVCODE,0)),U,2),1:"UNKNOWN")_" **"
"RTN","IBCNBLE",239,0)
SERVLNX ;
"RTN","IBCNBLE",240,0)
 D FSTRNG^IBJU1(SRVSTR,79,.SRVARRAY)
"RTN","IBCNBLE",241,0)
 Q
"RTN","IBCNBLE1")
0^146^B32419797^B32174406
"RTN","IBCNBLE1",1,0)
IBCNBLE1 ;DAOU/ESG - Ins Buffer, Expand Entry, con't ;25-JUN-2002
"RTN","IBCNBLE1",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,416,435,467,516**;21-MAR-94;Build 123
"RTN","IBCNBLE1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBLE1",4,0)
 ;
"RTN","IBCNBLE1",5,0)
 ; Can't be called from the top
"RTN","IBCNBLE1",6,0)
 Q
"RTN","IBCNBLE1",7,0)
 ;
"RTN","IBCNBLE1",8,0)
BLD ; Continuation of Expand Entry list build procedure
"RTN","IBCNBLE1",9,0)
 ; --- Called by IBCNBLE
"RTN","IBCNBLE1",10,0)
 ;
"RTN","IBCNBLE1",11,0)
 NEW ERR,MSG,IBL,IBY,IBLINE,IBER,IBLN,EDITED,ORIGSYME,ORIGSYMI,EEUPDATE
"RTN","IBCNBLE1",12,0)
 NEW ORIGSYMS
"RTN","IBCNBLE1",13,0)
 ;
"RTN","IBCNBLE1",14,0)
 ; save the external and internal IIV status values
"RTN","IBCNBLE1",15,0)
 S ORIGSYMS=$$SYMBOL^IBCNBLL(IBBUFDA)
"RTN","IBCNBLE1",16,0)
 S ORIGSYME=$$GET1^DIQ(355.33,IBBUFDA,.12,"E")
"RTN","IBCNBLE1",17,0)
 S ORIGSYMI=$P(IB0,U,12)
"RTN","IBCNBLE1",18,0)
 ;
"RTN","IBCNBLE1",19,0)
 ; Determine if Expand Entry is allowed to update the IIV Status
"RTN","IBCNBLE1",20,0)
 S EEUPDATE=1    ; default Expand Entry update flag to true
"RTN","IBCNBLE1",21,0)
 I ORIGSYMI,'$P($G(^IBE(365.15,ORIGSYMI,0)),U,3) S EEUPDATE=0
"RTN","IBCNBLE1",22,0)
 ;
"RTN","IBCNBLE1",23,0)
 ; Do not update the IIV status if manually verified
"RTN","IBCNBLE1",24,0)
 I ORIGSYMS="*" S EEUPDATE=0
"RTN","IBCNBLE1",25,0)
 ;
"RTN","IBCNBLE1",26,0)
 ; Don't let Expand Entry update the eIV status for ePharmacy buffer entries
"RTN","IBCNBLE1",27,0)
 ; esg - 10/12/10 - IB*2*435
"RTN","IBCNBLE1",28,0)
 I +$P($G(^IBA(355.33,IBBUFDA,0)),U,17) S EEUPDATE=0
"RTN","IBCNBLE1",29,0)
 ;
"RTN","IBCNBLE1",30,0)
 ; If the current IIV Status allows updates by Expand Entry, then
"RTN","IBCNBLE1",31,0)
 ; invoke the function that trys to find a valid payer
"RTN","IBCNBLE1",32,0)
 I EEUPDATE D
"RTN","IBCNBLE1",33,0)
 . S ERR=$$INSERROR^IBCNEUT3("B",IBBUFDA,1,.MSG)
"RTN","IBCNBLE1",34,0)
 . ; If no errors, then remove the IIV Status
"RTN","IBCNBLE1",35,0)
 . I 'ERR S ERR=$$SIDERR(IBBUFDA,$P(ERR,U,2))
"RTN","IBCNBLE1",36,0)
 . I 'ERR S ERR=$$PIDERR(IBBUFDA)
"RTN","IBCNBLE1",37,0)
 . I 'ERR D CLEAR^IBCNEUT4(IBBUFDA,.EDITED)
"RTN","IBCNBLE1",38,0)
 . ; If errors found, then update with the new IIV Status
"RTN","IBCNBLE1",39,0)
 . I ERR D BUFF^IBCNEUT2(IBBUFDA,$P(ERR,U,1)) S EDITED=1
"RTN","IBCNBLE1",40,0)
 . ; refresh the IB0 variable for the possible symbol change
"RTN","IBCNBLE1",41,0)
 . S $P(IB0,U,12)=$P($G(^IBA(355.33,IBBUFDA,0)),U,12)
"RTN","IBCNBLE1",42,0)
 . Q
"RTN","IBCNBLE1",43,0)
 ;
"RTN","IBCNBLE1",44,0)
 ; Possibly display information if the OVERRIDE FRESHNESS FLAG is on
"RTN","IBCNBLE1",45,0)
 I $P(IB0,U,13) D
"RTN","IBCNBLE1",46,0)
 . S IBL="User Requested Inquiry?: ",IBY="YES"
"RTN","IBCNBLE1",47,0)
 . S IBLINE=$$SETL^IBCNBLE("",IBY,IBL,18,3)
"RTN","IBCNBLE1",48,0)
 . D SET^IBCNBLE(IBLINE) S IBLINE=""
"RTN","IBCNBLE1",49,0)
 . Q
"RTN","IBCNBLE1",50,0)
 ;
"RTN","IBCNBLE1",51,0)
 ; Display the Current Status line
"RTN","IBCNBLE1",52,0)
 S IBL="Current eIV Status: "
"RTN","IBCNBLE1",53,0)
 S IBY=$$GET1^DIQ(355.33,IBBUFDA,.12,"E")
"RTN","IBCNBLE1",54,0)
 I IBY="",$$SYMBOL^IBCNBLL(IBBUFDA)'="*" S IBY="No problems identified, Awaiting electronic processing"
"RTN","IBCNBLE1",55,0)
 I $$SYMBOL^IBCNBLL(IBBUFDA)="*" S IBY="Manually verified, No eIV activity at this time"
"RTN","IBCNBLE1",56,0)
 ;
"RTN","IBCNBLE1",57,0)
 ; esg - 10/12/10 - check for epharmacy entries
"RTN","IBCNBLE1",58,0)
 I +$P($G(^IBA(355.33,IBBUFDA,0)),U,17) S IBY="N/A for e-Pharmacy buffer entries"
"RTN","IBCNBLE1",59,0)
 ;
"RTN","IBCNBLE1",60,0)
 S IBLINE=$$SETL^IBCNBLE("",IBY,IBL,18,80)
"RTN","IBCNBLE1",61,0)
 D SET^IBCNBLE(IBLINE) S IBLINE=""
"RTN","IBCNBLE1",62,0)
 ;
"RTN","IBCNBLE1",63,0)
 ; Display any text returned by the payer function
"RTN","IBCNBLE1",64,0)
 F IBER=1:1:$G(MSG) D SET^IBCNBLE(" ") F IBLN=1:1:$P($G(MSG(IBER)),U,2) D SET^IBCNBLE("  "_$G(MSG(IBER,IBLN)))
"RTN","IBCNBLE1",65,0)
 ;
"RTN","IBCNBLE1",66,0)
 ; Display the current IIV Status generic description
"RTN","IBCNBLE1",67,0)
 D SYMTXT($P(IB0,U,12),1)
"RTN","IBCNBLE1",68,0)
 D SYMTXT($P(IB0,U,12),2)
"RTN","IBCNBLE1",69,0)
 ;
"RTN","IBCNBLE1",70,0)
 ; If the IIV Status ien changed from what it once was, then display the
"RTN","IBCNBLE1",71,0)
 ; Prior Status line
"RTN","IBCNBLE1",72,0)
 I ORIGSYMI'=$P(IB0,U,12) D
"RTN","IBCNBLE1",73,0)
 . I $P(IB0,U,12) D SET^IBCNBLE(" ")
"RTN","IBCNBLE1",74,0)
 . S IBL="Prior Status: "
"RTN","IBCNBLE1",75,0)
 . S IBY=ORIGSYME
"RTN","IBCNBLE1",76,0)
 . I IBY="",ORIGSYMS'="*" S IBY="No problems identified, Awaiting electronic processing"
"RTN","IBCNBLE1",77,0)
 . I ORIGSYMS="*" S IBY="Manually verified, No eIV activity at this time"
"RTN","IBCNBLE1",78,0)
 . S IBLINE=$$SETL^IBCNBLE("",IBY,IBL,18,80)
"RTN","IBCNBLE1",79,0)
 . D SET^IBCNBLE(IBLINE) S IBLINE=""
"RTN","IBCNBLE1",80,0)
 . D SYMTXT(ORIGSYMI,1)
"RTN","IBCNBLE1",81,0)
 . Q
"RTN","IBCNBLE1",82,0)
 ;
"RTN","IBCNBLE1",83,0)
 ; Display any existing EC errors
"RTN","IBCNBLE1",84,0)
 D ECERR
"RTN","IBCNBLE1",85,0)
 ;D SET^IBCNBLE(" ")
"RTN","IBCNBLE1",86,0)
 ;
"RTN","IBCNBLE1",87,0)
 ; If the IIV Status was modified then refresh the visual display
"RTN","IBCNBLE1",88,0)
 I $G(EDITED) D UPDLN^IBCNBLL(IBBUFDA,"EDITED")
"RTN","IBCNBLE1",89,0)
BLDX ;
"RTN","IBCNBLE1",90,0)
 Q
"RTN","IBCNBLE1",91,0)
 ;
"RTN","IBCNBLE1",92,0)
SYMTXT(IEN,TYPE) ; Display the text from the IIV symbol file for this entry
"RTN","IBCNBLE1",93,0)
 ; TYPE=1 - Display Description from IIV Status Table file
"RTN","IBCNBLE1",94,0)
 ; TYPE=2 - Display Corrective Action from IIV Status Table file
"RTN","IBCNBLE1",95,0)
 NEW IBJ
"RTN","IBCNBLE1",96,0)
 I '$G(IEN) G SYMX
"RTN","IBCNBLE1",97,0)
 I '$P($G(^IBE(365.15,IEN,TYPE,0)),U,4) G SYMX
"RTN","IBCNBLE1",98,0)
 D SET^IBCNBLE(" ")
"RTN","IBCNBLE1",99,0)
 S IBJ=0
"RTN","IBCNBLE1",100,0)
 F  S IBJ=$O(^IBE(365.15,IEN,TYPE,IBJ)) Q:'IBJ  D SET^IBCNBLE("  "_$G(^IBE(365.15,IEN,TYPE,IBJ,0)))
"RTN","IBCNBLE1",101,0)
SYMX ;
"RTN","IBCNBLE1",102,0)
 Q
"RTN","IBCNBLE1",103,0)
 ;
"RTN","IBCNBLE1",104,0)
ECERR ; Display the Eligibility Communicator Error data from the
"RTN","IBCNBLE1",105,0)
 ; response file if it exists
"RTN","IBCNBLE1",106,0)
 ;
"RTN","IBCNBLE1",107,0)
 NEW RESP,RESPDATA,ERRTXT,IBY,IBLINE,ERRDATA,FUTDT,TQIEN,IBERR,IBCT
"RTN","IBCNBLE1",108,0)
 S RESP=$O(^IBCN(365,"AF",IBBUFDA,""),-1)
"RTN","IBCNBLE1",109,0)
 I 'RESP G ECERRX
"RTN","IBCNBLE1",110,0)
 S RESPDATA=$G(^IBCN(365,RESP,1))
"RTN","IBCNBLE1",111,0)
 S ERRTXT=$P($G(^IBCN(365,RESP,4)),U,1)
"RTN","IBCNBLE1",112,0)
 S TQIEN=+$P($G(^IBCN(365,RESP,0)),U,5)    ; Trans Queue file ien
"RTN","IBCNBLE1",113,0)
 S FUTDT=$P($G(^IBCN(365.1,TQIEN,0)),U,9)  ; Future date to transmit
"RTN","IBCNBLE1",114,0)
 I '$P(RESPDATA,U,14),'$P(RESPDATA,U,15),ERRTXT="",'FUTDT G ECERRX
"RTN","IBCNBLE1",115,0)
 ;
"RTN","IBCNBLE1",116,0)
 ; At this point, we know there's something to get displayed
"RTN","IBCNBLE1",117,0)
 ;
"RTN","IBCNBLE1",118,0)
 ; Display section header
"RTN","IBCNBLE1",119,0)
 D SET^IBCNBLE(" ")
"RTN","IBCNBLE1",120,0)
 S IBY=$J("",19)_"Eligibility Communicator Error Information"
"RTN","IBCNBLE1",121,0)
 D SET^IBCNBLE(IBY,"B") S IBLINE=""
"RTN","IBCNBLE1",122,0)
 ;
"RTN","IBCNBLE1",123,0)
 ; Display Error Condition data - field# 1.14
"RTN","IBCNBLE1",124,0)
 I $P(RESPDATA,U,14) D
"RTN","IBCNBLE1",125,0)
 . S ERRDATA=$G(^IBE(365.017,$P(RESPDATA,U,14),0))
"RTN","IBCNBLE1",126,0)
 . K IBERR
"RTN","IBCNBLE1",127,0)
 . S IBERR(1)=$P(ERRDATA,U,2)_" (Error Condition '"_$P(ERRDATA,U,1)_"')"
"RTN","IBCNBLE1",128,0)
 . D TXT^IBCNEUT7("IBERR")
"RTN","IBCNBLE1",129,0)
 . F IBCT=1:1:$O(IBERR(""),-1) D SET^IBCNBLE(IBERR(IBCT))
"RTN","IBCNBLE1",130,0)
 . Q
"RTN","IBCNBLE1",131,0)
 ;
"RTN","IBCNBLE1",132,0)
 ; Display Error Action data - field# 1.15
"RTN","IBCNBLE1",133,0)
 I $P(RESPDATA,U,15) D
"RTN","IBCNBLE1",134,0)
 . S ERRDATA=$G(^IBE(365.018,$P(RESPDATA,U,15),0))
"RTN","IBCNBLE1",135,0)
 . K IBERR
"RTN","IBCNBLE1",136,0)
 . S IBERR(1)=$P(ERRDATA,U,2)_" (Error Action '"_$P(ERRDATA,U,1)_"')"
"RTN","IBCNBLE1",137,0)
 . D TXT^IBCNEUT7("IBERR")
"RTN","IBCNBLE1",138,0)
 . F IBCT=1:1:$O(IBERR(""),-1) D SET^IBCNBLE(IBERR(IBCT))
"RTN","IBCNBLE1",139,0)
 . Q
"RTN","IBCNBLE1",140,0)
 ;
"RTN","IBCNBLE1",141,0)
 ; Display Error Text data - field# 4.01
"RTN","IBCNBLE1",142,0)
 I ERRTXT'="" D SET^IBCNBLE(ERRTXT)
"RTN","IBCNBLE1",143,0)
 ;
"RTN","IBCNBLE1",144,0)
 ; Display Date of Future Transmission - field# .09 in file 365.1
"RTN","IBCNBLE1",145,0)
 I FUTDT D
"RTN","IBCNBLE1",146,0)
 . S FUTDT=$$FMTE^XLFDT(FUTDT,"5Z")
"RTN","IBCNBLE1",147,0)
 . D SET^IBCNBLE(" ")
"RTN","IBCNBLE1",148,0)
 . S IBLINE="     Date of Future Transmission:  "_FUTDT
"RTN","IBCNBLE1",149,0)
 . D SET^IBCNBLE(IBLINE) S IBLINE=""
"RTN","IBCNBLE1",150,0)
 . Q
"RTN","IBCNBLE1",151,0)
ECERRX ;
"RTN","IBCNBLE1",152,0)
 Q
"RTN","IBCNBLE1",153,0)
 ;
"RTN","IBCNBLE1",154,0)
SIDERR(BUF,PIEN) ;
"RTN","IBCNBLE1",155,0)
 ; If Subscriber ID is required and SSN cannot be substituted
"RTN","IBCNBLE1",156,0)
 ; and buffer does not have a sub id -> return error
"RTN","IBCNBLE1",157,0)
 ; BUF = buffer IEN
"RTN","IBCNBLE1",158,0)
 ; PIEN = payer IEN
"RTN","IBCNBLE1",159,0)
 ;
"RTN","IBCNBLE1",160,0)
 N ERR,SID,APPIEN,SIDSTR,SIDREQ,SIDSSN
"RTN","IBCNBLE1",161,0)
 S ERR=""
"RTN","IBCNBLE1",162,0)
 ;S SID=$P($G(^IBA(355.33,BUF,60)),U,4)  ; Patch 516 - baa
"RTN","IBCNBLE1",163,0)
 S SID=$$GET1^DIQ(355.33,BUF,90.03)  ; Patch 516 - baa
"RTN","IBCNBLE1",164,0)
 I SID]"" G SIDX  ; Subscriber id is populated, further checking is moot
"RTN","IBCNBLE1",165,0)
 S APPIEN=$$PYRAPP^IBCNEUT5("IIV",PIEN)
"RTN","IBCNBLE1",166,0)
 S SIDSTR=$G(^IBE(365.12,PIEN,1,APPIEN,0))
"RTN","IBCNBLE1",167,0)
 S SIDREQ=$P(SIDSTR,U,8) I 'SIDREQ G SIDX  ; if sub id is not req'd - ok
"RTN","IBCNBLE1",168,0)
 S SIDSSN=$P(SIDSTR,U,9)
"RTN","IBCNBLE1",169,0)
 I 'SIDSSN S ERR=18 ; if ssn cannot be used -> B15 status (IEN = 18)
"RTN","IBCNBLE1",170,0)
SIDX Q ERR
"RTN","IBCNBLE1",171,0)
 ;
"RTN","IBCNBLE1",172,0)
PIDERR(BUF) ;
"RTN","IBCNBLE1",173,0)
 ; If patient is a dependent and patient id is missing return error
"RTN","IBCNBLE1",174,0)
 ; BUF - buffer ien
"RTN","IBCNBLE1",175,0)
 ;
"RTN","IBCNBLE1",176,0)
 N ERR,PREL
"RTN","IBCNBLE1",177,0)
 S ERR=""
"RTN","IBCNBLE1",178,0)
 S PREL=$P($G(^IBA(355.33,BUF,60)),U,14)
"RTN","IBCNBLE1",179,0)
 I PREL'=18,PREL'="",$P($G(^IBA(355.33,BUF,62)),U)="" S ERR=23
"RTN","IBCNBLE1",180,0)
 Q ERR
"RTN","IBCNBLP")
0^58^B28291070^B25507553
"RTN","IBCNBLP",1,0)
IBCNBLP ;ALB/ARH-Ins Buffer: LM buffer process screen ;1 Jun 97
"RTN","IBCNBLP",2,0)
 ;;2.0;INTEGRATED BILLING;**82,497,516**;21-MAR-94;Build 123
"RTN","IBCNBLP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBLP",4,0)
 ;
"RTN","IBCNBLP",5,0)
EN ; - main entry point for screen
"RTN","IBCNBLP",6,0)
 D EN^VALM("IBCNB INSURANCE BUFFER PROCESS")
"RTN","IBCNBLP",7,0)
 Q
"RTN","IBCNBLP",8,0)
 ;
"RTN","IBCNBLP",9,0)
HDR ;  header code for list manager display
"RTN","IBCNBLP",10,0)
 N IBX,IB0,IBY,VADM,VA,VAERR S IBX=""
"RTN","IBCNBLP",11,0)
 ;I +DFN D DEM^VADPT S IBX=$E(VADM(1),1,28),IBX=IBX_$J("",35-$L(IBX))_$P(VADM(2),U,2)_"    DOB: "_$P(VADM(3),U,2)_"    AGE: "_VADM(4)
"RTN","IBCNBLP",12,0)
 ;S VALMHDR(1)=IBX
"RTN","IBCNBLP",13,0)
 ;S VALMHDR(2)=" "
"RTN","IBCNBLP",14,0)
 I +DFN D DEM^VADPT S IBX=$E(VADM(1),1,28)
"RTN","IBCNBLP",15,0)
 S VALMHDR(1)=IBX
"RTN","IBCNBLP",16,0)
 S VALMHDR(2)=$P(VADM(2),U,2)_"    DOB: "_$P(VADM(3),U,2)_"    AGE: "_VADM(4)
"RTN","IBCNBLP",17,0)
 S IB0=$G(^IBA(355.33,IBBUFDA,21))
"RTN","IBCNBLP",18,0)
 S IBY=$E($$GET1^DIQ(355.3,IBBUFDA,2.02),1,13),IBX=$P($G(^DIC(5,+$P(IB0,U,5),0)),U,2),IBY=IBY_$S(IBY'=""&(IBX'=""):", ",1:"")_IBX  ; 516 - baa
"RTN","IBCNBLP",19,0)
 S IBY=$E($P(IB0,U,1),1,20)_$S(IBY'="":", ",1:"")_IBY,IBY=$S(IBY'="":"   ("_IBY_")",1:"")
"RTN","IBCNBLP",20,0)
 S IBX=$E($P($G(^IBA(355.33,IBBUFDA,20)),U,1),1,18)_IBY,IBX=$J("",40-($L(IBX)\2))_IBX
"RTN","IBCNBLP",21,0)
 S VALMHDR(3)=IBX
"RTN","IBCNBLP",22,0)
 I +$G(IBCNSCRN) D GRPHDR(IBBUFDA) Q
"RTN","IBCNBLP",23,0)
 D PATHDR(IBBUFDA)
"RTN","IBCNBLP",24,0)
 Q
"RTN","IBCNBLP",25,0)
 ;
"RTN","IBCNBLP",26,0)
INIT ;  initialization for list manager list, ifn of record to display required IBBUFDA
"RTN","IBCNBLP",27,0)
 K ^TMP("IBCNBLP",$J),^TMP("IBCNBLPX",$J) N IBINSDA
"RTN","IBCNBLP",28,0)
 I '$G(IBBUFDA) S VALMQUIT="" Q
"RTN","IBCNBLP",29,0)
 S IBINSDA=+$G(IBCNSCRN)
"RTN","IBCNBLP",30,0)
 S DFN=+$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBLP",31,0)
 D BLD
"RTN","IBCNBLP",32,0)
 Q
"RTN","IBCNBLP",33,0)
 ;
"RTN","IBCNBLP",34,0)
HELP ;  list manager help
"RTN","IBCNBLP",35,0)
 D FULL^VALM1
"RTN","IBCNBLP",36,0)
 W !!,"This screen displays a summary of the chosen Buffer entry in the header."
"RTN","IBCNBLP",37,0)
 W !!,"The list portion of the screen may display either:"
"RTN","IBCNBLP",38,0)
 W !,?5,"1) a list of all of the patient's current and past insurance policies,"
"RTN","IBCNBLP",39,0)
 W !,?8,"followed by a list of any Group/Plan that has a Group Name or ",!,?8,"Group Number that may match the Buffer entry's."
"RTN","IBCNBLP",40,0)
 W !,?5,"2) a list of all of the Group/Plans for a user specified insurance company."
"RTN","IBCNBLP",41,0)
 W !!,"Use the 'Insurance Co/Patient' action to toggle between these two screens."
"RTN","IBCNBLP",42,0)
 W !!,"Flags:  '~'  company/group is inactive     '-'  individual patient policy"
"RTN","IBCNBLP",43,0)
 W !!,"Bold Data:  If one of the following Buffer File entry data elements matches all",!,"or the first part of the "
"RTN","IBCNBLP",44,0)
 W "corresponding data element of the policy or group/plan",!,"being displayed then the matching part of the data element will be displayed in",!,"bold characters:"
"RTN","IBCNBLP",45,0)
 W !," Subscriber Id, Insurance Company Name, Group Number, Group Name, Type of Plan"
"RTN","IBCNBLP",46,0)
 W !!,"Bold Number:  On the Group/Plan lists, the number preceding the group/plan being",!,"displayed will be in bold if the patient is already a member of that plan."
"RTN","IBCNBLP",47,0)
 W !!,"The IB INSURANCE SUPERVISOR key is required to either Accept or Reject an entry."
"RTN","IBCNBLP",48,0)
 D PAUSE^VALM1 S VALMBCK="R"
"RTN","IBCNBLP",49,0)
 Q
"RTN","IBCNBLP",50,0)
 ;
"RTN","IBCNBLP",51,0)
EXIT ;  exit list manager option and clean up
"RTN","IBCNBLP",52,0)
 K ^TMP("IBCNBLP",$J),^TMP("IBCNBLPX",$J),DFN,IBCNSCRN
"RTN","IBCNBLP",53,0)
 D CLEAR^VALM1
"RTN","IBCNBLP",54,0)
 Q
"RTN","IBCNBLP",55,0)
 ;
"RTN","IBCNBLP",56,0)
BLD ;  build screen display
"RTN","IBCNBLP",57,0)
 ;
"RTN","IBCNBLP",58,0)
 N PATCMP,GRPCMP,CNT S VALMCNT=0,CNT=0
"RTN","IBCNBLP",59,0)
 ;
"RTN","IBCNBLP",60,0)
 S PATCMP=$$PATDATA(IBBUFDA),GRPCMP=$$GRPDATA(IBBUFDA)
"RTN","IBCNBLP",61,0)
 ;
"RTN","IBCNBLP",62,0)
 I +$G(IBCNSCRN) D GRPLST^IBCNBLP1(.CNT,IBINSDA,DFN,GRPCMP) Q
"RTN","IBCNBLP",63,0)
 ;
"RTN","IBCNBLP",64,0)
 D PATLST^IBCNBLP1(.CNT,DFN,PATCMP)
"RTN","IBCNBLP",65,0)
 D SRCHLST^IBCNBLP1(.CNT,DFN,$P(PATCMP,U,1),$P(GRPCMP,U,1),$P(GRPCMP,U,2))
"RTN","IBCNBLP",66,0)
 Q
"RTN","IBCNBLP",67,0)
 ;
"RTN","IBCNBLP",68,0)
DATE(X) ;
"RTN","IBCNBLP",69,0)
 N Y S Y="" I X?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCNBLP",70,0)
 Q Y
"RTN","IBCNBLP",71,0)
 ;
"RTN","IBCNBLP",72,0)
 ;
"RTN","IBCNBLP",73,0)
PATHDR(IBBUFDA) ; additional header lines:  display buffer entry for display of existing patient's insurance screen
"RTN","IBCNBLP",74,0)
 Q:'IBBUFDA  N IBX,IBY,IB20,IB40,IB60 S IBX=""
"RTN","IBCNBLP",75,0)
 S IB20=$G(^IBA(355.33,IBBUFDA,20)),IB40=$G(^IBA(355.33,IBBUFDA,40)),IB60=$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBLP",76,0)
 ;
"RTN","IBCNBLP",77,0)
 S IBX="" I 'IB40 S IBY="-" S IBX=$$SETSTR^VALM1(IBY,IBX,4,1)
"RTN","IBCNBLP",78,0)
 S IBY=$P(IB20,U,1) S IBX=$$SETSTR^VALM1(IBY,IBX,5,18)
"RTN","IBCNBLP",79,0)
 ;IB*2.0*516/BAA - Use HIPAA compliant fields.
"RTN","IBCNBLP",80,0)
 S IBY=$$GET1^DIQ(355.33,IBBUFDA,90.02) S IBX=$$SETSTR^VALM1(IBY,IBX,25,13) ;516 - baa
"RTN","IBCNBLP",81,0)
 S IBY=$$GET1^DIQ(355.33,IBBUFDA,90.03) S IBX=$$SETSTR^VALM1(IBY,IBX,40,13) ;516 - baa
"RTN","IBCNBLP",82,0)
 S IBY=$P(IB60,U,6),IBY=$$EXPAND^IBTRE(355.33,60.06,IBY) S IBX=$$SETSTR^VALM1(IBY,IBX,55,6)
"RTN","IBCNBLP",83,0)
 S IBY=$$DATE($P(IB60,U,2)) S IBX=$$SETSTR^VALM1(IBY,IBX,63,8)
"RTN","IBCNBLP",84,0)
 S IBY=$$DATE($P(IB60,U,3)) S IBX=$$SETSTR^VALM1(IBY,IBX,73,8)
"RTN","IBCNBLP",85,0)
 S VALMHDR(4)=IBX
"RTN","IBCNBLP",86,0)
 Q
"RTN","IBCNBLP",87,0)
 ;
"RTN","IBCNBLP",88,0)
GRPHDR(IBBUFDA) ; additional header lines:  display buffer entry for display of other insurance group plans screen
"RTN","IBCNBLP",89,0)
 Q:'IBBUFDA  N IBX,IBY,IB40 S IBX=""
"RTN","IBCNBLP",90,0)
 S IB40=$G(^IBA(355.33,IBBUFDA,40))
"RTN","IBCNBLP",91,0)
 ;
"RTN","IBCNBLP",92,0)
 S IBX="" I 'IB40 S IBY="-" S IBX=$$SETSTR^VALM1(IBY,IBX,5,1)
"RTN","IBCNBLP",93,0)
 ;S IBY=$P(IB40,U,2) S IBX=$$SETSTR^VALM1(IBY,IBX,6,20)
"RTN","IBCNBLP",94,0)
 ;S IBY=$P(IB40,U,3) S IBX=$$SETSTR^VALM1(IBY,IBX,30,17)
"RTN","IBCNBLP",95,0)
 S IBY=$$GET1^DIQ(355.33,IBBUFDA,90.01) S IBX=$$SETSTR^VALM1(IBY,IBX,6,80)  ; 516 - baa - new grp nam field
"RTN","IBCNBLP",96,0)
 S VALMHDR(4)=IBX
"RTN","IBCNBLP",97,0)
 S IBY=$$GET1^DIQ(355.33,IBBUFDA,90.02) S IBX=$$SETSTR^VALM1(IBY,IBX,6,55)  ; 516 - baa - new grp num field
"RTN","IBCNBLP",98,0)
 S VALMHDR(5)=IBX
"RTN","IBCNBLP",99,0)
 ;S IBY=$P(IB40,U,9) I +IBY S IBY=$P($G(^IBE(355.1,+IBY,0)),U,1) S IBX=$$SETSTR^VALM1(IBY,IBX,50,30)
"RTN","IBCNBLP",100,0)
 S IBY=$P(IB40,U,9) I +IBY S IBY=$P($G(^IBE(355.1,+IBY,0)),U,1) S IBX=$$SETSTR^VALM1(IBY,IBX,6,30)
"RTN","IBCNBLP",101,0)
 S VALMHDR(6)=IBX
"RTN","IBCNBLP",102,0)
 Q
"RTN","IBCNBLP",103,0)
 ;
"RTN","IBCNBLP",104,0)
PATDATA(IBBUFDA) ; create string of data from buffer entry to compare with data in existing insurance entries
"RTN","IBCNBLP",105,0)
 ; for the patient insurance list compare:  INS COMPANY NAME ^ GROUP NUMBER ^ SUBSCRIBER ID
"RTN","IBCNBLP",106,0)
 N IBX
"RTN","IBCNBLP",107,0)
 S IBX=$P($G(^IBA(355.33,IBBUFDA,20)),U,1)_U_$$GET1^DIQ(355.33,IBBUFDA,90.02)_U_$$GET1^DIQ(355.33,IBBUFDA,90.03) ;516 - baa
"RTN","IBCNBLP",108,0)
 Q IBX
"RTN","IBCNBLP",109,0)
 ;
"RTN","IBCNBLP",110,0)
GRPDATA(IBBUFDA) ; create string of data from buffer entry to compare with data in existing insurance entries
"RTN","IBCNBLP",111,0)
 ; for the group plan list compare:  GROUP NAME ^ GROUP NUMBER ^ TYPE OF PLAN
"RTN","IBCNBLP",112,0)
 N IBX,IBY,IBGNAM,IBGNUM
"RTN","IBCNBLP",113,0)
 S IBY=$G(^IBA(355.33,IBBUFDA,40))
"RTN","IBCNBLP",114,0)
 ; 516 - baa - get new group name and number fields
"RTN","IBCNBLP",115,0)
 S IBGNAM=$$GET1^DIQ(355.33,IBBUFDA,90.01)
"RTN","IBCNBLP",116,0)
 S IBGNUM=$$GET1^DIQ(355.33,IBBUFDA,90.02)
"RTN","IBCNBLP",117,0)
 S IBX=IBGNAM_U_IBGNUM_U_$P($G(^IBE(355.1,+$P(IBY,U,9),0)),U,1)
"RTN","IBCNBLP",118,0)
 ; end Patch 516 - baa
"RTN","IBCNBLP",119,0)
 Q IBX
"RTN","IBCNBLP1")
0^59^B34470080^B31255881
"RTN","IBCNBLP1",1,0)
IBCNBLP1 ;ALB/ARH-Ins Buffer: LM buffer process build ;1 Jun 97
"RTN","IBCNBLP1",2,0)
 ;;2.0;INTEGRATED BILLING;**82,133,516**;21-MAR-94;Build 123
"RTN","IBCNBLP1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBLP1",4,0)
 ;
"RTN","IBCNBLP1",5,0)
 ;
"RTN","IBCNBLP1",6,0)
PATLST(IBCNT,DFN,CMPDATA) ; collect and display all the patients insurance policies
"RTN","IBCNBLP1",7,0)
 ; if the buffer field data (CMPDATA) matches the displayed insurance entry's data, then that data is displayed in bold
"RTN","IBCNBLP1",8,0)
 N IBINS,IBY,IBX,IB0,IBG0,IBI0,IBLINE,IBPLDA,IBBOLD,IBFND,IBDA S IBFND=0,IBCNT=+$G(IBCNT)
"RTN","IBCNBLP1",9,0)
 ;
"RTN","IBCNBLP1",10,0)
 D ALL^IBCNS1(DFN,"IBINS")
"RTN","IBCNBLP1",11,0)
 ;
"RTN","IBCNBLP1",12,0)
 S IBY=$J("",26)_"Patient's Existing Insurance" D SET(IBY,1,"","R")
"RTN","IBCNBLP1",13,0)
 S IBY="   Insurance Company    Group #        Subscriber Id  Holder  Effective Expires" D SET(IBY,1,"","U")
"RTN","IBCNBLP1",14,0)
 ;
"RTN","IBCNBLP1",15,0)
 S IBPLDA=0 F  S IBPLDA=$O(IBINS(IBPLDA)) Q:'IBPLDA  D
"RTN","IBCNBLP1",16,0)
 . S IB0=IBINS(IBPLDA,0),IBG0=$G(^IBA(355.3,+$P(IB0,U,18),0)),IBI0=$G(^DIC(36,+IB0,0)),IBCNT=IBCNT+1,IBFND=1
"RTN","IBCNBLP1",17,0)
 . S IBY=IBCNT S IBLINE=$$SETSTR(IBY,"",1,3)
"RTN","IBCNBLP1",18,0)
 . S IBY=$S(+$P(IBI0,U,5):"~",+$P(IBG0,U,11):"~",'$P(IBG0,U,2):"-",1:"") S IBLINE=$$SETSTR(IBY,IBLINE,4,1)
"RTN","IBCNBLP1",19,0)
 . S IBY=$P(IBI0,U,1) S IBLINE=$$SETSTR(IBY,IBLINE,5,18,$P(CMPDATA,U,1))
"RTN","IBCNBLP1",20,0)
 . S IBY=$P(IB0,U,3) S IBLINE=$$SETSTR(IBY,IBLINE,25,13,$P(CMPDATA,U,2))
"RTN","IBCNBLP1",21,0)
 . S IBY=$P(IB0,U,2) S IBLINE=$$SETSTR(IBY,IBLINE,40,13,$P(CMPDATA,U,3))
"RTN","IBCNBLP1",22,0)
 . S IBY=$P(IB0,U,16),IBY=$$EXPAND^IBTRE(355.33,60.06,IBY) S IBLINE=$$SETSTR(IBY,IBLINE,55,6)
"RTN","IBCNBLP1",23,0)
 . S IBY=$$DATE($P(IB0,U,8)) S IBLINE=$$SETSTR(IBY,IBLINE,63,8)
"RTN","IBCNBLP1",24,0)
 . S IBY=$$DATE($P(IB0,U,4)) S IBLINE=$$SETSTR(IBY,IBLINE,73,8)
"RTN","IBCNBLP1",25,0)
 . S IBDA=+IB0_U_+$P(IB0,U,18)_U_IBPLDA_U_+DFN
"RTN","IBCNBLP1",26,0)
 . D SET(IBLINE,IBCNT,IBDA)
"RTN","IBCNBLP1",27,0)
 ;
"RTN","IBCNBLP1",28,0)
 I 'IBFND D SET("",1),SET("   No Insurance Policies on file for this patient.",1),SET("",1)
"RTN","IBCNBLP1",29,0)
 Q
"RTN","IBCNBLP1",30,0)
 ;
"RTN","IBCNBLP1",31,0)
GRPLST(IBCNT,IBINSDA,DFN,CMPDATA) ; display insurance group/plans for a specific company
"RTN","IBCNBLP1",32,0)
 ; if the buffer field data (CMPDATA) matches the displayed insurance entry's data, then that data is displayed in bold
"RTN","IBCNBLP1",33,0)
 ; if the buffer entry's patient is already a member of the group/plan then the record's number is displayed in bold
"RTN","IBCNBLP1",34,0)
 N IBX,IBY,IBGRPDA,IBPOLDA,IB0,IBI0,IBLINE,IBBOLD,IBFND,IBDA S IBFND=0,IBCNT=+$G(IBCNT),IBI0=$G(^DIC(36,IBINSDA,0))
"RTN","IBCNBLP1",35,0)
 ;
"RTN","IBCNBLP1",36,0)
 S IBX="Existing Plans for "_$P(IBI0,U,1)_"  ("_$P($G(^DIC(36,IBINSDA,.11)),U,1)_")"
"RTN","IBCNBLP1",37,0)
 S IBY=$J("",40-($L(IBX)\2))_IBX D SET(IBY,1,"","R")
"RTN","IBCNBLP1",38,0)
 S IBY="     Group Name              Group #             Type of Plan" D SET(IBY,1,"","U")
"RTN","IBCNBLP1",39,0)
 ;
"RTN","IBCNBLP1",40,0)
 S IBGRPDA=0 F  S IBGRPDA=$O(^IBA(355.3,"B",IBINSDA,IBGRPDA)) Q:'IBGRPDA  D
"RTN","IBCNBLP1",41,0)
 . S IB0=$G(^IBA(355.3,IBGRPDA,0)) I +$G(DFN),$P(IB0,U,2)=0,$P(IB0,U,10)'=DFN Q
"RTN","IBCNBLP1",42,0)
 . S IBCNT=IBCNT+1,IBFND=1,IBPOLDA=$$PTGRP^IBCNBU1(DFN,IBINSDA,IBGRPDA)
"RTN","IBCNBLP1",43,0)
 . S IBY=IBCNT S IBLINE=$$SETSTR(IBY,"",1,4,$S(+IBPOLDA:IBY,1:""))
"RTN","IBCNBLP1",44,0)
 . S IBY=$S(+$P(IBI0,U,5):"~",+$P(IB0,U,11):"~",'$P(IB0,U,2):"-",1:"") S IBLINE=$$SETSTR(IBY,IBLINE,5,1)
"RTN","IBCNBLP1",45,0)
 . S IBY=$$GET1^DIQ(355.3,IBGRPDA,2.01) S:IBY=""&('$P(IB0,U,2)) IBY="<individual policy>" S IBLINE=$$SETSTR(IBY,IBLINE,6,20,$P(CMPDATA,U,1))
"RTN","IBCNBLP1",46,0)
 . S IBY=$$GET1^DIQ(355.3,IBGRPDA,2.02) S IBLINE=$$SETSTR(IBY,IBLINE,30,17,$P(CMPDATA,U,2))
"RTN","IBCNBLP1",47,0)
 . S IBY=$P(IB0,U,9) I +IBY S IBY=$P($G(^IBE(355.1,+IBY,0)),U,1) S IBLINE=$$SETSTR(IBY,IBLINE,50,30,$P(CMPDATA,U,3))
"RTN","IBCNBLP1",48,0)
 . S IBDA=+IB0_U_+IBGRPDA_U_+IBPOLDA_U_DFN
"RTN","IBCNBLP1",49,0)
 . D SET(IBLINE,IBCNT,IBDA)
"RTN","IBCNBLP1",50,0)
 ;
"RTN","IBCNBLP1",51,0)
 I 'IBFND D SET("",1),SET("   No Insurance Group/Plans on file for this Insurance Company.",1),SET("",1)
"RTN","IBCNBLP1",52,0)
 Q
"RTN","IBCNBLP1",53,0)
 ;
"RTN","IBCNBLP1",54,0)
SRCHLST(IBCNT,DFN,INSNM,GRPNM,GRPNUM) ; display any insurance group/plan that matchs either group name or group number
"RTN","IBCNBLP1",55,0)
 ; if the buffer field data (CMPDATA) matches the displayed insurance entry's data, then that data is displayed in bold
"RTN","IBCNBLP1",56,0)
 ; if the buffer entry's patient is already a member of the group/plan then the record's number is displayed in bold
"RTN","IBCNBLP1",57,0)
 ;
"RTN","IBCNBLP1",58,0)
 N IBX,IBY,IBCX,IBFDATA,IBGRPDA,IBPOLDA,IB0,IBI0,IBLINE,IBBOLD,IBFND,IBDA,IBFD,IBLNS
"RTN","IBCNBLP1",59,0)
 S IBFND=0,IBCNT=+$G(IBCNT),IBLNS=$S(+IBCNT:IBCNT,1:1) K ^TMP($J,"IBCNBLPG")
"RTN","IBCNBLP1",60,0)
 ;
"RTN","IBCNBLP1",61,0)
 S IBY=$J(" ",80) D SET(IBY,IBLNS)
"RTN","IBCNBLP1",62,0)
 S IBX="Any Group/Plan that may match Group Name or Group Number",IBY=$J("",40-($L(IBX)\2))_IBX D SET(IBY,IBLNS,"","R")
"RTN","IBCNBLP1",63,0)
 S IBY="     Insurance Company                  Group Name            Group Number" D SET(IBY,IBLNS,"","U")
"RTN","IBCNBLP1",64,0)
 ;
"RTN","IBCNBLP1",65,0)
 F IBCX="D","E" S IBFDATA=$S(IBCX="D":$G(GRPNM),1:$G(GRPNUM)) I IBFDATA'=""  D
"RTN","IBCNBLP1",66,0)
 . S IBFD=$$PREV(IBFDATA) F  S IBFD=$O(^IBA(355.3,IBCX,IBFD)) Q:IBFD=""!(IBFD'[IBFDATA)  D
"RTN","IBCNBLP1",67,0)
 .. S IBGRPDA=0 F  S IBGRPDA=$O(^IBA(355.3,IBCX,IBFD,IBGRPDA)) Q:IBGRPDA=""  D
"RTN","IBCNBLP1",68,0)
 ... Q:$D(^TMP($J,"IBCNBLPG",IBGRPDA))  S ^TMP($J,"IBCNBLPG",IBGRPDA)=""
"RTN","IBCNBLP1",69,0)
 ... S IB0=$G(^IBA(355.3,IBGRPDA,0)) I +$G(DFN),$P(IB0,U,2)=0,$P(IB0,U,10)'=DFN Q
"RTN","IBCNBLP1",70,0)
 ... S IBCNT=IBCNT+1,IBFND=1,IBPOLDA=+$$PTGRP^IBCNBU1(DFN,+IB0,IBGRPDA),IBI0=$G(^DIC(36,+IB0,0))
"RTN","IBCNBLP1",71,0)
 ... S IBY=IBCNT S IBLINE=$$SETSTR(IBY,"",1,4,$S(IBPOLDA:IBY,1:""))
"RTN","IBCNBLP1",72,0)
 ... S IBY=$S(+$P(IBI0,U,5):"~",+$P(IB0,U,11):"~",'$P(IB0,U,2):"-",1:"") S IBLINE=$$SETSTR(IBY,IBLINE,5,1)
"RTN","IBCNBLP1",73,0)
 ... S IBY=$P(IBI0,U,1) S IBLINE=$$SETSTR(IBY,IBLINE,6,18,$G(INSNM))
"RTN","IBCNBLP1",74,0)
 ... S IBY=$P($G(^DIC(36,+IB0,.11)),U,1) S IBLINE=$$SETSTR(IBY,IBLINE,26,13)
"RTN","IBCNBLP1",75,0)
 ... ;IB*2.0*516/BAA - Use HIPAA compliant fields
"RTN","IBCNBLP1",76,0)
 ... ;S IBY=$P(IB0,U,3) S:IBY=""&('$P(IB0,U,2)) IBY="<individual policy>" S IBLINE=$$SETSTR(IBY,IBLINE,41,20,$G(GRPNM))
"RTN","IBCNBLP1",77,0)
 ... ;S IBY=$P(IB0,U,4) S IBLINE=$$SETSTR(IBY,IBLINE,63,17,$G(GRPNUM))
"RTN","IBCNBLP1",78,0)
 ... S IBY=$$GET1^DIQ(355.3,IBGRPDA,2.01) S:IBY=""&('$P(IB0,U,2)) IBY="<individual policy>" S IBLINE=$$SETSTR(IBY,IBLINE,41,20,$G(GRPNM))  ;516 - baa
"RTN","IBCNBLP1",79,0)
 ... S IBY=$$GET1^DIQ(355.3,IBGRPDA,2.02) S IBLINE=$$SETSTR(IBY,IBLINE,63,17,$G(GRPNUM))  ; 516 - baa
"RTN","IBCNBLP1",80,0)
 ... S IBDA=+IB0_U_IBGRPDA_U_+IBPOLDA_U_DFN
"RTN","IBCNBLP1",81,0)
 ... D SET(IBLINE,IBCNT,IBDA)
"RTN","IBCNBLP1",82,0)
 ;
"RTN","IBCNBLP1",83,0)
 I 'IBFND D SET("",IBCNT),SET(" No Group/Plans found that Match the buffer entry's Group Name or Group Number.",IBCNT),SET("",IBCNT)
"RTN","IBCNBLP1",84,0)
 K ^TMP($J,"IBCNBLPG")
"RTN","IBCNBLP1",85,0)
 Q
"RTN","IBCNBLP1",86,0)
 ;
"RTN","IBCNBLP1",87,0)
SETSTR(DATA,LINE,COL,LNG,CMPDATA) ; save data in formated line, if data matchs compare data save string position for bolding
"RTN","IBCNBLP1",88,0)
 S LINE=$$SETSTR^VALM1(DATA,LINE,COL,LNG)
"RTN","IBCNBLP1",89,0)
 I $D(CMPDATA),DATA=CMPDATA S IBBOLD=$G(IBBOLD)_COL_";"_LNG_"^"
"RTN","IBCNBLP1",90,0)
 I $D(CMPDATA),DATA'=CMPDATA,$E(DATA,1,$L(CMPDATA))[CMPDATA S IBBOLD=$G(IBBOLD)_COL_";"_$L(CMPDATA)_"^"
"RTN","IBCNBLP1",91,0)
 Q LINE
"RTN","IBCNBLP1",92,0)
 ;
"RTN","IBCNBLP1",93,0)
SET(LINE,CNT,IBDA,SPEC) ;
"RTN","IBCNBLP1",94,0)
 S VALMCNT=VALMCNT+1 N IBX,IBI
"RTN","IBCNBLP1",95,0)
 S ^TMP("IBCNBLP",$J,VALMCNT,0)=LINE
"RTN","IBCNBLP1",96,0)
 I +$G(CNT) S ^TMP("IBCNBLP",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBCNBLP1",97,0)
 I +$G(CNT),+$G(IBDA) S ^TMP("IBCNBLPX",$J,+CNT)=VALMCNT_U_IBDA
"RTN","IBCNBLP1",98,0)
 I $G(SPEC)="U" D CNTRL^VALM10(VALMCNT,1,80,IOUON,IOUOFF)
"RTN","IBCNBLP1",99,0)
 I $G(SPEC)="B" D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM)
"RTN","IBCNBLP1",100,0)
 I $G(SPEC)="R" D CNTRL^VALM10(VALMCNT,1,80,IORVON,IORVOFF)
"RTN","IBCNBLP1",101,0)
 I $D(IBBOLD) F IBI=1:1 S IBX=$P(IBBOLD,U,IBI) Q:IBX=""  D
"RTN","IBCNBLP1",102,0)
 . D CNTRL^VALM10(VALMCNT,$P(IBX,";",1),$P(IBX,";",2),IOINHI,IOINORM)
"RTN","IBCNBLP1",103,0)
 K IBBOLD
"RTN","IBCNBLP1",104,0)
 Q
"RTN","IBCNBLP1",105,0)
 ;
"RTN","IBCNBLP1",106,0)
DATE(X) ;
"RTN","IBCNBLP1",107,0)
 N Y S Y="" I X?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCNBLP1",108,0)
 Q Y
"RTN","IBCNBLP1",109,0)
 ;
"RTN","IBCNBLP1",110,0)
PREV(STRING) ; return previous ascii value of the string for collating
"RTN","IBCNBLP1",111,0)
 N IBL,IBX S IBL=$L(STRING),IBX=$E(STRING,1,IBL-1)_$C($A($E(STRING,IBL))-1)_"~"
"RTN","IBCNBLP1",112,0)
 Q IBX
"RTN","IBCNEHLQ")
0^60^B49920378^B46752354
"RTN","IBCNEHLQ",1,0)
IBCNEHLQ ;DAOU/ALA - HL7 RQI Message ;17-JUN-2002
"RTN","IBCNEHLQ",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,300,361,416,438,467,497,533,516**;21-MAR-94;Build 123
"RTN","IBCNEHLQ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNEHLQ",4,0)
 ;
"RTN","IBCNEHLQ",5,0)
 ;**Program Description**
"RTN","IBCNEHLQ",6,0)
 ;  This routine builds an eIV Verification (RQI^I01) or
"RTN","IBCNEHLQ",7,0)
 ;  Identification (RQI^I03) request
"RTN","IBCNEHLQ",8,0)
 ;
"RTN","IBCNEHLQ",9,0)
 ;**Modified by  Date        Reason
"RTN","IBCNEHLQ",10,0)
 ;  DAOU/BHS     10/04/2002  Implementing Transmit SSN logic
"RTN","IBCNEHLQ",11,0)
 ;  DAOU/DB      03/19/2004  Stripped dashes from SSN (PID, GT1)
"RTN","IBCNEHLQ",12,0)
 ;
"RTN","IBCNEHLQ",13,0)
EN ;  Entry Point
"RTN","IBCNEHLQ",14,0)
 ;  Variables
"RTN","IBCNEHLQ",15,0)
 ;    HLFS = Field Separator
"RTN","IBCNEHLQ",16,0)
 ;    DFN = Patient IEN
"RTN","IBCNEHLQ",17,0)
 ;    PAYR = Payer IEN
"RTN","IBCNEHLQ",18,0)
 ;    BUFF = Buffer IEN
"RTN","IBCNEHLQ",19,0)
 ;    FRDT = Freshness Date
"RTN","IBCNEHLQ",20,0)
 ;
"RTN","IBCNEHLQ",21,0)
PID ; Patient Identification Segment
"RTN","IBCNEHLQ",22,0)
 N VAFSTR,ICN,NM,I,PID11,EDQ,IBWHO
"RTN","IBCNEHLQ",23,0)
 S VAFSTR=",1,7,8,11,",DFN=+$G(DFN)
"RTN","IBCNEHLQ",24,0)
 S PID=$$EN^VAFHLPID(DFN,VAFSTR,1)
"RTN","IBCNEHLQ",25,0)
 S PID11=$P(PID,HLFS,12)
"RTN","IBCNEHLQ",26,0)
 I $P(PID11,HLECH,2)="""""" D
"RTN","IBCNEHLQ",27,0)
 . S $P(PID11,HLECH,2)=""
"RTN","IBCNEHLQ",28,0)
 . S $P(PID,HLFS,12)=PID11
"RTN","IBCNEHLQ",29,0)
 ; Encode special characters into Name and address pieces
"RTN","IBCNEHLQ",30,0)
 ; **NOTE: If $$EN^VAFHLPID should, in the future, return more than 11 pieces than the lines below may
"RTN","IBCNEHLQ",31,0)
 ;         need to be modified as they currently expect 11 pieces to be returned.
"RTN","IBCNEHLQ",32,0)
 I DFN D
"RTN","IBCNEHLQ",33,0)
 .; try to get name of insured from NAME OF INSURED
"RTN","IBCNEHLQ",34,0)
 .I EXT'=1,$G(IRIEN)'="" D
"RTN","IBCNEHLQ",35,0)
 .. S IBWHO=$P($G(^DPT(DFN,.312,IRIEN,0)),U,6)
"RTN","IBCNEHLQ",36,0)
 .. I IBWHO'="",IBWHO'="v" Q
"RTN","IBCNEHLQ",37,0)
 .. S NM=$P($G(^DPT(DFN,.312,IRIEN,7)),U,1)
"RTN","IBCNEHLQ",38,0)
 .I EXT=1,BUFF,$G(NM)="" D
"RTN","IBCNEHLQ",39,0)
 .. S IBWHO=$P($G(^IBA(355.33,BUFF,60)),U,5)
"RTN","IBCNEHLQ",40,0)
 .. I IBWHO'="",IBWHO'="v" Q
"RTN","IBCNEHLQ",41,0)
 .. S NM=$P($G(^IBA(355.33,BUFF,91)),U)
"RTN","IBCNEHLQ",42,0)
 .I $G(NM)'="" S NM=$$HLNAME^HLFNC(NM,HLECH)
"RTN","IBCNEHLQ",43,0)
 .; if unsuccessful, get patient name from 2/.01
"RTN","IBCNEHLQ",44,0)
 .I $G(NM)="" D
"RTN","IBCNEHLQ",45,0)
 ..S NM("FILE")=2,NM("IENS")=DFN,NM("FIELD")=.01
"RTN","IBCNEHLQ",46,0)
 ..S NM=$$HLNAME^XLFNAME(.NM,"",$E(HLECH)),NM=$S(NM]"":NM,1:HLQ)
"RTN","IBCNEHLQ",47,0)
 ..Q
"RTN","IBCNEHLQ",48,0)
 .S I=$L(NM,HLFS),NM=$$ENCHL7(NM),$P(PID,HLFS,6,5+I)=NM
"RTN","IBCNEHLQ",49,0)
 .S $P(PID,HLFS,12,99)=$$ENCHL7($P(PID,HLFS,12,99))
"RTN","IBCNEHLQ",50,0)
 .S ICN=$P($G(^DPT(DFN,"MPI")),U,1)
"RTN","IBCNEHLQ",51,0)
 .S $P(PID,HLFS,4)=ICN_HLECH_HLECH_HLECH_"USVHA"_HLECH_"NI"_HLECH_"~"_DFN_HLECH_HLECH_HLECH_"USVHA"_HLECH_"PI"_HLECH_$P($$SITE^VASITE,U,3)_HLECH
"RTN","IBCNEHLQ",52,0)
 .Q
"RTN","IBCNEHLQ",53,0)
 S FRDT=$$HLDATE^HLFNC($G(FRDT))
"RTN","IBCNEHLQ",54,0)
 S $P(PID,HLFS,34)=FRDT
"RTN","IBCNEHLQ",55,0)
 Q
"RTN","IBCNEHLQ",56,0)
 ;
"RTN","IBCNEHLQ",57,0)
GT1 ;  Guarantor Segment
"RTN","IBCNEHLQ",58,0)
 N WHO,NM,IDOB,ISEX,SEX,RLIEN,PER,PLIEN,RDATA,IBSDATA,IBADDR
"RTN","IBCNEHLQ",59,0)
 ;
"RTN","IBCNEHLQ",60,0)
 S GT1=""
"RTN","IBCNEHLQ",61,0)
 I $G(QUERY)="I" Q
"RTN","IBCNEHLQ",62,0)
 ;
"RTN","IBCNEHLQ",63,0)
 ;  If the data was extracted from Buffer get specifics from Buffer file
"RTN","IBCNEHLQ",64,0)
 I EXT=1 D
"RTN","IBCNEHLQ",65,0)
 . S WHO=$P($G(^IBA(355.33,BUFF,60)),U,5)
"RTN","IBCNEHLQ",66,0)
 . I WHO="v"!(WHO="") Q
"RTN","IBCNEHLQ",67,0)
 . ;S NM=$P($G(^IBA(355.33,BUFF,60)),U,7),NM=$$NAME^IBCNEHLU(NM)
"RTN","IBCNEHLQ",68,0)
 . S NM=$$GET1^DIQ(355.33,BUFF,91.01),NM=$$NAME^IBCNEHLU(NM) ;Get HIPAA data from new fields - IB*2*516
"RTN","IBCNEHLQ",69,0)
 . S NM=$$HLNAME^HLFNC(NM,HLECH)
"RTN","IBCNEHLQ",70,0)
 . S NM=$$ENCHL7(NM)
"RTN","IBCNEHLQ",71,0)
 . S $P(GT1,HLFS,3)=NM_HLECH_HLECH_HLECH
"RTN","IBCNEHLQ",72,0)
 . S IDOB=$P($G(^IBA(355.33,BUFF,60)),U,8),IDOB=$$HLDATE^HLFNC(IDOB)
"RTN","IBCNEHLQ",73,0)
 . S $P(GT1,HLFS,8)=IDOB
"RTN","IBCNEHLQ",74,0)
 . S $P(GT1,HLFS,2)=$$SCRUB($G(SUBID))_HLECH_HLECH_HLECH_HLECH_"HC"
"RTN","IBCNEHLQ",75,0)
 . Q
"RTN","IBCNEHLQ",76,0)
 ;
"RTN","IBCNEHLQ",77,0)
 ;  If the data was extracted from non-Buffer, check Patient file
"RTN","IBCNEHLQ",78,0)
 I EXT'=1 D
"RTN","IBCNEHLQ",79,0)
 . I IRIEN="" Q
"RTN","IBCNEHLQ",80,0)
 . S WHO=$P($G(^DPT(DFN,.312,IRIEN,0)),U,6)
"RTN","IBCNEHLQ",81,0)
 . I WHO="v"!(WHO="") Q
"RTN","IBCNEHLQ",82,0)
 . ;S NM=$P($G(^DPT(DFN,.312,IRIEN,0)),U,17)  ; WCJ;IB*2.0*497
"RTN","IBCNEHLQ",83,0)
 . S NM=$P($G(^DPT(DFN,.312,IRIEN,7)),U,1)  ; WCJ;IB*2.0*497
"RTN","IBCNEHLQ",84,0)
 . S NM=$$HLNAME^HLFNC(NM,HLECH)
"RTN","IBCNEHLQ",85,0)
 . S NM=$$ENCHL7(NM)
"RTN","IBCNEHLQ",86,0)
 . S $P(GT1,HLFS,3)=NM_HLECH_HLECH_HLECH
"RTN","IBCNEHLQ",87,0)
 . S IDOB=$P($G(^DPT(DFN,.312,IRIEN,3)),U,1),IDOB=$$HLDATE^HLFNC(IDOB)
"RTN","IBCNEHLQ",88,0)
 . S $P(GT1,HLFS,8)=IDOB
"RTN","IBCNEHLQ",89,0)
 . S $P(GT1,HLFS,2)=$$SCRUB($G(SUBID))_HLECH_HLECH_HLECH_HLECH_"HC"
"RTN","IBCNEHLQ",90,0)
 . ;
"RTN","IBCNEHLQ",91,0)
 . S IBSDATA=$G(^DPT(DFN,.312,IRIEN,3))
"RTN","IBCNEHLQ",92,0)
 . S IBADDR=$$HLADDR^HLFNC($P(IBSDATA,U,6,7),$P(IBSDATA,U,8,10))
"RTN","IBCNEHLQ",93,0)
 . S $P(GT1,HLFS,5)=$$ENCHL7(IBADDR)
"RTN","IBCNEHLQ",94,0)
 . ;
"RTN","IBCNEHLQ",95,0)
 . D CHK
"RTN","IBCNEHLQ",96,0)
 . I $P(GT1,HLFS,8)=""&(IDOB'="") S $P(GT1,HLFS,8)=$$HLDATE^HLFNC(IDOB)
"RTN","IBCNEHLQ",97,0)
 . I $P(GT1,HLFS,9)=""&(ISEX'="") S $P(GT1,HLFS,9)=ISEX
"RTN","IBCNEHLQ",98,0)
 . I $P(GT1,HLFS,9)="",WHO="s" D
"RTN","IBCNEHLQ",99,0)
 .. S SEX=$P($G(^DPT(DFN,.312,IRIEN,3)),U,12) ; get policy holder sex
"RTN","IBCNEHLQ",100,0)
 .. I SEX="" S SEX=$P(^DPT(DFN,0),U,2),SEX=$S(SEX="M":"F",1:"M") ; if null, use alternative method
"RTN","IBCNEHLQ",101,0)
 .. S $P(GT1,HLFS,9)=SEX
"RTN","IBCNEHLQ",102,0)
 ;
"RTN","IBCNEHLQ",103,0)
 I GT1="" Q
"RTN","IBCNEHLQ",104,0)
 S $P(GT1,HLFS,1)=1
"RTN","IBCNEHLQ",105,0)
 S GT1="GT1"_HLFS_GT1
"RTN","IBCNEHLQ",106,0)
 Q
"RTN","IBCNEHLQ",107,0)
 ;
"RTN","IBCNEHLQ",108,0)
IN1 ;  Insurance Segment
"RTN","IBCNEHLQ",109,0)
 N EFFDT,ELIGDT,EXPDT,PREL,ADMN,ADMDT,IENS
"RTN","IBCNEHLQ",110,0)
 S IN1=""
"RTN","IBCNEHLQ",111,0)
 ;
"RTN","IBCNEHLQ",112,0)
 ;  If the data was extracted from Buffer get specifics from Buffer file
"RTN","IBCNEHLQ",113,0)
 I EXT=1 D
"RTN","IBCNEHLQ",114,0)
 .S PREL=$P($G(^IBA(355.33,BUFF,60)),U,14)
"RTN","IBCNEHLQ",115,0)
 .S ELIGDT=$P($G(TRANSR),U,12) I ELIGDT=DT S ELIGDT=""
"RTN","IBCNEHLQ",116,0)
 .S $P(IN1,HLFS,2)=$S(PREL=18:$$SCRUB($G(SUBID)),PREL="":$$SCRUB($G(SUBID)),1:$$SCRUB($G(PATID)))
"RTN","IBCNEHLQ",117,0)
 .I PAYR'=$$FIND1^DIC(365.12,"","X","~NO PAYER") D
"RTN","IBCNEHLQ",118,0)
 ..S $P(IN1,HLFS,3)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,2))_HLECH_HLECH_HLECH_"USVHA"_HLECH_"VP"_HLECH
"RTN","IBCNEHLQ",119,0)
 ..S $P(IN1,HLFS,4)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,1))
"RTN","IBCNEHLQ",120,0)
 . ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBCNEHLQ",121,0)
 .;S $P(IN1,HLFS,8)=$$ENCHL7($P($G(^IBA(355.33,BUFF,40)),U,3))
"RTN","IBCNEHLQ",122,0)
 .;S $P(IN1,HLFS,9)=$$ENCHL7($P($G(^IBA(355.33,BUFF,40)),U,2))
"RTN","IBCNEHLQ",123,0)
 .S $P(IN1,HLFS,8)=$$ENCHL7($$GET1^DIQ(355.33,BUFF_",",90.02))
"RTN","IBCNEHLQ",124,0)
 .S $P(IN1,HLFS,9)=$$ENCHL7($$GET1^DIQ(355.33,BUFF_",",90.01))
"RTN","IBCNEHLQ",125,0)
 .S EFFDT=$P($G(^IBA(355.33,BUFF,60)),U,2),EFFDT=$$HLDATE^HLFNC(EFFDT)
"RTN","IBCNEHLQ",126,0)
 .S EXPDT=$P($G(^IBA(355.33,BUFF,60)),U,3),EXPDT=$$HLDATE^HLFNC(EXPDT)
"RTN","IBCNEHLQ",127,0)
 .S $P(IN1,HLFS,12)=EFFDT
"RTN","IBCNEHLQ",128,0)
 .S $P(IN1,HLFS,13)=EXPDT
"RTN","IBCNEHLQ",129,0)
 .S $P(IN1,HLFS,17)=$$PATREL(PREL)
"RTN","IBCNEHLQ",130,0)
 .S $P(IN1,HLFS,26)=$$HLDATE^HLFNC(ELIGDT)
"RTN","IBCNEHLQ",131,0)
 ;
"RTN","IBCNEHLQ",132,0)
 ;  If the data was extracted from non-Buffer, check Patient file
"RTN","IBCNEHLQ",133,0)
 I EXT'=1 D
"RTN","IBCNEHLQ",134,0)
 . I IRIEN="" Q
"RTN","IBCNEHLQ",135,0)
 . I $$SCRUB($G(SUBID))'=$$SCRUB($P($G(^DPT(DFN,.312,IRIEN,0)),U,2)) Q
"RTN","IBCNEHLQ",136,0)
 . S EFFDT=$P($G(^DPT(DFN,.312,IRIEN,0)),U,8),EFFDT=$$HLDATE^HLFNC(EFFDT)
"RTN","IBCNEHLQ",137,0)
 . S EXPDT=$P($G(^DPT(DFN,.312,IRIEN,0)),U,4),EXPDT=$$HLDATE^HLFNC(EXPDT)
"RTN","IBCNEHLQ",138,0)
 . S $P(IN1,HLFS,12)=EFFDT
"RTN","IBCNEHLQ",139,0)
 . S $P(IN1,HLFS,13)=EXPDT
"RTN","IBCNEHLQ",140,0)
 . S PREL=$P($G(^DPT(DFN,.312,IRIEN,4)),U,3)
"RTN","IBCNEHLQ",141,0)
 . S $P(IN1,HLFS,2)=$S(PREL=18:$$SCRUB($G(SUBID)),PREL="":$$SCRUB($G(SUBID)),1:$$SCRUB($G(PATID)))
"RTN","IBCNEHLQ",142,0)
 . I PAYR'=$$FIND1^DIC(365.12,"","X","~NO PAYER") D
"RTN","IBCNEHLQ",143,0)
 .. S $P(IN1,HLFS,3)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,2))_HLECH_HLECH_HLECH_"USVHA"_HLECH_"VP"_HLECH
"RTN","IBCNEHLQ",144,0)
 .. S $P(IN1,HLFS,4)=$$ENCHL7($P(^IBE(365.12,PAYR,0),U,1))
"RTN","IBCNEHLQ",145,0)
 . S $P(IN1,HLFS,17)=$$PATREL(PREL)
"RTN","IBCNEHLQ",146,0)
 . S IENS=IRIEN_","_DFN_","
"RTN","IBCNEHLQ",147,0)
 . S $P(IN1,HLFS,8)=$$ENCHL7($$GET1^DIQ(2.312,IENS,21,"E"))
"RTN","IBCNEHLQ",148,0)
 . S $P(IN1,HLFS,9)=$$ENCHL7($$GET1^DIQ(2.312,IENS,20,"E"))
"RTN","IBCNEHLQ",149,0)
 ;
"RTN","IBCNEHLQ",150,0)
 I IN1="" Q
"RTN","IBCNEHLQ",151,0)
 ;
"RTN","IBCNEHLQ",152,0)
 I $P(IN1,HLFS,17)="" S $P(IN1,HLFS,17)=18
"RTN","IBCNEHLQ",153,0)
 S $P(IN1,HLFS,1)=1
"RTN","IBCNEHLQ",154,0)
 S IN1="IN1"_HLFS_IN1
"RTN","IBCNEHLQ",155,0)
 Q
"RTN","IBCNEHLQ",156,0)
 ;
"RTN","IBCNEHLQ",157,0)
NTE ;  NTE Segment
"RTN","IBCNEHLQ",158,0)
 ; TRANSR is 0 node of TQ, set in PROC^IBCNEDEP
"RTN","IBCNEHLQ",159,0)
 S NTE=$$EXTERNAL^DILFD(365.1,.2,,$P($G(TRANSR),U,20)) ; service code from 365.1/.2
"RTN","IBCNEHLQ",160,0)
 S NTE="NTE"_HLFS_HLFS_HLFS_NTE
"RTN","IBCNEHLQ",161,0)
 Q
"RTN","IBCNEHLQ",162,0)
 ;
"RTN","IBCNEHLQ",163,0)
CHK ;  Check for spouse or other information in the Patient Relation File
"RTN","IBCNEHLQ",164,0)
 ;  DGREL = Relationship (1=Self, 2=Spouse, 3-34,99=Other)
"RTN","IBCNEHLQ",165,0)
 NEW IEN,QFL
"RTN","IBCNEHLQ",166,0)
 S IEN="",RLIEN="",ISEX="",QFL=0
"RTN","IBCNEHLQ",167,0)
 F  S IEN=$O(^DGPR(408.12,"B",DFN,IEN)) Q:IEN=""  D  Q:QFL
"RTN","IBCNEHLQ",168,0)
 . S DGREL=$P($G(^DGPR(408.12,IEN,0)),U,2)
"RTN","IBCNEHLQ",169,0)
 . ;
"RTN","IBCNEHLQ",170,0)
 . ;  If person is veteran, quit
"RTN","IBCNEHLQ",171,0)
 . I DGREL=1 Q
"RTN","IBCNEHLQ",172,0)
 . ;
"RTN","IBCNEHLQ",173,0)
 . ;  If person is spouse, pick that record and quit
"RTN","IBCNEHLQ",174,0)
 . I WHO="s",DGREL=2 S RLIEN=IEN,QFL=1 Q
"RTN","IBCNEHLQ",175,0)
 . ;
"RTN","IBCNEHLQ",176,0)
 . ;  Otherwise it should be an 'other' dependent
"RTN","IBCNEHLQ",177,0)
 . S RLIEN=IEN
"RTN","IBCNEHLQ",178,0)
 ;
"RTN","IBCNEHLQ",179,0)
 I RLIEN="" Q
"RTN","IBCNEHLQ",180,0)
 ;
"RTN","IBCNEHLQ",181,0)
 ;  Check for Sex, SSN, DOB in INCOME PERSON File
"RTN","IBCNEHLQ",182,0)
 S PER=$P(^DGPR(408.12,RLIEN,0),U,3)
"RTN","IBCNEHLQ",183,0)
 I PER'["DGPR(408.13" Q
"RTN","IBCNEHLQ",184,0)
 S PLIEN=$P(PER,";",1)
"RTN","IBCNEHLQ",185,0)
 I PLIEN="" Q
"RTN","IBCNEHLQ",186,0)
 S RDATA=$G(^DGPR(408.13,PLIEN,0)),ISEX=$P(RDATA,U,2),IDOB=$P(RDATA,U,3)
"RTN","IBCNEHLQ",187,0)
 I $P(RDATA,U,4)'="" N DFN S DFN=$P(RDATA,U,4),ISEX=$P(^DPT(DFN,0),U,2),IDOB=$P(^DPT(DFN,0),U,3)
"RTN","IBCNEHLQ",188,0)
 Q
"RTN","IBCNEHLQ",189,0)
 ;
"RTN","IBCNEHLQ",190,0)
ENCHL7(STR) ; Encode HL7 escape seqs in data fields
"RTN","IBCNEHLQ",191,0)
 ;
"RTN","IBCNEHLQ",192,0)
 ; Input:
"RTN","IBCNEHLQ",193,0)
 ; STR = Field data possible containing HL7 encoding chars
"RTN","IBCNEHLQ",194,0)
 ;
"RTN","IBCNEHLQ",195,0)
 ; Output Values
"RTN","IBCNEHLQ",196,0)
 ; Fn returns string w/converted escape seqs
"RTN","IBCNEHLQ",197,0)
 ;
"RTN","IBCNEHLQ",198,0)
 N CHR,NEW,RPLC,CNT,LOOP
"RTN","IBCNEHLQ",199,0)
 ;
"RTN","IBCNEHLQ",200,0)
 ; Replace "\" "&" "~" "|" with \F\ \R\ \E\ \T\ respectively
"RTN","IBCNEHLQ",201,0)
 F CHR="\","&","~","|" S CNT=$L(STR,CHR) I CNT>1 D
"RTN","IBCNEHLQ",202,0)
 . S NEW=$P(STR,CHR)
"RTN","IBCNEHLQ",203,0)
 . S RPLC="\"_$TR(CHR,"|~\&","FRET")_"\"
"RTN","IBCNEHLQ",204,0)
 . F LOOP=2:1:CNT S NEW=NEW_RPLC_$P(STR,CHR,LOOP)
"RTN","IBCNEHLQ",205,0)
 . S STR=NEW
"RTN","IBCNEHLQ",206,0)
 ;
"RTN","IBCNEHLQ",207,0)
 Q STR
"RTN","IBCNEHLQ",208,0)
 ;
"RTN","IBCNEHLQ",209,0)
SCRUB(Z) ; remove all punctuation from the string and convert lowercase to uppercase
"RTN","IBCNEHLQ",210,0)
 ; IB*2*416 - used for subscriber and patient ID fields
"RTN","IBCNEHLQ",211,0)
 S Z=$$NOPUNCT^IBCEF(Z,1)
"RTN","IBCNEHLQ",212,0)
 S Z=$$UP^XLFSTR(Z)
"RTN","IBCNEHLQ",213,0)
SCRUBX ;
"RTN","IBCNEHLQ",214,0)
 Q Z
"RTN","IBCNEHLQ",215,0)
 ;
"RTN","IBCNEHLQ",216,0)
PATREL(REL) ; convert pat.relationship to insured from VistA to X12 and return X12 value
"RTN","IBCNEHLQ",217,0)
 ; REL - VistA value
"RTN","IBCNEHLQ",218,0)
 ; 
"RTN","IBCNEHLQ",219,0)
 ; VistA values of Self (18), Spouse (01), and Child (19) remain unchanged,
"RTN","IBCNEHLQ",220,0)
 ; anything else is converted to X12 value of Other Adult (34)
"RTN","IBCNEHLQ",221,0)
 ;
"RTN","IBCNEHLQ",222,0)
 Q $S($G(REL)="":"",".01.18.19."[("."_REL_"."):REL,1:34)
"RTN","IBCNRP")
0^149^B23991821^B21440357
"RTN","IBCNRP",1,0)
IBCNRP ;DAOU/ALA - Plan Match ListMan ;13-NOV-2003
"RTN","IBCNRP",2,0)
 ;;2.0;INTEGRATED BILLING;**251,516**;21-MAR-94;Build 123
"RTN","IBCNRP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRP",4,0)
 ;; ;
"RTN","IBCNRP",5,0)
EN ; -- main entry point for IBCNR PLAN MATCH
"RTN","IBCNRP",6,0)
 D EN^VALM("IBCNR PLAN MATCH")
"RTN","IBCNRP",7,0)
 Q
"RTN","IBCNRP",8,0)
 ;
"RTN","IBCNRP",9,0)
HDR ; -- header code
"RTN","IBCNRP",10,0)
 NEW IBCNS0,IBCNS11,IBCNS13,IBLEAD,X,X1,X2
"RTN","IBCNRP",11,0)
 S IBCNS0=$G(^DIC(36,+IBCNSP,0))
"RTN","IBCNRP",12,0)
 S IBCNS11=$G(^DIC(36,+IBCNSP,.11))
"RTN","IBCNRP",13,0)
 S IBCNS13=$G(^DIC(36,+IBCNSP,.13))
"RTN","IBCNRP",14,0)
 S X2=$S(IBW:"",1:"Active ")
"RTN","IBCNRP",15,0)
 S IBLEAD=$S(IBIND:"All "_X2,1:X2_"Group ")_"Plans for: "
"RTN","IBCNRP",16,0)
 S X="Phone: "_$S($P(IBCNS13,"^")]"":$P(IBCNS13,"^"),1:"<not filed>")
"RTN","IBCNRP",17,0)
 S VALMHDR(1)=$$SETSTR^VALM1(X,IBLEAD_$P(IBCNS0,"^"),81-$L(X),40)
"RTN","IBCNRP",18,0)
 S X1="Precerts: "_$S($P(IBCNS13,"^",3)]"":$P(IBCNS13,"^",3),1:"<not filed>")
"RTN","IBCNRP",19,0)
 S X=$TR($J("",$L(IBLEAD)),""," ")_$S($P(IBCNS11,"^")]"":$P(IBCNS11,"^"),1:"<no street address>")
"RTN","IBCNRP",20,0)
 S VALMHDR(2)=$$SETSTR^VALM1(X1,X,81-$L(X1),40)
"RTN","IBCNRP",21,0)
 S X=$S($P(IBCNS11,"^",4)]"":$P(IBCNS11,"^",4),1:"<no city>")_", "
"RTN","IBCNRP",22,0)
 S X=X_$S($P(IBCNS11,"^",5):$P($G(^DIC(5,$P(IBCNS11,"^",5),0)),"^",2),1:"<no state>")_"  "_$E($P(IBCNS11,"^",6),1,5)_$S($E($P(IBCNS11,"^",6),6,9)]"":"-"_$E($P(IBCNS11,"^",6),6,9),1:"")
"RTN","IBCNRP",23,0)
 S VALMHDR(3)=$$SETSTR^VALM1(X,"",$L(IBLEAD)+1,80)
"RTN","IBCNRP",24,0)
 S X="#" I $G(IBIND) S X="#  + => Indiv. Plan"
"RTN","IBCNRP",25,0)
 I $G(IBW) S X=$E(X_$J("",23),1,23)_"* => Inactive Plan"
"RTN","IBCNRP",26,0)
 S VALMHDR(4)=$$SETSTR^VALM1(" ",X,64,17)
"RTN","IBCNRP",27,0)
 Q
"RTN","IBCNRP",28,0)
 ;
"RTN","IBCNRP",29,0)
INIT ; -- init variables and list array
"RTN","IBCNRP",30,0)
 NEW IBCNRPP,IBCOV,IBCPD6,IBCPOLD,IBCRVD,LIM,X
"RTN","IBCNRP",31,0)
 K ^TMP("IBCNR",$J)
"RTN","IBCNRP",32,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNRP",33,0)
 ; MRD;IB*2.0*516 - Rather than pull the zero node here, use $$GET1^DIQ
"RTN","IBCNRP",34,0)
 ; to pull specific pieces down below.
"RTN","IBCNRP",35,0)
 ;S IBGP0=^IBA(355.3,+IBCNGP,0)
"RTN","IBCNRP",36,0)
 ;I $G(IBGP0) D
"RTN","IBCNRP",37,0)
 I $G(^IBA(355.3,+IBCNGP,0)) D
"RTN","IBCNRP",38,0)
 . ;S IBCPD6=$G(IBGP0,U,6)) ;chk pre-cert
"RTN","IBCNRP",39,0)
 . ;I 'IBIND,'$P(IBGP0,"^",2) Q  ;    exclude individual plans
"RTN","IBCNRP",40,0)
 . ;I 'IBW,$P(IBGP0,"^",11) Q  ;      plan is inactive
"RTN","IBCNRP",41,0)
 . ;
"RTN","IBCNRP",42,0)
 . S VALMCNT=VALMCNT+1
"RTN","IBCNRP",43,0)
 . S X=$$SETFLD^VALM1(VALMCNT,"","NUMBER")
"RTN","IBCNRP",44,0)
 . ;
"RTN","IBCNRP",45,0)
 . ;I '$P(IBGP0,"^",2) S $E(X,4)="+"
"RTN","IBCNRP",46,0)
 . ;S X=$$SETFLD^VALM1($P(IBGP0,"^",3),X,"GNAME")
"RTN","IBCNRP",47,0)
 . I '$$GET1^DIQ(355.3,+IBCNGP_",",.02,"I") S $E(X,4)="+"
"RTN","IBCNRP",48,0)
 . S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,+IBCNGP_",",2.01),X,"GNAME")
"RTN","IBCNRP",49,0)
 . ;
"RTN","IBCNRP",50,0)
 . ;I $P(IBGP0,"^",11) S $E(X,24)="*"
"RTN","IBCNRP",51,0)
 . ;S X=$$SETFLD^VALM1($P(IBGP0,"^",4),X,"GNUM")
"RTN","IBCNRP",52,0)
 . I $$GET1^DIQ(355.3,+IBCNGP_",",.11,"I") S $E(X,24)="*"
"RTN","IBCNRP",53,0)
 . S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,+IBCNGP_",",2.02),X,"GNUM")
"RTN","IBCNRP",54,0)
 . ;
"RTN","IBCNRP",55,0)
 . ;S X=$$SETFLD^VALM1($$EXPAND^IBTRE(355.3,.09,$P(IBGP0,"^",9)),X,"TYPE")
"RTN","IBCNRP",56,0)
 . S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,+IBCNGP_",",.09,"E"),X,"TYPE")
"RTN","IBCNRP",57,0)
 . ;
"RTN","IBCNRP",58,0)
 . S IBCNRPP=$$GET1^DIQ(355.3,IBCNGP_",",6.01,"I")
"RTN","IBCNRP",59,0)
 . I IBCNRPP'="" S IBCNRPP=$$GET1^DIQ(366.03,IBCNRPP_",",.02,"E")
"RTN","IBCNRP",60,0)
 . S X=$$SETFLD^VALM1(IBCNRPP,X,"PHARM")
"RTN","IBCNRP",61,0)
 . ;
"RTN","IBCNRP",62,0)
 . S IBCOV=$O(^IBE(355.31,"B","PHARMACY",""))
"RTN","IBCNRP",63,0)
 . S LIM="",IBCVRD=0
"RTN","IBCNRP",64,0)
 . F  S LIM=$O(^IBA(355.32,"B",IBCNGP,LIM)) Q:LIM=""  D
"RTN","IBCNRP",65,0)
 .. I $P(^IBA(355.32,LIM,0),U,2)=IBCOV S IBCVRD=$P(^IBA(355.32,LIM,0),U,4)
"RTN","IBCNRP",66,0)
 . S X=$$SETFLD^VALM1($S(IBCVRD=0:"NO",1:"YES"),X,"COV")
"RTN","IBCNRP",67,0)
 . ;
"RTN","IBCNRP",68,0)
 . S ^TMP("IBCNR",$J,VALMCNT,0)=X
"RTN","IBCNRP",69,0)
 . S ^TMP("IBCNR",$J,"IDX",VALMCNT,VALMCNT)=IBCNGP
"RTN","IBCNRP",70,0)
 . I '$D(^TMP("IBCNR",$J)) S VALMCNT=2,^TMP("IBCNR",$J,1,0)=" ",^TMP("IBCNR",$J,2,0)="   No plans were identified for this company."
"RTN","IBCNRP",71,0)
 Q
"RTN","IBCNRP",72,0)
 ;
"RTN","IBCNRP",73,0)
HELP ; -- help code
"RTN","IBCNRP",74,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNRP",75,0)
 Q
"RTN","IBCNRP",76,0)
 ;
"RTN","IBCNRP",77,0)
EXIT ; -- exit code
"RTN","IBCNRP",78,0)
 K ^TMP("IBCNR",$J),VALMBCK,VALMY
"RTN","IBCNRP",79,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","IBCNRP",80,0)
 Q
"RTN","IBCNRP",81,0)
 ;
"RTN","IBCNRP",82,0)
EXPND ; -- expand code
"RTN","IBCNRP",83,0)
 Q
"RTN","IBCNRP",84,0)
 ;
"RTN","IBCNRP",85,0)
SEL ; -- select plan
"RTN","IBCNRP",86,0)
 D S1
"RTN","IBCNRP",87,0)
 I 'IBX Q  ; no group selected
"RTN","IBCNRP",88,0)
 ;
"RTN","IBCNRP",89,0)
 NEW DA,DIC,DIE,DR,D,IBPLN
"RTN","IBCNRP",90,0)
 S DIC="^IBCNR(366.03,",DIC(0)="AEMNZ" D ^DIC
"RTN","IBCNRP",91,0)
 I +Y<1 S D="F" D IX^DIC
"RTN","IBCNRP",92,0)
 I +Y<1 G SPQ
"RTN","IBCNRP",93,0)
 S IBPLN=+Y K Y,X
"RTN","IBCNRP",94,0)
 D PLCK  ; check plan status
"RTN","IBCNRP",95,0)
 S DA=IBSEL,DIC="^IBA(355.3,",DIE=DIC,DR="6.01////^S X="_IBPLN
"RTN","IBCNRP",96,0)
 D ^DIE
"RTN","IBCNRP",97,0)
 D INIT
"RTN","IBCNRP",98,0)
 ;
"RTN","IBCNRP",99,0)
 S IBX=0 F  S IBX=$O(VALMY(IBX)) Q:'IBX  S ^TMP($J,"IBSEL",+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX)))=""
"RTN","IBCNRP",100,0)
 ;
"RTN","IBCNRP",101,0)
 D SPQ
"RTN","IBCNRP",102,0)
 Q
"RTN","IBCNRP",103,0)
 ;
"RTN","IBCNRP",104,0)
PLCK ; -- check plan status
"RTN","IBCNRP",105,0)
 NEW ARRAY
"RTN","IBCNRP",106,0)
 D STCHK^IBCNRU1(IBPLN,.ARRAY)
"RTN","IBCNRP",107,0)
 I $G(ARRAY(1))'="A" D
"RTN","IBCNRP",108,0)
 . W !!,"WARNING....PLAN NOT ACTIVE!"
"RTN","IBCNRP",109,0)
 ;
"RTN","IBCNRP",110,0)
 Q
"RTN","IBCNRP",111,0)
 ;
"RTN","IBCNRP",112,0)
DEL ; -- remove a plan from a group
"RTN","IBCNRP",113,0)
 D S1
"RTN","IBCNRP",114,0)
 ;
"RTN","IBCNRP",115,0)
 NEW DA,DIC,DIE,DR
"RTN","IBCNRP",116,0)
 S DA=IBSEL,DIC="^IBA(355.3,",DIE=DIC,DR="6.01///@"
"RTN","IBCNRP",117,0)
 D ^DIE
"RTN","IBCNRP",118,0)
 D INIT
"RTN","IBCNRP",119,0)
 ;
"RTN","IBCNRP",120,0)
 S IBX=0 F  S IBX=$O(VALMY(IBX)) Q:'IBX  S ^TMP($J,"IBSEL",+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX)))=""
"RTN","IBCNRP",121,0)
 ;
"RTN","IBCNRP",122,0)
 D SPQ
"RTN","IBCNRP",123,0)
 Q
"RTN","IBCNRP",124,0)
 ;
"RTN","IBCNRP",125,0)
S1 ;
"RTN","IBCNRP",126,0)
 NEW DIR,DIRUT,DUOUT,DTOUT,DIROUT,IBOK,IBQUIT,Y
"RTN","IBCNRP",127,0)
 D EN^VALM2($G(XQORNOD(0)),"S"),FULL^VALM1
"RTN","IBCNRP",128,0)
 S IBX=$O(VALMY(0)),VALMBCK="R"
"RTN","IBCNRP",129,0)
 ;
"RTN","IBCNRP",130,0)
 I 'IBX W !!,"No group selected!" G SPQ
"RTN","IBCNRP",131,0)
 I 'IBMULT D  G SPQ
"RTN","IBCNRP",132,0)
 . I $O(VALMY(IBX)) W !!,*7,"You may only select a single plan!" Q
"RTN","IBCNRP",133,0)
 . I $G(IBALR),+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX))=IBALR W !!,*7,"This plan is not allowed for selection!" Q
"RTN","IBCNRP",134,0)
 . D OK^IBCNSM3
"RTN","IBCNRP",135,0)
 . I IBQUIT S VALMBCK="Q" Q
"RTN","IBCNRP",136,0)
 . I IBOK S IBSEL=+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX)),VALMBCK="Q"
"RTN","IBCNRP",137,0)
 ;
"RTN","IBCNRP",138,0)
 S IBSEL=+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX))
"RTN","IBCNRP",139,0)
 Q
"RTN","IBCNRP",140,0)
 ;
"RTN","IBCNRP",141,0)
SPQ ;
"RTN","IBCNRP",142,0)
 I '$O(IBSEL(0)),VALMBCK="R" D PAUSE^VALM1
"RTN","IBCNRP",143,0)
 Q
"RTN","IBCNRP5")
0^62^B56117515^B56002389
"RTN","IBCNRP5",1,0)
IBCNRP5 ;BHAM ISC/CMW - Group Plan Status Report ;01-NOV-2004
"RTN","IBCNRP5",2,0)
 ;;2.0;INTEGRATED BILLING;**276,516**;21-MAR-94;Build 123
"RTN","IBCNRP5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRP5",4,0)
 ;
"RTN","IBCNRP5",5,0)
EN ;
"RTN","IBCNRP5",6,0)
 ; Initialize variables
"RTN","IBCNRP5",7,0)
 N STOP,IBCNRRTN,IBCNRSPC,RESORT,IBCNTYP,IBSEL
"RTN","IBCNRP5",8,0)
 D:'$D(IOF) HOME^%ZIS
"RTN","IBCNRP5",9,0)
 ;
"RTN","IBCNRP5",10,0)
 S STOP=0,IBPXT=$G(IBPXT)
"RTN","IBCNRP5",11,0)
 W @IOF
"RTN","IBCNRP5",12,0)
 W !,"ePHARM GROUP PLAN STATUS REPORT",!
"RTN","IBCNRP5",13,0)
 W !,"NCPDP process requires that the users match Group Plans to Pharmacy Plans."
"RTN","IBCNRP5",14,0)
 W !,"This report will assist users in matching Group Insurance Plans to Pharmacy"
"RTN","IBCNRP5",15,0)
 W !,"  Plans by searching through GIPF file for Group Plans that "
"RTN","IBCNRP5",16,0)
 W !,"    are linked to an Insurance with active Pharmacy Plan coverage."
"RTN","IBCNRP5",17,0)
 ;
"RTN","IBCNRP5",18,0)
 ; Prompts 
"RTN","IBCNRP5",19,0)
 ; lock global
"RTN","IBCNRP5",20,0)
 S IBCNRRPT=1
"RTN","IBCNRP5",21,0)
 N IBCNRDEV S IBCNRDEV=1
"RTN","IBCNRP5",22,0)
 L +^XTMP("IBCNRP5"):5 I '$T W !!,"Sorry, Status Report in use." H 2 G EXIT
"RTN","IBCNRP5",23,0)
 ;Check for prior compile
"RTN","IBCNRP5",24,0)
P10 D RESORT(.RESORT) I STOP G EXIT
"RTN","IBCNRP5",25,0)
 I $G(RESORT) G P30
"RTN","IBCNRP5",26,0)
 K ^XTMP("IBCNRP5")
"RTN","IBCNRP5",27,0)
 ; compile valid insurance file
"RTN","IBCNRP5",28,0)
P20 D GIPF
"RTN","IBCNRP5",29,0)
 ; select insurance company
"RTN","IBCNRP5",30,0)
P30 D INS I $G(IBSEL)="" G EXIT
"RTN","IBCNRP5",31,0)
 D TYPE I $G(IBCNTYP)="" G EXIT
"RTN","IBCNRP5",32,0)
 ; perform sort/selection
"RTN","IBCNRP5",33,0)
P40 D INSEL
"RTN","IBCNRP5",34,0)
 I '$D(^TMP("IBCNRP5")) G EXIT
"RTN","IBCNRP5",35,0)
 ; print selection
"RTN","IBCNRP5",36,0)
P50 D PRINT^IBCNRP5P
"RTN","IBCNRP5",37,0)
 ;
"RTN","IBCNRP5",38,0)
EXIT ; unlock global
"RTN","IBCNRP5",39,0)
 L -^XTMP("IBCNRP5")
"RTN","IBCNRP5",40,0)
 K IBPXT
"RTN","IBCNRP5",41,0)
 K IBCNSP,IBCPOL,IBIND,IBMULT,IBSEL,IBW,IBALR,IBGRP,IBCNGP
"RTN","IBCNRP5",42,0)
 K IBCNRRPT,IBCNTYP,IBCNRDEV,ZTDESC,ZTSTOP
"RTN","IBCNRP5",43,0)
 K IBCNRP,IBCNRI,IBCNRGP
"RTN","IBCNRP5",44,0)
 K IBICPT,IBICF,IBICL,IBIC,IBINA,IBIEN,INIEN
"RTN","IBCNRP5",45,0)
 K ^TMP("IBCNRP5",$J)
"RTN","IBCNRP5",46,0)
 Q
"RTN","IBCNRP5",47,0)
 ;
"RTN","IBCNRP5",48,0)
RESORT(RESORT) ; check for prior compile
"RTN","IBCNRP5",49,0)
 NEW DIR,BDT,EDT,RDT,HDR,IBDT,X,Y,DIRUT
"RTN","IBCNRP5",50,0)
 I '$D(^XTMP("IBCNRP5")) Q
"RTN","IBCNRP5",51,0)
 S RDT=$P($G(^XTMP("IBCNRP5",0)),U,2)
"RTN","IBCNRP5",52,0)
 S RESORT=0
"RTN","IBCNRP5",53,0)
 S HDR=$$FMTE^XLFDT(RDT,"5Z")
"RTN","IBCNRP5",54,0)
 W !!,"Current Insurance company list compiled on: ",HDR,!
"RTN","IBCNRP5",55,0)
 S DIR(0)="Y"
"RTN","IBCNRP5",56,0)
 S DIR("A")="Do you want to use the existing compiled file"
"RTN","IBCNRP5",57,0)
 S DIR("B")="YES"
"RTN","IBCNRP5",58,0)
 S DIR("?",1)=" Enter YES to use the existing compiled file."
"RTN","IBCNRP5",59,0)
 S DIR("?")=" Enter NO to DELETE existing file and recompile,"
"RTN","IBCNRP5",60,0)
 D ^DIR K DIR
"RTN","IBCNRP5",61,0)
 I $D(DIRUT) S STOP=1 G RESRTX
"RTN","IBCNRP5",62,0)
 S RESORT=Y
"RTN","IBCNRP5",63,0)
 S IBCNRSPC("RESORT")=Y
"RTN","IBCNRP5",64,0)
 ;
"RTN","IBCNRP5",65,0)
RESRTX ;RESORT EXIT
"RTN","IBCNRP5",66,0)
 Q
"RTN","IBCNRP5",67,0)
 ; 
"RTN","IBCNRP5",68,0)
GIPF ; compiler valid insurance
"RTN","IBCNRP5",69,0)
 W !,"*** COMPILING ......"
"RTN","IBCNRP5",70,0)
 N GST1,GP0,GP6,IBCOV,LIM,IBCVRD,IBIEN
"RTN","IBCNRP5",71,0)
 N GPIEN,GPNAM,GPNUM,IBINA
"RTN","IBCNRP5",72,0)
 S GST1=1,(GPIEN,INIEN)=""
"RTN","IBCNRP5",73,0)
 S ^XTMP("IBCNRP5",0)=($$NOW^XLFDT+30)_"^"_$$NOW^XLFDT_"^"_"Group Plan Status Report"
"RTN","IBCNRP5",74,0)
 F  S INIEN=$O(^IBA(355.3,"B",INIEN)) Q:INIEN=""  D
"RTN","IBCNRP5",75,0)
 . S IBINA=$P($G(^DIC(36,+INIEN,0)),U)
"RTN","IBCNRP5",76,0)
 . ; company does not reimburse
"RTN","IBCNRP5",77,0)
 . I $P($G(^DIC(36,+INIEN,0)),U,2)="N" Q
"RTN","IBCNRP5",78,0)
 . ; company is inactive
"RTN","IBCNRP5",79,0)
 . I $P($G(^DIC(36,INIEN,0)),U,5) Q
"RTN","IBCNRP5",80,0)
 . ;
"RTN","IBCNRP5",81,0)
 . F  S GPIEN=$O(^IBA(355.3,"B",INIEN,GPIEN)) Q:GPIEN=""  D
"RTN","IBCNRP5",82,0)
 .. ;chk for active group
"RTN","IBCNRP5",83,0)
 .. S GP0=$G(^IBA(355.3,GPIEN,0)),GP6=$G(^IBA(355.3,GPIEN,6))
"RTN","IBCNRP5",84,0)
 .. I $P(GP0,U,11)=1 Q
"RTN","IBCNRP5",85,0)
 .. ;
"RTN","IBCNRP5",86,0)
 .. ;chk for pharm plan coverage
"RTN","IBCNRP5",87,0)
 .. S IBCOV=$O(^IBE(355.31,"B","PHARMACY",""))
"RTN","IBCNRP5",88,0)
 .. S LIM="",IBCVRD=0
"RTN","IBCNRP5",89,0)
 .. F  S LIM=$O(^IBA(355.32,"B",GPIEN,LIM)) Q:LIM=""  D
"RTN","IBCNRP5",90,0)
 ... I $P(^IBA(355.32,LIM,0),U,2)'=IBCOV Q
"RTN","IBCNRP5",91,0)
 ... ;chk covered status
"RTN","IBCNRP5",92,0)
 ... S IBCVRD=$P(^IBA(355.32,LIM,0),U,4)
"RTN","IBCNRP5",93,0)
 ... I IBCVRD=0 Q
"RTN","IBCNRP5",94,0)
 ... ;set valid insurance/group array
"RTN","IBCNRP5",95,0)
 ... S ^XTMP("IBCNRP5",IBINA,INIEN,GPIEN)=""
"RTN","IBCNRP5",96,0)
 Q
"RTN","IBCNRP5",97,0)
 ;
"RTN","IBCNRP5",98,0)
INS ;
"RTN","IBCNRP5",99,0)
 S IBSEL=""
"RTN","IBCNRP5",100,0)
 W !,"Run Report "
"RTN","IBCNRP5",101,0)
 W " for (S)PECIFIC insurance companies or a (R)ANGE: RANGE// "
"RTN","IBCNRP5",102,0)
 R X:DTIME Q:'$T!(X["^")
"RTN","IBCNRP5",103,0)
 S:X="" X="R" S X=$E(X)
"RTN","IBCNRP5",104,0)
 I "RSrs"'[X W !,"Enter <CR> for Range; 'S' for specific insurance; '^' to quit." G INS
"RTN","IBCNRP5",105,0)
 W "  ",$S("Ss"[X:"SPECIFIC",1:"RANGE") G:"Rr"[X INSO1
"RTN","IBCNRP5",106,0)
INSO S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","IBCNRP5",107,0)
 S DIC("A")="   Select "_$S($G(IBICPT):"another ",1:"")_"INSURANCE CO.: "
"RTN","IBCNRP5",108,0)
 D ^DIC K DIC I Y'>0 G INS:'$G(IBICPT) S IBSEL=1 Q
"RTN","IBCNRP5",109,0)
 I $D(IBICPT(+Y)) D  G INSO
"RTN","IBCNRP5",110,0)
 .W !!?3,"Already selected. Choose another insurance company.",!,*7
"RTN","IBCNRP5",111,0)
 S IBICPT(+Y)="",IBICPT=$G(IBICPT)+1 G INSO
"RTN","IBCNRP5",112,0)
 ;
"RTN","IBCNRP5",113,0)
INSO1 W !?3,"Start with INSURANCE COMPANY: FIRST// " R X:DTIME
"RTN","IBCNRP5",114,0)
 G:'$T!(X["^") INS
"RTN","IBCNRP5",115,0)
 I $E(X)="?" W !,"Enter value up to 40 char; <CR> to start with 'first' value; '^' to quit." G INSO1
"RTN","IBCNRP5",116,0)
 S IBICF=X
"RTN","IBCNRP5",117,0)
INSO2 W !?8,"Go to INSURANCE COMPANY: LAST// " R X:DTIME
"RTN","IBCNRP5",118,0)
 G:'$T!(X["^") INSO1
"RTN","IBCNRP5",119,0)
 I $E(X)="?" W !,"Enter value up to 40 char; <CR> to go to 'last' value; '^' to quit." G INSO1
"RTN","IBCNRP5",120,0)
 I X="" S IBICL="zzzzz" S:IBICF="" IBIC="ALL" S IBSEL=1 Q
"RTN","IBCNRP5",121,0)
 I IBICF]X D  G INSO2
"RTN","IBCNRP5",122,0)
 .W *7,!!?3,"The LAST value must follow the FIRST.",!
"RTN","IBCNRP5",123,0)
 S IBICL=X,IBSEL=1
"RTN","IBCNRP5",124,0)
 Q
"RTN","IBCNRP5",125,0)
 ;
"RTN","IBCNRP5",126,0)
TYPE ; Prompt to allow users to inquire for All group plans, or Matched group plans
"RTN","IBCNRP5",127,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNRP5",128,0)
 S IBCNTYP="A"
"RTN","IBCNRP5",129,0)
 S DIR(0)="S^A:All Group Plans;M:Matched Group Plans"
"RTN","IBCNRP5",130,0)
 S DIR("A")=" Select the type of Group Plans you want to see for Insurance selected."
"RTN","IBCNRP5",131,0)
 S DIR("B")="A"
"RTN","IBCNRP5",132,0)
 S DIR("?",1)="  A - All Group Plans"
"RTN","IBCNRP5",133,0)
 S DIR("?",2)="  M - Matched Group Plans"
"RTN","IBCNRP5",134,0)
 D ^DIR K DIR
"RTN","IBCNRP5",135,0)
 I $D(DIRUT) G TYPEX
"RTN","IBCNRP5",136,0)
 S IBCNTYP=Y
"RTN","IBCNRP5",137,0)
TYPEX Q
"RTN","IBCNRP5",138,0)
 ;
"RTN","IBCNRP5",139,0)
INSEL ; - Perform selection for insurance company.
"RTN","IBCNRP5",140,0)
 S VALMCNT=0,VALMBG=1,IBCNGP=0
"RTN","IBCNRP5",141,0)
 K ^TMP("IBCNRP5",$J)
"RTN","IBCNRP5",142,0)
 ; check for specific insurance companies
"RTN","IBCNRP5",143,0)
 I $G(IBICPT) D  Q
"RTN","IBCNRP5",144,0)
 . S (IBINA,IBIEN)=""
"RTN","IBCNRP5",145,0)
 . F  S IBIEN=$O(IBICPT(IBIEN)) Q:IBIEN=""  D
"RTN","IBCNRP5",146,0)
 .. S IBINA=$P($G(^DIC(36,+IBIEN,0)),U)
"RTN","IBCNRP5",147,0)
 .. I '$D(^XTMP("IBCNRP5",IBINA,IBIEN)) D  Q
"RTN","IBCNRP5",148,0)
 ... W *7,!?3,"**NO pharmacy data found for "
"RTN","IBCNRP5",149,0)
 ... W $P(^DIC(36,IBIEN,0),U)_"  "_$P(^DIC(36,IBIEN,.11),U),! R X:2
"RTN","IBCNRP5",150,0)
 .. D INIT
"RTN","IBCNRP5",151,0)
 ;
"RTN","IBCNRP5",152,0)
 ; check for range of insurance companies
"RTN","IBCNRP5",153,0)
 I '$D(IBICL) Q
"RTN","IBCNRP5",154,0)
 S IBIEN=0,IBINA=""
"RTN","IBCNRP5",155,0)
 F  S IBINA=$O(^XTMP("IBCNRP5",IBINA)) Q:IBINA=""  D
"RTN","IBCNRP5",156,0)
 . F  S IBIEN=$O(^XTMP("IBCNRP5",IBINA,IBIEN)) Q:IBIEN=""  D
"RTN","IBCNRP5",157,0)
 ..; for selection "ALL"
"RTN","IBCNRP5",158,0)
 .. I $G(IBIC)="ALL" D INIT Q
"RTN","IBCNRP5",159,0)
 .. ;
"RTN","IBCNRP5",160,0)
 .. ;check for match within first/last range
"RTN","IBCNRP5",161,0)
 .. I (IBICF]IBINA)!(IBINA]IBICL) Q
"RTN","IBCNRP5",162,0)
 .. D INIT
"RTN","IBCNRP5",163,0)
 Q
"RTN","IBCNRP5",164,0)
 ;
"RTN","IBCNRP5",165,0)
INIT ; -- init variables and create list array or report array
"RTN","IBCNRP5",166,0)
 N IBGP0,IBCPOLD,X,IBCPD6,IBCNRPP,IBCOV,IBCVRD,LIM
"RTN","IBCNRP5",167,0)
 F  S IBCNGP=$O(^XTMP("IBCNRP5",IBINA,IBIEN,IBCNGP)) Q:'IBCNGP  D
"RTN","IBCNRP5",168,0)
 . I '$D(^IBA(355.3,+IBCNGP,0)) Q
"RTN","IBCNRP5",169,0)
 . ; if we want all plans, let it pass
"RTN","IBCNRP5",170,0)
 . I IBCNTYP="A" D  Q
"RTN","IBCNRP5",171,0)
 . . D SETPLAN(IBCNGP)
"RTN","IBCNRP5",172,0)
 . ; if we want Matched plans, check for existence of Plan ID
"RTN","IBCNRP5",173,0)
 . I IBCNTYP="M" D  Q
"RTN","IBCNRP5",174,0)
 . . I $P($G(^IBA(355.3,IBCNGP,6)),U)'="" D SETPLAN(IBCNGP)
"RTN","IBCNRP5",175,0)
 I VALMCNT=0 D
"RTN","IBCNRP5",176,0)
 . S ^TMP("IBCNRP5",$J,"DSPDATA",1)=IBIEN
"RTN","IBCNRP5",177,0)
 . S ^TMP("IBCNRP5",$J,"DSPDATA",2)="No data for this Insurance"
"RTN","IBCNRP5",178,0)
 Q
"RTN","IBCNRP5",179,0)
 ;
"RTN","IBCNRP5",180,0)
SETPLAN(IBCNGP) ;
"RTN","IBCNRP5",181,0)
 ; create text
"RTN","IBCNRP5",182,0)
 ;N IBGPZ,I,IBPLN,IBPLNA,LINE
"RTN","IBCNRP5",183,0)
 N I,IBPLN,IBPLNA,LINE
"RTN","IBCNRP5",184,0)
 S VALMCNT=VALMCNT+1,$P(LINE,"-",80)=""
"RTN","IBCNRP5",185,0)
 ;Get new HIPAA fields - IB*2*516
"RTN","IBCNRP5",186,0)
 ;S IBGPZ=^IBA(355.3,+IBCNGP,0))
"RTN","IBCNRP5",187,0)
 ;S X=$$FO^IBCNEUT1($P(IBGPZ,U,3),18)
"RTN","IBCNRP5",188,0)
 ;S X=X_" "_$$FO^IBCNEUT1($P(IBGPZ,U,4),17)
"RTN","IBCNRP5",189,0)
 ;S X=X_" "_$$FO^IBCNEUT1($$EXPAND^IBTRE(355.3,.09,$P(IBGPZ,U,9)),13)
"RTN","IBCNRP5",190,0)
 ; Group Name, Group #, Group Type, Plan ID, Plan Status
"RTN","IBCNRP5",191,0)
 S X=$$FO^IBCNEUT1($$GET1^DIQ(355.3,IBCNGP,2.01),18)
"RTN","IBCNRP5",192,0)
 S X=X_" "_$$FO^IBCNEUT1($$GET1^DIQ(355.3,IBCNGP,2.02),17)
"RTN","IBCNRP5",193,0)
 S X=X_" "_$$FO^IBCNEUT1($$GET1^DIQ(355.3,IBCNGP,.09,"E"),13)
"RTN","IBCNRP5",194,0)
 S IBPLN=$P($G(^IBA(355.3,+IBCNGP,6)),U)
"RTN","IBCNRP5",195,0)
 ; check for plan
"RTN","IBCNRP5",196,0)
 I IBPLN="" D  Q
"RTN","IBCNRP5",197,0)
 . S ^TMP("IBCNRP5",$J,"DSPDATA",VALMCNT)=IBIEN_"^"_X
"RTN","IBCNRP5",198,0)
 . S VALMCNT=VALMCNT+1,^TMP("IBCNRP5",$J,"DSPDATA",VALMCNT)=IBIEN_"^"_"No Plan Found."
"RTN","IBCNRP5",199,0)
 . S VALMCNT=VALMCNT+1,^TMP("IBCNRP5",$J,"DSPDATA",VALMCNT)=IBIEN_"^"_LINE
"RTN","IBCNRP5",200,0)
 ; check plan status information
"RTN","IBCNRP5",201,0)
 S IBPLNA=$P($G(^IBCNR(366.03,IBPLN,0)),U)
"RTN","IBCNRP5",202,0)
 S X=X_" "_$$FO^IBCNEUT1(IBPLNA,13)
"RTN","IBCNRP5",203,0)
 ;
"RTN","IBCNRP5",204,0)
 N ARRAY D STCHK^IBCNRU1(IBPLN,.ARRAY)
"RTN","IBCNRP5",205,0)
 S X=X_"      "_$$FO^IBCNEUT1($S($G(ARRAY(1))="I":"INACTIVE",1:"ACTIVE"),8)
"RTN","IBCNRP5",206,0)
 S ^TMP("IBCNRP5",$J,"DSPDATA",VALMCNT)=IBIEN_"^"_X
"RTN","IBCNRP5",207,0)
 I $G(ARRAY(6)) D
"RTN","IBCNRP5",208,0)
 . N STATAR
"RTN","IBCNRP5",209,0)
 . D STATAR^IBCNRU1(.STATAR)
"RTN","IBCNRP5",210,0)
 . F I=1:1:$L(ARRAY(6),",") D
"RTN","IBCNRP5",211,0)
 .. S VALMCNT=VALMCNT+1
"RTN","IBCNRP5",212,0)
 .. S ^TMP("IBCNRP5",$J,"DSPDATA",VALMCNT)=IBIEN_"^"_"       "_$G(STATAR($P(ARRAY(6),",",I)))
"RTN","IBCNRP5",213,0)
 . S VALMCNT=VALMCNT+1,^TMP("IBCNRP5",$J,"DSPDATA",VALMCNT)=IBIEN_"^"_LINE
"RTN","IBCNRP5",214,0)
 ;
"RTN","IBCNRP5",215,0)
 Q
"RTN","IBCNRPM1")
0^63^B7640127^B6996620
"RTN","IBCNRPM1",1,0)
IBCNRPM1 ;DAOU/CMW - Match Multiple Group Plans to a Pharmacy Plan ;10-MAR-2004
"RTN","IBCNRPM1",2,0)
 ;;2.0;INTEGRATED BILLING;**251,516**;21-MAR-94;Build 123
"RTN","IBCNRPM1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRPM1",4,0)
 ;
"RTN","IBCNRPM1",5,0)
 ;**Program Description**
"RTN","IBCNRPM1",6,0)
 ;  This program selects a plan and displays the 
"RTN","IBCNRPM1",7,0)
 ;  Test Payer Sheets associated to the Plan.
"RTN","IBCNRPM1",8,0)
 ;
"RTN","IBCNRPM1",9,0)
EN ;  Select a plan
"RTN","IBCNRPM1",10,0)
 NEW DA,DIC,DIE,DR,D,Y
"RTN","IBCNRPM1",11,0)
 S DIC="^IBCNR(366.03,",DIC(0)="ABEMZ",DIC("A")="Select PHARMACY PLAN: "
"RTN","IBCNRPM1",12,0)
 D ^DIC I X="^" G EXIT
"RTN","IBCNRPM1",13,0)
 K DIC("A")
"RTN","IBCNRPM1",14,0)
 I +Y<1 S D="F",DIC="^IBCNR(366.03,",DIC(0)="AEMNZ" D IX^DIC
"RTN","IBCNRPM1",15,0)
 I +Y<1 G EXIT
"RTN","IBCNRPM1",16,0)
 S IBCNRP=+Y
"RTN","IBCNRPM1",17,0)
 ;
"RTN","IBCNRPM1",18,0)
INS ;  Select an insurance company
"RTN","IBCNRPM1",19,0)
 NEW DA,DIC,DIE,DR,D,Y,IBIND,IBMULT,IBW
"RTN","IBCNRPM1",20,0)
 S (IBIND,IBMULT,IBW)=1
"RTN","IBCNRPM1",21,0)
 S DIR(0)="350.9,4.06"
"RTN","IBCNRPM1",22,0)
 S DIR("A")="Select INSURANCE COMPANY",DIR("??")="^D ADH^IBCNSM3"
"RTN","IBCNRPM1",23,0)
 S DIR("?")="Select the Insurance Company for the plan you are entering"
"RTN","IBCNRPM1",24,0)
 D ^DIR K DIR S IBCNRI=+Y I Y<1 G EN
"RTN","IBCNRPM1",25,0)
 I $P($G(^DIC(36,+IBCNRI,0)),"^",2)="N" W !,"This company does not reimburse.  " G INS
"RTN","IBCNRPM1",26,0)
 I $P($G(^DIC(36,+IBCNRI,0)),"^",5) W !,*7,"Warning: Inactive Company" G INS
"RTN","IBCNRPM1",27,0)
 ;
"RTN","IBCNRPM1",28,0)
 D GIPF
"RTN","IBCNRPM1",29,0)
 I '$D(^TMP("IBCNR",$J,"GP")) D  G INS
"RTN","IBCNRPM1",30,0)
 . W !,*7,"** No active Group Plans with Pharmacy coverage found for this Insurance Co."
"RTN","IBCNRPM1",31,0)
 ;
"RTN","IBCNRPM1",32,0)
 D EN^IBCNRPM2(IBCNRP,IBCNRI,.IBCNRGP)
"RTN","IBCNRPM1",33,0)
 ;
"RTN","IBCNRPM1",34,0)
 G INS
"RTN","IBCNRPM1",35,0)
 ;
"RTN","IBCNRPM1",36,0)
GIPF ;  screen for valid GIPF
"RTN","IBCNRPM1",37,0)
 ;
"RTN","IBCNRPM1",38,0)
 N GST1,GP0,GP6,IBCOV,LIM,IBCVRD
"RTN","IBCNRPM1",39,0)
 N GPIEN,GPNAM,GPNUM
"RTN","IBCNRPM1",40,0)
 S GST1=1,GPIEN=""
"RTN","IBCNRPM1",41,0)
 K ^TMP("IBCNR",$J,"GP")
"RTN","IBCNRPM1",42,0)
 F  S GPIEN=$O(^IBA(355.3,"B",IBCNRI,GPIEN)) Q:GPIEN=""  D
"RTN","IBCNRPM1",43,0)
 . ;chk for active group
"RTN","IBCNRPM1",44,0)
 . S GP0=$G(^IBA(355.3,GPIEN,0)),GP6=$G(^IBA(355.3,GPIEN,6))
"RTN","IBCNRPM1",45,0)
 . I $P(GP0,U,11)=1 Q
"RTN","IBCNRPM1",46,0)
 . ;chk for pharm plan coverage
"RTN","IBCNRPM1",47,0)
 . S IBCOV=$O(^IBE(355.31,"B","PHARMACY",""))
"RTN","IBCNRPM1",48,0)
 . S LIM="",IBCVRD=0
"RTN","IBCNRPM1",49,0)
 . F  S LIM=$O(^IBA(355.32,"B",GPIEN,LIM)) Q:LIM=""  D
"RTN","IBCNRPM1",50,0)
 .. I $P(^IBA(355.32,LIM,0),U,2)=IBCOV D
"RTN","IBCNRPM1",51,0)
 ... ;chk covered status
"RTN","IBCNRPM1",52,0)
 ... S IBCVRD=$P(^IBA(355.32,LIM,0),U,4)
"RTN","IBCNRPM1",53,0)
 ... I IBCVRD=0 Q
"RTN","IBCNRPM1",54,0)
 ... ; IB*2*516/DF Get new HIPAA fields
"RTN","IBCNRPM1",55,0)
 ... ;S GPNAM=$P($G(GP0),U,3),GPNUM=$P($G(GP0),U,4)
"RTN","IBCNRPM1",56,0)
 ... S GPNAM=$$GET1^DIQ(355.3,GPIEN,2.01),GPNUM=$$GET1^DIQ(355.3,GPIEN,2.02)
"RTN","IBCNRPM1",57,0)
 ... I $G(GPNAM)="" S GPNAM="<blank>"
"RTN","IBCNRPM1",58,0)
 ... I $G(GPNUM)="" S GPNUM="<blank>"
"RTN","IBCNRPM1",59,0)
 ... ;set array = pharm plan and plan type
"RTN","IBCNRPM1",60,0)
 ... S ^TMP("IBCNR",$J,"GP",GPNAM,GPNUM,GPIEN)=$P($G(GP6),U)_"^"_$P($G(GP0),U,9)
"RTN","IBCNRPM1",61,0)
 Q
"RTN","IBCNRPM1",62,0)
 ;
"RTN","IBCNRPM1",63,0)
EXIT K IBCNRP,IBCNRI,IBCNRGP
"RTN","IBCNRPM1",64,0)
 K ^TMP("IBCNR",$J)
"RTN","IBCNRPM1",65,0)
 ;
"RTN","IBCNRPM1",66,0)
 Q
"RTN","IBCNRPMT")
0^150^B4159618^B4118434
"RTN","IBCNRPMT",1,0)
IBCNRPMT ;DAOU/ALA - Match Group Plan to Pharmacy Plan ;14-NOV-2003
"RTN","IBCNRPMT",2,0)
 ;;2.0;INTEGRATED BILLING;**251,516**;21-MAR-94;Build 123
"RTN","IBCNRPMT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRPMT",4,0)
 ;
"RTN","IBCNRPMT",5,0)
 ;**Program Description**
"RTN","IBCNRPMT",6,0)
 ;  This program select an insurance company and displays
"RTN","IBCNRPMT",7,0)
 ;  all the active group plans for that insurance company
"RTN","IBCNRPMT",8,0)
 ;
"RTN","IBCNRPMT",9,0)
EN ;  Select an insurance company
"RTN","IBCNRPMT",10,0)
 S DIR(0)="350.9,4.06"
"RTN","IBCNRPMT",11,0)
 S DIR("A")="Select INSURANCE COMPANY",DIR("??")="^D ADH^IBCNSM3"
"RTN","IBCNRPMT",12,0)
 S DIR("?")="Select the Insurance Company for the plan you are entering"
"RTN","IBCNRPMT",13,0)
 D ^DIR K DIR S IBCNSP=+Y I Y<1 G EXIT
"RTN","IBCNRPMT",14,0)
 I $P($G(^DIC(36,+IBCNSP,0)),"^",2)="N" W !,"This company does not reimburse.  "
"RTN","IBCNRPMT",15,0)
 I $P($G(^DIC(36,+IBCNSP,0)),"^",5) W !,*7,"Warning: Inactive Company" H 3 K IBCNSP G EXIT
"RTN","IBCNRPMT",16,0)
 ;
"RTN","IBCNRPMT",17,0)
GRP NEW DIC,DTOUT,DUOUT,X,Y
"RTN","IBCNRPMT",18,0)
 S (IBIND,IBMULT,IBW)=1
"RTN","IBCNRPMT",19,0)
 S DIC(0)="BEFSXZ"
"RTN","IBCNRPMT",20,0)
 S DIC("S")="S DNM=$NA(^(0)),DIEN=$QS(DNM,2),GST=$$GPS^IBCNRPMT(IBCNSP,DIEN),DIEN=$G(@DNM) I GST'=0"
"RTN","IBCNRPMT",21,0)
 ; MRD;IB*2.0*516 - Look at new fields for Group Name and Number.
"RTN","IBCNRPMT",22,0)
 ;S DIC("W")="W $P(^(0),U,3),"" - "",$P(^(0),U,4)"
"RTN","IBCNRPMT",23,0)
 S DIC("W")="W $P(^(2),U,1),"" - "",$P(^(2),U,2)"
"RTN","IBCNRPMT",24,0)
 S DIC="^IBA(355.3,"
"RTN","IBCNRPMT",25,0)
 S D="B",X=IBCNSP
"RTN","IBCNRPMT",26,0)
 D IX^DIC I Y<1 G EN
"RTN","IBCNRPMT",27,0)
 S IBCNGP=+Y
"RTN","IBCNRPMT",28,0)
 ;
"RTN","IBCNRPMT",29,0)
 D EN^IBCNRP
"RTN","IBCNRPMT",30,0)
 G EN
"RTN","IBCNRPMT",31,0)
 ;
"RTN","IBCNRPMT",32,0)
GPS(INIEN,GPIEN) ;  screen for valid GIPF
"RTN","IBCNRPMT",33,0)
 ;W !,"***",GPIEN
"RTN","IBCNRPMT",34,0)
 N GST1,GP0,IBCOV,LIM,IBCOV
"RTN","IBCNRPMT",35,0)
 S GST1=1
"RTN","IBCNRPMT",36,0)
 S GP0=$G(^IBA(355.3,GPIEN,0))
"RTN","IBCNRPMT",37,0)
 ;chk insurance company
"RTN","IBCNRPMT",38,0)
 I $P(GP0,U,1)'=INIEN S GST1=0 Q GST1
"RTN","IBCNRPMT",39,0)
 ;chk for active group
"RTN","IBCNRPMT",40,0)
 I $P(GP0,U,11)=1 S GST1=0 Q GST1
"RTN","IBCNRPMT",41,0)
 ;chk for pharm plan coverage
"RTN","IBCNRPMT",42,0)
 S IBCOV=$O(^IBE(355.31,"B","PHARMACY",""))
"RTN","IBCNRPMT",43,0)
 S LIM="",IBCVRD=0
"RTN","IBCNRPMT",44,0)
 F  S LIM=$O(^IBA(355.32,"B",GPIEN,LIM)) Q:LIM=""  D
"RTN","IBCNRPMT",45,0)
 . I $P(^IBA(355.32,LIM,0),U,2)=IBCOV D
"RTN","IBCNRPMT",46,0)
 .. ;chk covered status
"RTN","IBCNRPMT",47,0)
 .. S IBCVRD=$P(^IBA(355.32,LIM,0),U,4)
"RTN","IBCNRPMT",48,0)
 I IBCVRD=0 S GST1=0
"RTN","IBCNRPMT",49,0)
 ;W !,"***",GPIEN," - ",GST1 ;
"RTN","IBCNRPMT",50,0)
 Q GST1
"RTN","IBCNRPMT",51,0)
 ;
"RTN","IBCNRPMT",52,0)
EXIT K IBCNSP,IBCPOL,IBIND,IBMULT,IBSEL,IBW,IBALR,IBGRP,IBCNGP
"RTN","IBCNRPMT",53,0)
 Q
"RTN","IBCNRPS2")
0^64^B24644732^B22515799
"RTN","IBCNRPS2",1,0)
IBCNRPS2 ;BHAM ISC/ALA - Plan Match ListMan ;13-NOV-2003
"RTN","IBCNRPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**276,516**;21-MAR-94;Build 123
"RTN","IBCNRPS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRPS2",4,0)
 ;;
"RTN","IBCNRPS2",5,0)
EN ; -- main entry point for IBCNR PLAN MATCH
"RTN","IBCNRPS2",6,0)
 D EN^VALM("IBCNR PLAN STATUS INQUIRY")
"RTN","IBCNRPS2",7,0)
 Q
"RTN","IBCNRPS2",8,0)
 ;
"RTN","IBCNRPS2",9,0)
HDR ; -- header code
"RTN","IBCNRPS2",10,0)
 N IBCNS0,IBCNS11,IBCNS13,IBLEAD,X,X1,X2
"RTN","IBCNRPS2",11,0)
 S IBCNS0=$G(^DIC(36,+IBCNSP,0))
"RTN","IBCNRPS2",12,0)
 S IBCNS11=$G(^DIC(36,+IBCNSP,.11))
"RTN","IBCNRPS2",13,0)
 S IBCNS13=$G(^DIC(36,+IBCNSP,.13))
"RTN","IBCNRPS2",14,0)
 S IBLEAD="All Plans for: "
"RTN","IBCNRPS2",15,0)
 S X="Phone: "_$S($P(IBCNS13,"^")]"":$P(IBCNS13,"^"),1:"<not filed>")
"RTN","IBCNRPS2",16,0)
 S VALMHDR(1)=$$SETSTR^VALM1(X,IBLEAD_$P(IBCNS0,"^"),81-$L(X),40)
"RTN","IBCNRPS2",17,0)
 S X1="Precerts: "_$S($P(IBCNS13,"^",3)]"":$P(IBCNS13,"^",3),1:"<not filed>")
"RTN","IBCNRPS2",18,0)
 S X=$TR($J("",$L(IBLEAD)),""," ")_$S($P(IBCNS11,"^")]"":$P(IBCNS11,"^"),1:"<no street address>")
"RTN","IBCNRPS2",19,0)
 S VALMHDR(2)=$$SETSTR^VALM1(X1,X,81-$L(X1),40)
"RTN","IBCNRPS2",20,0)
 S X=$S($P(IBCNS11,"^",4)]"":$P(IBCNS11,"^",4),1:"<no city>")_", "
"RTN","IBCNRPS2",21,0)
 S X=X_$S($P(IBCNS11,"^",5):$P($G(^DIC(5,$P(IBCNS11,"^",5),0)),"^",2),1:"<no state>")_"  "_$E($P(IBCNS11,"^",6),1,5)_$S($E($P(IBCNS11,"^",6),6,9)]"":"-"_$E($P(IBCNS11,"^",6),6,9),1:"")
"RTN","IBCNRPS2",22,0)
 S VALMHDR(3)=$$SETSTR^VALM1(X,"",$L(IBLEAD)+1,80)
"RTN","IBCNRPS2",23,0)
 S X="For:  ",X=$E(X_$J("",23),1,23)_$S(IBCNTYP="A":"All",IBCNTYP="P":"Pharmacy Covered",1:"Matched")_" Group Plans."
"RTN","IBCNRPS2",24,0)
 S VALMHDR(4)=$$SETSTR^VALM1(" ",X,64,17)
"RTN","IBCNRPS2",25,0)
 Q
"RTN","IBCNRPS2",26,0)
 ;
"RTN","IBCNRPS2",27,0)
INIT ; -- init variables and create list array or report array
"RTN","IBCNRPS2",28,0)
 N IBGP0,IBCPOLD,X,IBCPD6,IBCNRPP,IBCOV,IBCVRD,LIM
"RTN","IBCNRPS2",29,0)
 K ^TMP("IBCNR",$J)
"RTN","IBCNRPS2",30,0)
 S VALMCNT=0,VALMBG=1,IBCNGP=0
"RTN","IBCNRPS2",31,0)
 F  S IBCNGP=$O(^IBA(355.3,"B",IBCNSP,IBCNGP)) Q:'IBCNGP  D
"RTN","IBCNRPS2",32,0)
 . ; if we want all plans, let it pass
"RTN","IBCNRPS2",33,0)
 . I IBCNTYP="A" D  Q
"RTN","IBCNRPS2",34,0)
 . . D SETPLAN(IBCNGP)
"RTN","IBCNRPS2",35,0)
 . ; if we want Pharmacy plans, check for pharms
"RTN","IBCNRPS2",36,0)
 . I IBCNTYP="P" D  Q
"RTN","IBCNRPS2",37,0)
 . . S IBCOV=$O(^IBE(355.31,"B","PHARMACY",""))
"RTN","IBCNRPS2",38,0)
 . . S LIM="",IBCVRD=0
"RTN","IBCNRPS2",39,0)
 . . F  S LIM=$O(^IBA(355.32,"B",IBCNGP,LIM)) Q:LIM=""  D
"RTN","IBCNRPS2",40,0)
 . . . I $P(^IBA(355.32,LIM,0),U,2)=IBCOV S IBCVRD=$P(^IBA(355.32,LIM,0),U,4)
"RTN","IBCNRPS2",41,0)
 . . I IBCVRD D SETPLAN(IBCNGP)
"RTN","IBCNRPS2",42,0)
 . ; if we want Matched plans, check for existence of Plan ID
"RTN","IBCNRPS2",43,0)
 . I IBCNTYP="M" D  Q
"RTN","IBCNRPS2",44,0)
 . . I $P($G(^IBA(355.3,IBCNGP,6)),U)'="" D SETPLAN(IBCNGP)
"RTN","IBCNRPS2",45,0)
 I VALMCNT=0 D
"RTN","IBCNRPS2",46,0)
 . S ^TMP("IBCNR",$J,"SI",1,0)="No Plans Available"
"RTN","IBCNRPS2",47,0)
 . S ^TMP("IBCNR",$J,"SI","IDX",1,1)=IBCNGP
"RTN","IBCNRPS2",48,0)
 Q
"RTN","IBCNRPS2",49,0)
 ;
"RTN","IBCNRPS2",50,0)
SETPLAN(IBCNGP) ;
"RTN","IBCNRPS2",51,0)
 ; create text
"RTN","IBCNRPS2",52,0)
 N IBGPZ,I,IBPLN,IBPLNA
"RTN","IBCNRPS2",53,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCNRPS2",54,0)
 S IBGPZ=^IBA(355.3,+IBCNGP,0)
"RTN","IBCNRPS2",55,0)
 ; if creating report and not a list 
"RTN","IBCNRPS2",56,0)
 I $G(IBCNRRPT) D  Q
"RTN","IBCNRPS2",57,0)
 . ; Group Name, Group #, Group Type, Plan ID, Plan Status
"RTN","IBCNRPS2",58,0)
 . ;Get new HIPAA field - IB*2*516/df
"RTN","IBCNRPS2",59,0)
 . ;S X=$$FO^IBCNEUT1($P(IBGPZ,U,3),18)
"RTN","IBCNRPS2",60,0)
 . ;S X=X_" "_$$FO^IBCNEUT1($P(IBGPZ,U,4),17)
"RTN","IBCNRPS2",61,0)
 . S X=$$FO^IBCNEUT1($$GET1^DIQ(355.3,IBCNGP,2.01),18)
"RTN","IBCNRPS2",62,0)
 . S X=X_" "_$$FO^IBCNEUT1($$GET1^DIQ(355.3,IBCNGP,2.02),17)
"RTN","IBCNRPS2",63,0)
 . S X=X_" "_$$FO^IBCNEUT1($$EXPAND^IBTRE(355.3,.09,$P(IBGPZ,U,9)),13)
"RTN","IBCNRPS2",64,0)
 . S IBPLN=$P($G(^IBA(355.3,+IBCNGP,6)),U)
"RTN","IBCNRPS2",65,0)
 . ; check for plan
"RTN","IBCNRPS2",66,0)
 . I IBPLN="" D  Q
"RTN","IBCNRPS2",67,0)
 . . S ^TMP("IBCNR",$J,"DSPDATA",VALMCNT)=X
"RTN","IBCNRPS2",68,0)
 . . S VALMCNT=VALMCNT+1,^TMP("IBCNR",$J,"DSPDATA",VALMCNT)="No Plan Found."
"RTN","IBCNRPS2",69,0)
 . ; check plan status information
"RTN","IBCNRPS2",70,0)
 . S IBPLNA=$P($G(^IBCNR(366.03,IBPLN,0)),U)
"RTN","IBCNRPS2",71,0)
 . S X=X_" "_$$FO^IBCNEUT1(IBPLNA,13)
"RTN","IBCNRPS2",72,0)
 . ;
"RTN","IBCNRPS2",73,0)
 . N ARRAY D STCHK^IBCNRU1(IBPLN,.ARRAY)
"RTN","IBCNRPS2",74,0)
 . S X=X_"      "_$$FO^IBCNEUT1($S($G(ARRAY(1))="I":"INACTIVE",1:"ACTIVE"),8)
"RTN","IBCNRPS2",75,0)
 . S ^TMP("IBCNR",$J,"DSPDATA",VALMCNT)=X
"RTN","IBCNRPS2",76,0)
 . I $G(ARRAY(6)) D
"RTN","IBCNRPS2",77,0)
 . . N STATAR
"RTN","IBCNRPS2",78,0)
 . . D STATAR^IBCNRU1(.STATAR)
"RTN","IBCNRPS2",79,0)
 . . F I=1:1:$L(ARRAY(6),",") D
"RTN","IBCNRPS2",80,0)
 . . . S VALMCNT=VALMCNT+1
"RTN","IBCNRPS2",81,0)
 . . . S ^TMP("IBCNR",$J,"DSPDATA",VALMCNT)="       "_$G(STATAR($P(ARRAY(6),",",I)))
"RTN","IBCNRPS2",82,0)
 ;
"RTN","IBCNRPS2",83,0)
 S X=$$SETFLD^VALM1(VALMCNT,"","NUMBER")
"RTN","IBCNRPS2",84,0)
 ;
"RTN","IBCNRPS2",85,0)
 I '$P(IBGPZ,U,2) S $E(X,4)="+"
"RTN","IBCNRPS2",86,0)
 S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,IBCNGP,2.01),X,"GNAME") ;Get new HIPAA field - IB*2*516
"RTN","IBCNRPS2",87,0)
 ;
"RTN","IBCNRPS2",88,0)
 I '$P(IBGPZ,U,11) S $E(X,24)="*"
"RTN","IBCNRPS2",89,0)
 S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,IBCNGP,2.02),X,"GNUM") ;Get new HIPAA field - IB*2*516
"RTN","IBCNRPS2",90,0)
 ; 
"RTN","IBCNRPS2",91,0)
 S X=$$SETFLD^VALM1($$EXPAND^IBTRE(355.3,.09,$P(IBGPZ,U,9)),X,"TYPE")
"RTN","IBCNRPS2",92,0)
 ; matched plan active or not
"RTN","IBCNRPS2",93,0)
 S IBPLN=$P($G(^IBA(355.3,+IBCNGP,6)),U)
"RTN","IBCNRPS2",94,0)
 I IBPLN'="" D
"RTN","IBCNRPS2",95,0)
 . S IBPLNA=$P($G(^IBCNR(366.03,+IBPLN,0)),U)
"RTN","IBCNRPS2",96,0)
 . S X=$$SETFLD^VALM1(IBPLNA,X,"PHARM")
"RTN","IBCNRPS2",97,0)
 . N ARRAY
"RTN","IBCNRPS2",98,0)
 . D STCHK^IBCNRU1(IBPLN,.ARRAY)
"RTN","IBCNRPS2",99,0)
 . S X=$$SETFLD^VALM1($S($G(ARRAY(1))="A":"ACTIVE",1:"INACTIVE"),X,"COV")
"RTN","IBCNRPS2",100,0)
 S ^TMP("IBCNR",$J,"SI",VALMCNT,0)=X
"RTN","IBCNRPS2",101,0)
 S ^TMP("IBCNR",$J,"SI","IDX",VALMCNT,VALMCNT)=IBCNGP
"RTN","IBCNRPS2",102,0)
 Q
"RTN","IBCNRPS2",103,0)
 ;
"RTN","IBCNRPS2",104,0)
HELP ; -- help code
"RTN","IBCNRPS2",105,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNRPS2",106,0)
 Q
"RTN","IBCNRPS2",107,0)
 ;
"RTN","IBCNRPS2",108,0)
EXIT ; -- exit code
"RTN","IBCNRPS2",109,0)
 K ^TMP("IBCNR",$J),VALMBCK,VALMY
"RTN","IBCNRPS2",110,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","IBCNRPS2",111,0)
 Q
"RTN","IBCNRPS2",112,0)
 ;
"RTN","IBCNRPS2",113,0)
SEL ; -- select plan
"RTN","IBCNRPS2",114,0)
 N IBSEL,IBX
"RTN","IBCNRPS2",115,0)
 D S1
"RTN","IBCNRPS2",116,0)
 I 'IBX Q  ; no group selected
"RTN","IBCNRPS2",117,0)
 ;
"RTN","IBCNRPS2",118,0)
 D 
"RTN","IBCNRPS2",119,0)
 . N IBCNRRPT,IBCNGP,VALMCNT,LST,IBCNRDEV
"RTN","IBCNRPS2",120,0)
 . S VALMCNT=0,IBCNRRPT=1,IBCNRDEV=0,IBCNGP=IBSEL
"RTN","IBCNRPS2",121,0)
 . K ^TMP("IBCNR",$J,"DSPDATA")
"RTN","IBCNRPS2",122,0)
 . D SETPLAN(IBSEL)
"RTN","IBCNRPS2",123,0)
 . D PRINT^IBCNRPSI
"RTN","IBCNRPS2",124,0)
 D SPQ
"RTN","IBCNRPS2",125,0)
 Q
"RTN","IBCNRPS2",126,0)
S1 ;
"RTN","IBCNRPS2",127,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,IBOK,IBQUIT,Y
"RTN","IBCNRPS2",128,0)
 D EN^VALM2($G(XQORNOD(0)),"S"),FULL^VALM1
"RTN","IBCNRPS2",129,0)
 S IBX=$O(VALMY(0)),VALMBCK="R"
"RTN","IBCNRPS2",130,0)
 ;
"RTN","IBCNRPS2",131,0)
 I 'IBX W !!,"No group selected!" G SPQ
"RTN","IBCNRPS2",132,0)
 S IBSEL=+$G(^TMP("IBCNR",$J,"SI","IDX",IBX,IBX))
"RTN","IBCNRPS2",133,0)
 Q
"RTN","IBCNRPS2",134,0)
 ;
"RTN","IBCNRPS2",135,0)
SPQ ;
"RTN","IBCNRPS2",136,0)
 I '$O(IBSEL(0)),VALMBCK="R" D PAUSE^VALM1
"RTN","IBCNRPS2",137,0)
 Q
"RTN","IBCNRRP3")
0^65^B58110020^B55033574
"RTN","IBCNRRP3",1,0)
IBCNRRP3 ;BHAM ISC/CMW - GROUP PLAN WORKSHEET REPORT PRINT ;03-MAR-2004
"RTN","IBCNRRP3",2,0)
 ;;2.0;INTEGRATED BILLING;**251,276,516**;21-MAR-94;Build 123
"RTN","IBCNRRP3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRRP3",4,0)
 ;
"RTN","IBCNRRP3",5,0)
 ; ePHARM GROUP PLAN WORKSHEET REPORT
"RTN","IBCNRRP3",6,0)
 ;
"RTN","IBCNRRP3",7,0)
 ; Called by IBCNRRP1
"RTN","IBCNRRP3",8,0)
 ;
"RTN","IBCNRRP3",9,0)
 ; Input variables from IBCNRRP1 and IBCNRRP2:
"RTN","IBCNRRP3",10,0)
 ;   IBCNRRTN = "IBCNRRP1"
"RTN","IBCNRRP3",11,0)
 ;   IBCNRSPC("BEGDT") = Start Date for dt range
"RTN","IBCNRRP3",12,0)
 ;   IBCNRSPC("ENDDT") = End Date for dt range
"RTN","IBCNRRP3",13,0)
 ;   IBCNRSPC("SORT") = 1 - By Insurance/Group; 2 - Total Claims; 
"RTN","IBCNRRP3",14,0)
 ;                      3 - Total Charges; 4 - Exceptions
"RTN","IBCNRRP3",15,0)
 ;   IBCNRSPC("MATCH") = 1 - Matched Only; 0 - All;
"RTN","IBCNRRP3",16,0)
 ;    
"RTN","IBCNRRP3",17,0)
 ;   ^TMP(IBCNRRTN,1); ^TMP(IBCNRRTN,2); ^TMP(IBCNRRTN,3)
"RTN","IBCNRRP3",18,0)
 ; Must call at appropriate tag
"RTN","IBCNRRP3",19,0)
 Q
"RTN","IBCNRRP3",20,0)
 ;
"RTN","IBCNRRP3",21,0)
 ;
"RTN","IBCNRRP3",22,0)
EN(IBCNRRTN,IBCNRSPC) ; Entry pt.
"RTN","IBCNRRP3",23,0)
 ;
"RTN","IBCNRRP3",24,0)
 ; Init vars
"RTN","IBCNRRP3",25,0)
 N CRT,MAXCNT,IBPGC,IBBDT,IBEDT,IBMAT,IBPY,IBPXT,IBSRT,IBDTL
"RTN","IBCNRRP3",26,0)
 N X,Y,DIR,DTOUT,DUOUT,LIN,TOTALS
"RTN","IBCNRRP3",27,0)
 ;
"RTN","IBCNRRP3",28,0)
 S IBBDT=$G(IBCNRSPC("BEGDT"))
"RTN","IBCNRRP3",29,0)
 S IBEDT=$G(IBCNRSPC("ENDDT"))
"RTN","IBCNRRP3",30,0)
 S IBSRT=$G(IBCNRSPC("SORT"))
"RTN","IBCNRRP3",31,0)
 S IBMAT=$G(IBCNRSPC("MATCH"))
"RTN","IBCNRRP3",32,0)
 S (IBPXT,IBPGC)=0
"RTN","IBCNRRP3",33,0)
 ;
"RTN","IBCNRRP3",34,0)
 ; Determine IO parameters
"RTN","IBCNRRP3",35,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCNRRP3",36,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNRRP3",37,0)
 ;
"RTN","IBCNRRP3",38,0)
 D PRINT(IBCNRRTN,IBBDT,IBEDT,IBSRT,MAXCNT,IBPGC,IBMAT)
"RTN","IBCNRRP3",39,0)
 I $G(ZTSTOP)!IBPXT G EXIT3
"RTN","IBCNRRP3",40,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D
"RTN","IBCNRRP3",41,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNRRP3",42,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNRRP3",43,0)
 ;
"RTN","IBCNRRP3",44,0)
EXIT3 ; Exit pt
"RTN","IBCNRRP3",45,0)
 Q
"RTN","IBCNRRP3",46,0)
 ;
"RTN","IBCNRRP3",47,0)
PRINT(RTN,BDT,EDT,SRT,MAX,PGC,MAT) ; Print data
"RTN","IBCNRRP3",48,0)
 ; Input params: RNT = "IBCNRRP1" - routine, BDT = starting dt,
"RTN","IBCNRRP3",49,0)
 ;  EDT = ending dt
"RTN","IBCNRRP3",50,0)
 ;  SRT = 1/2/3
"RTN","IBCNRRP3",51,0)
 ;  MAT = 1/0
"RTN","IBCNRRP3",52,0)
 ;
"RTN","IBCNRRP3",53,0)
 ; Init vars
"RTN","IBCNRRP3",54,0)
 N EORMSG,NONEMSG,TOTDASHS,DISPDATA,SORT,CT,PRT1,PRT2
"RTN","IBCNRRP3",55,0)
 ;
"RTN","IBCNRRP3",56,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNRRP3",57,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNRRP3",58,0)
 S $P(TOTDASHS,"=",89)=""
"RTN","IBCNRRP3",59,0)
 S CT=0
"RTN","IBCNRRP3",60,0)
 ;
"RTN","IBCNRRP3",61,0)
 I '$D(^XTMP(RTN)) D HEADER W !,?(132-$L(NONEMSG)\2),NONEMSG,!! G PRINT2
"RTN","IBCNRRP3",62,0)
 ;
"RTN","IBCNRRP3",63,0)
 ; Build lines of data to display
"RTN","IBCNRRP3",64,0)
 K ^TMP("IBCNR",$J,"RPTDATA")
"RTN","IBCNRRP3",65,0)
 D DATA
"RTN","IBCNRRP3",66,0)
 K ^TMP("IBCNR",$J,"DSPDATA")
"RTN","IBCNRRP3",67,0)
 D DISP
"RTN","IBCNRRP3",68,0)
 ; Display lines of response
"RTN","IBCNRRP3",69,0)
 D LINE
"RTN","IBCNRRP3",70,0)
 K ^TMP("IBCNR",$J,"DSPDATA"),^TMP("IBCNR",$J,"RPTDATA")
"RTN","IBCNRRP3",71,0)
 Q
"RTN","IBCNRRP3",72,0)
 ;
"RTN","IBCNRRP3",73,0)
PRINT2 I $G(ZTSTOP)!IBPXT G PRINTX
"RTN","IBCNRRP3",74,0)
 I $Y+1>MAX!('PGC) D HEADER I $G(ZTSTOP)!$G(IBPXT) G PRINTX
"RTN","IBCNRRP3",75,0)
 W !,?(132-$L(EORMSG)\2),EORMSG
"RTN","IBCNRRP3",76,0)
 ;
"RTN","IBCNRRP3",77,0)
PRINTX ; PRINT exit point
"RTN","IBCNRRP3",78,0)
 Q
"RTN","IBCNRRP3",79,0)
 ;
"RTN","IBCNRRP3",80,0)
HEADER ; Print header info for each page
"RTN","IBCNRRP3",81,0)
 ; Assumes vars from PRINT: CRT,PGC,IBPXT,MAX,SRT,BDT,EDT,PYR,RDTL,MAR
"RTN","IBCNRRP3",82,0)
 ; Init vars
"RTN","IBCNRRP3",83,0)
 N DIR,X,Y,DTOUT,DUOUT,OFFSET,HDR,DASHES,DASHES2,LIN
"RTN","IBCNRRP3",84,0)
 ;
"RTN","IBCNRRP3",85,0)
 I CRT,PGC>0,'$D(ZTQUEUED) D  I IBPXT G HEADERX
"RTN","IBCNRRP3",86,0)
 . I MAX<51 F LIN=1:1:(MAX-$Y) W !
"RTN","IBCNRRP3",87,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNRRP3",88,0)
 . I $D(DTOUT)!$D(DUOUT) S IBPXT=1 Q
"RTN","IBCNRRP3",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S (ZTSTOP,IBPXT)=1 G HEADERX
"RTN","IBCNRRP3",90,0)
 S PGC=PGC+1
"RTN","IBCNRRP3",91,0)
 W @IOF,!,?1,"ePHARM GROUP PLAN WORKSHEET REPORT"
"RTN","IBCNRRP3",92,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,1)_"  Page: "_PGC
"RTN","IBCNRRP3",93,0)
 S OFFSET=80-$L(HDR)
"RTN","IBCNRRP3",94,0)
 W ?OFFSET,HDR
"RTN","IBCNRRP3",95,0)
 W !,?1,"Claims with Pharmacy Coverage Sorted by: "_$S(SRT=1:"Insurance/Group",SRT=2:"Max. Total Claims",1:"Max. Total Charges")
"RTN","IBCNRRP3",96,0)
 S HDR=$$FMTE^XLFDT(BDT,"5Z")_" - "_$$FMTE^XLFDT(EDT,"5Z")
"RTN","IBCNRRP3",97,0)
 S OFFSET=80-$L(HDR)\2
"RTN","IBCNRRP3",98,0)
 W !,?OFFSET,HDR
"RTN","IBCNRRP3",99,0)
 ; Display column headings
"RTN","IBCNRRP3",100,0)
 W !,?1,"Insurance Company Name",?40,"Insurance Company Address"
"RTN","IBCNRRP3",101,0)
 W !,?3,"Group Name/Number",?42,"Pharmacy Plan",?60," BIN",?70,"PCN"
"RTN","IBCNRRP3",102,0)
 S $P(DASHES,"=",80)=""
"RTN","IBCNRRP3",103,0)
 W !,?1,DASHES
"RTN","IBCNRRP3",104,0)
 ;
"RTN","IBCNRRP3",105,0)
HEADERX ; HEADER exit pt
"RTN","IBCNRRP3",106,0)
 Q
"RTN","IBCNRRP3",107,0)
 ;
"RTN","IBCNRRP3",108,0)
LINE ; Print line of data
"RTN","IBCNRRP3",109,0)
 ; Assumes vars from PRINT: PGC,IBPXT,MAX
"RTN","IBCNRRP3",110,0)
 ; Init vars
"RTN","IBCNRRP3",111,0)
 N CT,II
"RTN","IBCNRRP3",112,0)
 ;
"RTN","IBCNRRP3",113,0)
 S CT=+$O(^TMP("IBCNR",$J,"DSPDATA",""),-1)
"RTN","IBCNRRP3",114,0)
 I $Y+1+CT>MAX D HEADER I $G(ZTSTOP)!IBPXT G LINEX
"RTN","IBCNRRP3",115,0)
 F II=1:1:CT D  Q:$G(ZTSTOP)!IBPXT
"RTN","IBCNRRP3",116,0)
 . I $Y+1>MAX!('PGC) D HEADER I $G(ZTSTOP)!IBPXT Q
"RTN","IBCNRRP3",117,0)
 . W !,?1,^TMP("IBCNR",$J,"DSPDATA",II)
"RTN","IBCNRRP3",118,0)
 . Q
"RTN","IBCNRRP3",119,0)
 ;
"RTN","IBCNRRP3",120,0)
LINEX ; LINE exit pt
"RTN","IBCNRRP3",121,0)
 Q
"RTN","IBCNRRP3",122,0)
 ;
"RTN","IBCNRRP3",123,0)
DATA ; Gather and format lines of data to be printed
"RTN","IBCNRRP3",124,0)
 ; Assumes vars from PRINT: RTN,SRT,SRT,RDTL,CT,PRT1,PRT2
"RTN","IBCNRRP3",125,0)
 ; Init vars
"RTN","IBCNRRP3",126,0)
 ;
"RTN","IBCNRRP3",127,0)
 ;Loop through and sort TMP file
"RTN","IBCNRRP3",128,0)
 N CNT,IBINS,IBINSNM,IBGRP,IBGRPNM,IBGRPNB,RPDT,RPTOT,RPTCNT,RPTCHG
"RTN","IBCNRRP3",129,0)
 ;Get new HIPAA fields, IBGRP0 no longer needed - IB*2*516
"RTN","IBCNRRP3",130,0)
 ;N IBGRP0,IBGRP6,IBGRPNM,IBPLBIN,IBPLNNM,IBPLPCN,IBPPIEN
"RTN","IBCNRRP3",131,0)
 N IBGRP6,IBGRPNM,IBPLBIN,IBPLNNM,IBPLPCN,IBPPIEN
"RTN","IBCNRRP3",132,0)
 S IBINS=0,CNT=0
"RTN","IBCNRRP3",133,0)
 F  S IBINS=$O(^XTMP(RTN,IBINS)) Q:IBINS=""  D
"RTN","IBCNRRP3",134,0)
 . ;get insurance company name
"RTN","IBCNRRP3",135,0)
 . S IBINSNM=$P($G(^DIC(36,IBINS,0)),U)
"RTN","IBCNRRP3",136,0)
 . I IBINSNM="" S IBINSNM="NO NAME EXISTS"
"RTN","IBCNRRP3",137,0)
 . S IBGRP=0
"RTN","IBCNRRP3",138,0)
 . F  S IBGRP=$O(^XTMP(RTN,IBINS,IBGRP)) Q:IBGRP=""  D
"RTN","IBCNRRP3",139,0)
 .. ;get group info
"RTN","IBCNRRP3",140,0)
 .. ;S IBGRP0=$G(^IBA(355.3,IBGRP,0))
"RTN","IBCNRRP3",141,0)
 .. ;get pharmacy plan info
"RTN","IBCNRRP3",142,0)
 .. S IBGRP6=$G(^IBA(355.3,IBGRP,6))
"RTN","IBCNRRP3",143,0)
 .. I 'IBGRP6,$G(MAT) Q  ; Matched only
"RTN","IBCNRRP3",144,0)
 .. ;I IBGRP0 D
"RTN","IBCNRRP3",145,0)
 .. I $$GET1^DIQ(355.3,IBGRP,2.01)]"" D
"RTN","IBCNRRP3",146,0)
 ... S (IBGRPNM,IBGRPNB)=""
"RTN","IBCNRRP3",147,0)
 ... ;S IBGRPNM=$P($G(IBGRP0),U,3) I $G(IBGRPNM)="" S IBGRPNM="<blank>"
"RTN","IBCNRRP3",148,0)
 ... ;S IBGRPNB=$P($G(IBGRP0),U,4) I $G(IBGRPNB)="" S IBGRPNB="<blank>"
"RTN","IBCNRRP3",149,0)
 ... S IBGRPNM=$$GET1^DIQ(355.3,IBGRP,2.01) I $G(IBGRPNM)="" S IBGRPNM="<blank>"
"RTN","IBCNRRP3",150,0)
 ... S IBGRPNB=$$GET1^DIQ(355.3,IBGRP,2.02) I $G(IBGRPNB)="" S IBGRPNB="<blank>"
"RTN","IBCNRRP3",151,0)
 ... S RPDT=IBGRPNB
"RTN","IBCNRRP3",152,0)
 .. I IBGRP6 D
"RTN","IBCNRRP3",153,0)
 ... S (IBPPIEN,IBPLNNM,IBPLPCN)=""
"RTN","IBCNRRP3",154,0)
 ... S IBPPIEN=$P($G(IBGRP6),U)
"RTN","IBCNRRP3",155,0)
 ... S IBPLNNM=$P($G(^IBCNR(366.03,IBPPIEN,0)),U,2)
"RTN","IBCNRRP3",156,0)
 ... S IBPLBIN=$P($G(^IBCNR(366.03,IBPPIEN,10)),U,2)
"RTN","IBCNRRP3",157,0)
 ... S IBPLPCN=$P($G(^IBCNR(366.03,IBPPIEN,10)),U,3)
"RTN","IBCNRRP3",158,0)
 ... S RPDT=$G(RPDT)_U_$G(IBPLNNM)_U_$G(IBPLBIN)_U_$G(IBPLPCN)
"RTN","IBCNRRP3",159,0)
 .. E  S RPDT=$G(RPDT)_U_U_U
"RTN","IBCNRRP3",160,0)
 .. S RPDT=$G(RPDT)_U_$P($G(IBGRP6),U,2,3)
"RTN","IBCNRRP3",161,0)
 .. S RPTOT=^XTMP(RTN,IBINS,IBGRP)
"RTN","IBCNRRP3",162,0)
 .. S RPTCNT=$P(RPTOT,U),RPTCHG=$P(RPTOT,U,2)
"RTN","IBCNRRP3",163,0)
 .. I SRT=1 D  Q
"RTN","IBCNRRP3",164,0)
 ... S ^TMP("IBCNR",$J,"RPTDATA",SRT,IBINSNM,IBINS,IBGRPNM,IBGRP)=$G(RPDT)
"RTN","IBCNRRP3",165,0)
 .. I SRT=2 D  Q
"RTN","IBCNRRP3",166,0)
 ... S ^TMP("IBCNR",$J,"RPTDATA",-$G(RPTCNT),IBINSNM,IBINS,IBGRPNM,IBGRP)=$G(RPDT)
"RTN","IBCNRRP3",167,0)
 .. I SRT=3 D  Q
"RTN","IBCNRRP3",168,0)
 ... S ^TMP("IBCNR",$J,"RPTDATA",-$G(RPTCHG),IBINSNM,IBINS,IBGRPNM,IBGRP)=$G(RPDT)
"RTN","IBCNRRP3",169,0)
 .. I SRT=4 D  Q
"RTN","IBCNRRP3",170,0)
 ... I '$G(IBGRP6) Q
"RTN","IBCNRRP3",171,0)
 ... N OK S OK=1
"RTN","IBCNRRP3",172,0)
 ... I $G(IBPLBIN)'="",$P(IBGRP6,U,2)'="",IBPLBIN'=$P(IBGRP6,U,2) S OK=0
"RTN","IBCNRRP3",173,0)
 ... I $G(IBPLPCN)'="",$P(IBGRP6,U,3)'="",IBPLPCN'=$P(IBGRP6,U,3) S OK=0
"RTN","IBCNRRP3",174,0)
 ... I 'OK S ^TMP("IBCNR",$J,"RPTDATA",SRT,IBINSNM,IBINS,IBGRPNM,IBGRP)=$G(RPDT)
"RTN","IBCNRRP3",175,0)
 Q
"RTN","IBCNRRP3",176,0)
 ;
"RTN","IBCNRRP3",177,0)
DISP ;set up display data
"RTN","IBCNRRP3",178,0)
 N CNT,DISP1,DISP2,DISP3,DISP4,DISP5,DISPD,DASHES2
"RTN","IBCNRRP3",179,0)
 N IBCNADR,IBCIN11,IBCINST,I
"RTN","IBCNRRP3",180,0)
 S DISP1="",CNT=0,$P(DASHES2,"-",80)=""
"RTN","IBCNRRP3",181,0)
 F  S DISP1=$O(^TMP("IBCNR",$J,"RPTDATA",DISP1)) Q:DISP1=""  D
"RTN","IBCNRRP3",182,0)
 . S DISP2=""
"RTN","IBCNRRP3",183,0)
 . F  S DISP2=$O(^TMP("IBCNR",$J,"RPTDATA",DISP1,DISP2)) Q:DISP2=""  D
"RTN","IBCNRRP3",184,0)
 .. S DISP3=0
"RTN","IBCNRRP3",185,0)
 .. F  S DISP3=$O(^TMP("IBCNR",$J,"RPTDATA",DISP1,DISP2,DISP3)) Q:DISP3=""  D
"RTN","IBCNRRP3",186,0)
 ... S DISP4=""
"RTN","IBCNRRP3",187,0)
 ... F  S DISP4=$O(^TMP("IBCNR",$J,"RPTDATA",DISP1,DISP2,DISP3,DISP4)) Q:DISP4=""  D
"RTN","IBCNRRP3",188,0)
 .... S DISP5=0
"RTN","IBCNRRP3",189,0)
 .... F  S DISP5=$O(^TMP("IBCNR",$J,"RPTDATA",DISP1,DISP2,DISP3,DISP4,DISP5)) Q:DISP5=""  D
"RTN","IBCNRRP3",190,0)
 ..... S DISPD=$G(^TMP("IBCNR",$J,"RPTDATA",DISP1,DISP2,DISP3,DISP4,DISP5))
"RTN","IBCNRRP3",191,0)
 ..... ;get insurance addr
"RTN","IBCNRRP3",192,0)
 ..... S IBCIN11=$G(^DIC(36,DISP3,.11))
"RTN","IBCNRRP3",193,0)
 ..... S IBCINST=$S($P(IBCIN11,U,5)="":"--",1:$P($G(^DIC(5,$P(IBCIN11,U,5),0)),U,2))
"RTN","IBCNRRP3",194,0)
 ..... S IBCNADR=$E($P(IBCIN11,U),1,15)_","_$E($P(IBCIN11,U,4),1,10)_","_IBCINST_" "_$E($P(IBCIN11,U,6),1,5)
"RTN","IBCNRRP3",195,0)
 ..... S CNT=CNT+1
"RTN","IBCNRRP3",196,0)
 ..... ;insurance co and group/plan
"RTN","IBCNRRP3",197,0)
 ..... S ^TMP("IBCNR",$J,"DSPDATA",CNT)=$$FO^IBCNEUT1(DISP2,40)_$$FO^IBCNEUT1(IBCNADR,35,"L")
"RTN","IBCNRRP3",198,0)
 ..... ;bin; pcn; and pharmacy plan
"RTN","IBCNRRP3",199,0)
 ..... S CNT=CNT+1
"RTN","IBCNRRP3",200,0)
 ..... S ^TMP("IBCNR",$J,"DSPDATA",CNT)=$$FO^IBCNEUT1(DISP4_"/"_$P(DISPD,U),35,"L")_$$FO^IBCNEUT1("  "_$P(DISPD,U,2),24,"L")_$$FO^IBCNEUT1(" "_$P(DISPD,U,3),10,"L")_$$FO^IBCNEUT1($P(DISPD,U,4),10,"L")
"RTN","IBCNRRP3",201,0)
 ..... S I=$$FO^IBCNEUT1("",60)_$$FO^IBCNEUT1($P(DISPD,U,5),10,"L")_$$FO^IBCNEUT1($P(DISPD,U,6),10,"L")
"RTN","IBCNRRP3",202,0)
 ..... I $TR(I," ")'="" S CNT=CNT+1,^TMP("IBCNR",$J,"DSPDATA",CNT)=I
"RTN","IBCNRRP3",203,0)
 ..... S CNT=CNT+1
"RTN","IBCNRRP3",204,0)
 ..... S ^TMP("IBCNR",$J,"DSPDATA",CNT)=$$FO^IBCNEUT1(DASHES2,79,"L")
"RTN","IBCNRRP3",205,0)
 ;
"RTN","IBCNRRP3",206,0)
DATAX ; DATA exit pt
"RTN","IBCNRRP3",207,0)
 K RPTDATA
"RTN","IBCNRRP3",208,0)
 Q
"RTN","IBCNRRP3",209,0)
 ;
"RTN","IBCNS")
0^67^B28265165^B27665348
"RTN","IBCNS",1,0)
IBCNS ;ALB/AAS - IS INSURANCE ACTIVE ; 22-JULY-91
"RTN","IBCNS",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,80,82,133,399,516**;21-MAR-94;Build 123
"RTN","IBCNS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNS",4,0)
 ;
"RTN","IBCNS",5,0)
 ;MAP TO DGCRNS
"RTN","IBCNS",6,0)
 ;
"RTN","IBCNS",7,0)
 ;Input   -  DFN       = patient
"RTN","IBCNS",8,0)
 ;        -  IBINDT  = (optional) date to check ins active for or today if not defined
"RTN","IBCNS",9,0)
 ;        -  IBOUTP  = (optional) 1 if want active insurance returned in IBDD(insurance company)=node in patient file
"RTN","IBCNS",10,0)
 ;        -            = 2 if want all ins returned
"RTN","IBCNS",11,0)
 ;
"RTN","IBCNS",12,0)
 ;Output  -  IBINS   = 1 if has active ins., 0 if no active ins.
"RTN","IBCNS",13,0)
 ;        -  IBDD()  = internal node in patient file of valid ins.
"RTN","IBCNS",14,0)
 ;        -  IBDDI() = internal node in patient file of invalid ins.
"RTN","IBCNS",15,0)
 ;
"RTN","IBCNS",16,0)
% N J,X S IBINS=0 K IBDD,IBDDI
"RTN","IBCNS",17,0)
 ;IB*2.0*516/TAZ - Retrieve Insurance data with HIPAA compliant Fields
"RTN","IBCNS",18,0)
 ;S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I $D(^DPT(DFN,.312,J,0)) S X=^(0) D CHK
"RTN","IBCNS",19,0)
 S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I $D(^DPT(DFN,.312,J,0)) S X=$$ZND^IBCNS1(DFN,J) D CHK
"RTN","IBCNS",20,0)
 Q
"RTN","IBCNS",21,0)
 ;
"RTN","IBCNS",22,0)
CHK ;
"RTN","IBCNS",23,0)
 ;Input   -  IBI  = entry in insurance multiple
"RTN","IBCNS",24,0)
 ;
"RTN","IBCNS",25,0)
 S Z=$S($D(IBINDT):IBINDT,1:DT),Z1=$S($D(IBOUTP):IBOUTP,1:0)
"RTN","IBCNS",26,0)
 G:'$D(^DIC(36,+X,0)) CHKQ S X1=^(0) ;insurance company entry doesn't exist
"RTN","IBCNS",27,0)
 I $P(X,"^",8) G:Z<$P(X,"^",8) CHKQ ;effective date later than care
"RTN","IBCNS",28,0)
 I $P(X,"^",4) G:Z>$P(X,"^",4) CHKQ ;care after expiration date
"RTN","IBCNS",29,0)
 I $P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",11) G CHKQ ;plan is inactive
"RTN","IBCNS",30,0)
 G:$P(X1,"^",5) CHKQ ;insurance company inactive
"RTN","IBCNS",31,0)
 I '$G(IBWNR) G:$P(X1,"^",2)="N" CHKQ ;insurance company will not reimburse
"RTN","IBCNS",32,0)
 ;IB*2.0*516/TAZ - Return Valid Insurance with HIPAA compliant fields
"RTN","IBCNS",33,0)
 S IBINS=1 I Z1 S IBDD(+X)=X
"RTN","IBCNS",34,0)
 ;S IBINS=1 I Z1 D
"RTN","IBCNS",35,0)
 ;.S IBDD(+X)=X
"RTN","IBCNS",36,0)
 ;.Q:'$P(IBDD(+X),"^",18)
"RTN","IBCNS",37,0)
 ;.S Y=$G(^IBA(355.3,+$P(IBDD(+X),"^",18),0))
"RTN","IBCNS",38,0)
 ;.I $P(Y,"^",4)'="" S $P(IBDD(+X),"^",3)=$P(Y,"^",4) ; move group number
"RTN","IBCNS",39,0)
 ;.I $P(Y,"^",3)'="" S $P(IBDD(+X),"^",15)=$P(Y,"^",3) ; move group name
"RTN","IBCNS",40,0)
CHKQ ;
"RTN","IBCNS",41,0)
 ;IB*2.0*516/TAZ - Return Invalid Insurance with HIPAA compliant Fields
"RTN","IBCNS",42,0)
 I Z1=2&('$D(IBDD(+X))) S IBDDI(+X)=X
"RTN","IBCNS",43,0)
 ;I Z1=2&('$D(IBDD(+X))) D
"RTN","IBCNS",44,0)
 ;.S IBDDI(+X)=X
"RTN","IBCNS",45,0)
 ;.Q:'$P(IBDDI(+X),"^",18)
"RTN","IBCNS",46,0)
 ;.S Y=$G(^IBA(355.3,+$P(IBDDI(+X),"^",18),0))
"RTN","IBCNS",47,0)
 ;.I $P(Y,"^",4)'="" S $P(IBDDI(+X),"^",3)=$P(Y,"^",4) ; move group number
"RTN","IBCNS",48,0)
 ;.I $P(Y,"^",3)'="" S $P(IBDDI(+X),"^",15)=$P(Y,"^",3) ; move group name
"RTN","IBCNS",49,0)
 K X,X1,Z,Z1,Y Q
"RTN","IBCNS",50,0)
 ;
"RTN","IBCNS",51,0)
DD ;  - called from input transform and x-refs for field 101,102,103
"RTN","IBCNS",52,0)
 ;  - input requires da=internal entry number in 399
"RTN","IBCNS",53,0)
 ;  - outputs IBdd(ins co.) array
"RTN","IBCNS",54,0)
 ; patch 80 - Companies that Will Not Reimburse should be included so they can be added to the bill
"RTN","IBCNS",55,0)
 N DFN,IBWNR S DFN=$P(^DGCR(399,DA,0),"^",2),IBOUTP=1,IBINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT),IBWNR=1
"RTN","IBCNS",56,0)
 D %
"RTN","IBCNS",57,0)
DDQ K IBOUTP,IBINDT Q
"RTN","IBCNS",58,0)
 ;
"RTN","IBCNS",59,0)
 ;
"RTN","IBCNS",60,0)
DISP ;  -Display all insurance company information
"RTN","IBCNS",61,0)
 ;  -input DFN
"RTN","IBCNS",62,0)
 ;
"RTN","IBCNS",63,0)
 N IBDTIN
"RTN","IBCNS",64,0)
DISPDT ; Entrypoint if IBDTIN is to be used to display coverage
"RTN","IBCNS",65,0)
 Q:'$D(DFN)  D:'$D(IOF) HOME^%ZIS
"RTN","IBCNS",66,0)
 N X,IBINS,IBX
"RTN","IBCNS",67,0)
 D ALL^IBCNS1(DFN,"IBINS")
"RTN","IBCNS",68,0)
 ;
"RTN","IBCNS",69,0)
 D HDR
"RTN","IBCNS",70,0)
 I '$D(IBINS) W !,"    No Insurance Information" G DISPQ
"RTN","IBCNS",71,0)
 ;
"RTN","IBCNS",72,0)
 S X=0 F  S X=$O(IBINS(X)) Q:'X  S IBINS=IBINS(X,0) D D1 I +$G(IBCOVEXT) D D2EXT ; display
"RTN","IBCNS",73,0)
 ;
"RTN","IBCNS",74,0)
DISPQ W ! S X=+$G(^IBA(354,DFN,60)) I +X W !,?16,"*** Verification of No Coverage ",$$FMTE^XLFDT(X)," ***"
"RTN","IBCNS",75,0)
 I $$BUFFER^IBCNBU1(DFN) W !,?17,"***  Patient has Insurance Buffer entries  ***"
"RTN","IBCNS",76,0)
 Q
"RTN","IBCNS",77,0)
 ;
"RTN","IBCNS",78,0)
OLDISP ;  -Display all insurance company information
"RTN","IBCNS",79,0)
 ;  -input DFN
"RTN","IBCNS",80,0)
 ;
"RTN","IBCNS",81,0)
 Q:'$D(DFN)  D:'$D(IOF) HOME^%ZIS
"RTN","IBCNS",82,0)
 ;
"RTN","IBCNS",83,0)
 S IBOUTP=2 D IBCNS
"RTN","IBCNS",84,0)
 ;
"RTN","IBCNS",85,0)
 N IBDTIN
"RTN","IBCNS",86,0)
 D HDR
"RTN","IBCNS",87,0)
 I '$D(IBDD),'$D(IBDDI) W !,"    No Insurance Information" G DISPQ
"RTN","IBCNS",88,0)
 ;
"RTN","IBCNS",89,0)
 S X="" F  S X=$O(IBDD(X)) Q:X=""  S IBINS=IBDD(X) D D1 ;active insurance
"RTN","IBCNS",90,0)
 S X="" F  S X=$O(IBDDI(X)) Q:X=""  S IBINS=IBDDI(X) D D1 ;inactive ins
"RTN","IBCNS",91,0)
 ;
"RTN","IBCNS",92,0)
OLDISPQ K IBDD,IBDDI,IBX
"RTN","IBCNS",93,0)
 Q
"RTN","IBCNS",94,0)
 ;
"RTN","IBCNS",95,0)
HDR ; -- print standard header
"RTN","IBCNS",96,0)
 D HDR1("=",IOM-$S($G(IBDTIN):1,1:4))
"RTN","IBCNS",97,0)
 Q
"RTN","IBCNS",98,0)
 ;
"RTN","IBCNS",99,0)
HDR1(CHAR,LENG) ; -- print header, specify character
"RTN","IBCNS",100,0)
 N OFF
"RTN","IBCNS",101,0)
 S OFF=$S($G(IBDTIN):0,1:2)
"RTN","IBCNS",102,0)
 W !?(1+OFF),"Insurance",?(13+OFF),"COB",?(17+OFF),"Subscriber ID",?(35+OFF),"Group",?(47+OFF),"Holder",?(55+OFF),"Effect"_$S('OFF:"",1:"i")_"ve",?(65+OFF+$S('OFF:0,1:1)),"Expires" W:'OFF ?75,"Only"
"RTN","IBCNS",103,0)
 I $G(CHAR)'="",LENG S X="",$P(X,CHAR,LENG)="" W !?(1+OFF),X
"RTN","IBCNS",104,0)
 Q
"RTN","IBCNS",105,0)
 ;
"RTN","IBCNS",106,0)
D1 ; If IBDTIN is defined, this date is used for displaying insurance
"RTN","IBCNS",107,0)
 ; coverage if plan does not provide not full coverage for all categories
"RTN","IBCNS",108,0)
 N X,Y,Z,CAT,OFF Q:'$D(IBINS)
"RTN","IBCNS",109,0)
 S OFF=$S($G(IBDTIN):0,1:2)
"RTN","IBCNS",110,0)
 W !?(1+OFF),$S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,10),1:"UNKNOWN")
"RTN","IBCNS",111,0)
 S X=$P(IBINS,U,20) I X'="" S X=$S(X=1:"p",X=2:"s",X=3:"t",1:"")
"RTN","IBCNS",112,0)
 W ?(14+OFF),X
"RTN","IBCNS",113,0)
 W ?(17+OFF),$E($P(IBINS,"^",2),1,16)
"RTN","IBCNS",114,0)
 ;W ?40,$E($S($P(IBINS,"^",15)'="":$P(IBINS,"^",15),1:$P(IBINS,"^",3)),1,10)
"RTN","IBCNS",115,0)
 W ?(35+OFF),$E($$GRP($P(IBINS,"^",18)),1,10)
"RTN","IBCNS",116,0)
 S X=$P(IBINS,"^",6) W ?(47+OFF),$S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")
"RTN","IBCNS",117,0)
 W ?(55+OFF),$$DAT1^IBOUTL($P(IBINS,"^",8)),?(65+OFF+$S(OFF:1,1:0)),$$DAT1^IBOUTL($P(IBINS,"^",4))
"RTN","IBCNS",118,0)
 I 'OFF D
"RTN","IBCNS",119,0)
 .I $P($G(^DIC(36,+IBINS,0)),U,2)="N" W ?74,"*WNR*" Q
"RTN","IBCNS",120,0)
 .S X="" F CAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS",121,0)
 .. S Y=$$PLCOV^IBCNSU3(+$P(IBINS,"^",18),$G(IBDTIN),+$O(^IBE(355.31,"B",CAT,"")))
"RTN","IBCNS",122,0)
 .. I +Y S Z=$S(CAT="PHARMACY":"R",1:$E(CAT)) S:Y>1 Z=$C($A(Z)+32) S X=X_Z
"RTN","IBCNS",123,0)
 .S:X="" X="no CV" I X'?6U W ?74,X
"RTN","IBCNS",124,0)
 Q
"RTN","IBCNS",125,0)
 ;
"RTN","IBCNS",126,0)
GRP(IBCPOL) ; -- return group name/group policy
"RTN","IBCNS",127,0)
 ;     input:   IBCPOL = pointer to entry in 355.3
"RTN","IBCNS",128,0)
 ;    output:   group name or group number, if both group NUMBER
"RTN","IBCNS",129,0)
 ;              if neither 'Individual PLAN'
"RTN","IBCNS",130,0)
 ;
"RTN","IBCNS",131,0)
 ;IB*2.0*516/TAZ Get HIPAA Compliant Fields
"RTN","IBCNS",132,0)
 ;original code:
"RTN","IBCNS",133,0)
 ;N X,Y S X=""
"RTN","IBCNS",134,0)
 ;S X=$G(^IBA(355.3,+$G(IBCPOL),0))
"RTN","IBCNS",135,0)
 ;S Y=$S($P(X,"^",4)'="":$P(X,"^",4),1:$P(X,"^",3))
"RTN","IBCNS",136,0)
 ;I $P(X,"^",10) S Y="Ind. Plan "_Y
"RTN","IBCNS",137,0)
 ;
"RTN","IBCNS",138,0)
 N Y
"RTN","IBCNS",139,0)
 S Y=$$GET1^DIQ(355.3,+$G(IBCPOL)_",",2.02) ;Group Number
"RTN","IBCNS",140,0)
 I Y="" S Y=$$GET1^DIQ(355.3,+$G(IBCPOL)_",",2.01) ;Group Name
"RTN","IBCNS",141,0)
 I $$GET1^DIQ(355.3,+$G(IBCPOL)_",",.1) S Y="Ind. Plan "_Y
"RTN","IBCNS",142,0)
GRPQ ;
"RTN","IBCNS",143,0)
 Q Y
"RTN","IBCNS",144,0)
 ;
"RTN","IBCNS",145,0)
D2EXT ; display Conditional Coverage Comments and Riders (DFN,IBINS,X required)
"RTN","IBCNS",146,0)
 N Y,CAT,IBX,IBY,IBZ,ARR,IBCDFN S IBCDFN=X,IBZ=0 N X
"RTN","IBCNS",147,0)
 F CAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS",148,0)
 . S Y=$$PLCOV^IBCNSU3(+$P(IBINS,"^",18),$G(IBDTIN),+$O(^IBE(355.31,"B",CAT,"")),.ARR)
"RTN","IBCNS",149,0)
 . S IBY=CAT_" Conditional: "
"RTN","IBCNS",150,0)
 . I +Y>1 S IBX=0 F  S IBX=$O(ARR(IBX)) Q:'IBX  W !,?17,IBY,?47,ARR(IBX) S IBY="",IBZ=1
"RTN","IBCNS",151,0)
 ;
"RTN","IBCNS",152,0)
 K ARR D RIDERS^IBCNSU3(DFN,IBCDFN,.ARR)
"RTN","IBCNS",153,0)
 S IBY="Policy Riders: " S IBX=0 F  S IBX=$O(ARR(IBX)) Q:'IBX  W !,?17,IBY,?35,ARR(IBX) S IBY="",IBZ=1
"RTN","IBCNS",154,0)
 I +IBZ W !
"RTN","IBCNS",155,0)
 Q
"RTN","IBCNS1")
0^68^B42707809^B35071030
"RTN","IBCNS1",1,0)
IBCNS1 ;ALB/AAS - INSURANCE MANAGEMENT SUPPORTED FUNCTIONS ;22-JULY-91
"RTN","IBCNS1",2,0)
 ;;2.0;INTEGRATED BILLING;**28,60,52,85,107,51,137,240,371,516**;21-MAR-94;Build 123
"RTN","IBCNS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNS1",4,0)
 ;
"RTN","IBCNS1",5,0)
INSURED(DFN,IBINDT) ; -- Is patient insured
"RTN","IBCNS1",6,0)
 ; --Input  DFN     = patient
"RTN","IBCNS1",7,0)
 ;          IBINDT  = (optional) date insured (default = today)
"RTN","IBCNS1",8,0)
 ; -- Output        = 0 - not insured
"RTN","IBCNS1",9,0)
 ;                  = 1 - insured
"RTN","IBCNS1",10,0)
 ;
"RTN","IBCNS1",11,0)
 N J,X,IBINS S IBINS=0,J=0
"RTN","IBCNS1",12,0)
 I '$G(DFN) G INSQ
"RTN","IBCNS1",13,0)
 I '$G(IBINDT) S IBINDT=DT
"RTN","IBCNS1",14,0)
 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) S IBINS=$$CHK(X,IBINDT) Q:IBINS
"RTN","IBCNS1",15,0)
INSQ Q IBINS
"RTN","IBCNS1",16,0)
 ;
"RTN","IBCNS1",17,0)
PRE(DFN,IBINDT) ; -- is pre-certification required for patient
"RTN","IBCNS1",18,0)
 N X,Y,J,IBPRE
"RTN","IBCNS1",19,0)
 S IBPRE=0,J=0
"RTN","IBCNS1",20,0)
 S:'$G(IBINDT) IBINDT=DT
"RTN","IBCNS1",21,0)
 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) I $$CHK(X,IBINDT),$P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",6) S IBPRE=1 Q
"RTN","IBCNS1",22,0)
PREQ Q IBPRE
"RTN","IBCNS1",23,0)
 ;
"RTN","IBCNS1",24,0)
UR(DFN,IBINDT) ; -- is ur required for patient
"RTN","IBCNS1",25,0)
 N X,Y,J,IBPRE
"RTN","IBCNS1",26,0)
 S IBUR=0,J=0
"RTN","IBCNS1",27,0)
 S:'$G(IBINDT) IBINDT=DT
"RTN","IBCNS1",28,0)
 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) I $$CHK(X,IBINDT),$P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",5) S IBUR=1 Q
"RTN","IBCNS1",29,0)
URQ Q IBUR
"RTN","IBCNS1",30,0)
 ;
"RTN","IBCNS1",31,0)
CHK(X,Z,Y) ; -- check one entry for active
"RTN","IBCNS1",32,0)
 ; --  Input   X    = Zeroth node of entry in insurance multiple (2.312)
"RTN","IBCNS1",33,0)
 ;             Z    = date to check
"RTN","IBCNS1",34,0)
 ;             Y    = 2 if want will not reimburse
"RTN","IBCNS1",35,0)
 ;                  = 3 if want will not reimburse AND indemnity plans
"RTN","IBCNS1",36,0)
 ;                  = 4 if want will not reimburse, but only if it's
"RTN","IBCNS1",37,0)
 ;                       MEDICARE
"RTN","IBCNS1",38,0)
 ; --  Output  1    = Insurance Active
"RTN","IBCNS1",39,0)
 ;             0    = Inactive
"RTN","IBCNS1",40,0)
 ;
"RTN","IBCNS1",41,0)
 N Z1,X1
"RTN","IBCNS1",42,0)
 S Z1=0,Y=$G(Y)
"RTN","IBCNS1",43,0)
 I Y'=3,$$INDEM(X) G CHKQ ; is an indemnity policy or company
"RTN","IBCNS1",44,0)
 S X1=$G(^DIC(36,+X,0)) G:X1="" CHKQ ;insurance company entry doesn't exist
"RTN","IBCNS1",45,0)
 I $P(X,"^",8) G:Z<$P(X,"^",8) CHKQ ;effective date later than care
"RTN","IBCNS1",46,0)
 I $P(X,"^",4) G:Z>$P(X,"^",4) CHKQ ;care after expiration date
"RTN","IBCNS1",47,0)
 I $P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",11) G CHKQ ;plan is inactive
"RTN","IBCNS1",48,0)
 G:$P(X1,"^",5) CHKQ ;insurance company inactive
"RTN","IBCNS1",49,0)
 I Y<2 G:$P(X1,"^",2)="N" CHKQ ;insurance company will not reimburse
"RTN","IBCNS1",50,0)
 I Y=4,$P(X1,"^",2)="N",'$$MCRWNR^IBEFUNC(+X) G CHKQ ;only MEDICARE WNR
"RTN","IBCNS1",51,0)
 S Z1=1
"RTN","IBCNS1",52,0)
CHKQ Q Z1
"RTN","IBCNS1",53,0)
 ;
"RTN","IBCNS1",54,0)
ACTIVE(IBCIFN) ; -- is this company active for this patient for this date
"RTN","IBCNS1",55,0)
 ; -- called from input transform and x-refs for fields 101,102,103
"RTN","IBCNS1",56,0)
 ; -- input
"RTN","IBCNS1",57,0)
 N ACTIVE,DFN,IBINDT
"RTN","IBCNS1",58,0)
 S DFN=$P(^DGCR(399,DA,0),"^",2),IBINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT)
"RTN","IBCNS1",59,0)
 ;
"RTN","IBCNS1",60,0)
ACTIVEQ Q ACTIVE
"RTN","IBCNS1",61,0)
 ;
"RTN","IBCNS1",62,0)
DD ;  - called from input transform and x-refs for field 101,102,103
"RTN","IBCNS1",63,0)
 ;  - input requires da=internal entry number in 399
"RTN","IBCNS1",64,0)
 ;  - outputs IBdd(ins co.) array
"RTN","IBCNS1",65,0)
 N DFN S DFN=$P(^DGCR(399,DA,0),"^",2),IBINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT)
"RTN","IBCNS1",66,0)
 D ALLACT
"RTN","IBCNS1",67,0)
DDQ K IBINDT Q
"RTN","IBCNS1",68,0)
 ;
"RTN","IBCNS1",69,0)
 ;
"RTN","IBCNS1",70,0)
ALLACT ; -- return active insurance zeroth nodes in ibdd(ins co,entry in mult)
"RTN","IBCNS1",71,0)
 N X,X1
"RTN","IBCNS1",72,0)
 S (X1,IBDD)=0
"RTN","IBCNS1",73,0)
 F  S X1=$O(^DPT(DFN,.312,X1)) Q:'X1  S X=$G(^(X,0)) I $$CHK(X,IBINDT) S IBDD(+X,X1)=X
"RTN","IBCNS1",74,0)
 ;
"RTN","IBCNS1",75,0)
ALLACTQ Q
"RTN","IBCNS1",76,0)
 ;
"RTN","IBCNS1",77,0)
HDR W !?4,"Insurance Co.",?22,"Policy #",?40,"Group",?52,"Holder",?60,"Effective",?70,"Expires" S X="",$P(X,"=",IOM-4)="" W !?4,X
"RTN","IBCNS1",78,0)
 Q
"RTN","IBCNS1",79,0)
 ;
"RTN","IBCNS1",80,0)
 ;
"RTN","IBCNS1",81,0)
D1 N X Q:'$D(IBINS)
"RTN","IBCNS1",82,0)
 W !?4,$S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")
"RTN","IBCNS1",83,0)
 W ?22,$E($P(IBINS,"^",2),1,16)
"RTN","IBCNS1",84,0)
 W ?40,$E($$GRP^IBCNS($P(IBINS,"^",18)),1,10)
"RTN","IBCNS1",85,0)
 S X=$P(IBINS,"^",6) W ?52,$S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")
"RTN","IBCNS1",86,0)
 W ?60,$$DAT1^IBOUTL($P(IBINS,"^",8)),?70,$$DAT1^IBOUTL($P(IBINS,"^",4))
"RTN","IBCNS1",87,0)
 Q
"RTN","IBCNS1",88,0)
 ;
"RTN","IBCNS1",89,0)
ALL(DFN,VAR,ACT,ADT,SOP) ; -- find all insurance data on a patient
"RTN","IBCNS1",90,0)
 ;
"RTN","IBCNS1",91,0)
 ; -- input DFN  = patient
"RTN","IBCNS1",92,0)
 ;          VAR  = variable to output in format of abc
"RTN","IBCNS1",93,0)
 ;                 or abc(dfn)
"RTN","IBCNS1",94,0)
 ;                 or ^tmp($j,"Insurance")
"RTN","IBCNS1",95,0)
 ;          ACT  = 1 if only active ins. desired
"RTN","IBCNS1",96,0)
 ;               = 2 if active and will not reimburse desired
"RTN","IBCNS1",97,0)
 ;               = 3 if active, will not reimburse, and indemnity are
"RTN","IBCNS1",98,0)
 ;                 all desired (for the $$INSTYP function below)
"RTN","IBCNS1",99,0)
 ;               = 4 if only active and MEDICARE WNR only desired
"RTN","IBCNS1",100,0)
 ;          ADT  = if ACT=1 or 4, then ADT is the internal date to check
"RTN","IBCNS1",101,0)
 ;                 active for, default = dt
"RTN","IBCNS1",102,0)
 ;          SOP  = if SOP=1, then sort policies in COB order
"RTN","IBCNS1",103,0)
 ;
"RTN","IBCNS1",104,0)
 ; -- output var(0)   =: number of entries insurance multiple
"RTN","IBCNS1",105,0)
 ;           var(x,0) =: ^dpt(dfn,.312,x,0)
"RTN","IBCNS1",106,0)
 ;           var(x,1) =: ^dpt(dfn,.312,x,1)
"RTN","IBCNS1",107,0)
 ;           var(x,2) =: ^dpt(dfn,.312,x,2)
"RTN","IBCNS1",108,0)
 ;           var(x,3) =: ^dpt(dfn,.312,x,3)
"RTN","IBCNS1",109,0)
 ;           var(x,4) =: ^dpt(dfn,.312,x,4)
"RTN","IBCNS1",110,0)
 ;           var(x,5) =: ^dpt(dfn,.312,x,5)
"RTN","IBCNS1",111,0)
 ;           var(x,7) =: ^dpt(dfn,.312,x,7)
"RTN","IBCNS1",112,0)
 ;       var(x,355.3) =: ^iba(355.3,$p(var(x,0),"^",18),0)
"RTN","IBCNS1",113,0)
 ;       var("S",COB sequence,x) =: (null) as an xref for COB
"RTN","IBCNS1",114,0)
 ;
"RTN","IBCNS1",115,0)
 N X,IBMRA,IBSP,IBIENS
"RTN","IBCNS1",116,0)
 S X=0 I $G(ACT),$E($G(ADT),1,7)'?7N S ADT=DT
"RTN","IBCNS1",117,0)
 S (IBMRA,IBSP)=0 ;Flag to say if pt has medicare wnr, spouse has policy
"RTN","IBCNS1",118,0)
 F  S X=$O(^DPT(DFN,.312,X)) Q:'X  I $D(^(X,0)) D
"RTN","IBCNS1",119,0)
 .I $G(ACT),'$$CHK(^DPT(DFN,.312,X,0),ADT,$G(ACT)) Q
"RTN","IBCNS1",120,0)
 .S @VAR@(0)=$G(@VAR@(0))+1
"RTN","IBCNS1",121,0)
 .S @VAR@(X,0)=$$ZND(DFN,X)
"RTN","IBCNS1",122,0)
 .S @VAR@(X,1)=$G(^DPT(DFN,.312,X,1))
"RTN","IBCNS1",123,0)
 .S @VAR@(X,2)=$G(^DPT(DFN,.312,X,2))
"RTN","IBCNS1",124,0)
 .S @VAR@(X,3)=$G(^DPT(DFN,.312,X,3))
"RTN","IBCNS1",125,0)
 .S @VAR@(X,4)=$G(^DPT(DFN,.312,X,4))
"RTN","IBCNS1",126,0)
 .S @VAR@(X,5)=$G(^DPT(DFN,.312,X,5))
"RTN","IBCNS1",127,0)
 .S @VAR@(X,7)=$G(^DPT(DFN,.312,X,7))
"RTN","IBCNS1",128,0)
 .S IBIENS=+$P($G(^DPT(DFN,.312,X,0)),"^",18)
"RTN","IBCNS1",129,0)
 .S @VAR@(X,355.3)=$G(^IBA(355.3,IBIENS,0))
"RTN","IBCNS1",130,0)
 .;IB*2.0*516/TAZ - Place HIPAA compliant fields in original location.
"RTN","IBCNS1",131,0)
 .S $P(@VAR@(X,355.3),U,3)=$$GET1^DIQ(355.3,IBIENS_",",2.01),$P(@VAR@(X,355.3),U,4)=$$GET1^DIQ(355.3,IBIENS_",",2.02)
"RTN","IBCNS1",132,0)
 .I $G(SOP) D
"RTN","IBCNS1",133,0)
 ..N COB,WHO
"RTN","IBCNS1",134,0)
 ..S COB=$P(@VAR@(X,0),U,20)
"RTN","IBCNS1",135,0)
 ..S WHO=$P(@VAR@(X,0),U,6) S:WHO="s" IBSP=1
"RTN","IBCNS1",136,0)
 ..I $$MCRWNR^IBEFUNC(+@VAR@(X,0)) D
"RTN","IBCNS1",137,0)
 ... S COB=.5,IBMRA=1
"RTN","IBCNS1",138,0)
 ..S COB=$S(COB'="":COB,WHO="v":1,WHO="s":$S(IBMRA:1,1:2),1:3)
"RTN","IBCNS1",139,0)
 ..S @VAR@("S",COB,X)=""
"RTN","IBCNS1",140,0)
 ..Q
"RTN","IBCNS1",141,0)
 ; Ck for spouse's insurance, move it before any MEDICARE WNR if sorting
"RTN","IBCNS1",142,0)
 I $G(SOP),IBMRA,IBSP D
"RTN","IBCNS1",143,0)
 . ; Shuffle Medicare WNR, if necessary
"RTN","IBCNS1",144,0)
 . S X=0 F  S X=$O(@VAR@("S",.5,X)) Q:'X  S @VAR@("S",2,X)="" K @VAR@("S",.5,X)
"RTN","IBCNS1",145,0)
 . S X=0 F  S X=$O(@VAR@("S",2,X)) Q:'X  I $P(@VAR@(X,0),U,6)="s",'$P(@VAR@(X,0),U,20) S @VAR@("S",1,X)="" K @VAR@("S",2,X)
"RTN","IBCNS1",146,0)
ALLQ Q
"RTN","IBCNS1",147,0)
 ;
"RTN","IBCNS1",148,0)
ALLWNR(DFN,VAR,ADT) ; Returns 'all active and MEDICARE WNR'
"RTN","IBCNS1",149,0)
 D ALL(DFN,VAR,4,ADT)
"RTN","IBCNS1",150,0)
 Q
"RTN","IBCNS1",151,0)
 ;
"RTN","IBCNS1",152,0)
ZND(DFN,NODE,ZNDFILE) ; -- Pull zeroth node from Patient's Insurance Type
"RTN","IBCNS1",153,0)
 ; subfile.  This function returns the zeroth node of the Insurance Type
"RTN","IBCNS1",154,0)
 ; subfile of the Patient file, i.e. ^DPT(DFN,.312,NODE,0).  Both DFN
"RTN","IBCNS1",155,0)
 ; and NODE must be passed in.  Pieces 3 (Group Number) and 15 (Group
"RTN","IBCNS1",156,0)
 ; Name) will be pulled from file# 355.3, Group Insurance Plan, based
"RTN","IBCNS1",157,0)
 ; on the Group Plan field on the zeroth node (piece 18).  If the
"RTN","IBCNS1",158,0)
 ; ZNDFILE/399 flag is not set to '399', then the Subscriber ID and Name
"RTN","IBCNS1",159,0)
 ; of Insured will be overwritten with the values in the new HIPAA-
"RTN","IBCNS1",160,0)
 ; compliant fields, which are on the seven node.
"RTN","IBCNS1",161,0)
 ;
"RTN","IBCNS1",162,0)
 ;IB*2.0*516/TAZ - Original code:
"RTN","IBCNS1",163,0)
 ;N X,Y S (X,Y)=""
"RTN","IBCNS1",164,0)
 ;I '$G(DFN)!('$G(NODE)) G ZNDQ
"RTN","IBCNS1",165,0)
 ;S X=$G(^DPT(+DFN,.312,+NODE,0))
"RTN","IBCNS1",166,0)
 ;S Y=$G(^IBA(355.3,+$P(X,"^",18),0)) I Y="" G ZNDQ
"RTN","IBCNS1",167,0)
 ;S $P(X,"^",3)=$P(Y,"^",4) ; move group number
"RTN","IBCNS1",168,0)
 ;S $P(X,"^",15)=$P(Y,"^",3) ; move group name
"RTN","IBCNS1",169,0)
 ;
"RTN","IBCNS1",170,0)
 N X,IBIENS
"RTN","IBCNS1",171,0)
 S X=""
"RTN","IBCNS1",172,0)
 I '$G(DFN)!('$G(NODE)) G ZNDQ
"RTN","IBCNS1",173,0)
 S X=$G(^DPT(+DFN,.312,+NODE,0))
"RTN","IBCNS1",174,0)
 ; IB*2.0*516/TAZ - If the ZNDFILE flag is set to '399', then the data
"RTN","IBCNS1",175,0)
 ; returned is going to be filed on a Bill/Claim in file# 399. In that
"RTN","IBCNS1",176,0)
 ; case, we do not wish to overwrite the Subscriber ID and Name of
"RTN","IBCNS1",177,0)
 ; Insured because that data will be stored on the Bill/Claim in
"RTN","IBCNS1",178,0)
 ; another place (^DGCR(399,IEN,"I?7").
"RTN","IBCNS1",179,0)
 I $G(ZNDFILE)'=399 D
"RTN","IBCNS1",180,0)
 . S IBIENS=+NODE_","_DFN
"RTN","IBCNS1",181,0)
 . S $P(X,U,2)=$$GET1^DIQ(2.312,IBIENS_",",7.02) ; Subscriber ID
"RTN","IBCNS1",182,0)
 . S $P(X,U,17)=$$GET1^DIQ(2.312,IBIENS_",",7.01) ;Name of Insured
"RTN","IBCNS1",183,0)
 S IBIENS=+$P(X,U,18) I 'IBIENS G ZNDQ
"RTN","IBCNS1",184,0)
 S $P(X,U,3)=$$GET1^DIQ(355.3,IBIENS_",",2.02)  ;group number
"RTN","IBCNS1",185,0)
 S $P(X,U,15)=$$GET1^DIQ(355.3,IBIENS_",",2.01) ;group name
"RTN","IBCNS1",186,0)
 ;
"RTN","IBCNS1",187,0)
ZNDQ Q X
"RTN","IBCNS1",188,0)
 ;
"RTN","IBCNS1",189,0)
INDEM(X) ; -- is this an indemnity plan
"RTN","IBCNS1",190,0)
 ; -- input zeroth node if insurance type field
"RTN","IBCNS1",191,0)
 N IBINDEM,IBCTP
"RTN","IBCNS1",192,0)
 S IBINDEM=1
"RTN","IBCNS1",193,0)
 I $P($G(^DIC(36,+X,0)),"^",13)=15 G INDEMQ ; company is indemnity co.
"RTN","IBCNS1",194,0)
 S IBCTP=$P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",9)
"RTN","IBCNS1",195,0)
 I IBCTP,$P($G(^IBE(355.1,+IBCTP,0)),"^",3)=9 G INDEMQ ; plan is an indemnity plan
"RTN","IBCNS1",196,0)
 S IBINDEM=0
"RTN","IBCNS1",197,0)
INDEMQ Q IBINDEM
"RTN","IBCNS1",198,0)
 ;
"RTN","IBCNS1",199,0)
 ;
"RTN","IBCNS1",200,0)
INSTYP(DFN,DATE) ; -- return type of insurance policy for patient
"RTN","IBCNS1",201,0)
 ;
"RTN","IBCNS1",202,0)
 ; -- input    dfn := pointer to patient file (required)
"RTN","IBCNS1",203,0)
 ;            date := date of insurance (optional, default = today)
"RTN","IBCNS1",204,0)
 ;
"RTN","IBCNS1",205,0)
 ; -- output   Major Category of type of Plan (file 355.1, field .03)
"RTN","IBCNS1",206,0)
 ;             for policy which would be billed first (cob)
"RTN","IBCNS1",207,0)
 ;               null     no insurance found
"RTN","IBCNS1",208,0)
 ;               1        MAJOR MEDICAL (default)
"RTN","IBCNS1",209,0)
 ;               2        DENTAL
"RTN","IBCNS1",210,0)
 ;               3        HMO
"RTN","IBCNS1",211,0)
 ;               4        PPO
"RTN","IBCNS1",212,0)
 ;               5        MEDICARE
"RTN","IBCNS1",213,0)
 ;               6        MEDICAID
"RTN","IBCNS1",214,0)
 ;               7        TRICARE
"RTN","IBCNS1",215,0)
 ;               8        WORKMANS COMP
"RTN","IBCNS1",216,0)
 ;               9        INDEMNITY
"RTN","IBCNS1",217,0)
 ;              10        PRESCRIPTION
"RTN","IBCNS1",218,0)
 ;              11        MEDICARE SUPPLEMENTAL
"RTN","IBCNS1",219,0)
 ;              12        ALL OTHER
"RTN","IBCNS1",220,0)
 ;
"RTN","IBCNS1",221,0)
 N TYPE,POL,IBCPOL
"RTN","IBCNS1",222,0)
 S TYPE=""
"RTN","IBCNS1",223,0)
 I '$G(DFN) G INSTYPQ
"RTN","IBCNS1",224,0)
 I '$G(DATE) S DATE=DT
"RTN","IBCNS1",225,0)
 D ALL(DFN,"POL",3,DATE)
"RTN","IBCNS1",226,0)
 I $G(POL(0))<1 G INSTYPQ
"RTN","IBCNS1",227,0)
 I $G(POL(0))=1 S IBCPOL=+$O(POL(0))
"RTN","IBCNS1",228,0)
 I $G(POL(0))>1 S IBCPOL=$$COB(.POL)
"RTN","IBCNS1",229,0)
 ;
"RTN","IBCNS1",230,0)
 I IBCPOL S TYPE=$P($G(^IBE(355.1,+$P($G(POL(IBCPOL,355.3)),"^",9),0)),"^",3)
"RTN","IBCNS1",231,0)
 I TYPE="" S TYPE=1 ;default is major medical
"RTN","IBCNS1",232,0)
 ;
"RTN","IBCNS1",233,0)
INSTYPQ Q TYPE
"RTN","IBCNS1",234,0)
 ;
"RTN","IBCNS1",235,0)
COB(POL) ; -- find policy with high coordination of benefits
"RTN","IBCNS1",236,0)
 N I,X,IBC,COB,WHO,IBCOB
"RTN","IBCNS1",237,0)
 ;
"RTN","IBCNS1",238,0)
 S IBC=""
"RTN","IBCNS1",239,0)
 S I=0 F  S I=$O(POL(I)) Q:'I  D
"RTN","IBCNS1",240,0)
 .S WHO=$P($G(POL(I,0)),"^",6),COB=$P($G(POL(I,0)),"^",20)
"RTN","IBCNS1",241,0)
 .S X=$S(COB'="":COB,WHO="v":1,WHO="s":2,1:3)
"RTN","IBCNS1",242,0)
 .I 'IBC S IBC=I,IBCOB=X Q
"RTN","IBCNS1",243,0)
 .I X<IBCOB S IBC=I,IBCOB=X
"RTN","IBCNS1",244,0)
 Q IBC
"RTN","IBCNS2")
0^69^B29335309^B24154529
"RTN","IBCNS2",1,0)
IBCNS2 ;ALB/AAS - INSURANCE POLICY CALLS FROM FILE 399 DD ;22-JULY-91
"RTN","IBCNS2",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,80,51,137,155,488,516**;21-MAR-94;Build 123
"RTN","IBCNS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNS2",4,0)
 ;
"RTN","IBCNS2",5,0)
 Q
"RTN","IBCNS2",6,0)
DD(IBX,IBDA,LEVEL) ;  - called from input transform for field 111,112,113
"RTN","IBCNS2",7,0)
 ; -- input   ibx = x from input transform
"RTN","IBCNS2",8,0)
 ;           ibda = internal entry in 399
"RTN","IBCNS2",9,0)
 ;          level = 1=primary, 2=secondary, 3=tertiary
"RTN","IBCNS2",10,0)
 ; -- output  returns x=internal entry in 2.3121 (ins. Mult.) if valid
"RTN","IBCNS2",11,0)
 ;   
"RTN","IBCNS2",12,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",13,0)
 D VAR
"RTN","IBCNS2",14,0)
 S X=$$SEL(IBX,DFN,INSDT,ACTIVE)
"RTN","IBCNS2",15,0)
 I +X<1 K X
"RTN","IBCNS2",16,0)
DDQ Q
"RTN","IBCNS2",17,0)
 ;
"RTN","IBCNS2",18,0)
VAR S DFN=$P(^DGCR(399,IBDA,0),"^",2),ACTIVE=1,INSDT=$S(+$G(^DGCR(399,IBDA,"U")):+$G(^("U")),1:DT)
"RTN","IBCNS2",19,0)
 Q
"RTN","IBCNS2",20,0)
 ;
"RTN","IBCNS2",21,0)
SEL(IBX,DFN,INSDT,ACTIVE) ; -- Select insurance policy
"RTN","IBCNS2",22,0)
 ; -- Input    IBX  = x from input transform
"RTN","IBCNS2",23,0)
 ;             DFN  = patient
"RTN","IBCNS2",24,0)
 ;           INSDT  = (optional) Active date of ins. (default = dt)
"RTN","IBCNS2",25,0)
 ;          ACTIVE  = (optional) 1 if want active (default)
"RTN","IBCNS2",26,0)
 ;                  = 2 if want all ins returned
"RTN","IBCNS2",27,0)
 ;
"RTN","IBCNS2",28,0)
 ; -- Output      =  pointer to 36 ^ pointer to 2.3121 ^ pointer to 355.3
"RTN","IBCNS2",29,0)
 ;
"RTN","IBCNS2",30,0)
 N I,J,Y,DA,DE,DQ,DR,DIC,DIE,DIR,DIV,IBSEL,IBDD,IBD
"RTN","IBCNS2",31,0)
 S IBSEL=1,Y=""
"RTN","IBCNS2",32,0)
 I '$G(ACTIVE) S ACTIVE=1
"RTN","IBCNS2",33,0)
 S:'$G(INSDT) INSDT=DT
"RTN","IBCNS2",34,0)
 I '$G(DFN) G SELQ
"RTN","IBCNS2",35,0)
 D BLD
"RTN","IBCNS2",36,0)
 ;
"RTN","IBCNS2",37,0)
 ; -- call DIC to choose from list
"RTN","IBCNS2",38,0)
 ;WCJ*IB*2.0*488;Display COB on picklist when partial match on more than one entry
"RTN","IBCNS2",39,0)
 ;everything else should continue to work as before
"RTN","IBCNS2",40,0)
 N IBOUT,IBSEL2
"RTN","IBCNS2",41,0)
 S IBX=$$UP^XLFSTR(IBX)
"RTN","IBCNS2",42,0)
 I IBX?1A.E D  S IBX=$S($G(IBOUT):"^",$G(IBSEL2):IBSEL2,1:IBX)
"RTN","IBCNS2",43,0)
 . N X,Y,ERROR,TARGET,I,G
"RTN","IBCNS2",44,0)
 . ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBCNS2",45,0)
 . ;D LIST^DIC(2.312,","_DFN_",",".01;.2;3;8;1;16;.18;21",,9999,,IBX,,"I $D(IBDD(+Y))",,"TARGET","ERROR")
"RTN","IBCNS2",46,0)
 . D LIST^DIC(2.312,","_DFN_",",".01;.2;3;8;7.02;16;.18;21",,9999,,IBX,,"I $D(IBDD(+Y))",,"TARGET","ERROR") ;516 - baa : add 7.02
"RTN","IBCNS2",47,0)
 . I $D(ERROR) S IBOUT=1 Q   ; should not hit this.  used more during test 
"RTN","IBCNS2",48,0)
 . I '$D(TARGET) S IBOUT=1 Q  ; no partial matches
"RTN","IBCNS2",49,0)
 . I +$G(TARGET("DILIST",0))<2 Q  ; only one match so work as before
"RTN","IBCNS2",50,0)
 . D DSPTHM   ; display them
"RTN","IBCNS2",51,0)
 . S DIR(0)="N^1:"_+$G(TARGET("DILIST",0))   ;allow select of 1 to as many matches
"RTN","IBCNS2",52,0)
 . D ^DIR
"RTN","IBCNS2",53,0)
 . I $G(DIRUT) S IBOUT=1 Q   ; user ^, timed out, or entered null
"RTN","IBCNS2",54,0)
 . S IBX="`"_$G(TARGET("DILIST",2,+Y))
"RTN","IBCNS2",55,0)
 . W !
"RTN","IBCNS2",56,0)
 . Q
"RTN","IBCNS2",57,0)
 ;WCJ*IB*2.0*488
"RTN","IBCNS2",58,0)
 ;
"RTN","IBCNS2",59,0)
 S X=IBX
"RTN","IBCNS2",60,0)
 S DIC="^DPT("_DFN_",.312,",DIC(0)="EQMN"
"RTN","IBCNS2",61,0)
 S DIC("S")="I $D(IBDD(+Y))" ; add not other selection
"RTN","IBCNS2",62,0)
 S DIC("W")="W $P(^DIC(36,+^(0),0),U)_""  Group: ""_$$GRP^IBCNS($P(^DPT(DFN,.312,+Y,0),U,18))"
"RTN","IBCNS2",63,0)
 D ^DIC
"RTN","IBCNS2",64,0)
SELQ Q +Y
"RTN","IBCNS2",65,0)
 ;
"RTN","IBCNS2",66,0)
 ;WCJ*IB*2.0*488;
"RTN","IBCNS2",67,0)
DSPTHM ; display the insurance companies and useful information
"RTN","IBCNS2",68,0)
 W !,?4,"Insurance",?18,"COB",?23,"Subscriber ID",?37,"Group #",?49,"Eff Date",?62,"Exp Date"
"RTN","IBCNS2",69,0)
 N I
"RTN","IBCNS2",70,0)
 F I=1:1 Q:'$D(TARGET("DILIST","ID",I))  D
"RTN","IBCNS2",71,0)
 . W !,I,?4,$E($G(TARGET("DILIST","ID",I,.01)),1,12)
"RTN","IBCNS2",72,0)
 . W ?18,"(",$$LOW^XLFSTR($E($G(TARGET("DILIST","ID",I,.2)),1)),")"
"RTN","IBCNS2",73,0)
 . ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBCNS2",74,0)
 . ;W ?23,$E($G(TARGET("DILIST","ID",I,1)),1,12)
"RTN","IBCNS2",75,0)
 . W ?23,$E($G(TARGET("DILIST","ID",I,7.02)),1,12)
"RTN","IBCNS2",76,0)
 . W ?37,$E($G(TARGET("DILIST","ID",I,21)),1,10)
"RTN","IBCNS2",77,0)
 . W ?49,$G(TARGET("DILIST","ID",I,8))
"RTN","IBCNS2",78,0)
 . W ?62,$G(TARGET("DILIST","ID",I,3))
"RTN","IBCNS2",79,0)
 Q
"RTN","IBCNS2",80,0)
 ;WCJ*IB*2.0*488;
"RTN","IBCNS2",81,0)
 ;
"RTN","IBCNS2",82,0)
BLD K IBD,IBDD
"RTN","IBCNS2",83,0)
 S (IBDD,IBCDFN)=0 F  S IBCDFN=$O(^DPT(DFN,.312,IBCDFN)) Q:'IBCDFN  I $D(^DPT(DFN,.312,IBCDFN,0)) D CHK(IBCDFN,ACTIVE,INSDT)
"RTN","IBCNS2",84,0)
 Q
"RTN","IBCNS2",85,0)
 ;
"RTN","IBCNS2",86,0)
CHK(IBCDFN,ACTIVE,INSDT) ; -- see if active
"RTN","IBCNS2",87,0)
 N X,X1
"RTN","IBCNS2",88,0)
 S X=$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNS2",89,0)
 S IBDD(IBCDFN)=+X_"^"_IBCDFN_"^"_$P(X,"^",18)
"RTN","IBCNS2",90,0)
 I ACTIVE=2 G CHKQ
"RTN","IBCNS2",91,0)
 S X1=$G(^DIC(36,+X,0)) I X1="" G CQ ;ins co entry doesn't exist
"RTN","IBCNS2",92,0)
 I $P(X,"^",8) G:INSDT<$P(X,"^",8) CQ ;effective date later than care
"RTN","IBCNS2",93,0)
 I $P(X,"^",4) G:INSDT>$P(X,"^",4) CQ ;care after expiration date
"RTN","IBCNS2",94,0)
 I $P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",11) G CQ ;plan is inactive
"RTN","IBCNS2",95,0)
 G:$P(X1,"^",5) CQ ;                  ;ins company inactive
"RTN","IBCNS2",96,0)
 ;G:$P(X1,"^",2)="N" CQ ;              ;ins company will not reimburse
"RTN","IBCNS2",97,0)
 G CHKQ
"RTN","IBCNS2",98,0)
CQ K IBDD(IBCDFN)
"RTN","IBCNS2",99,0)
CHKQ S:$D(IBDD(IBCDFN)) IBDD=IBDD+1,IBD(IBDD)=IBCDFN
"RTN","IBCNS2",100,0)
 Q
"RTN","IBCNS2",101,0)
 ;
"RTN","IBCNS2",102,0)
 ;
"RTN","IBCNS2",103,0)
DDHELP(IBDA,LEVEL) ; -- Executable help
"RTN","IBCNS2",104,0)
 ; -- write out list to choose from
"RTN","IBCNS2",105,0)
 N DFN,ACTIVE,INSDT,I,IBINS
"RTN","IBCNS2",106,0)
 D VAR,BLD
"RTN","IBCNS2",107,0)
 ;
"RTN","IBCNS2",108,0)
 I $G(IBDD)=0 W !,"No Insurance Policies to Select From" G DDHQ
"RTN","IBCNS2",109,0)
 ;
"RTN","IBCNS2",110,0)
 I '$D(IOM) D HOME^%ZIS
"RTN","IBCNS2",111,0)
 N IBDTIN
"RTN","IBCNS2",112,0)
 S IBDTIN=$G(INSDT)
"RTN","IBCNS2",113,0)
 W ! D HDR^IBCNS
"RTN","IBCNS2",114,0)
 S I=0 F  S I=$O(IBD(I)) Q:'I  D
"RTN","IBCNS2",115,0)
 .;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBCNS2",116,0)
 .;S IBINS=$G(^DPT(DFN,.312,$G(IBD(I)),0))  ; 516 - baa
"RTN","IBCNS2",117,0)
 .S IBINS=$$ZND^IBCNS1(DFN,$G(IBD(I)))  ; 516 - baa
"RTN","IBCNS2",118,0)
 .D D1^IBCNS
"RTN","IBCNS2",119,0)
DDHQ Q
"RTN","IBCNS2",120,0)
 ;
"RTN","IBCNS2",121,0)
TRANS(IBDA,Y) ; -- output transform
"RTN","IBCNS2",122,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",123,0)
 D VAR
"RTN","IBCNS2",124,0)
 S Y=$P($G(^DIC(36,+$P($G(^DPT(DFN,.312,+$G(Y),0)),U),0)),U)
"RTN","IBCNS2",125,0)
 Q Y
"RTN","IBCNS2",126,0)
 ;
"RTN","IBCNS2",127,0)
INSCO(IBDA,IBCDFN) ; -- return pointer value of 36 from pt. file
"RTN","IBCNS2",128,0)
 N DFN,ACTIVE,INSDT
"RTN","IBCNS2",129,0)
 D VAR
"RTN","IBCNS2",130,0)
 S Y=+$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNS2",131,0)
 Q Y_$S(Y>0:"^"_$P($G(^DIC(36,+Y,0)),"^"),1:"")
"RTN","IBCNS2",132,0)
 ;
"RTN","IBCNS2",133,0)
IX(DA,XREF) ; -- create i1, aic xrefs for fields 112, 113, 114
"RTN","IBCNS2",134,0)
 ;
"RTN","IBCNS2",135,0)
 ;IB*2.0*516/TAZ - Set up I17, I27 or I37 nodes
"RTN","IBCNS2",136,0)
 N DFN
"RTN","IBCNS2",137,0)
 S DFN=$P($G(^DGCR(399,DA,0)),"^",2)
"RTN","IBCNS2",138,0)
 S ^DGCR(399,DA,XREF)=$$ZND^IBCNS1(DFN,X,399)
"RTN","IBCNS2",139,0)
 I ",I1,I2,I3,"[(","_XREF_","),$G(^DPT(DFN,.312,+X,7))'="" S ^DGCR(399,DA,XREF_"7")=$G(^DPT(DFN,.312,+X,7))
"RTN","IBCNS2",140,0)
 S ^DGCR(399,DA,"AIC",+$G(^DPT(DFN,.312,+X,0)))=""
"RTN","IBCNS2",141,0)
 Q
"RTN","IBCNS2",142,0)
 ;
"RTN","IBCNS2",143,0)
KIX(DA,XREF) ; -- kill logic for above xref
"RTN","IBCNS2",144,0)
 K ^DGCR(399,DA,XREF)
"RTN","IBCNS2",145,0)
 I ",I1,I2,I3,"[(","_XREF_",") K ^DGCR(399,DA,XREF_"7")
"RTN","IBCNS2",146,0)
 K ^DGCR(399,DA,"AIC",+$G(^DPT($P($G(^DGCR(399,DA,0)),"^",2),.312,+X,0)))
"RTN","IBCNS2",147,0)
 Q
"RTN","IBCNS2",148,0)
 ;
"RTN","IBCNS2",149,0)
BPP(IBDA,IBMCR) ; Find Bill Payer Policy based on Payer Sequence and the P/S/T payers assigned to the bill,Ins Co must reimburse
"RTN","IBCNS2",150,0)
 ; IBMCR = flag that says include MEDICARE WNR
"RTN","IBCNS2",151,0)
 ; returns - Bill Payer Policy (ifn of policy entry in patient file)
"RTN","IBCNS2",152,0)
 ;         - null if either no Payer Sequence or there is no policy defined for the payer sequence
"RTN","IBCNS2",153,0)
 ;           or the policy defined by the payer sequence Will Not Reimburse and is not MEDICARE
"RTN","IBCNS2",154,0)
 ;
"RTN","IBCNS2",155,0)
 N IBI,IBX,IBY,IBP,IBC,IBM0 S IBX="",(IBP,IBC)=0
"RTN","IBCNS2",156,0)
 S IBMCR=+$G(IBMCR)
"RTN","IBCNS2",157,0)
 S IBY=$$COBN^IBCEF(+IBDA) I IBY S IBY=IBY+11
"RTN","IBCNS2",158,0)
 I IBY S IBM0=$G(^DGCR(399,+IBDA,"M")),IBP=$P(IBM0,U,IBY)
"RTN","IBCNS2",159,0)
 I IBP S IBY=IBY-11,(IBI,IBY)=$P(IBM0,U,IBY) I +IBY S IBC=$P($G(^DIC(36,+IBY,0)),U,2)
"RTN","IBCNS2",160,0)
 I IBP,IBI,$S(IBC'="N":1,'IBMCR:0,1:$$MCRWNR^IBEFUNC(+IBY)) S IBX=IBP
"RTN","IBCNS2",161,0)
 Q IBX
"RTN","IBCNS3")
0^70^B60729122^B62573337
"RTN","IBCNS3",1,0)
IBCNS3 ;ALB/ARH - DISPLAY EXTENDED INSURANCE ; 01-DEC-04
"RTN","IBCNS3",2,0)
 ;;2.0;INTEGRATED BILLING;**287,399,416,516**;21-MAR-94;Build 123
"RTN","IBCNS3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNS3",4,0)
 ;
"RTN","IBCNS3",5,0)
DISP(DFN,DATE,DISPLAY) ;  Display all insurance company information
"RTN","IBCNS3",6,0)
 ;    input: DFN     = pointer to patient
"RTN","IBCNS3",7,0)
 ;           DATE    = date to check for coverage and riders
"RTN","IBCNS3",8,0)
 ;           DISPLAY = contain indicators of data to display (1234)
"RTN","IBCNS3",9,0)
 ;                     1 : first line of display ins company and plan data
"RTN","IBCNS3",10,0)
 ;                     2 : extended data (Plan Filing Timeframe, Plan Coverage, Conditional Coverage Comments, and Riders)
"RTN","IBCNS3",11,0)
 ;                     3 : ins. policy comments and plan comments
"RTN","IBCNS3",12,0)
 ;                     4 : eIV eligibility/benefit information (IB*2*416)
"RTN","IBCNS3",13,0)
 ;
"RTN","IBCNS3",14,0)
 Q:'$G(DFN)  D:'$D(IOF) HOME^%ZIS
"RTN","IBCNS3",15,0)
 N IBINS,IBPOLFN,IBPOL0,IBPLNFN S DISPLAY=$G(DISPLAY) I '$G(DATE) S DATE=DT
"RTN","IBCNS3",16,0)
 K ^TMP($J,"IBCNS3")
"RTN","IBCNS3",17,0)
 ;
"RTN","IBCNS3",18,0)
 D ALL^IBCNS1(DFN,"IBINS",3,DATE)
"RTN","IBCNS3",19,0)
 ;
"RTN","IBCNS3",20,0)
 I '$D(IBINS) D SETLN(" "),SETLN("No Insurance Information")
"RTN","IBCNS3",21,0)
 ;
"RTN","IBCNS3",22,0)
 S IBPOLFN=0 F  S IBPOLFN=$O(IBINS(IBPOLFN)) Q:'IBPOLFN  D
"RTN","IBCNS3",23,0)
 . S IBPOL0=IBINS(IBPOLFN,0),IBPLNFN=$P(IBPOL0,U,18)
"RTN","IBCNS3",24,0)
 . S ^TMP($J,"IBCNS3")=IBPOLFN
"RTN","IBCNS3",25,0)
 . ;
"RTN","IBCNS3",26,0)
 . D GETLN(IBPOL0,DATE)
"RTN","IBCNS3",27,0)
 . I DISPLAY[2 D GETEXT(DFN,IBPOLFN,IBPOL0,DATE) ; display extended
"RTN","IBCNS3",28,0)
 . I DISPLAY[3 D GETCOM(IBPLNFN,$G(IBINS(IBPOLFN,1))) ; display extended 3, comments
"RTN","IBCNS3",29,0)
 . I DISPLAY[4 D EB(DFN,IBPOLFN)    ; display eIV elig/ben data
"RTN","IBCNS3",30,0)
 . Q
"RTN","IBCNS3",31,0)
 ;
"RTN","IBCNS3",32,0)
 S ^TMP($J,"IBCNS3")="" D GETNOTES(DFN)   ; display final notes/warning messages
"RTN","IBCNS3",33,0)
 ;
"RTN","IBCNS3",34,0)
 D PRINT
"RTN","IBCNS3",35,0)
 ;
"RTN","IBCNS3",36,0)
DISPQ K ^TMP($J,"IBCNS3")
"RTN","IBCNS3",37,0)
 Q
"RTN","IBCNS3",38,0)
 ;
"RTN","IBCNS3",39,0)
PRINT ; display compiled array of patient insurance information in ^TMP($J,"IBCNS3")
"RTN","IBCNS3",40,0)
 N IBSUB,IBCOUNT,IBQUIT,IBLEVEL,IBLNX,IBDASH,IBLINE,IBCNTLN S $P(IBDASH,"-",80)="-" S DISPLAY=+$G(DISPLAY)
"RTN","IBCNS3",41,0)
 ;
"RTN","IBCNS3",42,0)
 D HDR S IBSUB="IBCNS3",IBCOUNT=3,IBQUIT=0
"RTN","IBCNS3",43,0)
 ;
"RTN","IBCNS3",44,0)
 S IBLEVEL=0 F  S IBLEVEL=$O(^TMP($J,IBSUB,IBLEVEL)) Q:'IBLEVEL  D  Q:IBQUIT
"RTN","IBCNS3",45,0)
 . S IBCNTLN=+$G(^TMP($J,IBSUB,IBLEVEL))+1
"RTN","IBCNS3",46,0)
 . ;
"RTN","IBCNS3",47,0)
 . I IBCOUNT>10,(IBCNTLN+IBCOUNT)>(IOSL-3) S IBQUIT=$$EOP Q:IBQUIT  D HDR S IBCOUNT=3
"RTN","IBCNS3",48,0)
 . ;
"RTN","IBCNS3",49,0)
 . S IBLNX=0 F  S IBLNX=$O(^TMP($J,IBSUB,IBLEVEL,IBLNX)) Q:'IBLNX  D  Q:IBQUIT
"RTN","IBCNS3",50,0)
 .. ;
"RTN","IBCNS3",51,0)
 .. S IBLINE=$G(^TMP($J,IBSUB,IBLEVEL,IBLNX))
"RTN","IBCNS3",52,0)
 .. ;
"RTN","IBCNS3",53,0)
 .. W !,IBLINE S IBCOUNT=IBCOUNT+1 I IBCOUNT>(IOSL-3) S IBQUIT=$$EOP Q:IBQUIT  W @IOF S IBCOUNT=2
"RTN","IBCNS3",54,0)
 . ;
"RTN","IBCNS3",55,0)
 . I 'IBQUIT,DISPLAY>1 W !,IBDASH S IBCOUNT=IBCOUNT+1
"RTN","IBCNS3",56,0)
 ;
"RTN","IBCNS3",57,0)
 I 'IBQUIT,IBCOUNT>2 S IBQUIT=$$EOP
"RTN","IBCNS3",58,0)
 Q
"RTN","IBCNS3",59,0)
 ;
"RTN","IBCNS3",60,0)
SETLN(LINE) ; set line as next line for current policy
"RTN","IBCNS3",61,0)
 N CNT,POL S LINE=$G(LINE)
"RTN","IBCNS3",62,0)
 S POL=+$G(^TMP($J,"IBCNS3"))
"RTN","IBCNS3",63,0)
 I 'POL S POL=$O(^TMP($J,"IBCNS3","~"),-1)+1 S ^TMP($J,"IBCNS3")=POL
"RTN","IBCNS3",64,0)
 ;
"RTN","IBCNS3",65,0)
 S CNT=+$G(^TMP($J,"IBCNS3",POL))+1
"RTN","IBCNS3",66,0)
 S ^TMP($J,"IBCNS3",POL)=CNT
"RTN","IBCNS3",67,0)
 S ^TMP($J,"IBCNS3",POL,CNT)=LINE
"RTN","IBCNS3",68,0)
 Q
"RTN","IBCNS3",69,0)
 ;
"RTN","IBCNS3",70,0)
 ;
"RTN","IBCNS3",71,0)
 ;
"RTN","IBCNS3",72,0)
GETLN(IBPOL0,IBDATE) ; get single line of primary data on insurance policy
"RTN","IBCNS3",73,0)
 ;     input:   IBPOL0 = line from array, zero node of patient policy (2,.312)
"RTN","IBCNS3",74,0)
 ;              IBDATE = date to check coverage, default today
"RTN","IBCNS3",75,0)
 ;    output:   formatted line of data for insurance policy in TMP($J,"IBCNS")
"RTN","IBCNS3",76,0)
 ;
"RTN","IBCNS3",77,0)
 N IBX,IBLINE S IBLINE=" " S IBPOL0=$G(IBPOL0)
"RTN","IBCNS3",78,0)
 ;
"RTN","IBCNS3",79,0)
 S IBX=$G(^DIC(36,+IBPOL0,0)),IBX=$S($P(IBX,U,1)'="":$P(IBX,U,1),1:"UNKNOWN") S IBLINE=$$FRMLN(IBX,IBLINE,11,0)
"RTN","IBCNS3",80,0)
 S IBX=$P(IBPOL0,U,20),IBX=$S(IBX=1:"p",IBX=2:"s",IBX=3:"t",1:"") S IBLINE=$$FRMLN(IBX,IBLINE,1,14)
"RTN","IBCNS3",81,0)
 S IBX=$P(IBPOL0,U,2) S IBLINE=$$FRMLN(IBX,IBLINE,16,17)
"RTN","IBCNS3",82,0)
 S IBX=$$FNDGRP($P(IBPOL0,U,18)) S IBLINE=$$FRMLN(IBX,IBLINE,10,35)
"RTN","IBCNS3",83,0)
 S IBX=$P(IBPOL0,U,6),IBX=$S(IBX="v":"SELF",IBX="s":"SPOUSE",1:"OTHER") S IBLINE=$$FRMLN(IBX,IBLINE,7,47)
"RTN","IBCNS3",84,0)
 S IBX=$$DAT1^IBOUTL($P(IBPOL0,U,8)) S IBLINE=$$FRMLN(IBX,IBLINE,8,55)
"RTN","IBCNS3",85,0)
 S IBX=$$DAT1^IBOUTL($P(IBPOL0,U,4)) S IBLINE=$$FRMLN(IBX,IBLINE,8,65)
"RTN","IBCNS3",86,0)
 S IBX=$$FNDCOV(+IBPOL0,+$P(IBPOL0,U,18),$G(IBDATE)) S IBLINE=$$FRMLN(IBX,IBLINE,6,74)
"RTN","IBCNS3",87,0)
 ;
"RTN","IBCNS3",88,0)
 D SETLN(IBLINE)
"RTN","IBCNS3",89,0)
GETLNQ Q
"RTN","IBCNS3",90,0)
 ;
"RTN","IBCNS3",91,0)
 ;
"RTN","IBCNS3",92,0)
GETEXT(DFN,IBPOLFN,IBPOL0,DATE) ; display extended insurance information
"RTN","IBCNS3",93,0)
 ; Plan Filing Timeframe, Plan Coverage, Conditional Coverage Comments, and Riders
"RTN","IBCNS3",94,0)
 ;     input:   DFN     = pointer to patient (2)
"RTN","IBCNS3",95,0)
 ;              IBPOLFN = pointer to patient insurance policy in 2.312
"RTN","IBCNS3",96,0)
 ;              IBPOL0  = line from array, zero node of patient policy (2,.312)
"RTN","IBCNS3",97,0)
 ;              DATE    = date to check coverage, default today
"RTN","IBCNS3",98,0)
 ;              DISPARR = array to pass data back in, pass by reference
"RTN","IBCNS3",99,0)
 ;    output:   array of extended data in TMP($J,"IBCNS")
"RTN","IBCNS3",100,0)
 ;
"RTN","IBCNS3",101,0)
 N IBX,IBY,IBZ,IBC,IBINSFN,IBPLNFN,IBPLN0,IBLINE,IBCAT,IBCATFN,IBCOVRD,IBU,ARR,ARR1 S:'$G(DATE) DATE=DT
"RTN","IBCNS3",102,0)
 S IBINSFN=+$G(IBPOL0) Q:'IBINSFN  S IBPLNFN=+$P(IBPOL0,U,18),IBPLN0=$G(^IBA(355.3,IBPLNFN,0)) Q:IBPLN0=""
"RTN","IBCNS3",103,0)
 ;
"RTN","IBCNS3",104,0)
 S IBLINE="Last Verified:   ",(IBY,IBX)=""
"RTN","IBCNS3",105,0)
 S IBY=$P($G(^DPT(DFN,.312,IBPOLFN,1)),U,3) I IBY'="" S IBX=$$DAT1^IBOUTL(IBY) S IBLINE=IBLINE_IBX D SETLN(" "),SETLN(IBLINE)
"RTN","IBCNS3",106,0)
 ;
"RTN","IBCNS3",107,0)
 S IBLINE="Plan Filing Time Frame: "
"RTN","IBCNS3",108,0)
 S IBY=$P(IBPLN0,U,13) S:IBY'="" IBY=IBY_"  " I +$P(IBPLN0,U,16) S IBY=IBY_"("_$$FTFN^IBCNSU31(IBPLNFN)_")"
"RTN","IBCNS3",109,0)
 I IBY'="" S IBLINE=IBLINE_IBY D:IBX="" SETLN(" ") D SETLN(IBLINE)
"RTN","IBCNS3",110,0)
 ;
"RTN","IBCNS3",111,0)
 S IBLINE="Insurance Comp:  "
"RTN","IBCNS3",112,0)
 I $P($G(^DIC(36,IBINSFN,0)),U,2)="N" S IBLINE=IBLINE_"Will Not Reimburse" D SETLN(" "),SETLN(IBLINE)
"RTN","IBCNS3",113,0)
 ;
"RTN","IBCNS3",114,0)
 S IBLINE="Conditional: ",IBCOVRD="",IBU=""
"RTN","IBCNS3",115,0)
 K ARR F IBCAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS3",116,0)
 . S IBCATFN=+$O(^IBE(355.31,"B",IBCAT,"")) Q:'IBCATFN
"RTN","IBCNS3",117,0)
 . S IBY=$$PLCOV^IBCNSU3(+IBPLNFN,DATE,IBCATFN,.ARR) Q:IBY'>0
"RTN","IBCNS3",118,0)
 . I IBY=1 S IBCOVRD=$G(IBCOVRD)_IBU_$S(IBCAT["PATIENT":$P(IBCAT,"IENT",1),1:IBCAT),IBU=", " Q
"RTN","IBCNS3",119,0)
 . S IBX=IBCAT_": ",IBC=$G(IBC)+100 S IBLINE=$$FRMLN(IBX,IBLINE,15,17)
"RTN","IBCNS3",120,0)
 . S IBZ=0 F  S IBZ=$O(ARR(IBZ)) Q:'IBZ  S IBX=ARR(IBZ) D  S IBLINE=""
"RTN","IBCNS3",121,0)
 .. S IBLINE=$$FRMLN(IBX,IBLINE,46,33) S ARR1(IBC+IBZ)=IBLINE
"RTN","IBCNS3",122,0)
 I IBCOVRD'="" S IBLINE="Plan Coverage:   "_$G(IBCOVRD) D SETLN(" "),SETLN(IBLINE)
"RTN","IBCNS3",123,0)
 I $O(ARR1("")) D:IBCOVRD="" SETLN(" ") S IBZ=0 F  S IBZ=$O(ARR1(IBZ)) Q:'IBZ  S IBX=ARR1(IBZ) D SETLN(IBX)
"RTN","IBCNS3",124,0)
 ;
"RTN","IBCNS3",125,0)
 S IBLINE="Policy Riders: "
"RTN","IBCNS3",126,0)
 K ARR D RIDERS^IBCNSU3(+$G(DFN),+$G(IBPOLFN),.ARR) I $O(ARR("")) D SETLN(" ")
"RTN","IBCNS3",127,0)
 S IBZ=0 F  S IBZ=$O(ARR(IBZ)) Q:'IBZ  S IBX=ARR(IBZ) D  S IBLINE=""
"RTN","IBCNS3",128,0)
 . S IBLINE=$$FRMLN(IBX,IBLINE,62,17) D SETLN(IBLINE)
"RTN","IBCNS3",129,0)
 Q
"RTN","IBCNS3",130,0)
 ;
"RTN","IBCNS3",131,0)
 ;
"RTN","IBCNS3",132,0)
GETCOM(IBPLNFN,IBPOL1) ; get patient insurance and plan insurance comments in TMP($J,"IBCNS")
"RTN","IBCNS3",133,0)
 N IBX,IBY
"RTN","IBCNS3",134,0)
 ;
"RTN","IBCNS3",135,0)
 S IBX=$P($G(IBPOL1),U,8) I IBX'="" S IBY="Patient Policy Comments: " D SETLN(" "),SETLN(IBY),SETLN(IBX)
"RTN","IBCNS3",136,0)
 ;
"RTN","IBCNS3",137,0)
 I +$G(IBPLNFN),$O(^IBA(355.3,+IBPLNFN,11,0)) S IBX="Group/Plan Comments:" D SETLN(" "),SETLN(IBX) D
"RTN","IBCNS3",138,0)
 . S IBX=0 F  S IBX=$O(^IBA(355.3,+IBPLNFN,11,IBX)) Q:'IBX  S IBY=$G(^IBA(355.3,+IBPLNFN,11,IBX,0)) D SETLN(IBY)
"RTN","IBCNS3",139,0)
 Q
"RTN","IBCNS3",140,0)
 ;
"RTN","IBCNS3",141,0)
 ;
"RTN","IBCNS3",142,0)
GETNOTES(DFN) ; get final notes/warnings in TMP($J,"IBCNS")
"RTN","IBCNS3",143,0)
 N IBX,IBY,IBLINE1,IBLINE2,IBFND S (IBFND,IBLINE1,IBLINE2)=""  Q:'$G(DFN)
"RTN","IBCNS3",144,0)
 ;
"RTN","IBCNS3",145,0)
 S IBX=+$G(^IBA(354,DFN,60)) I +IBX S IBY="*** Verification of No Coverage "_$$FMTE^XLFDT(IBX)_" ***" S IBLINE1=$$FRMLN(IBY,"",60,16),IBFND=1
"RTN","IBCNS3",146,0)
 I $$BUFFER^IBCNBU1(DFN) S IBY="***  Patient has Insurance Buffer entries  ***" S IBLINE2=$$FRMLN(IBY,"",50,17),IBFND=1
"RTN","IBCNS3",147,0)
 ;
"RTN","IBCNS3",148,0)
 I +IBFND D SETLN(" ") D:IBLINE1'="" SETLN(IBLINE1) D:IBLINE2'="" SETLN(IBLINE2) D SETLN(" ")
"RTN","IBCNS3",149,0)
 ;
"RTN","IBCNS3",150,0)
 Q
"RTN","IBCNS3",151,0)
 ;
"RTN","IBCNS3",152,0)
 ;
"RTN","IBCNS3",153,0)
EB(DFN,IBCDFN) ; Build eIV elig/benefit display for ?INX screen display
"RTN","IBCNS3",154,0)
 NEW IBX,IBY
"RTN","IBCNS3",155,0)
 D INIT^IBCNES(2.322,IBCDFN_","_DFN_",","A",,"?INX")
"RTN","IBCNS3",156,0)
 D SETLN(" ")
"RTN","IBCNS3",157,0)
 D SETLN("eIV Eligibility/Benefit Information:")
"RTN","IBCNS3",158,0)
 S IBX=0
"RTN","IBCNS3",159,0)
 F  S IBX=$O(^TMP("?INX",$J,"DISP",IBX)) Q:'IBX  D
"RTN","IBCNS3",160,0)
 . S IBY=$G(^TMP("?INX",$J,"DISP",IBX,0))
"RTN","IBCNS3",161,0)
 . D SETLN(IBY)
"RTN","IBCNS3",162,0)
 . Q
"RTN","IBCNS3",163,0)
 ;
"RTN","IBCNS3",164,0)
 ; clean up scratch global
"RTN","IBCNS3",165,0)
 K ^TMP("?INX",$J)
"RTN","IBCNS3",166,0)
 ;
"RTN","IBCNS3",167,0)
EBX ;
"RTN","IBCNS3",168,0)
 Q
"RTN","IBCNS3",169,0)
 ;
"RTN","IBCNS3",170,0)
 ;
"RTN","IBCNS3",171,0)
FRMLN(FIELD,IBLINE,FLNG,COL) ; format line data fields, returns IBLINE with FIELD of length FLNG at column COL
"RTN","IBCNS3",172,0)
 N IBNEW,IBL S FIELD=$G(FIELD),IBLINE=$G(IBLINE),FLNG=$G(FLNG),COL=$G(COL)
"RTN","IBCNS3",173,0)
 ;
"RTN","IBCNS3",174,0)
 S IBNEW=$E(IBLINE,1,COL),IBL=$L(IBNEW),IBNEW=IBNEW_$J("",COL-IBL)
"RTN","IBCNS3",175,0)
 S IBNEW=IBNEW_$E(FIELD,1,FLNG),IBL=$L(FIELD),IBNEW=IBNEW_$J("",FLNG-IBL)
"RTN","IBCNS3",176,0)
 S IBNEW=IBNEW_$E(IBLINE,COL+FLNG+1,9999)
"RTN","IBCNS3",177,0)
 Q IBNEW
"RTN","IBCNS3",178,0)
 ;
"RTN","IBCNS3",179,0)
 ;
"RTN","IBCNS3",180,0)
 ;
"RTN","IBCNS3",181,0)
FNDCOV(IBINSFN,IBPLNFN,IBDATE) ; -- return group/plan coverage limitations indications
"RTN","IBCNS3",182,0)
 ;     input:   IBINSFN = pointer to insurance company entry in 36
"RTN","IBCNS3",183,0)
 ;              IBPLNFN = pointer to insurance plan entry in 355.3
"RTN","IBCNS3",184,0)
 ;              IBDATE  = date to check coverage, default today
"RTN","IBCNS3",185,0)
 ;    output:   if insurance company will not reimburse = WNR, if all covered then returns null
"RTN","IBCNS3",186,0)
 ;              otherwise list of first characters of types covered, if conditional then character in lower case
"RTN","IBCNS3",187,0)
 ;              
"RTN","IBCNS3",188,0)
 N IBOUT,IBX,IBY,IBCAT,IBCATFN S IBOUT="" S:'$G(IBDATE) IBDATE=DT I '$G(IBINSFN)!'$G(IBPLNFN) G FNDCOVQ
"RTN","IBCNS3",189,0)
 ;
"RTN","IBCNS3",190,0)
 I $P($G(^DIC(36,+IBINSFN,0)),U,2)="N" S IBOUT="*WNR*" G FNDCOVQ
"RTN","IBCNS3",191,0)
 F IBCAT="INPATIENT","OUTPATIENT","PHARMACY","MENTAL HEALTH","DENTAL","LONG TERM CARE" D
"RTN","IBCNS3",192,0)
 . S IBCATFN=+$O(^IBE(355.31,"B",IBCAT,"")) Q:'IBCATFN
"RTN","IBCNS3",193,0)
 . S IBY=$$PLCOV^IBCNSU3(+IBPLNFN,IBDATE,+IBCATFN) Q:'IBY
"RTN","IBCNS3",194,0)
 . S IBX=$S(IBCAT="PHARMACY":"R",1:$E(IBCAT)) S:IBY>1 IBX=$C($A(IBX)+32) S IBOUT=IBOUT_IBX
"RTN","IBCNS3",195,0)
 S:IBOUT="" IBOUT="no CV" I IBOUT?6U S IBOUT=""
"RTN","IBCNS3",196,0)
FNDCOVQ Q IBOUT
"RTN","IBCNS3",197,0)
 ;
"RTN","IBCNS3",198,0)
 ;
"RTN","IBCNS3",199,0)
FNDGRP(IBPLNFN) ; -- return group name/group policy
"RTN","IBCNS3",200,0)
 ;     input:   IBPLNFN = pointer to insurance plan entry in 355.3
"RTN","IBCNS3",201,0)
 ;    output:   group name or group number, if both group NUMBER, check for Individual plans
"RTN","IBCNS3",202,0)
 ;
"RTN","IBCNS3",203,0)
 ;IB*2.0*516/TAZ - Use HIPAA compliant fields 
"RTN","IBCNS3",204,0)
 ;N IBX,IBOUT S IBOUT=""
"RTN","IBCNS3",205,0)
 ;S IBX=$G(^IBA(355.3,+$G(IBPLNFN),0))
"RTN","IBCNS3",206,0)
 ;S IBOUT=$S($P(IBX,U,4)'="":$P(IBX,U,4),1:$P(IBX,U,3))
"RTN","IBCNS3",207,0)
 ;I $P(IBX,U,10) S IBOUT="Ind. Plan "_IBOUT
"RTN","IBCNS3",208,0)
FNDGRPQ ;
"RTN","IBCNS3",209,0)
 ;Q IBOUT
"RTN","IBCNS3",210,0)
 Q $$GRP^IBCNS(+$G(IBPLNFN))
"RTN","IBCNS3",211,0)
 ;
"RTN","IBCNS3",212,0)
 ;
"RTN","IBCNS3",213,0)
 ;
"RTN","IBCNS3",214,0)
 ;
"RTN","IBCNS3",215,0)
HDR ; -- print header
"RTN","IBCNS3",216,0)
 N IBX W @IOF
"RTN","IBCNS3",217,0)
 W !,"Insurance",?13,"COB",?17,"Subscriber ID",?35,"Group",?47,"Holder",?55,"Effectve",?65,"Expires",?75,"Only"
"RTN","IBCNS3",218,0)
 S IBX="",$P(IBX,"=",80)="=" W !,IBX
"RTN","IBCNS3",219,0)
 Q
"RTN","IBCNS3",220,0)
 ;
"RTN","IBCNS3",221,0)
EOP() ; ask user for return at end of page, return 1 if '^' entered
"RTN","IBCNS3",222,0)
 N IBQ,DIR,DIRUT,DUOUT,DTOUT,X,Y W ! S IBQ=0,DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBQ=1
"RTN","IBCNS3",223,0)
 Q IBQ
"RTN","IBCNSBL1")
0^71^B37090504^B33740946
"RTN","IBCNSBL1",1,0)
IBCNSBL1 ;ALB/AAS - NEW INSURANCE POLICY BULLETIN ;29-AUG-93
"RTN","IBCNSBL1",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,82,249,276,516**;21-MAR-94;Build 123
"RTN","IBCNSBL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSBL1",4,0)
 ;
"RTN","IBCNSBL1",5,0)
BULL ; -- send bulletin
"RTN","IBCNSBL1",6,0)
 N IBCNT
"RTN","IBCNSBL1",7,0)
 S XMSUB="New Insurance Policy For "_$E($P(IBP,"^"),1,20)_"   Pt. Id: "_$P(IBP,"^",2)
"RTN","IBCNSBL1",8,0)
 S IBT(1)=" A new insurance policy has been added for:"
"RTN","IBCNSBL1",9,0)
 S IBT(2)=" Patient: "_$E($P(IBP,"^")_"               ",1,25)_"  PT. ID: "_$P(IBP,"^",2)
"RTN","IBCNSBL1",10,0)
 S IBT(3)=""
"RTN","IBCNSBL1",11,0)
 S IBT(4)=" New Policy: "
"RTN","IBCNSBL1",12,0)
 S IBCNT=4 D HDR,NPOL
"RTN","IBCNSBL1",13,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",14,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Previous Policy(s): "
"RTN","IBCNSBL1",15,0)
 D HDR,OPOL
"RTN","IBCNSBL1",16,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",17,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Buffer Policy(s): "
"RTN","IBCNSBL1",18,0)
 D BUFF
"RTN","IBCNSBL1",19,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",20,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Possible billable Inpt. Care: "
"RTN","IBCNSBL1",21,0)
 D INPT
"RTN","IBCNSBL1",22,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",23,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Possible billable Opt. Care: "
"RTN","IBCNSBL1",24,0)
 D OPT
"RTN","IBCNSBL1",25,0)
 I $$ECMEBIL^IBNCPDPU(DFN,DT) D
"RTN","IBCNSBL1",26,0)
 . S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",27,0)
 . S IBCNT=IBCNT+1,IBT(IBCNT)=" *** NOTE: Prescriptions for this patient are ECME BILLABLE and may be"
"RTN","IBCNSBL1",28,0)
 . S IBCNT=IBCNT+1,IBT(IBCNT)=" processed using the GENERATE ECME RX BILLS option contained in the"
"RTN","IBCNSBL1",29,0)
 . S IBCNT=IBCNT+1,IBT(IBCNT)=" Billing Clerk's Menu"
"RTN","IBCNSBL1",30,0)
 ;
"RTN","IBCNSBL1",31,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=""
"RTN","IBCNSBL1",32,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)=" Added by: "_$P($G(^VA(200,+$P(IBEVTA1,"^",2),0)),"^")
"RTN","IBCNSBL1",33,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)="       on: "_$$DAT1^IBOUTL(+IBEVTA1,"2P")
"RTN","IBCNSBL1",34,0)
 S IBCNT=IBCNT+1,IBT(IBCNT)="   Option: "
"RTN","IBCNSBL1",35,0)
 ;
"RTN","IBCNSBL1",36,0)
 I $D(XQY0) S IBT(IBCNT)=IBT(IBCNT)_$P($G(XQY0),"^",2)
"RTN","IBCNSBL1",37,0)
 I $D(ZTQUEUED),$P($G(XQY0),"^",2)="" S IBT(IBCNT)=IBT(IBCNT)_"Queued Job - "_$G(ZTDESC)
"RTN","IBCNSBL1",38,0)
 D SEND
"RTN","IBCNSBL1",39,0)
BULLQ Q
"RTN","IBCNSBL1",40,0)
 ;
"RTN","IBCNSBL1",41,0)
NPOL ; -- set up new policy
"RTN","IBCNSBL1",42,0)
 S IBCNT=IBCNT+1
"RTN","IBCNSBL1",43,0)
 S IBT(IBCNT)=$$D1(IBEVTA0)
"RTN","IBCNSBL1",44,0)
 Q
"RTN","IBCNSBL1",45,0)
 ;
"RTN","IBCNSBL1",46,0)
OPOL ; -- set up old policies
"RTN","IBCNSBL1",47,0)
 N J,X,IBPCNT
"RTN","IBCNSBL1",48,0)
 S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I J'=IBCDFN S X=$G(^DPT(DFN,.312,J,0)) S IBCNT=IBCNT+1,IBT(IBCNT)=$$D1(X) S IBPCNT=$G(IBPCNT)+1
"RTN","IBCNSBL1",49,0)
 I $G(IBPCNT)<1 S IBCNT=IBCNT+1,IBT(IBCNT)="    No Previous Policies On file!"
"RTN","IBCNSBL1",50,0)
 Q
"RTN","IBCNSBL1",51,0)
 ;
"RTN","IBCNSBL1",52,0)
SEND S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBCNSBL1",53,0)
 K XMY S XMN=0
"RTN","IBCNSBL1",54,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,4)),"^",4),0)),"^")
"RTN","IBCNSBL1",55,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBCNSBL1",56,0)
 D ^XMD
"RTN","IBCNSBL1",57,0)
 K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB
"RTN","IBCNSBL1",58,0)
 Q
"RTN","IBCNSBL1",59,0)
 ;
"RTN","IBCNSBL1",60,0)
HDR ; -- print standard header
"RTN","IBCNSBL1",61,0)
 D HDR1("=",76)
"RTN","IBCNSBL1",62,0)
 Q
"RTN","IBCNSBL1",63,0)
 ;
"RTN","IBCNSBL1",64,0)
HDR1(CHAR,LENG) ; -- print header, specify character
"RTN","IBCNSBL1",65,0)
 S IBCNT=IBCNT+1
"RTN","IBCNSBL1",66,0)
 S IBT(IBCNT)="    Insurance Co.     Subscriber ID     Group       Holder  Effective Expires"
"RTN","IBCNSBL1",67,0)
 S IBCNT=IBCNT+1,X="",$P(X,CHAR,LENG)=""
"RTN","IBCNSBL1",68,0)
 S IBT(IBCNT)=X
"RTN","IBCNSBL1",69,0)
 Q
"RTN","IBCNSBL1",70,0)
 ;
"RTN","IBCNSBL1",71,0)
 ;
"RTN","IBCNSBL1",72,0)
D1(IBINS) N X,IBX
"RTN","IBCNSBL1",73,0)
 S IBX="" I '$G(IBINS) G DQ
"RTN","IBCNSBL1",74,0)
 S IBX="    "_$E($S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")_"                 ",1,16)_"  "
"RTN","IBCNSBL1",75,0)
 S IBX=IBX_$E($P(IBINS,"^",2)_"                ",1,16)_"  "
"RTN","IBCNSBL1",76,0)
 S IBX=IBX_$E($$GRP^IBCNS($P(IBINS,"^",18))_"          ",1,10)_"  "
"RTN","IBCNSBL1",77,0)
 S X=$P(IBINS,"^",6) S IBX=IBX_$E($S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")_"      ",1,8)
"RTN","IBCNSBL1",78,0)
 S IBX=IBX_$E($$DAT1^IBOUTL($P(IBINS,"^",8))_"          ",1,10)_$$DAT1^IBOUTL($P(IBINS,"^",4))
"RTN","IBCNSBL1",79,0)
DQ Q IBX
"RTN","IBCNSBL1",80,0)
 ;
"RTN","IBCNSBL1",81,0)
OPT ; -- list opt treatment (sched appoints only)
"RTN","IBCNSBL1",82,0)
 N CNT S CNT=0
"RTN","IBCNSBL1",83,0)
 ;
"RTN","IBCNSBL1",84,0)
 I $D(^TMP($J,"SDAMA201","GETAPPT","ERROR")) S IBCNT=IBCNT+1,IBT(IBCNT)="    Unable to look-up Scheduled Appointments." D  Q
"RTN","IBCNSBL1",85,0)
 . F  S CNT=$O(^TMP($J,"SDAMA201","GETAPPT","ERROR",CNT)) Q:'CNT  S IBCNT=IBCNT+1,IBT(IBCNT)="    "_$G(^TMP($J,"SDAMA201","GETAPPT","ERROR",CNT))
"RTN","IBCNSBL1",86,0)
 ;
"RTN","IBCNSBL1",87,0)
 S OPT=0 F  S OPT=$O(^TMP($J,"SDAMA201","GETAPPT",OPT)) Q:'OPT  D
"RTN","IBCNSBL1",88,0)
 .S IBCNT=IBCNT+1
"RTN","IBCNSBL1",89,0)
 .I IBCNT>100 S IBT(IBCNT)="Too many to list" S OPT=9999999 Q
"RTN","IBCNSBL1",90,0)
 .S IBT(IBCNT)="   Outpatient Visit on "_$$DAT1^IBOUTL($G(^TMP($J,"SDAMA201","GETAPPT",OPT,1)))_" to "_$P($G(^TMP($J,"SDAMA201","GETAPPT",OPT,2)),"^",2)
"RTN","IBCNSBL1",91,0)
 .S CNT=CNT+1
"RTN","IBCNSBL1",92,0)
 I 'CNT S IBCNT=IBCNT+1,IBT(IBCNT)="    No Scheduled appointments found."
"RTN","IBCNSBL1",93,0)
 Q
"RTN","IBCNSBL1",94,0)
 ;
"RTN","IBCNSBL1",95,0)
INPT ; -- list inpt. treatment (admissions only)
"RTN","IBCNSBL1",96,0)
 N CNT S CNT=0
"RTN","IBCNSBL1",97,0)
 I $G(^DPT(DFN,.1))]"" S CNT=CNT+1,IBCNT=IBCNT+1,IBT(IBCNT)="    Currently an Inpatient on "_$G(^DPT(DFN,.1))
"RTN","IBCNSBL1",98,0)
 I $G(IBTADD) S IBCNT=IBCNT+1,IBT(IBCNT)="    Entry Added to Claims Tracking for Current Admission."
"RTN","IBCNSBL1",99,0)
 I $G(VAIN(1)) S CNT=CNT+1,IBCNT=IBCNT+1,IBT(IBCNT)="    Previously an inpatient on ward "_$P(VAIN(4),"^",2)_" on "_$$DAT1^IBOUTL($P(START,"."))
"RTN","IBCNSBL1",100,0)
 S INPT=START F  S INPT=$O(^DGPM("APTT1",DFN,INPT)) Q:'INPT!(INPT>END)  S DGPM=0 F  S DGPM=$O(^DGPM("APTT1",DFN,INPT,DGPM)) Q:'DGPM  D
"RTN","IBCNSBL1",101,0)
 .Q:'$G(^DGPM(DGPM,0))
"RTN","IBCNSBL1",102,0)
 .S IBCNT=IBCNT+1
"RTN","IBCNSBL1",103,0)
 .S IBT(IBCNT)="    Inpatient Admission on "_$$DAT1^IBOUTL(+^DGPM(DGPM,0),"2P")
"RTN","IBCNSBL1",104,0)
 .S CNT=CNT+1
"RTN","IBCNSBL1",105,0)
 I 'CNT S IBCNT=IBCNT+1,IBT(IBCNT)="    No Admissions found."
"RTN","IBCNSBL1",106,0)
 Q
"RTN","IBCNSBL1",107,0)
 ;
"RTN","IBCNSBL1",108,0)
BUFF ; -- list insurance buffer entries for the patient
"RTN","IBCNSBL1",109,0)
 N IBBDA,IBX,IBY,IBB40,IBB60
"RTN","IBCNSBL1",110,0)
 I '$$BUFFER^IBCNBU1(DFN) S IBCNT=IBCNT+1,IBT(IBCNT)="    No Insurance Buffer entries for this Patient." Q
"RTN","IBCNSBL1",111,0)
 ;
"RTN","IBCNSBL1",112,0)
 S IBBDA=0 F  S IBBDA=$O(^IBA(355.33,"C",DFN,IBBDA)) Q:'IBBDA  D
"RTN","IBCNSBL1",113,0)
 . S IBB40=$G(^IBA(355.33,IBBDA,40)),IBB60=$G(^IBA(355.33,IBBDA,60))
"RTN","IBCNSBL1",114,0)
 . ;IB*2.0*516/BAA - Use HIPAA compliant fields.
"RTN","IBCNSBL1",115,0)
 . S $P(IBB40,U,2)=$$GET1^DIQ(355.33,IBBDA,90.01)  ;516 - baa - new group name field
"RTN","IBCNSBL1",116,0)
 . S $P(IBB40,U,3)=$$GET1^DIQ(355.33,IBBDA,90.02)  ;516 - baa - new group number field
"RTN","IBCNSBL1",117,0)
 . S $P(IBB60,U,4)=$$GET1^DIQ(355.33,IBBDA,90.03)  ;516 - baa - new subscriber id field
"RTN","IBCNSBL1",118,0)
 . ;
"RTN","IBCNSBL1",119,0)
 . S IBY=$P($G(^IBA(355.33,+IBBDA,20)),U,1),IBX="    "_$E($S(IBY'="":IBY,1:"UNKNOWN")_"                 ",1,16)_"  "
"RTN","IBCNSBL1",120,0)
 . S IBX=IBX_$E($P(IBB60,"^",4)_"                ",1,16)_"  "
"RTN","IBCNSBL1",121,0)
 . S IBX=IBX_$E($S($P(IBB40,U,3)'="":$P(IBB40,U,3),$P(IBB40,U,2)'="":$P(IBB40,U,2),$P(IBB40,U,1)=0:"Ind. Plan",1:"")_"          ",1,10)_"  "
"RTN","IBCNSBL1",122,0)
 . S IBY=$P(IBB60,"^",5) S IBX=IBX_$E($S(IBY="v":"SELF",IBY="s":"SPOUSE",1:"OTHER")_"      ",1,8)
"RTN","IBCNSBL1",123,0)
 . S IBX=IBX_$E($$DAT1^IBOUTL($P(IBB60,"^",2))_"          ",1,10)_$$DAT1^IBOUTL($P(IBB60,"^",3))
"RTN","IBCNSBL1",124,0)
 . S IBCNT=IBCNT+1,IBT(IBCNT)=IBX
"RTN","IBCNSBL1",125,0)
 Q
"RTN","IBCNSC1")
0^32^B80307925^B90495985
"RTN","IBCNSC1",1,0)
IBCNSC1 ;ALB/NLR - IBCNS INSURANCE COMPANY ;23-MAR-93
"RTN","IBCNSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**62,137,232,291,320,348,349,371,400,519,516**;21-MAR-94;Build 123
"RTN","IBCNSC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSC1",4,0)
 ;
"RTN","IBCNSC1",5,0)
% G EN^IBCNSC
"RTN","IBCNSC1",6,0)
 ;
"RTN","IBCNSC1",7,0)
AI ; -- (In)Activate Company
"RTN","IBCNSC1",8,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",9,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
"RTN","IBCNSC1",10,0)
 D ^IBCNSC2
"RTN","IBCNSC1",11,0)
 G EXIT
"RTN","IBCNSC1",12,0)
CC ; -- Change Insurance Company
"RTN","IBCNSC1",13,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",14,0)
 S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
"RTN","IBCNSC1",15,0)
 I '$D(IBCNS) S IBCNS=IBCNS1
"RTN","IBCNSC1",16,0)
 K IBCNS1,VALMQUIT
"RTN","IBCNSC1",17,0)
 G EXIT
"RTN","IBCNSC1",18,0)
EA ; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
"RTN","IBCNSC1",19,0)
 D FULL^VALM1
"RTN","IBCNSC1",20,0)
 ;
"RTN","IBCNSC1",21,0)
 ; IB*2*320 - check key for associate company action
"RTN","IBCNSC1",22,0)
 I $G(IBY)=",13,",'$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G EXIT
"RTN","IBCNSC1",23,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC1",24,0)
 . D PAUSE^VALM1
"RTN","IBCNSC1",25,0)
 . Q
"RTN","IBCNSC1",26,0)
 ;
"RTN","IBCNSC1",27,0)
 W !!
"RTN","IBCNSC1",28,0)
 D MAIN
"RTN","IBCNSC1",29,0)
 ;
"RTN","IBCNSC1",30,0)
 ; -- was company deleted
"RTN","IBCNSC1",31,0)
 I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
"RTN","IBCNSC1",32,0)
 ;
"RTN","IBCNSC1",33,0)
EXIT ;
"RTN","IBCNSC1",34,0)
 D HDR^IBCNSC,BLD^IBCNSC
"RTN","IBCNSC1",35,0)
 S VALMBCK="R"
"RTN","IBCNSC1",36,0)
 Q
"RTN","IBCNSC1",37,0)
MAIN ; -- Call edit template
"RTN","IBCNSC1",38,0)
 N IBEDIKEY,Z
"RTN","IBCNSC1",39,0)
 L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
"RTN","IBCNSC1",40,0)
 I $G(IBY)=",12," D FACID
"RTN","IBCNSC1",41,0)
 F Z=1,2,4,9,13,14 S IBEDIKEY(Z)=$P($G(^DIC(36,+IBCNS,3)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",42,0)
 F Z=1:1:8 S IBEDIKEY(Z,6)=$P($G(^DIC(36,+IBCNS,6)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",43,0)
 I $G(IBY)'=",12," N DIE,DA,DR S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE S:$D(Y) IB("^")=1 D:$TR($P($G(^DIC(36,IBCNS,6)),U,1,8),U)]"" CUIDS(IBCNS)
"RTN","IBCNSC1",44,0)
 I $G(IBY)=",12," D EDITID^IBCEP(+IBCNS)
"RTN","IBCNSC1",45,0)
 I $F(",6,13,",$G(IBY)) D PARENT^IBCNSC02(+IBCNS)   ; parent/child management
"RTN","IBCNSC1",46,0)
 L -^DIC(36,+IBCNS)
"RTN","IBCNSC1",47,0)
 ; IB*2.0*519:  If field 3.02 or 3.04 has changed, trigger HL7 to update the NIF
"RTN","IBCNSC1",48,0)
 I (IBEDIKEY(2)'=$P($G(^DIC(36,+IBCNS,3)),U,2))!(IBEDIKEY(4)'=$P($G(^DIC(36,+IBCNS,3)),U,4)) D EXR^IBCNHUT1(IBCNS),SEND^IBCNHHLO(IBCNS)
"RTN","IBCNSC1",49,0)
MAINQ Q
"RTN","IBCNSC1",50,0)
 ;
"RTN","IBCNSC1",51,0)
FACID ; -- Edit facility ids
"RTN","IBCNSC1",52,0)
 D FACID^IBCEP2B(+IBCNS,"E")
"RTN","IBCNSC1",53,0)
 Q
"RTN","IBCNSC1",54,0)
 ;
"RTN","IBCNSC1",55,0)
SORRY ; -- can't inactivate, don't have key
"RTN","IBCNSC1",56,0)
 W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
"RTN","IBCNSC1",57,0)
 Q
"RTN","IBCNSC1",58,0)
PRESCR ;
"RTN","IBCNSC1",59,0)
 N OFFSET,START,IBCNS18,IBADD
"RTN","IBCNSC1",60,0)
 S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",61,0)
 S START=41,OFFSET=2
"RTN","IBCNSC1",62,0)
 D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC1",63,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
"RTN","IBCNSC1",64,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
"RTN","IBCNSC1",65,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
"RTN","IBCNSC1",66,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS18,"^",11))
"RTN","IBCNSC1",67,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC1",68,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
"RTN","IBCNSC1",69,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
"RTN","IBCNSC1",70,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
"RTN","IBCNSC1",71,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
"RTN","IBCNSC1",72,0)
 Q
"RTN","IBCNSC1",73,0)
 ;
"RTN","IBCNSC1",74,0)
PROVID N OFFSET,START,IBCNS4,IBCNS3,IBDISP,Z,LINE
"RTN","IBCNSC1",75,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC1",76,0)
 S (IB1ST("PROVID"),LINE)=START
"RTN","IBCNSC1",77,0)
 S OFFSET=2,IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3))
"RTN","IBCNSC1",78,0)
 ;       
"RTN","IBCNSC1",79,0)
 D SET^IBCNSP(LINE,OFFSET+25,"Provider IDs",IORVON,IORVOFF)
"RTN","IBCNSC1",80,0)
 N OFFSET
"RTN","IBCNSC1",81,0)
 S LINE=LINE+1,OFFSET=1
"RTN","IBCNSC1",82,0)
 D SET^IBCNSP(LINE,OFFSET,"Billing Provider Secondary ID")
"RTN","IBCNSC1",83,0)
 ;
"RTN","IBCNSC1",84,0)
 N Z,Z0,Z1,IBS,I,DIV,FT,CU,CUF,DIVISION,FORMTYPE,PIDT
"RTN","IBCNSC1",85,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",86,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",87,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",88,0)
 . Q:'($P(Z0,U,8)="E")
"RTN","IBCNSC1",89,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z0,U,4))=$P(Z0,U,6)_U_$P(Z0,U,7)
"RTN","IBCNSC1",90,0)
 ;
"RTN","IBCNSC1",91,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",92,0)
 . S DIVISION=$$DIV^IBCEP7(DIV)
"RTN","IBCNSC1",93,0)
 . S CU="",CUF=0 F  S CU=$O(IBS(DIV,CU)) Q:CU=""  D
"RTN","IBCNSC1",94,0)
 .. S FT="" F  S FT=$O(IBS(DIV,CU,FT)) Q:FT=""  D
"RTN","IBCNSC1",95,0)
 ... S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",96,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",97,0)
 ... I 'CUF,+CU S CUF=1 S TEXT=$P(DIVISION,"/")_" Care Units :",OFFSET=5 D SET^IBCNSP(LINE,OFFSET,TEXT) S LINE=LINE+1
"RTN","IBCNSC1",98,0)
 ... I CU=0 S TEXT=DIVISION_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=2
"RTN","IBCNSC1",99,0)
 ... I +CU S TEXT=$$EXPAND^IBTRE(355.92,.03,CU)_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=5
"RTN","IBCNSC1",100,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",101,0)
 ;
"RTN","IBCNSC1",102,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",103,0)
 ;
"RTN","IBCNSC1",104,0)
 K IBS
"RTN","IBCNSC1",105,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",106,0)
 D SET^IBCNSP(LINE,OFFSET,"Additional Billing Provider Secondary IDs")
"RTN","IBCNSC1",107,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",108,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",109,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",110,0)
 . Q:'($P(Z0,U,8)="A")
"RTN","IBCNSC1",111,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",112,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",113,0)
 ;
"RTN","IBCNSC1",114,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",115,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",116,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",117,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",118,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",119,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",120,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",121,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",122,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",123,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",124,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",125,0)
 ;
"RTN","IBCNSC1",126,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",127,0)
 ;
"RTN","IBCNSC1",128,0)
 K IBS
"RTN","IBCNSC1",129,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",130,0)
 D SET^IBCNSP(LINE,OFFSET,"VA-Laboratory or Facility Secondary IDs")
"RTN","IBCNSC1",131,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",132,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",133,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",134,0)
 . Q:'($P(Z0,U,8)="LF")
"RTN","IBCNSC1",135,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",136,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",137,0)
 ;
"RTN","IBCNSC1",138,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",139,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",140,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",141,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",142,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",143,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",144,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",145,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",146,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",147,0)
 ... ;S TEXT=$$EXPAND^IBTRE(355.92,.06,PIDT)_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",148,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",149,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",150,0)
 ;
"RTN","IBCNSC1",151,0)
 ;
"RTN","IBCNSC1",152,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",153,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",154,0)
 S OFFSET=2
"RTN","IBCNSC1",155,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,OFFSET+25,"ID Parameters",IORVON,IORVOFF)
"RTN","IBCNSC1",156,0)
 ;
"RTN","IBCNSC1",157,0)
 S IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3)),OFFSET=1
"RTN","IBCNSC1",158,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.01,+$P(IBCNS4,U))
"RTN","IBCNSC1",159,0)
 S LINE=LINE+1
"RTN","IBCNSC1",160,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",161,0)
 ;
"RTN","IBCNSC1",162,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (UB-04): "_$$EXPAND^IBTRE(36,4.02,+$P(IBCNS4,U,2))
"RTN","IBCNSC1",163,0)
 S LINE=LINE+1
"RTN","IBCNSC1",164,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",165,0)
 ;
"RTN","IBCNSC1",166,0)
 S TEXT="Attending/Rendering Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.03,+$P(IBCNS4,U,3))
"RTN","IBCNSC1",167,0)
 S LINE=LINE+1
"RTN","IBCNSC1",168,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",169,0)
 ;
"RTN","IBCNSC1",170,0)
 S TEXT="Referring Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.04,+$P(IBCNS4,U,4))
"RTN","IBCNSC1",171,0)
 S LINE=LINE+1
"RTN","IBCNSC1",172,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",173,0)
 ;
"RTN","IBCNSC1",174,0)
 S TEXT="Referring Provider Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.05,+$P(IBCNS4,U,5))
"RTN","IBCNSC1",175,0)
 S LINE=LINE+1
"RTN","IBCNSC1",176,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",177,0)
 ;
"RTN","IBCNSC1",178,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (1500): "_$$EXPAND^IBTRE(36,4.06,+$P(IBCNS4,U,6))
"RTN","IBCNSC1",179,0)
 S LINE=LINE+1
"RTN","IBCNSC1",180,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",181,0)
 ;
"RTN","IBCNSC1",182,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (UB-04): "_$$EXPAND^IBTRE(36,4.08,+$P(IBCNS4,U,8))
"RTN","IBCNSC1",183,0)
 S LINE=LINE+1
"RTN","IBCNSC1",184,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",185,0)
 ;
"RTN","IBCNSC1",186,0)
 ; MRD;IB*2.0*516 - Marked fields 4.07, 4.11, 4.12 and 4.13 for
"RTN","IBCNSC1",187,0)
 ; deletion and removed all references to them.
"RTN","IBCNSC1",188,0)
 ;S TEXT="Always use main VAMC as Billing Provider (1500)?: "_$$EXPAND^IBTRE(36,4.11,+$P(IBCNS4,U,11))
"RTN","IBCNSC1",189,0)
 ;S LINE=LINE+1
"RTN","IBCNSC1",190,0)
 ;D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",191,0)
 ;
"RTN","IBCNSC1",192,0)
 ;S TEXT="Always use main VAMC as Billing Provider (UB-04)?: "_$$EXPAND^IBTRE(36,4.12,+$P(IBCNS4,U,12))
"RTN","IBCNSC1",193,0)
 ;S LINE=LINE+1
"RTN","IBCNSC1",194,0)
 ;D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",195,0)
 ;
"RTN","IBCNSC1",196,0)
 ;I $P(IBCNS4,U,11)!($P(IBCNS4,U,12)) D
"RTN","IBCNSC1",197,0)
 ;.S TEXT="Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7))
"RTN","IBCNSC1",198,0)
 ;.S LINE=LINE+1
"RTN","IBCNSC1",199,0)
 ;.D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",200,0)
 ;.;
"RTN","IBCNSC1",201,0)
 ;.S TEXT="Use the Billing Provider (VAMC) Name and Street Address?: "_$$EXPAND^IBTRE(36,4.13,+$P(IBCNS4,U,13))
"RTN","IBCNSC1",202,0)
 ;.S LINE=LINE+1
"RTN","IBCNSC1",203,0)
 ;.D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",204,0)
 ;.Q
"RTN","IBCNSC1",205,0)
 ;
"RTN","IBCNSC1",206,0)
 S TEXT="Transmit no Billing Provider Sec. ID for the Electronic Plan Types: "
"RTN","IBCNSC1",207,0)
 S LINE=LINE+1
"RTN","IBCNSC1",208,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",209,0)
 ;
"RTN","IBCNSC1",210,0)
 N TAR,ERR,IBCT
"RTN","IBCNSC1",211,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCNSC1",212,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCNSC1",213,0)
 . S TEXT=TAR("DILIST",1,IBCT)
"RTN","IBCNSC1",214,0)
 . S LINE=LINE+1
"RTN","IBCNSC1",215,0)
 . D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",216,0)
 ;
"RTN","IBCNSC1",217,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",218,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",219,0)
 Q
"RTN","IBCNSC1",220,0)
 ;       
"RTN","IBCNSC1",221,0)
INSDEF(IBINS,IBPTYP) ; Returns the default id # for an ins co, if possible
"RTN","IBCNSC1",222,0)
 N X
"RTN","IBCNSC1",223,0)
 S X=""
"RTN","IBCNSC1",224,0)
 I IBINS,IBPTYP S X=$P($G(^IBA(355.91,+$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*","")),0)),U,7)
"RTN","IBCNSC1",225,0)
 Q X
"RTN","IBCNSC1",226,0)
 ;
"RTN","IBCNSC1",227,0)
CUIDS(IBCNS) ;
"RTN","IBCNSC1",228,0)
 N DIE,DA,DR,PIECE,DAT6,Y
"RTN","IBCNSC1",229,0)
 S DAT6=$P(^DIC(36,IBCNS,6),U,1,8) ; get the Payer IDs
"RTN","IBCNSC1",230,0)
 ;
"RTN","IBCNSC1",231,0)
 ; Make sure each qualifier has an ID and vice versa
"RTN","IBCNSC1",232,0)
 F PIECE=1,3,5,7 D
"RTN","IBCNSC1",233,0)
 . I $TR($P(DAT6,U,PIECE,PIECE+1),U)="" Q  ; both blank
"RTN","IBCNSC1",234,0)
 . I $P(DAT6,U,PIECE)]"",$P(DAT6,U,PIECE+1)]"" Q  ; both have data
"RTN","IBCNSC1",235,0)
 . S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="6.0"_$S($P(DAT6,U,PIECE)]"":PIECE,1:PIECE+1)_"////@"
"RTN","IBCNSC1",236,0)
 . D ^DIE K DIE
"RTN","IBCNSC1",237,0)
 ;
"RTN","IBCNSC1",238,0)
 S DAT6=$P($G(^DIC(36,IBCNS,6)),U,1,8) ; get the Payer IDs again since they may have changed above.
"RTN","IBCNSC1",239,0)
 ;
"RTN","IBCNSC1",240,0)
 ; Make sure the first pair of ID/Qual are populated if the 2nd pair is.  If not, move em over.
"RTN","IBCNSC1",241,0)
 ; This is done for institutional then professional
"RTN","IBCNSC1",242,0)
 F PIECE=1,5 D
"RTN","IBCNSC1",243,0)
 . I $P(DAT6,U,PIECE)]"" Q  ; already has set one
"RTN","IBCNSC1",244,0)
 . I $P(DAT6,U,PIECE+2)="" Q  ; has no second set
"RTN","IBCNSC1",245,0)
 . S DIE="^DIC(36,",(DA,Y)=IBCNS
"RTN","IBCNSC1",246,0)
 . ; deleting the qualifier triggers deletion of the ID
"RTN","IBCNSC1",247,0)
 . S DR="6.0"_PIECE_"////"_$P(DAT6,U,PIECE+2)_";6.0"_(PIECE+1)_"////"_$P(DAT6,U,PIECE+3)_";6.0"_(PIECE+2)_"////@"
"RTN","IBCNSC1",248,0)
 . D ^DIE K DIE
"RTN","IBCNSC1",249,0)
 Q
"RTN","IBCNSC3")
0^72^B18386728^B18009103
"RTN","IBCNSC3",1,0)
IBCNSC3 ;ALB/NLR - INACTIVATE AND REPOINT INS STUFF1 ; 20-APR-93
"RTN","IBCNSC3",2,0)
 ;;2.0;INTEGRATED BILLING;**28,46,68,516**;21-MAR-94;Build 123
"RTN","IBCNSC3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSC3",4,0)
 ;
"RTN","IBCNSC3",5,0)
RPTASK ; -- ask if user wishes to repoint patients to active insurance company
"RTN","IBCNSC3",6,0)
 ;
"RTN","IBCNSC3",7,0)
 S DIR(0)="YO",DIR("A")="DO YOU WISH TO REPOINT "_$S(IBC=1:"THIS PATIENT",1:"THESE PATIENTS")_" TO ANOTHER INSURANCE COMPANY",DIR("B")="No"
"RTN","IBCNSC3",8,0)
 W ! D ^DIR K DIR I 'Y!$D(DIRUT) D:$G(IBCOV) COVD G RPTASKQ
"RTN","IBCNSC3",9,0)
 ;
"RTN","IBCNSC3",10,0)
 ; - select company to which policies/plans should be repointed
"RTN","IBCNSC3",11,0)
 S DIC="^DIC(36,",DIC(0)="QEAZ",DIC("A")="REPOINT "_$S(IBC=1:"THIS PATIENT",1:"THESE PATIENTS")_" TO WHICH (ACTIVE) INSURANCE COMPANY: ",DIC("S")="I +$P(^(0),U,5)=0,+$P(^(0),U,16)'=Y,$G(IBCNS)'=Y",DIC("W")="D ID^IBCNSCD3"
"RTN","IBCNSC3",12,0)
 W ! D ^DIC K DIC S IBR=+Y I Y<1!$D(DIRUT) D:$G(IBCOV) COVD G RPTASKQ
"RTN","IBCNSC3",13,0)
 ;
"RTN","IBCNSC3",14,0)
 ; - save the new company in the inactivated company
"RTN","IBCNSC3",15,0)
 S DA=IBCNS,DR=".16////"_IBR,DIE="^DIC(36," D ^DIE K DIE,DA,DR
"RTN","IBCNSC3",16,0)
 ;
"RTN","IBCNSC3",17,0)
 ; - repoint patient policy information
"RTN","IBCNSC3",18,0)
 S DFN=0 F  S DFN=$O(^DPT("AB",IBCNS,DFN)) Q:'DFN  D
"RTN","IBCNSC3",19,0)
 .S IBD=0 F  S IBD=$O(^DPT("AB",IBCNS,DFN,IBD)) Q:'IBD  D
"RTN","IBCNSC3",20,0)
 ..;
"RTN","IBCNSC3",21,0)
 ..; - repoint the policy to the new company
"RTN","IBCNSC3",22,0)
 ..S IBXXX='$G(^DPT(DFN,.312,IBD,1))
"RTN","IBCNSC3",23,0)
 ..S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBD,DR=".01///`"_IBR_";1.05///NOW;1.06////"_DUZ D ^DIE K DIE,DA,DR
"RTN","IBCNSC3",24,0)
 ..I IBXXX S $P(^DPT(DFN,.312,IBD,1),"^",1,2)="^"
"RTN","IBCNSC3",25,0)
 ..;
"RTN","IBCNSC3",26,0)
 ..; - repoint Insurance Reviews to the new company
"RTN","IBCNSC3",27,0)
 ..S IBX=0 F  S IBX=$O(^IBT(356.2,"D",DFN,IBX)) Q:'IBX  I $P($G(^IBT(356.2,IBX,1)),"^",5)=IBD S DIE="^IBT(356.2,",DA=IBX,DR=".08////"_IBR D ^DIE K DIE,DA,DR
"RTN","IBCNSC3",28,0)
 .;
"RTN","IBCNSC3",29,0)
 .; - adjust 'Covered by Insurance' prompt
"RTN","IBCNSC3",30,0)
 .D COV^IBCNSJ(DFN)
"RTN","IBCNSC3",31,0)
 ;
"RTN","IBCNSC3",32,0)
 ; - repoint all plans
"RTN","IBCNSC3",33,0)
 S IBD=0 F  S IBD=$O(^IBA(355.3,"B",IBCNS,IBD)) Q:'IBD  D
"RTN","IBCNSC3",34,0)
 .S DIE="^IBA(355.3,",DA=IBD,DR=".01///`"_IBR D ^DIE K DIE,DA,DR
"RTN","IBCNSC3",35,0)
 ;
"RTN","IBCNSC3",36,0)
RPTASKQ K DIRUT,DTOUT,DUOUT,DIROUT,DFN,IBD,IBR,IBX,IBXXX
"RTN","IBCNSC3",37,0)
 Q
"RTN","IBCNSC3",38,0)
 ;
"RTN","IBCNSC3",39,0)
COVD ; Adjust 'Covered by Insurance' prompt for repointed patients
"RTN","IBCNSC3",40,0)
 S DFN=0 F  S DFN=$O(^DPT("AB",IBCNS,DFN)) Q:'DFN  D COV^IBCNSJ(DFN)
"RTN","IBCNSC3",41,0)
 Q
"RTN","IBCNSC3",42,0)
 ;
"RTN","IBCNSC3",43,0)
 ;
"RTN","IBCNSC3",44,0)
 ;
"RTN","IBCNSC3",45,0)
VERIFY ; -- allow user to change mind about inactivating company
"RTN","IBCNSC3",46,0)
 ;
"RTN","IBCNSC3",47,0)
 S DIR("B")="No",DIR(0)="YO",DIR("A")="ARE YOU REALLY SURE YOU WISH TO INACTIVATE "_IBN
"RTN","IBCNSC3",48,0)
 S DIR("?",1)="You are about to change "_IBN_" to inactive."
"RTN","IBCNSC3",49,0)
 S DIR("?",2)="This means you will no longer be able to bill "
"RTN","IBCNSC3",50,0)
 S DIR("?")=IBN_" for its patients' charges."
"RTN","IBCNSC3",51,0)
 W ! D ^DIR K DIR I $D(DIRUT) S IBQUIT=1
"RTN","IBCNSC3",52,0)
 S:Y IBV=1
"RTN","IBCNSC3",53,0)
 Q
"RTN","IBCNSC3",54,0)
 ;
"RTN","IBCNSC3",55,0)
HDR ; -- print header
"RTN","IBCNSC3",56,0)
 ;
"RTN","IBCNSC3",57,0)
 N X,TAB
"RTN","IBCNSC3",58,0)
 W:$E(IOST,1,2)["C-"!($G(IBPAG)) @IOF
"RTN","IBCNSC3",59,0)
 S IBPAG=$G(IBPAG)+1
"RTN","IBCNSC3",60,0)
 W !,?1,"PATIENTS WITH "_$S(+IBV=0:"ACTIVE",+IBV=1:"INACTIVATED")_" INSURANCE, "_$P(^DIC(36,IBCNS,0),U),?69,"PAGE ",IBPAG,?77,$$DAT1^IBOUTL(DT)
"RTN","IBCNSC3",61,0)
 ;
"RTN","IBCNSC3",62,0)
 ; - display Insurance Company name and address.
"RTN","IBCNSC3",63,0)
 S X=$G(^DIC(36,+IBCNS,.11)),TAB=$S('IBV:33,1:38)
"RTN","IBCNSC3",64,0)
 W:$P(X,"^")]"" !?TAB,$P(X,"^")
"RTN","IBCNSC3",65,0)
 W:$P(X,"^",2)]"" !?TAB,$P(X,"^",2)
"RTN","IBCNSC3",66,0)
 W:$P(X,"^",3)]"" !?TAB,$P(X,"^",3)
"RTN","IBCNSC3",67,0)
 W:$P(X,"^")]""!($P(X,"^",2)]"")!($P(X,"^",3)]"") !?TAB
"RTN","IBCNSC3",68,0)
 W $P(X,"^",4) W:$P(X,"^",4)]""&($P(X,"^",5)]"") ", "
"RTN","IBCNSC3",69,0)
 W $P($G(^DIC(5,+$P(X,"^",5),0)),"^")
"RTN","IBCNSC3",70,0)
 W:$P(X,"^",6)]""&($P(X,"^",4)]""!($P(X,"^",5)]"")) "   "
"RTN","IBCNSC3",71,0)
 W $E($P(X,"^",6),1,5),$S($E($P(X,"^",6),6,9)]"":"-"_$E($P(X,"^",6),6,9),1:"")
"RTN","IBCNSC3",72,0)
 ;
"RTN","IBCNSC3",73,0)
 W !?1,"PATIENT",?31,"PATIENT ID",?45,"IR?",?52,"EFF DATE",?63,"EXP DATE",?74,"SUBSCR ID",?95,"WHOSE INS",?106,"EMPLOYER",!
"RTN","IBCNSC3",74,0)
 W $TR($J(" ",IOM)," ","-")
"RTN","IBCNSC3",75,0)
 Q
"RTN","IBCNSC3",76,0)
 ;
"RTN","IBCNSC3",77,0)
BUILD ; -- set list of patients in ^tmp array
"RTN","IBCNSC3",78,0)
 ;
"RTN","IBCNSC3",79,0)
 K ^TMP($J,"IBCNSC2")
"RTN","IBCNSC3",80,0)
 S DFN=0 F  S DFN=$O(^DPT("AB",IBCNS,DFN)) Q:'DFN  D
"RTN","IBCNSC3",81,0)
 .D COV^IBCNSJ(DFN)
"RTN","IBCNSC3",82,0)
 .S X=$$PT^IBEFUNC(DFN),IBNA=$P(X,U,1),IBNO=$P(X,U,2)
"RTN","IBCNSC3",83,0)
 .S:IBNA="" IBNA="<Pt. "_DFN_" Name Missing>"
"RTN","IBCNSC3",84,0)
 .S IBD=0 F  S IBD=$O(^DPT("AB",IBCNS,DFN,IBD)) Q:'IBD  D
"RTN","IBCNSC3",85,0)
 ..;S IBIND=$G(^DPT(DFN,.312,IBD,0))  ;516 - baa
"RTN","IBCNSC3",86,0)
 ..S IBIND=$$ZND^IBCNS1(DFN,IBD)  ;516 - baa
"RTN","IBCNSC3",87,0)
 ..I IBCNS'=$P(+IBIND,U) Q  ;bad x-ref,maybe later take action
"RTN","IBCNSC3",88,0)
 ..D SET
"RTN","IBCNSC3",89,0)
 Q
"RTN","IBCNSC3",90,0)
 ;
"RTN","IBCNSC3",91,0)
SET ; -- store data to be printed in temp array
"RTN","IBCNSC3",92,0)
 ;
"RTN","IBCNSC3",93,0)
 ; ^tmp($j,"ibcnsc2",patient name,dfn,ien of policy) =
"RTN","IBCNSC3",94,0)
 ;    patient id^IR?^effective date^expiration date^subscriber id^whose insurance^employer
"RTN","IBCNSC3",95,0)
 ;
"RTN","IBCNSC3",96,0)
 S IBWI=$P(IBIND,"^",6)
"RTN","IBCNSC3",97,0)
 S VAOA("A")=$S(IBWI="v":5,IBWI="s":6,1:5)
"RTN","IBCNSC3",98,0)
 D OAD^VADPT
"RTN","IBCNSC3",99,0)
 S ^TMP($J,"IBCNSC2",IBNA,DFN,IBD)=IBNO_"^"_$S($$IR^IBCNSJ21(DFN,IBD):"Y",1:"N")_"^"_$P(IBIND,"^",8)_U_$P(IBIND,"^",4)_"^"_$P(IBIND,"^",2)_"^"_IBWI_"^"_VAOA(9)
"RTN","IBCNSC3",100,0)
 Q
"RTN","IBCNSC4")
0^152^B18719019^B18086570
"RTN","IBCNSC4",1,0)
IBCNSC4 ;ALB/TMP - INSURANCE PLAN DETAIL SCREEN UTILITIES ; 09-AUG-94
"RTN","IBCNSC4",2,0)
 ;;2.0;INTEGRATED BILLING;**43,85,103,251,416,497,516**;21-MAR-94;Build 123
"RTN","IBCNSC4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSC4",4,0)
 ;
"RTN","IBCNSC4",5,0)
INIT ; -- Load the plan detail segments
"RTN","IBCNSC4",6,0)
 N IBLCNT
"RTN","IBCNSC4",7,0)
 K ^TMP("IBCNSCP",$J)
"RTN","IBCNSC4",8,0)
 K VALMQUIT
"RTN","IBCNSC4",9,0)
 S VALMBG=1,(IBLCNT,VALMCNT)=0
"RTN","IBCNSC4",10,0)
 D KILL^VALM10()
"RTN","IBCNSC4",11,0)
 ;
"RTN","IBCNSC4",12,0)
 Q:'$G(IBCPOL)
"RTN","IBCNSC4",13,0)
 ;
"RTN","IBCNSC4",14,0)
 S IBCPOLD=$G(^IBA(355.3,IBCPOL,0)),IBCND1=$G(^(1)),$P(IBCDFND,U,18)=IBCPOL
"RTN","IBCNSC4",15,0)
 S IBCPOLD2=$G(^IBA(355.3,IBCPOL,6)) ;; Daou/EEN adding BIN and PCN
"RTN","IBCNSC4",16,0)
 S IBCPOLDL=$G(^IBA(355.3,IBCPOL,2)) ;; Daou/EEN adding BIN and PCN
"RTN","IBCNSC4",17,0)
 D POLICY^IBCNSP0,UR,LIM,AB,VER,COMMENT
"RTN","IBCNSC4",18,0)
 Q
"RTN","IBCNSC4",19,0)
 ;
"RTN","IBCNSC4",20,0)
UR ; -- UR region
"RTN","IBCNSC4",21,0)
 N START,OFFSET
"RTN","IBCNSC4",22,0)
 ; MRD;IB*2.0*516 - Moved the UR section to be on its own lines, no
"RTN","IBCNSC4",23,0)
 ; longer to the right of the Plan Information.
"RTN","IBCNSC4",24,0)
 ;S START=1,OFFSET=43,VALMCNT=+$O(@VALMAR@(""),-1)
"RTN","IBCNSC4",25,0)
 S START=+$O(@VALMAR@(""),-1)+1,OFFSET=2,VALMCNT=+$O(@VALMAR@(""),-1)
"RTN","IBCNSC4",26,0)
 D SET(START,OFFSET," Utilization Review Info ",IORVON,IORVOFF)
"RTN","IBCNSC4",27,0)
 D SET(START+1,OFFSET,"         Require UR: "_$$EXPAND^IBTRE(355.3,.05,$P(IBCPOLD,"^",5)))
"RTN","IBCNSC4",28,0)
 D SET(START+2,OFFSET,"   Require Amb Cert: "_$$EXPAND^IBTRE(355.3,.12,$P(IBCPOLD,"^",12)))
"RTN","IBCNSC4",29,0)
 D SET(START+3,OFFSET,"   Require Pre-Cert: "_$$EXPAND^IBTRE(355.3,.06,$P(IBCPOLD,"^",6)))
"RTN","IBCNSC4",30,0)
 D SET(START+4,OFFSET,"   Exclude Pre-Cond: "_$$EXPAND^IBTRE(355.3,.07,$P(IBCPOLD,"^",7)))
"RTN","IBCNSC4",31,0)
 D SET(START+5,OFFSET,"Benefits Assignable: "_$$EXPAND^IBTRE(355.3,.08,$P(IBCPOLD,"^",8)))
"RTN","IBCNSC4",32,0)
 Q
"RTN","IBCNSC4",33,0)
 ;
"RTN","IBCNSC4",34,0)
LIM ; Plan coverage limitations region
"RTN","IBCNSC4",35,0)
 N START,OFFSET
"RTN","IBCNSC4",36,0)
 S START=+$O(@VALMAR@(""),-1)+$S($P($G(IBCPOLD),U,14)]"":3,1:2),OFFSET=2
"RTN","IBCNSC4",37,0)
 D BLANK(START-1) S VALMCNT=VALMCNT+1
"RTN","IBCNSC4",38,0)
 D LIMBLD^IBCNSC41(START,OFFSET,.IBLCNT)
"RTN","IBCNSC4",39,0)
 Q
"RTN","IBCNSC4",40,0)
 ;
"RTN","IBCNSC4",41,0)
AB ; -- Annual benefit years region
"RTN","IBCNSC4",42,0)
 N OFFSET,START,ADT,Z
"RTN","IBCNSC4",43,0)
 S START=+$O(@VALMAR@(""),-1)+2,OFFSET=2
"RTN","IBCNSC4",44,0)
 D BLANK(START-1) S VALMCNT=VALMCNT+1
"RTN","IBCNSC4",45,0)
 D SET(START,OFFSET," Annual Benefit Dates ",IORVON,IORVOFF)
"RTN","IBCNSC4",46,0)
 I $O(^IBA(355.4,"APY",IBCPOL,""))="" D SET(START+1,OFFSET+2,"No Annual Benefits Information") G ABQ
"RTN","IBCNSC4",47,0)
 S ADT="" F Z=0:1:6 S ADT=$O(^IBA(355.4,"APY",IBCPOL,ADT)) Q:'ADT  D SET(START+1,OFFSET+3+(10*Z),$$DAT1^IBOUTL(-ADT))
"RTN","IBCNSC4",48,0)
 I ADT'="",$O(^IBA(355.4,"APY",IBCPOL,ADT))'="" D SET(START+1,OFFSET+3+(10*(Z+1)),"*More dates on file - use AB to see them")
"RTN","IBCNSC4",49,0)
ABQ Q
"RTN","IBCNSC4",50,0)
 ;
"RTN","IBCNSC4",51,0)
VER ; -- Plan detail User Information Region
"RTN","IBCNSC4",52,0)
 N OFFSET,START
"RTN","IBCNSC4",53,0)
 S START=+$O(@VALMAR@(""),-1)+2,OFFSET=2
"RTN","IBCNSC4",54,0)
 D BLANK(START-1) S VALMCNT=VALMCNT+1
"RTN","IBCNSC4",55,0)
 D SET(START,OFFSET," User Information ",IORVON,IORVOFF)
"RTN","IBCNSC4",56,0)
 I IBCND1="" D SET(START+1,OFFSET,"No User Information") G VERQ
"RTN","IBCNSC4",57,0)
 D SET(START+1,OFFSET,"      Entered By: "_$E($P($G(^VA(200,+$P(IBCND1,"^",2),0)),"^",1),1,20))
"RTN","IBCNSC4",58,0)
 D SET(START+2,OFFSET,"      Entered On: "_$$DAT1^IBOUTL(+IBCND1))
"RTN","IBCNSC4",59,0)
 D SET(START+3,OFFSET," Last Updated By: "_$E($P($G(^VA(200,+$P(IBCND1,"^",6),0)),"^",1),1,20))
"RTN","IBCNSC4",60,0)
 D SET(START+4,OFFSET," Last Updated On: "_$$DAT1^IBOUTL(+$P(IBCND1,"^",5)))
"RTN","IBCNSC4",61,0)
VERQ Q
"RTN","IBCNSC4",62,0)
 ;
"RTN","IBCNSC4",63,0)
COMMENT ; -- Plan detail comment region
"RTN","IBCNSC4",64,0)
 N START,OFFSET,LINE
"RTN","IBCNSC4",65,0)
 S START=+$O(@VALMAR@(""),-1)+2,OFFSET=2,LINE=1
"RTN","IBCNSC4",66,0)
 D BLANK(START-1) S VALMCNT=VALMCNT+1
"RTN","IBCNSC4",67,0)
 D SET(START,OFFSET," Plan Comments ",IORVON,IORVOFF)
"RTN","IBCNSC4",68,0)
 S IBI=0
"RTN","IBCNSC4",69,0)
 F LINE=LINE:1 S IBI=$O(^IBA(355.3,+IBCPOL,11,IBI)) Q:'IBI  D SET(START+LINE,OFFSET,"  "_$E($G(^IBA(355.3,+IBCPOL,11,IBI,0)),1,80))
"RTN","IBCNSC4",70,0)
 D SET(START+LINE,OFFSET,"  ")
"RTN","IBCNSC4",71,0)
 S IBLCNT=$G(IBLCNT)+LINE
"RTN","IBCNSC4",72,0)
 Q
"RTN","IBCNSC4",73,0)
 ;
"RTN","IBCNSC4",74,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSC4",75,0)
 D SET^VALM10(.LINE,$J("",90))
"RTN","IBCNSC4",76,0)
 Q
"RTN","IBCNSC4",77,0)
 ;
"RTN","IBCNSC4",78,0)
SET(LINE,COL,TEXT,ON,OFF) ; -- set display info in array
"RTN","IBCNSC4",79,0)
 I '$D(@VALMAR@(LINE,0)) D BLANK(.LINE) S VALMCNT=$G(VALMCNT)+1
"RTN","IBCNSC4",80,0)
 D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
"RTN","IBCNSC4",81,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBCNSC4",82,0)
 W:'(LINE#5) "."
"RTN","IBCNSC4",83,0)
 Q
"RTN","IBCNSC4",84,0)
 ;
"RTN","IBCNSC4",85,0)
HDR ; Active plan list header
"RTN","IBCNSC4",86,0)
 N IBCNS0,IBLEAD,X,X2
"RTN","IBCNSC4",87,0)
 S IBCNS0=$G(^DIC(36,+IBCNS,0))
"RTN","IBCNSC4",88,0)
 S IBLEAD=$S($G(IBIND):"All ",1:"")_$S($G(IBW):"",1:"Active ")_"Plans for: "_$P(IBCNS0,U)_" Insurance Company"
"RTN","IBCNSC4",89,0)
 S VALMHDR(1)=$$SETSTR^VALM1(IBLEAD,"",1,80)
"RTN","IBCNSC4",90,0)
 S X=$TR($J("",$L(IBLEAD)),""," ")
"RTN","IBCNSC4",91,0)
 S VALMHDR(2)=$$SETSTR^VALM1(X,"",$L(IBLEAD)+1,80)
"RTN","IBCNSC4",92,0)
 S X="#" I $G(IBIND) S X="#  + => Indiv. Plan"
"RTN","IBCNSC4",93,0)
 I $G(IBW) S X=$E(X_$J("",23),1,23)_"* => Inactive Plan"
"RTN","IBCNSC4",94,0)
 S VALMHDR(3)=$$SETSTR^VALM1("Pre-  Pre-  Ben",X,64,17)
"RTN","IBCNSC4",95,0)
 Q
"RTN","IBCNSC4",96,0)
 ;
"RTN","IBCNSGE")
0^33^B98010090^B103633903
"RTN","IBCNSGE",1,0)
IBCNSGE ;ALB/ESG - Insurance Company EDI Parameter Report ;07-JAN-2005
"RTN","IBCNSGE",2,0)
 ;;2.0;INTEGRATED BILLING;**296,400,521,516**;21-MAR-94;Build 123
"RTN","IBCNSGE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSGE",4,0)
 ;
"RTN","IBCNSGE",5,0)
 ; eClaims Plus
"RTN","IBCNSGE",6,0)
 ; Identify insurance companies and display EDI parameter information.
"RTN","IBCNSGE",7,0)
 ;
"RTN","IBCNSGE",8,0)
 ;
"RTN","IBCNSGE",9,0)
EN ; Entry Point
"RTN","IBCNSGE",10,0)
 NEW IBRINS,IBRBID,IBRINS1,IBRINS2,IBRSORT,STOP
"RTN","IBCNSGE",11,0)
 D SELECT I STOP G EXIT
"RTN","IBCNSGE",12,0)
 D SORT I STOP G EXIT
"RTN","IBCNSGE",13,0)
 D DEVICE
"RTN","IBCNSGE",14,0)
EXIT ;
"RTN","IBCNSGE",15,0)
 Q
"RTN","IBCNSGE",16,0)
 ;
"RTN","IBCNSGE",17,0)
SELECT ; Select insurance companies to include on the report
"RTN","IBCNSGE",18,0)
 NEW DIR,DIC,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,IBQ
"RTN","IBCNSGE",19,0)
SEL1 ;
"RTN","IBCNSGE",20,0)
 S STOP=0,IBQ=0
"RTN","IBCNSGE",21,0)
 W @IOF
"RTN","IBCNSGE",22,0)
 W !!?21,"Insurance Company EDI Parameter Report"
"RTN","IBCNSGE",23,0)
 W !!?5,"This report will display the EDI parameter information for selected"
"RTN","IBCNSGE",24,0)
 W !?5,"insurance companies.  You can specify one company, multiple companies,"
"RTN","IBCNSGE",25,0)
 W !?5,"a range of company names, or all companies on file."
"RTN","IBCNSGE",26,0)
 ;
"RTN","IBCNSGE",27,0)
 S DIR(0)="SO^A:Include All Insurance Companies;S:Select Specific Insurance Companies;R:Specify a Range of Insurance Company Names"
"RTN","IBCNSGE",28,0)
 S DIR("A")="     Method for selecting insurance companies"
"RTN","IBCNSGE",29,0)
 S DIR("B")="A"
"RTN","IBCNSGE",30,0)
 S DIR("?",1)="Enter a code from the list.  This defines how you want to select insurance"
"RTN","IBCNSGE",31,0)
 S DIR("?",2)="companies for this report."
"RTN","IBCNSGE",32,0)
 S DIR("?",3)=""
"RTN","IBCNSGE",33,0)
 S DIR("?",4)="If you choose 'A', then all active companies will be included."
"RTN","IBCNSGE",34,0)
 S DIR("?",5)="If you choose 'S', then one or more specific companies can be selected."
"RTN","IBCNSGE",35,0)
 S DIR("?")="If you choose 'R', then you can enter a range of company names."
"RTN","IBCNSGE",36,0)
 D ^DIR K DIR
"RTN","IBCNSGE",37,0)
 I $D(DIRUT) S STOP=1 G SELX
"RTN","IBCNSGE",38,0)
 S IBRINS=Y
"RTN","IBCNSGE",39,0)
 I '$F(".A.S.R.","."_IBRINS_".") S STOP=1 G SELX
"RTN","IBCNSGE",40,0)
 I IBRINS="S" D MULT I IBQ G SEL1      ; choose one or many
"RTN","IBCNSGE",41,0)
 I IBRINS="R" D RANGE I IBQ G SEL1     ; choose a range
"RTN","IBCNSGE",42,0)
 ;
"RTN","IBCNSGE",43,0)
 W !
"RTN","IBCNSGE",44,0)
 S DIR(0)="YO"
"RTN","IBCNSGE",45,0)
 S DIR("A",1)="Only include Insurance Companies with Electronic"
"RTN","IBCNSGE",46,0)
 S DIR("A")="             Bill ID's that are blank or contain ""PRNT"""
"RTN","IBCNSGE",47,0)
 S DIR("B")="NO"
"RTN","IBCNSGE",48,0)
 S DIR("?",1)="Enter either 'Y' or 'N'.  If you choose 'Y', then this will limit the selection"
"RTN","IBCNSGE",49,0)
 S DIR("?",2)="of insurance companies.  Only those companies in which the Inst ID or the Prof"
"RTN","IBCNSGE",50,0)
 S DIR("?",3)="ID is either blank or contains ""PRNT"" (uppercase or lowercase)"
"RTN","IBCNSGE",51,0)
 S DIR("?")="will be included."
"RTN","IBCNSGE",52,0)
 D ^DIR K DIR
"RTN","IBCNSGE",53,0)
 I $D(DIRUT) S STOP=1 G SELX
"RTN","IBCNSGE",54,0)
 S IBRBID=Y
"RTN","IBCNSGE",55,0)
SELX ;
"RTN","IBCNSGE",56,0)
 Q
"RTN","IBCNSGE",57,0)
 ;
"RTN","IBCNSGE",58,0)
MULT ; select one or many insurance companies
"RTN","IBCNSGE",59,0)
 NEW DIC,X,Y
"RTN","IBCNSGE",60,0)
 K IBRINS S IBRINS="S"
"RTN","IBCNSGE",61,0)
 F  D  Q:Y'>0
"RTN","IBCNSGE",62,0)
 . W ! S DIC("A")="Insurance Company: "
"RTN","IBCNSGE",63,0)
 . S DIC("S")="I $$ACTIVE^IBCNEUT4(Y)"    ; screen out Inactives
"RTN","IBCNSGE",64,0)
 . S DIC=36,DIC(0)="AEQM" D ^DIC
"RTN","IBCNSGE",65,0)
 . Q:Y'>0
"RTN","IBCNSGE",66,0)
 . S IBRINS(+Y)=$P($G(^DIC(36,+Y,0)),U,1)
"RTN","IBCNSGE",67,0)
 . Q
"RTN","IBCNSGE",68,0)
 I $O(IBRINS(""))="" S IBQ=1 G MULTX   ; none selected
"RTN","IBCNSGE",69,0)
MULTX ;
"RTN","IBCNSGE",70,0)
 Q
"RTN","IBCNSGE",71,0)
 ;
"RTN","IBCNSGE",72,0)
RANGE ; select a range of insurance company names
"RTN","IBCNSGE",73,0)
 K IBRINS1,IBRINS2
"RTN","IBCNSGE",74,0)
 W !
"RTN","IBCNSGE",75,0)
 S DIR(0)="FO",DIR("A")="Start with Insurance Company"
"RTN","IBCNSGE",76,0)
 S DIR("?",1)="This response can be free text."
"RTN","IBCNSGE",77,0)
 S DIR("?",2)="Responses are case sensitive."
"RTN","IBCNSGE",78,0)
 S DIR("?")="Example: To find CIGNA, type CIGNA not cigna or Cigna."
"RTN","IBCNSGE",79,0)
 S DIR("B")="First" D ^DIR K DIR
"RTN","IBCNSGE",80,0)
 I $D(DIRUT) S IBQ=1 G RANGEX
"RTN","IBCNSGE",81,0)
 S IBRINS1=Y
"RTN","IBCNSGE",82,0)
 I IBRINS1="First" S IBRINS1=" "
"RTN","IBCNSGE",83,0)
 ;
"RTN","IBCNSGE",84,0)
 W !
"RTN","IBCNSGE",85,0)
 S DIR(0)="FO",DIR("A")="Go to Insurance Company"
"RTN","IBCNSGE",86,0)
 S DIR("?",1)="This response can be free text."
"RTN","IBCNSGE",87,0)
 S DIR("?",2)="Responses are case sensitive."
"RTN","IBCNSGE",88,0)
 S DIR("?")="Example: To find CIGNA, type CIGNA not cigna or Cigna."
"RTN","IBCNSGE",89,0)
 S DIR("B")="Last" D ^DIR K DIR
"RTN","IBCNSGE",90,0)
 I $D(DIRUT) S IBQ=1 G RANGEX
"RTN","IBCNSGE",91,0)
 S IBRINS2=Y
"RTN","IBCNSGE",92,0)
 I IBRINS2="Last" S IBRINS2="~~~~~"
"RTN","IBCNSGE",93,0)
 ;
"RTN","IBCNSGE",94,0)
 I IBRINS1=" ",IBRINS2="~~~~~" D  G RANGEX
"RTN","IBCNSGE",95,0)
 . K IBRINS,IBRINS1,IBRINS2
"RTN","IBCNSGE",96,0)
 . S IBRINS="A"
"RTN","IBCNSGE",97,0)
 . Q
"RTN","IBCNSGE",98,0)
 ;
"RTN","IBCNSGE",99,0)
 I IBRINS1]IBRINS2 D  G RANGE
"RTN","IBCNSGE",100,0)
 . W !!?5,"Sorry ..... Ending name must come after Starting name"
"RTN","IBCNSGE",101,0)
 . W !!?5,"Please try again",*7
"RTN","IBCNSGE",102,0)
 . Q
"RTN","IBCNSGE",103,0)
 ;
"RTN","IBCNSGE",104,0)
RANGEX ;
"RTN","IBCNSGE",105,0)
 Q
"RTN","IBCNSGE",106,0)
 ;
"RTN","IBCNSGE",107,0)
SORT ; Choose the sorting method
"RTN","IBCNSGE",108,0)
 ; MRD;IB*2.0*516 - Removed sort option 6, Use VAMC as Billing Provider.
"RTN","IBCNSGE",109,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCNSGE",110,0)
 W !!?5,"*** Sort Criteria ***"
"RTN","IBCNSGE",111,0)
 ;S DIR(0)="SO^1:Insurance Company Name;2:Prof Electronic Bill ID;3:Inst Electronic Bill ID;4:Electronic Type;5:Type Of Coverage;6:Use VAMC as Billing Provider"
"RTN","IBCNSGE",112,0)
 S DIR(0)="SO^1:Insurance Company Name;2:Prof Electronic Bill ID;3:Inst Electronic Bill ID;4:Electronic Type;5:Type Of Coverage"
"RTN","IBCNSGE",113,0)
 S DIR("A")="Sort By",DIR("B")=1
"RTN","IBCNSGE",114,0)
 D ^DIR K DIR
"RTN","IBCNSGE",115,0)
 I $D(DIRUT) S STOP=1 G SORTX
"RTN","IBCNSGE",116,0)
 S IBRSORT=Y
"RTN","IBCNSGE",117,0)
SORTX ;
"RTN","IBCNSGE",118,0)
 Q
"RTN","IBCNSGE",119,0)
 ;
"RTN","IBCNSGE",120,0)
COMPILE ; Entry point for task; compile scratch global, print, clean-up
"RTN","IBCNSGE",121,0)
 ;
"RTN","IBCNSGE",122,0)
 NEW RTN,INSIEN,INSNM,DATA,ADDR,EDI,PROFID,INSTID,NAME,STREET,CITY
"RTN","IBCNSGE",123,0)
 NEW STATE,TYPCOV,TRANS,INSTYP,SORT,TMP,IBHPID
"RTN","IBCNSGE",124,0)
 ;
"RTN","IBCNSGE",125,0)
 S RTN="IBCNSGE"
"RTN","IBCNSGE",126,0)
 KILL ^TMP($J,RTN)   ; init
"RTN","IBCNSGE",127,0)
 ;
"RTN","IBCNSGE",128,0)
 ; all insurances
"RTN","IBCNSGE",129,0)
 I IBRINS="A" D
"RTN","IBCNSGE",130,0)
 . S INSIEN=0
"RTN","IBCNSGE",131,0)
 . F  S INSIEN=$O(^DIC(36,INSIEN)) Q:'INSIEN  D CALC(INSIEN)
"RTN","IBCNSGE",132,0)
 . Q
"RTN","IBCNSGE",133,0)
 ;
"RTN","IBCNSGE",134,0)
 ; specific insurances
"RTN","IBCNSGE",135,0)
 I IBRINS="S" D
"RTN","IBCNSGE",136,0)
 . S INSIEN=0
"RTN","IBCNSGE",137,0)
 . F  S INSIEN=$O(IBRINS(INSIEN)) Q:'INSIEN  D CALC(INSIEN)
"RTN","IBCNSGE",138,0)
 . Q
"RTN","IBCNSGE",139,0)
 ;
"RTN","IBCNSGE",140,0)
 ; a range of insurances
"RTN","IBCNSGE",141,0)
 I IBRINS="R" D
"RTN","IBCNSGE",142,0)
 . S INSNM=$O(^DIC(36,"B",IBRINS1),-1)
"RTN","IBCNSGE",143,0)
 . F  S INSNM=$O(^DIC(36,"B",INSNM)) Q:INSNM=""  Q:INSNM]IBRINS2  D
"RTN","IBCNSGE",144,0)
 .. S INSIEN=0
"RTN","IBCNSGE",145,0)
 .. F  S INSIEN=$O(^DIC(36,"B",INSNM,INSIEN)) Q:'INSIEN  D CALC(INSIEN)
"RTN","IBCNSGE",146,0)
 .. Q
"RTN","IBCNSGE",147,0)
 . Q
"RTN","IBCNSGE",148,0)
 ;
"RTN","IBCNSGE",149,0)
 D PRINT                           ; print the report
"RTN","IBCNSGE",150,0)
 D ^%ZISC                          ; close the device
"RTN","IBCNSGE",151,0)
 KILL ^TMP($J,RTN)                 ; kill scratch global
"RTN","IBCNSGE",152,0)
 I $D(ZTQUEUED) S ZTREQ="@"        ; purge the task record
"RTN","IBCNSGE",153,0)
COMPX ;
"RTN","IBCNSGE",154,0)
 Q
"RTN","IBCNSGE",155,0)
 ;
"RTN","IBCNSGE",156,0)
CALC(INS) ; extract insurance data for company ien=INS
"RTN","IBCNSGE",157,0)
 ;
"RTN","IBCNSGE",158,0)
 I '$$ACTIVE^IBCNEUT4(INS) G CALCX      ; not active
"RTN","IBCNSGE",159,0)
 S DATA=$G(^DIC(36,INS,0))
"RTN","IBCNSGE",160,0)
 S ADDR=$G(^DIC(36,INS,.11))
"RTN","IBCNSGE",161,0)
 S EDI=$G(^DIC(36,INS,3))
"RTN","IBCNSGE",162,0)
 ; MRD;IB*2.0*516 - Removed logic pertaining to using VAMC as billing provider.
"RTN","IBCNSGE",163,0)
 ;S FLG=$G(^DIC(36,INS,4))
"RTN","IBCNSGE",164,0)
 ;S FLGP=+$P(FLG,U,11)      ; prof switchback flag
"RTN","IBCNSGE",165,0)
 ;S FLGI=+$P(FLG,U,12)      ; inst switchback flag
"RTN","IBCNSGE",166,0)
 S PROFID=$P(EDI,U,2)
"RTN","IBCNSGE",167,0)
 S INSTID=$P(EDI,U,4)
"RTN","IBCNSGE",168,0)
 ; MRD;IB*2.0*516 - Added HPID/OEID.
"RTN","IBCNSGE",169,0)
 S IBHPID=$$HPD^IBCNHUT1(INS,1)
"RTN","IBCNSGE",170,0)
 ;
"RTN","IBCNSGE",171,0)
 I IBRBID,PROFID'="",INSTID'="",$$UP^XLFSTR(PROFID)'["PRNT",$$UP^XLFSTR(INSTID)'["PRNT" G CALCX
"RTN","IBCNSGE",172,0)
 ;
"RTN","IBCNSGE",173,0)
 S NAME=$P(DATA,U,1) S:NAME="" NAME="~UNK"
"RTN","IBCNSGE",174,0)
 S STREET=$P(ADDR,U,1)
"RTN","IBCNSGE",175,0)
 S CITY=$P(ADDR,U,4)
"RTN","IBCNSGE",176,0)
 S STATE=+$P(ADDR,U,5)
"RTN","IBCNSGE",177,0)
 S STATE=$S(STATE:$P($G(^DIC(5,STATE,0)),U,2),1:"")
"RTN","IBCNSGE",178,0)
 S TYPCOV=$$EXTERNAL^DILFD(36,.13,,$P(DATA,U,13))
"RTN","IBCNSGE",179,0)
 S TRANS=$$EXTERNAL^DILFD(36,3.01,,$P(EDI,U,1))
"RTN","IBCNSGE",180,0)
 S INSTYP=$$EXTERNAL^DILFD(36,3.09,,$P(EDI,U,9))
"RTN","IBCNSGE",181,0)
 ; MRD;IB*2.0*516 - Removed logic pertaining to using VAMC as billing provider.
"RTN","IBCNSGE",182,0)
 ;S SWBCK="~"     ; default no switchback flags set; sort these at the end
"RTN","IBCNSGE",183,0)
 ;I FLGP,FLGI S SWBCK="BOTH"
"RTN","IBCNSGE",184,0)
 ;I FLGP,'FLGI S SWBCK="PROF"
"RTN","IBCNSGE",185,0)
 ;I 'FLGP,FLGI S SWBCK="INST"
"RTN","IBCNSGE",186,0)
 ;
"RTN","IBCNSGE",187,0)
 S SORT=" "
"RTN","IBCNSGE",188,0)
 I IBRSORT=1,NAME'="" S SORT=" "_NAME
"RTN","IBCNSGE",189,0)
 I IBRSORT=2,PROFID'="" S SORT=" "_PROFID
"RTN","IBCNSGE",190,0)
 I IBRSORT=3,INSTID'="" S SORT=" "_INSTID
"RTN","IBCNSGE",191,0)
 I IBRSORT=4,INSTYP'="" S SORT=" "_INSTYP
"RTN","IBCNSGE",192,0)
 I IBRSORT=5,TYPCOV'="" S SORT=" "_TYPCOV
"RTN","IBCNSGE",193,0)
 ; MRD;IB*2.0*516 - Removed logic pertaining to using VAMC as billing provider.
"RTN","IBCNSGE",194,0)
 ;I IBRSORT=6,SWBCK'="" S SORT=" "_SWBCK
"RTN","IBCNSGE",195,0)
 ;
"RTN","IBCNSGE",196,0)
 ;S TMP=NAME_U_STREET_U_CITY_U_STATE_U_INSTYP_U_TYPCOV_U_TRANS_U_INSTID_U_PROFID_U_SWBCK
"RTN","IBCNSGE",197,0)
 S TMP=NAME_U_STREET_U_CITY_U_STATE_U_INSTYP_U_TYPCOV_U_TRANS_U_INSTID_U_PROFID_U_IBHPID
"RTN","IBCNSGE",198,0)
 S ^TMP($J,RTN,SORT,NAME,INS)=TMP
"RTN","IBCNSGE",199,0)
CALCX ;
"RTN","IBCNSGE",200,0)
 Q
"RTN","IBCNSGE",201,0)
 ;
"RTN","IBCNSGE",202,0)
PRINT ; print the report to the specified device
"RTN","IBCNSGE",203,0)
 NEW MAXCNT,CRT,PAGECNT,STOP,SORT,NAME,INS,DATA,DIR,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCNSGE",204,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCNSGE",205,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNSGE",206,0)
 S PAGECNT=0,STOP=0
"RTN","IBCNSGE",207,0)
 ;
"RTN","IBCNSGE",208,0)
 I '$D(^TMP($J,RTN)) D HEADER W !!!?5,"No Data Found"
"RTN","IBCNSGE",209,0)
 ;
"RTN","IBCNSGE",210,0)
 ; IB*2.0*521 add validated HPID to report and adjust Electronic type display
"RTN","IBCNSGE",211,0)
 ; MRD;IB*2.0*516 - Removed Bill Prov column, lengthened Electronic
"RTN","IBCNSGE",212,0)
 ; Type and Coverage Type.
"RTN","IBCNSGE",213,0)
 ;
"RTN","IBCNSGE",214,0)
 S SORT=""
"RTN","IBCNSGE",215,0)
 F  S SORT=$O(^TMP($J,RTN,SORT)) Q:SORT=""  D  Q:STOP
"RTN","IBCNSGE",216,0)
 . S NAME=""
"RTN","IBCNSGE",217,0)
 . F  S NAME=$O(^TMP($J,RTN,SORT,NAME)) Q:NAME=""  D  Q:STOP
"RTN","IBCNSGE",218,0)
 .. S INS=0
"RTN","IBCNSGE",219,0)
 .. F  S INS=$O(^TMP($J,RTN,SORT,NAME,INS)) Q:'INS  D  Q:STOP
"RTN","IBCNSGE",220,0)
 ... S DATA=$G(^TMP($J,RTN,SORT,NAME,INS))
"RTN","IBCNSGE",221,0)
 ... I $P(DATA,U,10)["~" S $P(DATA,U,10)=""
"RTN","IBCNSGE",222,0)
 ... I $Y+1>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCNSGE",223,0)
 ... W !,$E($P(DATA,U,1),1,25)       ; name
"RTN","IBCNSGE",224,0)
 ... W ?27,$E($P(DATA,U,2),1,19)     ; address1
"RTN","IBCNSGE",225,0)
 ... W ?47,$E($P(DATA,U,3),1,13)     ; city, st
"RTN","IBCNSGE",226,0)
 ... I $P(DATA,U,3)'="",$P(DATA,U,4)'="" W ","
"RTN","IBCNSGE",227,0)
 ... W $E($P(DATA,U,4),1,2)
"RTN","IBCNSGE",228,0)
 ... W ?65,$E($P(DATA,U,7),1,8)      ; transmit elec
"RTN","IBCNSGE",229,0)
 ... W ?75,$E($P(DATA,U,8),1,8)      ; inst payer id
"RTN","IBCNSGE",230,0)
 ... W ?84,$E($P(DATA,U,9),1,8)      ; prof payer id
"RTN","IBCNSGE",231,0)
 ... W ?93,$E($P(DATA,U,10),1,11)    ; HPID/OEID
"RTN","IBCNSGE",232,0)
 ... ;W ?94,$E($P(DATA,U,5),1,12)     ; ins type
"RTN","IBCNSGE",233,0)
 ... ;W ?108,$E($P(DATA,U,6),1,18)    ; type of cov
"RTN","IBCNSGE",234,0)
 ... W ?105,$S($E($P(DATA,U,5))="G":"GROUP PLAN",1:$E($P(DATA,U,5),1,10))  ; ins type
"RTN","IBCNSGE",235,0)
 ... W ?116,$E($P(DATA,U,6),1,16)    ; type of cov
"RTN","IBCNSGE",236,0)
 ... ;W ?128,$E($P(DATA,U,10),1,4)    ; switchback flag
"RTN","IBCNSGE",237,0)
 ... Q
"RTN","IBCNSGE",238,0)
 .. Q
"RTN","IBCNSGE",239,0)
 . Q
"RTN","IBCNSGE",240,0)
 ;
"RTN","IBCNSGE",241,0)
 I STOP G PRINTX
"RTN","IBCNSGE",242,0)
 W !!?5,"*** End of Report ***"
"RTN","IBCNSGE",243,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNSGE",244,0)
PRINTX ;
"RTN","IBCNSGE",245,0)
 Q
"RTN","IBCNSGE",246,0)
 ;
"RTN","IBCNSGE",247,0)
HEADER ; page break and report header information
"RTN","IBCNSGE",248,0)
 NEW LIN,HDR,TAB,C1,C2
"RTN","IBCNSGE",249,0)
 S STOP=0
"RTN","IBCNSGE",250,0)
 I CRT,PAGECNT>0,'$D(ZTQUEUED) D  I STOP G HEADX
"RTN","IBCNSGE",251,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNSGE",252,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNSGE",253,0)
 . I 'Y S STOP=1 Q
"RTN","IBCNSGE",254,0)
 . Q
"RTN","IBCNSGE",255,0)
 ;
"RTN","IBCNSGE",256,0)
 S PAGECNT=PAGECNT+1
"RTN","IBCNSGE",257,0)
 W @IOF,!
"RTN","IBCNSGE",258,0)
 ;
"RTN","IBCNSGE",259,0)
 I IBRINS="A" W "All Companies"
"RTN","IBCNSGE",260,0)
 I IBRINS="S" W "Selected Companies"
"RTN","IBCNSGE",261,0)
 I IBRINS="R" D    ; range description
"RTN","IBCNSGE",262,0)
 . S C1=IBRINS1 I C1=" " S C1="First"
"RTN","IBCNSGE",263,0)
 . S C2=IBRINS2 I C2="~~~~~" S C2="Last"
"RTN","IBCNSGE",264,0)
 . W "Companies [",C1,"] through [",C2,"]"
"RTN","IBCNSGE",265,0)
 . Q
"RTN","IBCNSGE",266,0)
 ;
"RTN","IBCNSGE",267,0)
 W ?45,"  Insurance Company EDI Parameter Report"
"RTN","IBCNSGE",268,0)
 S HDR="Page: "_PAGECNT,TAB=132-$L(HDR)-1
"RTN","IBCNSGE",269,0)
 W ?TAB,HDR
"RTN","IBCNSGE",270,0)
 ;
"RTN","IBCNSGE",271,0)
 W !,"Sorted By "
"RTN","IBCNSGE",272,0)
 I IBRSORT=1 W "Ins Company Name"
"RTN","IBCNSGE",273,0)
 I IBRSORT=2 W "Prof ID"
"RTN","IBCNSGE",274,0)
 I IBRSORT=3 W "Inst ID"
"RTN","IBCNSGE",275,0)
 I IBRSORT=4 W "Electronic Type"
"RTN","IBCNSGE",276,0)
 I IBRSORT=5 W "Type of Coverage"
"RTN","IBCNSGE",277,0)
 ;I IBRSORT=6 W "Use VAMC as Billing Provider"  ; MRD;IB*2.0*516
"RTN","IBCNSGE",278,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,"1Z"),TAB=132-$L(HDR)-1
"RTN","IBCNSGE",279,0)
 W ?TAB,HDR
"RTN","IBCNSGE",280,0)
 ;
"RTN","IBCNSGE",281,0)
 ; IB*2.0*521 add validated HPID to report
"RTN","IBCNSGE",282,0)
 ; MRD;IB*2.0*516 - Removed Bill Prov column, lengthened Electronic
"RTN","IBCNSGE",283,0)
 ; Type and Coverage Type.
"RTN","IBCNSGE",284,0)
 ;
"RTN","IBCNSGE",285,0)
 ;W !,"Only Blank or 'PRNT' Bill ID's = ",$S(IBRBID:"YES",1:"NO"),?128,"VAMC"
"RTN","IBCNSGE",286,0)
 W !,"Only Blank or 'PRNT' Bill ID's = ",$S(IBRBID:"YES",1:"NO")
"RTN","IBCNSGE",287,0)
 W !,"'*' indicates the HPID/OEID failed validation checks"
"RTN","IBCNSGE",288,0)
 ;W !?65,"Electron",?75,"Inst",?84,"Prof",?94,"Electronic",?128,"Bill" ; Removed by 521.
"RTN","IBCNSGE",289,0)
 ;W !?65,"Electron",?75,"Inst",?84,"Prof",?93,"HPID/",?102,"Electronic",?128,"Bill" ; Removed by 516.
"RTN","IBCNSGE",290,0)
 W !?65,"Electron",?75,"Inst",?84,"Prof",?93,"HPID/",?105,"Electronic"
"RTN","IBCNSGE",291,0)
 W !,"Insurance Company Name",?27,"Street Address",?47,"City"
"RTN","IBCNSGE",292,0)
 ;W ?65,"Transmit",?76,"ID",?85,"ID",?97,"Type",?108,"Type of Coverage",?128,"Prov" ; Removed by 521.
"RTN","IBCNSGE",293,0)
 ;W ?65,"Transmit",?76,"ID",?85,"ID",?93,"OEID",?105,"Type",?113,"Coverage Type",?128,"Prov" ; Removed by 516.
"RTN","IBCNSGE",294,0)
 W ?65,"Transmit",?76,"ID",?85,"ID",?93,"OEID",?105,"Type",?116,"Coverage Type"
"RTN","IBCNSGE",295,0)
 W !,$$RJ^XLFSTR("",132,"=")
"RTN","IBCNSGE",296,0)
 ;
"RTN","IBCNSGE",297,0)
 ; check for a stop request
"RTN","IBCNSGE",298,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HEADX
"RTN","IBCNSGE",299,0)
 . S (ZTSTOP,STOP)=1
"RTN","IBCNSGE",300,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","IBCNSGE",301,0)
 . Q
"RTN","IBCNSGE",302,0)
HEADX ;
"RTN","IBCNSGE",303,0)
 Q
"RTN","IBCNSGE",304,0)
 ;
"RTN","IBCNSGE",305,0)
DEVICE ; Device selection before compile
"RTN","IBCNSGE",306,0)
 NEW ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCNSGE",307,0)
 W !!!,"This report is 132 columns wide.  Please choose an appropriate device.",!
"RTN","IBCNSGE",308,0)
 S ZTRTN="COMPILE^IBCNSGE"
"RTN","IBCNSGE",309,0)
 S ZTDESC="Insurance Company EDI Parameter Report"
"RTN","IBCNSGE",310,0)
 S ZTSAVE("IBRINS")=""
"RTN","IBCNSGE",311,0)
 S ZTSAVE("IBRBID")=""
"RTN","IBCNSGE",312,0)
 S ZTSAVE("IBRINS1")=""
"RTN","IBCNSGE",313,0)
 S ZTSAVE("IBRINS2")=""
"RTN","IBCNSGE",314,0)
 S ZTSAVE("IBRSORT")=""
"RTN","IBCNSGE",315,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM")
"RTN","IBCNSGE",316,0)
DEVX ;
"RTN","IBCNSGE",317,0)
 Q
"RTN","IBCNSGE",318,0)
 ;
"RTN","IBCNSGM")
0^34^B42739860^B42642306
"RTN","IBCNSGM",1,0)
IBCNSGM ;ALB/ESG - Insurance Company Billing Provider Flag Rpt/Msg ;06-APR-2009
"RTN","IBCNSGM",2,0)
 ;;2.0;INTEGRATED BILLING;**400,516**;21-MAR-94;Build 123
"RTN","IBCNSGM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSGM",4,0)
 ;
"RTN","IBCNSGM",5,0)
EN ; entry point also from the top
"RTN","IBCNSGM",6,0)
 I '$$PROD^XUPROD(1) G EX     ; production account only
"RTN","IBCNSGM",7,0)
 D COMPILE
"RTN","IBCNSGM",8,0)
 D EMAIL
"RTN","IBCNSGM",9,0)
EX ;
"RTN","IBCNSGM",10,0)
 Q
"RTN","IBCNSGM",11,0)
 ;
"RTN","IBCNSGM",12,0)
COMPILE ; Build a sorted scratch global of payers in switchback mode
"RTN","IBCNSGM",13,0)
 N IEN,Z,FLGP,FLGI,DATA,ADDR,EDI,PROFID,INSTID,NAME,STREET,CITY,STATE,TRANS,SWBCK,TMP
"RTN","IBCNSGM",14,0)
 K ^TMP($J,"IBCNSGM")
"RTN","IBCNSGM",15,0)
 S IEN=0 F  S IEN=$O(^DIC(36,IEN)) Q:'IEN  D
"RTN","IBCNSGM",16,0)
 . I '$$ACTIVE^IBCNEUT4(IEN) Q     ; skip inactive insurance companies
"RTN","IBCNSGM",17,0)
 . S Z=$G(^DIC(36,IEN,4))
"RTN","IBCNSGM",18,0)
 . S FLGP=+$P(Z,U,11)              ; prof switchback flag
"RTN","IBCNSGM",19,0)
 . S FLGI=+$P(Z,U,12)              ; inst switchback flag
"RTN","IBCNSGM",20,0)
 . I 'FLGP,'FLGI Q                 ; both switchback flags are off
"RTN","IBCNSGM",21,0)
 . S DATA=$G(^DIC(36,IEN,0))
"RTN","IBCNSGM",22,0)
 . S ADDR=$G(^DIC(36,IEN,.11))
"RTN","IBCNSGM",23,0)
 . S EDI=$G(^DIC(36,IEN,3))
"RTN","IBCNSGM",24,0)
 . S PROFID=$P(EDI,U,2)
"RTN","IBCNSGM",25,0)
 . S INSTID=$P(EDI,U,4)
"RTN","IBCNSGM",26,0)
 . S NAME=$P(DATA,U,1) S:NAME="" NAME="~UNK"
"RTN","IBCNSGM",27,0)
 . S STREET=$P(ADDR,U,1)
"RTN","IBCNSGM",28,0)
 . S CITY=$P(ADDR,U,4)
"RTN","IBCNSGM",29,0)
 . S STATE=+$P(ADDR,U,5)
"RTN","IBCNSGM",30,0)
 . S STATE=$S(STATE:$P($G(^DIC(5,STATE,0)),U,2),1:"")
"RTN","IBCNSGM",31,0)
 . S TRANS=$$EXTERNAL^DILFD(36,3.01,,$P(EDI,U,1))
"RTN","IBCNSGM",32,0)
 . S SWBCK=""
"RTN","IBCNSGM",33,0)
 . I FLGP,FLGI S SWBCK="BOTH"
"RTN","IBCNSGM",34,0)
 . I FLGP,'FLGI S SWBCK="PROF"
"RTN","IBCNSGM",35,0)
 . I 'FLGP,FLGI S SWBCK="INST"
"RTN","IBCNSGM",36,0)
 . ;
"RTN","IBCNSGM",37,0)
 . S TMP=STREET_U_CITY_U_STATE_U_SWBCK_U_TRANS_U_INSTID_U_PROFID
"RTN","IBCNSGM",38,0)
 . S ^TMP($J,"IBCNSGM",1,NAME,IEN)=TMP
"RTN","IBCNSGM",39,0)
 . S ^TMP($J,"IBCNSGM",1)=$G(^TMP($J,"IBCNSGM",1))+1
"RTN","IBCNSGM",40,0)
 . Q
"RTN","IBCNSGM",41,0)
COMPX ;
"RTN","IBCNSGM",42,0)
 Q
"RTN","IBCNSGM",43,0)
 ;
"RTN","IBCNSGM",44,0)
EMAIL ; Construct the subject and text of the message and send it
"RTN","IBCNSGM",45,0)
 N MSG,LN,SITE,ZNP,XMSUBJ,XMTO,NM,IEN,TMP,DISP,CITY,SUBJ,GLO,GLB,KEY,IBX,XMINSTR
"RTN","IBCNSGM",46,0)
 S SITE=$$SITE^VASITE
"RTN","IBCNSGM",47,0)
 S ZNP=+$G(^TMP($J,"IBCNSGM",1))
"RTN","IBCNSGM",48,0)
 S XMSUBJ="Switchback Mode - "_$P(SITE,U,3)_" - "_ZNP_" Payer"_$S(ZNP=1:"",1:"s")_" - "_$P(SITE,U,2)
"RTN","IBCNSGM",49,0)
 S XMSUBJ=$E(XMSUBJ,1,65)
"RTN","IBCNSGM",50,0)
 S MSG=$NA(^TMP($J,"IBCNSGM",2))
"RTN","IBCNSGM",51,0)
 K @MSG
"RTN","IBCNSGM",52,0)
 S LN=0
"RTN","IBCNSGM",53,0)
 S LN=LN+1,@MSG@(LN)="This report shows VistA insurance companies which are in IB patch 400 switchback mode for the following site."
"RTN","IBCNSGM",54,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",55,0)
 S LN=LN+1,@MSG@(LN)="        Name: "_$P(SITE,U,2)
"RTN","IBCNSGM",56,0)
 S LN=LN+1,@MSG@(LN)="    Station#: "_$P(SITE,U,3)
"RTN","IBCNSGM",57,0)
 S LN=LN+1,@MSG@(LN)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","IBCNSGM",58,0)
 S LN=LN+1,@MSG@(LN)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"5ZPM")
"RTN","IBCNSGM",59,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",60,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",61,0)
 S LN=LN+1,@MSG@(LN)="Insurance                Street                                Switch  Electron  Inst     Prof"
"RTN","IBCNSGM",62,0)
 S LN=LN+1,@MSG@(LN)="Company Name             Address            City                Back   Transmit   ID       ID"
"RTN","IBCNSGM",63,0)
 S LN=LN+1,@MSG@(LN)="---------------------------------------------------------------------------------------------------"
"RTN","IBCNSGM",64,0)
 ;
"RTN","IBCNSGM",65,0)
 S NM="" F  S NM=$O(^TMP($J,"IBCNSGM",1,NM)) Q:NM=""  S IEN=0 F  S IEN=$O(^TMP($J,"IBCNSGM",1,NM,IEN)) Q:'IEN  D
"RTN","IBCNSGM",66,0)
 . S TMP=$G(^TMP($J,"IBCNSGM",1,NM,IEN))
"RTN","IBCNSGM",67,0)
 . S DISP=$$FO^IBCNEUT1(NM,24)_" "                       ; ins co name
"RTN","IBCNSGM",68,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,1),18)_" "         ; street address
"RTN","IBCNSGM",69,0)
 . S CITY=$E($P(TMP,U,2),1,16)
"RTN","IBCNSGM",70,0)
 . I CITY'="",$P(TMP,U,3)'="" S CITY=CITY_","
"RTN","IBCNSGM",71,0)
 . S CITY=CITY_$P(TMP,U,3)
"RTN","IBCNSGM",72,0)
 . S DISP=DISP_$$FO^IBCNEUT1(CITY,19)_" "                ; city, state
"RTN","IBCNSGM",73,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,4),4)_"   "        ; switchback flag value
"RTN","IBCNSGM",74,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,5),8)_"  "         ; electronic transmit flag
"RTN","IBCNSGM",75,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,6),8)_" "          ; inst payer ID
"RTN","IBCNSGM",76,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,7),8)              ; prof payer ID
"RTN","IBCNSGM",77,0)
 . S LN=LN+1,@MSG@(LN)=DISP
"RTN","IBCNSGM",78,0)
 . Q
"RTN","IBCNSGM",79,0)
 ;
"RTN","IBCNSGM",80,0)
 I 'ZNP D
"RTN","IBCNSGM",81,0)
 . S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",82,0)
 . S LN=LN+1,@MSG@(LN)="        No Data Found"
"RTN","IBCNSGM",83,0)
 . Q
"RTN","IBCNSGM",84,0)
 ;
"RTN","IBCNSGM",85,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",86,0)
 S LN=LN+1,@MSG@(LN)="Total number of companies in switchback mode: "_ZNP
"RTN","IBCNSGM",87,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",88,0)
 S LN=LN+1,@MSG@(LN)="*** End of Report ***"
"RTN","IBCNSGM",89,0)
 ;
"RTN","IBCNSGM",90,0)
 ; display taskman schedule information for server request
"RTN","IBCNSGM",91,0)
 I $G(IBSNDRSQ)'="" D
"RTN","IBCNSGM",92,0)
 . N OPTNM,IBZ,T
"RTN","IBCNSGM",93,0)
 . S OPTNM="IBCN INS BILL PROV FLAG RPT"
"RTN","IBCNSGM",94,0)
 . D OPTSTAT^XUTMOPT(OPTNM,.IBZ)
"RTN","IBCNSGM",95,0)
 . S T=$G(IBZ(1))
"RTN","IBCNSGM",96,0)
 . S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",97,0)
 . S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",98,0)
 . S LN=LN+1,@MSG@(LN)="TaskManager Schedule Report for server request"
"RTN","IBCNSGM",99,0)
 . S LN=LN+1,@MSG@(LN)="----------------------------------------------"
"RTN","IBCNSGM",100,0)
 . S LN=LN+1,@MSG@(LN)="           Option: "_OPTNM
"RTN","IBCNSGM",101,0)
 . S LN=LN+1,@MSG@(LN)="      Task Number: "_$P(T,U,1)
"RTN","IBCNSGM",102,0)
 . S LN=LN+1,@MSG@(LN)="    Queued to Run: "_$$FMTE^XLFDT($P(T,U,2),"5ZPM")
"RTN","IBCNSGM",103,0)
 . S LN=LN+1,@MSG@(LN)="Rescheduling Freq: "_$P(T,U,3)
"RTN","IBCNSGM",104,0)
 . Q
"RTN","IBCNSGM",105,0)
 ;
"RTN","IBCNSGM",106,0)
 ; Address the message
"RTN","IBCNSGM",107,0)
 I $G(IBSNDRSQ)="" S XMTO("vhacoebilpm@domain.ext")=""
"RTN","IBCNSGM",108,0)
 I $G(IBSNDRSQ)'="" S XMTO(IBSNDRSQ)=""
"RTN","IBCNSGM",109,0)
 ;
"RTN","IBCNSGM",110,0)
 S XMINSTR("FROM")="VistA-eBilling"
"RTN","IBCNSGM",111,0)
 ;
"RTN","IBCNSGM",112,0)
 D SENDMSG^XMXAPI(DUZ,XMSUBJ,MSG,.XMTO,.XMINSTR)
"RTN","IBCNSGM",113,0)
 K ^TMP($J,"IBCNSGM")                ; clean-up scratch global
"RTN","IBCNSGM",114,0)
 I '$D(^TMP("XMERR",$J)) G EMAILX    ; no email problems so get out
"RTN","IBCNSGM",115,0)
 ;
"RTN","IBCNSGM",116,0)
 S SUBJ="IB*2*400 - MailMan Error - Ins Co Billing Provider Flag Rpt/Msg"
"RTN","IBCNSGM",117,0)
 K MSG S LN=0
"RTN","IBCNSGM",118,0)
 S LN=LN+1,MSG(LN)="MailMan reported the following error(s) when attempting to send the"
"RTN","IBCNSGM",119,0)
 S LN=LN+1,MSG(LN)="Insurance Company Billing Provider Flag Report."
"RTN","IBCNSGM",120,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBCNSGM",121,0)
 S (GLO,GLB)="^TMP(""XMERR"","_$J
"RTN","IBCNSGM",122,0)
 S GLO=GLO_")"
"RTN","IBCNSGM",123,0)
 F  S GLO=$Q(@GLO) Q:GLO'[GLB  S LN=LN+1,MSG(LN)="   "_GLO_" = "_$G(@GLO)
"RTN","IBCNSGM",124,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBCNSGM",125,0)
 S LN=LN+1,MSG(LN)="This report should be automatically run on a regular schedule through"
"RTN","IBCNSGM",126,0)
 S LN=LN+1,MSG(LN)="TaskManager.  The VistA option name is IBCN INS BILL PROV FLAG RPT."
"RTN","IBCNSGM",127,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBCNSGM",128,0)
 S LN=LN+1,MSG(LN)="Please correct the MailMan problem and re-run this report.  If you"
"RTN","IBCNSGM",129,0)
 S LN=LN+1,MSG(LN)="need help, please enter a Remedy ticket or call the help desk at"
"RTN","IBCNSGM",130,0)
 S LN=LN+1,MSG(LN)="1-888-596-4357."
"RTN","IBCNSGM",131,0)
 ;
"RTN","IBCNSGM",132,0)
 K XMTO,XMINSTR
"RTN","IBCNSGM",133,0)
 S XMTO(DUZ)=""
"RTN","IBCNSGM",134,0)
 S XMINSTR("FROM")="VistA routine IBCNSGM"
"RTN","IBCNSGM",135,0)
 ;
"RTN","IBCNSGM",136,0)
 ; send this local msg to holders of these security keys so they can fix the problems (IA# 10076)
"RTN","IBCNSGM",137,0)
 F KEY="XUMGR","XUPROG" S IBX=0 F  S IBX=$O(^XUSEC(KEY,IBX)) Q:'IBX  S XMTO(IBX)=""
"RTN","IBCNSGM",138,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO,.XMINSTR)
"RTN","IBCNSGM",139,0)
 K MSG
"RTN","IBCNSGM",140,0)
 ;
"RTN","IBCNSGM",141,0)
EMAILX ;
"RTN","IBCNSGM",142,0)
 Q
"RTN","IBCNSGM",143,0)
 ;
"RTN","IBCNSGM",144,0)
SRV ; server entry point
"RTN","IBCNSGM",145,0)
 ; send the report and the TaskManager schedule at the site back to the sender of the server request
"RTN","IBCNSGM",146,0)
 ;IB*2.0*516/TAZ - This is an inbound server request. It cannot be removed.
"RTN","IBCNSGM",147,0)
 G SRVX
"RTN","IBCNSGM",148,0)
 N MMHD,IBSNDRSQ
"RTN","IBCNSGM",149,0)
 I '$G(XMZ) G SRVX                      ; only for processing incoming server requests
"RTN","IBCNSGM",150,0)
 S MMHD=$$NET^XMRENT(XMZ)               ; mailman header information
"RTN","IBCNSGM",151,0)
 S IBSNDRSQ=$TR($P(MMHD,U,3),"<>")      ; sender of server request
"RTN","IBCNSGM",152,0)
 D EN                                   ; send message
"RTN","IBCNSGM",153,0)
 D ZAPSERV^XMXAPI("S.IBCNSRVBP",XMZ)    ; delete msg from server basket
"RTN","IBCNSGM",154,0)
SRVX ;
"RTN","IBCNSGM",155,0)
 Q
"RTN","IBCNSGM",156,0)
 ;
"RTN","IBCNSJ14")
0^156^B9400113^B9289898
"RTN","IBCNSJ14",1,0)
IBCNSJ14 ;ALB/CPM - INACTIVATE AN INSURANCE PLAN (CON'T) ; 07-MAR-95
"RTN","IBCNSJ14",2,0)
 ;;2.0;INTEGRATED BILLING;**28,516**;21-MAR-94;Build 123
"RTN","IBCNSJ14",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSJ14",4,0)
 ;
"RTN","IBCNSJ14",5,0)
SEL ; Select a company and plan.
"RTN","IBCNSJ14",6,0)
 ;   Required variable input:
"RTN","IBCNSJ14",7,0)
 ;           IBCNS  --  Pointer to the current company in file #36
"RTN","IBCNSJ14",8,0)
 ;   Variable output:
"RTN","IBCNSJ14",9,0)
 ;          IBPLAN  --  Pointer to the selected plan in file #355.3
"RTN","IBCNSJ14",10,0)
 ;          IBQUIT  --  Set to 1 if user wants to quit.
"RTN","IBCNSJ14",11,0)
 ;
"RTN","IBCNSJ14",12,0)
 ; - does the user want to switch companies?
"RTN","IBCNSJ14",13,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Inactivate another plan offered by the same company",DIR("?")="To inactivate another plan from this company, answer 'YES.'  To switch companies, answer 'NO.'"
"RTN","IBCNSJ14",14,0)
 D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 G SELQ
"RTN","IBCNSJ14",15,0)
 ;
"RTN","IBCNSJ14",16,0)
SEL4 ; - this entry point is supported for a call from IBCNSJ4.
"RTN","IBCNSJ14",17,0)
 ;     Input:  IBINACTM  --  [optional]: set to 1 if entry is from
"RTN","IBCNSJ14",18,0)
 ;                           IBCNSJ4 (the multiple plan inactivator).
"RTN","IBCNSJ14",19,0)
 ;                           If entry is from IBCNSJ4, inactive plans
"RTN","IBCNSJ14",20,0)
 ;                           may not be selected.
"RTN","IBCNSJ14",21,0)
 ;                    Y  --  must be set to 0 when called by IBCNSJ4.
"RTN","IBCNSJ14",22,0)
 ;
"RTN","IBCNSJ14",23,0)
 I 'Y D  I IBQUIT G SELQ
"RTN","IBCNSJ14",24,0)
 .S DIC(0)="QEAMZ",DIC="^DIC(36,",DIC("S")="I $$ANYGP^IBCNSJ(+Y,0,1)"
"RTN","IBCNSJ14",25,0)
 .S DIC("A")="Select PLAN COMPANY: "
"RTN","IBCNSJ14",26,0)
 .D ^DIC K DIC S IBCNS=+Y I Y<0 S IBQUIT=1
"RTN","IBCNSJ14",27,0)
 ;
"RTN","IBCNSJ14",28,0)
 ; - see if user wants to directly select the plan
"RTN","IBCNSJ14",29,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you wish to directly enter this plan"
"RTN","IBCNSJ14",30,0)
 S DIR("?")="The look-up facility to select "_$S($G(IBINACTM):"an active",1:"a")_" group plan has been enhanced to use the List Manager.  Enter 'NO' if you wish to select a plan from this look-up, or 'YES' to directly enter the plan."
"RTN","IBCNSJ14",31,0)
 D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 G SELQ
"RTN","IBCNSJ14",32,0)
 ;
"RTN","IBCNSJ14",33,0)
 ; - invoke the plan look-up
"RTN","IBCNSJ14",34,0)
 I 'Y D  G SELQ
"RTN","IBCNSJ14",35,0)
 .W "   ..." S IBPLAN=0 D LKP^IBCNSU2(IBCNS,0,0,.IBPLAN,0,'$G(IBINACTM))
"RTN","IBCNSJ14",36,0)
 .I 'IBPLAN W !!,"No plan selected!",! S IBQUIT=1
"RTN","IBCNSJ14",37,0)
 ;
"RTN","IBCNSJ14",38,0)
 ; - allow a FileMan look-up
"RTN","IBCNSJ14",39,0)
 ; MRD;IB*2.0*516 - Display new Group Name and Number fields.
"RTN","IBCNSJ14",40,0)
 S DIC("A")="Select "_$S($G(IBINACTM):"an Active",1:"a")_" GROUP PLAN: "
"RTN","IBCNSJ14",41,0)
 S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I +^(0)=IBCNS,$P(^(0),U,2)"
"RTN","IBCNSJ14",42,0)
 ;S DIC("W")="N IBX S IBX=$G(^(0)) W ""   Name: "",$E($S($P(IBX,U,3)]"""":$P(IBX,U,3),1:""<none>"")_$J("""",20),1,20),""   Number: "",$S($P(IBX,U,4)]"""":$P(IBX,U,4),1:""<none>"")"
"RTN","IBCNSJ14",43,0)
 S DIC("W")="N IBX S IBX=$G(^(2)) W ""   Name: "",$E($S($P(IBX,U,1)]"""":$P(IBX,U,1),1:""<none>"")_$J("""",20),1,20),""   Number: "",$E($S($P(IBX,U,2)]"""":$P(IBX,U,2),1:""<none>""),1,14)"
"RTN","IBCNSJ14",44,0)
 I $G(IBINACTM) S DIC("S")=DIC("S")_",'$P(^(0),U,11)"
"RTN","IBCNSJ14",45,0)
 D ^DIC K DIC S IBPLAN=+Y I Y<0 S IBQUIT=1
"RTN","IBCNSJ14",46,0)
 ;
"RTN","IBCNSJ14",47,0)
SELQ K DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCNSJ14",48,0)
 Q
"RTN","IBCNSJ2")
0^73^B22855491^B21486680
"RTN","IBCNSJ2",1,0)
IBCNSJ2 ;ALB/CPM - CHANGE POLICY PLAN ; 03-JAN-95
"RTN","IBCNSJ2",2,0)
 ;;2.0;INTEGRATED BILLING;**28,516**;21-MAR-94;Build 123
"RTN","IBCNSJ2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSJ2",4,0)
 ;
"RTN","IBCNSJ2",5,0)
CSTP ; 'Change Policy Plan' Action
"RTN","IBCNSJ2",6,0)
 ;   Required variable input:
"RTN","IBCNSJ2",7,0)
 ;             DFN  --  Pointer to the patient in file #2
"RTN","IBCNSJ2",8,0)
 ;          IBPPOL  --  Patient insurance policy definition
"RTN","IBCNSJ2",9,0)
 ;
"RTN","IBCNSJ2",10,0)
 N DA,DIK,IBCDFN,IBCPOL,IBNEWP,IBX,IBPLAN,IBPLAND,X
"RTN","IBCNSJ2",11,0)
 N IBCNS,IBALR,IBMERGE,IBIP,IBBU,IBAB,IBMRGN,IBMRGF,IBX
"RTN","IBCNSJ2",12,0)
 S IBCDFN=$P($G(IBPPOL),"^",4)
"RTN","IBCNSJ2",13,0)
 I '$G(DFN)!'IBCDFN G CSTPQ
"RTN","IBCNSJ2",14,0)
 D FULL^VALM1
"RTN","IBCNSJ2",15,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) W !!,"Sorry, but you do not have the required privileges to change the policy plan." G CSTPQ
"RTN","IBCNSJ2",16,0)
 ;
"RTN","IBCNSJ2",17,0)
 ;IB*2.0*516/TAZ - Use HIPAA Compliant fields
"RTN","IBCNSJ2",18,0)
 S X=$G(^DPT(DFN,.312,IBCDFN,0)) I 'X W !!,"This policy is not valid!" G CSTPQ
"RTN","IBCNSJ2",19,0)
 ;S IBCNS=+X,IBPLAN=+$P(X,"^",18),IBPLAND=$G(^IBA(355.3,IBPLAN,0))  ;516 - baa
"RTN","IBCNSJ2",20,0)
 ;I 'IBPLAN D NOPL G CSTPQ
"RTN","IBCNSJ2",21,0)
 S IBCNS=+X,IBPLAN=+$P(X,"^",18) I 'IBPLAN D NOPL G CSTPQ
"RTN","IBCNSJ2",22,0)
 ;Insert HIPAA compliant fields into the original data string.
"RTN","IBCNSJ2",23,0)
 S IBPLAND=$G(^IBA(355.3,IBPLAN,0)),$P(IBPLAND,U,3)=$$GET1^DIQ(355.3,IBPLAN_",",2.01),$P(IBPLAND,U,4)=$$GET1^DIQ(355.3,IBPLAN_",",2.02)
"RTN","IBCNSJ2",24,0)
 I 'IBPLAND W !!,"This plan has no company!  Please contact your IRM for assistance." G CSTPQ
"RTN","IBCNSJ2",25,0)
 I IBCNS'=+IBPLAND D PLAN^IBCNSM32(DFN,IBCDFN,+IBPLAND) G CSTPQ
"RTN","IBCNSJ2",26,0)
 ;
"RTN","IBCNSJ2",27,0)
 ; - introduction
"RTN","IBCNSJ2",28,0)
 W !!,"This action will allow you to change the insurance plan to which the"
"RTN","IBCNSJ2",29,0)
 W !,"veteran is subscribing through this policy."
"RTN","IBCNSJ2",30,0)
 W !!,$S($P(IBPLAND,"^",2):"Group",1:"Individual")," Plan Number: ",$S($P(IBPLAND,"^",4)]"":$P(IBPLAND,"^",4),1:"<not specified>"),?50,"Plan Name: ",$S($P(IBPLAND,"^",3)]"":$P(IBPLAND,"^",3),1:"<not specified>"),!
"RTN","IBCNSJ2",31,0)
 D NOTES^IBCNSJ21
"RTN","IBCNSJ2",32,0)
 ;
"RTN","IBCNSJ2",33,0)
 ; - select or add a new plan for the policy
"RTN","IBCNSJ2",34,0)
 D GETPL^IBCNSJ12
"RTN","IBCNSJ2",35,0)
 I 'IBCPOL W !,"Can't change subscribed-to plan..." G CSTPQ
"RTN","IBCNSJ2",36,0)
 ;
"RTN","IBCNSJ2",37,0)
 ; - last few notes
"RTN","IBCNSJ2",38,0)
 I IBIP W !,*7," *** Please note that this Individual Plan will be deleted if you select",!,"     to switch plans associated with this policy."
"RTN","IBCNSJ2",39,0)
 I '$O(IBBU(0)) G OK
"RTN","IBCNSJ2",40,0)
 W !,*7,"This patient has Benefits Used associated with his current plan and policy!"
"RTN","IBCNSJ2",41,0)
 D AB^IBCNSJ21 I '$O(IBAB(0)) W !,"The newly proposed subscribed-to plan has no associated Annual Benefits,",!,"so the Benefits Used associated with the current plan will be deleted!" G OK
"RTN","IBCNSJ2",42,0)
 ;
"RTN","IBCNSJ2",43,0)
 ; - display mergeable benefits used
"RTN","IBCNSJ2",44,0)
 D DMBU^IBCNSJ21
"RTN","IBCNSJ2",45,0)
 W !!,"Please note that ",$S('$O(IBMRGF(0)):"no",$G(IBMRGN):"some",1:"all")," Benefits Used are transferable."
"RTN","IBCNSJ2",46,0)
 I $G(IBMRGN) W !,$S('$O(IBMRGF(0)):"All Benefits Used",1:"Note that those Benefits Used which cannot be merged")," will be deleted!"
"RTN","IBCNSJ2",47,0)
 I '$O(IBMRGF(0)) G OK
"RTN","IBCNSJ2",48,0)
 ;
"RTN","IBCNSJ2",49,0)
 ; - merge or delete previous benefits used?
"RTN","IBCNSJ2",50,0)
 S DIR(0)="Y",DIR("A")="Do you want to merge the transferable Benefits Used",DIR("?")="^D HLMT^IBCNSJ11"
"RTN","IBCNSJ2",51,0)
 W ! D ^DIR K DIR I $D(DIRUT) D DELP^IBCNSJ11 G CSTPQ
"RTN","IBCNSJ2",52,0)
 S IBMERGE=Y
"RTN","IBCNSJ2",53,0)
 W !,$S(IBMERGE:"The transferable",1:"All")," Benefits Used will be ",$S(IBMERGE:"merged.",1:"deleted.")
"RTN","IBCNSJ2",54,0)
 ;
"RTN","IBCNSJ2",55,0)
OK ; - okay to switch subscribed-to plan?
"RTN","IBCNSJ2",56,0)
 S DIR(0)="Y",DIR("A")="Okay to change the subscribed-to plan",DIR("?")="^D HLSW^IBCNSJ21"
"RTN","IBCNSJ2",57,0)
 W ! D ^DIR K DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","IBCNSJ2",58,0)
 I 'Y W !!,"The subscribed-to plan for this policy was not changed.",! D DELP^IBCNSJ11 G CSTPQ
"RTN","IBCNSJ2",59,0)
 ;
"RTN","IBCNSJ2",60,0)
 ; - change plan in policy; adjust 'covered by insurance' field
"RTN","IBCNSJ2",61,0)
 W !!,"Changing the subscribed-to plan... " D SWPL^IBCNSJ13(IBCPOL,DFN,IBCDFN) W "done."
"RTN","IBCNSJ2",62,0)
 ;
"RTN","IBCNSJ2",63,0)
 ; - merge/delete benefits used, if necessary
"RTN","IBCNSJ2",64,0)
 D MD^IBCNSJ21
"RTN","IBCNSJ2",65,0)
 ;
"RTN","IBCNSJ2",66,0)
 ; - delete the previous individual plan, if necessary
"RTN","IBCNSJ2",67,0)
 I IBIP W !,"Deleting the formerly subscribed-to Individual Plan... " D DEL^IBCNSJ(IBPLAN) W "done." G CSTPQ
"RTN","IBCNSJ2",68,0)
 ;
"RTN","IBCNSJ2",69,0)
 ; - if plan no longer has subscribers, say so.
"RTN","IBCNSJ2",70,0)
 I '$$SUBS^IBCNSJ(IBCNS,IBPLAN,1) W !!,"There are no longer any subscribers to the previous plan.  You may wish",!,"to inactivate or delete this plan using the 'Inactivate Plan' action."
"RTN","IBCNSJ2",71,0)
 ;
"RTN","IBCNSJ2",72,0)
CSTPQ D PAUSE^VALM1
"RTN","IBCNSJ2",73,0)
 D HDR^IBCNSP,BLD^IBCNSP S VALMBCK="R"
"RTN","IBCNSJ2",74,0)
 Q
"RTN","IBCNSJ2",75,0)
 ;
"RTN","IBCNSJ2",76,0)
NOPL ; Display message if there is no insurance plan.
"RTN","IBCNSJ2",77,0)
 W !!,"There is no plan associated with this policy!"
"RTN","IBCNSJ2",78,0)
 W !!,"Please use the action 'Change Plan Info', which will create a plan"
"RTN","IBCNSJ2",79,0)
 W !,"for the policy."
"RTN","IBCNSJ2",80,0)
 Q
"RTN","IBCNSJ4")
0^74^B30114071^B28671454
"RTN","IBCNSJ4",1,0)
IBCNSJ4 ;ALB/CPM - INACTIVATE MULTIPLE INSURANCE PLANS ; 20-MAR-95
"RTN","IBCNSJ4",2,0)
 ;;2.0;INTEGRATED BILLING;**28,62,516**;21-MAR-94;Build 123
"RTN","IBCNSJ4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSJ4",4,0)
 ;
"RTN","IBCNSJ4",5,0)
EN ; Inactivate/Delete Multiple Plans
"RTN","IBCNSJ4",6,0)
 N DFN,IBAB,IBSEL,IBCDFN,IBSUB,IBBUM,IBBUD,IBBUMC
"RTN","IBCNSJ4",7,0)
 N IBCPOL,IBDAT,IBDATP,IBCDFN1,IBBU,IBABDAT,IBINACTM,Y
"RTN","IBCNSJ4",8,0)
 W !!,"This process will allow you to transfer subscribers from many insurance"
"RTN","IBCNSJ4",9,0)
 W !,"plans into one 'master' plan.  After the subscribers from each selected"
"RTN","IBCNSJ4",10,0)
 W !,"plan are transferred to the master plan, the selected plan will be deleted"
"RTN","IBCNSJ4",11,0)
 W !,"from your system."
"RTN","IBCNSJ4",12,0)
 W !!,"You should be very careful when you use this tool."
"RTN","IBCNSJ4",13,0)
 W !!,"You must first select the master plan into which you will transfer all"
"RTN","IBCNSJ4",14,0)
 W !,"selected plan subscribers.  This plan must be an active group plan.",!
"RTN","IBCNSJ4",15,0)
 ;
"RTN","IBCNSJ4",16,0)
 ; - select/display the master plan
"RTN","IBCNSJ4",17,0)
 S Y=0,IBINACTM=1 D SEL4^IBCNSJ14 G:IBQUIT ENQ
"RTN","IBCNSJ4",18,0)
 ;IB*2.0*516/TAZ - Use HIPAA compliant fields.
"RTN","IBCNSJ4",19,0)
 ;S IBPLAND=$G(^IBA(355.3,IBPLAN,0)) D MSTR  ; Patch 516 - baa
"RTN","IBCNSJ4",20,0)
 S IBPLAND=$G(^IBA(355.3,IBPLAN,0))
"RTN","IBCNSJ4",21,0)
 S $P(IBPLAND,U,3)=$$GET1^DIQ(355.3,IBPLAN_",",2.01),$P(IBPLAND,U,4)=$$GET1^DIQ(355.3,IBPLAN_",",2.02)
"RTN","IBCNSJ4",22,0)
 D MSTR
"RTN","IBCNSJ4",23,0)
 ;
"RTN","IBCNSJ4",24,0)
 ; - check annual benefits
"RTN","IBCNSJ4",25,0)
 S X="" F  S X=$O(^IBA(355.4,"APY",IBPLAN,X)) Q:X=""  S IBAB(-X)=""
"RTN","IBCNSJ4",26,0)
 I $D(IBAB) W !!,"Annual Benefits have been established for this plan." G CONT
"RTN","IBCNSJ4",27,0)
 S DIR(0)="Y",DIR("A")="This plan has no Annual Benefits on file!  Do you wish to continue"
"RTN","IBCNSJ4",28,0)
 S DIR("?")="If you wish to continue with this processing, enter 'YES.'  Otherwise, enter 'NO.'"
"RTN","IBCNSJ4",29,0)
 W ! D ^DIR K DIR I 'Y K DIRUT,DTOUT,DUOUT,DIROUT G ENQ
"RTN","IBCNSJ4",30,0)
 ;
"RTN","IBCNSJ4",31,0)
CONT ; - explain next step
"RTN","IBCNSJ4",32,0)
 I '$D(IBAB) W !!,*7,"Please note that any Benefits Used on file for subscribers who",!,"will be merged into the master plan will be deleted!"
"RTN","IBCNSJ4",33,0)
 I $D(IBAB) D
"RTN","IBCNSJ4",34,0)
 .W !!,"Any Benefits Used on file for subscribers who will be merged into the"
"RTN","IBCNSJ4",35,0)
 .W !,"master plan will also be merged if the master plan has any Annual Benefits"
"RTN","IBCNSJ4",36,0)
 .W !,"dated in the same year as the Benefits Used.  Please note that the"
"RTN","IBCNSJ4",37,0)
 .W !,"Benefits Used date will be changed to match the date of the Annual Benefit."
"RTN","IBCNSJ4",38,0)
 ;
"RTN","IBCNSJ4",39,0)
 W !!,"You may now select the plans to be merged into the master plan... (type <CR>)"
"RTN","IBCNSJ4",40,0)
 R X:DTIME
"RTN","IBCNSJ4",41,0)
 ;
"RTN","IBCNSJ4",42,0)
 ; - allow multiple plans to be selected
"RTN","IBCNSJ4",43,0)
 K ^TMP($J,"IBSEL") W !,"  ....hmmm..." D LKP^IBCNSU2(IBCNS,1,1,.IBSEL,0,1) I '$O(^TMP($J,"IBSEL",0)) W !!,"No plans were selected!" G ENQ
"RTN","IBCNSJ4",44,0)
 D MSTR S (X,Y)=0 F  S X=$O(^TMP($J,"IBSEL",X)) Q:'X  I X'=IBPLAN S Y=Y+1
"RTN","IBCNSJ4",45,0)
 W !!,"There ",$S(Y=1:"was ",1:"were "),$S(Y:Y,1:"no")," plan",$E("s",Y'=1)," selected to be merged into the master plan."
"RTN","IBCNSJ4",46,0)
 G:'Y ENQ
"RTN","IBCNSJ4",47,0)
 ;
"RTN","IBCNSJ4",48,0)
 ; - okay to go?
"RTN","IBCNSJ4",49,0)
 S DIR(0)="Y",DIR("A")="Okay to merge th"_$S(Y=1:"is",1:"ese")_" plan"_$S(Y=1:"",1:"s")_" into the master plan"
"RTN","IBCNSJ4",50,0)
 S DIR("?")="If you wish to merge the selected plans into the master plan, enter 'YES.'  Otherwise, enter 'NO.'"
"RTN","IBCNSJ4",51,0)
 W ! D ^DIR K DIR I 'Y K DIRUT,DTOUT,DUOUT,DIROUT G ENQ
"RTN","IBCNSJ4",52,0)
 ;
"RTN","IBCNSJ4",53,0)
 W !!,"Merging each selected plan into the master plan...",!
"RTN","IBCNSJ4",54,0)
 S (IBSUB,IBBUD,IBBUM,IBBUMC)=0
"RTN","IBCNSJ4",55,0)
 S IBCPOL=0 F  S IBCPOL=$O(^TMP($J,"IBSEL",IBCPOL)) Q:'IBCPOL  I IBCPOL'=IBPLAN D
"RTN","IBCNSJ4",56,0)
 .W "." K ^TMP($J,"IBSUBS")
"RTN","IBCNSJ4",57,0)
 .S IBSUB=IBSUB+$$SUBS^IBCNSJ(IBCNS,IBCPOL,0,"^TMP($J,""IBSUBS"")")
"RTN","IBCNSJ4",58,0)
 .;
"RTN","IBCNSJ4",59,0)
 .; - move the subscribers and benefits used
"RTN","IBCNSJ4",60,0)
 .S DFN=0 F  S DFN=$O(^TMP($J,"IBSUBS",DFN)) Q:'DFN  D
"RTN","IBCNSJ4",61,0)
 ..S IBCDFN=0 F  S IBCDFN=$O(^TMP($J,"IBSUBS",DFN,IBCDFN)) Q:'IBCDFN  D
"RTN","IBCNSJ4",62,0)
 ...Q:$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)=IBPLAN
"RTN","IBCNSJ4",63,0)
 ...D SWPL^IBCNSJ13(IBPLAN,DFN,IBCDFN)
"RTN","IBCNSJ4",64,0)
 ...;
"RTN","IBCNSJ4",65,0)
 ...; - merge/change/delete previous benefits used
"RTN","IBCNSJ4",66,0)
 ...S IBDAT="" F  S IBDAT=$O(^IBA(355.5,"APPY",DFN,IBCPOL,IBDAT)) Q:IBDAT=""  D
"RTN","IBCNSJ4",67,0)
 ....S IBCDFN1=0 F  S IBCDFN1=$O(^IBA(355.5,"APPY",DFN,IBCPOL,IBDAT,IBCDFN1)) Q:'IBCDFN1  I IBCDFN1=IBCDFN S IBBU=$O(^(IBCDFN1,0)) D
"RTN","IBCNSJ4",68,0)
 .....S IBDATP=-IBDAT,IBABDAT=$O(IBAB($E(IBDATP,1,3)_"0000"))
"RTN","IBCNSJ4",69,0)
 .....I $E(IBABDAT,1,3)'=$E(IBDATP,1,3) S IBBUD=IBBUD+1 D DBU^IBCNSJ(IBBU) Q
"RTN","IBCNSJ4",70,0)
 .....S IBBUM=IBBUM+1 S:IBABDAT'=IBDATP IBBUMC=IBBUMC+1
"RTN","IBCNSJ4",71,0)
 .....D MERG^IBCNSJ13(IBPLAN,IBBU,$S(IBABDAT'=IBDATP:IBABDAT,1:0))
"RTN","IBCNSJ4",72,0)
 .;
"RTN","IBCNSJ4",73,0)
 .; - delete the plan
"RTN","IBCNSJ4",74,0)
 .D DEL^IBCNSJ(IBCPOL)
"RTN","IBCNSJ4",75,0)
 ;
"RTN","IBCNSJ4",76,0)
 W !!,"All selected plans have been deleted."
"RTN","IBCNSJ4",77,0)
 W !,$S(IBSUB:IBSUB,1:"No")," subscriber",$S(IBSUB=1:" was",1:"s were")," transferred to the master plan."
"RTN","IBCNSJ4",78,0)
 W !,$S(IBBUD:IBBUD,1:"No")," Benefits Used record",$S(IBBUD=1:" was",1:"s were")," deleted."
"RTN","IBCNSJ4",79,0)
 W !,$S(IBBUM:IBBUM,1:"No")," Benefits Used record",$S(IBBUM=1:" was",1:"s were")," merged."
"RTN","IBCNSJ4",80,0)
 I IBBUM W "  (",IBBUMC," had the date changed)"
"RTN","IBCNSJ4",81,0)
 ;
"RTN","IBCNSJ4",82,0)
ENQ K ^TMP($J,"IBSUBS"),^("IBSEL")
"RTN","IBCNSJ4",83,0)
 Q
"RTN","IBCNSJ4",84,0)
 ;
"RTN","IBCNSJ4",85,0)
 ;
"RTN","IBCNSJ4",86,0)
MSTR ; Display Master Plan Information
"RTN","IBCNSJ4",87,0)
 W !!?24,"*** M A S T E R  P L A N ***"
"RTN","IBCNSJ4",88,0)
 W !,"Plan Company: ",$P($G(^DIC(36,IBCNS,0)),"^")
"RTN","IBCNSJ4",89,0)
 W !?3,"Plan Name: ",$S($P(IBPLAND,"^",3)]"":$P(IBPLAND,"^",3),1:"<unspecified>")
"RTN","IBCNSJ4",90,0)
 W !," Plan Number: ",$S($P(IBPLAND,"^",4)]"":$P(IBPLAND,"^",4),1:"<unspecified>")
"RTN","IBCNSJ4",91,0)
 Q
"RTN","IBCNSJ4",92,0)
 ;
"RTN","IBCNSJ4",93,0)
 ;
"RTN","IBCNSJ4",94,0)
ASK() ; Does the user wish to inactivate multiple plans?
"RTN","IBCNSJ4",95,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBCNSJ4",96,0)
 S DIR(0)="Y",DIR("A")="Do you wish to delete multiple plans simultaneously"
"RTN","IBCNSJ4",97,0)
 S DIR("?")="If you wish to transfer subscribers from many duplicate plans into a master plan, enter 'YES.'  To inactivate a single plan, enter 'NO.'"
"RTN","IBCNSJ4",98,0)
 W ! D ^DIR
"RTN","IBCNSJ4",99,0)
 Q $S($D(DIRUT)!$D(DUOUT):-1,1:+Y)
"RTN","IBCNSJ5")
0^75^B19961411^B19164548
"RTN","IBCNSJ5",1,0)
IBCNSJ5 ;ALB/TMP - INSURANCE PLAN MAINTENANCE ACTION PROCESSING ; 09-AUG-95
"RTN","IBCNSJ5",2,0)
 ;;2.0;INTEGRATED BILLING;**43,516**;21-MAR-94;Build 123
"RTN","IBCNSJ5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSJ5",4,0)
 ;
"RTN","IBCNSJ5",5,0)
PL ; -- Insurance Company Plan List
"RTN","IBCNSJ5",6,0)
 D FULL^VALM1 W !!
"RTN","IBCNSJ5",7,0)
 N VALMY,VALMHDR,IBIND,IBMULT,IBW,IBSEL
"RTN","IBCNSJ5",8,0)
 S (IBIND,IBMULT)=1,IBW=1,IBSEL=0
"RTN","IBCNSJ5",9,0)
 D EN^VALM("IBCNS PLAN LIST")
"RTN","IBCNSJ5",10,0)
 Q
"RTN","IBCNSJ5",11,0)
 ;
"RTN","IBCNSJ5",12,0)
AB ; -- Edit Annual Benefits from insurance company edit OR plan detail edit
"RTN","IBCNSJ5",13,0)
 I $D(IBCPOL) D FULL^VALM1,EN^VALM("IBCNS ANNUAL BENEFITS") S VALMBCK="R" G ABQ
"RTN","IBCNSJ5",14,0)
 D FULL^VALM1
"RTN","IBCNSJ5",15,0)
 N I,J,IBXX,VALMY,IBCDFN
"RTN","IBCNSJ5",16,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSJ5",17,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSJ5",18,0)
 .N IBCPOL
"RTN","IBCNSJ5",19,0)
 .S IBCPOL=$G(^TMP("IBCNSJ",$J,"IDX",IBXX,+$O(^TMP("IBCNSJ",$J,"IDX",IBXX,0))))
"RTN","IBCNSJ5",20,0)
 .Q:IBCPOL=""
"RTN","IBCNSJ5",21,0)
 .D FULL^VALM1
"RTN","IBCNSJ5",22,0)
 .W !!,"Plan Name: ",$$GET1^DIQ(355.3,IBCPOL,2.01),"   Number: ",$$GET1^DIQ(355.3,IBCPOL,2.02)  ;Get new HIPAA fields - IB*2*516
"RTN","IBCNSJ5",23,0)
 .K IBCDFN
"RTN","IBCNSJ5",24,0)
 .D EN^VALM("IBCNS ANNUAL BENEFITS")
"RTN","IBCNSJ5",25,0)
 .Q
"RTN","IBCNSJ5",26,0)
ABQ I $D(IBCPOL) D INIT^IBCNSC4
"RTN","IBCNSJ5",27,0)
 S VALMBCK=$S($D(IBFASTXT):"Q",1:"R") K IBFASTXT Q
"RTN","IBCNSJ5",28,0)
 ;
"RTN","IBCNSJ5",29,0)
IA ; -- (In)activate plan from insurance company edit OR plan detail edit
"RTN","IBCNSJ5",30,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) W !!,"Sorry, but you do not have the required privileges to inactivate plans." D PAUSE^VALM1 G IAQ
"RTN","IBCNSJ5",31,0)
 D FULL^VALM1
"RTN","IBCNSJ5",32,0)
 I $D(IBCPOL) D INACT^IBCNSJ1(+$P($G(^IBA(355.3,IBCPOL,0)),U),IBCPOL) G IAQ
"RTN","IBCNSJ5",33,0)
 N I,J,IBXX,VALMY,IBCDFN
"RTN","IBCNSJ5",34,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSJ5",35,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSJ5",36,0)
 .N IBCPOL,IBCPND,IBCPND1
"RTN","IBCNSJ5",37,0)
 .S IBCPOL=$G(^TMP("IBCNSJ",$J,"IDX",IBXX,+$O(^TMP("IBCNSJ",$J,"IDX",IBXX,0))))
"RTN","IBCNSJ5",38,0)
 .Q:IBCPOL=""
"RTN","IBCNSJ5",39,0)
 .D FULL^VALM1
"RTN","IBCNSJ5",40,0)
 .S IBCPND=$G(^IBA(355.3,IBCPOL,0))
"RTN","IBCNSJ5",41,0)
 .I '$P(IBCPND,U,2) W !,"You cannot inactivate an individual plan." D PAUSE^VALM1 Q
"RTN","IBCNSJ5",42,0)
 .K IBCDFN
"RTN","IBCNSJ5",43,0)
 .D INACT^IBCNSJ1(+$P($G(^IBA(355.3,IBCPOL,0)),U),IBCPOL),PAUSE^VALM1
"RTN","IBCNSJ5",44,0)
 .S IBCPND1=$G(^IBA(355.3,IBCPOL,0))
"RTN","IBCNSJ5",45,0)
 .I $P(IBCPND1,U,11)'=$P(IBCPND,U,11)!(IBCPND1="") D
"RTN","IBCNSJ5",46,0)
 ..D INIT^IBCNSU2 ;Rebuild list if plan changed or deleted
"RTN","IBCNSJ5",47,0)
 ..N IBCPOLD S IBCPOLD=$G(^IBA(355.3,+$G(IBCPOL),0))
"RTN","IBCNSJ5",48,0)
 ..I IBCPOLD'="" D HDR^IBCNSC41
"RTN","IBCNSJ5",49,0)
IAQ I $G(IBCPOL) D  ;Rebuild header
"RTN","IBCNSJ5",50,0)
 .N IBCPOLD S IBCPOLD=$G(^IBA(355.3,+$G(IBCPOL),0))
"RTN","IBCNSJ5",51,0)
 .I IBCPOLD'="" D HDR^IBCNSC41
"RTN","IBCNSJ5",52,0)
 S VALMBCK="R"
"RTN","IBCNSJ5",53,0)
 Q
"RTN","IBCNSJ5",54,0)
 ;
"RTN","IBCNSJ5",55,0)
VP ; -- Edit/View Plan
"RTN","IBCNSJ5",56,0)
 D FULL^VALM1
"RTN","IBCNSJ5",57,0)
 N IBCND1,IBCDFND,IBCPOL,IBCPOLD,IBXX,VALMY,IBCDFN
"RTN","IBCNSJ5",58,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSJ5",59,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSJ5",60,0)
 .S IBCPOL=$G(^TMP("IBCNSJ",$J,"IDX",IBXX,+$O(^TMP("IBCNSJ",$J,"IDX",IBXX,0))))
"RTN","IBCNSJ5",61,0)
 .Q:IBCPOL=""
"RTN","IBCNSJ5",62,0)
 .D FULL^VALM1
"RTN","IBCNSJ5",63,0)
 .K IBCDFN
"RTN","IBCNSJ5",64,0)
 .D EN^VALM("IBCNS INS CO PLAN DETAIL")
"RTN","IBCNSJ5",65,0)
 .Q
"RTN","IBCNSJ5",66,0)
 I '$D(IBFASTXT) D INIT^IBCNSU2
"RTN","IBCNSJ5",67,0)
 S VALMBCK="R"
"RTN","IBCNSJ5",68,0)
 Q
"RTN","IBCNSJ5",69,0)
 ;
"RTN","IBCNSJ5",70,0)
PC ; Plan comments
"RTN","IBCNSJ5",71,0)
 W !!,"You may now enter comments about this plan."
"RTN","IBCNSJ5",72,0)
 L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G PCQ
"RTN","IBCNSJ5",73,0)
 S DIE="^IBA(355.3,",DA=IBCPOL,DR="11" D ^DIE
"RTN","IBCNSJ5",74,0)
 D INIT^IBCNSC4
"RTN","IBCNSJ5",75,0)
 L -^IBA(355.3,+IBCPOL)
"RTN","IBCNSJ5",76,0)
PCQ S VALMBCK="R" Q
"RTN","IBCNSJ5",77,0)
 ;
"RTN","IBCNSJ5",78,0)
CP ;Change insurance plans
"RTN","IBCNSJ5",79,0)
 D FULL^VALM1
"RTN","IBCNSJ5",80,0)
 S DIR(0)="Y",DIR("A")="Do you want to see the list of plans for this insurance company"
"RTN","IBCNSJ5",81,0)
 S DIR("?")="Enter 'YES' if you want to use the LIST MANAGER lookup facility on the previous screen to select a plan.  Enter 'NO' to select a plan using the standard Fileman lookup."
"RTN","IBCNSJ5",82,0)
 S VALMBCK="R"
"RTN","IBCNSJ5",83,0)
 D ^DIR K DIR I $D(DIRUT) G CPEX
"RTN","IBCNSJ5",84,0)
 I Y S VALMBCK="Q" G CPEX
"RTN","IBCNSJ5",85,0)
 ; MRD;IB*2.0*516 - Display new Group Name and Number fields.
"RTN","IBCNSJ5",86,0)
 S DIC("S")="I $P(^(0),U)=$G(IBCNS)",DIC="^IBA(355.3,",DIC(0)="AEMQ"
"RTN","IBCNSJ5",87,0)
 ;S DIC("W")="N IBX S IBX=$G(^(0)) W ""  Name: "",$E($S($P(IBX,U,3)'="""":$P(IBX,U,3),1:""<none>"")_$J("""",20),1,20),""  Number: "",$S($P(IBX,U,4)'="""":$P(IBX,U,4),1:""<none>"")"
"RTN","IBCNSJ5",88,0)
 S DIC("W")="N IBX,IBX2 S IBX=$G(^(0)),IBX2=$G(^(2)) W ""  Name: "",$E($S($P(IBX2,U,1)'="""":$P(IBX2,U,1),1:""<none>"")_$J("""",20),1,20),""  Number: "",$E($S($P(IBX2,U,2)'="""":$P(IBX2,U,2),1:""<none>""),1,14)"
"RTN","IBCNSJ5",89,0)
 S DIC("W")=DIC("W")_",""  "",$S($P(IBX,U,2):""GROUP"",1:""INDIVIDUAL""),""  "",$S($P(IBX,U,11):""IN"",1:""""),""ACTIVE"""
"RTN","IBCNSJ5",90,0)
 S DIC("A")="Select "_$P($G(^DIC(36,+$G(IBCNS),0)),U)_" PLAN: "
"RTN","IBCNSJ5",91,0)
 D ^DIC K DIC
"RTN","IBCNSJ5",92,0)
 G:Y<0 CPEX S IBCPOL=+Y
"RTN","IBCNSJ5",93,0)
 D INIT^IBCNSC4
"RTN","IBCNSJ5",94,0)
CPEX Q
"RTN","IBCNSJ5",95,0)
 ;
"RTN","IBCNSJ5",96,0)
CV ;Edit coverage limitations from edit patient policy
"RTN","IBCNSJ5",97,0)
 D EDCOV^IBCNSJ51
"RTN","IBCNSJ5",98,0)
 D BLD^IBCNSP
"RTN","IBCNSJ5",99,0)
 Q
"RTN","IBCNSJ5",100,0)
CV1 ;Edit coverage limitations from edit plan
"RTN","IBCNSJ5",101,0)
 D EDCOV^IBCNSJ51
"RTN","IBCNSJ5",102,0)
 D INIT^IBCNSC4
"RTN","IBCNSJ5",103,0)
 Q
"RTN","IBCNSJ5",104,0)
 ;
"RTN","IBCNSM2")
0^76^B21200856^B21029266
"RTN","IBCNSM2",1,0)
IBCNSM2 ;ALB/AAS - INSURANCE MANAGEMENT - EDIT ROUTINE ; 22-OCT-92
"RTN","IBCNSM2",2,0)
 ;;2.0;INTEGRATED BILLING;**28,103,139,516**;21-MAR-94;Build 123
"RTN","IBCNSM2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSM2",4,0)
 ;
"RTN","IBCNSM2",5,0)
% S U="^"
"RTN","IBCNSM2",6,0)
 ;
"RTN","IBCNSM2",7,0)
BU ; -- Enter Edit benefits already used
"RTN","IBCNSM2",8,0)
 D FULL^VALM1
"RTN","IBCNSM2",9,0)
 N I,J,IBXX,VALMY,IBCNS,IBCPOL,IBCDFN
"RTN","IBCNSM2",10,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM2",11,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSM2",12,0)
 .S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM2",13,0)
 .Q:IBPPOL=""
"RTN","IBCNSM2",14,0)
 .S IBCNS=+$P(IBPPOL,"^",5),IBCPOL=+$P(IBPPOL,"^",22),IBCDFN=+$P(IBPPOL,"^",4)
"RTN","IBCNSM2",15,0)
 .D EN^VALM("IBCNS BENEFITS USED BY DATE")
"RTN","IBCNSM2",16,0)
 .Q
"RTN","IBCNSM2",17,0)
 S VALMBCK="R" Q
"RTN","IBCNSM2",18,0)
 ;
"RTN","IBCNSM2",19,0)
EP ; -- Enter Edit Patient Insurance Policy Information
"RTN","IBCNSM2",20,0)
 ;
"RTN","IBCNSM2",21,0)
 S VALMBCK="R" Q
"RTN","IBCNSM2",22,0)
 ;
"RTN","IBCNSM2",23,0)
EI ;  -- Enter Edit Insurance Company Information
"RTN","IBCNSM2",24,0)
 ; -- if coming from benefit screen
"RTN","IBCNSM2",25,0)
 ;    ibcns=insurance co number
"RTN","IBCNSM2",26,0)
 D FULL^VALM1
"RTN","IBCNSM2",27,0)
 I $G(IBCNS)>0 D EN^VALM("IBCNS INSURANCE COMPANY") G EIQ
"RTN","IBCNSM2",28,0)
 ;
"RTN","IBCNSM2",29,0)
 ; -- if coming from list of policies, allow selection
"RTN","IBCNSM2",30,0)
 N I,J,IBXX,IBCNS,VALMY
"RTN","IBCNSM2",31,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM2",32,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSM2",33,0)
 .S I=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM2",34,0)
 .S IBCNS=$P(I,"^",5)
"RTN","IBCNSM2",35,0)
 .D EN^VALM("IBCNS INSURANCE COMPANY")
"RTN","IBCNSM2",36,0)
EIQ S VALMBCK="R" Q
"RTN","IBCNSM2",37,0)
 ;
"RTN","IBCNSM2",38,0)
VC ; -- Verify Insurance Coverage
"RTN","IBCNSM2",39,0)
 D FULL^VALM1
"RTN","IBCNSM2",40,0)
 N I,J,IBXX,VALMY
"RTN","IBCNSM2",41,0)
 ;
"RTN","IBCNSM2",42,0)
 ; -- If no effective policies ask to verify no coverage
"RTN","IBCNSM2",43,0)
 I '$$EPOL(DFN) D VCN G EXIT
"RTN","IBCNSM2",44,0)
 ;
"RTN","IBCNSM2",45,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM2",46,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSM2",47,0)
 .S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM2",48,0)
 .Q:IBPPOL=""  D VFY
"RTN","IBCNSM2",49,0)
 ;
"RTN","IBCNSM2",50,0)
EXIT ; -- Kill variables, refresh screen
"RTN","IBCNSM2",51,0)
 ;
"RTN","IBCNSM2",52,0)
 D BLD^IBCNSM
"RTN","IBCNSM2",53,0)
 K I,J,IBXX,DA,DR,IBDUZZ
"RTN","IBCNSM2",54,0)
 S VALMBCK="R" Q
"RTN","IBCNSM2",55,0)
 ;
"RTN","IBCNSM2",56,0)
VFY ; -- Display most recent verification
"RTN","IBCNSM2",57,0)
 ;
"RTN","IBCNSM2",58,0)
 N DA,DR,IBDUZ,IB0,IBWNR
"RTN","IBCNSM2",59,0)
 D FULL^VALM1
"RTN","IBCNSM2",60,0)
 S IBCH=$P(IBPPOL,U,1)
"RTN","IBCNSM2",61,0)
 S IBWNR=$$GETWNR^IBCNSMM1()
"RTN","IBCNSM2",62,0)
 ;
"RTN","IBCNSM2",63,0)
 ;  -- If Medicare WNR and Name of Insured is different from Pt. Name
"RTN","IBCNSM2",64,0)
 ;     display Warning message.
"RTN","IBCNSM2",65,0)
 ;S IB0=$G(^DPT(DFN,.312,$P(IBPPOL,U,4),0))  ; 516 - baa
"RTN","IBCNSM2",66,0)
 S IB0=$$ZND^IBCNS1(DFN,$P(IBPPOL,U,4))  ; 516 - baa
"RTN","IBCNSM2",67,0)
 I +IBWNR=+IB0 D
"RTN","IBCNSM2",68,0)
 .I $P(IB0,U,17)="" Q
"RTN","IBCNSM2",69,0)
 .I $P(IB0,U,17)=$P($G(^DPT(DFN,0)),U,1) Q
"RTN","IBCNSM2",70,0)
 .W !!,"WARNING: Patient Name: '"_$P($G(^DPT(DFN,0)),U,1)_"'  DOES NOT MATCH"
"RTN","IBCNSM2",71,0)
 .W !,"      Name of Insured: '"_$P(IB0,U,17)_"' for this "_$P(IBWNR,U,2)_" policy."
"RTN","IBCNSM2",72,0)
 ;
"RTN","IBCNSM2",73,0)
 S IBDUZ=$P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,4)
"RTN","IBCNSM2",74,0)
 I 'IBDUZ D REVASK Q
"RTN","IBCNSM2",75,0)
 W !!," "_IBCH_" LAST VERIFIED BY "_$P($G(^VA(200,+IBDUZ,0)),U)_" ON "_$$DAT1^IBOUTL($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3))_". . ."
"RTN","IBCNSM2",76,0)
 I $P($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3),".")=DT W !,"COVERAGE VERIFIED TODAY, "_$$DAT1^IBOUTL(DT) H 3
"RTN","IBCNSM2",77,0)
 E  D REVASK
"RTN","IBCNSM2",78,0)
 Q
"RTN","IBCNSM2",79,0)
 ;
"RTN","IBCNSM2",80,0)
REVASK ; -- Determine whether user wishes to re-verify
"RTN","IBCNSM2",81,0)
 ;
"RTN","IBCNSM2",82,0)
 N Y
"RTN","IBCNSM2",83,0)
 W:'IBDUZ !
"RTN","IBCNSM2",84,0)
 S DIR("B")="No",DIR(0)="YO",DIR("A")=$S('IBDUZ:" "_IBCH_" NEVER PREVIOUSLY VERIFIED.  DO YOU WISH TO VERIFY COVERAGE",1:"ARE YOU RE-VERIFYING COVERAGE TODAY")
"RTN","IBCNSM2",85,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","IBCNSM2",86,0)
 I Y D REVFY
"RTN","IBCNSM2",87,0)
 Q
"RTN","IBCNSM2",88,0)
 ;
"RTN","IBCNSM2",89,0)
REVFY ; -- Re-verify
"RTN","IBCNSM2",90,0)
 ;
"RTN","IBCNSM2",91,0)
 S DA(1)=DFN,DA=$P(IBPPOL,U,4),DIE="^DPT(DFN,.312,",DR="1.03////"_DT_";1.04////"_DUZ D ^DIE K DIE
"RTN","IBCNSM2",92,0)
 S IBDUZ=$P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,4)
"RTN","IBCNSM2",93,0)
 W !," "_IBCH_" VERIFIED BY "_$P($G(^VA(200,+IBDUZ,0)),U)_" ON "_$$DAT1^IBOUTL($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3)) D PAUSE^VALM1
"RTN","IBCNSM2",94,0)
 Q
"RTN","IBCNSM2",95,0)
 ;
"RTN","IBCNSM2",96,0)
VCN ; -- Ask to verifiy patient has no coverage
"RTN","IBCNSM2",97,0)
 ;
"RTN","IBCNSM2",98,0)
 N DA,DLAYGO,DIE,DIR,DR,DIRUT,DUOUT,DIOUT,DTOUT,IBADD,IBEXERR,IBWHER,X,Y
"RTN","IBCNSM2",99,0)
 W !!,?5,"Patient has no effective insurance coverage on file."
"RTN","IBCNSM2",100,0)
 S DIR("B")="No",DIR(0)="Y"
"RTN","IBCNSM2",101,0)
 S DIR("A")=$S(+$G(^IBA(354,DFN,60)):"Re-v",1:"V")_"erify that patient has No Insurance Coverage "
"RTN","IBCNSM2",102,0)
 S DIR("?")="Enter 'Yes' to enter a Verification of No Coverage Date"
"RTN","IBCNSM2",103,0)
 D ^DIR
"RTN","IBCNSM2",104,0)
 I Y D
"RTN","IBCNSM2",105,0)
 .I '$D(^IBA(354,DFN)) D ADDP^IBAUTL6 I '$G(IBADD) W "   <Try again Later>" Q
"RTN","IBCNSM2",106,0)
 .S DA=DFN,DIE="^IBA(354,",DR=60 D ^DIE I $D(Y)=0 N IBX S IBX=$P($G(^DPT(DFN,.31)),"^",11) D
"RTN","IBCNSM2",107,0)
 ..I X]""&(IBX'="N") S IBX="N",$P(^DPT(DFN,.31),"^",11)="N" D MSG
"RTN","IBCNSM2",108,0)
 ..I X']""&(IBX'="U") S IBX="U",$P(^DPT(DFN,.31),"^",11)="U" D MSG
"RTN","IBCNSM2",109,0)
 ..Q
"RTN","IBCNSM2",110,0)
 Q
"RTN","IBCNSM2",111,0)
 ;
"RTN","IBCNSM2",112,0)
EPOL(DFN) ; Does the patient have any effective policies?
"RTN","IBCNSM2",113,0)
 ;  Input:  DFN  --  Pointer to the patient in file #2
"RTN","IBCNSM2",114,0)
 ; Output:    0  --  The patient has no effective policies
"RTN","IBCNSM2",115,0)
 ;            1  --  The patient has at least one effective policy
"RTN","IBCNSM2",116,0)
 ;
"RTN","IBCNSM2",117,0)
 N J,X,Y S Y=0
"RTN","IBCNSM2",118,0)
 S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) D  Q:Y
"RTN","IBCNSM2",119,0)
 .I '$P(X,"^",4) S Y=1 Q
"RTN","IBCNSM2",120,0)
 .I $P(X,"^",4)>DT S Y=1
"RTN","IBCNSM2",121,0)
 Q Y
"RTN","IBCNSM2",122,0)
 ;
"RTN","IBCNSM2",123,0)
MSG ;If there is a change in the status of the covered by health insurance 
"RTN","IBCNSM2",124,0)
 ;field #11 in the Patient file #2, The user is notified of the change.
"RTN","IBCNSM2",125,0)
 I '$D(ZTQUEUED) S VALMSG="COVERED BY HEALTH INSURANCE changed to '"_IBX_$S(IBX="U":"NKNOWN'",1:"O'")
"RTN","IBCNSM2",126,0)
 Q
"RTN","IBCNSM3")
0^77^B15749953^B14271242
"RTN","IBCNSM3",1,0)
IBCNSM3 ;ALB/AAS - INSURANCE MANAGEMENT - OUTPUTS ; 4/7/03 9:56am
"RTN","IBCNSM3",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,85,211,251,399,506,516**;21-MAR-94;Build 123
"RTN","IBCNSM3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSM3",4,0)
 ;
"RTN","IBCNSM3",5,0)
% G EN^IBCNSM
"RTN","IBCNSM3",6,0)
 ;
"RTN","IBCNSM3",7,0)
AD ; -- Add new insurance policy
"RTN","IBCNSM3",8,0)
 N X,Y,DO,DD,DA,DR,DIC,DIE,DIK,DIR,DIRUT,IBCNSP,IBCPOL,IBQUIT,IBOK,IBCDFN,IBAD,IBGRP,IBADPOL,IBCOVP,ANS,IBGNA,IBGNU
"RTN","IBCNSM3",9,0)
 S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1),IBQUIT=0,IBADPOL=1
"RTN","IBCNSM3",10,0)
 D FULL^VALM1
"RTN","IBCNSM3",11,0)
 S IBCOVP=$P($G(^DPT(DFN,.31)),"^",11)
"RTN","IBCNSM3",12,0)
 I '$D(^DPT(DFN,.312,0)) S ^DPT(DFN,.312,0)="^2.312PAI^^"
"RTN","IBCNSM3",13,0)
 ;
"RTN","IBCNSM3",14,0)
 D INS^IBCNSEH
"RTN","IBCNSM3",15,0)
 ; -- Select insurance company
"RTN","IBCNSM3",16,0)
 ;    If one already exists for same co. ask are you sure you are
"RTN","IBCNSM3",17,0)
 ;    adding a new one
"RTN","IBCNSM3",18,0)
 S DIR(0)="350.9,4.06"
"RTN","IBCNSM3",19,0)
 S DIR("A")="Select INSURANCE COMPANY",DIR("??")="^D ADH^IBCNSM3"
"RTN","IBCNSM3",20,0)
 S DIR("?")="Select the Insurance Company for the policy you are entering"
"RTN","IBCNSM3",21,0)
 D ^DIR K DIR S IBCNSP=+Y I Y<1 G ADQ
"RTN","IBCNSM3",22,0)
 I $P($G(^DIC(36,+IBCNSP,0)),"^",2)="N" W !,"This company does not reimburse.  "
"RTN","IBCNSM3",23,0)
 I $P($G(^DIC(36,+IBCNSP,0)),"^",5) W !,*7,"Warning: Inactive Company" H 3 K IBCNSP G ADQ
"RTN","IBCNSM3",24,0)
 I $$DUPCO^IBCNSOK1(DFN,IBCNSP,"",1) H 3
"RTN","IBCNSM3",25,0)
 ;
"RTN","IBCNSM3",26,0)
 ; -- see if can use existing policy
"RTN","IBCNSM3",27,0)
 D SEL^IBCNSEH
"RTN","IBCNSM3",28,0)
 S IBCPOL=$$LK^IBCNSM31(IBCNSP)
"RTN","IBCNSM3",29,0)
 ;
"RTN","IBCNSM3",30,0)
 ; IB*2.0*506 added IBKEY parameter (4th) to the NEW^IBCNSJ3 call (check user's security keys)
"RTN","IBCNSM3",31,0)
 I IBCPOL<1 D NEW^IBCNSJ3(IBCNSP,.IBCPOL,,1)
"RTN","IBCNSM3",32,0)
 I IBCPOL<1 G ADQ
"RTN","IBCNSM3",33,0)
 ;
"RTN","IBCNSM3",34,0)
 ; -- file new patient policy
"RTN","IBCNSM3",35,0)
 ;IB*2.0*516/baa - Use HIPAA Compliant fields
"RTN","IBCNSM3",36,0)
 ;S DIC("DR")=".18////"_IBCPOL_";1.09////1;1.05///NOW;1.06////"_DUZ
"RTN","IBCNSM3",37,0)
 S DIC("DR")=".18////"_IBCPOL_";1.09////7.02;1.05///NOW;1.06////"_DUZ
"RTN","IBCNSM3",38,0)
 K DD,DO S DA(1)=DFN,DIC="^DPT("_DFN_",.312,",DIC(0)="L",X=IBCNSP D FILE^DICN K DIC S IBCDFN=+Y,IBNEW=1 I +Y<1 G ADQ
"RTN","IBCNSM3",39,0)
 D BEFORE^IBCNSEVT
"RTN","IBCNSM3",40,0)
 ;
"RTN","IBCNSM3",41,0)
 ; -- Edit patient policy data
"RTN","IBCNSM3",42,0)
 D PAT^IBCNSEH,PATPOL^IBCNSM32(IBCDFN)
"RTN","IBCNSM3",43,0)
 ;
"RTN","IBCNSM3",44,0)
 ; -- edit PLAN data if hold key
"RTN","IBCNSM3",45,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) G ADQ
"RTN","IBCNSM3",46,0)
 I '$G(IBQUIT) D POL^IBCNSEH,EDPOL(IBCDFN)
"RTN","IBCNSM3",47,0)
 I '$G(IBNEW) D AI^IBCNSP1
"RTN","IBCNSM3",48,0)
 G ADQ
"RTN","IBCNSM3",49,0)
 ;
"RTN","IBCNSM3",50,0)
ADQ D COVERED^IBCNSM31(DFN,IBCOVP)
"RTN","IBCNSM3",51,0)
 I $G(IBCDFN)>0 D AFTER^IBCNSEVT,^IBCNSEVT
"RTN","IBCNSM3",52,0)
 I $G(IBCPOL)>0 D BLD^IBCNSM
"RTN","IBCNSM3",53,0)
 S VALMBCK="R"
"RTN","IBCNSM3",54,0)
 Q
"RTN","IBCNSM3",55,0)
 ;
"RTN","IBCNSM3",56,0)
EDPOL(IBCDFN) ; -- Edit GROUP PLAN specific info
"RTN","IBCNSM3",57,0)
 I '$G(IBCDFN) G EDPOLQ
"RTN","IBCNSM3",58,0)
 N DA,DR,DIE,DIC,IBAD,IBCPOL,IBDIF
"RTN","IBCNSM3",59,0)
 S IBCPOL=$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)
"RTN","IBCNSM3",60,0)
 L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G EDPOLQ
"RTN","IBCNSM3",61,0)
 I IBCPOL D
"RTN","IBCNSM3",62,0)
 .D SAVE^IBCNSP3(IBCPOL)
"RTN","IBCNSM3",63,0)
 .S DIE="^IBA(355.3,",DA=IBCPOL
"RTN","IBCNSM3",64,0)
 .;IB*2.0*516/baa - Use HIPAA Compliant fields
"RTN","IBCNSM3",65,0)
 .;S DR="S IBAD=$P($G(^IBA(355.3,DA,0)),U,2),Y=$S(IBAD=0:""@55"",IBAD="""":""@1"",1:""@25"");@1;.02;@25;.03;.04;@55;6.02;6.03;.09;"
"RTN","IBCNSM3",66,0)
 .S DR="S IBAD=$P($G(^IBA(355.3,DA,0)),U,2),Y=$S(IBAD=0:""@55"",IBAD="""":""@1"",1:""@25"");@1;.02;@25;2.01;2.02;@55;6.02;6.03;.09;"
"RTN","IBCNSM3",67,0)
 .S DR=DR_".15;S Y=$S($$CATOK^IBCEMRA($P(^(0),U,14)):""@60"",1:""@65"");@60;.14;@65;.16;I '$$FTFV^IBCNSU31(X) S Y=""@66"";.17;@66;.13;.05;.12;.06;.07;.08//YES;"
"RTN","IBCNSM3",68,0)
 .;
"RTN","IBCNSM3",69,0)
 .I $D(IBREG),'$G(IBNEWP) S DR="S IBAD=$P($G(^IBA(355.3,DA,0)),U,2),Y=$S(IBAD=0:""@55"",IBAD="""":""@1"",1:""@25"");@1;.02;@25;D 3^IBCNSM31;D 4^IBCNSM31;@55;6.02;6.03;.09;"
"RTN","IBCNSM3",70,0)
 .I $D(IBREG),'$G(IBNEWP) S DR=DR_".15;S Y=$S($$CATOK^IBCEMRA($P(^(0),U,14)):""@60"",1:""@65"");@60;.14;@65;.16;I '$$FTFV^IBCNSU31(X) S Y=""@66"";.17;@66;.13;.05;.12;.06;.07;.08//YES;"
"RTN","IBCNSM3",71,0)
 .;
"RTN","IBCNSM3",72,0)
 .D ^DIE
"RTN","IBCNSM3",73,0)
 .D COMP^IBCNSP3(IBCPOL)
"RTN","IBCNSM3",74,0)
 .I IBDIF D UPDATE^IBCNSP3(IBCPOL),UPDATPT^IBCNSP3(DFN,IBCDFN) I $$DUPPOL^IBCNSOK1(IBCPOL,1)
"RTN","IBCNSM3",75,0)
 L -^IBA(355.3,+IBCPOL)
"RTN","IBCNSM3",76,0)
EDPOLQ Q
"RTN","IBCNSM3",77,0)
 ;
"RTN","IBCNSM3",78,0)
OK ; -- ask okay
"RTN","IBCNSM3",79,0)
 S IBQUIT=0,DIR(0)="Y",DIR("A")="       ...OK",DIR("B")="YES" D ^DIR K DIR
"RTN","IBCNSM3",80,0)
 I $D(DIRUT) S IBQUIT=1
"RTN","IBCNSM3",81,0)
 S IBOK=Y
"RTN","IBCNSM3",82,0)
 Q
"RTN","IBCNSM3",83,0)
 ;
"RTN","IBCNSM3",84,0)
ADH ; -- show existing policies for help
"RTN","IBCNSM3",85,0)
 N DIR,DA,%A
"RTN","IBCNSM3",86,0)
 W !!,"The patient currently has the following Insurance Policies"
"RTN","IBCNSM3",87,0)
 D DISP^IBCNS
"RTN","IBCNSM3",88,0)
 Q
"RTN","IBCNSM31")
0^157^B21467883^B21224087
"RTN","IBCNSM31",1,0)
IBCNSM31 ;ALB/AAS - INSURANCE MANAGEMENT - OUTPUTS ;28-MAY-93
"RTN","IBCNSM31",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,68,413,497,516**;21-MAR-94;Build 123
"RTN","IBCNSM31",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSM31",4,0)
 ;
"RTN","IBCNSM31",5,0)
% G EN^IBCNSM
"RTN","IBCNSM31",6,0)
 ;
"RTN","IBCNSM31",7,0)
EA ; -- Edit all insurance policy data
"RTN","IBCNSM31",8,0)
 N IBDIF,I,J,IBXX,IBCDFN,IBTRC,VALMY
"RTN","IBCNSM31",9,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM31",10,0)
 D FULL^VALM1
"RTN","IBCNSM31",11,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D  ;W !,"Entry ",X,"Selected" D
"RTN","IBCNSM31",12,0)
 .S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM31",13,0)
 .Q:IBPPOL=""
"RTN","IBCNSM31",14,0)
 .S IBCDFN=$P($G(IBPPOL),"^",4) I 'IBCDFN W !!,"Can't identify the policy!" Q
"RTN","IBCNSM31",15,0)
 .; -- edit patient data
"RTN","IBCNSM31",16,0)
 .N IBQUIT S IBQUIT=0
"RTN","IBCNSM31",17,0)
 .S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1) D PAT^IBCNSEH
"RTN","IBCNSM31",18,0)
 .D BEFORE^IBCNSEVT
"RTN","IBCNSM31",19,0)
 .D PATPOL^IBCNSM32(IBCDFN)
"RTN","IBCNSM31",20,0)
 .D AFTER^IBCNSEVT,^IBCNSEVT
"RTN","IBCNSM31",21,0)
 .; -- edit policy data
"RTN","IBCNSM31",22,0)
 .D:'$G(IBQUIT) POL^IBCNSEH,EDPOL^IBCNSM3(IBCDFN)
"RTN","IBCNSM31",23,0)
 .W ! D AI^IBCNSP1 D:$G(IBTRC) AIP^IBCNSP02(IBTRC)
"RTN","IBCNSM31",24,0)
 .Q
"RTN","IBCNSM31",25,0)
 ;
"RTN","IBCNSM31",26,0)
EAQ D BLD^IBCNSM
"RTN","IBCNSM31",27,0)
 S VALMBCK="R"
"RTN","IBCNSM31",28,0)
 Q
"RTN","IBCNSM31",29,0)
 ;
"RTN","IBCNSM31",30,0)
LK(IBCNS) ; -- screened look up to policy file
"RTN","IBCNSM31",31,0)
 ;      input:   IBCNS = pointer to insurance company file (36)
"RTN","IBCNSM31",32,0)
 ;
"RTN","IBCNSM31",33,0)
 N DIC,IBX,DIR,DUOUT,DTOUT,DIROUT,DIRUT,X,Y,IBCPOL
"RTN","IBCNSM31",34,0)
 S IBCPOL=""
"RTN","IBCNSM31",35,0)
 I $G(IBCNS)="" G LKQ
"RTN","IBCNSM31",36,0)
 ;
"RTN","IBCNSM31",37,0)
 I '$$ANYGP^IBCNSJ(IBCNS) W !!,"This company does not offer any active group plans." G LKQ
"RTN","IBCNSM31",38,0)
 ;
"RTN","IBCNSM31",39,0)
 S DIR(0)="Y",DIR("A")="This company offers active group plans.  Do you wish to select one"
"RTN","IBCNSM31",40,0)
 S DIR("?")="The look-up facility to select an active group plan has been enhanced to use the List Manager.  Enter 'YES' if you wish to select a plan from this look-up, or 'NO' to add your own plan."
"RTN","IBCNSM31",41,0)
 D ^DIR K DIR I 'Y G LKQ
"RTN","IBCNSM31",42,0)
 ;
"RTN","IBCNSM31",43,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you wish to directly enter this plan"
"RTN","IBCNSM31",44,0)
 S DIR("?")="The look-up facility to select an active group plan has been enhanced to use the List Manager.  Enter 'NO' if you wish to select a plan from this look-up, or 'YES' to directly enter the plan."
"RTN","IBCNSM31",45,0)
 D ^DIR K DIR I $D(DIRUT) G LKQ
"RTN","IBCNSM31",46,0)
 ;
"RTN","IBCNSM31",47,0)
 I 'Y D LKP^IBCNSU2(IBCNS,0,0,.IBCPOL,$G(IBALR)) G LKQ
"RTN","IBCNSM31",48,0)
 ;
"RTN","IBCNSM31",49,0)
 ; MRD;IB*2.0*516 - Display new Group Name and Number fields.
"RTN","IBCNSM31",50,0)
 S DIC("A")="Select an Active GROUP PLAN: "
"RTN","IBCNSM31",51,0)
 S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I +^(0)=IBCNS,$P(^(0),U,2),'$P(^(0),U,11),$G(IBALR)'=+Y"
"RTN","IBCNSM31",52,0)
 ;S DIC("W")="N IBX S IBX=$G(^(0)) W ""   Name: "",$E($S($P(IBX,U,3)]"""":$P(IBX,U,3),1:""<none>"")_$J("""",20),1,20),""   Number: "",$S($P(IBX,U,4)]"""":$P(IBX,U,4),1:""<none>"")"
"RTN","IBCNSM31",53,0)
 S DIC("W")="N IBX S IBX=$G(^(2)) W ""   Name: "",$E($S($P(IBX,U,1)]"""":$P(IBX,U,1),1:""<none>"")_$J("""",20),1,20),""   Number: "",$E($S($P(IBX,U,2)]"""":$P(IBX,U,2),1:""<none>""),1,14)"
"RTN","IBCNSM31",54,0)
 D ^DIC K DIC I +Y>0 S IBCPOL=+Y
"RTN","IBCNSM31",55,0)
 ;
"RTN","IBCNSM31",56,0)
 ; -- see if only one policy
"RTN","IBCNSM31",57,0)
 ;I '$O(^IBA(355.3,"B",+IBCNS,IBX) D  G LKQ
"RTN","IBCNSM31",58,0)
 ;
"RTN","IBCNSM31",59,0)
 ; -- is more than one plan to choose from, let fileman do it.
"RTN","IBCNSM31",60,0)
 ;S DIC("A")="Select GROUP INSURANCE PLAN: "
"RTN","IBCNSM31",61,0)
 ;
"RTN","IBCNSM31",62,0)
 ;S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U)=IBCNS,($P(^(0),U,2)=1!($P(^(0),U,10)=$G(DFN)))"
"RTN","IBCNSM31",63,0)
 ;
"RTN","IBCNSM31",64,0)
 ;D ^DIC K DIC I +Y>0 S IBCPOL=+Y
"RTN","IBCNSM31",65,0)
 ;
"RTN","IBCNSM31",66,0)
LKQ Q IBCPOL
"RTN","IBCNSM31",67,0)
 ;
"RTN","IBCNSM31",68,0)
FUTURE ; -- if expiration date in future give warning
"RTN","IBCNSM31",69,0)
 I $G(IBFUTUR) K IBFUTUR Q
"RTN","IBCNSM31",70,0)
 I $P(^DPT(DFN,.312,IBCDFN,0),"^",4),$P(^(0),"^",4)>DT W !!,*7,"WARNING:  The expiration date for this policy is in the future!",!,"          Normally this is a past date or left blank or a past date",! S Y="@333"
"RTN","IBCNSM31",71,0)
 S IBFUTUR=1
"RTN","IBCNSM31",72,0)
 Q
"RTN","IBCNSM31",73,0)
 ;
"RTN","IBCNSM31",74,0)
COVERED(DFN,IBCOVP) ; -- update covered by insurance in background
"RTN","IBCNSM31",75,0)
 ; -- input ibcovp = the covered by insurance field prior to editing
"RTN","IBCNSM31",76,0)
 ;                   (add/edit/delete) of the 2.312 insurance type mult.
"RTN","IBCNSM31",77,0)
 ;
"RTN","IBCNSM31",78,0)
 Q:$G(DFN)<1
"RTN","IBCNSM31",79,0)
 N X,Y,I,IBCOV,IBNCOV,DA,DR,DIE,DIC,IBINS,IBINSD
"RTN","IBCNSM31",80,0)
 S (IBCOV,IBNCOV)=$P($G(^DPT(DFN,.31)),"^",11)
"RTN","IBCNSM31",81,0)
 D ALL^IBCNS1(DFN,"IBINS",2,DT) S IBINSD=+$G(IBINS(0))
"RTN","IBCNSM31",82,0)
 ;
"RTN","IBCNSM31",83,0)
 ; -- initial value ="" or Unknown
"RTN","IBCNSM31",84,0)
 I $G(IBCOVP)=""!($G(IBCOVP)="U") S IBNCOV=$S('$O(^DPT(DFN,.312,0)):"U",IBINSD:"Y",1:"N")
"RTN","IBCNSM31",85,0)
 ;
"RTN","IBCNSM31",86,0)
 ; -- initial value = YES or NO (treat the same)
"RTN","IBCNSM31",87,0)
 I $G(IBCOVP)="Y"!($G(IBCOVP)="N") S IBNCOV=$S('$O(^DPT(DFN,.312,0)):"N",IBINSD:"Y",1:"N")
"RTN","IBCNSM31",88,0)
 ;
"RTN","IBCNSM31",89,0)
 ;
"RTN","IBCNSM31",90,0)
 I IBCOV'=IBNCOV D
"RTN","IBCNSM31",91,0)
 .S DIE="^DPT(",DR=".3192////"_IBNCOV,DA=DFN D ^DIE
"RTN","IBCNSM31",92,0)
 .I '$D(ZTQUEUED)&($G(IBSUPRES)'>0) W !!,"COVERED BY HEALTH INSURANCE changed to '"_$S(IBNCOV="Y":"YES",IBNCOV="N":"NO",1:"UNKNOWN"),"'.",! H 3
"RTN","IBCNSM31",93,0)
 .Q
"RTN","IBCNSM31",94,0)
 Q
"RTN","IBCNSM31",95,0)
 ;
"RTN","IBCNSM31",96,0)
3 ; -- display group name as uneditable
"RTN","IBCNSM31",97,0)
 ;    called by die, expects da = entry in 355.3
"RTN","IBCNSM31",98,0)
 N X
"RTN","IBCNSM31",99,0)
 S X=$P($G(^IBA(355.3,DA,2)),"^",1)      ; IB*2.0*497 (vd)
"RTN","IBCNSM31",100,0)
 W !,"GROUP NAME: ",X,$S(X'="":"// ",1:""),"  (No Editing)"
"RTN","IBCNSM31",101,0)
 Q
"RTN","IBCNSM31",102,0)
 ;
"RTN","IBCNSM31",103,0)
4 ; -- display group number as uneditable
"RTN","IBCNSM31",104,0)
 ;    called by die, expects da = entry in 355.3
"RTN","IBCNSM31",105,0)
 N X
"RTN","IBCNSM31",106,0)
 S X=$P($G(^IBA(355.3,DA,2)),"^",2)      ; IB*2.0*497 (vd)
"RTN","IBCNSM31",107,0)
 W !,"GROUP NUMBER: ",X,$S(X'="":"// ",1:""),"  (No Editing)"
"RTN","IBCNSM31",108,0)
 Q
"RTN","IBCNSM5")
0^103^B22650774^B21379064
"RTN","IBCNSM5",1,0)
IBCNSM5 ;ALB/NLR - INSURANCE MANAGEMENT WORKSHEET ; 23-JUL-93
"RTN","IBCNSM5",2,0)
 ;;2.0;INTEGRATED BILLING;**28,497,516**;21-MAR-94;Build 123
"RTN","IBCNSM5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSM5",4,0)
 ;
"RTN","IBCNSM5",5,0)
% G EN^IBCNSM
"RTN","IBCNSM5",6,0)
 ;
"RTN","IBCNSM5",7,0)
WPPC ; -- print insurance management worksheet, insurance coverage
"RTN","IBCNSM5",8,0)
 ;
"RTN","IBCNSM5",9,0)
 I '$G(IBCPOL) D  G WPPCQ
"RTN","IBCNSM5",10,0)
 .D FULL^VALM1
"RTN","IBCNSM5",11,0)
 .W !!,"There is no plan associated with this policy!"
"RTN","IBCNSM5",12,0)
 .W !!,"Please use the action 'Change Plan Info', which will create a plan"
"RTN","IBCNSM5",13,0)
 .W !,"for the policy."
"RTN","IBCNSM5",14,0)
 .N DIR,DTOUT,DUOUT,DIROUT S DIR(0)="E" W ! D ^DIR
"RTN","IBCNSM5",15,0)
 ;
"RTN","IBCNSM5",16,0)
 N IBCAB,IBPIB1,IBPAG,IBQUIT,IBW
"RTN","IBCNSM5",17,0)
 S IBPIB1=1,IBW=1
"RTN","IBCNSM5",18,0)
 D GETEN1 I ('($G(IBW)))!(IBYR<(DT-10000)&($G(IBLINE)))!($D(DIRUT)) G WPPCQ
"RTN","IBCNSM5",19,0)
 D DEV
"RTN","IBCNSM5",20,0)
 I $G(IBQUIT) G WPPCQ
"RTN","IBCNSM5",21,0)
DQ ;
"RTN","IBCNSM5",22,0)
 S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1)
"RTN","IBCNSM5",23,0)
 D PR
"RTN","IBCNSM5",24,0)
 D:IBCY GETEN2
"RTN","IBCNSM5",25,0)
 D:IBYR&IBCY PR
"RTN","IBCNSM5",26,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBCNSM5",27,0)
WPPCQ I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCNSM5",28,0)
 D ^%ZISC
"RTN","IBCNSM5",29,0)
 K IBCPOL,IBYR,IBPIB1,IBW
"RTN","IBCNSM5",30,0)
 Q 
"RTN","IBCNSM5",31,0)
PR ; -- set variables needed for file navigation, print insurance worksheet or coverage
"RTN","IBCNSM5",32,0)
 ;
"RTN","IBCNSM5",33,0)
 D SETVAR
"RTN","IBCNSM5",34,0)
 D PRINT
"RTN","IBCNSM5",35,0)
PRQ Q
"RTN","IBCNSM5",36,0)
 ;
"RTN","IBCNSM5",37,0)
GETEN1 ; -- find IEN of most recent policy
"RTN","IBCNSM5",38,0)
 ;
"RTN","IBCNSM5",39,0)
 ;N IBCDFND,IBCDFND1,IBCDFND2
"RTN","IBCNSM5",40,0)
 ;I $G(IBYR)="" S IBYR=DT
"RTN","IBCNSM5",41,0)
 ;I '$G(IBCPOL) S IBCPOL=$P($G(^IBA(355.4,$G(DA),0)),"^",2)
"RTN","IBCNSM5",42,0)
 ;I 'IBCPOL G GETEN1Q
"RTN","IBCNSM5",43,0)
 S IBYR=$O(^IBA(355.4,"APY",IBCPOL,-(DT+.0001))) I IBYR S:IBYR<0 IBYR=-IBYR
"RTN","IBCNSM5",44,0)
 I ('IBYR),'IBLINE D ASK I ($D(DIRUT))!('($G(IBW))) G GETEN1Q
"RTN","IBCNSM5",45,0)
 I $G(IBLINE)&(('IBYR)!(IBYR<(DT-10000))) S IBYR=DT
"RTN","IBCNSM5",46,0)
 S IBCAB="" S IBCAB=$O(^IBA(355.4,"APY",IBCPOL,-IBYR,IBCAB))
"RTN","IBCNSM5",47,0)
 ;W !!,"DATE OF PREVIOUS ENTRY IS "_$$DAT1^IBOUTL(IBYR),!! H 3
"RTN","IBCNSM5",48,0)
 ;I IBYR<(DT-10000),IBLINE S IBYR=DT
"RTN","IBCNSM5",49,0)
 ;I IBYR<(DT-10000),IBLINE W !!,"MOST RECENT ENTRY IS "_$$DAT1^IBOUTL(IBYR)_".  ENTRY CANNOT BE MORE THAN A YEAR OLD.",!!,"YOU MAY PRINT ENTRY UNDER 'PC'.",!! H 4
"RTN","IBCNSM5",50,0)
GETEN1Q Q
"RTN","IBCNSM5",51,0)
 ;
"RTN","IBCNSM5",52,0)
SETVAR ; -- set variables needed for file navigation
"RTN","IBCNSM5",53,0)
 ;
"RTN","IBCNSM5",54,0)
 ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBCNSM5",55,0)
 ;S IBCDFND=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),0)),IBCNS=+IBCDFND  ; 516 - baa
"RTN","IBCNSM5",56,0)
 S IBCDFND=$$ZND^IBCNS1(DFN,$P(IBPPOL,"^",4)),IBCNS=+IBCDFND  ; 516 - baa
"RTN","IBCNSM5",57,0)
 S IBCDFND1=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),1))
"RTN","IBCNSM5",58,0)
 S IBCDFND2=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),2))
"RTN","IBCNSM5",59,0)
 S IBCDFNDA=$G(^DIC(36,+IBCDFND,.11))
"RTN","IBCNSM5",60,0)
 S IBCDFNDB=$G(^DIC(36,+IBCDFND,.13))
"RTN","IBCNSM5",61,0)
 S IBCPOL=+$P(IBCDFND,"^",18),IBCNS=+IBCDFND,IBCDFN=$P(IBPPOL,"^",4)
"RTN","IBCNSM5",62,0)
 ;IB*2.0*516/TAZ - replace Group Number and Group Name with HIPAA compliant fields
"RTN","IBCNSM5",63,0)
 S IBCPOLD=$G(^IBA(355.3,IBCPOL,0)),$P(IBCPOLD,U,3)=$$GET1^DIQ(355.3,IBCPOL_",",2.01),$P(IBCPOLD,U,4)=$$GET1^DIQ(355.3,IBCPOL_",",2.02)
"RTN","IBCNSM5",64,0)
 S FILE="^DPT("_DFN_",.312,"
"RTN","IBCNSM5",65,0)
 S IBCBU=$O(^IBA(355.5,"APPY",DFN,IBCPOL,-IBYR,IBCDFN,0))
"RTN","IBCNSM5",66,0)
 S IBCBUD=$G(^IBA(355.5,+IBCBU,0))
"RTN","IBCNSM5",67,0)
 S IBCBUD1=$G(^IBA(355.5,+IBCBU,1))
"RTN","IBCNSM5",68,0)
 S IBCGN=$$GRP^IBCNS(IBCPOL)
"RTN","IBCNSM5",69,0)
 S IBPAT=1
"RTN","IBCNSM5",70,0)
 S IBCABD=$G(^IBA(355.4,+IBCAB,0))
"RTN","IBCNSM5",71,0)
 S IBCABD2=$G(^IBA(355.4,+IBCAB,2))
"RTN","IBCNSM5",72,0)
 S IBCABD3=$G(^IBA(355.4,+IBCAB,3))
"RTN","IBCNSM5",73,0)
 S IBCABD4=$G(^IBA(355.4,+IBCAB,4))
"RTN","IBCNSM5",74,0)
 S IBCABD5=$G(^IBA(355.4,+IBCAB,5))
"RTN","IBCNSM5",75,0)
 Q
"RTN","IBCNSM5",76,0)
 ;
"RTN","IBCNSM5",77,0)
DEV ; -- ask for device
"RTN","IBCNSM5",78,0)
 ;
"RTN","IBCNSM5",79,0)
 W !!,"*** You will need a 132 column printer for this report. ***",!
"RTN","IBCNSM5",80,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 G R1Q
"RTN","IBCNSM5",81,0)
 I $D(IO("Q")) K IO("Q") S IBQUIT=1,ZTRTN="DQ^IBCNSM5",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="INSURANCE MANAGEMENT WORKSHEET" D ^%ZTLOAD K ZTSK D HOME^%ZIS Q
"RTN","IBCNSM5",82,0)
 I $E(IOST,1,2)="C-" D FULL^VALM1
"RTN","IBCNSM5",83,0)
 U IO
"RTN","IBCNSM5",84,0)
R1Q Q
"RTN","IBCNSM5",85,0)
 ;
"RTN","IBCNSM5",86,0)
PRINT ; -- print insurance management worksheet/insurance coverage
"RTN","IBCNSM5",87,0)
 ;
"RTN","IBCNSM5",88,0)
 D PID^VADPT
"RTN","IBCNSM5",89,0)
 D HDR
"RTN","IBCNSM5",90,0)
 D BL1^IBCNSM6,BL2^IBCNSM7,BL3^IBCNSM8,BL4^IBCNSM8,BL5^IBCNSM9,BL6^IBCNSM9,BL7^IBCNSM9
"RTN","IBCNSM5",91,0)
 Q
"RTN","IBCNSM5",92,0)
 ;
"RTN","IBCNSM5",93,0)
HDR ; -- print header
"RTN","IBCNSM5",94,0)
 ;
"RTN","IBCNSM5",95,0)
 I $E(IOST,1,2)["C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBCNSM5",96,0)
 W:$E(IOST,1,2)["C-"!($G(IBPAG)) @IOF
"RTN","IBCNSM5",97,0)
 S IBPAG=$G(IBPAG)+1
"RTN","IBCNSM5",98,0)
 W !,$S($G(IBLINE):"INSURANCE MANAGEMENT WORKSHEET",1:"INSURANCE COVERAGE FOR "_$S($G(IBPIB1):"CURRENT ENTRY",1:"NEXT-MOST-CURRENT ENTRY")),?(IOM-30),IBHDT,"  PAGE ",IBPAG
"RTN","IBCNSM5",99,0)
 W !,$TR($J(" ",IOM)," ","_")
"RTN","IBCNSM5",100,0)
 D DEM^VADPT
"RTN","IBCNSM5",101,0)
 W !!,VADM(1),?34,"PT ID:  "_VA("PID"),?79,"DOB:  "_$P(VADM(3),"^",2)
"RTN","IBCNSM5",102,0)
 W !,$E($P($G(^DIC(36,+IBCDFND,0)),"^"),1,28),?31," GROUP #:  ",$$DOL^IBCNSM6(355.3,2.02,$P(IBCPOLD,"^",4),$G(IBLINE))  ;WCJ;IB*2.0*497 changed .04 to 2.02 for new Group# field
"RTN","IBCNSM5",103,0)
 W ?74,"For YEAR:  "_$S($G(IBCAB):$$DAT1^IBOUTL(IBYR),1:"______________")
"RTN","IBCNSM5",104,0)
 W !?30,"Ins. Type:  ",$$DOL^IBCNSM6(355.1,.01,$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^"),$G(IBLINE))
"RTN","IBCNSM5",105,0)
 Q
"RTN","IBCNSM5",106,0)
 ;
"RTN","IBCNSM5",107,0)
GETEN2 ; -- get IEN of next-to-most-recent entry (Print Coverage)
"RTN","IBCNSM5",108,0)
 ;
"RTN","IBCNSM5",109,0)
 S IBYR=$O(^IBA(355.4,"APY",IBCPOL,-IBYR)) I 'IBYR G PR1Q
"RTN","IBCNSM5",110,0)
 S:IBYR<0 IBYR=-IBYR
"RTN","IBCNSM5",111,0)
 S IBCAB="" S IBCAB=$O(^IBA(355.4,"APY",IBCPOL,-IBYR,IBCAB))
"RTN","IBCNSM5",112,0)
 S IBPIB1=0
"RTN","IBCNSM5",113,0)
PR1Q Q
"RTN","IBCNSM5",114,0)
 ;
"RTN","IBCNSM5",115,0)
ASK ; -- if Print Coverage and no benefit years for selected policy, ask if user wants worksheet 
"RTN","IBCNSM5",116,0)
 ;
"RTN","IBCNSM5",117,0)
 W !
"RTN","IBCNSM5",118,0)
 S DIR(0)="YO",DIR("A")="No Benefit Years on File.  Do you want to fill out a worksheet",DIR("B")="No"
"RTN","IBCNSM5",119,0)
 W !
"RTN","IBCNSM5",120,0)
 D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 G ASKQ
"RTN","IBCNSM5",121,0)
 I Y S IBW=1,IBLINE=1,IBCY=0 G ASKQ
"RTN","IBCNSM5",122,0)
 S IBW=0 D PAUSE^VALM1
"RTN","IBCNSM5",123,0)
ASKQ ;
"RTN","IBCNSM5",124,0)
 Q
"RTN","IBCNSMM")
0^79^B21594622^B20650555
"RTN","IBCNSMM",1,0)
IBCNSMM ;ALB/CMS -MEDICARE INSURANCE INTAKE ; 18-OCT-98
"RTN","IBCNSMM",2,0)
 ;;2.0;INTEGRATED BILLING;**103,133,184,516**;21-MAR-94;Build 123
"RTN","IBCNSMM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSMM",4,0)
 Q
"RTN","IBCNSMM",5,0)
 ;
"RTN","IBCNSMM",6,0)
EN ; -- Entry point from Medicare Intake Standalone option
"RTN","IBCNSMM",7,0)
 N DIC,DIR,DA,%A,DFN,X,Y,IBQUIT,IBCNSP,IBSOURCE
"RTN","IBCNSMM",8,0)
 S (IBQUIT,IBCNSP)=0 D GETWNR I IBQUIT G ENQ
"RTN","IBCNSMM",9,0)
 ;
"RTN","IBCNSMM",10,0)
 ; - allow the user to enter the Source of Information for the policies
"RTN","IBCNSMM",11,0)
 W !!,"You may enter the 'Source of Information' that will be filed with all"
"RTN","IBCNSMM",12,0)
 W !,"Medicare insurance coverage policies that are created.",!
"RTN","IBCNSMM",13,0)
 ;
"RTN","IBCNSMM",14,0)
 S DIR(0)="2.312,1.09"
"RTN","IBCNSMM",15,0)
 S DIR("A")="Enter Source of Information"
"RTN","IBCNSMM",16,0)
 S DIR("B")="INTERVIEW"
"RTN","IBCNSMM",17,0)
 D ^DIR K DUOUT,DTOUT,DIRUT,DIROUT,DIR
"RTN","IBCNSMM",18,0)
 S IBSOURCE=+Y I Y<1 G ENQ
"RTN","IBCNSMM",19,0)
 W !
"RTN","IBCNSMM",20,0)
 ;
"RTN","IBCNSMM",21,0)
 ; - loop to select patients
"RTN","IBCNSMM",22,0)
ENA S DIC(0)="AEQMN",DIC="^DPT(" D ^DIC
"RTN","IBCNSMM",23,0)
 I +Y<1 G ENQ
"RTN","IBCNSMM",24,0)
 S DFN=+Y
"RTN","IBCNSMM",25,0)
 I $G(^DPT(DFN,.35)) W *7,!!,?10,"Patient Expired on ",$$FMTE^XLFDT($P(^DPT(DFN,.35),U))
"RTN","IBCNSMM",26,0)
 W ! D DISP^IBCNS W !,?3 S X="",$P(X,"=",76)="" W X
"RTN","IBCNSMM",27,0)
 D ENR(DFN,IBSOURCE,1) K DIC W !! G ENA
"RTN","IBCNSMM",28,0)
 ;
"RTN","IBCNSMM",29,0)
ENQ Q
"RTN","IBCNSMM",30,0)
 ;
"RTN","IBCNSMM",31,0)
 ;
"RTN","IBCNSMM",32,0)
ENR(DFN,IBSOUR,IBOPT) ; -- Entry point from IBCNBME Patient Registration or Pre-Registration
"RTN","IBCNSMM",33,0)
 ;    Input Variable DFN Required and IBSOUR =Source of Information
"RTN","IBCNSMM",34,0)
 ;                   IBOPT =1 if comming from MII Standalone Option
"RTN","IBCNSMM",35,0)
 ;
"RTN","IBCNSMM",36,0)
 N D,DIE,DA,DIR,DIC,E,IBCPOL,IBCNSP,IBCDFN,IBQUIT,IBOK,IBC0,IBAD,IBGRP,IBADPOL
"RTN","IBCNSMM",37,0)
 N IBNAME,IBHICN,IBAEFF,IBBEFF,IBCOVP,IBGNA,IBGNU,IBBUF,IBNEW,IBP,X,Y
"RTN","IBCNSMM",38,0)
 N IBPOLA,IBPOLB,IBARR,IBHIT,IBHITA,IBHITB,IBCOB,IBCOBI
"RTN","IBCNSMM",39,0)
 ;
"RTN","IBCNSMM",40,0)
 S (IBAEFF,IBBEFF,IBCNSP,IBCDFN,IBNEW,IBQUIT)=0,IBADPOL=1
"RTN","IBCNSMM",41,0)
 S (IBNAME,IBHICN)=""
"RTN","IBCNSMM",42,0)
 ;
"RTN","IBCNSMM",43,0)
 ; -- Get Standard Medicare Insurance Company and plans in IBCNSP
"RTN","IBCNSMM",44,0)
 D GETWNR I IBQUIT G ENRQ
"RTN","IBCNSMM",45,0)
 ;
"RTN","IBCNSMM",46,0)
 ; -- get the patient's Medicare policies
"RTN","IBCNSMM",47,0)
 S (IBPOLA,IBPOLB)=0
"RTN","IBCNSMM",48,0)
 S IBCDFN=0 F  S IBCDFN=$O(^DPT(DFN,.312,"B",+IBCNSP,IBCDFN)) Q:'IBCDFN  D
"RTN","IBCNSMM",49,0)
 .;IB*2.0*516/TAZ - Retrieve Data from HIPAA compliant fields.
"RTN","IBCNSMM",50,0)
 .;S IBCPOL=$G(^DPT(DFN,.312,IBCDFN,0))  ;516 - baa
"RTN","IBCNSMM",51,0)
 .S IBCPOL=$$ZND^IBCNS1(DFN,IBCDFN)  ;516 - baa
"RTN","IBCNSMM",52,0)
 .;
"RTN","IBCNSMM",53,0)
 .; - is the policy for Part A?
"RTN","IBCNSMM",54,0)
 .I $P(IBCNSP,U,3)=$P(IBCPOL,U,18) D  Q
"RTN","IBCNSMM",55,0)
 ..S IBPOLA=IBPOLA+1,IBARR("A",IBPOLA)=IBCDFN_"^"_IBCPOL
"RTN","IBCNSMM",56,0)
 .;
"RTN","IBCNSMM",57,0)
 .; - is the policy for Part B?
"RTN","IBCNSMM",58,0)
 .I $P(IBCNSP,U,5)=$P(IBCPOL,U,18) D
"RTN","IBCNSMM",59,0)
 ..S IBPOLB=IBPOLB+1,IBARR("B",IBPOLB)=IBCDFN_"^"_IBCPOL
"RTN","IBCNSMM",60,0)
 ;
"RTN","IBCNSMM",61,0)
 ; - can't edit here if there is more than one policy
"RTN","IBCNSMM",62,0)
 I $D(IBARR("A",2)) K IBARR("A") D
"RTN","IBCNSMM",63,0)
 .W !!,"This patient has more than one Part A policy.  Please edit in Ins Mgmt."
"RTN","IBCNSMM",64,0)
 ;
"RTN","IBCNSMM",65,0)
 I $D(IBARR("B",2)) K IBARR("B") D
"RTN","IBCNSMM",66,0)
 .W !!,"This patient has more than one Part B policy.  Please edit in Ins Mgmt."
"RTN","IBCNSMM",67,0)
 ;
"RTN","IBCNSMM",68,0)
 I (IBPOLA!IBPOLB),'$D(IBARR) G ENRQ
"RTN","IBCNSMM",69,0)
 ;
"RTN","IBCNSMM",70,0)
 ; -- Ask for Medicare Insurance Card information
"RTN","IBCNSMM",71,0)
 ;    Return IBNAME, IBHICN, IBAEFF, IBBEFF, IBCOB/IBCOBI
"RTN","IBCNSMM",72,0)
 D MII^IBCNSMM2 I IBQUIT G ENRQ
"RTN","IBCNSMM",73,0)
 ;
"RTN","IBCNSMM",74,0)
 ; - if Part A or B exists, but no changes, quit
"RTN","IBCNSMM",75,0)
 I $D(IBARR("A",1)) D COM($P(IBARR("A",1),"^",2,99),"A") I IBHIT D
"RTN","IBCNSMM",76,0)
 .S IBHITA=1 W !,"  * No Part A changes made..."
"RTN","IBCNSMM",77,0)
 ;
"RTN","IBCNSMM",78,0)
 I $D(IBARR("B",1)) D COM($P(IBARR("B",1),"^",2,99),"B") I IBHIT D
"RTN","IBCNSMM",79,0)
 .S IBHITB=1 W !,"  * No Part B changes made..."
"RTN","IBCNSMM",80,0)
 ;
"RTN","IBCNSMM",81,0)
 I $G(IBHITA),$G(IBHITB) G ENRQ
"RTN","IBCNSMM",82,0)
 I $G(IBHITA),'$G(IBBEFF) G ENRQ
"RTN","IBCNSMM",83,0)
 I $G(IBHITB),'$G(IBAEFF) G ENRQ
"RTN","IBCNSMM",84,0)
 ;
"RTN","IBCNSMM",85,0)
 ; -- If user not holding key set data in Buffer File
"RTN","IBCNSMM",86,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D  G ENRQ
"RTN","IBCNSMM",87,0)
 .I IBAEFF,'$G(IBHITA) D BUFF^IBCNSMM1("A")
"RTN","IBCNSMM",88,0)
 .I IBBEFF,'$G(IBHITB) D BUFF^IBCNSMM1("B")
"RTN","IBCNSMM",89,0)
 ;
"RTN","IBCNSMM",90,0)
 ; -- Otherwise, set data into permanent files
"RTN","IBCNSMM",91,0)
 I IBAEFF,'$G(IBHITA) D
"RTN","IBCNSMM",92,0)
 .I IBPOLA,'$D(IBARR("A")) Q  ; can't update Part A policy
"RTN","IBCNSMM",93,0)
 .I '$D(IBARR("A",1)) D ADDP("A") Q
"RTN","IBCNSMM",94,0)
 .S IBCDFN=+IBARR("A",1) D SETP^IBCNSMM1("A")
"RTN","IBCNSMM",95,0)
 I IBBEFF,'$G(IBHITB) D
"RTN","IBCNSMM",96,0)
 .I IBPOLB,'$D(IBARR("B")) Q  ; can't update Part B policy
"RTN","IBCNSMM",97,0)
 .I '$D(IBARR("B",1)) D ADDP("B") Q
"RTN","IBCNSMM",98,0)
 .S IBCDFN=+IBARR("B",1) D SETP^IBCNSMM1("B")
"RTN","IBCNSMM",99,0)
 ;
"RTN","IBCNSMM",100,0)
ENRQ W ! Q
"RTN","IBCNSMM",101,0)
 ;
"RTN","IBCNSMM",102,0)
 ;
"RTN","IBCNSMM",103,0)
 ;
"RTN","IBCNSMM",104,0)
ADDP(IBP) ; -- Create a new patient policy
"RTN","IBCNSMM",105,0)
 ;    Input: DFN
"RTN","IBCNSMM",106,0)
 ;           IBCNSP=MED WNR INS IEN^MEDICARE (WNR)
"RTN","IBCNSMM",107,0)
 ;                  ^PART A IEN^PART A
"RTN","IBCNSMM",108,0)
 ;                  ^PART B IEN^PART A
"RTN","IBCNSMM",109,0)
 ;           IBP = "A" or "B" for medicare part
"RTN","IBCNSMM",110,0)
 ;           IBSOUR = Source of Information
"RTN","IBCNSMM",111,0)
 ;   Return: IBCDFN=-1 could not add OR Policy ien
"RTN","IBCNSMM",112,0)
 ;           IBCOVP= Covered by Health Insurance
"RTN","IBCNSMM",113,0)
 ;
"RTN","IBCNSMM",114,0)
 N X,Y,DO,DD,DA,DR,DIC,DIE,DIK,DIR,DIRUT,IBSPEC
"RTN","IBCNSMM",115,0)
 ; -- Create a New patient policy
"RTN","IBCNSMM",116,0)
 S IBCOVP=$P($G(^DPT(DFN,.31)),U,11)
"RTN","IBCNSMM",117,0)
 ;
"RTN","IBCNSMM",118,0)
 D FIELD^DID(2,.3121,"","SPECIFIER","IBSPEC")
"RTN","IBCNSMM",119,0)
 S DIC("DR")="1.09////"_IBSOUR_";1.05///NOW;1.06////"_DUZ,DIC("P")=$G(IBSPEC("SPECIFIER"))
"RTN","IBCNSMM",120,0)
 K DD,DO S DA(1)=DFN,DIC="^DPT("_DFN_",.312,",DIC(0)="L",X=+IBCNSP,DLAYGO=2.312
"RTN","IBCNSMM",121,0)
 D FILE^DICN K DD,DO,DLAYGO,DIC
"RTN","IBCNSMM",122,0)
 S IBCDFN=+Y
"RTN","IBCNSMM",123,0)
 I IBCDFN<1 W !!,*7,"  <Could not create new policy at this time.  Try Later!>",! G ADDPQ
"RTN","IBCNSMM",124,0)
 ;
"RTN","IBCNSMM",125,0)
 ; -- Set Medicare policy data
"RTN","IBCNSMM",126,0)
 D SETP^IBCNSMM1(IBP)
"RTN","IBCNSMM",127,0)
ADDPQ Q
"RTN","IBCNSMM",128,0)
 ;
"RTN","IBCNSMM",129,0)
 ;
"RTN","IBCNSMM",130,0)
GETWNR ;
"RTN","IBCNSMM",131,0)
 ; -- Get Medicare (WNR) insurance company and plan data
"RTN","IBCNSMM",132,0)
 ;    Returns IBCNSP or IBQUIT
"RTN","IBCNSMM",133,0)
 ;    IBCNSP="Error: Medicare (WNR) ... not setup properly" 
"RTN","IBCNSMM",134,0)
 ;           if Medicare WNR entry or plans not setup properly
"RTN","IBCNSMM",135,0)
 ;
"RTN","IBCNSMM",136,0)
 ;    IBCNSP=INS CO. (36) IEN^"MEDICARE (WNR)"
"RTN","IBCNSMM",137,0)
 ;           ^PLAN (355.3) PARTA IEN^"PART A"
"RTN","IBCNSMM",138,0)
 ;           ^PLAN (355.3) PARTB IEN^"PART B"
"RTN","IBCNSMM",139,0)
 ;
"RTN","IBCNSMM",140,0)
 I 'IBCNSP S IBCNSP=$$GETWNR^IBCNSMM1
"RTN","IBCNSMM",141,0)
 I 'IBCNSP W !!,*7,?3,IBCNSP S IBQUIT=1
"RTN","IBCNSMM",142,0)
 Q
"RTN","IBCNSMM",143,0)
 ;
"RTN","IBCNSMM",144,0)
VALHIC(X) ; Edits for validating HIC #
"RTN","IBCNSMM",145,0)
 ; X = the HIC # to be validated
"RTN","IBCNSMM",146,0)
 N VAL
"RTN","IBCNSMM",147,0)
 S VAL=1
"RTN","IBCNSMM",148,0)
 I X'?9N1A.1AN,X'?1.3A6N,X'?1.3A9N S VAL=0
"RTN","IBCNSMM",149,0)
 Q VAL
"RTN","IBCNSMM",150,0)
 ;
"RTN","IBCNSMM",151,0)
COM(X,Y) ; Compare X with the intake variables.
"RTN","IBCNSMM",152,0)
 ;    Input: X => 0th node of policy in file #2.312
"RTN","IBCNSMM",153,0)
 ;           Y => A (Part A) or B (part B)
"RTN","IBCNSMM",154,0)
 ;   Output: IBHIT=1 (no changes made)
"RTN","IBCNSMM",155,0)
 S IBHIT=0
"RTN","IBCNSMM",156,0)
 I $P(X,"^",17)'=IBNAME G COMQ
"RTN","IBCNSMM",157,0)
 I $P(X,"^",2)'=IBHICN G COMQ
"RTN","IBCNSMM",158,0)
 I $P(X,"^",8)'=$S(Y="A":IBAEFF,1:IBBEFF) G COMQ
"RTN","IBCNSMM",159,0)
 I $P(X,"^",20)'=IBCOBI G COMQ
"RTN","IBCNSMM",160,0)
 ;
"RTN","IBCNSMM",161,0)
 S IBHIT=1
"RTN","IBCNSMM",162,0)
COMQ Q
"RTN","IBCNSP")
0^154^B49297563^B48468493
"RTN","IBCNSP",1,0)
IBCNSP ;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY ;05-MAR-1993
"RTN","IBCNSP",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,43,52,85,251,363,371,416,497,516**;21-MAR-94;Build 123
"RTN","IBCNSP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSP",4,0)
% ;
"RTN","IBCNSP",5,0)
EN ; -- main entry point for IBCNS EXPANDED POLICY
"RTN","IBCNSP",6,0)
 N IB1ST
"RTN","IBCNSP",7,0)
 K VALMQUIT,IBPPOL
"RTN","IBCNSP",8,0)
 S IBTOP="IBCNSP"
"RTN","IBCNSP",9,0)
 D EN^VALM("IBCNS EXPANDED POLICY")
"RTN","IBCNSP",10,0)
 Q
"RTN","IBCNSP",11,0)
 ;
"RTN","IBCNSP",12,0)
HDR ; -- header code
"RTN","IBCNSP",13,0)
 N W,X,Y,Z
"RTN","IBCNSP",14,0)
 S VALMHDR(1)="Expanded Policy Information for: "_$E($P(^DPT(DFN,0),U),1,20)_"  "_$P($$PT^IBEFUNC(DFN),U,2)
"RTN","IBCNSP",15,0)
 S Z=$G(^DPT(DFN,.312,+$P(IBPPOL,U,4),0))
"RTN","IBCNSP",16,0)
 S W=$P($G(^IBA(355.3,+$P(Z,U,18),0)),U,11)
"RTN","IBCNSP",17,0)
 S Y=$E($P($G(^DIC(36,+Z,0)),U),1,20)_" Insurance Company"
"RTN","IBCNSP",18,0)
 S X="** Plan Currently "_$S(W:"Ina",1:"A")_"ctive **"
"RTN","IBCNSP",19,0)
 S VALMHDR(2)=$$SETSTR^VALM1(X,Y,48,29)
"RTN","IBCNSP",20,0)
 Q
"RTN","IBCNSP",21,0)
 ;
"RTN","IBCNSP",22,0)
INIT ; -- init variables and list array
"RTN","IBCNSP",23,0)
 K VALMQUIT
"RTN","IBCNSP",24,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNSP",25,0)
 I '$D(IBPPOL) D PPOL Q:$D(VALMQUIT)
"RTN","IBCNSP",26,0)
 K ^TMP("IBCNSVP",$J)
"RTN","IBCNSP",27,0)
 D BLD,HDR
"RTN","IBCNSP",28,0)
 Q
"RTN","IBCNSP",29,0)
 ;
"RTN","IBCNSP",30,0)
BLD ; -- list builder
"RTN","IBCNSP",31,0)
 K ^TMP("IBCNSVP",$J),^TMP("IBCNSVPDX",$J)
"RTN","IBCNSP",32,0)
 D KILL^VALM10()
"RTN","IBCNSP",33,0)
 N IBCDFND,IBCDFND1,IBCDFND2,IBCDFND4,IBCDFND5,IBCDFND7
"RTN","IBCNSP",34,0)
 S IBCDFND=$G(^DPT(DFN,.312,$P(IBPPOL,U,4),0)),IBCDFND1=$G(^(1)),IBCDFND2=$G(^(2)),IBCDFND4=$G(^(4)),IBCDFND5=$G(^(5)),IBCDFND7=$G(^(7))
"RTN","IBCNSP",35,0)
 ; MRD;IB*2.0*516 - Use $$ZND^IBCNS1 to pull zero node of 2.312.
"RTN","IBCNSP",36,0)
 S IBCDFND=$$ZND^IBCNS1(DFN,$P(IBPPOL,U,4))
"RTN","IBCNSP",37,0)
 S IBCPOL=+$P(IBCDFND,U,18),IBCNS=+IBCDFND,IBCDFN=$P(IBPPOL,U,4)
"RTN","IBCNSP",38,0)
 S IBCPOLD=$G(^IBA(355.3,+$P(IBCDFND,U,18),0)),IBCPOLD1=$G(^(1))
"RTN","IBCNSP",39,0)
 S IBCPOLD2=$G(^IBA(355.3,+$G(IBCPOL),6)) ;; Daou/EEN adding BIN and PCN
"RTN","IBCNSP",40,0)
 S IBCPOLDL=$G(^IBA(355.3,+$G(IBCPOL),2))  ;IB*2*497  new group name and group number locations
"RTN","IBCNSP",41,0)
 ;
"RTN","IBCNSP",42,0)
 D INS^IBCNSP0                      ; insurance company
"RTN","IBCNSP",43,0)
 D POLICY^IBCNSP0                   ; plan information
"RTN","IBCNSP",44,0)
 D UR                               ; utilization review info
"RTN","IBCNSP",45,0)
 D EFFECT                           ; effective dates & source of info
"RTN","IBCNSP",46,0)
 D SUBSC^IBCNSP01                   ; subscriber info
"RTN","IBCNSP",47,0)
 D EMP                              ; subscriber's employer info
"RTN","IBCNSP",48,0)
 D PRV^IBCNSP01                     ; subscriber's provider contact info ;IB*2*497
"RTN","IBCNSP",49,0)
 D SPON^IBCNSP0                     ; insured person's info
"RTN","IBCNSP",50,0)
 D ID^IBCNSP01                      ; ins co ID numbers (IB*2*371)
"RTN","IBCNSP",51,0)
 D PLIM                             ; plan coverage limitations
"RTN","IBCNSP",52,0)
 D VER^IBCNSP01                     ; user/verifier/editor info
"RTN","IBCNSP",53,0)
 D CONTACT^IBCNSP0                  ; last insurance contact
"RTN","IBCNSP",54,0)
 D COMMENT                          ; comments - policy & plan
"RTN","IBCNSP",55,0)
 D RIDER^IBCNSP01                   ; policy rider info
"RTN","IBCNSP",56,0)
 ;
"RTN","IBCNSP",57,0)
 S VALMCNT=+$O(^TMP("IBCNSVP",$J,""),-1)
"RTN","IBCNSP",58,0)
 Q
"RTN","IBCNSP",59,0)
 ;
"RTN","IBCNSP",60,0)
COMMENT ; -- Comment region
"RTN","IBCNSP",61,0)
 N START,OFFSET,IBL,IBI
"RTN","IBCNSP",62,0)
 S (START,IBL)=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP",63,0)
 S IB1ST("COMMENT")=START
"RTN","IBCNSP",64,0)
 D SET(START,OFFSET," Comment -- Patient Policy ",IORVON,IORVOFF)
"RTN","IBCNSP",65,0)
 S IBL=IBL+1
"RTN","IBCNSP",66,0)
 D SET(IBL,OFFSET,$S($P(IBCDFND1,U,8)="":"None",1:$P(IBCDFND1,U,8)))
"RTN","IBCNSP",67,0)
 S IBL=IBL+1
"RTN","IBCNSP",68,0)
 D SET(IBL,OFFSET," ")
"RTN","IBCNSP",69,0)
 S IBL=IBL+1
"RTN","IBCNSP",70,0)
 D SET(IBL,OFFSET," Comment -- Group Plan ",IORVON,IORVOFF)
"RTN","IBCNSP",71,0)
 S IBI=0 F  S IBI=$O(^IBA(355.3,+IBCPOL,11,IBI)) Q:IBI<1  D
"RTN","IBCNSP",72,0)
 . S IBL=IBL+1
"RTN","IBCNSP",73,0)
 . D SET(IBL,OFFSET,"  "_$E($G(^IBA(355.3,+IBCPOL,11,IBI,0)),1,80))
"RTN","IBCNSP",74,0)
 . Q
"RTN","IBCNSP",75,0)
 S IBL=IBL+1 D SET(IBL,OFFSET," ")
"RTN","IBCNSP",76,0)
 S IBL=IBL+1 D SET(IBL,OFFSET," ")
"RTN","IBCNSP",77,0)
 Q
"RTN","IBCNSP",78,0)
 ;
"RTN","IBCNSP",79,0)
EFFECT ; -- Effective date region
"RTN","IBCNSP",80,0)
 N START,OFFSET
"RTN","IBCNSP",81,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)-6  ;ib*2*497 lines need to be displayed alongside UR region
"RTN","IBCNSP",82,0)
 S OFFSET=45
"RTN","IBCNSP",83,0)
 D SET(START,OFFSET-4," Effective Dates & Source ",IORVON,IORVOFF)
"RTN","IBCNSP",84,0)
 D SET(START+1,OFFSET," Effective Date: "_$$DAT1^IBOUTL($P(IBCDFND,U,8)))
"RTN","IBCNSP",85,0)
 D SET(START+2,OFFSET,"Expiration Date: "_$$DAT1^IBOUTL($P(IBCDFND,U,4)))
"RTN","IBCNSP",86,0)
 D SET(START+3,OFFSET," Source of Info: "_$$EXPAND^IBTRE(2.312,1.09,$P($G(IBCDFND1),U,9)))
"RTN","IBCNSP",87,0)
 D SET(START+4,OFFSET-4,"Policy Not Billable: "_$S($P($G(^DPT(DFN,.312,IBCDFN,3)),"^",4):"YES",1:"NO"))
"RTN","IBCNSP",88,0)
 Q
"RTN","IBCNSP",89,0)
 ;
"RTN","IBCNSP",90,0)
UR ; -- UR of insurance region
"RTN","IBCNSP",91,0)
 N START,OFFSET
"RTN","IBCNSP",92,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2  ;IB*2*497
"RTN","IBCNSP",93,0)
 D SET(START,OFFSET," Utilization Review Info ",IORVON,IORVOFF)
"RTN","IBCNSP",94,0)
 D SET(START+1,OFFSET,"         Require UR: "_$$EXPAND^IBTRE(355.3,.05,$P(IBCPOLD,U,5)))
"RTN","IBCNSP",95,0)
 D SET(START+2,OFFSET,"   Require Amb Cert: "_$$EXPAND^IBTRE(355.3,.12,$P(IBCPOLD,U,12)))
"RTN","IBCNSP",96,0)
 D SET(START+3,OFFSET,"   Require Pre-Cert: "_$$EXPAND^IBTRE(355.3,.06,$P(IBCPOLD,U,6)))
"RTN","IBCNSP",97,0)
 D SET(START+4,OFFSET,"   Exclude Pre-Cond: "_$$EXPAND^IBTRE(355.3,.07,$P(IBCPOLD,U,7)))
"RTN","IBCNSP",98,0)
 D SET(START+5,OFFSET,"Benefits Assignable: "_$$EXPAND^IBTRE(355.3,.08,$P(IBCPOLD,U,8)))
"RTN","IBCNSP",99,0)
 D SET(START+6,2," ")
"RTN","IBCNSP",100,0)
 Q
"RTN","IBCNSP",101,0)
EMP ; -- Insurance Employer Region   
"RTN","IBCNSP",102,0)
 ; ib*2*497 move employer lines around
"RTN","IBCNSP",103,0)
 N OFFSET,START,IBADD,COL2
"RTN","IBCNSP",104,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP",105,0)
 D SET(START,OFFSET," Subscriber's Employer Information ",IORVON,IORVOFF)
"RTN","IBCNSP",106,0)
 D SET(START+1,OFFSET,$$RJ^XLFSTR(" Employment Status: ",20)_$$EXPAND^IBTRE(2.312,2.11,$P(IBCDFND2,U,11)))
"RTN","IBCNSP",107,0)
 S COL2=START+1
"RTN","IBCNSP",108,0)
 D SET(START+2,OFFSET,$$RJ^XLFSTR("Employer: ",20)_$P(IBCDFND2,U,9))
"RTN","IBCNSP",109,0)
 D SET(START+3,OFFSET,$$RJ^XLFSTR("Street: ",20)_$P(IBCDFND2,U,2)) S IBADD=1
"RTN","IBCNSP",110,0)
 I $P(IBCDFND2,U,3)'="" D SET(START+4,OFFSET,$$RJ^XLFSTR("Street 2: ",20)_$P(IBCDFND2,U,3)) S IBADD=2
"RTN","IBCNSP",111,0)
 I $P(IBCDFND2,U,4)'="" D SET(START+5,OFFSET,$$RJ^XLFSTR("Street 3: ",20)_$P(IBCDFND2,U,4)) S IBADD=3
"RTN","IBCNSP",112,0)
 D SET(START+3+IBADD,OFFSET,$$RJ^XLFSTR("City/State: ",20)_$E($P(IBCDFND2,U,5),1,15)_$S($P(IBCDFND2,U,5)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFND2,U,6),0)),U,2)_" "_$E($P(IBCDFND2,U,7),1,5))
"RTN","IBCNSP",113,0)
 D SET(START+4+IBADD,OFFSET,$$RJ^XLFSTR("Phone: ",20)_$P(IBCDFND2,U,8))
"RTN","IBCNSP",114,0)
 D SET(START+5+IBADD,OFFSET," ")  ; ib*2*497  only 1 blank line to end the section
"RTN","IBCNSP",115,0)
 ;
"RTN","IBCNSP",116,0)
 S START=COL2,OFFSET=40
"RTN","IBCNSP",117,0)
 D SET(START,OFFSET,"Emp Sponsored Plan: "_$S(+$P(IBCDFND2,U,10):"Yes",1:"No"))
"RTN","IBCNSP",118,0)
 D SET(START+1,OFFSET,"Claims to Employer: "_$S(+IBCDFND2:"Yes, Send to Employer",1:"No, Send to Insurance Company"))
"RTN","IBCNSP",119,0)
 D SET(START+2,OFFSET,"   Retirement Date: "_$$DAT1^IBOUTL($P(IBCDFND2,U,12)))
"RTN","IBCNSP",120,0)
 ;
"RTN","IBCNSP",121,0)
EMPQ Q
"RTN","IBCNSP",122,0)
 ;
"RTN","IBCNSP",123,0)
PLIM ; plan coverage limitations/plan limitation category display
"RTN","IBCNSP",124,0)
 N START,END S START=$O(^TMP("IBCNSVP",$J,""),-1)+1
"RTN","IBCNSP",125,0)
 S IB1ST("PLIM")=START
"RTN","IBCNSP",126,0)
 D LIMBLD^IBCNSC41(START,2)
"RTN","IBCNSP",127,0)
 S END=$O(^TMP("IBCNSVP",$J,""),-1)  ; last line constructed
"RTN","IBCNSP",128,0)
 D SET(END+1,2," ")    ; 2 blank lines to end this section
"RTN","IBCNSP",129,0)
 D SET(END+2,2," ")
"RTN","IBCNSP",130,0)
PLIMX ;
"RTN","IBCNSP",131,0)
 Q
"RTN","IBCNSP",132,0)
 ; 
"RTN","IBCNSP",133,0)
HELP ; -- help code
"RTN","IBCNSP",134,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNSP",135,0)
 Q
"RTN","IBCNSP",136,0)
 ;
"RTN","IBCNSP",137,0)
EXIT ; -- exit code
"RTN","IBCNSP",138,0)
 K IBPPOL,VALMQUIT,IBCNS,IBCDFN,IBCPOL,IBCPOLD,IBCPOLD1,IBCPOLD2,IBCPOLDL,IBCDFND,IBCDFND1,IBCDFND2,IBVPCLBG,IBVPCLEN
"RTN","IBCNSP",139,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","IBCNSP",140,0)
 Q
"RTN","IBCNSP",141,0)
 ;
"RTN","IBCNSP",142,0)
EXPND ; -- expand code
"RTN","IBCNSP",143,0)
 Q
"RTN","IBCNSP",144,0)
 ;
"RTN","IBCNSP",145,0)
PPOL ; -- select patient, select policy
"RTN","IBCNSP",146,0)
 I '$D(DFN) D  G:$D(VALMQUIT) PPOLQ
"RTN","IBCNSP",147,0)
 .S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC
"RTN","IBCNSP",148,0)
 .S DFN=+Y
"RTN","IBCNSP",149,0)
 I $G(DFN)<1 S VALMQUIT="" G PPOLQ
"RTN","IBCNSP",150,0)
 ;
"RTN","IBCNSP",151,0)
 I '$O(^DPT(DFN,.312,0)) W !!,"Patient doesn't have Insurance" K DFN G PPOL
"RTN","IBCNSP",152,0)
 ;
"RTN","IBCNSP",153,0)
 S DIC="^DPT("_DFN_",.312,",DIC(0)="AEQMN",DIC("A")="Select Patient Policy: "
"RTN","IBCNSP",154,0)
 D ^DIC I +Y<1 S VALMQUIT=""
"RTN","IBCNSP",155,0)
 G:$D(VALMQUIT) PPOLQ
"RTN","IBCNSP",156,0)
 S IBPPOL="^2^"_DFN_U_+Y_U_$G(^DPT(DFN,.312,+Y,0))
"RTN","IBCNSP",157,0)
PPOLQ K DIC Q
"RTN","IBCNSP",158,0)
 ;
"RTN","IBCNSP",159,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSP",160,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSP",161,0)
 Q
"RTN","IBCNSP",162,0)
 ;
"RTN","IBCNSP",163,0)
SET(LINE,COL,TEXT,ON,OFF) ; -- set display info in array
"RTN","IBCNSP",164,0)
 I '$D(@VALMAR@(LINE,0)) D BLANK(.LINE) S VALMCNT=$G(VALMCNT)+1
"RTN","IBCNSP",165,0)
 D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
"RTN","IBCNSP",166,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBCNSP",167,0)
 W:'(LINE#5) "."
"RTN","IBCNSP",168,0)
 Q
"RTN","IBCNSP",169,0)
 ;
"RTN","IBCNSP0")
0^144^B38008161^B37737467
"RTN","IBCNSP0",1,0)
IBCNSP0 ;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY ;05-MAR-1993
"RTN","IBCNSP0",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,52,85,93,103,137,229,251,363,371,399,438,458,497,516**;21-MAR-94;Build 123
"RTN","IBCNSP0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSP0",4,0)
 ;
"RTN","IBCNSP0",5,0)
 ;
"RTN","IBCNSP0",6,0)
CONTACT ; -- Insurance Contact Information
"RTN","IBCNSP0",7,0)
 N OFFSET,START
"RTN","IBCNSP0",8,0)
 ;
"RTN","IBCNSP0",9,0)
 ; The start of this section is designed to start on the same line
"RTN","IBCNSP0",10,0)
 ; as the User Information section (see VER^IBCNSP01).
"RTN","IBCNSP0",11,0)
 ;
"RTN","IBCNSP0",12,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)-8
"RTN","IBCNSP0",13,0)
 S IB1ST("CONTACT")=START
"RTN","IBCNSP0",14,0)
 S OFFSET=42
"RTN","IBCNSP0",15,0)
 N IBTRC,IBTRCD,IBTCOD,IBCREFN
"RTN","IBCNSP0",16,0)
 S IBTCOD=$O(^IBE(356.11,"ACODE",85,0))
"RTN","IBCNSP0",17,0)
 ;
"RTN","IBCNSP0",18,0)
 S IBTRC=0,IBTRCD="",IBCREFN=""
"RTN","IBCNSP0",19,0)
 F  S IBTRC=$O(^IBT(356.2,"D",DFN,IBTRC)) Q:'IBTRC  D
"RTN","IBCNSP0",20,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,1)),"^",5)'=IBCDFN  ; must be same policy
"RTN","IBCNSP0",21,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,0)),"^",4)'=IBTCOD  ; must be ins. ver. type
"RTN","IBCNSP0",22,0)
 .S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBCREFN=$P($G(^IBT(356.2,+IBTRC,2)),U,1)
"RTN","IBCNSP0",23,0)
 ;
"RTN","IBCNSP0",24,0)
 D SET(START,OFFSET," Insurance Contact (last) ",IORVON,IORVOFF)
"RTN","IBCNSP0",25,0)
 D SET(START+1,OFFSET," Person Contacted: "_$$EXPAND^IBTRE(356.2,.06,$P(IBTRCD,"^",6)))
"RTN","IBCNSP0",26,0)
 D SET(START+2,OFFSET,"Method of Contact: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
"RTN","IBCNSP0",27,0)
 D SET(START+3,OFFSET,"  Contact's Phone: "_$$EXPAND^IBTRE(356.2,.07,$P(IBTRCD,"^",7)))
"RTN","IBCNSP0",28,0)
 D SET(START+4,OFFSET,"    Call Ref. No.: "_$E(IBCREFN,1,19)_$S($L(IBCREFN)>19:"*",1:""))
"RTN","IBCNSP0",29,0)
 D SET(START+5,OFFSET,"     Contact Date: "_$$EXPAND^IBTRE(356.2,.01,$P(IBTRCD,"^")))
"RTN","IBCNSP0",30,0)
 ; no blank lines here because the User Information section is on the
"RTN","IBCNSP0",31,0)
 ; left and it is bigger than this section
"RTN","IBCNSP0",32,0)
 Q
"RTN","IBCNSP0",33,0)
 ;
"RTN","IBCNSP0",34,0)
POLICY ; -- Policy Region
"RTN","IBCNSP0",35,0)
 ; -- if pointer to policy file exists get data from policy file
"RTN","IBCNSP0",36,0)
 ; MRD;IB*2.0*516 - Increased length of Group Name and Type of Plan.
"RTN","IBCNSP0",37,0)
 N OFFSET,START,IBP,IBX,IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA
"RTN","IBCNSP0",38,0)
 S (IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA)=""
"RTN","IBCNSP0",39,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP0",40,0)
 D GPLAN(+IBCPOLD2)
"RTN","IBCNSP0",41,0)
 D SET(START,OFFSET," Plan Information ",IORVON,IORVOFF)
"RTN","IBCNSP0",42,0)
 D SET(START+1,OFFSET,"   Is Group Plan: "_$S($P(IBCPOLD,"^",2)=1:"YES",1:"NO"))
"RTN","IBCNSP0",43,0)
 D SET(START+2,OFFSET,"      Group Name: "_$E($P(IBCPOLDL,"^"),1,60))
"RTN","IBCNSP0",44,0)
 S IBX=3
"RTN","IBCNSP0",45,0)
 I $TR($E($P(IBCPOLDL,"^"),61,80)," ","")'="" D SET(START+IBX,OFFSET,$$REPEAT^XLFSTR(" ",18)_$E($P(IBCPOLDL,"^"),61,80)) S IBX=IBX+1
"RTN","IBCNSP0",46,0)
 D SET(START+IBX,OFFSET,"    Group Number: "_$P(IBCPOLDL,"^",2)) S IBX=IBX+1
"RTN","IBCNSP0",47,0)
 D SET(START+IBX,OFFSET,"             BIN: "_$P(IBCPOLD2,"^",2)) S IBX=IBX+1
"RTN","IBCNSP0",48,0)
 D SET(START+IBX,OFFSET,"             PCN: "_$P(IBCPOLD2,"^",3)) S IBX=IBX+1
"RTN","IBCNSP0",49,0)
 D SET(START+IBX,OFFSET,"    Type of Plan: "_$E($P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^"),1,32)) S IBX=IBX+1
"RTN","IBCNSP0",50,0)
 I $P(IBCPOLD,U,14)]"" D SET(START+IBX,OFFSET,"   Plan Category: "_$$EXPAND^IBTRE(355.3,.14,$P(IBCPOLD,"^",14))) S IBX=IBX+1
"RTN","IBCNSP0",51,0)
 I $P(IBCPOLD,U,15)]"" D SET(START+IBX,OFFSET," Electronic Type: "_$$EXPAND^IBTRE(355.3,.15,$P(IBCPOLD,"^",15))) S IBX=IBX+1
"RTN","IBCNSP0",52,0)
 D SET(START+IBX,OFFSET,"  Plan Filing TF: "_$P(IBCPOLD,"^",13)_$S($P(IBCPOLD,U,16):" ("_$$FTFN^IBCNSU31(IBCPOL)_")",1:"")) S IBX=IBX+1
"RTN","IBCNSP0",53,0)
 ;
"RTN","IBCNSP0",54,0)
 D SET(START+IBX,OFFSET,"      ePharmacy Plan ID: "_IBPLNID) S IBX=IBX+1
"RTN","IBCNSP0",55,0)
 D SET(START+IBX,OFFSET,"    ePharmacy Plan Name: "_IBPLNNM) S IBX=IBX+1
"RTN","IBCNSP0",56,0)
 D SET(START+IBX,OFFSET,"  ePharmacy Natl Status: "_IBPLNNA) S IBX=IBX+1
"RTN","IBCNSP0",57,0)
 D SET(START+IBX,OFFSET," ePharmacy Local Status: "_IBPLNLA) S IBX=IBX+1
"RTN","IBCNSP0",58,0)
 D SET(START+IBX,OFFSET," ")
"RTN","IBCNSP0",59,0)
 ;
"RTN","IBCNSP0",60,0)
 ; -- in case pointer is missing
"RTN","IBCNSP0",61,0)
 I '$G(^IBA(355.3,+$P(IBCDFND,"^",18),0)) D
"RTN","IBCNSP0",62,0)
 .D SET(START+1,OFFSET,"Insurance Number: "_$P(IBCDFND,"^",2))
"RTN","IBCNSP0",63,0)
 .D SET(START+2,OFFSET,"      Group Name: "_$P(IBCDFND,"^",15))
"RTN","IBCNSP0",64,0)
 .D SET(START+3,OFFSET,"    Group Number: "_$P(IBCDFND,"^",3))
"RTN","IBCNSP0",65,0)
 .Q
"RTN","IBCNSP0",66,0)
 Q
"RTN","IBCNSP0",67,0)
 ;
"RTN","IBCNSP0",68,0)
INS ; -- Insurance Co. Region  ;IB*2*497 offset changed to display starting at offset 2
"RTN","IBCNSP0",69,0)
 N OFFSET,START,IBADD,IBCDFNDA,IBCDFNDB
"RTN","IBCNSP0",70,0)
 S START=1,OFFSET=2
"RTN","IBCNSP0",71,0)
 D SET(START,OFFSET," Insurance Company ",IORVON,IORVOFF)
"RTN","IBCNSP0",72,0)
 D SET(START+1,OFFSET,"   Company: "_$P($G(^DIC(36,+IBCDFND,0)),"^"))
"RTN","IBCNSP0",73,0)
 S IBCDFNDA=$G(^DIC(36,+IBCDFND,.11)),IBCDFNDB=$G(^(.13))
"RTN","IBCNSP0",74,0)
 G:IBCDFNDA="" INSQ
"RTN","IBCNSP0",75,0)
 D SET(START+2,OFFSET,"    Street: "_$P(IBCDFNDA,"^")) S IBADD=1
"RTN","IBCNSP0",76,0)
 I $P(IBCDFNDA,"^",2)'="" D SET(START+3,OFFSET,"  Street 2: "_$P(IBCDFNDA,"^",2)) S IBADD=2
"RTN","IBCNSP0",77,0)
 I $P(IBCDFNDA,"^",3)'="" D SET(START+4,OFFSET,"  Street 3: "_$P(IBCDFNDA,"^",3)) S IBADD=3
"RTN","IBCNSP0",78,0)
 D SET(START+2+IBADD,OFFSET,"City/State: "_$E($P(IBCDFNDA,"^",4),1,15)_$S($P(IBCDFNDA,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFNDA,"^",5),0)),"^",2)_" "_$E($P(IBCDFNDA,"^",6),1,5))
"RTN","IBCNSP0",79,0)
 D SET(START+3+IBADD,OFFSET,"Billing Ph: "_$P(IBCDFNDB,"^",2))
"RTN","IBCNSP0",80,0)
 D SET(START+4+IBADD,OFFSET,"Precert Ph: "_$$PHONE^IBCNSC01(IBCDFNDB))
"RTN","IBCNSP0",81,0)
 D SET(START+5+IBADD,OFFSET," ")
"RTN","IBCNSP0",82,0)
 ;
"RTN","IBCNSP0",83,0)
INSQ Q
"RTN","IBCNSP0",84,0)
 ;
"RTN","IBCNSP0",85,0)
SPON ; -- Sponsor (Insured Person) Region  ;IB*2*497  rearrange lines and move all lines into a single column
"RTN","IBCNSP0",86,0)
 N IBC3,IBZIP,START,OFFSET,IBA,DA,DR,DIC,DIQ
"RTN","IBCNSP0",87,0)
 S IBC3=$G(^DPT(DFN,.312,IBCDFN,3))
"RTN","IBCNSP0",88,0)
 S DA=+$P(IBC3,"^",2),DR=.01,DIQ(0)="E",DIC="^DIC(23,",DIQ="IBA" D EN^DIQ1
"RTN","IBCNSP0",89,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP0",90,0)
 D SET(START,OFFSET," Insured Person's Information (use Subscriber Update Action) ",IORVON,IORVOFF)
"RTN","IBCNSP0",91,0)
 D SET(START+1,OFFSET,$$RJ^XLFSTR("Insured's DOB: ",18)_$$DAT3^IBOUTL($P(IBC3,"^")))
"RTN","IBCNSP0",92,0)
 S Y=$P(IBC3,"^",10) D ZIPOUT^VAFADDR S IBZIP=Y
"RTN","IBCNSP0",93,0)
 D SET(START+2,OFFSET,$$RJ^XLFSTR("Str 1: ",18)_$P(IBC3,"^",6))
"RTN","IBCNSP0",94,0)
 D SET(START+3,OFFSET,$$RJ^XLFSTR("Str 2: ",18)_$P(IBC3,"^",7))
"RTN","IBCNSP0",95,0)
 D SET(START+4,OFFSET,$$RJ^XLFSTR("City: ",18)_$P(IBC3,"^",8))
"RTN","IBCNSP0",96,0)
 D SET(START+5,OFFSET,$$RJ^XLFSTR("St/Zip: ",18)_$P($G(^DIC(5,+$P(IBC3,"^",9),0)),"^",2)_"  "_IBZIP)
"RTN","IBCNSP0",97,0)
 D SET(START+6,OFFSET,$$RJ^XLFSTR("SubDiv: ",18)_$P(IBC3,"^",14))
"RTN","IBCNSP0",98,0)
 D SET(START+7,OFFSET,$$RJ^XLFSTR("Country: ",18)_$P(IBC3,"^",13))
"RTN","IBCNSP0",99,0)
 D SET(START+8,OFFSET,$$RJ^XLFSTR("Phone: ",18)_$P(IBC3,"^",11))
"RTN","IBCNSP0",100,0)
 D SET(START+9,OFFSET,$$RJ^XLFSTR("Insured's Sex: ",18)_$$EXTERNAL^DILFD(2.312,3.12,,$P(IBC3,U,12)))
"RTN","IBCNSP0",101,0)
 D SET(START+10,OFFSET,$$RJ^XLFSTR("Insured's Branch: ",18)_$G(IBA(23,DA,.01,"E")))
"RTN","IBCNSP0",102,0)
 D SET(START+11,OFFSET,$$RJ^XLFSTR("Insured's Rank: ",18)_$P(IBC3,"^",3))
"RTN","IBCNSP0",103,0)
 ; blank lines at end of section
"RTN","IBCNSP0",104,0)
 D SET(START+12,2," ")
"RTN","IBCNSP0",105,0)
 D SET(START+13,2," ")
"RTN","IBCNSP0",106,0)
 Q
"RTN","IBCNSP0",107,0)
 ;
"RTN","IBCNSP0",108,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSP0",109,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSP0",110,0)
 Q
"RTN","IBCNSP0",111,0)
 ;
"RTN","IBCNSP0",112,0)
SET(LINE,COL,TEXT,ON,OFF) ; -- set display info in array
"RTN","IBCNSP0",113,0)
 D:'$D(@VALMAR@(LINE,0)) BLANK(.LINE)
"RTN","IBCNSP0",114,0)
 D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
"RTN","IBCNSP0",115,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBCNSP0",116,0)
 W:'(LINE#5) "."
"RTN","IBCNSP0",117,0)
 Q
"RTN","IBCNSP0",118,0)
 ;
"RTN","IBCNSP0",119,0)
GPLAN(IBPLDA) ; get data from PLAN file (#366.03) related to the
"RTN","IBCNSP0",120,0)
 ; GROUP INSURANCE PLAN file (#355.3) and the INSURANCE COMPANY file (#36)
"RTN","IBCNSP0",121,0)
 ; that is associated with the PATIENT
"RTN","IBCNSP0",122,0)
 ; input - IBPLDA - ien of the PLAN file (#366.03)
"RTN","IBCNSP0",123,0)
 N IBPLN0,IBAIEN,IBAPIEN,IBAP0
"RTN","IBCNSP0",124,0)
 S IBPLN0=$G(^IBCNR(366.03,IBPLDA,0)) ;; Q:'$P(IBPLN0,"^",3) ;quit if payer not defined 
"RTN","IBCNSP0",125,0)
 S IBPLNID=$P(IBPLN0,"^"),IBPLNNM=$P(IBPLN0,"^",2)
"RTN","IBCNSP0",126,0)
 S IBAIEN=$O(^IBCNR(366.13,"B","E-PHARM","")) Q:'IBAIEN
"RTN","IBCNSP0",127,0)
 S IBAPIEN=$O(^IBCNR(366.03,IBPLDA,3,"B",IBAIEN,"")) Q:'IBAPIEN
"RTN","IBCNSP0",128,0)
 S IBAP0=$G(^IBCNR(366.03,IBPLDA,3,IBAPIEN,0))
"RTN","IBCNSP0",129,0)
 S IBPLNNA=$S($P(IBAP0,"^",2)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",130,0)
 S IBPLNLA=$S($P(IBAP0,"^",3)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",131,0)
 Q
"RTN","IBCNSP0",132,0)
 ;
"RTN","IBCNSP0",133,0)
 ;IBCNSP0
"RTN","IBCNSP11")
0^80^B11721673^B11695386
"RTN","IBCNSP11",1,0)
IBCNSP11 ;ALB/AAS - INSURANCE MANAGEMENT - EDIT PLAN ;23-JAN-95
"RTN","IBCNSP11",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,85,103,137,251,399,516**;21-MAR-94;Build 123
"RTN","IBCNSP11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSP11",4,0)
 ;
"RTN","IBCNSP11",5,0)
PI ; -- edit plan information from policy edit
"RTN","IBCNSP11",6,0)
 D FULL^VALM1
"RTN","IBCNSP11",7,0)
 N IBCDFN,IBCPOL
"RTN","IBCNSP11",8,0)
 S IBCDFN=$P($G(IBPPOL),"^",4)
"RTN","IBCNSP11",9,0)
 ;
"RTN","IBCNSP11",10,0)
 ; - build a plan on the fly if there is not one present
"RTN","IBCNSP11",11,0)
 S IBCPOL=$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)
"RTN","IBCNSP11",12,0)
 I IBCPOL="" S IBCPOL=$$CHIP^IBCNSU($G(^DPT(DFN,.312,IBCDFN,0))) I IBCPOL D  ;Stuff in file
"RTN","IBCNSP11",13,0)
 .S DIE="^DPT("_DFN_",.312,",DR=".18////"_IBCPOL
"RTN","IBCNSP11",14,0)
 .S DA=IBCDFN,DA(1)=DFN
"RTN","IBCNSP11",15,0)
 .D ^DIE
"RTN","IBCNSP11",16,0)
 .K DA,DR,DIE,DIC
"RTN","IBCNSP11",17,0)
 .Q
"RTN","IBCNSP11",18,0)
 D PIEDIT(IBCPOL,DFN,IBCDFN)
"RTN","IBCNSP11",19,0)
 Q
"RTN","IBCNSP11",20,0)
 ;
"RTN","IBCNSP11",21,0)
PI1 ; -- edit plan information from plan edit
"RTN","IBCNSP11",22,0)
 D FULL^VALM1
"RTN","IBCNSP11",23,0)
 D PIEDIT(IBCPOL,"","")
"RTN","IBCNSP11",24,0)
 Q
"RTN","IBCNSP11",25,0)
 ;
"RTN","IBCNSP11",26,0)
PIEDIT(IBCPOL,IBDFN,IBCDFN) ;Entrypoint if already have the plan (IBCPOL)
"RTN","IBCNSP11",27,0)
 ; -- Edit the plan specific info
"RTN","IBCNSP11",28,0)
 ; The following parameters are only used when editing plan via the patient policy
"RTN","IBCNSP11",29,0)
 ; IBDFN = DFN of patient
"RTN","IBCNSP11",30,0)
 ; IBCDFN = entry # of multiple for policy in .312 nodes of ^DPT
"RTN","IBCNSP11",31,0)
 N DIRUT,DTOUT,DUOUT,DIROUT,IBDIF,DA,DR,DIC,DIE,IBCPOLD,IBGRP,IBTL,IBCNSEH,IBSUB
"RTN","IBCNSP11",32,0)
 D SAVE^IBCNSP3(IBCPOL)
"RTN","IBCNSP11",33,0)
 L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G PIQ
"RTN","IBCNSP11",34,0)
 S IBCNSEH=$S($G(IBDFN):+$G(^IBE(350.9,1,4)),1:0) D POL^IBCNSEH
"RTN","IBCNSP11",35,0)
 S IBCPOLD=$G(^IBA(355.3,IBCPOL,0)),IBGRP=$P(IBCPOLD,"^",2)
"RTN","IBCNSP11",36,0)
 I $P(IBCPOLD,"^",11) W !?2,*7,"Please note that this plan is inactive!",!
"RTN","IBCNSP11",37,0)
 W !,"This plan is currently defined as a",$S(IBGRP:" Group",1:"n Individual")," Plan."
"RTN","IBCNSP11",38,0)
 S IBSUB=$$SUBS^IBCNSJ(+$G(^IBA(355.3,IBCPOL,0)),IBCPOL,0,"",1)
"RTN","IBCNSP11",39,0)
 I 'IBGRP,IBSUB>1 W !!,"This Individual Plan has more than one subscriber!" G CHG
"RTN","IBCNSP11",40,0)
 I IBGRP,IBSUB>1 W !!,"There is more than one subscriber to this Group Plan.  The plan cannot",!,"be changed to an individual plan.",! G PIC
"RTN","IBCNSP11",41,0)
 ;
"RTN","IBCNSP11",42,0)
 ; - switch the plan to group/individual
"RTN","IBCNSP11",43,0)
 S DIR("A")="Do you wish to change this plan to a"_$S(IBGRP:"n Individual",1:" Group")_" Plan"
"RTN","IBCNSP11",44,0)
 S DIR(0)="Y",DIR("?")="Enter 'YES' to change this plan, or enter 'NO' to leave it as is."
"RTN","IBCNSP11",45,0)
 D ^DIR K DIR I $D(DIRUT) G PIQ1
"RTN","IBCNSP11",46,0)
 I 'Y W !,"No change was made.",! G PIC
"RTN","IBCNSP11",47,0)
 ;
"RTN","IBCNSP11",48,0)
CHG ; - change the plan type
"RTN","IBCNSP11",49,0)
 W !,"Changing the plan to a",$S(IBGRP:"n Individual",1:" Group")," Plan... "
"RTN","IBCNSP11",50,0)
 S DIE="^IBA(355.3,",DA=IBCPOL,DR=".02////"_$S(IBGRP:0,1:1)_";.1////"_$S(IBGRP&$G(IBDFN):IBDFN,1:"@")
"RTN","IBCNSP11",51,0)
 D ^DIE K DIE,DA,DR W "done.",!
"RTN","IBCNSP11",52,0)
 ;
"RTN","IBCNSP11",53,0)
PIC ; - edit name/number/type
"RTN","IBCNSP11",54,0)
 S IBTL=$S($P($G(^IBA(355.3,IBCPOL,0)),"^",2):"GROUP",1:"INDIVIDUAL")_" PLAN"
"RTN","IBCNSP11",55,0)
 S DIE="^IBA(355.3,",DA=IBCPOL
"RTN","IBCNSP11",56,0)
 ;IB*2.0*516/baa Use HIPAA Compliant fields - .03 to 2.01 .04 to 2.02
"RTN","IBCNSP11",57,0)
 ;S DR=".03"_IBTL_" NAME;.04"_IBTL_" NUMBER;6.02;6.03;.09;.15;S Y=$S($$CATOK^IBCEMRA($P(^IBA(355.3,IBCPOL,0),U,14)):""@1"",1:""@10"");@1;.14;@10;.16;I '$$FTFV^IBCNSU31(X) S Y=""@13"";.17;@13;.13"
"RTN","IBCNSP11",58,0)
 S DR="2.01"_IBTL_" NAME;2.02"_IBTL_" NUMBER;6.02;6.03;.09;.15;S Y=$S($$CATOK^IBCEMRA($P(^IBA(355.3,IBCPOL,0),U,14)):""@1"",1:""@10"");@1;.14;@10;.16;I '$$FTFV^IBCNSU31(X) S Y=""@13"";.17;@13;.13"
"RTN","IBCNSP11",59,0)
 ;
"RTN","IBCNSP11",60,0)
 D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSP11",61,0)
 D COMP^IBCNSP3(IBCPOL)
"RTN","IBCNSP11",62,0)
 I IBDIF D UPDATE^IBCNSP3(IBCPOL) D:$G(IBDFN) UPDATPT^IBCNSP3(IBDFN,IBCDFN),BLD^IBCNSP D:'$G(IBDFN) INIT^IBCNSC4
"RTN","IBCNSP11",63,0)
PIQ1 L -^IBA(355.3,+IBCPOL)
"RTN","IBCNSP11",64,0)
PIQ S VALMBCK="R"
"RTN","IBCNSP11",65,0)
 Q
"RTN","IBCNSUR")
0^155^B24287477^B24160231
"RTN","IBCNSUR",1,0)
IBCNSUR ;ALB/CPM/CMS - MOVE SUBSCRIBERS TO DIFFERENT PLAN ;09-SEP-96
"RTN","IBCNSUR",2,0)
 ;;2.0;INTEGRATED BILLING;**103,276,506,516**;21-MAR-94;Build 123
"RTN","IBCNSUR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSUR",4,0)
 Q
"RTN","IBCNSUR",5,0)
 ;
"RTN","IBCNSUR",6,0)
EN ; Entry point from option. Main processing loop.
"RTN","IBCNSUR",7,0)
 I $S('($D(DUZ)#2):1,'$D(^VA(200,+DUZ,0)):1,1:0) W !!?3,"The variable DUZ must be set to an active user code before continuing." G ENQ
"RTN","IBCNSUR",8,0)
 W !!,?5,"MOVE SUBSCRIBERS OF ONE PLAN TO ANOTHER PLAN"
"RTN","IBCNSUR",9,0)
 W !,?5,"This option may be used to move subscribers from a selected Plan"
"RTN","IBCNSUR",10,0)
 W !,?5,"to a different Plan. The plans may be associated with the same"
"RTN","IBCNSUR",11,0)
 W !,?5,"Insurance Company or a different one. Plan and Annual Benefit"
"RTN","IBCNSUR",12,0)
 W !,?5,"information may be moved as well. Users of this option should"
"RTN","IBCNSUR",13,0)
 W !,?5,"be knowledgeable of the VistA Patient Insurance management options."
"RTN","IBCNSUR",14,0)
 W !
"RTN","IBCNSUR",15,0)
 W !,?5,"This option also gives the user the option to expire the old plan or"
"RTN","IBCNSUR",16,0)
 W !,?5,"replace it completely in the patient insurance profile.  The reason"
"RTN","IBCNSUR",17,0)
 W !,?5,"to expire the old plan is intended for use when Insurance groups change"
"RTN","IBCNSUR",18,0)
 W !,?5,"PBMs for processing electronic Pharmacy claims.  By leaving the old"
"RTN","IBCNSUR",19,0)
 W !,?5,"plan information intact (i.e. do not replace), the user will be able"
"RTN","IBCNSUR",20,0)
 W !,?5,"to monitor PBM changes  that affect the electronic Pharmacy claims."
"RTN","IBCNSUR",21,0)
 ;
"RTN","IBCNSUR",22,0)
 W !!,$TR($J("",75)," ","-")
"RTN","IBCNSUR",23,0)
 S IBSTOP=0 F  D PROC^IBCNSUR1 Q:IBSTOP
"RTN","IBCNSUR",24,0)
ENQ K IBSTOP
"RTN","IBCNSUR",25,0)
 Q
"RTN","IBCNSUR",26,0)
 ;
"RTN","IBCNSUR",27,0)
PROC ; - Process continuation from IBCNSUR1. 
"RTN","IBCNSUR",28,0)
 ; - display old plan attributes; allow new plan to be edited
"RTN","IBCNSUR",29,0)
 D PL^IBCNSUR2
"RTN","IBCNSUR",30,0)
 R !!,?10,"Press any key to continue.    ",IBX:DTIME
"RTN","IBCNSUR",31,0)
 ;
"RTN","IBCNSUR",32,0)
 ; - display coverage limitations; allow add/edit of plan 2 limitations
"RTN","IBCNSUR",33,0)
 D LIM^IBCNSUR2
"RTN","IBCNSUR",34,0)
 ;
"RTN","IBCNSUR",35,0)
 I $P($G(^IBA(355.3,IBP1,0)),"^",11) W !!,"Please note that ",IBC1N,"'s",!,"plan, subscribers were moved from, is already inactive." G PROCDP
"RTN","IBCNSUR",36,0)
 ;
"RTN","IBCNSUR",37,0)
 ; - does the user wish to inactivate the old plan?
"RTN","IBCNSUR",38,0)
 W !! S DIR(0)="Y",DIR("A")="Do you wish to inactivate "_IBC1N_"'s plan subscribers were moved from"
"RTN","IBCNSUR",39,0)
 S DIR("?")="If you wish to inactivate the old plan, enter 'Yes' - otherwise, enter 'No.'"
"RTN","IBCNSUR",40,0)
 D ^DIR K DIR I 'Y W !," <The old plan is still active>" G PROCQ
"RTN","IBCNSUR",41,0)
 ;
"RTN","IBCNSUR",42,0)
 D IRACT^IBCNSJ(IBP1,1) W !!,"The plan has been inactivated."
"RTN","IBCNSUR",43,0)
 ;
"RTN","IBCNSUR",44,0)
PROCDP ; - does the user wish to delete the old plan?
"RTN","IBCNSUR",45,0)
 W !! S DIR(0)="Y",DIR("A")="Do you wish to delete this plan"
"RTN","IBCNSUR",46,0)
 S DIR("?")="If you wish to delete the old plan, enter 'Yes' - otherwise, enter 'No.'"
"RTN","IBCNSUR",47,0)
 D ^DIR K DIR I 'Y G PROCQ
"RTN","IBCNSUR",48,0)
 ;
"RTN","IBCNSUR",49,0)
 D DEL^IBCNSJ(IBP1) W !!,"The plan has been deleted."
"RTN","IBCNSUR",50,0)
 ;
"RTN","IBCNSUR",51,0)
PROCQ Q
"RTN","IBCNSUR",52,0)
 ;
"RTN","IBCNSUR",53,0)
 ;
"RTN","IBCNSUR",54,0)
SEL(IBNP) ; Select a company and plan.
"RTN","IBCNSUR",55,0)
 ;   Input:     IBNP  --  If set to 1, allows adding a new plan and
"RTN","IBCNSUR",56,0)
 ;                    --  Screen Inactive Companies
"RTN","IBCNSUR",57,0)
 ;                    --  If set to 0, must have at least one group plan
"RTN","IBCNSUR",58,0)
 ;  Output:   IBCNS  --  Pointer to selected company in file #36
"RTN","IBCNSUR",59,0)
 ;           IBPLAN  --  Pointer to selected/added plan in file #355.3
"RTN","IBCNSUR",60,0)
 ;           IBQUIT  --  Set to 1 if the user wants to quit.
"RTN","IBCNSUR",61,0)
 ;
"RTN","IBCNSUR",62,0)
 N X,Y K DIC,DIR
"RTN","IBCNSUR",63,0)
 S DIC(0)="QEAMZ",DIC="^DIC(36,"
"RTN","IBCNSUR",64,0)
 I 'IBNP S DIC("S")="I $$ANYGP^IBCNSJ(+Y,0,1)"
"RTN","IBCNSUR",65,0)
 I IBNP S DIC("S")="I '$P($G(^DIC(36,+Y,0)),U,5)"
"RTN","IBCNSUR",66,0)
 S DIC("A")="Select INSURANCE COMPANY: "
"RTN","IBCNSUR",67,0)
 D ^DIC K DIC S IBCNS=+Y
"RTN","IBCNSUR",68,0)
 I Y<0 W "   <No Insurance Company selected>" S IBQUIT=1 G SELQ
"RTN","IBCNSUR",69,0)
 ;
"RTN","IBCNSUR",70,0)
 ; - if a new plan may be added, allow adding
"RTN","IBCNSUR",71,0)
 I IBNP D  I (IBPLAN)!(IBQUIT) G SELQ
"RTN","IBCNSUR",72,0)
 .W !!,"You may add a new Plan at this time or select an existing Plan."
"RTN","IBCNSUR",73,0)
 .; IB*2.0*506 added IBKEY parameter (4th) to the NEW^IBCNSJ3 call (check user's security keys)
"RTN","IBCNSUR",74,0)
 .D NEW^IBCNSJ3(IBCNS,.IBPLAN,1,1)
"RTN","IBCNSUR",75,0)
 .I 'IBPLAN,'$$ANYGP^IBCNSJ(+IBCNS,0,1) W !!,*7,"Insurance Company receiving subscribers must have a Plan." S IBQUIT=1
"RTN","IBCNSUR",76,0)
 ;
"RTN","IBCNSUR",77,0)
 ; - see if user wants to select the plan
"RTN","IBCNSUR",78,0)
 W !!,"You may select an existing Plan from a list or enter a specific Plan.",!
"RTN","IBCNSUR",79,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you wish to enter a specific plan"
"RTN","IBCNSUR",80,0)
 S DIR("?")="The look-up facility to select a group plan has been enhanced to use the List Manager.  Enter 'NO' if you wish to select a plan from this look-up, or 'YES' to directly enter a plan."
"RTN","IBCNSUR",81,0)
 D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 G SELQ
"RTN","IBCNSUR",82,0)
 ;
"RTN","IBCNSUR",83,0)
 ; - invoke the plan look-up
"RTN","IBCNSUR",84,0)
 I 'Y D  G SELQ
"RTN","IBCNSUR",85,0)
 .W "   ..." S IBPLAN=0 D LKP^IBCNSU2(IBCNS,0,0,.IBPLAN,0,1)
"RTN","IBCNSUR",86,0)
 .I 'IBPLAN W !!,*7,"*  No plan selected!",! S IBQUIT=1
"RTN","IBCNSUR",87,0)
 ;
"RTN","IBCNSUR",88,0)
 ; - allow a FileMan look-up
"RTN","IBCNSUR",89,0)
 ; MRD;IB*2.0*516 - Display new Group Name and Number fields.
"RTN","IBCNSUR",90,0)
 S DIC("A")="Select a GROUP PLAN: "
"RTN","IBCNSUR",91,0)
 S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I +^(0)=IBCNS,$P(^(0),U,2)"
"RTN","IBCNSUR",92,0)
 ;S DIC("W")="N IBX S IBX=$G(^(0)) W ""   Name: "",$E($S($P(IBX,U,3)]"""":$P(IBX,U,3),1:""<none>"")_$J("""",20),1,20),""   Number: "",$S($P(IBX,U,4)]"""":$P(IBX,U,4),1:""<none>"")"
"RTN","IBCNSUR",93,0)
 S DIC("W")="N IBX S IBX=$G(^(2)) W ""   Name: "",$E($S($P(IBX,U,1)]"""":$P(IBX,U,1),1:""<none>"")_$J("""",20),1,20),""   Number: "",$E($S($P(IBX,U,2)]"""":$P(IBX,U,2),1:""<none>""),1,14)"
"RTN","IBCNSUR",94,0)
 D ^DIC K DIC S IBPLAN=+Y
"RTN","IBCNSUR",95,0)
 I Y<0 W !!,*7,"*  No plan selected!",! S IBQUIT=1
"RTN","IBCNSUR",96,0)
 ;
"RTN","IBCNSUR",97,0)
SELQ K DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCNSUR",98,0)
 Q
"RTN","IBCNSUR1")
0^81^B57694333^B56652391
"RTN","IBCNSUR1",1,0)
IBCNSUR1 ;ALB/CPM/CMS - MOVE SUBSCRIBERS TO DIFFERENT PLAN (CON'T) ;09-SEP-96
"RTN","IBCNSUR1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,225,276,516**;21-MAR-94;Build 123
"RTN","IBCNSUR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSUR1",4,0)
 Q
"RTN","IBCNSUR1",5,0)
 ;
"RTN","IBCNSUR1",6,0)
 ;
"RTN","IBCNSUR1",7,0)
PROC ; - Top of processing from IBCNSUR
"RTN","IBCNSUR1",8,0)
 ; Move subscribers to another company's insurance plan.
"RTN","IBCNSUR1",9,0)
 N IBCNS,IBPLAN,IBC1,IBC1N,IBC1X,IBC2,IBC2N,IBC2X,IBCPOL
"RTN","IBCNSUR1",10,0)
 N IBP1,IBP1N,IBP1X,IBP2,IBP2N,IBP2X,IBQ,IBQUIT,IBSUB,DFN,IBCDFN
"RTN","IBCNSUR1",11,0)
 N IBXXX,IBX,IBDAT,IBCDFN1,IBNP,IBAB,IBI,IBIAB,IBCAB,IBW,IBST
"RTN","IBCNSUR1",12,0)
 N DIC,DIE,DR,DA,D0,DIR,DIRUT,DIROUT,DTOUT,DUOUT,I,X,Y,DIK,DLAYGO
"RTN","IBCNSUR1",13,0)
 N IBSPLIT,IBEFFDT,IBEXPDT,REF,IBLN
"RTN","IBCNSUR1",14,0)
 ;
"RTN","IBCNSUR1",15,0)
 K ^TMP($J,"IBCNSUR")  ; subscribers
"RTN","IBCNSUR1",16,0)
 K ^TMP($J,"IBCNSUR1") ; e-mail bulletin
"RTN","IBCNSUR1",17,0)
 S REF=$NA(^TMP($J,"IBCNSUR1")),IBLN=0
"RTN","IBCNSUR1",18,0)
 ;
"RTN","IBCNSUR1",19,0)
 S IBQUIT=0
"RTN","IBCNSUR1",20,0)
 W !!!,"=====================",!,"MOVE SUBSCRIBERS FROM",!,"====================="
"RTN","IBCNSUR1",21,0)
 W !!,"Select the Insurance Company and Plan to move subscribers FROM.",!
"RTN","IBCNSUR1",22,0)
 ;
"RTN","IBCNSUR1",23,0)
 ; - select company/plan for subscribers to be moved
"RTN","IBCNSUR1",24,0)
 S IBQUIT=0
"RTN","IBCNSUR1",25,0)
 D SEL^IBCNSUR(0)
"RTN","IBCNSUR1",26,0)
 I IBQUIT S IBSTOP=1 G PROCQ
"RTN","IBCNSUR1",27,0)
 ;
"RTN","IBCNSUR1",28,0)
 ; - collect the plan subscribers
"RTN","IBCNSUR1",29,0)
 S IBC1=IBCNS,IBP1=IBPLAN
"RTN","IBCNSUR1",30,0)
 W !!,"Collecting Subscribers ..."
"RTN","IBCNSUR1",31,0)
 S IBSUB=$$SUBS^IBCNSJ(IBC1,IBP1,0,"^TMP($J,""IBCNSUR"")")
"RTN","IBCNSUR1",32,0)
 I 'IBSUB W !!,?5,*7,"*  This plan has no subscribers!" S IBQUIT=1 G PROCQ
"RTN","IBCNSUR1",33,0)
 W !!,"This plan has ",+IBSUB," subscribers. All subscribers will be moved."
"RTN","IBCNSUR1",34,0)
 ;  
"RTN","IBCNSUR1",35,0)
 ; - select company/plan to move subscribers
"RTN","IBCNSUR1",36,0)
 W !!!,"MOVE SUBSCRIBERS TO"
"RTN","IBCNSUR1",37,0)
 W !!,"Select the Insurance Company and Plan to move subscribers TO.",!
"RTN","IBCNSUR1",38,0)
 D SEL^IBCNSUR(1)
"RTN","IBCNSUR1",39,0)
 I IBQUIT G PROCQ
"RTN","IBCNSUR1",40,0)
 I $P($G(^DIC(36,IBCNS,0)),"^",5) W !!,*7,"You must move the subscribers to an active insurance company!" G PROCQ
"RTN","IBCNSUR1",41,0)
 S IBC2=IBCNS,IBP2=IBPLAN
"RTN","IBCNSUR1",42,0)
 ;
"RTN","IBCNSUR1",43,0)
 ; - make sure not moving the subscribers to their current plan
"RTN","IBCNSUR1",44,0)
 I (IBC1=IBC2)&(IBP1=IBP2) W !!,*7,"You must move the subscribers to a different plan!" G PROCQ
"RTN","IBCNSUR1",45,0)
 ;
"RTN","IBCNSUR1",46,0)
 ; - set name and plan number
"RTN","IBCNSUR1",47,0)
 S IBC1N=$P($G(^DIC(36,+IBC1,0)),U,1)
"RTN","IBCNSUR1",48,0)
 ;IB*2.0*516/TAZ - Retrieve data from HIPAA compliant fields
"RTN","IBCNSUR1",49,0)
 ;S IBP1N=$P($G(^IBA(355.3,+IBP1,0)),U,3,4),IBP1X=$P(IBP1N,U,2)  ; 516 - baa
"RTN","IBCNSUR1",50,0)
 S IBP1N=$$GET1^DIQ(355.3,+IBP1,2.01)_U_$$GET1^DIQ(355.3,+IBP1,2.02),IBP1X=$P(IBP1N,U,2)
"RTN","IBCNSUR1",51,0)
 S IBP1X=$S(IBP1X]"":IBP1X,1:"<Not Specified>")
"RTN","IBCNSUR1",52,0)
 S IBC2N=$P($G(^DIC(36,+IBC2,0)),U,1)
"RTN","IBCNSUR1",53,0)
 ;IB*2.0*516/TAZ - Retrieve data from HIPAA compliant fields
"RTN","IBCNSUR1",54,0)
 ;S IBP2N=$P($G(^IBA(355.3,+IBP2,0)),U,3,4),IBP2X=$P(IBP2N,U,2)  ; 516 - baa
"RTN","IBCNSUR1",55,0)
 S IBP2N=$$GET1^DIQ(355.3,+IBP2,2.01)_U_$$GET1^DIQ(355.3,+IBP2,2.02),IBP2X=$P(IBP2N,U,2)
"RTN","IBCNSUR1",56,0)
 S IBP2X=$S(IBP2X]"":IBP2X,1:"<Not Specified>")
"RTN","IBCNSUR1",57,0)
 S IBP2N=$S($P(IBP2N,U,1)="":"<Not Specified>",1:$P(IBP2N,U,1))
"RTN","IBCNSUR1",58,0)
 ;
"RTN","IBCNSUR1",59,0)
 ; - ask if they want to delete the old insurance
"RTN","IBCNSUR1",60,0)
 S DIR(0)="Y",DIR("A")="Do you want to EXPIRE the old plan by entering the new plan Effective date"
"RTN","IBCNSUR1",61,0)
 S DIR("B")="NO"
"RTN","IBCNSUR1",62,0)
 S DIR("?")="If you wish to apply Effective Date, enter 'Yes' - otherwise, enter 'No'"
"RTN","IBCNSUR1",63,0)
 W ! D ^DIR K DIR
"RTN","IBCNSUR1",64,0)
 I $D(DIRUT) G PROCQ
"RTN","IBCNSUR1",65,0)
 S IBSPLIT=''Y
"RTN","IBCNSUR1",66,0)
 ; if yes then
"RTN","IBCNSUR1",67,0)
 ; - ask the effective date of the new insurance
"RTN","IBCNSUR1",68,0)
 I IBSPLIT D  I IBQ G PROCQ
"RTN","IBCNSUR1",69,0)
 . S IBQ=0
"RTN","IBCNSUR1",70,0)
 . S %DT="AEX",%DT("A")="Effective Date of the new Plan: "
"RTN","IBCNSUR1",71,0)
 . W ! D ^%DT K %DT I Y'>0 S IBQ=1 Q
"RTN","IBCNSUR1",72,0)
 . S IBEFFDT=$P(+Y,".")
"RTN","IBCNSUR1",73,0)
 . S IBEXPDT=$$FMADD^XLFDT(IBEFFDT,-1)
"RTN","IBCNSUR1",74,0)
 ;
"RTN","IBCNSUR1",75,0)
 ; - ask are they sure
"RTN","IBCNSUR1",76,0)
 W !!!,"You selected to move ",IBSUB," subscribers and "
"RTN","IBCNSUR1",77,0)
 W $S(IBSPLIT:"EXPIRE",1:"REPLACE")," the old plan in the patient",!,"profile.",!
"RTN","IBCNSUR1",78,0)
 W !?5,"FROM Insurance Company ",IBC1N
"RTN","IBCNSUR1",79,0)
 W !?10,"Plan Name ",IBP1N,"     Number ",IBP1X
"RTN","IBCNSUR1",80,0)
 W !?5,"TO Insurance Company ",IBC2N
"RTN","IBCNSUR1",81,0)
 W !?10,"Plan Name ",IBP2N,"     Number ",IBP2X
"RTN","IBCNSUR1",82,0)
 I IBSPLIT D
"RTN","IBCNSUR1",83,0)
 . W !?5,"BY switching to the new Insurance/Plan"
"RTN","IBCNSUR1",84,0)
 . W !?10,"with Effective Date ",$$DAT2^IBOUTL(IBEFFDT)
"RTN","IBCNSUR1",85,0)
 W !
"RTN","IBCNSUR1",86,0)
 W !,"Please Note that the old insurance group plan will be "
"RTN","IBCNSUR1",87,0)
 W $S(IBSPLIT:"EXPIRED",1:"REPLACED")," in the patient",!,"profile!",!
"RTN","IBCNSUR1",88,0)
 ;
"RTN","IBCNSUR1",89,0)
 S DIR(0)="Y",DIR("A")="Okay to continue"
"RTN","IBCNSUR1",90,0)
 S DIR("?")="If you wish to move these subscribers, enter 'Yes' - otherwise, enter 'No.'"
"RTN","IBCNSUR1",91,0)
 W ! D ^DIR K DIR
"RTN","IBCNSUR1",92,0)
 I 'Y W !!,?10,"<Okay, nothing moved>" G PROCQ
"RTN","IBCNSUR1",93,0)
 ;
"RTN","IBCNSUR1",94,0)
 ; - should annual benefits be moved?
"RTN","IBCNSUR1",95,0)
 S (IBAB,IBQ)=0
"RTN","IBCNSUR1",96,0)
 I $D(^IBA(355.4,"APY",IBP1)),'$D(^IBA(355.4,"APY",IBP2)) D  G:IBQ PROCQ
"RTN","IBCNSUR1",97,0)
 .S DIR(0)="Y",DIR("A")="Okay to add "_IBC1N_"'s plan Annual Benefits to "_IBC2N_"'s plan"
"RTN","IBCNSUR1",98,0)
 .S DIR("?")="If you wish to move these Annual Benefits, enter 'Yes' - otherwise, enter 'No.'"
"RTN","IBCNSUR1",99,0)
 .W ! D ^DIR K DIR I $D(DIRUT)!$D(DIROUT)!$D(DUOUT)!$D(DTOUT) S IBQ=1
"RTN","IBCNSUR1",100,0)
 .S:Y IBAB=1 K DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCNSUR1",101,0)
 ;
"RTN","IBCNSUR1",102,0)
 ; - copy annual benefits over to the new plan
"RTN","IBCNSUR1",103,0)
 I IBAB D
"RTN","IBCNSUR1",104,0)
 .S IBI=0 F  S IBI=$O(^IBA(355.4,"C",IBP1,IBI)) Q:'IBI  D
"RTN","IBCNSUR1",105,0)
 ..S IBIAB=$G(^IBA(355.4,IBI,0)) Q:'IBIAB
"RTN","IBCNSUR1",106,0)
 ..S X=+IBIAB,DIC(0)="L",DLAYGO=355.4,DIC="^IBA(355.4,"
"RTN","IBCNSUR1",107,0)
 ..K DD,DO D FILE^DICN Q:+Y<0  S IBCAB=+Y
"RTN","IBCNSUR1",108,0)
 ..S $P(^IBA(355.4,IBCAB,0),"^",2)=IBP2
"RTN","IBCNSUR1",109,0)
 ..S $P(^IBA(355.4,IBCAB,0),"^",5,6)=$P(IBIAB,"^",5,6)
"RTN","IBCNSUR1",110,0)
 ..F I=1:1:5 I $G(^IBA(355.4,IBI,I))]"" S ^IBA(355.4,IBCAB,I)=^(I)
"RTN","IBCNSUR1",111,0)
 ..S DA=IBCAB,DIK="^IBA(355.4," D IX1^DIK,EDUP^IBCNSA2
"RTN","IBCNSUR1",112,0)
 ;
"RTN","IBCNSUR1",113,0)
 ; - should plan comments be copied over to the new plan?
"RTN","IBCNSUR1",114,0)
 S (IBAB,IBQ)=0
"RTN","IBCNSUR1",115,0)
 I $P($G(^IBA(355.3,IBP1,11,0)),U,4),'$P($G(^IBA(355.3,IBP2,11,0)),U,4) D  G:IBQ PROCQ
"RTN","IBCNSUR1",116,0)
 .S DIR(0)="Y"
"RTN","IBCNSUR1",117,0)
 .S DIR("A")="Okay to add "_IBC1N_"'s Comments to "_IBC2N_"'s plan"
"RTN","IBCNSUR1",118,0)
 .S DIR("?")="If you wish to move these Comments, enter 'Yes'"
"RTN","IBCNSUR1",119,0)
 .S DIR("?")=DIR("?")_" - otherwise, ente"
"RTN","IBCNSUR1",120,0)
 .W ! D ^DIR K DIR I $D(DIRUT)!$D(DIROUT)!$D(DUOUT)!$D(DTOUT) S IBQ=1
"RTN","IBCNSUR1",121,0)
 .S:Y IBAB=1 K DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCNSUR1",122,0)
 ;
"RTN","IBCNSUR1",123,0)
 ; - copy plan comments over to the new plan
"RTN","IBCNSUR1",124,0)
 I IBAB D
"RTN","IBCNSUR1",125,0)
 .S DIC="^IBA(355.3,"_IBP2_",11,",DIC(0)="L",DIC("P")=355.311
"RTN","IBCNSUR1",126,0)
 .S IBI=0 F  S IBI=$O(^IBA(355.3,IBP1,11,IBI)) Q:'IBI  D
"RTN","IBCNSUR1",127,0)
 ..I $G(^IBA(355.3,IBP1,11,IBI,0))]"" S X=^(0) D FILE^DICN
"RTN","IBCNSUR1",128,0)
 ;
"RTN","IBCNSUR1",129,0)
 ; The MailMan bulletin header
"RTN","IBCNSUR1",130,0)
 D BHEAD^IBCNSUR3
"RTN","IBCNSUR1",131,0)
 ;
"RTN","IBCNSUR1",132,0)
 ; - move the subscribers to the new plan
"RTN","IBCNSUR1",133,0)
 W !!,"Moving subscribers "
"RTN","IBCNSUR1",134,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"IBCNSUR",DFN)) Q:'DFN  D
"RTN","IBCNSUR1",135,0)
 .S IBCDFN=0 F  S IBCDFN=$O(^TMP($J,"IBCNSUR",DFN,IBCDFN)) Q:'IBCDFN  D
"RTN","IBCNSUR1",136,0)
 ..Q:$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)'=IBP1
"RTN","IBCNSUR1",137,0)
 ..;
"RTN","IBCNSUR1",138,0)
 ..D ADS^IBCNSUR3(DFN,IBCDFN)
"RTN","IBCNSUR1",139,0)
 ..I 'IBSPLIT D MODIFINS(IBC2,IBP2,DFN,IBCDFN) ;regular mode
"RTN","IBCNSUR1",140,0)
 ..I IBSPLIT D SPLITINS(IBC2,IBP2,DFN,IBCDFN,IBEFFDT,IBEXPDT)
"RTN","IBCNSUR1",141,0)
 ..; - merge previous benefits used
"RTN","IBCNSUR1",142,0)
 ..S IBDAT="" F  S IBDAT=$O(^IBA(355.5,"APPY",DFN,IBP1,IBDAT)) Q:IBDAT=""  D
"RTN","IBCNSUR1",143,0)
 ...S IBCDFN1=0 F  S IBCDFN1=$O(^IBA(355.5,"APPY",DFN,IBP1,IBDAT,IBCDFN1)) Q:'IBCDFN1  I IBCDFN1=IBCDFN S IBBU=$O(^(IBCDFN1,0)) D
"RTN","IBCNSUR1",144,0)
 ....I '$D(^IBA(355.4,"APY",IBP2,IBDAT)) D DBU^IBCNSJ(IBBU) Q
"RTN","IBCNSUR1",145,0)
 ....D MERG^IBCNSJ13(IBP2,IBBU)
"RTN","IBCNSUR1",146,0)
 ..;
"RTN","IBCNSUR1",147,0)
 ..W "."
"RTN","IBCNSUR1",148,0)
 ;
"RTN","IBCNSUR1",149,0)
 W !!,"Done.  All subscribers were moved as requested!",!
"RTN","IBCNSUR1",150,0)
 D DONE^IBCNSUR3
"RTN","IBCNSUR1",151,0)
 W !,"The Bulletin was sent to you and members of 'IB NEW INSURANCE' Mail Group.",!
"RTN","IBCNSUR1",152,0)
 R !!,?10,"Press any key to continue.  ",IBX:DTIME
"RTN","IBCNSUR1",153,0)
 ;
"RTN","IBCNSUR1",154,0)
 ; - finish processing in IBCNSUR (keep RSIZE down)
"RTN","IBCNSUR1",155,0)
 D PROC^IBCNSUR
"RTN","IBCNSUR1",156,0)
 ;
"RTN","IBCNSUR1",157,0)
 ;
"RTN","IBCNSUR1",158,0)
PROCQ ;I 'IBSTOP S IBQUIT=0 D ASK^IBCOMC2 I IBQUIT=1 S IBSTOP=1
"RTN","IBCNSUR1",159,0)
 K ^TMP($J,"IBCNSUR")
"RTN","IBCNSUR1",160,0)
 K ^TMP($J,"IBCNSUR1")
"RTN","IBCNSUR1",161,0)
 Q
"RTN","IBCNSUR1",162,0)
 ;
"RTN","IBCNSUR1",163,0)
 ; modify the ins plan
"RTN","IBCNSUR1",164,0)
MODIFINS(IBC2,IBP2,DFN,IBCDFN) ;
"RTN","IBCNSUR1",165,0)
 N IBXXX,DIE,DA,DR,IBX
"RTN","IBCNSUR1",166,0)
 ; - change the policy company
"RTN","IBCNSUR1",167,0)
 S IBXXX='$G(^DPT(DFN,.312,IBCDFN,1))
"RTN","IBCNSUR1",168,0)
 S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBCDFN,DR=".01///`"_IBC2 D ^DIE K DIE,DA,DR
"RTN","IBCNSUR1",169,0)
 I IBXXX S $P(^DPT(DFN,.312,IBCDFN,1),"^",1,2)="^"
"RTN","IBCNSUR1",170,0)
 ;
"RTN","IBCNSUR1",171,0)
 ; - repoint Insurance Reviews to the new company
"RTN","IBCNSUR1",172,0)
 S IBX=0 F  S IBX=$O(^IBT(356.2,"D",DFN,IBX)) Q:'IBX  I $P($G(^IBT(356.2,IBX,1)),"^",5)=IBCDFN S DIE="^IBT(356.2,",DA=IBX,DR=".08////"_IBC2 D ^DIE K DIE,DA,DR
"RTN","IBCNSUR1",173,0)
 ;
"RTN","IBCNSUR1",174,0)
 ; - change the policy plan
"RTN","IBCNSUR1",175,0)
 D SWPL^IBCNSJ13(IBP2,DFN,IBCDFN)
"RTN","IBCNSUR1",176,0)
 Q
"RTN","IBCNSUR1",177,0)
 ;
"RTN","IBCNSUR1",178,0)
 ;
"RTN","IBCNSUR1",179,0)
 ;
"RTN","IBCNSUR1",180,0)
 ; change the ins plan effective IBEFFDT
"RTN","IBCNSUR1",181,0)
SPLITINS(IBC2,IBP2,DFN,IBCDFN,IBEFFDT,IBEXPDT) ;
"RTN","IBCNSUR1",182,0)
 N IBX,IBZ,IBZ1,IBRT,IBI,IBIEN,IBCDFN2,IBERR,DIK,DA,DIE,DR,DGRUGA08
"RTN","IBCNSUR1",183,0)
 S IBZ=$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNSUR1",184,0)
 S IBZ1=$G(^DPT(DFN,.312,IBCDFN,1))
"RTN","IBCNSUR1",185,0)
 ; - ignore if the old plan expired
"RTN","IBCNSUR1",186,0)
 I $P(IBZ,U,4),$P(IBZ,U,4)<IBEFFDT Q
"RTN","IBCNSUR1",187,0)
 ; - if the ins is effective later - no need to split
"RTN","IBCNSUR1",188,0)
 I $P(IBZ,U,8),$P(IBZ,U,8)'<IBEFFDT D MODIFINS(IBC2,IBP2,DFN,IBCDFN) Q
"RTN","IBCNSUR1",189,0)
 ;
"RTN","IBCNSUR1",190,0)
 S DGRUGA08=1 ; Disable HL7 triggered by 2.312/3 and 2.312/8
"RTN","IBCNSUR1",191,0)
 ; - create the new insurance record for the DFN (clone)
"RTN","IBCNSUR1",192,0)
 S IBI="+1,"_DFN_","
"RTN","IBCNSUR1",193,0)
 ; - add a record
"RTN","IBCNSUR1",194,0)
 S IBRT(2.312,IBI,.01)=IBC2
"RTN","IBCNSUR1",195,0)
 D UPDATE^DIE("","IBRT","IBIEN","IBERR")
"RTN","IBCNSUR1",196,0)
 I $D(IBERR) Q  ; error
"RTN","IBCNSUR1",197,0)
 I '$G(IBIEN(1)) Q  ; error
"RTN","IBCNSUR1",198,0)
 S IBCDFN2=+IBIEN(1)
"RTN","IBCNSUR1",199,0)
 ; - clone the insurance data
"RTN","IBCNSUR1",200,0)
 M ^DPT(DFN,.312,IBCDFN2)=^DPT(DFN,.312,IBCDFN)
"RTN","IBCNSUR1",201,0)
 S $P(^DPT(DFN,.312,IBCDFN2,0),U,1)=IBC2
"RTN","IBCNSUR1",202,0)
 S $P(^DPT(DFN,.312,IBCDFN2,0),U,8)=IBEFFDT
"RTN","IBCNSUR1",203,0)
 ; - now reindex
"RTN","IBCNSUR1",204,0)
 S DA(1)=DFN,DA=IBCDFN2,DIK="^DPT("_DFN_",.312,"
"RTN","IBCNSUR1",205,0)
 D IX1^DIK
"RTN","IBCNSUR1",206,0)
 ; - change the policy plan
"RTN","IBCNSUR1",207,0)
 D SWPL^IBCNSJ13(IBP2,DFN,IBCDFN2)
"RTN","IBCNSUR1",208,0)
 ; - set the expiration date
"RTN","IBCNSUR1",209,0)
 S $P(^DPT(DFN,.312,IBCDFN,0),U,4)=IBEXPDT
"RTN","IBCNSUR1",210,0)
 S DA(1)=DFN,DA=IBCDFN,DIK="^DPT("_DFN_",.312,"
"RTN","IBCNSUR1",211,0)
 D IX1^DIK
"RTN","IBCNSUR1",212,0)
 Q
"RTN","IBCNSUX")
0^158^B16407219^B16195424
"RTN","IBCNSUX",1,0)
IBCNSUX ;ALB/CMS - SPLIT MEDICARE COMBINATION PLANS ; 29-OCT-98
"RTN","IBCNSUX",2,0)
 ;;2.0;INTEGRATED BILLING;**103,516**;21-MAR-94;Build 123
"RTN","IBCNSUX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSUX",4,0)
 ;
"RTN","IBCNSUX",5,0)
 Q
"RTN","IBCNSUX",6,0)
 ;
"RTN","IBCNSUX",7,0)
EN ; Entry point from option.
"RTN","IBCNSUX",8,0)
 I $S('($D(DUZ)#2):1,'$D(^VA(200,+DUZ,0)):1,1:0) W !!?3,"The variable DUZ must be set to an active user code before continuing." G ENQ
"RTN","IBCNSUX",9,0)
 W !!,?5,"SPLIT MEDICARE PART A /PART B COMBINATION PLANS"
"RTN","IBCNSUX",10,0)
 W !!,?5,"WARNING: CAUTION SHOULD BE TAKEN WHEN USING THIS OPTION!!"
"RTN","IBCNSUX",11,0)
 W !!,?5,"This option should ONLY be used at sites that have created a"
"RTN","IBCNSUX",12,0)
 W !,?5,"Medicare, Will Not Reimburse, Insurance Company which has a"
"RTN","IBCNSUX",13,0)
 W !,?5,"non-standard Group plan associated with it that combines Part A"
"RTN","IBCNSUX",14,0)
 W !,?5,"and Part B coverage.",!
"RTN","IBCNSUX",15,0)
 W !,?5,"Make sure the correct plan is selected. This option will create"
"RTN","IBCNSUX",16,0)
 W !,?5,"a Part B policy for each subscriber and edit the existing policy"
"RTN","IBCNSUX",17,0)
 W !,?5,"to point it to the standard Medicare Part A policy."
"RTN","IBCNSUX",18,0)
 W !!,$TR($J("",75)," ","-")
"RTN","IBCNSUX",19,0)
 ;
"RTN","IBCNSUX",20,0)
 N IBINS,IBPLAN,IBQUIT,IBWNR,X,Y
"RTN","IBCNSUX",21,0)
 S IBWNR=$$GETWNR^IBCNSMM1,IBQUIT=0
"RTN","IBCNSUX",22,0)
 I 'IBWNR W !!,*7,?5,IBWNR G ENQ
"RTN","IBCNSUX",23,0)
 ;
"RTN","IBCNSUX",24,0)
 ;I DT>2990301 W !!,*7,?5,"This option cannot be run after March 3, 1999."
"RTN","IBCNSUX",25,0)
 ;
"RTN","IBCNSUX",26,0)
 D SEL I IBQUIT G ENQ
"RTN","IBCNSUX",27,0)
 ;
"RTN","IBCNSUX",28,0)
 W !,"ALL POLICIES ENTERED FOR THE SELECTED COMBINATION PLAN WILL BE CHANGED"
"RTN","IBCNSUX",29,0)
 W !,"TO BE ASSOCIATED WITH MEDICARE PART A AND A NEW POLICY CREATED FOR "
"RTN","IBCNSUX",30,0)
 W !,"MEDICARE PART B.  THE COMBINATION PLAN WILL BE DELETED IF EMPTY!"
"RTN","IBCNSUX",31,0)
 ;
"RTN","IBCNSUX",32,0)
 D OKAY I IBQUIT G ENQ
"RTN","IBCNSUX",33,0)
 ;
"RTN","IBCNSUX",34,0)
 ; -- Ask Device
"RTN","IBCNSUX",35,0)
 N IBX,%ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCNSUX",36,0)
 W !,?10,"You should send the output to a printer.",!
"RTN","IBCNSUX",37,0)
 S %ZIS="QM" D ^%ZIS G:POP QUEQ
"RTN","IBCNSUX",38,0)
 I $D(IO("Q")) K IO("Q") D  G QUEQ
"RTN","IBCNSUX",39,0)
 .F IBX="IBINS","IBPLAN","IBWNR" S ZTSAVE(IBX)=""
"RTN","IBCNSUX",40,0)
 .S ZTRTN="BEG^IBCNSUX1",ZTDESC="IB - Separate Medicare Combination policies"
"RTN","IBCNSUX",41,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCNSUX",42,0)
 ;
"RTN","IBCNSUX",43,0)
 U IO
"RTN","IBCNSUX",44,0)
 I $E(IOST,1,2)["C-" W !!,?15,"...... One Moment Please ..."
"RTN","IBCNSUX",45,0)
 D BEG^IBCNSUX1
"RTN","IBCNSUX",46,0)
 ;
"RTN","IBCNSUX",47,0)
QUEQ ; Exit Clean-up
"RTN","IBCNSUX",48,0)
 W ! D ^%ZISC
"RTN","IBCNSUX",49,0)
 ;
"RTN","IBCNSUX",50,0)
ENQ Q
"RTN","IBCNSUX",51,0)
 ;
"RTN","IBCNSUX",52,0)
SEL ; Select a MEDICARE company and plan.
"RTN","IBCNSUX",53,0)
 ;  Output:   IBINS  --  Pointer to selected company in file #36
"RTN","IBCNSUX",54,0)
 ;           IBPLAN  --  Pointer to selected/added plan in file #355.3
"RTN","IBCNSUX",55,0)
 ;           IBQUIT  --  Set to 1 if the user wants to quit.
"RTN","IBCNSUX",56,0)
 ;
"RTN","IBCNSUX",57,0)
 N DA,DIC,DIRUT,DIROUT,DTOUT,DUOUT,DR,IBX,IBY,X,Y,IBSUBS
"RTN","IBCNSUX",58,0)
 S IBY=$O(^IBE(355.2,"B","MEDICARE",0))
"RTN","IBCNSUX",59,0)
 S DIC(0)="QEAMZ",DIC="^DIC(36,"
"RTN","IBCNSUX",60,0)
 S DIC("S")="I $$ANYGP^IBCNSJ(+Y,0,1),$P($G(^DIC(36,+Y,0)),U,13)=IBY"
"RTN","IBCNSUX",61,0)
 S DIC("A")="Select MEDICARE INSURANCE COMPANY: "
"RTN","IBCNSUX",62,0)
 D ^DIC K DIC S IBINS=+Y
"RTN","IBCNSUX",63,0)
 I Y<0 W "   <No Insurance Company selected>" S IBQUIT=1 G SELQ
"RTN","IBCNSUX",64,0)
 ;
"RTN","IBCNSUX",65,0)
SELP ; - select the Combination Plan
"RTN","IBCNSUX",66,0)
 ; MRD;IB*2.0*516 - Display new Group Name and Number fields.
"RTN","IBCNSUX",67,0)
 K DIC
"RTN","IBCNSUX",68,0)
 S DIC("A")="Select COMBINATION GROUP PLAN: "
"RTN","IBCNSUX",69,0)
 S DIC="^IBA(355.3,",DIC(0)="AEQMZ"
"RTN","IBCNSUX",70,0)
 S DIC("S")="I +^(0)=IBINS,$P(^(0),U,2)"
"RTN","IBCNSUX",71,0)
 ;S DIC("W")="N IBX S IBX=$G(^(0)) W ""   Name: "",$E($S($P(IBX,U,3)]"""":$P(IBX,U,3),1:""<none>"")_$J("""",20),1,20),""   Number: "",$S($P(IBX,U,4)]"""":$P(IBX,U,4),1:""<none>"")"
"RTN","IBCNSUX",72,0)
 S DIC("W")="N IBX S IBX=$G(^(2)) W ""   Name: "",$E($S($P(IBX,U,1)]"""":$P(IBX,U,1),1:""<none>"")_$J("""",20),1,20),""   Number: "",$E($S($P(IBX,U,2)]"""":$P(IBX,U,2),1:""<none>""),1,14)"
"RTN","IBCNSUX",73,0)
 D ^DIC K DIC S IBPLAN=+Y
"RTN","IBCNSUX",74,0)
 I IBPLAN=$P(IBWNR,U,3) W !!,?5,*7,"* Cannot select standard Part A plan" G SELP
"RTN","IBCNSUX",75,0)
 I IBPLAN=$P(IBWNR,U,5) W !!,?5,*7,"* Cannot select standard Part B plan" G SELP
"RTN","IBCNSUX",76,0)
 I Y<0 W !!,?5,*7,"*  No plan selected!",! S IBQUIT=1 G SELQ
"RTN","IBCNSUX",77,0)
 W !!,"Collecting Subscribers ..."
"RTN","IBCNSUX",78,0)
 S IBSUBS=$$SUBS^IBCNSJ(IBINS,IBPLAN)
"RTN","IBCNSUX",79,0)
 W !!,?5,"This plan has ",IBSUBS," subscriber",$S(IBSUBS=1:"",1:"s"),"."
"RTN","IBCNSUX",80,0)
 W:'IBSUBS !?5,"You must select a plan with subscribers!  Please select another plan."
"RTN","IBCNSUX",81,0)
 W !! I 'IBSUBS G SELP
"RTN","IBCNSUX",82,0)
 ;
"RTN","IBCNSUX",83,0)
SELQ Q
"RTN","IBCNSUX",84,0)
 ;
"RTN","IBCNSUX",85,0)
OKAY ; -- Ask Okay to Continue
"RTN","IBCNSUX",86,0)
 ;    Returns IBQUIT=1 to exit
"RTN","IBCNSUX",87,0)
 N DIR,DTOUT,DIROUT,DIRUT,DUOUT,X,Y
"RTN","IBCNSUX",88,0)
 S DIR(0)="YO",DIR("B")="NO",DIR("A")="Okay to Continue"
"RTN","IBCNSUX",89,0)
 S DIR("?")="Enter 'Yes' to separate combination policies"
"RTN","IBCNSUX",90,0)
 W ! D ^DIR
"RTN","IBCNSUX",91,0)
 I $G(Y)'=1 S IBQUIT=1
"RTN","IBCNSUX",92,0)
 Q
"RTN","IBCNSUX1")
0^82^B20451867^B20036863
"RTN","IBCNSUX1",1,0)
IBCNSUX1 ;ALB/CMS - SPLIT COMBINATION PLANS CONT. ; 04-NOV-98
"RTN","IBCNSUX1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,133,516**;21-MAR-94;Build 123
"RTN","IBCNSUX1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSUX1",4,0)
 Q
"RTN","IBCNSUX1",5,0)
 ;
"RTN","IBCNSUX1",6,0)
BEG ; -- Start to process policy separation from IBCNSUX
"RTN","IBCNSUX1",7,0)
 ;    Input: IBINS=Selected Medicare Company
"RTN","IBCNSUX1",8,0)
 ;          IBPLAN=Selected Combination Plan
"RTN","IBCNSUX1",9,0)
 ;           IBWNR=MED WNR INS IEN^"MEDICARE (WNR)"
"RTN","IBCNSUX1",10,0)
 ;                  ^PART A IEN^"PART A"
"RTN","IBCNSUX1",11,0)
 ;                  ^PART B IEN^"PART A"
"RTN","IBCNSUX1",12,0)
 ;
"RTN","IBCNSUX1",13,0)
 N DFN,DO,DD,DA,DR,DIC,DIE,DIK,DIR,DIRUT,X,Y
"RTN","IBCNSUX1",14,0)
 N IBCDFN,IBERR,IB0,IBST,IBSUB1,IBPLANAM
"RTN","IBCNSUX1",15,0)
 K ^TMP($J,"IBCNSUX"),^TMP($J,"IBCNSUX1")
"RTN","IBCNSUX1",16,0)
 ;IB*2.0*516/TAZ - Retrieve HIPAA compliant Plan Name.
"RTN","IBCNSUX1",17,0)
 ;S IBST=$$NOW^XLFDT,IBPLANAM=$P($G(^IBA(355.3,IBPLAN,0)),U,3)
"RTN","IBCNSUX1",18,0)
 S IBST=$$NOW^XLFDT,IBPLANAM=$$GET1^DIQ(355.3,IBPLAN,2.01)  ; 516 - baa
"RTN","IBCNSUX1",19,0)
 S IBSUB1=$$SUBS^IBCNSJ(IBINS,IBPLAN,0,"^TMP($J,""IBCNSUX1"")")
"RTN","IBCNSUX1",20,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"IBCNSUX1",DFN)) Q:'DFN  D
"RTN","IBCNSUX1",21,0)
 .S IBCDFN=0 F  S IBCDFN=$O(^TMP($J,"IBCNSUX1",DFN,IBCDFN)) Q:'IBCDFN  D
"RTN","IBCNSUX1",22,0)
 ..S IB0=$G(^DPT(DFN,.312,IBCDFN,0))
"RTN","IBCNSUX1",23,0)
 ..I $P(IB0,U,18)'=+IBPLAN Q
"RTN","IBCNSUX1",24,0)
 ..;
"RTN","IBCNSUX1",25,0)
 ..;  -- check for duplicate
"RTN","IBCNSUX1",26,0)
 ..D DUP
"RTN","IBCNSUX1",27,0)
 ..;
"RTN","IBCNSUX1",28,0)
 ..;  -- if the policy to be split has no COB, and both an A and B
"RTN","IBCNSUX1",29,0)
 ..;  -- policy need to be created, set it to Primary
"RTN","IBCNSUX1",30,0)
 ..I '$P(IB0,"^",20),'$D(^TMP($J,"IBCNSUX","ERR",DFN,2)),'$D(^(1)) D
"RTN","IBCNSUX1",31,0)
 ...N DIE,DA,DR,X,Y
"RTN","IBCNSUX1",32,0)
 ...S DIE="^DPT("_DFN_",.312,",DA=+IBCDFN,DA(1)=DFN,DR=".2////1" D ^DIE
"RTN","IBCNSUX1",33,0)
 ..;
"RTN","IBCNSUX1",34,0)
 ..;  -- create Medicare (WNR) policies if none exists
"RTN","IBCNSUX1",35,0)
 ..I '$D(^TMP($J,"IBCNSUX","ERR",DFN,2)) D ADDB
"RTN","IBCNSUX1",36,0)
 ..I '$D(^TMP($J,"IBCNSUX","ERR",DFN,1)) D SETA
"RTN","IBCNSUX1",37,0)
 ;
"RTN","IBCNSUX1",38,0)
 ; -- delete combination plan if no subscribers left.
"RTN","IBCNSUX1",39,0)
 I '$$SUBS^IBCNSJ(IBINS,IBPLAN) D DEL^IBCNSJ(IBPLAN)
"RTN","IBCNSUX1",40,0)
 ;
"RTN","IBCNSUX1",41,0)
 D WRT
"RTN","IBCNSUX1",42,0)
 ;
"RTN","IBCNSUX1",43,0)
BEGQ K ^TMP($J,"IBCNSUX"),^TMP($J,"IBCNSUX1")
"RTN","IBCNSUX1",44,0)
 Q
"RTN","IBCNSUX1",45,0)
 ;
"RTN","IBCNSUX1",46,0)
 ;
"RTN","IBCNSUX1",47,0)
ADDB ; -- Create a New MEDICARE PART B patient policy
"RTN","IBCNSUX1",48,0)
 N DA,DIC,DIE,DR,IBBDFN,IBC,IBX,X,Y,IBCDA,IBNDA,IBN
"RTN","IBCNSUX1",49,0)
 K DD,D0
"RTN","IBCNSUX1",50,0)
 ;
"RTN","IBCNSUX1",51,0)
 S DIC("DR")=".01////"_+IBWNR_";1.09////1;1.05///NOW;1.06////"_DUZ_";.18////"_$P(IBWNR,U,5)
"RTN","IBCNSUX1",52,0)
 ;
"RTN","IBCNSUX1",53,0)
 ; -- If the policy to be split has no COB, and a valid Part A policy
"RTN","IBCNSUX1",54,0)
 ; -- already exists, set the COB to Primary
"RTN","IBCNSUX1",55,0)
 I '$P(IB0,"^",20),$D(^TMP($J,"IBCNSUX","ERR",DFN,1)) S DIC("DR")=DIC("DR")_";.2////1"
"RTN","IBCNSUX1",56,0)
 ;
"RTN","IBCNSUX1",57,0)
 S DA(1)=DFN,DIC="^DPT("_DFN_",.312,",DIC(0)="L",X=+IBWNR,DLAYGO=2.312
"RTN","IBCNSUX1",58,0)
 D FILE^DICN S IBBDFN=+Y K DIC
"RTN","IBCNSUX1",59,0)
 I IBBDFN<1 S ^TMP($J,"IBCNSUX","ERR",DFN,3)="Could not create a Part B policy." G ADDBQ
"RTN","IBCNSUX1",60,0)
 ;
"RTN","IBCNSUX1",61,0)
 ; -- Get settings of combination policy
"RTN","IBCNSUX1",62,0)
 S IBCDA=IBCDFN_","_DFN_","
"RTN","IBCNSUX1",63,0)
 D GETS^DIQ(2.312,IBCDA,"*","IN","IBC")
"RTN","IBCNSUX1",64,0)
 I $D(IBC("IBERR")) S ^TMP($J,"IBCNSUX","ERR",DFN,3)="Could not set Part B policy data." G ADDBQ
"RTN","IBCNSUX1",65,0)
 ;
"RTN","IBCNSUX1",66,0)
 ; -- Set Medicare Part B policy data - copy combination policy data to new new Part B policy
"RTN","IBCNSUX1",67,0)
 S IBNDA=+IBBDFN_","_DFN_","
"RTN","IBCNSUX1",68,0)
 S IBX=0 F  S IBX=$O(IBC(2.312,IBCDA,IBX)) Q:IBX=""  D
"RTN","IBCNSUX1",69,0)
 . ;
"RTN","IBCNSUX1",70,0)
 . ; -- Don't set system edited or triggered fields
"RTN","IBCNSUX1",71,0)
 . I ",.01,1.01,1.02,1.1,1.05,1.06,.18,"[(","_IBX_",") Q
"RTN","IBCNSUX1",72,0)
 . ;
"RTN","IBCNSUX1",73,0)
 . S IBN(2.312,IBNDA,IBX)=IBC(2.312,IBCDA,IBX,"I")
"RTN","IBCNSUX1",74,0)
 I $O(IBN(0)) D FILE^DIE("","IBN")
"RTN","IBCNSUX1",75,0)
ADDBQ Q
"RTN","IBCNSUX1",76,0)
 ;
"RTN","IBCNSUX1",77,0)
SETA ; -- Change policy to point to Part A
"RTN","IBCNSUX1",78,0)
 N DIE,DA,DR,X,Y
"RTN","IBCNSUX1",79,0)
 S DIE="^DPT("_DFN_",.312,",DA=+IBCDFN,DA(1)=DFN
"RTN","IBCNSUX1",80,0)
 S DR=".01////"_+IBWNR_";.18////"_$P(IBWNR,U,3)
"RTN","IBCNSUX1",81,0)
 ;
"RTN","IBCNSUX1",82,0)
 ; - if this policy still has no COB, set it to primary
"RTN","IBCNSUX1",83,0)
 I '$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",20) S DR=DR_";.2////1"
"RTN","IBCNSUX1",84,0)
 D ^DIE
"RTN","IBCNSUX1",85,0)
 Q
"RTN","IBCNSUX1",86,0)
 ;
"RTN","IBCNSUX1",87,0)
DUP ; -- Check for duplicate
"RTN","IBCNSUX1",88,0)
 N IBX,IB0,X,Y
"RTN","IBCNSUX1",89,0)
 S IBX=0 F  S IBX=$O(^DPT(DFN,.312,"B",+IBWNR,IBX)) Q:'IBX  D
"RTN","IBCNSUX1",90,0)
 .S IB0=$G(^DPT(DFN,.312,IBX,0))
"RTN","IBCNSUX1",91,0)
 .I $P(IB0,U,18)=$P(IBWNR,U,3) S ^TMP($J,"IBCNSUX","ERR",DFN,1)="Medicare (WNR) Part A policy already exists." Q
"RTN","IBCNSUX1",92,0)
 .I $P(IB0,U,18)=$P(IBWNR,U,5) S ^TMP($J,"IBCNSUX","ERR",DFN,2)="Medicare (WNR) Part B policy already exists." Q
"RTN","IBCNSUX1",93,0)
 Q
"RTN","IBCNSUX1",94,0)
 ;
"RTN","IBCNSUX1",95,0)
WRT ; -- write report
"RTN","IBCNSUX1",96,0)
 N IBX,VA,VADM,VAERR,X,Y
"RTN","IBCNSUX1",97,0)
 W @IOF,!,"Separate Medicare Combination policies Part A and Part B"
"RTN","IBCNSUX1",98,0)
 W !!,"Process started ",$$FMTE^XLFDT(IBST)," ended ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","IBCNSUX1",99,0)
 W !,?10,"Run by: ",$P($G(^VA(200,+$G(DUZ),0)),U,1)
"RTN","IBCNSUX1",100,0)
 W !!,?5,"Combination Company: ",$P($G(^DIC(36,IBINS,0)),U,1)
"RTN","IBCNSUX1",101,0)
 W !?3,"Combination Plan Name: ",IBPLANAM W:'$D(^IBA(355.3,IBPLAN,0)) "  (This plan was deleted)"
"RTN","IBCNSUX1",102,0)
 W ! F IBX=1:1:79 W "="
"RTN","IBCNSUX1",103,0)
 ;
"RTN","IBCNSUX1",104,0)
 I '$O(^TMP($J,"IBCNSUX","ERR",0)) W !!,"SUCCESSFULLY COMPLETED,  COMBINATION PLAN DELETED." G WRTQ
"RTN","IBCNSUX1",105,0)
 ;
"RTN","IBCNSUX1",106,0)
 W !,"Exception Report:"
"RTN","IBCNSUX1",107,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"IBCNSUX","ERR",DFN)) Q:'DFN  D
"RTN","IBCNSUX1",108,0)
 .K VADM D DEM^VADPT
"RTN","IBCNSUX1",109,0)
 .W !!,VADM(1),?32,"SSN: ",$P(VADM(2),U,2),?50,"DOB: ",$P(VADM(3),U,2)
"RTN","IBCNSUX1",110,0)
 .S IBX=0 F  S IBX=$O(^TMP($J,"IBCNSUX","ERR",DFN,IBX)) Q:'IBX  D
"RTN","IBCNSUX1",111,0)
 ..W !,?5,^TMP($J,"IBCNSUX","ERR",DFN,IBX)
"RTN","IBCNSUX1",112,0)
WRTQ Q
"RTN","IBCNSUX1",113,0)
 ;IBCNSUX1
"RTN","IBCOMA1")
0^83^B34536686^B29547296
"RTN","IBCOMA1",1,0)
IBCOMA1 ;ALB/CMS - IDENTIFY ACTIVE POLICIES W/NO EFFECTIVE DATE (CON'T) ; 08-03-98
"RTN","IBCOMA1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,516**;21-MAR-94;Build 123
"RTN","IBCOMA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMA1",4,0)
 Q
"RTN","IBCOMA1",5,0)
BEG ; Entry to run Active Policies w/no Effective Date Report
"RTN","IBCOMA1",6,0)
 ; Input variables:
"RTN","IBCOMA1",7,0)
 ; IBAIB - Required.    How to sort
"RTN","IBCOMA1",8,0)
 ;         1= Patient Name Range      2= Termianl Digit Range
"RTN","IBCOMA1",9,0)
 ;
"RTN","IBCOMA1",10,0)
 ; IBSIN - Required.   Include Active Policies with
"RTN","IBCOMA1",11,0)
 ;         1= Verification Date  2= No Verification Date 3= Both
"RTN","IBCOMA1",12,0)
 ;
"RTN","IBCOMA1",13,0)
 ; IBRF  - Required.  Name or Terminal Digit Range Start value
"RTN","IBCOMA1",14,0)
 ; IBRL  - Required.  Name or Terminal Digit Range Go to value
"RTN","IBCOMA1",15,0)
 ; IBBDT - Optional.  Begining Verification Date Range
"RTN","IBCOMA1",16,0)
 ; IBEDT - Optional.  Ending Verification Date Range
"RTN","IBCOMA1",17,0)
 ;
"RTN","IBCOMA1",18,0)
 N DFN,IBC,IBC0,IBCDA,IBCDA0,IBCDA1,IBC11,IBC13,IBGP,IBI,IBPAGE,IBTMP
"RTN","IBCOMA1",19,0)
 N IBQUIT,IBTD,IBX,VA,VADM,VAERR,X,Y
"RTN","IBCOMA1",20,0)
 K ^TMP("IBCOMA",$J) S IBPAGE=0,IBQUIT=0
"RTN","IBCOMA1",21,0)
 S IBC=0 F  S IBC=$O(^DPT("AB",IBC)) Q:'IBC  D
"RTN","IBCOMA1",22,0)
 .S IBC0=$G(^DIC(36,IBC,0))
"RTN","IBCOMA1",23,0)
 .;
"RTN","IBCOMA1",24,0)
 .;   If company inactive quit
"RTN","IBCOMA1",25,0)
 .I $P(IBC0,U)="" Q
"RTN","IBCOMA1",26,0)
 .I $P(IBC0,U,5)=1 Q
"RTN","IBCOMA1",27,0)
 .S DFN=0 F  S DFN=$O(^DPT("AB",IBC,DFN)) Q:'DFN  D
"RTN","IBCOMA1",28,0)
 ..K VA,VADM,VAERR,VAPA
"RTN","IBCOMA1",29,0)
 ..D DEM^VADPT,ADD^VADPT
"RTN","IBCOMA1",30,0)
 ..;
"RTN","IBCOMA1",31,0)
 ..;  I Pt. deceased quit I $G(VADM(6))>0 Q
"RTN","IBCOMA1",32,0)
 ..;  I Pt. name out of range quit
"RTN","IBCOMA1",33,0)
 ..S VADM(1)=$P($G(VADM(1)),U,1) I VADM(1)="" Q
"RTN","IBCOMA1",34,0)
 ..I IBAIB=1,VADM(1)]IBRL Q
"RTN","IBCOMA1",35,0)
 ..I IBAIB=1,IBRF]VADM(1) Q
"RTN","IBCOMA1",36,0)
 ..;
"RTN","IBCOMA1",37,0)
 ..;  I Terminal Digit out of range quit
"RTN","IBCOMA1",38,0)
 ..I IBAIB=2 S IBTD=$$TERMDG^IBCONS2(DFN) S:IBTD="" IBTD="000000000" I (+IBTD>IBRL)!(IBRF>+IBTD) Q
"RTN","IBCOMA1",39,0)
 ..S IBCDA=0 F  S IBCDA=$O(^DPT("AB",IBC,DFN,IBCDA)) Q:'IBCDA  D
"RTN","IBCOMA1",40,0)
 ...;IB*2.0*516/TAZ - Retrieve data from HIPAA compliant fields.
"RTN","IBCOMA1",41,0)
 ...;S IBCDA0=$G(^DPT(DFN,.312,IBCDA,0))  ;516 - baa
"RTN","IBCOMA1",42,0)
 ...S IBCDA0=$$ZND^IBCNS1(DFN,IBCDA)  ;516 - baa
"RTN","IBCOMA1",43,0)
 ...;
"RTN","IBCOMA1",44,0)
 ...;  I Effective Date populated quit
"RTN","IBCOMA1",45,0)
 ...I $P(IBCDA0,U,8) Q
"RTN","IBCOMA1",46,0)
 ...;
"RTN","IBCOMA1",47,0)
 ...;  I Expiration Date entered and expired quit
"RTN","IBCOMA1",48,0)
 ...I $P(IBCDA0,U,4),$P(IBCDA0,U,4)'>DT Q
"RTN","IBCOMA1",49,0)
 ...;
"RTN","IBCOMA1",50,0)
 ...;  Sorting by verification date or no date check
"RTN","IBCOMA1",51,0)
 ...S IBCDA1=$G(^DPT(DFN,.312,IBCDA,1))
"RTN","IBCOMA1",52,0)
 ...I IBSIN=1,'$P(IBCDA1,U,3) Q
"RTN","IBCOMA1",53,0)
 ...S $P(IBCDA1,U,3)=$P($P(IBCDA1,U,3),".",1)
"RTN","IBCOMA1",54,0)
 ...I IBSIN=1,+$P(IBCDA1,U,3)>IBEDT Q
"RTN","IBCOMA1",55,0)
 ...I IBSIN=1,+$P(IBCDA1,U,3)<IBBDT Q
"RTN","IBCOMA1",56,0)
 ...I IBSIN=2,$P(IBCDA1,U,3) Q
"RTN","IBCOMA1",57,0)
 ...I IBSIN=3 I +$P(IBCDA1,U,3)>0 I +$P(IBCDA1,U,3)<IBBDT!(+$P(IBCDA1,U,3)>IBEDT) Q
"RTN","IBCOMA1",58,0)
 ...S IBC11=$G(^DIC(36,IBC,.11))
"RTN","IBCOMA1",59,0)
 ...S IBC13=$G(^DIC(36,IBC,.13))
"RTN","IBCOMA1",60,0)
 ...;
"RTN","IBCOMA1",61,0)
 ...;   set data line for global
"RTN","IBCOMA1",62,0)
 ...;S IBTMP(1)=PT NAME^SSN^AGE^HOME PHONE^DATE OF DEATH
"RTN","IBCOMA1",63,0)
 ...;S IBTMP(2)=INSURANCE NAME^REIMBURSE?^PHONE^ADD LINE 1
"RTN","IBCOMA1",64,0)
 ...;S IBTMP(3)=GROUP PLAN^SUBSCRIBER ID^WHOSE INS.^VERIFICATION DATE
"RTN","IBCOMA1",65,0)
 ...;
"RTN","IBCOMA1",66,0)
 ...;IB*2.0*516/TAZ - Use HIPAA complaint field
"RTN","IBCOMA1",67,0)
 ...;S IBGP=$P($G(^IBA(355.3,+$P(IBCDA0,U,18),0)),U,3)
"RTN","IBCOMA1",68,0)
 ...S IBGP=$$GET1^DIQ(355.3,+$P(IBCDA0,U,18)_",",2.01)
"RTN","IBCOMA1",69,0)
 ...S IBTMP(1)=VADM(1)_U_$P(VADM(2),U,2)_U_+VADM(4)_U_$P(VAPA(8),U,1)_U_$$FMTE^XLFDT($P(VADM(6),U,1),"5ZD")
"RTN","IBCOMA1",70,0)
 ...S IBTMP(2)=$P(IBC0,U,1)_U_$P(IBC0,U,2)_U_$P(IBC13,U,1)_U_$P(IBC11,U,1)
"RTN","IBCOMA1",71,0)
 ...S IBTMP(3)=$S(IBGP]"":"Plan: "_IBGP,1:"(No Plan Name)")_U_$P(IBCDA0,U,2)_U_$P(IBCDA0,U,6)_U_$$FMTE^XLFDT($P(IBCDA1,U,3),"5ZD")
"RTN","IBCOMA1",72,0)
 ...;
"RTN","IBCOMA1",73,0)
 ...;   set variable IBI for Verified=1 or Non verified=2 
"RTN","IBCOMA1",74,0)
 ...S IBI=$S(+$P(IBCDA1,U,3):1,1:2)
"RTN","IBCOMA1",75,0)
 ...;
"RTN","IBCOMA1",76,0)
 ...;   Set Global array
"RTN","IBCOMA1",77,0)
 ...S ^TMP("IBCOMA",$J,IBI,$S(IBAIB=2:+IBTD,1:VADM(1)),DFN)=IBTMP(1)
"RTN","IBCOMA1",78,0)
 ...S ^TMP("IBCOMA",$J,IBI,$S(IBAIB=2:+IBTD,1:VADM(1)),DFN,IBC)=IBTMP(2)
"RTN","IBCOMA1",79,0)
 ...S ^TMP("IBCOMA",$J,IBI,$S(IBAIB=2:+IBTD,1:VADM(1)),DFN,IBC,IBCDA)=IBTMP(3)
"RTN","IBCOMA1",80,0)
 ...;
"RTN","IBCOMA1",81,0)
 ;
"RTN","IBCOMA1",82,0)
 I '$D(^TMP("IBCOMA",$J)) D HD W !!,"** NO RECORDS FOUND **" G QUEQ
"RTN","IBCOMA1",83,0)
 D WRT
"RTN","IBCOMA1",84,0)
 ;
"RTN","IBCOMA1",85,0)
QUEQ ; Exit clean-UP
"RTN","IBCOMA1",86,0)
 W ! D ^%ZISC K IBTMP,IBAIB,IBRF,IBRL,IBSIN,IBSTR,VA,VAERR,VADM,VAPA,^TMP("IBCOMA",$J)
"RTN","IBCOMA1",87,0)
 Q
"RTN","IBCOMA1",88,0)
 ;
"RTN","IBCOMA1",89,0)
HD ;Write Heading
"RTN","IBCOMA1",90,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCOMA1",91,0)
 W @IOF,"Active Policies with no Effective Date Report    ",$$FMTE^XLFDT($$NOW^XLFDT,"Z")," Page: ",IBPAGE
"RTN","IBCOMA1",92,0)
 W !,?5,"Sorted by: "_$S(IBAIB=1:"Patient Name",1:"Terminal Digit")_"  Range: "_$S(IBRF="A":"FIRST",1:IBRF)_" to "_$S(IBRL="zzzzzz":"LAST",1:IBRL)
"RTN","IBCOMA1",93,0)
 W !,?5,"  Include: "_$S(IBSIN=1:"Verification Date Range: "_$$FMTE^XLFDT(IBBDT,"Z")_" to "_$$FMTE^XLFDT(IBEDT,"Z"),IBSIN=2:"No Verification Date Entered",1:"with or without Verification Date")
"RTN","IBCOMA1",94,0)
 W !!,"Patient Name",?32,"SSN",?44,"Age",?50,"Phone",?66,"Date of Death"
"RTN","IBCOMA1",95,0)
 W ! F IBX=1:1:79 W "="
"RTN","IBCOMA1",96,0)
 Q
"RTN","IBCOMA1",97,0)
 ;
"RTN","IBCOMA1",98,0)
WRT ;Write data lines
"RTN","IBCOMA1",99,0)
 N IBA,IBCDA,IBDA,IBDFN,IBINS,IBNA,IBPOL,IBPT,X,Y S IBQUIT=0
"RTN","IBCOMA1",100,0)
 S IBA=0 F  S IBA=$O(^TMP("IBCOMA",$J,IBA)) Q:('IBA)!(IBQUIT=1)  D
"RTN","IBCOMA1",101,0)
 . I IBPAGE D ASK^IBCOMC2 I IBQUIT=1 Q
"RTN","IBCOMA1",102,0)
 . D HD W !,$S(IBA=1:"Verified",1:"Non-Verified")
"RTN","IBCOMA1",103,0)
 . S IBNA="" F  S IBNA=$O(^TMP("IBCOMA",$J,IBA,IBNA)) Q:(IBNA="")!(IBQUIT=1)  D
"RTN","IBCOMA1",104,0)
 . . S IBDFN=0 F  S IBDFN=$O(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN)) Q:('IBDFN)!(IBQUIT=1)  D
"RTN","IBCOMA1",105,0)
 . . . S IBPT=$G(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN))
"RTN","IBCOMA1",106,0)
 . . . ;
"RTN","IBCOMA1",107,0)
 . . . I ($Y+7)>IOSL D  I IBQUIT=1 Q
"RTN","IBCOMA1",108,0)
 . . . . D ASK^IBCOMC2 I IBQUIT=1 Q
"RTN","IBCOMA1",109,0)
 . . . . D HD
"RTN","IBCOMA1",110,0)
 . . . . Q
"RTN","IBCOMA1",111,0)
 . . . ;
"RTN","IBCOMA1",112,0)
 . . . W !!,$E($P(IBPT,U,1),1,30),?32,$E($P(IBPT,U,2),1,12),?44,$J($P(IBPT,U,3),3),?50,$E($P(IBPT,U,4),1,20),?70,$P(IBPT,U,5)
"RTN","IBCOMA1",113,0)
 . . . ;
"RTN","IBCOMA1",114,0)
 . . . S IBDA=0 F  S IBDA=$O(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA)) Q:('IBDA)!(IBQUIT=1)  D
"RTN","IBCOMA1",115,0)
 . . . . S IBINS=$G(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA))
"RTN","IBCOMA1",116,0)
 . . . . W !?3,$E($P(IBINS,U,1),1,30),?35,"Reimb VA? ",$P(IBINS,U,2),?50,$E($P(IBINS,U,3),1,20) ; ?70,$E($P(IBINS,U,4),1,10)
"RTN","IBCOMA1",117,0)
 . . . . ;
"RTN","IBCOMA1",118,0)
 . . . . S IBCDA=0 F  S IBCDA=$O(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA,IBCDA)) Q:('IBCDA)!(IBQUIT=1)   D
"RTN","IBCOMA1",119,0)
 . . . . . S IBPOL=$G(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA,IBCDA))
"RTN","IBCOMA1",120,0)
 . . . . . ; MRD;IB*2.0*516 - Print Sub ID on its own line.
"RTN","IBCOMA1",121,0)
 . . . . . ;W !?5,$E($P(IBPOL,U,1),1,20),?26,"Sub ID: ",$E($P(IBPOL,U,2),1,20),?55,"Whose: ",$P(IBPOL,U,3)
"RTN","IBCOMA1",122,0)
 . . . . . W !?3,$E($P(IBPOL,U,1),1,49),?55,"Whose: ",$P(IBPOL,U,3)
"RTN","IBCOMA1",123,0)
 . . . . . I IBA=1 W ?64,"Verif:",$P(IBPOL,U,4)
"RTN","IBCOMA1",124,0)
 . . . . . W !?3,"Sub ID: ",$E($P(IBPOL,U,2),1,66)
"RTN","IBCOMA1",125,0)
 . . . . . Q
"RTN","IBCOMA1",126,0)
 . . . . Q
"RTN","IBCOMA1",127,0)
 . . . Q
"RTN","IBCOMA1",128,0)
 . . Q
"RTN","IBCOMA1",129,0)
 . Q
"RTN","IBCOMA1",130,0)
 Q
"RTN","IBCOMA1",131,0)
 ;IBCOMA1
"RTN","IBCOMC2")
0^153^B12669229^B12700505
"RTN","IBCOMC2",1,0)
IBCOMC2 ;ALB/CMS - IDENTIFY PT BY AGE WITH OR WITHOUT INSURANCE (CON'T) ; 10-09-98
"RTN","IBCOMC2",2,0)
 ;;2.0;INTEGRATED BILLING;**103,153,516**;21-MAR-94;Build 123
"RTN","IBCOMC2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMC2",4,0)
 Q
"RTN","IBCOMC2",5,0)
ENH ; Sort help Text
"RTN","IBCOMC2",6,0)
 W !!,?5,"Enter 1 to search by a Patient Name Range. (i.e. ADAMS to ADAMSZ)"
"RTN","IBCOMC2",7,0)
 W !,?5,"Enter 2 to search by Terminal Digit.  The output will be sorted"
"RTN","IBCOMC2",8,0)
 W !,?5,"by the 8th and 9th digits and then the 6th and 7th digits of the"
"RTN","IBCOMC2",9,0)
 W !,?5,"Patient's SSN.",!
"RTN","IBCOMC2",10,0)
 Q
"RTN","IBCOMC2",11,0)
 ;
"RTN","IBCOMC2",12,0)
INSH ; Search criteria help Text
"RTN","IBCOMC2",13,0)
 W !!,?5,"Enter 1 to List patients covered by policies in Insurance Co. Name Range"
"RTN","IBCOMC2",14,0)
 W !,?15,"(i.e. Sort By: MEDICARE  To: MEDICAREZZZ)"
"RTN","IBCOMC2",15,0)
 W !,?5,"Enter 2 to List patients covered by policies of the selected Insurance Co."
"RTN","IBCOMC2",16,0)
 W !,?15,"(User may enter up to six Companies.)"
"RTN","IBCOMC2",17,0)
 W !,?5,"Enter 3 to list patients with NO Coverage on file."
"RTN","IBCOMC2",18,0)
 Q
"RTN","IBCOMC2",19,0)
 ;
"RTN","IBCOMC2",20,0)
AGEH ; Sort AGE help text
"RTN","IBCOMC2",21,0)
 W !!,?5,"Enter an Age Range to sort by (1-250). Or press return at the Start Age"
"RTN","IBCOMC2",22,0)
 W !,?5,"prompt to not include Age range in search criteria."
"RTN","IBCOMC2",23,0)
 Q
"RTN","IBCOMC2",24,0)
 ;
"RTN","IBCOMC2",25,0)
HD ;Write Heading
"RTN","IBCOMC2",26,0)
 N IBX S IBPAGE=IBPAGE+1
"RTN","IBCOMC2",27,0)
 W @IOF,!,"Patients "_$S(IBSIN=3:"Without",1:"With")_" Insurance Report",?50,$$FMTE^XLFDT($$NOW^XLFDT,"Z"),?70," Page ",IBPAGE
"RTN","IBCOMC2",28,0)
 I IBPAGE=1 D
"RTN","IBCOMC2",29,0)
 .W !,?5,"Sorted by: "_$S(IBAIB=1:"Patient Name",1:"Terminal Digit")_" Range: "_$S(IBRF="A":"FIRST",1:IBRF)_" to "_$S(IBRL="zzzzzz":"LAST",1:IBRL)
"RTN","IBCOMC2",30,0)
 .W !,?5,"Date Last Treated Range: "_$$FMTE^XLFDT(IBBDT,"Z")_" to "_$$FMTE^XLFDT(IBEDT,"Z")
"RTN","IBCOMC2",31,0)
 .I IBSIN=1 W !,?5,"Insurance Company Range: "_$S(IBSINF="A":"FIRST",1:IBSINF)_" to "_$S(IBSINL="zzzzzz":"LAST",1:IBSINL)
"RTN","IBCOMC2",32,0)
 .I IBSIN=3 W !,?5,"Patients with no Insurance on File"
"RTN","IBCOMC2",33,0)
 .I IBAGEF W !,?5,"Age Range: "_IBAGEF_" to "_IBAGEL
"RTN","IBCOMC2",34,0)
 .W !,?5,"*  -  Patient Deceased"
"RTN","IBCOMC2",35,0)
 .I IBSIN=2 W !,?5,"Active Policies with selected Insurance Companies:" F IBX=1:1:6 Q:'$D(IBSIN(IBX))  W !,?10,$P(IBSIN(IBX),U,2)
"RTN","IBCOMC2",36,0)
 W !!?58,"Means",!,"Patient Name   (SSN)",?39,"Age",?44,"DOB",?58,"Test?",?70,"Last Visit"
"RTN","IBCOMC2",37,0)
 W ! F IBX=1:1:80 W "="
"RTN","IBCOMC2",38,0)
 Q
"RTN","IBCOMC2",39,0)
 ;
"RTN","IBCOMC2",40,0)
WRT ;Write data lines
"RTN","IBCOMC2",41,0)
 N IBCDA,IBDA,IBDFN,IBINS,IBNA,IBPOL,IBPT,X,Y S IBQUIT=0
"RTN","IBCOMC2",42,0)
 S IBNA="" F  S IBNA=$O(^TMP("IBCOMC",$J,1,IBNA)) Q:(IBNA="")!(IBQUIT=1)  D
"RTN","IBCOMC2",43,0)
 .S IBDFN=0 F  S IBDFN=$O(^TMP("IBCOMC",$J,1,IBNA,IBDFN)) Q:('IBDFN)!(IBQUIT=1)  D
"RTN","IBCOMC2",44,0)
 ..S IBPT=$G(^TMP("IBCOMC",$J,1,IBNA,IBDFN))
"RTN","IBCOMC2",45,0)
 ..;
"RTN","IBCOMC2",46,0)
 ..I ($Y+5)>IOSL D  I IBQUIT=1 Q
"RTN","IBCOMC2",47,0)
 ...D ASK I IBQUIT=1 Q
"RTN","IBCOMC2",48,0)
 ...D HD
"RTN","IBCOMC2",49,0)
 ..;
"RTN","IBCOMC2",50,0)
 ..W !!,$E($P(IBPT,U,1),1,30)_"   "_$P(IBPT,U,2),?39,$P(IBPT,U,3),?44,$P(IBPT,U,4),?58,$P(IBPT,U,5),?65,$P(IBPT,U,6)
"RTN","IBCOMC2",51,0)
 ..;
"RTN","IBCOMC2",52,0)
 ..S IBDA=0 F  S IBDA=$O(^TMP("IBCOMC",$J,1,IBNA,IBDFN,IBDA)) Q:('IBDA)!(IBQUIT=1)  D
"RTN","IBCOMC2",53,0)
 ...S IBINS=$G(^TMP("IBCOMC",$J,1,IBNA,IBDFN,IBDA))
"RTN","IBCOMC2",54,0)
 ...I IBSIN=3 W !,IBINS Q
"RTN","IBCOMC2",55,0)
 ...W !?3,$E($P(IBINS,U,1),1,30),?35,"Reimb VA? ",$P(IBINS,U,2),!?4,"Plan Name: ",$E($P(IBINS,U,3),1,65)
"RTN","IBCOMC2",56,0)
 ...;
"RTN","IBCOMC2",57,0)
 Q
"RTN","IBCOMC2",58,0)
 ;
"RTN","IBCOMC2",59,0)
ASK ; Ask to Continue with display
"RTN","IBCOMC2",60,0)
 ; also called from IBCNSUR1 and IBCOMA1
"RTN","IBCOMC2",61,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCOMC2",62,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMC2",63,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCOMC2",64,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1
"RTN","IBCOMC2",65,0)
 Q
"RTN","IBCOMC2",66,0)
 ;IBCOMC2
"RTN","IBCONS1")
0^85^B79511698^B75219188
"RTN","IBCONS1",1,0)
IBCONS1 ;ALB/AAS - NSC PATIENTS W/ INS BACKGROUND PRINTS ;7 JUN 90
"RTN","IBCONS1",2,0)
 ;;2.0;INTEGRATED BILLING;**66,80,137,516**;21-MAR-94;Build 123
"RTN","IBCONS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCONS1",4,0)
 ;
"RTN","IBCONS1",5,0)
 ;MAP TO DGCRONS1
"RTN","IBCONS1",6,0)
 ;
"RTN","IBCONS1",7,0)
EN ; Inpatient Discharge entry to que background once weekly
"RTN","IBCONS1",8,0)
 S IBINPT=2,IBSUB="AMV3" G QUEUE
"RTN","IBCONS1",9,0)
 ;
"RTN","IBCONS1",10,0)
EN1 ; Inpatient Admission entry to que background once weekly
"RTN","IBCONS1",11,0)
 S IBINPT=1,IBSUB="AMV1" G QUEUE
"RTN","IBCONS1",12,0)
 ;
"RTN","IBCONS1",13,0)
EN2 ; Outpatient entry to que background once weekly
"RTN","IBCONS1",14,0)
 S IBINPT=0,IBSUB=""
"RTN","IBCONS1",15,0)
 ;
"RTN","IBCONS1",16,0)
QUEUE ; Set up the background job to run for the previous week
"RTN","IBCONS1",17,0)
 ;   o  For All Divisions
"RTN","IBCONS1",18,0)
 ;   o  For Insured veterans with unbilled episodes of care
"RTN","IBCONS1",19,0)
 ;   o  With the output sorted by Terminal Digit
"RTN","IBCONS1",20,0)
 ;
"RTN","IBCONS1",21,0)
 K ^TMP($J)
"RTN","IBCONS1",22,0)
 S X="T",%DT="" D ^%DT S IBEND=+Y
"RTN","IBCONS1",23,0)
 S X="T-7",%DT="" D ^%DT S IBBEG=+Y K %DT
"RTN","IBCONS1",24,0)
 S (VAUTD,IBSELUBL,IBSELTRM,IBSELRNB)=1
"RTN","IBCONS1",25,0)
 U IO G BEGIN^IBCONSC
"RTN","IBCONS1",26,0)
 ;
"RTN","IBCONS1",27,0)
 ;
"RTN","IBCONS1",28,0)
LOOP25 ; Print all NSC w/Insurance reports.
"RTN","IBCONS1",29,0)
 S IBQUIT=0,IBFL=1,IBHDRDV="",IBSUM=0 I +$G(IBSELCDV) D HDRDV^IBCONSC
"RTN","IBCONS1",30,0)
 S IBDV="" F  S IBDV=$O(^TMP($J,IBDV)) Q:IBDV=""  I IBDV'="TOTAL" D LOOP3 Q:IBQUIT
"RTN","IBCONS1",31,0)
 ;
"RTN","IBCONS1",32,0)
 G:IBQUIT Q S IBSUM=1,IBPAGE=0 D HEAD Q:IBQUIT
"RTN","IBCONS1",33,0)
 S IBDV="" F  S IBDV=$O(^TMP($J,"TOTAL",IBDV)) Q:IBDV=""  D PRNSUM
"RTN","IBCONS1",34,0)
 D PAUSE
"RTN","IBCONS1",35,0)
 ;
"RTN","IBCONS1",36,0)
Q K %,%DT,B,I,J,K,L,M,X,X1,X2,Y,DFN,IBCNT,IBIFN,IBBILL,IBDATE,IBFLAG,IBI,IBDT,IBPAGE,IBL,IBHD,IBBEG1,IBHDRDV,IBSUM
"RTN","IBCONS1",37,0)
 K IBBEG,IBEND,IBINPT,IBFLAG,IBNAME,IBAPPT,IBDC,IBDAT,IBDFN,POP,IBNEWPT,^TMP($J)
"RTN","IBCONS1",38,0)
 ;I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBCONS1",39,0)
 Q
"RTN","IBCONS1",40,0)
 ;
"RTN","IBCONS1",41,0)
 ;
"RTN","IBCONS1",42,0)
LOOP3 ; Loop through billed, unbilled, or both types of episodes of care.
"RTN","IBCONS1",43,0)
 I +$G(IBSELUBL) S IBBILL=1,IBNAME="",IBPAGE=0 K IBFLAG D HEAD Q:IBQUIT  D LOOP31 Q:IBQUIT
"RTN","IBCONS1",44,0)
 I +$G(IBSELBNA)!+$G(IBSELBIL) S IBBILL=2,IBNAME="",IBPAGE=0 K IBFLAG D HEAD Q:IBQUIT  D LOOP31 Q:IBQUIT
"RTN","IBCONS1",45,0)
 Q
"RTN","IBCONS1",46,0)
 ;
"RTN","IBCONS1",47,0)
LOOP31 ; Loop through each name or terminal digit (and associated DFN).
"RTN","IBCONS1",48,0)
 F  S IBNAME=$O(^TMP($J,IBDV,IBBILL,IBNAME)) D  Q:IBNAME=""!(IBQUIT)
"RTN","IBCONS1",49,0)
 . I IBNAME="",'$D(IBFLAG) W !!,"No matches found.",!
"RTN","IBCONS1",50,0)
 . Q:IBNAME=""
"RTN","IBCONS1",51,0)
 . S DFN=0 F  S DFN=$O(^TMP($J,IBDV,IBBILL,IBNAME,DFN)) Q:'DFN  S IBNEWPT=1 D LOOP4 Q:IBQUIT
"RTN","IBCONS1",52,0)
 Q
"RTN","IBCONS1",53,0)
 ;
"RTN","IBCONS1",54,0)
LOOP4 ; Loop through each episode of care for a patient.
"RTN","IBCONS1",55,0)
 S IBDAT="" F I=0:0 S IBDAT=$O(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT)) Q:IBDAT=""!(IBQUIT)  D PRINT I $Y>$S($D(IOSL):(IOSL-6),1:6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",56,0)
 Q
"RTN","IBCONS1",57,0)
 ;
"RTN","IBCONS1",58,0)
PRINT ; Print each detail line.
"RTN","IBCONS1",59,0)
 I '$G(IBSELRNB),$D(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2)) Q  ; exclude episodes with reason not billable
"RTN","IBCONS1",60,0)
 I +$G(IBSELRNB)=2,'$D(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2)) Q  ; exclude episode w/o RNB ** PATCH 66
"RTN","IBCONS1",61,0)
 I IBBILL=2,'$G(IBSELBNA),+$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT))=1 Q  ; non-auth episodes  ** PATCH 66
"RTN","IBCONS1",62,0)
 I IBBILL=2,'$G(IBSELBIL),+$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT))=2 Q  ; auth episodes  ** PATCH 66
"RTN","IBCONS1",63,0)
 ;
"RTN","IBCONS1",64,0)
 I +$G(IBNEWPT) W ! D PTPRNT S IBNEWPT=0
"RTN","IBCONS1",65,0)
 D SUMTOT S IBFLAG=1 D PID^VADPT6
"RTN","IBCONS1",66,0)
 W !,VA("BID"),?6,$E($P(^DPT(DFN,0),"^"),1,20),?28,VA("PID"),?42,$E($P($G(^DIC(8,+$G(^(.36)),0)),"^",6),1,16) K VA,VAERR
"RTN","IBCONS1",67,0)
 S Y=IBDAT X ^DD("DD") W ?60,Y
"RTN","IBCONS1",68,0)
 ;
"RTN","IBCONS1",69,0)
 ; -- print insurance, use ibcns1 calls
"RTN","IBCONS1",70,0)
 S X=$$INSP(DFN,IBDAT) W ?82,X
"RTN","IBCONS1",71,0)
 ;
"RTN","IBCONS1",72,0)
 ;S IBCNT=0 F II=0:0 S II=$O(^DPT(DFN,.312,II)) Q:'II  S IBCNT=IBCNT+1,X=+^(II,0) D
"RTN","IBCONS1",73,0)
 ;. I $D(^DIC(36,X,0)) W:IBCNT=2!(IBCNT=3) ", " W:IBCNT<4 $E($P(^(0),"^"),1,14) W:IBCNT=4 " " W:IBCNT>3 "*"
"RTN","IBCONS1",74,0)
 ;
"RTN","IBCONS1",75,0)
 ; -- print reason not billable
"RTN","IBCONS1",76,0)
 I $G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2))]"" W ?115,$E(^(2),1,16)
"RTN","IBCONS1",77,0)
 ;
"RTN","IBCONS1",78,0)
 S X=$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,1))
"RTN","IBCONS1",79,0)
 I X]"" W !?10,$P(X,"^") I $P(X,"^",2)]"" W " with " F IBDC=2:1 Q:$P(X,"^",IBDC)=""  W $P(X,"^",IBDC),", "
"RTN","IBCONS1",80,0)
 S X=^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT) Q:'$L(X)  F K=2:1 S IBIFN=$P(X,"^",K) Q:IBIFN=""  D PRINT1
"RTN","IBCONS1",81,0)
 Q
"RTN","IBCONS1",82,0)
 ;
"RTN","IBCONS1",83,0)
PRINT1 ; If an episode of care has been billed, display billing information.
"RTN","IBCONS1",84,0)
 D GVAR^IBCBB
"RTN","IBCONS1",85,0)
 W !?10,$P(^DGCR(399,IBIFN,0),"^"),?20,$P($G(^DGCR(399.3,+IBAT,0)),"^",4),"-",$S(IBCL<3:"INPT",IBCL>2:"OUTP",1:"")
"RTN","IBCONS1",86,0)
 W ?37,$S(IBST=1:"Entered",IBST=2:"Request MRA",IBST=3:"Authorized",IBST=4:"Prnt/Trans",IBST=7:"Cancelled",IBST=0:"Closed",1:"")
"RTN","IBCONS1",87,0)
 W ?50,"From: ",$E(IBFDT,4,5)_"/"_$E(IBFDT,6,7)_"/"_$E(IBFDT,2,3)
"RTN","IBCONS1",88,0)
 W ?68,"To: ",$E(IBTDT,4,5)_"/"_$E(IBTDT,6,7)_"/"_$E(IBTDT,2,3)
"RTN","IBCONS1",89,0)
 W ?88,$S($P(IBND0,U,21)="S":"s",$P(IBND0,U,21)="T":"t",1:"")
"RTN","IBCONS1",90,0)
 W ?91,"Debtor: "
"RTN","IBCONS1",91,0)
 I IBWHO="i",$D(^DIC(36,+IBNDMP,0)) W $P(^(0),"^")
"RTN","IBCONS1",92,0)
 I IBWHO="o",$D(^DIC(4,+$P(IBNDM,"^",11),0)) W $P(^(0),"^")
"RTN","IBCONS1",93,0)
 I IBWHO="p" W $P(^DPT(DFN,0),"^")
"RTN","IBCONS1",94,0)
 D END^IBCBB1 Q
"RTN","IBCONS1",95,0)
 ;
"RTN","IBCONS1",96,0)
HEAD ; Print header; don't pause on first pass through.
"RTN","IBCONS1",97,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,IBQUIT)=1 Q
"RTN","IBCONS1",98,0)
 D:'IBFL PAUSE Q:IBQUIT  S IBFL=0 N IBI
"RTN","IBCONS1",99,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCONS1",100,0)
 ; -- ibformfd = skip only intial form feed, need ffs for each div.
"RTN","IBCONS1",101,0)
 I $E(IOST,1,2)["C-"!(IBPAGE>1)!($G(IBFORMFD)) W @IOF
"RTN","IBCONS1",102,0)
 S IBFORMFD=1
"RTN","IBCONS1",103,0)
 S IBI=$S(IBBILL=2:"PREVIOUSLY ",1:"UN")_"BILLED PATIENTS"
"RTN","IBCONS1",104,0)
 I '$G(IBSELCDV) S IBI=IBI_" for Division "_$P($G(^DG(40.8,+IBDV,0)),"^")
"RTN","IBCONS1",105,0)
 I +$G(IBSELCDV) S IBI=IBI_IBHDRDV
"RTN","IBCONS1",106,0)
 I +$G(IBSUM) S IBI="Summary"
"RTN","IBCONS1",107,0)
 W IBHD,!,IBI W:$L(IBI)>78 ! W ?80,"Printed: ",IBDATE,?118,"Page: ",IBPAGE
"RTN","IBCONS1",108,0)
 I +$G(IBSUM) W !,?40,"Unbilled",?53,"Unbilled w/RNB",?70,"Billed/Not Auth",?88,"Billed/Auth",?103,"# Visits",?117,"# Patients",!,IBL Q
"RTN","IBCONS1",109,0)
 W !,"PT ID PATIENT",?28,"SSN",?42,"ELIGIBILITY",?60,"DATE OF ",$S(IBINPT=2:"DISCHARGE",1:"CARE"),?82,"INSURANCE COMPANIES"
"RTN","IBCONS1",110,0)
 W:+$G(IBSELRNB) ?115,"NOT BILLABLE"
"RTN","IBCONS1",111,0)
 W !,IBL
"RTN","IBCONS1",112,0)
 Q
"RTN","IBCONS1",113,0)
 ;
"RTN","IBCONS1",114,0)
INSP(DFN,IBDAT) ; -- print ins. company on report logic
"RTN","IBCONS1",115,0)
 N X,IBDD,IBDDINS,IBCNT
"RTN","IBCONS1",116,0)
 S IBCNT=0,IBDDINS=""
"RTN","IBCONS1",117,0)
 I '$G(DFN)!('$G(IBDAT)) G INSPQ
"RTN","IBCONS1",118,0)
 S IBDD="" D ALL^IBCNS1(DFN,"IBDD",4,IBDAT)
"RTN","IBCONS1",119,0)
 S X=0 F  S X=$O(IBDD(X)) Q:'X!(IBCNT>2)  D
"RTN","IBCONS1",120,0)
 .S IBCNT=IBCNT+1
"RTN","IBCONS1",121,0)
 .I IBCNT>1 S IBDDINS=IBDDINS_","
"RTN","IBCONS1",122,0)
 .S IBDDINS=IBDDINS_$E($P($G(^DIC(36,+$G(IBDD(X,0)),0)),"^"),1,10)
"RTN","IBCONS1",123,0)
 S IBDDINS=$E(IBDDINS,1,30)
"RTN","IBCONS1",124,0)
 I $G(IBDD(0))>3 S IBDDINS=IBDDINS_"*"
"RTN","IBCONS1",125,0)
INSPQ Q IBDDINS
"RTN","IBCONS1",126,0)
 ;
"RTN","IBCONS1",127,0)
PAUSE Q:$E(IOST,1,2)'="C-"
"RTN","IBCONS1",128,0)
 F J=$Y:1:(IOSL-5) W !
"RTN","IBCONS1",129,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCONS1",130,0)
 Q
"RTN","IBCONS1",131,0)
PRNSUM ; print 1 line of the summary
"RTN","IBCONS1",132,0)
 N IBSUM S IBSUM=$G(^TMP($J,"TOTAL",IBDV)) Q:IBSUM=""
"RTN","IBCONS1",133,0)
 W !,$S(IBDV="TOTAL":IBDV,1:$P($G(^DG(40.8,+IBDV,0)),U,1))
"RTN","IBCONS1",134,0)
 W ?40,$P(IBSUM,U,2),?58,$P(IBSUM,U,3),?75,$P(IBSUM,U,4),?91,$P(IBSUM,U,5),?105,$P(IBSUM,U,1),?120,$P(IBSUM,U,6)
"RTN","IBCONS1",135,0)
 Q
"RTN","IBCONS1",136,0)
DATE(X) ;
"RTN","IBCONS1",137,0)
 N Y S Y="" I +$G(X) S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCONS1",138,0)
 Q Y
"RTN","IBCONS1",139,0)
 ;
"RTN","IBCONS1",140,0)
SUMTOT ; total cnt of visits ^ cnt unbilled ^ cnt unbilled w/RNB ^ cnt billed/not auth ^ cnt billed/auth ^ cnt of pats
"RTN","IBCONS1",141,0)
 N IBSUM,IBTOT,IBBILLED,IBRMARK
"RTN","IBCONS1",142,0)
 S IBBILLED=$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT)),IBRMARK=$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2))
"RTN","IBCONS1",143,0)
 S IBSUM=$G(^TMP($J,"TOTAL",+IBDV)),IBTOT=$G(^TMP($J,"TOTAL","TOTAL"))
"RTN","IBCONS1",144,0)
 S $P(IBSUM,U,1)=+$P(IBSUM,U,1)+1,$P(IBTOT,U,1)=+$P(IBTOT,U,1)+1
"RTN","IBCONS1",145,0)
 I 'IBBILLED,IBRMARK="" S $P(IBSUM,U,2)=$P(IBSUM,U,2)+1,$P(IBTOT,U,2)=$P(IBTOT,U,2)+1
"RTN","IBCONS1",146,0)
 I 'IBBILLED,IBRMARK'="" S $P(IBSUM,U,3)=$P(IBSUM,U,3)+1,$P(IBTOT,U,3)=$P(IBTOT,U,3)+1
"RTN","IBCONS1",147,0)
 I +IBBILLED=1 S $P(IBSUM,U,4)=$P(IBSUM,U,4)+1,$P(IBTOT,U,4)=$P(IBTOT,U,4)+1
"RTN","IBCONS1",148,0)
 I +IBBILLED=2 S $P(IBSUM,U,5)=$P(IBSUM,U,5)+1,$P(IBTOT,U,5)=$P(IBTOT,U,5)+1
"RTN","IBCONS1",149,0)
 I '$D(^TMP($J,"TOTAL",+IBDV,DFN)) S $P(IBSUM,U,6)=$P(IBSUM,U,6)+1
"RTN","IBCONS1",150,0)
 I '$D(^TMP($J,"TOTAL","TOTAL",DFN)) S $P(IBTOT,U,6)=$P(IBTOT,U,6)+1
"RTN","IBCONS1",151,0)
 I +IBDV S ^TMP($J,"TOTAL",+IBDV)=IBSUM,^TMP($J,"TOTAL",+IBDV,DFN)=""
"RTN","IBCONS1",152,0)
 S ^TMP($J,"TOTAL","TOTAL")=IBTOT,^TMP($J,"TOTAL","TOTAL",DFN)=""
"RTN","IBCONS1",153,0)
 Q
"RTN","IBCONS1",154,0)
 ;
"RTN","IBCONS1",155,0)
PTPRNT ; print patient specific data is requested:  Rate Disabilities and expanded insurance Info
"RTN","IBCONS1",156,0)
 ;
"RTN","IBCONS1",157,0)
 N IBLN1,IBI,IBX,IBY,IBD,IBLN2,IBLN3,IBY1,IBJ,IBY3,IBRIDE,IBPLAN,IBCVG
"RTN","IBCONS1",158,0)
 S IBLN1=$P($G(^DPT(+DFN,0)),U,1) I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",159,0)
 ;
"RTN","IBCONS1",160,0)
 I +$G(IBPRTRDS) S IBLN2="Rated Disabilities:" D  Q:+$G(IBQUIT)  K IBX,IBY
"RTN","IBCONS1",161,0)
 . I '$O(^DPT(DFN,.372,0)) W !,IBLN1,?33,IBLN2,"  None" S (IBLN1,IBLN2)="" Q
"RTN","IBCONS1",162,0)
 . S IBI=0 F  S IBI=$O(^DPT(DFN,.372,IBI)) Q:'IBI  D  I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",163,0)
 .. S IBX=$G(^DPT(DFN,.372,IBI,0)),IBY=$G(^DIC(31,+IBX,0))
"RTN","IBCONS1",164,0)
 .. S IBD=$S($P(IBY,U,4)="":$P(IBY,U,1),1:$P(IBY,U,4))_" ("_$P(IBX,U,2)_"%-"_$S(+$P(IBX,U,3):"SC",1:"NSC")_")"
"RTN","IBCONS1",165,0)
 .. W !,IBLN1,?33,IBLN2,?57,IBD S (IBLN1,IBLN2)=""
"RTN","IBCONS1",166,0)
 ;
"RTN","IBCONS1",167,0)
 I '$G(IBPRTIEX),'$G(IBPRTIPC),'$G(IBPRTIGC),'$G(IBPRTICR) Q
"RTN","IBCONS1",168,0)
 ;
"RTN","IBCONS1",169,0)
 W:IBLN1'="" !,IBLN1
"RTN","IBCONS1",170,0)
 D ALL^IBCNS1(DFN,"IBX",4,IBBEG),ALL^IBCNS1(DFN,"IBX",4,IBEND)
"RTN","IBCONS1",171,0)
 ;
"RTN","IBCONS1",172,0)
 S IBI=0 F  S IBI=$O(IBX(IBI)) Q:'IBI  D  Q:+$G(IBQUIT)  I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",173,0)
 . S IBY=IBX(IBI,0),IBY1=IBX(IBI,1)
"RTN","IBCONS1",174,0)
 . S IBLN1=$E($P($G(^DIC(36,+IBY,0)),U,1),1,25),IBPLAN=+$P(IBY,U,18)
"RTN","IBCONS1",175,0)
 . ;
"RTN","IBCONS1",176,0)
 . ;IB*2.0*516/DRF - Retrieve HIPAA compliant Group #
"RTN","IBCONS1",177,0)
 . ;I +$G(IBPRTIEX) W !,?5,IBLN1,?33,"Group #: ",$P($G(^IBA(355.3,+IBPLAN,0)),U,4),?65,"Effective: ",$$DATE(+$P(IBY,U,8))," - ",$$DATE(+$P(IBY,U,4)),?100,"Last Ver: ",$$DATE($P(IBY1,U,3)) S IBLN1=""
"RTN","IBCONS1",178,0)
 . I +$G(IBPRTIEX) D
"RTN","IBCONS1",179,0)
 .. W !,?5,IBLN1,?33,"Group #: ",$P(IBY,U,3)
"RTN","IBCONS1",180,0)
 .. W !,?33,"Effective: ",$$DATE(+$P(IBY,U,8))," - ",$$DATE(+$P(IBY,U,4)),?68,"Last Ver: ",$$DATE($P(IBY1,U,3)) S IBLN1=""
"RTN","IBCONS1",181,0)
 . ;
"RTN","IBCONS1",182,0)
 . I +$G(IBPRTIPC) S IBLN2="Policy Comment: " D  I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",183,0)
 .. I $P(IBY1,U,8)'="" W !,?5,IBLN1,?33,IBLN2,?51,$P(IBY1,U,8) S (IBLN1,IBLN2)=""
"RTN","IBCONS1",184,0)
 . ;
"RTN","IBCONS1",185,0)
 . I +$G(IBPRTIGC) S IBLN2="Group Comments: " D
"RTN","IBCONS1",186,0)
 .. S IBJ=0 F  S IBJ=$O(^IBA(355.3,+IBPLAN,11,IBJ)) Q:'IBJ  D  I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",187,0)
 ... S IBY3=$G(^IBA(355.3,+IBPLAN,11,IBJ,0)) W !,?5,IBLN1,?33,IBLN2,?51,IBY3 S (IBLN1,IBLN2)=""
"RTN","IBCONS1",188,0)
 . ;
"RTN","IBCONS1",189,0)
 . I +$G(IBPRTICR) S IBLN2="Coverage Limits:" D
"RTN","IBCONS1",190,0)
 .. S IBCVG=0 F  S IBCVG=$O(^IBA(355.32,"B",IBPLAN,IBCVG)) Q:'IBCVG  D  I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",191,0)
 ... S IBY3=$G(^IBA(355.32,IBCVG,0)) Q:IBY3=""
"RTN","IBCONS1",192,0)
 ... S IBLN3=$E($P($G(^IBE(355.31,+$P(IBY3,U,2),0)),U,1),1,20)_" "_$$DDSET(355.32,.04,+$P(IBY3,U,4))_"  "_$$DATE(+$P(IBY3,U,3))
"RTN","IBCONS1",193,0)
 ... S IBJ=0 F  S IBJ=$O(^IBA(355.32,IBCVG,2,IBJ)) Q:'IBJ  D  I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",194,0)
 .... W !,?5,IBLN1,?33,IBLN2,?51,IBLN3,?104,$G(^IBA(355.32,IBCVG,2,IBJ,0)) S (IBLN1,IBLN2,IBLN3)=""
"RTN","IBCONS1",195,0)
 ... I IBLN3'="" W !,?5,IBLN1,?33,IBLN2,?51,IBLN3 S (IBLN1,IBLN2,IBLN3)=""
"RTN","IBCONS1",196,0)
 . ;
"RTN","IBCONS1",197,0)
 . I +$G(IBPRTICR) S IBLN2="Riders: " D
"RTN","IBCONS1",198,0)
 .. S IBRIDE=0 F  S IBRIDE=$O(^IBA(355.7,"APP",DFN,IBI,IBRIDE)) Q:'IBRIDE  D  I $Y>(IOSL-6) W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",199,0)
 ... W !,?5,IBLN1,?33,IBLN2,?51,$P($G(^IBE(355.6,+IBRIDE,0)),U,1) S (IBLN1,IBLN2)=""
"RTN","IBCONS1",200,0)
 ;
"RTN","IBCONS1",201,0)
 W !
"RTN","IBCONS1",202,0)
 Q
"RTN","IBCONS1",203,0)
 ;
"RTN","IBCONS1",204,0)
DDSET(FILE,FLD,X) ; returns external value for a set
"RTN","IBCONS1",205,0)
 N Y,Z,T S Z="",Y=$G(^DD(+$G(FILE),+$G(FLD),0)) S T=$G(X)_":",Z=$P($P(Y,T,2),";",1)
"RTN","IBCONS1",206,0)
 Q Z
"RTN","IBCOPP2")
0^86^B20749250^B19008544
"RTN","IBCOPP2",1,0)
IBCOPP2 ;ALB/NLR - LIST INS. PLANS BY CO. (COMPILE) ; 06-SEP-94
"RTN","IBCOPP2",2,0)
V ;;2.0;INTEGRATED BILLING;**28,62,93,516**;21-MAR-94;Build 123
"RTN","IBCOPP2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPP2",4,0)
 ;
"RTN","IBCOPP2",5,0)
EN ; Queued Entry Point for Report.
"RTN","IBCOPP2",6,0)
 ;  Required variable input:  IBAI, IBAPL, IBAPA
"RTN","IBCOPP2",7,0)
 ;  ^TMP("IBINC",$J) required if all companies and plans not selected
"RTN","IBCOPP2",8,0)
 ;
"RTN","IBCOPP2",9,0)
 ; - compile report data
"RTN","IBCOPP2",10,0)
 S IBI=0 K ^TMP($J,"PR"),^TMP($J,"PL")
"RTN","IBCOPP2",11,0)
 ;
"RTN","IBCOPP2",12,0)
 ; - user wanted all companies and plans
"RTN","IBCOPP2",13,0)
 I IBAI,IBAPL D  G PRINT
"RTN","IBCOPP2",14,0)
 .S IBIC1="" F  S IBIC1=$O(^DIC(36,"B",IBIC1)) Q:IBIC1=""  D
"RTN","IBCOPP2",15,0)
 ..S IBCNS=0 F  S IBCNS=$O(^DIC(36,"B",IBIC1,IBCNS)) Q:'IBCNS  I $D(^IBA(355.3,"B",IBCNS)) S IBIC=IBIC1 D GATH
"RTN","IBCOPP2",16,0)
 ;
"RTN","IBCOPP2",17,0)
 ; - user selected companies or plans
"RTN","IBCOPP2",18,0)
 S IBIC="" F  S IBIC=$O(^TMP("IBINC",$J,IBIC)) Q:IBIC=""  D
"RTN","IBCOPP2",19,0)
 .S IBCNS=0 F  S IBCNS=$O(^TMP("IBINC",$J,IBIC,IBCNS)) Q:'IBCNS  D GATH
"RTN","IBCOPP2",20,0)
 ;
"RTN","IBCOPP2",21,0)
PRINT ; - print report
"RTN","IBCOPP2",22,0)
 D ^IBCOPP3
"RTN","IBCOPP2",23,0)
 K ^TMP($J,"PR"),^TMP("IBINC",$J)
"RTN","IBCOPP2",24,0)
 ;
"RTN","IBCOPP2",25,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCOPP2",26,0)
 D ^%ZISC
"RTN","IBCOPP2",27,0)
 K IBI,IBIC,IBIC1,IBCNS,IBCPT,IBCPS,IBCST,IBCSS
"RTN","IBCOPP2",28,0)
 Q
"RTN","IBCOPP2",29,0)
 ;
"RTN","IBCOPP2",30,0)
 ;
"RTN","IBCOPP2",31,0)
GATH ; Gather all data for a company.
"RTN","IBCOPP2",32,0)
 S IBI=IBI+1,(IBCPT,IBCPS,IBCST,IBCSS)=0 ; initialize counters
"RTN","IBCOPP2",33,0)
 D COMP ; gather company info
"RTN","IBCOPP2",34,0)
 D PLAN ; gather plan info
"RTN","IBCOPP2",35,0)
 ;
"RTN","IBCOPP2",36,0)
 ; - set final company info
"RTN","IBCOPP2",37,0)
 S ^TMP($J,"PR",IBI)=$$COMPINF(IBCNS)_"^"_IBCPT_"^"_IBCST_"^"_IBCPS_"^"_IBCSS
"RTN","IBCOPP2",38,0)
 K ^TMP($J,"PL")
"RTN","IBCOPP2",39,0)
 Q
"RTN","IBCOPP2",40,0)
 ;
"RTN","IBCOPP2",41,0)
 ;
"RTN","IBCOPP2",42,0)
COMP ; Gather Company counts and subscription information, if necessary
"RTN","IBCOPP2",43,0)
 ;  Input:  IBCNS -- Pointer to the insurance company in file #36
"RTN","IBCOPP2",44,0)
 ;         initialized counters, plus the 'Plan' array (^TMP("IBINC",$J))
"RTN","IBCOPP2",45,0)
 ;  
"RTN","IBCOPP2",46,0)
 S DFN=0 F  S DFN=$O(^DPT("AB",IBCNS,DFN)) Q:'DFN  D
"RTN","IBCOPP2",47,0)
 .S IBCDFN=0 F  S IBCDFN=$O(^DPT("AB",IBCNS,DFN,IBCDFN)) Q:'IBCDFN  D
"RTN","IBCOPP2",48,0)
 ..;
"RTN","IBCOPP2",49,0)
 ..; - set company subscriber count; plan subscriber counts if necessary
"RTN","IBCOPP2",50,0)
 ..; MRD;IB*2.0*516 - Use $$ZND^IBCNS1 to pull .312 zero node.
"RTN","IBCOPP2",51,0)
 ..;S IBIND=$G(^DPT(DFN,.312,+IBCDFN,0)) Q:+IBIND'=IBCNS
"RTN","IBCOPP2",52,0)
 ..S IBIND=$$ZND^IBCNS1(DFN,+IBCDFN) Q:+IBIND'=IBCNS
"RTN","IBCOPP2",53,0)
 ..S IBPTR=+$P(IBIND,"^",18)
"RTN","IBCOPP2",54,0)
 ..S IBCST=IBCST+1
"RTN","IBCOPP2",55,0)
 ..I 'IBAPL,'$D(^TMP("IBINC",$J,IBIC,IBCNS,IBPTR)) Q  ; not a selected plan
"RTN","IBCOPP2",56,0)
 ..S IBCSS=IBCSS+1,^(IBPTR)=$G(^TMP($J,"PL",IBPTR))+1
"RTN","IBCOPP2",57,0)
 ..Q:'IBAPA  ; policy information not selected
"RTN","IBCOPP2",58,0)
 ..;
"RTN","IBCOPP2",59,0)
 ..; - gather demographic/policy information
"RTN","IBCOPP2",60,0)
 ..S X=$$PT^IBEFUNC(DFN)
"RTN","IBCOPP2",61,0)
 ..S IBNAM=$E($S($P(X,"^")]"":$P(X,"^"),1:"<Pt. "_DFN_" Name Missing>")_$J("",25),1,25)_" ("_$E(X)_$P(X,"^",3)_")"
"RTN","IBCOPP2",62,0)
 ..S IBDOB=$$DAT3^IBOUTL($P($G(^DPT(DFN,0)),"^",3))
"RTN","IBCOPP2",63,0)
 ..S IBWI=$P(IBIND,"^",6),IBWI=$S(IBWI="v":"VET",IBWI="s":"SPO",IBWI="o":"OTH",1:"<UNK>")
"RTN","IBCOPP2",64,0)
 ..S VAOA("A")=$S(IBWI="SPO":6,1:5) D OAD^VADPT
"RTN","IBCOPP2",65,0)
 ..;
"RTN","IBCOPP2",66,0)
 ..; - build detail line
"RTN","IBCOPP2",67,0)
 ..S IBX=IBNAM_U_IBDOB_U_$E(VAOA(9),1,18)_U_$S($P(IBIND,"^",2)]"":$E($P(IBIND,"^",2),1,17),1:"<NO SUBS ID>")
"RTN","IBCOPP2",68,0)
 ..S IBX=IBX_U_IBWI_U_$$DAT1^IBOUTL($P(IBIND,"^",8))_U_$$DAT1^IBOUTL($P(IBIND,"^",4))
"RTN","IBCOPP2",69,0)
 ..S X=0,Y="" F  S Y=$O(^IBA(355.5,"APPY",DFN,IBPTR,Y)) Q:Y=""  I $O(^(Y,0))=IBCDFN S X=1 Q
"RTN","IBCOPP2",70,0)
 ..S ^TMP($J,"PR",IBI,IBPTR,IBNAM_"@@"_DFN_"@@"_IBCDFN)=IBX_"^"_X
"RTN","IBCOPP2",71,0)
 ;
"RTN","IBCOPP2",72,0)
 K DFN,IBCDFN,IBIND,IBPTR,IBNAM,IBDOB,IBWI,IBX,X,VAOA,VA,VAERR,Y
"RTN","IBCOPP2",73,0)
 Q
"RTN","IBCOPP2",74,0)
 ;
"RTN","IBCOPP2",75,0)
PLAN ; Gather Insurance Plan information, if necessary
"RTN","IBCOPP2",76,0)
 ;  Input:  IBCNS -- Pointer to the insurance company in file #36
"RTN","IBCOPP2",77,0)
 ;         initialized counters, plus the 'Plan' array (^TMP("IBINC",$J))
"RTN","IBCOPP2",78,0)
 ; 
"RTN","IBCOPP2",79,0)
 S IBPTR=0 F  S IBPTR=$O(^IBA(355.3,"B",IBCNS,IBPTR)) Q:'IBPTR  D
"RTN","IBCOPP2",80,0)
 .S IBCPT=IBCPT+1
"RTN","IBCOPP2",81,0)
 .I 'IBAPL,'$D(^TMP("IBINC",$J,IBIC,IBCNS,IBPTR)) Q  ; not a selected plan
"RTN","IBCOPP2",82,0)
 .S IBCPS=IBCPS+1
"RTN","IBCOPP2",83,0)
 .S ^TMP($J,"PR",IBI,IBPTR)=$$PLANINF(IBPTR)_"^"_+$G(^TMP($J,"PL",IBPTR))
"RTN","IBCOPP2",84,0)
 K IBPTR
"RTN","IBCOPP2",85,0)
 Q
"RTN","IBCOPP2",86,0)
 ;
"RTN","IBCOPP2",87,0)
PLANINF(PLAN) ; Return formatted Insurance Plan information.
"RTN","IBCOPP2",88,0)
 ;  Input:  PLAN  --  Pointer to the plan in file #355.3
"RTN","IBCOPP2",89,0)
 ; Output:  plan number ^ name ^ grp/ind ^ act/inact
"RTN","IBCOPP2",90,0)
 ;
"RTN","IBCOPP2",91,0)
 N ACT,NAME,NUM,TY,X
"RTN","IBCOPP2",92,0)
 S X=$G(^IBA(355.3,PLAN,0))
"RTN","IBCOPP2",93,0)
 S TY=$S($P(X,"^",2):"GRP",1:"IND")
"RTN","IBCOPP2",94,0)
 ;S NAME=$P(X,"^",3) S:NAME="" NAME="<NO GROUP NAME>"
"RTN","IBCOPP2",95,0)
 ;S NUM=$P(X,"^",4) S:NUM="" NUM="<NO GROUP NUMBER>"
"RTN","IBCOPP2",96,0)
 ;Get new HIPAA fields - IB*2*516
"RTN","IBCOPP2",97,0)
 S NAME=$$GET1^DIQ(355.3,PLAN,2.01) S:NAME="" NAME="<NO GROUP NAME>"
"RTN","IBCOPP2",98,0)
 S NUM=$$GET1^DIQ(355.3,PLAN,2.02) S:NUM="" NUM="<NO GROUP NUMBER>"
"RTN","IBCOPP2",99,0)
 S ACT=$S($P(X,"^",11):"IN",1:"")_"ACTIVE"
"RTN","IBCOPP2",100,0)
 Q NUM_"^"_NAME_"^"_TY_"^"_ACT_"^"_$S($D(^IBA(355.4,"APY",PLAN))>0:"YES",1:"NO")_"^"_$S($D(^IBA(355.5,"B",PLAN))>0:"YES",1:"NO")
"RTN","IBCOPP2",101,0)
 ;
"RTN","IBCOPP2",102,0)
COMPINF(IBCNS) ; Return formatted Insurance Company information
"RTN","IBCOPP2",103,0)
 ;  Input:  IBCNS  --  Pointer to the insurance company in file #36
"RTN","IBCOPP2",104,0)
 ; Output:  company name ^ addr ^ city/st/zip ^ phone ^ precert ^ act?
"RTN","IBCOPP2",105,0)
 ;
"RTN","IBCOPP2",106,0)
 N ST,X,X0,X11,X13,Z
"RTN","IBCOPP2",107,0)
 S X0=$G(^DIC(36,IBCNS,0)),X11=$G(^(.11)),X13=$G(^(.13)),Z=$P(X11,"^",6)
"RTN","IBCOPP2",108,0)
 S ST=$S($P(X11,"^",5):$P($G(^DIC(5,$P(X11,"^",5),0)),"^",2),1:"<STATE MISSING>")
"RTN","IBCOPP2",109,0)
 S X="Ins. Co.: "_$E($P(X0,"^"),1,25)
"RTN","IBCOPP2",110,0)
 S X=X_U_$S($P(X11,"^")'="":$P(X11,"^"),1:"<Street Addr. 1 Missing>")
"RTN","IBCOPP2",111,0)
 S X=X_U_$P(X11,"^",4)_", "_ST_"  "_$E(Z,1,5)_$S($E(Z,6,9)]"":"-"_$E(Z,6,9),1:"")
"RTN","IBCOPP2",112,0)
 S X=X_U_"Phone: "_$P(X13,"^")_U_"Precert Phone: "_$P(X13,"^",3)
"RTN","IBCOPP2",113,0)
 Q X_U_$S($P(X0,"^",5):"IN",1:"")_"ACTIVE COMPANY"
"RTN","IBCOPP3")
0^143^B10453963^B9597460
"RTN","IBCOPP3",1,0)
IBCOPP3 ;ALB/NLR - LIST INS. PLANS BY CO. (PRINT) ; 04-OCT-94
"RTN","IBCOPP3",2,0)
 ;;2.0;INTEGRATED BILLING;**28,516**;21-MAR-94;Build 123
"RTN","IBCOPP3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPP3",4,0)
 ;
"RTN","IBCOPP3",5,0)
 ; Print the report.
"RTN","IBCOPP3",6,0)
 ;  Required Input:  Global print array ^TMP($J,"PR"
"RTN","IBCOPP3",7,0)
 ;                   local variable IBAPA
"RTN","IBCOPP3",8,0)
 ; 
"RTN","IBCOPP3",9,0)
 S (IBI,IBQUIT,IBPAG)=0
"RTN","IBCOPP3",10,0)
 D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12))
"RTN","IBCOPP3",11,0)
 F  S IBI=$O(^TMP($J,"PR",IBI)) Q:'IBI  S IBC=$G(^(IBI)) D COMP D  Q:IBQUIT
"RTN","IBCOPP3",12,0)
 .S IBP=0 F  S IBP=$O(^TMP($J,"PR",IBI,IBP)) Q:'IBP  S IBPD=$G(^(IBP)) D  Q:IBQUIT
"RTN","IBCOPP3",13,0)
 ..I $Y>(IOSL-$S(IBAPA:9,1:5)) D PAUSE Q:IBQUIT  D COMP
"RTN","IBCOPP3",14,0)
 ..D PLAN
"RTN","IBCOPP3",15,0)
 ..I IBAPA S IBS="" F  S IBS=$O(^TMP($J,"PR",IBI,IBP,IBS)) Q:IBS=""  S IBSD=$G(^(IBS)) D SUBS Q:IBQUIT
"RTN","IBCOPP3",16,0)
 .Q:IBQUIT
"RTN","IBCOPP3",17,0)
 .;
"RTN","IBCOPP3",18,0)
 .; - print company totals
"RTN","IBCOPP3",19,0)
 .I $Y>(IOSL-4) D PAUSE Q:IBQUIT  D COMP,PLAN
"RTN","IBCOPP3",20,0)
 .W !!?90,"Number of Plans Selected = ",$P(IBC,"^",9),!?76,"Total Subscribers Under Selected Plans = ",$P(IBC,"^",10)
"RTN","IBCOPP3",21,0)
 .D PAUSE
"RTN","IBCOPP3",22,0)
 ;
"RTN","IBCOPP3",23,0)
 K IBJJ,IBI,IBQUIT,IBPAG,IBHDT,IBC,IBP,IBPD,IBS,IBSD
"RTN","IBCOPP3",24,0)
 Q
"RTN","IBCOPP3",25,0)
 ;
"RTN","IBCOPP3",26,0)
 ;
"RTN","IBCOPP3",27,0)
COMP ; Print Company header
"RTN","IBCOPP3",28,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBCOPP3",29,0)
 S IBPAG=IBPAG+1
"RTN","IBCOPP3",30,0)
 W !,"LIST OF PLANS BY INSURANCE COMPANY"
"RTN","IBCOPP3",31,0)
 W:IBAPA " WITH SUBSCRIBER INFORMATION"
"RTN","IBCOPP3",32,0)
 W ?IOM-34,IBHDT,?IOM-10,"Page: ",IBPAG
"RTN","IBCOPP3",33,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCOPP3",34,0)
 ;
"RTN","IBCOPP3",35,0)
 ; - sub-header
"RTN","IBCOPP3",36,0)
 ; MRD;IB*2.0*516 - Adjusted columns to allow more space for Employer
"RTN","IBCOPP3",37,0)
 ; and Subscriber ID.
"RTN","IBCOPP3",38,0)
 W !?1,$P(IBC,"^"),?45,$P(IBC,"^",4),?105,$P(IBC,"^",6)
"RTN","IBCOPP3",39,0)
 W !?11,$P(IBC,"^",2),?45,$P(IBC,"^",5),?105,"PLAN TOTAL= ",$P(IBC,"^",7)
"RTN","IBCOPP3",40,0)
 W !?11,$P(IBC,"^",3),?99,"SUBSCRIBER TOTAL= ",$P(IBC,"^",8)
"RTN","IBCOPP3",41,0)
 W:IBAPA !!?99,"WHOSE",?127,"BEN.",!?3,"SUBSCRIBER NAME/ID",?38,"DOB",?50,"EMPLOYER",?76,"SUBSCR ID",?99,"INS",?107,"EFF DATE",?117,"EXP DATE",?127,"USED?"
"RTN","IBCOPP3",42,0)
 W:'IBAPA !!?5,"GROUP NUMBER",?32,"GROUP NAME",?62,"GROUP OR IND",?77,"ACTIVE/INACTIVE",?96,"SUBSCRIBERS",?110,"ANN. BEN?  BEN. USED?"
"RTN","IBCOPP3",43,0)
 Q
"RTN","IBCOPP3",44,0)
 ;
"RTN","IBCOPP3",45,0)
PLAN ; Print plan information.
"RTN","IBCOPP3",46,0)
 ; MRD;IB*2.0*516 - Adjusted columns and added $E to Group # and Name.
"RTN","IBCOPP3",47,0)
 I IBAPA D
"RTN","IBCOPP3",48,0)
 .W !!?3,"GROUP #: ",$E($P(IBPD,U),1,62),?76,"ANNUAL BENEFITS ON FILE: ",$P(IBPD,U,5)
"RTN","IBCOPP3",49,0)
 .W !?5,"GROUP NAME: ",$E($P(IBPD,U,2),1,59),?78,"BENEFITS USED ON FILE: ",$P(IBPD,U,6)
"RTN","IBCOPP3",50,0)
 .W !?7,"GROUP OR IND: ",$P(IBPD,U,3),!?9,"ACTIVE?: ",$P(IBPD,U,4),!?11,"NO. SUBSCRIBERS: ",$P(IBPD,U,7)
"RTN","IBCOPP3",51,0)
 I 'IBAPA W !!?5,$P(IBPD,U),?32,$P(IBPD,U,2),?62,$P(IBPD,U,3),?77,$P(IBPD,U,4),?100,$P(IBPD,U,7),?113,$P(IBPD,U,5),?124,$P(IBPD,U,6)
"RTN","IBCOPP3",52,0)
 Q
"RTN","IBCOPP3",53,0)
 ;
"RTN","IBCOPP3",54,0)
SUBS ; Print subscriber information.
"RTN","IBCOPP3",55,0)
 ; MRD;IB*2.0*516 - Shifted some fields to allow Employer and
"RTN","IBCOPP3",56,0)
 ; Subscriber ID to display more characters.
"RTN","IBCOPP3",57,0)
 I $Y>(IOSL-4) D PAUSE Q:IBQUIT  D COMP,PLAN
"RTN","IBCOPP3",58,0)
 ;W !?3,$P(IBSD,"^"),?40,$P(IBSD,"^",2),?54,$P(IBSD,"^",3),?76,$P(IBSD,"^",4),?95,$P(IBSD,"^",5)
"RTN","IBCOPP3",59,0)
 ;W ?105,$P(IBSD,"^",6),?117,$P(IBSD,"^",7),?128,$S($P(IBSD,"^",8):"YES",1:"NO")
"RTN","IBCOPP3",60,0)
 W !?3,$P(IBSD,"^"),?38,$P(IBSD,"^",2),?50,$E($P(IBSD,"^",3),1,20),?76,$E($P(IBSD,"^",4),1,25),?99,$P(IBSD,"^",5)
"RTN","IBCOPP3",61,0)
 W ?107,$P(IBSD,"^",6),?117,$P(IBSD,"^",7),?128,$S($P(IBSD,"^",8):"YES",1:"NO")
"RTN","IBCOPP3",62,0)
 Q
"RTN","IBCOPP3",63,0)
 ;
"RTN","IBCOPP3",64,0)
PAUSE ; Pause for screen output.
"RTN","IBCOPP3",65,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBCOPP3",66,0)
 F IBJJ=$Y:1:(IOSL-7) W !
"RTN","IBCOPP3",67,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCOPP3",68,0)
 Q
"RTN","IBCRBC")
0^107^B13081185^B11588633
"RTN","IBCRBC",1,0)
IBCRBC ;ALB/ARH - RATES: BILL CALCULATION OF CHARGES ; 22-MAY-1996
"RTN","IBCRBC",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,137,245,370,516**;21-MAR-94;Build 123
"RTN","IBCRBC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCRBC",4,0)
 ;
"RTN","IBCRBC",5,0)
 ; Variable DGPTUPDT may be defined on entry/exit for inpt bills so the PTF will only be updated once per session
"RTN","IBCRBC",6,0)
 ; Charges may be filed on the bill and if IBRSARR is passed but does not exist it may be updated
"RTN","IBCRBC",7,0)
 ; otherwise there are no other outputs/results of this call.
"RTN","IBCRBC",8,0)
 ;
"RTN","IBCRBC",9,0)
BILL(IBIFN,IBRSARR) ; given a bill number calculate and store all charges
"RTN","IBCRBC",10,0)
 ; if IBRSARR is defined it will be used to create charges rather than the standard set for the bills Rate Type
"RTN","IBCRBC",11,0)
 ;
"RTN","IBCRBC",12,0)
 ; MRD;IB*2.0*516 - Added the flag IBNOCALC.  This flag is set two
"RTN","IBCRBC",13,0)
 ; places in ^IBCCC -- when the user is CLONing a claim (cancel and
"RTN","IBCRBC",14,0)
 ; copy) or CRDing a claim (correct rejected/denied).  The first time
"RTN","IBCRBC",15,0)
 ; this procedure is entered for the new claim, if the IBNOCALC flag is
"RTN","IBCRBC",16,0)
 ; set, it will reset the flag and quit out.  That is, it does not re-
"RTN","IBCRBC",17,0)
 ; calculate the charges the first time it otherwise would if the user
"RTN","IBCRBC",18,0)
 ; is doing either a CRD or CLON.
"RTN","IBCRBC",19,0)
 ;
"RTN","IBCRBC",20,0)
 I $G(IBNOCALC) S IBNOCALC=0 Q
"RTN","IBCRBC",21,0)
 ;
"RTN","IBCRBC",22,0)
 N IB0,IBU,IBBRT,IBBTYPE,IBCTYPE,DFN,PTF,IBDGPT,IBRS,IBCS,IBBEVNT Q:'$G(IBIFN)
"RTN","IBCRBC",23,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",24,0)
 ;
"RTN","IBCRBC",25,0)
 S IB0=$G(^DGCR(399,+IBIFN,0)) Q:IB0=""  S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBC",26,0)
 S IBBRT=+$P(IB0,U,7),IBBTYPE=$S($$INPAT^IBCEF(IBIFN):1,1:3),IBCTYPE=+$P(IB0,U,27),DFN=$P(IB0,U,2) Q:'DFN
"RTN","IBCRBC",27,0)
 ;
"RTN","IBCRBC",28,0)
 ; if who's responsible is insurer, but bill has no insurer defined quit
"RTN","IBCRBC",29,0)
 I $P(IB0,U,11)="i",'$G(^DGCR(399,+IBIFN,"MP")),'$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) Q
"RTN","IBCRBC",30,0)
 ;
"RTN","IBCRBC",31,0)
 ; if inpt bill, PTF Status is Open, not a Fee Basis record and not previously done then Update the PTF record
"RTN","IBCRBC",32,0)
 I IBBTYPE<3,'$D(DGPTUPDT) S PTF=$P(IB0,U,8) Q:'PTF  S IBDGPT=$G(^DGPT(+PTF,0)) Q:IBDGPT=""  D
"RTN","IBCRBC",33,0)
 . I '$P(IBDGPT,U,6),'$P(IBDGPT,U,4) D UPDT^DGPTUTL S DGPTUPDT=""
"RTN","IBCRBC",34,0)
 ;
"RTN","IBCRBC",35,0)
 ;
"RTN","IBCRBC",36,0)
 D DSPDL^IBCRBC3,DELALLRC^IBCRBF(IBIFN) ; delete all existing auto charges on the bill
"RTN","IBCRBC",37,0)
 ;
"RTN","IBCRBC",38,0)
 ; get standard set of all rate schedules and charge sets available for entire date range of the bill
"RTN","IBCRBC",39,0)
 I '$D(IBRSARR) D RT^IBCRU3(IBBRT,IBBTYPE,$P(IBU,U,1,2),.IBRSARR,"",IBCTYPE) I 'IBRSARR G END
"RTN","IBCRBC",40,0)
 ;
"RTN","IBCRBC",41,0)
 ; process charge sets - set all charges for the bill into array
"RTN","IBCRBC",42,0)
 S IBRS=0 F  S IBRS=$O(IBRSARR(IBRS)) Q:'IBRS  D
"RTN","IBCRBC",43,0)
 . S IBCS=0 F  S IBCS=$O(IBRSARR(IBRS,IBCS)) Q:'IBCS  I +IBRSARR(IBRS,IBCS) D
"RTN","IBCRBC",44,0)
 .. S IBBEVNT=+$P($G(^IBE(363.1,+IBCS,0)),U,3) Q:'IBBEVNT  S IBBEVNT=$$EMUTL^IBCRU1(IBBEVNT) Q:IBBEVNT=""
"RTN","IBCRBC",45,0)
 .. ;
"RTN","IBCRBC",46,0)
 .. I IBBEVNT["INPATIENT BEDSECTION STAY" D INPTBS^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",47,0)
 .. I IBBEVNT["INPATIENT DRG" D INPTDRG^IBCRBC11(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",48,0)
 .. I IBBEVNT["OUTPATIENT VISIT DATE" D OPTVST^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",49,0)
 .. I IBBEVNT["PRESCRIPTION" D RX^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",50,0)
 .. I IBBEVNT["PROSTHETICS" D PI^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",51,0)
 .. I IBBEVNT["PROCEDURE" D CPT^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",52,0)
 ;
"RTN","IBCRBC",53,0)
 I '$D(^TMP($J,"IBCRCC")) G END
"RTN","IBCRBC",54,0)
 ;
"RTN","IBCRBC",55,0)
 D SORTCI^IBCRBC3 I '$D(^TMP($J,"IBCRCS")) G END
"RTN","IBCRBC",56,0)
 ;
"RTN","IBCRBC",57,0)
 D ADDBCHGS^IBCRBC3(IBIFN)
"RTN","IBCRBC",58,0)
 ;
"RTN","IBCRBC",59,0)
 D MAILADD(IBIFN,IBBTYPE)
"RTN","IBCRBC",60,0)
 ;
"RTN","IBCRBC",61,0)
END I $D(^TMP("IBCRRX",$J)) D CLEANRX^IBCRBC3(IBIFN)
"RTN","IBCRBC",62,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",63,0)
 Q
"RTN","IBCRBC",64,0)
 ;
"RTN","IBCRBC",65,0)
MAILADD(IBIFN,BTYPE) ; update the bill mailing address:  it may be based on the types of charges
"RTN","IBCRBC",66,0)
 ; an outpatient bill may go to either the opt or rx mailing addresses depending on the types of charges
"RTN","IBCRBC",67,0)
 N DA,IB01,IB02
"RTN","IBCRBC",68,0)
 I $G(BTYPE)>2,+$G(IBIFN),$D(^IBA(362.4,"C",+IBIFN)),+$$CHGTYPE^IBCU(+IBIFN)=3 S DA=IBIFN D MAILA^IBCU5 D
"RTN","IBCRBC",69,0)
 . I '$D(ZTQUEUED),'$G(IBAUTO) W !!,"Updating Bill Mailing Address"
"RTN","IBCRBC",70,0)
 Q
"RTN","IBCRBC",71,0)
 ;
"RTN","IBCRBC",72,0)
BILLITEM(IBIFN,IBITMARR) ; add selected unassociated item charges to the bill
"RTN","IBCRBC",73,0)
 N IBRS,IBCS,IBBEVNT K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",74,0)
 ;
"RTN","IBCRBC",75,0)
 S IBRS=0 F  S IBRS=$O(IBITMARR(IBRS)) Q:'IBRS  D
"RTN","IBCRBC",76,0)
 . S IBCS=0 F  S IBCS=$O(IBITMARR(IBRS,IBCS)) Q:'IBCS  D
"RTN","IBCRBC",77,0)
 .. S IBBEVNT=+$P($G(^IBE(363.1,+IBCS,0)),U,3) Q:'IBBEVNT  S IBBEVNT=$$EMUTL^IBCRU1(IBBEVNT) Q:IBBEVNT=""
"RTN","IBCRBC",78,0)
 .. ;
"RTN","IBCRBC",79,0)
 .. I IBBEVNT["UNASSOCIATED" D UNASSOC^IBCRBC11(IBIFN,IBRS,IBCS,.IBITMARR)
"RTN","IBCRBC",80,0)
 ;
"RTN","IBCRBC",81,0)
 I $D(^TMP($J,"IBCRCC")) D SORTCI^IBCRBC3
"RTN","IBCRBC",82,0)
 ;
"RTN","IBCRBC",83,0)
 I $D(^TMP($J,"IBCRCS")) D ADDBCHGS^IBCRBC3(IBIFN)
"RTN","IBCRBC",84,0)
 ;
"RTN","IBCRBC",85,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",86,0)
 Q
"RTN","IBCRBC",87,0)
 ;
"RTN","IBCRBC",88,0)
 ;
"RTN","IBCRBC",89,0)
 ;
"RTN","IBCRBC",90,0)
 ; There are 3 types of charges/items:
"RTN","IBCRBC",91,0)
 ; - ITEM: charge for an individual item:  specific item has one or more charge entries in 363.2
"RTN","IBCRBC",92,0)
 ;   for the charge to be applied to the bill the specific item must be found on the bill
"RTN","IBCRBC",93,0)
 ;
"RTN","IBCRBC",94,0)
 ; - EVENT: charge for an event, not an item:  items are defined in 363.2
"RTN","IBCRBC",95,0)
 ;   all charge items active on a date in the set define the charge for the event
"RTN","IBCRBC",96,0)
 ;   the item does not need to be defined on the bill for the charge to be applied to the bill
"RTN","IBCRBC",97,0)
 ;   the charge set on a date becomes the events charge, so effective date cuts across item and applies to event
"RTN","IBCRBC",98,0)
 ;   all charge items with the same effective date are used to calculate the event charge for that date
"RTN","IBCRBC",99,0)
 ;   each charge item effective date in the set overrides all previous entries in the set regardless of item
"RTN","IBCRBC",100,0)
 ;
"RTN","IBCRBC",101,0)
 ; - VA COST:  charge for an individual item but no entries in 363.2
"RTN","IBCRBC",102,0)
 ;   instead the charge is calculated/obtained when it is needed from an interface with the source package
"RTN","IBCRBC",103,0)
 ;
"RTN","IBCRBC",104,0)
 ;
"RTN","IBCRBC",105,0)
 ; Auto calculation and filing of a bills charges
"RTN","IBCRBC",106,0)
 ;
"RTN","IBCRBC",107,0)
 ; IBCRBC (BILL) - determine if charges can be calculated and which rates (RS/CS) should be used
"RTN","IBCRBC",108,0)
 ;                 then find billable items/events, calculate and store the charges
"RTN","IBCRBC",109,0)
 ;                 called anytime a bills charges need to be updated
"RTN","IBCRBC",110,0)
 ;        
"RTN","IBCRBC",111,0)
 ;                 IBCRBC1 (event) - gather billable items/events for each billable event type
"RTN","IBCRBC",112,0)
 ;                                   then accumulate all charges for the bill for each billable event/item
"RTN","IBCRBC",113,0)
 ;
"RTN","IBCRBC",114,0)
 ;                                   IBCRCGx (event) - pull billable items/events from the bill
"RTN","IBCRBC",115,0)
 ;                                   IBCRBC2 (BITMCHRG) - calculate charges for billable item/event
"RTN","IBCRBC",116,0)
 ;
"RTN","IBCRBC",117,0)
 ;                 IBCRBC3 (SORTCI) - sort accumulated charges into order to store on bill, combine if possible
"RTN","IBCRBC",118,0)
 ;                 IBCRBC3 (ADDBCHRGS) -  store the sorted accumulated charges on the bill
"RTN","IBCRBC",119,0)
 ;
"RTN","IBCRBC",120,0)
 ;
"RTN","IBCRBC",121,0)
 ; The Billable Event of the Charge Set is directly related to the Type of charge assigned
"RTN","IBCRBC",122,0)
 ; to the charges calculated for that Charge Set.  So, Billable Event (363.1,.03) <-> Type (399,42,.1)
"RTN","IBCRBC",123,0)
 ;
"RTN","IBCRBC",124,0)
 ;
"RTN","IBCRBC",125,0)
 ;  ^TMP($J,"IBCRCC")  -  array containing raw charges for a bill and related data, created in IBRCBC2
"RTN","IBCRBC",126,0)
 ;  ^TMP($J,"IBCRCC",X) = 1  charge item ifn
"RTN","IBCRBC",127,0)
 ;                        2  charge set ifn
"RTN","IBCRBC",128,0)
 ;                        3  rate schedule ifn
"RTN","IBCRBC",129,0)
 ;                        4  item ptr (to source)
"RTN","IBCRBC",130,0)
 ;                        5  cpt modifier ptr
"RTN","IBCRBC",131,0)
 ;                        6  revenue code ptr
"RTN","IBCRBC",132,0)
 ;                        7  billable bedsection (bill)
"RTN","IBCRBC",133,0)
 ;                        8  event date (visit or st from or admission)
"RTN","IBCRBC",134,0)
 ;                        9  charge per unit/qty
"RTN","IBCRBC",135,0)
 ;                        10 units/qty (qty of item)
"RTN","IBCRBC",136,0)
 ;                        11 total charge per unit/qty
"RTN","IBCRBC",137,0)
 ;                        12 adjusted total charge per unit/qty
"RTN","IBCRBC",138,0)
 ;                        13 units (# item on bill)
"RTN","IBCRBC",139,0)
 ;                        14 CPT ptr
"RTN","IBCRBC",140,0)
 ;                        15 division ptr
"RTN","IBCRBC",141,0)
 ;                        16 item type (source)
"RTN","IBCRBC",142,0)
 ;                        17 item ptr (to source)
"RTN","IBCRBC",143,0)
 ;                        18 charge component
"RTN","IBCRBC",144,0)
 ;                        19 billable bedsection (for item)
"RTN","IBCRBC",145,0)
 ;                        20 procedure provider
"RTN","IBCRBC",146,0)
 ;                        21 procedures associated clinic
"RTN","IBCRBC",147,0)
 ;                        22 procedures Outpatient Encounter, pointer to #409.68
"RTN","IBCRBC",148,0)
 ;                        23 list of all the procedures modifiers, separated by ','
"RTN","IBCRBC",149,0)
 ;
"RTN","IBCRBC",150,0)
 ;  ^TMP($J,"IBCRCC",X,"CC",x) = comments explaining charge adjustements
"RTN","IBCRBC",151,0)
 ;
"RTN","IBCRBC",152,0)
 ;  ^TMP($J,"IBCRCS")  -  array of charges from IBCRCC in sorted order and with only data needed to save on bill
"RTN","IBCRBC",153,0)
 ;  ^TMP($J,"IBCRCS", BS, RV, X) = 1  revenue code ptr
"RTN","IBCRBC",154,0)
 ;                                 2  bedsection ptr
"RTN","IBCRBC",155,0)
 ;                                 3  charge per units (adjusted total charge)
"RTN","IBCRBC",156,0)
 ;                                 4  units (# item on bill)
"RTN","IBCRBC",157,0)
 ;                                 5  CPT ptr
"RTN","IBCRBC",158,0)
 ;                                 6  division ptr
"RTN","IBCRBC",159,0)
 ;                                 7  item type
"RTN","IBCRBC",160,0)
 ;                                 8  item ptr
"RTN","IBCRBC",161,0)
 ;                                 9  charge component
"RTN","IBCRBC",162,0)
 ;
"RTN","IBCRBC",163,0)
 ;
"RTN","IBCRBC",164,0)
 ;
"RTN","IBCRBC",165,0)
 ; Inpatient Bill Dates use follow rules:
"RTN","IBCRBC",166,0)
 ; - admission date is counted as billable
"RTN","IBCRBC",167,0)
 ; - the discharge date is not billable and is not counted
"RTN","IBCRBC",168,0)
 ; 
"RTN","IBCRBC",169,0)
 ; - if admission movement is found in the Patient Movement file then the dates of admission and discharge
"RTN","IBCRBC",170,0)
 ;   will be used as the outside limits of the LOS, even if date range of the bill is longer   (LOS^IBCU64)
"RTN","IBCRBC",171,0)
 ; 
"RTN","IBCRBC",172,0)
 ; - a day is counted as billable to the bedsection the patient was in at the end of the day (ie. counted
"RTN","IBCRBC",173,0)
 ;   in LOS of next movement after midnight)
"RTN","IBCRBC",174,0)
 ; - if there is a movement on any given date that date is included in the LOS of the bedsection the patient
"RTN","IBCRBC",175,0)
 ;   moved into (same as admission date)
"RTN","IBCRBC",176,0)
 ; - if there is a movement on any given date that date is NOT included in the LOS of the bedsection the 
"RTN","IBCRBC",177,0)
 ;   patient moved out of (same as discharge date)
"RTN","IBCRBC",178,0)
 ; 
"RTN","IBCRBC",179,0)
 ; - if the time frame of the bill is:
"RTN","IBCRBC",180,0)
 ;   - either interim-first or interim-continuous the last date on the bill should be billed
"RTN","IBCRBC",181,0)
 ;     - if the last date is counted it is added to the LOS of the bedsection the patient was in at the end
"RTN","IBCRBC",182,0)
 ;       of the day
"RTN","IBCRBC",183,0)
 ;   - either NOT interim-first or interim-continuous (final bills) the last date on the bill
"RTN","IBCRBC",184,0)
 ;     should NOT be billed (i.e. this is considered the discharge date)
"RTN","IBCRBC",185,0)
 ;
"RTN","IBCRBC",186,0)
 ; - start with first bedsection after begin date, day is counted in the bedsection the patient is in at midnight
"RTN","IBCRBC",187,0)
 ; - continuous: last bedsection counted is the bedsection the patient is in at midnight of the end date
"RTN","IBCRBC",188,0)
 ; - final:last bedsection counted is the bedsection the patient is in at midnight of the day before the end date
"RTN","IBCRBC",189,0)
 ;
"RTN","IBCSC3")
0^141^B37464352^B37249647
"RTN","IBCSC3",1,0)
IBCSC3 ;ALB/MJB - MCCR SCREEN 3 (PAYER/MAILING ADDRESS) ;27 MAY 88 10:15
"RTN","IBCSC3",2,0)
 ;;2.0;INTEGRATED BILLING;**8,43,52,80,82,51,137,232,320,377,516**;21-MAR-94;Build 123
"RTN","IBCSC3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC3",4,0)
 ;
"RTN","IBCSC3",5,0)
 ;MAP TO DGCRSC3
"RTN","IBCSC3",6,0)
 ;
"RTN","IBCSC3",7,0)
EN N IB,IBX,IBINS,Y,Z
"RTN","IBCSC3",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC3",9,0)
 D ^IBCSCU S IBSR=3,IBSR1="",IBV1="000" I IBV S IBV1="111"
"RTN","IBCSC3",10,0)
 D H^IBCSCU
"RTN","IBCSC3",11,0)
 D:$D(^DGCR(399,IBIFN,"AIC")) 3^IBCVA0
"RTN","IBCSC3",12,0)
 D:'$D(^DGCR(399,IBIFN,"AIC")) 123^IBCVA
"RTN","IBCSC3",13,0)
 D POL^IBCNSU41(DFN)
"RTN","IBCSC3",14,0)
 F I=0,"M","M1","U","U2" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):(^(I)),1:"")
"RTN","IBCSC3",15,0)
 S IBOUTP=2,IBINDT=$S(+$G(IB("U")):+IB("U"),1:DT)
"RTN","IBCSC3",16,0)
 ;
"RTN","IBCSC3",17,0)
 S X=" Rate Type  : "_$S($P(IB(0),U,7)']"":IBU,$D(^DGCR(399.3,$P(IB(0),U,7),0)):$P(^(0),U),1:IBUN)
"RTN","IBCSC3",18,0)
 S Z=1,IBW=1 X IBWW W X
"RTN","IBCSC3",19,0)
 I +$P($G(^IBE(350.9,1,1)),U,22) W $J("",(42-$L(X))),"Form Type: ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC3",20,0)
 W !?4,"Responsible: ",$S($P(IB(0),U,11)']"":IBU,$P(IB(0),U,11)="p":"PATIENT",$P(IB(0),U,11)="i":"INSURER",1:"OTHER")
"RTN","IBCSC3",21,0)
 W ?45,"Payer Sequence: " S IBX=$P(IB(0),U,21) W $S(IBX="P":"Primary",IBX="S":"Secondary",IBX="T":"Tertiary",IBX="A":"Patient",1:"")
"RTN","IBCSC3",22,0)
 I $P(IB(0),U,11)="i" D
"RTN","IBCSC3",23,0)
 . W !?4,"Bill Payer : " S X=$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCSC3",24,0)
 . W $S(+X:$P($G(^DIC(36,+X,0)),U,1),$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)):"MRA NEEDED FROM MEDICARE",1:IBU)
"RTN","IBCSC3",25,0)
 . W ?45,"Transmit: " S Z=0,X=$$TXMT^IBCEF4(IBIFN,.Z)
"RTN","IBCSC3",26,0)
 . W $S(X:"Yes",1:"No-"_$S(Z=1:"Forced to print local",Z=2&($$WNRBILL^IBEFUNC(IBIFN)):"MRA not active",Z=2:"EDI not active",Z=3:"Rate typ transmit off",Z=4:"Ins. co transmit off",Z=5:"Failed RULE #"_$G(Z(0)),Z=6:"Invalid NDC code type",1:"??"))
"RTN","IBCSC3",27,0)
 I $P(IB(0),U,11)']"" G MAIL
"RTN","IBCSC3",28,0)
 I $P(IB(0),U,11)="p" G MAIL
"RTN","IBCSC3",29,0)
 I $P(IB(0),U,11)="o" W !?4,"Inst. Name : ",$S($P(IB("M"),U,11)']"":IBU,$D(^DIC(4,$P(IB("M"),U,11),0)):$P(^(0),U,1),1:"UNKNOWN INSTITUTION") G MAIL
"RTN","IBCSC3",30,0)
 I $P(IB(0),U,11)="i" I $D(IBDD)>1,$D(^DGCR(399,IBIFN,"AIC")) G SHW
"RTN","IBCSC3",31,0)
 D UP G LST:$D(IBDD)>1 W !?4,"Insurance : NO REIMBURSABLE INSURANCE INFORMATION ON FILE",!?17,"[Add Insurance Information by entering '1' at the prompt below]" G MAIL
"RTN","IBCSC3",32,0)
 ;
"RTN","IBCSC3",33,0)
LST N IBDTIN,IBICT
"RTN","IBCSC3",34,0)
 S IBDTIN=+$G(IB("U")),IBICT=0
"RTN","IBCSC3",35,0)
 W ! D HDR^IBCNS
"RTN","IBCSC3",36,0)
 S I=0 F  S I=$O(IBDD("S",I)) Q:'I  D  Q:IBICT'<5
"RTN","IBCSC3",37,0)
 .S IBX=0 F  S IBX=$O(IBDD("S",I,IBX)) Q:'IBX  S IBINS=$G(IBDD(IBX,0)) I IBINS'="" S IBICT=IBICT+1 D:IBICT<5 D1^IBCNS I IBICT'<5 W !,?1,"**Patient has additional insurance - use ?INS to see the entire list" Q
"RTN","IBCSC3",38,0)
 G MAIL
"RTN","IBCSC3",39,0)
LST1 W !?4,$S($D(^DIC(36,+IBDD(IBX,0),0)):$E($P(^(0),"^",1),1,20),1:"UNKNOWN") S X=$P(IBDD(IBX,0),"^",6) W ?26,$S(X="v":"VETERAN",X="s":"SPOUSE",1:"OTHER") S X=$P(IBDD(IBX,0),"^",16)
"RTN","IBCSC3",40,0)
 S X=$S(+X=1:"PATIENT",+X=2:"SPOUSE",+X=3:"CHILD",+X=8:"EMPLOYEE",+X=11:"ORGAN DONOR",+X=18:"PARENT",+X=15:"PLANTIFF",1:"UNKNOWN")
"RTN","IBCSC3",41,0)
 I X="UNKNOWN" S X1=$S($D(IBDD(IBX,0)):$P(IBDD(IBX,0),"^",6),1:""),X=$S(X1="v":"PATIENT",X1="s":"SPOUSE",1:X)
"RTN","IBCSC3",42,0)
 W ?37,X,?49 S Y=$P(IBDD(IBX,0),"^",8) X ^DD("DD") W Y,?64 S Y=$P(IBDD(IBX,0),"^",4) X ^DD("DD") W Y
"RTN","IBCSC3",43,0)
 Q
"RTN","IBCSC3",44,0)
SHW I $D(IBDD) S I="" F  S I=$O(IBDD(I)) Q:'I  D SHW1
"RTN","IBCSC3",45,0)
MAIL I $$BUFFER^IBCNBU1(DFN) W !!,?17,"***  Patient has Insurance Buffer entries  ***"
"RTN","IBCSC3",46,0)
 ;
"RTN","IBCSC3",47,0)
 S IB("M")=$S($D(^DGCR(399,IBIFN,"M")):^("M"),1:""),IB("M1")=$S($D(^DGCR(399,IBIFN,"M1")):^("M1"),1:""),IB(0)=^DGCR(399,IBIFN,0)
"RTN","IBCSC3",48,0)
 S Z=2,IBW=1 W ! X IBWW
"RTN","IBCSC3",49,0)
 N IBRAMS S IBRAMS=4.06
"RTN","IBCSC3",50,0)
 I $$FT^IBCEF(IBIFN)=3 S IBRAMS=4.08
"RTN","IBCSC3",51,0)
 S IB("RAFLAG",1)=$S($P(IB("M"),U,1)="":0,1:$$GET1^DIQ(36,$P(IB("M"),U,1),IBRAMS,"I"))
"RTN","IBCSC3",52,0)
 S IB("RAFLAG",2)=$S($P(IB("M"),U,2)="":0,1:$$GET1^DIQ(36,$P(IB("M"),U,2),IBRAMS,"I"))
"RTN","IBCSC3",53,0)
 S IB("RAFLAG",3)=$S($P(IB("M"),U,3)="":0,1:$$GET1^DIQ(36,$P(IB("M"),U,3),IBRAMS,"I"))
"RTN","IBCSC3",54,0)
 S X=0
"RTN","IBCSC3",55,0)
 I $P(IB("M1"),U,2)="",'IB("RAFLAG",1),$P(IB("M1"),U,3)="",'IB("RAFLAG",2),$P(IB("M1"),U,4)="",'IB("RAFLAG",3) S X=1
"RTN","IBCSC3",56,0)
 W " Billing Provider Secondary IDs: "
"RTN","IBCSC3",57,0)
 I X W IBUN          ; no data found, unspecified not required
"RTN","IBCSC3",58,0)
 I 'X D              ; data found, display below
"RTN","IBCSC3",59,0)
 . W !?5,"Primary Payer: ",$S($P(IB("M1"),U,2)]"":$P(IB("M1"),U,2),IB("RAFLAG",1):"ATT/REND ID",1:"")
"RTN","IBCSC3",60,0)
 . W !?5,"Secondary Payer: ",$S($P(IB("M1"),U,3)]"":$P(IB("M1"),U,3),IB("RAFLAG",2):"ATT/REND ID",1:"")
"RTN","IBCSC3",61,0)
 . W ?46,"Tertiary Payer: ",$S($P(IB("M1"),U,4)]"":$P(IB("M1"),U,4),IB("RAFLAG",3):"ATT/REND ID",1:"")
"RTN","IBCSC3",62,0)
 . Q
"RTN","IBCSC3",63,0)
 ;
"RTN","IBCSC3",64,0)
 S Z=3,IBW=1 W ! X IBWW
"RTN","IBCSC3",65,0)
 W " Mailing Address : "
"RTN","IBCSC3",66,0)
 S X=+$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCSC3",67,0)
 I 'X,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) S X=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCSC3",68,0)
 I X,+$G(^DIC(36,X,3)) S I=$P(^(3),U,$S($$FT^IBCEF(IBIFN)=2:2,1:4)) W ?56,"Electronic ID: ",$S(I'="":I,1:"<NONE>")
"RTN","IBCSC3",69,0)
 S X="" I IB("M")]"" F I=4:1:9 Q:X]""  S X=$P(IB("M"),"^",I)
"RTN","IBCSC3",70,0)
 I X']"" W !?4,"NO MAILING ADDRESS HAS BEEN SPECIFIED!",?45,$$UP1,!?4,"Send Bill to PAYER listed above." G ENDSCR
"RTN","IBCSC3",71,0)
 S X=IB("M") W !,?4,$S($P(X,"^",4)]"":$P(X,"^",4),1:"'MAIL TO' PERSON/PLACE UNSPECIFIED"),?45,$$UP1
"RTN","IBCSC3",72,0)
 W !?4,$S($P(X,"^",5)]"":$P(X,"^",5),1:"STREET ADDRESS UNSPECIFIED") W:$P(X,"^",6)]"" ", ",$P(X,"^",6)
"RTN","IBCSC3",73,0)
 W ! W:$P(IB("M1"),"^",1)]"" ?4,$P(IB("M1"),"^",1),", "
"RTN","IBCSC3",74,0)
 W ?4,$S($P(X,"^",7)]"":$P(X,"^",7),1:"CITY UNSPECIFIED"),", ",$S($D(^DIC(5,+$P(X,"^",8),0)):$P(^(0),"^",2),1:"STATE UNSPECIFIED"),"  ",$S($P(X,"^",9)]"":$P(X,"^",9),1:"ZIP UNSPECIFIED")
"RTN","IBCSC3",75,0)
 ;
"RTN","IBCSC3",76,0)
ENDSCR K IBADI,IBDD,IBOUTP,IBINDT,I,X,X1
"RTN","IBCSC3",77,0)
 G ^IBCSCP
"RTN","IBCSC3",78,0)
 ;
"RTN","IBCSC3",79,0)
SHW1 ; Display information for insurance I.
"RTN","IBCSC3",80,0)
 ; MRD;IB*2.0*516 - Rearranged some fields to allow more characters
"RTN","IBCSC3",81,0)
 ; to be displayed for Group #, Group Name, Policy #, Insured.
"RTN","IBCSC3",82,0)
 S X=IBDD(I,0),Z=$G(^DIC(36,+X,0))
"RTN","IBCSC3",83,0)
 W !!?4,"Ins ",I,": " W $E($S($P(Z,U,1)'="":$P(Z,U,1),1:IBU),1,16)
"RTN","IBCSC3",84,0)
 I $P(Z,U,2)="N" W ?30,"WILL NOT REIMBURSE"
"RTN","IBCSC3",85,0)
 W ?51,"Whose: ",$S($P(X,"^",6)="v":"VETERAN",$P(X,"^",6)="s":"SPOUSE",1:"OTHER")
"RTN","IBCSC3",86,0)
 W !?4,"Policy #: ",$E($S($P(X,"^",2)]"":$P(X,"^",2),1:IBU),1,34)
"RTN","IBCSC3",87,0)
 W ?51,"Rel to Insd: ",$E(IBIR(I),1,15)
"RTN","IBCSC3",88,0)
 W !?4,"Insured: ",$E($P(X,"^",17),1,35)
"RTN","IBCSC3",89,0)
 W ?51,"Insd Sex: ",$S($D(IBISEX(I)):IBISEX(I),1:IBU)
"RTN","IBCSC3",90,0)
 W !?4,"Grp #: ",$E($S($P(X,"^",3)]"":$P(X,"^",3),1:IBU),1,67)
"RTN","IBCSC3",91,0)
 W !?4,"Grp Nm: ",$E($S($P(X,"^",15)]"":$P(X,"^",15),1:IBU),1,66)
"RTN","IBCSC3",92,0)
 Q
"RTN","IBCSC3",93,0)
 ;
"RTN","IBCSC3",94,0)
UP K IBDD D ALL^IBCNS1(DFN,"IBDD",2,IBINDT,1)
"RTN","IBCSC3",95,0)
 I $D(IBDD("S",.5)) D  ; At least 1 MCR WNR insurance policy exists
"RTN","IBCSC3",96,0)
 . ;try to put correct part (A for institution and B for facility)
"RTN","IBCSC3",97,0)
 . N Z,IBAB
"RTN","IBCSC3",98,0)
 . S IBAB=$S($$FT^IBCEF(IBIFN)=3:"A",1:"B")
"RTN","IBCSC3",99,0)
 . S Z=0 F  S Z=$O(IBDD("S",.5,Z)) Q:'Z  D
"RTN","IBCSC3",100,0)
 .. I $P($G(IBDD(Z,355.3)),U,14)=IBAB S IBDD("S",.1,Z,0)="" K IBDD("S",.5,Z)
"RTN","IBCSC3",101,0)
 Q
"RTN","IBCSC3",102,0)
 ;
"RTN","IBCSC3",103,0)
UP1() ;check if patient has medicare so can print a flag for the user
"RTN","IBCSC3",104,0)
 N IBDD,IBX,IBY S IBY="" D ALL^IBCNS1(DFN,"IBDD",2,IBINDT)
"RTN","IBCSC3",105,0)
 S IBX=0 F  S IBX=$O(IBDD(IBX)) Q:'IBX  I $P($G(IBDD(IBX,355.3)),U,9)=33 S IBY="(Patient has Medicare)"
"RTN","IBCSC3",106,0)
 Q IBY
"RTN","IBCSC3",107,0)
 ;IBCSC3
"RTN","IBCSC4D")
0^6^B75384760^B61931126
"RTN","IBCSC4D",1,0)
IBCSC4D ;ALB/ARH - ADD/ENTER DIAGNOSIS ;11/9/93
"RTN","IBCSC4D",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,91,106,124,51,210,403,400,461,516**;21-MAR-94;Build 123
"RTN","IBCSC4D",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC4D",4,0)
 ;
"RTN","IBCSC4D",5,0)
EN ;add/edit diagnosis for a bill, IBIFN required
"RTN","IBCSC4D",6,0)
 N IBINP,POAEDIT
"RTN","IBCSC4D",7,0)
 S POAEDIT=0 ; flag for editing POA indicators, set in DXINPT^IBCSC4E
"RTN","IBCSC4D",8,0)
 S IBX=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCSC4D",9,0)
 S IBINP=$$INPAT^IBCEF(+IBIFN)
"RTN","IBCSC4D",10,0)
 D DELALL^IBCSC4E(+IBIFN)
"RTN","IBCSC4D",11,0)
 I IBINP D DXINPT^IBCSC4E(IBIFN)
"RTN","IBCSC4D",12,0)
 I 'IBINP D DXOPT(IBIFN)
"RTN","IBCSC4D",13,0)
 S IBDIFN=0 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",14,0)
 I IBINP,$D(^IBA(362.3,"AO",IBIFN)),$$FT^IBCEF(IBIFN)=3,POAEDIT D POAASK^IBCSC4E
"RTN","IBCSC4D",15,0)
 ;
"RTN","IBCSC4D",16,0)
 ; esg - IB*2*400 - ask for PPS (DRG) for inpatient, UB claims
"RTN","IBCSC4D",17,0)
 I IBINP,$$FT^IBCEF(IBIFN)=3 D  I $D(Y) G EXIT
"RTN","IBCSC4D",18,0)
 . N DIE,DA,DR,ICDVDT
"RTN","IBCSC4D",19,0)
 . S ICDVDT=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4D",20,0)
 . S DIE=399,DA=IBIFN,DR="170T" D ^DIE
"RTN","IBCSC4D",21,0)
 . W !
"RTN","IBCSC4D",22,0)
 . Q
"RTN","IBCSC4D",23,0)
 ;
"RTN","IBCSC4D",24,0)
E1 S IBDX=$$ASKDX I +IBDX>0 S IBDIFN=+$G(IBDXA(+IBDX)) S:'IBDIFN IBDIFN=$$ADD(+IBDX,IBIFN) G:+IBDIFN=0 E1 I +IBDIFN>0 D EDIT(+IBDIFN) D SET(IBIFN,.IBDXA,.IBPOA) G E1
"RTN","IBCSC4D",25,0)
 S IBX=$G(^DGCR(399,+IBIFN,0)) I $P(IBX,U,5)<3,$P(IBX,U,27)'=2 S DGRVRCAL=1
"RTN","IBCSC4D",26,0)
EXIT K IBDIFN,IBDXA,IBPOA,IBDX,IBX
"RTN","IBCSC4D",27,0)
 Q
"RTN","IBCSC4D",28,0)
 ;
"RTN","IBCSC4D",29,0)
ASKDX() ;
"RTN","IBCSC4D",30,0)
 N X,Y,IBDATE,IBDTTX,ICDVDT
"RTN","IBCSC4D",31,0)
 ;S DIR("A")="Select ICD DIAGNOSIS",DIR(0)="362.3,.01O" D ^DIR K DIR
"RTN","IBCSC4D",32,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN),ICDVDT=IBDATE
"RTN","IBCSC4D",33,0)
 S IBDTTX=$$DAT1^IBOUTL(IBDATE)
"RTN","IBCSC4D",34,0)
 I $G(IBIFN),$$INPAT^IBCEF(IBIFN) D
"RTN","IBCSC4D",35,0)
 . N Z S Z=$$EXPAND^IBTRE(399,215,+$G(^DGCR(399,IBIFN,"U2")))
"RTN","IBCSC4D",36,0)
 . W !,$S(Z'="":"",1:"NO ")_"Admitting Diagnosis"_$S(Z'="":": "_Z,1:" found"),!
"RTN","IBCSC4D",37,0)
AD S DIR("??")="^D HELP^IBCSC4D"
"RTN","IBCSC4D",38,0)
 S DIR("?",1)="Enter a diagnosis for this bill.  Duplicates are not allowed."
"RTN","IBCSC4D",39,0)
 S DIR("?")="Only diagnosis codes active on "_IBDTTX_", no duplicates for a bill, and bill must not be authorized or cancelled."
"RTN","IBCSC4D",40,0)
 S DIR("S")="I $$ICD9VER^IBACSV(+Y)="_$$ICD9SYS^IBACSV(IBDATE) ; inactive allowed but either ICD-9 or ICD-10 *461
"RTN","IBCSC4D",41,0)
 S DIR(0)="PO^80:EAMQI"
"RTN","IBCSC4D",42,0)
 D ^DIR K DIR
"RTN","IBCSC4D",43,0)
 I Y>0,'$D(IBDXA(+Y)),'$$ICD9ACT^IBACSV(+Y,IBDATE) D  G AD
"RTN","IBCSC4D",44,0)
 . W !!,*7,"The Diagnosis code is inactive for the date of service ("_IBDTTX_").",!
"RTN","IBCSC4D",45,0)
 Q Y
"RTN","IBCSC4D",46,0)
 ;
"RTN","IBCSC4D",47,0)
ADD(DX,IFN) ;
"RTN","IBCSC4D",48,0)
 I $$ICD9VER^IBACSV(DX)=1,$E($$ICD9^IBACSV(DX,$$BDATE^IBACSV(IFN)))="E",$$MAXECODE^IBCSC4F(IFN) W !!,*7,"Only 3 External Cause of Injury diagnoses are allowed per claim.",! Q 0
"RTN","IBCSC4D",49,0)
 S DIC="^IBA(362.3,",DIC(0)="AQL",DIC("DR")=".02////"_IFN,X=DX K DA,DO D FILE^DICN K DA,DO,DIC,X
"RTN","IBCSC4D",50,0)
 Q Y
"RTN","IBCSC4D",51,0)
 ;
"RTN","IBCSC4D",52,0)
EDIT(IBDXIFN) ;
"RTN","IBCSC4D",53,0)
 N NEEDPOA
"RTN","IBCSC4D",54,0)
 S DIDEL=362.3,DIE="^IBA(362.3,",DA=IBDXIFN
"RTN","IBCSC4D",55,0)
 ; only ask for POA if inpatient UB-04 claim
"RTN","IBCSC4D",56,0)
 S NEEDPOA=IBINP&($$FT^IBCEF(IBIFN)=3)
"RTN","IBCSC4D",57,0)
 S DR=".01Diagnosis"_$S(NEEDPOA:";.04POA Indicator",1:"")_";.03Order"
"RTN","IBCSC4D",58,0)
 D ^DIE K DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC4D",59,0)
 ;
"RTN","IBCSC4D",60,0)
 I $D(^IBA(362.3,IBDXIFN,0)),$$FIRSTDX(IBDXIFN) D  G EDITQ
"RTN","IBCSC4D",61,0)
 . N DIE,DR,DA,Y,X,IB0
"RTN","IBCSC4D",62,0)
 . S IB0=^IBA(362.3,IBDXIFN,0)
"RTN","IBCSC4D",63,0)
 . S DIE="^DGCR(399,",DA=+$P(IB0,U,2),DR="215////"_+IB0 D ^DIE
"RTN","IBCSC4D",64,0)
 ;
"RTN","IBCSC4D",65,0)
 ; MRD;IB*2.0*516 - Added '$D check *before* removing the dangling
"RTN","IBCSC4D",66,0)
 ; pointers; and added code to 'shift' subsequent pointers, if any.
"RTN","IBCSC4D",67,0)
 ; If the entry was deleted, remove dangling pointers from #399.0304.
"RTN","IBCSC4D",68,0)
 I '$D(^IBA(362.3,IBDXIFN)) D
"RTN","IBCSC4D",69,0)
 . N IBPROC,IBPROCD,IBPIECE,IBHIT
"RTN","IBCSC4D",70,0)
 . S (IBHIT,IBPROC)=0
"RTN","IBCSC4D",71,0)
 . F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  S IBPROCD=$G(^(IBPROC,0)) I IBPROCD]"" D
"RTN","IBCSC4D",72,0)
 . . F IBPIECE=11:1:14 I +$P(IBPROCD,"^",IBPIECE)=IBDXIFN S IBHIT=1 D UPD^IBCU72("@",IBPIECE-1)
"RTN","IBCSC4D",73,0)
 . . Q
"RTN","IBCSC4D",74,0)
 . ;
"RTN","IBCSC4D",75,0)
 . ; If a pointer to the deleted DX code was found and removed, then
"RTN","IBCSC4D",76,0)
 . ; sound <bell>, display message, and 'shift' any other associated
"RTN","IBCSC4D",77,0)
 . ; DX codes to close the gap, if any.
"RTN","IBCSC4D",78,0)
 . I IBHIT D
"RTN","IBCSC4D",79,0)
 . . W *7,!,"This diagnosis was removed as a procedure diagnosis."
"RTN","IBCSC4D",80,0)
 . . ;
"RTN","IBCSC4D",81,0)
 . . S IBPROC=0
"RTN","IBCSC4D",82,0)
 . . F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  S IBPROCD=$G(^(IBPROC,0)) I IBPROCD]"" D
"RTN","IBCSC4D",83,0)
 . . . F IBPIECE=11:1:13 D
"RTN","IBCSC4D",84,0)
 . . . . ; If DX field is blank, and next one is not blank, then shift it 'up'.
"RTN","IBCSC4D",85,0)
 . . . . I $P(IBPROCD,"^",IBPIECE)="",$P(IBPROCD,"^",IBPIECE+1)'="" D
"RTN","IBCSC4D",86,0)
 . . . . . D UPD^IBCU72("@",IBPIECE)                          ; Delete from one slot...
"RTN","IBCSC4D",87,0)
 . . . . . D UPD^IBCU72($P(IBPROCD,"^",IBPIECE+1),IBPIECE-1)  ; Add to the blank slot.
"RTN","IBCSC4D",88,0)
 . . . . . S IBPROCD=$G(^DGCR(399,IBIFN,"CP",IBPROC,0))  ; Grab updated version of this node.
"RTN","IBCSC4D",89,0)
 . . . . . Q
"RTN","IBCSC4D",90,0)
 . . . . Q
"RTN","IBCSC4D",91,0)
 . . . Q
"RTN","IBCSC4D",92,0)
 . . Q
"RTN","IBCSC4D",93,0)
 . Q
"RTN","IBCSC4D",94,0)
 ;
"RTN","IBCSC4D",95,0)
EDITQ Q
"RTN","IBCSC4D",96,0)
 ;
"RTN","IBCSC4D",97,0)
SET(IFN,DXARR,POARR) ;setup arrays of all dx's for bill, array names should be passed by reference
"RTN","IBCSC4D",98,0)
 ;returns: DXARR(DX)=DX IFN, POARR(ORDER)=DX ^ PRINT ORDER ^ POA,  (DXARR,POARR)=IFN ^ dx count
"RTN","IBCSC4D",99,0)
 ;if a dx does not have a print order then PRINT ORDER=(999+count of dx) so will be in order of entry if no print order
"RTN","IBCSC4D",100,0)
 N CNT,IBX,IBY,IBZ,DIFN,IBC,ARR K DXARR,POARR S IBC="AIFN"_$G(IFN)
"RTN","IBCSC4D",101,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.3,IBC,IBX)) Q:'IBX  D
"RTN","IBCSC4D",102,0)
 . S DIFN=$O(^IBA(362.3,IBC,IBX,0)),IBY=$G(^IBA(362.3,DIFN,0)) Q:'IBY
"RTN","IBCSC4D",103,0)
 . S CNT=CNT+1,IBZ=+$P(IBY,U,3) I 'IBZ S IBZ=999+CNT
"RTN","IBCSC4D",104,0)
 . S DXARR(+IBY)=DIFN,ARR(IBZ)=+IBY_U_$P(IBY,U,3,4)
"RTN","IBCSC4D",105,0)
 S (IBX,IBY)=0 F  S IBY=$O(ARR(IBY)) Q:'IBY  S IBX=IBX+1,POARR(IBX)=ARR(IBY)
"RTN","IBCSC4D",106,0)
 S (DXARR,POARR)=$G(IFN)_"^"_CNT
"RTN","IBCSC4D",107,0)
 Q
"RTN","IBCSC4D",108,0)
 ;
"RTN","IBCSC4D",109,0)
DISP(POARR) ;screen display of existing dx's for a bill,
"RTN","IBCSC4D",110,0)
 ;input should be print order array returned by SET^IBCSC4D: POARR(PRINT ORDER)=DX, passed by reference
"RTN","IBCSC4D",111,0)
 N IBX,IBY,IBZ,IBDATE,POA
"RTN","IBCSC4D",112,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bill date of service
"RTN","IBCSC4D",113,0)
 W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
"RTN","IBCSC4D",114,0)
 S IBX=0 F  S IBX=$O(POARR(IBX)) Q:'IBX  S IBZ=POARR(IBX),IBY=$$ICD9^IBACSV(+IBZ,IBDATE) D
"RTN","IBCSC4D",115,0)
 .S POA="" I $$INPAT^IBCEF(IBIFN),$$FT^IBCEF(IBIFN)=3 S POA=$P(IBZ,U,3) S:POA=1 POA="" S:POA'="" POA="("_POA_")"
"RTN","IBCSC4D",116,0)
 . W !,$P(IBY,U),?9,POA,?13,$P(IBY,U,3),?75,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
"RTN","IBCSC4D",117,0)
 W !
"RTN","IBCSC4D",118,0)
 Q
"RTN","IBCSC4D",119,0)
 ;
"RTN","IBCSC4D",120,0)
DISP1(IFN) ;
"RTN","IBCSC4D",121,0)
 I +$G(IFN) N POARR D SET(IFN,"",.POARR),DISP(.POARR)
"RTN","IBCSC4D",122,0)
 Q
"RTN","IBCSC4D",123,0)
HELP ;called for help from dx enter to display existing dx's
"RTN","IBCSC4D",124,0)
 Q:'$G(IBIFN)  N IBX
"RTN","IBCSC4D",125,0)
 D SET(IBIFN,.IBDXA,"") S IBX=$G(^DGCR(399,+IBIFN,0)) I IBX="" Q
"RTN","IBCSC4D",126,0)
 I $P(IBX,U,5)>2 S DFN=$P(IBX,U,2),IBX=$G(^DGCR(399,+IBIFN,"U")) D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",127,0)
 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",128,0)
 Q
"RTN","IBCSC4D",129,0)
 ;
"RTN","IBCSC4D",130,0)
ADD1(IFN) ;does not work, but it should replace ask add, and edit
"RTN","IBCSC4D",131,0)
 ;S DIC="^IBA(362.3,",DIC(0)="EMAQ",D="AIFN"_$G(IFN) D IX^DIC K DA,DO,DIC,D
"RTN","IBCSC4D",132,0)
 Q
"RTN","IBCSC4D",133,0)
 ;
"RTN","IBCSC4D",134,0)
 ; ******************************************************************************************
"RTN","IBCSC4D",135,0)
 ;
"RTN","IBCSC4D",136,0)
DXOPT(IBIFN) ; display and ask user to select PCE diagnosis
"RTN","IBCSC4D",137,0)
 N IBDXA,IBOEDX,IBLIST,DFN,IBX
"RTN","IBCSC4D",138,0)
 D SET(IBIFN,.IBDXA,"")
"RTN","IBCSC4D",139,0)
 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2),IBX=$G(^DGCR(399,+IBIFN,"U"))
"RTN","IBCSC4D",140,0)
 D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",141,0)
 I +$P($G(IBOEDX),U,2) D NEWDX(+IBOEDX) I $D(IBLIST) D ADDNEW(IBIFN,IBLIST,.IBOEDX)
"RTN","IBCSC4D",142,0)
 Q
"RTN","IBCSC4D",143,0)
 ;
"RTN","IBCSC4D",144,0)
OPTDX(DFN,DT1,DT2,ARRAY,IBDXE) ; get diagnosis from PCE for encounters within date range
"RTN","IBCSC4D",145,0)
 ; ARRAY(X)= DX ^ ORDER ^ OUTPATIENT ENCOUNTER (409.68) ^ DATE/TIME ^ TRUE IF NON-BILL ^ NON-BILL MESS ^ CLINIC
"RTN","IBCSC4D",146,0)
 N IBDT,IBOE,IBDX,IBDXN,IBDXA,IBDXB,IBCNT,IBCNT1,ARR,IBI,IBJ,IBK,IBVAL,IBCBK
"RTN","IBCSC4D",147,0)
 K ARRAY
"RTN","IBCSC4D",148,0)
 S (IBCNT,IBCNT1)=0,DT1=$G(DT1)-.0001,DT2=$S(+$G(DT2):DT2,1:9999999)+.7999
"RTN","IBCSC4D",149,0)
 ;
"RTN","IBCSC4D",150,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DT1,IBVAL("EDT")=DT2
"RTN","IBCSC4D",151,0)
 S IBCBK="D OEDX^IBCU81(Y,.IBDXA,.IBDXB)"
"RTN","IBCSC4D",152,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCSC4D",153,0)
 ;
"RTN","IBCSC4D",154,0)
 S (IBCNT,IBCNT1,IBI)=0 F  S IBI=$O(IBDXA(IBI)) Q:'IBI  D
"RTN","IBCSC4D",155,0)
 . S IBJ=0 F  S IBJ=$O(IBDXA(IBI,IBJ)) Q:'IBJ  D
"RTN","IBCSC4D",156,0)
 .. S IBK=0 F  S IBK=$O(IBDXA(IBI,IBJ,IBK)) Q:'IBK  D
"RTN","IBCSC4D",157,0)
 ... S IBDXN=0 F  S IBDXN=$O(IBDXA(IBI,IBJ,IBK,IBDXN)) Q:'IBDXN  D
"RTN","IBCSC4D",158,0)
 .... S IBDX=IBDXA(IBI,IBJ,IBK,IBDXN) I $D(ARR(+IBDX))!(+$P(IBDX,U,5)&(+$G(IBDXB(+IBDX)))) Q
"RTN","IBCSC4D",159,0)
 .... S IBCNT=IBCNT+1 I '$D(IBDXE(+IBDX)) S IBCNT1=IBCNT1+1
"RTN","IBCSC4D",160,0)
 .... S ARRAY(IBCNT)=IBDX S ARR(+IBDX)=""
"RTN","IBCSC4D",161,0)
 S ARRAY=IBCNT_"^"_IBCNT1 K IBDXA,IBDXB,ARR
"RTN","IBCSC4D",162,0)
 Q
"RTN","IBCSC4D",163,0)
 ;
"RTN","IBCSC4D",164,0)
NEWDX(IBX) ; user select PCE diagnosis to add to bill
"RTN","IBCSC4D",165,0)
 Q:'$G(IBX)  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4D",166,0)
NEWDX1 S DIR("?",1)="Enter the number preceding the Diagnosis you want added to the bill.",DIR("?",2)="Multiple entries may be added separated by commas or ranges separated by a dash."
"RTN","IBCSC4D",167,0)
 S DIR("?")="The diagnosis will be added to the bill with a print order corresponding to its position in this list."
"RTN","IBCSC4D",168,0)
 S DIR("A")="SELECT NEW DIAGNOSES TO ADD THE BILL"
"RTN","IBCSC4D",169,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
"RTN","IBCSC4D",170,0)
 S IBLIST=Y
"RTN","IBCSC4D",171,0)
 ;
"RTN","IBCSC4D",172,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4D",173,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
"RTN","IBCSC4D",174,0)
 I 'Y G NEWDX1
"RTN","IBCSC4D",175,0)
NEWDXE Q
"RTN","IBCSC4D",176,0)
 ;
"RTN","IBCSC4D",177,0)
ADDNEW(IBIFN,LIST,IBOEA) ; add selected PCE diagnosis to bill
"RTN","IBCSC4D",178,0)
 Q:'LIST  N IBI,IBX,IBDX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC4D",179,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBOEA(IBX)) D
"RTN","IBCSC4D",180,0)
 . S IBDX=+IBOEA(IBX) I $D(^IBA(362.3,"AIFN"_IBIFN,IBDX)) Q
"RTN","IBCSC4D",181,0)
 . I $$ADD(IBDX,IBIFN) W "."
"RTN","IBCSC4D",182,0)
 Q
"RTN","IBCSC4D",183,0)
 ;
"RTN","IBCSC4D",184,0)
DISPOE(OEARR,EXARR) ; display outpatient PCE diagnosis
"RTN","IBCSC4D",185,0)
 N IBCNT,IBDX,IBX,IBY,IBDATE
"RTN","IBCSC4D",186,0)
 W @IOF,!,"============================= DIAGNOSIS SCREEN ==============================",!
"RTN","IBCSC4D",187,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bills date of service
"RTN","IBCSC4D",188,0)
 S IBCNT=0 F  S IBCNT=$O(OEARR(IBCNT)) Q:'IBCNT  D
"RTN","IBCSC4D",189,0)
 . S IBY=OEARR(IBCNT),IBDX=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBCSC4D",190,0)
 . S IBX="" I $D(EXARR(+OEARR(IBCNT))) S IBX="*"
"RTN","IBCSC4D",191,0)
 . W !,$J(IBCNT,2),")",?4,IBX,?5,$P(IBDX,U),?14,$E($P(IBDX,U,3),1,19)
"RTN","IBCSC4D",192,0)
 . I +$P(IBY,U,7) W ?35,$E($P($G(^SC(+$P(IBY,U,7),0)),U,1),1,15)
"RTN","IBCSC4D",193,0)
 . I $P(IBY,U,2)'="" W ?52,$E($$EXPAND^IBTRE(9000010.07,.12,$P(IBY,U,2)),1,3)
"RTN","IBCSC4D",194,0)
 . I $P(IBY,U,4)'="" W ?57,$$FMTE^XLFDT($E($P(IBY,U,4),1,12),2)
"RTN","IBCSC4D",195,0)
 . I $P(IBY,U,6)'="" W ?72,$E($P(IBY,U,6),1,7)
"RTN","IBCSC4D",196,0)
 Q
"RTN","IBCSC4D",197,0)
 ;
"RTN","IBCSC4D",198,0)
DISPID ; Display the Associated Dx and Rx # for a procedure in the identifier.
"RTN","IBCSC4D",199,0)
 ;  Input:  Naked reference to the 0th node of an entry in the
"RTN","IBCSC4D",200,0)
 ;          Procedures (#304) sub-file of the Bill/Claims (#399) file.
"RTN","IBCSC4D",201,0)
 N I,X,IBY,Z
"RTN","IBCSC4D",202,0)
 S X=^(0),IBY=Y
"RTN","IBCSC4D",203,0)
 S I=$$PRCNM^IBCSCH1($P(X,U,1),$P(X,U,2)) W " ",$E($P(I,U,2)_$J("",27),1,27)
"RTN","IBCSC4D",204,0)
 S Z=$O(^DGCR(399,DA(1),"RC","ACP",+IBY,0))
"RTN","IBCSC4D",205,0)
 I Z S Z=$P($G(^DGCR(399,DA(1),"RC",Z,0)),U,11) W $E("  Rx: "_$S(Z:$P($G(^IBA(362.4,+Z,0)),U),1:"Missing")_$J("",14),1,14)
"RTN","IBCSC4D",206,0)
 I +$P(X,U,11) S I=+$G(^IBA(362.3,+$P(X,U,11),0)) W "  Dx 1: ",$P($$ICD9^IBACSV(+I,$$BDATE^IBACSV(DA(1))),U)
"RTN","IBCSC4D",207,0)
 Q
"RTN","IBCSC4D",208,0)
FIRSTDX(DA) ; Called by trigger cross reference #2 on file 362.3,.03
"RTN","IBCSC4D",209,0)
 ; DA is the ien of the entry in file 362.3
"RTN","IBCSC4D",210,0)
 ; Check if the corresponding bill is for an inpatient episode, the
"RTN","IBCSC4D",211,0)
 ; admitting dx for the corresponding bill is null and the dx being
"RTN","IBCSC4D",212,0)
 ; entered is the first for the bill.  If this is all true, admitting
"RTN","IBCSC4D",213,0)
 ; dx should be set to the dx.
"RTN","IBCSC4D",214,0)
 ;
"RTN","IBCSC4D",215,0)
 N OK,Z
"RTN","IBCSC4D",216,0)
 S Z=$G(^IBA(362.3,DA,0)),OK=0
"RTN","IBCSC4D",217,0)
 I $$INPAT^IBCEF(+$P(Z,U,2)),$P($G(^DGCR(399,+$P(Z,U,2),"U2")),U)="",'$O(^IBA(362.3,"AO",+$P(Z,U,2),+$P(Z,U,3)),-1) S OK=1
"RTN","IBCSC4D",218,0)
 Q OK
"RTN","IBCSC4D",219,0)
 ;
"RTN","IBCSCE1")
0^87^B7430380^B7420897
"RTN","IBCSCE1",1,0)
IBCSCE1 ;ALB/MRL,MJB - MCCR SCREEN EDITS  ;07 JUN 88 14:35
"RTN","IBCSCE1",2,0)
 ;;2.0;INTEGRATED BILLING;**516**;21-MAR-94;Build 123
"RTN","IBCSCE1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSCE1",4,0)
 ;
"RTN","IBCSCE1",5,0)
 ;MAP TO DGCRSCE1
"RTN","IBCSCE1",6,0)
 ;
"RTN","IBCSCE1",7,0)
 S:'$D(DR(2,2)) DR(2,2)="" S:'$D(DGDRS1) DGDRS1="DR(2,2)" S:'$D(IB1) IB1=0 S:'$D(DGCT1) DGCT1=0 S DGDRD=$P($T(@J),";;",2) D S S K=(J*10) I $T(@K) S DGDRD=$P($T(@K),";;",2) D S
"RTN","IBCSCE1",8,0)
 I +J=31 S DR(3,2.312)=".01;7.02;2;15;8;3;6;S IBADI=X;7.01//^S X=$S(IBADI=""v"":$P(VADM(1),""^"",1),1:"""");16//^S X=$S(IBADI=""v"":""01"",1:"""");"
"RTN","IBCSCE1",9,0)
 Q
"RTN","IBCSCE1",10,0)
S I $L(@DGDRS1)+$L(DGDRD)<241 S @DGDRS1=@DGDRS1_DGDRD Q
"RTN","IBCSCE1",11,0)
 S DGCT1=DGCT1+1,DGDRS1="DR(2,2,"_DGCT1_")",@DGDRS1=DGDRD Q
"RTN","IBCSCE1",12,0)
 Q
"RTN","IBCSCE1",13,0)
11 ;;.03;
"RTN","IBCSCE1",14,0)
12 ;;1;
"RTN","IBCSCE1",15,0)
13 ;;.02;.05;
"RTN","IBCSCE1",16,0)
14 ;;1901;.361;
"RTN","IBCSCE1",17,0)
15 ;;.111;S:X="" Y=.114;.112;S:X="" Y=.114;.113:.117;.131;.12105;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,*7,"But I need a Start Date for this Temporary Address." S Y=.12105;
"RTN","IBCSCE1",18,0)
150 ;;.1218;.1211;I X']"" W !?4,*7,"But I need at least one line of a Temporary address." S Y=.12105;.1212;S:X']"" Y=.1214;.1213;.1214;.1215;.1216;.1219;@15;K DIE("NO^");
"RTN","IBCSCE1",19,0)
21 ;;.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@41";.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3119;@41;
"RTN","IBCSCE1",20,0)
22 ;;.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.258;@42;
"RTN","IBCSCE1",21,0)
31 ;;.3121;
"RTN","IBCSCE1",22,0)
AD S X=$S($D(^DPT(DA,.11)):^(.11),1:""),IBPHO=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(IBADD)):^(IBADD),1:""),^(IBADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_IBPHO_U_$P(Y,U,10) K IBADD,IBPHO Q
"RTN","IBCSCE1",23,0)
SET S I(0,0)=D0,Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),X=$P(Y(1),"^",2),D(0)=X,X=$S(D(0)>0:D(0),1:"") Q
"RTN","IBCSCE1",24,0)
 ;IBCSCE1
"RTN","IBCU7")
0^2^B111564056^B77808645
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210,245,228,260,348,371,432,447,488,461,516**;21-MAR-94;Build 123
"RTN","IBCU7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",8,0)
 G:X=" " CHKXQ
"RTN","IBCU7",9,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1N D  G CHKXQ
"RTN","IBCU7",10,0)
 . K X
"RTN","IBCU7",11,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",12,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",13,0)
 S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",14,0)
 I $D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",15,0)
CHKXQ Q
"RTN","IBCU7",16,0)
 ;
"RTN","IBCU7",17,0)
CODMUL ;Date oriented entry of procedure
"RTN","IBCU7",18,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",19,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",20,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",21,0)
 ;
"RTN","IBCU7",22,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",23,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",24,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",25,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",26,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",27,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",28,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",29,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",30,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",31,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",32,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",33,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",34,0)
 K IBEX
"RTN","IBCU7",35,0)
 G CODDT
"RTN","IBCU7",36,0)
 ;
"RTN","IBCU7",37,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT,IBLNPRV  ;WCJ;2.0*432
"RTN","IBCU7",38,0)
 N IBPOPOUT  S IBPOPOUT=0  ; IB*2.0*447 BI
"RTN","IBCU7",39,0)
 K DGCPT
"RTN","IBCU7",40,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",41,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",42,0)
 ;
"RTN","IBCU7",43,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",44,0)
 . S IBPOPOUT=0
"RTN","IBCU7",45,0)
 . D DICV ; restrict code type to PCM
"RTN","IBCU7",46,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",47,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",48,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",49,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",50,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",51,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",52,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",53,0)
 . S IBPROCP=+Y
"RTN","IBCU7",54,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",55,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",56,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),$$BDATE^IBACSV(IBIFN))
"RTN","IBCU7",57,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",58,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",59,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",60,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",61,0)
 . I DGCPTNEW,$D(^UTILITY($J,"IB")),$$INPAT^IBCEF(IBIFN),Y["ICPT(" D DATA^IBCU74(Y,.IBLNPRV)
"RTN","IBCU7",62,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",63,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",64,0)
 . ;
"RTN","IBCU7",65,0)
 . ; Line level provider function by form type.
"RTN","IBCU7",66,0)
 . ;     CMS-1500 (FORM TYPE=2)
"RTN","IBCU7",67,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",68,0)
 . ;              and SUPERVISING PROVIDER.
"RTN","IBCU7",69,0)
 . ;     UB-04 (FORM TYPE=3)
"RTN","IBCU7",70,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",71,0)
 . ;              OPERATING PROVIDER, and OTHER OPERATING
"RTN","IBCU7",72,0)
 . ;              PROVIDER.
"RTN","IBCU7",73,0)
 . ;
"RTN","IBCU7",74,0)
 . ; Removed: Call to $$MAINPRV^IBCEU(IBIFN) is for claim
"RTN","IBCU7",75,0)
 . ;          level provider defaults.
"RTN","IBCU7",76,0)
 . ;     1. For new line level providers we don't need
"RTN","IBCU7",77,0)
 . ;        or want default claim level provider
"RTN","IBCU7",78,0)
 . ;        (requirement).
"RTN","IBCU7",79,0)
 . ;     2. We don't want to default claim level to
"RTN","IBCU7",80,0)
 . ;        line level provider (requirement).
"RTN","IBCU7",81,0)
 . ;
"RTN","IBCU7",82,0)
 . K DIC("V")  ; DEM;432 - KILL DIC("V") because this was for previous variable pointer use.
"RTN","IBCU7",83,0)
 . ;
"RTN","IBCU7",84,0)
 . N IBPROCSV  ; DEM;432 - Variable IBPROCSV is variable to preserve value of 'Y', which is procedure code info returned by call to ^DIC.
"RTN","IBCU7",85,0)
 . S IBPROCSV=Y  ; DEM;432 - Preserve value of Y for after calls to FileMan (Y = procedure code info returned by call to ^DIC).
"RTN","IBCU7",86,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",87,0)
 . ;
"RTN","IBCU7",88,0)
 . I IBPROCSV["ICD0" S DR=".01",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*461
"RTN","IBCU7",89,0)
 . I IBPROCSV["ICPT" S DR=".01;16",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*447 BI
"RTN","IBCU7",90,0)
 . ;
"RTN","IBCU7",91,0)
 . S DR=""
"RTN","IBCU7",92,0)
 . ;
"RTN","IBCU7",93,0)
 . ; MRD;IB*2.0*516 - Added line level PROCEDURE DESCRIPTION field,
"RTN","IBCU7",94,0)
 . ; asked only if the procedure is an "NOC".
"RTN","IBCU7",95,0)
 . I IBPROCSV["ICPT",$$NOCPROC(IBPROCSV) D
"RTN","IBCU7",96,0)
 . . S DA=$P(IBPROCSV,"^")  ; The line# on the bill/claim.
"RTN","IBCU7",97,0)
 . . S DR=51                ; Field# for PROCEDURE DESCRIPTION
"RTN","IBCU7",98,0)
 . . D ^DIE
"RTN","IBCU7",99,0)
 . . Q
"RTN","IBCU7",100,0)
 . ;
"RTN","IBCU7",101,0)
 . D EN^IBCU7B ; DEM;432 - Call to line level provider user input.
"RTN","IBCU7",102,0)
 . S Y=IBPROCSV  ; DEM;432 - Restore value of Y after calls to FileMan
"RTN","IBCU7",103,0)
 . K IBPROCSV
"RTN","IBCU7",104,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",105,0)
 . I IBPOPOUT Q   ; IB*2.0*447 BI
"RTN","IBCU7",106,0)
 . S DR="" I Y["ICPT" S DR="6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",107,0)
 . S DR=DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",108,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",109,0)
 . ;
"RTN","IBCU7",110,0)
 . ; MRD;IB*2.0*516 - Allow user to add an NDC and Units.  Ask only if
"RTN","IBCU7",111,0)
 . ; coding system is not ICD and this is not a prescription claim. If
"RTN","IBCU7",112,0)
 . ; an NDC is entered, prompt for Units.
"RTN","IBCU7",113,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,9)'=9,'$$RXLINK^IBCSC5C(IBIFN,IBPROCP) D
"RTN","IBCU7",114,0)
 . . K DA
"RTN","IBCU7",115,0)
 . . S DA=IBPROCP,DA(1)=IBIFN,DIE="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",116,0)
 . . S DR="53NDC NUMBER;I X="""" S Y="""";54//1"
"RTN","IBCU7",117,0)
 . . D ^DIE
"RTN","IBCU7",118,0)
 . . Q
"RTN","IBCU7",119,0)
 . ;
"RTN","IBCU7",120,0)
 . I IBFT=3 D:'$$INPAT^IBCEF(IBIFN) ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",121,0)
 . ; DEM;432 - Add Additional OB Minutes to DR string for call to DIE.
"RTN","IBCU7",122,0)
 . S DR=$$SPCUNIT(IBIFN,IBPROCP) S:DR["15;" DR=DR_"74Additional OB Minutes" D ^DIE ; miles/minutes/hours
"RTN","IBCU7",123,0)
 . ;
"RTN","IBCU7",124,0)
 . I IBFT=2 D
"RTN","IBCU7",125,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",126,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",127,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",128,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",129,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",130,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",131,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",132,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",133,0)
 . ; add visit date to bill
"RTN","IBCU7",134,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",135,0)
 ; Delete modifiers with only a sequence #, no code
"RTN","IBCU7",136,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",137,0)
 Q
"RTN","IBCU7",138,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",139,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",140,0)
 Q
"RTN","IBCU7",141,0)
 ;
"RTN","IBCU7",142,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",143,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",144,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",145,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",146,0)
 D ^DIK
"RTN","IBCU7",147,0)
 Q
"RTN","IBCU7",148,0)
 ;
"RTN","IBCU7",149,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",150,0)
 S DA(1)=IBIFN
"RTN","IBCU7",151,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",152,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",153,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",154,0)
 S DGRVRCAL=1
"RTN","IBCU7",155,0)
 Q
"RTN","IBCU7",156,0)
 ;
"RTN","IBCU7",157,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",158,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",159,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",160,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",161,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",162,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",163,0)
 K X,Y
"RTN","IBCU7",164,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",165,0)
 ;
"RTN","IBCU7",166,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",167,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",168,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",169,0)
 W ! F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,33),?40,"- ",$P(Z,"^") D
"RTN","IBCU7",170,0)
 . N IBY
"RTN","IBCU7",171,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",172,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",173,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",174,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",175,0)
 W !
"RTN","IBCU7",176,0)
 ;
"RTN","IBCU7",177,0)
 K Z Q
"RTN","IBCU7",178,0)
 ;
"RTN","IBCU7",179,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",180,0)
 Q
"RTN","IBCU7",181,0)
 ;
"RTN","IBCU7",182,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",183,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",184,0)
 ;
"RTN","IBCU7",185,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",186,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",187,0)
 S IBOK=1
"RTN","IBCU7",188,0)
 S DR="19T;50.09T;50.08T" D ^DIE  ; WCJ;IB*2.0*488 Added Ts
"RTN","IBCU7",189,0)
 ;I '($$FT^IBCEF(IBIFN)'=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",190,0)
 I '($$FT^IBCEF(IBIFN)=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",191,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",192,0)
 ;/Beginning of IB*2.0*488 (vd)
"RTN","IBCU7",193,0)
 ;S DIR("B")="NO",DIR("A")="EDIT CMS-1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",194,0)
 ;S DIR("?",1)="Respond YES only if you need to add/edit data for chiropractic visits,"
"RTN","IBCU7",195,0)
 ;S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",196,0)
 ;D ^DIR K DIR
"RTN","IBCU7",197,0)
 ;I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",198,0)
 ;S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03"
"RTN","IBCU7",199,0)
 S DR="50.07T;50.03T"   ;WCJ;IB*2.0*488 added Ts
"RTN","IBCU7",200,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCU7",201,0)
 D ^DIE
"RTN","IBCU7",202,0)
 W !
"RTN","IBCU7",203,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",204,0)
 ;
"RTN","IBCU7",205,0)
XTRA1(Y) ;
"RTN","IBCU7",206,0)
 K Y
"RTN","IBCU7",207,0)
 Q
"RTN","IBCU7",208,0)
 ;
"RTN","IBCU7",209,0)
SPCUNIT(IBIFN,DA) ; return fields for special units if applicable, in DR form
"RTN","IBCU7",210,0)
 N IB0,IBCPT,IBDR,IBCT,IBFT,DFN S IBDR=""
"RTN","IBCU7",211,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27),IBFT=$P(IB0,U,19),DFN=$P(IB0,U,2)
"RTN","IBCU7",212,0)
 S IBCPT=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(DA),0)) I IBCPT'["ICPT" G SPCUNTQ
"RTN","IBCU7",213,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,5,IBCT) S IBDR="15;" D SROMIN^IBCU74(IBIFN,DA) G SPCUNTQ ; minutes
"RTN","IBCU7",214,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,4,IBCT) S IBDR="21;" G SPCUNTQ ; miles
"RTN","IBCU7",215,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,6,IBCT) S IBDR="22//"_$$OBSHOUR^IBCU74(DFN,$P(IBCPT,U,2))_";" G SPCUNTQ ; hours
"RTN","IBCU7",216,0)
 I +IBFT=2,$P($G(^IBE(353.2,+$P(IBCPT,U,10),0)),U,2)="ANESTHESIA" S IBDR="15;" ; minutes
"RTN","IBCU7",217,0)
SPCUNTQ Q IBDR
"RTN","IBCU7",218,0)
 ;
"RTN","IBCU7",219,0)
ATTACH ; DEM;432 - Attachment control number.
"RTN","IBCU7",220,0)
 ; Ask if user wants to enter Attachment Control Number.
"RTN","IBCU7",221,0)
 N DIR,X,Y,DA,DIE,DR
"RTN","IBCU7",222,0)
 S DIR("A")="Enter Attachment Control Number"
"RTN","IBCU7",223,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCU7",224,0)
 D ^DIR
"RTN","IBCU7",225,0)
 Q:'Y
"RTN","IBCU7",226,0)
 ; User chose to enter Attachment Control Number.
"RTN","IBCU7",227,0)
 ; User enters Attachment Control fields.
"RTN","IBCU7",228,0)
 S DA(1)=IBIFN,DA=IBPROCP
"RTN","IBCU7",229,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"","
"RTN","IBCU7",230,0)
 S DR="71Report Type;72Report Transmission Method;70Attachment Control Number"
"RTN","IBCU7",231,0)
 D ^DIE
"RTN","IBCU7",232,0)
 Q
"RTN","IBCU7",233,0)
 ;
"RTN","IBCU7",234,0)
NOCPROC(IBPROCSV) ; MRD;IB*2.0*516 - Function to determine if procedure is an
"RTN","IBCU7",235,0)
 ; "NOC".  Returns '1' if "NOC" procedure, otherwise '0'.
"RTN","IBCU7",236,0)
 ;
"RTN","IBCU7",237,0)
 N IBNOC,IBPROCEX,IBPROCIN,IBPROCNM,IBX
"RTN","IBCU7",238,0)
 S IBNOC=0
"RTN","IBCU7",239,0)
 I $G(IBPROCSV)="" G NOCPROCQ
"RTN","IBCU7",240,0)
 S IBPROCIN=$P($P(IBPROCSV,U,2),";")
"RTN","IBCU7",241,0)
 I IBPROCIN="" G NOCPROCQ
"RTN","IBCU7",242,0)
 ;
"RTN","IBCU7",243,0)
 ; If procedure code ends in '99', quit with a '1'.
"RTN","IBCU7",244,0)
 ;
"RTN","IBCU7",245,0)
 S IBPROCEX=$P($G(^ICPT(IBPROCIN,0)),U,1)
"RTN","IBCU7",246,0)
 I $E(IBPROCEX,$L(IBPROCEX)-1,$L(IBPROCEX))=99 S IBNOC=1 G NOCPROCQ
"RTN","IBCU7",247,0)
 ;
"RTN","IBCU7",248,0)
 ; Pull procedure name, then check to see if it contains one of the
"RTN","IBCU7",249,0)
 ; specified strings.
"RTN","IBCU7",250,0)
 ;
"RTN","IBCU7",251,0)
 S IBPROCNM=$P($G(^ICPT(IBPROCIN,0)),U,2)
"RTN","IBCU7",252,0)
 I IBPROCNM'="",$$NOC(IBPROCNM) S IBNOC=1 G NOCPROCQ
"RTN","IBCU7",253,0)
 ;
"RTN","IBCU7",254,0)
 S IBX=0
"RTN","IBCU7",255,0)
 F  S IBX=$O(^ICPT(IBPROCIN,"D",IBX)) Q:'IBX  D  I IBNOC=1 Q
"RTN","IBCU7",256,0)
 . S IBTEXT=$G(^ICPT(IBPROCIN,"D",IBX,0))
"RTN","IBCU7",257,0)
 . I $G(^ICPT(IBPROCIN,"D",IBX+1,0))'="" S IBTEXT=IBTEXT_" "_$G(^ICPT(IBPROCIN,"D",IBX+1,0))
"RTN","IBCU7",258,0)
 . S IBNOC=$$NOC(IBTEXT)
"RTN","IBCU7",259,0)
 . Q
"RTN","IBCU7",260,0)
 ;
"RTN","IBCU7",261,0)
NOCPROCQ ; Quit out.
"RTN","IBCU7",262,0)
 Q IBNOC
"RTN","IBCU7",263,0)
 ;
"RTN","IBCU7",264,0)
NOC(IBTEXT) ; Quit with '1' if IBTEXT contains one of the specified strings.
"RTN","IBCU7",265,0)
 ;
"RTN","IBCU7",266,0)
 S IBTEXT=$TR(IBTEXT,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBCU7",267,0)
 ;
"RTN","IBCU7",268,0)
 I IBTEXT["NOT OTHERWISE" Q 1
"RTN","IBCU7",269,0)
 I IBTEXT["NOT ELSEWHERE" Q 1
"RTN","IBCU7",270,0)
 I IBTEXT["NOT LISTED" Q 1
"RTN","IBCU7",271,0)
 I IBTEXT["UNLISTED" Q 1
"RTN","IBCU7",272,0)
 I IBTEXT["UNSPECIFIED" Q 1
"RTN","IBCU7",273,0)
 I IBTEXT["UNCLASSIFIED" Q 1
"RTN","IBCU7",274,0)
 I IBTEXT["NON-SPECIFIED" Q 1
"RTN","IBCU7",275,0)
 I IBTEXT["NOS " Q 1
"RTN","IBCU7",276,0)
 I IBTEXT["NOS;" Q 1
"RTN","IBCU7",277,0)
 I IBTEXT["NOS." Q 1
"RTN","IBCU7",278,0)
 I IBTEXT["NOS," Q 1
"RTN","IBCU7",279,0)
 I IBTEXT["NOS/" Q 1
"RTN","IBCU7",280,0)
 I IBTEXT["(NOS)" Q 1
"RTN","IBCU7",281,0)
 I IBTEXT["NOC " Q 1
"RTN","IBCU7",282,0)
 I IBTEXT["NOC;" Q 1
"RTN","IBCU7",283,0)
 I IBTEXT["NOC." Q 1
"RTN","IBCU7",284,0)
 I IBTEXT["NOC," Q 1
"RTN","IBCU7",285,0)
 I IBTEXT["NOC/" Q 1
"RTN","IBCU7",286,0)
 I IBTEXT["(NOC)" Q 1
"RTN","IBCU7",287,0)
 ;
"RTN","IBCU7",288,0)
 ; Check if last three charcters are 'NOC' or 'NOS'.
"RTN","IBCU7",289,0)
 ;
"RTN","IBCU7",290,0)
 S IBTEXT=$E(IBTEXT,$L(IBTEXT)-2,$L(IBTEXT))
"RTN","IBCU7",291,0)
 I IBTEXT="NOC" Q 1
"RTN","IBCU7",292,0)
 I IBTEXT="NOS" Q 1
"RTN","IBCU7",293,0)
 ;
"RTN","IBCU7",294,0)
 Q 0
"RTN","IBCU7",295,0)
 ;
"RTN","IBCU74")
0^151^B36449231^B35879024
"RTN","IBCU74",1,0)
IBCU74 ;OAK/ELZ - INTERCEPT SCREEN INPUT OF PROCEDURE CODES (CONT) ;6-JAN-04
"RTN","IBCU74",2,0)
 ;;2.0;INTEGRATED BILLING;**228,260,339,432,516**;21-MAR-94;Build 123
"RTN","IBCU74",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCU74",4,0)
 ;
"RTN","IBCU74",5,0)
 ;
"RTN","IBCU74",6,0)
DATA(IBP,IBLNPRV) ; this is used to add data when new procedures are added for
"RTN","IBCU74",7,0)
 ; inpatient cases
"RTN","IBCU74",8,0)
 ; Return IBRPROV - renderring providers ;ib*2.0*432
"RTN","IBCU74",9,0)
 N IBX,IBY,IB1,IB2,IBC,DO,X,DIC,DIE,DA,DR,IB9,Y,IBQ,IBDR,IBZ,IBS
"RTN","IBCU74",10,0)
 S DR="" I '$P(IBP,"^",2)!('DGPROCDT) Q
"RTN","IBCU74",11,0)
 S IB1=0 F  S IB1=$O(^UTILITY($J,"IB",IB1)) Q:IB1<1!(DR)  I $P($G(^UTILITY($J,"IB",IB1,1)),"^",2)=DGPROCDT D
"RTN","IBCU74",12,0)
 . S IB2=0 F  S IB2=$O(^UTILITY($J,"IB",IB1,IB2)) Q:IB2<1!(DR)  S IBY=$G(^UTILITY($J,"IB",IB1,IB2)) I +IBY=+$P(IBP,"^",2) D  Q
"RTN","IBCU74",13,0)
 .. F IBX=6:1:9 I $P(IBY,"^",IBX) D
"RTN","IBCU74",14,0)
 ... F IBC=1:1:4 Q:'$D(^IBA(362.3,"AO",IBIFN,IBC))
"RTN","IBCU74",15,0)
 ... I $D(^IBA(362.3,"AO",IBIFN,IBC)) Q
"RTN","IBCU74",16,0)
 ... S IB9=$$ICD9^IBACSV($P(IBY,"^",IBX),DGPROCDT)
"RTN","IBCU74",17,0)
 ... W !?10,"Adding associated dx: ",$P(IB9,"^"),"  ",$P(IB9,"^",3)
"RTN","IBCU74",18,0)
 ... ; first check to see if dx on bill already
"RTN","IBCU74",19,0)
 ... S Y=$O(^IBA(362.3,"AIFN"_IBIFN,$P(IBY,"^",IBX),0))
"RTN","IBCU74",20,0)
 ... I 'Y S DIC="^IBA(362.3,",DIC(0)="",X=$P(IBY,"^",IBX),DIC("DR")=".02////^S X=IBIFN;.03////^S X=IBC" D FILE^DICN Q:Y<1
"RTN","IBCU74",21,0)
 ... ;need to find what field is not occupied starting with 10
"RTN","IBCU74",22,0)
 ... S IBZ=10 F IBS=1:1 Q:$P(DR,";",IBS)=""  I $P(DR,";",IBS)[IBZ_"////" S IBZ=IBZ+1
"RTN","IBCU74",23,0)
 ... S DR=DR_IBZ_"////"_(+Y)_";"
"RTN","IBCU74",24,0)
 .. I $P(IBY,"^",13) D
"RTN","IBCU74",25,0)
 ... I $$GETNPI^IBCEF73A($P(IBY,"^",13)_";VA(200,")="" Q  ;Don't file provider if no NPI - IB*2*516
"RTN","IBCU74",26,0)
 ... W !!?10,"Associating Provider: ",$P($G(^VA(200,$P(IBY,"^",13),0)),"^") D  S DR=DR_"18////"_$P(IBY,"^",13)_";",IBLNPRV("IBCCPT")="`"_$P(IBY,U,13)  ;WCJ;IB*2.0*432;Save off renderring to return
"RTN","IBCU74",27,0)
 .... ; as requested by users, need to update the last look up value for
"RTN","IBCU74",28,0)
 .... ; the provider
"RTN","IBCU74",29,0)
 .... N DIC,X,DR,Y S DIC="^VA(200,",DIC(0)="INOS",X="`"_$P(IBY,"^",13)
"RTN","IBCU74",30,0)
 .... D ^DIC
"RTN","IBCU74",31,0)
 .... ;
"RTN","IBCU74",32,0)
 .. I $P(IBY,"^",14) W !?10,"Assigning Location: ",$P($G(^SC($P(IBY,"^",14),0)),"^") S DR=DR_"6////"_$P(IBY,"^",14)_";"_$S($P($G(^SC($P(IBY,"^",14),0)),"^",15):"5////"_$P(^(0),"^",15)_";",1:"")
"RTN","IBCU74",33,0)
 .. I $L(DR) S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA(1)=IBIFN,DA=+IBP,IBDR=DR D ^DIE
"RTN","IBCU74",34,0)
 .. S IBC=0 F IBX=11,12 I $P(IBY,"^",IBX) S IB9=$$MOD^ICPTMOD($P(IBY,"^",IBX),"I") W !?10,"Adding Modifier: ",$P(IB9,"^",2)," - ",$P(IB9,"^",3) D
"RTN","IBCU74",35,0)
 ... S IBC=IBC+1,DIC="^DGCR(399,"_IBIFN_",""CP"","_(+IBP)_",""MOD"",",DA(1)=+IBP,DA(2)=IBIFN,X=IBC,DIC("DR")=".02////"_$P(IBY,"^",IBX),DIC(0)="" D FILE^DICN
"RTN","IBCU74",36,0)
 .. ;
"RTN","IBCU74",37,0)
 .. ; need to check for quantity >1 then duplicate entry
"RTN","IBCU74",38,0)
 .. I $P(IBY,"^",10)>1 W !!?10,"Duplicating Procedure for Quantity of ",$P(IBY,"^",10) F IBQ=1:1:$P(IBY,"^",10)-1 D
"RTN","IBCU74",39,0)
 ... K DO S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="",X=(+IBY)_";ICPT(",DA(1)=IBIFN,DIC("DR")="1////"_DGPROCDT_";"_$G(IBDR) D FILE^DICN S IBCP=+Y
"RTN","IBCU74",40,0)
 ... S IBC=0 F IBX=11,12 I $P(IBY,"^",IBX) S IB9=$$MOD^ICPTMOD($P(IBY,"^",IBX),"I"),IBC=IBC+1,DIC="^DGCR(399,"_IBIFN_",""CP"","_IBCP_",""MOD"",",DA(1)=IBCP,DA(2)=IBIFN,X=IBC,DIC("DR")=".02////"_$P(IBY,"^",IBX),DIC(0)="" D FILE^DICN
"RTN","IBCU74",41,0)
 .. K IBDR
"RTN","IBCU74",42,0)
 Q
"RTN","IBCU74",43,0)
 ;
"RTN","IBCU74",44,0)
SROMIN(IBIFN,IBPROCP) ; will ask as user to select anesthesia to populate into
"RTN","IBCU74",45,0)
 ; the minutes of a bill
"RTN","IBCU74",46,0)
 N IBSR,DFN,IBFDT,IBTDT,IBSRC,IBSRSDT,IBSREDT,IBC,IBSRDAT,IBSRMIN,DR,DA
"RTN","IBCU74",47,0)
 N DIE,X,Y,IBP,DIR
"RTN","IBCU74",48,0)
 K ^TMP("SRANES",$J),^TMP("IBSRDAT",$J)
"RTN","IBCU74",49,0)
 ;
"RTN","IBCU74",50,0)
 S DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),"^",2)
"RTN","IBCU74",51,0)
 S IBFDT=+$G(^DGCR(399,IBIFN,"U")),IBTDT=$P($G(^("U")),"^",2)
"RTN","IBCU74",52,0)
 I 'DFN!('IBFDT)!('IBTDT) G SROMINQ
"RTN","IBCU74",53,0)
 ;
"RTN","IBCU74",54,0)
 S IBSR=$$ANESTIME^SROANEST(DFN,IBFDT,IBTDT) I IBSR<1 G SROMINQ
"RTN","IBCU74",55,0)
 ;
"RTN","IBCU74",56,0)
 W !!,"The following surgical/anesthesia times were found:",!
"RTN","IBCU74",57,0)
 S (IBC,IBSRC)=0 F  S IBSRC=$O(^TMP("SRANES",$J,IBSRC)) Q:IBSRC<1  S IBSRSDT=0 F  S IBSRSDT=$O(^TMP("SRANES",$J,IBSRC,IBSRSDT)) Q:'IBSRSDT  S IBSREDT=0 F  S IBSREDT=$O(^TMP("SRANES",$J,IBSRC,IBSRSDT,IBSREDT)) Q:'IBSREDT  D
"RTN","IBCU74",58,0)
 . ;
"RTN","IBCU74",59,0)
 . S IBC=IBC+1
"RTN","IBCU74",60,0)
 . S IBSRDAT=^TMP("SRANES",$J,IBSRC,IBSRSDT,IBSREDT)
"RTN","IBCU74",61,0)
 . S ^TMP("IBSRDAT",$J,IBC)=IBSRDAT
"RTN","IBCU74",62,0)
 . W !,$J(IBC,4)," Case #",IBSRC,?20,$$FMTE^XLFDT(IBSRSDT,2),?35,$$FMTE^XLFDT(IBSREDT,2),?50,$P(IBSRDAT,"^",2),?60
"RTN","IBCU74",63,0)
 . F IBP=4:1:11 I $P(IBSRDAT,"^",IBP) W:$X>61 "," W $P($T(EXEMPT+(IBP-3)),";",3)
"RTN","IBCU74",64,0)
 ;
"RTN","IBCU74",65,0)
 S DIR(0)="LO^1:"_IBC_":0" D ^DIR G:'Y SROMINQ
"RTN","IBCU74",66,0)
 ;
"RTN","IBCU74",67,0)
 S IBSRMIN=0 F IBP=1:1 Q:'$P(Y,",",IBP)  S IBSRMIN=IBSRMIN+$P(^TMP("IBSRDAT",$J,$P(Y,",",IBP)),"^",2)
"RTN","IBCU74",68,0)
 S DIE="^DGCR(399,"_IBIFN_",""CP"",",DR="15///"_IBSRMIN,DA=IBPROCP,DA(1)=IBIFN D ^DIE
"RTN","IBCU74",69,0)
 ;
"RTN","IBCU74",70,0)
SROMINQ K ^TMP("SRANES",$J),^TMP("IBSRDAT",$J)
"RTN","IBCU74",71,0)
 Q
"RTN","IBCU74",72,0)
 ;
"RTN","IBCU74",73,0)
 ;
"RTN","IBCU74",74,0)
OBSHOUR(DFN,EVNTDT) ; Get Observation Hours (for Procedures whose charge requires Hours)
"RTN","IBCU74",75,0)
 ; display Observation Discharges 72 hours before date (procedure date)
"RTN","IBCU74",76,0)
 ; allow user to input exact observation date times, using the last observation admission/discharge as default
"RTN","IBCU74",77,0)
 ; based on the date/times entered by the user calculate the total hours
"RTN","IBCU74",78,0)
 ; Input:  DFN = Patient ifn,   EVNTDT = Procedure Date
"RTN","IBCU74",79,0)
 ; Output: returns total hours with 1 decimal digit selected/input or ""
"RTN","IBCU74",80,0)
 ;
"RTN","IBCU74",81,0)
 N IBBEG,IBEND,IBDATE,IBPTF,IBPTF0,IBPTF70,IBDSPLT,IBADMDT,IBDSCDT,IBDSH,DIR,X,Y,DIRUT,DTOUT,DUOUT,IBHOURS
"RTN","IBCU74",82,0)
 S (IBDSH,IBHOURS,IBADMDT,IBDSCDT)="" I '$G(DFN) G OBSHOURQ
"RTN","IBCU74",83,0)
 S EVNTDT=$S(+$G(EVNTDT):EVNTDT,1:DT)\1,IBBEG=$$FMADD^XLFDT(EVNTDT,-3)+.0001,IBEND=EVNTDT+.2359
"RTN","IBCU74",84,0)
 ;
"RTN","IBCU74",85,0)
 W !!,?6,"Inpatient Observation Discharges 72 hours before "_$$FMTE^XLFDT(EVNTDT,2),":"
"RTN","IBCU74",86,0)
 S IBDATE=IBBEG F  S IBDATE=$O(^DGPT("ADS",IBDATE)) Q:'IBDATE  Q:IBDATE>IBEND  D
"RTN","IBCU74",87,0)
 . S IBPTF=0 F  S IBPTF=$O(^DGPT("ADS",IBDATE,IBPTF)) Q:'IBPTF  D
"RTN","IBCU74",88,0)
 .. S IBPTF0=$G(^DGPT(IBPTF,0)) Q:+IBPTF0'=DFN  S IBPTF70=$G(^DGPT(IBPTF,70))
"RTN","IBCU74",89,0)
 .. ;
"RTN","IBCU74",90,0)
 .. S IBDSPLT=+$P(IBPTF70,U,2) I ",18,23,24,36,41,65,94,"'[(","_IBDSPLT_",") Q
"RTN","IBCU74",91,0)
 .. ;
"RTN","IBCU74",92,0)
 .. S IBDSPLT=$G(^DIC(42.4,IBDSPLT,0)),IBADMDT=$E(+$P(IBPTF0,U,2),1,12),IBDSCDT=$E(+IBPTF70,1,12)
"RTN","IBCU74",93,0)
 .. ;
"RTN","IBCU74",94,0)
 .. S IBDSH=$$FMDIFF^XLFDT(IBDSCDT,IBADMDT,2)/60/60
"RTN","IBCU74",95,0)
 .. ;
"RTN","IBCU74",96,0)
 .. W !,?6,$P(IBDSPLT,U,1),?39,$$FMTE^XLFDT(IBADMDT,2),?55,$$FMTE^XLFDT(IBDSCDT,2),?72,"(",$J(IBDSH,"",1),")"
"RTN","IBCU74",97,0)
 I 'IBDSH W " None found"
"RTN","IBCU74",98,0)
 ;
"RTN","IBCU74",99,0)
 W !!,?6,"Observation Start/Stop Times are optional, used only to calculate Hours:"
"RTN","IBCU74",100,0)
 S DIR("A")="      Enter Observation Start Date/Time: " I +IBADMDT S DIR("B")=$$FMTE^XLFDT(IBADMDT,2)
"RTN","IBCU74",101,0)
 S DIR(0)="DAO^::XR" D ^DIR S IBADMDT=+Y I ('Y)!($D(DIRUT)) G OBSHOURQ
"RTN","IBCU74",102,0)
 ;
"RTN","IBCU74",103,0)
 S DIR("A")="      Enter Observation Stop Date/Time: " I IBDSCDT>IBADMDT S DIR("B")=$$FMTE^XLFDT(IBDSCDT,2)
"RTN","IBCU74",104,0)
 S DIR(0)="DAO^"_IBADMDT_"::XR" D ^DIR S IBDSCDT=+Y I ('Y)!($D(DIRUT)) G OBSHOURQ
"RTN","IBCU74",105,0)
 ;
"RTN","IBCU74",106,0)
 S IBHOURS=$J($$FMDIFF^XLFDT(IBDSCDT,IBADMDT,2)/60/60,"",1) W "     (",IBHOURS,")",!
"RTN","IBCU74",107,0)
 ;
"RTN","IBCU74",108,0)
OBSHOURQ Q IBHOURS
"RTN","IBCU74",109,0)
 ;
"RTN","IBCU74",110,0)
 ;
"RTN","IBCU74",111,0)
EXEMPT ; exemption reasons to display
"RTN","IBCU74",112,0)
 ;;SC
"RTN","IBCU74",113,0)
 ;;CV
"RTN","IBCU74",114,0)
 ;;AO
"RTN","IBCU74",115,0)
 ;;IR
"RTN","IBCU74",116,0)
 ;;SWA
"RTN","IBCU74",117,0)
 ;;MST
"RTN","IBCU74",118,0)
 ;;HNC
"RTN","IBCU74",119,0)
 ;;SHAD
"RTN","IBCVA0")
0^159^B10440495^B10445232
"RTN","IBCVA0",1,0)
IBCVA0 ;ALB/MJB - SET MCCR VARIABLES CONT.  ;04 AUG 88 03:02
"RTN","IBCVA0",2,0)
 ;;2.0;INTEGRATED BILLING;**52,361,371,516**;21-MAR-94;Build 123
"RTN","IBCVA0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCVA0",4,0)
 ;
"RTN","IBCVA0",5,0)
 ;MAP TO DGCRVA0
"RTN","IBCVA0",6,0)
 ;
"RTN","IBCVA0",7,0)
 Q
"RTN","IBCVA0",8,0)
ALL I $D(DFN) S IBDPT=^DPT(DFN,0) D ADDR ;I IBADD1]"",$L(IBADD1)'>47 S DIE="^DGCR(399,",(DA,Y)=+IBIFN,DR="110///"_IBADD1 D ^DIE K DIE,DR,DA
"RTN","IBCVA0",9,0)
 ;I $D(^DPT(DFN,.11)) S IBST=$P(^(.11),U,5),IBST=$S(IBST'="":$P(^DIC(5,IBST,0),U,2),1:"")
"RTN","IBCVA0",10,0)
 S IBBNO=$P(IB(0),"^"),IBDT=$P(IB(0),"^",3)
"RTN","IBCVA0",11,0)
 D 2^VADPT
"RTN","IBCVA0",12,0)
 ;I $P(IB(0),U,5)<3 S Y=0 F I=1:1 S Y=$O(^DGPM("APTT1",DFN,Y)) Q:'Y  S:$E(Y,1,7)=IBDT IBDA=Y
"RTN","IBCVA0",13,0)
 Q
"RTN","IBCVA0",14,0)
1 ;Demographic variables set
"RTN","IBCVA0",15,0)
 D Q1^IBCVA
"RTN","IBCVA0",16,0)
EN1 Q:'$D(DFN)  S IBMAR=$S($P(IBDPT,U,5)'="":$P(IBDPT,U,5),1:"U") I IBMAR'="U" S IBMAR=$S(IBMAR=6:"S",IBMAR=2:"M",IBMAR=1:"D",IBMAR=4:"W",IBMAR=5:"X",1:"U")
"RTN","IBCVA0",17,0)
 I $D(^DPT(DFN,.121)) S IBTADD=^DPT(DFN,.121),IBTST=$P(IBTADD,U,5),IBTST=$S(IBTST'="":$P(^DIC(5,IBTST,0),U,2),1:"") I $P(IBTADD,U)="" S IBT1="NO TEMPORARY ADDRESS"
"RTN","IBCVA0",18,0)
 Q
"RTN","IBCVA0",19,0)
2 ;Employment variables set
"RTN","IBCVA0",20,0)
 D Q1^IBCVA,Q2^IBCVA
"RTN","IBCVA0",21,0)
EN2 S:'$D(^DPT(DFN,.311)) IBEMPD="" I $D(^DPT(DFN,.311)) I ^DPT(DFN,.311)'="" S IBEMPD=$P(^(.311),U)_"^"_$P(^(.311),U,6)_"^"_$S($P(^(.311),U,7)'="":$P(^(.311),U,7),1:"")_"^"_$P($G(^DPT(DFN,.22)),U,5)_"^"_$P(IB(0),U,9)_"^"_$P(IB(0),U,8)
"RTN","IBCVA0",22,0)
 I $D(IBEMPD) S:IBEMPD'="" IBEC=$P(^DPT(DFN,.311),"^",15)
"RTN","IBCVA0",23,0)
 I $D(^DPT(DFN,.25)) S:$P(^DPT(DFN,.25),U,6)'="" IBSEST=$P(^(.25),U,6),IBSEST=$P(^DIC(5,IBSEST,0),U,2)
"RTN","IBCVA0",24,0)
 Q
"RTN","IBCVA0",25,0)
3 ;Insurance variables set
"RTN","IBCVA0",26,0)
EN3 D 123^IBCVA
"RTN","IBCVA0",27,0)
EN31 ; -IBdd(i) = value of ins node in dpt
"RTN","IBCVA0",28,0)
 I '$D(^DGCR(399,IBIFN,"AIC")) S IBINDT=$S(+$G(IB("U")):+IB("U"),+$G(^DGCR(399,IBIFN,"U")):+$G(^("U")),1:DT) D ALL^IBCNS1(DFN,"IBDD",1,IBINDT) S I="" F  S I=$O(IBDD(I)) Q:'I  D INS
"RTN","IBCVA0",29,0)
 ;
"RTN","IBCVA0",30,0)
 ; MRD;IB*2.0*516 - Due to the introduction of the new "In7" nodes
"RTN","IBCVA0",31,0)
 ; on file# 399, this line must be modified to work correctly.
"RTN","IBCVA0",32,0)
 ;I $D(^DGCR(399,IBIFN,"AIC")) S IBIN="I" F I=1:1:3 S IBIN=$O(^DGCR(399,IBIFN,IBIN)) Q:IBIN'?1"I".N  S IBDD(I,0)=^DGCR(399,IBIFN,IBIN) D INS
"RTN","IBCVA0",33,0)
 I $D(^DGCR(399,IBIFN,"AIC")) F I=1:1:3 S IBIN="I"_I Q:'$D(^DGCR(399,IBIFN,IBIN))  S IBDD(I,0)=^DGCR(399,IBIFN,IBIN) D INS
"RTN","IBCVA0",34,0)
 Q
"RTN","IBCVA0",35,0)
INS I $P(IBDD(I,0),U,6)="v" S IBISEX(I)=$P(^DPT(DFN,0),U,2)
"RTN","IBCVA0",36,0)
 E  S IBISEX(I)=$P($G(^DPT(DFN,.312,+$P($G(^DGCR(399,IBIFN,"M")),U,I+11),3)),U,12) ; *361 replaces old calculation of insured's sex
"RTN","IBCVA0",37,0)
 S IBISEX(I)=$S(IBISEX(I)="M":"MALE",IBISEX(I)="F":"FEMALE",1:"UNSPECIFIED")
"RTN","IBCVA0",38,0)
 S IBIRN(I)=$P(IBDD(I,0),U,16)
"RTN","IBCVA0",39,0)
 S IBIR(I)=$$EXTERNAL^DILFD(2.312,16,,IBIRN(I))
"RTN","IBCVA0",40,0)
 Q
"RTN","IBCVA0",41,0)
ADDR ;SET ADDRESS
"RTN","IBCVA0",42,0)
 S IBADD1="" I $D(^DGCR(399,IBIFN,"M")),$P(^("M"),"^",10)]"" Q
"RTN","IBCVA0",43,0)
 S X=$S($D(^DPT(DFN,.11)):^(.11),1:"") F I=1:1:4 I $P(X,"^",I)]"" S IBADD1=IBADD1_$P(X,"^",I)_","
"RTN","IBCVA0",44,0)
 I $D(^DIC(5,+$P(X,"^",5),0)) S IBADD1=IBADD1_$P(^(0),"^",2),IBST=$P(^(0),"^",2)
"RTN","IBCVA0",45,0)
 S:$P(X,"^",12)]"" IBADD1=IBADD1_" "_$P(X,"^",12) Q
"RTN","IBCVA0",46,0)
 ;IBCVA0
"RTN","IBJDF51")
0^88^B58912743^B57886181
"RTN","IBJDF51",1,0)
IBJDF51 ;ALB/RB - CHAMPVA/TRICARE FOLLOW-UP REPORT (COMPILE) ;15-APR-00
"RTN","IBJDF51",2,0)
 ;;2.0;INTEGRATED BILLING;**123,185,240,356,452,516**;21-MAR-94;Build 123
"RTN","IBJDF51",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF51",4,0)
 ;
"RTN","IBJDF51",5,0)
ST ; - Tasked entry point.
"RTN","IBJDF51",6,0)
 K IB,^TMP("IBJDF5",$J) S IBQ=0
"RTN","IBJDF51",7,0)
 ;
"RTN","IBJDF51",8,0)
 ; - Set selected categories for report.
"RTN","IBJDF51",9,0)
 I IBSEL[1 S IBCAT(31)=1
"RTN","IBJDF51",10,0)
 I IBSEL[2 S IBCAT(19)=2
"RTN","IBJDF51",11,0)
 I IBSEL[3 S IBCAT(30)=3
"RTN","IBJDF51",12,0)
 I IBSEL[4 S IBCAT(32)=4
"RTN","IBJDF51",13,0)
 I IBSEL[5 S IBCAT(29)=5
"RTN","IBJDF51",14,0)
 I IBSEL[6 S IBCAT(28)=6
"RTN","IBJDF51",15,0)
 ;
"RTN","IBJDF51",16,0)
 ; Initialize the Summary Information
"RTN","IBJDF51",17,0)
 S IBCAT="" F  S IBCAT=$O(IBCAT(IBCAT)) Q:IBCAT=""  D
"RTN","IBJDF51",18,0)
 . S IBDIV=0
"RTN","IBJDF51",19,0)
 . I IBSD,IBCAT'=31 D  Q
"RTN","IBJDF51",20,0)
 . . F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  D INIT^IBJDF53
"RTN","IBJDF51",21,0)
 . D INIT^IBJDF53
"RTN","IBJDF51",22,0)
 ;
"RTN","IBJDF51",23,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF51",24,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDF51",25,0)
 ;
"RTN","IBJDF51",26,0)
 ; - Find data required for the report.
"RTN","IBJDF51",27,0)
 S IBA=0 F  S IBA=$O(^PRCA(430,"AC",16,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF51",28,0)
 . I IBA#100=0 D  Q:IBQ
"RTN","IBJDF51",29,0)
 . . S IBQ=$$STOP^IBOUTL("CHAMPVA/TRICARE Follow-Up Report")
"RTN","IBJDF51",30,0)
 . S IBAR=$G(^PRCA(430,IBA,0)) Q:'IBAR
"RTN","IBJDF51",31,0)
 . I $P($G(^DGCR(399,IBA,0)),U,13)=7 Q  ;           Cancelled claim.
"RTN","IBJDF51",32,0)
 . S IBCAT=+$P(IBAR,U,2) Q:'$D(IBCAT(IBCAT))  ;     Invalid AR category.
"RTN","IBJDF51",33,0)
 . S IBCAT1=IBCAT(IBCAT)
"RTN","IBJDF51",34,0)
 . ;
"RTN","IBJDF51",35,0)
 . ; - Get division, if necessary.
"RTN","IBJDF51",36,0)
 . I IBCAT1=1 S IBDIV=0                       ; CHAMPVA/TRICARE Patient
"RTN","IBJDF51",37,0)
 . ;
"RTN","IBJDF51",38,0)
 . I IBCAT1'=1 D                              ; Others
"RTN","IBJDF51",39,0)
 . . I 'IBSD S IBDIV=0 Q
"RTN","IBJDF51",40,0)
 . . S IBDIV=$$DIV(IBA)
"RTN","IBJDF51",41,0)
 . ;
"RTN","IBJDF51",42,0)
 . I IBSD,IBDIV,'VAUTD Q:'$D(VAUTD(IBDIV))  ; Not a selected division.
"RTN","IBJDF51",43,0)
 . ;
"RTN","IBJDF51",44,0)
 . ; - Determine whether AR has corresponding IB action or claim and
"RTN","IBJDF51",45,0)
 . ;   whether action/claim is inpatient, outpatient, or RX refill.
"RTN","IBJDF51",46,0)
 . S IBAC=$$CLMACT^IBJD(IBA,IBCAT) Q:IBAC=""!(+IBAC=3)
"RTN","IBJDF51",47,0)
 . I +IBAC=1 D
"RTN","IBJDF51",48,0)
 . . S X=$P($G(^IB($P(IBAC,U,2),0)),U,3)
"RTN","IBJDF51",49,0)
 . . S X=$P($G(^IBE(350.1,X,0)),U)
"RTN","IBJDF51",50,0)
 . . S IBTYP=$S(X["RX":3,X["OPT":2,1:1)
"RTN","IBJDF51",51,0)
 . I +IBAC'=1 D 
"RTN","IBJDF51",52,0)
 . . S IBTYP=$S($P($G(^DGCR(399,IBA,0)),U,5)>2:2,1:1)
"RTN","IBJDF51",53,0)
 . . I $D(^IBA(362.4,"C",IBA)) S IBTYP=3
"RTN","IBJDF51",54,0)
 . ;
"RTN","IBJDF51",55,0)
 . I IBSEL1'[IBTYP,IBSEL1'[4 Q
"RTN","IBJDF51",56,0)
 . ;
"RTN","IBJDF51",57,0)
 . I IBRPT="D" S IBPT=$$PAT(IBA) Q:IBPT=""  ; Get patient info.
"RTN","IBJDF51",58,0)
 . ;
"RTN","IBJDF51",59,0)
 . I '$G(IBEXCEL) D EN^IBJDF53 Q:IBRPT="S"  ; Get stats for summary.
"RTN","IBJDF51",60,0)
 . ;
"RTN","IBJDF51",61,0)
 . ; - Get insurance info.
"RTN","IBJDF51",62,0)
 . S (IBI,IBIN)=0
"RTN","IBJDF51",63,0)
 . I $G(^DGCR(399,IBA,"MP")) D  I 'IBI Q
"RTN","IBJDF51",64,0)
 . . S IBI=+$G(^DGCR(399,IBA,"MP")) I 'IBI S IBIN="*** UNKNOWN ***" Q
"RTN","IBJDF51",65,0)
 . . S IBIN=$P($G(^DIC(36,IBI,0)),U)_"@@"_IBI
"RTN","IBJDF51",66,0)
 . ;
"RTN","IBJDF51",67,0)
 . ; - Check the receivable age, if necessary.
"RTN","IBJDF51",68,0)
 . I IBSMN D  Q:IBARD<IBSMN!(IBARD>IBSMX)
"RTN","IBJDF51",69,0)
 . . S IBARD=+$$ACT^IBJDF2(IBA) S:IBARD IBARD=$$FMDIFF^XLFDT(DT,IBARD)
"RTN","IBJDF51",70,0)
 . ;
"RTN","IBJDF51",71,0)
 . ; - Check the minimum balance amount, if necessary.
"RTN","IBJDF51",72,0)
 . S IBBA=0 F X=1:1:5 S IBBA=IBBA+$P($G(^PRCA(430,IBA,7)),U,X)
"RTN","IBJDF51",73,0)
 . I IBSAM,IBBA<IBSAM Q
"RTN","IBJDF51",74,0)
 . ;
"RTN","IBJDF51",75,0)
 . ; - Get remaining AR/claim information.
"RTN","IBJDF51",76,0)
 . S IBDP=$P(IBAR,U,10),X=$$CLMACT^IBJD(IBA,IBCAT) Q:X=""
"RTN","IBJDF51",77,0)
 . S IBBU=$S(+IBAC=1:$G(^IB($P(IBAC,U,2),0)),1:$G(^DGCR(399,IBA,"U")))
"RTN","IBJDF51",78,0)
 . S IBFR=$P(IBBU,U,$S(+IBAC=1:14,1:1))
"RTN","IBJDF51",79,0)
 . S IBTO=$P(IBBU,U,$S(+IBAC=1:15,1:2))
"RTN","IBJDF51",80,0)
 . S DFN=$P(IBPT,U,5),IBSID=$$SID(DFN,IBI)
"RTN","IBJDF51",81,0)
 . S IBOI=$$OTH(DFN,IBI,IBFR),IBVA=$$VA^IBJD1(DFN)
"RTN","IBJDF51",82,0)
 . S IBBN=$P(IBAR,U),IBOR=$P(IBAR,U,3)
"RTN","IBJDF51",83,0)
 . ;
"RTN","IBJDF51",84,0)
 . ; - Set up indexes for detail report.
"RTN","IBJDF51",85,0)
 . I $G(IBEXCEL) D  Q
"RTN","IBJDF51",86,0)
 . . S IBDIV=$P($G(^DG(40.8,$S('IBDIV:+$$PRIM^VASITE(),1:IBDIV),0)),U)
"RTN","IBJDF51",87,0)
 . . ;
"RTN","IBJDF51",88,0)
 . . S IBEXCEL1=$P(IBPT,U,2)_U_IBVA_U_$P(IBPT,U,3)_U_$TR($P(IBPT,U,4),"-")
"RTN","IBJDF51",89,0)
 . . S IBEXCEL1=IBEXCEL1_U_$S(IBIN=0:"",1:$E($P(IBIN,"@@"),1,12))_U_$E(IBOI,1,12)
"RTN","IBJDF51",90,0)
 . . S IBEXCEL1=IBEXCEL1_U_$$DT^IBJD(IBDP,1)_U_$$DT^IBJD(IBFR,1)
"RTN","IBJDF51",91,0)
 . . S IBEXCEL1=IBEXCEL1_U_$$DT^IBJD(IBTO,1)_U_IBSID_U_IBBN_U_IBOR
"RTN","IBJDF51",92,0)
 . . S IBEXCEL1=IBEXCEL1_U_IBBA_U_$P($G(^PRCA(430.2,IBCAT,0)),U,2)
"RTN","IBJDF51",93,0)
 . . S IBEXCEL1=IBEXCEL1_U_$E("IOR",IBTYP)_U
"RTN","IBJDF51",94,0)
 . . I IBSH D COM  ; This will capture the Last Comment Date
"RTN","IBJDF51",95,0)
 . . S IBD=$$FMDIFF^XLFDT(DT,$S('$P(IBEXCEL1,U,16):IBDP,1:$G(DAT)))
"RTN","IBJDF51",96,0)
 . . S IBEXCEL1=IBEXCEL1_U_IBD_U_$E(IBDIV,1,12) W !,IBEXCEL1 K IBD,IBEXCEL1
"RTN","IBJDF51",97,0)
 . ;
"RTN","IBJDF51",98,0)
 . S IBKEY=$P(IBPT,U)_"@@"_$S($G(IBPT):IBDP,1:IBFR_"/"_IBTO)
"RTN","IBJDF51",99,0)
 . F X=IBTYP,4 I IBSEL1[X D
"RTN","IBJDF51",100,0)
 . . I '($D(^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY))#10) D
"RTN","IBJDF51",101,0)
 . . . S ^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY)=$P(IBPT,U,2)_" "_IBVA_U_$P(IBPT,U,3,4)_U_IBOI
"RTN","IBJDF51",102,0)
 . . S ^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY,IBBN)=IBDP_U_IBFR_U_IBTO_U_IBOR_U_IBBA_U_IBSID
"RTN","IBJDF51",103,0)
 . . I IBSH D COM
"RTN","IBJDF51",104,0)
 ;
"RTN","IBJDF51",105,0)
 I 'IBQ,'$G(IBEXCEL) D EN^IBJDF52 ; Print the report.
"RTN","IBJDF51",106,0)
 ;
"RTN","IBJDF51",107,0)
ENQ K ^TMP("IBJDF5",$J)
"RTN","IBJDF51",108,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF51",109,0)
 ;
"RTN","IBJDF51",110,0)
 D ^%ZISC
"RTN","IBJDF51",111,0)
ENQ1 K IB,IBA,IBA1,IBAR,IBARD,IBBU,IBC,IBCAT,IBCAT1,IBDIV,IBD,IBI,IBQ,IBPT
"RTN","IBJDF51",112,0)
 K IBDP,IBKEY,IBVA,IBAC,IBBA,IBBN,IBFR,IBIN,IBOI,IBOR,IBSID,IBTO,IBTYP
"RTN","IBJDF51",113,0)
 K COM,COM1,DAT,DFN,J,X,X1,X2,Y,Z D KVA^VADPT
"RTN","IBJDF51",114,0)
 Q
"RTN","IBJDF51",115,0)
 ;
"RTN","IBJDF51",116,0)
PAT(IBDA) ; - Find the claim patient and decide to include the claim.
"RTN","IBJDF51",117,0)
 ;    Input: IBDA=Pointer to the claim/AR in file #399/#430 plus all
"RTN","IBJDF51",118,0)
 ;             variable input in IBS*
"RTN","IBJDF51",119,0)
 ;   Output: Y=Sort key (name or last 4)_@@_patient IEN to file #2 
"RTN","IBJDF51",120,0)
 ;             ^ Patient name ^ Age ^ SSN ^ Patient IEN to file #2
"RTN","IBJDF51",121,0)
 N AGE,ALL,ARZ,DA,DBTR,DFN,DIC,DIQ,DOB,DR,END,IBZ,INI,KEY,NAME,RCZ,SSN
"RTN","IBJDF51",122,0)
 N VADM,Y,Z
"RTN","IBJDF51",123,0)
 ;
"RTN","IBJDF51",124,0)
 S Y="" G:'$G(IBDA) PATQ
"RTN","IBJDF51",125,0)
 S DFN=0,(NAME,AGE,SSN)="",ARZ=$G(^PRCA(430,IBDA,0))
"RTN","IBJDF51",126,0)
 ;
"RTN","IBJDF51",127,0)
 ; - Look for Patient (Corresponding Claim in IB)
"RTN","IBJDF51",128,0)
 I $D(^DGCR(399,IBDA,0)) D  I 'DFN S Y="" G PATQ
"RTN","IBJDF51",129,0)
 . S IBZ=^DGCR(399,IBDA,0),DFN=+$P(IBZ,"^",2)
"RTN","IBJDF51",130,0)
 . D DEM^VADPT S NAME=VADM(1),SSN=$P(VADM(2),"^",2),AGE=VADM(4)
"RTN","IBJDF51",131,0)
 ;
"RTN","IBJDF51",132,0)
 ; - Look for Debtor (No corresponding Claim in IB)
"RTN","IBJDF51",133,0)
 I '$D(^DGCR(399,IBDA,0)) D  I 'DFN S Y="" G PATQ
"RTN","IBJDF51",134,0)
 . S DBTR=+$P(ARZ,"^",9) I 'DBTR Q
"RTN","IBJDF51",135,0)
 . S RCZ=$G(^RCD(340,DBTR,0)),DFN=+RCZ
"RTN","IBJDF51",136,0)
 . I $P(RCZ,"^")["DPT" D
"RTN","IBJDF51",137,0)
 . . D DEM^VADPT S NAME=VADM(1),SSN=$P(VADM(2),"^",2),AGE=VADM(4)
"RTN","IBJDF51",138,0)
 . I $P(RCZ,"^")'["DPT" D
"RTN","IBJDF51",139,0)
 . . S DIC="^PRCA(430,",DA=IBDA,DR=9,DIQ="DEB" D EN^DIQ1
"RTN","IBJDF51",140,0)
 . . S NAME=$G(DEB(430,DA,9)),KEY=NAME
"RTN","IBJDF51",141,0)
 . . S DIC="^RCD(340,",DA=DBTR,DR=110,DIQ="DEB" D EN^DIQ1
"RTN","IBJDF51",142,0)
 . . S SSN=$G(DEB(340,DA,110))
"RTN","IBJDF51",143,0)
 . . I SSN S SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","IBJDF51",144,0)
 ;
"RTN","IBJDF51",145,0)
 S KEY=$S(IBSN="N":NAME,1:+$P(SSN,"-",3))
"RTN","IBJDF51",146,0)
 S INI=IBSNF,END=IBSNL,ALL=IBSNA
"RTN","IBJDF51",147,0)
 I (INI'="@"&('DFN)) S Y="" G PATQ
"RTN","IBJDF51",148,0)
 I ALL="ALL"&('DFN)!(ALL="NULL"&(DFN)) S Y="" G PATQ
"RTN","IBJDF51",149,0)
 I INI="@",END="zzzzz" G PATC
"RTN","IBJDF51",150,0)
 I INI]KEY!(KEY]END) S Y="" G PATQ
"RTN","IBJDF51",151,0)
 ;
"RTN","IBJDF51",152,0)
PATC ; - Find all patient data.
"RTN","IBJDF51",153,0)
 S Y=KEY_"@@"_DFN_U_$E(NAME,1,25)_U_AGE_U_SSN_"^"_DFN
"RTN","IBJDF51",154,0)
PATQ Q Y
"RTN","IBJDF51",155,0)
 ;
"RTN","IBJDF51",156,0)
DIV(CLM) ;Find the default division of the bill. 
"RTN","IBJDF51",157,0)
 S DIV=$P($G(^DGCR(399,CLM,0)),"^",22)
"RTN","IBJDF51",158,0)
QDIV S:'DIV DIV=$$PRIM^VASITE() S:DIV'>0 DIV=0
"RTN","IBJDF51",159,0)
 Q DIV
"RTN","IBJDF51",160,0)
SID(DFN,INS) ; - Find the subscriber ID for a bill (if any).
"RTN","IBJDF51",161,0)
 ;   Input: DFN=Pointer to the patient in file #2
"RTN","IBJDF51",162,0)
 ;          INS=Pointer to the patient's primary carrier in file #36
"RTN","IBJDF51",163,0)
 ;  Output: Subscriber ID no. or null
"RTN","IBJDF51",164,0)
 N X,Y,Z S Y="" G:'$G(DFN)!('$G(INS)) SIDQ
"RTN","IBJDF51",165,0)
 S Z=0 F  S Z=$O(^DPT(DFN,.312,Z)) Q:'Z  S X=$G(^(Z,0)) D  Q:Y]""
"RTN","IBJDF51",166,0)
 .;IB*2.0*516/TAZ - Use HIPAA compliant Sub ID
"RTN","IBJDF51",167,0)
 .I +X=INS S Y=$E($$GET1^DIQ(2.312,Z_","_DFN_",",7.02),1,16)
"RTN","IBJDF51",168,0)
 ;
"RTN","IBJDF51",169,0)
SIDQ Q Y
"RTN","IBJDF51",170,0)
 ;
"RTN","IBJDF51",171,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF51",172,0)
 N X
"RTN","IBJDF51",173,0)
 S X="Patient^VA Empl.?^Age^SSN^Prim.Ins.Carrier^Other Ins.Carrier^"
"RTN","IBJDF51",174,0)
 S X=X_"Dt Bill prep.^Bill From Dt^Bill To Dt^Subsc.ID^Bill #^"
"RTN","IBJDF51",175,0)
 S X=X_"Orig.Amt^Curr.Bal.^Cat.^Bill Type^Lst Comm.Dt^Days Lst Comm.^"
"RTN","IBJDF51",176,0)
 S X=X_"Division"
"RTN","IBJDF51",177,0)
 W !,X
"RTN","IBJDF51",178,0)
 Q
"RTN","IBJDF51",179,0)
 ;
"RTN","IBJDF51",180,0)
OTH(DFN,INS,DS) ; - Find a patient's other valid insurance carrier (if any).
"RTN","IBJDF51",181,0)
 ;   Input: DFN=Pointer to the patient in file #2
"RTN","IBJDF51",182,0)
 ;          INS=Pointer to the patient's primary carrier in file #36
"RTN","IBJDF51",183,0)
 ;           DS=Date of service for validity check
"RTN","IBJDF51",184,0)
 ;  Output: Valid insurance carrier (first 15 chars.) or null
"RTN","IBJDF51",185,0)
 N X,X1,Y,Z S Y="" G:'$G(DFN)!('$G(INS))!('$G(DS)) OTHQ
"RTN","IBJDF51",186,0)
 S Z=0 F  S Z=$O(^DPT(DFN,.312,Z)) Q:'Z  S X=$G(^(Z,0)) D:X  Q:Y]""
"RTN","IBJDF51",187,0)
 .I +X=INS Q
"RTN","IBJDF51",188,0)
 .S X1=$G(^DIC(36,+X,0)) Q:X1=""
"RTN","IBJDF51",189,0)
 .I $P(X1,U,2)'="N",$$CHK^IBCNS1(X,DS) S Y=$E($P(X1,U),1,15)
"RTN","IBJDF51",190,0)
 ;
"RTN","IBJDF51",191,0)
OTHQ Q Y
"RTN","IBJDF51",192,0)
 ;
"RTN","IBJDF51",193,0)
COM ; - Get bill comments.
"RTN","IBJDF51",194,0)
 S DAT=0,IBA1=$S(IBSH1="M":999999999,1:0)
"RTN","IBJDF51",195,0)
 F  S IBA1=$S(IBSH1="M":$O(^PRCA(433,"C",IBA,IBA1),-1),1:$O(^PRCA(433,"C",IBA,IBA1))) Q:'IBA1  D  I IBSH1="M",DAT Q
"RTN","IBJDF51",196,0)
 .S IBC=$G(^PRCA(433,IBA1,1)) Q:'IBC
"RTN","IBJDF51",197,0)
 .I $G(IBSH2),$$FMDIFF^XLFDT(DT,+IBC)<IBSH2 Q  ; Comment age not minimum.
"RTN","IBJDF51",198,0)
 .I $P(IBC,U,2)'=35,$P(IBC,U,2)'=45 Q  ;   Not decrease/comment transact.
"RTN","IBJDF51",199,0)
 .S DAT=$S(IBC:+IBC\1,1:+$P(IBC,U,9)\1)
"RTN","IBJDF51",200,0)
 .I $G(IBEXCEL),IBSH1="M" S IBEXCEL1=IBEXCEL1_$$DT^IBJD(DAT,1) Q
"RTN","IBJDF51",201,0)
 .;
"RTN","IBJDF51",202,0)
 .; - Append brief and transaction comments.
"RTN","IBJDF51",203,0)
 .K COM,COM1 S COM(0)=DAT,X1=0
"RTN","IBJDF51",204,0)
 .S COM1(1)=$P($G(^PRCA(433,IBA1,5)),U,2)
"RTN","IBJDF51",205,0)
 .S COM1(2)=$E($P($G(^PRCA(433,IBA1,8)),U,6),1,70)
"RTN","IBJDF51",206,0)
 .S COM(1)=COM1(1)_$S(COM1(1)]""&(COM1(2)]""):"|",1:"")_COM1(2)
"RTN","IBJDF51",207,0)
 .I COM(1)]"" S COM(1)="**"_COM(1)_"**",X1=1
"RTN","IBJDF51",208,0)
 .;
"RTN","IBJDF51",209,0)
 .; - Get main comments.
"RTN","IBJDF51",210,0)
 .S X2=0 F  S X2=$O(^PRCA(433,IBA1,7,X2)) Q:'X2  S COM($S(X1:X2+1,1:X2))=^(X2,0)
"RTN","IBJDF51",211,0)
 .;
"RTN","IBJDF51",212,0)
 .S X1="" F  S X1=$O(COM(X1)) Q:X1=""  D
"RTN","IBJDF51",213,0)
 ..S ^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY,IBBN,IBA1,X1)=COM(X1)
"RTN","IBJDF51",214,0)
 ;
"RTN","IBJDF51",215,0)
 Q
"RTN","IBJPS")
0^26^B4384435^B3981041
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461,516**;21-MAR-94;Build 123
"RTN","IBJPS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 I IBSET'="" D
"RTN","IBJPS",39,0)
 . ; MRD;IB*2.0*516 - Added TRICARE Pay-To Providers.
"RTN","IBJPS",40,0)
 . I IBSET=10 D EN^IBJPS3(0) Q
"RTN","IBJPS",41,0)
 . I IBSET=11 D EN^IBJPS3(1) Q
"RTN","IBJPS",42,0)
 . S DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",43,0)
 . Q
"RTN","IBJPS",44,0)
 I IBSET=8,$$ICD9SYS^IBACSV(DT)=30 S $P(DR,";",1)=7.05
"RTN","IBJPS",45,0)
 ;
"RTN","IBJPS",46,0)
 I $G(DR)'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",47,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",48,0)
 Q
"RTN","IBJPS",49,0)
 ;
"RTN","IBJPS",50,0)
1 ;;.09;.13;.14
"RTN","IBJPS",51,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",52,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",53,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",54,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",55,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",56,0)
7 ;;1.33;1.32;1.31;1.27;8.14T;8.15T;8.16T;8.19T
"RTN","IBJPS",57,0)
8 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",58,0)
9 ;;1.01;1.02;1.05
"RTN","IBJPS",59,0)
12 ;;2.08;2.09
"RTN","IBJPS",60,0)
13 ;;11.01
"RTN","IBJPS",61,0)
14 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",62,0)
15 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T;8.17T
"RTN","IBJPS",63,0)
16 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",64,0)
 ;
"RTN","IBJPS2")
0^27^B45274108^B41765087
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461,516**;21-MAR-94;Build 123
"RTN","IBJPS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0,PTPSTR,BPZZ
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 ; IB patch 349 for UB-04 claim form and parameters
"RTN","IBJPS2",27,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("UB-04 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,33),350.9,1.33),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 S IBLN=$$SET("CMS-1500 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,32),350.9,1.32),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",30,0)
 S IBLN=$$SET("CMS-1500 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,14),350.9,8.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",31,0)
 S IBLN=$$SET("EOB Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,16),350.9,8.16),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",32,0)
 ;
"RTN","IBJPS2",33,0)
 D LEFT(2)
"RTN","IBJPS2",34,0)
 S IBLN=$$SET("UB-04 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",35,0)
 S IBLN=$$SET("CMS-1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("UB-04 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,15),350.9,8.15),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 S IBLN=$$SET("MRA Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,19),350.9,8.19),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",38,0)
 ;
"RTN","IBJPS2",39,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",40,0)
 S Z=$$ICD9SYS^IBACSV(DT)
"RTN","IBJPS2",41,0)
 I Z=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29)_" (ICD-9)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",42,0)
 I Z'=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD7,U,5),350.9,7.05)_" (ICD-10)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",43,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",44,0)
 ;
"RTN","IBJPS2",45,0)
 D LEFT(2)
"RTN","IBJPS2",46,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",47,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",48,0)
 ;
"RTN","IBJPS2",49,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",50,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",51,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",52,0)
 ;
"RTN","IBJPS2",53,0)
 D LEFT(2)
"RTN","IBJPS2",54,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",55,0)
 ;
"RTN","IBJPS2",56,0)
 D RIGHT(3,1,1) ; - Pay-To Providers - section 10
"RTN","IBJPS2",57,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,19,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,19,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",58,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,3),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z,0),U),1:"")
"RTN","IBJPS2",59,0)
 S IBLN=$$SET("Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",60,0)
 ;
"RTN","IBJPS2",61,0)
 ; MRD;IB*2.0*516 - Added TRICARE Pay-To Providers.
"RTN","IBJPS2",62,0)
 D RIGHT(3,1,1) ; - TRICARE Pay-To Providers - section 11
"RTN","IBJPS2",63,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,29,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,29,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",64,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,4),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z,1),U),1:"")
"RTN","IBJPS2",65,0)
 S IBLN=$$SET("TRICARE Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",66,0)
 ;
"RTN","IBJPS2",67,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",68,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",69,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",70,0)
 ;
"RTN","IBJPS2",71,0)
 ; ePharmacy parameters
"RTN","IBJPS2",72,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",73,0)
 S IBLN=$$SET("HIPPA NCPDP Active Flag",$S($P(IBPD11,U)=1:"Active",1:"Not Active"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",74,0)
 ;
"RTN","IBJPS2",75,0)
 ; transfer pricing
"RTN","IBJPS2",76,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",77,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",78,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",81,0)
 ;
"RTN","IBJPS2",82,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",83,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",84,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",88,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",89,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",90,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",91,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",92,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",93,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",94,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",95,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 S IBLN=$$SET(" Enable Auto Reg EOB Processing?",$$YN(+$P(IBPD8,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",98,0)
 ;
"RTN","IBJPS2",99,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",100,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",103,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",105,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",106,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",107,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",108,0)
 . Q
"RTN","IBJPS2",109,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",110,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",111,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",112,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",113,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",114,0)
 ;
"RTN","IBJPS2",115,0)
 Q
"RTN","IBJPS2",116,0)
 ;
"RTN","IBJPS2",117,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",118,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",119,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",120,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",121,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",122,0)
 S LN=LN+1
"RTN","IBJPS2",123,0)
 Q LN
"RTN","IBJPS2",124,0)
 ;
"RTN","IBJPS2",125,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",126,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",127,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",128,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",129,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",130,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",131,0)
 Q
"RTN","IBJPS2",132,0)
 ;
"RTN","IBJPS2",133,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",134,0)
 ;
"RTN","IBJPS2",135,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",136,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",137,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",138,0)
 Q
"RTN","IBJPS2",139,0)
 ;
"RTN","IBJPS2",140,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",141,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",142,0)
 Q
"RTN","IBJPS3")
0^28^B111722417^B89166752
"RTN","IBJPS3",1,0)
IBJPS3 ;BP/YMG - IB Site Parameters, Pay-To Provider ;20-Oct-2008
"RTN","IBJPS3",2,0)
 ;;2.0;INTEGRATED BILLING;**400,432,516**;21-MAR-94;Build 123
"RTN","IBJPS3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS3",4,0)
 ;
"RTN","IBJPS3",5,0)
 ; MRD;IB*2.0*516 - Added logic pertaining to TRICARE-Specific Pay-To
"RTN","IBJPS3",6,0)
 ; Providers, which entailed adding the parameter IBTCFLAG to many
"RTN","IBJPS3",7,0)
 ; procedures here and in ^IBJPS4.
"RTN","IBJPS3",8,0)
 ;
"RTN","IBJPS3",9,0)
EN(IBTCFLAG) ; -- main entry point for IBJP IB PAY-TO PROVIDERS
"RTN","IBJPS3",10,0)
 D EN^VALM("IBJP IB "_$S(IBTCFLAG:"TRICARE PAY-TO PROVS",1:"PAY-TO PROVIDERS"))
"RTN","IBJPS3",11,0)
 Q
"RTN","IBJPS3",12,0)
 ;
"RTN","IBJPS3",13,0)
HDR(IBTCFLAG) ; -- header code
"RTN","IBJPS3",14,0)
 ; Not setting VALMHDR causes this tag to be called upon return from every action, 
"RTN","IBJPS3",15,0)
 ; this is done to keep VALMSG displayed at all times, instead of the default message on the lower bar.
"RTN","IBJPS3",16,0)
 S VALMSG="* = Default "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-to provider"
"RTN","IBJPS3",17,0)
 Q
"RTN","IBJPS3",18,0)
 ;
"RTN","IBJPS3",19,0)
INIT(IBTCFLAG) ; -- init variables and list array
"RTN","IBJPS3",20,0)
 N IBCNT,IBLN,IBSTR,PIEN,PDATA,IBNODE
"RTN","IBJPS3",21,0)
 S IBNODE=$$NODE^IBJPS4(IBTCFLAG)
"RTN","IBJPS3",22,0)
 ;
"RTN","IBJPS3",23,0)
 S (VALMCNT,IBCNT,IBLN)=0
"RTN","IBJPS3",24,0)
 S PIEN=0 F  S PIEN=$O(^IBE(350.9,1,IBNODE,PIEN)) Q:'PIEN  D
"RTN","IBJPS3",25,0)
 .I $P($G(^IBE(350.9,1,IBNODE,PIEN,0)),U,5)'="" Q
"RTN","IBJPS3",26,0)
 .S PDATA=$$PTG(PIEN,IBTCFLAG),IBCNT=IBCNT+1
"RTN","IBJPS3",27,0)
 .S IBSTR=$$SETSTR^VALM1(IBCNT_".","",2,4)
"RTN","IBJPS3",28,0)
 .I $$ISDFLT(PIEN,IBTCFLAG) S IBSTR=$$SETSTR^VALM1("*",IBSTR,7,1)
"RTN","IBJPS3",29,0)
 .S IBSTR=$$SETSTR^VALM1("Name     : "_$P(PDATA,U),IBSTR,8,45)
"RTN","IBJPS3",30,0)
 .S IBSTR=$$SETSTR^VALM1("State   : "_$P(PDATA,U,8),IBSTR,54,25)
"RTN","IBJPS3",31,0)
 .S IBLN=$$SET(IBLN,IBSTR)
"RTN","IBJPS3",32,0)
 .S IBSTR=$$SETSTR^VALM1("Address 1: "_$P(PDATA,U,5),"",8,45)
"RTN","IBJPS3",33,0)
 .S IBSTR=$$SETSTR^VALM1("Zip Code: "_$P(PDATA,U,9),IBSTR,54,25)
"RTN","IBJPS3",34,0)
 .S IBLN=$$SET(IBLN,IBSTR)
"RTN","IBJPS3",35,0)
 .S IBSTR=$$SETSTR^VALM1("Address 2: "_$P(PDATA,U,6),"",8,45)
"RTN","IBJPS3",36,0)
 .S IBSTR=$$SETSTR^VALM1("Phone   : "_$P(PDATA,U,4),IBSTR,54,25)
"RTN","IBJPS3",37,0)
 .S IBLN=$$SET(IBLN,IBSTR)
"RTN","IBJPS3",38,0)
 .S IBSTR=$$SETSTR^VALM1("City     : "_$P(PDATA,U,7),"",8,45)
"RTN","IBJPS3",39,0)
 .S IBSTR=$$SETSTR^VALM1("Tax ID  : "_$P(PDATA,U,3),IBSTR,54,25)
"RTN","IBJPS3",40,0)
 .S IBLN=$$SET(IBLN,IBSTR),IBLN=$$SET(IBLN,"")
"RTN","IBJPS3",41,0)
 .S @VALMAR@("ZIDX",IBCNT,PIEN)=""
"RTN","IBJPS3",42,0)
 .Q
"RTN","IBJPS3",43,0)
 ;
"RTN","IBJPS3",44,0)
 I 'IBLN S IBLN=$$SET(IBLN,$$SETSTR^VALM1("No "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-To Providers defined.","",13,40))
"RTN","IBJPS3",45,0)
 ;
"RTN","IBJPS3",46,0)
 S VALMCNT=IBLN,VALMBG=1
"RTN","IBJPS3",47,0)
 Q
"RTN","IBJPS3",48,0)
 ;
"RTN","IBJPS3",49,0)
HELP ; -- help code
"RTN","IBJPS3",50,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS3",51,0)
 Q
"RTN","IBJPS3",52,0)
 ;
"RTN","IBJPS3",53,0)
EXIT ; -- exit code
"RTN","IBJPS3",54,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBJPS3",55,0)
 Q
"RTN","IBJPS3",56,0)
 ;
"RTN","IBJPS3",57,0)
PRVADD(IBTCFLAG) ; add new pay-to provider
"RTN","IBJPS3",58,0)
 N X,Y,DIC,DA,DLAYGO,DIE,DR,DIR,DIRUT,DUOUT,DTOUT,IEN,IBNODE
"RTN","IBJPS3",59,0)
 S IBNODE=$$NODE^IBJPS4(IBTCFLAG)
"RTN","IBJPS3",60,0)
 D FULL^VALM1
"RTN","IBJPS3",61,0)
 S VALMBCK="R"
"RTN","IBJPS3",62,0)
 S DIC="^IBE(350.9,1,"_IBNODE_",",DIC(0)="AELMQ",DA(1)=1,DLAYGO=350.9
"RTN","IBJPS3",63,0)
 S DIC("A")="Enter "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-to Provider: "
"RTN","IBJPS3",64,0)
 D ^DIC S IEN=+Y
"RTN","IBJPS3",65,0)
 I IEN'>0 Q
"RTN","IBJPS3",66,0)
 D PRVEDIT1
"RTN","IBJPS3",67,0)
 I $P($G(^IBE(350.9,1,IBNODE,IEN,0)),U,2)="" D PRVDEL1
"RTN","IBJPS3",68,0)
 Q
"RTN","IBJPS3",69,0)
 ;
"RTN","IBJPS3",70,0)
PRVDEL(IBTCFLAG) ; delete a pay-to provider
"RTN","IBJPS3",71,0)
 N DA,DR,DIE,X,Y,DIR,DIRUT,DUOUT,DTOUT,I,IEN,DIVS,DFLT,IBNODE,IBDISP
"RTN","IBJPS3",72,0)
 S IBNODE=$$NODE^IBJPS4(IBTCFLAG)
"RTN","IBJPS3",73,0)
 S IBDISP=$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-To Provider"
"RTN","IBJPS3",74,0)
 S VALMBCK="R"
"RTN","IBJPS3",75,0)
 D FULL^VALM1
"RTN","IBJPS3",76,0)
 S IEN=$$SEL(IBTCFLAG) Q:'IEN
"RTN","IBJPS3",77,0)
 S DFLT=$$ISDFLT(IEN,IBTCFLAG)
"RTN","IBJPS3",78,0)
 I DFLT W !!,"WARNING: This is the default "_IBDISP_"."
"RTN","IBJPS3",79,0)
 D GETDIVS^IBJPS4(IEN,.DIVS,IBTCFLAG)
"RTN","IBJPS3",80,0)
 I 'DFLT D
"RTN","IBJPS3",81,0)
 .W !!,"The following divisions are currently associated with this "_IBDISP_": "
"RTN","IBJPS3",82,0)
 .S I="" F  S I=$O(DIVS(I)) Q:I=""  W !,?5,DIVS(I)
"RTN","IBJPS3",83,0)
 .W:'$D(DIVS) "None",! W !
"RTN","IBJPS3",84,0)
 .Q
"RTN","IBJPS3",85,0)
 S DIR("?")="Enter Yes to delete this "_IBDISP_"."
"RTN","IBJPS3",86,0)
 S DIR("A")="Delete "_IBDISP_" "_$P($G(^IBE(350.9,1,IBNODE,IEN,0)),U,2)
"RTN","IBJPS3",87,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR Q:'Y
"RTN","IBJPS3",88,0)
 I DFLT S DIE="^IBE(350.9,",DA=1,DR=$S(IBTCFLAG:"11.04",1:"11.03")_"////@" D ^DIE
"RTN","IBJPS3",89,0)
 I $D(DIVS) K DIK S DIK="^IBE(350.9,1,"_IBNODE_",",DA(1)=1,I="" F  S I=$O(DIVS(I)) Q:I=""  S DA=I D ^DIK
"RTN","IBJPS3",90,0)
 K DIK
"RTN","IBJPS3",91,0)
PRVDEL1 ;
"RTN","IBJPS3",92,0)
 N DIK
"RTN","IBJPS3",93,0)
 K DA
"RTN","IBJPS3",94,0)
 S DIK="^IBE(350.9,1,"_IBNODE_","
"RTN","IBJPS3",95,0)
 S DA(1)=1,DA=IEN
"RTN","IBJPS3",96,0)
 D ^DIK
"RTN","IBJPS3",97,0)
 D CLEAN^VALM10,INIT(IBTCFLAG)
"RTN","IBJPS3",98,0)
 Q
"RTN","IBJPS3",99,0)
 ;
"RTN","IBJPS3",100,0)
PRVEDIT(IBTCFLAG) ; edit existing pay-to provider
"RTN","IBJPS3",101,0)
 N IEN,IBNODE
"RTN","IBJPS3",102,0)
 S IBNODE=$$NODE^IBJPS4(IBTCFLAG)
"RTN","IBJPS3",103,0)
 S VALMBCK="R"
"RTN","IBJPS3",104,0)
 D FULL^VALM1
"RTN","IBJPS3",105,0)
 S IEN=$$SEL(IBTCFLAG) Q:'IEN
"RTN","IBJPS3",106,0)
PRVEDIT1 ;
"RTN","IBJPS3",107,0)
 N DIE,DA,DR,DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBJPS3",108,0)
 S DIE="^IBE(350.9,1,"_IBNODE_","
"RTN","IBJPS3",109,0)
 S DA=IEN,DA(1)=1
"RTN","IBJPS3",110,0)
 S DR=".02T;1.01T;1.02T;1.03T;1.04T;1.05T;.04T;.03T;.05///@"
"RTN","IBJPS3",111,0)
 D ^DIE
"RTN","IBJPS3",112,0)
 S DIR("?")="Enter Yes to make this entry the default "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-to Provider."
"RTN","IBJPS3",113,0)
 S DIR("A")="Is this the default "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-To Provider"
"RTN","IBJPS3",114,0)
 S DIR(0)="YO"
"RTN","IBJPS3",115,0)
 S DIR("B")="YES" I $$GETDFLT(IBTCFLAG),'$$ISDFLT(IEN,IBTCFLAG) S DIR("B")="NO"
"RTN","IBJPS3",116,0)
 D ^DIR I Y K DA S DIE="^IBE(350.9,",DA=1,DR=$S(IBTCFLAG:"11.04",1:"11.03")_"////"_IEN D ^DIE
"RTN","IBJPS3",117,0)
 D CLEAN^VALM10,INIT(IBTCFLAG)
"RTN","IBJPS3",118,0)
 Q
"RTN","IBJPS3",119,0)
 ;
"RTN","IBJPS3",120,0)
SET(IBLN,IBSTR) ; add a line to display list
"RTN","IBJPS3",121,0)
 ; returns line number added
"RTN","IBJPS3",122,0)
 S IBLN=IBLN+1 D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS3",123,0)
 Q IBLN
"RTN","IBJPS3",124,0)
 ;
"RTN","IBJPS3",125,0)
ISDFLT(PIEN,IBTCFLAG) ; returns 1 if provider with ien PIEN is the default pay-to provider, 0 otherwise
"RTN","IBJPS3",126,0)
 Q:PIEN="" 0
"RTN","IBJPS3",127,0)
 Q $$GETDFLT(IBTCFLAG)=PIEN
"RTN","IBJPS3",128,0)
 ;
"RTN","IBJPS3",129,0)
GETDFLT(IBTCFLAG) ; returns ien of default pay-to provider
"RTN","IBJPS3",130,0)
 Q $P($G(^IBE(350.9,1,11)),U,$S(IBTCFLAG:4,1:3))
"RTN","IBJPS3",131,0)
 ;
"RTN","IBJPS3",132,0)
SEL(IBTCFLAG) ; select pay-to provider
"RTN","IBJPS3",133,0)
 ; returns ien of selected pay-to provider, or 0 if nothing is selected
"RTN","IBJPS3",134,0)
 N DIR,IEN,MAX,X,Y
"RTN","IBJPS3",135,0)
 S IEN=0
"RTN","IBJPS3",136,0)
 I VALMLST>4 D
"RTN","IBJPS3",137,0)
 . ; there is at least one entry
"RTN","IBJPS3",138,0)
 . S MAX=$O(@VALMAR@("ZIDX",""),-1) S:MAX=1 Y=1
"RTN","IBJPS3",139,0)
 . I MAX>1 D
"RTN","IBJPS3",140,0)
 . . S DIR("A")="Select "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-To Provider (1-"_MAX_"): "
"RTN","IBJPS3",141,0)
 . . S DIR(0)="NA^"_1_":"_MAX_":0"
"RTN","IBJPS3",142,0)
 . . D ^DIR
"RTN","IBJPS3",143,0)
 . . Q
"RTN","IBJPS3",144,0)
 . S:+Y>0 IEN=$O(@VALMAR@("ZIDX",Y,""))
"RTN","IBJPS3",145,0)
 . Q
"RTN","IBJPS3",146,0)
 Q +IEN
"RTN","IBJPS3",147,0)
 ;
"RTN","IBJPS3",148,0)
PRVDATA(IBIFN) ; Return a string of Pay-To provider information in the following format
"RTN","IBJPS3",149,0)
 ;  [1] name
"RTN","IBJPS3",150,0)
 ;  [2] npi
"RTN","IBJPS3",151,0)
 ;  [3] tax id#
"RTN","IBJPS3",152,0)
 ;  [4] phone#
"RTN","IBJPS3",153,0)
 ;  [5] street 1
"RTN","IBJPS3",154,0)
 ;  [6] street 2
"RTN","IBJPS3",155,0)
 ;  [7] city
"RTN","IBJPS3",156,0)
 ;  [8] state abbreviation
"RTN","IBJPS3",157,0)
 ;  [9] zip
"RTN","IBJPS3",158,0)
 ; [10] list of IB error messages if any of this data is missing in IBXX1;IBXX2;IBXX3;IBXX4; format
"RTN","IBJPS3",159,0)
 ; [11] Institution (File 4) ien
"RTN","IBJPS3",160,0)
 ;
"RTN","IBJPS3",161,0)
 ; **NOTE:  pieces 12,13,14 are added to this string in output formatter data element #1624 for PRV1-1.5 for PRV1
"RTN","IBJPS3",162,0)
 ; pieces 2,3,5.  If pieces are added here to this string, then adjust the code in PRV1-1.5,2,3,5 accordingly.
"RTN","IBJPS3",163,0)
 ;
"RTN","IBJPS3",164,0)
 N DATA,IB0,EVDT,IBDIV,INST,PIEN,IBER,IBTCFLAG
"RTN","IBJPS3",165,0)
 S DATA="",IBER=""
"RTN","IBJPS3",166,0)
 ;
"RTN","IBJPS3",167,0)
 S IBTCFLAG=$$TRICARE^IBJPS4(IBIFN) ; Set IBTCFLAG to '1' if TRICARE claim, otherwise '0'.
"RTN","IBJPS3",168,0)
 ;
"RTN","IBJPS3",169,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBJPS3",170,0)
 S EVDT=$P(IB0,U,3)                             ; event date on claim
"RTN","IBJPS3",171,0)
 I 'EVDT S EVDT=DT
"RTN","IBJPS3",172,0)
 S IBDIV=+$P(IB0,U,22)                          ; division on claim
"RTN","IBJPS3",173,0)
 I 'IBDIV S IBDIV=$$PRIM^VASITE(EVDT)
"RTN","IBJPS3",174,0)
 I IBDIV'>0 S IBDIV=$$PRIM^VASITE()
"RTN","IBJPS3",175,0)
 I IBDIV'>0 G PRVDATX                           ; get out if no division
"RTN","IBJPS3",176,0)
 S INST=+$$SITE^VASITE(EVDT,IBDIV)              ; inst file 4 pointer
"RTN","IBJPS3",177,0)
 I INST'>0 S INST=+$$SITE^VASITE(DT,IBDIV)
"RTN","IBJPS3",178,0)
 I INST'>0 S INST=+$$SITE^VASITE()
"RTN","IBJPS3",179,0)
 I INST'>0 G PRVDATX                            ; get out if no institution
"RTN","IBJPS3",180,0)
 ;
"RTN","IBJPS3",181,0)
 ; check to see if this institution exists as a separate Pay-To Provider subfile entry
"RTN","IBJPS3",182,0)
 S PIEN=+$O(^IBE(350.9,1,$S(IBTCFLAG:29,1:19),"B",INST,""))
"RTN","IBJPS3",183,0)
 ;
"RTN","IBJPS3",184,0)
 I 'PIEN D  G PRVDATX      ; this institution does not exist in 350.9004/350.929.
"RTN","IBJPS3",185,0)
 . ; check to see if the default Pay-To provider information is defined (350.9;11.03/11.04)
"RTN","IBJPS3",186,0)
 . S PIEN=+$P($G(^IBE(350.9,1,11)),U,$S(IBTCFLAG:4,1:3)) Q:'PIEN
"RTN","IBJPS3",187,0)
 . S DATA=$$PTG(PIEN,IBTCFLAG)
"RTN","IBJPS3",188,0)
 . Q
"RTN","IBJPS3",189,0)
 ;
"RTN","IBJPS3",190,0)
 ; here PIEN exists and the institution pointer was found in the 350.9004 subfile
"RTN","IBJPS3",191,0)
 ; find parent pay-to provider
"RTN","IBJPS3",192,0)
 S PIEN=$$GETPROV^IBJPS4(PIEN,IBTCFLAG) S:PIEN DATA=$$PTG(PIEN,IBTCFLAG)
"RTN","IBJPS3",193,0)
 ;
"RTN","IBJPS3",194,0)
PRVDATX ;
"RTN","IBJPS3",195,0)
 I DATA="" S IBER=IBER_"IB177;",$P(DATA,U,10)=IBER
"RTN","IBJPS3",196,0)
 Q DATA
"RTN","IBJPS3",197,0)
 ;
"RTN","IBJPS3",198,0)
PTG(PIEN,IBTCFLAG) ; gather pay-to provider info
"RTN","IBJPS3",199,0)
 N N0,N1,IBORG,NPI,STIEN,STATE,Z,IBER,IBNODE
"RTN","IBJPS3",200,0)
 ;
"RTN","IBJPS3",201,0)
 S IBNODE=$$NODE^IBJPS4(+$G(IBTCFLAG))
"RTN","IBJPS3",202,0)
 ;
"RTN","IBJPS3",203,0)
 S Z="",IBER="",PIEN=+$G(PIEN)
"RTN","IBJPS3",204,0)
 ;
"RTN","IBJPS3",205,0)
 I '$D(^IBE(350.9,1,IBNODE,PIEN)) S IBER=IBER_"IB177;",$P(Z,U,10)=IBER G PTGX
"RTN","IBJPS3",206,0)
 S N0=$G(^IBE(350.9,1,IBNODE,PIEN,0))
"RTN","IBJPS3",207,0)
 S N1=$G(^IBE(350.9,1,IBNODE,PIEN,1))
"RTN","IBJPS3",208,0)
 ;
"RTN","IBJPS3",209,0)
 ; get the NPI# from the Institution file
"RTN","IBJPS3",210,0)
 S IBORG=+$P(N0,U,1),NPI=""
"RTN","IBJPS3",211,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)
"RTN","IBJPS3",212,0)
 ;
"RTN","IBJPS3",213,0)
 ; get the state abbreviation
"RTN","IBJPS3",214,0)
 S STIEN=+$P(N1,U,4),STATE=""
"RTN","IBJPS3",215,0)
 I STIEN S STATE=$$GET1^DIQ(5,STIEN_",",1)
"RTN","IBJPS3",216,0)
 ;
"RTN","IBJPS3",217,0)
 ; check for missing data
"RTN","IBJPS3",218,0)
 I '$L($P(N0,U,2)) S IBER=IBER_"IB178;"     ; missing name
"RTN","IBJPS3",219,0)
 I NPI'>0 S IBER=IBER_"IB179;"              ; missing npi
"RTN","IBJPS3",220,0)
 ; Patch 432 enh5:  The IB system shall no longer prevent users from authorizing (fatal error message) a claim because the system can not find the human providers SSN or EIN
"RTN","IBJPS3",221,0)
 ;I '$L($P(N0,U,3)) S IBER=IBER_"IB180;"     ; missing tax ID
"RTN","IBJPS3",222,0)
 I '$L($P(N1,U,1))!'$L($P(N1,U,3))!'$L(STATE)!'$L($P(N1,U,5)) S IBER=IBER_"IB181;"     ; missing address part(s)
"RTN","IBJPS3",223,0)
 ;
"RTN","IBJPS3",224,0)
 S Z=$P(N0,U,2)_U_NPI_U_$P(N0,U,3)_U_$P(N0,U,4)_U_$P(N1,U,1)_U_$P(N1,U,2)_U_$P(N1,U,3)_U_STATE_U_$P(N1,U,5)_U_IBER_U_IBORG
"RTN","IBJPS3",225,0)
PTGX ;
"RTN","IBJPS3",226,0)
 Q Z
"RTN","IBJPS3",227,0)
 ;
"RTN","IBJPS3",228,0)
PRVPHONE(IBIFN) ; Return Pay-to provider phone# for a given claim
"RTN","IBJPS3",229,0)
 ; IBIFN - internal claim# (optional parameter)
"RTN","IBJPS3",230,0)
 ; If IBIFN is not passed in, then the phone# from the default pay-to provider entry will be returned.
"RTN","IBJPS3",231,0)
 ; For example, AR option 'EDI Lockbox 3rd Party Exceptions' needs the phone# for the process of transfering an
"RTN","IBJPS3",232,0)
 ; EEOB to another site, but the claim# is not available to this process.
"RTN","IBJPS3",233,0)
 N PTPP,PIEN
"RTN","IBJPS3",234,0)
 S PTPP=""
"RTN","IBJPS3",235,0)
 I +$G(IBIFN) S PTPP=$P($$PRVDATA(IBIFN),U,4) G PRVPHNX
"RTN","IBJPS3",236,0)
 ;
"RTN","IBJPS3",237,0)
 S PIEN=+$P($G(^IBE(350.9,1,11)),U,3) I 'PIEN G PRVPHNX   ; no claim#, default pay-to provider
"RTN","IBJPS3",238,0)
 S PTPP=$P($$PTG(PIEN),U,4)                               ; phone#
"RTN","IBJPS3",239,0)
 ;
"RTN","IBJPS3",240,0)
PRVPHNX ;
"RTN","IBJPS3",241,0)
 Q PTPP
"RTN","IBJPS3",242,0)
 ;
"RTN","IBJPS3",243,0)
DEF(INST,DA,IBTCFLAG) ; This procedure is called by new style x-ref in
"RTN","IBJPS3",244,0)
 ; order to default name and address fields.
"RTN","IBJPS3",245,0)
 ; INST - IEN to file #4, Institution.  This is the value in the .01
"RTN","IBJPS3",246,0)
 ;      field of the Pay-to or TRICARE Pay-to Providers sub-fil.
"RTN","IBJPS3",247,0)
 ; DA - DA array as passed in from FileMan.  DA(1) should equal 1 since
"RTN","IBJPS3",248,0)
 ;      this is the IB site params and there is only 1 entry.  DA should
"RTN","IBJPS3",249,0)
 ;      equal the IEN to the pay-to provider multiple entry
"RTN","IBJPS3",250,0)
 ; This procedure is called only if a new institution is being added to
"RTN","IBJPS3",251,0)
 ; the sub-file or an entry in the sub-file is being changed from one
"RTN","IBJPS3",252,0)
 ; institution to another.
"RTN","IBJPS3",253,0)
 ;
"RTN","IBJPS3",254,0)
 NEW NAD,IENS,ST,STIEN,IBTAXID,IBFILE
"RTN","IBJPS3",255,0)
 ;
"RTN","IBJPS3",256,0)
 I '$G(INST) G DEFX
"RTN","IBJPS3",257,0)
 ;
"RTN","IBJPS3",258,0)
 I IBTCFLAG S IBFILE=350.929
"RTN","IBJPS3",259,0)
 E  S IBFILE=350.9004
"RTN","IBJPS3",260,0)
 ;
"RTN","IBJPS3",261,0)
 S ST=$$WHAT^XUAF4(INST,.02)             ; full state name
"RTN","IBJPS3",262,0)
 S STIEN=$$FIND1^DIC(5,,"BX",ST,"B")     ; state ien
"RTN","IBJPS3",263,0)
 ;
"RTN","IBJPS3",264,0)
 ; if the selected pay-to provider institution is the same as the main
"RTN","IBJPS3",265,0)
 ; facility name field from the IB site parameters, then also default
"RTN","IBJPS3",266,0)
 ; the federal tax ID# from the IB site parameters into the pay-to
"RTN","IBJPS3",267,0)
 ; provider tax ID# field.
"RTN","IBJPS3",268,0)
 S IBTAXID=""
"RTN","IBJPS3",269,0)
 I INST=$P($G(^IBE(350.9,1,0)),U,2) S IBTAXID=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBJPS3",270,0)
 ;
"RTN","IBJPS3",271,0)
 S IENS=DA_",1,"
"RTN","IBJPS3",272,0)
 S NAD(IBFILE,IENS,.02)=$$WHAT^XUAF4(INST,100)     ; official VA name
"RTN","IBJPS3",273,0)
 S NAD(IBFILE,IENS,.03)=IBTAXID                    ; tax#
"RTN","IBJPS3",274,0)
 S NAD(IBFILE,IENS,.04)=""                         ; phone# - blank it out
"RTN","IBJPS3",275,0)
 S NAD(IBFILE,IENS,.05)=""                         ; parent - blank it out
"RTN","IBJPS3",276,0)
 S NAD(IBFILE,IENS,1.01)=$$WHAT^XUAF4(INST,1.01)   ; address line 1
"RTN","IBJPS3",277,0)
 S NAD(IBFILE,IENS,1.02)=$$WHAT^XUAF4(INST,1.02)   ; address line 2
"RTN","IBJPS3",278,0)
 S NAD(IBFILE,IENS,1.03)=$$WHAT^XUAF4(INST,1.03)   ; city
"RTN","IBJPS3",279,0)
 I STIEN S NAD(IBFILE,IENS,1.04)=STIEN             ; state
"RTN","IBJPS3",280,0)
 S NAD(IBFILE,IENS,1.05)=$$WHAT^XUAF4(INST,1.04)   ; zip
"RTN","IBJPS3",281,0)
 D FILE^DIE(,"NAD")
"RTN","IBJPS3",282,0)
DEFX ;
"RTN","IBJPS3",283,0)
 Q
"RTN","IBJPS3",284,0)
 ;
"RTN","IBJPS3",285,0)
DIFF(IBIFN,EDI) ; This function will determine if there are any differences between
"RTN","IBJPS3",286,0)
 ; the Billing Provider name and address and the Pay-to Provider name and address.
"RTN","IBJPS3",287,0)
 ; When these two are the same, then the Pay-to Provider information is
"RTN","IBJPS3",288,0)
 ; suppressed and is not printed or transmitted.
"RTN","IBJPS3",289,0)
 ; This function returns a 1 if differences are found, and 0 if they are the same.
"RTN","IBJPS3",290,0)
 ;
"RTN","IBJPS3",291,0)
 ; EDI=1 if this is being called for the electronic claim transmission
"RTN","IBJPS3",292,0)
 ; EDI=0 if this is being called for the printed UB-04 claim form
"RTN","IBJPS3",293,0)
 ;
"RTN","IBJPS3",294,0)
 N BPZ,PTP,DIFF,BPNAME,BPAD1,BPAD2,BPCITY,BPST,BPZIP,IBZ
"RTN","IBJPS3",295,0)
 S DIFF=0,EDI=+$G(EDI)
"RTN","IBJPS3",296,0)
 S BPZ=+$$B^IBCEF79(IBIFN)            ; billing provider ien to file 4
"RTN","IBJPS3",297,0)
 S PTP=$$UP^XLFSTR($$PRVDATA(IBIFN))  ; pay-to provider information
"RTN","IBJPS3",298,0)
 ;
"RTN","IBJPS3",299,0)
 ; for EDI claims, use the GETBP utility to get the billing provider data
"RTN","IBJPS3",300,0)
 I EDI D
"RTN","IBJPS3",301,0)
 . D GETBP^IBCEF79(IBIFN,"",BPZ,"DIFF",.IBZ)
"RTN","IBJPS3",302,0)
 . S BPNAME=$$UP^XLFSTR($G(IBZ("DIFF","NAME")))
"RTN","IBJPS3",303,0)
 . S BPAD1=$$UP^XLFSTR($G(IBZ("DIFF","ADDR1")))
"RTN","IBJPS3",304,0)
 . S BPAD2=$$UP^XLFSTR($G(IBZ("DIFF","ADDR2")))
"RTN","IBJPS3",305,0)
 . S BPCITY=$$UP^XLFSTR($G(IBZ("DIFF","CITY")))
"RTN","IBJPS3",306,0)
 . S BPST=$$UP^XLFSTR($G(IBZ("DIFF","ST")))
"RTN","IBJPS3",307,0)
 . S BPZIP=$$NOPUNCT^IBCEF($$UP^XLFSTR($G(IBZ("DIFF","ZIP"))))
"RTN","IBJPS3",308,0)
 . Q
"RTN","IBJPS3",309,0)
 ;
"RTN","IBJPS3",310,0)
 ; for printed UB claims, use the Institution file for FL-1 data
"RTN","IBJPS3",311,0)
 I 'EDI D
"RTN","IBJPS3",312,0)
 . S BPNAME=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,0))
"RTN","IBJPS3",313,0)
 . S BPAD1=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,1))
"RTN","IBJPS3",314,0)
 . S BPAD2=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,2))
"RTN","IBJPS3",315,0)
 . S BPCITY=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,"3C"))
"RTN","IBJPS3",316,0)
 . S BPST=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,"3S"))
"RTN","IBJPS3",317,0)
 . S BPZIP=$$NOPUNCT^IBCEF($$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,"3Z")))
"RTN","IBJPS3",318,0)
 . Q
"RTN","IBJPS3",319,0)
 ;
"RTN","IBJPS3",320,0)
 I BPNAME'=$P(PTP,U,1) S DIFF=1 G DIFFX
"RTN","IBJPS3",321,0)
 I BPAD1'=$P(PTP,U,5) S DIFF=1 G DIFFX
"RTN","IBJPS3",322,0)
 I BPAD2'=$P(PTP,U,6) S DIFF=1 G DIFFX
"RTN","IBJPS3",323,0)
 I BPCITY'=$P(PTP,U,7) S DIFF=1 G DIFFX
"RTN","IBJPS3",324,0)
 I BPST'=$P(PTP,U,8) S DIFF=1 G DIFFX
"RTN","IBJPS3",325,0)
 I BPZIP'=$$NOPUNCT^IBCEF($P(PTP,U,9)) S DIFF=1 G DIFFX
"RTN","IBJPS3",326,0)
DIFFX ;
"RTN","IBJPS3",327,0)
 Q DIFF
"RTN","IBJPS3",328,0)
 ;
"RTN","IBJPS3",329,0)
MAINPRV(IBTCFLAG) ; Return Pay-To provider information for main VAMC
"RTN","IBJPS3",330,0)
 N DATA,IBER,IEN4,PIEN,IBNODE
"RTN","IBJPS3",331,0)
 S IBNODE=$$NODE^IBJPS4(IBTCFLAG)
"RTN","IBJPS3",332,0)
 S (DATA,IBER)="",IEN4=+$$SITE^VASITE I 'IEN4 G MAINPRVX
"RTN","IBJPS3",333,0)
 S PIEN=$O(^IBE(350.9,1,IBNODE,"B",IEN4,"")) I 'PIEN G MAINPRVX
"RTN","IBJPS3",334,0)
 I $P($G(^IBE(350.9,1,IBNODE,PIEN,0)),U,5)'="" G MAINPRVX   ; if this sub-entry is not a pay-to provider, then get out
"RTN","IBJPS3",335,0)
 S DATA=$$PTG(PIEN,IBTCFLAG)
"RTN","IBJPS3",336,0)
MAINPRVX ;
"RTN","IBJPS3",337,0)
 I DATA="" S IBER=IBER_"IB177;",$P(DATA,U,10)=IBER
"RTN","IBJPS3",338,0)
 Q DATA
"RTN","IBJPS3",339,0)
 ;
"RTN","IBJPS4")
0^29^B36439628^B28407182
"RTN","IBJPS4",1,0)
IBJPS4 ;BP/YMG - IB Site Parameters, Pay-To Provider Associations ;06-Nov-2008
"RTN","IBJPS4",2,0)
 ;;2.0;INTEGRATED BILLING;**400,516**;21-MAR-94;Build 123
"RTN","IBJPS4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS4",4,0)
 ;
"RTN","IBJPS4",5,0)
 ; MRD;IB*2.0*516 - Added logic pertaining to TRICARE-Specific Pay-To
"RTN","IBJPS4",6,0)
 ; Providers, which entailed adding the parameter IBTCFLAG to many
"RTN","IBJPS4",7,0)
 ; procedures here and in ^IBJPS3.
"RTN","IBJPS4",8,0)
 ;
"RTN","IBJPS4",9,0)
EN(IBTCFLAG) ; -- main entry point for IBJP IB PAY-TO ASSOCIATIONS
"RTN","IBJPS4",10,0)
 ; select pay-to provider
"RTN","IBJPS4",11,0)
 D EN^VALM("IBJP IB "_$S(IBTCFLAG:"TRICARE PAY-TO ASSOCS",1:"PAY-TO ASSOCIATIONS"))
"RTN","IBJPS4",12,0)
 S VALMBCK="R"
"RTN","IBJPS4",13,0)
 Q
"RTN","IBJPS4",14,0)
 ;
"RTN","IBJPS4",15,0)
HDR ; -- header code
"RTN","IBJPS4",16,0)
 S VALMHDR(1)=""
"RTN","IBJPS4",17,0)
 Q
"RTN","IBJPS4",18,0)
 ;
"RTN","IBJPS4",19,0)
INIT(IBTCFLAG) ; -- init variables and list array
"RTN","IBJPS4",20,0)
 N DFLT,HASDIVS,IBCNT,IBLN,IBSTR,IEN4,PIEN,PROVS
"RTN","IBJPS4",21,0)
 S DFLT=$$GETDFLT^IBJPS3(IBTCFLAG) D BLD(DFLT,.PROVS,IBTCFLAG)
"RTN","IBJPS4",22,0)
 I $D(PROVS) D
"RTN","IBJPS4",23,0)
 .; create listman array
"RTN","IBJPS4",24,0)
 .S (IBCNT,IBLN)=0 S PIEN="" F  S PIEN=$O(PROVS(PIEN)) Q:PIEN=""  D
"RTN","IBJPS4",25,0)
 ..S IBLN=IBLN+1
"RTN","IBJPS4",26,0)
 ..S IBSTR=$$SETSTR^VALM1(PROVS(PIEN)_$S($$ISDFLT^IBJPS3(PIEN,IBTCFLAG):"  (Default)",1:""),"",2,75)
"RTN","IBJPS4",27,0)
 ..D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS4",28,0)
 ..S HASDIVS=0,IEN4="" F  S IEN4=$O(PROVS(PIEN,IEN4)) Q:IEN4=""  D
"RTN","IBJPS4",29,0)
 ...S IBLN=IBLN+1,IBCNT=IBCNT+1 S:'HASDIVS HASDIVS=1
"RTN","IBJPS4",30,0)
 ...S IBSTR=$$SETSTR^VALM1(IBCNT,"",8,4)
"RTN","IBJPS4",31,0)
 ...S IBSTR=$$SETSTR^VALM1($P(PROVS(PIEN,IEN4),U,2),IBSTR,14,8)
"RTN","IBJPS4",32,0)
 ...S IBSTR=$$SETSTR^VALM1($P(PROVS(PIEN,IEN4),U),IBSTR,24,55)
"RTN","IBJPS4",33,0)
 ...D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS4",34,0)
 ...S @VALMAR@("ZIDX",IBCNT,IEN4)=""
"RTN","IBJPS4",35,0)
 ...Q
"RTN","IBJPS4",36,0)
 ..I 'HASDIVS S IBSTR=$$SETSTR^VALM1("No Divisions found.","",8,45) S IBLN=IBLN+1 D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS4",37,0)
 ..S IBLN=IBLN+1 D SET^VALM10(IBLN,"")
"RTN","IBJPS4",38,0)
 ..Q
"RTN","IBJPS4",39,0)
 .Q
"RTN","IBJPS4",40,0)
 I 'DFLT S IBLN=$$SET^IBJPS3(0,$$SETSTR^VALM1("No Default "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-To Provider found.","",11,42))
"RTN","IBJPS4",41,0)
 I DFLT,'$D(PROVS) S IBLN=$$SET^IBJPS3(0,$$SETSTR^VALM1("No "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-To Providers found.","",15,35))
"RTN","IBJPS4",42,0)
 S VALMCNT=IBLN,VALMBG=1
"RTN","IBJPS4",43,0)
 Q
"RTN","IBJPS4",44,0)
 ;
"RTN","IBJPS4",45,0)
HELP ; -- help code
"RTN","IBJPS4",46,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS4",47,0)
 Q
"RTN","IBJPS4",48,0)
 ;
"RTN","IBJPS4",49,0)
EXIT ; -- exit code
"RTN","IBJPS4",50,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBJPS4",51,0)
 Q
"RTN","IBJPS4",52,0)
 ;
"RTN","IBJPS4",53,0)
BLD(DFLT,PROVS,IBTCFLAG) ; build array of pay-to providers and divisions
"RTN","IBJPS4",54,0)
 N ALLDIVS,DIEN,DIVDATA,I,IB0,IEN4,PIEN,IBNODE
"RTN","IBJPS4",55,0)
 I DFLT'>0 Q
"RTN","IBJPS4",56,0)
 S IBNODE=$$NODE(IBTCFLAG)
"RTN","IBJPS4",57,0)
 ;
"RTN","IBJPS4",58,0)
 ; create list of all pay-to providers
"RTN","IBJPS4",59,0)
 S I=0 F  S I=$O(^IBE(350.9,1,IBNODE,I)) Q:'I  D
"RTN","IBJPS4",60,0)
 .S IB0=$G(^IBE(350.9,1,IBNODE,I,0)) I 'IB0 Q
"RTN","IBJPS4",61,0)
 .I $P(IB0,U,5)="" S PROVS(I)=$P(IB0,U,2)
"RTN","IBJPS4",62,0)
 .Q
"RTN","IBJPS4",63,0)
 I $D(PROVS) D
"RTN","IBJPS4",64,0)
 .; add divisions to the list
"RTN","IBJPS4",65,0)
 .D LIST^DIC(40.8,,"@;.01;.07I","PQ",,,,,,,"ALLDIVS")
"RTN","IBJPS4",66,0)
 .I $D(ALLDIVS) S I=0 F  S I=$O(ALLDIVS("DILIST",I)) Q:I=""  D
"RTN","IBJPS4",67,0)
 ..; make sure that we have a file 4 ien to work with
"RTN","IBJPS4",68,0)
 ..S DIVDATA=$G(ALLDIVS("DILIST",I,0)),IEN4=$P(DIVDATA,U,3) I IEN4="" Q
"RTN","IBJPS4",69,0)
 ..S DIEN=$O(^IBE(350.9,1,IBNODE,"B",IEN4,""))
"RTN","IBJPS4",70,0)
 ..; if there is an entry in 350.9 for this division, get corresponding pay-to provider
"RTN","IBJPS4",71,0)
 ..; otherwise, use default pay-to provider 
"RTN","IBJPS4",72,0)
 ..S PIEN=$S(DIEN:$$GETPROV(DIEN,IBTCFLAG),1:DFLT)
"RTN","IBJPS4",73,0)
 ..; add this division to the list as division name ^ station number
"RTN","IBJPS4",74,0)
 ..S PROVS(PIEN,IEN4)=$P(DIVDATA,U,2)_U_$$GET1^DIQ(4,IEN4,99)
"RTN","IBJPS4",75,0)
 ..Q
"RTN","IBJPS4",76,0)
 .Q
"RTN","IBJPS4",77,0)
 D CLEAN^DILF
"RTN","IBJPS4",78,0)
 Q
"RTN","IBJPS4",79,0)
 ;
"RTN","IBJPS4",80,0)
SEL() ; select division
"RTN","IBJPS4",81,0)
 ; returns ien of selected division, or 0 if nothing is selected
"RTN","IBJPS4",82,0)
 N DIR,IEN,MAX,X,Y
"RTN","IBJPS4",83,0)
 S IEN=0,MAX=+$O(@VALMAR@("ZIDX",""),-1)
"RTN","IBJPS4",84,0)
 I MAX>0 D
"RTN","IBJPS4",85,0)
 .S:MAX=1 Y=1 I MAX>1 S DIR("A")="Select Division (1-"_MAX_"): ",DIR(0)="NA^"_1_":"_MAX_":0" D ^DIR
"RTN","IBJPS4",86,0)
 .S:+Y>0 IEN=$O(@VALMAR@("ZIDX",Y,""))
"RTN","IBJPS4",87,0)
 .Q
"RTN","IBJPS4",88,0)
 Q +IEN
"RTN","IBJPS4",89,0)
 ;
"RTN","IBJPS4",90,0)
DIVADD(IBTCFLAG) ; associate division with a pay-to provider
"RTN","IBJPS4",91,0)
 N DA,DFLT,DIC,DIE,DIEN,DIR,DNAME,DR,IEN4,IEN19,Y,IBNODE
"RTN","IBJPS4",92,0)
 S IBNODE=$$NODE(IBTCFLAG)
"RTN","IBJPS4",93,0)
 ;
"RTN","IBJPS4",94,0)
 D FULL^VALM1
"RTN","IBJPS4",95,0)
 S VALMBCK="R"
"RTN","IBJPS4",96,0)
 S IEN4=$$SEL I IEN4>0 D
"RTN","IBJPS4",97,0)
 .S IEN19=$O(^IBE(350.9,1,IBNODE,"B",IEN4,"")) I IEN19="" D
"RTN","IBJPS4",98,0)
 ..; create a new entry in 350.9
"RTN","IBJPS4",99,0)
 ..S DIEN=$$FIND1^DIC(40.8,,"QX",IEN4,"AD") I 'DIEN Q
"RTN","IBJPS4",100,0)
 ..S DNAME=$$GET1^DIQ(40.8,DIEN,.01),DFLT=$$GETDFLT^IBJPS3(IBTCFLAG) I 'DFLT Q
"RTN","IBJPS4",101,0)
 ..I IEN4=+$G(^IBE(350.9,1,IBNODE,DFLT,0)) D ERR Q
"RTN","IBJPS4",102,0)
 ..S DIC="^IBE(350.9,1,"_IBNODE_",",DIC(0)="L",DIC("DR")=".02////"_DNAME_";.05////"_DFLT,X=IEN4,DLAYGO=350.9,DA(1)=1
"RTN","IBJPS4",103,0)
 ..K DD,DO D FILE^DICN I +Y>0 S IEN19=+Y
"RTN","IBJPS4",104,0)
 ..K DIC,DD,DO,DLAYGO
"RTN","IBJPS4",105,0)
 ..Q
"RTN","IBJPS4",106,0)
 .I +IEN19>0 D
"RTN","IBJPS4",107,0)
 ..I $P($G(^IBE(350.9,1,IBNODE,IEN19,0)),U,5)="" D ERR Q
"RTN","IBJPS4",108,0)
 ..S DIR(0)="P^IBE(350.9,1,"_IBNODE_",:M",DIR("S")="I $P(^(0),U,5)="""""
"RTN","IBJPS4",109,0)
 ..S DA(1)=1,DIR("A")="Select "_$S(IBTCFLAG:"TRICARE ",1:"")_"Pay-To Provider"
"RTN","IBJPS4",110,0)
 ..D ^DIR
"RTN","IBJPS4",111,0)
 ..I +Y>0 S DIE="^IBE(350.9,1,"_IBNODE_",",DA=IEN19,DA(1)=1,DR=".05////"_+Y D ^DIE
"RTN","IBJPS4",112,0)
 .Q
"RTN","IBJPS4",113,0)
 D CLEAN^VALM10,CLEAN^DILF,INIT(IBTCFLAG)
"RTN","IBJPS4",114,0)
 Q
"RTN","IBJPS4",115,0)
 ;
"RTN","IBJPS4",116,0)
ERR ;
"RTN","IBJPS4",117,0)
 N DIR
"RTN","IBJPS4",118,0)
 S DIR("A",1)="A division used as a Pay-to Provider can not be associated"
"RTN","IBJPS4",119,0)
 S DIR("A",2)="with another Pay-to Provider."
"RTN","IBJPS4",120,0)
 S DIR("A")="Press RETURN to continue: "
"RTN","IBJPS4",121,0)
 S DIR(0)="EA" D ^DIR
"RTN","IBJPS4",122,0)
 Q
"RTN","IBJPS4",123,0)
 ;
"RTN","IBJPS4",124,0)
GETPROV(PIEN,IBTCFLAG) ; return pay-to provider ien for a given division, or 0 if provider can't be found
"RTN","IBJPS4",125,0)
 ; PIEN has to be a valid ien in pay-to providers sub-file
"RTN","IBJPS4",126,0)
 ;
"RTN","IBJPS4",127,0)
 N PRVZ,NXTPIEN,OUT,IBNODE
"RTN","IBJPS4",128,0)
 S PRVZ(PIEN)="" ; this array holds ien's to prevent infinite chain
"RTN","IBJPS4",129,0)
 S IBNODE=$$NODE(IBTCFLAG)
"RTN","IBJPS4",130,0)
 S OUT=0 F  S NXTPIEN=+$P($G(^IBE(350.9,1,IBNODE,PIEN,0)),U,5) D  Q:OUT  ;
"RTN","IBJPS4",131,0)
 .I 'NXTPIEN S OUT=1 Q  ; no parent - this is pay-to provider
"RTN","IBJPS4",132,0)
 .I $D(PRVZ(NXTPIEN)) S PIEN=0,OUT=1 Q  ; we are in an infinite loop, so get out
"RTN","IBJPS4",133,0)
 .S PIEN=NXTPIEN,PRVZ(NXTPIEN)="" ; parent exists, so continue the loop
"RTN","IBJPS4",134,0)
 .Q
"RTN","IBJPS4",135,0)
 Q PIEN
"RTN","IBJPS4",136,0)
 ;
"RTN","IBJPS4",137,0)
GETDIVS(PIEN,DIVS,IBTCFLAG) ; return array of divisions associated with pay-to provider PIEN
"RTN","IBJPS4",138,0)
 N I,DIV,PPROV,IBNODE
"RTN","IBJPS4",139,0)
 S IBNODE=$$NODE(IBTCFLAG)
"RTN","IBJPS4",140,0)
 S I="" F  S I=$O(^IBE(350.9,1,IBNODE,"B",I)) Q:I=""  D
"RTN","IBJPS4",141,0)
 .S DIV=$O(^IBE(350.9,1,IBNODE,"B",I,""))
"RTN","IBJPS4",142,0)
 .Q:+DIV'>0  S PPROV=$$GETPROV(DIV,IBTCFLAG)
"RTN","IBJPS4",143,0)
 .I PPROV=PIEN,DIV'=PIEN S DIVS(DIV)=$P($G(^IBE(350.9,1,IBNODE,DIV,0)),U,2)
"RTN","IBJPS4",144,0)
 .Q
"RTN","IBJPS4",145,0)
 Q
"RTN","IBJPS4",146,0)
 ;
"RTN","IBJPS4",147,0)
NODE(IBTCFLAG) ; Determine appropriate pay-to provide node within ^IBE(350.9).
"RTN","IBJPS4",148,0)
 ; '29' for TRICARE, otherwise '19'.
"RTN","IBJPS4",149,0)
 Q $S(IBTCFLAG:29,1:19)
"RTN","IBJPS4",150,0)
 ;
"RTN","IBJPS4",151,0)
SCRN4(IEN) ; Screen for INSTITUTION(#4) file
"RTN","IBJPS4",152,0)
 N DIERR,IENS,FIELDS,Z,ZERR
"RTN","IBJPS4",153,0)
 S IENS=+IEN_",",FIELDS="11;13;101"
"RTN","IBJPS4",154,0)
 D GETS^DIQ(4,IENS,FIELDS,"IE","Z","ZERR")
"RTN","IBJPS4",155,0)
 I $D(DIERR) Q 0
"RTN","IBJPS4",156,0)
 ;Check to see if National
"RTN","IBJPS4",157,0)
 I Z(4,IENS,11,"I")'="N" Q 0
"RTN","IBJPS4",158,0)
 ;Check to see if Inactive
"RTN","IBJPS4",159,0)
 I Z(4,IENS,101,"I") Q 0
"RTN","IBJPS4",160,0)
 ;Check to see if Pharmacy
"RTN","IBJPS4",161,0)
 I "^PHARM^CMOP^MSN^"[(U_Z(4,IENS,13,"E")_U) Q 0
"RTN","IBJPS4",162,0)
 ;Default
"RTN","IBJPS4",163,0)
 Q 1
"RTN","IBJPS4",164,0)
 ;
"RTN","IBJPS4",165,0)
TRICARE(IBIFN) ; Determine whether this bill/claim is TRICARE or not.
"RTN","IBJPS4",166,0)
 ; Return '1' if TRICARE, '0' if not.  There are two rate types that
"RTN","IBJPS4",167,0)
 ; should return '1': TRICARE and TRICARE REIMB. INS.
"RTN","IBJPS4",168,0)
 ;
"RTN","IBJPS4",169,0)
 I '$G(IBIFN) Q 0
"RTN","IBJPS4",170,0)
 N IBRATE
"RTN","IBJPS4",171,0)
 S IBRATE=$P(^DGCR(399,IBIFN,0),U,7)
"RTN","IBJPS4",172,0)
 I 'IBRATE Q 0
"RTN","IBJPS4",173,0)
 I $P($G(^DGCR(399.3,IBRATE,0)),U)'["TRICARE" Q 0
"RTN","IBJPS4",174,0)
 ;
"RTN","IBJPS4",175,0)
 ; At this point, the claim has a rate type of TRICARE or TRICARE
"RTN","IBJPS4",176,0)
 ; REIMB. INS.  However, quit with a '1' only if a default TRICARE-
"RTN","IBJPS4",177,0)
 ; specific pay-to provider is defined. Otherwise, quit with a '0'.
"RTN","IBJPS4",178,0)
 ;
"RTN","IBJPS4",179,0)
 I $$GETDFLT^IBJPS3(1) Q 1
"RTN","IBJPS4",180,0)
 Q 0
"RTN","IBJTCA1")
0^16^B59453492^B54215341
"RTN","IBJTCA1",1,0)
IBJTCA1 ;ALB/ARH - TPI CLAIMS INFO BUILD ;10/31/07  14:17
"RTN","IBJTCA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,106,137,223,276,363,384,432,452,473,497,521,516**;21-MAR-94;Build 123
"RTN","IBJTCA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTCA1",4,0)
 ;
"RTN","IBJTCA1",5,0)
BLD ; build array for Third Party Joint Inquiry Claims Info screen, IBIFN must be defined
"RTN","IBJTCA1",6,0)
 ;
"RTN","IBJTCA1",7,0)
 N X,IBY,IBZ,IBZ0,IBI,IBT,IBD,IBLN,IBLR,IBD0,IBDI1,IBDM,IBDM1,IBDU,IBDS,IBDU2,IBID0,IBID13,IBNC,IBTC,IBTW,IBSW,IBGRPB,IBGRPE,IBWNR,IBDTX,IBBX19,IBPRVO,IBNABP,IBLVL,IBCNT,IBPRVTYP,IBVL
"RTN","IBJTCA1",8,0)
 N IBXSAVE  ; IB*2.0*473 bi
"RTN","IBJTCA1",9,0)
 S VALMCNT=0,X="",IBD0=$G(^DGCR(399,+$G(IBIFN),0)) I IBD0="" S VALMQUIT="" G BLDQ
"RTN","IBJTCA1",10,0)
 F IBI="M","M1","U","S","U2","TX" S @("IBD"_IBI)=$G(^DGCR(399,+IBIFN,IBI))
"RTN","IBJTCA1",11,0)
 S IBDI1=$P(IBD0,U,21),IBDI1=$S(IBDI1="S":2,IBDI1="T":3,1:1) S IBDI1=$$POLICY^IBCEF(IBIFN,,IBDI1)
"RTN","IBJTCA1",12,0)
 S IBID0=$G(^DIC(36,+IBDI1,0)),IBID13=$G(^DIC(36,+IBDI1,.13))
"RTN","IBJTCA1",13,0)
 ;
"RTN","IBJTCA1",14,0)
 S (IBLN,VALMCNT)=1
"RTN","IBJTCA1",15,0)
 ;
"RTN","IBJTCA1",16,0)
 ; MRD;IB*2.0*516 - Try to make the following more readable; also
"RTN","IBJTCA1",17,0)
 ; added IBTC(7), IBTW(7) and IBSW(7).
"RTN","IBJTCA1",18,0)
 ;IB*2.0*432/TAZ - Added IBTW(6) and IBSW(6)
"RTN","IBJTCA1",19,0)
 ;S (IBNC(1),IBTC(1),IBTC(4),IBTC(6))=2,IBTC(5)=78,(IBNC(2),IBTC(2))=42,IBNC(3)=35,IBTW(1)=15,IBTW(2)=16,IBTW(4)=12,IBTW(5)=1,IBTW(6)=20,IBSW(1)=23,IBSW(2)=21,IBSW(4)=60,IBSW(5)=1,IBSW(6)=49
"RTN","IBJTCA1",20,0)
 ;
"RTN","IBJTCA1",21,0)
 S IBNC(1)=2,IBTC(1)=2,IBTW(1)=15,IBSW(1)=23
"RTN","IBJTCA1",22,0)
 S IBNC(2)=42,IBTC(2)=42,IBTW(2)=16,IBSW(2)=21
"RTN","IBJTCA1",23,0)
 S IBNC(3)=35
"RTN","IBJTCA1",24,0)
 S IBTC(4)=2,IBTW(4)=12,IBSW(4)=60
"RTN","IBJTCA1",25,0)
 S IBTC(5)=78,IBTW(5)=1,IBSW(5)=1
"RTN","IBJTCA1",26,0)
 S IBTC(6)=2,IBTW(6)=20,IBSW(6)=49
"RTN","IBJTCA1",27,0)
 S IBTC(7)=2,IBTW(7)=20,IBSW(7)=58
"RTN","IBJTCA1",28,0)
 ;
"RTN","IBJTCA1",29,0)
 S IBLR=1
"RTN","IBJTCA1",30,0)
 ;
"RTN","IBJTCA1",31,0)
 S IBT="Insurance Demographics" S IBLN=$$SETN(IBT,IBLN,IBLR,1)
"RTN","IBJTCA1",32,0)
 S IBWNR=$$WNRBILL^IBEFUNC(IBIFN)
"RTN","IBJTCA1",33,0)
 S IBNABP=$$NABP^IBNCPDPU(IBIFN)
"RTN","IBJTCA1",34,0)
 S IBT=$S(IBWNR:" *",1:"  ")_"Bill Payer: ",IBD=$P(IBID0,U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",35,0)
 S IBT="Claim Address: " D  S IBD=$P(IBDM,U,5) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",36,0)
 . I $P(IBID0,U,1)'=$P(IBDM,U,4) S IBD=$P(IBDM,U,4) S IBLN=$$SET(IBT,IBD,IBLN,IBLR) S IBT=""
"RTN","IBJTCA1",37,0)
 I $P(IBDM,U,6)'="" S IBT="",IBD=$P(IBDM,U,6) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",38,0)
 I $P(IBDM1,U,1)'="" S IBT="",IBD=$P(IBDM1,U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",39,0)
 S IBT="",IBD=$P(IBDM,U,7),IBD=IBD_$S(IBD'="":", ",1:"")_$P($G(^DIC(5,+$P(IBDM,U,8),0)),U,2)_" "_$P(IBDM,U,9),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",40,0)
 S IBT="Claim Phone: ",IBD=$P($$BADD^IBJTU3(+IBIFN),U,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",41,0)
 S IBLN=$$SET("","",IBLN,5)
"RTN","IBJTCA1",42,0)
 ;
"RTN","IBJTCA1",43,0)
 ; MRD;IB*2.0*516 - Use an IBLR of 7 for this section, then reset below.
"RTN","IBJTCA1",44,0)
 S IBLR=7
"RTN","IBJTCA1",45,0)
 S IBT="Subscriber Demographics" S IBLN=$$SETN(IBT,IBLN,1,1)
"RTN","IBJTCA1",46,0)
 S IBT="Group Number: ",IBD=$P(IBDI1,U,3) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",47,0)
 S IBT="Group Name: ",IBD=$P(IBDI1,U,15) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",48,0)
 S IBT="Subscriber ID: ",IBD=$P(IBDI1,U,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",49,0)
 S IBT="Employer: ",IBD=$$EMPL(+DFN) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",50,0)
 S IBT="Insured's Name: ",IBD=$P(IBDI1,U,17) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",51,0)
 S IBT="Relationship: ",IBD=$$EXSET^IBJU1($P(IBDI1,U,16),2.312,16) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",52,0)
 S IBLR=1
"RTN","IBJTCA1",53,0)
 ;
"RTN","IBJTCA1",54,0)
 S (IBNC(1),IBTC(1))=2,(IBNC(2),IBTC(2))=42,IBNC(3)=29,IBTW(1)=12,IBTW(2)=16,IBSW(1)=26,IBSW(2)=22
"RTN","IBJTCA1",55,0)
 S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",56,0)
 ;
"RTN","IBJTCA1",57,0)
 I $$FT^IBCEF(IBIFN)=2 D
"RTN","IBJTCA1",58,0)
 . N IBXDATA,IBXSAVE K ^TMP("IBXSAVE",$J)
"RTN","IBJTCA1",59,0)
 . D F^IBCEF("N-HCFA 1500 BOX 19",,,IBIFN)
"RTN","IBJTCA1",60,0)
 . I IBXDATA'="" S IBBX19(1)=$E(IBXDATA,1,40) S:$E(IBXDATA,41,$L(IBXDATA))'="" IBBX19(2)=$E(IBXDATA,41,$L(IBXDATA))
"RTN","IBJTCA1",61,0)
 ;
"RTN","IBJTCA1",62,0)
 S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA1",63,0)
 S IBT="Claim Information" S IBLN=$$SETN(IBT,IBLN,3,1)
"RTN","IBJTCA1",64,0)
 S IBT="Bill Type: ",IBD=$$EXSET^IBJU1($P(IBD0,U,5),399,.05) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",65,0)
 S IBT="Time Frame: ",IBD=$$EXSET^IBJU1($P(IBD0,U,6),399,.06) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",66,0)
 S IBT="Rate Type: ",IBD=$P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",67,0)
 S IBT="AR Status: ",IBD=$P($$ARSTATA^IBJTU4(IBIFN),U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",68,0)
 S IBT=" Sequence: ",IBD=$P($$EXSET^IBJU1($P(IBD0,U,21),399,.21)," ",1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",69,0)
 S IBT="Purch Svc: ",IBD=$S($P(IBDU2,U,11)="":"NO",1:$$EXPAND^IBTRE(399,233,$P(IBDU2,U,11))),IBLN=$$SET(IBT,IBD,IBLN,4)
"RTN","IBJTCA1",70,0)
 I $P(IBDM1,"^",8) S IBT="  ECME No: ",IBD=$P($P(IBDM1,"^",8),";",1),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",71,0)
 I $L($P(IBDM1,"^",9)) S IBT="ECME Ap No: ",IBD=$P(IBDM1,"^",9),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",72,0)
 I IBNABP'="" S IBT=$S(($L($TR(IBNABP," ",""))=7):"  NCPDP No: ",1:"       NPI: "),IBD=IBNABP,IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",73,0)
 ; IB*2.0*521 add Claim HPID to display
"RTN","IBJTCA1",74,0)
 S IBD=$S($P(IBD0,U,21)="P":$P(IBDM1,U,13),$P(IBD0,U,21)="S":$P(IBDM1,U,14),$P(IBD0,U,21)="T":$P(IBDM1,U,15),1:"")
"RTN","IBJTCA1",75,0)
 S:IBD="" IBD=$$HPD^IBCNHUT1(+IBDI1) S IBVL=$$HOD^IBCNHUT1(IBD,+IBDI1,IBD) S IBT=$P(IBVL,U,2)_": ",IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",76,0)
 I IBWNR S IBT="MRA Status: ",IBD=$S($P(IBDTX,U,5):$P(IBDTX,U,5),1:"NOT RECEIVED"),IBLN=$$SET(IBT,$S(IBD:$$EXPAND^IBTRE(399,24,IBD),1:IBD),IBLN,IBLR)
"RTN","IBJTCA1",77,0)
 I $G(IBBX19(1))'="" D
"RTN","IBJTCA1",78,0)
 . S IBT="   Box 19: ",IBD=IBBX19(1),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",79,0)
 . I $G(IBBX19(2))'="" S IBT=$J("",11),IBD=IBBX19(2),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",80,0)
 ;
"RTN","IBJTCA1",81,0)
 S IBLR=6,IBPRVO=""
"RTN","IBJTCA1",82,0)
 S IBT="Providers: ",IBD="NONE"
"RTN","IBJTCA1",83,0)
 ;IB*2.0*432/TAZ - Changed how providers are displayed to take line-level providers into account.
"RTN","IBJTCA1",84,0)
 ;D F^IBCEF("N-ALL PROVIDERS","IBZ",,IBIFN)
"RTN","IBJTCA1",85,0)
 D F^IBCEF("N-ALL PROVIDERS 1","IBZ",,IBIFN)
"RTN","IBJTCA1",86,0)
 S IBZ0=0
"RTN","IBJTCA1",87,0)
 S IBLVL=0
"RTN","IBJTCA1",88,0)
 ;F  S Z=$O(IBZ(Z)) Q:'Z  D
"RTN","IBJTCA1",89,0)
 ;. I $G(IBZ(Z)),$G(IBZ(Z,1))'="" S IBLN=$$SET(IBT,"(OLD PROV DATA) "_IBZ(Z,1),IBLN,IBLR),IBZ0=1 Q
"RTN","IBJTCA1",90,0)
 ;. I $P($G(IBZ(Z,1)),U)'="" S IBD=$E($$EXPAND^IBTRE(399.0222,.01,Z)_":"_$J("",15),1,15)_$P(IBZ(Z,1),U)_$S($P(IBZ(Z,1),U,4)'="":" ("_$P(IBZ(Z,1),U,4)_")",1:"") S IBLN=$$SET(IBT,IBD,IBLN,IBLR) S IBT=$J("",11),IBZ0=1
"RTN","IBJTCA1",91,0)
 ;I 'IBZ0 S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",92,0)
 S IBLVL=0
"RTN","IBJTCA1",93,0)
 F  S IBLVL=$O(IBZ(IBLVL)) Q:'IBLVL  D
"RTN","IBJTCA1",94,0)
 . S IBT=IBT_$S(IBLVL=1:"Claim: ",1:"Line: ")
"RTN","IBJTCA1",95,0)
 . S IBPRVTYP="",IBCNT=0
"RTN","IBJTCA1",96,0)
 . F  S IBCNT=$O(IBZ(IBLVL,IBCNT)) Q:'IBCNT  D
"RTN","IBJTCA1",97,0)
 .. I IBLVL=1 S IBD=$J("",5)
"RTN","IBJTCA1",98,0)
 .. I IBLVL=2 S IBD=$E("("_IBCNT_")"_$J("",5),1,5)
"RTN","IBJTCA1",99,0)
 .. F  S IBPRVTYP=$O(IBZ(IBLVL,IBCNT,IBPRVTYP)) Q:'IBPRVTYP  D
"RTN","IBJTCA1",100,0)
 ... S IBD=IBD_$E($$EXPAND^IBTRE(399.0222,.01,IBPRVTYP)_":"_$J("",15),1,15)
"RTN","IBJTCA1",101,0)
 ... S IBD=IBD_$P(IBZ(IBLVL,IBCNT,IBPRVTYP),U)
"RTN","IBJTCA1",102,0)
 ... I $L($P(IBZ(IBLVL,IBCNT,IBPRVTYP),U,4)) S IBD=IBD_" ("_$P(IBZ(IBLVL,IBCNT,IBPRVTYP),U,4)_")"
"RTN","IBJTCA1",103,0)
 ... S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT="",IBD=$J("",5)
"RTN","IBJTCA1",104,0)
 ;
"RTN","IBJTCA1",105,0)
 S IBGRPE=IBLN,IBLN=IBGRPB+1,IBLR=2
"RTN","IBJTCA1",106,0)
 ;
"RTN","IBJTCA1",107,0)
 S IBT="Charge Type: ",IBD=$$EXSET^IBJU1($P(IBD0,U,27),399,.27) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",108,0)
 S IBT="Service Dates: ",IBD=$$DATE^IBJU1($P(IBDU,U,1))_" - "_$$DATE^IBJU1($P(IBDU,U,2)) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",109,0)
 S IBT="Orig Claim: ",IBD=$$BILL^RCJIBFN2(+IBIFN) S IBLN=$$SET(IBT,$J($P(IBD,U,1),9,2),IBLN,IBLR)
"RTN","IBJTCA1",110,0)
 S IBT="Balance Due: ",IBD=$J($P(IBD,U,3),9,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",111,0)
 I +$P(IBDM,U,2) S IBX=$S($P(IBD0,U,21)="P":2,1:1) D  S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",112,0)
 . S IBT=$S(IBX=2:"Secondary",1:"Primary")_": ",IBD=$P($G(^DIC(36,+$P(IBDM,U,IBX),0)),U,1)
"RTN","IBJTCA1",113,0)
 . S IBX=$P(IBDU2,U,(IBX+3)) I +IBX S IBX="("_$J(IBX,0,2)_")" S IBD=$E(IBD,1,(IBSW(IBLR)-$L(IBX)-2))_"  "_IBX
"RTN","IBJTCA1",114,0)
 I +$P(IBDM,U,3) S IBX=$S($P(IBD0,U,21)="T":2,1:3) D  S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",115,0)
 . S IBT=$S(IBX=2:"Secondary",1:"Tertiary")_": ",IBD=$P($G(^DIC(36,+$P(IBDM,U,IBX),0)),U,1)
"RTN","IBJTCA1",116,0)
 . S IBX=$P(IBDU2,U,(IBX+3)) I +IBX S IBX="("_$J(IBX,0,2)_")" S IBD=$E(IBD,1,(IBSW(IBLR)-$L(IBX)-2))_"  "_IBX
"RTN","IBJTCA1",117,0)
 S IBLN=$$SET("","",IBLN,5)
"RTN","IBJTCA1",118,0)
 I IBWNR S IBT="MRA Rec Date: " D  S IBLN=$$SET(IBT,IBD,IBLN,2)
"RTN","IBJTCA1",119,0)
 . N Z
"RTN","IBJTCA1",120,0)
 . ; find last MRA for receipt date
"RTN","IBJTCA1",121,0)
 . S (IBD,Z)="" F  S Z=$O(^IBM(361.1,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361.1,Z,0)),U,4)=1 S IBD=$$DATE^IBJU1($P($P(^IBM(361.1,Z,0),U,6),".")) Q
"RTN","IBJTCA1",122,0)
 F Z=IBLN:1:IBGRPE S IBLN=$$SET("","",IBLN,5)
"RTN","IBJTCA1",123,0)
 ;
"RTN","IBJTCA1",124,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE)
"RTN","IBJTCA1",125,0)
 ;
"RTN","IBJTCA1",126,0)
 S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA1",127,0)
 D CONT^IBJTCA2
"RTN","IBJTCA1",128,0)
 ;
"RTN","IBJTCA1",129,0)
COPAY I $O(^IBA(362.4,"C",IBIFN,0)) D
"RTN","IBJTCA1",130,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,IBLR)   ; blank line
"RTN","IBJTCA1",131,0)
 . S IBNC(1)=21,IBT="Related Prescription Copay Information" S IBLN=$$SETN(IBT,IBLN,1,1)
"RTN","IBJTCA1",132,0)
 . N IBZ,IBX,IBC,IBCAP
"RTN","IBJTCA1",133,0)
 . S IBZ=0 F  S IBZ=$O(^IBA(362.4,"C",IBIFN,IBZ)) Q:'IBZ  D
"RTN","IBJTCA1",134,0)
 .. K ^TMP("IBTPJI",$J)
"RTN","IBJTCA1",135,0)
 .. S IBC=$G(^IBA(362.4,IBZ,0))
"RTN","IBJTCA1",136,0)
 .. D:$P(IBC,"^",5) RX^PSO52API($P(IBD0,"^",2),"IBTPJI",$P(IBC,"^",5),"","I^")
"RTN","IBJTCA1",137,0)
 .. ; original fill
"RTN","IBJTCA1",138,0)
 .. I $P(IBC,"^",10)=0 D
"RTN","IBJTCA1",139,0)
 ... S IBX=+$G(^TMP($J,"IBTPJI",$P(IBD0,"^",2),+$P(IBC,"^",5),106)),IBCAP=+$G(^(106.6))
"RTN","IBJTCA1",140,0)
 .. ; refills
"RTN","IBJTCA1",141,0)
 .. E  D
"RTN","IBJTCA1",142,0)
 ... S IBX=+$G(^TMP($J,"IBTPJI",$P(IBD0,"^",2),+$P(IBC,"^",5),"IB",+$P(IBC,"^",10),9)),IBCAP=+$G(^(9.1))
"RTN","IBJTCA1",143,0)
 .. I '$G(IBX),$G(IBCAP) S IBT="  <copay exceeded cap>",IBLN=$$SET(IBT,"",IBLN,4) Q
"RTN","IBJTCA1",144,0)
 .. I '$G(IBX) S IBT="  <none found>",IBLN=$$SET(IBT,"",IBLN,4) Q
"RTN","IBJTCA1",145,0)
 .. S IBX=$G(^IB(IBX,0))
"RTN","IBJTCA1",146,0)
 .. S IBT="Rx: "_$P(IBC,"^")_"  Chg: $"_$FN($P(IBX,"^",7),",",2)_"   Status: "_$$TITLE^XLFSTR($$EXTERNAL^DILFD(350,.05,"",$P(IBX,"^",5)))_"   Bill: "_$P(IBX,"^",11)
"RTN","IBJTCA1",147,0)
 .. S IBLN=$$SET(IBT,"",IBLN,4)
"RTN","IBJTCA1",148,0)
 K ^TMP("IBTPJI",$J)
"RTN","IBJTCA1",149,0)
 ;
"RTN","IBJTCA1",150,0)
 S (IBLN,VALMCNT)=IBLN-1
"RTN","IBJTCA1",151,0)
 ;
"RTN","IBJTCA1",152,0)
BLDQ Q
"RTN","IBJTCA1",153,0)
 ;
"RTN","IBJTCA1",154,0)
EMPL(DFN) ; returns employer name
"RTN","IBJTCA1",155,0)
 Q $P($G(^DPT(+DFN,.311)),U,1)
"RTN","IBJTCA1",156,0)
 ;
"RTN","IBJTCA1",157,0)
SET(TTL,DATA,LN,LR) ;
"RTN","IBJTCA1",158,0)
 N IBY
"RTN","IBJTCA1",159,0)
 S IBY=$J(TTL,IBTW(LR))_DATA D SET1(IBY,LN,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJTCA1",160,0)
 S LN=LN+1
"RTN","IBJTCA1",161,0)
 Q LN
"RTN","IBJTCA1",162,0)
 ;
"RTN","IBJTCA1",163,0)
SETN(TTL,LN,LR,RV) ;
"RTN","IBJTCA1",164,0)
 N IBY
"RTN","IBJTCA1",165,0)
 S IBY=" "_TTL_" " D SET1(IBY,LN,IBNC(LR),$L(IBY),$G(RV))
"RTN","IBJTCA1",166,0)
 S LN=LN+1
"RTN","IBJTCA1",167,0)
 Q LN
"RTN","IBJTCA1",168,0)
 ;
"RTN","IBJTCA1",169,0)
SET1(STR,LN,COL,WD,RV) ; set up TMP array with screen data
"RTN","IBJTCA1",170,0)
 N IBX S IBX=$G(^TMP("IBJTCA",$J,LN,0))
"RTN","IBJTCA1",171,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTCA1",172,0)
 D SET^VALM10(LN,IBX) I $G(RV)'="" D CNTRL^VALM10(LN,COL,WD,IORVON,IORVOFF)
"RTN","IBJTCA1",173,0)
 Q
"RTN","IBJTCA2")
0^43^B40902439^B23068552
"RTN","IBJTCA2",1,0)
IBJTCA2 ;ALB/ARH - TPI CLAIMS INFO BUILD (CONT) ;16-FEB-1995
"RTN","IBJTCA2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,155,320,516**;21-MAR-94;Build 123
"RTN","IBJTCA2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTCA2",4,0)
 ;
"RTN","IBJTCA2",5,0)
CONT ; Continuation of Claim Information Screen Build
"RTN","IBJTCA2",6,0)
 ; reason cancelled
"RTN","IBJTCA2",7,0)
 I $P(IBD0,U,13)=7 D
"RTN","IBJTCA2",8,0)
 . S (IBNC(1),IBTC(1))=2,(IBNC(2),IBTC(2))=0,IBNC(3)=28,IBTW(1)=29,IBTW(2)=0,IBSW(1)=49,IBSW(2)=0
"RTN","IBJTCA2",9,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",10,0)
 . ;
"RTN","IBJTCA2",11,0)
 . S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA2",12,0)
 . K IBY D RCANC^IBJTU2(IBIFN,.IBY,50)
"RTN","IBJTCA2",13,0)
 . S IBT="Reason Cancelled by ("_$P(IBY,U,3)_"): "
"RTN","IBJTCA2",14,0)
 . S IBI=0 F  S IBI=$O(IBY(IBI)) Q:'IBI  S IBD=IBY(IBI) S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT=""
"RTN","IBJTCA2",15,0)
 ;
"RTN","IBJTCA2",16,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE)
"RTN","IBJTCA2",17,0)
 S (IBNC(1),IBTC(1))=2,IBTW(1)=16,IBSW(1)=50
"RTN","IBJTCA2",18,0)
 S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",19,0)
 ;
"RTN","IBJTCA2",20,0)
 S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA2",21,0)
 ;
"RTN","IBJTCA2",22,0)
 I +$P(IBDS,U,1) S IBT="Entered: ",IBD=$$EXT(IBDS,1,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",23,0)
 I +$P(IBDS,U,4) S IBT="Initial Review: ",IBD=$$EXT(IBDS,4,5) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",24,0)
 I +$P(IBDS,U,7) S IBT="MRA Request: ",IBD=$$EXT(IBDS,7,8) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",25,0)
 I +$P(IBDS,U,10) S IBT="Authorized: ",IBD=$$EXT(IBDS,10,11) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",26,0)
 I +$P(IBDS,U,12) S IBT="First Printed: ",IBD=$$EXT(IBDS,12,13) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",27,0)
 I $P(IBDS,U,14)>$P(IBDS,U,12) S IBT="Last Printed: ",IBD=$$EXT(IBDS,14,15) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",28,0)
 I +$P(IBDS,U,17) S IBT="Cancelled: ",IBD=$$EXT(IBDS,17,18) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",29,0)
 ;
"RTN","IBJTCA2",30,0)
 ; Patch 320 - added bill cloning history to TPJI report. 
"RTN","IBJTCA2",31,0)
 N IBCCR,IBCURR,IBNEXT,IBBCH,IBINDENT
"RTN","IBJTCA2",32,0)
 S IBINDENT=0
"RTN","IBJTCA2",33,0)
 D EN^IBCCR(IBIFN,.IBCCR)   ; utility to pull cloning history
"RTN","IBJTCA2",34,0)
 ;
"RTN","IBJTCA2",35,0)
 ; attempt to go one claim forward from the current claim
"RTN","IBJTCA2",36,0)
 S IBCURR="IBCCR("_+$P(IBDS,U,1)_","_IBIFN_")"
"RTN","IBJTCA2",37,0)
 S IBNEXT=$Q(@IBCURR)
"RTN","IBJTCA2",38,0)
 I IBNEXT'="" D
"RTN","IBJTCA2",39,0)
 . N IBX S IBX=@IBNEXT
"RTN","IBJTCA2",40,0)
 . S IBT="Copied: "
"RTN","IBJTCA2",41,0)
 . S IBD=$$FMTE^XLFDT($P(IBX,U,1),"2Z")_"  by  "_$P(IBX,U,3)
"RTN","IBJTCA2",42,0)
 . S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",43,0)
 . S IBT="Copied To: ",IBD=$P(IBX,U,2),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",44,0)
 . S IBINDENT=1
"RTN","IBJTCA2",45,0)
 . Q
"RTN","IBJTCA2",46,0)
 ;
"RTN","IBJTCA2",47,0)
 ; now go backwards for claim cloning history all the way back
"RTN","IBJTCA2",48,0)
 S IBBCH=IBCURR
"RTN","IBJTCA2",49,0)
 F  S IBBCH=$Q(@IBBCH,-1) Q:IBBCH=""  D
"RTN","IBJTCA2",50,0)
 . N IBX S IBX=@IBBCH
"RTN","IBJTCA2",51,0)
 . S IBT="Copied: " I IBINDENT S IBT="                  "_IBT
"RTN","IBJTCA2",52,0)
 . S IBD=$$FMTE^XLFDT($P(IBX,U,1),"2Z")_"  by  "_$P(IBX,U,3)
"RTN","IBJTCA2",53,0)
 . S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",54,0)
 . S IBT="Copied From: " I IBINDENT S IBT="             "_IBT
"RTN","IBJTCA2",55,0)
 . S IBD=$P(IBX,U,2),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",56,0)
 . S IBT="Reason Copied: " I IBINDENT S IBT="           "_IBT
"RTN","IBJTCA2",57,0)
 . S IBD=$P(IBX,U,4),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",58,0)
 . S IBINDENT=1
"RTN","IBJTCA2",59,0)
 . Q
"RTN","IBJTCA2",60,0)
 ;
"RTN","IBJTCA2",61,0)
 I $D(^DGCR(399,IBIFN,"R","AC",1)) S IBT="Returned to AR: ",X=0 F  S X=$O(^DGCR(399,IBIFN,"R","AC",1,X)) Q:'X  D
"RTN","IBJTCA2",62,0)
 . S IBY=$G(^DGCR(399,IBIFN,"R",X,0)),IBD=$$EXT(IBY,1,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",63,0)
 ;
"RTN","IBJTCA2",64,0)
 N IBCOB,IBX,IBY,IBI,IBJ,IBK D BCOB^IBCU3(IBIFN,.IBCOB) I $O(IBCOB(0)) D
"RTN","IBJTCA2",65,0)
 . S IBTC(1)=2,IBTW(1)=12,IBSW(1)=68,IBLR=1,IBNC(1)=26,IBTW(0)=0
"RTN","IBJTCA2",66,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",67,0)
 . S IBT="Payers and Related Bills" S IBLN=$$SETN^IBJTCA1(IBT,IBLN,IBLR,1)
"RTN","IBJTCA2",68,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",69,0)
 . S IBTC(1)=0,IBTW(1)=0,IBSW(1)=68,IBLR=1,IBNC(1)=0
"RTN","IBJTCA2",70,0)
 . S IBT="",IBD="Insurance Co.    Bill #     Status   Original  Collected    Balance"
"RTN","IBJTCA2",71,0)
 . S IBLN=$$SET(IBT,IBD,IBLN,IBLR) D CNTRL^VALM10(IBLN-1,(IBTC(1)+IBTW(1)),IBSW(1),IOUON,IOUOFF)
"RTN","IBJTCA2",72,0)
 . S IBI=0 F  S IBI=$O(IBCOB(IBI)) Q:'IBI  D
"RTN","IBJTCA2",73,0)
 .. S IBT=$S(IBI=1:"Primary",IBI=2:"Secondary",IBI=3:"Tertiary",1:"Other")_":  "
"RTN","IBJTCA2",74,0)
 .. S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  S IBK="" F  S IBK=$O(IBCOB(IBI,IBJ,IBK)) Q:IBK=""  D
"RTN","IBJTCA2",75,0)
 ... S IBD="",IBY=$$BILL^RCJIBFN2(IBK)
"RTN","IBJTCA2",76,0)
 ... S IBX=$P($G(^DIC(36,+IBJ,0)),U,1) S IBD=$$SLINE(IBD,IBX,0,15)
"RTN","IBJTCA2",77,0)
 ... I +IBK D
"RTN","IBJTCA2",78,0)
 .... S IBX=$P($G(^DGCR(399,+IBK,0)),U,1) S IBD=$$SLINE(IBD,IBX,17,10)
"RTN","IBJTCA2",79,0)
 .... S IBX=$P($$STNO^RCJIBFN2(+$P(IBY,U,2)),U,2) ;bill status
"RTN","IBJTCA2",80,0)
 .... ; if MRA active & bill pyr seq >1 & dsply'g prmry & prmry ins is WNR
"RTN","IBJTCA2",81,0)
 .... I $$EDIACTV^IBCEF4(2),$$COBN^IBCEF(+IBK)>1,IBI=1,$$MCRWNR^IBEFUNC(+IBJ) D
"RTN","IBJTCA2",82,0)
 ..... S IBX=" ",IBY="0^^0^0^0" ;blank out status & reset WNR amounts
"RTN","IBJTCA2",83,0)
 .... S IBD=$$SLINE(IBD,IBX,30,3)
"RTN","IBJTCA2",84,0)
 .... S IBX=$J($P(IBY,U,1),10,2) S IBD=$$SLINE(IBD,IBX,35,10)
"RTN","IBJTCA2",85,0)
 .... S IBX=$J($P(IBY,U,4),10,2) S IBD=$$SLINE(IBD,IBX,46,10)
"RTN","IBJTCA2",86,0)
 .... S IBX=$J($P(IBY,U,3),10,2) S IBD=$$SLINE(IBD,IBX,57,10)
"RTN","IBJTCA2",87,0)
 ... S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT=""
"RTN","IBJTCA2",88,0)
 ;
"RTN","IBJTCA2",89,0)
 ;IB*2.0*516 - Display links from 3rd party bill to 1st party bill(s)
"RTN","IBJTCA2",90,0)
 K ^TMP("IBRBF",$J)
"RTN","IBJTCA2",91,0)
 D RELBILL^IBRFN(IBIFN)
"RTN","IBJTCA2",92,0)
 N IBCIFN,IBCNT
"RTN","IBJTCA2",93,0)
 S IBCNT=0,IBCIFN="" F  S IBCIFN=$O(^TMP("IBRBF",$J,IBIFN,IBCIFN)) Q:IBCIFN=""  D
"RTN","IBJTCA2",94,0)
 . I $P(^(IBCIFN),"^",6)["RX COPAY" K ^TMP("IBRBF",$J,IBIFN,IBCIFN) Q
"RTN","IBJTCA2",95,0)
 . S IBCNT=IBCNT+1
"RTN","IBJTCA2",96,0)
 D HDR2
"RTN","IBJTCA2",97,0)
 I IBCNT=0 S (IBT,IBD)="",IBX="No Links to 1st Party Bills Found",IBD=$$SLINE(IBD,IBX,0,35),IBLN=$$SET(IBT,IBD,IBLN,IBLR) Q
"RTN","IBJTCA2",98,0)
 S (IBD,IBX,IBT)=""
"RTN","IBJTCA2",99,0)
 S IBCIFN="" F  S IBCIFN=$O(^TMP("IBRBF",$J,IBIFN,IBCIFN)) Q:IBCIFN=""  D PRINT2
"RTN","IBJTCA2",100,0)
 K ^TMP("IBRBF",$J)
"RTN","IBJTCA2",101,0)
 Q
"RTN","IBJTCA2",102,0)
 ;
"RTN","IBJTCA2",103,0)
EXT(STR,DT,USER) ; returns external form of user and date, given their position in the string
"RTN","IBJTCA2",104,0)
 N X,Y S Y="",STR=$G(STR),DT=+$G(DT),USER=+$G(USER)
"RTN","IBJTCA2",105,0)
 S X=$P(STR,U,DT),DT="" I +X S DT=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTCA2",106,0)
 S X=$P(STR,U,USER),USER="" I +X S USER=$P($G(^VA(200,+X,0)),U,1)
"RTN","IBJTCA2",107,0)
 S Y=DT_"  by  "_$S(USER="":"UNKNOWN",1:USER)
"RTN","IBJTCA2",108,0)
 Q Y
"RTN","IBJTCA2",109,0)
 ;
"RTN","IBJTCA2",110,0)
SET(IBT,IBD,IBLN,IBLR) ;
"RTN","IBJTCA2",111,0)
 N LN S LN=$$SET^IBJTCA1(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",112,0)
 Q LN
"RTN","IBJTCA2",113,0)
 ;
"RTN","IBJTCA2",114,0)
SLINE(IBD,DATA,COL,WD) ; format a single line with multiple data fields
"RTN","IBJTCA2",115,0)
 S IBD=$E(IBD,1,(COL-1)),IBD=IBD_$J("",(COL-$L(IBD))),IBD=IBD_$E(DATA,1,WD)
"RTN","IBJTCA2",116,0)
 Q IBD
"RTN","IBJTCA2",117,0)
 ;
"RTN","IBJTCA2",118,0)
HDR2 ;Print the header for first party bills - IB*2*516
"RTN","IBJTCA2",119,0)
 S (IBT,IBD)="",IBLR=1,IBNC(1)=26
"RTN","IBJTCA2",120,0)
 S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",121,0)
 S IBT="Related First Party Charges" S IBLN=$$SETN^IBJTCA1(IBT,IBLN,IBLR,1)
"RTN","IBJTCA2",122,0)
 S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",123,0)
 S IBTC(1)=0,IBTW(1)=1,IBSW(1)=80,IBLR=1,IBNC(1)=26
"RTN","IBJTCA2",124,0)
 S IBT="Bill#         Charge Type  Status      Amt Billed     On Hold    Balance"
"RTN","IBJTCA2",125,0)
 S IBLN=$$SET(IBT,IBD,IBLN,IBLR) D CNTRL^VALM10(IBLN-1,(IBTC(1)+IBTW(1)),IBSW(1),IOUON,IOUOFF)
"RTN","IBJTCA2",126,0)
 Q
"RTN","IBJTCA2",127,0)
 ;
"RTN","IBJTCA2",128,0)
PRINT2 ;Print the detail line for a first party bill - IB*2*516
"RTN","IBJTCA2",129,0)
 S IBTC(1)=0,IBTW(1)=0,IBSW(1)=80,IBLR=1
"RTN","IBJTCA2",130,0)
 S IBDAT=$G(^TMP("IBRBF",$J,IBIFN,IBCIFN)),IBD=""
"RTN","IBJTCA2",131,0)
 S IBX=$P(IBDAT,"^",4) S:IBX="" IBX="Not Assigned" S IBD=$$SLINE(IBD,IBX,0,13)
"RTN","IBJTCA2",132,0)
 S IBX=$P(IBDAT,"^",6),IBD=$$SLINE(IBD,IBX,14,12)
"RTN","IBJTCA2",133,0)
 S IBX=$$GET1^DIQ(350,IBCIFN_",",.05) S:IBX="" IBX="Incomplete" S IBD=$$SLINE(IBD,IBX,27,11)
"RTN","IBJTCA2",134,0)
 S IBFN=$P(IBDAT,"^",4) I IBFN S IBFN=$O(^PRCA(430,"B",IBFN,0))
"RTN","IBJTCA2",135,0)
 S IBX=$J($P(IBDAT,"^",5),9,2),IBD=$$SLINE(IBD,IBX,40,10)
"RTN","IBJTCA2",136,0)
 S IBX=$P(IBDAT,"^",7),IBD=$$SLINE(IBD,IBX,53,10)
"RTN","IBJTCA2",137,0)
 S IBX=$J($S($G(^PRCA(430,+IBFN,7)):+($P(^(7),"^")+$P(^(7),"^",2)+$P(^(7),"^",3)+$P(^(7),"^",4)+$P(^(7),"^",4)),1:0),9,2),IBD=$$SLINE(IBD,IBX,63,10)
"RTN","IBJTCA2",138,0)
 S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",139,0)
 Q
"RTN","IBJTCA2",140,0)
 ;
"RTN","IBJTCA2",141,0)
STAT(RCIBFN) ;AR Status
"RTN","IBJTCA2",142,0)
 I '$G(RCIBFN) Q ""
"RTN","IBJTCA2",143,0)
 N RCSTAT
"RTN","IBJTCA2",144,0)
 S RCSTAT=$P($G(^PRCA(430,+RCIBFN,0)),"^",8),RCSTAT=$P($G(^PRCA(430.3,+RCSTAT,0)),"^",2)
"RTN","IBJTCA2",145,0)
 Q RCSTAT
"RTN","IBJTCA2",146,0)
 ;
"RTN","IBJTCA2",147,0)
DATE(X) ; Convert FileMan date to mm/dd/yy
"RTN","IBJTCA2",148,0)
 Q $S($G(X):$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:"")
"RTN","IBJTCA2",149,0)
 ;
"RTN","IBJTLA1")
0^13^B11361045^B10714466
"RTN","IBJTLA1",1,0)
IBJTLA1 ;ALB/ARH - TPI ACTIVE BILLS LIST BUILD ;2/14/95
"RTN","IBJTLA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,61,51,153,137,183,276,451,516**;21-MAR-94;Build 123
"RTN","IBJTLA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTLA1",4,0)
 ;
"RTN","IBJTLA1",5,0)
BLDA ; build active list for third party joint inquiry active list
"RTN","IBJTLA1",6,0)
 N IBIFN,IBCNT S VALMCNT=0,IBCNT=0
"RTN","IBJTLA1",7,0)
 S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"C",DFN,IBIFN)) Q:'IBIFN  I $$ACTIVE^IBJTU4(IBIFN) W "." D SCRN
"RTN","IBJTLA1",8,0)
 ;
"RTN","IBJTLA1",9,0)
 I VALMCNT=0 D SET(" ",0),SET("No Active Bills for this Patient",0)
"RTN","IBJTLA1",10,0)
 ;
"RTN","IBJTLA1",11,0)
 Q
"RTN","IBJTLA1",12,0)
 ;
"RTN","IBJTLA1",13,0)
SCRN ; add bill to screen list (IBIFN,DFN must be defined)
"RTN","IBJTLA1",14,0)
 N X,IBY,IBD0,IBDU,IBDM,TYPE S X=""
"RTN","IBJTLA1",15,0)
 S IBCNT=IBCNT+1,IBD0=$G(^DGCR(399,+IBIFN,0)),IBDU=$G(^DGCR(399,+IBIFN,"U")),IBDM=$G(^DGCR(399,+IBIFN,"M"))
"RTN","IBJTLA1",16,0)
 S IBY=IBCNT,X=$$SETFLD^VALM1(IBY,X,"NUMBER")
"RTN","IBJTLA1",17,0)
 ; IB*2.0*451 - get EEOB indicator for bill # when applicable
"RTN","IBJTLA1",18,0)
 S IBPFLAG=$$EEOB(+IBIFN)
"RTN","IBJTLA1",19,0)
 S IBY=$S($G(IBPFLAG)'="":"%",1:" ")_$P(IBD0,U,1)_$$ECME^IBTRE(IBIFN),X=$$SETFLD^VALM1(IBY,X,"BILL") ;add EEOB indicator '%' to bill number when applicable
"RTN","IBJTLA1",20,0)
 S IBY=$S($$REF^IBJTU31(+IBIFN):"r",1:""),X=$$SETFLD^VALM1(IBY,X,"REFER")
"RTN","IBJTLA1",21,0)
 S IBY=$S($$IB^IBRUTL(+IBIFN,0):"*",1:""),X=$$SETFLD^VALM1(IBY,X,"HD")
"RTN","IBJTLA1",22,0)
 S IBY=$$DATE($P(IBDU,U,1)),X=$$SETFLD^VALM1(IBY,X,"STFROM")
"RTN","IBJTLA1",23,0)
 S IBY=$$DATE($P(IBDU,U,2)),X=$$SETFLD^VALM1(IBY,X,"STTO")
"RTN","IBJTLA1",24,0)
 ;
"RTN","IBJTLA1",25,0)
 S IBY=$P($$LST^DGMTU(DFN,$P(IBDU,U)),U,4),IBY=$S(IBY="C":"YES",IBY="P":"PEN",IBY="R":"REQ",IBY="G":"GMT",1:"NO"),X=$$SETFLD^VALM1(IBY,X,"MT?")
"RTN","IBJTLA1",26,0)
 ;S IBY=$$TYPE($P(IBD0,U,5))_$$TF($P(IBD0,U,6))_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:""),X=$$SETFLD^VALM1(IBY,X,"TYPE")  ; 516 - baa
"RTN","IBJTLA1",27,0)
 S TYPE=$$TYPE($P(IBD0,U,5)) I $E(TYPE,2)="P" S TYPE=$E(TYPE)  ; 516 - baa
"RTN","IBJTLA1",28,0)
 S IBY=TYPE_"/"_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:""),X=$$SETFLD^VALM1(IBY,X,"TYPE")  ; 516 - baa
"RTN","IBJTLA1",29,0)
 S IBY=" "_$P($$ARSTATA^IBJTU4(IBIFN),U,2),X=$$SETFLD^VALM1(IBY,X,"ARST")
"RTN","IBJTLA1",30,0)
 ;
"RTN","IBJTLA1",31,0)
 S IBY=$P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,4),X=$$SETFLD^VALM1(IBY,X,"RATE")
"RTN","IBJTLA1",32,0)
 S IBY=$S($$MINS^IBJTU31(+IBIFN):"+",1:""),X=$$SETFLD^VALM1(IBY,X,"CB")
"RTN","IBJTLA1",33,0)
 S IBY=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBJTLA1",34,0)
 I 'IBY,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBY=+$$CURR^IBCEF2(IBIFN)
"RTN","IBJTLA1",35,0)
 S IBY=$P($G(^DIC(36,+IBY,0)),U,1)
"RTN","IBJTLA1",36,0)
 S X=$$SETFLD^VALM1(IBY,X,"INSUR")
"RTN","IBJTLA1",37,0)
 S IBY=$$BILL^RCJIBFN2(IBIFN)
"RTN","IBJTLA1",38,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,1),8,2),X,"OAMT")
"RTN","IBJTLA1",39,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,3),8,2),X,"CAMT")
"RTN","IBJTLA1",40,0)
 D SET(X,IBCNT)
"RTN","IBJTLA1",41,0)
 Q
"RTN","IBJTLA1",42,0)
 ;
"RTN","IBJTLA1",43,0)
DATE(X) ; date in external format
"RTN","IBJTLA1",44,0)
 N Y S Y="" I X?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTLA1",45,0)
 Q Y
"RTN","IBJTLA1",46,0)
 ;
"RTN","IBJTLA1",47,0)
TYPE(X) ; return abbreviated form of Bill Classification (399,.05)
"RTN","IBJTLA1",48,0)
 Q $S(X=1:"IP",X=2:"IH",X=3:"OP",X=4:"OH",1:"")
"RTN","IBJTLA1",49,0)
 ;
"RTN","IBJTLA1",50,0)
TF(X) ; return abbreviated form of Timeframe of Bill (399,.06)
"RTN","IBJTLA1",51,0)
 Q $S(X=2:"-F",X=3:"-C",X=4:"-L",X'=1:"-O",1:"")
"RTN","IBJTLA1",52,0)
 ;
"RTN","IBJTLA1",53,0)
SET(X,CNT) ; set up list manager screen array
"RTN","IBJTLA1",54,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTLA1",55,0)
 S ^TMP("IBJTLA",$J,VALMCNT,0)=X Q:'CNT
"RTN","IBJTLA1",56,0)
 S ^TMP("IBJTLA",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBJTLA1",57,0)
 S ^TMP("IBJTLAX",$J,CNT)=VALMCNT_U_IBIFN
"RTN","IBJTLA1",58,0)
 Q
"RTN","IBJTLA1",59,0)
 ;
"RTN","IBJTLA1",60,0)
EEOB(IBIFN) ; get payment information
"RTN","IBJTLA1",61,0)
 ; IB*2.0*451 - find an EOB payment for a bill
"RTN","IBJTLA1",62,0)
 ; input is the IEN for the bill # in file #399 and must be valid,
"RTN","IBJTLA1",63,0)
 ; output is the EEOB indicator '%' if a payment is found in file #361.1,
"RTN","IBJTLA1",64,0)
 ; exclude EOB type MRA (Medicare).
"RTN","IBJTLA1",65,0)
 N IBPFLAG,IBVAL,Z
"RTN","IBJTLA1",66,0)
 I $G(IBIFN)=0 Q ""
"RTN","IBJTLA1",67,0)
 I '$O(^IBM(361.1,"B",IBIFN,0)) Q ""  ; no entry here
"RTN","IBJTLA1",68,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",13)=1 Q ""  ;avoid 'ENTERED/NOT REVIEWED' status
"RTN","IBJTLA1",69,0)
 ; handle both single and multiple bill entries in file #361.1
"RTN","IBJTLA1",70,0)
 S Z=0 F  S Z=$O(^IBM(361.1,"B",IBIFN,Z)) Q:'Z  D  Q:$G(IBPFLAG)="%"
"RTN","IBJTLA1",71,0)
 . S IBVAL=$G(^IBM(361.1,Z,0))
"RTN","IBJTLA1",72,0)
 . S IBPFLAG=$S($P(IBVAL,"^",4)=1:"",$P(IBVAL,"^",4)=0:"%",1:"")
"RTN","IBJTLA1",73,0)
 Q IBPFLAG  ; EOB indicator for either 1st or 3rd payment on bill
"RTN","IBJTLB1")
0^15^B11794378^B11067077
"RTN","IBJTLB1",1,0)
IBJTLB1 ;ALB/ARH - TPI INACTIVE LIST BUILD ;2/14/95
"RTN","IBJTLB1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,61,137,276,451,516**;21-MAR-94;Build 123
"RTN","IBJTLB1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTLB1",4,0)
 ;
"RTN","IBJTLB1",5,0)
BLDA ; build active list for third party joint inquiry active list, DFN must be defined
"RTN","IBJTLB1",6,0)
 ; first search starts at dt and works backwards for 6 months of bills or IBMAXCNT bills, whichever is greater
"RTN","IBJTLB1",7,0)
 ; all bills for a single day are included in the same search so even IBMAXCNT may be exceeded
"RTN","IBJTLB1",8,0)
 ; if IBEND is defined on entry it is used as the end dt of the search, otherwise DT is used
"RTN","IBJTLB1",9,0)
 ; IBBEG is left defined on exit, if it has a value then it is used by the Change Dates action to define the next
"RTN","IBJTLB1",10,0)
 ; end date of the search, this results in each CD action default working backwards through the date range until
"RTN","IBJTLB1",11,0)
 ; no bills are found and IBBEG is null then search restarts at DT, IBEND is defined so can tell if range changed
"RTN","IBJTLB1",12,0)
 N IBIFN,IBCNT,IBBDT,IBEDT,IBFIRST,IBLAST,IBDT1,IBDT2,IBMAXCNT K IBHMSG
"RTN","IBJTLB1",13,0)
 S IBEDT=$S(+$G(IBEND):IBEND,1:DT),IBBDT=$$FMADD^XLFDT(IBEDT,-180),IBMAXCNT=52
"RTN","IBJTLB1",14,0)
 ;
"RTN","IBJTLB1",15,0)
 S (VALMCNT,IBCNT)=0,IBDT1=$S(IBEDT'="":-(IBEDT+.01),1:""),IBDT2=-IBBDT
"RTN","IBJTLB1",16,0)
 S IBFIRST=IBBDT,IBLAST=-$O(^DGCR(399,"APDS",DFN,""))
"RTN","IBJTLB1",17,0)
 ;
"RTN","IBJTLB1",18,0)
 F  S IBDT1=$O(^DGCR(399,"APDS",DFN,IBDT1)) Q:'IBDT1!(IBDT1>IBDT2&(IBCNT'<IBMAXCNT))  S IBFIRST=-IBDT1 D
"RTN","IBJTLB1",19,0)
 . S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"APDS",DFN,IBDT1,IBIFN)) Q:'IBIFN  I '$$ACTIVE^IBJTU4(IBIFN) D SCRN W "."
"RTN","IBJTLB1",20,0)
 ;
"RTN","IBJTLB1",21,0)
 S IBBEG=$S('IBDT1:"",IBBDT>IBFIRST:IBFIRST,1:IBBDT),IBBDT=$S(+IBBEG:$$DATE(IBBEG),1:"BEGIN")
"RTN","IBJTLB1",22,0)
 S IBEND=$S(IBEDT=""!(IBLAST'>IBEDT):"",1:IBEDT),IBEDT=$S(+IBEND:$$DATE(IBEND),1:"END")
"RTN","IBJTLB1",23,0)
 ;
"RTN","IBJTLB1",24,0)
 I 'IBBEG,'IBEND S IBHMSG="** All Inactive Bills **"
"RTN","IBJTLB1",25,0)
 I $G(IBHMSG)="" S IBHMSG=IBBDT_" - "_IBEDT
"RTN","IBJTLB1",26,0)
 S IBHMSG=IBHMSG_"   ("_VALMCNT_")"
"RTN","IBJTLB1",27,0)
 ;
"RTN","IBJTLB1",28,0)
 I VALMCNT=0 D SET(" ",0),SET("No Inactive Bills for this Patient",0)
"RTN","IBJTLB1",29,0)
 ;
"RTN","IBJTLB1",30,0)
 Q
"RTN","IBJTLB1",31,0)
 ;
"RTN","IBJTLB1",32,0)
SCRN ; add bill to screen list (IBIFN,DFN must be defined)
"RTN","IBJTLB1",33,0)
 N X,IBY,IBD0,IBDU,IBDM,TYPE S X=""
"RTN","IBJTLB1",34,0)
 S IBCNT=IBCNT+1,IBD0=$G(^DGCR(399,+IBIFN,0)),IBDU=$G(^DGCR(399,+IBIFN,"U")),IBDM=$G(^DGCR(399,+IBIFN,"M"))
"RTN","IBJTLB1",35,0)
 S IBY=IBCNT,X=$$SETFLD^VALM1(IBY,X,"NUMBER")
"RTN","IBJTLB1",36,0)
 ; IB*2.0*451 - get EEOB indicator for bill # when applicable
"RTN","IBJTLB1",37,0)
 S IBPFLAG=$$EEOB^IBJTLA1(+IBIFN)
"RTN","IBJTLB1",38,0)
 S IBY=$P(IBD0,U,1)_$$ECME^IBTRE(IBIFN),X=$$SETFLD^VALM1(IBY,X,"BILL")
"RTN","IBJTLB1",39,0)
 S IBY=$S($G(IBPFLAG)'="":"%",1:" ")_IBY,X=$$SETFLD^VALM1(IBY,X,"BILL")
"RTN","IBJTLB1",40,0)
 S IBY=$S($$REF^IBJTU31(+IBIFN):"r",1:""),X=$$SETFLD^VALM1(IBY,X,"REFER")
"RTN","IBJTLB1",41,0)
 S IBY=$S($$IB^IBRUTL(+IBIFN,0):"*",1:""),X=$$SETFLD^VALM1(IBY,X,"HD")
"RTN","IBJTLB1",42,0)
 S IBY=$$DATE($P(IBDU,U,1)),X=$$SETFLD^VALM1(IBY,X,"STFROM")
"RTN","IBJTLB1",43,0)
 S IBY=$$DATE($P(IBDU,U,2)),X=$$SETFLD^VALM1(IBY,X,"STTO")
"RTN","IBJTLB1",44,0)
 ;
"RTN","IBJTLB1",45,0)
 ;S IBY=$$TYPE($P(IBD0,U,5))_$$TF($P(IBD0,U,6)),X=$$SETFLD^VALM1(IBY,X,"TYPE")
"RTN","IBJTLB1",46,0)
 S TYPE=$$TYPE($P(IBD0,U,5)) I $E(TYPE,2)="P" S TYPE=$E(TYPE)  ; 516 - baa
"RTN","IBJTLB1",47,0)
 S IBY=TYPE_"/"_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:""),X=$$SETFLD^VALM1(IBY,X,"TYPE")  ; 516 - baa
"RTN","IBJTLB1",48,0)
 S IBY=" "_$P($$ARSTATA^IBJTU4(IBIFN),U,2),X=$$SETFLD^VALM1(IBY,X,"ARST")
"RTN","IBJTLB1",49,0)
 ;
"RTN","IBJTLB1",50,0)
 S IBY=$P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,4),X=$$SETFLD^VALM1(IBY,X,"RATE")
"RTN","IBJTLB1",51,0)
 S IBY=$S($$MINS^IBJTU31(IBIFN):"+",1:""),X=$$SETFLD^VALM1(IBY,X,"CB")
"RTN","IBJTLB1",52,0)
 S IBY=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBJTLB1",53,0)
 I 'IBY,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) S IBY=+$$CURR^IBCEF2(IBIFN)
"RTN","IBJTLB1",54,0)
 S IBY=$P($G(^DIC(36,+IBY,0)),U,1),X=$$SETFLD^VALM1(IBY,X,"INSUR")
"RTN","IBJTLB1",55,0)
 S IBY=$$BILL^RCJIBFN2(IBIFN)
"RTN","IBJTLB1",56,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,1),8,2),X,"OAMT")
"RTN","IBJTLB1",57,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,3),8,2),X,"CAMT")
"RTN","IBJTLB1",58,0)
 D SET(X,IBCNT)
"RTN","IBJTLB1",59,0)
 Q
"RTN","IBJTLB1",60,0)
 ;
"RTN","IBJTLB1",61,0)
DATE(X) ; date in external format
"RTN","IBJTLB1",62,0)
 Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTLB1",63,0)
 ;
"RTN","IBJTLB1",64,0)
TYPE(X) ; return abbreviated form of Bill Classification (399,.05)
"RTN","IBJTLB1",65,0)
 ; modified for 516 - baa
"RTN","IBJTLB1",66,0)
 ;Q $S(X=1:"IP",X=2:"IH",X=3:"OP",X=4:"OH",1:"")
"RTN","IBJTLB1",67,0)
 Q $S(X=1:"I",X=2:"IH",X=3:"O",X=4:"OH",1:"")
"RTN","IBJTLB1",68,0)
 ;
"RTN","IBJTLB1",69,0)
TF(X) ; return abbreviated form of Timeframe of Bill (399,.06)
"RTN","IBJTLB1",70,0)
 Q $S(X=2:"-F",X=3:"-C",X=4:"-L",X'=1:"-O",1:"")
"RTN","IBJTLB1",71,0)
 ;
"RTN","IBJTLB1",72,0)
SET(X,CNT) ; set up list manager screen array
"RTN","IBJTLB1",73,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTLB1",74,0)
 S ^TMP("IBJTLB",$J,VALMCNT,0)=X Q:'CNT
"RTN","IBJTLB1",75,0)
 S ^TMP("IBJTLB",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBJTLB1",76,0)
 S ^TMP("IBJTLBX",$J,CNT)=VALMCNT_U_IBIFN
"RTN","IBJTLB1",77,0)
 Q
"RTN","IBJTU1")
0^90^B7959085^B7894877
"RTN","IBJTU1",1,0)
IBJTU1 ;ALB/ARH - TPI UTILITIES ;2/14/95
"RTN","IBJTU1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,276,451,516**;21-MAR-94;Build 123
"RTN","IBJTU1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTU1",4,0)
 ;
"RTN","IBJTU1",5,0)
PRVSCR(SCRNARR) ; called as part of a screen ACTION PROTOCOL'S ENTRY ACTION to determine if screen has already been displayed
"RTN","IBJTU1",6,0)
 ; returns true if screen array already exists (ie. already displayed), 
"RTN","IBJTU1",7,0)
 ; setting IBFASTXT causes LM to back out of current screens,
"RTN","IBJTU1",8,0)
 ; setting IBPRVSCR causes LM to stop exiting screens when the chosen screen is reached
"RTN","IBJTU1",9,0)
 ; if user tries to execute a screen already displayed it will quit out of existing screens until the asked for screen is found
"RTN","IBJTU1",10,0)
 N X S X=0,IBPRVSCR="" I $G(SCRNARR)'="",$D(^TMP(SCRNARR,$J)) S X=1,IBPRVSCR=SCRNARR,IBFASTXT=3
"RTN","IBJTU1",11,0)
 Q X
"RTN","IBJTU1",12,0)
 ;
"RTN","IBJTU1",13,0)
HDR(IBIFN,DFN,LNS) ; called by a screens's LIST TEMPLATE HEADER to get lines for header, used for all TP screens
"RTN","IBJTU1",14,0)
 ;input:  LNS=header lines to add  ---  defined on exit: VALMHDR array
"RTN","IBJTU1",15,0)
 ;
"RTN","IBJTU1",16,0)
 N X,Y,Z,IBD0,IBPD0,IBDI1,IBCNT S IBIFN=+$G(IBIFN),DFN=+$G(DFN),LNS=+$G(LNS) K VALMHDR
"RTN","IBJTU1",17,0)
 S IBCNT=0,IBD0=$G(^DGCR(399,+IBIFN,0)),IBPD0=$G(^DPT(+DFN,0))
"RTN","IBJTU1",18,0)
 ;IB*2.0*516/TAZ - Call $$POLICY^IBCEF to insert HIPAA compliant fields into variable IBDI1. Data will
"RTN","IBJTU1",19,0)
 ;continue to be extracted from IBDI1 original location.
"RTN","IBJTU1",20,0)
 ;S IBDI1=$P(IBD0,U,21),IBDI1=$S(IBDI1="S":"I2",IBDI1="T":"I3",1:"I1"),IBDI1=$G(^DGCR(399,+IBIFN,IBDI1))
"RTN","IBJTU1",21,0)
 S IBDI1=$P(IBD0,U,21),IBDI1=$$POLICY^IBCEF(IBIFN,,IBDI1)  ; 516 - baa
"RTN","IBJTU1",22,0)
 ;
"RTN","IBJTU1",23,0)
1 I LNS'[1 G 2
"RTN","IBJTU1",24,0)
 ; -- first line of screens: BILL NUMBER, PAT NAME, PAT ID, DOB, SUBSCRIBER ID
"RTN","IBJTU1",25,0)
 N IBBILL,IBPAT,IBPATID,IBDOB,IBSUB,IBPNWDTH S IBCNT=IBCNT+1,(IBSUB,IBPATID)=""
"RTN","IBJTU1",26,0)
 S IBBILL=$P(IBD0,U,1)_$$ECME^IBTRE(IBIFN)
"RTN","IBJTU1",27,0)
 S X=$$PT^IBEFUNC(DFN),IBPAT=$P(X,U,1) I $P(X,U,3)'="" S IBPATID=$E(X)_$P(X,U,3)
"RTN","IBJTU1",28,0)
 S IBDOB="DOB: "_$$DATE^IBJU1($P(IBPD0,U,3))
"RTN","IBJTU1",29,0)
 I +IBIFN S X=$P(IBDI1,U,2),X=X_$J("",(13-$L(X))),IBSUB="Subsc ID: "_X
"RTN","IBJTU1",30,0)
 ;
"RTN","IBJTU1",31,0)
 ; IB*2.0*451 - get EEOB indicator for bill #
"RTN","IBJTU1",32,0)
 S IBPFLAG=$$EEOB^IBJTLA1(IBIFN)
"RTN","IBJTU1",33,0)
 S IBBILL=$G(IBPFLAG)_IBBILL
"RTN","IBJTU1",34,0)
 S IBPNWDTH=80-($L(IBBILL)+3+2+$L(IBPATID)+3+$L(IBDOB)+3+$L(IBSUB)),IBPAT=$E(IBPAT,1,IBPNWDTH),Z="   "
"RTN","IBJTU1",35,0)
 S VALMHDR(IBCNT)=IBBILL_Z_IBPAT_"  "_IBPATID_$J("",(IBPNWDTH-$L(IBPAT)))_Z_IBDOB_Z_IBSUB
"RTN","IBJTU1",36,0)
 ; IB*2.0*451 - add explanation of '%' indicator for the user
"RTN","IBJTU1",37,0)
 S VALMSG="|% EEOB | Enter ?? for more actions|"
"RTN","IBJTU1",38,0)
2 I LNS'[2 G 3
"RTN","IBJTU1",39,0)
 ; -- bill screens line 2: STATEMENT DATES, TIMEFRAME, ORIG AMT (AR)
"RTN","IBJTU1",40,0)
 N IBDU S IBCNT=IBCNT+1,IBDU=$G(^DGCR(399,+IBIFN,"U"))
"RTN","IBJTU1",41,0)
 S X=" "_$$DATE^IBJU1(+IBDU)_" - "_$$DATE^IBJU1(+$P(IBDU,U,2)),VALMHDR(IBCNT)=X_$J("",(28-$L(X)))
"RTN","IBJTU1",42,0)
 S X=$$EXSET^IBJU1(+$P(IBD0,U,6),399,.06),VALMHDR(IBCNT)=VALMHDR(IBCNT)_X_$J("",(29-$L(X)))
"RTN","IBJTU1",43,0)
 S X=$$BILL^RCJIBFN2(IBIFN),X="Orig Amt: "_$FN($P(X,U,1),",",2),VALMHDR(IBCNT)=VALMHDR(IBCNT)_X
"RTN","IBJTU1",44,0)
 ; IB*2.0*451 - add explanation of '%' indicator for the user
"RTN","IBJTU1",45,0)
 S VALMSG="|% EEOB | Enter ?? for more actions|"
"RTN","IBJTU1",46,0)
3 I LNS'[3 G HDRQ
"RTN","IBJTU1",47,0)
 ; -- AR screens line 2: CURRENT STATUS (AR), ORIGINAL AMT (AR), CURRENT AMT (AR)
"RTN","IBJTU1",48,0)
 N IBST,IBOC,IBBD,IBY S IBCNT=IBCNT+1,IBY=$$BILL^RCJIBFN2(+IBIFN)
"RTN","IBJTU1",49,0)
 S IBST="AR Status: "_$P($$ARSTATA^IBJTU4(+IBIFN),U,1)
"RTN","IBJTU1",50,0)
 S IBOC="Orig Amt: "_$FN($P(IBY,U,1),",",2)
"RTN","IBJTU1",51,0)
 S IBBD="Balance Due: "_$FN($P(IBY,U,3),",",2)
"RTN","IBJTU1",52,0)
 ;
"RTN","IBJTU1",53,0)
 S X="  "_IBOC_$J("",(20-$L(IBOC)))_" "_IBBD_$J("",(23-$L(IBBD))),Y=80-$L(X),IBST=$E(IBST,1,Y)
"RTN","IBJTU1",54,0)
 S VALMHDR(IBCNT)=IBST_$J("",(Y-$L(IBST)))_X
"RTN","IBJTU1",55,0)
 ;
"RTN","IBJTU1",56,0)
HDRQ Q
"RTN","IBJTU31")
0^91^B8926798^B7603119
"RTN","IBJTU31",1,0)
IBJTU31 ;ALB/ARH - TPI UTILITIES - INS ; 2/14/95
"RTN","IBJTU31",2,0)
 ;;2.0;INTEGRATED BILLING;**39,61,516**;21-MAR-94;Build 123
"RTN","IBJTU31",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTU31",4,0)
 ;
"RTN","IBJTU31",5,0)
BPP(IBIFN,ARRAY) ; returns array of patient policy info on all of a bill's carriers
"RTN","IBJTU31",6,0)
 ; returns PPIFN ^ p/s/t ^ policy node from patient insurance record (2,.312), also adds correct group #/name
"RTN","IBJTU31",7,0)
 N DFN,IBDM,IBI,IBDFN,IBCDFN,IBGRP K ARRAY S ARRAY=0
"RTN","IBJTU31",8,0)
 S DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,2) I 'DFN G BPPQ
"RTN","IBJTU31",9,0)
 S IBDM=$G(^DGCR(399,IBIFN,"M")) I 'IBDM G BPPQ
"RTN","IBJTU31",10,0)
 ;
"RTN","IBJTU31",11,0)
 F IBI=1,2,3 S IBCDFN="" D  I +IBCDFN S ARRAY(IBI)=IBDFN_U_IBI_U_IBCDFN,ARRAY=IBI
"RTN","IBJTU31",12,0)
 . S IBDFN=$P(IBDM,U,(IBI+11)) I 'IBDFN,+$P(IBDM,U,IBI) S IBDFN=$O(^DPT(DFN,.312,"B",+$P(IBDM,U,IBI),0))
"RTN","IBJTU31",13,0)
 . ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBJTU31",14,0)
 . ;Q:'IBDFN  S IBCDFN=$G(^DPT(DFN,.312,+IBDFN,0)) I 'IBCDFN Q
"RTN","IBJTU31",15,0)
 . Q:'IBDFN  S IBCDFN=$$ZND^IBCNS1(DFN,+IBDFN) I 'IBCDFN Q  ; 516 - baa
"RTN","IBJTU31",16,0)
 . ;The following line is no longer necessary since the move is completed in the $$ZND^IBCNS1 function.
"RTN","IBJTU31",17,0)
 . ;S IBGRP=$G(^IBA(355.3,+$P(IBCDFN,U,18),0)) S:IBGRP'="" $P(IBCDFN,U,3)=$P(IBGRP,U,4),$P(IBCDFN,U,15)=$P(IBGRP,U,3)  ;516 - baa
"RTN","IBJTU31",18,0)
BPPQ Q
"RTN","IBJTU31",19,0)
 ;
"RTN","IBJTU31",20,0)
PST(IBIFN) ; called by insurance screens ACTION PROTOCOL ENTRY ACTION code, allow user to choose which policy
"RTN","IBJTU31",21,0)
 ; to display ins screens for default will be either the primary or last viewed
"RTN","IBJTU31",22,0)
 ; IBPOLICY used by this procedure to define last viewed, must be killed when exiting primary screen (CI)
"RTN","IBJTU31",23,0)
 ;
"RTN","IBJTU31",24,0)
 N IBY,IBX,X,Y S IBY=0
"RTN","IBJTU31",25,0)
 D BPP(IBIFN,.IBX)
"RTN","IBJTU31",26,0)
 I IBX<1 S IBY=-1 G PSTQ ; bill has no policies
"RTN","IBJTU31",27,0)
 I IBX=1 S IBY=$O(IBX(0)),IBY=IBX(IBY) G PSTQ ; bill has only primary policy
"RTN","IBJTU31",28,0)
 S IBPOLICY=$S($G(IBPOLICY):IBPOLICY,1:$O(IBX(0))) I 'IBPOLICY G PSTQ
"RTN","IBJTU31",29,0)
 W ! D DBPOL(.IBX)
"RTN","IBJTU31",30,0)
 S DIR("?")="Only policies associated with this bill may be chosen: Primary, Secondary, or Tertiary."
"RTN","IBJTU31",31,0)
 S DIR(0)="SOB^P:Primary;S:Secondary;T:Tertiary",DIR(0)=$P(DIR(0),";",1,IBX)
"RTN","IBJTU31",32,0)
 S DIR("A")="Select Policy",DIR("B")=$S(IBPOLICY=2:"S",IBPOLICY=3:"T",1:"P") D ^DIR K DIR
"RTN","IBJTU31",33,0)
 I Y?1U S IBY=$S(Y="P":1,Y="S":2,Y="T":3,1:0),IBPOLICY=IBY,IBY=$G(IBX(IBY))
"RTN","IBJTU31",34,0)
PSTQ Q IBY
"RTN","IBJTU31",35,0)
 ;
"RTN","IBJTU31",36,0)
DBPOL(IBINS) ; display patient policy info for all carriers of a bill, input array from BPP
"RTN","IBJTU31",37,0)
 ;
"RTN","IBJTU31",38,0)
 N IBI,IBCDFN,IBCNS0
"RTN","IBJTU31",39,0)
 W !,?12,"Carrier",?39,"Subscriber ID",?62,"Group #",!,?12,"--------------------------------------------------------------------"
"RTN","IBJTU31",40,0)
 ;
"RTN","IBJTU31",41,0)
 S IBI=0 F  S IBI=$O(IBINS(IBI)) Q:'IBI  D
"RTN","IBJTU31",42,0)
 . S IBCDFN=$P(IBINS(IBI),U,3,99),IBCNS0=$G(^DIC(36,+IBCDFN,0))
"RTN","IBJTU31",43,0)
 . W !,$S(IBI=2:"Secondary",IBI=3:"Tertiary",1:"Primary")_": ",?12,$E($P(IBCNS0,U,1),1,25),?39,$P(IBCDFN,U,2),?62,$P(IBCDFN,U,3)
"RTN","IBJTU31",44,0)
 W !
"RTN","IBJTU31",45,0)
DBPOLQ Q
"RTN","IBJTU31",46,0)
 ;
"RTN","IBJTU31",47,0)
MINS(IBIFN) ;Called by IBJT LIST TEMPLATE screens and RCRC LIST TEMPLATES
"RTN","IBJTU31",48,0)
 ; Return true if Bill has multiple Insurance Policies
"RTN","IBJTU31",49,0)
 N IBDM,IBY S IBY=0
"RTN","IBJTU31",50,0)
 S IBDM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBJTU31",51,0)
 S IBY=$S(+$P(IBDM,U,13):1,+$P(IBDM,U,14):1,1:0)
"RTN","IBJTU31",52,0)
MINSQ Q IBY
"RTN","IBJTU31",53,0)
 ;
"RTN","IBJTU31",54,0)
REF(IBIFN) ;Called by IBJT LIST TEMPLATE screens
"RTN","IBJTU31",55,0)
 ;Return Referral Date if Bill is Referred
"RTN","IBJTU31",56,0)
 N IBRDT,X
"RTN","IBJTU31",57,0)
 S IBRDT="IBRDT"
"RTN","IBJTU31",58,0)
 D DIQ^RCJIBFN2(IBIFN,64,.IBRDT)
"RTN","IBJTU31",59,0)
REFQ Q +$G(IBRDT(430,IBIFN,64,"I"))
"RTN","IBJTU31",60,0)
 ;IBJTU31
"RTN","IBNCPDP3")
0^94^B84489638^B84831779
"RTN","IBNCPDP3",1,0)
IBNCPDP3 ;OAK/ELZ - STORES NDC/AWP UPDATES ;11/14/07  13:18
"RTN","IBNCPDP3",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,342,363,383,384,411,435,452,516**;21-MAR-94;Build 123
"RTN","IBNCPDP3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPDP3",4,0)
 ;
"RTN","IBNCPDP3",5,0)
 ; Reference to ^PRCASER1 supported by IA# 593
"RTN","IBNCPDP3",6,0)
 ; Reference to BPS RESPONSES file (#9002313.03) supported by IA# 4813
"RTN","IBNCPDP3",7,0)
 ;
"RTN","IBNCPDP3",8,0)
 ;
"RTN","IBNCPDP3",9,0)
UPAWP(IBNDC,IBAWP,IBADT) ; updates AWP prices for NDCs
"RTN","IBNCPDP3",10,0)
 ;
"RTN","IBNCPDP3",11,0)
 N IBITEM,IBCS
"RTN","IBNCPDP3",12,0)
 ;
"RTN","IBNCPDP3",13,0)
 ;
"RTN","IBNCPDP3",14,0)
 S IBCS=$P($G(^IBE(350.9,1,9)),"^",12)
"RTN","IBNCPDP3",15,0)
 I 'IBCS Q "0^Unable to find Charge Set"
"RTN","IBNCPDP3",16,0)
 ;
"RTN","IBNCPDP3",17,0)
 S IBNDC=$$NDC^IBNCPNB(IBNDC)
"RTN","IBNCPDP3",18,0)
 ;
"RTN","IBNCPDP3",19,0)
 S IBITEM=+$$ADDBI^IBCREF("NDC",IBNDC) I IBITEM Q "0^Unable to add item"
"RTN","IBNCPDP3",20,0)
 ;
"RTN","IBNCPDP3",21,0)
 I '$$ADDCI^IBCREF(IBCS,IBITEM,IBADT,IBAWP) Q "0^Unable to add charge"
"RTN","IBNCPDP3",22,0)
 ;
"RTN","IBNCPDP3",23,0)
 Q 1
"RTN","IBNCPDP3",24,0)
 ;
"RTN","IBNCPDP3",25,0)
 ;
"RTN","IBNCPDP3",26,0)
 ;
"RTN","IBNCPDP3",27,0)
 ;
"RTN","IBNCPDP3",28,0)
REVERSE(DFN,IBD,IBAUTO) ;process reversed claims
"RTN","IBNCPDP3",29,0)
 N IBIFN,I,IB,IBIL,IBCHG,IBCRES,IBY,X,Y,DA,DIE,DR,IBADT,IBLOCK,IBLDT
"RTN","IBNCPDP3",30,0)
 N IBNOW,IBDUZ,IBCR,IBRELC,IBCC,IBPAP,IBRXN,IBFIL,IBRTS,IBARES,IBUSR
"RTN","IBNCPDP3",31,0)
 N IBLGL,IBLDT
"RTN","IBNCPDP3",32,0)
 S IBDUZ=.5
"RTN","IBNCPDP3",33,0)
 S IBLOCK=0
"RTN","IBNCPDP3",34,0)
 ; find bill number
"RTN","IBNCPDP3",35,0)
 I 'DFN S IBY="0^No patient" G REVQ
"RTN","IBNCPDP3",36,0)
 I '$L($G(IBD("CLAIMID"))) S IBY="0^Missing ECME Number" G REVQ
"RTN","IBNCPDP3",37,0)
 S IBADT=+$G(IBD("DOS")) I 'IBADT S IBY="0^Missing Date of Service" G REVQ
"RTN","IBNCPDP3",38,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBY="0^No Rx IEN" G REVQ
"RTN","IBNCPDP3",39,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBY="0^No fill number" G REVQ
"RTN","IBNCPDP3",40,0)
 I $E($G(IBD("RESPONSE")),1)="R" D  G REVQ:+'$G(IBRTS)
"RTN","IBNCPDP3",41,0)
 . S IBY="0^REVERSAL rejected by payer"
"RTN","IBNCPDP3",42,0)
 . S IBRTS=$$RTS(IBD("REVERSAL REASON"))
"RTN","IBNCPDP3",43,0)
 ;
"RTN","IBNCPDP3",44,0)
 D CANC^IBNCPDP6(IBRXN_";"_IBFIL) ; cancel 1st party charge for TRICARE
"RTN","IBNCPDP3",45,0)
 ;
"RTN","IBNCPDP3",46,0)
 S IBD("BCID")=$$BCID^IBNCPDP4(IBD("CLAIMID"),IBADT)
"RTN","IBNCPDP3",47,0)
 L +^DGCR(399,"AG",IBD("BCID")):15 E  S IBY="0^Cannot lock ECME number" G REVQ
"RTN","IBNCPDP3",48,0)
 S IBLOCK=1
"RTN","IBNCPDP3",49,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP3",50,0)
 S IBLDT=$$FMADD^XLFDT(DT,1) F  S IBLGL=$O(^XTMP("IBNCPLDT"_IBLDT),-1),IBLDT=$E(IBLGL,9,15) Q:IBLDT<$$FMADD^XLFDT(DT,-3)!(IBLGL'["IBNCPLDT")  I $D(^XTMP(IBLGL,IBD("BCID"))) S ^(IBD("BCID"))="" Q
"RTN","IBNCPDP3",51,0)
 S IBIFN=$$MATCH^IBNCPDP2(IBD("BCID"),$G(IBD("RXCOB")))
"RTN","IBNCPDP3",52,0)
 I $D(IBD("CLOSE REASON")),'$D(IBD("DROP TO PAPER")) S IBD("DROP TO PAPER")=""
"RTN","IBNCPDP3",53,0)
 S IBCR=+$G(IBD("CLOSE REASON"))
"RTN","IBNCPDP3",54,0)
 S IBPAP=$G(IBD("DROP TO PAPER"))
"RTN","IBNCPDP3",55,0)
 S IBRELC=$G(IBD("RELEASE COPAY"))
"RTN","IBNCPDP3",56,0)
 S IBCC=$G(IBD("CLOSE COMMENT"))
"RTN","IBNCPDP3",57,0)
 D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,IBCR,IBPAP,IBRELC,IBCC,IBUSR)
"RTN","IBNCPDP3",58,0)
 I 'IBIFN S IBY="0^"_$S(IBPAP:"Dropped to paper",IBCR>1:"Set non-billable reason in CT",1:"Cannot find the bill to reverse") G REVQ
"RTN","IBNCPDP3",59,0)
 ;
"RTN","IBNCPDP3",60,0)
 F I=0,"S" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBNCPDP3",61,0)
 I IB(0)="" S IBY="0^No data in bill" G REVQ
"RTN","IBNCPDP3",62,0)
 I +$P(IB("S"),U,16),$P(IB("S"),U,17)]"" S IBY="0^Bill already cancelled" G REVQ
"RTN","IBNCPDP3",63,0)
 ;
"RTN","IBNCPDP3",64,0)
 S:'$D(IBCRES) IBCRES="ECME PRESCRIPTION REVERSED"
"RTN","IBNCPDP3",65,0)
 S DA=IBIFN,DR="16////1;19////"_IBCRES,DIE="^DGCR(399,"
"RTN","IBNCPDP3",66,0)
 D ^DIE K DA,DIE,DR
"RTN","IBNCPDP3",67,0)
 ;
"RTN","IBNCPDP3",68,0)
 ; - decrease out the receivable in AR
"RTN","IBNCPDP3",69,0)
 S IB("U1")=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBNCPDP3",70,0)
 S IBIL=$P($G(^PRCA(430,IBIFN,0)),"^")
"RTN","IBNCPDP3",71,0)
 S IBCHG=$S(IB("U1")']"":0,$P(IB("U1"),"^",1)]"":$P(IB("U1"),"^",1),1:0)
"RTN","IBNCPDP3",72,0)
 ;
"RTN","IBNCPDP3",73,0)
 S X="21^"_IBCHG_"^"_IBIL_"^"_IBDUZ_"^"_DT_"^"_IBCRES
"RTN","IBNCPDP3",74,0)
 D ^PRCASER1
"RTN","IBNCPDP3",75,0)
 S IBARES=Y
"RTN","IBNCPDP3",76,0)
 I IBARES<0 S IBY=IBARES D BULL
"RTN","IBNCPDP3",77,0)
 ;
"RTN","IBNCPDP3",78,0)
 S IBY=$S(IBARES<0:"0^"_$P(IBARES,"^",2),1:1)
"RTN","IBNCPDP3",79,0)
 ;
"RTN","IBNCPDP3",80,0)
 I IBDUZ'=DUZ D  ; set the real user
"RTN","IBNCPDP3",81,0)
 . N IBI,IBT S IBI=18,IBT(399,IBIFN_",",IBI)=IBDUZ D FILE^DIE("","IBT")
"RTN","IBNCPDP3",82,0)
 ;
"RTN","IBNCPDP3",83,0)
REVQ ; perform end of job tasks
"RTN","IBNCPDP3",84,0)
 D LOG^IBNCPDP2($S($G(IBAUTO)=1:"AUTO REVERSE",$G(IBAUTO)=2:"BILL CANCELLED",1:"REVERSE"),IBY)
"RTN","IBNCPDP3",85,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP3",86,0)
 I IBY=1,$G(IBIFN) S IBY=+IBIFN
"RTN","IBNCPDP3",87,0)
 Q IBY
"RTN","IBNCPDP3",88,0)
 ;
"RTN","IBNCPDP3",89,0)
RTS(IBRR) ; Return to Stock processing on Released Rx
"RTN","IBNCPDP3",90,0)
 ; input - IBRR = reversal reason
"RTN","IBNCPDP3",91,0)
 ;         IBCRSN = passed in by reference
"RTN","IBNCPDP3",92,0)
 ; output - 0 = reversal not due to a Rx RETURN TO STOCK or Rx DELETE
"RTN","IBNCPDP3",93,0)
 ;          1 = reversal due to a Rx RETURN TO STOCK or Rx DELETE
"RTN","IBNCPDP3",94,0)
 ;          IBCRSN = charge removal reason
"RTN","IBNCPDP3",95,0)
 N IBTRKRN,IBLOCK2,IBCMT,DA,DIE,DR
"RTN","IBNCPDP3",96,0)
 ;
"RTN","IBNCPDP3",97,0)
 I IBRR'="RX RETURNED TO STOCK"&(IBRR'="RX DELETED") Q 0
"RTN","IBNCPDP3",98,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP3",99,0)
 I 'IBTRKRN Q 0  ; CT record does not exist
"RTN","IBNCPDP3",100,0)
 I '$P($G(^IBT(356,IBTRKRN,0)),U,11) Q 0  ; BILL does not exist
"RTN","IBNCPDP3",101,0)
 S IBCRES=$$GETRSN(DFN,IBRXN,IBFIL)  ; recorded in file 399 entry
"RTN","IBNCPDP3",102,0)
 L +^IBT(356,IBTRKRN):5 S IBLOCK2=$T
"RTN","IBNCPDP3",103,0)
 S DIE="^IBT(356,",DA=IBTRKRN,IBCMT="Rx RTS - May Need Refund"
"RTN","IBNCPDP3",104,0)
 S DR="1.08////"_IBCMT
"RTN","IBNCPDP3",105,0)
 D ^DIE
"RTN","IBNCPDP3",106,0)
 I IBLOCK2 L -^IBT(356,IBTRKRN)
"RTN","IBNCPDP3",107,0)
 Q 1
"RTN","IBNCPDP3",108,0)
 ;
"RTN","IBNCPDP3",109,0)
BULL ; Generate a bulletin if there is an error in cancelling the claim.
"RTN","IBNCPDP3",110,0)
 N IBC,IBT,IBPT,IBGRP,XMDUZ,XMTEXT,XMSUB,XMY
"RTN","IBNCPDP3",111,0)
 ;
"RTN","IBNCPDP3",112,0)
 S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBNCPDP3",113,0)
 S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - ERROR ENCOUNTERED"
"RTN","IBNCPDP3",114,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBNCPDP3",115,0)
 S XMY(IBDUZ)=""
"RTN","IBNCPDP3",116,0)
 S XMY("G.IBCNR EPHARM")=""
"RTN","IBNCPDP3",117,0)
 ;
"RTN","IBNCPDP3",118,0)
 S IBT(1)="An error occurred while cancelling the Pharmacy claim from ECME"
"RTN","IBNCPDP3",119,0)
 S IBT(2)="fiscal intermediary for the following patient:"
"RTN","IBNCPDP3",120,0)
 S IBT(3)=" " S IBC=3
"RTN","IBNCPDP3",121,0)
 D PAT^IBAERR1 ; Accepts IBDUZ
"RTN","IBNCPDP3",122,0)
 S IBC=IBC+1,IBT(IBC)="   Bill #: "_IBIL
"RTN","IBNCPDP3",123,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBNCPDP3",124,0)
 S IBC=IBC+1,IBT(IBC)="The following error was encountered:"
"RTN","IBNCPDP3",125,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBNCPDP3",126,0)
 D ERR^IBAERR1
"RTN","IBNCPDP3",127,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBNCPDP3",128,0)
 S IBC=IBC+1,IBT(IBC)="Please review the circumstances surrounding this error and decrease"
"RTN","IBNCPDP3",129,0)
 S IBC=IBC+1,IBT(IBC)="out this receivable in Accounts Receivable if necessary."
"RTN","IBNCPDP3",130,0)
 D ^XMD
"RTN","IBNCPDP3",131,0)
 Q
"RTN","IBNCPDP3",132,0)
 ;
"RTN","IBNCPDP3",133,0)
GETRSN(DFN,IBRXN,IBFIL) ;
"RTN","IBNCPDP3",134,0)
 ; retrieve charge removal reason from file 354.71
"RTN","IBNCPDP3",135,0)
 ; input - DFN,IBRXN=Rx ien,IBFIL=fill number
"RTN","IBNCPDP3",136,0)
 ; output - charge removal reason
"RTN","IBNCPDP3",137,0)
 N IBDT,IBDA,IBXRSN,IBRXFIL,IB0
"RTN","IBNCPDP3",138,0)
 S (IBDT,IBDA)=0,IBXRSN=""
"RTN","IBNCPDP3",139,0)
 S IBRXFIL=$S('IBFIL:IBRXN,1:IBRXN_";"_IBFIL)
"RTN","IBNCPDP3",140,0)
 F  S IBDT=$O(^IBAM(354.71,"AD",DFN,IBDT)) Q:'IBDT  Q:IBXRSN]""  D
"RTN","IBNCPDP3",141,0)
 . F  S IBDA=$O(^IBAM(354.71,"AD",DFN,IBDT,IBDA)) Q:'IBDA  Q:IBXRSN]""  D
"RTN","IBNCPDP3",142,0)
 . . S IB0=^IBAM(354.71,IBDA,0)
"RTN","IBNCPDP3",143,0)
 . . Q:$P(IB0,"^",6)'[IBRXFIL
"RTN","IBNCPDP3",144,0)
 . . S IBXRSN=$$GET1^DIQ(354.71,IBDA_",",.19)
"RTN","IBNCPDP3",145,0)
 S:IBXRSN']"" IBXRSN="CHARGE REMOVAL REASON NOT FOUND"
"RTN","IBNCPDP3",146,0)
 Q "Reversal Rej, no pymt due<>"_IBXRSN
"RTN","IBNCPDP3",147,0)
 ;
"RTN","IBNCPDP3",148,0)
ELIG(DFN,IBD) ; process an Eligibility response
"RTN","IBNCPDP3",149,0)
 N IBRES,ERACT,IDUZ,IBFDA,BPRIEN,IBUSR,IBCDFN,IBPL,IBERR,EPHSRC,INSIEN,BUDA,PTDA,PLDA,ICDA,BUFF,BPSR,ZR,BPRSUB,BPRGRP,IBNCPDPELIG
"RTN","IBNCPDP3",150,0)
 S IBRES=""
"RTN","IBNCPDP3",151,0)
 I '$G(DFN) S IBRES="0^No patient - ELIG response" G ELIGX
"RTN","IBNCPDP3",152,0)
 S BPRIEN=+$G(IBD("RESPIEN"))     ; response file ien
"RTN","IBNCPDP3",153,0)
 S IBUSR=+$G(IBD("USER"))         ; DUZ of user
"RTN","IBNCPDP3",154,0)
 S IBCDFN=+$G(IBD("POLICY"))      ; pt. ins. policy subfile 2.312 ien
"RTN","IBNCPDP3",155,0)
 S IBPL=+$G(IBD("PLAN"))          ; plan 355.3 ien
"RTN","IBNCPDP3",156,0)
 ;
"RTN","IBNCPDP3",157,0)
 ; data integrity checks
"RTN","IBNCPDP3",158,0)
 I 'BPRIEN S IBRES="0^No BPS RESPONSES file ien" G ELIGX
"RTN","IBNCPDP3",159,0)
 I '$D(^BPSR(BPRIEN,0)) S IBRES="0^No BPS RESPONSES file data exists for this ien" G ELIGX
"RTN","IBNCPDP3",160,0)
 S ZR=BPRIEN_","
"RTN","IBNCPDP3",161,0)
 D GETS^DIQ(9002313.03,ZR,"103;301;302","IEN","BPSR")
"RTN","IBNCPDP3",162,0)
 I $G(BPSR(9002313.03,ZR,103,"E"))'="E1" S IBRES="0^BPS Response is not an E1 Transaction Code" G ELIGX
"RTN","IBNCPDP3",163,0)
 I 'IBCDFN S IBRES="0^No pt. policy ien" G ELIGX
"RTN","IBNCPDP3",164,0)
 I '$D(^DPT(DFN,.312,IBCDFN,0)) S IBRES="0^Pt. insurance policy data not found" G ELIGX
"RTN","IBNCPDP3",165,0)
 I +$P($G(^DPT(DFN,.312,IBCDFN,0)),U,18)'=IBPL S IBRES="0^Mismatch on plan ien" G ELIGX
"RTN","IBNCPDP3",166,0)
 ;
"RTN","IBNCPDP3",167,0)
 ; build a buffer entry based primarily on the ins. policy in the pt. file
"RTN","IBNCPDP3",168,0)
 K IBERR
"RTN","IBNCPDP3",169,0)
 S IDUZ=IBUSR
"RTN","IBNCPDP3",170,0)
 S IBNCPDPELIG=1   ; special variable indicating to eIV where the buffer entry is coming from
"RTN","IBNCPDP3",171,0)
 D PT^IBCNEBF(DFN,IBCDFN,"","",1,.IBERR)     ; build and add buffer entry
"RTN","IBNCPDP3",172,0)
 I $G(IBERR)'="" S IBRES="0^"_IBERR G ELIGX
"RTN","IBNCPDP3",173,0)
 I '$G(IBFDA) S IBRES="0^No Buffer entry was created" G ELIGX
"RTN","IBNCPDP3",174,0)
 I '$D(^IBA(355.33,IBFDA,0)) S IBRES="0^Buffer entry doesn't exist" G ELIGX
"RTN","IBNCPDP3",175,0)
 S EPHSRC=+$O(^IBE(355.12,"C","E-PHARMACY",0))    ; source of information
"RTN","IBNCPDP3",176,0)
 I 'EPHSRC S IBRES="0^Cannot find e-Pharmacy Source of Information in dictionary" G ELIGX
"RTN","IBNCPDP3",177,0)
 S INSIEN=+$P($G(^DPT(DFN,.312,IBCDFN,0)),U,1)
"RTN","IBNCPDP3",178,0)
 I 'INSIEN S IBRES="0^Insurance Company pointer not there" G ELIGX
"RTN","IBNCPDP3",179,0)
 ;
"RTN","IBNCPDP3",180,0)
 ; complete the buffer entry
"RTN","IBNCPDP3",181,0)
 S BUDA=+IBFDA_","              ; IENS for the buffer entry
"RTN","IBNCPDP3",182,0)
 S PTDA=IBCDFN_","_DFN_","      ; IENS for the pt. ins. policy subfile entry 2.312
"RTN","IBNCPDP3",183,0)
 S PLDA=IBPL_","                ; IENS for the plan entry 355.3
"RTN","IBNCPDP3",184,0)
 S ICDA=INSIEN_","              ; IENS for the insurance company entry 36
"RTN","IBNCPDP3",185,0)
 ;
"RTN","IBNCPDP3",186,0)
 S BUFF(355.33,BUDA,60.1)=$$GET1^DIQ(2.312,PTDA,4.01,"I")
"RTN","IBNCPDP3",187,0)
 S BUFF(355.33,BUDA,60.11)=$$GET1^DIQ(2.312,PTDA,4.02,"I")
"RTN","IBNCPDP3",188,0)
 ;
"RTN","IBNCPDP3",189,0)
 S BUFF(355.33,BUDA,40.01)=$$GET1^DIQ(355.3,PLDA,.02,"I")
"RTN","IBNCPDP3",190,0)
 S BUFF(355.33,BUDA,40.04)=$$GET1^DIQ(355.3,PLDA,.05,"I")
"RTN","IBNCPDP3",191,0)
 S BUFF(355.33,BUDA,40.05)=$$GET1^DIQ(355.3,PLDA,.06,"I")
"RTN","IBNCPDP3",192,0)
 S BUFF(355.33,BUDA,40.06)=$$GET1^DIQ(355.3,PLDA,.12,"I")
"RTN","IBNCPDP3",193,0)
 S BUFF(355.33,BUDA,40.07)=$$GET1^DIQ(355.3,PLDA,.07,"I")
"RTN","IBNCPDP3",194,0)
 S BUFF(355.33,BUDA,40.08)=$$GET1^DIQ(355.3,PLDA,.08,"I")
"RTN","IBNCPDP3",195,0)
 S BUFF(355.33,BUDA,40.09)=$$GET1^DIQ(355.3,PLDA,.09,"I")
"RTN","IBNCPDP3",196,0)
 S BUFF(355.33,BUDA,40.1)=$$GET1^DIQ(355.3,PLDA,6.02,"I")
"RTN","IBNCPDP3",197,0)
 S BUFF(355.33,BUDA,40.11)=$$GET1^DIQ(355.3,PLDA,6.03,"I")
"RTN","IBNCPDP3",198,0)
 ;
"RTN","IBNCPDP3",199,0)
 S BUFF(355.33,BUDA,20.02)=$$GET1^DIQ(36,ICDA,.131,"I")
"RTN","IBNCPDP3",200,0)
 S BUFF(355.33,BUDA,20.05)=$$GET1^DIQ(36,ICDA,1,"I")
"RTN","IBNCPDP3",201,0)
 S BUFF(355.33,BUDA,21.01)=$$GET1^DIQ(36,ICDA,.111,"I")
"RTN","IBNCPDP3",202,0)
 S BUFF(355.33,BUDA,21.02)=$$GET1^DIQ(36,ICDA,.112,"I")
"RTN","IBNCPDP3",203,0)
 S BUFF(355.33,BUDA,21.03)=$$GET1^DIQ(36,ICDA,.113,"I")
"RTN","IBNCPDP3",204,0)
 S BUFF(355.33,BUDA,21.04)=$$GET1^DIQ(36,ICDA,.114,"I")
"RTN","IBNCPDP3",205,0)
 S BUFF(355.33,BUDA,21.05)=$$GET1^DIQ(36,ICDA,.115,"I")
"RTN","IBNCPDP3",206,0)
 S BUFF(355.33,BUDA,21.06)=$$GET1^DIQ(36,ICDA,.116,"I")
"RTN","IBNCPDP3",207,0)
 ;
"RTN","IBNCPDP3",208,0)
 ; update buffer entry with some additional information
"RTN","IBNCPDP3",209,0)
 S BUFF(355.33,BUDA,.03)=EPHSRC      ; source of info
"RTN","IBNCPDP3",210,0)
 S BUFF(355.33,BUDA,.12)=""          ; make sure eIV related fields are blank
"RTN","IBNCPDP3",211,0)
 S BUFF(355.33,BUDA,.13)=""
"RTN","IBNCPDP3",212,0)
 S BUFF(355.33,BUDA,.14)=""
"RTN","IBNCPDP3",213,0)
 S BUFF(355.33,BUDA,.15)=""
"RTN","IBNCPDP3",214,0)
 S BUFF(355.33,BUDA,.17)=BPRIEN      ; BPS response file ien
"RTN","IBNCPDP3",215,0)
 ;
"RTN","IBNCPDP3",216,0)
 ; update buffer entry with data pulled from BPS response file
"RTN","IBNCPDP3",217,0)
 ; only 2 fields are applicable here:  group# and cardholder ID
"RTN","IBNCPDP3",218,0)
 ;
"RTN","IBNCPDP3",219,0)
 S BPRSUB=$G(BPSR(9002313.03,ZR,302,"E"))         ; subscriber/cardholder ID
"RTN","IBNCPDP3",220,0)
 ;I BPRSUB'="" S BUFF(355.33,BUDA,60.04)=BPRSUB    ; update buffer if field exists
"RTN","IBNCPDP3",221,0)
 I BPRSUB'="" S BUFF(355.33,BUDA,90.03)=BPRSUB    ; update new field - 516 - baa
"RTN","IBNCPDP3",222,0)
 ;
"RTN","IBNCPDP3",223,0)
 S BPRGRP=$G(BPSR(9002313.03,ZR,301,"E"))         ; group number
"RTN","IBNCPDP3",224,0)
 ;I BPRGRP'="" S BUFF(355.33,BUDA,40.03)=BPRGRP    ; update buffer if field exists
"RTN","IBNCPDP3",225,0)
 I BPRGRP'="" S BUFF(355.33,BUDA,90.02)=BPRGRP    ; update new field - 516 - baa
"RTN","IBNCPDP3",226,0)
 ;
"RTN","IBNCPDP3",227,0)
 D FILE^DIE(,"BUFF")
"RTN","IBNCPDP3",228,0)
 ;
"RTN","IBNCPDP3",229,0)
 S IBRES=1  ; all good
"RTN","IBNCPDP3",230,0)
 ;
"RTN","IBNCPDP3",231,0)
ELIGX ;
"RTN","IBNCPDP3",232,0)
 Q IBRES
"RTN","IBNCPDP3",233,0)
 ;
"RTN","IBNCPDP3",234,0)
 ;IBNCPDP3
"RTN","IBNCPDP5")
0^161^B80792303^B80347970
"RTN","IBNCPDP5",1,0)
IBNCPDP5 ;ALB/BDB - PROCESSING FOR ECME RESP FOR SECONDARY ;11/15/07 09:43
"RTN","IBNCPDP5",2,0)
 ;;2.0;INTEGRATED BILLING;**411,452,526,516**;21-MAR-94;Build 123
"RTN","IBNCPDP5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPDP5",4,0)
 ;
"RTN","IBNCPDP5",5,0)
BILLSEC(DFN,IBD) ; Create secondary bill
"RTN","IBNCPDP5",6,0)
 ;
"RTN","IBNCPDP5",7,0)
 N IBBCB,IBBCF,IBBCT,IBCAN,IBCCR,IBCDFN,IBCNFN,IBCOB,IBCTCOPY,IBDBC
"RTN","IBNCPDP5",8,0)
 N IBIFN,IBINS,IBINSN,IBOFFSET,IBPLAN,IBY,IBAMT,IBRES,IBDUP
"RTN","IBNCPDP5",9,0)
 ;
"RTN","IBNCPDP5",10,0)
 ;if the primary claim was rejected and we don't have any primary bill for the RX/refill (see IBSEND^BPSECMP2 for additional information)
"RTN","IBNCPDP5",11,0)
 I $G(IBD("PRIMREJ"))=1 D
"RTN","IBNCPDP5",12,0)
 . N IBRX,IBRFL,IBREJ,IBDPR,IBRESUL,IBZARR,IBAR433,IBREJINF,DA,DR,DIE,IBRJ,IBRJCODE
"RTN","IBNCPDP5",13,0)
 . S IBRX=+$G(IBD("PRESCRIPTION"))
"RTN","IBNCPDP5",14,0)
 . S IBRFL=+$G(IBD("FILL NUMBER"))
"RTN","IBNCPDP5",15,0)
 . ;check the case when we are resubmitting the secondary claims that was submitted for rejected primary claim - 
"RTN","IBNCPDP5",16,0)
 . ;then we have already created a "dummy" primary bill and don't want to do this again
"RTN","IBNCPDP5",17,0)
 . I +$$RXBILL^IBNCPUT3(IBRX,IBRFL,"P",,.IBZARR)>0 S IBD("PRIOR PAYMENT")=0,IBD("PRIMARY BILL")=+$O(IBZARR(0)) Q  ;quit if any primary bills exist, set IBD("PRIMARY BILL") to the first existing bill ien
"RTN","IBNCPDP5",18,0)
 . ; create a "dummy" primary bill for the primary claim as it would be a payable primary claim with 0$ amount: 
"RTN","IBNCPDP5",19,0)
 . S IBDPR("PAID")=IBD("PAID")
"RTN","IBNCPDP5",20,0)
 . S IBDPR("PLAN")=IBD("PLAN")
"RTN","IBNCPDP5",21,0)
 . S IBDPR("RTYPE")=IBD("RTYPE")
"RTN","IBNCPDP5",22,0)
 . S IBD("PAID")=0
"RTN","IBNCPDP5",23,0)
 . S IBD("PLAN")=IBD("PRIMPLAN")
"RTN","IBNCPDP5",24,0)
 . S IBD("RTYPE")=""
"RTN","IBNCPDP5",25,0)
 . S IBD("RXCOB")=1
"RTN","IBNCPDP5",26,0)
 . S IBRESUL=$$BILL^IBNCPDP2(DFN,.IBD)
"RTN","IBNCPDP5",27,0)
 . ; the previous step should do contractual adjustment, if not - then we need to do something else here to adjust this amount and close the primary bill
"RTN","IBNCPDP5",28,0)
 . S IBD("PAID")=IBDPR("PAID")
"RTN","IBNCPDP5",29,0)
 . S IBD("PLAN")=IBDPR("PLAN")
"RTN","IBNCPDP5",30,0)
 . S IBD("RTYPE")=IBDPR("RTYPE")
"RTN","IBNCPDP5",31,0)
 . S IBD("RXCOB")=2
"RTN","IBNCPDP5",32,0)
 . S IBD("PRIMARY BILL")=$S(+IBRESUL>1:+IBRESUL,1:"")
"RTN","IBNCPDP5",33,0)
 . S IBD("PRIOR PAYMENT")=0
"RTN","IBNCPDP5",34,0)
 . Q:+IBD("PRIMARY BILL")=0
"RTN","IBNCPDP5",35,0)
 . ; get a reject information from IBD("REJ CODES") (see IBSEND^BPSECMP2) REJS(1,"REJ CODES",1,"08")
"RTN","IBNCPDP5",36,0)
 . S IBREJINF="Auto Dec.: ECME Primary claim rejected - "_$E($$REJINF(.IBD),1,30)
"RTN","IBNCPDP5",37,0)
 . ; put a note with the reject code/reason to AR file #433
"RTN","IBNCPDP5",38,0)
 . S IBAR433=$O(^PRCA(433,"C",+IBD("PRIMARY BILL"),0)) ; ICR# 3336
"RTN","IBNCPDP5",39,0)
 . S DA=IBAR433,DIE="^PRCA(433,",DR="41///"_IBREJINF D ^DIE ; ICR# 3336
"RTN","IBNCPDP5",40,0)
 . ; now quit to continue to create a secondary bill - i.e. allow the rest of the code to do its job
"RTN","IBNCPDP5",41,0)
 . Q
"RTN","IBNCPDP5",42,0)
 ;
"RTN","IBNCPDP5",43,0)
 ; IB*2*452 - esg - check for duplicate response first thing
"RTN","IBNCPDP5",44,0)
 S IBDUP=$$DUP^IBNCPDP2(.IBD) I IBDUP S IBY="0^Sec. Bill# "_$P(IBDUP,U,2)_" exists (Dup)" G BILLQ
"RTN","IBNCPDP5",45,0)
 ;
"RTN","IBNCPDP5",46,0)
 ; bill TRICARE copay if applicable
"RTN","IBNCPDP5",47,0)
 I $G(IBD("COPAY")) D BILL^IBNCPDP6($G(IBD("PRESCRIPTION"))_";"_$G(IBD("FILL NUMBER")),IBD("COPAY"),$G(IBD("RTYPE")))
"RTN","IBNCPDP5",48,0)
 ;
"RTN","IBNCPDP5",49,0)
 S IBCAN=2,IBDBC=DT,IBBCB=DUZ,IBCTCOPY=1,IBY=1
"RTN","IBNCPDP5",50,0)
 S IBIFN=$G(IBD("PRIMARY BILL")) I IBIFN="" S IBY="0^Missing the primary bill." G BILLQ
"RTN","IBNCPDP5",51,0)
 S IBPLAN=$G(IBD("PLAN")) I IBPLAN="" S IBY="0^The Secondary Payer is not a valid Insurance Co." G BILLQ
"RTN","IBNCPDP5",52,0)
 S IBCDFN=$$PLANN^IBNCPDPU(DFN,IBD("PLAN"),IBD("DOS"))
"RTN","IBNCPDP5",53,0)
 I 'IBCDFN S IBY="-1^Plan not found in Patient's Profile." G BILLQ
"RTN","IBNCPDP5",54,0)
 S IBCNFN=$P(IBCDFN,"^",2)
"RTN","IBNCPDP5",55,0)
 S IBINSN=+^IBA(355.3,IBPLAN,0) ;insurance company
"RTN","IBNCPDP5",56,0)
 S IBINS=$G(^DIC(36,+IBINSN,0)) I IBINS="" S IBY="0^The Secondary Payer is not a valid Insurance Co." G BILLQ
"RTN","IBNCPDP5",57,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="102////"_IBINSN_";113////"_IBCNFN D ^DIE K DA,DR,DIE
"RTN","IBNCPDP5",58,0)
 S IBCOB("0",15)="" ;.15 BILL COPIED FROM 
"RTN","IBNCPDP5",59,0)
 S IBCOB("0",21)=$S($G(IBD("RXCOB"))=1:"P",$G(IBD("RXCOB"))=2:"S",1:"P") ;.21 CURRENT BILL PAYER SEQUENCE
"RTN","IBNCPDP5",60,0)
 S IBCOB("M1",5)=IBD("PRIMARY BILL") ;125 PRIMARY BILL # [5P:399]
"RTN","IBNCPDP5",61,0)
 S IBCOB("U2",4)=IBD("PRIOR PAYMENT") ;218 PRIMARY PRIOR PAYMENT [4N]
"RTN","IBNCPDP5",62,0)
 ;
"RTN","IBNCPDP5",63,0)
 S IBBCF=IBIFN ;this is the claim we are copying FROM
"RTN","IBNCPDP5",64,0)
 S IBIDS(.15)=IBIFN K IBIFN
"RTN","IBNCPDP5",65,0)
STEP2 ;
"RTN","IBNCPDP5",66,0)
 S IBND0=^DGCR(399,IBIDS(.15),0) I $D(^("U")) S IBNDU=^("U")
"RTN","IBNCPDP5",67,0)
 ;
"RTN","IBNCPDP5",68,0)
 ; *** Note - all these fields should also be included in WHERE^IBCCC1
"RTN","IBNCPDP5",69,0)
 ;            ECME claims should NOT define the 399,.27 - BILL CHARGE TYPE - leave it blank for RX COST Charge Set
"RTN","IBNCPDP5",70,0)
 ;
"RTN","IBNCPDP5",71,0)
 F I=2:1:12 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBNCPDP5",72,0)
 F I=16:1:19,21:1:26 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBNCPDP5",73,0)
 F I=151,152,155 S IBIDS(I)=$P(IBNDU,"^",(I-150))
"RTN","IBNCPDP5",74,0)
 S IBIDS(159.5)=$P(IBNDU,U,20)
"RTN","IBNCPDP5",75,0)
 S DFN=IBIDS(.02) D DEM^VADPT
"RTN","IBNCPDP5",76,0)
 ;set rate type
"RTN","IBNCPDP5",77,0)
 I $G(IBD("RXCOB"))=2,$G(IBD("RTYPE")) S IBIDS(.07)=IBD("RTYPE")
"RTN","IBNCPDP5",78,0)
 S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),"^",14)
"RTN","IBNCPDP5",79,0)
 S PRCASV("SITE")=$P($$SITE^VASITE,"^",3),IBNWBL=""
"RTN","IBNCPDP5",80,0)
 D SETUP^PRCASVC3
"RTN","IBNCPDP5",81,0)
 I $S($P(PRCASV("ARREC"),"^")=-1:1,$P(PRCASV("ARBIL"),"^")=-1:1,1:0) S IBY="0^No Billing Record Set up for: "_$P(PRCASV("ARREC"),"^",2)_" "_$P(PRCASV("ARBIL"),"^",2) G BILLQ
"RTN","IBNCPDP5",82,0)
 S IBIDS(.01)=$P(PRCASV("ARBIL"),"-",2)
"RTN","IBNCPDP5",83,0)
 S IBIDS(.17)=$S($D(IBIDS(.17)):IBIDS(.17),1:PRCASV("ARREC"))
"RTN","IBNCPDP5",84,0)
 S IBIDS(.02)=DFN,IBHV("IBIFN")=$S($G(IBIFN):IBIFN,1:$G(IBIDS(.15)))
"RTN","IBNCPDP5",85,0)
 S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IBIDS(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1),$P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IBIDS(I)
"RTN","IBNCPDP5",86,0)
 S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBNCPDP5",87,0)
 D  ; Protect variables;index entry;replace FT if copy/clone and it changes
"RTN","IBNCPDP5",88,0)
 . N IBHOLD,DIE,DR,DA,X,Y
"RTN","IBNCPDP5",89,0)
 . S IBHOLD("FT")=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBNCPDP5",90,0)
 . S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1 D INDEX^IBCCC2
"RTN","IBNCPDP5",91,0)
 . I IBHOLD("FT"),IBHOLD("FT")'=$P($G(^DGCR(399,IBIFN,0)),U,19) S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBHOLD("FT") D ^DIE
"RTN","IBNCPDP5",92,0)
 S IBYN=1
"RTN","IBNCPDP5",93,0)
 S IBBCT=IBIFN ; bill that the old claim was cloned TO.
"RTN","IBNCPDP5",94,0)
 K %,%DT,I,IB,IBA,IBBT,IBIDS,IBNWBL,J,VADM,X,X1,X2,X3,X4,Y
"RTN","IBNCPDP5",95,0)
 ;
"RTN","IBNCPDP5",96,0)
 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBNCPDP5",97,0)
 ;
"RTN","IBNCPDP5",98,0)
 ;move pure data nodes
"RTN","IBNCPDP5",99,0)
 ; MRD;IB*2.0*516 - Added "In7" nodes.
"RTN","IBNCPDP5",100,0)
 F I="I1","I17","I2","I27","I3","I37","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBNCPDP5",101,0)
 ;
"RTN","IBNCPDP5",102,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBNCPDP5",103,0)
 F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @(I_"^IBCCC2")
"RTN","IBNCPDP5",104,0)
 ;
"RTN","IBNCPDP5",105,0)
 ;move multiple level data
"RTN","IBNCPDP5",106,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @(I_"^IBCCC2")
"RTN","IBNCPDP5",107,0)
 ;
"RTN","IBNCPDP5",108,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBNCPDP5",109,0)
 D COBCHG^IBCCC2(IBIFN,,.IBCOB)
"RTN","IBNCPDP5",110,0)
 ;
"RTN","IBNCPDP5",111,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBNCPDP5",112,0)
 ;
"RTN","IBNCPDP5",113,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBNCPDP5",114,0)
 D PRIOR^IBCCC2(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBNCPDP5",115,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBNCPDP5",116,0)
 ;
"RTN","IBNCPDP5",117,0)
END ;
"RTN","IBNCPDP5",118,0)
 K %,%DT,D,DDH,DIC,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,DGFUNC,DGIFN
"RTN","IBNCPDP5",119,0)
 K DGPCM,DGREV,DGREV00,DGREVHDR,DGRVRCAL,DGXRF1,DFN
"RTN","IBNCPDP5",120,0)
 K I,IB,IBA,IBA1,IBA2,IBAC,IBAD,IBADD1,IBARST,IBBNO,IBBS,IBBT,IBCAN
"RTN","IBNCPDP5",121,0)
 K IBCBCOPY,IBCCC,IBCH,IBCHK,IBCNCOPY,IBCOB,IBDA,IBDD,IBDD1,IBDPT,IBDR
"RTN","IBNCPDP5",122,0)
 K IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBIN,IBINS,IBIP,IBLS,IBN,IBND,IBND0
"RTN","IBNCPDP5",123,0)
 K IBNDS,IBNDU,IBO,IBOA,IBOD,IBPROC,IBPTF,IBQUIT,IBREV,IBST,IBU,IBUC
"RTN","IBNCPDP5",124,0)
 K IBUN,IBV,IBV1,IBW,IBWW,IBX,IBYN,IBZZ,J,K
"RTN","IBNCPDP5",125,0)
 K PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,VA,VADM,VAEL,VAERR,X,X1,X2,X3,X4,Y
"RTN","IBNCPDP5",126,0)
 ;
"RTN","IBNCPDP5",127,0)
 N DA,IBADT,IBDIV,IBDUZ,IBPAID,IBTRIC,X
"RTN","IBNCPDP5",128,0)
 S IBIFN=IBBCT,IBADT=IBD("DOS"),IBDIV=+$G(IBD("DIVISION")),IBDUZ=$S($G(IBD("USER")):IBD("USER"),1:DUZ)
"RTN","IBNCPDP5",129,0)
 ;
"RTN","IBNCPDP5",130,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP5",131,0)
 ; update the primary bill,ECME fields (make sure .27 field is blank)
"RTN","IBNCPDP5",132,0)
 S DR=".17////"_$G(IBD("PRIMARY BILL"))_";.27////@;460////^S X=IBD(""BCID"")" S:$L($G(IBD("AUTH #"))) DR=DR_";461////^S X=IBD(""AUTH #"")"
"RTN","IBNCPDP5",133,0)
 D ^DIE K DA,DR,DIE
"RTN","IBNCPDP5",134,0)
 ;
"RTN","IBNCPDP5",135,0)
 ; if the primary ECME claim was rejected, then do some Claims Tracking updates
"RTN","IBNCPDP5",136,0)
 ; since this secondary claim is payable  - esg 7/8/10
"RTN","IBNCPDP5",137,0)
 I $G(IBD("PRIMREJ"))=1 D
"RTN","IBNCPDP5",138,0)
 . N IBRXN,IBFIL,IBTRKRN,X,Y,D0,DA,DI,DIC,DICR,DIE,DIG,DIH,DIU,DIV,DIW,DQ,DR
"RTN","IBNCPDP5",139,0)
 . S IBRXN=+$G(IBD("PRESCRIPTION"))
"RTN","IBNCPDP5",140,0)
 . S IBFIL=+$G(IBD("FILL NUMBER"))
"RTN","IBNCPDP5",141,0)
 . D SETCT^IBNCPDP2    ; CT updates saying bill has been billed
"RTN","IBNCPDP5",142,0)
 . I '$G(IBTRKRN) Q
"RTN","IBNCPDP5",143,0)
 . S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP5",144,0)
 . S DR=".19///@"                   ; reason not billable - delete it
"RTN","IBNCPDP5",145,0)
 . S DR=DR_";1.03///"_$$NOW^XLFDT   ; CT date last edited
"RTN","IBNCPDP5",146,0)
 . S DR=DR_";1.04///"_IBDUZ         ; CT last edited by
"RTN","IBNCPDP5",147,0)
 . S DR=DR_";1.11///0"              ; ECME Reject flag is 0 - NO
"RTN","IBNCPDP5",148,0)
 . D ^DIE
"RTN","IBNCPDP5",149,0)
 . Q
"RTN","IBNCPDP5",150,0)
 ;
"RTN","IBNCPDP5",151,0)
 ; need to make sure we have computed charges
"RTN","IBNCPDP5",152,0)
 S IBTRIC=$$TRICARE^IBNCPDP6($G(IBD("PRESCRIPTION"))_";"_$G(IBD("FILL NUMBER")))
"RTN","IBNCPDP5",153,0)
 D CHARGES^IBNCPDP2(IBIFN)
"RTN","IBNCPDP5",154,0)
 I $P($G(^DGCR(399,IBIFN,"U1")),U,1)'>0 S IBY="-1^Total Charges for Sec. Bill must be greater than $0." G BILLQ
"RTN","IBNCPDP5",155,0)
 ;
"RTN","IBNCPDP5",156,0)
 ; update the authorize/print fields
"RTN","IBNCPDP5",157,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP5",158,0)
 S DR="9////1;12////"_DT D ^DIE
"RTN","IBNCPDP5",159,0)
 ;
"RTN","IBNCPDP5",160,0)
 ; *526 set approving official
"RTN","IBNCPDP5",161,0)
 S:'$D(^VA(200,IBDUZ,0)) IBDUZ=.5
"RTN","IBNCPDP5",162,0)
 ; pass the claim to AR
"RTN","IBNCPDP5",163,0)
 D GVAR^IBCBB,ARRAY^IBCBB1 S PRCASV("APR")=IBDUZ D ^PRCASVC6    ; perform AR checks
"RTN","IBNCPDP5",164,0)
 I 'PRCASV("OKAY") S IBY="-1^"_$$ARERR^IBNCPDP2($G(PRCAERR),2) G BILLQ
"RTN","IBNCPDP5",165,0)
 D REL^PRCASVC     ; accept bill into AR
"RTN","IBNCPDP5",166,0)
 ;
"RTN","IBNCPDP5",167,0)
 ; update the AR status to Active
"RTN","IBNCPDP5",168,0)
 S PRCASV("STATUS")=16
"RTN","IBNCPDP5",169,0)
 D STATUS^PRCASVC1
"RTN","IBNCPDP5",170,0)
 ;
"RTN","IBNCPDP5",171,0)
 ; decrease adjust bill
"RTN","IBNCPDP5",172,0)
 ; Auto decrease from service Bill#,Tran amt,person,reason,Tran date
"RTN","IBNCPDP5",173,0)
 S IBAMT=$G(^DGCR(399,IBIFN,"U1")),IBOFFSET=$P($G(^DGCR(399,IBIFN,"U1")),U,2)
"RTN","IBNCPDP5",174,0)
 S IBPAID=$G(IBD("PAID"))
"RTN","IBNCPDP5",175,0)
 I IBAMT-IBPAID>.01 D
"RTN","IBNCPDP5",176,0)
 . N IBREAS
"RTN","IBNCPDP5",177,0)
 . S IBREAS="Adjust based on secondary ECME amount paid."
"RTN","IBNCPDP5",178,0)
 . I IBTRIC S IBREAS="Due to TRICARE Patient Responsibility (sec)."
"RTN","IBNCPDP5",179,0)
 . D DEC^PRCASER1(PRCASV("ARREC"),IBAMT-IBOFFSET-IBPAID,IBDUZ,IBREAS,IBADT)
"RTN","IBNCPDP5",180,0)
 . I 'IBPAID S PRCASV("STATUS")=22 D STATUS^PRCASVC1 ; collected/closed
"RTN","IBNCPDP5",181,0)
 ;
"RTN","IBNCPDP5",182,0)
 D  ; set the user in 399
"RTN","IBNCPDP5",183,0)
 . N IBI,IBT F IBI=2,5,11,13,15 S IBT(399,IBIFN_",",IBI)=IBDUZ
"RTN","IBNCPDP5",184,0)
 . D FILE^DIE("","IBT")
"RTN","IBNCPDP5",185,0)
 ;
"RTN","IBNCPDP5",186,0)
 ;
"RTN","IBNCPDP5",187,0)
BILLQ ;
"RTN","IBNCPDP5",188,0)
 S IBRES=$S(IBY<0:"0^"_$S($L($P(IBY,"^",2)):$P(IBY,"^",2),1:$P(IBY,"^",3)),$G(IBBCT):+IBBCT,1:IBY)
"RTN","IBNCPDP5",189,0)
 I $G(IBBCT) S IBD("BILL")=IBBCT
"RTN","IBNCPDP5",190,0)
 D LOG^IBNCPDP2("BILL",IBRES)
"RTN","IBNCPDP5",191,0)
 I IBY<0 D BULL^IBNCPEB($G(DFN),.IBD,IBRES,$G(IBBCT))
"RTN","IBNCPDP5",192,0)
 Q IBRES
"RTN","IBNCPDP5",193,0)
 ;
"RTN","IBNCPDP5",194,0)
REJINF(IBREJARR) ;
"RTN","IBNCPDP5",195,0)
 N IBREJINF,IBRJ,IBRJCODE,IBCNT
"RTN","IBNCPDP5",196,0)
 S IBREJINF="",IBCNT=0
"RTN","IBNCPDP5",197,0)
 S IBRJ=0 F  S IBRJ=$O(IBREJARR("REJ CODES",IBRJ)) Q:+IBRJ=0  D
"RTN","IBNCPDP5",198,0)
 . S IBRJCODE="" F  S IBRJCODE=$O(IBREJARR("REJ CODES",IBRJ,IBRJCODE)) Q:IBRJCODE=""  D
"RTN","IBNCPDP5",199,0)
 . . I IBCNT>0 S IBREJINF=IBREJINF_", "
"RTN","IBNCPDP5",200,0)
 . . S IBREJINF=IBREJINF_IBRJCODE_":"_$G(IBREJARR("REJ CODES",IBRJ,IBRJCODE))
"RTN","IBNCPDP5",201,0)
 . . S IBCNT=IBCNT+1
"RTN","IBNCPDP5",202,0)
 Q IBREJINF
"RTN","IBNCPDP5",203,0)
 ;
"RTN","IBNCPDP5",204,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.12^0^12;.17^0^17;.18^0^18;.19^0^19;.15^0^15;.16^0^16;.21^0^21;.22^0^22;.23^0^23;.24^0^24;.25^0^25;.26^0^26;151^U^1;152^U^2;155^U^5;159.5^U^20;
"RTN","IBNCPDP5",205,0)
 ;
"RTN","IBNCPDS1")
0^95^B11865744^B10933965
"RTN","IBNCPDS1",1,0)
IBNCPDS1 ;ALB/BDB - DISPLAY RX COB DETERMINATION ;30-NOV-07
"RTN","IBNCPDS1",2,0)
 ;;2.0;INTEGRATED BILLING;**411,452,516**;21-MAR-94;Build 123
"RTN","IBNCPDS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPDS1",4,0)
 ;
"RTN","IBNCPDS1",5,0)
% ; -- main entry point to display rx cob determination
"RTN","IBNCPDS1",6,0)
EN ;
"RTN","IBNCPDS1",7,0)
 S U="^"
"RTN","IBNCPDS1",8,0)
 D FULL^VALM1
"RTN","IBNCPDS1",9,0)
 N DIROUT,DIRUT,DTOUT,DUOUT,IBADT,IBANY,IBINS,IBQUIT,IBT,IBX,X,Y
"RTN","IBNCPDS1",10,0)
 S IBQUIT=0
"RTN","IBNCPDS1",11,0)
 S DIR("?",1)="Enter the date for which you want to see active insurances."
"RTN","IBNCPDS1",12,0)
 S DIR("?",2)="A valid date entry is required, or"
"RTN","IBNCPDS1",13,0)
 S DIR("?")="enter up-arrow ( ^ ) to return to the main display screen."
"RTN","IBNCPDS1",14,0)
 S DIR("A")="Date of Service",DIR("A",1)=" ",DIR("B")="TODAY",DIR(0)="D"
"RTN","IBNCPDS1",15,0)
 F  D ^DIR Q:$D(DTOUT)!$D(DUOUT)  S IBADT=Y,IBQUIT=1  Q:IBQUIT
"RTN","IBNCPDS1",16,0)
 K DIR
"RTN","IBNCPDS1",17,0)
 G:'IBQUIT COBQ
"RTN","IBNCPDS1",18,0)
 ; -- look up insurance for patient
"RTN","IBNCPDS1",19,0)
 K IBINS S IBINS=0
"RTN","IBNCPDS1",20,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDS1",21,0)
 ;
"RTN","IBNCPDS1",22,0)
 ; -- no pharmacy coverage, quit
"RTN","IBNCPDS1",23,0)
 I '$$PTCOV^IBCNSU3(DFN,IBADT,"PHARMACY",.IBANY) G COBQ
"RTN","IBNCPDS1",24,0)
 D EN^DDIOL("Insurance Co.COB Type of Policy Group     Holder   Effect.  Expires  Elec/Paper","","!!?1")
"RTN","IBNCPDS1",25,0)
 ;
"RTN","IBNCPDS1",26,0)
 S IBX=0
"RTN","IBNCPDS1",27,0)
 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D
"RTN","IBNCPDS1",28,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D
"RTN","IBNCPDS1",29,0)
 .. N IBCAT,IBCOB,IBDAT,IBEFFDT,IBELEC,IBEXPDT,IBGRPN,IBHOLD,IBINSN,IBPIEN,IBPL,IBPTYPE,IBY,IBZ
"RTN","IBNCPDS1",30,0)
 .. S IBQUIT=1
"RTN","IBNCPDS1",31,0)
 .. Q:'$G(IBINS(IBT,0))
"RTN","IBNCPDS1",32,0)
 .. S IBPL=$$GET1^DIQ(2.312,IBT_","_DFN_",",.18,"I") ; plan
"RTN","IBNCPDS1",33,0)
 .. Q:'IBPL
"RTN","IBNCPDS1",34,0)
 .. S IBCAT=$O(^IBE(355.31,"B","PHARMACY","")) I '$G(IBCAT)!'$$PLCOV^IBCNSU3(IBPL,IBADT,IBCAT) Q  ; not covered
"RTN","IBNCPDS1",35,0)
 .. S IBINSN=$$GET1^DIQ(2.312,IBT_","_DFN_",",.01) ; ins name
"RTN","IBNCPDS1",36,0)
 .. S IBPTYPE=$$GET1^DIQ(355.3,IBPL_",",.09) ; plan type
"RTN","IBNCPDS1",37,0)
 .. S IBCOB=$$GET1^DIQ(2.312,IBT_","_DFN_",",.2,"I"),IBCOB=$S(IBCOB=1:"p",IBCOB=2:"s",IBCOB=3:"t",1:"p") ; cob indicator
"RTN","IBNCPDS1",38,0)
 .. ;IB*2.0*516/baa - Use HIPAA compliant Group ID
"RTN","IBNCPDS1",39,0)
 .. ;S IBGRPN=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,IBT_","_DFN_",",.18,"I")_",",.04) ; group id
"RTN","IBNCPDS1",40,0)
 .. S IBGRPN=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,IBT_","_DFN_",",.18,"I")_",",2.02) ; group id ; 516 - baa
"RTN","IBNCPDS1",41,0)
 .. S IBHOLD=$$GET1^DIQ(2.312,IBT_","_DFN_",",6,"I") ; subscriber id
"RTN","IBNCPDS1",42,0)
 .. S IBHOLD=$S(IBHOLD="v":"SELF",IBHOLD="s":"SPOUSE",IBHOLD="o":"OTHER",1:"")
"RTN","IBNCPDS1",43,0)
 .. S IBEFFDT=$P(IBINS(IBT,0),U,8) I IBEFFDT]"" S IBEFFDT=$$DFORMAT(IBEFFDT) ; effective date
"RTN","IBNCPDS1",44,0)
 .. S IBEXPDT=$P(IBINS(IBT,0),U,4) I IBEXPDT]"" S IBEXPDT=$$DFORMAT(IBEXPDT) ; expiration date
"RTN","IBNCPDS1",45,0)
 .. S IBELEC="P" D
"RTN","IBNCPDS1",46,0)
 ... S IBPIEN=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,IBT_","_DFN_",",.18,"I")_",",6.01,"I")
"RTN","IBNCPDS1",47,0)
 ... I 'IBPIEN Q  ; Not linked
"RTN","IBNCPDS1",48,0)
 ... D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDS1",49,0)
 ... I $E($G(IBY(1)))'="A" Q  ; not active
"RTN","IBNCPDS1",50,0)
 ... S IBELEC="E"  ;Both linked and active, so electronic submit
"RTN","IBNCPDS1",51,0)
 .. D EN^DDIOL($E(IBINSN,1,10),"","!?1")
"RTN","IBNCPDS1",52,0)
 .. D EN^DDIOL(IBCOB,"","?14")
"RTN","IBNCPDS1",53,0)
 .. D EN^DDIOL($E(IBPTYPE,1,12),"","?18")
"RTN","IBNCPDS1",54,0)
 .. D EN^DDIOL($E(IBGRPN,1,7),"","?33")
"RTN","IBNCPDS1",55,0)
 .. D EN^DDIOL($E(IBHOLD,1,9),"","?43")
"RTN","IBNCPDS1",56,0)
 .. D EN^DDIOL($E(IBEFFDT,1,8),"","?52")
"RTN","IBNCPDS1",57,0)
 .. D EN^DDIOL($E(IBEXPDT,1,8),"","?61")
"RTN","IBNCPDS1",58,0)
 .. D EN^DDIOL(IBELEC,"","?70")
"RTN","IBNCPDS1",59,0)
 ;
"RTN","IBNCPDS1",60,0)
COBQ ;
"RTN","IBNCPDS1",61,0)
 D PAUSE^IBNCPBB("")
"RTN","IBNCPDS1",62,0)
 S VALMBCK="R"
"RTN","IBNCPDS1",63,0)
 Q
"RTN","IBNCPDS1",64,0)
 ;
"RTN","IBNCPDS1",65,0)
DFORMAT(DF) ; Format date with slashes
"RTN","IBNCPDS1",66,0)
 Q $E(DF,4,5)_"/"_$E(DF,6,7)_"/"_$E(DF,2,3)
"RTN","IBNCPDS1",67,0)
 ; end of IBNCPDS1
"RTN","IBNCPEV")
0^96^B102192248^B97561964
"RTN","IBNCPEV",1,0)
IBNCPEV ;DALOI/SS - NCPDP BILLING EVENTS REPORT ;5/22/08  14:27
"RTN","IBNCPEV",2,0)
 ;;2.0;INTEGRATED BILLING;**342,363,383,384,411,435,452,521,516**;21-MAR-94;Build 123
"RTN","IBNCPEV",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPEV",4,0)
RPT ;
"RTN","IBNCPEV",5,0)
 N IBBDT,IBDIVS,IBDTL,IBEDT,IBM1,IBM2,IBM3,IBPAGE,IBPAT,IBQ,IBRX,IBSCR,Y
"RTN","IBNCPEV",6,0)
 N IBECME
"RTN","IBNCPEV",7,0)
 D SETVARS^IBNCPEV1
"RTN","IBNCPEV",8,0)
 Q:IBQ
"RTN","IBNCPEV",9,0)
 D START
"RTN","IBNCPEV",10,0)
 D ^%ZISC
"RTN","IBNCPEV",11,0)
 I IBQ W !,"Cancelled"
"RTN","IBNCPEV",12,0)
 Q
"RTN","IBNCPEV",13,0)
 ;
"RTN","IBNCPEV",14,0)
START ;
"RTN","IBNCPEV",15,0)
 N IBFN,IBFROM,IBI,IBN,IBNB,IBNDX,IBNUM,IBRX1,IBSC,IBTO,IB1ST,REF,X,Z,Z1
"RTN","IBNCPEV",16,0)
 ;Constants
"RTN","IBNCPEV",17,0)
 S IBSC="STATUS CHECK",IBNB="Not ECME billable: ",IBNDX="IBNCPDP-"
"RTN","IBNCPEV",18,0)
 ;get the first date
"RTN","IBNCPEV",19,0)
 S IBFROM=$O(^IBCNR(366.14,"B",IBBDT-1)) Q:+IBFROM=0
"RTN","IBNCPEV",20,0)
 ;get the last date
"RTN","IBNCPEV",21,0)
 S IBTO=$O(^IBCNR(366.14,"B",IBEDT+1),-1) Q:+IBTO=0
"RTN","IBNCPEV",22,0)
 ;
"RTN","IBNCPEV",23,0)
 S REF=$NA(^TMP($J,"IBNCPDPE"))
"RTN","IBNCPEV",24,0)
 ;
"RTN","IBNCPEV",25,0)
 K @REF
"RTN","IBNCPEV",26,0)
 ;
"RTN","IBNCPEV",27,0)
 I +$G(IBECME) S IBRX=$$GETRX^IBNCPEV1(IBECME,IBFROM,IBTO,.IBECME) I 'IBRX  W !!,"No data found for the specified date range and ECME #" Q  ; no match with ECME #
"RTN","IBNCPEV",28,0)
 ;collect
"RTN","IBNCPEV",29,0)
 N IBDFN,IBDTIEN,IBEVNT,IBP4,IBRXIEN,IBZ0,IBZ1,IBZ2
"RTN","IBNCPEV",30,0)
 S IBI=IBFROM-1
"RTN","IBNCPEV",31,0)
 F  S IBI=$O(^IBCNR(366.14,"B",IBI)) Q:+IBI=0  Q:IBI>IBTO  D
"RTN","IBNCPEV",32,0)
 . S IBDTIEN=$O(^IBCNR(366.14,"B",IBI,0))
"RTN","IBNCPEV",33,0)
 . S IBN=0 F  S IBN=$O(^IBCNR(366.14,IBDTIEN,1,IBN)) Q:+IBN=0  D
"RTN","IBNCPEV",34,0)
 . . S IBZ0=$G(^IBCNR(366.14,IBDTIEN,1,IBN,0))
"RTN","IBNCPEV",35,0)
 . . ;if not "ALL" was selected IBDIVS>0 AND the division in #366.14 record is among those selected by the user
"RTN","IBNCPEV",36,0)
 . . I IBDIVS>0,$$CHECKDIV^IBNCPEV1(+$P(IBZ0,U,9),.IBDIVS)=0 Q
"RTN","IBNCPEV",37,0)
 . . S IBDFN=+$P(IBZ0,U,3)
"RTN","IBNCPEV",38,0)
 . . Q:IBDFN=0
"RTN","IBNCPEV",39,0)
 . . S IBEVNT=$$GET1^DIQ(366.141,IBN_","_IBDTIEN_",",.01)
"RTN","IBNCPEV",40,0)
 . . S IBZ2=$G(^IBCNR(366.14,IBDTIEN,1,IBN,2))
"RTN","IBNCPEV",41,0)
 . . S IBRXIEN=$P(IBZ2,U,12)
"RTN","IBNCPEV",42,0)
 . . I IBRXIEN="" S IBRXIEN=$P(IBZ2,U,1)
"RTN","IBNCPEV",43,0)
 . . I IBPAT,IBDFN'=IBPAT Q
"RTN","IBNCPEV",44,0)
 . . I IBM2="E",IBEVNT[IBSC,'$P(IBZ0,U,7) Q
"RTN","IBNCPEV",45,0)
 . . I IBM2="N",IBEVNT'[IBSC Q
"RTN","IBNCPEV",46,0)
 . . I IBM2="N",IBEVNT[IBSC,$P(IBZ0,U,7) Q
"RTN","IBNCPEV",47,0)
 . . ;if "No Rx IEN" case then create a unique artificial IBRXIEN to be able
"RTN","IBNCPEV",48,0)
 . . ;to create ^TMP entry and display available information in the report
"RTN","IBNCPEV",49,0)
 . . I +$G(IBRXIEN)=0 S IBRXIEN=+(IBDTIEN_"."_IBN) G SETTMP
"RTN","IBNCPEV",50,0)
 . . I IBRX,IBRXIEN'=IBRX Q
"RTN","IBNCPEV",51,0)
 . . I $$RXNUM(IBRXIEN)="" Q
"RTN","IBNCPEV",52,0)
 . . I IBM3'="A",IBM3'=$$RXWMC^IBNCPRR(+IBRXIEN) Q
"RTN","IBNCPEV",53,0)
SETTMP . . S @REF@(+IBRXIEN,+$P(IBZ2,U,3),IBDTIEN,IBN)=""
"RTN","IBNCPEV",54,0)
 ;
"RTN","IBNCPEV",55,0)
 I '$D(@REF) W !!,"No data found for the specified input criteria" Q
"RTN","IBNCPEV",56,0)
 ;
"RTN","IBNCPEV",57,0)
PRINT ; scratch global exists and has data
"RTN","IBNCPEV",58,0)
 ; begin the report printing.  Entry point into this routine from BPSVRX.
"RTN","IBNCPEV",59,0)
 ; DBIA #5712 defines this entry point for ECME.
"RTN","IBNCPEV",60,0)
 ;
"RTN","IBNCPEV",61,0)
 ;print
"RTN","IBNCPEV",62,0)
 S IBNUM=0
"RTN","IBNCPEV",63,0)
 U IO D HDR
"RTN","IBNCPEV",64,0)
 S IBRX1="" F  S IBRX1=$O(@REF@(IBRX1)) Q:IBRX1=""  D  Q:IBQ
"RTN","IBNCPEV",65,0)
 .S IBFN="" F  S IBFN=$O(@REF@(IBRX1,IBFN)) Q:IBFN=""  D  Q:IBQ
"RTN","IBNCPEV",66,0)
 ..S IB1ST=1
"RTN","IBNCPEV",67,0)
 ..S IBI="" F  S IBI=$O(@REF@(IBRX1,IBFN,IBI)) Q:IBI=""  D  Q:IBQ
"RTN","IBNCPEV",68,0)
 ...S IBN="" F  S IBN=$O(@REF@(IBRX1,IBFN,IBI,IBN)) Q:IBN=""  D  Q:IBQ
"RTN","IBNCPEV",69,0)
 ....N IBZ,IBD1,IBD2,IBD3,IBD4,IBD7,IBINS,IBY
"RTN","IBNCPEV",70,0)
 ....;load main
"RTN","IBNCPEV",71,0)
 ....S IBZ=$G(^IBCNR(366.14,IBI,1,IBN,0))
"RTN","IBNCPEV",72,0)
 ....;load IBD array
"RTN","IBNCPEV",73,0)
 ....S IBD1=$G(^IBCNR(366.14,IBI,1,IBN,1))
"RTN","IBNCPEV",74,0)
 ....S IBD2=$G(^IBCNR(366.14,IBI,1,IBN,2))
"RTN","IBNCPEV",75,0)
 ....S IBD3=$G(^IBCNR(366.14,IBI,1,IBN,3))
"RTN","IBNCPEV",76,0)
 ....S IBD4=$G(^IBCNR(366.14,IBI,1,IBN,4))
"RTN","IBNCPEV",77,0)
 ....S IBD7=$G(^IBCNR(366.14,IBI,1,IBN,7))
"RTN","IBNCPEV",78,0)
 ....S IBY=0
"RTN","IBNCPEV",79,0)
 ....;load insurance multiple
"RTN","IBNCPEV",80,0)
 ....F  S IBY=$O(^IBCNR(366.14,IBI,1,IBN,5,IBY)) Q:+IBY=0  D
"RTN","IBNCPEV",81,0)
 .....S IBINS(IBY,0)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,0))
"RTN","IBNCPEV",82,0)
 .....S IBINS(IBY,1)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,1))
"RTN","IBNCPEV",83,0)
 .....S IBINS(IBY,2)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,2))
"RTN","IBNCPEV",84,0)
 .....S IBINS(IBY,3)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,3))
"RTN","IBNCPEV",85,0)
 ....;
"RTN","IBNCPEV",86,0)
 ....I IB1ST D  Q:IBQ
"RTN","IBNCPEV",87,0)
 .....S IBNUM=IBNUM+1 I IBNUM>1 D ULINE("-") Q:IBQ
"RTN","IBNCPEV",88,0)
 .....D CHKP Q:IBQ
"RTN","IBNCPEV",89,0)
 .....W !,IBNUM," ",?4,$$RXNUM(IBRX1)," ",?12,IBFN," ",?16,$$DAT(+$P(IBD2,U,6)) ;RX# Fill# Date of Service
"RTN","IBNCPEV",90,0)
 .....W " ",?28,$E($$PAT(+$P(IBZ,U,3)),1,21)," ",?50,$E($$DRUG(+$P(IBZ,U,3),IBRX1),1,30)
"RTN","IBNCPEV",91,0)
 .....S IB1ST=0
"RTN","IBNCPEV",92,0)
 ....N IND S IND=6
"RTN","IBNCPEV",93,0)
 ....D CHKP Q:IBQ
"RTN","IBNCPEV",94,0)
 ....S IBEVNT=$$GET1^DIQ(366.141,IBN_","_IBI_",",.01)
"RTN","IBNCPEV",95,0)
 ....W !,?IND,$$EVNT(IBEVNT)," ",?16,$$TIM($P(IBZ,U,5)),?31," Status:",$E($$STAT(IBEVNT,$P(IBZ,U,7)_U_$P(IBZ,U,8),$P(IBD3,U,7),$P(IBD3,U,1)),1,40)
"RTN","IBNCPEV",96,0)
 ....Q:'IBDTL  ; no details
"RTN","IBNCPEV",97,0)
 ....I IBEVNT="BILL" D DBILL Q
"RTN","IBNCPEV",98,0)
 ....I IBEVNT="REJECT" D DREJ Q
"RTN","IBNCPEV",99,0)
 ....I IBEVNT["REVERSE" D DREV Q
"RTN","IBNCPEV",100,0)
 ....I IBEVNT["SUBMIT" D DSUB Q
"RTN","IBNCPEV",101,0)
 ....I IBEVNT["CLOSE" D DCLO Q
"RTN","IBNCPEV",102,0)
 ....I IBEVNT["REOPEN" D REOPEN^IBNCPEV1 Q
"RTN","IBNCPEV",103,0)
 ....I IBEVNT["RELEASE" D DREL Q
"RTN","IBNCPEV",104,0)
 ....I IBEVNT[IBSC D DSTAT^IBNCPEV1(.IBD2,.IBD3,.IBD4,.IBINS,.IBD7) Q
"RTN","IBNCPEV",105,0)
 ....I IBEVNT["BILL CANCELLED" D BCANC Q
"RTN","IBNCPEV",106,0)
 I IBSCR,'IBQ W !,"End of report, press RETURN to continue." R X:DTIME
"RTN","IBNCPEV",107,0)
 K @REF
"RTN","IBNCPEV",108,0)
 Q
"RTN","IBNCPEV",109,0)
 ;
"RTN","IBNCPEV",110,0)
STAT(X,RES,CR,IBIFN) ;provides STATUS information
"RTN","IBNCPEV",111,0)
 N IBNL,IBSC
"RTN","IBNCPEV",112,0)
 S IBNL="Plan not linked to the Payer",IBSC="STATUS CHECK"
"RTN","IBNCPEV",113,0)
 I X[IBSC,RES[IBNB S RES="0^"_$P(RES,IBNB,2)
"RTN","IBNCPEV",114,0)
 I X[IBSC,RES[IBNL S RES="0^Plan not linked" ; shorten too long line
"RTN","IBNCPEV",115,0)
 I X[IBSC,'RES,RES["Non-Billable in CT" Q $P(RES,U,2)
"RTN","IBNCPEV",116,0)
 I X[IBSC Q $S(RES:"",1:"non-")_"ECME Billable"_$S(RES:"",$P(RES,U,2)="":"",$P(RES,U,2)="NEEDS SC DETERMINATION":" NEEDS "_$$GETNOANS^IBNCPEV1(IBD4)_" DETERMINATION",1:", "_$P(RES,U,2))
"RTN","IBNCPEV",117,0)
 I X="BILL",'RES,IBIFN Q "Bill "_$$BILL(IBIFN)_" created with ERRORs"
"RTN","IBNCPEV",118,0)
 I X="BILL",'RES Q "Error: "_$P(RES,U,2)
"RTN","IBNCPEV",119,0)
 I X="BILL",'IBIFN Q $P(RES,U,2)
"RTN","IBNCPEV",120,0)
 I X="BILL" Q "Bill# "_$$BILL(+IBIFN)_" created"
"RTN","IBNCPEV",121,0)
 I X["REVERSE",$G(CR)=7,+RES=1 Q "set N/B Reason: Rx deleted, no Bill to cancel."
"RTN","IBNCPEV",122,0)
 I X["REVERSE" Q $S(+RES=1:"success",RES>1:"Bill# "_$$BILL(+RES)_" cancelled",'RES:"ECME Claim reversed, no Bill to cancel",1:$P(RES,U,2))
"RTN","IBNCPEV",123,0)
 I 'RES Q $P(RES,U,2)
"RTN","IBNCPEV",124,0)
 Q "OK"
"RTN","IBNCPEV",125,0)
 ;
"RTN","IBNCPEV",126,0)
DBILL ; BILL section
"RTN","IBNCPEV",127,0)
 ; input params IBD*, IBZ, IBINS*
"RTN","IBNCPEV",128,0)
 ;
"RTN","IBNCPEV",129,0)
 I '$P(IBZ,U,7),$L($P(IBZ,U,8)),$P(IBD3,U,1) D CHKP Q:IBQ  W !?10,"ERROR: ",$P(IBZ,U,8)
"RTN","IBNCPEV",130,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",131,0)
 D SUBHDR
"RTN","IBNCPEV",132,0)
 I $P(IBD2,U,4) D CHKP Q:IBQ  W !?10,"DRUG:",$$DRUGAPI^IBNCPEV1(+$P(IBD2,U,4),.01)
"RTN","IBNCPEV",133,0)
 ;
"RTN","IBNCPEV",134,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",135,0)
 W !?10,"NDC:",$S($P(IBD2,U,5):$P(IBD2,U,5),1:"No")
"RTN","IBNCPEV",136,0)
 W ", NCPDP QTY:",$S($P(IBD2,U,14):$P(IBD2,U,14),1:"No")
"RTN","IBNCPEV",137,0)
 W $$UNITDISP^IBNCPEV1($P(IBD2,U,14),$P(IBD2,U,15))   ; display NCPDP unit type
"RTN","IBNCPEV",138,0)
 ;
"RTN","IBNCPEV",139,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",140,0)
 W !?10,"BILLED QTY:",$S($P(IBD2,U,8):$P(IBD2,U,8),1:"No")
"RTN","IBNCPEV",141,0)
 W $$UNITDISP^IBNCPEV1($P(IBD2,U,8),$P(IBD2,U,13))    ; display billing unit type
"RTN","IBNCPEV",142,0)
 W ", DAYS SUPPLY:",$S($P(IBD2,U,9):$P(IBD2,U,9),1:"No")
"RTN","IBNCPEV",143,0)
 ;
"RTN","IBNCPEV",144,0)
 W !,?10,"GROSS AMT DUE:",$J($P(IBD3,U,2),0,2),", "
"RTN","IBNCPEV",145,0)
 W "TOTAL AMT PAID:",$J($P(IBD3,U,5),0,2)
"RTN","IBNCPEV",146,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",147,0)
 ;
"RTN","IBNCPEV",148,0)
 ; display payer reported paid amounts
"RTN","IBNCPEV",149,0)
 W !?10,"INGREDIENT COST PAID:",$S($L($P(IBD3,U,12)):$J($P(IBD3,U,12),0,2),1:"No")
"RTN","IBNCPEV",150,0)
 W ", DISPENSING FEE PAID:",$S($L($P(IBD3,U,13)):$J($P(IBD3,U,13),0,2),1:"No")
"RTN","IBNCPEV",151,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",152,0)
 W !?10,"PATIENT RESP (INS):",$S($L($P(IBD3,U,14)):$FN(-$P(IBD3,U,14),"P",2),1:"No")
"RTN","IBNCPEV",153,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",154,0)
 ;
"RTN","IBNCPEV",155,0)
 ;IB*2.0*516/baa Use HIPAA compliant fields
"RTN","IBNCPEV",156,0)
 ;W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",157,0)
 W !?10,"PLAN:",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",2.01),", INSURANCE: ",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",.01)
"RTN","IBNCPEV",158,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",159,0)
 D DISPUSR
"RTN","IBNCPEV",160,0)
 Q
"RTN","IBNCPEV",161,0)
 ;
"RTN","IBNCPEV",162,0)
DREJ ; reject section
"RTN","IBNCPEV",163,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",164,0)
 D SUBHDR
"RTN","IBNCPEV",165,0)
 ;IB*2.0*516/baa - Use HIPAA compliant fields
"RTN","IBNCPEV",166,0)
 ;I +$P(IBD3,U,3) D CHKP Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",167,0)
 I +$P(IBD3,U,3) D CHKP Q:IBQ  W !?10,"PLAN:",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",2.01),", INSURANCE: ",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",.01)
"RTN","IBNCPEV",168,0)
 D CLRS Q:IBQ
"RTN","IBNCPEV",169,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",170,0)
 D DISPUSR
"RTN","IBNCPEV",171,0)
 Q
"RTN","IBNCPEV",172,0)
 ;
"RTN","IBNCPEV",173,0)
DCLO ; close
"RTN","IBNCPEV",174,0)
 D DREJ
"RTN","IBNCPEV",175,0)
 Q
"RTN","IBNCPEV",176,0)
 ;
"RTN","IBNCPEV",177,0)
DSUB ; submit
"RTN","IBNCPEV",178,0)
 N IBIN,IBHP
"RTN","IBNCPEV",179,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",180,0)
 D SUBHDR
"RTN","IBNCPEV",181,0)
 I $L($P(IBD1,U,6)) D CHKP W !?10,"PAYER RESPONSE: ",$P(IBD1,U,6)
"RTN","IBNCPEV",182,0)
 ;IB*2.0*516/baa - Use HIPAA compliant fields
"RTN","IBNCPEV",183,0)
 ; IB*2.0*521 Display HPID but do not add '*' if it does not pass validation checks
"RTN","IBNCPEV",184,0)
 ;I $L($P(IBD3,U,3)) D CHKP Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",185,0)
 I $L($P(IBD3,U,3)) D CHKP Q:IBQ  D
"RTN","IBNCPEV",186,0)
 .S IBIN=+$G(^IBA(355.3,+$P(IBD3,U,3),0)),IBHP=$$HPD^IBCNHUT1(IBIN)
"RTN","IBNCPEV",187,0)
 .;W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,IBIN,0)),U),!?10,"HPID/OEID:",IBHP
"RTN","IBNCPEV",188,0)
 .W !?10,"PLAN:",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",2.01),", INSURANCE: ",$$GET1^DIQ(36,IBIN_",",.01),!?10,"HPID:",IBHP
"RTN","IBNCPEV",189,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",190,0)
 D DISPUSR
"RTN","IBNCPEV",191,0)
 Q
"RTN","IBNCPEV",192,0)
 ;
"RTN","IBNCPEV",193,0)
DREL ; release
"RTN","IBNCPEV",194,0)
 D DREJ
"RTN","IBNCPEV",195,0)
 Q
"RTN","IBNCPEV",196,0)
 ;
"RTN","IBNCPEV",197,0)
DREV ; reverse
"RTN","IBNCPEV",198,0)
 N IBIN,IBHP
"RTN","IBNCPEV",199,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",200,0)
 D SUBHDR
"RTN","IBNCPEV",201,0)
 I $L($P(IBD1,U,6)),$E($P(IBD1,U,6),1)'="A"&($E($P(IBD1,U,6),1)'="R") S $P(IBD1,U,6)=""  ; only display accepted and rejected on REVERSALS
"RTN","IBNCPEV",202,0)
 I $L($P(IBD1,U,6)) D CHKP W !?10,"PAYER RESPONSE: ",$P(IBD1,U,6)
"RTN","IBNCPEV",203,0)
 ;IB*2.0*516/baa - Use HIPAA compliant fields
"RTN","IBNCPEV",204,0)
 ; IB*2.0*521 Display HPID and do not add '*' if it does not pass validation checks
"RTN","IBNCPEV",205,0)
 ;I $L($P(IBD3,U,3)) D CHKP Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",206,0)
 I $L($P(IBD3,U,3)) D CHKP Q:IBQ  D
"RTN","IBNCPEV",207,0)
 .S IBIN=+$G(^IBA(355.3,+$P(IBD3,U,3),0)),IBHP=$$HPD^IBCNHUT1(IBIN)
"RTN","IBNCPEV",208,0)
 .;W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,IBIN,0)),U),!?10,"HPID/OEID:",IBHP
"RTN","IBNCPEV",209,0)
 .W !?10,"PLAN:",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",2.01),", INSURANCE: ",$$GET1^DIQ(36,IBIN_",",.01),!?10,"HPID:",IBHP
"RTN","IBNCPEV",210,0)
 D CLRS Q:IBQ
"RTN","IBNCPEV",211,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",212,0)
 D DISPUSR
"RTN","IBNCPEV",213,0)
 W !?10,"REVERSAL REASON:",$P(IBD1,U,7)
"RTN","IBNCPEV",214,0)
 Q
"RTN","IBNCPEV",215,0)
 ;
"RTN","IBNCPEV",216,0)
BCANC ; bill cancellation generated by auto-reversal (duplicate bill)
"RTN","IBNCPEV",217,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",218,0)
 W !?10,"SYSTEM FOUND DUPLICATE BILL WHILE PROCESSING CLAIM"
"RTN","IBNCPEV",219,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",220,0)
 D DISPUSR
"RTN","IBNCPEV",221,0)
 Q
"RTN","IBNCPEV",222,0)
 ;
"RTN","IBNCPEV",223,0)
CLRS ;
"RTN","IBNCPEV",224,0)
 N TX,PP,RC
"RTN","IBNCPEV",225,0)
 S TX="CLOSE REASON"
"RTN","IBNCPEV",226,0)
 S PP="DROP TO PAPER"
"RTN","IBNCPEV",227,0)
 S RC="RELEASE COPAY"
"RTN","IBNCPEV",228,0)
 I $P(IBD3,U,7)'="" D CHKP Q:IBQ  W !?10,TX,":",$$REASON^IBNCPDPU($P(IBD3,U,7)) W:$P(IBD3,U,8) ", ",PP W:$P(IBD3,U,9) ", ",RC
"RTN","IBNCPEV",229,0)
 S TX="CLOSE COMMENT"
"RTN","IBNCPEV",230,0)
 I $L($P(IBD3,U,6))>2 D CHKP Q:IBQ  W !?10,"COMMENT:",$P(IBD3,U,6)
"RTN","IBNCPEV",231,0)
 Q
"RTN","IBNCPEV",232,0)
 ;
"RTN","IBNCPEV",233,0)
HDR ;header
"RTN","IBNCPEV",234,0)
 W @IOF S IBPAGE=IBPAGE+1 W ?72,"PAGE ",IBPAGE
"RTN","IBNCPEV",235,0)
 W !,$$DISPTITL^IBNCPEV1(IBBDT,IBEDT,IBDTL,.IBDIVS)
"RTN","IBNCPEV",236,0)
 W:IBDIVS'=0 !,$$DISPLDIV^IBNCPEV1(.IBDIVS)
"RTN","IBNCPEV",237,0)
 W !?15
"RTN","IBNCPEV",238,0)
 I IBM1="R" W "SINGLE PRESCRIPTION - ",$$RXNUM(IBRX),"  "
"RTN","IBNCPEV",239,0)
 I IBM1="P" W "SINGLE PATIENT - ",$P($G(^DPT(IBPAT,0)),U),"  "
"RTN","IBNCPEV",240,0)
 I IBM1="E" W "SINGLE ECME # - ",IBECME
"RTN","IBNCPEV",241,0)
 I IBM2="E" W "ECME BILLABLE RX  "
"RTN","IBNCPEV",242,0)
 I IBM2="N" W "NON ECME BILLABLE RX  "
"RTN","IBNCPEV",243,0)
 I IBM3'="A",IBM1'="R" W $S(IBM3="M":"MAIL",IBM3="C":"CMOP",1:"WINDOW")_" PRESCRIPTIONS ONLY"
"RTN","IBNCPEV",244,0)
 W !,?4," RX#   FILL  DATE       PATIENT NAME",?55,"DRUG"
"RTN","IBNCPEV",245,0)
 N I W ! F I=1:1:80 W "="
"RTN","IBNCPEV",246,0)
 Q
"RTN","IBNCPEV",247,0)
 ;
"RTN","IBNCPEV",248,0)
ULINE(X) ;line
"RTN","IBNCPEV",249,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",250,0)
 N I W ! F I=1:1:80 W $G(X,"-")
"RTN","IBNCPEV",251,0)
 Q
"RTN","IBNCPEV",252,0)
CHKP ;Check for EOP
"RTN","IBNCPEV",253,0)
 N Y
"RTN","IBNCPEV",254,0)
 I $Y>(IOSL-4) D:IBSCR PAUSE Q:IBQ  D HDR
"RTN","IBNCPEV",255,0)
 Q
"RTN","IBNCPEV",256,0)
DAT(X,Y) Q $$DAT1^IBOUTL(X,.Y)
"RTN","IBNCPEV",257,0)
TIM(X) N IBT ;time
"RTN","IBNCPEV",258,0)
 S IBT=$$DAT1^IBOUTL(X,1) I $L(IBT," ")<3 Q IBT
"RTN","IBNCPEV",259,0)
 I $P(IBT," ",3)="pm" S IBT=$P(IBT," ",1,2)_"p" Q IBT
"RTN","IBNCPEV",260,0)
 I $P(IBT," ",3)="am" S IBT=$P(IBT," ",1,2)_"a" Q IBT
"RTN","IBNCPEV",261,0)
 Q IBT
"RTN","IBNCPEV",262,0)
 ;
"RTN","IBNCPEV",263,0)
USR(X) ;
"RTN","IBNCPEV",264,0)
 I $D(^VA(200,+X,0)) Q $P(^(0),U)
"RTN","IBNCPEV",265,0)
 Q X
"RTN","IBNCPEV",266,0)
 ;
"RTN","IBNCPEV",267,0)
PAT(DFN) ;
"RTN","IBNCPEV",268,0)
 Q $P($G(^DPT(DFN,0),"?"),"^")
"RTN","IBNCPEV",269,0)
BILL(BN) ;
"RTN","IBNCPEV",270,0)
 Q $P($G(^DGCR(399,BN,0),"?"),"^")
"RTN","IBNCPEV",271,0)
ARBILL(BN) ;
"RTN","IBNCPEV",272,0)
 Q $P($G(^PRCA(430,BN,0),"?"),"^")
"RTN","IBNCPEV",273,0)
 ;
"RTN","IBNCPEV",274,0)
 ;Returns DRUG name (#50,.01)
"RTN","IBNCPEV",275,0)
 ;IBDFN = IEN in PATIENT file #2
"RTN","IBNCPEV",276,0)
 ;IBRX = IEN in PRESCRIPTION file #52
"RTN","IBNCPEV",277,0)
DRUG(IBDFN,IBRX) ;
"RTN","IBNCPEV",278,0)
 I +$G(IBDFN)=0 Q ""
"RTN","IBNCPEV",279,0)
 N X1
"RTN","IBNCPEV",280,0)
 K ^TMP($J,"IBNCPDP52")
"RTN","IBNCPEV",281,0)
 D RX^PSO52API(IBDFN,"IBNCPDP52",IBRX,"",0)
"RTN","IBNCPEV",282,0)
 S X1=+$G(^TMP($J,"IBNCPDP52",IBDFN,IBRX,6))
"RTN","IBNCPEV",283,0)
 K ^TMP($J,"IBNCPDP52")
"RTN","IBNCPEV",284,0)
 I X1=0 Q ""
"RTN","IBNCPEV",285,0)
 Q $$DRUGNAM^IBNCPEV1(X1)
"RTN","IBNCPEV",286,0)
 ;
"RTN","IBNCPEV",287,0)
EVNT(X) ;Translate codes
"RTN","IBNCPEV",288,0)
 I X="BILL" Q "BILLING"
"RTN","IBNCPEV",289,0)
 I X="REVERSE" Q "REVERSAL"
"RTN","IBNCPEV",290,0)
 I X="AUTO REVERSE" Q "REVERSAL(A)"
"RTN","IBNCPEV",291,0)
 I X["RELEASE" Q "RELEASE"
"RTN","IBNCPEV",292,0)
 I X["SUBMIT" Q "SUBMIT"
"RTN","IBNCPEV",293,0)
 I X["CLOSE" Q "CLOSE"
"RTN","IBNCPEV",294,0)
 I X[IBSC Q "FINISH"  ;IBSC = "STATUS CHECK"
"RTN","IBNCPEV",295,0)
 Q X
"RTN","IBNCPEV",296,0)
 ;
"RTN","IBNCPEV",297,0)
BOCD(X) ;Basis of Cost Determination
"RTN","IBNCPEV",298,0)
 I +X=7 Q "USUAL & CUSTOMARY"
"RTN","IBNCPEV",299,0)
 I +X=1 Q "AWP"
"RTN","IBNCPEV",300,0)
 I +X=5 Q "COST CALCULATIONS"
"RTN","IBNCPEV",301,0)
 Q X
"RTN","IBNCPEV",302,0)
 ;
"RTN","IBNCPEV",303,0)
PAUSE ;
"RTN","IBNCPEV",304,0)
 N X U IO(0) W !,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" IBQ=1
"RTN","IBNCPEV",305,0)
 U IO
"RTN","IBNCPEV",306,0)
 Q
"RTN","IBNCPEV",307,0)
 ;
"RTN","IBNCPEV",308,0)
SUBHDR ; display ECME#, Date of Service, and Release Date/Time (if it exists)
"RTN","IBNCPEV",309,0)
 ; used by many event displays
"RTN","IBNCPEV",310,0)
 W !?10,"ECME#:",$P(IBD1,U,3),", DOS:",$$DAT($P(IBD2,U,6))
"RTN","IBNCPEV",311,0)
 I $P(IBD2,U,7) W ", RELEASE DATE:",$$TIM($P(IBD2,U,7))
"RTN","IBNCPEV",312,0)
 Q
"RTN","IBNCPEV",313,0)
 ;
"RTN","IBNCPEV",314,0)
DISPUSR ;
"RTN","IBNCPEV",315,0)
 W !?10,"USER:",$$USR(+$P(IBD3,U,10))
"RTN","IBNCPEV",316,0)
 Q
"RTN","IBNCPEV",317,0)
 ;
"RTN","IBNCPEV",318,0)
 ;Returns RX number (external value: #52,.01)
"RTN","IBNCPEV",319,0)
 ;IBRX = IEN in PRESCRIPTION file #52
"RTN","IBNCPEV",320,0)
RXNUM(IBRX) ;
"RTN","IBNCPEV",321,0)
 Q $$RXAPI1^IBNCPUT1(IBRX,.01,"E")
"RTN","IBNCPEV",322,0)
 ;
"RTN","IBNCPEV1")
0^97^B67774383^B65821785
"RTN","IBNCPEV1",1,0)
IBNCPEV1 ;DALOI/SS - NCPDP BILLING EVENTS REPORT ;21-MAR-2006
"RTN","IBNCPEV1",2,0)
 ;;2.0;INTEGRATED BILLING;**342,339,363,411,435,452,516**;21-MAR-94;Build 123
"RTN","IBNCPEV1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPEV1",4,0)
 ;
"RTN","IBNCPEV1",5,0)
 ;IA# 10155 is used to read ^DD(file,field,0) node
"RTN","IBNCPEV1",6,0)
 Q
"RTN","IBNCPEV1",7,0)
 ;
"RTN","IBNCPEV1",8,0)
SETVARS ;
"RTN","IBNCPEV1",9,0)
 ;newed in IBNCPEV
"RTN","IBNCPEV1",10,0)
 S (IBECME,IBPAT,IBRX,IBQ,IBSCR,IBPAGE,IBDTL,IBDIVS)=0
"RTN","IBNCPEV1",11,0)
 ;date
"RTN","IBNCPEV1",12,0)
 F  D DATE^IBNCPDPE Q:IBQ  Q:$$TESTDATA^IBNCPDPE
"RTN","IBNCPEV1",13,0)
 Q:IBQ
"RTN","IBNCPEV1",14,0)
 N IBMLTDV S IBMLTDV=$$MULTPHRM^BPSUTIL()
"RTN","IBNCPEV1",15,0)
 I +IBMLTDV=1 S IBDIVS=+$$MULTIDIV(.IBDIVS) S:IBDIVS=0 IBDIVS(0)="0^ALL" I IBDIVS=-1 S IBQ=1 Q
"RTN","IBNCPEV1",16,0)
 I +IBMLTDV=0 S IBDIVS=0,IBDIVS(0)="0^"_$P(IBMLTDV,U,2)
"RTN","IBNCPEV1",17,0)
 D MODE^IBNCPDPE Q:IBQ
"RTN","IBNCPEV1",18,0)
 D DEVICE^IBNCPDPE Q:IBQ
"RTN","IBNCPEV1",19,0)
 Q
"RTN","IBNCPEV1",20,0)
 ;
"RTN","IBNCPEV1",21,0)
 ;/**
"RTN","IBNCPEV1",22,0)
GETRX(IBECMENO,IBST,IBEND,IBECME) ; get ien of file 52 from #366.14
"RTN","IBNCPEV1",23,0)
 ; input - 
"RTN","IBNCPEV1",24,0)
 ;   IBECMENO = ECME # input from the user (with or without leading zeros)
"RTN","IBNCPEV1",25,0)
 ;   IBST = start date (FM format)
"RTN","IBNCPEV1",26,0)
 ;   IBEND = end date (FM format)
"RTN","IBNCPEV1",27,0)
 ; output - function value: returns internal entry number of file #52 for the earliest date within the date range
"RTN","IBNCPEV1",28,0)
 ;   IBECME - output variable pass by reference. Returns the external version of the ECME# with leading zeros
"RTN","IBNCPEV1",29,0)
 ;
"RTN","IBNCPEV1",30,0)
 ;  This subroutine is called when the user enters an ECME# as part of the search criteria
"RTN","IBNCPEV1",31,0)
 ;
"RTN","IBNCPEV1",32,0)
 N IBDATE,IBNO,IBIEN,IBFOUND,IBRXIEN,ECMELEN,IBRXIEN
"RTN","IBNCPEV1",33,0)
 S (IBFOUND,IBRXIEN)=0
"RTN","IBNCPEV1",34,0)
 F ECMELEN=12,7 D  Q:IBFOUND
"RTN","IBNCPEV1",35,0)
 . I $L(+IBECMENO)>ECMELEN Q
"RTN","IBNCPEV1",36,0)
 . S IBECMENO=$$RJ^XLFSTR(+IBECMENO,ECMELEN,0)   ; build ECME# with leading zeros to proper length
"RTN","IBNCPEV1",37,0)
 . S IBDATE=+$O(^IBCNR(366.14,"E",IBECMENO,IBST-1)) Q:'IBDATE
"RTN","IBNCPEV1",38,0)
 . I IBDATE>IBEND Q
"RTN","IBNCPEV1",39,0)
 . S IBNO=+$O(^IBCNR(366.14,"E",IBECMENO,IBDATE,0)) Q:'IBNO
"RTN","IBNCPEV1",40,0)
 . S IBIEN=+$O(^IBCNR(366.14,"B",IBDATE,0)) Q:'IBIEN
"RTN","IBNCPEV1",41,0)
 . S IBRXIEN=+$P($G(^IBCNR(366.14,IBIEN,1,IBNO,2)),U,1)
"RTN","IBNCPEV1",42,0)
 . I IBRXIEN S IBFOUND=1,IBECME=IBECMENO Q
"RTN","IBNCPEV1",43,0)
 . Q
"RTN","IBNCPEV1",44,0)
 Q IBRXIEN
"RTN","IBNCPEV1",45,0)
 ;
"RTN","IBNCPEV1",46,0)
DSTAT(IBD2,IBD3,IBD4,IBINS,IBD7) ; finish event
"RTN","IBNCPEV1",47,0)
 ;input:
"RTN","IBNCPEV1",48,0)
 ;IBD2 - node ^IBCNR(366.14,D0,1,D1,2)
"RTN","IBNCPEV1",49,0)
 ;IBD3 - node ^IBCNR(366.14,D0,1,D1,3)
"RTN","IBNCPEV1",50,0)
 ;IBD4 - node ^IBCNR(366.14,D0,1,D1,4)
"RTN","IBNCPEV1",51,0)
 ;IBINS - multiple of ^IBCNR(366.14,D0,1,D1,5)
"RTN","IBNCPEV1",52,0)
 ;IBD7 - node ^IBCNR(366.14,D0,1,D1,7)
"RTN","IBNCPEV1",53,0)
 ;
"RTN","IBNCPEV1",54,0)
 N IBX,IBT,IBSC,IB1ST,IBNXT,IBEXMPV
"RTN","IBNCPEV1",55,0)
 S IB1ST=1
"RTN","IBNCPEV1",56,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",57,0)
 ;
"RTN","IBNCPEV1",58,0)
 W !?10,"ELIGIBILITY: "
"RTN","IBNCPEV1",59,0)
 W $$EXTERNAL^DILFD(366.141,7.05,,$P(IBD7,U,5))    ; esg - 5/1/11 - IB*2*452
"RTN","IBNCPEV1",60,0)
 ;
"RTN","IBNCPEV1",61,0)
 W !?10,"EI/SC INDICATORS: "
"RTN","IBNCPEV1",62,0)
 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX^IBNCPDP1),";",3),IBSC=$P(IBT,U,2) Q:IBSC=""  S IBEXMPV=$$EXMPFLDS(IBSC,IBD4) D:IBEXMPV]""  Q:IBQ!(IBEXMPV=3)
"RTN","IBNCPEV1",63,0)
 . I IBEXMPV=3 W "overridden by the user" Q
"RTN","IBNCPEV1",64,0)
 . I 'IB1ST W "," I $X>70 D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",65,0)
 . W " ",IBSC,":",$S(IBEXMPV=1:"Yes",IBEXMPV=0:"No",IBEXMPV=2:"No Answer",1:"?") S IB1ST=0
"RTN","IBNCPEV1",66,0)
 Q:IBQ
"RTN","IBNCPEV1",67,0)
 ;
"RTN","IBNCPEV1",68,0)
 I $P(IBD2,U,4) D CHKP^IBNCPEV Q:IBQ  W !?10,"DRUG:",$$DRUGNAM(+$P(IBD2,U,4))
"RTN","IBNCPEV1",69,0)
 D CHKP^IBNCPEV Q:IBQ  W !?10
"RTN","IBNCPEV1",70,0)
 W "NDC:",$S($P(IBD2,U,5):$P(IBD2,U,5),1:"No")
"RTN","IBNCPEV1",71,0)
 W ", NCPDP QTY:",$S($P(IBD2,U,14):$P(IBD2,U,14),1:"No")
"RTN","IBNCPEV1",72,0)
 W $$UNITDISP($P(IBD2,U,14),$P(IBD2,U,15))   ; display NCPDP unit type
"RTN","IBNCPEV1",73,0)
 ;
"RTN","IBNCPEV1",74,0)
 D CHKP^IBNCPEV Q:IBQ  W !?10
"RTN","IBNCPEV1",75,0)
 W "BILLED QTY:",$S($P(IBD2,U,8):$P(IBD2,U,8),1:"No")
"RTN","IBNCPEV1",76,0)
 W $$UNITDISP($P(IBD2,U,8),$P(IBD2,U,13))    ; display billing unit type
"RTN","IBNCPEV1",77,0)
 W ", UNIT COST:",$S($P(IBD3,U,4):$P(IBD3,U,4),1:"No")
"RTN","IBNCPEV1",78,0)
 I $P(IBD2,U,10)]"" W ", DEA:",$P(IBD2,U,10)
"RTN","IBNCPEV1",79,0)
 ;
"RTN","IBNCPEV1",80,0)
 ; display insurance subfile data
"RTN","IBNCPEV1",81,0)
 S IBX=0,IBNXT=0 F  S IBX=$O(IBINS(IBX)) Q:'IBX  D  Q:IBQ  S IBNXT=1
"RTN","IBNCPEV1",82,0)
 . N Y,Y3,PLANIEN
"RTN","IBNCPEV1",83,0)
 . S Y=$G(IBINS(IBX,0))
"RTN","IBNCPEV1",84,0)
 . S PLANIEN=+$P(Y,U,2) I 'PLANIEN W "@@@@" Q
"RTN","IBNCPEV1",85,0)
 . I IBNXT D CHKP^IBNCPEV Q:IBQ  W !?10,"-----------"
"RTN","IBNCPEV1",86,0)
 . D CHKP^IBNCPEV Q:IBQ  W !?10
"RTN","IBNCPEV1",87,0)
 . ;
"RTN","IBNCPEV1",88,0)
 . ;IB*2.0*516/baa - Use HIPAA compliant fields
"RTN","IBNCPEV1",89,0)
 . ;W "PLAN:",$P($G(^IBA(355.3,PLANIEN,0)),U,3)
"RTN","IBNCPEV1",90,0)
 . W "PLAN:",$$GET1^DIQ(355.3,PLANIEN_",",2.01)
"RTN","IBNCPEV1",91,0)
 . ;W ", INSURANCE:",$P($G(^DIC(36,+$G(^IBA(355.3,PLANIEN,0)),0)),U,1)
"RTN","IBNCPEV1",92,0)
 . W ", INSURANCE:",$$GET1^DIQ(355.3,PLANIEN_",",.01,"E")
"RTN","IBNCPEV1",93,0)
 . I +IBD7>0 W ", COB:",$S(+IBD7=2:"S",1:"P")
"RTN","IBNCPEV1",94,0)
 . ;
"RTN","IBNCPEV1",95,0)
 . ; display pharmacy plan ID and name
"RTN","IBNCPEV1",96,0)
 . D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",97,0)
 . S Y3=$G(IBINS(IBX,3))
"RTN","IBNCPEV1",98,0)
 . W !?10,"PHARMACY PLAN:",$S($L($P(Y3,U,3)):$$PLANID($P(Y3,U,3)),1:"N/A")
"RTN","IBNCPEV1",99,0)
 . ;
"RTN","IBNCPEV1",100,0)
 . D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",101,0)
 . I $P(Y,U,3)]"" W "BIN:",$P(Y,U,3) S IB1ST=0
"RTN","IBNCPEV1",102,0)
 . I $P(Y,U,4)]"" W:'IB1ST ", " W "PCN:",$P(Y,U,4) S IB1ST=0
"RTN","IBNCPEV1",103,0)
 . I $P(Y,U,5)]"" W:'IB1ST ", " W "PAYER SHEET B1:",$P(Y,U,5) S IB1ST=0
"RTN","IBNCPEV1",104,0)
 . ;
"RTN","IBNCPEV1",105,0)
 . D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",106,0)
 . S Y=$G(IBINS(IBX,1))
"RTN","IBNCPEV1",107,0)
 . I $P(Y,U,4)]"" W "PAYER SHEET B2:",$P(Y,U,4) S IB1ST=0
"RTN","IBNCPEV1",108,0)
 . I $P(Y,U,5)]"" W:'IB1ST ", " W "PAYER SHEET B3:",$P(Y,U,5)
"RTN","IBNCPEV1",109,0)
 . ;
"RTN","IBNCPEV1",110,0)
 . D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",111,0)
 . S Y=$G(IBINS(IBX,2))
"RTN","IBNCPEV1",112,0)
 . W !?10,"BASIS OF COST DETERM:",$S($L($P(Y,U,2)):$$BOCD^IBNCPEV($P(Y,U,2)),1:"N/A")
"RTN","IBNCPEV1",113,0)
 . D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",114,0)
 . W !?10,"DISPENSING FEE:",$S($L($P(Y,U,1)):$J($P(Y,U,1),0,2),1:"N/A")
"RTN","IBNCPEV1",115,0)
 . W ", ADMIN FEE:",$S($L($P(Y,U,5)):$J($P(Y,U,5),0,2),1:"N/A")
"RTN","IBNCPEV1",116,0)
 . D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",117,0)
 . W !?10,"INGREDIENT COST:",$S($L($P(Y,U,6)):$J($P(Y,U,6),0,2),1:"N/A")
"RTN","IBNCPEV1",118,0)
 . W ", U&C CHARGE:",$S($L($P(Y,U,7)):$J($P(Y,U,7),0,2),1:"N/A")
"RTN","IBNCPEV1",119,0)
 . W ", GROSS AMT DUE:",$S($L($P(Y,U,4)):$J($P(Y,U,4),0,2),1:"N/A")
"RTN","IBNCPEV1",120,0)
 . Q
"RTN","IBNCPEV1",121,0)
 ;
"RTN","IBNCPEV1",122,0)
 Q:IBQ
"RTN","IBNCPEV1",123,0)
 ;
"RTN","IBNCPEV1",124,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",125,0)
 W !?10,"USER:",$$USR^IBNCPEV(+$P(IBD3,U,10))
"RTN","IBNCPEV1",126,0)
 Q
"RTN","IBNCPEV1",127,0)
 ;
"RTN","IBNCPEV1",128,0)
UNITDISP(QTY,TYP) ; display type of units
"RTN","IBNCPEV1",129,0)
 I 'QTY,TYP="" Q ""       ; display nothing if no QTY or TYP
"RTN","IBNCPEV1",130,0)
 I TYP="" S TYP="  "      ; default if ""
"RTN","IBNCPEV1",131,0)
 Q " ("_TYP_")"
"RTN","IBNCPEV1",132,0)
 ;
"RTN","IBNCPEV1",133,0)
PLANID(PLID) ; display Pharmacy plan ID and the name
"RTN","IBNCPEV1",134,0)
 ; Input:  PLID - the external plan ID as found in (366.03,.01). Stored for this report as (366.1412,.303).
"RTN","IBNCPEV1",135,0)
 N PLNAME,PLANIEN
"RTN","IBNCPEV1",136,0)
 S PLID=$G(PLID),PLNAME=""
"RTN","IBNCPEV1",137,0)
 I PLID="" G PLANIDX
"RTN","IBNCPEV1",138,0)
 S PLANIEN=+$O(^IBCNR(366.03,"B",PLID,""),-1)
"RTN","IBNCPEV1",139,0)
 I 'PLANIEN G PLANIDX
"RTN","IBNCPEV1",140,0)
 S PLNAME=$P($G(^IBCNR(366.03,PLANIEN,0)),U,2)
"RTN","IBNCPEV1",141,0)
PLANIDX ;
"RTN","IBNCPEV1",142,0)
 Q PLID_" ("_PLNAME_")"
"RTN","IBNCPEV1",143,0)
 ;
"RTN","IBNCPEV1",144,0)
 ;get Exemption status by name
"RTN","IBNCPEV1",145,0)
 ;IBEXMP - exemption (like "AO","EC", etc)
"RTN","IBNCPEV1",146,0)
 ;IBNODE - node ^IBCNR(366.14,D0,1,D1,4)
"RTN","IBNCPEV1",147,0)
EXMPFLDS(IBEXMP,IBNODE) ;
"RTN","IBNCPEV1",148,0)
 Q:IBEXMP="AO" $P(IBNODE,U,1)
"RTN","IBNCPEV1",149,0)
 Q:IBEXMP="CV" $P(IBNODE,U,2)
"RTN","IBNCPEV1",150,0)
 Q:IBEXMP="SWA" $P(IBNODE,U,3)
"RTN","IBNCPEV1",151,0)
 Q:IBEXMP="IR" $P(IBNODE,U,4)
"RTN","IBNCPEV1",152,0)
 Q:IBEXMP="MST" $P(IBNODE,U,5)
"RTN","IBNCPEV1",153,0)
 Q:IBEXMP="HNC" $P(IBNODE,U,6)
"RTN","IBNCPEV1",154,0)
 Q:IBEXMP="SC" $P(IBNODE,U,7)
"RTN","IBNCPEV1",155,0)
 Q:IBEXMP="SHAD" $P(IBNODE,U,8)
"RTN","IBNCPEV1",156,0)
 Q ""
"RTN","IBNCPEV1",157,0)
 ;returns DFN from file #366.14 by prescription ien of file #50
"RTN","IBNCPEV1",158,0)
GETDFN(IBRX) ;
"RTN","IBNCPEV1",159,0)
 N IB1,IB2
"RTN","IBNCPEV1",160,0)
 S IB1=+$O(^IBCNR(366.14,"I",IBRX,0))
"RTN","IBNCPEV1",161,0)
 I IB1=0 Q 0
"RTN","IBNCPEV1",162,0)
 S IB2=+$O(^IBCNR(366.14,"I",IBRX,IB1,0))
"RTN","IBNCPEV1",163,0)
 I IB2=0 Q 0
"RTN","IBNCPEV1",164,0)
 Q +$P($G(^IBCNR(366.14,IB1,1,IB2,0)),U,3)
"RTN","IBNCPEV1",165,0)
 ;
"RTN","IBNCPEV1",166,0)
 ;return DRUG name (#50,.01)
"RTN","IBNCPEV1",167,0)
 ;IBX1 - ien in file #50
"RTN","IBNCPEV1",168,0)
DRUGNAM(IBX1) ;
"RTN","IBNCPEV1",169,0)
 ;Q $P($G(^PSDRUG(IBX1,0)),U)
"RTN","IBNCPEV1",170,0)
 N X
"RTN","IBNCPEV1",171,0)
 K ^TMP($J,"IBNCPDP50")
"RTN","IBNCPEV1",172,0)
 D DATA^PSS50(IBX1,"","","","","IBNCPDP50")
"RTN","IBNCPEV1",173,0)
 S X=$G(^TMP($J,"IBNCPDP50",IBX1,.01))
"RTN","IBNCPEV1",174,0)
 K ^TMP($J,"IBNCPDP50")
"RTN","IBNCPEV1",175,0)
 Q X
"RTN","IBNCPEV1",176,0)
 ;
"RTN","IBNCPEV1",177,0)
DRUGAPI(DRUGIEN,FLDNUM) ;
"RTN","IBNCPEV1",178,0)
 ;return a DRUG's field value
"RTN","IBNCPEV1",179,0)
 ;input:
"RTN","IBNCPEV1",180,0)
 ; DRUGIEN - ien #50
"RTN","IBNCPEV1",181,0)
 ; FLDNUM - field number (like .01)
"RTN","IBNCPEV1",182,0)
 ;output:
"RTN","IBNCPEV1",183,0)
 ; returned value that contains the external value of the specified field
"RTN","IBNCPEV1",184,0)
 N IBARR,DIQ,DIC
"RTN","IBNCPEV1",185,0)
 S DIQ="IBARR",DIQ(0)="E",DIC=50
"RTN","IBNCPEV1",186,0)
 D EN^PSSDI(50,"IB",DIC,.FLDNUM,.DRUGIEN,.DIQ)
"RTN","IBNCPEV1",187,0)
 Q $G(IBARR(50,DRUGIEN,FLDNUM,"E"))
"RTN","IBNCPEV1",188,0)
 ;
"RTN","IBNCPEV1",189,0)
 ;reopen
"RTN","IBNCPEV1",190,0)
REOPEN ;
"RTN","IBNCPEV1",191,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",192,0)
 D SUBHDR^IBNCPEV
"RTN","IBNCPEV1",193,0)
 ;IB*2.0*516/baa Use HIPAA compliant fields
"RTN","IBNCPEV1",194,0)
 ;I +$P(IBD3,U,3) D CHKP^IBNCPEV Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV1",195,0)
 I +$P(IBD3,U,3) D CHKP^IBNCPEV Q:IBQ  W !?10,"PLAN:",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",2.01),", INSURANCE: ",$$GET1^DIQ(355.3,+$P(IBD3,U,3)_",",.01,"E")
"RTN","IBNCPEV1",196,0)
 I $L($P(IBD3,U,6))>2 D CHKP^IBNCPEV Q:IBQ  W !?10,"REOPEN COMMENTS:",$P(IBD3,U,6)
"RTN","IBNCPEV1",197,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",198,0)
 D DISPUSR^IBNCPEV
"RTN","IBNCPEV1",199,0)
 Q
"RTN","IBNCPEV1",200,0)
 ;
"RTN","IBNCPEV1",201,0)
 ;Prompts user to select multiple divisions (BPS PHARMACIES)
"RTN","IBNCPEV1",202,0)
 ; in order to filter the report by division(s) or for ALL divisions
"RTN","IBNCPEV1",203,0)
 ; 
"RTN","IBNCPEV1",204,0)
 ;returns composite value:
"RTN","IBNCPEV1",205,0)
 ;1st piece
"RTN","IBNCPEV1",206,0)
 ; 1 - divisions were selected 
"RTN","IBNCPEV1",207,0)
 ; 0 - divisions were NOT selected 
"RTN","IBNCPEV1",208,0)
 ; -1 if up arrow entered or timeout
"RTN","IBNCPEV1",209,0)
 ;2nd piece
"RTN","IBNCPEV1",210,0)
 ; A-all or D - division(s) in the BPS PHARMACIES file #9002313.56)
"RTN","IBNCPEV1",211,0)
 ;
"RTN","IBNCPEV1",212,0)
 ;and by reference:
"RTN","IBNCPEV1",213,0)
 ;IBPSPHAR (only if the user selects "D") - a local array with iens and names 
"RTN","IBNCPEV1",214,0)
 ;  of BPS PHARMACIES (file #9002313.56) selected by the user
"RTN","IBNCPEV1",215,0)
 ;  IBPSPHAR(ien of file #9002313.56) = ien of file #9002313.56 ^ name of the BPS PHARMACY
"RTN","IBNCPEV1",216,0)
 ;
"RTN","IBNCPEV1",217,0)
MULTIDIV(IBPSPHAR) ;
"RTN","IBNCPEV1",218,0)
 N IBDIVCNT,IBANSW,IBRETV
"RTN","IBNCPEV1",219,0)
 S IBRETV=$$SELPHARM^BPSUTIL(.IBPSPHAR)
"RTN","IBNCPEV1",220,0)
 I IBRETV="^" Q -1  ;exit
"RTN","IBNCPEV1",221,0)
 I IBRETV="A" Q "0^A"
"RTN","IBNCPEV1",222,0)
 Q "1^D"
"RTN","IBNCPEV1",223,0)
 ;
"RTN","IBNCPEV1",224,0)
 ;check if ePharmacy division in IB36614 in among those selected by the user
"RTN","IBNCPEV1",225,0)
 ;IBDIVS - a local array (by reference) with divisions selected by the user
"RTN","IBNCPEV1",226,0)
 ;returns 0 - not among selected divisions, 1 - among them
"RTN","IBNCPEV1",227,0)
CHECKDIV(IB36614,IBDIVS) ;
"RTN","IBNCPEV1",228,0)
 I $D(IBDIVS(IB36614)) Q 1
"RTN","IBNCPEV1",229,0)
 Q 0
"RTN","IBNCPEV1",230,0)
 ;
"RTN","IBNCPEV1",231,0)
 ;Compile the string for divisions
"RTN","IBNCPEV1",232,0)
 ;input:
"RTN","IBNCPEV1",233,0)
 ;IBDVS - division local array by reference
"RTN","IBNCPEV1",234,0)
 ;output: 
"RTN","IBNCPEV1",235,0)
 ; return value with the resulting string
"RTN","IBNCPEV1",236,0)
DISPLDIV(IBDVS) ;
"RTN","IBNCPEV1",237,0)
 I ('$D(IBDVS))!($G(IBDVS)="") Q ""  ;invalid parameters
"RTN","IBNCPEV1",238,0)
 I IBDVS=0 Q ""  ;if "all" or single division
"RTN","IBNCPEV1",239,0)
 N IBZ,IBCNT,IBDIVSTR
"RTN","IBNCPEV1",240,0)
 S IBDIVSTR=""
"RTN","IBNCPEV1",241,0)
 S IBZ=0,IBCNT=0
"RTN","IBNCPEV1",242,0)
 F  S IBZ=$O(IBDVS(IBZ)) Q:+IBZ=0  D
"RTN","IBNCPEV1",243,0)
 . I IBCNT>0 S IBDIVSTR=IBDIVSTR_", "
"RTN","IBNCPEV1",244,0)
 . S IBCNT=IBCNT+1
"RTN","IBNCPEV1",245,0)
 . S IBDIVSTR=IBDIVSTR_$P(IBDVS(IBZ),U,2)
"RTN","IBNCPEV1",246,0)
 I $L(IBDIVSTR)'<80 S IBDIVSTR=$E(IBDIVSTR,1,75)_"..."
"RTN","IBNCPEV1",247,0)
 Q $$CENTERIT(IBDIVSTR,80)
"RTN","IBNCPEV1",248,0)
 ;
"RTN","IBNCPEV1",249,0)
 ;Compile the string for title
"RTN","IBNCPEV1",250,0)
 ;input:
"RTN","IBNCPEV1",251,0)
 ;IBBDT - begin date
"RTN","IBNCPEV1",252,0)
 ;IBEDT - end date
"RTN","IBNCPEV1",253,0)
 ;IBDTL - summary/detail mode
"RTN","IBNCPEV1",254,0)
 ;IBDIVS - division local array by reference
"RTN","IBNCPEV1",255,0)
 ;output: 
"RTN","IBNCPEV1",256,0)
 ; return value with the resulting string
"RTN","IBNCPEV1",257,0)
DISPTITL(IBBDT,IBEDT,IBDTL,IBDIVS) ;
"RTN","IBNCPEV1",258,0)
 I ('$D(IBDIVS))!($G(IBDIVS)="")!($G(IBBDT)="")!($G(IBEDT)="")!($G(IBDTL)="") Q ""  ;invalid parameters
"RTN","IBNCPEV1",259,0)
 N IBTITL
"RTN","IBNCPEV1",260,0)
 S IBTITL="BILLING ECME EVENTS ON "_$$DAT^IBNCPEV(IBBDT)
"RTN","IBNCPEV1",261,0)
 I IBBDT'=IBEDT S IBTITL=IBTITL_" TO "_$$DAT^IBNCPEV(IBEDT)
"RTN","IBNCPEV1",262,0)
 S IBTITL=IBTITL_" ("_$S(IBDTL:"DETAILED",1:"SUMMARY")_") for "
"RTN","IBNCPEV1",263,0)
 I IBDIVS'=0 S IBTITL=IBTITL_"SELECTED DIVISIONS:"
"RTN","IBNCPEV1",264,0)
 I IBDIVS=0 S IBTITL=IBTITL_$P(IBDIVS(0),U,2)_" DIVISION" I $P(IBDIVS(0),U,2)="ALL" S IBTITL=IBTITL_"S"
"RTN","IBNCPEV1",265,0)
 Q $$CENTERIT(IBTITL,80)
"RTN","IBNCPEV1",266,0)
 ;
"RTN","IBNCPEV1",267,0)
 ;Center the string (add left pads to center the string)
"RTN","IBNCPEV1",268,0)
 ;input:
"RTN","IBNCPEV1",269,0)
 ;IBSTR - input string
"RTN","IBNCPEV1",270,0)
 ;IBMAXLEN - max len
"RTN","IBNCPEV1",271,0)
 ;output: 
"RTN","IBNCPEV1",272,0)
 ; return value with the resulting string
"RTN","IBNCPEV1",273,0)
CENTERIT(IBSTR,IBMAXLEN) ;
"RTN","IBNCPEV1",274,0)
 I ($G(IBSTR)="")!(+$G(IBMAXLEN)=0) Q ""
"RTN","IBNCPEV1",275,0)
 N IBLEFT,IBSP
"RTN","IBNCPEV1",276,0)
 S IBSTR=$E(IBSTR,1,IBMAXLEN)
"RTN","IBNCPEV1",277,0)
 S IBLEFT=((IBMAXLEN-$L(IBSTR))/2)\1
"RTN","IBNCPEV1",278,0)
 S IBSP=""
"RTN","IBNCPEV1",279,0)
 S $P(IBSP," ",IBLEFT+1)=""
"RTN","IBNCPEV1",280,0)
 Q IBSP_IBSTR
"RTN","IBNCPEV1",281,0)
 ;Get list of indicators that were not answered
"RTN","IBNCPEV1",282,0)
GETNOANS(IBD4) ;
"RTN","IBNCPEV1",283,0)
 N IBX,IBT,IBSC,IBEXMPV,IBQ,IBRET
"RTN","IBNCPEV1",284,0)
 S IBQ=0,IBRET=""
"RTN","IBNCPEV1",285,0)
 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX^IBNCPDP1),";",3),IBSC=$P(IBT,U,2) Q:IBSC=""  S IBEXMPV=$$EXMPFLDS^IBNCPEV1(IBSC,IBD4) D:IBEXMPV]""
"RTN","IBNCPEV1",286,0)
 . I IBEXMPV=2 S IBRET=IBRET_","_IBSC
"RTN","IBNCPEV1",287,0)
 Q $S(IBRET="":"SC",1:$E(IBRET,2,99))
"RTN","IBNCPEV1",288,0)
 ;IBNCPEV1
"RTN","IBOTR3")
0^147^B31663645^B29774240
"RTN","IBOTR3",1,0)
IBOTR3 ;ALB/CPM - INSURANCE PAYMENT TREND REPORT - OUTPUT ;5-JUN-91
"RTN","IBOTR3",2,0)
 ;;2.0;INTEGRATED BILLING;**42,80,100,118,128,133,447,516**;21-MAR-94;Build 123
"RTN","IBOTR3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOTR3",4,0)
 ;
"RTN","IBOTR3",5,0)
 ;MAP TO DGCROTR3
"RTN","IBOTR3",6,0)
 ;
"RTN","IBOTR3",7,0)
EN(IBDIV) ; - Entry point from IBOTR2.
"RTN","IBOTR3",8,0)
 ;
"RTN","IBOTR3",9,0)
 ; - Extract zero totals if no data available.
"RTN","IBOTR3",10,0)
 I $G(IBXTRACT),'$D(^TMP($J,"IBOTR",IBDIV)) D  G END
"RTN","IBOTR3",11,0)
 .S IBUNPD=0 F X=1:1:8 S IBTT(X)=0
"RTN","IBOTR3",12,0)
 .D E^IBJDE(8,0)
"RTN","IBOTR3",13,0)
 ;
"RTN","IBOTR3",14,0)
 I $G(IBXTRACT) G IBX ; Calculate grand totals for extract.
"RTN","IBOTR3",15,0)
 ;
"RTN","IBOTR3",16,0)
 S IBPAG=0,IBLINE="",$P(IBLINE,"-",IOM)="-",Y=DT D D^DIQ S IBTDT=Y
"RTN","IBOTR3",17,0)
 I $D(IBAF) D ADDFLD^IBOTR4
"RTN","IBOTR3",18,0)
 I '$D(^TMP($J,"IBOTR",IBDIV)) D  S IBCALC=3 D PAUSE G END
"RTN","IBOTR3",19,0)
 .S IBX=$S("Bb"'[IBBRT:IBBRT,IBBRN="C":"A",1:"I")
"RTN","IBOTR3",20,0)
 .D HDR W !!,"  NO INFORMATION MATCHES SELECTION CRITERIA."
"RTN","IBOTR3",21,0)
 ;
"RTN","IBOTR3",22,0)
IBX S IBX="" F  S IBX=$O(^TMP($J,"IBOTR",IBDIV,IBX)) Q:IBX=""  D  Q:IBQUIT
"RTN","IBOTR3",23,0)
 .I IBPRNT'="G"!('$G(IBG)) S IBTT="0^0^0^0^0^0^0^0^0^0"
"RTN","IBOTR3",24,0)
 .D:'$G(IBXTRACT) HDR Q:IBQUIT  D INS
"RTN","IBOTR3",25,0)
 ;
"RTN","IBOTR3",26,0)
END K IBINS,IBPAG,IBLINE,IBTDT,IBX,IBTT,IBTI,IBCALC,IBBN,IBD,IBDS,IBAFT
"RTN","IBOTR3",27,0)
 K IBAMT,IBG,IBI,IBPERC,IBUNPD,X,X1,X2,IBGRP
"RTN","IBOTR3",28,0)
 Q
"RTN","IBOTR3",29,0)
 ;
"RTN","IBOTR3",30,0)
INS ; - Loop through each insurance company or amount.
"RTN","IBOTR3",31,0)
 I IBSORT="I" D
"RTN","IBOTR3",32,0)
 .S IBINS="" F  S IBINS=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS)) Q:IBINS=""  D BILLNO Q:IBQUIT
"RTN","IBOTR3",33,0)
 I IBSORT'="I" D
"RTN","IBOTR3",34,0)
 .S IBAMT="" F  S IBAMT=$O(^TMP($J,"IBOTRS",IBDIV,IBX,IBAMT)) Q:IBAMT=""  S IBINS="" F  S IBINS=$O(^TMP($J,"IBOTRS",IBDIV,IBX,IBAMT,IBINS)) Q:IBINS=""!(IBQUIT)  D BILLNO Q:IBQUIT
"RTN","IBOTR3",35,0)
 ;
"RTN","IBOTR3",36,0)
 ; - Extract grand totals data.
"RTN","IBOTR3",37,0)
 I $G(IBXTRACT),'IBQUIT D  Q
"RTN","IBOTR3",38,0)
 .S IBUNPD=$J($P(IBTT,U,2)-$P(IBTT,U,5),0,2)
"RTN","IBOTR3",39,0)
 .F X=1:1:8 S IBTT(X)=$S(19'[X:$J($P(IBTT,U,X),0,2),1:$P(IBTT,U,X))
"RTN","IBOTR3",40,0)
 .D E^IBJDE(8,0)
"RTN","IBOTR3",41,0)
 ;
"RTN","IBOTR3",42,0)
 I 'IBQUIT,'$G(IBG) D GTOT^IBOTR4 ; Write grand totals for report.
"RTN","IBOTR3",43,0)
 Q
"RTN","IBOTR3",44,0)
 ;
"RTN","IBOTR3",45,0)
BILLNO ; - Loop through all bills for an insurance company.
"RTN","IBOTR3",46,0)
 I $G(IBXTRACT) G LOOP
"RTN","IBOTR3",47,0)
 I $Y>(IOSL-15) S IBCALC=15 D PAUSE Q:IBQUIT  D HDR Q:IBQUIT
"RTN","IBOTR3",48,0)
 I IBPRNT'="G" S IBDS=0,IBTI="0^0^0^0" D INSADD
"RTN","IBOTR3",49,0)
 E  I $G(IBG) S IBTT="0^0^0^0^0^0^0^0^0^0" D INSADD
"RTN","IBOTR3",50,0)
LOOP ; add group# for p447 
"RTN","IBOTR3",51,0)
 ;S IBBN="" F  S IBBN=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS,IBBN)) Q:IBBN=""  S IBD=^(IBBN) D DETAIL Q:IBQUIT
"RTN","IBOTR3",52,0)
 S IBGRP="" F  S IBGRP=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS,IBGRP)) Q:IBGRP=""!(IBQUIT)  D
"RTN","IBOTR3",53,0)
 . ; IB*2.0*516/TAZ Print the actual group number instead of internal group number.
"RTN","IBOTR3",54,0)
 .;I IBPRNT="M" W !!,"Group #"_$S(IBGRP'=0:IBGRP,1:":  None Defined")
"RTN","IBOTR3",55,0)
 . I IBPRNT="M" W !!,"Group #: "_$S(IBGRP'=0:$$GET1^DIQ(355.3,IBGRP_",",2.02),1:"None Defined")
"RTN","IBOTR3",56,0)
 . ;
"RTN","IBOTR3",57,0)
 .S IBBN="" F  S IBBN=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS,IBGRP,IBBN)) Q:IBBN=""  S IBD=^(IBBN) D DETAIL Q:IBQUIT
"RTN","IBOTR3",58,0)
 I 'IBQUIT D
"RTN","IBOTR3",59,0)
 .I IBPRNT'="G" D SUBTOT^IBOTR4 ; Write insurance co. sub-totals.
"RTN","IBOTR3",60,0)
 .E  D:$G(IBG) GTOT^IBOTR4 ;      Write insurance co. grand totals.
"RTN","IBOTR3",61,0)
 Q
"RTN","IBOTR3",62,0)
 ;
"RTN","IBOTR3",63,0)
DETAIL ; - Write out detail lines.
"RTN","IBOTR3",64,0)
 N IBPEN S IBPEN=$S($P(IBBN,"@@",2)["*":0,1:$P(IBD,U,6)-$P(IBD,U,7))
"RTN","IBOTR3",65,0)
 G:IBPRNT="S" SUBTOT G:IBPRNT="G" GNDTOT
"RTN","IBOTR3",66,0)
 I $Y>(IOSL-7) S IBCALC=7 D PAUSE Q:IBQUIT  D HDR Q:IBQUIT  D INSADD
"RTN","IBOTR3",67,0)
 ;W !,$P(IBBN,"@@",2),?10,$P(IBBN,"@@"),?34,$$DATE($P(IBD,U,2))
"RTN","IBOTR3",68,0)
 W !,$P(IBBN,"@@",2),?13,$P(IBBN,"@@"),?35,$$DATE($P(IBD,U,2))
"RTN","IBOTR3",69,0)
 W ?44,$$DATE($P(IBD,U,3)),?54,$$DATE($P(IBD,U,4))
"RTN","IBOTR3",70,0)
 W ?64,$S($P(IBD,U,5):$$DATE($P(IBD,U,5)),1:$P(IBD,U,5))
"RTN","IBOTR3",71,0)
 S X1=$S($P(IBD,U,5):$P(IBD,U,5),1:DT),X2=$P(IBD,U,4) D ^%DTC S IBDS=IBDS+X
"RTN","IBOTR3",72,0)
 W ?74,$J(X,4),?79,$J($P(IBD,U,6),11,2),?91,$J($P(IBD,U,7),10,2)
"RTN","IBOTR3",73,0)
 W ?102,$J($P(IBD,U,6)-$P(IBD,U,7),11,2),?114,$J(IBPEN,11,2)
"RTN","IBOTR3",74,0)
 W ?126,$J($S(+$P(IBD,U,6)=0:0,1:$P(IBD,U,7)/$P(IBD,U,6)*100),6,2)
"RTN","IBOTR3",75,0)
 ;
"RTN","IBOTR3",76,0)
SUBTOT ; - Update sub-totals.
"RTN","IBOTR3",77,0)
 S $P(IBTI,U)=$P(IBTI,U)+1,$P(IBTI,U,2)=$P(IBTI,U,2)+$P(IBD,U,6)
"RTN","IBOTR3",78,0)
 S $P(IBTI,U,3)=$P(IBTI,U,3)+$P(IBD,U,7),$P(IBTI,U,4)=$P(IBTI,U,4)+IBPEN
"RTN","IBOTR3",79,0)
 ;
"RTN","IBOTR3",80,0)
GNDTOT ; - Update grand totals.
"RTN","IBOTR3",81,0)
 S $P(IBTT,U)=$P(IBTT,U)+1,$P(IBTT,U,2)=$P(IBTT,U,2)+$P(IBD,U,6)
"RTN","IBOTR3",82,0)
 I +$P($P(IBBN,"@@"),"(",2)<65 S $P(IBTT,U,3)=$P(IBTT,U,3)+$P(IBD,U,6),$P(IBTT,U,6)=$P(IBTT,U,6)+$P(IBD,U,7)
"RTN","IBOTR3",83,0)
 E  S $P(IBTT,U,4)=$P(IBTT,U,4)+$P(IBD,U,6),$P(IBTT,U,7)=$P(IBTT,U,7)+$P(IBD,U,7)
"RTN","IBOTR3",84,0)
 S $P(IBTT,U,5)=$P(IBTT,U,5)+$P(IBD,U,7),$P(IBTT,U,8)=$P(IBTT,U,8)+IBPEN
"RTN","IBOTR3",85,0)
 I $G(IBCANC),$P(IBD,U,8) S $P(IBTT,U,9)=$P(IBTT,U,9)+1,$P(IBTT,U,10)=$P(IBTT,U,10)+$P(IBD,U,6)
"RTN","IBOTR3",86,0)
 Q
"RTN","IBOTR3",87,0)
 ;
"RTN","IBOTR3",88,0)
HDR ; - Print the report header.
"RTN","IBOTR3",89,0)
 S IBPAG=IBPAG+1 W @IOF,IBRTN," PAYMENT TREND REPORT - "
"RTN","IBOTR3",90,0)
 W $S(IBX="I":"INPATIENT",IBX="O":"OUTPATIENT",1:"COMBINED INPATIENT AND OUTPATIENT")," BILLING"
"RTN","IBOTR3",91,0)
 W ?109,IBTDT,"   PAGE ",$J(IBPAG,3),!
"RTN","IBOTR3",92,0)
 I IBDIV W "For: ",$P($G(^DG(40.8,IBDIV,0)),U)," - "
"RTN","IBOTR3",93,0)
 W IBDFN,": ",$$DATE(IBBDT)," - ",$$DATE(IBEDT)
"RTN","IBOTR3",94,0)
 I IBPRNT="M" W ?82,"Note: '*' after the Bill No. denotes a CLOSED bill"
"RTN","IBOTR3",95,0)
 W:$D(IBAF) !,IBAFT G:IBPRNT="G" HDL
"RTN","IBOTR3",96,0)
 ;W !!,"BILL",?10,"PATIENT",?55,"DATE",?64,"DATE BILL",?75,"#"
"RTN","IBOTR3",97,0)
 W !!,"BILL",?13,"PATIENT",?55,"DATE",?64,"DATE BILL",?75,"#"
"RTN","IBOTR3",98,0)
 W ?83,"AMOUNT",?93,"AMOUNT",?106,"AMOUNT",?117,"AMOUNT",?127,"PERC"
"RTN","IBOTR3",99,0)
 ;W !,"NUMBER",?10,"NAME (AGE)",?34,"BILL FROM  -  TO",?54,"PRINTED"
"RTN","IBOTR3",100,0)
 W !,"NUMBER",?13,"NAME (AGE)",?35,"BILL FROM  -  TO",?54,"PRINTED"
"RTN","IBOTR3",101,0)
 W ?65,"CLOSED",?74,"DAYS",?83,"BILLED",?92,"COLLECTED",?106,"UNPAID"
"RTN","IBOTR3",102,0)
 W ?117,"PENDING",?127,"COLL"
"RTN","IBOTR3",103,0)
HDL W !,IBLINE
"RTN","IBOTR3",104,0)
 I IBPRNT="M" W !?56,"M A I N  R E P O R T"
"RTN","IBOTR3",105,0)
 I IBPRNT="G" W !?55,"G R A N D  T O T A L S",!
"RTN","IBOTR3",106,0)
 I IBPRNT="S" W !?49,"S U M M A R Y  S T A T I S T I C S"
"RTN","IBOTR3",107,0)
 I "OP"[IBSORT W !?30,"S O R T E D  B Y  A M O U N T  ",$S(IBSORT="O":"O W E",1:"P A I")," D - H I G H E S T  T O  L O W E S T"
"RTN","IBOTR3",108,0)
 S IBQUIT=$$STOP^IBOUTL("Trend Report")
"RTN","IBOTR3",109,0)
 Q
"RTN","IBOTR3",110,0)
 ;
"RTN","IBOTR3",111,0)
DATE(IBX) S:IBX]"" IBX=$E(IBX,4,5)_"/"_$E(IBX,6,7)_"/"_$E(IBX,2,3) Q IBX
"RTN","IBOTR3",112,0)
 ;
"RTN","IBOTR3",113,0)
PAUSE I $E(IOST,1,2)'="C-" Q
"RTN","IBOTR3",114,0)
 I IOSL<60 F IBI=$Y:1:(IOSL-IBCALC) W !
"RTN","IBOTR3",115,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBOTR3",116,0)
 I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBOTR3",117,0)
 Q
"RTN","IBOTR3",118,0)
 ;
"RTN","IBOTR3",119,0)
INSADD ; - Display Insurance Company name and address.
"RTN","IBOTR3",120,0)
 ; Input: IBINS
"RTN","IBOTR3",121,0)
 N D,PH,IEN
"RTN","IBOTR3",122,0)
 W !!?16,"INSURANCE CARRIER: ",$P(IBINS,"@@")
"RTN","IBOTR3",123,0)
 S IEN=$P(IBINS,"@@",2) G:'IEN INSADQ
"RTN","IBOTR3",124,0)
 S D=$G(^DIC(36,IEN,.11)),PH=$P($G(^(.13)),U) G:D="" INSADQ
"RTN","IBOTR3",125,0)
 W:$P(D,U)]"" !?35,$P(D,U)
"RTN","IBOTR3",126,0)
 W:$P(D,U,2)]"" !?35,$P(D,U,2)
"RTN","IBOTR3",127,0)
 W:$P(D,U,3)]"" !?35,$P(D,U,3)
"RTN","IBOTR3",128,0)
 W:$P(D,U)]""!($P(D,U,2)]"")!($P(D,U,3)]"") !?35
"RTN","IBOTR3",129,0)
 W $P(D,U,4) W:$P(D,U,4)]""&($P(D,U,5)]"") ", "
"RTN","IBOTR3",130,0)
 W $P($G(^DIC(5,+$P(D,U,5),0)),U)
"RTN","IBOTR3",131,0)
 W:$P(D,U,6)]""&($P(D,U,4)]""!($P(D,U,5)]"")) "   "
"RTN","IBOTR3",132,0)
 W $P(D,U,6) W:PH]"" $J("",8),"Phone: ",PH
"RTN","IBOTR3",133,0)
INSADQ W ! Q
"RTN","IBRBUL")
0^98^B39836566^B36492961
"RTN","IBRBUL",1,0)
IBRBUL ;ALB/CJM - MEANS TEST HOLD CHARGE BULLETIN ;02-MAR-92
"RTN","IBRBUL",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,121,153,195,347,452,516**;21-MAR-94;Build 123
"RTN","IBRBUL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRBUL",4,0)
 ; This bulletin is sent even if the local site has chosen not to hold
"RTN","IBRBUL",5,0)
 ; Means Test charges. In that case, IBHOLDP should be set = 0.
"RTN","IBRBUL",6,0)
 ; requires: IBDD() = internal node in patient file of valid ins.
"RTN","IBRBUL",7,0)
 ;           DUZ
"RTN","IBRBUL",8,0)
 ;           X = 0 node of IB BILLING ACTION
"RTN","IBRBUL",9,0)
 ;           IBHOLDP = 1 if charge on hold, = 0 otherwise
"RTN","IBRBUL",10,0)
 ;           IBSEQNO = 1 if the charges are new, 3 if updated
"RTN","IBRBUL",11,0)
BULL N XMSUB,XMY,XMDUZ,XMTEXT,IBX,IBDUZ,IBNAME,IBPID,IBBID,IBAGE,DFN
"RTN","IBRBUL",12,0)
 S IBX=X,IBDUZ=DUZ
"RTN","IBRBUL",13,0)
 K ^TMP($J,"IBRBUL")
"RTN","IBRBUL",14,0)
 D PAT,HDR,PATLINE,CHRG,INS,BUF,MAIL
"RTN","IBRBUL",15,0)
 K ^TMP($J,"IBRBUL")
"RTN","IBRBUL",16,0)
 Q
"RTN","IBRBUL",17,0)
MAIL ; Transmit mail
"RTN","IBRBUL",18,0)
 N IBGRP S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="^TMP($J,""IBRBUL"","
"RTN","IBRBUL",19,0)
 K XMY
"RTN","IBRBUL",20,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,0)),U,11),0)),U)
"RTN","IBRBUL",21,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBRBUL",22,0)
 D ^XMD
"RTN","IBRBUL",23,0)
 Q
"RTN","IBRBUL",24,0)
 ;Add a line to the text array
"RTN","IBRBUL",25,0)
ADDLN(IBTXT) N IBC
"RTN","IBRBUL",26,0)
 S IBC=$O(^TMP($J,"IBRBUL",""),-1)+1
"RTN","IBRBUL",27,0)
 S ^TMP($J,"IBRBUL",IBC)=$G(IBTXT," ")
"RTN","IBRBUL",28,0)
 Q
"RTN","IBRBUL",29,0)
 ;
"RTN","IBRBUL",30,0)
MAILTST ; for testing
"RTN","IBRBUL",31,0)
 ;N IBC
"RTN","IBRBUL",32,0)
 ;W !,XMSUB
"RTN","IBRBUL",33,0)
 ;F IBC=1:1 Q:'$D(^TMP($J,"IBRBUL",IBC))  W !,^(IBC)
"RTN","IBRBUL",34,0)
 Q
"RTN","IBRBUL",35,0)
HDR ; formated for held charges
"RTN","IBRBUL",36,0)
 N IBW,IBU,IBV,SL S IBW=$S('IBHOLDP:"NOT ON HOLD",1:"ON HOLD"),IBU=$S(IBSEQNO=1:"NEW ",IBSEQNO=3:"UPDATED ",1:""),IBV=$S(+$O(IBDD(0)):"active",1:"may have")
"RTN","IBRBUL",37,0)
 ; if the parent event should have the soft-link that is needed to find
"RTN","IBRBUL",38,0)
 ; the division
"RTN","IBRBUL",39,0)
 S SL=$P(X,"^",16) S:SL SL=$G(^IB(SL,0)) S:'SL SL=X S SL=$P(SL,"^",4)
"RTN","IBRBUL",40,0)
 S XMSUB=$E(IBNAME,1,8)_"("_IBBID_")"_" PATIENT CHRG W/INS"_"-"_$E($$DIV(SL),1,11)
"RTN","IBRBUL",41,0)
 D ADDLN("The following patient has "_IBU_"charges "_IBW_" and "_IBV_" insurance.")
"RTN","IBRBUL",42,0)
 D ADDLN("You need to immediately process the charges to the insurance company.")
"RTN","IBRBUL",43,0)
 I +$$BUFFER^IBCNBU1(+$P(X,"^",2)) D
"RTN","IBRBUL",44,0)
 . D ADDLN()
"RTN","IBRBUL",45,0)
 . D ADDLN("This patient has entries in the Insurance Buffer that should be processed")
"RTN","IBRBUL",46,0)
 . D ADDLN("before the charges.")
"RTN","IBRBUL",47,0)
 Q
"RTN","IBRBUL",48,0)
PAT ; gets patient demographic data
"RTN","IBRBUL",49,0)
 N VAERR,VADM,X,VA
"RTN","IBRBUL",50,0)
 S DFN=+$P(IBX,"^",2) D DEM^VADPT I VAERR K VADM
"RTN","IBRBUL",51,0)
 S IBNAME=$$PR($G(VADM(1)),26),IBAGE=$$PR($G(VADM(4)),3),IBPID=$G(VA("PID")),IBBID=$G(VA("BID"))
"RTN","IBRBUL",52,0)
 Q
"RTN","IBRBUL",53,0)
PATLINE ; sets up lines with patient data 
"RTN","IBRBUL",54,0)
 D ADDLN(),ADDLN("Name: "_IBNAME_"   Age    : "_IBAGE_"       Pt. ID: "_IBPID)
"RTN","IBRBUL",55,0)
 Q
"RTN","IBRBUL",56,0)
CHRG ; gets charge data and sets up charge lines
"RTN","IBRBUL",57,0)
 N TP,FR,TO,IBND1,IBRXN,IBRX,IBRDT,IBRF,IENS,IBECME
"RTN","IBRBUL",58,0)
 S IBND1=$G(^IB(+$G(IBN),1)),(IBRX,IBRXN,IBRF,IBRDT,IBECME)=0
"RTN","IBRBUL",59,0)
 S FR=$$DAT1^IBOUTL($S($P(IBX,"^",14)'="":($P(IBX,"^",14)),1:$P(IBND1,"^",2)))
"RTN","IBRBUL",60,0)
 S TO=$$DAT1^IBOUTL($S($P(IBX,"^",15)'="":($P(IBX,"^",15)),1:$P(IBND1,"^",2)))
"RTN","IBRBUL",61,0)
 ;
"RTN","IBRBUL",62,0)
 ; Rx Info
"RTN","IBRBUL",63,0)
 I $P(IBX,"^",4)["52:" D
"RTN","IBRBUL",64,0)
 . S IBRXN=+$P($P(IBX,"^",4),":",2)               ; Rx ien
"RTN","IBRBUL",65,0)
 . S IBRX=$P($P(IBX,"^",8),"-")                   ; external Rx#
"RTN","IBRBUL",66,0)
 . S IBRF=+$P($P(IBX,"^",4),":",3)                ; fill# or 0 for original fill
"RTN","IBRBUL",67,0)
 . S IBECME=$P($$CLAIM^BPSBUTL(IBRXN,IBRF),U,6)   ; ecme#  DBIA 4719
"RTN","IBRBUL",68,0)
 . I IBRF S IENS=+IBRF,IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IENS,52,.01)    ; refill date
"RTN","IBRBUL",69,0)
 . I 'IBRF S IENS=+IBRXN,IBRDT=$$FILE^IBRXUTL(IENS,22)                ; orig fill date
"RTN","IBRBUL",70,0)
 . Q
"RTN","IBRBUL",71,0)
 ;
"RTN","IBRBUL",72,0)
 S TP=$P(IBX,"^",3) S:TP TP=$P($G(^IBE(350.1,TP,0)),"^",3) S:TP TP=$P($$CATN^PRCAFN(TP),"^",2)
"RTN","IBRBUL",73,0)
 D ADDLN("Type: "_$$PR(TP,28)_" Amount : $"_+$P(IBX,"^",7))
"RTN","IBRBUL",74,0)
 D ADDLN("From: "_$$PR(FR,28)_" To     : "_TO)
"RTN","IBRBUL",75,0)
 I IBRXN D ADDLN("Rx #: "_$$PR(IBRX_$S(IBRF'="":" ("_IBRF_")",1:""),28)_" Fill Dt: "_$$DAT1^IBOUTL(IBRDT)_"  Rls Dt: "_TO)
"RTN","IBRBUL",76,0)
 I IBECME D ADDLN("ECME: "_IBECME)
"RTN","IBRBUL",77,0)
 Q
"RTN","IBRBUL",78,0)
INS ; gets insurance data and sets up insurance lines
"RTN","IBRBUL",79,0)
 N I,CO,P,G,GNB,W,E,Y,C,COV,COVD,COVFN,LEDT,LIM,PLN,X1,X2,Z0,IBCNT,P1,P2,P3,P4
"RTN","IBRBUL",80,0)
 ;S IBDTIN=$P(IBX,"^",14)
"RTN","IBRBUL",81,0)
 D ADDLN(),ADDLN("INSURANCE INFORMATION:")
"RTN","IBRBUL",82,0)
 S I="" F  S I=$O(IBDD(I)) Q:'I  D
"RTN","IBRBUL",83,0)
 .S LIM=0
"RTN","IBRBUL",84,0)
 .S CO=$P(IBDD(I),"^",1),CO=$P(^DIC(36,CO,0),"^",1),CO=$$PR(CO,25)
"RTN","IBRBUL",85,0)
 .S P=$$PR($P(IBDD(I),"^",2),21)
"RTN","IBRBUL",86,0)
 .S P1=2.312,P2=6,P3=$P($G(IBDD(I)),"^",6) S P4=$$EXPAND^IBTRE(P1,P2,P3) S W=$$PR(P4,25)
"RTN","IBRBUL",87,0)
 .S Y=$P(IBDD(I),"^",4) D:Y DD^%DT S E=Y
"RTN","IBRBUL",88,0)
 .S G=$$PR($P(IBDD(I),"^",15),25)
"RTN","IBRBUL",89,0)
 .S GNB=$P(IBDD(I),"^",3)
"RTN","IBRBUL",90,0)
 .S PLN=$P(IBDD(I),"^",18)
"RTN","IBRBUL",91,0)
 .D ADDLN(),ADDLN("Company: "_CO_" Policy#: "_P)
"RTN","IBRBUL",92,0)
 .D ADDLN("Whose  : "_W_" Expires: "_E)
"RTN","IBRBUL",93,0)
 .D ADDLN("Group  : "_G_" Group# : "_GNB)
"RTN","IBRBUL",94,0)
 .Q:'PLN
"RTN","IBRBUL",95,0)
 .D ADDLN(" Plan Coverage   Effective Date   Covered?      Limit Comments")
"RTN","IBRBUL",96,0)
 .D ADDLN(" -------------   --------------   --------      --------------")
"RTN","IBRBUL",97,0)
 .F  S LIM=$O(^IBE(355.31,LIM)) Q:'LIM  S COV=$P($G(^(LIM,0)),U),IBCNT=0,LEDT="" F  S LEDT=$O(^IBA(355.32,"APCD",PLN,LIM,LEDT)) Q:$S(LEDT="":IBCNT,1:0)  D  Q:LEDT=""
"RTN","IBRBUL",98,0)
 ..S COVFN=+$O(^IBA(355.32,"APCD",PLN,LIM,+LEDT,"")),COVD=$G(^IBA(355.32,+COVFN,0))
"RTN","IBRBUL",99,0)
 ..I COVD="" D ADDLN("  "_$$PR(COV,32)_"BY DEFAULT") Q
"RTN","IBRBUL",100,0)
 ..S IBCNT=IBCNT+1
"RTN","IBRBUL",101,0)
 ..S X1="  "_$S(IBCNT=1:COV,1:"") ;Don't duplicate category
"RTN","IBRBUL",102,0)
 ..S X2=$$PR(X1,18)_$$PR($$DAT1^IBOUTL($P(LEDT,"-",2)),16)_$$PR($S($P(COVD,U,4):$S($P(COVD,U,4)<2:"YES",$P(COVD,U,4)=2:"CONDITIONAL",1:"UNKNOWN"),1:"NO"),14)
"RTN","IBRBUL",103,0)
 ..I '$O(^IBA(355.32,COVFN,2,0)) D ADDLN(X2) Q
"RTN","IBRBUL",104,0)
 ..S Z0=0 F  S Z0=$O(^IBA(355.32,COVFN,2,Z0)) Q:'Z0  D ADDLN($S(Z0=1:X2_$G(^IBA(355.32,COVFN,2,Z0,0)),1:$$PR("",48)_$G(^IBA(355.32,COVFN,2,Z0,0))))
"RTN","IBRBUL",105,0)
 Q
"RTN","IBRBUL",106,0)
PR(STR,LEN) ; pad right
"RTN","IBRBUL",107,0)
 N B S STR=$E(STR,1,LEN),$P(B," ",LEN-$L(STR))=" "
"RTN","IBRBUL",108,0)
 Q STR_$G(B)
"RTN","IBRBUL",109,0)
DIV(SL) ; returns the division with the softlink as input
"RTN","IBRBUL",110,0)
 N IBDIV,IBWARD,IBFILE,IBIEN
"RTN","IBRBUL",111,0)
 S:SL[";" SL=$P(SL,";",1)
"RTN","IBRBUL",112,0)
 S IBFILE=$P(SL,":",1),IBIEN=$P(SL,":",2)
"RTN","IBRBUL",113,0)
 S IBDIV=""
"RTN","IBRBUL",114,0)
 I IBFILE=409.68,IBIEN S IBDIV=$$SCE^IBSDU(IBIEN,11)
"RTN","IBRBUL",115,0)
 I IBFILE=44,IBIEN S IBDIV=$P($G(^SC(IBIEN,0)),"^",15)
"RTN","IBRBUL",116,0)
 I IBFILE=405,IBIEN S IBWARD=$P($G(^DGPM(IBIEN,0)),"^",6) I IBWARD S IBDIV=$P($G(^DIC(42,IBWARD,0)),"^",11)
"RTN","IBRBUL",117,0)
 I IBDIV S IBDIV=$P($G(^DG(40.8,IBDIV,0)),"^",1)
"RTN","IBRBUL",118,0)
 I IBDIV="" S IBDIV="DIV UNKNWN"
"RTN","IBRBUL",119,0)
 Q IBDIV
"RTN","IBRBUL",120,0)
 ;
"RTN","IBRBUL",121,0)
BUF ;  gets insurance buffer entries and sets up lines to add to bulletin
"RTN","IBRBUL",122,0)
 N DFN,IBBDA,IBB40,IBB60,IBX1,IBX2 S DFN=$P(IBX,U,2) Q:'DFN
"RTN","IBRBUL",123,0)
 I '$$BUFFER^IBCNBU1(DFN) Q
"RTN","IBRBUL",124,0)
 ;
"RTN","IBRBUL",125,0)
 D ADDLN()
"RTN","IBRBUL",126,0)
 D ADDLN("INSURANCE BUFFER:")
"RTN","IBRBUL",127,0)
 S IBBDA=0 F  S IBBDA=$O(^IBA(355.33,"C",DFN,IBBDA)) Q:'IBBDA  D
"RTN","IBRBUL",128,0)
 . ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBRBUL",129,0)
 . S IBB40=$G(^IBA(355.33,IBBDA,40)),IBB60=$G(^IBA(355.33,IBBDA,60))
"RTN","IBRBUL",130,0)
 . ;
"RTN","IBRBUL",131,0)
 . D ADDLN()
"RTN","IBRBUL",132,0)
 . ;S IBX1=$P($G(^IBA(355.33,IBBDA,20)),U,1),IBX2=$P(IBB60,U,4)
"RTN","IBRBUL",133,0)
 . S IBX1=$P($G(^IBA(355.33,IBBDA,20)),U,1)
"RTN","IBRBUL",134,0)
 . ;D ADDLN("Company: "_$$PR(IBX1,25)_"Policy#: "_$$PR(IBX2,21))
"RTN","IBRBUL",135,0)
 . D ADDLN("Company: "_$$PR(IBX1,25)_"Policy#: "_$$PR($$GET1^DIQ(355.33,IBBDA_",",90.03),21))
"RTN","IBRBUL",136,0)
 . S IBX1=$$EXPAND^IBTRE(355.33,60.05,$P(IBB60,U,5)),IBX2=$$FMTE^XLFDT($P(IBB60,U,3))
"RTN","IBRBUL",137,0)
 . D ADDLN("Whose  : "_$$PR(IBX1,25)_"Expires: "_IBX2)
"RTN","IBRBUL",138,0)
 . ;S IBX1=$P(IBB40,U,2),IBX2=$P(IBB40,U,3)
"RTN","IBRBUL",139,0)
 . ;D ADDLN("Group  : "_$$PR(IBX1,25)_"Group# : "_IBX2)
"RTN","IBRBUL",140,0)
 . D ADDLN("Group  : "_$$PR($$GET1^DIQ(355.33,IBBDA_",",90.01),25)_"Group# : "_$$GET1^DIQ(355.33,IBBDA_",",90.02))
"RTN","IBRBUL",141,0)
 Q
"RTN","IBRFN3")
0^99^B30451954^B29612898
"RTN","IBRFN3",1,0)
IBRFN3 ;ALB/ARH - PASS BILL/CLAIM TO AR ;3/18/96
"RTN","IBRFN3",2,0)
 ;;2.0;INTEGRATED BILLING;**61,133,210,309,389,516**;21-MAR-94;Build 123
"RTN","IBRFN3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFN3",4,0)
 ;
"RTN","IBRFN3",5,0)
 ;  Returns information on the bill passed in,  all data returned in external format, for AR's RC project
"RTN","IBRFN3",6,0)
 ;
"RTN","IBRFN3",7,0)
 ;  If the bill can not be found then returns ARRAY=0  (should be called with ARRAY passed by reference)
"RTN","IBRFN3",8,0)
 ;  Otherwise ARRAY=1 and the following array elements may be defined
"RTN","IBRFN3",9,0)
 ;  these array elements will only be defined is there is data to return
"RTN","IBRFN3",10,0)
 ;  those elements that have multiple entries will be in the form ARRAY("SUB",X) where X=1:1:...
"RTN","IBRFN3",11,0)
 ;
"RTN","IBRFN3",12,0)
 ;  ARRAY("BN") = BILL NUMBER
"RTN","IBRFN3",13,0)
 ;  ARRAY("SR") = SENSITIVE RECORD? (Y or N)
"RTN","IBRFN3",14,0)
 ;  ARRAY("STF") = STATEMENT COVERS FROM DATE - first date covered by bill
"RTN","IBRFN3",15,0)
 ;  ARRAY("STT") = STATEMENT COVERS TO DATE - last date covered by bill
"RTN","IBRFN3",16,0)
 ;  ARRAY("TCG") = TOTAL CHARGES^OFFSET AMT (PRIOR PAYMENTS)^OFFSET DESC
"RTN","IBRFN3",17,0)
 ;  ARRAY("TOC") = BILL TYPE (INPATIENT OR OUTPATIENT)
"RTN","IBRFN3",18,0)
 ;  ARRAY("TCF") = BILL FORM TYPE
"RTN","IBRFN3",19,0)
 ;  ARRAY("DFP") = DATE FIRST PRINTED
"RTN","IBRFN3",20,0)
 ;  ARRAY("TAX") = FEDERAL TAX NUMBER - for facility, a site parameter
"RTN","IBRFN3",21,0)
 ;
"RTN","IBRFN3",22,0)
 ;  ARRAY("PIN") = DEBTOR INSURANCE NAME ^ HOSPITAL PROVIDER NUMBER ^ GROUP NAME ^ GROUP NUMBER ^
"RTN","IBRFN3",23,0)
 ;                 NAME OF INSURED ^ SUBSCRIBER ID ^ RELATIONSHIP TO INSURED
"RTN","IBRFN3",24,0)
 ;
"RTN","IBRFN3",25,0)
 ;  ARRAY("PIN","MMA") = DEBTOR MAILING STREET ADDRESS [LINE 1] ^
"RTN","IBRFN3",26,0)
 ;                       MAILING STREET ADDRESS [LINE 2] ^ MAILING STREET ADDRESS [LINE 3] ^ CITY ^ 
"RTN","IBRFN3",27,0)
 ;                       STATE (ABBREVIATED) ^ ZIP ^ PHONE NUMBER
"RTN","IBRFN3",28,0)
 ;
"RTN","IBRFN3",29,0)
 ;  ARRAY("RVC") = NUMBER OF REVENUE CODES ON BILL
"RTN","IBRFN3",30,0)
 ;  ARRAY("RVC",X) = REVENUE CODE ^ REVENUE CODE DESCRIPTION ^ CHARGE (PER UNIT) ^ UNITS ^
"RTN","IBRFN3",31,0)
 ;                   TOTAL CHARGE FOR REV CODE
"RTN","IBRFN3",32,0)
 ;
"RTN","IBRFN3",33,0)
 ;  ARRAY("OPV") = NUMBER OF OUTPATIENT VISIT DATES ON BILL
"RTN","IBRFN3",34,0)
 ;  ARRAY("OPV",X) = OUTPATIENT VISIT DATE
"RTN","IBRFN3",35,0)
 ;
"RTN","IBRFN3",36,0)
 ;  ARRAY("PRC") = NUMBER OF PROCEDURES ON BILL
"RTN","IBRFN3",37,0)
 ;  ARRAY("PRC",X) = PROCEDURE CODE ^ PROCEDURE DESCRIPTION ^ PROCEDURE DATE ^
"RTN","IBRFN3",38,0)
 ;                   PLACE OF SERVICE CODE ^ PLACE OF SERVICE ^ TYPE OF SERVICE CODE ^ TYPE OF SERVICE
"RTN","IBRFN3",39,0)
 ;
"RTN","IBRFN3",40,0)
 ;  ARRAY("DXS") = NUMBER OF DIAGNOSIS ON BILL
"RTN","IBRFN3",41,0)
 ;  ARRAY("DXS,X) = DIAGNOSIS CODE ^ DIAGNOSIS
"RTN","IBRFN3",42,0)
 ;
"RTN","IBRFN3",43,0)
 ;  ARRAY("RXF") = NUMBER OF PRESCRIPTION REFILLS ON BILL
"RTN","IBRFN3",44,0)
 ;  ARRAY("RXF",X) = PRESCRIPTION # ^ REFILL DATE ^ DRUG NAME ^ DAYS SUPPLY ^ QUANTITY ^ NDC #
"RTN","IBRFN3",45,0)
 ;
"RTN","IBRFN3",46,0)
 ;  ARRAY("PRD") = NUMBER OF PROSTHETIC ITEMS ON BILL
"RTN","IBRFN3",47,0)
 ;  ARRAY("PRD",X) = PROSTHETIC DEVICE ^ DELIVERY DATE
"RTN","IBRFN3",48,0)
 ;
"RTN","IBRFN3",49,0)
 ;  IF CONDITION RELATED TO EMPLOYMENT:  ARRAY("CRE") = "EMPLOYMENT"
"RTN","IBRFN3",50,0)
 ;  IF CONDITION RELATED TO AN AUTO ACCIDENT:  ARRAY("CRA") = "AUTO ACCIDENT" ^ STATE (ABBREVIATION)
"RTN","IBRFN3",51,0)
 ;  IF CONDITION RELATED TO AN OTHER ACCIDENT:  ARRAY("CRO") = "OTHER ACCIDENT"
"RTN","IBRFN3",52,0)
 ;
"RTN","IBRFN3",53,0)
BILL(IBIFN,ARRAY) ; returns array of information on a specific bill, based on RC requirements
"RTN","IBRFN3",54,0)
 ;
"RTN","IBRFN3",55,0)
 N IBI,IBJ,IBK,IBX,IBY,IBTMP,IBD0,IBDU,IBDU1,IBDI1,IBDS,IBDATE
"RTN","IBRFN3",56,0)
 K ARRAY S ARRAY=1 I '$G(IBIFN)!($G(^DGCR(399,+$G(IBIFN),0))="") S ARRAY=0 Q
"RTN","IBRFN3",57,0)
 F IBI=0,"U","U1","S" S @("IBD"_IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBRFN3",58,0)
 ;IB*2.0*516/TAZ - Call $$POLICY^IBCEF to insert HIPAA compliant fields into variable IBDI1. Data will
"RTN","IBRFN3",59,0)
 ;continue to be extracted from IBDI1 original location.
"RTN","IBRFN3",60,0)
 ;S IBX=$P(IBD0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:" ")
"RTN","IBRFN3",61,0)
 ;S IBDI1=$G(^DGCR(399,IBIFN,IBX))  ; 516 - baa
"RTN","IBRFN3",62,0)
 S IBX=$P(IBD0,U,21) ; Pass P, S, or T to $$POLICY^IBCEF
"RTN","IBRFN3",63,0)
 S IBDI1=$$POLICY^IBCEF(IBIFN,,IBX)  ; 516 - baa
"RTN","IBRFN3",64,0)
 ;
"RTN","IBRFN3",65,0)
 S ARRAY("TCG")=$P(IBDU1,U,1,3)
"RTN","IBRFN3",66,0)
 S ARRAY("BN")=$P(IBD0,U,1)
"RTN","IBRFN3",67,0)
 S ARRAY("SR")=$S($P(IBDU,U,5)=1:"Y",1:"N")
"RTN","IBRFN3",68,0)
 S ARRAY("STF")=$P(IBDU,U,1)
"RTN","IBRFN3",69,0)
 S ARRAY("STT")=$P(IBDU,U,2)
"RTN","IBRFN3",70,0)
 S ARRAY("TOC")=$S($P(IBD0,U,5)<3:"INPATIENT",1:"OUTPATIENT")
"RTN","IBRFN3",71,0)
 S ARRAY("TCF")=$$FTN^IBCU3($$FT^IBCU3(IBIFN))
"RTN","IBRFN3",72,0)
 S ARRAY("DFP")=$P(IBDS,U,12)
"RTN","IBRFN3",73,0)
 S ARRAY("TAX")=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBRFN3",74,0)
 ;
"RTN","IBRFN3",75,0)
INS ; insurance information
"RTN","IBRFN3",76,0)
 S IBX=$G(^DGCR(399,+IBIFN,"M"))
"RTN","IBRFN3",77,0)
 S ARRAY("PIN")=$P(IBX,U,4)_U_$P($G(^DIC(36,+IBDI1,0)),U,11)_U_$P(IBDI1,U,15)_U_$P(IBDI1,U,3)_U_$P(IBDI1,U,17)_U_$P(IBDI1,U,2)_U_$$RTI($P(IBDI1,U,16))
"RTN","IBRFN3",78,0)
 S ARRAY("PIN","MMA")=$P(IBX,U,5)_U_$P(IBX,U,6)_U_$P($G(^DGCR(399,+IBIFN,"M1")),U,1)_U_$P(IBX,U,7)_U_$$STATE($P(IBX,U,8))
"RTN","IBRFN3",79,0)
 S ARRAY("PIN","MMA")=ARRAY("PIN","MMA")_U_$$ZIP($P(IBX,U,9))_U_$P($G(^DIC(36,+IBDI1,.13)),U,1)
"RTN","IBRFN3",80,0)
 ;
"RTN","IBRFN3",81,0)
RC ; revenue codes
"RTN","IBRFN3",82,0)
 S (IBI,IBJ)=0,ARRAY("RVC")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"RC",IBI)) Q:'IBI  D
"RTN","IBRFN3",83,0)
 . S IBX=$G(^DGCR(399,IBIFN,"RC",IBI,0)) Q:IBX=""  S IBY=$G(^DGCR(399.2,+IBX,0))
"RTN","IBRFN3",84,0)
 . S IBJ=IBJ+1,ARRAY("RVC")=IBJ
"RTN","IBRFN3",85,0)
 . S ARRAY("RVC",IBJ)=$P(IBY,U,1)_U_$P(IBY,U,2)_U_$P(IBX,U,2)_U_$P(IBX,U,3)_U_$P(IBX,U,4)
"RTN","IBRFN3",86,0)
 ;
"RTN","IBRFN3",87,0)
OPV ; outpatient visit dates
"RTN","IBRFN3",88,0)
 S (IBI,IBJ)=0,ARRAY("OPV")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"OP",IBI)) Q:'IBI  D
"RTN","IBRFN3",89,0)
 . S IBX=$G(^DGCR(399,IBIFN,"OP",IBI,0)) Q:'IBX
"RTN","IBRFN3",90,0)
 . S IBJ=IBJ+1,ARRAY("OPV")=IBJ
"RTN","IBRFN3",91,0)
 . S ARRAY("OPV",IBJ)=+IBX
"RTN","IBRFN3",92,0)
 ;
"RTN","IBRFN3",93,0)
PRC ; procedure codes
"RTN","IBRFN3",94,0)
 S (IBI,IBJ)=0,ARRAY("PRC")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  D
"RTN","IBRFN3",95,0)
 . S IBX=$G(^DGCR(399,IBIFN,"CP",IBI,0)),IBY=""
"RTN","IBRFN3",96,0)
 . S IBDATE=$P(IBX,U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBRFN3",97,0)
 . S IBY=$P($$PRCD^IBCEF1($P(IBX,U),1,IBDATE),U,2,3)
"RTN","IBRFN3",98,0)
 . Q:$P(IBY,U)=""
"RTN","IBRFN3",99,0)
 . S IBJ=IBJ+1,ARRAY("PRC")=IBJ
"RTN","IBRFN3",100,0)
 . S ARRAY("PRC",IBJ)=IBY_U_$P(IBX,U,2)
"RTN","IBRFN3",101,0)
 . S IBY=$G(^IBE(353.1,+$P(IBX,U,9),0)),ARRAY("PRC",IBJ)=ARRAY("PRC",IBJ)_U_$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",102,0)
 . S IBY=$G(^IBE(353.2,+$P(IBX,U,10),0)),ARRAY("PRC",IBJ)=ARRAY("PRC",IBJ)_U_$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",103,0)
 ;
"RTN","IBRFN3",104,0)
DX ; diagnosis codes
"RTN","IBRFN3",105,0)
 K IBTMP D SET^IBCSC4D(IBIFN,"",.IBTMP)
"RTN","IBRFN3",106,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBRFN3",107,0)
 S (IBI,IBJ)=0,ARRAY("DXS")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",108,0)
 . S IBX=IBTMP(IBI),IBY=$$ICD9^IBACSV(+IBX,IBDATE) Q:IBY=""
"RTN","IBRFN3",109,0)
 . S IBJ=IBJ+1,ARRAY("DXS")=IBJ
"RTN","IBRFN3",110,0)
 . S ARRAY("DXS",IBJ)=$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",111,0)
 ;
"RTN","IBRFN3",112,0)
RX ; prescription refills
"RTN","IBRFN3",113,0)
 K IBTMP D SET^IBCSC5A(IBIFN,.IBTMP)
"RTN","IBRFN3",114,0)
 S (IBI,IBJ)=0,ARRAY("RXF")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",115,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN3",116,0)
 .. S IBX=IBTMP(IBI,IBK) D ZERO^IBRXUTL(+$P(IBX,U,2)) S IBY=$G(^TMP($J,"IBDRUG",+$P(IBX,U,2),.01))
"RTN","IBRFN3",117,0)
 .. S IBJ=IBJ+1,ARRAY("RXF")=IBJ
"RTN","IBRFN3",118,0)
 .. S ARRAY("RXF",IBJ)=IBI_U_IBK_U_IBY_U_$P(IBX,U,3)_U_$P(IBX,U,4)_U_$P(IBX,U,5)
"RTN","IBRFN3",119,0)
 .. K ^TMP($J,"IBDRUG")
"RTN","IBRFN3",120,0)
 .. Q
"RTN","IBRFN3",121,0)
 ;
"RTN","IBRFN3",122,0)
PD ; prosthetic items
"RTN","IBRFN3",123,0)
 K IBTMP D SET^IBCSC5B(IBIFN,.IBTMP)
"RTN","IBRFN3",124,0)
 S (IBI,IBJ)=0,ARRAY("PRD")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",125,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN3",126,0)
 .. S IBX=IBTMP(IBI,IBK)
"RTN","IBRFN3",127,0)
 .. S IBJ=IBJ+1,ARRAY("PRD")=IBJ
"RTN","IBRFN3",128,0)
 .. S ARRAY("PRD",IBJ)=$$PINB^IBCSC5B(+IBX)_U_IBI
"RTN","IBRFN3",129,0)
 ;
"RTN","IBRFN3",130,0)
CC ; condition related to employment, auto accident (place), other accident
"RTN","IBRFN3",131,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CC",IBI)) Q:'IBI  I $G(^(IBI,0))="02" S ARRAY("CRE")="EMPLOYMENT"
"RTN","IBRFN3",132,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S IBX=$G(^(IBI,0)) I +IBX D
"RTN","IBRFN3",133,0)
 . S IBY=$G(^DGCR(399.1,+IBX,0)) Q:IBY=""
"RTN","IBRFN3",134,0)
 . I $P(IBY,U,9)=1 S ARRAY("CRE")="EMPLOYMENT"
"RTN","IBRFN3",135,0)
 . I $P(IBY,U,9)=2 S ARRAY("CRA")="AUTO ACCIDENT"_U_$$STATE($P(IBX,U,3))
"RTN","IBRFN3",136,0)
 . I $P(IBY,U,9)=3 S ARRAY("CRO")="OTHER ACCIDENT"
"RTN","IBRFN3",137,0)
 Q
"RTN","IBRFN3",138,0)
 ;
"RTN","IBRFN3",139,0)
STATE(X) ; returns 2 letter abbreviation for state
"RTN","IBRFN3",140,0)
 Q $P($G(^DIC(5,+X,0)),U,2)
"RTN","IBRFN3",141,0)
ZIP(X) ; returns zip in external form
"RTN","IBRFN3",142,0)
 S X=$E(X,1,5)_$S($E(X,6,9)]"":"-"_$E(X,6,9),1:"")
"RTN","IBRFN3",143,0)
 Q X
"RTN","IBRFN3",144,0)
RTI(X) ; returns external form of relationship to insured
"RTN","IBRFN3",145,0)
 I X'="" S X=$S(X="01":"PATIENT",X="02":"SPOUSE",X="03":"NATURAL CHILD",X="08":"EMPLOYEE",X="09":"UNKNOWN",X="11":"ORGAN DONOR",X="15":"INJURED PLANTIFF",X="18":"PARENT",1:"")
"RTN","IBRFN3",146,0)
 Q X
"RTN","IBRFN3",147,0)
 ;IBRFN3
"RTN","IBRFN4")
0^100^B27444633^B25630558
"RTN","IBRFN4",1,0)
IBRFN4 ;ALB/TMK - Supported functions for AR/IB DATA EXTRACT ;15-FEB-2005
"RTN","IBRFN4",2,0)
 ;;2.0;INTEGRATED BILLING;**301,305,389,516**;21-MAR-94;Build 123
"RTN","IBRFN4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFN4",4,0)
 ;
"RTN","IBRFN4",5,0)
IBAREXT(IBIFN,IBD) ; Returns data for claim IBIFN for IB/AR Extract
"RTN","IBRFN4",6,0)
 ; Data returned (pieces):
"RTN","IBRFN4",7,0)
 ; 1-MEDICARE Status (0=not MRA secondary, 1=MRA secondary)
"RTN","IBRFN4",8,0)
 ; 2-Last MRA requested date "S";7 (7 - INTERNAL)
"RTN","IBRFN4",9,0)
 ; 3-Last Electronic extract date  "TX";2 (21 - INTERNAL)
"RTN","IBRFN4",10,0)
 ; 4-Printed via EDI  "TX";7  (26 - EXTERNAL)
"RTN","IBRFN4",11,0)
 ; 5-Force Claim to Print  "TX";8  (27 - EXTERNAL)
"RTN","IBRFN4",12,0)
 ; 6-Claim MRA Status  "TX";5  (24 - EXTERNAL)
"RTN","IBRFN4",13,0)
 ; 7-MRA recorded date  "TX";3  (22 - INTERNAL)
"RTN","IBRFN4",14,0)
 ; 8-Bill cancelled date  "S";17  (17 - INTERNAL)
"RTN","IBRFN4",15,0)
 ; 9-form type  0;19   (.19 - EXTERNAL)
"RTN","IBRFN4",16,0)
 ; 10-Current Payer  $$CURR^IBCEF2(IBIFN) returns IEN;NAME (file 36)
"RTN","IBRFN4",17,0)
 ; 11-DRG 0;8==> file 45 (9 - EXTERNAL)
"RTN","IBRFN4",18,0)
 ; 12-ECME #  "M1";8 (460 - EXTERNAL)
"RTN","IBRFN4",19,0)
 ; 13-NON-VA Facility
"RTN","IBRFN4",20,0)
 ; 14-#Days Site Not Responsible for MRA ($$DAYS(IBIFN))
"RTN","IBRFN4",21,0)
 ; 15-National VA id number for Ins Verification (365.12;.02 - INTERNAL)
"RTN","IBRFN4",22,0)
 ; 16-Payer name (file 365.12;.01)
"RTN","IBRFN4",23,0)
 ; 17-Offset Amount (202-INTERNAL)
"RTN","IBRFN4",24,0)
 ;
"RTN","IBRFN4",25,0)
 ; IBD("PRD",seq #)=prosthetic item name^date^bill ien
"RTN","IBRFN4",26,0)
 ; IBD("IN")= TYPE OF PLAN NAME ^ GROUP NUMBER ^ RELATIONSHIP TO INSURED
"RTN","IBRFN4",27,0)
 ;   ^ SOURCE OF INFO ^ EDI ID NUMBER - INST ^ EDI ID NUMBER - PROF
"RTN","IBRFN4",28,0)
 ;   ^ INSURANCE REIMBURSE
"RTN","IBRFN4",29,0)
 ; IBD("IN","MMA")= MAILING STREET ADDRESS [LINE 1] ^
"RTN","IBRFN4",30,0)
 ;   ^ MAILING STREET ADDRESS [LINE 2] ^ CITY ^ STATE NAME  ^  ZIP
"RTN","IBRFN4",31,0)
 ;
"RTN","IBRFN4",32,0)
 N IB,IBI,IBJ,IBK,IBX,IBNODE,IBTMP,IBIN,Z
"RTN","IBRFN4",33,0)
 F IBNODE=0,"S","TX","M","U1" S IB(IBNODE)=$G(^DGCR(399,IBIFN,IBNODE))
"RTN","IBRFN4",34,0)
 S IBD=$S($$MRASEC^IBCEF4(IBIFN):1,1:0)
"RTN","IBRFN4",35,0)
 S $P(IBD,U,2)=$P(IB("S"),U,7),$P(IBD,U,3)=$P(IB("TX"),U,2)
"RTN","IBRFN4",36,0)
 S $P(IBD,U,4)=$$GET1^DIQ(399,IBIFN_",",26,"E"),$P(IBD,U,5)=$$GET1^DIQ(399,IBIFN_",",27,"E")
"RTN","IBRFN4",37,0)
 S $P(IBD,U,6)=$$GET1^DIQ(399,IBIFN_",",24,"E"),$P(IBD,U,7)=$P(IB("TX"),U,3)
"RTN","IBRFN4",38,0)
 S $P(IBD,U,8)=$P(IB("S"),U,17),$P(IBD,U,9)=$$GET1^DIQ(399,IBIFN_",",.19,"E")
"RTN","IBRFN4",39,0)
 S Z=$$CURR^IBCEF2(IBIFN),$P(IBD,U,10)=Z_$S(Z:";"_$P($G(^DIC(36,Z,0)),U),1:"")
"RTN","IBRFN4",40,0)
 S Z=$P($G(^DIC(36,+Z,3)),U,10),$P(IBD,U,15)=$P($G(^IBE(365.12,+Z,0)),U,2),$P(IBD,U,16)=$P($G(^(0)),U)
"RTN","IBRFN4",41,0)
 S Z=$P(IB(0),U,8),$P(IBD,U,11)=$S(Z:$$GET1^DIQ(45,Z_",",9,"E"),1:"")
"RTN","IBRFN4",42,0)
 S $P(IBD,U,12)=$$GET1^DIQ(399,IBIFN_",",460,"E")
"RTN","IBRFN4",43,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10),$P(IBD,U,13)=$S(Z:$P($G(^IBA(355.93,Z,0)),U,1),1:"")
"RTN","IBRFN4",44,0)
 ;
"RTN","IBRFN4",45,0)
 S $P(IBD,U,14)=$$DAYS(IBIFN)
"RTN","IBRFN4",46,0)
 S $P(IBD,U,17)=$P(IB("U1"),U,2)
"RTN","IBRFN4",47,0)
 ;
"RTN","IBRFN4",48,0)
 K IBTMP D SET^IBCSC5B(IBIFN,.IBTMP)
"RTN","IBRFN4",49,0)
 S (IBI,IBJ)=0 F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN4",50,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN4",51,0)
 .. S IBX=IBTMP(IBI,IBK)
"RTN","IBRFN4",52,0)
 .. S IBJ=IBJ+1
"RTN","IBRFN4",53,0)
 .. S IBD("PRD",IBJ)=$$PINB^IBCSC5B(+IBX)_U_IBI_U_+IBTMP
"RTN","IBRFN4",54,0)
 ;
"RTN","IBRFN4",55,0)
 S Z=" ",IBD("IN")="",DFN=+$P(IB(0),U,2)
"RTN","IBRFN4",56,0)
 F  S Z=$O(^DPT(DFN,.312,Z),-1) Q:Z=""  D  Q:Z=""
"RTN","IBRFN4",57,0)
 . ;IB*2.0*516/TAZ - Use HIPAA compliant fields
"RTN","IBRFN4",58,0)
 . ;S IBIN=$G(^DPT(DFN,.312,Z,0))  ; 516 - baa
"RTN","IBRFN4",59,0)
 . S IBIN=$$ZND^IBCNS1(DFN,Z)  ; 516 - baa
"RTN","IBRFN4",60,0)
 . I +IB("M")=+IBIN D
"RTN","IBRFN4",61,0)
 .. N IBQ,IBP
"RTN","IBRFN4",62,0)
 .. S IBP=+$P(IBIN,U,18),IBQ=$G(^IBA(355.3,+IBP,0))
"RTN","IBRFN4",63,0)
 .. ;S IBD("IN")=$S($P(IBQ,U,9):$$GET1^DIQ(355.3,IBP_",",.09,"E"),1:"")_U_$P(IBQ,U,4)_U_$P(IBIN,U,6)_U_$P($G(^DPT(DFN,.312,Z,1)),U,9)
"RTN","IBRFN4",64,0)
 .. S IBD("IN")=$$GET1^DIQ(355.3,IBP_",",.09,"E")_U_$P(IBIN,U,3)_U_$P(IBIN,U,6)_U_$P($G(^DPT(DFN,.312,Z,1)),U,9)
"RTN","IBRFN4",65,0)
 .. S Z=""
"RTN","IBRFN4",66,0)
 ;
"RTN","IBRFN4",67,0)
 S Z=$G(^DIC(36,+IB("M"),3))
"RTN","IBRFN4",68,0)
 S $P(IBD("IN"),U,5)=$P(Z,U,4),$P(IBD("IN"),U,6)=$P(Z,U,2)
"RTN","IBRFN4",69,0)
 S $P(IBD("IN"),U,7)=$$GET1^DIQ(36,+IB("M")_",",1,"I")
"RTN","IBRFN4",70,0)
 S Z=$G(^DIC(36,+IB("M"),.11))
"RTN","IBRFN4",71,0)
 S IBD("IN","MMA")=$P(Z,U,1)_U_$P(Z,U,2)_U_$P(Z,U,4)_U_$S($P(Z,U,5):$P($G(^DIC(5,$P(Z,U,5),0)),U,1),1:"")_U_$P(Z,U,6)
"RTN","IBRFN4",72,0)
 ;
"RTN","IBRFN4",73,0)
 Q IBD
"RTN","IBRFN4",74,0)
 ;
"RTN","IBRFN4",75,0)
IBACT(IBIFN,IBARRY) ; Returns IB actions for bill ien IBIFN
"RTN","IBRFN4",76,0)
 ;IBARRY should be passed by reference and returns:
"RTN","IBRFN4",77,0)
 ;
"RTN","IBRFN4",78,0)
 ; IBARRY(seq)=AR bill #^reference #^external STATUS^IB ACTION TYPE NAME
"RTN","IBRFN4",79,0)
 ;             ^UNITS^TOTAL CHARGE^DT BILLD FROM^DT BILLD TO^AR BILL IEN
"RTN","IBRFN4",80,0)
 ;             ^DT ENTRY ADDED^PATIENT SSN^EVENT DATE^RESULTING FROM
"RTN","IBRFN4",81,0)
 ;             ^INSTITUTION IEN
"RTN","IBRFN4",82,0)
 ;
"RTN","IBRFN4",83,0)
 N IBNA,IB,IB0,DFN,IBCT,Z
"RTN","IBRFN4",84,0)
 S IBNA=$$BN1^PRCAFN(IBIFN),IB="",IBCT=0
"RTN","IBRFN4",85,0)
 F  S IB=$O(^IB("ABIL",IBNA,IB)) Q:IB=""  D
"RTN","IBRFN4",86,0)
 . S IBCT=IBCT+1
"RTN","IBRFN4",87,0)
 . S IB0=$G(^IB(IB,0))
"RTN","IBRFN4",88,0)
 . I $G(DFN)="" S DFN=$P(IB0,U,2)
"RTN","IBRFN4",89,0)
 . ;
"RTN","IBRFN4",90,0)
 . S IBARRY=IBNA_U_$P(IB0,U,1)_U_$$GET1^DIQ(350,IB_",",.05,"E")
"RTN","IBRFN4",91,0)
 . S Z=$P(IB0,U,3)
"RTN","IBRFN4",92,0)
 . S IBARRY=IBARRY_U_$S(Z'="":$P($G(^IBE(350.1,Z,0)),U,1),1:"")
"RTN","IBRFN4",93,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,6) ; UNITS
"RTN","IBRFN4",94,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,7) ; TOTAL CHARGE
"RTN","IBRFN4",95,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,14) ; DT BILLD FROM
"RTN","IBRFN4",96,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,15) ; DT BILLD TO
"RTN","IBRFN4",97,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,11) ; AR BILL #
"RTN","IBRFN4",98,0)
 . S IBARRY=IBARRY_U_$P($P($G(^IB(IB,1)),U,2),".",1) ; DT ENTRY ADDED
"RTN","IBRFN4",99,0)
 . S IBARRY=IBARRY_U_$P(^DPT(DFN,0),U,9) ; SSN
"RTN","IBRFN4",100,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,17) ; EVENT DT
"RTN","IBRFN4",101,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,4) ;RESULTING FROM
"RTN","IBRFN4",102,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,13) ; Institution
"RTN","IBRFN4",103,0)
 . S IBARRY(IBCT)=IBARRY,IBARRY=""
"RTN","IBRFN4",104,0)
 Q
"RTN","IBRFN4",105,0)
 ;
"RTN","IBRFN4",106,0)
PREREG(IBBDT,IBEDT) ;Returns Pre-registration data
"RTN","IBRFN4",107,0)
 N IBDATA
"RTN","IBRFN4",108,0)
 S IBDATA=$$IBAR^IBJDIPR(IBBDT,IBEDT)
"RTN","IBRFN4",109,0)
 Q IBDATA
"RTN","IBRFN4",110,0)
 ;
"RTN","IBRFN4",111,0)
BUFFER(IBBDT,IBEDT) ;Returns Buffer data
"RTN","IBRFN4",112,0)
 N IBDATA
"RTN","IBRFN4",113,0)
 S IBDATA=$$IBAR^IBCNBOA(IBBDT,IBEDT)
"RTN","IBRFN4",114,0)
 Q IBDATA
"RTN","IBRFN4",115,0)
 ;
"RTN","IBRFN4",116,0)
DAYS(IBIFN) ; Returns # days site not responsible for MRA
"RTN","IBRFN4",117,0)
 N X,X1,X2,D0
"RTN","IBRFN4",118,0)
 S X="" ;No. of days
"RTN","IBRFN4",119,0)
 G:'$P(IBD,U,2) DAYSQ
"RTN","IBRFN4",120,0)
 S X2=$P(IBD,U,2) ;MRA Request Date
"RTN","IBRFN4",121,0)
 S X1=$P(IBD,U,7) ;MRA Recorded Date
"RTN","IBRFN4",122,0)
 G:'$$MRASEC^IBCEF4(IBIFN) DAYSQ ; Not MEDICARE secondary
"RTN","IBRFN4",123,0)
 I 'X1!(X1<X2) S X1=DT
"RTN","IBRFN4",124,0)
 D ^%DTC
"RTN","IBRFN4",125,0)
DAYSQ Q X
"RTN","IBRFN4",126,0)
 ;
"RTN","IBRFN4",127,0)
REJ(IBIFN) ; Returns 1 if any rejects found for MRA secondary claim or for
"RTN","IBRFN4",128,0)
 ; any preceding claims it was cancelled/cloned from
"RTN","IBRFN4",129,0)
 N X,Y,I,X1,X2,X3,D0,CURSEQ
"RTN","IBRFN4",130,0)
 S Y=0 ;Y=REJECT FLAG
"RTN","IBRFN4",131,0)
 G:'$$MRASEC^IBCEF4(IBIFN) REJQ ; Not MEDICARE secondary
"RTN","IBRFN4",132,0)
 S CURSEQ=$$COBN^IBCEF(IBIFN),X1=+$P($G(^DGCR(399,IBIFN,0)),U,15)
"RTN","IBRFN4",133,0)
 S D0=IBIFN
"RTN","IBRFN4",134,0)
 F  D  Q:'D0!Y
"RTN","IBRFN4",135,0)
 . ; claim copied from not cancelled and not MRA secondary claim
"RTN","IBRFN4",136,0)
 . I X1,$P($G(^DGCR(399,X1,0)),U,13)'=7,X1'=IBIFN S D0="" Q
"RTN","IBRFN4",137,0)
 . I X1,$P($G(^DGCR(399,X1,0)),U,19)'=$P($G(^DGCR(399,D0,0)),U,19) S D0="" Q
"RTN","IBRFN4",138,0)
 . S I=0 F  S I=$O(^IBM(361,"B",D0,I)) Q:'I  D  Q:Y
"RTN","IBRFN4",139,0)
 .. S X2=$G(^IBM(361,I,0))
"RTN","IBRFN4",140,0)
 .. Q:$P(X2,U,3)'="R"!'$P(X2,U,11)  ;No reject or no transmit bill
"RTN","IBRFN4",141,0)
 .. S X3=$TR($P($G(^IBA(364,+$P(X2,U,11),0)),U,8),"PST","123") ;status msg seq
"RTN","IBRFN4",142,0)
 .. Q:X3'=(CURSEQ-1)
"RTN","IBRFN4",143,0)
 .. S Y=1
"RTN","IBRFN4",144,0)
 . I 'Y S D0=X1,X1=+$P($G(^DGCR(399,X1,0)),U,15) S:X1=D0 D0="" Q
"RTN","IBRFN4",145,0)
REJQ Q Y
"RTN","IBTOBI1")
0^142^B19861632^B18898112
"RTN","IBTOBI1",1,0)
IBTOBI1 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI1",2,0)
 ;;2.0;INTEGRATED BILLING;**276,377,516**;21-MAR-94;Build 123
"RTN","IBTOBI1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTOBI1",4,0)
 ;
"RTN","IBTOBI1",5,0)
% ;
"RTN","IBTOBI1",6,0)
 F IBTAG="INS","BI","SC","CLIN^IBTOBI4","IR^IBTOBI2","HR^IBTOBI3" D @IBTAG Q:IBQUIT
"RTN","IBTOBI1",7,0)
 Q
"RTN","IBTOBI1",8,0)
 ;
"RTN","IBTOBI1",9,0)
INS ; -- print ins. stuff
"RTN","IBTOBI1",10,0)
 N TAB,TAB2,IBALLIN,IBDT,IBINS,IBCNT,I,X,IBI,PHON,PHON2,PHON3,P,IBI
"RTN","IBTOBI1",11,0)
 S TAB=5,TAB2=45,IBALLIN=1
"RTN","IBTOBI1",12,0)
 S IBDT=$P(IBTRND,"^",6)
"RTN","IBTOBI1",13,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBTOBI1",14,0)
 W !,"  Insurance Information "
"RTN","IBTOBI1",15,0)
 ;
"RTN","IBTOBI1",16,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBDT)
"RTN","IBTOBI1",17,0)
 I $G(IBINS(0))<1 W !,?TAB,"No Insurance Information",!!! G INSQ
"RTN","IBTOBI1",18,0)
 S IBI=0,IBCNT=0 F  S IBI=$O(IBINS(IBI)) Q:'IBI!(IBQUIT)  S IBINS=IBINS(IBI,0) D  Q:IBQUIT
"RTN","IBTOBI1",19,0)
 .S IBCNT=IBCNT+1
"RTN","IBTOBI1",20,0)
 .I ($Y+10)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI1",21,0)
 .I IBCNT>1 W !
"RTN","IBTOBI1",22,0)
 .W !?TAB,"     Ins. Co "_IBCNT_": ",$E($P($G(^DIC(36,+IBINS,0)),"^"),1,59)
"RTN","IBTOBI1",23,0)
 .S X=$G(^DIC(36,+IBINS,.13))
"RTN","IBTOBI1",24,0)
 .S PHON=$S($P(X,"^",3)'="":$P(X,"^",3),1:$P(X,"^"))
"RTN","IBTOBI1",25,0)
 .S PHON2=$S($P(X,"^",2)'="":$P(X,"^",2),1:$P(X,"^"))
"RTN","IBTOBI1",26,0)
 .S P=$S($P(IBETYP,"^",3)=1:5,$P(IBETYP,"^",3)=2:6,$P(IBETYP,"^",3)=3:11,1:1)
"RTN","IBTOBI1",27,0)
 .S PHON3=$S($P(X,"^",P)'="":$P(X,"^",P),1:$P(X,"^"))
"RTN","IBTOBI1",28,0)
 .; MRD;IB*2.0*516 - Rearranged some fields to allow more characters
"RTN","IBTOBI1",29,0)
 .; to be displayed for some fields.
"RTN","IBTOBI1",30,0)
 .W !?TAB,"          Type: ",$E($P($G(^IBE(355.1,+$P($G(^IBA(355.3,+$P(IBINS,"^",18),0)),"^",9),0)),"^"),1,18)
"RTN","IBTOBI1",31,0)
 .W ?TAB2,"Pre-Cert Phone: ",PHON
"RTN","IBTOBI1",32,0)
 .W !?TAB,"        Subsc.: ",$E($P(IBINS,"^",17),1,59)
"RTN","IBTOBI1",33,0)
 .W !?TAB,"     Subsc. ID: ",$E($P(IBINS,"^",2),1,59)
"RTN","IBTOBI1",34,0)
 .W !?TAB,"         Group: ",$E($$GRP^IBCNS($P(IBINS,"^",18)),1,59)
"RTN","IBTOBI1",35,0)
 .W !?TAB,"     Coord Ben: ",$E($$EXPAND^IBTRE(2.312,.2,$P(IBINS,"^",20)),1,18)
"RTN","IBTOBI1",36,0)
 .W ?TAB2," Billing Phone: ",PHON2
"RTN","IBTOBI1",37,0)
 .W !,?TAB,"Filing Time Fr: ",$$EXPAND^IBTRE(36,.12,$P($G(^DIC(36,+IBINS,0)),"^",12))
"RTN","IBTOBI1",38,0)
 .W ?TAB2,"  Claims Phone: ",PHON3
"RTN","IBTOBI1",39,0)
 .S X=$P($G(IBINS(IBI,1)),"^",8) I X'="" W !,"     Policy Comment: " W:($L(X)+23)>IOM ! W " ",X
"RTN","IBTOBI1",40,0)
 .D COMM(+$P(IBINS,"^",18))
"RTN","IBTOBI1",41,0)
 .Q:IBQUIT
"RTN","IBTOBI1",42,0)
 .W !?30,"-----------------------------------"
"RTN","IBTOBI1",43,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI1",44,0)
INSQ Q
"RTN","IBTOBI1",45,0)
 ;
"RTN","IBTOBI1",46,0)
BI ; -- print billing information
"RTN","IBTOBI1",47,0)
 Q:$D(IBCTHDR)
"RTN","IBTOBI1",48,0)
 I ($Y+8)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI1",49,0)
BI1 W !,"  Billing Information "
"RTN","IBTOBI1",50,0)
 N IBDGCR,IBDGCRU1,IBDGCRU,IBAMNT,IBD,I,IBIFN,IBLN,IBECME
"RTN","IBTOBI1",51,0)
 S IBIFN=+$P(IBTRND,"^",11)
"RTN","IBTOBI1",52,0)
 S IBDGCR=$G(^DGCR(399,IBIFN,0)),IBDGCRU1=$G(^("U1")),IBDGCRU=$G(^("U"))
"RTN","IBTOBI1",53,0)
 S IBECME=$P($P($G(^DGCR(399,IBIFN,"M1")),U,8),";")
"RTN","IBTOBI1",54,0)
 S IBAMNT=$$BILLD^IBTRED1(IBTRN)
"RTN","IBTOBI1",55,0)
 S IBLN=0
"RTN","IBTOBI1",56,0)
 S IBLN=IBLN+1,IBD(IBLN,1)="  Initial Bill: "_$P(IBDGCR,U,1)
"RTN","IBTOBI1",57,0)
 I IBECME D
"RTN","IBTOBI1",58,0)
 . S IBD(IBLN,1)=IBD(IBLN,1)_"e"
"RTN","IBTOBI1",59,0)
 . S IBLN=IBLN+1,IBD(IBLN,1)="   ECME Number: "_IBECME
"RTN","IBTOBI1",60,0)
 S IBLN=IBLN+1,IBD(IBLN,1)="   Bill Status: "_$E($$EXPAND^IBTRE(399,.13,$P(IBDGCR,U,13)),1,14)
"RTN","IBTOBI1",61,0)
 S IBLN=IBLN+1,IBD(IBLN,1)=" Total Charges: $ "_$J($P(IBAMNT,"^"),8)
"RTN","IBTOBI1",62,0)
 S IBLN=IBLN+1,IBD(IBLN,1)="   Amount Paid: $ "_$J($P(IBAMNT,"^",2),8)
"RTN","IBTOBI1",63,0)
 ;
"RTN","IBTOBI1",64,0)
 I $P(IBTRND,U,19) D
"RTN","IBTOBI1",65,0)
 . S IBLN=IBLN+1,IBD(IBLN,1)="Reason Not Billable: "_$$EXPAND^IBTRE(356,.19,$P(IBTRND,U,19))
"RTN","IBTOBI1",66,0)
 . S IBLN=IBLN+1,IBD(IBLN,1)="Additional Comment: "_$P(IBTRND1,U,8)
"RTN","IBTOBI1",67,0)
 . Q
"RTN","IBTOBI1",68,0)
 ;
"RTN","IBTOBI1",69,0)
 I '$P(IBTRND,U,19),$L($P(IBTRND1,U,8))>0 S IBLN=IBLN+1,IBD(IBLN,1)="Additional Comment: "_$P(IBTRND1,U,8)
"RTN","IBTOBI1",70,0)
 ;
"RTN","IBTOBI1",71,0)
 S IBD(1,2)="Estimated Recv (Pri): $ "_$J($P(IBTRND,"^",21),8)
"RTN","IBTOBI1",72,0)
 S IBD(2,2)="Estimated Recv (Sec): $ "_$J($P(IBTRND,"^",22),8)
"RTN","IBTOBI1",73,0)
 S IBD(3,2)="Estimated Recv (ter): $ "_$J($P(IBTRND,"^",23),8)
"RTN","IBTOBI1",74,0)
 S IBD(4,2)="  Means Test Charges: $ "_$J($P(IBTRND,"^",28),8)
"RTN","IBTOBI1",75,0)
 ;
"RTN","IBTOBI1",76,0)
 S I=0 F  S I=$O(IBD(I)) Q:'I  W !,$G(IBD(I,1)),?39,$E($G(IBD(I,2)),1,36)
"RTN","IBTOBI1",77,0)
 W:'IBQUIT !,?4,$TR($J(" ",IOM-8)," ","-")
"RTN","IBTOBI1",78,0)
 Q
"RTN","IBTOBI1",79,0)
 ;
"RTN","IBTOBI1",80,0)
SC ; -- print SC information
"RTN","IBTOBI1",81,0)
 I ($Y+7)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI1",82,0)
 N VAEL,TAB,IBTRCSC
"RTN","IBTOBI1",83,0)
 D ELIG^VADPT
"RTN","IBTOBI1",84,0)
 W !!,"  Eligibility Information"
"RTN","IBTOBI1",85,0)
 W !,"       Primary Eligibility: "_$P(VAEL(1),"^",2)
"RTN","IBTOBI1",86,0)
 W !,"         Means Test Status: "_$P(VAEL(9),"^",2)
"RTN","IBTOBI1",87,0)
 W !," Service Connected Percent: "_$S(+VAEL(3):+$P(VAEL(3),"^",2)_"%",1:"")
"RTN","IBTOBI1",88,0)
 I 'VAEL(3) W "Patient Not Service Connected",!! G SCQ
"RTN","IBTOBI1",89,0)
 S TAB=5,IBTRCSC=1 D SC^IBTOAT2
"RTN","IBTOBI1",90,0)
SCQ W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI1",91,0)
 Q
"RTN","IBTOBI1",92,0)
 ;
"RTN","IBTOBI1",93,0)
COMM(DA) ; -- print comments from GROUP plans.
"RTN","IBTOBI1",94,0)
 Q:IBQUIT
"RTN","IBTOBI1",95,0)
 W !,"Group Plan Comments: "
"RTN","IBTOBI1",96,0)
 Q:'$D(^IBA(355.3,DA,11))
"RTN","IBTOBI1",97,0)
 K ^UTILITY($J,"W")
"RTN","IBTOBI1",98,0)
 S DIWL=10,DIWR=IOM-12,DIWF="W"
"RTN","IBTOBI1",99,0)
 S IBJ=0 F  S IBJ=$O(^IBA(355.3,DA,11,IBJ)) Q:'IBJ  S X=^(IBJ,0) D ^DIWP I IOSL<($Y+3) Q:IBQUIT  D HDR^IBTOBI
"RTN","IBTOBI1",100,0)
 Q:IBQUIT
"RTN","IBTOBI1",101,0)
 D ^DIWW
"RTN","IBTOBI1",102,0)
 K ^UTILITY($J,"W")
"RTN","IBTOBI1",103,0)
 Q
"RTN","IBTRCD0")
0^101^B16868309^B16113018
"RTN","IBTRCD0",1,0)
IBTRCD0 ;ALB/AAS - CLAIMS TRACKING - EXPAND CONTACTS SCREEN - CONT ; 02-JUL-1993
"RTN","IBTRCD0",2,0)
 ;;2.0;INTEGRATED BILLING;**458,516**;21-MAR-94;Build 123
"RTN","IBTRCD0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRCD0",4,0)
 ;
"RTN","IBTRCD0",5,0)
% ;
"RTN","IBTRCD0",6,0)
EN D CONT,APPEAL,INS,COMM,USER
"RTN","IBTRCD0",7,0)
 Q
"RTN","IBTRCD0",8,0)
 ;
"RTN","IBTRCD0",9,0)
CONT ; -- Contact infomation display
"RTN","IBTRCD0",10,0)
 N OFFSET,START
"RTN","IBTRCD0",11,0)
 S START=1,OFFSET=2
"RTN","IBTRCD0",12,0)
CON1 D SET^IBCNSP(START,OFFSET," Contact Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",13,0)
 D SET^IBCNSP(START+1,OFFSET,"    Contact Date: "_$$DAT1^IBOUTL(+IBTRCD,"2P"))
"RTN","IBTRCD0",14,0)
 D SET^IBCNSP(START+2,OFFSET,"Person Contacted: "_$E($P(IBTRCD,"^",6),1,20))
"RTN","IBTRCD0",15,0)
 D SET^IBCNSP(START+3,OFFSET,"  Contact Method: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
"RTN","IBTRCD0",16,0)
 D SET^IBCNSP(START+4,OFFSET,"Call Ref. Number: "_$$CREFN^IBTRC(+$G(IBTRC),18))
"RTN","IBTRCD0",17,0)
 D SET^IBCNSP(START+5,OFFSET,"     Review Date: "_$$DAT1^IBOUTL($P(IBTRCD,"^",24)))
"RTN","IBTRCD0",18,0)
 I '$P(IBTRCD,"^",2) D SET^IBCNSP(START+2,OFFSET,"Patient Contacted: "_$P($G(^DPT(+$P(IBTRCD,"^",5),0)),"^"))
"RTN","IBTRCD0",19,0)
 Q
"RTN","IBTRCD0",20,0)
 ;
"RTN","IBTRCD0",21,0)
APPEAL ; -- Appeals address infomation display
"RTN","IBTRCD0",22,0)
 N OFFSET,START
"RTN","IBTRCD0",23,0)
 S START=15,OFFSET=2
"RTN","IBTRCD0",24,0)
AP1 D SET^IBCNSP(START,OFFSET," Appeal Address Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",25,0)
 D SET^IBCNSP(START+1,OFFSET,"  Ins. Co. Name: "_$E($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),1,24))
"RTN","IBTRCD0",26,0)
 N APLAD S APLAD=$G(^DIC(36,+$P(IBTRCD,"^",8),.14))
"RTN","IBTRCD0",27,0)
 D SET^IBCNSP(START+2,OFFSET," Alternate Name: "_$P(APLAD,"^",7))
"RTN","IBTRCD0",28,0)
 D SET^IBCNSP(START+3,OFFSET,"  Street line 1: "_$P(APLAD,"^",1))
"RTN","IBTRCD0",29,0)
 D SET^IBCNSP(START+4,OFFSET,"  Street line 2: "_$P(APLAD,"^",2))
"RTN","IBTRCD0",30,0)
 D SET^IBCNSP(START+5,OFFSET,"  Street line 3: "_$P(APLAD,"^",3))
"RTN","IBTRCD0",31,0)
 D SET^IBCNSP(START+6,OFFSET," City/State/Zip: "_$P(APLAD,"^",4)_$S($P(APLAD,"^",4)]"":", ",1:"")_$P($G(^DIC(5,+$P(APLAD,"^",5),0)),"^",2)_"  "_$P(APLAD,"^",6))
"RTN","IBTRCD0",32,0)
 Q
"RTN","IBTRCD0",33,0)
 ;
"RTN","IBTRCD0",34,0)
INS ; -- Ins. Co. infomation display
"RTN","IBTRCD0",35,0)
 N OFFSET,START,IBCDFND,IBPHONE
"RTN","IBTRCD0",36,0)
 S START=9,OFFSET=2
"RTN","IBTRCD0",37,0)
ENINS ; -- entry point, must set start and offset
"RTN","IBTRCD0",38,0)
 D SET^IBCNSP(START,OFFSET+25," Insurance Policy Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",39,0)
 D SET^IBCNSP(START+1,OFFSET,"   Ins. Co. Name: "_$E($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),1,24))
"RTN","IBTRCD0",40,0)
 S IBCDFND=$G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0))
"RTN","IBTRCD0",41,0)
 D SET^IBCNSP(START+2,OFFSET,"    Group Number: "_$$GRP^IBCNS($P(IBCDFND,"^",18)))
"RTN","IBTRCD0",42,0)
 D SET^IBCNSP(START+3,OFFSET," Whose Insurance: "_$$EXPAND^IBTRE(2.312,6,$P(IBCDFND,"^",6)))
"RTN","IBTRCD0",43,0)
 S IBPHONE=$G(^DIC(36,+$P(IBTRCD,"^",8),.13))
"RTN","IBTRCD0",44,0)
 S IBPHONE=$S($P(IBPHONE,"^",3)'="":$P(IBPHONE,"^",3),1:$P(IBPHONE,"^"))
"RTN","IBTRCD0",45,0)
 D SET^IBCNSP(START+4,OFFSET,"  Pre-Cert Phone: "_IBPHONE)
"RTN","IBTRCD0",46,0)
 D INS1
"RTN","IBTRCD0",47,0)
 Q
"RTN","IBTRCD0",48,0)
INS1 ; -- second site of Ins. info
"RTN","IBTRCD0",49,0)
 S OFFSET=45
"RTN","IBTRCD0",50,0)
 ;IB*2.0*516/TAZ - Use HIPAA Compliant fields
"RTN","IBTRCD0",51,0)
 ;D SET^IBCNSP(START+1,OFFSET,"Subscriber Name: "_$P(IBCDFND,"^",17))
"RTN","IBTRCD0",52,0)
 ;D SET^IBCNSP(START+2,OFFSET,"  Subscriber ID: "_$P(IBCDFND,"^",2))
"RTN","IBTRCD0",53,0)
 D SET^IBCNSP(START+1,OFFSET,"Subscriber Name: "_$$GET1^DIQ(2.312,+$P(IBTRCD1,"^",5)_","_DFN_",",7.01))
"RTN","IBTRCD0",54,0)
 D SET^IBCNSP(START+2,OFFSET,"  Subscriber ID: "_$$GET1^DIQ(2.312,+$P(IBTRCD1,"^",5)_","_DFN_",",7.02))
"RTN","IBTRCD0",55,0)
 D SET^IBCNSP(START+3,OFFSET," Effective Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",8),"2P"))
"RTN","IBTRCD0",56,0)
 D SET^IBCNSP(START+4,OFFSET,"Expiration Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",4),"2P"))
"RTN","IBTRCD0",57,0)
 Q
"RTN","IBTRCD0",58,0)
 ;
"RTN","IBTRCD0",59,0)
USER ; -- display user information
"RTN","IBTRCD0",60,0)
 N OFFSET,START
"RTN","IBTRCD0",61,0)
 S START=15,OFFSET=45
"RTN","IBTRCD0",62,0)
USER1 D SET^IBCNSP(START,OFFSET," User Information ",IORVON,IORVOFF)
"RTN","IBTRCD0",63,0)
 D SET^IBCNSP(START+1,OFFSET,"    Entered By: "_$P($G(^VA(200,+$P(IBTRCD1,"^",2),0)),"^"))
"RTN","IBTRCD0",64,0)
 D SET^IBCNSP(START+2,OFFSET,"    Entered On: "_$$DAT1^IBOUTL(+$P(IBTRCD1,"^"),"2P"))
"RTN","IBTRCD0",65,0)
 D SET^IBCNSP(START+3,OFFSET,"Last Edited By: "_$P($G(^VA(200,+$P(IBTRCD1,"^",4),0)),"^"))
"RTN","IBTRCD0",66,0)
 D SET^IBCNSP(START+4,OFFSET,"Last Edited On: "_$$DAT1^IBOUTL(+$P(IBTRCD1,"^",3),"2P"))
"RTN","IBTRCD0",67,0)
 Q
"RTN","IBTRCD0",68,0)
 ;
"RTN","IBTRCD0",69,0)
COMM ; -- Comment display
"RTN","IBTRCD0",70,0)
 N OFFSET,START,I,IBLCNT
"RTN","IBTRCD0",71,0)
 S START=23,OFFSET=2
"RTN","IBTRCD0",72,0)
COM1 D SET^IBCNSP(START,OFFSET," Comments ",IORVON,IORVOFF)
"RTN","IBTRCD0",73,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^IBT(356.2,IBTRC,11,IBI)) Q:IBI<1  D
"RTN","IBTRCD0",74,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRCD0",75,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^IBT(356.2,IBTRC,11,IBI,0)),1,80))
"RTN","IBTRCD0",76,0)
 D SC
"RTN","IBTRCD0",77,0)
 Q
"RTN","IBTRCD0",78,0)
 ;
"RTN","IBTRCD0",79,0)
SC ; -- Service connected conditions
"RTN","IBTRCD0",80,0)
 S START=START+2+IBLCNT,OFFSET=2,IBCNT=0,IBLCNT=0
"RTN","IBTRCD0",81,0)
 D SC1^IBTRED01
"RTN","IBTRCD0",82,0)
 Q
"RTN","IBTUBO")
0^7^B35610159^B25696439
"RTN","IBTUBO",1,0)
IBTUBO ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,235,248,155,516**;21-MAR-94;Build 123
"RTN","IBTUBO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO",4,0)
 ;
"RTN","IBTUBO",5,0)
% ; - Entry point for manual option.
"RTN","IBTUBO",6,0)
 N IBBDT,IBCOMP,IBDET,IBEDT,IBOPT,IBPRT,IBTIMON,IBQUIT,IBSEL
"RTN","IBTUBO",7,0)
 S IBQUIT=0 D:'$D(DT) DT^DICRW
"RTN","IBTUBO",8,0)
 W !!,"Re-Generate Unbilled Amounts Report",!
"RTN","IBTUBO",9,0)
 ;
"RTN","IBTUBO",10,0)
 ; - Ask to re-compile Unbilled Amounts data.
"RTN","IBTUBO",11,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBTUBO",12,0)
 S DIR("A")="Do you want to store Unbilled Amounts figures"
"RTN","IBTUBO",13,0)
 S DIR("?",1)="Enter 'YES' if you wish to store the Unbilled Amounts summary"
"RTN","IBTUBO",14,0)
 S DIR("?",2)="figures in your system for a specific month/year in the past."
"RTN","IBTUBO",15,0)
 S DIR("?",3)="Once stored, these figures will be available for inquiry through"
"RTN","IBTUBO",16,0)
 S DIR("?",4)="the View Unbilled Amounts option [IBT VIEW UNBILLED AMOUNTS]."
"RTN","IBTUBO",17,0)
 S DIR("?",5)="These summary figures are normally calculated and stored"
"RTN","IBTUBO",18,0)
 S DIR("?",6)="automatically by the system at the beginning of each month for"
"RTN","IBTUBO",19,0)
 S DIR("?",7)="the previous month."
"RTN","IBTUBO",20,0)
 S DIR("?",8)=" "
"RTN","IBTUBO",21,0)
 S DIR("?",9)="If you enter 'NO', the Unbilled Amounts summary figures will"
"RTN","IBTUBO",22,0)
 S DIR("?",10)="NOT be stored in your system, and the report may be run for"
"RTN","IBTUBO",23,0)
 S DIR("?")="any date range."
"RTN","IBTUBO",24,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBCOMP=Y
"RTN","IBTUBO",25,0)
 ;
"RTN","IBTUBO",26,0)
 ; IB*2.0*516 - Added ability to sort by Division
"RTN","IBTUBO",27,0)
 ;
"RTN","IBTUBO",28,0)
 K ^TMP($J,"IBTUB"),^TMP($J,"IBTUB-DIV")
"RTN","IBTUBO",29,0)
 I IBCOMP G RDATE
"RTN","IBTUBO",30,0)
 ;
"RTN","IBTUBO",31,0)
DIV ; division
"RTN","IBTUBO",32,0)
 W !!
"RTN","IBTUBO",33,0)
 S DIR(0)="SA^A:All Divisions;S:Selected Divisions"
"RTN","IBTUBO",34,0)
 S DIR("A")="Include All Divisions or Selected Divisions? "
"RTN","IBTUBO",35,0)
 S DIR("B")="All"
"RTN","IBTUBO",36,0)
 D ^DIR K DIR
"RTN","IBTUBO",37,0)
 I $D(DIROUT)!$D(DIRUT) Q  ;Timeout or User "^"
"RTN","IBTUBO",38,0)
 I Y="A" G DIVX
"RTN","IBTUBO",39,0)
 ;
"RTN","IBTUBO",40,0)
 W !
"RTN","IBTUBO",41,0)
 F  D  I IBQUIT S IBQUIT=IBQUIT-1 Q
"RTN","IBTUBO",42,0)
 . S DIC=40.8,DIC(0)="AEMQ",DIC("A")="   Select Division: "
"RTN","IBTUBO",43,0)
 . I $O(^TMP($J,"IBTUB-DIV","")) S DIC("A")="   Select Another Division: "
"RTN","IBTUBO",44,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBTUBO",45,0)
 . I X="^^" S IBQUIT=2 Q       ; user entered ^^
"RTN","IBTUBO",46,0)
 . I +Y'>0 S IBQUIT=1 Q        ; user is done
"RTN","IBTUBO",47,0)
 . S ^TMP($J,"IBTUB-DIV",+Y)=$P(Y,U,2)
"RTN","IBTUBO",48,0)
 . Q
"RTN","IBTUBO",49,0)
 ;
"RTN","IBTUBO",50,0)
 I IBQUIT G END  ;User "^" out of the selection
"RTN","IBTUBO",51,0)
 ;
"RTN","IBTUBO",52,0)
 I '$O(^TMP($J,"IBTUB-DIV","")) D  G DIV
"RTN","IBTUBO",53,0)
 . W *7,!!?3,"No divisions have been selected.  Please try again."
"RTN","IBTUBO",54,0)
 . Q
"RTN","IBTUBO",55,0)
 ;
"RTN","IBTUBO",56,0)
DIVX ; Exit Division selection.
"RTN","IBTUBO",57,0)
 ;
"RTN","IBTUBO",58,0)
 ; - Select date(s) to build report.
"RTN","IBTUBO",59,0)
 W ! D DT1^IBTUBOU G:IBBDT="^" END
"RTN","IBTUBO",60,0)
 ;
"RTN","IBTUBO",61,0)
 ; - Select report(s).
"RTN","IBTUBO",62,0)
 S IBPRT="Choose report type(s) to print:"
"RTN","IBTUBO",63,0)
 S IBOPT(1)="INPATIENT UNBILLED"
"RTN","IBTUBO",64,0)
 S IBOPT(2)="OUTPATIENT UNBILLED"
"RTN","IBTUBO",65,0)
 S IBOPT(3)="PRESCRIPTION UNBILLED"
"RTN","IBTUBO",66,0)
 S IBOPT(4)="ALL OF THE ABOVE"
"RTN","IBTUBO",67,0)
 S IBSEL=$$MLTP^IBJD(IBPRT,.IBOPT,1) I 'IBSEL G END
"RTN","IBTUBO",68,0)
 S $E(IBSEL,$L(IBSEL))=""
"RTN","IBTUBO",69,0)
 ;
"RTN","IBTUBO",70,0)
RDATE ; - Select re-compile date, if necessary.
"RTN","IBTUBO",71,0)
 I IBCOMP D  G END:IBTIMON="^",DET
"RTN","IBTUBO",72,0)
 . W ! D DT2("Unbilled Amounts") Q:IBTIMON="^"
"RTN","IBTUBO",73,0)
 . W !!,"NOTE: Just a reminder that by entering the above month/year this"
"RTN","IBTUBO",74,0)
 . W !,"      report will re-calculate and update the Unbilled Amounts"
"RTN","IBTUBO",75,0)
 . W !,"      data on file in your system.",*7
"RTN","IBTUBO",76,0)
 . ;
"RTN","IBTUBO",77,0)
 . ; - Initialize variables
"RTN","IBTUBO",78,0)
 . I IBTIMON<3030900 N X S X=$$M2^IBJDE(IBTIMON,11,11) D 
"RTN","IBTUBO",79,0)
 .. S IBBDT=+X,IBEDT=$P(X,U,2)+.9,IBSEL="1,2,3"
"RTN","IBTUBO",80,0)
 . I IBTIMON'<3030900 S IBBDT=$$M3^IBJDE($$LDATE^IBJDE(IBTIMON)+1),IBEDT=$$LDATE^IBJDE(IBTIMON)+.9,IBSEL="1,2,3"
"RTN","IBTUBO",81,0)
 . D MSG W !
"RTN","IBTUBO",82,0)
 ;
"RTN","IBTUBO",83,0)
 S IBTIMON=IBEDT\100*100
"RTN","IBTUBO",84,0)
 ;
"RTN","IBTUBO",85,0)
DET ; - Ask to print detail report.
"RTN","IBTUBO",86,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBTUBO",87,0)
 S DIR("A")="Print detail report with the Unbilled Amounts summary"
"RTN","IBTUBO",88,0)
 S DIR("?",1)="Answer YES if you want a detailed listing of the patients"
"RTN","IBTUBO",89,0)
 S DIR("?",2)="and events that are unbilled. Answer NO if you just want"
"RTN","IBTUBO",90,0)
 S DIR("?")="the summary, or '^' to quit this option."
"RTN","IBTUBO",91,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBDET=Y G:'IBDET QUE
"RTN","IBTUBO",92,0)
 ;
"RTN","IBTUBO",93,0)
 ; Ask to include REQUEST MRA Status
"RTN","IBTUBO",94,0)
 S DIR(0)="YA",DIR("A")="Do you want to include MRA claims?: ",DIR("B")="NO" W ! D ^DIR K DIR G:$D(DIRUT) END
"RTN","IBTUBO",95,0)
 S IBINMRA=+Y
"RTN","IBTUBO",96,0)
 ;
"RTN","IBTUBO",97,0)
 ; - Select device to print.
"RTN","IBTUBO",98,0)
 W !!,"This report takes a while to run, so you should queue it to run"
"RTN","IBTUBO",99,0)
 W !,"after normal business hours."
"RTN","IBTUBO",100,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBTUBO",101,0)
 S %ZIS="QM" D ^%ZIS G END:POP,QUE:$D(IO("Q"))
"RTN","IBTUBO",102,0)
 ;
"RTN","IBTUBO",103,0)
 U IO G STR
"RTN","IBTUBO",104,0)
 ;
"RTN","IBTUBO",105,0)
QUE ; - Queue report/summary, if necessary.
"RTN","IBTUBO",106,0)
 W ! I 'IBDET S ZTIO=""
"RTN","IBTUBO",107,0)
 S ZTRTN="IBTUBOA",ZTSAVE("IB*")=""
"RTN","IBTUBO",108,0)
 S ZTDESC="IB - Unbilled Amounts Report"
"RTN","IBTUBO",109,0)
 D ^%ZTLOAD K IO("Q"),ZTSK
"RTN","IBTUBO",110,0)
 D HOME^%ZIS G END
"RTN","IBTUBO",111,0)
 ;
"RTN","IBTUBO",112,0)
AUTO ; - Entry point for scheduled option.
"RTN","IBTUBO",113,0)
 Q  ;;**NO LONGER USED**
"RTN","IBTUBO",114,0)
 ;
"RTN","IBTUBO",115,0)
DQ ; - Entry point for DM extract.
"RTN","IBTUBO",116,0)
 ; - If AUTO PRINT UNBILLED LIST=yes and default report printer then
"RTN","IBTUBO",117,0)
 ;   automatically requeue to device.
"RTN","IBTUBO",118,0)
 I $P(^IBE(350.9,1,6),U,24) D  G END:'$G(IBXTRACT)
"RTN","IBTUBO",119,0)
 . N X S X=$O(^IBE(353,"B","IB REPORTS",0))
"RTN","IBTUBO",120,0)
 . S ZTIO=$P($G(^IBE(353,+X,0)),U,2) Q:ZTIO=""
"RTN","IBTUBO",121,0)
 . S IBDET=1,IBXTRACT=0,ZTDTH=$H,ZTRTN="IBTUBOA",ZTSAVE("IB*")=""
"RTN","IBTUBO",122,0)
 . S ZTDESC="IB - Unbilled Amounts Report" D ^%ZTLOAD
"RTN","IBTUBO",123,0)
 . S IBDET=0,IBXTRACT=1
"RTN","IBTUBO",124,0)
 . K ZTDESC,ZTDTH,ZTRTN,ZTSAVE,ZTSK
"RTN","IBTUBO",125,0)
 ;
"RTN","IBTUBO",126,0)
STR D ^IBTUBOA ; Start report.
"RTN","IBTUBO",127,0)
 ;
"RTN","IBTUBO",128,0)
END K DIRUT Q
"RTN","IBTUBO",129,0)
 ;
"RTN","IBTUBO",130,0)
MSG ; - Compile message.
"RTN","IBTUBO",131,0)
 W !!,"NOTE: After this report is run, the Unbilled Amounts totals for"
"RTN","IBTUBO",132,0)
 W !?6,"the month of "_$$DAT2^IBOUTL(IBTIMON)_" will be updated."
"RTN","IBTUBO",133,0)
 Q
"RTN","IBTUBO",134,0)
 ;
"RTN","IBTUBO",135,0)
DT2(STR) ; - Select re-compile date (returns variable IBTIMON).
"RTN","IBTUBO",136,0)
 ; Input: STR - String that describe the type of data that will be 
"RTN","IBTUBO",137,0)
 ;        re-compiled: "Unbilled Amounts", "Average Bill Amounts", etc...
"RTN","IBTUBO",138,0)
 ;
"RTN","IBTUBO",139,0)
 ; This code is very the same code as is in DT2^IBTUBOU... that is
"RTN","IBTUBO",140,0)
 ; a utility routine, so code was copied and altered to accommodate
"RTN","IBTUBO",141,0)
 ; EOAM changes. 
"RTN","IBTUBO",142,0)
 N DIRUT,DT0,DT1,DT2,Y
"RTN","IBTUBO",143,0)
 ; - AUG 1993 is the first month on file with Unbilled Amounts data
"RTN","IBTUBO",144,0)
 S DT0=2930800,DT1=$$DAT2^IBOUTL(DT0)
"RTN","IBTUBO",145,0)
 I $E(DT,6,7)'>$E($$LDATE^IBJDE(DT),6,7) S DT2=DT
"RTN","IBTUBO",146,0)
 I $E(DT,6,7)>$E($$LDATE^IBJDE(DT),6,7) S DT2=DT+100 I $E(DT2,4,5)=13 S DT2=DT+8900
"RTN","IBTUBO",147,0)
 S DT2=$$M1^IBJDE(DT2,1),DIR("B")=$$DAT2^IBOUTL(DT2)
"RTN","IBTUBO",148,0)
 S DIR(0)="DA^"_$E(DT0,1,5)_"00:"_DT2_":AE^K:$E(Y,6,7)'=""00"" X"
"RTN","IBTUBO",149,0)
 S DIR("A")="Re-compile "_$G(STR)_" through MONTH/YEAR: "
"RTN","IBTUBO",150,0)
 S DIR("?",1)="Enter a past month/year (ex. Oct 2000).",DIR("?",2)=""
"RTN","IBTUBO",151,0)
 S DIR("?",3)="NOTE: The earliest month/year that can be entered is "_DT1_", and"
"RTN","IBTUBO",152,0)
 S DIR("?")="      it is NOT possible to enter the current or a future month/year."
"RTN","IBTUBO",153,0)
 D ^DIR K DIR I $D(DIRUT) S IBTIMON="^" G DT2Q
"RTN","IBTUBO",154,0)
 I $E(Y,6,7)'="00"!($E(Y,4,7)="0000") W "  ??" G DT2
"RTN","IBTUBO",155,0)
 S IBTIMON=Y
"RTN","IBTUBO",156,0)
 ;
"RTN","IBTUBO",157,0)
DT2Q Q
"RTN","IBTUBO1")
0^9^B62446159^B47180115
"RTN","IBTUBO1",1,0)
IBTUBO1 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,247,155,277,339,399,516**;21-MAR-94;Build 123
"RTN","IBTUBO1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO1",4,0)
 ;
"RTN","IBTUBO1",5,0)
OPT(IBOE,IBQUERY) ; - Has the outpatient encounter been billed?
"RTN","IBTUBO1",6,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBTUBO1",7,0)
 ;               (NOTE: this value may be null)
"RTN","IBTUBO1",8,0)
 ;          IBQUERY (Passed by reference)=flag that is incremented when
"RTN","IBTUBO1",9,0)
 ;                  the Scheduling query API is invoked
"RTN","IBTUBO1",10,0)
 ;  *Pre-set variables: DFN=patient IEN, IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO1",11,0)
 ;                      IBEDT=End of reporting period date.
"RTN","IBTUBO1",12,0)
 ;                      IBX=ien of CLAIMS TRACKING entry file 356
"RTN","IBTUBO1",13,0)
 ;
"RTN","IBTUBO1",14,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!'$G(IBX) G OPTQ
"RTN","IBTUBO1",15,0)
 N IBCN,IBCPT,IBCPTSUM,IBCT,IBDATA,IBDAY,IBDIV,IBFL,IBNAME
"RTN","IBTUBO1",16,0)
 N IBQUIT,IBNCF,IBTCHRG,IBXX,IBYD,IBYY,IBZ,IBMRA
"RTN","IBTUBO1",17,0)
 ;
"RTN","IBTUBO1",18,0)
 ; - Check to be sure the encounter is billable.
"RTN","IBTUBO1",19,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) G OPTQ ;  Became inpatient same day.
"RTN","IBTUBO1",20,0)
 I $G(IBOE),$$ENCL^IBAMTS2(IBOE)["1" G OPTQ ; "ao^ir^sc^swa^mst^hnc^cv^shad" encounter.
"RTN","IBTUBO1",21,0)
 S IBDAY=$E(IBDT,1,7),IBNAME=$P($G(^DPT(DFN,0)),U),IBQUIT="",IBNCF=0
"RTN","IBTUBO1",22,0)
 ;
"RTN","IBTUBO1",23,0)
 ; - Determine the encounter division.
"RTN","IBTUBO1",24,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBTUBO1",25,0)
 ; IB*2.0*516 - Added ability to sort by Division.
"RTN","IBTUBO1",26,0)
 I $D(^TMP($J,"IBTUB-DIV")),'$D(^TMP($J,"IBTUB-DIV",IBDIV)) G OPTQ ; Not a selected Division
"RTN","IBTUBO1",27,0)
 ;
"RTN","IBTUBO1",28,0)
 ; - If no encounter, see if add/edits or registrations are not billable.
"RTN","IBTUBO1",29,0)
 I '$G(IBOE) D NOOE G:IBQUIT OPTQ
"RTN","IBTUBO1",30,0)
 ;
"RTN","IBTUBO1",31,0)
 ; - If encounter was dated prior to Reasonable Charges (9/1/99) and
"RTN","IBTUBO1",32,0)
 ;   the claim was not authorized before end of reporting period, add
"RTN","IBTUBO1",33,0)
 ;   encounter Tort Rate to Unbilled Outpatient Amount
"RTN","IBTUBO1",34,0)
 I IBDAY<2990901 D PRERC,SETUB:'IBQUIT G OPTQ
"RTN","IBTUBO1",35,0)
 I '$G(IBOE) G OPTQ ; If still no encounter, quit.
"RTN","IBTUBO1",36,0)
 ;
"RTN","IBTUBO1",37,0)
 ; - If encounter was made after start of Reasonable Charges (9/1/99)
"RTN","IBTUBO1",38,0)
 ;   and any of the encounter's procedure codes have no corresponding
"RTN","IBTUBO1",39,0)
 ;   inst. or prof. claims that were not authorized before end of the
"RTN","IBTUBO1",40,0)
 ;   reporting period, add the charges for the procedures to the
"RTN","IBTUBO1",41,0)
 ;   Unbilled Outpatient Amount.
"RTN","IBTUBO1",42,0)
 ;
"RTN","IBTUBO1",43,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBTUBO1",44,0)
 D GETCPT^SDOE(IBOE,"IBYY") G:'$G(IBYY) OPTQ ; Check CPT qty.
"RTN","IBTUBO1",45,0)
 ;
"RTN","IBTUBO1",46,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBTUBO1",47,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",48,0)
 . ;
"RTN","IBTUBO1",49,0)
 . ; - Get procedure pointer and code.
"RTN","IBTUBO1",50,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBTUBO1",51,0)
 . ;
"RTN","IBTUBO1",52,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBTUBO1",53,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBTUBO1",54,0)
 . ;
"RTN","IBTUBO1",55,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBTUBO1",56,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBTUBO1",57,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBTUBO1",58,0)
 . ;
"RTN","IBTUBO1",59,0)
 . ; - Eliminate components without a charge.
"RTN","IBTUBO1",60,0)
 . S IBCPTSUM(IBZ)=+$G(IBCPT(IBZ,1))+$G(IBCPT(IBZ,2))
"RTN","IBTUBO1",61,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBTUBO1",62,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBTUBO1",63,0)
 . Q
"RTN","IBTUBO1",64,0)
 ;
"RTN","IBTUBO1",65,0)
 I '$D(IBCPT) G OPTQ ; Quit if no billable procedures remain.
"RTN","IBTUBO1",66,0)
 ;
"RTN","IBTUBO1",67,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBTUBO1",68,0)
 ;   from the array those procedures that have been billed.
"RTN","IBTUBO1",69,0)
 S IBXX=0
"RTN","IBTUBO1",70,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",71,0)
 . ;
"RTN","IBTUBO1",72,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",73,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBTUBO1",74,0)
 . I $P(IBDATA,U,2)=2 S IBMRA(IBXX)=IBDATA ; MRA request
"RTN","IBTUBO1",75,0)
 . S IBNCF=IBNCF+1
"RTN","IBTUBO1",76,0)
 . ;
"RTN","IBTUBO1",77,0)
 . ; If Compile/Store & Not authorized/MRA requested before reporting period - Quit.
"RTN","IBTUBO1",78,0)
 . I $G(IBCOMP),$S('$G(IBMRA(IBXX)):$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO1",79,0)
 . ;
"RTN","IBTUBO1",80,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBTUBO1",81,0)
 . ;   all procedures billed on the claim.
"RTN","IBTUBO1",82,0)
 . S IBYY=0
"RTN","IBTUBO1",83,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBTUBO1",84,0)
 . . ;
"RTN","IBTUBO1",85,0)
 . . ; - Get the procedure code and charge type for the revenue code.
"RTN","IBTUBO1",86,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBTUBO1",87,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBTUBO1",88,0)
 . . S IBTCHRG=$P(IBYD,U,4)
"RTN","IBTUBO1",89,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBTUBO1",90,0)
 . . I $G(IBMRA(IBXX))'="" S:$D(IBCPT(IBZ)) IBCPT("MRA",IBZ,IBCT)=1 Q
"RTN","IBTUBO1",91,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBTUBO1",92,0)
 . . I $G(IBTCHRG)'<$G(IBCPTSUM(IBZ)) K IBCPT(IBZ) Q
"RTN","IBTUBO1",93,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT) Q
"RTN","IBTUBO1",94,0)
 . . K IBCPT(IBZ)
"RTN","IBTUBO1",95,0)
 . . Q
"RTN","IBTUBO1",96,0)
 . Q
"RTN","IBTUBO1",97,0)
 ;
"RTN","IBTUBO1",98,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBTUBO1",99,0)
 I '$D(IBCPT) G OPTQ
"RTN","IBTUBO1",100,0)
 ;
"RTN","IBTUBO1",101,0)
 ; - The encounter has unbilled procedure codes. Increment the counters
"RTN","IBTUBO1",102,0)
 ;   as per the extract specification.
"RTN","IBTUBO1",103,0)
 ;
"RTN","IBTUBO1",104,0)
 ; - Count the encounter (element 37N).
"RTN","IBTUBO1",105,0)
 S IBMRA=$S($D(IBCPT("MRA")):1,1:0)
"RTN","IBTUBO1",106,0)
 I 'IBMRA S IBUNB(IBDIV,"ENCNTRS")=$G(IBUNB(IBDIV,"ENCNTRS"))+1
"RTN","IBTUBO1",107,0)
 I $G(IBXTRACT) S IB(14)=IB(14)+1
"RTN","IBTUBO1",108,0)
 ;
"RTN","IBTUBO1",109,0)
 ; - Look at all the unbilled procedures.
"RTN","IBTUBO1",110,0)
 S IBZ=0 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBTUBO1",111,0)
 . ;
"RTN","IBTUBO1",112,0)
 . S IBMRA=$S($D(IBCPT("MRA",IBZ)):1,1:0)
"RTN","IBTUBO1",113,0)
 . ; - Count the procedure (element 37M).
"RTN","IBTUBO1",114,0)
 . I $G(IBXTRACT) S IB(13)=IB(13)+1
"RTN","IBTUBO1",115,0)
 . ;
"RTN","IBTUBO1",116,0)
 . ; - Count the institutional component (element 37I) and its
"RTN","IBTUBO1",117,0)
 . ;   corresponding charge amount (element 37J).
"RTN","IBTUBO1",118,0)
 . I $G(IBCPT(IBZ,1)) D
"RTN","IBTUBO1",119,0)
 . . I IBMRA D
"RTN","IBTUBO1",120,0)
 . . . S IBUNB(IBDIV,"CPTMS-I-MRA")=$G(IBUNB(IBDIV,"CPTMS-I-MRA"))+1
"RTN","IBTUBO1",121,0)
 . . . S IBUNB("CPTMS-I-MRA")=$G(IBUNB("CPTMS-I-MRA"))+1
"RTN","IBTUBO1",122,0)
 . . . S IBUNB(IBDIV,"UNBILOP-MRA")=$G(IBUNB(IBDIV,"UNBILOP-MRA"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",123,0)
 . . . S IBUNB("UNBILOP-MRA")=$G(IBUNB("UNBILOP-MRA"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",124,0)
 . . . Q
"RTN","IBTUBO1",125,0)
 . . E  D
"RTN","IBTUBO1",126,0)
 . . . S IBUNB(IBDIV,"CPTMS-I")=$G(IBUNB(IBDIV,"CPTMS-I"))+1
"RTN","IBTUBO1",127,0)
 . . . S IBUNB("CPTMS-I")=$G(IBUNB("CPTMS-I"))+1
"RTN","IBTUBO1",128,0)
 . . . S IBUNB(IBDIV,"UNBILOP")=$G(IBUNB(IBDIV,"UNBILOP"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",129,0)
 . . . S IBUNB("UNBILOP")=$G(IBUNB("UNBILOP"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",130,0)
 . . . Q
"RTN","IBTUBO1",131,0)
 . . I $G(IBXTRACT) S IB(9)=IB(9)+1,IB(10)=IB(10)+IBCPT(IBZ,1)
"RTN","IBTUBO1",132,0)
 . . Q
"RTN","IBTUBO1",133,0)
 . ;
"RTN","IBTUBO1",134,0)
 . ; - Count the professional component (element 37K) and its
"RTN","IBTUBO1",135,0)
 . ;   corresponding charge amount (element 37L).
"RTN","IBTUBO1",136,0)
 . I $G(IBCPT(IBZ,2)) D
"RTN","IBTUBO1",137,0)
 . . I IBMRA D
"RTN","IBTUBO1",138,0)
 . . . S IBUNB(IBDIV,"CPTMS-P-MRA")=$G(IBUNB(IBDIV,"CPTMS-P-MRA"))+1
"RTN","IBTUBO1",139,0)
 . . . S IBUNB("CPTMS-P-MRA")=$G(IBUNB("CPTMS-P-MRA"))+1
"RTN","IBTUBO1",140,0)
 . . . S IBUNB(IBDIV,"UNBILOP-MRA")=$G(IBUNB(IBDIV,"UNBILOP-MRA"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",141,0)
 . . . S IBUNB("UNBILOP-MRA")=$G(IBUNB("UNBILOP-MRA"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",142,0)
 . . . Q
"RTN","IBTUBO1",143,0)
 . . E  D
"RTN","IBTUBO1",144,0)
 . . . S IBUNB(IBDIV,"CPTMS-P")=$G(IBUNB(IBDIV,"CPTMS-P"))+1
"RTN","IBTUBO1",145,0)
 . . . S IBUNB("CPTMS-P")=$G(IBUNB("CPTMS-P"))+1
"RTN","IBTUBO1",146,0)
 . . . S IBUNB(IBDIV,"UNBILOP")=$G(IBUNB(IBDIV,"UNBILOP"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",147,0)
 . . . S IBUNB("UNBILOP")=$G(IBUNB("UNBILOP"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",148,0)
 . . . Q
"RTN","IBTUBO1",149,0)
 . . I $G(IBXTRACT) S IB(11)=IB(11)+1,IB(12)=IB(12)+IBCPT(IBZ,2)
"RTN","IBTUBO1",150,0)
 . . Q
"RTN","IBTUBO1",151,0)
 . Q
"RTN","IBTUBO1",152,0)
 ;
"RTN","IBTUBO1",153,0)
 D SETUB
"RTN","IBTUBO1",154,0)
 ;
"RTN","IBTUBO1",155,0)
OPTQ Q
"RTN","IBTUBO1",156,0)
 ;
"RTN","IBTUBO1",157,0)
PRERC ; - Determine if a pre-9/1/99 visit has been billed.
"RTN","IBTUBO1",158,0)
 ;   Output: IBQUIT will be set to 1 if the visit has been billed.
"RTN","IBTUBO1",159,0)
 ;   *Pre-set variables DFN,IBDAY,IBDET,IBNAME,IBNCF,IBQUIT,IBRT,IBEDT
"RTN","IBTUBO1",160,0)
 ;    and IB/IBUNB arrays required.
"RTN","IBTUBO1",161,0)
 ; NO MRA Extract code needed for pre-RC processes
"RTN","IBTUBO1",162,0)
 ;
"RTN","IBTUBO1",163,0)
 S IBDIV=0
"RTN","IBTUBO1",164,0)
 F  S IBDIV=$O(^TMP($J,"IBTUB",IBDIV)) Q:'IBDIV  D  I IBQUIT Q
"RTN","IBTUBO1",165,0)
 . I $D(^TMP($J,"IBTUB",IBDIV,"OPT",IBNAME_"@@"_DFN,IBDAY)) S IBQUIT=1
"RTN","IBTUBO1",166,0)
 I IBQUIT G PRCQ
"RTN","IBTUBO1",167,0)
 ;
"RTN","IBTUBO1",168,0)
 ; - Check all outpatient claims on event date.
"RTN","IBTUBO1",169,0)
 N IBXX S IBXX=0
"RTN","IBTUBO1",170,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D  Q:IBQUIT
"RTN","IBTUBO1",171,0)
 . ;
"RTN","IBTUBO1",172,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",173,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""  S IBNCF=IBNCF+1
"RTN","IBTUBO1",174,0)
 . I IBDIV="" S IBDIV=$$GET1^DIQ(399,IBXX_",",.22,"I")
"RTN","IBTUBO1",175,0)
 . ;
"RTN","IBTUBO1",176,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO1",177,0)
 . I $G(IBCOMP),$P(IBDATA,U,3)>IBEDT Q
"RTN","IBTUBO1",178,0)
 . ;
"RTN","IBTUBO1",179,0)
 . S IBQUIT=1 ; Episode has been billed-set flag.
"RTN","IBTUBO1",180,0)
 . Q
"RTN","IBTUBO1",181,0)
 ;
"RTN","IBTUBO1",182,0)
 I IBQUIT G PRCQ ; Episode was billed.
"RTN","IBTUBO1",183,0)
 I IBDIV="" S IBDIV=999999
"RTN","IBTUBO1",184,0)
 ;
"RTN","IBTUBO1",185,0)
 ; - The episode was not billed; determine the tort rate for a visit
"RTN","IBTUBO1",186,0)
 ;   and increment the number and amount of unbilled pre-9/1/99 visits.
"RTN","IBTUBO1",187,0)
 S IBXX=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"OUTPATIENT VISIT DATE")
"RTN","IBTUBO1",188,0)
 S IBUNB(IBDIV,"UNBILOP")=$G(IBUNB(IBDIV,"UNBILOP"))+IBXX
"RTN","IBTUBO1",189,0)
 S IBUNB("UNBILOP")=$G(IBUNB("UNBILOP"))+IBXX
"RTN","IBTUBO1",190,0)
 S IBUNB(IBDIV,"ENCNTRS")=$G(IBUNB(IBDIV,"ENCNTRS"))+1
"RTN","IBTUBO1",191,0)
 ;
"RTN","IBTUBO1",192,0)
 I $G(IBXTRACT) S IB(7)=IB(7)+1,IB(8)=IB(8)+IBXX ; For DM extract.
"RTN","IBTUBO1",193,0)
 ;
"RTN","IBTUBO1",194,0)
PRCQ Q
"RTN","IBTUBO1",195,0)
 ;
"RTN","IBTUBO1",196,0)
NOOE ; - If there is no encounter, look for add/edits or registrations.
"RTN","IBTUBO1",197,0)
 ;   Output: IBQUIT will be set to 1 if the visit is non-billable.
"RTN","IBTUBO1",198,0)
 ;   *Pre-set variable IBQUIT required.
"RTN","IBTUBO1",199,0)
 N IBDATA,IBSC,IBSDV,IBXX,IBZERR
"RTN","IBTUBO1",200,0)
 ;
"RTN","IBTUBO1",201,0)
 ; - Check if for a visit at the visit date/time.
"RTN","IBTUBO1",202,0)
 S IBXX=$$EXOE^SDOE(DFN,IBDT,IBDT,"","IBZERR")
"RTN","IBTUBO1",203,0)
 I IBXX D CKENC^IBTUBOU(IBXX,"",.IBQUIT) G NOOEQ
"RTN","IBTUBO1",204,0)
 ;
"RTN","IBTUBO1",205,0)
 ; - Find next add/edit stop code encounter after IBDT.
"RTN","IBTUBO1",206,0)
 D SCAN^IBTUBOU(DFN,IBDT,.IBQUERY)
"RTN","IBTUBO1",207,0)
 ;
"RTN","IBTUBO1",208,0)
NOOEQ Q
"RTN","IBTUBO1",209,0)
 ;
"RTN","IBTUBO1",210,0)
SETUB ; Set array elements for the detail report.
"RTN","IBTUBO1",211,0)
 ; Array element format:
"RTN","IBTUBO1",212,0)
 ; NON-MRA:
"RTN","IBTUBO1",213,0)
 ;  ^TMP($J,"IBTUB",DIVISION,"OPT",NAME@@DFN,DATE,IBX)=bill status^claim type
"RTN","IBTUBO1",214,0)
 ;  ^TMP($J,"IBTUB",DIVISION,"OPT",NAME@@DFN,DATE,IBX,CPT no)=inst rate^prof rate
"RTN","IBTUBO1",215,0)
 ; MRA:
"RTN","IBTUBO1",216,0)
 ;  ^TMP($J,"IBTUB",DIVISION,"OPT_MRA",NAME@@DFN,DATE,IBX,CPT no)=1 if MRA req
"RTN","IBTUBO1",217,0)
 ;
"RTN","IBTUBO1",218,0)
 N IBCTF,IBCPTNM
"RTN","IBTUBO1",219,0)
 I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB",IBDIV,"OPT",IBNAME_"@@"_DFN,IBDAY,IBX)=IBNCF
"RTN","IBTUBO1",220,0)
 I $G(IBINMRA),$O(IBCPT("MRA","")) S ^TMP($J,"IBTUB",IBDIV,"OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX)=1
"RTN","IBTUBO1",221,0)
 G:'IBDET SETUBQ
"RTN","IBTUBO1",222,0)
 I $D(IBCPT) S IBXX=0 F  S IBXX=$O(IBCPT(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",223,0)
 . S IBCPTNM=$$CODEC^ICPTCOD(IBXX) I IBCPTNM=-1 S IBCPTNM="UNK"
"RTN","IBTUBO1",224,0)
 . S IBCTF=$S($G(IBCPT(IBXX,1)):"I",1:"")
"RTN","IBTUBO1",225,0)
 . S IBCTF=$S($G(IBCPT(IBXX,2)):$S(IBCTF="I":"I,P",1:"P"),1:IBCTF)
"RTN","IBTUBO1",226,0)
 . I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB",IBDIV,"OPT",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=+$G(IBCPT(IBXX,1))_U_+$G(IBCPT(IBXX,2))_U_IBCTF
"RTN","IBTUBO1",227,0)
 . I $G(IBINMRA) S:$G(IBCPT("MRA",IBXX)) ^TMP($J,"IBTUB",IBDIV,"OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=1
"RTN","IBTUBO1",228,0)
 . Q
"RTN","IBTUBO1",229,0)
 ;
"RTN","IBTUBO1",230,0)
SETUBQ Q
"RTN","IBTUBO2")
0^38^B49823798^B33667876
"RTN","IBTUBO2",1,0)
IBTUBO2 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  8:21 AM
"RTN","IBTUBO2",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,155,309,347,437,516**;21-MAR-94;Build 123
"RTN","IBTUBO2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO2",4,0)
 ;
"RTN","IBTUBO2",5,0)
INPT(DGPM) ; - Check if inpatient episode has bills or final bill; if not,
"RTN","IBTUBO2",6,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"INPT",NAME@@DFN,DATE,IBX)=bill status
"RTN","IBTUBO2",7,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"INPT_MRA",NAME@@DFN,DATE,IBX)=1 if MRA request
"RTN","IBTUBO2",8,0)
 ;   *Pre-set variables: DFN=patient IEN, DGPM=pointer to file #405,
"RTN","IBTUBO2",9,0)
 ;                       IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO2",10,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",11,0)
 ;
"RTN","IBTUBO2",12,0)
 I '$G(DFN)!('$G(DGPM))!('$G(IBDT))!('$G(IBRT)) G INPTQ
"RTN","IBTUBO2",13,0)
 N IBIP,IBDATA,IBNAME,IBNCF,IBXX,X,Y,IBMRA,IBDIV,IBWARD
"RTN","IBTUBO2",14,0)
 S IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",15,0)
 ;
"RTN","IBTUBO2",16,0)
 ; Get Division.  Default to main Division if not in Ward location
"RTN","IBTUBO2",17,0)
 S IBWARD=$$GET1^DIQ(405,DGPM_",",.06,"I")  ;Determine Ward location.
"RTN","IBTUBO2",18,0)
 S IBDIV=$$GET1^DIQ(42,IBWARD_",",.015,"I") I IBDIV="" S IBDIV=$$PRIM^VASITE()
"RTN","IBTUBO2",19,0)
 I $D(^TMP($J,"IBTUB-DIV")),'$D(^TMP($J,"IBTUB-DIV",IBDIV)) G INPTQ ; Not a selected Division
"RTN","IBTUBO2",20,0)
 I $D(^TMP($J,"IBTUB",IBDIV,"INPT",IBNAME_"@@"_DFN,IBDT)) G INPTQ
"RTN","IBTUBO2",21,0)
 ;
"RTN","IBTUBO2",22,0)
 I $P($G(^DGPM(DGPM,0)),U,11) G INPTQ ;      Admitted for SC condition.
"RTN","IBTUBO2",23,0)
 I $$SC^IBTUBOU($P($G(^DGPM(DGPM,0)),U,16)) G INPTQ ; Check PTF for SC.
"RTN","IBTUBO2",24,0)
 S (IBIP(1),IBIP(2))=0 ; Set claim flags.
"RTN","IBTUBO2",25,0)
 ;
"RTN","IBTUBO2",26,0)
 ; - Check patient's claims.
"RTN","IBTUBO2",27,0)
 S (IBNCF,X)=0
"RTN","IBTUBO2",28,0)
 F  S X=$O(^DGCR(399,"C",DFN,X)) Q:'X  D  Q:IBIP(1)&(IBIP(2))
"RTN","IBTUBO2",29,0)
 . S IBDATA=$$CKBIL^IBTUBOU(X,1) Q:IBDATA=""
"RTN","IBTUBO2",30,0)
 . ;
"RTN","IBTUBO2",31,0)
 . ; The admission date on the bill is different from the Event date.
"RTN","IBTUBO2",32,0)
 . I $P(IBDATA,U,5)'=$P(IBDT,".") Q
"RTN","IBTUBO2",33,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for episode
"RTN","IBTUBO2",34,0)
 . ;
"RTN","IBTUBO2",35,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",36,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO2",37,0)
 . ;
"RTN","IBTUBO2",38,0)
 . S IBIP($P(IBDATA,U,4))=$S($P(IBDATA,U,2)'=2:1,1:2) ;   Episode billed for inst/prof bill type
"RTN","IBTUBO2",39,0)
 . Q
"RTN","IBTUBO2",40,0)
 ;
"RTN","IBTUBO2",41,0)
 I IBIP(1)=1 G:IBIP(2)=1!(IBDT<2990901) INPTQ ; Episode is billed.
"RTN","IBTUBO2",42,0)
 ;
"RTN","IBTUBO2",43,0)
 ; - Add to episodes missing inst./prof. bills.
"RTN","IBTUBO2",44,0)
 S (IBXX,IBMRA)=""
"RTN","IBTUBO2",45,0)
 ;
"RTN","IBTUBO2",46,0)
 I IBIP(1)'=1 D
"RTN","IBTUBO2",47,0)
 . I 'IBIP(1) D
"RTN","IBTUBO2",48,0)
 . . S IBUNB(IBDIV,"EPISM-I")=$G(IBUNB(IBDIV,"EPISM-I"))+1
"RTN","IBTUBO2",49,0)
 . . S IBUNB("EPISM-I")=$G(IBUNB("EPISM-I"))+1
"RTN","IBTUBO2",50,0)
 . . I IBDET S IBXX="I"
"RTN","IBTUBO2",51,0)
 . . Q
"RTN","IBTUBO2",52,0)
 . I $G(IBXTRACT) S IB(1)=IB(1)+1 ; For DM extract.
"RTN","IBTUBO2",53,0)
 . I IBIP(1)=2 D
"RTN","IBTUBO2",54,0)
 . . S IBUNB(IBDIV,"EPISM-I-MRA")=$G(IBUNB(IBDIV,"EPISM-I-MRA"))+1
"RTN","IBTUBO2",55,0)
 . . S IBUNB("EPISM-I-MRA")=$G(IBUNB("EPISM-I-MRA"))+1
"RTN","IBTUBO2",56,0)
 . . I IBDET S IBMRA="I"
"RTN","IBTUBO2",57,0)
 . . Q
"RTN","IBTUBO2",58,0)
 . Q
"RTN","IBTUBO2",59,0)
 ;
"RTN","IBTUBO2",60,0)
 I IBIP(2)'=1,IBDT'<2990901 D
"RTN","IBTUBO2",61,0)
 . I 'IBIP(2) D
"RTN","IBTUBO2",62,0)
 . . S IBUNB(IBDIV,"EPISM-P")=$G(IBUNB(IBDIV,"EPISM-P"))+1
"RTN","IBTUBO2",63,0)
 . . S IBUNB("EPISM-P")=$G(IBUNB("EPISM-P"))+1
"RTN","IBTUBO2",64,0)
 . . I IBDET S IBXX=$S(IBXX="I":"I,P",1:"P")
"RTN","IBTUBO2",65,0)
 . . Q
"RTN","IBTUBO2",66,0)
 . I $G(IBXTRACT) S IB(3)=IB(3)+1 ; For DM extract.
"RTN","IBTUBO2",67,0)
 . I IBIP(2)=2 D
"RTN","IBTUBO2",68,0)
 . . S IBUNB(IBDIV,"EPISM-P-MRA")=$G(IBUNB(IBDIV,"EPISM-P-MRA"))+1
"RTN","IBTUBO2",69,0)
 . . S IBUNB("EPISM-P-MRA")=$G(IBUNB("EPISM-P-MRA"))+1
"RTN","IBTUBO2",70,0)
 . . I IBDET S IBMRA=$S(IBMRA="I":"I,P",1:"P")
"RTN","IBTUBO2",71,0)
 . . Q
"RTN","IBTUBO2",72,0)
 . Q
"RTN","IBTUBO2",73,0)
 ;
"RTN","IBTUBO2",74,0)
 I 'IBIP(1)!'IBIP(2) S IBUNB(IBDIV,"EPISM-A")=$G(IBUNB(IBDIV,"EPISM-A"))+1  ; Number of Admissions missing claims
"RTN","IBTUBO2",75,0)
 I IBIP(1)=2!(IBIP(2)=2) S IBUNB(IBDIV,"EPISM-A-MRA")=$G(IBUNB(IBDIV,"EPISM-A-MRA"))+1
"RTN","IBTUBO2",76,0)
 I $G(IBXTRACT) S IB(5)=IB(5)+1 ; For DM extract.
"RTN","IBTUBO2",77,0)
 ;
"RTN","IBTUBO2",78,0)
 I '$G(IBINMRA),IBIP(1)=2 G:IBIP(2)=1 INPTQ
"RTN","IBTUBO2",79,0)
 I '$G(IBINMRA),IBIP(2)=2 G:IBIP(1)=1 INPTQ
"RTN","IBTUBO2",80,0)
 ;
"RTN","IBTUBO2",81,0)
 ; - Set global for report.
"RTN","IBTUBO2",82,0)
 I $S($G(IBINMRA):1,1:IBXX'="") S ^TMP($J,"IBTUB",IBDIV,"INPT",IBNAME_"@@"_DFN,IBDT,IBX)=IBNCF_U_IBXX_U_U_U_$$HOSP^IBTUBOU(DGPM)
"RTN","IBTUBO2",83,0)
 I IBMRA'="",$G(IBINMRA) S ^TMP($J,"IBTUB",IBDIV,"INPT_MRA",IBNAME_"@@"_DFN,IBDT,IBX)=1_U_IBMRA
"RTN","IBTUBO2",84,0)
 ;
"RTN","IBTUBO2",85,0)
INPTQ Q
"RTN","IBTUBO2",86,0)
 ;
"RTN","IBTUBO2",87,0)
RX(IBRX) ; - Check if prescription has been billed; if not,
"RTN","IBTUBO2",88,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"RX",NAME@@DFN,DATE@RX#,IBX)=bill status^drug name^
"RTN","IBTUBO2",89,0)
 ;                                            original fill date
"RTN","IBTUBO2",90,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"RX_MRA",NAME@@DFN,DATE@RX#,IBX)=1 if req MRA
"RTN","IBTUBO2",91,0)
 ;
"RTN","IBTUBO2",92,0)
 ;   *Pre-set variables: DFN=patient IEN, IBDT=refill date,
"RTN","IBTUBO2",93,0)
 ;                       IBRT=bill rate, IBRX=pointer to file #52,
"RTN","IBTUBO2",94,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",95,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!('$G(IBRX)) G RXQ
"RTN","IBTUBO2",96,0)
 N IBDATA,IBDAY,IBDRX,IBFL,IBFLG,IBOFD,IBNAME,IBND,IBNO,IBNCF,RX,X,RXDT,IBMRA,IBCO,IBCLIN,IBDIV
"RTN","IBTUBO2",97,0)
 ;
"RTN","IBTUBO2",98,0)
 ; - Be sure prescription has an RX#.
"RTN","IBTUBO2",99,0)
 S IBND=$$RXZERO^IBRXUTL(DFN,IBRX),IBNO=$P(IBND,U) G:IBNO="" RXQ
"RTN","IBTUBO2",100,0)
 ;
"RTN","IBTUBO2",101,0)
 ; - Retrieve the Prescription Original Fill Date
"RTN","IBTUBO2",102,0)
 S IBOFD=$$FILE^IBRXUTL(IBRX,22)\1
"RTN","IBTUBO2",103,0)
 ;
"RTN","IBTUBO2",104,0)
 S IBDAY=$E(IBDT,1,7),IBDRX=IBDAY_"@@"_IBNO,IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",105,0)
 ;
"RTN","IBTUBO2",106,0)
 ; Get Division from Clinic associated with Rx.  Default to VAMC
"RTN","IBTUBO2",107,0)
 S IBCLIN=$$FILE^IBRXUTL(IBRX,5)
"RTN","IBTUBO2",108,0)
 S IBDIV=$$GET1^DIQ(44,IBCLIN_",",3.5,"I") I IBDIV="" S IBDIV=999999
"RTN","IBTUBO2",109,0)
 I $D(^TMP($J,"IBTUB-DIV")),'$D(^TMP($J,"IBTUB-DIV",IBDIV)) G RXQ ; Not a selected Division
"RTN","IBTUBO2",110,0)
 ;
"RTN","IBTUBO2",111,0)
 ; - Be sure that this fill was not already marked as unbilled.
"RTN","IBTUBO2",112,0)
 I $D(^TMP($J,"IBTUB",IBDIV,"RX",IBNAME_"@@"_DFN,IBDRX,IBX)) G RXQ
"RTN","IBTUBO2",113,0)
 ;
"RTN","IBTUBO2",114,0)
 ; - Look at all fills of the prescription that are on a claim.
"RTN","IBTUBO2",115,0)
 S (IBFL,X)="",(IBFLG,IBNCF,IBNCF(0),IBMRA)=0
"RTN","IBTUBO2",116,0)
 F  S X=$O(^IBA(362.4,"B",IBNO,X)) Q:'X  D  Q:IBFL
"RTN","IBTUBO2",117,0)
 . S RX=$G(^IBA(362.4,X,0)),RXDT=$P(RX,U,3)\1
"RTN","IBTUBO2",118,0)
 . I RXDT=IBOFD S IBFLG=1  ; Original Fill Date Billed?
"RTN","IBTUBO2",119,0)
 . I RXDT'=IBDAY Q  ; RX refill and claim refill dates not the same.
"RTN","IBTUBO2",120,0)
 . ;
"RTN","IBTUBO2",121,0)
 . ; - Skip bill if not authorized (and not meeting other criteria).
"RTN","IBTUBO2",122,0)
 . S IBDATA=$$CKBIL^IBTUBOU($P(RX,U,2)) Q:IBDATA=""
"RTN","IBTUBO2",123,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for the episode
"RTN","IBTUBO2",124,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",125,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT S IBNONMRA=0 Q
"RTN","IBTUBO2",126,0)
 . S:$P(IBDATA,U,2)'=2 IBFL=1,IBMRA=0 ; at least 1 non-MRA bill exists
"RTN","IBTUBO2",127,0)
 . S:$P(IBDATA,U,2)=2 IBMRA=1 ; at least 1 MRA bill exists
"RTN","IBTUBO2",128,0)
 . Q
"RTN","IBTUBO2",129,0)
 ;
"RTN","IBTUBO2",130,0)
 I IBFL G RXQ ; Refill has been billed.
"RTN","IBTUBO2",131,0)
 ;
"RTN","IBTUBO2",132,0)
RX1 ; - Calculate unbilled amounts.
"RTN","IBTUBO2",133,0)
 I IBMRA D
"RTN","IBTUBO2",134,0)
 . S IBUNB(IBDIV,"PRESCRP-MRA")=$G(IBUNB(IBDIV,"PRESCRP-MRA"))+1
"RTN","IBTUBO2",135,0)
 . S IBUNB("PRESCRP-MRA")=$G(IBUNB("PRESCRP-MRA"))+1
"RTN","IBTUBO2",136,0)
 . Q
"RTN","IBTUBO2",137,0)
 E  D
"RTN","IBTUBO2",138,0)
 . S IBUNB(IBDIV,"PRESCRP")=$G(IBUNB(IBDIV,"PRESCRP"))+1
"RTN","IBTUBO2",139,0)
 . S IBUNB("PRESCRP")=$G(IBUNB("PRESCRP"))+1
"RTN","IBTUBO2",140,0)
 . Q
"RTN","IBTUBO2",141,0)
 ;
"RTN","IBTUBO2",142,0)
 ; Patch 437 update to call charge master with enough information
"RTN","IBTUBO2",143,0)
 ; to lookup actual cost of prescription 
"RTN","IBTUBO2",144,0)
 ;
"RTN","IBTUBO2",145,0)
 N IBBI,IBRSNEW,IBQTY,IBCOST,IBRFNUM,IBSUBND,IBFEE
"RTN","IBTUBO2",146,0)
 ;
"RTN","IBTUBO2",147,0)
 ; check charge master for the type of billing--VA Cost or not
"RTN","IBTUBO2",148,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBDAY,.IBRSNEW)
"RTN","IBTUBO2",149,0)
 ;
"RTN","IBTUBO2",150,0)
 I IBBI["VA COST" D
"RTN","IBTUBO2",151,0)
 . ; if this is a refill look up the refill info for cost and quantity
"RTN","IBTUBO2",152,0)
 . S IBRFNUM=$$RFLNUM^IBRXUTL(IBRX,IBDAY,"")
"RTN","IBTUBO2",153,0)
 . I IBRFNUM>0 D
"RTN","IBTUBO2",154,0)
 . . S IBSUBND=$$ZEROSUB^IBRXUTL(DFN,IBRX,IBRFNUM)
"RTN","IBTUBO2",155,0)
 . . S IBQTY=$P($G(IBSUBND),U,4)
"RTN","IBTUBO2",156,0)
 . . S IBCOST=$P($G(IBSUBND),U,11)
"RTN","IBTUBO2",157,0)
 . . Q
"RTN","IBTUBO2",158,0)
 . ;
"RTN","IBTUBO2",159,0)
 . ; if this was an original fill use the Rx info already in IBND
"RTN","IBTUBO2",160,0)
 . I $G(IBQTY)'>0 S IBQTY=$P($G(IBND),U,7)
"RTN","IBTUBO2",161,0)
 . I $G(IBCOST)'>0 S IBCOST=$P($G(IBND),U,17)
"RTN","IBTUBO2",162,0)
 . ;
"RTN","IBTUBO2",163,0)
 . S IBRSNEW=+$O(IBRSNEW($P(IBBI,";"),0))
"RTN","IBTUBO2",164,0)
 . S IBCO=$J($$RATECHG^IBCRCC(+IBRSNEW,IBQTY*IBCOST,IBDAY,.IBFEE),0,2)
"RTN","IBTUBO2",165,0)
 . Q
"RTN","IBTUBO2",166,0)
 E  D
"RTN","IBTUBO2",167,0)
 . S IBCO=$$BICOST^IBCRCI(IBRT,3,IBDAY,"PRESCRIPTION FILL")
"RTN","IBTUBO2",168,0)
 . Q
"RTN","IBTUBO2",169,0)
 ;
"RTN","IBTUBO2",170,0)
 I IBMRA D
"RTN","IBTUBO2",171,0)
 . S IBUNB(IBDIV,"UNBILRX-MRA")=$G(IBUNB(IBDIV,"UNBILRX-MRA"))+IBCO
"RTN","IBTUBO2",172,0)
 . S IBUNB("UNBILRX-MRA")=$G(IBUNB("UNBILRX-MRA"))+IBCO
"RTN","IBTUBO2",173,0)
 . Q
"RTN","IBTUBO2",174,0)
 I 'IBMRA D
"RTN","IBTUBO2",175,0)
 . S IBUNB(IBDIV,"UNBILRX")=$G(IBUNB(IBDIV,"UNBILRX"))+IBCO
"RTN","IBTUBO2",176,0)
 . S IBUNB("UNBILRX")=$G(IBUNB("UNBILRX"))+IBCO
"RTN","IBTUBO2",177,0)
 . Q
"RTN","IBTUBO2",178,0)
 I $G(IBXTRACT) D  ; For DM extract.
"RTN","IBTUBO2",179,0)
 . S IB(17)=IB(17)+1
"RTN","IBTUBO2",180,0)
 . S IB(18)=IB(18)+IBCO
"RTN","IBTUBO2",181,0)
 . Q
"RTN","IBTUBO2",182,0)
 ;
"RTN","IBTUBO2",183,0)
 ; - Set global for report.
"RTN","IBTUBO2",184,0)
 D ZERO^IBRXUTL(+$P(IBND,U,6))
"RTN","IBTUBO2",185,0)
 I $S($G(IBINMRA):1,1:'IBMRA) S ^TMP($J,"IBTUB",IBDIV,"RX",IBNAME_"@@"_DFN,IBDRX,IBX)=IBNCF_U_$P($G(^VA(200,+$P(IBND,U,4),0)),U)_U_$$FILE^IBRXUTL(IBRX,22)_U_U_IBFLG_U_$G(^TMP($J,"IBDRUG",+$P(IBND,U,6),.01))
"RTN","IBTUBO2",186,0)
 I IBMRA,$G(IBINMRA) S ^TMP($J,"IBTUB",IBDIV,"RX_MRA",IBNAME_"@@"_DFN,IBDRX,IBX)=1
"RTN","IBTUBO2",187,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTUBO2",188,0)
 ;
"RTN","IBTUBO2",189,0)
RXQ Q
"RTN","IBTUBO3")
0^10^B28228475^B23289291
"RTN","IBTUBO3",1,0)
IBTUBO3 ;ALB/RB - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  9:12 AM
"RTN","IBTUBO3",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,192,155,277,516**;21-MAR-94;Build 123
"RTN","IBTUBO3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO3",4,0)
 ;
"RTN","IBTUBO3",5,0)
REPORT ; - Prepare report if requested, send summary bulletin.
"RTN","IBTUBO3",6,0)
 N IBDIV,IBN,IBPAG,IBQ,IBRUN,DFN,DTE,FL,PT,X0,X1
"RTN","IBTUBO3",7,0)
 S IBRUN=$$HTE^XLFDT($H,1)
"RTN","IBTUBO3",8,0)
 D BULL^IBTUBUL G:'IBDET REPRTQ
"RTN","IBTUBO3",9,0)
 ;
"RTN","IBTUBO3",10,0)
REPRT1 ;
"RTN","IBTUBO3",11,0)
 S (IBPAG,IBQ)=0
"RTN","IBTUBO3",12,0)
 ;I '$D(^TMP($J)) S X0="" D HDR,NIM D:'IBQ PAUSE G REPRTQ
"RTN","IBTUBO3",13,0)
 I '$O(^TMP($J,"IBTUB",0)) S X0="",IBDIV=999999 D HDR,NIM D:'IBQ PAUSE G REPRTQ
"RTN","IBTUBO3",14,0)
 S IBDIV=0
"RTN","IBTUBO3",15,0)
 F  S IBDIV=$O(^TMP($J,"IBTUB",IBDIV)) Q:'IBDIV  D
"RTN","IBTUBO3",16,0)
 . F X0=1,2,3 I IBSEL[X0 D  Q:IBQ
"RTN","IBTUBO3",17,0)
 . . S X1=$S(X0=2:"OPT",X0=3:"RX",1:"INPT")
"RTN","IBTUBO3",18,0)
 . . D HDR Q:IBQ  I '$D(^TMP($J,"IBTUB",IBDIV,X1)) D NIM Q
"RTN","IBTUBO3",19,0)
 . . S PT="" F  S PT=$O(^TMP($J,"IBTUB",IBDIV,X1,PT)) Q:PT=""  D  Q:IBQ
"RTN","IBTUBO3",20,0)
 . . . S DFN=+$P(PT,"@@",2) Q:'DFN
"RTN","IBTUBO3",21,0)
 . . . S (DTE,FL)="" F  S DTE=$O(^TMP($J,"IBTUB",IBDIV,X1,PT,DTE)) Q:DTE=""  D  Q:IBQ
"RTN","IBTUBO3",22,0)
 . . . . S IBX="" F  S IBX=$O(^TMP($J,"IBTUB",IBDIV,X1,PT,DTE,IBX)) Q:IBX=""  D  Q:IBQ
"RTN","IBTUBO3",23,0)
 . . . . . S IBN=^TMP($J,"IBTUB",IBDIV,X1,PT,DTE,IBX) D LINE Q:IBQ  I X1["OPT" D CPTS Q:IBQ
"RTN","IBTUBO3",24,0)
 . . . . . Q
"RTN","IBTUBO3",25,0)
 . . . . Q
"RTN","IBTUBO3",26,0)
 . . . Q
"RTN","IBTUBO3",27,0)
 . . Q
"RTN","IBTUBO3",28,0)
 . Q
"RTN","IBTUBO3",29,0)
 ;
"RTN","IBTUBO3",30,0)
 D:'IBQ PAUSE
"RTN","IBTUBO3",31,0)
 ;
"RTN","IBTUBO3",32,0)
REPRTQ Q
"RTN","IBTUBO3",33,0)
 ;
"RTN","IBTUBO3",34,0)
HDR ; - Output header.
"RTN","IBTUBO3",35,0)
 N I,X,XTP,IBDIVHDR
"RTN","IBTUBO3",36,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE G HDRQ:IBQ
"RTN","IBTUBO3",37,0)
 I '$G(IBPAG) W !
"RTN","IBTUBO3",38,0)
 I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBTUBO3",39,0)
 S IBDIVHDR=""
"RTN","IBTUBO3",40,0)
 I IBDIV=999999 S IBDIVHDR="UNKNOWN"
"RTN","IBTUBO3",41,0)
 E  S IBDIVHDR=$$GET1^DIQ(40.8,IBDIV_",",.01)_" ("_$$GET1^DIQ(40.8,IBDIV_",",1)_")"
"RTN","IBTUBO3",42,0)
 S IBPAG=$G(IBPAG)+1
"RTN","IBTUBO3",43,0)
 W !,"Unbilled Amounts Report"
"RTN","IBTUBO3",44,0)
 W ?60,"Run Date: ",IBRUN,?124,"Page ",$J(IBPAG,3)
"RTN","IBTUBO3",45,0)
 S XTP=$S(X0=1:"INPATIENT",X0=2:"OUTPATIENT",X0=3:"PRESCRIPTIONS",1:"")
"RTN","IBTUBO3",46,0)
 I X0'=3 S XTP=XTP_" EPISODES"
"RTN","IBTUBO3",47,0)
 S X="ALL "_XTP_" FROM "
"RTN","IBTUBO3",48,0)
 S X=X_$$DTE(IBBDT)_" TO "_$$DTE(IBEDT\1)_" FOR DIVISION: "_IBDIVHDR
"RTN","IBTUBO3",49,0)
 I $G(IBCOMP) S X=X_" / DATA RECOMPILED/STORED FOR "_$$DAT2^IBOUTL(IBTIMON)
"RTN","IBTUBO3",50,0)
 S X=X_" / '*' AFTER THE PATIENT NAME = USUALLY BILLED MEANS TEST COPAYMENT"
"RTN","IBTUBO3",51,0)
 I X0=1 S X=X_" / 'H' AFTER THE ADMISSION DATE = PATIENT CURRENTLY HOSPITALIZED"
"RTN","IBTUBO3",52,0)
 I X0=3 S X=X_" / '$' AFTER THE ORIGINAL FILL DATE = ORIGINAL FILL DATE HAS BEEN BILLED"
"RTN","IBTUBO3",53,0)
 S X=X_" / 'CF' COLUMN = NUMBER OF CLAIMS ON FILE FOR THE EPISODE"
"RTN","IBTUBO3",54,0)
 I X0'=3 D
"RTN","IBTUBO3",55,0)
 . S X=X_" / 'I/P' COLUMN = 'I' - INSTUTIONAL CLAIM MISSING,"
"RTN","IBTUBO3",56,0)
 . S X=X_" 'P' - PROFESSIONAL CLAIM MISSING"
"RTN","IBTUBO3",57,0)
 . Q
"RTN","IBTUBO3",58,0)
 F I=1:1 W !,$E(X,1,132) S X=$E(X,133,999) Q:X=""
"RTN","IBTUBO3",59,0)
 ;
"RTN","IBTUBO3",60,0)
 I 'X0 W !,$TR($J(" ",IOM)," ","-"),! G HDRQ
"RTN","IBTUBO3",61,0)
 W !!?29,"Last Prim.  Claims" W:X0=3 ?52,"Fill",?123,"Original"
"RTN","IBTUBO3",62,0)
 W !,"Name",?29,"4SSN Elig.  Track.ID#"
"RTN","IBTUBO3",63,0)
 I X0=1 W ?52,"Admission CF Insurance Carrier(s)",?98,"I/P",?102,"MRA"
"RTN","IBTUBO3",64,0)
 I X0=2 W ?52,"Care Dt.  CF Insurance Carrier(s)",?98,"I/P",?102,"MRA",?106,"CPT     I. Rate   P. Rate"
"RTN","IBTUBO3",65,0)
 I X0=3 W ?52,"Date     CF Ins. Carrier(s)     MRA Drug Name        Physician",?123,"Fill Dt."
"RTN","IBTUBO3",66,0)
 W !,$TR($J(" ",IOM)," ","-"),!
"RTN","IBTUBO3",67,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D
"RTN","IBTUBO3",68,0)
 . W !!,"...Task stoped at user request"
"RTN","IBTUBO3",69,0)
 . S (IBQ,ZTSTOP)=1
"RTN","IBTUBO3",70,0)
 . Q
"RTN","IBTUBO3",71,0)
 ;
"RTN","IBTUBO3",72,0)
HDRQ Q
"RTN","IBTUBO3",73,0)
 ;
"RTN","IBTUBO3",74,0)
CPTS ; - Outpatient Only (CPTs and Rates)
"RTN","IBTUBO3",75,0)
 N CPT,IBN1
"RTN","IBTUBO3",76,0)
 I $O(^TMP($J,X1,PT,DTE,IBX,""))="" W ?98,"I",?103,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"") W ! Q
"RTN","IBTUBO3",77,0)
 S CPT="" F  S CPT=$O(^TMP($J,X1,PT,DTE,IBX,CPT)) Q:CPT=""  D  Q:IBQ
"RTN","IBTUBO3",78,0)
 . S IBN1=^TMP($J,X1,PT,DTE,IBX,CPT)
"RTN","IBTUBO3",79,0)
 . I $Y>(IOSL-5) D HDR Q:IBQ  S FL=0 D LINE
"RTN","IBTUBO3",80,0)
 . W ?98,$P(IBN1,U,3),?103,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:""),?106,CPT,?113,$J(+IBN1,8,2)
"RTN","IBTUBO3",81,0)
 . W ?124,$J($P(IBN1,U,2),8,2),!
"RTN","IBTUBO3",82,0)
 Q
"RTN","IBTUBO3",83,0)
 ;
"RTN","IBTUBO3",84,0)
LINE ; - Print detail line.
"RTN","IBTUBO3",85,0)
 I $Y>(IOSL-6) D HDR G:IBQ LINQ S FL=0
"RTN","IBTUBO3",86,0)
 I 'FL D
"RTN","IBTUBO3",87,0)
 . W $E($P(PT,"@@"),1,26) I $$BIL^DGMTUB(DFN,+DTE) W " *"
"RTN","IBTUBO3",88,0)
 . W ?29,$$SSN(DFN),?34,$E($$ELIG(DFN),1,5) S FL=1
"RTN","IBTUBO3",89,0)
 ;
"RTN","IBTUBO3",90,0)
 W ?39,$J(IBX,11)
"RTN","IBTUBO3",91,0)
 ; - Inpatient and Outpatient Only
"RTN","IBTUBO3",92,0)
 I X1'["RX" D
"RTN","IBTUBO3",93,0)
 . W ?52,$$DTE(+DTE) W:X1["INPT" $S($P(IBN,U,5):"H",1:"")
"RTN","IBTUBO3",94,0)
 . W ?62,$J($P(IBN,U),2),?65,$$INS(DFN,+DTE,34)
"RTN","IBTUBO3",95,0)
 . I X1["INPT" D
"RTN","IBTUBO3",96,0)
 .. I $P(IBN,U,2)'="" W ?98,$E($P(IBN,U,2),1,3),!
"RTN","IBTUBO3",97,0)
 .. I '$G(^TMP($J,X1_"_MRA",PT,DTE,IBX))!'$G(IBINMRA) W:$P(IBN,U,2)="" ! Q
"RTN","IBTUBO3",98,0)
 .. W ?98,$E($P(^TMP($J,X1_"_MRA",PT,DTE,IBX),U,2),1,3),?103,"M",!
"RTN","IBTUBO3",99,0)
 ;
"RTN","IBTUBO3",100,0)
 ; - Pharmacy Only
"RTN","IBTUBO3",101,0)
 I X1["RX" D  G LINQ
"RTN","IBTUBO3",102,0)
 . W ?52,$$DTE(+DTE),?61,$J($P(IBN,U),2),?64,$$INS(DFN,+DTE,19),?85,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"")
"RTN","IBTUBO3",103,0)
 . W ?88,$E($P(IBN,U,6),1,15),?105,$E($P(IBN,U,2),1,14)
"RTN","IBTUBO3",104,0)
 . W ?123,$$DTE($P(IBN,U,3)) W:$P(IBN,"^",5) "$" W !
"RTN","IBTUBO3",105,0)
 ;
"RTN","IBTUBO3",106,0)
LINQ Q
"RTN","IBTUBO3",107,0)
 ;
"RTN","IBTUBO3",108,0)
SSN(DFN) ; - Return last 4 of patient's SSN.
"RTN","IBTUBO3",109,0)
 N SSN,VADM
"RTN","IBTUBO3",110,0)
 D DEM^VADPT S SSN=$P(VADM(2),"^"),SSN=$E(SSN,6,9) D KVA^VADPT
"RTN","IBTUBO3",111,0)
 Q SSN
"RTN","IBTUBO3",112,0)
 ;
"RTN","IBTUBO3",113,0)
ELIG(DFN) ; - Return patient's primary eligibility (1st 10 characters).
"RTN","IBTUBO3",114,0)
 N ELIG,VAEL
"RTN","IBTUBO3",115,0)
 D ELIG^VADPT S ELIG=$E($P(VAEL(1),"^",2),1,10) D KVAR^VADPT
"RTN","IBTUBO3",116,0)
 Q ELIG
"RTN","IBTUBO3",117,0)
 ;
"RTN","IBTUBO3",118,0)
DTE(D) ; - Format date (MM/DD/YY or MM/YY).
"RTN","IBTUBO3",119,0)
 Q $S('$G(D):"",1:$E(D,4,5)_"/"_$S($E(D,6,7)'="00":$E(D,6,7)_"/",1:"")_$E(D,2,3))
"RTN","IBTUBO3",120,0)
 ;
"RTN","IBTUBO3",121,0)
INS(P,D,C) ; - Return patient's insurance carrier(s).
"RTN","IBTUBO3",122,0)
 ;   Input: P=patient IEN, D=event date, C=Size of the Ins.Carrier column
"RTN","IBTUBO3",123,0)
 ;  Output: List of Providers
"RTN","IBTUBO3",124,0)
 ;
"RTN","IBTUBO3",125,0)
 I '$G(P)!('$G(D)) Q ""
"RTN","IBTUBO3",126,0)
 ;
"RTN","IBTUBO3",127,0)
 N INSC,INSL,INSN,LST,TMP,X
"RTN","IBTUBO3",128,0)
 ;
"RTN","IBTUBO3",129,0)
 S INSL="" D ALL^IBCNS1(P,"LST",1,D)
"RTN","IBTUBO3",130,0)
 S X=0 F  S X=$O(LST(X)) Q:'X  D
"RTN","IBTUBO3",131,0)
 . S INSC=+$G(LST(X,0)) Q:$D(TMP(INSC))!'INSC
"RTN","IBTUBO3",132,0)
 . S INSN=$P($G(^DIC(36,INSC,0)),U)
"RTN","IBTUBO3",133,0)
 . I $G(LST(0))>1 S INSN=$E(INSN,1,C\2)
"RTN","IBTUBO3",134,0)
 . S INSL=INSL_","_INSN
"RTN","IBTUBO3",135,0)
 . S TMP(INSC)=""
"RTN","IBTUBO3",136,0)
 ;
"RTN","IBTUBO3",137,0)
 S $E(INSL)=""
"RTN","IBTUBO3",138,0)
 I $L(INSL,",")>1,$L(INSL)>C D
"RTN","IBTUBO3",139,0)
 . S INSL=$E(INSL,1,C-3),$P(INSL,",",$L(INSL,","))="..."
"RTN","IBTUBO3",140,0)
 S INSL=$E(INSL,1,C)
"RTN","IBTUBO3",141,0)
 ;
"RTN","IBTUBO3",142,0)
 Q INSL
"RTN","IBTUBO3",143,0)
 ;
"RTN","IBTUBO3",144,0)
NIM ; - Print 'no info' message.
"RTN","IBTUBO3",145,0)
 W !?3,"No information available for the period specified."
"RTN","IBTUBO3",146,0)
 Q
"RTN","IBTUBO3",147,0)
 ;
"RTN","IBTUBO3",148,0)
PAUSE ; - Page break.
"RTN","IBTUBO3",149,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBTUBO3",150,0)
 N IBI,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBTUBO3",151,0)
 F IBI=$Y:1:(IOSL-3) W !
"RTN","IBTUBO3",152,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQ=1
"RTN","IBTUBO3",153,0)
 Q
"RTN","IBTUBOA")
0^8^B37900623^B30890238
"RTN","IBTUBOA",1,0)
IBTUBOA ;ALB/RB - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;01-JAN-01
"RTN","IBTUBOA",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,155,276,516**;21-MAR-94;Build 123
"RTN","IBTUBOA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBOA",4,0)
 ;
"RTN","IBTUBOA",5,0)
% ; - Entry point from Taskman.
"RTN","IBTUBOA",6,0)
 ;
"RTN","IBTUBOA",7,0)
 ; IB*2.0*516 - Added ability to sort by Division, so added IBDIV as a
"RTN","IBTUBOA",8,0)
 ; subscript to most of the IBUNB entries.
"RTN","IBTUBOA",9,0)
 ;
"RTN","IBTUBOA",10,0)
 ;ARRAY VARIABLES:
"RTN","IBTUBOA",11,0)
 ;   IBAVG("BILLS-I")=number of inpatient institutional claims
"RTN","IBTUBOA",12,0)
 ;   IBAVG("BILLS-P")=number of inpatient professional claims
"RTN","IBTUBOA",13,0)
 ;   IBAVG("EPISD-I")=number of inpt. episodes for institutional claims
"RTN","IBTUBOA",14,0)
 ;   IBAVG("EPISD-P")=number of inpt. episodes for professional claims
"RTN","IBTUBOA",15,0)
 ;   IBAVG("$AMNT-I")=inpatient institutional amount billed
"RTN","IBTUBOA",16,0)
 ;   IBAVG("$AMNT-P")=inpatient professional amount billed
"RTN","IBTUBOA",17,0)
 ;
"RTN","IBTUBOA",18,0)
 ;   IBUNB("UNBILTL")=total unbilled amount
"RTN","IBTUBOA",19,0)
 ;   IBUNB("UNBILTL-MRA")=total MRA req amount
"RTN","IBTUBOA",20,0)
 ;
"RTN","IBTUBOA",21,0)
 ;   IBUNB(IBDIV,"ENCNTRS")=number of outpatient encounters missing claims
"RTN","IBTUBOA",22,0)
 ;   IBUNB(IBDIV,"EPISM-I")=number of inpatient episodes missing inst. claims
"RTN","IBTUBOA",23,0)
 ;   IBUNB(IBDIV,"EPISM-I-MRA")=number of MRA req inpat institutional claims
"RTN","IBTUBOA",24,0)
 ;   IBUNB(IBDIV,"EPISM-P")=number of inpatient episodes missing prof. claims
"RTN","IBTUBOA",25,0)
 ;   IBUNB(IBDIV,"EPISM-P-MRA")=number of MRA req inpat professional claims
"RTN","IBTUBOA",26,0)
 ;   IBUNB(IBDIV,"EPISM-A")=number of inpatient admissions missing claims
"RTN","IBTUBOA",27,0)
 ;                   (any type: Prof,Inst or both)
"RTN","IBTUBOA",28,0)
 ;   IBUNB(IBDIV,"EPISM-A-MRA")=number inpt MRA req admissions missing claims
"RTN","IBTUBOA",29,0)
 ;                   (any type: Prof,Inst or both)
"RTN","IBTUBOA",30,0)
 ;   IBUNB(IBDIV,"CPTMS-I")=number of CPT codes missing institutional claims
"RTN","IBTUBOA",31,0)
 ;   IBUNB(IBDIV,"CPTMS-I-MRA")=number of MRA req CPT codes missing inst claims
"RTN","IBTUBOA",32,0)
 ;   IBUNB(IBDIV,"CPTMS-P")=number of CPT codes missing professional claims
"RTN","IBTUBOA",33,0)
 ;   IBUNB(IBDIV,"CPTMS-P-MRA")=number of MRA req CPT codes missing prof claims
"RTN","IBTUBOA",34,0)
 ;   IBUNB(IBDIV,"PRESCRP")=number of unbilled prescriptions
"RTN","IBTUBOA",35,0)
 ;   IBUNB(IBDIV,"PRESCRP-MRA")=number of MRA req prescriptions
"RTN","IBTUBOA",36,0)
 ;   IBUNB(IBDIV,"UNBILIP")=unbilled inpatient amount
"RTN","IBTUBOA",37,0)
 ;   IBUNB(IBDIV,"UNBILIP-MRA")=MRA req inpatient amount
"RTN","IBTUBOA",38,0)
 ;   IBUNB(IBDIV,"UNBILOP")=unbilled outpatient amount
"RTN","IBTUBOA",39,0)
 ;   IBUNB(IBDIV,"UNBILOP-MRA")=MRA req outpatient amount
"RTN","IBTUBOA",40,0)
 ;   IBUNB(IBDIV,"UNBILRX")=unbilled prescription amount
"RTN","IBTUBOA",41,0)
 ;   IBUNB(IBDIV,"UNBILRX-MRA")=MRA req prescription amount
"RTN","IBTUBOA",42,0)
 ; 
"RTN","IBTUBOA",43,0)
 ;ARRAY VARIABLES FOR DM EXTRACT:
"RTN","IBTUBOA",44,0)
 ;   IB(1)=Number of inpatient episodes missing institutional claims
"RTN","IBTUBOA",45,0)
 ;   IB(2)=Amount of inpatient episodes missing institutional claims
"RTN","IBTUBOA",46,0)
 ;   IB(3)=Number of inpatient episodes missing professional claims
"RTN","IBTUBOA",47,0)
 ;   IB(4)=Amount of inpatient episodes missing professional claims
"RTN","IBTUBOA",48,0)
 ;   IB(5)=Number of all inpatient episodes missing claims
"RTN","IBTUBOA",49,0)
 ;   IB(6)=Amount of all inpatient episodes missing claims
"RTN","IBTUBOA",50,0)
 ;   IB(7)=Number of unbilled outpatient encounters prior to 9/1/99
"RTN","IBTUBOA",51,0)
 ;   IB(8)=Amount of unbilled outpatient encounters prior to 9/1/99
"RTN","IBTUBOA",52,0)
 ;   IB(9)=Number of procedures without an institutional charge
"RTN","IBTUBOA",53,0)
 ;   IB(10)=Amount of procedures without an institutional charge
"RTN","IBTUBOA",54,0)
 ;   IB(11)=Number of procedures without a professional charge
"RTN","IBTUBOA",55,0)
 ;   IB(12)=Amount of procedures without a professional charge
"RTN","IBTUBOA",56,0)
 ;   IB(13)=Number of all procedures without a charge
"RTN","IBTUBOA",57,0)
 ;   IB(14)=Number of encounters associated with all procedures without
"RTN","IBTUBOA",58,0)
 ;          a charge
"RTN","IBTUBOA",59,0)
 ;   IB(15)=Number of all encounters missing claims
"RTN","IBTUBOA",60,0)
 ;   IB(16)=Amount of all encounters missing claims
"RTN","IBTUBOA",61,0)
 ;   IB(17)=Number of unbilled prescriptions and refills
"RTN","IBTUBOA",62,0)
 ;   IB(18)=Amount of unbilled prescriptions and refills
"RTN","IBTUBOA",63,0)
 ;   IB(19)=Amount of all unbilled episodes of care
"RTN","IBTUBOA",64,0)
 ;
"RTN","IBTUBOA",65,0)
 N IB,IBAMTI,IBAMTP,IBIAV,IBIA,IBNODE,IBOE,IBPA,IBQUERY,IBRX,IBSAV,IBT
"RTN","IBTUBOA",66,0)
 N IBAMTIM,IBAMTPM,IBTYP,IBX,IBY,DFN,DGPM,I,J
"RTN","IBTUBOA",67,0)
 ;
"RTN","IBTUBOA",68,0)
 K ^TMP($J,"IBTUB-INPT"),^TMP($J,"IBTUB-OPT"),^TMP($J,"IBTUB-RX")
"RTN","IBTUBOA",69,0)
 K ^TMP($J,"IBTUB-INPT_MRA"),^TMP($J,"IBTUB-OPT_MRA"),^TMP($J,"IBTUB-RX_MRA")
"RTN","IBTUBOA",70,0)
 ;
"RTN","IBTUBOA",71,0)
 ; - Initialize DM extract variables, if necessary.
"RTN","IBTUBOA",72,0)
 I $G(IBXTRACT) D E^IBJDE(37,1) F IBX=1:1:19 S IB(IBX)=0
"RTN","IBTUBOA",73,0)
 ;
"RTN","IBTUBOA",74,0)
 ; - Initialize Unbilled Amounts variables.
"RTN","IBTUBOA",75,0)
 S (IBUNB("ENCNTRS"),IBUNB("PRESCRP"),IBUNB("PRESCRP-MRA"))=0
"RTN","IBTUBOA",76,0)
 F IBX="IP","OP","RX","TL" S IBUNB("UNBIL"_IBX)=0,IBUNB("UNBIL"_IBX_"-MRA")=0
"RTN","IBTUBOA",77,0)
 F IBX="I","P" S (IBUNB("EPISM-"_IBX),IBUNB("EPISM-"_IBX_"-MRA"),IBUNB("CPTMS-"_IBX),IBUNB("CPTMS-"_IBX_"-MRA"))=0
"RTN","IBTUBOA",78,0)
 S (IBUNB("EPISM-A"),IBUNB("EPISM-A-MRA"))=0
"RTN","IBTUBOA",79,0)
 ;
"RTN","IBTUBOA",80,0)
 ; - Retrieve the Rate Type code for Reimbursable Insurance
"RTN","IBTUBOA",81,0)
 S IBRT=$S($O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)):$O(^(0)),1:8)
"RTN","IBTUBOA",82,0)
 ;
"RTN","IBTUBOA",83,0)
 ; - If Compile/Store - Checks if the Average Bill Amounts exists for
"RTN","IBTUBOA",84,0)
 ;   IBTIMON. If it does not, calls IBTUBAV to calculate/updated it.
"RTN","IBTUBOA",85,0)
 I $G(IBCOMP) D
"RTN","IBTUBOA",86,0)
 . I $P($G(^IBE(356.19,IBTIMON,1)),"^",14)'="" Q
"RTN","IBTUBOA",87,0)
 . ;
"RTN","IBTUBOA",88,0)
 . ; - DQ^IBTUBAV will kill the variables IBTIMON and IBCOMP - That's why
"RTN","IBTUBOA",89,0)
 . ;   they are being set again after this call.
"RTN","IBTUBOA",90,0)
 . S IBSAV=IBTIMON D DQ^IBTUBAV S IBTIMON=IBSAV,IBCOMP=1
"RTN","IBTUBOA",91,0)
 . Q
"RTN","IBTUBOA",92,0)
 ;
"RTN","IBTUBOA",93,0)
PROC ; - Loops through all the entries in the Claims Tracking file for the
"RTN","IBTUBOA",94,0)
 ;   period selected and calculate the Unbilled Amounts
"RTN","IBTUBOA",95,0)
 S IBDT=IBBDT-.1
"RTN","IBTUBOA",96,0)
 ;
"RTN","IBTUBOA",97,0)
 F  S IBDT=$O(^IBT(356,"D",IBDT)) Q:'IBDT!(IBDT>IBEDT)  D
"RTN","IBTUBOA",98,0)
 . S IBX=0 F  S IBX=$O(^IBT(356,"D",IBDT,IBX)) Q:'IBX  D
"RTN","IBTUBOA",99,0)
 . . S IBNODE=$G(^IBT(356,IBX,0)) Q:IBNODE=""
"RTN","IBTUBOA",100,0)
 . . I $P(IBNODE,U,12) Q  ; Tort-Feasor,Workman's Comp,No-fault Auto Acc.
"RTN","IBTUBOA",101,0)
 . . I $P(IBNODE,U,19) Q  ;  Reason not billable assigned.
"RTN","IBTUBOA",102,0)
 . . I '$P(IBNODE,U,20) Q  ; Inactive.
"RTN","IBTUBOA",103,0)
 . . S DFN=+$P(IBNODE,U,2)
"RTN","IBTUBOA",104,0)
 . . I '$$PTCHK^IBTUBOU(DFN,IBNODE) Q  ; Has a non-veteran eligibility.
"RTN","IBTUBOA",105,0)
 . . I '$$INSURED^IBCNS1(DFN,IBDT) Q  ;  Not insured during care.
"RTN","IBTUBOA",106,0)
 . . I $P(IBNODE,U,5),IBSEL[1,$$COV^IBTUBOU(DFN,IBDT,1) D  Q  ;Inpatient
"RTN","IBTUBOA",107,0)
 . . . S DGPM=+$P(IBNODE,U,5) D INPT^IBTUBO2(DGPM)
"RTN","IBTUBOA",108,0)
 . . I $P(IBNODE,U,4),IBSEL[2,$$COV^IBTUBOU(DFN,IBDT,2) D  Q  ;Outpatient
"RTN","IBTUBOA",109,0)
 . . . S IBOE=+$P(IBNODE,U,4) I $$NCCL^IBTUBOU(IBOE) Q  ; Non-Count Clinic
"RTN","IBTUBOA",110,0)
 . . . D OPT^IBTUBO1(IBOE,.IBQUERY)
"RTN","IBTUBOA",111,0)
 . . I $P(IBNODE,U,8),IBSEL[3,$$COV^IBTUBOU(DFN,IBDT,3) D  Q  ;Prescription
"RTN","IBTUBOA",112,0)
 . . . N IBIFN,IBCSTAT S IBIFN=+$P(IBNODE,U,11)
"RTN","IBTUBOA",113,0)
 . . . I IBIFN S IBCSTAT=$$GET1^DIQ(399,IBIFN_",",.13,"I") Q:$S(IBCSTAT=0:1,IBCSTAT=1:0,IBCSTAT=2:1,IBCSTAT=3:1,IBCSTAT=4:1,IBCSTAT=5:1,IBCSTAT=7:0,1:1)  ;already billed (modified in T9)
"RTN","IBTUBOA",114,0)
 . . . S IBRX=+$P(IBNODE,U,8) D RX^IBTUBO2(IBRX)
"RTN","IBTUBOA",115,0)
 . . ;
"RTN","IBTUBOA",116,0)
 . . ; - Check CT entry event type to get unbilled amounts, if necessary.
"RTN","IBTUBOA",117,0)
 . . S IBTYP=$P($G(^IBE(356.6,+$P(IBNODE,U,18),0)),U,8)
"RTN","IBTUBOA",118,0)
 . . I IBTYP=1,IBSEL[1,$$COV^IBTUBOU(DFN,IBDT,1) D
"RTN","IBTUBOA",119,0)
 . . . D INPT^IBTUBO2(+$O(^DGPM("APTT1",DFN,IBDT,0)))
"RTN","IBTUBOA",120,0)
 . . I IBTYP=2,IBSEL[2,$$COV^IBTUBOU(DFN,IBDT,2) D
"RTN","IBTUBOA",121,0)
 . . . D OPT^IBTUBO1("",.IBQUERY)
"RTN","IBTUBOA",122,0)
 ;
"RTN","IBTUBOA",123,0)
 I $G(IBXTRACT) D XTRACT^IBTUBOU ; Load extract file, if necessary.
"RTN","IBTUBOA",124,0)
 ;
"RTN","IBTUBOA",125,0)
 ; MRD;IB*2.0*516 - Moved code that was here into the new
"RTN","IBTUBOA",126,0)
 ; procedure TOTAL, and tally most of the values up by Division.
"RTN","IBTUBOA",127,0)
 ;
"RTN","IBTUBOA",128,0)
 D TOTAL
"RTN","IBTUBOA",129,0)
 ;
"RTN","IBTUBOA",130,0)
 ; - If Compile/Store - update Unbilled Amounts data on file #356.19
"RTN","IBTUBOA",131,0)
 I $G(IBCOMP) D LD^IBTUBOU(3,IBTIMON)
"RTN","IBTUBOA",132,0)
 ;
"RTN","IBTUBOA",133,0)
PRT ; - Print report(s).
"RTN","IBTUBOA",134,0)
 I $G(IBQUERY) D CLOSE^IBSDU(.IBQUERY)
"RTN","IBTUBOA",135,0)
 D REPORT^IBTUBO3
"RTN","IBTUBOA",136,0)
 ;
"RTN","IBTUBOA",137,0)
END K ^TMP($J,"IBTUB-INPT"),^TMP($J,"IBTUB-OPT"),^TMP($J,"IBTUB-RX")
"RTN","IBTUBOA",138,0)
 K IBDT,IBRT,IBUNB
"RTN","IBTUBOA",139,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBTUBOA",140,0)
 D ^%ZISC K IBTEMON,IBXTRACT,D,D0,DA,DIC,DIE
"RTN","IBTUBOA",141,0)
 Q
"RTN","IBTUBOA",142,0)
 ;
"RTN","IBTUBOA",143,0)
TOTAL ; Determine grand total amounts.
"RTN","IBTUBOA",144,0)
 ;
"RTN","IBTUBOA",145,0)
 ; - Calculate the Amount Inpatient INST. & PROF. Unbilled Amounts,
"RTN","IBTUBOA",146,0)
 ;   based on average amounts of Billed Amounts
"RTN","IBTUBOA",147,0)
 ;
"RTN","IBTUBOA",148,0)
 S IBIAV=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBOA",149,0)
 ;
"RTN","IBTUBOA",150,0)
 S IBAMTI=$P(IBIAV,"^")*$G(IBUNB("EPISM-I")) ; Inst
"RTN","IBTUBOA",151,0)
 S IBAMTIM=$P(IBIAV,"^")*$G(IBUNB("EPISM-I-MRA")) ; Inst
"RTN","IBTUBOA",152,0)
 S IBAMTP=$P(IBIAV,"^",2)*$G(IBUNB("EPISM-P")) ; Prof
"RTN","IBTUBOA",153,0)
 S IBAMTPM=$P(IBIAV,"^",2)*$G(IBUNB("EPISM-P-MRA")) ; Prof
"RTN","IBTUBOA",154,0)
 ;
"RTN","IBTUBOA",155,0)
 S IBUNB("UNBILIP")=IBAMTI+IBAMTP
"RTN","IBTUBOA",156,0)
 S IBUNB("UNBILIP-MRA")=IBAMTIM+IBAMTPM
"RTN","IBTUBOA",157,0)
 ;
"RTN","IBTUBOA",158,0)
 ;S IBUNB("UNBILTL")=IBUNB("UNBILIP")
"RTN","IBTUBOA",159,0)
 ;S IBUNB("UNBILTL-MRA")=IBUNB("UNBILIP-MRA")
"RTN","IBTUBOA",160,0)
 ;
"RTN","IBTUBOA",161,0)
 ; - Calculate Unbilled Amounts Totals by Division
"RTN","IBTUBOA",162,0)
 ;
"RTN","IBTUBOA",163,0)
 S IBDIV=0
"RTN","IBTUBOA",164,0)
 F  S IBDIV=$O(IBUNB(IBDIV)) Q:'IBDIV  D
"RTN","IBTUBOA",165,0)
 . ;
"RTN","IBTUBOA",166,0)
 . S IBAMTI=$P(IBIAV,"^")*$G(IBUNB(IBDIV,"EPISM-I")) ; Inst
"RTN","IBTUBOA",167,0)
 . S IBAMTIM=$P(IBIAV,"^")*$G(IBUNB(IBDIV,"EPISM-I-MRA")) ; Inst
"RTN","IBTUBOA",168,0)
 . S IBAMTP=$P(IBIAV,"^",2)*$G(IBUNB(IBDIV,"EPISM-P")) ; Prof
"RTN","IBTUBOA",169,0)
 . S IBAMTPM=$P(IBIAV,"^",2)*$G(IBUNB(IBDIV,"EPISM-P-MRA")) ; Prof
"RTN","IBTUBOA",170,0)
 . ;
"RTN","IBTUBOA",171,0)
 . S IBUNB(IBDIV,"UNBILIP")=IBAMTI+IBAMTP
"RTN","IBTUBOA",172,0)
 . S IBUNB(IBDIV,"UNBILIP-MRA")=IBAMTIM+IBAMTPM
"RTN","IBTUBOA",173,0)
 . ;
"RTN","IBTUBOA",174,0)
 . S IBUNB("UNBILTL")=$G(IBUNB("UNBILTL"))+$G(IBUNB(IBDIV,"UNBILIP"))+$G(IBUNB(IBDIV,"UNBILOP"))+$G(IBUNB(IBDIV,"UNBILRX"))
"RTN","IBTUBOA",175,0)
 . S IBUNB("UNBILTL-MRA")=$G(IBUNB("UNBILTL-MRA"))+$G(IBUNB(IBDIV,"UNBILIP-MRA"))+$G(IBUNB(IBDIV,"UNBILOP-MRA"))+$G(IBUNB(IBDIV,"UNBILRX-MRA"))
"RTN","IBTUBOA",176,0)
 . ;
"RTN","IBTUBOA",177,0)
 . Q
"RTN","IBTUBOA",178,0)
 ;
"RTN","IBTUBOA",179,0)
 Q
"RTN","IBTUBOA",180,0)
 ;
"RTN","IBTUBUL")
0^148^B72452562^B21781134
"RTN","IBTUBUL",1,0)
IBTUBUL ;ALB/AAS - UNBILLED AMOUNTS ;29-SEP-94
"RTN","IBTUBUL",2,0)
 ;;2.0;INTEGRATED BILLING;**19,123,159,217,155,356,516**;21-MAR-94;Build 123
"RTN","IBTUBUL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBUL",4,0)
 ;
"RTN","IBTUBUL",5,0)
 ; IB*2.0*516 - Added sort by Division.  Because some of the totals
"RTN","IBTUBUL",6,0)
 ; can be done by Division and some cannot, portions of the report
"RTN","IBTUBUL",7,0)
 ; were reorganized.
"RTN","IBTUBUL",8,0)
 ;
"RTN","IBTUBUL",9,0)
TEST ; - Create and send test bulletin.
"RTN","IBTUBUL",10,0)
 N IBBDT,IBEDT,IBSEL,IBTEST
"RTN","IBTUBUL",11,0)
 S IBBDT=DT,IBEDT=DT,IBSEL="1,2,3",IBTEST=1
"RTN","IBTUBUL",12,0)
 D TESTV
"RTN","IBTUBUL",13,0)
 ;
"RTN","IBTUBUL",14,0)
BULL ; - Create and send bulletin.
"RTN","IBTUBUL",15,0)
 ;
"RTN","IBTUBUL",16,0)
 I '$O(IBUNB(0)) Q  ; Quit out if no data.
"RTN","IBTUBUL",17,0)
 ;
"RTN","IBTUBUL",18,0)
 N I,IBDIV,IBGRP,IBT,IBTOTAL,IBX,IDX,X,XMDUZ,XMN,XMSUB,XMTEXT,XMY,XMZ
"RTN","IBTUBUL",19,0)
 S XMSUB="UNBILLED AMOUNTS SUMMARY REPORT"_$S($G(IBTEST):" (TEST)",1:"")
"RTN","IBTUBUL",20,0)
 ;
"RTN","IBTUBUL",21,0)
 D BULL1
"RTN","IBTUBUL",22,0)
 ;
"RTN","IBTUBUL",23,0)
 S IBDIV=0
"RTN","IBTUBUL",24,0)
 F  S IBDIV=$O(IBUNB(IBDIV)) Q:'IBDIV  D BULL2
"RTN","IBTUBUL",25,0)
 ;
"RTN","IBTUBUL",26,0)
 D BULL3,SEND
"RTN","IBTUBUL",27,0)
 ;
"RTN","IBTUBUL",28,0)
 Q
"RTN","IBTUBUL",29,0)
 ;
"RTN","IBTUBUL",30,0)
BULL1 ; Header for entire report.
"RTN","IBTUBUL",31,0)
 ;
"RTN","IBTUBUL",32,0)
 S IDX=1
"RTN","IBTUBUL",33,0)
 S IBX=$P($$SITE^VASITE,U,2,3)
"RTN","IBTUBUL",34,0)
 S IBT(IDX)="SUMMARY UNBILLED AMOUNTS FOR "_$P(IBX,U)_" ("_$P(IBX,U,2)_").",IDX=IDX+1
"RTN","IBTUBUL",35,0)
 S IBT(IDX)="PERIOD: FROM "_$$DAT1^IBOUTL(IBBDT)_" TO "_$$DAT1^IBOUTL(IBEDT),IDX=IDX+1
"RTN","IBTUBUL",36,0)
 ;
"RTN","IBTUBUL",37,0)
 I $G(IBDET) S IBT(IDX)="DETAILED REPORT PRINTED TO '"_IO_"'",IDX=IDX+1
"RTN","IBTUBUL",38,0)
 I $G(IBCOMP) S IBT(IDX)="UNBILLED AMOUNTS FIGURES STORED FOR "_$$DAT2^IBOUTL(IBTIMON),IDX=IDX+1
"RTN","IBTUBUL",39,0)
 ;
"RTN","IBTUBUL",40,0)
 Q
"RTN","IBTUBUL",41,0)
 ;
"RTN","IBTUBUL",42,0)
BULL2 ; Totals for one Division.
"RTN","IBTUBUL",43,0)
 ;
"RTN","IBTUBUL",44,0)
 I IBDIV=999999 S IBDIVHDR="UNKNOWN"
"RTN","IBTUBUL",45,0)
 E  S IBDIVHDR=$$GET1^DIQ(40.8,IBDIV_",",.01)_" ("_$$GET1^DIQ(40.8,IBDIV_",",1)_")"
"RTN","IBTUBUL",46,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",47,0)
 S IBT(IDX)="  DIVISION: "_IBDIVHDR,IDX=IDX+1
"RTN","IBTUBUL",48,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",49,0)
 ;
"RTN","IBTUBUL",50,0)
 I $G(IBTEST) S IBT(IDX)="  *** TEST DATA, TEST DATA ***",IDX=IDX+1
"RTN","IBTUBUL",51,0)
 ;
"RTN","IBTUBUL",52,0)
 I IBSEL[1 D
"RTN","IBTUBUL",53,0)
 . S X=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBUL",54,0)
 . S IBT(IDX+1)="    Inpatient Care:"
"RTN","IBTUBUL",55,0)
 . S IBT(IDX+2)="      Number of Unbilled Inpatient Admissions : "_$J(+$G(IBUNB(IBDIV,"EPISM-A")),11)
"RTN","IBTUBUL",56,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Inpt Admissions  : "_$J(+$G(IBUNB(IBDIV,"EPISM-A-MRA")),11)
"RTN","IBTUBUL",57,0)
 . S IBT(IDX+4)="      Number of Inpt. Institutional Cases     : "_$J(+$G(IBUNB(IBDIV,"EPISM-I")),11)
"RTN","IBTUBUL",58,0)
 . S IBT(IDX+5)="      Average Inpt. Institutional Bill Amount : "_$J($P(X,"^"),11,2)
"RTN","IBTUBUL",59,0)
 . S IBT(IDX+6)="      Number of Inpt. Professional Cases      : "_$J(+$G(IBUNB(IBDIV,"EPISM-P")),11)
"RTN","IBTUBUL",60,0)
 . S IBT(IDX+7)="      Average Inpt. Professional Bill Amount  : "_$J($P(X,"^",2),11,2)
"RTN","IBTUBUL",61,0)
 . S IBT(IDX+8)="      Total Unbilled Inpatient Care           : "_$J($G(IBUNB(IBDIV,"UNBILIP")),11,2)
"RTN","IBTUBUL",62,0)
 . S IBT(IDX+9)="      Total MRA Unbilled Inpatient Care       : "_$J($G(IBUNB(IBDIV,"UNBILIP-MRA")),11,2)
"RTN","IBTUBUL",63,0)
 . S IBT(IDX+10)="",IDX=IDX+10
"RTN","IBTUBUL",64,0)
 . Q
"RTN","IBTUBUL",65,0)
 ;
"RTN","IBTUBUL",66,0)
 I IBSEL[2 D
"RTN","IBTUBUL",67,0)
 . S IBT(IDX+1)="    Outpatient Care:"
"RTN","IBTUBUL",68,0)
 . S IBT(IDX+2)="      Number of Unbilled Outpatient Cases     : "_$J(+$G(IBUNB(IBDIV,"ENCNTRS")),11)
"RTN","IBTUBUL",69,0)
 . S IBT(IDX+3)="      Number of Unbilled CPT Codes            : "_$J(+$G(IBUNB(IBDIV,"CPTMS-I"))+$G(IBUNB(IBDIV,"CPTMS-P")),11)
"RTN","IBTUBUL",70,0)
 . S IBT(IDX+4)="      Number of MRA Unbilled CPT Codes        : "_$J(+$G(IBUNB(IBDIV,"CPTMS-I-MRA"))+$G(IBUNB(IBDIV,"CPTMS-P-MRA")),11)
"RTN","IBTUBUL",71,0)
 . S IBT(IDX+5)="      Total Unbilled Outpatient Care          : "_$J($G(IBUNB(IBDIV,"UNBILOP")),11,2)
"RTN","IBTUBUL",72,0)
 . S IBT(IDX+6)="      Total MRA Unbilled Outpatient Care      : "_$J($G(IBUNB(IBDIV,"UNBILOP-MRA")),11,2)
"RTN","IBTUBUL",73,0)
 . S IBT(IDX+7)="",IDX=IDX+7
"RTN","IBTUBUL",74,0)
 . Q
"RTN","IBTUBUL",75,0)
 ;
"RTN","IBTUBUL",76,0)
 I IBSEL[3 D
"RTN","IBTUBUL",77,0)
 . S IBT(IDX+1)="    Prescriptions:"
"RTN","IBTUBUL",78,0)
 . S IBT(IDX+2)="      Number of Unbilled Prescriptions        : "_$J(+$G(IBUNB(IBDIV,"PRESCRP")),11)
"RTN","IBTUBUL",79,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Prescriptions    : "_$J(+$G(IBUNB(IBDIV,"PRESCRP-MRA")),11)
"RTN","IBTUBUL",80,0)
 . S IBT(IDX+4)="      Total Unbilled Prescriptions            : "_$J($G(IBUNB(IBDIV,"UNBILRX")),11,2)
"RTN","IBTUBUL",81,0)
 . S IBT(IDX+5)="      Total MRA Unbilled Prescriptions        : "_$J($G(IBUNB(IBDIV,"UNBILRX-MRA")),11,2)
"RTN","IBTUBUL",82,0)
 . S IBT(IDX+6)="",IDX=IDX+6
"RTN","IBTUBUL",83,0)
 . Q
"RTN","IBTUBUL",84,0)
 ;
"RTN","IBTUBUL",85,0)
 ; Accumulate grand totals.
"RTN","IBTUBUL",86,0)
 ;
"RTN","IBTUBUL",87,0)
 S IBTOTAL("EPISM-A")=$G(IBTOTAL("EPISM-A"))+$G(IBUNB(IBDIV,"EPISM-A"))
"RTN","IBTUBUL",88,0)
 S IBTOTAL("EPISM-A-MRA")=$G(IBTOTAL("EPISM-A-MRA"))+$G(IBUNB(IBDIV,"EPISM-A-MRA"))
"RTN","IBTUBUL",89,0)
 S IBTOTAL("EPISM-I")=$G(IBTOTAL("EPISM-I"))+$G(IBUNB(IBDIV,"EPISM-I"))
"RTN","IBTUBUL",90,0)
 S IBTOTAL("EPISM-P")=$G(IBTOTAL("EPISM-P"))+$G(IBUNB(IBDIV,"EPISM-P"))
"RTN","IBTUBUL",91,0)
 S IBTOTAL("UNBILIP")=$G(IBTOTAL("UNBILIP"))+$G(IBUNB(IBDIV,"UNBILIP"))
"RTN","IBTUBUL",92,0)
 S IBTOTAL("UNBILIP-MRA")=$G(IBTOTAL("UNBILIP-MRA"))+$G(IBUNB(IBDIV,"UNBILIP-MRA"))
"RTN","IBTUBUL",93,0)
 S IBTOTAL("ENCNTRS")=$G(IBTOTAL("ENCNTRS"))+$G(IBUNB(IBDIV,"ENCNTRS"))
"RTN","IBTUBUL",94,0)
 ;
"RTN","IBTUBUL",95,0)
 S IBTOTAL("CPTMS")=$G(IBTOTAL("CPTMS"))+$G(IBUNB(IBDIV,"CPTMS-I"))+$G(IBUNB(IBDIV,"CPTMS-P"))
"RTN","IBTUBUL",96,0)
 S IBTOTAL("CPTMS-MRA")=$G(IBTOTAL("CPTMS-MRA"))+$G(IBUNB(IBDIV,"CPTMS-I-MRA"))+$G(IBUNB(IBDIV,"CPTMS-P-MRA"))
"RTN","IBTUBUL",97,0)
 ;
"RTN","IBTUBUL",98,0)
 S IBTOTAL("UNBILOP")=$G(IBTOTAL("UNBILOP"))+$G(IBUNB(IBDIV,"UNBILOP"))
"RTN","IBTUBUL",99,0)
 S IBTOTAL("UNBILOP-MRA")=$G(IBTOTAL("UNBILOP-MRA"))+$G(IBUNB(IBDIV,"UNBILOP-MRA"))
"RTN","IBTUBUL",100,0)
 S IBTOTAL("PRESCRP")=$G(IBTOTAL("PRESCRP"))+$G(IBUNB(IBDIV,"PRESCRP"))
"RTN","IBTUBUL",101,0)
 S IBTOTAL("PRESCRP-MRA")=$G(IBTOTAL("PRESCRP-MRA"))+$G(IBUNB(IBDIV,"PRESCRP-MRA"))
"RTN","IBTUBUL",102,0)
 S IBTOTAL("UNBILRX")=$G(IBTOTAL("UNBILRX"))+$G(IBUNB(IBDIV,"UNBILRX"))
"RTN","IBTUBUL",103,0)
 S IBTOTAL("UNBILRX-MRA")=$G(IBTOTAL("UNBILRX-MRA"))+$G(IBUNB(IBDIV,"UNBILRX-MRA"))
"RTN","IBTUBUL",104,0)
 ;
"RTN","IBTUBUL",105,0)
 Q
"RTN","IBTUBUL",106,0)
 ;
"RTN","IBTUBUL",107,0)
BULL3 ; Grand totals across all Divisions and concluding notes.
"RTN","IBTUBUL",108,0)
 ;
"RTN","IBTUBUL",109,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",110,0)
 S IBT(IDX)="  GRAND TOTALS",IDX=IDX+1
"RTN","IBTUBUL",111,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",112,0)
 ;
"RTN","IBTUBUL",113,0)
 I IBSEL[1 D
"RTN","IBTUBUL",114,0)
 . S X=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBUL",115,0)
 . S IBT(IDX+1)="    Inpatient Care:"
"RTN","IBTUBUL",116,0)
 . S IBT(IDX+2)="      Number of Unbilled Inpatient Admissions : "_$J(+$G(IBTOTAL("EPISM-A")),11)
"RTN","IBTUBUL",117,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Inpt Admissions  : "_$J(+$G(IBTOTAL("EPISM-A-MRA")),11)
"RTN","IBTUBUL",118,0)
 . S IBT(IDX+4)="      Number of Inpt. Institutional Cases     : "_$J(+$G(IBTOTAL("EPISM-I")),11)
"RTN","IBTUBUL",119,0)
 . S IBT(IDX+5)="      Average Inpt. Institutional Bill Amount : "_$J($P(X,"^"),11,2)
"RTN","IBTUBUL",120,0)
 . S IBT(IDX+6)="      Number of Inpt. Professional Cases      : "_$J(+$G(IBTOTAL("EPISM-P")),11)
"RTN","IBTUBUL",121,0)
 . S IBT(IDX+7)="      Average Inpt. Professional Bill Amount  : "_$J($P(X,"^",2),11,2)
"RTN","IBTUBUL",122,0)
 . S IBT(IDX+8)="      Total Unbilled Inpatient Care           : "_$J($G(IBTOTAL("UNBILIP")),11,2)
"RTN","IBTUBUL",123,0)
 . S IBT(IDX+9)="      Total MRA Unbilled Inpatient Care       : "_$J($G(IBTOTAL("UNBILIP-MRA")),11,2)
"RTN","IBTUBUL",124,0)
 . S IBT(IDX+10)="",IDX=IDX+10
"RTN","IBTUBUL",125,0)
 . Q
"RTN","IBTUBUL",126,0)
 ;
"RTN","IBTUBUL",127,0)
 I IBSEL[2 D
"RTN","IBTUBUL",128,0)
 . S IBT(IDX+1)="    Outpatient Care:"
"RTN","IBTUBUL",129,0)
 . S IBT(IDX+2)="      Number of Unbilled Outpatient Cases     : "_$J(+$G(IBTOTAL("ENCNTRS")),11)
"RTN","IBTUBUL",130,0)
 . S IBT(IDX+3)="      Number of Unbilled CPT Codes            : "_$J(+$G(IBTOTAL("CPTMS")),11)
"RTN","IBTUBUL",131,0)
 . S IBT(IDX+4)="      Number of MRA Unbilled CPT Codes        : "_$J(+$G(IBTOTAL("CPTMS-MRA")),11)
"RTN","IBTUBUL",132,0)
 . S IBT(IDX+5)="      Total Unbilled Outpatient Care          : "_$J($G(IBTOTAL("UNBILOP")),11,2)
"RTN","IBTUBUL",133,0)
 . S IBT(IDX+6)="      Total MRA Unbilled Outpatient Care      : "_$J($G(IBTOTAL("UNBILOP-MRA")),11,2)
"RTN","IBTUBUL",134,0)
 . S IBT(IDX+7)="",IDX=IDX+7
"RTN","IBTUBUL",135,0)
 . Q
"RTN","IBTUBUL",136,0)
 ;
"RTN","IBTUBUL",137,0)
 I IBSEL[3 D
"RTN","IBTUBUL",138,0)
 . S IBT(IDX+1)="    Prescriptions:"
"RTN","IBTUBUL",139,0)
 . S IBT(IDX+2)="      Number of Unbilled Prescriptions        : "_$J(+$G(IBTOTAL("PRESCRP")),11)
"RTN","IBTUBUL",140,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Prescriptions    : "_$J(+$G(IBTOTAL("PRESCRP-MRA")),11)
"RTN","IBTUBUL",141,0)
 . S IBT(IDX+4)="      Total Unbilled Prescriptions            : "_$J($G(IBTOTAL("UNBILRX")),11,2)
"RTN","IBTUBUL",142,0)
 . S IBT(IDX+5)="      Total MRA Unbilled Prescriptions        : "_$J($G(IBTOTAL("UNBILRX-MRA")),11,2)
"RTN","IBTUBUL",143,0)
 . S IBT(IDX+6)="",IDX=IDX+6
"RTN","IBTUBUL",144,0)
 . Q
"RTN","IBTUBUL",145,0)
 ;
"RTN","IBTUBUL",146,0)
 I IBSEL="1,2,3" D
"RTN","IBTUBUL",147,0)
 . S IBT(IDX+1)="    Total Unbilled Amount (all care)          : "_$J($G(IBUNB("UNBILTL")),11,2)
"RTN","IBTUBUL",148,0)
 . S IBT(IDX+2)="    Total MRA Unbilled Amount (all care)      : "_$J($G(IBUNB("UNBILTL-MRA")),11,2)
"RTN","IBTUBUL",149,0)
 . S IDX(IDX+3)="",IDX=IDX+3
"RTN","IBTUBUL",150,0)
 . Q
"RTN","IBTUBUL",151,0)
 ;
"RTN","IBTUBUL",152,0)
 S IBT(IDX+1)="",IDX=IDX+1
"RTN","IBTUBUL",153,0)
 ;
"RTN","IBTUBUL",154,0)
 I IBSEL[1 D
"RTN","IBTUBUL",155,0)
 . S IBT(IDX+1)="Note:  Average bill Amount is based on Bills Authorized during the 12"
"RTN","IBTUBUL",156,0)
 . S IBT(IDX+2)="       months preceding the month of this report."
"RTN","IBTUBUL",157,0)
 . S IDX=IDX+2
"RTN","IBTUBUL",158,0)
 . Q
"RTN","IBTUBUL",159,0)
 ;
"RTN","IBTUBUL",160,0)
 S IBT(IDX+1)="Note:  Number of cases is insured cases in Claims Tracking that are"
"RTN","IBTUBUL",161,0)
 S IBT(IDX+2)="       not billed (or bill not authorized/req MRA) but appear to be billable."
"RTN","IBTUBUL",162,0)
 ;
"RTN","IBTUBUL",163,0)
 Q
"RTN","IBTUBUL",164,0)
 ;
"RTN","IBTUBUL",165,0)
SEND ; - Send bulletin.
"RTN","IBTUBUL",166,0)
 K XMY
"RTN","IBTUBUL",167,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBTUBUL",168,0)
 S XMN=0,IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,6)),"^",25),0)),"^")
"RTN","IBTUBUL",169,0)
 I $G(IBCOMP),IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBTUBUL",170,0)
 I '$G(IBCOMP) S XMY(DUZ)=""
"RTN","IBTUBUL",171,0)
 D ^XMD
"RTN","IBTUBUL",172,0)
 Q
"RTN","IBTUBUL",173,0)
 ;
"RTN","IBTUBUL",174,0)
TESTV ; - Set up test variables.
"RTN","IBTUBUL",175,0)
 S IBTIMON=9999999
"RTN","IBTUBUL",176,0)
 S IBUNB(999999,"CPTMS-I")=11111
"RTN","IBTUBUL",177,0)
 S IBUNB(999999,"CPTMS-I-MRA")=22222
"RTN","IBTUBUL",178,0)
 S IBUNB(999999,"CPTMS-P")=0
"RTN","IBTUBUL",179,0)
 S IBUNB(999999,"CPTMS-P-MRA")=0
"RTN","IBTUBUL",180,0)
 S IBUNB(999999,"ENCNTRS")=11111
"RTN","IBTUBUL",181,0)
 S IBUNB(999999,"EPISM-A")=11111
"RTN","IBTUBUL",182,0)
 S IBUNB(999999,"EPISM-A-MRA")=22222
"RTN","IBTUBUL",183,0)
 S IBUNB(999999,"EPISM-I")=11111
"RTN","IBTUBUL",184,0)
 S IBUNB(999999,"EPISM-P")=0
"RTN","IBTUBUL",185,0)
 S IBUNB(999999,"PRESCRP")=11111
"RTN","IBTUBUL",186,0)
 S IBUNB(999999,"PRESCRP-MRA")=22222
"RTN","IBTUBUL",187,0)
 S IBUNB(999999,"UNBILIP")=99999.99
"RTN","IBTUBUL",188,0)
 S IBUNB(999999,"UNBILIP-MRA")=77777.77
"RTN","IBTUBUL",189,0)
 S IBUNB(999999,"UNBILOP")=99999.99
"RTN","IBTUBUL",190,0)
 S IBUNB(999999,"UNBILOP-MRA")=77777.77
"RTN","IBTUBUL",191,0)
 S IBUNB(999999,"UNBILRX")=11111
"RTN","IBTUBUL",192,0)
 S IBUNB(999999,"UNBILRX-MRA")=22222
"RTN","IBTUBUL",193,0)
 ;
"RTN","IBTUBUL",194,0)
 S IBUNB("UNBILTL")=99999.99
"RTN","IBTUBUL",195,0)
 S IBUNB("UNBILTL-MRA")=77777.77
"RTN","IBTUBUL",196,0)
 Q
"RTN","IBVCB")
0^35^B123320263^n/a
"RTN","IBVCB",1,0)
IBVCB ;LITS/MRD - VIEW CANCELLED BILL ;25-JUN-14
"RTN","IBVCB",2,0)
 ;;2.0;INTEGRATED BILLING;**516**;21-MAR-94;Build 123
"RTN","IBVCB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBVCB",4,0)
 ;
"RTN","IBVCB",5,0)
 ; The View Cancelled Bill option allows the user to view the values
"RTN","IBVCB",6,0)
 ; of many fields of a cancelled bill.  The user may select a patient,
"RTN","IBVCB",7,0)
 ; and then pick from a list of that patient's cancelled claims, or
"RTN","IBVCB",8,0)
 ; simply enter a claim number.  Claims that do not have a Status of
"RTN","IBVCB",9,0)
 ; 'Cancelled' cannot be selected.
"RTN","IBVCB",10,0)
 ; The user may also select the device to which the report will be
"RTN","IBVCB",11,0)
 ; printed.
"RTN","IBVCB",12,0)
 ; For many of the sections on this report, if there is no data, the
"RTN","IBVCB",13,0)
 ; report will display a message stating 'No Data' rather than print
"RTN","IBVCB",14,0)
 ; the labels without any data following them.
"RTN","IBVCB",15,0)
 ; 
"RTN","IBVCB",16,0)
EN ; Main Entry Point.
"RTN","IBVCB",17,0)
 ;
"RTN","IBVCB",18,0)
 N IBHEADER,IBIFN,IBPAGE,IBQUIT,IBTEXT
"RTN","IBVCB",19,0)
 ;
"RTN","IBVCB",20,0)
EN1 ;
"RTN","IBVCB",21,0)
 ;
"RTN","IBVCB",22,0)
 S IBQUIT=0
"RTN","IBVCB",23,0)
 ;
"RTN","IBVCB",24,0)
 D SELECT I IBQUIT G ENQ
"RTN","IBVCB",25,0)
 ;
"RTN","IBVCB",26,0)
 D DEVICE I IBQUIT G ENQ
"RTN","IBVCB",27,0)
 ;
"RTN","IBVCB",28,0)
 D DISPLAY
"RTN","IBVCB",29,0)
 ;
"RTN","IBVCB",30,0)
 G EN1
"RTN","IBVCB",31,0)
 ;
"RTN","IBVCB",32,0)
ENQ ;
"RTN","IBVCB",33,0)
 ;
"RTN","IBVCB",34,0)
 D ^%ZISC
"RTN","IBVCB",35,0)
 ;
"RTN","IBVCB",36,0)
 Q
"RTN","IBVCB",37,0)
 ;
"RTN","IBVCB",38,0)
SELECT ; Prompt user for patient or bill.
"RTN","IBVCB",39,0)
 ;
"RTN","IBVCB",40,0)
 N DIC,X,Y
"RTN","IBVCB",41,0)
 ;
"RTN","IBVCB",42,0)
 W !
"RTN","IBVCB",43,0)
 S DIC="^DGCR(399,"
"RTN","IBVCB",44,0)
 S DIC(0)="AEMQZ"
"RTN","IBVCB",45,0)
 S DIC("A")="Enter BILL NUMBER or PATIENT NAME: "
"RTN","IBVCB",46,0)
 ; Status of bill must be 7/Cancelled.
"RTN","IBVCB",47,0)
 S DIC("S")="I $P($G(^DGCR(399,Y,0)),U,13)=7"
"RTN","IBVCB",48,0)
 D ^DIC
"RTN","IBVCB",49,0)
 ;
"RTN","IBVCB",50,0)
 I X["^"!(X="") S IBQUIT=1 G SELECTQ
"RTN","IBVCB",51,0)
 ;
"RTN","IBVCB",52,0)
 S IBIFN=$P(Y,U,1)
"RTN","IBVCB",53,0)
 I IBIFN="" S IBQUIT=1
"RTN","IBVCB",54,0)
 ;
"RTN","IBVCB",55,0)
SELECTQ ;
"RTN","IBVCB",56,0)
 Q
"RTN","IBVCB",57,0)
 ;
"RTN","IBVCB",58,0)
DEVICE ; Allow user to select the device.
"RTN","IBVCB",59,0)
 ;
"RTN","IBVCB",60,0)
 S %ZIS=""
"RTN","IBVCB",61,0)
 D ^%ZIS
"RTN","IBVCB",62,0)
 I POP S IBQUIT=1
"RTN","IBVCB",63,0)
 ;
"RTN","IBVCB",64,0)
 Q
"RTN","IBVCB",65,0)
 ;
"RTN","IBVCB",66,0)
DISPLAY ; Display claim information to user.
"RTN","IBVCB",67,0)
 ;
"RTN","IBVCB",68,0)
 D HEADERA
"RTN","IBVCB",69,0)
 ;
"RTN","IBVCB",70,0)
 D PART1 I IBQUIT Q
"RTN","IBVCB",71,0)
 D PART2^IBVCB1 I IBQUIT Q
"RTN","IBVCB",72,0)
 D PART3^IBVCB2
"RTN","IBVCB",73,0)
 ;
"RTN","IBVCB",74,0)
 Q
"RTN","IBVCB",75,0)
 ;
"RTN","IBVCB",76,0)
HEADERA ; Pull header information.
"RTN","IBVCB",77,0)
 ;
"RTN","IBVCB",78,0)
 ; IBHEADER = Patient Name ^ Full SSN ^ Last 4 of SSN.
"RTN","IBVCB",79,0)
 ;
"RTN","IBVCB",80,0)
 S IBHEADER=$$PT^IBEFUNC($$GET1^DIQ(399,IBIFN_",",.02,"I"))
"RTN","IBVCB",81,0)
 S IBPAGE=0
"RTN","IBVCB",82,0)
 ;
"RTN","IBVCB",83,0)
 D HEADERB
"RTN","IBVCB",84,0)
 ;
"RTN","IBVCB",85,0)
 Q
"RTN","IBVCB",86,0)
 ;
"RTN","IBVCB",87,0)
HEADERB ; Print header information.
"RTN","IBVCB",88,0)
 ;
"RTN","IBVCB",89,0)
 S IBPAGE=IBPAGE+1
"RTN","IBVCB",90,0)
 I $E(IOST,1,2)="C-",IBPAGE>1 D CONTINUE
"RTN","IBVCB",91,0)
 W @IOF  ; Print the device-specific form feed sequence.
"RTN","IBVCB",92,0)
 W !,$P(IBHEADER,U,1)
"RTN","IBVCB",93,0)
 I $P(IBHEADER,U,3)'="" W "   "_$E(IBHEADER,1)_$P(IBHEADER,U,3)
"RTN","IBVCB",94,0)
 W ?41,$$GET1^DIQ(399,IBIFN_",",.17,"E")
"RTN","IBVCB",95,0)
 W ?72,"Page ",$J(IBPAGE,2)
"RTN","IBVCB",96,0)
 W !,"==============================================================================="
"RTN","IBVCB",97,0)
 ;
"RTN","IBVCB",98,0)
 Q
"RTN","IBVCB",99,0)
 ;
"RTN","IBVCB",100,0)
CONTINUE ; Enter return to continue.
"RTN","IBVCB",101,0)
 ;
"RTN","IBVCB",102,0)
 W !
"RTN","IBVCB",103,0)
 N DIR
"RTN","IBVCB",104,0)
 S DIR(0)="E"
"RTN","IBVCB",105,0)
 D ^DIR
"RTN","IBVCB",106,0)
 I 'Y S IBQUIT=1
"RTN","IBVCB",107,0)
 W $C(13),"                                                  ",$C(13)
"RTN","IBVCB",108,0)
 Q
"RTN","IBVCB",109,0)
 ;
"RTN","IBVCB",110,0)
LINE(IBTEXT) ; Print the lines of information in the IBTEXT array.
"RTN","IBVCB",111,0)
 ;
"RTN","IBVCB",112,0)
 ; IBTEXT is passed by reference.  The first subscript is an integer
"RTN","IBVCB",113,0)
 ; representing the relative line number (1, 2, 3, etc.).  The second
"RTN","IBVCB",114,0)
 ; subscript will be '1' or '2'.
"RTN","IBVCB",115,0)
 ;     IBTEXT(x,1) = Text to be printed in the 1st column.
"RTN","IBVCB",116,0)
 ;     IBTEXT(x,2) = Text to be printed in the 2nd column, if any.
"RTN","IBVCB",117,0)
 ; The IBTEXT array is Killed off before Quitting out.  This resets
"RTN","IBVCB",118,0)
 ; the array so the rest of the code does not have to.
"RTN","IBVCB",119,0)
 ;
"RTN","IBVCB",120,0)
 N IBX
"RTN","IBVCB",121,0)
 ;
"RTN","IBVCB",122,0)
 ; The number of lines to be printed is found by $O(IBTEXT(""),-1).
"RTN","IBVCB",123,0)
 ; $Y represents the line on the page of the printer or line on the
"RTN","IBVCB",124,0)
 ; screen if printing to a terminal.  If there is not enough space
"RTN","IBVCB",125,0)
 ; remaining on the current page to display the number of lines
"RTN","IBVCB",126,0)
 ; in IBTEXT, then it calls HEADERB, which Writes a form feed and
"RTN","IBVCB",127,0)
 ; prints the header.  $Y is reset to 0 by the statement W @IOF
"RTN","IBVCB",128,0)
 ; in the HEADERB procedure.
"RTN","IBVCB",129,0)
 ;
"RTN","IBVCB",130,0)
 S IBX=$O(IBTEXT(""),-1)  ; How many lines are to be printed.
"RTN","IBVCB",131,0)
 I $Y>(IOSL-(IBX+3)) D HEADERB
"RTN","IBVCB",132,0)
 ;
"RTN","IBVCB",133,0)
 S IBX=""
"RTN","IBVCB",134,0)
 F  S IBX=$O(IBTEXT(IBX)) Q:IBX=""  D
"RTN","IBVCB",135,0)
 . W !
"RTN","IBVCB",136,0)
 . I $D(IBTEXT(IBX,1)) W IBTEXT(IBX,1)
"RTN","IBVCB",137,0)
 . I $D(IBTEXT(IBX,2)) W ?41,IBTEXT(IBX,2)
"RTN","IBVCB",138,0)
 . Q
"RTN","IBVCB",139,0)
 K IBTEXT
"RTN","IBVCB",140,0)
 Q
"RTN","IBVCB",141,0)
 ;
"RTN","IBVCB",142,0)
DOLLAR(X) ; Function to return a formatted dollar amount.
"RTN","IBVCB",143,0)
 ;
"RTN","IBVCB",144,0)
 I $G(X)="" Q ""
"RTN","IBVCB",145,0)
 N X2,X3
"RTN","IBVCB",146,0)
 S X2="2$",X3=0
"RTN","IBVCB",147,0)
 D COMMA^%DTC
"RTN","IBVCB",148,0)
 Q X
"RTN","IBVCB",149,0)
 ;
"RTN","IBVCB",150,0)
PART1 ; General Claim Data, Other Care, Codes.
"RTN","IBVCB",151,0)
 ;
"RTN","IBVCB",152,0)
 N IBBT,IBFIND,IBX
"RTN","IBVCB",153,0)
 ;
"RTN","IBVCB",154,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB",155,0)
 S IBTEXT(2,1)="General Claim Data"
"RTN","IBVCB",156,0)
 S IBTEXT(3,1)="------------------"
"RTN","IBVCB",157,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",158,0)
 ;
"RTN","IBVCB",159,0)
 S IBTEXT(1,1)="Primary Bill: "_$$GET1^DIQ(399,IBIFN_",",.17,"E")
"RTN","IBVCB",160,0)
 S IBTEXT(1,2)="Event Date: "_$$GET1^DIQ(399,IBIFN_",",.03,"E")
"RTN","IBVCB",161,0)
 S IBTEXT(2,1)="Rate Type: "_$$GET1^DIQ(399,IBIFN_",",.07,"E")
"RTN","IBVCB",162,0)
 S IBTEXT(2,2)="Outpt Visit Date: "
"RTN","IBVCB",163,0)
 S IBX=$O(^DGCR(399,IBIFN,"OP",0))
"RTN","IBVCB",164,0)
 I IBX'="" S IBTEXT(2,2)=IBTEXT(2,2)_$$GET1^DIQ(399.043,IBX_","_IBIFN_",",.01,"E")
"RTN","IBVCB",165,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",166,0)
 ; Look for more Outpt Visit Dates.
"RTN","IBVCB",167,0)
 F  S IBX=$O(^DGCR(399,IBIFN,"OP",IBX)) Q:'IBX  D
"RTN","IBVCB",168,0)
 . S IBTEXT(1,2)="Outpt Visit Date: "_$$GET1^DIQ(399.043,IBX_","_IBIFN_",",.01,"E")
"RTN","IBVCB",169,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",170,0)
 . Q
"RTN","IBVCB",171,0)
 ;
"RTN","IBVCB",172,0)
 S IBTEXT(1,1)="Responsible Party: "_$$GET1^DIQ(399,IBIFN_",",.11,"E")
"RTN","IBVCB",173,0)
 S IBTEXT(1,2)="Service Fac. Taxonomy: "_$$GET1^DIQ(399,IBIFN_",",243,"E")
"RTN","IBVCB",174,0)
 S IBTEXT(2,1)="Responsible Institution: "_$$GET1^DIQ(399,IBIFN_",",111,"E")
"RTN","IBVCB",175,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",176,0)
 ;
"RTN","IBVCB",177,0)
 S IBTEXT(1,1)="Timeframe: "_$$GET1^DIQ(399,IBIFN_",",.06,"E")
"RTN","IBVCB",178,0)
 S IBTEXT(1,2)="Default Division: "_$$GET1^DIQ(399,IBIFN_",",.22,"E")
"RTN","IBVCB",179,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",180,0)
 ;
"RTN","IBVCB",181,0)
 S IBTEXT(1,1)="Charge Type: "_$$GET1^DIQ(399,IBIFN_",",.27,"E")
"RTN","IBVCB",182,0)
 S IBTEXT(1,2)="Assignment of Benefits: "_$$GET1^DIQ(399,IBIFN_",",156,"E")
"RTN","IBVCB",183,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",184,0)
 ;
"RTN","IBVCB",185,0)
 S IBTEXT(1,1)="LOC: "_$$GET1^DIQ(399,IBIFN_",",.04,"E")
"RTN","IBVCB",186,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",187,0)
 ;
"RTN","IBVCB",188,0)
 S IBTEXT(1,1)="D/C Status: "_$$GET1^DIQ(399,IBIFN_",",162,"E")
"RTN","IBVCB",189,0)
 S IBTEXT(2,1)="D/C Bedsection: "_$$GET1^DIQ(399,IBIFN_",",161,"E")
"RTN","IBVCB",190,0)
 S IBTEXT(2,2)="Form Type: "_$$GET1^DIQ(399,IBIFN_",",.19,"E")
"RTN","IBVCB",191,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",192,0)
 ;
"RTN","IBVCB",193,0)
 S IBTEXT(1,1)="Bill Classification: "_$$GET1^DIQ(399,IBIFN_",",.05,"E")
"RTN","IBVCB",194,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",195,0)
 ;
"RTN","IBVCB",196,0)
 S IBTEXT(1,1)="Statement From: "_$$GET1^DIQ(399,IBIFN_",",151,"E")
"RTN","IBVCB",197,0)
 S IBTEXT(1,2)="Statement To: "_$$GET1^DIQ(399,IBIFN_",",152,"E")
"RTN","IBVCB",198,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",199,0)
 ;
"RTN","IBVCB",200,0)
 S IBTEXT(1,1)="Sensitive?: "_$$GET1^DIQ(399,IBIFN_",",155,"E")
"RTN","IBVCB",201,0)
 S IBTEXT(1,2)="ROI Complete?: "_$$GET1^DIQ(399,IBIFN_",",157,"E")
"RTN","IBVCB",202,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",203,0)
 ;
"RTN","IBVCB",204,0)
 S IBTEXT(1,1)="Admission Type: "_$$GET1^DIQ(399,IBIFN_",",158,"E")
"RTN","IBVCB",205,0)
 S IBTEXT(1,2)="Admission Source: "_$$GET1^DIQ(399,IBIFN_",",159,"E")
"RTN","IBVCB",206,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",207,0)
 ;
"RTN","IBVCB",208,0)
 S IBTEXT(1,1)="Non-PTF Admission Hr.: "_$$GET1^DIQ(399,IBIFN_",",159.5,"E")
"RTN","IBVCB",209,0)
 S IBTEXT(1,2)="Admitting DX: "_$$GET1^DIQ(399,IBIFN_",",215,"E")
"RTN","IBVCB",210,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",211,0)
 ;
"RTN","IBVCB",212,0)
 S IBTEXT(1,1)="Accident Hr.: "_$$GET1^DIQ(399,IBIFN_",",160,"E")
"RTN","IBVCB",213,0)
 S IBTEXT(1,2)="Co-Insurance Days: "_$$GET1^DIQ(399,IBIFN_",",221,"E")
"RTN","IBVCB",214,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",215,0)
 ;
"RTN","IBVCB",216,0)
 S IBTEXT(1,1)="Covered Days: "_$$GET1^DIQ(399,IBIFN_",",216,"E")
"RTN","IBVCB",217,0)
 S IBTEXT(1,2)="Non-Covered Days: "_$$GET1^DIQ(399,IBIFN_",",217,"E")
"RTN","IBVCB",218,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",219,0)
 ;
"RTN","IBVCB",220,0)
 S IBTEXT(1,1)="Length of Stay: "_$$GET1^DIQ(399,IBIFN_",",165,"E")
"RTN","IBVCB",221,0)
 S IBTEXT(1,2)="PPS: "_$$GET1^DIQ(399,IBIFN_",",170,"E")
"RTN","IBVCB",222,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",223,0)
 ;
"RTN","IBVCB",224,0)
 S IBTEXT(1,1)="Total Charge: "_$$DOLLAR($$GET1^DIQ(399,IBIFN_",",201,"E"))
"RTN","IBVCB",225,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",226,0)
 ;
"RTN","IBVCB",227,0)
 S IBTEXT(1,1)="Unable to Work From: "_$$GET1^DIQ(399,IBIFN_",",166,"E")
"RTN","IBVCB",228,0)
 S IBTEXT(1,2)="Unable to Work To: "_$$GET1^DIQ(399,IBIFN_",",167,"E")
"RTN","IBVCB",229,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",230,0)
 ;
"RTN","IBVCB",231,0)
 S IBTEXT(1,1)="Current Payer Seq.: "_$$GET1^DIQ(399,IBIFN_",",.21,"E")
"RTN","IBVCB",232,0)
 S IBTEXT(1,2)="SC: "_$$GET1^DIQ(399,IBIFN_",",.18,"E")
"RTN","IBVCB",233,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",234,0)
 ;
"RTN","IBVCB",235,0)
 S IBTEXT(1,1)="Status: "_$$GET1^DIQ(399,IBIFN_",",.13,"E")
"RTN","IBVCB",236,0)
 S IBTEXT(1,2)="Status Date: "_$$GET1^DIQ(399,IBIFN_",",.14,"E")
"RTN","IBVCB",237,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",238,0)
 ;
"RTN","IBVCB",239,0)
 S IBTEXT(1,1)="Bill Copied From: "_$$GET1^DIQ(399,IBIFN_",",.15,"E")
"RTN","IBVCB",240,0)
 S IBTEXT(1,2)="PTF Record #: "_$$GET1^DIQ(399,IBIFN_",",.08,"E")
"RTN","IBVCB",241,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",242,0)
 ;
"RTN","IBVCB",243,0)
 S IBTEXT(1,1)="Procedure Coding Method: "_$$GET1^DIQ(399,IBIFN_",",.09,"E")
"RTN","IBVCB",244,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",245,0)
 ;
"RTN","IBVCB",246,0)
 S IBBT=$$GET1^DIQ(399,IBIFN_",",.25,"I")
"RTN","IBVCB",247,0)
 I IBBT'="" S IBBT=$P($G(^DGCR(399.1,IBBT,0)),U,2),IBBT=$$GET1^DIQ(399,IBIFN_",",.24,"I")_IBBT_$$GET1^DIQ(399,IBIFN_",",.26,"I")
"RTN","IBVCB",248,0)
 ;
"RTN","IBVCB",249,0)
 S IBTEXT(1,1)="Bill Type: "_IBBT
"RTN","IBVCB",250,0)
 S IBTEXT(1,2)="Non-VA D/C Date: "_$$GET1^DIQ(399,IBIFN_",",.16,"E")
"RTN","IBVCB",251,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",252,0)
 ;
"RTN","IBVCB",253,0)
 S IBTEXT(1,1)="Mammography No.: "_$$GET1^DIQ(399,IBIFN_",",242,"E")
"RTN","IBVCB",254,0)
 S IBTEXT(1,2)="CLIA No.: "_$$GET1^DIQ(399,IBIFN_",",235,"E")
"RTN","IBVCB",255,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",256,0)
 ;
"RTN","IBVCB",257,0)
 S IBTEXT(1,1)="Special Program Indicator: "_$$GET1^DIQ(399,IBIFN_",",238,"E")
"RTN","IBVCB",258,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",259,0)
 ;
"RTN","IBVCB",260,0)
 S IBTEXT(1,1)="Forced to Print: "_$$GET1^DIQ(399,IBIFN_",",27,"E")
"RTN","IBVCB",261,0)
 S IBTEXT(1,2)="MRA Secondary Forced to Print: "_$$GET1^DIQ(399,IBIFN_",",28,"E")
"RTN","IBVCB",262,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",263,0)
 ;
"RTN","IBVCB",264,0)
 S IBTEXT(1,1)="COB Total Non-Covered Amt: "_$$DOLLAR($$GET1^DIQ(399,IBIFN_",",260,"E"))
"RTN","IBVCB",265,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",266,0)
 ;
"RTN","IBVCB",267,0)
 S IBTEXT(1,1)="Disability Start Date: "_$$GET1^DIQ(399,IBIFN_",",263,"E")
"RTN","IBVCB",268,0)
 S IBTEXT(1,2)="Disability End Date: "_$$GET1^DIQ(399,IBIFN_",",264,"E")
"RTN","IBVCB",269,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",270,0)
 ;
"RTN","IBVCB",271,0)
 S IBTEXT(1,1)="Prim Surgical Proc: "_$$GET1^DIQ(399,IBIFN_",",266,"E")
"RTN","IBVCB",272,0)
 S IBTEXT(1,2)="Sec Surgical Proc: "_$$GET1^DIQ(399,IBIFN_",",267,"E")
"RTN","IBVCB",273,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",274,0)
 ;
"RTN","IBVCB",275,0)
 S IBTEXT(1,1)="Relinquish Care Date: "_$$GET1^DIQ(399,IBIFN_",",283,"E")
"RTN","IBVCB",276,0)
 S IBTEXT(1,2)="Assumed Care Date: "_$$GET1^DIQ(399,IBIFN_",",282,"E")
"RTN","IBVCB",277,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",278,0)
 ;
"RTN","IBVCB",279,0)
 S IBTEXT(1,1)="Attachment Report Type: "_$$GET1^DIQ(399,IBIFN_",",285,"E")
"RTN","IBVCB",280,0)
 S IBTEXT(2,1)="Attachment Report Transmit Method: "_$$GET1^DIQ(399,IBIFN_",",286,"E")
"RTN","IBVCB",281,0)
 S IBTEXT(3,1)="Attachment Control No.: "_$$GET1^DIQ(399,IBIFN_",",284,"E")
"RTN","IBVCB",282,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",283,0)
 ;
"RTN","IBVCB",284,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB",285,0)
 S IBTEXT(2,1)="Other Care"
"RTN","IBVCB",286,0)
 S IBTEXT(3,1)="----------"
"RTN","IBVCB",287,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",288,0)
 ;
"RTN","IBVCB",289,0)
 S IBFIND=0,IBX=0
"RTN","IBVCB",290,0)
 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBVCB",291,0)
 . S IBFIND=1
"RTN","IBVCB",292,0)
 . S IBTEXT(1,1)="Other Care: "_$$GET1^DIQ(399.048,IBX_","_IBIFN_",",.01,"E")
"RTN","IBVCB",293,0)
 . S IBTEXT(2,1)="Other Care Date(s): "_$$GET1^DIQ(399.048,IBX_","_IBIFN_",",.02,"E")_" - "_$$GET1^DIQ(399.048,IBX_","_IBIFN_",",.03,"E")
"RTN","IBVCB",294,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",295,0)
 . Q
"RTN","IBVCB",296,0)
 I 'IBFIND D
"RTN","IBVCB",297,0)
 . S IBTEXT(1,1)="*** No Other Care Data Found ***"
"RTN","IBVCB",298,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",299,0)
 . Q
"RTN","IBVCB",300,0)
 ;
"RTN","IBVCB",301,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB",302,0)
 S IBTEXT(2,1)="Codes"
"RTN","IBVCB",303,0)
 S IBTEXT(3,1)="-----"
"RTN","IBVCB",304,0)
 D LINE(.IBTEXT)
"RTN","IBVCB",305,0)
 ;
"RTN","IBVCB",306,0)
 S IBFIND=0,IBX=0
"RTN","IBVCB",307,0)
 F  S IBX=$O(^DGCR(399,IBIFN,"CC",IBX)) Q:'IBX  D
"RTN","IBVCB",308,0)
 . S IBFIND=1
"RTN","IBVCB",309,0)
 . S IBTEXT(1,1)="Condition Code: "_$$GET1^DIQ(399.04,IBX_","_IBIFN_",",.01,"E")
"RTN","IBVCB",310,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",311,0)
 . Q
"RTN","IBVCB",312,0)
 I 'IBFIND D
"RTN","IBVCB",313,0)
 . S IBTEXT(1,1)="*** No Condition Codes Found ***"
"RTN","IBVCB",314,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",315,0)
 . Q
"RTN","IBVCB",316,0)
 ;
"RTN","IBVCB",317,0)
 S IBFIND=0,IBX=0
"RTN","IBVCB",318,0)
 F  S IBX=$O(^DGCR(399,IBIFN,"OC",IBX)) Q:'IBX  D
"RTN","IBVCB",319,0)
 . S IBFIND=1
"RTN","IBVCB",320,0)
 . S IBTEXT(1,1)="Occurrence Code: "_$$GET1^DIQ(399.041,IBX_","_IBIFN_",",.01,"E")
"RTN","IBVCB",321,0)
 . S IBTEXT(1,2)="Occurrence State: "_$$GET1^DIQ(399.041,IBX_","_IBIFN_",",.03,"E")
"RTN","IBVCB",322,0)
 . S IBTEXT(2,1)="Occ. Date(s): "_$$GET1^DIQ(399.041,IBX_","_IBIFN_",",.02,"E")_" - "_$$GET1^DIQ(399.041,IBX_","_IBIFN_",",.04,"E")
"RTN","IBVCB",323,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",324,0)
 . Q
"RTN","IBVCB",325,0)
 I 'IBFIND D
"RTN","IBVCB",326,0)
 . S IBTEXT(1,1)="*** No Occurrence Codes Found ***"
"RTN","IBVCB",327,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",328,0)
 . Q
"RTN","IBVCB",329,0)
 ;
"RTN","IBVCB",330,0)
 S IBFIND=0,IBX=0
"RTN","IBVCB",331,0)
 F  S IBX=$O(^DGCR(399,IBIFN,"CV",IBX)) Q:'IBX  D
"RTN","IBVCB",332,0)
 . S IBFIND=1
"RTN","IBVCB",333,0)
 . S IBTEXT(1,1)="Value Code: "_$$GET1^DIQ(399.047,IBX_","_IBIFN_",",.01,"E")
"RTN","IBVCB",334,0)
 . S IBTEXT(1,2)="Value: "_$$GET1^DIQ(399.047,IBX_","_IBIFN_",",.02,"E")
"RTN","IBVCB",335,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",336,0)
 . Q
"RTN","IBVCB",337,0)
 I 'IBFIND D
"RTN","IBVCB",338,0)
 . S IBTEXT(1,1)="*** No Value Codes Found ***"
"RTN","IBVCB",339,0)
 . D LINE(.IBTEXT)
"RTN","IBVCB",340,0)
 . Q
"RTN","IBVCB",341,0)
 ;
"RTN","IBVCB",342,0)
 Q
"RTN","IBVCB",343,0)
 ;
"RTN","IBVCB1")
0^36^B135425175^n/a
"RTN","IBVCB1",1,0)
IBVCB1 ;LITS/MRD - VIEW CANCELLED BILL, CONT. ;25-JUN-14
"RTN","IBVCB1",2,0)
 ;;2.0;INTEGRATED BILLING;**516**;21-MAR-94;Build 123
"RTN","IBVCB1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBVCB1",4,0)
 ;
"RTN","IBVCB1",5,0)
PART2 ; Chiropractic Data, Ambulance Data, etc.
"RTN","IBVCB1",6,0)
 ;
"RTN","IBVCB1",7,0)
 N IBADD1,IBADD2,IBCITY,IBCOM1,IBCOM2,IBDOADD,IBFIND,IBPROV,IBPROVID,IBPUADD,IBREVCD,IBROLE,IBROLEX,IBSTATE,IBX,IBX1,IBX2,IBX3,IBX4,IBX5,IBX6,IBZIP
"RTN","IBVCB1",8,0)
 ;
"RTN","IBVCB1",9,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",10,0)
 S IBTEXT(2,1)="Chiropractic Data"
"RTN","IBVCB1",11,0)
 S IBTEXT(3,1)="-----------------"
"RTN","IBVCB1",12,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",13,0)
 ;
"RTN","IBVCB1",14,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",246,"E")
"RTN","IBVCB1",15,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",245,"E")
"RTN","IBVCB1",16,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",247,"E")
"RTN","IBVCB1",17,0)
 S IBX4=$$GET1^DIQ(399,IBIFN_",",248,"E")
"RTN","IBVCB1",18,0)
 I (IBX1_IBX2_IBX3_IBX4)'="" D
"RTN","IBVCB1",19,0)
 . S IBTEXT(1,1)="Initial TX Date: "_IBX1
"RTN","IBVCB1",20,0)
 . S IBTEXT(1,2)="Last XRAY Date: "_IBX2
"RTN","IBVCB1",21,0)
 . S IBTEXT(2,1)="Acute Manifestation Date: "_IBX3
"RTN","IBVCB1",22,0)
 . S IBTEXT(2,2)="Condition Code: "_IBX4
"RTN","IBVCB1",23,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",24,0)
 . Q
"RTN","IBVCB1",25,0)
 E  D
"RTN","IBVCB1",26,0)
 . S IBTEXT(1,1)="*** No Chiropractic Data Found ***"
"RTN","IBVCB1",27,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",28,0)
 . Q
"RTN","IBVCB1",29,0)
 ;
"RTN","IBVCB1",30,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",31,0)
 S IBTEXT(2,1)="Ambulance Data"
"RTN","IBVCB1",32,0)
 S IBTEXT(3,1)="--------------"
"RTN","IBVCB1",33,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",34,0)
 ;
"RTN","IBVCB1",35,0)
 S IBADD1=$$GET1^DIQ(399,IBIFN_",",271,"E")
"RTN","IBVCB1",36,0)
 S IBADD2=$$GET1^DIQ(399,IBIFN_",",272,"E")
"RTN","IBVCB1",37,0)
 S IBCITY=$$GET1^DIQ(399,IBIFN_",",273,"E")
"RTN","IBVCB1",38,0)
 S IBSTATE=$$GET1^DIQ(399,IBIFN_",",274,"E")
"RTN","IBVCB1",39,0)
 S IBZIP=$$GET1^DIQ(399,IBIFN_",",275,"E")
"RTN","IBVCB1",40,0)
 S IBPUADD=IBADD1_" "_IBADD2_" "_IBCITY_" "_IBSTATE_" "_IBZIP
"RTN","IBVCB1",41,0)
 ;
"RTN","IBVCB1",42,0)
 S IBTEXT(1,1)="D/O Location: "_$$GET1^DIQ(399,IBIFN_",",276,"E")
"RTN","IBVCB1",43,0)
 S IBADD1=$$GET1^DIQ(399,IBIFN_",",277,"E")
"RTN","IBVCB1",44,0)
 S IBADD2=$$GET1^DIQ(399,IBIFN_",",278,"E")
"RTN","IBVCB1",45,0)
 S IBCITY=$$GET1^DIQ(399,IBIFN_",",279,"E")
"RTN","IBVCB1",46,0)
 S IBSTATE=$$GET1^DIQ(399,IBIFN_",",280,"E")
"RTN","IBVCB1",47,0)
 S IBZIP=$$GET1^DIQ(399,IBIFN_",",281,"E")
"RTN","IBVCB1",48,0)
 S IBDOADD=IBADD1_" "_IBADD2_" "_IBCITY_" "_IBSTATE_" "_IBZIP
"RTN","IBVCB1",49,0)
 ;
"RTN","IBVCB1",50,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",287,"E")
"RTN","IBVCB1",51,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",289,"E")
"RTN","IBVCB1",52,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",288,"E")
"RTN","IBVCB1",53,0)
 S IBX4=$$GET1^DIQ(399,IBIFN_",",290,"E")
"RTN","IBVCB1",54,0)
 S IBX5=$$GET1^DIQ(399,IBIFN_",",291,"E")
"RTN","IBVCB1",55,0)
 ;
"RTN","IBVCB1",56,0)
 I (IBPUADD_IBDOADD_IBX1_IBX2_IBX3_IBX4_IBX5)'="" D
"RTN","IBVCB1",57,0)
 . S IBTEXT(1,1)="P/U Address: "_IBPUADD
"RTN","IBVCB1",58,0)
 . S IBTEXT(2,1)="D/O Address: "_IBDOADD
"RTN","IBVCB1",59,0)
 . S IBTEXT(3,1)="Pt. Weight: "_IBX1
"RTN","IBVCB1",60,0)
 . S IBTEXT(3,2)="Transport Distance: "_IBX2
"RTN","IBVCB1",61,0)
 . S IBTEXT(4,1)="Transport Reason: "_IBX3
"RTN","IBVCB1",62,0)
 . S IBTEXT(5,1)="R/T Purpose: "_IBX4
"RTN","IBVCB1",63,0)
 . S IBTEXT(6,1)="Stretcher Purpose: "_IBX5
"RTN","IBVCB1",64,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",65,0)
 . Q
"RTN","IBVCB1",66,0)
 E  D
"RTN","IBVCB1",67,0)
 . S IBTEXT(1,1)="*** No Ambulance Data Found ***"
"RTN","IBVCB1",68,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",69,0)
 . Q
"RTN","IBVCB1",70,0)
 ;
"RTN","IBVCB1",71,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",72,0)
 S IBTEXT(2,1)="Ambulance Conditions"
"RTN","IBVCB1",73,0)
 S IBTEXT(3,1)="--------------------"
"RTN","IBVCB1",74,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",75,0)
 ;
"RTN","IBVCB1",76,0)
 S IBFIND=0,IBX=0
"RTN","IBVCB1",77,0)
 F  S IBX=$O(^DGCR(399,IBIFN,"U9",IBX)) Q:'IBX  D
"RTN","IBVCB1",78,0)
 . S IBFIND=1
"RTN","IBVCB1",79,0)
 . S IBTEXT(1,1)="Ambulance Condition: "_$$GET1^DIQ(399.0292,IBX_","_IBIFN_",",.01,"E")
"RTN","IBVCB1",80,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",81,0)
 . Q
"RTN","IBVCB1",82,0)
 I 'IBFIND D
"RTN","IBVCB1",83,0)
 . S IBTEXT(2,1)="*** No Ambulance Conditions Found ***"
"RTN","IBVCB1",84,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",85,0)
 . Q
"RTN","IBVCB1",86,0)
 ;
"RTN","IBVCB1",87,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",88,0)
 S IBTEXT(2,1)="Property & Casualty Data"
"RTN","IBVCB1",89,0)
 S IBTEXT(3,1)="------------------------"
"RTN","IBVCB1",90,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",91,0)
 ;
"RTN","IBVCB1",92,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",261,"E")
"RTN","IBVCB1",93,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",262,"E")
"RTN","IBVCB1",94,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",268,"E")
"RTN","IBVCB1",95,0)
 S IBX4=$$GET1^DIQ(399,IBIFN_",",269,"E")
"RTN","IBVCB1",96,0)
 S IBX5=$$GET1^DIQ(399,IBIFN_",",269.1,"E")
"RTN","IBVCB1",97,0)
 ;
"RTN","IBVCB1",98,0)
 I (IBX1_IBX2_IBX3_IBX4)'="" D
"RTN","IBVCB1",99,0)
 . S IBTEXT(1,1)="Claim Number: "_IBX1
"RTN","IBVCB1",100,0)
 . S IBTEXT(1,2)="Date First Contact: "_IBX2
"RTN","IBVCB1",101,0)
 . S IBTEXT(2,1)="Contact Name: "_IBX3
"RTN","IBVCB1",102,0)
 . S IBTEXT(2,2)="Communication No.: "_IBX4_$S(IBX5'="":" Ext."_IBX5,1:"")
"RTN","IBVCB1",103,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",104,0)
 . Q
"RTN","IBVCB1",105,0)
 E  D
"RTN","IBVCB1",106,0)
 . S IBTEXT(1,1)="*** No Property & Casualty Data Found ***"
"RTN","IBVCB1",107,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",108,0)
 . Q
"RTN","IBVCB1",109,0)
 ;
"RTN","IBVCB1",110,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",111,0)
 S IBTEXT(2,1)="Claim Level Providers"
"RTN","IBVCB1",112,0)
 S IBTEXT(3,1)="---------------------"
"RTN","IBVCB1",113,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",114,0)
 ;
"RTN","IBVCB1",115,0)
 S IBFIND=0
"RTN","IBVCB1",116,0)
 F IBROLE=4,3,2,9,1,5 D
"RTN","IBVCB1",117,0)
 . S IBROLEX=$S(IBROLE=1:"Referring",IBROLE=2:"Operating",IBROLE=3:"Rendering",IBROLE=4:"Attending",IBROLE=5:"Supervising",IBROLE=9:"Other Oper.",1:"")
"RTN","IBVCB1",118,0)
 . S IBPROV=0
"RTN","IBVCB1",119,0)
 . F  S IBPROV=$O(^DGCR(399,IBIFN,"PRV",IBPROV)) Q:'IBPROV  D
"RTN","IBVCB1",120,0)
 . . I IBROLE'=$P(^DGCR(399,IBIFN,"PRV",IBPROV,0),U) Q
"RTN","IBVCB1",121,0)
 . . S IBFIND=1
"RTN","IBVCB1",122,0)
 . . ;
"RTN","IBVCB1",123,0)
 . . S IBTEXT(1,1)=IBROLEX_": "_$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.02,"E")
"RTN","IBVCB1",124,0)
 . . S IBTEXT(1,2)="Credentials: "_$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.03,"E")
"RTN","IBVCB1",125,0)
 . . S IBTEXT(2,1)="Specialty: "_$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.08,"E")
"RTN","IBVCB1",126,0)
 . . S IBTEXT(2,2)="Taxonomy: "_$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.15,"E")
"RTN","IBVCB1",127,0)
 . . ;
"RTN","IBVCB1",128,0)
 . . S IBPROVID=$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.12,"E")_"/"_$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.05,"E")
"RTN","IBVCB1",129,0)
 . . S IBTEXT(3,1)="Prim Payer Qual/ID: "_IBPROVID
"RTN","IBVCB1",130,0)
 . . S IBPROVID=$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.13,"E")_"/"_$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.06,"E")
"RTN","IBVCB1",131,0)
 . . S IBTEXT(3,2)="Sec Payer Qual/ID: "_IBPROVID
"RTN","IBVCB1",132,0)
 . . S IBPROVID=$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.14,"E")_"/"_$$GET1^DIQ(399.0222,IBPROV_","_IBIFN_",",.07,"E")
"RTN","IBVCB1",133,0)
 . . S IBTEXT(4,1)="Tert Payer Qual/ID: "_IBPROVID
"RTN","IBVCB1",134,0)
 . . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",135,0)
 . . ;
"RTN","IBVCB1",136,0)
 . . Q
"RTN","IBVCB1",137,0)
 . Q
"RTN","IBVCB1",138,0)
 I 'IBFIND D
"RTN","IBVCB1",139,0)
 . S IBTEXT(5,1)="*** No Claim Level Providers Found ***"
"RTN","IBVCB1",140,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",141,0)
 . Q
"RTN","IBVCB1",142,0)
 ;
"RTN","IBVCB1",143,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",144,0)
 S IBTEXT(2,1)="Non-VA Facility Data - Fee"
"RTN","IBVCB1",145,0)
 S IBTEXT(3,1)="--------------------------"
"RTN","IBVCB1",146,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",147,0)
 ;
"RTN","IBVCB1",148,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",232,"E")
"RTN","IBVCB1",149,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",233,"E")
"RTN","IBVCB1",150,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",234,"E")
"RTN","IBVCB1",151,0)
 S IBX4=$$GET1^DIQ(399,IBIFN_",",244,"E")
"RTN","IBVCB1",152,0)
 I (IBX1_IBX2_IBX3_IBX4)'="" D
"RTN","IBVCB1",153,0)
 . S IBTEXT(1,1)="Facility: "_IBX1
"RTN","IBVCB1",154,0)
 . S IBTEXT(1,2)="Care Type: "_IBX2
"RTN","IBVCB1",155,0)
 . S IBTEXT(2,1)="Non-VA ID: "_IBX3
"RTN","IBVCB1",156,0)
 . S IBTEXT(2,2)="Taxonomy: "_IBX4
"RTN","IBVCB1",157,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",158,0)
 . Q
"RTN","IBVCB1",159,0)
 E  D
"RTN","IBVCB1",160,0)
 . S IBTEXT(1,1)="*** No Non-VA Facility Data Found ***"
"RTN","IBVCB1",161,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",162,0)
 . Q
"RTN","IBVCB1",163,0)
 ;
"RTN","IBVCB1",164,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",165,0)
 S IBTEXT(2,1)="Comments/Signature Block"
"RTN","IBVCB1",166,0)
 S IBTEXT(3,1)="------------------------"
"RTN","IBVCB1",167,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",168,0)
 ;
"RTN","IBVCB1",169,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",400,"E")
"RTN","IBVCB1",170,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",459,"E")
"RTN","IBVCB1",171,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",402,"E")
"RTN","IBVCB1",172,0)
 I (IBX1_IBX2_IBX3)'="" D
"RTN","IBVCB1",173,0)
 . S IBTEXT(1,1)="Box 31 (CMS1500): "_IBX1
"RTN","IBVCB1",174,0)
 . S IBTEXT(2,1)="Box 19 (CMS1500): "_IBX2
"RTN","IBVCB1",175,0)
 . S IBTEXT(3,1)="FL 80 (UB04): "_IBX3
"RTN","IBVCB1",176,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",177,0)
 . Q
"RTN","IBVCB1",178,0)
 E  D
"RTN","IBVCB1",179,0)
 . S IBTEXT(1,1)="*** No Comments/Signature Block Data Found ***"
"RTN","IBVCB1",180,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",181,0)
 . Q
"RTN","IBVCB1",182,0)
 ;
"RTN","IBVCB1",183,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",184,0)
 S IBTEXT(2,1)="ECME Data"
"RTN","IBVCB1",185,0)
 S IBTEXT(3,1)="---------"
"RTN","IBVCB1",186,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",187,0)
 ;
"RTN","IBVCB1",188,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",460,"E")
"RTN","IBVCB1",189,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",461,"E")
"RTN","IBVCB1",190,0)
 I (IBX1_IBX2)'="" D
"RTN","IBVCB1",191,0)
 . S IBTEXT(1,1)="ECME Number: "_IBX1
"RTN","IBVCB1",192,0)
 . S IBTEXT(1,2)="ECME Approval: "_IBX2
"RTN","IBVCB1",193,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",194,0)
 . Q
"RTN","IBVCB1",195,0)
 E  D
"RTN","IBVCB1",196,0)
 . S IBTEXT(1,1)="*** No ECME Data Found ***"
"RTN","IBVCB1",197,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",198,0)
 . Q
"RTN","IBVCB1",199,0)
 ;
"RTN","IBVCB1",200,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",201,0)
 S IBTEXT(2,1)="EOB/MRA Data"
"RTN","IBVCB1",202,0)
 S IBTEXT(3,1)="------------"
"RTN","IBVCB1",203,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",204,0)
 ;
"RTN","IBVCB1",205,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",22,"E")
"RTN","IBVCB1",206,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",24,"E")
"RTN","IBVCB1",207,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",453,"E")
"RTN","IBVCB1",208,0)
 S IBX4=$$GET1^DIQ(399,IBIFN_",",454,"E")
"RTN","IBVCB1",209,0)
 S IBX5=$$GET1^DIQ(399,IBIFN_",",455,"E")
"RTN","IBVCB1",210,0)
 I (IBX1_IBX2_IBX3_IBX4_IBX5)'="" D
"RTN","IBVCB1",211,0)
 . S IBTEXT(1,1)="Date MRA Received: "_IBX1
"RTN","IBVCB1",212,0)
 . S IBTEXT(1,2)="MRA Status: "_IBX2
"RTN","IBVCB1",213,0)
 . S IBTEXT(2,1)="Primary ICN: "_IBX3
"RTN","IBVCB1",214,0)
 . S IBTEXT(2,2)="Secondary ICN: "_IBX4
"RTN","IBVCB1",215,0)
 . S IBTEXT(3,1)="Tertiary ICN: "_IBX5
"RTN","IBVCB1",216,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",217,0)
 . Q
"RTN","IBVCB1",218,0)
 E  D
"RTN","IBVCB1",219,0)
 . S IBTEXT(1,1)="*** No EOB/MRA Data Found ***"
"RTN","IBVCB1",220,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",221,0)
 . Q
"RTN","IBVCB1",222,0)
 ;
"RTN","IBVCB1",223,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",224,0)
 S IBTEXT(2,1)="PRV Diagnosis Codes"
"RTN","IBVCB1",225,0)
 S IBTEXT(3,1)="-------------------"
"RTN","IBVCB1",226,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",227,0)
 ;
"RTN","IBVCB1",228,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",249,"E")
"RTN","IBVCB1",229,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",250,"E")
"RTN","IBVCB1",230,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",251,"E")
"RTN","IBVCB1",231,0)
 I (IBX1_IBX2_IBX3)'="" D
"RTN","IBVCB1",232,0)
 . S IBTEXT(1,1)="PRV #1: "_IBX1
"RTN","IBVCB1",233,0)
 . S IBTEXT(1,2)="PRV #2: "_IBX2
"RTN","IBVCB1",234,0)
 . S IBTEXT(2,1)="PRV #3: "_IBX3
"RTN","IBVCB1",235,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",236,0)
 . Q
"RTN","IBVCB1",237,0)
 E  D
"RTN","IBVCB1",238,0)
 . S IBTEXT(1,1)="*** No PRV Diagnosis Code Found ***"
"RTN","IBVCB1",239,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",240,0)
 . Q
"RTN","IBVCB1",241,0)
 ;
"RTN","IBVCB1",242,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",243,0)
 S IBTEXT(2,1)="Comments"
"RTN","IBVCB1",244,0)
 S IBTEXT(3,1)="--------"
"RTN","IBVCB1",245,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",246,0)
 ;
"RTN","IBVCB1",247,0)
 S IBFIND=0,IBCOM1=0
"RTN","IBVCB1",248,0)
 F  S IBCOM1=$O(^DGCR(399,IBIFN,"TXC",IBCOM1)) Q:'IBCOM1  D
"RTN","IBVCB1",249,0)
 . S IBCOM2=0
"RTN","IBVCB1",250,0)
 . F  S IBCOM2=$O(^DGCR(399,IBIFN,"TXC",IBCOM1,1,IBCOM2)) Q:'IBCOM2  D
"RTN","IBVCB1",251,0)
 . . S IBFIND=1
"RTN","IBVCB1",252,0)
 . . S IBTEXT(1,1)="MRA WL Comments: "_$$GET1^DIQ(399.0771,IBCOM2_","_IBCOM1_","_IBIFN_",",.01,"E")
"RTN","IBVCB1",253,0)
 . . S IBTEXT(2,1)="MRA WL Comments Date: "_$$GET1^DIQ(399.077,IBCOM1_","_IBIFN_",",.01,"E")
"RTN","IBVCB1",254,0)
 . . S IBTEXT(2,2)="Entered By: "_$$GET1^DIQ(399.077,IBCOM1_","_IBIFN_",",.02,"E")
"RTN","IBVCB1",255,0)
 . . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",256,0)
 . . Q
"RTN","IBVCB1",257,0)
 . Q
"RTN","IBVCB1",258,0)
 I 'IBFIND D
"RTN","IBVCB1",259,0)
 . S IBTEXT(1,1)="*** No MRA WL Comments Found ***"
"RTN","IBVCB1",260,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",261,0)
 . Q
"RTN","IBVCB1",262,0)
 ;
"RTN","IBVCB1",263,0)
 S IBFIND=0,IBCOM1=0
"RTN","IBVCB1",264,0)
 F  S IBCOM1=$O(^DGCR(399,IBIFN,"TXC2",IBCOM1)) Q:'IBCOM1  D
"RTN","IBVCB1",265,0)
 . S IBCOM2=0
"RTN","IBVCB1",266,0)
 . F  S IBCOM2=$O(^DGCR(399,IBIFN,"TXC2",IBCOM1,1,IBCOM2)) Q:'IBCOM2  D
"RTN","IBVCB1",267,0)
 . . S IBFIND=1
"RTN","IBVCB1",268,0)
 . . S IBTEXT(1,1)="COB WL Comments: "_$$GET1^DIQ(399.0781,IBCOM2_","_IBCOM1_","_IBIFN_",",.01,"E")
"RTN","IBVCB1",269,0)
 . . S IBTEXT(2,1)="COB WL Comments Date: "_$$GET1^DIQ(399.078,IBCOM1_","_IBIFN_",",.01,"E")
"RTN","IBVCB1",270,0)
 . . S IBTEXT(2,2)="Entered By: "_$$GET1^DIQ(399.078,IBCOM1_","_IBIFN_",",.02,"E")
"RTN","IBVCB1",271,0)
 . . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",272,0)
 . . Q
"RTN","IBVCB1",273,0)
 . Q
"RTN","IBVCB1",274,0)
 I 'IBFIND D
"RTN","IBVCB1",275,0)
 . S IBTEXT(1,1)="*** No COB WL Comments Found ***"
"RTN","IBVCB1",276,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",277,0)
 . Q
"RTN","IBVCB1",278,0)
 ;
"RTN","IBVCB1",279,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",280,0)
 S IBTEXT(2,1)="Referral/Authorization Code"
"RTN","IBVCB1",281,0)
 S IBTEXT(3,1)="---------------------------"
"RTN","IBVCB1",282,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",283,0)
 ;
"RTN","IBVCB1",284,0)
 S IBX1=$$GET1^DIQ(399,IBIFN_",",163,"E")
"RTN","IBVCB1",285,0)
 S IBX2=$$GET1^DIQ(399,IBIFN_",",230,"E")
"RTN","IBVCB1",286,0)
 S IBX3=$$GET1^DIQ(399,IBIFN_",",231,"E")
"RTN","IBVCB1",287,0)
 S IBX4=$$GET1^DIQ(399,IBIFN_",",253,"E")
"RTN","IBVCB1",288,0)
 S IBX5=$$GET1^DIQ(399,IBIFN_",",254,"E")
"RTN","IBVCB1",289,0)
 S IBX6=$$GET1^DIQ(399,IBIFN_",",255,"E")
"RTN","IBVCB1",290,0)
 I (IBX1_IBX2_IBX3_IBX4_IBX5_IBX6)'="" D
"RTN","IBVCB1",291,0)
 . S IBTEXT(1,1)="A/Primary: "_IBX1
"RTN","IBVCB1",292,0)
 . S IBTEXT(1,2)="A/Secondary: "_IBX2
"RTN","IBVCB1",293,0)
 . S IBTEXT(2,1)="A/Tertiary: "_IBX3
"RTN","IBVCB1",294,0)
 . S IBTEXT(2,2)="R/Primary: "_IBX4
"RTN","IBVCB1",295,0)
 . S IBTEXT(3,1)="R/Secondary: "_IBX5
"RTN","IBVCB1",296,0)
 . S IBTEXT(3,2)="R/Tertiary: "_IBX6
"RTN","IBVCB1",297,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",298,0)
 . Q
"RTN","IBVCB1",299,0)
 E  D
"RTN","IBVCB1",300,0)
 . S IBTEXT(1,1)="*** No Referral/Authorization Code Data Found ***"
"RTN","IBVCB1",301,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",302,0)
 . Q
"RTN","IBVCB1",303,0)
 ;
"RTN","IBVCB1",304,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB1",305,0)
 S IBTEXT(2,1)="Revenue Codes"
"RTN","IBVCB1",306,0)
 S IBTEXT(3,1)="-------------"
"RTN","IBVCB1",307,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",308,0)
 ;
"RTN","IBVCB1",309,0)
 S IBFIND=0,IBREVCD=0
"RTN","IBVCB1",310,0)
 F  S IBREVCD=$O(^DGCR(399,IBIFN,"RC",IBREVCD)) Q:'IBREVCD  D
"RTN","IBVCB1",311,0)
 . ; Print a blank line if this is not the first revenue code.
"RTN","IBVCB1",312,0)
 . I IBFIND S IBTEXT(1,1)="" D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",313,0)
 . S IBFIND=1
"RTN","IBVCB1",314,0)
 . S IBTEXT(1,1)="Code: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.01,"E")
"RTN","IBVCB1",315,0)
 . S IBTEXT(1,2)="Number: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.001,"E")
"RTN","IBVCB1",316,0)
 . ;
"RTN","IBVCB1",317,0)
 . S IBTEXT(2,1)="Charges: "_$$DOLLAR^IBVCB($$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.02,"E"))
"RTN","IBVCB1",318,0)
 . S IBTEXT(2,2)="Units: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.03,"E")
"RTN","IBVCB1",319,0)
 . ;
"RTN","IBVCB1",320,0)
 . S IBTEXT(3,1)="Total Charges: "_$$DOLLAR^IBVCB($$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.04,"E"))
"RTN","IBVCB1",321,0)
 . S IBTEXT(3,2)="Bedsection: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.05,"E")
"RTN","IBVCB1",322,0)
 . ;
"RTN","IBVCB1",323,0)
 . S IBTEXT(4,1)="Procedure: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.06,"E")
"RTN","IBVCB1",324,0)
 . S IBTEXT(4,2)="RX Procedure: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.15,"E")
"RTN","IBVCB1",325,0)
 . ;
"RTN","IBVCB1",326,0)
 . S IBTEXT(5,1)="Division: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.07,"E")
"RTN","IBVCB1",327,0)
 . S IBTEXT(5,2)="Type: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.1,"E")
"RTN","IBVCB1",328,0)
 . ;
"RTN","IBVCB1",329,0)
 . S IBTEXT(6,1)="Non-covered Charges: "_$$DOLLAR^IBVCB($$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.09,"E"))
"RTN","IBVCB1",330,0)
 . S IBTEXT(6,2)="Component: "_$$GET1^DIQ(399.042,IBREVCD_","_IBIFN_",",.12,"E")
"RTN","IBVCB1",331,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",332,0)
 . ;
"RTN","IBVCB1",333,0)
 . Q
"RTN","IBVCB1",334,0)
 I 'IBFIND D
"RTN","IBVCB1",335,0)
 . S IBTEXT(1,1)="*** No Revenue Codes Found ***"
"RTN","IBVCB1",336,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB1",337,0)
 . Q
"RTN","IBVCB1",338,0)
 ;
"RTN","IBVCB1",339,0)
 Q
"RTN","IBVCB1",340,0)
 ;
"RTN","IBVCB2")
0^133^B110047132^n/a
"RTN","IBVCB2",1,0)
IBVCB2 ;LITS/MRD - VIEW CANCELLED BILL, CONT. ;25-JUN-14
"RTN","IBVCB2",2,0)
 ;;2.0;INTEGRATED BILLING;**516**;21-MAR-94;Build 123
"RTN","IBVCB2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBVCB2",4,0)
 ;
"RTN","IBVCB2",5,0)
PART3 ; User Data, Payment & Claim History, Insurance, etc.
"RTN","IBVCB2",6,0)
 ;
"RTN","IBVCB2",7,0)
 N IBADD1,IBADD2,IBADDTOT,IBDISAPP,IBCITY,IBFIND,IBFIND2,IBLINE,IBNAME,IBPROV,IBPROVID,IBRETURN,IBROLE,IBROLEX,IBSTATE,IBX,IBZIP
"RTN","IBVCB2",8,0)
 ;
"RTN","IBVCB2",9,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB2",10,0)
 S IBTEXT(2,1)="Procedure Codes (Line Level Data)"
"RTN","IBVCB2",11,0)
 S IBTEXT(3,1)="---------------------------------"
"RTN","IBVCB2",12,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",13,0)
 ;
"RTN","IBVCB2",14,0)
 S IBFIND=0,IBLINE=0
"RTN","IBVCB2",15,0)
 F  S IBLINE=$O(^DGCR(399,IBIFN,"CP",IBLINE)) Q:'IBLINE  D
"RTN","IBVCB2",16,0)
 . ; Print a blank line if this is not the first procedure.
"RTN","IBVCB2",17,0)
 . I IBFIND S IBTEXT(1,1)="" D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",18,0)
 . S IBFIND=1
"RTN","IBVCB2",19,0)
 . ;
"RTN","IBVCB2",20,0)
 . S IBTEXT(1,1)="Procedure: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",.01,"E")
"RTN","IBVCB2",21,0)
 . S IBTEXT(1,2)="Date: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",1,"E")
"RTN","IBVCB2",22,0)
 . S IBX=$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",51,"E")
"RTN","IBVCB2",23,0)
 . I IBX'="" S IBTEXT(2,1)="NOC Description: "_IBX
"RTN","IBVCB2",24,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",25,0)
 . ;
"RTN","IBVCB2",26,0)
 . S IBTEXT(1,1)="Print Order: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",3,"E")
"RTN","IBVCB2",27,0)
 . S IBTEXT(1,2)="Division: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",5,"E")
"RTN","IBVCB2",28,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",29,0)
 . ;
"RTN","IBVCB2",30,0)
 . S IBTEXT(1,1)="Clinic: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",6,"E")
"RTN","IBVCB2",31,0)
 . S IBTEXT(1,2)="Place of Service: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",8,"E")
"RTN","IBVCB2",32,0)
 . S IBTEXT(2,1)="Type of Service: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",9,"E")
"RTN","IBVCB2",33,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",34,0)
 . ;
"RTN","IBVCB2",35,0)
 . S IBTEXT(1,1)="Assoc DX(1): "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",10,"E")
"RTN","IBVCB2",36,0)
 . S IBTEXT(1,2)="Assoc DX(2): "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",11,"E")
"RTN","IBVCB2",37,0)
 . S IBTEXT(2,1)="Assoc DX(3): "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",12,"E")
"RTN","IBVCB2",38,0)
 . S IBTEXT(2,2)="Assoc DX(4): "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",13,"E")
"RTN","IBVCB2",39,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",40,0)
 . ;
"RTN","IBVCB2",41,0)
 . S IBFIND2=0,IBX=0
"RTN","IBVCB2",42,0)
 . F  S IBX=$O(^DGCR(399,IBIFN,"CP",IBLINE,"MOD",IBX)) Q:'IBX  D
"RTN","IBVCB2",43,0)
 . . S IBFIND2=1
"RTN","IBVCB2",44,0)
 . . S IBTEXT(1,1)="Modifier Sequence: "_$$GET1^DIQ(399.30416,IBX_","_IBLINE_","_IBIFN_",",.01,"E")
"RTN","IBVCB2",45,0)
 . . S IBTEXT(1,2)="Modifier: "_$$GET1^DIQ(399.30416,IBX_","_IBLINE_","_IBIFN_",",.02,"E")
"RTN","IBVCB2",46,0)
 . . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",47,0)
 . . Q
"RTN","IBVCB2",48,0)
 . I 'IBFIND2 D
"RTN","IBVCB2",49,0)
 . . S IBTEXT(1,1)="*** No Modifier Data Found ***"
"RTN","IBVCB2",50,0)
 . . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",51,0)
 . . Q
"RTN","IBVCB2",52,0)
 . ;
"RTN","IBVCB2",53,0)
 . S IBTEXT(1,1)="Anest Minutes: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",15,"E")
"RTN","IBVCB2",54,0)
 . S IBTEXT(1,2)="Add OB Minutes: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",74,"E")
"RTN","IBVCB2",55,0)
 . S IBTEXT(2,1)="Emergency?: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",17,"E")
"RTN","IBVCB2",56,0)
 . S IBTEXT(2,2)="Encounter: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",20,"E")
"RTN","IBVCB2",57,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",58,0)
 . ;
"RTN","IBVCB2",59,0)
 . S IBTEXT(1,1)="Purchased Cost: "_$$DOLLAR^IBVCB($$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",19,"E"))
"RTN","IBVCB2",60,0)
 . S IBTEXT(1,2)="Hours: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",22,"E")
"RTN","IBVCB2",61,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",62,0)
 . ;
"RTN","IBVCB2",63,0)
 . S IBTEXT(1,1)="Attending Not Hospice Employee: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",50.03,"E")
"RTN","IBVCB2",64,0)
 . S IBTEXT(1,2)="EPSDT Flag: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",50.07,"E")
"RTN","IBVCB2",65,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",66,0)
 . ;
"RTN","IBVCB2",67,0)
 . S IBTEXT(1,1)="Comment Qualifier: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",50.09,"E")
"RTN","IBVCB2",68,0)
 . S IBTEXT(2,1)="Comment: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",50.08,"E")
"RTN","IBVCB2",69,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",70,0)
 . ;
"RTN","IBVCB2",71,0)
 . S IBTEXT(1,1)="Attachment Report Type: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",71,"E")
"RTN","IBVCB2",72,0)
 . S IBTEXT(2,1)="Attachment Report Transmit Method: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",72,"E")
"RTN","IBVCB2",73,0)
 . S IBTEXT(3,1)="Attachment Control No.: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",70,"E")
"RTN","IBVCB2",74,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",75,0)
 . ;
"RTN","IBVCB2",76,0)
 . S IBTEXT(1,1)="NDC: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",53,"E")
"RTN","IBVCB2",77,0)
 . S IBTEXT(1,2)="NDC Units: "_$$GET1^DIQ(399.0304,IBLINE_","_IBIFN_",",54,"E")
"RTN","IBVCB2",78,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",79,0)
 . ;
"RTN","IBVCB2",80,0)
 . F IBROLE=4,3,2,9,1,5 D
"RTN","IBVCB2",81,0)
 . . S IBROLEX=$S(IBROLE=1:"Referring",IBROLE=2:"Operating",IBROLE=3:"Rendering",IBROLE=4:"Attending",IBROLE=5:"Supervising",IBROLE=9:"Other Oper.",1:"")
"RTN","IBVCB2",82,0)
 . . S IBPROV=0
"RTN","IBVCB2",83,0)
 . . F  S IBPROV=$O(^DGCR(399,IBIFN,"CP",IBLINE,"LNPRV",IBPROV)) Q:'IBPROV  D
"RTN","IBVCB2",84,0)
 . . . I IBROLE'=$P(^DGCR(399,IBIFN,"CP",IBLINE,"LNPRV",IBPROV,0),U) Q
"RTN","IBVCB2",85,0)
 . . . ;
"RTN","IBVCB2",86,0)
 . . . S IBTEXT(1,1)=IBROLEX_": "_$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.02,"E")
"RTN","IBVCB2",87,0)
 . . . S IBTEXT(1,2)="Credentials: "_$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.03,"E")
"RTN","IBVCB2",88,0)
 . . . ;
"RTN","IBVCB2",89,0)
 . . . S IBTEXT(2,1)="Specialty: "_$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.08,"E")
"RTN","IBVCB2",90,0)
 . . . S IBTEXT(2,2)="Taxonomy: "_$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.15,"E")
"RTN","IBVCB2",91,0)
 . . . ;
"RTN","IBVCB2",92,0)
 . . . S IBPROVID=$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.12,"E")_"/"_$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.05,"E")
"RTN","IBVCB2",93,0)
 . . . S IBTEXT(3,1)="Prim Payer Qual/ID: "_IBPROVID
"RTN","IBVCB2",94,0)
 . . . S IBPROVID=$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.13,"E")_"/"_$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.06,"E")
"RTN","IBVCB2",95,0)
 . . . S IBTEXT(3,2)="Sec Payer Qual/ID: "_IBPROVID
"RTN","IBVCB2",96,0)
 . . . ;
"RTN","IBVCB2",97,0)
 . . . S IBPROVID=$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.14,"E")_"/"_$$GET1^DIQ(399.0404,IBPROV_","_IBLINE_","_IBIFN_",",.07,"E")
"RTN","IBVCB2",98,0)
 . . . S IBTEXT(4,1)="Tert Payer Qual/ID: "_IBPROVID
"RTN","IBVCB2",99,0)
 . . . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",100,0)
 . . . ;
"RTN","IBVCB2",101,0)
 . . . Q
"RTN","IBVCB2",102,0)
 . . Q
"RTN","IBVCB2",103,0)
 . Q
"RTN","IBVCB2",104,0)
 I 'IBFIND D
"RTN","IBVCB2",105,0)
 . S IBTEXT(1,1)="*** No Line Level Data Found ***"
"RTN","IBVCB2",106,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",107,0)
 . Q
"RTN","IBVCB2",108,0)
 ;
"RTN","IBVCB2",109,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB2",110,0)
 S IBTEXT(2,1)="User Data"
"RTN","IBVCB2",111,0)
 S IBTEXT(3,1)="---------"
"RTN","IBVCB2",112,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",113,0)
 ;
"RTN","IBVCB2",114,0)
 S IBTEXT(1,1)="Date Entered: "_$$GET1^DIQ(399,IBIFN_",",1,"E")
"RTN","IBVCB2",115,0)
 S IBTEXT(1,2)="Entered/Edited By: "_$$GET1^DIQ(399,IBIFN_",",2,"E")
"RTN","IBVCB2",116,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",117,0)
 ;
"RTN","IBVCB2",118,0)
 S IBTEXT(1,1)="Initial Review Date: "_$$GET1^DIQ(399,IBIFN_",",4,"E")
"RTN","IBVCB2",119,0)
 S IBTEXT(1,2)="Reviewed By: "_$$GET1^DIQ(399,IBIFN_",",5,"E")
"RTN","IBVCB2",120,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",121,0)
 ;
"RTN","IBVCB2",122,0)
 S IBTEXT(1,1)="Authorization Date: "_$$GET1^DIQ(399,IBIFN_",",10,"E")
"RTN","IBVCB2",123,0)
 S IBTEXT(1,2)="Authorized By: "_$$GET1^DIQ(399,IBIFN_",",11,"E")
"RTN","IBVCB2",124,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",125,0)
 ;
"RTN","IBVCB2",126,0)
 S IBTEXT(1,1)="Date Cancelled: "_$$GET1^DIQ(399,IBIFN_",",17,"E")
"RTN","IBVCB2",127,0)
 S IBTEXT(1,2)="Cancelled By: "_$$GET1^DIQ(399,IBIFN_",",18,"E")
"RTN","IBVCB2",128,0)
 S IBTEXT(2,1)="Reason Cancelled: "_$$GET1^DIQ(399,IBIFN_",",19,"E")
"RTN","IBVCB2",129,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",130,0)
 ;
"RTN","IBVCB2",131,0)
 S IBTEXT(1,1)="MRA Request Date: "_$$GET1^DIQ(399,IBIFN_",",7,"E")
"RTN","IBVCB2",132,0)
 S IBTEXT(1,2)="Requested By: "_$$GET1^DIQ(399,IBIFN_",",8,"E")
"RTN","IBVCB2",133,0)
 S IBTEXT(2,1)="MRA Request Status: "_$$GET1^DIQ(399,IBIFN_",",24,"E")
"RTN","IBVCB2",134,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",135,0)
 ;
"RTN","IBVCB2",136,0)
 S IBTEXT(1,1)="Date First Printed: "_$$GET1^DIQ(399,IBIFN_",",12,"E")
"RTN","IBVCB2",137,0)
 S IBTEXT(1,2)="Printed By: "_$$GET1^DIQ(399,IBIFN_",",13,"E")
"RTN","IBVCB2",138,0)
 S IBTEXT(2,1)="Date Last Printed: "_$$GET1^DIQ(399,IBIFN_",",14,"E")
"RTN","IBVCB2",139,0)
 S IBTEXT(2,2)="Printed By: "_$$GET1^DIQ(399,IBIFN_",",15,"E")
"RTN","IBVCB2",140,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",141,0)
 ;
"RTN","IBVCB2",142,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB2",143,0)
 S IBTEXT(2,1)="Billing Provider"
"RTN","IBVCB2",144,0)
 S IBTEXT(3,1)="----------------"
"RTN","IBVCB2",145,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",146,0)
 ;
"RTN","IBVCB2",147,0)
 S IBTEXT(1,1)="Prim Payer ID: "_$$GET1^DIQ(399,IBIFN_",",122,"E")
"RTN","IBVCB2",148,0)
 S IBTEXT(1,2)="ID Qualifier: "_$$GET1^DIQ(399,IBIFN_",",128,"E")
"RTN","IBVCB2",149,0)
 S IBTEXT(2,1)="Sec Payer ID: "_$$GET1^DIQ(399,IBIFN_",",123,"E")
"RTN","IBVCB2",150,0)
 S IBTEXT(2,2)="ID Qualifier: "_$$GET1^DIQ(399,IBIFN_",",129,"E")
"RTN","IBVCB2",151,0)
 S IBTEXT(3,1)="Tert Payer ID: "_$$GET1^DIQ(399,IBIFN_",",124,"E")
"RTN","IBVCB2",152,0)
 S IBTEXT(3,2)="ID Qualifier: "_$$GET1^DIQ(399,IBIFN_",",130,"E")
"RTN","IBVCB2",153,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",154,0)
 ;
"RTN","IBVCB2",155,0)
 S IBTEXT(1,1)="Taxonomy: "_$$GET1^DIQ(399,IBIFN_",",252,"E")
"RTN","IBVCB2",156,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",157,0)
 ;
"RTN","IBVCB2",158,0)
 S IBTEXT(1,1)="Primary Care Unit: "_$$GET1^DIQ(399,IBIFN_",",239,"E")
"RTN","IBVCB2",159,0)
 S IBTEXT(1,2)="Secondary Care Unit: "_$$GET1^DIQ(399,IBIFN_",",240,"E")
"RTN","IBVCB2",160,0)
 S IBTEXT(2,1)="Tertiary Care Unit: "_$$GET1^DIQ(399,IBIFN_",",241,"E")
"RTN","IBVCB2",161,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",162,0)
 ;
"RTN","IBVCB2",163,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB2",164,0)
 S IBTEXT(2,1)="Prior Payment Information"
"RTN","IBVCB2",165,0)
 S IBTEXT(3,1)="-------------------------"
"RTN","IBVCB2",166,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",167,0)
 ;
"RTN","IBVCB2",168,0)
 S IBTEXT(1,1)="Offset Amount: "_$$DOLLAR^IBVCB($$GET1^DIQ(399,IBIFN_",",202,"E"))
"RTN","IBVCB2",169,0)
 S IBTEXT(1,2)="Offset Desc: "_$$GET1^DIQ(399,IBIFN_",",203,"E")
"RTN","IBVCB2",170,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",171,0)
 ;
"RTN","IBVCB2",172,0)
 S IBTEXT(1,1)="Primary Payment: "_$$DOLLAR^IBVCB($$GET1^DIQ(399,IBIFN_",",218,"E"))
"RTN","IBVCB2",173,0)
 S IBTEXT(1,2)="Secondary Payment: "_$$DOLLAR^IBVCB($$GET1^DIQ(399,IBIFN_",",219,"E"))
"RTN","IBVCB2",174,0)
 S IBTEXT(2,1)="Tertiary Payment: "_$$DOLLAR^IBVCB($$GET1^DIQ(399,IBIFN_",",220,"E"))
"RTN","IBVCB2",175,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",176,0)
 ;
"RTN","IBVCB2",177,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB2",178,0)
 S IBTEXT(2,1)="Claim History"
"RTN","IBVCB2",179,0)
 S IBTEXT(3,1)="-------------"
"RTN","IBVCB2",180,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",181,0)
 ;
"RTN","IBVCB2",182,0)
 S IBTEXT(1,1)="Bill Cloned To: "_$$GET1^DIQ(399,IBIFN_",",29,"E")
"RTN","IBVCB2",183,0)
 S IBTEXT(1,2)="Bill Cloned From: "_$$GET1^DIQ(399,IBIFN_",",30,"E")
"RTN","IBVCB2",184,0)
 S IBTEXT(2,1)="Date Cloned: "_$$GET1^DIQ(399,IBIFN_",",31,"E")
"RTN","IBVCB2",185,0)
 S IBTEXT(2,2)="Cloned By: "_$$GET1^DIQ(399,IBIFN_",",32,"E")
"RTN","IBVCB2",186,0)
 S IBTEXT(3,1)="Reason Cloned: "_$$GET1^DIQ(399,IBIFN_",",33,"E")
"RTN","IBVCB2",187,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",188,0)
 ;
"RTN","IBVCB2",189,0)
 S IBTEXT(1,1)="Auto-process From: "_$$GET1^DIQ(399,IBIFN_",",34,"E")
"RTN","IBVCB2",190,0)
 S IBTEXT(1,2)="Auto-process Result: "_$$GET1^DIQ(399,IBIFN_",",35,"E")
"RTN","IBVCB2",191,0)
 S IBTEXT(2,1)="Auto-process Reason: "_$$GET1^DIQ(399,IBIFN_",",36,"E")
"RTN","IBVCB2",192,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",193,0)
 ;
"RTN","IBVCB2",194,0)
 S IBTEXT(1,1)="Remove Worklist Date:: "_$$GET1^DIQ(399,IBIFN_",",39,"E")
"RTN","IBVCB2",195,0)
 S IBTEXT(1,2)="Remove Worklist By: "_$$GET1^DIQ(399,IBIFN_",",37,"E")
"RTN","IBVCB2",196,0)
 S IBTEXT(2,1)="Remove Worklist How: "_$$GET1^DIQ(399,IBIFN_",",38,"E")
"RTN","IBVCB2",197,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",198,0)
 ;
"RTN","IBVCB2",199,0)
 ; List all reasons disapproved beneath both node "D1" and node "D2".
"RTN","IBVCB2",200,0)
 ;
"RTN","IBVCB2",201,0)
 S IBFIND=0,IBDISAPP=0
"RTN","IBVCB2",202,0)
 F  S IBDISAPP=$O(^DGCR(399,IBIFN,"D1",IBDISAPP)) Q:'IBDISAPP  D
"RTN","IBVCB2",203,0)
 . S IBFIND=1
"RTN","IBVCB2",204,0)
 . S IBTEXT(1,1)="Reason(s) Disapproved (1): "_$$GET1^DIQ(399.044,IBDISAPP_","_IBIFN_",",.01,"E")
"RTN","IBVCB2",205,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",206,0)
 . Q
"RTN","IBVCB2",207,0)
 I 'IBFIND D
"RTN","IBVCB2",208,0)
 . S IBTEXT(1,1)="Reason(s) Disapproved (1):"
"RTN","IBVCB2",209,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",210,0)
 . Q
"RTN","IBVCB2",211,0)
 ;
"RTN","IBVCB2",212,0)
 S IBFIND=0,IBDISAPP=0
"RTN","IBVCB2",213,0)
 F  S IBDISAPP=$O(^DGCR(399,IBIFN,"D2",IBDISAPP)) Q:'IBDISAPP  D
"RTN","IBVCB2",214,0)
 . S IBFIND=1
"RTN","IBVCB2",215,0)
 . S IBTEXT(1,1)="Reason(s) Disapproved (2): "_$$GET1^DIQ(399.045,IBDISAPP_","_IBIFN_",",.01,"E")
"RTN","IBVCB2",216,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",217,0)
 . Q
"RTN","IBVCB2",218,0)
 I 'IBFIND D
"RTN","IBVCB2",219,0)
 . S IBTEXT(1,1)="Reason(s) Disapproved (2):"
"RTN","IBVCB2",220,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",221,0)
 . Q
"RTN","IBVCB2",222,0)
 ;
"RTN","IBVCB2",223,0)
 ; List all Returned data.
"RTN","IBVCB2",224,0)
 ;
"RTN","IBVCB2",225,0)
 S IBFIND=0,IBRETURN=0
"RTN","IBVCB2",226,0)
 F  S IBRETURN=$O(^DGCR(399,IBIFN,"R",IBRETURN)) Q:'IBRETURN  D
"RTN","IBVCB2",227,0)
 . S IBTEXT(1,1)="Date Returned: "_$$GET1^DIQ(399.046,IBRETURN_","_IBIFN_",",.01,"E")
"RTN","IBVCB2",228,0)
 . S IBTEXT(1,2)="Returned By: "_$$GET1^DIQ(399.046,IBRETURN_","_IBIFN_",",.02,"E")
"RTN","IBVCB2",229,0)
 . S IBTEXT(2,1)="Return Comments: "_$$GET1^DIQ(399.046,IBRETURN_","_IBIFN_",",.03,"E")
"RTN","IBVCB2",230,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",231,0)
 . Q
"RTN","IBVCB2",232,0)
 I 'IBFIND D
"RTN","IBVCB2",233,0)
 . S IBTEXT(1,1)="Date Returned:"
"RTN","IBVCB2",234,0)
 . S IBTEXT(1,2)="Returned By:"
"RTN","IBVCB2",235,0)
 . S IBTEXT(2,1)="Return Comments:"
"RTN","IBVCB2",236,0)
 . D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",237,0)
 . Q
"RTN","IBVCB2",238,0)
 ;
"RTN","IBVCB2",239,0)
 S IBTEXT(1,1)="Prim Bill No.: "_$$GET1^DIQ(399,IBIFN_",",125,"E")
"RTN","IBVCB2",240,0)
 S IBTEXT(1,2)="Sec Bill No.: "_$$GET1^DIQ(399,IBIFN_",",126,"E")
"RTN","IBVCB2",241,0)
 S IBTEXT(2,1)="Tert Bill No.: "_$$GET1^DIQ(399,IBIFN_",",127,"E")
"RTN","IBVCB2",242,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",243,0)
 ;
"RTN","IBVCB2",244,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB2",245,0)
 S IBTEXT(2,1)="Insurance Company(s)"
"RTN","IBVCB2",246,0)
 S IBTEXT(3,1)="--------------------"
"RTN","IBVCB2",247,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",248,0)
 ;
"RTN","IBVCB2",249,0)
 S IBTEXT(1,1)="Primary: "_$$GET1^DIQ(399,IBIFN_",",101,"E")
"RTN","IBVCB2",250,0)
 S IBTEXT(2,1)="Secondary: "_$$GET1^DIQ(399,IBIFN_",",102,"E")
"RTN","IBVCB2",251,0)
 S IBTEXT(3,1)="Tertiary: "_$$GET1^DIQ(399,IBIFN_",",103,"E")
"RTN","IBVCB2",252,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",253,0)
 ;
"RTN","IBVCB2",254,0)
 S IBNAME=$$GET1^DIQ(399,IBIFN_",",104,"E")
"RTN","IBVCB2",255,0)
 S IBADD1=$$GET1^DIQ(399,IBIFN_",",105,"E")
"RTN","IBVCB2",256,0)
 S IBADD2=$$GET1^DIQ(399,IBIFN_",",106,"E")
"RTN","IBVCB2",257,0)
 S IBCITY=$$GET1^DIQ(399,IBIFN_",",107,"E")
"RTN","IBVCB2",258,0)
 S IBSTATE=$$GET1^DIQ(399,IBIFN_",",108,"E")
"RTN","IBVCB2",259,0)
 S IBZIP=$$GET1^DIQ(399,IBIFN_",",109,"E")
"RTN","IBVCB2",260,0)
 S IBADDTOT=IBNAME_" "_IBADD1_" "_IBADD2_" "_IBCITY_" "_IBSTATE_" "_IBZIP
"RTN","IBVCB2",261,0)
 S IBTEXT(1,1)="Current Payer Address: "_IBADDTOT
"RTN","IBVCB2",262,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",263,0)
 ;
"RTN","IBVCB2",264,0)
 S IBTEXT(1,1)=""
"RTN","IBVCB2",265,0)
 S IBTEXT(2,1)=""
"RTN","IBVCB2",266,0)
 D LINE^IBVCB(.IBTEXT)
"RTN","IBVCB2",267,0)
 ;
"RTN","IBVCB2",268,0)
 Q
"RTN","IBVCB2",269,0)
 ;
"RTN","IBY516PO")
0^39^B4162987^n/a
"RTN","IBY516PO",1,0)
IBY516PO ;LITS/TAZ - IB*2*516 POST-INSTALL ;4/1/14
"RTN","IBY516PO",2,0)
 ;;2.0;INTEGRATED BILLING;**516**;21-MAR-94;Build 123
"RTN","IBY516PO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY516PO",4,0)
 ;
"RTN","IBY516PO",5,0)
EN ;Post Install Routine primary entry point
"RTN","IBY516PO",6,0)
 N IBY,Y,QUIT,ROUT
"RTN","IBY516PO",7,0)
 S QUIT=0
"RTN","IBY516PO",8,0)
 F IBY="RIT","TMOPT" D  I QUIT Q
"RTN","IBY516PO",9,0)
 . S ROUT=IBY_"^IBY516PO"
"RTN","IBY516PO",10,0)
 . S Y=$$NEWCP^XPDUTL(IBY,ROUT)
"RTN","IBY516PO",11,0)
 . I 'Y D BMES^XPDUTL("ERROR Creating "_IBY_" Checkpoint.") S QUIT=1 Q
"RTN","IBY516PO",12,0)
 Q
"RTN","IBY516PO",13,0)
 ;
"RTN","IBY516PO",14,0)
TMOPT ; Delete scheduled TaskMan option
"RTN","IBY516PO",15,0)
 ;
"RTN","IBY516PO",16,0)
 NEW IBZ,T,FST,TMERR,OPTNM,DIFROM
"RTN","IBY516PO",17,0)
 D MES^XPDUTL("Delete Scheduled TaskMan Option ...")
"RTN","IBY516PO",18,0)
 ;
"RTN","IBY516PO",19,0)
 I '$$PROD^XUPROD(1) D MES^XPDUTL("Not a production account. No further action taken.") G TMOPTX
"RTN","IBY516PO",20,0)
 ;
"RTN","IBY516PO",21,0)
 S OPTNM="IBCN INS BILL PROV FLAG RPT"     ; option name to be unscheduled
"RTN","IBY516PO",22,0)
 D OPTSTAT^XUTMOPT(OPTNM,.IBZ)
"RTN","IBY516PO",23,0)
 S ZTSK=$G(IBZ(1)) K IBZ
"RTN","IBY516PO",24,0)
 I 'ZTSK D MES^XPDUTL("Option not scheduled. No further action taken.") G TMOPTX
"RTN","IBY516PO",25,0)
 D DQ^%ZTLOAD
"RTN","IBY516PO",26,0)
 I 'ZTSK(0) D MES^XPDUTL("Schedule not deleted.") G TMOPTX
"RTN","IBY516PO",27,0)
 D MES^XPDUTL("Schedule deleted.")
"RTN","IBY516PO",28,0)
 ;
"RTN","IBY516PO",29,0)
TMOPTX ;
"RTN","IBY516PO",30,0)
 Q
"RTN","IBY516PO",31,0)
 ;
"RTN","IBY516PO",32,0)
RIT ; recompile billing screen templates
"RTN","IBY516PO",33,0)
 N X,Y,DMAX,IBN
"RTN","IBY516PO",34,0)
 D MES^XPDUTL("Recompiling Input Templates for Billing Screens ...")
"RTN","IBY516PO",35,0)
 F IBN=1:1:8,"10","102","10H" D
"RTN","IBY516PO",36,0)
 .S X="IBXS"_$S(IBN=10:"A",IBN="102":"A2",IBN="10H":"AH",1:IBN),Y=$$FIND1^DIC(.402,,"X","IB SCREEN"_IBN,"B"),DMAX=$$ROUSIZE^DILF
"RTN","IBY516PO",37,0)
 .I Y D EN^DIEZ
"RTN","IBY516PO",38,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY516PO",39,0)
 Q
"RTN","IBY516PR")
0^45^B10110091^n/a
"RTN","IBY516PR",1,0)
IBY516PR ;ALB/WCJ - Pre-Installation for IB patch 516 ;4/14/14
"RTN","IBY516PR",2,0)
 ;;2.0;INTEGRATED BILLING;**516**;21-MAR-94;Build 123
"RTN","IBY516PR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY516PR",4,0)
 ;
"RTN","IBY516PR",5,0)
 ; delete all output formatter (O.F.) data elements included in build
"RTN","IBY516PR",6,0)
 D DELOF,RIT,DEL36,IBCLON
"RTN","IBY516PR",7,0)
 Q
"RTN","IBY516PR",8,0)
 ;
"RTN","IBY516PR",9,0)
IBCLON ; Remove lock from IBCLON option - ICR#6126
"RTN","IBY516PR",10,0)
 S DA=$$FIND1^DIC(19,,,"IB COPY AND CANCEL")
"RTN","IBY516PR",11,0)
 I 'DA G IBCLONQ
"RTN","IBY516PR",12,0)
 N IBFDA S IBFDA(19,DA_",",3)="@"
"RTN","IBY516PR",13,0)
 D FILE^DIE("","IBFDA")
"RTN","IBY516PR",14,0)
IBCLONQ ;
"RTN","IBY516PR",15,0)
 Q
"RTN","IBY516PR",16,0)
 ;
"RTN","IBY516PR",17,0)
RIT ; recompile billing screen templates
"RTN","IBY516PR",18,0)
 N X,Y,DMAX,IBN
"RTN","IBY516PR",19,0)
 D MES^XPDUTL("Recompiling Input Templates for Billing Screens ...")
"RTN","IBY516PR",20,0)
 F IBN=1:1:8,"10","102","10H" D
"RTN","IBY516PR",21,0)
 .S X="IBXS"_$S(IBN=10:"A",IBN="102":"A2",IBN="10H":"AH",1:IBN),Y=$$FIND1^DIC(.402,,"X","IB SCREEN"_IBN,"B"),DMAX=$$ROUSIZE^DILF
"RTN","IBY516PR",22,0)
 .I Y D EN^DIEZ
"RTN","IBY516PR",23,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY516PR",24,0)
 Q
"RTN","IBY516PR",25,0)
 ;
"RTN","IBY516PR",26,0)
INC3508(Y) ; function to determine if entry in IB ERROR file (350.8) should be included in the build
"RTN","IBY516PR",27,0)
 ; Y - ien to file
"RTN","IBY516PR",28,0)
 N DATA,ENTRY,LN,OK,TAG
"RTN","IBY516PR",29,0)
 S OK=0,ENTRY=U_$P($G(^IBE(350.8,Y,0)),U,3)_U
"RTN","IBY516PR",30,0)
 F LN=2:1 S TAG="ENT3508+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,ENTRY) S OK=1 Q
"RTN","IBY516PR",31,0)
 Q OK
"RTN","IBY516PR",32,0)
 ;
"RTN","IBY516PR",33,0)
INCLUDE(FILE,Y) ; function to determine if O.F. entry should be included in the build
"RTN","IBY516PR",34,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY516PR",35,0)
 ; Y=ien to file
"RTN","IBY516PR",36,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY516PR",37,0)
 S OK=0
"RTN","IBY516PR",38,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY516PR",39,0)
 Q OK
"RTN","IBY516PR",40,0)
 ;
"RTN","IBY516PR",41,0)
DEL36 ; This procedure deletes any data from four fields in file #36, Insurance Company.
"RTN","IBY516PR",42,0)
 ;
"RTN","IBY516PR",43,0)
 N DA,DIE,DR,IBDATA,IBFIELD,IBINSIEN
"RTN","IBY516PR",44,0)
 S IBINSIEN=0
"RTN","IBY516PR",45,0)
 F  S IBINSIEN=$O(^DIC(36,IBINSIEN)) Q:'IBINSIEN  D
"RTN","IBY516PR",46,0)
 . F IBFIELD=4.07,4.11,4.12,4.13 D
"RTN","IBY516PR",47,0)
 . . S IBDATA=$$GET1^DIQ(36,IBINSIEN_",",IBFIELD,"I")
"RTN","IBY516PR",48,0)
 . . I IBDATA'="" D
"RTN","IBY516PR",49,0)
 . . . S DIE="^DIC(36,"
"RTN","IBY516PR",50,0)
 . . . S DA=IBINSIEN
"RTN","IBY516PR",51,0)
 . . . S DR=IBFIELD_"///@"
"RTN","IBY516PR",52,0)
 . . . D ^DIE
"RTN","IBY516PR",53,0)
 . . . Q
"RTN","IBY516PR",54,0)
 . . Q
"RTN","IBY516PR",55,0)
 . Q
"RTN","IBY516PR",56,0)
 Q
"RTN","IBY516PR",57,0)
 ;
"RTN","IBY516PR",58,0)
 ;Delete edited entries to insure clean install of new entries
"RTN","IBY516PR",59,0)
 ;Delete obsolete entries.
"RTN","IBY516PR",60,0)
DELOF   ; Delete included OF entries
"RTN","IBY516PR",61,0)
 NEW FILE,DIK,LN,TAG,TAGLN,DATA,PCE,DA,Y
"RTN","IBY516PR",62,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," D
"RTN","IBY516PR",63,0)
 . F TAG="ENT"_FILE,"DEL"_FILE D
"RTN","IBY516PR",64,0)
 .. F LN=2:1 S TAGLN=TAG_"+"_LN,DATA=$P($T(@TAGLN),";;",2) Q:DATA=""  D
"RTN","IBY516PR",65,0)
 ... F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY516PR",66,0)
 Q
"RTN","IBY516PR",67,0)
 ;
"RTN","IBY516PR",68,0)
 ; Example for ENT5, ENT6, ENT7, DEL5, DEL6, and DEL7:
"RTN","IBY516PR",69,0)
 ;;^195^254^259^269^324^325^
"RTN","IBY516PR",70,0)
 ; Note:  Must have beginning and ending up-carat
"RTN","IBY516PR",71,0)
 ;
"RTN","IBY516PR",72,0)
 ; 364.5 entries modified:
"RTN","IBY516PR",73,0)
ENT5 ; OF entries in file 364.5 to be included
"RTN","IBY516PR",74,0)
 ;
"RTN","IBY516PR",75,0)
 ;;^199^200^
"RTN","IBY516PR",76,0)
 ;
"RTN","IBY516PR",77,0)
 ;-----------------------------------------------------------------------
"RTN","IBY516PR",78,0)
 ; 364.6 entries modified:
"RTN","IBY516PR",79,0)
 ;
"RTN","IBY516PR",80,0)
ENT6 ; O.F. entries in file 364.6 to be included
"RTN","IBY516PR",81,0)
 ;
"RTN","IBY516PR",82,0)
 ;;^66^127^132^483^810^811^812^958^964^974^975^977^979^
"RTN","IBY516PR",83,0)
 ;;^1014^1029^1030^1031^1034^1043^
"RTN","IBY516PR",84,0)
 ;;^1839^1840^1851^
"RTN","IBY516PR",85,0)
 ;;^2059^2060^
"RTN","IBY516PR",86,0)
 ;;^2231^2235^2236^2237^2251^2252^
"RTN","IBY516PR",87,0)
 ;
"RTN","IBY516PR",88,0)
 ;-----------------------------------------------------------------------
"RTN","IBY516PR",89,0)
ENT7 ; O.F. entries in file 364.7 to be included
"RTN","IBY516PR",90,0)
 ;
"RTN","IBY516PR",91,0)
 ;;^37^69^88^89^110^179^184^192^205^206^207^475^
"RTN","IBY516PR",92,0)
 ;;^829^840^842^933^939^941^952^953^956^
"RTN","IBY516PR",93,0)
 ;;^1015^1539^1540^1615^1674^1675^1759^1760^
"RTN","IBY516PR",94,0)
 ;;^1945^1946^1947^1948^1949^1950^
"RTN","IBY516PR",95,0)
 ;
"RTN","IBY516PR",96,0)
 ;-----------------------------------------------------------------------
"RTN","IBY516PR",97,0)
DEL5    ; remove O.F. entries in file 364.5 (not re-added)
"RTN","IBY516PR",98,0)
 ;
"RTN","IBY516PR",99,0)
 ;;
"RTN","IBY516PR",100,0)
 ;
"RTN","IBY516PR",101,0)
 ;-----------------------------------------------------------------------
"RTN","IBY516PR",102,0)
DEL6    ; remove O.F. entries in file 364.6 (not re-added)
"RTN","IBY516PR",103,0)
 ;
"RTN","IBY516PR",104,0)
 ;;^1826^1827^
"RTN","IBY516PR",105,0)
 ;
"RTN","IBY516PR",106,0)
 ;-----------------------------------------------------------------------
"RTN","IBY516PR",107,0)
DEL7    ; remove O.F. entries in file 364.7 (not re-added)
"RTN","IBY516PR",108,0)
 ;
"RTN","IBY516PR",109,0)
 ;;
"RTN","IBY516PR",110,0)
 ;
"RTN","IBY516PR",111,0)
 ;-----------------------------------------------------------------------
"RTN","IBY516PR",112,0)
ENT3508 ; Add New IB Error Codes to File 350.8
"RTN","IBY516PR",113,0)
 ;
"RTN","IBY516PR",114,0)
 ;;
"RTN","IBY516PR",115,0)
 ;
"UP",2,2.312,-1)
2^.312
"UP",2,2.312,0)
2.312
"UP",350.9,350.9004,-1)
350.9^19
"UP",350.9,350.9004,0)
350.9004
"UP",350.9,350.929,-1)
350.9^29
"UP",350.9,350.929,0)
350.929
"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"UP",399,399.04,-1)
399^CC
"UP",399,399.04,0)
399.04
"UP",399,399.041,-1)
399^OC
"UP",399,399.041,0)
399.041
"UP",399,399.047,-1)
399^CV
"UP",399,399.047,0)
399.047
"VER")
8.0^22.0
"^DD",2,2.312,20,0)
NEW GROUP NAME^CJ20^^ ; ^X ^DD(2.312,20,9.2) S D0=$P(Y(2.312,20,1),U,18) S:'$D(^IBA(355.3,+D0,0)) D0=-1 S Y(2.312,20,101)=$S($D(^IBA(355.3,D0,2)):^(2),1:"") S X=$P(Y(2.312,20,101),U,1) S D0=Y(2.312,20,80) S D1=Y(2.312,20,81)
"^DD",2,2.312,20,9)
^
"^DD",2,2.312,20,9.01)
355.3^.03;2.312^.18
"^DD",2,2.312,20,9.1)
#.18:GROUP NAME
"^DD",2,2.312,20,9.2)
S Y(2.312,20,81)=$S($D(D1):D1,1:""),Y(2.312,20,80)=$S($D(D0):D0,1:""),Y(2.312,20,1)=$S($D(^DPT(D0,.312,D1,0)):^(0),1:"")
"^DD",2,2.312,20,21,0)
^^3^3^3140911^
"^DD",2,2.312,20,21,1,0)
This computed field will yield the Group Name from
"^DD",2,2.312,20,21,2,0)
file# 355.3 based on the current Group Plan in
"^DD",2,2.312,20,21,3,0)
field# .18.
"^DD",2,2.312,20,"DT")
3140911
"^DD",2,2.312,21,0)
NEW GROUP NUMBER^CJ20^^ ; ^X ^DD(2.312,21,9.2) S D0=$P(Y(2.312,21,1),U,18) S:'$D(^IBA(355.3,+D0,0)) D0=-1 S Y(2.312,21,101)=$S($D(^IBA(355.3,D0,2)):^(2),1:"") S X=$P(Y(2.312,21,101),U,2) S D0=Y(2.312,21,80) S D1=Y(2.312,21,81)
"^DD",2,2.312,21,9)
^
"^DD",2,2.312,21,9.01)
355.3^.04;2.312^.18
"^DD",2,2.312,21,9.1)
#.18:GROUP NUMBER
"^DD",2,2.312,21,9.2)
S Y(2.312,21,81)=$S($D(D1):D1,1:""),Y(2.312,21,80)=$S($D(D0):D0,1:""),Y(2.312,21,1)=$S($D(^DPT(D0,.312,D1,0)):^(0),1:"")
"^DD",2,2.312,21,21,0)
^^3^3^3140911^
"^DD",2,2.312,21,21,1,0)
This computed field will yield the Group Number from
"^DD",2,2.312,21,21,2,0)
file# 355.3 based on the current Group Plan in
"^DD",2,2.312,21,21,3,0)
field# .18.
"^DD",2,2.312,21,"DT")
3140911
"^DD",36,36,4.07,0)
*SEND LAB OR FAC IDS FOR VAMC^S^0:NO;1:YES;^4;7^Q
"^DD",36,36,4.07,.1)
 
"^DD",36,36,4.07,3)
Enter a 1 (YES) if Lab or Facility IDs should be sent for procedures performed at VAMC
"^DD",36,36,4.07,5,1,0)
36^.01^5
"^DD",36,36,4.07,21,0)
^^10^10^3140725^
"^DD",36,36,4.07,21,1,0)
This flag determines whether to send the lab/facility IDs and
"^DD",36,36,4.07,21,2,0)
facility data when services are performed at the VAMC. Some
"^DD",36,36,4.07,21,3,0)
payers will not accept the same data in both the Billing Provider
"^DD",36,36,4.07,21,4,0)
and the Service Facility loops.
"^DD",36,36,4.07,21,5,0)
 
"^DD",36,36,4.07,21,6,0)
This flag only affects electronic claims and is only valid when
"^DD",36,36,4.07,21,7,0)
one of the "Always use main VAMC as Billing Provider" fields
"^DD",36,36,4.07,21,8,0)
(4.11 or 4.12) is set to "Yes".
"^DD",36,36,4.07,21,9,0)
MRD;IB*2.0*516 - This field has been marked for deletion and
"^DD",36,36,4.07,21,10,0)
can be deleted after 3/15/2018.
"^DD",36,36,4.07,"DT")
3140725
"^DD",36,36,4.11,0)
*USE VAMC AS BILL PROV ON 1500^S^0:NO;1:YES;^4;11^Q
"^DD",36,36,4.11,3)
Enter a 1 (YES) if main VAMC should always be used as billing provider for CMS-1500.
"^DD",36,36,4.11,21,0)
^^7^7^3140723^
"^DD",36,36,4.11,21,1,0)
Setting this parameter to YES will cause the following to occur:
"^DD",36,36,4.11,21,2,0)
the system will no longer determine the Billing Provider based
"^DD",36,36,4.11,21,3,0)
upon the location of care; the Billing Provider on a professional
"^DD",36,36,4.11,21,4,0)
claim will be the VAMC; the Division on the claim will print/transmit
"^DD",36,36,4.11,21,5,0)
as the Service Facility.
"^DD",36,36,4.11,21,6,0)
MRD;IB*2.0*516 - This field has been marked for deletion and can be 
"^DD",36,36,4.11,21,7,0)
deleted after 3/15/2018.
"^DD",36,36,4.11,"DT")
3140723
"^DD",36,36,4.12,0)
*USE VAMC AS BILL PROV ON UB04^S^0:NO;1:YES;^4;12^Q
"^DD",36,36,4.12,3)
Enter a 1 (YES) if main VAMC should always be used as billing provider for UB-04.
"^DD",36,36,4.12,21,0)
^^7^7^3140723^
"^DD",36,36,4.12,21,1,0)
Setting this parameter to YES will cause the following to occur:
"^DD",36,36,4.12,21,2,0)
the system will no longer determine the Billing Provider based
"^DD",36,36,4.12,21,3,0)
upon the location of care; the Billing Provider on an institutional
"^DD",36,36,4.12,21,4,0)
claim will be the VAMC; the Division on the claim will transmit
"^DD",36,36,4.12,21,5,0)
as the Service Facility.
"^DD",36,36,4.12,21,6,0)
MRD;IB*2.0*516 - This field has been marked for deletion and can be
"^DD",36,36,4.12,21,7,0)
deleted after 3/15/2018.
"^DD",36,36,4.12,"DT")
3140723
"^DD",36,36,4.13,0)
*USE BILL PROV VAMC ADDRESS^S^0:NO;1:YES;^4;13^Q
"^DD",36,36,4.13,3)
Enter a 1 (YES) if name and address of billing provider (VAMC) should be taken from INSTITUTION file.
"^DD",36,36,4.13,21,0)
^^8^8^3140725^
"^DD",36,36,4.13,21,1,0)
When this parameter is set to YES, the Billing Provider on a claim
"^DD",36,36,4.13,21,2,0)
will be the VAMC but the name and address will be the name and street
"^DD",36,36,4.13,21,3,0)
address from the institution file.
"^DD",36,36,4.13,21,4,0)
When this parameter is set to NO, the Billing Provider on a claim
"^DD",36,36,4.13,21,5,0)
will be the VAMC but the name and address will be the name and
"^DD",36,36,4.13,21,6,0)
address of the VAMC's Pay-to Provider.
"^DD",36,36,4.13,21,7,0)
MRD;IB*2.0*516 - This field has been marked for deletion and can
"^DD",36,36,4.13,21,8,0)
be deleted after 3/15/2018.
"^DD",36,36,4.13,"DT")
3140725
"^DD",350.9,350.9,11.04,0)
DEFAULT TRICARE PAY-TO PROV^NJ4,0^^11;4^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,11.04,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",350.9,350.9,11.04,21,0)
^^4^4^3140508^
"^DD",350.9,350.9,11.04,21,1,0)
This field is the internal entry number to the 350.929 TRICARE pay-to 
"^DD",350.9,350.9,11.04,21,2,0)
provider sub-file.  It should not be edited by FileMan directly. It is 
"^DD",350.9,350.9,11.04,21,3,0)
set by the Pay-To provider maintenance application in the IB Site 
"^DD",350.9,350.9,11.04,21,4,0)
Parameters edit option.
"^DD",350.9,350.9,11.04,"DT")
3140508
"^DD",350.9,350.9,19,0)
PAY-TO PROVIDERS^350.9004P^^19;0
"^DD",350.9,350.9,19,21,0)
^.001^2^2^3140710^^^^
"^DD",350.9,350.9,19,21,1,0)
This multiple contains the list of Pay-To Providers for this VistA
"^DD",350.9,350.9,19,21,2,0)
database.
"^DD",350.9,350.9,29,0)
TRICARE PAY-TO PROVIDERS^350.929P^^29;0
"^DD",350.9,350.9,29,21,0)
^.001^2^2^3140710^^^^
"^DD",350.9,350.9,29,21,1,0)
This multiple contains the list of TRICARE-specific Pay-To Providers for 
"^DD",350.9,350.9,29,21,2,0)
this VistA database.
"^DD",350.9,350.9004,0)
PAY-TO PROVIDERS SUB-FIELD^^1.05^10
"^DD",350.9,350.9004,0,"NM","PAY-TO PROVIDERS")

"^DD",350.9,350.9004,.01,0)
FACILITY^M*P4'^DIC(4,^0;1^S DIC("S")="I $$SCRN4^IBJPS4(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",350.9,350.9004,.01,1,0)
^.1
"^DD",350.9,350.9004,.01,1,1,0)
350.9004^B
"^DD",350.9,350.9004,.01,1,1,1)
S ^IBE(350.9,DA(1),19,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.9004,.01,1,1,2)
K ^IBE(350.9,DA(1),19,"B",$E(X,1,30),DA)
"^DD",350.9,350.9004,.01,3)
Please choose the Pay-To Provider from the Institution file.
"^DD",350.9,350.9004,.01,12)
Inactive, not national, and pharmacy entries are screened out.
"^DD",350.9,350.9004,.01,12.1)
S DIC("S")="I $$SCRN4^IBJPS4(Y)"
"^DD",350.9,350.9004,.01,21,0)
^.001^6^6^3140709^^^
"^DD",350.9,350.9004,.01,21,1,0)
Enter a Pay-to Provider.  Usually, a Pay-to Provider is a medical
"^DD",350.9,350.9004,.01,21,2,0)
center (Example VAMC, M&ROC, etc.).  If you enter only one Pay-to
"^DD",350.9,350.9004,.01,21,3,0)
Provider, it will be the default Pay-to Provider for all claims and
"^DD",350.9,350.9004,.01,21,4,0)
you do not need to associate divisions with the default.  Multiple
"^DD",350.9,350.9004,.01,21,5,0)
Pay-to Providers must be associated with the divisions to which they
"^DD",350.9,350.9004,.01,21,6,0)
apply.
"^DD",350.9,350.9004,.01,"DT")
3140709
"^DD",350.9,350.929,0)
TRICARE PAY-TO PROVIDERS SUB-FIELD^^1.05^10
"^DD",350.9,350.929,0,"DT")
3140708
"^DD",350.9,350.929,0,"IX","B",350.929,.01)

"^DD",350.9,350.929,0,"NM","TRICARE PAY-TO PROVIDERS")

"^DD",350.9,350.929,0,"UP")
350.9
"^DD",350.9,350.929,.01,0)
TC FACILITY^*P4'^DIC(4,^0;1^S DIC("S")="I $$SCRN4^IBJPS4(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",350.9,350.929,.01,1,0)
^.1
"^DD",350.9,350.929,.01,1,1,0)
350.929^B
"^DD",350.9,350.929,.01,1,1,1)
S ^IBE(350.9,DA(1),29,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.929,.01,1,1,2)
K ^IBE(350.9,DA(1),29,"B",$E(X,1,30),DA)
"^DD",350.9,350.929,.01,3)
Please choose the TRICARE-specific Pay-To Provider from the Institution file.
"^DD",350.9,350.929,.01,12)
Inactive, not national, and pharmacy entries are screened out.
"^DD",350.9,350.929,.01,12.1)
S DIC("S")="I $$SCRN4^IBJPS4(Y)"
"^DD",350.9,350.929,.01,21,0)
^^7^7^3140708^
"^DD",350.9,350.929,.01,21,1,0)
Enter a TRICARE-specific Pay-to Provider.  Usually, a Pay-to
"^DD",350.9,350.929,.01,21,2,0)
Provider is a medical center (e.g. VAMC, M&ROC, etc.).  If you
"^DD",350.9,350.929,.01,21,3,0)
enter only one TRICARE-specific Pay-to Provider, it will be the 
"^DD",350.9,350.929,.01,21,4,0)
default Pay-to Provider for all TRICARE claims and you would not 
"^DD",350.9,350.929,.01,21,5,0)
need to associate divisions with the default.  Multiple TRICARE- 
"^DD",350.9,350.929,.01,21,6,0)
specific Pay-to Providers must be associated with the divisions 
"^DD",350.9,350.929,.01,21,7,0)
to which they apply.
"^DD",350.9,350.929,.01,"DT")
3140709
"^DD",350.9,350.929,.02,0)
TC NAME^RF^^0;2^K:$L(X)>35!($L(X)<1) X
"^DD",350.9,350.929,.02,.1)
TRICARE Pay-to Provider Name
"^DD",350.9,350.929,.02,3)
Answer must be 1-35 characters in length.
"^DD",350.9,350.929,.02,21,0)
^.001^2^2^3140709^^^
"^DD",350.9,350.929,.02,21,1,0)
You may modify the TRICARE-specific Pay-to Provider name for use on 
"^DD",350.9,350.929,.02,21,2,0)
electronic or printed claims.
"^DD",350.9,350.929,.02,23,0)
^.001^1^1^3140709^^^
"^DD",350.9,350.929,.02,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.929,.02,"DT")
3140709
"^DD",350.9,350.929,.03,0)
TC FEDERAL TAX NUMBER^F^^0;3^K:$L(X)>10!($L(X)<10)!'(X?2N1"-"7N) X
"^DD",350.9,350.929,.03,.1)
TRICARE Pay-to Provider Federal Tax ID Number
"^DD",350.9,350.929,.03,3)
Answer must be 10 characters in the format NN-NNNNNNN.
"^DD",350.9,350.929,.03,21,0)
^.001^4^4^3140709^^
"^DD",350.9,350.929,.03,21,1,0)
Enter the Federal Tax ID for the TRICARE-specific Pay-to Provider.  Make 
"^DD",350.9,350.929,.03,21,2,0)
sure you enter the Tax ID Number for the TRICARE Pay-to Provider, which 
"^DD",350.9,350.929,.03,21,3,0)
may be different from your site's Tax ID.  Enter 10 characters in the
"^DD",350.9,350.929,.03,21,4,0)
format NN-NNNNNNN.
"^DD",350.9,350.929,.03,23,0)
^.001^3^3^3140709^^
"^DD",350.9,350.929,.03,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field if the .01 
"^DD",350.9,350.929,.03,23,2,0)
field is the same institution as defined in the IB site parameters field 
"^DD",350.9,350.929,.03,23,3,0)
350.9, .02.
"^DD",350.9,350.929,.03,"DT")
3140709
"^DD",350.9,350.929,.04,0)
TC TELEPHONE NUMBER^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",350.9,350.929,.04,.1)
TRICARE Pay-to Provider Phone Number
"^DD",350.9,350.929,.04,3)
Answer must be 1-30 characters in length.
"^DD",350.9,350.929,.04,21,0)
^^3^3^3140710^
"^DD",350.9,350.929,.04,21,1,0)
Enter the phone number to be used on electronic or printed claims.  This 
"^DD",350.9,350.929,.04,21,2,0)
is the number you would want a payer to use to contact the site about a 
"^DD",350.9,350.929,.04,21,3,0)
TRICARE claim.
"^DD",350.9,350.929,.04,"DT")
3140709
"^DD",350.9,350.929,.05,0)
TC PARENT PAY-TO PROVIDER^NJ4,0^^0;5^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",350.9,350.929,.05,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",350.9,350.929,.05,21,0)
^^13^13^3140508^
"^DD",350.9,350.929,.05,21,1,0)
This field determines if this entry in the sub-file is a TRICARE Pay-to 
"^DD",350.9,350.929,.05,21,2,0)
Provider institution or if it is a Division being linked to the parent 
"^DD",350.9,350.929,.05,21,3,0)
TRICARE Pay-to Provider institution, that is, another sub-file entry.
"^DD",350.9,350.929,.05,21,4,0)
 
"^DD",350.9,350.929,.05,21,5,0)
If this field is defined, then it holds the IEN in this sub-file of the 
"^DD",350.9,350.929,.05,21,6,0)
parent TRICARE Pay-to Provider institution for this specific division.
"^DD",350.9,350.929,.05,21,7,0)
 
"^DD",350.9,350.929,.05,21,8,0)
If this field is nil, then this sub-file entry is the parent TRICARE 
"^DD",350.9,350.929,.05,21,9,0)
Pay-to Provider institution.
"^DD",350.9,350.929,.05,21,10,0)
 
"^DD",350.9,350.929,.05,21,11,0)
This field should not be set via FileMan.  The application in the IB Site 
"^DD",350.9,350.929,.05,21,12,0)
Paremeter edit option will set this field appropriately based on user 
"^DD",350.9,350.929,.05,21,13,0)
input.
"^DD",350.9,350.929,.05,"DT")
3140508
"^DD",350.9,350.929,1.01,0)
TC STREET ADDRESS 1^F^^1;1^K:$L(X)>55!($L(X)<1) X
"^DD",350.9,350.929,1.01,.1)
TRICARE Pay-to Provider Address Line 1
"^DD",350.9,350.929,1.01,3)
Answer must be 1-55 characters in length.
"^DD",350.9,350.929,1.01,21,0)
^^2^2^3140508^
"^DD",350.9,350.929,1.01,21,1,0)
You may modify the TRICARE-specific Pay-To Provider Address for use on 
"^DD",350.9,350.929,1.01,21,2,0)
electronic or printed claims.  You may enter a P.O. Box.
"^DD",350.9,350.929,1.01,23,0)
^^1^1^3140508^
"^DD",350.9,350.929,1.01,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.929,1.01,"DT")
3140709
"^DD",350.9,350.929,1.02,0)
TC STREET ADDRESS 2^F^^1;2^K:$L(X)>55!($L(X)<1) X
"^DD",350.9,350.929,1.02,.1)
TRICARE Pay-to Provider Address Line 2
"^DD",350.9,350.929,1.02,3)
Answer must be 1-55 characters in length.
"^DD",350.9,350.929,1.02,21,0)
^^1^1^3140508^
"^DD",350.9,350.929,1.02,21,1,0)
Enter additional address information, if needed.
"^DD",350.9,350.929,1.02,23,0)
^^1^1^3140508^
"^DD",350.9,350.929,1.02,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.929,1.02,"DT")
3140709
"^DD",350.9,350.929,1.03,0)
TC CITY^F^^1;3^K:$L(X)>40!($L(X)<2) X
"^DD",350.9,350.929,1.03,.1)
TRICARE Pay-to Provider City
"^DD",350.9,350.929,1.03,3)
Answer must be 2-40 characters in length.
"^DD",350.9,350.929,1.03,21,0)
^^2^2^3140508^
"^DD",350.9,350.929,1.03,21,1,0)
You may modify the TRICARE Pay-to Provider address for use on electronic 
"^DD",350.9,350.929,1.03,21,2,0)
or printed claims.
"^DD",350.9,350.929,1.03,23,0)
^^1^1^3140508^
"^DD",350.9,350.929,1.03,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.929,1.03,"DT")
3140709
"^DD",350.9,350.929,1.04,0)
TC STATE^P5'^DIC(5,^1;4^Q
"^DD",350.9,350.929,1.04,.1)
TRICARE Pay-to Provider State
"^DD",350.9,350.929,1.04,3)
Answer with State Number, or Name, or Abbreviation.
"^DD",350.9,350.929,1.04,21,0)
^.001^2^2^3140709^^
"^DD",350.9,350.929,1.04,21,1,0)
You may modify the TRICARE Pay-to Provider address for use on electronic 
"^DD",350.9,350.929,1.04,21,2,0)
or printed claims.
"^DD",350.9,350.929,1.04,23,0)
^.001^1^1^3140709^^
"^DD",350.9,350.929,1.04,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.929,1.04,"DT")
3140709
"^DD",350.9,350.929,1.05,0)
TC ZIP^F^^1;5^K:$L(X)>15!($L(X)<3) X
"^DD",350.9,350.929,1.05,.1)
TRICARE Pay-to Provider Zip Code
"^DD",350.9,350.929,1.05,3)
Answer must be 3-15 characters in length.
"^DD",350.9,350.929,1.05,21,0)
^.001^2^2^3140709^^
"^DD",350.9,350.929,1.05,21,1,0)
You may modify the TRICARE Pay-to Provider address for use on electronic 
"^DD",350.9,350.929,1.05,21,2,0)
or printed claims.
"^DD",350.9,350.929,1.05,23,0)
^.001^1^1^3140709^^
"^DD",350.9,350.929,1.05,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.929,1.05,"DT")
3140709
"^DD",355.3,355.3,.15,0)
ELECTRONIC PLAN TYPE^S^16:HMO MEDICARE;MX:MEDICARE A or B;TV:TITLE V;MC:MEDICAID;BL:BC/BS;CH:TRICARE;15:INDEMNITY;CI:COMMERCIAL;HM:HMO;DS:DISABILITY;12:PPO;13:POS;ZZ:OTHER;FI:FEP - Do not use for BC/BS;17:DENTAL;^0;15^Q
"^DD",355.3,355.3,.15,3)
Enter the appropriate type of plan to be used for electronic billing.
"^DD",355.3,355.3,.15,21,0)
^.001^1^1^3140522^^^^
"^DD",355.3,355.3,.15,21,1,0)
This field contains the X12 data to identify the source of pay type.
"^DD",355.3,355.3,.15,23,0)
^.001^2^2^3140522^^^^
"^DD",355.3,355.3,.15,23,1,0)
This field must be consistent with the ELECTRONIC TYPE OF INSURANCE
"^DD",355.3,355.3,.15,23,2,0)
(#3.09) field in the INSURANCE COMPANY (#36) file.
"^DD",355.3,355.3,.15,"DT")
3140522
"^DD",355.93,355.93,.17,0)
SOLE PROPRIETORSHIP^S^Y:YES;N:NO;^0;17^Q
"^DD",355.93,355.93,.17,.1)
Sole Proprietorship?
"^DD",355.93,355.93,.17,3)
Enter Y if this is a sole proprietorship, N if it is not.
"^DD",355.93,355.93,.17,21,0)
^^2^2^3140915^
"^DD",355.93,355.93,.17,21,1,0)
A sole proprietorship is a Non-VA facility that is owned by a single
"^DD",355.93,355.93,.17,21,2,0)
Non-VA provider.
"^DD",355.93,355.93,.17,23,0)
^^3^3^3140915^
"^DD",355.93,355.93,.17,23,1,0)
This field provides the ability to mark the organization as a sole
"^DD",355.93,355.93,.17,23,2,0)
proprietorship, which allows use of the single provider's NPI for the
"^DD",355.93,355.93,.17,23,3,0)
organization. Duplicate use of an NPI would otherwise not be permitted.
"^DD",355.93,355.93,.17,"DT")
3140915
"^DD",355.93,355.93,.18,0)
NON-VA PROVIDER^*P355.93'^IBA(355.93,^0;18^S DIC("S")="I $P($G(^(0)),U,2)=2" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",355.93,355.93,.18,.1)
Non-VA Provider
"^DD",355.93,355.93,.18,3)
Enter the Non-VA Provider that functions as the sole-proprietor of this facility.
"^DD",355.93,355.93,.18,12)
Only individuals can function as a Sole-proprietor.
"^DD",355.93,355.93,.18,12.1)
S DIC("S")="I $P($G(^(0)),U,2)=2"
"^DD",355.93,355.93,.18,21,0)
^.001^1^1^3140620^^^^
"^DD",355.93,355.93,.18,21,1,0)
Non-VA provider associated with this facility.
"^DD",355.93,355.93,.18,"DT")
3140908
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3071126
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>40!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1^^0
"^DD",364.6,364.6,.1,3)
Answer must be 1-40 characters in length
"^DD",364.6,364.6,.1,21,0)
^^2^2^3071126^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
3080310
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,40,0)
CONDITION CODE^399.04PA^^CC;0
"^DD",399,399,40,21,0)
^.001^2^2^3140318^^^^
"^DD",399,399,40,21,1,0)
This identifies the condition(s) relating to this bill that may affect
"^DD",399,399,40,21,2,0)
payer processing.
"^DD",399,399,41,0)
OCCURRENCE CODE^399.041IPA^^OC;0
"^DD",399,399,41,12)
Valid MCCR Occurrence Codes only!
"^DD",399,399,41,12.1)
S DIC("S")="I $D(^DGCR(399.1,+Y,0)) I $P(^DGCR(399.1,+Y,0),""^"",4)=1 X ^DD(399.041,9.1)"
"^DD",399,399,41,21,0)
^.001^2^2^3141118^^^^
"^DD",399,399,41,21,1,0)
This identifies the significant event(s) relating to this bill that may
"^DD",399,399,41,21,2,0)
affect payer processing.
"^DD",399,399,47,0)
VALUE CODE^399.047PA^^CV;0
"^DD",399,399,261,0)
PROPERTY/CASUALTY CLAIM NUMBER^FX^^U4;2^K:$L(X)>30!($L(X)<1)!($TR(X," ")="")!($E(X)=" ") X
"^DD",399,399,261,3)
Answer must be 1-30 characters in length, not all spaces, no leading spaces.
"^DD",399,399,261,21,0)
^.001^1^1^3150319^^^
"^DD",399,399,261,21,1,0)
This is a payer-assigned claim number for a property and casualty claim. 
"^DD",399,399,261,"DT")
3150319
"^DD",399,399,371,0)
PRIMARY NODE 7^RF^^I17;E1,240^K:$L(X)>240!($L(X)<1) X
"^DD",399,399,371,3)
This is addl. information pertaining to the primary insurance carrier associated with this bill.  Value must be 1 to 240 characters in length.
"^DD",399,399,371,21,0)
^.001^3^3^3140529^^^^
"^DD",399,399,371,21,1,0)
This is addl. information pertaining to the primary insurance carrier 
"^DD",399,399,371,21,2,0)
associated with this bill.  It is equal to the 7 node of the INSURANCE 
"^DD",399,399,371,21,3,0)
TYPE sub-file of the PATIENT file.
"^DD",399,399,371,23,0)
^.001^4^4^3140529^^^^
"^DD",399,399,371,23,1,0)
This node is set by a trigger on PRIMARY INSURANCE CARRIER (399,101) and 
"^DD",399,399,371,23,2,0)
at UPDT^IBSCSE.  This node is a duplicate of the 7 node of the INSURANCE 
"^DD",399,399,371,23,3,0)
TYPE sub-file of the PATIENT file.
"^DD",399,399,371,23,4,0)
^DGCR(399,IBIFN,"I17")=^DPT(DFN,.312,X,7)
"^DD",399,399,371,"DT")
3140529
"^DD",399,399,372,0)
SECONDARY NODE 7^RF^^I27;E1,240^K:$L(X)>240!($L(X)<1) X
"^DD",399,399,372,3)
This is addl. information pertaining to the secondary insurance carrier associated with this bill.  Value must be 1 to 240 characters in length.
"^DD",399,399,372,21,0)
^.001^3^3^3140529^^^^
"^DD",399,399,372,21,1,0)
This is addl. information pertaining to the secondary insurance carrier 
"^DD",399,399,372,21,2,0)
associated with this bill.  It is equal to the 7 node of the INSURANCE 
"^DD",399,399,372,21,3,0)
TYPE sub-file of the PATIENT file.
"^DD",399,399,372,23,0)
^.001^4^4^3140529^^^
"^DD",399,399,372,23,1,0)
This node is set by a trigger on SECONDARY INSURANCE CARRIER (399,102) 
"^DD",399,399,372,23,2,0)
and by UPDT^IBSCSE.  This node is a duplicate of the 7 node of the 
"^DD",399,399,372,23,3,0)
INSURANCE TYPE sub-file of the PATIENT file.
"^DD",399,399,372,23,4,0)
^DGCR(399,IBIFN,"I27")=^DPT(DFN,.312,X,7)
"^DD",399,399,372,"DT")
3140529
"^DD",399,399,373,0)
TERTIARY NODE 7^RF^^I37;E1,240^K:$L(X)>240!($L(X)<1) X
"^DD",399,399,373,3)
This is addl. information pertaining to the tertiary insurance carrier associated with this bill.  Value must be 1 to 240 characters in length.
"^DD",399,399,373,21,0)
^.001^3^3^3140529^^^
"^DD",399,399,373,21,1,0)
This is addl. information pertaining to the tertiary insurance carrier 
"^DD",399,399,373,21,2,0)
associated with this bill.  It is equal to the 7 node of the INSURANCE 
"^DD",399,399,373,21,3,0)
TYPE sub-file of the PATIENT file.
"^DD",399,399,373,23,0)
^.001^4^4^3140529^^
"^DD",399,399,373,23,1,0)
This node is set by a trigger on TERTIARY INSURANCE CARRIER (399,103) and 
"^DD",399,399,373,23,2,0)
by UPDT^IBSCSE.  This node is a duplicate of the 7 node of the INSURANCE 
"^DD",399,399,373,23,3,0)
TYPE sub-file of the PATIENT file.
"^DD",399,399,373,23,4,0)
^DGCR(399,IBIFN,"I37")=^DPT(DFN,.312,X,7)
"^DD",399,399,373,"DT")
3140528
"^DD",399,399,471,0)
PRIMARY INSURANCE HPID^NJ10,0X^^M1;13^K:+X'=X!(X>9999999999)!(X<1000000000)!(X?.E1"."1N.N)!$$HOD^IBCNHUT1(X) X
"^DD",399,399,471,3)
Enter a valid HPID.  Must be 10 digits, all numeric, no decimal.
"^DD",399,399,471,21,0)
^.001^1^1^3141118^^^^
"^DD",399,399,471,21,1,0)
This field is the HPID to be sent for the primary insurer on this claim.
"^DD",399,399,471,23,0)
^.001^1^1^3141118^^^
"^DD",399,399,471,23,1,0)
This field is the HPID to be sent for the primary insurer on this claim.
"^DD",399,399,471,"DT")
3140630
"^DD",399,399,472,0)
SECONDARY INSURANCE HPID^NJ10,0X^^M1;14^K:+X'=X!(X>9999999999)!(X<1000000000)!(X?.E1"."1N.N)!$$HOD^IBCNHUT1(X) X
"^DD",399,399,472,3)
Enter a valid HPID. Must be 10 digits, all numeric, no decimal.
"^DD",399,399,472,21,0)
^^1^1^3140630^
"^DD",399,399,472,21,1,0)
This field is the HPID to be sent for the secondary insurer on this claim.
"^DD",399,399,472,23,0)
^^1^1^3140630^
"^DD",399,399,472,23,1,0)
This field is the HPID to be sent for the secondary insurer on this claim.
"^DD",399,399,472,"DT")
3140630
"^DD",399,399,473,0)
TERTIARY INSURANCE HPID^NJ10,0X^^M1;15^K:+X'=X!(X>9999999999)!(X<1000000000)!(X?.E1"."1N.N)!$$HOD^IBCNHUT1(X) X
"^DD",399,399,473,3)
Enter a valid HPID. Must be 10 digits, all numeric, no decimal.
"^DD",399,399,473,21,0)
^.001^1^1^3140630^^
"^DD",399,399,473,21,1,0)
This field is the HPID to be sent for the tertiary insurer on this claim.
"^DD",399,399,473,23,0)
^^1^1^3140630^
"^DD",399,399,473,23,1,0)
This field is the HPID to be sent for the tertiary insurer on this claim.
"^DD",399,399,473,"DT")
3140630
"^DD",399,399.0304,51,0)
PROCEDURE DESCRIPTION^F^^1;4^K:$L(X)>80!($L(X)<1) X
"^DD",399,399.0304,51,3)
Enter a 1-80 character NOC - Not Otherwise Classified - procedure description.
"^DD",399,399.0304,51,21,0)
^^2^2^3140701^
"^DD",399,399.0304,51,21,1,0)
Enter a 1-80 character NOC - Not Otherwise Classified - procedure 
"^DD",399,399.0304,51,21,2,0)
description.
"^DD",399,399.0304,51,"DT")
3140508
"^DD",399,399.0304,53,0)
NDC^F^^1;7^K:$L(X)>13!($L(X)<13)!'(X?5N1"-"4N1"-"2N) X
"^DD",399,399.0304,53,3)
Enter a National Drug Code in a 5-4-2 format (nnnnn-nnnn-nn) if required on a non-prescription claim.
"^DD",399,399.0304,53,21,0)
^^2^2^3140707^
"^DD",399,399.0304,53,21,1,0)
Enter a National Drug Code in a 5-4-2 format (nnnnn-nnnn-nn) if 
"^DD",399,399.0304,53,21,2,0)
required on a non-prescription claim.
"^DD",399,399.0304,53,23,0)
^.001^2^2^3140707^^
"^DD",399,399.0304,53,23,1,0)
Enter a National Drug Code in a 5-4-2 format (nnnnn-nnnn-nn) if 
"^DD",399,399.0304,53,23,2,0)
required on a non-prescription claim.
"^DD",399,399.0304,53,"DT")
3140508
"^DD",399,399.0304,54,0)
UNITS^NJ19,8^^1;8^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."9N.N) X
"^DD",399,399.0304,54,3)
Enter the number of units, a number between 1 and 9999999999 with up to 9 decimal digits.
"^DD",399,399.0304,54,21,0)
^^2^2^3140707^
"^DD",399,399.0304,54,21,1,0)
Enter the number of units of the non-prescription medication
"^DD",399,399.0304,54,21,2,0)
administered.
"^DD",399,399.0304,54,23,0)
^^2^2^3140707^
"^DD",399,399.0304,54,23,1,0)
Enter the number of units of the non-prescription medication
"^DD",399,399.0304,54,23,2,0)
administered.
"^DD",399,399.0304,54,"DT")
3140508
"^DD",399,399.04,0)
CONDITION CODE SUB-FIELD^^.01^1
"^DD",399,399.04,0,"NM","CONDITION CODE")

"^DD",399,399.04,.01,0)
CONDITION CODE^M*P399.1'X^DGCR(399.1,^0;1^S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,15)",D="C^B" D MIX^DIC1 K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.04,.01,3)
Enter a Condition Code that applies to this bill.
"^DD",399,399.04,.01,4)

"^DD",399,399.04,.01,12)
Valid Condition Codes Only!
"^DD",399,399.04,.01,12.1)
S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,15)"
"^DD",399,399.04,.01,21,0)
^.001^2^2^3140318^^^^
"^DD",399,399.04,.01,21,1,0)
This identifies various condition(s) relating to the patient and care
"^DD",399,399.04,.01,21,2,0)
provided that is being billed that may affect payer processing.
"^DD",399,399.04,.01,"DT")
3140318
"^DD",399,399.041,0)
OCCURRENCE CODE SUB-FIELD^^.04^4
"^DD",399,399.041,0,"NM","OCCURRENCE CODE")

"^DD",399,399.041,.01,0)
OCCURRENCE CODE^M*P399.1'X^DGCR(399.1,^0;1^S DIC("S")="I $P(^DGCR(399.1,+Y,0),U,4)=1,$S(+Y'=22:1,$P(^DPT($P(^DGCR(399,DA,0),U,2),0),U,2)=""F"":1,1:0)",D="C^B" D MIX^DIC1 K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.041,.01,1,0)
^.1
"^DD",399,399.041,.01,1,1,0)
399.041^B
"^DD",399,399.041,.01,1,1,1)
S ^DGCR(399,DA(1),"OC","B",$E(X,1,30),DA)=""
"^DD",399,399.041,.01,1,1,2)
K ^DGCR(399,DA(1),"OC","B",$E(X,1,30),DA)
"^DD",399,399.041,.01,3)
This code defines the event(s) relating to this bill which may affect           insurance processing.
"^DD",399,399.041,.01,4)

"^DD",399,399.041,.01,9.6)
I X=10 S DFN=$P(^DGCR(399,DA,0),"^",2) I $D(^DPT(DFN,0)),$P(^DPT(DFN,0),"^",2)="M" W !!,"This patient is a MALE!! Occurrence Code 10 applies only to FEMALES!!",!! K DFN,X Q
"^DD",399,399.041,.01,12)
Valid MCCR Occurrence Codes only!
"^DD",399,399.041,.01,12.1)
S DIC("S")="I $P(^DGCR(399.1,+Y,0),U,4)=1,$S(+Y'=22:1,$P(^DPT($P(^DGCR(399,DA,0),U,2),0),U,2)=""F"":1,1:0)"
"^DD",399,399.041,.01,"DT")
3140124
"^DD",399,399.047,0)
VALUE CODE SUB-FIELD^^.02^2
"^DD",399,399.047,0,"NM","VALUE CODE")

"^DD",399,399.047,.01,0)
VALUE CODE^M*P399.1'X^DGCR(399.1,^0;1^S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,11),$$ALLOWVC^IBCVC(DA(1),+Y)",D="C^B" D MIX^DIC1 K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399.047,.01,1,0)
^.1^^-1
"^DD",399,399.047,.01,1,1,0)
399.047^B
"^DD",399,399.047,.01,1,1,1)
S ^DGCR(399,DA(1),"CV","B",$E(X,1,30),DA)=""
"^DD",399,399.047,.01,1,1,2)
K ^DGCR(399,DA(1),"CV","B",$E(X,1,30),DA)
"^DD",399,399.047,.01,3)
Enter a Value Code that applies to this bill.
"^DD",399,399.047,.01,4)

"^DD",399,399.047,.01,12)
Value Codes Only!
"^DD",399,399.047,.01,12.1)
S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,11),$$ALLOWVC^IBCVC(DA(1),+Y)"
"^DD",399,399.047,.01,"DT")
3140121
"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",8791,6)
^495
**END**
**END**

