Released IB*2*400 SEQ #382
Extracted from mail message
**KIDS**:IB*2.0*400^

**INSTALL NAME**
IB*2.0*400
"BLD",7081,0)
IB*2.0*400^INTEGRATED BILLING^0^3090710^y
"BLD",7081,1,0)
^^1^1^3080908^
"BLD",7081,1,1,0)
eClaims Additional Claim Form and Transmission Data (EAD)
"BLD",7081,4,0)
^9.64PA^36^10
"BLD",7081,4,36,0)
36
"BLD",7081,4,36,2,0)
^9.641^36^1
"BLD",7081,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",7081,4,36,2,36,1,0)
^9.6411^4.13^4
"BLD",7081,4,36,2,36,1,4.07,0)
SEND LAB OR FAC IDS FOR VAMC
"BLD",7081,4,36,2,36,1,4.11,0)
USE VAMC AS BILL. PROV ON 1500
"BLD",7081,4,36,2,36,1,4.12,0)
USE VAMC AS BILL. PROV ON UB04
"BLD",7081,4,36,2,36,1,4.13,0)
USE BILL. PROV VAMC ADDRESS
"BLD",7081,4,36,222)
y^n^p^^^^n^^n
"BLD",7081,4,36,224)

"BLD",7081,4,350.8,0)
350.8
"BLD",7081,4,350.8,222)
n^n^f^^n^^y^o^n
"BLD",7081,4,350.8,224)
I $F(".IB097.IB140.IB148.IB177.IB178.IB179.IB180.IB181.IB309.IB326.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"BLD",7081,4,350.9,0)
350.9
"BLD",7081,4,350.9,2,0)
^9.641^350.9^3
"BLD",7081,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",7081,4,350.9,2,350.9,1,0)
^9.6411^11.03^8
"BLD",7081,4,350.9,2,350.9,1,2.01,0)
*AGENT CASHIER MAIL SYMBOL
"BLD",7081,4,350.9,2,350.9,1,2.02,0)
*AGENT CASHIER STREET ADDRESS
"BLD",7081,4,350.9,2,350.9,1,2.03,0)
*AGENT CASHIER CITY
"BLD",7081,4,350.9,2,350.9,1,2.04,0)
*AGENT CASHIER STATE
"BLD",7081,4,350.9,2,350.9,1,2.05,0)
*AGENT CASHIER ZIP CODE
"BLD",7081,4,350.9,2,350.9,1,2.06,0)
*AGENT CASHIER PHONE NUMBER
"BLD",7081,4,350.9,2,350.9,1,2.1,0)
*FACILITY NAME FOR BILLING
"BLD",7081,4,350.9,2,350.9,1,11.03,0)
DEFAULT PAY-TO PROVIDER
"BLD",7081,4,350.9,2,350.9004,0)
PAY-TO PROVIDERS  (sub-file)
"BLD",7081,4,350.9,2,350.9004,1,0)
^9.6411^^
"BLD",7081,4,350.9,2,350.9005,0)
BILLING PROVIDER FAC TYPES  (sub-file)
"BLD",7081,4,350.9,2,350.9005,1,0)
^9.6411^^0
"BLD",7081,4,350.9,222)
y^n^p^^^^n^^n
"BLD",7081,4,350.9,224)

"BLD",7081,4,362.3,0)
362.3
"BLD",7081,4,362.3,2,0)
^9.641^362.3^1
"BLD",7081,4,362.3,2,362.3,0)
IB BILL/CLAIMS DIAGNOSIS  (File-top level)
"BLD",7081,4,362.3,2,362.3,1,0)
^9.6411^.03^3
"BLD",7081,4,362.3,2,362.3,1,.01,0)
DIAGNOSIS
"BLD",7081,4,362.3,2,362.3,1,.02,0)
BILL NUMBER
"BLD",7081,4,362.3,2,362.3,1,.03,0)
ORDER
"BLD",7081,4,362.3,222)
y^n^p^^^^n^^n
"BLD",7081,4,362.3,224)

"BLD",7081,4,362.4,0)
362.4
"BLD",7081,4,362.4,2,0)
^9.641^362.4^1
"BLD",7081,4,362.4,2,362.4,0)
IB BILL/CLAIMS PRESCRIPTION REFILL  (File-top level)
"BLD",7081,4,362.4,2,362.4,1,0)
^9.6411^.02^1
"BLD",7081,4,362.4,2,362.4,1,.02,0)
BILL NUMBER
"BLD",7081,4,362.4,222)
y^n^p^^^^n^^n
"BLD",7081,4,362.4,224)

"BLD",7081,4,362.5,0)
362.5
"BLD",7081,4,362.5,2,0)
^9.641^362.5^1
"BLD",7081,4,362.5,2,362.5,0)
IB BILL/CLAIMS PROSTHETICS  (File-top level)
"BLD",7081,4,362.5,2,362.5,1,0)
^9.6411^.02^1
"BLD",7081,4,362.5,2,362.5,1,.02,0)
BILL NUMBER
"BLD",7081,4,362.5,222)
y^n^p^^^^n^^n
"BLD",7081,4,362.5,224)

"BLD",7081,4,364.5,0)
364.5
"BLD",7081,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",7081,4,364.5,224)
I $$INCLUDE^IBY400PR(5,Y)
"BLD",7081,4,364.6,0)
364.6
"BLD",7081,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",7081,4,364.6,224)
I $$INCLUDE^IBY400PR(6,Y)
"BLD",7081,4,364.7,0)
364.7
"BLD",7081,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",7081,4,364.7,224)
I $$INCLUDE^IBY400PR(7,Y)
"BLD",7081,4,399,0)
399
"BLD",7081,4,399,2,0)
^9.641^399^1
"BLD",7081,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",7081,4,399,2,399,1,0)
^9.6411^158^14
"BLD",7081,4,399,2,399,1,.08,0)
PTF ENTRY NUMBER
"BLD",7081,4,399,2,399,1,122,0)
PRIMARY PROVIDER #
"BLD",7081,4,399,2,399,1,123,0)
SECONDARY PROVIDER #
"BLD",7081,4,399,2,399,1,124,0)
TERTIARY PROVIDER #
"BLD",7081,4,399,2,399,1,128,0)
PRIMARY ID QUALIFIER
"BLD",7081,4,399,2,399,1,129,0)
SECONDARY ID QUALIFIER
"BLD",7081,4,399,2,399,1,130,0)
TERTIARY ID QUALIFIER
"BLD",7081,4,399,2,399,1,158,0)
TYPE OF ADMISSION
"BLD",7081,4,399,2,399,1,170,0)
PPS
"BLD",7081,4,399,2,399,1,243,0)
SERVICE FACILITY TAXONOMY
"BLD",7081,4,399,2,399,1,249,0)
PRV DIAGNOSIS (1)
"BLD",7081,4,399,2,399,1,250,0)
PRV DIAGNOSIS (2)
"BLD",7081,4,399,2,399,1,251,0)
PRV DIAGNOSIS (3)
"BLD",7081,4,399,2,399,1,252,0)
BILLING PROVIDER TAXONOMY
"BLD",7081,4,399,222)
y^n^p^^^^n^^n
"BLD",7081,4,399,224)

"BLD",7081,4,"APDD",36,36)

"BLD",7081,4,"APDD",36,36,4.07)

"BLD",7081,4,"APDD",36,36,4.11)

"BLD",7081,4,"APDD",36,36,4.12)

"BLD",7081,4,"APDD",36,36,4.13)

"BLD",7081,4,"APDD",350.9,350.9)

"BLD",7081,4,"APDD",350.9,350.9,2.01)

"BLD",7081,4,"APDD",350.9,350.9,2.02)

"BLD",7081,4,"APDD",350.9,350.9,2.03)

"BLD",7081,4,"APDD",350.9,350.9,2.04)

"BLD",7081,4,"APDD",350.9,350.9,2.05)

"BLD",7081,4,"APDD",350.9,350.9,2.06)

"BLD",7081,4,"APDD",350.9,350.9,2.1)

"BLD",7081,4,"APDD",350.9,350.9,11.03)

"BLD",7081,4,"APDD",350.9,350.9004)

"BLD",7081,4,"APDD",350.9,350.9005)

"BLD",7081,4,"APDD",362.3,362.3)

"BLD",7081,4,"APDD",362.3,362.3,.01)

"BLD",7081,4,"APDD",362.3,362.3,.02)

"BLD",7081,4,"APDD",362.3,362.3,.03)

"BLD",7081,4,"APDD",362.4,362.4)

"BLD",7081,4,"APDD",362.4,362.4,.02)

"BLD",7081,4,"APDD",362.5,362.5)

"BLD",7081,4,"APDD",362.5,362.5,.02)

"BLD",7081,4,"APDD",399,399)

"BLD",7081,4,"APDD",399,399,.08)

"BLD",7081,4,"APDD",399,399,122)

"BLD",7081,4,"APDD",399,399,123)

"BLD",7081,4,"APDD",399,399,124)

"BLD",7081,4,"APDD",399,399,128)

"BLD",7081,4,"APDD",399,399,129)

"BLD",7081,4,"APDD",399,399,130)

"BLD",7081,4,"APDD",399,399,158)

"BLD",7081,4,"APDD",399,399,170)

"BLD",7081,4,"APDD",399,399,243)

"BLD",7081,4,"APDD",399,399,249)

"BLD",7081,4,"APDD",399,399,250)

"BLD",7081,4,"APDD",399,399,251)

"BLD",7081,4,"APDD",399,399,252)

"BLD",7081,4,"B",36,36)

"BLD",7081,4,"B",350.8,350.8)

"BLD",7081,4,"B",350.9,350.9)

"BLD",7081,4,"B",362.3,362.3)

"BLD",7081,4,"B",362.4,362.4)

"BLD",7081,4,"B",362.5,362.5)

"BLD",7081,4,"B",364.5,364.5)

"BLD",7081,4,"B",364.6,364.6)

"BLD",7081,4,"B",364.7,364.7)

"BLD",7081,4,"B",399,399)

"BLD",7081,6.3)
52
"BLD",7081,"ABPKG")
n
"BLD",7081,"INI")
IBY400PR
"BLD",7081,"INID")
^y^y
"BLD",7081,"INIT")
IBY400PO
"BLD",7081,"KRN",0)
^9.67PA^8989.52^19
"BLD",7081,"KRN",.4,0)
.4
"BLD",7081,"KRN",.401,0)
.401
"BLD",7081,"KRN",.402,0)
.402
"BLD",7081,"KRN",.402,"NM",0)
^9.68A^5^5
"BLD",7081,"KRN",.402,"NM",1,0)
IB SCREEN82    FILE #399^399^0
"BLD",7081,"KRN",.402,"NM",2,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",7081,"KRN",.402,"NM",3,0)
IB SCREEN6    FILE #399^399^0
"BLD",7081,"KRN",.402,"NM",4,0)
IB SCREEN7    FILE #399^399^0
"BLD",7081,"KRN",.402,"NM",5,0)
IB SCREEN8H    FILE #399^399^0
"BLD",7081,"KRN",.402,"NM","B","IB SCREEN6    FILE #399",3)

"BLD",7081,"KRN",.402,"NM","B","IB SCREEN7    FILE #399",4)

"BLD",7081,"KRN",.402,"NM","B","IB SCREEN82    FILE #399",1)

"BLD",7081,"KRN",.402,"NM","B","IB SCREEN8H    FILE #399",5)

"BLD",7081,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",2)

"BLD",7081,"KRN",.403,0)
.403
"BLD",7081,"KRN",.5,0)
.5
"BLD",7081,"KRN",.84,0)
.84
"BLD",7081,"KRN",3.6,0)
3.6
"BLD",7081,"KRN",3.8,0)
3.8
"BLD",7081,"KRN",9.2,0)
9.2
"BLD",7081,"KRN",9.8,0)
9.8
"BLD",7081,"KRN",9.8,"NM",0)
^9.68A^51^44
"BLD",7081,"KRN",9.8,"NM",1,0)
IBCEF79^^0^B127493813
"BLD",7081,"KRN",9.8,"NM",2,0)
IBCEF73A^^0^B53924008
"BLD",7081,"KRN",9.8,"NM",3,0)
IBCU64^^0^B23323555
"BLD",7081,"KRN",9.8,"NM",4,0)
IBCSC82^^0^B34330595
"BLD",7081,"KRN",9.8,"NM",6,0)
IBCCC2^^0^B68853950
"BLD",7081,"KRN",9.8,"NM",8,0)
IBCEPB^^0^B10650639
"BLD",7081,"KRN",9.8,"NM",9,0)
IBCEF75^^0^B23882452
"BLD",7081,"KRN",9.8,"NM",10,0)
IBCEF76^^0^B37942879
"BLD",7081,"KRN",9.8,"NM",11,0)
IBCEF74A^^0^B23472039
"BLD",7081,"KRN",9.8,"NM",12,0)
IBCEP8^^0^B51555046
"BLD",7081,"KRN",9.8,"NM",13,0)
IBJPS2^^0^B39779249
"BLD",7081,"KRN",9.8,"NM",14,0)
IBJPS^^0^B3592314
"BLD",7081,"KRN",9.8,"NM",15,0)
IBCEU3^^0^B60382991
"BLD",7081,"KRN",9.8,"NM",16,0)
IBCESRV1^^0^B34936723
"BLD",7081,"KRN",9.8,"NM",17,0)
IBCESRV3^^0^B11481181
"BLD",7081,"KRN",9.8,"NM",19,0)
IBCSC4D^^0^B60745629
"BLD",7081,"KRN",9.8,"NM",21,0)
IBCEP2B^^0^B52920482
"BLD",7081,"KRN",9.8,"NM",22,0)
IBCBB^^0^B73522821
"BLD",7081,"KRN",9.8,"NM",23,0)
IBCBB0^^0^B13617325
"BLD",7081,"KRN",9.8,"NM",24,0)
IBCEP2A^^0^B50289544
"BLD",7081,"KRN",9.8,"NM",25,0)
IBJPS3^^0^B89833158
"BLD",7081,"KRN",9.8,"NM",26,0)
IBCSCE^^0^B9045133
"BLD",7081,"KRN",9.8,"NM",27,0)
IBCSC8H^^0^B42537068
"BLD",7081,"KRN",9.8,"NM",28,0)
IBCSC6^^0^B16070928
"BLD",7081,"KRN",9.8,"NM",29,0)
IBCSC7^^0^B7519963
"BLD",7081,"KRN",9.8,"NM",30,0)
IBCEP81^^0^B63919738
"BLD",7081,"KRN",9.8,"NM",31,0)
IBCSCH^^0^B46654544
"BLD",7081,"KRN",9.8,"NM",32,0)
IBCBB11^^0^B25043010
"BLD",7081,"KRN",9.8,"NM",33,0)
IBCSC8B^^0^B41247603
"BLD",7081,"KRN",9.8,"NM",36,0)
IBCEMRAA^^0^B59796110
"BLD",7081,"KRN",9.8,"NM",37,0)
IBCEMRAB^^0^B48715323
"BLD",7081,"KRN",9.8,"NM",38,0)
IBJPS4^^0^B28407182
"BLD",7081,"KRN",9.8,"NM",39,0)
IBCSC4F^^0^B26386041
"BLD",7081,"KRN",9.8,"NM",41,0)
IBCBB21^^0^B13422784
"BLD",7081,"KRN",9.8,"NM",42,0)
IBCSC4^^0^B25396440
"BLD",7081,"KRN",9.8,"NM",43,0)
IBCEF2^^0^B62563812
"BLD",7081,"KRN",9.8,"NM",44,0)
IBCVC^^0^B8498241
"BLD",7081,"KRN",9.8,"NM",45,0)
IBCNSC^^0^B24159861
"BLD",7081,"KRN",9.8,"NM",46,0)
IBCNSC1^^0^B88597979
"BLD",7081,"KRN",9.8,"NM",47,0)
IBCU3^^0^B24794996
"BLD",7081,"KRN",9.8,"NM",48,0)
IBCSC1^^0^B9954436
"BLD",7081,"KRN",9.8,"NM",49,0)
IBCEF31^^0^B8824956
"BLD",7081,"KRN",9.8,"NM",50,0)
IBCNSGE^^0^B96506496
"BLD",7081,"KRN",9.8,"NM",51,0)
IBCNSGM^^0^B42642306
"BLD",7081,"KRN",9.8,"NM","B","IBCBB",22)

"BLD",7081,"KRN",9.8,"NM","B","IBCBB0",23)

"BLD",7081,"KRN",9.8,"NM","B","IBCBB11",32)

"BLD",7081,"KRN",9.8,"NM","B","IBCBB21",41)

"BLD",7081,"KRN",9.8,"NM","B","IBCCC2",6)

"BLD",7081,"KRN",9.8,"NM","B","IBCEF2",43)

"BLD",7081,"KRN",9.8,"NM","B","IBCEF31",49)

"BLD",7081,"KRN",9.8,"NM","B","IBCEF73A",2)

"BLD",7081,"KRN",9.8,"NM","B","IBCEF74A",11)

"BLD",7081,"KRN",9.8,"NM","B","IBCEF75",9)

"BLD",7081,"KRN",9.8,"NM","B","IBCEF76",10)

"BLD",7081,"KRN",9.8,"NM","B","IBCEF79",1)

"BLD",7081,"KRN",9.8,"NM","B","IBCEMRAA",36)

"BLD",7081,"KRN",9.8,"NM","B","IBCEMRAB",37)

"BLD",7081,"KRN",9.8,"NM","B","IBCEP2A",24)

"BLD",7081,"KRN",9.8,"NM","B","IBCEP2B",21)

"BLD",7081,"KRN",9.8,"NM","B","IBCEP8",12)

"BLD",7081,"KRN",9.8,"NM","B","IBCEP81",30)

"BLD",7081,"KRN",9.8,"NM","B","IBCEPB",8)

"BLD",7081,"KRN",9.8,"NM","B","IBCESRV1",16)

"BLD",7081,"KRN",9.8,"NM","B","IBCESRV3",17)

"BLD",7081,"KRN",9.8,"NM","B","IBCEU3",15)

"BLD",7081,"KRN",9.8,"NM","B","IBCNSC",45)

"BLD",7081,"KRN",9.8,"NM","B","IBCNSC1",46)

"BLD",7081,"KRN",9.8,"NM","B","IBCNSGE",50)

"BLD",7081,"KRN",9.8,"NM","B","IBCNSGM",51)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC1",48)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC4",42)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC4D",19)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC4F",39)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC6",28)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC7",29)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC82",4)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC8B",33)

"BLD",7081,"KRN",9.8,"NM","B","IBCSC8H",27)

"BLD",7081,"KRN",9.8,"NM","B","IBCSCE",26)

"BLD",7081,"KRN",9.8,"NM","B","IBCSCH",31)

"BLD",7081,"KRN",9.8,"NM","B","IBCU3",47)

"BLD",7081,"KRN",9.8,"NM","B","IBCU64",3)

"BLD",7081,"KRN",9.8,"NM","B","IBCVC",44)

"BLD",7081,"KRN",9.8,"NM","B","IBJPS",14)

"BLD",7081,"KRN",9.8,"NM","B","IBJPS2",13)

"BLD",7081,"KRN",9.8,"NM","B","IBJPS3",25)

"BLD",7081,"KRN",9.8,"NM","B","IBJPS4",38)

"BLD",7081,"KRN",19,0)
19
"BLD",7081,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",7081,"KRN",19,"NM",1,0)
IBCN INS BILL PROV FLAG RPT^^0
"BLD",7081,"KRN",19,"NM",2,0)
IBCNSRVBP^^0
"BLD",7081,"KRN",19,"NM","B","IBCN INS BILL PROV FLAG RPT",1)

"BLD",7081,"KRN",19,"NM","B","IBCNSRVBP",2)

"BLD",7081,"KRN",19.1,0)
19.1
"BLD",7081,"KRN",101,0)
101
"BLD",7081,"KRN",101,"NM",0)
^9.68A^9^8
"BLD",7081,"KRN",101,"NM",1,0)
IBJP IB PAY-TO PROVIDERS MENU^^0
"BLD",7081,"KRN",101,"NM",2,0)
IBJP IB PAY-TO PROVIDER ADD^^0
"BLD",7081,"KRN",101,"NM",3,0)
IBJP IB PAY-TO PROVIDER DEL^^0
"BLD",7081,"KRN",101,"NM",4,0)
IBJP IB PAY-TO PROVIDER EDIT^^0
"BLD",7081,"KRN",101,"NM",5,0)
IBJP IB PAY-TO PROVIDER DIVISIONS^^0
"BLD",7081,"KRN",101,"NM",6,0)
VALM QUIT^^0
"BLD",7081,"KRN",101,"NM",7,0)
IBJP IB PAY-TO DIVISION ADD^^0
"BLD",7081,"KRN",101,"NM",9,0)
IBJP IB PAY-TO ASSOCIATIONS MENU^^0
"BLD",7081,"KRN",101,"NM","B","IBJP IB PAY-TO ASSOCIATIONS MENU",9)

"BLD",7081,"KRN",101,"NM","B","IBJP IB PAY-TO DIVISION ADD",7)

"BLD",7081,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDER ADD",2)

"BLD",7081,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDER DEL",3)

"BLD",7081,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDER DIVISIONS",5)

"BLD",7081,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDER EDIT",4)

"BLD",7081,"KRN",101,"NM","B","IBJP IB PAY-TO PROVIDERS MENU",1)

"BLD",7081,"KRN",101,"NM","B","VALM QUIT",6)

"BLD",7081,"KRN",409.61,0)
409.61
"BLD",7081,"KRN",409.61,"NM",0)
^9.68A^2^2
"BLD",7081,"KRN",409.61,"NM",1,0)
IBJP IB PAY-TO PROVIDERS^^0
"BLD",7081,"KRN",409.61,"NM",2,0)
IBJP IB PAY-TO ASSOCIATIONS^^0
"BLD",7081,"KRN",409.61,"NM","B","IBJP IB PAY-TO ASSOCIATIONS",2)

"BLD",7081,"KRN",409.61,"NM","B","IBJP IB PAY-TO PROVIDERS",1)

"BLD",7081,"KRN",771,0)
771
"BLD",7081,"KRN",870,0)
870
"BLD",7081,"KRN",8989.51,0)
8989.51
"BLD",7081,"KRN",8989.52,0)
8989.52
"BLD",7081,"KRN",8994,0)
8994
"BLD",7081,"KRN","B",.4,.4)

"BLD",7081,"KRN","B",.401,.401)

"BLD",7081,"KRN","B",.402,.402)

"BLD",7081,"KRN","B",.403,.403)

"BLD",7081,"KRN","B",.5,.5)

"BLD",7081,"KRN","B",.84,.84)

"BLD",7081,"KRN","B",3.6,3.6)

"BLD",7081,"KRN","B",3.8,3.8)

"BLD",7081,"KRN","B",9.2,9.2)

"BLD",7081,"KRN","B",9.8,9.8)

"BLD",7081,"KRN","B",19,19)

"BLD",7081,"KRN","B",19.1,19.1)

"BLD",7081,"KRN","B",101,101)

"BLD",7081,"KRN","B",409.61,409.61)

"BLD",7081,"KRN","B",771,771)

"BLD",7081,"KRN","B",870,870)

"BLD",7081,"KRN","B",8989.51,8989.51)

"BLD",7081,"KRN","B",8989.52,8989.52)

"BLD",7081,"KRN","B",8994,8994)

"BLD",7081,"QUES",0)
^9.62^^
"BLD",7081,"REQB",0)
^9.611^9^7
"BLD",7081,"REQB",2,0)
IB*2.0*391^2
"BLD",7081,"REQB",3,0)
IB*2.0*191^2
"BLD",7081,"REQB",5,0)
IB*2.0*403^2
"BLD",7081,"REQB",6,0)
IB*2.0*402^2
"BLD",7081,"REQB",7,0)
IB*2.0*414^2
"BLD",7081,"REQB",8,0)
IB*2.0*384^2
"BLD",7081,"REQB",9,0)
IB*2.0*399^2
"BLD",7081,"REQB","B","IB*2.0*191",3)

"BLD",7081,"REQB","B","IB*2.0*384",8)

"BLD",7081,"REQB","B","IB*2.0*391",2)

"BLD",7081,"REQB","B","IB*2.0*399",9)

"BLD",7081,"REQB","B","IB*2.0*402",6)

"BLD",7081,"REQB","B","IB*2.0*403",5)

"BLD",7081,"REQB","B","IB*2.0*414",7)

"DATA",350.8,97,0)
IB097^Address Line 1, City, State and ZIP are required for Division.^IB097^1^3
"DATA",350.8,275,0)
IB309^Bills with more than 24 other diagnoses must be printed locally.^IB309^1^3
"DATA",350.8,304,0)
IB326^Secondary Claim must be printed - over 24 OTHER diagnoses on claim^IB326^1^3
"DATA",350.8,385,0)
IB140^This claim has no Billing Provider.^IB140^1^1
"DATA",350.8,386,0)
IB177^No Pay-to Provider defined for this claim.^IB177^1^1
"DATA",350.8,387,0)
IB178^Pay-to Provider on the claim is missing a name.^IB178^1^1
"DATA",350.8,388,0)
IB179^Pay-to Provider on the claim is missing an NPI.^IB179^1^1
"DATA",350.8,389,0)
IB180^Pay-to Provider on the claim is missing a Tax ID number.^IB180^1^1
"DATA",350.8,390,0)
IB181^Address Line 1, City, State, and ZIP are required for Pay-to Provider.^IB181^1^1
"DATA",350.8,391,0)
IB148^Address Line 1, City, State, and ZIP are required for Billing Provider.^IB148^1^1
"DATA",364.5,85,0)
N-ADMITTING DIAGNOSIS^N^E^I^399^^^
"DATA",364.5,85,1)
S IBXDATA=+$G(^DGCR(399,IBXIEN,"U2")),IBXDATA=$S(IBXDATA:$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U),1:"")
"DATA",364.5,85,3,0)
^^1^1^3070220^
"DATA",364.5,85,3,1,0)
The admitting diagnosis for bill entry IBXIEN.
"DATA",364.5,96,0)
N-BILLING PROVIDER^N^E^I^399^^^
"DATA",364.5,96,1)
S IBXDATA=$$B^IBCEF79(IBXIEN)
"DATA",364.5,96,3,0)
^^13^13^3080829^
"DATA",364.5,96,3,1,0)
This data element determines the billing provider and service facility 
"DATA",364.5,96,3,2,0)
information as defined with IB patch 400.
"DATA",364.5,96,3,3,0)
This function returns a string in the following format:
"DATA",364.5,96,3,4,0)
 [1] billing provider Institution file pointer (IEN to file 4) or "0"
"DATA",364.5,96,3,5,0)
     if the billing provider cannot be determined
"DATA",364.5,96,3,6,0)
 [2] billing provider name (.01 field in file 4) or Error reason why
"DATA",364.5,96,3,7,0)
     the billing provider cannot be determined - used when piece [1]=0
"DATA",364.5,96,3,8,0)
 [3] 0 if the service facility is a VA institution in file 4
"DATA",364.5,96,3,9,0)
     1 if the service facility is a non-VA facility in file 355.93
"DATA",364.5,96,3,10,0)
     "" if the service facility is blank - when there is no service
"DATA",364.5,96,3,11,0)
     facility
"DATA",364.5,96,3,12,0)
 [4] service facility IEN - either an IEN to file 4 or to file 355.93
"DATA",364.5,96,3,13,0)
     or "" if the service facility is blank
"DATA",364.5,195,0)
N-ALL INSURANCE CO PROV NUM^N^E^G^399^^^
"DATA",364.5,195,1)
N Z,Q,R S Q=$P($G(^DGCR(399,IBXIEN,"M1")),U,2,4),R=$P($G(^IBE(350.9,1,1)),U,5) F Z=1:1:3 I $D(^DGCR(399,IBXIEN,"I"_Z)) S IBXDATA(Z)=$S($P(Q,U,Z)'="":$P(Q,U,Z),1:R)
"DATA",364.5,195,3,0)
^^4^4^3081014^
"DATA",364.5,195,3,1,0)
Extracts the primary, secondary, and tertiary insurance company provider
"DATA",364.5,195,3,2,0)
numbers into the IBXDATA(1),(2),(3) array for bill entry IBXIEN.
"DATA",364.5,195,3,3,0)
If the # does not exist use the site's Tax id number from the
"DATA",364.5,195,3,4,0)
site parameters file (350.9)
"DATA",364.5,230,0)
N-BILLING SITE^N^E^I^399^^^
"DATA",364.5,230,1)
N Z,Z0 S Z=$P($G(^DGCR(399,IBXIEN,0)),U,22),Z0=+$$SITE^VASITE(),IBXDATA=$$SITE^VASITE(DT,$S(Z:Z,1:+$$PRIM^VASITE(DT))) S $P(IBXDATA,U,4)=$S(+IBXDATA=Z0:"",1:1)
"DATA",364.5,230,3,0)
^364.53^5^5^3081013^^^^
"DATA",364.5,230,3,1,0)
If the bill has a division associated with it, retrieve the data associated
"DATA",364.5,230,3,2,0)
with the division, otherwise, the facility's data is retrieved.
"DATA",364.5,230,3,3,0)
The data format is:
"DATA",364.5,230,3,4,0)
    IBXDATA=institution file ien^name^site number (including suffix)
"DATA",364.5,230,3,5,0)
            ^ 1 if not main facility
"DATA",364.6,45,0)
8^N^^50^1^^0^3^1^Facility Type Code (Inst)^^1^^
"DATA",364.6,166,0)
8^N^^50^1^^0^33^10^Facility Type Code (Prof)^^1^^
"DATA",364.6,174,0)
8^N^^55^1^^0^6^9^Lab/Facility ZIP Code^^1
"DATA",364.6,180,0)
8^N^^15^1^^0^7^9^Billing Prov ZIP Code^^1^0
"DATA",364.6,193,0)
8^N^^9.99^1^^0^.9^^SET BATCH HDR NODE^1^1^^^^
"DATA",364.6,1501,0)
2^N^^1^59^^1^23^26^SERVICE FACILITY NAME (BX-32/LINE 1)^^
"DATA",364.6,1502,0)
2^N^^1^59^^1^50^29^BILLING PROVIDER NAME (BX-33/LN 2)^^
"DATA",364.6,1504,0)
2^N^^1^58^^1^23^^GET BILL PROV/SVC FAC - CALC ONLY^1
"DATA",364.6,1505,0)
2^N^^1^62^^1^79^^IBXSAVE CLEAN-UP BX 33^1
"DATA",364.6,1506,0)
2^N^^1^60^^1^23^26^SERVICE FAC ADR LINE 1 (BX-32/LN 2)^^
"DATA",364.6,1507,0)
2^N^^1^60^^1^50^29^BILLING PROVIDER ADDR (BX-33/LN 3)^^
"DATA",364.6,1509,0)
2^N^^1^61^^1^23^26^SERVICE FAC CITY/ST/ZIP (BX-32/LN 3)^^
"DATA",364.6,1513,0)
2^N^^1^61^^1^50^29^BILL PROV CITY/ST/ZIP (BX-33/LN 4)^^
"DATA",364.6,1560,0)
3^N^^1^2^^1^27^24^Pay-to Provider Name (FL-2/1)^^
"DATA",364.6,1561,0)
3^N^^1^3^^1^26^25^Pay-to Provider Address (FL-2/2)^^
"DATA",364.6,1562,0)
3^N^^1^4^^1^26^16^Pay-to Provider City (FL-2/3/1)^^
"DATA",364.6,1563,0)
3^N^^1^4^^1^43^2^Pay-to Provider State (FL-2/3/2)^^
"DATA",364.6,1564,0)
3^N^^1^4^^1^46^5^Pay-to Provider Zip (FL-2/3/3)^^
"DATA",364.6,1710,0)
3^N^^1^56^^1^43^4^PPS CODE (FL-71)^^
"DATA",364.6,1724,0)
3^N^^1^2^^1^26^^GATHER PAY-TO PROVIDER DATA FOR FL-2^1
"DATA",364.6,1910,0)
8^N^^15^1^^0^2.5^^GET BILLING PROVIDER - CALC ONLY^1^1^^
"DATA",364.6,1911,0)
8^N^^15^1^^0^99^^IBXSAVE CLEAN-UP PRV^1^1^^
"DATA",364.6,1912,0)
8^N^^51^1^^0^13^2^Code List Qualifier Code (DR)^0^1^^
"DATA",364.6,1913,0)
8^N^^51^1^^0^14^5^Industry Code (PPS)^0^1^^
"DATA",364.6,1914,0)
8^N^^104.5^1^^0^18^10^Pay-to Prov NPI Code^^1
"DATA",364.6,1915,0)
8^N^^55^1^^0^1.5^^GET SERVICE FACILITY INFO (CALC ONLY)^1^1
"DATA",364.6,1916,0)
8^N^^55^1^^0^99^^IBXSAVE CLEAN-UP SUB^1^1
"DATA",364.6,1917,0)
8^N^^51^1^^0^17^2^Patient Reason for Visit Qualifier (1)^0^1
"DATA",364.6,1918,0)
8^N^^51^1^^0^18^10^Patient Reason for Visit (1)^0^1
"DATA",364.6,1919,0)
8^N^^51^1^^0^19^2^Patient Reason for Visit Qualifier (2)^0^1
"DATA",364.6,1920,0)
8^N^^51^1^^0^20^10^Patient Reason for Visit (2)^0^1
"DATA",364.6,1921,0)
8^N^^51^1^^0^21^2^Patient Reason for Visit Qualifier (3)^0^1
"DATA",364.6,1922,0)
8^N^^51^1^^0^22^10^Patient Reason for Visit (3)^0^1
"DATA",364.6,1923,0)
8^N^^16^1^^0^1^4^RECORD ID 'PRV1'^^1
"DATA",364.6,1924,0)
8^N^^16^1^^0^1.5^^GET PAY-TO PROVIDER DATA^1^1
"DATA",364.6,1925,0)
8^N^^16^1^^0^2^2^Entity ID Code^^1
"DATA",364.6,1926,0)
8^N^^16^1^^0^3^1^Entity Type Qualifier^^1
"DATA",364.6,1927,0)
8^N^^16^1^^0^4^35^Pay-to Provider Organization Name^^1
"DATA",364.6,1928,0)
8^N^^16^1^^0^5^2^ID Code Qualifier^^1
"DATA",364.6,1929,0)
8^N^^16^1^^0^6^17^Pay-to Provider Primary ID^^1
"DATA",364.6,1930,0)
8^N^^16^1^^0^7^55^Pay-To Provider Address 1^^1
"DATA",364.6,1931,0)
8^N^^16^1^^0^8^55^Pay-To Provider Address 2^^1
"DATA",364.6,1932,0)
8^N^^16^1^^0^9^30^Pay-To Provider City Name^^1
"DATA",364.6,1933,0)
8^N^^16^1^^0^10^2^Pay-To Provider State Code^^1
"DATA",364.6,1934,0)
8^N^^16^1^^0^11^15^Pay-To Provider ZIP Code^^1
"DATA",364.6,1935,0)
8^N^^51^1^^0^15^2^Code List Qualifier Code (BJ)^^1
"DATA",364.6,1936,0)
8^N^^51^1^^0^16^10^Industry Code (Admitting DX)^^1
"DATA",364.7,6,0)
3^N^5^^^^N
"DATA",364.7,6,1)
S IBXDATA=$G(IBXSAVE("PRV-BP","ADDR2"))
"DATA",364.7,6,3,0)
^364.73^2^2^3090213^^
"DATA",364.7,6,3,1,0)
PRV-11
"DATA",364.7,6,3,2,0)
Billing provider address line 2
"DATA",364.7,27,0)
92^N^86^^^^N
"DATA",364.7,27,1)
N A,C,R,Z M A=IBXDATA S (Z,R)=0,C=1 K IBXDATA F  S Z=$O(A(Z)) Q:'Z  S A=$TR($P($$ICD9^IBACSV(+A(Z),$$BDATE^IBACSV(IBXIEN)),U),".") I A'="" D ID1^IBCEF2(.R,.A,.C) Q:C=""  I A'="" S IBXDATA(R)=A
"DATA",364.7,27,3,0)
^364.73^9^9^3040303^^^^
"DATA",364.7,27,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,27,3,2,0)
possible for the data element in the IBXDATA array.  Each diagnosis code
"DATA",364.7,27,3,3,0)
name is stripped of its decimal point and is output on its own DCn entry
"DATA",364.7,27,3,4,0)
where n is a record count that will allow it to be mapped into one of the
"DATA",364.7,27,3,5,0)
12 available pieces of the 837 diagnosis code record correctly.  This is
"DATA",364.7,27,3,6,0)
done to accommodate Austin's translator and one of its shortcomings.  Save
"DATA",364.7,27,3,7,0)
off the extract sequence # of each diagnosis output in the global array
"DATA",364.7,27,3,8,0)
^TMP("IBXSAVE",$J,"DX") for later use.
"DATA",364.7,27,3,9,0)
Z>4 ADDED TO PREVENT SENDING MORE THAN 4 DIAG CODES (BL)
"DATA",364.7,132,0)
166^N^5^^^^N
"DATA",364.7,132,1)
N IBZ,W,DEFPOS,POS,HOF D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZ",,IBXIEN) S DEFPOS="",W=0 X "F  S W=$O(IBZ(W)) Q:'W  S POS=$P($G(IBZ(W)),U,3),HOF=(POS=11!(POS=12)) S:DEFPOS=""""!HOF DEFPOS=POS Q:HOF" S IBXDATA=DEFPOS
"DATA",364.7,132,3,0)
^^13^13^3090217^
"DATA",364.7,132,3,1,0)
For professional claims only, this is the claim level place of service 
"DATA",364.7,132,3,2,0)
code.   IB patch 400 changes.
"DATA",364.7,132,3,3,0)
 
"DATA",364.7,132,3,4,0)
Build the array with all professional line items (IBZ array).
"DATA",364.7,132,3,5,0)
Loop through the line items looking for POS code of 11 or 12 (home or 
"DATA",364.7,132,3,6,0)
office).  If either 11 or 12 is found, then use that POS code as the 
"DATA",364.7,132,3,7,0)
claim level POS code.   If neither 11 nor 12 is found in the line level 
"DATA",364.7,132,3,8,0)
POS codes, then use the first POS code found in the line items as the 
"DATA",364.7,132,3,9,0)
claim level POS code.
"DATA",364.7,132,3,10,0)
 
"DATA",364.7,132,3,11,0)
Previous to IB patch 400, this field was the admitting DX. The admitting
"DATA",364.7,132,3,12,0)
DX and qualifier is now sent in CL1A-15 (Qualifier) and CL1A-16 (Admitting
"DATA",364.7,132,3,13,0)
DX code).
"DATA",364.7,145,0)
178^N^5^^^^N
"DATA",364.7,145,1)
S IBXDATA=$G(IBXSAVE("PRV-BP","ADDR1"))
"DATA",364.7,145,3,0)
^364.73^2^2^3090213^^^
"DATA",364.7,145,3,1,0)
PRV-4
"DATA",364.7,145,3,2,0)
Billing provider address line 1
"DATA",364.7,146,0)
181^N^5^^^^N
"DATA",364.7,146,1)
S IBXDATA=$G(IBXSAVE("PRV-BP","CITY")) I IBXDATA'="" S IBXDATA=$TR(IBXDATA,"-/.,()'","  ")
"DATA",364.7,146,3,0)
^^4^4^3090213^
"DATA",364.7,146,3,1,0)
PRV-5
"DATA",364.7,146,3,2,0)
Billing provider city name
"DATA",364.7,146,3,3,0)
Get the city name from the IBXSAVE array, then strip out the
"DATA",364.7,146,3,4,0)
standard city punctuation marks - converting "-" and "/" to spaces.
"DATA",364.7,147,0)
179^N^5^^^^N
"DATA",364.7,147,1)
S IBXDATA=$G(IBXSAVE("PRV-BP","ST"))
"DATA",364.7,147,3,0)
^364.73^2^2^3090213^^^^
"DATA",364.7,147,3,1,0)
PRV-6
"DATA",364.7,147,3,2,0)
Get 2 character state code.
"DATA",364.7,148,0)
180^N^5^^^^N
"DATA",364.7,148,1)
S IBXDATA=$G(IBXSAVE("PRV-BP","ZIP")),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,148,3,0)
^364.73^2^2^3090213^^^
"DATA",364.7,148,3,1,0)
PRV-7
"DATA",364.7,148,3,2,0)
Billing provider zip code
"DATA",364.7,149,0)
183^N^5^^^^N
"DATA",364.7,149,1)
S IBXDATA=$G(IBXSAVE("PRV-BP","PHONE")) I IBXDATA'="" S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,149,3,0)
^^3^3^3090213^
"DATA",364.7,149,3,1,0)
PRV-8
"DATA",364.7,149,3,2,0)
Billing provider phone#
"DATA",364.7,149,3,3,0)
Use the pay-to provider phone# and strip all punctuation.
"DATA",364.7,150,0)
182^N^109^^^^N
"DATA",364.7,150,1)
S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,150,3,0)
^364.73^3^3^3080829^^^^
"DATA",364.7,150,3,1,0)
PRV-9
"DATA",364.7,150,3,2,0)
Don't output data element if its value is null.  Must strip dashes from
"DATA",364.7,150,3,3,0)
number to pass numeric edits.
"DATA",364.7,156,0)
170^N^5^^^^N
"DATA",364.7,156,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("SERVFACDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),0)
"DATA",364.7,156,3,0)
^^1^1^3080929^
"DATA",364.7,156,3,1,0)
SUB-2  lab/facility name
"DATA",364.7,157,0)
171^N^5^^^^N
"DATA",364.7,157,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("SERVFACDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),1)
"DATA",364.7,157,3,0)
^^1^1^3080929^
"DATA",364.7,157,3,1,0)
SUB-3  lab/facility address line 1
"DATA",364.7,159,0)
173^N^5^^^^N
"DATA",364.7,159,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("SERVFACDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),"3S")
"DATA",364.7,159,3,0)
^^1^1^3080929^
"DATA",364.7,159,3,1,0)
SUB-5  lab/facility state code
"DATA",364.7,160,0)
174^N^5^^^^N
"DATA",364.7,160,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("SERVFACDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),"3Z"),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,160,3,0)
^^1^1^3090429^
"DATA",364.7,160,3,1,0)
SUB-6  lab/facility zip code
"DATA",364.7,199,0)
209^N^131^^^^N
"DATA",364.7,199,1)
S IBXDATA="PRV "
"DATA",364.7,199,3,0)
^^1^1^3080828^
"DATA",364.7,199,3,1,0)
PRV-1.  Literal "PRV ".
"DATA",364.7,203,0)
1039^N^5^^^^N^0
"DATA",364.7,203,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("SERVFACDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),2)
"DATA",364.7,203,3,0)
^^1^1^3080929^
"DATA",364.7,203,3,1,0)
SUB-12  lab/facility address line 2
"DATA",364.7,390,0)
172^N^5^^^^N
"DATA",364.7,390,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("SERVFACDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),"3C"),IBXDATA=$TR(IBXDATA,"-/.,()'","  ")
"DATA",364.7,390,3,0)
^^1^1^3080929^
"DATA",364.7,390,3,1,0)
SUB-4  lab/facility city name
"DATA",364.7,392,0)
1195^N^5^^^^N
"DATA",364.7,392,1)
S IBXDATA="" I $$SUB1OK^IBCEP8A(IBXIEN),$G(IBXSAVE("PSIDQ")) S IBXDATA=24 K IBXSAVE("PSIDQ")
"DATA",364.7,392,3,0)
^^5^5^3090625^
"DATA",364.7,392,3,1,0)
For purchased services, must pass checks in $$SUB1OK.  If true, then 
"DATA",364.7,392,3,2,0)
always 24 qualifer.
"DATA",364.7,392,3,3,0)
 
"DATA",364.7,392,3,4,0)
esg - 6/25/09 - IB*2*400 - Tie SUB-9 and SUB-13 together as an
"DATA",364.7,392,3,5,0)
ID/qualifier pair for purchased services.
"DATA",364.7,945,0)
177^N^5^^^^N
"DATA",364.7,945,1)
S IBXDATA=$G(IBXSAVE("PRV-BP","NAME"))
"DATA",364.7,945,3,0)
^364.73^2^2^3090213^^
"DATA",364.7,945,3,1,0)
PRV-3
"DATA",364.7,945,3,2,0)
Billing provider name
"DATA",364.7,948,0)
971^N^5^^^^N
"DATA",364.7,948,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  K IBXSAVE("PSIDQ") S IBXDATA=$$EIN^IBCEP8A(IBXIEN),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1) I $L(IBXDATA) S IBXSAVE("PSIDQ")=1
"DATA",364.7,948,3,0)
^^5^5^3090625^
"DATA",364.7,948,3,1,0)
SUB-9  lab/facility primary ID#
"DATA",364.7,948,3,2,0)
Remove punctuation from the returned tax ID number.
"DATA",364.7,948,3,3,0)
 
"DATA",364.7,948,3,4,0)
esg - 6/25/09 - IB*2*400 - Tie SUB-9 and SUB-13 together as an 
"DATA",364.7,948,3,5,0)
ID/qualifier pair for purchased services.
"DATA",364.7,949,0)
972^N^273^^^^N
"DATA",364.7,949,1)
I '$$SUB1OK^IBCEP8A(IBXIEN) K IBXDATA
"DATA",364.7,949,3,0)
^^15^15^3081014^
"DATA",364.7,949,3,1,0)
The data element calls N-PURCHASED SERVICE TYPE which extracts the NON-VA 
"DATA",364.7,949,3,2,0)
CARE TYPE field from the claim (399,233).
"DATA",364.7,949,3,3,0)
 
"DATA",364.7,949,3,4,0)
1:FEE BASIS, NON-LAB
"DATA",364.7,949,3,5,0)
2:FEE BASIS, LAB
"DATA",364.7,949,3,6,0)
3:NON-FEE BASIS, NON-LAB
"DATA",364.7,949,3,7,0)
4:NON-FEE BASIS, LAB
"DATA",364.7,949,3,8,0)
 
"DATA",364.7,949,3,9,0)
Austin uses this field for professional claims only.  If the value is 1 
"DATA",364.7,949,3,10,0)
or 2 then Austin populates the purchased service loop 2310C.
"DATA",364.7,949,3,11,0)
 
"DATA",364.7,949,3,12,0)
Invoke the $$SUB1OK function to determine if this claim is for purchased 
"DATA",364.7,949,3,13,0)
services.  If $$SUB1OK is true, then leave the value of IBXDATA alone as 
"DATA",364.7,949,3,14,0)
extracted from the data element.  But if $$SUB1OK is false, then kill 
"DATA",364.7,949,3,15,0)
IBXDATA to make this field blank.
"DATA",364.7,954,0)
968^N^5^^^^N
"DATA",364.7,954,1)
K IBXDATA
"DATA",364.7,954,3,0)
^364.73^1^1^3080828^^^^
"DATA",364.7,954,3,1,0)
IB patch 320.  Move the data in this field to CI1A-3.
"DATA",364.7,1015,0)
1014^N^5^^^^N
"DATA",364.7,1015,1)
S IBXDATA="400.0" I '$$PROD^XUPROD(1) S $E(IBXDATA,11)="D"
"DATA",364.7,1015,3,0)
^364.73^7^7^3060807^^^^
"DATA",364.7,1015,3,1,0)
This field contains the VistA IB patch# that pertains to the
"DATA",364.7,1015,3,2,0)
applicable changes in the claim map.  Austin uses this field to determine
"DATA",364.7,1015,3,3,0)
which set of EDI claim maps to use when processing the EDI claims.
"DATA",364.7,1015,3,4,0)

"DATA",364.7,1015,3,5,0)
If the EDI claims are being transmitted from a non-production account,
"DATA",364.7,1015,3,6,0)
then the "D" in the 11th position indicates to Austin that it is test
"DATA",364.7,1015,3,7,0)
data.
"DATA",364.7,1054,0)
1336^N^5^^^^N
"DATA",364.7,1054,1)
I $$SUB1OK^IBCEP8A(IBXIEN) S IBXDATA=$P($G(IBXSAVE("ORGNPI")),U,2)
"DATA",364.7,1055,0)
1337^N^5^^^^N
"DATA",364.7,1055,1)
I $$SUB1OK^IBCEP8A(IBXIEN) S IBXDATA=$P($G(IBXSAVE("ORGTAX")),U,2)
"DATA",364.7,1056,0)
1338^N^5^^^^N
"DATA",364.7,1056,1)
I $$SENDSF^IBCEF79(IBXIEN) S IBXDATA=$P($G(IBXSAVE("ORGNPI")),U,1)
"DATA",364.7,1056,3,0)
^^8^8^3090223^
"DATA",364.7,1056,3,1,0)
NPI-16
"DATA",364.7,1056,3,2,0)
Lab/Facility (service facility) NPI#.  The format code for NPI-12 builds 
"DATA",364.7,1056,3,3,0)
the IBXSAVE("ORGNPI") string using $$ORGNPI^IBCEF73A.  This function 
"DATA",364.7,1056,3,4,0)
contains the new billing provider/service facility function call.  The 
"DATA",364.7,1056,3,5,0)
service facility NPI is placed into [1] of this string.
"DATA",364.7,1056,3,6,0)
 
"DATA",364.7,1056,3,7,0)
Also add a call to the $$SENDSF function to account for the 
"DATA",364.7,1056,3,8,0)
pre-patch 400 switchback mode usage of the 36,4.07 ins. co. field.
"DATA",364.7,1057,0)
1339^N^5^^^^N
"DATA",364.7,1057,1)
I $$SENDSF^IBCEF79(IBXIEN) S IBXDATA=$P($G(IBXSAVE("ORGTAX")),U,1)
"DATA",364.7,1057,3,0)
^^5^5^3090223^
"DATA",364.7,1057,3,1,0)
NPI-17
"DATA",364.7,1057,3,2,0)
Lab/Facility Taxonomy code
"DATA",364.7,1057,3,3,0)
 
"DATA",364.7,1057,3,4,0)
Also add a call to the $$SENDSF function to account for the
"DATA",364.7,1057,3,5,0)
pre-patch 400 switchback mode usage of the 36,4.07 ins. co. field.
"DATA",364.7,1100,0)
1400^N^142^^^^N
"DATA",364.7,1100,1)
N Z S Z=$J("",+$P($G(^IBE(350.9,1,1)),U,27)),IBXDATA=Z_IBXDATA K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),IBXSAVE S ^TMP("IB 1500 PRINT",$J,IBXIEN)=1
"DATA",364.7,1100,3,0)
^^6^6^3090330^
"DATA",364.7,1100,3,1,0)
Move the text over to the column specified in the 1500 ADDRESS COLUMN
"DATA",364.7,1100,3,2,0)
parameter (file 350.9, field 1.27).  Also initialize utility globals
"DATA",364.7,1100,3,3,0)
and variables used in this form.
"DATA",364.7,1100,3,4,0)
 
"DATA",364.7,1100,3,5,0)
3/30/09 - IB patch 400 - Set the claim into the scratch global which 
"DATA",364.7,1100,3,6,0)
indicates this claim is currently being printed as a CMS-1500 claim form.
"DATA",364.7,1173,0)
1473^N^86^^^^N
"DATA",364.7,1173,1)
N IB M IB=IBXDATA K IBXDATA D DXSV^IBCEF31(.IB,.IBXSAVE) S IBXDATA=$P($$ICD9^IBACSV(+$G(IBXSAVE("DX",1)),$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(1,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1173,3,0)
^364.73^4^4^3060717^^^^
"DATA",364.7,1173,3,1,0)
Save the diagnoses in the IBXSAVE array for later use. Output the
"DATA",364.7,1173,3,2,0)
diagnosis code for the first diagnosis. Check for any diagnosis codes
"DATA",364.7,1173,3,3,0)
that should display in the first position on pages subsequent to page 1
"DATA",364.7,1173,3,4,0)
and output them.
"DATA",364.7,1174,0)
1474^N^163^^^^N
"DATA",364.7,1174,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(3,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1174,3,0)
^364.73^3^3^3060717^^^^
"DATA",364.7,1174,3,1,0)
Output the third diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,1174,3,2,0)
display in the third position on pages subsequent to page 1 and output
"DATA",364.7,1174,3,3,0)
them.
"DATA",364.7,1177,0)
1477^N^162^^^^N
"DATA",364.7,1177,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(2,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE)
"DATA",364.7,1177,3,0)
^364.73^3^3^3060717^^^^
"DATA",364.7,1177,3,1,0)
Output the second diagnosis code.  Check for any diagnosis codes that should
"DATA",364.7,1177,3,2,0)
display in the second position on pages subsequent to page 1 and output
"DATA",364.7,1177,3,3,0)
them.
"DATA",364.7,1178,0)
1478^N^164^^^^N
"DATA",364.7,1178,1)
S IBXDATA=$P($$ICD9^IBACSV(+IBXDATA,$$BDATE^IBACSV(IBXIEN)),U) D PGDX^IBCEF31(4,IBX0,IBXDA,IBXLN,IBXCOL,.IBXSIZE,.IBXSAVE) K IBXSAVE("DX")
"DATA",364.7,1178,3,0)
^364.73^3^3^3060717^^^^
"DATA",364.7,1178,3,1,0)
Output the forth diagnosis code. Check for any diagnosis codes that should
"DATA",364.7,1178,3,2,0)
display in the forth position on pages subsequent to page 1 and output
"DATA",364.7,1178,3,3,0)
them.
"DATA",364.7,1200,0)
1500^N^5^^^^N
"DATA",364.7,1200,1)
N IBZ S IBXDATA=$G(IBXSAVE("BOX33","PHONE")),IBZ=$$NOPUNCT^IBCEF(IBXDATA,1),IBXDATA=$S(IBZ?10N:($E(IBZ,1,3)_" "_$E(IBZ,4,6)_"-"_$E(IBZ,7,10)),1:$J(IBXDATA,13))
"DATA",364.7,1200,3,0)
^364.73^5^5^3090213^^
"DATA",364.7,1200,3,1,0)
Billing provider phone number, CMS-1500, Box 33, upper right hand corner.
"DATA",364.7,1200,3,2,0)
 
"DATA",364.7,1200,3,3,0)
This is actually the Pay-To Provider phone number.
"DATA",364.7,1200,3,4,0)
 
"DATA",364.7,1200,3,5,0)
IB*2*400 changes.
"DATA",364.7,1201,0)
1501^N^5^^^^N
"DATA",364.7,1201,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("BPSFDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),0)
"DATA",364.7,1201,3,0)
^^2^2^3081001^
"DATA",364.7,1201,3,1,0)
esg - 10/1/08 - IB*2*400 - Print the service facility name only if there 
"DATA",364.7,1201,3,2,0)
is a service facility for the claim
"DATA",364.7,1202,0)
1502^N^5^^^^N
"DATA",364.7,1202,1)
S IBXDATA=$G(IBXSAVE("BOX33","NAME"))
"DATA",364.7,1202,3,0)
^^1^1^3090213^
"DATA",364.7,1202,3,1,0)
Billing provider name - Box 33 on the CMS-1500.
"DATA",364.7,1204,0)
1504^N^96^^^^N
"DATA",364.7,1204,1)
N Z S Z=$P(IBXDATA,U,3),IBXSAVE("SERVFACFLAG")=$S(Z="":0,1:1),IBXSAVE("BPSFDATA")=IBXDATA D GETBP^IBCEF79(IBXIEN,"",+IBXDATA,"BOX33",.IBXSAVE)
"DATA",364.7,1204,3,0)
^^12^12^3090213^
"DATA",364.7,1204,3,1,0)
Calculate only field to populate boxes 32 and 33 on the CMS-1500 claim 
"DATA",364.7,1204,3,2,0)
form.  The data element call to N-BILLING PROVIDER will save information 
"DATA",364.7,1204,3,3,0)
about the service facility and the billing provider for this claim.
"DATA",364.7,1204,3,4,0)
 
"DATA",364.7,1204,3,5,0)
IBXSAVE("SERVFACFLAG") is a 0/1 flag indicating if there is a service 
"DATA",364.7,1204,3,6,0)
facility for this claim.
"DATA",364.7,1204,3,7,0)
 
"DATA",364.7,1204,3,8,0)
IBXSAVE("BPSFDATA") is the string of information returned by the 
"DATA",364.7,1204,3,9,0)
$$B^IBCEF79 function call.
"DATA",364.7,1204,3,10,0)
 
"DATA",364.7,1204,3,11,0)
The IBXSAVE("BOX33") array elements will be built with information about 
"DATA",364.7,1204,3,12,0)
the billing provider name, address, and phone# to go into Box 33.
"DATA",364.7,1205,0)
1505^N^5^^^^N
"DATA",364.7,1205,1)
KILL IBXSAVE("SERVFACFLAG"),IBXSAVE("BPSFDATA"),IBXSAVE("BOX33"),^TMP("IB 1500 PRINT",$J,IBXIEN)
"DATA",364.7,1205,3,0)
^364.73^1^1^3090330^^^^
"DATA",364.7,1205,3,1,0)
Remove IBXSAVE array entries used in the construction of Boxes 32 and 33.
"DATA",364.7,1206,0)
1506^N^5^^^^N
"DATA",364.7,1206,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("BPSFDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),12)
"DATA",364.7,1206,3,0)
^^2^2^3081001^
"DATA",364.7,1206,3,1,0)
Box 32 - service facility address lines 1&2
"DATA",364.7,1206,3,2,0)
Only print data if there is a service facility for this claim.
"DATA",364.7,1207,0)
1507^N^5^^^^N
"DATA",364.7,1207,1)
S IBXDATA=$G(IBXSAVE("BOX33","ADDR1"))_" "_$G(IBXSAVE("BOX33","ADDR2"))
"DATA",364.7,1207,3,0)
^364.73^1^1^3090213^^
"DATA",364.7,1207,3,1,0)
cms-1500, Box 33  Billing provider address lines 1&2.
"DATA",364.7,1209,0)
1509^N^5^^^^N
"DATA",364.7,1209,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N Z S Z=$G(IBXSAVE("BPSFDATA")),IBXDATA=$$GETFAC^IBCEP8(+$P(Z,U,4),$P(Z,U,3),3,26)
"DATA",364.7,1209,3,0)
^^6^6^3081003^
"DATA",364.7,1209,3,1,0)
CMS-1500, Box 32, service facility city,st,zip
"DATA",364.7,1209,3,2,0)
Only print this information if there is a service facility for this claim.
"DATA",364.7,1209,3,3,0)
 
"DATA",364.7,1209,3,4,0)
The 4th parameter to the $$GETFAC function is 26 since there is only room 
"DATA",364.7,1209,3,5,0)
for 26 characters for city, st zip.  This function will try to truncate 
"DATA",364.7,1209,3,6,0)
the city, st zip in the best possible way if necessary.
"DATA",364.7,1213,0)
1513^N^5^^^^N
"DATA",364.7,1213,1)
S IBXDATA=$$CSZ^IBCEP8($G(IBXSAVE("BOX33","CITY")),$G(IBXSAVE("BOX33","ST")),$G(IBXSAVE("BOX33","ZIP")),29)
"DATA",364.7,1213,3,0)
^^5^5^3090213^
"DATA",364.7,1213,3,1,0)
cms-1500, Box 33, Billing Provider city,st,zip
"DATA",364.7,1213,3,2,0)
 
"DATA",364.7,1213,3,3,0)
There is only room for 29 characters for city, st zip.  This $$CSZ
"DATA",364.7,1213,3,4,0)
function will try to truncate the city, st zip in the best possible way if
"DATA",364.7,1213,3,5,0)
necessary.
"DATA",364.7,1215,0)
1515^N^5^^^^N
"DATA",364.7,1215,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  S IBXDATA=$P($$ORGNPI^IBCEF73A(IBXIEN),U,1),IBXSAVE("NPISVC")=IBXDATA
"DATA",364.7,1215,3,0)
^364.73^4^4^3081001^^
"DATA",364.7,1215,3,1,0)
CMS-1500 form, Box 32a.
"DATA",364.7,1215,3,2,0)
Service Facility NPI#
"DATA",364.7,1215,3,3,0)
 
"DATA",364.7,1215,3,4,0)
Save the service facility NPI# in IBXSAVE("NPISVC") for use in Box 32b.
"DATA",364.7,1216,0)
1516^N^5^^^^N
"DATA",364.7,1216,1)
Q:'$G(IBXSAVE("SERVFACFLAG"))  N IBX,IBY,IBZ S IBY=$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE("NPISVC"))) K IBXSAVE("NPISVC"),IBXDATA I IBY D ALLIDS^IBCEF75(IBXIEN,.IBZ,1) S IBX=$G(IBZ("LAB/FAC",IBXIEN,"C",1,1)),IBXDATA=$P(IBX,U,1)_$P(IBX,U,2)
"DATA",364.7,1216,3,0)
^364.73^2^2^3081001^^^^
"DATA",364.7,1216,3,1,0)
1500, Box 32b.  Accommodate the reporting of other ID numbers.
"DATA",364.7,1216,3,2,0)
Enter the 2 digit qualifier followed by the secondary ID number.
"DATA",364.7,1217,0)
1517^N^5^^^^N
"DATA",364.7,1217,1)
S IBXDATA=$P($$ORGNPI^IBCEF73A(IBXIEN),U,3),IBXSAVE("NPIBILL")=IBXDATA
"DATA",364.7,1217,3,0)
^^3^3^3081001^
"DATA",364.7,1217,3,1,0)
cms-1500 form, Box 33a.  Billing provider NPI.
"DATA",364.7,1217,3,2,0)
 
"DATA",364.7,1217,3,3,0)
Save the billing provider NPI in IBXSAVE("NPIBILL") for use in Box 33b.
"DATA",364.7,1218,0)
1518^N^5^^^^N
"DATA",364.7,1218,1)
N IBX,IBY,IBZ S IBY=$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE("NPIBILL"))) K IBXSAVE("NPIBILL"),IBXDATA I IBY D ALLIDS^IBCEF75(IBXIEN,.IBZ,1) S IBX=$G(IBZ("BILLING PRV",IBXIEN,"C",1,2)),IBXDATA=$P(IBX,U,1)_$P(IBX,U,2)
"DATA",364.7,1218,3,0)
^364.73^2^2^3081001^^^^
"DATA",364.7,1218,3,1,0)
1500 form.  Box 33b.  Billing provider Other ID number.
"DATA",364.7,1218,3,2,0)
Enter the 2 digit qualifier followed by the secondary ID#.
"DATA",364.7,1252,0)
1552^N^96^^^^N
"DATA",364.7,1252,1)
S IBXSAVE("BPDATA")=IBXDATA,IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("BPDATA"),0,0)
"DATA",364.7,1252,3,0)
^^4^4^3081020^
"DATA",364.7,1252,3,1,0)
Billing Provider name.  Use the data element to extract the billing 
"DATA",364.7,1252,3,2,0)
provider IEN for this claim.  Save this string into scratch variable 
"DATA",364.7,1252,3,3,0)
IBXSAVE("BPDATA") for use in other fields in FL-1.  Extract the facility 
"DATA",364.7,1252,3,4,0)
name from file 4.
"DATA",364.7,1253,0)
1553^N^5^^^^N
"DATA",364.7,1253,1)
S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("BPDATA"),0,12)
"DATA",364.7,1253,3,0)
^364.73^2^2^3081020^^
"DATA",364.7,1253,3,1,0)
Retrieve the billing provider address from the Institution file 
"DATA",364.7,1253,3,2,0)
(file#4).  Grab both address line 1 and address line 2.
"DATA",364.7,1254,0)
1554^N^5^^^^N
"DATA",364.7,1254,1)
S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("BPDATA"),0,"3C")
"DATA",364.7,1254,3,0)
^364.73^1^1^3081020^^^
"DATA",364.7,1254,3,1,0)
Get the billing provider city from file 4.
"DATA",364.7,1255,0)
1555^N^5^^^^N
"DATA",364.7,1255,1)
S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("BPDATA"),0,"3S")
"DATA",364.7,1255,3,0)
^364.73^1^1^3081020^^^
"DATA",364.7,1255,3,1,0)
Get the billing provider state from file 4.
"DATA",364.7,1256,0)
1556^N^5^^^^N
"DATA",364.7,1256,1)
S IBXDATA=$TR($$GETFAC^IBCEP8(+IBXSAVE("BPDATA"),0,"3Z"),"-")
"DATA",364.7,1256,3,0)
^^2^2^3090310^
"DATA",364.7,1256,3,1,0)
Get the billing provider zip code from file 4.  Form Locator 1
"DATA",364.7,1256,3,2,0)
accommodates a 9-digit zip code so strip out the hyphen.
"DATA",364.7,1257,0)
1557^N^5^^^^N
"DATA",364.7,1257,1)
D GETBP^IBCEF79(IBXIEN,"",+IBXSAVE("BPDATA"),"FL1",.IBXSAVE) S IBXDATA=$G(IBXSAVE("FL1","PHONE")),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,1257,3,0)
^364.73^1^1^3090310^^
"DATA",364.7,1257,3,1,0)
This is the Pay-To provider phone number being used in FL-1, line 4.
"DATA",364.7,1258,0)
1558^N^5^^^^N
"DATA",364.7,1259,0)
1559^N^5^^^^N
"DATA",364.7,1260,0)
1560^N^5^^^^N
"DATA",364.7,1260,1)
S IBXDATA=$P($G(IBXSAVE("UBFL2")),U,1)
"DATA",364.7,1260,3,0)
^364.73^1^1^3081105^^
"DATA",364.7,1260,3,1,0)
Pay-to provider name
"DATA",364.7,1261,0)
1561^N^5^^^^N
"DATA",364.7,1261,1)
S IBXDATA=$P($G(IBXSAVE("UBFL2")),U,5)_" "_$P($G(IBXSAVE("UBFL2")),U,6)
"DATA",364.7,1261,3,0)
^^4^4^3081105^
"DATA",364.7,1261,3,1,0)
UB-04, FL-2
"DATA",364.7,1261,3,2,0)
Pay-to provider street address
"DATA",364.7,1261,3,3,0)
Concatenate address line 1 and line 2 together and try to fit as much as 
"DATA",364.7,1261,3,4,0)
possible within the given 25 characters.
"DATA",364.7,1262,0)
1562^N^5^^^^N
"DATA",364.7,1262,1)
S IBXDATA=$P($G(IBXSAVE("UBFL2")),U,7)
"DATA",364.7,1262,3,0)
^^2^2^3081105^
"DATA",364.7,1262,3,1,0)
UB-04, FL-2
"DATA",364.7,1262,3,2,0)
pay-to provider city name
"DATA",364.7,1263,0)
1563^N^5^^^^N
"DATA",364.7,1263,1)
S IBXDATA=$P($G(IBXSAVE("UBFL2")),U,8)
"DATA",364.7,1263,3,0)
^^2^2^3081105^
"DATA",364.7,1263,3,1,0)
UB-04, FL-2
"DATA",364.7,1263,3,2,0)
pay-to provider state code
"DATA",364.7,1264,0)
1564^N^5^^^^N
"DATA",364.7,1264,1)
S IBXDATA=$P($G(IBXSAVE("UBFL2")),U,9)
"DATA",364.7,1264,3,0)
^^2^2^3081105^
"DATA",364.7,1264,3,1,0)
UB-04, FL-2
"DATA",364.7,1264,3,2,0)
pay-to provider zip code
"DATA",364.7,1266,0)
1566^N^5^^^^N
"DATA",364.7,1266,1)
K IBXDATA,IBXSAVE("UBFL2"),IBXSAVE("BPDATA"),IBXSAVE("FL1")
"DATA",364.7,1266,3,0)
^364.73^3^3^3090310^^
"DATA",364.7,1266,3,1,0)
NOT USED.  Reserved for Assignment by the NUBC.
"DATA",364.7,1266,3,2,0)
 
"DATA",364.7,1266,3,3,0)
Kill some scratch arrays here used for FL-1 and FL-2.
"DATA",364.7,1298,0)
1598^N^86^^^^N
"DATA",364.7,1298,1)
N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I '$$ECODE^IBCEU4(+IBZ(Z)) S C=C+1 S:C=1 IBXDATA=$P($$ICD9^IBACSV(+IBZ(Z),$$BDATE^IBACSV(IBXIEN)),U) S IBXSAVE("DX",C)=+IBZ(Z)_U_$$GETPOA^IBCEU4($P(IBZ(Z),U,2),1)
"DATA",364.7,1298,3,0)
^^3^3^3061121^
"DATA",364.7,1298,3,1,0)
The principal dx is found in the first occurrence of the data element's
"DATA",364.7,1298,3,2,0)
values.  The diagnoses are saved off in the IBXSAVE("DX") array for later
"DATA",364.7,1298,3,3,0)
use.  Only allow 3 E-codes.
"DATA",364.7,1302,0)
1602^N^5^^^^N
"DATA",364.7,1302,1)
I $D(IBXSAVE("DX",11)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",11),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1302,3,0)
^^1^1^3061117^
"DATA",364.7,1302,3,1,0)
If there is a eleventh diagnosis, print its name.
"DATA",364.7,1314,0)
1614^N^5^^^^N
"DATA",364.7,1314,1)
I $D(IBXSAVE("DX",12)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",12),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1314,3,0)
^^1^1^3061117^
"DATA",364.7,1314,3,1,0)
If there is a twelth diagnosis, print its name.
"DATA",364.7,1315,0)
1615^N^5^^^^N
"DATA",364.7,1315,1)
I $D(IBXSAVE("DX",13)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",13),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1315,3,0)
^^1^1^3061117^
"DATA",364.7,1315,3,1,0)
If there is a thirteenth diagnosis, print its name.
"DATA",364.7,1339,0)
1639^N^5^^^^N
"DATA",364.7,1339,1)
N IBZ S (IBZ,IBXDATA)="" D F^IBCEF("N-ORGANIZATION NPI CODES","IBZ",,IBXIEN) S IBXDATA=$P(IBZ,U,3),IBXSAVE("NPIBILL")=IBXDATA
"DATA",364.7,1339,3,0)
^^1^1^3061116^
"DATA",364.7,1339,3,1,0)
NPI - Billing Provider.
"DATA",364.7,1346,0)
1646^N^5^^^^N
"DATA",364.7,1346,1)
I $D(IBXSAVE("DX",2)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",2),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1346,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1346,3,1,0)
If there is a second diagnosis, print its name.
"DATA",364.7,1347,0)
1647^N^5^^^^N
"DATA",364.7,1347,1)
I $D(IBXSAVE("DX",3)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",3),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1347,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1347,3,1,0)
If there is a third diagnosis, print its name.
"DATA",364.7,1348,0)
1648^N^5^^^^N
"DATA",364.7,1348,1)
I $D(IBXSAVE("DX",4)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",4),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1348,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1348,3,1,0)
If there is a fourth diagnosis, print its name.
"DATA",364.7,1349,0)
1649^N^5^^^^N
"DATA",364.7,1349,1)
I $D(IBXSAVE("DX",5)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",5),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1349,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1349,3,1,0)
If there is a fifth diagnosis, print its name.
"DATA",364.7,1350,0)
1650^N^5^^^^N
"DATA",364.7,1350,1)
I $D(IBXSAVE("DX",6)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",6),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1350,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1350,3,1,0)
If there is a sixth diagnosis, print its name.
"DATA",364.7,1351,0)
1651^N^5^^^^N
"DATA",364.7,1351,1)
I $D(IBXSAVE("DX",7)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",7),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1351,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1351,3,1,0)
If there is a seventh diagnosis, print its name.
"DATA",364.7,1352,0)
1652^N^5^^^^N
"DATA",364.7,1352,1)
I $D(IBXSAVE("DX",8)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",8),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1352,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1352,3,1,0)
If there is an eighth diagnosis, print its name.
"DATA",364.7,1353,0)
1653^N^5^^^^N
"DATA",364.7,1353,1)
I $D(IBXSAVE("DX",9)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",9),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1353,3,0)
^364.73^1^1^3061121^^
"DATA",364.7,1353,3,1,0)
If there is a ninth diagnosis, print its name.
"DATA",364.7,1354,0)
1654^N^5^^^^N
"DATA",364.7,1354,1)
I $D(IBXSAVE("DX",10)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",10),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1354,3,0)
^364.73^1^1^3061121^^
"DATA",364.7,1354,3,1,0)
If there is a tenth diagnosis, print its name.
"DATA",364.7,1355,0)
1655^N^5^^^^N
"DATA",364.7,1355,1)
I $D(IBXSAVE("DX",14)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",14),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1355,3,0)
^^1^1^3061117^
"DATA",364.7,1355,3,1,0)
If there is a fourteenth diagnosis, print its name.
"DATA",364.7,1356,0)
1656^N^5^^^^N
"DATA",364.7,1356,1)
I $D(IBXSAVE("DX",15)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",15),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1356,3,0)
^^1^1^3061117^
"DATA",364.7,1356,3,1,0)
If there is a fifteenth diagnosis, print its name.
"DATA",364.7,1357,0)
1657^N^5^^^^N
"DATA",364.7,1357,1)
I $D(IBXSAVE("DX",16)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",16),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1357,3,0)
^364.73^1^1^3061126^^
"DATA",364.7,1357,3,1,0)
If there is a sixteenth diagnosis, print its name.
"DATA",364.7,1358,0)
1658^N^5^^^^N
"DATA",364.7,1358,1)
I $D(IBXSAVE("DX",17)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",17),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1358,3,0)
^^1^1^3061117^
"DATA",364.7,1358,3,1,0)
If there is a seventeenth diagnosis, print its name.
"DATA",364.7,1359,0)
1659^N^5^^^^N
"DATA",364.7,1359,1)
I $D(IBXSAVE("DX",18)) S IBXDATA=$P($$ICD9^IBACSV(+IBXSAVE("DX",18),$$BDATE^IBACSV(IBXIEN)),U)
"DATA",364.7,1359,3,0)
^364.73^2^2^3061117^^^
"DATA",364.7,1359,3,1,0)
If there is a eighteenth diagnosis, print its name.  Check for more than 
"DATA",364.7,1359,3,2,0)
17 other diagnoses on file. If there is, output on new pg.
"DATA",364.7,1360,0)
1660^N^195^^^^N
"DATA",364.7,1360,1)
K:'$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE("NPIBILL"))) IBXDATA K IBXSAVE("NPIBILL")
"DATA",364.7,1371,0)
1671^N^5^^^^N
"DATA",364.7,1371,1)
K IBXDATA N IBZ,Z,Z0,C D F^IBCEF("N-DIAGNOSES","IBZ",,IBXIEN) S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I $$ECODE^IBCEU4(+IBZ(Z),.Z0),$G(Z0)'="" S C=C+1,IBXSAVE("DX-E",C)=Z0_U_$$GETPOA^IBCEU4($P(IBZ(Z),U,2),1) S:C=1 IBXDATA=Z0 Q:C=3
"DATA",364.7,1371,3,0)
^364.73^3^3^3061125^^^^
"DATA",364.7,1371,3,1,0)
This data element creates an array containing E-code diagnoses for
"DATA",364.7,1371,3,2,0)
the bill and corresponding POA indicators. IBXDATA is set to the
"DATA",364.7,1371,3,3,0)
first 'E-code' dx found.
"DATA",364.7,1407,0)
1707^N^5^^^^N
"DATA",364.7,1407,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,8)),U)
"DATA",364.7,1407,3,0)
^^1^1^3061124^
"DATA",364.7,1407,3,1,0)
This is Patient Reason for Visit diagnosis code
"DATA",364.7,1408,0)
1708^N^5^^^^N
"DATA",364.7,1408,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,9)),U)
"DATA",364.7,1408,3,0)
^^1^1^3061124^
"DATA",364.7,1408,3,1,0)
This is Patient Reason for Visit diagnosis code
"DATA",364.7,1409,0)
1709^N^5^^^^N
"DATA",364.7,1409,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,10)),U)
"DATA",364.7,1409,3,0)
^^1^1^3061124^
"DATA",364.7,1409,3,1,0)
This is Patient Reason for Visit diagnosis code
"DATA",364.7,1410,0)
1710^N^5^^^^N
"DATA",364.7,1410,1)
N Z I $$INPAT^IBCEF(IBXIEN) S Z=+$P($G(^DGCR(399,IBXIEN,"U1")),U,15) I Z S IBXDATA=$$FO^IBCNEUT1(Z,4,"R",0)
"DATA",364.7,1410,3,0)
^^3^3^3080905^
"DATA",364.7,1410,3,1,0)
IB*2*400 - for Inpatient claims only.
"DATA",364.7,1410,3,2,0)
Retrieve the PPS code from field# 170 in the claim.  If it exists, then 
"DATA",364.7,1410,3,3,0)
format it as a 4 character numeric field, right justified, zero filled.
"DATA",364.7,1411,0)
1711^N^5^^^^N
"DATA",364.7,1411,1)
K IBXDATA S:$$INPAT^IBCEF(IBXIEN) IBXDATA=$P($G(IBXSAVE("DX-E",1)),U,2) K IBXSAVE("DX-E",1)
"DATA",364.7,1411,3,0)
^364.73^3^3^3070523^^^^
"DATA",364.7,1411,3,1,0)
This is the Present on Admission indicator for the first 'E-code' 
"DATA",364.7,1411,3,2,0)
diagnosis.  The value "U" (No Information in the Record) is sent 
"DATA",364.7,1411,3,3,0)
for INPATIENT claims if no POA indicator is available.
"DATA",364.7,1412,0)
1712^N^5^^^^N
"DATA",364.7,1412,1)
S IBXDATA=$P($G(IBXSAVE("DX-E",2)),U)
"DATA",364.7,1412,3,0)
^364.73^1^1^3061213^^^^
"DATA",364.7,1412,3,1,0)
This is the second 'E-code' diagnosis found.
"DATA",364.7,1413,0)
1713^N^5^^^^N
"DATA",364.7,1413,1)
K IBXDATA S:$$INPAT^IBCEF(IBXIEN) IBXDATA=$P($G(IBXSAVE("DX-E",2)),U,2) K IBXSAVE("DX-E",2)
"DATA",364.7,1413,3,0)
^364.73^3^3^3070523^^^^
"DATA",364.7,1413,3,1,0)
This is the Present on Admission indicator for the second 'E-code'
"DATA",364.7,1413,3,2,0)
diagnosis.  The value "U" (No Information in the Record) is sent 
"DATA",364.7,1413,3,3,0)
for INPATIENT claims if no POA indicator is available.
"DATA",364.7,1414,0)
1714^N^5^^^^N
"DATA",364.7,1414,1)
S IBXDATA=$P($G(IBXSAVE("DX-E",3)),U)
"DATA",364.7,1414,3,0)
^^1^1^3061125^
"DATA",364.7,1414,3,1,0)
This is the third 'E-code' diagnosis found.
"DATA",364.7,1415,0)
1715^N^5^^^^N
"DATA",364.7,1415,1)
K IBXDATA S:$$INPAT^IBCEF(IBXIEN) IBXDATA=$P($G(IBXSAVE("DX-E",3)),U,2) K IBXSAVE("DX-E",3)
"DATA",364.7,1415,3,0)
^364.73^3^3^3070523^^^^
"DATA",364.7,1415,3,1,0)
This is the Present on Admission indicator for the third 'E-code'
"DATA",364.7,1415,3,2,0)
diagnosis.  The value "U" (No Information in the Record) is sent 
"DATA",364.7,1415,3,3,0)
for INPATIENT claims if no POA indicator is available.
"DATA",364.7,1424,0)
1724^N^5^^^^N
"DATA",364.7,1424,1)
N DIFF S IBXSAVE("UBFL2")=$$PRVDATA^IBJPS3(IBXIEN),DIFF=$$DIFF^IBJPS3(IBXIEN,0) S:'DIFF IBXSAVE("UBFL2")=""
"DATA",364.7,1424,3,0)
^364.73^6^6^3081105^^
"DATA",364.7,1424,3,1,0)
UB-04 FL-2 pay-to provider data gathering
"DATA",364.7,1424,3,2,0)
 
"DATA",364.7,1424,3,3,0)
Retrieve the pay-to provider string and save it into IBXSAVE.  If there 
"DATA",364.7,1424,3,4,0)
are NO differences between the pay-to provider and the billing provider, 
"DATA",364.7,1424,3,5,0)
then suppress the pay-to provider data here in FL-2 and don't output 
"DATA",364.7,1424,3,6,0)
anything.
"DATA",364.7,1610,0)
1910^N^96^^^^N
"DATA",364.7,1610,1)
D GETBP^IBCEF79(IBXIEN,"",+IBXDATA,"PRV-BP",.IBXSAVE)
"DATA",364.7,1610,3,0)
^^4^4^3090213^
"DATA",364.7,1610,3,1,0)
PRV-2.5
"DATA",364.7,1610,3,2,0)
--------
"DATA",364.7,1610,3,3,0)
calculate only field to build the IBXSAVE("PRV-BP") array which will hold 
"DATA",364.7,1610,3,4,0)
the billing provider name, address, and phone#.
"DATA",364.7,1611,0)
1911^N^5^^^^N
"DATA",364.7,1611,1)
K IBXSAVE("PRV-BP")
"DATA",364.7,1611,3,0)
^^1^1^3081002^
"DATA",364.7,1611,3,1,0)
Clean up the IBXSAVE usage at the end of the PRV segment.
"DATA",364.7,1612,0)
1912^N^5^^^^N
"DATA",364.7,1612,1)
I $$INPAT^IBCEF(IBXIEN),$$FT^IBCEF(IBXIEN)=3,+$P($G(^DGCR(399,IBXIEN,"U1")),U,15) S IBXDATA="DR"
"DATA",364.7,1612,3,0)
^^3^3^3080905^
"DATA",364.7,1612,3,1,0)
CL1A-13 - Inpatient, UB claims only.
"DATA",364.7,1612,3,2,0)
If field# 170 exists and is a valid pointer to file 80.2, then the value 
"DATA",364.7,1612,3,3,0)
of this field is the qualifier "DR".
"DATA",364.7,1613,0)
1913^N^5^^^^N
"DATA",364.7,1613,1)
N Z I $$INPAT^IBCEF(IBXIEN),$$FT^IBCEF(IBXIEN)=3 S Z=+$P($G(^DGCR(399,IBXIEN,"U1")),U,15) I Z S IBXDATA=$$FO^IBCNEUT1(Z,4,"R",0)
"DATA",364.7,1613,3,0)
^^3^3^3080905^
"DATA",364.7,1613,3,1,0)
CL1A-14 - Inpatient, UB claims only.
"DATA",364.7,1613,3,2,0)
If the PPS field exists, then output the ien right justified with leading 
"DATA",364.7,1613,3,3,0)
0's.
"DATA",364.7,1614,0)
1914^N^5^^^^N
"DATA",364.7,1614,1)
S IBXDATA=$G(IBPTPNPI) K IBPTPNPI
"DATA",364.7,1614,3,0)
^^5^5^3081105^
"DATA",364.7,1614,3,1,0)
NPI-18
"DATA",364.7,1614,3,2,0)
pay-to provider NPI#
"DATA",364.7,1614,3,3,0)
 
"DATA",364.7,1614,3,4,0)
Special variable IBPTPNPI is set with PRV1-1.5 in the pay-to provider 
"DATA",364.7,1614,3,5,0)
segment.
"DATA",364.7,1615,0)
1915^N^96^^^^N
"DATA",364.7,1615,1)
N Z,Z1 S Z=$P(IBXDATA,U,3),Z1=$$SENDSF^IBCEF79(IBXIEN),IBXSAVE("SERVFACFLAG")=$S(Z="":0,'Z1:0,1:1) I IBXSAVE("SERVFACFLAG") S IBXSAVE("SERVFACDATA")=IBXDATA
"DATA",364.7,1615,3,0)
^^17^17^3090223^
"DATA",364.7,1615,3,1,0)
SUB, piece 1.5
"DATA",364.7,1615,3,2,0)
Use the data element to extract the billing provider/service facility 
"DATA",364.7,1615,3,3,0)
information.
"DATA",364.7,1615,3,4,0)
IBXSAVE("SERVFACFLAG")=0 to indicate there is no service facility info
"DATA",364.7,1615,3,5,0)
IBXSAVE("SERVFACFLAG")=1 to indicate there is service facility info
"DATA",364.7,1615,3,6,0)
 
"DATA",364.7,1615,3,7,0)
IBXSAVE("SERVFACDATA") is the string of data from the $$B^IBCEF79 
"DATA",364.7,1615,3,8,0)
function.  Therefore [3] is "" if there is no service facility data, or 
"DATA",364.7,1615,3,9,0)
[3] is 0 if the service facility is a VA institution in file 4, or [3] is 
"DATA",364.7,1615,3,10,0)
a 1 if the service facility is a non-VA facility in file 355.93.
"DATA",364.7,1615,3,11,0)
Piece [4] is the IEN to either file 4 or 355.93.
"DATA",364.7,1615,3,12,0)
 
"DATA",364.7,1615,3,13,0)
Variable Z1 is the value of the $$SENDSF function call.  This function 
"DATA",364.7,1615,3,14,0)
will only return 0 (don't send) if the pre-patch 400 switchback flag is 
"DATA",364.7,1615,3,15,0)
set to ON, and care was provided at the main division in the database, 
"DATA",364.7,1615,3,16,0)
and the insurance company parameter that says to send the service 
"DATA",364.7,1615,3,17,0)
facility data is set to NO (don't send).
"DATA",364.7,1616,0)
1916^N^5^^^^N
"DATA",364.7,1616,1)
K IBXSAVE("SERVFACFLAG"),IBXSAVE("SERVFACDATA")
"DATA",364.7,1616,3,0)
^^1^1^3080929^
"DATA",364.7,1616,3,1,0)
Clean up IBXSAVE array used in the building of the SUB segment.
"DATA",364.7,1617,0)
1917^N^5^^^^N
"DATA",364.7,1617,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN),$P($G(^DGCR(399,IBXIEN,"U3")),U,8)'="" S IBXDATA="ZZ"
"DATA",364.7,1617,3,0)
^^1^1^3081029^
"DATA",364.7,1617,3,1,0)
This is a qualifier for PRV diagnosis (1)
"DATA",364.7,1618,0)
1918^N^5^^^^N
"DATA",364.7,1618,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,8)),U,1),".")
"DATA",364.7,1618,3,0)
^^1^1^3081029^
"DATA",364.7,1618,3,1,0)
This is PRV diagnosis (1)
"DATA",364.7,1619,0)
1919^N^5^^^^N
"DATA",364.7,1619,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN),$P($G(^DGCR(399,IBXIEN,"U3")),U,9)'="" S IBXDATA="ZZ"
"DATA",364.7,1619,3,0)
^^1^1^3081029^
"DATA",364.7,1619,3,1,0)
This is a qualifier for PRV diagnosis (2)
"DATA",364.7,1620,0)
1920^N^5^^^^N
"DATA",364.7,1620,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,9)),U,1),".")
"DATA",364.7,1620,3,0)
^^1^1^3081029^
"DATA",364.7,1620,3,1,0)
This is PRV diagnosis (2)
"DATA",364.7,1621,0)
1921^N^5^^^^N
"DATA",364.7,1621,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN),$P($G(^DGCR(399,IBXIEN,"U3")),U,10)'="" S IBXDATA="ZZ"
"DATA",364.7,1621,3,0)
^^1^1^3081029^
"DATA",364.7,1621,3,1,0)
This is a qualifier for PRV diagnosis (3)
"DATA",364.7,1622,0)
1922^N^5^^^^N
"DATA",364.7,1622,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,10)),U,1),".")
"DATA",364.7,1622,3,0)
^^1^1^3081029^
"DATA",364.7,1622,3,1,0)
This is PRV diagnosis (3)
"DATA",364.7,1623,0)
1923^N^131^^^^N
"DATA",364.7,1623,1)
S IBXDATA="PRV1"
"DATA",364.7,1623,3,0)
^^1^1^3081103^
"DATA",364.7,1623,3,1,0)
PRV1 segment, piece 1.  Literal value is "PRV1".
"DATA",364.7,1624,0)
1924^N^5^^^^N
"DATA",364.7,1624,1)
N DIFF S IBXSAVE("PRV1")=$$PRVDATA^IBJPS3(IBXIEN),DIFF=$$DIFF^IBJPS3(IBXIEN,1) S:'DIFF (IBXSAVE("PRV1"),IBPTPNPI)="" Q:'DIFF  S $P(IBXSAVE("PRV1"),U,12,14)="87^2^24",IBPTPNPI=$P($G(IBXSAVE("PRV1")),U,2)
"DATA",364.7,1624,3,0)
^^15^15^3081111^
"DATA",364.7,1624,3,1,0)
PRV1-1.5 calculate only piece
"DATA",364.7,1624,3,2,0)
--------------------------------
"DATA",364.7,1624,3,3,0)
Save the pay-to provider data string in IBXSAVE.  But if no differences 
"DATA",364.7,1624,3,4,0)
exist between the pay-to provider data and the billing provider data, 
"DATA",364.7,1624,3,5,0)
then blank out the pay-to provider data.
"DATA",364.7,1624,3,6,0)
If differences do exist, then manually hard-code the literal values for 3 
"DATA",364.7,1624,3,7,0)
fields into the pay-to provider string:
"DATA",364.7,1624,3,8,0)
 
"DATA",364.7,1624,3,9,0)
PRV1-2   Entity ID code is "87"
"DATA",364.7,1624,3,10,0)
PRV1-3   Entity type qualifier is "2"
"DATA",364.7,1624,3,11,0)
PRV1-5   ID Code qualifier is "24"
"DATA",364.7,1624,3,12,0)
 
"DATA",364.7,1624,3,13,0)
Very special variable IBPTPNPI is also set here in this format code.  
"DATA",364.7,1624,3,14,0)
This is the pay-to provider NPI#.  It is also blanked out if no 
"DATA",364.7,1624,3,15,0)
differences exist.  This is used in NPI-18.
"DATA",364.7,1625,0)
1925^N^5^^^^N
"DATA",364.7,1625,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,12)
"DATA",364.7,1625,3,0)
^364.73^2^2^3081112^^
"DATA",364.7,1625,3,1,0)
PRV1-2  Entity ID code
"DATA",364.7,1625,3,2,0)
This value is set by PRV1-1.5.
"DATA",364.7,1626,0)
1926^N^5^^^^N
"DATA",364.7,1626,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,13)
"DATA",364.7,1626,3,0)
^364.73^2^2^3081112^^
"DATA",364.7,1626,3,1,0)
PRV1-3  Entity type qualifer
"DATA",364.7,1626,3,2,0)
Set by PRV1-1.5
"DATA",364.7,1627,0)
1927^N^5^^^^N
"DATA",364.7,1627,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,1)
"DATA",364.7,1627,3,0)
^^2^2^3081105^
"DATA",364.7,1627,3,1,0)
PRV1-4
"DATA",364.7,1627,3,2,0)
Pay-to provider name
"DATA",364.7,1628,0)
1928^N^5^^^^N
"DATA",364.7,1628,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,14)
"DATA",364.7,1628,3,0)
^364.73^2^2^3081112^^
"DATA",364.7,1628,3,1,0)
PRV1-5  ID code qualifier
"DATA",364.7,1628,3,2,0)
This is set by PRV1-1.5
"DATA",364.7,1629,0)
1929^N^5^^^^N
"DATA",364.7,1629,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,3),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,1629,3,0)
^^6^6^3081111^
"DATA",364.7,1629,3,1,0)
PRV1-6
"DATA",364.7,1629,3,2,0)
pay-to provider primary ID (tax ID here).  Strip out the punctuation.
"DATA",364.7,1629,3,3,0)
 
"DATA",364.7,1629,3,4,0)
 
"DATA",364.7,1629,3,5,0)
please note:  The pay-to provider NPI# which is really the primary ID is
"DATA",364.7,1629,3,6,0)
being sent with NPI-18.
"DATA",364.7,1630,0)
1930^N^5^^^^N
"DATA",364.7,1630,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,5)
"DATA",364.7,1630,3,0)
^^2^2^3081105^
"DATA",364.7,1630,3,1,0)
PRV1-7
"DATA",364.7,1630,3,2,0)
pay-to provider address line 1
"DATA",364.7,1631,0)
1931^N^5^^^^N
"DATA",364.7,1631,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,6)
"DATA",364.7,1631,3,0)
^^2^2^3081105^
"DATA",364.7,1631,3,1,0)
PRV1-8
"DATA",364.7,1631,3,2,0)
pay-to provider address line 2
"DATA",364.7,1632,0)
1932^N^5^^^^N
"DATA",364.7,1632,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,7) I IBXDATA'="" S IBXDATA=$TR(IBXDATA,"-/.,()'","  ")
"DATA",364.7,1632,3,0)
^^4^4^3081105^
"DATA",364.7,1632,3,1,0)
PRV1-9
"DATA",364.7,1632,3,2,0)
pay-to provider city name
"DATA",364.7,1632,3,3,0)
Perform the standard punctuation edits on the city name to convert "-" 
"DATA",364.7,1632,3,4,0)
and "/" into spaces.
"DATA",364.7,1633,0)
1933^N^5^^^^N
"DATA",364.7,1633,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,8)
"DATA",364.7,1633,3,0)
^^2^2^3081105^
"DATA",364.7,1633,3,1,0)
PRV1-10
"DATA",364.7,1633,3,2,0)
pay-to provider state abbreviation
"DATA",364.7,1634,0)
1934^N^5^^^^N
"DATA",364.7,1634,1)
S IBXDATA=$P($G(IBXSAVE("PRV1")),U,9),IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1) K IBXSAVE("PRV1")
"DATA",364.7,1634,3,0)
^364.73^4^4^3081111^^
"DATA",364.7,1634,3,1,0)
PRV1-11 - pay-to provider zip code
"DATA",364.7,1634,3,2,0)
Remove any punctuation including dashes or spaces.
"DATA",364.7,1634,3,3,0)
 
"DATA",364.7,1634,3,4,0)
Make sure the IBXSAVE array is cleaned-up here at the end of this segment.
"DATA",364.7,1635,0)
1935^N^5^^^^N
"DATA",364.7,1635,1)
N IBX,IBZ S IBXSAVE("CL1A-16")="" I $$INPAT^IBCEF(IBXIEN),$$FT^IBCEF(IBXIEN)=3 S IBZ=+$P($G(^DGCR(399,IBXIEN,"U2")),U,1) I IBZ S IBX=$TR($P($$ICD9^IBACSV(IBZ,$$BDATE^IBACSV(IBXIEN)),U,1),".") I IBX'="" S IBXDATA="BJ",IBXSAVE("CL1A-16")=IBX
"DATA",364.7,1635,3,0)
^364.73^5^5^3081114^^
"DATA",364.7,1635,3,1,0)
CL1A-15
"DATA",364.7,1635,3,2,0)
This is the admitting diagnosis qualifier.  This is for inpatient,
"DATA",364.7,1635,3,3,0)
UB's only.  If the claim has an admitting diagnosis, then save it
"DATA",364.7,1635,3,4,0)
in temporary variable IBXSAVE("CL1A-16") and output "BJ" here in
"DATA",364.7,1635,3,5,0)
this piece.
"DATA",364.7,1636,0)
1936^N^5^^^^N
"DATA",364.7,1636,1)
S IBXDATA=$G(IBXSAVE("CL1A-16")) K IBXSAVE("CL1A-16")
"DATA",364.7,1636,3,0)
^^3^3^3081114^
"DATA",364.7,1636,3,1,0)
CL1A-16
"DATA",364.7,1636,3,2,0)
This is the admitting diagnosis.  It is calculated from CL1A-15 - 
"DATA",364.7,1636,3,3,0)
admitting dx qualifier field.
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^n^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,4.07)

"FIA",36,36,4.11)

"FIA",36,36,4.12)

"FIA",36,36,4.13)

"FIA",350.8)
IB ERROR
"FIA",350.8,0)
^IBE(350.8,
"FIA",350.8,0,0)
350.8I
"FIA",350.8,0,1)
n^n^f^^n^^y^o^n
"FIA",350.8,0,10)

"FIA",350.8,0,11)
I $F(".IB097.IB140.IB148.IB177.IB178.IB179.IB180.IB181.IB309.IB326.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"FIA",350.8,0,"RLRO")

"FIA",350.8,0,"VR")
2.0^IB
"FIA",350.8,350.8)
0
"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,2.01)

"FIA",350.9,350.9,2.02)

"FIA",350.9,350.9,2.03)

"FIA",350.9,350.9,2.04)

"FIA",350.9,350.9,2.05)

"FIA",350.9,350.9,2.06)

"FIA",350.9,350.9,2.1)

"FIA",350.9,350.9,11.03)

"FIA",350.9,350.9,19)

"FIA",350.9,350.9,20)

"FIA",350.9,350.9004)
0
"FIA",350.9,350.9005)
0
"FIA",362.3)
IB BILL/CLAIMS DIAGNOSIS
"FIA",362.3,0)
^IBA(362.3,
"FIA",362.3,0,0)
362.3IP
"FIA",362.3,0,1)
y^n^p^^^^n^^n
"FIA",362.3,0,10)

"FIA",362.3,0,11)

"FIA",362.3,0,"RLRO")

"FIA",362.3,0,"VR")
2.0^IB
"FIA",362.3,362.3)
1
"FIA",362.3,362.3,.01)

"FIA",362.3,362.3,.02)

"FIA",362.3,362.3,.03)

"FIA",362.4)
IB BILL/CLAIMS PRESCRIPTION REFILL
"FIA",362.4,0)
^IBA(362.4,
"FIA",362.4,0,0)
362.4I
"FIA",362.4,0,1)
y^n^p^^^^n^^n
"FIA",362.4,0,10)

"FIA",362.4,0,11)

"FIA",362.4,0,"RLRO")

"FIA",362.4,0,"VR")
2.0^IB
"FIA",362.4,362.4)
1
"FIA",362.4,362.4,.02)

"FIA",362.5)
IB BILL/CLAIMS PROSTHETICS
"FIA",362.5,0)
^IBA(362.5,
"FIA",362.5,0,0)
362.5D
"FIA",362.5,0,1)
y^n^p^^^^n^^n
"FIA",362.5,0,10)

"FIA",362.5,0,11)

"FIA",362.5,0,"RLRO")

"FIA",362.5,0,"VR")
2.0^IB
"FIA",362.5,362.5)
1
"FIA",362.5,362.5,.02)

"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IBY400PR(5,Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY400PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY400PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.08)

"FIA",399,399,122)

"FIA",399,399,123)

"FIA",399,399,124)

"FIA",399,399,128)

"FIA",399,399,129)

"FIA",399,399,130)

"FIA",399,399,158)

"FIA",399,399,170)

"FIA",399,399,243)

"FIA",399,399,249)

"FIA",399,399,250)

"FIA",399,399,251)

"FIA",399,399,252)

"INI")
IBY400PR
"INIT")
IBY400PO
"IX",350.9,350.9004,"AC",0)
350.9004^AC^Name and address defaults^MU^^F^IR^I^350.9004^^^^^A
"IX",350.9,350.9004,"AC",.1,0)
^^6^6^3081031^
"IX",350.9,350.9004,"AC",.1,1,0)
The purpose of this x-ref is to default the name and address fields in 
"IX",350.9,350.9004,"AC",.1,2,0)
this sub-file from data found in the Institution file.  The idea is that 
"IX",350.9,350.9004,"AC",.1,3,0)
the user will select a VA Institution from file 4 to be one of the Pay-To 
"IX",350.9,350.9004,"AC",.1,4,0)
providers in this sub-file.  The name and address of the VA Institution 
"IX",350.9,350.9004,"AC",.1,5,0)
will be used as defaults for the name and address fields here in this 
"IX",350.9,350.9004,"AC",.1,6,0)
sub-file.  The default name and address information may be overridden.
"IX",350.9,350.9004,"AC",1)
I $G(X1(1))'=$G(X2(1)) D DEF^IBJPS3(+$G(X2(1)),.DA)
"IX",350.9,350.9004,"AC",2)
Q
"IX",350.9,350.9004,"AC",11.1,0)
^.114IA^1^1
"IX",350.9,350.9004,"AC",11.1,1,0)
1^F^350.9004^.01^^^F
"IX",350.9,350.9004,"AC",11.1,1,3)

"IX",362.4,362.4,"ABP",0)
362.4^ABP^Update default taxonomy codes and billing provider IDs^MU^^F^IR^I^362.4^^^^^A
"IX",362.4,362.4,"ABP",.1,0)
^^21^21^3081107^
"IX",362.4,362.4,"ABP",.1,1,0)
When a claim is entered into this file it is considered a pharmacy claim
"IX",362.4,362.4,"ABP",.1,2,0)
and the billing provider for this claim becomes the dispensing pharmacy
"IX",362.4,362.4,"ABP",.1,3,0)
institution.  When a claim is removed from this file, it ceases to be a 
"IX",362.4,362.4,"ABP",.1,4,0)
pharmacy claim and the billing provider will change with this action.
"IX",362.4,362.4,"ABP",.1,5,0)
 
"IX",362.4,362.4,"ABP",.1,6,0)
This x-ref will update the billing provider and service facility default 
"IX",362.4,362.4,"ABP",.1,7,0)
taxonomy codes based on a potential new billing provider and service 
"IX",362.4,362.4,"ABP",.1,8,0)
facility.  It will also update the billing provider secondary IDs and 
"IX",362.4,362.4,"ABP",.1,9,0)
Qualifiers for every payer on the claim.
"IX",362.4,362.4,"ABP",.1,10,0)
 
"IX",362.4,362.4,"ABP",.1,11,0)
Please note that this x-ref will potentially update the values of 8 
"IX",362.4,362.4,"ABP",.1,12,0)
fields in file 399:
"IX",362.4,362.4,"ABP",.1,13,0)
 
"IX",362.4,362.4,"ABP",.1,14,0)
399,243 - SERVICE FACILITY TAXONOMY
"IX",362.4,362.4,"ABP",.1,15,0)
399,252 - BILLING PROVIDER TAXONOMY
"IX",362.4,362.4,"ABP",.1,16,0)
399,122 - PRIMARY PROVIDER #
"IX",362.4,362.4,"ABP",.1,17,0)
399,123 - SECONDARY PROVIDER #
"IX",362.4,362.4,"ABP",.1,18,0)
399,124 - TERTIARY PROVIDER #
"IX",362.4,362.4,"ABP",.1,19,0)
399,128 - PRIMARY ID QUALIFIER
"IX",362.4,362.4,"ABP",.1,20,0)
399,129 - SECONDARY ID QUALIFIER
"IX",362.4,362.4,"ABP",.1,21,0)
399,130 - TERTIARY ID QUALIFIER
"IX",362.4,362.4,"ABP",1)
D TAX^IBCEF79(X(1))
"IX",362.4,362.4,"ABP",2)
D TAX^IBCEF79(X(1))
"IX",362.4,362.4,"ABP",11.1,0)
^.114IA^1^1
"IX",362.4,362.4,"ABP",11.1,1,0)
1^F^362.4^.02^^^F
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"C",0)
364.6^C^Field name lookup^R^^F^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"C",1)
S ^IBA(364.6,"C",$E(X,1,40),DA)=""
"IX",364.6,364.6,"C",2)
K ^IBA(364.6,"C",$E(X,1,40),DA)
"IX",364.6,364.6,"C",2.5)
K ^IBA(364.6,"C")
"IX",364.6,364.6,"C",11.1,0)
^.114IA^1^1
"IX",364.6,364.6,"C",11.1,1,0)
1^F^364.6^.1^40^1^F
"IX",364.6,364.6,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"KRN",.402,1080,-1)
0^5
"KRN",.402,1080,0)
IB SCREEN8H^3090626.0929^@^399^^@^3090513
"KRN",.402,1080,"%D",0)
^^1^1^3090626^
"KRN",.402,1080,"%D",1,0)
Billing screen 8 input template for form type CMS-1500.
"KRN",.402,1080,"AR",399,120)
1^IBXS8P14
"KRN",.402,1080,"DIAB",1,0,399,2)
NON-VA FACILITY:
"KRN",.402,1080,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1080,"DIAB",1,1,399.0222,2)
PERFORMED BY:355.93:
"KRN",.402,1080,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,1080,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,1080,"DIAB",4,0,399,1)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1080,"DIAB",4,1,399.0222,9)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",5,1,399.0222,9)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1080,"DIAB",8,1,399.0222,9)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",9,1,399.0222,9)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1080,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1080,"DIAB",10,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,1080,"DIAB",12,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,1080,"DIAB",12,1,399.0222,9)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",13,1,399.0222,9)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1080,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";166;167;@82;S:IBDR20'["82" Y="@83";S:'$$INPAT^IBCEF(DA) Y="@821";215;@821;453T~;S:'DIPA("I2") Y="@825";454T~;
"KRN",.402,1080,"DR",1,399,1)
S:'DIPA("I3") Y="@825";455;@825;163PRIMARY AUTHORIZATION CODE~;S:'DIPA("I2") Y="@829";230;S:'DIPA("I3") Y="@829";231;@829;@83;S:IBDR20'["83" Y="@84";222;@84;S:IBDR20'["84" Y="@86";232;S DIPA("NVA_FC")=X S:X="" Y="@846";
"KRN",.402,1080,"DR",1,399,2)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;K DIK;244;
"KRN",.402,1080,"DR",1,399,3)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@846;S DIPA("OLDCLIA")=$P($G(^DGCR(399,DA,"U2")),U,13);235;I X="",$G(DIPA("OLDCLIA"))'="" S IBMDOTCN=1;@847;I '$$XRAY^IBCEP8A(DA) S Y="@848";
"KRN",.402,1080,"DR",1,399,4)
D MAMMODP^IBCEP8A(DA);242;@848;@86;S:IBDR20'["86" Y="@87";459;D ASK19^IBCEU3(DA);236;237;238//^S X=$S($$WNRBILL^IBEFUNC(DA):"31",1:"");@87;S:IBDR20'["87" Y="@88";252;
"KRN",.402,1080,"DR",1,399,5)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@88;S:IBDR20'["88" Y="@89";
"KRN",.402,1080,"DR",1,399,6)
I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@882";I $$REQMRA^IBEFUNC(DA) S Y="@8811";27//NO FORCED PRINT;S Y="@882";@8811;28//NO FORCED PRINT;@882;@89;
"KRN",.402,1080,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@841";.05;.1;.06;.07;.08;@841;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@842";
"KRN",.402,1080,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@842;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@843";.11;@843;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@844";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@844;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@845";42;@845;
"KRN",.402,1080,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@8399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,1080,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@838";
"KRN",.402,1080,"DR",2,399.0222,2)
^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@838;
"KRN",.402,1080,"DR",2,399.0222,3)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;S Z1=$P($$PROVID^IBCEF73(DA(1)),U,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U));
"KRN",.402,1080,"DR",2,399.0222,4)
I Z1="",$P($G(DIPA("NVA_PRV-0")),U,2)=2 N X,Y,DIR S DIR(0)="EA",DIR("A",1)="You must use Provider ID Maintenance to enter an SSN or EIN for this provider.",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR W ! K DIR;.15;
"KRN",.402,1080,"DR",2,399.0222,5)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1080,"DR",2,399.0222,6)
S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1080,"DR",2,399.0222,7)
I '$G(DIPA("I1")) S Y="@8305";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8382",DIPA("EDIT")=1:"@8391",DIPA("EDIT")=2:"@8371",1:"");@8382;I '$G(DIPA("I2")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,8)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8383",DIPA("EDIT")=1:"@8392",DIPA("EDIT")=2:"@8372",1:"");@8383;I '$G(DIPA("I3")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,9)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8305",DIPA("EDIT")=1:"@8393",DIPA("EDIT")=2:"@8373",1:"");S Y="@8305";@8391;.12R~T~;.05T~;S Y="@8382";@8392;.13R~T~;.06T~;S Y="@8383";@8393;.14R~T~;.07T~;S Y="@8305";@8371;
"KRN",.402,1080,"DR",2,399.0222,10)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8382";@8372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8383";@8373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8305";@8305;@8399;W @IOF;
"KRN",.402,1080,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@832";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@831";.03;@831;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@835";.04;S Y="@835";@832;
"KRN",.402,1080,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@833";.05;.1;.06;.07;.08;@833;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@834";.09LAB OR FACILITY PRIMARY ID~;@834;
"KRN",.402,1080,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@835";.11;@835;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@836";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@836;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@837";42;@837;
"KRN",.402,1080,"DR",3,355.9342)
.01:.03
"KRN",.402,1080,"DR",4,355.9342)
.01:.03
"KRN",.402,1080,"DR",99,1)
N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,1080,"DR",99,1,9.2)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2))
"KRN",.402,1080,"ROU")
^IBXS8P
"KRN",.402,1080,"ROUOLD")
IBXS8P
"KRN",.402,1316,-1)
0^1
"KRN",.402,1316,0)
IB SCREEN82^3090626.0931^@^399^^@^3081111
"KRN",.402,1316,"%D",0)
^^1^1^3090626^
"KRN",.402,1316,"%D",1,0)
Billing screen 8 for UB claims.
"KRN",.402,1316,"AR",399,120)
1^IBXS8I14
"KRN",.402,1316,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1316,"DIAB",1,1,399.0222,2)
PERFORMED BY:355.93:
"KRN",.402,1316,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,1316,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,1316,"DIAB",2,0,399,2)
NON-VA FACILITY:
"KRN",.402,1316,"DIAB",4,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,1316,"DIAB",4,1,399.0222,9)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",5,1,399.0222,9)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1316,"DIAB",6,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,1316,"DIAB",8,0,399,0)
FORM LOCATOR 64C;T
"KRN",.402,1316,"DIAB",8,1,399.0222,9)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",9,0,399,1)
PPS;T
"KRN",.402,1316,"DIAB",9,1,399.0222,9)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1316,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1316,"DIAB",10,0,399,0)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1316,"DIAB",12,1,399.0222,9)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",13,1,399.0222,9)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1316,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";402;453T~;S:'DIPA("I2") Y="@8111";454T~;S:'DIPA("I3") Y="@8111";455T~;@8111;163PRIMARY AUTHORIZATION CODE~;
"KRN",.402,1316,"DR",1,399,1)
S:'DIPA("I2") Y="@811";230;S:'DIPA("I3") Y="@811";231;@811;I '$$INPAT^IBCEF(DA) S Y="@812";215;S ICDVDT=$$BDATE^IBACSV(DA);170T~;@812;159;@82;S:IBDR20'["82" Y="@83";@83;S:IBDR20'["83" Y="@84";222;@84;S:IBDR20'["84" Y="@85";232;
"KRN",.402,1316,"DR",1,399,2)
S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@846";^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;
"KRN",.402,1316,"DR",1,399,3)
K DIK;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@846;@85;S:IBDR20'["85" Y="@86";252;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");
"KRN",.402,1316,"DR",1,399,4)
I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@86;S:IBDR20'["86" Y="@87";I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@861";
"KRN",.402,1316,"DR",1,399,5)
I $$REQMRA^IBEFUNC(DA) S Y="@8611";27//NO FORCED PRINT;S Y="@869";@8611;28//NO FORCED PRINT;S Y="@869";@861;N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;
"KRN",.402,1316,"DR",1,399,6)
@869;@87;S:IBDR20'["87" Y="@89";@89;
"KRN",.402,1316,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@841";.05;.1;.06;.07;.08;@841;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@842";
"KRN",.402,1316,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@842;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@843";.11;@843;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@844";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@844;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@845";42;@845;
"KRN",.402,1316,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@8399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,1316,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@838";
"KRN",.402,1316,"DR",2,399.0222,2)
^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@838;
"KRN",.402,1316,"DR",2,399.0222,3)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;S Z1=$P($$PROVID^IBCEF73(DA(1)),U,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U));
"KRN",.402,1316,"DR",2,399.0222,4)
I Z1="",$P($G(DIPA("NVA_PRV-0")),U,2)=2 N X,Y,DIR S DIR(0)="EA",DIR("A",1)="You must use Provider ID Maintenance to enter an SSN or EIN for this provider.",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR W ! K DIR;.15;
"KRN",.402,1316,"DR",2,399.0222,5)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1316,"DR",2,399.0222,6)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1316,"DR",2,399.0222,7)
I '$G(DIPA("I1")) S Y="@8305";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8382",DIPA("EDIT")=1:"@8391",DIPA("EDIT")=2:"@8371",1:"");@8382;I '$G(DIPA("I2")) S Y="@8305";
"KRN",.402,1316,"DR",2,399.0222,8)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8383",DIPA("EDIT")=1:"@8392",DIPA("EDIT")=2:"@8372",1:"");@8383;I '$G(DIPA("I3")) S Y="@8305";
"KRN",.402,1316,"DR",2,399.0222,9)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8305",DIPA("EDIT")=1:"@8393",DIPA("EDIT")=2:"@8373",1:"");S Y="@8305";@8391;.12R~T~;.05T~;S Y="@8382";@8392;.13R~T~;.06T~;S Y="@8383";@8393;.14R~T~;.07T~;S Y="@8305";@8371;
"KRN",.402,1316,"DR",2,399.0222,10)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8382";@8372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8383";@8373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8305";@8305;@8399;W @IOF;
"KRN",.402,1316,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@832";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@831";.03;@831;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@835";.04;S Y="@835";@832;
"KRN",.402,1316,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@833";.05;.1;.06;.07;.08;@833;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@834";.09LAB OR FACILITY PRIMARY ID~;@834;
"KRN",.402,1316,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@835";.11;@835;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@836";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@836;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@837";42;@837;
"KRN",.402,1316,"DR",3,355.9342)
.01:.03
"KRN",.402,1316,"DR",4,355.9342)
.01:.03
"KRN",.402,1316,"DR",99,1)
N DIERR X DR(99,1,9.2) K DIC S DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,1316,"DR",99,1,9.2)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2))
"KRN",.402,1316,"ROU")
^IBXS8I
"KRN",.402,1316,"ROUOLD")
IBXS8I
"KRN",.402,2199,-1)
0^4
"KRN",.402,2199,0)
IB SCREEN7^3081027.0915^@^399^^@^3090512
"KRN",.402,2199,"AR",399,120)
1^IBXSC713
"KRN",.402,2199,"DIAB",1,1,399.043,0)
ALL
"KRN",.402,2199,"DIAB",4,0,399,1)
UB-04 TIMEFRAME OF BILL;"TIMEFRAME OF BILL"
"KRN",.402,2199,"DIAB",11,0,399,0)
UB-04 LOCATION OF CARE;"LOCATION OF CARE"
"KRN",.402,2199,"DIAB",13,0,399,0)
UB-04 BILL CLASSIFICATION;"BILL CLASSIFICATION"
"KRN",.402,2199,"DR",1,399)
S:IBDR20'["74" Y="@71";S:$D(IBOUT) Y="@999";43;@999;K IBOUT;@71;S:IBDR20'["71" Y="@72";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@712";@711;S DIE("NO^")="";.24LOCATION OF CARE~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~;
"KRN",.402,2199,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@711";@712;K DIE("NO^");.26TIMEFRAME OF BILL~;216;217;162;.22;243;
"KRN",.402,2199,"DR",1,399,2)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Service Facility");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@714;.19;S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);
"KRN",.402,2199,"DR",1,399,3)
I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@715";W !,*7,"Must be a printable national form type";.19///^S X=$G(DIPA("FT1"));S Y="@714";@715;D FTPRV^IBCEU5(DA);@72;
"KRN",.402,2199,"DR",1,399,4)
S:IBDR20'["72" Y="@73";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@73";153;@73;S:IBDR20'["73" Y="@75";151;152;@75;S:IBDR20'["75" Y="@76";D RCD^IBCU1;42;202;S:'X Y="@757";203;@757;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@76";210;@76;
"KRN",.402,2199,"DR",1,399,5)
@77;S:IBDR20'["77" Y="@78";S:'$D(^DGCR(399,DA,"I1")) Y="@772";218;@772;S:'$D(^DGCR(399,DA,"I2")) Y="@773";219;@773;S:'$D(^DGCR(399,DA,"I3")) Y="@78";220;@78;K DIE("NO^");
"KRN",.402,2199,"DR",2,399.042)
.01;.02;.03;.04;.05;.09;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@758";.07//^S X=$$DEFDIV^IBCU7(DA(1));@758;I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) W !," AUTO ADDED CHARGE - NO CHANGE TO TYPE/COMPONENT" S Y="@759";.1;.12;
"KRN",.402,2199,"DR",2,399.042,1)
I $S($P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=3:0,1:$P($G(^(0)),U,10)'=4)!$P($G(^(0)),U,8) S Y="@759";I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=4 S Y="@7581";S DGRVRCAL=1;D LINKRX^IBCEU5(DA(1),DA);.15;S Y="@759";@7581;
"KRN",.402,2199,"DR",2,399.042,2)
D LINKCPT^IBCEU5(DA(1),DA);@759;
"KRN",.402,2199,"DR",2,399.043)
.01
"KRN",.402,2199,"ROU")
^IBXSC7
"KRN",.402,2199,"ROUOLD")
IBXSC7
"KRN",.402,2203,-1)
0^3
"KRN",.402,2203,0)
IB SCREEN6^3081027.0912^@^399^^@^3071017
"KRN",.402,2203,"AR",399,120)
1^IBXSC611
"KRN",.402,2203,"DIAB",4,0,399,1)
UB-04 TIMEFRAME OF BILL;"TIMEFRAME OF BILL"
"KRN",.402,2203,"DIAB",5,0,399,0)
UB-04 LOCATION OF CARE;"LOCATION OF CARE"
"KRN",.402,2203,"DIAB",7,0,399,0)
UB-04 BILL CLASSIFICATION;"BILL CLASSIFICATION"
"KRN",.402,2203,"DR",1,399)
S:IBDR20'["61" Y="@62";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@612";@611;S DIE("NO^")="";.24LOCATION OF CARE~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~;
"KRN",.402,2203,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@611";@612;K DIE("NO^");.26TIMEFRAME OF BILL~;216;217;
"KRN",.402,2203,"DR",1,399,2)
I '$$INPAT^IBCEF(DA)!($$FT^IBCEF(DA)'=3) S Y="@6121";221;@6121;.22;243;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Service Facility");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@614;.19;
"KRN",.402,2203,"DR",1,399,3)
S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@615";W !,*7,"Must be a printable national form type";
"KRN",.402,2203,"DR",1,399,4)
.19///^S X=$G(DIPA("FT1"));S Y="@614";@615;D FTPRV^IBCEU5(DA);@62;S:IBDR20'["62" Y="@63";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@63";153;@63;S:IBDR20'["63" Y="@64";151;152;@64;S:IBDR20'["64" Y="@65";161;165;@65;
"KRN",.402,2203,"DR",1,399,5)
S:IBDR20'["65" Y="@66";D RCD^IBCU1;42;202;S:'X Y="@657";203;@657;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@66";210;@66;@67;S:IBDR20'["67" Y="@68";S:'$D(^DGCR(399,DA,"I1")) Y="@672";218;@672;S:'$D(^DGCR(399,DA,"I2")) Y="@673";219;
"KRN",.402,2203,"DR",1,399,6)
@673;S:'$D(^DGCR(399,DA,"I3")) Y="@68";220;@68;K DIE("NO^");
"KRN",.402,2203,"DR",2,399.042)
.01;.02;.03;.04;.05;.09;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@658";.07;@658;I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) S Y="@659";.1;.12;
"KRN",.402,2203,"DR",2,399.042,1)
I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)'=4!'$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@659";D LINKCPT^IBCEU5(DA(1),DA);@659;
"KRN",.402,2203,"ROU")
^IBXSC6
"KRN",.402,2203,"ROUOLD")
IBXSC6
"KRN",.402,2633,-1)
0^2
"KRN",.402,2633,0)
IBEDIT INS CO1^3090710.223^@^36^^@^3090602
"KRN",.402,2633,"DIAB",1,0,36,5)
EDI INST SECONDARY ID(1);"EDI - 1ST Inst Payer Sec. ID"
"KRN",.402,2633,"DIAB",1,0,36,14)
EDI PROF SECONDARY ID(2);"EDI - 2ND Prof Payer Sec. ID"
"KRN",.402,2633,"DIAB",1,0,36,15)
ELECTRONIC INSURANCE TYPE;"EDI - Insurance Type"
"KRN",.402,2633,"DIAB",1,0,36,16)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,2633,"DIAB",1,0,36,17)
REF PROV SEC ID DEF CMS-1500//UPIN;"Default ID (1500)"
"KRN",.402,2633,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,2633,"DIAB",2,0,36,6)
EDI INST SECONDARY ID QUAL(2);"EDI - 2ND Inst Payer Sec. ID Qualifier"
"KRN",.402,2633,"DIAB",2,0,36,17)
REF PROV SEC ID REQ ON CLAIMS;"Require ID on Claim"
"KRN",.402,2633,"DIAB",2,0,36,18)
USE VAMC AS BILL PROV ON 1500//NO;"Always use main VAMC as Billing Provider (1500)?"
"KRN",.402,2633,"DIAB",2,0,36,19)
SEND LAB OR FAC IDS FOR VAMC//YES;"Send VA Lab/Facility IDs or Facility Data for VAMC?"
"KRN",.402,2633,"DIAB",3,0,36,1)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,2633,"DIAB",3,0,36,18)
USE VAMC AS BILL PROV ON UB04//NO;"Always use main VAMC as Billing Provider (UB-04)?"
"KRN",.402,2633,"DIAB",3,0,36,19)
USE BILL PROV VAMC ADDRESS//NO;"Use the Billing Provider (VAMC) Name and Street Address?"
"KRN",.402,2633,"DIAB",4,0,36,17)
ATT/REND ID BILL SEC ID PROF//NO;"Use Att/Rend ID as Billing Provider Sec. ID (1500)?"
"KRN",.402,2633,"DIAB",4,0,36,22)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,2633,"DIAB",5,0,36,3)
EDI INST SECONDARY ID QUAL(1);"EDI - 1ST Inst Payer Sec. ID Qualifier"
"KRN",.402,2633,"DIAB",5,0,36,11)
EDI PROF SECONDARY ID(1);"EDI - 1ST Prof Payer Sec. ID"
"KRN",.402,2633,"DIAB",5,0,36,16)
PERF PROV SECOND ID TYPE 1500;"Default ID (1500)"
"KRN",.402,2633,"DIAB",5,0,36,17)
ATT/REND ID BILL SEC ID INST//NO;"Use Att/Rend ID as Billing Provider Sec. ID (UB)?"
"KRN",.402,2633,"DIAB",6,0,36,2)
EDI ID NUMBER - INST;"EDI - Inst Payer Primary ID"
"KRN",.402,2633,"DIAB",6,0,36,12)
EDI PROF SECONDARY ID QUAL(2);"EDI - 2ND Prof Payer Sec. ID Qualifier"
"KRN",.402,2633,"DIAB",6,0,36,16)
PERF PROV SECOND ID TYPE UB;"Default ID (UB)"
"KRN",.402,2633,"DIAB",7,0,36,7)
EDI INST SECONDARY ID(2);"EDI - 2ND Inst Payer Sec. ID"
"KRN",.402,2633,"DIAB",7,0,36,8)
EDI ID NUMBER - PROF;"EDI - Prof Payer Primary ID"
"KRN",.402,2633,"DIAB",7,0,36,9)
EDI PROF SECONDARY ID QUAL(1);"EDI - 1ST Prof Payer Sec. ID Qualifier"
"KRN",.402,2633,"DIAB",7,0,36,16)
SECONDARY ID REQUIREMENTS;"Require ID on Claim"
"KRN",.402,2633,"DIAB",7,0,36,25)
INS COMPANY LINK PARENT;T
"KRN",.402,2633,"DIAB",8,0,36,15)
BIN NUMBER;"EDI - Bin Number"
"KRN",.402,2633,"DIAB",11,0,36,1)
TRANSMIT ELECTRONICALLY;"EDI - Transmit?"
"KRN",.402,2633,"DIAB",11,0,36,24)
INS COMPANY LINK TYPE;T
"KRN",.402,2633,"DIAB",13,0,36,0)
STANDARD FTF;"STANDARD FILING TIME FRAME"
"KRN",.402,2633,"DIAB",15,0,36,21)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,2633,"DIAB",16,0,36,0)
STANDARD FTF VALUE;"STANDARD FILING TIME FRAME VALUE"
"KRN",.402,2633,"DIAB",18,0,36,20)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,2633,"DIAB",19,0,36,23)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,2633,"DIAB",24,0,36,22)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,2633,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;.18STANDARD FILING TIME FRAME~;I 'X S Y="@016";I '$$FTFV^IBCNSU31(X) S Y="@016";.19STANDARD FILING TIME FRAME VALUE~;@016;.12;.13;
"KRN",.402,2633,"DR",1,36,1)
.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@171";3.01EDI - Transmit?~;S DIPA("IBTX")=X;I X=$G(IBEDIKEY(1))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1721";
"KRN",.402,2633,"DR",1,36,2)
3.01////^S X=$G(IBEDIKEY(1));I $$EDIKEY^IBCNSC();S Y="@171";@1721;I '$G(DIPA("IBTX")) S Y="@17";3.04EDI - Inst Payer Primary ID~;I X=$G(IBEDIKEY(4))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17211";3.04////^S X=$G(IBEDIKEY(4));
"KRN",.402,2633,"DR",1,36,3)
I $$EDIKEY^IBCNSC();S Y="@171";@17211;I '$G(DIPA("IBTX")) S Y="@17";6.01EDI - 1ST Inst Payer Sec. ID Qualifier~;I X=""&($G(IBEDIKEY(3,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";
"KRN",.402,2633,"DR",1,36,4)
I X=$G(IBEDIKEY(1,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17212";6.01////^S X=$G(IBEDIKEY(1,6));6.02////^S X=$G(IBEDIKEY(2,6));I $$EDIKEY^IBCNSC();S Y="@171";@17212;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,2633,"DR",1,36,5)
6.02EDI - 1ST Inst Payer Sec. ID~;I X=$G(IBEDIKEY(2,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17213";6.02////^S X=$G(IBEDIKEY(2,6));6.01////^S X=$G(IBEDIKEY(1,6));I $$EDIKEY^IBCNSC();S Y="@171";@17213;
"KRN",.402,2633,"DR",1,36,6)
I '$G(DIPA("IBTX")) S Y="@17";6.03EDI - 2ND Inst Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";I X=$G(IBEDIKEY(3,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17214";
"KRN",.402,2633,"DR",1,36,7)
6.03////^S X=$G(IBEDIKEY(3,6));6.04////^S X=$G(IBEDIKEY(4,6));I $$EDIKEY^IBCNSC();S Y="@171";@17214;I '$G(DIPA("IBTX")) S Y="@17";6.04EDI - 2ND Inst Payer Sec. ID~;
"KRN",.402,2633,"DR",1,36,8)
I X=$G(IBEDIKEY(4,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";6.04////^S X=$G(IBEDIKEY(4,6));6.03////^S X=$G(IBEDIKEY(3,6));I $$EDIKEY^IBCNSC();S Y="@171";@1722;3.02EDI - Prof Payer Primary ID~;
"KRN",.402,2633,"DR",1,36,9)
I X=$G(IBEDIKEY(2))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17221";3.02////^S X=$G(IBEDIKEY(2));I $$EDIKEY^IBCNSC();S Y="@171";@17221;I '$G(DIPA("IBTX")) S Y="@17";6.05EDI - 1ST Prof Payer Sec. ID Qualifier~;
"KRN",.402,2633,"DR",1,36,10)
I X=""&($G(IBEDIKEY(7,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";I X=$G(IBEDIKEY(5,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17222";6.05////^S X=$G(IBEDIKEY(5,6));6.06////^S X=$G(IBEDIKEY(6,6));
"KRN",.402,2633,"DR",1,36,11)
I $$EDIKEY^IBCNSC();S Y="@171";@17222;I '$G(DIPA("IBTX")) S Y="@17";6.06EDI - 1ST Prof Payer Sec. ID~;I X=$G(IBEDIKEY(6,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17223";6.06////^S X=$G(IBEDIKEY(6,6));
"KRN",.402,2633,"DR",1,36,12)
6.05////^S X=$G(IBEDIKEY(5,6));I $$EDIKEY^IBCNSC();S Y="@171";@17223;I '$G(DIPA("IBTX")) S Y="@17";6.07EDI - 2ND Prof Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";
"KRN",.402,2633,"DR",1,36,13)
I X=$G(IBEDIKEY(7,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17224";6.07////^S X=$G(IBEDIKEY(7,6));6.08////^S X=$G(IBEDIKEY(8,6));I $$EDIKEY^IBCNSC();S Y="@171";@17224;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,2633,"DR",1,36,14)
6.08EDI - 2ND Prof Payer Sec. ID~;I X=$G(IBEDIKEY(8,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";6.08////^S X=$G(IBEDIKEY(8,6));6.07////^S X=$G(IBEDIKEY(7,6));I $$EDIKEY^IBCNSC();S Y="@171";@1723;@17;
"KRN",.402,2633,"DR",1,36,15)
3.09EDI - Insurance Type~;I X=$G(IBEDIKEY(9))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1724";3.09////^S X=$G(IBEDIKEY(9));I $$EDIKEY^IBCNSC();S Y="@171";@1724;@171;3.03EDI - Bin Number~;I $G(DIPA("IBTX"))'=2 S Y="@18";
"KRN",.402,2633,"DR",1,36,16)
3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@18;S:",6,12,"'[IBY Y="@181";W !!,"Attending/Rendering Provider Secondary ID";4.01Default ID (1500)~;4.02Default ID (UB)~;4.03Require ID on Claim~;W !!,"Referring Provider Secondary ID";
"KRN",.402,2633,"DR",1,36,17)
4.04Default ID (1500)~//UPIN;4.05Require ID on Claim~;W !!,"Billing Provider Secondary IDs";4.06Use Att/Rend ID as Billing Provider Sec. ID (1500)?~//NO;4.08Use Att/Rend ID as Billing Provider Sec. ID (UB)?~//NO;
"KRN",.402,2633,"DR",1,36,18)
W !!,"Billing Provider/Service Facility";4.11Always use main VAMC as Billing Provider (1500)?~//NO;4.12Always use main VAMC as Billing Provider (UB-04)?~//NO;
"KRN",.402,2633,"DR",1,36,19)
N NODE4 S NODE4=$G(^DIC(36,DA,4)) I '$P(NODE4,U,11)&('$P(NODE4,U,12)) S Y="@181";4.07Send VA Lab/Facility IDs or Facility Data for VAMC?~//YES;4.13Use the Billing Provider (VAMC) Name and Street Address?~//NO;@181;
"KRN",.402,2633,"DR",1,36,20)
S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";.112;S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;
"KRN",.402,2633,"DR",1,36,21)
S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;
"KRN",.402,2633,"DR",1,36,22)
S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";
"KRN",.402,2633,"DR",1,36,23)
.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;S:",5,6,"'[IBY Y="@55";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;
"KRN",.402,2633,"DR",1,36,24)
.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@55;S:",13,6,"'[IBY Y="@60";I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@551";I $D(^DIC(36,"APC",+$G(DA))),$P($G(^DIC(36,+$G(DA),3)),U,13)="P" S Y="@551";3.13T~;S DIPA("IBLNK")=X;
"KRN",.402,2633,"DR",1,36,25)
I X=$G(IBEDIKEY(13))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@552";3.13////^S X=$G(IBEDIKEY(13));I $$EDIKEY^IBCNSC();S Y="@551";@552;I $G(DIPA("IBLNK"))'="C" S Y="@551";3.14T~;
"KRN",.402,2633,"DR",1,36,26)
I X=$G(IBEDIKEY(14))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@553";3.14////^S X=$G(IBEDIKEY(14));I $$EDIKEY^IBCNSC();S Y="@551";@553;D COPY^IBCEPCID(+$G(DA));@551;S:IBY=",13," Y="@99";@60;S:",7,6,"'[IBY Y="@50";3.1;@50;
"KRN",.402,2633,"DR",1,36,27)
S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,2633,"DR",2,36.03)
.01
"KRN",19,12925,-1)
0^1
"KRN",19,12925,0)
IBCN INS BILL PROV FLAG RPT^Insurance Company Billing Provider Flag Rpt/Msg^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,12925,1,0)
^19.06^7^7^3090413^^
"KRN",19,12925,1,1,0)
This option is designed to be run automatically at least once per month to
"KRN",19,12925,1,2,0)
scan all insurance companies on file looking for those in IB patch 400
"KRN",19,12925,1,3,0)
switchback mode.  This means those insurance companies in which one of the
"KRN",19,12925,1,4,0)
"Use VAMC as Billing Provider" flags are set. There is no user input.  
"KRN",19,12925,1,5,0)
This option is designed to be scheduled via TaskManager as needed and 
"KRN",19,12925,1,6,0)
scheduled to be run automatically once per month. The output is an email
"KRN",19,12925,1,7,0)
message sent to a pre-defined email address for the Chief Business Office.
"KRN",19,12925,25)
IBCNSGM
"KRN",19,12925,200.9)
y
"KRN",19,12925,"U")
INSURANCE COMPANY BILLING PROV
"KRN",19,12926,-1)
0^2
"KRN",19,12926,0)
IBCNSRVBP^Server Msg Processing Ins Co Bill Prov Flag^^S^^^^^^^^INTEGRATED BILLING
"KRN",19,12926,1,0)
^^2^2^3090413^
"KRN",19,12926,1,1,0)
This server option will facilitate on-demand review of insurance 
"KRN",19,12926,1,2,0)
companies in IB patch 400 switchback mode.
"KRN",19,12926,25)
SRV^IBCNSGM
"KRN",19,12926,220)
^R^^N^Y^N^0
"KRN",19,12926,"U")
SERVER MSG PROCESSING INS CO B
"KRN",101,642,-1)
0^6
"KRN",101,642,0)
VALM QUIT^Quit^^A^^^^^^^^
"KRN",101,642,.1)
 
"KRN",101,642,1,0)
^^1^1^2911105^
"KRN",101,642,1,1,0)
This protocol can be used as a generic 'quit' action.
"KRN",101,642,2,0)
^101.02A^2^2
"KRN",101,642,2,1,0)
EXIT
"KRN",101,642,2,2,0)
QUIT
"KRN",101,642,2,"B","EXIT",1)

"KRN",101,642,2,"B","QUIT",2)

"KRN",101,642,15)

"KRN",101,642,20)
Q
"KRN",101,642,99)
61552,52857
"KRN",101,4617,-1)
0^5
"KRN",101,4617,0)
IBJP IB PAY-TO PROVIDER DIVISIONS^Associate Divisions^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4617,4)
^^^AD
"KRN",101,4617,20)
D EN^IBJPS4
"KRN",101,4617,99)
61304,59191
"KRN",101,4618,-1)
0^4
"KRN",101,4618,0)
IBJP IB PAY-TO PROVIDER EDIT^Edit Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4618,4)
^^^EP
"KRN",101,4618,20)
D PRVEDIT^IBJPS3
"KRN",101,4618,99)
61304,59472
"KRN",101,4619,-1)
0^3
"KRN",101,4619,0)
IBJP IB PAY-TO PROVIDER DEL^Delete Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4619,4)
^^^DP
"KRN",101,4619,20)
D PRVDEL^IBJPS3
"KRN",101,4619,99)
61304,59598
"KRN",101,4620,-1)
0^2
"KRN",101,4620,0)
IBJP IB PAY-TO PROVIDER ADD^Add Provider^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4620,4)
^^^AP
"KRN",101,4620,20)
D PRVADD^IBJPS3
"KRN",101,4620,99)
61304,59696
"KRN",101,4621,-1)
0^1
"KRN",101,4621,0)
IBJP IB PAY-TO PROVIDERS MENU^Pay-To Providers Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4621,4)
26^4
"KRN",101,4621,10,0)
^101.01PA^5^5
"KRN",101,4621,10,1,0)
4620^AP^2^
"KRN",101,4621,10,1,"^")
IBJP IB PAY-TO PROVIDER ADD
"KRN",101,4621,10,2,0)
4619^DP^7^
"KRN",101,4621,10,2,"^")
IBJP IB PAY-TO PROVIDER DEL
"KRN",101,4621,10,3,0)
4618^EP^5^
"KRN",101,4621,10,3,"^")
IBJP IB PAY-TO PROVIDER EDIT
"KRN",101,4621,10,4,0)
4617^AS^10^
"KRN",101,4621,10,4,"^")
IBJP IB PAY-TO PROVIDER DIVISIONS
"KRN",101,4621,10,5,0)
642^EX^12^^^Exit
"KRN",101,4621,10,5,"^")
VALM QUIT
"KRN",101,4621,26)
D SHOW^VALM
"KRN",101,4621,99)
61552,52857
"KRN",101,4622,-1)
0^7
"KRN",101,4622,0)
IBJP IB PAY-TO DIVISION ADD^Associate Division^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4622,4)
^^^AD
"KRN",101,4622,20)
D DIVADD^IBJPS4
"KRN",101,4622,99)
61305,38986
"KRN",101,4624,-1)
0^9
"KRN",101,4624,0)
IBJP IB PAY-TO ASSOCIATIONS MENU^Pay-To Associations Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4624,4)
40^4
"KRN",101,4624,10,0)
^101.01PA^3^2
"KRN",101,4624,10,1,0)
4622^AS^3^
"KRN",101,4624,10,1,"^")
IBJP IB PAY-TO DIVISION ADD
"KRN",101,4624,10,3,0)
642^EX^7^^^Exit
"KRN",101,4624,10,3,"^")
VALM QUIT
"KRN",101,4624,26)
D SHOW^VALM
"KRN",101,4624,99)
61552,52857
"KRN",409.61,807,-1)
0^1
"KRN",409.61,807,0)
IBJP IB PAY-TO PROVIDERS^1^^80^2^19^1^1^IB Pay-To Providers^IBJP IB PAY-TO PROVIDERS MENU^Pay-To Providers^1^^1
"KRN",409.61,807,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,807,"ARRAY")

"KRN",409.61,807,"FNL")
D EXIT^IBJPS3
"KRN",409.61,807,"HDR")
D HDR^IBJPS3
"KRN",409.61,807,"HLP")
D HELP^IBJPS3
"KRN",409.61,807,"INIT")
D INIT^IBJPS3
"KRN",409.61,808,-1)
0^2
"KRN",409.61,808,0)
IBJP IB PAY-TO ASSOCIATIONS^1^^80^2^17^1^1^IB Pay-To Associations^IBJP IB PAY-TO ASSOCIATIONS MENU^Pay-To Provider Associations^1^^1
"KRN",409.61,808,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,808,"FNL")
D EXIT^IBJPS4
"KRN",409.61,808,"HDR")
D HDR^IBJPS4
"KRN",409.61,808,"HLP")
D HELP^IBJPS4
"KRN",409.61,808,"INIT")
D INIT^IBJPS4
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
400^3090710
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3090710
"PKG",200,22,1,"PAH",1,1,1,0)
eClaims Additional Claim Form and Transmission Data (EAD)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
46
"RTN","IBCBB")
0^22^B73522821^B71092497
"RTN","IBCBB",1,0)
IBCBB ;ALB/AAS - EDIT CHECK ROUTINE TO BE INVOKED BEFORE ALL BILL APPROVAL ACTIONS ;2-NOV-89
"RTN","IBCBB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,51,137,288,327,361,371,377,400**;21-MAR-94;Build 52
"RTN","IBCBB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB",4,0)
 ;
"RTN","IBCBB",5,0)
 ;MAP TO DGCRBB
"RTN","IBCBB",6,0)
 ;
"RTN","IBCBB",7,0)
 ;IBNDn = IBND(n) = ^ib(399,n)
"RTN","IBCBB",8,0)
 ;RETURNS:
"RTN","IBCBB",9,0)
 ;IBER=fields with errors separated by semi-colons
"RTN","IBCBB",10,0)
 ;PRCASV("OKAY")=1 if iber="" and $D(prcasv("array")) compete
"RTN","IBCBB",11,0)
 ;
"RTN","IBCBB",12,0)
GVAR ;set up variables for mccr
"RTN","IBCBB",13,0)
 Q:'$D(IBIFN)  F I=0,"M","U","U1","S","MP","TX","UF3","UF31","U2" S @("IBND"_I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCBB",14,0)
 S IBBNO=$P(IBND0,"^"),DFN=$P(IBND0,"^",2),IBEVDT=$P(IBND0,"^",3)
"RTN","IBCBB",15,0)
 S IBLOC=$P(IBND0,"^",4),IBCL=$P(IBND0,"^",5),IBTF=$P(IBND0,"^",6)
"RTN","IBCBB",16,0)
 S IBAT=$P(IBND0,"^",7),IBWHO=$P(IBND0,"^",11),IBST=$P(IBND0,"^",13),IBFT=$P(IBND0,"^",19)
"RTN","IBCBB",17,0)
 S IBFDT=$P(IBNDU,"^",1),IBTDT=$P(IBNDU,"^",2)
"RTN","IBCBB",18,0)
 S IBTC=$P(IBNDU1,"^",1),IBFY=$P(IBNDU1,"^",9),IBFYC=$P(IBNDU1,"^",10)
"RTN","IBCBB",19,0)
 S IBEU=$P(IBNDS,"^",2),IBRU=$P(IBNDS,"^",5),IBAU=$P(IBNDS,"^",8)
"RTN","IBCBB",20,0)
 S IBTOB=$$TOB(IBND0),IBTOB12=$E(IBTOB,1,2)
"RTN","IBCBB",21,0)
 K ^TMP($J,"BILL-WARN")
"RTN","IBCBB",22,0)
 Q
"RTN","IBCBB",23,0)
 ;
"RTN","IBCBB",24,0)
EN ;Entry to check for errors
"RTN","IBCBB",25,0)
 N IBQ,IBXERR,IBXDATA,IBXSAVE,IBZPRC92,IBQUIT,IBISEQ,IDDATA,IBFOR,IBC
"RTN","IBCBB",26,0)
 I $D(IBFL) N IBFL
"RTN","IBCBB",27,0)
 K ^TMP($J)
"RTN","IBCBB",28,0)
 W !
"RTN","IBCBB",29,0)
 S IBER="" D GVAR I '$D(IBND0) S IBER=-1 Q
"RTN","IBCBB",30,0)
 ;
"RTN","IBCBB",31,0)
 ;patient in patient file
"RTN","IBCBB",32,0)
 I DFN="" S IBER=IBER_"IB057;"
"RTN","IBCBB",33,0)
 I DFN]"",'$D(^DPT(DFN)) S IBER=IBER_"IB057;"
"RTN","IBCBB",34,0)
 ;
"RTN","IBCBB",35,0)
 ;Event date in correct format
"RTN","IBCBB",36,0)
 I IBEVDT="" S IBER=IBER_"IB049;"
"RTN","IBCBB",37,0)
 I IBEVDT]"",IBEVDT'?7N&(IBEVDT'?7N1".".N) S IBER=IBER_"IB049;"
"RTN","IBCBB",38,0)
 ;
"RTN","IBCBB",39,0)
 ;Rate Type
"RTN","IBCBB",40,0)
 I IBAT="" S IBER=IBER_"IB059;"
"RTN","IBCBB",41,0)
 I IBAT]"",'$D(^DGCR(399.3,IBAT,0)) S IBER=IBER_"IB059;"
"RTN","IBCBB",42,0)
 I IBAT]"",$D(^DGCR(399.3,IBAT,0)),'$P(^(0),"^",6) S IBER=IBER_"IB059;",IBAT=""
"RTN","IBCBB",43,0)
 I IBAT]"",$P($G(^DGCR(399.3,IBAT,0)),"^",6) S IBARTP=$P($$CATN^PRCAFN($P(^DGCR(399.3,IBAT,0),"^",6)),"^",3)
"RTN","IBCBB",44,0)
 ;Check that AR category expects same debtor as defined in who's responsible.
"RTN","IBCBB",45,0)
 I $D(IBARTP),IBWHO="i"&(IBARTP'="T")!(IBWHO="p"&("PC"'[IBARTP))!(IBWHO="o"&(IBARTP'="N")) S IBER=IBER_"IB058;"
"RTN","IBCBB",46,0)
 ;
"RTN","IBCBB",47,0)
 ;Who's Responsible
"RTN","IBCBB",48,0)
 I IBWHO=""!($L(IBWHO)>1)!("iop"'[IBWHO) S IBER=IBER_"IB065;"
"RTN","IBCBB",49,0)
 S IBMRA=$S($$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)):$$TXMT^IBCEF4(IBIFN)>0,1:0)
"RTN","IBCBB",50,0)
 ;  MCR will not reimburse is only valid if there is subsequent insurance
"RTN","IBCBB",51,0)
 ;   that will reimburse
"RTN","IBCBB",52,0)
 I IBWHO="i" D
"RTN","IBCBB",53,0)
 . I IBMRA D  Q
"RTN","IBCBB",54,0)
 .. N Z,IBZ
"RTN","IBCBB",55,0)
 .. S IBZ=0
"RTN","IBCBB",56,0)
 .. F Z=$$COBN^IBCEF(IBIFN):1:3 I $D(^DGCR(399,IBIFN,"I"_(Z+1))),$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_(Z+1))),0)),U,2)'="N" S IBZ=1 Q
"RTN","IBCBB",57,0)
 .. I 'IBZ S IBER=IBER_"IB054;" D WARN^IBCBB11("A valid claim for MEDICARE WNR needs subsequent ins. that will reimburse")
"RTN","IBCBB",58,0)
 ..
"RTN","IBCBB",59,0)
 . I $$COB^IBCEF(IBIFN)="S",$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))=1,$D(^DGCR(399,IBIFN,"I3")) Q
"RTN","IBCBB",60,0)
 . I $S('IBNDMP:1,1:$P(IBNDMP,U,2)'=$$BPP^IBCNS2(IBIFN,1)) S IBER=IBER_"IB054;"
"RTN","IBCBB",61,0)
 I IBWHO="o",'$P(IBNDM,"^",11) S IBER=IBER_"IB053;"
"RTN","IBCBB",62,0)
 ;
"RTN","IBCBB",63,0)
 ; Billing Provider check - IB*2*400
"RTN","IBCBB",64,0)
 D BP^IBCBB0(IBIFN)
"RTN","IBCBB",65,0)
 ;
"RTN","IBCBB",66,0)
 ; Pay-to Provider check - IB*2*400
"RTN","IBCBB",67,0)
 D PAYTO^IBCBB0(IBIFN)
"RTN","IBCBB",68,0)
 ;
"RTN","IBCBB",69,0)
 ; All insurance subscribers must have a birth date on file
"RTN","IBCBB",70,0)
 ;  - 11/10/04 - IB*2.0*288
"RTN","IBCBB",71,0)
 ;  - 12/14/06 - IB*2.0*361 - must have INSURED'S SEX too
"RTN","IBCBB",72,0)
 ; IB error codes
"RTN","IBCBB",73,0)
 ;    IB221 - Primary insurance subscriber missing date of birth
"RTN","IBCBB",74,0)
 ;    IB222 - Secondary insurance subscriber missing date of birth
"RTN","IBCBB",75,0)
 ;    IB223 - Tertiary insurance subscriber missing date of birth
"RTN","IBCBB",76,0)
 ;    IB261 - Primary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",77,0)
 ;    IB262 - Secondary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",78,0)
 ;    IB263 - Tertiary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",79,0)
 ;
"RTN","IBCBB",80,0)
 F IBISEQ=1:1:3 D
"RTN","IBCBB",81,0)
 . I '$P($G(^DGCR(399,IBIFN,"I"_IBISEQ)),U,1) Q   ; no insurance here
"RTN","IBCBB",82,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",83,0)
 . S IDDATA=$$INSDEM^IBCEF(IBIFN,IBISEQ)
"RTN","IBCBB",84,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",85,0)
 . ;
"RTN","IBCBB",86,0)
 . I '$P(IDDATA,U,1) D ERR(221)   ; birth date missing
"RTN","IBCBB",87,0)
 . ;
"RTN","IBCBB",88,0)
 . I "^M^F^"'[(U_$P(IDDATA,U,2)_U) D ERR(261)  ; sex missing
"RTN","IBCBB",89,0)
 . ;
"RTN","IBCBB",90,0)
 . ; IB*2*371 - esg - check for other missing insurance pieces
"RTN","IBCBB",91,0)
 . ; check insured's name, primary ID#, pt. relationship to insured,
"RTN","IBCBB",92,0)
 . ; and subscriber address data  
"RTN","IBCBB",93,0)
 . N INNAME,SUBID,PTREL,SFA,CAS,LN,FN
"RTN","IBCBB",94,0)
 . ;
"RTN","IBCBB",95,0)
 . ;          IB273 - Primary Insurance name of insured missing
"RTN","IBCBB",96,0)
 . ;          IB274 - Secondary Insurance name of insured missing
"RTN","IBCBB",97,0)
 . ;          IB275 - Tertiary Insurance name of insured missing
"RTN","IBCBB",98,0)
 . S INNAME=$$POLICY^IBCEF(IBIFN,17,IBISEQ)
"RTN","IBCBB",99,0)
 . S LN=$P(INNAME,",",1),FN=$P(INNAME,",",2)   ; last name,first name
"RTN","IBCBB",100,0)
 . S LN=$$NOPUNCT^IBCEF(LN,1)
"RTN","IBCBB",101,0)
 . S FN=$$NOPUNCT^IBCEF(FN,1)
"RTN","IBCBB",102,0)
 . I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",103,0)
 . S LN=$$NAME^IBCEFG1(INNAME)  ; additional name checks
"RTN","IBCBB",104,0)
 . S FN=$P(LN,U,2)
"RTN","IBCBB",105,0)
 . S LN=$P(LN,U,1)
"RTN","IBCBB",106,0)
 . I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",107,0)
 . ;
"RTN","IBCBB",108,0)
 . ;          IB276 - Primary Insurance subscriber ID missing
"RTN","IBCBB",109,0)
 . ;          IB277 - Secondary Insurance subscriber ID missing
"RTN","IBCBB",110,0)
 . ;          IB278 - Tertiary Insurance subscriber ID missing
"RTN","IBCBB",111,0)
 . S SUBID=$$NOPUNCT^IBCEF($$POLICY^IBCEF(IBIFN,2,IBISEQ),1)
"RTN","IBCBB",112,0)
 . I SUBID="" D ERR(276)     ; subscriber ID# missing
"RTN","IBCBB",113,0)
 . ;
"RTN","IBCBB",114,0)
 . ;          IB279 - Primary Insurance missing pt relationship
"RTN","IBCBB",115,0)
 . ;          IB280 - Secondary Insurance missing pt relationship
"RTN","IBCBB",116,0)
 . ;          IB281 - Tertiary Insurance missing pt relationship
"RTN","IBCBB",117,0)
 . S PTREL=$$POLICY^IBCEF(IBIFN,16,IBISEQ)
"RTN","IBCBB",118,0)
 . I PTREL="" D ERR(279)      ; missing patient relationship to insured
"RTN","IBCBB",119,0)
 . ;
"RTN","IBCBB",120,0)
 . ; subscriber address section
"RTN","IBCBB",121,0)
 . S SFA=$$INSADDR^IBCEF(IBIFN,IBISEQ)     ; full address all pieces
"RTN","IBCBB",122,0)
 . S CAS=$$NOPUNCT^IBCEF($P(SFA,U,2,5),1)  ; string city,st,zip,addr1
"RTN","IBCBB",123,0)
 . ;
"RTN","IBCBB",124,0)
 . ;          IB282 - Primary Insurance address line 1 missing
"RTN","IBCBB",125,0)
 . ;          IB283 - Secondary Insurance address line 1 missing
"RTN","IBCBB",126,0)
 . ;          IB284 - Tertiary Insurance address line 1 missing
"RTN","IBCBB",127,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,5),1)="" D   ; address line 1 is blank
"RTN","IBCBB",128,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",129,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(282) Q
"RTN","IBCBB",130,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",131,0)
 .. I CAS'="" D ERR(282) Q
"RTN","IBCBB",132,0)
 .. Q
"RTN","IBCBB",133,0)
 . ;
"RTN","IBCBB",134,0)
 . ;          IB285 - Primary Insurance city missing
"RTN","IBCBB",135,0)
 . ;          IB286 - Secondary Insurance city missing
"RTN","IBCBB",136,0)
 . ;          IB287 - Tertiary Insurance city missing
"RTN","IBCBB",137,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,2),1)="" D   ; city is blank
"RTN","IBCBB",138,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",139,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(285) Q
"RTN","IBCBB",140,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",141,0)
 .. I CAS'="" D ERR(285) Q
"RTN","IBCBB",142,0)
 .. Q
"RTN","IBCBB",143,0)
 . ;
"RTN","IBCBB",144,0)
 . ;          IB288 - Primary Insurance state missing
"RTN","IBCBB",145,0)
 . ;          IB289 - Secondary Insurance state missing
"RTN","IBCBB",146,0)
 . ;          IB290 - Tertiary Insurance state missing
"RTN","IBCBB",147,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,3),1)="" D   ; state is blank
"RTN","IBCBB",148,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",149,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(288) Q
"RTN","IBCBB",150,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",151,0)
 .. I CAS'="" D ERR(288) Q
"RTN","IBCBB",152,0)
 .. Q
"RTN","IBCBB",153,0)
 . ;
"RTN","IBCBB",154,0)
 . ;          IB291 - Primary Insurance zipcode missing
"RTN","IBCBB",155,0)
 . ;          IB292 - Secondary Insurance zipcode missing
"RTN","IBCBB",156,0)
 . ;          IB293 - Tertiary Insurance zipcode missing
"RTN","IBCBB",157,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,4),1)="" D   ; zipcode is blank
"RTN","IBCBB",158,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",159,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(291) Q
"RTN","IBCBB",160,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",161,0)
 .. I CAS'="" D ERR(291) Q
"RTN","IBCBB",162,0)
 .. Q
"RTN","IBCBB",163,0)
 . ;
"RTN","IBCBB",164,0)
 . Q
"RTN","IBCBB",165,0)
 ;
"RTN","IBCBB",166,0)
 ; esg - IB*2*371 - check patient address fields
"RTN","IBCBB",167,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",168,0)
 ;
"RTN","IBCBB",169,0)
 S IBFOR=0                              ; foreign address flag
"RTN","IBCBB",170,0)
 S IBC=+$$PTADDR^IBCEF(IBIFN,25)        ; country code ien
"RTN","IBCBB",171,0)
 I IBC D
"RTN","IBCBB",172,0)
 . N CODE
"RTN","IBCBB",173,0)
 . S CODE=$$GET1^DIQ(779.004,IBC,.01)   ; .01 code field file 779.004
"RTN","IBCBB",174,0)
 . I CODE'="",CODE'="USA" S IBFOR=1     ; foreign country exists
"RTN","IBCBB",175,0)
 . Q
"RTN","IBCBB",176,0)
 ;
"RTN","IBCBB",177,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,1),1)="" S IBER=IBER_"IB269;"
"RTN","IBCBB",178,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,4),1)="" S IBER=IBER_"IB270;"
"RTN","IBCBB",179,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,5),1)="",'IBFOR S IBER=IBER_"IB271;"
"RTN","IBCBB",180,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,11),1)="",'IBFOR S IBER=IBER_"IB272;"
"RTN","IBCBB",181,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",182,0)
 ;
"RTN","IBCBB",183,0)
 D PAYERADD^IBCBB0(IBIFN)     ; check the payer addresses
"RTN","IBCBB",184,0)
 ;
"RTN","IBCBB",185,0)
 ; esg - 9/20/07 - IB patch 371 - prevent EDI transmission for 3 payer
"RTN","IBCBB",186,0)
 ;       claims for all but the first payer.  To be removed when Emdeon
"RTN","IBCBB",187,0)
 ;       and FSC are able to deal with these.
"RTN","IBCBB",188,0)
 ;
"RTN","IBCBB",189,0)
 I +$G(^DGCR(399,IBIFN,"I2")),+$G(^DGCR(399,IBIFN,"I3")),$$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB",190,0)
 . ; for MRA request claims, make sure the MRA secondary claim is forced to print
"RTN","IBCBB",191,0)
 . I $$REQMRA^IBEFUNC(IBIFN) D  Q
"RTN","IBCBB",192,0)
 .. I '$P($G(^DGCR(399,IBIFN,"TX")),U,9) S IBER=IBER_"IB146;"
"RTN","IBCBB",193,0)
 .. Q
"RTN","IBCBB",194,0)
 . ;
"RTN","IBCBB",195,0)
 . I $$COBN^IBCEF(IBIFN)=1 Q   ; primary payer sequence claims are OK
"RTN","IBCBB",196,0)
 . ;
"RTN","IBCBB",197,0)
 . ; But claims with a payer sequence of 2 or 3 need to print locally
"RTN","IBCBB",198,0)
 . S IBER=IBER_"IB147;"
"RTN","IBCBB",199,0)
 . Q
"RTN","IBCBB",200,0)
 ;
"RTN","IBCBB",201,0)
 D ^IBCBB1
"RTN","IBCBB",202,0)
 Q
"RTN","IBCBB",203,0)
 ;
"RTN","IBCBB",204,0)
EDIT(IBIFN) ; Run edits from within the billing edit screens
"RTN","IBCBB",205,0)
 N IBVIEW,IBDISP,IBNOFIX,DIR,X,Y
"RTN","IBCBB",206,0)
 S (IBNOFIX,IBVIEW,IBDISP)=1
"RTN","IBCBB",207,0)
 D EDITS^IBCB2
"RTN","IBCBB",208,0)
 W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCBB",209,0)
 Q
"RTN","IBCBB",210,0)
 ;
"RTN","IBCBB",211,0)
TOB(IBND0) ;
"RTN","IBCBB",212,0)
 ; IBND0 = the 0-node of the bill (file 399)
"RTN","IBCBB",213,0)
 Q ($P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)_$P(IBND0,U,26))
"RTN","IBCBB",214,0)
 ;
"RTN","IBCBB",215,0)
ERR(Z) ; update IBER variable from the above insurance checks
"RTN","IBCBB",216,0)
 ; Z is the IB error code# for the primary insurance error
"RTN","IBCBB",217,0)
 N IBERRNO
"RTN","IBCBB",218,0)
 S IBERRNO="IB"_(Z+IBISEQ-1)
"RTN","IBCBB",219,0)
 I IBER[IBERRNO Q
"RTN","IBCBB",220,0)
 S IBER=IBER_IBERRNO_";"
"RTN","IBCBB",221,0)
 Q
"RTN","IBCBB",222,0)
 ;
"RTN","IBCBB0")
0^23^B13617325^B3028781
"RTN","IBCBB0",1,0)
IBCBB0 ;ALB/ESG - IB edit check routine continuation ;12-Mar-2008
"RTN","IBCBB0",2,0)
 ;;2.0;INTEGRATED BILLING;**377,400**;21-MAR-94;Build 52
"RTN","IBCBB0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB0",4,0)
 ;
"RTN","IBCBB0",5,0)
 Q
"RTN","IBCBB0",6,0)
 ;
"RTN","IBCBB0",7,0)
BP(IBIFN) ; make sure the claim has a valid Billing Provider w/address
"RTN","IBCBB0",8,0)
 N BPZ,BPAD1,BPCITY,BPST,BPZIP,IBZ
"RTN","IBCBB0",9,0)
 S BPZ=$$B^IBCEF79(IBIFN)
"RTN","IBCBB0",10,0)
 I 'BPZ D  G BPX
"RTN","IBCBB0",11,0)
 . S IBER=IBER_"IB140;"                ; fatal error# IB140 - This claim has no Billing Provider.
"RTN","IBCBB0",12,0)
 . D WARN^IBCBB11($P(BPZ,U,2))         ; display reason as a warning
"RTN","IBCBB0",13,0)
 . Q
"RTN","IBCBB0",14,0)
 ;
"RTN","IBCBB0",15,0)
 ; billing provider exists....check the address pieces.
"RTN","IBCBB0",16,0)
 ; for printed, UB claims we always use the billing provider data in FL-1 from the Inst file.
"RTN","IBCBB0",17,0)
 ; for EDI claims or for printed CMS-1500 claims, we use the GETBP^IBCEF79 utility to get the billing provider data.
"RTN","IBCBB0",18,0)
 I '$$TXMT^IBCEF4(IBIFN),$$FT^IBCEF(IBIFN)=3 D
"RTN","IBCBB0",19,0)
 . S BPAD1=$$GETFAC^IBCEP8(+BPZ,0,1)
"RTN","IBCBB0",20,0)
 . S BPCITY=$$GETFAC^IBCEP8(+BPZ,0,"3C")
"RTN","IBCBB0",21,0)
 . S BPST=$$GETFAC^IBCEP8(+BPZ,0,"3S")
"RTN","IBCBB0",22,0)
 . S BPZIP=$$GETFAC^IBCEP8(+BPZ,0,"3Z")
"RTN","IBCBB0",23,0)
 . Q
"RTN","IBCBB0",24,0)
 ;
"RTN","IBCBB0",25,0)
 E  D
"RTN","IBCBB0",26,0)
 . D GETBP^IBCEF79(IBIFN,"",+BPZ,"IBCBB0",.IBZ)
"RTN","IBCBB0",27,0)
 . S BPAD1=$G(IBZ("IBCBB0","ADDR1"))
"RTN","IBCBB0",28,0)
 . S BPCITY=$G(IBZ("IBCBB0","CITY"))
"RTN","IBCBB0",29,0)
 . S BPST=$G(IBZ("IBCBB0","ST"))
"RTN","IBCBB0",30,0)
 . S BPZIP=$G(IBZ("IBCBB0","ZIP"))
"RTN","IBCBB0",31,0)
 . Q
"RTN","IBCBB0",32,0)
 ;
"RTN","IBCBB0",33,0)
 I '$L(BPAD1)!'$L(BPCITY)!'$L(BPST)!'$L(BPZIP) S IBER=IBER_"IB148;"
"RTN","IBCBB0",34,0)
BPX ;
"RTN","IBCBB0",35,0)
 Q
"RTN","IBCBB0",36,0)
 ;
"RTN","IBCBB0",37,0)
PAYTO(IBIFN) ; check for missing Pay-to Provider information
"RTN","IBCBB0",38,0)
 ;
"RTN","IBCBB0",39,0)
 ; Possible IB error codes for Pay-to Provider:
"RTN","IBCBB0",40,0)
 ;    IB177 - No Pay-to Provider defined for this claim.
"RTN","IBCBB0",41,0)
 ;    IB178 - Pay-to Provider on the claim is missing a name.
"RTN","IBCBB0",42,0)
 ;    IB179 - Pay-to Provider on the claim is missing an NPI.
"RTN","IBCBB0",43,0)
 ;    IB180 - Pay-to Provider on the claim is missing a Tax ID number.
"RTN","IBCBB0",44,0)
 ;    IB181 - Address Line 1, City, State, and ZIP are required for Pay-to Provider.
"RTN","IBCBB0",45,0)
 ;
"RTN","IBCBB0",46,0)
 N Z,PTPERR,PTPINST,PTPFT,PTPFTN,Z1,PTPFLAG
"RTN","IBCBB0",47,0)
 S Z=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCBB0",48,0)
 S PTPERR=$P(Z,U,10)           ; list of any pay-to provider errors as listed above
"RTN","IBCBB0",49,0)
 I PTPERR'="" S IBER=IBER_PTPERR
"RTN","IBCBB0",50,0)
 ;
"RTN","IBCBB0",51,0)
 I IBER["IB177" G PAYTOX       ; no need to continue if there is no pay-to provider
"RTN","IBCBB0",52,0)
 ;
"RTN","IBCBB0",53,0)
 ; display a warning if the pay-to provider facility type is wrong
"RTN","IBCBB0",54,0)
 S PTPINST=$P(Z,U,11)                         ; pay-to provider Institution file pointer (file 4 ien)
"RTN","IBCBB0",55,0)
 S PTPFT=+$$GET1^DIQ(4,+PTPINST_",",13,"I")   ; pay-to provider facility type ien
"RTN","IBCBB0",56,0)
 S PTPFTN=$$WHAT^XUAF4(PTPINST,13)            ; pay-to provider facility type name
"RTN","IBCBB0",57,0)
 I PTPFTN="" S PTPFTN="UNKNOWN"
"RTN","IBCBB0",58,0)
 ;
"RTN","IBCBB0",59,0)
 S (Z1,PTPFLAG)=""
"RTN","IBCBB0",60,0)
 I PTPFT S Z1=+$O(^IBE(350.9,1,20,"B",PTPFT,0))
"RTN","IBCBB0",61,0)
 I Z1 S PTPFLAG=$P($G(^IBE(350.9,1,20,Z1,0)),U,2)
"RTN","IBCBB0",62,0)
 ;
"RTN","IBCBB0",63,0)
 ; display warning message if the flag is not true
"RTN","IBCBB0",64,0)
 I 'PTPFLAG D WARN^IBCBB11("Pay-to Prov "_$P(Z,U,1)_" on this claim has facility type "_PTPFTN_".")
"RTN","IBCBB0",65,0)
 ;
"RTN","IBCBB0",66,0)
PAYTOX ;
"RTN","IBCBB0",67,0)
 Q
"RTN","IBCBB0",68,0)
 ;
"RTN","IBCBB0",69,0)
PAYERADD(IBIFN) ; check to make sure payer address is present for all payers on the claim
"RTN","IBCBB0",70,0)
 ; Address line 1, city, state, and zip must be present for all non-Medicare payers on the claim
"RTN","IBCBB0",71,0)
 ;
"RTN","IBCBB0",72,0)
 NEW IBZ,OK,Z,IBL,N,SEQ,ADDR,IBXDATA,IBXSAVE,IBXARRAY,IBXARRY,IBXERR
"RTN","IBCBB0",73,0)
 ;
"RTN","IBCBB0",74,0)
 ; check current payer address if not Medicare
"RTN","IBCBB0",75,0)
 I '$$WNRBILL^IBEFUNC(IBIFN) D
"RTN","IBCBB0",76,0)
 . D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCBB0",77,0)
 . S OK=1
"RTN","IBCBB0",78,0)
 . F Z=1,4,5,6 I $G(IBZ(Z))="" S OK=0 Q
"RTN","IBCBB0",79,0)
 . I 'OK S IBER=IBER_"IB172;"
"RTN","IBCBB0",80,0)
 . Q
"RTN","IBCBB0",81,0)
 ;
"RTN","IBCBB0",82,0)
 ; check other payer addresses if they exist
"RTN","IBCBB0",83,0)
 D F^IBCEF("N-OTH INSURANCE SEQUENCE","IBL",,IBIFN)    ; other payer sequence array
"RTN","IBCBB0",84,0)
 I '$O(IBXSAVE(1,0)) G PAYERAX                         ; no other payers on claim
"RTN","IBCBB0",85,0)
 S N=0 F  S N=$O(IBXSAVE(1,N)) Q:'N  D
"RTN","IBCBB0",86,0)
 . S SEQ=IBXSAVE(1,N)                                  ; other payer sequence letter
"RTN","IBCBB0",87,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,SEQ) Q                    ; ignore Medicare addresses
"RTN","IBCBB0",88,0)
 . S ADDR=$$ADD^IBCNADD(IBIFN,SEQ)                     ; other payer address string
"RTN","IBCBB0",89,0)
 . S OK=1
"RTN","IBCBB0",90,0)
 . F Z=1,4,5,6 I $P(ADDR,U,Z)="" S OK=0 Q
"RTN","IBCBB0",91,0)
 . I 'OK S IBER=IBER_"IB173;"
"RTN","IBCBB0",92,0)
 . Q
"RTN","IBCBB0",93,0)
 ;
"RTN","IBCBB0",94,0)
PAYERAX ;
"RTN","IBCBB0",95,0)
 Q
"RTN","IBCBB0",96,0)
 ;
"RTN","IBCBB11")
0^32^B25043010^B25129928
"RTN","IBCBB11",1,0)
IBCBB11 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;12 Jun 2006  3:45 PM
"RTN","IBCBB11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,343,363,371,395,392,401,384,400**;21-MAR-94;Build 52
"RTN","IBCBB11",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB11",4,0)
 ;
"RTN","IBCBB11",5,0)
WARN(IBDISP) ; Set warning in global
"RTN","IBCBB11",6,0)
 ; DISP = warning text to display
"RTN","IBCBB11",7,0)
 ;
"RTN","IBCBB11",8,0)
 N Z
"RTN","IBCBB11",9,0)
 S Z=+$O(^TMP($J,"BILL-WARN",""),-1)
"RTN","IBCBB11",10,0)
 I Z=0 S ^TMP($J,"BILL-WARN",1)=$J("",5)_"**Warnings**:",Z=1
"RTN","IBCBB11",11,0)
 S Z=Z+1,^TMP($J,"BILL-WARN",Z)=$J("",5)_IBDISP
"RTN","IBCBB11",12,0)
 Q
"RTN","IBCBB11",13,0)
 ;
"RTN","IBCBB11",14,0)
MULTDIV(IBIFN,IBND0) ; Check for multiple divisions on a bill ien IBIFN
"RTN","IBCBB11",15,0)
 ; IBND0 = 0-node of bill
"RTN","IBCBB11",16,0)
 ;
"RTN","IBCBB11",17,0)
 ;  Function returns 1 if more than 1 division found on bill
"RTN","IBCBB11",18,0)
 N Z,Z0,Z1,MULT
"RTN","IBCBB11",19,0)
 S MULT=0,Z1=$P(IBND0,U,22)
"RTN","IBCBB11",20,0)
 I Z1 D
"RTN","IBCBB11",21,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$P(^(Z,0),U,7) I Z0,Z0'=Z1 S MULT=1 Q
"RTN","IBCBB11",22,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=$P(^(Z,0),U,6) I Z0,Z0'=Z1 S MULT=2 Q
"RTN","IBCBB11",23,0)
 I 'Z1 S MULT=3
"RTN","IBCBB11",24,0)
 Q MULT
"RTN","IBCBB11",25,0)
 ;
"RTN","IBCBB11",26,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB11",27,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB11",28,0)
 ;
"RTN","IBCBB11",29,0)
NPICHK ; Check for required NPIs
"RTN","IBCBB11",30,0)
 N IBNPIS,IBNONPI,IBNPIREQ,Z
"RTN","IBCBB11",31,0)
 S IBNPIREQ=$$NPIREQ^IBCEP81(DT)  ; Check if NPI is required
"RTN","IBCBB11",32,0)
 ; Check providers
"RTN","IBCBB11",33,0)
 S IBNPIS=$$PROVNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",34,0)
 I $L(IBNONPI) F Z=1:1:$L(IBNONPI,U) D
"RTN","IBCBB11",35,0)
 . I IBNPIREQ S IBER=IBER_"IB"_(140+$P(IBNONPI,U,Z))_";" Q  ; If required, set error
"RTN","IBCBB11",36,0)
 . D WARN("NPI for the "_$P("referring^operating^rendering^attending^supervising^^^^other",U,$P(IBNONPI,U,Z))_" provider has no value")  ; Else, set warning
"RTN","IBCBB11",37,0)
 ; Check organizations
"RTN","IBCBB11",38,0)
 S IBNONPI=""
"RTN","IBCBB11",39,0)
 S IBNPIS=$$ORGNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",40,0)
 I $L(IBNONPI) F Z=1:1:$L(IBNONPI,U) D
"RTN","IBCBB11",41,0)
 . ; Turn IB161, IB162 to a warning
"RTN","IBCBB11",42,0)
 . I IBNPIREQ,$P(IBNONPI,U,Z)=3 S IBER=IBER_"IB163;" Q
"RTN","IBCBB11",43,0)
 . ; PRXM/KJH - Changed descriptions.
"RTN","IBCBB11",44,0)
 . D WARN("NPI for the "_$P("Service Facility^Non-VA Service Facility^Billing Provider",U,$P(IBNONPI,U,Z))_" has no value")  ; Else, set warning
"RTN","IBCBB11",45,0)
 Q
"RTN","IBCBB11",46,0)
 ;
"RTN","IBCBB11",47,0)
TAXCHK ; Check for required taxonomies
"RTN","IBCBB11",48,0)
 N IBTAXS,IBNOTAX,IBTAXREQ,Z
"RTN","IBCBB11",49,0)
 S IBTAXREQ=$$TAXREQ^IBCEP81(DT)  ; Check if taxonomy is required
"RTN","IBCBB11",50,0)
 ; Check providers
"RTN","IBCBB11",51,0)
 S IBTAXS=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",52,0)
 I $L(IBNOTAX) F Z=1:1:$L(IBNOTAX,U) D
"RTN","IBCBB11",53,0)
 . ; Only Referring, Rendering and Attending are currently sent to the payer
"RTN","IBCBB11",54,0)
 . I IBTAXREQ,"134"[$P(IBNOTAX,U,Z) S IBER=IBER_"IB"_(250+$P(IBNOTAX,U,Z))_";" Q  ; If required, set error
"RTN","IBCBB11",55,0)
 . D WARN("Taxonomy for the "_$P("referring^operating^rendering^attending^supervising^^^^other",U,$P(IBNOTAX,U,Z))_" provider has no value")  ; Else, set warning
"RTN","IBCBB11",56,0)
 ; Check organizations
"RTN","IBCBB11",57,0)
 S IBNOTAX=""
"RTN","IBCBB11",58,0)
 S IBTAXS=$$ORGTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",59,0)
 I $L(IBNOTAX) F Z=1:1:$L(IBNOTAX,U) D
"RTN","IBCBB11",60,0)
 . ; Turn IB165, IB166 to a warning
"RTN","IBCBB11",61,0)
 . I IBTAXREQ,$P(IBNOTAX,U,Z)=3 S IBER=IBER_"IB167;" Q
"RTN","IBCBB11",62,0)
 . ; PRXM/KJH - Changed descriptions.
"RTN","IBCBB11",63,0)
 . D WARN("Taxonomy for the "_$P("Service Facility^Non-VA Service Facility^Billing Provider",U,$P(IBNOTAX,U,Z))_" has no value")  ; Else, set warning
"RTN","IBCBB11",64,0)
 Q
"RTN","IBCBB11",65,0)
 ;
"RTN","IBCBB11",66,0)
VALNDC(IBIFN,IBDFN) ; IB*2*363 - validate NDC# between PRESCRIPTION file (#52)
"RTN","IBCBB11",67,0)
 ; and IB BILL/CLAIMS PRESCRIPTION REFILL file (#362.4)
"RTN","IBCBB11",68,0)
 ; input - IBIFN = internal entry number of the billing record in the BILL/CLAIMS file (#399)
"RTN","IBCBB11",69,0)
 ;         IBDFN = internal entry number of patient record in the PATIENT file (#2)
"RTN","IBCBB11",70,0)
 N IBX,IBRXCOL
"RTN","IBCBB11",71,0)
 ; call program that determines if NDC differences exist
"RTN","IBCBB11",72,0)
 D VALNDC^IBEFUNC3(IBIFN,IBDFN,.IBRXCOL)
"RTN","IBCBB11",73,0)
 Q:'$D(IBRXCOL)
"RTN","IBCBB11",74,0)
 ; at least one RX on the IB record has an NDC discrepancy 
"RTN","IBCBB11",75,0)
 S IBX=0 F  S IBX=$O(IBRXCOL(IBX)) Q:'IBX  D WARN("NDC# on Bill does not equal the NDC# on Rx "_IBRXCOL(IBX))
"RTN","IBCBB11",76,0)
 Q
"RTN","IBCBB11",77,0)
 ;
"RTN","IBCBB11",78,0)
PRIIDCHK ; Check for required Pimarary ID (SSN/EIN)
"RTN","IBCBB11",79,0)
 ; If the provider is on the claim, he must have one
"RTN","IBCBB11",80,0)
 ; 
"RTN","IBCBB11",81,0)
 N IBI,IBZ
"RTN","IBCBB11",82,0)
 I $$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB11",83,0)
 . D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ",,IBIFN)
"RTN","IBCBB11",84,0)
 . S IBI="" F  S IBI=$O(^DGCR(399,IBIFN,"PRV","B",IBI)) Q:IBI=""  D
"RTN","IBCBB11",85,0)
 .. I $P(IBZ,U,IBI)="" S IBER=IBER_$S(IBI=1:"IB151;",IBI=2:"IB152;",IBI=3!(IBI=4):"IB321;",IBI=5:"IB153;",IBI=9:"IB154;",1:"")
"RTN","IBCBB11",86,0)
 Q
"RTN","IBCBB11",87,0)
 ;
"RTN","IBCBB11",88,0)
RXNPI(IBIFN) ; check for multiple pharmacy npi's on the same bill
"RTN","IBCBB11",89,0)
 N IBORG,IBRXNPI,IBX,IBY
"RTN","IBCBB11",90,0)
 S IBORG=$$RXSITE^IBCEF73A(IBIFN,.IBORG)
"RTN","IBCBB11",91,0)
 S IBX=0 F  S IBX=$O(IBORG(IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(IBORG(IBX,IBY)) Q:'IBY  S IBRXNPI(+IBORG(IBX,IBY))=""
"RTN","IBCBB11",92,0)
 S (IBX,IBY)=0 F  S IBX=$O(IBRXNPI(IBX)) Q:'IBX  S IBY=IBY+1
"RTN","IBCBB11",93,0)
 I IBY>1 D WARN("Bill has prescriptions resulting from "_IBY_" different NPI locations")
"RTN","IBCBB11",94,0)
 Q
"RTN","IBCBB11",95,0)
 ;
"RTN","IBCBB11",96,0)
ROICHK(IBIFN,IBDFN,IBINS) ; IB*2.0*384 - check prescriptions that contain the
"RTN","IBCBB11",97,0)
 ; special handling code U against the Claims Tracking ROI file (#356.25)
"RTN","IBCBB11",98,0)
 ; to see if an ROI is on file
"RTN","IBCBB11",99,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",100,0)
 ;         IBDFN = IEN of the patient
"RTN","IBCBB11",101,0)
 ;         IBINS = IEN of the payer insurance company (#36)
"RTN","IBCBB11",102,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",103,0)
 ;          1 = a prescription is sensitive and there is no ROI on file
"RTN","IBCBB11",104,0)
 ;
"RTN","IBCBB11",105,0)
 N IBX,IBY0,IBRXIEN,IBDT,IBDRUG,ROIQ
"RTN","IBCBB11",106,0)
 S ROIQ=0
"RTN","IBCBB11",107,0)
 S IBX=0 F  S IBX=$O(^IBA(362.4,"C",IBIFN,IBX)) Q:'IBX  D
"RTN","IBCBB11",108,0)
 .S IBY0=^IBA(362.4,IBX,0),IBRXIEN=$P(IBY0,U,5) I 'IBRXIEN Q
"RTN","IBCBB11",109,0)
 .S IBDT=$P(IBY0,U,3),IBDRUG=$P(IBY0,U,4)
"RTN","IBCBB11",110,0)
 .D ZERO^IBRXUTL(IBDRUG)
"RTN","IBCBB11",111,0)
 .I ^TMP($J,"IBDRUG",IBDRUG,3)["U" D
"RTN","IBCBB11",112,0)
 .. I $$ROI^IBNCPDR4(IBDFN,IBDRUG,IBINS,IBDT) Q  ;ROI is on file
"RTN","IBCBB11",113,0)
 .. D WARN("ROI not on file for prescription "_$$RXAPI1^IBNCPUT1(IBRXIEN,.01,"E"))
"RTN","IBCBB11",114,0)
 .. S ROIQ=1
"RTN","IBCBB11",115,0)
ROICHKQ ;
"RTN","IBCBB11",116,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCBB11",117,0)
 Q ROIQ
"RTN","IBCBB11",118,0)
 ;
"RTN","IBCBB21")
0^41^B13422784^B11171395
"RTN","IBCBB21",1,0)
IBCBB21 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE FOR UB-04 ;2-NOV-89
"RTN","IBCBB21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,291,348,349,403,400**;21-MAR-94;Build 52
"RTN","IBCBB21",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB21",4,0)
 ;
"RTN","IBCBB21",5,0)
EN(IBZPRC92) ;
"RTN","IBCBB21",6,0)
 ;
"RTN","IBCBB21",7,0)
 N ECODE,IBTXMT,IBXDATA,IBDXTYP,IBLPRT,IBI,Z,Z0,Z1,IBREQMRA
"RTN","IBCBB21",8,0)
 I '$D(IBZPRC92) D ALLPROC^IBCVA1(IBIFN,.IBZPRC92)
"RTN","IBCBB21",9,0)
 S IBREQMRA=$$REQMRA^IBEFUNC(IBIFN)    ; MRA?
"RTN","IBCBB21",10,0)
 K IBQUIT S IBQUIT=0
"RTN","IBCBB21",11,0)
 S (Z,Z0,Z1)=0
"RTN","IBCBB21",12,0)
 F  S Z=$O(IBZPRC92(Z)) Q:'Z  S:IBZPRC92(Z)["CPT" Z0=Z0+1 S:IBZPRC92(Z)["ICD" Z1=Z1+1
"RTN","IBCBB21",13,0)
 S IBTXMT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB21",14,0)
 S IBZPRC92=Z0_U_Z1 ;Save # of CPT's and ICD9's
"RTN","IBCBB21",15,0)
 ; More than 50 procedures on a bill - must print locally
"RTN","IBCBB21",16,0)
 I IBTXMT,(+IBZPRC92>50!(+$P(IBZPRC92,U,2)>50)) D  Q:IBQUIT
"RTN","IBCBB21",17,0)
 . I 'IBREQMRA S IBQUIT=$$IBER^IBCBB3(.IBER,308) Q
"RTN","IBCBB21",18,0)
 . I '$P(IBNDTX,U,9) S IBQUIT=$$IBER^IBCBB3(.IBER,325)
"RTN","IBCBB21",19,0)
 ; If ICD9 procedures with dates and charges, bill 11x or 83x needs operating physician
"RTN","IBCBB21",20,0)
 I IBTOB12="11",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB304;"
"RTN","IBCBB21",21,0)
 I IBTOB12="83",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB312;"
"RTN","IBCBB21",22,0)
 ;
"RTN","IBCBB21",23,0)
 ; If any CPT procedures have more than 2 modifiers, warn
"RTN","IBCBB21",24,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>2 S Z0="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 2 modifiers - only first 2 will be used" D WARN^IBCBB11(Z0)
"RTN","IBCBB21",25,0)
 ;
"RTN","IBCBB21",26,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="A" S IBER=IBER_"IB086;"
"RTN","IBCBB21",27,0)
 ;
"RTN","IBCBB21",28,0)
 ; UB-04 Diagnosis Codes
"RTN","IBCBB21",29,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB21",30,0)
 ;
"RTN","IBCBB21",31,0)
 ; Only 24 other dx's + 1 principal dx + 3 ecode dx's are allowed per claim
"RTN","IBCBB21",32,0)
 S (Z,ECODE,IBI)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  Q:IBER["309;"!(ECODE>3)
"RTN","IBCBB21",33,0)
 . S IBI=IBI+1
"RTN","IBCBB21",34,0)
 . I $E($$ICD9^IBACSV(+$P(IBXDATA(Z),U),$$BDATE^IBACSV(IBIFN)))="E" D
"RTN","IBCBB21",35,0)
 .. I ECODE>3 D WARN^IBCBB11("Claim contains more than 3 External Cause of Injury codes.") Q
"RTN","IBCBB21",36,0)
 .. S:ECODE<=3 ECODE=ECODE+1,IBI=IBI-1
"RTN","IBCBB21",37,0)
 .. Q
"RTN","IBCBB21",38,0)
 . ; max DX check does not apply to MRAs
"RTN","IBCBB21",39,0)
 . I IBTXMT,IBI>25 D
"RTN","IBCBB21",40,0)
 .. I 'IBREQMRA Q:$P(IBNDTX,U,8)  S IBER=IBER_"IB309;" Q
"RTN","IBCBB21",41,0)
 .. I '$P(IBNDTX,U,9) S IBER=IBER_"IB326;"
"RTN","IBCBB21",42,0)
 ;
"RTN","IBCBB21",43,0)
 I '$O(IBXDATA(0)) S IBER=IBER_"IB071;"   ;Require Diag code NOIS:OKL-0304-72495
"RTN","IBCBB21",44,0)
 I $O(IBXDATA(0)) D
"RTN","IBCBB21",45,0)
 .S IBDXTYP=$E($$ICD9^IBACSV(+$P(IBXDATA(1),U),$$BDATE^IBACSV(IBIFN)))
"RTN","IBCBB21",46,0)
 .S:IBDXTYP="E" IBER=IBER_"IB117;"
"RTN","IBCBB21",47,0)
 .I $$INPAT^IBCEF(IBIFN),IBDXTYP="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",48,0)
 .Q
"RTN","IBCBB21",49,0)
 I '$$OCC10^IBCBB2(IBIFN,.IBXDATA,3) S IBER=IBER_"IB093;"
"RTN","IBCBB21",50,0)
 ; At least one PRV diagnosis is required for outpatient UB-04 claim
"RTN","IBCBB21",51,0)
 I '$$INPAT^IBCEF(IBIFN),$$CHKPRV^IBCSC8B=3 D WARN^IBCBB11("Outpatient Institutional claims should contain a Patient Reason for Visit.")
"RTN","IBCBB21",52,0)
 ;
"RTN","IBCBB21",53,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",54,0)
 D F^IBCEF("N-UB-04 SERVICE LINE (PRINT)",,,IBIFN)
"RTN","IBCBB21",55,0)
 S (Z0,IBI)=0 F  S IBI=$O(^TMP($J,"IBC-RC",IBI)) Q:'IBI  S Z=$G(^(IBI))  Q:+$P(Z,U,2)=1  I $P(Z,U,2),$P(Z,U,1)=1 D
"RTN","IBCBB21",56,0)
 . I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>99999.99!($P(Z,U,8)>99999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",57,0)
 . Q:$P(Z,U,2)'<180&($P(Z,U,2)'>189)  ;Pass days (LOA) don't matter
"RTN","IBCBB21",58,0)
 . I '$P(Z,U,7),'$P(Z,U,8),'Z0,$$COBN^IBCEF(IBIFN)'>1  S Z0="Rev Code(s) having a 0-charge will not be transmitted for the bill" D WARN^IBCBB11(Z0) S Z0=1
"RTN","IBCBB21",59,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",60,0)
 Q
"RTN","IBCBB21",61,0)
 ;
"RTN","IBCCC2")
0^6^B68853950^B66229263
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155,296,320,348,349,371,400**;21-MAR-94;Build 52
"RTN","IBCCC2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ;
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",14,0)
 ;
"RTN","IBCCC2",15,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBCCC2",16,0)
 F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",17,0)
 ;
"RTN","IBCCC2",18,0)
 ;move multiple level data
"RTN","IBCCC2",19,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBCCC2",22,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",23,0)
 ;
"RTN","IBCCC2",24,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",27,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",28,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
STEP6 N IBGOEND
"RTN","IBCCC2",31,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",32,0)
 ;
"RTN","IBCCC2",33,0)
 ;
"RTN","IBCCC2",34,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY
"RTN","IBCCC2",35,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",36,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",37,0)
 Q
"RTN","IBCCC2",38,0)
 ;
"RTN","IBCCC2",39,0)
 ;
"RTN","IBCCC2",40,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",41,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",42,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",43,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",44,0)
 S IBAC=1
"RTN","IBCCC2",45,0)
 D ^IBCB1
"RTN","IBCCC2",46,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",47,0)
IBSCX ;
"RTN","IBCCC2",48,0)
 Q
"RTN","IBCCC2",49,0)
 ;
"RTN","IBCCC2",50,0)
 ;
"RTN","IBCCC2",51,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",52,0)
 Q
"RTN","IBCCC2",53,0)
U1 F J=1:1:3,15 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",54,0)
 Q
"RTN","IBCCC2",55,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",56,0)
 Q
"RTN","IBCCC2",57,0)
U3 F J=1:1:11 I $P(IBND("U3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U3"),"^",J)=$P(IBND("U3"),"^",J)
"RTN","IBCCC2",58,0)
 Q
"RTN","IBCCC2",59,0)
UF2 F J=1,3 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
UF3 F J=4:1:6 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",62,0)
 Q
"RTN","IBCCC2",63,0)
UF31 F J=3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",64,0)
 Q
"RTN","IBCCC2",65,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",66,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",67,0)
 Q
"RTN","IBCCC2",68,0)
M F J=1:1:9,11:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",69,0)
 Q
"RTN","IBCCC2",70,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",71,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",72,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",73,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",74,0)
 Q
"RTN","IBCCC2",75,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",76,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",77,0)
 Q
"RTN","IBCCC2",78,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",79,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",80,0)
 Q
"RTN","IBCCC2",81,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",82,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",83,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",84,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",85,0)
 Q
"RTN","IBCCC2",86,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",87,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:15 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",88,0)
 Q
"RTN","IBCCC2",89,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",90,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",91,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",92,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",93,0)
 . ; esg - 11/2/06 - IB*2*348 - 50.09 field was added - AUX piece [9]
"RTN","IBCCC2",94,0)
 . I IBND("CP-AUX")'="" F K=1:1:9 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",95,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",96,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",97,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",98,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",99,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",100,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",101,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",102,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",103,0)
 Q
"RTN","IBCCC2",104,0)
 ;
"RTN","IBCCC2",105,0)
PRV S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",106,0)
 N Z,Z0
"RTN","IBCCC2",107,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19)
"RTN","IBCCC2",108,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",109,0)
 . S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",110,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,J,0),U)=(Z0+1)
"RTN","IBCCC2",111,0)
 Q
"RTN","IBCCC2",112,0)
 ;
"RTN","IBCCC2",113,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",114,0)
 Q
"RTN","IBCCC2",115,0)
 ;
"RTN","IBCCC2",116,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",117,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",118,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",119,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",120,0)
 K DGPROCDT
"RTN","IBCCC2",121,0)
 Q
"RTN","IBCCC2",122,0)
 ;
"RTN","IBCCC2",123,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",124,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",125,0)
 Q
"RTN","IBCCC2",126,0)
 ;
"RTN","IBCCC2",127,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",128,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",129,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",130,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",131,0)
 ;
"RTN","IBCCC2",132,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",133,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",134,0)
 Q
"RTN","IBCCC2",135,0)
 ;
"RTN","IBCCC2",136,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",137,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",138,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",139,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",140,0)
 ;
"RTN","IBCCC2",141,0)
 N I,IBFRMTYP,IBTAXLST
"RTN","IBCCC2",142,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",143,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",144,0)
 ;
"RTN","IBCCC2",145,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",146,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",147,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",148,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",149,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",150,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",151,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",152,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",153,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",154,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",155,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",156,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",157,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",158,0)
 . Q
"RTN","IBCCC2",159,0)
 ;
"RTN","IBCCC2",160,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",161,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",162,0)
 ;
"RTN","IBCCC2",163,0)
 ; IB*2.0*211
"RTN","IBCCC2",164,0)
 ; save off Form Type
"RTN","IBCCC2",165,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",166,0)
 ; Save off Taxonomies for providers.
"RTN","IBCCC2",167,0)
 S I=0 F  S I=$O(^DGCR(399,IBIFN,"PRV",I)) Q:'I  S IBTAXLST(I)=$P($G(^DGCR(399,IBIFN,"PRV",I,0)),U,15)
"RTN","IBCCC2",168,0)
 ;
"RTN","IBCCC2",169,0)
 ; fire xrefs set logic
"RTN","IBCCC2",170,0)
 D INDEX
"RTN","IBCCC2",171,0)
 ;
"RTN","IBCCC2",172,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",173,0)
 ;   creating CMS-1500 claim from CTCOPY1^IBCCCB
"RTN","IBCCC2",174,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",175,0)
 ;
"RTN","IBCCC2",176,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",177,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",178,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",179,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",180,0)
 ;
"RTN","IBCCC2",181,0)
 ; Only if cloning, then restore Taxonomies in fields 243 and 244 and 252.
"RTN","IBCCC2",182,0)
 I '$G(IBINS),'$G(IBPRCOB) D
"RTN","IBCCC2",183,0)
 . S I=$P($G(IBND("U3")),U,2)
"RTN","IBCCC2",184,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,2) D
"RTN","IBCCC2",185,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="243////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",186,0)
 . ;
"RTN","IBCCC2",187,0)
 . S I=$P($G(IBND("U3")),U,3)
"RTN","IBCCC2",188,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,3) D
"RTN","IBCCC2",189,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="244////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",190,0)
 . ;
"RTN","IBCCC2",191,0)
 . S I=$P($G(IBND("U3")),U,11)
"RTN","IBCCC2",192,0)
 . I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,11) D
"RTN","IBCCC2",193,0)
 .. N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="252////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",194,0)
 . Q
"RTN","IBCCC2",195,0)
 ;
"RTN","IBCCC2",196,0)
 ; Restore Taxonomies in field .15 in sub-file 399.0222.
"RTN","IBCCC2",197,0)
 S IBTAXLST=0 F  S IBTAXLST=$O(IBTAXLST(IBTAXLST)) Q:'IBTAXLST  D
"RTN","IBCCC2",198,0)
 . S I=IBTAXLST(IBTAXLST)
"RTN","IBCCC2",199,0)
 . I I=$P($G(^DGCR(399,IBIFN,"PRV",IBTAXLST,0)),U,15) Q  ; No change
"RTN","IBCCC2",200,0)
 . N DA,DIE,DR
"RTN","IBCCC2",201,0)
 . S DA(1)=IBIFN,DA=IBTAXLST
"RTN","IBCCC2",202,0)
 . S DIE="^DGCR(399,"_DA(1)_",""PRV"",",DR=".15////"_$S(I'="":I,1:"@")
"RTN","IBCCC2",203,0)
 . D ^DIE
"RTN","IBCCC2",204,0)
 . Q
"RTN","IBCCC2",205,0)
 ;
"RTN","IBCCC2",206,0)
 K IBCOB("TX")
"RTN","IBCCC2",207,0)
 Q
"RTN","IBCCC2",208,0)
 ;
"RTN","IBCEF2")
0^43^B62563812^B62749444
"RTN","IBCEF2",1,0)
IBCEF2 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;8/6/03 10:54am
"RTN","IBCEF2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,85,51,137,232,155,296,349,403,400**;21-MAR-94;Build 52
"RTN","IBCEF2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF2",4,0)
 ;
"RTN","IBCEF2",5,0)
HOS(IBIFN) ; Extract rev codes for inst. episode into IBXDATA
"RTN","IBCEF2",6,0)
 ; Moved for space
"RTN","IBCEF2",7,0)
 D HOS^IBCEF22(IBIFN)
"RTN","IBCEF2",8,0)
 Q
"RTN","IBCEF2",9,0)
 ;
"RTN","IBCEF2",10,0)
OTHINS(IBIFN) ;Determine 'other insurance' node (I1,I2)
"RTN","IBCEF2",11,0)
 ; If primary bill, other ins is secondary
"RTN","IBCEF2",12,0)
 ; If sec or tert bill, other ins is primary
"RTN","IBCEF2",13,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",14,0)
 N Z
"RTN","IBCEF2",15,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",16,0)
 Q "I"_$S(Z=1:2,1:1)
"RTN","IBCEF2",17,0)
 ;
"RTN","IBCEF2",18,0)
OTHINS1(IBIFN) ; Returns the COB #'s of all 'other insurance' as a string
"RTN","IBCEF2",19,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",20,0)
 N IBC,Z
"RTN","IBCEF2",21,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",22,0)
 I Z=1 S IBC=$S($D(^DGCR(399,IBIFN,"I2")):$S($D(^DGCR(399,IBIFN,"I3")):23,1:2),1:"") ;Primary=>2 or 23
"RTN","IBCEF2",23,0)
 I Z=2 S IBC="1"_$S($D(^DGCR(399,IBIFN,"I3")):3,1:"") ;Secondary=>1 or 13
"RTN","IBCEF2",24,0)
 I Z=3 S IBC="12" ;Tertiary =>12
"RTN","IBCEF2",25,0)
OTHQ Q IBC
"RTN","IBCEF2",26,0)
 ;
"RTN","IBCEF2",27,0)
RECVR(IBIFN) ; Returns the V.A. internal routing id of the current ins
"RTN","IBCEF2",28,0)
 ; co for 837
"RTN","IBCEF2",29,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",30,0)
 N MCR,NUM,IBPH
"RTN","IBCEF2",31,0)
 S IBPH=$P("P^H",U,$$FT^IBCEF(IBIFN)-1)
"RTN","IBCEF2",32,0)
 S NUM="ENVOY"_IBPH
"RTN","IBCEF2",33,0)
 ; If rate type is CHAMPVA, send 'CHAMVA'
"RTN","IBCEF2",34,0)
 I $P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U)="CHAMPVA" S NUM="CHAMV"_IBPH
"RTN","IBCEF2",35,0)
 I NUM["ENVOY",$$MCRWNR^IBEFUNC(+$$CURR(IBIFN)) D
"RTN","IBCEF2",36,0)
 . S MCR=$P("B^A",U,$$FT^IBCEF(IBIFN)-1)    ; PART A/B for MEDICARE
"RTN","IBCEF2",37,0)
 . S NUM="PART"_MCR
"RTN","IBCEF2",38,0)
 Q NUM
"RTN","IBCEF2",39,0)
 ;
"RTN","IBCEF2",40,0)
ALLPAYID(IBIFN,IBXDATA,SEQ) ; Returns clearinghouse id for all (SEQ="")
"RTN","IBCEF2",41,0)
 ;  or a specific (SEQ=1,2,3) ins co's for 837 in IBXDATA(n) for bill ien
"RTN","IBCEF2",42,0)
 ;  IBIFN
"RTN","IBCEF2",43,0)
 ; EJK *296* Add IBMRA - MRA Claim type. 
"RTN","IBCEF2",44,0)
 ; EJK *296* Add IBEBI - Electronic Billing ID
"RTN","IBCEF2",45,0)
 N Z,Z0,Z1,A,IBM,IBINST,IBMCR,IBX,IBMRA,IBEBI
"RTN","IBCEF2",46,0)
 S IBXDATA="",IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCEF2",47,0)
 F Z=1:1:3 I $S('$G(SEQ):1,1:Z=SEQ) S Z0=$P(IBM,U,Z) I Z0 D  S:A'="" IBXDATA(Z)=A
"RTN","IBCEF2",48,0)
 . S A=""
"RTN","IBCEF2",49,0)
 . S IBINST=($$FT^IBCEF(IBIFN)=3) ;Is bill UB-04?
"RTN","IBCEF2",50,0)
 . ; EJK *296* Get IBEBI based on Prof. or Inst. claim
"RTN","IBCEF2",51,0)
 . I IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,4)
"RTN","IBCEF2",52,0)
 . I 'IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,2)
"RTN","IBCEF2",53,0)
 . S IBEBI=$$UP^XLFSTR(IBEBI)
"RTN","IBCEF2",54,0)
 . ; EJK *296* If this is a Medicare claim, it may be printed or transmitted. 
"RTN","IBCEF2",55,0)
 . S IBMRA=$$MRASEC^IBCEF4(IBIFN)   ;Is claim 2ndary to an MRA? 
"RTN","IBCEF2",56,0)
 . S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN),Z1=$G(^DGCR(399,IBIFN,"TX"))
"RTN","IBCEF2",57,0)
 . Q:$P(Z1,U,8)=1!$S('$P(Z1,U,9):0,1:$$MRASEC^IBCEF4(IBIFN))  ;Force local prnt
"RTN","IBCEF2",58,0)
 . S A=$S($P(Z1,U,8)'=2:$P($G(^DIC(36,Z0,3)),U,$S(IBINST:4,1:2)),1:"")
"RTN","IBCEF2",59,0)
 . S A=$$UP^XLFSTR(A)
"RTN","IBCEF2",60,0)
 . ;
"RTN","IBCEF2",61,0)
 . ; RPRNT = CMS-1500 Rx bills
"RTN","IBCEF2",62,0)
 . ; IPRNT = Inst MRA secondary claims
"RTN","IBCEF2",63,0)
 . ; PPRNT = Prof MRA secondary claims
"RTN","IBCEF2",64,0)
 . ; HPRNT = inst printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",65,0)
 . ; SPRNT = prof printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",66,0)
 . ;
"RTN","IBCEF2",67,0)
 . ; Default to appropriate 'xPRNT' if Rx bill or COB bill or forced to
"RTN","IBCEF2",68,0)
 . ;    print - claims must print at clearinghouse
"RTN","IBCEF2",69,0)
 . ;
"RTN","IBCEF2",70,0)
 . ; Rx bills on CMS-1500
"RTN","IBCEF2",71,0)
 . I 'IBINST,$$ISRX^IBCEF1(IBIFN) S A="RPRNT" Q
"RTN","IBCEF2",72,0)
 . ;
"RTN","IBCEF2",73,0)
 . ; Claim forced to print at clearinghouse
"RTN","IBCEF2",74,0)
 . I $P(Z1,U,8)=2 S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",75,0)
 . ;
"RTN","IBCEF2",76,0)
 . ; EJK *296* Send IBEBI for MRA secondary claims if it exists
"RTN","IBCEF2",77,0)
 . I Z>1,IBMRA,IBEBI'="" S A=IBEBI Q
"RTN","IBCEF2",78,0)
 . ;
"RTN","IBCEF2",79,0)
 . ; MRA secondary claim
"RTN","IBCEF2",80,0)
 . I Z>1,IBMCR=1,$P(Z1,U,5)="C" S A=$S(IBINST:"I",1:"P")_"PRNT" Q
"RTN","IBCEF2",81,0)
 . ;
"RTN","IBCEF2",82,0)
 . ; Medicare is current payer (MRA request claim)
"RTN","IBCEF2",83,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,Z) S A=$S(IBINST:"12M61",1:"SMTX1") Q
"RTN","IBCEF2",84,0)
 . ;
"RTN","IBCEF2",85,0)
 . ; IB*296 - Do not modify the payer ID for CHAMPVA (HAC)
"RTN","IBCEF2",86,0)
 . I A=84146 Q
"RTN","IBCEF2",87,0)
 . I A=84147 Q
"RTN","IBCEF2",88,0)
 . ;
"RTN","IBCEF2",89,0)
 . ; If not a primary bill force to print
"RTN","IBCEF2",90,0)
 . I Z>1,Z=$$COBN^IBCEF(IBIFN) S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",91,0)
 . Q
"RTN","IBCEF2",92,0)
 ;
"RTN","IBCEF2",93,0)
 Q
"RTN","IBCEF2",94,0)
 ;
"RTN","IBCEF2",95,0)
PAYERID(IBIFN) ; Returns clearinghouse id for current ins co
"RTN","IBCEF2",96,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",97,0)
 N NUM,IBSEQ
"RTN","IBCEF2",98,0)
 ; Determine the current ins co's # to identify at WEBMD
"RTN","IBCEF2",99,0)
 ; Envoy changed to WEBMD in patch 232
"RTN","IBCEF2",100,0)
 S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",101,0)
 D ALLPAYID(IBIFN,.NUM,IBSEQ) S NUM=$G(NUM(IBSEQ))
"RTN","IBCEF2",102,0)
 Q $G(NUM)
"RTN","IBCEF2",103,0)
 ;
"RTN","IBCEF2",104,0)
CURR(IBIFN) ; Returns ien of the current insurance
"RTN","IBCEF2",105,0)
 ; company for bill ien IBIFN
"RTN","IBCEF2",106,0)
 Q $$FINDINS^IBCEF1(IBIFN)
"RTN","IBCEF2",107,0)
 ;
"RTN","IBCEF2",108,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF2",109,0)
 D ADMDT^IBCEF21(IBIFN,$G(NOOUTCK))      ; Moved for space
"RTN","IBCEF2",110,0)
 Q
"RTN","IBCEF2",111,0)
 ;
"RTN","IBCEF2",112,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF2",113,0)
 D DISDT^IBCEF21(IBIFN)                  ; Moved for space
"RTN","IBCEF2",114,0)
 Q
"RTN","IBCEF2",115,0)
 ;
"RTN","IBCEF2",116,0)
INDTS(IBIFN) ; Function returns the admit ^ discharge date/time of admission if patient is an inpatient on bill's event date
"RTN","IBCEF2",117,0)
 N Z,Z0,DFN,VAINDT,VAIN S Z0=""
"RTN","IBCEF2",118,0)
 S Z=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(Z,U,2),VAINDT=$P(Z,U,3)
"RTN","IBCEF2",119,0)
 I +DFN,+VAINDT D INP^VADPT I +VAIN(1) S Z0=+VAIN(7)_U_+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF2",120,0)
 Q Z0
"RTN","IBCEF2",121,0)
 ;
"RTN","IBCEF2",122,0)
TXMT(IBIFN) ; Function moved - use new call in IBCEF4
"RTN","IBCEF2",123,0)
 Q $$TXMT^IBCEF4(IBIFN)
"RTN","IBCEF2",124,0)
 ;
"RTN","IBCEF2",125,0)
 ;
"RTN","IBCEF2",126,0)
ID(LN,VAL) ; Set EXTRACT GLOBAL for multi-valued record
"RTN","IBCEF2",127,0)
 ; ids for Austin
"RTN","IBCEF2",128,0)
 ; LN = the line # being extracted
"RTN","IBCEF2",129,0)
 ; VAL = the value of the element being extracted
"RTN","IBCEF2",130,0)
 ;
"RTN","IBCEF2",131,0)
 ; Assumes IBXPG exists
"RTN","IBCEF2",132,0)
 ;
"RTN","IBCEF2",133,0)
 Q:LN<2
"RTN","IBCEF2",134,0)
 D SETGBL^IBCEFG(IBXPG,LN,1,VAL,.IBXSIZE)
"RTN","IBCEF2",135,0)
 Q
"RTN","IBCEF2",136,0)
 ;
"RTN","IBCEF2",137,0)
ID1(LN,DX,CT) ;Special entrypoint for diagnoses to 'save' the fact
"RTN","IBCEF2",138,0)
 ;   a dx code is an e-code.
"RTN","IBCEF2",139,0)
 ; LN is last entry # output, returned as the entry # (IBXLINE) to assign to this entry
"RTN","IBCEF2",140,0)
 ; DX = the actual Dx code array(RECORD ID). Pass by reference, DX returned null if
"RTN","IBCEF2",141,0)
 ;      dx was not output
"RTN","IBCEF2",142,0)
 ; CT = the ct on the 'DC' entry.  pass by reference, returned null if
"RTN","IBCEF2",143,0)
 ;      the end of the valid dx codes has been reached
"RTN","IBCEF2",144,0)
 N IBINS,VAL,CNT,DXIEN,DXQ,EDX,I,POA
"RTN","IBCEF2",145,0)
 S IBINS=($$FT^IBCEF(IBXIEN)=3)
"RTN","IBCEF2",146,0)
 S VAL="DC"_CT
"RTN","IBCEF2",147,0)
 S VAL=$E(VAL_" ",1,4)
"RTN","IBCEF2",148,0)
 S EDX=($E($G(DX))="E") ; TRUE if e-code DX
"RTN","IBCEF2",149,0)
 S I=$S(EDX:3,1:2)
"RTN","IBCEF2",150,0)
 S:'EDX DXQ=$S(+$G(^TMP("DCX",$J,2))>0:"BF",1:"BK") ; first non e-code DX is principal (qulifier "BK"), the rest have qualifier "BF"
"RTN","IBCEF2",151,0)
 I IBINS D
"RTN","IBCEF2",152,0)
 .I CT>28 S CT="" Q     ; Max of 28 codes for institutional/UB
"RTN","IBCEF2",153,0)
 .S DXIEN=$P(DX(CT),U,2) Q:DXIEN=""
"RTN","IBCEF2",154,0)
 .S POA=$P($G(^IBA(362.3,DXIEN,0)),U,4) I POA="",$$INPAT^IBCEF(IBXIEN) S POA=1 ; POA indicator defaults to "1", if not present on inpatient claim
"RTN","IBCEF2",155,0)
 .S:EDX DXQ="BN" ; e-code DX qualifier
"RTN","IBCEF2",156,0)
 .Q
"RTN","IBCEF2",157,0)
 I 'IBINS S:EDX DXQ="BF" S POA="" ; on CMS-1500 e-code DX qualifiers are "BF" and there's no POA
"RTN","IBCEF2",158,0)
 I 'IBINS,CT>8 S ^TMP("IBXSAVE",$J,"DX",IBXIEN)=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN))+1,^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(+^TMP("IBXSAVE",$J,"DX",IBXIEN)),U,2))=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN)) S DX="" Q
"RTN","IBCEF2",159,0)
 I CT'="",DX'="" D
"RTN","IBCEF2",160,0)
 .; populate ^TMP("DCX") scratch global
"RTN","IBCEF2",161,0)
 .S ^TMP("DCX",$J,1)=CT,CNT=$G(^TMP("DCX",$J,I))+1,^TMP("DCX",$J,I)=CNT
"RTN","IBCEF2",162,0)
 .S (^TMP("DCX",$J,I,CNT),^TMP("DCX",$J,1,CT))=DX_U_DXQ_U_POA
"RTN","IBCEF2",163,0)
 .S LN=LN+1 D ID(LN,VAL) S ^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(LN),U,2))=LN,^TMP("IBXSAVE",$J,"DX",IBXIEN)=CT,CT=CT+1
"RTN","IBCEF2",164,0)
 .Q
"RTN","IBCEF2",165,0)
 Q
"RTN","IBCEF2",166,0)
 ;
"RTN","IBCEF2",167,0)
M(CT) ; Calculate multi-valued field for 837 extract
"RTN","IBCEF2",168,0)
 ; CT = passed by reference/the record ID counter
"RTN","IBCEF2",169,0)
 S CT=CT+1
"RTN","IBCEF2",170,0)
 Q $E(CT#12+$S(CT#12:0,1:12)_" ",1,2)
"RTN","IBCEF2",171,0)
 ;
"RTN","IBCEF2",172,0)
SVITM(IBA,LINE) ; Saves the linked items from the bill data extract into
"RTN","IBCEF2",173,0)
 ; an array the formatter will use to link Rxs and prosthetics
"RTN","IBCEF2",174,0)
 ; to an SV1 or SV2 line item, if possible.  Kills off IBA array entries
"RTN","IBCEF2",175,0)
 ; after they are 'moved'
"RTN","IBCEF2",176,0)
 ; IBA = array that contains the data to be saved
"RTN","IBCEF2",177,0)
 ;   subscripts are (line #,item type,item pointer)=ct
"RTN","IBCEF2",178,0)
 N Z0,Z1
"RTN","IBCEF2",179,0)
 S Z0="" F  S Z0=$O(IBA("OUTPT",LINE,Z0)) Q:Z0=""  I Z0?1N.N  S Z1="" F  S Z1=$O(IBA("OUTPT",LINE,Z0,Z1)) Q:Z1=""  S ^TMP($J,"IBITEM",Z0,Z1,LINE)=IBA("OUTPT",LINE,Z0,Z1) K IBA("OUTPT",LINE,Z0,Z1)
"RTN","IBCEF2",180,0)
 Q
"RTN","IBCEF2",181,0)
 ;
"RTN","IBCEF2",182,0)
LINK(IBTYP,IBDATA) ; Link the item with a service line, if possible
"RTN","IBCEF2",183,0)
 ; IBTYP = the code for the type of item
"RTN","IBCEF2",184,0)
 ;         returned incremented if no link is made
"RTN","IBCEF2",185,0)
 ; IBDATA = the extracted data string that identifies the item. 
"RTN","IBCEF2",186,0)
 ; Returns the line to link to or null if no link
"RTN","IBCEF2",187,0)
 N IBLN,IBKEY,Z
"RTN","IBCEF2",188,0)
 S IBLN=""
"RTN","IBCEF2",189,0)
 S IBKEY=$S(IBTYP=3:$P(IBDATA,U,9),IBTYP=5:$P(IBDATA,U,4),1:"") Q:IBKEY=""
"RTN","IBCEF2",190,0)
 I $D(^TMP($J,"IBITEM",IBTYP,IBKEY)) D  G:IBLN LINKQ
"RTN","IBCEF2",191,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",192,0)
 I $D(^TMP($J,"IBITEM",IBTYP,0)) S IBKEY=0 D
"RTN","IBCEF2",193,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",194,0)
LINKQ Q IBLN
"RTN","IBCEF2",195,0)
 ;
"RTN","IBCEF2",196,0)
COID(IBIFN) ; Claim office ID - moved for space
"RTN","IBCEF2",197,0)
 Q $$COID^IBCEF21(IBIFN)
"RTN","IBCEF2",198,0)
 ;
"RTN","IBCEF2",199,0)
PPOL(IBIFN,COB) ; return IFN of patient policy on a bill defined by COB (fields 399,112-114)
"RTN","IBCEF2",200,0)
 N X,Y,PPOL S PPOL=""
"RTN","IBCEF2",201,0)
 I +$G(IBIFN) S X=$G(^DGCR(399,+IBIFN,"M")) I +$G(COB),COB<4 S Y=COB+11,PPOL=$P(X,U,Y)
"RTN","IBCEF2",202,0)
 Q PPOL
"RTN","IBCEF2",203,0)
 ;
"RTN","IBCEF2",204,0)
LADJ(SUB,LINE,SEQ1,GRP,IBXSAVE,PIECE) ; Extract line level adjustments
"RTN","IBCEF2",205,0)
 ; SUB     = 1st subscript in IBXSAVE array to use
"RTN","IBCEF2",206,0)
 ; LINE    = 2nd subscript
"RTN","IBCEF2",207,0)
 ; SEQ1    = 4th subscript
"RTN","IBCEF2",208,0)
 ; GRP     = 5th subscript
"RTN","IBCEF2",209,0)
 ; IBXSAVE = array that has the data for COB line level adjustments
"RTN","IBCEF2",210,0)
 ; PIECE   = # of the piece on the 0-node of the line level
"RTN","IBCEF2",211,0)
 ;           adjustment reason to be extracted
"RTN","IBCEF2",212,0)
 ;
"RTN","IBCEF2",213,0)
 N A,B
"RTN","IBCEF2",214,0)
 S (A,B)=0
"RTN","IBCEF2",215,0)
 F  S A=$O(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A)) Q:'A  D
"RTN","IBCEF2",216,0)
 . S B=B+1,IBXDATA(B)=$P(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A),U,PIECE)
"RTN","IBCEF2",217,0)
 Q
"RTN","IBCEF2",218,0)
 ;
"RTN","IBCEF2",219,0)
ESGHPST(IBIFN,COB) ; return insureds employ status if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",220,0)
 Q $$ESGHPST^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",221,0)
 ;
"RTN","IBCEF2",222,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",223,0)
 Q $$ESGHPNL^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",224,0)
 ;
"RTN","IBCEF2",225,0)
AMTOUT(A,B,C,IBXSAVE) ; format output amount
"RTN","IBCEF2",226,0)
 ;
"RTN","IBCEF2",227,0)
 N Z,K,IBZ,IBARR K IBXDATA S (IBZ,K)=0,IBARR="IBXSAVE("""_A_""")" F  S IBZ=$O(@IBARR@(IBZ)) Q:'IBZ  S K=K+1,Z=0 F  S Z=$O(@IBARR@(IBZ,Z)) Q:'Z  I $P($G(@IBARR@(IBZ,Z,B)),U,C) S IBXDATA(K)=$$DOLLAR^IBCEFG1($G(IBXDATA(K))+$P(@IBARR@(IBZ,Z,B),U,C))
"RTN","IBCEF2",228,0)
 Q
"RTN","IBCEF31")
0^49^B8824956^B7985183
"RTN","IBCEF31",1,0)
IBCEF31 ;ALB/ESG - FORMATTER SPECIFIC BILL FLD FUNCTIONS - CONT ;14-NOV-03
"RTN","IBCEF31",2,0)
 ;;2.0;INTEGRATED BILLING;**155,296,349,400**;21-MAR-94;Build 52
"RTN","IBCEF31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF31",4,0)
 ;
"RTN","IBCEF31",5,0)
 Q
"RTN","IBCEF31",6,0)
 ;
"RTN","IBCEF31",7,0)
ALLTYP(IBIFN) ; returns codes to translate to ALL ins types on a bill
"RTN","IBCEF31",8,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",9,0)
 N IBX,Z
"RTN","IBCEF31",10,0)
 F Z=1:1:3 S $P(IBX,U,Z)=$$INSTYP(IBIFN,Z)
"RTN","IBCEF31",11,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",12,0)
 Q IBX
"RTN","IBCEF31",13,0)
 ;
"RTN","IBCEF31",14,0)
INSTYP(IBIFN,SEQ) ; Returns insurance type code for an ins on a bill
"RTN","IBCEF31",15,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",16,0)
 ; SEQ = sequence (1,2,3) of insurance wanted - prim, second, tert
"RTN","IBCEF31",17,0)
 ;       Default is current insurance co
"RTN","IBCEF31",18,0)
 ;
"RTN","IBCEF31",19,0)
 N IBA,Z
"RTN","IBCEF31",20,0)
 ;
"RTN","IBCEF31",21,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",22,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ))
"RTN","IBCEF31",23,0)
 ;Codes 1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER
"RTN","IBCEF31",24,0)
 I Z D
"RTN","IBCEF31",25,0)
 . S IBA=$P($G(^DIC(36,Z,3)),U,9)
"RTN","IBCEF31",26,0)
 . I $$MCRWNR^IBEFUNC(Z) S IBA=3   ; force Medicare (WNR) definition to be correct
"RTN","IBCEF31",27,0)
 . I IBA="" S IBA=5 ;Default is group policy - 5 if blank
"RTN","IBCEF31",28,0)
 ;
"RTN","IBCEF31",29,0)
 Q $G(IBA)
"RTN","IBCEF31",30,0)
 ;
"RTN","IBCEF31",31,0)
POLTYP(IBIFN,IBSEQ) ; Returns ins electronic policy type code for one
"RTN","IBCEF31",32,0)
 ;   ins policy on a bill
"RTN","IBCEF31",33,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",34,0)
 ; IBSEQ = sequence (1,2,3) of ins policy wanted - prim, second, tert
"RTN","IBCEF31",35,0)
 ;       Default is current insurance co
"RTN","IBCEF31",36,0)
 ;
"RTN","IBCEF31",37,0)
 N IBPLAN,IBPLTYP
"RTN","IBCEF31",38,0)
 ;
"RTN","IBCEF31",39,0)
 I '$G(IBSEQ) S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",40,0)
 S IBPLAN=$G(^IBA(355.3,+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U,18),0))
"RTN","IBCEF31",41,0)
 S IBPLTYP=$P(IBPLAN,U,15)
"RTN","IBCEF31",42,0)
 ;
"RTN","IBCEF31",43,0)
 ; esg - 06/30/05 - IB*2.0*296 - Force Medicare (WNR) to be correct
"RTN","IBCEF31",44,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=2 S IBPLTYP="MB"   ; CMS-1500 ----> Medicare Part B
"RTN","IBCEF31",45,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=3 S IBPLTYP="MA"   ; UB-04 -------> Medicare Part A
"RTN","IBCEF31",46,0)
 ;
"RTN","IBCEF31",47,0)
 I IBPLTYP="" S IBPLTYP="CI" ;Default is commercial - 'CI'
"RTN","IBCEF31",48,0)
 I IBPLTYP="MX" D
"RTN","IBCEF31",49,0)
 . I $P(IBPLAN,U,14)'="","AB"[$P(IBPLAN,U,14) S IBPLTYP="M"_$P(IBPLAN,U,14) Q
"RTN","IBCEF31",50,0)
 . S IBPLTYP="CI"
"RTN","IBCEF31",51,0)
 Q $G(IBPLTYP)
"RTN","IBCEF31",52,0)
 ;
"RTN","IBCEF31",53,0)
ALLPTYP(IBIFN) ; returns insurance policy type codes for ALL ins on a bill
"RTN","IBCEF31",54,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",55,0)
 N IBX,Z S IBX=""
"RTN","IBCEF31",56,0)
 F Z=1:1:3 I $D(^DGCR(399,IBIFN,"I"_Z)) S $P(IBX,U,Z)=$$POLTYP(IBIFN,Z)
"RTN","IBCEF31",57,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",58,0)
 Q IBX
"RTN","IBCEF31",59,0)
 ;
"RTN","IBCEF31",60,0)
PGDX(DXCNT,IBX0,IBXDA,IBXLN,IBXCOL,IBXSIZE,IBXSAVE) ; Subroutine - Checks for Diagnosis Codes (Dx) beyond 
"RTN","IBCEF31",61,0)
 ; the first four, that relate to the current Dx position passed in DXCNT.
"RTN","IBCEF31",62,0)
 ; This subroutine stores the Diagnosis Codes in output global using display parameters (IBXLN,IBXCOL)
"RTN","IBCEF31",63,0)
 ; If DXCNT is 1, check for Dx's 5,9,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",64,0)
 ; If DXCNT is 2, check for Dx's 6,10,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",65,0)
 ; If DXCNT is 3, check for Dx's 7,11,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",66,0)
 ; If DXCNT is 4, check for Dx's 8,12,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",67,0)
 ;
"RTN","IBCEF31",68,0)
 ; Input: DXCNT= position of current Dx (from 1 to 4)
"RTN","IBCEF31",69,0)
 ;        IBX0= zero-level of file 364.7 of current Dx
"RTN","IBCEF31",70,0)
 ;        IBXDA= ien# of file 364.6 of current Dx
"RTN","IBCEF31",71,0)
 ;        IBXLN IBXCOL= line# & Column# of current Dx
"RTN","IBCEF31",72,0)
 ;        IBXSIZE= size counter
"RTN","IBCEF31",73,0)
 ;        IBXSAVE("DX")= local array with all Dx's on current bill
"RTN","IBCEF31",74,0)
 ;
"RTN","IBCEF31",75,0)
 N JUMP,IBPG,VAL
"RTN","IBCEF31",76,0)
 F JUMP=DXCNT+4:4 Q:'$D(IBXSAVE("DX",JUMP))  D  ;
"RTN","IBCEF31",77,0)
 . ;calculate page number where Dx number JUMP will print
"RTN","IBCEF31",78,0)
 . S IBPG=JUMP\4+(JUMP#4>0)
"RTN","IBCEF31",79,0)
 . S VAL=$P($$ICD9^IBACSV(+IBXSAVE("DX",JUMP)),U)   ; resolve Dx pointer
"RTN","IBCEF31",80,0)
 . S VAL=$$FORMAT^IBCEF3(VAL,$G(IBX0),$G(IBXDA))  ;format Dx value
"RTN","IBCEF31",81,0)
 . D SETGBL^IBCEFG(IBPG,IBXLN,IBXCOL,VAL,.IBXSIZE) ;store in output global
"RTN","IBCEF31",82,0)
 Q  ;PGDX
"RTN","IBCEF31",83,0)
 ;
"RTN","IBCEF31",84,0)
DXSV(IB,IBXSAVE) ; output formatter subroutine
"RTN","IBCEF31",85,0)
 ; save off DX codes in IBXSAVE("DX")
"RTN","IBCEF31",86,0)
 N Z,IBCT
"RTN","IBCEF31",87,0)
 S (Z,IBCT)=0
"RTN","IBCEF31",88,0)
 F  S Z=$O(IB(Z)) Q:'Z  I $G(IB(Z)) S IBCT=IBCT+1 M IBXSAVE("DX",IBCT)=IB(Z)
"RTN","IBCEF31",89,0)
 Q
"RTN","IBCEF73A")
0^2^B53924008^B31517693
"RTN","IBCEF73A",1,0)
IBCEF73A ;ALB/KJH - FORMATTER AND EXTRACTOR SPECIFIC (NPI) BILL FUNCTIONS ;30 Aug 2006  10:38 AM
"RTN","IBCEF73A",2,0)
 ;;2.0;INTEGRATED BILLING;**343,374,395,391,400**;21-MAR-94;Build 52
"RTN","IBCEF73A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF73A",4,0)
 ;
"RTN","IBCEF73A",5,0)
PROVNPI(IBIEN399,IBNONPI) ;
"RTN","IBCEF73A",6,0)
 ;Retrieves NPIs from #200 or 355.93
"RTN","IBCEF73A",7,0)
 ; Input:
"RTN","IBCEF73A",8,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",9,0)
 ;       IBNONPI - variable to pass info on missing NPI to calling routine.  Pass by reference
"RTN","IBCEF73A",10,0)
 ; Output:
"RTN","IBCEF73A",11,0)
 ;       NPI codes for all providers
"RTN","IBCEF73A",12,0)
 ;       IBNONPI - U-delimited list of provider types with missing NPIs
"RTN","IBCEF73A",13,0)
 N IBRETVAL,IBPTR,IBFT
"RTN","IBCEF73A",14,0)
 S IBRETVAL="",IBNONPI=""
"RTN","IBCEF73A",15,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",16,0)
 . S IBPTR=$$PROVPTR^IBCEF7(IBIEN399,IBFT)
"RTN","IBCEF73A",17,0)
 . I IBPTR S $P(IBRETVAL,"^",IBFT)=$$GETNPI(IBPTR)
"RTN","IBCEF73A",18,0)
 Q IBRETVAL
"RTN","IBCEF73A",19,0)
GETNPI(IBPTR) ;look for NPI in #200 or #355.93
"RTN","IBCEF73A",20,0)
 ;Input: IBPTR from 399.0222, field .02
"RTN","IBCEF73A",21,0)
 ;Output: NPI
"RTN","IBCEF73A",22,0)
 ;if in file #200
"RTN","IBCEF73A",23,0)
 N NPI
"RTN","IBCEF73A",24,0)
 S NPI=""
"RTN","IBCEF73A",25,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",26,0)
 I $P(IBPTR,";",2)="VA(200," S NPI=$P($$NPI^XUSNPI("Individual_ID",$P(IBPTR,";")),U) S:NPI<1 NPI=""
"RTN","IBCEF73A",27,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",28,0)
 I $P(IBPTR,";",2)="IBA(355.93," S NPI=$$NPIGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",29,0)
 I NPI="",$D(IBNONPI) S IBNONPI=$S(IBNONPI="":IBFT,1:IBNONPI_U_IBFT)
"RTN","IBCEF73A",30,0)
 Q NPI
"RTN","IBCEF73A",31,0)
 ;
"RTN","IBCEF73A",32,0)
SPECTAX(IBIEN399,IBNOSPEC) ;
"RTN","IBCEF73A",33,0)
 ;Retrieves Specialty Codes from Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",34,0)
 ; Input:
"RTN","IBCEF73A",35,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",36,0)
 ;       IBNOSPEC - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",37,0)
 ; Output:
"RTN","IBCEF73A",38,0)
 ;       Taxonomy Specialty Codes for all providers
"RTN","IBCEF73A",39,0)
 ;       IBNOSPEC - U-delimited list of provider types with missing Taxonomy Specialty codes
"RTN","IBCEF73A",40,0)
 N IBRETVAL,IBN,IBFT,IBSPEC,SPEC
"RTN","IBCEF73A",41,0)
 S IBRETVAL="",IBNOSPEC=""
"RTN","IBCEF73A",42,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",43,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",44,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",45,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",46,0)
 . S IBSPEC=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",47,0)
 . S SPEC=$$GET1^DIQ(8932.1,IBSPEC,"SPECIALTY CODE")
"RTN","IBCEF73A",48,0)
 . S $P(IBRETVAL,"^",IBFT)=SPEC
"RTN","IBCEF73A",49,0)
 . I SPEC="",$D(IBNOSPEC) S IBNOSPEC=$S(IBNOSPEC="":IBFT,1:IBNOSPEC_U_IBFT)
"RTN","IBCEF73A",50,0)
 Q IBRETVAL
"RTN","IBCEF73A",51,0)
 ;
"RTN","IBCEF73A",52,0)
PROVTAX(IBIEN399,IBNOTAX) ;
"RTN","IBCEF73A",53,0)
 ;Retrieves Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",54,0)
 ; Input:
"RTN","IBCEF73A",55,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",56,0)
 ;       IBNOTAX - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",57,0)
 ; Output:
"RTN","IBCEF73A",58,0)
 ;       Taxonomy X12 codes for all providers
"RTN","IBCEF73A",59,0)
 ;       IBNOTAX - U-delimited list of provider types with missing Taxonomy X12 codes
"RTN","IBCEF73A",60,0)
 N IBRETVAL,IBN,IBFT,IBTAX,TAX
"RTN","IBCEF73A",61,0)
 S IBRETVAL="",IBNOTAX=""
"RTN","IBCEF73A",62,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",63,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",64,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",65,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",66,0)
 . S IBTAX=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",67,0)
 . S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",68,0)
 . S $P(IBRETVAL,"^",IBFT)=TAX
"RTN","IBCEF73A",69,0)
 . I TAX="",$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":IBFT,1:IBNOTAX_U_IBFT)
"RTN","IBCEF73A",70,0)
 Q IBRETVAL
"RTN","IBCEF73A",71,0)
GETTAX(IBPTR) ;look for Taxonomy in #200 or #355.93
"RTN","IBCEF73A",72,0)
 ;Input: IBPTR from 399.0222, field .02
"RTN","IBCEF73A",73,0)
 ;Output: Taxonomy X12 code_"^"_IEN
"RTN","IBCEF73A",74,0)
 N TAX
"RTN","IBCEF73A",75,0)
 S TAX="^"
"RTN","IBCEF73A",76,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",77,0)
 I $P(IBPTR,";",2)="VA(200," S TAX=$$TAXIND^XUSTAX($P(IBPTR,";"))
"RTN","IBCEF73A",78,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",79,0)
 I $P(IBPTR,";",2)="IBA(355.93," S TAX=$$TAXGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",80,0)
 Q TAX
"RTN","IBCEF73A",81,0)
 ;
"RTN","IBCEF73A",82,0)
ORGNPI(IBIEN399,IBNONPI) ; Extract NPIs for organizations on this claim
"RTN","IBCEF73A",83,0)
 ; Input
"RTN","IBCEF73A",84,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",85,0)
 ;       IBNONPI - Variable to pass info on missing NPI back to calling routine.  Pass by reference.
"RTN","IBCEF73A",86,0)
 ; Output - NPI codes for facilities
"RTN","IBCEF73A",87,0)
 ;        Piece 1) Service Facility NPI code (with IB patch 400, a claim may not have a service facility)
"RTN","IBCEF73A",88,0)
 ;        Piece 2) Non-VA Service Facility NPI code
"RTN","IBCEF73A",89,0)
 ;        Piece 3) Billing Provider NPI code (IB patch 400 definition)
"RTN","IBCEF73A",90,0)
 ;
"RTN","IBCEF73A",91,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,NPI,BSZ,SWBCK
"RTN","IBCEF73A",92,0)
 S IBNONPI=""
"RTN","IBCEF73A",93,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",94,0)
 S IBRETVAL=""
"RTN","IBCEF73A",95,0)
 S BSZ=$$B^IBCEF79(IBIEN399)    ; get billing provider/service facility information
"RTN","IBCEF73A",96,0)
 ;
"RTN","IBCEF73A",97,0)
 S SWBCK=(+$$INSFLGS^IBCEF79(IBIEN399)>0)    ; pre-patch 400 switchback flag & processing
"RTN","IBCEF73A",98,0)
 I SWBCK D  G ORGNPIX
"RTN","IBCEF73A",99,0)
 . N PHARM,DPORG,PHARMNPI
"RTN","IBCEF73A",100,0)
 . S PHARM=+$$ISRX^IBCEF1(IBIEN399)          ; pharmacy claim flag switchback
"RTN","IBCEF73A",101,0)
 . S PHARMNPI=""
"RTN","IBCEF73A",102,0)
 . I PHARM S DPORG=$$RXSITE(IBIEN399) I DPORG S PHARMNPI=$P($$NPI^XUSNPI("Organization_ID",DPORG),U,1)
"RTN","IBCEF73A",103,0)
 . ;
"RTN","IBCEF73A",104,0)
 . ; service facility NPI switchback
"RTN","IBCEF73A",105,0)
 . S NPI=""
"RTN","IBCEF73A",106,0)
 . S IBORG=+$P(BSZ,U,4)    ; service facility ien (either ptr file 4 or 355.93)
"RTN","IBCEF73A",107,0)
 . I $P(BSZ,U,3)=0,IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)    ; file 4
"RTN","IBCEF73A",108,0)
 . I $P(BSZ,U,3)=1,IBORG S NPI=$$NPIGET^IBCEP81(IBORG)                          ; file 355.93
"RTN","IBCEF73A",109,0)
 . I PHARM S NPI=PHARMNPI      ; in switchback mode for pharmacy claims, use the pharmacy NPI
"RTN","IBCEF73A",110,0)
 . I NPI>0 S $P(IBRETVAL,U,1)=NPI
"RTN","IBCEF73A",111,0)
 . I NPI<1 S IBNONPI=1
"RTN","IBCEF73A",112,0)
 . ;
"RTN","IBCEF73A",113,0)
 . ; non-VA facility NPI switchback
"RTN","IBCEF73A",114,0)
 . S IBORG=$$GET1^DIQ(399,IBIEN399_",",232,"I")
"RTN","IBCEF73A",115,0)
 . I IBORG S NPI=$$NPIGET^IBCEP81(IBORG),$P(IBRETVAL,U,2)=NPI I 'NPI S IBNONPI=$S(IBNONPI="":2,1:IBNONPI_U_2)
"RTN","IBCEF73A",116,0)
 . ;
"RTN","IBCEF73A",117,0)
 . ; billing provider NPI switchback
"RTN","IBCEF73A",118,0)
 . S IBORG=+$P(BSZ,U,1),NPI=""
"RTN","IBCEF73A",119,0)
 . I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)
"RTN","IBCEF73A",120,0)
 . I PHARM S NPI=PHARMNPI      ; in switchback mode for pharmacy claims, use the pharmacy NPI
"RTN","IBCEF73A",121,0)
 . I NPI>0 S $P(IBRETVAL,U,3)=NPI
"RTN","IBCEF73A",122,0)
 . I NPI<1 S IBNONPI=$S(IBNONPI="":3,1:IBNONPI_U_3)
"RTN","IBCEF73A",123,0)
 . ;
"RTN","IBCEF73A",124,0)
 . Q
"RTN","IBCEF73A",125,0)
 ;
"RTN","IBCEF73A",126,0)
 ; service facility NPI regular
"RTN","IBCEF73A",127,0)
 S NPI=""
"RTN","IBCEF73A",128,0)
 S IBORG=+$P(BSZ,U,4)    ; service facility ien (either ptr file 4 or 355.93)
"RTN","IBCEF73A",129,0)
 I $P(BSZ,U,3)=0,IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)    ; file 4
"RTN","IBCEF73A",130,0)
 I $P(BSZ,U,3)=1,IBORG S NPI=$$NPIGET^IBCEP81(IBORG)                          ; file 355.93
"RTN","IBCEF73A",131,0)
 I NPI>0 S $P(IBRETVAL,U,1)=NPI
"RTN","IBCEF73A",132,0)
 I NPI<1,$P(BSZ,U,3)=1 S IBNONPI=1   ; only report missing service facility NPI for non-VA facilities
"RTN","IBCEF73A",133,0)
 ;
"RTN","IBCEF73A",134,0)
 ; non-VA facility NPI regular
"RTN","IBCEF73A",135,0)
 S IBORG=$$GET1^DIQ(399,IBIEN399_",",232,"I")
"RTN","IBCEF73A",136,0)
 ; Let this one (#2) override #1 if both #1 and #2 are missing
"RTN","IBCEF73A",137,0)
 I IBORG S NPI=$$NPIGET^IBCEP81(IBORG),$P(IBRETVAL,U,2)=NPI I 'NPI S IBNONPI=2
"RTN","IBCEF73A",138,0)
 ;
"RTN","IBCEF73A",139,0)
 ; billing provider NPI regular
"RTN","IBCEF73A",140,0)
 S IBORG=+$P(BSZ,U,1),NPI=""
"RTN","IBCEF73A",141,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1) S:NPI>0 $P(IBRETVAL,U,3)=NPI
"RTN","IBCEF73A",142,0)
 I NPI<1 S IBNONPI=$S(IBNONPI="":3,1:IBNONPI_U_3)
"RTN","IBCEF73A",143,0)
 ;
"RTN","IBCEF73A",144,0)
ORGNPIX ;
"RTN","IBCEF73A",145,0)
 ;
"RTN","IBCEF73A",146,0)
 Q IBRETVAL
"RTN","IBCEF73A",147,0)
 ;
"RTN","IBCEF73A",148,0)
ORGTAX(IBIEN399,IBNOTAX) ; Extract Taxonomies for organizations on this claim
"RTN","IBCEF73A",149,0)
 ; Input
"RTN","IBCEF73A",150,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",151,0)
 ;       IBNOTAX - Variable to pass info on missing taxonomies back to calling routine.  Pass by reference.
"RTN","IBCEF73A",152,0)
 ; Output - Taxonomy X12 codes for facilities
"RTN","IBCEF73A",153,0)
 ;        Piece 1) Service Facility Taxonomy X12 code (with IB patch 400, a claim may not have a service facility)
"RTN","IBCEF73A",154,0)
 ;        Piece 2) Non-VA Service Facility Taxonomy X12 code
"RTN","IBCEF73A",155,0)
 ;        Piece 3) Billing Provider Taxonomy X12 code (IB patch 400 definition)
"RTN","IBCEF73A",156,0)
 N IBRETVAL,IBTAX,TAX,BSZ
"RTN","IBCEF73A",157,0)
 ;
"RTN","IBCEF73A",158,0)
 S BSZ=$$B^IBCEF79(IBIEN399)    ; get billing provider/service facility information
"RTN","IBCEF73A",159,0)
 ;
"RTN","IBCEF73A",160,0)
 ; claim field# 243 - service facility taxonomy code
"RTN","IBCEF73A",161,0)
 I $P(BSZ,U,3)="" S (IBTAX,TAX)=""     ; no service facility
"RTN","IBCEF73A",162,0)
 I $P(BSZ,U,3)'="" S IBTAX=$$GET1^DIQ(399,IBIEN399_",",243,"I"),TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",163,0)
 S $P(IBRETVAL,U,1)=TAX
"RTN","IBCEF73A",164,0)
 ; only record service facility taxonomy code missing if there is a service facility
"RTN","IBCEF73A",165,0)
 I '$L(TAX),$D(IBNOTAX),$P(BSZ,U,3)'="" S IBNOTAX=1
"RTN","IBCEF73A",166,0)
 ;
"RTN","IBCEF73A",167,0)
 ; claim field# 244 - non-VA facility taxonomy code
"RTN","IBCEF73A",168,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",244,"I")
"RTN","IBCEF73A",169,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",170,0)
 S $P(IBRETVAL,U,2)=TAX
"RTN","IBCEF73A",171,0)
 I '$L(TAX),$$GET1^DIQ(399,IBIEN399_",",232,"I"),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":2,1:IBNOTAX_U_2)
"RTN","IBCEF73A",172,0)
 ;
"RTN","IBCEF73A",173,0)
 ; claim field# 252 - billing provider taxonomy code
"RTN","IBCEF73A",174,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",252,"I")
"RTN","IBCEF73A",175,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",176,0)
 S $P(IBRETVAL,U,3)=TAX
"RTN","IBCEF73A",177,0)
 I '$L(TAX),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":3,1:IBNOTAX_U_3)
"RTN","IBCEF73A",178,0)
 ;
"RTN","IBCEF73A",179,0)
 Q IBRETVAL
"RTN","IBCEF73A",180,0)
 ;
"RTN","IBCEF73A",181,0)
RXSITE(IBIEN399,IBLIST) ; returns prescription organization (file 4) pointer
"RTN","IBCEF73A",182,0)
 ; for the given bill.  If IBLIST passed by reference, then a list of
"RTN","IBCEF73A",183,0)
 ; the possible organizations are returned for a bill, since a bill may
"RTN","IBCEF73A",184,0)
 ; have more than one prescription.  If more than one rx on the bill, the
"RTN","IBCEF73A",185,0)
 ; $$ return is the pointer of the last prescription found.
"RTN","IBCEF73A",186,0)
 ; IBLIST(rx ien,fill date)=ORGINATION (file 4 pointer)
"RTN","IBCEF73A",187,0)
 ;
"RTN","IBCEF73A",188,0)
 N IBX,IBDATA,IBORG,IBRX,IBDT,IBY,IBRXN,DFN
"RTN","IBCEF73A",189,0)
 K ^TMP($J,"IBCEF73A")
"RTN","IBCEF73A",190,0)
 S IBORG=0,DFN=$P($G(^DGCR(399,IBIEN399,0)),"^",2),IBLIST="IBCEF73A"
"RTN","IBCEF73A",191,0)
 S IBRXN=0 F  S IBRXN=$O(^IBA(362.4,"AIFN"_IBIEN399,IBRXN)) Q:'IBRXN  S IBX=0 F  S IBX=$O(^IBA(362.4,"AIFN"_IBIEN399,IBRXN,IBX)) Q:'IBX  D
"RTN","IBCEF73A",192,0)
 . S IBDATA=$G(^IBA(362.4,IBX,0))
"RTN","IBCEF73A",193,0)
 . S IBRX=$P(IBDATA,"^",5),IBDT=$P(IBDATA,"^",3) Q:'IBRX!('IBDT)
"RTN","IBCEF73A",194,0)
 . D RX^PSO52API(DFN,IBLIST,IBRX,,"0,2,R")
"RTN","IBCEF73A",195,0)
 . I IBDT=+$G(^TMP($J,"IBCEF73A",DFN,IBRX,22)) S (IBORG,IBLIST(IBRX,IBDT))=$$PSONPI(+$G(^TMP($J,"IBCEF73A",DFN,IBRX,20))) Q
"RTN","IBCEF73A",196,0)
 . S IBY=0 F  S IBY=$O(^TMP($J,"IBCEF73A",DFN,IBRX,"RF",IBY)) Q:'IBY  I IBDT=+$G(^TMP($J,"IBCEF73A",DFN,IBRX,"RF",IBY,.01)) S (IBORG,IBLIST(IBRX,IBDT))=$$PSONPI(+$G(^TMP($J,"IBCEF73A",DFN,IBRX,"RF",IBY,8))) Q
"RTN","IBCEF73A",197,0)
 K ^TMP($J,"IBCEF73A")
"RTN","IBCEF73A",198,0)
 Q IBORG
"RTN","IBCEF73A",199,0)
 ;
"RTN","IBCEF73A",200,0)
PSONPI(IB59IEN) ; returns institution ien for a file 59 ien
"RTN","IBCEF73A",201,0)
 N IB4IEN
"RTN","IBCEF73A",202,0)
 K ^TMP($J,"IBCEF59")
"RTN","IBCEF73A",203,0)
 D PSS^PSO59(IB59IEN,,"IBCEF59")
"RTN","IBCEF73A",204,0)
 S IB4IEN=+$G(^TMP($J,"IBCEF59",IB59IEN,101))
"RTN","IBCEF73A",205,0)
 K ^TMP($J,"IBCEF59")
"RTN","IBCEF73A",206,0)
 Q IB4IEN
"RTN","IBCEF74A")
0^11^B23472039^B20383624
"RTN","IBCEF74A",1,0)
IBCEF74A ;ALB/ESG - Provider ID maint ?ID continuation ;7 Mar 2006
"RTN","IBCEF74A",2,0)
 ;;2.0;INTEGRATED BILLING;**320,343,349,395,400**;21-MAR-94;Build 52
"RTN","IBCEF74A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF74A",4,0)
 ;
"RTN","IBCEF74A",5,0)
 Q
"RTN","IBCEF74A",6,0)
 ;
"RTN","IBCEF74A",7,0)
EN(IBIFN,IBQUIT) ; Display billing provider and service provider IDs as part
"RTN","IBCEF74A",8,0)
 ; of the ?ID display/help in the billing screens.
"RTN","IBCEF74A",9,0)
 ; Called from DISPID^IBCEF74.
"RTN","IBCEF74A",10,0)
 NEW IBID,IBX,Z,ZI,ZN,SEQ,PSIN,DATA,QUALNM,IDNUM,FACNAME,IBZ,ORGNPI,BPZ,BPNAME,BPNPI,BPTAX,SFNPI,SFTAX
"RTN","IBCEF74A",11,0)
 ;
"RTN","IBCEF74A",12,0)
 D ALLIDS^IBCEF75(IBIFN,.IBID)
"RTN","IBCEF74A",13,0)
 ;
"RTN","IBCEF74A",14,0)
 ; Re-sort array by insurance sequence (P/S/T)
"RTN","IBCEF74A",15,0)
 K IBX
"RTN","IBCEF74A",16,0)
 F Z="BILLING PRV","LAB/FAC" F ZI="C","O" S ZN=0 F  S ZN=$O(IBID(Z,IBIFN,ZI,ZN)) Q:'ZN  D
"RTN","IBCEF74A",17,0)
 . S SEQ=$P($G(IBID(Z,IBIFN,ZI,ZN)),U,1) Q:SEQ=""
"RTN","IBCEF74A",18,0)
 . S IBX(Z,SEQ,ZI,ZN)=""
"RTN","IBCEF74A",19,0)
 . Q
"RTN","IBCEF74A",20,0)
 ;
"RTN","IBCEF74A",21,0)
 ; Display billing provider information - IB*2*400
"RTN","IBCEF74A",22,0)
 S BPZ=$$B^IBCEF79(IBIFN)
"RTN","IBCEF74A",23,0)
 D GETBP^IBCEF79(IBIFN,"",+BPZ,"?ID",.IBZ)
"RTN","IBCEF74A",24,0)
 S ORGNPI=$$ORGNPI^IBCEF73A(IBIFN)
"RTN","IBCEF74A",25,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",26,0)
 W !!,"Billing Provider Name and ID Information"
"RTN","IBCEF74A",27,0)
 S BPNAME=$G(IBZ("?ID","NAME"))
"RTN","IBCEF74A",28,0)
 I BPNAME="" S BPNAME="***MISSING***"
"RTN","IBCEF74A",29,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",30,0)
 W !,"Billing Provider:  ",BPNAME
"RTN","IBCEF74A",31,0)
 ;
"RTN","IBCEF74A",32,0)
 S BPNPI=$P(ORGNPI,U,3)
"RTN","IBCEF74A",33,0)
 I BPNPI="" S BPNPI="***MISSING***"
"RTN","IBCEF74A",34,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",35,0)
 W !?5,"Billing Provider NPI:  ",BPNPI
"RTN","IBCEF74A",36,0)
 ;
"RTN","IBCEF74A",37,0)
 S BPTAX=$$NOPUNCT^IBCEF($P($G(^IBE(350.9,1,1)),U,5),1)
"RTN","IBCEF74A",38,0)
 I BPTAX="" S BPTAX="***MISSING***"
"RTN","IBCEF74A",39,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",40,0)
 W !?5,"Billing Provider Tax ID (VistA Record PRV):  ",BPTAX
"RTN","IBCEF74A",41,0)
 ;
"RTN","IBCEF74A",42,0)
 ; Display billing provider secondary ID's (current ins only)
"RTN","IBCEF74A",43,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",44,0)
 W !?5,"Billing Provider Secondary IDs (VistA Record CI1A):"
"RTN","IBCEF74A",45,0)
 S Z="BILLING PRV"
"RTN","IBCEF74A",46,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",47,0)
 I IBQUIT G EX
"RTN","IBCEF74A",48,0)
 ;
"RTN","IBCEF74A",49,0)
 ; Now display the lab or facility primary and secondary IDs
"RTN","IBCEF74A",50,0)
 ; This is the service facility information
"RTN","IBCEF74A",51,0)
 ; IB*2*400 - check to make sure there is a service facility
"RTN","IBCEF74A",52,0)
 ;
"RTN","IBCEF74A",53,0)
 I $P(BPZ,U,3)="" G EX     ; no service facility information to display
"RTN","IBCEF74A",54,0)
 ;
"RTN","IBCEF74A",55,0)
 ; Service facility name, similar code as found in SUB-2
"RTN","IBCEF74A",56,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",57,0)
 W !!,"Service Facility Name and ID Information"
"RTN","IBCEF74A",58,0)
 ;
"RTN","IBCEF74A",59,0)
 ; Display note if ins co flag to suppress lab/fac data is set (only applies in switchback mode)
"RTN","IBCEF74A",60,0)
 I '$$SENDSF^IBCEF79(IBIFN) D  I IBQUIT G EX
"RTN","IBCEF74A",61,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",62,0)
 . W !!,"Note:  Service Facility Data not sent for Current Insurance"
"RTN","IBCEF74A",63,0)
 . W !,"       'Send VA Lab/Facility IDs or Facility Data for VAMC?' is set to NO",!
"RTN","IBCEF74A",64,0)
 . Q
"RTN","IBCEF74A",65,0)
 ;
"RTN","IBCEF74A",66,0)
 S FACNAME=$$GETFAC^IBCEP8(+$P(BPZ,U,4),$P(BPZ,U,3),0)
"RTN","IBCEF74A",67,0)
 I FACNAME="" S FACNAME="***MISSING***"
"RTN","IBCEF74A",68,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",69,0)
 W !?5,"Facility:  ",FACNAME
"RTN","IBCEF74A",70,0)
 ;
"RTN","IBCEF74A",71,0)
 S SFNPI=$P(ORGNPI,U,1)
"RTN","IBCEF74A",72,0)
 I SFNPI="" S SFNPI="***MISSING***"
"RTN","IBCEF74A",73,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",74,0)
 W !?5,"Lab or Facility NPI:  ",SFNPI
"RTN","IBCEF74A",75,0)
 ;
"RTN","IBCEF74A",76,0)
 S SFTAX=$$NOPUNCT^IBCEF($$EIN^IBCEP8A(IBIFN),1)
"RTN","IBCEF74A",77,0)
 I SFTAX="" S SFTAX="***MISSING***"
"RTN","IBCEF74A",78,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",79,0)
 W !?5,"Lab or Facility Tax ID (VistA Record SUB):  ",SFTAX
"RTN","IBCEF74A",80,0)
 ;
"RTN","IBCEF74A",81,0)
 ; lab/fac secondary IDs
"RTN","IBCEF74A",82,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",83,0)
 W !?5,"Lab or Facility Secondary IDs (VistA Records SUB1,SUB2,OP3,OP6,OP7):"
"RTN","IBCEF74A",84,0)
 S Z="LAB/FAC"
"RTN","IBCEF74A",85,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",86,0)
 I IBQUIT G EX
"RTN","IBCEF74A",87,0)
 ;
"RTN","IBCEF74A",88,0)
EX ;
"RTN","IBCEF74A",89,0)
 Q
"RTN","IBCEF74A",90,0)
 ;
"RTN","IBCEF74A",91,0)
QUAL(Z,FORMTYPE) ; turn the qualifier code into a qualifier description
"RTN","IBCEF74A",92,0)
 NEW QUAL,IEN
"RTN","IBCEF74A",93,0)
 S QUAL=""
"RTN","IBCEF74A",94,0)
 I $G(Z)="" G QUALX
"RTN","IBCEF74A",95,0)
 I Z="1C" D  G QUALX   ; qualifier for Medicare Part ?
"RTN","IBCEF74A",96,0)
 . I $G(FORMTYPE)=2 S QUAL="MEDICARE PART B"   ; 1500
"RTN","IBCEF74A",97,0)
 . I $G(FORMTYPE)=3 S QUAL="MEDICARE PART A"   ; ub
"RTN","IBCEF74A",98,0)
 . Q
"RTN","IBCEF74A",99,0)
 I Z=34 S Z="SY"       ; qualifier for SSN
"RTN","IBCEF74A",100,0)
 S IEN=+$O(^IBE(355.97,"C",Z,"")) I 'IEN G QUALX
"RTN","IBCEF74A",101,0)
 S QUAL=$P($G(^IBE(355.97,IEN,0)),U,1)
"RTN","IBCEF74A",102,0)
QUALX ;
"RTN","IBCEF74A",103,0)
 Q QUAL
"RTN","IBCEF74A",104,0)
 ;
"RTN","IBCEF74A",105,0)
SECID(Z,IBQUIT) ; Display secondary ID and qualifier information
"RTN","IBCEF74A",106,0)
 ; Z is the type of IDs passed in; either BILLING PRV or LAB/FAC
"RTN","IBCEF74A",107,0)
 ; IBQUIT is returned if passed by reference
"RTN","IBCEF74A",108,0)
 NEW SEQ,ZI,ZN,PSIN,DATA,QUALNM,IDNUM,NODATA
"RTN","IBCEF74A",109,0)
 S IBQUIT=0,NODATA=1
"RTN","IBCEF74A",110,0)
 F SEQ="P","S","T" D  Q:IBQUIT
"RTN","IBCEF74A",111,0)
 . ;
"RTN","IBCEF74A",112,0)
 . ; current ins only for billing provider secondary IDs
"RTN","IBCEF74A",113,0)
 . I Z="BILLING PRV",SEQ'=$$COB^IBCEF(IBIFN) Q
"RTN","IBCEF74A",114,0)
 . S ZI=""
"RTN","IBCEF74A",115,0)
 . F  S ZI=$O(IBX(Z,SEQ,ZI)) Q:ZI=""  D  Q:IBQUIT
"RTN","IBCEF74A",116,0)
 .. S ZN=0
"RTN","IBCEF74A",117,0)
 .. F  S ZN=$O(IBX(Z,SEQ,ZI,ZN)) Q:'ZN  D  Q:IBQUIT
"RTN","IBCEF74A",118,0)
 ... S PSIN=0   ; start at 0 to skip primary IDs
"RTN","IBCEF74A",119,0)
 ... F  S PSIN=$O(IBID(Z,IBIFN,ZI,ZN,PSIN)) Q:PSIN=""  D  Q:IBQUIT
"RTN","IBCEF74A",120,0)
 .... S DATA=$G(IBID(Z,IBIFN,ZI,ZN,PSIN))
"RTN","IBCEF74A",121,0)
 .... S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",122,0)
 .... S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",123,0)
 .... I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",124,0)
 .... S NODATA=0
"RTN","IBCEF74A",125,0)
 .... W !?8,"(",SEQ,") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",126,0)
 .... I Z="LAB/FAC",$D(^DGCR(399,IBIFN,"I2")),SEQ=$$COB^IBCEF(IBIFN) W ?54,"<<<Current Ins"
"RTN","IBCEF74A",127,0)
 .... I Z="BILLING PRV",PSIN=1 W ?54,"<<<System Generated ID"
"RTN","IBCEF74A",128,0)
 .... Q
"RTN","IBCEF74A",129,0)
 ... Q
"RTN","IBCEF74A",130,0)
 .. Q
"RTN","IBCEF74A",131,0)
 . Q
"RTN","IBCEF74A",132,0)
 I NODATA,'IBQUIT W !?8,"(-) None Found"
"RTN","IBCEF74A",133,0)
SECIDX ;
"RTN","IBCEF74A",134,0)
 Q
"RTN","IBCEF74A",135,0)
 ;
"RTN","IBCEF75")
0^9^B23882452^B30751276
"RTN","IBCEF75",1,0)
IBCEF75 ;ALB/WCJ - Provider ID functions ;13 Feb 2006
"RTN","IBCEF75",2,0)
 ;;2.0;INTEGRATED BILLING;**320,371,400**;21-MAR-94;Build 52
"RTN","IBCEF75",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF75",4,0)
 ;
"RTN","IBCEF75",5,0)
 G AWAY
"RTN","IBCEF75",6,0)
AWAY Q
"RTN","IBCEF75",7,0)
 ;
"RTN","IBCEF75",8,0)
ALLIDS(IBIFN,IBXSAVE,IBSTRIP,SEG) ; Return all of the Provider IDS 
"RTN","IBCEF75",9,0)
 I '$D(IBSTRIP) S IBSTRIP=0
"RTN","IBCEF75",10,0)
 I '$D(SEG) S SEG=""
"RTN","IBCEF75",11,0)
 N IBXIEN,ARINFO,ARID,ARQ,IBFRMTYP,ARIEN,ARINS,Z0,DAT,I,SORT1,SORT2,SORT3,COB,IBCCOB
"RTN","IBCEF75",12,0)
 ;
"RTN","IBCEF75",13,0)
 S IBXIEN=IBIFN
"RTN","IBCEF75",14,0)
 D ALLPROV^IBCEF7    ; Get the Person ID's (Returns IBXSAVE)
"RTN","IBCEF75",15,0)
 S DAT=$$PROVID^IBCEF73(IBIFN)
"RTN","IBCEF75",16,0)
 S DAT("QUAL")=IBXSAVE("ID")  ; this value was also passed back by above function
"RTN","IBCEF75",17,0)
 S SORT1="" F  S SORT1=$O(IBXSAVE("PROVINF",IBIFN,SORT1)) Q:SORT1=""  D
"RTN","IBCEF75",18,0)
 . S SORT2=0 F  S SORT2=$O(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2)) Q:SORT2=""  D
"RTN","IBCEF75",19,0)
 .. S SORT3=0 F  S SORT3=$O(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3))  Q:SORT3=""  D
"RTN","IBCEF75",20,0)
 ... S IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,0)="PRIMARY"_U_U_$$STRIP^IBCEF76($P(DAT("QUAL"),U,SORT3)_U_$P(DAT,U,SORT3),1,U,IBSTRIP)
"RTN","IBCEF75",21,0)
 ... F I=1:1 Q:'$D(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,I))  D
"RTN","IBCEF75",22,0)
 .... S $P(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,I),U,3,4)=$$STRIP^IBCEF76($P(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,I),U,3,4),1,U,IBSTRIP)
"RTN","IBCEF75",23,0)
 ;
"RTN","IBCEF75",24,0)
 D LFIDS^IBCEF76(IBIFN,.IBXSAVE,IBSTRIP,SEG)   ; Get the Lab/Facility IDs
"RTN","IBCEF75",25,0)
 ;
"RTN","IBCEF75",26,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN)
"RTN","IBCEF75",27,0)
 S ARIEN=$S(IBFRMTYP=2:3,1:4)
"RTN","IBCEF75",28,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)  ; Current Insurance
"RTN","IBCEF75",29,0)
 F COB=1:1:3 D
"RTN","IBCEF75",30,0)
 . S SORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEF75",31,0)
 . S SORT2=$S(SORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEF75",32,0)
 . S ARINFO=$G(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,ARIEN,1))
"RTN","IBCEF75",33,0)
 . ;
"RTN","IBCEF75",34,0)
 . D BPIDS(IBIFN,.IBXSAVE,SORT1,SORT2,COB,IBSTRIP,SEG)
"RTN","IBCEF75",35,0)
 Q
"RTN","IBCEF75",36,0)
 ; 
"RTN","IBCEF75",37,0)
BPIDS(IBIFN,IDS,SORT1,SORT2,COB,IBSTRIP,SEG) ; Get all the billing provider IDs and qualifiers from the claim and file 355.92
"RTN","IBCEF75",38,0)
 N DAT,IBFRMTYP,IBCARE,IBDIV,IBINS,MAIN,IBCCOB,USED,PLANTYPE,I,CNT,QUAL,ARF,M1,DEF,IDDIV,IBLIMIT,IEN,ID,IB2
"RTN","IBCEF75",39,0)
 ;
"RTN","IBCEF75",40,0)
 S DAT=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF75",41,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF75",42,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEF75",43,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF75",44,0)
 S IBDIV=+$P(DAT,U,22)
"RTN","IBCEF75",45,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF75",46,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)  ; Current Insurance
"RTN","IBCEF75",47,0)
 S IBINS=$P($G(^DGCR(399,IBIFN,"I"_COB)),U)
"RTN","IBCEF75",48,0)
 Q:IBINS=""
"RTN","IBCEF75",49,0)
 ;
"RTN","IBCEF75",50,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2)=$E("PST",COB)
"RTN","IBCEF75",51,0)
 ;
"RTN","IBCEF75",52,0)
 ; Primary ID
"RTN","IBCEF75",53,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,0)=$$STRIP^IBCEF76($$TAXID(),1,U,IBSTRIP)
"RTN","IBCEF75",54,0)
 S USED($P(IDS("BILLING PRV",IBIFN,SORT1,SORT2,0),U))=""
"RTN","IBCEF75",55,0)
 ;
"RTN","IBCEF75",56,0)
 ; Secondary #1 - This is the ID Emdeon uses for sorting
"RTN","IBCEF75",57,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,1)=$$STRIP^IBCEF76($$BPSID1(IBDIV),1,U,IBSTRIP)
"RTN","IBCEF75",58,0)
 S USED($P(IDS("BILLING PRV",IBIFN,SORT1,SORT2,1),U))=""
"RTN","IBCEF75",59,0)
 ;
"RTN","IBCEF75",60,0)
 ; Check if this is a plan type which gets no secondary IDs
"RTN","IBCEF75",61,0)
 S M1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCEF75",62,0)
 ; the following check is the current value of the flag, not when the claim was created. 
"RTN","IBCEF75",63,0)
 S PLANTYPE=$$POLTYP^IBCEF3(IBIFN,COB)
"RTN","IBCEF75",64,0)
 I PLANTYPE]"",$D(^DIC(36,IBINS,13,"B",PLANTYPE)) Q 
"RTN","IBCEF75",65,0)
 ;
"RTN","IBCEF75",66,0)
 ; Secondary #2
"RTN","IBCEF75",67,0)
 ; If there is a ID  send with quailifer (stored or computed)
"RTN","IBCEF75",68,0)
 I $TR($P(M1,U,COB+1)," ")]"" D
"RTN","IBCEF75",69,0)
 . S QUAL=""
"RTN","IBCEF75",70,0)
 . S DAT=$P(M1,U,COB+9)
"RTN","IBCEF75",71,0)
 . I DAT S QUAL=$$STRIP^IBCEF76($P($G(^IBE(355.97,DAT,0)),U,3),1,,IBSTRIP)
"RTN","IBCEF75",72,0)
 . ; the null check is needed to be backwards compatible
"RTN","IBCEF75",73,0)
 . I QUAL=""!(QUAL="1J") S QUAL=$$STRIP^IBCEF76($$OLDWAY(IBIFN,COB),1,,IBSTRIP)
"RTN","IBCEF75",74,0)
 . S IB2=QUAL_U_$$STRIP^IBCEF76($P(M1,U,COB+1),1,,IBSTRIP)
"RTN","IBCEF75",75,0)
 ;
"RTN","IBCEF75",76,0)
 I $TR($P(M1,U,COB+1)," ")="" S IB2=$$STRIP^IBCEF76($$OLDWAY(IBIFN,COB),1,,IBSTRIP)_U_$$STRIP^IBCEF76($$GET1^DIQ(350.9,1,1.05),1,,IBSTRIP)
"RTN","IBCEF75",77,0)
 ;
"RTN","IBCEF75",78,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,2)=IB2
"RTN","IBCEF75",79,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,2,"PTQ")=$$OLDWAY(IBIFN,COB)
"RTN","IBCEF75",80,0)
 S USED($P(IB2,U))=""
"RTN","IBCEF75",81,0)
 ;
"RTN","IBCEF75",82,0)
 S CNT=$S('$D(IDS("BILLING PRV",IBIFN,SORT1,SORT2,2)):2,1:3)
"RTN","IBCEF75",83,0)
 S IBLIMIT=8
"RTN","IBCEF75",84,0)
 S IEN=0 F  S IEN=$O(^IBA(355.92,"B",IBINS,IEN)) Q:IEN=""  D  Q:CNT>IBLIMIT
"RTN","IBCEF75",85,0)
 . S DAT=$G(^IBA(355.92,IEN,0))
"RTN","IBCEF75",86,0)
 . Q:$P(DAT,U,8)'="A"   ; only allow additional IDs
"RTN","IBCEF75",87,0)
 . Q:$P(DAT,U,7)=""  ; No Provider ID
"RTN","IBCEF75",88,0)
 . Q:$P(DAT,U,6)=""  ; No ID Qualifier
"RTN","IBCEF75",89,0)
 . I IBFRMTYP=1 Q:$P(DAT,U,4)=2
"RTN","IBCEF75",90,0)
 . I IBFRMTYP=2 Q:$P(DAT,U,4)=1
"RTN","IBCEF75",91,0)
 . ;
"RTN","IBCEF75",92,0)
 . ; Check if we already have one of these
"RTN","IBCEF75",93,0)
 . S QUAL=$$STRIP^IBCEF76($P(DAT,U,6),1,,IBSTRIP)
"RTN","IBCEF75",94,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF75",95,0)
 . Q:QUAL=""
"RTN","IBCEF75",96,0)
 . Q:$D(USED(QUAL))
"RTN","IBCEF75",97,0)
 . ;
"RTN","IBCEF75",98,0)
 . S IDS("BILLING PRV",IBIFN,SORT1,SORT2,CNT)=QUAL_U_$$STRIP^IBCEF76($P(DAT,U,7),1,,IBSTRIP)
"RTN","IBCEF75",99,0)
 . S CNT=CNT+1,USED(QUAL)=""
"RTN","IBCEF75",100,0)
 ;
"RTN","IBCEF75",101,0)
 Q
"RTN","IBCEF75",102,0)
 ;
"RTN","IBCEF75",103,0)
OLDWAY(IBIFN,COB) ; Figure out the qualifier the old way if it's not stored with the claim.
"RTN","IBCEF75",104,0)
 ; It's based on the plan type.  This is used for Billing Provider Secondary ID #2
"RTN","IBCEF75",105,0)
 N PLANTYPE
"RTN","IBCEF75",106,0)
 S PLANTYPE=$$POLTYP^IBCEF3(IBIFN,COB)
"RTN","IBCEF75",107,0)
 Q $$SOP^IBCEP2B(IBIFN,PLANTYPE)
"RTN","IBCEF75",108,0)
 ;
"RTN","IBCEF75",109,0)
BPSID1(DIV) ; Return the Billing Provider Secondary ID #1 and qualifier which Emdeon uses to sort IBIFNs
"RTN","IBCEF75",110,0)
 N DATA
"RTN","IBCEF75",111,0)
 S DATA=$P($$SITE^VASITE(DT,$S(DIV:DIV,1:+$$PRIM^VASITE(DT))),U,3)
"RTN","IBCEF75",112,0)
 S DATA=$E("0000",1,7-$L(DATA))_$E(DATA,4,7)
"RTN","IBCEF75",113,0)
 Q "G5"_U_DATA
"RTN","IBCEF75",114,0)
 ;
"RTN","IBCEF75",115,0)
TAXID() ; Return the Billing Provider Primary ID and qualifier which is the TAXID for the site and also the qualifier
"RTN","IBCEF75",116,0)
 N DATA
"RTN","IBCEF75",117,0)
 S DATA=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBCEF75",118,0)
 S DATA=$$NOPUNCT^IBCEF(DATA,1)
"RTN","IBCEF75",119,0)
 Q 24_U_DATA
"RTN","IBCEF75",120,0)
 ;
"RTN","IBCEF75",121,0)
CLEANUP(IBXSAVE) ; Clean up 
"RTN","IBCEF75",122,0)
 K IBXSAVE("PROVINF")
"RTN","IBCEF75",123,0)
 K IBXSAVE("LAB/FAC")
"RTN","IBCEF75",124,0)
 K IBXSAVE("BILLING PRV")
"RTN","IBCEF75",125,0)
 K IBXSAVE("ID")
"RTN","IBCEF75",126,0)
 Q
"RTN","IBCEF76")
0^10^B37942879^B34168446
"RTN","IBCEF76",1,0)
IBCEF76 ;ALB/WCJ - Provider ID functions ;13 Feb 2006
"RTN","IBCEF76",2,0)
 ;;2.0;INTEGRATED BILLING;**320,349,400**;21-MAR-94;Build 52
"RTN","IBCEF76",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF76",4,0)
 ;
"RTN","IBCEF76",5,0)
 G AWAY
"RTN","IBCEF76",6,0)
AWAY Q
"RTN","IBCEF76",7,0)
 ;
"RTN","IBCEF76",8,0)
LFIDS(IBIFN,IDS,IBSTRIP,SEG) ;
"RTN","IBCEF76",9,0)
 ;  Pass in the the internal claim number and return the array of IDS.
"RTN","IBCEF76",10,0)
 ;  IDS("C"urrent or "O"ther, Order of Insurance within subscript 1, order of ID within subscript 2)
"RTN","IBCEF76",11,0)
 ;  IDS("C",1)="P"
"RTN","IBCEF76",12,0)
 ;  IDS("C",1,0)=Qualifier^Primary ID
"RTN","IBCEF76",13,0)
 ;  IDS("C",1,1)=Qualifier^Sec ID #1
"RTN","IBCEF76",14,0)
 ;  IDS("C",1,2)=Qualifier^Sec ID #2
"RTN","IBCEF76",15,0)
 ;
"RTN","IBCEF76",16,0)
 N DAT,IBFRMTYP,IBCARE,IBDIV,IBINS,OUTFAC,MAIN,IBCCOB,TMPIDS,COB,IBSORT1,IBSORT2,IBLIMIT,IBLF
"RTN","IBCEF76",17,0)
 ;
"RTN","IBCEF76",18,0)
 S DAT=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF76",19,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF76",20,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEF76",21,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF76",22,0)
 S IBDIV=+$P(DAT,U,22)
"RTN","IBCEF76",23,0)
 S OUTFAC=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCEF76",24,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",25,0)
 ;
"RTN","IBCEF76",26,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF76",27,0)
 F COB=1:1:3 D
"RTN","IBCEF76",28,0)
 . S IBSORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEF76",29,0)
 . S IBSORT2=$S(IBSORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEF76",30,0)
 . S IBLIMIT=$S(IBSORT1="C":5,1:3)  ; Limit secondary IDs
"RTN","IBCEF76",31,0)
 . S DAT=$G(^DGCR(399,IBIFN,"I"_COB))
"RTN","IBCEF76",32,0)
 . ;
"RTN","IBCEF76",33,0)
 . S IBINS=$P(DAT,U)  ; insurance PTR 36
"RTN","IBCEF76",34,0)
 . Q:IBINS=""
"RTN","IBCEF76",35,0)
 . ;
"RTN","IBCEF76",36,0)
 . ; IB*2*400 - esg - 9/24/08, 2/24/09 - if there is no service facility for this claim at this COB, then get out
"RTN","IBCEF76",37,0)
 . S IBLF=$$B^IBCEF79(IBIFN,COB)       ; billing provider/service facility function
"RTN","IBCEF76",38,0)
 . I $P(IBLF,U,3)="" Q                 ; no service facility data at this COB, don't build this "LAB/FAC" area
"RTN","IBCEF76",39,0)
 . ;
"RTN","IBCEF76",40,0)
 . I OUTFAC]"" D  Q
"RTN","IBCEF76",41,0)
 .. D NONVALF(IBIFN,OUTFAC_";IBA(355.93,",IBINS,IBFRMTYP,IBCARE,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",42,0)
 . ;
"RTN","IBCEF76",43,0)
 . I OUTFAC="" D
"RTN","IBCEF76",44,0)
 .. ;
"RTN","IBCEF76",45,0)
 .. ; if ins co flag says to not send svc fac data and we're sending an EDI claim, then get out
"RTN","IBCEF76",46,0)
 .. I '$$SENDSF^IBCEF79(IBIFN,COB),$G(^TMP("IBTX",$J,IBIFN)) Q
"RTN","IBCEF76",47,0)
 .. ;
"RTN","IBCEF76",48,0)
 .. S IDS("LAB/FAC",IBIFN,IBSORT1,IBSORT2,0)=$$STRIP($$TAXID^IBCEF75(),1,U,IBSTRIP)
"RTN","IBCEF76",49,0)
 .. D VALF(IBIFN,IBINS,IBFRMTYP,IBDIV,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",50,0)
 Q
"RTN","IBCEF76",51,0)
 ;
"RTN","IBCEF76",52,0)
VALF(IBIFN,INS,FT,DIV,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get VA Lab/Fac Secondary IDs
"RTN","IBCEF76",53,0)
 ; Pass in INS - IEN to file 36
"RTN","IBCEF76",54,0)
 ; FT - 1 = UB 2 = 1500
"RTN","IBCEF76",55,0)
 ; DIV - PTR to 40.8
"RTN","IBCEF76",56,0)
 ;
"RTN","IBCEF76",57,0)
 N Z,Z0,ID,QUAL,MAIN,IDTBL,CNT,Z
"RTN","IBCEF76",58,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",59,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",INS,Z)) Q:'Z  D
"RTN","IBCEF76",60,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEF76",61,0)
 . Q:$P(Z0,U,8)'="LF"   ; Screen out anything other than Lab or Facility
"RTN","IBCEF76",62,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both
"RTN","IBCEF76",63,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",64,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",65,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",66,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",67,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",68,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",69,0)
 . I $P(Z0,U,5)=""!($P(Z0,U,5)=0)!($P(Z0,U,5)=MAIN) S IDTBL("DEF",QUAL)=ID  ; set up default for main division
"RTN","IBCEF76",70,0)
 . I $P(Z0,U,5)=DIV S IDTBL("DIV",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",71,0)
 S CNT=0
"RTN","IBCEF76",72,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)
"RTN","IBCEF76",73,0)
 I $D(IDTBL("DIV")) D  Q
"RTN","IBCEF76",74,0)
 . S Z="" F  S Z=$O(IDTBL("DIV",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DIV",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",75,0)
 I $D(IDTBL("DEF")) D  Q
"RTN","IBCEF76",76,0)
 . S Z="" F  S Z=$O(IDTBL("DEF",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DEF",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",77,0)
 Q
"RTN","IBCEF76",78,0)
 ;
"RTN","IBCEF76",79,0)
NONVALF(IBIFN,PRV,INS,FT,PT,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get Non VA Lab/Fac Secondary IDs
"RTN","IBCEF76",80,0)
 ; Pass in PRV - VPTR - PTR to 355.93 (in format of variabel pointer IEN;IBA(355.93,
"RTN","IBCEF76",81,0)
 ; Pass in INS - PTR to 36 of null (not provide by insurance company)
"RTN","IBCEF76",82,0)
 ; FT - 1 = UB 2 = 1500
"RTN","IBCEF76",83,0)
 ; PT - Patient Type - 1 inpatient 2 outpatient
"RTN","IBCEF76",84,0)
 ; IDS array being returned
"RTN","IBCEF76",85,0)
 ; SORT1 - "C"urrent or "O"ther
"RTN","IBCEF76",86,0)
 ; SORT2 - 1 if current or (1 or 2 if other)
"RTN","IBCEF76",87,0)
 N Z,Z0,ID,QUAL,IDTBL,CNT
"RTN","IBCEF76",88,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",PRV,Z)) Q:'Z  D
"RTN","IBCEF76",89,0)
 . S Z0=$G(^IBA(355.9,Z,0))
"RTN","IBCEF76",90,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both UB and 1500
"RTN","IBCEF76",91,0)
 . I +$P(Z0,U,5) Q:$P(Z0,U,5)'=PT   ; Patient type must match that passed in or be a 0 which allows both in patient and outpatient
"RTN","IBCEF76",92,0)
 . I INS]"",$P(Z0,U,2)]"",INS'=$P(Z0,U,2) Q
"RTN","IBCEF76",93,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",94,0)
 . Q:ID=""
"RTN","IBCEF76",95,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",96,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",97,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",98,0)
 . Q:QUAL=""
"RTN","IBCEF76",99,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",100,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",101,0)
 . I $G(SEG)="SUB1" Q:$$SUB1^IBCEF73(FT)'[(U_QUAL_U)
"RTN","IBCEF76",102,0)
 . I $P(Z0,U,2)="" S IDTBL("OWN",QUAL)=ID  ; set up default of lab or facilities own ids
"RTN","IBCEF76",103,0)
 . I $P(Z0,U,2)=INS S IDTBL("INS",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",104,0)
 ;
"RTN","IBCEF76",105,0)
 S CNT=0
"RTN","IBCEF76",106,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)_U_PRV
"RTN","IBCEF76",107,0)
 ; get primary
"RTN","IBCEF76",108,0)
 S Z0=$G(^IBA(355.93,+PRV,0))
"RTN","IBCEF76",109,0)
 I $P(Z0,U,9)]"",$P(Z0,U,13)]"" S IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=$$STRIP($P($G(^IBE(355.97,$P(Z0,U,13),0)),U,3)_U_$P(Z0,U,9),1,U,IBSTRIP)
"RTN","IBCEF76",110,0)
 ; get secondarys in order
"RTN","IBCEF76",111,0)
 I $D(IDTBL("INS")) D
"RTN","IBCEF76",112,0)
 . N Z S Z="" F  S Z=$O(IDTBL("INS",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("INS",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",113,0)
 I $D(IDTBL("OWN")),CNT'=IBLIMIT D
"RTN","IBCEF76",114,0)
 . N Z S Z="" F  S Z=$O(IDTBL("OWN",Z)) Q:Z=""  I '$D(IDTBL("INS",Z)) S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("OWN",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",115,0)
 Q
"RTN","IBCEF76",116,0)
 ;
"RTN","IBCEF76",117,0)
STRIP(X,SPACE,EXC,IBSTRIP) ;
"RTN","IBCEF76",118,0)
 ; Strip punctuation from data in X
"RTN","IBCEF76",119,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF76",120,0)
 ; EXC = list of punct not to strip
"RTN","IBCEF76",121,0)
 ; 
"RTN","IBCEF76",122,0)
 Q:'$G(IBSTRIP) X
"RTN","IBCEF76",123,0)
 Q $$NOPUNCT^IBCEF(X,$G(SPACE),$G(EXC))
"RTN","IBCEF76",124,0)
 ;
"RTN","IBCEF76",125,0)
OTH(IBIFN,IBXSAVE,IBXDATA,COND,SEG) ; Procedure used in piece 2 of some output
"RTN","IBCEF76",126,0)
 ; formatter segments for other insurance
"RTN","IBCEF76",127,0)
 ; COND = 0/1 value passed in that determines whether or not to call the
"RTN","IBCEF76",128,0)
 ;        provider ID function
"RTN","IBCEF76",129,0)
 ;  SEG = name of segment for use in calling ID^IBCEF2 (4 characters)
"RTN","IBCEF76",130,0)
 ;
"RTN","IBCEF76",131,0)
 N Z
"RTN","IBCEF76",132,0)
 D CLEANUP^IBCEF75(.IBXSAVE)
"RTN","IBCEF76",133,0)
 I COND D ALLIDS^IBCEF75(IBIFN,.IBXSAVE,1)
"RTN","IBCEF76",134,0)
 ;
"RTN","IBCEF76",135,0)
 ; Special Check:  if Other Insurance #2 has secondary ID's while Other
"RTN","IBCEF76",136,0)
 ; Insurance #1 does not, then move up #2 to be #1 here.  This is to
"RTN","IBCEF76",137,0)
 ; ensure the output formatter IBXDATA array is built properly.
"RTN","IBCEF76",138,0)
 ;
"RTN","IBCEF76",139,0)
 I $O(IBXSAVE("LAB/FAC",IBIFN,"O",2,0)),'$O(IBXSAVE("LAB/FAC",IBIFN,"O",1,0)) D
"RTN","IBCEF76",140,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",1)
"RTN","IBCEF76",141,0)
 . M IBXSAVE("LAB/FAC",IBIFN,"O",1)=IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",142,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",143,0)
 . Q
"RTN","IBCEF76",144,0)
 ;
"RTN","IBCEF76",145,0)
 K IBXDATA
"RTN","IBCEF76",146,0)
 S Z=0
"RTN","IBCEF76",147,0)
 F  S Z=$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z)) Q:'Z  D
"RTN","IBCEF76",148,0)
 . I '$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z,0)) Q
"RTN","IBCEF76",149,0)
 . S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBIFN,"O",Z)),U,1)
"RTN","IBCEF76",150,0)
 . I Z>1 D ID^IBCEF2(Z,SEG)
"RTN","IBCEF76",151,0)
 . Q
"RTN","IBCEF76",152,0)
OTHX ;
"RTN","IBCEF76",153,0)
 Q
"RTN","IBCEF76",154,0)
 ;
"RTN","IBCEF79")
0^1^B127493813^n/a
"RTN","IBCEF79",1,0)
IBCEF79 ;ALB/ESG - Billing Provider functions ;13-Aug-2008
"RTN","IBCEF79",2,0)
 ;;2.0;INTEGRATED BILLING;**400**;21-MAR-94;Build 52
"RTN","IBCEF79",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF79",4,0)
 ;
"RTN","IBCEF79",5,0)
 Q
"RTN","IBCEF79",6,0)
 ;
"RTN","IBCEF79",7,0)
B(IBIFN,COB) ; Determine Billing Provider and Service Facility information
"RTN","IBCEF79",8,0)
 ; This function returns a string in the following format:
"RTN","IBCEF79",9,0)
 ;  [1] billing provider Institution file pointer (IEN to file 4) or "0"
"RTN","IBCEF79",10,0)
 ;      if the billing provider cannot be determined
"RTN","IBCEF79",11,0)
 ;  [2] billing provider name (.01 field in file 4) or Error reason why
"RTN","IBCEF79",12,0)
 ;      the billing provider cannot be determined - used when piece [1]=0
"RTN","IBCEF79",13,0)
 ;  [3] 0 if the service facility is a VA institution in file 4
"RTN","IBCEF79",14,0)
 ;      1 if the service facility is a non-VA facility in file 355.93
"RTN","IBCEF79",15,0)
 ;      "" if the service facility is blank - when there is no service facility
"RTN","IBCEF79",16,0)
 ;  [4] service facility IEN - either an IEN to file 4 or to file 355.93
"RTN","IBCEF79",17,0)
 ;      or "" if the service facility is blank
"RTN","IBCEF79",18,0)
 ;
"RTN","IBCEF79",19,0)
 ; Input parameters
"RTN","IBCEF79",20,0)
 ;   IBIFN - claim# required
"RTN","IBCEF79",21,0)
 ;     COB - payer sequence# - optional - defaults to current payer sequence# if not passed in
"RTN","IBCEF79",22,0)
 ;
"RTN","IBCEF79",23,0)
 NEW %,Z,IBU2,NVAFAC,BP,IB0,EVDT,IBDIV,BPDIV,BPDIVCHK,RXFLG,D,D0,DI,DIQ2,X,Y
"RTN","IBCEF79",24,0)
 S Z=""
"RTN","IBCEF79",25,0)
 S IBIFN=+$G(IBIFN)
"RTN","IBCEF79",26,0)
 I 'IBIFN S Z="0^Invalid claim.^^" G BX
"RTN","IBCEF79",27,0)
 I '$D(^DGCR(399,IBIFN,0)) S Z="0^Claim doesn't exist.^^" G BX
"RTN","IBCEF79",28,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)    ; current payer sequence default
"RTN","IBCEF79",29,0)
 I '$F(".1.2.3.","."_COB_".") S Z="0^Invalid Payer Sequence#: """_COB_"""^^" G BX
"RTN","IBCEF79",30,0)
 ;
"RTN","IBCEF79",31,0)
 ; check ins co switchback flag
"RTN","IBCEF79",32,0)
 I $$INSFLGS(IBIFN,COB)>0 D  G BX
"RTN","IBCEF79",33,0)
 . N IBZ,SVCIEN,SVCTYP
"RTN","IBCEF79",34,0)
 . ; revert billing provider and service facility calculation to pre-patch 400 methods
"RTN","IBCEF79",35,0)
 . ;
"RTN","IBCEF79",36,0)
 . ; service facility is legacy N-RENDERING INSTITUTION data
"RTN","IBCEF79",37,0)
 . D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,IBIFN)
"RTN","IBCEF79",38,0)
 . S SVCIEN=+IBZ              ; service facility ien
"RTN","IBCEF79",39,0)
 . S SVCTYP=+$P(IBZ,U,2)      ; service facility type - 0=VA inst, 1=non-VA facility
"RTN","IBCEF79",40,0)
 . ;
"RTN","IBCEF79",41,0)
 . I 'SVCIEN S $P(Z,U,3)="",$P(Z,U,4)=""          ;  no svc fac
"RTN","IBCEF79",42,0)
 . I SVCIEN S $P(Z,U,3)=SVCTYP,$P(Z,U,4)=SVCIEN   ; yes svc fac
"RTN","IBCEF79",43,0)
 . ;
"RTN","IBCEF79",44,0)
 . ; billing provider = institution of main division in the database
"RTN","IBCEF79",45,0)
 . S BP=+$$SITE^VASITE
"RTN","IBCEF79",46,0)
 . I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) Q
"RTN","IBCEF79",47,0)
 . S $P(Z,U,1,2)="0^Facility Type of Main Division Institution is invalid."
"RTN","IBCEF79",48,0)
 . Q
"RTN","IBCEF79",49,0)
 ;
"RTN","IBCEF79",50,0)
 S IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEF79",51,0)
 S NVAFAC=+$P(IBU2,U,10)          ; non-VA facility
"RTN","IBCEF79",52,0)
 I NVAFAC D  G BX
"RTN","IBCEF79",53,0)
 . S $P(Z,U,3)=1                  ; service facility is the non-VA facility
"RTN","IBCEF79",54,0)
 . S $P(Z,U,4)=NVAFAC             ; ien to file 355.93
"RTN","IBCEF79",55,0)
 . S BP=+$$SITE^VASITE            ; institution of main division in the database
"RTN","IBCEF79",56,0)
 . I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) Q
"RTN","IBCEF79",57,0)
 . S $P(Z,U,1,2)="0^Facility Type of Main Division Institution is invalid."
"RTN","IBCEF79",58,0)
 . Q
"RTN","IBCEF79",59,0)
 ;
"RTN","IBCEF79",60,0)
 ; VA claims - set some initial variables
"RTN","IBCEF79",61,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF79",62,0)
 S EVDT=$P(IB0,U,3)                      ; claim event date
"RTN","IBCEF79",63,0)
 I 'EVDT S EVDT=DT                       ;   - default today if undefined
"RTN","IBCEF79",64,0)
 S IBDIV=+$P(IB0,U,22)                   ; division ptr file 40.8
"RTN","IBCEF79",65,0)
 I 'IBDIV S IBDIV=$$PRIM^VASITE(EVDT)    ;   - default primary division as of event date
"RTN","IBCEF79",66,0)
 I IBDIV'>0 S $P(Z,U,1,2)="0^Invalid Division for Event Date "_$$FMTE^XLFDT(EVDT,"5Z")_"." G BX
"RTN","IBCEF79",67,0)
 ;
"RTN","IBCEF79",68,0)
 S BPDIV=+$$SITE^VASITE(EVDT,IBDIV)      ; division institution ptr file 4
"RTN","IBCEF79",69,0)
 I BPDIV'>0 S $P(Z,U,1,2)="0^Invalid Institution for Event Date "_$$FMTE^XLFDT(EVDT,"5Z")_"." G BX
"RTN","IBCEF79",70,0)
 ;
"RTN","IBCEF79",71,0)
 S BPDIVCHK=0                            ; flag indicating if the div inst has been checked
"RTN","IBCEF79",72,0)
 S RXFLG=$$ISRX^IBCEF1(IBIFN)            ; pharmacy flag
"RTN","IBCEF79",73,0)
 ;
"RTN","IBCEF79",74,0)
 I RXFLG D
"RTN","IBCEF79",75,0)
 . S BP=+$$RXSITE^IBCEF73A(IBIFN)        ; dispensing pharmacy ien for pharmacy claims
"RTN","IBCEF79",76,0)
 . I 'BP S BP=BPDIV,BPDIVCHK=1           ; use division institution if pharmacy not found
"RTN","IBCEF79",77,0)
 . Q
"RTN","IBCEF79",78,0)
 ;
"RTN","IBCEF79",79,0)
 I 'RXFLG S BP=BPDIV,BPDIVCHK=1          ; non-Rx claims use division institution
"RTN","IBCEF79",80,0)
 ;
"RTN","IBCEF79",81,0)
 I BP,$$BPFACTYP(BP) D  G BX             ; billing provider type is valid
"RTN","IBCEF79",82,0)
 . S $P(Z,U,1,2)=$$CHK(BP)
"RTN","IBCEF79",83,0)
 . ;
"RTN","IBCEF79",84,0)
 . ; 3/27/09 - Special Case
"RTN","IBCEF79",85,0)
 . ;   If we are printing the CMS-1500 claim form, then populate the service facility with the billing provider.
"RTN","IBCEF79",86,0)
 . ;   For any other calculation, the service facility is blank here.
"RTN","IBCEF79",87,0)
 . ;
"RTN","IBCEF79",88,0)
 . I $G(^TMP("IB 1500 PRINT",$J,IBIFN)) D
"RTN","IBCEF79",89,0)
 .. S $P(Z,U,3)=0           ; service facility is in file 4
"RTN","IBCEF79",90,0)
 .. S $P(Z,U,4)=$P(Z,U,1)   ; move billing provider ien over
"RTN","IBCEF79",91,0)
 .. Q
"RTN","IBCEF79",92,0)
 . Q
"RTN","IBCEF79",93,0)
 ;
"RTN","IBCEF79",94,0)
 ; here, the BP has an invalid billing provider facility type
"RTN","IBCEF79",95,0)
 ; move this BP over to the service facility
"RTN","IBCEF79",96,0)
 S $P(Z,U,3)=0    ; service facility is in file 4
"RTN","IBCEF79",97,0)
 S $P(Z,U,4)=BP   ; move this BP over to the service facility
"RTN","IBCEF79",98,0)
 ;
"RTN","IBCEF79",99,0)
 I BPDIVCHK G B1  ; the division institution has already been checked...skip down to tag B1 to check the parent
"RTN","IBCEF79",100,0)
 ;
"RTN","IBCEF79",101,0)
 ; check the division institution
"RTN","IBCEF79",102,0)
 S BP=BPDIV,BPDIVCHK=1
"RTN","IBCEF79",103,0)
 I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) G BX
"RTN","IBCEF79",104,0)
 ;
"RTN","IBCEF79",105,0)
B1 ;
"RTN","IBCEF79",106,0)
 ; check the parent
"RTN","IBCEF79",107,0)
 S BP=$$BPPAR(BPDIV)    ; institution of the parent of the division
"RTN","IBCEF79",108,0)
 I BP,$$BPFACTYP(BP) S $P(Z,U,1,2)=$$CHK(BP) G BX
"RTN","IBCEF79",109,0)
 ;
"RTN","IBCEF79",110,0)
 ; here, the facility type of the parent is also not valid, so it is an error
"RTN","IBCEF79",111,0)
 S $P(Z,U,1,2)="0^Facility Type of Division and the Division's Parent Institution are Invalid."
"RTN","IBCEF79",112,0)
BX ;
"RTN","IBCEF79",113,0)
 Q Z
"RTN","IBCEF79",114,0)
 ;
"RTN","IBCEF79",115,0)
CHK(IEN) ; Perform final billing provider checks on passed in Institution
"RTN","IBCEF79",116,0)
 ; file pointer - File 4 ien
"RTN","IBCEF79",117,0)
 ; Function returns final pieces 1 and 2 of $$B function as described above
"RTN","IBCEF79",118,0)
 NEW BP
"RTN","IBCEF79",119,0)
 S IEN=+$G(IEN)
"RTN","IBCEF79",120,0)
 I 'IEN S BP="0^Invalid Institution pointer IEN." G CHKX
"RTN","IBCEF79",121,0)
 I '$$BPCHKN(IEN) S BP="0^Not a National Institution." G CHKX
"RTN","IBCEF79",122,0)
 I '$$BPCHKA(IEN) S BP="0^Not an Active Institution." G CHKX
"RTN","IBCEF79",123,0)
 ;
"RTN","IBCEF79",124,0)
 S BP=IEN_U_$P($$NS^XUAF4(IEN),U,1)    ; ien^name  DBIA# 2171
"RTN","IBCEF79",125,0)
CHKX ;
"RTN","IBCEF79",126,0)
 Q BP
"RTN","IBCEF79",127,0)
 ;
"RTN","IBCEF79",128,0)
BPCHKN(IEN) ; Is this a national Institution?
"RTN","IBCEF79",129,0)
 N Z S Z=0
"RTN","IBCEF79",130,0)
 I $$STATUS^XUAF4(+IEN)="N" S Z=1    ; DBIA# 2171
"RTN","IBCEF79",131,0)
BPCHKNX ;
"RTN","IBCEF79",132,0)
 Q Z
"RTN","IBCEF79",133,0)
 ;
"RTN","IBCEF79",134,0)
BPCHKA(IEN) ; Is this an active Institution?
"RTN","IBCEF79",135,0)
 N Z S Z=0
"RTN","IBCEF79",136,0)
 I $$ACTIVE^XUAF4(+IEN) S Z=1        ; DBIA# 2171
"RTN","IBCEF79",137,0)
BPCHKAX ;
"RTN","IBCEF79",138,0)
 Q Z
"RTN","IBCEF79",139,0)
 ;
"RTN","IBCEF79",140,0)
BPFACTYP(IEN) ; Is the facility type of this Institution a valid Billing Provider facility type?
"RTN","IBCEF79",141,0)
 N Z S Z=0
"RTN","IBCEF79",142,0)
 I $D(^IBE(350.9,1,20,"B",+$$GET1^DIQ(4,+IEN_",",13,"I"))) S Z=1
"RTN","IBCEF79",143,0)
BPFACTPX ;
"RTN","IBCEF79",144,0)
 Q Z
"RTN","IBCEF79",145,0)
 ;
"RTN","IBCEF79",146,0)
BPPAR(IEN) ; Who is the parent for this Institution?
"RTN","IBCEF79",147,0)
 ; Function returns the IEN to file 4 of the parent institution as defined in File 4
"RTN","IBCEF79",148,0)
 N Z,PIA
"RTN","IBCEF79",149,0)
 D PARENT^XUAF4($NA(PIA),("`"_+IEN),"PARENT FACILITY")    ; DBIA# 2171
"RTN","IBCEF79",150,0)
 S Z=+$O(PIA("P",""))
"RTN","IBCEF79",151,0)
BPPARX ;
"RTN","IBCEF79",152,0)
 Q Z
"RTN","IBCEF79",153,0)
 ;
"RTN","IBCEF79",154,0)
TAX(IBIFN) ; Update default billing provider and service facility taxonomy codes
"RTN","IBCEF79",155,0)
 ; and billing provider secondary IDs and Qualifiers.
"RTN","IBCEF79",156,0)
 ; This is called via new style xrefs to update the default value of these fields
"RTN","IBCEF79",157,0)
 ;
"RTN","IBCEF79",158,0)
 N BPZ,BPTAX,SFTAX,IENS,IBTAXO,IBU3,IBM1,BPID1,BPQL1,BPID2,BPQL2,BPID3,BPQL3
"RTN","IBCEF79",159,0)
 N D,D0,DI,DIQ2,X,Y
"RTN","IBCEF79",160,0)
 ;
"RTN","IBCEF79",161,0)
 I '$G(IBIFN) G TAXQ
"RTN","IBCEF79",162,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=1 G TAXQ      ; claim is not editable
"RTN","IBCEF79",163,0)
 ;
"RTN","IBCEF79",164,0)
 S BPZ=$$B(IBIFN)     ; billing provider/service facility string
"RTN","IBCEF79",165,0)
 ;
"RTN","IBCEF79",166,0)
 ; billing provider taxonomy
"RTN","IBCEF79",167,0)
 S BPTAX=""
"RTN","IBCEF79",168,0)
 I +BPZ S BPTAX=+$P($$TAXORG^XUSTAX(+BPZ),U,2)      ; ien to file 8932.1 for VA billing provider
"RTN","IBCEF79",169,0)
 I 'BPTAX S BPTAX=""
"RTN","IBCEF79",170,0)
 ;
"RTN","IBCEF79",171,0)
 ; service facility taxonomy
"RTN","IBCEF79",172,0)
 S SFTAX=""
"RTN","IBCEF79",173,0)
 I $P(BPZ,U,3)=0,+$P(BPZ,U,4) S SFTAX=+$P($$TAXORG^XUSTAX(+$P(BPZ,U,4)),U,2)     ; ien to file 8932.1 for VA svc fac
"RTN","IBCEF79",174,0)
 I $P(BPZ,U,3)=1,+$P(BPZ,U,4) S SFTAX=+$P($$TAXGET^IBCEP81(+$P(BPZ,U,4)),U,2)    ; ien to file 8932.1 for non-VA svc fac
"RTN","IBCEF79",175,0)
 I 'SFTAX S SFTAX=""
"RTN","IBCEF79",176,0)
 ;
"RTN","IBCEF79",177,0)
 ; billing provider secondary ID#2 and qualifier#2 for each payer on the claim
"RTN","IBCEF79",178,0)
 S BPID1=$$PRVNUM^IBCU(IBIFN,,1)    ; #122
"RTN","IBCEF79",179,0)
 S BPQL1=$$PRVQUAL^IBCU(IBIFN,,1)   ; #128
"RTN","IBCEF79",180,0)
 S BPID2=$$PRVNUM^IBCU(IBIFN,,2)    ; #123
"RTN","IBCEF79",181,0)
 S BPQL2=$$PRVQUAL^IBCU(IBIFN,,2)   ; #129
"RTN","IBCEF79",182,0)
 S BPID3=$$PRVNUM^IBCU(IBIFN,,3)    ; #124
"RTN","IBCEF79",183,0)
 S BPQL3=$$PRVQUAL^IBCU(IBIFN,,3)   ; #130
"RTN","IBCEF79",184,0)
 ;
"RTN","IBCEF79",185,0)
 ; Use FileMan DBS call to update these fields if changes are necessary
"RTN","IBCEF79",186,0)
 S IENS=IBIFN_","
"RTN","IBCEF79",187,0)
 S IBU3=$G(^DGCR(399,IBIFN,"U3"))
"RTN","IBCEF79",188,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCEF79",189,0)
 I SFTAX'=$P(IBU3,U,2) S IBTAXO(399,IENS,243)=SFTAX        ; service facility taxonomy
"RTN","IBCEF79",190,0)
 I BPTAX'=$P(IBU3,U,11) S IBTAXO(399,IENS,252)=BPTAX       ; billing provider taxonomy
"RTN","IBCEF79",191,0)
 I BPID1'=$P(IBM1,U,2) S IBTAXO(399,IENS,122)=BPID1        ; primary ID
"RTN","IBCEF79",192,0)
 I BPQL1'=$P(IBM1,U,10) S IBTAXO(399,IENS,128)=BPQL1       ; primary Qual
"RTN","IBCEF79",193,0)
 I BPID2'=$P(IBM1,U,3) S IBTAXO(399,IENS,123)=BPID2        ; secondary ID
"RTN","IBCEF79",194,0)
 I BPQL2'=$P(IBM1,U,11) S IBTAXO(399,IENS,129)=BPQL2       ; secondary Qual
"RTN","IBCEF79",195,0)
 I BPID3'=$P(IBM1,U,4) S IBTAXO(399,IENS,124)=BPID3        ; tertiary ID
"RTN","IBCEF79",196,0)
 I BPQL3'=$P(IBM1,U,12) S IBTAXO(399,IENS,130)=BPQL3       ; tertiary Qual
"RTN","IBCEF79",197,0)
 ;
"RTN","IBCEF79",198,0)
 I '$D(IBTAXO) G TAXQ    ; no changes necessary
"RTN","IBCEF79",199,0)
 ;
"RTN","IBCEF79",200,0)
 D FILE^DIE(,"IBTAXO")   ; update fields
"RTN","IBCEF79",201,0)
TAXQ ;
"RTN","IBCEF79",202,0)
 Q
"RTN","IBCEF79",203,0)
 ;
"RTN","IBCEF79",204,0)
INSFLGS(IBIFN,COB) ; get insurance company flags for a given claim
"RTN","IBCEF79",205,0)
 ; returns string of flags in the following format:
"RTN","IBCEF79",206,0)
 ; switchback flag ^ send service facility flag ^ institution file address flag ^ error
"RTN","IBCEF79",207,0)
 ; switchback flag: field 36/4.11 or 36/4.12, depending on form type. "-1" if error has occurred.
"RTN","IBCEF79",208,0)
 ; send service facility flag: field 36/4.07, empty if error has occurred or switchback flag is not set.
"RTN","IBCEF79",209,0)
 ; institution file address flag: field 36/4.13, empty if error has occurred or switchback flag is not set.
"RTN","IBCEF79",210,0)
 ; 
"RTN","IBCEF79",211,0)
 N FLGS,FT,INSIEN,INS4
"RTN","IBCEF79",212,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN Q "-1^^^Invalid claim."
"RTN","IBCEF79",213,0)
 I '$D(^DGCR(399,IBIFN,0)) Q "-1^^^Claim doesn't exist."
"RTN","IBCEF79",214,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)    ; current payer sequence default
"RTN","IBCEF79",215,0)
 I '(".1.2.3."[("."_COB_".")) Q "-1^^^Invalid Payer Sequence#: """_COB_"""."
"RTN","IBCEF79",216,0)
 S INSIEN=$$POLICY^IBCEF(IBIFN,1,COB) I 'INSIEN Q "-1^^^No insurance company associated with the claim."
"RTN","IBCEF79",217,0)
 S INS4=$G(^DIC(36,INSIEN,4)),FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF79",218,0)
 S FLGS=$P(INS4,U,$S(FT=2:11,1:12)) I '+FLGS Q FLGS ; we are done if switchback flag is not set
"RTN","IBCEF79",219,0)
 S $P(FLGS,U,2)=$P(INS4,U,7),$P(FLGS,U,3)=$P(INS4,U,13) ; if switchback is set, get the other 2 flags
"RTN","IBCEF79",220,0)
 Q FLGS
"RTN","IBCEF79",221,0)
 ;
"RTN","IBCEF79",222,0)
GETBP(IBIFN,COB,INST,SUB,IBXSAVE) ; Get billing provider data for claim output
"RTN","IBCEF79",223,0)
 ; Used to extract billing provider name, address, and phone# for PRV segment and for CMS-1500, Box 33
"RTN","IBCEF79",224,0)
 ;   IBIFN - claim ien required
"RTN","IBCEF79",225,0)
 ;     COB - payer sequence (optional, defaults to current payer seq)
"RTN","IBCEF79",226,0)
 ;    INST - billing provider VA file 4 ien required
"RTN","IBCEF79",227,0)
 ;     SUB - subscript to use in IBXSAVE local array required
"RTN","IBCEF79",228,0)
 ; IBXSAVE - pass by reference
"RTN","IBCEF79",229,0)
 ;           Returns IBXSAVE(SUB,"NAME")
"RTN","IBCEF79",230,0)
 ;                   IBXSAVE(SUB,"ADDR1")
"RTN","IBCEF79",231,0)
 ;                   IBXSAVE(SUB,"ADDR2")
"RTN","IBCEF79",232,0)
 ;                   IBXSAVE(SUB,"CITY")
"RTN","IBCEF79",233,0)
 ;                   IBXSAVE(SUB,"ST")
"RTN","IBCEF79",234,0)
 ;                   IBXSAVE(SUB,"ZIP")
"RTN","IBCEF79",235,0)
 ;                   IBXSAVE(SUB,"PHONE")
"RTN","IBCEF79",236,0)
 NEW INSFLGS,SWBFLG,BPTP,MAINPTP,IBZ
"RTN","IBCEF79",237,0)
 K IBXSAVE(SUB)
"RTN","IBCEF79",238,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF79",239,0)
 ;
"RTN","IBCEF79",240,0)
 S INSFLGS=$$INSFLGS(IBIFN,COB)           ; all ins co flags
"RTN","IBCEF79",241,0)
 S SWBFLG=(+INSFLGS>0)                    ; main switchback flag
"RTN","IBCEF79",242,0)
 S (BPTP,MAINPTP)=""                      ; initialize vars used only in switchback mode
"RTN","IBCEF79",243,0)
 I SWBFLG D
"RTN","IBCEF79",244,0)
 . S BPTP=$$MAINPRV^IBJPS3                ; main division pay-to provider data string
"RTN","IBCEF79",245,0)
 . S MAINPTP=($P(BPTP,U,10)'["IB177")     ; flag that says whether main div exists as a pay-to
"RTN","IBCEF79",246,0)
 . Q
"RTN","IBCEF79",247,0)
 ;
"RTN","IBCEF79",248,0)
 ; If Switchback is ON and the ins. company parameter Use billing provider VAMC address is not on and
"RTN","IBCEF79",249,0)
 ; main div pay-to exists, then use the pay-to provider data for the main division in the database.
"RTN","IBCEF79",250,0)
 ; This is the "normal" switchback data.
"RTN","IBCEF79",251,0)
 I SWBFLG,'$P(INSFLGS,U,3),MAINPTP D  G GETBPX    ; switchback + billing provider address flag + main ptp exists
"RTN","IBCEF79",252,0)
 . S IBXSAVE(SUB,"NAME")=$P(BPTP,U,1)
"RTN","IBCEF79",253,0)
 . S IBXSAVE(SUB,"ADDR1")=$P(BPTP,U,5)
"RTN","IBCEF79",254,0)
 . S IBXSAVE(SUB,"ADDR2")=$P(BPTP,U,6)
"RTN","IBCEF79",255,0)
 . S IBXSAVE(SUB,"CITY")=$P(BPTP,U,7)
"RTN","IBCEF79",256,0)
 . S IBXSAVE(SUB,"ST")=$P(BPTP,U,8)
"RTN","IBCEF79",257,0)
 . S IBXSAVE(SUB,"ZIP")=$P(BPTP,U,9)
"RTN","IBCEF79",258,0)
 . S IBXSAVE(SUB,"PHONE")=$P(BPTP,U,4)
"RTN","IBCEF79",259,0)
 . Q
"RTN","IBCEF79",260,0)
 ;
"RTN","IBCEF79",261,0)
 ; Special Case:  Switchback is ON, the ins. company parameter Use billing provider VAMC address
"RTN","IBCEF79",262,0)
 ; is not on, but the main division is NOT defined as a Pay-To provider.
"RTN","IBCEF79",263,0)
 ; Get the name from the Institution File, but everything else from the claim's Pay-to provider
"RTN","IBCEF79",264,0)
 I SWBFLG,'$P(INSFLGS,U,3),'MAINPTP D  G GETBPX
"RTN","IBCEF79",265,0)
 . S IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)   ; Inst name
"RTN","IBCEF79",266,0)
 . S IBZ=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCEF79",267,0)
 . S IBXSAVE(SUB,"ADDR1")=$P(IBZ,U,5)
"RTN","IBCEF79",268,0)
 . S IBXSAVE(SUB,"ADDR2")=$P(IBZ,U,6)
"RTN","IBCEF79",269,0)
 . S IBXSAVE(SUB,"CITY")=$P(IBZ,U,7)
"RTN","IBCEF79",270,0)
 . S IBXSAVE(SUB,"ST")=$P(IBZ,U,8)
"RTN","IBCEF79",271,0)
 . S IBXSAVE(SUB,"ZIP")=$P(IBZ,U,9)
"RTN","IBCEF79",272,0)
 . S IBXSAVE(SUB,"PHONE")=$P(IBZ,U,4)
"RTN","IBCEF79",273,0)
 . Q
"RTN","IBCEF79",274,0)
 ;
"RTN","IBCEF79",275,0)
 ; At this point, we want to get the billing provider data from the Institution file
"RTN","IBCEF79",276,0)
 S IBXSAVE(SUB,"NAME")=$$GETFAC^IBCEP8(INST,0,0)
"RTN","IBCEF79",277,0)
 S IBXSAVE(SUB,"ADDR1")=$$GETFAC^IBCEP8(INST,0,1)
"RTN","IBCEF79",278,0)
 S IBXSAVE(SUB,"ADDR2")=$$GETFAC^IBCEP8(INST,0,2)
"RTN","IBCEF79",279,0)
 S IBXSAVE(SUB,"CITY")=$$GETFAC^IBCEP8(INST,0,"3C")
"RTN","IBCEF79",280,0)
 S IBXSAVE(SUB,"ST")=$$GETFAC^IBCEP8(INST,0,"3S")
"RTN","IBCEF79",281,0)
 S IBXSAVE(SUB,"ZIP")=$$GETFAC^IBCEP8(INST,0,"3Z")
"RTN","IBCEF79",282,0)
 S IBXSAVE(SUB,"PHONE")=$$PRVPHONE^IBJPS3(IBIFN)        ; pay-to phone for claim
"RTN","IBCEF79",283,0)
 I SWBFLG,MAINPTP S IBXSAVE(SUB,"PHONE")=$P(BPTP,U,4)   ; switchback: pay-to phone for main division
"RTN","IBCEF79",284,0)
 ;
"RTN","IBCEF79",285,0)
 ; 3/30/09 - new requirement - for locally printed CMS-1500 claims, use the pay-to provider address information - Box 33
"RTN","IBCEF79",286,0)
 I 'SWBFLG,SUB="BOX33" D
"RTN","IBCEF79",287,0)
 . S IBZ=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCEF79",288,0)
 . S IBXSAVE(SUB,"ADDR1")=$P(IBZ,U,5)
"RTN","IBCEF79",289,0)
 . S IBXSAVE(SUB,"ADDR2")=$P(IBZ,U,6)
"RTN","IBCEF79",290,0)
 . S IBXSAVE(SUB,"CITY")=$P(IBZ,U,7)
"RTN","IBCEF79",291,0)
 . S IBXSAVE(SUB,"ST")=$P(IBZ,U,8)
"RTN","IBCEF79",292,0)
 . S IBXSAVE(SUB,"ZIP")=$P(IBZ,U,9)
"RTN","IBCEF79",293,0)
 . Q
"RTN","IBCEF79",294,0)
 ;
"RTN","IBCEF79",295,0)
GETBPX ;
"RTN","IBCEF79",296,0)
 Q
"RTN","IBCEF79",297,0)
 ;
"RTN","IBCEF79",298,0)
SENDSF(IBIFN,COB) ; Send service facility information for the EDI claim?
"RTN","IBCEF79",299,0)
 ; Function value returns 1 (send service facility information) or 0 (don't send it)
"RTN","IBCEF79",300,0)
 ; The only time this function returns 0 is when the pre-patch 400 switchback flag is set, and
"RTN","IBCEF79",301,0)
 ; care was provided at the main division (VAMC) in the database, and the 36,4.07 ins. co. flag is set to NO.
"RTN","IBCEF79",302,0)
 ; This function is used in the EDI claim (segments SUB, SUB2, NPI-16, and NPI-17).
"RTN","IBCEF79",303,0)
 ; IBIFN required
"RTN","IBCEF79",304,0)
 ; COB optional, defaults to current payer sequence
"RTN","IBCEF79",305,0)
 NEW SEND,INSFLGS,IBDIV,MAIN
"RTN","IBCEF79",306,0)
 S SEND=1
"RTN","IBCEF79",307,0)
 I '$G(COB) S COB=$$COBN^IBCEF(IBIFN)       ; current payer sequence default
"RTN","IBCEF79",308,0)
 S INSFLGS=$$INSFLGS(IBIFN,COB)             ; all ins co flags
"RTN","IBCEF79",309,0)
 I +INSFLGS'>0 G SENDSFX                    ; switchback is OFF...get out
"RTN","IBCEF79",310,0)
 ;
"RTN","IBCEF79",311,0)
 I $P($G(^DGCR(399,IBIFN,"U2")),U,10) G SENDSFX    ; if we have a non-VA facility on the claim, always send it
"RTN","IBCEF79",312,0)
 ;
"RTN","IBCEF79",313,0)
 S IBDIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)   ; division on claim
"RTN","IBCEF79",314,0)
 S MAIN=$$MAIN^IBCEP2B()                    ; main division in database
"RTN","IBCEF79",315,0)
 I IBDIV'=MAIN G SENDSFX                    ; care was not provided at the main division - always send it
"RTN","IBCEF79",316,0)
 ;
"RTN","IBCEF79",317,0)
 I $P(INSFLGS,U,2) G SENDSFX                ; ins. co. flag is ON so send it
"RTN","IBCEF79",318,0)
 ;
"RTN","IBCEF79",319,0)
 S SEND=0                                   ; otherwise, do not send service facility data
"RTN","IBCEF79",320,0)
 ;
"RTN","IBCEF79",321,0)
SENDSFX ;
"RTN","IBCEF79",322,0)
 Q SEND
"RTN","IBCEF79",323,0)
 ;
"RTN","IBCEMRAA")
0^36^B59796110^B61798719
"RTN","IBCEMRAA",1,0)
IBCEMRAA ;ALB/DSM - MEDICARE REMITTANCE ADVICE DETAIL-PART A ; 12/29/05 9:57am
"RTN","IBCEMRAA",2,0)
 ;;2.0;INTEGRATED BILLING;**155,323,349,400**;21-MAR-94;Build 52
"RTN","IBCEMRAA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMRAA",4,0)
 ;
"RTN","IBCEMRAA",5,0)
 Q  ; must call an entry point
"RTN","IBCEMRAA",6,0)
 ;
"RTN","IBCEMRAA",7,0)
 ;  This routine prints MRA Report for UB-04 (Part A) Form Type
"RTN","IBCEMRAA",8,0)
 ;
"RTN","IBCEMRAA",9,0)
MRA(IBIFN) ;;Module - Entry point to print ALL MRA reports, for a given IBIFN.
"RTN","IBCEMRAA",10,0)
 ; This entry point doesn't ask for a Bill Number, it must pass IBIFN as Input.
"RTN","IBCEMRAA",11,0)
 ; It will prompt the user for a device.
"RTN","IBCEMRAA",12,0)
 ;
"RTN","IBCEMRAA",13,0)
 ; Input   IBIFN  = ien of Bill Number (required)
"RTN","IBCEMRAA",14,0)
 ;
"RTN","IBCEMRAA",15,0)
 N IBQUIT,IBPGN S IBQUIT=0
"RTN","IBCEMRAA",16,0)
 D ENT1
"RTN","IBCEMRAA",17,0)
 Q  ;MRA
"RTN","IBCEMRAA",18,0)
 ;
"RTN","IBCEMRAA",19,0)
ENT ; Menu Option Entry Point
"RTN","IBCEMRAA",20,0)
 N IBQUIT,IBEOB,IBIFN,FRMTYP,IBPGN
"RTN","IBCEMRAA",21,0)
 S IBQUIT=0
"RTN","IBCEMRAA",22,0)
 D GETBIL I IBQUIT Q   ;ENT
"RTN","IBCEMRAA",23,0)
 ;
"RTN","IBCEMRAA",24,0)
ENT1 ; Prompt for a print device and print MRA Reports
"RTN","IBCEMRAA",25,0)
 D DEV^IBCEMRAX(IBIFN) I IBQUIT Q    ; device handling  ENT1
"RTN","IBCEMRAA",26,0)
 ;
"RTN","IBCEMRAA",27,0)
PROC ; This section must have IBIFN defined
"RTN","IBCEMRAA",28,0)
 ; This section is called as both a foreground and a background process,
"RTN","IBCEMRAA",29,0)
 ; so all write stmts need to consider printing in both cases.
"RTN","IBCEMRAA",30,0)
 N FRMTYP,IEN,IBZDATA,INPAT
"RTN","IBCEMRAA",31,0)
 S IBQUIT=$G(IBQUIT)
"RTN","IBCEMRAA",32,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)    ;Form Type
"RTN","IBCEMRAA",33,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)  ;Inpatient Flag
"RTN","IBCEMRAA",34,0)
 ;
"RTN","IBCEMRAA",35,0)
 ; Get Service Line Level Data from 837 Extract - Make the appropriate call
"RTN","IBCEMRAA",36,0)
 ; based on the Bill's Form Type 3=UB-04  ; 2=CMS-1500
"RTN","IBCEMRAA",37,0)
 D  ;
"RTN","IBCEMRAA",38,0)
 . I FRMTYP=2 D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN) Q
"RTN","IBCEMRAA",39,0)
 . D F^IBCEF("N-UB-04 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEMRAA",40,0)
 ;
"RTN","IBCEMRAA",41,0)
 ; For a given IBIFN, print all MRA's on file for that Bill
"RTN","IBCEMRAA",42,0)
 S IEN=0
"RTN","IBCEMRAA",43,0)
 F  S IEN=$O(^IBM(361.1,"B",IBIFN,IEN)) Q:'IEN  D  I IBQUIT Q
"RTN","IBCEMRAA",44,0)
 . I $P($G(^IBM(361.1,IEN,0)),U,4)'=1 Q  ;not an MRA
"RTN","IBCEMRAA",45,0)
 . D PRNTMRA  ; print an MRA
"RTN","IBCEMRAA",46,0)
 ;
"RTN","IBCEMRAA",47,0)
 ; Force a form feed at end of a printer report
"RTN","IBCEMRAA",48,0)
 I $E(IOST,1,2)'["C-" W @IOF
"RTN","IBCEMRAA",49,0)
 ; Pause on screen before exiting
"RTN","IBCEMRAA",50,0)
 I 'IBQUIT,$E(IOST,1,2)["C-" W ! S DIR("A")="Press RETURN to continue: ",DIR(0)="EA" D ^DIR K DIR
"RTN","IBCEMRAA",51,0)
 ;
"RTN","IBCEMRAA",52,0)
 ; Quit if called from a background process (ZTQUEUED defined)
"RTN","IBCEMRAA",53,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q  ;PROC
"RTN","IBCEMRAA",54,0)
 D ^%ZISC     ; handle device closing before exiting
"RTN","IBCEMRAA",55,0)
 Q   ;PROC
"RTN","IBCEMRAA",56,0)
 ;
"RTN","IBCEMRAA",57,0)
PRNTMRA ; Print a single MRA
"RTN","IBCEMRAA",58,0)
 ; Input IEN - the ien# of EOB file (361.1); Required
"RTN","IBCEMRAA",59,0)
 S IBPGN=0
"RTN","IBCEMRAA",60,0)
 ; Print Part B - CMS-1500
"RTN","IBCEMRAA",61,0)
 I FRMTYP=2 D PRNT^IBCEMRAB Q  ;PRNTMRA
"RTN","IBCEMRAA",62,0)
 ;
"RTN","IBCEMRAA",63,0)
 ; Print Part A - Institutional next
"RTN","IBCEMRAA",64,0)
 ; Claim Level
"RTN","IBCEMRAA",65,0)
 N RSNCD,NCVRCHRG,IBILL,IBILLU,IBCOINS,IBCTADJ,IBEOB,RMKS,IBFD,IBTD,IBDED,CLMADJ
"RTN","IBCEMRAA",66,0)
 I IBPGN>1 D PAUSE^IBCEMRAX I IBQUIT Q  ;pause between EOB reports
"RTN","IBCEMRAA",67,0)
 D CLMDATA,CLMHDR I IBQUIT Q
"RTN","IBCEMRAA",68,0)
 D CLMPRNT
"RTN","IBCEMRAA",69,0)
 ;
"RTN","IBCEMRAA",70,0)
 ; Print Service Line Level Adjustments - check if exist
"RTN","IBCEMRAA",71,0)
 I $D(^IBM(361.1,IEN,15)) D  I IBQUIT Q
"RTN","IBCEMRAA",72,0)
 . I ($Y+4)>IOSL D PAUSE^IBCEMRAX Q:IBQUIT  W @IOF D CLMHDR
"RTN","IBCEMRAA",73,0)
 . D SRVHDR^IBCEMRAX,SRVDATA^IBCEMRAX
"RTN","IBCEMRAA",74,0)
 ;
"RTN","IBCEMRAA",75,0)
 ; Print Disclaimer
"RTN","IBCEMRAA",76,0)
 D DSCLMR^IBCEMRAX
"RTN","IBCEMRAA",77,0)
 Q  ;PRTMRA
"RTN","IBCEMRAA",78,0)
 ;
"RTN","IBCEMRAA",79,0)
GETBIL ; Prompt the user for a Bill#. Get INIFN and IBEOB.
"RTN","IBCEMRAA",80,0)
 ;
"RTN","IBCEMRAA",81,0)
 N DIC,Y W !
"RTN","IBCEMRAA",82,0)
 ; Access Explanation Of Benefits File #361.1
"RTN","IBCEMRAA",83,0)
 ; Screen: only allow access to EOB's of Type = 1 (Medicare MRA)
"RTN","IBCEMRAA",84,0)
 S DIC="^IBM(361.1,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,4)=1"
"RTN","IBCEMRAA",85,0)
 S DIC("W")="D EOBLST^IBCEMU1(Y)"   ; modify generic lister
"RTN","IBCEMRAA",86,0)
 D ^DIC
"RTN","IBCEMRAA",87,0)
 I Y<1!$D(DTOUT)!$D(DUOUT) S IBQUIT=1 Q  ; GETBIL
"RTN","IBCEMRAA",88,0)
 S IBIFN=+$P(Y,U,2)   ; get index to Bill file (#399)
"RTN","IBCEMRAA",89,0)
 Q  ;GETBIL
"RTN","IBCEMRAA",90,0)
 ;
"RTN","IBCEMRAA",91,0)
CLMDATA ; Get MRA Claim Level data of EOB file (#361.1)
"RTN","IBCEMRAA",92,0)
 N I,RCNT,GRPCD,GLVL,GLVLD,RLVL,RLVLD,RCDED,RCOINS,RCTADJ,RCNCVR,RCLMADJ,CLMLVL
"RTN","IBCEMRAA",93,0)
 F I=1:1:5 S @($P($T(TABLE+I),";",3))=$P($T(TABLE+I),";",4)
"RTN","IBCEMRAA",94,0)
 ;
"RTN","IBCEMRAA",95,0)
 ; Get Top Levels of EOB file (#361.1)
"RTN","IBCEMRAA",96,0)
 F I=0,1,3:1:6 S IBEOB(I)=$G(^IBM(361.1,IEN,I))
"RTN","IBCEMRAA",97,0)
 ;
"RTN","IBCEMRAA",98,0)
 ; Get Claim Level Remarks Code from appropriate levels of 361.1 based on
"RTN","IBCEMRAA",99,0)
 ; whether Bill is Outpatient or Inpatient.
"RTN","IBCEMRAA",100,0)
 D  ;
"RTN","IBCEMRAA",101,0)
 . I INPAT S RMKS=IBEOB(5) Q   ; Inpatient remarks code
"RTN","IBCEMRAA",102,0)
 . S RMKS=$P(IBEOB(3),U,3,7)   ; Outpatient remarks code
"RTN","IBCEMRAA",103,0)
 ;
"RTN","IBCEMRAA",104,0)
 ; Get Group Level Data
"RTN","IBCEMRAA",105,0)
 ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAA",106,0)
 ; CLMLVL=Claim Level Flag indicating where the displayed data is coming from
"RTN","IBCEMRAA",107,0)
 ; 1=Claim Level; 0=Line Level
"RTN","IBCEMRAA",108,0)
 ;
"RTN","IBCEMRAA",109,0)
 S (GLVL,RLVL,RCNT,NCVRCHRG,IBDED,IBCOINS,IBCTADJ,CLMADJ,CLMLVL)=0
"RTN","IBCEMRAA",110,0)
 F  S GLVL=$O(^IBM(361.1,IEN,10,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAA",111,0)
 . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAA",112,0)
 . F  S RLVL=$O(^IBM(361.1,IEN,10,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0) D  ;
"RTN","IBCEMRAA",113,0)
 . . S RSNCD=$P(RLVLD,U)
"RTN","IBCEMRAA",114,0)
 . . I GRPCD="PR",RSNCD="AAA" Q   ;exception
"RTN","IBCEMRAA",115,0)
 . . I GRPCD="OA",RSNCD="AB3" Q   ;exception
"RTN","IBCEMRAA",116,0)
 . . I GRPCD="LQ" Q               ;exception
"RTN","IBCEMRAA",117,0)
 . . S RCNT=RCNT+1,RSNCD(RCNT)=RSNCD ;display
"RTN","IBCEMRAA",118,0)
 . . I RCLMADJ[(","_RSNCD_",") S CLMADJ=CLMADJ+$P(RLVLD,U,2),CLMLVL=1 ;Claim Adjustment
"RTN","IBCEMRAA",119,0)
 . . ; Get data from Claim Level: calculate Coinsurance, Contractual Adjustment,
"RTN","IBCEMRAA",120,0)
 . . ; Noncovered Charges and Deductible amounts
"RTN","IBCEMRAA",121,0)
 . . I GRPCD="PR",RCOINS[(","_RSNCD_",") S IBCOINS=$P(RLVLD,U,2),CLMLVL=1 Q
"RTN","IBCEMRAA",122,0)
 . . I GRPCD="PR",RCDED[(","_RSNCD_",") S IBDED=IBDED+$P(RLVLD,U,2),CLMLVL=1 Q
"RTN","IBCEMRAA",123,0)
 . . I GRPCD="CO" D  ;
"RTN","IBCEMRAA",124,0)
 . . . I RCTADJ[(","_RSNCD_",") S IBCTADJ=IBCTADJ+$P(RLVLD,U,2),CLMLVL=1
"RTN","IBCEMRAA",125,0)
 . . . I RCNCVR'[(","_RSNCD_",") S NCVRCHRG=NCVRCHRG+$P(RLVLD,U,2),CLMLVL=1
"RTN","IBCEMRAA",126,0)
 ;
"RTN","IBCEMRAA",127,0)
 ; If no data was found at Claim Level, get data from Line Level
"RTN","IBCEMRAA",128,0)
 I 'CLMLVL D LINELVL^IBCEMRAX
"RTN","IBCEMRAA",129,0)
 S IBILL=$G(^DGCR(399,$P(IBEOB(0),U),0)),IBILLU=$G(^DGCR(399,$P(IBEOB(0),U),"U"))
"RTN","IBCEMRAA",130,0)
 S IBFD=$$FMTE^XLFDT($P(IBILLU,U),5),IBTD=$$FMTE^XLFDT($P(IBILLU,U,2),5)
"RTN","IBCEMRAA",131,0)
 ;
"RTN","IBCEMRAA",132,0)
 Q  ;CLMDATA
"RTN","IBCEMRAA",133,0)
 ;
"RTN","IBCEMRAA",134,0)
CLMHDR ; Print Claim Level Header
"RTN","IBCEMRAA",135,0)
 S IBPGN=IBPGN+1
"RTN","IBCEMRAA",136,0)
 I IBPGN=1,$E(IOST,1,2)["C-" W @IOF  ; refresh terminal screen on 1st hdr
"RTN","IBCEMRAA",137,0)
 ;
"RTN","IBCEMRAA",138,0)
 ; Rows 1 to 3
"RTN","IBCEMRAA",139,0)
 W !,?108,"Medicare-equivalent",!?110,"Remittance Advice",!
"RTN","IBCEMRAA",140,0)
 N PRVDR
"RTN","IBCEMRAA",141,0)
 ;
"RTN","IBCEMRAA",142,0)
 ; gather the pay-to provider information - IB*2*400
"RTN","IBCEMRAA",143,0)
 S PRVDR=$$PRVDATA^IBJPS3($P(IBEOB(0),U,1))
"RTN","IBCEMRAA",144,0)
 ;
"RTN","IBCEMRAA",145,0)
 ; Row 4 to 15
"RTN","IBCEMRAA",146,0)
 W !!!,"DEPT OF VETERANS AFFAIRS"
"RTN","IBCEMRAA",147,0)
 W !,$P(PRVDR,U,5),?103,"PROVIDER #:",?117,$P($G(^IBE(350.9,1,1)),U,5) ;Tax ID
"RTN","IBCEMRAA",148,0)
 W !,$P(PRVDR,U,6),?103,"PAGE #:",?117,$J(IBPGN,3)
"RTN","IBCEMRAA",149,0)
 W !,$P(PRVDR,U,7),", ",$P(PRVDR,U,8)," ",$P(PRVDR,U,9),?103,"DATE: ",?117,$$FMTE^XLFDT($P(IBEOB(0),U,6),5)
"RTN","IBCEMRAA",150,0)
 W !!,"PATIENT NAME",?24,"PATIENT CNTRL NUMBER",?48,"RC",?52,"REM",?58,"DRG#",?72,"DRG OUT AMT"
"RTN","IBCEMRAA",151,0)
 W ?86,"COINSURANCE",?100,"PAT REFUND",?115,"CONTRACT ADJ"
"RTN","IBCEMRAA",152,0)
 W !,"HIC NUMBER",?24,"ICN NUMBER",?48,"RC",?52,"REM",?58,"OUTCD CAPCD",?72,"DRG CAP AMT"
"RTN","IBCEMRAA",153,0)
 W ?86,"COVD CHGS",?100,"ESRD NET ADJ",?115,"PER DIEM RTE"
"RTN","IBCEMRAA",154,0)
 W !,"FROM DT    THRU DT",?24,"NACHG  HICHG  TOB",?48,"RC",?52,"REM",?58,"PROF COMP",?72,"MSP PAYMT"
"RTN","IBCEMRAA",155,0)
 W ?86,"NCOVD CHGS",?100,"INTEREST",?115,"PROC CD AMT"
"RTN","IBCEMRAA",156,0)
 W !,"CLM STATUS",?24,"COST  COVDY  NCOVDY",?48,"RC",?52,"REM",?58,"DRG AMT",?72,"DEDUCTIBLES"
"RTN","IBCEMRAA",157,0)
 W ?86,"DENIED CHGS",?100,"CLAIM ADJ",?115,"NET REIMB",!
"RTN","IBCEMRAA",158,0)
 Q  ;CLMHDR
"RTN","IBCEMRAA",159,0)
 ;
"RTN","IBCEMRAA",160,0)
CLMPRNT ; - Print Claim Level part of the Report
"RTN","IBCEMRAA",161,0)
 N PTNM,PTLEN,HIC
"RTN","IBCEMRAA",162,0)
 ; ROW 16
"RTN","IBCEMRAA",163,0)
 ; format and standardize patient name for display
"RTN","IBCEMRAA",164,0)
 S PTNM("FILE")=2,PTNM("IENS")=$P(IBILL,U,2),PTNM("FIELD")=.01,PTLEN=23
"RTN","IBCEMRAA",165,0)
 S PTNM=$$BLDNAME^XLFNAME(.PTNM,PTLEN)
"RTN","IBCEMRAA",166,0)
 I $P(IBEOB(6),U,1)'="" S PTNM=$E($P(IBEOB(6),U,1),1,PTLEN)
"RTN","IBCEMRAA",167,0)
 W !,PTNM
"RTN","IBCEMRAA",168,0)
 ; Account # (Bill #)
"RTN","IBCEMRAA",169,0)
 W ?24,$P($$SITE^VASITE,U,3),"-",$P(IBILL,U)
"RTN","IBCEMRAA",170,0)
 ; Reason Code,Remarks Code 1
"RTN","IBCEMRAA",171,0)
 W ?48,$G(RSNCD(1)),?52,$P(RMKS,U,1)
"RTN","IBCEMRAA",172,0)
 ; DRG Code Used
"RTN","IBCEMRAA",173,0)
 W ?58,$P(IBEOB(0),U,10)
"RTN","IBCEMRAA",174,0)
 ; Coinsurance, Contract Adjustment
"RTN","IBCEMRAA",175,0)
 W ?86,$J($G(IBCOINS),11,2),?115,$J($G(IBCTADJ),11,2)
"RTN","IBCEMRAA",176,0)
 ; ROW 17
"RTN","IBCEMRAA",177,0)
 ; HIC & ICN
"RTN","IBCEMRAA",178,0)
 S HIC=$S($P(IBEOB(6),U,2)'="":$P(IBEOB(6),U,2),$$WNRBILL^IBEFUNC(IBIFN,1):$P($G(^DGCR(399,$P(IBEOB(0),U),"I1")),U,2),1:$P($G(^DGCR(399,$P(IBEOB(0),U),"I2")),U,2))
"RTN","IBCEMRAA",179,0)
 W !,HIC,?24,$P(IBEOB(0),U,14)
"RTN","IBCEMRAA",180,0)
 ; Reason Code, Remarks Code 2
"RTN","IBCEMRAA",181,0)
 W ?48,$G(RSNCD(2)),?52,$P(RMKS,U,2)
"RTN","IBCEMRAA",182,0)
 ; covered charges
"RTN","IBCEMRAA",183,0)
 W ?86,$J($P(IBEOB(1),U,3),11,2)
"RTN","IBCEMRAA",184,0)
 ; Outpatient Reimbursement Rate
"RTN","IBCEMRAA",185,0)
 I 'INPAT W ?115,$J($P(IBEOB(3),U,1),11,2)
"RTN","IBCEMRAA",186,0)
 ; ROW 18
"RTN","IBCEMRAA",187,0)
 W !,IBFD,?12,IBTD
"RTN","IBCEMRAA",188,0)
 ; Type of Bill (=Location of Care_Bill Clasification_Frequency)
"RTN","IBCEMRAA",189,0)
 W ?38,$P(IBILL,U,24)_$P($G(^DGCR(399.1,$P(IBILL,U,25),0)),U,2)_$P(IBILL,U,26)
"RTN","IBCEMRAA",190,0)
 ; Reason Code,Remarks Code 3
"RTN","IBCEMRAA",191,0)
 W ?48,$G(RSNCD(3)),?52,$P(RMKS,U,3)
"RTN","IBCEMRAA",192,0)
 ; non-covered amount (Pt Responsibility)
"RTN","IBCEMRAA",193,0)
 W ?86,$J(NCVRCHRG,11,2)
"RTN","IBCEMRAA",194,0)
 ; Interest Amount
"RTN","IBCEMRAA",195,0)
 I $P(IBEOB(1),U,7) W ?100,$J($P(IBEOB(1),U,7),11,2)
"RTN","IBCEMRAA",196,0)
 ; Procedure code amount
"RTN","IBCEMRAA",197,0)
 W ?115,$J($P(IBEOB(3),U,2),11,2)
"RTN","IBCEMRAA",198,0)
 ; ROW 19
"RTN","IBCEMRAA",199,0)
 ; claim status
"RTN","IBCEMRAA",200,0)
 W !?6,$E($P(IBEOB(0),U,21),1,2)
"RTN","IBCEMRAA",201,0)
 ; M-Care Inp Cost Report Day Ct
"RTN","IBCEMRAA",202,0)
 W ?24,$P(IBEOB(4),U,14)
"RTN","IBCEMRAA",203,0)
 ; M-Care Inp Cov. Days/Visit Ct
"RTN","IBCEMRAA",204,0)
 W ?30,$P(IBEOB(4),U,1)
"RTN","IBCEMRAA",205,0)
 ; Medicare Non-Covered Days
"RTN","IBCEMRAA",206,0)
 W ?38,$P(IBEOB(4),U,19)
"RTN","IBCEMRAA",207,0)
 ; Reason Code,Remarks Code 4
"RTN","IBCEMRAA",208,0)
 W ?48,$G(RSNCD(4)),?52,$P(RMKS,U,4)
"RTN","IBCEMRAA",209,0)
 ; M-Care Inp Claim Drg Amt
"RTN","IBCEMRAA",210,0)
 W ?58,$J($P(IBEOB(4),U,3),11,2)
"RTN","IBCEMRAA",211,0)
 ; if Group Code is PR, print the sum of Reason Codes 1 and 66
"RTN","IBCEMRAA",212,0)
 W ?72,$J($G(IBDED),11,2)
"RTN","IBCEMRAA",213,0)
 ; Claim Adjustments
"RTN","IBCEMRAA",214,0)
 W ?100,$J($G(CLMADJ),10,2)
"RTN","IBCEMRAA",215,0)
 ; net reimburse
"RTN","IBCEMRAA",216,0)
 W ?115,$J($P(IBEOB(1),U,1),11,2)
"RTN","IBCEMRAA",217,0)
 ; Row 20
"RTN","IBCEMRAA",218,0)
 ; Reason Code,Remarks Code 5
"RTN","IBCEMRAA",219,0)
 W !?48,$G(RSNCD(5)),?52,$P(RMKS,U,5)
"RTN","IBCEMRAA",220,0)
 ;
"RTN","IBCEMRAA",221,0)
 Q  ; CLMPRNT
"RTN","IBCEMRAA",222,0)
TABLE ;;variable;list of Reason Codes w/leading & trailing commas; description;
"RTN","IBCEMRAA",223,0)
 ;;RCDED;,1,66,;reason code to calc deductible amount;
"RTN","IBCEMRAA",224,0)
 ;;RCOINS;,2,;reason code to calc coinsurance amount;
"RTN","IBCEMRAA",225,0)
 ;;RCTADJ;,A2,;reason codes to calc contract adjustment amount;
"RTN","IBCEMRAA",226,0)
 ;;RCNCVR;,1,2,23,42,45,66,70,71,89,94,97,118,A1,A2,B3,B6,;reason codes excluded from calc of noncovered charges amount;
"RTN","IBCEMRAA",227,0)
 ;;RCLMADJ;,42,45,70,94,97,122,A1,;reason codes to calc claim adj
"RTN","IBCEMRAA",228,0)
 ;
"RTN","IBCEMRAB")
0^37^B48715323^B52118593
"RTN","IBCEMRAB",1,0)
IBCEMRAB ;ALB/DSM - MEDICARE REMITTANCE ADVICE DETAIL-PART B ; 12/29/05 9:58am
"RTN","IBCEMRAB",2,0)
 ;;2.0;INTEGRATED BILLING;**155,323,349,400**;21-MAR-94;Build 52
"RTN","IBCEMRAB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMRAB",4,0)
 ;
"RTN","IBCEMRAB",5,0)
 Q  ; this routine must be called at an entry point
"RTN","IBCEMRAB",6,0)
 ;
"RTN","IBCEMRAB",7,0)
 ;  This routine prints MRA Report for CMS-1500 (Part B) Form Type
"RTN","IBCEMRAB",8,0)
PRNT ;
"RTN","IBCEMRAB",9,0)
 ; Claim Level Adjustments
"RTN","IBCEMRAB",10,0)
 N DIC,Y,IBEOB,IBILL,IBILLU,IBTD,IBFD,TOT,PRFRMID
"RTN","IBCEMRAB",11,0)
 D GDATA,HDR
"RTN","IBCEMRAB",12,0)
 ;
"RTN","IBCEMRAB",13,0)
 ; Initialize Totals
"RTN","IBCEMRAB",14,0)
 S (TOT("ALWD"),TOT("SRVDED"),TOT("SRVCOIN"),TOT("SRVADJ"),TOT("PAID"))=0
"RTN","IBCEMRAB",15,0)
 ;
"RTN","IBCEMRAB",16,0)
 ; Service Line Level Adjustments
"RTN","IBCEMRAB",17,0)
 I $D(^IBM(361.1,IEN,15)) D SRVPRNT I IBQUIT Q
"RTN","IBCEMRAB",18,0)
 ;
"RTN","IBCEMRAB",19,0)
 ; Print Totals Line
"RTN","IBCEMRAB",20,0)
 D TOTAL
"RTN","IBCEMRAB",21,0)
 ;
"RTN","IBCEMRAB",22,0)
 ; Print Disclaimer
"RTN","IBCEMRAB",23,0)
 D DSCLMR^IBCEMRAX
"RTN","IBCEMRAB",24,0)
 ;
"RTN","IBCEMRAB",25,0)
 Q  ;PRNT
"RTN","IBCEMRAB",26,0)
 ;
"RTN","IBCEMRAB",27,0)
GDATA ; Get MRA data
"RTN","IBCEMRAB",28,0)
 ;
"RTN","IBCEMRAB",29,0)
 N I
"RTN","IBCEMRAB",30,0)
 F I=0,1,2,3,6 S IBEOB(I)=$G(^IBM(361.1,IEN,I))
"RTN","IBCEMRAB",31,0)
 S IBILL=$G(^DGCR(399,$P(IBEOB(0),U),0)),IBILLU=$G(^DGCR(399,$P(IBEOB(0),U),"U"))
"RTN","IBCEMRAB",32,0)
 S IBTD=$$FMTE^XLFDT($P(IBILLU,U),5),IBFD=$$FMTE^XLFDT($P(IBILLU,U,2),5)
"RTN","IBCEMRAB",33,0)
 Q  ;GDATA
"RTN","IBCEMRAB",34,0)
 ;
"RTN","IBCEMRAB",35,0)
HDR ; Print Header
"RTN","IBCEMRAB",36,0)
 I $E(IOST,1,2)["C-" W @IOF
"RTN","IBCEMRAB",37,0)
 S IBPGN=IBPGN+1
"RTN","IBCEMRAB",38,0)
 ;
"RTN","IBCEMRAB",39,0)
 ; Row 1,2,3
"RTN","IBCEMRAB",40,0)
 W !,?102,"Medicare-equivalent",!?104,"Remittance Advice",!
"RTN","IBCEMRAB",41,0)
 ; Row 7
"RTN","IBCEMRAB",42,0)
 W !!!!,"DEPT OF VETERANS AFFAIRS"
"RTN","IBCEMRAB",43,0)
 ;
"RTN","IBCEMRAB",44,0)
 N PRVDR,LINE,PTNM,PTLEN,RMKS,HIC
"RTN","IBCEMRAB",45,0)
 ;
"RTN","IBCEMRAB",46,0)
 ; gather the pay-to provider information - IB*2*400
"RTN","IBCEMRAB",47,0)
 S PRVDR=$$PRVDATA^IBJPS3($P(IBEOB(0),U,1))
"RTN","IBCEMRAB",48,0)
 ;
"RTN","IBCEMRAB",49,0)
 ; Row 8
"RTN","IBCEMRAB",50,0)
 W !,$P(PRVDR,U,5),?97,"PROVIDER #:",?111,"VA0"_$P($$SITE^VASITE,U,3)
"RTN","IBCEMRAB",51,0)
 ; Row 9
"RTN","IBCEMRAB",52,0)
 W !,$P(PRVDR,U,6),?97,"PAGE #:",?111,$J(IBPGN,3)
"RTN","IBCEMRAB",53,0)
 ; Row 10
"RTN","IBCEMRAB",54,0)
 W !,$P(PRVDR,U,7),", ",$P(PRVDR,U,8)," ",$P(PRVDR,U,9),?97,"DATE:",?111,$$FMTE^XLFDT($P(IBEOB(0),U,6),5)
"RTN","IBCEMRAB",55,0)
 ; Row 14
"RTN","IBCEMRAB",56,0)
 W !!!!,"PERF PROV",?12,"SERV DATE",?25,"POS",?29,"NOS",?34,"PROC",?40,"MODS",?53,"BILLED",?63,"ALLOWED",?75,"DEDUCT"
"RTN","IBCEMRAB",57,0)
 W ?87,"COINS",?93,"GRP-RC",?107,"AMT",?114,"PROV PD"
"RTN","IBCEMRAB",58,0)
 ; Row 15
"RTN","IBCEMRAB",59,0)
 S $P(LINE,"-",122)="" W !,LINE
"RTN","IBCEMRAB",60,0)
 ;
"RTN","IBCEMRAB",61,0)
 ; format and standardize patient name for display
"RTN","IBCEMRAB",62,0)
 S PTNM("FILE")=2,PTNM("IENS")=$P(IBILL,U,2),PTNM("FIELD")=.01,PTLEN=23
"RTN","IBCEMRAB",63,0)
 S PTNM=$$BLDNAME^XLFNAME(.PTNM,PTLEN)
"RTN","IBCEMRAB",64,0)
 I $P(IBEOB(6),U,1)'="" S PTNM=$E($P(IBEOB(6),U,1),1,PTLEN)
"RTN","IBCEMRAB",65,0)
 ;
"RTN","IBCEMRAB",66,0)
 S HIC=$S($P(IBEOB(6),U,2)'="":$P(IBEOB(6),U,2),$$WNRBILL^IBEFUNC(IBIFN,1):$P($G(^DGCR(399,$P(IBEOB(0),U),"I1")),U,2),1:$P($G(^DGCR(399,$P(IBEOB(0),U),"I2")),U,2))
"RTN","IBCEMRAB",67,0)
 ; Row 17
"RTN","IBCEMRAB",68,0)
 ; Patient Name, HIC, ACNT, ICN, ASG
"RTN","IBCEMRAB",69,0)
 W !!,"NAME",?7,PTNM,?31,"HIC",?35,HIC
"RTN","IBCEMRAB",70,0)
 W ?49,"ACNT",?54,$P($$SITE^VASITE,U,3),"-",$P(IBILL,U),?76,"ICN",?80,$P(IBEOB(0),U,14)
"RTN","IBCEMRAB",71,0)
 W ?97,"ASG",?101,$S($P(IBILLU,U,6):"Y",1:"N")
"RTN","IBCEMRAB",72,0)
 ;
"RTN","IBCEMRAB",73,0)
 ; MOA: Medicare Outpatient Remarks Code
"RTN","IBCEMRAB",74,0)
 S RMKS=$P(IBEOB(3),U,3,7) I RMKS="" S RMKS="^^^^"
"RTN","IBCEMRAB",75,0)
 W ?104,"MOA   " I RMKS'?1."^" W $P(RMKS,U,1)," ",$P(RMKS,U,2)
"RTN","IBCEMRAB",76,0)
 I $P(RMKS,U,3,5)'?1."^" S RMKS=$TR(RMKS,U," ") W !,RMKS
"RTN","IBCEMRAB",77,0)
 ; Secondary Performing Provider ID
"RTN","IBCEMRAB",78,0)
 ; On CMS-1500 Form Type reports, If Medicare WNR is Primary or Secondary, then set Performing Provider ID
"RTN","IBCEMRAB",79,0)
 I $$WNRBILL^IBEFUNC(IBIFN,1)!$$WNRBILL^IBEFUNC(IBIFN,2) S PRFRMID="V"_$$MCRSPEC^IBCEU4(IBIFN,1)_$P($$SITE^VASITE,U,3)
"RTN","IBCEMRAB",80,0)
 Q  ;HDR
"RTN","IBCEMRAB",81,0)
 ;
"RTN","IBCEMRAB",82,0)
SRVPRNT ; Print Service Level Data of EOB file (#361.1 Level 15)
"RTN","IBCEMRAB",83,0)
 ;
"RTN","IBCEMRAB",84,0)
 N LNLVL,RLVL,RLVLD,LNLVLD,SRVFDT,SRVTDT,UNIT,PRCD,MOD,I
"RTN","IBCEMRAB",85,0)
 N ALWD,GLVL,GLVLD,GRPCD,OPRCD,PAID,RCNT,SRMKS,SRVCOIN
"RTN","IBCEMRAB",86,0)
 N SRVDED,SRVADJ,SRVCHRG,SRVDT,CLMLN,Z
"RTN","IBCEMRAB",87,0)
 ;
"RTN","IBCEMRAB",88,0)
 ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAB",89,0)
 S LNLVL=0
"RTN","IBCEMRAB",90,0)
 F  S LNLVL=$O(^IBM(361.1,IEN,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D  I IBQUIT Q
"RTN","IBCEMRAB",91,0)
 . I ($Y+4)>IOSL D  I IBQUIT Q
"RTN","IBCEMRAB",92,0)
 . . D PAUSE^IBCEMRAX I IBQUIT Q
"RTN","IBCEMRAB",93,0)
 . . W @IOF D HDR
"RTN","IBCEMRAB",94,0)
 . ; From Service Date, To Service Date
"RTN","IBCEMRAB",95,0)
 . S SRVFDT=$P(LNLVLD,U,16),SRVTDT=$P(LNLVLD,U,17)
"RTN","IBCEMRAB",96,0)
 . S SRVFDT=$$FMTE^XLFDT(SRVFDT,5),SRVTDT=$$FMTE^XLFDT(SRVTDT,5)
"RTN","IBCEMRAB",97,0)
 . ; Get Units, Procedure Code, Original Procedure Code
"RTN","IBCEMRAB",98,0)
 . S UNIT=$P(LNLVLD,U,11),PRCD=$P(LNLVLD,U,4),OPRCD=$P(LNLVLD,U,15)
"RTN","IBCEMRAB",99,0)
 . S PAID=$P(LNLVLD,U,3),TOT("PAID")=TOT("PAID")+PAID    ; Provider Paid Amount
"RTN","IBCEMRAB",100,0)
 . S ALWD=$P(LNLVLD,U,13),TOT("ALWD")=TOT("ALWD")+ALWD   ; Allowed Amount
"RTN","IBCEMRAB",101,0)
 . ; Handle Multiple Paid Modifiers from the Service Line Level - string together
"RTN","IBCEMRAB",102,0)
 . K MOD M MOD=^IBM(361.1,IEN,15,LNLVL,2) S MOD="" F I=1:1:4 Q:'$D(MOD(I))  S MOD=MOD_MOD(I,0)
"RTN","IBCEMRAB",103,0)
 . ; Calculate Submitted Service Line Charge
"RTN","IBCEMRAB",104,0)
 . S CLMLN=$P(LNLVLD,U,12)   ; use to match EOB line # to VistA Bill line#
"RTN","IBCEMRAB",105,0)
 . S SRVCHRG=$P($G(IBZDATA(CLMLN)),U,8)*$P($G(IBZDATA(CLMLN)),U,9)
"RTN","IBCEMRAB",106,0)
 . ; Service Line Level Remarks Codes
"RTN","IBCEMRAB",107,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IEN,15,LNLVL,4,Z)) Q:'Z  I $G(^(Z,0))'="" S SRMKS(Z)=$P(^(0),U,2)
"RTN","IBCEMRAB",108,0)
 . ; Get Service Level Group Code/Reason Code Data
"RTN","IBCEMRAB",109,0)
 . S (SRVDED,GLVL,RCNT,SRVCOIN)=0 K RSNCD
"RTN","IBCEMRAB",110,0)
 . F  S GLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAB",111,0)
 . . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAB",112,0)
 . . F  S RLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0),RSNCD=$P(RLVLD,U) D  ;
"RTN","IBCEMRAB",113,0)
 . . . I GRPCD="PR",RSNCD="AAA" Q  ;exception
"RTN","IBCEMRAB",114,0)
 . . . I GRPCD="OA",RSNCD="AB3" Q  ;exception
"RTN","IBCEMRAB",115,0)
 . . . I GRPCD="LQ" Q              ;exception
"RTN","IBCEMRAB",116,0)
 . . . I GRPCD="PR",RSNCD=1 S SRVDED=SRVDED+$P(RLVLD,U,2),TOT("SRVDED")=TOT("SRVDED")+SRVDED Q  ;deductible
"RTN","IBCEMRAB",117,0)
 . . . I GRPCD="PR",RSNCD=2 S SRVCOIN=$P(RLVLD,U,2),TOT("SRVCOIN")=TOT("SRVCOIN")+SRVCOIN Q  ;coinsurance
"RTN","IBCEMRAB",118,0)
 . . . S SRVADJ=$P(RLVLD,U,2),TOT("SRVADJ")=TOT("SRVADJ")+SRVADJ  ;adjustment
"RTN","IBCEMRAB",119,0)
 . . . S RCNT=RCNT+1,RSNCD(RCNT)=GRPCD_"-"_RSNCD_U_SRVADJ
"RTN","IBCEMRAB",120,0)
 . ; Performing Provider ID
"RTN","IBCEMRAB",121,0)
 . W !,$G(PRFRMID)
"RTN","IBCEMRAB",122,0)
 . ; From Date in MMDD (w/leading zero) format
"RTN","IBCEMRAB",123,0)
 . I SRVFDT'="" S SRVDT=$E("00",1,2-$L(+SRVFDT))_+SRVFDT_$E("00",1,2-$L($P(SRVFDT,"/",2)))_$P(SRVFDT,"/",2) W ?12,SRVDT
"RTN","IBCEMRAB",124,0)
 . ; To Date in MMDDYY (w/leading zero) format
"RTN","IBCEMRAB",125,0)
 . I SRVTDT'="" W ?17,$E("00",1,2-$L(+SRVTDT)),+SRVTDT,$E("00",1,2-$L($P(SRVTDT,"/",2))),$P(SRVTDT,"/",2),$E($P(SRVTDT,"/",3),3,4)
"RTN","IBCEMRAB",126,0)
 . ; If To Date is Null, Print From Date with year (if not Null)
"RTN","IBCEMRAB",127,0)
 . I SRVTDT="",SRVFDT'="" W ?17,SRVDT,$E($P(SRVFDT,"/",3),3,4)
"RTN","IBCEMRAB",128,0)
 . ; Place of Service - from 837 Extract from CMS-1500 Service Line Level
"RTN","IBCEMRAB",129,0)
 . W ?25,$P($G(IBZDATA(CLMLN)),U,3)
"RTN","IBCEMRAB",130,0)
 . ; Print Units, Procedure Code Paid, Modifiers, Submitted Line Charge, Allowed Amt, Deductable, Coinsurance
"RTN","IBCEMRAB",131,0)
 . W ?28,UNIT,?34,PRCD,?40,MOD,?49,$J(SRVCHRG,10,2),?60,$J(ALWD,10,2),?71,$J(SRVDED,10,2),?82,$J(SRVCOIN,10,2)
"RTN","IBCEMRAB",132,0)
 . ; Print 1st Line of Group Code-Reason Code, Adjustment Amount, Paid Amount
"RTN","IBCEMRAB",133,0)
 . W ?93,$P($G(RSNCD(1)),U),?100,$J($P($G(RSNCD(1)),U,2),10,2),?111,$J(PAID,10,2)
"RTN","IBCEMRAB",134,0)
 . ; print PRCD Submitted, Remarks if any
"RTN","IBCEMRAB",135,0)
 . I OPRCD'=""!$O(SRMKS(0)) W ! D  ;
"RTN","IBCEMRAB",136,0)
 . . I OPRCD'="" W ?33,"(",OPRCD,")"
"RTN","IBCEMRAB",137,0)
 . . I $O(SRMKS(0)) W ?44,"REM: " S Z=0 F  S Z=$O(SRMKS(Z)) Q:'Z  W SRMKS(Z),$S($O(SRMKS(Z)):",",1:"")
"RTN","IBCEMRAB",138,0)
 . ; Print the rest of Group Code-Reason Code, Reason Code Amount
"RTN","IBCEMRAB",139,0)
 . F I=2:1:RCNT W !?93,$P(RSNCD(I),U),?100,$J($P(RSNCD(I),U,2),10,2)
"RTN","IBCEMRAB",140,0)
 Q  ;SRVPRNT
"RTN","IBCEMRAB",141,0)
 ;
"RTN","IBCEMRAB",142,0)
TOTAL ; Print Totals
"RTN","IBCEMRAB",143,0)
 W !!,"PT RESP ",$J($P($G(IBEOB(1)),U,2),10,2)  ;Patient Responsibility
"RTN","IBCEMRAB",144,0)
 ; Billed Amount, Allowed Amount, Deductable Amount
"RTN","IBCEMRAB",145,0)
 W ?35,"CLAIM TOTAL",?49,$J($P($G(IBEOB(2)),U,4),10,2),?60,$J(TOT("ALWD"),10,2),?71,$J(TOT("SRVDED"),10,2)
"RTN","IBCEMRAB",146,0)
 ; Coinsurance Amount, Adjustment Amount, Paid Amount
"RTN","IBCEMRAB",147,0)
 W ?82,$J(TOT("SRVCOIN"),10,2),?100,$J(TOT("SRVADJ"),10,2),?111,$J(TOT("PAID"),10,2)
"RTN","IBCEMRAB",148,0)
 Q  ;TOTAL
"RTN","IBCEMRAB",149,0)
 ;
"RTN","IBCEP2A")
0^24^B50289544^B43323915
"RTN","IBCEP2A",1,0)
IBCEP2A ;ALB/TMP - EDI UTILITIES for provider ID ;25-APR-01
"RTN","IBCEP2A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348,349,400**;21-MAR-94;Build 52
"RTN","IBCEP2A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP2A",4,0)
 ;
"RTN","IBCEP2A",5,0)
ALT(IBPERF,IBSRC,IBALT,IBINS4,IBPTYP) ; set source level to next higher level 
"RTN","IBCEP2A",6,0)
 ; or set the alternate type and source if performing provider id
"RTN","IBCEP2A",7,0)
 ; alternate type and source exist
"RTN","IBCEP2A",8,0)
 ; IBPERF = 1 if performing provider id is requested
"RTN","IBCEP2A",9,0)
 ; IBINS4 = '4' node of insurance co (file 36)
"RTN","IBCEP2A",10,0)
 ; Pass IBPTYP by reference to get alternate provider id type
"RTN","IBCEP2A",11,0)
 ; Pass IBALT by reference.  Set to 1 if alternate id is to be used next
"RTN","IBCEP2A",12,0)
 ;
"RTN","IBCEP2A",13,0)
 I '$G(IBPERF)!($P(IBINS4,U,3)=1) S IBSRC=IBSRC-1 G ALTQ
"RTN","IBCEP2A",14,0)
 S IBSRC=""
"RTN","IBCEP2A",15,0)
 I '$G(IBALT),$P(IBINS4,U,3)=2,$P(IBINS4,U,10),$P(IBINS4,U,11) S IBALT=1,IBSRC=$P(IBINS4,U,11),IBPTYP=$P(IBINS4,U,10) S:IBPTYP="" IBPTYP=$P(IBINS4,U)
"RTN","IBCEP2A",16,0)
 ;
"RTN","IBCEP2A",17,0)
ALTQ Q IBSRC
"RTN","IBCEP2A",18,0)
 ;
"RTN","IBCEP2A",19,0)
IDSET(IBPTYP,IBINS4,IBPERF,IBSPEC,IBSRC,IBUP) ; set variables for provider id type search
"RTN","IBCEP2A",20,0)
 N Z
"RTN","IBCEP2A",21,0)
 S IBSPEC=$G(^IBE(355.97,+IBPTYP,1))
"RTN","IBCEP2A",22,0)
 S Z=$S($G(IBPERF):2,$P(IBSPEC,U,5):6,$P(IBSPEC,U,6):4,1:2)
"RTN","IBCEP2A",23,0)
 S IBSRC=$P(IBINS4,U,Z),IBUP=$P(IBINS4,U,$S(IBSRC:Z+1,1:0))
"RTN","IBCEP2A",24,0)
 Q
"RTN","IBCEP2A",25,0)
 ;
"RTN","IBCEP2A",26,0)
CAREST(IBIFN) ; Return state file ien of state where care was performed
"RTN","IBCEP2A",27,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEP2A",28,0)
 N STATE,IBU2,NVAFAC,IB0,EVDT,IBDIV,INST
"RTN","IBCEP2A",29,0)
 S STATE=""
"RTN","IBCEP2A",30,0)
 ;
"RTN","IBCEP2A",31,0)
 ; non-VA care
"RTN","IBCEP2A",32,0)
 S IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEP2A",33,0)
 S NVAFAC=+$P(IBU2,U,10)          ; non-VA facility
"RTN","IBCEP2A",34,0)
 I NVAFAC S STATE=+$P($G(^IBA(355.93,NVAFAC,0)),U,7) G CARESTX
"RTN","IBCEP2A",35,0)
 ;
"RTN","IBCEP2A",36,0)
 ; VA care
"RTN","IBCEP2A",37,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEP2A",38,0)
 S EVDT=$P(IB0,U,3)                         ; claim event date
"RTN","IBCEP2A",39,0)
 I 'EVDT S EVDT=DT                          ;   - default today if undefined
"RTN","IBCEP2A",40,0)
 S IBDIV=+$P(IB0,U,22)                      ; division ptr file 40.8
"RTN","IBCEP2A",41,0)
 I 'IBDIV S IBDIV=$$PRIM^VASITE(EVDT)       ;   - default primary division as of event date
"RTN","IBCEP2A",42,0)
 I IBDIV'>0 S IBDIV=$$PRIM^VASITE()         ;   - default main division as of today's date
"RTN","IBCEP2A",43,0)
 S INST=+$$SITE^VASITE(EVDT,IBDIV)          ; division institution ptr file 4
"RTN","IBCEP2A",44,0)
 I INST'>0 S INST=+$$SITE^VASITE(DT,IBDIV)  ;   - default div as of today's date
"RTN","IBCEP2A",45,0)
 I INST'>0 S INST=+$$SITE^VASITE            ;   - default main institution
"RTN","IBCEP2A",46,0)
 S STATE=+$P($G(^DIC(4,INST,0)),U,2)        ; state file ien from Institution file
"RTN","IBCEP2A",47,0)
 ;
"RTN","IBCEP2A",48,0)
CARESTX ;
"RTN","IBCEP2A",49,0)
 Q STATE
"RTN","IBCEP2A",50,0)
 ;
"RTN","IBCEP2A",51,0)
RECALCA(IBIFN) ; Recalculate all performing provider id's on bill IBIFN
"RTN","IBCEP2A",52,0)
 ; IBIFN = ien of bill entry (file 399)
"RTN","IBCEP2A",53,0)
 N IBZ,IBZ0,IBX,IBP,IBSEQ,DA,DIE,DR,DIR,X,Y
"RTN","IBCEP2A",54,0)
 ;
"RTN","IBCEP2A",55,0)
 D EN^DDIOL("THIS FUNCTION HAS BEEN DISABLED",,"!") Q
"RTN","IBCEP2A",56,0)
 ;
"RTN","IBCEP2A",57,0)
 S DA(1)=IBIFN
"RTN","IBCEP2A",58,0)
 I '$D(^XUSEC("IB SUPERVISOR",DUZ)) D EN^DDIOL("YOU ARE NOT AUTHORIZED TO PERFORM THIS FUNCTION",,"!")
"RTN","IBCEP2A",59,0)
 S IBZ=0 F  S IBZ=$O(^DGCR(399,IBIFN,"PRV",IBZ)) Q:'IBZ  S IBP=$G(^(IBZ,0)) I $P(IBP,U,2)'="" D
"RTN","IBCEP2A",60,0)
 . S DA=IBZ
"RTN","IBCEP2A",61,0)
 . F IBZ0=5:1:7 Q:'$G(^DGCR(399,IBIFN,"I"_(IBZ0-4)))  D
"RTN","IBCEP2A",62,0)
 .. S IBSEQ=$$EXPAND^IBTRE(399.0222,.01,+IBP)_" "_$P("PRIMARY^SECONDARY^TERTIARY",U,IBZ0-4)_" PROVIDER ID "
"RTN","IBCEP2A",63,0)
 .. S IBX=$$RECALC(.DA,IBZ0-4,$P(IBP,U,IBZ0),1)
"RTN","IBCEP2A",64,0)
 .. I IBX'="",IBX=$P(IBP,U,IBZ0) D EN^DDIOL(IBSEQ_"NO CHANGE NEEDED",,"!") Q
"RTN","IBCEP2A",65,0)
 .. I IBX'="",IBX'=$P(IBP,U,IBZ0) D  Q
"RTN","IBCEP2A",66,0)
 ... S DR=(IBZ0/100)_"////"_IBX,DIE="^DGCR(399,"_DA(1)_",""PRV""," D ^DIE
"RTN","IBCEP2A",67,0)
 ... D EN^DDIOL(IBSEQ_"CHANGED TO "_IBX,,"!")
"RTN","IBCEP2A",68,0)
 .. D EN^DDIOL(IBSEQ_"NOT FOUND",,"!")
"RTN","IBCEP2A",69,0)
 Q
"RTN","IBCEP2A",70,0)
 ;
"RTN","IBCEP2A",71,0)
RECALC(IBDA,IBSEQ,IBX,IBD) ; Recalculate id #, if possible - called
"RTN","IBCEP2A",72,0)
 ;   from input transforms in subfile 399.0222, fields .05-.07
"RTN","IBCEP2A",73,0)
 ; IBDA = DA array of the provider entry (file 399.0222)
"RTN","IBCEP2A",74,0)
 ; IBSEQ = the numeric COB sequence of the provider id (1-3)
"RTN","IBCEP2A",75,0)
 ; IBX = the current value of the id in the subfile
"RTN","IBCEP2A",76,0)
 ; IBD = flag that if set to 1 will suppress the display text
"RTN","IBCEP2A",77,0)
 ;
"RTN","IBCEP2A",78,0)
 N IBPN,IBZ
"RTN","IBCEP2A",79,0)
 S IBPN=$P($G(^DGCR(399,IBDA(1),"PRV",IBDA,0)),U,2)
"RTN","IBCEP2A",80,0)
 I IBPN="" D:'$G(IBD) EN^DDIOL("   CAN'T CALCULATE WITHOUT A PROVIDER NAME","","?0") G RECALCQ
"RTN","IBCEP2A",81,0)
 S IBZ=$$GETID^IBCEP2(IBDA(1),2,IBPN,IBSEQ)
"RTN","IBCEP2A",82,0)
 I IBZ="" D:'$G(IBD) EN^DDIOL("   ID COULD NOT BE DETERMINED","","?0") G RECALCQ
"RTN","IBCEP2A",83,0)
 D:'$G(IBD) EN^DDIOL("  "_IBZ_$S(IBZ'=IBX:"",1:" (no change)"),"","?0")
"RTN","IBCEP2A",84,0)
 S IBX=IBZ
"RTN","IBCEP2A",85,0)
 ;
"RTN","IBCEP2A",86,0)
RECALCQ Q IBX
"RTN","IBCEP2A",87,0)
 ;
"RTN","IBCEP2A",88,0)
PERFPRV(IBIFN) ; Returns the variable pointer of the 'performing provider'
"RTN","IBCEP2A",89,0)
 ; (attending or rendering) for a bill IBIFN
"RTN","IBCEP2A",90,0)
 N IBP,IBPT,IBQ,Z
"RTN","IBCEP2A",91,0)
 S Z=$$FT^IBCEF(IBIFN),IBPT=$S(Z=2:3,Z=3:4,1:0)
"RTN","IBCEP2A",92,0)
 D GETPRV^IBCEU(IBIFN,IBPT,.IBP)
"RTN","IBCEP2A",93,0)
 Q $P($G(IBP(IBPT,1)),U,3)
"RTN","IBCEP2A",94,0)
 ;
"RTN","IBCEP2A",95,0)
INSPAR(IBIFN,SEQ) ;
"RTN","IBCEP2A",96,0)
 N Z,Z4,Z0
"RTN","IBCEP2A",97,0)
 Q:$G(X)'="??"
"RTN","IBCEP2A",98,0)
 S:'$G(SEQ) SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2A",99,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ)),Z4=$G(^DIC(36,Z,4))
"RTN","IBCEP2A",100,0)
 I Z D
"RTN","IBCEP2A",101,0)
 . D EN^DDIOL(">"_$J("",20)_"-- PERFORMING PROVIDER ID PARAMETERS --",,"!")
"RTN","IBCEP2A",102,0)
 . S Z0=$P("  PRIMARY^SECONDARY^ TERTIARY",U,SEQ)_" INSURANCE: "_$P($G(^DIC(36,Z,0)),U)
"RTN","IBCEP2A",103,0)
 . D EN^DDIOL(">"_$J("",(80-$L(Z0))\2)_Z0,,"!")
"RTN","IBCEP2A",104,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (1500): "_$$EXPAND^IBTRE(36,4.01,+Z4),,"!")
"RTN","IBCEP2A",105,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (UB04): "_$$EXPAND^IBTRE(36,4.02,$P(Z4,U,2)),,"!")
"RTN","IBCEP2A",106,0)
 . D EN^DDIOL(">    Secondary Perf Prov IDs Required: "_$$EXPAND^IBTRE(36,4.03,$P(Z4,U,3)),,"!")
"RTN","IBCEP2A",107,0)
 . D EN^DDIOL(" ",,"!")
"RTN","IBCEP2A",108,0)
 Q
"RTN","IBCEP2A",109,0)
 ;
"RTN","IBCEP2A",110,0)
GETTYP(IBXIEN,IBCOBN,IBFUNC) ; Function returns provider id type for insurance co
"RTN","IBCEP2A",111,0)
 ; with COB of IBCOBN on claim ien IBXIEN in first ^ pc and 1 in second
"RTN","IBCEP2A",112,0)
 ; ^ piece if the id is required
"RTN","IBCEP2A",113,0)
 ; 
"RTN","IBCEP2A",114,0)
 ; IBFUNC=1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER
"RTN","IBCEP2A",115,0)
 ; 
"RTN","IBCEP2A",116,0)
 N A,R,Z,Z0
"RTN","IBCEP2A",117,0)
 S A="",R=0
"RTN","IBCEP2A",118,0)
 S:'$G(IBCOBN)!(IBCOBN>3) IBCOBN=$$COBN^IBCEF(IBXIEN)
"RTN","IBCEP2A",119,0)
 S Z=+$G(^DGCR(399,IBXIEN,"I"_+IBCOBN))
"RTN","IBCEP2A",120,0)
 I Z D
"RTN","IBCEP2A",121,0)
 . S Z0=$$FT^IBCEF(IBXIEN)
"RTN","IBCEP2A",122,0)
 . S A=+$P($G(^DIC(36,Z,4)),U,$S(Z0=2&($G(IBFUNC)=1):4,Z0=2:1,1:2))
"RTN","IBCEP2A",123,0)
 . I A,$G(IBFUNC)'=1 S R=$P($G(^DIC(36,Z,4)),U,3),R=$S('R:0,R=3:1,R=1:Z0=2,R=2:Z0=3,1:0)
"RTN","IBCEP2A",124,0)
 . I A,$G(IBFUNC)=1 S R=+$P($G(^DIC(36,Z,4)),U,5),R=$S('R:0,Z0'=2:0,1:1)
"RTN","IBCEP2A",125,0)
 Q A_U_R
"RTN","IBCEP2A",126,0)
 ;
"RTN","IBCEP2A",127,0)
UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IBCU,IBT) ; Match most-least specific
"RTN","IBCEP2A",128,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",129,0)
 ;
"RTN","IBCEP2A",130,0)
 ; Start in file 355.9 (Specific Provider)
"RTN","IBCEP2A",131,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2A",132,0)
 ;
"RTN","IBCEP2A",133,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",134,0)
 S IBID=""
"RTN","IBCEP2A",135,0)
 S IBX=$P($G(^IBA(355.9,+IBCU,0)),U,3) S:"0"[IBX IBX="*N/A*"
"RTN","IBCEP2A",136,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",137,0)
 ;
"RTN","IBCEP2A",138,0)
 ; Match all elements
"RTN","IBCEP2A",139,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",140,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",141,0)
 ;
"RTN","IBCEP2A",142,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",143,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",144,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",145,0)
 ;
"RTN","IBCEP2A",146,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",147,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",148,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",149,0)
 ;
"RTN","IBCEP2A",150,0)
 ; Match both form types, both I/O element or Rx
"RTN","IBCEP2A",151,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",152,0)
 ;
"RTN","IBCEP2A",153,0)
UNIQ1Q Q IBID
"RTN","IBCEP2A",154,0)
 ;
"RTN","IBCEP2A",155,0)
UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IBCU,IBT) ; Match on most-least specific
"RTN","IBCEP2A",156,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",157,0)
 ;
"RTN","IBCEP2A",158,0)
 ; Start in file 355.91 (Specific Insurance)
"RTN","IBCEP2A",159,0)
 ;
"RTN","IBCEP2A",160,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",161,0)
 S IBID="" S:"0"[$G(IBUNIT) IBUNIT="*N/A*"
"RTN","IBCEP2A",162,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",163,0)
 ;
"RTN","IBCEP2A",164,0)
 ; Match all elements
"RTN","IBCEP2A",165,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",166,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",167,0)
 ;
"RTN","IBCEP2A",168,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",169,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",170,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",171,0)
 ;
"RTN","IBCEP2A",172,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",173,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",174,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",175,0)
 ;
"RTN","IBCEP2A",176,0)
 ; Match both form types, both I/O elements or Rx
"RTN","IBCEP2A",177,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",178,0)
 ;
"RTN","IBCEP2A",179,0)
UNIQ2Q Q IBID
"RTN","IBCEP2A",180,0)
 ;
"RTN","IBCEP2B")
0^21^B52920482^B49897444
"RTN","IBCEP2B",1,0)
IBCEP2B ;ALB/TMP - EDI UTILITIES for provider ID ;18-MAY-04
"RTN","IBCEP2B",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320,400**;21-MAR-94;Build 52
"RTN","IBCEP2B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP2B",4,0)
 ;
"RTN","IBCEP2B",5,0)
PROVID(IBIFN,IBPRIEN,IBCOBN,DIPA) ; Provider id entry on billing screen 8
"RTN","IBCEP2B",6,0)
 ; IBIFN = ien file 399
"RTN","IBCEP2B",7,0)
 ; IBPRIEN = ien file 399.0222
"RTN","IBCEP2B",8,0)
 ; IBCOBN = the COB number of the id being edited
"RTN","IBCEP2B",9,0)
 ; DIPA = passed by ref, returned with id data
"RTN","IBCEP2B",10,0)
 ; DIPA("EDIT")=-1 if no id editing  = 1 if edit id   = 2 if stuff id
"RTN","IBCEP2B",11,0)
 ; DIPA("PRID")= id to stuff   DIPA("PRIDT")= id type to stuff
"RTN","IBCEP2B",12,0)
 N PRN0,Z
"RTN","IBCEP2B",13,0)
 Q:'$G(^DGCR(399,IBIFN,"I1"))
"RTN","IBCEP2B",14,0)
 S PRN0=$G(^DGCR(399,IBIFN,"PRV",IBPRIEN,0))
"RTN","IBCEP2B",15,0)
 S DIPA("EDIT")=1,(DIPA("PRID"),DIPA("PRIDT"))=""
"RTN","IBCEP2B",16,0)
 W @IOF
"RTN","IBCEP2B",17,0)
 W !,?19,"**** SECONDARY PERFORMING PROVIDER IDs ****"
"RTN","IBCEP2B",18,0)
 W !!,$P("PRIMARY^SECONDARY^TERTIARY",U,IBCOBN)_" INSURANCE CO: "_$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_IBCOBN)),0)),U)
"RTN","IBCEP2B",19,0)
 W !,"PROVIDER: "_$$EXTERNAL^DILFD(399.0222,.02,"",$P(PRN0,U,2))_" ("_$$EXTERNAL^DILFD(399.0222,.01,"",+PRN0)_")",!
"RTN","IBCEP2B",20,0)
 ;
"RTN","IBCEP2B",21,0)
 I $P(PRN0,U,4+IBCOBN)="" K DIPA("PRID"),DIPA("PRIDT") D NEWID(IBIFN,IBPRIEN,IBCOBN,.DIPA) ; No id currently exists for the ins seq/prov
"RTN","IBCEP2B",22,0)
 ;
"RTN","IBCEP2B",23,0)
 Q
"RTN","IBCEP2B",24,0)
 ;
"RTN","IBCEP2B",25,0)
NEWID(IBIFN,IBPRIEN,IBCOBN,DIPA) ;
"RTN","IBCEP2B",26,0)
 N IBDEF,IBCT,IBNUM,IBINS,IBFRM,IBCAR,IBARR,IBARRS,IB0,IBM,IBQUIT,IBSEL,PRN,PRT,PRN,PRN0,DIR,X,Y,Z,Z0,IBZ,IBZ1,IBTYP,IBREQ,IBREQT,IBTYPN,IBID,IBUSED
"RTN","IBCEP2B",27,0)
 S IBREQ=0,IBREQT=""
"RTN","IBCEP2B",28,0)
 S PRN0=$G(^DGCR(399,IBIFN,"PRV",IBPRIEN,0))
"RTN","IBCEP2B",29,0)
 S Z(IBCOBN)=$S($G(DIPA("I"_IBCOBN)):$$GETTYP^IBCEP2A(IBIFN,IBCOBN,$P(PRN0,U)),1:"")
"RTN","IBCEP2B",30,0)
 S IBINS=+$G(^DGCR(399,IBIFN,"I"_IBCOBN)),IB0=$G(^DGCR(399,IBIFN,"PRV",IBPRIEN,0))
"RTN","IBCEP2B",31,0)
 S IBCAR=$$INPAT^IBCEF(IBIFN),IBCAR=$S('IBCAR:2,1:1)
"RTN","IBCEP2B",32,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=2:2,1:1)
"RTN","IBCEP2B",33,0)
 I $P(Z(IBCOBN),U) D
"RTN","IBCEP2B",34,0)
 . W !,"INS. COMPANY'S DEFAULT SECONDARY ID TYPE IS: "_$$EXTERNAL^DILFD(36,4.01,"",$P(Z(IBCOBN),U)) S IBREQT=+Z(IBCOBN)
"RTN","IBCEP2B",35,0)
 . I $P(Z(IBCOBN),U,2) W !,?2," AND IS REQUIRED TO BE ENTERED FOR THIS CLAIM" S IBREQ=1
"RTN","IBCEP2B",36,0)
 I $$CUNEED^IBCEP3(IBIFN,IBCOBN) W !,"CARE UNITS ARE DEFINED"_$S($P($G(^DIC(36,IBINS,4)),U,9)'="":" AS "_$P(^(4),U,9),1:"")_" FOR THESE IDs"
"RTN","IBCEP2B",37,0)
 D PRACT^IBCEF71(IBINS,IBFRM,IBCAR,$P(IB0,U,2),.IBARR,$P(IB0,U),$S($$COBN^IBCEF(IBIFN)=IBCOBN:"C",1:"O"),355.9,1)
"RTN","IBCEP2B",38,0)
 S (IBNUM,IBCT)=0,IBDEF=""
"RTN","IBCEP2B",39,0)
 I $O(IBARR(""))="" S IBCT=IBCT+1,DIR("A",IBCT)="NO SECONDARY IDS ARE DEFINED FOR THIS PROV THAT ARE VALID FOR THIS CLAIM"
"RTN","IBCEP2B",40,0)
 S IBCT=IBCT+1,DIR("A",IBCT)="SELECT A SECONDARY ID OR ACTION FROM THE LIST BELOW: ",IBCT=IBCT+1,DIR("A",IBCT)=" "
"RTN","IBCEP2B",41,0)
 ;
"RTN","IBCEP2B",42,0)
 S IBCT=IBCT+1,IBNUM=IBNUM+1,DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  NO SECONDARY ID NEEDED",IBNUM=IBNUM+1,IBCT=IBCT+1,DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  ADD AN ID FOR THIS CLAIM ONLY"
"RTN","IBCEP2B",43,0)
 I $O(IBARR(""))="" S IBDEF=1,DIPA("EDIT")=$$SELID(.DIR,IBDEF,.IBID,.DIPA,IBNUM) Q
"RTN","IBCEP2B",44,0)
 ;
"RTN","IBCEP2B",45,0)
 S PRN=$$GETID^IBCEP2(IBIFN,2,$P(PRN0,U,2),IBCOBN,.PRT,,$P(PRN0,U)),IBDEF=""
"RTN","IBCEP2B",46,0)
 ;
"RTN","IBCEP2B",47,0)
 I PRN'="",PRT D
"RTN","IBCEP2B",48,0)
 . N PRT1
"RTN","IBCEP2B",49,0)
 . S PRT1=$P($G(^IBE(355.97,+PRT,0)),U)
"RTN","IBCEP2B",50,0)
 . I $P($G(^IBE(355.97,+PRT,1)),U,3) S PRT1="ST LIC("_$P($G(^DIC(5,+$$CAREST^IBCEP2A(IBIFN),0)),U,2)_")"
"RTN","IBCEP2B",51,0)
 . S IBCT=IBCT+1,IBNUM=IBNUM+1
"RTN","IBCEP2B",52,0)
 . S DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  "_$E("<DEFAULT> "_PRN_$J("",29),1,29)_"  "_$E(PRT1_$J("",15),1,15)
"RTN","IBCEP2B",53,0)
 . S DIR("A",IBCT)=DIR("A",IBCT)_"  "_$S($P(PRT,U,3)'["355.9":"",$P($G(^IBA(+$P(PRT,U,3),+$P(PRT,U,2),0)),U,3)'="":$$EXTERNAL^DILFD(355.9,.03,"",$P($G(^IBA(+$P(PRT,U,3),+$P(PRT,U,2),0)),U,3)),1:"")
"RTN","IBCEP2B",54,0)
 . S IBID(IBNUM)=PRN_U_+PRT,IBDEF=IBNUM,IBID(IBNUM,1)=DIR("A",IBCT),IBDEF=IBNUM,IBDEF("IEN")=$P(PRT,U,2,3)
"RTN","IBCEP2B",55,0)
 . S IBUSED(PRT,PRN,0)=""
"RTN","IBCEP2B",56,0)
 ;
"RTN","IBCEP2B",57,0)
 S IBQUIT=0,IBSEL=1
"RTN","IBCEP2B",58,0)
 ; Sort ids by id type
"RTN","IBCEP2B",59,0)
 S IBZ="" F  S IBZ=$O(IBARR(IBZ)) Q:IBZ=""  S IBZ1="" F  S IBZ1=$O(IBARR(IBZ,IBZ1)) Q:IBZ1=""  D
"RTN","IBCEP2B",60,0)
 . S IBTYP=+$P(IBARR(IBZ,IBZ1),U,9)
"RTN","IBCEP2B",61,0)
 . I $P(IBARR(IBZ,IBZ1),U,4)]"" Q:$D(IBUSED(IBTYP,$P(IBARR(IBZ,IBZ1),U,4),+$P(IBARR(IBZ,IBZ1),U,7)))
"RTN","IBCEP2B",62,0)
 . I $P($G(IBDEF("IEN")),U,2)["355.9",$P(IBARR(IBZ,IBZ1),U,8),$P(IBARR(IBZ,IBZ1),U,8)=+$G(IBDEF("IEN")) Q:$S($P(IBZ1,U)'["INS DEF":$P($G(IBDEF("IEN")),U,2)=355.9,1:$P($G(IBDEF("IEN")),U,2)=355.91)
"RTN","IBCEP2B",63,0)
 . S IBARRS(IBTYP,IBZ,IBZ1)=IBARR(IBZ,IBZ1)
"RTN","IBCEP2B",64,0)
 . I $P(IBARR(IBZ,IBZ1),U,4)]"" S IBUSED(IBTYP,$P(IBARR(IBZ,IBZ1),U,4),+$P(IBARR(IBZ,IBZ1),U,7))=""
"RTN","IBCEP2B",65,0)
 S IBTYP="" F  S IBTYP=$O(IBARRS(IBTYP)) Q:IBTYP=""  S IBZ="" F  S IBZ=$O(IBARRS(IBTYP,IBZ)) Q:IBZ=""  D  Q:IBQUIT
"RTN","IBCEP2B",66,0)
 . S IBZ1="" F  S IBZ1=$O(IBARRS(IBTYP,IBZ,IBZ1)) Q:IBZ1=""  S IBCT=IBCT+1,IBNUM=IBNUM+1 D  Q:IBQUIT
"RTN","IBCEP2B",67,0)
 .. S Z0=IBARRS(IBTYP,IBZ,IBZ1)
"RTN","IBCEP2B",68,0)
 .. S IBARR=$S($P(Z0,U,8)&(IBZ1'["LIC"):$G(^IBA("355.9"_$S($P(IBZ1,U)'="INS DEF":"",1:1),+$P(Z0,U,8),0)),1:"")
"RTN","IBCEP2B",69,0)
 .. S IBTYPN=$S(IBTYP=+$$STLIC^IBCEP8():"ST LIC ("_$P($G(^DIC(5,+$P(Z0,U,7),0)),U,2)_")",1:$P($G(^IBE(355.97,IBTYP,0)),U))
"RTN","IBCEP2B",70,0)
 .. S DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  "_$E($S($P(IBZ1,U)="INS DEF":"<INS DEF> ",1:"")_$P(Z0,U,4)_$J("",29),1,29)_"  "_$E(IBTYPN_$J("",15),1,15)_"  "_$S($P(IBARR,U,3):$$EXTERNAL^DILFD(355.9,.03,"",$P(IBARR,U,3)),1:"")
"RTN","IBCEP2B",71,0)
 .. S IBID(IBNUM,1)=DIR("A",IBCT),IBID(IBNUM)=$P(Z0,U,4)_U_IBTYP
"RTN","IBCEP2B",72,0)
 .. I (IBNUM#15)=0 S IBM=$$MORE(.DIR) D  Q:IBQUIT
"RTN","IBCEP2B",73,0)
 ... I IBM<0 S IBQUIT=1,IBSEL=0 Q  ; User aborted list
"RTN","IBCEP2B",74,0)
 ... I 'IBM S IBQUIT=1 Q  ; User wants to select
"RTN","IBCEP2B",75,0)
 ... W ! K DIR S IBCT=1
"RTN","IBCEP2B",76,0)
 I 'IBSEL S DIPA("EDIT")=-1
"RTN","IBCEP2B",77,0)
 I IBSEL S:IBDEF=""&$G(IBREQ) IBDEF=2 S DIPA("EDIT")=$$SELID(.DIR,IBDEF,.IBID,.DIPA,IBNUM)
"RTN","IBCEP2B",78,0)
 Q
"RTN","IBCEP2B",79,0)
 ;
"RTN","IBCEP2B",80,0)
SELID(DIR,IBDEF,IBID,DIPA,IBNUM) ; Returns the selection from the array of possible IDs/ID actions
"RTN","IBCEP2B",81,0)
 N IDACT,IDSEL,X,Y
"RTN","IBCEP2B",82,0)
 S IDACT=""
"RTN","IBCEP2B",83,0)
 S DIR("B")=$S('$G(IBDEF):1,1:IBDEF),DIR("A",+$O(DIR("A",""),-1)+1)=" "
"RTN","IBCEP2B",84,0)
 S DIR(0)="NA^1:"_IBNUM,DIR("A")="Selection: " W ! D ^DIR K DIR
"RTN","IBCEP2B",85,0)
 I $D(DTOUT)!$D(DUOUT)!(Y=1) S IDACT=-1 G SELIDQ
"RTN","IBCEP2B",86,0)
 I Y=2 S IDACT=1 G SELIDQ
"RTN","IBCEP2B",87,0)
 S IDSEL=Y
"RTN","IBCEP2B",88,0)
 S DIR("A",1)="ID SELECTED:",DIR("A",2)="  "_$G(IBID(+Y,1)),DIR("A")="IS THIS CORRECT?: ",DIR("B")="YES",DIR(0)="YA" W ! D ^DIR K DIR
"RTN","IBCEP2B",89,0)
 I Y'=1 S IDACT=-1 G SELIDQ
"RTN","IBCEP2B",90,0)
 S DIPA("PRID")=$P(IBID(IDSEL),U),DIPA("PRIDT")=$P(IBID(IDSEL),U,2),IDACT=2
"RTN","IBCEP2B",91,0)
 ;
"RTN","IBCEP2B",92,0)
SELIDQ Q IDACT
"RTN","IBCEP2B",93,0)
 ;
"RTN","IBCEP2B",94,0)
MORE(DIR) ;
"RTN","IBCEP2B",95,0)
 N DIR,X,Y,DUOUT,DTOUT
"RTN","IBCEP2B",96,0)
 S DIR(0)="YA",DIR("A")="MORE?: ",DIR("B")="NO" W ! D ^DIR K DIR("B")
"RTN","IBCEP2B",97,0)
 Q $S($D(DTOUT)!$D(DUOUT):-1,1:Y)
"RTN","IBCEP2B",98,0)
 ;
"RTN","IBCEP2B",99,0)
 ; IBFIDFL = E = Electronic Form Type
"RTN","IBCEP2B",100,0)
 ;           A = Additional ID's
"RTN","IBCEP2B",101,0)
 ;           LF - VA Lab/Facility
"RTN","IBCEP2B",102,0)
FACID(IBINS,IBFIDFL) ; Enter/edit billing facility ids
"RTN","IBCEP2B",103,0)
 ; IBINS = ien of ins co (file 36)
"RTN","IBCEP2B",104,0)
 N IBID,Z,Z0,Y
"RTN","IBCEP2B",105,0)
 K ^TMP($J,"IBBF_ID")
"RTN","IBCEP2B",106,0)
 W @IOF
"RTN","IBCEP2B",107,0)
 D GETBPNUM(IBINS)
"RTN","IBCEP2B",108,0)
 K ^TMP("IBCE_PRVFAC_MAINT_INS",$J)
"RTN","IBCEP2B",109,0)
 S ^TMP("IBCE_PRVFAC_MAINT_INS",$J)=IBFIDFL_U_IBINS_U_"1"
"RTN","IBCEP2B",110,0)
 D EN^VALM("IBCE PRVFAC MAINT")
"RTN","IBCEP2B",111,0)
 K ^TMP("IBCE_PRVFAC_MAINT_INS",$J)
"RTN","IBCEP2B",112,0)
 W @IOF
"RTN","IBCEP2B",113,0)
 D FULL^VALM1
"RTN","IBCEP2B",114,0)
 Q
"RTN","IBCEP2B",115,0)
 ;
"RTN","IBCEP2B",116,0)
GETBPNUM(IBINS) ;
"RTN","IBCEP2B",117,0)
 N Z,Z0,IBID,IBMAIN
"RTN","IBCEP2B",118,0)
 S IBMAIN=$$MAIN(),^TMP($J,"IBBF_ID")=IBMAIN
"RTN","IBCEP2B",119,0)
 S IBID=$$BF^IBCU()
"RTN","IBCEP2B",120,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP2B",121,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP2B",122,0)
 . Q:$P(Z0,U,8)'="E"  ; WCJ 1/13/06  There are several ID types in this file 
"RTN","IBCEP2B",123,0)
 . Q:$P(Z0,U,3)]""
"RTN","IBCEP2B",124,0)
 . S ^TMP($J,"IBBF_ID",$S($P(Z0,U,5)=IBMAIN:0,1:+$P(Z0,U,5)),+$P(Z0,U,4))=$P(Z0,U,7)
"RTN","IBCEP2B",125,0)
 . S ^TMP($J,"IBBF_ID",$S($P(Z0,U,5)=IBMAIN:0,1:+$P(Z0,U,5)),+$P(Z0,U,4),"QUAL")=$P(Z0,U,6)
"RTN","IBCEP2B",126,0)
 Q
"RTN","IBCEP2B",127,0)
 ;
"RTN","IBCEP2B",128,0)
MAIN() ; Returns ien of main division of the database
"RTN","IBCEP2B",129,0)
 Q +$$PRIM^VASITE()
"RTN","IBCEP2B",130,0)
 ;
"RTN","IBCEP2B",131,0)
FACNUM(IBIFN,IBCOB,IBQF) ; Function returns the current division's fac billing
"RTN","IBCEP2B",132,0)
 ; prov id for the COB insurance sequence from file 355.92
"RTN","IBCEP2B",133,0)
 ; IBIFN = ien file 399
"RTN","IBCEP2B",134,0)
 ; IBCOB = # of COB ins seq or if "", current assumed
"RTN","IBCEP2B",135,0)
 ; IBQF - 1 if qualifier is to be returned instead of ID
"RTN","IBCEP2B",136,0)
 N Z,IBDIV,IBFT,X,BPZ
"RTN","IBCEP2B",137,0)
 S X="",IBDIV=0
"RTN","IBCEP2B",138,0)
 S:'$G(IBCOB) IBCOB=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2B",139,0)
 ;
"RTN","IBCEP2B",140,0)
 ; IB*2*400 - esg - 11/7/08 - Determine the division associated with the billing provider first
"RTN","IBCEP2B",141,0)
 S BPZ=+$$B^IBCEF79(IBIFN,IBCOB)                     ; Inst file pointer as the billing provider for payer seq IBCOB
"RTN","IBCEP2B",142,0)
 I BPZ S IBDIV=+$O(^DG(40.8,"AD",BPZ,0))             ; Billing Provider division (may not exist)
"RTN","IBCEP2B",143,0)
 ;
"RTN","IBCEP2B",144,0)
 I 'IBDIV S IBDIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)   ; Division on claim
"RTN","IBCEP2B",145,0)
 I 'IBDIV S IBDIV=$$MAIN()                           ; main division
"RTN","IBCEP2B",146,0)
 ;
"RTN","IBCEP2B",147,0)
 S IBFT=$$FT^IBCEF(IBIFN),IBFT=$S(IBFT=3:1,1:2)
"RTN","IBCEP2B",148,0)
 K ^TMP($J,"IBBF_ID")
"RTN","IBCEP2B",149,0)
 D GETBPNUM(+$P($G(^DGCR(399,IBIFN,"M")),U,IBCOB))
"RTN","IBCEP2B",150,0)
 I IBDIV=+$G(^TMP($J,"IBBF_ID")) S IBDIV=0
"RTN","IBCEP2B",151,0)
 I '$G(IBQF) S X=$S($D(^TMP($J,"IBBF_ID",IBDIV,IBFT)):^(IBFT),1:$G(^TMP($J,"IBBF_ID",0,IBFT)))
"RTN","IBCEP2B",152,0)
 I $G(IBQF) S X=$S($D(^TMP($J,"IBBF_ID",IBDIV,IBFT,"QUAL")):^("QUAL"),1:$G(^TMP($J,"IBBF_ID",0,IBFT,"QUAL")))
"RTN","IBCEP2B",153,0)
 K ^TMP($J,"IBBF_ID")
"RTN","IBCEP2B",154,0)
 Q X
"RTN","IBCEP2B",155,0)
 ;
"RTN","IBCEP2B",156,0)
SOP(IBIFN,IBZD) ; Returns X12 current source of pay code for bill ien IBIFN
"RTN","IBCEP2B",157,0)
 ; IBZD = the current ins policy type, if known
"RTN","IBCEP2B",158,0)
 N IBZ
"RTN","IBCEP2B",159,0)
 S IBZ=""
"RTN","IBCEP2B",160,0)
 I $G(IBZD)="" D F^IBCEF("N-CURRENT INS POLICY TYPE","IBZD",,IBIFN)
"RTN","IBCEP2B",161,0)
 S IBZ=$S($G(IBZD)="":"G2","MAMB16"[IBZD:"1C",IBZD="TV"!(IBZD="MC"):"1D",IBZD="CH":"1H",IBZD="BL":$S($$FT^IBCEF(IBIFN)=2:"1B",1:"1A"),1:"G2")
"RTN","IBCEP2B",162,0)
 Q IBZ
"RTN","IBCEP2B",163,0)
 ;
"RTN","IBCEP8")
0^12^B51555046^B47452533
"RTN","IBCEP8",1,0)
IBCEP8 ;ALB/TMP - Functions for NON-VA PROVIDER ;11-07-00
"RTN","IBCEP8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,288,320,343,374,377,391,400**;21-MAR-94;Build 52
"RTN","IBCEP8",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP8",4,0)
 ;
"RTN","IBCEP8",5,0)
EN ; -- main entry point
"RTN","IBCEP8",6,0)
 N IBNPRV
"RTN","IBCEP8",7,0)
 K IBFASTXT
"RTN","IBCEP8",8,0)
 D FULL^VALM1
"RTN","IBCEP8",9,0)
 D EN^VALM("IBCE PRVNVA MAINT")
"RTN","IBCEP8",10,0)
 Q
"RTN","IBCEP8",11,0)
 ;
"RTN","IBCEP8",12,0)
HDR ; -- header code
"RTN","IBCEP8",13,0)
 K VALMHDR
"RTN","IBCEP8",14,0)
 Q
"RTN","IBCEP8",15,0)
 ;
"RTN","IBCEP8",16,0)
INIT ; Initialization
"RTN","IBCEP8",17,0)
 N DIC,DA,X,Y,DLAYGO,IBIF,DIR,DTOUT,DUOUT
"RTN","IBCEP8",18,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",19,0)
 ;
"RTN","IBCEP8",20,0)
 ; if coming in from main routine ^IBCEP6 this special variable IBNVPMIF is set already
"RTN","IBCEP8",21,0)
 I $G(IBNVPMIF)'="" S IBIF=IBNVPMIF G INIT1
"RTN","IBCEP8",22,0)
 ;
"RTN","IBCEP8",23,0)
 S DIR("A")="(I)NDIVIDUAL OR (F)ACILITY?: ",DIR(0)="SA^I:INDIVIDUAL;F:FACILITY" D ^DIR K DIR
"RTN","IBCEP8",24,0)
 I $D(DUOUT)!$D(DTOUT) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",25,0)
 S IBIF=Y
"RTN","IBCEP8",26,0)
 ;
"RTN","IBCEP8",27,0)
INIT1 ;
"RTN","IBCEP8",28,0)
 ;
"RTN","IBCEP8",29,0)
 I IBIF="F" D
"RTN","IBCEP8",30,0)
 . S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",31,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP8",32,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",33,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",34,0)
 ;
"RTN","IBCEP8",35,0)
 S DIC="^IBA(355.93,",DIC("DR")=".02///"_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",36,0)
 S DIC("S")="I $P(^(0),U,2)="_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",37,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON"_$S(IBIF="I":"-",1:"/OTHER ")_"VA PROVIDER: "
"RTN","IBCEP8",38,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",39,0)
 I Y'>0 S VALMQUIT=1 G INITQ
"RTN","IBCEP8",40,0)
 S IBNPRV=+Y
"RTN","IBCEP8",41,0)
 D BLD^IBCEP8B(IBNPRV)
"RTN","IBCEP8",42,0)
INITQ Q
"RTN","IBCEP8",43,0)
 ;
"RTN","IBCEP8",44,0)
EXPND ;
"RTN","IBCEP8",45,0)
 Q
"RTN","IBCEP8",46,0)
 ;
"RTN","IBCEP8",47,0)
HELP ;
"RTN","IBCEP8",48,0)
 Q
"RTN","IBCEP8",49,0)
 ;
"RTN","IBCEP8",50,0)
EXIT ;
"RTN","IBCEP8",51,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",52,0)
 D CLEAN^VALM10
"RTN","IBCEP8",53,0)
 K IBFASTXT
"RTN","IBCEP8",54,0)
 Q
"RTN","IBCEP8",55,0)
 ;
"RTN","IBCEP8",56,0)
EDIT1(IBNPRV,IBNOLM) ; Edit non-VA provider/facility demographics
"RTN","IBCEP8",57,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",58,0)
 ; IBNOLM = 1 if not called from list manager
"RTN","IBCEP8",59,0)
 ;
"RTN","IBCEP8",60,0)
 N DA,X,Y,DIE,DR,IBP
"RTN","IBCEP8",61,0)
 I '$G(IBNOLM) D FULL^VALM1
"RTN","IBCEP8",62,0)
 I IBNPRV D
"RTN","IBCEP8",63,0)
 . I '$G(IBNOLM) D CLEAR^VALM1
"RTN","IBCEP8",64,0)
 . S DIE="^IBA(355.93,",DA=IBNPRV,IBP=($P($G(^IBA(355.93,IBNPRV,0)),U,2)=2)
"RTN","IBCEP8",65,0)
 . ; PRXM/KJH - Added NPI and Taxonomy to the list of fields to be edited. Put a "NO^" around the Taxonomy multiple (#42) since some of the sub-field entries are 'required'.
"RTN","IBCEP8",66,0)
 . S DR=".01;"_$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")_";D PRENPI^IBCEP81(IBNPRV);D EN^IBCEP82(IBNPRV);S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",67,0)
 . D ^DIE
"RTN","IBCEP8",68,0)
 . Q:$G(IBNOLM)
"RTN","IBCEP8",69,0)
 . D BLD^IBCEP8B(IBNPRV)
"RTN","IBCEP8",70,0)
 I '$G(IBNOLM) K VALMBCK S VALMBCK="R"
"RTN","IBCEP8",71,0)
 Q
"RTN","IBCEP8",72,0)
 ;
"RTN","IBCEP8",73,0)
EDITID(IBNPRV,IBSLEV) ; Link from this list template to maintain provider-specific ids
"RTN","IBCEP8",74,0)
 ; This entry point is called by 4 action protocols.
"RTN","IBCEP8",75,0)
 ; IBNPRV = ien of entry in file 355.93 (can be either an individual or a facility) (required)
"RTN","IBCEP8",76,0)
 ; IBSLEV = 1 for facility/provider own ID's
"RTN","IBCEP8",77,0)
 ; IBSLEV = 2 for facility/provider ID's furnished by an insurance company
"RTN","IBCEP8",78,0)
 ;
"RTN","IBCEP8",79,0)
 Q:'$G(IBNPRV)
"RTN","IBCEP8",80,0)
 Q:'$G(IBSLEV)
"RTN","IBCEP8",81,0)
 N IBPRV,IBIF
"RTN","IBCEP8",82,0)
 D FULL^VALM1    ; set full scrolling region
"RTN","IBCEP8",83,0)
 D CLEAR^VALM1   ; clear screen
"RTN","IBCEP8",84,0)
 S IBPRV=IBNPRV
"RTN","IBCEP8",85,0)
 ;
"RTN","IBCEP8",86,0)
 K IBFASTXT
"RTN","IBCEP8",87,0)
 S IBIF=$$GET1^DIQ(355.93,IBPRV,.02,"I")    ; 1=facility/group      2=individual
"RTN","IBCEP8",88,0)
 D EN^VALM("IBCE PRVPRV MAINT")
"RTN","IBCEP8",89,0)
 ;
"RTN","IBCEP8",90,0)
 K VALMQUIT
"RTN","IBCEP8",91,0)
 S VALMBCK=$S($G(IBFASTXT)'="":"Q",1:"R")
"RTN","IBCEP8",92,0)
 Q
"RTN","IBCEP8",93,0)
 ;
"RTN","IBCEP8",94,0)
NVAFAC ; Enter/edit Non-VA facility information
"RTN","IBCEP8",95,0)
 ; This entry point is called by the menu system for option IBCE PRVNVA FAC EDIT
"RTN","IBCEP8",96,0)
 N X,Y,DA,DIC,IBNPRV,DLAYGO
"RTN","IBCEP8",97,0)
 S DIC="^IBA(355.93,",DIC("S")="I $P(^(0),U,2)=1",DIC("DR")=".02///1"
"RTN","IBCEP8",98,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON/Other VA FACILITY: "
"RTN","IBCEP8",99,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",100,0)
 I Y'>0 S VALMQUIT=1 G NVAFACQ
"RTN","IBCEP8",101,0)
 S IBNPRV=+Y
"RTN","IBCEP8",102,0)
 D EDIT1(IBNPRV,1)
"RTN","IBCEP8",103,0)
 ;
"RTN","IBCEP8",104,0)
NVAFACQ Q
"RTN","IBCEP8",105,0)
 ;
"RTN","IBCEP8",106,0)
GETFAC(IB,IBFILE,IBELE,CSZLEN) ; Returns facility name, address lines or city-state-zip
"RTN","IBCEP8",107,0)
 ;        IB = ien of entry in file
"RTN","IBCEP8",108,0)
 ;    IBFILE = 0 for retrieval from file 4, 1 for retrieval from file 355.93
"RTN","IBCEP8",109,0)
 ;  If IBELE = 0, returns name
"RTN","IBCEP8",110,0)
 ;           = 1, returns address line 1
"RTN","IBCEP8",111,0)
 ;           = 2, returns address line 2
"RTN","IBCEP8",112,0)
 ;           = 12, returns address lines 1 and 2 together
"RTN","IBCEP8",113,0)
 ;           = 3, returns city, state zip
"RTN","IBCEP8",114,0)
 ;           = "3C", returns city    = "3S", state    = "3Z", zip
"RTN","IBCEP8",115,0)
 ;    CSZLEN = max length allowed for city,st,zip string - Only applies when IBELE=3
"RTN","IBCEP8",116,0)
 ;
"RTN","IBCEP8",117,0)
 N Z,IBX,IC,IS,IZ,DIFF
"RTN","IBCEP8",118,0)
 S IBX=""
"RTN","IBCEP8",119,0)
 ;
"RTN","IBCEP8",120,0)
 S Z=$S('IBFILE:$G(^DIC(4,+IB,1)),1:$G(^IBA(355.93,+IB,0)))
"RTN","IBCEP8",121,0)
 I +IBELE=0 S IBX=$S('IBFILE:$P($G(^DIC(4,+IB,0)),U),1:$P($G(^IBA(355.93,+IB,0)),U))
"RTN","IBCEP8",122,0)
 I IBELE=1!(IBELE=12) S IBX=$S('IBFILE:$P(Z,U),1:$P(Z,U,5))
"RTN","IBCEP8",123,0)
 I IBELE=2!(IBELE=12) S IBX=$S(IBELE=12:IBX_" ",1:"")_$S('IBFILE:$P(Z,U,2),1:$P(Z,U,10))
"RTN","IBCEP8",124,0)
 ;
"RTN","IBCEP8",125,0)
 I +IBELE=3 D
"RTN","IBCEP8",126,0)
 . I 'IBFILE S IC=$P(Z,U,3),IS=$$STATE^IBCEFG1($P($G(^DIC(4,+IB,0)),U,2)),IZ=$P(Z,U,4)
"RTN","IBCEP8",127,0)
 . I IBFILE S IC=$P(Z,U,6),IS=$$STATE^IBCEFG1($P(Z,U,7)),IZ=$P(Z,U,8)
"RTN","IBCEP8",128,0)
 . ;
"RTN","IBCEP8",129,0)
 . I IBELE="3C" S IBX=IC Q
"RTN","IBCEP8",130,0)
 . I IBELE="3S" S IBX=IS Q
"RTN","IBCEP8",131,0)
 . I IBELE="3Z" S IBX=IZ Q
"RTN","IBCEP8",132,0)
 . ;
"RTN","IBCEP8",133,0)
 . S IBX=$$CSZ(IC,IS,IZ,+$G(CSZLEN))    ; build the city, st zip string since IBELE=3 here
"RTN","IBCEP8",134,0)
 . Q
"RTN","IBCEP8",135,0)
 ;
"RTN","IBCEP8",136,0)
GETFACX ;
"RTN","IBCEP8",137,0)
 Q IBX
"RTN","IBCEP8",138,0)
 ;
"RTN","IBCEP8",139,0)
CSZ(IC,IS,IZ,CSZLEN) ; build city, state, zip string
"RTN","IBCEP8",140,0)
 ; IC - city
"RTN","IBCEP8",141,0)
 ; IS - state abbreviation
"RTN","IBCEP8",142,0)
 ; IZ - zip
"RTN","IBCEP8",143,0)
 ; CSZLEN - max length allowed for city, st zip string
"RTN","IBCEP8",144,0)
 ;
"RTN","IBCEP8",145,0)
 NEW IBX,DIFF
"RTN","IBCEP8",146,0)
 ;
"RTN","IBCEP8",147,0)
 ; build the full city, st zip string
"RTN","IBCEP8",148,0)
 S IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ
"RTN","IBCEP8",149,0)
 ;
"RTN","IBCEP8",150,0)
 I '$G(CSZLEN) G CSZX          ; no max length to worry about
"RTN","IBCEP8",151,0)
 I $L(IBX)'>CSZLEN G CSZX      ; length is OK so get out
"RTN","IBCEP8",152,0)
 ;
"RTN","IBCEP8",153,0)
 ; string is too long so try to shorten the zip if it has a dash
"RTN","IBCEP8",154,0)
 I IZ["-" S IZ=$P(IZ,"-",1),IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ I $L(IBX)'>CSZLEN G CSZX
"RTN","IBCEP8",155,0)
 ;
"RTN","IBCEP8",156,0)
 ; string is still too long so truncate the city name until it fits
"RTN","IBCEP8",157,0)
 S DIFF=$L(IBX)-CSZLEN
"RTN","IBCEP8",158,0)
 S IC=$E(IC,1,$L(IC)-DIFF)
"RTN","IBCEP8",159,0)
 S IBX=IC_$S(IC'="":", ",1:"")_IS_" "_IZ
"RTN","IBCEP8",160,0)
CSZX ;
"RTN","IBCEP8",161,0)
 Q IBX
"RTN","IBCEP8",162,0)
 ;
"RTN","IBCEP8",163,0)
ALLID(IBPRV,IBPTYP,IBZ) ; Returns array IBZ for all ids for provider IBPRV
"RTN","IBCEP8",164,0)
 ; for all provider id types or for id type in IBPTYP
"RTN","IBCEP8",165,0)
 ; IBPRV = vp ien of provider
"RTN","IBCEP8",166,0)
 ; IBPTYP = ien of provider id type to return or "" for all
"RTN","IBCEP8",167,0)
 ; IBZ = array returned with internal data:
"RTN","IBCEP8",168,0)
 ;  IBZ(file 355.9 ien)=ID type^ID#^ins co^form type^bill care type^care un^X12 code for id type
"RTN","IBCEP8",169,0)
 N Z,Z0
"RTN","IBCEP8",170,0)
 K IBZ
"RTN","IBCEP8",171,0)
 G:'$G(IBPRV) ALLIDQ
"RTN","IBCEP8",172,0)
 S IBPTYP=$G(IBPTYP)
"RTN","IBCEP8",173,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",IBPRV,Z)) Q:'Z  S Z0=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP8",174,0)
 . I $S(IBPTYP="":1,1:($P(Z0,U,6)=IBPTYP)) S IBZ(Z)=($P(Z0,U,6)_U_$P(Z0,U,7)_U_$P(Z0,U,2)_U_$P(Z0,U,4)_U_$P(Z0,U,5)_U_$P(Z0,U,3))_U_$P($G(^IBE(355.97,+$P(Z0,U,6),0)),U,3)
"RTN","IBCEP8",175,0)
 ;
"RTN","IBCEP8",176,0)
ALLIDQ Q
"RTN","IBCEP8",177,0)
 ;
"RTN","IBCEP8",178,0)
CLIA() ; Returns ien of CLIA # provider id type
"RTN","IBCEP8",179,0)
 N Z,IBZ
"RTN","IBCEP8",180,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,0)),U,3)="X4",$P(^(0),U)["CLIA" S IBZ=Z Q
"RTN","IBCEP8",181,0)
 Q IBZ
"RTN","IBCEP8",182,0)
 ;
"RTN","IBCEP8",183,0)
STLIC() ; Returns ien of STLIC# provider id type
"RTN","IBCEP8",184,0)
 N Z,IBZ
"RTN","IBCEP8",185,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,3) S IBZ=Z Q
"RTN","IBCEP8",186,0)
 Q IBZ
"RTN","IBCEP8",187,0)
 ;
"RTN","IBCEP8",188,0)
TAXID() ; Returns ien of Fed tax id provider id type
"RTN","IBCEP8",189,0)
 N Z,IBZ
"RTN","IBCEP8",190,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,4) S IBZ=Z Q
"RTN","IBCEP8",191,0)
 Q IBZ
"RTN","IBCEP8",192,0)
 ;
"RTN","IBCEP8",193,0)
CLIANVA(IBIFN) ; Returns CLIA # for a non-VA facility on bill ien IBIFN
"RTN","IBCEP8",194,0)
 N IBCLIA,IBZ,IBNVA,Z
"RTN","IBCEP8",195,0)
 S IBCLIA="",IBZ=$$CLIA()
"RTN","IBCEP8",196,0)
 I IBZ D
"RTN","IBCEP8",197,0)
 . S IBNVA=$P($G(^DGCR(399,IBIFN,"U2")),U,10) Q:'IBNVA
"RTN","IBCEP8",198,0)
 . S IBCLIA=$$IDFIND^IBCEP2(IBIFN,IBZ,IBNVA_";IBA(355.93,","",1)
"RTN","IBCEP8",199,0)
 Q IBCLIA
"RTN","IBCEP8",200,0)
 ;
"RTN","IBCEP8",201,0)
VALFAC(X) ; Function returns 1 if format is valid for X12 facility name
"RTN","IBCEP8",202,0)
 ; Alpha/numeric/certain punctuation valid.  Must start with an Alpha
"RTN","IBCEP8",203,0)
 N OK,VAL
"RTN","IBCEP8",204,0)
 S OK=1
"RTN","IBCEP8",205,0)
 S VAL("A")="",VAL("N")="",VAL=",.- "
"RTN","IBCEP8",206,0)
 I $E(X)'?1A!'$$VALFMT(X,.VAL) S OK=0
"RTN","IBCEP8",207,0)
 Q OK
"RTN","IBCEP8",208,0)
 ;
"RTN","IBCEP8",209,0)
VALFMT(X,VAL) ; Returns 1 if format of X is valid, 0 if not
"RTN","IBCEP8",210,0)
 ; X = data to be examined
"RTN","IBCEP8",211,0)
 ; VAL = a 'string' of valid characters AND/OR (passed by reference)
"RTN","IBCEP8",212,0)
 ;    if VAL("A") defined ==> Alpha
"RTN","IBCEP8",213,0)
 ;    if VAL("A") defined ==> Numeric valid
"RTN","IBCEP8",214,0)
 ;    if VAL("A") defined ==> Punctuation valid
"RTN","IBCEP8",215,0)
 ;   any other character included in the string is checked individually
"RTN","IBCEP8",216,0)
 N Z
"RTN","IBCEP8",217,0)
 I $D(VAL("A")) D
"RTN","IBCEP8",218,0)
 . N Z0
"RTN","IBCEP8",219,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1A S Z0(Z)=""
"RTN","IBCEP8",220,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",221,0)
 I $D(VAL("N")) D
"RTN","IBCEP8",222,0)
 . N Z0
"RTN","IBCEP8",223,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1N S Z0(Z)=""
"RTN","IBCEP8",224,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",225,0)
 I $D(VAL("P")) D
"RTN","IBCEP8",226,0)
 . N Z0
"RTN","IBCEP8",227,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1P S Z0(Z)=""
"RTN","IBCEP8",228,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",229,0)
 I $G(VAL)'="" S X=$TR(X,VAL,"")
"RTN","IBCEP8",230,0)
 Q (X="")
"RTN","IBCEP8",231,0)
 ;
"RTN","IBCEP8",232,0)
PS(IBXSAVE) ; Returns 1 if IBXSAVE("PSVC") indicates the svc was non-lab
"RTN","IBCEP8",233,0)
 ; 
"RTN","IBCEP8",234,0)
 Q $S($G(IBXSAVE("PSVC"))="":0,1:"13"[IBXSAVE("PSVC"))
"RTN","IBCEP8",235,0)
 ;
"RTN","IBCEP8",236,0)
 ; Pass in the Internal Entry number to File 355.93
"RTN","IBCEP8",237,0)
 ; Return the Primary ID and Qualifier (ID Type) from 355.9
"RTN","IBCEP8",238,0)
PRIMID(IEN35593) ; Return External Primary ID and ID Quailier
"RTN","IBCEP8",239,0)
 N INDXVAL,LIST,MSG,IDCODE
"RTN","IBCEP8",240,0)
 S INDXVAL=IEN35593_";IBA(355.93,"
"RTN","IBCEP8",241,0)
 N SCREEN S SCREEN="I $P(^(0),U,8)"
"RTN","IBCEP8",242,0)
 D FIND^DIC(355.9,,"@;.06EI;.07","Q",INDXVAL,,,SCREEN,,"LIST","MSG")
"RTN","IBCEP8",243,0)
 I '+$G(LIST("DILIST",0)) Q ""   ; No Primary ID
"RTN","IBCEP8",244,0)
 I +$G(LIST("DILIST",0))>1 Q "***ERROR***^***ERROR***"  ; Bad.  More than one. 
"RTN","IBCEP8",245,0)
 ; Found just one
"RTN","IBCEP8",246,0)
 S IDCODE=$$GET1^DIQ(355.97,LIST("DILIST","ID",1,.06,"I"),.03)
"RTN","IBCEP8",247,0)
 Q $G(LIST("DILIST","ID",1,.07))_U_IDCODE_" - "_$G(LIST("DILIST","ID",1,.06,"E"))
"RTN","IBCEP81")
0^30^B63919738^B63787045
"RTN","IBCEP81",1,0)
IBCEP81 ;ALB/KJH - NPI and Taxonomy Functions ;19 Apr 2008  5:17 PM
"RTN","IBCEP81",2,0)
 ;;2.0;INTEGRATED BILLING;**343,391,400**;21-MAR-94;Build 52
"RTN","IBCEP81",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP81",4,0)
 ;
"RTN","IBCEP81",5,0)
 ; Must call at an entry point  
"RTN","IBCEP81",6,0)
 Q
"RTN","IBCEP81",7,0)
 ;
"RTN","IBCEP81",8,0)
 ; NPIREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",9,0)
 ;          if the NPI 'drop dead date' has passed.
"RTN","IBCEP81",10,0)
 ; Input
"RTN","IBCEP81",11,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",12,0)
 ; Output
"RTN","IBCEP81",13,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",14,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",15,0)
NPIREQ(IBDT) ; Check NPI drop dead date
"RTN","IBCEP81",16,0)
 N IBCHKDT
"RTN","IBCEP81",17,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",18,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",19,0)
 ;
"RTN","IBCEP81",20,0)
 ; TAXREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",21,0)
 ;          if the Taxonomy 'drop dead date' has passed.
"RTN","IBCEP81",22,0)
 ; Input
"RTN","IBCEP81",23,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",24,0)
 ; Output
"RTN","IBCEP81",25,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",26,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",27,0)
TAXREQ(IBDT) ; Check Taxonomy drop dead date
"RTN","IBCEP81",28,0)
 N IBCHKDT
"RTN","IBCEP81",29,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",30,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",31,0)
 ;
"RTN","IBCEP81",32,0)
 ; NPIGET - Extrinsic function to retrieve the NPI of a specified
"RTN","IBCEP81",33,0)
 ;          record from file 355.93.
"RTN","IBCEP81",34,0)
 ; Input
"RTN","IBCEP81",35,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",36,0)
 ; Output
"RTN","IBCEP81",37,0)
 ;    NPI of that record or "" if not yet defined
"RTN","IBCEP81",38,0)
NPIGET(IBIEN) ; Get NPI
"RTN","IBCEP81",39,0)
 I IBIEN="" Q ""
"RTN","IBCEP81",40,0)
 N NPI
"RTN","IBCEP81",41,0)
 S NPI=$$GET1^DIQ(355.93,IBIEN_",",41.01,"I")
"RTN","IBCEP81",42,0)
 Q NPI
"RTN","IBCEP81",43,0)
 ;
"RTN","IBCEP81",44,0)
 ; TAXGET - Extrinsic function to retrieve the Taxonomy of a specified
"RTN","IBCEP81",45,0)
 ;          record from file 355.93. (NOTE: Returns data for the 'active'
"RTN","IBCEP81",46,0)
 ;          primary record from the Taxonomy multiple or the earliest
"RTN","IBCEP81",47,0)
 ;          'active' secondary record if no primary is present.)
"RTN","IBCEP81",48,0)
 ;
"RTN","IBCEP81",49,0)
 ;          The 'optional' array parameter returns all Taxonomies in a
"RTN","IBCEP81",50,0)
 ;          formatted array so they can be displayed.
"RTN","IBCEP81",51,0)
 ; Input
"RTN","IBCEP81",52,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",53,0)
 ; Output
"RTN","IBCEP81",54,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",55,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",56,0)
 ;
"RTN","IBCEP81",57,0)
 ;    IBARR = IEN of the record from the main output
"RTN","IBCEP81",58,0)
 ;    IBARR(IEN) = 3 pieces for each Taxonomy record
"RTN","IBCEP81",59,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",60,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",61,0)
 ;    Piece 3 = Primary/Secondary (1/0)
"RTN","IBCEP81",62,0)
 ;    
"RTN","IBCEP81",63,0)
TAXGET(IBIEN,IBARR) ; Get Taxonomy
"RTN","IBCEP81",64,0)
 I IBIEN="" Q U
"RTN","IBCEP81",65,0)
 N TAX,IBPTR,IEN,IENS
"RTN","IBCEP81",66,0)
 S IEN=0,IBPTR=""
"RTN","IBCEP81",67,0)
 F  S IEN=$O(^IBA(355.93,IBIEN,"TAXONOMY",IEN)) Q:'IEN  D
"RTN","IBCEP81",68,0)
 . S IENS=IEN_","_IBIEN_","
"RTN","IBCEP81",69,0)
 . I $$GET1^DIQ(355.9342,IENS,.03,"E")'="ACTIVE" Q
"RTN","IBCEP81",70,0)
 . S IBARR(IEN)=U_$$GET1^DIQ(355.9342,IENS,.01,"I")_U_$$GET1^DIQ(355.9342,IENS,.02,"I")
"RTN","IBCEP81",71,0)
 . S $P(IBARR(IEN),U)=$$GET1^DIQ(8932.1,$P(IBARR(IEN),U,2),"X12 CODE")
"RTN","IBCEP81",72,0)
 . I $$GET1^DIQ(355.9342,IENS,.02,"E")="YES" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN Q
"RTN","IBCEP81",73,0)
 . I IBPTR="" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN
"RTN","IBCEP81",74,0)
 S TAX=$$GET1^DIQ(8932.1,IBPTR,"X12 CODE")
"RTN","IBCEP81",75,0)
 Q TAX_U_IBPTR
"RTN","IBCEP81",76,0)
 ;
"RTN","IBCEP81",77,0)
 ; TAXDEF - Extrinsic function to retrieve the Taxonomy for the Default
"RTN","IBCEP81",78,0)
 ;          Division from a record in file 399.
"RTN","IBCEP81",79,0)
 ; Input
"RTN","IBCEP81",80,0)
 ;    IBIEN399 - IEN of the record from file 399
"RTN","IBCEP81",81,0)
 ; Output
"RTN","IBCEP81",82,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",83,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",84,0)
TAXDEF(IBIEN399) ; Get Taxonomy for Default Division
"RTN","IBCEP81",85,0)
 I IBIEN399="" Q U
"RTN","IBCEP81",86,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,TAX
"RTN","IBCEP81",87,0)
 S IBDIV=$$GET1^DIQ(399,IBIEN399_",",.22,"I")
"RTN","IBCEP81",88,0)
 S IBEVDT=$$GET1^DIQ(399,IBIEN399_",",.03,"I")
"RTN","IBCEP81",89,0)
 S IBORG=$P($$SITE^VASITE(IBEVDT,IBDIV),U)
"RTN","IBCEP81",90,0)
 Q $$TAXORG^XUSTAX(IBORG)
"RTN","IBCEP81",91,0)
 ;
"RTN","IBCEP81",92,0)
 ; NPIUSED - Extrinsic function to determine whether a given NPI is already being used in files 200, 4, or 355.93.
"RTN","IBCEP81",93,0)
 ;
"RTN","IBCEP81",94,0)
 ; Input
"RTN","IBCEP81",95,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",96,0)
 ;    IBOLDNPI - NPI that is being replaced or deleted
"RTN","IBCEP81",97,0)
 ;    IBIEN - entry number for file 355.93 of entry being edited
"RTN","IBCEP81",98,0)
 ;    IBCHECK - Is this a new NPI entry or existing
"RTN","IBCEP81",99,0)
 ;    IBKEY - They security key XUSNPIMTL
"RTN","IBCEP81",100,0)
 ; Output
"RTN","IBCEP81",101,0)
 ;    1 = NPI is already being used.
"RTN","IBCEP81",102,0)
 ;    0 = NPI is not currently being used.
"RTN","IBCEP81",103,0)
 ;
"RTN","IBCEP81",104,0)
NPIUSED(IBNPI,IBOLDNPI,IBIEN,IBCHECK,IBKEY) ; Check whether NPI is already used within files 200, 4, or 355.93.
"RTN","IBCEP81",105,0)
 N IBNOTIFY,IBVA200,DUP,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCEP81",106,0)
 S (IBNOTIFY,IBVA200,DUP)=""
"RTN","IBCEP81",107,0)
 S IBNOTIFY=$S(IBCHECK=2:1,1:$$RULES(IBNPI,IBIEN,IBOLDNPI))
"RTN","IBCEP81",108,0)
 I IBNOTIFY=0!(IBNOTIFY="") Q ""
"RTN","IBCEP81",109,0)
 ;Associating NPI to an entry in NEW PERSON file
"RTN","IBCEP81",110,0)
 ;IBNOTIFY of 14 = Replacing an NPI from NEW PERSON file with an NPI from NEW PERSON file
"RTN","IBCEP81",111,0)
 I IBNOTIFY=1!(IBNOTIFY=14) D:$G(IBOLDNPI)'=$G(IBNPI)  Q $S($G(Y)=1:0,$G(IBCHECK)=2:0,1:1)
"RTN","IBCEP81",112,0)
 . D EN^DDIOL("The NPI of "_IBNPI_" is also associated with the INDIVIDUAL provider","","!!")
"RTN","IBCEP81",113,0)
 . I $G(IBVA200)="" S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",114,0)
 . D EN^DDIOL($$GET1^DIQ(200,$P(IBVA200,U,2),.01))
"RTN","IBCEP81",115,0)
 . D EN^DDIOL(" in the NEW PERSON file.  You are trying to associate","","?0")
"RTN","IBCEP81",116,0)
 . D EN^DDIOL("it with "_$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")_" provider")
"RTN","IBCEP81",117,0)
 . D EN^DDIOL(" in the IB NON/OTHER VA BILLING PROVIDER file.","","?0"),EN^DDIOL("")
"RTN","IBCEP81",118,0)
 . S DIR(0)="Y",DIR("A")="Do you still want to add this NPI to provider "_$$GET1^DIQ(355.93,IBIEN,.01),DIR("B")="NO"
"RTN","IBCEP81",119,0)
 . S DIR("?")="Answer YES if you wish to associate the NPI from the IB NON/OTHER VA PROVIDER file with the entry in the NEW PERSON file."
"RTN","IBCEP81",120,0)
 . D ^DIR,EN^DDIOL("") Q
"RTN","IBCEP81",121,0)
 ; NPI is now or was in the past in use in File 4
"RTN","IBCEP81",122,0)
 I IBNOTIFY=9 D EN^DDIOL("The NPI of "_IBNPI_" is now, or was in the past, associated with "_$$GET1^DIQ(4,$O(^DIC(4,"ANPI",IBNPI,"")),.01),"","!!"),EN^DDIOL(" in the INSTITUTION file.") Q 1
"RTN","IBCEP81",123,0)
 ; NPI is now or was in the past in use in 355.93
"RTN","IBCEP81",124,0)
 I IBNOTIFY=11 D EN^DDIOL("The NPI of "_IBNPI_" is now, or was in the past, associated with "_$$GET1^DIQ(355.93,$$DUP(IBNPI),.01),"","!!"),EN^DDIOL(" in the IB NON/OTHER VA BILLING PROVIDER file.") Q 1
"RTN","IBCEP81",125,0)
 ;Inactive NPI in 355.93
"RTN","IBCEP81",126,0)
 I IBNOTIFY=12 D EN^DDIOL("The NPI of "_IBNPI_" is already associated with the provider "_$$GET1^DIQ(355.93,$$DUP(IBNPI),.01)_" as","","!!") D  Q 1
"RTN","IBCEP81",127,0)
 . D EN^DDIOL("INACTIVE in the IB NON/OTHER VA BILLING PROVIDER file.")
"RTN","IBCEP81",128,0)
 . D EN^DDIOL("You are updating "_$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:""),"","!!")
"RTN","IBCEP81",129,0)
 . D EN^DDIOL("in the IB NON/OTHER VA BILLING PROVIDER file.")
"RTN","IBCEP81",130,0)
 ;Inactive NPI in NEW PERSON file
"RTN","IBCEP81",131,0)
 I IBNOTIFY=13 D  Q 1
"RTN","IBCEP81",132,0)
 .D EN^DDIOL("The NPI of "_IBNPI_" is also associated with the INDIVIDUAL provider","","!!"),EN^DDIOL($$GET1^DIQ(200,$P(IBVA200,U,2),.01)_" in the NEW PERSON file."),EN^DDIOL("The NPI is INACTIVE and may not be used."),EN^DDIOL("")
"RTN","IBCEP81",133,0)
 Q ""
"RTN","IBCEP81",134,0)
 ;
"RTN","IBCEP81",135,0)
 ; DUP - Extrinsic function to determine whether a given NPI is already being used in file# 355.93.
"RTN","IBCEP81",136,0)
 ;
"RTN","IBCEP81",137,0)
 ; Input
"RTN","IBCEP81",138,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",139,0)
 ; Output
"RTN","IBCEP81",140,0)
 ;    NULL - NPI is not currently being used.
"RTN","IBCEP81",141,0)
 ;    Otherwise, the IEN of the entry in file# 355.93 associated with that NPI.
"RTN","IBCEP81",142,0)
 ;
"RTN","IBCEP81",143,0)
DUP(IBNPI) ; Check whether this is a duplicate NPI within file# 355.93
"RTN","IBCEP81",144,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",145,0)
 Q $O(^IBA(355.93,"NPIHISTORY",IBNPI,""))
"RTN","IBCEP81",146,0)
 ;
"RTN","IBCEP81",147,0)
 ; DISPTAX - Function to display extra Taxonomy info in the input templates in screens 6, 7, and 8 in IB EDIT BILLING INFO
"RTN","IBCEP81",148,0)
 ; 
"RTN","IBCEP81",149,0)
 ; Input
"RTN","IBCEP81",150,0)
 ;    IBIEN - IEN of the entry in file 8932.1 to be displayed
"RTN","IBCEP81",151,0)
 ;    IBTXT - (optional) extra text to be displayed before the entry
"RTN","IBCEP81",152,0)
 ;            (i.e. "Billing Provider" or "Non-VA Facility")
"RTN","IBCEP81",153,0)
 ;
"RTN","IBCEP81",154,0)
DISPTAX(IBIEN,IBTXT) ; Display extra Taxonomy info (when available)
"RTN","IBCEP81",155,0)
 N IBX
"RTN","IBCEP81",156,0)
 I $G(IBIEN)="" Q
"RTN","IBCEP81",157,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,1) I IBX]"" W !,"    ",$G(IBTXT)," Classification: ",IBX
"RTN","IBCEP81",158,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,2) I IBX]"" W !,"    ",$G(IBTXT)," Area of Specialization: ",IBX
"RTN","IBCEP81",159,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,8) I IBX]"" W !,"    ",$G(IBTXT)," Specialty Code: ",IBX
"RTN","IBCEP81",160,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,6) W !,"    ",$G(IBTXT)," Taxonomy X12 Code: ",IBX
"RTN","IBCEP81",161,0)
 Q
"RTN","IBCEP81",162,0)
RULES(IBNPI,IBIEN,IBOLDNPI) ;Verify that the NPI meets all rules for usage
"RTN","IBCEP81",163,0)
 N IBIEN1,IBIEN2,DUP
"RTN","IBCEP81",164,0)
 I $G(IBOLDNPI)>0,IBNPI=IBOLDNPI,$D(^VA(200,"ANPI",IBOLDNPI)) Q 1
"RTN","IBCEP81",165,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",166,0)
 S DUP=$$DUP(IBNPI)
"RTN","IBCEP81",167,0)
 ;Duplicate in 355.93
"RTN","IBCEP81",168,0)
 I DUP'="",DUP'=IBIEN Q 11
"RTN","IBCEP81",169,0)
 ;Replacing an NPI that is associated to NEW PERSON file with another NPI that is associated with the NEW PERSON file
"RTN","IBCEP81",170,0)
 I $G(IBOLDNPI)>0,$D(^VA(200,"ANPI",IBOLDNPI)),$D(^VA(200,"ANPI",IBNPI)) Q 14
"RTN","IBCEP81",171,0)
 ;Already an inactive NPI
"RTN","IBCEP81",172,0)
 S IBIEN2=$O(^IBA(355.93,"NPIHISTORY",IBNPI,"")) D:$G(IBIEN2)'=""
"RTN","IBCEP81",173,0)
 . S IBIEN1=$O(^IBA(355.93,IBIEN2,"NPISTATUS","C",IBNPI,""),-1)
"RTN","IBCEP81",174,0)
 I $G(IBIEN1)'="",$D(^IBA(355.93,IBIEN2,"NPISTATUS","NPISTATUS",0,IBIEN1)) Q 12
"RTN","IBCEP81",175,0)
 ;Check for existence in New Person 
"RTN","IBCEP81",176,0)
 ;file (#200) and/or Institution file (#4)
"RTN","IBCEP81",177,0)
 S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",178,0)
 I $E($P(IBVA200,U,4),1,8)="Inactive" Q 13
"RTN","IBCEP81",179,0)
 I $P(IBVA200,U)="Individual_ID",$P(IBVA200,U,4)["Active" Q 1
"RTN","IBCEP81",180,0)
 I $P(IBVA200,U)="Organization_ID",$P(IBVA200,U,4)["Active" Q 9
"RTN","IBCEP81",181,0)
 I $D(^DIC(4,"ANPI",IBNPI)) Q 9
"RTN","IBCEP81",182,0)
 Q 0
"RTN","IBCEP81",183,0)
 ;
"RTN","IBCEP81",184,0)
PRENPI(IBIEN) ;Pre-NPI edit messages
"RTN","IBCEP81",185,0)
 N IBNPI,IBVA200
"RTN","IBCEP81",186,0)
 Q:$G(IBIEN)=""
"RTN","IBCEP81",187,0)
 S IBNPI=$P($G(^IBA(355.93,IBIEN,0)),U,14)
"RTN","IBCEP81",188,0)
 Q:$G(IBNPI)=""
"RTN","IBCEP81",189,0)
 S IBVA200=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",190,0)
 ;NPI that exists in 355.93 also is used in 200
"RTN","IBCEP81",191,0)
 I $P(IBVA200,U,1)="Individual_ID",$P(IBVA200,U,4)["Active" D
"RTN","IBCEP81",192,0)
 . W !!,"The NPI of ",IBNPI," is also associated with the INDIVIDUAL provider ",!,$$GET1^DIQ(200,$P(IBVA200,U,2),.01)," in the NEW PERSON file."
"RTN","IBCEP81",193,0)
 . W !!,"You are updating ",$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")," provider in the"
"RTN","IBCEP81",194,0)
 . W !,"IB NON/OTHER VA BILLING PROVIDER file.",!
"RTN","IBCEP81",195,0)
 ;The NPI used in 355.93 is inactive in 200
"RTN","IBCEP81",196,0)
 I $P(IBVA200,U,1)="Individual_ID",$P(IBVA200,U,4)["Inactive" D
"RTN","IBCEP81",197,0)
 . W !!,"The NPI of ",IBNPI," is also associated with the INDIVIDUAL provider ",!,$$GET1^DIQ(200,$P(IBVA200,U,2),.01)," as INACTIVE in the NEW PERSON file."
"RTN","IBCEP81",198,0)
 . W !!,"You are updating ",$S($$GET1^DIQ(355.93,IBIEN,.02,"I")=1:"a FACILITY/GROUP",$$GET1^DIQ(355.93,IBIEN,.02,"I")=2:"an INDIVIDUAL",1:"a")," provider in the"
"RTN","IBCEP81",199,0)
 . W !,"IB NON/OTHER VA BILLING PROVIDER file.",!
"RTN","IBCEP81",200,0)
 Q
"RTN","IBCEPB")
0^8^B10650639^B7676163
"RTN","IBCEPB",1,0)
IBCEPB ;ALB/WCJ - Insurance company ID parameters ;22-DEC-2005
"RTN","IBCEPB",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348,349,400**;21-MAR-94;Build 52
"RTN","IBCEPB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEPB",4,0)
EN ; -- main entry point for IBCE INSCO ID MAINT
"RTN","IBCEPB",5,0)
 D EN^VALM("IBCE INSCO ID MAINT")
"RTN","IBCEPB",6,0)
 Q
"RTN","IBCEPB",7,0)
 ;
"RTN","IBCEPB",8,0)
HDR ; -- header code
"RTN","IBCEPB",9,0)
 N PCF,PCDISP
"RTN","IBCEPB",10,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",11,0)
 S PCF=$P($G(^DIC(36,+IBCNS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEPB",12,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBCNS,0)),U)_PCDISP
"RTN","IBCEPB",13,0)
 Q
"RTN","IBCEPB",14,0)
 ;
"RTN","IBCEPB",15,0)
INIT ; Initialize
"RTN","IBCEPB",16,0)
 D CLEAN^VALM10
"RTN","IBCEPB",17,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",18,0)
 N IBLCT,IBCNS4
"RTN","IBCEPB",19,0)
 S IBLCT=0
"RTN","IBCEPB",20,0)
 ; Display the list
"RTN","IBCEPB",21,0)
 D SET1(.IBLCT,"Attending/Rendering Provider Secondary ID")
"RTN","IBCEPB",22,0)
 D SET1(.IBLCT,"Default ID (1500) : "_$$GET1^DIQ(36,IBCNS,4.01))
"RTN","IBCEPB",23,0)
 D SET1(.IBLCT,"Default ID (UB-04): "_$$GET1^DIQ(36,IBCNS,4.02))
"RTN","IBCEPB",24,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.03))
"RTN","IBCEPB",25,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",26,0)
 D SET1(.IBLCT,"Referring Provider Secondary ID")
"RTN","IBCEPB",27,0)
 D SET1(.IBLCT,"Default ID (1500): "_$$GET1^DIQ(36,IBCNS,4.04))
"RTN","IBCEPB",28,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.05))
"RTN","IBCEPB",29,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",30,0)
 D SET1(.IBLCT,"Billing Provider Secondary IDs")
"RTN","IBCEPB",31,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (1500)? : "_$$GET1^DIQ(36,IBCNS,4.06))
"RTN","IBCEPB",32,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (UB-04)?: "_$$GET1^DIQ(36,IBCNS,4.08))
"RTN","IBCEPB",33,0)
 D SET1(.IBLCT,"Transmit no Billing Provider Sec ID for the following Electronic Plan Types:")
"RTN","IBCEPB",34,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCEPB",35,0)
 F I=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCEPB",36,0)
 . D SET1(.IBLCT,TAR("DILIST",1,I))
"RTN","IBCEPB",37,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",38,0)
 D SET1(.IBLCT,"Billing Provider/Service Facility")
"RTN","IBCEPB",39,0)
 S IBCNS4=$G(^DIC(36,+IBCNS,4))
"RTN","IBCEPB",40,0)
 D SET1(.IBLCT,"Always use main VAMC as Billing Provider (1500)?: "_$$EXPAND^IBTRE(36,4.11,+$P(IBCNS4,U,11)))
"RTN","IBCEPB",41,0)
 D SET1(.IBLCT,"Always use main VAMC as Billing Provider (UB-04)?: "_$$EXPAND^IBTRE(36,4.12,+$P(IBCNS4,U,12)))
"RTN","IBCEPB",42,0)
 I $P(IBCNS4,U,11)!($P(IBCNS4,U,12)) D
"RTN","IBCEPB",43,0)
 .D SET1(.IBLCT,"Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7)))
"RTN","IBCEPB",44,0)
 .D SET1(.IBLCT,"Use the Billing Prov (VAMC) Name and Street Address?: "_$$EXPAND^IBTRE(36,4.13,+$P(IBCNS4,U,13)))
"RTN","IBCEPB",45,0)
 .Q
"RTN","IBCEPB",46,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEPB",47,0)
 Q
"RTN","IBCEPB",48,0)
 ;
"RTN","IBCEPB",49,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEPB",50,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT)
"RTN","IBCEPB",51,0)
 Q
"RTN","IBCEPB",52,0)
 ;
"RTN","IBCEPB",53,0)
EXPND ;
"RTN","IBCEPB",54,0)
 Q
"RTN","IBCEPB",55,0)
HELP ;
"RTN","IBCEPB",56,0)
 Q
"RTN","IBCEPB",57,0)
EXIT ;
"RTN","IBCEPB",58,0)
 D CLEAN^VALM10
"RTN","IBCEPB",59,0)
 Q
"RTN","IBCEPB",60,0)
 ;
"RTN","IBCEPB",61,0)
IDPARAM ;
"RTN","IBCEPB",62,0)
 D FULL^VALM1
"RTN","IBCEPB",63,0)
 N DIE,DA,DR
"RTN","IBCEPB",64,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",65,0)
 S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]"
"RTN","IBCEPB",66,0)
 I '$D(IBY) N IBY S IBY=",12,"
"RTN","IBCEPB",67,0)
 D ^DIE K DIE
"RTN","IBCEPB",68,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",69,0)
 D INIT
"RTN","IBCEPB",70,0)
 S VALMBCK="R"
"RTN","IBCEPB",71,0)
 Q
"RTN","IBCEPB",72,0)
 ;
"RTN","IBCEPB",73,0)
BILLPRVP ;
"RTN","IBCEPB",74,0)
 D FULL^VALM1
"RTN","IBCEPB",75,0)
 D EN^IBCEPC
"RTN","IBCEPB",76,0)
 D INIT
"RTN","IBCEPB",77,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",78,0)
 S VALMBCK="R"
"RTN","IBCEPB",79,0)
 Q
"RTN","IBCESRV1")
0^16^B34936723^B37815600
"RTN","IBCESRV1",1,0)
IBCESRV1 ;ALB/TMP - Server interface to IB from Austin ;03/05/96
"RTN","IBCESRV1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,191,400**;21-MAR-94;Build 52
"RTN","IBCESRV1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCESRV1",4,0)
 Q
"RTN","IBCESRV1",5,0)
PERROR(IBERR,IBTDA,IBEMG,IBXMZ) ; Process Errors - Send bulletin to mail group
"RTN","IBCESRV1",6,0)
 ; IBERR = Error text array
"RTN","IBCESRV1",7,0)
 ; IBTDA = Message File Entry # array
"RTN","IBCESRV1",8,0)
 ; IBEMG = name of the mail group to which these errors should be sent
"RTN","IBCESRV1",9,0)
 ; IBXMZ = the internal entry # of the mailman message (file 3.9)
"RTN","IBCESRV1",10,0)
 N CT,XMDUZ,XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,IBXM,XMZ,XMERR
"RTN","IBCESRV1",11,0)
 ;
"RTN","IBCESRV1",12,0)
 S CT=0
"RTN","IBCESRV1",13,0)
 ;
"RTN","IBCESRV1",14,0)
 I $G(IBEMG)="" S CT=CT+1,IBXM(CT)=$P($T(ERROR+2),";;",2),XMTO(.5)=""
"RTN","IBCESRV1",15,0)
 ;
"RTN","IBCESRV1",16,0)
 I $D(IBEMG) D
"RTN","IBCESRV1",17,0)
 . S:IBEMG="" IBEMG="IB EDI"
"RTN","IBCESRV1",18,0)
 . ;
"RTN","IBCESRV1",19,0)
 . S:$E(IBEMG,1,2)'="G." IBEMG="G."_IBEMG
"RTN","IBCESRV1",20,0)
 . ;
"RTN","IBCESRV1",21,0)
 . S XMTO("I:"_IBEMG)=""
"RTN","IBCESRV1",22,0)
 ;
"RTN","IBCESRV1",23,0)
 I $O(XMTO(.5))="" S XMTO("I:G.IB EDI")=""
"RTN","IBCESRV1",24,0)
 D EMFORM(CT,.IBERR,.IBXM,IBXMZ)
"RTN","IBCESRV1",25,0)
 ;
"RTN","IBCESRV1",26,0)
 S XMDUZ=""
"RTN","IBCESRV1",27,0)
 S XMSUBJ="EDI RETURN MESSAGE ROUTER ERROR",XMBODY="IBXM"
"RTN","IBCESRV1",28,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCESRV1",29,0)
 Q
"RTN","IBCESRV1",30,0)
 ;
"RTN","IBCESRV1",31,0)
EMFORM(CT,IBERR,IBXM,IBXMZ) ;
"RTN","IBCESRV1",32,0)
 ; INPUT:
"RTN","IBCESRV1",33,0)
 ;   CT = the number of lines previously populated in error message
"RTN","IBCESRV1",34,0)
 ;   IBERR = the array of errors
"RTN","IBCESRV1",35,0)
 ;
"RTN","IBCESRV1",36,0)
 ; OUTPUT:
"RTN","IBCESRV1",37,0)
 ;   IBXM = the array containing the complete error text
"RTN","IBCESRV1",38,0)
 ;
"RTN","IBCESRV1",39,0)
 N THDR,TDATE,TDATE1,TTIME,TTIME1,TTYP,Z,Z0,Z1,BATCH,BILL
"RTN","IBCESRV1",40,0)
 ;
"RTN","IBCESRV1",41,0)
 S IBTDA=+$O(IBTDA("")),THDR=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCESRV1",42,0)
 ;
"RTN","IBCESRV1",43,0)
 I THDR'="" D  ;Messages partially filed
"RTN","IBCESRV1",44,0)
 . S TDATE=$P(THDR,U,10),TTIME=$P(TDATE,".",2)_"000000",TDATE=$$FMTE^XLFDT(TDATE,"2D")
"RTN","IBCESRV1",45,0)
 . S TDATE1=$P(THDR,U,3),TTIME1=$P(TDATE1,".",2)_"000000",TDATE1=$$FMTE^XLFDT(TDATE1,"2D")
"RTN","IBCESRV1",46,0)
 . S TTYP=$G(^IBE(364.3,+$P(THDR,U,2),0)),BATCH=$P(THDR,U,4),BILL=$P(THDR,U,5)
"RTN","IBCESRV1",47,0)
 ;
"RTN","IBCESRV1",48,0)
 I THDR="" D  ;No messages filed
"RTN","IBCESRV1",49,0)
 . S TDATE=$G(^TMP("IBERR",$J,"DATE")),TTIME=$P(TDATE,".",2)_"000000",TDATE=$$FMTE^XLFDT($P(TDATE,"."),"2D")
"RTN","IBCESRV1",50,0)
 . S TDATE1=$$NOW^XLFDT(),TTIME1=$P(TDATE1,".",2)_"000000",TDATE1=$$FMTE^XLFDT($P(TDATE1,"."),"2D")
"RTN","IBCESRV1",51,0)
 . S TTYP=$G(^TMP("IBERR",$J,"TYPE")),BATCH=$G(^TMP("IBERR",$J,"BATCH")),BILL=$G(^TMP("IBERR",$J,"BILL"))
"RTN","IBCESRV1",52,0)
 ;
"RTN","IBCESRV1",53,0)
 S CT=CT+1
"RTN","IBCESRV1",54,0)
 S IBXM(CT)="             Return Message Code: "_$P(TTYP,U)_"  "_$P(TTYP,U,5)
"RTN","IBCESRV1",55,0)
 ;
"RTN","IBCESRV1",56,0)
 S CT=CT+2
"RTN","IBCESRV1",57,0)
 S IBXM(CT-1)=" ",IBXM(CT)=$J("",13)_"Return Message Date: "_TDATE_"    Message Time: "_$E(TTIME,1,2)_":"_$E(TTIME,3,4)_":"_$E(TTIME,5,6),CT=CT+1
"RTN","IBCESRV1",58,0)
 ;
"RTN","IBCESRV1",59,0)
 S CT=CT+2
"RTN","IBCESRV1",60,0)
 S IBXM(CT-1)=" ",IBXM(CT)=$J("",21)_"Update Date: "_TDATE1_"     Update Time: "_$E(TTIME1,1,2)_":"_$E(TTIME1,3,4)_":"_$E(TTIME1,5,6)
"RTN","IBCESRV1",61,0)
 ;
"RTN","IBCESRV1",62,0)
 I BATCH S CT=CT+2,IBXM(CT-1)=" ",IBXM(CT)=$J("",25)_"Batch #: "_$P($G(^IBA(364.1,BATCH,0)),U)
"RTN","IBCESRV1",63,0)
 ;
"RTN","IBCESRV1",64,0)
 I BILL S CT=CT+2,IBXM(CT-1)=" ",IBXM(CT)=$J("",26)_"Bill #: "_$P($G(^DGCR(399,+$G(^IBA(364,+BILL,0)),0)),U)
"RTN","IBCESRV1",65,0)
 ;
"RTN","IBCESRV1",66,0)
 I IBTDA S CT=CT+2,IBXM(CT-1)=" ",IBXM(CT)=$J("",11)_"Return Message File #(s): " D
"RTN","IBCESRV1",67,0)
 . S (Z,Z0)=0 F  S Z=$O(IBTDA(Z)) Q:'Z  I IBTDA(Z) S IBXM(CT)=IBXM(CT)_$S(Z0:",",1:"")_Z,Z0=1
"RTN","IBCESRV1",68,0)
 ;
"RTN","IBCESRV1",69,0)
 S CT=CT+2,IBXM(CT-1)=" ",IBXM(CT)=$J("",15)_"Mailman Message #: "_$G(IBXMZ)
"RTN","IBCESRV1",70,0)
 ;
"RTN","IBCESRV1",71,0)
 I $G(IBERR)'="",IBERR?1A.E S CT=CT+2,IBXM(CT-1)=" ",IBXM(CT)=IBERR
"RTN","IBCESRV1",72,0)
 I $G(^TMP("IBERR",$J,"TEXT"))'="" S CT=CT+2,IBXM(CT)=^("TEXT"),IBXM(CT-1)=" "
"RTN","IBCESRV1",73,0)
 ;
"RTN","IBCESRV1",74,0)
 S Z="" F  S Z=$O(IBERR(Z)) Q:Z=""  S:$G(^TMP("IBERR",$J,"TEXT"))="" CT=CT+1,IBXM(CT)=" " S Z0="" F  S Z0=$O(IBERR(Z,Z0)) Q:Z0=""  I $G(IBERR(Z,Z0))'="",IBERR(Z,Z0)'=" " S CT=CT+1,IBXM(CT)=IBERR(Z,Z0)
"RTN","IBCESRV1",75,0)
 S Z=0 F  S Z=$O(^TMP("IBERR",$J,"MSG",Z)) Q:'Z  S CT=CT+1,IBXM(CT)=^(Z)
"RTN","IBCESRV1",76,0)
 ;
"RTN","IBCESRV1",77,0)
 S Z=+$O(^TMP("IB-HOLD",$J,""),-1) S:'Z Z="cannot be determined"
"RTN","IBCESRV1",78,0)
 I $S('Z:1,'$D(^TMP("IBMSG",$J,"BATCH",0,"D",0)):0,1:+$O(^TMP("IBMSG",$J,"BATCH",0,"D",0,""),-1)'=Z) S CT=CT+1,IBXM(CT)="Msg Line: "_$G(^TMP("IB-HOLD",$J,Z))
"RTN","IBCESRV1",79,0)
 I $O(^IBA(364.2,IBTDA,2,0))!$O(^TMP("IBERR",$J,"MSG",0))!($O(^TMP("IB-HOLD",$J,0))) S CT=CT+2,IBXM(CT-1)=" ",IBXM(CT)="Return Message Text:"
"RTN","IBCESRV1",80,0)
 ;
"RTN","IBCESRV1",81,0)
 I IBTDA D
"RTN","IBCESRV1",82,0)
 . S Z=0 F  S Z=$O(^IBA(364.2,+IBTDA,2,Z)) Q:'Z  I $G(^(Z,0))'="" S CT=CT+1,IBXM(CT)=^(0)
"RTN","IBCESRV1",83,0)
 Q
"RTN","IBCESRV1",84,0)
 ;
"RTN","IBCESRV1",85,0)
ERROR ;
"RTN","IBCESRV1",86,0)
 ;;Invalid mailgroup designated for EDI errors
"RTN","IBCESRV1",87,0)
 ;;Message header error
"RTN","IBCESRV1",88,0)
 ;
"RTN","IBCESRV1",89,0)
EXTERR(IBERR,IBTDA,IBE) ; Put error into error array
"RTN","IBCESRV1",90,0)
 N IBZ,Q
"RTN","IBCESRV1",91,0)
 S IBE="",IBERR=4,IBTDA(IBTDA)=1
"RTN","IBCESRV1",92,0)
 S IBZ=0 F  S IBZ=$O(IBE("DIERR",IBZ)) Q:'IBZ  S Q=$G(IBE("DIERR",IBZ,"TEXT",1)) I $L(Q),$L(Q)+$L(IBE)<99 S IBE=IBE_Q_";;"
"RTN","IBCESRV1",93,0)
 Q
"RTN","IBCESRV1",94,0)
 ;
"RTN","IBCESRV1",95,0)
ERRUPD(IBGBL,IBERR) ; Set up global array to hold message data
"RTN","IBCESRV1",96,0)
 ;
"RTN","IBCESRV1",97,0)
 N Z,Z0,Z1,Z11,Z2,Z3,CT,IBE,IBTXN1
"RTN","IBCESRV1",98,0)
 ;
"RTN","IBCESRV1",99,0)
 K ^TMP("IBERR",$J)
"RTN","IBCESRV1",100,0)
 S CT=0,IBTXN1=$G(@IBGBL)
"RTN","IBCESRV1",101,0)
 ;
"RTN","IBCESRV1",102,0)
 S ^TMP("IBERR",$J,"DATE")=IBDATE
"RTN","IBCESRV1",103,0)
 S ^TMP("IBERR",$J,"TYPE")=$P(IBTXN1,U)
"RTN","IBCESRV1",104,0)
 S ^TMP("IBERR",$J,"SUBJ")=$G(IBD("SUBJ"))
"RTN","IBCESRV1",105,0)
 ;
"RTN","IBCESRV1",106,0)
 I $G(IBERR),IBERR<20 D
"RTN","IBCESRV1",107,0)
 . S Z="ERROR+"_IBERR_"^IBCESRV"
"RTN","IBCESRV1",108,0)
 . S IBE=$P($T(@Z),";;",2)
"RTN","IBCESRV1",109,0)
 . I IBE'="" S ^TMP("IBERR",$J,"TEXT")=IBE
"RTN","IBCESRV1",110,0)
 ;
"RTN","IBCESRV1",111,0)
 S Z="" F  S Z=$O(IBERR(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBERR(Z,Z0)) Q:Z0=""  S IBE=$G(IBERR(Z,Z0)) D
"RTN","IBCESRV1",112,0)
 . I $L(IBE) S CT=CT+1,^TMP("IBERR",$J,"MSG",CT)=$S(IBE:$P($T(ERROR+IBE),";;",2),1:IBE)
"RTN","IBCESRV1",113,0)
 . S Z11="" F  S Z11=$O(IBERR(Z,Z0,Z11)) Q:Z11=""  S CT=CT+1,^TMP("IBERR",$J,"MSG",CT)=$G(IBERR(Z,Z0,Z11)) D
"RTN","IBCESRV1",114,0)
 .. S IBTXN1=$G(@IBGBL@(Z,Z0,0))
"RTN","IBCESRV1",115,0)
 .. S:$G(^TMP("IBERR",$J,"BATCH"))="" ^("BATCH")=$S(Z0="BATCH":Z11,1:"")
"RTN","IBCESRV1",116,0)
 .. S:$G(^TMP("IBERR",$J,"BILL"))="" ^("BILL")=$S(Z0="CLAIM":Z11,1:"")
"RTN","IBCESRV1",117,0)
 .. S:$G(^TMP("IBERR",$J,"TYPE"))="" ^("TYPE")=$P(IBTXN1,U,6)
"RTN","IBCESRV1",118,0)
 . S Z1=""
"RTN","IBCESRV1",119,0)
 . F  S Z1=$O(@IBGBL@(Z,Z0,"D",Z1)) Q:Z1=""  S Z2=0 F  S Z2=$O(@IBGBL@(Z,Z0,"D",Z1,Z2)) Q:'Z2  S Z3=$P(@IBGBL@(Z,Z0,"D",Z1,Z2),"##RAW DATA: ",2) I Z3'="" D
"RTN","IBCESRV1",120,0)
 .. S CT=CT+1,^TMP("IBERR",$J,"MSG",CT)=Z3
"RTN","IBCESRV1",121,0)
 ;
"RTN","IBCESRV1",122,0)
 I $D(@IBGBL@("BATCH",0)) D
"RTN","IBCESRV1",123,0)
 . S Z2="" F  S Z2=$O(@IBGBL@("BATCH",0,"D",0,Z2)) Q:Z2=""  S Z3=$P(@IBGBL@("BATCH",0,"D",0,Z2),"##RAW DATA: ",2) I Z3'="" D
"RTN","IBCESRV1",124,0)
 .. S CT=CT+1,^TMP("IBERR",$J,"MSG",CT)=Z3
"RTN","IBCESRV1",125,0)
 ;
"RTN","IBCESRV1",126,0)
 Q
"RTN","IBCESRV1",127,0)
 ;
"RTN","IBCESRV1",128,0)
DKILL(IBXMZ) ; Delete server mail message from postmaster mailbox
"RTN","IBCESRV1",129,0)
 ;
"RTN","IBCESRV1",130,0)
 D ZAPSERV^XMXAPI("S.IBCE MESSAGES SERVER",IBXMZ)
"RTN","IBCESRV1",131,0)
 ;
"RTN","IBCESRV1",132,0)
 Q
"RTN","IBCESRV1",133,0)
 ;
"RTN","IBCESRV1",134,0)
TRTN(IBTDA) ; Process incoming EDI message
"RTN","IBCESRV1",135,0)
 ; IBTDA = internal entry # of message (file 364.2)
"RTN","IBCESRV1",136,0)
 ; This procedure is called from ADD^IBCESRV with variable IBRTN holding the TAG^ROUTINE to be invoked
"RTN","IBCESRV1",137,0)
 NEW IBA,IBB,IBGBL,IBERR        ; protect looping variables from ADD^IBCESRV
"RTN","IBCESRV1",138,0)
 D @IBRTN
"RTN","IBCESRV1",139,0)
 Q
"RTN","IBCESRV1",140,0)
 ;
"RTN","IBCESRV1",141,0)
TRADEL(X) ; Process to delete message from temporary message holding file
"RTN","IBCESRV1",142,0)
 ;
"RTN","IBCESRV1",143,0)
 N DIK,DA,Y S DIK="^IBA(364.2,",DA=X D ^DIK
"RTN","IBCESRV1",144,0)
 Q
"RTN","IBCESRV1",145,0)
 ;
"RTN","IBCESRV3")
0^17^B11481181^B11136630
"RTN","IBCESRV3",1,0)
IBCESRV3 ;ALB/TMP - Server based Auto-update utilities - IB EDI ;03/05/96
"RTN","IBCESRV3",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,400**;21-MAR-94;Build 52
"RTN","IBCESRV3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCESRV3",4,0)
 ; IA 4129 for call to DUZ^XUP
"RTN","IBCESRV3",5,0)
 Q
"RTN","IBCESRV3",6,0)
 ;
"RTN","IBCESRV3",7,0)
EOB835 ; Explanation of Benefits - auto update
"RTN","IBCESRV3",8,0)
 ; Input expected: IBTDA = the ien of the message entry in file 364.2
"RTN","IBCESRV3",9,0)
 ;
"RTN","IBCESRV3",10,0)
 ; This is the background task that is queued to run by TaskManager.
"RTN","IBCESRV3",11,0)
 ; This procedure is called via indirection in TRTN^IBCESRV1 which is
"RTN","IBCESRV3",12,0)
 ; called by ADD^IBCESRV.
"RTN","IBCESRV3",13,0)
 ;
"RTN","IBCESRV3",14,0)
 N IB0,IBBDA,IBBILL,IBMSG,IBFLAG,IBTYP,IBBST,DR,DA,DIE,Z,MRAUSER
"RTN","IBCESRV3",15,0)
 ;
"RTN","IBCESRV3",16,0)
 Q:'$G(IBTDA)
"RTN","IBCESRV3",17,0)
 S IB0=$G(^IBA(364.2,IBTDA,0)),IBBDA=+$P(IB0,U,4)  ; Batch ien
"RTN","IBCESRV3",18,0)
 S IBTYP=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U)      ; IB message type
"RTN","IBCESRV3",19,0)
 Q:IBTYP'="835EOB"
"RTN","IBCESRV3",20,0)
 ;
"RTN","IBCESRV3",21,0)
 ; The MRA Project is using a specific non-human user for all
"RTN","IBCESRV3",22,0)
 ; 835 EOB/MRA filing processes.  Change the DUZ to be this user.
"RTN","IBCESRV3",23,0)
 ; *** VA SACC approved this exemption 5-June-2003 ***
"RTN","IBCESRV3",24,0)
 ; *** Integration Agreement 4129 - Activated on 30-June-2003 ***
"RTN","IBCESRV3",25,0)
 ;
"RTN","IBCESRV3",26,0)
 S MRAUSER=$$MRAUSR^IBCEMU1()
"RTN","IBCESRV3",27,0)
 I MRAUSER>0,$$ISITMRA(IBTDA) NEW DUZ D DUZ^XUP(MRAUSER)
"RTN","IBCESRV3",28,0)
 ;
"RTN","IBCESRV3",29,0)
 D UPDEOB(IBTDA)
"RTN","IBCESRV3",30,0)
 ;
"RTN","IBCESRV3",31,0)
 Q
"RTN","IBCESRV3",32,0)
 ;
"RTN","IBCESRV3",33,0)
UPDEOB(IBTDA) ; Explanation of Benefits or MRA
"RTN","IBCESRV3",34,0)
 ;   Update data base from msg (store EOB in file 361.1)
"RTN","IBCESRV3",35,0)
 ; IBTDA = ien of message in file 364.2
"RTN","IBCESRV3",36,0)
 ;
"RTN","IBCESRV3",37,0)
 N IBBILL,PRCASV,DA,DIE,DR,DA,X,Y,IBFLAG,IB0,IBS
"RTN","IBCESRV3",38,0)
 N IBEOB,IBAUTO,IBIFN,IBERRMSG
"RTN","IBCESRV3",39,0)
 ;
"RTN","IBCESRV3",40,0)
 D UPDMSG^IBCESRV2(IBTDA,"U",0)    ; updating data in 364.2
"RTN","IBCESRV3",41,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCESRV3",42,0)
 ;
"RTN","IBCESRV3",43,0)
 I '$P(IB0,U,5) G UPDEOBX          ; no transmit bill# in file 364
"RTN","IBCESRV3",44,0)
 S IBEOB=$$UPDEOB^IBCEOB(IBTDA)    ; new entry in file 361.1
"RTN","IBCESRV3",45,0)
 I 'IBEOB G UPDEOBX                ;   exit if some failure
"RTN","IBCESRV3",46,0)
 ;
"RTN","IBCESRV3",47,0)
 ; update transmission status of transmission Bill# in file 364
"RTN","IBCESRV3",48,0)
 ;   status is closed (code "Z")
"RTN","IBCESRV3",49,0)
 D BILLSTAC^IBCESRV2($P(IB0,U,5),"Z") ;Upd indiv transmitted bill
"RTN","IBCESRV3",50,0)
 ;
"RTN","IBCESRV3",51,0)
 ; Delete the entry from file 364.2
"RTN","IBCESRV3",52,0)
 D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCESRV3",53,0)
 ;
"RTN","IBCESRV3",54,0)
 ; If the EOB is not a Medicare MRA, then we can stop here
"RTN","IBCESRV3",55,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)'=1 G UPDEOBX
"RTN","IBCESRV3",56,0)
 ; 
"RTN","IBCESRV3",57,0)
 ; *** Medicare MRA processing ***
"RTN","IBCESRV3",58,0)
 ;
"RTN","IBCESRV3",59,0)
 ; update the claim MRA status of the file 399 bill
"RTN","IBCESRV3",60,0)
 ; to be "C" - Valid MRA received
"RTN","IBCESRV3",61,0)
 D MRASTAT(IBEOB,"C")
"RTN","IBCESRV3",62,0)
 ;
"RTN","IBCESRV3",63,0)
 ; Invoke the EOB criteria check and attempt to create and authorize
"RTN","IBCESRV3",64,0)
 ; the secondary bill
"RTN","IBCESRV3",65,0)
 S IBAUTO=$$CRIT^IBCEMQC(IBEOB)
"RTN","IBCESRV3",66,0)
 I 'IBAUTO D AUTOMSG(IBEOB,$P(IBAUTO,U,2)) G UPDEOBX
"RTN","IBCESRV3",67,0)
 S IBIFN=$P($G(^IBA(364,+$P(IB0,U,5),0)),U,1)   ; bill# from file 364
"RTN","IBCESRV3",68,0)
 ;
"RTN","IBCESRV3",69,0)
 ; Process COB, create secondary bill
"RTN","IBCESRV3",70,0)
 S IBERRMSG=""
"RTN","IBCESRV3",71,0)
 D AUTOCOB^IBCEMQA(IBIFN,IBEOB,.IBERRMSG)
"RTN","IBCESRV3",72,0)
 I IBERRMSG'="" D AUTOMSG(IBEOB,IBERRMSG) G UPDEOBX
"RTN","IBCESRV3",73,0)
 ;
"RTN","IBCESRV3",74,0)
 ; Authorize the secondary bill
"RTN","IBCESRV3",75,0)
 D AUTH^IBCEMQA(IBIFN,.IBERRMSG)
"RTN","IBCESRV3",76,0)
 I IBERRMSG'="" D AUTOMSG(IBEOB,IBERRMSG) G UPDEOBX
"RTN","IBCESRV3",77,0)
 ;
"RTN","IBCESRV3",78,0)
UPDEOBX ;
"RTN","IBCESRV3",79,0)
 S ZTREQ="@"
"RTN","IBCESRV3",80,0)
 Q
"RTN","IBCESRV3",81,0)
 ;
"RTN","IBCESRV3",82,0)
AUTOMSG(IBEOB,MSG) ; File the automatic bill generation failure message
"RTN","IBCESRV3",83,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DQ,X,Y
"RTN","IBCESRV3",84,0)
 S IBEOB=+$G(IBEOB),MSG=$G(MSG)
"RTN","IBCESRV3",85,0)
 I '$D(^IBM(361.1,IBEOB)) G AUMSGX
"RTN","IBCESRV3",86,0)
 I MSG="" G AUMSGX
"RTN","IBCESRV3",87,0)
 S DIE=361.1,DA=IBEOB,DR="30.01////"_MSG_";30.02////"_$$NOW^XLFDT
"RTN","IBCESRV3",88,0)
 D ^DIE
"RTN","IBCESRV3",89,0)
AUMSGX ;
"RTN","IBCESRV3",90,0)
 Q
"RTN","IBCESRV3",91,0)
 ;
"RTN","IBCESRV3",92,0)
MRASTAT(IBEOB,STAT) ; Update the claim MRA status field on the bill
"RTN","IBCESRV3",93,0)
 ; File 399, Field 24 - CLAIM MRA STATUS
"RTN","IBCESRV3",94,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DIG,DIH,DIU,DIV,DQ,X,Y,IBIFN
"RTN","IBCESRV3",95,0)
 S IBEOB=+$G(IBEOB),STAT=$G(STAT)
"RTN","IBCESRV3",96,0)
 I '$D(^IBM(361.1,IBEOB)) G MRASTX
"RTN","IBCESRV3",97,0)
 I STAT="" G MRASTX
"RTN","IBCESRV3",98,0)
 S IBIFN=+$P($G(^IBM(361.1,IBEOB,0)),U,1)
"RTN","IBCESRV3",99,0)
 I '$D(^DGCR(399,IBIFN,"TX")) G MRASTX
"RTN","IBCESRV3",100,0)
 ;
"RTN","IBCESRV3",101,0)
 S DIE=399,DA=IBIFN,DR="24////"_STAT
"RTN","IBCESRV3",102,0)
 D ^DIE
"RTN","IBCESRV3",103,0)
MRASTX ;
"RTN","IBCESRV3",104,0)
 Q
"RTN","IBCESRV3",105,0)
 ;
"RTN","IBCESRV3",106,0)
ISITMRA(IBTDA) ; Function to return whether or not this transmission
"RTN","IBCESRV3",107,0)
 ; is a Medicare MRA or a normal EOB
"RTN","IBCESRV3",108,0)
 NEW IEN,MRA,STOP,DATA
"RTN","IBCESRV3",109,0)
 S (IEN,MRA,STOP)=0
"RTN","IBCESRV3",110,0)
 F  S IEN=$O(^IBA(364.2,IBTDA,2,IEN)) Q:'IEN  D  Q:STOP
"RTN","IBCESRV3",111,0)
 . S DATA=$$EXT^IBCEMU1($G(^IBA(364.2,IBTDA,2,IEN,0))) Q:DATA=""
"RTN","IBCESRV3",112,0)
 . I $P(DATA,U,1)'="835EOB" Q
"RTN","IBCESRV3",113,0)
 . I $P(DATA,U,5)="Y" S MRA=1
"RTN","IBCESRV3",114,0)
 . S STOP=1
"RTN","IBCESRV3",115,0)
 . Q
"RTN","IBCESRV3",116,0)
ISMRAX ;
"RTN","IBCESRV3",117,0)
 Q MRA
"RTN","IBCESRV3",118,0)
 ;
"RTN","IBCEU3")
0^15^B60382991^B61357507
"RTN","IBCEU3",1,0)
IBCEU3 ;ALB/TMP - EDI UTILITIES FOR 1500 CLAIM FORM ;12/29/05 9:58am
"RTN","IBCEU3",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,323,348,371,400**;21-MAR-94;Build 52
"RTN","IBCEU3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU3",4,0)
 ;
"RTN","IBCEU3",5,0)
BOX19(IBIFN) ; Returns the text that should print in box 19 of the CMS-1500
"RTN","IBCEU3",6,0)
 ;   for bill ien IBIFN
"RTN","IBCEU3",7,0)
 ; Data is derived from a combo of data throughout
"RTN","IBCEU3",8,0)
 ; the system and is limited to 80 characters.  The hierarchy for
"RTN","IBCEU3",9,0)
 ; including data is as follows (until 80 characters have been used):
"RTN","IBCEU3",10,0)
 ;   DATE LAST SEEN and REFERRING PHYSICIAN ID# (physical therapy)
"RTN","IBCEU3",11,0)
 ;                      specialty codes = 025,065,073,067,048
"RTN","IBCEU3",12,0)
 ;   LAST X-RAY DATE (chiropractic) specialty code = 35
"RTN","IBCEU3",13,0)
 ;   HOMEBOUND INDICATOR (independent lab renders an EKG or obtains
"RTN","IBCEU3",14,0)
 ;                        a specimen from a homebound patient)
"RTN","IBCEU3",15,0)
 ;   NO ASSIGNMENT OF BENEFITS (if no assignment of benefits indicated)
"RTN","IBCEU3",16,0)
 ;   Hearing aid testing (if applicable)
"RTN","IBCEU3",17,0)
 ;   ATTENDING PHYSICIAN NOT HOSPICE EMPLOYEE (if applicable)
"RTN","IBCEU3",18,0)
 ;   SPECIAL PROGRAM indicator if Medicare demonstration project for
"RTN","IBCEU3",19,0)
 ;                   lung volume reduction surgery study is set
"RTN","IBCEU3",20,0)
 ;   COMMENTS FOUND IN BOX 19 DATA FIELD FOR THE CLAIM
"RTN","IBCEU3",21,0)
 ;   REMARKS FOUND IN BILL COMMENT FOR THE CLAIM, INCLUDING PROSTHETICS
"RTN","IBCEU3",22,0)
 ;     DETAIL
"RTN","IBCEU3",23,0)
 ;
"RTN","IBCEU3",24,0)
 N IBGO,IBHOSP,IBID,IBLSDT,IBXDATA,IB19,IBHAID,IBXRAY,IBSPEC,Z,Z0,IBSUB,IBPRT,IBREM
"RTN","IBCEU3",25,0)
 S IB19="",IBGO=1
"RTN","IBCEU3",26,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEU3",27,0)
 I $D(IBXSAVE(IBSUB)) N IBXSAVE
"RTN","IBCEU3",28,0)
 S IBPRT=(IBSUB["24")
"RTN","IBCEU3",29,0)
 ;
"RTN","IBCEU3",30,0)
 S IBSPEC=$$BILLSPEC(IBIFN)
"RTN","IBCEU3",31,0)
 G:'IBPRT NPRT
"RTN","IBCEU3",32,0)
 ; Check for chiropractic services
"RTN","IBCEU3",33,0)
 I $P($G(^DGCR(399,IBIFN,"U3")),U,5)'="" S:$P($G(^DGCR(399,IBIFN,"U3")),U,4)'="" IBGO=$$LENOK("Last X-ray: "_$TR($$DATE^IBCF2($P(^DGCR(399,IBIFN,"U3"),U,4))," ","/"),.IB19)
"RTN","IBCEU3",34,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",35,0)
 ;
"RTN","IBCEU3",36,0)
 I "^25^65^73^67^48^"[(U_IBSPEC_U) D
"RTN","IBCEU3",37,0)
 . K IBXDATA D F^IBCEF("N-DATE LAST SEEN",,,IBIFN)
"RTN","IBCEU3",38,0)
 . I IBXDATA'="" S IBID="",IBLSDT=$$DATE^IBCF2(IBXDATA,0,1) D  I IBLSDT'="" S IBGO=$$LENOK("Date Last Seen:"_IBLSDT_IBID,.IB19)
"RTN","IBCEU3",39,0)
 .. ; Only print if specialty is OT or PT or proc for routine foot care
"RTN","IBCEU3",40,0)
 .. D F^IBCEF("N-REFERRING PROVIDER ID",,,IBIFN) I IBXDATA'="" S IBID=" By:"_IBXDATA
"RTN","IBCEU3",41,0)
 ;
"RTN","IBCEU3",42,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",43,0)
 K IBXDATA D F^IBCEF("N-HOMEBOUND",,,IBIFN)
"RTN","IBCEU3",44,0)
 I IBXDATA G:'$$LENOK("Homebound",.IB19) BOX19Q
"RTN","IBCEU3",45,0)
 ;
"RTN","IBCEU3",46,0)
 K IBXDATA D F^IBCEF("N-ASSIGN OF BENEFITS INDICATOR",,,IBIFN)
"RTN","IBCEU3",47,0)
 I "Nn0"[IBXDATA&(IBXDATA'="") G:'$$LENOK("Patient refuses to assign benefits",.IB19) BOX19Q
"RTN","IBCEU3",48,0)
 ;
"RTN","IBCEU3",49,0)
 I '$D(IBXSAVE(IBSUB)) D B24^IBCEF3(.IBXSAVE,IBIFN,$S($G(IBNOSHOW)=0:0,1:1))
"RTN","IBCEU3",50,0)
 ;
"RTN","IBCEU3",51,0)
 S (IBHAID,IBHOSP,IBXRAY)=0
"RTN","IBCEU3",52,0)
 ;
"RTN","IBCEU3",53,0)
 S Z=0 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D  G:'IBGO BOX19Q
"RTN","IBCEU3",54,0)
 . I $D(IBXSAVE(IBSUB,Z,"RX")),$P(IBXSAVE(IBSUB,Z,"RX"),U,3)="" S IBGO=$$LENOK("NOC Drug:"_$P(IBXSAVE(IBSUB,Z,"RX"),U,2)_" Units:"_+$P(IBXSAVE(IBSUB,Z,"RX"),U,6),.IB19)
"RTN","IBCEU3",55,0)
 . ;
"RTN","IBCEU3",56,0)
 . Q:'IBGO
"RTN","IBCEU3",57,0)
 . I 'IBHAID,$P(IBXSAVE(IBSUB,Z),U,5)="V5010",$$COBCT^IBCEF(IBIFN)>1 D  Q
"RTN","IBCEU3",58,0)
 .. S IBHAID=1,IBGO=$$LENOK("Testing for hearing aid",.IB19) Q
"RTN","IBCEU3",59,0)
 . ;
"RTN","IBCEU3",60,0)
 . Q:'IBGO
"RTN","IBCEU3",61,0)
 . I 'IBHOSP,$P($G(IBXSAVE(IBSUB,Z,"AUX")),U,3) S IBHOSP=1,IBGO=$$LENOK("Attending physician,not hospice employee",.IB19) Q
"RTN","IBCEU3",62,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",63,0)
 K IBXDATA D F^IBCEF("N-SPECIAL PROGRAM",,,IBIFN)
"RTN","IBCEU3",64,0)
 I IBXDATA=30 G:'$$LENOK("Medicare demonstration project for lung volume reduction surgery study",.IB19) BOX19Q
"RTN","IBCEU3",65,0)
 ;
"RTN","IBCEU3",66,0)
 G:'IBGO BOX19Q
"RTN","IBCEU3",67,0)
NPRT K IBXDATA D F^IBCEF("N-HCFA 1500 BOX 19 RAW DATA",,,IBIFN)
"RTN","IBCEU3",68,0)
 S IBREM=0
"RTN","IBCEU3",69,0)
 I IBXDATA'="" G:'$$LENOK("Remarks:"_IBXDATA,.IB19) BOX19Q S IBREM=1
"RTN","IBCEU3",70,0)
 K IBXDATA D F^IBCEF("N-BILL REMARKS",,,IBIFN)
"RTN","IBCEU3",71,0)
 I IBXDATA'="" G:'$$LENOK($S('IBREM:"Remarks:",1:"")_IBXDATA,.IB19) BOX19Q
"RTN","IBCEU3",72,0)
 ;
"RTN","IBCEU3",73,0)
BOX19Q Q IB19
"RTN","IBCEU3",74,0)
 ;
"RTN","IBCEU3",75,0)
LENOK(IBDATA,IB19) ; Add text IBDATA to box 19 string (IB19 passed by ref)
"RTN","IBCEU3",76,0)
 ; Check length of box 19 data - truncate at 96 (max length)
"RTN","IBCEU3",77,0)
 ; Returns 0 if max length reached or exceeded, otherwise, 1
"RTN","IBCEU3",78,0)
 N OK
"RTN","IBCEU3",79,0)
 S OK=1
"RTN","IBCEU3",80,0)
 S IB19=IB19_$S(IB19'="":" ",1:"")_$G(IBDATA)
"RTN","IBCEU3",81,0)
 I $L(IB19)'<96 S OK=0,IB19=$E(IB19,1,96) G LENOKQ
"RTN","IBCEU3",82,0)
LENOKQ Q OK
"RTN","IBCEU3",83,0)
 ;
"RTN","IBCEU3",84,0)
ASK19(IBIFN) ; Ask to display CMS-1500 box 19 data for current IBIFN
"RTN","IBCEU3",85,0)
 N DIR,DIC,X,Y,DIE,DR,Z
"RTN","IBCEU3",86,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A")="DISPLAY THE FULL CMS-1500 BOX 19?: "
"RTN","IBCEU3",87,0)
 D ^DIR
"RTN","IBCEU3",88,0)
 I Y=1 S Z=$$BOX19(IBIFN) W !!,?4,"19",?20,$E(Z,1,32) W:$L(Z)>32 !,?4,$E(Z,33,80),!
"RTN","IBCEU3",89,0)
 Q
"RTN","IBCEU3",90,0)
 ;
"RTN","IBCEU3",91,0)
ONLAB(IBIFN) ; Functions returns 1 if the bill IBIFN is outside non-lab
"RTN","IBCEU3",92,0)
 N IBP,IBPUR
"RTN","IBCEU3",93,0)
 S IBP=0
"RTN","IBCEU3",94,0)
 S IBPUR=$P($G(^DGCR(399,IBIFN,"U2")),U,11)
"RTN","IBCEU3",95,0)
 I IBPUR,"13"[IBPUR S IBP=1
"RTN","IBCEU3",96,0)
 Q IBP
"RTN","IBCEU3",97,0)
 ;
"RTN","IBCEU3",98,0)
TEXT24(FLD,IBXSAVE,IBXDATA,IBSUB) ; Format the text line of box 24 by fld
"RTN","IBCEU3",99,0)
 ; INPUT:
"RTN","IBCEU3",100,0)
 ;   FLD = the letter of the field in box 24 (A-J)
"RTN","IBCEU3",101,0)
 ;   IBXSAVE = passed by reference = extracted data for the box 24 lines
"RTN","IBCEU3",102,0)
 ;   IBSUB = the subscript of the IBXSAVE array to use.
"RTN","IBCEU3",103,0)
 ;           If null, use "BOX24"
"RTN","IBCEU3",104,0)
 ; OUTPUT:
"RTN","IBCEU3",105,0)
 ;   IBXDATA = passed by reference, set to the correct part of the
"RTN","IBCEU3",106,0)
 ;             text that will print in the field's positions
"RTN","IBCEU3",107,0)
 ;
"RTN","IBCEU3",108,0)
 ; esg - 8/14/06 - modified for the new cms-1500 form - IB*2*348
"RTN","IBCEU3",109,0)
 ;
"RTN","IBCEU3",110,0)
 N Z,IBLINE,IBVAL,IBS,IBE,IBTEXT,IBAUX,IBDAT,IBZ,IBREN,IBRENQ,IBRENNPI,IBRENSID
"RTN","IBCEU3",111,0)
 K IBXDATA
"RTN","IBCEU3",112,0)
 S (IBLINE,Z)=0 S:$G(IBSUB)="" IBSUB="BOX24"
"RTN","IBCEU3",113,0)
 ;
"RTN","IBCEU3",114,0)
 I FLD="I"!(FLD="J") D   ; extract the Rendering provider data
"RTN","IBCEU3",115,0)
 . I '$G(IBXIEN) Q       ; assume that the claim# exists
"RTN","IBCEU3",116,0)
 . S IBREN=$$CFIDS^IBCEF77(IBXIEN)
"RTN","IBCEU3",117,0)
 . S IBRENQ=$P(IBREN,U,1)    ; qual
"RTN","IBCEU3",118,0)
 . S IBRENSID=$P(IBREN,U,2)  ; id
"RTN","IBCEU3",119,0)
 . S IBRENNPI=$P(IBREN,U,3)  ; npi
"RTN","IBCEU3",120,0)
 . Q
"RTN","IBCEU3",121,0)
 ;
"RTN","IBCEU3",122,0)
 F  S Z=$O(IBXSAVE(IBSUB,Z)) Q:'Z  D
"RTN","IBCEU3",123,0)
 . S IBDAT=$G(IBXSAVE(IBSUB,Z))
"RTN","IBCEU3",124,0)
 . S IBAUX=$G(IBXSAVE(IBSUB,Z,"AUX"))
"RTN","IBCEU3",125,0)
 . S IBTEXT=$G(IBXSAVE(IBSUB,Z,"TEXT"))
"RTN","IBCEU3",126,0)
 . S IBZ=$P(IBAUX,U,9)
"RTN","IBCEU3",127,0)
 . I IBZ="" S IBZ="  "
"RTN","IBCEU3",128,0)
 . S IBTEXT=IBZ_IBTEXT
"RTN","IBCEU3",129,0)
 . ;
"RTN","IBCEU3",130,0)
 . I $S($G(IBAC)=4:$S($D(IBXSAVE(IBSUB,Z,"ARX")):1,1:$D(IBXSAVE(IBSUB,Z,"A"))),$D(IBXSAVE(IBSUB,Z,"RX")):0,1:$G(IBNOSHOW)) S IBTEXT=""
"RTN","IBCEU3",131,0)
 . ;
"RTN","IBCEU3",132,0)
 . I FLD="AF" S IBVAL=$P(IBDAT,U),IBS=1,IBE=9 D   ; From date of service
"RTN","IBCEU3",133,0)
 .. S IBVAL=$E(IBVAL,1,2)_" "_$E(IBVAL,3,4)_" "_$E(IBVAL,7,8)
"RTN","IBCEU3",134,0)
 .. Q
"RTN","IBCEU3",135,0)
 . ;
"RTN","IBCEU3",136,0)
 . I FLD="AT" S IBVAL=$S($P(IBDAT,U,2):$P(IBDAT,U,2),1:$P(IBDAT,U)),IBS=10,IBE=18 D    ; To date of service
"RTN","IBCEU3",137,0)
 .. S IBVAL=$E(IBVAL,1,2)_" "_$E(IBVAL,3,4)_" "_$E(IBVAL,7,8)
"RTN","IBCEU3",138,0)
 .. Q
"RTN","IBCEU3",139,0)
 . ;
"RTN","IBCEU3",140,0)
 . I FLD="B" S IBVAL=$P(IBDAT,U,3),IBS=19,IBE=21   ; place of service
"RTN","IBCEU3",141,0)
 . I FLD="C" S IBVAL=$S($P(IBDAT,U,13)=1:"Y",1:""),IBS=22,IBE=24   ; emergency indicator
"RTN","IBCEU3",142,0)
 . I FLD="D" S IBVAL=$P(IBDAT,U,5),IBS=25,IBE=44 D   ; procedures and modifiers
"RTN","IBCEU3",143,0)
 .. N M S M=$$MODLST^IBEFUNC($P(IBDAT,U,10))       ; modifier list
"RTN","IBCEU3",144,0)
 .. S IBVAL=$$FO^IBCNEUT1(IBVAL,6)_"  "            ; procedure code
"RTN","IBCEU3",145,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",1),3)     ; mod#1
"RTN","IBCEU3",146,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",2),3)     ; mod#2
"RTN","IBCEU3",147,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",3),3)     ; mod#3
"RTN","IBCEU3",148,0)
 .. S IBVAL=IBVAL_$$FO^IBCNEUT1($P(M,",",4),3)     ; mod#4
"RTN","IBCEU3",149,0)
 .. Q
"RTN","IBCEU3",150,0)
 . ;
"RTN","IBCEU3",151,0)
 . I FLD="E" S IBVAL=$TR($P(IBDAT,U,7),","),IBS=45,IBE=48  ; diagnosis pointer
"RTN","IBCEU3",152,0)
 . I FLD="F" S IBVAL=$P(IBDAT,U,8)*$P(IBDAT,U,9),IBS=49,IBE=57 D
"RTN","IBCEU3",153,0)
 .. ; total charges
"RTN","IBCEU3",154,0)
 .. S IBVAL=$$DOL^IBCEF77(IBVAL,9)
"RTN","IBCEU3",155,0)
 .. Q
"RTN","IBCEU3",156,0)
 . ;
"RTN","IBCEU3",157,0)
 . I FLD="G" S IBVAL=$S($P(IBDAT,U,12):$P(IBDAT,U,12),1:$P(IBDAT,U,9)),IBS=58,IBE=61 D
"RTN","IBCEU3",158,0)
 .. ; days or units or anesthesia minutes
"RTN","IBCEU3",159,0)
 .. S IBVAL=$J(+IBVAL,4)
"RTN","IBCEU3",160,0)
 .. Q
"RTN","IBCEU3",161,0)
 . ;
"RTN","IBCEU3",162,0)
 . ; columns H,I,J don't have any free text supplemental information
"RTN","IBCEU3",163,0)
 . ;
"RTN","IBCEU3",164,0)
 . I FLD="H" D     ; epsdt family plan
"RTN","IBCEU3",165,0)
 .. S IBVAL=$P(IBAUX,U,7),IBS=0,IBE=0,IBTEXT=""   ; line 1 blank
"RTN","IBCEU3",166,0)
 .. I IBVAL S IBVAL="Y"
"RTN","IBCEU3",167,0)
 .. Q
"RTN","IBCEU3",168,0)
 . I FLD="I" D     ; ID qualifier for rendering provider
"RTN","IBCEU3",169,0)
 .. S IBVAL="",IBS=1,IBE=2   ; line 2 blank
"RTN","IBCEU3",170,0)
 .. S IBTEXT=$G(IBRENQ)      ; qualifier on line 1
"RTN","IBCEU3",171,0)
 .. Q
"RTN","IBCEU3",172,0)
 . I FLD="J" D     ; rendering provider ID and NPI
"RTN","IBCEU3",173,0)
 .. S IBTEXT=$G(IBRENSID),IBS=1,IBE=11   ; secondary ID line 1
"RTN","IBCEU3",174,0)
 .. S IBVAL=$G(IBRENNPI)                 ; NPI# line 2
"RTN","IBCEU3",175,0)
 .. Q
"RTN","IBCEU3",176,0)
 . ;
"RTN","IBCEU3",177,0)
 . S IBLINE=IBLINE+1                      ; top line
"RTN","IBCEU3",178,0)
 . S IBXDATA(IBLINE)=$E(IBTEXT,IBS,IBE)   ; text in shaded area (top)
"RTN","IBCEU3",179,0)
 . S IBLINE=IBLINE+1             ; bottom line
"RTN","IBCEU3",180,0)
 . S IBXDATA(IBLINE)=IBVAL       ; field value in unshaded area (bottom)
"RTN","IBCEU3",181,0)
 . Q
"RTN","IBCEU3",182,0)
 ;
"RTN","IBCEU3",183,0)
 Q
"RTN","IBCEU3",184,0)
 ;
"RTN","IBCEU3",185,0)
BILLSPEC(IBIFN,IBPRV) ;  Returns the specialty of the provider on bill IBIFN
"RTN","IBCEU3",186,0)
 ; If IBPRV is supplied, returns the data for that provider, otherwise,
"RTN","IBCEU3",187,0)
 ;  returns the specialty of the 'main/required' provider on the bill.
"RTN","IBCEU3",188,0)
 ;  Default = 99 if no valid code found
"RTN","IBCEU3",189,0)
 ; IBPRV = vp of provider (file 200 or 355.93)
"RTN","IBCEU3",190,0)
 N Z,IBSPEC,IBINS,IBDT
"RTN","IBCEU3",191,0)
 S IBSPEC="",IBPRV=$G(IBPRV)
"RTN","IBCEU3",192,0)
 S IBDT=$P($G(^DGCR(399,+IBIFN,"U")),U,1)  ; use statement from date
"RTN","IBCEU3",193,0)
 ;
"RTN","IBCEU3",194,0)
 I $G(IBPRV) D  G SPECQ
"RTN","IBCEU3",195,0)
 . S IBSPEC=$$SPEC^IBCEU(IBPRV,IBDT)
"RTN","IBCEU3",196,0)
 ;
"RTN","IBCEU3",197,0)
 ;Get rendering for professional, attending for institutional,
"RTN","IBCEU3",198,0)
 S IBINS=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEU3",199,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCEU3",200,0)
 S Z=$S('IBINS:3,1:4)
"RTN","IBCEU3",201,0)
 I $G(IBPRV(Z,1))'="" D
"RTN","IBCEU3",202,0)
 . I $P(IBPRV(Z,1),U,3) S IBSPEC=$$SPEC^IBCEU($P($G(IBPRV(Z,1)),U,3),IBDT) Q:IBSPEC'=""
"RTN","IBCEU3",203,0)
 . S Z0=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEU3",204,0)
 . I Z0,$P($G(^DGCR(399,IBIFN,"PRV",Z0,0)),U,8)'="" S IBSPEC=$P(^(0),U,8)
"RTN","IBCEU3",205,0)
 ;
"RTN","IBCEU3",206,0)
SPECQ I IBSPEC="" S IBSPEC="99"
"RTN","IBCEU3",207,0)
 Q IBSPEC
"RTN","IBCEU3",208,0)
 ;
"RTN","IBCEU3",209,0)
CHAMPVA(IBIFN) ; Returns 1 if the bill IBIFN has a CHAMPVA rate type
"RTN","IBCEU3",210,0)
 Q $E($P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U),1,7)="CHAMPVA"
"RTN","IBCEU3",211,0)
 ;
"RTN","IBCEU3",212,0)
FAC(IBIFN) ; Obsolete function.  Used by old output formatter field and data element N-RENDERING INSTITUTION
"RTN","IBCEU3",213,0)
 Q ""
"RTN","IBCEU3",214,0)
 ;
"RTN","IBCEU3",215,0)
MCR24K(IBIFN) ;Function returns MEDICARE id# for professional (CMS-1500) box 24k for bill IBIFN if appropriate
"RTN","IBCEU3",216,0)
 Q $S($$FT^IBCEF(IBIFN)=2&$$MCRONBIL^IBEFUNC(IBIFN):"V"_$$MCRSPEC^IBCEU4(IBIFN,1)_$P($$SITE^VASITE,U,3),1:"")
"RTN","IBCNSC")
0^45^B24159861^B24159978
"RTN","IBCNSC",1,0)
IBCNSC ;ALB/NLR - INSURANCE COMPANY EDIT ;6/1/05 9:42am
"RTN","IBCNSC",2,0)
 ;;2.0;INTEGRATED BILLING;**46,137,184,276,320,371,400**;21-MAR-94;Build 52
"RTN","IBCNSC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSC",4,0)
 ;
"RTN","IBCNSC",5,0)
 ;also used for IA #4694
"RTN","IBCNSC",6,0)
 ;
"RTN","IBCNSC",7,0)
EN ; -- main entry point for IBCNS INSURANCE COMPANY, IBCNS VIEW INS CO
"RTN","IBCNSC",8,0)
 NEW IB1ST
"RTN","IBCNSC",9,0)
 K IBFASTXT,VALMQUIT,VALMEVL,XQORS,^TMP("XQORS",$J),IBCNS
"RTN","IBCNSC",10,0)
 S IBCHANGE="OKAY"
"RTN","IBCNSC",11,0)
 I '$G(IBVIEW) D EN^VALM("IBCNS INSURANCE COMPANY") G ENQ
"RTN","IBCNSC",12,0)
 D EN^VALM("IBCNS VIEW INS CO")
"RTN","IBCNSC",13,0)
ENQ Q
"RTN","IBCNSC",14,0)
 ;
"RTN","IBCNSC",15,0)
HDR ; -- header code
"RTN","IBCNSC",16,0)
 S VALMHDR(1)="Insurance Company Information for: "_$E($P(^DIC(36,IBCNS,0),"^"),1,30)
"RTN","IBCNSC",17,0)
 S VALMHDR(2)="Type of Company: "_$E($P($G(^IBE(355.2,+$P($G(^DIC(36,+IBCNS,0)),"^",13),0)),"^"),1,20)_"                     Currently "_$S(+($P($G(^DIC(36,+IBCNS,0)),"^",5)):"Inactive",1:"Active")
"RTN","IBCNSC",18,0)
 Q
"RTN","IBCNSC",19,0)
 ;
"RTN","IBCNSC",20,0)
INIT ; -- init variables and list array
"RTN","IBCNSC",21,0)
 K VALMQUIT
"RTN","IBCNSC",22,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNSC",23,0)
 I '$D(IBCNS) D INSCO Q:$D(VALMQUIT)
"RTN","IBCNSC",24,0)
 D BLD,HDR
"RTN","IBCNSC",25,0)
 Q
"RTN","IBCNSC",26,0)
BLD ; -- list builder
"RTN","IBCNSC",27,0)
 NEW BLNKI
"RTN","IBCNSC",28,0)
 K ^TMP("IBCNSC",$J)
"RTN","IBCNSC",29,0)
 D KILL^VALM10()    ; delete all video attributes
"RTN","IBCNSC",30,0)
 F BLNKI=1:1:62 D BLANK(.BLNKI)     ; 62 blank lines to start with
"RTN","IBCNSC",31,0)
 D PARAM^IBCNSC01      ; billing parameters
"RTN","IBCNSC",32,0)
 D MAIN^IBCNSC01       ; main mailing address
"RTN","IBCNSC",33,0)
 D CLAIMS1^IBCNSC0     ; inpatient claims office
"RTN","IBCNSC",34,0)
 D CLAIMS2^IBCNSC0     ; outpatient claims office
"RTN","IBCNSC",35,0)
 D PRESCR^IBCNSC1      ; prescription claims office
"RTN","IBCNSC",36,0)
 D APPEALS             ; appeals office
"RTN","IBCNSC",37,0)
 D INQUIRY             ; inquiry office
"RTN","IBCNSC",38,0)
 D DISP^IBCNSC02       ; parent/child associations (ESG 11/3/05)
"RTN","IBCNSC",39,0)
 D PROVID^IBCNSC1      ; provider IDs
"RTN","IBCNSC",40,0)
 D PAYER^IBCNSC01      ; payer/payer apps (ESG 7/29/02 IIV project)
"RTN","IBCNSC",41,0)
 D REMARKS^IBCNSC01    ; remarks
"RTN","IBCNSC",42,0)
 D SYN^IBCNSC01        ; synonyms
"RTN","IBCNSC",43,0)
 S VALMCNT=+$O(^TMP("IBCNSC",$J,""),-1)
"RTN","IBCNSC",44,0)
 Q
"RTN","IBCNSC",45,0)
 ;
"RTN","IBCNSC",46,0)
APPEALS ;
"RTN","IBCNSC",47,0)
 N OFFSET,START,IBCNS14,IBADD
"RTN","IBCNSC",48,0)
 S IBCNS14=$$ADDRESS^IBCNSC0(IBCNS,.14,7)
"RTN","IBCNSC",49,0)
 S START=48,OFFSET=2
"RTN","IBCNSC",50,0)
 D SET^IBCNSP(START,OFFSET+25," Appeals Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",51,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS14,"^",7),0)),"^",1))
"RTN","IBCNSC",52,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS14,"^",1))
"RTN","IBCNSC",53,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS14,"^",2))
"RTN","IBCNSC",54,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",55,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS14,"^",3)) S IBADD=1
"RTN","IBCNSC",56,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS14,"^",4),1,15)_$S($P(IBCNS14,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS14,"^",5),0)),"^",2)_" "_$E($P(IBCNS14,"^",6),1,5))
"RTN","IBCNSC",57,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS14,"^",8))
"RTN","IBCNSC",58,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS14,"^",9))
"RTN","IBCNSC",59,0)
 Q
"RTN","IBCNSC",60,0)
 ;
"RTN","IBCNSC",61,0)
INQUIRY ;
"RTN","IBCNSC",62,0)
 ;
"RTN","IBCNSC",63,0)
 N OFFSET,START,IBCNS15,IBADD
"RTN","IBCNSC",64,0)
 S IBCNS15=$$ADDRESS^IBCNSC0(IBCNS,.15,8)
"RTN","IBCNSC",65,0)
 S START=55,OFFSET=2
"RTN","IBCNSC",66,0)
 D SET^IBCNSP(START,OFFSET+25," Inquiry Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",67,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS15,"^",7),0)),"^",1))
"RTN","IBCNSC",68,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS15,"^"))
"RTN","IBCNSC",69,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS15,"^",2))
"RTN","IBCNSC",70,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",71,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS15,"^",3)) S IBADD=1
"RTN","IBCNSC",72,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS15,"^",4),1,15)_$S($P(IBCNS15,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS15,"^",5),0)),"^",2)_" "_$E($P(IBCNS15,"^",6),1,5))
"RTN","IBCNSC",73,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS15,"^",8))
"RTN","IBCNSC",74,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS15,"^",9))
"RTN","IBCNSC",75,0)
 Q
"RTN","IBCNSC",76,0)
 ;
"RTN","IBCNSC",77,0)
HELP ; -- help code
"RTN","IBCNSC",78,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNSC",79,0)
 Q
"RTN","IBCNSC",80,0)
 ;
"RTN","IBCNSC",81,0)
EXIT ; -- exit code
"RTN","IBCNSC",82,0)
 K VALMQUIT,IBCNS,IBCHANGE,IBFASTXT
"RTN","IBCNSC",83,0)
 D CLEAN^VALM10
"RTN","IBCNSC",84,0)
 Q
"RTN","IBCNSC",85,0)
 ;
"RTN","IBCNSC",86,0)
INSCO ; -- select insurance company
"RTN","IBCNSC",87,0)
 NEW DLAYGO,DIC,X,Y,DTOUT,DUOUT
"RTN","IBCNSC",88,0)
 I '$D(IBCNS) D  G:$D(VALMQUIT) INSCOQ
"RTN","IBCNSC",89,0)
 .S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","IBCNSC",90,0)
 .I '$G(IBVIEW) S DLAYGO=36,DIC(0)=DIC(0)_"L"
"RTN","IBCNSC",91,0)
 .D ^DIC K DIC
"RTN","IBCNSC",92,0)
 .S IBCNS=+Y
"RTN","IBCNSC",93,0)
 I $G(IBCNS)<1 K IBCNS S VALMQUIT="" G INSCOQ
"RTN","IBCNSC",94,0)
INSCOQ ;
"RTN","IBCNSC",95,0)
 K DIC
"RTN","IBCNSC",96,0)
 Q
"RTN","IBCNSC",97,0)
 ;
"RTN","IBCNSC",98,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSC",99,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSC",100,0)
 Q
"RTN","IBCNSC",101,0)
 ;
"RTN","IBCNSC",102,0)
EDIKEY() ; input transform code to determine if user is allowed to edit
"RTN","IBCNSC",103,0)
 ; certain fields in the insurance company file
"RTN","IBCNSC",104,0)
 NEW OK S OK=0
"RTN","IBCNSC",105,0)
 I $$KCHK^XUSRB("IB EDI INSURANCE EDIT") S OK=1 G EDIKEYX
"RTN","IBCNSC",106,0)
 D EN^DDIOL("You must hold the IB EDI INSURANCE EDIT security key to edit this field.",,"!!")
"RTN","IBCNSC",107,0)
 D EN^DDIOL("",,"!!?5")
"RTN","IBCNSC",108,0)
EDIKEYX ;
"RTN","IBCNSC",109,0)
 Q OK
"RTN","IBCNSC",110,0)
 ;
"RTN","IBCNSC",111,0)
DUPQUAL(IBCNS,QUAL,FIELD) ; input transform to make sure that the sam qualifier is not used twice for
"RTN","IBCNSC",112,0)
 ; payer secondary IDs.  There are two sets of fields in file 36 that can not be duplicated.
"RTN","IBCNSC",113,0)
 ; 6.01 EDI INST SECONDARY ID QUAL(1) can not be the same as 6.03 EDI INST SECONDARY ID QUAL(2)
"RTN","IBCNSC",114,0)
 ; 6.05 EDI PROF SECONDARY ID QUAL(1) can not be the same as 6.07 EDI PROF SECONDARY ID QUAL(2)
"RTN","IBCNSC",115,0)
 ; 
"RTN","IBCNSC",116,0)
 ; Input:
"RTN","IBCNSC",117,0)
 ; IBCNS is the insurance company internal number
"RTN","IBCNSC",118,0)
 ; QUAL  is the internal code of the value being input.
"RTN","IBCNSC",119,0)
 ; FIELD is the field it is being compare with.
"RTN","IBCNSC",120,0)
 ;
"RTN","IBCNSC",121,0)
 ; Returns:
"RTN","IBCNSC",122,0)
 ; TRUE/1 if they are the same (duplicate)
"RTN","IBCNSC",123,0)
 ; FALSE/0 if they are not
"RTN","IBCNSC",124,0)
 ;
"RTN","IBCNSC",125,0)
 Q:$G(QUAL)="" 0  ; should not happen because this is invoked as an input transform
"RTN","IBCNSC",126,0)
 Q:'+$G(IBCNS) 1  ; stop from editing through fileman
"RTN","IBCNSC",127,0)
 N DUP
"RTN","IBCNSC",128,0)
 S DUP=$$GET1^DIQ(36,+$G(IBCNS)_",",+$G(FIELD),"I")
"RTN","IBCNSC",129,0)
 D CLEAN^DILF
"RTN","IBCNSC",130,0)
 Q QUAL=DUP
"RTN","IBCNSC1")
0^46^B88597979^B79495067
"RTN","IBCNSC1",1,0)
IBCNSC1 ;ALB/NLR - IBCNS INSURANCE COMPANY ;23-MAR-93
"RTN","IBCNSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**62,137,232,291,320,348,349,371,400**;21-MAR-94;Build 52
"RTN","IBCNSC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSC1",4,0)
 ;
"RTN","IBCNSC1",5,0)
% G EN^IBCNSC
"RTN","IBCNSC1",6,0)
 ;
"RTN","IBCNSC1",7,0)
AI ; -- (In)Activate Company
"RTN","IBCNSC1",8,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",9,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
"RTN","IBCNSC1",10,0)
 D ^IBCNSC2
"RTN","IBCNSC1",11,0)
 G EXIT
"RTN","IBCNSC1",12,0)
CC ; -- Change Insurance Company
"RTN","IBCNSC1",13,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",14,0)
 S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
"RTN","IBCNSC1",15,0)
 I '$D(IBCNS) S IBCNS=IBCNS1
"RTN","IBCNSC1",16,0)
 K IBCNS1,VALMQUIT
"RTN","IBCNSC1",17,0)
 G EXIT
"RTN","IBCNSC1",18,0)
EA ; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
"RTN","IBCNSC1",19,0)
 D FULL^VALM1
"RTN","IBCNSC1",20,0)
 ;
"RTN","IBCNSC1",21,0)
 ; IB*2*320 - check key for associate company action
"RTN","IBCNSC1",22,0)
 I $G(IBY)=",13,",'$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G EXIT
"RTN","IBCNSC1",23,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC1",24,0)
 . D PAUSE^VALM1
"RTN","IBCNSC1",25,0)
 . Q
"RTN","IBCNSC1",26,0)
 ;
"RTN","IBCNSC1",27,0)
 W !!
"RTN","IBCNSC1",28,0)
 D MAIN
"RTN","IBCNSC1",29,0)
 ;
"RTN","IBCNSC1",30,0)
 ; -- was company deleted
"RTN","IBCNSC1",31,0)
 I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
"RTN","IBCNSC1",32,0)
 ;
"RTN","IBCNSC1",33,0)
EXIT ;
"RTN","IBCNSC1",34,0)
 D HDR^IBCNSC,BLD^IBCNSC
"RTN","IBCNSC1",35,0)
 S VALMBCK="R"
"RTN","IBCNSC1",36,0)
 Q
"RTN","IBCNSC1",37,0)
MAIN ; -- Call edit template
"RTN","IBCNSC1",38,0)
 N IBEDIKEY,Z
"RTN","IBCNSC1",39,0)
 L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
"RTN","IBCNSC1",40,0)
 I $G(IBY)=",12," D FACID
"RTN","IBCNSC1",41,0)
 F Z=1,2,4,9,13,14 S IBEDIKEY(Z)=$P($G(^DIC(36,+IBCNS,3)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",42,0)
 F Z=1:1:8 S IBEDIKEY(Z,6)=$P($G(^DIC(36,+IBCNS,6)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",43,0)
 I $G(IBY)'=",12," N DIE,DA,DR S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE S:$D(Y) IB("^")=1 D:$TR($P($G(^DIC(36,IBCNS,6)),U,1,8),U)]"" CUIDS(IBCNS)
"RTN","IBCNSC1",44,0)
 I $G(IBY)=",12," D EDITID^IBCEP(+IBCNS)
"RTN","IBCNSC1",45,0)
 I $F(",6,13,",$G(IBY)) D PARENT^IBCNSC02(+IBCNS)   ; parent/child management
"RTN","IBCNSC1",46,0)
 L -^DIC(36,+IBCNS)
"RTN","IBCNSC1",47,0)
MAINQ Q
"RTN","IBCNSC1",48,0)
 ;
"RTN","IBCNSC1",49,0)
FACID ; -- Edit facility ids
"RTN","IBCNSC1",50,0)
 D FACID^IBCEP2B(+IBCNS,"E")
"RTN","IBCNSC1",51,0)
 Q
"RTN","IBCNSC1",52,0)
 ;
"RTN","IBCNSC1",53,0)
SORRY ; -- can't inactivate, don't have key
"RTN","IBCNSC1",54,0)
 W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
"RTN","IBCNSC1",55,0)
 Q
"RTN","IBCNSC1",56,0)
PRESCR ;
"RTN","IBCNSC1",57,0)
 N OFFSET,START,IBCNS18,IBADD
"RTN","IBCNSC1",58,0)
 S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",59,0)
 S START=41,OFFSET=2
"RTN","IBCNSC1",60,0)
 D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC1",61,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
"RTN","IBCNSC1",62,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
"RTN","IBCNSC1",63,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
"RTN","IBCNSC1",64,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS18,"^",11))
"RTN","IBCNSC1",65,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC1",66,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
"RTN","IBCNSC1",67,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
"RTN","IBCNSC1",68,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
"RTN","IBCNSC1",69,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
"RTN","IBCNSC1",70,0)
 Q
"RTN","IBCNSC1",71,0)
 ;
"RTN","IBCNSC1",72,0)
PROVID N OFFSET,START,IBCNS4,IBCNS3,IBDISP,Z,LINE
"RTN","IBCNSC1",73,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC1",74,0)
 S (IB1ST("PROVID"),LINE)=START
"RTN","IBCNSC1",75,0)
 S OFFSET=2,IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3))
"RTN","IBCNSC1",76,0)
 ;       
"RTN","IBCNSC1",77,0)
 D SET^IBCNSP(LINE,OFFSET+25,"Provider IDs",IORVON,IORVOFF)
"RTN","IBCNSC1",78,0)
 N OFFSET
"RTN","IBCNSC1",79,0)
 S LINE=LINE+1,OFFSET=1
"RTN","IBCNSC1",80,0)
 D SET^IBCNSP(LINE,OFFSET,"Billing Provider Secondary ID")
"RTN","IBCNSC1",81,0)
 ;
"RTN","IBCNSC1",82,0)
 N Z,Z0,Z1,IBS,I,DIV,FT,CU,CUF,DIVISION,FORMTYPE,PIDT
"RTN","IBCNSC1",83,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",84,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",85,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",86,0)
 . Q:'($P(Z0,U,8)="E")
"RTN","IBCNSC1",87,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z0,U,4))=$P(Z0,U,6)_U_$P(Z0,U,7)
"RTN","IBCNSC1",88,0)
 ;
"RTN","IBCNSC1",89,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",90,0)
 . S DIVISION=$$DIV^IBCEP7(DIV)
"RTN","IBCNSC1",91,0)
 . S CU="",CUF=0 F  S CU=$O(IBS(DIV,CU)) Q:CU=""  D
"RTN","IBCNSC1",92,0)
 .. S FT="" F  S FT=$O(IBS(DIV,CU,FT)) Q:FT=""  D
"RTN","IBCNSC1",93,0)
 ... S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",94,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",95,0)
 ... I 'CUF,+CU S CUF=1 S TEXT=$P(DIVISION,"/")_" Care Units :",OFFSET=5 D SET^IBCNSP(LINE,OFFSET,TEXT) S LINE=LINE+1
"RTN","IBCNSC1",96,0)
 ... I CU=0 S TEXT=DIVISION_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=2
"RTN","IBCNSC1",97,0)
 ... I +CU S TEXT=$$EXPAND^IBTRE(355.92,.03,CU)_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=5
"RTN","IBCNSC1",98,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",99,0)
 ;
"RTN","IBCNSC1",100,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",101,0)
 ;
"RTN","IBCNSC1",102,0)
 K IBS
"RTN","IBCNSC1",103,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",104,0)
 D SET^IBCNSP(LINE,OFFSET,"Additional Billing Provider Secondary IDs")
"RTN","IBCNSC1",105,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",106,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",107,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",108,0)
 . Q:'($P(Z0,U,8)="A")
"RTN","IBCNSC1",109,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",110,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",111,0)
 ;
"RTN","IBCNSC1",112,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",113,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",114,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",115,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",116,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",117,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",118,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",119,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",120,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",121,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",122,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",123,0)
 ;
"RTN","IBCNSC1",124,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",125,0)
 ;
"RTN","IBCNSC1",126,0)
 K IBS
"RTN","IBCNSC1",127,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",128,0)
 D SET^IBCNSP(LINE,OFFSET,"VA-Laboratory or Facility Secondary IDs")
"RTN","IBCNSC1",129,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",130,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",131,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",132,0)
 . Q:'($P(Z0,U,8)="LF")
"RTN","IBCNSC1",133,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",134,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",135,0)
 ;
"RTN","IBCNSC1",136,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",137,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",138,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",139,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",140,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",141,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",142,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",143,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",144,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",145,0)
 ... ;S TEXT=$$EXPAND^IBTRE(355.92,.06,PIDT)_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",146,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",147,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",148,0)
 ;
"RTN","IBCNSC1",149,0)
 ;
"RTN","IBCNSC1",150,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",151,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",152,0)
 S OFFSET=2
"RTN","IBCNSC1",153,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,OFFSET+25,"ID Parameters",IORVON,IORVOFF)
"RTN","IBCNSC1",154,0)
 ;
"RTN","IBCNSC1",155,0)
 S IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3)),OFFSET=1
"RTN","IBCNSC1",156,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.01,+$P(IBCNS4,U))
"RTN","IBCNSC1",157,0)
 S LINE=LINE+1
"RTN","IBCNSC1",158,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",159,0)
 ;
"RTN","IBCNSC1",160,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (UB-04): "_$$EXPAND^IBTRE(36,4.02,+$P(IBCNS4,U,2))
"RTN","IBCNSC1",161,0)
 S LINE=LINE+1
"RTN","IBCNSC1",162,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",163,0)
 ;
"RTN","IBCNSC1",164,0)
 S TEXT="Attending/Rendering Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.03,+$P(IBCNS4,U,3))
"RTN","IBCNSC1",165,0)
 S LINE=LINE+1
"RTN","IBCNSC1",166,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",167,0)
 ;
"RTN","IBCNSC1",168,0)
 S TEXT="Referring Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.04,+$P(IBCNS4,U,4))
"RTN","IBCNSC1",169,0)
 S LINE=LINE+1
"RTN","IBCNSC1",170,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",171,0)
 ;
"RTN","IBCNSC1",172,0)
 S TEXT="Referring Provider Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.05,+$P(IBCNS4,U,5))
"RTN","IBCNSC1",173,0)
 S LINE=LINE+1
"RTN","IBCNSC1",174,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",175,0)
 ;
"RTN","IBCNSC1",176,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (1500): "_$$EXPAND^IBTRE(36,4.06,+$P(IBCNS4,U,6))
"RTN","IBCNSC1",177,0)
 S LINE=LINE+1
"RTN","IBCNSC1",178,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",179,0)
 ;
"RTN","IBCNSC1",180,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (UB-04): "_$$EXPAND^IBTRE(36,4.08,+$P(IBCNS4,U,8))
"RTN","IBCNSC1",181,0)
 S LINE=LINE+1
"RTN","IBCNSC1",182,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",183,0)
 ;
"RTN","IBCNSC1",184,0)
 S TEXT="Always use main VAMC as Billing Provider (1500)?: "_$$EXPAND^IBTRE(36,4.11,+$P(IBCNS4,U,11))
"RTN","IBCNSC1",185,0)
 S LINE=LINE+1
"RTN","IBCNSC1",186,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",187,0)
 ;
"RTN","IBCNSC1",188,0)
 S TEXT="Always use main VAMC as Billing Provider (UB-04)?: "_$$EXPAND^IBTRE(36,4.12,+$P(IBCNS4,U,12))
"RTN","IBCNSC1",189,0)
 S LINE=LINE+1
"RTN","IBCNSC1",190,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",191,0)
 ;
"RTN","IBCNSC1",192,0)
 I $P(IBCNS4,U,11)!($P(IBCNS4,U,12)) D
"RTN","IBCNSC1",193,0)
 .S TEXT="Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7))
"RTN","IBCNSC1",194,0)
 .S LINE=LINE+1
"RTN","IBCNSC1",195,0)
 .D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",196,0)
 .;
"RTN","IBCNSC1",197,0)
 .S TEXT="Use the Billing Provider (VAMC) Name and Street Address?: "_$$EXPAND^IBTRE(36,4.13,+$P(IBCNS4,U,13))
"RTN","IBCNSC1",198,0)
 .S LINE=LINE+1
"RTN","IBCNSC1",199,0)
 .D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",200,0)
 .Q
"RTN","IBCNSC1",201,0)
 ;
"RTN","IBCNSC1",202,0)
 S TEXT="Transmit no Billing Provider Sec. ID for the Electronic Plan Types: "
"RTN","IBCNSC1",203,0)
 S LINE=LINE+1
"RTN","IBCNSC1",204,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",205,0)
 ;
"RTN","IBCNSC1",206,0)
 N TAR,ERR,IBCT
"RTN","IBCNSC1",207,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCNSC1",208,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCNSC1",209,0)
 . S TEXT=TAR("DILIST",1,IBCT)
"RTN","IBCNSC1",210,0)
 . S LINE=LINE+1
"RTN","IBCNSC1",211,0)
 . D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",212,0)
 ;
"RTN","IBCNSC1",213,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",214,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",215,0)
 Q
"RTN","IBCNSC1",216,0)
 ;       
"RTN","IBCNSC1",217,0)
INSDEF(IBINS,IBPTYP) ; Returns the default id # for an ins co, if possible
"RTN","IBCNSC1",218,0)
 N X
"RTN","IBCNSC1",219,0)
 S X=""
"RTN","IBCNSC1",220,0)
 I IBINS,IBPTYP S X=$P($G(^IBA(355.91,+$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*","")),0)),U,7)
"RTN","IBCNSC1",221,0)
 Q X
"RTN","IBCNSC1",222,0)
 ;
"RTN","IBCNSC1",223,0)
CUIDS(IBCNS) ;
"RTN","IBCNSC1",224,0)
 N DIE,DA,DR,PIECE,DAT6,Y
"RTN","IBCNSC1",225,0)
 S DAT6=$P(^DIC(36,IBCNS,6),U,1,8) ; get the Payer IDs
"RTN","IBCNSC1",226,0)
 ;
"RTN","IBCNSC1",227,0)
 ; Make sure each qualifier has an ID and vice versa
"RTN","IBCNSC1",228,0)
 F PIECE=1,3,5,7 D
"RTN","IBCNSC1",229,0)
 . I $TR($P(DAT6,U,PIECE,PIECE+1),U)="" Q  ; both blank
"RTN","IBCNSC1",230,0)
 . I $P(DAT6,U,PIECE)]"",$P(DAT6,U,PIECE+1)]"" Q  ; both have data
"RTN","IBCNSC1",231,0)
 . S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="6.0"_$S($P(DAT6,U,PIECE)]"":PIECE,1:PIECE+1)_"////@"
"RTN","IBCNSC1",232,0)
 . D ^DIE K DIE
"RTN","IBCNSC1",233,0)
 ;
"RTN","IBCNSC1",234,0)
 S DAT6=$P($G(^DIC(36,IBCNS,6)),U,1,8) ; get the Payer IDs again since they may have changed above.
"RTN","IBCNSC1",235,0)
 ;
"RTN","IBCNSC1",236,0)
 ; Make sure the first pair of ID/Qual are populated if the 2nd pair is.  If not, move em over.
"RTN","IBCNSC1",237,0)
 ; This is done for institutional then professional
"RTN","IBCNSC1",238,0)
 F PIECE=1,5 D
"RTN","IBCNSC1",239,0)
 . I $P(DAT6,U,PIECE)]"" Q  ; already has set one
"RTN","IBCNSC1",240,0)
 . I $P(DAT6,U,PIECE+2)="" Q  ; has no second set
"RTN","IBCNSC1",241,0)
 . S DIE="^DIC(36,",(DA,Y)=IBCNS
"RTN","IBCNSC1",242,0)
 . ; deleting the qualifier triggers deletion of the ID
"RTN","IBCNSC1",243,0)
 . S DR="6.0"_PIECE_"////"_$P(DAT6,U,PIECE+2)_";6.0"_(PIECE+1)_"////"_$P(DAT6,U,PIECE+3)_";6.0"_(PIECE+2)_"////@"
"RTN","IBCNSC1",244,0)
 . D ^DIE K DIE
"RTN","IBCNSC1",245,0)
 Q
"RTN","IBCNSGE")
0^50^B96506496^B85166056
"RTN","IBCNSGE",1,0)
IBCNSGE ;ALB/ESG - Insurance Company EDI Parameter Report ;07-JAN-2005
"RTN","IBCNSGE",2,0)
 ;;2.0;INTEGRATED BILLING;**296,400**;21-MAR-94;Build 52
"RTN","IBCNSGE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSGE",4,0)
 ;
"RTN","IBCNSGE",5,0)
 ; eClaims Plus
"RTN","IBCNSGE",6,0)
 ; Identify insurance companies and display EDI parameter information.
"RTN","IBCNSGE",7,0)
 ;
"RTN","IBCNSGE",8,0)
 ;
"RTN","IBCNSGE",9,0)
EN ; Entry Point
"RTN","IBCNSGE",10,0)
 NEW IBRINS,IBRBID,IBRINS1,IBRINS2,IBRSORT,STOP
"RTN","IBCNSGE",11,0)
 D SELECT I STOP G EXIT
"RTN","IBCNSGE",12,0)
 D SORT I STOP G EXIT
"RTN","IBCNSGE",13,0)
 D DEVICE
"RTN","IBCNSGE",14,0)
EXIT ;
"RTN","IBCNSGE",15,0)
 Q
"RTN","IBCNSGE",16,0)
 ;
"RTN","IBCNSGE",17,0)
SELECT ; Select insurance companies to include on the report
"RTN","IBCNSGE",18,0)
 NEW DIR,DIC,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,IBQ
"RTN","IBCNSGE",19,0)
SEL1 ;
"RTN","IBCNSGE",20,0)
 S STOP=0,IBQ=0
"RTN","IBCNSGE",21,0)
 W @IOF
"RTN","IBCNSGE",22,0)
 W !!?21,"Insurance Company EDI Parameter Report"
"RTN","IBCNSGE",23,0)
 W !!?5,"This report will display the EDI parameter information for selected"
"RTN","IBCNSGE",24,0)
 W !?5,"insurance companies.  You can specify one company, multiple companies,"
"RTN","IBCNSGE",25,0)
 W !?5,"a range of company names, or all companies on file."
"RTN","IBCNSGE",26,0)
 ;
"RTN","IBCNSGE",27,0)
 S DIR(0)="SO^A:Include All Insurance Companies;S:Select Specific Insurance Companies;R:Specify a Range of Insurance Company Names"
"RTN","IBCNSGE",28,0)
 S DIR("A")="     Method for selecting insurance companies"
"RTN","IBCNSGE",29,0)
 S DIR("B")="A"
"RTN","IBCNSGE",30,0)
 S DIR("?",1)="Enter a code from the list.  This defines how you want to select insurance"
"RTN","IBCNSGE",31,0)
 S DIR("?",2)="companies for this report."
"RTN","IBCNSGE",32,0)
 S DIR("?",3)=""
"RTN","IBCNSGE",33,0)
 S DIR("?",4)="If you choose 'A', then all active companies will be included."
"RTN","IBCNSGE",34,0)
 S DIR("?",5)="If you choose 'S', then one or more specific companies can be selected."
"RTN","IBCNSGE",35,0)
 S DIR("?")="If you choose 'R', then you can enter a range of company names."
"RTN","IBCNSGE",36,0)
 D ^DIR K DIR
"RTN","IBCNSGE",37,0)
 I $D(DIRUT) S STOP=1 G SELX
"RTN","IBCNSGE",38,0)
 S IBRINS=Y
"RTN","IBCNSGE",39,0)
 I '$F(".A.S.R.","."_IBRINS_".") S STOP=1 G SELX
"RTN","IBCNSGE",40,0)
 I IBRINS="S" D MULT I IBQ G SEL1      ; choose one or many
"RTN","IBCNSGE",41,0)
 I IBRINS="R" D RANGE I IBQ G SEL1     ; choose a range
"RTN","IBCNSGE",42,0)
 ;
"RTN","IBCNSGE",43,0)
 W !
"RTN","IBCNSGE",44,0)
 S DIR(0)="YO"
"RTN","IBCNSGE",45,0)
 S DIR("A",1)="Only include Insurance Companies with Electronic"
"RTN","IBCNSGE",46,0)
 S DIR("A")="             Bill ID's that are blank or contain ""PRNT"""
"RTN","IBCNSGE",47,0)
 S DIR("B")="NO"
"RTN","IBCNSGE",48,0)
 S DIR("?",1)="Enter either 'Y' or 'N'.  If you choose 'Y', then this will limit the selection"
"RTN","IBCNSGE",49,0)
 S DIR("?",2)="of insurance companies.  Only those companies in which the Inst ID or the Prof"
"RTN","IBCNSGE",50,0)
 S DIR("?",3)="ID is either blank or contains ""PRNT"" (uppercase or lowercase)"
"RTN","IBCNSGE",51,0)
 S DIR("?")="will be included."
"RTN","IBCNSGE",52,0)
 D ^DIR K DIR
"RTN","IBCNSGE",53,0)
 I $D(DIRUT) S STOP=1 G SELX
"RTN","IBCNSGE",54,0)
 S IBRBID=Y
"RTN","IBCNSGE",55,0)
SELX ;
"RTN","IBCNSGE",56,0)
 Q
"RTN","IBCNSGE",57,0)
 ;
"RTN","IBCNSGE",58,0)
MULT ; select one or many insurance companies
"RTN","IBCNSGE",59,0)
 NEW DIC,X,Y
"RTN","IBCNSGE",60,0)
 K IBRINS S IBRINS="S"
"RTN","IBCNSGE",61,0)
 F  D  Q:Y'>0
"RTN","IBCNSGE",62,0)
 . W ! S DIC("A")="Insurance Company: "
"RTN","IBCNSGE",63,0)
 . S DIC("S")="I $$ACTIVE^IBCNEUT4(Y)"    ; screen out Inactives
"RTN","IBCNSGE",64,0)
 . S DIC=36,DIC(0)="AEQM" D ^DIC
"RTN","IBCNSGE",65,0)
 . Q:Y'>0
"RTN","IBCNSGE",66,0)
 . S IBRINS(+Y)=$P($G(^DIC(36,+Y,0)),U,1)
"RTN","IBCNSGE",67,0)
 . Q
"RTN","IBCNSGE",68,0)
 I $O(IBRINS(""))="" S IBQ=1 G MULTX   ; none selected
"RTN","IBCNSGE",69,0)
MULTX ;
"RTN","IBCNSGE",70,0)
 Q
"RTN","IBCNSGE",71,0)
 ;
"RTN","IBCNSGE",72,0)
RANGE ; select a range of insurance company names
"RTN","IBCNSGE",73,0)
 K IBRINS1,IBRINS2
"RTN","IBCNSGE",74,0)
 W !
"RTN","IBCNSGE",75,0)
 S DIR(0)="FO",DIR("A")="Start with Insurance Company"
"RTN","IBCNSGE",76,0)
 S DIR("?",1)="This response can be free text."
"RTN","IBCNSGE",77,0)
 S DIR("?",2)="Responses are case sensitive."
"RTN","IBCNSGE",78,0)
 S DIR("?")="Example: To find CIGNA, type CIGNA not cigna or Cigna."
"RTN","IBCNSGE",79,0)
 S DIR("B")="First" D ^DIR K DIR
"RTN","IBCNSGE",80,0)
 I $D(DIRUT) S IBQ=1 G RANGEX
"RTN","IBCNSGE",81,0)
 S IBRINS1=Y
"RTN","IBCNSGE",82,0)
 I IBRINS1="First" S IBRINS1=" "
"RTN","IBCNSGE",83,0)
 ;
"RTN","IBCNSGE",84,0)
 W !
"RTN","IBCNSGE",85,0)
 S DIR(0)="FO",DIR("A")="Go to Insurance Company"
"RTN","IBCNSGE",86,0)
 S DIR("?",1)="This response can be free text."
"RTN","IBCNSGE",87,0)
 S DIR("?",2)="Responses are case sensitive."
"RTN","IBCNSGE",88,0)
 S DIR("?")="Example: To find CIGNA, type CIGNA not cigna or Cigna."
"RTN","IBCNSGE",89,0)
 S DIR("B")="Last" D ^DIR K DIR
"RTN","IBCNSGE",90,0)
 I $D(DIRUT) S IBQ=1 G RANGEX
"RTN","IBCNSGE",91,0)
 S IBRINS2=Y
"RTN","IBCNSGE",92,0)
 I IBRINS2="Last" S IBRINS2="~~~~~"
"RTN","IBCNSGE",93,0)
 ;
"RTN","IBCNSGE",94,0)
 I IBRINS1=" ",IBRINS2="~~~~~" D  G RANGEX
"RTN","IBCNSGE",95,0)
 . K IBRINS,IBRINS1,IBRINS2
"RTN","IBCNSGE",96,0)
 . S IBRINS="A"
"RTN","IBCNSGE",97,0)
 . Q
"RTN","IBCNSGE",98,0)
 ;
"RTN","IBCNSGE",99,0)
 I IBRINS1]IBRINS2 D  G RANGE
"RTN","IBCNSGE",100,0)
 . W !!?5,"Sorry ..... Ending name must come after Starting name"
"RTN","IBCNSGE",101,0)
 . W !!?5,"Please try again",*7
"RTN","IBCNSGE",102,0)
 . Q
"RTN","IBCNSGE",103,0)
 ;
"RTN","IBCNSGE",104,0)
RANGEX ;
"RTN","IBCNSGE",105,0)
 Q
"RTN","IBCNSGE",106,0)
 ;
"RTN","IBCNSGE",107,0)
SORT ; Choose the sorting method
"RTN","IBCNSGE",108,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCNSGE",109,0)
 W !!?5,"*** Sort Criteria ***"
"RTN","IBCNSGE",110,0)
 S DIR(0)="SO^1:Insurance Company Name;2:Prof Electronic Bill ID;3:Inst Electronic Bill ID;4:Electronic Type;5:Type Of Coverage;6:Use VAMC as Billing Provider"
"RTN","IBCNSGE",111,0)
 S DIR("A")="Sort By",DIR("B")=1
"RTN","IBCNSGE",112,0)
 D ^DIR K DIR
"RTN","IBCNSGE",113,0)
 I $D(DIRUT) S STOP=1 G SORTX
"RTN","IBCNSGE",114,0)
 S IBRSORT=Y
"RTN","IBCNSGE",115,0)
SORTX ;
"RTN","IBCNSGE",116,0)
 Q
"RTN","IBCNSGE",117,0)
 ;
"RTN","IBCNSGE",118,0)
COMPILE ; Entry point for task; compile scratch global, print, clean-up
"RTN","IBCNSGE",119,0)
 ;
"RTN","IBCNSGE",120,0)
 NEW RTN,INSIEN,INSNM,DATA,ADDR,EDI,PROFID,INSTID,NAME,STREET,CITY
"RTN","IBCNSGE",121,0)
 NEW STATE,TYPCOV,TRANS,INSTYP,SORT,TMP,FLG,FLGP,FLGI,SWBCK
"RTN","IBCNSGE",122,0)
 ;
"RTN","IBCNSGE",123,0)
 S RTN="IBCNSGE"
"RTN","IBCNSGE",124,0)
 KILL ^TMP($J,RTN)   ; init
"RTN","IBCNSGE",125,0)
 ;
"RTN","IBCNSGE",126,0)
 ; all insurances
"RTN","IBCNSGE",127,0)
 I IBRINS="A" D
"RTN","IBCNSGE",128,0)
 . S INSIEN=0
"RTN","IBCNSGE",129,0)
 . F  S INSIEN=$O(^DIC(36,INSIEN)) Q:'INSIEN  D CALC(INSIEN)
"RTN","IBCNSGE",130,0)
 . Q
"RTN","IBCNSGE",131,0)
 ;
"RTN","IBCNSGE",132,0)
 ; specific insurances
"RTN","IBCNSGE",133,0)
 I IBRINS="S" D
"RTN","IBCNSGE",134,0)
 . S INSIEN=0
"RTN","IBCNSGE",135,0)
 . F  S INSIEN=$O(IBRINS(INSIEN)) Q:'INSIEN  D CALC(INSIEN)
"RTN","IBCNSGE",136,0)
 . Q
"RTN","IBCNSGE",137,0)
 ;
"RTN","IBCNSGE",138,0)
 ; a range of insurances
"RTN","IBCNSGE",139,0)
 I IBRINS="R" D
"RTN","IBCNSGE",140,0)
 . S INSNM=$O(^DIC(36,"B",IBRINS1),-1)
"RTN","IBCNSGE",141,0)
 . F  S INSNM=$O(^DIC(36,"B",INSNM)) Q:INSNM=""  Q:INSNM]IBRINS2  D
"RTN","IBCNSGE",142,0)
 .. S INSIEN=0
"RTN","IBCNSGE",143,0)
 .. F  S INSIEN=$O(^DIC(36,"B",INSNM,INSIEN)) Q:'INSIEN  D CALC(INSIEN)
"RTN","IBCNSGE",144,0)
 .. Q
"RTN","IBCNSGE",145,0)
 . Q
"RTN","IBCNSGE",146,0)
 ;
"RTN","IBCNSGE",147,0)
 D PRINT                           ; print the report
"RTN","IBCNSGE",148,0)
 D ^%ZISC                          ; close the device
"RTN","IBCNSGE",149,0)
 KILL ^TMP($J,RTN)                 ; kill scratch global
"RTN","IBCNSGE",150,0)
 I $D(ZTQUEUED) S ZTREQ="@"        ; purge the task record
"RTN","IBCNSGE",151,0)
COMPX ;
"RTN","IBCNSGE",152,0)
 Q
"RTN","IBCNSGE",153,0)
 ;
"RTN","IBCNSGE",154,0)
CALC(INS) ; extract insurance data for company ien=INS
"RTN","IBCNSGE",155,0)
 ;
"RTN","IBCNSGE",156,0)
 I '$$ACTIVE^IBCNEUT4(INS) G CALCX      ; not active
"RTN","IBCNSGE",157,0)
 S DATA=$G(^DIC(36,INS,0))
"RTN","IBCNSGE",158,0)
 S ADDR=$G(^DIC(36,INS,.11))
"RTN","IBCNSGE",159,0)
 S EDI=$G(^DIC(36,INS,3))
"RTN","IBCNSGE",160,0)
 S FLG=$G(^DIC(36,INS,4))
"RTN","IBCNSGE",161,0)
 S FLGP=+$P(FLG,U,11)      ; prof switchback flag
"RTN","IBCNSGE",162,0)
 S FLGI=+$P(FLG,U,12)      ; inst switchback flag
"RTN","IBCNSGE",163,0)
 S PROFID=$P(EDI,U,2)
"RTN","IBCNSGE",164,0)
 S INSTID=$P(EDI,U,4)
"RTN","IBCNSGE",165,0)
 ;
"RTN","IBCNSGE",166,0)
 I IBRBID,PROFID'="",INSTID'="",$$UP^XLFSTR(PROFID)'["PRNT",$$UP^XLFSTR(INSTID)'["PRNT" G CALCX
"RTN","IBCNSGE",167,0)
 ;
"RTN","IBCNSGE",168,0)
 S NAME=$P(DATA,U,1) S:NAME="" NAME="~UNK"
"RTN","IBCNSGE",169,0)
 S STREET=$P(ADDR,U,1)
"RTN","IBCNSGE",170,0)
 S CITY=$P(ADDR,U,4)
"RTN","IBCNSGE",171,0)
 S STATE=+$P(ADDR,U,5)
"RTN","IBCNSGE",172,0)
 S STATE=$S(STATE:$P($G(^DIC(5,STATE,0)),U,2),1:"")
"RTN","IBCNSGE",173,0)
 S TYPCOV=$$EXTERNAL^DILFD(36,.13,,$P(DATA,U,13))
"RTN","IBCNSGE",174,0)
 S TRANS=$$EXTERNAL^DILFD(36,3.01,,$P(EDI,U,1))
"RTN","IBCNSGE",175,0)
 S INSTYP=$$EXTERNAL^DILFD(36,3.09,,$P(EDI,U,9))
"RTN","IBCNSGE",176,0)
 S SWBCK="~"     ; default no switchback flags set; sort these at the end
"RTN","IBCNSGE",177,0)
 I FLGP,FLGI S SWBCK="BOTH"
"RTN","IBCNSGE",178,0)
 I FLGP,'FLGI S SWBCK="PROF"
"RTN","IBCNSGE",179,0)
 I 'FLGP,FLGI S SWBCK="INST"
"RTN","IBCNSGE",180,0)
 ;
"RTN","IBCNSGE",181,0)
 S SORT=" "
"RTN","IBCNSGE",182,0)
 I IBRSORT=1,NAME'="" S SORT=" "_NAME
"RTN","IBCNSGE",183,0)
 I IBRSORT=2,PROFID'="" S SORT=" "_PROFID
"RTN","IBCNSGE",184,0)
 I IBRSORT=3,INSTID'="" S SORT=" "_INSTID
"RTN","IBCNSGE",185,0)
 I IBRSORT=4,INSTYP'="" S SORT=" "_INSTYP
"RTN","IBCNSGE",186,0)
 I IBRSORT=5,TYPCOV'="" S SORT=" "_TYPCOV
"RTN","IBCNSGE",187,0)
 I IBRSORT=6,SWBCK'="" S SORT=" "_SWBCK
"RTN","IBCNSGE",188,0)
 ;
"RTN","IBCNSGE",189,0)
 S TMP=NAME_U_STREET_U_CITY_U_STATE_U_INSTYP_U_TYPCOV_U_TRANS_U_INSTID_U_PROFID_U_SWBCK
"RTN","IBCNSGE",190,0)
 S ^TMP($J,RTN,SORT,NAME,INS)=TMP
"RTN","IBCNSGE",191,0)
CALCX ;
"RTN","IBCNSGE",192,0)
 Q
"RTN","IBCNSGE",193,0)
 ;
"RTN","IBCNSGE",194,0)
PRINT ; print the report to the specified device
"RTN","IBCNSGE",195,0)
 NEW MAXCNT,CRT,PAGECNT,STOP,SORT,NAME,INS,DATA,DIR,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCNSGE",196,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCNSGE",197,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNSGE",198,0)
 S PAGECNT=0,STOP=0
"RTN","IBCNSGE",199,0)
 ;
"RTN","IBCNSGE",200,0)
 I '$D(^TMP($J,RTN)) D HEADER W !!!?5,"No Data Found"
"RTN","IBCNSGE",201,0)
 ;
"RTN","IBCNSGE",202,0)
 S SORT=""
"RTN","IBCNSGE",203,0)
 F  S SORT=$O(^TMP($J,RTN,SORT)) Q:SORT=""  D  Q:STOP
"RTN","IBCNSGE",204,0)
 . S NAME=""
"RTN","IBCNSGE",205,0)
 . F  S NAME=$O(^TMP($J,RTN,SORT,NAME)) Q:NAME=""  D  Q:STOP
"RTN","IBCNSGE",206,0)
 .. S INS=0
"RTN","IBCNSGE",207,0)
 .. F  S INS=$O(^TMP($J,RTN,SORT,NAME,INS)) Q:'INS  D  Q:STOP
"RTN","IBCNSGE",208,0)
 ... S DATA=$G(^TMP($J,RTN,SORT,NAME,INS))
"RTN","IBCNSGE",209,0)
 ... I $P(DATA,U,10)["~" S $P(DATA,U,10)=""
"RTN","IBCNSGE",210,0)
 ... I $Y+1>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCNSGE",211,0)
 ... W !,$E($P(DATA,U,1),1,25)       ; name
"RTN","IBCNSGE",212,0)
 ... W ?27,$E($P(DATA,U,2),1,19)     ; address1
"RTN","IBCNSGE",213,0)
 ... W ?47,$E($P(DATA,U,3),1,13)     ; city, st
"RTN","IBCNSGE",214,0)
 ... I $P(DATA,U,3)'="",$P(DATA,U,4)'="" W ","
"RTN","IBCNSGE",215,0)
 ... W $E($P(DATA,U,4),1,2)
"RTN","IBCNSGE",216,0)
 ... W ?65,$E($P(DATA,U,7),1,8)      ; transmit elec
"RTN","IBCNSGE",217,0)
 ... W ?75,$E($P(DATA,U,8),1,8)      ; inst payer id
"RTN","IBCNSGE",218,0)
 ... W ?84,$E($P(DATA,U,9),1,8)      ; prof payer id
"RTN","IBCNSGE",219,0)
 ... W ?94,$E($P(DATA,U,5),1,12)     ; ins type
"RTN","IBCNSGE",220,0)
 ... W ?108,$E($P(DATA,U,6),1,18)    ; type of cov
"RTN","IBCNSGE",221,0)
 ... W ?128,$E($P(DATA,U,10),1,4)    ; switchback flag
"RTN","IBCNSGE",222,0)
 ... Q
"RTN","IBCNSGE",223,0)
 .. Q
"RTN","IBCNSGE",224,0)
 . Q
"RTN","IBCNSGE",225,0)
 ;
"RTN","IBCNSGE",226,0)
 I STOP G PRINTX
"RTN","IBCNSGE",227,0)
 W !!?5,"*** End of Report ***"
"RTN","IBCNSGE",228,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNSGE",229,0)
PRINTX ;
"RTN","IBCNSGE",230,0)
 Q
"RTN","IBCNSGE",231,0)
 ;
"RTN","IBCNSGE",232,0)
HEADER ; page break and report header information
"RTN","IBCNSGE",233,0)
 NEW LIN,HDR,TAB,C1,C2
"RTN","IBCNSGE",234,0)
 S STOP=0
"RTN","IBCNSGE",235,0)
 I CRT,PAGECNT>0,'$D(ZTQUEUED) D  I STOP G HEADX
"RTN","IBCNSGE",236,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNSGE",237,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNSGE",238,0)
 . I 'Y S STOP=1 Q
"RTN","IBCNSGE",239,0)
 . Q
"RTN","IBCNSGE",240,0)
 ;
"RTN","IBCNSGE",241,0)
 S PAGECNT=PAGECNT+1
"RTN","IBCNSGE",242,0)
 W @IOF,!
"RTN","IBCNSGE",243,0)
 ;
"RTN","IBCNSGE",244,0)
 I IBRINS="A" W "All Companies"
"RTN","IBCNSGE",245,0)
 I IBRINS="S" W "Selected Companies"
"RTN","IBCNSGE",246,0)
 I IBRINS="R" D    ; range description
"RTN","IBCNSGE",247,0)
 . S C1=IBRINS1 I C1=" " S C1="First"
"RTN","IBCNSGE",248,0)
 . S C2=IBRINS2 I C2="~~~~~" S C2="Last"
"RTN","IBCNSGE",249,0)
 . W "Companies [",C1,"] through [",C2,"]"
"RTN","IBCNSGE",250,0)
 . Q
"RTN","IBCNSGE",251,0)
 ;
"RTN","IBCNSGE",252,0)
 W ?45,"  Insurance Company EDI Parameter Report"
"RTN","IBCNSGE",253,0)
 S HDR="Page: "_PAGECNT,TAB=132-$L(HDR)-1
"RTN","IBCNSGE",254,0)
 W ?TAB,HDR
"RTN","IBCNSGE",255,0)
 ;
"RTN","IBCNSGE",256,0)
 W !,"Sorted By "
"RTN","IBCNSGE",257,0)
 I IBRSORT=1 W "Ins Company Name"
"RTN","IBCNSGE",258,0)
 I IBRSORT=2 W "Prof ID"
"RTN","IBCNSGE",259,0)
 I IBRSORT=3 W "Inst ID"
"RTN","IBCNSGE",260,0)
 I IBRSORT=4 W "Electronic Type"
"RTN","IBCNSGE",261,0)
 I IBRSORT=5 W "Type of Coverage"
"RTN","IBCNSGE",262,0)
 I IBRSORT=6 W "Use VAMC as Billing Provider"
"RTN","IBCNSGE",263,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,"1Z"),TAB=132-$L(HDR)-1
"RTN","IBCNSGE",264,0)
 W ?TAB,HDR
"RTN","IBCNSGE",265,0)
 ;
"RTN","IBCNSGE",266,0)
 W !,"Only Blank or 'PRNT' Bill ID's = ",$S(IBRBID:"YES",1:"NO"),?128,"VAMC"
"RTN","IBCNSGE",267,0)
 ;
"RTN","IBCNSGE",268,0)
 W !?65,"Electron",?75,"Inst",?84,"Prof",?94,"Electronic",?128,"Bill"
"RTN","IBCNSGE",269,0)
 W !,"Insurance Company Name",?27,"Street Address",?47,"City"
"RTN","IBCNSGE",270,0)
 W ?65,"Transmit",?76,"ID",?85,"ID",?97,"Type",?108,"Type of Coverage",?128,"Prov"
"RTN","IBCNSGE",271,0)
 W !,$$RJ^XLFSTR("",132,"=")
"RTN","IBCNSGE",272,0)
 ;
"RTN","IBCNSGE",273,0)
 ; check for a stop request
"RTN","IBCNSGE",274,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HEADX
"RTN","IBCNSGE",275,0)
 . S (ZTSTOP,STOP)=1
"RTN","IBCNSGE",276,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","IBCNSGE",277,0)
 . Q
"RTN","IBCNSGE",278,0)
HEADX ;
"RTN","IBCNSGE",279,0)
 Q
"RTN","IBCNSGE",280,0)
 ;
"RTN","IBCNSGE",281,0)
DEVICE ; Device selection before compile
"RTN","IBCNSGE",282,0)
 NEW ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCNSGE",283,0)
 W !!!,"This report is 132 columns wide.  Please choose an appropriate device.",!
"RTN","IBCNSGE",284,0)
 S ZTRTN="COMPILE^IBCNSGE"
"RTN","IBCNSGE",285,0)
 S ZTDESC="Insurance Company EDI Parameter Report"
"RTN","IBCNSGE",286,0)
 S ZTSAVE("IBRINS")=""
"RTN","IBCNSGE",287,0)
 S ZTSAVE("IBRBID")=""
"RTN","IBCNSGE",288,0)
 S ZTSAVE("IBRINS1")=""
"RTN","IBCNSGE",289,0)
 S ZTSAVE("IBRINS2")=""
"RTN","IBCNSGE",290,0)
 S ZTSAVE("IBRSORT")=""
"RTN","IBCNSGE",291,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM")
"RTN","IBCNSGE",292,0)
DEVX ;
"RTN","IBCNSGE",293,0)
 Q
"RTN","IBCNSGE",294,0)
 ;
"RTN","IBCNSGM")
0^51^B42642306^n/a
"RTN","IBCNSGM",1,0)
IBCNSGM ;ALB/ESG - Insurance Company Billing Provider Flag Rpt/Msg ;06-APR-2009
"RTN","IBCNSGM",2,0)
 ;;2.0;INTEGRATED BILLING;**400**;21-MAR-94;Build 52
"RTN","IBCNSGM",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSGM",4,0)
 ;
"RTN","IBCNSGM",5,0)
EN ; entry point also from the top
"RTN","IBCNSGM",6,0)
 I '$$PROD^XUPROD(1) G EX     ; production account only
"RTN","IBCNSGM",7,0)
 D COMPILE
"RTN","IBCNSGM",8,0)
 D EMAIL
"RTN","IBCNSGM",9,0)
EX ;
"RTN","IBCNSGM",10,0)
 Q
"RTN","IBCNSGM",11,0)
 ;
"RTN","IBCNSGM",12,0)
COMPILE ; Build a sorted scratch global of payers in switchback mode
"RTN","IBCNSGM",13,0)
 N IEN,Z,FLGP,FLGI,DATA,ADDR,EDI,PROFID,INSTID,NAME,STREET,CITY,STATE,TRANS,SWBCK,TMP
"RTN","IBCNSGM",14,0)
 K ^TMP($J,"IBCNSGM")
"RTN","IBCNSGM",15,0)
 S IEN=0 F  S IEN=$O(^DIC(36,IEN)) Q:'IEN  D
"RTN","IBCNSGM",16,0)
 . I '$$ACTIVE^IBCNEUT4(IEN) Q     ; skip inactive insurance companies
"RTN","IBCNSGM",17,0)
 . S Z=$G(^DIC(36,IEN,4))
"RTN","IBCNSGM",18,0)
 . S FLGP=+$P(Z,U,11)              ; prof switchback flag
"RTN","IBCNSGM",19,0)
 . S FLGI=+$P(Z,U,12)              ; inst switchback flag
"RTN","IBCNSGM",20,0)
 . I 'FLGP,'FLGI Q                 ; both switchback flags are off
"RTN","IBCNSGM",21,0)
 . S DATA=$G(^DIC(36,IEN,0))
"RTN","IBCNSGM",22,0)
 . S ADDR=$G(^DIC(36,IEN,.11))
"RTN","IBCNSGM",23,0)
 . S EDI=$G(^DIC(36,IEN,3))
"RTN","IBCNSGM",24,0)
 . S PROFID=$P(EDI,U,2)
"RTN","IBCNSGM",25,0)
 . S INSTID=$P(EDI,U,4)
"RTN","IBCNSGM",26,0)
 . S NAME=$P(DATA,U,1) S:NAME="" NAME="~UNK"
"RTN","IBCNSGM",27,0)
 . S STREET=$P(ADDR,U,1)
"RTN","IBCNSGM",28,0)
 . S CITY=$P(ADDR,U,4)
"RTN","IBCNSGM",29,0)
 . S STATE=+$P(ADDR,U,5)
"RTN","IBCNSGM",30,0)
 . S STATE=$S(STATE:$P($G(^DIC(5,STATE,0)),U,2),1:"")
"RTN","IBCNSGM",31,0)
 . S TRANS=$$EXTERNAL^DILFD(36,3.01,,$P(EDI,U,1))
"RTN","IBCNSGM",32,0)
 . S SWBCK=""
"RTN","IBCNSGM",33,0)
 . I FLGP,FLGI S SWBCK="BOTH"
"RTN","IBCNSGM",34,0)
 . I FLGP,'FLGI S SWBCK="PROF"
"RTN","IBCNSGM",35,0)
 . I 'FLGP,FLGI S SWBCK="INST"
"RTN","IBCNSGM",36,0)
 . ;
"RTN","IBCNSGM",37,0)
 . S TMP=STREET_U_CITY_U_STATE_U_SWBCK_U_TRANS_U_INSTID_U_PROFID
"RTN","IBCNSGM",38,0)
 . S ^TMP($J,"IBCNSGM",1,NAME,IEN)=TMP
"RTN","IBCNSGM",39,0)
 . S ^TMP($J,"IBCNSGM",1)=$G(^TMP($J,"IBCNSGM",1))+1
"RTN","IBCNSGM",40,0)
 . Q
"RTN","IBCNSGM",41,0)
COMPX ;
"RTN","IBCNSGM",42,0)
 Q
"RTN","IBCNSGM",43,0)
 ;
"RTN","IBCNSGM",44,0)
EMAIL ; Construct the subject and text of the message and send it
"RTN","IBCNSGM",45,0)
 N MSG,LN,SITE,ZNP,XMSUBJ,XMTO,NM,IEN,TMP,DISP,CITY,SUBJ,GLO,GLB,KEY,IBX,XMINSTR
"RTN","IBCNSGM",46,0)
 S SITE=$$SITE^VASITE
"RTN","IBCNSGM",47,0)
 S ZNP=+$G(^TMP($J,"IBCNSGM",1))
"RTN","IBCNSGM",48,0)
 S XMSUBJ="Switchback Mode - "_$P(SITE,U,3)_" - "_ZNP_" Payer"_$S(ZNP=1:"",1:"s")_" - "_$P(SITE,U,2)
"RTN","IBCNSGM",49,0)
 S XMSUBJ=$E(XMSUBJ,1,65)
"RTN","IBCNSGM",50,0)
 S MSG=$NA(^TMP($J,"IBCNSGM",2))
"RTN","IBCNSGM",51,0)
 K @MSG
"RTN","IBCNSGM",52,0)
 S LN=0
"RTN","IBCNSGM",53,0)
 S LN=LN+1,@MSG@(LN)="This report shows VistA insurance companies which are in IB patch 400 switchback mode for the following site."
"RTN","IBCNSGM",54,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",55,0)
 S LN=LN+1,@MSG@(LN)="        Name: "_$P(SITE,U,2)
"RTN","IBCNSGM",56,0)
 S LN=LN+1,@MSG@(LN)="    Station#: "_$P(SITE,U,3)
"RTN","IBCNSGM",57,0)
 S LN=LN+1,@MSG@(LN)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","IBCNSGM",58,0)
 S LN=LN+1,@MSG@(LN)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"5ZPM")
"RTN","IBCNSGM",59,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",60,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",61,0)
 S LN=LN+1,@MSG@(LN)="Insurance                Street                                Switch  Electron  Inst     Prof"
"RTN","IBCNSGM",62,0)
 S LN=LN+1,@MSG@(LN)="Company Name             Address            City                Back   Transmit   ID       ID"
"RTN","IBCNSGM",63,0)
 S LN=LN+1,@MSG@(LN)="---------------------------------------------------------------------------------------------------"
"RTN","IBCNSGM",64,0)
 ;
"RTN","IBCNSGM",65,0)
 S NM="" F  S NM=$O(^TMP($J,"IBCNSGM",1,NM)) Q:NM=""  S IEN=0 F  S IEN=$O(^TMP($J,"IBCNSGM",1,NM,IEN)) Q:'IEN  D
"RTN","IBCNSGM",66,0)
 . S TMP=$G(^TMP($J,"IBCNSGM",1,NM,IEN))
"RTN","IBCNSGM",67,0)
 . S DISP=$$FO^IBCNEUT1(NM,24)_" "                       ; ins co name
"RTN","IBCNSGM",68,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,1),18)_" "         ; street address
"RTN","IBCNSGM",69,0)
 . S CITY=$E($P(TMP,U,2),1,16)
"RTN","IBCNSGM",70,0)
 . I CITY'="",$P(TMP,U,3)'="" S CITY=CITY_","
"RTN","IBCNSGM",71,0)
 . S CITY=CITY_$P(TMP,U,3)
"RTN","IBCNSGM",72,0)
 . S DISP=DISP_$$FO^IBCNEUT1(CITY,19)_" "                ; city, state
"RTN","IBCNSGM",73,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,4),4)_"   "        ; switchback flag value
"RTN","IBCNSGM",74,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,5),8)_"  "         ; electronic transmit flag
"RTN","IBCNSGM",75,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,6),8)_" "          ; inst payer ID
"RTN","IBCNSGM",76,0)
 . S DISP=DISP_$$FO^IBCNEUT1($P(TMP,U,7),8)              ; prof payer ID
"RTN","IBCNSGM",77,0)
 . S LN=LN+1,@MSG@(LN)=DISP
"RTN","IBCNSGM",78,0)
 . Q
"RTN","IBCNSGM",79,0)
 ;
"RTN","IBCNSGM",80,0)
 I 'ZNP D
"RTN","IBCNSGM",81,0)
 . S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",82,0)
 . S LN=LN+1,@MSG@(LN)="        No Data Found"
"RTN","IBCNSGM",83,0)
 . Q
"RTN","IBCNSGM",84,0)
 ;
"RTN","IBCNSGM",85,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",86,0)
 S LN=LN+1,@MSG@(LN)="Total number of companies in switchback mode: "_ZNP
"RTN","IBCNSGM",87,0)
 S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",88,0)
 S LN=LN+1,@MSG@(LN)="*** End of Report ***"
"RTN","IBCNSGM",89,0)
 ;
"RTN","IBCNSGM",90,0)
 ; display taskman schedule information for server request
"RTN","IBCNSGM",91,0)
 I $G(IBSNDRSQ)'="" D
"RTN","IBCNSGM",92,0)
 . N OPTNM,IBZ,T
"RTN","IBCNSGM",93,0)
 . S OPTNM="IBCN INS BILL PROV FLAG RPT"
"RTN","IBCNSGM",94,0)
 . D OPTSTAT^XUTMOPT(OPTNM,.IBZ)
"RTN","IBCNSGM",95,0)
 . S T=$G(IBZ(1))
"RTN","IBCNSGM",96,0)
 . S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",97,0)
 . S LN=LN+1,@MSG@(LN)=""
"RTN","IBCNSGM",98,0)
 . S LN=LN+1,@MSG@(LN)="TaskManager Schedule Report for server request"
"RTN","IBCNSGM",99,0)
 . S LN=LN+1,@MSG@(LN)="----------------------------------------------"
"RTN","IBCNSGM",100,0)
 . S LN=LN+1,@MSG@(LN)="           Option: "_OPTNM
"RTN","IBCNSGM",101,0)
 . S LN=LN+1,@MSG@(LN)="      Task Number: "_$P(T,U,1)
"RTN","IBCNSGM",102,0)
 . S LN=LN+1,@MSG@(LN)="    Queued to Run: "_$$FMTE^XLFDT($P(T,U,2),"5ZPM")
"RTN","IBCNSGM",103,0)
 . S LN=LN+1,@MSG@(LN)="Rescheduling Freq: "_$P(T,U,3)
"RTN","IBCNSGM",104,0)
 . Q
"RTN","IBCNSGM",105,0)
 ;
"RTN","IBCNSGM",106,0)
 ; Address the message
"RTN","IBCNSGM",107,0)
 I $G(IBSNDRSQ)="" S XMTO("vhacoebilpm@va.gov")=""
"RTN","IBCNSGM",108,0)
 I $G(IBSNDRSQ)'="" S XMTO(IBSNDRSQ)=""
"RTN","IBCNSGM",109,0)
 ;
"RTN","IBCNSGM",110,0)
 S XMINSTR("FROM")="VistA-eBilling"
"RTN","IBCNSGM",111,0)
 ;
"RTN","IBCNSGM",112,0)
 D SENDMSG^XMXAPI(DUZ,XMSUBJ,MSG,.XMTO,.XMINSTR)
"RTN","IBCNSGM",113,0)
 K ^TMP($J,"IBCNSGM")                ; clean-up scratch global
"RTN","IBCNSGM",114,0)
 I '$D(^TMP("XMERR",$J)) G EMAILX    ; no email problems so get out
"RTN","IBCNSGM",115,0)
 ;
"RTN","IBCNSGM",116,0)
 S SUBJ="IB*2*400 - MailMan Error - Ins Co Billing Provider Flag Rpt/Msg"
"RTN","IBCNSGM",117,0)
 K MSG S LN=0
"RTN","IBCNSGM",118,0)
 S LN=LN+1,MSG(LN)="MailMan reported the following error(s) when attempting to send the"
"RTN","IBCNSGM",119,0)
 S LN=LN+1,MSG(LN)="Insurance Company Billing Provider Flag Report."
"RTN","IBCNSGM",120,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBCNSGM",121,0)
 S (GLO,GLB)="^TMP(""XMERR"","_$J
"RTN","IBCNSGM",122,0)
 S GLO=GLO_")"
"RTN","IBCNSGM",123,0)
 F  S GLO=$Q(@GLO) Q:GLO'[GLB  S LN=LN+1,MSG(LN)="   "_GLO_" = "_$G(@GLO)
"RTN","IBCNSGM",124,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBCNSGM",125,0)
 S LN=LN+1,MSG(LN)="This report should be automatically run on a regular schedule through"
"RTN","IBCNSGM",126,0)
 S LN=LN+1,MSG(LN)="TaskManager.  The VistA option name is IBCN INS BILL PROV FLAG RPT."
"RTN","IBCNSGM",127,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBCNSGM",128,0)
 S LN=LN+1,MSG(LN)="Please correct the MailMan problem and re-run this report.  If you"
"RTN","IBCNSGM",129,0)
 S LN=LN+1,MSG(LN)="need help, please enter a Remedy ticket or call the help desk at"
"RTN","IBCNSGM",130,0)
 S LN=LN+1,MSG(LN)="1-888-596-4357."
"RTN","IBCNSGM",131,0)
 ;
"RTN","IBCNSGM",132,0)
 K XMTO,XMINSTR
"RTN","IBCNSGM",133,0)
 S XMTO(DUZ)=""
"RTN","IBCNSGM",134,0)
 S XMINSTR("FROM")="VistA routine IBCNSGM"
"RTN","IBCNSGM",135,0)
 ;
"RTN","IBCNSGM",136,0)
 ; send this local msg to holders of these security keys so they can fix the problems (IA# 10076)
"RTN","IBCNSGM",137,0)
 F KEY="XUMGR","XUPROG" S IBX=0 F  S IBX=$O(^XUSEC(KEY,IBX)) Q:'IBX  S XMTO(IBX)=""
"RTN","IBCNSGM",138,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO,.XMINSTR)
"RTN","IBCNSGM",139,0)
 K MSG
"RTN","IBCNSGM",140,0)
 ;
"RTN","IBCNSGM",141,0)
EMAILX ;
"RTN","IBCNSGM",142,0)
 Q
"RTN","IBCNSGM",143,0)
 ;
"RTN","IBCNSGM",144,0)
SRV ; server entry point
"RTN","IBCNSGM",145,0)
 ; send the report and the TaskManager schedule at the site back to the sender of the server request
"RTN","IBCNSGM",146,0)
 N MMHD,IBSNDRSQ
"RTN","IBCNSGM",147,0)
 I '$G(XMZ) G SRVX                      ; only for processing incoming server requests
"RTN","IBCNSGM",148,0)
 S MMHD=$$NET^XMRENT(XMZ)               ; mailman header information
"RTN","IBCNSGM",149,0)
 S IBSNDRSQ=$TR($P(MMHD,U,3),"<>")      ; sender of server request
"RTN","IBCNSGM",150,0)
 D EN                                   ; send message
"RTN","IBCNSGM",151,0)
 D ZAPSERV^XMXAPI("S.IBCNSRVBP",XMZ)    ; delete msg from server basket
"RTN","IBCNSGM",152,0)
SRVX ;
"RTN","IBCNSGM",153,0)
 Q
"RTN","IBCNSGM",154,0)
 ;
"RTN","IBCSC1")
0^48^B9954436^B6857570
"RTN","IBCSC1",1,0)
IBCSC1 ;ALB/MJB - MCCR SCREEN 1 (DEMOGRAPHICS) ;27 MAY 88 10:13
"RTN","IBCSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**51,161,349,400**;21-MAR-94;Build 52
"RTN","IBCSC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC1",4,0)
 ; DBIA for reference to DG ELIGIBILITY key: DBIA3109
"RTN","IBCSC1",5,0)
 ;
"RTN","IBCSC1",6,0)
 ;MAP TO DGCRSC1
"RTN","IBCSC1",7,0)
 ;
"RTN","IBCSC1",8,0)
BEN S IBSR=1,IBSR1="",IBV1=$S($D(^XUSEC("DG ELIGIBILITY",DUZ)):"000000",1:101100)
"RTN","IBCSC1",9,0)
 S:IBV IBV1="111111"
"RTN","IBCSC1",10,0)
 S IB(0)=$S($D(^DGCR(399,IBIFN,0)):^(0),1:"")
"RTN","IBCSC1",11,0)
 D:'$D(IBWW) ^IBCSCU D ALL^IBCVA0,H^IBCSCU
"RTN","IBCSC1",12,0)
 ;
"RTN","IBCSC1",13,0)
 ; Add/Update to ClaimsManager file (#351.9) if running ClaimsManager
"RTN","IBCSC1",14,0)
 I $$CM^IBCIUT1(IBIFN) D ST1^IBCIST
"RTN","IBCSC1",15,0)
 ;
"RTN","IBCSC1",16,0)
 ; coming into the billing screens, default the service facility taxonomy code if blank
"RTN","IBCSC1",17,0)
 N IBU3,BPZ
"RTN","IBCSC1",18,0)
 S IBU3=$G(^DGCR(399,IBIFN,"U3"))
"RTN","IBCSC1",19,0)
 S BPZ=$$B^IBCEF79(IBIFN)
"RTN","IBCSC1",20,0)
 I '$P(IBU3,U,2),$P(BPZ,U,3)'="" D      ; if no svc fac taxonomy code and a svc fac exists
"RTN","IBCSC1",21,0)
 . N SFTAX,DIE,DA,DR,D,D0,DI
"RTN","IBCSC1",22,0)
 . S SFTAX=""
"RTN","IBCSC1",23,0)
 . I $P(BPZ,U,3)=0,+$P(BPZ,U,4) S SFTAX=+$P($$TAXORG^XUSTAX(+$P(BPZ,U,4)),U,2)     ; ien to file 8932.1 for VA svc fac
"RTN","IBCSC1",24,0)
 . I $P(BPZ,U,3)=1,+$P(BPZ,U,4) S SFTAX=+$P($$TAXGET^IBCEP81(+$P(BPZ,U,4)),U,2)    ; ien to file 8932.1 for non-VA svc fac
"RTN","IBCSC1",25,0)
 . I 'SFTAX Q
"RTN","IBCSC1",26,0)
 . S DIE=399,DA=IBIFN,DR="243////"_SFTAX D ^DIE
"RTN","IBCSC1",27,0)
 . Q
"RTN","IBCSC1",28,0)
 ;
"RTN","IBCSC1",29,0)
1 S Z=1,IBW=1 X IBWW W " DOB    : ",$P(VADM(3),"^",2) I $G(VADM(6)) W ?42,"Date of Death: ",$P(VADM(6),U,2)," (uneditable)"
"RTN","IBCSC1",30,0)
 ;
"RTN","IBCSC1",31,0)
2 S (I1,Z1)="",Z=2,IBW=1 X IBWW W " Alias  : " F I=0:0 S I=$O(^DPT(DFN,.01,I)) Q:I=""  S I1=1 W:$X>40 !?13 S Z1=36,Z=$E($P(^(I,0),"^",1),1,29) W Z,"/"
"RTN","IBCSC1",32,0)
 W:'I1 "NO ALIAS ON FILE"
"RTN","IBCSC1",33,0)
 ;
"RTN","IBCSC1",34,0)
3 S Z=3,IBW=1 X IBWW W " Sex    : ",$S($P(VADM(5),U,2)]"":$P(VADM(5),U,2),1:IBU),?48,"Marital: ",$S($D(^DIC(11,+$P(^DPT(DFN,0),U,5),0)):$E($P(^(0),U,1),1,28),1:IBU)
"RTN","IBCSC1",35,0)
 ;
"RTN","IBCSC1",36,0)
4 S Z=4,IBW=1 X IBWW W " Veteran: ",$S('$D(VAEL(4)):IBU,+VAEL(4):"YES",1:"NO"),?44,"Eligibility: ",$S((VAEL(1)]""):$E($P(^DIC(8,(+VAEL(1)),0),"^",6),1,22),1:IBU)
"RTN","IBCSC1",37,0)
 F I=.11,.121 S IB(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","IBCSC1",38,0)
 K IBA S IBAD=.11,(IBA1,IBA2)=1 D A^IBCSCU I $P(IB(.121),"^",9)="Y" S IBAD=.121,IBA1=1,IBA2=2 D A^IBCSCU
"RTN","IBCSC1",39,0)
 ;
"RTN","IBCSC1",40,0)
5 W ! S Z=5,IBW=1 X IBWW W " Address: ",$S($D(IBA(1)):IBA(1),1:"NONE ON FILE"),?46,"Temporary: ",$S($D(IBA(2)):IBA(2),1:"NO TEMPORARY ADDRESS")
"RTN","IBCSC1",41,0)
 S I=2 F I1=0:0 S I=$O(IBA(I)) Q:I=""  W:I#2!($X>50) !?13 W:'(I#2) ?57 W IBA(I)
"RTN","IBCSC1",42,0)
 ;
"RTN","IBCSC1",43,0)
6 W ! S Z=6,IBW=1 X IBWW W " SC Care: " S X=$P(IB(0),"^",18) W $S(X="":"UNSPECIFIED",X:"YES",1:"NO") I X W "  (Enter '6' to list disabilites)"
"RTN","IBCSC1",44,0)
 G ^IBCSCP
"RTN","IBCSC1",45,0)
 Q
"RTN","IBCSC1",46,0)
 ;IBCSC1
"RTN","IBCSC4")
0^42^B25396440^B23702708
"RTN","IBCSC4",1,0)
IBCSC4 ;ALB/MJB - MCCR SCREEN 4 (INPT. EOC) ;27 MAY 88 10:17
"RTN","IBCSC4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,210,245,155,287,349,403,400**;21-MAR-94;Build 52
"RTN","IBCSC4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC4",4,0)
 ;
"RTN","IBCSC4",5,0)
 ;MAP TO DGCRSC4
"RTN","IBCSC4",6,0)
 ;
"RTN","IBCSC4",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC5
"RTN","IBCSC4",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) D ASK^IBCU7A(IBIFN) S DGRVRCAL=1
"RTN","IBCSC4",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC4",10,0)
 D ^IBCSCU S IBSR=4,IBSR1="",IBV1="0000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1),IBUC="UNSPECIFIED CODE"
"RTN","IBCSC4",11,0)
 S:IBV IBV1="11111111"
"RTN","IBCSC4",12,0)
 D H^IBCSCU F I=1:1:4 S Y="Q"_I_"^IBCVA" D @Y
"RTN","IBCSC4",13,0)
 D INP
"RTN","IBCSC4",14,0)
 S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC4",15,0)
 D:DGPT(0)]"" DX^IBCSC4A D OCC^IBCVA1
"RTN","IBCSC4",16,0)
 I '$P(DGPT(0),U,6) W !?26,$S('DGPT(0):"No PTF record for this ADMISSION",1:"PTF record status: OPEN")
"RTN","IBCSC4",17,0)
 S J=$P(IB("U"),U,20),J=$S(J=99:"",J="":"",J=0:"",$L(J)=1:".0"_J,1:"."_J)
"RTN","IBCSC4",18,0)
 S Z=1 X IBWW W " Admission  : " S I=$S($P(DGPT(0),U,2)]"":$P(DGPT(0),U,2),1:$P(IBIP,U,2)_J) S:$P(I,".",2)=""&I $P(I,".",2)="2400"
"RTN","IBCSC4",19,0)
 S Y=$$FMTE^XLFDT(I,"1P")
"RTN","IBCSC4",20,0)
 W Y,?49,"Accident Hour: ",$S($P(IB("U"),U,10)=99:IBU,$P(IB("U"),U,10)'="":$P(IB("U"),U,10),1:IBU)
"RTN","IBCSC4",21,0)
 W !?4,"Source     : " S I=$P(^DD(399,159,0),U,3),I=$P($P(I,";",($P(IB("U"),U,9))),":",2) W I
"RTN","IBCSC4",22,0)
 ;
"RTN","IBCSC4",23,0)
 ; IB*2*400 - new values added to field# 158
"RTN","IBCSC4",24,0)
 N ATIN,ATEX
"RTN","IBCSC4",25,0)
 S ATIN=+$P($G(IB("U")),U,8),ATEX=""
"RTN","IBCSC4",26,0)
 I ATIN S ATEX=$$EXTERNAL^DILFD(399,158,,ATIN)
"RTN","IBCSC4",27,0)
 I ATIN=9 S ATEX="INFO NOT AVAIL"    ; so it fits on the screen
"RTN","IBCSC4",28,0)
 I ATEX="" S ATEX=IBU
"RTN","IBCSC4",29,0)
 W ?58,"Type: ",ATEX
"RTN","IBCSC4",30,0)
 ;
"RTN","IBCSC4",31,0)
 D OT
"RTN","IBCSC4",32,0)
 S Z=2 X IBWW
"RTN","IBCSC4",33,0)
 W " Discharge  : " S Y=$S($P(IBIP,U,6)>0:$P(IBIP,U,6),1:"") X ^DD("DD") W $S(Y]"":Y,1:IBU)
"RTN","IBCSC4",34,0)
 W !?4,"Status     : ",$S($P(IB("U"),U,12)]""&($D(^DGCR(399.1,(+$P(IB("U"),"^",12)),0))):$P(^(0),"^",1),1:IBU)
"RTN","IBCSC4",35,0)
 N IBPOARR,IBDATE,NEEDPOA,POA
"RTN","IBCSC4",36,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC4",37,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The EVENT DATE of the bill
"RTN","IBCSC4",38,0)
 S NEEDPOA=$$INPAT^IBCEF(IBIFN)&($$FT^IBCEF(IBIFN)=3)
"RTN","IBCSC4",39,0)
 S Z=3,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX(0,IBDATE),POA="" S:NEEDPOA&(Y'="") POA=$P(IBPOARR(+Y),U,3)
"RTN","IBCSC4",40,0)
 W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2)_$S(POA=""!(POA=1):"",1:" ("_POA_")"),$$DXREQ(IBIFN):IBU,1:IBUN)
"RTN","IBCSC4",41,0)
 F I=1:1:4 S Y=$$DX(+Y,IBDATE) Q:Y=""  D
"RTN","IBCSC4",42,0)
 .S POA="" S:NEEDPOA POA=$P(IBPOARR(+Y),U,3)
"RTN","IBCSC4",43,0)
 .W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)_$S(POA=""!(POA=1):"",1:" ("_POA_")")
"RTN","IBCSC4",44,0)
 .Q
"RTN","IBCSC4",45,0)
 I +Y S Y=$$DX(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC4",46,0)
 S Z=4,IBW=1,DGPCM=$P(IB(0),U,9) X IBWW W " Cod. Method: ",$S(DGPCM="":IBUN,DGPCM=9:"ICD-9-CM",DGPCM=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC4",47,0)
 D:$D(IBPROC) WRT^IBCSC5
"RTN","IBCSC4",48,0)
OCC ;
"RTN","IBCSC4",49,0)
 S Z=$S($P(IB(0),U,5)<3:5,1:6)
"RTN","IBCSC4",50,0)
 S IBW=1 X IBWW W " Pros. Items: " S Y=$$PD^IBCSC5 I 'Y W IBUN
"RTN","IBCSC4",51,0)
 S Z=$S($P(IB(0),U,5)<3:6,1:7) X IBWW
"RTN","IBCSC4",52,0)
 W " Occ. Code  : " F I=1:1:5 I $D(IBO(I)) W:I>1 !?4,"Occ. Code  : ",$E(IBOCN(I),1,27) W:I=1 $E(IBOCN(I),1,27) S Y=IBOCD(I) X ^DD("DD") W ?55,Y S Y=IBOCD2(I) I +Y X ^DD("DD") W " - ",Y
"RTN","IBCSC4",53,0)
 I '$D(IBO) W IBUN
"RTN","IBCSC4",54,0)
 I $D(IBO)=1,IBO="" W IBUN
"RTN","IBCSC4",55,0)
 S Z=$S($P(IB(0),U,5)<3:7,1:8) X IBWW
"RTN","IBCSC4",56,0)
 W " Cond. Code : " F I=1:1:5 I $D(IBCC(I)) W:I>1 !?4,"Cond. Code : ",IBCCN(I) W:I=1 IBCCN(I)
"RTN","IBCSC4",57,0)
 I '$D(IBCC) W IBUN
"RTN","IBCSC4",58,0)
 I $D(IBCC)=1,IBCC="" W IBUN
"RTN","IBCSC4",59,0)
 S Z=$S($P(IB(0),U,5)<3:8,1:9)
"RTN","IBCSC4",60,0)
 X IBWW W " Value Code : " S IBVC=0
"RTN","IBCSC4",61,0)
 I $$FT^IBCEF(IBIFN)'=2 D
"RTN","IBCSC4",62,0)
 . D VC^IBCVA1 I +IBVC S J=1,I=0 F  S I=$O(IBVC(I)) Q:'I  W:J>1 !,?3," Value Code : " W ?17,$E($P(IBVC(I),U,2),1,40),?58,$P(IBVC(I),U,3) S J=J+1
"RTN","IBCSC4",63,0)
 W:'IBVC IBUN K IBVC
"RTN","IBCSC4",64,0)
 D Q^IBCSC4B G ^IBCSCP
"RTN","IBCSC4",65,0)
 Q
"RTN","IBCSC4",66,0)
OCC1 W $P(^DGCR(399,IBIFN,"CP",I,0),"^",3)_" - "_$P($$PRCD^IBCEF1($P(^DGCR(399,IBIFN,"CP",I,0),U)),U),?55,"Date: ",Y
"RTN","IBCSC4",67,0)
 Q
"RTN","IBCSC4",68,0)
 ;IBIP= PTF ptr (399,.08) ^ PTF admiss dt (45,2) or Event dt (399,.03)^ accident hour (399,160) 
"RTN","IBCSC4",69,0)
 ; ^ source of addmis (399,159) ^ typ of addmiss (399,158)
"RTN","IBCSC4",70,0)
 ; ^ PTF disch dt (45,70) or Non-VA disch dt (399,.16) ^ disch status (399,162)
"RTN","IBCSC4",71,0)
 ; ^ dxls (45,79) ^ disch bedsection (399,161)
"RTN","IBCSC4",72,0)
INP F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",73,0)
 S IBPTF=$P(IB(0),U,8) F I=0,70 S DGPT(I)=$S(IBPTF="":"",$D(^DGPT(IBPTF,I)):^(I),1:"")
"RTN","IBCSC4",74,0)
 F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",75,0)
 S IBIP=IBPTF_"^"_$S($P(DGPT(0),"^",2)]"":$P(DGPT(0),"^",2),1:$P(IB(0),"^",3))_"^"_$P(IB("U"),"^",10)_"^"_$P(IB("U"),"^",9)_"^"_$P(IB("U"),"^",8)_"^"_$S(+DGPT(70)>0:+DGPT(70),1:$P(IB(0),"^",16))_"^"
"RTN","IBCSC4",76,0)
 S IBIP=IBIP_$P(IB("U"),"^",12)_"^"_$S($D(DGPT(70)):$P(DGPT(70),"^",10),1:"")_"^"_$P(IB("U"),"^",11)
"RTN","IBCSC4",77,0)
 Q
"RTN","IBCSC4",78,0)
SET ;S ^DD(399.0304,0,"ID","WRITE")="N X S X=^(0) W ""   "",$E($P($G(@(U_$P($P(X,U),"";"",2)_+X_"",0)"")),U,$S($P(X,U,1)[""CPT"":2,1:4)),1,30)"
"RTN","IBCSC4",79,0)
 Q
"RTN","IBCSC4",80,0)
 ;
"RTN","IBCSC4",81,0)
DX(ORDER,IBDATE) ; Get next diagnosis data
"RTN","IBCSC4",82,0)
 N IBX
"RTN","IBCSC4",83,0)
 S IBX=""
"RTN","IBCSC4",84,0)
 S ORDER=$O(IBPOARR(ORDER))
"RTN","IBCSC4",85,0)
 I ORDER S IBX=ORDER_U_$$ICD9^IBACSV(+IBPOARR(ORDER),$G(IBDATE))
"RTN","IBCSC4",86,0)
 Q IBX
"RTN","IBCSC4",87,0)
 ;
"RTN","IBCSC4",88,0)
OT ; print Other Care (SNF) multiple
"RTN","IBCSC4",89,0)
 N IBX,IBY,IBN I '$O(^DGCR(399,IBIFN,"OT",0)) W !,?4,"SNF Care   : UNSPECIFIED [NOT REQUIRED]"
"RTN","IBCSC4",90,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCSC4",91,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCSC4",92,0)
 . S IBN=$P($G(^DGCR(399.1,+IBY,0)),U,1),IBN=$S(IBN["SKILLED":"SNF Care ",IBN["SUB-ACUTE":"Sub-Acute",1:"Unknown  ")
"RTN","IBCSC4",93,0)
 . W !,?4,IBN,"  : ",$$FMTE^XLFDT(+$P(IBY,U,2))," - ",$$FMTE^XLFDT(+$P(IBY,U,3))
"RTN","IBCSC4",94,0)
 Q
"RTN","IBCSC4",95,0)
 ;
"RTN","IBCSC4",96,0)
DXREQ(IBIFN) ; Is the principle diagnosis code required or not?
"RTN","IBCSC4",97,0)
 ; Function returns true (1) if DX is required for this bill, otherwise 0
"RTN","IBCSC4",98,0)
 NEW REQ,IBFT
"RTN","IBCSC4",99,0)
 S REQ=0,IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCSC4",100,0)
 I IBFT=2 S REQ=1 G DXREQX                            ; required for CMS-1500
"RTN","IBCSC4",101,0)
 I IBFT=3,$$WNRBILL^IBEFUNC(IBIFN) S REQ=1 G DXREQX   ; UB with Medicare (WNR) current payer
"RTN","IBCSC4",102,0)
DXREQX ;
"RTN","IBCSC4",103,0)
 Q REQ
"RTN","IBCSC4",104,0)
 ;
"RTN","IBCSC4",105,0)
 ;IBCSC4
"RTN","IBCSC4D")
0^19^B60745629^B54553691
"RTN","IBCSC4D",1,0)
IBCSC4D ;ALB/ARH - ADD/ENTER DIAGNOSIS ;11/9/93
"RTN","IBCSC4D",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,91,106,124,51,210,403,400**;21-MAR-94;Build 52
"RTN","IBCSC4D",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC4D",4,0)
 ;
"RTN","IBCSC4D",5,0)
EN ;add/edit diagnosis for a bill, IBIFN required
"RTN","IBCSC4D",6,0)
 N IBINP,POAEDIT
"RTN","IBCSC4D",7,0)
 S POAEDIT=0 ; flag for editing POA indicators, set in DXINPT^IBCSC4E
"RTN","IBCSC4D",8,0)
 S IBX=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCSC4D",9,0)
 S IBINP=$$INPAT^IBCEF(+IBIFN)
"RTN","IBCSC4D",10,0)
 D DELALL^IBCSC4E(+IBIFN)
"RTN","IBCSC4D",11,0)
 I IBINP D DXINPT^IBCSC4E(IBIFN)
"RTN","IBCSC4D",12,0)
 I 'IBINP D DXOPT(IBIFN)
"RTN","IBCSC4D",13,0)
 S IBDIFN=0 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",14,0)
 I IBINP,$D(^IBA(362.3,"AO",IBIFN)),$$FT^IBCEF(IBIFN)=3,POAEDIT D POAASK^IBCSC4E
"RTN","IBCSC4D",15,0)
 ;
"RTN","IBCSC4D",16,0)
 ; esg - IB*2*400 - ask for PPS (DRG) for inpatient, UB claims
"RTN","IBCSC4D",17,0)
 I IBINP,$$FT^IBCEF(IBIFN)=3 D  I $D(Y) G EXIT
"RTN","IBCSC4D",18,0)
 . N DIE,DA,DR,ICDVDT
"RTN","IBCSC4D",19,0)
 . S ICDVDT=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4D",20,0)
 . S DIE=399,DA=IBIFN,DR="170T" D ^DIE
"RTN","IBCSC4D",21,0)
 . W !
"RTN","IBCSC4D",22,0)
 . Q
"RTN","IBCSC4D",23,0)
 ;
"RTN","IBCSC4D",24,0)
E1 S IBDX=$$ASKDX I +IBDX>0 S IBDIFN=+$G(IBDXA(+IBDX)) S:'IBDIFN IBDIFN=$$ADD(+IBDX,IBIFN) G:+IBDIFN=0 E1 I +IBDIFN>0 D EDIT(+IBDIFN) D SET(IBIFN,.IBDXA,.IBPOA) G E1
"RTN","IBCSC4D",25,0)
 S IBX=$G(^DGCR(399,+IBIFN,0)) I $P(IBX,U,5)<3,$P(IBX,U,27)'=2 S DGRVRCAL=1
"RTN","IBCSC4D",26,0)
EXIT K IBDIFN,IBDXA,IBPOA,IBDX,IBX
"RTN","IBCSC4D",27,0)
 Q
"RTN","IBCSC4D",28,0)
 ;
"RTN","IBCSC4D",29,0)
ASKDX() ;
"RTN","IBCSC4D",30,0)
 N X,Y,IBDATE,IBDTTX
"RTN","IBCSC4D",31,0)
 ;S DIR("A")="Select ICD DIAGNOSIS",DIR(0)="362.3,.01O" D ^DIR K DIR
"RTN","IBCSC4D",32,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4D",33,0)
 S IBDTTX=$$DAT1^IBOUTL(IBDATE)
"RTN","IBCSC4D",34,0)
 I $G(IBIFN),$$INPAT^IBCEF(IBIFN) D
"RTN","IBCSC4D",35,0)
 . N Z S Z=$$EXPAND^IBTRE(399,215,+$G(^DGCR(399,IBIFN,"U2")))
"RTN","IBCSC4D",36,0)
 . W !,$S(Z'="":"",1:"NO ")_"Admitting Diagnosis"_$S(Z'="":": "_Z,1:" found"),!
"RTN","IBCSC4D",37,0)
AD S DIR("??")="^D HELP^IBCSC4D"
"RTN","IBCSC4D",38,0)
 S DIR("?",1)="Enter a diagnosis for this bill.  Duplicates are not allowed. Only codes active on "_IBDTTX_"."
"RTN","IBCSC4D",39,0)
 S DIR("?")="Only diagnosis codes active on "_IBDTTX_", no duplicates for a bill, and bill must not be authorized or cancelled."
"RTN","IBCSC4D",40,0)
 S DIR(0)="PO^80:EAMQ"
"RTN","IBCSC4D",41,0)
 D ^DIR K DIR
"RTN","IBCSC4D",42,0)
 I Y>0,'$D(IBDXA(+Y)),'$$ICD9ACT^IBACSV(+Y,IBDATE) D  G AD
"RTN","IBCSC4D",43,0)
 . W !!,*7,"The Diagnosis code is inactive for the date of service ("_IBDTTX_").",!
"RTN","IBCSC4D",44,0)
 Q Y
"RTN","IBCSC4D",45,0)
 ;
"RTN","IBCSC4D",46,0)
ADD(DX,IFN) ;
"RTN","IBCSC4D",47,0)
 I $E($$ICD9^IBACSV(DX,$$BDATE^IBACSV(IFN)))="E",$$MAXECODE^IBCSC4F(IFN) W !!,*7,"Only 3 External Cause of Injury diagnoses are allowed per claim.",! Q 0
"RTN","IBCSC4D",48,0)
 S DIC="^IBA(362.3,",DIC(0)="AQL",DIC("DR")=".02////"_IFN,X=DX K DA,DO D FILE^DICN K DA,DO,DIC,X
"RTN","IBCSC4D",49,0)
 Q Y
"RTN","IBCSC4D",50,0)
 ;
"RTN","IBCSC4D",51,0)
EDIT(IBDXIFN) ;
"RTN","IBCSC4D",52,0)
 N NEEDPOA
"RTN","IBCSC4D",53,0)
 S DIDEL=362.3,DIE="^IBA(362.3,",DA=IBDXIFN
"RTN","IBCSC4D",54,0)
 ; only ask for POA if inpatient UB-04 claim
"RTN","IBCSC4D",55,0)
 S NEEDPOA=IBINP&($$FT^IBCEF(IBIFN)=3)
"RTN","IBCSC4D",56,0)
 S DR=".01Diagnosis"_$S(NEEDPOA:";.04POA Indicator",1:"")_";.03Order"
"RTN","IBCSC4D",57,0)
 D ^DIE K DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC4D",58,0)
 ;
"RTN","IBCSC4D",59,0)
 I $D(^IBA(362.3,IBDXIFN,0)),$$FIRSTDX(IBDXIFN) D  G EDITQ
"RTN","IBCSC4D",60,0)
 . N DIE,DR,DA,Y,X,IB0
"RTN","IBCSC4D",61,0)
 . S IB0=^IBA(362.3,IBDXIFN,0)
"RTN","IBCSC4D",62,0)
 . S DIE="^DGCR(399,",DA=+$P(IB0,U,2),DR="215////"_+IB0 D ^DIE
"RTN","IBCSC4D",63,0)
 ;
"RTN","IBCSC4D",64,0)
 ; - if the entry was deleted, remove dangling pointers from #399.0304
"RTN","IBCSC4D",65,0)
 N IBPROC,IBPROCD,IBPIECE,IBHIT
"RTN","IBCSC4D",66,0)
 S (IBHIT,IBPROC)=0
"RTN","IBCSC4D",67,0)
 F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  S IBPROCD=$G(^(IBPROC,0)) I IBPROCD]"" D
"RTN","IBCSC4D",68,0)
 .F IBPIECE=11:1:14 I +$P(IBPROCD,"^",IBPIECE)=IBDXIFN S IBHIT=1 D UPD^IBCU72("@",IBPIECE-1)
"RTN","IBCSC4D",69,0)
 I IBHIT W *7,!,"This diagnosis was removed as a procedure diagnosis."
"RTN","IBCSC4D",70,0)
EDITQ Q
"RTN","IBCSC4D",71,0)
 ;
"RTN","IBCSC4D",72,0)
SET(IFN,DXARR,POARR) ;setup arrays of all dx's for bill, array names should be passed by reference
"RTN","IBCSC4D",73,0)
 ;returns: DXARR(DX)=DX IFN, POARR(ORDER)=DX ^ PRINT ORDER ^ POA,  (DXARR,POARR)=IFN ^ dx count
"RTN","IBCSC4D",74,0)
 ;if a dx does not have a print order then PRINT ORDER=(999+count of dx) so will be in order of entry if no print order
"RTN","IBCSC4D",75,0)
 N CNT,IBX,IBY,IBZ,DIFN,IBC,ARR K DXARR,POARR S IBC="AIFN"_$G(IFN)
"RTN","IBCSC4D",76,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.3,IBC,IBX)) Q:'IBX  D
"RTN","IBCSC4D",77,0)
 . S DIFN=$O(^IBA(362.3,IBC,IBX,0)),IBY=$G(^IBA(362.3,DIFN,0)) Q:'IBY
"RTN","IBCSC4D",78,0)
 . S CNT=CNT+1,IBZ=+$P(IBY,U,3) I 'IBZ S IBZ=999+CNT
"RTN","IBCSC4D",79,0)
 . S DXARR(+IBY)=DIFN,ARR(IBZ)=+IBY_U_$P(IBY,U,3,4)
"RTN","IBCSC4D",80,0)
 S (IBX,IBY)=0 F  S IBY=$O(ARR(IBY)) Q:'IBY  S IBX=IBX+1,POARR(IBX)=ARR(IBY)
"RTN","IBCSC4D",81,0)
 S (DXARR,POARR)=$G(IFN)_"^"_CNT
"RTN","IBCSC4D",82,0)
 Q
"RTN","IBCSC4D",83,0)
 ;
"RTN","IBCSC4D",84,0)
DISP(POARR) ;screen display of existing dx's for a bill,
"RTN","IBCSC4D",85,0)
 ;input should be print order array returned by SET^IBCSC4D: POARR(PRINT ORDER)=DX, passed by reference
"RTN","IBCSC4D",86,0)
 N IBX,IBY,IBZ,IBDATE,POA
"RTN","IBCSC4D",87,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bill date of service
"RTN","IBCSC4D",88,0)
 W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
"RTN","IBCSC4D",89,0)
 S IBX=0 F  S IBX=$O(POARR(IBX)) Q:'IBX  S IBZ=POARR(IBX),IBY=$$ICD9^IBACSV(+IBZ,IBDATE) D
"RTN","IBCSC4D",90,0)
 .S POA="" I $$INPAT^IBCEF(IBIFN),$$FT^IBCEF(IBIFN)=3 S POA=$P(IBZ,U,3) S:POA=1 POA="" S:POA'="" POA="("_POA_")"
"RTN","IBCSC4D",91,0)
 . W !,?12,$P(IBY,U),?20,POA,?26,$P(IBY,U,3),?60,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
"RTN","IBCSC4D",92,0)
 W !
"RTN","IBCSC4D",93,0)
 Q
"RTN","IBCSC4D",94,0)
 ;
"RTN","IBCSC4D",95,0)
DISP1(IFN) ;
"RTN","IBCSC4D",96,0)
 I +$G(IFN) N POARR D SET(IFN,"",.POARR),DISP(.POARR)
"RTN","IBCSC4D",97,0)
 Q
"RTN","IBCSC4D",98,0)
HELP ;called for help from dx enter to display existing dx's
"RTN","IBCSC4D",99,0)
 Q:'$G(IBIFN)  N IBX
"RTN","IBCSC4D",100,0)
 D SET(IBIFN,.IBDXA,"") S IBX=$G(^DGCR(399,+IBIFN,0)) I IBX="" Q
"RTN","IBCSC4D",101,0)
 I $P(IBX,U,5)>2 S DFN=$P(IBX,U,2),IBX=$G(^DGCR(399,+IBIFN,"U")) D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",102,0)
 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",103,0)
 Q
"RTN","IBCSC4D",104,0)
 ;
"RTN","IBCSC4D",105,0)
ADD1(IFN) ;does not work, but it should replace ask add, and edit
"RTN","IBCSC4D",106,0)
 ;S DIC="^IBA(362.3,",DIC(0)="EMAQ",D="AIFN"_$G(IFN) D IX^DIC K DA,DO,DIC,D
"RTN","IBCSC4D",107,0)
 Q
"RTN","IBCSC4D",108,0)
 ;
"RTN","IBCSC4D",109,0)
 ; ******************************************************************************************
"RTN","IBCSC4D",110,0)
 ;
"RTN","IBCSC4D",111,0)
DXOPT(IBIFN) ; display and ask user to select PCE diagnosis
"RTN","IBCSC4D",112,0)
 N IBDXA,IBOEDX,IBLIST,DFN,IBX
"RTN","IBCSC4D",113,0)
 D SET(IBIFN,.IBDXA,"")
"RTN","IBCSC4D",114,0)
 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2),IBX=$G(^DGCR(399,+IBIFN,"U"))
"RTN","IBCSC4D",115,0)
 D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",116,0)
 I +$P($G(IBOEDX),U,2) D NEWDX(+IBOEDX) I $D(IBLIST) D ADDNEW(IBIFN,IBLIST,.IBOEDX)
"RTN","IBCSC4D",117,0)
 Q
"RTN","IBCSC4D",118,0)
 ;
"RTN","IBCSC4D",119,0)
OPTDX(DFN,DT1,DT2,ARRAY,IBDXE) ; get diagnosis from PCE for encounters within date range
"RTN","IBCSC4D",120,0)
 ; ARRAY(X)= DX ^ ORDER ^ OUTPATIENT ENCOUNTER (409.68) ^ DATE/TIME ^ TRUE IF NON-BILL ^ NON-BILL MESS ^ CLINIC
"RTN","IBCSC4D",121,0)
 N IBDT,IBOE,IBDX,IBDXN,IBDXA,IBDXB,IBCNT,IBCNT1,ARR,IBI,IBJ,IBK,IBVAL,IBCBK
"RTN","IBCSC4D",122,0)
 K ARRAY
"RTN","IBCSC4D",123,0)
 S (IBCNT,IBCNT1)=0,DT1=$G(DT1)-.0001,DT2=$S(+$G(DT2):DT2,1:9999999)+.7999
"RTN","IBCSC4D",124,0)
 ;
"RTN","IBCSC4D",125,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DT1,IBVAL("EDT")=DT2
"RTN","IBCSC4D",126,0)
 S IBCBK="D OEDX^IBCU81(Y,.IBDXA,.IBDXB)"
"RTN","IBCSC4D",127,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCSC4D",128,0)
 ;
"RTN","IBCSC4D",129,0)
 S (IBCNT,IBCNT1,IBI)=0 F  S IBI=$O(IBDXA(IBI)) Q:'IBI  D
"RTN","IBCSC4D",130,0)
 . S IBJ=0 F  S IBJ=$O(IBDXA(IBI,IBJ)) Q:'IBJ  D
"RTN","IBCSC4D",131,0)
 .. S IBK=0 F  S IBK=$O(IBDXA(IBI,IBJ,IBK)) Q:'IBK  D
"RTN","IBCSC4D",132,0)
 ... S IBDXN=0 F  S IBDXN=$O(IBDXA(IBI,IBJ,IBK,IBDXN)) Q:'IBDXN  D
"RTN","IBCSC4D",133,0)
 .... S IBDX=IBDXA(IBI,IBJ,IBK,IBDXN) I $D(ARR(+IBDX))!(+$P(IBDX,U,5)&(+$G(IBDXB(+IBDX)))) Q
"RTN","IBCSC4D",134,0)
 .... S IBCNT=IBCNT+1 I '$D(IBDXE(+IBDX)) S IBCNT1=IBCNT1+1
"RTN","IBCSC4D",135,0)
 .... S ARRAY(IBCNT)=IBDX S ARR(+IBDX)=""
"RTN","IBCSC4D",136,0)
 S ARRAY=IBCNT_"^"_IBCNT1 K IBDXA,IBDXB,ARR
"RTN","IBCSC4D",137,0)
 Q
"RTN","IBCSC4D",138,0)
 ;
"RTN","IBCSC4D",139,0)
NEWDX(IBX) ; user select PCE diagnosis to add to bill
"RTN","IBCSC4D",140,0)
 Q:'$G(IBX)  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4D",141,0)
NEWDX1 S DIR("?",1)="Enter the number preceding the Diagnosis you want added to the bill.",DIR("?",2)="Multiple entries may be added separated by commas or ranges separated by a dash."
"RTN","IBCSC4D",142,0)
 S DIR("?")="The diagnosis will be added to the bill with a print order corresponding to its position in this list."
"RTN","IBCSC4D",143,0)
 S DIR("A")="SELECT NEW DIAGNOSES TO ADD THE BILL"
"RTN","IBCSC4D",144,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
"RTN","IBCSC4D",145,0)
 S IBLIST=Y
"RTN","IBCSC4D",146,0)
 ;
"RTN","IBCSC4D",147,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4D",148,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
"RTN","IBCSC4D",149,0)
 I 'Y G NEWDX1
"RTN","IBCSC4D",150,0)
NEWDXE Q
"RTN","IBCSC4D",151,0)
 ;
"RTN","IBCSC4D",152,0)
ADDNEW(IBIFN,LIST,IBOEA) ; add selected PCE diagnosis to bill
"RTN","IBCSC4D",153,0)
 Q:'LIST  N IBI,IBX,IBDX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC4D",154,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBOEA(IBX)) D
"RTN","IBCSC4D",155,0)
 . S IBDX=+IBOEA(IBX) I $D(^IBA(362.3,"AIFN"_IBIFN,IBDX)) Q
"RTN","IBCSC4D",156,0)
 . I $$ADD(IBDX,IBIFN) W "."
"RTN","IBCSC4D",157,0)
 Q
"RTN","IBCSC4D",158,0)
 ;
"RTN","IBCSC4D",159,0)
DISPOE(OEARR,EXARR) ; display outpatient PCE diagnosis
"RTN","IBCSC4D",160,0)
 N IBCNT,IBDX,IBX,IBY,IBDATE
"RTN","IBCSC4D",161,0)
 W @IOF,!,"============================= DIAGNOSIS SCREEN ==============================",!
"RTN","IBCSC4D",162,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bills date of service
"RTN","IBCSC4D",163,0)
 S IBCNT=0 F  S IBCNT=$O(OEARR(IBCNT)) Q:'IBCNT  D
"RTN","IBCSC4D",164,0)
 . S IBY=OEARR(IBCNT),IBDX=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBCSC4D",165,0)
 . S IBX="" I $D(EXARR(+OEARR(IBCNT))) S IBX="*"
"RTN","IBCSC4D",166,0)
 . W !,$J(IBCNT,2),")",?5,IBX,?6,$P(IBDX,U),?14,$E($P(IBDX,U,3),1,19)
"RTN","IBCSC4D",167,0)
 . I +$P(IBY,U,7) W ?35,$E($P($G(^SC(+$P(IBY,U,7),0)),U,1),1,15)
"RTN","IBCSC4D",168,0)
 . I $P(IBY,U,2)'="" W ?52,$E($$EXPAND^IBTRE(9000010.07,.12,$P(IBY,U,2)),1,3)
"RTN","IBCSC4D",169,0)
 . I $P(IBY,U,4)'="" W ?57,$$FMTE^XLFDT($E($P(IBY,U,4),1,12),2)
"RTN","IBCSC4D",170,0)
 . I $P(IBY,U,6)'="" W ?72,$E($P(IBY,U,6),1,7)
"RTN","IBCSC4D",171,0)
 Q
"RTN","IBCSC4D",172,0)
 ;
"RTN","IBCSC4D",173,0)
DISPID ; Display the Associated Dx and Rx # for a procedure in the identifier.
"RTN","IBCSC4D",174,0)
 ;  Input:  Naked reference to the 0th node of an entry in the
"RTN","IBCSC4D",175,0)
 ;          Procedures (#304) sub-file of the Bill/Claims (#399) file.
"RTN","IBCSC4D",176,0)
 N I,X,IBY,Z
"RTN","IBCSC4D",177,0)
 S X=^(0),IBY=Y
"RTN","IBCSC4D",178,0)
 S I=$$PRCNM^IBCSCH1($P(X,U,1),$P(X,U,2)) W " ",$E($P(I,U,2)_$J("",27),1,27)
"RTN","IBCSC4D",179,0)
 S Z=$O(^DGCR(399,DA(1),"RC","ACP",+IBY,0))
"RTN","IBCSC4D",180,0)
 I Z S Z=$P($G(^DGCR(399,DA(1),"RC",Z,0)),U,11) W $E("  Rx: "_$S(Z:$P($G(^IBA(362.4,+Z,0)),U),1:"Missing")_$J("",14),1,14)
"RTN","IBCSC4D",181,0)
 I +$P(X,U,11) S I=+$G(^IBA(362.3,+$P(X,U,11),0)) W "  Dx 1: ",$P($$ICD9^IBACSV(+I,$$BDATE^IBACSV(DA(1))),U)
"RTN","IBCSC4D",182,0)
 Q
"RTN","IBCSC4D",183,0)
FIRSTDX(DA) ; Called by trigger cross reference #2 on file 362.3,.03
"RTN","IBCSC4D",184,0)
 ; DA is the ien of the entry in file 362.3
"RTN","IBCSC4D",185,0)
 ; Check if the corresponding bill is for an inpatient episode, the
"RTN","IBCSC4D",186,0)
 ; admitting dx for the corresponding bill is null and the dx being
"RTN","IBCSC4D",187,0)
 ; entered is the first for the bill.  If this is all true, admitting
"RTN","IBCSC4D",188,0)
 ; dx should be set to the dx.
"RTN","IBCSC4D",189,0)
 ;
"RTN","IBCSC4D",190,0)
 N OK,Z
"RTN","IBCSC4D",191,0)
 S Z=$G(^IBA(362.3,DA,0)),OK=0
"RTN","IBCSC4D",192,0)
 I $$INPAT^IBCEF(+$P(Z,U,2)),$P($G(^DGCR(399,+$P(Z,U,2),"U2")),U)="",'$O(^IBA(362.3,"AO",+$P(Z,U,2),+$P(Z,U,3)),-1) S OK=1
"RTN","IBCSC4D",193,0)
 Q OK
"RTN","IBCSC4D",194,0)
 ;
"RTN","IBCSC4F")
0^39^B26386041^B24461587
"RTN","IBCSC4F",1,0)
IBCSC4F ;ALB/ARH - GET PTF DIAGNOSIS ; 10-OCT-1998
"RTN","IBCSC4F",2,0)
 ;;2.0;INTEGRATED BILLING;**106,403,400**;21-MAR-94;Build 52
"RTN","IBCSC4F",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC4F",4,0)
 ;
"RTN","IBCSC4F",5,0)
PTFDXDT(IBPTF,IBDT1,IBDT2,TF) ; collect PTF Transfer (501) and Discharge (701) movements and diagnosis within a date range
"RTN","IBCSC4F",6,0)
 ; if end date is before Discharge date delete Discharge Diagnosis
"RTN","IBCSC4F",7,0)
 ; if bill is an interim first or interim continuous then the last date on the bill is included in the bill
"RTN","IBCSC4F",8,0)
 N IBSTAY,IBADM,IBDSCH,IBDT,IBLAST,IBMDT K ^TMP($J,"IBDX","D"),^TMP($J,"IBDX","M") Q:'$G(IBPTF)
"RTN","IBCSC4F",9,0)
 S IBDT1=+$G(IBDT1)\1 Q:IBDT1'?7N  S IBDT2=+$G(IBDT2)\1 Q:IBDT2'?7N
"RTN","IBCSC4F",10,0)
 ;
"RTN","IBCSC4F",11,0)
 D PTFDX(IBPTF)
"RTN","IBCSC4F",12,0)
 ;
"RTN","IBCSC4F",13,0)
 S IBSTAY=$G(^TMP($J,"IBDX","M")),IBADM=+$P($P(IBSTAY,U,2),".",1),IBDSCH=+$P($P(IBSTAY,U,3),".",1)
"RTN","IBCSC4F",14,0)
 ;
"RTN","IBCSC4F",15,0)
 I IBADM=IBDSCH Q  ; 1 day stay, accept all
"RTN","IBCSC4F",16,0)
 I IBDT1=IBADM,IBDT2=IBDSCH Q  ; bill for entire length of stay, accept all
"RTN","IBCSC4F",17,0)
 ;
"RTN","IBCSC4F",18,0)
 I IBDT2<IBDSCH K ^TMP($J,"IBDX","D") ; discharge date not on bill, exclude 701 Dxs
"RTN","IBCSC4F",19,0)
 I 'IBDSCH,IBDT2<DT K ^TMP($J,"IBDX","D") ; not discharged, current end date (today) not on bill, exclude 701 Dxs
"RTN","IBCSC4F",20,0)
 ;
"RTN","IBCSC4F",21,0)
 ; determine which of the movements should be included based on dates and timeframe
"RTN","IBCSC4F",22,0)
 S TF=$G(TF) I (TF=2)!(TF=3) S IBDT2=$$FMADD^XLFDT(IBDT2,1) ; if first or continuous bill include end date
"RTN","IBCSC4F",23,0)
 ;
"RTN","IBCSC4F",24,0)
 S (IBLAST,IBDT)="" F  S IBDT=$O(^TMP($J,"IBDX","M",IBDT)) Q:'IBDT  D  S IBLAST=IBDT
"RTN","IBCSC4F",25,0)
 . S IBMDT=$P(IBDT,".",1)
"RTN","IBCSC4F",26,0)
 . I IBMDT'>IBDT1 K ^TMP($J,"IBDX","M",IBDT)
"RTN","IBCSC4F",27,0)
 . I IBLAST>IBDT2 K ^TMP($J,"IBDX","M",IBDT)
"RTN","IBCSC4F",28,0)
 Q
"RTN","IBCSC4F",29,0)
 ;
"RTN","IBCSC4F",30,0)
PTFDX(IBPTF) ; collect all PTF Transfer (501) and Discharge (701) movements and diagnosis and try to assign SC
"RTN","IBCSC4F",31,0)
 ; PTF movements are assigned SC or NSC but diagnosis are not
"RTN","IBCSC4F",32,0)
 ; this routine 'interprets' this PTF data and 'assigns' SC/NSC to individual Diagnosis
"RTN","IBCSC4F",33,0)
 ; Movement (501) Diagnosis:  all Dx on SC movements are assigned SC
"RTN","IBCSC4F",34,0)
 ;                            a Dx on an NSC movement that is also the first Dx on an SC move is assigned SC
"RTN","IBCSC4F",35,0)
 ; Discharge (701) Diagnosis: if admit is for SC care all discharge Dx are assigned SC
"RTN","IBCSC4F",36,0)
 ;                            if the Dx is also the first Dx on an SC movement then is assigned SC
"RTN","IBCSC4F",37,0)
 ;                            a Dx on an SC movement only is assigned SC
"RTN","IBCSC4F",38,0)
 ;
"RTN","IBCSC4F",39,0)
 ; Output:  TMP($J,"IBDX","D")=PTF # ^ ADMIT DATE ^ DISCHARGE DATE
"RTN","IBCSC4F",40,0)
 ;          TMP($J,"IBDX","D", DISCHARGE DATE) = DISCHARGE DATE ^ SPECIALTY ^ SC (1/0) ^ DRG ^ PROVIDER
"RTN","IBCSC4F",41,0)
 ;          TMP($J,"IBDX","D", DISCHARGE DATE, x) = DIAGNOSIS ^ SC? (1/0)
"RTN","IBCSC4F",42,0)
 ;
"RTN","IBCSC4F",43,0)
 ;          TMP($J,"IBDX","M")=PTF # ^ ADMIT DATE ^ DISCHARGE DATE
"RTN","IBCSC4F",44,0)
 ;          TMP($J,"IBDX","M", MOVEMENT DATE) = MOVEMENT DATE ^ SPECIALTY ^ SC (1/0) ^ DRG ^ PROVIDER
"RTN","IBCSC4F",45,0)
 ;          TMP($J,"IBDX","M", MOVEMENT DATE, x) = DIAGNOSIS ^ SC? (1/0)
"RTN","IBCSC4F",46,0)
 ; if patient not discharged then NOW is used as date subscript and first piece will be null, SC?=interpreted SC
"RTN","IBCSC4F",47,0)
 ;
"RTN","IBCSC4F",48,0)
 N IBSTAY,IBMI,IBM0,IBDT,IBMDT,IBMBS,IBMP,IBMDRG,IBMPRV,IBMSC,IBMDX,IBD0,IBDDT,IBDBS,IBDDRG,IBDPRV,IBDSC,IBDDX
"RTN","IBCSC4F",49,0)
 N IBCNT,IBI,IBTMP,DFN,DGVAR,DRG,DRGCAL,ICDCAL,PTF K ^TMP($J,"IBDX","M"),^TMP($J,"IBDX","D") Q:'$G(IBPTF)
"RTN","IBCSC4F",50,0)
 ;
"RTN","IBCSC4F",51,0)
 S IBSTAY=IBPTF_U_$P($G(^DGPT(IBPTF,0)),U,2)_U_$P($G(^DGPT(IBPTF,70)),U,1) Q:'$P(IBSTAY,U,2)
"RTN","IBCSC4F",52,0)
 ;
"RTN","IBCSC4F",53,0)
 ; collect PTF Movement Diagnosis (501)
"RTN","IBCSC4F",54,0)
 S ^TMP($J,"IBDX","M")=IBSTAY
"RTN","IBCSC4F",55,0)
 S IBMI=0 F  S IBMI=$O(^DGPT(IBPTF,"M",IBMI)) Q:'IBMI  D
"RTN","IBCSC4F",56,0)
 . S IBM0=$G(^DGPT(IBPTF,"M",IBMI,0)) Q:'IBM0
"RTN","IBCSC4F",57,0)
 . S (IBDT,IBMDT)=$P(IBM0,U,10) I 'IBDT S IBDT=$$NOW^XLFDT
"RTN","IBCSC4F",58,0)
 . S IBMBS=$P(IBM0,U,2),IBMSC=$P(IBM0,U,18),IBMSC=$S(IBMSC=1:1,1:"")
"RTN","IBCSC4F",59,0)
 . S IBMP=$G(^DGPT(IBPTF,"M",IBMI,"P")),IBMPRV=$P(IBMP,U,5),IBMDRG=$$MVDRG^IBCRBG(IBPTF,IBMI)
"RTN","IBCSC4F",60,0)
 . ;
"RTN","IBCSC4F",61,0)
 . S ^TMP($J,"IBDX","M",IBDT)=IBMDT_U_IBMBS_U_IBMSC_U_IBMDRG_U_IBMPRV
"RTN","IBCSC4F",62,0)
 . ;
"RTN","IBCSC4F",63,0)
 . S IBCNT=0 F IBI=5:1:9 S IBMDX=+$P(IBM0,U,IBI) I +IBMDX S IBCNT=IBCNT+1 D
"RTN","IBCSC4F",64,0)
 .. S ^TMP($J,"IBDX","M",IBDT,IBCNT)=IBMDX,IBTMP("DXSC",IBMDX,+IBMSC,IBCNT)=""
"RTN","IBCSC4F",65,0)
 ;
"RTN","IBCSC4F",66,0)
 ; collect PTF Discharge Diagnosis (701)
"RTN","IBCSC4F",67,0)
 S ^TMP($J,"IBDX","D")=IBSTAY
"RTN","IBCSC4F",68,0)
 S IBD0=$G(^DGPT(IBPTF,70)),IBDDRG=$$GET1^DIQ(45,IBPTF,9,""),IBDPRV=$P(IBD0,U,15)
"RTN","IBCSC4F",69,0)
 S (IBDT,IBDDT)=$P(IBD0,U,1) I 'IBDT S IBDT=$$NOW^XLFDT
"RTN","IBCSC4F",70,0)
 S IBDBS=$P(IBD0,U,2),IBDSC=$P(IBD0,U,25),IBDSC=$S(IBDSC=1:1,1:"")
"RTN","IBCSC4F",71,0)
 ;
"RTN","IBCSC4F",72,0)
 S ^TMP($J,"IBDX","D",IBDT)=IBDDT_U_IBDBS_U_IBDSC_U_IBDDRG_U_IBDPRV
"RTN","IBCSC4F",73,0)
 ;
"RTN","IBCSC4F",74,0)
 S IBCNT=0 F IBI=10,16:1:24 S IBDDX=+$P(IBD0,U,IBI) I +IBDDX S IBCNT=IBCNT+1 D
"RTN","IBCSC4F",75,0)
 . S ^TMP($J,"IBDX","D",IBDT,IBCNT)=IBDDX
"RTN","IBCSC4F",76,0)
 ;
"RTN","IBCSC4F",77,0)
 ; Try to assign SC to PTF Diagnosis
"RTN","IBCSC4F",78,0)
 ;
"RTN","IBCSC4F",79,0)
 ; assign SC to Movement Diagnosis (501):  if movement is SC or first Dx on an SC movement
"RTN","IBCSC4F",80,0)
 S IBMDT=0 F  S IBMDT=$O(^TMP($J,"IBDX","M",IBMDT)) Q:'IBMDT  D
"RTN","IBCSC4F",81,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX","M",IBMDT,IBI)) Q:'IBI  D
"RTN","IBCSC4F",82,0)
 .. S IBMDX=+$G(^TMP($J,"IBDX","M",IBMDT,IBI)) Q:'IBMDX
"RTN","IBCSC4F",83,0)
 .. ;
"RTN","IBCSC4F",84,0)
 .. S IBMSC=+$P($G(^TMP($J,"IBDX","M",IBMDT)),U,3) ; sc move
"RTN","IBCSC4F",85,0)
 .. I 'IBMSC,$D(IBTMP("DXSC",IBMDX,1,1)) S IBMSC=1 ; first dx on sc move
"RTN","IBCSC4F",86,0)
 .. ;
"RTN","IBCSC4F",87,0)
 .. I +IBMSC S $P(^TMP($J,"IBDX","M",IBMDT,IBI),U,2)=1
"RTN","IBCSC4F",88,0)
 ;
"RTN","IBCSC4F",89,0)
 ; assign SC to Discharge Diagnosis (701):  if stay is SC or first Dx on an SC movement or only on SC movement
"RTN","IBCSC4F",90,0)
 S IBDDT=0 F  S IBDDT=$O(^TMP($J,"IBDX","D",IBDDT)) Q:'IBDDT  D
"RTN","IBCSC4F",91,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX","D",IBDDT,IBI)) Q:'IBI  D
"RTN","IBCSC4F",92,0)
 .. S IBDDX=+$G(^TMP($J,"IBDX","D",IBDDT,IBI)) Q:'IBDDX
"RTN","IBCSC4F",93,0)
 .. ;
"RTN","IBCSC4F",94,0)
 .. S IBDSC=+$P($G(^TMP($J,"IBDX","D",IBDDT)),U,3) ; sc stay
"RTN","IBCSC4F",95,0)
 .. I 'IBDSC,$D(IBTMP("DXSC",IBDDX,1,1)) S IBDSC=1 ; first dx on sc move
"RTN","IBCSC4F",96,0)
 .. I 'IBDSC,+$O(IBTMP("DXSC",IBDDX,"")) S IBDSC=1 ; on sc move only
"RTN","IBCSC4F",97,0)
 .. ;
"RTN","IBCSC4F",98,0)
 .. I +IBDSC S $P(^TMP($J,"IBDX","D",IBDDT,IBI),U,2)=1
"RTN","IBCSC4F",99,0)
 ;
"RTN","IBCSC4F",100,0)
 Q
"RTN","IBCSC4F",101,0)
 ;
"RTN","IBCSC4F",102,0)
SETPOA(IBIFN) ; get POAs from file 19640.1 and put them into file 362.3
"RTN","IBCSC4F",103,0)
 N DIAG,DIEN,IBPTF,IEN362,ORDER,POASET
"RTN","IBCSC4F",104,0)
 ; get PTF ien
"RTN","IBCSC4F",105,0)
 S IBPTF=$P($G(^DGCR(399,IBIFN,0)),U,8) Q:IBPTF=""
"RTN","IBCSC4F",106,0)
 ; loop through all entries in 19640.1 for this PTF
"RTN","IBCSC4F",107,0)
 S DIEN="" F  S DIEN=$O(^DSIPPOA("B",IBPTF,DIEN)) Q:DIEN=""  D
"RTN","IBCSC4F",108,0)
 .S DIAG=$P($G(^DSIPPOA(DIEN,0)),U,3) Q:DIAG=""
"RTN","IBCSC4F",109,0)
 .; loop through all DXes in 362.3 for this claim and try to find a match for 19640.1 entry
"RTN","IBCSC4F",110,0)
 .S POASET=0,ORDER="" F  S ORDER=$O(^IBA(362.3,"AO",IBIFN,ORDER)) Q:ORDER=""!(POASET=1)  D
"RTN","IBCSC4F",111,0)
 ..S IEN362=$O(^IBA(362.3,"AO",IBIFN,ORDER,""))
"RTN","IBCSC4F",112,0)
 ..; if DX in 362.3 matches DX in 19640.1, put proper POA indicator into 362.3 and bail out
"RTN","IBCSC4F",113,0)
 ..I DIAG=$P($G(^IBA(362.3,IEN362,0)),U) S $P(^IBA(362.3,IEN362,0),U,4)=$P(^DSIPPOA(DIEN,0),U,4),POASET=1
"RTN","IBCSC4F",114,0)
 ..Q 
"RTN","IBCSC4F",115,0)
 .Q
"RTN","IBCSC4F",116,0)
 Q
"RTN","IBCSC4F",117,0)
 ;
"RTN","IBCSC4F",118,0)
MAXECODE(IBIFN) ; returns 1 if there are already 3 Ecode diagnoses on the claim, 0 otherwise
"RTN","IBCSC4F",119,0)
 N IBDATE,IBDX,CNT
"RTN","IBCSC4F",120,0)
 Q:'IBIFN 0
"RTN","IBCSC4F",121,0)
 S CNT=0,IBDX="",IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4F",122,0)
 F  S IBDX=$O(^IBA(362.3,"AIFN"_IBIFN,IBDX))  Q:'IBDX  I $E($$ICD9^IBACSV(IBDX,IBDATE))="E" S CNT=CNT+1
"RTN","IBCSC4F",123,0)
 Q CNT>2
"RTN","IBCSC6")
0^28^B16070928^B17895378
"RTN","IBCSC6",1,0)
IBCSC6 ;ALB/MJB - MCCR SCREEN 6 (INPT. BILLING INFO) ;27 MAY 88 10:19
"RTN","IBCSC6",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,106,51,137,343,400**;21-MAR-94;Build 52
"RTN","IBCSC6",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC6",4,0)
 ;
"RTN","IBCSC6",5,0)
 ;MAP TO DGCRSC6
"RTN","IBCSC6",6,0)
 ;
"RTN","IBCSC6",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC7
"RTN","IBCSC6",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC6",9,0)
 D ^IBCSCU S IBSR=6,IBSR1="",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1",0,"U2","U3" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC6",10,0)
 D H^IBCSCU
"RTN","IBCSC6",11,0)
 S IBBT=$P(IB(0),U,24)_$P(IB(0),U,5)_$P(IB(0),U,26)
"RTN","IBCSC6",12,0)
 S IBBT1=$P(IB(0),U,24)_$P($G(^DGCR(399.1,+$P(IB(0),U,25),0)),U,2)_$P(IB(0),U,26)
"RTN","IBCSC6",13,0)
 D 4^IBCVA1,5^IBCVA1
"RTN","IBCSC6",14,0)
 ;
"RTN","IBCSC6",15,0)
1 S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT1):IBU,IBBT1="":IBU,1:IBBT1)
"RTN","IBCSC6",16,0)
 W $J("",14),"Loc. of Care: ",$E($G(IBBTP1),1,30) K IBBTP1
"RTN","IBCSC6",17,0)
 W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC6",18,0)
 W ?35,"Bill Classif: ",$E($G(IBBTP2),1,30) K IBBTP2
"RTN","IBCSC6",19,0)
 W !?4,"Non-Cov Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
"RTN","IBCSC6",20,0)
 W ?38,"Timeframe: ",$S($D(IBBTP3):$E(IBBTP3,1,30),1:"") K IBBTP3
"RTN","IBCSC6",21,0)
 W !?4,"Charge Type : ",$S($P(IB(0),U,27)=1:"INSTITUTIONAL",$P(IB(0),U,27)=2:"PROFESSIONAL",1:IBU)
"RTN","IBCSC6",22,0)
 W ?39,"Division: ",$E($P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,1),1,30)
"RTN","IBCSC6",23,0)
 W !?4,"Form Type   : ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC6",24,0)
 W ?34,"Co-Insur Days: ",$S($P(IB("U2"),U,7)="":$S($$MCRONBIL^IBEFUNC(IBIFN):IBU,1:IBUN),1:$P(IB("U2"),U,7))
"RTN","IBCSC6",25,0)
 ;
"RTN","IBCSC6",26,0)
ROI S Z=2,IBW=1 X IBWW
"RTN","IBCSC6",27,0)
 W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
"RTN","IBCSC6",28,0)
 W ?46,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
"RTN","IBCSC6",29,0)
 I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC6",30,0)
 S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
"RTN","IBCSC6",31,0)
 W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC6",32,0)
 ;
"RTN","IBCSC6",33,0)
3 S Z=3,IBW=1 X IBWW D FROMTO
"RTN","IBCSC6",34,0)
 ;
"RTN","IBCSC6",35,0)
BED S Z=4,IBW=1 X IBWW
"RTN","IBCSC6",36,0)
 W " Bedsection  : ",$S(IB("U")="":IBU,$P(IB("U"),U,11)'="":$P(^DGCR(399.1,$P(IB("U"),U,11),0),U,1),1:IBU)
"RTN","IBCSC6",37,0)
 W !?4,"LOS         : ",IBLS
"RTN","IBCSC6",38,0)
 ;
"RTN","IBCSC6",39,0)
 I $P($G(^DPT(DFN,.3)),"^")="Y" D SC I IBSCM>0 W !?4,"PTF record indicates ",IBSCM," of ",IBM," movements are for Service Connected Care."
"RTN","IBCSC6",40,0)
 ;
"RTN","IBCSC6",41,0)
REV S Z=5,IBREVC=0,IBW=1 X IBWW W " Rev. Code   : " F I=1:1:8 Q:'$D(IBREVC(I))  D:$S(IBREVC<7:1,1:$P(IBREVC(I),U,9)="") REV^IBCSC61 S IBREVC=IBREVC+1 Q:IBREVC>7
"RTN","IBCSC6",42,0)
 I $G(IBREVC)>9 W !,?4,"Too many Revenue Codes to display, enter '5' to list"
"RTN","IBCSC6",43,0)
BILL D OFFSET^IBCSC61
"RTN","IBCSC6",44,0)
 I $G(IBUCH),$$FT^IBCEF(IBIFN)=3 S X=IBUCH,X2="2$" D COMMA^%DTC W !,?39,"Non-Cov: ",X
"RTN","IBCSC6",45,0)
 ;
"RTN","IBCSC6",46,0)
RS S Z=6,IBW=1 X IBWW W " Rate Sched  : (re-calculate charges)"
"RTN","IBCSC6",47,0)
 ;
"RTN","IBCSC6",48,0)
PRPAY S Z=7,IBW=1 X IBWW
"RTN","IBCSC6",49,0)
 S IB("M1")=$G(^DGCR(399,IBIFN,"M1")),X3=0,IBI="Prior Payments:" F X=0,1,2 D
"RTN","IBCSC6",50,0)
 . S X1=$P(IB("U2"),U,(X+4)),X2=$P(IB("M1"),U,(5+X)) I X1="",X2="" Q
"RTN","IBCSC6",51,0)
 . S IBI=IBI_$J("",(17-$L(IBI)))_$S(X=0:"Primary",X=1:"Secondary",X=2:"Tertiary",1:"")
"RTN","IBCSC6",52,0)
 . S IBI=IBI_$J("",(28-$L(IBI)))_$S(X1'="":$J(X1,11,2),1:IBU)
"RTN","IBCSC6",53,0)
 . S IBI=IBI_$J("",(50-$L(IBI)))_"Bill #: "_$S(+X2:$P($G(^DGCR(399,+X2,0)),U,1),1:IBU)
"RTN","IBCSC6",54,0)
 . W:'X3 " " W:X3 !,?4 W IBI S X3=1,IBI=""
"RTN","IBCSC6",55,0)
 I 'X3 W " Prior Claims: ",IBU
"RTN","IBCSC6",56,0)
 ;
"RTN","IBCSC6",57,0)
 G ^IBCSCP
"RTN","IBCSC6",58,0)
 Q
"RTN","IBCSC6",59,0)
 ;
"RTN","IBCSC6",60,0)
FROMTO ;  - Print From and To dates of bill
"RTN","IBCSC6",61,0)
 W " Bill From   : " S Y=$P(IB("U"),"^") D D^DIQ W $S($L(Y):Y,1:IBU)
"RTN","IBCSC6",62,0)
 W ?49,"Bill To: " S Y=$P(IB("U"),"^",2) D D^DIQ W $S($L(Y):Y,1:IBU)
"RTN","IBCSC6",63,0)
 Q
"RTN","IBCSC6",64,0)
 ;
"RTN","IBCSC6",65,0)
SC ;  -if patient is sc, are movements for sc care
"RTN","IBCSC6",66,0)
 S PTF=$P(IB(0),"^",8)
"RTN","IBCSC6",67,0)
 ;
"RTN","IBCSC6",68,0)
SC1 ;
"RTN","IBCSC6",69,0)
 ;  -input ptf
"RTN","IBCSC6",70,0)
 ;
"RTN","IBCSC6",71,0)
 ;  -output IBm   = number of movements
"RTN","IBCSC6",72,0)
 ;          IBscm = number of SC movements
"RTN","IBCSC6",73,0)
 S (IBM,IBSCM,M)=0
"RTN","IBCSC6",74,0)
 I $S('PTF:1,'$D(^DGPT(PTF,0)):1,1:0) Q
"RTN","IBCSC6",75,0)
 F  S M=$O(^DGPT(PTF,"M",M)) Q:'M  S IBM=IBM+1 I $P($G(^DGPT(PTF,"M",M,0)),"^",18)=1 S IBSCM=IBSCM+1
"RTN","IBCSC6",76,0)
 Q
"RTN","IBCSC6",77,0)
 ;IBCSC6
"RTN","IBCSC7")
0^29^B7519963^B8540222
"RTN","IBCSC7",1,0)
IBCSC7 ;ALB/MJB - MCCR SCREEN 7 (INPT. BILLING INFO)  ;27 MAY 88 10:19
"RTN","IBCSC7",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,106,343,400**;21-MAR-94;Build 52
"RTN","IBCSC7",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC7",4,0)
 ;
"RTN","IBCSC7",5,0)
 ;MAP TO DGCRSC7
"RTN","IBCSC7",6,0)
 ;
"RTN","IBCSC7",7,0)
 I $P(^DGCR(399,IBIFN,0),"^",5)'>2 G ^IBCSC8
"RTN","IBCSC7",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC7",9,0)
EN D ^IBCSCU S IBSR=7,IBSR1="",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1",0,"U2","U3" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC7",10,0)
 D H^IBCSCU
"RTN","IBCSC7",11,0)
 D 4^IBCVA1,5^IBCVA1
"RTN","IBCSC7",12,0)
 S IBBT=$P(IB(0),U,24)_$P($G(^DGCR(399.1,+$P(IB(0),U,25),0)),U,2)_$P(IB(0),U,26)
"RTN","IBCSC7",13,0)
 S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT):IBU,IBBT="":IBU,1:IBBT)
"RTN","IBCSC7",14,0)
 W $J("",14),"Loc. of Care: ",$E($G(IBBTP1),1,30) K IBBTP1
"RTN","IBCSC7",15,0)
 W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC7",16,0)
 W ?35,"Bill Classif: ",$E($G(IBBTP2),1,30) K IBBTP2
"RTN","IBCSC7",17,0)
 W !?4,"Non-Cov Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
"RTN","IBCSC7",18,0)
 W ?38,"Timeframe: ",$S($D(IBBTP3):$E(IBBTP3,1,30),1:"") K IBBTP3
"RTN","IBCSC7",19,0)
 W !?4,"Charge Type : ",$S($P(IB(0),U,27)=1:"INSTITUTIONAL",$P(IB(0),U,27)=2:"PROFESSIONAL",1:IBU)
"RTN","IBCSC7",20,0)
 W ?37,"Disch Stat: ",$E($$EXTERNAL^DILFD(399,162,"",$P(IB("U"),U,12)),1,30)
"RTN","IBCSC7",21,0)
 W !?4,"Form Type   : ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC7",22,0)
 W ?39,"Division: ",$E($P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,1),1,30)
"RTN","IBCSC7",23,0)
 ;
"RTN","IBCSC7",24,0)
ROI S Z=2,IBW=1 X IBWW
"RTN","IBCSC7",25,0)
 W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
"RTN","IBCSC7",26,0)
 W ?46,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
"RTN","IBCSC7",27,0)
 I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC7",28,0)
 S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
"RTN","IBCSC7",29,0)
 W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC7",30,0)
 ;
"RTN","IBCSC7",31,0)
 S Z=3,IBW=1 X IBWW D FROMTO^IBCSC6
"RTN","IBCSC7",32,0)
 ;
"RTN","IBCSC7",33,0)
OP S Z=4,IBW=1 X IBWW W " OP Visits   : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?18 W Y_", "
"RTN","IBCSC7",34,0)
 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
"RTN","IBCSC7",35,0)
 ;
"RTN","IBCSC7",36,0)
 G REV^IBCSC6
"RTN","IBCSC7",37,0)
 ;
"RTN","IBCSC7",38,0)
 ;IBCSC7
"RTN","IBCSC82")
0^4^B34330595^B20854750
"RTN","IBCSC82",1,0)
IBCSC82 ;ALB/MJB - MCCR SCREEN 8 (UB-04 BILL SPECIFIC INFO) ;27 MAY 88 10:20
"RTN","IBCSC82",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,343,349,400**;21-MAR-94;Build 52
"RTN","IBCSC82",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC82",4,0)
 ;
"RTN","IBCSC82",5,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC8H ;CMS-1500
"RTN","IBCSC82",6,0)
 ;
"RTN","IBCSC82",7,0)
 N FIRSTPRV,I,IB,IBINP,IBX,PRV,PRVS,Z
"RTN","IBCSC82",8,0)
 S IBINP=$$INPAT^IBCEF(IBIFN)
"RTN","IBCSC82",9,0)
 D ^IBCSCU
"RTN","IBCSC82",10,0)
 S IBSR=8,IBSR1=2,IBV1="0000000" S:IBINP $E(IBV1,2)=1 S:IBV IBV1="1111111"
"RTN","IBCSC82",11,0)
 F I="U","U1",0,"UF3","UF31","U2","TX","U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC82",12,0)
 N IBZ,IBPRV,IBREQ,IBMRASEC,TEXT,BPZ,TXMT
"RTN","IBCSC82",13,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC82",14,0)
 K IB("PRV")
"RTN","IBCSC82",15,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC82",16,0)
 ;
"RTN","IBCSC82",17,0)
 D H^IBCSCU
"RTN","IBCSC82",18,0)
 ;
"RTN","IBCSC82",19,0)
 ; Section 1
"RTN","IBCSC82",20,0)
 S Z=1,IBW=1 X IBWW W " Bill Remarks",!?5,"- FL-80",?22,": "
"RTN","IBCSC82",21,0)
 S TEXT=$P($G(^DGCR(399,IBIFN,"UF2")),U,3)  ; field# 402
"RTN","IBCSC82",22,0)
 I TEXT="" W IBUN                           ; unspecified [not required]
"RTN","IBCSC82",23,0)
 I TEXT'="" D
"RTN","IBCSC82",24,0)
 . N IBZ,Z
"RTN","IBCSC82",25,0)
 . D REMARK^IBCEF77(IBIFN,.IBZ)
"RTN","IBCSC82",26,0)
 . S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  D
"RTN","IBCSC82",27,0)
 .. W ?24,$G(IBZ(Z))
"RTN","IBCSC82",28,0)
 .. I Z>4 W ?48,$G(IBVI)," <--- This Line Will Not Print ",$G(IBVO)
"RTN","IBCSC82",29,0)
 .. I $O(IBZ(Z)) W !
"RTN","IBCSC82",30,0)
 .. Q
"RTN","IBCSC82",31,0)
 . Q
"RTN","IBCSC82",32,0)
 ;
"RTN","IBCSC82",33,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC82",34,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",35,0)
 W !,?3," ICN/DCN(s)        : ",IBZ
"RTN","IBCSC82",36,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC82",37,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",38,0)
 W !,?3," Tx Auth. Code(s)  : ",IBZ
"RTN","IBCSC82",39,0)
 ;
"RTN","IBCSC82",40,0)
 ; IB*2*400 - Admitting diagnosis only for inpatients
"RTN","IBCSC82",41,0)
 I IBINP W !,?3," Admitting Dx      : " S IBX=$$ICD9^IBACSV(+IB("U2"),$$BDATE^IBACSV(IBIFN)) W $S(IBX'="":$P(IBX,U)_" - "_$P(IBX,U,3),1:IBU)
"RTN","IBCSC82",42,0)
 ;
"RTN","IBCSC82",43,0)
 ; IB*2*400 - esg - display PPS (DRG) info for inpatient, UB claims
"RTN","IBCSC82",44,0)
 I IBINP D
"RTN","IBCSC82",45,0)
 . N PPS,PPSDISP
"RTN","IBCSC82",46,0)
 . S PPS=+$P(IB("U1"),U,15)
"RTN","IBCSC82",47,0)
 . I 'PPS S PPSDISP=IBUN
"RTN","IBCSC82",48,0)
 . I PPS S PPSDISP=$$FO^IBCNEUT1(PPS,4,"R",0)_" - "_$$DRGTD^IBACSV(PPS,$$BDATE^IBACSV(IBIFN))
"RTN","IBCSC82",49,0)
 . W !?4,"PPS (DRG)",?22,": ",$E(PPSDISP,1,56)
"RTN","IBCSC82",50,0)
 . Q
"RTN","IBCSC82",51,0)
 ;
"RTN","IBCSC82",52,0)
 I 'IBINP W !,?3," Admission Source  : " S IBX=$$EXTERNAL^DILFD(399,159,,$P(IB("U"),U,9)) W $S(IBX'="":IBX,1:IBU)   ; Outpatient only
"RTN","IBCSC82",53,0)
 ;
"RTN","IBCSC82",54,0)
 ; Section 2
"RTN","IBCSC82",55,0)
 S Z=2,IBW=1 X IBWW
"RTN","IBCSC82",56,0)
 S PRVS=$TR($P(IB("U3"),U,8,10),U) W " Pt Reason f/Visit : " I PRVS="" W IBU_$S(IBINP:" [NOT USED]",1:"")
"RTN","IBCSC82",57,0)
 I PRVS'="" S FIRSTPRV=1 F I=8:1:10 D
"RTN","IBCSC82",58,0)
 .S PRV=$$ICD9^IBACSV($P(IB("U3"),U,I),$$BDATE^IBACSV(IBIFN)) I PRV'="" W:'FIRSTPRV !,?24 W $P(PRV,U,3)_" - "_$P(PRV,U) S FIRSTPRV=0
"RTN","IBCSC82",59,0)
 .Q
"RTN","IBCSC82",60,0)
 ;
"RTN","IBCSC82",61,0)
 ; Section 3
"RTN","IBCSC82",62,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC82",63,0)
 W " Providers         : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC82",64,0)
 I $D(IB("PRV")) D
"RTN","IBCSC82",65,0)
 . N Z,IBT,IBQ,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC82",66,0)
 . S IBZ=0
"RTN","IBCSC82",67,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC82",68,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC82",69,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC82",70,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC82",71,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC82",72,0)
 .. N A,A1
"RTN","IBCSC82",73,0)
 .. S IBQ=""
"RTN","IBCSC82",74,0)
 .. W !,?5,"- "
"RTN","IBCSC82",75,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC82",76,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,15-$L(A1))_A1
"RTN","IBCSC82",77,0)
 .. W $E(A_$J("",15),1,15),": "
"RTN","IBCSC82",78,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC82",79,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",20),1,20) W:$G(IB("PRV",IBZ)) "(OLD PROV DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC82",80,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",20),1,20)
"RTN","IBCSC82",81,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC82",82,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC82",83,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC82",84,0)
 K IB("PRV")
"RTN","IBCSC82",85,0)
 ;
"RTN","IBCSC82",86,0)
 ; Section 4
"RTN","IBCSC82",87,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC82",88,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC82",89,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC82",90,0)
 I IBZ'="" D
"RTN","IBCSC82",91,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC82",92,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC82",93,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC82",94,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC82",95,0)
 . Q
"RTN","IBCSC82",96,0)
 ;
"RTN","IBCSC82",97,0)
 ; Section 5
"RTN","IBCSC82",98,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC82",99,0)
 W " Billing Provider  : "
"RTN","IBCSC82",100,0)
 K IBZ
"RTN","IBCSC82",101,0)
 S BPZ=+$$B^IBCEF79(IBIFN)
"RTN","IBCSC82",102,0)
 D GETBP^IBCEF79(IBIFN,"",BPZ,"UB SCREEN 8",.IBZ)
"RTN","IBCSC82",103,0)
 S TXMT=$$TXMT^IBCEF4(IBIFN)    ; transmittable?  variable also used in next section
"RTN","IBCSC82",104,0)
 I TXMT S IBZ=$G(IBZ("UB SCREEN 8","NAME"))     ; this is the BP name used in the PRV segment
"RTN","IBCSC82",105,0)
 I 'TXMT S IBZ=$$GETFAC^IBCEP8(BPZ,0,0)         ; this is the BP name printed in FL-1
"RTN","IBCSC82",106,0)
 W $S(IBZ'="":IBZ,1:IBU)                        ; billing provider name
"RTN","IBCSC82",107,0)
 W !?3," Taxonomy Code     : "
"RTN","IBCSC82",108,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC82",109,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC82",110,0)
 ;
"RTN","IBCSC82",111,0)
 ; Section 6
"RTN","IBCSC82",112,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC82",113,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC82",114,0)
 S Z=6,IBW=1 X IBWW W " ",$S('IBREQ:"Force To Print?   : ",1:"Force MRA Sec Prt?: ")
"RTN","IBCSC82",115,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC82",116,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC82",117,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'TXMT:"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC82",118,0)
 ;
"RTN","IBCSC82",119,0)
 ; Section 7
"RTN","IBCSC82",120,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC82",121,0)
 W " Provider ID Maint : (Edit Provider ID information)"
"RTN","IBCSC82",122,0)
 ;
"RTN","IBCSC82",123,0)
 G ^IBCSCP
"RTN","IBCSC82",124,0)
Q Q
"RTN","IBCSC82",125,0)
 ;IBCSC82
"RTN","IBCSC8B")
0^33^B41247603^n/a
"RTN","IBCSC8B",1,0)
IBCSC8B ;BP/YMG - ADD/ENTER PATIENT REASON FOR VISIT DATA ;10/15/2008
"RTN","IBCSC8B",2,0)
 ;;2.0;INTEGRATED BILLING;**400**;21-MAR-94;Build 52
"RTN","IBCSC8B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC8B",4,0)
 ;
"RTN","IBCSC8B",5,0)
EN ; entry point
"RTN","IBCSC8B",6,0)
 N DATE,DATE1,DFN,I,IBDX,IBLIST,LOC,PRV0,PRVIEN,PRVS,SCREEN,TCNT,TMP,VCNT,VISITS
"RTN","IBCSC8B",7,0)
 D:$$CHKPRV<3 DELALL(IBIFN)
"RTN","IBCSC8B",8,0)
 ; only try to fetch PRVs if Quadramed file (19640.11) exists
"RTN","IBCSC8B",9,0)
 I $D(^DSIPPRV) D
"RTN","IBCSC8B",10,0)
 .S DFN=$P(^DGCR(399,IBIFN,0),U,2)
"RTN","IBCSC8B",11,0)
 .; try to get all visits for OP Visit dates on the claim
"RTN","IBCSC8B",12,0)
 .;
"RTN","IBCSC8B",13,0)
 .; use only the date portion of date&time field in VISIT file for screening
"RTN","IBCSC8B",14,0)
 .; if OP Visit field contains only a month, only compare month and year
"RTN","IBCSC8B",15,0)
 .S SCREEN="N Z S Z=$P($P(^(0),U),""."") S:'+$E(DATE,6,7) Z=$E(Z,1,5) I Z=DATE"
"RTN","IBCSC8B",16,0)
 .S DATE=0,VCNT=1 F  S DATE=$O(^DGCR(399,IBIFN,"OP",DATE)) Q:'DATE  D
"RTN","IBCSC8B",17,0)
 ..D FIND^DIC(9000010,,"@;.01I","QPX",DFN,,"C",SCREEN,,"TMP") Q:'$P(TMP("DILIST",0),U)
"RTN","IBCSC8B",18,0)
 ..S TCNT=0 F  S TCNT=$O(TMP("DILIST",TCNT)) Q:'TCNT  S VISITS(VCNT)=$P(TMP("DILIST",TCNT,0),U),VCNT=VCNT+1
"RTN","IBCSC8B",19,0)
 ..Q
"RTN","IBCSC8B",20,0)
 .I '$D(VISITS) D
"RTN","IBCSC8B",21,0)
 ..; couldn't find anything for OP Visit dates (or there are no OP Visit dates on the claim)
"RTN","IBCSC8B",22,0)
 ..; try to use Statement Covers From and Statement Covers To fields instead
"RTN","IBCSC8B",23,0)
 ..S DATE=$P($G(^DGCR(399,IBIFN,"U")),U) Q:'DATE  ;
"RTN","IBCSC8B",24,0)
 ..S DATE1=$P($G(^DGCR(399,IBIFN,"U")),U,2) Q:'DATE1  ;
"RTN","IBCSC8B",25,0)
 ..S SCREEN="N Z S Z=$P($P(^(0),U),""."") I Z>=DATE&(Z<=DATE1)"
"RTN","IBCSC8B",26,0)
 ..D FIND^DIC(9000010,,"@;.01I","QPX",DFN,,"C",SCREEN,,"TMP") Q:'$P(TMP("DILIST",0),U)
"RTN","IBCSC8B",27,0)
 ..S TCNT=0,VCNT=1 F  S TCNT=$O(TMP("DILIST",TCNT)) Q:'TCNT  S VISITS(VCNT)=$P(TMP("DILIST",TCNT,0),U),VCNT=VCNT+1
"RTN","IBCSC8B",28,0)
 ..Q
"RTN","IBCSC8B",29,0)
 .I $D(VISITS) D
"RTN","IBCSC8B",30,0)
 ..; we have found some visits, try to fetch corresponding PRVs from file 19640.11 into PRVS array
"RTN","IBCSC8B",31,0)
 ..; PRVS node structure: PRV dx ien ^ hospital location ^ visit date&time
"RTN","IBCSC8B",32,0)
 ..S TCNT=1,VCNT=0 F  S VCNT=$O(VISITS(VCNT)) Q:'VCNT  D
"RTN","IBCSC8B",33,0)
 ...S PRVIEN=$O(^DSIPPRV("B",VISITS(VCNT),"")) Q:'PRVIEN
"RTN","IBCSC8B",34,0)
 ...S PRV0=$G(^DSIPPRV(PRVIEN,0))
"RTN","IBCSC8B",35,0)
 ...S LOC=$$GET1^DIQ(9000010,VISITS(VCNT),.22)
"RTN","IBCSC8B",36,0)
 ...S DATE=$$GET1^DIQ(9000010,VISITS(VCNT),.01)
"RTN","IBCSC8B",37,0)
 ...F I=2:1:4 I $P(PRV0,U,I)'="" S PRVS(TCNT)=$P(PRV0,U,I)_U_LOC_U_DATE,TCNT=TCNT+1
"RTN","IBCSC8B",38,0)
 ...Q
"RTN","IBCSC8B",39,0)
 ..Q
"RTN","IBCSC8B",40,0)
 .Q
"RTN","IBCSC8B",41,0)
 D DISP D:+$G(TCNT)>0 NEWDX(TCNT-1) I $D(IBLIST) D ADDNEW
"RTN","IBCSC8B",42,0)
 D DISPEX(IBIFN)
"RTN","IBCSC8B",43,0)
 D CLEAN^DILF
"RTN","IBCSC8B",44,0)
EN1 ;
"RTN","IBCSC8B",45,0)
 S IBDX=$$ASKDX I +IBDX>0 D ADD($P(IBDX,U)),EDIT(+IBDX) G EN1
"RTN","IBCSC8B",46,0)
 Q
"RTN","IBCSC8B",47,0)
 ;
"RTN","IBCSC8B",48,0)
DISP ; display PRV diagnoses
"RTN","IBCSC8B",49,0)
 N CNT,DXCODE,I,IBDX,PRV
"RTN","IBCSC8B",50,0)
 W @IOF,!,"===================Pt. Reason for Visit Diagnosis Screen ====================",!
"RTN","IBCSC8B",51,0)
 I '$D(PRVS) W !,?13,"No available Pt. Reason for Visit Diagnoses found." Q
"RTN","IBCSC8B",52,0)
 S CNT=0 F  S CNT=$O(PRVS(CNT)) Q:'CNT  D
"RTN","IBCSC8B",53,0)
 .S IBDX=$$ICD9^IBACSV($P(PRVS(CNT),U),$$BDATE^IBACSV(IBIFN)),DXCODE=$P(IBDX,U)
"RTN","IBCSC8B",54,0)
 .F I=8:1:10 S PRV=$P($G(^DGCR(399,IBIFN,"U3")),U,I) I PRV=+PRVS(CNT) S DXCODE="*"_DXCODE Q
"RTN","IBCSC8B",55,0)
 .W !,$J(CNT,2),")",?4,DXCODE,?13,$E($P(IBDX,U,3),1,24),?37,$E($P(PRVS(CNT),U,2),1,24),?62,$P(PRVS(CNT),U,3)
"RTN","IBCSC8B",56,0)
 .Q
"RTN","IBCSC8B",57,0)
 Q
"RTN","IBCSC8B",58,0)
 ;
"RTN","IBCSC8B",59,0)
DISPEX(IBIFN) ; display existing PRV diagnoses for a bill
"RTN","IBCSC8B",60,0)
 N I,IBDX,IBDXDT
"RTN","IBCSC8B",61,0)
 W !!,?5,"------  Existing Pt. Reason for Visit Diagnoses for Bill  -------",!
"RTN","IBCSC8B",62,0)
 F I=8:1:10 S IBDX=$P($G(^DGCR(399,IBIFN,"U3")),U,I) I IBDX'="" D
"RTN","IBCSC8B",63,0)
 .S IBDXDT=$$ICD9^IBACSV(IBDX,$$BDATE^IBACSV(IBIFN))
"RTN","IBCSC8B",64,0)
 .W !,?12,$P(IBDXDT,U),?26,$P(IBDXDT,U,3)
"RTN","IBCSC8B",65,0)
 .Q
"RTN","IBCSC8B",66,0)
 W:'$G(IBDXDT) !,?13,"No existing Pt. Reason for Visit Diagnoses found."
"RTN","IBCSC8B",67,0)
 W !
"RTN","IBCSC8B",68,0)
 Q
"RTN","IBCSC8B",69,0)
 ;
"RTN","IBCSC8B",70,0)
CHKPRV() ; check how many PRVs are not populated (out of 3)
"RTN","IBCSC8B",71,0)
 N CNT,I
"RTN","IBCSC8B",72,0)
 S CNT=3 F I=8:1:10 I $P($G(^DGCR(399,IBIFN,"U3")),U,I)'="" S CNT=CNT-1
"RTN","IBCSC8B",73,0)
 Q CNT
"RTN","IBCSC8B",74,0)
 ;
"RTN","IBCSC8B",75,0)
PRVFLD(DXIEN) ; returns the field number that contains DXIEN
"RTN","IBCSC8B",76,0)
 ; if DXIEN="", returns the first empty PRV field number
"RTN","IBCSC8B",77,0)
 ; if no match found (or no empty fields), returns 0
"RTN","IBCSC8B",78,0)
 N I,FLD
"RTN","IBCSC8B",79,0)
 S FLD=0 F I=8:1:10 I $P($G(^DGCR(399,IBIFN,"U3")),U,I)=DXIEN S FLD=I+241 Q
"RTN","IBCSC8B",80,0)
 Q FLD
"RTN","IBCSC8B",81,0)
 ;
"RTN","IBCSC8B",82,0)
ERR ; display error message
"RTN","IBCSC8B",83,0)
 W !,?6,"You may add a maximum of 3 PRV diagnoses to a claim."
"RTN","IBCSC8B",84,0)
 Q
"RTN","IBCSC8B",85,0)
 ;
"RTN","IBCSC8B",86,0)
NEWDX(IBX) ; select PRV diagnosis to add to bill
"RTN","IBCSC8B",87,0)
 ; IBX - max. number of PRV diagnoses available
"RTN","IBCSC8B",88,0)
 N X,Y,DIR,DIRUT
"RTN","IBCSC8B",89,0)
 Q:'IBX!('$$CHKPRV)  ;
"RTN","IBCSC8B",90,0)
 W !
"RTN","IBCSC8B",91,0)
NEWDX1 S DIR("?",1)="Enter the number preceding the PRV diagnosis you want added to the bill.",DIR("?")="Multiple entries may be added separated by commas or ranges separated by a dash."
"RTN","IBCSC8B",92,0)
 S DIR("A")="Select Pt. Reason for Visit Diagnosis to add to bill"
"RTN","IBCSC8B",93,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
"RTN","IBCSC8B",94,0)
 S IBLIST=Y
"RTN","IBCSC8B",95,0)
 S DIR("A")="You have selected "_IBLIST_" to be added to the bill. Is this correct",DIR("B")="YES"
"RTN","IBCSC8B",96,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
"RTN","IBCSC8B",97,0)
 I 'Y G NEWDX1
"RTN","IBCSC8B",98,0)
 I $L(IBLIST,",")-1>$$CHKPRV D ERR G NEWDX1
"RTN","IBCSC8B",99,0)
NEWDXE Q
"RTN","IBCSC8B",100,0)
 ;
"RTN","IBCSC8B",101,0)
ADD(DXIEN) ; add single PRV diagnosis with file 80 ien DXIEN to the bill
"RTN","IBCSC8B",102,0)
 Q:'DXIEN!$$PRVFLD(DXIEN)  ; quit if no dx ien of if such PRV already exists
"RTN","IBCSC8B",103,0)
 N FLD
"RTN","IBCSC8B",104,0)
 ; if there are already 3 PRVs on the claim, complain and bail out
"RTN","IBCSC8B",105,0)
 I '$$CHKPRV D ERR Q
"RTN","IBCSC8B",106,0)
 S FLD=$$PRVFLD("") I FLD S DIE="^DGCR(399,",DA=IBIFN,DR=FLD_"////"_DXIEN D ^DIE K DA,DIE
"RTN","IBCSC8B",107,0)
 Q
"RTN","IBCSC8B",108,0)
 ;
"RTN","IBCSC8B",109,0)
ADDNEW ; add selected PRV diagnoses to the bill
"RTN","IBCSC8B",110,0)
 Q:'$D(PRVS)
"RTN","IBCSC8B",111,0)
 N I,IBX
"RTN","IBCSC8B",112,0)
 F I=1:1 S IBX=$P(IBLIST,",",I) Q:'IBX  I $D(PRVS(IBX)) D ADD(+PRVS(IBX))
"RTN","IBCSC8B",113,0)
 Q
"RTN","IBCSC8B",114,0)
 ;
"RTN","IBCSC8B",115,0)
ASKDX() ; enter extra PRV diagnosis
"RTN","IBCSC8B",116,0)
 ; returns dx ien in file 80 ^ dx code
"RTN","IBCSC8B",117,0)
 N X,Y,IBDATE,IBDTTX
"RTN","IBCSC8B",118,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC8B",119,0)
 S IBDTTX=$$DAT1^IBOUTL(IBDATE)
"RTN","IBCSC8B",120,0)
AD ;
"RTN","IBCSC8B",121,0)
 S DIR("?")="Enter a diagnosis for this bill. Only diagnosis codes active on "_IBDTTX_" are allowed."
"RTN","IBCSC8B",122,0)
 S DIR(0)="PO^80:EAMQ",DIR("A")="Enter Pt. Reason for Visit Diagnosis"
"RTN","IBCSC8B",123,0)
 D ^DIR K DIR
"RTN","IBCSC8B",124,0)
 I Y>0,'$$PRVFLD(+Y),'$$ICD9ACT^IBACSV(+Y,IBDATE) D  G AD
"RTN","IBCSC8B",125,0)
 . W !!,*7,"The Diagnosis code is inactive for the date of service ("_IBDTTX_").",!
"RTN","IBCSC8B",126,0)
 Q Y
"RTN","IBCSC8B",127,0)
 ;
"RTN","IBCSC8B",128,0)
EDIT(DXIEN) ; edit/delete PRV diagnosis
"RTN","IBCSC8B",129,0)
 N IBU3,FLD,PRV2,PRV3
"RTN","IBCSC8B",130,0)
 Q:'DXIEN  S FLD=$$PRVFLD(DXIEN) I FLD S DIE="^DGCR(399,",DA=IBIFN,DR=FLD D ^DIE K DIE,DR,DA
"RTN","IBCSC8B",131,0)
 ; if PRV was deleted, rearrange PRVs to maintain their order of entry
"RTN","IBCSC8B",132,0)
 S IBU3=$G(^DGCR(399,IBIFN,"U3")) I $P(IBU3,U,FLD-241)="" D
"RTN","IBCSC8B",133,0)
 .; PRV(1) was deleted, PRV(2) is not empty
"RTN","IBCSC8B",134,0)
 .I FLD=249 S PRV2=$P(IBU3,U,9) S:PRV2'="" PRV3=$P(IBU3,U,10),DR="249////"_PRV2_";"_$S(PRV3'="":"250////"_PRV3_";251///@",1:"250///@")
"RTN","IBCSC8B",135,0)
 .; PRV(2) was deleted, PRV(3) is not empty
"RTN","IBCSC8B",136,0)
 .I FLD=250 S PRV3=$P(IBU3,U,10) I PRV3'="" S DR="250////"_PRV3_";251///@"
"RTN","IBCSC8B",137,0)
 .; if PRV(3) is deleted, no rearrangements are necessary
"RTN","IBCSC8B",138,0)
 .Q
"RTN","IBCSC8B",139,0)
 I $G(DR)'="" S DIE="^DGCR(399,",DA=IBIFN D ^DIE K DIE,DR,DA
"RTN","IBCSC8B",140,0)
 Q
"RTN","IBCSC8B",141,0)
 ;
"RTN","IBCSC8B",142,0)
DELALL(IBIFN) ; ask/delete all PRV diagnoses on the bill
"RTN","IBCSC8B",143,0)
 N DIE,DA,DR,DIR,DIRUT,DUOUT,DTOUT,X,Y W !
"RTN","IBCSC8B",144,0)
 S DIR("?")="Enter Yes to delete all PRV diagnoses currently defined for a bill.",DIR("??")="^D DISPEX^IBCSC8B("_IBIFN_")"
"RTN","IBCSC8B",145,0)
 S DIR("A")="Delete all Patient Reason for Visit diagnoses on bill"
"RTN","IBCSC8B",146,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR K DIR Q:Y'=1
"RTN","IBCSC8B",147,0)
 ;
"RTN","IBCSC8B",148,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="249///@;250///@;251///@" D ^DIE
"RTN","IBCSC8B",149,0)
 W " .... deleted"
"RTN","IBCSC8B",150,0)
 Q
"RTN","IBCSC8H")
0^27^B42537068^B34954742
"RTN","IBCSC8H",1,0)
IBCSC8H ;ALB/ARH - MCCR SCREEN 8 (BILL SPECIFIC INFO) CMS-1500 ;4/21/92
"RTN","IBCSC8H",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,207,210,232,155,320,343,349,371,400**;21-MAR-94;Build 52
"RTN","IBCSC8H",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC8H",4,0)
 ; CMS-1500 screen 8
"RTN","IBCSC8H",5,0)
 ;
"RTN","IBCSC8H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC8H",7,0)
 ;
"RTN","IBCSC8H",8,0)
EN ;
"RTN","IBCSC8H",9,0)
 N I,IB,Y,Z
"RTN","IBCSC8H",10,0)
 D ^IBCSCU
"RTN","IBCSC8H",11,0)
 S IBSR=8,IBSR1="H",IBV1="000000000" S:IBV IBV1="111111111"
"RTN","IBCSC8H",12,0)
 F I="U","U1","UF2","UF3","U2","M","TX",0,"U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC8H",13,0)
 N IBZ,IBPRV,IBDATE,IBREQ,IBMRASEC,IBZ1
"RTN","IBCSC8H",14,0)
 ;
"RTN","IBCSC8H",15,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC8H",16,0)
 S IBPRV=""
"RTN","IBCSC8H",17,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC8H",18,0)
 K IB("PRV")
"RTN","IBCSC8H",19,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC8H",20,0)
 ;
"RTN","IBCSC8H",21,0)
 D H^IBCSCU
"RTN","IBCSC8H",22,0)
 ;
"RTN","IBCSC8H",23,0)
 ; Section 1
"RTN","IBCSC8H",24,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",25,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",26,0)
 ;
"RTN","IBCSC8H",27,0)
 ; Section 2
"RTN","IBCSC8H",28,0)
 S Z=2,IBW=1 X IBWW I $$INPAT^IBCEF(IBIFN) W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN),!
"RTN","IBCSC8H",29,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC8H",30,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",31,0)
 W ?4,"ICN/DCN(s)         : ",IBZ
"RTN","IBCSC8H",32,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC8H",33,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC8H",34,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",35,0)
 W !?4,"Tx Auth. Code(s)   : ",IBZ
"RTN","IBCSC8H",36,0)
 ;
"RTN","IBCSC8H",37,0)
 ; Section 3
"RTN","IBCSC8H",38,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC8H",39,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC8H",40,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC8H",41,0)
 . N IBQ,A,A1,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC8H",42,0)
 . S IBZ=0
"RTN","IBCSC8H",43,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC8H",44,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC8H",45,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC8H",46,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC8H",47,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC8H",48,0)
 .. S IBQ=""
"RTN","IBCSC8H",49,0)
 .. W !,?5,"- "
"RTN","IBCSC8H",50,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC8H",51,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC8H",52,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC8H",53,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC8H",54,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC8H",55,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC8H",56,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC8H",57,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC8H",58,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC8H",59,0)
 ;
"RTN","IBCSC8H",60,0)
 K IB("PRV")
"RTN","IBCSC8H",61,0)
 ;
"RTN","IBCSC8H",62,0)
 ; Section 4
"RTN","IBCSC8H",63,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC8H",64,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC8H",65,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC8H",66,0)
 I IBZ'="" D
"RTN","IBCSC8H",67,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC8H",68,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC8H",69,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC8H",70,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC8H",71,0)
 . Q
"RTN","IBCSC8H",72,0)
 ;
"RTN","IBCSC8H",73,0)
 ; clia# display - IB patch 320
"RTN","IBCSC8H",74,0)
 S (IBZ,IBZ1)=$P(IB("U2"),U,13)     ; retrieve CLIA# from database
"RTN","IBCSC8H",75,0)
 ;
"RTN","IBCSC8H",76,0)
 I IBZ="" D
"RTN","IBCSC8H",77,0)
 . NEW CLIAREQ,DEFCLIA,DIE,DA,DR
"RTN","IBCSC8H",78,0)
 . S CLIAREQ=$$CLIAREQ^IBCEP8A(IBIFN)
"RTN","IBCSC8H",79,0)
 . I 'CLIAREQ S IBZ1=IBUN Q          ; clia# not needed
"RTN","IBCSC8H",80,0)
 . S DEFCLIA=$$CLIA^IBCEP8A(IBIFN)   ; default clia# for claim
"RTN","IBCSC8H",81,0)
 . I DEFCLIA="" S IBZ1=IBU Q         ; no default found
"RTN","IBCSC8H",82,0)
 . I $G(IBMDOTCN) K IBMDOTCN S IBZ1=IBU Q     ; user @-deleted clia#
"RTN","IBCSC8H",83,0)
 . S IBZ1=DEFCLIA                    ; display and stuff default clia#
"RTN","IBCSC8H",84,0)
 . S DIE=399,DA=IBIFN,DR="235///"_DEFCLIA D ^DIE    ; stuff in default
"RTN","IBCSC8H",85,0)
 . Q
"RTN","IBCSC8H",86,0)
 ;
"RTN","IBCSC8H",87,0)
 W !,?4,"Lab CLIA #         : ",IBZ1
"RTN","IBCSC8H",88,0)
 ;
"RTN","IBCSC8H",89,0)
 ; Mammo# display IB patch 320
"RTN","IBCSC8H",90,0)
 S (IBZ,IBZ1)=$P(IB("U3"),U,1)    ; retrieve mammo# from database
"RTN","IBCSC8H",91,0)
 ;
"RTN","IBCSC8H",92,0)
 ; If mammo# is there, but should not be, then blank it out
"RTN","IBCSC8H",93,0)
 I IBZ'="",'$$XRAY^IBCEP8A(IBIFN) D
"RTN","IBCSC8H",94,0)
 . NEW DIE,DA,DR
"RTN","IBCSC8H",95,0)
 . S IBZ1=IBUN        ; mammo# not needed
"RTN","IBCSC8H",96,0)
 . S DIE=399,DA=IBIFN,DR="242////@" D ^DIE
"RTN","IBCSC8H",97,0)
 . Q
"RTN","IBCSC8H",98,0)
 ;
"RTN","IBCSC8H",99,0)
 I IBZ="" S IBZ1=IBUN
"RTN","IBCSC8H",100,0)
 W !?4,"Mammography Cert # : ",IBZ1
"RTN","IBCSC8H",101,0)
 ;
"RTN","IBCSC8H",102,0)
 ; Section 5
"RTN","IBCSC8H",103,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC8H",104,0)
 W " Chiropractic Data  : " S Y=$P(IB("U3"),U,5) X ^DD("DD") W $S(Y'="":"INITIAL TREATMENT ON "_Y,1:IBUN)
"RTN","IBCSC8H",105,0)
 ;
"RTN","IBCSC8H",106,0)
 ; Section 6
"RTN","IBCSC8H",107,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC8H",108,0)
 W " Form Locator 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC8H",109,0)
 I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC8H",110,0)
 I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC8H",111,0)
 I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC8H",112,0)
 ;
"RTN","IBCSC8H",113,0)
 ; Section 7
"RTN","IBCSC8H",114,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC8H",115,0)
 W " Billing Provider   : "
"RTN","IBCSC8H",116,0)
 K IBZ
"RTN","IBCSC8H",117,0)
 D GETBP^IBCEF79(IBIFN,"",+$$B^IBCEF79(IBIFN),"CMS-1500 SCREEN 8",.IBZ)
"RTN","IBCSC8H",118,0)
 S IBZ=$G(IBZ("CMS-1500 SCREEN 8","NAME"))
"RTN","IBCSC8H",119,0)
 W $S(IBZ'="":IBZ,1:IBU)    ; billing provider name
"RTN","IBCSC8H",120,0)
 W !?3," Taxonomy Code      : "
"RTN","IBCSC8H",121,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC8H",122,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC8H",123,0)
 ;
"RTN","IBCSC8H",124,0)
 ; Section 8
"RTN","IBCSC8H",125,0)
 S Z=8,IBW=1 X IBWW
"RTN","IBCSC8H",126,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC8H",127,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC8H",128,0)
 W " ",$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt? : ")
"RTN","IBCSC8H",129,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC8H",130,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC8H",131,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC8H",132,0)
 ;
"RTN","IBCSC8H",133,0)
 ; Section 9
"RTN","IBCSC8H",134,0)
 S Z=9,IBW=1 X IBWW
"RTN","IBCSC8H",135,0)
 W " Provider ID Maint  : (Edit Provider ID information)",!
"RTN","IBCSC8H",136,0)
 G ^IBCSCP
"RTN","IBCSC8H",137,0)
Q Q
"RTN","IBCSC8H",138,0)
 ;
"RTN","IBCSC8H",139,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC8H",140,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC8H",141,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC8H",142,0)
 Q
"RTN","IBCSC8H",143,0)
 ;
"RTN","IBCSC8H",144,0)
NSAME(DA) ; Returns 1 if div on bill is not the default billing facility
"RTN","IBCSC8H",145,0)
 Q ($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(^DGCR(399,DA,0),U,22),0)),U,7))
"RTN","IBCSC8H",146,0)
 ;
"RTN","IBCSC8H",147,0)
 ;IBCSC8H
"RTN","IBCSCE")
0^26^B9045133^B14634015
"RTN","IBCSCE",1,0)
IBCSCE ;ALB/MRL,MJB - MCCR SCREEN EDITS ;07 JUN 88 14:35
"RTN","IBCSCE",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,236,245,287,349,371,400**;21-MAR-94;Build 52
"RTN","IBCSCE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCE",4,0)
 ;
"RTN","IBCSCE",5,0)
 ;MAP TO DGCRSCE
"RTN","IBCSCE",6,0)
 ; always do procedures last because they are edited upon return to screen routine
"RTN","IBCSCE",7,0)
 I IBDR20["54," S IBDR20=$P(IBDR20,"54,",1)_$P(IBDR20,"54,",2)_"54,"
"RTN","IBCSCE",8,0)
 I IBDR20["44," S IBDR20=$P(IBDR20,"44,",1)_$P(IBDR20,"44,",2)_"44,"
"RTN","IBCSCE",9,0)
LOOP N IBDRLP,IBDRL S IBDRLP=IBDR20 F IBDRL=1:1 S IBDR20=$P(IBDRLP,",",IBDRL) Q:IBDR20=""  D EDIT
"RTN","IBCSCE",10,0)
 Q
"RTN","IBCSCE",11,0)
EDIT N IBQUERY
"RTN","IBCSCE",12,0)
 I (IBDR20["31") D MCCR^IBCNSP2 G ENQ
"RTN","IBCSCE",13,0)
 I (IBDR20["43")!(IBDR20["52") D ^IBCSC4D G ENQ
"RTN","IBCSCE",14,0)
 I (IBDR20["74")!(IBDR20["53") K DR N I D ^IBCOPV S (DA,Y)=IBIFN G TMPL
"RTN","IBCSCE",15,0)
 I (IBDR20["54"),$P($G(^IBE(350.9,1,1)),"^",17) K DR N I D EN1^IBCCPT(.IBQUERY) D CLOSE^IBSDU(.IBQUERY) G TMPL ;
"RTN","IBCSCE",16,0)
 I (IBDR20["55") D ^IBCSC5A G ENQ
"RTN","IBCSCE",17,0)
 I (IBDR20["45")!(IBDR20["56") D ^IBCSC5B G ENQ
"RTN","IBCSCE",18,0)
 I (IBDR20["66")!(IBDR20["76") D EDIT^IBCRBE(IBIFN) D ASKCMB^IBCU65(IBIFN) G ENQ
"RTN","IBCSCE",19,0)
 I IBDR20["82",$$FT^IBCEF(IBIFN)=3 D EN^IBCSC8B G ENQ   ; UB-04 patient reason for visit (screen 8, section 2)
"RTN","IBCSCE",20,0)
 I IBDR20["85",$$FT^IBCEF(IBIFN)=2 D ^IBCSC8A G ENQ     ; cms-1500 chiropractic data (screen 8, section 5)
"RTN","IBCSCE",21,0)
 I IBDR20["87",$$FT^IBCEF(IBIFN)=3 D EN1^IBCEP6 G ENQ   ; UB-04 provider ID maintenance (screen 8, section 7)
"RTN","IBCSCE",22,0)
 I IBDR20["89",$$FT^IBCEF(IBIFN)=2 D EN1^IBCEP6 G ENQ   ; cms-1500 provider ID maintenance (screen 8, section 9)
"RTN","IBCSCE",23,0)
 ;
"RTN","IBCSCE",24,0)
 F Q=1:1:9 I IBDR20[("9"_Q) D EDIT^IBCSC9 G ENQ
"RTN","IBCSCE",25,0)
TMPL N IBFLIAE S IBFLIAE=1 ;to invoke EN^DGREGAED from [IB SCREEN1]
"RTN","IBCSCE",26,0)
 S DR="[IB SCREEN"_IBSR_IBSR1_"]",(DA,Y)=IBIFN,DIE="^DGCR(399,"
"RTN","IBCSCE",27,0)
 D ^DIE K DIE,DR,DLAYGO
"RTN","IBCSCE",28,0)
 I (IBDR20["61")!(IBDR20["71") I +$G(DGRVRCAL) D PROC^IBCU7A(IBIFN,1)
"RTN","IBCSCE",29,0)
 ;
"RTN","IBCSCE",30,0)
ENQ ;
"RTN","IBCSCE",31,0)
 K DIE,DR,IBDR1,IBDR20,DGDRD,DGDRS,DGDRS1,DA
"RTN","IBCSCE",32,0)
 Q
"RTN","IBCSCE",33,0)
 ;
"RTN","IBCSCE",34,0)
 ;called by screen 3 (input template)
"RTN","IBCSCE",35,0)
UPDT F IBDD=0:0 S IBDD=$O(^DPT(DFN,.312,IBDD)) Q:IBDD'>0  S IBI1=^DPT(DFN,.312,IBDD,0) I $D(^DIC(36,+IBI1,0)),$P(^(0),"^",2)'="N" S IBDD(+IBI1)=IBI1
"RTN","IBCSCE",36,0)
 F IBAIC=0:0 S IBAIC=$O(^DGCR(399,IBIFN,"AIC",IBAIC)) Q:IBAIC'>0  I $D(IBDD(IBAIC)) F IBI1="I1","I2","I3" I $D(^DGCR(399,IBIFN,IBI1)),+^(IBI1)=IBAIC,^(IBI1)'=IBDD(IBAIC) S ^DGCR(399,IBIFN,IBI1)=IBDD(IBAIC)
"RTN","IBCSCE",37,0)
 K IBAIC,IBDD,IBI1 Q
"RTN","IBCSCE",38,0)
 ;
"RTN","IBCSCE",39,0)
 ;Edit patient's address using DGREGAED API
"RTN","IBCSCE",40,0)
EDADDR(IBDFN) ;
"RTN","IBCSCE",41,0)
 I $G(IBFLIAE)'=1!(IBDFN=0) Q 0
"RTN","IBCSCE",42,0)
 N IBFL S IBFL(1)=1
"RTN","IBCSCE",43,0)
 N X,Y,DIE,DA,DR,DIDEL,DIW,DIEDA,DG,DICR
"RTN","IBCSCE",44,0)
 D EN^DGREGAED(IBDFN,.IBFL)
"RTN","IBCSCE",45,0)
 Q 1
"RTN","IBCSCE",46,0)
 ;IBCSCE
"RTN","IBCSCH")
0^31^B46654544^B63443719
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ;03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245,232,287,348,349,374,371,395,400**;21-MAR-94;Build 52
"RTN","IBCSCH",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N I,C,IBSCNNZ,IBQ,IBPRNT,Z S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $F(".?1500.?HCFA.","."_$G(IBSCNNZ)_"."),$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,0) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?INX" S IBQ=1 D INSDSPLX(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPROPT(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",18,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",19,0)
 . I $G(IBSCNNZ)="?MRA",$$MCRONBIL^IBEFUNC(IBIFN),$T(SCR^IBCEMVU)'="" S IBQ=1 D SCR^IBCEMVU(IBIFN) Q
"RTN","IBCSCH",20,0)
 . I $G(IBSCNNZ)="?ID" S IBQ=1 D DISPID^IBCEF74(IBIFN) Q
"RTN","IBCSCH",21,0)
 . I $G(IBSCNNZ)="?RX" S IBQ=1 D DISPRX^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",22,0)
 . Q
"RTN","IBCSCH",23,0)
 ;
"RTN","IBCSCH",24,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",25,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",26,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",27,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",28,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",29,0)
M W "  Special help screens:"
"RTN","IBCSCH",30,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",31,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",32,0)
 W !,?5,"Enter '?INX' to view the patients insurance policies with comments."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",34,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",35,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",36,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",37,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?1500' to view how block 24 will print on a CMS-1500."
"RTN","IBCSCH",38,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",39,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",40,0)
 I $$MCRONBIL^IBEFUNC(IBIFN) W !?5,"Enter '?MRA' to view Medicare Remittance Advice EOB's on file."
"RTN","IBCSCH",41,0)
 W !,?5,"Enter '?ID' to view all IDs to be electronically transmitted on this claim."
"RTN","IBCSCH",42,0)
 W !,?5,"Enter '?RX' to view all prescriptions on this claim."
"RTN","IBCSCH",43,0)
 ;
"RTN","IBCSCH",44,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",45,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR
"RTN","IBCSCH",46,0)
 R X:DTIME
"RTN","IBCSCH",47,0)
 Q
"RTN","IBCSCH",48,0)
 ;
"RTN","IBCSCH",49,0)
M1 N I,Z S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",50,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN"
"RTN","IBCSCH",51,0)
 R X:DTIME
"RTN","IBCSCH",52,0)
 Q
"RTN","IBCSCH",53,0)
 ;
"RTN","IBCSCH",54,0)
 ;
"RTN","IBCSCH",55,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",56,0)
 ;
"RTN","IBCSCH",57,0)
S ; display the available screen data
"RTN","IBCSCH",58,0)
 N C,I,Z,J W ! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",59,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Specific^Locally Defined"
"RTN","IBCSCH",60,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",61,0)
 Q
"RTN","IBCSCH",62,0)
 ;
"RTN","IBCSCH",63,0)
W ;
"RTN","IBCSCH",64,0)
 N I,J,Z
"RTN","IBCSCH",65,0)
 F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",66,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",67,0)
 Q
"RTN","IBCSCH",68,0)
 ;IBCSCH
"RTN","IBCSCH",69,0)
 ;
"RTN","IBCSCH",70,0)
 ;
"RTN","IBCSCH",71,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of CMS-1500
"RTN","IBCSCH",72,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",73,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE,IBNXPG
"RTN","IBCSCH",74,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",75,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",76,0)
 ;
"RTN","IBCSCH",77,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",78,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",79,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",80,0)
 ;
"RTN","IBCSCH",81,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the CMS-1500"
"RTN","IBCSCH",82,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",83,0)
 ;
"RTN","IBCSCH",84,0)
 ; box 19 - lines 36-37
"RTN","IBCSCH",85,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",86,0)
 ;
"RTN","IBCSCH",87,0)
 ; box 21 - lines 39-41
"RTN","IBCSCH",88,0)
 W !,"21. diagnosis"
"RTN","IBCSCH",89,0)
 I $D(^TMP("IBXDISP",$J,2,IBLIN+3)) W ?16,"(1st 4 only)"
"RTN","IBCSCH",90,0)
 W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,30))
"RTN","IBCSCH",91,0)
 W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,30))
"RTN","IBCSCH",92,0)
 ;
"RTN","IBCSCH",93,0)
 ; box 24 - lines 44-55
"RTN","IBCSCH",94,0)
 D PG
"RTN","IBCSCH",95,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",96,0)
 . I '$D(^TMP("IBXDISP",$J,IBPG,IBLIN+9)) Q   ; no line's on this page
"RTN","IBCSCH",97,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",98,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",99,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",100,0)
 . S IBNXPG=$O(^TMP("IBXDISP",$J,IBPG))   ; next page
"RTN","IBCSCH",101,0)
 . I 'IBQ,IBNXPG,$D(^TMP("IBXDISP",$J,IBNXPG,IBLIN+9)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",102,0)
 . Q
"RTN","IBCSCH",103,0)
 ;
"RTN","IBCSCH",104,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",105,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",106,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",107,0)
 Q
"RTN","IBCSCH",108,0)
 ;
"RTN","IBCSCH",109,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",110,0)
 W !,"24. A             B  C    D                 E         F     G H I    J"
"RTN","IBCSCH",111,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",112,0)
 Q
"RTN","IBCSCH",113,0)
 ;
"RTN","IBCSCH",114,0)
INSDSPL(IBIFN) ; Display patient's policies
"RTN","IBCSCH",115,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",116,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",117,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",118,0)
 Q
"RTN","IBCSCH",119,0)
 ;
"RTN","IBCSCH",120,0)
INSDSPLX(IBIFN) ; Display patient's policies extended (?INX)
"RTN","IBCSCH",121,0)
 N IBX,DFN,IBDATE S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDATE=$P(IBX,U,3) D DISP^IBCNS3(DFN,IBDATE,123)
"RTN","IBCSCH",122,0)
 Q
"RTN","IBCSCH",123,0)
 ;
"RTN","IBCSCH",124,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",125,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",126,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",127,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",128,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",129,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",130,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",131,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",132,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",133,0)
 Q
"RTN","IBCSCH",134,0)
 ;
"RTN","IBCSCH",135,0)
DISPROPT(IBIFN) ; prompt for VA or Non-VA provider.
"RTN","IBCSCH",136,0)
 N X,Y,DIR
"RTN","IBCSCH",137,0)
 S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA Provider: ",DIR("B")="V"
"RTN","IBCSCH",138,0)
 D ^DIR
"RTN","IBCSCH",139,0)
 I Y="V" D DISPPRV^IBCSCH2(IBIFN) Q
"RTN","IBCSCH",140,0)
 I Y="N" D DISPNVA^IBCSCH2(IBIFN)
"RTN","IBCSCH",141,0)
 Q
"RTN","IBCSCH",142,0)
 ;
"RTN","IBCU3")
0^47^B24794996^B26112094
"RTN","IBCU3",1,0)
IBCU3 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ; 4/4/03 8:49am
"RTN","IBCU3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,211,245,348,399,400**;21-MAR-94;Build 52
"RTN","IBCU3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU3",4,0)
 ;
"RTN","IBCU3",5,0)
 ;MAP TO DGCRU3
"RTN","IBCU3",6,0)
SC(DFN) ; returns 1 if service connection indicated, 0 otherwise (based on VAEL(3))
"RTN","IBCU3",7,0)
 N X,VAEL,VAERR S X=0
"RTN","IBCU3",8,0)
 I +$G(DFN) D ELIG^VADPT S X=+$G(VAEL(3))
"RTN","IBCU3",9,0)
 Q X
"RTN","IBCU3",10,0)
 ;
"RTN","IBCU3",11,0)
APPT(DATE,DFN,DISP) ;Check date to see if patient has any visit data
"RTN","IBCU3",12,0)
 ;input:   DATE - required, date to check for appointments
"RTN","IBCU3",13,0)
 ;         DFN  - required, patient to check for appointments on date
"RTN","IBCU3",14,0)
 ;         DISP - if true then error message will be printed before exit, if any
"RTN","IBCU3",15,0)
 ;returns: 1 - if appt visit found
"RTN","IBCU3",16,0)
 ;         2 - if unscheduled add/edit clinic stop entry found
"RTN","IBCU3",17,0)
 ;         3 - if only disposition found
"RTN","IBCU3",18,0)
 ;         "0^error message" if no valid visit data/disposition found
"RTN","IBCU3",19,0)
 ;
"RTN","IBCU3",20,0)
 N Y,X,X1,X2 S DATE=$P(DATE,".",1),Y="0^* Patient has no Visits for this date..."
"RTN","IBCU3",21,0)
 I 'DATE!'$D(^DPT(DFN,0)) S Y="0^Unable to check for appointments on this date!" G APPTE
"RTN","IBCU3",22,0)
 N IBVAL,IBCBK,IBVTYP
"RTN","IBCU3",23,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DATE,IBVAL("EDT")=DATE+.9
"RTN","IBCU3",24,0)
 S IBCBK="I '$P(Y0,U,6) S IBVTYP=+$P(Y0,U,8) I $S(IBVTYP=2:1,IBVTYP=1:$$APPTCT^IBEFUNC(Y0),IBVTYP=3:$$DISCT^IBEFUNC(Y,Y0),1:0) S IBVTYP(IBVTYP)="""" S:$D(IBVTYP(1)) SDSTOP=1"
"RTN","IBCU3",25,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCU3",26,0)
 S IBVTYP=$O(IBVTYP(0))
"RTN","IBCU3",27,0)
 S:IBVTYP Y=IBVTYP
"RTN","IBCU3",28,0)
 ;
"RTN","IBCU3",29,0)
APPTE I +$G(DISP),'Y W !,?10,*7,$P(Y,U,2)
"RTN","IBCU3",30,0)
 Q Y
"RTN","IBCU3",31,0)
 ;
"RTN","IBCU3",32,0)
BDT(DFN,DATE) ; returns primary bill defined for an event date, "" if none
"RTN","IBCU3",33,0)
 N X,Y S X="" I '$O(^DGCR(399,"C",+$G(DFN),0))!'$G(DATE) G BDTE
"RTN","IBCU3",34,0)
 S Y="",DATE=9999999-DATE F  S Y=$O(^DGCR(399,"APDT",+DFN,Y)) Q:'Y  D
"RTN","IBCU3",35,0)
 . I $O(^DGCR(399,"APDT",+DFN,Y,0))=DATE,'$P($G(^DGCR(399,Y,"S")),U,16) S X=$P($G(^DGCR(399,Y,0)),U,17) Q
"RTN","IBCU3",36,0)
BDTE Q X
"RTN","IBCU3",37,0)
 ;
"RTN","IBCU3",38,0)
BILLED(PTF) ;returns bill "IFN^^rate group" if PTF record is already associated with an uncancelled final bill
"RTN","IBCU3",39,0)
 ;returns "bill IFN ^ bill date (stm to) ^ bill rate group" if inpatients interim with no final bill, 0 otherwise
"RTN","IBCU3",40,0)
 N IFN,Y,X S Y=0 I '$D(^DGCR(399,"APTF",+$G(PTF))) G BILLEDQ
"RTN","IBCU3",41,0)
 S IFN=0 F  S IFN=$O(^DGCR(399,"APTF",PTF,IFN)) Q:'IFN  D  I +Y,'$P(Y,U,2) Q
"RTN","IBCU3",42,0)
 . S X=$G(^DGCR(399,IFN,0)) I $P(X,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",43,0)
 . S Y=IFN_"^^"_$P(X,U,7) I $P(X,U,6)=2!($P(X,U,6)=3) S Y=IFN_"^"_$P($G(^DGCR(399,IFN,"U")),U,2)_"^"_$P(X,U,7)
"RTN","IBCU3",44,0)
BILLEDQ Q Y
"RTN","IBCU3",45,0)
 ;
"RTN","IBCU3",46,0)
FTN(FT) ;returns name of the form type passed in, "" if not defined
"RTN","IBCU3",47,0)
 N X S X=$P($G(^IBE(353,+$G(FT),0)),U,1)
"RTN","IBCU3",48,0)
 Q X
"RTN","IBCU3",49,0)
 ;
"RTN","IBCU3",50,0)
FT(IFN,IBRESET) ;return the correct form type for a bill (trigger code in 399 to set .19)
"RTN","IBCU3",51,0)
 ; if IBRESET is not a positive value ('IBRESET), returns the bills current form type (if defined)
"RTN","IBCU3",52,0)
 ; if IBRESET is a positive value (+IBRESET), interpret form type according to following rules (for triggers):
"RTN","IBCU3",53,0)
 ;    first use if bill is inst (UB) or prof (1500) (399,.27), then current (399,.19), then UB
"RTN","IBCU3",54,0)
 N X,Y,FTC,FTT
"RTN","IBCU3",55,0)
 S X="",IFN=+$G(IFN),Y=$G(^DGCR(399,IFN,0))
"RTN","IBCU3",56,0)
 S FTC=$P(Y,U,19) I FTC=1 S FTC=3
"RTN","IBCU3",57,0)
 I '$G(IBRESET),+FTC S X=FTC G FTQ
"RTN","IBCU3",58,0)
 S FTT=$S($P(Y,U,27)=1:3,$P(Y,U,27)=2:2,1:"")
"RTN","IBCU3",59,0)
 S X=$S(+FTT:FTT,+FTC:FTC,1:3)
"RTN","IBCU3",60,0)
FTQ Q X
"RTN","IBCU3",61,0)
 ;
"RTN","IBCU3",62,0)
FNT(FTN) ;returns the ifn of the form type name passed in, must be exact match, 0 if none found
"RTN","IBCU3",63,0)
 N X,Y S X=0 I $G(FTN)'="" S X=$O(^IBE(353,"B",FTN,0))
"RTN","IBCU3",64,0)
 Q X
"RTN","IBCU3",65,0)
 ;
"RTN","IBCU3",66,0)
BILLDEV(IFN,PRT) ;returns the default device for a bill's form type, if PRT is passed as true then returns the AR follow up device, otherwise the billing device
"RTN","IBCU3",67,0)
 N X,Y S X=0 I $D(^DGCR(399,+$G(IFN),0)) S PRT=$S(+$G(PRT):3,1:2),Y=$$FT(IFN),X=$P($G(^IBE(353,+Y,0)),U,PRT)
"RTN","IBCU3",68,0)
 Q X
"RTN","IBCU3",69,0)
 ;
"RTN","IBCU3",70,0)
RXDUP(RX,DATE,IFN,DISP,DFN,RTG) ;returns bill ifn if rx # exists on another bill
"RTN","IBCU3",71,0)
 ;input:  rx # - required, rx # to check for
"RTN","IBCU3",72,0)
 ;        date - required, date of refill
"RTN","IBCU3",73,0)
 ;ifn, dfn, rtg are optional - if not passed then not used to specify rx
"RTN","IBCU3",74,0)
 ;(if ifn not passed then returns true if on any bill same or dfn and rtgetc.)
"RTN","IBCU3",75,0)
 ;if ifn passed the dfn and rtg do not need to be
"RTN","IBCU3",76,0)
 N X,LN,RIFN,BIFN,RLN,BLN S (RIFN,X)=0,DATE=$G(DATE),RX=$G(RX),IFN=$G(IFN) I RX=""!('DATE) G RXDUPE
"RTN","IBCU3",77,0)
 S LN=$G(^DGCR(399,+IFN,0)),DFN=$S(+$G(DFN):DFN,1:+$P(LN,U,2)),RTG=$S(+$G(RTG):RTG,1:+$P(LN,U,7))
"RTN","IBCU3",78,0)
 F  S RIFN=$O(^IBA(362.4,"B",RX,RIFN)) Q:'RIFN  S RLN=$G(^IBA(362.4,+RIFN,0)) I +DATE=+$P(RLN,U,3) D  Q:+X
"RTN","IBCU3",79,0)
 . S BIFN=+$P(RLN,U,2),BLN=$G(^DGCR(399,BIFN,0)) Q:(BLN="")!(BIFN=+$G(IFN))
"RTN","IBCU3",80,0)
 . I $P(BLN,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",81,0)
 . I +DFN,$P(BLN,U,2)'=DFN Q  ; different patient
"RTN","IBCU3",82,0)
 . I +RTG,+RTG'=$P(BLN,U,7) Q  ; different rate group
"RTN","IBCU3",83,0)
 . S X=BIFN_"^A "_$P($G(^DGCR(399.3,+$P(BLN,U,7),0)),U,1)_" bill ("_$P(BLN,U,1)_") exists for Rx # "_RX_" and refill date "_$$DAT1^IBOUTL(DATE)_"."
"RTN","IBCU3",84,0)
RXDUPE I +$G(DISP),+X W !,?10,$P(X,U,2)
"RTN","IBCU3",85,0)
 Q X
"RTN","IBCU3",86,0)
 ;
"RTN","IBCU3",87,0)
BCOB(IBIFN,IBCOB) ; returns an array of all bills related COB to the bill passed in
"RTN","IBCU3",88,0)
 ; includes prior bills defined on this bill then checks the Primary, Secondary and Tertiary Bills and adds
"RTN","IBCU3",89,0)
 ; all the prior bills defined on them
"RTN","IBCU3",90,0)
 ; ARR(BILL SEQUENCE (1,2,3), INSURANCE CO, BILL #)=""
"RTN","IBCU3",91,0)
 ;
"RTN","IBCU3",92,0)
 N IBM1,IBI,IBIFN1,IBM,IBM11,IBSEQ,IBSEQN,IBJ K IBCOB
"RTN","IBCU3",93,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCU3",94,0)
 F IBI=IBIFN,+$P(IBM1,U,5),+$P(IBM1,U,6),+$P(IBM1,U,7) I +IBI S IBIFN1=+IBI D
"RTN","IBCU3",95,0)
 . ;
"RTN","IBCU3",96,0)
 . S IBM=$G(^DGCR(399,IBIFN1,"M")),IBM11=$G(^DGCR(399,IBIFN1,"M1")) I IBIFN=IBIFN1,'$P(IBM,U,2),'$P(IBM,U,3) Q
"RTN","IBCU3",97,0)
 . S IBSEQ=$P($G(^DGCR(399,IBIFN1,0)),U,21),IBSEQN=$S(IBSEQ="P":1,IBSEQ="S":2,IBSEQ="T":3,1:"") Q:'IBSEQN
"RTN","IBCU3",98,0)
 . ;
"RTN","IBCU3",99,0)
 . F IBJ=1:1:3 I +$P(IBM,U,IBJ) S IBCOB(IBJ,+$P(IBM,U,IBJ),+$P(IBM11,U,(IBJ+4)))=""
"RTN","IBCU3",100,0)
 . I +$P(IBM,U,IBSEQN) S IBCOB(IBSEQN,$P(IBM,U,IBSEQN),+IBIFN1)=""
"RTN","IBCU3",101,0)
 ;
"RTN","IBCU3",102,0)
 S IBI=0 F  S IBI=$O(IBCOB(IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  I +$O(IBCOB(IBI,IBJ,0)) K IBCOB(IBI,IBJ,0)
"RTN","IBCU3",103,0)
 Q
"RTN","IBCU3",104,0)
 ;
"RTN","IBCU3",105,0)
BINS(IBIFN) ; return list of billable insurance carriers on a bill (COB)
"RTN","IBCU3",106,0)
 ; output:  sequence:carrier:policy ^ sequence:carrier:policy ^ sequence:carrier:policy
"RTN","IBCU3",107,0)
 N IBM0,IBI,IBS,IBC,IBP,IBX S IBI=0,IBX="",IBM0=$G(^DGCR(399,+$G(IBIFN),"M"))
"RTN","IBCU3",108,0)
 F IBS="P","S","T" S IBI=IBI+1,IBC=+$P(IBM0,U,IBI) I +IBC D
"RTN","IBCU3",109,0)
 . S IBP=+$P(IBM0,U,(11+IBI)) I $P($G(^DIC(36,+IBC,0)),U,2)'="N" S IBX=IBX_IBS_":"_IBC_":"_IBP_U
"RTN","IBCU3",110,0)
 Q IBX
"RTN","IBCU3",111,0)
 ;
"RTN","IBCU3",112,0)
BOTHER(IBIFN,IBDT) ; return Bedsection of Type of Care if date is Other Type of care, based on "OT" multiple
"RTN","IBCU3",113,0)
 ; Other care is not inpatient or outpatient, SNF and Sub-Acute became distinct with RC v2.0
"RTN","IBCU3",114,0)
 ; as with all other bedsection movements, the last date is not included since that is the date they left
"RTN","IBCU3",115,0)
 N IBX,IBY,IBFND S IBFND=0,IBDT=$G(IBDT)\1
"RTN","IBCU3",116,0)
 I +$G(IBIFN),+IBDT S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCU3",117,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCU3",118,0)
 . I IBDT'<$P(IBY,U,2),IBDT<$P(IBY,U,3) S IBFND=+IBY
"RTN","IBCU3",119,0)
 . I IBDT=($P(IBY,U,2)\1),IBDT=($P(IBY,U,3)\1) S IBFND=+IBY ; 1 day SNF stay
"RTN","IBCU3",120,0)
 Q IBFND
"RTN","IBCU64")
0^3^B23323555^B16573732
"RTN","IBCU64",1,0)
IBCU64 ;ALB/ARH - AUTOMATED BILLER (INPT CONT) ;8/6/93
"RTN","IBCU64",2,0)
 ;;2.0;INTEGRATED BILLING;**14,80,130,51,137,400**;21-MAR-94;Build 52
"RTN","IBCU64",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU64",4,0)
 ; DBIA REFERENCE TO ^DGPM, DGPM("AMV1" , "ATID1", "APTF" = DBIA419
"RTN","IBCU64",5,0)
 ; DBIA REFERENCE TO PLASIH^DGUTL2 = DBIA421
"RTN","IBCU64",6,0)
 ; DBIA REFERENCE TO APLD^DGUTL2 =
"RTN","IBCU64",7,0)
 ;
"RTN","IBCU64",8,0)
LOS1(IFN,IBDTS) ; returns length of stay for a  bill's date range
"RTN","IBCU64",9,0)
 ; If actual leave dates needed, pass IBDTS by reference
"RTN","IBCU64",10,0)
 ;  Returns IBDTS(begin leave dt)=end leave dt)
"RTN","IBCU64",11,0)
 N X,Y,DFN,IBADM,IBPMCA S (X,IBPMCA)=0,Y=$G(^DGCR(399,+$G(IFN),0)) G:Y="" LOS1Q I $P(Y,U,8)'="" D
"RTN","IBCU64",12,0)
 . ; find patient movement, based on admit date and DFN from PTF
"RTN","IBCU64",13,0)
 . S DFN=+$P(Y,U,2),IBADM=+$P(Y,U,3) I 'IBADM Q
"RTN","IBCU64",14,0)
 . S IBPMCA=$O(^DGPM("AMV1",+IBADM,+DFN,0))
"RTN","IBCU64",15,0)
 S X=$G(^DGCR(399,+IFN,"U"))
"RTN","IBCU64",16,0)
 S X=$$LOS($P(X,U,1),$P(X,U,2),$P(Y,U,6),IBPMCA,.IBDTS)
"RTN","IBCU64",17,0)
LOS1Q Q X
"RTN","IBCU64",18,0)
 ;
"RTN","IBCU64",19,0)
AD(IBPMCA) ; returns inpatient admit and discharge date, DFN, PTF, Facility Treating Specialty, if one/both don't exist "0^0"
"RTN","IBCU64",20,0)
 N X,Y S X="0^0" I '$G(IBPMCA) G ADQ
"RTN","IBCU64",21,0)
 S Y=$G(^DGPM(+IBPMCA,0)) ; get patient movement data
"RTN","IBCU64",22,0)
 S X=+Y_"^"_+$G(^DGPM(+$P(Y,U,17),0))_"^"_$P(Y,U,3)_"^"_$P(Y,U,16)_"^"_$P(Y,U,9)
"RTN","IBCU64",23,0)
ADQ Q X
"RTN","IBCU64",24,0)
 ;
"RTN","IBCU64",25,0)
LOS(IBBDT,IBEDT,BTF,IBPMCA,IBDTS) ; calculate the inpatient length of stay for a given time period
"RTN","IBCU64",26,0)
 ;parameters are input variables into DGUTL2, which calculates days absent or on pass
"RTN","IBCU64",27,0)
 ;if the pat movment IFN is not available then can't check of absence or pass days
"RTN","IBCU64",28,0)
 ;LOS: discharge date is not added except for inpt interim first and continuous where discharge date is added,
"RTN","IBCU64",29,0)
 ;    absent or pass days not added,
"RTN","IBCU64",30,0)
 ;    admission and discharge on same day has LOS=1, discharge date=admission date+1 also has an LOS=1
"RTN","IBCU64",31,0)
 ; Array returned (if passed by reference) IBDTS=# of leave days
"RTN","IBCU64",32,0)
 ;                IBDTS(begin date)=end date for all leave periods 
"RTN","IBCU64",33,0)
 N X,IBX,IBY,IBDISDT,IBADM,DFN,IBA S IBX=0 I '$G(IBBDT)!'$G(IBEDT) G LOSQ
"RTN","IBCU64",34,0)
 I IBBDT=IBEDT!($G(BTF)=2)!($G(BTF)=3) S IBEDT=$$FMADD^XLFDT(IBEDT,1) ; inclusive if interim continuous or first
"RTN","IBCU64",35,0)
 S IBX=$$FMDIFF^XLFDT(IBEDT,IBBDT,1) ; difference between begin and end date
"RTN","IBCU64",36,0)
 I +$G(IBPMCA) S IBY=$$AD(IBPMCA) I +IBY S IBADM=+IBY\1,IBDISDT=$P(IBY,U,2)\1,DFN=$P(IBY,U,3) D
"RTN","IBCU64",37,0)
 . ; maximum date range is the admit thru discharge range
"RTN","IBCU64",38,0)
 . S:IBBDT<IBADM IBBDT=IBADM I +IBDISDT&(IBEDT>IBDISDT) S IBEDT=IBDISDT
"RTN","IBCU64",39,0)
 . S IBX=$$FMDIFF^XLFDT(IBEDT,IBBDT,1) I (IBBDT\1)=(IBEDT\1) S IBX=1
"RTN","IBCU64",40,0)
 . S IBX=IBX-$$NONCOV(IBBDT,IBEDT,IBPMCA,.IBDTS) ; subtract days absent or on pass
"RTN","IBCU64",41,0)
LOSQ Q $S(IBX>0:IBX,1:0)
"RTN","IBCU64",42,0)
 ;
"RTN","IBCU64",43,0)
DUPCHKI(DT1,DT2,PTF,RTG,DISP,IFN) ;Check for duplicate billing of inpt admission - checks for overlapping date range on other
"RTN","IBCU64",44,0)
 ;bills with the same rate type and that have not been cancelled
"RTN","IBCU64",45,0)
 ;input:   DT1 - beginning of date range to check
"RTN","IBCU64",46,0)
 ;         DT2 - ending of date range to check
"RTN","IBCU64",47,0)
 ;         PTF - ptr to PTF record
"RTN","IBCU64",48,0)
 ;         DISP - true if error message should be printed before exit, if any
"RTN","IBCU64",49,0)
 ;         RTG - rate group to check for, if no rate group (0 passed and/or no IFN) then any bill found for
"RTN","IBCU64",50,0)
 ;          visit date will cause error message
"RTN","IBCU64",51,0)
 ;         IFN - existing bill to check against, if passed will use variables from this bill if they are not passed in
"RTN","IBCU64",52,0)
 ;returns: 0 - if another bill was not found for this admission with this date range, patient, and rate type
"RTN","IBCU64",53,0)
 ;         (dup IFN)_"^error message" - if duplicate date found, same rate group then IFN of bill
"RTN","IBCU64",54,0)
 N IFN2,Y,X,X1 S Y=0,(X,X1)="",IFN=+$G(IFN) I +IFN S X=$G(^DGCR(399,IFN,0)),X1=$G(^DGCR(399,IFN,"U"))
"RTN","IBCU64",55,0)
 S RTG=$S($G(RTG)'="":+RTG,1:+$P(X,U,7)),PTF=$S(+$G(PTF):+PTF,1:+$P(X,U,8)) G:'PTF DCIQ
"RTN","IBCU64",56,0)
 S DT1=$S(+$G(DT1):+DT1,1:$P(X1,U,1)),DT2=$S(+$G(DT2):+DT2,1:$P(X1,U,2)) G:'DT1!'DT2 DCIQ
"RTN","IBCU64",57,0)
 S DT1=DT1\1,DT2=DT2\1 I (DT1>DT2)!('$D(^DGCR(399,"APTF",PTF))) G DCIQ
"RTN","IBCU64",58,0)
 S IFN2=0 F  S IFN2=$O(^DGCR(399,"APTF",PTF,IFN2)) Q:'IFN2  I IFN'=IFN2 D  Q:+Y
"RTN","IBCU64",59,0)
 . S X1=$G(^DGCR(399,IFN2,0)) I $P(X1,U,13)=7 Q  ; bill cancelled
"RTN","IBCU64",60,0)
 . I +RTG,$P(X1,U,7)'=RTG Q  ; different rate group
"RTN","IBCU64",61,0)
 . S X=$G(^DGCR(399,IFN2,"U")) I (DT2<+X)!(DT1>+$P(X,U,2)) Q
"RTN","IBCU64",62,0)
 . S Y=IFN2_"^A "_$P($G(^DGCR(399.3,+$P(X1,U,7),0)),U,1)_" bill ("_$P(X1,U,1)_") exists overlapping this date range."
"RTN","IBCU64",63,0)
DCIQ I +$G(DISP),+Y W !,?10,$P(Y,U,2)
"RTN","IBCU64",64,0)
 Q Y
"RTN","IBCU64",65,0)
 ;
"RTN","IBCU64",66,0)
ADM(DFN,IBDT) ; -- send back Admission and Discharge Dates for a patient on IBDT (or now) if any, 0 otherwise
"RTN","IBCU64",67,0)
 ;returns 'Adm Dt^Disch Dt^PM ptr^PTF ptr' if patient was admitted at any time during IBDT or before discharge date and time
"RTN","IBCU64",68,0)
 N IBNDT,IBINPT,IBADM,IBADT1,IBADT2,IBDIS,IBNOW,%,X,Y S IBNOW=$$NOW^XLFDT
"RTN","IBCU64",69,0)
 S IBINPT=0,IBDT=$G(IBDT) G:'$D(^DPT(+$G(DFN),0)) ADME I 'IBDT S IBDT=IBNOW
"RTN","IBCU64",70,0)
 S IBNDT=9999999.999999-((IBDT\1)+.99999),IBADT2=IBNOW
"RTN","IBCU64",71,0)
 F  S IBNDT=$O(^DGPM("ATID1",DFN,IBNDT)) Q:'IBNDT  D  Q:+IBINPT
"RTN","IBCU64",72,0)
 . S IBADM=+$O(^DGPM("ATID1",DFN,IBNDT,0)),IBADT1=$G(^DGPM(+IBADM,0)) Q:IBADT1=""
"RTN","IBCU64",73,0)
 . S IBDIS=$P(IBADT1,U,17) I +IBDIS S IBADT2=+$G(^DGPM(+IBDIS,0)),IBDIS=IBADT2
"RTN","IBCU64",74,0)
 . I $P(IBADT2,".",2)="" S $P(IBADT2,".",2)=999999
"RTN","IBCU64",75,0)
 . I (+IBADT1\1)'>(IBDT\1),(IBADT2'<IBDT!((+IBADT1\1)=(+IBDT\1))) S IBINPT=+IBADT1_U_+IBDIS_U_IBADM_U_$P(IBADT1,U,16)
"RTN","IBCU64",76,0)
ADME Q IBINPT
"RTN","IBCU64",77,0)
 ;
"RTN","IBCU64",78,0)
PTFADM(PTF) ; given a PTF #, return the Patient Movement Admission entry pointer (405)
"RTN","IBCU64",79,0)
 N IBX S IBX="" I +$G(PTF) S IBX=$O(^DGPM("APTF",+PTF,0))
"RTN","IBCU64",80,0)
 Q IBX
"RTN","IBCU64",81,0)
 ;
"RTN","IBCU64",82,0)
NONCOV(IBBDT,IBEDT,IBPMCA,IBDTS) ; Determine the total # of non billable
"RTN","IBCU64",83,0)
 ;   days in an inpt date range
"RTN","IBCU64",84,0)
 ; variables are input to DGUTL2 call
"RTN","IBCU64",85,0)
 ; Array IBDTS(movement from date)=movement to date is returned if passed
"RTN","IBCU64",86,0)
 ; by reference
"RTN","IBCU64",87,0)
 ;
"RTN","IBCU64",88,0)
 N Z,IBZ
"RTN","IBCU64",89,0)
 S Z=+$$APLD^DGUTL2(IBPMCA,.IBZ,IBBDT,IBEDT,"B")
"RTN","IBCU64",90,0)
 I Z>0,$G(IBZ(0))>0 S IBDTS=+IBZ(0) D
"RTN","IBCU64",91,0)
 . S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  S IBDTS(+$P(IBZ(Z),U))=$P(IBZ(Z),U,2)
"RTN","IBCU64",92,0)
 Q +$G(IBZ(0))
"RTN","IBCU64",93,0)
 ;
"RTN","IBCU64",94,0)
PPS(IBIFN,IBPTF) ; Calculate the claim's default PPS - prospective payment system code.
"RTN","IBCU64",95,0)
 ; Also known as the DRG - diagnosis-related group.
"RTN","IBCU64",96,0)
 ; This field is a trigger from the .08 field PTF entry# to field# 170 for the PPS.
"RTN","IBCU64",97,0)
 ; IB*2*400 addition
"RTN","IBCU64",98,0)
 ; Input - IBIFN - ien to file 399
"RTN","IBCU64",99,0)
 ;         IBPTF - ien to file 45 - value of the .08 field
"RTN","IBCU64",100,0)
 NEW PPS S PPS=""
"RTN","IBCU64",101,0)
 I '$$INPAT^IBCEF(IBIFN) G PPSX                             ; pps field is for inpatients only
"RTN","IBCU64",102,0)
 I $$FT^IBCEF(IBIFN)'=3 G PPSX                              ; pps field is for UB claims only
"RTN","IBCU64",103,0)
 S PPS=+$$GET1^DIQ(45,+$G(IBPTF)_",",9,"")                  ; value of the discharge DRG from PTF
"RTN","IBCU64",104,0)
 I $$DRGTD^IBACSV(PPS,$$BDATE^IBACSV(IBIFN))="" S PPS=""    ; make sure DRG description exists
"RTN","IBCU64",105,0)
PPSX ;
"RTN","IBCU64",106,0)
 Q PPS
"RTN","IBCU64",107,0)
 ;
"RTN","IBCU64",108,0)
PPSC(IBIFN) ; Trigger condition for setting the PPS field (field# 170)
"RTN","IBCU64",109,0)
 ; Function value=1 if it is OK to fire the trigger
"RTN","IBCU64",110,0)
 N OK S OK=0
"RTN","IBCU64",111,0)
 I +$P($G(^DGCR(399,IBIFN,"U1")),U,15) G PPSCX      ; pps value already on file
"RTN","IBCU64",112,0)
 I '$$INPAT^IBCEF(IBIFN) G PPSCX                    ; must be an inpatient claim
"RTN","IBCU64",113,0)
 I $$FT^IBCEF(IBIFN)'=3 G PPSCX                     ; must be a UB claim
"RTN","IBCU64",114,0)
 S OK=1
"RTN","IBCU64",115,0)
PPSCX ;
"RTN","IBCU64",116,0)
 Q OK
"RTN","IBCU64",117,0)
 ;
"RTN","IBCVC")
0^44^B8498241^B8423325
"RTN","IBCVC",1,0)
IBCVC ;ALB/WCJ - VALUE CODE FUNCTIONALITY ;25-JUN-07
"RTN","IBCVC",2,0)
 ;;2.0;INTEGRATED BILLING;**371,400**;21-MAR-94;Build 52
"RTN","IBCVC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCVC",4,0)
 G AWAY
"RTN","IBCVC",5,0)
AWAY Q
"RTN","IBCVC",6,0)
 ;
"RTN","IBCVC",7,0)
ALLOWVC(IBIFN,Y)   ; see if the value code is obsolete.
"RTN","IBCVC",8,0)
 ; returns 0 = Not Allowed/Obsolete
"RTN","IBCVC",9,0)
 ; returns 1 = Allowed
"RTN","IBCVC",10,0)
 ;
"RTN","IBCVC",11,0)
 N OBSDT,SCF
"RTN","IBCVC",12,0)
 S OBSDT=$$GET1^DIQ(399.1,Y,.26,"I")
"RTN","IBCVC",13,0)
 D CLEAN^DILF
"RTN","IBCVC",14,0)
 Q:'+OBSDT 1  ; If there is no obsolete date, were cool
"RTN","IBCVC",15,0)
 ;
"RTN","IBCVC",16,0)
 S SCF=$$GET1^DIQ(399,IBIFN,151,"I")  ; get the statement covers from date to compare with
"RTN","IBCVC",17,0)
 D CLEAN^DILF
"RTN","IBCVC",18,0)
 I 'SCF Q 0  ; if there is none, not sure where to go with this.  It's required so I say fail.
"RTN","IBCVC",19,0)
 ;
"RTN","IBCVC",20,0)
 I SCF>OBSDT Q 0
"RTN","IBCVC",21,0)
 ;
"RTN","IBCVC",22,0)
 Q 1
"RTN","IBCVC",23,0)
 ;
"RTN","IBCVC",24,0)
HELP ;
"RTN","IBCVC",25,0)
 Q:'$G(DA)
"RTN","IBCVC",26,0)
 Q:'$G(DA(1))
"RTN","IBCVC",27,0)
 Q:'$D(^DGCR(399,DA(1),"CV",DA,0))
"RTN","IBCVC",28,0)
 N VCPTR
"RTN","IBCVC",29,0)
 S VCPTR=$P($G(^DGCR(399,DA(1),"CV",DA,0)),U)
"RTN","IBCVC",30,0)
 Q:VCPTR=""
"RTN","IBCVC",31,0)
 Q:'$D(^DGCR(399.1,VCPTR,1))
"RTN","IBCVC",32,0)
 N LOOP
"RTN","IBCVC",33,0)
 S LOOP=0 F  S LOOP=$O(^DGCR(399.1,VCPTR,1,LOOP)) Q:'+LOOP  D
"RTN","IBCVC",34,0)
 . W !,$G(^(LOOP,0))
"RTN","IBCVC",35,0)
 Q
"RTN","IBCVC",36,0)
 ;
"RTN","IBCVC",37,0)
FORMCHK(X,DA) ; Check to make sure that the VALUE is in the correct format base on the VALUE CODE.
"RTN","IBCVC",38,0)
 ; This tag is the input transform for the VALUE field (Sub-File 399.047, field .02).
"RTN","IBCVC",39,0)
 ; 
"RTN","IBCVC",40,0)
 ; X = data being verified
"RTN","IBCVC",41,0)
 ; DA = subfile entry
"RTN","IBCVC",42,0)
 ; DA(1) = IEN to 399
"RTN","IBCVC",43,0)
 ; 
"RTN","IBCVC",44,0)
 ; returns
"RTN","IBCVC",45,0)
 ; 0 = invalid format
"RTN","IBCVC",46,0)
 ; 1 = valid format
"RTN","IBCVC",47,0)
 ; 
"RTN","IBCVC",48,0)
 Q:'$G(DA) 0
"RTN","IBCVC",49,0)
 Q:'$G(DA(1)) 0
"RTN","IBCVC",50,0)
 Q:'$D(^DGCR(399,DA(1),"CV",DA,0)) 0
"RTN","IBCVC",51,0)
 ;
"RTN","IBCVC",52,0)
 N VCPTR
"RTN","IBCVC",53,0)
 S VCPTR=$P($G(^DGCR(399,DA(1),"CV",DA,0)),U)
"RTN","IBCVC",54,0)
 Q:VCPTR="" 0
"RTN","IBCVC",55,0)
 ; 
"RTN","IBCVC",56,0)
 Q $$CHK(VCPTR,X)
"RTN","IBCVC",57,0)
 ;
"RTN","IBCVC",58,0)
CHK(VCPTR,X) ; This tag is called from the input transform above and also from the IB edit check routines (IBCBB*) 
"RTN","IBCVC",59,0)
 ; This function is passed in:
"RTN","IBCVC",60,0)
 ; VCPTR - pointer into file #399.1
"RTN","IBCVC",61,0)
 ; X - the VALUE being checked
"RTN","IBCVC",62,0)
 ; Returns:
"RTN","IBCVC",63,0)
 ; 0 or false - Invalid format or can't figure it out.
"RTN","IBCVC",64,0)
 ; 1 or true  - valid format (or in the case of 24, defined at the state level)
"RTN","IBCVC",65,0)
 ; 
"RTN","IBCVC",66,0)
 N CODE,OK
"RTN","IBCVC",67,0)
 S CODE=$$GET1^DIQ(399.1,VCPTR_",",.02,"I")
"RTN","IBCVC",68,0)
 D CLEAN^DILF
"RTN","IBCVC",69,0)
 Q:CODE="" 0
"RTN","IBCVC",70,0)
 ;
"RTN","IBCVC",71,0)
 N AMTFLG
"RTN","IBCVC",72,0)
 ;
"RTN","IBCVC",73,0)
 ; Check to see if it goes out as a monetary amount.
"RTN","IBCVC",74,0)
 S AMTFLG=$$GET1^DIQ(399.1,VCPTR_",",.19,"I")
"RTN","IBCVC",75,0)
 D CLEAN^DILF
"RTN","IBCVC",76,0)
 I AMTFLG Q X?1(1.7N,.7N1"."1.2N)
"RTN","IBCVC",77,0)
 ;
"RTN","IBCVC",78,0)
 ; Medicaid Rate Code (This is defined at the state level)
"RTN","IBCVC",79,0)
 Q:CODE=24 1
"RTN","IBCVC",80,0)
 ;
"RTN","IBCVC",81,0)
 ; Accident Hour
"RTN","IBCVC",82,0)
 I CODE=45 Q ".00.01.02.03.04.05.06.07.08.09.10.11.12.13.14.15.16.17.18.19.20.21.22.23.99."[("."_X_".")
"RTN","IBCVC",83,0)
 ;
"RTN","IBCVC",84,0)
 ; Whole Numbers
"RTN","IBCVC",85,0)
 I ".37.38.39.46.50.51.52.53.56.57.58.59.67.68.80.81.82."[("."_CODE_".") Q X?1.7N
"RTN","IBCVC",86,0)
 ;
"RTN","IBCVC",87,0)
 ; Zip
"RTN","IBCVC",88,0)
 I CODE="A0" Q X?5N
"RTN","IBCVC",89,0)
 ;
"RTN","IBCVC",90,0)
 I ".48.49."[("."_CODE_".") S OK=1 D  Q OK
"RTN","IBCVC",91,0)
 . I $P(X,".")'?.2N S OK=0 Q
"RTN","IBCVC",92,0)
 . I $P(X,".",2,999)'?.1N S OK=0 Q
"RTN","IBCVC",93,0)
 . I $E(X,$L(X))="." S OK=0 Q
"RTN","IBCVC",94,0)
 ;
"RTN","IBCVC",95,0)
 ; Alpha Numeric, no punctuation
"RTN","IBCVC",96,0)
 I ".60.61."[("."_CODE_".") Q X?1.7AN
"RTN","IBCVC",97,0)
 Q 1
"RTN","IBCVC",98,0)
 ;
"RTN","IBCVC",99,0)
REMOVE(DA) ; Remove the VALUE field since it's in the wrong format.
"RTN","IBCVC",100,0)
 ; This is called from a NEW STYLE X-REF "AC" in file 399.047 field .01
"RTN","IBCVC",101,0)
 N IENS,FDA
"RTN","IBCVC",102,0)
 Q:'$G(DA)!'$G(DA(1))
"RTN","IBCVC",103,0)
 S IENS=DA_","_DA(1)_","
"RTN","IBCVC",104,0)
 S FDA(399.047,IENS,.02)="@"
"RTN","IBCVC",105,0)
 D FILE^DIE(,"FDA")
"RTN","IBCVC",106,0)
 D CLEAN^DILF
"RTN","IBCVC",107,0)
 Q
"RTN","IBCVC",108,0)
 ;
"RTN","IBCVC",109,0)
COND(DA,OLDVC,NEWVC) ; Check if the VALUE is in a valid format for the new VALUE CODE.
"RTN","IBCVC",110,0)
 ; This is called from a NEW STYLE X-REF "AC" in file 399.047 field .01
"RTN","IBCVC",111,0)
 ; This function will return:
"RTN","IBCVC",112,0)
 ; 1 - Means that this VALUE should be deleted (It's in the wrong format)
"RTN","IBCVC",113,0)
 ; 0 - Means that this VALUE should NOT be deleted
"RTN","IBCVC",114,0)
 Q:'$G(OLDVC) 0
"RTN","IBCVC",115,0)
 Q:'$G(DA)!'$G(DA(1)) 0
"RTN","IBCVC",116,0)
 N OLDVALUE
"RTN","IBCVC",117,0)
 S OLDVALUE=$P($G(^DGCR(399,DA(1),"CV",DA,0)),U,2)
"RTN","IBCVC",118,0)
 Q:OLDVALUE="" 0
"RTN","IBCVC",119,0)
 Q '$$CHK(NEWVC,OLDVALUE)
"RTN","IBJPS")
0^14^B3592314^B5156185
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320,348,349,377,384,400**;21-MAR-94;Build 52
"RTN","IBJPS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 I IBSET'="" D:IBSET=10 EN^IBJPS3 S:IBSET'=10 DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",39,0)
 I $G(DR)'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",40,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",41,0)
 Q
"RTN","IBJPS",42,0)
 ;
"RTN","IBJPS",43,0)
1 ;;.09;.13;.14
"RTN","IBJPS",44,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",45,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",46,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",47,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",48,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",49,0)
7 ;;1.33;1.32;1.31;1.27
"RTN","IBJPS",50,0)
8 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",51,0)
9 ;;1.01;1.02;1.05
"RTN","IBJPS",52,0)
11 ;;2.08;2.09
"RTN","IBJPS",53,0)
12 ;;11.01;11.02;12
"RTN","IBJPS",54,0)
13 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",55,0)
14 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T
"RTN","IBJPS",56,0)
15 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",57,0)
 ;
"RTN","IBJPS2")
0^13^B39779249^B41372585
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320,348,349,377,384,400**;21-MAR-94;Build 52
"RTN","IBJPS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0,PTPSTR,BPZZ
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 ; IB patch 349 for UB-04 claim form and parameters
"RTN","IBJPS2",27,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("UB-04 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,33),350.9,1.33),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 S IBLN=$$SET("CMS-1500 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,32),350.9,1.32),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",30,0)
 ;
"RTN","IBJPS2",31,0)
 D LEFT(2)
"RTN","IBJPS2",32,0)
 S IBLN=$$SET("UB-04 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",33,0)
 S IBLN=$$SET("CMS-1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",34,0)
 ;
"RTN","IBJPS2",35,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",38,0)
 ;
"RTN","IBJPS2",39,0)
 D LEFT(2)
"RTN","IBJPS2",40,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",41,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",42,0)
 ;
"RTN","IBJPS2",43,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",44,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",45,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",46,0)
 ;
"RTN","IBJPS2",47,0)
 D LEFT(2)
"RTN","IBJPS2",48,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",49,0)
 ;
"RTN","IBJPS2",50,0)
 D RIGHT(3,1,1) ; - Pay-To Providers - section 10
"RTN","IBJPS2",51,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,19,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,19,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",52,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,3),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z),U),1:"")
"RTN","IBJPS2",53,0)
 S IBLN=$$SET("Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",54,0)
 ;
"RTN","IBJPS2",55,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",56,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",57,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",58,0)
 ;
"RTN","IBJPS2",59,0)
 ; ePharmacy parameters
"RTN","IBJPS2",60,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",61,0)
 S IBLN=$$SET("HIPPA NCPDP Active Flag",$S($P(IBPD11,U)=1:"Active",1:"Not Active"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",62,0)
 S IBLN=$$SET("Drug Non Covered Recheck Period",$P(IBPD11,U,2)_" days(s)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",63,0)
 S IBLN=$$SET("Non Covered Reject Codes","",IBLN,IBLR,IBSEL,1)
"RTN","IBJPS2",64,0)
 S BPZZ=0 F  S BPZZ=$O(IBPD12(BPZZ)) Q:+BPZZ=0  D
"RTN","IBJPS2",65,0)
 . S IBLN=$$SET(" ",$$GET1^DIQ(9002313.93,+$G(IBPD12(BPZZ)),.01,"E")_" "_$$GET1^DIQ(9002313.93,+$G(IBPD12(BPZZ)),.02,"E"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",66,0)
 ;
"RTN","IBJPS2",67,0)
 ; transfer pricing
"RTN","IBJPS2",68,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",69,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",70,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",72,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",73,0)
 ;
"RTN","IBJPS2",74,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",75,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",76,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",77,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",78,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",81,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",82,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",83,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",84,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",88,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",89,0)
 ;
"RTN","IBJPS2",90,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",91,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",92,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",93,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",94,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",95,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",96,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",98,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",99,0)
 . Q
"RTN","IBJPS2",100,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",103,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",104,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",105,0)
 ;
"RTN","IBJPS2",106,0)
 Q
"RTN","IBJPS2",107,0)
 ;
"RTN","IBJPS2",108,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",109,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",110,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",111,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",112,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",113,0)
 S LN=LN+1
"RTN","IBJPS2",114,0)
 Q LN
"RTN","IBJPS2",115,0)
 ;
"RTN","IBJPS2",116,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",117,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",118,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",119,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",120,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",121,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",122,0)
 Q
"RTN","IBJPS2",123,0)
 ;
"RTN","IBJPS2",124,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",125,0)
 ;
"RTN","IBJPS2",126,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",127,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",128,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",129,0)
 Q
"RTN","IBJPS2",130,0)
 ;
"RTN","IBJPS2",131,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",132,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",133,0)
 Q
"RTN","IBJPS3")
0^25^B89833158^n/a
"RTN","IBJPS3",1,0)
IBJPS3 ;BP/YMG - IB Site Parameters, Pay-To Provider ;20-Oct-2008
"RTN","IBJPS3",2,0)
 ;;2.0;INTEGRATED BILLING;**400**;21-MAR-94;Build 52
"RTN","IBJPS3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS3",4,0)
 ;
"RTN","IBJPS3",5,0)
EN ; -- main entry point for IBJP IB PAY-TO PROVIDERS
"RTN","IBJPS3",6,0)
 D EN^VALM("IBJP IB PAY-TO PROVIDERS")
"RTN","IBJPS3",7,0)
 Q
"RTN","IBJPS3",8,0)
 ;
"RTN","IBJPS3",9,0)
HDR ; -- header code
"RTN","IBJPS3",10,0)
 ; Not setting VALMHDR causes this tag to be called upon return from every action, 
"RTN","IBJPS3",11,0)
 ; this is done to keep VALMSG displayed at all times, instead of the default message on the lower bar.
"RTN","IBJPS3",12,0)
 S VALMSG="* = Default Pay-to provider"
"RTN","IBJPS3",13,0)
 Q
"RTN","IBJPS3",14,0)
 ;
"RTN","IBJPS3",15,0)
INIT ; -- init variables and list array
"RTN","IBJPS3",16,0)
 N IBCNT,IBLN,IBSTR,PIEN,PDATA
"RTN","IBJPS3",17,0)
 S (VALMCNT,IBCNT,IBLN)=0
"RTN","IBJPS3",18,0)
 S PIEN=0 F  S PIEN=$O(^IBE(350.9,1,19,PIEN)) Q:'PIEN  D
"RTN","IBJPS3",19,0)
 .I $P($G(^IBE(350.9,1,19,PIEN,0)),U,5)'="" Q
"RTN","IBJPS3",20,0)
 .S PDATA=$$PTG(PIEN),IBCNT=IBCNT+1
"RTN","IBJPS3",21,0)
 .S IBSTR=$$SETSTR^VALM1(IBCNT_".","",2,4)
"RTN","IBJPS3",22,0)
 .I $$ISDFLT(PIEN) S IBSTR=$$SETSTR^VALM1("*",IBSTR,7,1)
"RTN","IBJPS3",23,0)
 .S IBSTR=$$SETSTR^VALM1("Name     : "_$P(PDATA,U),IBSTR,8,45)
"RTN","IBJPS3",24,0)
 .S IBSTR=$$SETSTR^VALM1("State   : "_$P(PDATA,U,8),IBSTR,54,25)
"RTN","IBJPS3",25,0)
 .S IBLN=$$SET(IBLN,IBSTR)
"RTN","IBJPS3",26,0)
 .S IBSTR=$$SETSTR^VALM1("Address 1: "_$P(PDATA,U,5),"",8,45)
"RTN","IBJPS3",27,0)
 .S IBSTR=$$SETSTR^VALM1("Zip Code: "_$P(PDATA,U,9),IBSTR,54,25)
"RTN","IBJPS3",28,0)
 .S IBLN=$$SET(IBLN,IBSTR)
"RTN","IBJPS3",29,0)
 .S IBSTR=$$SETSTR^VALM1("Address 2: "_$P(PDATA,U,6),"",8,45)
"RTN","IBJPS3",30,0)
 .S IBSTR=$$SETSTR^VALM1("Phone   : "_$P(PDATA,U,4),IBSTR,54,25)
"RTN","IBJPS3",31,0)
 .S IBLN=$$SET(IBLN,IBSTR)
"RTN","IBJPS3",32,0)
 .S IBSTR=$$SETSTR^VALM1("City     : "_$P(PDATA,U,7),"",8,45)
"RTN","IBJPS3",33,0)
 .S IBSTR=$$SETSTR^VALM1("Tax ID  : "_$P(PDATA,U,3),IBSTR,54,25)
"RTN","IBJPS3",34,0)
 .S IBLN=$$SET(IBLN,IBSTR),IBLN=$$SET(IBLN,"")
"RTN","IBJPS3",35,0)
 .S @VALMAR@("ZIDX",IBCNT,PIEN)=""
"RTN","IBJPS3",36,0)
 .Q
"RTN","IBJPS3",37,0)
 I 'IBLN S IBLN=$$SET(IBLN,$$SETSTR^VALM1("No Pay-To Providers defined.","",13,30))
"RTN","IBJPS3",38,0)
 S VALMCNT=IBLN,VALMBG=1
"RTN","IBJPS3",39,0)
 Q
"RTN","IBJPS3",40,0)
 ;
"RTN","IBJPS3",41,0)
HELP ; -- help code
"RTN","IBJPS3",42,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS3",43,0)
 Q
"RTN","IBJPS3",44,0)
 ;
"RTN","IBJPS3",45,0)
EXIT ; -- exit code
"RTN","IBJPS3",46,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBJPS3",47,0)
 Q
"RTN","IBJPS3",48,0)
 ;
"RTN","IBJPS3",49,0)
PRVADD ; add new pay-to provider
"RTN","IBJPS3",50,0)
 N X,Y,DIC,DA,DLAYGO,DIE,DR,DIR,DIRUT,DUOUT,DTOUT,IEN
"RTN","IBJPS3",51,0)
 D FULL^VALM1
"RTN","IBJPS3",52,0)
 S VALMBCK="R"
"RTN","IBJPS3",53,0)
 S DIC="^IBE(350.9,1,19,",DIC(0)="AELMQ",DA(1)=1,DIC("A")="Enter Pay-to Provider: ",DLAYGO=350.9 D ^DIC S IEN=+Y
"RTN","IBJPS3",54,0)
 I IEN'>0 Q
"RTN","IBJPS3",55,0)
 D PRVEDIT1
"RTN","IBJPS3",56,0)
 I $P($G(^IBE(350.9,1,19,IEN,0)),U,2)="" D PRVDEL1
"RTN","IBJPS3",57,0)
 Q
"RTN","IBJPS3",58,0)
 ;
"RTN","IBJPS3",59,0)
PRVDEL ; delete a pay-to provider
"RTN","IBJPS3",60,0)
 N DA,DR,DIE,X,Y,DIR,DIRUT,DUOUT,DTOUT,I,IEN,DIVS,DFLT
"RTN","IBJPS3",61,0)
 S VALMBCK="R"
"RTN","IBJPS3",62,0)
 D FULL^VALM1
"RTN","IBJPS3",63,0)
 S IEN=$$SEL Q:'IEN
"RTN","IBJPS3",64,0)
 S DFLT=$$ISDFLT(IEN)
"RTN","IBJPS3",65,0)
 I DFLT W !!,"WARNING: This is the default Pay-To Provider."
"RTN","IBJPS3",66,0)
 D GETDIVS^IBJPS4(IEN,.DIVS)
"RTN","IBJPS3",67,0)
 I 'DFLT D
"RTN","IBJPS3",68,0)
 .W !!,"The following divisions are currently associated with this Pay-To Provider: "
"RTN","IBJPS3",69,0)
 .S I="" F  S I=$O(DIVS(I)) Q:I=""  W !,?5,DIVS(I)
"RTN","IBJPS3",70,0)
 .W:'$D(DIVS) "None",! W !
"RTN","IBJPS3",71,0)
 .Q
"RTN","IBJPS3",72,0)
 S DIR("?")="Enter Yes to delete this Pay-To Provider."
"RTN","IBJPS3",73,0)
 S DIR("A")="Delete Pay-To Provider "_$P($G(^IBE(350.9,1,19,IEN,0)),U,2)
"RTN","IBJPS3",74,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR Q:'Y
"RTN","IBJPS3",75,0)
 I DFLT S DIE="^IBE(350.9,",DA=1,DR="11.03////@" D ^DIE
"RTN","IBJPS3",76,0)
 I $D(DIVS) K DIK S DIK="^IBE(350.9,1,19,",DA(1)=1,I="" F  S I=$O(DIVS(I)) Q:I=""  S DA=I D ^DIK
"RTN","IBJPS3",77,0)
 K DIK
"RTN","IBJPS3",78,0)
PRVDEL1 ;
"RTN","IBJPS3",79,0)
 N DIK
"RTN","IBJPS3",80,0)
 K DA S DIK="^IBE(350.9,1,19,",DA(1)=1,DA=IEN D ^DIK
"RTN","IBJPS3",81,0)
 D CLEAN^VALM10,INIT
"RTN","IBJPS3",82,0)
 Q
"RTN","IBJPS3",83,0)
 ;
"RTN","IBJPS3",84,0)
PRVEDIT ; edit existing pay-to provider
"RTN","IBJPS3",85,0)
 N IEN
"RTN","IBJPS3",86,0)
 S VALMBCK="R"
"RTN","IBJPS3",87,0)
 D FULL^VALM1
"RTN","IBJPS3",88,0)
 S IEN=$$SEL Q:'IEN
"RTN","IBJPS3",89,0)
PRVEDIT1 ;
"RTN","IBJPS3",90,0)
 N DIE,DA,DR,DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBJPS3",91,0)
 S DIE="^IBE(350.9,1,19,",DA=IEN,DA(1)=1
"RTN","IBJPS3",92,0)
 S DR=".02T;1.01T;1.02T;1.03T;1.04T;1.05T;.04T;.03T;.05///@"
"RTN","IBJPS3",93,0)
 D ^DIE
"RTN","IBJPS3",94,0)
 S DIR("?")="Enter Yes to make this entry the default Pay-to Provider."
"RTN","IBJPS3",95,0)
 S DIR("A")="Is this the default Pay-To Provider",DIR(0)="YO"
"RTN","IBJPS3",96,0)
 S DIR("B")="YES" I $$GETDFLT,'$$ISDFLT(IEN) S DIR("B")="NO"
"RTN","IBJPS3",97,0)
 D ^DIR I Y K DA S DIE="^IBE(350.9,",DA=1,DR="11.03////"_IEN D ^DIE
"RTN","IBJPS3",98,0)
 D CLEAN^VALM10,INIT
"RTN","IBJPS3",99,0)
 Q
"RTN","IBJPS3",100,0)
 ;
"RTN","IBJPS3",101,0)
SET(IBLN,IBSTR) ; add a line to display list
"RTN","IBJPS3",102,0)
 ; returns line number added
"RTN","IBJPS3",103,0)
 S IBLN=IBLN+1 D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS3",104,0)
 Q IBLN
"RTN","IBJPS3",105,0)
 ;
"RTN","IBJPS3",106,0)
ISDFLT(PIEN) ; returns 1 if provider with ien PIEN is the default pay-to provider, 0 otherwise
"RTN","IBJPS3",107,0)
 Q:PIEN="" 0
"RTN","IBJPS3",108,0)
 Q $$GETDFLT=PIEN
"RTN","IBJPS3",109,0)
 ;
"RTN","IBJPS3",110,0)
GETDFLT() ; returns ien of default pay-to provider
"RTN","IBJPS3",111,0)
 Q $P($G(^IBE(350.9,1,11)),U,3)
"RTN","IBJPS3",112,0)
 ;
"RTN","IBJPS3",113,0)
SEL() ; select pay-to provider
"RTN","IBJPS3",114,0)
 ; returns ien of selected pay-to provider, or 0 if nothing is selected
"RTN","IBJPS3",115,0)
 N DIR,IEN,MAX,X,Y
"RTN","IBJPS3",116,0)
 S IEN=0
"RTN","IBJPS3",117,0)
 I VALMLST>4 D
"RTN","IBJPS3",118,0)
 .; there is at least one entry
"RTN","IBJPS3",119,0)
 .S MAX=$O(@VALMAR@("ZIDX",""),-1) S:MAX=1 Y=1
"RTN","IBJPS3",120,0)
 .I MAX>1 S DIR("A")="Select Pay-To Provider (1-"_MAX_"): ",DIR(0)="NA^"_1_":"_MAX_":0" D ^DIR
"RTN","IBJPS3",121,0)
 .S:+Y>0 IEN=$O(@VALMAR@("ZIDX",Y,""))
"RTN","IBJPS3",122,0)
 .Q
"RTN","IBJPS3",123,0)
 Q +IEN
"RTN","IBJPS3",124,0)
 ;
"RTN","IBJPS3",125,0)
PRVDATA(IBIFN) ; Return a string of Pay-To provider information in the following format
"RTN","IBJPS3",126,0)
 ;  [1] name
"RTN","IBJPS3",127,0)
 ;  [2] npi
"RTN","IBJPS3",128,0)
 ;  [3] tax id#
"RTN","IBJPS3",129,0)
 ;  [4] phone#
"RTN","IBJPS3",130,0)
 ;  [5] street 1
"RTN","IBJPS3",131,0)
 ;  [6] street 2
"RTN","IBJPS3",132,0)
 ;  [7] city
"RTN","IBJPS3",133,0)
 ;  [8] state abbreviation
"RTN","IBJPS3",134,0)
 ;  [9] zip
"RTN","IBJPS3",135,0)
 ; [10] list of IB error messages if any of this data is missing in IBXX1;IBXX2;IBXX3;IBXX4; format
"RTN","IBJPS3",136,0)
 ; [11] Institution (File 4) ien
"RTN","IBJPS3",137,0)
 ;
"RTN","IBJPS3",138,0)
 ; **NOTE:  pieces 12,13,14 are added to this string in output formatter data element #1624 for PRV1-1.5 for PRV1
"RTN","IBJPS3",139,0)
 ; pieces 2,3,5.  If pieces are added here to this string, then adjust the code in PRV1-1.5,2,3,5 accordingly.
"RTN","IBJPS3",140,0)
 ;
"RTN","IBJPS3",141,0)
 N DATA,IB0,EVDT,IBDIV,INST,PIEN,IBER
"RTN","IBJPS3",142,0)
 S DATA="",IBER=""
"RTN","IBJPS3",143,0)
 ;
"RTN","IBJPS3",144,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBJPS3",145,0)
 S EVDT=$P(IB0,U,3)                             ; event date on claim
"RTN","IBJPS3",146,0)
 I 'EVDT S EVDT=DT
"RTN","IBJPS3",147,0)
 S IBDIV=+$P(IB0,U,22)                          ; division on claim
"RTN","IBJPS3",148,0)
 I 'IBDIV S IBDIV=$$PRIM^VASITE(EVDT)
"RTN","IBJPS3",149,0)
 I IBDIV'>0 S IBDIV=$$PRIM^VASITE()
"RTN","IBJPS3",150,0)
 I IBDIV'>0 G PRVDATX                           ; get out if no division
"RTN","IBJPS3",151,0)
 S INST=+$$SITE^VASITE(EVDT,IBDIV)              ; inst file 4 pointer
"RTN","IBJPS3",152,0)
 I INST'>0 S INST=+$$SITE^VASITE(DT,IBDIV)
"RTN","IBJPS3",153,0)
 I INST'>0 S INST=+$$SITE^VASITE()
"RTN","IBJPS3",154,0)
 I INST'>0 G PRVDATX                            ; get out if no institution
"RTN","IBJPS3",155,0)
 ;
"RTN","IBJPS3",156,0)
 ; check to see if this institution exists as a separate Pay-To Provider subfile entry
"RTN","IBJPS3",157,0)
 S PIEN=+$O(^IBE(350.9,1,19,"B",INST,""))
"RTN","IBJPS3",158,0)
 ;
"RTN","IBJPS3",159,0)
 I 'PIEN D  G PRVDATX      ; this institution does not exist in 350.9004
"RTN","IBJPS3",160,0)
 . ; check to see if the default Pay-To provider information is defined (350.9;11.03)
"RTN","IBJPS3",161,0)
 . S PIEN=+$P($G(^IBE(350.9,1,11)),U,3) Q:'PIEN
"RTN","IBJPS3",162,0)
 . S DATA=$$PTG(PIEN)
"RTN","IBJPS3",163,0)
 . Q
"RTN","IBJPS3",164,0)
 ;
"RTN","IBJPS3",165,0)
 ; here PIEN exists and the institution pointer was found in the 350.9004 subfile
"RTN","IBJPS3",166,0)
 ; find parent pay-to provider
"RTN","IBJPS3",167,0)
 S PIEN=$$GETPROV^IBJPS4(PIEN) S:PIEN DATA=$$PTG(PIEN)
"RTN","IBJPS3",168,0)
 ;
"RTN","IBJPS3",169,0)
PRVDATX ;
"RTN","IBJPS3",170,0)
 I DATA="" S IBER=IBER_"IB177;",$P(DATA,U,10)=IBER
"RTN","IBJPS3",171,0)
 Q DATA
"RTN","IBJPS3",172,0)
 ;
"RTN","IBJPS3",173,0)
PTG(PIEN) ; gather pay-to provider info
"RTN","IBJPS3",174,0)
 N N0,N1,IBORG,NPI,STIEN,STATE,Z,IBER
"RTN","IBJPS3",175,0)
 S Z="",IBER="",PIEN=+$G(PIEN)
"RTN","IBJPS3",176,0)
 ;
"RTN","IBJPS3",177,0)
 I '$D(^IBE(350.9,1,19,PIEN)) S IBER=IBER_"IB177;",$P(Z,U,10)=IBER G PTGX
"RTN","IBJPS3",178,0)
 S N0=$G(^IBE(350.9,1,19,PIEN,0))
"RTN","IBJPS3",179,0)
 S N1=$G(^IBE(350.9,1,19,PIEN,1))
"RTN","IBJPS3",180,0)
 ;
"RTN","IBJPS3",181,0)
 ; get the NPI# from the Institution file
"RTN","IBJPS3",182,0)
 S IBORG=+$P(N0,U,1),NPI=""
"RTN","IBJPS3",183,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U,1)
"RTN","IBJPS3",184,0)
 ;
"RTN","IBJPS3",185,0)
 ; get the state abbreviation
"RTN","IBJPS3",186,0)
 S STIEN=+$P(N1,U,4),STATE=""
"RTN","IBJPS3",187,0)
 I STIEN S STATE=$$GET1^DIQ(5,STIEN_",",1)
"RTN","IBJPS3",188,0)
 ;
"RTN","IBJPS3",189,0)
 ; check for missing data
"RTN","IBJPS3",190,0)
 I '$L($P(N0,U,2)) S IBER=IBER_"IB178;"     ; missing name
"RTN","IBJPS3",191,0)
 I NPI'>0 S IBER=IBER_"IB179;"              ; missing npi
"RTN","IBJPS3",192,0)
 I '$L($P(N0,U,3)) S IBER=IBER_"IB180;"     ; missing tax ID
"RTN","IBJPS3",193,0)
 I '$L($P(N1,U,1))!'$L($P(N1,U,3))!'$L(STATE)!'$L($P(N1,U,5)) S IBER=IBER_"IB181;"     ; missing address part(s)
"RTN","IBJPS3",194,0)
 ;
"RTN","IBJPS3",195,0)
 S Z=$P(N0,U,2)_U_NPI_U_$P(N0,U,3)_U_$P(N0,U,4)_U_$P(N1,U,1)_U_$P(N1,U,2)_U_$P(N1,U,3)_U_STATE_U_$P(N1,U,5)_U_IBER_U_IBORG
"RTN","IBJPS3",196,0)
PTGX ;
"RTN","IBJPS3",197,0)
 Q Z
"RTN","IBJPS3",198,0)
 ;
"RTN","IBJPS3",199,0)
PRVPHONE(IBIFN) ; Return Pay-to provider phone# for a given claim
"RTN","IBJPS3",200,0)
 ; IBIFN - internal claim# (optional parameter)
"RTN","IBJPS3",201,0)
 ; If IBIFN is not passed in, then the phone# from the default pay-to provider entry will be returned.
"RTN","IBJPS3",202,0)
 ; For example, AR option 'EDI Lockbox 3rd Party Exceptions' needs the phone# for the process of transfering an
"RTN","IBJPS3",203,0)
 ; EEOB to another site, but the claim# is not available to this process.
"RTN","IBJPS3",204,0)
 N PTPP,PIEN
"RTN","IBJPS3",205,0)
 S PTPP=""
"RTN","IBJPS3",206,0)
 I +$G(IBIFN) S PTPP=$P($$PRVDATA(IBIFN),U,4) G PRVPHNX
"RTN","IBJPS3",207,0)
 ;
"RTN","IBJPS3",208,0)
 S PIEN=+$P($G(^IBE(350.9,1,11)),U,3) I 'PIEN G PRVPHNX     ; no claim#, default pay-to provider
"RTN","IBJPS3",209,0)
 S PTPP=$P($$PTG(PIEN),U,4)                                 ; phone#
"RTN","IBJPS3",210,0)
 ;
"RTN","IBJPS3",211,0)
PRVPHNX ;
"RTN","IBJPS3",212,0)
 Q PTPP
"RTN","IBJPS3",213,0)
 ;
"RTN","IBJPS3",214,0)
DEF(INST,DA) ; procedure called by new style x-ref in order to default name and address fields
"RTN","IBJPS3",215,0)
 ; INST - new VA institution ien to file 4 as the .01 field to this sub-file
"RTN","IBJPS3",216,0)
 ; DA - DA array as passed in from FileMan.  DA(1) should equal 1 since this is the IB site params
"RTN","IBJPS3",217,0)
 ;      and there is only 1 entry.  DA should equal the IEN to the pay-to provider multiple entry
"RTN","IBJPS3",218,0)
 ; This procedure is only called if a new institution is being added as the .01 field or if the value of
"RTN","IBJPS3",219,0)
 ; field is being changed from one institution to another.
"RTN","IBJPS3",220,0)
 ;
"RTN","IBJPS3",221,0)
 NEW NAD,IENS,ST,STIEN,IBTAXID
"RTN","IBJPS3",222,0)
 ;
"RTN","IBJPS3",223,0)
 I '$G(INST) G DEFX
"RTN","IBJPS3",224,0)
 ;
"RTN","IBJPS3",225,0)
 S ST=$$WHAT^XUAF4(INST,.02)             ; full state name
"RTN","IBJPS3",226,0)
 S STIEN=$$FIND1^DIC(5,,"BX",ST,"B")     ; state ien
"RTN","IBJPS3",227,0)
 ;
"RTN","IBJPS3",228,0)
 ; if the selected pay-to provider institution is the same as the main
"RTN","IBJPS3",229,0)
 ; facility name field from the IB site parameters, then also default
"RTN","IBJPS3",230,0)
 ; the federal tax ID# from the IB site parameters into the pay-to
"RTN","IBJPS3",231,0)
 ; provider tax ID# field.
"RTN","IBJPS3",232,0)
 S IBTAXID=""
"RTN","IBJPS3",233,0)
 I INST=$P($G(^IBE(350.9,1,0)),U,2) S IBTAXID=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBJPS3",234,0)
 ;
"RTN","IBJPS3",235,0)
 S IENS=DA_",1,"
"RTN","IBJPS3",236,0)
 S NAD(350.9004,IENS,.02)=$$WHAT^XUAF4(INST,100)     ; official VA name
"RTN","IBJPS3",237,0)
 S NAD(350.9004,IENS,.03)=IBTAXID                    ; tax#
"RTN","IBJPS3",238,0)
 S NAD(350.9004,IENS,.04)=""                         ; phone# - blank it out
"RTN","IBJPS3",239,0)
 S NAD(350.9004,IENS,.05)=""                         ; parent - blank it out
"RTN","IBJPS3",240,0)
 S NAD(350.9004,IENS,1.01)=$$WHAT^XUAF4(INST,1.01)   ; address line 1
"RTN","IBJPS3",241,0)
 S NAD(350.9004,IENS,1.02)=$$WHAT^XUAF4(INST,1.02)   ; address line 2
"RTN","IBJPS3",242,0)
 S NAD(350.9004,IENS,1.03)=$$WHAT^XUAF4(INST,1.03)   ; city
"RTN","IBJPS3",243,0)
 I STIEN S NAD(350.9004,IENS,1.04)=STIEN             ; state
"RTN","IBJPS3",244,0)
 S NAD(350.9004,IENS,1.05)=$$WHAT^XUAF4(INST,1.04)   ; zip
"RTN","IBJPS3",245,0)
 D FILE^DIE(,"NAD")
"RTN","IBJPS3",246,0)
DEFX ;
"RTN","IBJPS3",247,0)
 Q
"RTN","IBJPS3",248,0)
 ;
"RTN","IBJPS3",249,0)
DIFF(IBIFN,EDI) ; This function will determine if there are any differences between
"RTN","IBJPS3",250,0)
 ; the Billing Provider name and address and the Pay-to Provider name and address.
"RTN","IBJPS3",251,0)
 ; When these two are the same, then the Pay-to Provider information is
"RTN","IBJPS3",252,0)
 ; suppressed and is not printed or transmitted.
"RTN","IBJPS3",253,0)
 ; This function returns a 1 if differences are found, and 0 if they are the same.
"RTN","IBJPS3",254,0)
 ;
"RTN","IBJPS3",255,0)
 ; EDI=1 if this is being called for the electronic claim transmission
"RTN","IBJPS3",256,0)
 ; EDI=0 if this is being called for the printed UB-04 claim form
"RTN","IBJPS3",257,0)
 ;
"RTN","IBJPS3",258,0)
 N BPZ,PTP,DIFF,BPNAME,BPAD1,BPAD2,BPCITY,BPST,BPZIP,IBZ
"RTN","IBJPS3",259,0)
 S DIFF=0,EDI=+$G(EDI)
"RTN","IBJPS3",260,0)
 S BPZ=+$$B^IBCEF79(IBIFN)            ; billing provider ien to file 4
"RTN","IBJPS3",261,0)
 S PTP=$$UP^XLFSTR($$PRVDATA(IBIFN))  ; pay-to provider information
"RTN","IBJPS3",262,0)
 ;
"RTN","IBJPS3",263,0)
 ; for EDI claims, use the GETBP utility to get the billing provider data
"RTN","IBJPS3",264,0)
 I EDI D
"RTN","IBJPS3",265,0)
 . D GETBP^IBCEF79(IBIFN,"",BPZ,"DIFF",.IBZ)
"RTN","IBJPS3",266,0)
 . S BPNAME=$$UP^XLFSTR($G(IBZ("DIFF","NAME")))
"RTN","IBJPS3",267,0)
 . S BPAD1=$$UP^XLFSTR($G(IBZ("DIFF","ADDR1")))
"RTN","IBJPS3",268,0)
 . S BPAD2=$$UP^XLFSTR($G(IBZ("DIFF","ADDR2")))
"RTN","IBJPS3",269,0)
 . S BPCITY=$$UP^XLFSTR($G(IBZ("DIFF","CITY")))
"RTN","IBJPS3",270,0)
 . S BPST=$$UP^XLFSTR($G(IBZ("DIFF","ST")))
"RTN","IBJPS3",271,0)
 . S BPZIP=$$NOPUNCT^IBCEF($$UP^XLFSTR($G(IBZ("DIFF","ZIP"))))
"RTN","IBJPS3",272,0)
 . Q
"RTN","IBJPS3",273,0)
 ;
"RTN","IBJPS3",274,0)
 ; for printed UB claims, use the Institution file for FL-1 data
"RTN","IBJPS3",275,0)
 I 'EDI D
"RTN","IBJPS3",276,0)
 . S BPNAME=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,0))
"RTN","IBJPS3",277,0)
 . S BPAD1=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,1))
"RTN","IBJPS3",278,0)
 . S BPAD2=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,2))
"RTN","IBJPS3",279,0)
 . S BPCITY=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,"3C"))
"RTN","IBJPS3",280,0)
 . S BPST=$$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,"3S"))
"RTN","IBJPS3",281,0)
 . S BPZIP=$$NOPUNCT^IBCEF($$UP^XLFSTR($$GETFAC^IBCEP8(BPZ,0,"3Z")))
"RTN","IBJPS3",282,0)
 . Q
"RTN","IBJPS3",283,0)
 ;
"RTN","IBJPS3",284,0)
 I BPNAME'=$P(PTP,U,1) S DIFF=1 G DIFFX
"RTN","IBJPS3",285,0)
 I BPAD1'=$P(PTP,U,5) S DIFF=1 G DIFFX
"RTN","IBJPS3",286,0)
 I BPAD2'=$P(PTP,U,6) S DIFF=1 G DIFFX
"RTN","IBJPS3",287,0)
 I BPCITY'=$P(PTP,U,7) S DIFF=1 G DIFFX
"RTN","IBJPS3",288,0)
 I BPST'=$P(PTP,U,8) S DIFF=1 G DIFFX
"RTN","IBJPS3",289,0)
 I BPZIP'=$$NOPUNCT^IBCEF($P(PTP,U,9)) S DIFF=1 G DIFFX
"RTN","IBJPS3",290,0)
DIFFX ;
"RTN","IBJPS3",291,0)
 Q DIFF
"RTN","IBJPS3",292,0)
 ;
"RTN","IBJPS3",293,0)
MAINPRV() ; Return Pay-To provider information for main VAMC
"RTN","IBJPS3",294,0)
 N DATA,IBER,IEN4,PIEN
"RTN","IBJPS3",295,0)
 S (DATA,IBER)="",IEN4=+$$SITE^VASITE I 'IEN4 G MAINPRVX
"RTN","IBJPS3",296,0)
 S PIEN=$O(^IBE(350.9,1,19,"B",IEN4,"")) I 'PIEN G MAINPRVX
"RTN","IBJPS3",297,0)
 I $P($G(^IBE(350.9,1,19,PIEN,0)),U,5)'="" G MAINPRVX   ; if this sub-entry is not a pay-to provider, then get out
"RTN","IBJPS3",298,0)
 S DATA=$$PTG(PIEN)
"RTN","IBJPS3",299,0)
MAINPRVX ;
"RTN","IBJPS3",300,0)
 I DATA="" S IBER=IBER_"IB177;",$P(DATA,U,10)=IBER
"RTN","IBJPS3",301,0)
 Q DATA
"RTN","IBJPS3",302,0)
 ;
"RTN","IBJPS4")
0^38^B28407182^n/a
"RTN","IBJPS4",1,0)
IBJPS4 ;BP/YMG - IB Site Parameters, Pay-To Provider Associations ;06-Nov-2008
"RTN","IBJPS4",2,0)
 ;;2.0;INTEGRATED BILLING;**400**;21-MAR-94;Build 52
"RTN","IBJPS4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS4",4,0)
 ;
"RTN","IBJPS4",5,0)
EN ; -- main entry point for IBJP IB PAY-TO ASSOCIATIONS
"RTN","IBJPS4",6,0)
 ; select pay-to provider
"RTN","IBJPS4",7,0)
 D EN^VALM("IBJP IB PAY-TO ASSOCIATIONS")
"RTN","IBJPS4",8,0)
 S VALMBCK="R"
"RTN","IBJPS4",9,0)
 Q
"RTN","IBJPS4",10,0)
 ;
"RTN","IBJPS4",11,0)
HDR ; -- header code
"RTN","IBJPS4",12,0)
 S VALMHDR(1)=""
"RTN","IBJPS4",13,0)
 Q
"RTN","IBJPS4",14,0)
 ;
"RTN","IBJPS4",15,0)
INIT ; -- init variables and list array
"RTN","IBJPS4",16,0)
 N DFLT,HASDIVS,IBCNT,IBLN,IBSTR,IEN4,PIEN,PROVS
"RTN","IBJPS4",17,0)
 S DFLT=$$GETDFLT^IBJPS3 D BLD(DFLT,.PROVS)
"RTN","IBJPS4",18,0)
 I $D(PROVS) D
"RTN","IBJPS4",19,0)
 .; create listman array
"RTN","IBJPS4",20,0)
 .S (IBCNT,IBLN)=0 S PIEN="" F  S PIEN=$O(PROVS(PIEN)) Q:PIEN=""  D
"RTN","IBJPS4",21,0)
 ..S IBLN=IBLN+1
"RTN","IBJPS4",22,0)
 ..S IBSTR=$$SETSTR^VALM1(PROVS(PIEN)_$S($$ISDFLT^IBJPS3(PIEN):"  (Default)",1:""),"",2,75)
"RTN","IBJPS4",23,0)
 ..D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS4",24,0)
 ..S HASDIVS=0,IEN4="" F  S IEN4=$O(PROVS(PIEN,IEN4)) Q:IEN4=""  D
"RTN","IBJPS4",25,0)
 ...S IBLN=IBLN+1,IBCNT=IBCNT+1 S:'HASDIVS HASDIVS=1
"RTN","IBJPS4",26,0)
 ...S IBSTR=$$SETSTR^VALM1(IBCNT,"",8,4)
"RTN","IBJPS4",27,0)
 ...S IBSTR=$$SETSTR^VALM1($P(PROVS(PIEN,IEN4),U,2),IBSTR,14,8)
"RTN","IBJPS4",28,0)
 ...S IBSTR=$$SETSTR^VALM1($P(PROVS(PIEN,IEN4),U),IBSTR,24,55)
"RTN","IBJPS4",29,0)
 ...D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS4",30,0)
 ...S @VALMAR@("ZIDX",IBCNT,IEN4)=""
"RTN","IBJPS4",31,0)
 ...Q
"RTN","IBJPS4",32,0)
 ..I 'HASDIVS S IBSTR=$$SETSTR^VALM1("No Divisions found.","",8,45) S IBLN=IBLN+1 D SET^VALM10(IBLN,IBSTR)
"RTN","IBJPS4",33,0)
 ..S IBLN=IBLN+1 D SET^VALM10(IBLN,"")
"RTN","IBJPS4",34,0)
 ..Q
"RTN","IBJPS4",35,0)
 .Q
"RTN","IBJPS4",36,0)
 I 'DFLT S IBLN=$$SET^IBJPS3(0,$$SETSTR^VALM1("No Default Pay-To Provider found.","",11,40))
"RTN","IBJPS4",37,0)
 I DFLT,'$D(PROVS) S IBLN=$$SET^IBJPS3(0,$$SETSTR^VALM1("No Pay-To Providers found.","",15,30))
"RTN","IBJPS4",38,0)
 S VALMCNT=IBLN,VALMBG=1
"RTN","IBJPS4",39,0)
 Q
"RTN","IBJPS4",40,0)
 ;
"RTN","IBJPS4",41,0)
HELP ; -- help code
"RTN","IBJPS4",42,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS4",43,0)
 Q
"RTN","IBJPS4",44,0)
 ;
"RTN","IBJPS4",45,0)
EXIT ; -- exit code
"RTN","IBJPS4",46,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBJPS4",47,0)
 Q
"RTN","IBJPS4",48,0)
 ;
"RTN","IBJPS4",49,0)
BLD(DFLT,PROVS) ; build array of pay-to providers and divisions
"RTN","IBJPS4",50,0)
 N ALLDIVS,DIEN,DIVDATA,I,IB0,IEN4,PIEN
"RTN","IBJPS4",51,0)
 I DFLT'>0 Q
"RTN","IBJPS4",52,0)
 ; create list of all pay-to providers
"RTN","IBJPS4",53,0)
 S I=0 F  S I=$O(^IBE(350.9,1,19,I)) Q:'I  D
"RTN","IBJPS4",54,0)
 .S IB0=$G(^IBE(350.9,1,19,I,0)) I 'IB0 Q
"RTN","IBJPS4",55,0)
 .I $P(IB0,U,5)="" S PROVS(I)=$P(IB0,U,2)
"RTN","IBJPS4",56,0)
 .Q
"RTN","IBJPS4",57,0)
 I $D(PROVS) D
"RTN","IBJPS4",58,0)
 .; add divisions to the list
"RTN","IBJPS4",59,0)
 .D LIST^DIC(40.8,,"@;.01;.07I","PQ",,,,,,,"ALLDIVS")
"RTN","IBJPS4",60,0)
 .I $D(ALLDIVS) S I=0 F  S I=$O(ALLDIVS("DILIST",I)) Q:I=""  D
"RTN","IBJPS4",61,0)
 .. ; make sure that we have a file 4 ien to work with
"RTN","IBJPS4",62,0)
 ..S DIVDATA=$G(ALLDIVS("DILIST",I,0)),IEN4=$P(DIVDATA,U,3) I IEN4="" Q
"RTN","IBJPS4",63,0)
 ..S DIEN=$O(^IBE(350.9,1,19,"B",IEN4,""))
"RTN","IBJPS4",64,0)
 ..; if there is an entry in 350.9 for this division, get corresponding pay-to provider
"RTN","IBJPS4",65,0)
 ..; otherwise, use default pay-to provider 
"RTN","IBJPS4",66,0)
 ..S PIEN=$S(DIEN:$$GETPROV(DIEN),1:DFLT)
"RTN","IBJPS4",67,0)
 ..; add this division to the list as division name ^ station number
"RTN","IBJPS4",68,0)
 ..S PROVS(PIEN,IEN4)=$P(DIVDATA,U,2)_U_$$GET1^DIQ(4,IEN4,99)
"RTN","IBJPS4",69,0)
 ..Q
"RTN","IBJPS4",70,0)
 .Q
"RTN","IBJPS4",71,0)
 D CLEAN^DILF
"RTN","IBJPS4",72,0)
 Q
"RTN","IBJPS4",73,0)
 ;
"RTN","IBJPS4",74,0)
SEL() ; select division
"RTN","IBJPS4",75,0)
 ; returns ien of selected division, or 0 if nothing is selected
"RTN","IBJPS4",76,0)
 N DIR,IEN,MAX,X,Y
"RTN","IBJPS4",77,0)
 S IEN=0,MAX=+$O(@VALMAR@("ZIDX",""),-1)
"RTN","IBJPS4",78,0)
 I MAX>0 D
"RTN","IBJPS4",79,0)
 .S:MAX=1 Y=1 I MAX>1 S DIR("A")="Select Division (1-"_MAX_"): ",DIR(0)="NA^"_1_":"_MAX_":0" D ^DIR
"RTN","IBJPS4",80,0)
 .S:+Y>0 IEN=$O(@VALMAR@("ZIDX",Y,""))
"RTN","IBJPS4",81,0)
 .Q
"RTN","IBJPS4",82,0)
 Q +IEN
"RTN","IBJPS4",83,0)
 ;
"RTN","IBJPS4",84,0)
DIVADD ; associate division with a pay-to provider
"RTN","IBJPS4",85,0)
 N DA,DFLT,DIC,DIE,DIEN,DIR,DNAME,DR,IEN4,IEN19,Y
"RTN","IBJPS4",86,0)
 D FULL^VALM1
"RTN","IBJPS4",87,0)
 S VALMBCK="R"
"RTN","IBJPS4",88,0)
 S IEN4=$$SEL I IEN4>0 D
"RTN","IBJPS4",89,0)
 .S IEN19=$O(^IBE(350.9,1,19,"B",IEN4,"")) I IEN19="" D
"RTN","IBJPS4",90,0)
 ..; create a new entry in 350.9
"RTN","IBJPS4",91,0)
 ..S DIEN=$$FIND1^DIC(40.8,,"QX",IEN4,"AD") I 'DIEN Q
"RTN","IBJPS4",92,0)
 ..S DNAME=$$GET1^DIQ(40.8,DIEN,.01),DFLT=$$GETDFLT^IBJPS3 I 'DFLT Q
"RTN","IBJPS4",93,0)
 ..I IEN4=+$G(^IBE(350.9,1,19,DFLT,0)) D ERR Q
"RTN","IBJPS4",94,0)
 ..S DIC="^IBE(350.9,1,19,",DIC(0)="L",DIC("DR")=".02////"_DNAME_";.05////"_DFLT,X=IEN4,DLAYGO=350.9,DA(1)=1
"RTN","IBJPS4",95,0)
 ..K DD,DO D FILE^DICN I +Y>0 S IEN19=+Y
"RTN","IBJPS4",96,0)
 ..K DIC,DD,DO,DLAYGO
"RTN","IBJPS4",97,0)
 ..Q
"RTN","IBJPS4",98,0)
 .I +IEN19>0 D
"RTN","IBJPS4",99,0)
 ..I $P($G(^IBE(350.9,1,19,IEN19,0)),U,5)="" D ERR Q
"RTN","IBJPS4",100,0)
 ..S DIR(0)="P^IBE(350.9,1,19,:M",DIR("S")="I $P(^(0),U,5)="""""
"RTN","IBJPS4",101,0)
 ..S DA(1)=1,DIR("A")="Select Pay-To Provider" D ^DIR
"RTN","IBJPS4",102,0)
 ..I +Y>0 S DIE="^IBE(350.9,1,19,",DA=IEN19,DA(1)=1,DR=".05////"_+Y D ^DIE
"RTN","IBJPS4",103,0)
 .Q
"RTN","IBJPS4",104,0)
 D CLEAN^VALM10,CLEAN^DILF,INIT
"RTN","IBJPS4",105,0)
 Q
"RTN","IBJPS4",106,0)
 ;
"RTN","IBJPS4",107,0)
ERR ;
"RTN","IBJPS4",108,0)
 N DIR
"RTN","IBJPS4",109,0)
 S DIR("A",1)="A division used as a Pay-to Provider can not be associated"
"RTN","IBJPS4",110,0)
 S DIR("A",2)="with another Pay-to Provider."
"RTN","IBJPS4",111,0)
 S DIR("A")="Press RETURN to continue: "
"RTN","IBJPS4",112,0)
 S DIR(0)="EA" D ^DIR
"RTN","IBJPS4",113,0)
 Q
"RTN","IBJPS4",114,0)
 ;
"RTN","IBJPS4",115,0)
GETPROV(PIEN) ; return pay-to provider ien for a given division, or 0 if provider can't be found
"RTN","IBJPS4",116,0)
 ; PIEN has to be a valid ien in pay-to providers sub-file
"RTN","IBJPS4",117,0)
 ; 
"RTN","IBJPS4",118,0)
 N PRVZ,NXTPIEN,OUT
"RTN","IBJPS4",119,0)
 S PRVZ(PIEN)="" ; this array holds ien's to prevent infinite chain
"RTN","IBJPS4",120,0)
 S OUT=0 F  S NXTPIEN=+$P($G(^IBE(350.9,1,19,PIEN,0)),U,5) D  Q:OUT  ;
"RTN","IBJPS4",121,0)
 .I 'NXTPIEN S OUT=1 Q  ; no parent - this is pay-to provider
"RTN","IBJPS4",122,0)
 .I $D(PRVZ(NXTPIEN)) S PIEN=0,OUT=1 Q  ; we are in an infinite loop, so get out
"RTN","IBJPS4",123,0)
 .S PIEN=NXTPIEN,PRVZ(NXTPIEN)="" ; parent exists, so continue the loop
"RTN","IBJPS4",124,0)
 .Q
"RTN","IBJPS4",125,0)
 Q PIEN
"RTN","IBJPS4",126,0)
 ;
"RTN","IBJPS4",127,0)
GETDIVS(PIEN,DIVS) ; return array of divisions associated with pay-to provider PIEN
"RTN","IBJPS4",128,0)
 N I,DIV,PPROV
"RTN","IBJPS4",129,0)
 S I="" F  S I=$O(^IBE(350.9,1,19,"B",I)) Q:I=""  D
"RTN","IBJPS4",130,0)
 .S DIV=$O(^IBE(350.9,1,19,"B",I,""))
"RTN","IBJPS4",131,0)
 .Q:+DIV'>0  S PPROV=$$GETPROV(DIV)
"RTN","IBJPS4",132,0)
 .I PPROV=PIEN,DIV'=PIEN S DIVS(DIV)=$P($G(^IBE(350.9,1,19,DIV,0)),U,2)
"RTN","IBJPS4",133,0)
 .Q
"RTN","IBJPS4",134,0)
 Q
"RTN","IBJPS4",135,0)
SCRN4(IEN) ; Screen for INSTITUTION(#4) file
"RTN","IBJPS4",136,0)
 N DIERR,IENS,FIELDS,Z,ZERR
"RTN","IBJPS4",137,0)
 S IENS=+IEN_",",FIELDS="11;13;101"
"RTN","IBJPS4",138,0)
 D GETS^DIQ(4,IENS,FIELDS,"IE","Z","ZERR")
"RTN","IBJPS4",139,0)
 I $D(DIERR) Q 0
"RTN","IBJPS4",140,0)
 ;Check to see if National
"RTN","IBJPS4",141,0)
 I Z(4,IENS,11,"I")'="N" Q 0
"RTN","IBJPS4",142,0)
 ;Check to see if Inactive
"RTN","IBJPS4",143,0)
 I Z(4,IENS,101,"I") Q 0
"RTN","IBJPS4",144,0)
 ;Check to see if Pharmacy
"RTN","IBJPS4",145,0)
 I "^PHARM^CMOP^MSN^"[(U_Z(4,IENS,13,"E")_U) Q 0
"RTN","IBJPS4",146,0)
 ;Default
"RTN","IBJPS4",147,0)
 Q 1
"RTN","IBY400PO")
0^^B189347718^n/a
"RTN","IBY400PO",1,0)
IBY400PO ;ALB/ESG - Post Install for IB patch 400 ;27-Aug-2008
"RTN","IBY400PO",2,0)
 ;;2.0;INTEGRATED BILLING;**400**;21-MAR-94;Build 52
"RTN","IBY400PO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY400PO",4,0)
 ;
"RTN","IBY400PO",5,0)
EN ;
"RTN","IBY400PO",6,0)
 N XPDIDTOT S XPDIDTOT=9
"RTN","IBY400PO",7,0)
 D PPS            ; 1. fire new trigger to set PPS field
"RTN","IBY400PO",8,0)
 D BP             ; 2. populate the list of valid billing provider facility types
"RTN","IBY400PO",9,0)
 D BFLD           ; 3. remove obsolete fields associated with boxes 32/33 on cms-1500
"RTN","IBY400PO",10,0)
 D BPTAX          ; 4. manually set the new billing provider taxonomy code field
"RTN","IBY400PO",11,0)
 D XREFCL         ; 5. build new x-ref in file 399 and remove existing triggers
"RTN","IBY400PO",12,0)
 D XREFRX         ; 6. build new x-ref in file 362.4
"RTN","IBY400PO",13,0)
 D RIT            ; 7. recompile input template
"RTN","IBY400PO",14,0)
 D VC             ; 8. add value codes
"RTN","IBY400PO",15,0)
 D TMOPT          ; 9. schedule option in TaskManager
"RTN","IBY400PO",16,0)
EX ;
"RTN","IBY400PO",17,0)
 Q
"RTN","IBY400PO",18,0)
 ;
"RTN","IBY400PO",19,0)
PPS ; Fire new FileMan trigger to set the new PPS field on all applicable claims
"RTN","IBY400PO",20,0)
 NEW DIK,FOUND,STOP,CNT,IBIFN
"RTN","IBY400PO",21,0)
 D BMES^XPDUTL(" STEP 1 of "_XPDIDTOT)
"RTN","IBY400PO",22,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",23,0)
 D MES^XPDUTL("Fire trigger for default claim PPS (DRG) ... ")
"RTN","IBY400PO",24,0)
 ;
"RTN","IBY400PO",25,0)
 ; try to determine if this has already been run by looking at recent inpatient claims
"RTN","IBY400PO",26,0)
 ; the "ABT" x-ref is by the .05 field, "1" being regular inpatient claims
"RTN","IBY400PO",27,0)
 S (FOUND,STOP,CNT)=0
"RTN","IBY400PO",28,0)
 S IBIFN=" " F  S IBIFN=$O(^DGCR(399,"ABT",1,IBIFN),-1) Q:'IBIFN!FOUND!STOP  D  Q:FOUND!STOP
"RTN","IBY400PO",29,0)
 . I $$FT^IBCEF(IBIFN)'=3 Q    ; it must be a UB claim
"RTN","IBY400PO",30,0)
 . S CNT=CNT+1
"RTN","IBY400PO",31,0)
 . I CNT>500 S STOP=1 Q        ; stop after looking at 500 inpatient, UB claims
"RTN","IBY400PO",32,0)
 . I +$P($G(^DGCR(399,IBIFN,"U1")),U,15) S FOUND=1 Q     ; found an example where new field# 170 exists
"RTN","IBY400PO",33,0)
 . Q
"RTN","IBY400PO",34,0)
 ;
"RTN","IBY400PO",35,0)
 I FOUND D MES^XPDUTL("Already completed previously.") G PPSX
"RTN","IBY400PO",36,0)
 ;
"RTN","IBY400PO",37,0)
 ; call FileMan to fire this new trigger
"RTN","IBY400PO",38,0)
 S DIK="^DGCR(399,"
"RTN","IBY400PO",39,0)
 S DIK(1)=".08^7"
"RTN","IBY400PO",40,0)
 D ENALL^DIK
"RTN","IBY400PO",41,0)
PPSX ;
"RTN","IBY400PO",42,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",43,0)
 D UPDATE^XPDID(1)
"RTN","IBY400PO",44,0)
 Q
"RTN","IBY400PO",45,0)
 ;
"RTN","IBY400PO",46,0)
BP ; Populate the list of billing provider facility types
"RTN","IBY400PO",47,0)
 NEW BPZ,MSG,TYPE,SITE,SUBJ,XMTO,LN
"RTN","IBY400PO",48,0)
 D BMES^XPDUTL(" STEP 2 of "_XPDIDTOT)
"RTN","IBY400PO",49,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",50,0)
 D MES^XPDUTL("Populating the list of valid billing provider facility types ...")
"RTN","IBY400PO",51,0)
 ;
"RTN","IBY400PO",52,0)
 ; This is the list of CBO-defined billing provider facility types (7-Oct-2008)
"RTN","IBY400PO",53,0)
 S BPZ("CBOC")=""           ; COMMUNITY BASED OUTPATIENT CLINIC
"RTN","IBY400PO",54,0)
 S BPZ("HCS")=""            ; HEALTH CARE SYSTEM
"RTN","IBY400PO",55,0)
 S BPZ("M&ROC")="1"         ; MEDICAL AND REGIONAL OFFFICE CENTER
"RTN","IBY400PO",56,0)
 S BPZ("OC")="1"            ; OUTPATIENT CLINIC (INDEPENDENT)
"RTN","IBY400PO",57,0)
 S BPZ("OPC")=""            ; OUT PATIENT CLINIC
"RTN","IBY400PO",58,0)
 S BPZ("PHARM")=""          ; PHARMACY
"RTN","IBY400PO",59,0)
 S BPZ("RO-OC")="1"         ; REGIONAL OFFICE - OUTPATIENT CLINIC
"RTN","IBY400PO",60,0)
 S BPZ("VAMC")="1"          ; VA MEDICAL CENTER
"RTN","IBY400PO",61,0)
 ;
"RTN","IBY400PO",62,0)
 K MSG
"RTN","IBY400PO",63,0)
 S TYPE=""
"RTN","IBY400PO",64,0)
 F  S TYPE=$O(BPZ(TYPE)) Q:TYPE=""  D
"RTN","IBY400PO",65,0)
 . N IEN,X,Y,DIC,DA,DLAYGO,DO
"RTN","IBY400PO",66,0)
 . S IEN=+$$FIND1^DIC(4.1,,"BX",TYPE,"B")    ; find single entry, exact match only
"RTN","IBY400PO",67,0)
 . I 'IEN D ERR(TYPE) Q                      ; log an error if type not found
"RTN","IBY400PO",68,0)
 . I $D(^IBE(350.9,1,20,"B",IEN)) Q          ; already in the list
"RTN","IBY400PO",69,0)
 . S X=IEN
"RTN","IBY400PO",70,0)
 . S DIC="^IBE(350.9,1,20,",DIC(0)="L",DA(1)=1,DLAYGO=350.9005
"RTN","IBY400PO",71,0)
 . I BPZ(TYPE) S DIC("DR")=".02////1"        ; file the pay-to provider flag
"RTN","IBY400PO",72,0)
 . D FILE^DICN
"RTN","IBY400PO",73,0)
 . I $P(Y,U,3)'=1 D ERR(TYPE,IEN)            ; log an error if not added
"RTN","IBY400PO",74,0)
 . Q
"RTN","IBY400PO",75,0)
 ;
"RTN","IBY400PO",76,0)
 I '$D(MSG) G BPX             ; no errors found
"RTN","IBY400PO",77,0)
 I '$$PROD^XUPROD(1) G BPX    ; not a production account
"RTN","IBY400PO",78,0)
 ;
"RTN","IBY400PO",79,0)
 S SITE=$$SITE^VASITE
"RTN","IBY400PO",80,0)
 S SUBJ="IB*2*400 post-install errors - #"_$P(SITE,U,3)_" - "_$P(SITE,U,2)
"RTN","IBY400PO",81,0)
 S SUBJ=$E(SUBJ,1,65)         ; subject must be <= 65 chars or mail will fail
"RTN","IBY400PO",82,0)
 S XMTO("Eric.Gustafson@va.gov")=""
"RTN","IBY400PO",83,0)
 S LN=$O(MSG(""),-1)
"RTN","IBY400PO",84,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBY400PO",85,0)
 S LN=LN+1,MSG(LN)="Please contact EPS and report this problem by entering a Remedy ticket"
"RTN","IBY400PO",86,0)
 S LN=LN+1,MSG(LN)="or by calling the VA Service Desk (ph. 1-888-596-4357)."
"RTN","IBY400PO",87,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBY400PO",88,0)
 S LN=LN+1,MSG(LN)="One or more billing provider facility types were NOT added successfully."
"RTN","IBY400PO",89,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBY400PO",90,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO)
"RTN","IBY400PO",91,0)
 D MES^XPDUTL(.MSG)
"RTN","IBY400PO",92,0)
BPX ;
"RTN","IBY400PO",93,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",94,0)
 D UPDATE^XPDID(2)
"RTN","IBY400PO",95,0)
 Q
"RTN","IBY400PO",96,0)
 ;
"RTN","IBY400PO",97,0)
ERR(TYPE,IEN) ; log an error in MSG array
"RTN","IBY400PO",98,0)
 N Z S Z=$O(MSG(""),-1)+1
"RTN","IBY400PO",99,0)
 S MSG(Z)="Error adding billing provider facility type "_TYPE_"."
"RTN","IBY400PO",100,0)
 I $G(IEN) S MSG(Z)=MSG(Z)_"  IEN="_IEN_"."
"RTN","IBY400PO",101,0)
ERRX ;
"RTN","IBY400PO",102,0)
 Q
"RTN","IBY400PO",103,0)
 ;
"RTN","IBY400PO",104,0)
BFLD ; remove obsolete fields in files 399 and 350.9 dealing with printing of data in boxes 32/33 on a CMS-1500 claim
"RTN","IBY400PO",105,0)
 NEW IEN,DIK,DA,PCE
"RTN","IBY400PO",106,0)
 D BMES^XPDUTL(" STEP 3 of "_XPDIDTOT)
"RTN","IBY400PO",107,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",108,0)
 D MES^XPDUTL("Removing obsolete fields for CMS-1500 Box 32/33 Data ... ")
"RTN","IBY400PO",109,0)
 I '$$VFIELD^DILFD(399,401) D MES^XPDUTL("Already completed previously.") G BFLDX
"RTN","IBY400PO",110,0)
 ;
"RTN","IBY400PO",111,0)
 ; Delete the 401 field from file 399
"RTN","IBY400PO",112,0)
 S DIK="^DD(399,",DA=401,DA(1)=399 D ^DIK
"RTN","IBY400PO",113,0)
 ;
"RTN","IBY400PO",114,0)
 ; Delete the 2.12 field from file 350.9
"RTN","IBY400PO",115,0)
 S DIK="^DD(350.9,",DA=2.12,DA(1)=350.9 D ^DIK
"RTN","IBY400PO",116,0)
 S $P(^IBE(350.9,1,2),U,12)=""   ; blank out any data
"RTN","IBY400PO",117,0)
 ;
"RTN","IBY400PO",118,0)
 ; Remove the Agent Cashier name and address data from file 350.9
"RTN","IBY400PO",119,0)
 F PCE=1:1:6,10 S $P(^IBE(350.9,1,2),U,PCE)=""
"RTN","IBY400PO",120,0)
 ;
"RTN","IBY400PO",121,0)
BFLDX ;
"RTN","IBY400PO",122,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",123,0)
 D UPDATE^XPDID(3)
"RTN","IBY400PO",124,0)
 Q
"RTN","IBY400PO",125,0)
 ;
"RTN","IBY400PO",126,0)
XREFCL ; Build a new-style x-ref in file 399 for the default taxonomy codes
"RTN","IBY400PO",127,0)
 N IBXR,VAL
"RTN","IBY400PO",128,0)
 D BMES^XPDUTL(" STEP 5 of "_XPDIDTOT)
"RTN","IBY400PO",129,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",130,0)
 D MES^XPDUTL("Constructing a new x-ref for file 399 ... ")
"RTN","IBY400PO",131,0)
 S IBXR("FILE")=399
"RTN","IBY400PO",132,0)
 S IBXR("NAME")="ABP"
"RTN","IBY400PO",133,0)
 ;
"RTN","IBY400PO",134,0)
 ; check to see if xref is already installed (don't do this part for this patch)
"RTN","IBY400PO",135,0)
 ;S VAL(1)=IBXR("FILE"),VAL(2)=IBXR("NAME")
"RTN","IBY400PO",136,0)
 ;I $$FIND1^DIC(.11,"","X",.VAL,"BB") D MES^XPDUTL("Already completed previously.") G XREFCLX
"RTN","IBY400PO",137,0)
 ;
"RTN","IBY400PO",138,0)
 S IBXR("TYPE")="MU"
"RTN","IBY400PO",139,0)
 S IBXR("USE")="A"
"RTN","IBY400PO",140,0)
 S IBXR("EXECUTION")="R"
"RTN","IBY400PO",141,0)
 S IBXR("ACTIVITY")="IR"
"RTN","IBY400PO",142,0)
 S IBXR("SHORT DESCR")="Update default taxonomy codes and billing provider IDs"
"RTN","IBY400PO",143,0)
 S IBXR("DESCR",1)="Whenever the fields in this x-ref are changed in any way (add/edit/delete)"
"RTN","IBY400PO",144,0)
 S IBXR("DESCR",2)="the billing provider and service facility for the claim may change so we"
"RTN","IBY400PO",145,0)
 S IBXR("DESCR",3)="need to recalculate the default values of the billing provider taxonomy"
"RTN","IBY400PO",146,0)
 S IBXR("DESCR",4)="code, the service facility taxonomy code, and the billing provider"
"RTN","IBY400PO",147,0)
 S IBXR("DESCR",5)="secondary IDs and Qualifiers for every payer on the claim."
"RTN","IBY400PO",148,0)
 S IBXR("DESCR",6)=" "
"RTN","IBY400PO",149,0)
 S IBXR("DESCR",7)="Please note that this x-ref will potentially update the values of 8"
"RTN","IBY400PO",150,0)
 S IBXR("DESCR",8)="fields in file 399:"
"RTN","IBY400PO",151,0)
 S IBXR("DESCR",9)=" "
"RTN","IBY400PO",152,0)
 S IBXR("DESCR",10)="399,243 - SERVICE FACILITY TAXONOMY"
"RTN","IBY400PO",153,0)
 S IBXR("DESCR",11)="399,252 - BILLING PROVIDER TAXONOMY"
"RTN","IBY400PO",154,0)
 S IBXR("DESCR",12)="399,122 - PRIMARY PROVIDER #"
"RTN","IBY400PO",155,0)
 S IBXR("DESCR",13)="399,123 - SECONDARY PROVIDER #"
"RTN","IBY400PO",156,0)
 S IBXR("DESCR",14)="399,124 - TERTIARY PROVIDER #"
"RTN","IBY400PO",157,0)
 S IBXR("DESCR",15)="399,128 - PRIMARY ID QUALIFIER"
"RTN","IBY400PO",158,0)
 S IBXR("DESCR",16)="399,129 - SECONDARY ID QUALIFIER"
"RTN","IBY400PO",159,0)
 S IBXR("DESCR",17)="399,130 - TERTIARY ID QUALIFIER"
"RTN","IBY400PO",160,0)
 S IBXR("SET")="D TAX^IBCEF79(DA)"
"RTN","IBY400PO",161,0)
 S IBXR("KILL")="D TAX^IBCEF79(DA)"
"RTN","IBY400PO",162,0)
 S IBXR("VAL",1)=.22
"RTN","IBY400PO",163,0)
 S IBXR("VAL",1,"COLLATION")="F"
"RTN","IBY400PO",164,0)
 S IBXR("VAL",2)=232
"RTN","IBY400PO",165,0)
 S IBXR("VAL",2,"COLLATION")="F"
"RTN","IBY400PO",166,0)
 S IBXR("VAL",3)=136
"RTN","IBY400PO",167,0)
 S IBXR("VAL",3,"COLLATION")="F"
"RTN","IBY400PO",168,0)
 S IBXR("VAL",4)=.19
"RTN","IBY400PO",169,0)
 S IBXR("VAL",4,"COLLATION")="F"
"RTN","IBY400PO",170,0)
 D CREIXN^DDMOD(.IBXR,"W")
"RTN","IBY400PO",171,0)
 ;
"RTN","IBY400PO",172,0)
 ; Remove 7 existing triggers from the DEFAULT DIVISION field (#.22).
"RTN","IBY400PO",173,0)
 ; These fields are included in this new style xref.
"RTN","IBY400PO",174,0)
 D DELIX^DDMOD(399,.22,1)
"RTN","IBY400PO",175,0)
 D DELIX^DDMOD(399,.22,2)
"RTN","IBY400PO",176,0)
 D DELIX^DDMOD(399,.22,3)
"RTN","IBY400PO",177,0)
 D DELIX^DDMOD(399,.22,4)
"RTN","IBY400PO",178,0)
 D DELIX^DDMOD(399,.22,5)
"RTN","IBY400PO",179,0)
 D DELIX^DDMOD(399,.22,6)
"RTN","IBY400PO",180,0)
 D DELIX^DDMOD(399,.22,8)
"RTN","IBY400PO",181,0)
 ;
"RTN","IBY400PO",182,0)
 ; Remove 1 existing trigger from the FORM TYPE field (#.19).
"RTN","IBY400PO",183,0)
 ; Trigger#4 on field .19 calls BILLPNS^IBCU(DA) which sets the same fields as this new style xref.
"RTN","IBY400PO",184,0)
 D DELIX^DDMOD(399,.19,4)
"RTN","IBY400PO",185,0)
 ;
"RTN","IBY400PO",186,0)
XREFCLX ;
"RTN","IBY400PO",187,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",188,0)
 D UPDATE^XPDID(5)
"RTN","IBY400PO",189,0)
 Q
"RTN","IBY400PO",190,0)
 ;
"RTN","IBY400PO",191,0)
XREFRX ; Build a new-style x-ref in file 362.4 for the default taxonomy codes
"RTN","IBY400PO",192,0)
 N IBXR,VAL
"RTN","IBY400PO",193,0)
 D BMES^XPDUTL(" STEP 6 of "_XPDIDTOT)
"RTN","IBY400PO",194,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",195,0)
 D MES^XPDUTL("Constructing a new x-ref for file 362.4 ... ")
"RTN","IBY400PO",196,0)
 S IBXR("FILE")=362.4
"RTN","IBY400PO",197,0)
 S IBXR("NAME")="ABP"
"RTN","IBY400PO",198,0)
 ;
"RTN","IBY400PO",199,0)
 ; check to see if xref is already installed (don't do this part for this patch)
"RTN","IBY400PO",200,0)
 ;S VAL(1)=IBXR("FILE"),VAL(2)=IBXR("NAME")
"RTN","IBY400PO",201,0)
 ;I $$FIND1^DIC(.11,"","X",.VAL,"BB") D MES^XPDUTL("Already completed previously.") G XREFRXX
"RTN","IBY400PO",202,0)
 ;
"RTN","IBY400PO",203,0)
 S IBXR("TYPE")="MU"
"RTN","IBY400PO",204,0)
 S IBXR("USE")="A"
"RTN","IBY400PO",205,0)
 S IBXR("EXECUTION")="F"
"RTN","IBY400PO",206,0)
 S IBXR("ACTIVITY")="IR"
"RTN","IBY400PO",207,0)
 S IBXR("SHORT DESCR")="Update default taxonomy codes and billing provider IDs"
"RTN","IBY400PO",208,0)
 S IBXR("DESCR",1)="When a claim is entered into this file it is considered a pharmacy claim"
"RTN","IBY400PO",209,0)
 S IBXR("DESCR",2)="and the billing provider for this claim becomes the dispensing pharmacy"
"RTN","IBY400PO",210,0)
 S IBXR("DESCR",3)="institution.  When a claim is removed from this file, it ceases to be a "
"RTN","IBY400PO",211,0)
 S IBXR("DESCR",4)="pharmacy claim and the billing provider will change with this action."
"RTN","IBY400PO",212,0)
 S IBXR("DESCR",5)=" "
"RTN","IBY400PO",213,0)
 S IBXR("DESCR",6)="This x-ref will update the billing provider and service facility default "
"RTN","IBY400PO",214,0)
 S IBXR("DESCR",7)="taxonomy codes based on a potential new billing provider and service "
"RTN","IBY400PO",215,0)
 S IBXR("DESCR",8)="facility.  It will also update the billing provider secondary IDs and "
"RTN","IBY400PO",216,0)
 S IBXR("DESCR",9)="Qualifiers for every payer on the claim."
"RTN","IBY400PO",217,0)
 S IBXR("DESCR",10)=" "
"RTN","IBY400PO",218,0)
 S IBXR("DESCR",11)="Please note that this x-ref will potentially update the values of 8 "
"RTN","IBY400PO",219,0)
 S IBXR("DESCR",12)="fields in file 399:"
"RTN","IBY400PO",220,0)
 S IBXR("DESCR",13)=" "
"RTN","IBY400PO",221,0)
 S IBXR("DESCR",14)="399,243 - SERVICE FACILITY TAXONOMY"
"RTN","IBY400PO",222,0)
 S IBXR("DESCR",15)="399,252 - BILLING PROVIDER TAXONOMY"
"RTN","IBY400PO",223,0)
 S IBXR("DESCR",16)="399,122 - PRIMARY PROVIDER #"
"RTN","IBY400PO",224,0)
 S IBXR("DESCR",17)="399,123 - SECONDARY PROVIDER #"
"RTN","IBY400PO",225,0)
 S IBXR("DESCR",18)="399,124 - TERTIARY PROVIDER #"
"RTN","IBY400PO",226,0)
 S IBXR("DESCR",19)="399,128 - PRIMARY ID QUALIFIER"
"RTN","IBY400PO",227,0)
 S IBXR("DESCR",20)="399,129 - SECONDARY ID QUALIFIER"
"RTN","IBY400PO",228,0)
 S IBXR("DESCR",21)="399,130 - TERTIARY ID QUALIFIER"
"RTN","IBY400PO",229,0)
 S IBXR("SET")="D TAX^IBCEF79(X(1))"
"RTN","IBY400PO",230,0)
 S IBXR("KILL")="D TAX^IBCEF79(X(1))"
"RTN","IBY400PO",231,0)
 S IBXR("VAL",1)=.02
"RTN","IBY400PO",232,0)
 S IBXR("VAL",1,"COLLATION")="F"
"RTN","IBY400PO",233,0)
 D CREIXN^DDMOD(.IBXR,"W")
"RTN","IBY400PO",234,0)
 ;
"RTN","IBY400PO",235,0)
XREFRXX ;
"RTN","IBY400PO",236,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",237,0)
 D UPDATE^XPDID(6)
"RTN","IBY400PO",238,0)
 Q
"RTN","IBY400PO",239,0)
 ;
"RTN","IBY400PO",240,0)
BPTAX ; manually set the new field# 252 - billing provider taxonomy code field
"RTN","IBY400PO",241,0)
 ; set for non-cancelled claims in cases of retransmission of existing claims - go back 1 year
"RTN","IBY400PO",242,0)
 N IBIFN,BPZ,BPTAX,FOUND,STOP,CNT,STEVD
"RTN","IBY400PO",243,0)
 D BMES^XPDUTL(" STEP 4 of "_XPDIDTOT)
"RTN","IBY400PO",244,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",245,0)
 D MES^XPDUTL("Setting the billing provider taxonomy code default.")
"RTN","IBY400PO",246,0)
 ;
"RTN","IBY400PO",247,0)
 ; try to determine if this has been run previously
"RTN","IBY400PO",248,0)
 S (FOUND,STOP,CNT)=0
"RTN","IBY400PO",249,0)
 S IBIFN=" " F  S IBIFN=$O(^DGCR(399,IBIFN),-1) Q:'IBIFN!FOUND!STOP  D  Q:FOUND!STOP
"RTN","IBY400PO",250,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,13)=7 Q   ; skip cancelled claims
"RTN","IBY400PO",251,0)
 . S CNT=CNT+1
"RTN","IBY400PO",252,0)
 . I CNT>500 S STOP=1 Q                    ; stop after looking thru 500 claims
"RTN","IBY400PO",253,0)
 . I +$P($G(^DGCR(399,IBIFN,"U3")),U,11) S FOUND=1 Q    ; found one!
"RTN","IBY400PO",254,0)
 . Q
"RTN","IBY400PO",255,0)
 ;
"RTN","IBY400PO",256,0)
 I FOUND D MES^XPDUTL("Already completed previously.") G BPTAXX
"RTN","IBY400PO",257,0)
 ;
"RTN","IBY400PO",258,0)
 ; It has not been done yet, so loop thru claims
"RTN","IBY400PO",259,0)
 I '$D(ZTQUEUED) D MES^XPDUTL("Each ""."" represents 10,000 claims  ")
"RTN","IBY400PO",260,0)
 S CNT=0
"RTN","IBY400PO",261,0)
 S STEVD=$$FMADD^XLFDT(DT,-367)    ; 1 year ago
"RTN","IBY400PO",262,0)
 F  S STEVD=$O(^DGCR(399,"D",STEVD)) Q:'STEVD  S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"D",STEVD,IBIFN)) Q:'IBIFN  D
"RTN","IBY400PO",263,0)
 . S CNT=CNT+1 I CNT#10000=0,'$D(ZTQUEUED) W "."
"RTN","IBY400PO",264,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,13)=7 Q      ; not for cancelled claims
"RTN","IBY400PO",265,0)
 . S BPZ=+$$B^IBCEF79(IBIFN) I 'BPZ Q         ; get the billing provider to continue
"RTN","IBY400PO",266,0)
 . S BPTAX=+$P($$TAXORG^XUSTAX(BPZ),U,2)      ; taxonomy/person class ien to file 8932.1
"RTN","IBY400PO",267,0)
 . I 'BPTAX Q
"RTN","IBY400PO",268,0)
 . S $P(^DGCR(399,IBIFN,"U3"),U,11)=BPTAX     ; set the field
"RTN","IBY400PO",269,0)
 . Q
"RTN","IBY400PO",270,0)
 D MES^XPDUTL("Total # of claims in the past year = "_$FN(CNT,","))
"RTN","IBY400PO",271,0)
 ;
"RTN","IBY400PO",272,0)
BPTAXX ;
"RTN","IBY400PO",273,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",274,0)
 D UPDATE^XPDID(4)
"RTN","IBY400PO",275,0)
 Q
"RTN","IBY400PO",276,0)
 ;
"RTN","IBY400PO",277,0)
RIT ; Recompile input templates for billing screens
"RTN","IBY400PO",278,0)
 ; Billing screen 4 is included here because of field# 158 which was modified.
"RTN","IBY400PO",279,0)
 ; There were no changes to this input template, but it has to be recompiled at the target facility
"RTN","IBY400PO",280,0)
 ; in order for the changes to become effective.
"RTN","IBY400PO",281,0)
 NEW X,Y,DMAX
"RTN","IBY400PO",282,0)
 D BMES^XPDUTL(" STEP 7 of "_XPDIDTOT)
"RTN","IBY400PO",283,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",284,0)
 D MES^XPDUTL("Recompiling Input Template for Billing Screen 4 ...")
"RTN","IBY400PO",285,0)
 S X="IBXSC4",Y=$$FIND1^DIC(.402,,"X","IB SCREEN4","B"),DMAX=8000
"RTN","IBY400PO",286,0)
 I Y D EN^DIEZ
"RTN","IBY400PO",287,0)
RITX ;
"RTN","IBY400PO",288,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",289,0)
 D UPDATE^XPDID(7)
"RTN","IBY400PO",290,0)
 Q
"RTN","IBY400PO",291,0)
 ;
"RTN","IBY400PO",292,0)
VC ; Add value codes to file 399.1
"RTN","IBY400PO",293,0)
 NEW IBCNT,VCD,VCH,DO,IBVCDB,CODE,IEN,DLAYGO,DIC,X,Y,IBVCIEN,HLPTXT,IENS,IBVCACA
"RTN","IBY400PO",294,0)
 D BMES^XPDUTL(" STEP 8 of "_XPDIDTOT)
"RTN","IBY400PO",295,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",296,0)
 D MES^XPDUTL("Adding UB-04 Value Codes ...")
"RTN","IBY400PO",297,0)
 ;
"RTN","IBY400PO",298,0)
 S IBCNT=0
"RTN","IBY400PO",299,0)
 ;
"RTN","IBY400PO",300,0)
 ; *** NOTE *** - any new value codes should also be added to routine IBCVC
"RTN","IBY400PO",301,0)
 ;
"RTN","IBY400PO",302,0)
 S VCD(80)="COVERED DAYS"
"RTN","IBY400PO",303,0)
 S VCH(80,1)="Enter the number of days covered by the primary payer"
"RTN","IBY400PO",304,0)
 S VCH(80,2)="as qualified by the payer."
"RTN","IBY400PO",305,0)
 ;
"RTN","IBY400PO",306,0)
 S VCD(81)="NON-COVERED DAYS"
"RTN","IBY400PO",307,0)
 S VCH(81,1)="Enter the number of days of care not covered by the primary payer."
"RTN","IBY400PO",308,0)
 ;
"RTN","IBY400PO",309,0)
 S VCD(82)="CO-INSURANCE DAYS"
"RTN","IBY400PO",310,0)
 S VCH(82,1)="Enter the number of inpatient Medicare days occurring after"
"RTN","IBY400PO",311,0)
 S VCH(82,2)="the 60th day and before the 91st day or inpatient SNF/Swing"
"RTN","IBY400PO",312,0)
 S VCH(82,3)="Bed days occurring after the 20th and before the 101st day"
"RTN","IBY400PO",313,0)
 S VCH(82,4)="in a single spell of illness."
"RTN","IBY400PO",314,0)
 ;
"RTN","IBY400PO",315,0)
 ; loop thru each one and add it to file 399.1
"RTN","IBY400PO",316,0)
 S CODE=""
"RTN","IBY400PO",317,0)
 F  S CODE=$O(VCD(CODE)) Q:CODE=""  D
"RTN","IBY400PO",318,0)
 . ;
"RTN","IBY400PO",319,0)
 . ; check to see if this value code is already in file 399.1
"RTN","IBY400PO",320,0)
 . S (IEN,IBVCDB)=0 F  S IEN=$O(^DGCR(399.1,"C",CODE,IEN)) Q:'IEN!IBVCDB  I $P($G(^DGCR(399.1,IEN,0)),U,11) S IBVCDB=IEN Q
"RTN","IBY400PO",321,0)
 . I IBVCDB D MES^XPDUTL("Value Code "_CODE_" ("_$P($G(^DGCR(399.1,IBVCDB,0)),U,1)_") is already on file.") Q
"RTN","IBY400PO",322,0)
 . ;
"RTN","IBY400PO",323,0)
 . ; add the value code to file 399.1
"RTN","IBY400PO",324,0)
 . S DLAYGO=399.1,DIC="^DGCR(399.1,",DIC(0)="L",X=VCD(CODE) D FILE^DICN
"RTN","IBY400PO",325,0)
 . I Y<1 D MES^XPDUTL("ERROR - Value Code "_CODE_" ("_VCD(CODE)_") was not added.") Q
"RTN","IBY400PO",326,0)
 . S IBVCIEN=+Y,IBCNT=IBCNT+1
"RTN","IBY400PO",327,0)
 . ;
"RTN","IBY400PO",328,0)
 . ; update the rest of the value code fields
"RTN","IBY400PO",329,0)
 . K HLPTXT,IBVCACA
"RTN","IBY400PO",330,0)
 . M HLPTXT=VCH(CODE)
"RTN","IBY400PO",331,0)
 . S IENS=IBVCIEN_","
"RTN","IBY400PO",332,0)
 . S IBVCACA(399.1,IENS,.02)=CODE        ; value code
"RTN","IBY400PO",333,0)
 . S IBVCACA(399.1,IENS,.18)=1           ; value code flag
"RTN","IBY400PO",334,0)
 . S IBVCACA(399.1,IENS,.19)=0           ; value code dollar amount flag
"RTN","IBY400PO",335,0)
 . S IBVCACA(399.1,IENS,1)="HLPTXT"      ; value code help text
"RTN","IBY400PO",336,0)
 . D FILE^DIE(,"IBVCACA")
"RTN","IBY400PO",337,0)
 . Q
"RTN","IBY400PO",338,0)
 ;
"RTN","IBY400PO",339,0)
VCX ;
"RTN","IBY400PO",340,0)
 D MES^XPDUTL(IBCNT_" UB-04 Value Codes added to file# 399.1")
"RTN","IBY400PO",341,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",342,0)
 D UPDATE^XPDID(8)
"RTN","IBY400PO",343,0)
 Q
"RTN","IBY400PO",344,0)
 ;
"RTN","IBY400PO",345,0)
TMOPT ; Schedule the TaskMan option to run once a month
"RTN","IBY400PO",346,0)
 ;
"RTN","IBY400PO",347,0)
 NEW IBZ,T,FST,TMERR,OPTNM,DIFROM
"RTN","IBY400PO",348,0)
 D BMES^XPDUTL(" STEP 9 of "_XPDIDTOT)
"RTN","IBY400PO",349,0)
 D MES^XPDUTL("-------------")
"RTN","IBY400PO",350,0)
 D MES^XPDUTL("Schedule option in TaskManager ...")
"RTN","IBY400PO",351,0)
 ;
"RTN","IBY400PO",352,0)
 I '$$PROD^XUPROD(1) D MES^XPDUTL("Not a production account. No TaskMan job scheduled.") G TMOPTX
"RTN","IBY400PO",353,0)
 ;
"RTN","IBY400PO",354,0)
 S OPTNM="IBCN INS BILL PROV FLAG RPT"     ; option name to be scheduled
"RTN","IBY400PO",355,0)
 D OPTSTAT^XUTMOPT(OPTNM,.IBZ)
"RTN","IBY400PO",356,0)
 S T=$G(IBZ(1))
"RTN","IBY400PO",357,0)
 I +T,$$NOW^XLFDT'>$P(T,U,2),$P(T,U,3)["1M" D MES^XPDUTL("Option is already scheduled properly. No further action taken."),TMDISP(T) G TMOPTX
"RTN","IBY400PO",358,0)
 ;
"RTN","IBY400PO",359,0)
 S FST=$$FMADD^XLFDT(DT,14)_".20"     ; first run is 2 weeks from today at 8pm
"RTN","IBY400PO",360,0)
 D RESCH^XUTMOPT(OPTNM,FST,,"1M(1@2AM)","L",.TMERR)   ; schedule it
"RTN","IBY400PO",361,0)
 I $G(TMERR)=-1 D MES^XPDUTL("Scheduling Error - Option not found!")
"RTN","IBY400PO",362,0)
 K IBZ
"RTN","IBY400PO",363,0)
 D OPTSTAT^XUTMOPT(OPTNM,.IBZ)
"RTN","IBY400PO",364,0)
 S T=$G(IBZ(1))
"RTN","IBY400PO",365,0)
 D TMDISP(T)
"RTN","IBY400PO",366,0)
 ;
"RTN","IBY400PO",367,0)
TMOPTX ;
"RTN","IBY400PO",368,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY400PO",369,0)
 D UPDATE^XPDID(9)
"RTN","IBY400PO",370,0)
 Q
"RTN","IBY400PO",371,0)
 ;
"RTN","IBY400PO",372,0)
TMDISP(T) ; display task information
"RTN","IBY400PO",373,0)
 D MES^XPDUTL("           Option: "_OPTNM)
"RTN","IBY400PO",374,0)
 D MES^XPDUTL("      Task Number: "_$P(T,U,1))
"RTN","IBY400PO",375,0)
 D MES^XPDUTL("    Queued to Run: "_$$FMTE^XLFDT($P(T,U,2),"5ZPM"))
"RTN","IBY400PO",376,0)
 D MES^XPDUTL("Rescheduling Freq: "_$P(T,U,3))
"RTN","IBY400PO",377,0)
 Q
"RTN","IBY400PO",378,0)
 ;
"RTN","IBY400PR")
0^^B89720959^n/a
"RTN","IBY400PR",1,0)
IBY400PR ;ALB/ESG - Pre-Installation for IB patch 400 ;27-Aug-2007
"RTN","IBY400PR",2,0)
 ;;2.0;INTEGRATED BILLING;**400**;21-MAR-94;Build 52
"RTN","IBY400PR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY400PR",4,0)
 ;
"RTN","IBY400PR",5,0)
 D DELLOC      ; delete local output formatter overrides
"RTN","IBY400PR",6,0)
 D DELOF       ; delete all output formatter data elements included in build
"RTN","IBY400PR",7,0)
 D CLEARINS    ; clear fields 36/4.11 & 36/.14
"RTN","IBY400PR",8,0)
 ;
"RTN","IBY400PR",9,0)
 Q
"RTN","IBY400PR",10,0)
 ;
"RTN","IBY400PR",11,0)
CLEARINS ; clear fields 4.11 and .14 in file 36
"RTN","IBY400PR",12,0)
 N DA,DIE,DIK,DR,IEN
"RTN","IBY400PR",13,0)
 S DIE="^DIC(36,",DR="4.11///@;.14///@"
"RTN","IBY400PR",14,0)
 D BMES^XPDUTL("Clearing fields 4.11 and .14 for all entries in file 36 ... ")
"RTN","IBY400PR",15,0)
 ; check if fields have already been updated
"RTN","IBY400PR",16,0)
 I $$GET1^DID(36,4.11,"","LABEL")="USE VAMC AS BILL PROV ON 1500" D MES^XPDUTL("   Already cleared - nothing to do.") Q
"RTN","IBY400PR",17,0)
 S IEN=0 F  S IEN=$O(^DIC(36,IEN)) Q:'IEN  S DA=IEN D ^DIE
"RTN","IBY400PR",18,0)
 S DIK="^DD(36,",DA=4.11,DA(1)=36 D ^DIK
"RTN","IBY400PR",19,0)
 S DIK="^DD(36,",DA=.14,DA(1)=36 D ^DIK
"RTN","IBY400PR",20,0)
 D DELIX^DDMOD(399,135,2)   ; remove the trigger from #135 (current payer) to #.19 (form type)
"RTN","IBY400PR",21,0)
 D MES^XPDUTL("   Done.")
"RTN","IBY400PR",22,0)
 Q
"RTN","IBY400PR",23,0)
 ;
"RTN","IBY400PR",24,0)
DELLOC ; archive and delete local output formatter overrides for entries included with this build
"RTN","IBY400PR",25,0)
 NEW IBY,FORM,IBX2,NI6,NI7,LI6,LI7,IBTOVZ,DIK,DA,SITE,XMTO,XMDUZ,XMSUBJ,XMBODY,LN,W,MSG,XMINSTR,PARENT,FBU,FOUND,FLD
"RTN","IBY400PR",26,0)
 S IBY="P400-LOFO"   ; patch 400 local output formatter overrides
"RTN","IBY400PR",27,0)
 KILL ^TMP($J,IBY)
"RTN","IBY400PR",28,0)
 S IBTOVZ=0
"RTN","IBY400PR",29,0)
 S ^TMP($J,IBY,1)=0
"RTN","IBY400PR",30,0)
 D BMES^XPDUTL("Analyzing/Removing local output formatter overrides ... ")
"RTN","IBY400PR",31,0)
 ;
"RTN","IBY400PR",32,0)
 S FORM=13   ; start here to skip over the normal national form types
"RTN","IBY400PR",33,0)
 F  S FORM=$O(^IBE(353,FORM)) Q:'FORM  D
"RTN","IBY400PR",34,0)
 . S IBX2=$G(^IBE(353,FORM,2))
"RTN","IBY400PR",35,0)
 . I $P(IBX2,U,2)="S" Q       ; only deal with local overrides on printed forms or transmitted forms
"RTN","IBY400PR",36,0)
 . I $P(IBX2,U,4) Q           ; don't mess with national form types (should not be any here anyway)
"RTN","IBY400PR",37,0)
 . ;
"RTN","IBY400PR",38,0)
 . ; check and remove code from local forms
"RTN","IBY400PR",39,0)
 . S PARENT=$P(IBX2,U,5)                    ; national parent form#
"RTN","IBY400PR",40,0)
 . I $F(".2.3.8.","."_PARENT_".") D
"RTN","IBY400PR",41,0)
 .. S FBU=$P($G(^IBE(353,PARENT,2)),U,8)    ; local form being used 353,2.08 field
"RTN","IBY400PR",42,0)
 .. I FBU'=FORM Q
"RTN","IBY400PR",43,0)
 .. S FOUND=0 F FLD=50:1:55 I $$GET1^DIQ(353,FORM_",",FLD)'="" S FOUND=1 Q    ; look for local code
"RTN","IBY400PR",44,0)
 .. I FOUND D FDISP(FORM)    ; local code found - display and delete the local form data
"RTN","IBY400PR",45,0)
 .. Q
"RTN","IBY400PR",46,0)
 . ;
"RTN","IBY400PR",47,0)
 . ; Check local overrides one by one
"RTN","IBY400PR",48,0)
 . S NI6=0 F  S NI6=$O(^IBA(364.6,"APAR",FORM,NI6)) Q:'NI6  D
"RTN","IBY400PR",49,0)
 .. S NI7=$O(^IBA(364.7,"B",NI6,0)) Q:'NI7
"RTN","IBY400PR",50,0)
 .. I $P(IBX2,U,2)="P",'$$INCLUDE(6,NI6),'$$INCLUDE(7,NI7) Q    ; print - not included with this build
"RTN","IBY400PR",51,0)
 .. I $P(IBX2,U,2)="T",$F(".55.57.","."_NI6_".") Q              ; edi - local overrides are only allowed for these 2
"RTN","IBY400PR",52,0)
 .. S LI6=0 F  S LI6=$O(^IBA(364.6,"APAR",FORM,NI6,LI6)) Q:'LI6  D
"RTN","IBY400PR",53,0)
 ... S LI7=0 F  S LI7=$O(^IBA(364.7,"B",LI6,LI7)) Q:'LI7  D
"RTN","IBY400PR",54,0)
 .... D DISP(LI6,LI7)    ; display/archive local override data before deletion
"RTN","IBY400PR",55,0)
 .... S DIK="^IBA(364.7,",DA=LI7 D ^DIK
"RTN","IBY400PR",56,0)
 .... Q
"RTN","IBY400PR",57,0)
 ... S DIK="^IBA(364.6,",DA=LI6 D ^DIK
"RTN","IBY400PR",58,0)
 ... Q
"RTN","IBY400PR",59,0)
 .. Q
"RTN","IBY400PR",60,0)
 . Q
"RTN","IBY400PR",61,0)
 ;
"RTN","IBY400PR",62,0)
 ; nothing found so get out
"RTN","IBY400PR",63,0)
 I '$G(^TMP($J,IBY,1)) D MES^XPDUTL("   No local overrides deleted.") G DELLOCX
"RTN","IBY400PR",64,0)
 ;
"RTN","IBY400PR",65,0)
 ; Construct the message scratch global and update data
"RTN","IBY400PR",66,0)
 K ^TMP($J,IBY,2)
"RTN","IBY400PR",67,0)
 S SITE=$$SITE^VASITE
"RTN","IBY400PR",68,0)
 S XMDUZ=DUZ
"RTN","IBY400PR",69,0)
 S XMSUBJ="IB*2*400 Override Archive - "_$P(SITE,U,3)_" - "_$P(SITE,U,2)
"RTN","IBY400PR",70,0)
 S XMSUBJ=$E(XMSUBJ,1,65)
"RTN","IBY400PR",71,0)
 S LN=0
"RTN","IBY400PR",72,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="VistA patch IB*2*400 override archive for the following site:"
"RTN","IBY400PR",73,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)=""
"RTN","IBY400PR",74,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="        Name: "_$P(SITE,U,2)
"RTN","IBY400PR",75,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="    Station#: "_$P(SITE,U,3)
"RTN","IBY400PR",76,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","IBY400PR",77,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"5ZPM")
"RTN","IBY400PR",78,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)=""
"RTN","IBY400PR",79,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="The following local output formatter overrides have been deleted."
"RTN","IBY400PR",80,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)=""
"RTN","IBY400PR",81,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="Total number of overrides deleted: "_IBTOVZ
"RTN","IBY400PR",82,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)=""
"RTN","IBY400PR",83,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)="-----------------------------------------------------------------------------------------------"
"RTN","IBY400PR",84,0)
 S LN=LN+1,^TMP($J,IBY,2,LN)=""
"RTN","IBY400PR",85,0)
 ;
"RTN","IBY400PR",86,0)
 ; loop through the "1" area and add the counts and add these lines to the "2" area
"RTN","IBY400PR",87,0)
 S W=0 F  S W=$O(^TMP($J,IBY,1,W)) Q:'W  D
"RTN","IBY400PR",88,0)
 . S MSG=$G(^TMP($J,IBY,1,W))
"RTN","IBY400PR",89,0)
 . I $E(MSG,1,8)="Removing" S MSG=$P(MSG,")",1)_" of "_IBTOVZ_"):"
"RTN","IBY400PR",90,0)
 . S LN=LN+1,^TMP($J,IBY,2,LN)=MSG
"RTN","IBY400PR",91,0)
 . Q
"RTN","IBY400PR",92,0)
 ;
"RTN","IBY400PR",93,0)
 S XMBODY=$NA(^TMP($J,IBY,2))
"RTN","IBY400PR",94,0)
 S XMTO(DUZ)=""
"RTN","IBY400PR",95,0)
 S XMTO("G.IB EDI")=""
"RTN","IBY400PR",96,0)
 S XMTO("G.PATCHES")=""
"RTN","IBY400PR",97,0)
 I $$PROD^XUPROD(1) D                  ; we only want to see production data
"RTN","IBY400PR",98,0)
 . S XMTO("Eric.Gustafson@va.gov")=""
"RTN","IBY400PR",99,0)
 . S XMTO("Yan.Gurtovoy@va.gov")=""
"RTN","IBY400PR",100,0)
 . S XMTO("Mary.Simons@va.gov")=""
"RTN","IBY400PR",101,0)
 . S XMTO("Mary.Caulfield2@va.gov")=""
"RTN","IBY400PR",102,0)
 . Q
"RTN","IBY400PR",103,0)
 ;
"RTN","IBY400PR",104,0)
 S XMINSTR("FROM")="IB*2*400 Pre-Install"
"RTN","IBY400PR",105,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR)
"RTN","IBY400PR",106,0)
 KILL ^TMP($J,IBY)
"RTN","IBY400PR",107,0)
 ;
"RTN","IBY400PR",108,0)
DELLOCX ;
"RTN","IBY400PR",109,0)
 D MES^XPDUTL("   Done.")
"RTN","IBY400PR",110,0)
 Q
"RTN","IBY400PR",111,0)
 ;
"RTN","IBY400PR",112,0)
FDISP(FORM) ; display local form code on screen and in install file
"RTN","IBY400PR",113,0)
 ; Archive and display information before killing it
"RTN","IBY400PR",114,0)
 ; FORM - local form# in file 353
"RTN","IBY400PR",115,0)
 ;
"RTN","IBY400PR",116,0)
 NEW LN,MSG,NODE,GG,FL
"RTN","IBY400PR",117,0)
 S IBTOVZ=IBTOVZ+1           ; increment total number of deleted overrides
"RTN","IBY400PR",118,0)
 ;
"RTN","IBY400PR",119,0)
 S LN=0
"RTN","IBY400PR",120,0)
 S LN=LN+1,MSG(LN)="Removing local output formatter override ("_IBTOVZ_"):"
"RTN","IBY400PR",121,0)
 S LN=LN+1,MSG(LN)="  The following nodes have been killed for this local form."
"RTN","IBY400PR",122,0)
 S LN=LN+1,MSG(LN)="  Form: "_$P($G(^IBE(353,FORM,0)),U,1)_" (ien "_FORM_")"
"RTN","IBY400PR",123,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBY400PR",124,0)
 F NODE="EXT","FPOST","FPRE","OUT","POST","PRE" I $D(^IBE(353,FORM,NODE)) D
"RTN","IBY400PR",125,0)
 . S LN=LN+1,MSG(LN)="  "_$NA(^IBE(353,FORM,NODE))_" = "_$G(^IBE(353,FORM,NODE))
"RTN","IBY400PR",126,0)
 . K ^IBE(353,FORM,NODE)
"RTN","IBY400PR",127,0)
 . Q
"RTN","IBY400PR",128,0)
 ;
"RTN","IBY400PR",129,0)
 S LN=LN+1,MSG(LN)="-----------------------------------------------------------------------------------------------"
"RTN","IBY400PR",130,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBY400PR",131,0)
 ;
"RTN","IBY400PR",132,0)
 ; update mailman message array
"RTN","IBY400PR",133,0)
 S GG=+$G(^TMP($J,IBY,1))    ; last line# used in scratch global
"RTN","IBY400PR",134,0)
 F FL=1:1:LN S GG=GG+1,^TMP($J,IBY,1,GG)=$G(MSG(FL)),^TMP($J,IBY,1)=GG
"RTN","IBY400PR",135,0)
 ;
"RTN","IBY400PR",136,0)
 D MES^XPDUTL(.MSG)          ; display on screen and save in Install file
"RTN","IBY400PR",137,0)
FDISPX ;
"RTN","IBY400PR",138,0)
 Q
"RTN","IBY400PR",139,0)
 ;
"RTN","IBY400PR",140,0)
DISP(LI6,LI7) ; display local override data on screen and in install file
"RTN","IBY400PR",141,0)
 ; This is the output formatter local override which is being deleted.  Archive and display all information.
"RTN","IBY400PR",142,0)
 ; LI6 - local ien to file 364.6
"RTN","IBY400PR",143,0)
 ; LI7 - local ien to file 364.7
"RTN","IBY400PR",144,0)
 ;
"RTN","IBY400PR",145,0)
 NEW LD6,NI6,ND6,LD70,LD71,NI7,INS,LDC,MSG,Q,LN,FL,GG
"RTN","IBY400PR",146,0)
 S LD6=$G(^IBA(364.6,LI6,0)),NI6=+$P(LD6,U,3),ND6=$G(^IBA(364.6,NI6,0))
"RTN","IBY400PR",147,0)
 S LD70=$G(^IBA(364.7,LI7,0)),LD71=$G(^IBA(364.7,LI7,1))
"RTN","IBY400PR",148,0)
 S NI7=+$O(^IBA(364.7,"B",NI6,0))
"RTN","IBY400PR",149,0)
 S INS=""
"RTN","IBY400PR",150,0)
 I +$P(LD70,U,5) S INS=$$INSCO^IBCNSC02(+$P(LD70,U,5))   ; ins co name and address
"RTN","IBY400PR",151,0)
 I INS="" S INS="All"
"RTN","IBY400PR",152,0)
 M LDC=^IBA(364.7,LI7,3)    ; 364.7 wp description
"RTN","IBY400PR",153,0)
 S IBTOVZ=IBTOVZ+1          ; increment total number of deleted overrides
"RTN","IBY400PR",154,0)
 ;
"RTN","IBY400PR",155,0)
 S LN=0
"RTN","IBY400PR",156,0)
 S LN=LN+1,MSG(LN)="Removing local output formatter override ("_IBTOVZ_"):"
"RTN","IBY400PR",157,0)
 S LN=LN+1,MSG(LN)="  "_$$EXTERNAL^DILFD(364.6,.01,"",$P(LD6,U,1))
"RTN","IBY400PR",158,0)
 ;
"RTN","IBY400PR",159,0)
 ; display different data based on print or transmit form
"RTN","IBY400PR",160,0)
 I $P(IBX2,U,2)="P" S MSG(LN)=MSG(LN)_", line "_$P(ND6,U,5)_", column "_$P(ND6,U,8)_", length="_$P(ND6,U,9)
"RTN","IBY400PR",161,0)
 I $P(IBX2,U,2)="T" S MSG(LN)=MSG(LN)_", sequence "_$P(ND6,U,4)_", piece "_$P(ND6,U,8)_", length="_$P(ND6,U,9)
"RTN","IBY400PR",162,0)
 ;
"RTN","IBY400PR",163,0)
 S LN=LN+1,MSG(LN)="  Local 364.6: "_$P(LD6,U,10)_" (ien "_LI6_")"
"RTN","IBY400PR",164,0)
 S LN=LN+1,MSG(LN)="  Nat'l 364.6: "_$P(ND6,U,10)_" (ien "_NI6_")"
"RTN","IBY400PR",165,0)
 S LN=LN+1,MSG(LN)="  Local 364.7: ien "_LI7
"RTN","IBY400PR",166,0)
 S LN=LN+1,MSG(LN)="  Nat'l 364.7: ien "_NI7
"RTN","IBY400PR",167,0)
 S LN=LN+1,MSG(LN)="         Form: "_$$EXTERNAL^DILFD(364.6,.01,"",$P(LD6,U,1))_" (ien "_$P(LD6,U,1)_")"
"RTN","IBY400PR",168,0)
 S LN=LN+1,MSG(LN)=" Data Element: "_$$EXTERNAL^DILFD(364.7,.03,"",$P(LD70,U,3))
"RTN","IBY400PR",169,0)
 S LN=LN+1,MSG(LN)=" Ins. Company: "_$E(INS,1,53)
"RTN","IBY400PR",170,0)
 I $L(INS)>53 S LN=LN+1,MSG(LN)=$J("",42)_$E(INS,54,200)
"RTN","IBY400PR",171,0)
 S LN=LN+1,MSG(LN)="    Bill Type: "_$S($P(LD70,U,6)'="":$$EXTERNAL^DILFD(364.7,.06,"",$P(LD70,U,6)),1:"Both")
"RTN","IBY400PR",172,0)
 I $P(LD6,U,11) S LN=LN+1,MSG(LN)="  Output Type: "_$$EXTERNAL^DILFD(364.6,.11,"",$P(LD6,U,11))
"RTN","IBY400PR",173,0)
 S LN=LN+1,MSG(LN)="  Format Code: "
"RTN","IBY400PR",174,0)
 I $L(LD71)<220 S MSG(LN)=MSG(LN)_LD71    ; smaller format code length
"RTN","IBY400PR",175,0)
 E  S LN=LN+1,MSG(LN)=LD71                ; big length - put it on a line by itself
"RTN","IBY400PR",176,0)
 S LN=LN+1,MSG(LN)="  Description: "_$G(LDC(1,0))
"RTN","IBY400PR",177,0)
 S Q=1 F  S Q=$O(LDC(Q)) Q:'Q  S LN=LN+1,MSG(LN)="               "_$G(LDC(Q,0))
"RTN","IBY400PR",178,0)
 S LN=LN+1,MSG(LN)="-----------------------------------------------------------------------------------------------"
"RTN","IBY400PR",179,0)
 S LN=LN+1,MSG(LN)=""
"RTN","IBY400PR",180,0)
 ;
"RTN","IBY400PR",181,0)
 ; update mailman message array
"RTN","IBY400PR",182,0)
 S GG=+$G(^TMP($J,IBY,1))    ; last line# used in scratch global
"RTN","IBY400PR",183,0)
 F FL=1:1:LN S GG=GG+1,^TMP($J,IBY,1,GG)=$G(MSG(FL)),^TMP($J,IBY,1)=GG
"RTN","IBY400PR",184,0)
 ;
"RTN","IBY400PR",185,0)
 D MES^XPDUTL(.MSG)          ; display on screen and save in Install file
"RTN","IBY400PR",186,0)
DISPX ;
"RTN","IBY400PR",187,0)
 Q
"RTN","IBY400PR",188,0)
 ;
"RTN","IBY400PR",189,0)
DELOF ; Delete included output formatter entries
"RTN","IBY400PR",190,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IBY400PR",191,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IBY400PR",192,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY400PR",193,0)
 . Q
"RTN","IBY400PR",194,0)
 ;
"RTN","IBY400PR",195,0)
 ; Also delete output formatter entries which are not going to be
"RTN","IBY400PR",196,0)
 ; re-added later.  These are non-functioning or obsolete entries
"RTN","IBY400PR",197,0)
 ; in file 364.6.
"RTN","IBY400PR",198,0)
 S DIK="^IBA(364.6,",TAG="DEL6+2",DATA=$P($T(@TAG),";;",2)
"RTN","IBY400PR",199,0)
 I DATA'="" D
"RTN","IBY400PR",200,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA(364.6,DA,0)) D ^DIK
"RTN","IBY400PR",201,0)
 . Q
"RTN","IBY400PR",202,0)
 ;
"RTN","IBY400PR",203,0)
 ; Also delete output formatter entries which are not going to be
"RTN","IBY400PR",204,0)
 ; re-added later.  These are non-functioning or obsolete entries
"RTN","IBY400PR",205,0)
 ; in file 364.7.
"RTN","IBY400PR",206,0)
 S DIK="^IBA(364.7,",TAG="DEL7+2",DATA=$P($T(@TAG),";;",2)
"RTN","IBY400PR",207,0)
 I DATA'="" D
"RTN","IBY400PR",208,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA(364.7,DA,0)) D ^DIK
"RTN","IBY400PR",209,0)
 . Q
"RTN","IBY400PR",210,0)
 ;
"RTN","IBY400PR",211,0)
DELOFX ;
"RTN","IBY400PR",212,0)
 Q
"RTN","IBY400PR",213,0)
 ;
"RTN","IBY400PR",214,0)
INCLUDE(FILE,Y) ; function to determine if output formatter entry should be
"RTN","IBY400PR",215,0)
 ; included in the build
"RTN","IBY400PR",216,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY400PR",217,0)
 ; Y=ien to file
"RTN","IBY400PR",218,0)
 ;
"RTN","IBY400PR",219,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY400PR",220,0)
 S OK=0
"RTN","IBY400PR",221,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY400PR",222,0)
INCLUDEX ;
"RTN","IBY400PR",223,0)
 Q OK
"RTN","IBY400PR",224,0)
 ;
"RTN","IBY400PR",225,0)
 ;-----------------------------------------------------------------------
"RTN","IBY400PR",226,0)
 ; 364.5 entries modified:
"RTN","IBY400PR",227,0)
 ;
"RTN","IBY400PR",228,0)
ENT5 ; output formatter entries in file 364.5 to be included
"RTN","IBY400PR",229,0)
 ;
"RTN","IBY400PR",230,0)
 ;;^85^96^195^230^
"RTN","IBY400PR",231,0)
 ;
"RTN","IBY400PR",232,0)
 ;-----------------------------------------------------------------------
"RTN","IBY400PR",233,0)
 ; 364.6 entries modified:
"RTN","IBY400PR",234,0)
 ;
"RTN","IBY400PR",235,0)
ENT6 ; output formatter entries in file 364.6 to be included
"RTN","IBY400PR",236,0)
 ;
"RTN","IBY400PR",237,0)
 ;;^45^166^174^180^193^1501^1502^1504^1505^1506^1507^1509^1513^1560^1561^1562^1563^1564^
"RTN","IBY400PR",238,0)
 ;;^1710^1724^1910^1911^1912^1913^1914^1915^1916^
"RTN","IBY400PR",239,0)
 ;;^1917^1918^1919^1920^1921^1922^1923^1924^1925^1926^1927^1928^1929^1930^1931^1932^1933^1934^1935^1936^
"RTN","IBY400PR",240,0)
 ;
"RTN","IBY400PR",241,0)
 ;
"RTN","IBY400PR",242,0)
 ;-----------------------------------------------------------------------
"RTN","IBY400PR",243,0)
 ; 364.7 entries modified:
"RTN","IBY400PR",244,0)
 ;
"RTN","IBY400PR",245,0)
ENT7 ; output formatter entries in file 364.7 to be included
"RTN","IBY400PR",246,0)
 ;
"RTN","IBY400PR",247,0)
 ;;^6^27^132^145^146^147^148^149^150^156^157^159^160^199^203^390^392^945^948^949^954^1015^1054^1055^1056^1057^1100^
"RTN","IBY400PR",248,0)
 ;;^1173^1174^1177^1178^1200^1201^1202^1204^1205^1206^1207^1209^1213^1215^1216^1217^1218^1252^1253^1254^
"RTN","IBY400PR",249,0)
 ;;^1255^1256^1257^1258^1259^1260^1261^1262^1263^1264^1266^1298^1302^1314^1315^1339^1346^1347^1348^1349^
"RTN","IBY400PR",250,0)
 ;;^1350^1351^1352^1353^1354^1355^1356^1357^1358^1359^1360^1371^1407^1408^1409^1410^1411^1412^1413^1414^
"RTN","IBY400PR",251,0)
 ;;^1415^1424^1610^1611^1612^1613^1614^1615^1616^1617^1618^1619^1620^1621^1622^1623^1624^1625^1626^1627^
"RTN","IBY400PR",252,0)
 ;;^1628^1629^1630^1631^1632^1633^1634^1635^1636^
"RTN","IBY400PR",253,0)
 ;
"RTN","IBY400PR",254,0)
 ;
"RTN","IBY400PR",255,0)
 ;-----------------------------------------------------------------------
"RTN","IBY400PR",256,0)
DEL6 ; remove output formatter entries in file 364.6 (not re-added)
"RTN","IBY400PR",257,0)
 ;
"RTN","IBY400PR",258,0)
 ;;^1510^1511^1512^1848^1849^
"RTN","IBY400PR",259,0)
 ;
"RTN","IBY400PR",260,0)
 ;-----------------------------------------------------------------------
"RTN","IBY400PR",261,0)
DEL7 ; remove output formatter entries in file 364.7 (not re-added)
"RTN","IBY400PR",262,0)
 ;
"RTN","IBY400PR",263,0)
 ;;^1210^1211^1212^1548^1549^
"RTN","IBY400PR",264,0)
 ;
"UP",350.9,350.9004,-1)
350.9^19
"UP",350.9,350.9004,0)
350.9004
"UP",350.9,350.9005,-1)
350.9^20
"UP",350.9,350.9005,0)
350.9005
"VER")
8.0^22.0
"^DD",36,36,4.07,0)
SEND LAB OR FAC IDS FOR VAMC^S^0:NO;1:YES;^4;7^Q
"^DD",36,36,4.07,.1)
 
"^DD",36,36,4.07,3)
Enter a 1 (YES) if Lab or Facility IDs should be sent for procedures performed at VAMC
"^DD",36,36,4.07,5,1,0)
36^.01^5
"^DD",36,36,4.07,21,0)
^^8^8^3090309^
"^DD",36,36,4.07,21,1,0)
This flag determines whether to send the lab/facility IDs and
"^DD",36,36,4.07,21,2,0)
facility data when services are performed at the VAMC. Some
"^DD",36,36,4.07,21,3,0)
payers will not accept the same data in both the Billing Provider
"^DD",36,36,4.07,21,4,0)
and the Service Facility loops.
"^DD",36,36,4.07,21,5,0)
 
"^DD",36,36,4.07,21,6,0)
This flag only affects electronic claims and is only valid when
"^DD",36,36,4.07,21,7,0)
one of the "Always use main VAMC as Billing Provider" fields
"^DD",36,36,4.07,21,8,0)
(4.11 or 4.12) is set to "Yes".
"^DD",36,36,4.07,"DT")
3090309
"^DD",36,36,4.11,0)
USE VAMC AS BILL PROV ON 1500^S^0:NO;1:YES;^4;11^Q
"^DD",36,36,4.11,3)
Enter a 1 (YES) if main VAMC should always be used as billing provider for CMS-1500.
"^DD",36,36,4.11,21,0)
^^5^5^3090309^
"^DD",36,36,4.11,21,1,0)
Setting this parameter to YES will cause the following to occur:
"^DD",36,36,4.11,21,2,0)
the system will no longer determine the Billing Provider based
"^DD",36,36,4.11,21,3,0)
upon the location of care; the Billing Provider on a professional
"^DD",36,36,4.11,21,4,0)
claim will be the VAMC; the Division on the claim will print/transmit
"^DD",36,36,4.11,21,5,0)
as the Service Facility.
"^DD",36,36,4.11,"DT")
3090309
"^DD",36,36,4.12,0)
USE VAMC AS BILL PROV ON UB04^S^0:NO;1:YES;^4;12^Q
"^DD",36,36,4.12,3)
Enter a 1 (YES) if main VAMC should always be used as billing provider for UB-04.
"^DD",36,36,4.12,21,0)
^^5^5^3090303^
"^DD",36,36,4.12,21,1,0)
Setting this parameter to YES will cause the following to occur:
"^DD",36,36,4.12,21,2,0)
the system will no longer determine the Billing Provider based
"^DD",36,36,4.12,21,3,0)
upon the location of care; the Billing Provider on an institutional
"^DD",36,36,4.12,21,4,0)
claim will be the VAMC; the Division on the claim will transmit
"^DD",36,36,4.12,21,5,0)
as the Service Facility.
"^DD",36,36,4.12,"DT")
3090309
"^DD",36,36,4.13,0)
USE BILL PROV VAMC ADDRESS^S^0:NO;1:YES;^4;13^Q
"^DD",36,36,4.13,3)
Enter a 1 (YES) if name and address of billing provider (VAMC) should be taken from INSTITUTION file.
"^DD",36,36,4.13,21,0)
^^6^6^3090303^
"^DD",36,36,4.13,21,1,0)
When this parameter is set to YES, the Billing Provider on a claim
"^DD",36,36,4.13,21,2,0)
will be the VAMC but the name and address will be the name and street
"^DD",36,36,4.13,21,3,0)
address from the institution file.
"^DD",36,36,4.13,21,4,0)
When this parameter is set to NO, the Billing Provider on a claim
"^DD",36,36,4.13,21,5,0)
will be the VAMC but the name and address will be the name and
"^DD",36,36,4.13,21,6,0)
address of the VAMC's Pay-to Provider.
"^DD",36,36,4.13,"DT")
3090309
"^DD",350.8,350.8,0)
FIELD^^10^7
"^DD",350.8,350.8,0,"DDA")
N
"^DD",350.8,350.8,0,"DT")
2930322
"^DD",350.8,350.8,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",350.8,350.8,0,"IX","AC",350.8,.03)

"^DD",350.8,350.8,0,"IX","B",350.8,.01)

"^DD",350.8,350.8,0,"IX","C",350.8,.03)

"^DD",350.8,350.8,0,"NM","IB ERROR")
 
"^DD",350.8,350.8,0,"VRPK")
IB
"^DD",350.8,350.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",350.8,350.8,.01,1,0)
^.1
"^DD",350.8,350.8,.01,1,1,0)
350.8^B
"^DD",350.8,350.8,.01,1,1,1)
S ^IBE(350.8,"B",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.01,1,1,2)
K ^IBE(350.8,"B",$E(X,1,30),DA)
"^DD",350.8,350.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",350.8,350.8,.01,21,0)
^^2^2^2910305^^
"^DD",350.8,350.8,.01,21,1,0)
This is a free text name of the entry.  It should be namespaced with
"^DD",350.8,350.8,.01,21,2,0)
the namespace of the package reporting the error.
"^DD",350.8,350.8,.02,0)
ERROR MESSAGE^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",350.8,350.8,.02,3)
Answer must be 3-80 characters in length.
"^DD",350.8,350.8,.02,21,0)
^^3^3^2940209^^^^
"^DD",350.8,350.8,.02,21,1,0)
This is the text of the message as it will be displayed to a user or
"^DD",350.8,350.8,.02,21,2,0)
posted in a bulletin.  It should be as meaningful as possible to the
"^DD",350.8,350.8,.02,21,3,0)
person seeing the message.
"^DD",350.8,350.8,.03,0)
ERROR CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<1) X
"^DD",350.8,350.8,.03,1,0)
^.1
"^DD",350.8,350.8,.03,1,1,0)
350.8^AC
"^DD",350.8,350.8,.03,1,1,1)
S ^IBE(350.8,"AC",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,1,2)
K ^IBE(350.8,"AC",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,1,2,0)
350.8^C
"^DD",350.8,350.8,.03,1,2,1)
S ^IBE(350.8,"C",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,2,2)
K ^IBE(350.8,"C",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,3)
Answer must be 1-9 characters in length.
"^DD",350.8,350.8,.03,21,0)
^^9^9^2920219^^^^
"^DD",350.8,350.8,.03,21,1,0)
This is the error code that will be passed to or determined by
"^DD",350.8,350.8,.03,21,2,0)
Integrated Billing.  The format for the Error Code should be
"^DD",350.8,350.8,.03,21,3,0)
nnxxx, where nn is the reporting package namespace and xxx are numeric
"^DD",350.8,350.8,.03,21,4,0)
values.
"^DD",350.8,350.8,.03,21,5,0)
 
"^DD",350.8,350.8,.03,21,6,0)
This is the error code that will be passed as the second piece of
"^DD",350.8,350.8,.03,21,7,0)
the variable Y to IB when +Y=-1.  More than one error code can be
"^DD",350.8,350.8,.03,21,8,0)
placed in the second ^ piece of Y delimited by semi-colons.  Applications
"^DD",350.8,350.8,.03,21,9,0)
may call ^IBAERR to display the error message(s).
"^DD",350.8,350.8,.03,"DT")
2920219
"^DD",350.8,350.8,.04,0)
PACKAGE REPORTING ERROR^S^1:INTEGRATED BILLING;2:ACCOUNTS RECEIVABLE;3:PHARMACY;^0;4^Q
"^DD",350.8,350.8,.04,21,0)
^^2^2^2920415^^^
"^DD",350.8,350.8,.04,21,1,0)
This is the package that requested this entry in this file and will
"^DD",350.8,350.8,.04,21,2,0)
report it to IB as an error if the conditions are detected.
"^DD",350.8,350.8,.05,0)
ERROR ACTION^S^1:DISPLAY MESSAGE;2:SEND BULLETIN;3:EDIT FILE;^0;5^Q
"^DD",350.8,350.8,.05,21,0)
^^6^6^2910227^
"^DD",350.8,350.8,.05,21,1,0)
This is the type of action that should be taken when this error is
"^DD",350.8,350.8,.05,21,2,0)
reported to IB.  If action other than displaying a message is indicated
"^DD",350.8,350.8,.05,21,3,0)
then the MUMPS code in the ERROR ACTION field will be executed.
"^DD",350.8,350.8,.05,21,4,0)
 
"^DD",350.8,350.8,.05,21,5,0)
Currently only display actions are implemented.  Please contact the 
"^DD",350.8,350.8,.05,21,6,0)
developing ISC if other action types are desired.
"^DD",350.8,350.8,.06,0)
CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
"^DD",350.8,350.8,.06,21,0)
^^1^1^2940209^
"^DD",350.8,350.8,.06,21,1,0)
This is the type of alert that should be sent when this error occurs.
"^DD",350.8,350.8,.06,"DT")
2930322
"^DD",350.8,350.8,10,0)
EXECUTABLE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",350.8,350.8,10,3)
This is Standard MUMPS code.
"^DD",350.8,350.8,10,21,0)
^^2^2^2910227^
"^DD",350.8,350.8,10,21,1,0)
This is the MUMPS code that will be executed if an error is reported
"^DD",350.8,350.8,10,21,2,0)
with an ERROR ACTION of other than to display a message.
"^DD",350.9,350.9,2.01,0)
*AGENT CASHIER MAIL SYMBOL^F^^2;1^K:$L(X)>25!($L(X)<1) X
"^DD",350.9,350.9,2.01,3)
Enter the mail routing symbol for the agent cashier.  Answer must be 1-25 characters in length.
"^DD",350.9,350.9,2.01,21,0)
^^5^5^3081110^
"^DD",350.9,350.9,2.01,21,1,0)
This is the facility mail routing symbol for the Agent Cashier.  This
"^DD",350.9,350.9,2.01,21,2,0)
may begin with 04 (for Fiscal Service) at most facilities.
"^DD",350.9,350.9,2.01,21,3,0)
 
"^DD",350.9,350.9,2.01,21,4,0)
This field is inactive with IB patch 400.  The information in the
"^DD",350.9,350.9,2.01,21,5,0)
PAY-TO PROVIDERS subfile (#350.9004) has replaced this field.
"^DD",350.9,350.9,2.01,"DT")
3081110
"^DD",350.9,350.9,2.02,0)
*AGENT CASHIER STREET ADDRESS^F^^2;2^K:$L(X)>25!($L(X)<3) X
"^DD",350.9,350.9,2.02,3)
Enter the street address for the Agent Cashier.  Aswer must be 3-25 characters in length.
"^DD",350.9,350.9,2.02,21,0)
^^5^5^3081110^
"^DD",350.9,350.9,2.02,21,1,0)
This is the street address that checks should be mailed to.  This will
"^DD",350.9,350.9,2.02,21,2,0)
appear on the on all claim forms as the billing address.
"^DD",350.9,350.9,2.02,21,3,0)
 
"^DD",350.9,350.9,2.02,21,4,0)
This field is inactive with IB patch 400.  The information in the
"^DD",350.9,350.9,2.02,21,5,0)
PAY-TO PROVIDERS subfile (#350.9004) has replaced this field.
"^DD",350.9,350.9,2.02,"DT")
3081110
"^DD",350.9,350.9,2.03,0)
*AGENT CASHIER CITY^F^^2;3^K:$L(X)>15!($L(X)<1) X
"^DD",350.9,350.9,2.03,3)
Enter the City for the Agent Cashier.  Answer must be 1-15 characters in length.
"^DD",350.9,350.9,2.03,21,0)
^^5^5^3081110^
"^DD",350.9,350.9,2.03,21,1,0)
This is the City for the Agent Cashier.  This will be part of the address
"^DD",350.9,350.9,2.03,21,2,0)
that Checks are mailed to and will appear on the claim forms.
"^DD",350.9,350.9,2.03,21,3,0)
 
"^DD",350.9,350.9,2.03,21,4,0)
This field is inactive with IB patch 400.  The information in the
"^DD",350.9,350.9,2.03,21,5,0)
PAY-TO PROVIDERS subfile (#350.9004) has replaced this field.
"^DD",350.9,350.9,2.03,"DT")
3081110
"^DD",350.9,350.9,2.04,0)
*AGENT CASHIER STATE^P5'^DIC(5,^2;4^Q
"^DD",350.9,350.9,2.04,3)
Enter the state for the Agent Cashier.
"^DD",350.9,350.9,2.04,21,0)
^^5^5^3081110^
"^DD",350.9,350.9,2.04,21,1,0)
This is the state for the Agent Cashier.  This will be the State part
"^DD",350.9,350.9,2.04,21,2,0)
of the address that checks are mailed to as it appears on the claim forms.
"^DD",350.9,350.9,2.04,21,3,0)
 
"^DD",350.9,350.9,2.04,21,4,0)
This field is inactive with IB patch 400.  The information in the
"^DD",350.9,350.9,2.04,21,5,0)
PAY-TO PROVIDERS subfile (#350.9004) has replaced this field.
"^DD",350.9,350.9,2.04,"DT")
3081110
"^DD",350.9,350.9,2.05,0)
*AGENT CASHIER ZIP CODE^FX^^2;5^S:$E(X,6)="-" X=$TR(X,"-") K:$L(X)>9!($L(X)<5)!'(X?5N!(X?9N)) X
"^DD",350.9,350.9,2.05,3)
Answer must be 5-9 characters in length.
"^DD",350.9,350.9,2.05,21,0)
^^5^5^3081110^
"^DD",350.9,350.9,2.05,21,1,0)
Enter the zip code for the Agent Cashier.  This will be the zip code that
"^DD",350.9,350.9,2.05,21,2,0)
checks should be mailed to and appears on the claims forms.
"^DD",350.9,350.9,2.05,21,3,0)
 
"^DD",350.9,350.9,2.05,21,4,0)
This field is inactive with IB patch 400.  The information in the
"^DD",350.9,350.9,2.05,21,5,0)
PAY-TO PROVIDERS subfile (#350.9004) has replaced this field.
"^DD",350.9,350.9,2.05,"DT")
3081110
"^DD",350.9,350.9,2.06,0)
*AGENT CASHIER PHONE NUMBER^F^^2;6^K:$L(X)>25!($L(X)<4) X
"^DD",350.9,350.9,2.06,3)
Answer must be 4-25 characters in length.
"^DD",350.9,350.9,2.06,21,0)
^^4^4^3081110^
"^DD",350.9,350.9,2.06,21,1,0)
This is the phone number for the agent cashier.
"^DD",350.9,350.9,2.06,21,2,0)
 
"^DD",350.9,350.9,2.06,21,3,0)
This field is inactive with IB patch 400.  The information in the
"^DD",350.9,350.9,2.06,21,4,0)
PAY-TO PROVIDERS subfile (#350.9004) has replaced this field.
"^DD",350.9,350.9,2.06,"DT")
3081110
"^DD",350.9,350.9,2.1,0)
*FACILITY NAME FOR BILLING^RF^^2;10^K:$L(X)>18!($L(X)<1)!'($TR(X," ")?.A) X
"^DD",350.9,350.9,2.1,3)
Enter your Facility Name for Billing.  Answer must be 1-18 alpha characters in length.
"^DD",350.9,350.9,2.1,21,0)
^^5^5^3081110^
"^DD",350.9,350.9,2.1,21,1,0)
This is the Facility Name for Billing that will print on the first line of
"^DD",350.9,350.9,2.1,21,2,0)
the UB-04 form locator 2 and in box 33 of the CMS-1500.
"^DD",350.9,350.9,2.1,21,3,0)
 
"^DD",350.9,350.9,2.1,21,4,0)
This field is inactive with IB patch 400.  The information in the
"^DD",350.9,350.9,2.1,21,5,0)
PAY-TO PROVIDERS subfile (#350.9004) has replaced this field.
"^DD",350.9,350.9,2.1,"DT")
3081110
"^DD",350.9,350.9,11.03,0)
DEFAULT PAY-TO PROVIDER^NJ4,0^^11;3^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",350.9,350.9,11.03,3)
Type a number between 1 and 9999, 0 Decimal Digits.
"^DD",350.9,350.9,11.03,21,0)
^^4^4^3081114^
"^DD",350.9,350.9,11.03,21,1,0)
This field is the internal entry number to the 350.9004 pay-to
"^DD",350.9,350.9,11.03,21,2,0)
provider sub-file.  It should not be edited by FileMan directly.
"^DD",350.9,350.9,11.03,21,3,0)
It is set by the Pay-To provider maintenance application in the IB
"^DD",350.9,350.9,11.03,21,4,0)
Site Parameters edit option.
"^DD",350.9,350.9,11.03,"DT")
3081114
"^DD",350.9,350.9,19,0)
PAY-TO PROVIDERS^350.9004P^^19;0
"^DD",350.9,350.9,19,21,0)
^^2^2^3081112^
"^DD",350.9,350.9,19,21,1,0)
This multiple contains the list of Pay-To Providers for this VistA
"^DD",350.9,350.9,19,21,2,0)
database.
"^DD",350.9,350.9,20,0)
BILLING PROVIDER FAC TYPES^350.9005P^^20;0
"^DD",350.9,350.9,20,21,0)
^^3^3^3081112^
"^DD",350.9,350.9,20,21,1,0)
This multiple field contains a list of the valid Billing Provider
"^DD",350.9,350.9,20,21,2,0)
facility types and also whether or not a facility type may also be a 
"^DD",350.9,350.9,20,21,3,0)
Pay-To Provider.
"^DD",350.9,350.9004,0)
PAY-TO PROVIDERS SUB-FIELD^^1.05^10
"^DD",350.9,350.9004,0,"DT")
3081114
"^DD",350.9,350.9004,0,"IX","B",350.9004,.01)

"^DD",350.9,350.9004,0,"NM","PAY-TO PROVIDERS")

"^DD",350.9,350.9004,0,"UP")
350.9
"^DD",350.9,350.9004,.01,0)
FACILITY^M*P4'^DIC(4,^0;1^S DIC("S")="I $$SCRN4^IBJPS4(Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",350.9,350.9004,.01,1,0)
^.1
"^DD",350.9,350.9004,.01,1,1,0)
350.9004^B
"^DD",350.9,350.9004,.01,1,1,1)
S ^IBE(350.9,DA(1),19,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.9004,.01,1,1,2)
K ^IBE(350.9,DA(1),19,"B",$E(X,1,30),DA)
"^DD",350.9,350.9004,.01,3)
Please choose the Pay-To Provider from the Institution file.
"^DD",350.9,350.9004,.01,12)
Screen out inactive, not national, and pharmacy entries
"^DD",350.9,350.9004,.01,12.1)
S DIC("S")="I $$SCRN4^IBJPS4(Y)"
"^DD",350.9,350.9004,.01,21,0)
^^6^6^3081112^
"^DD",350.9,350.9004,.01,21,1,0)
Enter a Pay-to Provider.  Usually, a Pay-to Provider is a medical
"^DD",350.9,350.9004,.01,21,2,0)
center (Example VAMC, M&ROC, etc.).  If you enter only one Pay-to
"^DD",350.9,350.9004,.01,21,3,0)
Provider, it will be the default Pay-to Provider for all claims and
"^DD",350.9,350.9004,.01,21,4,0)
you do not need to associate divisions with the default.  Multiple
"^DD",350.9,350.9004,.01,21,5,0)
Pay-to Providers must be associated with the divisions to which they
"^DD",350.9,350.9004,.01,21,6,0)
apply.
"^DD",350.9,350.9004,.01,"DT")
3081112
"^DD",350.9,350.9004,.02,0)
NAME^RF^^0;2^K:$L(X)>35!($L(X)<1) X
"^DD",350.9,350.9004,.02,.1)
Pay-to Provider Name
"^DD",350.9,350.9004,.02,3)
Answer must be 1-35 characters in length.
"^DD",350.9,350.9004,.02,21,0)
^^2^2^3081114^
"^DD",350.9,350.9004,.02,21,1,0)
You may modify the Pay-to Provider Name for use on electronic or
"^DD",350.9,350.9004,.02,21,2,0)
printed claims.
"^DD",350.9,350.9004,.02,23,0)
^^1^1^3081114^
"^DD",350.9,350.9004,.02,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.9004,.02,"DT")
3081114
"^DD",350.9,350.9004,.03,0)
FEDERAL TAX NUMBER^F^^0;3^K:$L(X)>10!($L(X)<10)!'(X?2N1"-"7N) X
"^DD",350.9,350.9004,.03,.1)
Pay-to Provider Federal Tax ID Number
"^DD",350.9,350.9004,.03,3)
Answer must be 10 characters in length.
"^DD",350.9,350.9004,.03,21,0)
^^4^4^3081114^
"^DD",350.9,350.9004,.03,21,1,0)
Enter the Federal Tax ID for the Pay-to Provider.
"^DD",350.9,350.9004,.03,21,2,0)
Make sure you enter the Tax ID Number for the Pay-to Provider which
"^DD",350.9,350.9004,.03,21,3,0)
may be different from your site's Tax ID.  Enter 10 digits in the
"^DD",350.9,350.9004,.03,21,4,0)
format NN-NNNNNNN.
"^DD",350.9,350.9004,.03,23,0)
^^3^3^3081114^
"^DD",350.9,350.9004,.03,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field if 
"^DD",350.9,350.9004,.03,23,2,0)
the .01 field is the same institution as defined in the IB site 
"^DD",350.9,350.9004,.03,23,3,0)
parameters field 350.9,.02.
"^DD",350.9,350.9004,.03,"DT")
3081114
"^DD",350.9,350.9004,.04,0)
TELEPHONE NUMBER^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",350.9,350.9004,.04,.1)
Pay-to Provider Phone Number
"^DD",350.9,350.9004,.04,3)
Answer must be 1-30 characters in length.
"^DD",350.9,350.9004,.04,21,0)
^^3^3^3081112^
"^DD",350.9,350.9004,.04,21,1,0)
Enter the phone number to be used on electronic or printed claims.
"^DD",350.9,350.9004,.04,21,2,0)
This is the number you would want a payer to use to contact the site
"^DD",350.9,350.9004,.04,21,3,0)
about a claim.
"^DD",350.9,350.9004,.04,"DT")
3081114
"^DD",350.9,350.9004,.05,0)
PARENT PAY-TO PROVIDER^NJ4,0^^0;5^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",350.9,350.9004,.05,3)
Type a number between 1 and 9999, 0 Decimal Digits.
"^DD",350.9,350.9004,.05,21,0)
^^14^14^3081114^
"^DD",350.9,350.9004,.05,21,1,0)
This field determines if this entry in the sub-file is a Pay-to 
"^DD",350.9,350.9004,.05,21,2,0)
provider institution or if it is a Division being linked to the 
"^DD",350.9,350.9004,.05,21,3,0)
parent Pay-to Provider institution - another sub-file entry.
"^DD",350.9,350.9004,.05,21,4,0)
 
"^DD",350.9,350.9004,.05,21,5,0)
If this field is defined, then it holds the IEN in this sub-file 
"^DD",350.9,350.9004,.05,21,6,0)
which is the parent Pay-to Provider institution for this specific
"^DD",350.9,350.9004,.05,21,7,0)
division.
"^DD",350.9,350.9004,.05,21,8,0)
 
"^DD",350.9,350.9004,.05,21,9,0)
If this field is nil, then this means that this sub-file entry is 
"^DD",350.9,350.9004,.05,21,10,0)
the parent Pay-to Provider Institution.
"^DD",350.9,350.9004,.05,21,11,0)
 
"^DD",350.9,350.9004,.05,21,12,0)
This field should not be set via FileMan.  The application in the
"^DD",350.9,350.9004,.05,21,13,0)
IB site parameter edit option will set this field appropriately
"^DD",350.9,350.9004,.05,21,14,0)
based on user input.
"^DD",350.9,350.9004,.05,"DT")
3081114
"^DD",350.9,350.9004,1.01,0)
STREET ADDRESS 1^F^^1;1^K:$L(X)>55!($L(X)<1) X
"^DD",350.9,350.9004,1.01,.1)
Pay-to Provider Address Line 1
"^DD",350.9,350.9004,1.01,3)
Answer must be 1-55 characters in length.
"^DD",350.9,350.9004,1.01,21,0)
^^2^2^3081114^
"^DD",350.9,350.9004,1.01,21,1,0)
You may modify the Pay-to Provider Address for use on electronic or
"^DD",350.9,350.9004,1.01,21,2,0)
printed claims.  You may enter a P.O. Box.
"^DD",350.9,350.9004,1.01,23,0)
^^1^1^3081114^
"^DD",350.9,350.9004,1.01,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.9004,1.01,"DT")
3081114
"^DD",350.9,350.9004,1.02,0)
STREET ADDRESS 2^F^^1;2^K:$L(X)>55!($L(X)<1) X
"^DD",350.9,350.9004,1.02,.1)
Pay-to Provider Address Line 2
"^DD",350.9,350.9004,1.02,3)
Answer must be 1-55 characters in length.
"^DD",350.9,350.9004,1.02,21,0)
^^1^1^3081114^
"^DD",350.9,350.9004,1.02,21,1,0)
Enter additional Address information if needed.
"^DD",350.9,350.9004,1.02,23,0)
^^1^1^3081114^
"^DD",350.9,350.9004,1.02,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.9004,1.02,"DT")
3081114
"^DD",350.9,350.9004,1.03,0)
CITY^F^^1;3^K:$L(X)>40!($L(X)<2) X
"^DD",350.9,350.9004,1.03,.1)
Pay-to Provider City
"^DD",350.9,350.9004,1.03,3)
Answer must be 2-40 characters in length.
"^DD",350.9,350.9004,1.03,21,0)
^^2^2^3081112^
"^DD",350.9,350.9004,1.03,21,1,0)
You may modify the Pay-to Provider Address for use on electronic or
"^DD",350.9,350.9004,1.03,21,2,0)
printed claims.
"^DD",350.9,350.9004,1.03,23,0)
^^1^1^3081114^
"^DD",350.9,350.9004,1.03,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.9004,1.03,"DT")
3081114
"^DD",350.9,350.9004,1.04,0)
STATE^P5'^DIC(5,^1;4^Q
"^DD",350.9,350.9004,1.04,.1)
Pay-to Provider State
"^DD",350.9,350.9004,1.04,3)
Enter the Pay-To Provider state.
"^DD",350.9,350.9004,1.04,21,0)
^^2^2^3081112^
"^DD",350.9,350.9004,1.04,21,1,0)
You may modify the Pay-to Provider Address for use on electronic or
"^DD",350.9,350.9004,1.04,21,2,0)
printed claims.
"^DD",350.9,350.9004,1.04,23,0)
^^1^1^3081114^
"^DD",350.9,350.9004,1.04,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.9004,1.04,"DT")
3081114
"^DD",350.9,350.9004,1.05,0)
ZIP^F^^1;5^K:$L(X)>15!($L(X)<3) X
"^DD",350.9,350.9004,1.05,.1)
Pay-to Provider Zip Code
"^DD",350.9,350.9004,1.05,3)
Answer must be 3-15 characters in length.
"^DD",350.9,350.9004,1.05,21,0)
^^2^2^3081112^
"^DD",350.9,350.9004,1.05,21,1,0)
You may modify the Pay-to Provider Address for use on electronic or
"^DD",350.9,350.9004,1.05,21,2,0)
printed claims.
"^DD",350.9,350.9004,1.05,23,0)
^^1^1^3081114^
"^DD",350.9,350.9004,1.05,23,1,0)
This field is initially set by the "AC" x-ref of the .01 field.
"^DD",350.9,350.9004,1.05,"DT")
3081114
"^DD",350.9,350.9005,0)
BILLING PROVIDER FAC TYPES SUB-FIELD^^.02^2
"^DD",350.9,350.9005,0,"DT")
3081112
"^DD",350.9,350.9005,0,"IX","B",350.9005,.01)

"^DD",350.9,350.9005,0,"NM","BILLING PROVIDER FAC TYPES")

"^DD",350.9,350.9005,0,"UP")
350.9
"^DD",350.9,350.9005,.01,0)
BILLING PROVIDER FAC TYPES^M*P4.1'^DIC(4.1,^0;1^S DIC("S")="I $P($G(^(0)),U,4)=""N""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",350.9,350.9005,.01,1,0)
^.1
"^DD",350.9,350.9005,.01,1,1,0)
350.9005^B
"^DD",350.9,350.9005,.01,1,1,1)
S ^IBE(350.9,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.9005,.01,1,1,2)
K ^IBE(350.9,DA(1),20,"B",$E(X,1,30),DA)
"^DD",350.9,350.9005,.01,3)
Enter a Billing Provider Facility Type
"^DD",350.9,350.9005,.01,12)
Only national facility types may be selected.
"^DD",350.9,350.9005,.01,12.1)
S DIC("S")="I $P($G(^(0)),U,4)=""N"""
"^DD",350.9,350.9005,.01,21,0)
^^4^4^3081112^
"^DD",350.9,350.9005,.01,21,1,0)
This field is a pointer to the Kernel Facility Type file (file# 4.1).
"^DD",350.9,350.9005,.01,21,2,0)
It is a multiple so the entries in this sub-file comprise the list of
"^DD",350.9,350.9005,.01,21,3,0)
valid Billing Provider facility types.  Only national facility types
"^DD",350.9,350.9005,.01,21,4,0)
may be selected for this list.
"^DD",350.9,350.9005,.01,"DT")
3081112
"^DD",350.9,350.9005,.02,0)
PAY-TO PROVIDER TYPE?^S^1:YES;0:NO;^0;2^Q
"^DD",350.9,350.9005,.02,3)
Enter YES if this facility type can be a Pay-to Provider.
"^DD",350.9,350.9005,.02,21,0)
^^3^3^3081112^
"^DD",350.9,350.9005,.02,21,1,0)
If this facility type may also be a possible Pay-to Provider, then
"^DD",350.9,350.9005,.02,21,2,0)
enter YES for this field.  The Pay-to Provider is the organization
"^DD",350.9,350.9005,.02,21,3,0)
to which payers send the payment.
"^DD",350.9,350.9005,.02,"DT")
3081112
"^DD",362.3,362.3,.01,0)
DIAGNOSIS^R*P80'X^ICD9(^0;1^S ICDVDT=$$BDATE^IBACSV(+$P($G(^IBA(362.3,+$G(DA),0)),U,2)),DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))=1" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",362.3,362.3,.01,1,0)
^.1^^-1
"^DD",362.3,362.3,.01,1,1,0)
362.3^B
"^DD",362.3,362.3,.01,1,1,1)
S ^IBA(362.3,"B",$E(X,1,30),DA)=""
"^DD",362.3,362.3,.01,1,1,2)
K ^IBA(362.3,"B",$E(X,1,30),DA)
"^DD",362.3,362.3,.01,1,2,0)
362.3^AIFN^MUMPS
"^DD",362.3,362.3,.01,1,2,1)
S:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)=""
"^DD",362.3,362.3,.01,1,2,2)
K:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)
"^DD",362.3,362.3,.01,1,2,"%D",0)
^^2^2^2940214^^^^
"^DD",362.3,362.3,.01,1,2,"%D",1,0)
Special x-ref set up specifically to provide a regular x-ref of a bill and
"^DD",362.3,362.3,.01,1,2,"%D",2,0)
all it's diagnoses for easy look-up.
"^DD",362.3,362.3,.01,1,2,"DT")
2931117
"^DD",362.3,362.3,.01,3)
Enter a diagnosis for this bill.  Duplicates are not allowed.
"^DD",362.3,362.3,.01,4)
D HELP^IBCSC4D
"^DD",362.3,362.3,.01,12)
Only active diagnosis, no duplicates for a bill, and bill must not be authorized or cancelled.
"^DD",362.3,362.3,.01,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))=1"
"^DD",362.3,362.3,.01,21,0)
^^1^1^2960530^^^^
"^DD",362.3,362.3,.01,21,1,0)
Enter an active diagnosis for this bill.
"^DD",362.3,362.3,.01,23,0)
^^1^1^2960530^^^^
"^DD",362.3,362.3,.01,23,1,0)
All diagnosis for a bill are stored here, beginning with IB v2.0.
"^DD",362.3,362.3,.01,"DT")
3081013
"^DD",362.3,362.3,.02,0)
BILL NUMBER^R*P399'X^DGCR(399,^0;2^S DIC("S")="I $P(^(0),U,13)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",362.3,362.3,.02,1,0)
^.1^^-1
"^DD",362.3,362.3,.02,1,1,0)
362.3^AIFN1^MUMPS
"^DD",362.3,362.3,.02,1,1,1)
S ^IBA(362.3,"AIFN"_X,+^IBA(362.3,DA,0),DA)=""
"^DD",362.3,362.3,.02,1,1,2)
K ^IBA(362.3,"AIFN"_X,+^IBA(362.3,DA,0),DA)
"^DD",362.3,362.3,.02,1,1,"%D",0)
^^2^2^2940214^^^
"^DD",362.3,362.3,.02,1,1,"%D",1,0)
Special x-ref set up specifically to provide a regular x-ref of a bill and
"^DD",362.3,362.3,.02,1,1,"%D",2,0)
all it's diagnoses for easy look-up.
"^DD",362.3,362.3,.02,1,1,"DT")
2931117
"^DD",362.3,362.3,.02,1,2,0)
362.3^AO^MUMPS
"^DD",362.3,362.3,.02,1,2,1)
S:+$P(^IBA(362.3,DA,0),U,3) ^IBA(362.3,"AO",+X,+$P(^(0),U,3),DA)=""
"^DD",362.3,362.3,.02,1,2,2)
K:+$P(^IBA(362.3,DA,0),U,3) ^IBA(362.3,"AO",+X,+$P(^(0),U,3),DA)
"^DD",362.3,362.3,.02,1,2,"%D",0)
^^1^1^2931117^
"^DD",362.3,362.3,.02,1,2,"%D",1,0)
Print order by bill, used to prevent duplicate print orders for a bill.
"^DD",362.3,362.3,.02,1,2,"DT")
2931117
"^DD",362.3,362.3,.02,1,3,0)
^^TRIGGER^362.3^.03
"^DD",362.3,362.3,.02,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(362.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^IBA(362.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$ORDNXT^IBCU1(+X) X ^DD(362.3,.02,1,3,1.4)
"^DD",362.3,362.3,.02,1,3,1.4)
S DIH=$S($D(^IBA(362.3,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=362.3,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",362.3,362.3,.02,1,3,2)
Q
"^DD",362.3,362.3,.02,1,3,"%D",0)
^^1^1^2940112^
"^DD",362.3,362.3,.02,1,3,"%D",1,0)
Sets default value for print order.
"^DD",362.3,362.3,.02,1,3,"CREATE CONDITION")
ORDER=""
"^DD",362.3,362.3,.02,1,3,"CREATE VALUE")
S X=$$ORDNXT^IBCU1(+X)
"^DD",362.3,362.3,.02,1,3,"DELETE VALUE")
NO EFFECT
"^DD",362.3,362.3,.02,1,3,"DT")
2940112
"^DD",362.3,362.3,.02,1,3,"FIELD")
ORDER
"^DD",362.3,362.3,.02,3)
The bill that this diagnosis is related to.
"^DD",362.3,362.3,.02,12)
Diagnosis can only be added to open bills.
"^DD",362.3,362.3,.02,12.1)
S DIC("S")="I $P(^(0),U,13)=1"
"^DD",362.3,362.3,.02,"DT")
3081013
"^DD",362.3,362.3,.03,0)
ORDER^NJ3,0X^^0;3^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N)!($$DXBSTAT^IBCU1(DA)'=1)!($$ORDDUP^IBCU1(+X,DA)) X
"^DD",362.3,362.3,.03,1,0)
^.1
"^DD",362.3,362.3,.03,1,1,0)
362.3^AO1^MUMPS
"^DD",362.3,362.3,.03,1,1,1)
S:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AO",+$P(^(0),U,2),+X,DA)=""
"^DD",362.3,362.3,.03,1,1,2)
K:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AO",+$P(^(0),U,2),+X,DA)
"^DD",362.3,362.3,.03,1,1,"%D",0)
^^1^1^2931117^
"^DD",362.3,362.3,.03,1,1,"%D",1,0)
Print order by bill, used to prevent duplicate print orders for a bill.
"^DD",362.3,362.3,.03,1,1,"DT")
2931117
"^DD",362.3,362.3,.03,1,2,0)
^^TRIGGER^399^215
"^DD",362.3,362.3,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$FIRSTDX^IBCSC4D(DA) I X S X=DIV X ^DD(362.3,.03,1,2,89.2) S X=$S('$D(^ICD9(+$P(Y(101),U,1),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) S DIU=X K Y X ^DD(362.3,.03,1,2,1.1) X ^DD(362.3,.03,1,2,1.4)
"^DD",362.3,362.3,.03,1,2,1.1)
S X=DIV S Y(1)=$S($D(^IBA(362.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X
"^DD",362.3,362.3,.03,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U2")):^("U2"),1:""),DIV=X I $D(^(0)) S $P(^("U2"),U,1)=DIV,DIH=399,DIG=215 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",362.3,362.3,.03,1,2,2)
Q
"^DD",362.3,362.3,.03,1,2,3)
Do not delete
"^DD",362.3,362.3,.03,1,2,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(362.3,D0,0)):^(0),1:""),D0=$P(Y(1),U,2) S:'$D(^DGCR(399,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"")
"^DD",362.3,362.3,.03,1,2,"%D",0)
^^4^4^3010102^
"^DD",362.3,362.3,.03,1,2,"%D",1,0)
This trigger sets the admitting diagnosis on the bill record to the
"^DD",362.3,362.3,.03,1,2,"%D",2,0)
diagnosis entered for the bill if admitting dx is not already on the bill
"^DD",362.3,362.3,.03,1,2,"%D",3,0)
and there is no other diagnosis with a lower numbered order already on the
"^DD",362.3,362.3,.03,1,2,"%D",4,0)
bill.  This will only fire for inpatient episode bills.
"^DD",362.3,362.3,.03,1,2,"CREATE CONDITION")
S X=$$FIRSTDX^IBCSC4D(DA)
"^DD",362.3,362.3,.03,1,2,"CREATE VALUE")
INTERNAL(DIAGNOSIS)
"^DD",362.3,362.3,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",362.3,362.3,.03,1,2,"DT")
3010102
"^DD",362.3,362.3,.03,1,2,"FIELD")
BILL NUMBER:ADMITTING DIAGNOSIS
"^DD",362.3,362.3,.03,3)
Type a Number between 1 and 999, 0 Decimal Digits.  This is the number that represents the order in which the diagnoses will be printed on a bill.  Each number must be unique for a bill.
"^DD",362.3,362.3,.03,4)
D HELP^IBCSC4D
"^DD",362.3,362.3,.03,5,1,0)
362.3^.02^3
"^DD",362.3,362.3,.03,21,0)
^.001^2^2^3001212^^
"^DD",362.3,362.3,.03,21,1,0)
This is the number that represents the order in which the diagnoses will
"^DD",362.3,362.3,.03,21,2,0)
be printed on a bill.  Each number must be unique for a bill.
"^DD",362.3,362.3,.03,"DT")
3081013
"^DD",362.4,362.4,.02,0)
BILL NUMBER^R*P399'X^DGCR(399,^0;2^S DIC("S")="I $P(^(0),U,13)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",362.4,362.4,.02,1,0)
^.1
"^DD",362.4,362.4,.02,1,1,0)
362.4^AIFN1^MUMPS
"^DD",362.4,362.4,.02,1,1,1)
S ^IBA(362.4,"AIFN"_X,$P(^IBA(362.4,+DA,0),U,1),DA)=""
"^DD",362.4,362.4,.02,1,1,2)
K ^IBA(362.4,"AIFN"_X,$P(^IBA(362.4,+DA,0),U,1),DA)
"^DD",362.4,362.4,.02,1,1,"%D",0)
^^2^2^2931229^^^
"^DD",362.4,362.4,.02,1,1,"%D",1,0)
Special x-ref set up specifically to provide a regular x-ref of a bill and
"^DD",362.4,362.4,.02,1,1,"%D",2,0)
all it's rx refills for easy look-up.
"^DD",362.4,362.4,.02,1,1,"DT")
2931229
"^DD",362.4,362.4,.02,1,2,0)
362.4^C
"^DD",362.4,362.4,.02,1,2,1)
S ^IBA(362.4,"C",$E(X,1,30),DA)=""
"^DD",362.4,362.4,.02,1,2,2)
K ^IBA(362.4,"C",$E(X,1,30),DA)
"^DD",362.4,362.4,.02,1,2,"DT")
2940110
"^DD",362.4,362.4,.02,3)
Enter a bill number.
"^DD",362.4,362.4,.02,12)
Only open bills may be modified.
"^DD",362.4,362.4,.02,12.1)
S DIC("S")="I $P(^(0),U,13)=1"
"^DD",362.4,362.4,.02,21,0)
^^1^1^2931229^
"^DD",362.4,362.4,.02,21,1,0)
The bill this rx refill is associated with.
"^DD",362.4,362.4,.02,"DT")
3081022
"^DD",362.5,362.5,.02,0)
BILL NUMBER^R*P399'X^DGCR(399,^0;2^S DIC("S")="I $P(^(0),U,13)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",362.5,362.5,.02,1,0)
^.1
"^DD",362.5,362.5,.02,1,1,0)
362.5^AIFN1^MUMPS
"^DD",362.5,362.5,.02,1,1,1)
S ^IBA(362.5,"AIFN"_+X,+^IBA(362.5,+DA,0),DA)=""
"^DD",362.5,362.5,.02,1,1,2)
K ^IBA(362.5,"AIFN"_+X,+^IBA(362.5,+DA,0),DA)
"^DD",362.5,362.5,.02,1,1,"%D",0)
^^1^1^2931228^
"^DD",362.5,362.5,.02,1,1,"%D",1,0)
Set-up for quick cross reference of all prosthetic devices on a bill.
"^DD",362.5,362.5,.02,1,1,"DT")
2931228
"^DD",362.5,362.5,.02,3)
The bill number associated with this prosthetic item.
"^DD",362.5,362.5,.02,12)
Only open bills may be modified.
"^DD",362.5,362.5,.02,12.1)
S DIC("S")="I $P(^(0),U,13)=1"
"^DD",362.5,362.5,.02,"DT")
3081013
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3071126
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>40!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1^^0
"^DD",364.6,364.6,.1,3)
Answer must be 1-40 characters in length
"^DD",364.6,364.6,.1,21,0)
^^2^2^3071126^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
3080310
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,.08,0)
PTF ENTRY NUMBER^RP45X^DGPT(^0;8^D PTF^IBCU S DIC(0)="MN",DIC="^DGPT(",DIC("S")="I $D(IBDD1(+Y))" D ^DIC:X K DIC,IBDD1 S:$D(DIE) DIC=DIE S X=+Y K:Y<0 X
"^DD",399,399,.08,1,0)
^.1
"^DD",399,399,.08,1,1,0)
^^TRIGGER^399^159
"^DD",399,399,.08,1,1,1)
X ^DD(399,.08,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=2 X ^DD(399,.08,1,1,1.4)
"^DD",399,399,.08,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,159,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,9)_":",2),$C(59),1)=""
"^DD",399,399,.08,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,9)=DIV,DIH=399,DIG=159 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.08,1,1,2)
Q
"^DD",399,399,.08,1,1,"CREATE CONDITION")
#159=""
"^DD",399,399,.08,1,1,"CREATE VALUE")
S X=2
"^DD",399,399,.08,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.08,1,1,"FIELD")
#159
"^DD",399,399,.08,1,2,0)
^^TRIGGER^399^158
"^DD",399,399,.08,1,2,1)
X ^DD(399,.08,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=2 X ^DD(399,.08,1,2,1.4)
"^DD",399,399,.08,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,158,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,8)_":",2),$C(59),1)=""
"^DD",399,399,.08,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,8)=DIV,DIH=399,DIG=158 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.08,1,2,2)
Q
"^DD",399,399,.08,1,2,"CREATE CONDITION")
#158=""
"^DD",399,399,.08,1,2,"CREATE VALUE")
S X=2
"^DD",399,399,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.08,1,2,"FIELD")
#158
"^DD",399,399,.08,1,4,0)
^^TRIGGER^399^162
"^DD",399,399,.08,1,4,1)
X ^DD(399,.08,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV D DIS^IBCU S X=X X ^DD(399,.08,1,4,1.4)
"^DD",399,399,.08,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$S('$D(^DGCR(399.1,+$P(Y(1),U,12),0)):"",1:$P(^(0),U,1))=""
"^DD",399,399,.08,1,4,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,12)=DIV,DIH=399,DIG=162 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.08,1,4,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,.08,1,4,2.4)
"^DD",399,399,.08,1,4,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,12)=DIV,DIH=399,DIG=162 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.08,1,4,"%D",0)
^^2^2^2920212^
"^DD",399,399,.08,1,4,"%D",1,0)
This sets the discharge status to the correct entry based upon the
"^DD",399,399,.08,1,4,"%D",2,0)
Disposition Field type in the PTF record.
"^DD",399,399,.08,1,4,"CREATE CONDITION")
#162=""
"^DD",399,399,.08,1,4,"CREATE VALUE")
D DIS^IBCU S X=X
"^DD",399,399,.08,1,4,"DELETE VALUE")
@
"^DD",399,399,.08,1,4,"DT")
2920212
"^DD",399,399,.08,1,4,"FIELD")
#162
"^DD",399,399,.08,1,5,0)
399^APTF
"^DD",399,399,.08,1,5,1)
S ^DGCR(399,"APTF",$E(X,1,30),DA)=""
"^DD",399,399,.08,1,5,2)
K ^DGCR(399,"APTF",$E(X,1,30),DA)
"^DD",399,399,.08,1,5,"%D",0)
^^2^2^2920406^
"^DD",399,399,.08,1,5,"%D",1,0)
Cross reference of all PTF records with associated bills.  To be used
"^DD",399,399,.08,1,5,"%D",2,0)
by PTF purge utilities.
"^DD",399,399,.08,1,5,"DT")
2920406
"^DD",399,399,.08,1,6,0)
^^TRIGGER^399^165
"^DD",399,399,.08,1,6,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^DGCR(399,DA,0),U,5)<3 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=+$$LOS1^IBCU64(DA) X ^DD(399,.08,1,6,1.4)
"^DD",399,399,.08,1,6,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,15)=DIV,DIH=399,DIG=165 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.08,1,6,2)
Q
"^DD",399,399,.08,1,6,"%D",0)
^^1^1^2931018^^^
"^DD",399,399,.08,1,6,"%D",1,0)
Sets Length of Stay based on PTF record and date range of bill.  Inpatients only.
"^DD",399,399,.08,1,6,"CREATE CONDITION")
I $P(^DGCR(399,DA,0),U,5)<3
"^DD",399,399,.08,1,6,"CREATE VALUE")
S X=+$$LOS1^IBCU64(DA)
"^DD",399,399,.08,1,6,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.08,1,6,"DT")
2931018
"^DD",399,399,.08,1,6,"FIELD")
LENGTH OF STAY
"^DD",399,399,.08,1,7,0)
^^TRIGGER^399^170
"^DD",399,399,.08,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$PPSC^IBCU64(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=$$PPS^IBCU64(DA,X) X ^DD(399,.08,1,7,1.4)
"^DD",399,399,.08,1,7,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U1")),DIV=X S $P(^("U1"),U,15)=DIV,DIH=399,DIG=170 D ^DICR
"^DD",399,399,.08,1,7,2)
Q
"^DD",399,399,.08,1,7,"%D",0)
^^3^3^3080902^
"^DD",399,399,.08,1,7,"%D",1,0)
This trigger will create a default PPS (DRG) value into the claim.  The 
"^DD",399,399,.08,1,7,"%D",2,0)
trigger condition ensures that the PPS field is currently blank and that 
"^DD",399,399,.08,1,7,"%D",3,0)
the claim is an inpatient, UB type claim.
"^DD",399,399,.08,1,7,"CREATE CONDITION")
S X=$$PPSC^IBCU64(DA)
"^DD",399,399,.08,1,7,"CREATE VALUE")
S X=$$PPS^IBCU64(DA,X)
"^DD",399,399,.08,1,7,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.08,1,7,"DT")
3080902
"^DD",399,399,.08,1,7,"FIELD")
PPS
"^DD",399,399,.08,3)
ENTER A PTF RECORD BELONGING TO THIS PATIENT ONLY!
"^DD",399,399,.08,12.1)
S DIC("S")="I $D(IBDD1(+Y))"
"^DD",399,399,.08,21,0)
^^1^1^2880831^^
"^DD",399,399,.08,21,1,0)
This identifies PTF records belonging to this patient only.
"^DD",399,399,.08,"DT")
3080902
"^DD",399,399,122,0)
PRIMARY PROVIDER #^FX^^M1;2^K:$L(X)>13!($L(X)<3)!($TR(X," ")="") X
"^DD",399,399,122,1,0)
^.1
"^DD",399,399,122,1,1,0)
^^TRIGGER^399^128
"^DD",399,399,122,1,1,1)
Q
"^DD",399,399,122,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" X ^DD(399,122,1,1,2.4)
"^DD",399,399,122,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,10)=DIV,DIH=399,DIG=128 D ^DICR
"^DD",399,399,122,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,122,1,1,"%D",1,0)
This trigger will delete the PRIMARY ID QUALIFIER when the PRIMARY 
"^DD",399,399,122,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,122,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,122,1,1,"DELETE CONDITION")
PRIMARY PROVIDER #=""
"^DD",399,399,122,1,1,"DELETE VALUE")
@
"^DD",399,399,122,1,1,"FIELD")
PRIMARY ID QUALIFIER
"^DD",399,399,122,3)
Answer must be 3-13 characters in length.
"^DD",399,399,122,5,1,0)
399^101^1
"^DD",399,399,122,21,0)
^^2^2^3070622^^^
"^DD",399,399,122,21,1,0)
This is the number assigned to the provider by the primary payer.
"^DD",399,399,122,21,2,0)
Printed in Form Locator 57 for the Primary Insurance Carrier on the UB-04.
"^DD",399,399,122,23,0)
^^13^13^3090306^
"^DD",399,399,122,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,122,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS 
"^DD",399,399,122,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,122,23,4,0)
 
"^DD",399,399,122,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,122,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,122,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,122,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,122,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,122,23,10,0)
 
"^DD",399,399,122,23,11,0)
Whenever these fields are edited, the billing provider may change and 
"^DD",399,399,122,23,12,0)
this may also change the billing provider secondary IDs and Qualifiers 
"^DD",399,399,122,23,13,0)
for all payers on the claim.
"^DD",399,399,122,"DT")
3090306
"^DD",399,399,123,0)
SECONDARY PROVIDER #^FX^^M1;3^K:$L(X)>13!($L(X)<3)!($TR(X," ")="") X
"^DD",399,399,123,1,0)
^.1
"^DD",399,399,123,1,1,0)
^^TRIGGER^399^129
"^DD",399,399,123,1,1,1)
Q
"^DD",399,399,123,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" X ^DD(399,123,1,1,2.4)
"^DD",399,399,123,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,11)=DIV,DIH=399,DIG=129 D ^DICR
"^DD",399,399,123,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,123,1,1,"%D",1,0)
This trigger will delete the SECONDARY ID QUALIFIER when the SECONDARY
"^DD",399,399,123,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,123,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,123,1,1,"DELETE CONDITION")
SECONDARY PROVIDER #=""
"^DD",399,399,123,1,1,"DELETE VALUE")
@
"^DD",399,399,123,1,1,"FIELD")
SECONDARY ID QUALIFIER
"^DD",399,399,123,3)
Answer must be 3-13 characters in length.
"^DD",399,399,123,5,1,0)
399^102^2
"^DD",399,399,123,21,0)
^^3^3^3070116^
"^DD",399,399,123,21,1,0)
This is the number assigned to the provider by the secondary payer.
"^DD",399,399,123,21,2,0)
Printed in Form Locator 57 for the Secondary Insurance Carrier on the
"^DD",399,399,123,21,3,0)
UB-04.
"^DD",399,399,123,23,0)
^^13^13^3090306^
"^DD",399,399,123,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,123,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS
"^DD",399,399,123,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,123,23,4,0)
 
"^DD",399,399,123,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,123,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,123,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,123,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,123,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,123,23,10,0)
 
"^DD",399,399,123,23,11,0)
Whenever these fields are edited, the billing provider may change and
"^DD",399,399,123,23,12,0)
this may also change the billing provider secondary IDs and Qualifiers
"^DD",399,399,123,23,13,0)
for all payers on the claim.
"^DD",399,399,123,"DT")
3090306
"^DD",399,399,124,0)
TERTIARY PROVIDER #^FX^^M1;4^K:$L(X)>13!($L(X)<3)!($TR(X," ")="") X
"^DD",399,399,124,1,0)
^.1
"^DD",399,399,124,1,1,0)
^^TRIGGER^399^130
"^DD",399,399,124,1,1,1)
Q
"^DD",399,399,124,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,124,1,1,2.4)
"^DD",399,399,124,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,12)=DIV,DIH=399,DIG=130 D ^DICR
"^DD",399,399,124,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,124,1,1,"%D",1,0)
This trigger will delete the TERTIARY ID QUALIFIER when the TERTIARY
"^DD",399,399,124,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,124,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,124,1,1,"DELETE CONDITION")
TERTIARY PROVIDER #=""
"^DD",399,399,124,1,1,"DELETE VALUE")
@
"^DD",399,399,124,1,1,"FIELD")
TERTIARY ID QUALIFIER
"^DD",399,399,124,3)
Answer must be 3-13 characters in length.
"^DD",399,399,124,5,1,0)
399^103^2
"^DD",399,399,124,21,0)
^^3^3^3070116^
"^DD",399,399,124,21,1,0)
This is the number assigned to the provider by the tertiary payer.
"^DD",399,399,124,21,2,0)
Printed in Form Locator 57 for the Tertiary Insurance Carrier on the
"^DD",399,399,124,21,3,0)
UB-04.
"^DD",399,399,124,23,0)
^^13^13^3090306^
"^DD",399,399,124,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,124,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS
"^DD",399,399,124,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,124,23,4,0)
 
"^DD",399,399,124,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,124,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,124,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,124,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,124,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,124,23,10,0)
 
"^DD",399,399,124,23,11,0)
Whenever these fields are edited, the billing provider may change and
"^DD",399,399,124,23,12,0)
this may also change the billing provider secondary IDs and Qualifiers
"^DD",399,399,124,23,13,0)
for all payers on the claim.
"^DD",399,399,124,"DT")
3090306
"^DD",399,399,128,0)
PRIMARY ID QUALIFIER^*P355.97'^IBE(355.97,^M1;10^S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,128,3)
Enter the Qualifier for the Primary Insurance ID #
"^DD",399,399,128,5,1,0)
399^101^4
"^DD",399,399,128,5,2,0)
399^122^1
"^DD",399,399,128,12)
Only Billing Provider Secondary IDs allowed
"^DD",399,399,128,12.1)
S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))"
"^DD",399,399,128,21,0)
^^1^1^3060309^
"^DD",399,399,128,21,1,0)
This is the qualifier for PRIMARY PROVIDER #.
"^DD",399,399,128,23,0)
^^13^13^3090306^
"^DD",399,399,128,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,128,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS
"^DD",399,399,128,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,128,23,4,0)
 
"^DD",399,399,128,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,128,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,128,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,128,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,128,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,128,23,10,0)
 
"^DD",399,399,128,23,11,0)
Whenever these fields are edited, the billing provider may change and
"^DD",399,399,128,23,12,0)
this may also change the billing provider secondary IDs and Qualifiers
"^DD",399,399,128,23,13,0)
for all payers on the claim.
"^DD",399,399,128,"DT")
3090306
"^DD",399,399,129,0)
SECONDARY ID QUALIFIER^*P355.97'^IBE(355.97,^M1;11^S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,129,3)
Enter the Qualifier for the Secondary Insurance ID #
"^DD",399,399,129,5,1,0)
399^102^5
"^DD",399,399,129,5,2,0)
399^123^1
"^DD",399,399,129,12)
Only Billing Provider Secondary IDs allowed
"^DD",399,399,129,12.1)
S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))"
"^DD",399,399,129,21,0)
^^1^1^3060309^
"^DD",399,399,129,21,1,0)
This is the qualifier for the SECONDARY PROVIDER #.
"^DD",399,399,129,23,0)
^^13^13^3090306^
"^DD",399,399,129,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,129,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS
"^DD",399,399,129,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,129,23,4,0)
 
"^DD",399,399,129,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,129,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,129,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,129,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,129,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,129,23,10,0)
 
"^DD",399,399,129,23,11,0)
Whenever these fields are edited, the billing provider may change and
"^DD",399,399,129,23,12,0)
this may also change the billing provider secondary IDs and Qualifiers
"^DD",399,399,129,23,13,0)
for all payers on the claim.
"^DD",399,399,129,"DT")
3090306
"^DD",399,399,130,0)
TERTIARY ID QUALIFIER^*P355.97'^IBE(355.97,^M1;12^S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,130,3)
Enter the Qualifier for the Tertiary Insurance ID #
"^DD",399,399,130,5,1,0)
399^103^3
"^DD",399,399,130,5,2,0)
399^124^1
"^DD",399,399,130,12)
Only Billing Provider Secondary IDs allowed
"^DD",399,399,130,12.1)
S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))"
"^DD",399,399,130,21,0)
^.001^1^1^3060309^^
"^DD",399,399,130,21,1,0)
This is the qualifier for the TERTIARY PROVIDER #.
"^DD",399,399,130,23,0)
^^13^13^3090306^
"^DD",399,399,130,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,130,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS
"^DD",399,399,130,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,130,23,4,0)
 
"^DD",399,399,130,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,130,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,130,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,130,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,130,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,130,23,10,0)
 
"^DD",399,399,130,23,11,0)
Whenever these fields are edited, the billing provider may change and
"^DD",399,399,130,23,12,0)
this may also change the billing provider secondary IDs and Qualifiers
"^DD",399,399,130,23,13,0)
for all payers on the claim.
"^DD",399,399,130,"DT")
3090306
"^DD",399,399,158,0)
TYPE OF ADMISSION^S^1:EMERGENCY;2:URGENT;3:ELECTIVE;4:NEWBORN;5:TRAUMA;9:INFORMATION NOT AVAILABLE;^U;8^Q
"^DD",399,399,158,3)
Enter a code indicating the priority/type of this admission.
"^DD",399,399,158,5,1,0)
399^.08^2
"^DD",399,399,158,21,0)
^^1^1^3081113^
"^DD",399,399,158,21,1,0)
Enter the Priority/Type of this admission.
"^DD",399,399,158,"DT")
3081113
"^DD",399,399,170,0)
PPS^P80.2'^ICD(^U1;15^Q
"^DD",399,399,170,.1)
Prospective Payment System Code (DRG)
"^DD",399,399,170,3)
Enter one DRG from the PTF or enter one from the DRG file.
"^DD",399,399,170,5,1,0)
399^.08^7
"^DD",399,399,170,21,0)
^^2^2^3081104^
"^DD",399,399,170,21,1,0)
Accept the default Discharge DRG as the PPS value or enter
"^DD",399,399,170,21,2,0)
another DRG from the PTF file or from the DRG file.
"^DD",399,399,170,"DT")
3081104
"^DD",399,399,243,0)
SERVICE FACILITY TAXONOMY^*P8932.1'^USC(8932.1,^U3;2^S DIC("S")="I $P($G(^(90002)),U,2)=""N""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,243,3)
Enter the Taxonomy Code associated with the Service Facility.
"^DD",399,399,243,12)
Only entries for 'Non-Individuals' may be selected.
"^DD",399,399,243,12.1)
S DIC("S")="I $P($G(^(90002)),U,2)=""N"""
"^DD",399,399,243,21,0)
^^2^2^3090306^
"^DD",399,399,243,21,1,0)
This field contains the organizational taxonomy code for the Service 
"^DD",399,399,243,21,2,0)
Facility.  You may override the default taxonomy code here.
"^DD",399,399,243,23,0)
^^12^12^3090306^
"^DD",399,399,243,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,243,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS
"^DD",399,399,243,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,243,23,4,0)
 
"^DD",399,399,243,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,243,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,243,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,243,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,243,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,243,23,10,0)
 
"^DD",399,399,243,23,11,0)
Whenever these fields are edited, the service facility may change and
"^DD",399,399,243,23,12,0)
thus a new default service facility taxonomy code is filed.
"^DD",399,399,243,"DT")
3090306
"^DD",399,399,249,0)
PRV DIAGNOSIS (1)^P80'^ICD9(^U3;8^Q
"^DD",399,399,249,3)
Please enter the first "Patient reason for visit" diagnosis.
"^DD",399,399,249,21,0)
^^1^1^3081103^
"^DD",399,399,249,21,1,0)
This is the first PRV diagnosis.
"^DD",399,399,249,"DT")
3081103
"^DD",399,399,250,0)
PRV DIAGNOSIS (2)^P80'^ICD9(^U3;9^Q
"^DD",399,399,250,3)
Please enter the second "Patient reason for visit" diagnosis.
"^DD",399,399,250,21,0)
^^1^1^3081103^
"^DD",399,399,250,21,1,0)
This is the second PRV diagnosis.
"^DD",399,399,250,"DT")
3081103
"^DD",399,399,251,0)
PRV DIAGNOSIS (3)^P80'^ICD9(^U3;10^Q
"^DD",399,399,251,3)
Please enter the third "Patient reason for visit" diagnosis.
"^DD",399,399,251,21,0)
^^1^1^3081103^
"^DD",399,399,251,21,1,0)
This is the third PRV diagnosis.
"^DD",399,399,251,"DT")
3081103
"^DD",399,399,252,0)
BILLING PROVIDER TAXONOMY^*P8932.1'^USC(8932.1,^U3;11^S DIC("S")="I $P($G(^(90002)),U,2)=""N""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,252,3)
Enter the Taxonomy Code associated with the Billing Provider.
"^DD",399,399,252,12)
Only entries for 'Non-Individuals' may be selected.
"^DD",399,399,252,12.1)
S DIC("S")="I $P($G(^(90002)),U,2)=""N"""
"^DD",399,399,252,21,0)
^^2^2^3081022^
"^DD",399,399,252,21,1,0)
This field contains the organizational taxonomy code for the Billing 
"^DD",399,399,252,21,2,0)
Provider.  You may override the default taxonomy code here.
"^DD",399,399,252,23,0)
^^12^12^3090306^
"^DD",399,399,252,23,1,0)
This field is set via the "ABP" new-style MUMPS x-refs from the following
"^DD",399,399,252,23,2,0)
fields in the BILL/CLAIMS file (#399) and in the IB BILL/CLAIMS
"^DD",399,399,252,23,3,0)
PRESCRIPTION REFILL file (#362.4):
"^DD",399,399,252,23,4,0)
 
"^DD",399,399,252,23,5,0)
  399,.22 - DEFAULT DIVISION
"^DD",399,399,252,23,6,0)
  399,232 - NON-VA FACILITY
"^DD",399,399,252,23,7,0)
  399,136 - BILL PAYER POLICY
"^DD",399,399,252,23,8,0)
  399,.19 - FORM TYPE
"^DD",399,399,252,23,9,0)
362.4,.02 - BILL NUMBER
"^DD",399,399,252,23,10,0)
 
"^DD",399,399,252,23,11,0)
Whenever these fields are edited, the billing provider may change and 
"^DD",399,399,252,23,12,0)
thus a new default billing provider taxonomy code is filed.
"^DD",399,399,252,"DT")
3090306
"^DIC",350.8,350.8,0)
IB ERROR
"^DIC",350.8,350.8,0,"GL")
^IBE(350.8,
"^DIC",350.8,350.8,"%D",0)
^^11^11^2940214^^^^
"^DIC",350.8,350.8,"%D",1,0)
This file contains errors for billing functions.  It may be used by
"^DIC",350.8,350.8,"%D",2,0)
applications, IB or AR.  The normal format for a routine to return
"^DIC",350.8,350.8,"%D",3,0)
an error is to return the variable:
"^DIC",350.8,350.8,"%D",4,0)
  Y=1^... a successful event occured
"^DIC",350.8,350.8,"%D",5,0)
  Y=-1^error code[;error code;error code...]^additional text
"^DIC",350.8,350.8,"%D",6,0)
The error messages can be displayed by calling routine ^IBAERR.  If
"^DIC",350.8,350.8,"%D",7,0)
the error occurs in a tasked job ($D(ZTQUEUED)'=0) the routine will
"^DIC",350.8,350.8,"%D",8,0)
put the error message in a bulletin and post it to the group defined
"^DIC",350.8,350.8,"%D",9,0)
in the IB SITE PARAMETER FILE.
"^DIC",350.8,350.8,"%D",10,0)
 
"^DIC",350.8,350.8,"%D",11,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",350.8,"B","IB ERROR",350.8)

"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",7081,6)
^382
**END**
**END**
