Released IB*2*389 SEQ #363
Extracted from mail message
**KIDS**:IB*2.0*389^

**INSTALL NAME**
IB*2.0*389
"BLD",6953,0)
IB*2.0*389^INTEGRATED BILLING^0^3080512^y
"BLD",6953,1,0)
^^1^1^3080307^
"BLD",6953,1,1,0)
Prosthetics Item Replacement.
"BLD",6953,4,0)
^9.64PA^351.67^3
"BLD",6953,4,351.61,0)
351.61
"BLD",6953,4,351.61,2,0)
^9.641^351.61^1
"BLD",6953,4,351.61,2,351.61,0)
TRANSFER PRICING TRANSACTIONS  (File-top level)
"BLD",6953,4,351.61,2,351.61,1,0)
^9.6411^4.04^1
"BLD",6953,4,351.61,2,351.61,1,4.04,0)
*PROSTHETIC ITEM
"BLD",6953,4,351.61,222)
y^n^p^^^^n^^n
"BLD",6953,4,351.61,224)

"BLD",6953,4,351.67,0)
351.67
"BLD",6953,4,351.67,2,0)
^9.641^351.67^1
"BLD",6953,4,351.67,2,351.67,0)
TRANSFER PRICING INPT PROSTHETIC ITEMS  (File-top level)
"BLD",6953,4,351.67,2,351.67,1,0)
^9.6411^.01^1
"BLD",6953,4,351.67,2,351.67,1,.01,0)
ITEM
"BLD",6953,4,351.67,222)
y^n^p^^^^n^^n
"BLD",6953,4,351.67,224)

"BLD",6953,4,362.5,0)
362.5
"BLD",6953,4,362.5,2,0)
^9.641^362.5^1
"BLD",6953,4,362.5,2,362.5,0)
IB BILL/CLAIMS PROSTHETICS  (File-top level)
"BLD",6953,4,362.5,2,362.5,1,0)
^9.6411^.05^2
"BLD",6953,4,362.5,2,362.5,1,.03,0)
*ITEM
"BLD",6953,4,362.5,2,362.5,1,.05,0)
ITEM NAME
"BLD",6953,4,362.5,222)
y^n^p^^^^n^^n
"BLD",6953,4,362.5,224)

"BLD",6953,4,"APDD",351.61,351.61)

"BLD",6953,4,"APDD",351.61,351.61,4.04)

"BLD",6953,4,"APDD",351.67,351.67)

"BLD",6953,4,"APDD",351.67,351.67,.01)

"BLD",6953,4,"APDD",362.5,362.5)

"BLD",6953,4,"APDD",362.5,362.5,.03)

"BLD",6953,4,"APDD",362.5,362.5,.05)

"BLD",6953,4,"B",351.61,351.61)

"BLD",6953,4,"B",351.67,351.67)

"BLD",6953,4,"B",362.5,362.5)

"BLD",6953,6.3)
6
"BLD",6953,"ABPKG")
n
"BLD",6953,"INI")
PRE^IB20P389
"BLD",6953,"INIT")
POST^IB20P389
"BLD",6953,"KRN",0)
^9.67PA^8989.52^19
"BLD",6953,"KRN",.4,0)
.4
"BLD",6953,"KRN",.401,0)
.401
"BLD",6953,"KRN",.402,0)
.402
"BLD",6953,"KRN",.403,0)
.403
"BLD",6953,"KRN",.5,0)
.5
"BLD",6953,"KRN",.84,0)
.84
"BLD",6953,"KRN",3.6,0)
3.6
"BLD",6953,"KRN",3.8,0)
3.8
"BLD",6953,"KRN",9.2,0)
9.2
"BLD",6953,"KRN",9.8,0)
9.8
"BLD",6953,"KRN",9.8,"NM",0)
^9.68A^45^24
"BLD",6953,"KRN",9.8,"NM",22,0)
IB20P389^^0^B10337281
"BLD",6953,"KRN",9.8,"NM",23,0)
IBATER^^0^B4099867
"BLD",6953,"KRN",9.8,"NM",24,0)
IBATFILE^^0^B53128804
"BLD",6953,"KRN",9.8,"NM",25,0)
IBATLM1B^^0^B54664867
"BLD",6953,"KRN",9.8,"NM",26,0)
IBATLM2A^^0^B34351827
"BLD",6953,"KRN",9.8,"NM",27,0)
IBATO1^^0^B49755688
"BLD",6953,"KRN",9.8,"NM",28,0)
IBATUTL^^0^B31394250
"BLD",6953,"KRN",9.8,"NM",29,0)
IBCCC3^^0^B9229322
"BLD",6953,"KRN",9.8,"NM",30,0)
IBCEF21^^0^B23765234
"BLD",6953,"KRN",9.8,"NM",31,0)
IBCEF3^^0^B45972715
"BLD",6953,"KRN",9.8,"NM",32,0)
IBCF331^^0^B6820845
"BLD",6953,"KRN",9.8,"NM",33,0)
IBCF4^^0^B19059565
"BLD",6953,"KRN",9.8,"NM",34,0)
IBCSC5^^0^B16666314
"BLD",6953,"KRN",9.8,"NM",35,0)
IBCSC5B^^0^B42307142
"BLD",6953,"KRN",9.8,"NM",36,0)
IBCSC61^^0^B7758079
"BLD",6953,"KRN",9.8,"NM",37,0)
IBJTBA^^0^B47704130
"BLD",6953,"KRN",9.8,"NM",38,0)
IBJTRA1^^0^B10800443
"BLD",6953,"KRN",9.8,"NM",39,0)
IBRFN3^^0^B29612898
"BLD",6953,"KRN",9.8,"NM",40,0)
IBRFN4^^0^B25630558
"BLD",6953,"KRN",9.8,"NM",41,0)
IBTOBI4^^0^B21631408
"BLD",6953,"KRN",9.8,"NM",42,0)
IBTRED01^^0^B22967896
"BLD",6953,"KRN",9.8,"NM",43,0)
IBTRKR5^^0^B32356439
"BLD",6953,"KRN",9.8,"NM",44,0)
IBCEF22^^0^B52286279
"BLD",6953,"KRN",9.8,"NM",45,0)
IBCRBG^^0^B58097586
"BLD",6953,"KRN",9.8,"NM","B","IB20P389",22)

"BLD",6953,"KRN",9.8,"NM","B","IBATER",23)

"BLD",6953,"KRN",9.8,"NM","B","IBATFILE",24)

"BLD",6953,"KRN",9.8,"NM","B","IBATLM1B",25)

"BLD",6953,"KRN",9.8,"NM","B","IBATLM2A",26)

"BLD",6953,"KRN",9.8,"NM","B","IBATO1",27)

"BLD",6953,"KRN",9.8,"NM","B","IBATUTL",28)

"BLD",6953,"KRN",9.8,"NM","B","IBCCC3",29)

"BLD",6953,"KRN",9.8,"NM","B","IBCEF21",30)

"BLD",6953,"KRN",9.8,"NM","B","IBCEF22",44)

"BLD",6953,"KRN",9.8,"NM","B","IBCEF3",31)

"BLD",6953,"KRN",9.8,"NM","B","IBCF331",32)

"BLD",6953,"KRN",9.8,"NM","B","IBCF4",33)

"BLD",6953,"KRN",9.8,"NM","B","IBCRBG",45)

"BLD",6953,"KRN",9.8,"NM","B","IBCSC5",34)

"BLD",6953,"KRN",9.8,"NM","B","IBCSC5B",35)

"BLD",6953,"KRN",9.8,"NM","B","IBCSC61",36)

"BLD",6953,"KRN",9.8,"NM","B","IBJTBA",37)

"BLD",6953,"KRN",9.8,"NM","B","IBJTRA1",38)

"BLD",6953,"KRN",9.8,"NM","B","IBRFN3",39)

"BLD",6953,"KRN",9.8,"NM","B","IBRFN4",40)

"BLD",6953,"KRN",9.8,"NM","B","IBTOBI4",41)

"BLD",6953,"KRN",9.8,"NM","B","IBTRED01",42)

"BLD",6953,"KRN",9.8,"NM","B","IBTRKR5",43)

"BLD",6953,"KRN",19,0)
19
"BLD",6953,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6953,"KRN",19,"NM",1,0)
IBAT INPT PROSTHETIC ITEMS^^0
"BLD",6953,"KRN",19,"NM","B","IBAT INPT PROSTHETIC ITEMS",1)

"BLD",6953,"KRN",19.1,0)
19.1
"BLD",6953,"KRN",101,0)
101
"BLD",6953,"KRN",409.61,0)
409.61
"BLD",6953,"KRN",771,0)
771
"BLD",6953,"KRN",870,0)
870
"BLD",6953,"KRN",8989.51,0)
8989.51
"BLD",6953,"KRN",8989.52,0)
8989.52
"BLD",6953,"KRN",8994,0)
8994
"BLD",6953,"KRN","B",.4,.4)

"BLD",6953,"KRN","B",.401,.401)

"BLD",6953,"KRN","B",.402,.402)

"BLD",6953,"KRN","B",.403,.403)

"BLD",6953,"KRN","B",.5,.5)

"BLD",6953,"KRN","B",.84,.84)

"BLD",6953,"KRN","B",3.6,3.6)

"BLD",6953,"KRN","B",3.8,3.8)

"BLD",6953,"KRN","B",9.2,9.2)

"BLD",6953,"KRN","B",9.8,9.8)

"BLD",6953,"KRN","B",19,19)

"BLD",6953,"KRN","B",19.1,19.1)

"BLD",6953,"KRN","B",101,101)

"BLD",6953,"KRN","B",409.61,409.61)

"BLD",6953,"KRN","B",771,771)

"BLD",6953,"KRN","B",870,870)

"BLD",6953,"KRN","B",8989.51,8989.51)

"BLD",6953,"KRN","B",8989.52,8989.52)

"BLD",6953,"KRN","B",8994,8994)

"BLD",6953,"QUES",0)
^9.62^^
"BLD",6953,"REQB",0)
^9.611^5^5
"BLD",6953,"REQB",1,0)
IB*2.0*261^1
"BLD",6953,"REQB",2,0)
IB*2.0*305^1
"BLD",6953,"REQB",3,0)
IB*2.0*371^1
"BLD",6953,"REQB",4,0)
IB*2.0*381^1
"BLD",6953,"REQB",5,0)
IB*2.0*382^1
"BLD",6953,"REQB","B","IB*2.0*261",1)

"BLD",6953,"REQB","B","IB*2.0*305",2)

"BLD",6953,"REQB","B","IB*2.0*371",3)

"BLD",6953,"REQB","B","IB*2.0*381",4)

"BLD",6953,"REQB","B","IB*2.0*382",5)

"FIA",351.61)
TRANSFER PRICING TRANSACTIONS
"FIA",351.61,0)
^IBAT(351.61,
"FIA",351.61,0,0)
351.61
"FIA",351.61,0,1)
y^n^p^^^^n^^n
"FIA",351.61,0,10)

"FIA",351.61,0,11)

"FIA",351.61,0,"RLRO")

"FIA",351.61,0,"VR")
2.0^IB
"FIA",351.61,351.61)
1
"FIA",351.61,351.61,4.04)

"FIA",351.67)
TRANSFER PRICING INPT PROSTHETIC ITEMS
"FIA",351.67,0)
^IBAT(351.67,
"FIA",351.67,0,0)
351.67P
"FIA",351.67,0,1)
y^n^p^^^^n^^n
"FIA",351.67,0,10)

"FIA",351.67,0,11)

"FIA",351.67,0,"RLRO")

"FIA",351.67,0,"VR")
2.0^IB
"FIA",351.67,351.67)
1
"FIA",351.67,351.67,.01)

"FIA",362.5)
IB BILL/CLAIMS PROSTHETICS
"FIA",362.5,0)
^IBA(362.5,
"FIA",362.5,0,0)
362.5D
"FIA",362.5,0,1)
y^n^p^^^^n^^n
"FIA",362.5,0,10)

"FIA",362.5,0,11)

"FIA",362.5,0,"RLRO")

"FIA",362.5,0,"VR")
2.0^IB
"FIA",362.5,362.5)
1
"FIA",362.5,362.5,.03)

"FIA",362.5,362.5,.05)

"INI")
PRE^IB20P389
"INIT")
POST^IB20P389
"KRN",19,9207,-1)
0^1
"KRN",19,9207,0)
IBAT INPT PROSTHETIC ITEMS^Edit Inpatient Prosthetic Items^^E^^IB SUPERVISOR^^^^^^INTEGRATED BILLING^^1^1
"KRN",19,9207,1,0)
^19.06^4^4^3080307^^^^
"KRN",19,9207,1,1,0)
This option will allow entering/editing/deleting of items that should be
"KRN",19,9207,1,2,0)
billed for inpatient prosthetics.  Items in here will be automatically
"KRN",19,9207,1,3,0)
billed by the nightly background job for inpatients.  No other inpatient
"KRN",19,9207,1,4,0)
issued items will be automatically billed.
"KRN",19,9207,15)
K DLAYGO,DIDEL
"KRN",19,9207,20)
S (DLAYGO,DIDEL)=351.67
"KRN",19,9207,30)
IBAT(351.67,
"KRN",19,9207,31)
AEMQL
"KRN",19,9207,35)

"KRN",19,9207,50)
IBAT(351.67,
"KRN",19,9207,51)
.01
"KRN",19,9207,"U")
EDIT INPATIENT PROSTHETIC ITEM
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
389^3080512
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3080512
"PKG",200,22,1,"PAH",1,1,1,0)
Prosthetics Item Replacement.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
24
"RTN","IB20P389")
0^22^B10337281^n/a
"RTN","IB20P389",1,0)
IB20P389 ;ALB/ARH - IB*2.0*389 POST INIT: PROSTHETICS ITEM REPLACEMENT ; 20-FEB-2008
"RTN","IB20P389",2,0)
 ;;2.0;INTEGRATED BILLING;**389**;21-MAR-94;Build 6
"RTN","IB20P389",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB20P389",4,0)
 ;
"RTN","IB20P389",5,0)
 Q
"RTN","IB20P389",6,0)
 ;
"RTN","IB20P389",7,0)
PRE ; Clean up DD, remove fields exported so installs clean
"RTN","IB20P389",8,0)
 ; TRANSFER PRICING INPT PROSTHETIC ITEMS (#351.67), ITEM (.01) Output Transform not deleted by install
"RTN","IB20P389",9,0)
 S DIK="^DD(351.61,",DA(1)=351.61,DA=4.04 D ^DIK K DIK,DA
"RTN","IB20P389",10,0)
 S DIK="^DD(351.67,",DA(1)=351.67,DA=.01 D ^DIK K DIK,DA
"RTN","IB20P389",11,0)
 S DIK="^DD(362.5,",DA(1)=362.5,DA=.03 D ^DIK K DIK,DA
"RTN","IB20P389",12,0)
 Q
"RTN","IB20P389",13,0)
 ;
"RTN","IB20P389",14,0)
 ;
"RTN","IB20P389",15,0)
 ; Add Prosthetics Item Name to IB BILL/CLAIMS PROSTHETICS (#362.5, .05)
"RTN","IB20P389",16,0)
 ; This free text Item Name (#362.5, .05) replaces the ITEM pointer (#362.5, .03) to PROS ITEM MASTER (#661)
"RTN","IB20P389",17,0)
 ; The free Text Item Name will be based on the RECORD (#352.5, .04) if defined, otherwise ITEM (#362.5, .03):
"RTN","IB20P389",18,0)
 ; - Prosthetics HISTORICAL ITEM (660,89) if patient item (#362.5, .04) defined/set
"RTN","IB20P389",19,0)
 ; - Item Master PRE_NIF SHORT DESCRIPTION (#441,52) if defined and Delivery Date before last edit date
"RTN","IB20P389",20,0)
 ; - Item Master SHORT DESCRIPTION (#441,.05) if Delivery Date is after last edit date
"RTN","IB20P389",21,0)
 ;
"RTN","IB20P389",22,0)
 ; Delete all entries in TRANSFER PRICING INPT PROSTHETIC ITEMS (#351.67) file
"RTN","IB20P389",23,0)
 ; List of Prosthetics Item to not bill, changed Item pointer from #661 to #661.1
"RTN","IB20P389",24,0)
 ;
"RTN","IB20P389",25,0)
POST ;
"RTN","IB20P389",26,0)
 N IBA
"RTN","IB20P389",27,0)
 S IBA(1)="",IBA(2)="    IB*2*389 Prosthetics Item Replacement Post-Install .....",IBA(3)="" D MESG K IBA
"RTN","IB20P389",28,0)
 ;
"RTN","IB20P389",29,0)
 D PIDEL ; delete all TP Inpt Prosthetics Item (#352.67)
"RTN","IB20P389",30,0)
 D RBILL ; add prosthetic item name to bill record (#362.5)
"RTN","IB20P389",31,0)
 ;
"RTN","IB20P389",32,0)
 S IBA(1)="",IBA(2)="    IB*2*389 Prosthetics Item Replacement Post-Install Complete",IBA(3)="" D MESG K IBA
"RTN","IB20P389",33,0)
 ;
"RTN","IB20P389",34,0)
 Q
"RTN","IB20P389",35,0)
 ;
"RTN","IB20P389",36,0)
PIDEL ; Delete all entries from TRANSFER PRICING INPT PROSTHETIC ITEMS (#361.67)
"RTN","IB20P389",37,0)
 N IBPIFN,IBCNT,DIK,DIC,DIE,DA,X,Y S IBCNT=0
"RTN","IB20P389",38,0)
 ;
"RTN","IB20P389",39,0)
 S IBPIFN=0 F  S IBPIFN=$O(^IBAT(351.67,IBPIFN)) Q:'IBPIFN  D
"RTN","IB20P389",40,0)
 . ;
"RTN","IB20P389",41,0)
 . S DA=IBPIFN,DIK="^IBAT(351.67," D ^DIK K DIK,DA S IBCNT=IBCNT+1
"RTN","IB20P389",42,0)
 ;
"RTN","IB20P389",43,0)
 S IBA(1)="      >> "_IBCNT_" TRANSFER PRICING INPT PROSTHETIC ITEMS deleted (#351.67)" D MESG K IBA
"RTN","IB20P389",44,0)
 Q
"RTN","IB20P389",45,0)
 ;
"RTN","IB20P389",46,0)
RBILL ; Replace Bill Prosthetics Item pointer with name (#362.5)
"RTN","IB20P389",47,0)
 N IBPIN,IBPI0,IBDDT,IB661,IB660,IBNAME,IBCNT,DIE,DR,DA,DIC,DA,DO,X,Y S IBCNT=0
"RTN","IB20P389",48,0)
 ;
"RTN","IB20P389",49,0)
 S IBPIN=0 F  S IBPIN=$O(^IBA(362.5,IBPIN)) Q:'IBPIN  D
"RTN","IB20P389",50,0)
 . S IBPI0=$G(^IBA(362.5,IBPIN,0)) S IBDDT=+IBPI0 Q:$P(IBPI0,U,5)'=""
"RTN","IB20P389",51,0)
 . S IB661=+$P(IBPI0,U,3),IB660=+$P(IBPI0,U,4)
"RTN","IB20P389",52,0)
 . ;
"RTN","IB20P389",53,0)
 . S IBNAME=$$NAME(IB661,IB660,IBDDT) Q:IBNAME=""
"RTN","IB20P389",54,0)
 . ;
"RTN","IB20P389",55,0)
 . S DIE="^IBA(362.5,",DA=IBPIN,DR=".05////^S X=IBNAME" D ^DIE K DIE,DR,DA,DIC,DA,DO S IBCNT=IBCNT+1
"RTN","IB20P389",56,0)
 ;
"RTN","IB20P389",57,0)
 S IBA(1)="      >> "_IBCNT_" IB BILL/CLAIMS PROSTHETICS Records converted (#362.5)" D MESG K IBA
"RTN","IB20P389",58,0)
 Q
"RTN","IB20P389",59,0)
 ;
"RTN","IB20P389",60,0)
NAME(IP661,IP660,IDDT) ; Return free text name description for item
"RTN","IB20P389",61,0)
 N IBNAME,IB441,IBOLD,IBNEW,IBDATE S IDDT=+$G(IDDT),IBNAME=""
"RTN","IB20P389",62,0)
 ;
"RTN","IB20P389",63,0)
 I +$G(IP660) S IBNAME=$P($G(^RMPR(660,IP660,"HST")),U,1)
"RTN","IB20P389",64,0)
 ;
"RTN","IB20P389",65,0)
 I IBNAME="",+$G(IP661) D
"RTN","IB20P389",66,0)
 . S IB441=+$G(^RMPR(661,+IP661,0)) Q:'IB441
"RTN","IB20P389",67,0)
 . S IBOLD=$P($G(^PRC(441,+IB441,9)),U,1) ; pre_nif short description
"RTN","IB20P389",68,0)
 . S IBNEW=$P($G(^PRC(441,+IB441,0)),U,2) ; short description
"RTN","IB20P389",69,0)
 . S IBDATE=$P($G(^PRC(441,+IB441,0)),U,9) ; date item created (last updated)
"RTN","IB20P389",70,0)
 . ;
"RTN","IB20P389",71,0)
 . S IBNAME=IBNEW I IBOLD'="",IDDT<IBDATE S IBNAME=IBOLD
"RTN","IB20P389",72,0)
 ;
"RTN","IB20P389",73,0)
 I $E(IBNAME,1,2)="**" S IBNAME=$P(IBNAME,"**",2)
"RTN","IB20P389",74,0)
 I IBNAME="" S IBNAME="PROSTHETIC ITEM"
"RTN","IB20P389",75,0)
 ;
"RTN","IB20P389",76,0)
 Q IBNAME
"RTN","IB20P389",77,0)
 ;
"RTN","IB20P389",78,0)
MESG ;
"RTN","IB20P389",79,0)
 D MES^XPDUTL(.IBA)
"RTN","IB20P389",80,0)
 Q
"RTN","IBATER")
0^23^B4099867^B4020056
"RTN","IBATER",1,0)
IBATER ;LL/ELZ - TRANSFER PRICING PROSTHETICS DRIVER ; 7-APR-2000
"RTN","IBATER",2,0)
 ;;2.0;INTEGRATED BILLING;**115,389**;21-MAR-94;Build 6
"RTN","IBATER",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATER",4,0)
 ;
"RTN","IBATER",5,0)
 ; This routine is called by the nightly back ground job.  It will go
"RTN","IBATER",6,0)
 ; through the prosthetics file (660) and look for transfer pricing
"RTN","IBATER",7,0)
 ; transactions that it has not previously found.  It looks for T-30
"RTN","IBATER",8,0)
 ; through T based upon the delivery date. File 660 - dbia #373
"RTN","IBATER",9,0)
 ;
"RTN","IBATER",10,0)
EN ;
"RTN","IBATER",11,0)
 I '$P($G(^IBE(350.9,1,10)),"^",5) Q  ; transfer pricing turned off
"RTN","IBATER",12,0)
 ;
"RTN","IBATER",13,0)
 N IBDT,IBDA
"RTN","IBATER",14,0)
 ;
"RTN","IBATER",15,0)
 ; date range t-30 to t
"RTN","IBATER",16,0)
 S IBDT=$$FMADD^XLFDT(DT,-30)
"RTN","IBATER",17,0)
 ;
"RTN","IBATER",18,0)
 F  S IBDT=$O(^RMPR(660,"CT",IBDT)) Q:'IBDT!(IBDT>DT)  S IBDA="" F  S IBDA=$O(^RMPR(660,"CT",IBDT,IBDA)) Q:'IBDA  D CHECK
"RTN","IBATER",19,0)
 ;
"RTN","IBATER",20,0)
 Q
"RTN","IBATER",21,0)
 ;
"RTN","IBATER",22,0)
CHECK ; check if transfer pricing and not already added
"RTN","IBATER",23,0)
 ;
"RTN","IBATER",24,0)
 N IBDATA,IBDATA1,IBDFN
"RTN","IBATER",25,0)
 ;
"RTN","IBATER",26,0)
 ; already in file
"RTN","IBATER",27,0)
 I $O(^IBAT(351.61,"AD",(IBDA_";RMPR(660,"),0)) Q
"RTN","IBATER",28,0)
 ;
"RTN","IBATER",29,0)
 ; valid tp patient
"RTN","IBATER",30,0)
 S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""  S IBDATA1=$G(^RMPR(660,+IBDA,1))
"RTN","IBATER",31,0)
 S IBDFN=$P(IBDATA,"^",2) Q:'IBDFN  Q:'$$TPP^IBATUTL(IBDFN)
"RTN","IBATER",32,0)
 ;
"RTN","IBATER",33,0)
 ; checks from RMPRBIL copied 4/7/2000 with mod for patient type removed
"RTN","IBATER",34,0)
 I $S('$D(^RMPR(660,IBDA,"AM")):1,$P(IBDATA,"^",9)="":1,$P(IBDATA,"^",12)="":1,$P(IBDATA1,"^",4)="":1,$P(IBDATA,"^",14)="V":1,$P(IBDATA,"^",15)="*":1,1:0) Q
"RTN","IBATER",35,0)
 ;
"RTN","IBATER",36,0)
 ; now if inpt, must be in 351.67
"RTN","IBATER",37,0)
 I $P(^RMPR(660,IBDA,"AM"),"^",3)'=1,$P(^("AM"),"^",3)'=4,'$D(^IBAT(351.67,"B",$P(IBDATA1,"^",4))) Q
"RTN","IBATER",38,0)
 ;
"RTN","IBATER",39,0)
 Q:'$P(IBDATA,"^",16)  ; no total cost, at least yet
"RTN","IBATER",40,0)
 ;
"RTN","IBATER",41,0)
FILE ; ok transaction needs to be filled in tp files
"RTN","IBATER",42,0)
 ;
"RTN","IBATER",43,0)
 S IBDATA=$$RMPR^IBATFILE(IBDFN,IBDT,$$PPF^IBATUTL(IBDFN),(IBDA_";RMPR(660,"),,$P(IBDATA,"^",16))
"RTN","IBATER",44,0)
 ;
"RTN","IBATER",45,0)
 Q
"RTN","IBATFILE")
0^24^B53128804^B53525846
"RTN","IBATFILE",1,0)
IBATFILE ;LL/ELZ - TRANSFER PRICING FILLING  ; 22-JAN-1999
"RTN","IBATFILE",2,0)
 ;;2.0;INTEGRATED BILLING;**115,389**;21-MAR-94;Build 6
"RTN","IBATFILE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATFILE",4,0)
PAT(DA,IBFAC,IBOVER) ; files patient in transfer pricing returns dfn
"RTN","IBATFILE",5,0)
 Q:'$G(DA) 0
"RTN","IBATFILE",6,0)
 I $D(^IBAT(351.6,DA,0)) Q DA
"RTN","IBATFILE",7,0)
 N DO,DD,DIC,X,DINUM
"RTN","IBATFILE",8,0)
 S DIC="^IBAT(351.6,",DIC(0)="",X=DA,DINUM=DA
"RTN","IBATFILE",9,0)
 S DIC("DR")=".02///"_$$NOW^XLFDT_";.03////"_+$S($G(IBFAC):IBFAC,1:$$PPF^IBATUTL(DA))_";.04///1"_$S($D(IBOVER):";.1////"_+IBOVER,1:"")
"RTN","IBATFILE",10,0)
 D FILE^DICN
"RTN","IBATFILE",11,0)
 Q $S(Y>0:Y,1:0)
"RTN","IBATFILE",12,0)
UPPPF(DA,PPF) ; updates a patient's enrolled facility
"RTN","IBATFILE",13,0)
 I '$G(DA)!('$G(PPF))!('$D(^IBAT(351.6,DA))) Q
"RTN","IBATFILE",14,0)
 N DIE,DR
"RTN","IBATFILE",15,0)
 S DIE="^IBAT(351.6,",DR=".03////"_+PPF D ^DIE
"RTN","IBATFILE",16,0)
 Q
"RTN","IBATFILE",17,0)
ADM(DFN,IBADMDT,IBPREF,IBSOURCE) ; - files admissions
"RTN","IBATFILE",18,0)
 ; IBADMDT=admission date, IBPREF=enrolled facility
"RTN","IBATFILE",19,0)
 ; IBSOURCE=source (movement ien;DGPM(
"RTN","IBATFILE",20,0)
 I '$G(DFN)!('$G(IBADMDT))!('$G(IBPREF))!($G(IBSOURCE)="") Q 0
"RTN","IBATFILE",21,0)
 Q $$NEW(DFN,IBADMDT,IBPREF,IBSOURCE)
"RTN","IBATFILE",22,0)
DIS(DA,IBDISDT,IBPTF,IBDISM) ; - files discharges
"RTN","IBATFILE",23,0)
 ; DA=transaction ien in 351.61, IBDISDT=discharge date
"RTN","IBATFILE",24,0)
 ; IBPTF=ptf pointer, IBDISM=discharge movement pointer
"RTN","IBATFILE",25,0)
 I '$G(DA)!('$G(IBDISDT))!('$G(IBPTF))!('$G(IBDISM)) Q 0
"RTN","IBATFILE",26,0)
 N DIE,DR
"RTN","IBATFILE",27,0)
 S DIE="^IBAT(351.61,"
"RTN","IBATFILE",28,0)
 S DR=".05////C;.1////"_IBDISDT_";1.07////"_IBPTF_";1.08////"_IBDISM
"RTN","IBATFILE",29,0)
 L +^IBAT(351.61,DA):10 I '$T Q "0^Transaction Locked"
"RTN","IBATFILE",30,0)
 D ^DIE L -^IBAT(351.61,DA)
"RTN","IBATFILE",31,0)
 Q DA
"RTN","IBATFILE",32,0)
DISC(DA) ; - deletes discharge data
"RTN","IBATFILE",33,0)
 ; DA=transaction ien in 351.61
"RTN","IBATFILE",34,0)
 N DIE,DR Q:'$G(DA) 0
"RTN","IBATFILE",35,0)
 S DIE="^IBAT(351.61,"
"RTN","IBATFILE",36,0)
 S DR=".05////E;.1///@;1.08///@"
"RTN","IBATFILE",37,0)
 L +^IBAT(351.61,DA):10 I '$T Q "0^Transaction Locked"
"RTN","IBATFILE",38,0)
 D ^DIE L -^IBAT(351.61,DA)
"RTN","IBATFILE",39,0)
 Q DA
"RTN","IBATFILE",40,0)
INPT(IBIEN,IBDRG,IBDRGA,IBLOS,IBHIGH,IBOUT,IBOUTR) ; - file remaining inpt
"RTN","IBATFILE",41,0)
 ; IBIEN=transaction ien in 351.61, IBDRG=DRG pointer
"RTN","IBATFILE",42,0)
 ; IBDRGA=DRG amount,IBLOS=inpatient LOS,IBHIGH=high trim days
"RTN","IBATFILE",43,0)
 ; IBOUT=outlier days,IBOUTR=outlier rate
"RTN","IBATFILE",44,0)
 I '$G(IBIEN)!('$G(IBLOS))!('$D(IBHIGH))!('$D(IBOUT)) Q 0
"RTN","IBATFILE",45,0)
 N DIE,X,Y,DR
"RTN","IBATFILE",46,0)
 S DIE="^IBAT(351.61,",DA=IBIEN
"RTN","IBATFILE",47,0)
 S DR="1.03////"_IBLOS_";1.04////"_IBHIGH_";1.05////"_IBOUT
"RTN","IBATFILE",48,0)
 S:$G(IBDRG) DR=DR_";1.01///"_IBDRG
"RTN","IBATFILE",49,0)
 S:$G(IBDRGA) DR=DR_";1.02////"_IBDRGA
"RTN","IBATFILE",50,0)
 S:$G(IBOUTR) DR=DR_";1.06////"_IBOUTR
"RTN","IBATFILE",51,0)
 L +^IBAT(351.61,IBIEN):10 I '$T Q "0^Transaction Locked"
"RTN","IBATFILE",52,0)
 D ^DIE,TOTAL^IBATCM(IBIEN) I $P($G(^IBAT(351.61,IBIEN,6)),"^",2) D
"RTN","IBATFILE",53,0)
 . S DR=";.05////P;.13////"_DT D ^DIE
"RTN","IBATFILE",54,0)
 L -^IBAT(351.61,IBIEN)
"RTN","IBATFILE",55,0)
 Q IBIEN
"RTN","IBATFILE",56,0)
OUT(DFN,IBEDT,IBPREF,IBSOURCE,IBPROC) ; - files outpatient data
"RTN","IBATFILE",57,0)
 ; DFN=dfn for patient, IBEDT=event date, IBPREF=enrolled facility
"RTN","IBATFILE",58,0)
 ; IBSOURCE=source (outpatient encounter ien;SCE(
"RTN","IBATFILE",59,0)
 ; IBPROC=procedures (by ref in array)
"RTN","IBATFILE",60,0)
 I '$G(DFN)!('$G(IBEDT))!('$G(IBPREF))!($G(IBSOURCE)="") Q 0
"RTN","IBATFILE",61,0)
 N IBIEN,IBX,Y,IBPRICE
"RTN","IBATFILE",62,0)
 S IBIEN=$$NEW(DFN,IBEDT,IBPREF,IBSOURCE) I 'IBIEN Q IBIEN
"RTN","IBATFILE",63,0)
 L +^IBAT(351.61,IBIEN):10 I '$T Q "0^Transaction Locked"
"RTN","IBATFILE",64,0)
 S IBIEN=$$PROC(IBIEN,.IBPROC,.IBPRICE) ; file procedures
"RTN","IBATFILE",65,0)
 I IBIEN<1 L -^IBAT(351.61,IBIEN) Q "0^Unable to file procedures"
"RTN","IBATFILE",66,0)
 S DIE="^IBAT(351.61,",DA=IBIEN
"RTN","IBATFILE",67,0)
 S DR=".1////"_IBEDT_";.05////"_$S($G(IBPRICE):"C",1:"P;.13////"_DT)
"RTN","IBATFILE",68,0)
 D ^DIE,TOTAL^IBATCM(IBIEN) L -^IBAT(351.61,IBIEN)
"RTN","IBATFILE",69,0)
 Q IBIEN
"RTN","IBATFILE",70,0)
UPDATE(IBIEN,IBPROC) ; -- updates procedures
"RTN","IBATFILE",71,0)
 ; IBIEN=351.61 ien, IBPROC=procedures by ref like above
"RTN","IBATFILE",72,0)
 Q:'$G(IBIEN) 0
"RTN","IBATFILE",73,0)
 N IBX,IBPRICE,DIE,DA,DR,X,Y
"RTN","IBATFILE",74,0)
 S IBIEN(0)=^IBAT(351.61,IBIEN,0),IBEDT=$P(IBIEN(0),"^",4)
"RTN","IBATFILE",75,0)
 ; if approved, cancel and create a new one
"RTN","IBATFILE",76,0)
 I $P(IBIEN(0),"^",5)="A" D  Q IBIEN
"RTN","IBATFILE",77,0)
 . S IBIEN=$$CANC(IBIEN)
"RTN","IBATFILE",78,0)
 . S IBIEN=$$OUT($P(IBIEN(0),"^",2),IBEDT,$P(IBIEN(0),"^",11),$P(IBIEN(0),"^",12),.IBPROC)
"RTN","IBATFILE",79,0)
 L +^IBAT(351.61,IBIEN):10 I '$T Q "0^Transaction Locked"
"RTN","IBATFILE",80,0)
 ; first clean out procedures there
"RTN","IBATFILE",81,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBIEN,3,IBX)) Q:IBX<1  S DIK="^IBAT(351.61,"_IBIEN_",3,",DA(1)=IBIEN,DA=IBX D ^DIK
"RTN","IBATFILE",82,0)
 S IBIEN=$$PROC(IBIEN,.IBPROC,.IBPRICE) ; file procedures
"RTN","IBATFILE",83,0)
 I IBIEN<1 L -^IBAT(351.61,IBIEN) Q "0^Unable to file procedures"
"RTN","IBATFILE",84,0)
 S DIE="^IBAT(351.61,",DA=IBIEN
"RTN","IBATFILE",85,0)
 S DR=".1////"_IBEDT_";.05////"_$S($G(IBPRICE):"C",1:"P;.13////"_DT)
"RTN","IBATFILE",86,0)
 D ^DIE,TOTAL^IBATCM(IBIEN) L -^IBAT(351.61,IBIEN)
"RTN","IBATFILE",87,0)
 Q IBIEN
"RTN","IBATFILE",88,0)
RX(DFN,IBEDT,IBPREF,IBSOURCE,IBDRUG,IBQTY,IBCOST) ; - files pharmacy data
"RTN","IBATFILE",89,0)
 ; DFN=dfn for patient, IBEDT=event date, IBPREF=enrolled facility
"RTN","IBATFILE",90,0)
 ; IBSOURCE=source (prescription ien;PSRX(;refill #
"RTN","IBATFILE",91,0)
 ; IBDRUG=ien from drug file
"RTN","IBATFILE",92,0)
 ; IBQTY=quantity of drug, IBCOST=drug cost
"RTN","IBATFILE",93,0)
 I '$G(DFN)!('$G(IBEDT))!('$G(IBPREF))!($G(IBSOURCE)="")!('$G(IBDRUG))!('$G(IBQTY)) Q 0
"RTN","IBATFILE",94,0)
 N IBIEN
"RTN","IBATFILE",95,0)
 S IBIEN=$$NEW(DFN,IBEDT,IBPREF,IBSOURCE) I 'IBIEN Q IBIEN
"RTN","IBATFILE",96,0)
 S DIE="^IBAT(351.61,",DA=IBIEN
"RTN","IBATFILE",97,0)
 S DR=".1////"_+IBEDT_";4.01////"_+IBDRUG_";4.02////"_+IBQTY_";.05////"_$S($G(IBCOST):"P;4.03////"_+IBCOST_";.13////"_DT,1:"C")
"RTN","IBATFILE",98,0)
 L +^IBAT(351.61,IBIEN):10 I '$T Q "0^Transaction Locked"
"RTN","IBATFILE",99,0)
 D ^DIE D:$G(IBCOST) TOTAL^IBATCM(IBIEN)
"RTN","IBATFILE",100,0)
 L -^IBAT(351.61,IBIEN)
"RTN","IBATFILE",101,0)
 Q IBIEN
"RTN","IBATFILE",102,0)
 ;
"RTN","IBATFILE",103,0)
RMPR(DFN,IBEDT,IBPREF,IBSOURCE,IBPROS,IBCOST) ; - files prost. data
"RTN","IBATFILE",104,0)
 ; DFN=dfn for patient, IBEDT=event date, IBPREF=enrolled facility
"RTN","IBATFILE",105,0)
 ; IBSOURCE=source (prost ien;RMPR(660,
"RTN","IBATFILE",106,0)
 ; IBPROS=ien from file 661 - removed in 389 no longer valid
"RTN","IBATFILE",107,0)
 ; IBCOST=item cost
"RTN","IBATFILE",108,0)
 I '$G(DFN)!('$G(IBEDT))!('$G(IBPREF))!($G(IBSOURCE)="") Q 0
"RTN","IBATFILE",109,0)
 N IBIEN
"RTN","IBATFILE",110,0)
 S IBIEN=$$NEW(DFN,IBEDT,IBPREF,IBSOURCE) I 'IBIEN Q IBIEN
"RTN","IBATFILE",111,0)
 S DIE="^IBAT(351.61,",DA=IBIEN
"RTN","IBATFILE",112,0)
 S DR=".1////"_+IBEDT_";.05////"_$S($G(IBCOST):"P;4.05////"_+IBCOST_";.13////"_DT,1:"C")
"RTN","IBATFILE",113,0)
 L +^IBAT(351.61,IBIEN):10 I '$T Q "0^Transaction Locked"
"RTN","IBATFILE",114,0)
 D ^DIE D:$G(IBCOST) TOTAL^IBATCM(IBIEN)
"RTN","IBATFILE",115,0)
 L -^IBAT(351.61,IBIEN)
"RTN","IBATFILE",116,0)
 Q IBIEN
"RTN","IBATFILE",117,0)
 ;
"RTN","IBATFILE",118,0)
CANC(DA) ; - used to cancel any transaction
"RTN","IBATFILE",119,0)
 N DIE,DR,X,Y Q:'$G(DA)
"RTN","IBATFILE",120,0)
 S DIE="^IBAT(351.61,",DR=".05///X" D ^DIE
"RTN","IBATFILE",121,0)
 Q
"RTN","IBATFILE",122,0)
DEL(DA) ; - used to delete a transaction (only valid for inpatients or rx)
"RTN","IBATFILE",123,0)
 N DIK,DR,X,Y,Z Q:'$G(DA)
"RTN","IBATFILE",124,0)
 S Z=$G(^IBAT(351.61,DA,0)) Q:'Z
"RTN","IBATFILE",125,0)
 Q:$P(Z,"^",12)["SCE("
"RTN","IBATFILE",126,0)
 S DIK="^IBAT(351.61," D ^DIK
"RTN","IBATFILE",127,0)
 Q
"RTN","IBATFILE",128,0)
NEW(DFN,IBEDT,IBPREF,IBSOURCE) ; - creates new transaction and returns ien
"RTN","IBATFILE",129,0)
 N IBIEN,IBSITE,DD,DO,DIC,X,Y,DINUM,DLAYGO,DIE,DA,DR
"RTN","IBATFILE",130,0)
 S IBSITE=$$SITE^IBATUTL
"RTN","IBATFILE",131,0)
 L +^IBAT(351.6,DFN):10 I '$T Q "0^Patient file Locked"
"RTN","IBATFILE",132,0)
 L +^IBAT(351.61,0):10 I '$T Q "0^Transaction File Locked"
"RTN","IBATFILE",133,0)
 S IBIEN=$P(^IBAT(351.61,0),"^",3)+1
"RTN","IBATFILE",134,0)
 F IBIEN=IBIEN:1 Q:'$D(^IBAT(351.61,"B",IBSITE_IBIEN))
"RTN","IBATFILE",135,0)
 S DIC="^IBAT(351.61,",DIC(0)="",X=IBSITE_IBIEN,DINUM=IBIEN,DLAYGO=351.61
"RTN","IBATFILE",136,0)
 S DIC("DR")=".02////"_+DFN_";.03////"_+DT_";.04////"_+IBEDT_";.05////E;.09////"_+IBEDT_";.11////"_+IBPREF_";.12////^S X=IBSOURCE"
"RTN","IBATFILE",137,0)
 D FILE^DICN I +Y<1 L -(^IBAT(351.61,0),^IBAT(351.6,DFN)) Q "0^Unable to add new transaction"
"RTN","IBATFILE",138,0)
 S DIE="^IBAT(351.6,",DA=+DFN
"RTN","IBATFILE",139,0)
 S DR=$S(IBSOURCE["DGPM":".05",IBSOURCE["SCE":".06",IBSOURCE["RMPR":".11",1:".07")_"////"_+IBEDT
"RTN","IBATFILE",140,0)
 I $P(^IBAT(351.6,DFN,0),"^",+(DR*100))<IBEDT D ^DIE
"RTN","IBATFILE",141,0)
 L -(^IBAT(351.61,0),^IBAT(351.6,DFN))
"RTN","IBATFILE",142,0)
 Q IBIEN
"RTN","IBATFILE",143,0)
PROC(IBIEN,IBPROC,IBPRICE) ; files procedures
"RTN","IBATFILE",144,0)
 N X,Y
"RTN","IBATFILE",145,0)
 S Y=1,IBX=0 F  S IBX=$O(IBPROC(IBX)) Q:IBX=""!(+Y<1)  D
"RTN","IBATFILE",146,0)
 . N DIC,X,DA,DD,DO
"RTN","IBATFILE",147,0)
 . S DIC="^IBAT(351.61,"_IBIEN_",3,",DIC(0)="L"
"RTN","IBATFILE",148,0)
 . S X=IBX,DA(1)=IBIEN
"RTN","IBATFILE",149,0)
 . ;S DIC("P")=$P(^DD(351.61,3,0),"^",2) ; no longer required with fm22
"RTN","IBATFILE",150,0)
 . S DIC("DR")=".02////"_$P(IBPROC(IBX),"^")
"RTN","IBATFILE",151,0)
 . I $P(IBPROC(IBX),"^",2) S DIC("DR")=DIC("DR")_";.03////"_$P(IBPROC(IBX),"^",2)
"RTN","IBATFILE",152,0)
 . E  S IBPRICE=1
"RTN","IBATFILE",153,0)
 . D FILE^DICN
"RTN","IBATFILE",154,0)
 I +Y<1 L -^IBAT(351.61,IBIEN) Q "0^Unable to file procedures"
"RTN","IBATFILE",155,0)
 Q IBIEN
"RTN","IBATFILE",156,0)
DX(IBIEN,IBPTF) ; - files dx info
"RTN","IBATFILE",157,0)
 Q IBIEN
"RTN","IBATFILE",158,0)
 N IBX,Y S Y=1,IBX="" F  S IBX=$O(IBDX(IBX)) Q:IBX=""!(+Y<1)  D
"RTN","IBATFILE",159,0)
 . N DD,DO,DIC,DINUM,X
"RTN","IBATFILE",160,0)
 . S DIC="^IBAT(351.61,"_IBIEN_",2,",DIC(0)="",X=$P(IBDX(IBX),"^")
"RTN","IBATFILE",161,0)
 . ;S DA(1)=IBIEN,DIC("P")=$P(^DD(351.61,2,0),"^",2) D FILE^DICN
"RTN","IBATFILE",162,0)
 . ; no longer required with fm22
"RTN","IBATFILE",163,0)
 . S DA(1)=IBIEN D FILE^DICN
"RTN","IBATFILE",164,0)
 Q $S(+Y<1:"0^Unable to file diagnosis's",1:IBIEN)
"RTN","IBATFILE",165,0)
 ;
"RTN","IBATFILE",166,0)
INIT ; called to possibly initialize the 351.6 file if not done
"RTN","IBATFILE",167,0)
 N IBS,ZTRTN,ZTDESC,ZTIO,ZTSK,X,Y
"RTN","IBATFILE",168,0)
 ;
"RTN","IBATFILE",169,0)
 Q:$O(^IBAT(351.6,0))  ; already populated
"RTN","IBATFILE",170,0)
 ;
"RTN","IBATFILE",171,0)
 ; is Transfer Pricing active or not for any
"RTN","IBATFILE",172,0)
 S IBS=$G(^IBE(350.9,1,10))
"RTN","IBATFILE",173,0)
 I '$P(IBS,"^",2),'$P(IBS,"^",3),'$P(IBS,"^",4),'$P(IBS,"^",5) Q
"RTN","IBATFILE",174,0)
 ;
"RTN","IBATFILE",175,0)
 ; queue off job
"RTN","IBATFILE",176,0)
 W !!,"It appears you have never used Transfer Pricing before.  I need to populate",!,"the Transfer Pricing patient file.  Please select a date/time to do this.",!
"RTN","IBATFILE",177,0)
 S ZTRTN="ADDTP^IBATFILE",ZTDESC="Initializing Transfer Pricing Patient File",ZTIO="" D ^%ZTLOAD
"RTN","IBATFILE",178,0)
 I $G(ZTSK) W !,"Task Queued #",ZTSK
"RTN","IBATFILE",179,0)
 ;
"RTN","IBATFILE",180,0)
 Q
"RTN","IBATFILE",181,0)
ADDTP ; Add Transfer Pricing patients to file #351.6
"RTN","IBATFILE",182,0)
 ;
"RTN","IBATFILE",183,0)
 N DFN,IBADM,IBDFN,IBPREF,IBADMDT,IBX
"RTN","IBATFILE",184,0)
 ;
"RTN","IBATFILE",185,0)
 S DFN=0 F  S DFN=$O(^DPT(DFN)) Q:'DFN  D
"RTN","IBATFILE",186,0)
 .;
"RTN","IBATFILE",187,0)
 .S IBDFN=$$TPP^IBATUTL(DFN)
"RTN","IBATFILE",188,0)
 .Q:'IBDFN
"RTN","IBATFILE",189,0)
 .;
"RTN","IBATFILE",190,0)
 .; - see if they are admitted
"RTN","IBATFILE",191,0)
 .S IBADM=$G(^DPT(DFN,.105))
"RTN","IBATFILE",192,0)
 .I IBADM D
"RTN","IBATFILE",193,0)
 ..S IBPREF=+$P($G(^IBAT(351.6,DFN,0)),"^",3)
"RTN","IBATFILE",194,0)
 ..S IBADMDT=+$G(^DGPM(IBADM,0))
"RTN","IBATFILE",195,0)
 ..S IBX=$$ADM(DFN,IBADMDT,IBPREF,IBADM_";DGPM(")
"RTN","IBATFILE",196,0)
 ;
"RTN","IBATFILE",197,0)
 Q
"RTN","IBATLM1B")
0^25^B54664867^B54289858
"RTN","IBATLM1B",1,0)
IBATLM1B ;LL/ELZ - TRANSFER PRICING TRANSACTION LIST MENU ; 15-SEP-1998
"RTN","IBATLM1B",2,0)
 ;;2.0;INTEGRATED BILLING;**115,261,389**;21-MAR-94;Build 6
"RTN","IBATLM1B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATLM1B",4,0)
 ;
"RTN","IBATLM1B",5,0)
CF ; -- change facility from patient level
"RTN","IBATLM1B",6,0)
 D LMOPT^IBATUTL,CFP^IBATLM0A(DFN),HDR^IBATLM1
"RTN","IBATLM1B",7,0)
 Q
"RTN","IBATLM1B",8,0)
CS ; -- change status of patient from patient level
"RTN","IBATLM1B",9,0)
 D LMOPT^IBATUTL,CSP^IBATLM0A(DFN),HDR^IBATLM1
"RTN","IBATLM1B",10,0)
 Q
"RTN","IBATLM1B",11,0)
CT ; -- cancel a transaction
"RTN","IBATLM1B",12,0)
 N IBVAL,DIE,DA,DR,DTOUT,%
"RTN","IBATLM1B",13,0)
 D LMOPT^IBATUTL,EN^VALM2($G(XQORNOD(0)))
"RTN","IBATLM1B",14,0)
 S (DA,IBVAL)=0,IBVAL=$O(VALMY(IBVAL)) Q:'IBVAL
"RTN","IBATLM1B",15,0)
 S DA=$O(@VALMAR@("INDEX",IBVAL,DA))
"RTN","IBATLM1B",16,0)
 I $P(^IBAT(351.61,DA,0),U,5)="X" W !!,"Transaction already cancelled!" D H Q
"RTN","IBATLM1B",17,0)
 W !!,"Are you sure you want to cancel this transaction"
"RTN","IBATLM1B",18,0)
 S %=2 D YN^DICN Q:%'=1
"RTN","IBATLM1B",19,0)
 D CANC^IBATFILE(DA),ARRAY^IBATLM1A(VALMAR)
"RTN","IBATLM1B",20,0)
 Q
"RTN","IBATLM1B",21,0)
CD ; -- change the current date range for transactions displayed
"RTN","IBATLM1B",22,0)
 N IBSAVE S IBSAVE=IBBDT_"^"_IBEDT
"RTN","IBATLM1B",23,0)
 D LMOPT^IBATUTL
"RTN","IBATLM1B",24,0)
 I $$SLDR^IBATUTL S IBBDT=$P(IBSAVE,"^"),IBEDT=$P(IBSAVE,"^",2)
"RTN","IBATLM1B",25,0)
 D ARRAY^IBATLM1A(VALMAR),HDR^IBATLM1
"RTN","IBATLM1B",26,0)
 Q
"RTN","IBATLM1B",27,0)
CP ; -- change the currently selected patient
"RTN","IBATLM1B",28,0)
 N IBDFN
"RTN","IBATLM1B",29,0)
 D LMOPT^IBATUTL
"RTN","IBATLM1B",30,0)
 S IBDFN=$$SLPT^IBATUTL I 'IBDFN Q
"RTN","IBATLM1B",31,0)
 I $$SLDR^IBATUTL Q
"RTN","IBATLM1B",32,0)
 S DFN=IBDFN K ^TMP("VALM DATA",$J),^TMP("VALMAR",$J)
"RTN","IBATLM1B",33,0)
 D HDR^IBATLM1,ARRAY^IBATLM1A(VALMAR)
"RTN","IBATLM1B",34,0)
 Q
"RTN","IBATLM1B",35,0)
AT ; -- add a transaction
"RTN","IBATLM1B",36,0)
 N X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBATLM1B",37,0)
 D LMOPT^IBATUTL
"RTN","IBATLM1B",38,0)
 S DIR(0)="SMBA^I:Inpatient;O:Outpatient;P:Prescription;R:Prosthetic"
"RTN","IBATLM1B",39,0)
 S DIR("A")="Select type of Transaction to add: " D ^DIR Q:$D(DIRUT)
"RTN","IBATLM1B",40,0)
 D @Y K ^TMP("VALM DATA",$J),^TMP("VALMAR",$J)
"RTN","IBATLM1B",41,0)
 D HDR^IBATLM1,ARRAY^IBATLM1A(VALMAR)
"RTN","IBATLM1B",42,0)
 Q
"RTN","IBATLM1B",43,0)
I ; -- select an inpatient stay and add
"RTN","IBATLM1B",44,0)
 N IBXA,IBADM,DIRUT,IBIEN,VAIP,IBCHARGE,IBPPF,IBRES
"RTN","IBATLM1B",45,0)
 S IBXA=7,IBADM=+$$ADSEL^IBECEA31(DFN) Q:IBADM<0
"RTN","IBATLM1B",46,0)
 I IBADM=0 W !!,"Patient has no admissions on file." D H Q
"RTN","IBATLM1B",47,0)
 D DUP(IBADM_";DGPM(",.DIRUT)
"RTN","IBATLM1B",48,0)
 I $D(DIRUT) D H Q
"RTN","IBATLM1B",49,0)
 S VAIP("E")=IBADM D IN5^VADPT S IBPPF=$$PPF^IBATUTL(DFN)
"RTN","IBATLM1B",50,0)
 S IBIEN=$$ADM^IBATFILE(DFN,+VAIP(13,1),IBPPF,(+IBADM)_";DGPM(")
"RTN","IBATLM1B",51,0)
 I 'IBIEN D M(,$P(IBIEN,"^",2)) Q
"RTN","IBATLM1B",52,0)
 I '$G(VAIP(17)) D M(IBIEN,"missing discharge information") Q
"RTN","IBATLM1B",53,0)
 S IBRES=$$DIS^IBATFILE(IBIEN,+VAIP(17,1),VAIP(12),VAIP(17))
"RTN","IBATLM1B",54,0)
 I 'IBRES D M(IBIEN,$P(IBRES,"^",2)) Q
"RTN","IBATLM1B",55,0)
 S IBFINDRT=$$FINDRT^IBATEI(VAIP(12),VAIP(13),DFN)
"RTN","IBATLM1B",56,0)
 I '+IBFINDRT D M(IBIEN,"Cannot price transaction") Q
"RTN","IBATLM1B",57,0)
 I $P(IBFINDRT,"^",3)="B" S IBRES=$$INPT^IBATFILE(IBIEN,0,0,$P(IBFINDRT,"^",4),0,$P(IBFINDRT,"^",4),$P(IBFINDRT,"^",7))
"RTN","IBATLM1B",58,0)
 E  S IBRES=$$INPT^IBATFILE(IBIEN,$P(IBFINDRT,"^",3),$P(IBFINDRT,"^",2),$P(IBFINDRT,"^",4),$P(IBFINDRT,"^",5),$P(IBFINDRT,"^",6),$P(IBFINDRT,"^",7))
"RTN","IBATLM1B",59,0)
 I 'IBRES D M(IBIEN,"Error in filling pricing information") Q
"RTN","IBATLM1B",60,0)
 D M(IBIEN)
"RTN","IBATLM1B",61,0)
 Q
"RTN","IBATLM1B",62,0)
M(X,Y) ; Prints message and hangs
"RTN","IBATLM1B",63,0)
 N IBSITE S IBSITE=$$SITE^IBATUTL
"RTN","IBATLM1B",64,0)
 I $D(X) W !,"Transaction #",IBSITE,X," Added"
"RTN","IBATLM1B",65,0)
 I $D(Y) W !,"Cannot complete, ",Y
"RTN","IBATLM1B",66,0)
 D H
"RTN","IBATLM1B",67,0)
 Q
"RTN","IBATLM1B",68,0)
O ; -- select an outpatient stay
"RTN","IBATLM1B",69,0)
 N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,IBDATA,IBX,IBC,CPTLIST,IBIEN,IBFAC
"RTN","IBATLM1B",70,0)
 K ^TMP("IBAT",$J)
"RTN","IBATLM1B",71,0)
 S DIR(0)="D^::AEPX",DIR("A")="Visit Date" D ^DIR Q:$D(DIRUT)
"RTN","IBATLM1B",72,0)
 S IBDATA("DFN")=DFN,IBDATA("BDT")=Y,IBDATA("EDT")=Y+.99999
"RTN","IBATLM1B",73,0)
 ;
"RTN","IBATLM1B",74,0)
 ; scan for the appointments and set up tmp global
"RTN","IBATLM1B",75,0)
 ; screen to eliminate children and inpatient appointments
"RTN","IBATLM1B",76,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBDATA,"I '$P(Y0,""^"",6),$P(Y0,""^"",12)'=8","S ^TMP(""IBAT"",$J,Y)=Y0","")
"RTN","IBATLM1B",77,0)
 ;
"RTN","IBATLM1B",78,0)
 I '$D(^TMP("IBAT",$J)) W !!,"No appointments exist for the date!" D H Q
"RTN","IBATLM1B",79,0)
 W !,?10,"Choose which Visit:" S IBX=0
"RTN","IBATLM1B",80,0)
 F IBC=1:1 S IBX=$O(^TMP("IBAT",$J,IBX)) Q:IBX<1  S IBDATA=^(IBX) D
"RTN","IBATLM1B",81,0)
 . W !,?4,IBC,?10,$$FMTE^XLFDT($P(IBDATA,"^"),"1P")
"RTN","IBATLM1B",82,0)
 . W ?35,$$EX^IBATUTL(409.68,.04,$P(IBDATA,"^",4))
"RTN","IBATLM1B",83,0)
 . W ?55,$$EX^IBATUTL(409.68,.12,$P(IBDATA,"^",12))
"RTN","IBATLM1B",84,0)
 S DIR(0)="N^1:"_(IBC-1),DIR("A")="Select" D ^DIR Q:$D(DIRUT)
"RTN","IBATLM1B",85,0)
 S IBX=0 F IBC=1:1:Y S IBX=$O(^TMP("IBAT",$J,IBX))
"RTN","IBATLM1B",86,0)
 ; check for duplicates
"RTN","IBATLM1B",87,0)
 D DUP(IBX_";SCE(",.DIRUT) I $D(DIRUT) D H Q
"RTN","IBATLM1B",88,0)
 ; setup visit info
"RTN","IBATLM1B",89,0)
 S IBX(0)=^TMP("IBAT",$J,IBX)
"RTN","IBATLM1B",90,0)
 D GETCPT^SDOE(IBX,"CPTLIST") ;GETDX^SDOE(IBX,"DXLIST")
"RTN","IBATLM1B",91,0)
 S IBFAC=$$PPF^IBATUTL(DFN)
"RTN","IBATLM1B",92,0)
 ; ok now lets format cpts and price
"RTN","IBATLM1B",93,0)
 S IBIEN=0 F  S IBIEN=$O(CPTLIST(IBIEN)) Q:IBIEN<1  D
"RTN","IBATLM1B",94,0)
 . N IBCPT,IBQTY,IBPRICE
"RTN","IBATLM1B",95,0)
 . S IBCPT=$P(CPTLIST(IBIEN),"^"),IBQTY=$P(CPTLIST(IBIEN),"^",16)
"RTN","IBATLM1B",96,0)
 . S IBPRICE=$$OPT^IBATCM(IBCPT,$P(IBX(0),"^"),IBFAC)
"RTN","IBATLM1B",97,0)
 . S IBIEN(IBCPT)=IBQTY_"^"_$S(IBPRICE:$P(IBPRICE,"^",4),1:0)
"RTN","IBATLM1B",98,0)
 S IBIEN=$$OUT^IBATFILE(DFN,$P(IBX(0),"^"),IBFAC,IBX_";SCE(",.IBIEN)
"RTN","IBATLM1B",99,0)
 W !!,"Transaction Number ",$P(^IBAT(351.61,IBIEN,0),"^")," Added!" D H
"RTN","IBATLM1B",100,0)
 K ^TMP("IBAT",$J)
"RTN","IBATLM1B",101,0)
 Q
"RTN","IBATLM1B",102,0)
P ; -- select an rx
"RTN","IBATLM1B",103,0)
 N IBRX,IBPSRX,IBOUT,IBCOUNT,DIRUT,DIR,IBP,IBNUM,IBSITE,IBQUIT,IBBDT,IBEDT
"RTN","IBATLM1B",104,0)
 S (IBCOUNT,IBOUT)=0
"RTN","IBATLM1B",105,0)
 Q:$$SLDR^IBATUTL
"RTN","IBATLM1B",106,0)
 D RX^IBATRX(DFN,IBBDT,IBEDT,.IBRX)
"RTN","IBATLM1B",107,0)
 I '$D(IBRX) W !!,"No Rx's on file for date range selected." D H Q
"RTN","IBATLM1B",108,0)
 W @IOF,!,"Prescriptions Issued:",!
"RTN","IBATLM1B",109,0)
 S IBPSRX=0 F  S IBPSRX=$O(IBRX(IBPSRX)) Q:IBPSRX=""!(IBOUT)  D
"RTN","IBATLM1B",110,0)
 . S IBDT=0 F  S IBDT=$O(IBRX(IBPSRX,IBDT)) Q:IBDT<1!(IBOUT)  D
"RTN","IBATLM1B",111,0)
 .. S IBDAT=IBRX(IBPSRX,IBDT),IBCOUNT=IBCOUNT+1
"RTN","IBATLM1B",112,0)
 .. W !,IBCOUNT,?4,$$FMTE^XLFDT(IBDT,"5D"),?18,$P(IBDAT,"^")
"RTN","IBATLM1B",113,0)
 .. W "(",$P(IBDAT,"^",2),")",?35,$E($P(IBDAT,"^",4),1,27)
"RTN","IBATLM1B",114,0)
 .. W ?65,$J($FN($P(IBDAT,"^",5)*$P(IBDAT,"^",6),",",2),12)
"RTN","IBATLM1B",115,0)
 .. ;I $Y+4>IOSL D H X:'$D(DIRUT) "W @IOF,!" I $D(DIRUT) S IBOUT=1 Q
"RTN","IBATLM1B",116,0)
 .. S IBNUM(IBCOUNT)=IBPSRX_"^"_IBDT
"RTN","IBATLM1B",117,0)
 W ! K DIRUT S DIR(0)="L^1:"_IBCOUNT,DIR("A")="Which Prescriptions"
"RTN","IBATLM1B",118,0)
 D ^DIR Q:$D(DIRUT)  W !!,"Selected number(s): "_Y S IBNUM=Y
"RTN","IBATLM1B",119,0)
 W !,"Ok to add: " S %=1 D YN^DICN I %'=1 D H Q
"RTN","IBATLM1B",120,0)
 S IBFAC=$$PPF^IBATUTL(DFN),IBSITE=$$SITE^IBATUTL
"RTN","IBATLM1B",121,0)
 F IBP=1:1 S IBRX=$P(IBNUM,",",IBP) Q:'IBRX  D
"RTN","IBATLM1B",122,0)
 . S IBRX(0)=IBRX($P(IBNUM(IBRX),"^"),$P(IBNUM(IBRX),"^",2))
"RTN","IBATLM1B",123,0)
 . D DUP($P(IBRX(0),"^")_";PSRX(;"_$P(IBRX(0),"^",2),.IBQUIT)
"RTN","IBATLM1B",124,0)
 . I $G(IBQUIT) K IBQUIT Q
"RTN","IBATLM1B",125,0)
 . W !!,"Adding Transaction number ",IBSITE
"RTN","IBATLM1B",126,0)
 . W $$RX^IBATFILE(DFN,$P(IBNUM(IBRX),"^",2),IBFAC,$P(IBRX(0),"^")_";PSRX(;"_$P(IBRX(0),"^",2),$P(IBRX(0),"^",3),$P(IBRX(0),"^",5),$P(IBRX(0),"^",6))
"RTN","IBATLM1B",127,0)
 . W "!" H 1
"RTN","IBATLM1B",128,0)
 D H
"RTN","IBATLM1B",129,0)
 Q
"RTN","IBATLM1B",130,0)
R ; -- select an prosthetic
"RTN","IBATLM1B",131,0)
 N IBBDT,IBEDT,IBCOUNT,IBOUT,IBDA,IBDATA,IBDATA1,IBP,IBC,IBCOUNT,%,DIRUT
"RTN","IBATLM1B",132,0)
 ;
"RTN","IBATLM1B",133,0)
 S (IBCOUNT,IBOUT)=0
"RTN","IBATLM1B",134,0)
 Q:$$SLDR^IBATUTL
"RTN","IBATLM1B",135,0)
 ;
"RTN","IBATLM1B",136,0)
 ; look up prosthetic devices issued
"RTN","IBATLM1B",137,0)
 S IBDA="" F  S IBDA=$O(^RMPR(660,"C",DFN,IBDA)) Q:'IBDA  D
"RTN","IBATLM1B",138,0)
 . ;
"RTN","IBATLM1B",139,0)
 . ; valid data
"RTN","IBATLM1B",140,0)
 . S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""  S IBDATA1=$G(^RMPR(660,+IBDA,1))
"RTN","IBATLM1B",141,0)
 . ;
"RTN","IBATLM1B",142,0)
 . ; valid date range
"RTN","IBATLM1B",143,0)
 . I $P(IBDATA,"^",12)<IBBDT!($P(IBDATA,"^",12)>IBEDT) Q
"RTN","IBATLM1B",144,0)
 . ;
"RTN","IBATLM1B",145,0)
 . ; checks from RMPRBIL copied 4/7/2000 with mod for AM node patients
"RTN","IBATLM1B",146,0)
 . I $S('$D(^RMPR(660,IBDA,"AM")):1,$P(IBDATA,"^",9)="":1,$P(IBDATA,"^",12)="":1,$P(IBDATA1,"^",4)="":1,$P(IBDATA,"^",14)="V":1,$P(IBDATA,"^",15)="*":1,1:0) Q
"RTN","IBATLM1B",147,0)
 . ;
"RTN","IBATLM1B",148,0)
 . ; set array
"RTN","IBATLM1B",149,0)
 . S IBCOUNT=IBCOUNT+1,IBP(IBCOUNT,IBDA)=IBDATA
"RTN","IBATLM1B",150,0)
 ;
"RTN","IBATLM1B",151,0)
 I 'IBCOUNT W !!,"No Prosthetic Devices on file for date range selected." D H Q
"RTN","IBATLM1B",152,0)
 ;
"RTN","IBATLM1B",153,0)
 W @IOF,!,"Prosthetic Devices Issued:",!
"RTN","IBATLM1B",154,0)
 F IBC=1:1:IBCOUNT Q:IBOUT  D
"RTN","IBATLM1B",155,0)
 . S IBDATA=IBP(IBC,$O(IBP(IBC,0)))
"RTN","IBATLM1B",156,0)
 . W !,IBC,?4,$$FMTE^XLFDT($P(IBDATA,"^",12),"5D")
"RTN","IBATLM1B",157,0)
 . W ?20,$E($P($$PIN^IBATUTL($O(IBP(IBC,0))),U,2),1,28),?50,"("
"RTN","IBATLM1B",158,0)
 . W $$EX^IBATUTL(660,62,$P(^RMPR(660,$O(IBP(IBC,0)),"AM"),"^",3)),")"
"RTN","IBATLM1B",159,0)
 . W ?65,$J($FN($P(IBDATA,"^",16),",",2),12)
"RTN","IBATLM1B",160,0)
 ;
"RTN","IBATLM1B",161,0)
 W ! K DIRUT S DIR(0)="N^1:"_IBCOUNT_":0"
"RTN","IBATLM1B",162,0)
 S DIR("A")="Which Prosthetic Device" D ^DIR Q:$D(DIRUT)  S IBC=+Y
"RTN","IBATLM1B",163,0)
 W !,"Ok to add: " S %=1 D YN^DICN I %'=1 D H Q
"RTN","IBATLM1B",164,0)
 S IBDA=$O(IBP(IBC,0)),IBDATA=IBP(IBC,IBDA)
"RTN","IBATLM1B",165,0)
 D DUP(IBDA_";RMPR(660,",.DIRUT)
"RTN","IBATLM1B",166,0)
 I $D(DIRUT) D H Q
"RTN","IBATLM1B",167,0)
 W !!,"Adding Transaction number ",$$SITE^IBATUTL
"RTN","IBATLM1B",168,0)
 W $$RMPR^IBATFILE(DFN,$P(IBDATA,"^",12),$$PPF^IBATUTL(DFN),(IBDA_";RMPR(660,"),,$P(IBDATA,"^",16))
"RTN","IBATLM1B",169,0)
 W "!" H 1
"RTN","IBATLM1B",170,0)
 D H
"RTN","IBATLM1B",171,0)
 Q
"RTN","IBATLM1B",172,0)
H ; -- page reader
"RTN","IBATLM1B",173,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT
"RTN","IBATLM1B",174,0)
 W !! S DIR(0)="E" D ^DIR
"RTN","IBATLM1B",175,0)
 Q
"RTN","IBATLM1B",176,0)
DUP(IBSOURCE,IBQUIT) ; -- checks for dups that are not cancelled
"RTN","IBATLM1B",177,0)
 N IBT S IBT=0
"RTN","IBATLM1B",178,0)
 F  S IBT=$O(^IBAT(351.61,"AD",IBSOURCE,IBT)) Q:IBT<1!($D(IBQUIT))  D
"RTN","IBATLM1B",179,0)
 . Q:$P(^IBAT(351.61,IBT,0),"^",5)="X"
"RTN","IBATLM1B",180,0)
 . W !,$S(IBSOURCE["SCE(":"Visit",IBSOURCE["DGPM(":"Admission",IBSOURCE["RMPR(":"Prosthetic",1:"Prescription")," exists already!" S IBQUIT=1
"RTN","IBATLM1B",181,0)
 Q
"RTN","IBATLM2A")
0^26^B34351827^B34274323
"RTN","IBATLM2A",1,0)
IBATLM2A ;LL/ELZ - TRANSFER PRICING PT TRANSACTION DETAIL ; 15-SEP-1998
"RTN","IBATLM2A",2,0)
 ;;2.0;INTEGRATED BILLING;**115,210,266,309,389**;21-MAR-94;Build 6
"RTN","IBATLM2A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATLM2A",4,0)
 ;
"RTN","IBATLM2A",5,0)
 N IBX,IBY K ^TMP("IBATEE",$J)
"RTN","IBATLM2A",6,0)
 F IBX=0,4,5,6 S IBDATA(IBX)=$G(^IBAT(351.61,IBIEN,IBX))
"RTN","IBATLM2A",7,0)
 ;
"RTN","IBATLM2A",8,0)
 S IBY=""
"RTN","IBATLM2A",9,0)
 D SET("*** General Information ***",.IBY,26,27)
"RTN","IBATLM2A",10,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",11,0)
 D CNTRL^VALM10(VALMCNT,26,27,IOINHI,IOINORM)
"RTN","IBATLM2A",12,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",13,0)
 ;
"RTN","IBATLM2A",14,0)
 D SET("Transaction Date:",.IBY,1,17)
"RTN","IBATLM2A",15,0)
 D SET($$DATE($P(IBDATA(0),"^",3)),.IBY,19,19)
"RTN","IBATLM2A",16,0)
 D SET("Event Date:",.IBY,48,11)
"RTN","IBATLM2A",17,0)
 D SET($$DATE($P(IBDATA(0),"^",4)),.IBY,60,20)
"RTN","IBATLM2A",18,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",19,0)
 ;
"RTN","IBATLM2A",20,0)
 D SET("Status:",.IBY,11,7)
"RTN","IBATLM2A",21,0)
 D SET($$EX^IBATUTL(351.61,.05,$P(IBDATA(0),"^",5)),.IBY,19,19)
"RTN","IBATLM2A",22,0)
 D SET("Priced Date:",.IBY,47,12)
"RTN","IBATLM2A",23,0)
 D SET($$DATE($P(IBDATA(0),"^",13)),.IBY,60,20)
"RTN","IBATLM2A",24,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",25,0)
 ;
"RTN","IBATLM2A",26,0)
 D SET("From Date:",.IBY,8,10)
"RTN","IBATLM2A",27,0)
 D SET($$DATE($P(IBDATA(0),"^",9)),.IBY,19,19)
"RTN","IBATLM2A",28,0)
 D SET("To Date:",.IBY,51,8)
"RTN","IBATLM2A",29,0)
 D SET($$DATE($P(IBDATA(0),"^",10)),.IBY,60,20)
"RTN","IBATLM2A",30,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",31,0)
 ;
"RTN","IBATLM2A",32,0)
 D SET("Facility:",.IBY,9,9)
"RTN","IBATLM2A",33,0)
 D SET($$EX^IBATUTL(351.61,.11,$P(IBDATA(0),"^",11)),.IBY,19,19)
"RTN","IBATLM2A",34,0)
 D SETVALM(.VALMCNT,.IBY),SETVALM(.VALMCNT,""),SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",35,0)
 ;
"RTN","IBATLM2A",36,0)
 D SET("*** Workload/Pricing Detail ***",.IBY,24,31)
"RTN","IBATLM2A",37,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",38,0)
 D CNTRL^VALM10(VALMCNT,24,31,IOINHI,IOINORM)
"RTN","IBATLM2A",39,0)
 ;
"RTN","IBATLM2A",40,0)
 D @$S($P(IBDATA(0),"^",12)["DGPM(":"INPT",$P(IBDATA(0),"^",12)["SCE(":"OUT",$P(IBDATA(0),"^",12)["RMPR(":"RMPR",1:"RX")
"RTN","IBATLM2A",41,0)
 ;
"RTN","IBATLM2A",42,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",43,0)
 D SET("*** Totals ***",.IBY,33,14)
"RTN","IBATLM2A",44,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",45,0)
 D CNTRL^VALM10(VALMCNT,26,28,IOINHI,IOINORM)
"RTN","IBATLM2A",46,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",47,0)
 ;
"RTN","IBATLM2A",48,0)
 D SET("Bill Amount:",.IBY,6,18)
"RTN","IBATLM2A",49,0)
 D SET($FN($P(IBDATA(6),"^",2),"",2),.IBY,25,54)
"RTN","IBATLM2A",50,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",51,0)
 ;
"RTN","IBATLM2A",52,0)
 D SET("Patient Copay:",.IBY,6,14)
"RTN","IBATLM2A",53,0)
 S $P(IBDATA(6),"^",3)=$$COPAY^IBATUTL(DFN,$P(IBDATA(0),"^",12),$P(IBDATA(0),"^",9),$P(IBDATA(0),"^",10))
"RTN","IBATLM2A",54,0)
 D SET($FN($P(IBDATA(6),"^",3),"",2),.IBY,26,54)
"RTN","IBATLM2A",55,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",56,0)
 ;
"RTN","IBATLM2A",57,0)
 Q
"RTN","IBATLM2A",58,0)
INPT ; -- detail display for inpatient
"RTN","IBATLM2A",59,0)
 N IBDRG,VAIP
"RTN","IBATLM2A",60,0)
 ;
"RTN","IBATLM2A",61,0)
 S IBDRG=$G(^IBAT(351.61,IBIEN,1))
"RTN","IBATLM2A",62,0)
 ;
"RTN","IBATLM2A",63,0)
 S VAIP("E")=+$P(IBDATA(0),"^",12) D IN5^VADPT
"RTN","IBATLM2A",64,0)
 ;
"RTN","IBATLM2A",65,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",66,0)
 D SET("Admission Date:",.IBY,3,15)
"RTN","IBATLM2A",67,0)
 D SET($P(VAIP(13,1),"^",2),.IBY,19,19)
"RTN","IBATLM2A",68,0)
 D SET("Discharge Date:",.IBY,44,15)
"RTN","IBATLM2A",69,0)
 D SET($P(VAIP(17,1),"^",2),.IBY,60,20)
"RTN","IBATLM2A",70,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",71,0)
 ;
"RTN","IBATLM2A",72,0)
 D SET("Ward Location:",.IBY,4,14)
"RTN","IBATLM2A",73,0)
 D SET($P(VAIP(5),"^",2),.IBY,19,19)
"RTN","IBATLM2A",74,0)
 D SET("Treating Specialty:",.IBY,40,19)
"RTN","IBATLM2A",75,0)
 D SET($P(VAIP(8),"^",2),.IBY,60,20)
"RTN","IBATLM2A",76,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",77,0)
 ;
"RTN","IBATLM2A",78,0)
 D SET("DRG:",.IBY,14,4)
"RTN","IBATLM2A",79,0)
 D SET($$EX^IBATUTL(351.61,1.01,$P(IBDRG,"^")),.IBY,19,19)
"RTN","IBATLM2A",80,0)
 D SET("DRG Charge:",.IBY,48,11)
"RTN","IBATLM2A",81,0)
 D SET($FN($P(IBDRG,"^",2),"",2),.IBY,60,20)
"RTN","IBATLM2A",82,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",83,0)
 ;
"RTN","IBATLM2A",84,0)
 D SET("Inpatient LOS:",.IBY,4,14)
"RTN","IBATLM2A",85,0)
 D SET(+$P(IBDRG,"^",3),.IBY,19,19)
"RTN","IBATLM2A",86,0)
 D SET("High Trim Days:",.IBY,44,15)
"RTN","IBATLM2A",87,0)
 D SET(+$P(IBDRG,"^",4),.IBY,60,20)
"RTN","IBATLM2A",88,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",89,0)
 ;
"RTN","IBATLM2A",90,0)
 D SET("Outlier Days:",.IBY,5,13)
"RTN","IBATLM2A",91,0)
 D SET(+$P(IBDRG,"^",5),.IBY,19,19)
"RTN","IBATLM2A",92,0)
 D SET("Outlier Rate:",.IBY,46,13)
"RTN","IBATLM2A",93,0)
 D SET($FN($P(IBDRG,"^",6),"",2),.IBY,60,20)
"RTN","IBATLM2A",94,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",95,0)
 Q
"RTN","IBATLM2A",96,0)
OUT ; -- detail display for outpatient
"RTN","IBATLM2A",97,0)
 N IBX,IBDXLIST,IBSCE,IBPROV,IBDATE
"RTN","IBATLM2A",98,0)
 ;
"RTN","IBATLM2A",99,0)
 D GETGEN^SDOE($P($P(IBDATA(0),"^",12),";"),"IBSCE")
"RTN","IBATLM2A",100,0)
 D GETPRV^SDOE($P($P(IBDATA(0),"^",12),";"),"IBPROV")
"RTN","IBATLM2A",101,0)
 ;
"RTN","IBATLM2A",102,0)
 D GETDX^SDOE($P($P(IBDATA(0),"^",12),";"),"IBDXLIST")
"RTN","IBATLM2A",103,0)
 S IBDATE=$P($G(IBDATA(0)),U,4) ; Event date
"RTN","IBATLM2A",104,0)
 D DX(.IBDXLIST,IBDATE)
"RTN","IBATLM2A",105,0)
 ;
"RTN","IBATLM2A",106,0)
 D SET("Procedure Information:",.IBY,1,22)
"RTN","IBATLM2A",107,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",108,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",109,0)
 ;
"RTN","IBATLM2A",110,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBIEN,3,IBX)) Q:IBX<1  D
"RTN","IBATLM2A",111,0)
 . S IBX(0)=$G(^IBAT(351.61,IBIEN,3,IBX,0))
"RTN","IBATLM2A",112,0)
 . S IBX(1)=$$PROC^IBATUTL($P(IBX(0),U),IBDATE)
"RTN","IBATLM2A",113,0)
 . ;
"RTN","IBATLM2A",114,0)
 . D SET(+IBX(1),.IBY,5,6)
"RTN","IBATLM2A",115,0)
 . D SET("-",.IBY,13,1)
"RTN","IBATLM2A",116,0)
 . D SET($P(IBX(1),"^",2),.IBY,15,40)
"RTN","IBATLM2A",117,0)
 . D SET(+$P(IBX(0),"^",2),.IBY,57,3)
"RTN","IBATLM2A",118,0)
 . D SET("x",.IBY,62,1)
"RTN","IBATLM2A",119,0)
 . D SET($FN($P(IBX(0),"^",3),"",2),.IBY,64,15)
"RTN","IBATLM2A",120,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",121,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",122,0)
 ;
"RTN","IBATLM2A",123,0)
 D SET("Visit Information:",.IBY,1,18)
"RTN","IBATLM2A",124,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",125,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",126,0)
 ;
"RTN","IBATLM2A",127,0)
 D SET("Location:",.IBY,8,14)
"RTN","IBATLM2A",128,0)
 D SET($P(^SC(+$P(IBSCE(0),"^",4),0),"^"),.IBY,19,46) ; dbia 10040
"RTN","IBATLM2A",129,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",130,0)
 ;
"RTN","IBATLM2A",131,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",132,0)
 D SET("Provider(s):",.IBY,5,17)
"RTN","IBATLM2A",133,0)
 S IBX=0 F  S IBX=$O(IBPROV(IBX)) Q:IBX<.5  D
"RTN","IBATLM2A",134,0)
 . D SET($$GET1^DIQ(200,+IBPROV(IBX),.01),.IBY,19,49) ; dbia 10060
"RTN","IBATLM2A",135,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",136,0)
 ;
"RTN","IBATLM2A",137,0)
 Q
"RTN","IBATLM2A",138,0)
RX ; -- detail display for rx
"RTN","IBATLM2A",139,0)
 D SET("Drug:",.IBY,5,5)
"RTN","IBATLM2A",140,0)
 D ZERO^IBRXUTL(+IBDATA(4))
"RTN","IBATLM2A",141,0)
 D SET(^TMP($J,"IBDRUG",+IBDATA(4),.01),.IBY,12,40) ; dbia 4533
"RTN","IBATLM2A",142,0)
 D SET(+$P(IBDATA(4),"^",2),.IBY,55,3)
"RTN","IBATLM2A",143,0)
 D SET("x",.IBY,60,1)
"RTN","IBATLM2A",144,0)
 D SET($FN($P(IBDATA(4),"^",3),"",3),.IBY,62,15)
"RTN","IBATLM2A",145,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",146,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",147,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBATLM2A",148,0)
 Q
"RTN","IBATLM2A",149,0)
RMPR ; -- detail display for prosthetic
"RTN","IBATLM2A",150,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",151,0)
 D SET("Prosthetic Item:",.IBY,5,16)
"RTN","IBATLM2A",152,0)
 D SET($P($$PIN^IBATUTL(+$P(IBDATA(0),"^",12)),U,2),.IBY,23,30) ; dbia 374
"RTN","IBATLM2A",153,0)
 D SET($FN($P(IBDATA(4),"^",5),",",2),.IBY,58,15)
"RTN","IBATLM2A",154,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",155,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",156,0)
 Q
"RTN","IBATLM2A",157,0)
DX(IBDX,IBDATE) ; -- diagnosis info
"RTN","IBATLM2A",158,0)
 N IBX
"RTN","IBATLM2A",159,0)
 ;
"RTN","IBATLM2A",160,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",161,0)
 D SET("Diagnosis Information:",.IBY,1,22)
"RTN","IBATLM2A",162,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",163,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",164,0)
 ;
"RTN","IBATLM2A",165,0)
 S IBX=0 F  S IBX=$O(IBDX(IBX)) Q:IBX<1  D
"RTN","IBATLM2A",166,0)
 . S IBX(0)=$$ICD9^IBACSV(+IBDX(IBX),$G(IBDATE))
"RTN","IBATLM2A",167,0)
 . ;
"RTN","IBATLM2A",168,0)
 . D SET($P(IBX(0),"^"),.IBY,5,7)
"RTN","IBATLM2A",169,0)
 . D SET("-",.IBY,14,1)
"RTN","IBATLM2A",170,0)
 . D SET($P(IBX(0),"^",3),.IBY,16,30)
"RTN","IBATLM2A",171,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",172,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",173,0)
 Q
"RTN","IBATLM2A",174,0)
SET(TEXT,STRING,COL,LENGTH) ; -- set up string with valm1
"RTN","IBATLM2A",175,0)
 S STRING=$$SETSTR^VALM1($$LOWER^VALM1(TEXT),STRING,COL,LENGTH)
"RTN","IBATLM2A",176,0)
 Q
"RTN","IBATLM2A",177,0)
SETVALM(LINE,TEXT) ; -- sets line for display
"RTN","IBATLM2A",178,0)
 S LINE=LINE+1
"RTN","IBATLM2A",179,0)
 S ^TMP("IBATEE",$J,LINE,0)=TEXT
"RTN","IBATLM2A",180,0)
 S TEXT=""
"RTN","IBATLM2A",181,0)
 Q
"RTN","IBATLM2A",182,0)
DATE(X) ; -- returns date for display
"RTN","IBATLM2A",183,0)
 Q $$FMTE^XLFDT(X,"5D")
"RTN","IBATO1")
0^27^B49755688^B49762278
"RTN","IBATO1",1,0)
IBATO1 ;LL/ELZ - TRANSFER PRICING REPORTS CONT. ; 18-DEC-98
"RTN","IBATO1",2,0)
 ;;2.0;INTEGRATED BILLING;**115,266,389**;21-MAR-94;Build 6
"RTN","IBATO1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATO1",4,0)
 ;
"RTN","IBATO1",5,0)
PAGE() ; performs page reads and returns 1 if quiting is needed
"RTN","IBATO1",6,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBATO1",7,0)
 S DIR(0)="E" D ^DIR
"RTN","IBATO1",8,0)
 Q $D(DIRUT)
"RTN","IBATO1",9,0)
NUM(X,X2,X3) ; calls to format numbers
"RTN","IBATO1",10,0)
 D COMMA^%DTC
"RTN","IBATO1",11,0)
 Q $E(X,1,$L(X)-1)
"RTN","IBATO1",12,0)
UNIT(IBA,IBD,IBO) ; sets IBD subscripted with units for IBA
"RTN","IBATO1",13,0)
 N IBX,IBB S IBB="UNIT"
"RTN","IBATO1",14,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",15,0)
 . S IBD(1,IBO,IBB)=$$EX^IBATUTL(351.61,1.01,+IBA(1))
"RTN","IBATO1",16,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",17,0)
 . S IBD(1,IBO,IBB)=$$EX^IBATUTL(52,.01,+$P(IBA(0),"^",12))
"RTN","IBATO1",18,0)
 I $P(IBA(0),"^",12)["RMPR" D  Q
"RTN","IBATO1",19,0)
 . S IBD(1,IBO,IBB)="PROSTHETIC"
"RTN","IBATO1",20,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",21,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",22,0)
 . S IBD(IBX,IBO,IBB)="CPT"_$P($$PROC^IBATUTL(+IBX(0)),U)
"RTN","IBATO1",23,0)
 Q
"RTN","IBATO1",24,0)
TYPE(IBA,IBO) ; sets IBO with descriptive trans type for IBA
"RTN","IBATO1",25,0)
 N IBB,IBC,IBD
"RTN","IBATO1",26,0)
 S:'$D(IBA(0)) IBA(0)=^IBAT(351.61,IBA,0)
"RTN","IBATO1",27,0)
 S IBB=$P(IBA(0),"^",12)
"RTN","IBATO1",28,0)
 I IBB["DGPM(" S IBO="INPATIENT" Q
"RTN","IBATO1",29,0)
 I IBB["PSRX(" S IBO="PHARMACY" Q
"RTN","IBATO1",30,0)
 I IBB["RMPR(660," S IBO="PROSTHETICS" Q
"RTN","IBATO1",31,0)
 D GETGEN^SDOE(+$P(IBA(0),"^",12),"IBC")
"RTN","IBATO1",32,0)
 D:$P($G(IBC(0)),"^",3) PARSE^SDOE(.IBC,"EXTERNAL","IBD")
"RTN","IBATO1",33,0)
 S IBO=$S($G(IBD(.03))="":"OUTPATINET",1:$E("OUT "_IBD(.03),1,10))
"RTN","IBATO1",34,0)
 Q
"RTN","IBATO1",35,0)
DES(IBA,IBD,IBO) ; sets IBD subscripted with description for IBA
"RTN","IBATO1",36,0)
 N IBX,IBB,IBDATE S IBB="UNIT DESCRIPTION"
"RTN","IBATO1",37,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",38,0)
 . S IBD(1,IBO,IBB)=$E($$DRGTD^IBACSV(+IBA(1),$P(IBA(0),U,4)),1,18)
"RTN","IBATO1",39,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",40,0)
 . S IBD(1,IBO,IBB)=$E($$EX^IBATUTL(351.61,4.01,+IBA(4)),1,18)
"RTN","IBATO1",41,0)
 I $P(IBA(0),"^",12)["RMPR(660," D  Q
"RTN","IBATO1",42,0)
 . S IBD(1,IBO,IBB)=$E($P($$PIN^IBATUTL(+$P(IBA(0),"^",12)),U,2),1,18)
"RTN","IBATO1",43,0)
 S IBDATE=$P($G(^IBAT(351.61,IBIEN,0)),U,4) ; Event Date
"RTN","IBATO1",44,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",45,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",46,0)
 . S IBD(IBX,IBO,IBB)=$E($P($$PROC^IBATUTL(+IBX(0),IBDATE),U,2),1,18)
"RTN","IBATO1",47,0)
 Q
"RTN","IBATO1",48,0)
PRICE(IBA,IBD,IBO) ; sets IBD subscripted with price for IBA
"RTN","IBATO1",49,0)
 N IBX,IBB S IBB="UNIT PRICE"
"RTN","IBATO1",50,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",51,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(1),"^",2),2,9)
"RTN","IBATO1",52,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",53,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(4),"^",3),3,10)
"RTN","IBATO1",54,0)
 I $P(IBA(0),"^",12)["RMPR(660," D  Q
"RTN","IBATO1",55,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(4),"^",5),3,10)
"RTN","IBATO1",56,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",57,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",58,0)
 . S IBD(IBX,IBO,IBB)=$$NUM($P(IBX(0),"^",3),2,9)
"RTN","IBATO1",59,0)
 Q
"RTN","IBATO1",60,0)
QTY(IBA,IBD,IBO) ; sets IBD subscripted with quantity for IBA
"RTN","IBATO1",61,0)
 N IBX,IBB S IBB="QTY"
"RTN","IBATO1",62,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",63,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(1),"^",5),0,3)
"RTN","IBATO1",64,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",65,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(4),"^",2),0,3)
"RTN","IBATO1",66,0)
 I $P(IBA(0),"^",12)["RMPR(660," D  Q
"RTN","IBATO1",67,0)
 . S IBD(1,IBO,IBB)=$$NUM(1,0,3)
"RTN","IBATO1",68,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",69,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",70,0)
 . S IBD(IBX,IBO,IBB)=$$NUM($P(IBX(0),"^",2),0,3)
"RTN","IBATO1",71,0)
 Q
"RTN","IBATO1",72,0)
COPAY(IBA) ; compute copay for iba and return
"RTN","IBATO1",73,0)
 N IBC,IBT,IBCOPAY
"RTN","IBATO1",74,0)
 S IBCOPAY=$$COPAY^IBATUTL($P(IBA(0),"^",2),$P(IBA(0),"^",12),$P($P(IBA(0),"^",9),"."),$P($P(IBA(0),"^",10),"."))
"RTN","IBATO1",75,0)
 I IBCOPAY,$P(IBA(0),"^",12)["SCE(" S (IBC,IBT)=0 F  S IBT=$O(^IBAT(351.61,"AH",$P(IBA(0),"^",2),$P(IBA(0),"^",4),IBT)) Q:IBT<1  I $P(^IBAT(351.61,IBT,0),"^",12)["SCE(" S IBC=IBC+1
"RTN","IBATO1",76,0)
 I  S IBCOPAY=IBCOPAY/IBC
"RTN","IBATO1",77,0)
 Q $$NUM(IBCOPAY,2,7)
"RTN","IBATO1",78,0)
 ;
"RTN","IBATO1",79,0)
VAR(IBA) ; set up required variables
"RTN","IBATO1",80,0)
 N IBX
"RTN","IBATO1",81,0)
 F IBX=0,1,4 S IBA(IBX)=$G(^IBAT(351.61,IBA,IBX))
"RTN","IBATO1",82,0)
 Q
"RTN","IBATO1",83,0)
PRT(IBIEN) ; main entry for report printing
"RTN","IBATO1",84,0)
 ;
"RTN","IBATO1",85,0)
 N DFN,IBXDATA,IBC,IBF,IBF1,IBF2,IBO,VA,VAERR,IBM
"RTN","IBATO1",86,0)
 ;
"RTN","IBATO1",87,0)
 D VAR(.IBIEN)
"RTN","IBATO1",88,0)
 S DFN=$P(IBIEN(0),"^",2)
"RTN","IBATO1",89,0)
 I IBPAGE=0!($Y+5>IOSL)!(IBLAST'=$P(IBIEN(0),"^",11)) S IBLAST=$P(IBIEN(0),"^",11) D PRTH Q:IBQUIT
"RTN","IBATO1",90,0)
 W ! S IBC=0
"RTN","IBATO1",91,0)
 ;
"RTN","IBATO1",92,0)
 ; print single valued data first
"RTN","IBATO1",93,0)
 S IBF=0 F  S IBF=$O(IBFIELD(IBF)) Q:IBF<1  D
"RTN","IBATO1",94,0)
 . D PRTG(.IBFIELD,.IBF,.IBF1,.IBC)
"RTN","IBATO1",95,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",96,0)
 . W IBXDATA,?IBC
"RTN","IBATO1",97,0)
 ;
"RTN","IBATO1",98,0)
 ; compute multiple valued data
"RTN","IBATO1",99,0)
 S IBM=IBC
"RTN","IBATO1",100,0)
 S IBF=0 F  S IBF=$O(IBMUL(IBF)) Q:IBF<1  D
"RTN","IBATO1",101,0)
 . S IBF1=0,IBF1=$O(IBMUL(IBF,IBF1))
"RTN","IBATO1",102,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",103,0)
 ;
"RTN","IBATO1",104,0)
 ; print multiple valued data
"RTN","IBATO1",105,0)
 S IBF=0 F  S IBF=$O(IBXDATA(IBF)) Q:IBF=""  W:IBC'=IBM ! W ?IBM S IBC=IBM D
"RTN","IBATO1",106,0)
 . S IBO=0 F  S IBO=$O(IBXDATA(IBF,IBO)) Q:IBO<1  S IBF1=0 F  S IBF1=$O(IBXDATA(IBF,IBO,IBF1)) Q:IBF1=""  D
"RTN","IBATO1",107,0)
 .. S IBF2=0,IBF2=$O(^IBAT(351.62,"B",IBF1,IBF2))
"RTN","IBATO1",108,0)
 .. S IBF2=^IBAT(351.62,IBF2,0)
"RTN","IBATO1",109,0)
 .. S IBC=IBC+$P(IBF2,"^",2)+1
"RTN","IBATO1",110,0)
 .. I IBC>IOM W !?5 S IBC=$P(IBF2,"^",2)+6
"RTN","IBATO1",111,0)
 .. W IBXDATA(IBF,IBO,IBF1),?IBC
"RTN","IBATO1",112,0)
 ;
"RTN","IBATO1",113,0)
 ; clean up
"RTN","IBATO1",114,0)
 X ^IBAT(351.62,999,1)
"RTN","IBATO1",115,0)
 ;
"RTN","IBATO1",116,0)
 Q
"RTN","IBATO1",117,0)
EXPRT(IBIEN) ; main entry for excel printing
"RTN","IBATO1",118,0)
 ;
"RTN","IBATO1",119,0)
 N DFN,IBXDATA,IBF,IBF1,IBF2,IBO,VA,VAERR
"RTN","IBATO1",120,0)
 ;
"RTN","IBATO1",121,0)
 D VAR(.IBIEN)
"RTN","IBATO1",122,0)
 S DFN=$P(IBIEN(0),"^",2)
"RTN","IBATO1",123,0)
 ;
"RTN","IBATO1",124,0)
 ; do single if no multiple
"RTN","IBATO1",125,0)
 I '$D(IBMUL) D EXSING() W ! X ^IBAT(351.62,999,1) Q
"RTN","IBATO1",126,0)
 ;
"RTN","IBATO1",127,0)
 ; compute multiple valued data
"RTN","IBATO1",128,0)
 S IBF=0 F  S IBF=$O(IBMUL(IBF)) Q:IBF<1  D
"RTN","IBATO1",129,0)
 . S IBF1=0,IBF1=$O(IBMUL(IBF,IBF1))
"RTN","IBATO1",130,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",131,0)
 ;
"RTN","IBATO1",132,0)
 ; print multiple valued data
"RTN","IBATO1",133,0)
 S IBF=0 F  S IBF=$O(IBXDATA(IBF)) Q:IBF=""  D EXSING(IBF) D
"RTN","IBATO1",134,0)
 . S IBO=0 F  S IBO=$O(IBXDATA(IBF,IBO)) Q:IBO<1  S IBF1=0 F  S IBF1=$O(IBXDATA(IBF,IBO,IBF1)) Q:IBF1=""  D
"RTN","IBATO1",135,0)
 .. S IBF2=0,IBF2=$O(^IBAT(351.62,"B",IBF1,IBF2))
"RTN","IBATO1",136,0)
 .. S IBF2=^IBAT(351.62,IBF2,0)
"RTN","IBATO1",137,0)
 .. W $$STRIP(IBXDATA(IBF,IBO,IBF1),IBF2),"|"
"RTN","IBATO1",138,0)
 . W !
"RTN","IBATO1",139,0)
 ;
"RTN","IBATO1",140,0)
 ; clean up
"RTN","IBATO1",141,0)
 X ^IBAT(351.62,999,1)
"RTN","IBATO1",142,0)
 ;
"RTN","IBATO1",143,0)
 Q
"RTN","IBATO1",144,0)
STRIP(A,B) ; strips off junk from numbers
"RTN","IBATO1",145,0)
 Q $S($P(B,"^",5):+$TR(A,", "),1:A)
"RTN","IBATO1",146,0)
 ;
"RTN","IBATO1",147,0)
EXSING(IBF) ; print single valued data first
"RTN","IBATO1",148,0)
 S IBF=0 F  S IBF=$O(IBFIELD(IBF)) Q:IBF<1  D
"RTN","IBATO1",149,0)
 . D PRTG(.IBFIELD,.IBF,.IBF1,.IBC)
"RTN","IBATO1",150,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",151,0)
 . W $$STRIP(IBXDATA,IBF1(0)),"|"
"RTN","IBATO1",152,0)
 Q
"RTN","IBATO1",153,0)
 ;
"RTN","IBATO1",154,0)
PRTH ; header
"RTN","IBATO1",155,0)
 S IBC=0
"RTN","IBATO1",156,0)
 D HEAD^IBATO($P(IBIEN(0),"^",11)) Q:IBQUIT
"RTN","IBATO1",157,0)
 W !
"RTN","IBATO1",158,0)
 S IBF=0 F  S IBF=$O(IBFIELD(IBF)) Q:IBF<1  D
"RTN","IBATO1",159,0)
 . D PRTG(.IBFIELD,.IBF,.IBF1,.IBC)
"RTN","IBATO1",160,0)
 . W $P(IBF1(0),"^"),?IBC
"RTN","IBATO1",161,0)
 ;
"RTN","IBATO1",162,0)
 ; multiple part of header
"RTN","IBATO1",163,0)
 S IBF=0 F  S IBF=$O(IBMUL(IBF)) Q:IBF<1  D
"RTN","IBATO1",164,0)
 . D PRTG(.IBMUL,.IBF,.IBF1,.IBC)
"RTN","IBATO1",165,0)
 . W $P(IBF1(0),"^"),?IBC
"RTN","IBATO1",166,0)
 ;
"RTN","IBATO1",167,0)
 W ! F IBC=1:1:IOM W "-"
"RTN","IBATO1",168,0)
 Q
"RTN","IBATO1",169,0)
PRTG(X,Y,Z,C) ; general printing stuff
"RTN","IBATO1",170,0)
 S Z=0,Z=$O(X(Y,Z))
"RTN","IBATO1",171,0)
 S Z(0)=X(Y,Z)
"RTN","IBATO1",172,0)
 I $D(C) S C=C+$P(Z(0),"^",2)+1 I C>IOM W !?5 S C=$P(Z(0),"^",2)+6
"RTN","IBATO1",173,0)
 Q
"RTN","IBATO1",174,0)
SEL(B) ; selection of which fields B = default
"RTN","IBATO1",175,0)
 ; sets up variables IBFIELD and IBMUL
"RTN","IBATO1",176,0)
 ; returns max length of output
"RTN","IBATO1",177,0)
 ;
"RTN","IBATO1",178,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,DIR,W,X,Y,Z,IBR,IBM
"RTN","IBATO1",179,0)
 S (IBR,IBM)=0
"RTN","IBATO1",180,0)
 ;
"RTN","IBATO1",181,0)
AGAIN S DIR(0)="LAO^1:98",DIR("A")="Which fields: "_$S($D(B):B_"//",1:"")
"RTN","IBATO1",182,0)
 S DIR("?")="Select what fields you want printed. Ranges must start with a valid number."
"RTN","IBATO1",183,0)
 D ^DIR Q:$D(DTOUT)!($D(DUOUT))!($D(DIROUT)) 0
"RTN","IBATO1",184,0)
 ;
"RTN","IBATO1",185,0)
 ; if default selected set Y
"RTN","IBATO1",186,0)
 S:Y="" Y=$G(B)
"RTN","IBATO1",187,0)
 ;
"RTN","IBATO1",188,0)
 ; validate input
"RTN","IBATO1",189,0)
 I '$D(^IBAT(351.62,"AC",+Y)) W *7,"??" G AGAIN
"RTN","IBATO1",190,0)
 F X=1:1 Q:$P(Y,",",X)=""  S:'$D(^IBAT(351.62,"AC",$P(Y,",",X))) Y=$P(Y,",",1,X-1)_","_$P(Y,",",X+1,98),X=X-1
"RTN","IBATO1",191,0)
 ;
"RTN","IBATO1",192,0)
 ; setup variables for output
"RTN","IBATO1",193,0)
 F X=1:1 Q:'$P(Y,",",X)  S W=+$P($Q(^IBAT(351.62,"AC",$P(Y,",",X))),",",4),Z=^IBAT(351.62,W,0),IBR=$S($P(Z,"^",3):"IBMUL",1:"IBFIELD"),@(IBR_"("_X_","_W_")")=Z,@IBR=$G(@IBR)+$P(Z,"^",2)+1
"RTN","IBATO1",194,0)
 ;
"RTN","IBATO1",195,0)
 Q $G(IBFIELD)+$G(IBMUL)
"RTN","IBATO1",196,0)
 ;
"RTN","IBATO1",197,0)
DISP ; displays fields for selection
"RTN","IBATO1",198,0)
 ;
"RTN","IBATO1",199,0)
 N IBX,IBL,IBI
"RTN","IBATO1",200,0)
 ;
"RTN","IBATO1",201,0)
 ; set up lines
"RTN","IBATO1",202,0)
 S (IBX,IBL)=0 F  S IBX=$O(^IBAT(351.62,"AC",IBX)),IBL=IBL+1 Q:IBX<1  S:IBX=40 IBL=1 S IBI=+$P($Q(^IBAT(351.62,"AC",IBX)),",",4),IBL(IBL,$S(IBX<40:0,1:40))=^IBAT(351.62,IBI,0)
"RTN","IBATO1",203,0)
 ;
"RTN","IBATO1",204,0)
 ; display lines
"RTN","IBATO1",205,0)
 W @IOF,!,"Select the fields you would like printed on this report, in the order you",!,"want them printed.  Fields with an asterisk (*) are fields that are multiples.",!
"RTN","IBATO1",206,0)
 S IBX="" F  S IBX=$O(IBL(IBX)) Q:IBX=""  W ! S IBI="" F  S IBI=$O(IBL(IBX,IBI)) Q:IBI=""  W ?IBI,$P(IBL(IBX,IBI),"^",4),?IBI+4,$S($P(IBL(IBX,IBI),"^",3):"*",1:""),$P(IBL(IBX,IBI),"^")
"RTN","IBATO1",207,0)
 ;
"RTN","IBATO1",208,0)
 W !
"RTN","IBATO1",209,0)
 ;
"RTN","IBATO1",210,0)
 Q
"RTN","IBATUTL")
0^28^B31394250^B29162710
"RTN","IBATUTL",1,0)
IBATUTL ;LL/ELZ - TRANSFER PRICING UTILITES ; 3-SEP-1998
"RTN","IBATUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**115,266,347,389**;21-MAR-94;Build 6
"RTN","IBATUTL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBATUTL",4,0)
 ;
"RTN","IBATUTL",5,0)
SL() ; -- called to select a patient or enrolled facility
"RTN","IBATUTL",6,0)
 N X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","IBATUTL",7,0)
 S DIR(0)="350.9,10.01",DIR("A")="Select Patient or Enrolled Facility"
"RTN","IBATUTL",8,0)
 D ^DIR
"RTN","IBATUTL",9,0)
 Q Y
"RTN","IBATUTL",10,0)
SLPT() ; -- called to select a patient, returns 0 or patient dfn
"RTN","IBATUTL",11,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","IBATUTL",12,0)
 S DIC="^IBAT(351.6,",DIC(0)="AEMQ" D ^DIC
"RTN","IBATUTL",13,0)
 Q $S(+Y>0:+Y,1:0)
"RTN","IBATUTL",14,0)
 ;
"RTN","IBATUTL",15,0)
SLDR(Q) ; -- called to select a date range
"RTN","IBATUTL",16,0)
 ; defaults are from=T-365, to=TODAY
"RTN","IBATUTL",17,0)
 ; output IBBDT, IBEDT, quit returns 0 if not valid
"RTN","IBATUTL",18,0)
 ;
"RTN","IBATUTL",19,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y,IBDT
"RTN","IBATUTL",20,0)
 S DIR(0)="DA^:NOW:EX",DIR("A")="Select FROM DATE: "
"RTN","IBATUTL",21,0)
 S:$D(Q) DIR("?")=Q
"RTN","IBATUTL",22,0)
 D ^DIR G:'Y SLDRQ S IBDT=+Y
"RTN","IBATUTL",23,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="              TO: "
"RTN","IBATUTL",24,0)
 D ^DIR
"RTN","IBATUTL",25,0)
 S:Y IBEDT=+Y+.999999,IBBDT=IBDT G SLDRQ
"RTN","IBATUTL",26,0)
SLDR1Y() ; -- called to select a date range w/1y past default
"RTN","IBATUTL",27,0)
 ; defaults are from=T-365, to=TODAY
"RTN","IBATUTL",28,0)
 ; output IBBDT, IBEDT, quit returns 0 if not valid
"RTN","IBATUTL",29,0)
 ;
"RTN","IBATUTL",30,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y,IBDT
"RTN","IBATUTL",31,0)
 S DIR(0)="DA^:NOW:EX",DIR("A")="Select FROM DATE: "
"RTN","IBATUTL",32,0)
 S DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(DT,-365)) D ^DIR
"RTN","IBATUTL",33,0)
 G:'Y SLDRQ S IBDT=+Y
"RTN","IBATUTL",34,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="              to: "
"RTN","IBATUTL",35,0)
 S DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(IBDT,365)) D ^DIR
"RTN","IBATUTL",36,0)
 G:'Y SLDRQ S IBEDT=+Y+.999999,IBBDT=IBDT
"RTN","IBATUTL",37,0)
SLDRQ Q $D(DIRUT)!($D(DUOUT))
"RTN","IBATUTL",38,0)
 ;
"RTN","IBATUTL",39,0)
PTTRAN(IBFILE,IBARRAY,IBXREF) ; builds a list of patient transactions by date
"RTN","IBATUTL",40,0)
 ; assumes DFN, IBBDT, IBEDT
"RTN","IBATUTL",41,0)
 ; input IBARRAY - where to store info
"RTN","IBATUTL",42,0)
 ;       IBXREF  - which date x-ref to use
"RTN","IBATUTL",43,0)
 ; output 0,6 node of file IBFILE in array specified
"RTN","IBATUTL",44,0)
 ;
"RTN","IBATUTL",45,0)
 N IBIEN,IBDT,IBNODE
"RTN","IBATUTL",46,0)
 K @IBARRAY
"RTN","IBATUTL",47,0)
 S IBDT=IBBDT-.999999
"RTN","IBATUTL",48,0)
 F  S IBDT=$O(^IBAT(IBFILE,IBXREF,DFN,IBDT)) Q:IBDT<1!(IBDT>IBEDT)  D
"RTN","IBATUTL",49,0)
 . S IBIEN=0
"RTN","IBATUTL",50,0)
 . F  S IBIEN=$O(^IBAT(IBFILE,IBXREF,DFN,IBDT,IBIEN)) Q:IBIEN<1  D
"RTN","IBATUTL",51,0)
 .. F IBNODE=0,6 S @IBARRAY@(IBDT,IBIEN,IBNODE)=$G(^IBAT(IBFILE,IBIEN,IBNODE))
"RTN","IBATUTL",52,0)
 Q
"RTN","IBATUTL",53,0)
LMOPT ; -- called to do standard listmanager option calling
"RTN","IBATUTL",54,0)
 D FULL^VALM1
"RTN","IBATUTL",55,0)
 S VALMBCK="R"
"RTN","IBATUTL",56,0)
 Q
"RTN","IBATUTL",57,0)
 ;
"RTN","IBATUTL",58,0)
SETVALM(LINE,TEXT,IEN,ON,OFF) ; -- sets up listmanager lines
"RTN","IBATUTL",59,0)
 S LINE=LINE+1
"RTN","IBATUTL",60,0)
 D SET^VALM10(LINE,TEXT,LINE)
"RTN","IBATUTL",61,0)
 S:$G(IEN) @VALMAR@("INDEX",LINE,IEN)=""
"RTN","IBATUTL",62,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(LINE,1,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBATUTL",63,0)
 W:'(LINE#5) "."
"RTN","IBATUTL",64,0)
 Q LINE
"RTN","IBATUTL",65,0)
 ;
"RTN","IBATUTL",66,0)
VISN(STATION) ; -- looks up ien & name of VISN from ien of station
"RTN","IBATUTL",67,0)
 N IBAT
"RTN","IBATUTL",68,0)
 D PARENT^XUAF4("IBAT","`"_STATION,"VISN")
"RTN","IBATUTL",69,0)
 S IBAT=0,IBAT=$O(IBAT("P",IBAT))
"RTN","IBATUTL",70,0)
 Q $S(IBAT:IBAT_"^"_$P(IBAT("P",IBAT),"^"),1:"")
"RTN","IBATUTL",71,0)
 ;
"RTN","IBATUTL",72,0)
ONEFAC() ; returns one facility only, no visns allowed
"RTN","IBATUTL",73,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","IBATUTL",74,0)
 S DIC="^DIC(4,",DIC(0)="AEMNQ"
"RTN","IBATUTL",75,0)
 S DIC("S")="I $$SCR^IBATUTL(Y),$$INST^IBATUTL(Y)'[""VISN"""
"RTN","IBATUTL",76,0)
 D ^DIC
"RTN","IBATUTL",77,0)
 Q Y
"RTN","IBATUTL",78,0)
FAC() ; -- facility/visn or all selection
"RTN","IBATUTL",79,0)
 N DIC,X,Y,DTOUT,DUOUT K IBFAC
"RTN","IBATUTL",80,0)
 S DIC="^DIC(4,",DIC(0)="EQMNZ"
"RTN","IBATUTL",81,0)
 S DIC("S")="I $$SCR^IBATUTL(Y)"
"RTN","IBATUTL",82,0)
REDO W !,"Select FACILITY/VISN: ALL// " R X:DTIME Q:(X["^")!'$T 1
"RTN","IBATUTL",83,0)
 I X="?" W !,"Select a Facility (Name or Number), VISN (VISN XX), or press RETURN for ALL" G REDO
"RTN","IBATUTL",84,0)
 I X=""!($$UP^XLFSTR(X)="ALL") Q 0
"RTN","IBATUTL",85,0)
 D ^DIC G:Y<1 REDO D SET(Y)
"RTN","IBATUTL",86,0)
 S DIC("A")="Select another FACILITY/VISN: ",DIC(0)="AEQMNZ"
"RTN","IBATUTL",87,0)
 F  D ^DIC Q:X=""!(Y<1)  D SET(Y)
"RTN","IBATUTL",88,0)
 Q 0
"RTN","IBATUTL",89,0)
SET(Y) I Y'["VISN" N IBVISN D PARENT^XUAF4("IBVISN","`"_+Y,"VISN") D
"RTN","IBATUTL",90,0)
 . S IBVISN=0,IBVISN=$O(IBVISN("P",IBVISN))
"RTN","IBATUTL",91,0)
 . S IBFAC(IBVISN,"C",+Y)=$$INST(+Y)
"RTN","IBATUTL",92,0)
 E  S IBFAC(+Y)="" D CHILDREN^XUAF4("IBFAC(+Y)","`"_+Y,"VISN")
"RTN","IBATUTL",93,0)
 Q
"RTN","IBATUTL",94,0)
SCR(X) ; screens invalid institution file entries
"RTN","IBATUTL",95,0)
 N IBVISN
"RTN","IBATUTL",96,0)
 ;Q:$P(X,".",2) 0
"RTN","IBATUTL",97,0)
 D PARENT^XUAF4("IBVISN","`"_X,"VISN")
"RTN","IBATUTL",98,0)
 S IBVISN=0,IBVISN=$O(IBVISN("P",IBVISN)) I IBVISN Q 1
"RTN","IBATUTL",99,0)
 D CHILDREN^XUAF4("IBVISN","`"_X,"VISN")
"RTN","IBATUTL",100,0)
 S IBVISN=0,IBVISN=$O(IBVISN("C",IBVISN)) I IBVISN Q 1
"RTN","IBATUTL",101,0)
 Q 0
"RTN","IBATUTL",102,0)
PPF(DFN) ; returns patient's enrolled/preferred facility
"RTN","IBATUTL",103,0)
 N IBPPF
"RTN","IBATUTL",104,0)
 ; first find current enrolment
"RTN","IBATUTL",105,0)
 S IBPPF=+$$PREF^DGENPTA(DFN) ; dbia #2919
"RTN","IBATUTL",106,0)
 ; now if they are already tp update if necessary
"RTN","IBATUTL",107,0)
 I $D(^IBAT(351.6,DFN)),$P(^(DFN,0),"^",3)'=IBPPF D UPPPF^IBATFILE(DFN,IBPPF)
"RTN","IBATUTL",108,0)
 ; now if they have an over ride facility use that
"RTN","IBATUTL",109,0)
 Q $S($P($G(^IBAT(351.6,DFN,0)),"^",10):$P(^(0),"^",10),IBPPF=$$SITE:0,1:IBPPF)
"RTN","IBATUTL",110,0)
TPP(DFN) ; returns dfn and files patient if a valid tp patient
"RTN","IBATUTL",111,0)
 N IBSITE,IBPPF
"RTN","IBATUTL",112,0)
 S IBSITE=$$SITE
"RTN","IBATUTL",113,0)
 S IBPPF=$$PPF(DFN)
"RTN","IBATUTL",114,0)
 I IBPPF,IBSITE'=IBPPF  S DFN=+$$PAT^IBATFILE(DFN,IBPPF)
"RTN","IBATUTL",115,0)
 I DFN,$P($G(^IBAT(351.6,DFN,0)),"^",4) Q DFN
"RTN","IBATUTL",116,0)
 Q 0
"RTN","IBATUTL",117,0)
SITE() ; returns ien of current va site (this way I have only one outside call
"RTN","IBATUTL",118,0)
 Q +$$SITE^VASITE
"RTN","IBATUTL",119,0)
 ;
"RTN","IBATUTL",120,0)
INST(DA) ; returns institution file info
"RTN","IBATUTL",121,0)
 ; This will return the station name ^ station number ^ station type
"RTN","IBATUTL",122,0)
 ; DA - The pointer value into file 4.
"RTN","IBATUTL",123,0)
 I '$D(^DIC(4,DA,0)) Q 0
"RTN","IBATUTL",124,0)
 Q $$NNT^XUAF4(DA)
"RTN","IBATUTL",125,0)
IPT(X) ; returns institution file pointer from name
"RTN","IBATUTL",126,0)
 Q $$LKUP^XUAF4(X)
"RTN","IBATUTL",127,0)
PROC(X,IBDATE) ; -- returns CPT and descriptive name for cpts
"RTN","IBATUTL",128,0)
 S X=$$CPT^ICPTCOD(X,$G(IBDATE))
"RTN","IBATUTL",129,0)
 Q $P(X,"^",2,3)
"RTN","IBATUTL",130,0)
COPAY(DFN,IBFROM,IBBDT,IBEDT) ; -- returns copay amount if any
"RTN","IBATUTL",131,0)
 ; dfn=patient's dfn, from=what event the bill is from
"RTN","IBATUTL",132,0)
 ; ibbdt & ibedt are date ranges (n/a for rx)
"RTN","IBATUTL",133,0)
 N IBAMT,Y,Y1,IBDA,IBX S IBAMT=0
"RTN","IBATUTL",134,0)
 I IBFROM["PSRX(" D  Q IBAMT
"RTN","IBATUTL",135,0)
 . I $P(IBFROM,";",3)>0 D  Q
"RTN","IBATUTL",136,0)
 .. ; refills
"RTN","IBATUTL",137,0)
 .. S IBFROM=$$SUBFILE^IBRXUTL(+IBFROM,$P(IBFROM,";",3),52,9) I 'IBFROM Q
"RTN","IBATUTL",138,0)
 .. S IBAMT=$P($G(^IB(IBFROM,0)),"^",7)
"RTN","IBATUTL",139,0)
 . E  D  Q
"RTN","IBATUTL",140,0)
 .. ; initial fill 
"RTN","IBATUTL",141,0)
 .. S IBFROM=$$FILE^IBRXUTL(+IBFROM,106) I 'IBFROM Q
"RTN","IBATUTL",142,0)
 .. S IBAMT=$P($G(^IB(IBFROM,0)),"^",7)
"RTN","IBATUTL",143,0)
 ; now on to scheduling and admissions
"RTN","IBATUTL",144,0)
 S Y="" F  S Y=$O(^IB("AFDT",DFN,Y)) Q:'Y  I -Y'>IBEDT S Y1=0 F  S Y1=$O(^IB("AFDT",DFN,Y,Y1)) Q:'Y1  D
"RTN","IBATUTL",145,0)
 . S IBDA=0 F  S IBDA=$O(^IB("AF",Y1,IBDA)) Q:'IBDA  D
"RTN","IBATUTL",146,0)
 .. Q:'$D(^IB(IBDA,0))  S IBX=^(0)
"RTN","IBATUTL",147,0)
 .. Q:$P(IBX,"^",8)["ADMISSION"
"RTN","IBATUTL",148,0)
 .. ;
"RTN","IBATUTL",149,0)
 .. ; quit if not correct type (inpatient vs outpatient)
"RTN","IBATUTL",150,0)
 .. Q:$S(IBFROM["SCE("&($P($P(IBX,"^",4),":")'=409.68):1,IBFROM["DGPM("&($P($P(IBX,"^",4),":")=409.68):1,1:0)
"RTN","IBATUTL",151,0)
 .. ;
"RTN","IBATUTL",152,0)
 .. I $P(IBX,"^",15)<IBBDT!($P(IBX,"^",14)>IBEDT) Q
"RTN","IBATUTL",153,0)
 .. S IBAMT=IBAMT+$P(IBX,"^",7)
"RTN","IBATUTL",154,0)
 Q IBAMT
"RTN","IBATUTL",155,0)
FINDT(X) ; -- looks up transactions for source in X
"RTN","IBATUTL",156,0)
 ; returns ien of 351.61 if not cancelled
"RTN","IBATUTL",157,0)
 Q:$G(X)="" 0
"RTN","IBATUTL",158,0)
 N Y,Z S (Y,Z)=0
"RTN","IBATUTL",159,0)
 F  S Y=$O(^IBAT(351.61,"AD",X,Y)) Q:Y<1!(Z)  D
"RTN","IBATUTL",160,0)
 . I $G(^IBAT(351.61,Y,0)),$P(^(0),"^",5)'="X" S Z=Y
"RTN","IBATUTL",161,0)
 Q Z
"RTN","IBATUTL",162,0)
 ;
"RTN","IBATUTL",163,0)
PIN(P660,P6611) ; return Prosthetics Item Description (#661.1,.02)
"RTN","IBATUTL",164,0)
 ; input:  P660 - pointer to Patient Item (#660) or P6611 - pointer to HCPCS (#661.1)
"RTN","IBATUTL",165,0)
 ; return: pointer to HCPCS (#661.1) ^ Short Description (#661.1,.01) ^ HCPCS (#661.1,.01)
"RTN","IBATUTL",166,0)
 N IBX,IBY S IBY=""
"RTN","IBATUTL",167,0)
 I +$G(P660) S P6611=+$P($G(^RMPR(660,+P660,1)),U,4)
"RTN","IBATUTL",168,0)
 I +$G(P6611) S IBX=$G(^RMPR(661.1,+P6611,0)) I IBX'="" S IBY=P6611_U_$P(IBX,U,2)_U_$P(IBX,U,1)
"RTN","IBATUTL",169,0)
 Q IBY
"RTN","IBATUTL",170,0)
 ;
"RTN","IBATUTL",171,0)
EX(FILE,FIELD,VALUE) ; -- return external value
"RTN","IBATUTL",172,0)
 N Y,C S Y=$G(VALUE)
"RTN","IBATUTL",173,0)
 I +$G(FILE),+$G(FIELD),Y'="" S C=$P(^DD(FILE,FIELD,0),"^",2) D Y^DIQ
"RTN","IBATUTL",174,0)
 Q Y
"RTN","IBATUTL",175,0)
 ;
"RTN","IBCCC3")
0^29^B9229322^B9196131
"RTN","IBCCC3",1,0)
IBCCC3 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
"RTN","IBCCC3",2,0)
 ;;2.0;INTEGRATED BILLING;**363,381,389**;21-MAR-94;Build 6
"RTN","IBCCC3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCC3",4,0)
 ;
"RTN","IBCCC3",5,0)
 ;copy entries from table files:
"RTN","IBCCC3",6,0)
 ;passed in: IBIFN=new bill, IBIFN1=old bill
"RTN","IBCCC3",7,0)
 ;
"RTN","IBCCC3",8,0)
 I '$D(^DGCR(399,+$G(IBIFN),0))!'$D(^DGCR(399,+$G(IBIFN1),0)) Q
"RTN","IBCCC3",9,0)
 N IBXR,X,Y,IBX
"RTN","IBCCC3",10,0)
 ;
"RTN","IBCCC3",11,0)
DX ;copy diagnosis' (362.3)
"RTN","IBCCC3",12,0)
 N IBDX,IBDIFN
"RTN","IBCCC3",13,0)
 ;copy diagnosis from old bill
"RTN","IBCCC3",14,0)
 I $D(^IBA(362.3,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
"RTN","IBCCC3",15,0)
 . S IBDX=0 F  S IBDX=$O(^IBA(362.3,IBXR,IBDX)) Q:'IBDX  D
"RTN","IBCCC3",16,0)
 .. S IBDIFN=0 F  S IBDIFN=$O(^IBA(362.3,IBXR,IBDX,IBDIFN)) Q:'IBDIFN  D
"RTN","IBCCC3",17,0)
 ... S IBX=$G(^IBA(362.3,IBDIFN,0)) I 'IBX!($P(IBX,U,2)'=IBIFN1) Q
"RTN","IBCCC3",18,0)
 ... S DIC="^IBA(362.3,",DIC(0)="L",X=+IBX K DA,DO D FILE^DICN
"RTN","IBCCC3",19,0)
 ... S DIE=DIC,DA=+Y,DR=".02////"_IBIFN_";.03////"_$P(IBX,U,3) D ^DIE K DIC,DIE,DA,DO,DR
"RTN","IBCCC3",20,0)
 K DIE,DIC,DA,DO,DR,X,Y
"RTN","IBCCC3",21,0)
 ;
"RTN","IBCCC3",22,0)
PRDX ;repoint procedure's associated diagnosis (2,304,10-13 -> 362.3)
"RTN","IBCCC3",23,0)
 N IBCPT,IBDIFN1,IBLN,IBI
"RTN","IBCCC3",24,0)
 S IBCPT=0 F  S IBCPT=$O(^DGCR(399,+IBIFN,"CP",IBCPT)) Q:'IBCPT  D
"RTN","IBCCC3",25,0)
 . S IBLN=$G(^DGCR(399,+IBIFN,"CP",IBCPT,0)) F IBI=11:1:14 S IBDIFN1=$P(IBLN,U,IBI) I +IBDIFN1 D
"RTN","IBCCC3",26,0)
 .. S IBDX=+$G(^IBA(362.3,+IBDIFN1,0)) Q:'IBDX
"RTN","IBCCC3",27,0)
 .. S IBDIFN=$O(^IBA(362.3,"AIFN"_IBIFN,IBDX,0)) Q:'IBDIFN
"RTN","IBCCC3",28,0)
 .. S $P(^DGCR(399,+IBIFN,"CP",IBCPT,0),U,IBI)=IBDIFN
"RTN","IBCCC3",29,0)
 ;
"RTN","IBCCC3",30,0)
RX ;copy rx refills (362.4)
"RTN","IBCCC3",31,0)
 N IBRX,IBRIFN,IBRXDA,IBDATE,IBNDC,IBDFN,IB3624DA
"RTN","IBCCC3",32,0)
 ;copy rx refills from old bill
"RTN","IBCCC3",33,0)
 ; IB*2*363 - get NDC# from PRESCRIPTION file (#52) before creating new
"RTN","IBCCC3",34,0)
 ; record entry in 362.4
"RTN","IBCCC3",35,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
"RTN","IBCCC3",36,0)
 . S IBRX=0 F  S IBRX=$O(^IBA(362.4,IBXR,IBRX)) Q:IBRX=""  D
"RTN","IBCCC3",37,0)
 .. S IBRIFN=0 F  S IBRIFN=$O(^IBA(362.4,IBXR,IBRX,IBRIFN)) Q:'IBRIFN  D
"RTN","IBCCC3",38,0)
 ... S IBX=$G(^IBA(362.4,IBRIFN,0)) I IBX=""!($P(IBX,U,2)'=IBIFN1) Q
"RTN","IBCCC3",39,0)
 ... S DIC="^IBA(362.4,",DIC(0)="L",X=$P(IBX,U,1) K DA,DO D FILE^DICN K DA,DO Q:Y'>0
"RTN","IBCCC3",40,0)
 ... S IB3624DA=+Y,IBRXDA=$P(IBX,U,5),IBDATE=$P(IBX,U,3),IBDFN=$$GET1^DIQ(399,IBIFN1,.02,"I")
"RTN","IBCCC3",41,0)
 ... S IBNDC=$S(IBRXDA:$$GETNDC^IBEFUNC3(IBDFN,IBRXDA,IBDATE),1:$P(IBX,U,8))
"RTN","IBCCC3",42,0)
 ... S DR=".02////"_IBIFN_";.03////"_IBDATE_";.04////"_$P(IBX,U,4)_";.05////"_IBRXDA_";.06////"_$P(IBX,U,6)_";.07////"_$P(IBX,U,7)_";.08////"_IBNDC
"RTN","IBCCC3",43,0)
 ... S DIE=DIC,DA=IB3624DA D ^DIE K DIC,DIE,DA,DO,DR
"RTN","IBCCC3",44,0)
 K DIE,DIC,DA,DO,DR,X,Y
"RTN","IBCCC3",45,0)
 ;
"RTN","IBCCC3",46,0)
PROS ;copy prosthetics (362.5)
"RTN","IBCCC3",47,0)
 N IBPR,IBPIFN
"RTN","IBCCC3",48,0)
 ;copy rx refills from old bill
"RTN","IBCCC3",49,0)
 I $D(^IBA(362.5,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
"RTN","IBCCC3",50,0)
 . S IBPR=0 F  S IBPR=$O(^IBA(362.5,IBXR,IBPR)) Q:IBPR=""  D
"RTN","IBCCC3",51,0)
 .. S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.5,IBXR,IBPR,IBPIFN)) Q:'IBPIFN  D
"RTN","IBCCC3",52,0)
 ... S IBX=$G(^IBA(362.5,IBPIFN,0)) I IBX=""!($P(IBX,U,2)'=IBIFN1) Q
"RTN","IBCCC3",53,0)
 ... S DIC="^IBA(362.5,",DIC(0)="L",X=$P(IBX,U,1) K DA,DO D FILE^DICN K DA,DO Q:Y'>0
"RTN","IBCCC3",54,0)
 ... S DR=".02////"_IBIFN_";.04////"_$P(IBX,U,4)_";.05////^S X=$P(IBX,U,5)"
"RTN","IBCCC3",55,0)
 ... S DIE=DIC,DA=+Y D ^DIE K DIC,DIE,DA,DO,DR
"RTN","IBCCC3",56,0)
 K DIE,DIC,DA,DO,DR,X,Y
"RTN","IBCCC3",57,0)
 Q
"RTN","IBCCC3",58,0)
 ;IBCCC3
"RTN","IBCEF21")
0^30^B23765234^B23659732
"RTN","IBCEF21",1,0)
IBCEF21 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS CONTINUED ;06-FEB-96
"RTN","IBCEF21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,296,371,389**;21-MAR-94;Build 6
"RTN","IBCEF21",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF21",4,0)
 ;
"RTN","IBCEF21",5,0)
COID(IBIFN) ; Claim office ID
"RTN","IBCEF21",6,0)
 N IBCOID,IBCOID1,IBIN
"RTN","IBCEF21",7,0)
 S IBIN=$$CURR^IBCEF2(IBIFN),IBCOID1="",IBCOID=$P($$ADDRESS^IBCNSC0(IBIN,.11,5),U,11)
"RTN","IBCEF21",8,0)
 ;
"RTN","IBCEF21",9,0)
 I IBIN D
"RTN","IBCEF21",10,0)
 . I $D(^IBA(364.2,"C",IBIFN)) S IBCOID1=$P($$ADDRESS^IBCNSC0(IBIN,.18,5),U,11) Q  ;Rx
"RTN","IBCEF21",11,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,5)<3 S IBCOID1=$P($$ADDRESS^IBCNSC0(IBIN,.12,5),U,11) Q  ;Inpt
"RTN","IBCEF21",12,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,5)'<3 S IBCOID1=$P($$ADDRESS^IBCNSC0(IBIN,.16,5),U,11) Q  ;Outpt
"RTN","IBCEF21",13,0)
 ;
"RTN","IBCEF21",14,0)
 Q $S(IBCOID1'="":IBCOID1,1:IBCOID)
"RTN","IBCEF21",15,0)
 ;
"RTN","IBCEF21",16,0)
ESGHPST(IBIFN,COB) ; return insureds employment status if the bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF21",17,0)
 ; ESGHP FLAG (2.312,2.1) ^ the employment status (2.312,2.11)
"RTN","IBCEF21",18,0)
 ;
"RTN","IBCEF21",19,0)
 N PPOL,DFN,X,Y S Y=""
"RTN","IBCEF21",20,0)
 S PPOL=$$PPOL^IBCEF2($G(IBIFN),$G(COB)),DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,2)
"RTN","IBCEF21",21,0)
 I +PPOL,+DFN S X=$G(^DPT(DFN,.312,+PPOL,2)) S Y=+$P(X,U,10)_U_$P(X,U,11)
"RTN","IBCEF21",22,0)
 Q Y
"RTN","IBCEF21",23,0)
 ;
"RTN","IBCEF21",24,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if the bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF21",25,0)
 ; ESGHP FLAG (2.312,2.1) ^ employer name (2.312,2.015) ^ employer city (2.312,2.05) 
"RTN","IBCEF21",26,0)
 ;                        ^ employer state abbr (2.312,2.06) ^ employer state ifn  (2.312,2.06)
"RTN","IBCEF21",27,0)
 ;
"RTN","IBCEF21",28,0)
 N PPOL,DFN,X,Y S Y=""
"RTN","IBCEF21",29,0)
 S PPOL=$$PPOL^IBCEF2($G(IBIFN),$G(COB)),DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,2)
"RTN","IBCEF21",30,0)
 I +PPOL,+DFN S X=$G(^DPT(DFN,.312,+PPOL,2)) S Y=+$P(X,U,10)_U_$P(X,U,9)_U_$P(X,U,5)_U_$P($G(^DIC(5,+$P(X,U,6),0)),U,2)_U_$P(X,U,6)
"RTN","IBCEF21",31,0)
 Q Y
"RTN","IBCEF21",32,0)
 ;
"RTN","IBCEF21",33,0)
REMARKS(IBIFN) ; Compile array of bill remarks
"RTN","IBCEF21",34,0)
 ;IBIFN = bill ien
"RTN","IBCEF21",35,0)
 N Z,Z0,Z1,IBARRAY,IBSM
"RTN","IBCEF21",36,0)
 S Z=0
"RTN","IBCEF21",37,0)
 ;S:$P($G(^DGCR(399,IBIFN,"U1")),U,2) Z=Z+1,Z0=$P(^("U1"),U,2),IBXDATA(Z)="OFFSET AMOUNT: "_"$"_+$P(Z0,".")_"."_$E($P(Z0,".",2)_"00",1,2)
"RTN","IBCEF21",38,0)
 S:$P($G(^DGCR(399,IBIFN,"U1")),U,8)'="" Z=Z+1,IBXDATA(Z)=$P(^("U1"),U,8) ;Bill comment on bill
"RTN","IBCEF21",39,0)
 S Z0=$G(^DGCR(399,IBIFN,0)),Z1=$G(^DGCR(399.3,+$P(Z0,U,7),0))
"RTN","IBCEF21",40,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF21",41,0)
 I $P($G(IBARRAY),U,2) D  ;Prosthetics
"RTN","IBCEF21",42,0)
 . S Z0=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1,IBXDATA(Z)="Prosthetic: "_$E($$PINB^IBCSC5B(+IBARRAY(Z0,Z1)),1,39)_" "_$E(Z0,4,5)_"/"_$E(Z0,6,7)_"/"_$E(Z0,1,2)
"RTN","IBCEF21",43,0)
 Q
"RTN","IBCEF21",44,0)
 ;
"RTN","IBCEF21",45,0)
CREM(IBIFN) ; Compile array of bill remarks common to every bill
"RTN","IBCEF21",46,0)
 ;IBIFN = bill ien
"RTN","IBCEF21",47,0)
 N Z
"RTN","IBCEF21",48,0)
 S Z=0
"RTN","IBCEF21",49,0)
 S:$P($G(^IBE(350.9,1,1)),U,4)'="" Z=Z+1,IBXDATA(Z)=$P(^(1),U,4) ;Site specific 'every bill' comment
"RTN","IBCEF21",50,0)
 Q
"RTN","IBCEF21",51,0)
 ;
"RTN","IBCEF21",52,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF21",53,0)
 ; IBIFN = bill ien
"RTN","IBCEF21",54,0)
 ; NOOUTCK = flag that will:
"RTN","IBCEF21",55,0)
 ;          (1) no check for inpt episode overlap for outpt
"RTN","IBCEF21",56,0)
 ;          (0 or null) performs check for inpt episode overlap for outpt
"RTN","IBCEF21",57,0)
 ;                                      
"RTN","IBCEF21",58,0)
 ; Returns IBXDATA = fileman date format
"RTN","IBCEF21",59,0)
 N Z,Z0,Z1
"RTN","IBCEF21",60,0)
 S Z=$G(^DGCR(399,IBIFN,0)),Z1=$P($G(^("U")),U,20),Z0=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF21",61,0)
 S IBXDATA=$S(Z0&$P(Z,U,8):$P($G(^DGPT(+$P(Z,U,8),0)),U,2),1:"")
"RTN","IBCEF21",62,0)
 S:'IBXDATA IBXDATA=$P(Z,U,3)_$S(Z0&(Z1<25):"."_$E("0",$L(Z1))_Z1,1:"")
"RTN","IBCEF21",63,0)
 ; Check to see if outpt episode (date in event date) overlaps inpt
"RTN","IBCEF21",64,0)
 ;  episode - use admit date if it does
"RTN","IBCEF21",65,0)
 I 'Z0,IBXDATA,'$G(NOOUTCK) D
"RTN","IBCEF21",66,0)
 . N VAINDT,VAIN,DFN
"RTN","IBCEF21",67,0)
 . S VAINDT=IBXDATA,DFN=$P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBCEF21",68,0)
 . D INP^VADPT S IBXDATA=+VAIN(7) S:'IBXDATA IBXDATA=""
"RTN","IBCEF21",69,0)
 I 'IBXDATA,'Z0 S IBXDATA=$$SERVDT^IBCEF(IBIFN,,2)
"RTN","IBCEF21",70,0)
 Q
"RTN","IBCEF21",71,0)
 ;
"RTN","IBCEF21",72,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF21",73,0)
 ; IBIFN = bill ien
"RTN","IBCEF21",74,0)
 N Z,Z0
"RTN","IBCEF21",75,0)
 S Z=$$INPAT^IBCEF(IBIFN,1),Z0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF21",76,0)
 I Z S IBXDATA=+$G(^DGPT(+$P(Z0,U,8),70)) S:'IBXDATA IBXDATA=$P(Z0,U,16)
"RTN","IBCEF21",77,0)
 I 'Z N VAINDT,VAIN,DFN S DFN=$P($G(^DGCR(399,IBIFN,0)),U,2) D INP^VADPT I VAIN(1) S IBXDATA=+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF21",78,0)
 Q
"RTN","IBCEF21",79,0)
 ;
"RTN","IBCEF21",80,0)
INSSECID(IBIFN,TYPE,SEQ) ; Extract subscriber and patient prim/sec ID's
"RTN","IBCEF21",81,0)
 ; IBIFN required
"RTN","IBCEF21",82,0)
 ; TYPE is either "PAT" or "SUB" to indicate we need to extract either
"RTN","IBCEF21",83,0)
 ;          patient or subscriber ID information.  Default="SUB".
"RTN","IBCEF21",84,0)
 ; SEQ is the insurance sequence# (1,2,3).  Default is current ins seq#.
"RTN","IBCEF21",85,0)
 ;
"RTN","IBCEF21",86,0)
 ; Output:
"RTN","IBCEF21",87,0)
 ; Function returns an 8-piece string as follows.
"RTN","IBCEF21",88,0)
 ;   [1] primary qualifier
"RTN","IBCEF21",89,0)
 ;   [2] primary ID
"RTN","IBCEF21",90,0)
 ;   [3] secondary qual(1)
"RTN","IBCEF21",91,0)
 ;   [4] secondary ID(1)
"RTN","IBCEF21",92,0)
 ;   [5] secondary qual(2)
"RTN","IBCEF21",93,0)
 ;   [6] secondary ID(2)
"RTN","IBCEF21",94,0)
 ;   [7] secondary qual(3)
"RTN","IBCEF21",95,0)
 ;   [8] secondary ID(3)
"RTN","IBCEF21",96,0)
 ;
"RTN","IBCEF21",97,0)
 NEW DATA,DFN,POL,IB0,IB5,REL
"RTN","IBCEF21",98,0)
 S DATA=""
"RTN","IBCEF21",99,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN G INSSX
"RTN","IBCEF21",100,0)
 I $G(TYPE)="" S TYPE="SUB"               ; default type of ID's to get
"RTN","IBCEF21",101,0)
 I '$F(".PAT.SUB.","."_TYPE_".") G INSSX
"RTN","IBCEF21",102,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)     ; default current ins seq#
"RTN","IBCEF21",103,0)
 I '$F(".1.2.3.","."_SEQ_".") G INSSX
"RTN","IBCEF21",104,0)
 S DFN=+$P($G(^DGCR(399,IBIFN,0)),U,2) I 'DFN G INSSX
"RTN","IBCEF21",105,0)
 S POL=+$P($G(^DGCR(399,IBIFN,"M")),U,SEQ+11) I 'POL G INSSX
"RTN","IBCEF21",106,0)
 S IB0=$G(^DPT(DFN,.312,POL,0)) I IB0="" G INSSX
"RTN","IBCEF21",107,0)
 S IB5=$G(^DPT(DFN,.312,POL,5))
"RTN","IBCEF21",108,0)
 S REL=+$P(IB0,U,16)                      ; pat rel to insured
"RTN","IBCEF21",109,0)
 S $P(DATA,U,1)="MI"
"RTN","IBCEF21",110,0)
 S $P(DATA,U,2)=$P(IB0,U,2)               ; subscriber primary ID
"RTN","IBCEF21",111,0)
 S $P(DATA,U,3,8)=$P(IB5,U,2,7)           ; subscriber secondary data
"RTN","IBCEF21",112,0)
 I TYPE="PAT",REL'=1 D
"RTN","IBCEF21",113,0)
 . S $P(DATA,U,2)=$P(IB5,U,1)             ; patient primary ID
"RTN","IBCEF21",114,0)
 . S $P(DATA,U,3,8)=$P(IB5,U,8,13)        ; patient secondary data
"RTN","IBCEF21",115,0)
 . Q
"RTN","IBCEF21",116,0)
 ;
"RTN","IBCEF21",117,0)
 S DATA=$$SCRUB(DATA)     ; scrub the data
"RTN","IBCEF21",118,0)
INSSX ;
"RTN","IBCEF21",119,0)
 Q DATA
"RTN","IBCEF21",120,0)
 ;
"RTN","IBCEF21",121,0)
SCRUB(DATA) ; Scrub the 8-piece string gathered above
"RTN","IBCEF21",122,0)
 NEW PCE
"RTN","IBCEF21",123,0)
 ;
"RTN","IBCEF21",124,0)
 ; make sure you can't have an ID without a qualifier or a qualifier
"RTN","IBCEF21",125,0)
 ; without an ID.  Check all 4 pairs.
"RTN","IBCEF21",126,0)
 F PCE=1,3,5,7 D
"RTN","IBCEF21",127,0)
 . I $P(DATA,U,PCE)'="",$P(DATA,U,PCE+1)'="" Q
"RTN","IBCEF21",128,0)
 . S ($P(DATA,U,PCE),$P(DATA,U,PCE+1))=""
"RTN","IBCEF21",129,0)
 . Q
"RTN","IBCEF21",130,0)
 ;
"RTN","IBCEF21",131,0)
 ; fill in secondary gaps.  If Set1 and Set2 are blank, but Set3 exists
"RTN","IBCEF21",132,0)
 ; then move Set3 to Set1 and delete Set3.
"RTN","IBCEF21",133,0)
 I $P(DATA,U,3)="",$P(DATA,U,5)="",$P(DATA,U,7)'="" D
"RTN","IBCEF21",134,0)
 . S $P(DATA,U,3)=$P(DATA,U,7),$P(DATA,U,4)=$P(DATA,U,8)
"RTN","IBCEF21",135,0)
 . S ($P(DATA,U,7),$P(DATA,U,8))=""
"RTN","IBCEF21",136,0)
 . Q
"RTN","IBCEF21",137,0)
 ;
"RTN","IBCEF21",138,0)
 ; fill in secondary gaps more generically.
"RTN","IBCEF21",139,0)
 ; If Set(n) is blank, but Set(n+1) exists, then move it up.
"RTN","IBCEF21",140,0)
 F PCE=3,5 D
"RTN","IBCEF21",141,0)
 . I $P(DATA,U,PCE)="",$P(DATA,U,PCE+2)'="" D
"RTN","IBCEF21",142,0)
 .. S $P(DATA,U,PCE)=$P(DATA,U,PCE+2)
"RTN","IBCEF21",143,0)
 .. S $P(DATA,U,PCE+1)=$P(DATA,U,PCE+3)
"RTN","IBCEF21",144,0)
 .. S ($P(DATA,U,PCE+2),$P(DATA,U,PCE+3))=""
"RTN","IBCEF21",145,0)
 .. Q
"RTN","IBCEF21",146,0)
 . Q
"RTN","IBCEF21",147,0)
 ;
"RTN","IBCEF21",148,0)
 Q DATA
"RTN","IBCEF21",149,0)
 ;
"RTN","IBCEF22")
0^44^B52286279^B52106321
"RTN","IBCEF22",1,0)
IBCEF22 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;06-FEB-96
"RTN","IBCEF22",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,135,155,309,349,389**;21-MAR-94;Build 6
"RTN","IBCEF22",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF22",4,0)
 ;
"RTN","IBCEF22",5,0)
 ;  OVERFLOW FROM ROUTINE IBCEF2
"RTN","IBCEF22",6,0)
HOS(IBIFN) ; Extract rev codes for episode billed on a UB-04 into IBXDATA
"RTN","IBCEF22",7,0)
 ; IBIFN = bill ien
"RTN","IBCEF22",8,0)
 ; Format: IBXDATA(n) =
"RTN","IBCEF22",9,0)
 ;  rev cd ptr ^ CPT CODE ptr ^ unit chg ^ units ^ tot charge
"RTN","IBCEF22",10,0)
 ;    ^ tot uncov^ FL49 value ^ ien of rev code multiple entry(s)
"RTN","IBCEF22",11,0)
 ;      (separated by ";")
"RTN","IBCEF22",12,0)
 ;    ^ modifiers specific to rev code/proc (separated by ",")
"RTN","IBCEF22",13,0)
 ;    ^ rev code date, if it can be determined by a corresponding proc
"RTN","IBCEF22",14,0)
 ;
"RTN","IBCEF22",15,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF22",16,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF22",17,0)
 ;      line in the first '^' piece followed by the '0' node of file
"RTN","IBCEF22",18,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF22",19,0)
 ;       COB = COB seq # of adjustment's ins co, m = seq #
"RTN","IBCEF22",20,0)
 ;         -- AND --
"RTN","IBCEF22",21,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF22",22,0)
 ;           the '0' node for each subordinate entry of file
"RTN","IBCEF22",23,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837)
"RTN","IBCEF22",24,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF22",25,0)
 ;
"RTN","IBCEF22",26,0)
 N IBDA,IBCOMB,IBINPAT,IBLN,IBX,IBY,IBZ,IBS,IBSS,IBXTRA,IBX1,IBXS,IBP,IBPO,IBP1,IBDEF,Z,Z0,Z1,ZX,QQ,IBMOD
"RTN","IBCEF22",27,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF22",28,0)
 I 'IBINPAT D F^IBCEF("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF22",29,0)
 S IBDEF=$G(IBZ)
"RTN","IBCEF22",30,0)
 ; loop through all proc codes - sort by procedure, modifiers and print order
"RTN","IBCEF22",31,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"CP",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ D
"RTN","IBCEF22",32,0)
 . S IBP(+$P(IBZ,U)_U_$$GETMOD^IBEFUNC(IBIFN,IBDA,1),$S($P(IBZ,U,4):$P(IBZ,U,4),1:999),IBDA)=$P(IBZ,U,2)
"RTN","IBCEF22",33,0)
 ; loop through all rev codes - sort by rev code
"RTN","IBCEF22",34,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ S IBMOD="" D
"RTN","IBCEF22",35,0)
 . S IBX=$G(^DGCR(399.2,+IBZ,0)),IBX1="",IBPO=0
"RTN","IBCEF22",36,0)
 . ; Auto-added procedure charge
"RTN","IBCEF22",37,0)
 . I $P(IBZ,U,10)=4,$P(IBZ,U,11) D  ; Soft link to proc
"RTN","IBCEF22",38,0)
 .. S Z=$G(^DGCR(399,IBIFN,"CP",$P(IBZ,U,11),0))
"RTN","IBCEF22",39,0)
 .. Q:Z=""
"RTN","IBCEF22",40,0)
 .. S ZX=+Z_U_$$GETMOD^IBEFUNC(IBIFN,$P(IBZ,U,11),1)
"RTN","IBCEF22",41,0)
 .. Q:'$O(IBP(ZX,0))&'$O(IBP1(ZX,0))
"RTN","IBCEF22",42,0)
 .. I $P(IBZ,U,6) Q:$S($P(Z,U)'["ICPT":1,1:+$P(Z,U)'=$P(IBZ,U,6))
"RTN","IBCEF22",43,0)
 .. S Z0=$S($D(IBP(ZX)):$O(IBP(ZX,0)),1:$O(IBP1(ZX,0)))
"RTN","IBCEF22",44,0)
 .. S:'Z0 Z0=999
"RTN","IBCEF22",45,0)
 .. Q:'$D(IBP(ZX,+Z0,$P(IBZ,U,11)))&'$D(IBP1(ZX,+Z0,$P(IBZ,U,11)))
"RTN","IBCEF22",46,0)
 .. I '$D(IBP1(ZX,+Z0,$P(IBZ,U,11))) S IBP1(ZX,+Z0,$P(IBZ,U,11))=IBP(ZX,+Z0,$P(IBZ,U,11)) K IBP(ZX,+Z0,$P(IBZ,U,11))
"RTN","IBCEF22",47,0)
 .. S IBX1=$P(Z,U,2),IBPO=+Z0,IBMOD=$P(ZX,U,2)
"RTN","IBCEF22",48,0)
 . ; Manually added charge with a procedure
"RTN","IBCEF22",49,0)
 . I $P(IBZ,U,6),$S($P(IBZ,U,10)=4:'$P(IBZ,U,11),1:1),+$O(IBP($P(IBZ,U,6)))=$P(IBZ,U,6) D
"RTN","IBCEF22",50,0)
 .. ; No direct link, but a proc exists on rev code and in procedure mult without and then with modifiers
"RTN","IBCEF22",51,0)
 .. S ZX=$O(IBP($P(IBZ,U,6)))
"RTN","IBCEF22",52,0)
 .. F QQ=1,2 Q:IBPO  S Z="" F  S Z=$O(IBP(ZX,Z),-1) Q:'Z!(IBPO)  S Z0=0 F  S Z0=$O(IBP(ZX,Z,Z0)) Q:'Z0  S Z1=$G(^DGCR(399,IBIFN,"CP",Z0,0)) D  Q:IBPO
"RTN","IBCEF22",53,0)
 ... ; Ignore if not a CPT or a modifier exists and this is first pass
"RTN","IBCEF22",54,0)
 ... S IBMOD=$$GETMOD^IBEFUNC(IBIFN,Z0,1)
"RTN","IBCEF22",55,0)
 ... Q:$S($P(Z1,U)'["ICPT":1,QQ=1:IBMOD'="",1:0)
"RTN","IBCEF22",56,0)
 ... S IBPO=+$P(Z1,U,4),IBX1=$P(Z1,U,2)
"RTN","IBCEF22",57,0)
 ... K IBP(+Z1_U_IBMOD,Z,Z0)
"RTN","IBCEF22",58,0)
 . ;
"RTN","IBCEF22",59,0)
 . I IBX'="" D  ; revenue code is valid
"RTN","IBCEF22",60,0)
 .. F Z=900:1 S Z0=$S(IBPO:IBPO,$D(IBX(" "_$P(IBX,U),Z)):0,1:Z) I Z0 S IBPO=Z0 Q
"RTN","IBCEF22",61,0)
 .. S IBX(" "_$P(IBX,U),IBPO,IBDA)=IBX,IBX(" "_$P(IBX,U),IBPO,IBDA,"DT")=$S(IBX1:IBX1,1:IBDEF),IBX(" "_$P(IBX,U),IBPO,IBDA,"MOD")=IBMOD
"RTN","IBCEF22",62,0)
 ;
"RTN","IBCEF22",63,0)
 S IBS="" F  S IBS=$O(IBX(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX(IBS,IBPO)) Q:'IBPO  D
"RTN","IBCEF22",64,0)
 . S IBDA=0 F  S IBDA=$O(IBX(IBS,IBPO,IBDA)) Q:'IBDA  S IBX=$G(IBX(IBS,IBPO,IBDA)),IBZ=$G(^DGCR(399,IBIFN,"RC",IBDA,0)) I IBX'="" D
"RTN","IBCEF22",65,0)
 .. ;S IBXS=$P(IBZ,U,2)_U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD"))
"RTN","IBCEF22",66,0)
 .. S IBXS=U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD")) ;combine same proc and modifiers regardless of rate
"RTN","IBCEF22",67,0)
 .. S:IBPO'<900&'$$ACCRV($P(IBS," ",2))&$S(IBINPAT:$P(IBZ,U,6),1:1) IBCOMB(IBS,IBXS,IBPO)=IBDA
"RTN","IBCEF22",68,0)
 .. S:'$D(IBX1(IBS,IBPO,IBXS,1)) IBX1(IBS,IBPO,IBXS,1)=IBX,IBX1(IBS,IBPO,IBXS,2)=IBZ
"RTN","IBCEF22",69,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U)=$P($G(IBX1(IBS,IBPO,IBXS)),U)+$P(IBZ,U,3)
"RTN","IBCEF22",70,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U,2)=$P($G(IBX1(IBS,IBPO,IBXS)),U,2)+$P(IBZ,U,4)
"RTN","IBCEF22",71,0)
 .. S IBX1(IBS,IBPO,IBXS,"DT")=$G(IBX(IBS,IBPO,IBDA,"DT")),IBX1(IBS,IBPO,IBXS,"IEN")=$G(IBX1(IBS,IBPO,IBXS,"IEN"))_$S($G(IBX1(IBS,IBPO,IBXS,"IEN")):";",1:"")_IBDA
"RTN","IBCEF22",72,0)
 ;
"RTN","IBCEF22",73,0)
 S IBS="" F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=899 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  D  ; Check to combine like rev codes without print order
"RTN","IBCEF22",74,0)
 . N Q,Q0,Q1,Z,Z0,Z1,Z2,IBZ1,IBZ2
"RTN","IBCEF22",75,0)
 . S Z=""
"RTN","IBCEF22",76,0)
 . N IBACC
"RTN","IBCEF22",77,0)
 . F  S Z=$O(IBX1(IBS,IBPO,Z)) Q:Z=""  S Q=IBPO F  S Q=$O(IBCOMB(IBS,Z,Q)) Q:'Q  I Q'=IBPO S IBZ1=$G(IBX1(IBS,IBPO,Z,1)),IBZ2=$G(IBX1(IBS,IBPO,Z,2)) D
"RTN","IBCEF22",78,0)
 .. Q:$G(IBX1(IBS,IBPO,Z,1))'=$G(IBX1(IBS,Q,Z,1))
"RTN","IBCEF22",79,0)
 .. S Q1=1,IBACC=$$ACCRV(+$P(IBS," ",2))
"RTN","IBCEF22",80,0)
 .. F Q0=1,5:1:7,10:1:13,15 D  Q:'Q1
"RTN","IBCEF22",81,0)
 ... I IBACC Q:Q0=5!(Q0>6)
"RTN","IBCEF22",82,0)
 ... I (Q0=11!(Q0=15))&($P($G(IBX1(IBS,Q,Z,2)),U,10)=3) Q
"RTN","IBCEF22",83,0)
 ... I Q0=5,'IBINPAT Q
"RTN","IBCEF22",84,0)
 ... I $P($G(IBX1(IBS,IBPO,Z,2)),U,Q0)'=$P($G(IBX1(IBS,Q,Z,2)),U,Q0) S Q1=0
"RTN","IBCEF22",85,0)
 .. Q:'Q1
"RTN","IBCEF22",86,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,3)=$P(IBX1(IBS,IBPO,Z,2),U,3)+$P(IBX1(IBS,Q,Z,2),U,3)
"RTN","IBCEF22",87,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,4)=$P(IBX1(IBS,IBPO,Z,2),U,4)+$P(IBX1(IBS,Q,Z,2),U,4)
"RTN","IBCEF22",88,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,9)=$P(IBX1(IBS,IBPO,Z,2),U,9)+$P(IBX1(IBS,Q,Z,2),U,9)
"RTN","IBCEF22",89,0)
 .. S IBX1(IBS,IBPO,Z)=$P(IBX1(IBS,IBPO,Z,2),U,3)_U_$P(IBX1(IBS,IBPO,Z,2),U,4)
"RTN","IBCEF22",90,0)
 .. S IBX1(IBS,IBPO,Z,"IEN")=IBX1(IBS,IBPO,Z,"IEN")_";"_IBX1(IBS,Q,Z,"IEN")
"RTN","IBCEF22",91,0)
 .. K IBX1(IBS,Q,Z)
"RTN","IBCEF22",92,0)
 ;
"RTN","IBCEF22",93,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",94,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  S IBSS="" F  S IBSS=$O(IBX1(IBS,IBPO,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",95,0)
 . S IBX=$G(IBX1(IBS,IBPO,IBSS,1)),IBZ=$G(IBX1(IBS,IBPO,IBSS,2))
"RTN","IBCEF22",96,0)
 . S IBLN=$G(IBLN)+1,IBXDATA(IBLN)=$P(IBX,U)_U_$P(IBZ,U,6)_U_$P(IBZ,U,2)_U_+IBX1(IBS,IBPO,IBSS)_U_+$P(IBX1(IBS,IBPO,IBSS),U,2),$P(IBXDATA(IBLN),U,10)=$G(IBX1(IBS,IBPO,IBSS,"DT"))
"RTN","IBCEF22",97,0)
 . S $P(IBXDATA(IBLN),U,6)=$P(IBZ,U,9),$P(IBXDATA(IBLN),U,7)=$P(IBZ,U,13),$P(IBXDATA(IBLN),U,8)=$G(IBX1(IBS,IBPO,IBSS,"IEN")),$P(IBXDATA(IBLN),U,9)=$P($P(IBSS,U,3),",",1,2)
"RTN","IBCEF22",98,0)
 . ; Extract line lev COB data for sec or tert bill
"RTN","IBCEF22",99,0)
 . I $$COBN^IBCEF(IBIFN)>1 D COBLINE^IBCEU6(IBIFN,IBLN,.IBXDATA,,.IBXTRA) I $D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,1) ;Handle bundled/unbundled
"RTN","IBCEF22",100,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN))!$D(^IBA(362.5,"AIFN"_IBIFN)) D
"RTN","IBCEF22",101,0)
 . N IBARRAY,IBX,IBZ,IBRX,IBLCNT
"RTN","IBCEF22",102,0)
 . S IBLCNT=0
"RTN","IBCEF22",103,0)
 . ; Print prescriptions, prosthetics on front of UB-04
"RTN","IBCEF22",104,0)
 . D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBCEF22",105,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",106,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",107,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=""
"RTN","IBCEF22",108,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)="PRESCRIPTION REFILLS:",IBLCNT=2
"RTN","IBCEF22",109,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBRX=IBARRAY(IBX,IBY) D
"RTN","IBCEF22",110,0)
 ... D ZERO^IBRXUTL(+$P(IBRX,U,2))
"RTN","IBCEF22",111,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBRX,U,6):"$"_$FN($P(IBRX,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$G(^TMP($J,"IBDRUG",+$P(IBRX,U,2),.01))
"RTN","IBCEF22",112,0)
 ... S IBZ=$S(+$P(IBRX,U,4):"QTY: "_$P(IBRX,U,4)_" ",1:"")_$S(+$P(IBRX,U,3):"for "_$P(IBRX,U,3)_" days supply ",1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",113,0)
 ... S IBZ=$S($P(IBRX,U,5)'="":"NDC #: "_$P(IBRX,U,5),1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",114,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCEF22",115,0)
 ... Q
"RTN","IBCEF22",116,0)
 . ;
"RTN","IBCEF22",117,0)
 . D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF22",118,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",119,0)
 .. S IBLCNT=0
"RTN","IBCEF22",120,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",121,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=""
"RTN","IBCEF22",122,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)="PROSTHETIC REFILLS:",IBLCNT=2
"RTN","IBCEF22",123,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCEF22",124,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($$PINB^IBCSC5B(+IBARRAY(IBX,IBY)),1,54)
"RTN","IBCEF22",125,0)
 Q
"RTN","IBCEF22",126,0)
 ;
"RTN","IBCEF22",127,0)
ACCRV(X) ; Returns 1 if X is an accomodation RC, 0 if not
"RTN","IBCEF22",128,0)
 Q ((X'<100&(X'>219))!(X=224))
"RTN","IBCEF22",129,0)
 ;
"RTN","IBCEF3")
0^31^B45972715^B46268284
"RTN","IBCEF3",1,0)
IBCEF3 ;ALB/TMP - FORMATTER SPECIFIC BILL FLD FUNCTIONS ;17-JUNE-96
"RTN","IBCEF3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,121,51,152,210,155,348,349,389**;21-MAR-94;Build 6
"RTN","IBCEF3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF3",4,0)
 ;
"RTN","IBCEF3",5,0)
MPG(PG,FLDS,FORM) ; Set static flds on pages after page 1
"RTN","IBCEF3",6,0)
 ;        for either 1500 or UB
"RTN","IBCEF3",7,0)
 ;  PG = page #
"RTN","IBCEF3",8,0)
 ; FORM= 1 for UB, otherwise for 1500
"RTN","IBCEF3",9,0)
 ;  FLDS: array passed by reference and containing lines OR
"RTN","IBCEF3",10,0)
 ;        line/column from pg 1 to repeat on subsequent pages
"RTN","IBCEF3",11,0)
 ;        Format: FLDS(LINE,COL)  or  FLDS(LINE) for whole line
"RTN","IBCEF3",12,0)
 ;   CMS-1500:        LINES 1-5,7-43,57 from col 1 to 50, 58-63
"RTN","IBCEF3",13,0)
 ;         UB:        see CKPGUB for lines and columns
"RTN","IBCEF3",14,0)
 ;
"RTN","IBCEF3",15,0)
 N Z,Z0,Z1,LPG
"RTN","IBCEF3",16,0)
 S FORM=$S($G(FORM)=1:3,1:2)
"RTN","IBCEF3",17,0)
 I FORM=2 D  ; print page # on each pg, totals on last page of 1500
"RTN","IBCEF3",18,0)
 . S LPG=+$O(^TMP("IBXDATA",$J,IBXREC,""),-1)
"RTN","IBCEF3",19,0)
 . S Z="[Page "_PG_" of "_LPG_"]"
"RTN","IBCEF3",20,0)
 . S Z=$$FO^IBCNEUT1(Z,17,"R")
"RTN","IBCEF3",21,0)
 . D SETGBL^IBCEFG(PG,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",22,0)
 . I PG=2 S Z=$P(Z,"[",1)_"[Page 1 of "_LPG_"]" D SETGBL^IBCEFG(1,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",23,0)
 . I LPG=PG D
"RTN","IBCEF3",24,0)
 .. ;
"RTN","IBCEF3",25,0)
 .. ; esg - IB*2*348 - update dollar format for last page of 1500
"RTN","IBCEF3",26,0)
 .. ;
"RTN","IBCEF3",27,0)
 .. D SETGBL^IBCEFG(PG,57,51,$$DOL^IBCEF77($G(IBXSAVE("TOT")),9),.IBXSIZE)
"RTN","IBCEF3",28,0)
 .. D SETGBL^IBCEFG(PG,57,62,$$DOL^IBCEF77($G(IBXSAVE("PAID")),8),.IBXSIZE)
"RTN","IBCEF3",29,0)
 .. D SETGBL^IBCEFG(PG,57,71,$$DOL^IBCEF77($G(IBXSAVE("BDUE")),8),.IBXSIZE)
"RTN","IBCEF3",30,0)
 .. K IBXSAVE("PTOT"),IBXSAVE("TOT"),IBXSAVE("BDUE"),IBXSAVE("PAID")
"RTN","IBCEF3",31,0)
 ;
"RTN","IBCEF3",32,0)
 S Z=0 F  S Z=$O(FLDS(Z)) Q:'Z  D
"RTN","IBCEF3",33,0)
 . I $O(FLDS(Z,""))="" D  Q  ;repeats line
"RTN","IBCEF3",34,0)
 .. S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) Q:'Z0  S Z1=$G(^(Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",35,0)
 . S Z0=0 F  S Z0=$O(FLDS(Z,Z0)) Q:'Z0  S Z1=$G(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",36,0)
 . I FORM=2,LPG'=PG D
"RTN","IBCEF3",37,0)
 .. D SETGBL^IBCEFG(PG,57,51,"",.IBXSIZE)
"RTN","IBCEF3",38,0)
 .. D SETGBL^IBCEFG(PG,57,71,"",.IBXSIZE)
"RTN","IBCEF3",39,0)
 Q
"RTN","IBCEF3",40,0)
 ;
"RTN","IBCEF3",41,0)
NONSERV(Z,Z0) ; Set variable if non-service/non-text data is present for box
"RTN","IBCEF3",42,0)
 ;  24 of CMS-1500
"RTN","IBCEF3",43,0)
 ; Z = sequence of IBXSAVE being processed
"RTN","IBCEF3",44,0)
 ; Z0 = sequnce within IBXDATA to indicate actual line #
"RTN","IBCEF3",45,0)
 I $P(IBXSAVE("BOX24",Z),U)="" S IBXSAVE("NON-SERV",Z0)=""
"RTN","IBCEF3",46,0)
 Q
"RTN","IBCEF3",47,0)
 ;
"RTN","IBCEF3",48,0)
PG(VAL,LNCT) ;Set next pg for CMS-1500 lines
"RTN","IBCEF3",49,0)
 ;VAL = value of fld
"RTN","IBCEF3",50,0)
 ;LNCT = line # from IBXSAVE("BOX24") array
"RTN","IBCEF3",51,0)
 N IBP,IBL
"RTN","IBCEF3",52,0)
 S IBP=LNCT\12+(LNCT#12>0),IBL=LNCT-(12*(IBP-1))-1
"RTN","IBCEF3",53,0)
 I IBL'<0 S VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA)) D SETGBL^IBCEFG(IBP,IBXLN+IBL,IBXCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",54,0)
 K IBXDATA(LNCT)
"RTN","IBCEF3",55,0)
 Q
"RTN","IBCEF3",56,0)
 ;
"RTN","IBCEF3",57,0)
MPGUB(PG,OFFSET,VAL,IBLN,IBCOL,NOFORM) ; Set up pages > 1 for UB overflows
"RTN","IBCEF3",58,0)
 ; PG = Page # to set (REQUIRED)
"RTN","IBCEF3",59,0)
 ; OFFSET = offset from first line this should be extracted into
"RTN","IBCEF3",60,0)
 ;          0 = first line (REQUIRED)
"RTN","IBCEF3",61,0)
 ; VAL = value to set (REQUIRED)
"RTN","IBCEF3",62,0)
 ; IBLN = line to set data at (if null, uses IBXLN)
"RTN","IBCEF3",63,0)
 ; IBCOL = column to set data at (if null, uses IBXCOL)
"RTN","IBCEF3",64,0)
 ; NOFORM = don't format, just output data as passed
"RTN","IBCEF3",65,0)
 ; Assumes formatter IBXLN,IBXCOL variables exist
"RTN","IBCEF3",66,0)
 ;
"RTN","IBCEF3",67,0)
 I $G(IBLN)="" S IBLN=IBXLN
"RTN","IBCEF3",68,0)
 I $G(IBCOL)="" S IBCOL=IBXCOL
"RTN","IBCEF3",69,0)
 S:'$G(NOFORM) VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA))
"RTN","IBCEF3",70,0)
 D SETGBL^IBCEFG(PG,IBLN+OFFSET,IBCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",71,0)
 Q
"RTN","IBCEF3",72,0)
 ;
"RTN","IBCEF3",73,0)
CKREV(CT,VAL) ; Check too many rev code lines to fit on page
"RTN","IBCEF3",74,0)
 ; This procedure is only called when CT>22 (i.e. 23 or more)
"RTN","IBCEF3",75,0)
 ;
"RTN","IBCEF3",76,0)
 D MPGUB((CT-1)\22+1,CT-1#22,VAL) ; 22 codes on a single page
"RTN","IBCEF3",77,0)
 Q
"RTN","IBCEF3",78,0)
 ;
"RTN","IBCEF3",79,0)
CKPGUB ; Check to see if multiple UB pages are needed then populate
"RTN","IBCEF3",80,0)
 ; static flds from page 1, add page numbers
"RTN","IBCEF3",81,0)
 ;
"RTN","IBCEF3",82,0)
 N FLDS,LPG,IBPG,IBP,Z,Z0,TOT1,TOT2
"RTN","IBCEF3",83,0)
 ;
"RTN","IBCEF3",84,0)
 S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1),IBP=0
"RTN","IBCEF3",85,0)
 S Z="" F  S Z=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z,Z0)) Q:'Z0  I $G(^(Z0))'="" S IBP=1 Q
"RTN","IBCEF3",86,0)
 I 'IBP K ^TMP("IBXDATA",$J,IBXREC,LPG) S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1) Q:LPG=1
"RTN","IBCEF3",87,0)
 ;
"RTN","IBCEF3",88,0)
 ; Static flds
"RTN","IBCEF3",89,0)
 F Z=2:1:7 S FLDS(Z)=""    ; FL-1 thru FL-9
"RTN","IBCEF3",90,0)
 F Z=1,10,13,19,22,25,28,31 S FLDS(9,Z)=""    ; FL-10 thru FL-17
"RTN","IBCEF3",91,0)
 F Z=13:1:17 S FLDS(Z,1)=""   ; payer address in FL-38
"RTN","IBCEF3",92,0)
 S FLDS(41,46)=""     ; creation date
"RTN","IBCEF3",93,0)
 F Z=42,43,44,45,47,48,49,51,52,53 S FLDS(Z)=""   ; FL-50 thru FL-65
"RTN","IBCEF3",94,0)
 F Z=57,59,61,63 S (FLDS(Z,59),FLDS(Z,72),FLDS(Z,74))=""   ; FL-76-79 ID's
"RTN","IBCEF3",95,0)
 F Z=58,60,62,64 S (FLDS(Z,53),FLDS(Z,71))=""    ; FL-76-79 Names
"RTN","IBCEF3",96,0)
 ;
"RTN","IBCEF3",97,0)
 F IBPG=1:1:LPG D
"RTN","IBCEF3",98,0)
 . ; Add pg # to last line of rev codes if multiple pages
"RTN","IBCEF3",99,0)
 . N IB,IBP
"RTN","IBCEF3",100,0)
 . S IB=$G(^TMP("IBXDATA",$J,IBXREC,IBPG,41,6))
"RTN","IBCEF3",101,0)
 . D MPGUB(IBPG,0,IBPG,41,10,1)
"RTN","IBCEF3",102,0)
 . D MPGUB(IBPG,0,LPG,41,16,1)
"RTN","IBCEF3",103,0)
 . D:IBPG>1 MPG(IBPG,.FLDS,1)
"RTN","IBCEF3",104,0)
 . Q
"RTN","IBCEF3",105,0)
 ; print totals on line 41 of the last page
"RTN","IBCEF3",106,0)
 S (TOT1,TOT2)=0
"RTN","IBCEF3",107,0)
 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z0=^(Z) I +Z0=1 S TOT1=TOT1+$P(Z0,U,7),TOT2=TOT2+$P(Z0,U,8)
"RTN","IBCEF3",108,0)
 D MPGUB(IBPG,0,"0001",41,1,1)
"RTN","IBCEF3",109,0)
 D MPGUB(IBPG,0,$$DOL^IBCEF77(TOT1,9),41,61,1)
"RTN","IBCEF3",110,0)
 D MPGUB(IBPG,0,$$DOL^IBCEF77(TOT2,9),41,71,1)
"RTN","IBCEF3",111,0)
 ;
"RTN","IBCEF3",112,0)
 Q
"RTN","IBCEF3",113,0)
 ;
"RTN","IBCEF3",114,0)
HCPC(R) ;FORMAT HCPC fld FOR UB (returns formatted value)
"RTN","IBCEF3",115,0)
 ; R = flag for type of fld (1/2/3) being printed in rev code block
"RTN","IBCEF3",116,0)
 Q R  ;No longer used as of patch IB*2.0*51
"RTN","IBCEF3",117,0)
 ;
"RTN","IBCEF3",118,0)
PROS(IBIFN) ; Extract billable prosthetics for 837
"RTN","IBCEF3",119,0)
 N IBARRAY,Z,Z0,CT,PROS
"RTN","IBCEF3",120,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF3",121,0)
 I '$P(IBARRAY,U,2) S CT="" G PROSQ
"RTN","IBCEF3",122,0)
 S Z="",CT=0
"RTN","IBCEF3",123,0)
 F  S Z=$O(IBARRAY(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBARRAY(Z,Z0)) Q:Z0=""  S CT=CT+1 D
"RTN","IBCEF3",124,0)
 .S PROS=$$PINB^IBCSC5B(+IBARRAY(Z,Z0)) ; P389 removed p2 - item ptr file 661
"RTN","IBCEF3",125,0)
 .;date^^short descr^entry # in file 362.5
"RTN","IBCEF3",126,0)
 .S IBXDATA(CT)=Z_U_U_PROS_U_+IBARRAY(Z,Z0)
"RTN","IBCEF3",127,0)
PROSQ Q CT
"RTN","IBCEF3",128,0)
 ;
"RTN","IBCEF3",129,0)
B24(IBXSV,IBIFN,IBNOSHOW) ; Code to execute to set up IBXSV("BOX24") for
"RTN","IBCEF3",130,0)
 ;   print or IBXSAVE("OUTPT") for transmit - called by output formatter
"RTN","IBCEF3",131,0)
 ; IBNOSHOW = 1 if not to show error/warning text lines
"RTN","IBCEF3",132,0)
 ; Pass IBXSV by reference
"RTN","IBCEF3",133,0)
 N IBSUB
"RTN","IBCEF3",134,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEF3",135,0)
 K IBXSV(IBSUB)
"RTN","IBCEF3",136,0)
 I '$D(IBIFN) S IBIFN=$G(IBXIEN)
"RTN","IBCEF3",137,0)
 I IBIFN D F^IBCEF("N-HCFA 1500 SERVICE"_$S(IBSUB["24":"S (PRINT",1:" LINE (EDI")_")",,,IBIFN)
"RTN","IBCEF3",138,0)
 I $S(IBSUB'["24":1,1:'$G(IBNOSHOW)) D
"RTN","IBCEF3",139,0)
 . M IBXSV(IBSUB)=IBXDATA
"RTN","IBCEF3",140,0)
 E  D
"RTN","IBCEF3",141,0)
 . N Z,CT
"RTN","IBCEF3",142,0)
 . S (Z,CT)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  I '$D(IBXDATA(Z,"ARX")) S CT=CT+1 M IBXSV(IBSUB,CT)=IBXDATA(Z)
"RTN","IBCEF3",143,0)
 Q
"RTN","IBCEF3",144,0)
 ;
"RTN","IBCEF3",145,0)
 ; esg - 11/14/03 - Moved the below functions due to space constraints
"RTN","IBCEF3",146,0)
 ;
"RTN","IBCEF3",147,0)
ALLTYP(IBIFN) Q $$ALLTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",148,0)
INSTYP(IBIFN,SEQ) Q $$INSTYP^IBCEF31(IBIFN,$G(SEQ))
"RTN","IBCEF3",149,0)
POLTYP(IBIFN,IBSEQ) Q $$POLTYP^IBCEF31(IBIFN,$G(IBSEQ))
"RTN","IBCEF3",150,0)
ALLPTYP(IBIFN) Q $$ALLPTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",151,0)
 ;
"RTN","IBCEF3",152,0)
FILL(Z) ;
"RTN","IBCEF3",153,0)
 Q
"RTN","IBCEF3",154,0)
 ;
"RTN","IBCEF3",155,0)
 ;  ***** 
"RTN","IBCEF3",156,0)
 ;  The following code performs the multi-page set up for
"RTN","IBCEF3",157,0)
 ;  printing overflow data on the UB
"RTN","IBCEF3",158,0)
 ;  *****
"RTN","IBCEF3",159,0)
 ;
"RTN","IBCEF3",160,0)
XPROC(DATA,CT) ; Output any UB procedures after 6 on new page(s)
"RTN","IBCEF3",161,0)
 ; DATA = output data from IBXSAVE("PROC",CT)
"RTN","IBCEF3",162,0)
 ; CT = array sequence # of the procedure being output
"RTN","IBCEF3",163,0)
 ; Only used for local prints
"RTN","IBCEF3",164,0)
 N OFFSET,PG,COL,PRCODE,Q
"RTN","IBCEF3",165,0)
 S Q=(CT-1)\3#2,OFFSET=$S('Q:0,1:2)
"RTN","IBCEF3",166,0)
 S PG=(CT-1)\6+1,COL=1+(CT-1#3*15)
"RTN","IBCEF3",167,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),58,COL)
"RTN","IBCEF3",168,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),58,COL+9)
"RTN","IBCEF3",169,0)
 Q
"RTN","IBCEF3",170,0)
 ;
"RTN","IBCEF3",171,0)
XDIAG(DATA,CT) ; Output any UB other diagnoses after 8 on new page(s)
"RTN","IBCEF3",172,0)
 ; DATA = output data from IBXSAVE("DX",CT)
"RTN","IBCEF3",173,0)
 ; CT = array sequence # of the diagnosis being output
"RTN","IBCEF3",174,0)
 ; Only used for local prints
"RTN","IBCEF3",175,0)
 N COL,PG
"RTN","IBCEF3",176,0)
 S PG=(CT-1)\8+1,COL=8+(CT-1#9*7)
"RTN","IBCEF3",177,0)
 S DATA=$P($$ICD9^IBACSV(+DATA),U,1)
"RTN","IBCEF3",178,0)
 D MPGUB(PG,0,DATA,56,COL)
"RTN","IBCEF3",179,0)
 Q
"RTN","IBCEF3",180,0)
 ;
"RTN","IBCEF3",181,0)
XVAL(DATA,CT) ; Output any UB value codes after 12 on new page(s)
"RTN","IBCEF3",182,0)
 ; DATA = output data from IBXSAVE("VC",CT)
"RTN","IBCEF3",183,0)
 ; CT = array sequence # of the value code being output
"RTN","IBCEF3",184,0)
 ;
"RTN","IBCEF3",185,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",186,0)
 S PG=(CT-1)\12+1,COL=44+(CT-1#3*13),OFFSET=(CT-(12*(PG-1))-1)\3
"RTN","IBCEF3",187,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),14,COL)
"RTN","IBCEF3",188,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),14,COL+3)
"RTN","IBCEF3",189,0)
 Q
"RTN","IBCEF3",190,0)
 ;
"RTN","IBCEF3",191,0)
XCC(DATA,CT) ; Output any UB condition codes after 11 on new page(s)
"RTN","IBCEF3",192,0)
 ; 11 condition codes per page, starting columns 34 thru 64
"RTN","IBCEF3",193,0)
 ; DATA = output data from IBXSAVE("CC",CT)
"RTN","IBCEF3",194,0)
 ; CT = array sequence # of the condition code being output
"RTN","IBCEF3",195,0)
 ;
"RTN","IBCEF3",196,0)
 N COL,PG
"RTN","IBCEF3",197,0)
 S PG=(CT-1)\11+1,COL=34+(CT-1#11*3)
"RTN","IBCEF3",198,0)
 D MPGUB(PG,0,DATA,9,COL)
"RTN","IBCEF3",199,0)
 Q
"RTN","IBCEF3",200,0)
 ;
"RTN","IBCEF3",201,0)
XOCC(DATA,CT,FL) ; Output any UB occurrence codes after 8 (2 per form
"RTN","IBCEF3",202,0)
 ;  locators 31-34) on new page(s)
"RTN","IBCEF3",203,0)
 ; DATA = data from IBXSAVE("OCC",z) to be output
"RTN","IBCEF3",204,0)
 ; CT = array sequence # of occurrence code being output
"RTN","IBCEF3",205,0)
 ; FL = # of form locator being populated with the occ code
"RTN","IBCEF3",206,0)
 ;
"RTN","IBCEF3",207,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",208,0)
 S PG=(CT-1)\2+1,COL=1+((FL-31)*10),OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",209,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",210,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",211,0)
 Q
"RTN","IBCEF3",212,0)
 ;
"RTN","IBCEF3",213,0)
XOCCS(DATA,CT,FL) ; Output any UB occurrence span codes after 4 on new page(s)
"RTN","IBCEF3",214,0)
 ; DATA = data from IBXSAVE("OCCS",z) to be output
"RTN","IBCEF3",215,0)
 ; CT = array sequence # of occurrence span code being output
"RTN","IBCEF3",216,0)
 ; FL = # of form locator being populated (either FL 35 or 36)
"RTN","IBCEF3",217,0)
 ;
"RTN","IBCEF3",218,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",219,0)
 S PG=(CT-1)\2+1,OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",220,0)
 S COL=41+((FL-35)*17)
"RTN","IBCEF3",221,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",222,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",223,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,3),11,COL+11)
"RTN","IBCEF3",224,0)
 Q
"RTN","IBCEF3",225,0)
 ;
"RTN","IBCEF3",226,0)
FORMAT(VAL,IBX0,IBXDA) ;
"RTN","IBCEF3",227,0)
 I IBX0'="",IBXDA S VAL=$$FORMAT^IBCEFG(VAL,$P($G(^IBA(364.6,+IBXDA,0)),U,9),$P(IBX0,U,7),IBX0)
"RTN","IBCEF3",228,0)
 Q VAL
"RTN","IBCEF3",229,0)
 ;
"RTN","IBCEF3",230,0)
OUTPDT(IBIFN,IBXSAVE,IBXDATA) ; Returns outpatient service to date
"RTN","IBCEF3",231,0)
 ;  formatted CCYYMMDD for UB 837
"RTN","IBCEF3",232,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEF3",233,0)
 ; IBXSAVE = pass by reference for IBXSAVE("INPT") and IBXSAVE("DATE")
"RTN","IBCEF3",234,0)
 ; IBXDATA = array with formatted date or each line item - CCYYMMDD
"RTN","IBCEF3",235,0)
 N Z
"RTN","IBCEF3",236,0)
 S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,10):$$DT^IBCEFG1($P(IBXSAVE("INPT",Z),U,10),,"D8"),1:IBXSAVE("DATE"))
"RTN","IBCEF3",237,0)
 K IBXSAVE("DATE")
"RTN","IBCEF3",238,0)
 Q
"RTN","IBCEF3",239,0)
 ;
"RTN","IBCF331")
0^32^B6820845^B6717938
"RTN","IBCF331",1,0)
IBCF331 ;ALB/ARH - UB92 HCFA-1450 (GATHER CODES CONT) ;25-AUG-1993
"RTN","IBCF331",2,0)
 ;;2.0;INTEGRATED BILLING;**52,210,309,389**; 21-MAR-94;Build 6
"RTN","IBCF331",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCF331",4,0)
 ;
"RTN","IBCF331",5,0)
 ;
"RTN","IBCF331",6,0)
DX ;additional dx codes (ie more than 9 on bill)
"RTN","IBCF331",7,0)
 D SET^IBCSC4D(IBIFN,"",.IBARRAY) G:$P(IBARRAY,U,2)'>9 RX
"RTN","IBCF331",8,0)
 S IBX=+$P(IBARRAY,U,2)-9+2 D SPACE
"RTN","IBCF331",9,0)
 S IBZ="" D SET2
"RTN","IBCF331",10,0)
 S IBZ="ADDITIONAL DIAGNOSIS CODES:" D SET2
"RTN","IBCF331",11,0)
 S IBX=0 F IBI=1:1 S IBX=$O(IBARRAY(IBX)) Q:IBX=""  I IBI>9 D
"RTN","IBCF331",12,0)
 . S IBY=$$ICD9^IBACSV(+$G(IBARRAY(IBX)),$$BDATE^IBACSV(+IBIFN)) Q:IBY=""
"RTN","IBCF331",13,0)
 . S IBZ=$P(IBY,U)_$J(" ",(10-$L($P(IBY,U))))_$P(IBY,U,3) D SET2
"RTN","IBCF331",14,0)
 ;
"RTN","IBCF331",15,0)
RX ;add rx refills
"RTN","IBCF331",16,0)
 D SET^IBCSC5A(IBIFN,.IBARRAY) G:'$P(IBARRAY,U,2) PD
"RTN","IBCF331",17,0)
 S IBX=+$P(IBARRAY,U,2)+2 D SPACE
"RTN","IBCF331",18,0)
 S IBZ="" D SET2
"RTN","IBCF331",19,0)
 S IBZ="PRESCRIPTION REFILLS:" D SET2
"RTN","IBCF331",20,0)
 S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBLN=IBARRAY(IBX,IBY) D
"RTN","IBCF331",21,0)
 . D ZERO^IBRXUTL(+$P(IBLN,U,2))
"RTN","IBCF331",22,0)
 . S IBZ=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBLN,U,6):"$"_$FN($P(IBLN,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$G(^TMP($J,"IBDRUG",+$P(IBLN,U,2),.01)) D SET2
"RTN","IBCF331",23,0)
 . S IBZ="",IBZ=$S(+$P(IBLN,U,4):"QTY: "_$P(IBLN,U,4)_" ",1:"")_$S(+$P(IBLN,U,3):"for "_$P(IBLN,U,3)_" days supply ",1:"") I IBZ'="" S IBZ=$J(" ",35)_IBZ D SET2
"RTN","IBCF331",24,0)
 . S IBZ="",IBZ=$S($P(IBLN,U,5)'="":"NDC #: "_$P(IBLN,U,5),1:"") I IBZ'="" S IBZ=$J(" ",35)_IBZ D SET2
"RTN","IBCF331",25,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCF331",26,0)
 . Q
"RTN","IBCF331",27,0)
 ;
"RTN","IBCF331",28,0)
PD ;add prosthetic items
"RTN","IBCF331",29,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY) G:'$P(IBARRAY,U,2) END
"RTN","IBCF331",30,0)
 S IBX=+$P(IBARRAY,U,2)+2 D SPACE
"RTN","IBCF331",31,0)
 S IBZ="" D SET2
"RTN","IBCF331",32,0)
 S IBZ="PROSTHETIC ITEMS:" D SET2
"RTN","IBCF331",33,0)
 S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCF331",34,0)
 . S IBZ=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($$PINB^IBCSC5B(+IBARRAY(IBX,IBY)),1,54) D SET2
"RTN","IBCF331",35,0)
 ;
"RTN","IBCF331",36,0)
END Q
"RTN","IBCF331",37,0)
 ;
"RTN","IBCF331",38,0)
SET2 D SET2^IBCF33 Q
"RTN","IBCF331",39,0)
SPACE D SPACE^IBCF33 Q
"RTN","IBCF4")
0^33^B19059565^B19230544
"RTN","IBCF4",1,0)
IBCF4 ;ALB/ARH - PRINT BILL ADDENDUM ;12-JAN-94
"RTN","IBCF4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,137,199,309,389**;21-MAR-94;Build 6
"RTN","IBCF4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCF4",4,0)
 ;
"RTN","IBCF4",5,0)
PRXA ;get bill number then print rx refill addendums for bills
"RTN","IBCF4",6,0)
 S DIC("S")="I $D(^IBA(362.4,""AIFN""_+Y))!($D(^IBA(362.5,""AIFN""_+Y)))"
"RTN","IBCF4",7,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCF4",8,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ" D ^DIC K DIC G:+Y'>0 EXIT S IBBILL=$P(Y,U,2),IBIFN=+Y
"RTN","IBCF4",9,0)
 ;
"RTN","IBCF4",10,0)
 I $D(^IBA(364,"ABDT",IBIFN)),+$$TXMT^IBCEF4(IBIFN)=1 D  G:'IBTXOK PRXA
"RTN","IBCF4",11,0)
 .S IBTXOK=0
"RTN","IBCF4",12,0)
 .N IBLDT,IBX
"RTN","IBCF4",13,0)
 .S IBLDT=$O(^IBA(364,"ABDT",IBIFN,""),-1),IBX=$O(^IBA(364,"B",IBIFN,+IBLDT,""),-1)
"RTN","IBCF4",14,0)
 .I "X"[$P($G(^IBA(364,+IBX,0)),U,3) W !!,*7,"Transmittable Bill can NOT be printed until transmitted" Q
"RTN","IBCF4",15,0)
 .W !!,"This is a Transmittable Bill that has already been transmitted"
"RTN","IBCF4",16,0)
 .W !!,"WANT TO PRINT THIS BILL ADDENDUM ANYWAY" S %=2 D YN^DICN
"RTN","IBCF4",17,0)
 .Q:'(%+1#3)  ;-1 or 2
"RTN","IBCF4",18,0)
 .S IBTXOK=1
"RTN","IBCF4",19,0)
 ;
"RTN","IBCF4",20,0)
DEV ;get the device
"RTN","IBCF4",21,0)
 W !!,"Report requires 132 columns."
"RTN","IBCF4",22,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBCF4",23,0)
 I $D(IO("Q")) S ZTRTN="EN^IBCF4",ZTDESC="BILL ADDENDUM FOR "_IBBILL,ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q"),ZTSK G EXIT
"RTN","IBCF4",24,0)
 U IO D EN
"RTN","IBCF4",25,0)
 ;
"RTN","IBCF4",26,0)
EXIT ;clean up and quit
"RTN","IBCF4",27,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCF4",28,0)
 K IBQUIT,IBIFN,IBBILL,IBTXOK,X,Y,DTOUT,DUOUT,DIRUT,DIROUT D ^%ZISC
"RTN","IBCF4",29,0)
 Q
"RTN","IBCF4",30,0)
 ;
"RTN","IBCF4",31,0)
EN ;ENTRY POINT IF QUEUED, print all rx refills for a bill
"RTN","IBCF4",32,0)
 S IBY=$G(^DGCR(399,+IBIFN,0)) Q:IBY=""  S IBXREF="AIFN"_IBIFN
"RTN","IBCF4",33,0)
 S (IBQUIT,IBPGN,IBRX)=0,IBHDR="BILL ADDENDUM FOR "_$P($G(^DPT(+$P(IBY,U,2),0)),U,1)_" - "_$P(IBY,U,1) D HDR
"RTN","IBCF4",34,0)
RX I '$D(^IBA(362.4,IBXREF)) G PROS
"RTN","IBCF4",35,0)
 W !!,"PRESCRIPTION REFILLS:",!
"RTN","IBCF4",36,0)
 K IBRC
"RTN","IBCF4",37,0)
 D RCITEM^IBCSC5A(IBIFN,"IBRC",3)
"RTN","IBCF4",38,0)
 S IBRX=0 F  S IBRX=$O(^IBA(362.4,IBXREF,IBRX)) Q:IBRX=""!IBQUIT  S IBRIFN=0 F  S IBRIFN=$O(^IBA(362.4,IBXREF,IBRX,IBRIFN)) Q:'IBRIFN!IBQUIT  D
"RTN","IBCF4",39,0)
 .S IBY=$G(^IBA(362.4,IBRIFN,0)) Q:IBY=""
"RTN","IBCF4",40,0)
 .S IBYC=$$CHG(IBRIFN,3,.IBRC)
"RTN","IBCF4",41,0)
 .;
"RTN","IBCF4",42,0)
 . D ZERO^IBRXUTL(+$P(IBY,U,4))
"RTN","IBCF4",43,0)
 . W !,$P(IBY,U,1),?13,$$FMTE^XLFDT(+$P(IBY,U,3),2),?22,$J($S(IBYC:"$"_$FN(IBYC,",",2),1:""),10),?34,$G(^TMP($J,"IBDRUG",+$P(IBY,U,4),.01))
"RTN","IBCF4",44,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCF4",45,0)
 . I $P(IBY,U,6)'="" W ?77,"QTY: ",$P(IBY,U,7)
"RTN","IBCF4",46,0)
 . I $P(IBY,U,7)'="" W ?87,"DAYS SUPPLY: ",$P(IBY,U,6)
"RTN","IBCF4",47,0)
 . I $P(IBY,U,8)'="" W ?105,"NDC #: ",$P(IBY,U,8)
"RTN","IBCF4",48,0)
 . S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR
"RTN","IBCF4",49,0)
 K IBRC
"RTN","IBCF4",50,0)
 ;
"RTN","IBCF4",51,0)
PROS I '$D(^IBA(362.5,IBXREF)) G END
"RTN","IBCF4",52,0)
 W !!!,"PROSTHETIC ITEMS:",!
"RTN","IBCF4",53,0)
 K IBRC
"RTN","IBCF4",54,0)
 D RCITEM^IBCSC5A(IBIFN,"IBRC",5)
"RTN","IBCF4",55,0)
 S IBPI=0 F  S IBPI=$O(^IBA(362.5,IBXREF,IBPI)) Q:IBPI=""!IBQUIT  S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.5,IBXREF,IBPI,IBPIFN)) Q:'IBPIFN!IBQUIT  D
"RTN","IBCF4",56,0)
 . S IBY=$G(^IBA(362.5,IBPIFN,0)),IBYC="" Q:IBY=""
"RTN","IBCF4",57,0)
 . S IBYC=$$CHG(IBPIFN,5,.IBRC)
"RTN","IBCF4",58,0)
 . W !,$$FMTE^XLFDT(+$P(IBY,U,1),2),?11,$J($S(IBYC:"$"_$FN(IBYC,",",2),1:""),10),?24,$E($P(IBY,U,5),1,55)
"RTN","IBCF4",59,0)
 . S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR
"RTN","IBCF4",60,0)
 D:'IBQUIT PAUSE
"RTN","IBCF4",61,0)
END K IBX,IBY,IBPGN,IBRX,IBHDR,IBRIFN,IBLN,IBCDT,IBI,IBXREF,IBPI,IBPIFN,IBRC,IBYC
"RTN","IBCF4",62,0)
 Q
"RTN","IBCF4",63,0)
 ;
"RTN","IBCF4",64,0)
CHG(IBY,IBTYP,IBRC) ; Return charge for item entry IBY or null if no charge
"RTN","IBCF4",65,0)
 ; IBRC = the array containing the revenue code items and their units and charges
"RTN","IBCF4",66,0)
 ; IBTYP = the type of item being priced
"RTN","IBCF4",67,0)
 N IBZ,IBYC
"RTN","IBCF4",68,0)
 S IBRC=$S($D(IBRC(IBTYP,IBY)):IBY,1:0),IBYC=""
"RTN","IBCF4",69,0)
 F IBRC=IBRC,0 Q:'$D(IBRC(IBTYP,IBRC))  S IBZ="" D  Q:IBZ'=""!(IBRC=0)
"RTN","IBCF4",70,0)
 .F  S IBZ=$O(IBRC(IBTYP,IBRC,IBZ)) Q:IBZ=""  I IBRC(IBTYP,IBRC,IBZ) S $P(IBRC(IBTYP,IBRC,IBZ),U)=IBRC(IBTYP,IBRC,IBZ)-1,IBYC=$P(IBRC(IBTYP,IBRC,IBZ),U,2) K:'IBRC(IBTYP,IBRC,IBZ) IBRC(IBTYP,IBRC,IBZ) Q
"RTN","IBCF4",71,0)
 Q IBYC
"RTN","IBCF4",72,0)
 ;
"RTN","IBCF4",73,0)
HDR ;print the report header
"RTN","IBCF4",74,0)
 S IBQUIT=$$STOP Q:IBQUIT  S IBPGN=IBPGN+1,IBLN=5
"RTN","IBCF4",75,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
"RTN","IBCF4",76,0)
 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBCF4",77,0)
 W IBHDR W:IOM<85 ! W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
"RTN","IBCF4",78,0)
 ;W !,"RX #",?13,"REFILL DATE",?28,"DRUG",?70,"DAYS SUPPLY",?83,"QTY",?90,"NDC #",!
"RTN","IBCF4",79,0)
 F IBI=1:1:IOM W "-"
"RTN","IBCF4",80,0)
 W !
"RTN","IBCF4",81,0)
 Q
"RTN","IBCF4",82,0)
 ;
"RTN","IBCF4",83,0)
PAUSE ;pause at end of screen if being displayed on a terminal
"RTN","IBCF4",84,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBCF4",85,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBCF4",86,0)
 I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
"RTN","IBCF4",87,0)
 Q
"RTN","IBCF4",88,0)
 ;
"RTN","IBCF4",89,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCF4",90,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCF4",91,0)
 Q +$G(ZTSTOP)
"RTN","IBCF4",92,0)
 ;
"RTN","IBCF4",93,0)
RXDISP ;displays all rx refills bills
"RTN","IBCF4",94,0)
 ;N IBX,IBY,IBZ,IBC,X,Y S Y=1,IBC=0,IBX="AIFN"
"RTN","IBCF4",95,0)
 ;F  S IBX=$O(^IBA(362.4,IBX)) Q:IBX=""  S IBY=$E(IBX,5,999),IBZ=$G(^DGCR(399,+IBY,0)) I IBZ'="" D  Q:'Y
"RTN","IBCF4",96,0)
 ;. W !,$P(IBZ,U,1),?10,$E($P($G(^DPT(+$P(IBZ,U,2),0)),U,1),1,20),?32,$$DATE(+$P(IBZ,U,3)),?42,$S(+$P(IBZ,U,5)<3:"INPT",1:"OUTPT")
"RTN","IBCF4",97,0)
 ;. W ?49,$P($G(^DGCR(399.3,+$P(IBZ,U,7),0)),U,4),?59,$E($$EXSET^IBEFUNC(+$P(IBZ,U,13),399,.13),1,7),?68,$E($P($G(^IBE(353,+$P(IBZ,U,19),0)),U,1),1,11)
"RTN","IBCF4",98,0)
 ;. S IBC=IBC+1 I '(IBC#10) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCF4",99,0)
 ;Q
"RTN","IBCF4",100,0)
 ;
"RTN","IBCF4",101,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCF4",102,0)
 ;
"RTN","IBCF4",103,0)
BILLAD(IFN) ;returns true if bill has either rx refills or prosthetics so addendum should print
"RTN","IBCF4",104,0)
 N IBX S IBX=0,IFN=+$G(IFN) S:+$O(^IBA(362.4,"AIFN"_IFN,0)) IBX=1 S:+$O(^IBA(362.5,"AIFN"_IFN,0)) IBX=IBX+2
"RTN","IBCF4",105,0)
 Q IBX
"RTN","IBCRBG")
0^45^B58097586^B58493786
"RTN","IBCRBG",1,0)
IBCRBG ;ALB/ARH - RATES: BILL SOURCE EVENTS (INPT) ; 21 MAY 96
"RTN","IBCRBG",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,142,159,210,245,382,389**;21-MAR-94;Build 6
"RTN","IBCRBG",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRBG",4,0)
 ;
"RTN","IBCRBG",5,0)
INPTPTF(IBIFN,CS) ; search PTF record for billable bedsections, transfer DRGs, and length of stay 
"RTN","IBCRBG",6,0)
 ; - screens out days for pass, leave and SC treatment
"RTN","IBCRBG",7,0)
 ; - adds charges for only one BS if the ins company does not allow multiple bedsections per bill (36,.06)
"RTN","IBCRBG",8,0)
 ; Output: ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",9,0)
 ;
"RTN","IBCRBG",10,0)
 N IB0,DFN,PTF,IBU,IBBDT,IBEDT,IBTF,IBADM,IBX,IBINSMBS
"RTN","IBCRBG",11,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBCRBG",12,0)
 ;
"RTN","IBCRBG",13,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2) Q:'DFN
"RTN","IBCRBG",14,0)
 S IBTF=$P(IB0,U,6),PTF="" S:$P(IB0,U,5)<3 PTF=$P(IB0,U,8) Q:'PTF
"RTN","IBCRBG",15,0)
 S IBINSMBS=0,IBX=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBG",16,0)
 I 'IBX,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBX=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBG",17,0)
 I $P($G(^DIC(36,+IBX,0)),U,6)=0 S IBINSMBS=1 ; 1 bs per bill
"RTN","IBCRBG",18,0)
 ;
"RTN","IBCRBG",19,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBG",20,0)
 S IBBDT=+IBU,IBEDT=$P(IBU,U,2) Q:'IBEDT
"RTN","IBCRBG",21,0)
 ;
"RTN","IBCRBG",22,0)
 S IBADM=$O(^DGPM("APTF",PTF,0)) ; find corresponding admission
"RTN","IBCRBG",23,0)
 ;
"RTN","IBCRBG",24,0)
 D PTF(PTF) ; get movements and bedsections
"RTN","IBCRBG",25,0)
 D PTFDV(PTF) ; reset movements and bedsections for ward/division
"RTN","IBCRBG",26,0)
 D PTFFY(PTF,IBBDT,IBEDT) ; reset movements for FY DRG change
"RTN","IBCRBG",27,0)
 ;
"RTN","IBCRBG",28,0)
 D BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; calculate days in bedsections within timeframe of the bill
"RTN","IBCRBG",29,0)
 ;
"RTN","IBCRBG",30,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV")
"RTN","IBCRBG",31,0)
 ;
"RTN","IBCRBG",32,0)
 D INPTRSET^IBCRBG2(IBIFN,$G(CS))
"RTN","IBCRBG",33,0)
 Q
"RTN","IBCRBG",34,0)
 ;
"RTN","IBCRBG",35,0)
PTF(PTF) ; find all movements in PTF for the admission by date and billing bedsection (501 movement)
"RTN","IBCRBG",36,0)
 ; the movement date is the date the patient left the bedsection
"RTN","IBCRBG",37,0)
 ; Output: ^TMP($J,"IBCRC-PTF", MOVE DT/TM)=MOVE DT/TM ^ BILL BED ^ SC FLAG ^ TRANSFER DRG ^ ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",38,0)
 ;
"RTN","IBCRBG",39,0)
 N IBMOVE,IBMVLN,IBBILLBS,IBENDDT,IBMSC,IBMDRG S PTF=+$G(PTF)
"RTN","IBCRBG",40,0)
 S IBMOVE=0 F  S IBMOVE=$O(^DGPT(PTF,"M",IBMOVE)) Q:'IBMOVE  D
"RTN","IBCRBG",41,0)
 . S IBMVLN=^DGPT(PTF,"M",IBMOVE,0)
"RTN","IBCRBG",42,0)
 . S IBBILLBS=+$$SPBB($P(IBMVLN,U,2)) ;                                 billable bedsection
"RTN","IBCRBG",43,0)
 . S IBENDDT=+$P(IBMVLN,U,10) I 'IBENDDT S IBENDDT=DT ;                 movement date (last date in bedsection)
"RTN","IBCRBG",44,0)
 . S IBMSC="" I +$P(IBMVLN,U,18)=1 S IBMSC=1 ;                          sc movement
"RTN","IBCRBG",45,0)
 . S IBMDRG=$$MVDRG(PTF,IBMOVE) ;                                       movement DRG
"RTN","IBCRBG",46,0)
 . S ^TMP($J,"IBCRC-PTF",IBENDDT)=IBENDDT_U_IBBILLBS_U_IBMSC_U_IBMDRG_U_U_+$P(IBMVLN,U,2)_U_IBMOVE
"RTN","IBCRBG",47,0)
 Q
"RTN","IBCRBG",48,0)
 ;
"RTN","IBCRBG",49,0)
SPBB(SPCLTY) ; find the billable bedsection for a Specialty (42.4)
"RTN","IBCRBG",50,0)
 ; returns billable bedsection IFN ^ billable bedsection name
"RTN","IBCRBG",51,0)
 N IBX,IBY,IBZ S IBZ=0
"RTN","IBCRBG",52,0)
 S IBX=$P($G(^DIC(42.4,+$G(SPCLTY),0)),U,5)
"RTN","IBCRBG",53,0)
 I IBX'="" S IBY=$O(^DGCR(399.1,"B",IBX,0)) I +IBY S IBZ=IBY_U_IBX
"RTN","IBCRBG",54,0)
 Q IBZ
"RTN","IBCRBG",55,0)
 ;
"RTN","IBCRBG",56,0)
BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; from the array of PTF movments get all bedsections and their LOS covered by date range of the bill
"RTN","IBCRBG",57,0)
 ; adds all days for first cronological bs if ins comp wants only a single bs per bill, even if not sequential
"RTN","IBCRBG",58,0)
 ; the movement date is the date the patient left the bedsection, so admission date is not in PTF array
"RTN","IBCRBG",59,0)
 ;
"RTN","IBCRBG",60,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", MOVE DT/TM) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",61,0)
 ; Output: ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",62,0)
 ;
"RTN","IBCRBG",63,0)
 N IBSBDT,IBSEDT,IBS,IBLASTDT,IBX
"RTN","IBCRBG",64,0)
 S IBSBDT=IBBDT+.3 ;                        discount any movements ending on or before the begin date
"RTN","IBCRBG",65,0)
 S IBSEDT=IBEDT\1
"RTN","IBCRBG",66,0)
 ; 
"RTN","IBCRBG",67,0)
 I ",2,3,"'[IBTF S IBSEDT=IBSEDT-.01 ;      final bill, do not count last day
"RTN","IBCRBG",68,0)
 ;
"RTN","IBCRBG",69,0)
 I +$G(IBADM) S IBX=$$AD^IBCU64(IBADM) I +IBX,($P(IBX,U,1)\1)=($P(IBX,U,2)\1) S IBSBDT=IBBDT ; reset 1 day stays
"RTN","IBCRBG",70,0)
 ;
"RTN","IBCRBG",71,0)
 S IBS=IBSBDT-.01 F  S IBS=$O(^TMP($J,"IBCRC-PTF",IBS)) Q:'IBS  D SET S IBLASTDT=IBS Q:(IBLASTDT\1)>IBSEDT
"RTN","IBCRBG",72,0)
 ;
"RTN","IBCRBG",73,0)
 Q
"RTN","IBCRBG",74,0)
 ;
"RTN","IBCRBG",75,0)
SET ; checks a specific movement to determine if it should be billed and what the length of stay is
"RTN","IBCRBG",76,0)
 ; setting of the movement date determines how many days are counted in the bedsection
"RTN","IBCRBG",77,0)
 N IBMVLN,IBMBDT,IBMEDT,IBMTF,IBMLOS,IBI,IBCHGDT
"RTN","IBCRBG",78,0)
 S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBS))
"RTN","IBCRBG",79,0)
 I '$P(IBMVLN,U,2) Q  ;                                              non-billable bedsection
"RTN","IBCRBG",80,0)
 I +$P(IBMVLN,U,3) Q  ;                                              sc movement
"RTN","IBCRBG",81,0)
 I +IBINSMBS,+$G(IBLASTDT) Q  ;                                      ins does not allow multiple bs
"RTN","IBCRBG",82,0)
 ;
"RTN","IBCRBG",83,0)
 S IBMBDT=$S(IBBDT>$G(IBLASTDT):IBBDT,1:IBLASTDT),IBMBDT=IBMBDT\1 ;  start cnt on begin dt or last move dt
"RTN","IBCRBG",84,0)
 S IBMEDT=$S(IBS<IBEDT:IBS,1:IBEDT),IBMEDT=IBMEDT\1 ;                end cnt on move dt or end dt
"RTN","IBCRBG",85,0)
 S IBMTF=$S(IBEDT<(IBS\1):IBTF,1:1) ;                                last movement gets timeframe
"RTN","IBCRBG",86,0)
 S IBMLOS=$$LOS^IBCU64(IBMBDT,IBMEDT,IBMTF,IBADM) Q:'IBMLOS  ;       calculate the LOS for the movement
"RTN","IBCRBG",87,0)
 ;
"RTN","IBCRBG",88,0)
 F IBI=1:1:IBMLOS S IBCHGDT=$$FMADD^XLFDT(IBMBDT,(IBI-1)),^TMP($J,"IBCRC-INDT",+IBCHGDT)=IBMVLN
"RTN","IBCRBG",89,0)
 Q
"RTN","IBCRBG",90,0)
 ;
"RTN","IBCRBG",91,0)
BBS(X) ; returns true if pointer passed in is a billable bedsection ^ bedsection name
"RTN","IBCRBG",92,0)
 N IBX,IBY S IBY=0,IBX=$G(^DGCR(399.1,+$G(X),0)) I +$P(IBX,U,5) S IBY=1_U_$P(IBX,U,1)
"RTN","IBCRBG",93,0)
 Q IBY
"RTN","IBCRBG",94,0)
 ;
"RTN","IBCRBG",95,0)
 Q
"RTN","IBCRBG",96,0)
 ;
"RTN","IBCRBG",97,0)
PTFDV(PTF) ; find all ward/location transfers in PTF for the patient to determine the site/division the patient was in
"RTN","IBCRBG",98,0)
 ; the division of the ward will be added to the PTF bedsection movements
"RTN","IBCRBG",99,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ ^ specialty ^ move #
"RTN","IBCRBG",100,0)
 ; Output: ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ WARD DIV ^ spec ^ move#
"RTN","IBCRBG",101,0)
 ;          ^TMP($J,"IBCRC-DIV", TRANSFER DATE/TIME) = WARD DIVISION
"RTN","IBCRBG",102,0)
 N IBTRNSF,IBTRLN,IBENDDT,IBTRDV,IBMVDT,IBTRDT
"RTN","IBCRBG",103,0)
 ;
"RTN","IBCRBG",104,0)
 I '$O(^TMP($J,"IBCRC-PTF",0)) Q
"RTN","IBCRBG",105,0)
 ;
"RTN","IBCRBG",106,0)
 ; get all ward transfers
"RTN","IBCRBG",107,0)
 S IBTRNSF=0 F  S IBTRNSF=$O(^DGPT(PTF,535,IBTRNSF)) Q:'IBTRNSF  D
"RTN","IBCRBG",108,0)
 . S IBTRLN=$G(^DGPT(PTF,535,+IBTRNSF,0))
"RTN","IBCRBG",109,0)
 . S IBENDDT=$P(IBTRLN,U,10) I 'IBENDDT S IBENDDT=DT ;                  transfer date (last date in ward)
"RTN","IBCRBG",110,0)
 . S IBTRDV=$P($G(^DIC(42,+$P(IBTRLN,U,6),0)),U,11) Q:'IBTRDV  ;        losing ward division
"RTN","IBCRBG",111,0)
 . S ^TMP($J,"IBCRC-DIV",IBENDDT)=IBTRDV
"RTN","IBCRBG",112,0)
 ;
"RTN","IBCRBG",113,0)
 ; if the ward transfer does not coincide with a specialty transfer add bedsection move on the transfer date
"RTN","IBCRBG",114,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-DIV",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",115,0)
 . S IBMVDT=$O(^TMP($J,"IBCRC-PTF",(IBENDDT-.0000001)))
"RTN","IBCRBG",116,0)
 . I 'IBMVDT Q  ; - transfer movement dates after the discharge date in the PTF file (inconsistent)
"RTN","IBCRBG",117,0)
 . I $P(IBENDDT,".")'=$P(IBMVDT,".") S ^TMP($J,"IBCRC-PTF",IBENDDT)=$G(^TMP($J,"IBCRC-PTF",IBMVDT))
"RTN","IBCRBG",118,0)
 ;
"RTN","IBCRBG",119,0)
 ; add the ward division to the bedsection/specialty
"RTN","IBCRBG",120,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",121,0)
 . S IBTRDT=$O(^TMP($J,"IBCRC-DIV",(IBENDDT-.0000001))) ;              ward transfer covering this bedsection
"RTN","IBCRBG",122,0)
 . S IBTRDV=$G(^TMP($J,"IBCRC-DIV",+IBTRDT)) ;                         ward division
"RTN","IBCRBG",123,0)
 . I +IBTRDV S $P(^TMP($J,"IBCRC-PTF",IBENDDT),U,5)=IBTRDV
"RTN","IBCRBG",124,0)
 Q
"RTN","IBCRBG",125,0)
 ;
"RTN","IBCRBG",126,0)
PTFFY(PTF,BEGDT,ENDDT) ; add movement for FY (10/1) if date range covers FY and DRG changes
"RTN","IBCRBG",127,0)
 ; the DRG may change on FY so check and if necessary add movement for pre-FY with old DRG
"RTN","IBCRBG",128,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ ^ specialty ^ move #
"RTN","IBCRBG",129,0)
 ; Output: ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ MOVE DRG ^ ward div ^ spec ^ move#
"RTN","IBCRBG",130,0)
 N IBBEGDT,IBENDDT,IBYRB,IBYRE,IBYR,IBFY,IBMVLN,IBMVDRG,IBMOVE,IBFYDRG Q:'$G(PTF)
"RTN","IBCRBG",131,0)
 Q:'$G(BEGDT)  S IBFY=$E(BEGDT,1,3)_"1001"
"RTN","IBCRBG",132,0)
 ;
"RTN","IBCRBG",133,0)
 S IBBEGDT=BEGDT,IBENDDT=BEGDT\1 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D  S IBBEGDT=IBENDDT
"RTN","IBCRBG",134,0)
 . S IBYRB=$E(IBBEGDT,1,3),IBYRE=$E(IBENDDT,1,3) I (IBYRE-IBYRB)>10 Q
"RTN","IBCRBG",135,0)
 . F IBYR=IBYRB:1:IBYRE S IBFY=IBYR_"1001" I IBBEGDT<IBFY,IBENDDT>IBFY D
"RTN","IBCRBG",136,0)
 .. S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBENDDT)),IBMVDRG=$P(IBMVLN,U,4),IBMOVE=$P(IBMVLN,U,7)
"RTN","IBCRBG",137,0)
 .. S IBFYDRG=$$MVDRG(PTF,IBMOVE,IBYR_"0930")
"RTN","IBCRBG",138,0)
 .. I IBMVDRG'=IBFYDRG S $P(IBMVLN,U,4)=IBFYDRG S ^TMP($J,"IBCRC-PTF",IBFY)=IBMVLN
"RTN","IBCRBG",139,0)
 Q
"RTN","IBCRBG",140,0)
 ;
"RTN","IBCRBG",141,0)
MVDRG(PTF,M,CDATE) ; Return the DRG for a specific PTF Movememt (M=move ifn)
"RTN","IBCRBG",142,0)
 ; CDATE is optional, used if need to calculate DRG for some day within the move, not at the end date
"RTN","IBCRBG",143,0)
 N DPT0,PTF0,PTFM0,PTF70,IBBEG,IBEND,IBDSST,IBDX,IBPRC0,IBPRC,IBDRG,IBI,IBJ,IBP
"RTN","IBCRBG",144,0)
 N SEX,AGE,ICDDX,ICDPRC,ICDEXP,ICDDMS,ICDTRS,ICDDRG,ICDMDC,ICDRTC,ICDDATE
"RTN","IBCRBG",145,0)
 S IBDRG=""
"RTN","IBCRBG",146,0)
 ;
"RTN","IBCRBG",147,0)
 S PTF0=$G(^DGPT(+$G(PTF),0)),DPT0=$G(^DPT(+$P(PTF0,U,1),0)) I DPT0="" G MVDRGQ
"RTN","IBCRBG",148,0)
 S PTFM0=$G(^DGPT(+PTF,"M",+$G(M),0)) I 'PTFM0 G MVDRGQ
"RTN","IBCRBG",149,0)
 S PTF70=$G(^DGPT(+PTF,70)),IBDSST=+$P(PTF70,U,3)
"RTN","IBCRBG",150,0)
 ;
"RTN","IBCRBG",151,0)
 S IBEND=+$P(PTFM0,U,10) I 'IBEND S IBEND=DT+.9
"RTN","IBCRBG",152,0)
 S IBBEG=$O(^DGPT(+PTF,"M","AM",IBEND),-1) I 'IBBEG S IBBEG=$P(PTF0,U,2)
"RTN","IBCRBG",153,0)
 ;
"RTN","IBCRBG",154,0)
 S SEX=$P(DPT0,U,2)
"RTN","IBCRBG",155,0)
 S AGE=$P(DPT0,U,3),AGE=$$FMDIFF^XLFDT(IBEND,AGE)\365.25
"RTN","IBCRBG",156,0)
 ;
"RTN","IBCRBG",157,0)
 S (ICDEXP,ICDDMS,ICDTRS)=0 I +PTF70,+PTF70=$P(PTFM0,U,10) D
"RTN","IBCRBG",158,0)
 . I IBDSST>5 S ICDEXP=1 ;  patient expired
"RTN","IBCRBG",159,0)
 . I IBDSST=4 S ICDDMS=1 ;  patient left against medical advice
"RTN","IBCRBG",160,0)
 . I IBDSST=5,+$P(PTF70,U,13) S ICDTRS=1 ; patient transfered to another facility
"RTN","IBCRBG",161,0)
 ;
"RTN","IBCRBG",162,0)
 S IBJ=0 F IBI=5:1:9 S IBDX=$P(PTFM0,U,IBI) I +IBDX,($$ICD9^IBACSV(+IBDX)'="") S IBJ=IBJ+1,ICDDX(IBJ)=IBDX
"RTN","IBCRBG",163,0)
 ;
"RTN","IBCRBG",164,0)
 I '$O(ICDDX(0)) G MVDRGQ
"RTN","IBCRBG",165,0)
 ;
"RTN","IBCRBG",166,0)
 S IBJ=0
"RTN","IBCRBG",167,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"S",IBP)) Q:'IBP  D  ; surguries
"RTN","IBCRBG",168,0)
 . S IBPRC0=$G(^DGPT(+PTF,"S",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",169,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",170,0)
 .. F IBI=8:1:12 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",171,0)
 ;
"RTN","IBCRBG",172,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"P",IBP)) Q:'IBP  D  ; procedures
"RTN","IBCRBG",173,0)
 . S IBPRC0=$G(^DGPT(+PTF,"P",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",174,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",175,0)
 .. F IBI=5:1:9 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",176,0)
 ;
"RTN","IBCRBG",177,0)
 S ICDDATE=$S(+$G(CDATE):CDATE,+$P(PTFM0,U,10):+$P(PTFM0,U,10),1:DT) ; date for the DRG Grouper versioning
"RTN","IBCRBG",178,0)
 D ^ICDDRG S IBDRG=$G(ICDDRG)
"RTN","IBCRBG",179,0)
 ;
"RTN","IBCRBG",180,0)
MVDRGQ Q IBDRG
"RTN","IBCSC5")
0^34^B16666314^B18022600
"RTN","IBCSC5",1,0)
IBCSC5 ;ALB/MJB - MCCR SCREEN 5 (OPT. EOC) ;27 MAY 88 10:15
"RTN","IBCSC5",2,0)
 ;;2.0;INTEGRATED BILLING;**52,125,51,210,266,288,287,309,389**;21-MAR-94;Build 6
"RTN","IBCSC5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5",4,0)
 ;
"RTN","IBCSC5",5,0)
 ;MAP TO DGCRSC5
"RTN","IBCSC5",6,0)
 ;
"RTN","IBCSC5",7,0)
EN I $$INPAT^IBCEF(IBIFN) G ^IBCSC4
"RTN","IBCSC5",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) D ASK^IBCU7A(IBIFN) S DGRVRCAL=1
"RTN","IBCSC5",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC5",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC5",11,0)
 D ^IBCSCU S IBSR=5,IBSR1="",IBV1="10000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1) F I="U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"") S:IBV IBV1="111111111"
"RTN","IBCSC5",12,0)
 D H^IBCSCU
"RTN","IBCSC5",13,0)
 S IBPTF=$P(IB(0),U,8),IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC5",14,0)
 D EN4^IBCVA1
"RTN","IBCSC5",15,0)
 S Z=1,IBW=1 X IBWW W " Event Date : " S Y=$P(IB(0),U,3) D DT^DIQ
"RTN","IBCSC5",16,0)
 N IBPOARR,IBDATE
"RTN","IBCSC5",17,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC5",18,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Event date
"RTN","IBCSC5",19,0)
 S Z=2,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX^IBCSC4(0,IBDATE) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),$$DXREQ^IBCSC4(IBIFN):IBU,1:IBUN)
"RTN","IBCSC5",20,0)
 F I=1:1:4 S Y=$$DX^IBCSC4(+Y,IBDATE) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
"RTN","IBCSC5",21,0)
 I +Y S Y=$$DX^IBCSC4(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC5",22,0)
OP S Z=3,IBW=1 X IBWW W " OP Visits  : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?17 W Y_", "
"RTN","IBCSC5",23,0)
 S:$D(^DGCR(399,"OP")) DGOPV=1 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
"RTN","IBCSC5",24,0)
 S Z=4,IBW=1 X IBWW W " Cod. Method: ",$S($P(IB(0),U,9)="":IBUN,$P(IB(0),U,9)=9:"ICD-9-CM",$P(IB(0),U,9)=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC5",25,0)
 D WRT:$D(IBPROC)
"RTN","IBCSC5",26,0)
 S Z=5,IBW=1 X IBWW W " Rx. Refills: " S Y=$$RX I 'Y W IBUN
"RTN","IBCSC5",27,0)
OCC G OCC^IBCSC4
"RTN","IBCSC5",28,0)
 W !?4,"Opt. Code  : ",IBUN
"RTN","IBCSC5",29,0)
 G OCC^IBCSC4
"RTN","IBCSC5",30,0)
 Q
"RTN","IBCSC5",31,0)
MORE W !?4,*7,"***There are more procedures associated with this bill.***" S I=0
"RTN","IBCSC5",32,0)
 Q
"RTN","IBCSC5",33,0)
WRT ;  -write out procedures codes on screen
"RTN","IBCSC5",34,0)
 N IBDATE
"RTN","IBCSC5",35,0)
 S J=0 F I=1:1 S J=$O(IBPROC(J)) Q:'J  D  I I>6 D MORE Q
"RTN","IBCSC5",36,0)
 .S IBDATE=$P(IBPROC(J),U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCSC5",37,0)
 .S X=$$PRCD^IBCEF1($P(IBPROC(J),U),1,IBDATE)
"RTN","IBCSC5",38,0)
 .I IBPROC(J)["ICD" W !?4,"ICD Code   : ",$E($P(X,U,3),1,28)_" - "_$P(X,U,2)
"RTN","IBCSC5",39,0)
 .I IBPROC(J)["CPT" W !?4,"CPT Code   : " D
"RTN","IBCSC5",40,0)
 .. N Z
"RTN","IBCSC5",41,0)
 .. S Z=$P(X,"^",3)_" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:"")
"RTN","IBCSC5",42,0)
 .. I $L(Z)>40 S Z=" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:""),Z=$E($P(X,U,3),1,40-$L(Z))_Z
"RTN","IBCSC5",43,0)
 .. W Z
"RTN","IBCSC5",44,0)
 .I $P(IB(0),U,19)=2 S Y=+$P(IBPROC(J),U,11) S:+Y Y=+$G(^IBA(362.3,+Y,0)) W ?58,$P($$ICD9^IBACSV(Y,IBDATE),U) S Y=$P(IBPROC(J),U,2) D D^DIQ W ?67,Y Q
"RTN","IBCSC5",45,0)
 .S Y=$P(IBPROC(J),"^",2) D D^DIQ W ?67,Y
"RTN","IBCSC5",46,0)
 Q
"RTN","IBCSC5",47,0)
 ;
"RTN","IBCSC5",48,0)
MOD(IBM,PUNC) ; Returns modifier list from comma delimited ien's in string IBM
"RTN","IBCSC5",49,0)
 ; PUNC = Punctuation to use as first character of output
"RTN","IBCSC5",50,0)
 N IBMOD,Q
"RTN","IBCSC5",51,0)
 S IBMOD=""
"RTN","IBCSC5",52,0)
 F Q=1:1:$L(IBM,",") I $P(IBM,",",Q)'="" S IBMOD=IBMOD_$S(IBMOD'="":",",1:"")_$P($$MOD^ICPTMOD($P(IBM,",",Q),"I"),U,2)
"RTN","IBCSC5",53,0)
 I IBMOD'="" S IBMOD=$G(PUNC)_IBMOD
"RTN","IBCSC5",54,0)
 Q IBMOD
"RTN","IBCSC5",55,0)
 ;
"RTN","IBCSC5",56,0)
PD() ;prints prosthetic device in external form, returns 0 if there are none
"RTN","IBCSC5",57,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX=0 F  S IBX=$O(^IBA(362.5,"AIFN"_IBIFN,IBX)) Q:'IBX  D  Q:X>5
"RTN","IBCSC5",58,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.5,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.5,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",59,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Pros. Items associated with this bill.***" Q
"RTN","IBCSC5",60,0)
 .. W:X'=1 ! W ?17,$E($P(IBZ,U,5),1,40),?67,$$FMTE^XLFDT(+IBZ)
"RTN","IBCSC5",61,0)
 Q X
"RTN","IBCSC5",62,0)
 ;
"RTN","IBCSC5",63,0)
RX() ;prints RX REFILLS in external form, returns 0 if there are none
"RTN","IBCSC5",64,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX="" F  S IBX=$O(^IBA(362.4,"AIFN"_IBIFN,IBX)) Q:IBX=""  D  Q:X>5
"RTN","IBCSC5",65,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.4,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.4,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",66,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Rx. Refills associated with this bill.***" Q
"RTN","IBCSC5",67,0)
 ..D ZERO^IBRXUTL(+$P(IBZ,U,4))
"RTN","IBCSC5",68,0)
 .. S IBN=$G(^TMP($J,"IBDRUG",+$P(IBZ,U,4),.01)) W:X'=1 ! W ?17,IBN,?65,$$FMTE^XLFDT(+$P(IBZ,U,3))
"RTN","IBCSC5",69,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCSC5",70,0)
 Q X
"RTN","IBCSC5",71,0)
 ;
"RTN","IBCSC5",72,0)
 ;IBCSC5
"RTN","IBCSC5B")
0^35^B42307142^B22247597
"RTN","IBCSC5B",1,0)
IBCSC5B ;ALB/ARH - ADD/ENTER PROSTHETIC ITEMS ;12/28/93
"RTN","IBCSC5B",2,0)
 ;;2.0;INTEGRATED BILLING;**4,52,260,339,389**;21-MAR-94;Build 6
"RTN","IBCSC5B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5B",4,0)
 ;
"RTN","IBCSC5B",5,0)
 ;
"RTN","IBCSC5B",6,0)
EN ; add/edit prosthetic items for a bill, IBIFN required
"RTN","IBCSC5B",7,0)
 N IBX,DFN,IBDT1,IBDT2,IBACTION,BIFN,APROS,ALPROS,ABILL,ALBILL
"RTN","IBCSC5B",8,0)
 S IBX=$$BILL(IBIFN) Q:'IBIFN  S DFN=+IBX,IBDT1=$P(IBX,U,2),IBDT2=$P(IBX,U,3)
"RTN","IBCSC5B",9,0)
 ;
"RTN","IBCSC5B",10,0)
EN1 D PISET(DFN,IBDT1,IBDT2,.APROS,.ALPROS) D SET(IBIFN,.ABILL,.ALBILL,+$G(APROS))
"RTN","IBCSC5B",11,0)
 D PIDISP(.APROS,.ALPROS,.ABILL) D DISP(.ABILL,.ALBILL) S BIFN=""
"RTN","IBCSC5B",12,0)
 ;
"RTN","IBCSC5B",13,0)
 S IBACTION=$$SELECT(.ALPROS,.ALBILL) Q:'IBACTION
"RTN","IBCSC5B",14,0)
 I +IBACTION=1 S BIFN=$$ADD(IBIFN,$P(IBACTION,U,2),$P(IBACTION,U,3)) G EN1
"RTN","IBCSC5B",15,0)
 I +IBACTION=2 S BIFN=+$G(ABILL(+$P(IBACTION,U,2),$P(IBACTION,U,3)))
"RTN","IBCSC5B",16,0)
 I +IBACTION=3 S IBX=$$ASKITM(IBDT1,IBDT2) I +IBX S BIFN=$$ADD(IBIFN,+IBX,,$P(IBX,U,2))
"RTN","IBCSC5B",17,0)
 I +BIFN D EDIT(BIFN)
"RTN","IBCSC5B",18,0)
 ;
"RTN","IBCSC5B",19,0)
 G EN1
"RTN","IBCSC5B",20,0)
 Q
"RTN","IBCSC5B",21,0)
 ;
"RTN","IBCSC5B",22,0)
SELECT(ALPROS,ALBILL) ; get which item to add/edit, select from Patient Prosthetics, Bill Items, or add a new one
"RTN","IBCSC5B",23,0)
 ; returns 1 ^ PD DEL DATE ^ PI IFN - ALPROS(selected item) if item from Prosthetics selected
"RTN","IBCSC5B",24,0)
 ;         2 ^ PD DEL DATE ^ X      - ALBILL(selected item) if item existing on bill selected
"RTN","IBCSC5B",25,0)
 ;         3 if add new item, "" if exit, -1 if redo
"RTN","IBCSC5B",26,0)
 N IBX,IBY,IBZ,DIR,DTOUT,DUOUT,DIRUT,X,Y S IBY=""
"RTN","IBCSC5B",27,0)
 S DIR("?")="Select the Prosthetics Item to Add or Edit."
"RTN","IBCSC5B",28,0)
 S DIR("?",1)="Enter the number preceding the Item to Add or Edit."
"RTN","IBCSC5B",29,0)
 S DIR("?",2)="Or enter the Item name to add an item not in the list and not in Prosthetics.",DIR("?",3)=" "
"RTN","IBCSC5B",30,0)
 ;
"RTN","IBCSC5B",31,0)
 S DIR("A")="Select Prosthetics Item",DIR(0)="FO^1:20^K:X?1N1P.NP X" D ^DIR S IBX=Y I $D(DIRUT) G SELECTQ
"RTN","IBCSC5B",32,0)
 ;
"RTN","IBCSC5B",33,0)
 S IBZ=$G(ALPROS(IBX)) I +IBZ W "  adding ",IBX S IBY="1^"_IBZ G SELECTQ
"RTN","IBCSC5B",34,0)
 S IBZ=$G(ALBILL(IBX)) I +IBZ W "  editing ",IBX S IBY="2^"_IBZ G SELECTQ
"RTN","IBCSC5B",35,0)
 ;
"RTN","IBCSC5B",36,0)
 S DIR(0)="YO",DIR("A")="Add a New Item",DIR("B")="YES" D ^DIR K DIR S IBY=-1 I Y=1,'$D(DIRUT) S IBY=3
"RTN","IBCSC5B",37,0)
 ;
"RTN","IBCSC5B",38,0)
SELECTQ Q IBY
"RTN","IBCSC5B",39,0)
 ;
"RTN","IBCSC5B",40,0)
ASKITM(IBDT1,IBDT2) ; Ask for new item data when adding an item not in Prosthetics
"RTN","IBCSC5B",41,0)
 ; returns:  delivery date ^ prosthetic item name (from 661.1, .02)
"RTN","IBCSC5B",42,0)
 N DIR,DIC,DIE,DTOUT,DUOUT,DIRUT,X,Y,IBX,IBY S (IBX,IBY)="" I '$G(IBDT1)!'$G(IBDT2) G ASKITMQ
"RTN","IBCSC5B",43,0)
 ;
"RTN","IBCSC5B",44,0)
 W !!,"Enter a Prosthetics Item that does not have a Prosthetics Patient record.",!
"RTN","IBCSC5B",45,0)
 S DIR("A")="Select ITEM DELIVERY DATE",DIR(0)="DO^"_IBDT1_":"_IBDT2_":EX" D ^DIR S IBX=Y I Y'?7N G ASKITMQ
"RTN","IBCSC5B",46,0)
 ;
"RTN","IBCSC5B",47,0)
 S DIC="^RMPR(661.1,",DIC(0)="AENOQMZ",DIC("S")="I +$P(^(0),U,5)",DIC("A")="Select PROSTHETICS ITEM: " D ^DIC
"RTN","IBCSC5B",48,0)
 ;
"RTN","IBCSC5B",49,0)
 I +Y>0,+IBX S IBY=IBX_U_$P($G(Y(0)),U,2)
"RTN","IBCSC5B",50,0)
 ;
"RTN","IBCSC5B",51,0)
ASKITMQ Q IBY
"RTN","IBCSC5B",52,0)
 ;
"RTN","IBCSC5B",53,0)
ADD(IBIFN,IBDT,PIFN,IBPNAME) ; Add new Item to Bill (#362.5)
"RTN","IBCSC5B",54,0)
 N IBX,IBY,IBDX,IBHCPCS,DIC,DIE,DA,DR,DLAYGO,X,Y S IBY=0,PIFN=+$G(PIFN) I ($G(IBDT)'?7N)!('$G(IBIFN)) G ADDQ
"RTN","IBCSC5B",55,0)
 ;
"RTN","IBCSC5B",56,0)
 I $G(PIFN),$$ONBILLPI(IBIFN,PIFN) G ADDQ ; don't add duplicates
"RTN","IBCSC5B",57,0)
 I $G(IBPNAME)="" S IBPNAME=$P($$PIN(PIFN),U,2) I IBPNAME="" G ADDQ
"RTN","IBCSC5B",58,0)
 ;
"RTN","IBCSC5B",59,0)
 S DIC="^IBA(362.5,",DIC(0)="AQL",DLAYGO=362.5,X=IBDT K DA,DO D FILE^DICN K DA,DO,X
"RTN","IBCSC5B",60,0)
 I Y>0 S (IBY,DA)=+Y,DIE=DIC,DR=".02////"_IBIFN_";.04////"_+PIFN_";.05///^S X=IBPNAME" D ^DIE K DIE,DA,DR W "... ADDED"
"RTN","IBCSC5B",61,0)
 ;
"RTN","IBCSC5B",62,0)
 ;add dx if known
"RTN","IBCSC5B",63,0)
 I +IBY,+PIFN F IBX=1:1:4 S IBDX=+$G(^RMPR(660,PIFN,"BA"_IBX)) I IBDX,'$O(^IBA(362.3,"AIFN"_IBIFN,IBDX)) D
"RTN","IBCSC5B",64,0)
 . S DIC="^IBA(362.3,",DIC(0)="L",DLAYGO=362.3,X=IBDX,DIC("DR")=".02////"_IBIFN K DD,DO D FILE^DICN S IBDX(+Y)=""
"RTN","IBCSC5B",65,0)
 ;add hcpcs if known ;S IBHCPCS=$P($G(^RMPR(660,PIEN,0)),"^",22) I IBHCPCS
"RTN","IBCSC5B",66,0)
 ;
"RTN","IBCSC5B",67,0)
ADDQ Q IBY
"RTN","IBCSC5B",68,0)
 ;
"RTN","IBCSC5B",69,0)
EDIT(BIFN) ;
"RTN","IBCSC5B",70,0)
 N DIDEL,DIE,DIC,DR,DA,X,Y Q:'$G(BIFN)  W ! S DIDEL=362.5,DIE="^IBA(362.5,",DR=".01;.05",DA=BIFN D ^DIE
"RTN","IBCSC5B",71,0)
 Q
"RTN","IBCSC5B",72,0)
 ;
"RTN","IBCSC5B",73,0)
SET(IBIFN,ARRB,ARRBL,PICNT) ; setup array of all prosthetic devices on bill (#362.5), array names should be passed by reference
"RTN","IBCSC5B",74,0)
 ; input:   PICNT - the number of items found in prosthetics (PISET)
"RTN","IBCSC5B",75,0)
 ; output:  ARRB(PD DELIV DATE, X) = PD IFN (362.5 ptr) ^ Cost,  ARRB = BILL IFN ^ count of items on bill
"RTN","IBCSC5B",76,0)
 ;          ARRBL(PICNT + count of item on bill) = PD DELIV DATE ^ X
"RTN","IBCSC5B",77,0)
 ;          where X is the IFN of the Patient Item (660 ptr) or if not defined then a number_"Z"
"RTN","IBCSC5B",78,0)
 N CNT,IBX,IBY,BIFN,RIFN,IBC,IBRC K ARRB,ARRBL S IBC="AIFN"_$G(IBIFN),ARRB="^0" Q:'$G(IBIFN)
"RTN","IBCSC5B",79,0)
 D RCITEM^IBCSC5A(IBIFN,"IBRC",5) S CNT=0
"RTN","IBCSC5B",80,0)
 ;
"RTN","IBCSC5B",81,0)
 S IBX=0 F  S IBX=$O(^IBA(362.5,IBC,IBX)) Q:'IBX  S BIFN=0 F  S BIFN=$O(^IBA(362.5,IBC,IBX,BIFN)) Q:'BIFN  D
"RTN","IBCSC5B",82,0)
 . S IBY=$G(^IBA(362.5,BIFN,0)) Q:IBY=""  S CNT=CNT+1,RIFN=+$P(IBY,U,4),RIFN=$S(+RIFN:+RIFN,1:CNT_"Z")
"RTN","IBCSC5B",83,0)
 . S ARRB(+IBY,RIFN)=BIFN_U_$$CHG^IBCF4(BIFN,5,.IBRC),ARRB=$G(ARRB)+1
"RTN","IBCSC5B",84,0)
 S ARRB=IBIFN_U_+$G(ARRB)
"RTN","IBCSC5B",85,0)
 ;
"RTN","IBCSC5B",86,0)
 S CNT=+$G(PICNT),IBX=0 F  S IBX=$O(ARRB(IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(ARRB(IBX,IBY)) Q:'IBY  S CNT=CNT+1,ARRBL(CNT)=IBX_U_IBY
"RTN","IBCSC5B",87,0)
 Q
"RTN","IBCSC5B",88,0)
 ;
"RTN","IBCSC5B",89,0)
DISP(ABILL,ALBILL) ;screen display of existing prosthetic devices for a bill, arrays should be passed by reference
"RTN","IBCSC5B",90,0)
 ; input:  ABILL (from SET) list of bill items
"RTN","IBCSC5B",91,0)
 ;         ALBILL (from SET) list of bill items, in count order
"RTN","IBCSC5B",92,0)
 N IBC,IBI,BIFN,BIFN0,DDT
"RTN","IBCSC5B",93,0)
 ;
"RTN","IBCSC5B",94,0)
 W !!,?5,"-----------------  Existing Prosthetic Items for Bill  -----------------",!
"RTN","IBCSC5B",95,0)
 S IBC=0 F  S IBC=$O(ALBILL(IBC)) Q:'IBC  D
"RTN","IBCSC5B",96,0)
 . S DDT=+ALBILL(IBC),IBI=$P(ALBILL(IBC),U,2),BIFN=+$G(ABILL(DDT,IBI)),BIFN0=$G(^IBA(362.5,BIFN,0))
"RTN","IBCSC5B",97,0)
 . W !,?1,$J(IBC,2),")",?6,$$DATE(DDT),?16,$E($P(BIFN0,U,5),1,60)
"RTN","IBCSC5B",98,0)
 W !
"RTN","IBCSC5B",99,0)
 Q
"RTN","IBCSC5B",100,0)
 ;
"RTN","IBCSC5B",101,0)
PISET(DFN,DT1,DT2,ARRP,ARRPL) ; get all prosthetic items (660) for a patient and date range, arrays should pass by ref.
"RTN","IBCSC5B",102,0)
 ; input:   DFN = patient, DT1-DT2 range of dates to search for items
"RTN","IBCSC5B",103,0)
 ; output:  ARRP(PD DEL DATE (660,10), PI IFN (660 ptr)) = PI IFN (660 ptr),  ARRP = count of items
"RTN","IBCSC5B",104,0)
 ;          ARRPL(count) = PD DEL DATE (660,10) ^ PI IFN (660 ptr)
"RTN","IBCSC5B",105,0)
 ;
"RTN","IBCSC5B",106,0)
 N PIFN,DDT,IBX,IBY,CNT K ARRP,ARRPL Q:'$G(DFN)  S DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999
"RTN","IBCSC5B",107,0)
 S PIFN=0 F  S PIFN=$O(^RMPR(660,"C",DFN,PIFN)) Q:'PIFN  D
"RTN","IBCSC5B",108,0)
 . S IBX=$G(^RMPR(660,PIFN,0)) Q:IBX=""  S DDT=+$P(IBX,U,12)\1 I (DDT<DT1)!(DDT>DT2) Q
"RTN","IBCSC5B",109,0)
 . S ARRP(DDT,PIFN)=PIFN,ARRP=+$G(ARRP)+1
"RTN","IBCSC5B",110,0)
 ;
"RTN","IBCSC5B",111,0)
 S (CNT,IBX)=0 F  S IBX=$O(ARRP(IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(ARRP(IBX,IBY)) Q:'IBY  S CNT=CNT+1,ARRPL(CNT)=IBX_U_IBY
"RTN","IBCSC5B",112,0)
 Q
"RTN","IBCSC5B",113,0)
 ;
"RTN","IBCSC5B",114,0)
PIDISP(APROS,ALPROS,ABILL) ; display all prosthetic items (#660) for a patient and date range, arrays passed by reference, not changed
"RTN","IBCSC5B",115,0)
 ; input:  APROS (from PISET) patient's prosthetic items
"RTN","IBCSC5B",116,0)
 ;         ALPROS (from PISET) patient's prosthetics items, in count order
"RTN","IBCSC5B",117,0)
 ;         ABILL (from SET) list of bill's prosthetics items, only to check if item on bill
"RTN","IBCSC5B",118,0)
 N IBC,DDT,PIFN,PNAME,IBY,IBX,IBICD,IBP,IBEX
"RTN","IBCSC5B",119,0)
 ;
"RTN","IBCSC5B",120,0)
 W @IOF,?33,"PROSTHETICS SCREEN"
"RTN","IBCSC5B",121,0)
 W !,"================================================================================",!
"RTN","IBCSC5B",122,0)
 S IBC=0 F  S IBC=$O(ALPROS(IBC)) Q:'IBC  D
"RTN","IBCSC5B",123,0)
 . S DDT=+ALPROS(IBC),PIFN=$P(ALPROS(IBC),U,2)
"RTN","IBCSC5B",124,0)
 . S PNAME=$$PIN(PIFN),IBY=$G(^RMPR(660,PIFN,"AM")),IBX=$G(^RMPR(660,PIFN,0)) K IBEX
"RTN","IBCSC5B",125,0)
 . ;
"RTN","IBCSC5B",126,0)
 . F IBICD=1:1:4 Q:$D(IBEX)  I $D(^RMPR(660,PIFN,"BA"_IBICD)) F IBP=2:1:8 I $P(^RMPR(660,PIFN,"BA"_IBICD),"^",IBP) S IBEX="("_$P($T(EXEMPT+(IBP-1)),";",3)_")" Q  ; look for exemption info
"RTN","IBCSC5B",127,0)
 . ;
"RTN","IBCSC5B",128,0)
 . W !,$S($D(ABILL(+DDT,PIFN)):"*",1:"")
"RTN","IBCSC5B",129,0)
 . W ?1,$J(IBC,2),")",?6,$$DATE(DDT),?16,$E($P(PNAME,U,2),1,27),?45,"("_$P(PNAME,U,3),")",?53,$G(IBEX),?59,$E($$EXSET^IBEFUNC($P(IBX,U,14),660,12),1,4),?64,$$EXSET^IBEFUNC($P(IBY,U,3),660,62),?71,$J(+$P(IBX,U,16),8,2)
"RTN","IBCSC5B",130,0)
 Q
"RTN","IBCSC5B",131,0)
 ;
"RTN","IBCSC5B",132,0)
PIN(P660,P6611) ; given Prosthetic record (#660) or PSAS HCPCS (#661.1) return Item Name
"RTN","IBCSC5B",133,0)
 ; returns PSAS HCPSC ptr (661.1) ^ SHORT DESCRIPTION (661.1, .02) ^ HCPCS (661.1, .01)
"RTN","IBCSC5B",134,0)
 N IBX,IBY S IBY=""
"RTN","IBCSC5B",135,0)
 I +$G(P660) S P6611=+$P($G(^RMPR(660,+P660,1)),U,4)
"RTN","IBCSC5B",136,0)
 I +$G(P6611) S IBX=$G(^RMPR(661.1,+P6611,0)) I IBX'="" S IBY=P6611_U_$P(IBX,U,2)_U_$P(IBX,U,1)
"RTN","IBCSC5B",137,0)
 Q IBY
"RTN","IBCSC5B",138,0)
 ;
"RTN","IBCSC5B",139,0)
PINB(P3625) ; given the bill prosthetics item (#362.5) return Item Name (.05)
"RTN","IBCSC5B",140,0)
 N IBY S IBY=$P($G(^IBA(362.5,+$G(P3625),0)),U,5)
"RTN","IBCSC5B",141,0)
 Q IBY
"RTN","IBCSC5B",142,0)
 ;
"RTN","IBCSC5B",143,0)
BILL(IBIFN) ; get bill data: returns DFN ^ Statement Covers From ^ Statement Covers To
"RTN","IBCSC5B",144,0)
 N IBX,IBY S IBIFN=+$G(IBIFN) S IBX=$G(^DGCR(399,IBIFN,0)),IBY=$P(IBX,U,2)
"RTN","IBCSC5B",145,0)
 S IBX=$G(^DGCR(399,IBIFN,"U")),$P(IBY,U,2)=+IBX,$P(IBY,U,3)=+$P(IBX,U,2)
"RTN","IBCSC5B",146,0)
 Q IBY
"RTN","IBCSC5B",147,0)
 ;
"RTN","IBCSC5B",148,0)
ONBILLPI(IBIFN,PIFN) ; return Bill Item ptr (#362.5) if the Prosthetics Item (#660) is already assigned to the bill
"RTN","IBCSC5B",149,0)
 ; input:  PIFN = Patient Prosthetics Item (ptr to 660)
"RTN","IBCSC5B",150,0)
 ; output: BIFN = Bill Prosthetics Item (ptr to 362.5) or null if not found
"RTN","IBCSC5B",151,0)
 N IBC,IBX,IBY,BIFN S IBY="" S IBC="AIFN"_$G(IBIFN)
"RTN","IBCSC5B",152,0)
 S IBX=0 F  S IBX=$O(^IBA(362.5,IBC,IBX)) Q:'IBX  S BIFN=0 F  S BIFN=$O(^IBA(362.5,IBC,IBX,BIFN)) Q:'BIFN  D
"RTN","IBCSC5B",153,0)
 . I +$G(PIFN),$P($G(^IBA(362.5,BIFN,0)),U,4)=PIFN S IBY=BIFN
"RTN","IBCSC5B",154,0)
 Q IBY
"RTN","IBCSC5B",155,0)
 ;
"RTN","IBCSC5B",156,0)
DATE(X) ;
"RTN","IBCSC5B",157,0)
 Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCSC5B",158,0)
 ;
"RTN","IBCSC5B",159,0)
EXEMPT ; exemption reasons
"RTN","IBCSC5B",160,0)
 ;;AO
"RTN","IBCSC5B",161,0)
 ;;IR
"RTN","IBCSC5B",162,0)
 ;;SC
"RTN","IBCSC5B",163,0)
 ;;SWA
"RTN","IBCSC5B",164,0)
 ;;MST
"RTN","IBCSC5B",165,0)
 ;;HNC
"RTN","IBCSC5B",166,0)
 ;;CV
"RTN","IBCSC5B",167,0)
 ;
"RTN","IBCSC61")
0^36^B7758079^B7919813
"RTN","IBCSC61",1,0)
IBCSC61 ;ALB/MJB - MCCR SCREEN UTILITY ;20 JUN 88 10:58
"RTN","IBCSC61",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,210,230,309,389**;21-MAR-94;Build 6
"RTN","IBCSC61",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC61",4,0)
 ;
"RTN","IBCSC61",5,0)
 ;MAP TO IBCSC61
"RTN","IBCSC61",6,0)
 ;
"RTN","IBCSC61",7,0)
REV I I>1 W !?4,"Rev. Code",?16,": "
"RTN","IBCSC61",8,0)
 N IBNAME S IBNAME=$E($$NAME($P(IBREVC(I),U,10),$P(IBREVC(I),U,11)),1,17)
"RTN","IBCSC61",9,0)
 S DGRCD=$S($D(^DGCR(399.2,+IBREVC(I),0)):^(0),1:""),DGRCD=$P(DGRCD,"^",1)_"-"_$S(IBNAME'="":IBNAME,1:$E($P(DGRCD,"^",2),1,17))
"RTN","IBCSC61",10,0)
 I $P(IBREVC(I),"^",6) S DGRCD=DGRCD_$J("",21-$L(DGRCD))_"  "_$P($$CPT^ICPTCOD(+$P(IBREVC(I),"^",6)),U,2)
"RTN","IBCSC61",11,0)
 I '$P(IBREVC(I),U,6),$P(IBREVC,U,11) S DGRCD=DGRCD_$J("",21-$L(DGRCD))_" *"_$P($$CPT^ICPTCOD(+$P(IBREVC(I),"^",11)),U,2)
"RTN","IBCSC61",12,0)
 S DGRCD=DGRCD_$J("",28-$L(DGRCD))
"RTN","IBCSC61",13,0)
 I (+$P(IBREVC(I),"^",3)>1)!($P(IBREVC(I),U,10)'=4) S DGRCD=DGRCD_$J($P(IBREVC(I),"^",3),3)
"RTN","IBCSC61",14,0)
 S X=$S($P(IBREVC(I),"^",4)]"":$P(IBREVC(I),"^",4),1:IBU) I X'=IBU S X2="2$" D COMMA^%DTC
"RTN","IBCSC61",15,0)
 W DGRCD,$J("",32-$L(DGRCD)),X
"RTN","IBCSC61",16,0)
 I $P(IBREVC(I),"^",5)]"",$D(^DGCR(399.1,$P(IBREVC(I),"^",5),0)) W ?60," ",$E($P(^DGCR(399.1,$P(IBREVC(I),"^",5),0),"^"),1,16)
"RTN","IBCSC61",17,0)
 I IBREVC<10,$P(IBREVC(I),U,9)'="",$$FT^IBCEF(IBIFN)=3 S X=$P(IBREVC(I),U,9),X2="2$" D COMMA^%DTC W !,?50,X S IBREVC=IBREVC+1 W ?64,"(Non-Covered)"
"RTN","IBCSC61",18,0)
 Q
"RTN","IBCSC61",19,0)
 ;
"RTN","IBCSC61",20,0)
CHARGE S (IBCH,IBUCH)=0 F I=1:1 Q:'$D(IBREVC(I))  S IBCH=IBCH+($P(IBREVC(I),U,4)),IBUCH=IBUCH+$P(IBREVC(I),U,9)
"RTN","IBCSC61",21,0)
 I IB("U1")]"" S X=$P(IB("U1"),"^",1),X1=$P(IB("U1"),"^",2),IBCH=X
"RTN","IBCSC61",22,0)
 Q
"RTN","IBCSC61",23,0)
 ;
"RTN","IBCSC61",24,0)
OFFSET S IBOFFC="" W !?4,"OFFSET",?16,": " S X=$S(IB("U1")']"":0,1:+$P(IB("U1"),U,2)),X2="2$" S:X IBOFFC=$P(IB("U1"),U,3) D COMMA^%DTC
"RTN","IBCSC61",25,0)
 W X,"  [",$S($L(IBOFFC):IBOFFC,'$P(X,"$",2):"NO OFFSET RECORDED",1:"OFFSET DESCRIPTION UNSPECIFIED"),"]"
"RTN","IBCSC61",26,0)
 D CHARGE W !?4,"BILL TOTAL",?16,": " S X=$S('$D(IBCH):0,1:+IBCH),X2="2$" D COMMA^%DTC W X
"RTN","IBCSC61",27,0)
 K IBOFFC
"RTN","IBCSC61",28,0)
 Q
"RTN","IBCSC61",29,0)
 ;
"RTN","IBCSC61",30,0)
NAME(TYPE,ITEM) ; if rx or pros or DRG or unassociated return name of the item
"RTN","IBCSC61",31,0)
 N IBNAME S IBNAME=""
"RTN","IBCSC61",32,0)
 I $G(TYPE)=3,+$G(ITEM) D
"RTN","IBCSC61",33,0)
 .D ZERO^IBRXUTL($P($G(^IBA(362.4,+ITEM,0)),U,4))
"RTN","IBCSC61",34,0)
 .S IBNAME=$G(^TMP($J,"IBDRUG",+$P($G(^IBA(362.4,+ITEM,0)),U,4),.01))
"RTN","IBCSC61",35,0)
 .K ^TMP($J,"IBDRUG")
"RTN","IBCSC61",36,0)
 .Q
"RTN","IBCSC61",37,0)
 I $G(TYPE)=5,+$G(ITEM) S IBNAME=$P($G(^IBA(362.5,+ITEM,0)),U,5)
"RTN","IBCSC61",38,0)
 I $G(TYPE)=6,+$G(ITEM) S IBNAME=$P($$DRG^IBACSV(+ITEM),U,1)
"RTN","IBCSC61",39,0)
 I $G(TYPE)=9,+$G(ITEM) S IBNAME=$P($G(^IBA(363.21,+ITEM,0)),U,1)
"RTN","IBCSC61",40,0)
 Q IBNAME
"RTN","IBCSC61",41,0)
 ;IBCSC61
"RTN","IBJTBA")
0^37^B47704130^B47553598
"RTN","IBJTBA",1,0)
IBJTBA ;ALB/ARH - TPI BILL CHARGE INFO SCREEN ;01-MAR-1995
"RTN","IBJTBA",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,51,137,135,309,349,389**;21-MAR-94;Build 6
"RTN","IBJTBA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTBA",4,0)
 ;
"RTN","IBJTBA",5,0)
EN ; -- main entry point for IBJ TP BILL CHARGES
"RTN","IBJTBA",6,0)
 D EN^VALM("IBJT BILL CHARGES")
"RTN","IBJTBA",7,0)
 Q
"RTN","IBJTBA",8,0)
 ;
"RTN","IBJTBA",9,0)
HDR ; -- header code
"RTN","IBJTBA",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBA",11,0)
 Q
"RTN","IBJTBA",12,0)
 ;
"RTN","IBJTBA",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBA",14,0)
 N IBOK,IBEOBDET
"RTN","IBJTBA",15,0)
 K ^TMP("IBJTBA",$J) N IBFT
"RTN","IBJTBA",16,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBA",17,0)
 S IBFT=+$P($G(^DGCR(399,+IBIFN,0)),U,19),IBOK=1
"RTN","IBJTBA",18,0)
 I $D(^IBM(361.1,"B",IBIFN))!$D(^IBM(361.1,"C",IBIFN)) D  G:'IBOK INITQ
"RTN","IBJTBA",19,0)
 . S DIR("A")="DO YOU WANT ALL EEOB DETAILS?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","IBJTBA",20,0)
 . D FULL^VALM1 W ! D ^DIR K DIR
"RTN","IBJTBA",21,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBJTBA",22,0)
 . S IBEOBDET=+Y
"RTN","IBJTBA",23,0)
 D BLD
"RTN","IBJTBA",24,0)
INITQ Q
"RTN","IBJTBA",25,0)
 ;
"RTN","IBJTBA",26,0)
MRA ; -- mra/eob
"RTN","IBJTBA",27,0)
 N IBI,Z,IBSTR,IBSHEOB,IBCT
"RTN","IBJTBA",28,0)
 S IBCT=0
"RTN","IBJTBA",29,0)
 S IBI=0 F  S IBI=$O(^IBM(361.1,"B",IBIFN,IBI)) Q:'IBI  S Z=+$O(^IBM(361.1,IBI,8,0)) I '$O(^(Z)) S IBCT=IBCT+1,IBSHEOB(IBI)=0  ; Entire EOB belongs to the bill
"RTN","IBJTBA",30,0)
 S IBI=0 F  S IBI=$O(^IBM(361.1,"C",IBIFN,IBI)) Q:'IBI  S IBCT=IBCT+1,IBSHEOB(IBI)=1 ; EOB has been reapportioned at the site
"RTN","IBJTBA",31,0)
 I 'IBCT D
"RTN","IBJTBA",32,0)
 . S IBSTR=$$SETLN("No EEOB/MRA Information","",1,79)
"RTN","IBJTBA",33,0)
 . S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",34,0)
 I IBCT D
"RTN","IBJTBA",35,0)
 . S Z=0
"RTN","IBJTBA",36,0)
 . S IBI=0 F  S IBI=$O(IBSHEOB(IBI)) Q:'IBI  S Z=Z+1 D SHEOB^IBJTBA1(IBI,+IBSHEOB(IBI),Z,IBCT)
"RTN","IBJTBA",37,0)
 ;
"RTN","IBJTBA",38,0)
 Q
"RTN","IBJTBA",39,0)
 ;
"RTN","IBJTBA",40,0)
HELP ; -- help code
"RTN","IBJTBA",41,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBA",42,0)
 Q
"RTN","IBJTBA",43,0)
 ;
"RTN","IBJTBA",44,0)
EXIT ; -- exit code
"RTN","IBJTBA",45,0)
 K ^TMP("IBJTBA",$J)
"RTN","IBJTBA",46,0)
 D CLEAR^VALM1
"RTN","IBJTBA",47,0)
 Q
"RTN","IBJTBA",48,0)
 ;
"RTN","IBJTBA",49,0)
BLD ; charges, as they would display on the bill
"RTN","IBJTBA",50,0)
 N IBXDATA,IBXSAVE
"RTN","IBJTBA",51,0)
 I $P($G(^DGCR(399,+IBIFN,0)),U,19)=2 D H1500 Q
"RTN","IBJTBA",52,0)
 D UB04
"RTN","IBJTBA",53,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",54,0)
 Q
"RTN","IBJTBA",55,0)
 ;
"RTN","IBJTBA",56,0)
H1500 ; block 24
"RTN","IBJTBA",57,0)
 N X,IBI,IBJ,IBLN,IBX,IBSTR,IBLKLN,IBPFORM,IBLIN
"RTN","IBJTBA",58,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",59,0)
 S IBLIN=$$BOX24D^IBCEF11("",1),IBLKLN=0,IBLN=1
"RTN","IBJTBA",60,0)
 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",61,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2),IBLN=1
"RTN","IBJTBA",62,0)
 S IBX=$$BILLN^IBCEFG0(1,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBJTBA",63,0)
 S IBI=$O(^TMP("IBXDISP",$J,""),-1)
"RTN","IBJTBA",64,0)
 S IBJ="" F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ),-1) Q:$S('IBJ:1,1:$TR($G(^(IBJ))," ")'="")  K ^TMP("IBXDISP",$J,IBI,IBJ)
"RTN","IBJTBA",65,0)
 I '$O(^TMP("IBXDISP",$J,IBI,0)) S VALMSG="No charges or procedures defined.",VALMQUIT="" G H1500Q
"RTN","IBJTBA",66,0)
 S IBI="" F  S IBI=$O(^TMP("IBXDISP",$J,IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ)) Q:'IBJ  D
"RTN","IBJTBA",67,0)
 . S IBX=$G(^TMP("IBXDISP",$J,IBI,IBJ)),IBLN=$$SET(IBX,IBLN)
"RTN","IBJTBA",68,0)
 K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",69,0)
 D COB,MRA
"RTN","IBJTBA",70,0)
 I $$ISRX^IBCEF1(IBIFN) D RX
"RTN","IBJTBA",71,0)
 I $$ISPROS^IBCEF1(IBIFN) D PROS
"RTN","IBJTBA",72,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBA",73,0)
H1500Q Q
"RTN","IBJTBA",74,0)
 ;
"RTN","IBJTBA",75,0)
UB04 ;form locator 42-49,   IBIFN required
"RTN","IBJTBA",76,0)
 N X,Y,DIR,IBI,IBJ,IBX,IBLN,IBLC,IBLIN,IBPFORM,IBSTATE,IBCBILL,IBINPAT,IBQ,Z,Z0
"RTN","IBJTBA",77,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",78,0)
 S IBLIN=$$RCBOX^IBCEF11()
"RTN","IBJTBA",79,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",80,0)
 S IBPFORM=$S($P($G(^IBE(353,3,2)),U,8):$P(^(2),U,8),1:3)
"RTN","IBJTBA",81,0)
 S IBX=$$BILLN^IBCEFG0(1,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBJTBA",82,0)
 I '$O(^TMP("IBXDISP",$J,0)) S VALMSG="No charges defined.",VALMQUIT="" G UB04Q
"RTN","IBJTBA",83,0)
 S Z="" F  S Z=$O(^TMP("IBXDISP",$J,1,Z),-1) Q:Z=""  S Z0=$G(^(Z)) Q:$TR(Z0," ")'=""  K ^(Z)
"RTN","IBJTBA",84,0)
 S:Z ^TMP("IBXDISP",$J,1,Z+1)=" "
"RTN","IBJTBA",85,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBJTBA",86,0)
 S IBSTATE=$G(^DGCR(399,IBIFN,"U")),IBCBILL=$G(^DGCR(399,IBIFN,0))
"RTN","IBJTBA",87,0)
 ;
"RTN","IBJTBA",88,0)
 S (VALMCNT,IBLN)=1,IBLKLN=0
"RTN","IBJTBA",89,0)
 I +IBINPAT D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",90,0)
 . S IBX=$P(IBSTATE,U,15),IBSTR=+IBX_" DAY"_$S(IBX'=1:"S",1:"")_" INPATIENT CARE"
"RTN","IBJTBA",91,0)
 . S IBX=$$LOS^IBCU64(+IBSTATE,+$P(IBSTATE,U,2),+$P(IBCBILL,U,6)),IBX=IBX-$$LOS1^IBCU64(IBIFN) I IBX>0 S IBSTR=IBSTR_$J("Pass Days: "_IBX,55)
"RTN","IBJTBA",92,0)
 ;
"RTN","IBJTBA",93,0)
 S IBI="" F  S IBI=$O(^TMP("IBXDISP",$J,IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ)) Q:'IBJ  D
"RTN","IBJTBA",94,0)
 . S IBX=$G(^TMP("IBXDISP",$J,IBI,IBJ)),IBLN=$$SET(IBX,IBLN)
"RTN","IBJTBA",95,0)
 . I $E(IBX,1,3)="001" D COB
"RTN","IBJTBA",96,0)
 ;
"RTN","IBJTBA",97,0)
 K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",98,0)
 ;
"RTN","IBJTBA",99,0)
 D MRA
"RTN","IBJTBA",100,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBA",101,0)
UB04Q Q
"RTN","IBJTBA",102,0)
 ;
"RTN","IBJTBA",103,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTBA",104,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTBA",105,0)
 Q IBX
"RTN","IBJTBA",106,0)
 ;
"RTN","IBJTBA",107,0)
SET(STR,LN) ; set up TMP array with screen data (allows 2 blank lines, if not at end of array)
"RTN","IBJTBA",108,0)
 N IBX,IBI I STR?80" " S IBLKLN=IBLKLN+1 G SETQ
"RTN","IBJTBA",109,0)
 F IBI=1:1:IBLKLN D SET^VALM10(LN," ") S LN=LN+1 Q:IBI>1
"RTN","IBJTBA",110,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBA",111,0)
 S LN=LN+1,IBLKLN=0
"RTN","IBJTBA",112,0)
SETQ Q LN
"RTN","IBJTBA",113,0)
 ;
"RTN","IBJTBA",114,0)
COB ; if there is an offset or a secondary/tertiary payer add it to the display, with ins co, and prior bill #
"RTN","IBJTBA",115,0)
 ; IBIFN and IBLN must exist upon entry, IBLN is updated with new line count
"RTN","IBJTBA",116,0)
 N IBM,IBM1,IBI,IBJ,IBD,IBSTR,IBCU2,IBCU1 Q:'$G(IBIFN)
"RTN","IBJTBA",117,0)
 S IBM=$G(^DGCR(399,IBIFN,"M")),IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBJTBA",118,0)
 S IBCU2=$G(^DGCR(399,IBIFN,"U2")),IBCU1=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBJTBA",119,0)
 S IBJ=$P($G(^DGCR(399,IBIFN,0)),U,21),IBJ=$S(IBJ="P":3,IBJ="S":3,IBJ="T":3,1:0),IBSTR=""
"RTN","IBJTBA",120,0)
 I +$P(IBM,U,2)!(+$P(IBM,U,3)) F IBI=1:1:IBJ I +$P(IBM,U,IBI) D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",121,0)
 . I IBSTR="" S IBLN=$$SET("",IBLN)
"RTN","IBJTBA",122,0)
 . S IBD=$S(IBI=1:"Primary",IBI=2:"Secondary",1:"Tertiary")_": " S IBSTR=$$SETLN(IBD,"",5,11)
"RTN","IBJTBA",123,0)
 . S IBD=$P($G(^DIC(36,+$P(IBM,U,IBI),0)),U,1) S IBSTR=$$SETLN(IBD,IBSTR,17,25)
"RTN","IBJTBA",124,0)
 . I $P(IBCU2,U,(IBI+3))'="" S IBD=$J(+$P(IBCU2,U,(IBI+3)),9,2) S IBSTR=$$SETLN(IBD,IBSTR,44,11)
"RTN","IBJTBA",125,0)
 . I $P(IBM1,U,(IBI+4))'="" S IBD=$$BN1^PRCAFN(+$P(IBM1,U,(IBI+4))) S IBSTR=$$SETLN(IBD,IBSTR,60,11)
"RTN","IBJTBA",126,0)
 I +$P(IBCU1,U,2) D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",127,0)
 . I IBSTR="" S IBLN=$$SET("",IBLN)
"RTN","IBJTBA",128,0)
 . S IBD="Offset: " S IBSTR=$$SETLN(IBD,"",5,11)
"RTN","IBJTBA",129,0)
 . S IBD=$P(IBCU1,U,3) S IBSTR=$$SETLN(IBD,IBSTR,17,25)
"RTN","IBJTBA",130,0)
 . S IBD=$J($P(IBCU1,U,2),9,2) S IBSTR=$$SETLN(IBD,IBSTR,44,11)
"RTN","IBJTBA",131,0)
 . S IBD=$P(IBCU1,U,1)-$P(IBCU1,U,2),IBD="Billed: "_$J(IBD,0,2) S IBSTR=$$SETLN(IBD,IBSTR,60,17)
"RTN","IBJTBA",132,0)
 Q
"RTN","IBJTBA",133,0)
 ;
"RTN","IBJTBA",134,0)
RX ;RX refill info for CMS-1500 TPJI display
"RTN","IBJTBA",135,0)
 N Z,Z0,Z1,IBSPC,IBD,IBI,IBSTR,IBARRAY,IBRXX
"RTN","IBJTBA",136,0)
 S IBLN=IBLN+1
"RTN","IBJTBA",137,0)
 S IBSPC=$J("",5)
"RTN","IBJTBA",138,0)
 D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBJTBA",139,0)
 I $D(IBARRAY) D
"RTN","IBJTBA",140,0)
 . S (Z,Z0)=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1 S IBXDATA(Z)=$$DAT1^IBOUTL(Z1)_U_$G(IBARRAY(Z0,Z1))
"RTN","IBJTBA",141,0)
 S IBD=$$SET("",IBLN)
"RTN","IBJTBA",142,0)
 S IBD="PRESCRIPTION REFILLS: (For TPJI display only)"
"RTN","IBJTBA",143,0)
 S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",144,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:IBI=""  D
"RTN","IBJTBA",145,0)
 . S IBRXX=$G(IBXDATA(IBI))
"RTN","IBJTBA",146,0)
 . D ZERO^IBRXUTL($P(IBRXX,U,3))
"RTN","IBJTBA",147,0)
 . S IBD=$J($P(IBRXX,U,7),9,2)_IBSPC_$P(IBRXX,U)_IBSPC_$G(^TMP($J,"IBDRUG",+$P(IBRXX,U,3),.01))
"RTN","IBJTBA",148,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBJTBA",149,0)
 . S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",150,0)
 . S IBD="QTY: "_$P(IBRXX,U,5)_" for "_$P(IBRXX,U,4)_" days supply "_"NDC# "_$P(IBRXX,U,6)
"RTN","IBJTBA",151,0)
 . S IBSTR=$$SETLN(IBD,"",23,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",152,0)
 Q
"RTN","IBJTBA",153,0)
 ;
"RTN","IBJTBA",154,0)
PROS ;prosthetic info for CMS-1500 TPJI display
"RTN","IBJTBA",155,0)
 N Z,Z0,Z1,IBARRAY,IBSPC,IBD,IBI,IBSTR
"RTN","IBJTBA",156,0)
 S IBSPC=$J("",10),IBLN=IBLN+1
"RTN","IBJTBA",157,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBJTBA",158,0)
 I $D(IBARRAY) D
"RTN","IBJTBA",159,0)
 . S (Z,Z0)=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1,IBXDATA(Z)=$$DAT1^IBOUTL(Z0)_U_$E($$PINB^IBCSC5B(+IBARRAY(Z0,Z1)),1,39)
"RTN","IBJTBA",160,0)
 S IBD=$$SET("",IBLN)
"RTN","IBJTBA",161,0)
 S IBD="PROSTHETIC REFILLS: (For TPJI display only)"
"RTN","IBJTBA",162,0)
 S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",163,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:IBI=""  D
"RTN","IBJTBA",164,0)
 . S IBD=$P(IBXDATA(IBI),U)_IBSPC_$P(IBXDATA(IBI),U,2)
"RTN","IBJTBA",165,0)
 . S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",166,0)
 Q
"RTN","IBJTBA",167,0)
 ;
"RTN","IBJTRA1")
0^38^B10800443^B11035559
"RTN","IBJTRA1",1,0)
IBJTRA1 ;ALB/AAS,ARH - TPI CT INSURANCE COMMUNICATIONS BUILD ; 4/1/95
"RTN","IBJTRA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,91,347,389**;21-MAR-94;Build 6
"RTN","IBJTRA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTRA1",4,0)
 ;
"RTN","IBJTRA1",5,0)
 ; copyed from IBTRC with modifications to show reviews for multiple events
"RTN","IBJTRA1",6,0)
 ;
"RTN","IBJTRA1",7,0)
 ;
"RTN","IBJTRA1",8,0)
BLD ; -- Build list of Insurance contacts, including reviews, appeals, and denials
"RTN","IBJTRA1",9,0)
 K ^TMP("IBJTRA",$J),^TMP("IBJTRADX",$J),IBJTA1,IBJTA2
"RTN","IBJTRA1",10,0)
 N X,IBI,IBJ,J,IBTRC,IBTRCD,IBTRCD1,IBJTEVNT,IBCNT,IBTRN,IBTRND,IBETYP,IBBEG
"RTN","IBJTRA1",11,0)
 S VALMSG=$$MSG^IBTUTL3(DFN)
"RTN","IBJTRA1",12,0)
 S (IBTRC,IBCNT,VALMCNT)=0,IBI=""
"RTN","IBJTRA1",13,0)
 D IFNTRN^IBJTU5(IBIFN,.IBJTA1,.IBJTA2)
"RTN","IBJTRA1",14,0)
 I 'IBJTA1 S IBCNT=1 D SET1(" ") S IBCNT=2 D SET1("No Claims Tracking Entries.") G BLDQ
"RTN","IBJTRA1",15,0)
 S IBJ=0 F  S IBJ=$O(IBJTA2(IBJ)) Q:'IBJ  S IBTRN=IBJTA2(IBJ) D
"RTN","IBJTRA1",16,0)
 .S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBJTRA1",17,0)
 .S IBJTEVNT="    "_$$EVNT(IBTRND)
"RTN","IBJTRA1",18,0)
 .F  S IBI=$O(^IBT(356.2,"ATIDT",IBTRN,IBI)) Q:'IBI  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBI,IBTRC)) Q:'IBTRC  D
"RTN","IBJTRA1",19,0)
 ..S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
"RTN","IBJTRA1",20,0)
 ..S IBTRCD1=$G(^IBT(356.2,+IBTRC,1))
"RTN","IBJTRA1",21,0)
 ..Q:'+$P(IBTRCD,"^",19)  ;quit if inactive
"RTN","IBJTRA1",22,0)
 ..S IBCNT=IBCNT+1
"RTN","IBJTRA1",23,0)
 ..I IBJTEVNT'="" D SET(" ",0),SET(IBJTEVNT,0) S IBJTEVNT=""
"RTN","IBJTRA1",24,0)
 ..S IBETYP=$G(^IBE(356.11,+$P(IBTRCD,"^",4),0))
"RTN","IBJTRA1",25,0)
 ..W "."
"RTN","IBJTRA1",26,0)
 ..S X=""
"RTN","IBJTRA1",27,0)
 ..S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBJTRA1",28,0)
 ..S X=$$SETFLD^VALM1($P($$DAT1^IBOUTL(+IBTRCD,"2P")," "),X,"DATE")
"RTN","IBJTRA1",29,0)
 ..S X=$$SETFLD^VALM1($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),X,"INS CO")
"RTN","IBJTRA1",30,0)
 ..S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),X,"ACTION")
"RTN","IBJTRA1",31,0)
 ..;
"RTN","IBJTRA1",32,0)
 ..S X=$$SETFLD^VALM1($P(IBETYP,"^",3),X,"TYPE")
"RTN","IBJTRA1",33,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",28),X,"PRE-CERT")
"RTN","IBJTRA1",34,0)
 ..I $P(IBTRCD,"^",13) S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN),3),X,"DAYS")
"RTN","IBJTRA1",35,0)
 ..I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)=20 S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",15),$P(IBTRCD,"^",16),IBTRN),3),X,"DAYS")
"RTN","IBJTRA1",36,0)
 ..I $P(IBTRCD1,"^",7)!($P(IBTRCD1,"^",8)) S X=$$SETFLD^VALM1("ALL",X,"DAYS")
"RTN","IBJTRA1",37,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",6),X,"CONTACT")
"RTN","IBJTRA1",38,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",7),X,"PHONE")
"RTN","IBJTRA1",39,0)
 ..S X=$$SETFLD^VALM1($P(IBTRCD,"^",9),X,"REF NO")
"RTN","IBJTRA1",40,0)
 ..I $P(IBETYP,"^",2)=60!($P(IBETYP,"^",2)=65) D APPEAL^IBTRC3
"RTN","IBJTRA1",41,0)
 ..D SET(X,1)
"RTN","IBJTRA1",42,0)
 I 'IBCNT S IBCNT=1 D SET1(" ") S IBCNT=2 D SET1("No Insurance Reviews for Episodes on this Bill.") G BLDQ
"RTN","IBJTRA1",43,0)
BLDQ K IBJTA1,IBJTA2
"RTN","IBJTRA1",44,0)
 Q
"RTN","IBJTRA1",45,0)
 ;
"RTN","IBJTRA1",46,0)
SET1(X) ; set array (no selection)
"RTN","IBJTRA1",47,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTRA1",48,0)
 S ^TMP("IBJTRA",$J,VALMCNT,0)=X
"RTN","IBJTRA1",49,0)
 Q
"RTN","IBJTRA1",50,0)
 ;
"RTN","IBJTRA1",51,0)
SET(X,Y) ; -- set arrays
"RTN","IBJTRA1",52,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTRA1",53,0)
 S ^TMP("IBJTRA",$J,VALMCNT,0)=X
"RTN","IBJTRA1",54,0)
 S ^TMP("IBJTRA",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBJTRA1",55,0)
 I +$G(Y) S ^TMP("IBJTRADX",$J,IBCNT)=VALMCNT_"^"_IBTRC
"RTN","IBJTRA1",56,0)
 Q
"RTN","IBJTRA1",57,0)
 ;
"RTN","IBJTRA1",58,0)
EVNT(IBTRND) ; return line for display on event
"RTN","IBJTRA1",59,0)
 N X,Y,IBTYP S X="" I $G(IBTRND)="" G EVNTQ
"RTN","IBJTRA1",60,0)
 S IBTYP=+$P(IBTRND,U,18)
"RTN","IBJTRA1",61,0)
 S X=$$EXSET^IBJU1(IBTYP,356,.18)
"RTN","IBJTRA1",62,0)
 I IBTYP=2 S X=X_" of "_$P($G(^DIC(40.7,+$$SCE^IBSDU(+$P(IBTRND,U,4),3),0)),U,1)
"RTN","IBJTRA1",63,0)
 I IBTYP=3 S X=X_" of "_$P($$PIN^IBCSC5B(+$P(IBTRND,U,9)),U,2)
"RTN","IBJTRA1",64,0)
 I IBTYP=4 S X=X_" of "_$$FILE^IBRXUTL(+$P(IBTRND,U,8),.01)
"RTN","IBJTRA1",65,0)
 S X=X_" on "_$$DAT1^IBOUTL($P(IBTRND,U,6),"2P")
"RTN","IBJTRA1",66,0)
EVNTQ Q X
"RTN","IBRFN3")
0^39^B29612898^B29672386
"RTN","IBRFN3",1,0)
IBRFN3 ;ALB/ARH - PASS BILL/CLAIM TO AR ;3/18/96
"RTN","IBRFN3",2,0)
 ;;2.0;INTEGRATED BILLING;**61,133,210,309,389**;21-MAR-94;Build 6
"RTN","IBRFN3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBRFN3",4,0)
 ;
"RTN","IBRFN3",5,0)
 ;  Returns information on the bill passed in,  all data returned in external format, for AR's RC project
"RTN","IBRFN3",6,0)
 ;
"RTN","IBRFN3",7,0)
 ;  If the bill can not be found then returns ARRAY=0  (should be called with ARRAY passed by reference)
"RTN","IBRFN3",8,0)
 ;  Otherwise ARRAY=1 and the following array elements may be defined
"RTN","IBRFN3",9,0)
 ;  these array elements will only be defined is there is data to return
"RTN","IBRFN3",10,0)
 ;  those elements that have multiple entries will be in the form ARRAY("SUB",X) where X=1:1:...
"RTN","IBRFN3",11,0)
 ;
"RTN","IBRFN3",12,0)
 ;  ARRAY("BN") = BILL NUMBER
"RTN","IBRFN3",13,0)
 ;  ARRAY("SR") = SENSITIVE RECORD? (Y or N)
"RTN","IBRFN3",14,0)
 ;  ARRAY("STF") = STATEMENT COVERS FROM DATE - first date covered by bill
"RTN","IBRFN3",15,0)
 ;  ARRAY("STT") = STATEMENT COVERS TO DATE - last date covered by bill
"RTN","IBRFN3",16,0)
 ;  ARRAY("TCG") = TOTAL CHARGES^OFFSET AMT (PRIOR PAYMENTS)^OFFSET DESC
"RTN","IBRFN3",17,0)
 ;  ARRAY("TOC") = BILL TYPE (INPATIENT OR OUTPATIENT)
"RTN","IBRFN3",18,0)
 ;  ARRAY("TCF") = BILL FORM TYPE
"RTN","IBRFN3",19,0)
 ;  ARRAY("DFP") = DATE FIRST PRINTED
"RTN","IBRFN3",20,0)
 ;  ARRAY("TAX") = FEDERAL TAX NUMBER - for facility, a site parameter
"RTN","IBRFN3",21,0)
 ;
"RTN","IBRFN3",22,0)
 ;  ARRAY("PIN") = DEBTOR INSURANCE NAME ^ HOSPITAL PROVIDER NUMBER ^ GROUP NAME ^ GROUP NUMBER ^
"RTN","IBRFN3",23,0)
 ;                 NAME OF INSURED ^ SUBSCRIBER ID ^ RELATIONSHIP TO INSURED
"RTN","IBRFN3",24,0)
 ;
"RTN","IBRFN3",25,0)
 ;  ARRAY("PIN","MMA") = DEBTOR MAILING STREET ADDRESS [LINE 1] ^
"RTN","IBRFN3",26,0)
 ;                       MAILING STREET ADDRESS [LINE 2] ^ MAILING STREET ADDRESS [LINE 3] ^ CITY ^ 
"RTN","IBRFN3",27,0)
 ;                       STATE (ABBREVIATED) ^ ZIP ^ PHONE NUMBER
"RTN","IBRFN3",28,0)
 ;
"RTN","IBRFN3",29,0)
 ;  ARRAY("RVC") = NUMBER OF REVENUE CODES ON BILL
"RTN","IBRFN3",30,0)
 ;  ARRAY("RVC",X) = REVENUE CODE ^ REVENUE CODE DESCRIPTION ^ CHARGE (PER UNIT) ^ UNITS ^
"RTN","IBRFN3",31,0)
 ;                   TOTAL CHARGE FOR REV CODE
"RTN","IBRFN3",32,0)
 ;
"RTN","IBRFN3",33,0)
 ;  ARRAY("OPV") = NUMBER OF OUTPATIENT VISIT DATES ON BILL
"RTN","IBRFN3",34,0)
 ;  ARRAY("OPV",X) = OUTPATIENT VISIT DATE
"RTN","IBRFN3",35,0)
 ;
"RTN","IBRFN3",36,0)
 ;  ARRAY("PRC") = NUMBER OF PROCEDURES ON BILL
"RTN","IBRFN3",37,0)
 ;  ARRAY("PRC",X) = PROCEDURE CODE ^ PROCEDURE DESCRIPTION ^ PROCEDURE DATE ^
"RTN","IBRFN3",38,0)
 ;                   PLACE OF SERVICE CODE ^ PLACE OF SERVICE ^ TYPE OF SERVICE CODE ^ TYPE OF SERVICE
"RTN","IBRFN3",39,0)
 ;
"RTN","IBRFN3",40,0)
 ;  ARRAY("DXS") = NUMBER OF DIAGNOSIS ON BILL
"RTN","IBRFN3",41,0)
 ;  ARRAY("DXS,X) = DIAGNOSIS CODE ^ DIAGNOSIS
"RTN","IBRFN3",42,0)
 ;
"RTN","IBRFN3",43,0)
 ;  ARRAY("RXF") = NUMBER OF PRESCRIPTION REFILLS ON BILL
"RTN","IBRFN3",44,0)
 ;  ARRAY("RXF",X) = PRESCRIPTION # ^ REFILL DATE ^ DRUG NAME ^ DAYS SUPPLY ^ QUANTITY ^ NDC #
"RTN","IBRFN3",45,0)
 ;
"RTN","IBRFN3",46,0)
 ;  ARRAY("PRD") = NUMBER OF PROSTHETIC ITEMS ON BILL
"RTN","IBRFN3",47,0)
 ;  ARRAY("PRD",X) = PROSTHETIC DEVICE ^ DELIVERY DATE
"RTN","IBRFN3",48,0)
 ;
"RTN","IBRFN3",49,0)
 ;  IF CONDITION RELATED TO EMPLOYMENT:  ARRAY("CRE") = "EMPLOYMENT"
"RTN","IBRFN3",50,0)
 ;  IF CONDITION RELATED TO AN AUTO ACCIDENT:  ARRAY("CRA") = "AUTO ACCIDENT" ^ STATE (ABBREVIATION)
"RTN","IBRFN3",51,0)
 ;  IF CONDITION RELATED TO AN OTHER ACCIDENT:  ARRAY("CRO") = "OTHER ACCIDENT"
"RTN","IBRFN3",52,0)
 ;
"RTN","IBRFN3",53,0)
BILL(IBIFN,ARRAY) ; returns array of information on a specific bill, based on RC requirements
"RTN","IBRFN3",54,0)
 ;
"RTN","IBRFN3",55,0)
 N IBI,IBJ,IBK,IBX,IBY,IBTMP,IBD0,IBDU,IBDU1,IBDI1,IBDS,IBDATE
"RTN","IBRFN3",56,0)
 K ARRAY S ARRAY=1 I '$G(IBIFN)!($G(^DGCR(399,+$G(IBIFN),0))="") S ARRAY=0 Q
"RTN","IBRFN3",57,0)
 F IBI=0,"U","U1","S" S @("IBD"_IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBRFN3",58,0)
 S IBX=$P(IBD0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:" ")
"RTN","IBRFN3",59,0)
 S IBDI1=$G(^DGCR(399,IBIFN,IBX))
"RTN","IBRFN3",60,0)
 ;
"RTN","IBRFN3",61,0)
 S ARRAY("TCG")=$P(IBDU1,U,1,3)
"RTN","IBRFN3",62,0)
 S ARRAY("BN")=$P(IBD0,U,1)
"RTN","IBRFN3",63,0)
 S ARRAY("SR")=$S($P(IBDU,U,5)=1:"Y",1:"N")
"RTN","IBRFN3",64,0)
 S ARRAY("STF")=$P(IBDU,U,1)
"RTN","IBRFN3",65,0)
 S ARRAY("STT")=$P(IBDU,U,2)
"RTN","IBRFN3",66,0)
 S ARRAY("TOC")=$S($P(IBD0,U,5)<3:"INPATIENT",1:"OUTPATIENT")
"RTN","IBRFN3",67,0)
 S ARRAY("TCF")=$$FTN^IBCU3($$FT^IBCU3(IBIFN))
"RTN","IBRFN3",68,0)
 S ARRAY("DFP")=$P(IBDS,U,12)
"RTN","IBRFN3",69,0)
 S ARRAY("TAX")=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBRFN3",70,0)
 ;
"RTN","IBRFN3",71,0)
INS ; insurance information
"RTN","IBRFN3",72,0)
 S IBX=$G(^DGCR(399,+IBIFN,"M"))
"RTN","IBRFN3",73,0)
 S ARRAY("PIN")=$P(IBX,U,4)_U_$P($G(^DIC(36,+IBDI1,0)),U,11)_U_$P(IBDI1,U,15)_U_$P(IBDI1,U,3)_U_$P(IBDI1,U,17)_U_$P(IBDI1,U,2)_U_$$RTI($P(IBDI1,U,16))
"RTN","IBRFN3",74,0)
 S ARRAY("PIN","MMA")=$P(IBX,U,5)_U_$P(IBX,U,6)_U_$P($G(^DGCR(399,+IBIFN,"M1")),U,1)_U_$P(IBX,U,7)_U_$$STATE($P(IBX,U,8))
"RTN","IBRFN3",75,0)
 S ARRAY("PIN","MMA")=ARRAY("PIN","MMA")_U_$$ZIP($P(IBX,U,9))_U_$P($G(^DIC(36,+IBDI1,.13)),U,1)
"RTN","IBRFN3",76,0)
 ;
"RTN","IBRFN3",77,0)
RC ; revenue codes
"RTN","IBRFN3",78,0)
 S (IBI,IBJ)=0,ARRAY("RVC")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"RC",IBI)) Q:'IBI  D
"RTN","IBRFN3",79,0)
 . S IBX=$G(^DGCR(399,IBIFN,"RC",IBI,0)) Q:IBX=""  S IBY=$G(^DGCR(399.2,+IBX,0))
"RTN","IBRFN3",80,0)
 . S IBJ=IBJ+1,ARRAY("RVC")=IBJ
"RTN","IBRFN3",81,0)
 . S ARRAY("RVC",IBJ)=$P(IBY,U,1)_U_$P(IBY,U,2)_U_$P(IBX,U,2)_U_$P(IBX,U,3)_U_$P(IBX,U,4)
"RTN","IBRFN3",82,0)
 ;
"RTN","IBRFN3",83,0)
OPV ; outpatient visit dates
"RTN","IBRFN3",84,0)
 S (IBI,IBJ)=0,ARRAY("OPV")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"OP",IBI)) Q:'IBI  D
"RTN","IBRFN3",85,0)
 . S IBX=$G(^DGCR(399,IBIFN,"OP",IBI,0)) Q:'IBX
"RTN","IBRFN3",86,0)
 . S IBJ=IBJ+1,ARRAY("OPV")=IBJ
"RTN","IBRFN3",87,0)
 . S ARRAY("OPV",IBJ)=+IBX
"RTN","IBRFN3",88,0)
 ;
"RTN","IBRFN3",89,0)
PRC ; procedure codes
"RTN","IBRFN3",90,0)
 S (IBI,IBJ)=0,ARRAY("PRC")=IBJ F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  D
"RTN","IBRFN3",91,0)
 . S IBX=$G(^DGCR(399,IBIFN,"CP",IBI,0)),IBY=""
"RTN","IBRFN3",92,0)
 . S IBDATE=$P(IBX,U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBRFN3",93,0)
 . S IBY=$P($$PRCD^IBCEF1($P(IBX,U),1,IBDATE),U,2,3)
"RTN","IBRFN3",94,0)
 . Q:$P(IBY,U)=""
"RTN","IBRFN3",95,0)
 . S IBJ=IBJ+1,ARRAY("PRC")=IBJ
"RTN","IBRFN3",96,0)
 . S ARRAY("PRC",IBJ)=IBY_U_$P(IBX,U,2)
"RTN","IBRFN3",97,0)
 . S IBY=$G(^IBE(353.1,+$P(IBX,U,9),0)),ARRAY("PRC",IBJ)=ARRAY("PRC",IBJ)_U_$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",98,0)
 . S IBY=$G(^IBE(353.2,+$P(IBX,U,10),0)),ARRAY("PRC",IBJ)=ARRAY("PRC",IBJ)_U_$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",99,0)
 ;
"RTN","IBRFN3",100,0)
DX ; diagnosis codes
"RTN","IBRFN3",101,0)
 K IBTMP D SET^IBCSC4D(IBIFN,"",.IBTMP)
"RTN","IBRFN3",102,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBRFN3",103,0)
 S (IBI,IBJ)=0,ARRAY("DXS")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",104,0)
 . S IBX=IBTMP(IBI),IBY=$$ICD9^IBACSV(+IBX,IBDATE) Q:IBY=""
"RTN","IBRFN3",105,0)
 . S IBJ=IBJ+1,ARRAY("DXS")=IBJ
"RTN","IBRFN3",106,0)
 . S ARRAY("DXS",IBJ)=$P(IBY,U)_U_$P(IBY,U,3)
"RTN","IBRFN3",107,0)
 ;
"RTN","IBRFN3",108,0)
RX ; prescription refills
"RTN","IBRFN3",109,0)
 K IBTMP D SET^IBCSC5A(IBIFN,.IBTMP)
"RTN","IBRFN3",110,0)
 S (IBI,IBJ)=0,ARRAY("RXF")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",111,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN3",112,0)
 .. S IBX=IBTMP(IBI,IBK) D ZERO^IBRXUTL(+$P(IBX,U,2)) S IBY=$G(^TMP($J,"IBDRUG",+$P(IBX,U,2),.01))
"RTN","IBRFN3",113,0)
 .. S IBJ=IBJ+1,ARRAY("RXF")=IBJ
"RTN","IBRFN3",114,0)
 .. S ARRAY("RXF",IBJ)=IBI_U_IBK_U_IBY_U_$P(IBX,U,3)_U_$P(IBX,U,4)_U_$P(IBX,U,5)
"RTN","IBRFN3",115,0)
 .. K ^TMP($J,"IBDRUG")
"RTN","IBRFN3",116,0)
 .. Q
"RTN","IBRFN3",117,0)
 ;
"RTN","IBRFN3",118,0)
PD ; prosthetic items
"RTN","IBRFN3",119,0)
 K IBTMP D SET^IBCSC5B(IBIFN,.IBTMP)
"RTN","IBRFN3",120,0)
 S (IBI,IBJ)=0,ARRAY("PRD")=IBJ F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN3",121,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN3",122,0)
 .. S IBX=IBTMP(IBI,IBK)
"RTN","IBRFN3",123,0)
 .. S IBJ=IBJ+1,ARRAY("PRD")=IBJ
"RTN","IBRFN3",124,0)
 .. S ARRAY("PRD",IBJ)=$$PINB^IBCSC5B(+IBX)_U_IBI
"RTN","IBRFN3",125,0)
 ;
"RTN","IBRFN3",126,0)
CC ; condition related to employment, auto accident (place), other accident
"RTN","IBRFN3",127,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CC",IBI)) Q:'IBI  I $G(^(IBI,0))="02" S ARRAY("CRE")="EMPLOYMENT"
"RTN","IBRFN3",128,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S IBX=$G(^(IBI,0)) I +IBX D
"RTN","IBRFN3",129,0)
 . S IBY=$G(^DGCR(399.1,+IBX,0)) Q:IBY=""
"RTN","IBRFN3",130,0)
 . I $P(IBY,U,9)=1 S ARRAY("CRE")="EMPLOYMENT"
"RTN","IBRFN3",131,0)
 . I $P(IBY,U,9)=2 S ARRAY("CRA")="AUTO ACCIDENT"_U_$$STATE($P(IBX,U,3))
"RTN","IBRFN3",132,0)
 . I $P(IBY,U,9)=3 S ARRAY("CRO")="OTHER ACCIDENT"
"RTN","IBRFN3",133,0)
 Q
"RTN","IBRFN3",134,0)
 ;
"RTN","IBRFN3",135,0)
STATE(X) ; returns 2 letter abbreviation for state
"RTN","IBRFN3",136,0)
 Q $P($G(^DIC(5,+X,0)),U,2)
"RTN","IBRFN3",137,0)
ZIP(X) ; returns zip in external form
"RTN","IBRFN3",138,0)
 S X=$E(X,1,5)_$S($E(X,6,9)]"":"-"_$E(X,6,9),1:"")
"RTN","IBRFN3",139,0)
 Q X
"RTN","IBRFN3",140,0)
RTI(X) ; returns external form of relationship to insured
"RTN","IBRFN3",141,0)
 I X'="" S X=$S(X="01":"PATIENT",X="02":"SPOUSE",X="03":"NATURAL CHILD",X="08":"EMPLOYEE",X="09":"UNKNOWN",X="11":"ORGAN DONOR",X="15":"INJURED PLANTIFF",X="18":"PARENT",1:"")
"RTN","IBRFN3",142,0)
 Q X
"RTN","IBRFN3",143,0)
 ;IBRFN3
"RTN","IBRFN4")
0^40^B25630558^B25672480
"RTN","IBRFN4",1,0)
IBRFN4 ;ALB/TMK - Supported functions for AR/IB DATA EXTRACT ;15-FEB-2005
"RTN","IBRFN4",2,0)
 ;;2.0;INTEGRATED BILLING;**301,305,389**;21-MAR-94;Build 6
"RTN","IBRFN4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBRFN4",4,0)
 ;
"RTN","IBRFN4",5,0)
IBAREXT(IBIFN,IBD) ; Returns data for claim IBIFN for IB/AR Extract
"RTN","IBRFN4",6,0)
 ; Data returned (pieces):
"RTN","IBRFN4",7,0)
 ; 1-MEDICARE Status (0=not MRA secondary, 1=MRA secondary)
"RTN","IBRFN4",8,0)
 ; 2-Last MRA requested date "S";7 (7 - INTERNAL)
"RTN","IBRFN4",9,0)
 ; 3-Last Electronic extract date  "TX";2 (21 - INTERNAL)
"RTN","IBRFN4",10,0)
 ; 4-Printed via EDI  "TX";7  (26 - EXTERNAL)
"RTN","IBRFN4",11,0)
 ; 5-Force Claim to Print  "TX";8  (27 - EXTERNAL)
"RTN","IBRFN4",12,0)
 ; 6-Claim MRA Status  "TX";5  (24 - EXTERNAL)
"RTN","IBRFN4",13,0)
 ; 7-MRA recorded date  "TX";3  (22 - INTERNAL)
"RTN","IBRFN4",14,0)
 ; 8-Bill cancelled date  "S";17  (17 - INTERNAL)
"RTN","IBRFN4",15,0)
 ; 9-form type  0;19   (.19 - EXTERNAL)
"RTN","IBRFN4",16,0)
 ; 10-Current Payer  $$CURR^IBCEF2(IBIFN) returns IEN;NAME (file 36)
"RTN","IBRFN4",17,0)
 ; 11-DRG 0;8==> file 45 (9 - EXTERNAL)
"RTN","IBRFN4",18,0)
 ; 12-ECME #  "M1";8 (460 - EXTERNAL)
"RTN","IBRFN4",19,0)
 ; 13-NON-VA Facility
"RTN","IBRFN4",20,0)
 ; 14-#Days Site Not Responsible for MRA ($$DAYS(IBIFN))
"RTN","IBRFN4",21,0)
 ; 15-National VA id number for Ins Verification (365.12;.02 - INTERNAL)
"RTN","IBRFN4",22,0)
 ; 16-Payer name (file 365.12;.01)
"RTN","IBRFN4",23,0)
 ; 17-Offset Amount (202-INTERNAL)
"RTN","IBRFN4",24,0)
 ;
"RTN","IBRFN4",25,0)
 ; IBD("PRD",seq #)=prosthetic item name^date^bill ien
"RTN","IBRFN4",26,0)
 ; IBD("IN")= TYPE OF PLAN NAME ^ GROUP NUMBER ^ RELATIONSHIP TO INSURED
"RTN","IBRFN4",27,0)
 ;   ^ SOURCE OF INFO ^ EDI ID NUMBER - INST ^ EDI ID NUMBER - PROF
"RTN","IBRFN4",28,0)
 ;   ^ INSURANCE REIMBURSE
"RTN","IBRFN4",29,0)
 ; IBD("IN","MMA")= MAILING STREET ADDRESS [LINE 1] ^
"RTN","IBRFN4",30,0)
 ;   ^ MAILING STREET ADDRESS [LINE 2] ^ CITY ^ STATE NAME  ^  ZIP
"RTN","IBRFN4",31,0)
 ;
"RTN","IBRFN4",32,0)
 N IB,IBI,IBJ,IBK,IBX,IBNODE,IBTMP,IBIN,Z
"RTN","IBRFN4",33,0)
 F IBNODE=0,"S","TX","M","U1" S IB(IBNODE)=$G(^DGCR(399,IBIFN,IBNODE))
"RTN","IBRFN4",34,0)
 S IBD=$S($$MRASEC^IBCEF4(IBIFN):1,1:0)
"RTN","IBRFN4",35,0)
 S $P(IBD,U,2)=$P(IB("S"),U,7),$P(IBD,U,3)=$P(IB("TX"),U,2)
"RTN","IBRFN4",36,0)
 S $P(IBD,U,4)=$$GET1^DIQ(399,IBIFN_",",26,"E"),$P(IBD,U,5)=$$GET1^DIQ(399,IBIFN_",",27,"E")
"RTN","IBRFN4",37,0)
 S $P(IBD,U,6)=$$GET1^DIQ(399,IBIFN_",",24,"E"),$P(IBD,U,7)=$P(IB("TX"),U,3)
"RTN","IBRFN4",38,0)
 S $P(IBD,U,8)=$P(IB("S"),U,17),$P(IBD,U,9)=$$GET1^DIQ(399,IBIFN_",",.19,"E")
"RTN","IBRFN4",39,0)
 S Z=$$CURR^IBCEF2(IBIFN),$P(IBD,U,10)=Z_$S(Z:";"_$P($G(^DIC(36,Z,0)),U),1:"")
"RTN","IBRFN4",40,0)
 S Z=$P($G(^DIC(36,+Z,3)),U,10),$P(IBD,U,15)=$P($G(^IBE(365.12,+Z,0)),U,2),$P(IBD,U,16)=$P($G(^(0)),U)
"RTN","IBRFN4",41,0)
 S Z=$P(IB(0),U,8),$P(IBD,U,11)=$S(Z:$$GET1^DIQ(45,Z_",",9,"E"),1:"")
"RTN","IBRFN4",42,0)
 S $P(IBD,U,12)=$$GET1^DIQ(399,IBIFN_",",460,"E")
"RTN","IBRFN4",43,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10),$P(IBD,U,13)=$S(Z:$P($G(^IBA(355.93,Z,0)),U,1),1:"")
"RTN","IBRFN4",44,0)
 ;
"RTN","IBRFN4",45,0)
 S $P(IBD,U,14)=$$DAYS(IBIFN)
"RTN","IBRFN4",46,0)
 S $P(IBD,U,17)=$P(IB("U1"),U,2)
"RTN","IBRFN4",47,0)
 ;
"RTN","IBRFN4",48,0)
 K IBTMP D SET^IBCSC5B(IBIFN,.IBTMP)
"RTN","IBRFN4",49,0)
 S (IBI,IBJ)=0 F  S IBI=$O(IBTMP(IBI)) Q:'IBI  D
"RTN","IBRFN4",50,0)
 . S IBK=0 F  S IBK=$O(IBTMP(IBI,IBK)) Q:'IBK  D
"RTN","IBRFN4",51,0)
 .. S IBX=IBTMP(IBI,IBK)
"RTN","IBRFN4",52,0)
 .. S IBJ=IBJ+1
"RTN","IBRFN4",53,0)
 .. S IBD("PRD",IBJ)=$$PINB^IBCSC5B(+IBX)_U_IBI_U_+IBTMP
"RTN","IBRFN4",54,0)
 ;
"RTN","IBRFN4",55,0)
 S Z=" ",IBD("IN")="",DFN=+$P(IB(0),U,2)
"RTN","IBRFN4",56,0)
 F  S Z=$O(^DPT(DFN,.312,Z),-1) Q:Z=""  D  Q:Z=""
"RTN","IBRFN4",57,0)
 . S IBIN=$G(^DPT(DFN,.312,Z,0))
"RTN","IBRFN4",58,0)
 . I +IB("M")=+IBIN D
"RTN","IBRFN4",59,0)
 .. N IBQ,IBP
"RTN","IBRFN4",60,0)
 .. S IBP=+$P(IBIN,U,18),IBQ=$G(^IBA(355.3,+IBP,0))
"RTN","IBRFN4",61,0)
 .. S IBD("IN")=$S($P(IBQ,U,9):$$GET1^DIQ(355.3,IBP_",",.09,"E"),1:"")_U_$P(IBQ,U,4)_U_$P(IBIN,U,6)_U_$P($G(^DPT(DFN,.312,Z,1)),U,9)
"RTN","IBRFN4",62,0)
 .. S Z=""
"RTN","IBRFN4",63,0)
 ;
"RTN","IBRFN4",64,0)
 S Z=$G(^DIC(36,+IB("M"),3))
"RTN","IBRFN4",65,0)
 S $P(IBD("IN"),U,5)=$P(Z,U,4),$P(IBD("IN"),U,6)=$P(Z,U,2)
"RTN","IBRFN4",66,0)
 S $P(IBD("IN"),U,7)=$$GET1^DIQ(36,+IB("M")_",",1,"I")
"RTN","IBRFN4",67,0)
 S Z=$G(^DIC(36,+IB("M"),.11))
"RTN","IBRFN4",68,0)
 S IBD("IN","MMA")=$P(Z,U,1)_U_$P(Z,U,2)_U_$P(Z,U,4)_U_$S($P(Z,U,5):$P($G(^DIC(5,$P(Z,U,5),0)),U,1),1:"")_U_$P(Z,U,6)
"RTN","IBRFN4",69,0)
 ;
"RTN","IBRFN4",70,0)
 Q IBD
"RTN","IBRFN4",71,0)
 ;
"RTN","IBRFN4",72,0)
IBACT(IBIFN,IBARRY) ; Returns IB actions for bill ien IBIFN
"RTN","IBRFN4",73,0)
 ;IBARRY should be passed by reference and returns:
"RTN","IBRFN4",74,0)
 ;
"RTN","IBRFN4",75,0)
 ; IBARRY(seq)=AR bill #^reference #^external STATUS^IB ACTION TYPE NAME
"RTN","IBRFN4",76,0)
 ;             ^UNITS^TOTAL CHARGE^DT BILLD FROM^DT BILLD TO^AR BILL IEN
"RTN","IBRFN4",77,0)
 ;             ^DT ENTRY ADDED^PATIENT SSN^EVENT DATE^RESULTING FROM
"RTN","IBRFN4",78,0)
 ;             ^INSTITUTION IEN
"RTN","IBRFN4",79,0)
 ;
"RTN","IBRFN4",80,0)
 N IBNA,IB,IB0,DFN,IBCT,Z
"RTN","IBRFN4",81,0)
 S IBNA=$$BN1^PRCAFN(IBIFN),IB="",IBCT=0
"RTN","IBRFN4",82,0)
 F  S IB=$O(^IB("ABIL",IBNA,IB)) Q:IB=""  D
"RTN","IBRFN4",83,0)
 . S IBCT=IBCT+1
"RTN","IBRFN4",84,0)
 . S IB0=$G(^IB(IB,0))
"RTN","IBRFN4",85,0)
 . I $G(DFN)="" S DFN=$P(IB0,U,2)
"RTN","IBRFN4",86,0)
 . ;
"RTN","IBRFN4",87,0)
 . S IBARRY=IBNA_U_$P(IB0,U,1)_U_$$GET1^DIQ(350,IB_",",.05,"E")
"RTN","IBRFN4",88,0)
 . S Z=$P(IB0,U,3)
"RTN","IBRFN4",89,0)
 . S IBARRY=IBARRY_U_$S(Z'="":$P($G(^IBE(350.1,Z,0)),U,1),1:"")
"RTN","IBRFN4",90,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,6) ; UNITS
"RTN","IBRFN4",91,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,7) ; TOTAL CHARGE
"RTN","IBRFN4",92,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,14) ; DT BILLD FROM
"RTN","IBRFN4",93,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,15) ; DT BILLD TO
"RTN","IBRFN4",94,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,11) ; AR BILL #
"RTN","IBRFN4",95,0)
 . S IBARRY=IBARRY_U_$P($P($G(^IB(IB,1)),U,2),".",1) ; DT ENTRY ADDED
"RTN","IBRFN4",96,0)
 . S IBARRY=IBARRY_U_$P(^DPT(DFN,0),U,9) ; SSN
"RTN","IBRFN4",97,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,17) ; EVENT DT
"RTN","IBRFN4",98,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,4) ;RESULTING FROM
"RTN","IBRFN4",99,0)
 . S IBARRY=IBARRY_U_$P(IB0,U,13) ; Institution
"RTN","IBRFN4",100,0)
 . S IBARRY(IBCT)=IBARRY,IBARRY=""
"RTN","IBRFN4",101,0)
 Q
"RTN","IBRFN4",102,0)
 ;
"RTN","IBRFN4",103,0)
PREREG(IBBDT,IBEDT) ;Returns Pre-registration data
"RTN","IBRFN4",104,0)
 N IBDATA
"RTN","IBRFN4",105,0)
 S IBDATA=$$IBAR^IBJDIPR(IBBDT,IBEDT)
"RTN","IBRFN4",106,0)
 Q IBDATA
"RTN","IBRFN4",107,0)
 ;
"RTN","IBRFN4",108,0)
BUFFER(IBBDT,IBEDT) ;Returns Buffer data
"RTN","IBRFN4",109,0)
 N IBDATA
"RTN","IBRFN4",110,0)
 S IBDATA=$$IBAR^IBCNBOA(IBBDT,IBEDT)
"RTN","IBRFN4",111,0)
 Q IBDATA
"RTN","IBRFN4",112,0)
 ;
"RTN","IBRFN4",113,0)
DAYS(IBIFN) ; Returns # days site not responsible for MRA
"RTN","IBRFN4",114,0)
 N X,X1,X2,D0
"RTN","IBRFN4",115,0)
 S X="" ;No. of days
"RTN","IBRFN4",116,0)
 G:'$P(IBD,U,2) DAYSQ
"RTN","IBRFN4",117,0)
 S X2=$P(IBD,U,2) ;MRA Request Date
"RTN","IBRFN4",118,0)
 S X1=$P(IBD,U,7) ;MRA Recorded Date
"RTN","IBRFN4",119,0)
 G:'$$MRASEC^IBCEF4(IBIFN) DAYSQ ; Not MEDICARE secondary
"RTN","IBRFN4",120,0)
 I 'X1!(X1<X2) S X1=DT
"RTN","IBRFN4",121,0)
 D ^%DTC
"RTN","IBRFN4",122,0)
DAYSQ Q X
"RTN","IBRFN4",123,0)
 ;
"RTN","IBRFN4",124,0)
REJ(IBIFN) ; Returns 1 if any rejects found for MRA secondary claim or for
"RTN","IBRFN4",125,0)
 ; any preceding claims it was cancelled/cloned from
"RTN","IBRFN4",126,0)
 N X,Y,I,X1,X2,X3,D0,CURSEQ
"RTN","IBRFN4",127,0)
 S Y=0 ;Y=REJECT FLAG
"RTN","IBRFN4",128,0)
 G:'$$MRASEC^IBCEF4(IBIFN) REJQ ; Not MEDICARE secondary
"RTN","IBRFN4",129,0)
 S CURSEQ=$$COBN^IBCEF(IBIFN),X1=+$P($G(^DGCR(399,IBIFN,0)),U,15)
"RTN","IBRFN4",130,0)
 S D0=IBIFN
"RTN","IBRFN4",131,0)
 F  D  Q:'D0!Y
"RTN","IBRFN4",132,0)
 . ; claim copied from not cancelled and not MRA secondary claim
"RTN","IBRFN4",133,0)
 . I X1,$P($G(^DGCR(399,X1,0)),U,13)'=7,X1'=IBIFN S D0="" Q
"RTN","IBRFN4",134,0)
 . I X1,$P($G(^DGCR(399,X1,0)),U,19)'=$P($G(^DGCR(399,D0,0)),U,19) S D0="" Q
"RTN","IBRFN4",135,0)
 . S I=0 F  S I=$O(^IBM(361,"B",D0,I)) Q:'I  D  Q:Y
"RTN","IBRFN4",136,0)
 .. S X2=$G(^IBM(361,I,0))
"RTN","IBRFN4",137,0)
 .. Q:$P(X2,U,3)'="R"!'$P(X2,U,11)  ;No reject or no transmit bill
"RTN","IBRFN4",138,0)
 .. S X3=$TR($P($G(^IBA(364,+$P(X2,U,11),0)),U,8),"PST","123") ;status msg seq
"RTN","IBRFN4",139,0)
 .. Q:X3'=(CURSEQ-1)
"RTN","IBRFN4",140,0)
 .. S Y=1
"RTN","IBRFN4",141,0)
 . I 'Y S D0=X1,X1=+$P($G(^DGCR(399,X1,0)),U,15) S:X1=D0 D0="" Q
"RTN","IBRFN4",142,0)
REJQ Q Y
"RTN","IBTOBI4")
0^41^B21631408^B21606191
"RTN","IBTOBI4",1,0)
IBTOBI4 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI4",2,0)
 ;;2.0;INTEGRATED BILLING;**91,125,51,210,266,389**;21-MAR-94;Build 6
"RTN","IBTOBI4",3,0)
 ;
"RTN","IBTOBI4",4,0)
CLIN ; -- output clinical information
"RTN","IBTOBI4",5,0)
 N IBOE,DGPM
"RTN","IBTOBI4",6,0)
 Q:$D(IBCTHDR)
"RTN","IBTOBI4",7,0)
 ;
"RTN","IBTOBI4",8,0)
 I $P(IBETYP,"^",3)=1 S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I 'DGPM Q
"RTN","IBTOBI4",9,0)
 I $P(IBETYP,"^",3)=2 S IBOE=$P(^IBT(356,+IBTRN,0),"^",4)
"RTN","IBTOBI4",10,0)
 F IBTAG="DIAG","PROC","PROV" D @IBTAG Q:IBQUIT
"RTN","IBTOBI4",11,0)
 Q
"RTN","IBTOBI4",12,0)
 ;
"RTN","IBTOBI4",13,0)
DIAG ; -- print diagnosis information
"RTN","IBTOBI4",14,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",15,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",16,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",17,0)
DIAG1 W !,"  Diagnosis Information "
"RTN","IBTOBI4",18,0)
 N IBXY,SDDXY,ICDVDT
"RTN","IBTOBI4",19,0)
 I $G(DGPM) D SET^IBTRE3(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE3(.IBXY)
"RTN","IBTOBI4",20,0)
 I $G(IBOE) D SET^SDCO4(IBOE) W:'$D(SDDXY) !?6,"Nothing on File" I $D(SDDXY) S ICDVDT=$$TRNDATE^IBACSV(+IBTRN) D LIST^SDCO4(.SDDXY)
"RTN","IBTOBI4",21,0)
 ; 
"RTN","IBTOBI4",22,0)
 D:$G(DGPM) DRG
"RTN","IBTOBI4",23,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",24,0)
 Q
"RTN","IBTOBI4",25,0)
 ;
"RTN","IBTOBI4",26,0)
PROC ; -- print procedure information
"RTN","IBTOBI4",27,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",28,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",29,0)
PROC1 W !,"  Procedure Information "
"RTN","IBTOBI4",30,0)
 ;
"RTN","IBTOBI4",31,0)
 N IBXY,IBCNT,IBVAL,IBCBK S IBCNT=0
"RTN","IBTOBI4",32,0)
 I $G(DGPM) D SET^IBTRE4(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE4(.IBXY)
"RTN","IBTOBI4",33,0)
 I '$G(DGPM) D  W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST(.IBXY)
"RTN","IBTOBI4",34,0)
 .S IBDT=$P($P(IBTRND,"^",6),".")
"RTN","IBTOBI4",35,0)
 .;
"RTN","IBTOBI4",36,0)
 .S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT-.000001,IBVAL("EDT")=IBDT\1_".99"
"RTN","IBTOBI4",37,0)
 .; Only want to extract procedures from parent encounters to avoid dups
"RTN","IBTOBI4",38,0)
 .S IBCBK="I '$P(Y0,U,6) D GETPROC^IBTOBI4(Y,Y0,.IBCNT,.IBXY)"
"RTN","IBTOBI4",39,0)
 .D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK) K ^TMP("DIERR",$J)
"RTN","IBTOBI4",40,0)
 ;
"RTN","IBTOBI4",41,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",42,0)
 Q
"RTN","IBTOBI4",43,0)
 ;
"RTN","IBTOBI4",44,0)
GETPROC(IBOE,IBOE0,IBCNT,IBXY) ; output:  IBXY(cnt) = CPT IFN ^ DT/TM ^ Mod,Mod ^ Encounter Provider (#1204)
"RTN","IBTOBI4",45,0)
 N I2,IBCPT,IBCPTS,IBZERR,IBM,IBMODS
"RTN","IBTOBI4",46,0)
 D GETCPT^SDOE(IBOE,"IBCPTS","IBZERR")
"RTN","IBTOBI4",47,0)
 Q:'$O(IBCPTS(0))  ;No procedures for this encounter
"RTN","IBTOBI4",48,0)
 S I2=0
"RTN","IBTOBI4",49,0)
 F  S I2=$O(IBCPTS(I2)) Q:'I2  F Z=1:1:$P(IBCPTS(I2),U,16) D
"RTN","IBTOBI4",50,0)
 . S IBMODS="",IBM=0
"RTN","IBTOBI4",51,0)
 . F  S IBM=$O(IBCPTS(I2,1,IBM)) Q:'IBM  S IBMODS=$S(IBMODS="":"",1:",")_$G(IBCPTS(I2,1,IBM,0))
"RTN","IBTOBI4",52,0)
 . S IBCNT=IBCNT+1,IBXY(IBCNT)=$P(IBCPTS(I2),U)_U_+IBOE0_U_IBMODS_U_$P($G(IBCPTS(I2,12)),U,4)
"RTN","IBTOBI4",53,0)
 Q
"RTN","IBTOBI4",54,0)
 ;
"RTN","IBTOBI4",55,0)
PROV ; -- print provider information
"RTN","IBTOBI4",56,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",57,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",58,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",59,0)
PROV1 W !,"  Provider Information "
"RTN","IBTOBI4",60,0)
 N IBXY,SDPRY
"RTN","IBTOBI4",61,0)
 I $G(DGPM) D SET^IBTRE5(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE5(.IBXY)
"RTN","IBTOBI4",62,0)
 I $G(IBOE) D SET^SDCO3(IBOE) W:'$D(SDPRY) !?6,"Nothing on File" D:$D(SDPRY) LIST^SDCO3(.SDPRY)
"RTN","IBTOBI4",63,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",64,0)
 Q
"RTN","IBTOBI4",65,0)
 ;
"RTN","IBTOBI4",66,0)
LIST(IBXY) ; -- list procedures array
"RTN","IBTOBI4",67,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTOBI4",68,0)
 ; Output -- List Diagnosis Array
"RTN","IBTOBI4",69,0)
 N I,IBXD,IBMODS,J,IBM,IBDATE
"RTN","IBTOBI4",70,0)
 W !
"RTN","IBTOBI4",71,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTOBI4",72,0)
 . S IBDATE=$P(IBXY(I),U,2)
"RTN","IBTOBI4",73,0)
 . S IBXD=$$PRCD^IBCEF1(+IBXY(I)_";ICPT(",1,IBDATE)
"RTN","IBTOBI4",74,0)
 . W !?2,I,"  ",$P(IBXD,U,2),?15,$E($P(IBXD,U,3),1,40),?60,$$DAT1^IBOUTL(IBDATE,"2P")
"RTN","IBTOBI4",75,0)
 . S IBMODS=$$MODLST^IBEFUNC2($P(IBXY(I),U,3),1,.IBMODS,IBDATE)
"RTN","IBTOBI4",76,0)
 . I IBMODS'="" F J=1:1:$L(IBMODS,",") W !,?15,$P(IBMODS,",",J),?20,$P($G(IBMODS(1)),",",J)
"RTN","IBTOBI4",77,0)
 Q
"RTN","IBTOBI4",78,0)
 ;
"RTN","IBTOBI4",79,0)
DRG ; -- print drgs.
"RTN","IBTOBI4",80,0)
 I '$G(DGPM) Q
"RTN","IBTOBI4",81,0)
 Q:$P(IBETYP,"^",3)>1
"RTN","IBTOBI4",82,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",83,0)
DRG1 W !!,"  Associated Interim DRG Information "
"RTN","IBTOBI4",84,0)
 N IBX,IBDTE,IBDRG
"RTN","IBTOBI4",85,0)
 I $G(DGPM) D
"RTN","IBTOBI4",86,0)
 .I '$O(^IBT(356.93,"AMVD",DGPM,0)) W !?6,"Nothing on File" Q
"RTN","IBTOBI4",87,0)
 .S IBDTE=0 F  S IBDTE=$O(^IBT(356.93,"AMVD",DGPM,IBDTE)) Q:'IBDTE  S IBDRG=0 F  S IBDRG=$O(^IBT(356.93,"AMVD",DGPM,IBDTE,IBDRG)) Q:'IBDRG  D
"RTN","IBTOBI4",88,0)
 ..S IBX=$G(^IBT(356.93,IBDRG,0)) Q:IBX=""
"RTN","IBTOBI4",89,0)
 ..W !?5,$$DAT1^IBOUTL($P(IBX,"^",3)),?16,+IBX," - ",$$DRGTD^IBACSV(+IBX,$P(IBX,"^",3))
"RTN","IBTOBI4",90,0)
 ..W !?21," Estimate ALOS: "_$J($P(IBX,"^",4),4,1)
"RTN","IBTOBI4",91,0)
 ..W ?45," Days Remaining: "_$J($P(IBX,"^",5),2)
"RTN","IBTOBI4",92,0)
 Q
"RTN","IBTOBI4",93,0)
 ;
"RTN","IBTOBI4",94,0)
4 ; -- Visit region for prosthetics
"RTN","IBTOBI4",95,0)
 N IBDA,IBRMPR S IBDA=$P(IBTRND,"^",9) D PRODATA^IBTUTL1(IBDA)
"RTN","IBTOBI4",96,0)
 S IBD(2,1)="          Item: "_$P($$PIN^IBCSC5B(+IBDA),U,2)
"RTN","IBTOBI4",97,0)
 S IBD(3,1)="   Description: "_$G(IBRMPR(660,+IBDA,24,"E"))
"RTN","IBTOBI4",98,0)
 S IBD(4,1)="      Quantity: "_$J($G(IBRMPR(660,+IBDA,5,"E")),4)
"RTN","IBTOBI4",99,0)
 S IBD(5,1)="    Total Cost: $"_$G(IBRMPR(660,+IBDA,14,"E"))
"RTN","IBTOBI4",100,0)
 S IBD(6,1)="   Transaction: "_$G(IBRMPR(660,+IBDA,2,"E"))
"RTN","IBTOBI4",101,0)
 S IBD(7,1)="        Vendor: "_$G(IBRMPR(660,+IBDA,7,"E"))
"RTN","IBTOBI4",102,0)
 S IBD(8,1)="        Source: "_$G(IBRMPR(660,+IBDA,12,"E"))
"RTN","IBTOBI4",103,0)
 S IBD(9,1)=" Delivery Date: "_$G(IBRMPR(660,+IBDA,10,"E"))
"RTN","IBTOBI4",104,0)
 S IBD(10,1)="       Remarks: "_$G(IBRMPR(660,+IBDA,16,"E"))
"RTN","IBTOBI4",105,0)
 S IBD(11,1)=" Return Status: "_$G(IBRMPR(660,+IBDA,17,"E"))
"RTN","IBTOBI4",106,0)
 Q
"RTN","IBTRED01")
0^42^B22967896^B22949072
"RTN","IBTRED01",1,0)
IBTRED01 ;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY - CONT; 01-JUL-1993
"RTN","IBTRED01",2,0)
 ;;2.0;INTEGRATED BILLING;**389**;21-MAR-94;Build 6
"RTN","IBTRED01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRED01",4,0)
 ;
"RTN","IBTRED01",5,0)
% I '$G(IBTRN)!($G(IORVON)="") G ^IBTRED
"RTN","IBTRED01",6,0)
 D UR,REVIEW,SC
"RTN","IBTRED01",7,0)
 Q
"RTN","IBTRED01",8,0)
REVIEW ; -- List Reviews done
"RTN","IBTRED01",9,0)
 N OFFSET,START,IBTRV,IDT,IBTRVD,IBTRTP
"RTN","IBTRED01",10,0)
 S START=24,OFFSET=2,IBLCNT=0
"RTN","IBTRED01",11,0)
 D SET^IBCNSP(START,OFFSET," Hospital Reviews Entered ",IORVON,IORVOFF)
"RTN","IBTRED01",12,0)
 S IDT="" F  S IDT=$O(^IBT(356.1,"ATIDT",IBTRN,IDT)) Q:'IDT  S IBTRV="" F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IDT,IBTRV)) Q:'IBTRV  D
"RTN","IBTRED01",13,0)
 .S IBLCNT=$G(IBLCNT)+1
"RTN","IBTRED01",14,0)
 .S IBTRVD=$G(^IBT(356.1,IBTRV,0))
"RTN","IBTRED01",15,0)
 .S IBTRTP=$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^")
"RTN","IBTRED01",16,0)
 .;D SET^IBCNSP(START+IBLCNT,OFFSET,$J(IBLCNT,2)_".  "_$E(IBTRTP_"                        ",1,28)_"  on  "_$E($$DAT1^IBOUTL($P(IBTRVD,"^"),"2P")_"  ",1,8)_"  Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21)))
"RTN","IBTRED01",17,0)
 .S IBTEXT=$E(IBTRTP_"  Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21))_"                                ",1,50)
"RTN","IBTRED01",18,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET,$J(IBLCNT,2)_".  "_IBTEXT_"  on  "_$$DAT1^IBOUTL($P(IBTRVD,"^"),"2P"))
"RTN","IBTRED01",19,0)
 .Q
"RTN","IBTRED01",20,0)
 D COMM
"RTN","IBTRED01",21,0)
 Q
"RTN","IBTRED01",22,0)
COMM ; -- List Communication Entries
"RTN","IBTRED01",23,0)
 N OFFSET,START,IDT,IBTRCD,IBCNT
"RTN","IBTRED01",24,0)
 S START=26+$G(IBLCNT),OFFSET=2
"RTN","IBTRED01",25,0)
 D SET^IBCNSP(START,OFFSET," Insurance Reviews Entered ",IORVON,IORVOFF)
"RTN","IBTRED01",26,0)
 S IDT="" F  S IDT=$O(^IBT(356.2,"ATIDT",IBTRN,IDT)) Q:'IDT  S IBTRC="" F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IDT,IBTRC)) Q:'IBTRC  D
"RTN","IBTRED01",27,0)
 .S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1
"RTN","IBTRED01",28,0)
 .S IBTRCD=$G(^IBT(356.2,IBTRC,0))
"RTN","IBTRED01",29,0)
 .S IBTEXT=$E($$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4))_" Contact  "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))_"                                         ",1,50)
"RTN","IBTRED01",30,0)
 .D SET^IBCNSP(START+IBCNT,OFFSET,$J(IBCNT,2)_".  "_IBTEXT_"  on  "_$$DAT1^IBOUTL(+IBTRCD,"2P"))
"RTN","IBTRED01",31,0)
 .Q
"RTN","IBTRED01",32,0)
 Q
"RTN","IBTRED01",33,0)
 ;
"RTN","IBTRED01",34,0)
SC ; -- Show eligibility/sc conditions
"RTN","IBTRED01",35,0)
 N OFFSET,START,IDT,IBTRCD,IBCNT,I1,I2,I3
"RTN","IBTRED01",36,0)
 S START=28+$G(IBLCNT),OFFSET=2
"RTN","IBTRED01",37,0)
SC1 D SET^IBCNSP(START,OFFSET," Service Connected Conditions: ",IORVON,IORVOFF)
"RTN","IBTRED01",38,0)
 D ELIG^VADPT
"RTN","IBTRED01",39,0)
 S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1,I3=0
"RTN","IBTRED01",40,0)
 ;
"RTN","IBTRED01",41,0)
 D SET^IBCNSP(START+IBCNT,OFFSET,"Service Connected: "_$S('$G(VAEL(3)):"NO",1:$P(VAEL(3),"^",2)_"%"))
"RTN","IBTRED01",42,0)
 ;
"RTN","IBTRED01",43,0)
 F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  D
"RTN","IBTRED01",44,0)
 .S I1=^DPT(DFN,.372,I,0)
"RTN","IBTRED01",45,0)
 .Q:'$P(I1,"^",3)
"RTN","IBTRED01",46,0)
 .S I2=$G(^DIC(31,+I1,0))
"RTN","IBTRED01",47,0)
 .S:$P(I2,"^",4)'="" I2=$P(I2,"^",4)
"RTN","IBTRED01",48,0)
 .S I2=$P(I2,"^")
"RTN","IBTRED01",49,0)
 .S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1
"RTN","IBTRED01",50,0)
 .D SET^IBCNSP(START+IBCNT,OFFSET,$J(IBCNT-1,2)_".  "_$E(I2_"                                               ",1,45)_$J($P(I1,"^",2),3)_"%")
"RTN","IBTRED01",51,0)
 .S I3=I3+1
"RTN","IBTRED01",52,0)
 .Q
"RTN","IBTRED01",53,0)
 I 'I3 S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1 D SET^IBCNSP(START+IBCNT,OFFSET,$S('$O(^DPT(DFN,.372,0)):"NONE STATED",1:"NO SC DISABILITIES LISTED")) S I3=1
"RTN","IBTRED01",54,0)
SCQ Q
"RTN","IBTRED01",55,0)
 ;
"RTN","IBTRED01",56,0)
UR ; -- ur information region
"RTN","IBTRED01",57,0)
 N OFFSET,START
"RTN","IBTRED01",58,0)
 S START=7,OFFSET=51
"RTN","IBTRED01",59,0)
 D SET^IBCNSP(START,OFFSET," Review Information ",IORVON,IORVOFF)
"RTN","IBTRED01",60,0)
 D SET^IBCNSP(START+1,OFFSET,"  Insurance Claim: "_$$EXPAND^IBTRE(356,.24,$P(IBTRND,"^",24)))
"RTN","IBTRED01",61,0)
 D SET^IBCNSP(START+2,OFFSET,"   Follow-up Type: "_$$EXPAND^IBTRE(356,1.07,$P(IBTRND1,"^",7)))
"RTN","IBTRED01",62,0)
 D SET^IBCNSP(START+3,OFFSET,"    Random Sample: "_$$EXPAND^IBTRE(356,.25,$P(IBTRND,"^",25)))
"RTN","IBTRED01",63,0)
 D SET^IBCNSP(START+4,OFFSET,"Special Condition: "_$$EXPAND^IBTRE(356,.26,$P(IBTRND,"^",26)))
"RTN","IBTRED01",64,0)
 D SET^IBCNSP(START+5,OFFSET,"   Local Addition: "_$$EXPAND^IBTRE(356,.27,$P(IBTRND,"^",27)))
"RTN","IBTRED01",65,0)
 D SET^IBCNSP(START+6,OFFSET,"    Ins. Reviewer: "_$$EXPAND^IBTRE(356,1.06,$P(IBTRND1,"^",6)))
"RTN","IBTRED01",66,0)
 D SET^IBCNSP(START+7,OFFSET,"Hospital Reviewer: "_$$EXPAND^IBTRE(356,1.05,$P(IBTRND1,"^",5)))
"RTN","IBTRED01",67,0)
 Q
"RTN","IBTRED01",68,0)
 ;
"RTN","IBTRED01",69,0)
4 ; -- Visit region for prosthetics
"RTN","IBTRED01",70,0)
 N IBDA,IBRMPR S IBDA=$P(IBTRND,"^",9) D PRODATA^IBTUTL1(IBDA)
"RTN","IBTRED01",71,0)
 D SET^IBCNSP(START+2,OFFSET,"          Item: "_$P($$PIN^IBCSC5B(+IBDA),U,2))
"RTN","IBTRED01",72,0)
 D SET^IBCNSP(START+3,OFFSET,"   Description: "_$G(IBRMPR(660,+IBDA,24,"E")))
"RTN","IBTRED01",73,0)
 D SET^IBCNSP(START+4,OFFSET,"      Quantity: "_$J($G(IBRMPR(660,+IBDA,5,"E")),$L($G(IBRMPR(660,+IBDA,14,"E")))))
"RTN","IBTRED01",74,0)
 D SET^IBCNSP(START+5,OFFSET,"    Total Cost: $"_$G(IBRMPR(660,+IBDA,14,"E")))
"RTN","IBTRED01",75,0)
 D SET^IBCNSP(START+6,OFFSET,"   Transaction: "_$G(IBRMPR(660,+IBDA,2,"E")))
"RTN","IBTRED01",76,0)
 D SET^IBCNSP(START+7,OFFSET,"        Vendor: "_$G(IBRMPR(660,+IBDA,7,"E")))
"RTN","IBTRED01",77,0)
 D SET^IBCNSP(START+8,OFFSET,"        Source: "_$G(IBRMPR(660,+IBDA,12,"E")))
"RTN","IBTRED01",78,0)
 D SET^IBCNSP(START+9,OFFSET," Delivery Date: "_$G(IBRMPR(660,+IBDA,10,"E")))
"RTN","IBTRED01",79,0)
 D SET^IBCNSP(START+10,OFFSET,"       Remarks: "_$G(IBRMPR(660,+IBDA,16,"E")))
"RTN","IBTRED01",80,0)
 D SET^IBCNSP(START+11,OFFSET," Return Status: "_$G(IBRMPR(660,+IBDA,17,"E")))
"RTN","IBTRED01",81,0)
 Q
"RTN","IBTRKR5")
0^43^B32356439^B32493921
"RTN","IBTRKR5",1,0)
IBTRKR5 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK PROSTHETICS ;13-JAN-94
"RTN","IBTRKR5",2,0)
 ;;2.0;INTEGRATED BILLING;**13,260,312,339,389**;21-MAR-94;Build 6
"RTN","IBTRKR5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR5",4,0)
 ;
"RTN","IBTRKR5",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR5",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR5",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-30)-.1
"RTN","IBTRKR5",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-3)+.9
"RTN","IBTRKR5",9,0)
 D EN1
"RTN","IBTRKR5",10,0)
 Q
"RTN","IBTRKR5",11,0)
 ;
"RTN","IBTRKR5",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR5",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
"RTN","IBTRKR5",15,0)
 S IBTALK=1
"RTN","IBTRKR5",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prosthetics is currently turned off." G ENQ
"RTN","IBTRKR5",17,0)
 W !!!,"Select the Date Range of Prosthetics to Add to Claims Tracking.",!
"RTN","IBTRKR5",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR5",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR5",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR5",21,0)
 ;
"RTN","IBTRKR5",22,0)
 ; -- check selected dates                                 ;IB*2.0*312
"RTN","IBTRKR5",23,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Dt  ;CCR-930
"RTN","IBTRKR5",24,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR5",25,0)
  .W !!,"The Begin OR End Date CANNOT be on or after the PFSS Effective date"
"RTN","IBTRKR5",26,0)
  .W ": ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR5",27,0)
 ;
"RTN","IBTRKR5",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR5",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",31,0)
 ; -- end date into future
"RTN","IBTRKR5",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR5",33,0)
 ;
"RTN","IBTRKR5",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR5",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR5",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR5",ZTSAVE("IB*")="",ZTDESC="IB - Add Prosthetics to Claims Tracking"
"RTN","IBTRKR5",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR5",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR5",39,0)
 D HOME^%ZIS
"RTN","IBTRKR5",40,0)
 Q
"RTN","IBTRKR5",41,0)
 ;
"RTN","IBTRKR5",42,0)
EN1 ; -- add prostethics to claims tracking file
"RTN","IBTRKR5",43,0)
 N I,J,X,Y,IBTRKR,IBDT,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2,IBDTS
"RTN","IBTRKR5",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",45,0)
 ;
"RTN","IBTRKR5",46,0)
 ; -- check parameters
"RTN","IBTRKR5",47,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",48,0)
 G:'$P(IBTRKR,"^",5) EN1Q ; quit if prothetics tracking off
"RTN","IBTRKR5",49,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR5",50,0)
 ;
"RTN","IBTRKR5",51,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR5",52,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR5",53,0)
 ;
"RTN","IBTRKR5",54,0)
 ;S IBPRTYP=$O(^IBE(356.6,"AC",3,0)) ; this is the event type pointer for prosthetics
"RTN","IBTRKR5",55,0)
 ;
"RTN","IBTRKR5",56,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR5",57,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR5",58,0)
 S (IBDTS,IBDT)=IBTSBDT-.0001
"RTN","IBTRKR5",59,0)
 ;
"RTN","IBTRKR5",60,0)
 ; loop twice, once for shipmnet date (new search), and once for
"RTN","IBTRKR5",61,0)
 ; delivery date (old search) for backward compatibility.
"RTN","IBTRKR5",62,0)
 F  S IBDT=$O(^RMPR(660,"AF",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",63,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",64,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",65,0)
    .S IBDA=0 F  S IBDA=$O(^RMPR(660,"AF",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",66,0)
 ;
"RTN","IBTRKR5",67,0)
 ; reset date and do old check
"RTN","IBTRKR5",68,0)
 S IBDT=IBDTS
"RTN","IBTRKR5",69,0)
 F  S IBDT=$O(^RMPR(660,"CT",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",70,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",71,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",72,0)
    .S IBDA="" F  S IBDA=$O(^RMPR(660,"CT",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",73,0)
 ;
"RTN","IBTRKR5",74,0)
 I $G(IBTALK) D BULL ;^IBTRKR51
"RTN","IBTRKR5",75,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR5",76,0)
 Q
"RTN","IBTRKR5",77,0)
 ;
"RTN","IBTRKR5",78,0)
PRCHK ; -- check and add item
"RTN","IBTRKR5",79,0)
 N IBE,IBP,IBDX,IBRMARK,IBARR,IBT
"RTN","IBTRKR5",80,0)
 S IBCNT=IBCNT+1,IBRMARK=""
"RTN","IBTRKR5",81,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR5",82,0)
 ;
"RTN","IBTRKR5",83,0)
 S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""
"RTN","IBTRKR5",84,0)
 S DFN=$P(IBDATA,"^",2) Q:'DFN
"RTN","IBTRKR5",85,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR)
"RTN","IBTRKR5",86,0)
 ;
"RTN","IBTRKR5",87,0)
 ; -- checks copied from rmprbil v2.0 /feb 2, 1994
"RTN","IBTRKR5",88,0)
 Q:'$D(^RMPR(660,+IBDA,"AM"))
"RTN","IBTRKR5",89,0)
 Q:$P(^RMPR(660,+IBDA,0),U,9)=""!($P(^(0),U,12)="")!($P(^(0),U,14)="V")!($P(^(0),U,2)="")!($P(^(0),U,15)="*")
"RTN","IBTRKR5",90,0)
 ;Q:($P(^RMPR(660,+IBDA,"AM"),U,3)=2)!($P(^("AM"),U,3)=3)
"RTN","IBTRKR5",91,0)
 ;
"RTN","IBTRKR5",92,0)
 ;
"RTN","IBTRKR5",93,0)
 I $O(^IBT(356,"APRO",IBDA,0)) G PRCHKQ ; already in claims tracking
"RTN","IBTRKR5",94,0)
 ;
"RTN","IBTRKR5",95,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR5",96,0)
 I $P(IBTRKR,"^",5)=1,'$$INSURED^IBCNS1(DFN,IBDT) G PRCHKQ ; patient not insure
"RTN","IBTRKR5",97,0)
 ;
"RTN","IBTRKR5",98,0)
 ; -- if clasifications required, check exemptions
"RTN","IBTRKR5",99,0)
 I '$D(IBARR) G CLQ
"RTN","IBTRKR5",100,0)
 S IBE=0 F IBP=1:1:4 S IBDX(IBP)=$G(^RMPR(660,+IBDA,"BA"_IBP)) I IBDX(IBP) S IBE=1
"RTN","IBTRKR5",101,0)
 I 'IBE S IBRMARK="NEEDS SC DETERMINATION" G CLQ ; no ICD node in RMPR, use old method of determining status
"RTN","IBTRKR5",102,0)
 S IBE=0 F  S IBE=$O(IBARR(IBE)) Q:'IBE!($L($G(IBRMARK)))  F IBP=1:1:4 Q:$L($G(IBRMARK))  I IBDX(IBP) S IBRMARK=$S($P(IBDX(IBP),"^",IBE+1):$P($T(CLTXT+IBE),";",3),$P(IBDX(IBP),"^",IBE+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR5",103,0)
 ;
"RTN","IBTRKR5",104,0)
 ;
"RTN","IBTRKR5",105,0)
CLQ ; -- ok to add to tracking module
"RTN","IBTRKR5",106,0)
 D PRO^IBTUTL1(DFN,IBDT,IBDA,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR5",107,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR5",108,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR5",109,0)
 K VAEL,VA,IBDATA,DFN,X,Y
"RTN","IBTRKR5",110,0)
PRCHKQ Q
"RTN","IBTRKR5",111,0)
 ;
"RTN","IBTRKR5",112,0)
BULL ; -- send bulletin
"RTN","IBTRKR5",113,0)
 ;
"RTN","IBTRKR5",114,0)
 S XMSUB="Prosthetic Items added to Claims Tracking Complete"
"RTN","IBTRKR5",115,0)
 S IBT(1)="The process to automatically add Prosthetic Items has successfully completed."
"RTN","IBTRKR5",116,0)
 S IBT(1.1)=""
"RTN","IBTRKR5",117,0)
 S IBT(2)="                      Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",118,0)
 S IBT(3)="                        End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR5",119,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR5",120,0)
 S IBT(4)=""
"RTN","IBTRKR5",121,0)
 S IBT(5)=" Total Prosthetics Items checked: "_$G(IBCNT)
"RTN","IBTRKR5",122,0)
 S IBT(6)="Total NSC Prosthetic Items Added: "_$G(IBCNT1)
"RTN","IBTRKR5",123,0)
 S IBT(7)=" Total SC Prosthetic Items Added: "_$G(IBCNT2)
"RTN","IBTRKR5",124,0)
 S IBT(8)=""
"RTN","IBTRKR5",125,0)
 S IBT(9)="*The items added as SC require determination and editing to be billed"
"RTN","IBTRKR5",126,0)
 D SEND^IBTRKR31
"RTN","IBTRKR5",127,0)
BULLQ Q
"RTN","IBTRKR5",128,0)
 ;
"RTN","IBTRKR5",129,0)
CLTXT ; classification text for reason not billable
"RTN","IBTRKR5",130,0)
 ;;AGENT ORANGE
"RTN","IBTRKR5",131,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR5",132,0)
 ;;SC TREATMENT
"RTN","IBTRKR5",133,0)
 ;;SOUTHWEST ASIA
"RTN","IBTRKR5",134,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR5",135,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR5",136,0)
 ;;COMBAT VETERAN
"VER")
8.0^22.0
"^DD",351.61,351.61,4.04,0)
*PROSTHETIC ITEM^FO^^4;4^K:$L(X)>20!($L(X)<1) X
"^DD",351.61,351.61,4.04,2)
S Y(0)=Y X ^DD(351.61,4.04,2,9.3) S D0=$P(Y(101),U,1) S:'$D(^PRC(441,+D0,0)) D0=-1 S Y(301)=$S($D(^PRC(441,D0,0)):^(0),1:"") S X=$P(Y(301),U,2) S D0=I(0,0) S Y=X
"^DD",351.61,351.61,4.04,2,9.2)
S I(0,0)=$S($D(D0):D0,1:""),D0=Y(0) S:'$D(^RMPR(661,+D0,0)) D0=-1 S I(100,0)=$S($D(D0):D0,1:""),Y(101)=$S($D(^RMPR(661,D0,0)):^(0),1:""),Y(102)=$G(X)
"^DD",351.61,351.61,4.04,2,9.3)
X ^DD(351.61,4.04,2,9.2) S D0=$P(Y(101),U,1) S:'$D(^PRC(441,+D0,0)) D0=-1 S I(200,0)=$S($D(D0):D0,1:""),Y(201)=$G(X)
"^DD",351.61,351.61,4.04,2.1)
PROSTHETIC ITEM:NAME:NAME:SHORT DESCRIPTION
"^DD",351.61,351.61,4.04,3)
This is a pointer to the prosthetic device for this transaction
"^DD",351.61,351.61,4.04,21,0)
^.001^2^2^3080307^^^^
"^DD",351.61,351.61,4.04,21,1,0)
This is a pointer to the prosthetic item file for the prosthetic device
"^DD",351.61,351.61,4.04,21,2,0)
issued to the patient.
"^DD",351.61,351.61,4.04,23,0)
^.001^2^2^3080307^^^
"^DD",351.61,351.61,4.04,23,1,0)
This field was marked for deletion 04/01/08.  
"^DD",351.61,351.61,4.04,23,2,0)
Field was a pointer to PROS ITEM MASTER (#661) which is out of date.
"^DD",351.61,351.61,4.04,"DT")
3080307
"^DD",351.67,351.67,.01,0)
ITEM^R*P661.1'^RMPR(661.1,^0;1^S DIC("S")="I +$P(^(0),U,5)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",351.67,351.67,.01,1,0)
^.1
"^DD",351.67,351.67,.01,1,1,0)
351.67^B
"^DD",351.67,351.67,.01,1,1,1)
S ^IBAT(351.67,"B",$E(X,1,30),DA)=""
"^DD",351.67,351.67,.01,1,1,2)
K ^IBAT(351.67,"B",$E(X,1,30),DA)
"^DD",351.67,351.67,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",351.67,351.67,.01,12)
Active Codes Only!
"^DD",351.67,351.67,.01,12.1)
S DIC("S")="I +$P(^(0),U,5)"
"^DD",351.67,351.67,.01,21,0)
^.001^5^5^3080307^^^^
"^DD",351.67,351.67,.01,21,1,0)
This is a direct pointer to file 661.1 for the prosthetic items to be
"^DD",351.67,351.67,.01,21,2,0)
automatically billed for inpatients.  Most prosthetic devices for
"^DD",351.67,351.67,.01,21,3,0)
inpatients are covered by the price of the DRG for the inpatient stay.
"^DD",351.67,351.67,.01,21,4,0)
However, some are not.  Sites may identify specific items that would not
"^DD",351.67,351.67,.01,21,5,0)
be covered by the price of the DRG.
"^DD",351.67,351.67,.01,"DT")
3080307
"^DD",362.5,362.5,.03,0)
*ITEM^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",362.5,362.5,.03,3)
Enter the prosthetic item to be added to this bill.
"^DD",362.5,362.5,.03,21,0)
^.001^1^1^3080307^^^^
"^DD",362.5,362.5,.03,21,1,0)
The prosthetic item added to the bill.
"^DD",362.5,362.5,.03,23,0)
^.001^5^5^3080307^^^^
"^DD",362.5,362.5,.03,23,1,0)
This should be automatically set by the system if a prosthetic record
"^DD",362.5,362.5,.03,23,2,0)
is chosen.
"^DD",362.5,362.5,.03,23,3,0)
 
"^DD",362.5,362.5,.03,23,4,0)
This field was marked for deletion 04/01/08.  
"^DD",362.5,362.5,.03,23,5,0)
Field was a pointer to PROS ITEM MASTER (#661) which is out of date.
"^DD",362.5,362.5,.03,"DT")
3080307
"^DD",362.5,362.5,.05,0)
ITEM NAME^RF^^0;5^K:$L(X)>60!($L(X)<3) X
"^DD",362.5,362.5,.05,3)
Answer must be 3-60 characters in length.
"^DD",362.5,362.5,.05,21,0)
^^1^1^3080212^
"^DD",362.5,362.5,.05,21,1,0)
This is the name or short description of the Prosthetics Item.
"^DD",362.5,362.5,.05,"DT")
3080212
"BLD",6953,6)
^363
**END**
**END**
