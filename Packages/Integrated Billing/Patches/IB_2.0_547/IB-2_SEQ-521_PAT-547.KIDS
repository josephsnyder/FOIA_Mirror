Released IB*2*547 SEQ #521
Extracted from mail message
**KIDS**:IB*2.0*547^

**INSTALL NAME**
IB*2.0*547
"BLD",9780,0)
IB*2.0*547^INTEGRATED BILLING^0^3160609^y
"BLD",9780,4,0)
^9.64PA^368^10
"BLD",9780,4,36,0)
36
"BLD",9780,4,36,2,0)
^9.641^36.016^3
"BLD",9780,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",9780,4,36,2,36,1,0)
^9.6411^7.01^3
"BLD",9780,4,36,2,36,1,3.02,0)
EDI ID NUMBER - PROF
"BLD",9780,4,36,2,36,1,3.04,0)
EDI ID NUMBER - INST
"BLD",9780,4,36,2,36,1,7.01,0)
EDI - UMO (278) ID
"BLD",9780,4,36,2,36.015,0)
ALTERNATE INST PAYER ID TYPE  (sub-file)
"BLD",9780,4,36,2,36.015,1,0)
^9.6411^^
"BLD",9780,4,36,2,36.016,0)
ALTERNATE PROF PAYER ID TYPE  (sub-file)
"BLD",9780,4,36,2,36.016,1,0)
^9.6411^^
"BLD",9780,4,36,222)
y^n^p^^^^n^^n
"BLD",9780,4,36,224)

"BLD",9780,4,350.9,0)
350.9
"BLD",9780,4,350.9,2,0)
^9.641^350.9^4
"BLD",9780,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",9780,4,350.9,2,350.9,1,0)
^9.6411^52.02^2
"BLD",9780,4,350.9,2,350.9,1,52.01,0)
PURGE DAYS 277 RFAI
"BLD",9780,4,350.9,2,350.9,1,52.02,0)
WORKLIST PURGE DAYS 277 RFAI
"BLD",9780,4,350.9,2,350.9399,0)
PRINTED CLAIMS RC EXCLUSIONS  (sub-file)
"BLD",9780,4,350.9,2,350.9399,1,0)
^9.6411^^
"BLD",9780,4,350.9,2,350.981,0)
PRIMARY PAYER ID TYPES MED  (sub-file)
"BLD",9780,4,350.9,2,350.981,1,0)
^9.6411^^
"BLD",9780,4,350.9,2,350.982,0)
PRIMARY PAYER ID TYPES COM  (sub-file)
"BLD",9780,4,350.9,2,350.982,1,0)
^9.6411^^
"BLD",9780,4,350.9,222)
y^n^p^^^^n^^n
"BLD",9780,4,350.9,224)

"BLD",9780,4,355.98,0)
355.98
"BLD",9780,4,355.98,222)
y^y^f^^^^n
"BLD",9780,4,362.3,0)
362.3
"BLD",9780,4,362.3,2,0)
^9.641^362.3^1
"BLD",9780,4,362.3,2,362.3,0)
IB BILL/CLAIMS DIAGNOSIS  (File-top level)
"BLD",9780,4,362.3,2,362.3,1,0)
^9.6411^.04^1
"BLD",9780,4,362.3,2,362.3,1,.04,0)
POA INDICATOR
"BLD",9780,4,362.3,222)
y^y^p^^^^n^^n
"BLD",9780,4,362.3,224)

"BLD",9780,4,364.6,0)
364.6
"BLD",9780,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",9780,4,364.6,224)
I $$INCLUDE^IBY547PR(6,Y)
"BLD",9780,4,364.7,0)
364.7
"BLD",9780,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",9780,4,364.7,224)
I $$INCLUDE^IBY547PR(7,Y)
"BLD",9780,4,368,0)
368
"BLD",9780,4,368,222)
y^y^f^^^^n
"BLD",9780,4,368.001,0)
368.001
"BLD",9780,4,368.001,222)
y^y^f^^n^^y^o^n
"BLD",9780,4,368.002,0)
368.002
"BLD",9780,4,368.002,222)
y^y^f^^n^^y^o^n
"BLD",9780,4,399,0)
399
"BLD",9780,4,399,2,0)
^9.641^399^1
"BLD",9780,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",9780,4,399,2,399,1,0)
^9.6411^.19^10
"BLD",9780,4,399,2,399,1,.19,0)
FORM TYPE
"BLD",9780,4,399,2,399,1,101,0)
PRIMARY INSURANCE CARRIER
"BLD",9780,4,399,2,399,1,102,0)
SECONDARY INSURANCE CARRIER
"BLD",9780,4,399,2,399,1,103,0)
TERTIARY INSURANCE CARRIER
"BLD",9780,4,399,2,399,1,140,0)
PRIMARY PAYER-ALT ID TYPE
"BLD",9780,4,399,2,399,1,141,0)
PRIMARY PAYER-ALT ID
"BLD",9780,4,399,2,399,1,142,0)
SECONDARY PAYER-ALT ID TYPE
"BLD",9780,4,399,2,399,1,143,0)
SECONDARY PAYER-ALT ID
"BLD",9780,4,399,2,399,1,144,0)
TERTIARY PAYER-ALT ID TYPE
"BLD",9780,4,399,2,399,1,145,0)
TERTIARY PAYER-ALT ID
"BLD",9780,4,399,222)
y^y^p^^^^n^^n
"BLD",9780,4,399,224)

"BLD",9780,4,"APDD",36,36)

"BLD",9780,4,"APDD",36,36,3.02)

"BLD",9780,4,"APDD",36,36,3.04)

"BLD",9780,4,"APDD",36,36,7.01)

"BLD",9780,4,"APDD",36,36.015)

"BLD",9780,4,"APDD",36,36.016)

"BLD",9780,4,"APDD",350.9,350.9)

"BLD",9780,4,"APDD",350.9,350.9,52.01)

"BLD",9780,4,"APDD",350.9,350.9,52.02)

"BLD",9780,4,"APDD",350.9,350.9399)

"BLD",9780,4,"APDD",350.9,350.981)

"BLD",9780,4,"APDD",350.9,350.982)

"BLD",9780,4,"APDD",362.3,362.3)

"BLD",9780,4,"APDD",362.3,362.3,.04)

"BLD",9780,4,"APDD",399,399)

"BLD",9780,4,"APDD",399,399,.19)

"BLD",9780,4,"APDD",399,399,101)

"BLD",9780,4,"APDD",399,399,102)

"BLD",9780,4,"APDD",399,399,103)

"BLD",9780,4,"APDD",399,399,140)

"BLD",9780,4,"APDD",399,399,141)

"BLD",9780,4,"APDD",399,399,142)

"BLD",9780,4,"APDD",399,399,143)

"BLD",9780,4,"APDD",399,399,144)

"BLD",9780,4,"APDD",399,399,145)

"BLD",9780,4,"B",36,36)

"BLD",9780,4,"B",350.9,350.9)

"BLD",9780,4,"B",355.98,355.98)

"BLD",9780,4,"B",362.3,362.3)

"BLD",9780,4,"B",364.6,364.6)

"BLD",9780,4,"B",364.7,364.7)

"BLD",9780,4,"B",368,368)

"BLD",9780,4,"B",368.001,368.001)

"BLD",9780,4,"B",368.002,368.002)

"BLD",9780,4,"B",399,399)

"BLD",9780,6.3)
119
"BLD",9780,"ABPKG")
n
"BLD",9780,"INI")
IBY547PR
"BLD",9780,"INIT")
IBY547PO
"BLD",9780,"KRN",0)
^9.67PA^779.2^20
"BLD",9780,"KRN",.4,0)
.4
"BLD",9780,"KRN",.401,0)
.401
"BLD",9780,"KRN",.402,0)
.402
"BLD",9780,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",9780,"KRN",.402,"NM",1,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",9780,"KRN",.402,"NM",2,0)
IB SCREEN102    FILE #399^399
"BLD",9780,"KRN",.402,"NM",3,0)
IB SCREEN10H    FILE #399^399
"BLD",9780,"KRN",.402,"NM","B","IB SCREEN102    FILE #399",2)

"BLD",9780,"KRN",.402,"NM","B","IB SCREEN10H    FILE #399",3)

"BLD",9780,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",1)

"BLD",9780,"KRN",.403,0)
.403
"BLD",9780,"KRN",.5,0)
.5
"BLD",9780,"KRN",.84,0)
.84
"BLD",9780,"KRN",3.6,0)
3.6
"BLD",9780,"KRN",3.8,0)
3.8
"BLD",9780,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",9780,"KRN",3.8,"NM",1,0)
IBRFI 277 MESSAGE^^0
"BLD",9780,"KRN",3.8,"NM","B","IBRFI 277 MESSAGE",1)

"BLD",9780,"KRN",9.2,0)
9.2
"BLD",9780,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",9780,"KRN",9.8,0)
9.8
"BLD",9780,"KRN",9.8,"NM",0)
^9.68A^64^61
"BLD",9780,"KRN",9.8,"NM",1,0)
IBCEPTC^^0^B92340697
"BLD",9780,"KRN",9.8,"NM",2,0)
IBY547PO^^0^B11193414
"BLD",9780,"KRN",9.8,"NM",3,0)
IBCEPTC0^^0^B40575166
"BLD",9780,"KRN",9.8,"NM",4,0)
IBCEPTC1^^0^B19060601
"BLD",9780,"KRN",9.8,"NM",5,0)
IBCEPTC2^^0^B52666304
"BLD",9780,"KRN",9.8,"NM",6,0)
IBCEPTC3^^0^B64803891
"BLD",9780,"KRN",9.8,"NM",7,0)
IBCEMCA^^0^B50686321
"BLD",9780,"KRN",9.8,"NM",8,0)
IBCBB9^^0^B7577761
"BLD",9780,"KRN",9.8,"NM",9,0)
IBCBB^^0^B79149601
"BLD",9780,"KRN",9.8,"NM",10,0)
IBCSC4F^^0^B36628771
"BLD",9780,"KRN",9.8,"NM",11,0)
IBCEF2^^0^B78152141
"BLD",9780,"KRN",9.8,"NM",12,0)
IBY547PR^^0^B46231321
"BLD",9780,"KRN",9.8,"NM",13,0)
IBCECSA5^^0^B92877287
"BLD",9780,"KRN",9.8,"NM",14,0)
IBCECSA6^^0^B177663056
"BLD",9780,"KRN",9.8,"NM",15,0)
IBJTTC^^0^B92801270
"BLD",9780,"KRN",9.8,"NM",16,0)
IBJPS^^0^B6490988
"BLD",9780,"KRN",9.8,"NM",17,0)
IBJPS2^^0^B54853458
"BLD",9780,"KRN",9.8,"NM",18,0)
IBJPS5^^0^B7748441
"BLD",9780,"KRN",9.8,"NM",20,0)
IBCC^^0^B65758578
"BLD",9780,"KRN",9.8,"NM",21,0)
IBCEM^^0^B60823035
"BLD",9780,"KRN",9.8,"NM",22,0)
IBCEMU2^^0^B52413436
"BLD",9780,"KRN",9.8,"NM",23,0)
IBJPS6^^0^B107465430
"BLD",9780,"KRN",9.8,"NM",24,0)
IBCNSC^^0^B36416057
"BLD",9780,"KRN",9.8,"NM",25,0)
IBCE837^^0^B86551026
"BLD",9780,"KRN",9.8,"NM",26,0)
IBCEMSRP^^0^B11656625
"BLD",9780,"KRN",9.8,"NM",27,0)
IBCEMSR6^^0^B40067499
"BLD",9780,"KRN",9.8,"NM",28,0)
IBCEMSR7^^0^B12041405
"BLD",9780,"KRN",9.8,"NM",29,0)
IBRFIWL^^0^B194634880
"BLD",9780,"KRN",9.8,"NM",30,0)
IBRFIWL1^^0^B148319097
"BLD",9780,"KRN",9.8,"NM",31,0)
IBRFIWLA^^0^B115196222
"BLD",9780,"KRN",9.8,"NM",32,0)
IBCNSC01^^0^B73912803
"BLD",9780,"KRN",9.8,"NM",33,0)
IBCNSC02^^0^B56719125
"BLD",9780,"KRN",9.8,"NM",34,0)
IBCNSC1^^0^B84078544
"BLD",9780,"KRN",9.8,"NM",35,0)
IBCNSC0^^0^B13502229
"BLD",9780,"KRN",9.8,"NM",36,0)
IBCSC10H^^0^B51814065
"BLD",9780,"KRN",9.8,"NM",37,0)
IBCSC102^^0^B47787919
"BLD",9780,"KRN",9.8,"NM",38,0)
IBCSCE^^0^B10358004
"BLD",9780,"KRN",9.8,"NM",39,0)
IBCSCP^^0^B12277958
"BLD",9780,"KRN",9.8,"NM",40,0)
IBCU^^0^B86259413
"BLD",9780,"KRN",9.8,"NM",41,0)
IBCCC1^^0^B11074104
"BLD",9780,"KRN",9.8,"NM",42,0)
IBCEF1^^0^B67394178
"BLD",9780,"KRN",9.8,"NM",43,0)
IBCSC10^^0^B8325466
"BLD",9780,"KRN",9.8,"NM",44,0)
IBCCCB^^0^B69153739
"BLD",9780,"KRN",9.8,"NM",45,0)
IBCEU1^^0^B91847621
"BLD",9780,"KRN",9.8,"NM",46,0)
IBTUBO^^0^B47033794
"BLD",9780,"KRN",9.8,"NM",47,0)
IBTUBO1^^0^B65321637
"BLD",9780,"KRN",9.8,"NM",48,0)
IBTUBO2^^0^B54785777
"BLD",9780,"KRN",9.8,"NM",49,0)
IBTUBO3^^0^B42226483
"BLD",9780,"KRN",9.8,"NM",50,0)
IBTUBUL^^0^B60799593
"BLD",9780,"KRN",9.8,"NM",51,0)
IBCEU6^^0^B13711797
"BLD",9780,"KRN",9.8,"NM",52,0)
IBCAPP2^^0^B52487921
"BLD",9780,"KRN",9.8,"NM",53,0)
IBRFIN^^0^B7093032
"BLD",9780,"KRN",9.8,"NM",55,0)
IBCECOB^^0^B35210416
"BLD",9780,"KRN",9.8,"NM",56,0)
IBCECOB1^^0^B144950163
"BLD",9780,"KRN",9.8,"NM",57,0)
IBRFIHL1^^0^B29928361
"BLD",9780,"KRN",9.8,"NM",58,0)
IBRFIHL2^^0^B153552095
"BLD",9780,"KRN",9.8,"NM",59,0)
IBRFIHLI^^0^B4300194
"BLD",9780,"KRN",9.8,"NM",60,0)
IBRFIHLU^^0^B7107625
"BLD",9780,"KRN",9.8,"NM",62,0)
IBTRKR^^0^B38263485
"BLD",9780,"KRN",9.8,"NM",63,0)
IBCF23^^0^B49750471
"BLD",9780,"KRN",9.8,"NM",64,0)
IBCF23A^^0^B37854610
"BLD",9780,"KRN",9.8,"NM","B","IBCAPP2",52)

"BLD",9780,"KRN",9.8,"NM","B","IBCBB",9)

"BLD",9780,"KRN",9.8,"NM","B","IBCBB9",8)

"BLD",9780,"KRN",9.8,"NM","B","IBCC",20)

"BLD",9780,"KRN",9.8,"NM","B","IBCCC1",41)

"BLD",9780,"KRN",9.8,"NM","B","IBCCCB",44)

"BLD",9780,"KRN",9.8,"NM","B","IBCE837",25)

"BLD",9780,"KRN",9.8,"NM","B","IBCECOB",55)

"BLD",9780,"KRN",9.8,"NM","B","IBCECOB1",56)

"BLD",9780,"KRN",9.8,"NM","B","IBCECSA5",13)

"BLD",9780,"KRN",9.8,"NM","B","IBCECSA6",14)

"BLD",9780,"KRN",9.8,"NM","B","IBCEF1",42)

"BLD",9780,"KRN",9.8,"NM","B","IBCEF2",11)

"BLD",9780,"KRN",9.8,"NM","B","IBCEM",21)

"BLD",9780,"KRN",9.8,"NM","B","IBCEMCA",7)

"BLD",9780,"KRN",9.8,"NM","B","IBCEMSR6",27)

"BLD",9780,"KRN",9.8,"NM","B","IBCEMSR7",28)

"BLD",9780,"KRN",9.8,"NM","B","IBCEMSRP",26)

"BLD",9780,"KRN",9.8,"NM","B","IBCEMU2",22)

"BLD",9780,"KRN",9.8,"NM","B","IBCEPTC",1)

"BLD",9780,"KRN",9.8,"NM","B","IBCEPTC0",3)

"BLD",9780,"KRN",9.8,"NM","B","IBCEPTC1",4)

"BLD",9780,"KRN",9.8,"NM","B","IBCEPTC2",5)

"BLD",9780,"KRN",9.8,"NM","B","IBCEPTC3",6)

"BLD",9780,"KRN",9.8,"NM","B","IBCEU1",45)

"BLD",9780,"KRN",9.8,"NM","B","IBCEU6",51)

"BLD",9780,"KRN",9.8,"NM","B","IBCF23",63)

"BLD",9780,"KRN",9.8,"NM","B","IBCF23A",64)

"BLD",9780,"KRN",9.8,"NM","B","IBCNSC",24)

"BLD",9780,"KRN",9.8,"NM","B","IBCNSC0",35)

"BLD",9780,"KRN",9.8,"NM","B","IBCNSC01",32)

"BLD",9780,"KRN",9.8,"NM","B","IBCNSC02",33)

"BLD",9780,"KRN",9.8,"NM","B","IBCNSC1",34)

"BLD",9780,"KRN",9.8,"NM","B","IBCSC10",43)

"BLD",9780,"KRN",9.8,"NM","B","IBCSC102",37)

"BLD",9780,"KRN",9.8,"NM","B","IBCSC10H",36)

"BLD",9780,"KRN",9.8,"NM","B","IBCSC4F",10)

"BLD",9780,"KRN",9.8,"NM","B","IBCSCE",38)

"BLD",9780,"KRN",9.8,"NM","B","IBCSCP",39)

"BLD",9780,"KRN",9.8,"NM","B","IBCU",40)

"BLD",9780,"KRN",9.8,"NM","B","IBJPS",16)

"BLD",9780,"KRN",9.8,"NM","B","IBJPS2",17)

"BLD",9780,"KRN",9.8,"NM","B","IBJPS5",18)

"BLD",9780,"KRN",9.8,"NM","B","IBJPS6",23)

"BLD",9780,"KRN",9.8,"NM","B","IBJTTC",15)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIHL1",57)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIHL2",58)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIHLI",59)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIHLU",60)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIN",53)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIWL",29)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIWL1",30)

"BLD",9780,"KRN",9.8,"NM","B","IBRFIWLA",31)

"BLD",9780,"KRN",9.8,"NM","B","IBTRKR",62)

"BLD",9780,"KRN",9.8,"NM","B","IBTUBO",46)

"BLD",9780,"KRN",9.8,"NM","B","IBTUBO1",47)

"BLD",9780,"KRN",9.8,"NM","B","IBTUBO2",48)

"BLD",9780,"KRN",9.8,"NM","B","IBTUBO3",49)

"BLD",9780,"KRN",9.8,"NM","B","IBTUBUL",50)

"BLD",9780,"KRN",9.8,"NM","B","IBY547PO",2)

"BLD",9780,"KRN",9.8,"NM","B","IBY547PR",12)

"BLD",9780,"KRN",19,0)
19
"BLD",9780,"KRN",19,"NM",0)
^9.68A^5^4
"BLD",9780,"KRN",19,"NM",2,0)
IBRFI 277 WORKLIST^^0
"BLD",9780,"KRN",19,"NM",3,0)
IBCE 837 EDI MENU^^2
"BLD",9780,"KRN",19,"NM",4,0)
IB PRINTED CLAIMS REPORT^^0
"BLD",9780,"KRN",19,"NM",5,0)
IB OUTPUT MANAGEMENT REPORTS^^2
"BLD",9780,"KRN",19,"NM","B","IB OUTPUT MANAGEMENT REPORTS",5)

"BLD",9780,"KRN",19,"NM","B","IB PRINTED CLAIMS REPORT",4)

"BLD",9780,"KRN",19,"NM","B","IBCE 837 EDI MENU",3)

"BLD",9780,"KRN",19,"NM","B","IBRFI 277 WORKLIST",2)

"BLD",9780,"KRN",19.1,0)
19.1
"BLD",9780,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9780,"KRN",101,0)
101
"BLD",9780,"KRN",101,"NM",0)
^9.68A^31^29
"BLD",9780,"KRN",101,"NM",1,0)
IBCE VIEW LOC PRINT MENU^^0
"BLD",9780,"KRN",101,"NM",2,0)
IBJP IB REVENUE CODES MENU^^0
"BLD",9780,"KRN",101,"NM",3,0)
IBJP IB REVENUE CODES ADD^^0
"BLD",9780,"KRN",101,"NM",4,0)
IBJP IB REVENUE CODES DEL^^0
"BLD",9780,"KRN",101,"NM",5,0)
IBJP IB REVENUE CODES EXIT^^0
"BLD",9780,"KRN",101,"NM",6,0)
IBJP ADMIN CONTRACTOR COM MENU^^0
"BLD",9780,"KRN",101,"NM",7,0)
IBJP ADMIN CONTRACTOR COM ADD TYPE^^0
"BLD",9780,"KRN",101,"NM",8,0)
IBJP ADMIN CONTRACTOR COM DEL TYPE^^0
"BLD",9780,"KRN",101,"NM",9,0)
IBJP ADMIN CONTRACTOR MED MENU^^0
"BLD",9780,"KRN",101,"NM",10,0)
IBJP ADMIN CONTRACTOR MED ADD TYPE^^0
"BLD",9780,"KRN",101,"NM",11,0)
IBJP ADMIN CONTRACTOR MED DEL TYPE^^0
"BLD",9780,"KRN",101,"NM",12,0)
IBCE VIEW PREV TRANS EXIT^^4^
"BLD",9780,"KRN",101,"NM",13,0)
IBCE VIEW PREV TRANS SELECT^^4^
"BLD",9780,"KRN",101,"NM",14,0)
IBCE VIEW PREV TRANS RESUB^^4^
"BLD",9780,"KRN",101,"NM",15,0)
IBCE VIEW PREV TRANS^^4^
"BLD",9780,"KRN",101,"NM",16,0)
IBCE VIEW PREV TRANS REPORT^^4^
"BLD",9780,"KRN",101,"NM",17,0)
IBRFI SELECT MESSAGE^^0
"BLD",9780,"KRN",101,"NM",18,0)
IBRFI RESORT^^0
"BLD",9780,"KRN",101,"NM",19,0)
IBRFI INITIAL WL MENU^^0
"BLD",9780,"KRN",101,"NM",20,0)
IBRFI DETAIL MENU^^0
"BLD",9780,"KRN",101,"NM",21,0)
IBRFI DETAIL REVIEW^^0
"BLD",9780,"KRN",101,"NM",22,0)
IBRFI DETAIL COMMENT^^0
"BLD",9780,"KRN",101,"NM",23,0)
IBRFI DETAIL REMOVE^^0
"BLD",9780,"KRN",101,"NM",24,0)
IBRFI CSA TPJI^^0
"BLD",9780,"KRN",101,"NM",26,0)
IBRFI COMMENTS MENU^^0
"BLD",9780,"KRN",101,"NM",27,0)
IBRFI ENTER COMMENTS 1^^0
"BLD",9780,"KRN",101,"NM",29,0)
IBRFI 277 IN^^0
"BLD",9780,"KRN",101,"NM",30,0)
IBRFI 277 RESPONSE^^0
"BLD",9780,"KRN",101,"NM",31,0)
IBCE EXIT^^4^
"BLD",9780,"KRN",101,"NM","B","IBCE EXIT",31)

"BLD",9780,"KRN",101,"NM","B","IBCE VIEW LOC PRINT MENU",1)

"BLD",9780,"KRN",101,"NM","B","IBCE VIEW PREV TRANS",15)

"BLD",9780,"KRN",101,"NM","B","IBCE VIEW PREV TRANS EXIT",12)

"BLD",9780,"KRN",101,"NM","B","IBCE VIEW PREV TRANS REPORT",16)

"BLD",9780,"KRN",101,"NM","B","IBCE VIEW PREV TRANS RESUB",14)

"BLD",9780,"KRN",101,"NM","B","IBCE VIEW PREV TRANS SELECT",13)

"BLD",9780,"KRN",101,"NM","B","IBJP ADMIN CONTRACTOR COM ADD TYPE",7)

"BLD",9780,"KRN",101,"NM","B","IBJP ADMIN CONTRACTOR COM DEL TYPE",8)

"BLD",9780,"KRN",101,"NM","B","IBJP ADMIN CONTRACTOR COM MENU",6)

"BLD",9780,"KRN",101,"NM","B","IBJP ADMIN CONTRACTOR MED ADD TYPE",10)

"BLD",9780,"KRN",101,"NM","B","IBJP ADMIN CONTRACTOR MED DEL TYPE",11)

"BLD",9780,"KRN",101,"NM","B","IBJP ADMIN CONTRACTOR MED MENU",9)

"BLD",9780,"KRN",101,"NM","B","IBJP IB REVENUE CODES ADD",3)

"BLD",9780,"KRN",101,"NM","B","IBJP IB REVENUE CODES DEL",4)

"BLD",9780,"KRN",101,"NM","B","IBJP IB REVENUE CODES EXIT",5)

"BLD",9780,"KRN",101,"NM","B","IBJP IB REVENUE CODES MENU",2)

"BLD",9780,"KRN",101,"NM","B","IBRFI 277 IN",29)

"BLD",9780,"KRN",101,"NM","B","IBRFI 277 RESPONSE",30)

"BLD",9780,"KRN",101,"NM","B","IBRFI COMMENTS MENU",26)

"BLD",9780,"KRN",101,"NM","B","IBRFI CSA TPJI",24)

"BLD",9780,"KRN",101,"NM","B","IBRFI DETAIL COMMENT",22)

"BLD",9780,"KRN",101,"NM","B","IBRFI DETAIL MENU",20)

"BLD",9780,"KRN",101,"NM","B","IBRFI DETAIL REMOVE",23)

"BLD",9780,"KRN",101,"NM","B","IBRFI DETAIL REVIEW",21)

"BLD",9780,"KRN",101,"NM","B","IBRFI ENTER COMMENTS 1",27)

"BLD",9780,"KRN",101,"NM","B","IBRFI INITIAL WL MENU",19)

"BLD",9780,"KRN",101,"NM","B","IBRFI RESORT",18)

"BLD",9780,"KRN",101,"NM","B","IBRFI SELECT MESSAGE",17)

"BLD",9780,"KRN",409.61,0)
409.61
"BLD",9780,"KRN",409.61,"NM",0)
^9.68A^7^7
"BLD",9780,"KRN",409.61,"NM",1,0)
IBCE VIEW LOC PRINT^^0
"BLD",9780,"KRN",409.61,"NM",2,0)
IBJP IB REVENUE CODES^^0
"BLD",9780,"KRN",409.61,"NM",3,0)
IBJP ADMIN CONTRACTOR COM^^0
"BLD",9780,"KRN",409.61,"NM",4,0)
IBJP ADMIN CONTRACTOR MED^^0
"BLD",9780,"KRN",409.61,"NM",5,0)
IBRFI 277 WL^^0
"BLD",9780,"KRN",409.61,"NM",6,0)
IBRFI 277 DETAIL WL^^0
"BLD",9780,"KRN",409.61,"NM",7,0)
IBRFI COMMENTS^^0
"BLD",9780,"KRN",409.61,"NM","B","IBCE VIEW LOC PRINT",1)

"BLD",9780,"KRN",409.61,"NM","B","IBJP ADMIN CONTRACTOR COM",3)

"BLD",9780,"KRN",409.61,"NM","B","IBJP ADMIN CONTRACTOR MED",4)

"BLD",9780,"KRN",409.61,"NM","B","IBJP IB REVENUE CODES",2)

"BLD",9780,"KRN",409.61,"NM","B","IBRFI 277 DETAIL WL",6)

"BLD",9780,"KRN",409.61,"NM","B","IBRFI 277 WL",5)

"BLD",9780,"KRN",409.61,"NM","B","IBRFI COMMENTS",7)

"BLD",9780,"KRN",771,0)
771
"BLD",9780,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",9780,"KRN",771,"NM",1,0)
IB RFAI VISTA^^0
"BLD",9780,"KRN",771,"NM",2,0)
RFAI FSC^^0
"BLD",9780,"KRN",771,"NM","B","IB RFAI VISTA",1)

"BLD",9780,"KRN",771,"NM","B","RFAI FSC",2)

"BLD",9780,"KRN",779.2,0)
779.2
"BLD",9780,"KRN",870,0)
870
"BLD",9780,"KRN",8989.51,0)
8989.51
"BLD",9780,"KRN",8989.52,0)
8989.52
"BLD",9780,"KRN",8994,0)
8994
"BLD",9780,"KRN","B",.4,.4)

"BLD",9780,"KRN","B",.401,.401)

"BLD",9780,"KRN","B",.402,.402)

"BLD",9780,"KRN","B",.403,.403)

"BLD",9780,"KRN","B",.5,.5)

"BLD",9780,"KRN","B",.84,.84)

"BLD",9780,"KRN","B",3.6,3.6)

"BLD",9780,"KRN","B",3.8,3.8)

"BLD",9780,"KRN","B",9.2,9.2)

"BLD",9780,"KRN","B",9.8,9.8)

"BLD",9780,"KRN","B",19,19)

"BLD",9780,"KRN","B",19.1,19.1)

"BLD",9780,"KRN","B",101,101)

"BLD",9780,"KRN","B",409.61,409.61)

"BLD",9780,"KRN","B",771,771)

"BLD",9780,"KRN","B",779.2,779.2)

"BLD",9780,"KRN","B",870,870)

"BLD",9780,"KRN","B",8989.51,8989.51)

"BLD",9780,"KRN","B",8989.52,8989.52)

"BLD",9780,"KRN","B",8994,8994)

"BLD",9780,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9780,"QUES",0)
^9.62^^
"BLD",9780,"REQB",0)
^9.611^6^6
"BLD",9780,"REQB",1,0)
IB*2.0*473^2
"BLD",9780,"REQB",2,0)
IB*2.0*516^2
"BLD",9780,"REQB",3,0)
IB*2.0*522^2
"BLD",9780,"REQB",4,0)
IB*2.0*451^2
"BLD",9780,"REQB",5,0)
IB*2.0*489^2
"BLD",9780,"REQB",6,0)
IB*2.0*214^2
"BLD",9780,"REQB","B","IB*2.0*214",6)

"BLD",9780,"REQB","B","IB*2.0*451",4)

"BLD",9780,"REQB","B","IB*2.0*473",1)

"BLD",9780,"REQB","B","IB*2.0*489",5)

"BLD",9780,"REQB","B","IB*2.0*516",2)

"BLD",9780,"REQB","B","IB*2.0*522",3)

"DATA",364.6,1,0)
8^N^^30^1^^0^2^1^Payer Responsibility Sequence^^1^0
"DATA",364.6,3,0)
8^N^^15^1^^0^11^30^Billing Prov Address 2^0^1
"DATA",364.6,6,0)
8^N^^32^1^^0^2.9^72^INSURED ADDR (STR/CITY/ST/ZIP)^1^1
"DATA",364.6,7,0)
8^N^^32^1^^0^5^30^Subscriber City Name^^1
"DATA",364.6,9,0)
8^N^^32^1^^0^7^9^Subscriber ZIP Code^^1
"DATA",364.6,10,0)
8^N^^30^1^^0^6.9^29^INSURED DEMO (BDT/SEX/PHONE)^1^1
"DATA",364.6,11,0)
8^N^^30^1^^0^8^1^Subscriber Gender Code^^1
"DATA",364.6,12,0)
8^N^^32^1^^0^8^20^Subscriber Phone #^^1
"DATA",364.6,13,0)
8^N^^36^1^^0^1.9^62^INSURED EMPLR GRP (NM/CITY/ST)^1^1
"DATA",364.6,16,0)
8^N^^30^1^^0^7^8^Subscriber Birth DT^^1
"DATA",364.6,17,0)
8^N^^32^1^^0^3^55^Subscriber Address 1^^1
"DATA",364.6,18,0)
8^N^^36^1^^0^2^30^Insured Employer Name^^1
"DATA",364.6,22,0)
8^N^^30^1^^0^4^35^Subscriber First Name^^1^0
"DATA",364.6,26,0)
8^N^^30^1^^0^3^60^Subscriber Last Name^^1^0
"DATA",364.6,29,0)
8^N^^40^1^^0^3^1^BLANK^^1
"DATA",364.6,37,0)
8^N^^40^1^^0^11^9^Pt. ZIP Code^^1
"DATA",364.6,41,0)
8^N^^40^1^^0^15^1^BLANK^^1^0
"DATA",364.6,43,0)
8^N^^45^1^^0^2^1^BLANK^^1
"DATA",364.6,59,0)
8^N^^50^1^^0^19^1^BLANK^^1
"DATA",364.6,65,0)
8^N^^32^1^^0^4^55^Subscriber Address 2^^1
"DATA",364.6,66,0)
8^N^^50^1^^0^26^1^BLANK^0^1
"DATA",364.6,67,0)
8^N^^50^1^^0^27^1^BLANK^^1
"DATA",364.6,96,0)
8^N^^105^1^^0^6^35^Other Payer Last or Organization Name^^1
"DATA",364.6,98,0)
8^N^^105^1^^0^4^50^Other Group or Policy #^^1
"DATA",364.6,99,0)
8^N^^110^1^^0^3^80^Other Subscriber Primary ID^^1
"DATA",364.6,100,0)
8^N^^105^1^^0^5^60^Other Group or Policy Name^^1
"DATA",364.6,101,0)
8^N^^110^1^^0^4^60^Other Subscriber Last Name^^1
"DATA",364.6,102,0)
8^N^^110^1^^0^5^35^Other Subscriber First Name^^1
"DATA",364.6,106,0)
8^N^^107^1^^0^3^15^Other Payer Paid Amt^^1
"DATA",364.6,109,0)
8^N^^110^1^^0^8^1^BLANK^^1
"DATA",364.6,110,0)
8^N^^110^1^^0^9^1^BLANK^^1
"DATA",364.6,117,0)
8^N^^180^1^^0^8^1^BLANK^^1^0
"DATA",364.6,127,0)
8^N^^185^1^^0^6^1^BLANK^^1
"DATA",364.6,132,0)
8^N^^185^1^^0^11^1^BLANK^^1
"DATA",364.6,136,0)
8^N^^190^1^^0^5^1^BLANK^^1
"DATA",364.6,146,0)
8^N^^36^1^^0^99.9^^KILL IBXSAVE ARRAY^1^1
"DATA",364.6,155,0)
8^N^^107^1^^0^99.9^^KILL IBXSAVE ARRAY^1^1
"DATA",364.6,174,0)
8^N^^55^1^^0^6^15^Lab/Facility ZIP Code^^1
"DATA",364.6,177,0)
8^N^^15^1^^0^3^30^Billing Prov Organization Name^^1^0
"DATA",364.6,189,0)
8^N^^35^1^^0^2^50^Insured Group or Policy #^^1
"DATA",364.6,190,0)
8^N^^35^1^^0^3^60^Insured Group Name^^1
"DATA",364.6,195,0)
8^N^^107^1^^0^4^18^COB Total Non-Covered Amount^^1
"DATA",364.6,196,0)
8^N^^20^1^^0^8^1^BLANK^^1
"DATA",364.6,581,0)
8^N^^190^1^^0^9^1^BLANK^^1
"DATA",364.6,784,0)
8^N^^50^1^^0^34^1^BLANK^^1
"DATA",364.6,785,0)
8^N^^50^1^^0^35^1^BLANK^^1
"DATA",364.6,789,0)
8^N^^32^1^^0^6^2^Subscriber State Code^^1
"DATA",364.6,794,0)
8^N^^36^1^^0^3^2^Type of Pay/Source of Pay^^1^0
"DATA",364.6,804,0)
8^N^^107^1^^0^5^2^COB Total Non-Covered Amount Qualifier^^1
"DATA",364.6,805,0)
8^N^^105^1^^0^7^2^Claim Filing Indicator (Type of Payer)^^1
"DATA",364.6,806,0)
8^N^^107^1^^0^8^20^Other Payer Prior Auth Qual^^1
"DATA",364.6,809,0)
8^N^^115^1^^0^3^1^BLANK^^1
"DATA",364.6,810,0)
8^N^^115^1^^0^4^1^BLANK^^1
"DATA",364.6,811,0)
8^N^^115^1^^0^5^1^BLANK^^1
"DATA",364.6,812,0)
8^N^^115^1^^0^6^1^BLANK^^1
"DATA",364.6,939,0)
8^N^^96^1^^0^12^1^BLANK^0^1
"DATA",364.6,944,0)
8^N^^96^1^^0^5^1^BLANK^0^1
"DATA",364.6,952,0)
8^N^^50^1^^0^36^1^BLANK^0^1
"DATA",364.6,956,0)
8^N^^107^1^^0^9^18^Other Payer Prior Auth/Referral #^^1
"DATA",364.6,957,0)
8^N^^36^1^^0^4^35^Prior Authorization #^^1
"DATA",364.6,968,0)
8^N^^15^1^^0^10^1^BLANK^0^1^0
"DATA",364.6,971,0)
8^N^^55^1^^0^9^1^BLANK^0^1
"DATA",364.6,980,0)
8^N^^180^1^^0^27^1^BLANK^0^1
"DATA",364.6,981,0)
8^N^^180^1^^0^28^1^BLANK^0^1
"DATA",364.6,988,0)
8^N^^110^1^^0^10^1^BLANK^0^1
"DATA",364.6,999,0)
8^N^^36^1^^0^6^50^Payer Claim Control Number^^1
"DATA",364.6,1000,0)
8^N^^36^1^^0^5^2^Payer Claim Control Number Qualifier^^1
"DATA",364.6,1004,0)
8^N^^20^1^^0^11^1^BLANK^0^1
"DATA",364.6,1005,0)
8^N^^105^1^^0^8^2^Insurance Type Code^^1
"DATA",364.6,1010,0)
8^N^^180^1^^0^26^1^BLANK^0^1
"DATA",364.6,1016,0)
8^N^^30^1^^0^6^10^Subscriber Name Suffix^0^1^0
"DATA",364.6,1029,0)
8^N^^40^1^^0^17^1^BLANK^0^1^0
"DATA",364.6,1030,0)
8^N^^40^1^^0^18^1^BLANK^0^1^0
"DATA",364.6,1034,0)
8^N^^51^1^^0^4^1^BLANK^0^1^0
"DATA",364.6,1043,0)
8^N^^57^1^^0^4^1^BLANK^0^1^0
"DATA",364.6,1065,0)
8^N^^105^1^0^0^9^1^Other Payer Pt. Signature Source Code^0^1^0
"DATA",364.6,1194,0)
8^N^^55^1^^0^11^1^BLANK^0^1
"DATA",364.6,1289,0)
8^N^^113^1^^0^4^55^Other Subscriber Address 1^0^1
"DATA",364.6,1290,0)
8^N^^113^1^^0^5^55^Other Subscriber Address 2^0^1
"DATA",364.6,1315,0)
8^N^^20^1^1^0^9^1^BLANK^0^1
"DATA",364.6,1316,0)
8^N^^20^1^^0^7^1^BLANK^0^1
"DATA",364.6,1317,0)
8^N^^20^1^1^^13^1^BLANK^0^1
"DATA",364.6,1802,0)
8^N^^38^1^^0^3^80^Subscriber Primary ID^0^1
"DATA",364.6,1804,0)
8^N^^38^1^^0^5^50^Subscriber Sec ID(1)^0^1
"DATA",364.6,1861,0)
8^N^^15^1^^0^2^1^BLANK^0^1
"DATA",364.6,1862,0)
8^N^^60^1^^0^5^1^BLANK^0^1
"DATA",364.6,1863,0)
8^N^^60^1^^0^6^1^BLANK^0^1
"DATA",364.6,1864,0)
8^N^^60^1^^0^7^1^BLANK^0^1
"DATA",364.6,1865,0)
8^N^^60^1^^0^8^1^BLANK^0^1
"DATA",364.6,1866,0)
8^N^^60^1^^0^9^1^BLANK^0^1
"DATA",364.6,1867,0)
8^N^^60^1^^0^10^1^BLANK^0^1
"DATA",364.6,1868,0)
8^N^^60^1^^0^11^1^BLANK^0^1
"DATA",364.6,1869,0)
8^N^^60^1^^0^12^1^BLANK^0^1
"DATA",364.6,1870,0)
8^N^^60^1^^0^13^1^BLANK^0^1
"DATA",364.6,1871,0)
8^N^^60^1^^0^14^1^BLANK^0^1
"DATA",364.6,1872,0)
8^N^^60^1^^0^15^1^BLANK^0^1
"DATA",364.6,1873,0)
8^N^^60^1^^0^16^1^BLANK^0^1
"DATA",364.6,1874,0)
8^N^^60^1^^0^17^1^BLANK^0^1
"DATA",364.6,1875,0)
8^N^^60^1^^0^18^1^BLANK^0^1
"DATA",364.6,1876,0)
8^N^^97^1^^0^13^1^BLANK^0^1
"DATA",364.6,1927,0)
8^N^^16^1^^0^4^1^BLANK^^1
"DATA",364.6,1928,0)
8^N^^16^1^^0^5^1^BLANK^^1
"DATA",364.6,1929,0)
8^N^^16^1^^0^6^1^BLANK^^1
"DATA",364.6,1930,0)
8^N^^16^1^^0^7^35^Pay-To Provider Address 1^^1
"DATA",364.6,1931,0)
8^N^^16^1^^0^8^35^Pay-To Provider Address 2^^1
"DATA",364.6,1966,0)
8^N^^36^1^^0^7^2^Prior Authorization Qualifier^0^1^0
"DATA",364.6,1967,0)
8^N^^36^1^^0^8^2^Referral Number Qualifier^^1
"DATA",364.6,1968,0)
8^N^^36^1^^0^9^20^Referral Number^^1
"DATA",364.6,2059,0)
8^N^^191^1^^0^9^1^BLANK^0^1
"DATA",364.6,2060,0)
8^N^^191^1^^0^10^1^BLANK^0^1
"DATA",364.6,2204,0)
8^N^^107^1^^0^6^3^Remaining patient Liability qualifier
"DATA",364.6,2205,0)
8^N^^107^1^^0^7^15^Remaining Patient Liability
"DATA",364.6,2253,0)
8^N^^32^1^1^0^1^4^RECORD ID 'CI2A'^0^1^0
"DATA",364.6,2254,0)
8^N^^32^1^1^0^2^1^Payer Responsibilty Sequence^0^1^0
"DATA",364.6,2255,0)
8^N^^36^1^^0^1^4^RECORD ID 'CI3A'^0^1
"DATA",364.6,2256,0)
8^N^^107^1^^0^1^4^RECORD ID 'OI1A'^0^1
"DATA",364.6,2257,0)
8^N^^107^1^^0^2^1^Payer Responsibility Sequence^0^1^0
"DATA",364.7,27,0)
92^N^86^^^^N
"DATA",364.7,27,1)
N A,C,R,Z,E,D M A=IBXDATA S (Z,R)=0,C=1 K IBXDATA F  S Z=$O(A(Z)) Q:'Z  S A=$TR($P($$ICD9^IBACSV(+A(Z),$$BDATE^IBACSV(IBXIEN)),U),".") I A'="" D ID1^IBCEF2(.R,.A,.C,.D,.E) Q:C=""  I A'="" S IBXDATA(R)=A
"DATA",364.7,27,3,0)
^^8^8^3151207^
"DATA",364.7,27,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,27,3,2,0)
possible for the data element in the IBXDATA array.  Each diagnosis code
"DATA",364.7,27,3,3,0)
name is stripped of its decimal point and is output on its own DCn entry
"DATA",364.7,27,3,4,0)
where n is a record count that will allow it to be mapped into one of the
"DATA",364.7,27,3,5,0)
12 available pieces of the 837 diagnosis code record correctly.  This is
"DATA",364.7,27,3,6,0)
done to accommodate Austin's translator and one of its shortcomings.  Save
"DATA",364.7,27,3,7,0)
off the extract sequence # of each diagnosis output in the global array
"DATA",364.7,27,3,8,0)
^TMP("IBXSAVE",$J,"DX") for later use.
"DATA",364.7,28,0)
56^N^5^^^^N
"DATA",364.7,28,1)
S IBXDATA=$G(IBXSAVE("DISDT")) I IBXDATA S IBXDATA=$$DT^IBCEFG1(IBXDATA\1,"","D8")
"DATA",364.7,28,3,0)
^^4^4^3160108^
"DATA",364.7,28,3,1,0)
Extract only date from date/time retrieved from IBXSAVE array previously
"DATA",364.7,28,3,2,0)
extracted.  For an outpatient claim not related to an inpatient episode,
"DATA",364.7,28,3,3,0)
If data element's value is null, do not output. IB*547 Removed the data 
"DATA",364.7,28,3,4,0)
for outpatient statement discharge date.
"DATA",364.7,37,0)
139^N^16^^^^N
"DATA",364.7,37,1)
K:$$FT^IBCEF(IBXIEN)=2!'$$INPAT^IBCEF(IBXIEN) IBXDATA N Z S Z=0 F  S Z=$O(IBXDATA(Z)) K:'Z IBXDATA Q:'Z  I '$D(IBXDATA(Z,"M")) S IBXSAVE("PROC",Z)=IBXDATA(Z) I Z'<25 K IBXDATA Q
"DATA",364.7,37,3,0)
^364.73^6^6^3140812^^^^
"DATA",364.7,37,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,37,3,2,0)
possible for the data element in the IBXDATA array.  If an institutional
"DATA",364.7,37,3,3,0)
bill or if the bill is professional and the procedure being extracted was
"DATA",364.7,37,3,4,0)
not added as a result of being a modifier with a 5-digit code starting with
"DATA",364.7,37,3,5,0)
0 ("M" node does not exist), save in an IBXSAVE array for later use.  No
"DATA",364.7,37,3,6,0)
output.
"DATA",364.7,77,0)
54^N^5^^^^N
"DATA",364.7,77,1)
S IBXDATA=$G(IBXSAVE("ADMDT")) S:$L(IBXDATA)=6 IBXDATA=$$DATE^IBCEU($E(IBXDATA,5,6)_$E(IBXDATA,1,4)) I IBXDATA S IBXDATA=$$DT^IBCEFG1(IBXDATA,"","D8")
"DATA",364.7,77,3,0)
^^2^2^3151012^
"DATA",364.7,77,3,1,0)
If data exists from the previous extract of IBXSAVE("ADMDT"), output it.
"DATA",364.7,77,3,2,0)
Format date in CCYYMMDD format.  IB*2.0*547 removed the Outpatient date.
"DATA",364.7,98,0)
142^N^78^^^^N
"DATA",364.7,98,1)
N A,IBZ,%DT,Y,X S IBZ=$S($$INPAT^IBCEF(IBXIEN,1):IBXDATA,1:""),A=$S(IBZ?6N:IBZ,1:"") K IBXDATA S:A="" Y=IBZ S X=A,%DT="PX" D:A'="" ^%DT S IBXSAVE("ADMDT")=$S(Y>0:Y,1:"")
"DATA",364.7,98,3,0)
^^2^2^3160108^
"DATA",364.7,98,3,1,0)
Save off data element's value in IBXSAVE array.  No output. IB*547 
"DATA",364.7,98,3,2,0)
requirement to use only Inpatient Admission Date/Time.
"DATA",364.7,100,0)
143^N^81^^^^N
"DATA",364.7,100,1)
S IBXSAVE("DISDT")=$S($$INPAT^IBCEF(IBXIEN,1):IBXDATA,1:"") K IBXDATA
"DATA",364.7,100,3,0)
^^2^2^3160108^
"DATA",364.7,100,3,1,0)
Save off data element's value in IBXSAVE array.  No output. IB*547 
"DATA",364.7,100,3,2,0)
requirement to use only Inpatient Discharge Date/Time
"DATA",364.7,809,0)
809^N^5^^^^N
"DATA",364.7,809,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,809,3,0)
^364.73^3^3^3150826^^^^
"DATA",364.7,809,3,1,0)
This data element relies on the previous extract of COB data for other
"DATA",364.7,809,3,2,0)
insurance into the IBXSAVE("CCOB",COB,n,1) array.  Extract the second piece
"DATA",364.7,809,3,3,0)
for this data.  Output the sum of each COB sequence as 1 IBXDATA(n) entry.
"DATA",364.7,1015,0)
1014^N^5^^^^N
"DATA",364.7,1015,1)
S IBXDATA="547.0" I '$$PROD^XUPROD(1) S $E(IBXDATA,11)="D"
"DATA",364.7,1015,3,0)
^364.73^7^7^3150821^^^^
"DATA",364.7,1015,3,1,0)
This field contains the VistA IB patch# that pertains to the
"DATA",364.7,1015,3,2,0)
applicable changes in the claim map.  Austin uses this field to determine
"DATA",364.7,1015,3,3,0)
which set of EDI claim maps to use when processing the EDI claims.
"DATA",364.7,1015,3,4,0)

"DATA",364.7,1015,3,5,0)
If the EDI claims are being transmitted from a non-production account,
"DATA",364.7,1015,3,6,0)
then the "D" in the 11th position indicates to Austin that it is test
"DATA",364.7,1015,3,7,0)
data.
"DATA",364.7,1198,0)
1498^N^156^^^^N
"DATA",364.7,1198,1)
S IBXSAVE("PAID")=0 K IBXDATA I $O(^TMP("IBXDATA",$J,IBXREC,""),-1)'>1 S IBXDATA=$$DOL^IBCEF77(IBXSAVE("PTOT"),8) K IBXSAVE("PAID")
"DATA",364.7,1198,3,0)
^^1^1^3150924^
"DATA",364.7,1198,3,1,0)
The payment received from the patient or other payers.
"DATA",364.7,1305,0)
1605^N^78^^^^N
"DATA",364.7,1305,1)
S:'$$INPAT^IBCEF(IBXIEN) IBXDATA="" I $$INPAT^IBCEF(IBXIEN) S IBXSAVE("ADTM")=$$TIME^IBCF3(IBXDATA),IBXDATA=$$DATE^IBCF2($P(IBXDATA,"."),,1)
"DATA",364.7,1305,3,0)
^^3^3^3160122^
"DATA",364.7,1305,3,1,0)
Save the admission time in IBXSAVE array for later use.  Format date
"DATA",364.7,1305,3,2,0)
without the time as MMDDYY. IB*2.0*547 removed the STATEMENT FROM date on 
"DATA",364.7,1305,3,3,0)
inpatient professional claims.
"DATA",364.7,1579,0)
1879^N^5^^^^N
"DATA",364.7,1579,1)
K IBXDATA N Z,Z1 S Z=0 F  S Z=$O(^TMP("DCX",$J,1,Z)) Q:'Z  S Z1=$P(^TMP("DCX",$J,1,Z),U,3),IBXDATA(Z)=$S(Z1=1:"",1:$P(^TMP("DCX",$J,1,Z),U,3))
"DATA",364.7,1579,3,0)
^^1^1^3150703^
"DATA",364.7,1579,3,1,0)
POA indicator for this diagnosis. Defaults to "".
"DATA",364.7,1627,0)
1927^N^56^^^^N
"DATA",364.7,1627,1)
K IBXDATA S IBXDATA=""
"DATA",364.7,1951,0)
2253^N^131^^^^N
"DATA",364.7,1951,1)
S IBXDATA="CI2A"
"DATA",364.7,1951,3,0)
^^1^1^3150819^
"DATA",364.7,1951,3,1,0)
Output RECORD ID for CI2A record.
"DATA",364.7,1952,0)
2254^N^54^^^^N
"DATA",364.7,1953,0)
2255^N^131^^^^N
"DATA",364.7,1953,1)
S IBXDATA="CI3A"
"DATA",364.7,1953,3,0)
^^1^1^3150819^
"DATA",364.7,1953,3,1,0)
Output RECORD ID for CI3A record.
"DATA",364.7,1954,0)
2256^N^131^^^^N
"DATA",364.7,1954,1)
S IBXDATA="OI1A"
"DATA",364.7,1954,3,0)
^^1^1^3150819^
"DATA",364.7,1954,3,1,0)
Output RECORD ID for OI1A record.
"DATA",364.7,1955,0)
2257^N^101^^^^N
"DATA",364.7,1955,1)
N IBZ,Z,Z0 M IBZ=IBXDATA K IBXDATA I $O(IBXSAVE(1,0)) S (Z,Z0)=00 F  S Z=$O(IBXSAVE(1,Z)) Q:'Z  S Z0=Z0+1,IBXDATA(Z0)=IBXSAVE(1,Z) I Z0>1 D ID^IBCEF2(Z0,"OI1A")
"DATA",364.7,1955,3,0)
^^8^8^3151117^
"DATA",364.7,1955,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,1955,3,2,0)
possible for the data element in the IBXDATA array.  The IBXSAVE(1) 
"DATA",364.7,1955,3,3,0)
variable holds the indicator of which insurance
"DATA",364.7,1955,3,4,0)
[(P)rimary/(S)econdary/(T)ertiary] is currently responsible for the
"DATA",364.7,1955,3,5,0)
bill.    Using this data as a guide, the next insurance for the primary is
"DATA",364.7,1955,3,6,0)
secondary, then tertiary.  For secondary, it's primary then tertiary, and
"DATA",364.7,1955,3,7,0)
for tertiary, it's primary, then secondary. For other than the first
"DATA",364.7,1955,3,8,0)
occurrence, the RECORD ID 'OI1A' must be output.
"DATA",368.001,1,0)
R0^Requests for additional Information/General Requests-Requests that don't fall into other R-type categories.
"DATA",368.001,2,0)
R1^Requests for additional Information/Entity Requests-Requests for information about specific entities (subscribers, patients, various providers).
"DATA",368.001,3,0)
R3^Requests for additional Information/Claim/Line-Requests for information that could normally be submitted on a claim.
"DATA",368.001,4,0)
R4^Requests for additional Information/Documentation-Requests for additional supporting documentation. Examples: certification, x-ray, notes.
"DATA",368.001,5,0)
R5^Request for additional information/more specific detail-Additional information as a follow up to a previous request is needed. The original information was received but is inadequate. More specific/detailed information is requested.
"DATA",368.001,6,0)
R6^Requests for additional information - Regulatory requirements
"DATA",368.001,7,0)
R7^Requests for additional information - Confirm care is consistent with Health Plan policy coverage
"DATA",368.001,8,0)
R8^Requests for additional information - Confirm care is consistent with health plan coverage 
"DATA",368.001,9,0)
R9^Requests for additional information - Determination of medical necessity
"DATA",368.001,10,0)
R10^Requests for additional information - Support a filed grievance or appeal
"DATA",368.001,11,0)
R11^Requests for additional information - Pre-payment review of claims
"DATA",368.001,12,0)
R12^Requests for additional information - Clarification or justification of use for specified procedure code
"DATA",368.001,13,0)
R13^Requests for additional information - Original documents submitted are not readable. Used only for subsequent request(s).
"DATA",368.001,14,0)
R14^Requests for additional information - Original documents received are not what was requested. Used only for subsequent request(s).
"DATA",368.001,15,0)
R15^Requests for additional information - Workers Compensation coverage determination.
"DATA",368.001,16,0)
R16^Requests for additional information - Eligibility determination
"DATA",368.001,17,0)
R17^Replacement of a Prior Request. Used to indicate that the current attachment request replaces a prior attachment request.
"DATA",368.002,1,0)
AD^American Dental Association
"DATA",368.002,2,0)
ER^Jurisdiction Specific Procedure and Supply Codes
"DATA",368.002,3,0)
HC^Health Care Financing Administration Common Procedural Coding System (HCPCS) Codes
"DATA",368.002,4,0)
HP^Health Insurance Prospective Payment System (HIPPS) Skilled Nursing Facility Rate Code
"DATA",368.002,5,0)
IV^Home Infusion EDI Coalition (HIEC) Product/Service Code
"DATA",368.002,6,0)
N4^National Drug Code in 5-4-2 Format
"DATA",368.002,7,0)
NU^This code is the NUBC Revenue Code.
"DATA",368.002,8,0)
WK^Advanced Billing Concepts (ABC) Codes
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^n^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,3.02)

"FIA",36,36,3.04)

"FIA",36,36,7.01)

"FIA",36,36,15)

"FIA",36,36,16)

"FIA",36,36.015)
0
"FIA",36,36.016)
0
"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,15)

"FIA",350.9,350.9,52.01)

"FIA",350.9,350.9,52.02)

"FIA",350.9,350.9,81)

"FIA",350.9,350.9,82)

"FIA",350.9,350.9399)
0
"FIA",350.9,350.981)
0
"FIA",350.9,350.982)
0
"FIA",355.98)
IB ALTERNATE PRIMARY ID TYPE
"FIA",355.98,0)
^IBA(355.98,
"FIA",355.98,0,0)
355.98
"FIA",355.98,0,1)
y^y^f^^^^n
"FIA",355.98,0,10)

"FIA",355.98,0,11)

"FIA",355.98,0,"RLRO")

"FIA",355.98,0,"VR")
2.0^IB
"FIA",355.98,355.98)
0
"FIA",362.3)
IB BILL/CLAIMS DIAGNOSIS
"FIA",362.3,0)
^IBA(362.3,
"FIA",362.3,0,0)
362.3IP
"FIA",362.3,0,1)
y^y^p^^^^n^^n
"FIA",362.3,0,10)

"FIA",362.3,0,11)

"FIA",362.3,0,"RLRO")

"FIA",362.3,0,"VR")
2.0^IB
"FIA",362.3,362.3)
1
"FIA",362.3,362.3,.04)

"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY547PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY547PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",368)
HEALTH CARE CLAIM RFAI (277)
"FIA",368,0)
^IBA(368,
"FIA",368,0,0)
368
"FIA",368,0,1)
y^y^f^^^^n
"FIA",368,0,10)

"FIA",368,0,11)

"FIA",368,0,"RLRO")

"FIA",368,0,"VR")
2.0^IB
"FIA",368,368)
0
"FIA",368,368.0113)
0
"FIA",368,368.0121)
0
"FIA",368,368.013)
0
"FIA",368,368.0201)
0
"FIA",368,368.021)
0
"FIA",368,368.0301)
0
"FIA",368,368.12199)
0
"FIA",368,368.2199)
0
"FIA",368.001)
X12 277 CLAIM STATUS CATEGORY
"FIA",368.001,0)
^IBE(368.001,
"FIA",368.001,0,0)
368.001I
"FIA",368.001,0,1)
y^y^f^^n^^y^o^n
"FIA",368.001,0,10)

"FIA",368.001,0,11)

"FIA",368.001,0,"RLRO")

"FIA",368.001,0,"VR")
2.0^IB
"FIA",368.001,368.001)
0
"FIA",368.002)
X12 277 PRODUCT OR SERVICE ID QUAL
"FIA",368.002,0)
^IBE(368.002,
"FIA",368.002,0,0)
368.002I
"FIA",368.002,0,1)
y^y^f^^n^^y^o^n
"FIA",368.002,0,10)

"FIA",368.002,0,11)

"FIA",368.002,0,"RLRO")

"FIA",368.002,0,"VR")
2.0^IB
"FIA",368.002,368.002)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^y^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.19)

"FIA",399,399,101)

"FIA",399,399,102)

"FIA",399,399,103)

"FIA",399,399,140)

"FIA",399,399,141)

"FIA",399,399,142)

"FIA",399,399,143)

"FIA",399,399,144)

"FIA",399,399,145)

"INI")
IBY547PR
"INIT")
IBY547PO
"IX",355.98,355.98,"C",0)
355.98^C^Convert to Upper Case for lookups^R^^F^IR^I^355.98^^^^^LS
"IX",355.98,355.98,"C",.1,0)
^^2^2^3151118^
"IX",355.98,355.98,"C",.1,1,0)
This cross reference stores all data as uppercase which allows it to
"IX",355.98,355.98,"C",.1,2,0)
handle upper, lower, or mixed case input by the user. 
"IX",355.98,355.98,"C",1)
S ^IBA(355.98,"C",$E(X,1,30),DA)=""
"IX",355.98,355.98,"C",2)
K ^IBA(355.98,"C",$E(X,1,30),DA)
"IX",355.98,355.98,"C",2.5)
K ^IBA(355.98,"C")
"IX",355.98,355.98,"C",11.1,0)
^.114IA^1^1
"IX",355.98,355.98,"C",11.1,1,0)
1^F^355.98^.01^30^1^F
"IX",355.98,355.98,"C",11.1,1,2)
S X=$$UP^XLFSTR($E(X,1,30))
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"C",0)
364.6^C^Field name lookup^R^^F^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"C",1)
S ^IBA(364.6,"C",$E(X,1,40),DA)=""
"IX",364.6,364.6,"C",2)
K ^IBA(364.6,"C",$E(X,1,40),DA)
"IX",364.6,364.6,"C",2.5)
K ^IBA(364.6,"C")
"IX",364.6,364.6,"C",11.1,0)
^.114IA^1^1
"IX",364.6,364.6,"C",11.1,1,0)
1^F^364.6^.1^40^1^F
"IX",364.6,364.6,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.6,364.6,"E",0)
364.6^E^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^F^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"E",1)
I X(1)'="",X(2)'="",X(3)'="",X(4)'="" S ^IBA(364.6,"D",X(1)_","_X(2)_","_X(3)_","_X(4),DA)=""
"IX",364.6,364.6,"E",2)
I X(1)'="",X(2)'="",X(3)'="",X(4)'="" K ^IBA(364.6,"D",X(1)_","_X(2)_","_X(3)_","_X(4),DA)
"IX",364.6,364.6,"E",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"E",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"E",11.1,1,0)
1^F^364.6^.01^^^F
"IX",364.6,364.6,"E",11.1,1,3)

"IX",364.6,364.6,"E",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"E",11.1,2,3)

"IX",364.6,364.6,"E",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"E",11.1,3,3)

"IX",364.6,364.6,"E",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.6,364.6,"E",11.1,4,3)

"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"IX",399,399,"ABP",0)
399^ABP^Update default taxonomy codes and billing provider IDs^MU^^R^IR^I^399^^^^^A
"IX",399,399,"ABP",.1,0)
^^17^17^3091019
"IX",399,399,"ABP",.1,1,0)
Whenever the fields in this x-ref are changed in any way (add/edit/delete)
"IX",399,399,"ABP",.1,2,0)
the billing provider and service facility for the claim may change so we
"IX",399,399,"ABP",.1,3,0)
need to recalculate the default values of the billing provider taxonomy
"IX",399,399,"ABP",.1,4,0)
code, the service facility taxonomy code, and the billing provider
"IX",399,399,"ABP",.1,5,0)
secondary IDs and Qualifiers for every payer on the claim.
"IX",399,399,"ABP",.1,6,0)
 
"IX",399,399,"ABP",.1,7,0)
Please note that this x-ref will potentially update the values of 8
"IX",399,399,"ABP",.1,8,0)
fields in file 399:
"IX",399,399,"ABP",.1,9,0)
 
"IX",399,399,"ABP",.1,10,0)
399,243 - SERVICE FACILITY TAXONOMY
"IX",399,399,"ABP",.1,11,0)
399,252 - BILLING PROVIDER TAXONOMY
"IX",399,399,"ABP",.1,12,0)
399,122 - PRIMARY PROVIDER #
"IX",399,399,"ABP",.1,13,0)
399,123 - SECONDARY PROVIDER #
"IX",399,399,"ABP",.1,14,0)
399,124 - TERTIARY PROVIDER #
"IX",399,399,"ABP",.1,15,0)
399,128 - PRIMARY ID QUALIFIER
"IX",399,399,"ABP",.1,16,0)
399,129 - SECONDARY ID QUALIFIER
"IX",399,399,"ABP",.1,17,0)
399,130 - TERTIARY ID QUALIFIER
"IX",399,399,"ABP",1)
D TAX^IBCEF79(DA)
"IX",399,399,"ABP",2)
D TAX^IBCEF79(DA)
"IX",399,399,"ABP",11.1,0)
^.114IA^4^4
"IX",399,399,"ABP",11.1,1,0)
1^F^399^.22^^^F
"IX",399,399,"ABP",11.1,2,0)
2^F^399^232^^^F
"IX",399,399,"ABP",11.1,3,0)
3^F^399^136^^^F
"IX",399,399,"ABP",11.1,4,0)
4^F^399^.19^^^F
"IX",399,399,"AE",0)
399^AE^Index by patient and insurance company^MU^^R^IR^I^399^^^^^S
"IX",399,399,"AE",.1,0)
^^7^7^3041021^
"IX",399,399,"AE",.1,1,0)
Cross reference of patients and bills to payer responsible for the bill.
"IX",399,399,"AE",.1,2,0)
This will be used to prevent deletion of insurance policy entries from the
"IX",399,399,"AE",.1,3,0)
patient file if a bill has been created for this insurance company.
"IX",399,399,"AE",.1,4,0)
 
"IX",399,399,"AE",.1,5,0)
Created with patch IB*2.0*288 replacing traditional cross-reference #1 in 
"IX",399,399,"AE",.1,6,0)
field 135 of file 399.  Medicare is now a valid insurance company for 
"IX",399,399,"AE",.1,7,0)
this index file.
"IX",399,399,"AE",1)
N CURR S CURR=+$$COBN^IBCEF(DA) I $G(X(4)),$G(X(CURR)) S ^DGCR(399,"AE",X(4),X(CURR),DA)=""
"IX",399,399,"AE",2)
N G I $G(X(4)) F G=1,2,3 I $G(X(G)) K ^DGCR(399,"AE",X(4),X(G),DA)
"IX",399,399,"AE",2.5)
K ^DGCR(399,"AE")
"IX",399,399,"AE",11.1,0)
^.114IA^4^4
"IX",399,399,"AE",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AE",11.1,1,3)

"IX",399,399,"AE",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AE",11.1,2,3)

"IX",399,399,"AE",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AE",11.1,3,3)

"IX",399,399,"AE",11.1,4,0)
4^F^399^.02^^^F
"IX",399,399,"AE",11.1,4,3)

"IX",399,399,"AK",0)
399^AK^Update the line level providers for claim FORM TYPE change.^MU^^F^IR^I^399^^^^^A
"IX",399,399,"AK",.1,0)
^^36^36^3101022^
"IX",399,399,"AK",.1,1,0)
For Patch IB*2.0*432:
"IX",399,399,"AK",.1,2,0)
 
"IX",399,399,"AK",.1,3,0)
The patch introduces line providers to the Bill/Claims process. Line 
"IX",399,399,"AK",.1,4,0)
providers (Sub-file 399.0404) are based on the claim FORM TYPE. So, when
"IX",399,399,"AK",.1,5,0)
there is a change in claim FORM TYPE, then we want to update the line
"IX",399,399,"AK",.1,6,0)
level providers to be in agreement with the claim FORM TYPE (see below for
"IX",399,399,"AK",.1,7,0)
FORM TYPE and allowable line provider types). In the case when the FORM
"IX",399,399,"AK",.1,8,0)
TYPE field is changed, then the line provider types are checked to see if
"IX",399,399,"AK",.1,9,0)
any, or all, line providers need to be deleted from the claim.
"IX",399,399,"AK",.1,10,0)
 
"IX",399,399,"AK",.1,11,0)
Logic:
"IX",399,399,"AK",.1,12,0)
 
"IX",399,399,"AK",.1,13,0)
(1) IF $$LNPRVFT^IBCEU7(X,.IBLNPRV) is TRUE, then we have line providers
"IX",399,399,"AK",.1,14,0)
    in the IBLNPRV array to be deleted.
"IX",399,399,"AK",.1,15,0)
    Note: IBLNPRV array holds the procedure IENs (Sub-file 399.0304), and
"IX",399,399,"AK",.1,16,0)
    line provider IENs and .01 field (Sub-file 399.0404,.01) equal to the 
"IX",399,399,"AK",.1,17,0)
    delete indicator "@" in FDA format 
"IX",399,399,"AK",.1,18,0)
    (FDA_ROOT(FILE#,"IENS",FIELD#)="VALUE".
"IX",399,399,"AK",.1,19,0)
 
"IX",399,399,"AK",.1,20,0)
(2) IF (1) TRUE, then we call FILE^DIE("E","IBLNPRV") to delete the line
"IX",399,399,"AK",.1,21,0)
level providers in the IBLNPRV array.
"IX",399,399,"AK",.1,22,0)
 
"IX",399,399,"AK",.1,23,0)
Allowable line provider types by FORM TYPE:
"IX",399,399,"AK",.1,24,0)
 
"IX",399,399,"AK",.1,25,0)
Allowable line provider functions for UB04 (FORM TYPE = 3)
"IX",399,399,"AK",.1,26,0)
  Inpatient and UB04 Outpatient:
"IX",399,399,"AK",.1,27,0)
   - Rendering Provider(VAL=3).
"IX",399,399,"AK",.1,28,0)
   - Referring Provider(VAL=1).
"IX",399,399,"AK",.1,29,0)
   - Operating Physician(VAL=2).
"IX",399,399,"AK",.1,30,0)
   - Other Operating Physician(VAL=9).
"IX",399,399,"AK",.1,31,0)
 
"IX",399,399,"AK",.1,32,0)
Allowable line provider functions for CMS 1500 (FORM TYPE = 2)
"IX",399,399,"AK",.1,33,0)
  Inpatient and CMS 1500 Outpatient:
"IX",399,399,"AK",.1,34,0)
   - Rendering Provider(VAL=3).
"IX",399,399,"AK",.1,35,0)
   - Referring Provider(VAL=1).
"IX",399,399,"AK",.1,36,0)
   - Supervising Provider(VAL=5).
"IX",399,399,"AK",1)
N IBLNPRV I $$LNPRVFT^IBCEU7(X,.IBLNPRV) D FILE^DIE("E","IBLNPRV") Q
"IX",399,399,"AK",2)
Q
"IX",399,399,"AK",11.1,0)
^.114IA^1^1
"IX",399,399,"AK",11.1,1,0)
1^F^399^.19^20^^F
"IX",399,399,"AL",0)
399^AL^Remove line level info from inpatient UBs.^MU^^F^IR^I^399^^^^^A
"IX",399,399,"AL",.1,0)
^^11^11^3110301^
"IX",399,399,"AL",.1,1,0)
For Patch IB*2.0*432:
"IX",399,399,"AL",.1,2,0)
 
"IX",399,399,"AL",.1,3,0)
The patch introduces line providers and line level attachment 
"IX",399,399,"AL",.1,4,0)
information to the Bill/Claims process. Billers are prevented from 
"IX",399,399,"AL",.1,5,0)
entering this information for inpatient UBs.  However, if the biller 
"IX",399,399,"AL",.1,6,0)
entered the information before changing the FORM TYPE to UB, the data may
"IX",399,399,"AL",.1,7,0)
exist and needs to be cleaned up.  The clean up routine removes 
"IX",399,399,"AL",.1,8,0)
following line level attachment information from the PROCEDURES sub-file
"IX",399,399,"AL",.1,9,0)
(#399.0304): (#70) ATTACHMENT CONTROL NUMBER, (#71) ATTACHMENT REPORT
"IX",399,399,"AL",.1,10,0)
TYPE and (#72) ATTACHMENT REPORT TRANS CODE. It also removes all line
"IX",399,399,"AL",.1,11,0)
level provider information in the LINE PROVIDER sub-file (#399.0404).
"IX",399,399,"AL",1)
D REMOVE^IBCEU7(IBIFN,X(1))
"IX",399,399,"AL",1.4)
S X=X(1)=3
"IX",399,399,"AL",2)
Q
"IX",399,399,"AL",11.1,0)
^.114IA^1^1
"IX",399,399,"AL",11.1,1,0)
1^F^399^.19^20^^F
"IX",399,399,"AUPDID",0)
399^AUPDID^UPDATE PROVIDER ID WHEN DATA FIELDS CHANGE AT TOP LEVEL OF FILE^MU^^R^IR^I^399^^^^^A
"IX",399,399,"AUPDID",.1,0)
^^5^5^3010109^
"IX",399,399,"AUPDID",.1,1,0)
This cross reference maintains the integrity of the rendering or attending
"IX",399,399,"AUPDID",.1,2,0)
provider id whenever an insurance company is added, deleted or changed
"IX",399,399,"AUPDID",.1,3,0)
on the claim.  If either of these provider functions exist on the bill,
"IX",399,399,"AUPDID",.1,4,0)
this cross reference sets the default id data based on the insurance co's
"IX",399,399,"AUPDID",.1,5,0)
parameters.
"IX",399,399,"AUPDID",1)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) SETID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) SETID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) SETID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",1.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",2)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) DELID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) DELID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) DELID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",2.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",11.1,0)
^.114IA^6^6
"IX",399,399,"AUPDID",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AUPDID",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AUPDID",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AUPDID",11.1,4,0)
4^F^399^113^^^F
"IX",399,399,"AUPDID",11.1,5,0)
5^F^399^112^^^F
"IX",399,399,"AUPDID",11.1,5,3)
 
"IX",399,399,"AUPDID",11.1,6,0)
6^F^399^114^^^F
"IX",399,399,"AUPDID",11.1,6,3)
 
"KRN",.402,558,-1)
0^1
"KRN",.402,558,0)
IBEDIT INS CO1^3160120.2007^^36^^^3160121
"KRN",.402,558,"DIAB",1,0,36,8)
EDI INST SECONDARY ID(2);"EDI - 2ND Inst Payer Sec. ID"
"KRN",.402,558,"DIAB",1,0,36,9)
EDI ID NUMBER - PROF;"EDI - Prof Payer Primary ID"
"KRN",.402,558,"DIAB",1,0,36,13)
EDI PROF SECONDARY ID QUAL(2);"EDI - 2ND Prof Payer Sec. ID Qualifier"
"KRN",.402,558,"DIAB",1,0,36,19)
ATT/REND ID BILL SEC ID INST//NO;"Use Att/Rend ID as Billing Provider Sec. ID (UB)?"
"KRN",.402,558,"DIAB",1,1,36.015,0)
.01;"EDI - Alt Inst Payer Primary ID Type"
"KRN",.402,558,"DIAB",1,1,36.016,0)
.01;"EDI - Alt Prof Payer Primary ID Type"
"KRN",.402,558,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,558,"DIAB",2,0,36,10)
EDI PROF SECONDARY ID QUAL(1);"EDI - 1ST Prof Payer Sec. ID Qualifier"
"KRN",.402,558,"DIAB",2,0,36,17)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,558,"DIAB",2,0,36,18)
REF PROV SEC ID DEF CMS-1500//UPIN;"Default ID (1500)"
"KRN",.402,558,"DIAB",2,0,36,23)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,558,"DIAB",2,1,36.015,0)
.02;"EDI - Alt Inst Payer Primary ID"
"KRN",.402,558,"DIAB",2,1,36.016,0)
.02;"EDI - Alt Prof Payer Primary ID"
"KRN",.402,558,"DIAB",3,0,36,1)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,558,"DIAB",3,0,36,18)
REF PROV SEC ID REQ ON CLAIMS;"Require ID on Claim"
"KRN",.402,558,"DIAB",3,0,36,24)
INS COMPANY LINK TYPE;T
"KRN",.402,558,"DIAB",4,0,36,3)
15;"EDI - Alt Inst Payer Primary ID Type"
"KRN",.402,558,"DIAB",4,0,36,20)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,558,"DIAB",5,0,36,5)
EDI INST SECONDARY ID(1);"EDI - 1ST Inst Payer Sec. ID"
"KRN",.402,558,"DIAB",5,0,36,16)
BIN NUMBER;"EDI - Bin Number"
"KRN",.402,558,"DIAB",5,0,36,18)
ATT/REND ID BILL SEC ID PROF//NO;"Use Att/Rend ID as Billing Provider Sec. ID (1500)?"
"KRN",.402,558,"DIAB",6,0,36,2)
EDI ID NUMBER - INST;"EDI - Inst Payer Primary ID"
"KRN",.402,558,"DIAB",6,0,36,3)
EDI INST SECONDARY ID QUAL(1);"EDI - 1ST Inst Payer Sec. ID Qualifier"
"KRN",.402,558,"DIAB",6,0,36,6)
EDI INST SECONDARY ID QUAL(2);"EDI - 2ND Inst Payer Sec. ID Qualifier"
"KRN",.402,558,"DIAB",6,0,36,14)
EDI PROF SECONDARY ID(2);"EDI - 2ND Prof Payer Sec. ID"
"KRN",.402,558,"DIAB",6,0,36,17)
PERF PROV SECOND ID TYPE 1500;"Default ID (1500)"
"KRN",.402,558,"DIAB",6,0,36,25)
INS COMPANY LINK PARENT;T
"KRN",.402,558,"DIAB",7,0,36,9)
16;"EDI - Alt Prof Payer Primary ID Type"
"KRN",.402,558,"DIAB",7,0,36,11)
EDI PROF SECONDARY ID(1);"EDI - 1ST Prof Payer Sec. ID"
"KRN",.402,558,"DIAB",7,0,36,15)
ELECTRONIC INSURANCE TYPE;"EDI - Insurance Type"
"KRN",.402,558,"DIAB",7,0,36,17)
PERF PROV SECOND ID TYPE UB;"Default ID (UB)"
"KRN",.402,558,"DIAB",8,0,36,17)
SECONDARY ID REQUIREMENTS;"Require ID on Claim"
"KRN",.402,558,"DIAB",9,0,36,16)
PRINT SEC/TERT AUTO CLAIMS?;"EDI - Print Sec/Tert Auto Claims?"
"KRN",.402,558,"DIAB",10,0,36,16)
PRINT SEC MED CLAIMS W/O MRA;"EDI - Print Medicare Sec Claims w/o MRA?"
"KRN",.402,558,"DIAB",11,0,36,1)
TRANSMIT ELECTRONICALLY;"EDI - Transmit?"
"KRN",.402,558,"DIAB",12,0,36,22)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,558,"DIAB",13,0,36,0)
STANDARD FTF;"STANDARD FILING TIME FRAME"
"KRN",.402,558,"DIAB",16,0,36,0)
STANDARD FTF VALUE;"STANDARD FILING TIME FRAME VALUE"
"KRN",.402,558,"DIAB",20,0,36,21)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,558,"DIAB",24,0,36,20)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,558,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;.18STANDARD FILING TIME FRAME~;I 'X S Y="@016";I '$$FTFV^IBCNSU31(X) S Y="@016";.19STANDARD FILING TIME FRAME VALUE~;@016;.12;.13;
"KRN",.402,558,"DR",1,36,1)
.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@171";3.01EDI - Transmit?~;S DIPA("IBTX")=X;I X=$G(IBEDIKEY(1))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1721";
"KRN",.402,558,"DR",1,36,2)
3.01////^S X=$G(IBEDIKEY(1));I $$EDIKEY^IBCNSC();S Y="@171";@1721;I '$G(DIPA("IBTX")) S Y="@17";3.04EDI - Inst Payer Primary ID~;I X=$G(IBEDIKEY(4))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17211";3.04////^S X=$G(IBEDIKEY(4));
"KRN",.402,558,"DR",1,36,3)
I $$EDIKEY^IBCNSC();S Y="@171";@17211;15EDI - Alt Inst Payer Primary ID Type~;I '$G(DIPA("IBTX")) S Y="@17";6.01EDI - 1ST Inst Payer Sec. ID Qualifier~;
"KRN",.402,558,"DR",1,36,4)
I X=""&($G(IBEDIKEY(3,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";I X=$G(IBEDIKEY(1,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17212";6.01////^S X=$G(IBEDIKEY(1,6));6.02////^S X=$G(IBEDIKEY(2,6));
"KRN",.402,558,"DR",1,36,5)
I $$EDIKEY^IBCNSC();S Y="@171";@17212;I '$G(DIPA("IBTX")) S Y="@17";6.02EDI - 1ST Inst Payer Sec. ID~;I X=$G(IBEDIKEY(2,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17213";6.02////^S X=$G(IBEDIKEY(2,6));
"KRN",.402,558,"DR",1,36,6)
6.01////^S X=$G(IBEDIKEY(1,6));I $$EDIKEY^IBCNSC();S Y="@171";@17213;I '$G(DIPA("IBTX")) S Y="@17";6.03EDI - 2ND Inst Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";
"KRN",.402,558,"DR",1,36,7)
I X=$G(IBEDIKEY(3,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17214";6.03////^S X=$G(IBEDIKEY(3,6));6.04////^S X=$G(IBEDIKEY(4,6));I $$EDIKEY^IBCNSC();S Y="@171";@17214;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,558,"DR",1,36,8)
6.04EDI - 2ND Inst Payer Sec. ID~;I X=$G(IBEDIKEY(4,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";6.04////^S X=$G(IBEDIKEY(4,6));6.03////^S X=$G(IBEDIKEY(3,6));I $$EDIKEY^IBCNSC();S Y="@171";@1722;
"KRN",.402,558,"DR",1,36,9)
3.02EDI - Prof Payer Primary ID~;I X=$G(IBEDIKEY(2))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17221";3.02////^S X=$G(IBEDIKEY(2));I $$EDIKEY^IBCNSC();S Y="@171";@17221;16EDI - Alt Prof Payer Primary ID Type~;
"KRN",.402,558,"DR",1,36,10)
I '$G(DIPA("IBTX")) S Y="@17";6.05EDI - 1ST Prof Payer Sec. ID Qualifier~;I X=""&($G(IBEDIKEY(7,6))="")&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";I X=$G(IBEDIKEY(5,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17222";
"KRN",.402,558,"DR",1,36,11)
6.05////^S X=$G(IBEDIKEY(5,6));6.06////^S X=$G(IBEDIKEY(6,6));I $$EDIKEY^IBCNSC();S Y="@171";@17222;I '$G(DIPA("IBTX")) S Y="@17";6.06EDI - 1ST Prof Payer Sec. ID~;
"KRN",.402,558,"DR",1,36,12)
I X=$G(IBEDIKEY(6,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17223";6.06////^S X=$G(IBEDIKEY(6,6));6.05////^S X=$G(IBEDIKEY(5,6));I $$EDIKEY^IBCNSC();S Y="@171";@17223;I '$G(DIPA("IBTX")) S Y="@17";
"KRN",.402,558,"DR",1,36,13)
6.07EDI - 2ND Prof Payer Sec. ID Qualifier~;I X=""&$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";I X=$G(IBEDIKEY(7,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@17224";6.07////^S X=$G(IBEDIKEY(7,6));
"KRN",.402,558,"DR",1,36,14)
6.08////^S X=$G(IBEDIKEY(8,6));I $$EDIKEY^IBCNSC();S Y="@171";@17224;I '$G(DIPA("IBTX")) S Y="@17";6.08EDI - 2ND Prof Payer Sec. ID~;I X=$G(IBEDIKEY(8,6))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";
"KRN",.402,558,"DR",1,36,15)
6.08////^S X=$G(IBEDIKEY(8,6));6.07////^S X=$G(IBEDIKEY(7,6));I $$EDIKEY^IBCNSC();S Y="@171";@1723;@17;3.09EDI - Insurance Type~;I X=$G(IBEDIKEY(9))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1724";3.09////^S X=$G(IBEDIKEY(9));
"KRN",.402,558,"DR",1,36,16)
I $$EDIKEY^IBCNSC();S Y="@171";@1724;@171;3.03EDI - Bin Number~;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1725";7.01;@1725;6.09EDI - Print Sec/Tert Auto Claims?~;6.1EDI - Print Medicare Sec Claims w/o MRA?~;
"KRN",.402,558,"DR",1,36,17)
I $G(DIPA("IBTX"))'=2 S Y="@18";3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@18;S:",6,12,"'[IBY Y="@181";W !!,"Attending/Rendering Provider Secondary ID";4.01Default ID (1500)~;4.02Default ID (UB)~;4.03Require ID on Claim~;
"KRN",.402,558,"DR",1,36,18)
W !!,"Referring Provider Secondary ID";4.04Default ID (1500)~//UPIN;4.05Require ID on Claim~;W !!,"Billing Provider Secondary IDs";4.06Use Att/Rend ID as Billing Provider Sec. ID (1500)?~//NO;
"KRN",.402,558,"DR",1,36,19)
4.08Use Att/Rend ID as Billing Provider Sec. ID (UB)?~//NO;W !!,"Billing Provider/Service Facility";@181;S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";.112;S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;
"KRN",.402,558,"DR",1,36,20)
S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;
"KRN",.402,558,"DR",1,36,21)
S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";
"KRN",.402,558,"DR",1,36,22)
.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;
"KRN",.402,558,"DR",1,36,23)
S:",5,6,"'[IBY Y="@55";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@55;S:",13,6,"'[IBY Y="@60";
"KRN",.402,558,"DR",1,36,24)
I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@551";I $D(^DIC(36,"APC",+$G(DA))),$P($G(^DIC(36,+$G(DA),3)),U,13)="P" S Y="@551";3.13T~;S DIPA("IBLNK")=X;I X=$G(IBEDIKEY(13))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@552";
"KRN",.402,558,"DR",1,36,25)
3.13////^S X=$G(IBEDIKEY(13));I $$EDIKEY^IBCNSC();S Y="@551";@552;I $G(DIPA("IBLNK"))'="C" S Y="@551";3.14T~;I X=$G(IBEDIKEY(14))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@553";3.14////^S X=$G(IBEDIKEY(14));I $$EDIKEY^IBCNSC();
"KRN",.402,558,"DR",1,36,26)
S Y="@551";@553;D COPY^IBCEPCID(+$G(DA));@551;S:IBY=",13," Y="@99";@60;S:",7,6,"'[IBY Y="@50";3.1;@50;S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,558,"DR",2,36.015)
.01EDI - Alt Inst Payer Primary ID Type~;.02EDI - Alt Inst Payer Primary ID~;
"KRN",.402,558,"DR",2,36.016)
.01EDI - Alt Prof Payer Primary ID Type~;.02EDI - Alt Prof Payer Primary ID~;
"KRN",.402,558,"DR",2,36.03)
.01
"KRN",.402,1782,-1)
0^2
"KRN",.402,1782,0)
IB SCREEN102^3160203.2^@^399^^@^3160203
"KRN",.402,1782,"AR",399,542)
1^IBXSA212
"KRN",.402,1782,"DIAB",1,0,399,6)
PRIMARY PAYER-ALT ID TYPE;"Primary Payer - Alt Inst Prim Payer ID Type"
"KRN",.402,1782,"DIAB",1,0,399,11)
TERTIARY PAYER-ALT ID TYPE;"Tertiary Payer - Alt Inst Prim Payer ID Type"
"KRN",.402,1782,"DIAB",1,0,399,12)
TERTIARY PAYER-ALT ID;"Tertiary Payer - Alt Inst Prim Payer ID"
"KRN",.402,1782,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1782,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,1782,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,1782,"DIAB",2,1,399.0222,1)
PERFORMED BY:355.93:
"KRN",.402,1782,"DIAB",3,0,399,8)
SECONDARY PAYER-ALT ID TYPE;"Secondary Payer - Alt Inst Prim Payer ID Type"
"KRN",.402,1782,"DIAB",3,0,399,9)
SECONDARY PAYER-ALT ID;"Secondary Payer - Alt Inst Prim Payer ID"
"KRN",.402,1782,"DIAB",4,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,1782,"DIAB",4,0,399,2)
NON-VA FACILITY:
"KRN",.402,1782,"DIAB",4,1,399.0222,7)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1782,"DIAB",5,0,399,6)
PRIMARY PAYER-ALT ID;"Primary Payer - Alt Inst Prim Payer ID"
"KRN",.402,1782,"DIAB",5,1,399.0222,7)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1782,"DIAB",6,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,1782,"DIAB",8,0,399,0)
FORM LOCATOR 64C;T
"KRN",.402,1782,"DIAB",8,1,399.0222,7)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1782,"DIAB",9,1,399.0222,7)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1782,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1782,"DIAB",10,0,399,0)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1782,"DIAB",11,0,399,1)
PPS;T
"KRN",.402,1782,"DIAB",12,1,399.0222,7)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1782,"DIAB",13,1,399.0222,7)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1782,"DR",1,399)
K DIPA S DIPA("I1")=$G(^DGCR(399,DA,"I1")),DIPA("I2")=$G(^("I2")),DIPA("I3")=$G(^("I3"));S:IBDR20'["101" Y="@102";402;453T~;S:'DIPA("I2") Y="@10111";454T~;S:'DIPA("I3") Y="@10111";455T~;@10111;163PRIMARY AUTHORIZATION CODE~;253;
"KRN",.402,1782,"DR",1,399,1)
S:'DIPA("I2") Y="@1011";230;254;S:'DIPA("I3") Y="@1011";231;255;@1011;I '$$INPAT^IBCEF(DA) S Y="@1012";215;S ICDVDT=$$BDATE^IBACSV(DA);170T~;@1012;159;@102;S:IBDR20'["102" Y="@103";@103;S:IBDR20'["103" Y="@104";222;@104;
"KRN",.402,1782,"DR",1,399,2)
S:IBDR20'["104" Y="@105";232;S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@1046";^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X  S D(0)=+X S X=$S(D(0)>0:D(0),1:"");
"KRN",.402,1782,"DR",1,399,3)
S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;K DIK;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@1046;@105;S:IBDR20'["105" Y="@106";252;
"KRN",.402,1782,"DR",1,399,4)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@106;S:IBDR20'["106" Y="@107";
"KRN",.402,1782,"DR",1,399,5)
I '$G(DIPA("I1")) S Y="@107";K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I1"),"@1061");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");S DIPA("OLDALTT1")=$P($G(^DGCR(399,DA,"M2")),U);
"KRN",.402,1782,"DR",1,399,6)
140Primary Payer - Alt Inst Prim Payer ID Type~;I X="",$G(DIPA("OLDALTT1"))="" S Y="@1061";I $P($G(^DGCR(399,DA,"M2")),U)="" S Y="@1061";S DIPA("OLDALTI1")=$P($G(^DGCR(399,DA,"M2")),U,2);141Primary Payer - Alt Inst Prim Payer ID~;
"KRN",.402,1782,"DR",1,399,7)
I X="",$G(DIPA("OLDALTI1"))="" S Y="@10611";S Y="@1061";@10611;140////@;@1061;I '$G(DIPA("I2")) S Y="@107";K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I2"),"@1062");
"KRN",.402,1782,"DR",1,399,8)
S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");S DIPA("OLDALTT2")=$P($G(^DGCR(399,DA,"M2")),U,3);142Secondary Payer - Alt Inst Prim Payer ID Type~;I X="",$G(DIPA("OLDALTT2"))="" S Y="@1062";
"KRN",.402,1782,"DR",1,399,9)
I $P($G(^DGCR(399,DA,"M2")),U,3)="" S Y="@1062";S DIPA("OLDALTI2")=$P($G(^DGCR(399,DA,"M2")),U,4);143Secondary Payer - Alt Inst Prim Payer ID~;I X="",$G(DIPA("OLDALTI2"))="" S Y="@10621";S Y="@1062";@10621;142////@;@1062;
"KRN",.402,1782,"DR",1,399,10)
I '$G(DIPA("I3")) S Y="@107";K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I3"),"@107");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");S DIPA("OLDALTT2")=$P($G(^DGCR(399,DA,"M2")),U,5);
"KRN",.402,1782,"DR",1,399,11)
144Tertiary Payer - Alt Inst Prim Payer ID Type~;I X="",$G(DIPA("OLDALTT3"))="" S Y="@1063";I $P($G(^DGCR(399,DA,"M2")),U,5)="" S Y="@1063";S DIPA("OLDALTI3")=$P($G(^DGCR(399,DA,"M2")),U,6);
"KRN",.402,1782,"DR",1,399,12)
145Tertiary Payer - Alt Inst Prim Payer ID~;I X="",$G(DIPA("OLDALTI3"))="" S Y="@10631";S Y="@1063";@10631;145////@;@1063;@107;S:IBDR20'["107" Y="@108";I $$TEST^IBCEF84(DA) S Y="@1070";
"KRN",.402,1782,"DR",1,399,13)
I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@1071";I $$REQMRA^IBEFUNC(DA) S Y="@10711";27//NO FORCED PRINT;S Y="@108";@1070;D MESSAGE^IBCEF84;S Y="@108";@10711;28//NO FORCED PRINT;S Y="@108";@1071;
"KRN",.402,1782,"DR",1,399,14)
N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;@108;S:IBDR20'["108" Y="@109";@109;
"KRN",.402,1782,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@1041";.05;.1;.06;.07;.08;@1041;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@1042";
"KRN",.402,1782,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@1042;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@1043";.11;@1043;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@1044";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@1044;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@1045";42;
"KRN",.402,1782,"DR",2,355.93,2)
@1045;
"KRN",.402,1782,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@10399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,1782,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@1038";^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@1038;
"KRN",.402,1782,"DR",2,399.0222,2)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1782,"DR",2,399.0222,3)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1782,"DR",2,399.0222,4)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC10H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1782,"DR",2,399.0222,5)
I '$G(DIPA("I1")) S Y="@10305";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10382",DIPA("EDIT")=1:"@10391",DIPA("EDIT")=2:"@10371",1:"");@10382;I '$G(DIPA("I2")) S Y="@10305";
"KRN",.402,1782,"DR",2,399.0222,6)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10383",DIPA("EDIT")=1:"@10392",DIPA("EDIT")=2:"@10372",1:"");@10383;I '$G(DIPA("I3")) S Y="@10305";
"KRN",.402,1782,"DR",2,399.0222,7)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10305",DIPA("EDIT")=1:"@10393",DIPA("EDIT")=2:"@10373",1:"");S Y="@10305";@10391;.12R~T~;.05T~;S Y="@10382";@10392;.13R~T~;.06T~;S Y="@10383";@10393;.14R~T~;.07T~;
"KRN",.402,1782,"DR",2,399.0222,8)
S Y="@10305";@10371;.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@10382";@10372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@10383";@10373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@10305";
"KRN",.402,1782,"DR",2,399.0222,9)
@10305;@10399;W @IOF;
"KRN",.402,1782,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@1032";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1031";.03;@1031;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1035";.04;S Y="@1035";@1032;
"KRN",.402,1782,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@1033";.05;.1;.06;.07;.08;@1033;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@1034";.09LAB OR FACILITY PRIMARY ID~;@1034;
"KRN",.402,1782,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@1035";.11;@1035;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@1036";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@1036;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@1037";42;@1037;
"KRN",.402,1782,"DR",3,355.9342)
.01:.03
"KRN",.402,1782,"DR",4,355.9342)
.01:.03
"KRN",.402,1782,"DR",99,1)
N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,1782,"DR",99,1,9.2)
N DIC S DIC=X N X S X=DIC,DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC
"KRN",.402,1782,"DR",99,1,9.3)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2)) X DR(99,1,9.2) S (D,D0,D(0))=+Y
"KRN",.402,1782,"ROU")
^IBXSA2
"KRN",.402,1782,"ROUOLD")
IBXSA2
"KRN",.402,1783,-1)
0^3
"KRN",.402,1783,0)
IB SCREEN10H^3160203.2005^@^399^^@^3160203
"KRN",.402,1783,"AR",399,542)
1^IBXSAH14
"KRN",.402,1783,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1783,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,1783,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,1783,"DIAB",2,0,399,2)
NON-VA FACILITY:
"KRN",.402,1783,"DIAB",2,0,399,9)
SECONDARY PAYER-ALT ID TYPE;"Secondary Payer - Alt Prof Prim Payer ID Type"
"KRN",.402,1783,"DIAB",2,0,399,10)
SECONDARY PAYER-ALT ID;"Secondary Payer - Alt Prof Prim Payer ID"
"KRN",.402,1783,"DIAB",2,1,399.0222,1)
PERFORMED BY:355.93:
"KRN",.402,1783,"DIAB",4,0,399,1)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1783,"DIAB",4,0,399,6)
PRIMARY PAYER-ALT ID TYPE;"Primary Payer - Alt Prof Prim Payer ID Type"
"KRN",.402,1783,"DIAB",4,0,399,7)
PRIMARY PAYER-ALT ID;"Primary Payer - Alt Prof Prim Payer ID"
"KRN",.402,1783,"DIAB",4,0,399,11)
TERTIARY PAYER-ALT ID TYPE;"Tertiary Payer - Alt Prof Prim Payer ID Type"
"KRN",.402,1783,"DIAB",4,0,399,12)
TERTIARY PAYER-ALT ID;"Tertiary Payer - Alt Prof Prim Payer ID"
"KRN",.402,1783,"DIAB",4,1,399.0222,7)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1783,"DIAB",5,1,399.0222,7)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1783,"DIAB",6,0,399,4)
FORM LOC 19-UNSPECIFIED DATA;T
"KRN",.402,1783,"DIAB",8,1,399.0222,7)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1783,"DIAB",9,1,399.0222,7)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1783,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,1783,"DIAB",10,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,1783,"DIAB",12,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,1783,"DIAB",12,1,399.0222,7)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1783,"DIAB",13,1,399.0222,7)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1783,"DR",1,399)
K DIPA S DIPA("I1")=$G(^DGCR(399,DA,"I1")),DIPA("I2")=$G(^("I2")),DIPA("I3")=$G(^("I3"));S:IBDR20'["101" Y="@102";166;167;@102;S:IBDR20'["102" Y="@103";S:'$$INPAT^IBCEF(DA) Y="@1021";215;@1021;453T~;S:'DIPA("I2") Y="@1025";454T~;
"KRN",.402,1783,"DR",1,399,1)
S:'DIPA("I3") Y="@1025";455;@1025;163PRIMARY AUTHORIZATION CODE~;253;S:'DIPA("I2") Y="@1029";230;254;S:'DIPA("I3") Y="@1029";231;255;@1029;@103;S:IBDR20'["103" Y="@104";222;@104;S:IBDR20'["104" Y="@106";232;
"KRN",.402,1783,"DR",1,399,2)
S DIPA("NVA_FC")=X S:X="" Y="@1046";^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X  S D(0)=+X S X=$S(D(0)>0:D(0),1:"");S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;K DIK;244;
"KRN",.402,1783,"DR",1,399,3)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@1046;S DIPA("OLDCLIA")=$P($G(^DGCR(399,DA,"U2")),U,13);235;I X="",$G(DIPA("OLDCLIA"))'="" S IBMDOTCN=1;@1047;I '$$XRAY^IBCEP8A(DA) S Y="@1048";
"KRN",.402,1783,"DR",1,399,4)
D MAMMODP^IBCEP8A(DA);242;@1048;@106;S:IBDR20'["106" Y="@107";459T~;D ASK19^IBCEU3(DA);@107;S:IBDR20'["107" Y="@108";252;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");
"KRN",.402,1783,"DR",1,399,5)
I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@108;S:IBDR20'["108" Y="@109";I '$G(DIPA("I1")) S Y="@109";
"KRN",.402,1783,"DR",1,399,6)
K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I1"),"@1081");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");S DIPA("OLDALTT1")=$P($G(^DGCR(399,DA,"M2")),U);140Primary Payer - Alt Prof Prim Payer ID Type~;
"KRN",.402,1783,"DR",1,399,7)
I X="",$G(DIPA("OLDALTT1"))="" S Y="@1081";I $P($G(^DGCR(399,DA,"M2")),U)="" S Y="@1081";S DIPA("OLDALTI1")=$P($G(^DGCR(399,DA,"M2")),U,2);141Primary Payer - Alt Prof Prim Payer ID~;I X="",$G(DIPA("OLDALTI1"))="" S Y="@10811";
"KRN",.402,1783,"DR",1,399,8)
S Y="@1081";@10811;140////@;@1081;I '$G(DIPA("I2")) S Y="@109";K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I2"),"@1082");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");
"KRN",.402,1783,"DR",1,399,9)
S DIPA("OLDALTT2")=$P($G(^DGCR(399,DA,"M2")),U,3);142Secondary Payer - Alt Prof Prim Payer ID Type~;I X="",$G(DIPA("OLDALTT2"))="" S Y="@1082";I $P($G(^DGCR(399,DA,"M2")),U,3)="" S Y="@1082";
"KRN",.402,1783,"DR",1,399,10)
S DIPA("OLDALTI2")=$P($G(^DGCR(399,DA,"M2")),U,4);143Secondary Payer - Alt Prof Prim Payer ID~;I X="",$G(DIPA("OLDALTI2"))="" S Y="@10821";S Y="@1082";@10821;142////@;@1082;I '$G(DIPA("I3")) S Y="@109";
"KRN",.402,1783,"DR",1,399,11)
K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I3"),"@109");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");S DIPA("OLDALTT2")=$P($G(^DGCR(399,DA,"M2")),U,5);144Tertiary Payer - Alt Prof Prim Payer ID Type~;
"KRN",.402,1783,"DR",1,399,12)
I X="",$G(DIPA("OLDALTT3"))="" S Y="@1083";I $P($G(^DGCR(399,DA,"M2")),U,5)="" S Y="@1083";S DIPA("OLDALTI3")=$P($G(^DGCR(399,DA,"M2")),U,6);145Tertiary Payer - Alt Prof Prim Payer ID~;I X="",$G(DIPA("OLDALTI3"))="" S Y="@10831";
"KRN",.402,1783,"DR",1,399,13)
S Y="@1083";@10831;145////@;@1083;@109;S:IBDR20'["109" Y="@1010";I $$TEST^IBCEF84(DA) S Y="@1090";I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@1092";I $$REQMRA^IBEFUNC(DA) S Y="@10911";27//NO FORCED PRINT;S Y="@1092";
"KRN",.402,1783,"DR",1,399,14)
@1090;D MESSAGE^IBCEF84;S Y="@1092";@10911;28//NO FORCED PRINT;@1092;@1010;
"KRN",.402,1783,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@1041";.05;.1;.06;.07;.08;@1041;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@1042";
"KRN",.402,1783,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@1042;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@1043";.11;@1043;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@1044";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@1044;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@1045";42;
"KRN",.402,1783,"DR",2,355.93,2)
@1045;
"KRN",.402,1783,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@10399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,1783,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@1038";^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@1038;
"KRN",.402,1783,"DR",2,399.0222,2)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1783,"DR",2,399.0222,3)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));
"KRN",.402,1783,"DR",2,399.0222,4)
.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC10H($G(DIPA("CRD")));K DIPA("W1");I '$G(DIPA("I1")) S Y="@10305";
"KRN",.402,1783,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10382",DIPA("EDIT")=1:"@10391",DIPA("EDIT")=2:"@10371",1:"");@10382;I '$G(DIPA("I2")) S Y="@10305";
"KRN",.402,1783,"DR",2,399.0222,6)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10383",DIPA("EDIT")=1:"@10392",DIPA("EDIT")=2:"@10372",1:"");@10383;I '$G(DIPA("I3")) S Y="@10305";
"KRN",.402,1783,"DR",2,399.0222,7)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10305",DIPA("EDIT")=1:"@10393",DIPA("EDIT")=2:"@10373",1:"");S Y="@10305";@10391;.12R~T~;.05T~;S Y="@10382";@10392;.13R~T~;.06T~;S Y="@10383";@10393;.14R~T~;.07T~;
"KRN",.402,1783,"DR",2,399.0222,8)
S Y="@10305";@10371;.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@10382";@10372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@10383";@10373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@10305";
"KRN",.402,1783,"DR",2,399.0222,9)
@10305;@10399;W @IOF;
"KRN",.402,1783,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@1032";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1031";.03;@1031;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1035";.04;S Y="@1035";@1032;
"KRN",.402,1783,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@1033";.05;.1;.06;.07;.08;@1033;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@1034";.09LAB OR FACILITY PRIMARY ID~;@1034;
"KRN",.402,1783,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@1035";.11;@1035;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@1036";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@1036;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@1037";42;@1037;
"KRN",.402,1783,"DR",3,355.9342)
.01:.03
"KRN",.402,1783,"DR",4,355.9342)
.01:.03
"KRN",.402,1783,"DR",99,1)
N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,1783,"DR",99,1,9.2)
N DIC S DIC=X N X S X=DIC,DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC
"KRN",.402,1783,"DR",99,1,9.3)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2)) X DR(99,1,9.2) S (D,D0,D(0))=+Y
"KRN",.402,1783,"ROU")
^IBXSAH
"KRN",.402,1783,"ROUOLD")
IBXSAH
"KRN",3.8,317,-1)
0^1
"KRN",3.8,317,0)
IBRFI 277 MESSAGE^PU^n^^^^
"KRN",3.8,317,2,0)
^3.801^2^2^3151207^^^
"KRN",3.8,317,2,1,0)
This mail group will be used to deliver notifications for the IBRFI 277 
"KRN",3.8,317,2,2,0)
HL7 messages.
"KRN",3.8,317,3)

"KRN",19,2348,-1)
2^5
"KRN",19,2348,0)
IB OUTPUT MANAGEMENT REPORTS^Management Reports (Billing) Menu^^M^66481^^^^^^^49
"KRN",19,2348,10,0)
^19.01IP^20^20
"KRN",19,2348,10,20,0)
11612^PCR
"KRN",19,2348,10,20,"^")
IB PRINTED CLAIMS REPORT
"KRN",19,2348,"U")
MANAGEMENT REPORTS (BILLING) M
"KRN",19,9442,-1)
2^3
"KRN",19,9442,0)
IBCE 837 EDI MENU^EDI Menu For Electronic Bills^^M^66481^^^^^^^49
"KRN",19,9442,10,0)
^19.01IP^22^9
"KRN",19,9442,10,22,0)
11611^RFI^92
"KRN",19,9442,10,22,"^")
IBRFI 277 WORKLIST
"KRN",19,9442,"U")
EDI MENU FOR ELECTRONIC BILLS
"KRN",19,11611,-1)
0^2
"KRN",19,11611,0)
IBRFI 277 WORKLIST^RFAI Management Worklist^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11611,1,0)
^^1^1^3150826^
"KRN",19,11611,1,1,0)
This will be a list manager screen to select RFI Messages to be worked.
"KRN",19,11611,25)
EN^IBRFIWL
"KRN",19,11611,"U")
RFAI MANAGEMENT WORKLIST
"KRN",19,11612,-1)
0^4
"KRN",19,11612,0)
IB PRINTED CLAIMS REPORT^Printed Claims Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11612,1,0)
^^3^3^3151012^
"KRN",19,11612,1,1,0)
This option will generate a report of claims for a specified timeframe 
"KRN",19,11612,1,2,0)
that were locally printed but which had the potential to be transmitted 
"KRN",19,11612,1,3,0)
electronically.  
"KRN",19,11612,25)
EN^IBCEMSRP
"KRN",19,11612,"U")
PRINTED CLAIMS REPORT
"KRN",101,1643,-1)
4^31
"KRN",101,1643,0)
IBCE EXIT
"KRN",101,3851,-1)
4^12
"KRN",101,3851,0)
IBCE VIEW PREV TRANS EXIT
"KRN",101,3853,-1)
4^13
"KRN",101,3853,0)
IBCE VIEW PREV TRANS SELECT
"KRN",101,3854,-1)
4^14
"KRN",101,3854,0)
IBCE VIEW PREV TRANS RESUB
"KRN",101,3855,-1)
4^16
"KRN",101,3855,0)
IBCE VIEW PREV TRANS REPORT
"KRN",101,3856,-1)
4^15
"KRN",101,3856,0)
IBCE VIEW PREV TRANS
"KRN",101,4613,-1)
0^1
"KRN",101,4613,0)
IBCE VIEW LOC PRINT MENU^PREVIOUSLY PRINTED CLAIMS MENU^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4613,4)
35^2
"KRN",101,4613,10,0)
^101.01PA^5^5
"KRN",101,4613,10,1,0)
3851^^90^
"KRN",101,4613,10,1,"^")
IBCE VIEW PREV TRANS EXIT
"KRN",101,4613,10,2,0)
3853^^10^
"KRN",101,4613,10,2,"^")
IBCE VIEW PREV TRANS SELECT
"KRN",101,4613,10,3,0)
3854^^20^
"KRN",101,4613,10,3,"^")
IBCE VIEW PREV TRANS RESUB
"KRN",101,4613,10,4,0)
3856^^60^
"KRN",101,4613,10,4,"^")
IBCE VIEW PREV TRANS
"KRN",101,4613,10,5,0)
3855^^85^
"KRN",101,4613,10,5,"^")
IBCE VIEW PREV TRANS REPORT
"KRN",101,4613,26)
D SHOW^VALM
"KRN",101,4613,28)
Action:
"KRN",101,4613,99)
63721,66039
"KRN",101,4647,-1)
0^19
"KRN",101,4647,0)
IBRFI INITIAL WL MENU^IBRFI SELECT MESSAGE^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4647,1,0)
^101.06^2^2^3151020^^^^
"KRN",101,4647,1,1,0)
Protocol Menu used to display all of the actions that can be invoked from
"KRN",101,4647,1,2,0)
the RFAI Management Worklist.
"KRN",101,4647,4)
26^4^^IBRFI INITIAL WL MENU
"KRN",101,4647,10,0)
^101.01PA^3^3
"KRN",101,4647,10,1,0)
4660^SE^100^
"KRN",101,4647,10,1,"^")
IBRFI SELECT MESSAGE
"KRN",101,4647,10,2,0)
4650^RE^200^
"KRN",101,4647,10,2,"^")
IBRFI RESORT
"KRN",101,4647,10,3,0)
1643^EX^300^
"KRN",101,4647,10,3,"^")
IBCE EXIT
"KRN",101,4647,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4647,20)
K IBFASTXT
"KRN",101,4647,26)
D SHOW^VALM
"KRN",101,4647,28)
Select Action:
"KRN",101,4647,99)
64008,46961
"KRN",101,4650,-1)
0^18
"KRN",101,4650,0)
IBRFI RESORT^ReSort Messages^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4650,20)
D SORT^IBRFIWL(1)
"KRN",101,4650,99)
63741,54902
"KRN",101,4651,-1)
0^2
"KRN",101,4651,0)
IBJP IB REVENUE CODES MENU^Revenue Code Exclusions Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4651,2,0)
^101.02A^^0
"KRN",101,4651,4)
26^4
"KRN",101,4651,10,0)
^101.01PA^4^3
"KRN",101,4651,10,2,0)
4653^DC^5^
"KRN",101,4651,10,2,"^")
IBJP IB REVENUE CODES DEL
"KRN",101,4651,10,3,0)
4654^AC^2^
"KRN",101,4651,10,3,"^")
IBJP IB REVENUE CODES ADD
"KRN",101,4651,10,4,0)
4655^EX^7^^^
"KRN",101,4651,10,4,"^")
IBJP IB REVENUE CODES EXIT
"KRN",101,4651,26)
D SHOW^VALM
"KRN",101,4651,99)
63784,52434
"KRN",101,4653,-1)
0^4
"KRN",101,4653,0)
IBJP IB REVENUE CODES DEL^Delete Revenue Code^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4653,4)
^^^DC
"KRN",101,4653,20)
D RCDEL^IBJPS5
"KRN",101,4653,99)
63783,52827
"KRN",101,4654,-1)
0^3
"KRN",101,4654,0)
IBJP IB REVENUE CODES ADD^Add Revenue Code^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4654,4)
^^^AC
"KRN",101,4654,10,0)
^101.01PA^^0
"KRN",101,4654,20)
D RCADD^IBJPS5
"KRN",101,4654,99)
63784,50765
"KRN",101,4655,-1)
0^5
"KRN",101,4655,0)
IBJP IB REVENUE CODES EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4655,2,0)
^101.02A^^0
"KRN",101,4655,4)
^^^EX
"KRN",101,4655,15)
Q
"KRN",101,4655,20)
Q
"KRN",101,4655,99)
63783,60719
"KRN",101,4656,-1)
0^10
"KRN",101,4656,0)
IBJP ADMIN CONTRACTOR MED ADD TYPE^Add ID Type^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4656,4)
^^^AT
"KRN",101,4656,20)
D ADD^IBJPS6(1)
"KRN",101,4656,99)
63825,66514
"KRN",101,4657,-1)
0^11
"KRN",101,4657,0)
IBJP ADMIN CONTRACTOR MED DEL TYPE^Delete ID Type^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4657,4)
^^^DT
"KRN",101,4657,20)
D DEL^IBJPS6(1)
"KRN",101,4657,99)
63825,66528
"KRN",101,4658,-1)
0^9
"KRN",101,4658,0)
IBJP ADMIN CONTRACTOR MED MENU^Admin Contractor Med Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4658,4)
26^4^^
"KRN",101,4658,10,0)
^101.01PA^3^3
"KRN",101,4658,10,1,0)
4656^AT^10^
"KRN",101,4658,10,1,"^")
IBJP ADMIN CONTRACTOR MED ADD TYPE
"KRN",101,4658,10,2,0)
4657^DT^20^
"KRN",101,4658,10,2,"^")
IBJP ADMIN CONTRACTOR MED DEL TYPE
"KRN",101,4658,10,3,0)
1643^EX^30^
"KRN",101,4658,10,3,"^")
IBCE EXIT
"KRN",101,4658,26)
D SHOW^VALM
"KRN",101,4658,28)
Select Action: 
"KRN",101,4658,99)
64054,43036
"KRN",101,4660,-1)
0^17
"KRN",101,4660,0)
IBRFI SELECT MESSAGE^Select Message^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4660,1,0)
^^2^2^3150826^
"KRN",101,4660,1,1,0)
This action allows the user to select an RFAI message to view the
"KRN",101,4660,1,2,0)
details of the message, add a comment or remove it from the list.
"KRN",101,4660,20)
D SMSG^IBRFIWL
"KRN",101,4660,99)
63790,34962
"KRN",101,4661,-1)
0^8
"KRN",101,4661,0)
IBJP ADMIN CONTRACTOR COM DEL TYPE^Delete ID Type^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4661,4)
^^^DT
"KRN",101,4661,20)
D DEL^IBJPS6(2)
"KRN",101,4661,99)
63825,66489
"KRN",101,4662,-1)
0^7
"KRN",101,4662,0)
IBJP ADMIN CONTRACTOR COM ADD TYPE^Add ID Type^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4662,4)
^^^AT
"KRN",101,4662,20)
D ADD^IBJPS6(2)
"KRN",101,4662,99)
63825,66463
"KRN",101,4663,-1)
0^6
"KRN",101,4663,0)
IBJP ADMIN CONTRACTOR COM MENU^Admin Contractor Com Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4663,4)
26^4
"KRN",101,4663,10,0)
^101.01PA^3^3
"KRN",101,4663,10,1,0)
4662^AT^10^
"KRN",101,4663,10,1,"^")
IBJP ADMIN CONTRACTOR COM ADD TYPE
"KRN",101,4663,10,2,0)
4661^DT^20^
"KRN",101,4663,10,2,"^")
IBJP ADMIN CONTRACTOR COM DEL TYPE
"KRN",101,4663,10,3,0)
1643^EX^30^
"KRN",101,4663,10,3,"^")
IBCE EXIT
"KRN",101,4663,26)
D SHOW^VALM
"KRN",101,4663,28)
Select Action: 
"KRN",101,4663,99)
64008,46646
"KRN",101,4664,-1)
0^21
"KRN",101,4664,0)
IBRFI DETAIL REVIEW^Review Status^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4664,1,0)
^^1^1^3150909^
"KRN",101,4664,1,1,0)
Used to mark/unmark a selected message as 'In-Progress'.
"KRN",101,4664,20)
D REVIEW^IBRFIWL1
"KRN",101,4664,99)
63804,22156
"KRN",101,4665,-1)
0^22
"KRN",101,4665,0)
IBRFI DETAIL COMMENT^Enter/View Comments^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4665,1,0)
^101.06^1^1^3151021^^^^
"KRN",101,4665,1,1,0)
Used to enter/edit the comment for a selected message.
"KRN",101,4665,10,0)
^101.01PA^^0
"KRN",101,4665,15)
D INIT^IBRFIWL1
"KRN",101,4665,20)
D EN^IBRFIN
"KRN",101,4665,99)
63846,42953
"KRN",101,4666,-1)
0^23
"KRN",101,4666,0)
IBRFI DETAIL REMOVE^Remove Entry^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4666,1,0)
^^1^1^3150909^
"KRN",101,4666,1,1,0)
Used to manually removed the selected message.
"KRN",101,4666,20)
D REMOVE^IBRFIWL1
"KRN",101,4666,99)
63805,34903
"KRN",101,4667,-1)
0^24
"KRN",101,4667,0)
IBRFI CSA TPJI^Third Party Joint Inq.^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4667,1,0)
^^3^3^3150909^
"KRN",101,4667,1,1,0)
Used to perform a set of actions and screens for Third Party AR/IB Joint 
"KRN",101,4667,1,2,0)
Inquiry and provide detailed information on any Third Party Claim for the 
"KRN",101,4667,1,3,0)
selected message.
"KRN",101,4667,20)
D TPJI^IBRFIWL1
"KRN",101,4667,99)
63805,35053
"KRN",101,4668,-1)
0^20
"KRN",101,4668,0)
IBRFI DETAIL MENU^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4668,1,0)
^101.06^2^2^3151021^^^^
"KRN",101,4668,1,1,0)
Used to provide the actions that may be performed after selecting a 
"KRN",101,4668,1,2,0)
specified message.
"KRN",101,4668,4)
26^5
"KRN",101,4668,10,0)
^101.01PA^7^5
"KRN",101,4668,10,1,0)
4664^RS^100^
"KRN",101,4668,10,1,"^")
IBRFI DETAIL REVIEW
"KRN",101,4668,10,3,0)
4667^TJ^400^^^3rd Party Joint Inq
"KRN",101,4668,10,3,"^")
IBRFI CSA TPJI
"KRN",101,4668,10,4,0)
4666^RE^200^
"KRN",101,4668,10,4,"^")
IBRFI DETAIL REMOVE
"KRN",101,4668,10,6,0)
4665^EC^300^
"KRN",101,4668,10,6,"^")
IBRFI DETAIL COMMENT
"KRN",101,4668,10,7,0)
1643^EX^500^
"KRN",101,4668,10,7,"^")
IBCE EXIT
"KRN",101,4668,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4668,20)
K IBFASTXT
"KRN",101,4668,26)
D SHOW^VALM
"KRN",101,4668,28)
Select Action: 
"KRN",101,4668,99)
64008,46973
"KRN",101,4673,-1)
0^27
"KRN",101,4673,0)
IBRFI ENTER COMMENTS 1^Enter Comments^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4673,10,0)
^101.01PA
"KRN",101,4673,20)
D COMMENT^IBRFIWL1
"KRN",101,4673,99)
63846,36280
"KRN",101,4674,-1)
0^26
"KRN",101,4674,0)
IBRFI COMMENTS MENU^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4674,4)
26^4
"KRN",101,4674,10,0)
^101.01PA^4^3
"KRN",101,4674,10,3,0)
4673^EC^10^
"KRN",101,4674,10,3,"^")
IBRFI ENTER COMMENTS 1
"KRN",101,4674,10,4,0)
1643^EX^50^
"KRN",101,4674,10,4,"^")
IBCE EXIT
"KRN",101,4674,26)
D SHOW^VALM
"KRN",101,4674,28)
Select Action: 
"KRN",101,4674,99)
64008,47017
"KRN",101,4675,-1)
0^29
"KRN",101,4675,0)
IBRFI 277 IN^IBRFI 277 Server^^E^^^^^^^^
"KRN",101,4675,1,0)
^101.06^1^1^3160104^^^
"KRN",101,4675,1,1,0)
This is the event driver protocol for incoming X12 277 RFAI messages.
"KRN",101,4675,99)
63854,43970
"KRN",101,4675,770)
RFAI FSC^IB RFAI VISTA^EHC^E12^^^^^^2.6^
"KRN",101,4675,772)
D ^IBRFIHLI
"KRN",101,4675,775,0)
^101.0775PA^1^1
"KRN",101,4675,775,1,0)
4676
"KRN",101,4675,775,1,"^")
IBRFI 277 RESPONSE
"KRN",101,4676,-1)
0^30
"KRN",101,4676,0)
IBRFI 277 RESPONSE^277 Response Message^^S^^^^^^^^
"KRN",101,4676,1,0)
^^1^1^3160105^
"KRN",101,4676,1,1,0)
This is subscriber protocol for 277 responses.
"KRN",101,4676,99)
63922,46159
"KRN",101,4676,770)
^IB RFAI VISTA^^E12^^^VACHY^^^^ACK
"KRN",101,4676,771)
D ^IBRFIHLI
"KRN",101,4676,773)
1^1^0
"KRN",409.61,738,-1)
0^1
"KRN",409.61,738,0)
IBCE VIEW LOC PRINT^1^^126^5^19^1^1^^IBCE VIEW LOC PRINT MENU^PREVIOUSLY PRINTED CLAIMS^1^^1
"KRN",409.61,738,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,738,"ARRAY")
 ^TMP("IB_PREV_CLAIM_LIST",$J)
"KRN",409.61,738,"COL",0)
^409.621^10^10
"KRN",409.61,738,"COL",1,0)
CLAIM^7^9^Claim #^^1
"KRN",409.61,738,"COL",2,0)
FORM^17^4^Form
"KRN",409.61,738,"COL",3,0)
TYPE^22^5^Type
"KRN",409.61,738,"COL",4,0)
SEQ^27^3^Seq
"KRN",409.61,738,"COL",5,0)
STATUS^32^11^Status
"KRN",409.61,738,"COL",6,0)
OTHER_PAYERS^51^18^Other Payer(s)
"KRN",409.61,738,"COL",7,0)
LAST_PRINT^93^13^Last Printed
"KRN",409.61,738,"COL",8,0)
NUMBER^1^6^#
"KRN",409.61,738,"COL",9,0)
ARSTAT^44^4^A/R
"KRN",409.61,738,"COL",10,0)
PATIENTNAME^71^18^Patient Name
"KRN",409.61,738,"COL","AIDENT",1,1)

"KRN",409.61,738,"COL","B","ARSTAT",9)

"KRN",409.61,738,"COL","B","CLAIM",1)

"KRN",409.61,738,"COL","B","FORM",2)

"KRN",409.61,738,"COL","B","LAST_PRINT",7)

"KRN",409.61,738,"COL","B","NUMBER",8)

"KRN",409.61,738,"COL","B","OTHER_PAYERS",6)

"KRN",409.61,738,"COL","B","PATIENTNAME",10)

"KRN",409.61,738,"COL","B","SEQ",4)

"KRN",409.61,738,"COL","B","STATUS",5)

"KRN",409.61,738,"COL","B","TYPE",3)

"KRN",409.61,738,"FNL")
D EXIT^IBCEPTC2
"KRN",409.61,738,"HDR")
D HDR^IBCEPTC2
"KRN",409.61,738,"HLP")
Q
"KRN",409.61,738,"INIT")
D INIT^IBCEPTC2
"KRN",409.61,748,-1)
0^2
"KRN",409.61,748,0)
IBJP IB REVENUE CODES^1^^80^4^19^1^1^Revenue Codes^IBJP IB REVENUE CODES MENU^Excluded Revenue Codes^1^^1
"KRN",409.61,748,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,748,"ARRAY")
 ^TMP("IBJPS5",$J)
"KRN",409.61,748,"COL",0)
^409.621^4^3
"KRN",409.61,748,"COL",2,0)
RVCD^10^3^RCD
"KRN",409.61,748,"COL",3,0)
DESCR^17^30^DESCRIPTION
"KRN",409.61,748,"COL",4,0)
NBR^5^1^#
"KRN",409.61,748,"COL","B","DESCR",3)

"KRN",409.61,748,"COL","B","NBR",4)

"KRN",409.61,748,"COL","B","RVCD",2)

"KRN",409.61,748,"FNL")
D EXIT^IBJPS5
"KRN",409.61,748,"HDR")
D HDR^IBJPS5
"KRN",409.61,748,"HLP")
D HELP^IBJPS5
"KRN",409.61,748,"INIT")
D INIT^IBJPS5
"KRN",409.61,749,-1)
0^4
"KRN",409.61,749,0)
IBJP ADMIN CONTRACTOR MED^1^^80^4^20^1^1^^IBJP ADMIN CONTRACTOR MED MENU^Alt Primary Payer ID Types^1^^1
"KRN",409.61,749,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,749,"ARRAY")
 ^TMP("IBJPS6",$J)
"KRN",409.61,749,"COL",0)
^409.621^2^2
"KRN",409.61,749,"COL",1,0)
NUMBER^1^4
"KRN",409.61,749,"COL",2,0)
ADMIN CONT TYPE^6^66^
"KRN",409.61,749,"COL","B","ADMIN CONT TYPE",2)

"KRN",409.61,749,"COL","B","NUMBER",1)

"KRN",409.61,749,"FNL")
D EXIT^IBJPS6(1)
"KRN",409.61,749,"HDR")
D HDR^IBJPS6(1)
"KRN",409.61,749,"HLP")
D HELP^IBJPS6(1)
"KRN",409.61,749,"INIT")
D INIT^IBJPS6(1)
"KRN",409.61,750,-1)
0^5
"KRN",409.61,750,0)
IBRFI 277 WL^1^^80^3^21^1^1^RFAI^IBRFI INITIAL WL MENU^RFAI Management Worklist^1^^1
"KRN",409.61,750,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,750,"ARRAY")
 ^TMP("IBRFIWL",$J)
"KRN",409.61,750,"COL",0)
^409.621^7^7
"KRN",409.61,750,"COL",1,0)
NUMBER^1^4
"KRN",409.61,750,"COL",2,0)
BILL^6^8^Bill #
"KRN",409.61,750,"COL",3,0)
PNAME^16^16^Payer Name
"KRN",409.61,750,"COL",4,0)
PANAME^34^20^Patient Name
"KRN",409.61,750,"COL",5,0)
SSN^56^4^ SSN
"KRN",409.61,750,"COL",6,0)
SERVICE^62^8^Svc Date
"KRN",409.61,750,"COL",7,0)
CURBAL^72^8^Curr Bal
"KRN",409.61,750,"COL","B","BILL",2)

"KRN",409.61,750,"COL","B","CURBAL",7)

"KRN",409.61,750,"COL","B","NUMBER",1)

"KRN",409.61,750,"COL","B","PANAME",4)

"KRN",409.61,750,"COL","B","PNAME",3)

"KRN",409.61,750,"COL","B","SERVICE",6)

"KRN",409.61,750,"COL","B","SSN",5)

"KRN",409.61,750,"FNL")
D EXIT^IBRFIWL
"KRN",409.61,750,"HDR")
D HDR^IBRFIWL
"KRN",409.61,750,"HLP")
D HELP^IBRFIWL
"KRN",409.61,750,"INIT")
D INIT^IBRFIWL
"KRN",409.61,751,-1)
0^3
"KRN",409.61,751,0)
IBJP ADMIN CONTRACTOR COM^1^^80^4^20^1^1^^IBJP ADMIN CONTRACTOR COM MENU^Alt Primary Payer ID Types^1^^1
"KRN",409.61,751,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,751,"ARRAY")
 ^TMP("IBJPS6",$J)
"KRN",409.61,751,"COL",0)
^409.621^2^2
"KRN",409.61,751,"COL",1,0)
NUMBER^1^4
"KRN",409.61,751,"COL",2,0)
ADMIN CONT TYPE^6^66^
"KRN",409.61,751,"COL","B","ADMIN CONT TYPE",2)

"KRN",409.61,751,"COL","B","NUMBER",1)

"KRN",409.61,751,"FNL")
D EXIT^IBJPS6(2)
"KRN",409.61,751,"HDR")
D HDR^IBJPS6(2)
"KRN",409.61,751,"HLP")
D HELP^IBJPS6(2)
"KRN",409.61,751,"INIT")
D INIT^IBJPS6(2)
"KRN",409.61,752,-1)
0^6
"KRN",409.61,752,0)
IBRFI 277 DETAIL WL^1^^80^6^20^1^1^Message Detail^IBRFI DETAIL MENU^RFAI Message Detail^1^^1
"KRN",409.61,752,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,752,"ARRAY")
 ^TMP("IBRFIWL1",$J)
"KRN",409.61,752,"FNL")
D EXIT^IBRFIWL1
"KRN",409.61,752,"HDR")
D HDR^IBRFIWL1
"KRN",409.61,752,"HLP")
D HELP^IBRFIWL1
"KRN",409.61,752,"INIT")
D INIT^IBRFIWL1
"KRN",409.61,753,-1)
0^7
"KRN",409.61,753,0)
IBRFI COMMENTS^1^^80^4^21^0^1^RFI Comments^IBRFI COMMENTS MENU^RFAI Claim Comment History^1^^1
"KRN",409.61,753,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,753,"COL",0)
^409.621^2^2
"KRN",409.61,753,"COL",1,0)
ENTERED^1^79^^H
"KRN",409.61,753,"COL",2,0)
MESSAGE^3^75
"KRN",409.61,753,"COL","B","ENTERED",1)

"KRN",409.61,753,"COL","B","MESSAGE",2)

"KRN",409.61,753,"FNL")
D EXIT^IBRFIN
"KRN",409.61,753,"HDR")
D HDR^IBRFIN
"KRN",409.61,753,"HLP")
D HELP^IBRFIN
"KRN",409.61,753,"INIT")
D INIT^IBRFIN
"KRN",771,229,-1)
0^1
"KRN",771,229,0)
IB RFAI VISTA^a^^IBRFI 277 MESSAGE^^^USA
"KRN",771,229,"EC")
^~\&
"KRN",771,229,"FS")
|
"KRN",771,229,"MSG",0)
^771.06P^1^1
"KRN",771,229,"MSG",1,0)
INV
"KRN",771,229,"MSG",1,"R")
IBRFIHLI
"KRN",771,229,"SEG",0)
^771.05P
"KRN",771,230,-1)
0^2
"KRN",771,230,0)
RFAI FSC^a^^IBRFI 277 MESSAGE^^^USA
"KRN",771,230,"EC")
^~\&
"KRN",771,230,"FS")
|
"KRN",771,230,"MSG",0)
^771.06P^^0
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",49,-1)
1^1
"PKG",49,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",49,20,0)
^9.402P^1^1
"PKG",49,20,1,0)
2^^IBAXDR
"PKG",49,20,1,1)

"PKG",49,20,"B",2,1)

"PKG",49,22,0)
^9.49I^1^1
"PKG",49,22,1,0)
2.0^2940321^2960627
"PKG",49,22,1,"PAH",1,0)
547^3160609
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
61
"RTN","IBCAPP2")
0^52^B52487921^B49339546
"RTN","IBCAPP2",1,0)
IBCAPP2 ;ALB/GEF - Claims Auto Processing ;14-OCT-10
"RTN","IBCAPP2",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,516,547**;21-MAR-94;Build 119
"RTN","IBCAPP2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCAPP2",4,0)
 ;
"RTN","IBCAPP2",5,0)
 ; IBMRANOT = 1 when dealing with the COB Management Worklist.   
"RTN","IBCAPP2",6,0)
 ;            It is set by the entry action in the option file. 
"RTN","IBCAPP2",7,0)
 ;
"RTN","IBCAPP2",8,0)
CAP ; Build list from CAP x-ref entrypoint.  Called from BLD^IBCECOB1 for non-MRA worklist
"RTN","IBCAPP2",9,0)
 N IBDA,IBIFN
"RTN","IBCAPP2",10,0)
 S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"CAP",1,IBIFN)) Q:'IBIFN  D
"RTN","IBCAPP2",11,0)
 .; screen all eob's for the claim to see if claim can be on worklist
"RTN","IBCAPP2",12,0)
 .; IBDA= ien of 1st eob to pass all checks - or - 0 if none passed - or - -1 if process as paper EOB
"RTN","IBCAPP2",13,0)
 .S IBDA=$$MELG(IBIFN,IBMRADUP) Q:'IBDA
"RTN","IBCAPP2",14,0)
 .D BLD1(IBIFN,$S(IBDA=-1:"",1:IBDA))
"RTN","IBCAPP2",15,0)
 Q
"RTN","IBCAPP2",16,0)
 ;
"RTN","IBCAPP2",17,0)
BLD1(IBIFN,IBDA) ;
"RTN","IBCAPP2",18,0)
 N IB3611,IBTXT,IBX,IBPY,I,IB364,IBDT,IBAPY,IBB,IBB364,IBBPY,IBDAY,IBEUT
"RTN","IBCAPP2",19,0)
 N IBINS1,IBINS2,IBMRACNT,Z,Z0,IBMUT,IBNBAL,IBNDI1,IBNDI2,IBNDI3,IBNDM
"RTN","IBCAPP2",20,0)
 N IBPTRSP,IBQ,IBSEQ,IBSRVC,IBEXPY,IBFND,IBINS,IBNDS,IBOAM,IBPTNM,IBDENDUP,IBDIV
"RTN","IBCAPP2",21,0)
 ;
"RTN","IBCAPP2",22,0)
 Q:$D(^TMP("IBCOBSTX",$J,IBIFN))  ;show each bill once on the worklist
"RTN","IBCAPP2",23,0)
 S IBB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCAPP2",24,0)
 ;
"RTN","IBCAPP2",25,0)
 ; MRD;IB*2.0*516 - Use Division to sort claims.  If user has specified
"RTN","IBCAPP2",26,0)
 ; one or more divisions to include, then quit if this claim's division
"RTN","IBCAPP2",27,0)
 ; is not on that list.
"RTN","IBCAPP2",28,0)
 ;
"RTN","IBCAPP2",29,0)
 S IBDIV=$P(IBB,U,22) I IBDIV="" S IBDIV="UNKNOWN"
"RTN","IBCAPP2",30,0)
 I $D(^TMP("IBBIL-DIV",$J)),'$D(^TMP("IBBIL-DIV",$J,IBDIV)) Q
"RTN","IBCAPP2",31,0)
 ;
"RTN","IBCAPP2",32,0)
 S IBNDS=$G(^DGCR(399,IBIFN,"S")),IBNDI1=$G(^("I1")),IBNDI2=$G(^("I2")),IBNDI3=$G(^("I3")),IBNDM=$G(^("M"))
"RTN","IBCAPP2",33,0)
 S IBMUT=+$P(IBNDS,U,8),IBEUT=+$P(IBNDS,U,2)
"RTN","IBCAPP2",34,0)
 S IBINS="",IBSEQ=$$COBN^IBCEF(IBIFN),IB364="UNKNOWN",IBDT="UNKNOWN"
"RTN","IBCAPP2",35,0)
 ; IB*2.0*547 - allow users to search for particular payer sequence, default is B for Both
"RTN","IBCAPP2",36,0)
 I $G(IBSRCH)="P",IBSEQ'=1 Q  ; quit of user wants primary claims and current sequence not primary
"RTN","IBCAPP2",37,0)
 I $G(IBSRCH)="S",IBSEQ=1 Q  ; quit if user wants secondary/tertiary and current sequence is primary
"RTN","IBCAPP2",38,0)
 S IB3611=$S($G(IBDA)'="":$G(^IBM(361.1,IBDA,0)),1:"")
"RTN","IBCAPP2",39,0)
 I $G(IB3611)'="" S IB364=$P(IB3611,U,19),IBDT=+$P(IB3611,U,6),IBSEQ=$P(IB3611,U,15)
"RTN","IBCAPP2",40,0)
 F I=1:1:3 S Z="IBNDI"_I I @Z D
"RTN","IBCAPP2",41,0)
 . N Q
"RTN","IBCAPP2",42,0)
 . S Q=(IBSEQ=I)
"RTN","IBCAPP2",43,0)
 . I Q S IBINS1=+@Z_U_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCAPP2",44,0)
 . S IBINS=IBINS_$S(IBINS="":"",1:", ")_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCAPP2",45,0)
 ;
"RTN","IBCAPP2",46,0)
 ; IB*2.0*547 - removed below code since only applicable for MRW, not CBW.  For CBW, always should be secondary insurance.
"RTN","IBCAPP2",47,0)
 ; Get the payer/insurance company that comes after Medicare WNR
"RTN","IBCAPP2",48,0)
 ; If WNR is Primary, get the secondary ins. co.
"RTN","IBCAPP2",49,0)
 ; If WNR is secondary, get the tertiary ins. co.
"RTN","IBCAPP2",50,0)
 ;D  I $P($G(IBINS2),U,2)="" S $P(IBINS2,U,2)="UNKNOWN"
"RTN","IBCAPP2",51,0)
 ;. I $$WNRBILL^IBEFUNC(IBIFN,1) S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U) Q
"RTN","IBCAPP2",52,0)
 ;. S IBINS2=+IBNDI3_U_$P($G(^DIC(36,+IBNDI3,0)),U)
"RTN","IBCAPP2",53,0)
 S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U)
"RTN","IBCAPP2",54,0)
 ;
"RTN","IBCAPP2",55,0)
 S IBFND=0
"RTN","IBCAPP2",56,0)
 ; biller entry not ALL and no biller, then get entered/edited by user
"RTN","IBCAPP2",57,0)
 I $D(^TMP("IBBIL",$J)) D  Q:'IBFND
"RTN","IBCAPP2",58,0)
 . S IBFND=$S($D(^TMP("IBBIL",$J,IBMUT)):IBMUT,$D(^TMP("IBBIL",$J,IBEUT)):IBEUT,1:0)
"RTN","IBCAPP2",59,0)
 S Z=$S(IBFND:IBFND,IBMUT:IBMUT,1:IBEUT)
"RTN","IBCAPP2",60,0)
 S IBMUT=$P($G(^VA(200,+Z,0)),U)_"~"_Z
"RTN","IBCAPP2",61,0)
 S:'$P(IBMUT,"~",2) IBMUT="UNKNOWN~0"
"RTN","IBCAPP2",62,0)
 S IBBPY=+$$COBN^IBCEF(IBIFN),IBQ=1
"RTN","IBCAPP2",63,0)
 ;IBQ;1=EOB without subsequent insurer,0=COB,2=0 balance
"RTN","IBCAPP2",64,0)
 D  ;I IBQ Q
"RTN","IBCAPP2",65,0)
 . ;Check for no reimbursable subsequent insurance
"RTN","IBCAPP2",66,0)
 .  F I=IBBPY+1:1:3 D  Q:'IBQ
"RTN","IBCAPP2",67,0)
 .. S Z="IBNDI"_I,Z=$G(@Z)
"RTN","IBCAPP2",68,0)
 .. I $P($G(^DIC(36,+Z,0)),U,2)="N" S IBQ=0 Q
"RTN","IBCAPP2",69,0)
 . ;Check if next ins doesn't exist or next bill# already created
"RTN","IBCAPP2",70,0)
 . S Z="IBNDI"_(IBBPY+1),Z=$G(@Z)
"RTN","IBCAPP2",71,0)
 . I Z,'$P($G(^DGCR(399,IBIFN,"M1")),U,5+IBBPY) S IBQ=0
"RTN","IBCAPP2",72,0)
 ;
"RTN","IBCAPP2",73,0)
 ; Days since transmission of latest bill in COB - IBDAY
"RTN","IBCAPP2",74,0)
 S IBDAY=+$P($G(^DGCR(399,IBIFN,"TX")),U,2) I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1)
"RTN","IBCAPP2",75,0)
 ; if no Last Electronic Extract Date on file 399, get it from file 364
"RTN","IBCAPP2",76,0)
 I 'IBDAY D  I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1) ;calc. the difference
"RTN","IBCAPP2",77,0)
 . S IBB364=$$LAST364^IBCEF4(IBIFN) I IBB364'="" S IBDAY=+$P($P($G(^IBA(364,IBB364,0)),U,4),".",1)
"RTN","IBCAPP2",78,0)
 ;
"RTN","IBCAPP2",79,0)
 S IBAPY=$$TPR^PRCAFN(IBIFN) ; payment on this bill from A/R  IA#380
"RTN","IBCAPP2",80,0)
 S:$G(IBDA)'="" IBEXPY=+$G(^IBM(361.1,IBDA,1))       ; payer paid amount
"RTN","IBCAPP2",81,0)
 S IBPY=$S(IBAPY:IBAPY,1:+$G(IBEXPY))
"RTN","IBCAPP2",82,0)
 S IBOAM=+$G(^DGCR(399,IBIFN,"U1"))     ; total charges for bill
"RTN","IBCAPP2",83,0)
 ; Don't include claim if AR STATUS is COLLECTED/CLOSED and no subsequent payer and not one of the TRICARE/Champus claims that needs to be evaluated for Pt Payment,remove from list and quit
"RTN","IBCAPP2",84,0)
 I $P($$BILL^RCJIBFN2(IBIFN),U,2)=22 S IBX=$$EOB^IBCNSBL2(IBIFN,IBOAM,IBPY,.IBTXT) I '$D(IBTXT) D RMV(IBIFN) Q
"RTN","IBCAPP2",85,0)
 S IBNBAL=IBOAM-IBPY
"RTN","IBCAPP2",86,0)
 S IBPTRSP=$S(IBNBAL>0:IBNBAL,1:0)
"RTN","IBCAPP2",87,0)
 I IBNBAL'>0 S IBQ=2
"RTN","IBCAPP2",88,0)
 S IBPTNM=$P($G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0)),U) I IBPTNM="" S IBPTNM="UNKNOWN"
"RTN","IBCAPP2",89,0)
 S IBSRVC=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCAPP2",90,0)
 ; IB*2.0*547 - added primary insurance as a possible sort, had to split into 2 lines (too long)
"RTN","IBCAPP2",91,0)
 S Z0=$S(IBSRT="B":IBMUT,IBSRT="D":-IBDAY,IBSRT="I":$P(IBINS2,U,2)_"~"_$P(IBINS2,U),IBSRT="M":$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13)),IBSRT="R":-IBPTRSP,IBSRT="P":IBPTNM,IBSRT="S":+IBSRVC,1:+IBDT)
"RTN","IBCAPP2",92,0)
 S:IBSRT="K" Z0=$P($G(^DIC(36,+IBNDI1,0)),U)_"~"_+IBNDI1
"RTN","IBCAPP2",93,0)
 S:((IBSRT="M")&(Z0="")) Z0="UNKNOWN"   ;USE UNKNOWN IF NOT SET - BI;IB*2.0*432
"RTN","IBCAPP2",94,0)
 ;
"RTN","IBCAPP2",95,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCAPP2",96,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_$G(IBDA)_U_$$HIS(IBIFN)_U_$G(IBDAY)_U_$G(IBDT)_U_IBQ_U_$G(IB364)_U_IBSEQ_U_$G(IBEXPY)_U_IBPTRSP
"RTN","IBCAPP2",97,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN,1)=$S($G(IB3611)="":"No EEOB Received ",1:$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16))
"RTN","IBCAPP2",98,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_$G(IBDA)_U_$$HIS(IBIFN)_U_$G(IBDAY)_U_$G(IBDT)_U_IBQ_U_$G(IB364)_U_IBSEQ_U_$G(IBEXPY)_U_IBPTRSP
"RTN","IBCAPP2",99,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1)=$S($G(IB3611)="":"No EEOB Received ",1:$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16))
"RTN","IBCAPP2",100,0)
 S ^TMP("IBCOBSTX",$J,IBIFN)=$G(IBDA)  ;keep track of compiled IBIFN's
"RTN","IBCAPP2",101,0)
 ;
"RTN","IBCAPP2",102,0)
 ; Save some data when there are multiple MRA's on file for this bill
"RTN","IBCAPP2",103,0)
 S IBMRACNT=$$MRACNT^IBCEMU1(IBIFN,$G(IBMRANOT))   ;WCJ IB*2.0*432
"RTN","IBCAPP2",104,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCAPP2",105,0)
 ;I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCAPP2",106,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCAPP2",107,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=$G(IBDENDUP)
"RTN","IBCAPP2",108,0)
 ;S:$G(IBDA)'="" $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=$$DENDUP^IBCEMU4(IBDA,1)
"RTN","IBCAPP2",109,0)
 I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCAPP2",110,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCAPP2",111,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,4)=$G(IBDENDUP)
"RTN","IBCAPP2",112,0)
 S:$G(IBDA)'="" $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,4)=$$DENDUP^IBCEMU4(IBDA,1)
"RTN","IBCAPP2",113,0)
 Q
"RTN","IBCAPP2",114,0)
 ;
"RTN","IBCAPP2",115,0)
HIS(IBIFN) ; COB history
"RTN","IBCAPP2",116,0)
 N A,B,IBST,IBBIL,IBHIS
"RTN","IBCAPP2",117,0)
 S IBHIS="",A=0 F  S A=$O(^IBM(361.1,"ABS",IBIFN,A)) Q:'A  S B=0 F  S B=$O(^IBM(361.1,"ABS",IBIFN,A,B)) Q:'B  D
"RTN","IBCAPP2",118,0)
 . S IBST=$P($G(^IBM(361.1,B,0)),U,4),IBBIL=$P($G(^DGCR(399,IBIFN,"M1")),U,4+A)   ;WCJ IB*2.0*432 added $G
"RTN","IBCAPP2",119,0)
 . Q:IBBIL=""
"RTN","IBCAPP2",120,0)
 . S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",1:"TERTIARY")_" "_$S(IBST:"MRA",1:"EOB")_" RECEIVED - "_IBBIL
"RTN","IBCAPP2",121,0)
 I '$D(^IBM(361.1,"ABS",IBIFN)) F A=1:1:3 S IBBIL=$P($G(^DGCR(399,IBIFN,"M1")),U,4+A) I IBBIL'="" S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",A=3:"TERTIARY",1:"UNKNOWN")_" No EOB RECEIVED - "_IBBIL
"RTN","IBCAPP2",122,0)
 Q IBHIS
"RTN","IBCAPP2",123,0)
 ;
"RTN","IBCAPP2",124,0)
MELG(IBIFN,IBMRADUP) ; function to check all EOBs for a claim and determine if they are
"RTN","IBCAPP2",125,0)
 ; eligible for inclusion on the COB management worklist, uses both B & C x-ref
"RTN","IBCAPP2",126,0)
 ; IBIFN - claim ien (required)
"RTN","IBCAPP2",127,0)
 ; IBMRADUP - indicates user said NO to "include denied for duplicate" prompt
"RTN","IBCAPP2",128,0)
 ;
"RTN","IBCAPP2",129,0)
 ; Returns EOB ien to use for display, if at least 1 EOB passed all checks
"RTN","IBCAPP2",130,0)
 ; if multiple EOBs passed but some have filing errors, returns the 1st EOB found that does NOT have filing errors
"RTN","IBCAPP2",131,0)
 ; if all EOBs have filing errors, tries to find one that is a PROCESSED status and return that one for CBW display
"RTN","IBCAPP2",132,0)
 ; Returns -1 if claim should appear on the worklist with no EOB
"RTN","IBCAPP2",133,0)
 ; Returns 0 if no EOBs passed the checks and claim should not appear on the worklist, also removes it
"RTN","IBCAPP2",134,0)
 ;
"RTN","IBCAPP2",135,0)
 ; IBCK = Total number of EOBs found for this claim ien
"RTN","IBCAPP2",136,0)
 ; IBECT = Total number of EOBs that failed the EOB TYPE check
"RTN","IBCAPP2",137,0)
 ; IBCT = Total number of EOBs for a claim that passed ALL the checks
"RTN","IBCAPP2",138,0)
 ;
"RTN","IBCAPP2",139,0)
 N IBDA,IBCT,IBEOBNDX,IBEOB,IB3611,IBCK,IBETC
"RTN","IBCAPP2",140,0)
 S IBCT=0,IBCK=0,IBETC=0
"RTN","IBCAPP2",141,0)
 F IBEOBNDX="B","C" D
"RTN","IBCAPP2",142,0)
 .S IBDA=0 F  S IBDA=$O(^IBM(361.1,IBEOBNDX,IBIFN,IBDA)) Q:'+IBDA  D
"RTN","IBCAPP2",143,0)
 ..Q:$D(IBEOB(IBDA))
"RTN","IBCAPP2",144,0)
 ..S IB3611=$G(^IBM(361.1,IBDA,0)),IBCK=IBCK+1
"RTN","IBCAPP2",145,0)
 ..Q:$D(^IBM(361.1,IBDA,"ERR"))
"RTN","IBCAPP2",146,0)
 ..; if this is a denied EOB and user does NOT want to include denied as duplicates and this EOB was denied as duplicate, don't include
"RTN","IBCAPP2",147,0)
 ..I $P(IB3611,U,13)=2,'$G(IBMRADUP),$$DENDUP^IBCEMU4(IBDA,1) Q
"RTN","IBCAPP2",148,0)
 ..; eob type must be correct for this worklist
"RTN","IBCAPP2",149,0)
 ..I $P(IB3611,U,4)=1 S IBETC=IBETC+1 Q
"RTN","IBCAPP2",150,0)
 ..; allow filing errors on worklist, but try to find at least 1 Processed EOB w/out errors
"RTN","IBCAPP2",151,0)
 ..I $D(^IBM(361.1,IBDA,"ERR")) S:$P($G(^IBM(361.1,IBDA,0)),U,13)'=1 IBEOB("DER",IBDA)="" S:$P($G(^IBM(361.1,IBDA,0)),U,13)=1 IBEOB("PER",IBDA)="" Q
"RTN","IBCAPP2",152,0)
 ..S IBEOB(IBDA)="",IBCT=IBCT+1
"RTN","IBCAPP2",153,0)
 ; if no EOB was found to check, return -1 to process as no EOB
"RTN","IBCAPP2",154,0)
 Q:IBCK=0 -1
"RTN","IBCAPP2",155,0)
 ; if no EOB passed, check to see if the EOBs were all MRA primaries that failed the EOB type check (2ndary/tertiaries were paper)
"RTN","IBCAPP2",156,0)
 I IBCT=0,$$WNRBILL^IBEFUNC(IBIFN,1),$$COBN^IBCEF(IBIFN)>1,(IBCK=IBETC) Q -1
"RTN","IBCAPP2",157,0)
 ; if no EOB's passed, check for filing errors and use that EOB, with Processed EOB's taking priority over denied
"RTN","IBCAPP2",158,0)
 I IBCT=0,$D(IBEOB("PER")) Q $O(IBEOB("PER",0))
"RTN","IBCAPP2",159,0)
 I IBCT=0,$D(IBEOB("DER")) Q $O(IBEOB("DER",0))
"RTN","IBCAPP2",160,0)
 ; if no EOB passed and not MRA primary w/subsequent paper EOB's or filing errors, do not put on CBW
"RTN","IBCAPP2",161,0)
 Q:IBCT=0 0
"RTN","IBCAPP2",162,0)
 ; if one or more EOBs passed, return the 1st one that passed the checks as the one to use for CBW display
"RTN","IBCAPP2",163,0)
 Q $O(IBEOB(0))
"RTN","IBCAPP2",164,0)
 ;
"RTN","IBCAPP2",165,0)
RMV(DA) ;remove from worklist claims that are erroneously there
"RTN","IBCAPP2",166,0)
 N DIE,DR
"RTN","IBCAPP2",167,0)
 S DIE="^DGCR(399,",DR="35////@" D ^DIE ; Should never have been on the WORKLIST
"RTN","IBCAPP2",168,0)
 Q
"RTN","IBCAPP2",169,0)
 ;
"RTN","IBCBB")
0^9^B79149601^B76368179
"RTN","IBCBB",1,0)
IBCBB ;ALB/AAS - EDIT CHECK ROUTINE TO BE INVOKED BEFORE ALL BILL APPROVAL ACTIONS ;2-NOV-89
"RTN","IBCBB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,51,137,288,327,361,371,377,400,432,461,547**;21-MAR-94;Build 119
"RTN","IBCBB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB",4,0)
 ;
"RTN","IBCBB",5,0)
 ;MAP TO DGCRBB
"RTN","IBCBB",6,0)
 ;
"RTN","IBCBB",7,0)
 ;IBNDn = IBND(n) = ^ib(399,n)
"RTN","IBCBB",8,0)
 ;RETURNS:
"RTN","IBCBB",9,0)
 ;IBER=fields with errors separated by semi-colons
"RTN","IBCBB",10,0)
 ;PRCASV("OKAY")=1 if iber="" and $D(prcasv("array")) compete
"RTN","IBCBB",11,0)
 ;
"RTN","IBCBB",12,0)
GVAR ;set up variables for mccr
"RTN","IBCBB",13,0)
 Q:'$D(IBIFN)  F I=0,"M","U","U1","S","MP","TX","UF3","UF31","U2" S @("IBND"_I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCBB",14,0)
 S IBBNO=$P(IBND0,"^"),DFN=$P(IBND0,"^",2),IBEVDT=$P(IBND0,"^",3)
"RTN","IBCBB",15,0)
 S IBLOC=$P(IBND0,"^",4),IBCL=$P(IBND0,"^",5),IBTF=$P(IBND0,"^",6)
"RTN","IBCBB",16,0)
 S IBAT=$P(IBND0,"^",7),IBWHO=$P(IBND0,"^",11),IBST=$P(IBND0,"^",13),IBFT=$P(IBND0,"^",19)
"RTN","IBCBB",17,0)
 S IBFDT=$P(IBNDU,"^",1),IBTDT=$P(IBNDU,"^",2)
"RTN","IBCBB",18,0)
 S IBTC=$P(IBNDU1,"^",1),IBFY=$P(IBNDU1,"^",9),IBFYC=$P(IBNDU1,"^",10)
"RTN","IBCBB",19,0)
 S IBEU=$P(IBNDS,"^",2),IBRU=$P(IBNDS,"^",5),IBAU=$P(IBNDS,"^",8)
"RTN","IBCBB",20,0)
 S IBTOB=$$TOB(IBND0),IBTOB12=$E(IBTOB,1,2)
"RTN","IBCBB",21,0)
 K ^TMP($J,"BILL-WARN")
"RTN","IBCBB",22,0)
 Q
"RTN","IBCBB",23,0)
 ;
"RTN","IBCBB",24,0)
EN ;Entry to check for errors
"RTN","IBCBB",25,0)
 N IBQ,IBXERR,IBXDATA,IBXSAVE,IBZPRC92,IBQUIT,IBISEQ,IDDATA,IBFOR,IBC
"RTN","IBCBB",26,0)
 I $D(IBFL) N IBFL
"RTN","IBCBB",27,0)
 K ^TMP($J)
"RTN","IBCBB",28,0)
 W !
"RTN","IBCBB",29,0)
 S IBER="" D GVAR I '$D(IBND0) S IBER=-1 Q
"RTN","IBCBB",30,0)
 ;
"RTN","IBCBB",31,0)
 ;patient in patient file
"RTN","IBCBB",32,0)
 I DFN="" S IBER=IBER_"IB057;"
"RTN","IBCBB",33,0)
 I DFN]"",'$D(^DPT(DFN)) S IBER=IBER_"IB057;"
"RTN","IBCBB",34,0)
 ;
"RTN","IBCBB",35,0)
 ;Event date in correct format
"RTN","IBCBB",36,0)
 I IBEVDT="" S IBER=IBER_"IB049;"
"RTN","IBCBB",37,0)
 I IBEVDT]"",IBEVDT'?7N&(IBEVDT'?7N1".".N) S IBER=IBER_"IB049;"
"RTN","IBCBB",38,0)
 ;
"RTN","IBCBB",39,0)
 ;Rate Type
"RTN","IBCBB",40,0)
 I IBAT="" S IBER=IBER_"IB059;"
"RTN","IBCBB",41,0)
 I IBAT]"",'$D(^DGCR(399.3,IBAT,0)) S IBER=IBER_"IB059;"
"RTN","IBCBB",42,0)
 I IBAT]"",$D(^DGCR(399.3,IBAT,0)),'$P(^(0),"^",6) S IBER=IBER_"IB059;",IBAT=""
"RTN","IBCBB",43,0)
 I IBAT]"",$P($G(^DGCR(399.3,IBAT,0)),"^",6) S IBARTP=$P($$CATN^PRCAFN($P(^DGCR(399.3,IBAT,0),"^",6)),"^",3)
"RTN","IBCBB",44,0)
 ;Check that AR category expects same debtor as defined in who's responsible.
"RTN","IBCBB",45,0)
 I $D(IBARTP),IBWHO="i"&(IBARTP'="T")!(IBWHO="p"&("PC"'[IBARTP))!(IBWHO="o"&(IBARTP'="N")) S IBER=IBER_"IB058;"
"RTN","IBCBB",46,0)
 ;
"RTN","IBCBB",47,0)
 ;Who's Responsible
"RTN","IBCBB",48,0)
 I IBWHO=""!($L(IBWHO)>1)!("iop"'[IBWHO) S IBER=IBER_"IB065;"
"RTN","IBCBB",49,0)
 S IBMRA=$S($$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)):$$TXMT^IBCEF4(IBIFN)>0,1:0)
"RTN","IBCBB",50,0)
 ;  MCR will not reimburse is only valid if there is subsequent insurance
"RTN","IBCBB",51,0)
 ;   that will reimburse
"RTN","IBCBB",52,0)
 I IBWHO="i" D
"RTN","IBCBB",53,0)
 . I IBMRA D  Q
"RTN","IBCBB",54,0)
 .. N Z,IBZ
"RTN","IBCBB",55,0)
 .. S IBZ=0
"RTN","IBCBB",56,0)
 .. F Z=$$COBN^IBCEF(IBIFN):1:3 I $D(^DGCR(399,IBIFN,"I"_(Z+1))),$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_(Z+1))),0)),U,2)'="N" S IBZ=1 Q
"RTN","IBCBB",57,0)
 .. I 'IBZ S IBER=IBER_"IB054;" D WARN^IBCBB11("A valid claim for MEDICARE WNR needs subsequent ins. that will reimburse")
"RTN","IBCBB",58,0)
 ..
"RTN","IBCBB",59,0)
 . I $$COB^IBCEF(IBIFN)="S",$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))=1,$D(^DGCR(399,IBIFN,"I3")) Q
"RTN","IBCBB",60,0)
 . I $S('IBNDMP:1,1:$P(IBNDMP,U,2)'=$$BPP^IBCNS2(IBIFN,1)) S IBER=IBER_"IB054;"
"RTN","IBCBB",61,0)
 I IBWHO="o",'$P(IBNDM,"^",11) S IBER=IBER_"IB053;"
"RTN","IBCBB",62,0)
 ;
"RTN","IBCBB",63,0)
 ; Outpatient Statement dates can not span the ICD-10 activation date
"RTN","IBCBB",64,0)
 I IBCL>2,$$ICD10S^IBCU4(IBFDT,IBTDT) S IBER=IBER_"IB354;"
"RTN","IBCBB",65,0)
 ;
"RTN","IBCBB",66,0)
 ; All bill ICD codes must match Code Version on Statement To Date IB356
"RTN","IBCBB",67,0)
 D ICD10V^IBCBB0(IBIFN)
"RTN","IBCBB",68,0)
 ;
"RTN","IBCBB",69,0)
 ; Billing Provider check - IB*2*400
"RTN","IBCBB",70,0)
 D BP^IBCBB0(IBIFN)
"RTN","IBCBB",71,0)
 ;
"RTN","IBCBB",72,0)
 ; Pay-to Provider check - IB*2*400
"RTN","IBCBB",73,0)
 D PAYTO^IBCBB0(IBIFN)
"RTN","IBCBB",74,0)
 ;
"RTN","IBCBB",75,0)
 ; All insurance subscribers must have a birth date on file
"RTN","IBCBB",76,0)
 ;  - 11/10/04 - IB*2.0*288
"RTN","IBCBB",77,0)
 ;  - 12/14/06 - IB*2.0*361 - must have INSURED'S SEX too
"RTN","IBCBB",78,0)
 ; IB error codes
"RTN","IBCBB",79,0)
 ;    IB221 - Primary insurance subscriber missing date of birth
"RTN","IBCBB",80,0)
 ;    IB222 - Secondary insurance subscriber missing date of birth
"RTN","IBCBB",81,0)
 ;    IB223 - Tertiary insurance subscriber missing date of birth
"RTN","IBCBB",82,0)
 ;    IB261 - Primary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",83,0)
 ;    IB262 - Secondary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",84,0)
 ;    IB263 - Tertiary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",85,0)
 ;
"RTN","IBCBB",86,0)
 F IBISEQ=1:1:3 D
"RTN","IBCBB",87,0)
 . I '$P($G(^DGCR(399,IBIFN,"I"_IBISEQ)),U,1) Q   ; no insurance here
"RTN","IBCBB",88,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",89,0)
 . S IDDATA=$$INSDEM^IBCEF(IBIFN,IBISEQ)
"RTN","IBCBB",90,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",91,0)
 . ;
"RTN","IBCBB",92,0)
 . I '$P(IDDATA,U,1) D ERR(221)   ; birth date missing
"RTN","IBCBB",93,0)
 . ;
"RTN","IBCBB",94,0)
 . I "^M^F^"'[(U_$P(IDDATA,U,2)_U) D ERR(261)  ; sex missing
"RTN","IBCBB",95,0)
 . ;
"RTN","IBCBB",96,0)
 . ; IB*2*371 - esg - check for other missing insurance pieces
"RTN","IBCBB",97,0)
 . ; check insured's name, primary ID#, pt. relationship to insured,
"RTN","IBCBB",98,0)
 . ; and subscriber address data  
"RTN","IBCBB",99,0)
 . N INNAME,SUBID,PTREL,SFA,CAS,LN,FN
"RTN","IBCBB",100,0)
 . ;
"RTN","IBCBB",101,0)
 . ;          IB273 - Primary Insurance name of insured missing
"RTN","IBCBB",102,0)
 . ;          IB274 - Secondary Insurance name of insured missing
"RTN","IBCBB",103,0)
 . ;          IB275 - Tertiary Insurance name of insured missing
"RTN","IBCBB",104,0)
 . S INNAME=$$POLICY^IBCEF(IBIFN,17,IBISEQ)
"RTN","IBCBB",105,0)
 . S LN=$P(INNAME,",",1),FN=$P(INNAME,",",2)   ; last name,first name
"RTN","IBCBB",106,0)
 . S LN=$$NOPUNCT^IBCEF(LN,1)
"RTN","IBCBB",107,0)
 . S FN=$$NOPUNCT^IBCEF(FN,1)
"RTN","IBCBB",108,0)
 . ; ib*2.0*547 - subscriber only needs last name
"RTN","IBCBB",109,0)
 . ;I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",110,0)
 . I LN="" D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",111,0)
 . S LN=$$NAME^IBCEFG1(INNAME)  ; additional name checks
"RTN","IBCBB",112,0)
 . S FN=$P(LN,U,2)
"RTN","IBCBB",113,0)
 . S LN=$P(LN,U,1)
"RTN","IBCBB",114,0)
 . ;I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",115,0)
 . I LN="" D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",116,0)
 . ;
"RTN","IBCBB",117,0)
 . ;          IB276 - Primary Insurance subscriber ID missing
"RTN","IBCBB",118,0)
 . ;          IB277 - Secondary Insurance subscriber ID missing
"RTN","IBCBB",119,0)
 . ;          IB278 - Tertiary Insurance subscriber ID missing
"RTN","IBCBB",120,0)
 . S SUBID=$$NOPUNCT^IBCEF($$POLICY^IBCEF(IBIFN,2,IBISEQ),1)
"RTN","IBCBB",121,0)
 . I SUBID="" D ERR(276)     ; subscriber ID# missing
"RTN","IBCBB",122,0)
 . ;
"RTN","IBCBB",123,0)
 . ;          IB279 - Primary Insurance missing pt relationship
"RTN","IBCBB",124,0)
 . ;          IB280 - Secondary Insurance missing pt relationship
"RTN","IBCBB",125,0)
 . ;          IB281 - Tertiary Insurance missing pt relationship
"RTN","IBCBB",126,0)
 . S PTREL=$$POLICY^IBCEF(IBIFN,16,IBISEQ)
"RTN","IBCBB",127,0)
 . I PTREL="" D ERR(279)      ; missing patient relationship to insured
"RTN","IBCBB",128,0)
 . ;
"RTN","IBCBB",129,0)
 . ; subscriber address section
"RTN","IBCBB",130,0)
 . S SFA=$$INSADDR^IBCEF(IBIFN,IBISEQ)     ; full address all pieces
"RTN","IBCBB",131,0)
 . S CAS=$$NOPUNCT^IBCEF($P(SFA,U,2,5),1)  ; string city,st,zip,addr1
"RTN","IBCBB",132,0)
 . ;
"RTN","IBCBB",133,0)
 . ;          IB282 - Primary Insurance address line 1 missing
"RTN","IBCBB",134,0)
 . ;          IB283 - Secondary Insurance address line 1 missing
"RTN","IBCBB",135,0)
 . ;          IB284 - Tertiary Insurance address line 1 missing
"RTN","IBCBB",136,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,5),1)="" D   ; address line 1 is blank
"RTN","IBCBB",137,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",138,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(282) Q
"RTN","IBCBB",139,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",140,0)
 .. I CAS'="" D ERR(282) Q
"RTN","IBCBB",141,0)
 .. Q
"RTN","IBCBB",142,0)
 . ;
"RTN","IBCBB",143,0)
 . ;          IB285 - Primary Insurance city missing
"RTN","IBCBB",144,0)
 . ;          IB286 - Secondary Insurance city missing
"RTN","IBCBB",145,0)
 . ;          IB287 - Tertiary Insurance city missing
"RTN","IBCBB",146,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,2),1)="" D   ; city is blank
"RTN","IBCBB",147,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",148,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(285) Q
"RTN","IBCBB",149,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",150,0)
 .. I CAS'="" D ERR(285) Q
"RTN","IBCBB",151,0)
 .. Q
"RTN","IBCBB",152,0)
 . ;
"RTN","IBCBB",153,0)
 . ;          IB288 - Primary Insurance state missing
"RTN","IBCBB",154,0)
 . ;          IB289 - Secondary Insurance state missing
"RTN","IBCBB",155,0)
 . ;          IB290 - Tertiary Insurance state missing
"RTN","IBCBB",156,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,3),1)="" D   ; state is blank
"RTN","IBCBB",157,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",158,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(288) Q
"RTN","IBCBB",159,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",160,0)
 .. I CAS'="" D ERR(288) Q
"RTN","IBCBB",161,0)
 .. Q
"RTN","IBCBB",162,0)
 . ;
"RTN","IBCBB",163,0)
 . ;          IB291 - Primary Insurance zipcode missing
"RTN","IBCBB",164,0)
 . ;          IB292 - Secondary Insurance zipcode missing
"RTN","IBCBB",165,0)
 . ;          IB293 - Tertiary Insurance zipcode missing
"RTN","IBCBB",166,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,4),1)="" D   ; zipcode is blank
"RTN","IBCBB",167,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",168,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(291) Q
"RTN","IBCBB",169,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",170,0)
 .. I CAS'="" D ERR(291) Q
"RTN","IBCBB",171,0)
 .. Q
"RTN","IBCBB",172,0)
 . ;
"RTN","IBCBB",173,0)
 . Q
"RTN","IBCBB",174,0)
 ;
"RTN","IBCBB",175,0)
 ; esg - IB*2*371 - check patient address fields
"RTN","IBCBB",176,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",177,0)
 ;
"RTN","IBCBB",178,0)
 S IBFOR=0                              ; foreign address flag
"RTN","IBCBB",179,0)
 S IBC=+$$PTADDR^IBCEF(IBIFN,25)        ; country code ien
"RTN","IBCBB",180,0)
 I IBC D
"RTN","IBCBB",181,0)
 . N CODE
"RTN","IBCBB",182,0)
 . S CODE=$$GET1^DIQ(779.004,IBC,.01)   ; .01 code field file 779.004
"RTN","IBCBB",183,0)
 . I CODE'="",CODE'="USA" S IBFOR=1     ; foreign country exists
"RTN","IBCBB",184,0)
 . Q
"RTN","IBCBB",185,0)
 ;
"RTN","IBCBB",186,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,1),1)="" S IBER=IBER_"IB269;"
"RTN","IBCBB",187,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,4),1)="" S IBER=IBER_"IB270;"
"RTN","IBCBB",188,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,5),1)="",'IBFOR S IBER=IBER_"IB271;"
"RTN","IBCBB",189,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,11),1)="",'IBFOR S IBER=IBER_"IB272;"
"RTN","IBCBB",190,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",191,0)
 ;
"RTN","IBCBB",192,0)
 D PAYERADD^IBCBB0(IBIFN)     ; check the payer addresses
"RTN","IBCBB",193,0)
 D ^IBCBB1
"RTN","IBCBB",194,0)
 Q
"RTN","IBCBB",195,0)
 ; The remaining code below is being removed with Patch IB*2.0*432.
"RTN","IBCBB",196,0)
 ;
"RTN","IBCBB",197,0)
 ; esg - 9/20/07 - IB patch 371 - prevent EDI transmission for 3 payer
"RTN","IBCBB",198,0)
 ;       claims for all but the first payer.  To be removed when Emdeon
"RTN","IBCBB",199,0)
 ;       and FSC are able to deal with these.
"RTN","IBCBB",200,0)
 ;
"RTN","IBCBB",201,0)
 I +$G(^DGCR(399,IBIFN,"I2")),+$G(^DGCR(399,IBIFN,"I3")),$$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB",202,0)
 . ; for MRA request claims, make sure the MRA secondary claim is forced to print
"RTN","IBCBB",203,0)
 . I $$REQMRA^IBEFUNC(IBIFN) D  Q
"RTN","IBCBB",204,0)
 .. I '$P($G(^DGCR(399,IBIFN,"TX")),U,9) S IBER=IBER_"IB146;"
"RTN","IBCBB",205,0)
 .. Q
"RTN","IBCBB",206,0)
 . ;
"RTN","IBCBB",207,0)
 . I $$COBN^IBCEF(IBIFN)=1 Q   ; primary payer sequence claims are OK
"RTN","IBCBB",208,0)
 . ;
"RTN","IBCBB",209,0)
 . ; But claims with a payer sequence of 2 or 3 need to print locally
"RTN","IBCBB",210,0)
 . S IBER=IBER_"IB147;"
"RTN","IBCBB",211,0)
 . Q
"RTN","IBCBB",212,0)
 ;
"RTN","IBCBB",213,0)
 Q
"RTN","IBCBB",214,0)
 ;
"RTN","IBCBB",215,0)
EDIT(IBIFN) ; Run edits from within the billing edit screens
"RTN","IBCBB",216,0)
 N IBVIEW,IBDISP,IBNOFIX,DIR,X,Y
"RTN","IBCBB",217,0)
 S (IBNOFIX,IBVIEW,IBDISP)=1
"RTN","IBCBB",218,0)
 D EDITS^IBCB2
"RTN","IBCBB",219,0)
 W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCBB",220,0)
 Q
"RTN","IBCBB",221,0)
 ;
"RTN","IBCBB",222,0)
TOB(IBND0) ;
"RTN","IBCBB",223,0)
 ; IBND0 = the 0-node of the bill (file 399)
"RTN","IBCBB",224,0)
 Q ($P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)_$P(IBND0,U,26))
"RTN","IBCBB",225,0)
 ;
"RTN","IBCBB",226,0)
ERR(Z) ; update IBER variable from the above insurance checks
"RTN","IBCBB",227,0)
 ; Z is the IB error code# for the primary insurance error
"RTN","IBCBB",228,0)
 N IBERRNO
"RTN","IBCBB",229,0)
 S IBERRNO="IB"_(Z+IBISEQ-1)
"RTN","IBCBB",230,0)
 I IBER[IBERRNO Q
"RTN","IBCBB",231,0)
 S IBER=IBER_IBERRNO_";"
"RTN","IBCBB",232,0)
 Q
"RTN","IBCBB",233,0)
 ;
"RTN","IBCBB9")
0^8^B7577761^B8708481
"RTN","IBCBB9",1,0)
IBCBB9 ;ALB/BGA MEDICARE PART B EDIT CHECKS ;10/15/98
"RTN","IBCBB9",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,349,371,432,547**;21-MAR-94;Build 119
"RTN","IBCBB9",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB9",4,0)
 ;
"RTN","IBCBB9",5,0)
PARTB ; MEDICARE specific edit checks for PART B claims (CMS-1500)
"RTN","IBCBB9",6,0)
 ;
"RTN","IBCBB9",7,0)
 N IBXDATA,IBXERR,IBXIEN,IBXSAVE,IBPR,IBDTFLG
"RTN","IBCBB9",8,0)
 ;
"RTN","IBCBB9",9,0)
 I $$NEEDMRA^IBEFUNC(IBIFN) D
"RTN","IBCBB9",10,0)
 . K IBXDATA
"RTN","IBCBB9",11,0)
 . D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)",,,IBIFN)
"RTN","IBCBB9",12,0)
 . S IBI=0
"RTN","IBCBB9",13,0)
 . F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D
"RTN","IBCBB9",14,0)
 .. S IBJ=$P(IBXDATA(IBI),U,5)
"RTN","IBCBB9",15,0)
 .. I IBJ'="","^CJ^HC^"[(U_$P(IBXDATA(IBI),U,6)_U) S IBPR(IBJ)=""
"RTN","IBCBB9",16,0)
 . I $$REQMRA^IBEFUNC(IBIFN),$O(IBXDATA(""),-1)>12 D WARN^IBCBB11("This claim will be split into multiple EOB'S since there are more than 12"),WARN^IBCBB11("service lines being submitted on the claim.")
"RTN","IBCBB9",17,0)
 . I $$REQMRA^IBEFUNC(IBIFN),$E(IBFDT,1,3)'=$E(IBTDT,1,3) D WARN^IBCBB11("This claim will be split into multiple EOB'S due to the service dates"),WARN^IBCBB11("spanning different calendar years.")
"RTN","IBCBB9",18,0)
 . D NONMCR^IBCBB3(.IBPR,.IBLABS) ; Oxygen, labs, influenza shots
"RTN","IBCBB9",19,0)
 . S Z="80000" F  S Z=$O(IBPR(Z)) Q:Z'?1"8"4N  S IBLABS=1
"RTN","IBCBB9",20,0)
 . I $G(IBLABS) D WARN^IBCBB11("There are Lab procedures on this claim."),WARN^IBCBB11("Please verify that Medicare does not reimburse these labs at 100%.") Q
"RTN","IBCBB9",21,0)
 . I $O(IBPR(""))="" S IBQUIT=$$IBER^IBCBB3(.IBER,"098")
"RTN","IBCBB9",22,0)
 ;
"RTN","IBCBB9",23,0)
 ; First char of the pat's first and last name must be present and
"RTN","IBCBB9",24,0)
 ; must be an alpha
"RTN","IBCBB9",25,0)
 ; IB*2.0*547 - remove error check 300
"RTN","IBCBB9",26,0)
 K IBXDATA D F^IBCEF("N-PATIENT NAME",,,IBIFN)
"RTN","IBCBB9",27,0)
 S IBXDATA=$$NAME^IBCEFG1(IBXDATA)
"RTN","IBCBB9",28,0)
 ;I $S($G(IBXDATA)="":1,$E($P(IBXDATA,U))=" "!($E($P(IBXDATA,U))'?1A):1,$E($P(IBXDATA,U,2))=" "!($E($P(IBXDATA,U,2))'?1A):1,1:0) S IBQUIT=$$IBER^IBCBB3(.IBER,300) Q:IBQUIT
"RTN","IBCBB9",29,0)
 ;
"RTN","IBCBB9",30,0)
 ; Must be a valid HIC #
"RTN","IBCBB9",31,0)
 I '$$VALID^IBCBB8(IBIFN) S IBQUIT=$$IBER^IBCBB3(.IBER,215) Q:IBQUIT
"RTN","IBCBB9",32,0)
 ;
"RTN","IBCBB9",33,0)
 ; Specialty code 99 is not valid for Medicare MRA request claims
"RTN","IBCBB9",34,0)
 ;I $$REQMRA^IBEFUNC(IBIFN),$$BILLSPEC^IBCEU3(IBIFN)=99 S IBQUIT=$$IBER^IBCBB3(.IBER,122) Q:IBQUIT
"RTN","IBCBB9",35,0)
 ; IB*2.0*432 add line-level check
"RTN","IBCBB9",36,0)
 I $$REQMRA^IBEFUNC(IBIFN),$$LINSPEC^IBCEU3(IBIFN)[99 S IBQUIT=$$IBER^IBCBB3(.IBER,122) Q:IBQUIT
"RTN","IBCBB9",37,0)
 ;
"RTN","IBCBB9",38,0)
 Q
"RTN","IBCBB9",39,0)
 ;
"RTN","IBCC")
0^20^B65758578^B65165308
"RTN","IBCC",1,0)
IBCC ;ALB/MJB - CANCEL THIRD PARTY BILL ;14 JUN 88  10:12
"RTN","IBCC",2,0)
 ;;2.0;INTEGRATED BILLING;**2,19,77,80,51,142,137,161,199,241,155,276,320,358,433,432,447,516,547**;21-MAR-94;Build 119
"RTN","IBCC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCC",4,0)
 ;
"RTN","IBCC",5,0)
 ;MAP TO DGCRC
"RTN","IBCC",6,0)
 ;
"RTN","IBCC",7,0)
 I '$D(IBCAN) S IBCAN=1
"RTN","IBCC",8,0)
ASK ;
"RTN","IBCC",9,0)
 ;***
"RTN","IBCC",10,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",11,0)
 ;S XRTL=$ZU(0),XRTN="IBCC-1" D T0^%ZOSV ;start rt clock
"RTN","IBCC",12,0)
 ;
"RTN","IBCC",13,0)
 ; If called at entry point PROCESS, variable IBNOASK will exist.
"RTN","IBCC",14,0)
 ; First time through, IBNOASK=1
"RTN","IBCC",15,0)
 ; Second time through, IBNOASK=2 and it will quit
"RTN","IBCC",16,0)
 I $G(IBNOASK)=2 G Q
"RTN","IBCC",17,0)
 I $G(IBNOASK)=1 S IBNOASK=2
"RTN","IBCC",18,0)
 ;
"RTN","IBCC",19,0)
 G Q:$G(IBCE("EDI"))
"RTN","IBCC",20,0)
 D Q
"RTN","IBCC",21,0)
 S IBQUIT=0
"RTN","IBCC",22,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCC",23,0)
 I '$G(IBNOASK) S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " W !! D ^DIC I Y<1 S IBQUIT=1 G Q1
"RTN","IBCC",24,0)
 K IB364
"RTN","IBCC",25,0)
NOPTF ; Note if IB364 is >0 it will be used as the ien to update in file 364
"RTN","IBCC",26,0)
 N DA,I
"RTN","IBCC",27,0)
 I '$G(IBNOASK) S IBIFN=+$G(Y)
"RTN","IBCC",28,0)
 I '$G(IBIFN) G ASK
"RTN","IBCC",29,0)
 I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK
"RTN","IBCC",30,0)
 ;
"RTN","IBCC",31,0)
 I $G(IBCNCRD)=1,$P($P($G(^DGCR(399,IBIFN,0)),U),"-",2)>98 D  Q
"RTN","IBCC",32,0)
 .W !!,"Please note that you have exceeded the maximum number of iterations (99) for this claim."
"RTN","IBCC",33,0)
 .W "Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",34,0)
 .S IBQUIT=1 H 3
"RTN","IBCC",35,0)
 ; Check if bill has been referred to Counsel
"RTN","IBCC",36,0)
 I $P($G(^PRCA(430,IBIFN,6)),U,4) D  G ASK
"RTN","IBCC",37,0)
 . W !,"This bill has been referred to Regional Counsel and cannot be 'CANCELLED' in"
"RTN","IBCC",38,0)
 . W !,"Integrated Billing.  Please use the option 'TP Referred Follow-up'"
"RTN","IBCC",39,0)
 . W !,"[PRCA RC ACTION MENU] in Accounts Receivable to request that Regional"
"RTN","IBCC",40,0)
 . W !,"Counsel return the bill to your facility."
"RTN","IBCC",41,0)
 . Q
"RTN","IBCC",42,0)
 ;
"RTN","IBCC",43,0)
 F I=0,"S","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCC",44,0)
 S IBSTAT=$P(IB(0),U,13)
"RTN","IBCC",45,0)
 ; REMOVE New messages for CRD option IB*2.0*433 in IB*2.0*447  IA#5630
"RTN","IBCC",46,0)
 ;I $G(IBCNCRD)=1,IBSTAT'=2,'$$ACCK^PRCAACC(IBIFN) D  Q
"RTN","IBCC",47,0)
 ;.W !!,"This option cannot be used to correct some Billing Rate Types (Example: TRICARE)"
"RTN","IBCC",48,0)
 ;.W "Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",49,0)
 ;.S IBQUIT=1 H 3
"RTN","IBCC",50,0)
 ;
"RTN","IBCC",51,0)
 ; Restrict access to this process for REQUEST MRA bills
"RTN","IBCC",52,0)
 I IBSTAT=2,'$G(IBCE("EDI")),$$MRAWL^IBCEMU2(IBIFN) D  G ASK
"RTN","IBCC",53,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it does appear on the"
"RTN","IBCC",54,0)
 . W !?4,"MRA Management Work List.  Please use the 'MRA Management Menu' options"
"RTN","IBCC",55,0)
 . W !?4,"for all processing related to this bill."
"RTN","IBCC",56,0)
 . Q
"RTN","IBCC",57,0)
 ;
"RTN","IBCC",58,0)
 ; IB*2.0*432 Restrict access to claims on the new CBW Worklist
"RTN","IBCC",59,0)
 I $P($G(^DGCR(399,IBIFN,"S1")),U,7)=1,$G(IBMRANOT)'=1 D  G ASK
"RTN","IBCC",60,0)
 . W !!?4,"This bill appears on the CBW Management Work List.  Please use the"
"RTN","IBCC",61,0)
 . W !?4,"'CBW Management Menu' options for all processing related to this bill."
"RTN","IBCC",62,0)
 . Q
"RTN","IBCC",63,0)
 ;
"RTN","IBCC",64,0)
 ; Check if this is a paper claim. If not, check for split EOB.  If split, don't allow CRD unless more than 1 EOB has been returned
"RTN","IBCC",65,0)
 I $G(IBCNCRD)=1,$P($G(^DGCR(399,IBIFN,"TX")),U,8)'=1,$$SPLTMRA^IBCEMU1(IBIFN)=1 D  Q
"RTN","IBCC",66,0)
 .W !!,"There is a split EOB associated with this claim.  You cannot use this option to Correct this claim until the second EOB has been received."
"RTN","IBCC",67,0)
 .S IBQUIT=1 H 3
"RTN","IBCC",68,0)
 .Q
"RTN","IBCC",69,0)
 ;
"RTN","IBCC",70,0)
 ; Warning message if in a REQUEST MRA status with no MRA on file
"RTN","IBCC",71,0)
 ; IB*2.0*516/TAZ,MRD - Forbid the user from using the option CRD
"RTN","IBCC",72,0)
 ; (Correct Rejected/Denied Bill) on an MRA claim if the status is
"RTN","IBCC",73,0)
 ; REQUEST MRA (IBSTAT=2).
"RTN","IBCC",74,0)
 I IBSTAT=2,'$$MRACNT^IBCEMU1(IBIFN) D  I $G(IBQUIT) H 3 Q
"RTN","IBCC",75,0)
 . N REJ
"RTN","IBCC",76,0)
 . D TXSTS^IBCEMU2(IBIFN,,.REJ)
"RTN","IBCC",77,0)
 . ;IB*2.0*516/TAZ - If CRD is from CSA allow a REJected claim to be CRD'ed without displaying a warning.
"RTN","IBCC",78,0)
 . I $G(IBCNCSA),REJ Q
"RTN","IBCC",79,0)
 . W *7,!!?4,$S('$G(IBCNCRD):"Warning!  ",1:""),"This bill is in a status of REQUEST MRA."
"RTN","IBCC",80,0)
 . W !?4,"No MRAs have been received"
"RTN","IBCC",81,0)
 . I REJ W ", but the most recent transmission of this",!?4,"MRA request bill was rejected."
"RTN","IBCC",82,0)
 . I 'REJ W " and there are no rejection messages on file",!?4,"for the most recent transmission of this MRA request bill."
"RTN","IBCC",83,0)
 . I $G(IBCNCRD) S IBQUIT=1
"RTN","IBCC",84,0)
 . Q
"RTN","IBCC",85,0)
 ;
"RTN","IBCC",86,0)
 I IBCAN=2,IB("S")]"",+$P(IB("S"),U,16),$P(IB("S"),U,17)]"" D  G 1
"RTN","IBCC",87,0)
 . W !!,"This bill was cancelled on " S Y=$P(IB("S"),U,17) X ^DD("DD") W Y," by ",$S($P(IB("S"),U,18)']"":IBU,$D(^VA(200,$P(IB("S"),U,18),0)):$P(^(0),U,1),1:IBU),"."
"RTN","IBCC",88,0)
 . S IBQUIT=1
"RTN","IBCC",89,0)
 ;
"RTN","IBCC",90,0)
 ; IB*2.0*516/TAZ,MRD - Forbid the user from using the option CRD
"RTN","IBCC",91,0)
 ; (Correct Rejected/Denied Bill) on all but primary claims.
"RTN","IBCC",92,0)
 I $G(IBCNCRD),($$COB^IBCEF(IBIFN)'="P") D  Q
"RTN","IBCC",93,0)
 . W !!,"Please note that COB data may exist for this bill."
"RTN","IBCC",94,0)
 . W !,"Copy and cancel (CLON) must be used to correct this bill."
"RTN","IBCC",95,0)
 . S IBQUIT=1
"RTN","IBCC",96,0)
 . H 3
"RTN","IBCC",97,0)
 . Q
"RTN","IBCC",98,0)
 ;
"RTN","IBCC",99,0)
 ; Notify if a payment has been posted to this bill before cancel
"RTN","IBCC",100,0)
 N PRCABILL
"RTN","IBCC",101,0)
 S PRCABILL=$$TPR^PRCAFN(IBIFN)
"RTN","IBCC",102,0)
 I PRCABILL=-1 W !!,"Please note: PRCA was unable to determine if a payment has been posted." I $G(IBCNCRD)=1 W !,"Copy and cancel (CLON) must be used to correct this bill." S IBQUIT=1 H 3 Q
"RTN","IBCC",103,0)
 I PRCABILL>0 W !!,"Please note a PAYMENT of **$"_$$TPR^PRCAFN(IBIFN)_"** has been POSTED to this bill."
"RTN","IBCC",104,0)
 ; New message for CRD option
"RTN","IBCC",105,0)
 I $G(IBCNCRD)=1,PRCABILL>0 W !,"Copy and cancel (CLON) must be used to correct this bill." S IBQUIT=1 H 3 Q
"RTN","IBCC",106,0)
 ;
"RTN","IBCC",107,0)
 ; If bill was created via Electronic claims process then notify
"RTN","IBCC",108,0)
 ; user that cancellation should occur using ECME package
"RTN","IBCC",109,0)
 I $$GET1^DIQ(399,IBIFN_",",460)]"" D  G:'Y ASK
"RTN","IBCC",110,0)
 . W !!!?5,"This bill was created by the"
"RTN","IBCC",111,0)
 . W !?5,"Electronic Claims Management Engine (ECME)."
"RTN","IBCC",112,0)
 . W !?5,"Cancellation needs to occur in the ECME package by"
"RTN","IBCC",113,0)
 . W !?5,"submitting a REVERSAL to the Payer.",!!
"RTN","IBCC",114,0)
 . K DIR S DIR("A",1)="Has a REVERSAL for this e-Claim already been",DIR("A")="submitted to the payer via the ECME package (Y/N)",DIR(0)="Y",DIR("B")="NO" D ^DIR
"RTN","IBCC",115,0)
 . I Y=0 W !!,"<PLEASE SUBMIT A REVERSAL USING THE APPROPRIATE OPTION IN THE ECME PACKAGE>",$C(7)
"RTN","IBCC",116,0)
 ;
"RTN","IBCC",117,0)
CHK ;
"RTN","IBCC",118,0)
 ; if user came from CLON, make sure they know about the new CRD option  IB*2.0*447 remove TRICARE msg.
"RTN","IBCC",119,0)
 I $G(IBCNCOPY)=1 D
"RTN","IBCC",120,0)
 .W !!,*7,"Warning:  This option should NOT be used to correct Rejected/Denied claims."
"RTN","IBCC",121,0)
 .W !,"          It should ONLY be used to correct DENIED claims which have payments"
"RTN","IBCC",122,0)
 .W !,"          posted against them.***" ; and claims with certain Billing Rate Types (Example: TRICARE)."
"RTN","IBCC",123,0)
 ;
"RTN","IBCC",124,0)
 S (IBCCCC,IBQUIT)=0 I '$G(IBCEAUTO),'$G(IBMCSCAN) W !!,"ARE YOU SURE YOU WANT TO CANCEL THIS BILL" S %=2 D YN^DICN G:%=0 HELP I %'=1 S IBQUIT=1 G NO
"RTN","IBCC",125,0)
 ;
"RTN","IBCC",126,0)
 I '$G(IBCEAUTO) W !!,"LAST CHANCE TO CHANGE YOUR MIND..."
"RTN","IBCC",127,0)
 S DIE=399,DA=IBIFN,DIE("NO^")=""
"RTN","IBCC",128,0)
 S DR="16;S:'X Y=0;19;S IBCCCC=1;"
"RTN","IBCC",129,0)
 I $G(IBCEAUTO) S DR="16////1;19////EDI/MRA TURNED OFF;S IBCCCC=1;"
"RTN","IBCC",130,0)
 ;
"RTN","IBCC",131,0)
 ; esg - 8/23/06 - IB*2*358 - fix semi-colon in free text field
"RTN","IBCC",132,0)
 I $G(IBMCSRSC)'="" S DR="16;S:'X Y=0;19//^S X=IBMCSRSC;S IBCCCC=1;"
"RTN","IBCC",133,0)
 D ^DIE K DIE,DR
"RTN","IBCC",134,0)
 ;
"RTN","IBCC",135,0)
NO I 'IBCCCC W !!,"<NO ACTION TAKEN>",*7 S IBQUIT=1 G ASK:IBCAN<2,Q
"RTN","IBCC",136,0)
 S IBCCR=$P($G(^DGCR(399,IBIFN,"S")),U,19)
"RTN","IBCC",137,0)
 ; update claim # with new iteration  IB*2.0*447 move to later in the process
"RTN","IBCC",138,0)
 ;D:$G(IBCNCRD)=1 CRD
"RTN","IBCC",139,0)
 W !!,"...Bill has been cancelled..." D BULL^IBCBULL,BSTAT^IBCDC(IBIFN),PRIOR^IBCCC2(IBIFN)
"RTN","IBCC",140,0)
 ;
"RTN","IBCC",141,0)
 ; cancelling in ingenix claimsmanager if ingenix is running
"RTN","IBCC",142,0)
 ; clean-up of variables is OK if not coming in from ListMan screen
"RTN","IBCC",143,0)
 I $$CM^IBCIUT1(IBIFN) S IBCISNT=4 D ST2^IBCIST I '$G(IBCICNCL) K IBCISNT,IBCISTAT,IBCIREDT,IBCIERR
"RTN","IBCC",144,0)
 ;
"RTN","IBCC",145,0)
 S IBEDI=$G(IB364)
"RTN","IBCC",146,0)
 I 'IBEDI S IBEDI=+$$LAST364^IBCEF4(IBIFN)
"RTN","IBCC",147,0)
 ; ib*2.0*547 don't cancel MRA if cloning a bill that is secondary to MRA (share the same claim#)
"RTN","IBCC",148,0)
 I IBEDI D UPDEDI^IBCEM(IBEDI,"C",,$S($$MRASEC^IBCEF4(IBIFN):2,1:"")) ;Update EDI files, if needed
"RTN","IBCC",149,0)
 ;
"RTN","IBCC",150,0)
 F I="S","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCC",151,0)
 S PRCASV("ARREC")=IBIFN,PRCASV("AMT")=$S(IB("U1")']"":0,1:$P(IB("U1"),"^")),PRCASV("DATE")=$P(IB("S"),"^",17),PRCASV("BY")=$P(IB("S"),"^",18)
"RTN","IBCC",152,0)
 S PRCASV("COMMENT")=$S($P(IB("S"),U,19)]"":$P(IB("S"),U,19),$P(^IBE(350.9,1,2),"^",7)]"":$P(^(2),"^",7),1:"BILL CANCELLED IN MAS")
"RTN","IBCC",153,0)
 S PRCASV("BY")=$S($P(IB("S"),U,18)]"":$P(IB("S"),U,18),1:"")
"RTN","IBCC",154,0)
 ; IA#3374/IB*2.0*433 Pass the CRD flag so FMS knows to send a cancel record before the new E record is sent
"RTN","IBCC",155,0)
 ;S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")))
"RTN","IBCC",156,0)
 S PRCASV("ARCRD")=$G(IBCNCRD)
"RTN","IBCC",157,0)
 S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")),$G(PRCASV("ARCRD")))
"RTN","IBCC",158,0)
 W !,$S(X:">> The receivable associated with the claim was cancelled.",1:">> The receivable associated with the claim was not cancelled.")
"RTN","IBCC",159,0)
 I $P(X,U,2)]"" W !,">>> ",$P(X,U,2) ; The reason why the claim can not be cancelled.
"RTN","IBCC",160,0)
 I IBCAN<2 D RNB^IBCC1 ;assign a reason not billable
"RTN","IBCC",161,0)
 G ASK:IBCAN<2,Q
"RTN","IBCC",162,0)
 ;
"RTN","IBCC",163,0)
HELP W !,?3,"Answer 'YES' or 'Y' if you wish to cancel this bill.",!,?3,"Answer 'NO' or 'N' if you want to abort." G CHK
"RTN","IBCC",164,0)
 Q
"RTN","IBCC",165,0)
1 I $P(IB(0),U,13)=1 W !,"This record was re-opened on " S Y=$P(IB(0),U,14) X ^DD("DD") W Y,"." G CHK
"RTN","IBCC",166,0)
 G ASK
"RTN","IBCC",167,0)
Q1 K:IBCAN=1 IBQUIT K IBCAN
"RTN","IBCC",168,0)
Q K %,IBEPAR,IBSTAT,IBARST,IBAC1,IB,DFN,IBX,IBZ,DIC,DIE,DR,PRCASV,PRCASVC,X,Y,IBEDI
"RTN","IBCC",169,0)
 ;***
"RTN","IBCC",170,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",171,0)
 Q
"RTN","IBCC",172,0)
CRD(IBIFN) ; entry to point to add iteration # to claim
"RTN","IBCC",173,0)
 N IBFDA
"RTN","IBCC",174,0)
 S IBITN=$$ITN^IBCCC(IBIFN)
"RTN","IBCC",175,0)
 S IBFDA(399,IBIFN_",",.01)=IBITN
"RTN","IBCC",176,0)
 D FILE^DIE("","IBFDA")
"RTN","IBCC",177,0)
 ; this will re-open the claim, so reset to cancelled
"RTN","IBCC",178,0)
 S DIE=399,DA=IBIFN
"RTN","IBCC",179,0)
 S DR="16////1"
"RTN","IBCC",180,0)
 D ^DIE K DIE,DR
"RTN","IBCC",181,0)
 Q
"RTN","IBCC",182,0)
 ;
"RTN","IBCC",183,0)
PROCESS(IBIFN,IBCAN) ;
"RTN","IBCC",184,0)
 ; Entry point when the bill number is already known.  Use this when
"RTN","IBCC",185,0)
 ; you just want to try to cancel this bill and this bill only.
"RTN","IBCC",186,0)
 ; Input:
"RTN","IBCC",187,0)
 ;   IBIFN - Internal bill# (Required)
"RTN","IBCC",188,0)
 ;   IBCAN - Cancel Flag (optional, defaults to 1 if not included)
"RTN","IBCC",189,0)
 ;
"RTN","IBCC",190,0)
 NEW IBNOASK
"RTN","IBCC",191,0)
 S IBNOASK=1
"RTN","IBCC",192,0)
 S IBCAN=$G(IBCAN,1)
"RTN","IBCC",193,0)
 G ASK
"RTN","IBCC",194,0)
 ;
"RTN","IBCC",195,0)
 ;IBCC
"RTN","IBCCC1")
0^41^B11074104^B10846914
"RTN","IBCCC1",1,0)
IBCCC1 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
"RTN","IBCCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**80,109,106,51,320,358,433,432,547**;21-MAR-94;Build 119
"RTN","IBCCC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCCC1",4,0)
 ;
"RTN","IBCCC1",5,0)
 ;MAP TO DGCRCC1
"RTN","IBCCC1",6,0)
 ;
"RTN","IBCCC1",7,0)
 ;STEP 1 - cancel bill
"RTN","IBCCC1",8,0)
 ;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancell)
"RTN","IBCCC1",9,0)
 ;STEP 2 - build array of IBIDS call screen that asks ok
"RTN","IBCCC1",10,0)
 ;STEP 3 - pass stub entry to ar
"RTN","IBCCC1",11,0)
 ;STEP 4 - store stub data in MCCR then x-ref
"RTN","IBCCC1",12,0)
 ;STEP 4.5 - store claim clone info on "S1" node.
"RTN","IBCCC1",13,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC1",14,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC1",15,0)
 ;
"RTN","IBCCC1",16,0)
STEP4 S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IBIDS(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1),$P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IBIDS(I)
"RTN","IBCCC1",17,0)
 ;WCJ;IB*2.0*547;added M2
"RTN","IBCCC1",18,0)
 ;S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCCC1",19,0)
 S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","M2","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCCC1",20,0)
 D  ; Protect variables;index entry;replace FT if copy/clone and it chngs
"RTN","IBCCC1",21,0)
 . N IBHOLD,DIE,DR,DA,X,Y
"RTN","IBCCC1",22,0)
 . S IBHOLD("FT")=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC1",23,0)
 . S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1 W:$G(IBSILENT)="" !,"Cross-referencing new billing entry..." D INDEX^IBCCC2
"RTN","IBCCC1",24,0)
 .; I $G(IBCNCOPY),IBHOLD("FT"),IBHOLD("FT")'=$P($G(^DGCR(399,IBIFN,0)),U,19) S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBHOLD("FT") D ^DIE
"RTN","IBCCC1",25,0)
 . I $G(IBCNCOPY)!$G(IBCNCRD),IBHOLD("FT"),IBHOLD("FT")'=$P($G(^DGCR(399,IBIFN,0)),U,19) S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBHOLD("FT") D ^DIE
"RTN","IBCCC1",26,0)
 S IBYN=1 W:$G(IBSILENT)="" !!,*7,"Billing Record #",$P(^DGCR(399,+IBIFN,0),"^",1)," established for '",VADM(1),"'..."
"RTN","IBCCC1",27,0)
 S:$G(IBCE("EDI")) IBCE("EDI","NEW")=IBIFN
"RTN","IBCCC1",28,0)
 I $G(IBCE("EDI"))!($G(IBCTCOPY)=1) S IBHV("IBIFN1")=IBIFN ; New bill #
"RTN","IBCCC1",29,0)
 S IBBCT=IBIFN   ;bill the old claim was cloned TO.
"RTN","IBCCC1",30,0)
END K %,%DT,IB,IBA,IBNWBL,IBBT,IBIDS,I,J,VADM,X,X1,X2,X3,X4,Y
"RTN","IBCCC1",31,0)
 ;
"RTN","IBCCC1",32,0)
STEP4P5 ;added in patch 320
"RTN","IBCCC1",33,0)
 ;first, put the TO data on the FROM bill
"RTN","IBCCC1",34,0)
 ; Skip if not a CLON or CRD claim
"RTN","IBCCC1",35,0)
 ;
"RTN","IBCCC1",36,0)
 I '$G(IBCNCOPY)&('$G(IBCNCRD)) G STEP45X
"RTN","IBCCC1",37,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="29////"_$G(IBBCT) D ^DIE
"RTN","IBCCC1",38,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="31////"_$G(IBDBC) D ^DIE
"RTN","IBCCC1",39,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="32////"_$G(IBBCB) D ^DIE
"RTN","IBCCC1",40,0)
 ;
"RTN","IBCCC1",41,0)
 ; esg - 8/23/06 - IB*2*358 - fix semi-colon in free text field
"RTN","IBCCC1",42,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="33////^S X=$G(IBCCR)" D ^DIE
"RTN","IBCCC1",43,0)
 ;
"RTN","IBCCC1",44,0)
 ;now, put the FROM data on the TO bill
"RTN","IBCCC1",45,0)
 ;
"RTN","IBCCC1",46,0)
 S DIE="^DGCR(399,",DA=IBBCT,DR="30////"_$G(IBBCF) D ^DIE
"RTN","IBCCC1",47,0)
 ;
"RTN","IBCCC1",48,0)
STEP45X G ^IBCCC2 ;go to step 5
"RTN","IBCCC1",49,0)
 ;
"RTN","IBCCC1",50,0)
XREF F IBI1=0:0 S IBI1=$O(^DD(399,IBI,1,IBI1)) Q:'IBI1  I $D(^DD(399,IBI,1,IBI1,1)) S DA=IBIFN,X=IBIDS(IBI) I X]"" X ^DD(399,IBI,1,IBI1,1)
"RTN","IBCCC1",51,0)
 Q
"RTN","IBCCC1",52,0)
 ; NOTE:  any new or changed data nodes MAY need to be updated in IBNCPDP5
"RTN","IBCCC1",53,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.12^0^12;.17^0^17;.18^0^18;.19^0^19;.15^0^15;.16^0^16;.21^0^21;.22^0^22;.23^0^23;.24^0^24;.25^0^25;.26^0^26;.27^0^27;151^U^1;152^U^2;155^U^5;159.5^U^20;
"RTN","IBCCC1",54,0)
 ;
"RTN","IBCCCB")
0^44^B69153739^B65683261
"RTN","IBCCCB",1,0)
IBCCCB ;ALB/ARH - COPY BILL FOR COB ;2/13/06 10:46am
"RTN","IBCCCB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,51,151,137,182,155,323,436,432,447,547**;21-MAR-94;Build 119
"RTN","IBCCCB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCCCB",4,0)
 ;
"RTN","IBCCCB",5,0)
 ; Copy bill for COB w/out cancelling, update some flds
"RTN","IBCCCB",6,0)
 ; Primary->Secondary->Tertiary
"RTN","IBCCCB",7,0)
ASK ;
"RTN","IBCCCB",8,0)
 S IBCBCOPY=1 ; flag that copy function entered thru Copy COB option
"RTN","IBCCCB",9,0)
 ;
"RTN","IBCCCB",10,0)
 D KVAR S IBCAN=2,IBU="UNSPECIFIED"
"RTN","IBCCCB",11,0)
 ;
"RTN","IBCCCB",12,0)
 S IBX=$$PB^IBJTU2 S:+IBX=2 IBIFN=$P(IBX,U,2) I +IBX=1 S DFN=$P(IBX,U,2),IBV=1,IBAC=5 D DATE^IBCB
"RTN","IBCCCB",13,0)
 I '$G(IBIFN) G EXIT
"RTN","IBCCCB",14,0)
 ;
"RTN","IBCCCB",15,0)
 ; IB*2.0*432 Restrict access to only allow claims that are NOT on the new CBW Worklist
"RTN","IBCCCB",16,0)
 I $P($G(^DGCR(399,IBIFN,"S1")),U,7)=1,$G(IBMRANOT)'=1 D  G ASK
"RTN","IBCCCB",17,0)
 . W !!?4,"This bill appears on the CBW Management Work List.  Please use the"
"RTN","IBCCCB",18,0)
 . W !?4,"'CBW Management Menu' options for all processing related to this bill."
"RTN","IBCCCB",19,0)
 . Q
"RTN","IBCCCB",20,0)
 ; Restrict access to this process for REQUEST MRA bills in 2 Cases:
"RTN","IBCCCB",21,0)
 ; 1. No MRA EOB's on File for bill
"RTN","IBCCCB",22,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,'$$CHK^IBCEMU1(IBIFN) D  G ASK
"RTN","IBCCCB",23,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it has No MRA EOB's"
"RTN","IBCCCB",24,0)
 . W !?4,"on file.  Access to this bill is restricted."
"RTN","IBCCCB",25,0)
 ;
"RTN","IBCCCB",26,0)
 ; 2. At least one MRA EOB appears on the MRA management worklist
"RTN","IBCCCB",27,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,$$MRAWL^IBCEMU2(IBIFN) D  G ASK
"RTN","IBCCCB",28,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it does appear on the"
"RTN","IBCCCB",29,0)
 . W !?4,"MRA Management Work List.  Please use the 'MRA Management Menu' options"
"RTN","IBCCCB",30,0)
 . W !?4,"for all processing related to this bill."
"RTN","IBCCCB",31,0)
 . Q
"RTN","IBCCCB",32,0)
 ;
"RTN","IBCCCB",33,0)
 ; If MRA is Activated and bill is in Entered/Not Reviewed status and current insurance Co. is WNR -->
"RTN","IBCCCB",34,0)
 ; ask if user wants to continue
"RTN","IBCCCB",35,0)
 I $$EDIACTV^IBCEF4(2),$P($G(^DGCR(399,IBIFN,0)),U,13)=1,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) D  I 'Y G ASK
"RTN","IBCCCB",36,0)
 . W !!?4,"This bill is in a status of ENTERED/NOT REVIEWED and current payer is "
"RTN","IBCCCB",37,0)
 . W !?4,"MEDICARE (WNR). No MRA has been requested for this bill."
"RTN","IBCCCB",38,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="    Are you sure you want to continue to process this bill?: "
"RTN","IBCCCB",39,0)
 . D ^DIR K DIR
"RTN","IBCCCB",40,0)
 ;
"RTN","IBCCCB",41,0)
 ; Display related bills
"RTN","IBCCCB",42,0)
 D DSPRB^IBCCCB0(IBIFN)
"RTN","IBCCCB",43,0)
 ;
"RTN","IBCCCB",44,0)
CHKB ; Entrypoint-COB processing via EDI's COB Mgmt
"RTN","IBCCCB",45,0)
 ; Ask if final EOB was received for previous bill
"RTN","IBCCCB",46,0)
 I '$$FINALEOB^IBCCCB0(IBIFN) S IBSECHK=1
"RTN","IBCCCB",47,0)
 I $G(IBSECHK)=1,$$MCRONBIL^IBEFUNC(IBIFN) G EXIT
"RTN","IBCCCB",48,0)
 ;
"RTN","IBCCCB",49,0)
 ; Warn if previous bill not at least authorized
"RTN","IBCCCB",50,0)
 I '$$MCRONBIL^IBEFUNC(IBIFN) I '$$COBOK^IBCCCB0(IBIFN) G EXIT
"RTN","IBCCCB",51,0)
 ;
"RTN","IBCCCB",52,0)
CHKB1 ; Entry point for Automatic/Silent COB Processing.
"RTN","IBCCCB",53,0)
 ; No writes or reads can occur from this point forward if variable
"RTN","IBCCCB",54,0)
 ; IBSILENT=1.  Any and all error messages should be processed with
"RTN","IBCCCB",55,0)
 ; the ERROR procedure below.
"RTN","IBCCCB",56,0)
 ;
"RTN","IBCCCB",57,0)
 S IBX=$G(^DGCR(399,+IBIFN,0)),DFN=$P(IBX,U,2),IBDT=$P(IBX,U,3)\1,IBER=""
"RTN","IBCCCB",58,0)
 I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK1
"RTN","IBCCCB",59,0)
 ;
"RTN","IBCCCB",60,0)
 F IBI=0,"S","U1","M","MP","M1" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBCCCB",61,0)
 I IB(0)="" S IBER="Invalid Bill Number" D ERROR G ASK1
"RTN","IBCCCB",62,0)
 ;
"RTN","IBCCCB",63,0)
 ; check to see if the bill has been cancelled
"RTN","IBCCCB",64,0)
 I $P(IB("S"),U,16),$P(IB("S"),U,17) D  G ASK1
"RTN","IBCCCB",65,0)
 . N WHO
"RTN","IBCCCB",66,0)
 . S IBER="This bill was cancelled on "
"RTN","IBCCCB",67,0)
 . S IBER=IBER_$$FMTE^XLFDT($P(IB("S"),U,17),"1Z")_" by "
"RTN","IBCCCB",68,0)
 . S WHO="UNSPECIFIED"
"RTN","IBCCCB",69,0)
 . I $P(IB("S"),U,18) S WHO=$P($G(^VA(200,$P(IB("S"),U,18),0)),U,1)
"RTN","IBCCCB",70,0)
 . S IBER=IBER_WHO_"."
"RTN","IBCCCB",71,0)
 . D ERROR
"RTN","IBCCCB",72,0)
 . Q
"RTN","IBCCCB",73,0)
 ;
"RTN","IBCCCB",74,0)
 S IBCOB=$$COB^IBCEF(IBIFN),IBCOBN=$TR(IBCOB,"PSTA","12")
"RTN","IBCCCB",75,0)
 S IBMRAIO=+$$CURR^IBCEF2(IBIFN),IBMRAO=$$MCRWNR^IBEFUNC(IBMRAIO)
"RTN","IBCCCB",76,0)
 S IBNMOLD=$S(IBCOB="P":"Primary",IBCOB="S":"Secondary",IBCOB="T":"Tertiary",IBCOB="A":"Patient",1:"")_$S(IBMRAO:"-MRA Only",1:"")
"RTN","IBCCCB",77,0)
 S IBINSOLD=$G(^DIC(36,$S(IB("MP"):+IB("MP"),IBMRAO:IBMRAIO,1:0),0))
"RTN","IBCCCB",78,0)
 ;
"RTN","IBCCCB",79,0)
NEXTP ; If current bill=MEDICARE WNR and valid 'next payer', use same
"RTN","IBCCCB",80,0)
 ;  bill for new payer
"RTN","IBCCCB",81,0)
 ; If next valid 'payer' is ins co or MEDICARE WNR, create new bill
"RTN","IBCCCB",82,0)
 S IBCOBN=IBCOBN+1,IBNM=$S(IBCOBN=2:"Secondary Payer",IBCOBN=3:"Tertiary Payer",1:"")
"RTN","IBCCCB",83,0)
 ;
"RTN","IBCCCB",84,0)
 I IBNM="" S IBER=$P(IB(0),U,1)_" is a "_IBNMOLD_" bill, there is no next bill in the series." D ERROR G ASK1
"RTN","IBCCCB",85,0)
 ;
"RTN","IBCCCB",86,0)
 S IBX=+$P(IB("M1"),U,(4+IBCOBN)),IBY=$G(^DGCR(399,+IBX,0)),IBCOBIL(+IBIFN)=""
"RTN","IBCCCB",87,0)
 ;
"RTN","IBCCCB",88,0)
 I $P(IBY,U,13)=7 S IBER="The "_$P(IBNM," ",1)_" bill "_$P(IBY,U,1)_" has been cancelled." D ERROR S IBX=""
"RTN","IBCCCB",89,0)
 ;
"RTN","IBCCCB",90,0)
 I +IBX,$D(IBCOBIL(+IBX)) S IBER="Next bill in series can not be determined." D ERROR G ASK1
"RTN","IBCCCB",91,0)
 I +IBX S IBER=$P(IBNM," ",1)_" bill already defined for this series: "_$P(IBY,U,1) D ERROR S IBIFN=IBX G ASK1
"RTN","IBCCCB",92,0)
 ;
"RTN","IBCCCB",93,0)
 S IBINSN=$P(IB("M"),U,IBCOBN) I 'IBINSN S IBER="There is no "_IBNM_" for "_$P(IB(0),U,1)_"." D ERROR G ASK1
"RTN","IBCCCB",94,0)
 S IBINS=$G(^DIC(36,+IBINSN,0)) I IBINS="" S IBER="The "_IBNM_" for "_$P(IB(0),U,1)_" is not a valid Insurance Co." D ERROR G ASK1
"RTN","IBCCCB",95,0)
 ;
"RTN","IBCCCB",96,0)
 S IBMRA=0
"RTN","IBCCCB",97,0)
 I $P(IBINS,U,2)="N" S IBQ=0 D  G:IBQ NEXTP
"RTN","IBCCCB",98,0)
 . I $$MCRWNR^IBEFUNC(IBINSN) D  Q
"RTN","IBCCCB",99,0)
 .. ; Check if a valid tert ins if MCR WNR secondary
"RTN","IBCCCB",100,0)
 .. I IBCOBN'>2 D
"RTN","IBCCCB",101,0)
 ... N Z
"RTN","IBCCCB",102,0)
 ... S Z=+$P(IB("M"),U,IBCOBN+1)
"RTN","IBCCCB",103,0)
 ... I Z,$D(^DIC(36,Z,0)),$P(^(0),U,2)'="N" S IBMRA=1,IBNM=$P(IBNM," ")_"-MRA.Only"
"RTN","IBCCCB",104,0)
 .. I 'IBMRA S IBER="MEDICARE will not reimburse and no further valid insurance for bill" D ERROR S IBQ=1
"RTN","IBCCCB",105,0)
 . S IBER=$P(IB(0),U,1)_" "_IBNM_", "_$P(IBINS,U,1)_", will not Reimburse" D ERROR S IBQ=1
"RTN","IBCCCB",106,0)
 ;
"RTN","IBCCCB",107,0)
 ; If processing in silent mode, skip over the following reads
"RTN","IBCCCB",108,0)
 I $G(IBSILENT) G SKIP
"RTN","IBCCCB",109,0)
 ;
"RTN","IBCCCB",110,0)
 W !!
"RTN","IBCCCB",111,0)
 S DIR("?")="Enter Yes to "_$S('$G(IBMRAO):"create a new bill in the bill series for this care.  The new bill will be the "_$P(IBNM," ")_" bill ",1:"enter the MRA information and change the payer to the "_$P($P(IBNM,"-")," ")_" payer ")
"RTN","IBCCCB",112,0)
 S DIR("?")=DIR("?")_$S('IBMRA:"with the "_IBNM_" responsible for payment.",1:"and will request an MRA from MEDICARE.")
"RTN","IBCCCB",113,0)
 S DIR(0)="YO",DIR("A")=$S('$G(IBMRAO):"Copy "_$P(IB(0),U,1)_" for a bill to the ",1:"Change payer on bill "_$P(IB(0),U,1)_" to ")_IBNM_", "_$P(IBINS,U,1) D ^DIR K DIR I Y'=1 S IBSECHK=1 G ASK1
"RTN","IBCCCB",114,0)
 ;
"RTN","IBCCCB",115,0)
 W !
"RTN","IBCCCB",116,0)
 S IBQ=0
"RTN","IBCCCB",117,0)
 I '$G(IBMRAO) D  G:IBQ ASK1
"RTN","IBCCCB",118,0)
 . N Z
"RTN","IBCCCB",119,0)
 . S DIR("?")="Enter the amount of the payment from the payer of the "_IBNMOLD_" bill."
"RTN","IBCCCB",120,0)
 . S DIR("?")=DIR("?")_"  This will be added to the new bill as a prior payment and subtracted from the charges due for the new bill."
"RTN","IBCCCB",121,0)
 . S DIR("A")="Prior Payment from "_$P(IB(0),U,1)_" "_IBNMOLD_" Payer, "_$P(IBINSOLD,U,1)_": "
"RTN","IBCCCB",122,0)
 . S Z=$$EOBTOT^IBCEU1(IBIFN,$$COBN^IBCEF(IBIFN))
"RTN","IBCCCB",123,0)
 . S:Z DIR("B")=Z
"RTN","IBCCCB",124,0)
 . S DIR(0)="NOA^0:99999999:2"
"RTN","IBCCCB",125,0)
 . D ^DIR K DIR I Y=""!$D(DIRUT) S IBQ=1
"RTN","IBCCCB",126,0)
 . K IBCOB
"RTN","IBCCCB",127,0)
 . S IBCOB("U2",IBCOBN+2)=Y
"RTN","IBCCCB",128,0)
 . Q
"RTN","IBCCCB",129,0)
 ;
"RTN","IBCCCB",130,0)
SKIP ; Jump here if skipping over the preceeding reads
"RTN","IBCCCB",131,0)
 ;
"RTN","IBCCCB",132,0)
 ; If payer is Medicare (WNR) update payer sequence and quit
"RTN","IBCCCB",133,0)
 I IBMRAO!($G(IBSTSM)=1) D  I $G(IBSTSM)'=1 G END
"RTN","IBCCCB",134,0)
 . N IBPRTOT,IBTOTCHG,IBPTRESP
"RTN","IBCCCB",135,0)
 . S IBTOTCHG=0
"RTN","IBCCCB",136,0)
 . ;
"RTN","IBCCCB",137,0)
 . ; Get Total Charges from BILLS/CLAIMS (#399) file
"RTN","IBCCCB",138,0)
 . S IBTOTCHG=$P($G(^DGCR(399,IBIFN,"U1")),U,1)
"RTN","IBCCCB",139,0)
 . ; Calculate Patient Responsibility for Bill  
"RTN","IBCCCB",140,0)
 . ; IB*2.0*447 If claim's type of plan has effective date multiple, use those calculations
"RTN","IBCCCB",141,0)
 . ;S IBPTRESP=$$PREOBTOT^IBCEU0(IBIFN,$G(IBSTSM))
"RTN","IBCCCB",142,0)
 . ; Calculate Patient Primary/Secondary Prior Payment (field 218 or 219 of File 399)
"RTN","IBCCCB",143,0)
 . ; These fields are stored in DGCR(399,IBIFN,"U2") pieces 4 and 5 respectively
"RTN","IBCCCB",144,0)
 . ; Calculate: Prior Payment= Total Submitted Charges - Patient Responsibility
"RTN","IBCCCB",145,0)
 . S:$G(IBSTSM)'=1 IBPTRESP=$S($$MSEDT^IBCEMU4(IBIFN)'="":$$MSPRE^IBCEMU4(IBIFN),1:$$PREOBTOT^IBCEU0(IBIFN,$G(IBSTSM))),IBPRTOT=IBTOTCHG-IBPTRESP
"RTN","IBCCCB",146,0)
 . S:$G(IBSTSM)=1 IBPRTOT=$$EOBTOT^IBCEU1(IBIFN,$$COBN^IBCEF(IBIFN)) ;Pat Resp for non-medicare
"RTN","IBCCCB",147,0)
 . I IBPRTOT<0 S IBPRTOT=0      ; don't allow negative prior payment or offset
"RTN","IBCCCB",148,0)
 . S IBCOB("U2",IBCOBN+2)=IBPRTOT
"RTN","IBCCCB",149,0)
 . ; IB*2.0*547 don't change status back to 1.5 if auto-creating secondary or tertiary in silent mode
"RTN","IBCCCB",150,0)
 . ; D:$G(IBSTSM)'=1 COBCHG^IBCCC2(IBIFN,IBMRAIO,.IBCOB)
"RTN","IBCCCB",151,0)
 . ; D STAT^IBCEMU2(IBIFN,1.5,1)     ; mra eob status update
"RTN","IBCCCB",152,0)
 . I $G(IBSTSM)'=1 D COBCHG^IBCCC2(IBIFN,IBMRAIO,.IBCOB),STAT^IBCEMU2(IBIFN,1.5,1)     ; mra eob status update
"RTN","IBCCCB",153,0)
 . I $G(IBSILENT) S IBERRMSG=""
"RTN","IBCCCB",154,0)
 . Q
"RTN","IBCCCB",155,0)
 ;
"RTN","IBCCCB",156,0)
 ; We should NOT get to here in silent mode .... just in case
"RTN","IBCCCB",157,0)
 I $G(IBSILENT),$G(IBSTSM)'=1 G END    ; currently only MCRWNR in silent mode
"RTN","IBCCCB",158,0)
 ;
"RTN","IBCCCB",159,0)
 ; Payer is not Medicare (WNR) - Perform additional steps
"RTN","IBCCCB",160,0)
 S IBCOB(0,15)=""
"RTN","IBCCCB",161,0)
 S IBCOB(0,21)=$S(IBCOBN=2:"S",IBCOBN=3:"T",1:"")
"RTN","IBCCCB",162,0)
 I IBCOB(0,21)="" G END
"RTN","IBCCCB",163,0)
 S IBCOB("M1",IBCOBN+3)=IBIFN
"RTN","IBCCCB",164,0)
 S IBIDS(.15)=IBIFN
"RTN","IBCCCB",165,0)
 D KVAR
"RTN","IBCCCB",166,0)
 G STEP2^IBCCC
"RTN","IBCCCB",167,0)
 ;
"RTN","IBCCCB",168,0)
END ;
"RTN","IBCCCB",169,0)
 Q
"RTN","IBCCCB",170,0)
 ;
"RTN","IBCCCB",171,0)
 ;
"RTN","IBCCCB",172,0)
ASK1 ; If entering thru EDI COB processing, don't ask for new bill, quit
"RTN","IBCCCB",173,0)
 I $G(IBCBASK) G EXIT
"RTN","IBCCCB",174,0)
 G ASK
"RTN","IBCCCB",175,0)
 ;
"RTN","IBCCCB",176,0)
ERROR ; Display/Save error message
"RTN","IBCCCB",177,0)
 I '$G(IBSILENT) W !,IBER,!
"RTN","IBCCCB",178,0)
 E  S IBERRMSG=IBER
"RTN","IBCCCB",179,0)
 S IBER=""
"RTN","IBCCCB",180,0)
 I $D(IBSECHK) S IBSECHK=1
"RTN","IBCCCB",181,0)
 Q
"RTN","IBCCCB",182,0)
 ;
"RTN","IBCCCB",183,0)
EXIT K IBCAN,IBCOB,IBU
"RTN","IBCCCB",184,0)
KVAR K IBX,IBY,IBI,IBIFN,DFN,IBDT,IB,IBCOBN,IBNMOLD,IBINSOLD,IBNM,IBINSN,IBINS,IBER,DIR,IBAC,IBAC1,IBV,X,Y,IBDATA,IBT,IBND0,DIRUT,IBCOBIL,IBMRA,IBMRAI,IBMRAO,IBMRAIO,IBCBCOPY
"RTN","IBCCCB",185,0)
 K ^UTILITY($J)
"RTN","IBCCCB",186,0)
 Q
"RTN","IBCCCB",187,0)
 ;
"RTN","IBCCCB",188,0)
DSPRB(IBIFN) ; display related bills
"RTN","IBCCCB",189,0)
 ;
"RTN","IBCCCB",190,0)
 D DSPRB^IBCCCB0(IBIFN) ; Code moved for size too big
"RTN","IBCCCB",191,0)
 Q
"RTN","IBCCCB",192,0)
 ;
"RTN","IBCCCB",193,0)
 ; ==============
"RTN","IBCCCB",194,0)
 ; 
"RTN","IBCCCB",195,0)
 ; Copy a bill for Reasonable Charges without cancelling it, update certain fields
"RTN","IBCCCB",196,0)
 ;
"RTN","IBCCCB",197,0)
 ; there is always both inpt inst (created first) and prof charges, always need both bills
"RTN","IBCCCB",198,0)
 ; there may be both outpt inst (created first) and prof charges, may not need both bills
"RTN","IBCCCB",199,0)
 ; if billing by episode rather than by day (current standard) then may need multiple prof bills per day
"RTN","IBCCCB",200,0)
 ; 
"RTN","IBCCCB",201,0)
 ; Inst bills are copied to create prof Bills automatically
"RTN","IBCCCB",202,0)
 ; Subsequent prof bills may be created if the user wants them
"RTN","IBCCCB",203,0)
 ;
"RTN","IBCCCB",204,0)
 ; Only the first bill in the COB series of bills should be copied for the next prof bill
"RTN","IBCCCB",205,0)
 ; The primary inst bill should be copied to get the secondary inst bill
"RTN","IBCCCB",206,0)
 ; The primary prof bill should be copied to get the secondary prof bill
"RTN","IBCCCB",207,0)
 ;
"RTN","IBCCCB",208,0)
CTCOPY(IBIFN,IBMRA) ; based on the type of bill, copy without cancelling
"RTN","IBCCCB",209,0)
 ; IBMRA = 1 if an MRA bill and copy for prof components is desired
"RTN","IBCCCB",210,0)
 ;
"RTN","IBCCCB",211,0)
 D CTCOPY^IBCCCB0(IBIFN,$G(IBMRA)) ;Moved due to routine size
"RTN","IBCCCB",212,0)
 Q
"RTN","IBCCCB",213,0)
 ;
"RTN","IBCE837")
0^25^B86551026^B82438812
"RTN","IBCE837",1,0)
IBCE837 ;ALB/TMP - OUTPUT FOR 837 TRANSMISSION ;8/6/03 10:48am
"RTN","IBCE837",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,197,232,296,349,547**;21-MAR-94;Build 119
"RTN","IBCE837",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCE837",4,0)
 ;
"RTN","IBCE837",5,0)
EN ; Auto-txmt
"RTN","IBCE837",6,0)
 N IBSITE8,IBRUN,X,X1,X2,DA,DIE,DR
"RTN","IBCE837",7,0)
 K ^TMP("IBRESUBMIT",$J),^TMP("IBONE",$J)
"RTN","IBCE837",8,0)
 S IBSITE8=$G(^IBE(350.9,1,8)),IBRUN=1
"RTN","IBCE837",9,0)
 Q:'$P(IBSITE8,U,3)!'$P(IBSITE8,U,10)
"RTN","IBCE837",10,0)
 I '$$MGCHK^IBCE(0) Q
"RTN","IBCE837",11,0)
 I $P(IBSITE8,U,5) D  Q:'IBRUN
"RTN","IBCE837",12,0)
 . S X2=+$P(IBSITE8,U,3),X1=$P(IBSITE8,U,5) D C^%DTC
"RTN","IBCE837",13,0)
 . I X>DT S IBRUN=0 Q
"RTN","IBCE837",14,0)
 D QTXMT^IBCE837B(IBSITE8)
"RTN","IBCE837",15,0)
 I $P(IBSITE8,U,5)'=DT S DIE="^IBE(350.9,",DR="8.05////"_DT,DA=1 D ^DIE
"RTN","IBCE837",16,0)
 Q
"RTN","IBCE837",17,0)
 ;
"RTN","IBCE837",18,0)
SETUP(IBEXTRP) ; Txmn set up
"RTN","IBCE837",19,0)
 ; IBEXTRP=1 prnt 837 data
"RTN","IBCE837",20,0)
 N IB
"RTN","IBCE837",21,0)
 K ^TMP("IBXMSG",$J),^TMP("IBTXMT",$J),^TMP("IBHDR",$J),^TMP("IBHDR1",$J),^TMP("IBXERR",$J),IBXERR,^TMP("IBXINS",$J),^TMP("IBTX",$J),^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCE837",22,0)
 ; Chk extract running
"RTN","IBCE837",23,0)
 Q:$G(IBEXTRP)
"RTN","IBCE837",24,0)
 ; Chk resubmit tst
"RTN","IBCE837",25,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,4) S ^TMP("IBEDI_TEST_BATCH",$J)=1 Q
"RTN","IBCE837",26,0)
 I '$D(^TMP("IBRESUBMIT",$J)),'$D(^TMP("IBONE",$J)) D  Q:$D(IBXERR)
"RTN","IBCE837",27,0)
 . L +^IBA(364,0):5
"RTN","IBCE837",28,0)
 . I '$T D  Q
"RTN","IBCE837",29,0)
 .. S IBXERR=1,^TMP("IBXERR",$J,1)="A PREVIOUS EDI EXTRACT IS RUNNING - ANOTHER CANNOT BE STARTED "_$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","IBCE837",30,0)
 ;
"RTN","IBCE837",31,0)
 I $D(^TMP("IBRESUBMIT",$J)) D  Q:$D(IBXERR)
"RTN","IBCE837",32,0)
 .N Z,Z0
"RTN","IBCE837",33,0)
 .S Z0=$P($G(^TMP("IBRESUBMIT",$J)),U,2),Z=$$LOCK^IBCEM02(364.1,Z0)
"RTN","IBCE837",34,0)
 .I 'Z D
"RTN","IBCE837",35,0)
 ..S IBXERR=1
"RTN","IBCE837",36,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",1)="Another user is currently processing batch "_Z0_".  Batch NOT resubmitted."
"RTN","IBCE837",37,0)
 .I 'Z D
"RTN","IBCE837",38,0)
 ..S IBXERR=1
"RTN","IBCE837",39,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",1)="Another user is currently processing batch "_Z0_".  Batch NOT resubmitted."
"RTN","IBCE837",40,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",2)="Resubmit was attempted by: "_$P($G(^VA(200,DUZ,0)),U)_" ("_DUZ_")"
"RTN","IBCE837",41,0)
 I $D(^TMP("IBONE",$J)) S IB=$G(^($J))+1 D  Q:$D(IBXERR)
"RTN","IBCE837",42,0)
 .N Z,Z0
"RTN","IBCE837",43,0)
 .S Z0=$O(^TMP("IBONE",$J,"")),Z=$$LOCK^IBCEM02(364,Z0)
"RTN","IBCE837",44,0)
 .I 'Z D
"RTN","IBCE837",45,0)
 ..S IBXERR=1
"RTN","IBCE837",46,0)
 ..S ^TMP("IBONE",$J,"IBXERR",1)="Another user is currently processing bill "_$P($G(^DGCR(399,+$G(^IBA(364,Z0,0)),0)),U)_".  Bill NOT "_$P("^re",U,IB)_"submitted."
"RTN","IBCE837",47,0)
 ..S ^TMP("IBONE",$J,"IBXERR",2)=$P("S^Res",U,IB)_"ubmit was attempted by: "_$P($G(^VA(200,DUZ,0)),U)_" ("_DUZ_")"
"RTN","IBCE837",48,0)
 Q
"RTN","IBCE837",49,0)
 ;
"RTN","IBCE837",50,0)
FIND ; Find/sort by CMS-1500/UB-04, test/live, ins ID # & div
"RTN","IBCE837",51,0)
 ;
"RTN","IBCE837",52,0)
 N IBX,IB0,IBCBH,IBINS,IBXIEN,IBNID,IBGBL,IBTXTEST,IBBTYP,IB837R,IBDIV,IBNOTX,IBTXST,IBTEST,IBSEC,IBNF
"RTN","IBCE837",53,0)
 K ^TMP($J,"BILL"),^TMP("IBICT",$J)
"RTN","IBCE837",54,0)
 ;
"RTN","IBCE837",55,0)
 S IBGBL=$S($D(^TMP("IBONE",$J)):"^TMP(""IBONE"","_$J_")",$D(^TMP("IBSELX",$J)):"^TMP(""IBSELX"","_$J_")",'$D(^TMP("IBRESUBMIT",$J)):"^IBA(364,""ASTAT"",""X"")",1:"^TMP(""IBRESUBMIT"","_$J_")")
"RTN","IBCE837",56,0)
 S IBTEST=+$G(^TMP("IBEDI_TEST_BATCH",$J))
"RTN","IBCE837",57,0)
 ;
"RTN","IBCE837",58,0)
 S IBX="" F  S IBX=$O(@IBGBL@(IBX)) Q:'IBX  D
"RTN","IBCE837",59,0)
 .;IB 547, If resubmitting a locally printed claim to test via RCB, there is no entry in 364 yet, so pass the NEW flag
"RTN","IBCE837",60,0)
 .;S IBXIEN=+$G(^IBA(364,IBX,0)),IB0=$G(^DGCR(399,IBXIEN,0))
"RTN","IBCE837",61,0)
 .;S IBTXST=$$TXMT^IBCEF4(IBXIEN,.IBNOTX)
"RTN","IBCE837",62,0)
 .S IBXIEN=+$G(^IBA(364,IBX,0)),IBNF=""
"RTN","IBCE837",63,0)
 .I $G(IBLOC)=1,$G(IBTYPPTC)="TEST" S IBXIEN=IBX,IBNF=1
"RTN","IBCE837",64,0)
 .S IB0=$G(^DGCR(399,IBXIEN,0))
"RTN","IBCE837",65,0)
 .S IBTXST=$$TXMT^IBCEF4(IBXIEN,.IBNOTX,IBNF)
"RTN","IBCE837",66,0)
 .Q:IBTXST=""  ; no txmt
"RTN","IBCE837",67,0)
 .Q:$S(IB0="":1,$P(IB0,U,13)>4&'IBTEST:1,1:$D(^TMP($J,"BILL",$P(IB0,U))))
"RTN","IBCE837",68,0)
 .S IBCBH=$P(IB0,U,21) S:"PST"'[IBCBH!(IBCBH="") IBCBH="P"
"RTN","IBCE837",69,0)
 .S IBINS=$P($G(^DGCR(399,IBXIEN,"I"_($F("PST",IBCBH)-1))),U)
"RTN","IBCE837",70,0)
 .S IBTXTEST=$S(IBTEST:2,1:+$$TEST^IBCEF4(IBXIEN))
"RTN","IBCE837",71,0)
 .S IBBTYP=$P("P^I",U,($$FT^IBCEF(IBXIEN)=3)+1)_"-"_IBTXTEST
"RTN","IBCE837",72,0)
 .Q:$$TESTPT^IBCEU($P(IB0,U,2))&'IBTXTEST  ;Test pt
"RTN","IBCE837",73,0)
 .;
"RTN","IBCE837",74,0)
 .I IBTXTEST=1 D TESTLIM^IBCE837A(.IBINS)
"RTN","IBCE837",75,0)
 .;
"RTN","IBCE837",76,0)
 .I IBINS,$P(IB0,U,2) D
"RTN","IBCE837",77,0)
 .. D SETVAR^IBCE837A(IBXIEN,IBINS,IB0,.IBSEC,.IBNID,.IB837R,.IBDIV)
"RTN","IBCE837",78,0)
 ..S:'$D(^TMP("IBXINS",$J,IBDIV_U_IBBTYP,IBNID)) ^(IBNID)=IBINS S ^TMP("IBTXMT",$J,IBDIV_U_IBBTYP,IB837R_U_IBSEC,IBNID,$P(IB0,U,2),IBXIEN_U_IBX)=IBX
"RTN","IBCE837",79,0)
 .;
"RTN","IBCE837",80,0)
 .S ^TMP($J,"BILL",$P(IB0,U))=""
"RTN","IBCE837",81,0)
 ;
"RTN","IBCE837",82,0)
 I $D(^TMP("IBTXMT",$J)) S ^TMP("IBXDATA",$J)=IBNID
"RTN","IBCE837",83,0)
 K ^TMP($J,"BILL")
"RTN","IBCE837",84,0)
 Q
"RTN","IBCE837",85,0)
 ;
"RTN","IBCE837",86,0)
OUTPUT ; 837
"RTN","IBCE837",87,0)
 ;
"RTN","IBCE837",88,0)
 N IB837,IBSITE,IBMAX,IBQUEUE,IBTQUEUE,IBNID,IBCT,IBCTM,IBSIZE,IBBILL,IBLCNT,IBDFN,IBREF,IBSIZEM,IBPARMS,IBD,IBDESC,IBINS,IBQ,IB3,IBBTYP,IBTXTEST,IBDEFPRT,IB837R,IBBTYPX
"RTN","IBCE837",89,0)
 ;
"RTN","IBCE837",90,0)
 K ^TMP("IBCE-BATCH",$J)
"RTN","IBCE837",91,0)
 S IBSITE=$G(^IBE(350.9,1,8)),IBMAX=$P(IBSITE,U,4),IB837=+$O(^IBE(353,"B","IB 837 TRANSMISSION",0)),IB837=$S($P($G(^IBE(353,+IB837,2)),U,8):$P(^(2),U,8),1:IB837) S:'IBMAX IBMAX=999
"RTN","IBCE837",92,0)
 ;
"RTN","IBCE837",93,0)
 I 'IB837 D  Q
"RTN","IBCE837",94,0)
 . N IBZ,XMBODY
"RTN","IBCE837",95,0)
 . S XMBODY="IBZ"
"RTN","IBCE837",96,0)
 . S IBZ(1)="The transmission form for sending electronic claims is not in your form file",IBZ(2)="NO CLAIMS WERE OUTPUT - FORM = IB 837 TRANSMISSION"
"RTN","IBCE837",97,0)
 . D ERRMSG^IBCE837A(XMBODY)
"RTN","IBCE837",98,0)
 ;
"RTN","IBCE837",99,0)
 S (IBCT,IBCTM,IBSIZE)=0,IBQUEUE=$P(IBSITE,U),IBTQUEUE=$P(IBSITE,U,9),IBDESC=""
"RTN","IBCE837",100,0)
 ;
"RTN","IBCE837",101,0)
 Q:IBQUEUE=""&(IBTQUEUE="")
"RTN","IBCE837",102,0)
 ;
"RTN","IBCE837",103,0)
 S IBQ="",IBBTYPX=""
"RTN","IBCE837",104,0)
 ; Sort: div_^_bill type_-_test stat,ins co transmission destination^sec status,dfn,claim #
"RTN","IBCE837",105,0)
 F  S IBBTYPX=$O(^TMP("IBTXMT",$J,IBBTYPX)),IBBTYP=$P(IBBTYPX,U,2) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,"",IBSITE,.IBSIZE) Q:IBBTYPX=""  D
"RTN","IBCE837",106,0)
 . S IBDEFPRT=$S($E(IBBTYP)="P":"SPRINT",1:"SPRINT")
"RTN","IBCE837",107,0)
 . S IBTXTEST=+$P(IBBTYP,"-",2),IBQ=$S('IBTXTEST:IBQUEUE,IBTXTEST=2:"MCT",1:IBTQUEUE)
"RTN","IBCE837",108,0)
 . Q:IBQ=""  ; Queue
"RTN","IBCE837",109,0)
 . ;
"RTN","IBCE837",110,0)
 . S IBD=$S($E(IBBTYP)="P":"PROF",1:"INST")_" CLAIMS-"_$$HTE^XLFDT($H,2)_"  "
"RTN","IBCE837",111,0)
 . S IBDESC=$S('$P(IBSITE,U,7):$S('IBTXTEST:"",1:"TEST ")_IBD,1:"")
"RTN","IBCE837",112,0)
 . ;
"RTN","IBCE837",113,0)
 . S IB837R=""
"RTN","IBCE837",114,0)
 . F  S IB837R=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R)) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,"",IBSITE,.IBSIZE) Q:IB837R=""  D
"RTN","IBCE837",115,0)
 .. S (IBINS,IBNID)="",IBLCNT=0
"RTN","IBCE837",116,0)
 .. F  S IBNID=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID)) K ^TMP("IBHDR1",$J) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,IBINS,IBSITE,.IBSIZE) Q:IBNID=""  D
"RTN","IBCE837",117,0)
 ...;
"RTN","IBCE837",118,0)
 ...S IBDFN=0,IBINS=+$G(^TMP("IBXINS",$J,IBBTYPX,IBNID))
"RTN","IBCE837",119,0)
 ... ;
"RTN","IBCE837",120,0)
 ...I $P(IBSITE,U,7) D  ; 1 ins/batch
"RTN","IBCE837",121,0)
 .... S IBLCNT=0
"RTN","IBCE837",122,0)
 .... S IBDESC=$E($S('IBTXTEST:"",1:"TEST ")_IBD_$P($G(^DIC(36,IBINS,0)),U),1,80)
"RTN","IBCE837",123,0)
 ... ;
"RTN","IBCE837",124,0)
 ...F  S IBDFN=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID,IBDFN)) Q:'IBDFN  S IBREF="" F  S IBREF=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID,IBDFN,IBREF)) Q:'IBREF  D
"RTN","IBCE837",125,0)
 ....I '(IBCTM#IBMAX),IBCTM D MAILIT^IBCE837A(IBQ,.IBBILL,.IBCTM,"",IBDESC,IBBTYP,IBINS) S IBSIZE=0 ;exceeds max #
"RTN","IBCE837",126,0)
 ....D BILLPARM^IBCEFG0(+IBREF,.IBPARMS)
"RTN","IBCE837",127,0)
 ....S IBSIZEM=$$EXTRACT^IBCEFG(IB837,+IBREF,1,.IBPARMS)
"RTN","IBCE837",128,0)
 ....I (IBSIZEM+IBSIZE)>30000,IBSIZE D  ; exceeds max size
"RTN","IBCE837",129,0)
 .....D MAILIT^IBCE837A(IBQ,.IBBILL,.IBCTM,"",IBDESC,IBBTYP,IBINS) S IBSIZE=0 K ^TMP("IBXDATA",$J) S IBSIZEM=$$EXTRACT^IBCEFG(IB837,+IBREF,1,.IBPARMS)
"RTN","IBCE837",130,0)
 ....I 'IBSIZEM D:'IBCTM  Q
"RTN","IBCE837",131,0)
 ..... D CHKBTCH^IBCE837A(+$G(^TMP("IBHDR",$J))) K ^TMP("IBHDR",$J)
"RTN","IBCE837",132,0)
 ....S IBCT=IBCT+1,IBCTM=IBCTM+1
"RTN","IBCE837",133,0)
 ....D:$D(^TMP("IBXDATA",$J)) MESSAGE(.IBLCNT,$P(IBREF,U,2),.IBBILL,.IBCTM,.IBSIZE,IBSIZEM,"",IBBTYP,IBINS)
"RTN","IBCE837",134,0)
 ..;
"RTN","IBCE837",135,0)
 ..I $G(IBTXTEST)=1 S IBINS=0 F  S IBINS=$O(^TMP("IBICT",$J,IBINS)) Q:'IBINS  S IB3=$G(^DIC(36,IBINS,3)) D
"RTN","IBCE837",136,0)
 ... N DIE,DA,DR
"RTN","IBCE837",137,0)
 ...S DIE="^DIC(36,",DA=IBINS,DR="3.05////"_DT_";3.07////"_($S($P(IB3,U,5)'=DT:0,1:$P(IB3,U,7))+^TMP("IBICT",$J,IBINS)) D ^DIE
"RTN","IBCE837",138,0)
 ;
"RTN","IBCE837",139,0)
 I $O(^TMP("IBXERR",$J,"")) D  ;Error to mail grp
"RTN","IBCE837",140,0)
 .N XMTO,XMBODY,XMDUZ,XMSUBJ,IBCT,IBERR
"RTN","IBCE837",141,0)
 .K ^TMP("IBXMSG",$J)
"RTN","IBCE837",142,0)
 .S ^TMP("IBXMSG",$J,1)="The following authorized bill(s) were not transmitted due to errors indicated.",^(2)="Once the errors are corrected, the bill(s) will be included in the next run.",^(3)=" "
"RTN","IBCE837",143,0)
 .;
"RTN","IBCE837",144,0)
 .S IBERR=0,IBCT=3
"RTN","IBCE837",145,0)
 .F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  S IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)="Bill #: "_$P($G(^DGCR(399,IBERR,0)),U),IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)=$J("",5)_^TMP("IBXERR",$J,IBERR)
"RTN","IBCE837",146,0)
 .S XMBODY="^TMP(""IBXMSG"","_$J_")" D ERRMSG^IBCE837A(XMBODY)
"RTN","IBCE837",147,0)
 .;
"RTN","IBCE837",148,0)
 .K ^TMP("IBXMSG",$J),^TMP("IBICT",$J)
"RTN","IBCE837",149,0)
 ;
"RTN","IBCE837",150,0)
 I $O(^TMP("IBCE-BATCH",$J,"")) D
"RTN","IBCE837",151,0)
 .N IB,IB0,IBL,IBT,IBX,XMTO,XMDUZ,XMSUBJ,IBRESUB,IBTESTB,XMZ
"RTN","IBCE837",152,0)
 .S IBRESUB=$D(^TMP("IBRESUBMIT",$J))
"RTN","IBCE837",153,0)
 .;
"RTN","IBCE837",154,0)
 .S IBT(1)="The following batches were "_$S('IBRESUB:"",1:"re-")_"submitted to Austin "_$S(IBTXTEST'=2:"",1:"as TEST ")_$$HTE^XLFDT($H,"2D")_":"
"RTN","IBCE837",155,0)
 .S IBT(2)=$S('IBRESUB:" ",1:"   [Resubmitted by: "_$P($G(^VA(200,+DUZ,0)),U)_" (#"_DUZ_")]") S:IBRESUB IBT(3)=" "
"RTN","IBCE837",156,0)
 .;
"RTN","IBCE837",157,0)
 .S IBL=$S('IBRESUB:2,1:3),IB=""
"RTN","IBCE837",158,0)
 .F  S IB=$O(^TMP("IBCE-BATCH",$J,IB)) Q:IB=""  S IBL=IBL+1,IB0=$G(^(IB)) D
"RTN","IBCE837",159,0)
 .. S IBX=IB
"RTN","IBCE837",160,0)
 .. I $P(IB0,U,3)'="",IBTXTEST=2 S IBX=$P(IB0,U,3)_" (AS BATCH "_IB_")"
"RTN","IBCE837",161,0)
 ..S IBT(IBL)=" "_IBX_" "_$P($G(^IBA(364.1,+IB0,0)),U,8),IBL=IBL+1,IBT(IBL)="    ("_+$P(IB0,U,2)_" bills)"
"RTN","IBCE837",162,0)
 .;
"RTN","IBCE837",163,0)
 .S XMTO("I:G.IB EDI")="",XMDUZ="",XMBODY="IBT",XMSUBJ="EDI 837 "_$S('IBRESUB:"",1:"RE-")_"SUBMISSION BATCH LIST"_$S(IBTXTEST'=2:"",1:" FOR TEST")
"RTN","IBCE837",164,0)
 .D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCE837",165,0)
 .;
"RTN","IBCE837",166,0)
 .S:IBRESUB ^TMP("IBRESUBMIT",$J,0)=1
"RTN","IBCE837",167,0)
 Q
"RTN","IBCE837",168,0)
 ;
"RTN","IBCE837",169,0)
CLEANUP ; moved
"RTN","IBCE837",170,0)
 D CLEANUP^IBCE837A
"RTN","IBCE837",171,0)
 Q
"RTN","IBCE837",172,0)
 ;
"RTN","IBCE837",173,0)
MESSAGE(IBLCNT,IBIEN,IBBILL,IBCTM,IBSIZE,IBSIZEM,IBDUZ,IBBTYP,IBINS) ; Create msg in ^TMP("IBXMSG",$J)
"RTN","IBCE837",174,0)
 ;IBLCNT = last msg line extracted
"RTN","IBCE837",175,0)
 ;IBIEN = ien file 364 bill entry
"RTN","IBCE837",176,0)
 ;IBBILL = array file 364 ien's of bills being sent
"RTN","IBCE837",177,0)
 ; IBBILL(IEN)=""
"RTN","IBCE837",178,0)
 ;IBSIZE = # bytes in msg
"RTN","IBCE837",179,0)
 ;IBSIZEM = # bytes in record to be added to msg
"RTN","IBCE837",180,0)
 ;IBCTM = # bills in batch
"RTN","IBCE837",181,0)
 ;IBDUZ = user ien running extract (Postmaster if auto)
"RTN","IBCE837",182,0)
 ;IBBTYP = x-y where x = P for prof, I for inst
"RTN","IBCE837",183,0)
 ;         y = 1 for test, 0 for live txmt
"RTN","IBCE837",184,0)
 ;IBINS = ien of 1 ins co for batch
"RTN","IBCE837",185,0)
 ;
"RTN","IBCE837",186,0)
 N IB,IBL,IB1,IB2,IB3,IBQ,IBREC,IBDEL
"RTN","IBCE837",187,0)
 S IBDEL=$O(^IBA(364.5,"B","N-SEGMENT DELIMITER","")),IBDEL=$P($G(^IBA(364.5,+IBDEL,0)),U,8) S:IBDEL="" IBDEL="~"
"RTN","IBCE837",188,0)
 S IBSIZE=IBSIZE+IBSIZEM,IB1="",IBREC=""
"RTN","IBCE837",189,0)
 F  S IB1=$O(^TMP("IBXDATA",$J,1,IB1)) Q:IB1=""  D
"RTN","IBCE837",190,0)
 .S (IBREC,IB2)=""
"RTN","IBCE837",191,0)
 .F  S IB2=$O(^TMP("IBXDATA",$J,1,IB1,IB2)) Q:$S(IB2="":1,IB1=1:"",1:'$O(^(IB2,1)))  D
"RTN","IBCE837",192,0)
 ..S IB3="",IBREC=""
"RTN","IBCE837",193,0)
 ..F  S IB3=$O(^TMP("IBXDATA",$J,1,IB1,IB2,IB3)) D:IB3=""&($L(IBREC)) SETG Q:IB3=""  S:$S(IB3=1:1,1:$P(IBREC,U)'="") $P(IBREC,U,IB3)=$$UP^XLFSTR(^TMP("IBXDATA",$J,1,IB1,IB2,IB3))
"RTN","IBCE837",194,0)
 S IBBILL(IBIEN)=""
"RTN","IBCE837",195,0)
 K ^TMP("IBXDATA",$J)
"RTN","IBCE837",196,0)
 Q
"RTN","IBCE837",197,0)
 ;
"RTN","IBCE837",198,0)
SETHDR ; hdr for curr batch
"RTN","IBCE837",199,0)
 S ^TMP("IBHDR",$J)=$G(^TMP("IBXDATA",$J,1,5,1,2))
"RTN","IBCE837",200,0)
 Q
"RTN","IBCE837",201,0)
 ;
"RTN","IBCE837",202,0)
SETHDR1 ; hdr node for curr ins
"RTN","IBCE837",203,0)
 S ^TMP("IBHDR1",$J)=$G(^TMP("IBXDATA",$J,1,20,1,8))
"RTN","IBCE837",204,0)
 Q
"RTN","IBCE837",205,0)
 ;
"RTN","IBCE837",206,0)
SETG ; msg global for each segment
"RTN","IBCE837",207,0)
 S IBREC=$TR(IBREC,IBDEL)
"RTN","IBCE837",208,0)
 S IBREC=IBREC_IBDEL,IBSIZE=IBSIZE+$L(IBDEL)
"RTN","IBCE837",209,0)
 S IBLCNT=IBLCNT+1,^TMP("IBXMSG",$J,IBLCNT)=IBREC
"RTN","IBCE837",210,0)
 Q
"RTN","IBCE837",211,0)
 ;
"RTN","IBCE837",212,0)
ONE ; Txmt 1 or more bills for test or in 'X' status for live
"RTN","IBCE837",213,0)
 Q:'$$MGCHK^IBCE(0)
"RTN","IBCE837",214,0)
 D SETUP(0)
"RTN","IBCE837",215,0)
 I '$D(IBXERR) D FIND,OUTPUT
"RTN","IBCE837",216,0)
 D CLEANUP^IBCE837A
"RTN","IBCE837",217,0)
 Q
"RTN","IBCE837",218,0)
 ;
"RTN","IBCECOB")
0^55^B35210416^B27628888
"RTN","IBCECOB",1,0)
IBCECOB ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,432,488,516,547**;21-MAR-94;Build 119
"RTN","IBCECOB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECOB",4,0)
 ;
"RTN","IBCECOB",5,0)
EN ; -- main entry point for COB management
"RTN","IBCECOB",6,0)
 K IBSRT,IBMRADUP,IBSRCH
"RTN","IBCECOB",7,0)
 I $G(IBMRANOT) D EN^VALM("IBCEM COB MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",8,0)
 I '$G(IBMRANOT) D EN^VALM("IBCEM MRA MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",9,0)
 Q
"RTN","IBCECOB",10,0)
 ;
"RTN","IBCECOB",11,0)
HDR ; -- header code
"RTN","IBCECOB",12,0)
 I '$G(IBMRANOT) S VALMSG="!=Data Mismatch/MSE      Enter ?? for more actions"
"RTN","IBCECOB",13,0)
 Q
"RTN","IBCECOB",14,0)
 ;
"RTN","IBCECOB",15,0)
INIT ; -- init variables and list array
"RTN","IBCECOB",16,0)
 N DIC,DIRUT,DIROUT,DTOUT,DUOUT,X,Y,DIR,IB1,IBQUIT
"RTN","IBCECOB",17,0)
 K ^TMP("IBBIL",$J),^TMP("IBBIL-DIV",$J)
"RTN","IBCECOB",18,0)
 S IBSRT=""
"RTN","IBCECOB",19,0)
 S IB1=1
"RTN","IBCECOB",20,0)
 W !
"RTN","IBCECOB",21,0)
 F  S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select "_$S('IB1:"Another ",1:"")_"BILLER: "_$S('IB1:"",1:"ALL//") D ^DIC K DIC D  Q:Y<0
"RTN","IBCECOB",22,0)
 . Q:Y<0
"RTN","IBCECOB",23,0)
 . I $D(^TMP("IBBIL",$J,+Y)) W !,"This biller has already been selected" Q
"RTN","IBCECOB",24,0)
 . S ^TMP("IBBIL",$J,+Y)=""
"RTN","IBCECOB",25,0)
 . S IB1=0
"RTN","IBCECOB",26,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",27,0)
 ;
"RTN","IBCECOB",28,0)
 I '$G(IBMRANOT) G DIVX
"RTN","IBCECOB",29,0)
 ;
"RTN","IBCECOB",30,0)
DIV ; division
"RTN","IBCECOB",31,0)
 W !
"RTN","IBCECOB",32,0)
 S DIR(0)="SA^A:All Divisions;S:Selected Divisions"
"RTN","IBCECOB",33,0)
 S DIR("A")="Include All Divisions or Selected Divisions? "
"RTN","IBCECOB",34,0)
 S DIR("B")="All"
"RTN","IBCECOB",35,0)
 D ^DIR K DIR
"RTN","IBCECOB",36,0)
 I $D(DIROUT)!$D(DIRUT) S VALMQUIT=1 G INITQ  ;Timeout or User "^"
"RTN","IBCECOB",37,0)
 I Y="A" G DIVX
"RTN","IBCECOB",38,0)
 ;
"RTN","IBCECOB",39,0)
 W !
"RTN","IBCECOB",40,0)
 S IBQUIT=0
"RTN","IBCECOB",41,0)
 F  D  I IBQUIT S IBQUIT=IBQUIT-1 Q
"RTN","IBCECOB",42,0)
 . S DIC=40.8,DIC(0)="AEMQ",DIC("A")="   Select Division: "
"RTN","IBCECOB",43,0)
 . I $O(^TMP("IBBIL-DIV",$J,"")) S DIC("A")="   Select Another Division: "
"RTN","IBCECOB",44,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBCECOB",45,0)
 . I X="^^" S IBQUIT=2 Q       ; user entered ^^
"RTN","IBCECOB",46,0)
 . I +Y'>0 S IBQUIT=1 Q        ; user is done
"RTN","IBCECOB",47,0)
 . S ^TMP("IBBIL-DIV",$J,+Y)=$P(Y,U,2)
"RTN","IBCECOB",48,0)
 . Q
"RTN","IBCECOB",49,0)
 ;
"RTN","IBCECOB",50,0)
 I IBQUIT S VALMQUIT=1 G INITQ  ;User "^" out of the selection
"RTN","IBCECOB",51,0)
 ;
"RTN","IBCECOB",52,0)
 I '$O(^TMP("IBBIL-DIV",$J,"")) D  G DIV
"RTN","IBCECOB",53,0)
 . W *7,!!?3,"No divisions have been selected.  Please try again."
"RTN","IBCECOB",54,0)
 . Q
"RTN","IBCECOB",55,0)
 ;
"RTN","IBCECOB",56,0)
DIVX ; Exit Division selection.
"RTN","IBCECOB",57,0)
 ;
"RTN","IBCECOB",58,0)
 W !
"RTN","IBCECOB",59,0)
 I '$G(IBMRANOT) S DIR("A")="Within Division " G SRT
"RTN","IBCECOB",60,0)
 ;
"RTN","IBCECOB",61,0)
CLM ; patch 547 - new claim prompt for CBW
"RTN","IBCECOB",62,0)
 ;
"RTN","IBCECOB",63,0)
 S DIR("A")="(P)rimary Claims,(S)econdary Claims or (B)oth: ",DIR("B")="Both"
"RTN","IBCECOB",64,0)
 S DIR(0)="SBA^P -:Primary Claims;S -:Secondary Claims;B -:Both"
"RTN","IBCECOB",65,0)
 S DIR("?")="This field determines whether you want to search for just primary claims, just secondary/tertiary claims or both."
"RTN","IBCECOB",66,0)
 D ^DIR K DIR S DIR("A")=""
"RTN","IBCECOB",67,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",68,0)
 S IBSRCH=$E(Y)
"RTN","IBCECOB",69,0)
 W !
"RTN","IBCECOB",70,0)
 ;
"RTN","IBCECOB",71,0)
SRT ;
"RTN","IBCECOB",72,0)
 S DIR("A")=DIR("A")_"Sort By: ",DIR("B")="BILLER"
"RTN","IBCECOB",73,0)
 S DIR(0)="SBA^B:BILLER;D:DAYS SINCE TRANSMISSION OF LATEST BILL;L:DATE LAST "_$S($G(IBMRANOT):"EOB",1:"MRA")_" RECEIVED;"
"RTN","IBCECOB",74,0)
 ; IB*2.0*547 add Tertiary and Primary Insurance Company sorts for CBW
"RTN","IBCECOB",75,0)
 S:'$G(IBMRANOT) DIR(0)=DIR(0)_"I:SECONDARY INSURANCE COMPANY;M:"_$S($G(IBMRANOT):"EOB",1:"MRA")_" STATUS;P:PATIENT NAME;R:PATIENT RESPONSIBILITY;S:SERVICE DATE"
"RTN","IBCECOB",76,0)
 S:$G(IBMRANOT)=1 DIR(0)=DIR(0)_"I:SECONDARY INSURANCE COMPANY;M:"_$S($G(IBMRANOT):"EOB",1:"MRA")_" STATUS;P:PATIENT NAME;R:PATIENT RESPONSIBILITY;S:SERVICE DATE;K:PRIMARY INSURANCE COMPANY"
"RTN","IBCECOB",77,0)
 S DIR("?")="Enter the code to indicate how the list should be sorted." D ^DIR K DIR
"RTN","IBCECOB",78,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",79,0)
 S IBSRT=Y
"RTN","IBCECOB",80,0)
 ;
"RTN","IBCECOB",81,0)
 W !
"RTN","IBCECOB",82,0)
 S IBMRADUP=0
"RTN","IBCECOB",83,0)
 S DIR("A")="Do you want to include Denied "_$S($G(IBMRANOT):"EOB",1:"MRA")_"s for Duplicate Claim/Service",DIR("B")="No",DIR(0)="YO"
"RTN","IBCECOB",84,0)
 D ^DIR K DIR
"RTN","IBCECOB",85,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",86,0)
 I Y S IBMRADUP=1
"RTN","IBCECOB",87,0)
 ;
"RTN","IBCECOB",88,0)
 D BLD^IBCECOB1
"RTN","IBCECOB",89,0)
 ;
"RTN","IBCECOB",90,0)
INITQ Q
"RTN","IBCECOB",91,0)
 ;
"RTN","IBCECOB",92,0)
HELP ; -- help code
"RTN","IBCECOB",93,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECOB",94,0)
 Q
"RTN","IBCECOB",95,0)
 ;
"RTN","IBCECOB",96,0)
EXIT ; -- exit code
"RTN","IBCECOB",97,0)
 K ^TMP("IBBIL",$J),^TMP("IBBIL-DIV",$J)
"RTN","IBCECOB",98,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J)
"RTN","IBCECOB",99,0)
 K ^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB",100,0)
 D CLEAN^VALM10
"RTN","IBCECOB",101,0)
 Q
"RTN","IBCECOB",102,0)
 ;
"RTN","IBCECOB",103,0)
EXP ; -- expand code to show additional details of the EOB record
"RTN","IBCECOB",104,0)
 NEW IBDA,IBIFN,LSTENTRY
"RTN","IBCECOB",105,0)
 D SEL^IBCECOB2(.IBDA,1)                       ; selects a bill
"RTN","IBCECOB",106,0)
 S LSTENTRY=+$O(IBDA(0)) I 'LSTENTRY G EXPQ    ; list entry number
"RTN","IBCECOB",107,0)
 S IBIFN=+$G(IBDA(LSTENTRY)) I 'IBIFN G EXPQ   ; bill#
"RTN","IBCECOB",108,0)
 ;
"RTN","IBCECOB",109,0)
 ; If only one MRA on file, call the listman screen and quit
"RTN","IBCECOB",110,0)
 I $$MRACNT^IBCEMU1(IBIFN)=1 D EN^VALM("IBCEM MRA DETAIL") G EXPQ
"RTN","IBCECOB",111,0)
 ;
"RTN","IBCECOB",112,0)
EXPLOOP ; At this point, we know there are multiple MRA's on file
"RTN","IBCECOB",113,0)
 ;
"RTN","IBCECOB",114,0)
 D FULL^VALM1
"RTN","IBCECOB",115,0)
 I $$SEL^IBCEMU1(IBIFN,1,LSTENTRY) D  G EXPLOOP  ; MRA lister/selection
"RTN","IBCECOB",116,0)
 . NEW IBIFN,LSTENTRY,IBDASAVE                   ; protect variables
"RTN","IBCECOB",117,0)
 . M IBDASAVE=IBDA                               ; save off IBDA array
"RTN","IBCECOB",118,0)
 . D EN^VALM("IBCEM MRA DETAIL")                 ; call the listman
"RTN","IBCECOB",119,0)
 . M IBDA=IBDASAVE                               ; restore IBDA array
"RTN","IBCECOB",120,0)
 . Q
"RTN","IBCECOB",121,0)
EXPQ ;
"RTN","IBCECOB",122,0)
 S VALMBCK="R"
"RTN","IBCECOB",123,0)
 Q
"RTN","IBCECOB",124,0)
 ;
"RTN","IBCECOB",125,0)
COBPOSS(IB364) ; Returns 1 if transmit bill ien in IB364 is currently
"RTN","IBCECOB",126,0)
 ; in a status where COB may be performed on the bill
"RTN","IBCECOB",127,0)
 ; Used by index "ACOB", file 364
"RTN","IBCECOB",128,0)
 N IBWNR,IBNSEQ,IB01,IBM1,IBU1,IB0,IBOK,IBMRA
"RTN","IBCECOB",129,0)
 S IBOK=1
"RTN","IBCECOB",130,0)
 S IB0=$G(^IBA(364,IB364,0))
"RTN","IBCECOB",131,0)
 S IBWNR=$$WNRBILL^IBEFUNC(+IB0),IBMRA=$P($G(^DGCR(399,+IB0,"TX")),U,5)
"RTN","IBCECOB",132,0)
 S IB01=$G(^DGCR(399,+IB0,0)),IBM1=$G(^("M1")),IBU1=$G(^("U1"))
"RTN","IBCECOB",133,0)
 I 'IBWNR,IBU1-$P(IBU1,U,2)'>0 S IBOK=0 G COBQ ; Bill has a 0 balance
"RTN","IBCECOB",134,0)
 I $S('IBWNR:$E($P(IB0,U,3))'="A",1:IBMRA'="1N"&(IBMRA'="A")) S IBOK=0 G COBQ ; Not in correct transmit status
"RTN","IBCECOB",135,0)
 S IBNSEQ=+$TR($P(IB0,U,8),"PST","230")
"RTN","IBCECOB",136,0)
 I 'IBNSEQ!'$D(^DGCR(399,+IB0,"I"_IBNSEQ)) S IBOK=0 G COBQ ; No next ins
"RTN","IBCECOB",137,0)
 I "234"'[$P(IB01,U,13) S IBOK=0 G COBQ ; Bill invalid status for COB
"RTN","IBCECOB",138,0)
 I IBNSEQ D
"RTN","IBCECOB",139,0)
 . N Z,IBSTOP
"RTN","IBCECOB",140,0)
 . S IBSTOP=0
"RTN","IBCECOB",141,0)
 . F Z=IBNSEQ:1:3 D  Q:IBSTOP
"RTN","IBCECOB",142,0)
 .. I $D(^DGCR(399,+IB0,"I"_Z)) D
"RTN","IBCECOB",143,0)
 ... ;Insurance must reimburse
"RTN","IBCECOB",144,0)
 ... I $P($G(^DIC(36,+^DGCR(399,+IB0,"I"_Z),0)),U,2)="N" S IBOK=0 Q
"RTN","IBCECOB",145,0)
 ... I $P(IBM1,U,4+Z) S IBOK=0,IBSTOP=1 Q  ; Already has a next seq bill
"RTN","IBCECOB",146,0)
 ... S (IBOK,IBSTOP)=1
"RTN","IBCECOB",147,0)
 ;
"RTN","IBCECOB",148,0)
COBQ Q IBOK
"RTN","IBCECOB",149,0)
 ;
"RTN","IBCECOB1")
0^56^B144950163^B141608790
"RTN","IBCECOB1",1,0)
IBCECOB1 ;ALB/CXW - IB COB MANAGEMENT SCREEN/REPORT ;14-JUN-99
"RTN","IBCECOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,348,377,417,432,447,488,516,547**;21-MAR-94;Build 119
"RTN","IBCECOB1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECOB1",4,0)
 ;
"RTN","IBCECOB1",5,0)
 ; IBMRANOT = 1 when dealing with the COB Management Worklist.   
"RTN","IBCECOB1",6,0)
 ;            It is set by the entry action in the option file. 
"RTN","IBCECOB1",7,0)
 ;
"RTN","IBCECOB1",8,0)
BLD ; Build list entrypoint
"RTN","IBCECOB1",9,0)
 ;
"RTN","IBCECOB1",10,0)
 N I,IB3611,IB364,IBAMT,IBAPY,IBB,IBB364,IBBPY,IBDA,IBDA1,IBDAY
"RTN","IBCECOB1",11,0)
 N IBDENDUP,IBDIV,IBDT,IBDTN,IBEOBREV,IBEUT,IBEXPY,IBFND,IBHIS
"RTN","IBCECOB1",12,0)
 N IBIFN,IBINS,IBINS1,IBINS2,IBMRACNT,IBMUT,IBNBAL,IBNDI1,IBNDI2
"RTN","IBCECOB1",13,0)
 N IBNDI3,IBNDM,IBNDS,IBOAM,IBPTNM,IBPTRSP,IBPY,IBQ,IBSEQ,IBSRVC
"RTN","IBCECOB1",14,0)
 N EOBTYPE,MSEFLG,Z,Z0
"RTN","IBCECOB1",15,0)
 ;
"RTN","IBCECOB1",16,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J),^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB1",17,0)
 D CLEAN^VALM10      ; kill data and video control arrays
"RTN","IBCECOB1",18,0)
 S (VALMCNT,MSEFLG)=0,IBHIS=""
"RTN","IBCECOB1",19,0)
 ; IB*2.0*432 IF not MRA, use new CAP index on 399 file
"RTN","IBCECOB1",20,0)
 D:$G(IBMRANOT)=1 CAP^IBCAPP2
"RTN","IBCECOB1",21,0)
 ; since 0 is a valid Review Status, init w/null
"RTN","IBCECOB1",22,0)
 S IBEOBREV=""
"RTN","IBCECOB1",23,0)
 ; get EOB's w/Review Status of 0, 1, 1.5 or 2; If 3 or higher, not needed
"RTN","IBCECOB1",24,0)
 I $G(IBMRANOT)'=1 F  S IBEOBREV=$O(^IBM(361.1,"AMRA",1,IBEOBREV)) Q:IBEOBREV=""  Q:IBEOBREV>2  D
"RTN","IBCECOB1",25,0)
 . S IBDA="A" F  S IBDA=$O(^IBM(361.1,"AMRA",1,IBEOBREV,IBDA),-1) Q:'IBDA  D BLD1
"RTN","IBCECOB1",26,0)
 ;
"RTN","IBCECOB1",27,0)
 ; no data accumulated
"RTN","IBCECOB1",28,0)
 I $O(^TMP("IBCOBST",$J,""))="" D NMAT Q
"RTN","IBCECOB1",29,0)
 ;
"RTN","IBCECOB1",30,0)
 ; display accumulated data
"RTN","IBCECOB1",31,0)
 D SCRN
"RTN","IBCECOB1",32,0)
 Q
"RTN","IBCECOB1",33,0)
 ;
"RTN","IBCECOB1",34,0)
BLD1 ;
"RTN","IBCECOB1",35,0)
 ;
"RTN","IBCECOB1",36,0)
 S MSEFLG=$$ELIG(IBDA) Q:'MSEFLG
"RTN","IBCECOB1",37,0)
 S IBDENDUP=$$DENDUP^IBCEMU4(IBDA,$G(IBMRANOT))
"RTN","IBCECOB1",38,0)
 I '$G(IBMRADUP),IBDENDUP Q     ; don't include denied MRAs/EOBs for Duplicate Claim/Service
"RTN","IBCECOB1",39,0)
 S IB3611=$G(^IBM(361.1,IBDA,0))
"RTN","IBCECOB1",40,0)
 S IBIFN=+IB3611,IB364=$P(IB3611,U,19),IBDT=+$P(IB3611,U,6)
"RTN","IBCECOB1",41,0)
 I $D(^TMP("IBCOBSTX",$J,IBIFN)) Q  ;show each bill once on the worklist
"RTN","IBCECOB1",42,0)
 S IBB=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECOB1",43,0)
 ;
"RTN","IBCECOB1",44,0)
 ; MRD;IB*2.0*516 - User requested the ability to sort the COB Mgmt
"RTN","IBCECOB1",45,0)
 ; Worklist by Division.  To enable this, the Division was added as
"RTN","IBCECOB1",46,0)
 ; a subscript to the ^TMP("IBCOBST") array. For now, that subscript
"RTN","IBCECOB1",47,0)
 ; will always be "UNKNOWN" when building the MRA Worklist.  To turn
"RTN","IBCECOB1",48,0)
 ; on sort-by-division for the MRA Worklist, uncomment out the fol-
"RTN","IBCECOB1",49,0)
 ; lowing two lines and delete the line Setting IBDIV to "UNKNOWN".
"RTN","IBCECOB1",50,0)
 ;S IBDIV=$P(IBB,U,22) I IBDIV="" S IBDIV="UNKNOWN"
"RTN","IBCECOB1",51,0)
 ;I $D(^TMP("IBBIL-DIV",$J)),'$D(^TMP("IBBIL-DIV",$J,IBDIV)) Q
"RTN","IBCECOB1",52,0)
 S IBDIV="UNKNOWN"
"RTN","IBCECOB1",53,0)
 ;
"RTN","IBCECOB1",54,0)
 S IBNDS=$G(^DGCR(399,IBIFN,"S")),IBNDI1=$G(^("I1")),IBNDI2=$G(^("I2")),IBNDI3=$G(^("I3")),IBNDM=$G(^("M"))
"RTN","IBCECOB1",55,0)
 S IBMUT=+$P(IBNDS,U,8),IBEUT=+$P(IBNDS,U,2)
"RTN","IBCECOB1",56,0)
 S IBINS="",IBSEQ=$P(IB3611,U,15)
"RTN","IBCECOB1",57,0)
 F I=1:1:3 S Z="IBNDI"_I I @Z D
"RTN","IBCECOB1",58,0)
 . N Q
"RTN","IBCECOB1",59,0)
 . S Q=(IBSEQ=I)
"RTN","IBCECOB1",60,0)
 . I Q S IBINS1=+@Z_U_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",61,0)
 . S IBINS=IBINS_$S(IBINS="":"",1:", ")_$P($G(^DIC(36,+@Z,0)),U)
"RTN","IBCECOB1",62,0)
 . Q
"RTN","IBCECOB1",63,0)
 ; Get the payer/insurance company that comes after Medicare WNR
"RTN","IBCECOB1",64,0)
 ; If WNR is Primary, get the secondary ins. co.
"RTN","IBCECOB1",65,0)
 ; If WNR is secondary, get the tertiary ins. co.
"RTN","IBCECOB1",66,0)
 D  I $P($G(IBINS2),U,2)="" S $P(IBINS2,U,2)="UNKNOWN"
"RTN","IBCECOB1",67,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,1) S IBINS2=+IBNDI2_U_$P($G(^DIC(36,+IBNDI2,0)),U) Q
"RTN","IBCECOB1",68,0)
 . S IBINS2=+IBNDI3_U_$P($G(^DIC(36,+IBNDI3,0)),U)
"RTN","IBCECOB1",69,0)
 . Q
"RTN","IBCECOB1",70,0)
 S IBFND=0
"RTN","IBCECOB1",71,0)
 ; biller entry not ALL and no biller, then get entered/edited by user
"RTN","IBCECOB1",72,0)
 I $D(^TMP("IBBIL",$J)) D  Q:'IBFND
"RTN","IBCECOB1",73,0)
 . S IBFND=$S($D(^TMP("IBBIL",$J,IBMUT)):IBMUT,$D(^TMP("IBBIL",$J,IBEUT)):IBEUT,1:0)
"RTN","IBCECOB1",74,0)
 . Q
"RTN","IBCECOB1",75,0)
 S Z=$S(IBFND:IBFND,IBMUT:IBMUT,1:IBEUT)
"RTN","IBCECOB1",76,0)
 S IBMUT=$P($G(^VA(200,+Z,0)),U)_"~"_Z
"RTN","IBCECOB1",77,0)
 S:'$P(IBMUT,"~",2) IBMUT="UNKNOWN~0"
"RTN","IBCECOB1",78,0)
 S IBBPY=+$$COBN^IBCEF(IBIFN),IBQ=1
"RTN","IBCECOB1",79,0)
 ;
"RTN","IBCECOB1",80,0)
 ;IBQ;1=EOB without subsequent insurer,0=COB,2=0 balance
"RTN","IBCECOB1",81,0)
 D  ;I IBQ Q
"RTN","IBCECOB1",82,0)
 . ;Check for no reimbursable subsequent insurance
"RTN","IBCECOB1",83,0)
 . F I=IBBPY+1:1:3 D  Q:'IBQ
"RTN","IBCECOB1",84,0)
 .. S Z="IBNDI"_I,Z=$G(@Z)
"RTN","IBCECOB1",85,0)
 .. I $P($G(^DIC(36,+Z,0)),U,2)="N" S IBQ=0 Q
"RTN","IBCECOB1",86,0)
 .. Q
"RTN","IBCECOB1",87,0)
 . ;Check if next ins doesn't exist or next bill# already created
"RTN","IBCECOB1",88,0)
 . S Z="IBNDI"_(IBBPY+1),Z=$G(@Z)
"RTN","IBCECOB1",89,0)
 . I Z,'$P($G(^DGCR(399,IBIFN,"M1")),U,5+IBBPY) S IBQ=0
"RTN","IBCECOB1",90,0)
 . Q
"RTN","IBCECOB1",91,0)
 ;
"RTN","IBCECOB1",92,0)
 ; Days since transmission of latest bill in COB - IBDAY
"RTN","IBCECOB1",93,0)
 S IBDAY=+$P($G(^DGCR(399,IBIFN,"TX")),U,2) I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1)
"RTN","IBCECOB1",94,0)
 ; if no Last Electronic Extract Date on file 399, get it from file 364
"RTN","IBCECOB1",95,0)
 I 'IBDAY D  I IBDAY S IBDAY=$$FMDIFF^XLFDT(DT,IBDAY,1) ;calc. the difference
"RTN","IBCECOB1",96,0)
 . S IBB364=$$LAST364^IBCEF4(IBIFN) I IBB364'="" S IBDAY=+$P($P($G(^IBA(364,IBB364,0)),U,4),".",1)
"RTN","IBCECOB1",97,0)
 ;
"RTN","IBCECOB1",98,0)
 S IBAPY=$$TPR^PRCAFN(IBIFN) ; payment on this bill from A/R
"RTN","IBCECOB1",99,0)
 S IBEXPY=+$G(^IBM(361.1,IBDA,1))       ; payer paid amount
"RTN","IBCECOB1",100,0)
 ; IB*2.0*447 add excess indicator to MRW screen and adjust calcs to include percentages
"RTN","IBCECOB1",101,0)
 S IBPTRSP=$S($$MSEDT^IBCEMU4(IBIFN)'="":$$MSPRE^IBCEMU4(IBIFN,1),1:$$PREOBTOT^IBCEU0(IBIFN)) ; patient resp. function
"RTN","IBCECOB1",102,0)
 S IBPY=$S(IBAPY:IBAPY,1:IBEXPY)
"RTN","IBCECOB1",103,0)
 S IBOAM=+$G(^DGCR(399,IBIFN,"U1"))     ; total charges for bill
"RTN","IBCECOB1",104,0)
 S IBNBAL=IBOAM-IBPY
"RTN","IBCECOB1",105,0)
 I IBNBAL'>0 S IBQ=2
"RTN","IBCECOB1",106,0)
 S IBPTNM=$P($G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0)),U) I IBPTNM="" S IBPTNM="UNKNOWN"
"RTN","IBCECOB1",107,0)
 S IBSRVC=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECOB1",108,0)
 ;
"RTN","IBCECOB1",109,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCECOB1",110,0)
 S Z0=$S(IBSRT="B":IBMUT,IBSRT="D":-IBDAY,IBSRT="I":$P(IBINS2,U,2)_"~"_$P(IBINS2,U),IBSRT="M":$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13)),IBSRT="R":-IBPTRSP,IBSRT="P":IBPTNM,IBSRT="S":+IBSRVC,1:+IBDT)
"RTN","IBCECOB1",111,0)
 S:((IBSRT="M")&(Z0="")) Z0="UNKNOWN"   ;USE UNKNOWN IF NOT SET - BI;IB*2.0*432
"RTN","IBCECOB1",112,0)
 ;I $D(^TMP("IBCOBST",$J,Z0,IBIFN)),$P(^TMP("IBCOBST",$J,Z0,IBIFN),U,19)=-1 S MSEFLG=-1   ; If a MSE was previously found for IBIFN, we want to insure that we don't ignore that by resetting the 19th piece to something else.
"RTN","IBCECOB1",113,0)
 I $D(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN)),$P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN),U,19)=-1 S MSEFLG=-1   ; If a MSE was previously found for IBIFN, we want to insure that we don't ignore that by resetting the 19th piece to something else.
"RTN","IBCECOB1",114,0)
 ;
"RTN","IBCECOB1",115,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_IBDA_U_$$HIS(IBIFN)_U_IBDAY_U_IBDT_U_IBQ_U_IB364_U_IBSEQ_U_IBEXPY_U_IBPTRSP_U_MSEFLG
"RTN","IBCECOB1",116,0)
 ;S ^TMP("IBCOBST",$J,Z0,IBIFN,1)=$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16)
"RTN","IBCECOB1",117,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN)=IBSRVC_U_IBOAM_U_IBAPY_U_$S(IBNBAL>0:IBNBAL,1:0)_U_$P(IBB,U,5)_U_$P(IBB,U,19)_U_IBBPY_U_$P(IBMUT,"~")_U_IBINS_U_IBDA_U_$$HIS(IBIFN)_U_IBDAY_U_IBDT_U_IBQ_U_IB364_U_IBSEQ_U_IBEXPY_U_IBPTRSP_U_MSEFLG
"RTN","IBCECOB1",118,0)
 S ^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1)=$$EXTERNAL^DILFD(361.1,.13,"",$P(IB3611,"^",13))_", "_$$FMTE^XLFDT($P($P(IB3611,"^",6),"."))_"^"_$P(IB3611,"^",16)
"RTN","IBCECOB1",119,0)
 S ^TMP("IBCOBSTX",$J,IBIFN)=IBDA  ;keep track of compiled IBIFN's
"RTN","IBCECOB1",120,0)
 ;
"RTN","IBCECOB1",121,0)
 ; Save some data when there are multiple MRA's on file for this bill
"RTN","IBCECOB1",122,0)
 S IBMRACNT=$$MRACNT^IBCEMU1(IBIFN,$G(IBMRANOT))   ;WCJ IB*2.0*432
"RTN","IBCECOB1",123,0)
 ;I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCECOB1",124,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCECOB1",125,0)
 ;S $P(^TMP("IBCOBST",$J,Z0,IBIFN,1),U,4)=IBDENDUP
"RTN","IBCECOB1",126,0)
 I IBMRACNT>1 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,1)="Multiple "_$S($G(IBMRANOT):"EOBs",1:"MRA's")_" on file"  ;WCJ IB*2.0*432
"RTN","IBCECOB1",127,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,3)=IBMRACNT
"RTN","IBCECOB1",128,0)
 S $P(^TMP("IBCOBST",$J,IBDIV,Z0,IBIFN,1),U,4)=IBDENDUP
"RTN","IBCECOB1",129,0)
 Q
"RTN","IBCECOB1",130,0)
 ;
"RTN","IBCECOB1",131,0)
HIS(IBIFN) ; COB history
"RTN","IBCECOB1",132,0)
 N A,B,IBST,IBBIL,IBHIS
"RTN","IBCECOB1",133,0)
 S IBHIS="",A=0 F  S A=$O(^IBM(361.1,"ABS",IBIFN,A)) Q:'A  S B=0 F  S B=$O(^IBM(361.1,"ABS",IBIFN,A,B)) Q:'B  D
"RTN","IBCECOB1",134,0)
 . S IBST=$P($G(^IBM(361.1,B,0)),U,4),IBBIL=$P($G(^DGCR(399,IBIFN,"M1")),U,4+A)   ;WCJ IB*2.0*432 added $G
"RTN","IBCECOB1",135,0)
 . Q:IBBIL=""
"RTN","IBCECOB1",136,0)
 . S IBHIS=IBHIS_$S(IBHIS="":"",1:";")_$S(A=1:"PRIMARY",A=2:"SECONDARY",1:"TERTIARY")_" "_$S(IBST:"MRA",1:"EOB")_" RECEIVED - "_IBBIL
"RTN","IBCECOB1",137,0)
 Q IBHIS
"RTN","IBCECOB1",138,0)
 ;
"RTN","IBCECOB1",139,0)
NMAT ;No COB list
"RTN","IBCECOB1",140,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECOB1",141,0)
 S ^TMP("IBCECOB",$J,1,0)=" "
"RTN","IBCECOB1",142,0)
 S ^TMP("IBCECOB",$J,2,0)="    No "_$S($G(IBMRANOT)=1:"EOB's",1:"MRA's")_" Matching Selection Criteria Were Found"
"RTN","IBCECOB1",143,0)
 Q
"RTN","IBCECOB1",144,0)
 ;
"RTN","IBCECOB1",145,0)
SCRN ;
"RTN","IBCECOB1",146,0)
 N IB,IBCNT,IBDA,IBDIV,IBIFN,IBFORM,IBK,IBPAT,IBS1,IBX,MSEFLG,X,Z
"RTN","IBCECOB1",147,0)
 ;
"RTN","IBCECOB1",148,0)
 S IBCNT=0
"RTN","IBCECOB1",149,0)
 ; IB*2.0*547 - Add primary insurance company sort, had to break into 2 lines
"RTN","IBCECOB1",150,0)
 S IBS1=$S(IBSRT="B":"BILLER",IBSRT="D":"Days Since Last Transmission",IBSRT="L":"Date Last "_$S($G(IBMRANOT):"EOB",1:"MRA")_" Received",IBSRT="I":"SECONDARY INSURANCE COMPANY",IBSRT="M":$S($G(IBMRANOT):"EOB",1:"MRA")_" Status",1:"")
"RTN","IBCECOB1",151,0)
 S:IBSRT="K" IBS1="PRIMARY INSURANCE COMPANY"
"RTN","IBCECOB1",152,0)
 ;
"RTN","IBCECOB1",153,0)
 ; MRD;IB*2.0*516 - Added Division as a subscript.
"RTN","IBCECOB1",154,0)
 S IBDIV=""
"RTN","IBCECOB1",155,0)
 F  S IBDIV=$O(^TMP("IBCOBST",$J,IBDIV)) Q:IBDIV=""  D
"RTN","IBCECOB1",156,0)
 . I IBCNT D SET("",IBCNT+1)
"RTN","IBCECOB1",157,0)
 . D SET("Division: "_$$GET1^DIQ(40.8,IBDIV_",",.01,"E"),IBCNT+1)
"RTN","IBCECOB1",158,0)
 . ;
"RTN","IBCECOB1",159,0)
 . ;S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBX)) Q:IBX=""  D
"RTN","IBCECOB1",160,0)
 . S IBX="" F  S IBX=$O(^TMP("IBCOBST",$J,IBDIV,IBX)) Q:IBX=""  D
"RTN","IBCECOB1",161,0)
 .. ; P547
"RTN","IBCECOB1",162,0)
 .. ;I IBSRT="B"!(IBSRT="I")!(IBSRT="M") D
"RTN","IBCECOB1",163,0)
 .. I IBSRT="B"!(IBSRT="I")!(IBSRT="M")!(IBSRT="K") D
"RTN","IBCECOB1",164,0)
 ... I IBCNT D SET("",IBCNT+1)
"RTN","IBCECOB1",165,0)
 ... D SET(IBS1_": "_$P(IBX,"~"),IBCNT+1)
"RTN","IBCECOB1",166,0)
 ... Q
"RTN","IBCECOB1",167,0)
 .. ;
"RTN","IBCECOB1",168,0)
 .. ;S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBX,IBIFN)) Q:'IBIFN  D
"RTN","IBCECOB1",169,0)
 .. S IBIFN=0 F  S IBIFN=$O(^TMP("IBCOBST",$J,IBDIV,IBX,IBIFN)) Q:'IBIFN  D
"RTN","IBCECOB1",170,0)
 ... ;S IB=$G(^TMP("IBCOBST",$J,IBX,IBIFN))
"RTN","IBCECOB1",171,0)
 ... S IB=$G(^TMP("IBCOBST",$J,IBDIV,IBX,IBIFN))
"RTN","IBCECOB1",172,0)
 ... S Z=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCECOB1",173,0)
 ... S IBPAT=$$LJ^XLFSTR($E($P(Z,U),1,18),18," ")_" "_$E($P(Z,U,9),6,9)
"RTN","IBCECOB1",174,0)
 ... S IBDA=$P(IB,U,10) ;361.1-ien
"RTN","IBCECOB1",175,0)
 ... S IBQ=$P(IB,U,14),IB364=$P(IB,U,15)
"RTN","IBCECOB1",176,0)
 ... ; IB*2.0*447 shorten form column to I for Instutional and P for Professional
"RTN","IBCECOB1",177,0)
 ... ;S IBFORM=$$EXTERNAL^DILFD(399,.19,,+$P(IB,U,6))
"RTN","IBCECOB1",178,0)
 ... ;I +$P(IB,U,6)=2 S IBFORM=1500   ; for space reasons
"RTN","IBCECOB1",179,0)
 ... S IBFORM=$S(+$P(IB,U,6)=2:"P",1:"I")
"RTN","IBCECOB1",180,0)
 ... S IBPTRSP=$P(IB,U,18)
"RTN","IBCECOB1",181,0)
 ... S MSEFLG=$P(IB,U,19)
"RTN","IBCECOB1",182,0)
 ... S IBAMT=$P(IB,U,2)
"RTN","IBCECOB1",183,0)
 ... S IBCNT=IBCNT+1
"RTN","IBCECOB1",184,0)
 ... S X=""
"RTN","IBCECOB1",185,0)
 ... S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBCECOB1",186,0)
 ... ;;;S X=$$SETFLD^VALM1($$BN1^PRCAFN(IBIFN)_$S($P($G(^DGCR(399,IBIFN,"TX")),U,10)=1:"*",1:""),X,"BILL")
"RTN","IBCECOB1",187,0)
 ... S X=$$SETFLD^VALM1($S(MSEFLG=-1:"!",1:" ")_$$BN1^PRCAFN(IBIFN)_$S($P($G(^DGCR(399,IBIFN,"TX")),U,10)=1:"*",1:""),X,"BILL")  ; per IB*2.0*488
"RTN","IBCECOB1",188,0)
 ... S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IB,U)),X,"SERVICE")
"RTN","IBCECOB1",189,0)
 ... S X=$$SETFLD^VALM1(IBPAT,X,"PATNM")
"RTN","IBCECOB1",190,0)
 ... S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBPTRSP,"",2),9," "),X,"PTRESP")
"RTN","IBCECOB1",191,0)
 ... S X=$$SETFLD^VALM1($$RJ^XLFSTR($FN(IBAMT,"",2),9," "),X,"IBAMT")
"RTN","IBCECOB1",192,0)
 ... S X=$$SETFLD^VALM1($E($$TYPE^IBJTLA1($P(IB,U,5)))_"/"_IBFORM,X,"BTYPE")
"RTN","IBCECOB1",193,0)
 ... D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",194,0)
 ... ;
"RTN","IBCECOB1",195,0)
 ... ;For R (Pt Resp), P (Pt Name) and S (Service Date) don't display sub-headers
"RTN","IBCECOB1",196,0)
 ... ;I "BIMRPS"'[IBSRT D  IB*2.0*547
"RTN","IBCECOB1",197,0)
 ... I "BIMRPSK"'[IBSRT D
"RTN","IBCECOB1",198,0)
 .... S Z=$S(IBSRT="L":$$DAT1^IBOUTL(IBX),IBSRT="D":-IBX,1:IBX)
"RTN","IBCECOB1",199,0)
 .... D SET("   "_IBS1_": "_Z,IBCNT)
"RTN","IBCECOB1",200,0)
 .... Q
"RTN","IBCECOB1",201,0)
 ... S X=$$SETSTR^VALM1("Insurers:  "_$P(IB,U,9),"",7,74)
"RTN","IBCECOB1",202,0)
 ... D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",203,0)
 ... ;
"RTN","IBCECOB1",204,0)
 ... ; line 3 of display:  MRA status/date/split claim indicator
"RTN","IBCECOB1",205,0)
 ... S X=$$SETSTR^VALM1($S($G(IBMRANOT):"EOB",1:"MRA")_" Status:  ","",5,13)
"RTN","IBCECOB1",206,0)
 ... ;S IBK=$G(^TMP("IBCOBST",$J,IBX,IBIFN,1))
"RTN","IBCECOB1",207,0)
 ... S IBK=$G(^TMP("IBCOBST",$J,IBDIV,IBX,IBIFN,1))
"RTN","IBCECOB1",208,0)
 ... S X=$$SETSTR^VALM1($P(IBK,U,1),X,18,63)
"RTN","IBCECOB1",209,0)
 ... I $P(IBK,U,2)=2 S X=$$SETSTR^VALM1("** SPLIT CLAIM **",X,63,18)
"RTN","IBCECOB1",210,0)
 ... I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 S X=$$SETSTR^VALM1("** Denied for Duplicate **",X,54,27)
"RTN","IBCECOB1",211,0)
 ... D SET(X,IBCNT,IBIFN,IBDA,IBQ,IB364,IBX,IB)
"RTN","IBCECOB1",212,0)
 ... ;
"RTN","IBCECOB1",213,0)
 ... ; conditionally update video attributes of line 3
"RTN","IBCECOB1",214,0)
 ... I '$D(IOINHI) D ENS^%ZISS
"RTN","IBCECOB1",215,0)
 ... ; split claim
"RTN","IBCECOB1",216,0)
 ... I $P(IBK,U,2)=2 D CNTRL^VALM10(VALMCNT,63,17,IOINHI,IOINORM)
"RTN","IBCECOB1",217,0)
 ... ; multiple mra's on file
"RTN","IBCECOB1",218,0)
 ... I $P(IBK,U,3)>1 D CNTRL^VALM10(VALMCNT,18,22,IOINHI,IOINORM)
"RTN","IBCECOB1",219,0)
 ... ; Denied for Duplicate - no split claim and single MRA only
"RTN","IBCECOB1",220,0)
 ... I $P(IBK,U,4),$P(IBK,U,2)'=2,$P(IBK,U,3)=1 D CNTRL^VALM10(VALMCNT,54,26,IOINHI,IOINORM)
"RTN","IBCECOB1",221,0)
 ... Q
"RTN","IBCECOB1",222,0)
 .. Q
"RTN","IBCECOB1",223,0)
 . Q
"RTN","IBCECOB1",224,0)
 ;
"RTN","IBCECOB1",225,0)
 Q
"RTN","IBCECOB1",226,0)
 ;
"RTN","IBCECOB1",227,0)
SET(X,CNT,IBIFN,IBDA,IBQ,IB364,IBX,IB) ;set up list manager screen array
"RTN","IBCECOB1",228,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB1",229,0)
 S ^TMP("IBCECOB",$J,VALMCNT,0)=X
"RTN","IBCECOB1",230,0)
 S ^TMP("IBCECOB",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECOB1",231,0)
 I $G(IBIFN),$G(^TMP("IBCECOB",$J,CNT))="" S ^TMP("IBCECOB",$J,CNT)=VALMCNT_U_IBIFN_U_IB364_U_IBDA_U_IBQ_U_IBX,^TMP("IBCECOB1",$J,CNT)=IB
"RTN","IBCECOB1",232,0)
 Q
"RTN","IBCECOB1",233,0)
 ;
"RTN","IBCECOB1",234,0)
FTYPE(Y) ;type classification
"RTN","IBCECOB1",235,0)
 Q $E($P($G(^IBE(353,Y,0)),U),1,8)
"RTN","IBCECOB1",236,0)
 ;
"RTN","IBCECOB1",237,0)
PTRESPI(IBEOB) ; Function - Computes the Patient's Responsibility based on IBEOB
"RTN","IBCECOB1",238,0)
 ; of 361.1 for Claims/Bills with form type 3=UB
"RTN","IBCECOB1",239,0)
 ; Input IBEOB - a single EOB ien; Required
"RTN","IBCECOB1",240,0)
 ; Output      - Function Returns IBPTRES - Patient Responsibility Amount for the EOB
"RTN","IBCECOB1",241,0)
 ;
"RTN","IBCECOB1",242,0)
 N IBPTRES,IBC,EOBADJ
"RTN","IBCECOB1",243,0)
 S IBPTRES=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",244,0)
 I 'IBEOB Q IBPTRES   ;PTRESPI
"RTN","IBCECOB1",245,0)
 ; filing error
"RTN","IBCECOB1",246,0)
 Q:$D(^IBM(361.1,IBEOB,"ERR")) IBPTRES
"RTN","IBCECOB1",247,0)
 ;
"RTN","IBCECOB1",248,0)
 ; get claim level adjustments
"RTN","IBCECOB1",249,0)
 K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCECOB1",250,0)
 S IBPTRES=$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",251,0)
 ;
"RTN","IBCECOB1",252,0)
 ; get line level adjustments
"RTN","IBCECOB1",253,0)
 S IBC=0 F  S IBC=$O(^IBM(361.1,IBEOB,15,IBC)) Q:'IBC  D
"RTN","IBCECOB1",254,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,15,IBC,1)
"RTN","IBCECOB1",255,0)
 . S IBPTRES=IBPTRES+$$CALCPR^IBCEU0(.EOBADJ)
"RTN","IBCECOB1",256,0)
 Q IBPTRES
"RTN","IBCECOB1",257,0)
 ;
"RTN","IBCECOB1",258,0)
ELIG(IBEOB) ; Function to determine if an EOB entry is eligible for
"RTN","IBCECOB1",259,0)
 ; inclusion on the MRA or COB management worklist or not.
"RTN","IBCECOB1",260,0)
 ; IBEOB - ien into file 361.1 (required)
"RTN","IBCECOB1",261,0)
 ; Returns 1 if EOB should appear on the worklist
"RTN","IBCECOB1",262,0)
 ; Returns 0 if EOB should not appear on the worklist
"RTN","IBCECOB1",263,0)
 ; Returns -1 if EOB contains Message Storage Errors
"RTN","IBCECOB1",264,0)
 ;
"RTN","IBCECOB1",265,0)
 NEW ELIG,IB3611,IBIFN
"RTN","IBCECOB1",266,0)
 S ELIG=0,IBEOB=+$G(IBEOB)
"RTN","IBCECOB1",267,0)
 S IB3611=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCECOB1",268,0)
 I $P(IB3611,U,4)'=1 G ELIGX    ; eob type must be correct for this worklist
"RTN","IBCECOB1",269,0)
 I $P(IB3611,U,16)>2 G ELIGX    ; review status must be <= 2
"RTN","IBCECOB1",270,0)
 S IBIFN=+IB3611
"RTN","IBCECOB1",271,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'=2 G ELIGX  ; Request MRA bill status
"RTN","IBCECOB1",272,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) S ELIG=$S('$G(IBMRANOT):-1,1:ELIG) G ELIGX         ; filing errors - contains Message Storage Errors
"RTN","IBCECOB1",273,0)
 ;
"RTN","IBCECOB1",274,0)
 S ELIG=1    ; this EOB is eligible for the worklist
"RTN","IBCECOB1",275,0)
 ;
"RTN","IBCECOB1",276,0)
ELIGX ;
"RTN","IBCECOB1",277,0)
 Q ELIG
"RTN","IBCECOB1",278,0)
 ;
"RTN","IBCECOB1",279,0)
WLRMV ; REMOVE FROM EOB WORK LIST
"RTN","IBCECOB1",280,0)
 ; IBDA(IBDA)=IBIFN^IB364^ien of 361.1^user selection seq^user name~duz#
"RTN","IBCECOB1",281,0)
 N IBIFN,IBDA,DIR,DTOUT,DUOUT,DA,DIE,DR,X
"RTN","IBCECOB1",282,0)
 D SEL^IBCECOB2(.IBDA,1)
"RTN","IBCECOB1",283,0)
 S VALMBCK="R"
"RTN","IBCECOB1",284,0)
 S IBDA=$O(IBDA(0)) I 'IBDA Q
"RTN","IBCECOB1",285,0)
 S IBIFN=$P(IBDA(IBDA),U,1) I 'IBIFN Q
"RTN","IBCECOB1",286,0)
 S DIR("A",1)=""
"RTN","IBCECOB1",287,0)
 S DIR("A",2)="    Bill #: "_$$GET1^DIQ(399,IBIFN_", ",.01,"E")
"RTN","IBCECOB1",288,0)
 S DIR("A",3)="   Patient: "_$$GET1^DIQ(399,IBIFN_", ",.02,"E")
"RTN","IBCECOB1",289,0)
 S DIR("A",4)=" Bill Type: "_$$GET1^DIQ(399,IBIFN_", ",.05,"E")
"RTN","IBCECOB1",290,0)
 S DIR("A",5)="Bill Dates: "_$$GET1^DIQ(399,IBIFN_", ",151,"E")_" - "_$$GET1^DIQ(399,IBIFN_", ",152,"E")
"RTN","IBCECOB1",291,0)
 S DIR("A",6)=" "
"RTN","IBCECOB1",292,0)
 S DIR("A")="Are you sure remove this claim from the worklist? "
"RTN","IBCECOB1",293,0)
 S DIR("B")="NO"
"RTN","IBCECOB1",294,0)
 S DIR(0)="YA" D ^DIR K DIR
"RTN","IBCECOB1",295,0)
 I $D(DTOUT)!$D(DUOUT)!'Y Q
"RTN","IBCECOB1",296,0)
 ;FLAG IF USER ANSWERS YES
"RTN","IBCECOB1",297,0)
 S X=$$WLRMVF^IBCECOB1(IBIFN,"RM")
"RTN","IBCECOB1",298,0)
 D BLD^IBCECOB1
"RTN","IBCECOB1",299,0)
 Q
"RTN","IBCECOB1",300,0)
 ;
"RTN","IBCECOB1",301,0)
WLRMVF(IBIFN,METHOD,BKFL) ;
"RTN","IBCECOB1",302,0)
 ; BFKL = 1 means background process, remove NOT initiated by a user
"RTN","IBCECOB1",303,0)
 N SOC,SOCCNT,SOCLIST,STATUS,IBDUZ
"RTN","IBCECOB1",304,0)
 S STATUS=0
"RTN","IBCECOB1",305,0)
 Q:'$G(DUZ) STATUS_"^MISSING DUZ"
"RTN","IBCECOB1",306,0)
 Q:'$G(IBIFN) STATUS_"^MISSING IBIFN"
"RTN","IBCECOB1",307,0)
 Q:'$D(^DGCR(399,IBIFN)) STATUS_"^INVALID IBIFN"
"RTN","IBCECOB1",308,0)
 ; if this is a background process, set user who removed to AUTHORIZER,IB REG
"RTN","IBCECOB1",309,0)
 S IBDUZ=$S($G(BKFL)=1:$$IBREG^IBCAPP(),1:$G(DUZ))
"RTN","IBCECOB1",310,0)
 ; GET DICTIONARY SET OF CODES.
"RTN","IBCECOB1",311,0)
 ; SOC("POINTER")="RM:REMOVE ACTION;PC:PROCESS COB ACTION;CL:CLONE ACTION;"
"RTN","IBCECOB1",312,0)
 D FIELD^DID(399,38,"","POINTER","SOC")
"RTN","IBCECOB1",313,0)
 S SOC=$G(SOC("POINTER"))
"RTN","IBCECOB1",314,0)
 F SOCCNT=1:1:$L(SOC,";")-1 S SOCLIST($P($P(SOC,";",SOCCNT),":",1))=""
"RTN","IBCECOB1",315,0)
 Q:$D(SOCLIST(METHOD))=0 STATUS_"^INVALID METHOD"
"RTN","IBCECOB1",316,0)
 S DA=IBIFN
"RTN","IBCECOB1",317,0)
 S DIE="^DGCR(399,"
"RTN","IBCECOB1",318,0)
 S DR="35////4"                ; AUTO PROCESS, NO LONGER ON WORKLIST
"RTN","IBCECOB1",319,0)
 S:IBDUZ'=-1 DR=DR_";"_"37////"_IBDUZ    ; WHO REMOVED FROM WORKLIST
"RTN","IBCECOB1",320,0)
 S DR=DR_";"_"38////"_METHOD   ; METHOD USED TO REMOVE FROM WORKLIST
"RTN","IBCECOB1",321,0)
 S DR=DR_";"_"39///NOW"        ; DATE STAMP WHEN REMOVED FOR WORKLIST
"RTN","IBCECOB1",322,0)
 D ^DIE
"RTN","IBCECOB1",323,0)
 S STATUS=1
"RTN","IBCECOB1",324,0)
 Q STATUS
"RTN","IBCECSA5")
0^13^B92877287^B69687266
"RTN","IBCECSA5",1,0)
IBCECSA5 ;ALB/CXW - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,263,280,155,349,489,488,547**;21-MAR-1994;Build 119
"RTN","IBCECSA5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECSA5",4,0)
 ;
"RTN","IBCECSA5",5,0)
 ; reference to $$VFILE^DILFD allowed with IA#2055  (IB*2.0*547)
"RTN","IBCECSA5",6,0)
 ;
"RTN","IBCECSA5",7,0)
EN ; -- main entry point for VIEW EOB
"RTN","IBCECSA5",8,0)
 N VALMCNT,VALMBG,VALMHDR
"RTN","IBCECSA5",9,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCECSA5",10,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA5",11,0)
 Q
"RTN","IBCECSA5",12,0)
 ;
"RTN","IBCECSA5",13,0)
INIT ; -- init variables and list array
"RTN","IBCECSA5",14,0)
 I '$G(IBIFN) S VALMQUIT="" G INITQ    ; bill# is required
"RTN","IBCECSA5",15,0)
 D HDR^IBCEOB2                         ; build the VALMHDR array
"RTN","IBCECSA5",16,0)
 K IBCNT,IBONE,^TMP("IBCECSD",$J)      ; kill vars and scratch global
"RTN","IBCECSA5",17,0)
 ;
"RTN","IBCECSA5",18,0)
 ; 8/13/03 - If variable IBEOBIFN is set, then this is the 361.1 ien
"RTN","IBCECSA5",19,0)
 ;           that the user selected from a list.  Build the detail.
"RTN","IBCECSA5",20,0)
 I $G(IBEOBIFN) S IBCNT=IBEOBIFN,IBONE=1 D BLD^IBCECSA6,EOBERR G INITQ
"RTN","IBCECSA5",21,0)
 ;
"RTN","IBCECSA5",22,0)
 D BLD^IBCEOB2   ; build ^TMP("IBCEOB",$J) containing MRA/EOB lister
"RTN","IBCECSA5",23,0)
 S IBONE=0
"RTN","IBCECSA5",24,0)
 M ^TMP("IBCECSD",$J)=^TMP("IBCEOB",$J)
"RTN","IBCECSA5",25,0)
 ;
"RTN","IBCECSA5",26,0)
 ; 4/7/03 - If only 1 EOB record found for this bill, then set the
"RTN","IBCECSA5",27,0)
 ;          IBCNT variable, the IBONE one-time flag, and build the
"RTN","IBCECSA5",28,0)
 ;          detail sections of this list.
"RTN","IBCECSA5",29,0)
 I $G(VALMCNT)=1 S IBCNT=$P($G(^TMP("IBCECSD",$J,1)),U,2),IBONE=1 I IBCNT D BLD^IBCECSA6
"RTN","IBCECSA5",30,0)
 D EOBERR   ; IB*2.0*488  (vd)
"RTN","IBCECSA5",31,0)
 ;
"RTN","IBCECSA5",32,0)
INITQ Q
"RTN","IBCECSA5",33,0)
 ;
"RTN","IBCECSA5",34,0)
HELP ; -- help code
"RTN","IBCECSA5",35,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA5",36,0)
 Q
"RTN","IBCECSA5",37,0)
 ;
"RTN","IBCECSA5",38,0)
EXIT ; -- exit code
"RTN","IBCECSA5",39,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECSA5",40,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBCECSA5",41,0)
 Q
"RTN","IBCECSA5",42,0)
MIN ;
"RTN","IBCECSA5",43,0)
 N IBREC1,IBRM1,IBRM2,IBRM3,IBRM4,IBRM5,IBRL,IBTYPE,IBT,IBTX,IBD
"RTN","IBCECSA5",44,0)
 ; flag for inpatient mra
"RTN","IBCECSA5",45,0)
 S IBTYPE=$S($G(IBSRC):1,$$INPAT^IBCEF(+IBREC):1,1:0)
"RTN","IBCECSA5",46,0)
 ;
"RTN","IBCECSA5",47,0)
 S IB=$$SETSTR^VALM1("MEDICARE INFORMATION:","",1,50)
"RTN","IBCECSA5",48,0)
 D SET(IB)
"RTN","IBCECSA5",49,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",50,0)
 . D CNTRL^VALM10(VALMCNT,1,21,IORVON,IORVOFF)
"RTN","IBCECSA5",51,0)
 . S ^TMP("IBCECSD",$J,"X",5)=VALMCNT
"RTN","IBCECSA5",52,0)
 I $G(IBSRC),'$D(^IBM(361.1,IBCNT,4)) Q
"RTN","IBCECSA5",53,0)
 I '$G(IBSRC),'$$INPAT^IBCEF(+IBREC) Q
"RTN","IBCECSA5",54,0)
 D SET(" INPATIENT:")
"RTN","IBCECSA5",55,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,4)),(IB,IBRL)=""
"RTN","IBCECSA5",56,0)
 ;
"RTN","IBCECSA5",57,0)
 F IBT=2:1 S IBTX=$P($T(MINDAT+IBT),";",3) Q:IBTX=""  D
"RTN","IBCECSA5",58,0)
 . S IBD=$P(IBREC1,"^",+IBTX)
"RTN","IBCECSA5",59,0)
 . I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) E  N IBFULL S IBFULL=1
"RTN","IBCECSA5",60,0)
 . I $S(IBFULL:1,1:IBD) D
"RTN","IBCECSA5",61,0)
 .. I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) I  Q
"RTN","IBCECSA5",62,0)
 .. X "S IBD="_$S($L($P(IBTX,"^",3)):$P(IBTX,"^",3),1:"$$A10(IBD)")
"RTN","IBCECSA5",63,0)
 .. S IB=$$SETSTR^VALM1($P(IBTX,"^",2)_IBD,IB,$S('IBRL:4,1:37),$S('IBRL:41,1:38))
"RTN","IBCECSA5",64,0)
 .. S IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA5",65,0)
 .. I 'IBRL D SET(IB,IBRL) S IB=""
"RTN","IBCECSA5",66,0)
 ;
"RTN","IBCECSA5",67,0)
 D:IBRL'="" SET(IB)
"RTN","IBCECSA5",68,0)
 D REMARK
"RTN","IBCECSA5",69,0)
 Q
"RTN","IBCECSA5",70,0)
 ;
"RTN","IBCECSA5",71,0)
MINDAT ; data for MIN tag
"RTN","IBCECSA5",72,0)
 ; format:  piece^label^special format code^special decision for disp
"RTN","IBCECSA5",73,0)
 ;;1^Cov Days/Visit Ct  : ^$$RJ(+IBD)^I $G(IBSRC)
"RTN","IBCECSA5",74,0)
 ;;3^Claim DRG Amt      : 
"RTN","IBCECSA5",75,0)
 ;;2^Lifetm Psych Dy Ct : ^$$RJ(IBD)
"RTN","IBCECSA5",76,0)
 ;;5^Disprop Share Amt  : ^^I IBTYPE
"RTN","IBCECSA5",77,0)
 ;;4^Cap Exception Amt  : 
"RTN","IBCECSA5",78,0)
 ;;7^PPS Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",79,0)
 ;;6^MSP Pass Thru Amt  : 
"RTN","IBCECSA5",80,0)
 ;;9^PPS Cap HSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",81,0)
 ;;8^PPS Cap FSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",82,0)
 ;;11^Old Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",83,0)
 ;;10^PPS Cap DSH-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",84,0)
 ;;13^PPS Op Hos DRG Amt : 
"RTN","IBCECSA5",85,0)
 ;;12^PPS Capital IME Amt: ^^I IBTYPE
"RTN","IBCECSA5",86,0)
 ;;15^PPS Op Fed DRG Amt : ^^I IBTYPE
"RTN","IBCECSA5",87,0)
 ;;14^Cost Report Day Ct : ^$$RJ(IBD)^I IBTYPE
"RTN","IBCECSA5",88,0)
 ;;17^Indirect Teach Amt : ^^I IBTYPE
"RTN","IBCECSA5",89,0)
 ;;16^PPS Cap Outlier Amt: ^^I IBTYPE
"RTN","IBCECSA5",90,0)
 ;;18^Non-Pay Prof Comp  : ^$$RJ(IBD)
"RTN","IBCECSA5",91,0)
 ;;19^Non-Covered Days Ct: ^$$RJ(+IBD)^I IBTYPE
"RTN","IBCECSA5",92,0)
 ;;
"RTN","IBCECSA5",93,0)
 ;
"RTN","IBCECSA5",94,0)
REMARK ; set up remarks and line level details
"RTN","IBCECSA5",95,0)
 N IBREC1,IBP,IBT,IBX,RCODE,RDESC,REXIST
"RTN","IBCECSA5",96,0)
 Q:$G(IBREM)  S IBREM=1
"RTN","IBCECSA5",97,0)
 D SET(" ")
"RTN","IBCECSA5",98,0)
 D SET(" Claim Level Remark Information")
"RTN","IBCECSA5",99,0)
 D SET("   Code     Description")
"RTN","IBCECSA5",100,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",101,0)
 . D CNTRL^VALM10(VALMCNT,4,4,IOUON,IOUOFF)
"RTN","IBCECSA5",102,0)
 . D CNTRL^VALM10(VALMCNT,13,11,IOUON,IOUOFF)
"RTN","IBCECSA5",103,0)
 . Q
"RTN","IBCECSA5",104,0)
 ;
"RTN","IBCECSA5",105,0)
 S IBREC1=$P($G(^IBM(361.1,IBCNT,3)),U,3,7)
"RTN","IBCECSA5",106,0)
 I $P(IBREC1,U,1)="" S IBREC1=$P($G(^IBM(361.1,IBCNT,5)),U,1,5)
"RTN","IBCECSA5",107,0)
 S REXIST=0
"RTN","IBCECSA5",108,0)
 ;
"RTN","IBCECSA5",109,0)
 F IBP=1:1:5 D
"RTN","IBCECSA5",110,0)
 . S RCODE=$P(IBREC1,U,IBP)
"RTN","IBCECSA5",111,0)
 . S RDESC=$G(^IBM(361.1,IBCNT,"RM"_IBP))
"RTN","IBCECSA5",112,0)
 . ; IB*2.0*547 - get RARC desription from new AR file 346 when available
"RTN","IBCECSA5",113,0)
 . I '$$VFILE^DILFD(346),RCODE="",RDESC="" Q
"RTN","IBCECSA5",114,0)
 . K IBT
"RTN","IBCECSA5",115,0)
 . Q:RCODE=""
"RTN","IBCECSA5",116,0)
 . I '$$VFILE^DILFD(346) S REXIST=1,IBT(IBP)=RDESC
"RTN","IBCECSA5",117,0)
 . I $$VFILE^DILFD(346) S REXIST=$$CARC(RCODE,346,60,"IBT") Q:REXIST<1
"RTN","IBCECSA5",118,0)
 . D TXT1(.IBT,0,60)
"RTN","IBCECSA5",119,0)
 . D SET("   "_$$LJ^XLFSTR(RCODE,6)_"-  "_$G(IBT(1)))
"RTN","IBCECSA5",120,0)
 . S IBX=1
"RTN","IBCECSA5",121,0)
 . F  S IBX=$O(IBT(IBX)) Q:'IBX  D SET($J("",12)_IBT(IBX))
"RTN","IBCECSA5",122,0)
 . Q
"RTN","IBCECSA5",123,0)
 ;
"RTN","IBCECSA5",124,0)
 I 'REXIST D SET("   No claim level remarks on file")
"RTN","IBCECSA5",125,0)
 D SET(" ")
"RTN","IBCECSA5",126,0)
 Q:$G(IBSRC)  ; MRA Only
"RTN","IBCECSA5",127,0)
 ;
"RTN","IBCECSA5",128,0)
MRALLA S IB=$$SETSTR^VALM1("LINE LEVEL ADJUSTMENTS:","",1,50)
"RTN","IBCECSA5",129,0)
 D SET(IB)
"RTN","IBCECSA5",130,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",131,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA5",132,0)
 . S ^TMP("IBCECSD",$J,"X",7)=VALMCNT
"RTN","IBCECSA5",133,0)
 I '$D(^IBM(361.1,IBCNT,15,0)) D SET(" NONE") Q  ; only if there is info
"RTN","IBCECSA5",134,0)
 ;
"RTN","IBCECSA5",135,0)
 ; look up all billed data
"RTN","IBCECSA5",136,0)
 N IBZDATA,IBFORM,IBX2,IBX3,IBREC2,IBREC3,IBTX,IBT,IBRC,IBZ,IBTXL
"RTN","IBCECSA5",137,0)
 S IBFORM=0                             ; cms-1500
"RTN","IBCECSA5",138,0)
 I $$FT^IBCEF(+IBREC)=3 S IBFORM=1      ; UB-04
"RTN","IBCECSA5",139,0)
 D F^IBCEF("N-"_$S(IBFORM:"UB-04",1:"HCFA 1500")_" SERVICE LINE (EDI)","IBZDATA",,+IBREC)
"RTN","IBCECSA5",140,0)
 ;
"RTN","IBCECSA5",141,0)
 S IBX=0 F  S IBX=$O(^IBM(361.1,IBCNT,15,IBX)) Q:IBX<1  S IBREC1=^IBM(361.1,IBCNT,15,IBX,0) D
"RTN","IBCECSA5",142,0)
 . NEW RVL
"RTN","IBCECSA5",143,0)
 . D SET("  #   SV DT   REVCD  PROC  MOD  UNITS  BILLED  DEDUCT  COINS    ALLOW     PYMT")
"RTN","IBCECSA5",144,0)
 . S RVL=+$P(IBREC1,U,12)       ; referenced Vista line#
"RTN","IBCECSA5",145,0)
 . I 'RVL S RVL=IBX             ; use the EOB line# if not there
"RTN","IBCECSA5",146,0)
 . S IBT=$$RJ($P(IBREC1,"^"),3) ;             line number
"RTN","IBCECSA5",147,0)
 . S IBT=IBT_" "_$$RJ($$DAT1^IBOUTL($P($P(IBREC1,"^",16),".")),8) ; service date
"RTN","IBCECSA5",148,0)
 . S IBT=IBT_" "_$$RJ($$EXTERNAL^DILFD(361.115,.1,"",$P(IBREC1,"^",10)),6) ;                                                revcd
"RTN","IBCECSA5",149,0)
 . S IBT=IBT_" "_$$RJ($P(IBREC1,"^",4),5) ;   procedure
"RTN","IBCECSA5",150,0)
 . S IBT=IBT_" "_$$RJ($P($G(^IBM(361.1,IBCNT,15,IBX,2,1,0)),"^"),3)_$S($D(^IBM(361.1,IBCNT,15,IBX,2,2,0)):"+",1:" ") ;      modifiers
"RTN","IBCECSA5",151,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",11),"",0),5) ; units
"RTN","IBCECSA5",152,0)
 . S IBT=IBT_" "_$$RJ($FN($S(IBFORM:$P($G(IBZDATA(RVL)),"^",5),1:$P($G(IBZDATA(RVL)),"^",8)*$P($G(IBZDATA(RVL)),"^",9)),"",2),8) ;    billed
"RTN","IBCECSA5",153,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",1,0)),0)),"^",2),"",2),7) ;  deduct
"RTN","IBCECSA5",154,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",2,0)),0)),"^",2),"",2),6) ;   coins
"RTN","IBCECSA5",155,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",13),"",2),8) ; allow
"RTN","IBCECSA5",156,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",3),"",2),8) ;  payment
"RTN","IBCECSA5",157,0)
 . D SET(IBT)
"RTN","IBCECSA5",158,0)
 . S IBX2=0 F  S IBX2=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2)) Q:IBX2<1  D
"RTN","IBCECSA5",159,0)
 .. S IBREC2=^IBM(361.1,IBCNT,15,IBX,1,IBX2,0),IBX3=0
"RTN","IBCECSA5",160,0)
 .. F  S IBX3=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3)) Q:IBX3<1  D
"RTN","IBCECSA5",161,0)
 ... S IBREC3=^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3,0)
"RTN","IBCECSA5",162,0)
 ... ; line level adjustments; don't display kludges (esg 10/23/03)
"RTN","IBCECSA5",163,0)
 ... I $P(IBREC2,U,1)="PR",$P(IBREC3,U,1)="AAA" Q
"RTN","IBCECSA5",164,0)
 ... I $P(IBREC2,U,1)="OA",$P(IBREC3,U,1)="AB3" Q
"RTN","IBCECSA5",165,0)
 ... I $P(IBREC2,U,1)="LQ" Q
"RTN","IBCECSA5",166,0)
 ... ; IB*2.0*547 - get CARC description from AR file 345, when ready
"RTN","IBCECSA5",167,0)
 ... I '$$VFILE^DILFD(345) S IBTX(1)="ADJ: "_$P(IBREC2,"^")_"  "_$P(IBREC3,"^")_"  "_$P(IBREC3,"^",4) D TXT1(.IBTX,0,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",168,0)
 ... I $$VFILE^DILFD(345) S IBT=$$CARC($P(IBREC3,"^"),345,79,"IBTX"),IBTX(1)="ADJ: "_$P(IBREC2,"^")_"  "_$P(IBREC3,"^")_":  "_$G(IBTX(1)) D TXT1(.IBTX,0,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",169,0)
 ... K IBTX
"RTN","IBCECSA5",170,0)
 ... D SET("ADJ AMT: "_$FN($P(IBREC3,"^",2),"",2))
"RTN","IBCECSA5",171,0)
 . S IBRC=0
"RTN","IBCECSA5",172,0)
 . F  S IBRC=$O(^IBM(361.1,IBCNT,15,IBX,4,IBRC)) Q:'IBRC  S IBREC2=$G(^(IBRC,0)) I IBREC2 K IBTX,IBZ S IBTX(1)="  -REMARK CODE("_+IBREC2_"): ",IBTXL=$L(IBTX(1)) D
"RTN","IBCECSA5",173,0)
 .. ; IB*2.0*547 - get RARC description from AR file 346, when ready
"RTN","IBCECSA5",174,0)
 .. I '$$VFILE^DILFD(346) S IBTX(1)=IBTX(1)_$P(IBREC2,U,2)_"  "_$P(IBREC2,U,3)
"RTN","IBCECSA5",175,0)
 .. I $$VFILE^DILFD(346) S IBT=$$CARC($P(IBREC2,U,2),346,79,"IBTX"),IBTX(1)=IBTX(1)_$P(IBREC2,U,2)_"  "_$G(IBT(1))
"RTN","IBCECSA5",176,0)
 .. I $L(IBTX(1))>79 D
"RTN","IBCECSA5",177,0)
 ... D TXT1(.IBTX,0,79) D SET(IBTX(1)) M IBZ=IBTX K IBTX S IBTX(1)="",IBT=1 F  S IBT=$O(IBZ(IBT)) Q:'IBT  S IBTX(1)=IBTX(1)_IBZ(IBT)_" "
"RTN","IBCECSA5",178,0)
 .. E  D
"RTN","IBCECSA5",179,0)
 ... S IBTXL=0
"RTN","IBCECSA5",180,0)
 .. D TXT1(.IBTX,IBTXL,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",181,0)
 . D SET(" ")
"RTN","IBCECSA5",182,0)
 D SET(" ")
"RTN","IBCECSA5",183,0)
 Q
"RTN","IBCECSA5",184,0)
 ;
"RTN","IBCECSA5",185,0)
 ;/Beginning IB*2.0*488 (vd)
"RTN","IBCECSA5",186,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBCECSA5",187,0)
 N ERRTXT,DASHES,Z
"RTN","IBCECSA5",188,0)
 S DASHES="---------------------------------------------------------------------"
"RTN","IBCECSA5",189,0)
 I '$O(^IBM(361.1,IBCNT,"ERR",0)) Q
"RTN","IBCECSA5",190,0)
 D SET("VistA could not match all of the Line Level data received in the EEOB")
"RTN","IBCECSA5",191,0)
 D SET("(835 Record 40) to the claim in VistA.")
"RTN","IBCECSA5",192,0)
 D SET(" ")
"RTN","IBCECSA5",193,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,"ERR",Z)) Q:'Z  D
"RTN","IBCECSA5",194,0)
 .S ERRTXT=$G(^IBM(361.1,IBCNT,"ERR",Z,0))
"RTN","IBCECSA5",195,0)
 .I ERRTXT["##RAW DATA" S ERRTXT=DASHES
"RTN","IBCECSA5",196,0)
 .D SET(ERRTXT)
"RTN","IBCECSA5",197,0)
 Q
"RTN","IBCECSA5",198,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCECSA5",199,0)
 ;
"RTN","IBCECSA5",200,0)
TXT(IBRM,IBLN,IBXY) ;display text over 79 chars
"RTN","IBCECSA5",201,0)
 ;IBRM - text, IBLN - length, IBXY - position
"RTN","IBCECSA5",202,0)
 S IBRM=$E(IBRM,IBLN+1,999)
"RTN","IBCECSA5",203,0)
REP I $E(IBRM,1,IBLN)'="" S IB=$$SETSTR^VALM1($E(IBRM,1,IBLN),"",IBXY,IBLN) D SET(IB) S IBRM=$E(IBRM,IBLN+1,999) G REP
"RTN","IBCECSA5",204,0)
 Q
"RTN","IBCECSA5",205,0)
 ;
"RTN","IBCECSA5",206,0)
SET(IB,IBSAV) ;
"RTN","IBCECSA5",207,0)
 I '$G(IBSAV) D SET^IBCECSA6($G(IBSRC),IB,+$G(CNT),IBCNT)
"RTN","IBCECSA5",208,0)
 Q
"RTN","IBCECSA5",209,0)
 ;
"RTN","IBCECSA5",210,0)
A10(X) ;
"RTN","IBCECSA5",211,0)
 Q $$A10^IBCECSA6(X)
"RTN","IBCECSA5",212,0)
 ;
"RTN","IBCECSA5",213,0)
A7(X) ; returns a dollar amount right justified to 7 characters
"RTN","IBCECSA5",214,0)
 Q $$RJ($FN(X,"",2),7)
"RTN","IBCECSA5",215,0)
 ;
"RTN","IBCECSA5",216,0)
TXT1(IBT,DIWL,DIWR) ; sets up text for over 79 chars
"RTN","IBCECSA5",217,0)
 ; IBT - pass by ref, array of text to be formatted back in array
"RTN","IBCECSA5",218,0)
 ; DIWL - left margin, DIWR = right margin
"RTN","IBCECSA5",219,0)
 N IBX,X,DIWF,IBS K ^UTILITY($J,"W")
"RTN","IBCECSA5",220,0)
 S DIWF="|I"_DIWL
"RTN","IBCECSA5",221,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  S X=IBT(IBX) D ^DIWP
"RTN","IBCECSA5",222,0)
 K IBT F  S IBX=$O(^UTILITY($J,"W",DIWL,IBX)) Q:IBX<1  S IBT(IBX)=^UTILITY($J,"W",DIWL,IBX,0)
"RTN","IBCECSA5",223,0)
 K ^UTILITY($J,"W")
"RTN","IBCECSA5",224,0)
 Q
"RTN","IBCECSA5",225,0)
 ;
"RTN","IBCECSA5",226,0)
RJ(X,Y) ; right just, default is 10
"RTN","IBCECSA5",227,0)
 Q $$RJ^XLFSTR(X,$G(Y,10)," ")
"RTN","IBCECSA5",228,0)
 ;
"RTN","IBCECSA5",229,0)
CARC(IBCDE,IBF,IBML,IBARY) ;new CARC/RACR API for IB*2.0*547
"RTN","IBCECSA5",230,0)
 ; IBCDE = reason code from EOB to lookup in carc/rarc file (REQUIRED)
"RTN","IBCECSA5",231,0)
 ; IBF = file# to do lookup (either 345-CARC or 346-RARC) *REQUIRED*
"RTN","IBCECSA5",232,0)
 ; IBML = max length for each line (default is 79)
"RTN","IBCECSA5",233,0)
 ; IBARY = (required) subscripted array to return description data in:
"RTN","IBCECSA5",234,0)
 ;  array(1)=first line of word-processed description
"RTN","IBCECSA5",235,0)
 ;  array(2)= 2nd line of wp description, and so on
"RTN","IBCECSA5",236,0)
 ;
"RTN","IBCECSA5",237,0)
 ; Returns total # of lines in description
"RTN","IBCECSA5",238,0)
 ;
"RTN","IBCECSA5",239,0)
 N IBY,IBX,IBC,IBI,IBN,IBALN,IBSTP,IBDSC
"RTN","IBCECSA5",240,0)
 S IBC=0
"RTN","IBCECSA5",241,0)
 Q:$G(IBARY)="" IBC
"RTN","IBCECSA5",242,0)
 Q:$G(IBCDE)="" IBC
"RTN","IBCECSA5",243,0)
 Q:$G(IBF)="" IBC
"RTN","IBCECSA5",244,0)
 S:$G(IBML)="" IBML=79
"RTN","IBCECSA5",245,0)
 S IBY=$$FIND1^DIC(IBF,,"BX",IBCDE) Q:IBY<1 IBC
"RTN","IBCECSA5",246,0)
 S IBX=$$GET1^DIQ(IBF,IBY_",",4,"","IBDSC")
"RTN","IBCECSA5",247,0)
 S IBI=0 F  S IBI=$O(IBDSC(IBI)) Q:'IBI  D
"RTN","IBCECSA5",248,0)
 .S IBC=IBC+1,IBSTP=0,IBALN=$L(IBDSC(IBI))
"RTN","IBCECSA5",249,0)
 .S @IBARY@(IBI)=$E(IBDSC(IBI),1,IBML) Q:IBML>IBALN
"RTN","IBCECSA5",250,0)
 .S IBDSC(IBI+1)=($E(IBDSC(IBI),(IBML+1),IBALN)_" "_$G(IBDSC(IBI+1)))
"RTN","IBCECSA5",251,0)
 .; make sure we don't break words in 2
"RTN","IBCECSA5",252,0)
 .Q:$E(@IBARY@(IBI),IBML)=" "
"RTN","IBCECSA5",253,0)
 .F IBN=IBML:-1:1 Q:$G(IBSTP)=1  D
"RTN","IBCECSA5",254,0)
 ..Q:$E(IBDSC(IBI),IBN)'=" " 
"RTN","IBCECSA5",255,0)
 ..S @IBARY@(IBI)=$E(IBDSC(IBI),1,IBN),IBDSC(IBI+1)=($E(IBDSC(IBI),(IBN+1),IBML)_$G(IBDSC(IBI+1))),IBSTP=1 Q
"RTN","IBCECSA5",256,0)
 Q IBC
"RTN","IBCECSA5",257,0)
 ;
"RTN","IBCECSA6")
0^14^B177663056^B168448681
"RTN","IBCECSA6",1,0)
IBCECSA6 ;ALB/CXW/PJH - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155,417,431,451,488,547**;21-MAR-1994;Build 119
"RTN","IBCECSA6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECSA6",4,0)
 ;
"RTN","IBCECSA6",5,0)
 ; reference to $$VFILE^DILFD allowed with IA#2055  (IB*2.0*547)
"RTN","IBCECSA6",6,0)
 ;
"RTN","IBCECSA6",7,0)
BLD ;build EOB data display
"RTN","IBCECSA6",8,0)
 D GETEOB(IBCNT,0)
"RTN","IBCECSA6",9,0)
 Q
"RTN","IBCECSA6",10,0)
 ;
"RTN","IBCECSA6",11,0)
GETEOB(IBCNT,IBSRC,IBFULL,IBJTIBLN) ; Get EOB data in display format
"RTN","IBCECSA6",12,0)
 ; IBCNT = the ien of the entry in file 361.1
"RTN","IBCECSA6",13,0)
 ; IBSRC = 1 if called from AR, 0 if List Manager format needed
"RTN","IBCECSA6",14,0)
 ;       = 2 if called from AR and header data is desired
"RTN","IBCECSA6",15,0)
 ;   If IBSRC > 0  ^TMP("PRCA_EOB",$J,IBCNT,n)=line n's text is ret'd
"RTN","IBCECSA6",16,0)
 ; IBFULL = 1 if no check should be made to eliminate a fld whose value=0
"RTN","IBCECSA6",17,0)
 ; IBJTIBLN = line number to start VALMCNT with (optional)
"RTN","IBCECSA6",18,0)
 ;            used by IBJTBA1
"RTN","IBCECSA6",19,0)
 ;
"RTN","IBCECSA6",20,0)
 N IBREC,IBTYP,CNT,IBREM
"RTN","IBCECSA6",21,0)
 S IBFULL=$G(IBFULL),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",22,0)
 I IBSRC N VALMBG,VALMCNT
"RTN","IBCECSA6",23,0)
 S VALMCNT=0,VALMBG=1,CNT=0
"RTN","IBCECSA6",24,0)
 I $G(IBJTIBLN)>0 S VALMCNT=IBJTIBLN
"RTN","IBCECSA6",25,0)
 S IBREC=$G(^IBM(361.1,IBCNT,0)),IBTYP=$P(IBREC,U,4)
"RTN","IBCECSA6",26,0)
 I IBSRC K ^TMP("PRCA_EOB",$J,IBCNT)
"RTN","IBCECSA6",27,0)
 ; Once we're displaying a single EOB, remove the multiple EOB header of 
"RTN","IBCECSA6",28,0)
 ; the View EOB screen that was set in HDR^IBCEOB2 - VALMHDR(4).
"RTN","IBCECSA6",29,0)
 I 'IBSRC,$G(VALMHDR(4))'="" S VALMHDR(4)=""
"RTN","IBCECSA6",30,0)
 D GEN,PAY,ARCP^IBCECSA7,CLVL,CLVLA,MIN^IBCECSA5,MOUT,LLVLA^IBCECSA7,RDATA^IBCECSA7
"RTN","IBCECSA6",31,0)
 Q
"RTN","IBCECSA6",32,0)
 ;
"RTN","IBCECSA6",33,0)
SEL(IB,ONE) ;
"RTN","IBCECSA6",34,0)
 N IBDA
"RTN","IBCECSA6",35,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA6",36,0)
 S IBDA=0 S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA6",37,0)
 . S IB=$P($G(^TMP("IBCECSD",$J,IBDA)),U,2)
"RTN","IBCECSA6",38,0)
 . S IBONE=1
"RTN","IBCECSA6",39,0)
 Q
"RTN","IBCECSA6",40,0)
 ;
"RTN","IBCECSA6",41,0)
ACT ; Reposition display using actions
"RTN","IBCECSA6",42,0)
 I '$G(IBONE) D SEL(.IBCNT,1) D BLD:$G(IBCNT)
"RTN","IBCECSA6",43,0)
 S VALMBG=$G(^TMP("IBCECSD",$J,"X",+$G(IBACT))) S:'VALMBG VALMBG=1
"RTN","IBCECSA6",44,0)
 S VALMBCK="R"
"RTN","IBCECSA6",45,0)
 Q
"RTN","IBCECSA6",46,0)
 ;
"RTN","IBCECSA6",47,0)
SET(IBSRC,X,CNT,IBCNT) ;set list manager arrays
"RTN","IBCECSA6",48,0)
 S VALMCNT=VALMCNT+1,IBSRC=$G(IBSRC)
"RTN","IBCECSA6",49,0)
 ;
"RTN","IBCECSA6",50,0)
 I IBSRC D  Q
"RTN","IBCECSA6",51,0)
 . S ^TMP("PRCA_EOB",$J,IBCNT,VALMCNT)=X
"RTN","IBCECSA6",52,0)
 ;
"RTN","IBCECSA6",53,0)
 S ^TMP("IBCECSD",$J,VALMCNT,0)=X
"RTN","IBCECSA6",54,0)
 S ^TMP("IBCECSD",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA6",55,0)
 S ^TMP("IBCECSD",$J,CNT)=VALMCNT_U_IBCNT
"RTN","IBCECSA6",56,0)
 Q
"RTN","IBCECSA6",57,0)
 ;
"RTN","IBCECSA6",58,0)
GEN ;
"RTN","IBCECSA6",59,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",60,0)
 N IBREC1,IBTMP,IBSPL
"RTN","IBCECSA6",61,0)
 S IBSPL=+$O(^IBM(361.1,IBCNT,8,0)),IBSPL=(+$O(^(IBSPL))'=IBSPL)
"RTN","IBCECSA6",62,0)
 S IB=$$SETSTR^VALM1("EOB GENERAL INFORMATION:","",1,50)
"RTN","IBCECSA6",63,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",64,0)
 I 'IBSRC D
"RTN","IBCECSA6",65,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",66,0)
 . S ^TMP("IBCECSD",$J,"X",1)=VALMCNT
"RTN","IBCECSA6",67,0)
 S IB=$$SETSTR^VALM1("Type        : "_$S(IBTYP:"MEDICARE MRA",1:"NORMAL EOB")_$S(IBSPL:" (SPLIT IN A/R)",1:""),"",2,39)
"RTN","IBCECSA6",68,0)
 S IB=$$SETSTR^VALM1("EOB Paid DT  : "_$$DAT1^IBOUTL($P(IBREC,U,6),1),IB,41,38)
"RTN","IBCECSA6",69,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",70,0)
 I IBSRC D
"RTN","IBCECSA6",71,0)
 . S IB=$$SETSTR^VALM1($S(IBSRC:"Entry Dt/Tm :"_$$DAT1^IBOUTL($P(IBREC,U,5),1),1:""),"",2,39)
"RTN","IBCECSA6",72,0)
 . S IBTMP=$P(IBREC,U,13)
"RTN","IBCECSA6",73,0)
 . S IB=$$SETSTR^VALM1("Claim Status : "_$$EXTERNAL^DILFD(361.1,.13,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",74,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",75,0)
 . S IBTMP=$P(IBREC,U,16)
"RTN","IBCECSA6",76,0)
 . S IB=$$SETSTR^VALM1("Review Status: "_$$EXTERNAL^DILFD(361.1,.16,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",77,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",78,0)
 . S IB=$$SETSTR^VALM1("Entered By  : "_$P($G(^VA(200,+$P(IBREC,U,18),0)),U),"",2,39)
"RTN","IBCECSA6",79,0)
 . S IBTMP=$P(IBREC,U,15)
"RTN","IBCECSA6",80,0)
 . S IB=$$SETSTR^VALM1("Insurance Seq: "_$$EXTERNAL^DILFD(361.1,.15,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",81,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",82,0)
 I 'IBSRC D
"RTN","IBCECSA6",83,0)
 . S IB=$$SETSTR^VALM1($S($P(IBREC,U,17):"Manual Entry: YES",1:""),"",2,39)
"RTN","IBCECSA6",84,0)
 . S IBTMP=$P(IBREC,U,13)
"RTN","IBCECSA6",85,0)
 . S IB=$$SETSTR^VALM1("Claim Status : "_$$EXTERNAL^DILFD(361.1,.13,"",IBTMP),IB,41,38)
"RTN","IBCECSA6",86,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",87,0)
 . S IBTMP=$P(IBREC,U,15)
"RTN","IBCECSA6",88,0)
 . S IB=$$SETSTR^VALM1("Insurance Seq: "_$$EXTERNAL^DILFD(361.1,.15,"",IBTMP),"",41,38)
"RTN","IBCECSA6",89,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",90,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,100))
"RTN","IBCECSA6",91,0)
 I $S($G(IBFULL):1,1:$P(IBREC1,U,4)'=""!($P(IBREC1,U,3)'="")) D
"RTN","IBCECSA6",92,0)
 . S IB=$$SETSTR^VALM1("Last Edited : "_$$DAT1^IBOUTL($P(IBREC1,U,4),1),"",2,39)
"RTN","IBCECSA6",93,0)
 . S IB=$$SETSTR^VALM1("Last Edit By : "_$P($G(^VA(200,+$P(IBREC1,U,3),0)),U),IB,41,38)
"RTN","IBCECSA6",94,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",95,0)
 ;
"RTN","IBCECSA6",96,0)
 D INSINF^IBCECSA7(+IBREC,CNT,IBCNT)
"RTN","IBCECSA6",97,0)
 ;
"RTN","IBCECSA6",98,0)
 ;Additional fields for HIPAA 5010
"RTN","IBCECSA6",99,0)
 I IBSRC D
"RTN","IBCECSA6",100,0)
 .N IBOSN,IBOSN1,IBREC50,IBREC51
"RTN","IBCECSA6",101,0)
 .S IBREC50=$G(^IBM(361.1,IBCNT,50)),IBREC51=$G(^IBM(361.1,IBCNT,51))
"RTN","IBCECSA6",102,0)
 .S IB=$$SETSTR^VALM1("Claim Rec'd Date     : "_$$DAT1^IBOUTL($P(IBREC50,U),1),"",2,39)
"RTN","IBCECSA6",103,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",104,0)
 .S IBOSN=$E($P(IBREC51,U),1,56),IBOSN1=$E($P(IBREC51,U),57,112)
"RTN","IBCECSA6",105,0)
 .S IB=$$SETSTR^VALM1("Other Subscriber Name: "_IBOSN,"",2,79)
"RTN","IBCECSA6",106,0)
 .D SET(IBSRC,IB,CNT,IBCNT) Q:IBOSN1=""
"RTN","IBCECSA6",107,0)
 .S IB=$$SETSTR^VALM1("                       "_IBOSN1,"",2,79)
"RTN","IBCECSA6",108,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",109,0)
 ;
"RTN","IBCECSA6",110,0)
 I $S($G(IBFULL):1,1:$P($G(^IBM(361.1,IBCNT,6)),U)'=""!($P($G(^IBM(361.1,IBCNT,6)),U,2)'="")) D
"RTN","IBCECSA6",111,0)
 . S IB=$$SETSTR^VALM1("New Pat. Nm.: "_$P($G(^IBM(361.1,IBCNT,6)),U),"",2,39)
"RTN","IBCECSA6",112,0)
 . S IB=$$SETSTR^VALM1("New Pat. Id  : "_$P($G(^IBM(361.1,IBCNT,6)),U,2),IB,41,38)
"RTN","IBCECSA6",113,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",114,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",115,0)
 Q
"RTN","IBCECSA6",116,0)
 ;
"RTN","IBCECSA6",117,0)
PAY ;
"RTN","IBCECSA6",118,0)
 S IBSRC=$G(IBSRC) Q:IBSRC=1
"RTN","IBCECSA6",119,0)
 N IBREC1,IBTMP
"RTN","IBCECSA6",120,0)
 S IB=$$SETSTR^VALM1("PAYER INFORMATION:","",1,50)
"RTN","IBCECSA6",121,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",122,0)
 I 'IBSRC D
"RTN","IBCECSA6",123,0)
 . D CNTRL^VALM10(VALMCNT,1,18,IORVON,IORVOFF)
"RTN","IBCECSA6",124,0)
 . S ^TMP("IBCECSD",$J,"X",2)=VALMCNT
"RTN","IBCECSA6",125,0)
 ; KL - HIPAA 5010 - moved the write of the Payer ID on the next line down from the payer name to accommodate
"RTN","IBCECSA6",126,0)
 ; the increased length of the PAYER NAME from 35 to 60 characters.  modified length parameter to $$SETSTR function for
"RTN","IBCECSA6",127,0)
 ; Payer ID and ICN to accommodate increased length of additional 20 characters. 
"RTN","IBCECSA6",128,0)
 S IB=$$SETSTR^VALM1("Payer Name   : "_$P($G(^DIC(36,+$P(IBREC,U,2),0)),U),"",2,60)
"RTN","IBCECSA6",129,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",130,0)
 S IB=$$SETSTR^VALM1("Payer Id     : "_$P(IBREC,U,3),IB,2,38)
"RTN","IBCECSA6",131,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",132,0)
 S IB=$$SETSTR^VALM1("ICN          : "_$P(IBREC,U,14),"",2,60)
"RTN","IBCECSA6",133,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",134,0)
 ;Additional fields for HIPA 5010
"RTN","IBCECSA6",135,0)
 N I,IBREC25,IBCON,IBCONTXT,IBCTYP,IBPAYNAM,IBWEB3,IBWEB
"RTN","IBCECSA6",136,0)
 ; Display PAYER CONTACT NAME, file #361.1, or CONTACT NAME, file #344; .4, (whichever is available)
"RTN","IBCECSA6",137,0)
 S IBREC25=$G(^IBM(361.1,IBCNT,25))
"RTN","IBCECSA6",138,0)
 S IBPAYNAM=$P(IBREC25,U)
"RTN","IBCECSA6",139,0)
 I IBPAYNAM="",+$G(RCSCR)>0 S IBPAYNAM=$P($G(^RCY(344.4,RCSCR,3)),U)
"RTN","IBCECSA6",140,0)
 I IBPAYNAM'="" D
"RTN","IBCECSA6",141,0)
 .S IB=$$SETSTR^VALM1("Payer Contact: "_IBPAYNAM,IB,2,60)
"RTN","IBCECSA6",142,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",143,0)
 I $TR($P(IBREC25,U,2,7),U,"")'="" D
"RTN","IBCECSA6",144,0)
 .F I=2,4,6 D
"RTN","IBCECSA6",145,0)
 ..S IBCON=$P(IBREC25,U,I),IBCTYP=$P(IBREC25,U,I+1) Q:IBCON=""
"RTN","IBCECSA6",146,0)
 ..S IBCONTXT=$S(IBCTYP="TE":"Contact Phone  : ",IBCTYP="FX":"Contact Fax    : ",IBCTYP="EM":"Contact e-Mail : ",1:"Invalid type :")
"RTN","IBCECSA6",147,0)
 ..S IB=$$SETSTR^VALM1(IBCONTXT_IBCON,"",2,50)
"RTN","IBCECSA6",148,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",149,0)
 I $G(RCSCR)'="" D
"RTN","IBCECSA6",150,0)
 .S IBWEB=$P($G(^RCY(344.4,RCSCR,5)),U) Q:IBWEB=""
"RTN","IBCECSA6",151,0)
 .S IB=$$SETSTR^VALM1("Payer Web Site : "_$E(IBWEB,1,60),"",2,78)
"RTN","IBCECSA6",152,0)
 .D SET(IBSRC,IB,CNT,IBCNT) Q:$L(IBWEB)<61
"RTN","IBCECSA6",153,0)
 .S IB=$$SETSTR^VALM1($E(IBWEB,61,115),"",19,78)
"RTN","IBCECSA6",154,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",155,0)
 ;Payer Policy References
"RTN","IBCECSA6",156,0)
 D PPR
"RTN","IBCECSA6",157,0)
 N IBREC51
"RTN","IBCECSA6",158,0)
 S IBREC51=$G(^IBM(361.1,IBCNT,51))
"RTN","IBCECSA6",159,0)
 I $P(IBREC,U,9)'=""!($P(IBREC51,U,2)'="") D
"RTN","IBCECSA6",160,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr ID : "_$P(IBREC,U,9),"",2,39)
"RTN","IBCECSA6",161,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",162,0)
 . S IB=$$SETSTR^VALM1("Cross Ovr Nm: "_$P(IBREC51,U,2),"",2,76)
"RTN","IBCECSA6",163,0)
 . D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",164,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",165,0)
 ;Audit Details
"RTN","IBCECSA6",166,0)
 D AUDIT
"RTN","IBCECSA6",167,0)
 Q
"RTN","IBCECSA6",168,0)
 ;
"RTN","IBCECSA6",169,0)
CLVL ;
"RTN","IBCECSA6",170,0)
 N IBREC1,IBTMP,IBRL
"RTN","IBCECSA6",171,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL PAY STATUS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",172,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",173,0)
 I 'IBSRC D
"RTN","IBCECSA6",174,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA6",175,0)
 . S ^TMP("IBCECSD",$J,"X",3)=VALMCNT
"RTN","IBCECSA6",176,0)
 I '$D(^IBM(361.1,IBCNT,2)),'$D(^IBM(361.1,IBCNT,1)) D SET(IBSRC," NONE",CNT,IBCNT) Q
"RTN","IBCECSA6",177,0)
 S IB=$$SETSTR^VALM1("Tot Submitted Chrg: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,4)),"",2,39)
"RTN","IBCECSA6",178,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,1))
"RTN","IBCECSA6",179,0)
 S IB=$$SETSTR^VALM1("Covered Amt       : "_$$A10($P(IBREC1,U,3)),IB,41,38)
"RTN","IBCECSA6",180,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",181,0)
 S IB=$$SETSTR^VALM1("Payer Paid Amt    : "_$$A10($P(IBREC1,U)),"",2,39)
"RTN","IBCECSA6",182,0)
 S IB=$$SETSTR^VALM1("Patient Resp. Amt : "_$$A10($S($D(^IBM(361.1,IBCNT,"ERR")):0,IBSRC:$P(IBREC1,U,2),$$FT^IBCEF(+IBREC)=3:$$PTRESPI^IBCECOB1(IBCNT),1:$P($G(^IBM(361.1,IBCNT,1)),"^",2))),IB,41,38)
"RTN","IBCECSA6",183,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",184,0)
 S (IB,IBRL)=""
"RTN","IBCECSA6",185,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,4)) S IB=$$SETSTR^VALM1("Discount Amt      : "_$$A10($P(IBREC1,U,4)),"",2,39),IBRL=1
"RTN","IBCECSA6",186,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,5)) S IB=$$SETSTR^VALM1("Per Day Limit Amt : "_$$A10($P(IBREC1,U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",187,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Tax Amt           : "_$$A10($P(IBREC1,U,8)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",188,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Tot Before Tax Amt: "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",189,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,3)) S IB=$$SETSTR^VALM1("Total Allowed Amt : "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,3)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",190,0)
 I $S(IBFULL:1,1:$P($G(^IBM(361.1,IBCNT,2)),U,5)) S IB=$$SETSTR^VALM1("Negative Reimb Amt: "_$$A10($P($G(^IBM(361.1,IBCNT,2)),U,5)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",191,0)
 I $G(IBSRC) I $S(IBFULL:1,1:$P(IBREC,U,12)) S IB=$$SETSTR^VALM1("Discharge Fraction: "_$$A10($P(IBREC,U,12)),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",192,0)
 I $S(IBFULL:1,1:$P(IBREC,U,10)) S IB=$$SETSTR^VALM1("DRG Code Used     :"_$$RJ^XLFSTR($P(IBREC,U,10),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1) I IBRL=0 D SET(IBSRC,IB,CNT,IBCNT) S IB=""
"RTN","IBCECSA6",193,0)
 I $S(IBFULL:1,1:$P(IBREC,U,11)) S IB=$$SETSTR^VALM1("DRG Weight Used   :"_$$RJ^XLFSTR($P(IBREC,U,11),11," "),IB,$S('IBRL:2,1:41),$S('IBRL:39,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",194,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",195,0)
 D:IBSRC SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",196,0)
 Q
"RTN","IBCECSA6",197,0)
 ;
"RTN","IBCECSA6",198,0)
MOUT ;
"RTN","IBCECSA6",199,0)
 N IBREC1,IBRL
"RTN","IBCECSA6",200,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,3)),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",201,0)
 I 'IBSRC,$$INPAT^IBCEF(+IBREC),$TR(IBREC1,"0^")="" Q
"RTN","IBCECSA6",202,0)
 I IBREC1="" D:'$D(^IBM(361.1,IBCNT,4)) SET(IBSRC," NONE",CNT,IBCNT) D:'IBSRC SET(IBSRC,"",CNT,IBCNT),REMARK^IBCECSA5 Q
"RTN","IBCECSA6",203,0)
 D SET(IBSRC," OUTPATIENT:",CNT,IBCNT)
"RTN","IBCECSA6",204,0)
 S IBRL=""
"RTN","IBCECSA6",205,0)
 I $S(IBFULL:1,1:$P(IBREC1,U)) S IB=$$SETSTR^VALM1("Reimburse Rate    : "_$$P10($P(IBREC1,U)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",206,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,2)) S IB=$$SETSTR^VALM1("HCPCS Pay Amt     : "_$$A10($P(IBREC1,U,2)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",207,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",208,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,8)) S IB=$$SETSTR^VALM1("Esrd Paid Amt     : "_$$A10($P(IBREC1,U,8)),"",$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",209,0)
 D:IBRL=0 SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",210,0)
 I $S(IBFULL:1,1:$P(IBREC1,U,9)) S IB=$$SETSTR^VALM1("Non-Pay Prof Comp : "_$$A10($P(IBREC1,U,9)),IB,$S('IBRL:4,1:40),$S('IBRL:41,1:38)),IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA6",211,0)
 D:IBRL'="" SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",212,0)
 D REMARK^IBCECSA5
"RTN","IBCECSA6",213,0)
 D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",214,0)
 Q
"RTN","IBCECSA6",215,0)
 ;
"RTN","IBCECSA6",216,0)
CLVLA ;
"RTN","IBCECSA6",217,0)
 N IBREC,IBFLG,GR,RSN,Z,I,IBCARC,IBN
"RTN","IBCECSA6",218,0)
 S IB=$$SETSTR^VALM1("CLAIM LEVEL ADJUSTMENTS:","",1,50),IBSRC=$G(IBSRC)
"RTN","IBCECSA6",219,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",220,0)
 I 'IBSRC D
"RTN","IBCECSA6",221,0)
 . D CNTRL^VALM10(VALMCNT,1,24,IORVON,IORVOFF)
"RTN","IBCECSA6",222,0)
 . S ^TMP("IBCECSD",$J,"X",4)=VALMCNT
"RTN","IBCECSA6",223,0)
 S (Y,IBFLG)=0 F  S Y=$O(^IBM(361.1,IBCNT,10,Y)) Q:'Y  D
"RTN","IBCECSA6",224,0)
 . S IBREC=$G(^IBM(361.1,IBCNT,10,Y,0)),GR=$P(IBREC,U,1)
"RTN","IBCECSA6",225,0)
 . I GR="OA",$P($G(^IBM(361.1,IBCNT,10,Y,1,0)),U,4)=1,$D(^IBM(361.1,IBCNT,10,Y,1,"B","AB3")) Q   ; kludge
"RTN","IBCECSA6",226,0)
 . S IBREC=$$EXTERNAL^DILFD(361.11,.01,"",GR),IBFLG=1
"RTN","IBCECSA6",227,0)
 . D SET(IBSRC," GROUP CODE: "_IBREC,CNT,IBCNT)
"RTN","IBCECSA6",228,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBCNT,10,Y,1,Z)) Q:'Z  D
"RTN","IBCECSA6",229,0)
 .. S IBREC=$G(^IBM(361.1,IBCNT,10,Y,1,Z,0)),RSN=$P(IBREC,U,1)
"RTN","IBCECSA6",230,0)
 .. I GR="OA",RSN="AB3" Q   ; kludge
"RTN","IBCECSA6",231,0)
 .. ; ib*2.0*547 - get CARC/RARC descriptions from new AR files 345/346 when available
"RTN","IBCECSA6",232,0)
 .. S:'$$VFILE^DILFD(345) IB=$$SETSTR^VALM1("REASON CODE: "_RSN_"  "_$P(IBREC,U,4),"",3,77)
"RTN","IBCECSA6",233,0)
 .. S:$$VFILE^DILFD(345) IB=$$SETSTR^VALM1("REASON CODE: "_RSN,"",3,77)
"RTN","IBCECSA6",234,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",235,0)
 .. I $$VFILE^DILFD(345) D
"RTN","IBCECSA6",236,0)
 ... S IBN=$$CARC^IBCECSA5(RSN,345,74,"IBCARC")
"RTN","IBCECSA6",237,0)
 ... F I=1:1:IBN S IB=$$SETSTR^VALM1(IBCARC(I),"",3,77) D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",238,0)
 .. ; end IB*2.0*547 changes
"RTN","IBCECSA6",239,0)
 .. S IB=$$SETSTR^VALM1("Amount: "_$$A10($P(IBREC,U,2)),"",3,40)
"RTN","IBCECSA6",240,0)
 .. S IB=$$SETSTR^VALM1("Quantity: "_$P(IBREC,U,3),IB,41,38)
"RTN","IBCECSA6",241,0)
 .. D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",242,0)
 .. ;D:IBSRC SET(IBSRC,"",CNT,IBCNT)   ;IB*2.0*488 (vd) REMOVED EXTRA BLANK LINE.
"RTN","IBCECSA6",243,0)
 I 'IBFLG D SET(IBSRC," NONE",CNT,IBCNT)
"RTN","IBCECSA6",244,0)
 Q
"RTN","IBCECSA6",245,0)
 ;
"RTN","IBCECSA6",246,0)
A10(X) ; returns a dollar amount right justified to 10 characters
"RTN","IBCECSA6",247,0)
 Q $$RJ^XLFSTR($FN(X,"",2),10," ")
"RTN","IBCECSA6",248,0)
 ;
"RTN","IBCECSA6",249,0)
P10(X) ; returns a % right just 10
"RTN","IBCECSA6",250,0)
 ; X is a decimal between 0-1
"RTN","IBCECSA6",251,0)
 Q $$RJ^XLFSTR((X*100)_"%",10," ")
"RTN","IBCECSA6",252,0)
 ;
"RTN","IBCECSA6",253,0)
PPR ;Display Payer Policy References
"RTN","IBCECSA6",254,0)
 ;
"RTN","IBCECSA6",255,0)
 N I,IBARR,IBX,IBX2,IBX3,IBPY,IBPCNT,IBDISP,IBTXT
"RTN","IBCECSA6",256,0)
 S IBX=0
"RTN","IBCECSA6",257,0)
 ;Get next Adjustment
"RTN","IBCECSA6",258,0)
 F  S IBX=$O(^IBM(361.1,IBCNT,15,IBX)) Q:'IBX  D
"RTN","IBCECSA6",259,0)
 .;Get next Line Level
"RTN","IBCECSA6",260,0)
 .S IBX2=0
"RTN","IBCECSA6",261,0)
 .F  S IBX2=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2)) Q:'IBX2  D
"RTN","IBCECSA6",262,0)
 ..;Get Adjustment line references (up to 5)
"RTN","IBCECSA6",263,0)
 ..S IBX3=0
"RTN","IBCECSA6",264,0)
 ..F  S IBX3=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2,2,IBX3)) Q:'IBX3  D
"RTN","IBCECSA6",265,0)
 ...S IBPY=$P($G(^IBM(361.1,IBCNT,15,IBX,1,IBX2,2,IBX3,0)),U) Q:IBPY=""
"RTN","IBCECSA6",266,0)
 ...S IBARR(IBPY)=""
"RTN","IBCECSA6",267,0)
 ;Concatenate Adjustment references
"RTN","IBCECSA6",268,0)
 S IBPY="",IBPCNT=0
"RTN","IBCECSA6",269,0)
 F  S IBPY=$O(IBARR(IBPY)) Q:IBPY=""  D  Q:IBPCNT=5
"RTN","IBCECSA6",270,0)
 .S IBPCNT=IBPCNT+1,$P(IBDISP,";",IBPCNT)=IBPY
"RTN","IBCECSA6",271,0)
 ;Format display
"RTN","IBCECSA6",272,0)
 Q:'IBPCNT
"RTN","IBCECSA6",273,0)
 S IB=$$SETSTR^VALM1("Policy Reference: Check Payer policies referenced on Payer website","",2,78)
"RTN","IBCECSA6",274,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",275,0)
 S IB=$$SETSTR^VALM1("for the following: "_$E(IBDISP,1,50),"",2,78)
"RTN","IBCECSA6",276,0)
 D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",277,0)
 F I=50:50:250 S IBTXT=$E(IBDISP,I+1,I+50) Q:IBTXT=""  D
"RTN","IBCECSA6",278,0)
 .S IB=$$SETSTR^VALM1($J("",19)_IBTXT,"",2,78)
"RTN","IBCECSA6",279,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",280,0)
 Q
"RTN","IBCECSA6",281,0)
 ;
"RTN","IBCECSA6",282,0)
AUDIT ;Display details of any EEOB MOVE/COPY
"RTN","IBCECSA6",283,0)
 ;
"RTN","IBCECSA6",284,0)
 N IEN101,FIRST101
"RTN","IBCECSA6",285,0)
 S IEN101=0,FIRST101=1
"RTN","IBCECSA6",286,0)
 F  S IEN101=$O(^IBM(361.1,IBCNT,101,IEN101)) Q:'IEN101  D
"RTN","IBCECSA6",287,0)
 .N IB101,IBDATE,IBUSER,IBJUST,IBJUST1,IBORIG,IBDIR
"RTN","IBCECSA6",288,0)
 .S IB101=$G(^IBM(361.1,IBCNT,101,IEN101,0)) Q:IB101=""
"RTN","IBCECSA6",289,0)
 .S IBDATE=$$EXTERNAL^DILFD(361.1101,.01,,$P(IB101,U,1))
"RTN","IBCECSA6",290,0)
 .S IBUSER=$$EXTERNAL^DILFD(361.1101,.02,,$P(IB101,U,2))
"RTN","IBCECSA6",291,0)
 .S IBJUST=$E($P(IB101,U,3),1,78),IBJUST1=$E($P(IB101,U,3),79,100)
"RTN","IBCECSA6",292,0)
 .S IBORIG=$$EXTERNAL^DILFD(361.1101,.04,,$P(IB101,U,4))
"RTN","IBCECSA6",293,0)
 .S IBDIR=$$EXTERNAL^DILFD(361.1101,.05,,$P(IB101,U,5)) ; kl - added MOVE/COPY field
"RTN","IBCECSA6",294,0)
 .S:IBDIR']"" IBDIR="Move"
"RTN","IBCECSA6",295,0)
 .I FIRST101 D
"RTN","IBCECSA6",296,0)
 ..S IB=$$SETSTR^VALM1("MOVE/COPY HISTORY","",1,78),FIRST101=0
"RTN","IBCECSA6",297,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",298,0)
 .D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",299,0)
 .S IB=$$SETSTR^VALM1("Date/Time of EEOB "_IBDIR_": "_IBDATE,"",1,78)  ;kl  8/23/11
"RTN","IBCECSA6",300,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",301,0)
 .S IB=$$SETSTR^VALM1(IBDIR_" of EEOB performed by: "_IBUSER,"",1,78)  ;kl 8/23/11
"RTN","IBCECSA6",302,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",303,0)
 .S IB=$$SETSTR^VALM1(IBDIR_" Justification Comments: ","",1,78)
"RTN","IBCECSA6",304,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",305,0)
 .S IB=$$SETSTR^VALM1(IBJUST,"",1,78)
"RTN","IBCECSA6",306,0)
 .D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",307,0)
 .I IBJUST1]"" D
"RTN","IBCECSA6",308,0)
 ..S IB=$$SETSTR^VALM1(IBJUST1,"",1,78)
"RTN","IBCECSA6",309,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",310,0)
 .I IBORIG]"" D
"RTN","IBCECSA6",311,0)
 ..S IB=$$SETSTR^VALM1("Original Claim Number: "_IBORIG,"",1,78)
"RTN","IBCECSA6",312,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",313,0)
 .;Other claim numbers
"RTN","IBCECSA6",314,0)
 .N SUB,IBOTH,OTEXT
"RTN","IBCECSA6",315,0)
 .S SUB=0,OTEXT=""
"RTN","IBCECSA6",316,0)
 .F  S SUB=$O(^IBM(361.1,IBCNT,101,IEN101,1,SUB)) Q:'SUB  D
"RTN","IBCECSA6",317,0)
 ..S IBOTH=$P($G(^IBM(361.1,IBCNT,101,IEN101,1,SUB,0)),U) Q:'IBOTH
"RTN","IBCECSA6",318,0)
 ..S IBOTH=$$EXTERNAL^DILFD(361.11016,.01,,IBOTH) Q:IBOTH=""
"RTN","IBCECSA6",319,0)
 ..S OTEXT=OTEXT_","_IBOTH
"RTN","IBCECSA6",320,0)
 .S OTEXT=$P(OTEXT,",",2,99)
"RTN","IBCECSA6",321,0)
 .I OTEXT]"" D
"RTN","IBCECSA6",322,0)
 ..S IB=$$SETSTR^VALM1("Other Claims: "_OTEXT,"",1,78)
"RTN","IBCECSA6",323,0)
 ..D SET(IBSRC,IB,CNT,IBCNT)
"RTN","IBCECSA6",324,0)
 .D SET(IBSRC,"",CNT,IBCNT)
"RTN","IBCECSA6",325,0)
 Q
"RTN","IBCEF1")
0^42^B67394178^B60116186
"RTN","IBCEF1",1,0)
IBCEF1 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,124,51,137,210,155,349,371,447,547**;21-MAR-94;Build 119
"RTN","IBCEF1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF1",4,0)
 ;
"RTN","IBCEF1",5,0)
OCC(IBIFN,REL,TEXT) ;Sets up an arrays of occurrence codes for various cks
"RTN","IBCEF1",6,0)
 ;RETURNS 1^additional data for entry IBXSAVE("OCC",n) if REL or TEXT
"RTN","IBCEF1",7,0)
 ;   parameters have been met or null if conditions not met
"RTN","IBCEF1",8,0)
 ;If no REL or TEXT parameters sent, just extract codes array
"RTN","IBCEF1",9,0)
 ; IBIFN = bill ien
"RTN","IBCEF1",10,0)
 ; REL = 'OCC RELATED TO' value to check for
"RTN","IBCEF1",11,0)
 ; TEXT = text to check for the .01 field of 399.1 entry pointed to
"RTN","IBCEF1",12,0)
 ;         by the occurrence code
"RTN","IBCEF1",13,0)
 N OCC,SORT,ARR,N,DATA,CODE,CT
"RTN","IBCEF1",14,0)
 I '$D(IBXSAVE("OCC")),'$D(IBXSAVE("OCCS")) D
"RTN","IBCEF1",15,0)
 .N IBI,Z,CT1,CT2,Z0 S (IBI,CT1,CT2)=0
"RTN","IBCEF1",16,0)
 .F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S Z=$G(^(IBI,0)) D
"RTN","IBCEF1",17,0)
 ..S Z0=$G(^DGCR(399.1,+Z,0))
"RTN","IBCEF1",18,0)
 ..Q:'$P(Z0,U,10)&'$P(Z0,U,4)  ;Not an occurrence code
"RTN","IBCEF1",19,0)
 ..I $P(Z0,U,10) S CT2=CT2+1,IBXSAVE("OCCS",CT2)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_$P(Z,U,4)_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",20,0)
 ..I '$P(Z0,U,10) S CT1=CT1+1,IBXSAVE("OCC",CT1)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",21,0)
 I '$D(IBXSAVE("OCC"))&'$D(IBXSAVE("OCCS")) S IBXSAVE("OCC")="" G OCCQ
"RTN","IBCEF1",22,0)
 ;
"RTN","IBCEF1",23,0)
 ; esg - IB*2*349 - order the occurrence codes
"RTN","IBCEF1",24,0)
 ;       Build the SORT array sorted by the occ code
"RTN","IBCEF1",25,0)
 F ARR="OCC","OCCS" S N=0 F  S N=$O(IBXSAVE(ARR,N)) Q:'N  S DATA=$G(IBXSAVE(ARR,N)) I $P(DATA,U,1)'="" S CODE=" "_$P(DATA,U,1),SORT(ARR,CODE,N)=DATA
"RTN","IBCEF1",26,0)
 ;       Loop thru the SORT array and re-build the IBXSAVE array
"RTN","IBCEF1",27,0)
 F ARR="OCC","OCCS" K IBXSAVE(ARR) S CODE="",CT=0 F  S CODE=$O(SORT(ARR,CODE)) Q:CODE=""  S N=0 F  S N=$O(SORT(ARR,CODE,N)) Q:'N  S CT=CT+1,IBXSAVE(ARR,CT)=SORT(ARR,CODE,N)
"RTN","IBCEF1",28,0)
 ;
"RTN","IBCEF1",29,0)
 I $G(REL)'=""!($G(TEXT)'="") D OCC1("",.OCC,$G(REL),$G(TEXT)) D:'$D(OCC) OCC1("S",.OCC,$G(REL),$G(TEXT))
"RTN","IBCEF1",30,0)
OCCQ Q $G(OCC)
"RTN","IBCEF1",31,0)
 ;
"RTN","IBCEF1",32,0)
OCC1(ARR,OCC,REL,TEXT) ; Search thru local array for parameters met
"RTN","IBCEF1",33,0)
 ; ARR = null to search OCC subscript, "S" to search OCCS subscript
"RTN","IBCEF1",34,0)
 N Z
"RTN","IBCEF1",35,0)
 S ARR="OCC"_ARR,Z=0
"RTN","IBCEF1",36,0)
 F  S Z=$O(IBXSAVE(ARR,Z)) Q:'Z  D
"RTN","IBCEF1",37,0)
 .I $G(REL)'="",$P(IBXSAVE(ARR,Z),U,5)=REL S OCC="1"_$S(REL=2:U_$P(IBXSAVE(ARR,Z),U,6),1:"") Q
"RTN","IBCEF1",38,0)
 .I $G(TEXT)'="",$P(IBXSAVE(ARR,Z),U,4)=TEXT S OCC="1^"_$P(IBXSAVE(ARR,Z),U,7)
"RTN","IBCEF1",39,0)
 Q
"RTN","IBCEF1",40,0)
 ;
"RTN","IBCEF1",41,0)
RX(IBIFN) ; Format billable prescription data for refills for 837
"RTN","IBCEF1",42,0)
 N Z,IBXDATA,CT
"RTN","IBCEF1",43,0)
 I '$D(IBXSAVE("BOX24")) D B24^IBCEF3(.IBXSAVE,IBIFN,1)
"RTN","IBCEF1",44,0)
 S Z="",CT=0
"RTN","IBCEF1",45,0)
 F  S Z=$O(IBXSAVE("BOX24",Z)) Q:Z=""  I $D(IBXSAVE("BOX24",Z,"RX")) S CT=CT+1,IBXDATA(Z)=IBXSAVE("BOX24",Z,"RX")
"RTN","IBCEF1",46,0)
RXQ Q CT
"RTN","IBCEF1",47,0)
 ;
"RTN","IBCEF1",48,0)
OTHPAY(IBIFN,SEQ) ; Return the other insurance payment amount for bill
"RTN","IBCEF1",49,0)
 ;  IBIFN and payer sequence SEQ (1-3)
"RTN","IBCEF1",50,0)
 N AMT,IBIFN1,PRP
"RTN","IBCEF1",51,0)
 S IBIFN1=$P($G(^DGCR(399,IBIFN,"M1")),U,SEQ+4),PRP=0
"RTN","IBCEF1",52,0)
 I IBIFN1 D
"RTN","IBCEF1",53,0)
 . ; IB*2.0*547 if Medicare on bill, make sure you are pulling amt paid from correct sequence
"RTN","IBCEF1",54,0)
 . ; code was leaving out MRA amt on tertiary bills and cloned secondary where MRA claim# does NOT match current claim#
"RTN","IBCEF1",55,0)
 . ;I $$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBIFN,"I"_SEQ))) S AMT=$$MCRPAY^IBCEU0(IBIFN) Q
"RTN","IBCEF1",56,0)
 . I $$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBIFN,"I"_SEQ))) S AMT=$$MCRPAY^IBCEU0(IBIFN1),PRP=1 Q
"RTN","IBCEF1",57,0)
 . S AMT=+$$TPR^PRCAFN(IBIFN1) I AMT S PRP=1 Q  ; A/R amount
"RTN","IBCEF1",58,0)
 . ; IB*2.0*547 - moved this line because it was not getting executed if IBIFN1 was not defined, which it won't be for 
"RTN","IBCEF1",59,0)
 . ; manually created secondary and tertiary claims.  Using new flag PRP to indicate if prior payment already found.
"RTN","IBCEF1",60,0)
 . ; S AMT=+$P($G(^DGCR(399,IBIFN,"U2")),U,SEQ+3) ; amount on bill
"RTN","IBCEF1",61,0)
 S:PRP=0 AMT=+$P($G(^DGCR(399,IBIFN,"U2")),U,SEQ+3) ; amount on bill
"RTN","IBCEF1",62,0)
 Q $G(AMT)
"RTN","IBCEF1",63,0)
 ;
"RTN","IBCEF1",64,0)
OUTPT(IBIFN,IBPRINT) ; Moved for space
"RTN","IBCEF1",65,0)
 D OUTPT^IBCEF11(IBIFN,$G(IBPRINT))
"RTN","IBCEF1",66,0)
 Q
"RTN","IBCEF1",67,0)
 ;
"RTN","IBCEF1",68,0)
OCC92 ;Reformats IBXSAVE("OCC") and IBXSAVE("OCCS") to fit blocks on UB-04
"RTN","IBCEF1",69,0)
 ; Set up IBXSAVE(32-36) arrays
"RTN","IBCEF1",70,0)
 N IBPG,IB32,IB33,IB34,IB35,IB36,IBFL,Z,Z0,PG
"RTN","IBCEF1",71,0)
 S IBPG=0
"RTN","IBCEF1",72,0)
 F Z=32:1:36 K IBFL(Z) S IBFL(Z)=0
"RTN","IBCEF1",73,0)
 M IB32=IBXSAVE("OCC"),IB36=IBXSAVE("OCCS")
"RTN","IBCEF1",74,0)
 S IB32=$O(IB32(""),-1),IB36=$O(IB36(""),-1),PG=1
"RTN","IBCEF1",75,0)
 D OCC^IBCF32
"RTN","IBCEF1",76,0)
 F Z=32:1:36 S Z0="" F  S Z0=$O(IBFL(Z,Z0)) Q:'Z0  S IBXSAVE("OC92",Z,Z0)=$P(IBFL(Z,Z0),U,1,3)
"RTN","IBCEF1",77,0)
 Q
"RTN","IBCEF1",78,0)
 ;
"RTN","IBCEF1",79,0)
BATCH() ; Moved for space IB*2*349
"RTN","IBCEF1",80,0)
 Q $$BATCH^IBCEF11()
"RTN","IBCEF1",81,0)
 ;
"RTN","IBCEF1",82,0)
PROC(T,TYPE) ; Find procedure code, strip '.' Function returns result
"RTN","IBCEF1",83,0)
 ; T = Procedure internal entry #;file reference
"RTN","IBCEF1",84,0)
 ; TYPE = "CPT" for only CPT/HCPCS valid
"RTN","IBCEF1",85,0)
 ;        "ICD" for only ICD9 valid or null for either
"RTN","IBCEF1",86,0)
 N Q,S
"RTN","IBCEF1",87,0)
 S Q="",S="^"_$P($P(T,";",2),"(")
"RTN","IBCEF1",88,0)
 I $G(TYPE)="" D
"RTN","IBCEF1",89,0)
 . I $E(S,2,3)="IC" S Q=$P($$PRCD(T),U) Q
"RTN","IBCEF1",90,0)
 . I T["DIC(81.3" S Q=$$MOD^ICPTMOD(+T,"I") S Q=$S(Q>0:$P(Q,U,4),1:"")
"RTN","IBCEF1",91,0)
 I $G(TYPE)="CPT",$E(S,2,3)="IC" S Q=$$PRCD(T) Q
"RTN","IBCEF1",92,0)
 I $G(TYPE)="ICD",T["ICD0" S Q=$P($$ICD0^IBACSV(+T),U)
"RTN","IBCEF1",93,0)
 Q $TR(Q,".")
"RTN","IBCEF1",94,0)
 ;
"RTN","IBCEF1",95,0)
FACILITY(IBIFN) ;return the Facility (Institution pointer-#4) for a bill
"RTN","IBCEF1",96,0)
 ; the institution of the Bill Division (399,.22) if defined, otherwise the Facility Name (350.9,.02)
"RTN","IBCEF1",97,0)
 ;
"RTN","IBCEF1",98,0)
 N IB0,IBIN S IBIN=0
"RTN","IBCEF1",99,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I +$P(IB0,U,22) S IBIN=$$SITE^VASITE(+$P(IB0,U,3),+$P(IB0,U,22))
"RTN","IBCEF1",100,0)
 I IBIN'>0 S IBIN=+$P($G(^IBE(350.9,1,0)),U,2)
"RTN","IBCEF1",101,0)
 Q +IBIN
"RTN","IBCEF1",102,0)
 ;
"RTN","IBCEF1",103,0)
ISRX(IBIFN) ; Function to determine if bill is a prescription refill bill
"RTN","IBCEF1",104,0)
 ; Returns 0 if no Rx on bill or 1 if there is.
"RTN","IBCEF1",105,0)
 ;
"RTN","IBCEF1",106,0)
 N IBRX
"RTN","IBCEF1",107,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN)) S IBRX=1
"RTN","IBCEF1",108,0)
 Q +$G(IBRX)
"RTN","IBCEF1",109,0)
 ;
"RTN","IBCEF1",110,0)
ISPROS(IBIFN) ; Function to determine if bill is a prosthetics bill
"RTN","IBCEF1",111,0)
 ; Returns 0 if no Prosthetics on bill or 1 if there is.
"RTN","IBCEF1",112,0)
 ;
"RTN","IBCEF1",113,0)
 N IBPROS
"RTN","IBCEF1",114,0)
 I $D(^IBA(362.5,"AIFN"_IBIFN)) S IBPROS=1
"RTN","IBCEF1",115,0)
 Q +$G(IBPROS)
"RTN","IBCEF1",116,0)
 ;
"RTN","IBCEF1",117,0)
FINDINS(IBIFN,IBSEQ) ; Returns the internal entry number of the insurance
"RTN","IBCEF1",118,0)
 ;  company for bill ien IBIFN for payer sequence IBSEQ (or current if
"RTN","IBCEF1",119,0)
 ;  IBSEQ is null)
"RTN","IBCEF1",120,0)
 Q $P($G(^DGCR(399,IBIFN,"I"_$$COBN^IBCEF(IBIFN,$G(IBSEQ)))),U)
"RTN","IBCEF1",121,0)
 ;
"RTN","IBCEF1",122,0)
TOB(IBIFN) ; Returns UB-04 type of bill from data in the output formatter
"RTN","IBCEF1",123,0)
 N IBTOB,IBZ1,IBZ2,IBZ3
"RTN","IBCEF1",124,0)
 D F^IBCEF("N-UB-04 LOCATION OF CARE","IBZ1",,IBIFN)
"RTN","IBCEF1",125,0)
 D F^IBCEF("N-UB-04 BILL CLASSIFICATION","IBZ2",,IBIFN)
"RTN","IBCEF1",126,0)
 D F^IBCEF("N-UB-04 TIMEFRAME OF BILL","IBZ3",,IBIFN)
"RTN","IBCEF1",127,0)
 S IBTOB=IBZ1_IBZ2_IBZ3
"RTN","IBCEF1",128,0)
 Q IBTOB
"RTN","IBCEF1",129,0)
 ;
"RTN","IBCEF1",130,0)
PRCD(PRIEN,ALL,EDT) ; Function returns the code that corresponds to the variable
"RTN","IBCEF1",131,0)
 ; pointer data in PRIEN (ien;file)
"RTN","IBCEF1",132,0)
 ; ALL = if ALL=1, returns the entire $$CPT^ICPTCOD for CPT or
"RTN","IBCEF1",133,0)
 ;       ^code^name format for ICD result
"RTN","IBCEF1",134,0)
 ;       or null if lookup fails
"RTN","IBCEF1",135,0)
 ; EDT = Effective date to check (not used if +$G(ALL)=0)
"RTN","IBCEF1",136,0)
 N CODE,IBX
"RTN","IBCEF1",137,0)
 S CODE=""
"RTN","IBCEF1",138,0)
 ;Modified for Code Set Versioning
"RTN","IBCEF1",139,0)
 I PRIEN["ICPT" S IBX=$$CPT^ICPTCOD(+PRIEN,$G(EDT)) G:IBX'>0 PRCDQ S CODE=$S($G(ALL):IBX,1:$P(IBX,U,2))
"RTN","IBCEF1",140,0)
 I PRIEN["ICD0" S IBX=$$ICD0^IBACSV(+PRIEN,$G(EDT)) G:IBX="" PRCDQ S CODE=$S($G(ALL):U_$P(IBX,U)_U_$P(IBX,U,4),1:$P(IBX,U))
"RTN","IBCEF1",141,0)
PRCDQ Q CODE
"RTN","IBCEF1",142,0)
 ;
"RTN","IBCEF1",143,0)
NFT(FT,IBIFN) ; Returns 1 if bill IBIFN is not of form type FT (internal)
"RTN","IBCEF1",144,0)
 ; so the data element should not be required
"RTN","IBCEF1",145,0)
 S FT=$S($$FT^IBCEF(IBIFN)=FT:0,1:1)
"RTN","IBCEF1",146,0)
 Q FT
"RTN","IBCEF1",147,0)
 ;
"RTN","IBCEF1",148,0)
REQ(FT,INP,IBIFN) ; Determine if bill IBIFN is of form type FT and
"RTN","IBCEF1",149,0)
 ; Inpatient (I) or Outpatient (O) status INP [or either if (null)] 
"RTN","IBCEF1",150,0)
 ;
"RTN","IBCEF1",151,0)
 ;Returns 1 if both conditions FT and INP match for the bill
"RTN","IBCEF1",152,0)
 ; or 0 if either of these conditions are not true
"RTN","IBCEF1",153,0)
 ; I $$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is
"RTN","IBCEF1",154,0)
 ;                         CMS-1500/inpatient the data would be required
"RTN","IBCEF1",155,0)
 ; I '$$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is anything but
"RTN","IBCEF1",156,0)
 ;                          CMS-1500/inpatient, the data would not be
"RTN","IBCEF1",157,0)
 ;                          required
"RTN","IBCEF1",158,0)
 N Z
"RTN","IBCEF1",159,0)
 S Z=1
"RTN","IBCEF1",160,0)
 S:$$NFT(FT,IBIFN) Z=0 ; Not the form type for requirement
"RTN","IBCEF1",161,0)
 I Z,$G(INP)'="" D
"RTN","IBCEF1",162,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),INP=$G(INP)
"RTN","IBCEF1",163,0)
 . S Z=$S(Z0:INP="I",1:INP="O") ;Check if I/O matches required state
"RTN","IBCEF1",164,0)
 Q Z
"RTN","IBCEF1",165,0)
 ;
"RTN","IBCEF1",166,0)
SET1(IBIFN,A,IBZ,IBXDATA,IBXNOREQ) ; Utility to set variables for output
"RTN","IBCEF1",167,0)
 ; formatter for professional EDI 
"RTN","IBCEF1",168,0)
 ; Returns values of A, IBXDATA, IBZ, IBXNOREQ
"RTN","IBCEF1",169,0)
 N Z,CT
"RTN","IBCEF1",170,0)
 S A="^TMP($J,""IBLCT"")"
"RTN","IBCEF1",171,0)
 S (Z,CT)=0
"RTN","IBCEF1",172,0)
 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  ; Don't transmit 0-charges
"RTN","IBCEF1",173,0)
 . ;IB*2.0*447/TAZ - Transmit $0 charges.
"RTN","IBCEF1",174,0)
 . ;I $P(IBXDATA(Z),U,9),$P(IBXDATA(Z),U,8) S CT=CT+1 M IBZ(CT)=IBXDATA(Z)
"RTN","IBCEF1",175,0)
 . I $P(IBXDATA(Z),U,9) S CT=CT+1 M IBZ(CT)=IBXDATA(Z)
"RTN","IBCEF1",176,0)
 . ;IB*2.0*447
"RTN","IBCEF1",177,0)
 K IBXDATA
"RTN","IBCEF1",178,0)
 S IBXNOREQ='$$REQ(2,"O",IBIFN)
"RTN","IBCEF1",179,0)
 Q
"RTN","IBCEF1",180,0)
 ;
"RTN","IBCEF1",181,0)
CIADDR(IBXDATA,IBXSAVE,LINE,FORM) ; Format current ins co address line LINE for FORM
"RTN","IBCEF1",182,0)
 ; FORM = 1 for CMS-1500, 2 for UB-04
"RTN","IBCEF1",183,0)
 ; Called from output formatter - both IBXDATA, IBXSAVE parameters are
"RTN","IBCEF1",184,0)
 ;  passed by reference
"RTN","IBCEF1",185,0)
 ;
"RTN","IBCEF1",186,0)
 K IBXDATA
"RTN","IBCEF1",187,0)
 I $G(FORM)'=1 D
"RTN","IBCEF1",188,0)
 . ;
"RTN","IBCEF1",189,0)
 . ; esg - 11/17/06 - IB*2*349 - UB-04 FL-38 contains the payer name
"RTN","IBCEF1",190,0)
 . ;       and address on 4 lines within this 5 line box.  All 5 lines
"RTN","IBCEF1",191,0)
 . ;       are formatted here into the IBXDATA array.  This is the
"RTN","IBCEF1",192,0)
 . ;       address that shows through the envelope window.
"RTN","IBCEF1",193,0)
 . ;
"RTN","IBCEF1",194,0)
 . ; esg - 9/13/07 - IB*2*371 - Line 1 of this box contains the print
"RTN","IBCEF1",195,0)
 . ;       status (i.e. copy, 2nd notice, 3rd notice, MRA needed).
"RTN","IBCEF1",196,0)
 . ;
"RTN","IBCEF1",197,0)
 . N Z,Z1,LM,Q,ADDR,X,IBPSTAT
"RTN","IBCEF1",198,0)
 . S LM=$P($G(^IBE(350.9,1,1)),U,31)   ; UB address column parameter
"RTN","IBCEF1",199,0)
 . S Z=""
"RTN","IBCEF1",200,0)
 . I LM S $P(Z," ",LM)=""              ; beginning spaces indent
"RTN","IBCEF1",201,0)
 . S ADDR=$G(IBXSAVE("CADR"))          ; address data string
"RTN","IBCEF1",202,0)
 . ;
"RTN","IBCEF1",203,0)
 . D F^IBCEF("N-PRINT BILL SUBMIT STATUS","IBPSTAT",,+$G(IBXIEN))
"RTN","IBCEF1",204,0)
 . S Z1=Z I Z1="" S Z1=" "     ; line 1 can't start in column 1
"RTN","IBCEF1",205,0)
 . S IBXDATA(1)=Z1_$G(IBPSTAT),Q=1             ; line 1 print status
"RTN","IBCEF1",206,0)
 . S Q=Q+1
"RTN","IBCEF1",207,0)
 . S IBXDATA(Q)=Z_$G(IBXSAVE("CADR_NAME"))     ; line 2 payer name
"RTN","IBCEF1",208,0)
 . S X=$P(ADDR,U,1)
"RTN","IBCEF1",209,0)
 . I X'="" S Q=Q+1,IBXDATA(Q)=Z_X              ; address line 1
"RTN","IBCEF1",210,0)
 . S X=$P(ADDR,U,2)
"RTN","IBCEF1",211,0)
 . I X'="" S Q=Q+1,IBXDATA(Q)=Z_X D            ; address line 2
"RTN","IBCEF1",212,0)
 .. S X=$P(ADDR,U,3)
"RTN","IBCEF1",213,0)
 .. I X'="" S IBXDATA(Q)=IBXDATA(Q)_" "_X      ; address line 3
"RTN","IBCEF1",214,0)
 .. Q
"RTN","IBCEF1",215,0)
 . S Q=Q+1                                     ; city,st,zip on last line
"RTN","IBCEF1",216,0)
 . S IBXDATA(Q)=Z_$P(ADDR,U,4)_", "_$$STATE^IBCEFG1($P(ADDR,U,5))_" "_$P(ADDR,U,6)
"RTN","IBCEF1",217,0)
 . KILL IBXSAVE("CADR_NAME"),IBXSAVE("CADR")   ; cleanup
"RTN","IBCEF1",218,0)
 . Q
"RTN","IBCEF1",219,0)
 ;
"RTN","IBCEF1",220,0)
 I $G(FORM)=1 D           ; CMS-1500
"RTN","IBCEF1",221,0)
 . N CT,X,Z
"RTN","IBCEF1",222,0)
 . S:'$D(IBXSAVE("INDENT")) Z="",$P(Z," ",+$P($G(^IBE(350.9,1,1)),U,27)+1)="",IBXSAVE("INDENT")=Z
"RTN","IBCEF1",223,0)
 . S CT=0
"RTN","IBCEF1",224,0)
 . S X=$P(IBXSAVE("CADR"),U) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",225,0)
 . S X=$S($P(IBXSAVE("CADR"),U,2)'="":$P(IBXSAVE("CADR"),U,2),1:"")_$S($P(IBXSAVE("CADR"),U,2)'="":" ",1:"")_$P(IBXSAVE("CADR"),U,3) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",226,0)
 . S CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_$P(IBXSAVE("CADR"),U,4)_", "_$$STATE^IBCEFG1($P(IBXSAVE("CADR"),U,5))_" "_$P(IBXSAVE("CADR"),U,6)
"RTN","IBCEF1",227,0)
 . Q
"RTN","IBCEF1",228,0)
 ;
"RTN","IBCEF1",229,0)
 Q
"RTN","IBCEF1",230,0)
 ;
"RTN","IBCEF2")
0^11^B78152141^B68782434
"RTN","IBCEF2",1,0)
IBCEF2 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;8/6/03 10:54am
"RTN","IBCEF2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,85,51,137,232,155,296,349,403,400,432,488,461,547**;21-MAR-94;Build 119
"RTN","IBCEF2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEF2",4,0)
 ;
"RTN","IBCEF2",5,0)
HOS(IBIFN) ; Extract rev codes for inst. episode into IBXDATA
"RTN","IBCEF2",6,0)
 ; Moved for space
"RTN","IBCEF2",7,0)
 D HOS^IBCEF22(IBIFN)
"RTN","IBCEF2",8,0)
 Q
"RTN","IBCEF2",9,0)
 ;
"RTN","IBCEF2",10,0)
OTHINS(IBIFN) ;Determine 'other insurance' node (I1,I2)
"RTN","IBCEF2",11,0)
 ; If primary bill, other ins is secondary
"RTN","IBCEF2",12,0)
 ; If sec or tert bill, other ins is primary
"RTN","IBCEF2",13,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",14,0)
 N Z
"RTN","IBCEF2",15,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",16,0)
 Q "I"_$S(Z=1:2,1:1)
"RTN","IBCEF2",17,0)
 ;
"RTN","IBCEF2",18,0)
OTHINS1(IBIFN) ; Returns the COB #'s of all 'other insurance' as a string
"RTN","IBCEF2",19,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",20,0)
 N IBC,Z
"RTN","IBCEF2",21,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",22,0)
 I Z=1 S IBC=$S($D(^DGCR(399,IBIFN,"I2")):$S($D(^DGCR(399,IBIFN,"I3")):23,1:2),1:"") ;Primary=>2 or 23
"RTN","IBCEF2",23,0)
 I Z=2 S IBC="1"_$S($D(^DGCR(399,IBIFN,"I3")):3,1:"") ;Secondary=>1 or 13
"RTN","IBCEF2",24,0)
 I Z=3 S IBC="12" ;Tertiary =>12
"RTN","IBCEF2",25,0)
OTHQ Q IBC
"RTN","IBCEF2",26,0)
 ;
"RTN","IBCEF2",27,0)
RECVR(IBIFN) ; Returns the V.A. internal routing id of the current ins
"RTN","IBCEF2",28,0)
 ; co for 837
"RTN","IBCEF2",29,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",30,0)
 N MCR,NUM,IBPH
"RTN","IBCEF2",31,0)
 S IBPH=$P("P^H",U,$$FT^IBCEF(IBIFN)-1)
"RTN","IBCEF2",32,0)
 S NUM="ENVOY"_IBPH
"RTN","IBCEF2",33,0)
 ; If rate type is CHAMPVA, send 'CHAMVA'
"RTN","IBCEF2",34,0)
 I $P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U)="CHAMPVA" S NUM="CHAMV"_IBPH
"RTN","IBCEF2",35,0)
 I NUM["ENVOY",$$MCRWNR^IBEFUNC(+$$CURR(IBIFN)) D
"RTN","IBCEF2",36,0)
 . S MCR=$P("B^A",U,$$FT^IBCEF(IBIFN)-1)    ; PART A/B for MEDICARE
"RTN","IBCEF2",37,0)
 . S NUM="PART"_MCR
"RTN","IBCEF2",38,0)
 Q NUM
"RTN","IBCEF2",39,0)
 ;
"RTN","IBCEF2",40,0)
ALLPAYID(IBIFN,IBXDATA,SEQ) ; Returns clearinghouse id for all (SEQ="")
"RTN","IBCEF2",41,0)
 ;  or a specific (SEQ=1,2,3) ins co's for 837 in IBXDATA(n) for bill ien
"RTN","IBCEF2",42,0)
 ;  IBIFN
"RTN","IBCEF2",43,0)
 ; EJK *296* Add IBMRA - MRA Claim type. 
"RTN","IBCEF2",44,0)
 ; EJK *296* Add IBEBI - Electronic Billing ID
"RTN","IBCEF2",45,0)
 ;
"RTN","IBCEF2",46,0)
 ;WCJ;IB*2.0*547 - added IBM2
"RTN","IBCEF2",47,0)
 ;N Z,Z0,Z1,A,IBM,IBINST,IBMCR,IBX,IBMRA,IBEBI
"RTN","IBCEF2",48,0)
 N Z,Z0,Z1,A,IBM,IBM2,IBINST,IBMCR,IBX,IBMRA,IBEBI
"RTN","IBCEF2",49,0)
 ;S IBXDATA="",IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCEF2",50,0)
 S IBXDATA="",IBM=$G(^DGCR(399,IBIFN,"M")),IBM2=$G(^DGCR(399,IBIFN,"M2"))
"RTN","IBCEF2",51,0)
 F Z=1:1:3 I $S('$G(SEQ):1,1:Z=SEQ) S Z0=$P(IBM,U,Z) I Z0 D  S:A'="" IBXDATA(Z)=A
"RTN","IBCEF2",52,0)
 . S A=""
"RTN","IBCEF2",53,0)
 . ;WCJ;IB*2.0*547
"RTN","IBCEF2",54,0)
 . I $P(IBM2,U,Z*2)]"" S A=$P(IBM2,U,Z*2) Q  ; grab new alternate payer IDs from bill if they exist
"RTN","IBCEF2",55,0)
 . ;
"RTN","IBCEF2",56,0)
 . S IBINST=($$FT^IBCEF(IBIFN)=3) ;Is bill UB-04?
"RTN","IBCEF2",57,0)
 . ; EJK *296* Get IBEBI based on Prof. or Inst. claim
"RTN","IBCEF2",58,0)
 . I IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,4)
"RTN","IBCEF2",59,0)
 . I 'IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,2)
"RTN","IBCEF2",60,0)
 . S IBEBI=$$UP^XLFSTR(IBEBI)
"RTN","IBCEF2",61,0)
 . ; EJK *296* If this is a Medicare claim, it may be printed or transmitted. 
"RTN","IBCEF2",62,0)
 . S IBMRA=$$MRASEC^IBCEF4(IBIFN)   ;Is claim 2ndary to an MRA? 
"RTN","IBCEF2",63,0)
 . S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN),Z1=$G(^DGCR(399,IBIFN,"TX"))
"RTN","IBCEF2",64,0)
 . Q:$P(Z1,U,8)=1!$S('$P(Z1,U,9):0,1:$$MRASEC^IBCEF4(IBIFN))  ;Force local prnt
"RTN","IBCEF2",65,0)
 . S A=$S($P(Z1,U,8)'=2:$P($G(^DIC(36,Z0,3)),U,$S(IBINST:4,1:2)),1:"")
"RTN","IBCEF2",66,0)
 . S A=$$UP^XLFSTR(A)
"RTN","IBCEF2",67,0)
 . ;
"RTN","IBCEF2",68,0)
 . ; RPRNT = CMS-1500 Rx bills
"RTN","IBCEF2",69,0)
 . ; IPRNT = Inst MRA secondary claims
"RTN","IBCEF2",70,0)
 . ; PPRNT = Prof MRA secondary claims
"RTN","IBCEF2",71,0)
 . ; HPRNT = inst printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",72,0)
 . ; SPRNT = prof printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",73,0)
 . ;
"RTN","IBCEF2",74,0)
 . ; Default to appropriate 'xPRNT' if Rx bill or COB bill or forced to
"RTN","IBCEF2",75,0)
 . ;    print - claims must print at clearinghouse
"RTN","IBCEF2",76,0)
 . ;
"RTN","IBCEF2",77,0)
 . ; Rx bills on CMS-1500
"RTN","IBCEF2",78,0)
 . ;IB*2.0*432/TAZ Claims no longer print at clearinghouse
"RTN","IBCEF2",79,0)
 . ;I 'IBINST,$$ISRX^IBCEF1(IBIFN) S A="RPRNT" Q
"RTN","IBCEF2",80,0)
 . ;
"RTN","IBCEF2",81,0)
 . ; Claim forced to print at clearinghouse (Field #27)
"RTN","IBCEF2",82,0)
 . I $P(Z1,U,8)=2 S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",83,0)
 . ;
"RTN","IBCEF2",84,0)
 . ; EJK *296* Send IBEBI for MRA secondary claims if it exists
"RTN","IBCEF2",85,0)
 . I Z>1,IBMRA,IBEBI'="" S A=IBEBI Q
"RTN","IBCEF2",86,0)
 . ;
"RTN","IBCEF2",87,0)
 . ; MRA secondary claim
"RTN","IBCEF2",88,0)
 . I Z>1,IBMCR=1,$P(Z1,U,5)="C" S A=$S(IBINST:"I",1:"P")_"PRNT" Q
"RTN","IBCEF2",89,0)
 . ;
"RTN","IBCEF2",90,0)
 . ; Medicare is current payer (MRA request claim)
"RTN","IBCEF2",91,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,Z) S A=$S(IBINST:"12M61",1:"SMTX1") Q
"RTN","IBCEF2",92,0)
 . ;
"RTN","IBCEF2",93,0)
 . ; IB*296 - Do not modify the payer ID for CHAMPVA (HAC)
"RTN","IBCEF2",94,0)
 . I A=84146 Q
"RTN","IBCEF2",95,0)
 . I A=84147 Q
"RTN","IBCEF2",96,0)
 . ;
"RTN","IBCEF2",97,0)
 . ; If not a primary bill force to print
"RTN","IBCEF2",98,0)
 . ;IB*2.0*432/TAZ secondary bills will now be processed
"RTN","IBCEF2",99,0)
 . ;I Z>1,Z=$$COBN^IBCEF(IBIFN) S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",100,0)
 . Q
"RTN","IBCEF2",101,0)
 ;
"RTN","IBCEF2",102,0)
 Q
"RTN","IBCEF2",103,0)
 ;
"RTN","IBCEF2",104,0)
PAYERID(IBIFN) ; Returns clearinghouse id for current ins co
"RTN","IBCEF2",105,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",106,0)
 N NUM,IBSEQ
"RTN","IBCEF2",107,0)
 ; Determine the current ins co's # to identify at WEBMD
"RTN","IBCEF2",108,0)
 ; Envoy changed to WEBMD in patch 232
"RTN","IBCEF2",109,0)
 S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",110,0)
 D ALLPAYID(IBIFN,.NUM,IBSEQ) S NUM=$G(NUM(IBSEQ))
"RTN","IBCEF2",111,0)
 Q $G(NUM)
"RTN","IBCEF2",112,0)
 ;
"RTN","IBCEF2",113,0)
CURR(IBIFN) ; Returns ien of the current insurance
"RTN","IBCEF2",114,0)
 ; company for bill ien IBIFN
"RTN","IBCEF2",115,0)
 Q $$FINDINS^IBCEF1(IBIFN)
"RTN","IBCEF2",116,0)
 ;
"RTN","IBCEF2",117,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF2",118,0)
 D ADMDT^IBCEF21(IBIFN,$G(NOOUTCK))      ; Moved for space
"RTN","IBCEF2",119,0)
 Q
"RTN","IBCEF2",120,0)
 ;
"RTN","IBCEF2",121,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF2",122,0)
 D DISDT^IBCEF21(IBIFN)                  ; Moved for space
"RTN","IBCEF2",123,0)
 Q
"RTN","IBCEF2",124,0)
 ;
"RTN","IBCEF2",125,0)
INDTS(IBIFN) ; Function returns the admit ^ discharge date/time of admission if patient is an inpatient on bill's event date
"RTN","IBCEF2",126,0)
 N Z,Z0,DFN,VAINDT,VAIN S Z0=""
"RTN","IBCEF2",127,0)
 S Z=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(Z,U,2),VAINDT=$P(Z,U,3)
"RTN","IBCEF2",128,0)
 I +DFN,+VAINDT D INP^VADPT I +VAIN(1) S Z0=+VAIN(7)_U_+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF2",129,0)
 Q Z0
"RTN","IBCEF2",130,0)
 ;
"RTN","IBCEF2",131,0)
TXMT(IBIFN) ; Function moved - use new call in IBCEF4
"RTN","IBCEF2",132,0)
 Q $$TXMT^IBCEF4(IBIFN)
"RTN","IBCEF2",133,0)
 ;
"RTN","IBCEF2",134,0)
 ;
"RTN","IBCEF2",135,0)
ID(LN,VAL) ; Set EXTRACT GLOBAL for multi-valued record
"RTN","IBCEF2",136,0)
 ; ids for Austin
"RTN","IBCEF2",137,0)
 ; LN = the line # being extracted
"RTN","IBCEF2",138,0)
 ; VAL = the value of the element being extracted
"RTN","IBCEF2",139,0)
 ;
"RTN","IBCEF2",140,0)
 ; Assumes IBXPG exists
"RTN","IBCEF2",141,0)
 ;
"RTN","IBCEF2",142,0)
 Q:LN<2
"RTN","IBCEF2",143,0)
 D SETGBL^IBCEFG(IBXPG,LN,1,VAL,.IBXSIZE)
"RTN","IBCEF2",144,0)
 Q
"RTN","IBCEF2",145,0)
 ;
"RTN","IBCEF2",146,0)
ID1(LN,DX,CT,DCT,ECT) ;Special entry point for diagnoses to 'save' the fact
"RTN","IBCEF2",147,0)
 ;   a dx code is an e-code.
"RTN","IBCEF2",148,0)
 ; LN is last entry # output, returned as the entry # (IBXLINE) to assign to this entry
"RTN","IBCEF2",149,0)
 ; DX = the actual Dx code array(RECORD ID). Pass by reference, DX returned null if
"RTN","IBCEF2",150,0)
 ;      dx was not output
"RTN","IBCEF2",151,0)
 ; CT = the ct on the 'DC' entry.  pass by reference, returned null if
"RTN","IBCEF2",152,0)
 ;      the end of the valid dx codes has been reached
"RTN","IBCEF2",153,0)
 ; DCT= Count of regular DX codes. UB-04 can have 25 non External Cause codes.
"RTN","IBCEF2",154,0)
 ; ECT= Count of External Cause codes. UB-04 can have 12 External Cause codes.
"RTN","IBCEF2",155,0)
 ; External Cause of Injury codes and qualifier changed with ICD-10: E-codes in ICD-9, V,X,W,Y-codes in ICD-10
"RTN","IBCEF2",156,0)
 N IBINS,VAL,CNT,DXIEN,DXQ,EDX,I,POA,ICDV
"RTN","IBCEF2",157,0)
 S IBINS=($$FT^IBCEF(IBXIEN)=3)
"RTN","IBCEF2",158,0)
 S VAL="DC"_CT
"RTN","IBCEF2",159,0)
 S VAL=$E(VAL_" ",1,4)
"RTN","IBCEF2",160,0)
 S DCT=+$G(DCT),ECT=+$G(ECT) ;Make sure variables are initialized.
"RTN","IBCEF2",161,0)
 ;
"RTN","IBCEF2",162,0)
 S EDX=0,DX=$G(DX)
"RTN","IBCEF2",163,0)
 S ICDV=$$ICD9VER^IBACSV(+$G(DX(CT)))
"RTN","IBCEF2",164,0)
 I ICDV=1,$E(DX)="E" S EDX=1 ; TRUE if ECI ICD-9 Dx (e-code)
"RTN","IBCEF2",165,0)
 I ICDV=30,"VWXY"[$E(DX) S EDX=1 ; TRUE if ECI ICD-10 Dx
"RTN","IBCEF2",166,0)
 ;
"RTN","IBCEF2",167,0)
 S I=$S(EDX:3,1:2)
"RTN","IBCEF2",168,0)
 ;
"RTN","IBCEF2",169,0)
 S:'EDX DXQ=$S(+$G(^TMP("DCX",$J,2))>0:"BF",1:"BK") ; first non e-code DX is principal (qualifier "BK"), the rest have qualifier "BF"
"RTN","IBCEF2",170,0)
 ;
"RTN","IBCEF2",171,0)
 I IBINS D  I DX="" G IDX1
"RTN","IBCEF2",172,0)
 .;I CT>28 S CT="" Q     ; Max of 28 codes for institutional/UB
"RTN","IBCEF2",173,0)
 .I EDX S ECT=ECT+1 I ECT>12 S DX="" Q  ;Only 12 E-codes allowed
"RTN","IBCEF2",174,0)
 .I 'EDX S DCT=DCT+1 I DCT>25 S DX="" Q  ;Only 25 DX codes allowed
"RTN","IBCEF2",175,0)
 .S DXIEN=$P(DX(CT),U,2) Q:DXIEN=""
"RTN","IBCEF2",176,0)
 .; IB*2.0*547 - no longer stuff a 1 for POA, send a blank if null
"RTN","IBCEF2",177,0)
 .S POA=$P($G(^IBA(362.3,DXIEN,0)),U,4) ; I POA="",$$INPAT^IBCEF(IBXIEN) S POA=1 ; POA indicator defaults to "1", if not present on inpatient claim
"RTN","IBCEF2",178,0)
 .S:EDX DXQ="BN" ; e-code DX qualifier
"RTN","IBCEF2",179,0)
 .Q
"RTN","IBCEF2",180,0)
 ;
"RTN","IBCEF2",181,0)
 I 'IBINS S:EDX DXQ="BF" S POA="" ; on CMS-1500 e-code DX qualifiers are "BF" and there's no POA
"RTN","IBCEF2",182,0)
 ;
"RTN","IBCEF2",183,0)
 I ICDV=30 S DXQ="A"_DXQ ; adjust Qualifier for ICD-10 codes
"RTN","IBCEF2",184,0)
 ;
"RTN","IBCEF2",185,0)
 ;Changed 8 to 12 so we can transmit 12 codes. BAA *488*
"RTN","IBCEF2",186,0)
 I 'IBINS,CT>12 S ^TMP("IBXSAVE",$J,"DX",IBXIEN)=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN))+1,^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(+^TMP("IBXSAVE",$J,"DX",IBXIEN)),U,2))=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN)) S DX="" Q
"RTN","IBCEF2",187,0)
 ;
"RTN","IBCEF2",188,0)
 I CT'="",DX'="" D
"RTN","IBCEF2",189,0)
 .; populate ^TMP("DCX") scratch global
"RTN","IBCEF2",190,0)
 .S ^TMP("DCX",$J,1)=CT,CNT=$G(^TMP("DCX",$J,I))+1,^TMP("DCX",$J,I)=CNT
"RTN","IBCEF2",191,0)
 .S (^TMP("DCX",$J,I,CNT),^TMP("DCX",$J,1,CT))=DX_U_DXQ_U_POA
"RTN","IBCEF2",192,0)
 .S LN=LN+1 D ID(LN,VAL) S ^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(LN),U,2))=LN,^TMP("IBXSAVE",$J,"DX",IBXIEN)=CT,CT=CT+1
"RTN","IBCEF2",193,0)
 .Q
"RTN","IBCEF2",194,0)
 ;
"RTN","IBCEF2",195,0)
IDX1 ;
"RTN","IBCEF2",196,0)
 Q
"RTN","IBCEF2",197,0)
 ;
"RTN","IBCEF2",198,0)
M(CT) ; Calculate multi-valued field for 837 extract
"RTN","IBCEF2",199,0)
 ; CT = passed by reference/the record ID counter
"RTN","IBCEF2",200,0)
 S CT=CT+1
"RTN","IBCEF2",201,0)
 ;IB*2.0*547/TAZ Increase counter to 25
"RTN","IBCEF2",202,0)
 ;Q $E(CT#12+$S(CT#12:0,1:12)_" ",1,2)
"RTN","IBCEF2",203,0)
 Q $E(CT#25+$S(CT#25:0,1:25)_" ",1,2)
"RTN","IBCEF2",204,0)
 ;
"RTN","IBCEF2",205,0)
SVITM(IBA,LINE) ; Saves the linked items from the bill data extract into
"RTN","IBCEF2",206,0)
 ; an array the formatter will use to link Rxs and prosthetics
"RTN","IBCEF2",207,0)
 ; to an SV1 or SV2 line item, if possible.  Kills off IBA array entries
"RTN","IBCEF2",208,0)
 ; after they are 'moved'
"RTN","IBCEF2",209,0)
 ; IBA = array that contains the data to be saved
"RTN","IBCEF2",210,0)
 ;   subscripts are (line #,item type,item pointer)=ct
"RTN","IBCEF2",211,0)
 N Z0,Z1
"RTN","IBCEF2",212,0)
 S Z0="" F  S Z0=$O(IBA("OUTPT",LINE,Z0)) Q:Z0=""  I Z0?1N.N  S Z1="" F  S Z1=$O(IBA("OUTPT",LINE,Z0,Z1)) Q:Z1=""  S ^TMP($J,"IBITEM",Z0,Z1,LINE)=IBA("OUTPT",LINE,Z0,Z1) K IBA("OUTPT",LINE,Z0,Z1)
"RTN","IBCEF2",213,0)
 Q
"RTN","IBCEF2",214,0)
 ;
"RTN","IBCEF2",215,0)
LINK(IBTYP,IBDATA) ; Link the item with a service line, if possible
"RTN","IBCEF2",216,0)
 ; IBTYP = the code for the type of item
"RTN","IBCEF2",217,0)
 ;         returned incremented if no link is made
"RTN","IBCEF2",218,0)
 ; IBDATA = the extracted data string that identifies the item. 
"RTN","IBCEF2",219,0)
 ; Returns the line to link to or null if no link
"RTN","IBCEF2",220,0)
 N IBLN,IBKEY,Z
"RTN","IBCEF2",221,0)
 S IBLN=""
"RTN","IBCEF2",222,0)
 S IBKEY=$S(IBTYP=3:$P(IBDATA,U,9),IBTYP=5:$P(IBDATA,U,4),1:"") Q:IBKEY=""
"RTN","IBCEF2",223,0)
 I $D(^TMP($J,"IBITEM",IBTYP,IBKEY)) D  G:IBLN LINKQ
"RTN","IBCEF2",224,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",225,0)
 I $D(^TMP($J,"IBITEM",IBTYP,0)) S IBKEY=0 D
"RTN","IBCEF2",226,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",227,0)
LINKQ Q IBLN
"RTN","IBCEF2",228,0)
 ;
"RTN","IBCEF2",229,0)
COID(IBIFN) ; Claim office ID - moved for space
"RTN","IBCEF2",230,0)
 Q $$COID^IBCEF21(IBIFN)
"RTN","IBCEF2",231,0)
 ;
"RTN","IBCEF2",232,0)
PPOL(IBIFN,COB) ; return IFN of patient policy on a bill defined by COB (fields 399,112-114)
"RTN","IBCEF2",233,0)
 N X,Y,PPOL S PPOL=""
"RTN","IBCEF2",234,0)
 I +$G(IBIFN) S X=$G(^DGCR(399,+IBIFN,"M")) I +$G(COB),COB<4 S Y=COB+11,PPOL=$P(X,U,Y)
"RTN","IBCEF2",235,0)
 Q PPOL
"RTN","IBCEF2",236,0)
 ;
"RTN","IBCEF2",237,0)
LADJ(SUB,LINE,SEQ1,GRP,IBXSAVE,PIECE) ; Extract line level adjustments
"RTN","IBCEF2",238,0)
 ; SUB     = 1st subscript in IBXSAVE array to use
"RTN","IBCEF2",239,0)
 ; LINE    = 2nd subscript
"RTN","IBCEF2",240,0)
 ; SEQ1    = 4th subscript
"RTN","IBCEF2",241,0)
 ; GRP     = 5th subscript
"RTN","IBCEF2",242,0)
 ; IBXSAVE = array that has the data for COB line level adjustments
"RTN","IBCEF2",243,0)
 ; PIECE   = # of the piece on the 0-node of the line level
"RTN","IBCEF2",244,0)
 ;           adjustment reason to be extracted
"RTN","IBCEF2",245,0)
 ;
"RTN","IBCEF2",246,0)
 N A,B
"RTN","IBCEF2",247,0)
 S (A,B)=0
"RTN","IBCEF2",248,0)
 F  S A=$O(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A)) Q:'A  D
"RTN","IBCEF2",249,0)
 . S B=B+1,IBXDATA(B)=$P(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A),U,PIECE)
"RTN","IBCEF2",250,0)
 Q
"RTN","IBCEF2",251,0)
 ;
"RTN","IBCEF2",252,0)
ESGHPST(IBIFN,COB) ; return insureds employ status if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",253,0)
 Q $$ESGHPST^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",254,0)
 ;
"RTN","IBCEF2",255,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",256,0)
 Q $$ESGHPNL^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",257,0)
 ;
"RTN","IBCEF2",258,0)
AMTOUT(A,B,C,IBXSAVE) ; format output amount
"RTN","IBCEF2",259,0)
 ;
"RTN","IBCEF2",260,0)
 N Z,K,IBZ,IBARR K IBXDATA S (IBZ,K)=0,IBARR="IBXSAVE("""_A_""")" F  S IBZ=$O(@IBARR@(IBZ)) Q:'IBZ  S K=K+1,Z=0 F  S Z=$O(@IBARR@(IBZ,Z)) Q:'Z  I $P($G(@IBARR@(IBZ,Z,B)),U,C) S IBXDATA(K)=$$DOLLAR^IBCEFG1($G(IBXDATA(K))+$P(@IBARR@(IBZ,Z,B),U,C))
"RTN","IBCEF2",261,0)
 Q
"RTN","IBCEM")
0^21^B60823035^B59477823
"RTN","IBCEM",1,0)
IBCEM ;ALB/TMP - 837 EDI RETURN MESSAGE PROCESSING ;17-APR-96
"RTN","IBCEM",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,155,371,547**;21-MAR-94;Build 119
"RTN","IBCEM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEM",4,0)
 Q
"RTN","IBCEM",5,0)
 ;
"RTN","IBCEM",6,0)
UPD ; Update messages manually from messages list
"RTN","IBCEM",7,0)
 N IBDA,IBOK,IBTDA,ZTSK,IBTSK,IBTYP,IBU,IBU1,IB0
"RTN","IBCEM",8,0)
 D FULL^VALM1
"RTN","IBCEM",9,0)
 D SEL(.IBDA,1)
"RTN","IBCEM",10,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCEM",11,0)
 I IBDA="" G UPDQ
"RTN","IBCEM",12,0)
 S IBTDA=+IBDA(IBDA)
"RTN","IBCEM",13,0)
 I '$$LOCK(IBTDA) G UPDQ
"RTN","IBCEM",14,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEM",15,0)
 ;
"RTN","IBCEM",16,0)
 I IB0="" D  G UPDQ
"RTN","IBCEM",17,0)
 . W !,*7,"Message ",IBDA," is no longer in return message file" S IBOK=""
"RTN","IBCEM",18,0)
 . D PAUSE^VALM1
"RTN","IBCEM",19,0)
 I $P(IB0,U,11) S IBOK=1 D  G:'IBOK UPDQ
"RTN","IBCEM",20,0)
 . N ZTSK
"RTN","IBCEM",21,0)
 . S ZTSK=$P(IB0,U,11) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","IBCEM",22,0)
 . I "12"[ZTSK(1) W *7,!,"This message has already been scheduled for update.  Task # is: ",$P(IB0,U,11) S IBOK="" D PAUSE^VALM1
"RTN","IBCEM",23,0)
 ;
"RTN","IBCEM",24,0)
 I $P(IB0,U,6)=""!("UP"'[$P(IB0,U,6)) D  G UPDQ
"RTN","IBCEM",25,0)
 . W !,*7,"Message status ("_$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6))_") is not appropriate for this action"
"RTN","IBCEM",26,0)
 . D PAUSE^VALM1
"RTN","IBCEM",27,0)
 ;
"RTN","IBCEM",28,0)
 S IBTYP=$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U)
"RTN","IBCEM",29,0)
 S IBU=$S(IBTYP="REPORT":"MAILIT^IBCESRV2",IBTYP["837REC":"CON837^IBCESRV2",IBTYP["837REJ":"REJ837^IBCESRV2",IBTYP["835EOB":"EOB835^IBCESRV3",1:""),IBU1=$S(IBTYP["837":$E(IBTYP,$L(IBTYP)),1:2)
"RTN","IBCEM",30,0)
 I IBU="" W !,*7,"This message has an invalid message type - can't update" D PAUSE^VALM1 G UPDQ
"RTN","IBCEM",31,0)
 S IBTSK=$$TASK(IBU,$P(IB0,U,4),IBTDA,IBU1)
"RTN","IBCEM",32,0)
 I IBTSK W !,"Update has been tasked (#",IBTSK,")"
"RTN","IBCEM",33,0)
 I 'IBTSK W !,*7,"Update could not be tasked.  Please try again later!!!"
"RTN","IBCEM",34,0)
 D PAUSE^VALM1
"RTN","IBCEM",35,0)
 ;
"RTN","IBCEM",36,0)
 D BLD^IBCEM1
"RTN","IBCEM",37,0)
UPDQ I $G(IBTDA) L -^IBA(364.2,IBTDA,0)
"RTN","IBCEM",38,0)
 S VALMBCK="R"
"RTN","IBCEM",39,0)
 Q
"RTN","IBCEM",40,0)
 ;
"RTN","IBCEM",41,0)
VP ; View/Print Return Messages
"RTN","IBCEM",42,0)
 N DHD,DIC,FLDS,BY,FR,TO,DIR,Y,L,IBDA,IBTDA,IBBILLS
"RTN","IBCEM",43,0)
 D FULL^VALM1,SEL(.IBDA,1)
"RTN","IBCEM",44,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCEM",45,0)
 G:'IBDA VPQ
"RTN","IBCEM",46,0)
 S IBTDA=$G(IBDA(IBDA)),IBBILLS=""
"RTN","IBCEM",47,0)
 I $P($G(^IBA(364.2,IBTDA,0)),U,4),'$P(^(0),U,5) D
"RTN","IBCEM",48,0)
 .S DIR(0)="YA",DIR("B")="NO",DIR("A")="Do you want to list all bills for this batch?: " D ^DIR K DIR
"RTN","IBCEM",49,0)
 .I Y S IBBILLS=1
"RTN","IBCEM",50,0)
 S DHD=$S(IBBILLS:"[IBCEM MESSAGE LIST HDR]",1:""),DIC="^IBA(364.2,",FLDS=$S(IBBILLS:"[IBCEM MESSAGE LIST]",1:"[CAPTIONED]"),BY="@NUMBER",(FR,TO)=$G(IBDA(IBDA)),L=0 D EN1^DIP
"RTN","IBCEM",51,0)
 D PAUSE^VALM1
"RTN","IBCEM",52,0)
VPQ S VALMBCK="R"
"RTN","IBCEM",53,0)
 Q
"RTN","IBCEM",54,0)
 ;
"RTN","IBCEM",55,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCEM",56,0)
 ; IBDA = array returned if selections made
"RTN","IBCEM",57,0)
 ;    IBDA(n)=ien of bill selected in file 399
"RTN","IBCEM",58,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCEM",59,0)
 N IB
"RTN","IBCEM",60,0)
 K IBDA
"RTN","IBCEM",61,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCEM",62,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  S IB=$G(^TMP("IBCEM-837DX",$J,IBDA)),IBDA(IBDA)=+$P(IB,U,2)
"RTN","IBCEM",63,0)
 Q
"RTN","IBCEM",64,0)
 ;
"RTN","IBCEM",65,0)
UPDEDI(IBDA,FUNC,NOCT,MSCN) ; Update EDI files - cancel/resubmit/print as
"RTN","IBCEM",66,0)
 ;   resolution to message
"RTN","IBCEM",67,0)
 ; IBDA = transmit bill ien # for bill
"RTN","IBCEM",68,0)
 ; FUNC = "E" for edit/resubmit, "C" for cancel, "R" for resubmit not
"RTN","IBCEM",69,0)
 ;       from edit, "P" for print, "Z" for COB processed , "N" for no
"RTN","IBCEM",70,0)
 ;       further action needed-close record
"RTN","IBCEM",71,0)
 ; NOCT = 1 if not necessary to update batch count, 0 if update needed
"RTN","IBCEM",72,0)
 ; MSCN = 2 if this call came from CLONE and the cloned claim is a secondary and its primary was an MRA
"RTN","IBCEM",73,0)
 ;          (secondaries created from MRA primaries share the same claim#.  Do not want to cancel MRA 
"RTN","IBCEM",74,0)
 ;           associated with the primary, only any EOBs associated with the cloned secondary claim).
"RTN","IBCEM",75,0)
 ;
"RTN","IBCEM",76,0)
 N IB0,IBBA,IBBDA,IBCT,IBM,IBTDA,IBNEW,DA,DIE,DR,Z,IBTEXT,IBZ,IBIFN,IBSTAT
"RTN","IBCEM",77,0)
 S IB0=$G(^IBA(364,+IBDA,0)),IBBA=$P(IB0,U,2)
"RTN","IBCEM",78,0)
 Q:IB0=""  S IBIFN=+IB0
"RTN","IBCEM",79,0)
 ;
"RTN","IBCEM",80,0)
 S IBNEW=$S(FUNC="E"!(FUNC="R"):+$P($G(^IBA(364,+$$LAST364^IBCEF4(+IB0),0)),U,2),1:"") S:IBNEW=IBBA IBNEW=""
"RTN","IBCEM",81,0)
 ;
"RTN","IBCEM",82,0)
 S IBSTAT=$P(IB0,U,3)                ; current status in file 364
"RTN","IBCEM",83,0)
 I '$F(".C.R.E.Z.","."_IBSTAT_".") D   ; don't update if in final status
"RTN","IBCEM",84,0)
 . S DR=".03////"_$S(FUNC="E":"R","NP"'[FUNC:FUNC,1:"Z")_";.04///NOW" S:FUNC="E"!(FUNC="R") DR=DR_$S(IBNEW:";.06////"_IBNEW,1:"")
"RTN","IBCEM",85,0)
 . S DA=+IBDA,DIE="^IBA(364," D ^DIE ;Update the transmit bill record
"RTN","IBCEM",86,0)
 . Q
"RTN","IBCEM",87,0)
 ;
"RTN","IBCEM",88,0)
 I IBBA D CKRES^IBCESRV2(IBBA) ;Update completely resubmitted flags
"RTN","IBCEM",89,0)
 ;
"RTN","IBCEM",90,0)
 I IBBA,(FUNC="P"!(IBNEW&'$G(NOCT))) D CTDOWN^IBCEM02(IBBA,1) ;If resubmitted in a new batch or printed, update old batch
"RTN","IBCEM",91,0)
 ;
"RTN","IBCEM",92,0)
 S IBTEXT(1)=" UPDATED BY: "_$$EXTERNAL^DILFD(361.02,.02,,+$G(DUZ))
"RTN","IBCEM",93,0)
 S IBTEXT(2)="ACTION USED: "_$S(FUNC="E":"BILL EDITED/RESUBMITTED",FUNC="C":"BILL CANCELED",FUNC="R":"BILL RESUBMITTED WITHOUT EDIT",FUNC="P":"PRINT BILL",FUNC="Z":"PROCESS COB",1:"")
"RTN","IBCEM",94,0)
 S IBTEXT(2)=$S(IBTEXT(2)="":"UNSPECIFIED",1:IBTEXT(2)_" - REVIEW MARKED AS COMPLETE")
"RTN","IBCEM",95,0)
 S IBTEXT=2
"RTN","IBCEM",96,0)
 ;
"RTN","IBCEM",97,0)
 ; Update file 361
"RTN","IBCEM",98,0)
 S IBZ=0 F  S IBZ=$O(^IBM(361,"AERR",+IBDA,IBZ)) Q:'IBZ  I $D(^IBM(361,IBZ,0)),$P(^(0),U,10)="",$P(^(0),U,9)<2 D
"RTN","IBCEM",99,0)
 . S DIE="^IBM(361,",DR=".09////2;.1////"_$TR(FUNC,"RCEIBZPN","RCROOFOO"),DA=IBZ D ^DIE
"RTN","IBCEM",100,0)
 . I FUNC'="","ECRPIBZ"[FUNC D  ; Update review status, notes for message
"RTN","IBCEM",101,0)
 .. D NOTECHG^IBCECSA2(IBZ,1,.IBTEXT)
"RTN","IBCEM",102,0)
 ;
"RTN","IBCEM",103,0)
 ; Update file 361.1 with the Cancel Status, to cancel All EOB's on file
"RTN","IBCEM",104,0)
 ; patch 547***, Pass #2 if don't want to cancel MRA, otherwise pass 0
"RTN","IBCEM",105,0)
 ; I FUNC="C" D STAT^IBCEMU2(IBIFN,9,0)  
"RTN","IBCEM",106,0)
 I FUNC="C" D STAT^IBCEMU2(IBIFN,9,+$G(MSCN))
"RTN","IBCEM",107,0)
 ;
"RTN","IBCEM",108,0)
 Q
"RTN","IBCEM",109,0)
 ;
"RTN","IBCEM",110,0)
DEL ; Delete messages from messages list - locked with IB SUPERVISOR key
"RTN","IBCEM",111,0)
 N IBDA,IBOK,IBTDA,IBTYP,IBU,IBU1,IB0,DIR,IBT,IBE,Z,X,Y,XMSUBJ,XMTO,XMBODY,XMDUZ
"RTN","IBCEM",112,0)
 D FULL^VALM1
"RTN","IBCEM",113,0)
 S IBTDA=0
"RTN","IBCEM",114,0)
 I '$D(^XUSEC("IB SUPERVISOR",DUZ)) D  G DELQ
"RTN","IBCEM",115,0)
 . W !,"You don't have authority to use this action. See your supervisr for assistance"
"RTN","IBCEM",116,0)
 . D PAUSE^VALM1
"RTN","IBCEM",117,0)
 D SEL(.IBDA,1)
"RTN","IBCEM",118,0)
 S IBDA=$O(IBDA(""))
"RTN","IBCEM",119,0)
 I IBDA="" G DELQ
"RTN","IBCEM",120,0)
 W !
"RTN","IBCEM",121,0)
 S DIR(0)="YA",DIR("A",1)="This action will PERMANENTLY delete a return message from your system",DIR("A",2)="A bulletin will be sent to report the deletion",DIR("A",3)=" "
"RTN","IBCEM",122,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","IBCEM",123,0)
 D ^DIR K DIR
"RTN","IBCEM",124,0)
 G:Y'=1 DELQ
"RTN","IBCEM",125,0)
 S IBTDA=+IBDA(IBDA)
"RTN","IBCEM",126,0)
 I '$$LOCK(IBTDA) G DELQ
"RTN","IBCEM",127,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEM",128,0)
 ;
"RTN","IBCEM",129,0)
 I $P(IB0,U,11) S IBOK=1 D  G:'IBOK DELQ
"RTN","IBCEM",130,0)
 . N ZTSK
"RTN","IBCEM",131,0)
 . S ZTSK=$P(IB0,U,11) D STAT^%ZTLOAD Q:ZTSK(0)=0  ;Task not scheduled
"RTN","IBCEM",132,0)
 . I "12"[ZTSK(1) W *7,!,"This message is currently scheduled for update.  Task # is: ",$P(IB0,U,11) S IBOK="" D PAUSE^VALM1
"RTN","IBCEM",133,0)
 ;
"RTN","IBCEM",134,0)
 I $P(IB0,U,6)=""!("UP"'[$P(IB0,U,6)) D  G DELQ
"RTN","IBCEM",135,0)
 . W !,*7,"Message status ("_$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6))_") is not appropriate for this action"
"RTN","IBCEM",136,0)
 . D PAUSE^VALM1
"RTN","IBCEM",137,0)
 ;
"RTN","IBCEM",138,0)
 S DIR(0)="YA",DIR("A",1)=" ",DIR("A",2)="",$P(DIR("A",2),"*",54)="",DIR("A",3)="* This message is about to be PERMANENTLY deleted!! *",DIR("A",4)=DIR("A",2),DIR("A",5)=" "
"RTN","IBCEM",139,0)
 S DIR("A")="ARE YOU STILL SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","IBCEM",140,0)
 W ! D ^DIR W ! K DIR
"RTN","IBCEM",141,0)
 I Y'=1 W !!,"Nothing deleted" D PAUSE^VALM1 G DELQ
"RTN","IBCEM",142,0)
 ;
"RTN","IBCEM",143,0)
 K ^TMP("IBMSG",$J)
"RTN","IBCEM",144,0)
 M ^TMP("IBMSG",$J)=^IBA(364.2,IBTDA)
"RTN","IBCEM",145,0)
 D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEM",146,0)
 I $D(^IBA(364.2,IBTDA)) D  G DELQ
"RTN","IBCEM",147,0)
 . W !,"Message not deleted - problem with delete" D PAUSE^VALM1
"RTN","IBCEM",148,0)
 ;
"RTN","IBCEM",149,0)
 S IBT(1)="EDI return message #"_$P(IB0,U)_" has been deleted"
"RTN","IBCEM",150,0)
 S IBT(2)=" "
"RTN","IBCEM",151,0)
 S IBT(3)="DELETED BY: "_$P($G(^VA(200,+$G(DUZ),0)),U)_"   "_$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","IBCEM",152,0)
 S Z=$$EXPAND^IBTRE(364.2,.06,$P(IB0,U,6)) S:Z="" Z="??"
"RTN","IBCEM",153,0)
 S IBT(4)="    STATUS: "_$E(Z_$J("",11),1,11)_"  MESSAGE TYPE: "_$P($G(^IBE(364.3,+$P(IB0,U,2),0)),U,5)
"RTN","IBCEM",154,0)
 S IBT(5)=" MESSAGE #: "_$E($P(IB0,U)_$J("",11),1,11)_"   STATUS DATE: "_$$FMTE^XLFDT($P($G(^TMP("IBMSG",$J,1)),U,3))
"RTN","IBCEM",155,0)
 S IBT(6)="   BATCH #: "_$E($P($G(^IBA(364.1,+$P(IB0,U,4),0)),U)_$J("",11),1,11)_"        BILL #: "_$$EXPAND^IBTRE(364.2,.05,$P(IB0,U,5))
"RTN","IBCEM",156,0)
 S IBT(7)=" "
"RTN","IBCEM",157,0)
 S IBT(8)="MESSAGE TEXT:",IBE=8
"RTN","IBCEM",158,0)
 S Z=0 F  S Z=$O(^TMP("IBMSG",$J,2,Z)) Q:'Z  S IBE=IBE+1,IBT(IBE)=$G(^(Z,0))
"RTN","IBCEM",159,0)
 S XMSUBJ="EDI MESSAGE DELETED",XMBODY="IBT",XMDUZ="",XMTO("I:G.IB EDI")=""
"RTN","IBCEM",160,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEM",161,0)
 ;
"RTN","IBCEM",162,0)
 K ^TMP("IBMSG",$J)
"RTN","IBCEM",163,0)
 ;
"RTN","IBCEM",164,0)
 W !,"A bulletin has been sent to report this deletion",!
"RTN","IBCEM",165,0)
 D PAUSE^VALM1
"RTN","IBCEM",166,0)
 ;
"RTN","IBCEM",167,0)
 D BLD^IBCEM1
"RTN","IBCEM",168,0)
DELQ L -^IBA(364.2,IBTDA,0)
"RTN","IBCEM",169,0)
 S VALMBCK="R"
"RTN","IBCEM",170,0)
 Q
"RTN","IBCEM",171,0)
 ;
"RTN","IBCEM",172,0)
TASK(IBRTN,IBBDA,IBTDA,IBTYP) ; Schedule the task to update data base from message
"RTN","IBCEM",173,0)
 ; IBRTN = routine to task
"RTN","IBCEM",174,0)
 ; IBBDA = batch # associated with the message (OPTIONAL)
"RTN","IBCEM",175,0)
 ; IBTDA = internal entry of message
"RTN","IBCEM",176,0)
 ; IBTYP = the number that is the last digit in the message type
"RTN","IBCEM",177,0)
 ;
"RTN","IBCEM",178,0)
 N ZTSK,ZTDESC,ZTIO,ZTDTH,ZTSAVE,DA,DR,DIE
"RTN","IBCEM",179,0)
 S ZTIO="",ZTDTH=$H,ZTDESC="UPDATE DATA BASE FROM EDI RETURN MESSAGE",ZTSAVE("IB*")="",ZTRTN=IBRTN
"RTN","IBCEM",180,0)
 D ^%ZTLOAD
"RTN","IBCEM",181,0)
 I $G(ZTSK),$G(^IBA(364.2,IBTDA,0)) S DIE="^IBA(364.2,",DR=".11////"_ZTSK_";.06////U",DA=IBTDA D ^DIE
"RTN","IBCEM",182,0)
 Q $G(ZTSK)
"RTN","IBCEM",183,0)
 ;
"RTN","IBCEM",184,0)
LOCK(IBTDA) ; Attempt to lock message file entry IBTDA
"RTN","IBCEM",185,0)
 ; Return 1 if successful, 0 if not able to lock
"RTN","IBCEM",186,0)
 ;
"RTN","IBCEM",187,0)
 N OK
"RTN","IBCEM",188,0)
 S OK=1
"RTN","IBCEM",189,0)
 L +^IBA(364.2,IBTDA,0):5
"RTN","IBCEM",190,0)
 I '$T D
"RTN","IBCEM",191,0)
 . I '$D(DIQUIET) W !,*7,"Another user is editing this entry ... try again later" D PAUSE^VALM1
"RTN","IBCEM",192,0)
 . S IBDA="",OK=0
"RTN","IBCEM",193,0)
 Q OK
"RTN","IBCEM",194,0)
 ;
"RTN","IBCEMCA")
0^7^B50686321^B50663666
"RTN","IBCEMCA",1,0)
IBCEMCA ;ALB/ESG - Multiple CSA Message Management ;20-SEP-2005
"RTN","IBCEMCA",2,0)
 ;;2.0;INTEGRATED BILLING;**320,547**;21-MAR-1994;Build 119
"RTN","IBCEMCA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEMCA",4,0)
 ;
"RTN","IBCEMCA",5,0)
 Q
"RTN","IBCEMCA",6,0)
 ;
"RTN","IBCEMCA",7,0)
SCREEN ; Change the message selection criteria
"RTN","IBCEMCA",8,0)
 NEW DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,EDI,IBDONE,IBPAYER,INST,PROF,RESET,X,Y
"RTN","IBCEMCA",9,0)
 S VALMBCK="R",RESET=0
"RTN","IBCEMCA",10,0)
 D FULL^VALM1
"RTN","IBCEMCA",11,0)
 W !
"RTN","IBCEMCA",12,0)
 S DIR(0)="Y",DIR("A")="Do you want to change the MCS selection criteria"
"RTN","IBCEMCA",13,0)
 S DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCEMCA",14,0)
 I 'Y G SCREENX          ; get out; no list rebuild
"RTN","IBCEMCA",15,0)
 K ^TMP($J,"IBCEMCA")    ; kill selection area and rebuild below
"RTN","IBCEMCA",16,0)
 K VALMHDR               ; recalculate totals in header area
"RTN","IBCEMCA",17,0)
 S VALMBG=1              ; begin new list display at line 1
"RTN","IBCEMCA",18,0)
 ;
"RTN","IBCEMCA",19,0)
Q1 ; payer
"RTN","IBCEMCA",20,0)
 W !!,"PAYER SELECTION:"
"RTN","IBCEMCA",21,0)
 S IBPAYER=""
"RTN","IBCEMCA",22,0)
 S DIR(0)="SA^A:All Payers;S:Selected Payers"
"RTN","IBCEMCA",23,0)
 S DIR("A")="Include All Payers or Selected Payers? "
"RTN","IBCEMCA",24,0)
 S DIR("B")="All"
"RTN","IBCEMCA",25,0)
 D ^DIR K DIR
"RTN","IBCEMCA",26,0)
 I $D(DIROUT)!$D(DIRUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",27,0)
 I Y="A" K ^TMP($J,"IBCEMCA","INS") G Q2
"RTN","IBCEMCA",28,0)
 W !
"RTN","IBCEMCA",29,0)
 S DIR(0)="Y"
"RTN","IBCEMCA",30,0)
 S DIR("A")="   Include all payers with the same electronic Payer ID"
"RTN","IBCEMCA",31,0)
 S DIR("B")="Yes"
"RTN","IBCEMCA",32,0)
 D ^DIR K DIR
"RTN","IBCEMCA",33,0)
 I $D(DIROUT) S RESET=1 G QX   ; kill scratch and rebuild the list
"RTN","IBCEMCA",34,0)
 I $D(DIRUT) G Q1
"RTN","IBCEMCA",35,0)
 S IBPAYER=Y
"RTN","IBCEMCA",36,0)
 W !
"RTN","IBCEMCA",37,0)
 ;
"RTN","IBCEMCA",38,0)
 S IBDONE=0
"RTN","IBCEMCA",39,0)
 F  D  Q:IBDONE
"RTN","IBCEMCA",40,0)
 . S DIC=36,DIC(0)="AEMQ",DIC("A")="   Select Insurance Company: "
"RTN","IBCEMCA",41,0)
 . I $O(^TMP($J,"IBCEMCA","INS",1,"")) S DIC("A")="   Select Another Insurance Company: "
"RTN","IBCEMCA",42,0)
 . S DIC("W")="D INSLIST^IBCEMCA(Y)"
"RTN","IBCEMCA",43,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBCEMCA",44,0)
 . I X="^^" S IBDONE=2 Q       ; user entered ^^
"RTN","IBCEMCA",45,0)
 . I +Y'>0 S IBDONE=1 Q        ; user is done
"RTN","IBCEMCA",46,0)
 . S ^TMP($J,"IBCEMCA","INS",1,+Y)=$P(Y,U,2)
"RTN","IBCEMCA",47,0)
 . I 'IBPAYER Q
"RTN","IBCEMCA",48,0)
 . S EDI=$$UP^XLFSTR($G(^DIC(36,+Y,3)))
"RTN","IBCEMCA",49,0)
 . S PROF=$P(EDI,U,2)
"RTN","IBCEMCA",50,0)
 . S INST=$P(EDI,U,4)
"RTN","IBCEMCA",51,0)
 . I PROF'="",PROF'["PRNT" S ^TMP($J,"IBCEMCA","INS",2,PROF,+Y)=""
"RTN","IBCEMCA",52,0)
 . I INST'="",INST'["PRNT" S ^TMP($J,"IBCEMCA","INS",2,INST,+Y)=""
"RTN","IBCEMCA",53,0)
 . Q
"RTN","IBCEMCA",54,0)
 ;
"RTN","IBCEMCA",55,0)
 I IBDONE=2 S RESET=1 G QX      ;kill scratch and rebuild the list
"RTN","IBCEMCA",56,0)
 ;
"RTN","IBCEMCA",57,0)
 I '$O(^TMP($J,"IBCEMCA","INS",1,"")) D  G Q1
"RTN","IBCEMCA",58,0)
 . W *7,!!?3,"No payers have been selected.  Please try again."
"RTN","IBCEMCA",59,0)
 . Q
"RTN","IBCEMCA",60,0)
 ;
"RTN","IBCEMCA",61,0)
Q2 ; division
"RTN","IBCEMCA",62,0)
 W !!,"DIVISION SELECTION:"
"RTN","IBCEMCA",63,0)
 S DIR(0)="SA^A:All Divisions;S:Selected Divisions"
"RTN","IBCEMCA",64,0)
 S DIR("A")="Include All Divisions or Selected Divisions? "
"RTN","IBCEMCA",65,0)
 S DIR("B")="All"
"RTN","IBCEMCA",66,0)
 D ^DIR K DIR
"RTN","IBCEMCA",67,0)
 I $D(DIROUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",68,0)
 I $D(DIRUT) G Q1
"RTN","IBCEMCA",69,0)
 I Y="A" K ^TMP($J,"IBCEMCA","DIV") G Q3
"RTN","IBCEMCA",70,0)
 ;
"RTN","IBCEMCA",71,0)
 W !
"RTN","IBCEMCA",72,0)
 S IBDONE=0
"RTN","IBCEMCA",73,0)
 F  D  Q:IBDONE
"RTN","IBCEMCA",74,0)
 . S DIC=40.8,DIC(0)="AEMQ",DIC("A")="   Select Division: "
"RTN","IBCEMCA",75,0)
 . I $O(^TMP($J,"IBCEMCA","DIV","")) S DIC("A")="   Select Another Division: "
"RTN","IBCEMCA",76,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBCEMCA",77,0)
 . I X="^^" S IBDONE=2 Q       ; user entered ^^
"RTN","IBCEMCA",78,0)
 . I +Y'>0 S IBDONE=1 Q        ; user is done
"RTN","IBCEMCA",79,0)
 . S ^TMP($J,"IBCEMCA","DIV",+Y)=$P(Y,U,2)
"RTN","IBCEMCA",80,0)
 . Q
"RTN","IBCEMCA",81,0)
 ;
"RTN","IBCEMCA",82,0)
 I IBDONE=2 S RESET=1 G QX      ;kill scratch and rebuild the list
"RTN","IBCEMCA",83,0)
 ;
"RTN","IBCEMCA",84,0)
 I '$O(^TMP($J,"IBCEMCA","DIV","")) D  G Q2
"RTN","IBCEMCA",85,0)
 . W *7,!!?3,"No divisions have been selected.  Please try again."
"RTN","IBCEMCA",86,0)
 . Q
"RTN","IBCEMCA",87,0)
 ;
"RTN","IBCEMCA",88,0)
Q3 ; message text
"RTN","IBCEMCA",89,0)
 W !!,"ERROR MESSAGE TEXT SELECTION:"
"RTN","IBCEMCA",90,0)
 S DIR(0)="SA^A:All Error Message Text;S:Select Error Message Text"
"RTN","IBCEMCA",91,0)
 S DIR("A")="Include All Error Message Text or Select Error Message Text? "
"RTN","IBCEMCA",92,0)
 S DIR("B")="All"
"RTN","IBCEMCA",93,0)
 D ^DIR K DIR
"RTN","IBCEMCA",94,0)
 I $D(DIROUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",95,0)
 I $D(DIRUT) G Q2
"RTN","IBCEMCA",96,0)
 I Y="A" K ^TMP($J,"IBCEMCA","TEXT") G Q4
"RTN","IBCEMCA",97,0)
 ;
"RTN","IBCEMCA",98,0)
 W !
"RTN","IBCEMCA",99,0)
 S IBDONE=0
"RTN","IBCEMCA",100,0)
 F  D  Q:IBDONE
"RTN","IBCEMCA",101,0)
 . S DIR(0)="FAOU"
"RTN","IBCEMCA",102,0)
 . S DIR("A")="   Text String: "
"RTN","IBCEMCA",103,0)
 . I $O(^TMP($J,"IBCEMCA","TEXT",""))'="" S DIR("A")="   Another Text String: "
"RTN","IBCEMCA",104,0)
 . D ^DIR K DIR                ; user response
"RTN","IBCEMCA",105,0)
 . I $D(DIROUT) S IBDONE=2 Q   ; user entered ^^
"RTN","IBCEMCA",106,0)
 . I $D(DIRUT) S IBDONE=1 Q    ; leading up-arrow or time-out
"RTN","IBCEMCA",107,0)
 . I Y="" S IBDONE=1 Q         ; null response
"RTN","IBCEMCA",108,0)
 . S ^TMP($J,"IBCEMCA","TEXT",Y)=""
"RTN","IBCEMCA",109,0)
 . Q
"RTN","IBCEMCA",110,0)
 ;
"RTN","IBCEMCA",111,0)
 I IBDONE=2 S RESET=1 G QX      ;kill scratch and rebuild the list
"RTN","IBCEMCA",112,0)
 ;
"RTN","IBCEMCA",113,0)
 I $O(^TMP($J,"IBCEMCA","TEXT",""))="" D  G Q3
"RTN","IBCEMCA",114,0)
 . W *7,!!?3,"No text has been selected.  Please try again."
"RTN","IBCEMCA",115,0)
 . Q
"RTN","IBCEMCA",116,0)
 ;
"RTN","IBCEMCA",117,0)
Q4 ; date range for when message received
"RTN","IBCEMCA",118,0)
 W !!,"DATE MESSAGE RECEIVED SELECTION:"
"RTN","IBCEMCA",119,0)
 S DIR(0)="SA^A:All Dates;S:Select Date Range"
"RTN","IBCEMCA",120,0)
 S DIR("A")="Include All Dates or Select a Date Range? "
"RTN","IBCEMCA",121,0)
 S DIR("B")="All"
"RTN","IBCEMCA",122,0)
 D ^DIR K DIR
"RTN","IBCEMCA",123,0)
 I $D(DIROUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",124,0)
 I $D(DIRUT) G Q3
"RTN","IBCEMCA",125,0)
 I Y="A" K ^TMP($J,"IBCEMCA","DATE") G QX
"RTN","IBCEMCA",126,0)
 ;
"RTN","IBCEMCA",127,0)
Q4A ; beginning date
"RTN","IBCEMCA",128,0)
 W !
"RTN","IBCEMCA",129,0)
 S DIR(0)="DAO^:"_DT_":AEX",DIR("A")="   Enter the beginning date: "
"RTN","IBCEMCA",130,0)
 D ^DIR K DIR
"RTN","IBCEMCA",131,0)
 I $D(DIROUT) S RESET=1 G QX   ; kill scratch and rebuild list
"RTN","IBCEMCA",132,0)
 I $D(DIRUT)!'Y G Q4
"RTN","IBCEMCA",133,0)
 S $P(^TMP($J,"IBCEMCA","DATE"),U,1)=Y
"RTN","IBCEMCA",134,0)
 ;
"RTN","IBCEMCA",135,0)
Q4B ; ending date
"RTN","IBCEMCA",136,0)
 W !
"RTN","IBCEMCA",137,0)
 S DIR(0)="DAO^"_Y_":"_DT_":AEX",DIR("A")="   Enter the ending date: "
"RTN","IBCEMCA",138,0)
 D ^DIR K DIR
"RTN","IBCEMCA",139,0)
 I $D(DIROUT) S RESET=1 G QX   ; kill scratch and rebuild list
"RTN","IBCEMCA",140,0)
 I $D(DIRUT)!'Y G Q4A
"RTN","IBCEMCA",141,0)
 S $P(^TMP($J,"IBCEMCA","DATE"),U,2)=Y
"RTN","IBCEMCA",142,0)
 ;
"RTN","IBCEMCA",143,0)
QX ; end of questions, rebuild the list with user supplied selections
"RTN","IBCEMCA",144,0)
 I RESET KILL ^TMP($J,"IBCEMCA")
"RTN","IBCEMCA",145,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA",146,0)
 ;
"RTN","IBCEMCA",147,0)
SCREENX ;
"RTN","IBCEMCA",148,0)
 Q
"RTN","IBCEMCA",149,0)
 ;
"RTN","IBCEMCA",150,0)
TOGGLE ; Select/De-select entries in the list
"RTN","IBCEMCA",151,0)
 NEW IBSEL,DIR,X,Y,DIRUT,DIROUT,DTOUT,DUOUT,IBCEMLST,IBCEMSUB,IBCEMPCE,IBZ,IBIFN,IBDA,IBVALM,Z,RSTA
"RTN","IBCEMCA",152,0)
 D FULL^VALM1
"RTN","IBCEMCA",153,0)
 I '$D(^TMP($J,"IBCEMCL",3)) D  G TOGGLEX
"RTN","IBCEMCA",154,0)
 . W !!?5,"There are no messages to select." D PAUSE^VALM1
"RTN","IBCEMCA",155,0)
 . Q
"RTN","IBCEMCA",156,0)
 S DIR(0)="LO^1:"_+$O(^TMP($J,"IBCEMCL",3,""),-1)
"RTN","IBCEMCA",157,0)
 S DIR("A")="Select EDI Status Messages"
"RTN","IBCEMCA",158,0)
 W ! D ^DIR K DIR
"RTN","IBCEMCA",159,0)
 I $D(DIRUT) G TOGGLEX
"RTN","IBCEMCA",160,0)
 M IBCEMLST=Y
"RTN","IBCEMCA",161,0)
 F IBCEMSUB=0:1 Q:'$D(IBCEMLST(IBCEMSUB))  F IBCEMPCE=1:1 S IBSEL=$P(IBCEMLST(IBCEMSUB),",",IBCEMPCE) Q:'IBSEL  D
"RTN","IBCEMCA",162,0)
 . S IBZ=$G(^TMP($J,"IBCEMCL",3,IBSEL))
"RTN","IBCEMCA",163,0)
 . S IBIFN=+IBZ,IBDA=+$P(IBZ,U,2),IBVALM=+$P(IBZ,U,4)
"RTN","IBCEMCA",164,0)
 . I 'IBIFN Q
"RTN","IBCEMCA",165,0)
 . I 'IBDA Q
"RTN","IBCEMCA",166,0)
 . I 'IBVALM Q
"RTN","IBCEMCA",167,0)
 . I '$D(^TMP($J,"IBCEMCL",2,IBVALM,0)) Q
"RTN","IBCEMCA",168,0)
 . D MARK^IBCEMCL(IBDA,IBIFN,IBVALM,IBSEL,.Z)
"RTN","IBCEMCA",169,0)
 . I Z'="" S RSTA(Z)=$G(RSTA(Z))+1
"RTN","IBCEMCA",170,0)
 . Q
"RTN","IBCEMCA",171,0)
 ;
"RTN","IBCEMCA",172,0)
 I $G(RSTA("L")) D   ; display results only if some could not be selected
"RTN","IBCEMCA",173,0)
 . W !!?8,"Number of messages selected:  ",+$G(RSTA("S"))
"RTN","IBCEMCA",174,0)
 . W !?5,"Number of messages de-selected:  ",+$G(RSTA("D"))
"RTN","IBCEMCA",175,0)
 . W !?2,"Number of messages that could not"
"RTN","IBCEMCA",176,0)
 . W !?4,"be selected because other users"
"RTN","IBCEMCA",177,0)
 . W !?12,"have them locked in CSA:  ",+$G(RSTA("L"))
"RTN","IBCEMCA",178,0)
 . D PAUSE^VALM1
"RTN","IBCEMCA",179,0)
 . Q
"RTN","IBCEMCA",180,0)
TOGGLEX ;
"RTN","IBCEMCA",181,0)
 S VALMBCK="R"
"RTN","IBCEMCA",182,0)
 Q
"RTN","IBCEMCA",183,0)
 ;
"RTN","IBCEMCA",184,0)
INSLIST(INS) ; lister for DIC call.  INS is ien to file 36.
"RTN","IBCEMCA",185,0)
 ; IB*2.0*547 - increase EDI#'s to 6 characters each
"RTN","IBCEMCA",186,0)
 NEW AD,L1,CITY,ST,EDI,PROF,INST,PYRID
"RTN","IBCEMCA",187,0)
 S AD=$G(^DIC(36,INS,.11))
"RTN","IBCEMCA",188,0)
 S L1=$P(AD,U,1),CITY=$P(AD,U,4),ST=$P(AD,U,5)
"RTN","IBCEMCA",189,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCEMCA",190,0)
 S CITY=$E(CITY,1,15)
"RTN","IBCEMCA",191,0)
 I CITY'="",ST'="" S CITY=CITY_","
"RTN","IBCEMCA",192,0)
 S CITY=CITY_$E(ST,1,2)
"RTN","IBCEMCA",193,0)
 ;
"RTN","IBCEMCA",194,0)
 S EDI=$G(^DIC(36,INS,3))
"RTN","IBCEMCA",195,0)
 S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)
"RTN","IBCEMCA",196,0)
 ;S PYRID=$E(PROF,1,5)
"RTN","IBCEMCA",197,0)
 S PYRID=$E(PROF,1,6)
"RTN","IBCEMCA",198,0)
 I PROF'="",INST'="" S PYRID=PYRID_"/"
"RTN","IBCEMCA",199,0)
 ;S PYRID=PYRID_$E(INST,1,5)
"RTN","IBCEMCA",200,0)
 S PYRID=PYRID_$E(INST,1,6)
"RTN","IBCEMCA",201,0)
 ;
"RTN","IBCEMCA",202,0)
 W ?27,$E(L1,1,20)        ; address line 1
"RTN","IBCEMCA",203,0)
 W ?47,"  ",CITY          ; city,state
"RTN","IBCEMCA",204,0)
 W ?67,"  ",PYRID         ; payer IDs
"RTN","IBCEMCA",205,0)
INSLISTX ;
"RTN","IBCEMCA",206,0)
 Q
"RTN","IBCEMCA",207,0)
 ;
"RTN","IBCEMSR6")
0^27^B40067499^n/a
"RTN","IBCEMSR6",1,0)
IBCEMSR6 ;ALB/VAD - IB PRINTED CLAIMS REPORT - Sort ;09-SEP-2015
"RTN","IBCEMSR6",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBCEMSR6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEMSR6",4,0)
 ;
"RTN","IBCEMSR6",5,0)
SRCH ; Collect Information
"RTN","IBCEMSR6",6,0)
 ; Use the existing AP x-ref to narrow down the list of claims by date,
"RTN","IBCEMSR6",7,0)
 ; then check field 27 to see if it's appropriate to put it on the report (1=LOCAL PRINT)
"RTN","IBCEMSR6",8,0)
 ;The following line is used to find Bills in the Printed Date Range and the FORCE TO PRINT field
"RTN","IBCEMSR6",9,0)
 N BILLNO,IBBILZ,IBDV,IBDT,IBIFN,IBFTYP,IBTOP,IBRTN,IBRVCDS,IBSRT,IBTYPE,INSADD,LOCCNT,RCX,TOTCNT
"RTN","IBCEMSR6",10,0)
 N INSCO,IBSFLD,IBULD,IBINS,X,RTDSC,IBRVCD,IBTOPN,VARRAY,IBRTDS,IBPTYP,IBBLLR
"RTN","IBCEMSR6",11,0)
 K ^TMP($J,"IBCEMSRP-DATA")
"RTN","IBCEMSR6",12,0)
 D INIT
"RTN","IBCEMSR6",13,0)
 S IBDT=IBBDT-.1,IBSRT=$P(IBSORT,U)
"RTN","IBCEMSR6",14,0)
 S (TOTCNT,LOCCNT)=0
"RTN","IBCEMSR6",15,0)
 F  S IBDT=$O(^DGCR(399,"AP",IBDT)) Q:'IBDT!(IBDT>IBEDT)  D   ; Identify those claims within the selected date range
"RTN","IBCEMSR6",16,0)
 . S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"AP",IBDT,IBIFN)) Q:'IBIFN  D
"RTN","IBCEMSR6",17,0)
 . . S IBBILZ=$G(^DGCR(399,IBIFN,0)),IBRTN=$P(IBBILZ,U,7),IBDV=+$P(IBBILZ,U,22)  ; Get Rate Type and division
"RTN","IBCEMSR6",18,0)
 . . Q:$P(IBBILZ,U,13)'=4  ; don't include canceled claims
"RTN","IBCEMSR6",19,0)
 . . Q:'$D(IBDIVS(IBDV))  ; Not one of the selected Divisions
"RTN","IBCEMSR6",20,0)
 . . S TOTCNT=TOTCNT+1  ; Accumulate Total Printed for selected divisions.
"RTN","IBCEMSR6",21,0)
 . . I $P($G(^DGCR(399,IBIFN,"TX")),U,8)'=1 Q   ; Is the Bill "FORCE LOCAL PRINT"?
"RTN","IBCEMSR6",22,0)
 . . ; don't include US Labor Dept claims
"RTN","IBCEMSR6",23,0)
 . . S IBINS=$$CURR^IBCEF2(IBIFN) Q:$D(VARRAY("IBULD",IBINS))
"RTN","IBCEMSR6",24,0)
 . . ; don't count claims where EDI is inactive (user has to print those)
"RTN","IBCEMSR6",25,0)
 . . Q:$$INSOK^IBCEF4(IBINS)'=1
"RTN","IBCEMSR6",26,0)
 . . Q:'$D(VARRAY("RTYPES",IBRTN))  ;Is this one of the selected Rate Types?
"RTN","IBCEMSR6",27,0)
 . . S IBTOP=+$P($G(^IBA(355.3,+$$POLICY^IBCEF(IBIFN,18),0)),U,9)  ; Get Plan Type
"RTN","IBCEMSR6",28,0)
 . . Q:'$D(VARRAY("IBTOP",IBTOP))   ;Is this one of the selected Plan Types?
"RTN","IBCEMSR6",29,0)
 . . S RCX=0
"RTN","IBCEMSR6",30,0)
 . . S (IBRVCDS,X)="" F  S X=$O(^DGCR(399,IBIFN,"RC","B",X)) Q:X=""  D  Q:RCX
"RTN","IBCEMSR6",31,0)
 . . . I $D(VARRAY("XRVCDS",X)) S RCX=1 Q   ; Bill contains a Revenue Code Exclusion.
"RTN","IBCEMSR6",32,0)
 . . . S IBRVCDS=$S(IBRVCDS="":X,1:IBRVCDS_","_X)  ; Get Revenue Codes.
"RTN","IBCEMSR6",33,0)
 . . Q:RCX=1  ; bill contains at least one of the excluded revenue codes
"RTN","IBCEMSR6",34,0)
 . . S LOCCNT=LOCCNT+1  ; Accumulate Only Locally Printed that could have gone electronically and meet all the search criteria.
"RTN","IBCEMSR6",35,0)
 . . S IBRTDS=$G(VARRAY("RTYPES",IBRTN)) ; Get the Rate Type Description
"RTN","IBCEMSR6",36,0)
 . . S IBPTYP=$G(VARRAY("IBTOP",IBTOP))  ; Get Plan Type name
"RTN","IBCEMSR6",37,0)
 . . S BILLNO=$$BN1^PRCAFN(IBIFN)   ; Get external CLAIM # DBIA #380
"RTN","IBCEMSR6",38,0)
 . . S INSCO=$P($G(^DIC(36,IBINS,0)),U)  ; Get Insurance Company Name
"RTN","IBCEMSR6",39,0)
 . . S INSADD=$$CURRINS^IBCEPTC2(IBIFN)  ; Get Insurance Company Address
"RTN","IBCEMSR6",40,0)
 . . S IBFTYP=$P($G(^IBE(353,+$P(IBBILZ,U,19),0)),U) I IBFTYP="" S IBFTYP="UNKNOWN"  ; Get the Bill's Form Type.
"RTN","IBCEMSR6",41,0)
 . . S IBTYPE=$S($P(IBBILZ,U,5)>2:"O",1:"I")_"/"_$S($P(IBBILZ,U,27)=1:"I",$P(IBBILZ,U,27)=2:"P",1:"")  ; Patient Status / Bill Charge Type
"RTN","IBCEMSR6",42,0)
 . . S IBBLLR=$P($$BILLER^IBCIUT5(IBIFN),U,2)   ; Get Biller
"RTN","IBCEMSR6",43,0)
 . . ; GATHER REPORTABLE DATA AND STORE ACCORDING TO THE VALUE OF IBSORT INTO ^TMP($J,"IBCEMSRP-DATA")!!!
"RTN","IBCEMSR6",44,0)
 . . S IBSFLD=$S(IBSRT="I":INSCO,IBSRT="R":IBRTDS,IBSRT="F":IBFTYP,IBSRT="P":IBPTYP,1:IBBLLR)
"RTN","IBCEMSR6",45,0)
 . . ; if sorted by insurance company, add address to subheader
"RTN","IBCEMSR6",46,0)
 . . S:IBSRT="I" ^TMP($J,"IBCEMSRP-DATA",INSCO)=INSADD
"RTN","IBCEMSR6",47,0)
 . . S ^TMP($J,"IBCEMSRP-DATA",IBSFLD,BILLNO)=IBTYPE_U_IBRTDS_U_IBPTYP_U_$G(IBDIVS(IBDV))_U_IBBLLR_U_INSCO_U_INSADD
"RTN","IBCEMSR6",48,0)
 . . S ^TMP($J,"IBCEMSRP-DATA",IBSFLD,BILLNO,"RVCDS")=IBRVCDS
"RTN","IBCEMSR6",49,0)
 S ^TMP($J,"IBCEMSRP-DATA")=LOCCNT_U_TOTCNT
"RTN","IBCEMSR6",50,0)
 Q
"RTN","IBCEMSR6",51,0)
 ;
"RTN","IBCEMSR6",52,0)
INIT ; come here to set up search criteria
"RTN","IBCEMSR6",53,0)
 ; Get ien of US Labor Department payer (cover all possible name variations)
"RTN","IBCEMSR6",54,0)
 S IBULD=$O(^DIC(36,"B","US LABOR DEPARTMENT","")) S:IBULD'="" VARRAY("IBULD",IBULD)=""
"RTN","IBCEMSR6",55,0)
 S IBULD=$O(^DIC(36,"B","US DEPT OF LABOR","")) S:IBULD'="" VARRAY("IBULD",IBULD)=""
"RTN","IBCEMSR6",56,0)
 S IBULD=$O(^DIC(36,"B","US DEPARTMENT OF LABOR","")) S:IBULD'="" VARRAY("IBULD",IBULD)=""
"RTN","IBCEMSR6",57,0)
 ; handle claims that do not have a type of plan
"RTN","IBCEMSR6",58,0)
 S VARRAY("IBTOP",0)="UNKNOWN"
"RTN","IBCEMSR6",59,0)
 ; Claim does not contain excluded revenue codes from IB Site parameters
"RTN","IBCEMSR6",60,0)
 S IBRVCD="" F  S IBRVCD=$O(^IBE(350.9,1,15,"B",IBRVCD)) Q:'IBRVCD  S VARRAY("XRVCDS",IBRVCD)=""
"RTN","IBCEMSR6",61,0)
 ; Tricare Rate Type is one of the following and type of plan is one of the following:
"RTN","IBCEMSR6",62,0)
 I IBCOT="T" D  Q
"RTN","IBCEMSR6",63,0)
 .F RTDSC="CHAMPVA REIMB. INS.","CHAMPVA","TRICARE REIMB. INS.","TRICARE" S IBRTN=$O(^DGCR(399.3,"B",RTDSC,"")) I IBRTN S VARRAY("RTYPES",IBRTN)=RTDSC
"RTN","IBCEMSR6",64,0)
 .F IBTOPN="TRICARE","CHAMPVA","TRICARE SUPPLEMENTAL" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",65,0)
 ; CPAC Rate Type is one of the following and type of plan is one of the following:
"RTN","IBCEMSR6",66,0)
 I IBCOT="C" D  Q
"RTN","IBCEMSR6",67,0)
 .F RTDSC="CRIME VICTIM","NO FAULT INS.","REIMBURSABLE INS.","TORT FEASOR","WORKERS' COMP." S IBRTN=$O(^DGCR(399.3,"B",RTDSC,"")) I IBRTN S VARRAY("RTYPES",IBRTN)=RTDSC
"RTN","IBCEMSR6",68,0)
 .F IBTOPN="ACCIDENT AND HEALTH INSURANCE","AUTOMOBILE","CARVE-OUT","CATASTROPHIC INSURANCE","COMPREHENSIVE MAJOR MEDICAL" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",69,0)
 .F IBTOPN="HEALTH MAINTENANCE ORGANIZ","INCOME PROTECTION (INDEMNITY)","INDIVIDUAL PRACTICE ASSOCATION (IPA)" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",70,0)
 .F IBTOPN="INPATIENT (BASIC HOSPITAL)","LABS, PROCEDURES, X-RAY, ETC. (ONLY)","MANAGED CARE SYSTEM (MCS)","MEDI-CAL","MEDICAID" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",71,0)
 .F IBTOPN="MEDICAL EXPENSE (OPT/PROF)","MEDICARE SECONDARY (B EXC)","MEDICARE SECONDARY (NO B EXC)","MEDICARE SUPPLEMENTAL" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",72,0)
 .F IBTOPN="MEDICARE/MEDICAID (MEDI-CAL)","MEDIGAP PLAN A","MEDIGAP PLAN B","MEDIGAP PLAN C","MEDIGAP PLAN D","MEDIGAP PLAN F" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",73,0)
 .F IBTOPN="MEDIGAP PLAN G","MEDIGAP PLAN K","MEDIGAP PLAN L","MEDIGAP PLAN M","MEDIGAP PLAN N","MENTAL HEALTH","POINT OF SERVICE" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",74,0)
 .F IBTOPN="PREFERRED PROVIDER ORGANIZATION (PPO)","PREPAID GROUP PRACTICE PLAN","PRESCRIPTION","RETIREE","SPECIAL CLASS INSURANCE" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",75,0)
 .F IBTOPN="SPECIAL RISK INSURANCE","SPECIFIED DISEASE INSURANCE","SURGICAL EXPENSE INSURANCE","WORKERS' COMPENSATION INSURANCE" S IBTOP=$O(^IBE(355.1,"B",IBTOPN,"")) I IBTOP S VARRAY("IBTOP",IBTOP)=IBTOPN
"RTN","IBCEMSR6",76,0)
 Q
"RTN","IBCEMSR6",77,0)
 ;
"RTN","IBCEMSR7")
0^28^B12041405^n/a
"RTN","IBCEMSR7",1,0)
IBCEMSR7 ;ALB/VAD - IB PRINTED CLAIMS REPORT - Print ;09-SEP-2015
"RTN","IBCEMSR7",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBCEMSR7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEMSR7",4,0)
 ;
"RTN","IBCEMSR7",5,0)
REPORT ; - Entry point to print report
"RTN","IBCEMSR7",6,0)
 N EORMSG,IBPAG,IBDTRG,LOCCNT,TOTCNT,TOTLN,IBX,IBQUIT,IBOF,IBDIVN
"RTN","IBCEMSR7",7,0)
 S IBDIVN=$S($D(IBDIVS("ALL")):"ALL",1:"")
"RTN","IBCEMSR7",8,0)
 I IBDIVN="" S IBX="" F  S IBX=$O(IBDIVS(IBX)) Q:IBX=""!(IBX="ALL")  S IBDIVN=$S(IBDIVN="":$G(IBDIVS(IBX)),1:IBDIVN_", "_$G(IBDIVS(IBX)))
"RTN","IBCEMSR7",9,0)
 S IBDTRG=$$DAT3^IBOUTL($E(IBBDT,1,10))_" - "_$$DAT3^IBOUTL($E(IBEDT,1,10))
"RTN","IBCEMSR7",10,0)
 S LOCCNT=+$P($G(^TMP($J,"IBCEMSRP-DATA")),U,1),TOTCNT=+$P($G(^TMP($J,"IBCEMSRP-DATA")),U,2)
"RTN","IBCEMSR7",11,0)
 S IBPAG=0
"RTN","IBCEMSR7",12,0)
 D PRINT
"RTN","IBCEMSR7",13,0)
 S TOTLN="Total Claims:  "_TOTCNT
"RTN","IBCEMSR7",14,0)
 S TOTLN=TOTLN_"    Number of Transmittable Claims Printed:  "_LOCCNT
"RTN","IBCEMSR7",15,0)
 S TOTLN=TOTLN_"    % Of Total Claims Printed:  "_$S(TOTCNT=0:0,1:$J(((LOCCNT/TOTCNT)*100),6,2)_"%")
"RTN","IBCEMSR7",16,0)
 W !!!!,?10,TOTLN
"RTN","IBCEMSR7",17,0)
 K ^TMP($J,"IBCEMSRP-DATA")
"RTN","IBCEMSR7",18,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCEMSR7",19,0)
 W !!!,EORMSG
"RTN","IBCEMSR7",20,0)
 D PAUSE
"RTN","IBCEMSR7",21,0)
 ;
"RTN","IBCEMSR7",22,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCEMSR7",23,0)
 D END
"RTN","IBCEMSR7",24,0)
 Q
"RTN","IBCEMSR7",25,0)
 ;
"RTN","IBCEMSR7",26,0)
END  ; Close Device
"RTN","IBCEMSR7",27,0)
 K IBSORT,VARRAY,IBCOT,IBBDT,IBDIVS,IBEDT,INSADD,ZTREQ,ZTQUEUED
"RTN","IBCEMSR7",28,0)
 D ^%ZISC
"RTN","IBCEMSR7",29,0)
 Q
"RTN","IBCEMSR7",30,0)
 ;
"RTN","IBCEMSR7",31,0)
PRINT ; Print report
"RTN","IBCEMSR7",32,0)
 N SRTFLD,BILLNO,IBDATA,IBRVCDS,IBHDT
"RTN","IBCEMSR7",33,0)
 ; ^TMP($J,"IBCEMSRP-DATA",SRTFLD,BILLNO)=IBTYPE_U_IBRTYP_U_IBPTYP_U_IBDVN_U_IBBLLR_U_INSCO_U_INSADD
"RTN","IBCEMSR7",34,0)
 ; ^TMP($J,"IBCEMSRP-DATA",SRTFLD,BILLNO,"RVCDS")=IBRVCDS
"RTN","IBCEMSR7",35,0)
 S IBHDT=$$FMTE^XLFDT($$NOW^XLFDT,"M")
"RTN","IBCEMSR7",36,0)
 D HEADER
"RTN","IBCEMSR7",37,0)
 S SRTFLD=""
"RTN","IBCEMSR7",38,0)
 F  S SRTFLD=$O(^TMP($J,"IBCEMSRP-DATA",SRTFLD)) Q:SRTFLD=""  D  Q:$G(IBQUIT)=1
"RTN","IBCEMSR7",39,0)
 . I $Y>(IOSL-5) D PAUSE Q:$G(IBQUIT)=1  D HEADER
"RTN","IBCEMSR7",40,0)
 . ; if sorted by insurance company, add address to subheader
"RTN","IBCEMSR7",41,0)
 . I $P(IBSORT,U)="I" S INSADD=$G(^TMP($J,"IBCEMSRP-DATA",SRTFLD))
"RTN","IBCEMSR7",42,0)
 . D SUBHD
"RTN","IBCEMSR7",43,0)
 . S BILLNO=""
"RTN","IBCEMSR7",44,0)
 . F  S BILLNO=$O(^TMP($J,"IBCEMSRP-DATA",SRTFLD,BILLNO)) Q:BILLNO=""  D  Q:$G(IBQUIT)=1
"RTN","IBCEMSR7",45,0)
 . . S IBDATA=$G(^TMP($J,"IBCEMSRP-DATA",SRTFLD,BILLNO))
"RTN","IBCEMSR7",46,0)
 . . S IBRVCDS=$G(^TMP($J,"IBCEMSRP-DATA",SRTFLD,BILLNO,"RVCDS"))
"RTN","IBCEMSR7",47,0)
 . . ;
"RTN","IBCEMSR7",48,0)
 . . I $Y>(IOSL-5) D PAUSE Q:$G(IBQUIT)=1  D HEADER,SUBHD
"RTN","IBCEMSR7",49,0)
 . . ;
"RTN","IBCEMSR7",50,0)
 . . W !,BILLNO,?16,$P(IBDATA,U),?22,$E($P(IBDATA,U,2),1,20),?45,$E($P(IBDATA,U,3),1,25),?73,$E($P(IBDATA,U,4),1,15),?91,$E($P(IBDATA,U,5),1,15),?109,IBRVCDS     ; <=== IBRVCDS NEEDS ONLY PRINT 6 PER LINE.
"RTN","IBCEMSR7",51,0)
 . . W:$P(IBSORT,U)'="I" !?6,$P(IBDATA,U,6),"  ",$P(IBDATA,U,7)
"RTN","IBCEMSR7",52,0)
 . . ;
"RTN","IBCEMSR7",53,0)
 Q
"RTN","IBCEMSR7",54,0)
 ;
"RTN","IBCEMSR7",55,0)
HEADER ; Print header
"RTN","IBCEMSR7",56,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBCEMSR7",57,0)
 S IBPAG=IBPAG+1
"RTN","IBCEMSR7",58,0)
 W !,"Printed Claim Report"
"RTN","IBCEMSR7",59,0)
 W ?IOM-85,IBDTRG,?IOM-12,"Page: ",IBPAG
"RTN","IBCEMSR7",60,0)
 W !,"Run for: "_$S(IBCOT="C":"CPAC",1:"TRICARE/CHAMPVA")_", Divisions: "_IBDIVN,?IOM-12,$E(IBHDT,1,12)
"RTN","IBCEMSR7",61,0)
 W !,"Sorted by: "_$P(IBSORT,U,2)
"RTN","IBCEMSR7",62,0)
 Q
"RTN","IBCEMSR7",63,0)
 ;
"RTN","IBCEMSR7",64,0)
SUBHD ; Print sub-header
"RTN","IBCEMSR7",65,0)
 W !!,SRTFLD W:$P(IBSORT,U)="I" "  "_$G(INSADD)
"RTN","IBCEMSR7",66,0)
 W !," Claim #",?16,"Type",?22,"RateType",?45,"PlanType",?73,"Division",?91,"Biller",?109,"RevCode"
"RTN","IBCEMSR7",67,0)
 W:$P(IBSORT,U)'="I" !?6,"InsuranceCo"
"RTN","IBCEMSR7",68,0)
 W !,$TR($J("",131)," ","-")
"RTN","IBCEMSR7",69,0)
 Q
"RTN","IBCEMSR7",70,0)
 ;
"RTN","IBCEMSR7",71,0)
PAUSE ; Pause for screen output.
"RTN","IBCEMSR7",72,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBCEMSR7",73,0)
 N IBJJ,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBCEMSR7",74,0)
 F IBJJ=$Y:1:(IOSL-7) W !
"RTN","IBCEMSR7",75,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQUIT=1
"RTN","IBCEMSR7",76,0)
 Q
"RTN","IBCEMSRP")
0^26^B11656625^n/a
"RTN","IBCEMSRP",1,0)
IBCEMSRP ;ALB/VAD - IB PRINTED CLAIMS REPORT ;09-SEP-2015
"RTN","IBCEMSRP",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBCEMSRP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEMSRP",4,0)
 ;
"RTN","IBCEMSRP",5,0)
 ; access to ^DG(40.8 allowed with DBIA#417
"RTN","IBCEMSRP",6,0)
 ;
"RTN","IBCEMSRP",7,0)
EN ;
"RTN","IBCEMSRP",8,0)
 N IBQ,IBCOT,IBDIVS,IBBDT,IBEDT,IBSORT
"RTN","IBCEMSRP",9,0)
 S IBQ=0 ; quit flag
"RTN","IBCEMSRP",10,0)
 ; Prompts to the user:
"RTN","IBCEMSRP",11,0)
 D COT Q:IBQ  ; (C)PAC or (T)RICARE/CHAMPVA
"RTN","IBCEMSRP",12,0)
 D DIVS Q:IBQ  ; Division(s)
"RTN","IBCEMSRP",13,0)
 D DTR Q:IBQ  ; From-To date range
"RTN","IBCEMSRP",14,0)
 D SORTBY Q:IBQ  ; Sort By?
"RTN","IBCEMSRP",15,0)
 W !!,"Report requires 132 Columns"
"RTN","IBCEMSRP",16,0)
 D DEVICE Q:IBQ
"RTN","IBCEMSRP",17,0)
 D RUN
"RTN","IBCEMSRP",18,0)
 Q
"RTN","IBCEMSRP",19,0)
 ;
"RTN","IBCEMSRP",20,0)
COT N DIR,DIRUT,Y
"RTN","IBCEMSRP",21,0)
 W ! S DIR(0)="SAO^C:(C)PAC;T:(T)RICARE/CHAMPVA"
"RTN","IBCEMSRP",22,0)
 S DIR("A")="RUN for (C)PAC or (T)RICARE/CHAMPVA: ",DIR("B")="C" D ^DIR
"RTN","IBCEMSRP",23,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSRP",24,0)
 S IBCOT=Y
"RTN","IBCEMSRP",25,0)
 Q
"RTN","IBCEMSRP",26,0)
 ;
"RTN","IBCEMSRP",27,0)
DIVS N DIC,DIR,DIRUT,Y,X,IBDIV,IBDVN
"RTN","IBCEMSRP",28,0)
 W ! S DIR("B")="ALL",DIR("A")="Run this report for All divisions or Selected Divisions: "
"RTN","IBCEMSRP",29,0)
 S DIR(0)="SA^ALL:All divisions;S:Selected divisions" D ^DIR
"RTN","IBCEMSRP",30,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSRP",31,0)
 ; if user selects all divisions, gather names and iens (DBIA#417)
"RTN","IBCEMSRP",32,0)
 I X="ALL" S IBDIVS("ALL")=1 D  Q
"RTN","IBCEMSRP",33,0)
 .S IBDIVS(0)="UNKNOWN"  ; older claims may not have a division
"RTN","IBCEMSRP",34,0)
 .S IBDIV="" F  S IBDIV=$O(^DG(40.8,"B",IBDIV)) Q:IBDIV=""  D
"RTN","IBCEMSRP",35,0)
 ..S IBDVN="" F  S IBDVN=$O(^DG(40.8,"B",IBDIV,IBDVN)) Q:'IBDVN  D
"RTN","IBCEMSRP",36,0)
 ...S IBDIVS(+IBDVN)=IBDIV
"RTN","IBCEMSRP",37,0)
 ; Collect divisions
"RTN","IBCEMSRP",38,0)
 F  D  Q:Y'>0
"RTN","IBCEMSRP",39,0)
 . W ! S DIC("A")="Division: ",DIC=40.8,DIC(0)="AEQM" D ^DIC
"RTN","IBCEMSRP",40,0)
 . I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSRP",41,0)
 . I Y'>0 Q
"RTN","IBCEMSRP",42,0)
 . S IBDIVS(+Y)=$P(Y,U,2)
"RTN","IBCEMSRP",43,0)
 I '$D(IBDIVS)  S IBQ=1 Q  ; None selected
"RTN","IBCEMSRP",44,0)
 Q
"RTN","IBCEMSRP",45,0)
 ;
"RTN","IBCEMSRP",46,0)
DTR ;date range
"RTN","IBCEMSRP",47,0)
 N %DT,Y
"RTN","IBCEMSRP",48,0)
 S IBBDT=DT-7,IBEDT=DT
"RTN","IBCEMSRP",49,0)
 S %DT="AEX"
"RTN","IBCEMSRP",50,0)
 S %DT("A")="Earliest Printed Date: ",%DT("B")="T-7"
"RTN","IBCEMSRP",51,0)
 W ! D ^%DT K %DT
"RTN","IBCEMSRP",52,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSRP",53,0)
 S IBBDT=+Y
"RTN","IBCEMSRP",54,0)
 S %DT="AEX"
"RTN","IBCEMSRP",55,0)
 S %DT("A")="Latest Printed Date: ",%DT("B")="T"
"RTN","IBCEMSRP",56,0)
 D ^%DT K %DT
"RTN","IBCEMSRP",57,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSRP",58,0)
 S IBEDT=+Y
"RTN","IBCEMSRP",59,0)
 Q
"RTN","IBCEMSRP",60,0)
 ;
"RTN","IBCEMSRP",61,0)
SORTBY ;
"RTN","IBCEMSRP",62,0)
 N DIR,DTOUT,DUOUT
"RTN","IBCEMSRP",63,0)
 S DIR(0)="SBMA^I:Insurance Company;B:Authorizing Biller;R:Rate Type;F:Form Type;P:Type of Plan"
"RTN","IBCEMSRP",64,0)
 S DIR("A")="Sort Report By: ",DIR("B")="Authorizing Biller"
"RTN","IBCEMSRP",65,0)
 S DIR("?")=" ",DIR("?",1)="This determines the criteria by which the claims will"
"RTN","IBCEMSRP",66,0)
 S DIR("?",2)="be displayed." D ^DIR K DIR
"RTN","IBCEMSRP",67,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","IBCEMSRP",68,0)
 S IBSORT=Y_U_$G(Y(0))
"RTN","IBCEMSRP",69,0)
 Q
"RTN","IBCEMSRP",70,0)
 ;
"RTN","IBCEMSRP",71,0)
DEVICE ; Get the Output Device.
"RTN","IBCEMSRP",72,0)
 N %ZIS,ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCEMSRP",73,0)
 K IO("Q")
"RTN","IBCEMSRP",74,0)
 S %ZIS="QM" W ! D ^%ZIS I POP S IBQ=1 Q
"RTN","IBCEMSRP",75,0)
 ;
"RTN","IBCEMSRP",76,0)
 I $D(IO("Q")) D  S IBQ=1 Q
"RTN","IBCEMSRP",77,0)
 . S ZTRTN="RUN^IBCEMSRP",ZTDESC="IB PRINTED CLAIMS REPORT"
"RTN","IBCEMSRP",78,0)
 . S ZTSAVE("IBBDT")="",ZTSAVE("IBEDT")="",ZTSAVE("IBCOT")="",ZTSAVE("IBSORT")="",ZTSAVE("IBDIVS(")=""
"RTN","IBCEMSRP",79,0)
 . D ^%ZTLOAD
"RTN","IBCEMSRP",80,0)
 . D HOME^%ZIS
"RTN","IBCEMSRP",81,0)
 Q
"RTN","IBCEMSRP",82,0)
 ;
"RTN","IBCEMSRP",83,0)
RUN ; Begin the execution of the report.
"RTN","IBCEMSRP",84,0)
 D SRCH^IBCEMSR6  ; Search, Sort and Store the data based upon the criteria that was entered by the user.
"RTN","IBCEMSRP",85,0)
 U IO
"RTN","IBCEMSRP",86,0)
 D REPORT^IBCEMSR7    ; Print the report from the formatted array.
"RTN","IBCEMSRP",87,0)
 Q
"RTN","IBCEMSRP",88,0)
 ;
"RTN","IBCEMU2")
0^22^B52413436^B50579600
"RTN","IBCEMU2",1,0)
IBCEMU2 ;ALB/DSM - IB MRA Utility ;01-MAY-2003
"RTN","IBCEMU2",2,0)
 ;;2.0;INTEGRATED BILLING;**155,320,349,436,547**;21-MAR-94;Build 119
"RTN","IBCEMU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEMU2",4,0)
 ;
"RTN","IBCEMU2",5,0)
 Q
"RTN","IBCEMU2",6,0)
 ;
"RTN","IBCEMU2",7,0)
QMRA ; This is a background procedure that is spun off of the IB BATCH
"RTN","IBCEMU2",8,0)
 ; Print option. This process scans a queue in ^XTMP("IBMRA"_#,$J) and checks
"RTN","IBCEMU2",9,0)
 ; each Bill to see if a printable MRA exist, if so, prints them. MRA's print
"RTN","IBCEMU2",10,0)
 ; on the device associated with the 'Bill Addendum' Form Type.
"RTN","IBCEMU2",11,0)
 ; This process doesn't interact with users.
"RTN","IBCEMU2",12,0)
 ;
"RTN","IBCEMU2",13,0)
 ; IB*2*320:  MCS - Resubmit by Print produces a scratch global also
"RTN","IBCEMU2",14,0)
 ;            ^XTMP("IBCFP6",$J,.... for MRA's to print here
"RTN","IBCEMU2",15,0)
 ;
"RTN","IBCEMU2",16,0)
 ; Input:
"RTN","IBCEMU2",17,0)
 ;      IBJ   = $J of starting job
"RTN","IBCEMU2",18,0)
 ;      IBFTP = "IBMRA"_# (ien of form type) or "IBCFP6"
"RTN","IBCEMU2",19,0)
 ;
"RTN","IBCEMU2",20,0)
 N IBS1,IBS2,IBS3,IBIFN,IBQ,IBPGN
"RTN","IBCEMU2",21,0)
 S (IBS1,IBIFN,IBQ)=0
"RTN","IBCEMU2",22,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""  D  I IBQ Q
"RTN","IBCEMU2",23,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""  D  I IBQ Q
"RTN","IBCEMU2",24,0)
 . . S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""  D  I IBQ Q
"RTN","IBCEMU2",25,0)
 . . . S IBIFN=0 F  S IBIFN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBIFN)) Q:IBIFN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCEMU2",26,0)
 . . . . I $$MRAEXIST^IBCEMU1(IBIFN) D PROC^IBCEMRAA W @IOF ;must have IBIFN set
"RTN","IBCEMU2",27,0)
 K ^XTMP(IBFTP,IBJ) S ZTREQ="@"
"RTN","IBCEMU2",28,0)
 Q  ;QMRA
"RTN","IBCEMU2",29,0)
 ;
"RTN","IBCEMU2",30,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCEMU2",31,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCEMU2",32,0)
 Q +$G(ZTSTOP)
"RTN","IBCEMU2",33,0)
 ;
"RTN","IBCEMU2",34,0)
 ;
"RTN","IBCEMU2",35,0)
STAT(IBIFN,STATUS,MRAONLY) ; Update the review status in the EOB file
"RTN","IBCEMU2",36,0)
 ; This procedure updates field .16 in file 361.1 for all EOB's for
"RTN","IBCEMU2",37,0)
 ; the given bill#
"RTN","IBCEMU2",38,0)
 ; 
"RTN","IBCEMU2",39,0)
 ;   IBIFN   - Internal Bill# (required)
"RTN","IBCEMU2",40,0)
 ;   STATUS  - Internal Value of the Review Status field (required)
"RTN","IBCEMU2",41,0)
 ;   MRAONLY - Optional Flag with a default of 0 if not passed in
"RTN","IBCEMU2",42,0)
 ;             1:only update MRA EOB's for this bill
"RTN","IBCEMU2",43,0)
 ;             0:update all EOB's for this bill
"RTN","IBCEMU2",44,0)
 ;             2:only update non-MRA EOB's for this bill (IB*2.0*547)
"RTN","IBCEMU2",45,0)
 ;
"RTN","IBCEMU2",46,0)
 NEW RESULT,IBEOB,IBM
"RTN","IBCEMU2",47,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DICR,DIG,DIH,DISYS,DIU,DIV,DIW,DQ,DIERR,X,Y
"RTN","IBCEMU2",48,0)
 S IBIFN=+$G(IBIFN),STATUS=$G(STATUS)
"RTN","IBCEMU2",49,0)
 S MRAONLY=$G(MRAONLY,0)
"RTN","IBCEMU2",50,0)
 ;
"RTN","IBCEMU2",51,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G STATX    ; no EOB's for this bill
"RTN","IBCEMU2",52,0)
 D CHK^DIE(361.1,.16,,STATUS,.RESULT)
"RTN","IBCEMU2",53,0)
 I RESULT="^" G STATX                    ; invalid status passed in
"RTN","IBCEMU2",54,0)
 ;
"RTN","IBCEMU2",55,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",56,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCEMU2",57,0)
 . S IBM=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEMU2",58,0)
 . I $P(IBM,U,16)=STATUS Q           ; no change
"RTN","IBCEMU2",59,0)
 . ;I MRAONLY,'$P(IBM,U,4) Q          ; skip because of parameter
"RTN","IBCEMU2",60,0)
 . I MRAONLY=1,'$P(IBM,U,4) Q          ; skip because of parameter
"RTN","IBCEMU2",61,0)
 . I MRAONLY=2,$P(IBM,U,4) Q          ; skip because of parameter (don't update MRA)
"RTN","IBCEMU2",62,0)
 . S DIE=361.1,DA=IBEOB,DR=".16////"_STATUS D ^DIE
"RTN","IBCEMU2",63,0)
 . Q
"RTN","IBCEMU2",64,0)
 ;
"RTN","IBCEMU2",65,0)
STATX ;
"RTN","IBCEMU2",66,0)
 Q
"RTN","IBCEMU2",67,0)
 ;
"RTN","IBCEMU2",68,0)
MRAWL(IBIFN) ; Do any MRA EOB's for this bill appear on the worklist?
"RTN","IBCEMU2",69,0)
 ;
"RTN","IBCEMU2",70,0)
 ; This function returns 1 if at least one MRA EOB for the given bill
"RTN","IBCEMU2",71,0)
 ; appears on the MRA management worklist.  Otherwise, this function
"RTN","IBCEMU2",72,0)
 ; returns 0.
"RTN","IBCEMU2",73,0)
 ;
"RTN","IBCEMU2",74,0)
 NEW OK,IBEOB
"RTN","IBCEMU2",75,0)
 S OK=0,IBIFN=+$G(IBIFN)
"RTN","IBCEMU2",76,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G MRAWLX     ; no EOB's for this bill
"RTN","IBCEMU2",77,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",78,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:OK
"RTN","IBCEMU2",79,0)
 . I $$ELIG^IBCECOB1(IBEOB) S OK=1
"RTN","IBCEMU2",80,0)
 . Q
"RTN","IBCEMU2",81,0)
MRAWLX ;
"RTN","IBCEMU2",82,0)
 Q OK
"RTN","IBCEMU2",83,0)
 ;
"RTN","IBCEMU2",84,0)
TXSTS(IBIFN,IB364,REJFLG,IBZ) ; Claim transmission status information
"RTN","IBCEMU2",85,0)
 ; Input   IBIFN - required
"RTN","IBCEMU2",86,0)
 ;         IB364 - optional (defaults to most recent transmission#)
"RTN","IBCEMU2",87,0)
 ; Output  REJFLG (pass by reference) - 1/0 flag if any rejection status
"RTN","IBCEMU2",88,0)
 ;                                      messages on file
"RTN","IBCEMU2",89,0)
 ;         IBZ (pass by reference) - array of information
"RTN","IBCEMU2",90,0)
 ;
"RTN","IBCEMU2",91,0)
 NEW IEN,SMCNT,SEV,BCH,BCHD0,BCHD1
"RTN","IBCEMU2",92,0)
 S REJFLG=0 K IBZ
"RTN","IBCEMU2",93,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN G TXSTSX
"RTN","IBCEMU2",94,0)
 S IB364=+$G(IB364)
"RTN","IBCEMU2",95,0)
 I 'IB364 S IB364=$$LAST364^IBCEF4(IBIFN) I 'IB364 G TXSTSX
"RTN","IBCEMU2",96,0)
 I $P($G(^IBA(364,IB364,0)),U,1)'=IBIFN G TXSTSX
"RTN","IBCEMU2",97,0)
 S IEN=0,SMCNT=0
"RTN","IBCEMU2",98,0)
 F  S IEN=$O(^IBM(361,"AERR",IB364,IEN)) Q:'IEN  D
"RTN","IBCEMU2",99,0)
 . S SMCNT=SMCNT+1
"RTN","IBCEMU2",100,0)
 . S SEV=$P($G(^IBM(361,IEN,0)),U,3)   ; status message severity
"RTN","IBCEMU2",101,0)
 . I SEV="R" S REJFLG=1
"RTN","IBCEMU2",102,0)
 . Q
"RTN","IBCEMU2",103,0)
 S BCH=+$P($G(^IBA(364,IB364,0)),U,2)  ; batch ien
"RTN","IBCEMU2",104,0)
 S BCHD0=$G(^IBA(364.1,BCH,0))
"RTN","IBCEMU2",105,0)
 S BCHD1=$G(^IBA(364.1,BCH,1))
"RTN","IBCEMU2",106,0)
 S IBZ("DATE LAST SENT")=$P(BCHD1,U,3)
"RTN","IBCEMU2",107,0)
 S IBZ("NUMBER OF STATUS MESSAGES")=SMCNT
"RTN","IBCEMU2",108,0)
 S IBZ("BATCH NUMBER")=$P(BCHD0,U,1)
"RTN","IBCEMU2",109,0)
 S IBZ("TRANSMISSION STATUS")=$P($G(^IBA(364,IB364,0)),U,3)
"RTN","IBCEMU2",110,0)
TXSTSX ;
"RTN","IBCEMU2",111,0)
 Q
"RTN","IBCEMU2",112,0)
 ;
"RTN","IBCEMU2",113,0)
MRACALC(IBEOB,IBIFN,AR,PRCASV) ; Calculates Two Amounts:
"RTN","IBCEMU2",114,0)
 ;  Unreimbursable Medicare Expense and Medicare Contract Adjustment
"RTN","IBCEMU2",115,0)
 ;  Amount for a given EOB.
"RTN","IBCEMU2",116,0)
 ;
"RTN","IBCEMU2",117,0)
 ; Input   IBIFN= ien of Claim file 399 - Required
"RTN","IBCEMU2",118,0)
 ;         IBEOB= ien of EOB file 361.1 - Required
"RTN","IBCEMU2",119,0)
 ;         AR=    Flag indicating this was called from AR function
"RTN","IBCEMU2",120,0)
 ; Input/Output  PRCASV= array with the two calculated values
"RTN","IBCEMU2",121,0)
 ;         PRCASV("MEDURE")=Unreimbursable Medicare Expense
"RTN","IBCEMU2",122,0)
 ;         PRCASV("MEDCA")=Medicare Contract Adjustment Amount
"RTN","IBCEMU2",123,0)
 ;
"RTN","IBCEMU2",124,0)
 ; For multiple EOB's, add up the calculated values across EOB's
"RTN","IBCEMU2",125,0)
 ;
"RTN","IBCEMU2",126,0)
 N I,LNLVL,EOBADJ,IBCOBN,INPAT,FRMTYP
"RTN","IBCEMU2",127,0)
 ;
"RTN","IBCEMU2",128,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)       ;Form Type 2=1500; 3=UB
"RTN","IBCEMU2",129,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)     ;Inpat/Outpat Flag
"RTN","IBCEMU2",130,0)
 S AR=$G(AR,0)    ;initialize AR flag
"RTN","IBCEMU2",131,0)
 F I=0,1,2 S IBEOB(I)=$G(^IBM(361.1,IBEOB,I))
"RTN","IBCEMU2",132,0)
 I $P(IBEOB(0),U,4)'=1 Q  ;make sure it's an MRA
"RTN","IBCEMU2",133,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) ;get current bill sequence
"RTN","IBCEMU2",134,0)
 ; Make sure we're on the right insurance sequence when AR flag is on
"RTN","IBCEMU2",135,0)
 I AR I $P(IBEOB(0),U,15)'=(IBCOBN-1) Q
"RTN","IBCEMU2",136,0)
 ;
"RTN","IBCEMU2",137,0)
 ; Unreimburseable Medicare Expense (same calc regardless of form type)
"RTN","IBCEMU2",138,0)
 ; For multiple EOB's, add up the amounts across EOB's
"RTN","IBCEMU2",139,0)
 S PRCASV("MEDURE")=$G(PRCASV("MEDURE"))+IBEOB(1)
"RTN","IBCEMU2",140,0)
 ;
"RTN","IBCEMU2",141,0)
 ; Handle CMS-1500 Form Type Next:
"RTN","IBCEMU2",142,0)
 I FRMTYP=2 D MEDCARE(IBEOB,.PRCASV) Q
"RTN","IBCEMU2",143,0)
 ;
"RTN","IBCEMU2",144,0)
 ; Handle UB Form Type Next:
"RTN","IBCEMU2",145,0)
 ; If Inpatient Calculate from Claim level data
"RTN","IBCEMU2",146,0)
 I INPAT D  Q  ;
"RTN","IBCEMU2",147,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMU2",148,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",149,0)
 ;
"RTN","IBCEMU2",150,0)
 ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",151,0)
 D MEDCARE(IBEOB,.PRCASV)
"RTN","IBCEMU2",152,0)
 Q  ;MRACALC
"RTN","IBCEMU2",153,0)
 ;
"RTN","IBCEMU2",154,0)
MEDCARE(IBEOB,PRCASV) ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",155,0)
 N LNLVL,EOBADJ
"RTN","IBCEMU2",156,0)
 S LNLVL=0
"RTN","IBCEMU2",157,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  D  ;
"RTN","IBCEMU2",158,0)
 . K EOBADJ
"RTN","IBCEMU2",159,0)
 . M EOBADJ=^IBM(361.1,IBEOB,15,LNLVL,1)
"RTN","IBCEMU2",160,0)
 . ; Total up the Medicare Contract Adjustment across ALL Service Lines
"RTN","IBCEMU2",161,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",162,0)
 Q  ;MEDCARE
"RTN","IBCEMU2",163,0)
 ;
"RTN","IBCEMU2",164,0)
CALCMCA(EOBADJ) ; FUNCTION - Calculate Medicare Contract Adjustment
"RTN","IBCEMU2",165,0)
 ; Sums up Amounts on ALL Reason Codes under ALL Group Codes = 'CO' and
"RTN","IBCEMU2",166,0)
 ; returns that value (which is Medicare Contract Adjustment).
"RTN","IBCEMU2",167,0)
 ;
"RTN","IBCEMU2",168,0)
 ; Input  EOBADJ = Array of Group Codes & Reason Codes from either the Claim 
"RTN","IBCEMU2",169,0)
 ;                 Level (10) or Service Line Level (15) of EOB file (#361.1)
"RTN","IBCEMU2",170,0)
 ; Output  returns Medicare Contract Adjustment
"RTN","IBCEMU2",171,0)
 ;
"RTN","IBCEMU2",172,0)
 N GRPLVL,RSNLVL,RSNAMT,MCA
"RTN","IBCEMU2",173,0)
 S (GRPLVL,MCA)=0
"RTN","IBCEMU2",174,0)
 F  S GRPLVL=$O(EOBADJ(GRPLVL)) Q:'GRPLVL  D  ;
"RTN","IBCEMU2",175,0)
 . I $P($G(EOBADJ(GRPLVL,0)),U)'="CO" Q
"RTN","IBCEMU2",176,0)
 . S RSNLVL=0
"RTN","IBCEMU2",177,0)
 . F  S RSNLVL=$O(EOBADJ(GRPLVL,1,RSNLVL)) Q:'RSNLVL  D  ;
"RTN","IBCEMU2",178,0)
 . . S RSNAMT=$P($G(EOBADJ(GRPLVL,1,RSNLVL,0)),U,2)
"RTN","IBCEMU2",179,0)
 . . S MCA=MCA+RSNAMT
"RTN","IBCEMU2",180,0)
 Q MCA  ;CALCMCA
"RTN","IBCEMU2",181,0)
 ;
"RTN","IBCEMU2",182,0)
ALLOWED(IBEOB) ; Returns Total Allowed Amount by summing up all Allowed Amounts 
"RTN","IBCEMU2",183,0)
 ; from Line Level Adjustment
"RTN","IBCEMU2",184,0)
 ; Input: IBEOB = ien of EOB file (361.1)
"RTN","IBCEMU2",185,0)
 ; 
"RTN","IBCEMU2",186,0)
 N LNLVL,LNLVLD,ALWD,TOTALWD
"RTN","IBCEMU2",187,0)
 S (LNLVL,TOTALWD)=0
"RTN","IBCEMU2",188,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D
"RTN","IBCEMU2",189,0)
 . S ALWD=$P(LNLVLD,U,13),TOTALWD=TOTALWD+ALWD   ; Allowed Amount
"RTN","IBCEMU2",190,0)
 Q TOTALWD  ;ALLOWED
"RTN","IBCEMU2",191,0)
 ;
"RTN","IBCEMU2",192,0)
MRATYPE(BILL,ARDATE) ; Function - determines the MRA Receivable Type for a Third
"RTN","IBCEMU2",193,0)
 ; Party Receivable. This is accomplished by comparing DATE MRA FIRST ACTIVATED
"RTN","IBCEMU2",194,0)
 ; with AR Activation Date for the Bill.
"RTN","IBCEMU2",195,0)
 ; 
"RTN","IBCEMU2",196,0)
 ; Input     BILL= ien of a given Bill Number (Required)
"RTN","IBCEMU2",197,0)
 ;         ARDATE= Date Account Receivable was Activated - date only  (Required)
"RTN","IBCEMU2",198,0)
 ;
"RTN","IBCEMU2",199,0)
 ; Output - Possible Types:
"RTN","IBCEMU2",200,0)
 ;          1 = Pre-MRA implementation
"RTN","IBCEMU2",201,0)
 ;          2 = Post MRA Medicare Receivable
"RTN","IBCEMU2",202,0)
 ;          3 = Post MRA non-Medicare Receivable
"RTN","IBCEMU2",203,0)
 ;
"RTN","IBCEMU2",204,0)
 N MRADTACT,MRAMT
"RTN","IBCEMU2",205,0)
 I '$G(ARDATE)!'$G(BILL) Q 1
"RTN","IBCEMU2",206,0)
 ;
"RTN","IBCEMU2",207,0)
 ; get DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",208,0)
 S MRADTACT=$$MRADTACT()
"RTN","IBCEMU2",209,0)
 ;
"RTN","IBCEMU2",210,0)
 ; MRA not Activated at site
"RTN","IBCEMU2",211,0)
 I MRADTACT="" Q 1 ;MRATYPE
"RTN","IBCEMU2",212,0)
 ; 
"RTN","IBCEMU2",213,0)
 ; Bill from pre-MRA implementation era
"RTN","IBCEMU2",214,0)
 I ARDATE<MRADTACT Q 1 ;MRATYPE
"RTN","IBCEMU2",215,0)
 ;
"RTN","IBCEMU2",216,0)
 ; Post-MRA Medicare bill; get Medicare amounts
"RTN","IBCEMU2",217,0)
 S MRAMT=$G(^PRCA(430,BILL,13))
"RTN","IBCEMU2",218,0)
 ; check Medicare Contractual Adjustment Amount
"RTN","IBCEMU2",219,0)
 I $P(MRAMT,U,1) Q 2 ;MRATYPE
"RTN","IBCEMU2",220,0)
 ; check Medicare Unreimburseable Amout
"RTN","IBCEMU2",221,0)
 I $P(MRAMT,U,2) Q 2 ;MRATYPE
"RTN","IBCEMU2",222,0)
 ; check if bill is a Medicare one
"RTN","IBCEMU2",223,0)
 I $$MRAEXIST^IBCEMU1(BILL) Q 2 ;MRATYPE
"RTN","IBCEMU2",224,0)
 ; check if bill is a Medicare Supplemental one
"RTN","IBCEMU2",225,0)
 I $P($$CRIT^IBRFN2(BILL),U)=2 Q 2 ;MRATYPE
"RTN","IBCEMU2",226,0)
 ;
"RTN","IBCEMU2",227,0)
 ; all others are Post-MRA non-Medicare bills
"RTN","IBCEMU2",228,0)
 Q 3 ;MRATYPE
"RTN","IBCEMU2",229,0)
 ;
"RTN","IBCEMU2",230,0)
MRADTACT() ; Function - returns DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",231,0)
 Q $P($G(^IBE(350.9,1,8)),U,13)
"RTN","IBCEMU2",232,0)
 ;
"RTN","IBCEMU2",233,0)
 ;** start IB*2.0*436 **
"RTN","IBCEMU2",234,0)
MRACALC2(IBIFN) ; Function - This tag will add all EOB's for a given claim number. 
"RTN","IBCEMU2",235,0)
 ; Returns the sum of the Medicare Contractual Adj Amt
"RTN","IBCEMU2",236,0)
 ;
"RTN","IBCEMU2",237,0)
 ; Input:  IBIFN            - ien of Claim file 399
"RTN","IBCEMU2",238,0)
 ; Output: PRCASV("MEDCA")  - Medicare Contractual Adj Amt
"RTN","IBCEMU2",239,0)
 ;
"RTN","IBCEMU2",240,0)
 ; Variables IBEOB          = ien of EOB file 361.1
"RTN","IBCEMU2",241,0)
 ;           PRCASV("MEDCA")= Medicare Contractual Adj Amt
"RTN","IBCEMU2",242,0)
 ; Note:
"RTN","IBCEMU2",243,0)
 ;   For clarification, the following terms mean exactly the same thing.
"RTN","IBCEMU2",244,0)
 ;   "Medicare Contractual Adj Amt" = "Medicare Unpaid Amt" = "Medicare Unallowable Amt"
"RTN","IBCEMU2",245,0)
 N IBEOB,I,LNLVL,EOBADJ,IBCOBN,INPAT,FRMTYP,PRCASV
"RTN","IBCEMU2",246,0)
 ;
"RTN","IBCEMU2",247,0)
 S PRCASV("MEDCA")=0
"RTN","IBCEMU2",248,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)       ;Form Type 2=1500; 3=UB
"RTN","IBCEMU2",249,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)     ;Inpat/Outpat Flag
"RTN","IBCEMU2",250,0)
 ; Get EOB data
"RTN","IBCEMU2",251,0)
 S IBEOB=0
"RTN","IBCEMU2",252,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCEMU2",253,0)
 . F I=0,1,2 S IBEOB(I)=$G(^IBM(361.1,IBEOB,I))
"RTN","IBCEMU2",254,0)
 . I $P(IBEOB(0),U,4)'=1 Q  ;make sure it's an MRA
"RTN","IBCEMU2",255,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN) ;get current bill sequence
"RTN","IBCEMU2",256,0)
 . ;
"RTN","IBCEMU2",257,0)
 . ; Handle CMS-1500 Form Type Next:
"RTN","IBCEMU2",258,0)
 . I FRMTYP=2 D MEDCARE(IBEOB,.PRCASV) Q
"RTN","IBCEMU2",259,0)
 . ;
"RTN","IBCEMU2",260,0)
 . ; Handle UB Form Type Next:
"RTN","IBCEMU2",261,0)
 . ; If Inpatient Calculate from Claim level data
"RTN","IBCEMU2",262,0)
 . I INPAT D  Q  ;
"RTN","IBCEMU2",263,0)
 . . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMU2",264,0)
 . . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",265,0)
 . ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",266,0)
 . D MEDCARE(IBEOB,.PRCASV)
"RTN","IBCEMU2",267,0)
 Q PRCASV("MEDCA") ;MRACALC2
"RTN","IBCEMU2",268,0)
 ;** end IB*2.0*436 **
"RTN","IBCEPTC")
0^1^B92340697^B73846372
"RTN","IBCEPTC",1,0)
IBCEPTC ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS ; 4/12/05 11:15am
"RTN","IBCEPTC",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348,349,547**;21-MAR-94;Build 119
"RTN","IBCEPTC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEPTC",4,0)
 ;
"RTN","IBCEPTC",5,0)
EN ; Main entrypoint
"RTN","IBCEPTC",6,0)
 ; IBDT1,IBDT2 = last transmit date range to use
"RTN","IBCEPTC",7,0)
 ; IBSORT = primary sort criteria to use B=BATCH #,I=INS CO NAME
"RTN","IBCEPTC",8,0)
 ; IBFORM = form type to limit selection to U=UB-04,C=CMS-1500,B=BOTH
"RTN","IBCEPTC",9,0)
 ; IBCRIT = the additional sort criteria needed
"RTN","IBCEPTC",10,0)
 ; IBPTCCAN = whether or not to include cancelled claims
"RTN","IBCEPTC",11,0)
 ; IBRCBFPC = whether or not to include force print @ clearinghouse
"RTN","IBCEPTC",12,0)
 ; ^TMP("IB_PREV_CLAIM_INS",$J) = 1 for specific ins co/null for all
"RTN","IBCEPTC",13,0)
 ;                        ^($J,1,ien)="" for ien of each ins co selected
"RTN","IBCEPTC",14,0)
 ;                        ^($J,2,payer ID,ien)="" if selected
"RTN","IBCEPTC",15,0)
 ; IBREP = format output should be put in R=report,S=Listman
"RTN","IBCEPTC",16,0)
 ;
"RTN","IBCEPTC",17,0)
 N DIR,DIC,X,Y,Z,Z0,Z1,IBHOW,IBACT,IBCT,IBREP,IBCRIT,IBDT1,IBDT2,IBLOC
"RTN","IBCEPTC",18,0)
 N IBFORM,IBOK,IBQUIT,IBSORT,IBY,DTOUT,DUOUT,%ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCEPTC",19,0)
 N POP,IBPAYER,EDI,INST,PROF,IBPTCCAN,DIROUT,DIRUT,DTOUT,DUOUT,IBRCBFPC
"RTN","IBCEPTC",20,0)
 ;
"RTN","IBCEPTC",21,0)
 W !!,"*** Please Note ***"
"RTN","IBCEPTC",22,0)
 W ?20,"2 '^' are needed to abort this option (^^)"
"RTN","IBCEPTC",23,0)
 W !?20,"1 '^' brings you back to the previous prompt (^)"
"RTN","IBCEPTC",24,0)
 W !
"RTN","IBCEPTC",25,0)
 ; IB*2.0*547 add new prompt for locally printed vs. transmitted claims
"RTN","IBCEPTC",26,0)
 S DIR(0)="SA^P:Printed;T:Transmitted",DIR("A")="Run report for (P)rinted or (T)ransmitted claims?: ",DIR("B")="Transmitted"
"RTN","IBCEPTC",27,0)
 D ^DIR K DIR
"RTN","IBCEPTC",28,0)
 I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","IBCEPTC",29,0)
 ; Set a flag here to indicate user wants locally printed claims and use that to control how the rest of the prompts act.
"RTN","IBCEPTC",30,0)
 S IBLOC=$S(Y="T":"",1:1)
"RTN","IBCEPTC",31,0)
 ;
"RTN","IBCEPTC",32,0)
Q1 ;
"RTN","IBCEPTC",33,0)
 W !
"RTN","IBCEPTC",34,0)
 ;S DIR(0)="SA^C:Claim;B:Batch;L:List",DIR("A")="Select By: (C)laim, (B)atch or see a (L)ist to pick from?: ",DIR("B")="List"
"RTN","IBCEPTC",35,0)
 S DIR(0)="SA^C:Claim;"_$S(IBLOC:"",1:"B:Batch;")_"L:List",DIR("A")="Select By: (C)laim"_$S(IBLOC:"",1:", (B)atch")_" or see a (L)ist to pick from?: ",DIR("B")="List"
"RTN","IBCEPTC",36,0)
 D ^DIR K DIR
"RTN","IBCEPTC",37,0)
 I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","IBCEPTC",38,0)
 S IBHOW=Y
"RTN","IBCEPTC",39,0)
 I IBLOC=1 W !,"Previously printed claims to a payer that does not accept EDI are omitted."
"RTN","IBCEPTC",40,0)
 I IBHOW="L" G Q1A
"RTN","IBCEPTC",41,0)
 ;
"RTN","IBCEPTC",42,0)
 S IBQUIT=0,IBCT=0
"RTN","IBCEPTC",43,0)
 K ^TMP($J,IBHOW)
"RTN","IBCEPTC",44,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",45,0)
 .;I IBHOW="C" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Claim: ",DIR(0)="PA^364:AEMQZ",DIR("S")="I '$P(^(0),U,7),'$O(^IBA(364,""B"",+^(0),Y))"
"RTN","IBCEPTC",46,0)
 . I IBHOW="C",IBLOC="" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Claim: ",DIR(0)="PA^364:AEMQZ",DIR("S")="I '$P(^(0),U,7),'$O(^IBA(364,""B"",+^(0),Y))"
"RTN","IBCEPTC",47,0)
 . I IBHOW="C",IBLOC=1 S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Locally Printed Claim: ",DIR(0)="PA^399:AEMQZ",DIR("S")="I '$D(^IBA(364,""B"",Y)),$$INSOK^IBCEF4(+$$CURR^IBCEF2(Y))"
"RTN","IBCEPTC",48,0)
 . I IBHOW="B" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Batch: ",DIR(0)="PA^IBA(364.1,:AEMQ^W ""  "",$P(^(0),U,3),"" Claims""",DIR("S")="I '$P(^(0),U,14)"
"RTN","IBCEPTC",49,0)
 . S DIR("?")="^D SELDSP^IBCEPTC(IBHOW)"
"RTN","IBCEPTC",50,0)
 . S:IBCT $P(DIR(0),U)=$P(DIR(0),U)_"O" ; Optional prompt after one is selected
"RTN","IBCEPTC",51,0)
 . D ^DIR K DIR
"RTN","IBCEPTC",52,0)
 . I Y'>0 S IBQUIT=$S(X="^":2,X="^^":3,1:1) Q
"RTN","IBCEPTC",53,0)
 . S IBY=$S(IBHOW="C":+Y,1:""),Y=$S(IBHOW="C":+Y(0),1:Y) S:IBLOC=1 Y=IBY
"RTN","IBCEPTC",54,0)
 . I '$D(^TMP($J,IBHOW,+Y)) S IBCT=IBCT+1,^TMP($J,IBHOW,+Y)=IBY
"RTN","IBCEPTC",55,0)
 ;
"RTN","IBCEPTC",56,0)
 G:IBQUIT=3 ENQ
"RTN","IBCEPTC",57,0)
 G:IBQUIT=2!'$O(^TMP($J,IBHOW,0)) Q1
"RTN","IBCEPTC",58,0)
 S Z=0
"RTN","IBCEPTC",59,0)
 I IBHOW="C" F  S Z=$O(^TMP($J,"C",Z)) Q:'Z  S ^TMP("IB_PREV_CLAIM_SELECT",$J,Z,0)=^TMP($J,"C",Z)
"RTN","IBCEPTC",60,0)
 I IBHOW="B" S (Z,IBCT)=0 F  S Z=$O(^TMP($J,"B",Z)) Q:'Z  D
"RTN","IBCEPTC",61,0)
 . S Z0=0 F  S Z0=$O(^IBA(364,"C",Z,Z0)) Q:'Z0  S Z1=+$G(^IBA(364,Z0,0)) I Z1,'$D(^TMP("IB_PREV_CLAIM_SELECT",$J,Z1,0)) S ^(0)=Z0,IBCT=IBCT+1
"RTN","IBCEPTC",62,0)
 S ^TMP("IB_PREV_CLAIM_SELECT",$J)=IBCT
"RTN","IBCEPTC",63,0)
 D RESUB^IBCEPTC3
"RTN","IBCEPTC",64,0)
 G ENQ
"RTN","IBCEPTC",65,0)
 ;
"RTN","IBCEPTC",66,0)
Q1A K ^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC",67,0)
 S DIR(0)="SA^A:All Payers;S:Selected Payers"
"RTN","IBCEPTC",68,0)
 S DIR("A")="Run for (A)ll Payers or (S)elected Payers?: " S DIR("B")="Selected Payers"
"RTN","IBCEPTC",69,0)
 W !!,"PAYER SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",70,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",71,0)
 I $D(DTOUT)!$D(DUOUT) G Q1
"RTN","IBCEPTC",72,0)
 ;
"RTN","IBCEPTC",73,0)
 I Y="A" S ^TMP("IB_PREV_CLAIM_INS",$J)="" G Q2
"RTN","IBCEPTC",74,0)
 ;
"RTN","IBCEPTC",75,0)
 ; esg - 11/21/05 - patch 320 question
"RTN","IBCEPTC",76,0)
 W !
"RTN","IBCEPTC",77,0)
 S DIR(0)="Y",DIR("A")="   Include all payers with the same electronic Payer ID",DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCEPTC",78,0)
 I $D(DIROUT) G ENQ
"RTN","IBCEPTC",79,0)
 I $D(DIRUT) G Q1A
"RTN","IBCEPTC",80,0)
 S IBPAYER=Y
"RTN","IBCEPTC",81,0)
 W !
"RTN","IBCEPTC",82,0)
 ;
"RTN","IBCEPTC",83,0)
 S ^TMP("IB_PREV_CLAIM_INS",$J)=1
"RTN","IBCEPTC",84,0)
 S IBQUIT=0
"RTN","IBCEPTC",85,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",86,0)
 . ; IB*2.0*547 allow lookup by EDI#'s using new cross-ref
"RTN","IBCEPTC",87,0)
 . ;S DIC(0)="AEMQ",DIC=36,DIC("A")="   Select Insurance Company: "
"RTN","IBCEPTC",88,0)
 . S DIC(0)="AEMQn",DIC=36,DIC("A")="   Select Insurance Company: "
"RTN","IBCEPTC",89,0)
 . I $O(^TMP("IB_PREV_CLAIM_INS",$J,1,"")) S DIC("A")="   Select Another Insurance Company: "
"RTN","IBCEPTC",90,0)
 . S DIC("W")="D INSLIST^IBCEMCA(Y)"
"RTN","IBCEPTC",91,0)
 . ;D ^DIC K DIC                   ; lookup
"RTN","IBCEPTC",92,0)
 . N D S D="B^AEI^AEP" D MIX^DIC1 K DIC,D
"RTN","IBCEPTC",93,0)
 . I X="^^" S IBQUIT=2 Q          ; user entered "^^"
"RTN","IBCEPTC",94,0)
 . I +Y'>0 S IBQUIT=1 Q           ; user is done
"RTN","IBCEPTC",95,0)
 . W !
"RTN","IBCEPTC",96,0)
 . S ^TMP("IB_PREV_CLAIM_INS",$J,1,+Y)=""
"RTN","IBCEPTC",97,0)
 . I 'IBPAYER Q
"RTN","IBCEPTC",98,0)
 . S EDI=$$UP^XLFSTR($G(^DIC(36,+Y,3)))
"RTN","IBCEPTC",99,0)
 . S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)
"RTN","IBCEPTC",100,0)
 . I PROF'="",PROF'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,PROF,+Y)=""
"RTN","IBCEPTC",101,0)
 . I INST'="",INST'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,INST,+Y)=""
"RTN","IBCEPTC",102,0)
 . Q
"RTN","IBCEPTC",103,0)
 ;
"RTN","IBCEPTC",104,0)
 I IBQUIT=2 G ENQ
"RTN","IBCEPTC",105,0)
 ;
"RTN","IBCEPTC",106,0)
 I '$O(^TMP("IB_PREV_CLAIM_INS",$J,1,0)) D  G Q1A
"RTN","IBCEPTC",107,0)
 . W *7,!!?3,"No payers have been selected.  Please try again."
"RTN","IBCEPTC",108,0)
 . Q
"RTN","IBCEPTC",109,0)
 ;
"RTN","IBCEPTC",110,0)
Q2 S DIR(0)="SA^C:CMS-1500;U:UB-04;B:Both",DIR("B")="Both"
"RTN","IBCEPTC",111,0)
 S DIR("A")="Run for (U)B-04, (C)MS-1500 or (B)oth: "
"RTN","IBCEPTC",112,0)
 W !!,"BILL FORM TYPE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",113,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",114,0)
 I $D(DTOUT)!$D(DUOUT) G Q1A
"RTN","IBCEPTC",115,0)
 S IBFORM=Y
"RTN","IBCEPTC",116,0)
 ;
"RTN","IBCEPTC",117,0)
Q3 S DIR(0)="DA^0:9999999:EPX",DIR("A")="Start with Date "_$S(IBLOC:"First Printed:  ",1:"Last Transmitted: ")
"RTN","IBCEPTC",118,0)
 ;S DIR("?",1)="This is the earliest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",119,0)
 S DIR("?",1)="This is the earliest date on which a batch that you want to include on this",DIR("?",2)=" report was "_$S(IBLOC=1:"first printed",1:"last transmitted")_". You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",120,0)
 ;W !!,"LAST BATCH TRANSMIT DATE RANGE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",121,0)
 W !!,$S(IBLOC:"FIRST PRINT",1:"LAST BATCH TRANSMIT")_" DATE RANGE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",122,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",123,0)
 I $D(DTOUT)!$D(DUOUT) G Q2
"RTN","IBCEPTC",124,0)
 S IBDT1=Y
"RTN","IBCEPTC",125,0)
 S IBDT2=$$FMADD^XLFDT(IBDT1,90) I IBDT2>DT S IBDT2=DT
"RTN","IBCEPTC",126,0)
 S DIR("?",1)="This is the latest date on which a batch that you want to include on this",DIR("?",2)=" report was "_$S(IBLOC:"first printed",1:"last transmitted")_". You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",127,0)
 S DIR("B")=$$FMTE^XLFDT(IBDT2,2),DIR(0)="DA^"_IBDT1_":"_IBDT2_":EPX"
"RTN","IBCEPTC",128,0)
 S DIR("A")="Go to Date "_$S(IBLOC:"First Printed",1:"Last Transmitted")_":("_$$FMTE^XLFDT(IBDT1,2)_"-"_$$FMTE^XLFDT(IBDT2,2)_"): " D ^DIR K DIR
"RTN","IBCEPTC",129,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",130,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",131,0)
 S IBDT2=Y
"RTN","IBCEPTC",132,0)
 ;
"RTN","IBCEPTC",133,0)
Q4 ; Additional selection criteria
"RTN","IBCEPTC",134,0)
 S DIR(0)="SAO^1:MRA Secondary Only;2:Primary Claims Only;3:Secondary Claims Only;4:Claims Previously Printed at Clearinghouse"
"RTN","IBCEPTC",135,0)
 S DIR("A",1)="ADDITIONAL SELECTION CRITERIA:",DIR("A",2)=" ",DIR("A",3)="1 - MRA Secondary Only",DIR("A",4)="2 - Primary Claims Only",DIR("A",5)="3 - Secondary Claims Only"
"RTN","IBCEPTC",136,0)
 S DIR("A",6)=$S(IBLOC:"",1:"4 - Claims Sent to Print at Clearinghouse Only"),DIR("A",7)=" ",DIR("A")="Select Additional Limiting Criteria (optional): "
"RTN","IBCEPTC",137,0)
 S DIR("?")="Select one of the listed criteria to further limit the claims to include"
"RTN","IBCEPTC",138,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",139,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",140,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",141,0)
 S IBCRIT=Y
"RTN","IBCEPTC",142,0)
 ;
"RTN","IBCEPTC",143,0)
Q41 ; Ask user if they want to include cancelled claims
"RTN","IBCEPTC",144,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include cancelled claims"
"RTN","IBCEPTC",145,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",146,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",147,0)
 I $D(DIRUT) G Q4
"RTN","IBCEPTC",148,0)
 S IBPTCCAN=Y
"RTN","IBCEPTC",149,0)
 ; IB*2.0*547 skip next 2 questions if looking for locally printed claims
"RTN","IBCEPTC",150,0)
 I IBLOC S IBSORT=2,IBRCBFPC=0 G Q6
"RTN","IBCEPTC",151,0)
 ;
"RTN","IBCEPTC",152,0)
Q42 ; Include claims that are forced to print at clearinghouse?
"RTN","IBCEPTC",153,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include claims Forced to Print at the Clearinghouse"
"RTN","IBCEPTC",154,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",155,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",156,0)
 I $D(DIRUT) G Q41
"RTN","IBCEPTC",157,0)
 S IBRCBFPC=Y
"RTN","IBCEPTC",158,0)
 ;
"RTN","IBCEPTC",159,0)
Q5 S DIR("L",1)="Select one of the following: ",DIR("L",2)=" ",DIR("L",3)=$J("",10)_"1         Batch By Last Transmitted Date (Claims within a Batch)",DIR("L",4)=$J("",10)_"2         Current Payer (Insurance Company)"
"RTN","IBCEPTC",160,0)
 S DIR("L",5)=" "
"RTN","IBCEPTC",161,0)
 S DIR(0)="SA^1:Batch By Last Transmitted Date (Claims within a Batch);2:Current Payer (Insurance Company)",DIR("B")="Current Payer"
"RTN","IBCEPTC",162,0)
 S DIR("A")="Sort By: "
"RTN","IBCEPTC",163,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",164,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",165,0)
 I $D(DTOUT)!$D(DUOUT) G Q42
"RTN","IBCEPTC",166,0)
 S IBSORT=Y
"RTN","IBCEPTC",167,0)
 ;
"RTN","IBCEPTC",168,0)
Q6 S DIR(0)="SA^R:Report;S:Screen List"
"RTN","IBCEPTC",169,0)
 S DIR("A")="Do you want a (R)eport or a (S)creen List format?: "
"RTN","IBCEPTC",170,0)
 S DIR("B")="Screen List"
"RTN","IBCEPTC",171,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",172,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",173,0)
 I $D(DTOUT)!$D(DUOUT) G Q5
"RTN","IBCEPTC",174,0)
 S IBREP=Y
"RTN","IBCEPTC",175,0)
 ; IB *2.0*547 call new SUB-routine for locally printed claims (not in file 364)
"RTN","IBCEPTC",176,0)
 I IBREP="S",IBLOC D LOC^IBCEPTC0 G ENQ
"RTN","IBCEPTC",177,0)
 ;
"RTN","IBCEPTC",178,0)
 I IBREP="S",'IBLOC D LIST^IBCEPTC0 G ENQ
"RTN","IBCEPTC",179,0)
 ;
"RTN","IBCEPTC",180,0)
Q7 ; Select device
"RTN","IBCEPTC",181,0)
 F  S IBACT=0 D DEVSEL(.IBACT) Q:IBACT
"RTN","IBCEPTC",182,0)
 I IBACT=99 G ENQ
"RTN","IBCEPTC",183,0)
 U IO
"RTN","IBCEPTC",184,0)
 ; IB *2.0*547 call new SUB-routine for locally printed claims (not in file 364)
"RTN","IBCEPTC",185,0)
 D:'IBLOC LIST^IBCEPTC0
"RTN","IBCEPTC",186,0)
 D:IBLOC LOC^IBCEPTC0
"RTN","IBCEPTC",187,0)
 ;
"RTN","IBCEPTC",188,0)
ENQ K ^TMP("IB_PREV_CLAIM_INS",$J),^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC",189,0)
 Q
"RTN","IBCEPTC",190,0)
 ;
"RTN","IBCEPTC",191,0)
DEVSEL(IBACT) ;
"RTN","IBCEPTC",192,0)
 N DIR,POP,X,Y,ZTRTN,ZTSAVE
"RTN","IBCEPTC",193,0)
 W !!,"You will need a 132 column printer for this report!"
"RTN","IBCEPTC",194,0)
 S %ZIS="QM" D ^%ZIS I POP S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",195,0)
 I $G(IOM),IOM<132 S IBOK=1 D  I 'IBOK S IBACT=0 G DEVSELQ
"RTN","IBCEPTC",196,0)
 . S DIR(0)="YA",DIR("A",1)="This report requires output to a 132 column device.",DIR("A",2)="The device you have chosen is only set for "_IOM_".",DIR("A")="Are you sure you want to continue?: ",DIR("B")="No"
"RTN","IBCEPTC",197,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC",198,0)
 . I Y'=1 S IBOK=0 W !
"RTN","IBCEPTC",199,0)
 I $D(IO("Q")) D  S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",200,0)
 . K IO("Q")
"RTN","IBCEPTC",201,0)
 . S ZTRTN="LIST^IBCEPTC0",ZTSAVE("IBCRIT(")="",ZTSAVE("IB*")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J)")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J,")="",ZTDESC="IB - Previously Transmitted Claims Report"
"RTN","IBCEPTC",202,0)
 . D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCEPTC",203,0)
 S IBACT=1
"RTN","IBCEPTC",204,0)
DEVSELQ Q
"RTN","IBCEPTC",205,0)
 ;
"RTN","IBCEPTC",206,0)
SELDSP(IBHOW) ; Display list of selected claims/batches
"RTN","IBCEPTC",207,0)
 ; IBHOW = "C" for claims   "B" for batches
"RTN","IBCEPTC",208,0)
 N Z,DIR,CT,QUIT
"RTN","IBCEPTC",209,0)
 I '$O(^TMP($J,IBHOW,0)) Q
"RTN","IBCEPTC",210,0)
 S (CT,QUIT)=0
"RTN","IBCEPTC",211,0)
 W !!,$S(IBHOW="C":"Claims",1:"Batches")," Already Selected:"
"RTN","IBCEPTC",212,0)
 S Z=0 F  S Z=$O(^TMP($J,IBHOW,Z)) Q:'Z!QUIT  S Z0=$G(^(Z)) D  Q:QUIT
"RTN","IBCEPTC",213,0)
 . I IBHOW="C" W !,?3,$P($G(^DGCR(399,Z,0)),U) Q
"RTN","IBCEPTC",214,0)
 . W !,?3,$P($G(^IBA(364.1,Z,0)),U),"  ",$P(^(0),U,3)," Claims"
"RTN","IBCEPTC",215,0)
 . S CT=CT+1
"RTN","IBCEPTC",216,0)
 . I '(CT#10),$O(^TMP($J,IBHOW,Z)) S DIR("A")="Press return for more or '^' to exit ",DIR(0)="EA" W ! D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S QUIT=1
"RTN","IBCEPTC",217,0)
 W !
"RTN","IBCEPTC",218,0)
 Q
"RTN","IBCEPTC",219,0)
 ;
"RTN","IBCEPTC0")
0^3^B40575166^B19837123
"RTN","IBCEPTC0",1,0)
IBCEPTC0 ;ALB/ESG - EDI PREVIOUSLY TRANSMITTED CLAIMS CONT ; 12/19/05
"RTN","IBCEPTC0",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348,547**;21-MAR-94;Build 119
"RTN","IBCEPTC0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEPTC0",4,0)
 ;
"RTN","IBCEPTC0",5,0)
 Q
"RTN","IBCEPTC0",6,0)
 ;
"RTN","IBCEPTC0",7,0)
LIST ; Queued report format entrypoint
"RTN","IBCEPTC0",8,0)
 ; variables pre-defined: IBREP,IBSORT,IBFORM,IBDT1,IBDT2,
"RTN","IBCEPTC0",9,0)
 ;                        IBCRIT,IBPTCCAN,IBRCBFPC
"RTN","IBCEPTC0",10,0)
 ;  ^TMP("IB_PREV_CLAIM_INS,$J) global
"RTN","IBCEPTC0",11,0)
 K ^TMP("IB_PREV_CLAIM",$J)
"RTN","IBCEPTC0",12,0)
 N IBBDA,IBBDA0,IBCURI,IBDA,IBDT,IBFT,IBIFN,IBS1,IBS2,IBDTX
"RTN","IBCEPTC0",13,0)
 N INCLUDE,EDI,PROF,INST,IB0,IBZ1,DATA,IB364,CURSEQ,IBZ,IBZDAT
"RTN","IBCEPTC0",14,0)
 I IBREP="R" N IBPAGE,IBSTOP,IBHDRDT S (IBPAGE,IBSTOP)=0
"RTN","IBCEPTC0",15,0)
 ;
"RTN","IBCEPTC0",16,0)
 ; evaluate claim transmission data from files 364.1 and 364
"RTN","IBCEPTC0",17,0)
 S IBDT=IBDT1-.1
"RTN","IBCEPTC0",18,0)
 F  S IBDT=$O(^IBA(364.1,"ALT",IBDT)) Q:'IBDT!((IBDT\1)>IBDT2)  S IBBDA=0 F  S IBBDA=$O(^IBA(364.1,"ALT",IBDT,IBBDA)) Q:'IBBDA  D
"RTN","IBCEPTC0",19,0)
 . S IBDTX=IBDT\1
"RTN","IBCEPTC0",20,0)
 . S IBDA=0 F  S IBDA=$O(^IBA(364,"C",IBBDA,IBDA)) Q:'IBDA  D
"RTN","IBCEPTC0",21,0)
 .. D STORE(IBDA,IBBDA,IBDTX,$P($G(^IBA(364,IBDA,0)),U,7)+1)
"RTN","IBCEPTC0",22,0)
 .. Q
"RTN","IBCEPTC0",23,0)
 . Q
"RTN","IBCEPTC0",24,0)
 ;
"RTN","IBCEPTC0",25,0)
 ; evaluate the test transmissions from file 361.4 (SRS 3.2.10.3)
"RTN","IBCEPTC0",26,0)
 S IBDT=IBDT1-.1
"RTN","IBCEPTC0",27,0)
 F  S IBDT=$O(^IBM(361.4,"ALT",IBDT)) Q:'IBDT!(IBDT>IBDT2)  S IBIFN=0 F  S IBIFN=$O(^IBM(361.4,"ALT",IBDT,IBIFN)) Q:'IBIFN  S IBZ1=0 F  S IBZ1=$O(^IBM(361.4,IBIFN,1,IBZ1)) Q:'IBZ1  D
"RTN","IBCEPTC0",28,0)
 . S DATA=$G(^IBM(361.4,IBIFN,1,IBZ1,0)) Q:DATA=""
"RTN","IBCEPTC0",29,0)
 . S IBDTX=$P(DATA,U,1)\1    ; transmit date
"RTN","IBCEPTC0",30,0)
 . Q:IBDTX<IBDT1             ;  too early
"RTN","IBCEPTC0",31,0)
 . Q:IBDTX>IBDT2             ;  too late
"RTN","IBCEPTC0",32,0)
 . S IBBDA=+$P(DATA,U,2)     ; batch ien
"RTN","IBCEPTC0",33,0)
 . Q:'IBBDA
"RTN","IBCEPTC0",34,0)
 . ;
"RTN","IBCEPTC0",35,0)
 . ; attempt to find the corresponding entry in file 364 for this one
"RTN","IBCEPTC0",36,0)
 . S IB364="",CURSEQ=$TR(+$P(DATA,U,4),"123","PST")
"RTN","IBCEPTC0",37,0)
 . S IBZ=" " F  S IBZ=$O(^IBA(364,"B",IBIFN,IBZ),-1) Q:'IBZ  D  Q:IB364
"RTN","IBCEPTC0",38,0)
 .. S IBZDAT=$G(^IBA(364,IBZ,0))
"RTN","IBCEPTC0",39,0)
 .. I $P(IBZDAT,U,8)'=CURSEQ Q      ; no match on payer sequence
"RTN","IBCEPTC0",40,0)
 .. I $F(".X.P.","."_$P(IBZDAT,U,3)_".") Q    ; transmission status must be farther than this
"RTN","IBCEPTC0",41,0)
 .. S IB364=IBZ Q
"RTN","IBCEPTC0",42,0)
 .. Q
"RTN","IBCEPTC0",43,0)
 . ;
"RTN","IBCEPTC0",44,0)
 . I 'IB364 Q      ; need to have an entry in file 364 to proceed
"RTN","IBCEPTC0",45,0)
 . ;
"RTN","IBCEPTC0",46,0)
 . D STORE(IB364,IBBDA,IBDTX,3)
"RTN","IBCEPTC0",47,0)
 . Q
"RTN","IBCEPTC0",48,0)
 ;
"RTN","IBCEPTC0",49,0)
 I IBREP="R" D RPT^IBCEPTC1(IBSORT,IBDT1,IBDT2) G END  ; Output report
"RTN","IBCEPTC0",50,0)
 ;
"RTN","IBCEPTC0",51,0)
 D EN^VALM("IBCE VIEW PREV TRANS"_IBSORT) ; List Manager
"RTN","IBCEPTC0",52,0)
 ;
"RTN","IBCEPTC0",53,0)
END K ^TMP("IB_PREV_CLAIM",$J),^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC0",54,0)
 Q
"RTN","IBCEPTC0",55,0)
 ;
"RTN","IBCEPTC0",56,0)
LOC ; new sub-routine for locally printed claims (use LIST & STORE tags as a guide)
"RTN","IBCEPTC0",57,0)
 ; Use the existing AP x-ref to narrow down the list of claims by date, then checks for existence in file 364 (EDI TRANSMIT BILL).
"RTN","IBCEPTC0",58,0)
 ; If a claim is NOT in file 364, it is a printed-only claim
"RTN","IBCEPTC0",59,0)
 ; variables pre-defined: IBREP,IBSORT,IBFORM,IBDT1,IBDT2,
"RTN","IBCEPTC0",60,0)
 ;        IBCRIT,IBPTCCAN,IBRCBFPC
"RTN","IBCEPTC0",61,0)
 ;  ^TMP("IB_PREV_CLAIM_INS,$J) global
"RTN","IBCEPTC0",62,0)
 K ^TMP("IB_PREV_CLAIM",$J)
"RTN","IBCEPTC0",63,0)
 N IBBDA,IBBDA0,IBCURI,IBDA,IBDT,IBFT,IBIFN,IBS1,IBS2,IBDTX
"RTN","IBCEPTC0",64,0)
 N INCLUDE,EDI,PROF,INST,IB0,IBZ1,DATA,IB364,CURSEQ,IBZ,IBZDAT
"RTN","IBCEPTC0",65,0)
 I IBREP="R" N IBPAGE,IBSTOP,IBHDRDT S (IBPAGE,IBSTOP)=0
"RTN","IBCEPTC0",66,0)
 S IBDT=IBDT1-.1
"RTN","IBCEPTC0",67,0)
 F  S IBDT=$O(^DGCR(399,"AP",IBDT)) Q:'IBDT!(IBDT>IBDT2)  S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"AP",IBDT,IBIFN)) Q:'IBIFN  D
"RTN","IBCEPTC0",68,0)
 .; if it's in the transmit file it is not a printed claim
"RTN","IBCEPTC0",69,0)
 .Q:$D(^IBA(364,"B",IBIFN))
"RTN","IBCEPTC0",70,0)
 .S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC0",71,0)
 .S IBFT=$$FT^IBCEF(IBIFN)   ; form type of claim
"RTN","IBCEPTC0",72,0)
 .I IBFORM'="B",$S(IBFT=3:IBFORM="C",IBFT=2:IBFORM="U",1:1) Q
"RTN","IBCEPTC0",73,0)
 .S IBCURI=$$CURR^IBCEF2(IBIFN) I 'IBCURI Q   ; current ins ien
"RTN","IBCEPTC0",74,0)
 .S EDI=$$UP^XLFSTR($G(^DIC(36,IBCURI,3)))   ; 3 node EDI data
"RTN","IBCEPTC0",75,0)
 .; do not include claims where the ins.co. still cannot transmit electronically
"RTN","IBCEPTC0",76,0)
 .Q:+$P(EDI,U)=0
"RTN","IBCEPTC0",77,0)
 .S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)        ; payer IDs
"RTN","IBCEPTC0",78,0)
 .;
"RTN","IBCEPTC0",79,0)
 .; screen for user selected insurance companies/payers
"RTN","IBCEPTC0",80,0)
 .I +$G(^TMP("IB_PREV_CLAIM_INS",$J)) D  I 'INCLUDE Q
"RTN","IBCEPTC0",81,0)
 ..S INCLUDE=0
"RTN","IBCEPTC0",82,0)
 ..I $D(^TMP("IB_PREV_CLAIM_INS",$J,1,IBCURI)) S INCLUDE=1 Q
"RTN","IBCEPTC0",83,0)
 ..I '$D(^TMP("IB_PREV_CLAIM_INS",$J,2)) Q
"RTN","IBCEPTC0",84,0)
 ..I PROF'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,PROF)) S INCLUDE=1 Q
"RTN","IBCEPTC0",85,0)
 ..I INST'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,INST)) S INCLUDE=1 Q
"RTN","IBCEPTC0",86,0)
 ..Q
"RTN","IBCEPTC0",87,0)
 .;
"RTN","IBCEPTC0",88,0)
 .I IBCRIT=1,'$$MRASEC^IBCEF4(IBIFN) Q
"RTN","IBCEPTC0",89,0)
 .I IBCRIT=2,($$COBN^IBCEF(IBIFN)>1) Q
"RTN","IBCEPTC0",90,0)
 .I IBCRIT=3,($$COBN^IBCEF(IBIFN)=1) Q
"RTN","IBCEPTC0",91,0)
 .I IBCRIT=4,'$P($G(^DGCR(399,IBIFN,"TX")),U,7) Q
"RTN","IBCEPTC0",92,0)
 .;
"RTN","IBCEPTC0",93,0)
 .; skip cancelled claims conditionally
"RTN","IBCEPTC0",94,0)
 .I $P(IB0,U,13)=7,'IBPTCCAN Q
"RTN","IBCEPTC0",95,0)
 .;
"RTN","IBCEPTC0",96,0)
 .S IBS1=$P($G(^DIC(36,+IBCURI,0)),U)_U_+IBCURI,IBS2=IBDT
"RTN","IBCEPTC0",97,0)
 .;
"RTN","IBCEPTC0",98,0)
 .; Meets all selection criteria - extract to sort global
"RTN","IBCEPTC0",99,0)
 .S:IBS1="" IBS1=" " S:IBS2="" IBS2=" "
"RTN","IBCEPTC0",100,0)
 .I '$D(^TMP("IB_PREV_CLAIM",$J,IBS1)) S ^TMP("IB_PREV_CLAIM",$J,IBS1)=IBIFN
"RTN","IBCEPTC0",101,0)
 .S ^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBIFN)=3 ; 3 = test transmission
"RTN","IBCEPTC0",102,0)
 ;
"RTN","IBCEPTC0",103,0)
 I IBREP="R" D RPT^IBCEPTC1(IBSORT,IBDT1,IBDT2) G END  ; Output report
"RTN","IBCEPTC0",104,0)
 ;
"RTN","IBCEPTC0",105,0)
 D EN^VALM("IBCE VIEW LOC PRINT") ; List Manager, new one for sort =2
"RTN","IBCEPTC0",106,0)
 ;
"RTN","IBCEPTC0",107,0)
 D END
"RTN","IBCEPTC0",108,0)
 Q
"RTN","IBCEPTC0",109,0)
 ;
"RTN","IBCEPTC0",110,0)
STORE(IB364,IBBDA,IBDTX,IBTYP) ; Check and store transmission data
"RTN","IBCEPTC0",111,0)
 ; Parameters
"RTN","IBCEPTC0",112,0)
 ; IB364 - ien to file 364 (claim transmission ien)
"RTN","IBCEPTC0",113,0)
 ; IBBDA - ien to file 364.1 (batch ien)
"RTN","IBCEPTC0",114,0)
 ; IBDTX - fm transmit date (no time) (either from 364.1 or 361.41)
"RTN","IBCEPTC0",115,0)
 ; IBTYP - 1 = transmission data from file 364 (field .07 is live)
"RTN","IBCEPTC0",116,0)
 ;         2 = transmission data from file 364 (field .07 is test)
"RTN","IBCEPTC0",117,0)
 ;         3 = transmission data from file 361.41 (test always)
"RTN","IBCEPTC0",118,0)
 ; Note:
"RTN","IBCEPTC0",119,0)
 ; Variables IBFORM, IBCRIT, IBPTCCAN, IBRCBFPC, and IBSORT are
"RTN","IBCEPTC0",120,0)
 ;     assumed to exist here in this procedure.
"RTN","IBCEPTC0",121,0)
 ;
"RTN","IBCEPTC0",122,0)
 NEW IBIFN,IB0,IBFT,IBCURI,INCLUDE,EDI,PROF,INST,IBBDA0,IBS1,IBS2
"RTN","IBCEPTC0",123,0)
 ;
"RTN","IBCEPTC0",124,0)
 S IBIFN=+$G(^IBA(364,IB364,0))
"RTN","IBCEPTC0",125,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC0",126,0)
 S IBFT=$$FT^IBCEF(IBIFN)   ; form type of claim
"RTN","IBCEPTC0",127,0)
 I IBFORM'="B",$S(IBFT=3:IBFORM="C",IBFT=2:IBFORM="U",1:1) G STOREX
"RTN","IBCEPTC0",128,0)
 S IBCURI=$$CURR^IBCEF2(IBIFN) I 'IBCURI G STOREX   ; current ins ien
"RTN","IBCEPTC0",129,0)
 S EDI=$$UP^XLFSTR($G(^DIC(36,IBCURI,3)))           ; 3 node EDI data
"RTN","IBCEPTC0",130,0)
 S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)                ; payer IDs
"RTN","IBCEPTC0",131,0)
 ;
"RTN","IBCEPTC0",132,0)
 ; screen for user selected insurance companies/payers
"RTN","IBCEPTC0",133,0)
 I +$G(^TMP("IB_PREV_CLAIM_INS",$J)) D  I 'INCLUDE G STOREX
"RTN","IBCEPTC0",134,0)
 . S INCLUDE=0
"RTN","IBCEPTC0",135,0)
 . I $D(^TMP("IB_PREV_CLAIM_INS",$J,1,IBCURI)) S INCLUDE=1 Q
"RTN","IBCEPTC0",136,0)
 . I '$D(^TMP("IB_PREV_CLAIM_INS",$J,2)) Q
"RTN","IBCEPTC0",137,0)
 . I PROF'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,PROF)) S INCLUDE=1 Q
"RTN","IBCEPTC0",138,0)
 . I INST'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,INST)) S INCLUDE=1 Q
"RTN","IBCEPTC0",139,0)
 . Q
"RTN","IBCEPTC0",140,0)
 ;
"RTN","IBCEPTC0",141,0)
 I IBCRIT=1,'$$MRASEC^IBCEF4(IBIFN) G STOREX
"RTN","IBCEPTC0",142,0)
 I IBCRIT=2,($$COBN^IBCEF(IBIFN)>1) G STOREX
"RTN","IBCEPTC0",143,0)
 I IBCRIT=3,($$COBN^IBCEF(IBIFN)=1) G STOREX
"RTN","IBCEPTC0",144,0)
 I IBCRIT=4,'$P($G(^DGCR(399,IBIFN,"TX")),U,7) G STOREX
"RTN","IBCEPTC0",145,0)
 ;
"RTN","IBCEPTC0",146,0)
 ; skip cancelled claims conditionally
"RTN","IBCEPTC0",147,0)
 I $P(IB0,U,13)=7,'IBPTCCAN G STOREX
"RTN","IBCEPTC0",148,0)
 ;
"RTN","IBCEPTC0",149,0)
 ; skip claims forced to print at clearinghouse (claim check)
"RTN","IBCEPTC0",150,0)
 I $P($G(^DGCR(399,IBIFN,"TX")),U,8)=2,'IBRCBFPC G STOREX
"RTN","IBCEPTC0",151,0)
 ;
"RTN","IBCEPTC0",152,0)
 ; skip claims forced to print at clearinghouse (payer check)
"RTN","IBCEPTC0",153,0)
 I IBFT=2,PROF["PRNT",'IBRCBFPC G STOREX    ; 1500, prof payer ID
"RTN","IBCEPTC0",154,0)
 I IBFT=3,INST["PRNT",'IBRCBFPC G STOREX    ;   ub, inst payer ID
"RTN","IBCEPTC0",155,0)
 ;
"RTN","IBCEPTC0",156,0)
 S IBBDA0=$G(^IBA(364.1,+IBBDA,0))             ; 0 node of batch
"RTN","IBCEPTC0",157,0)
 ;
"RTN","IBCEPTC0",158,0)
 S IBS1=$S(IBSORT=1:(99999999-IBDTX)_U_$P(IBBDA0,U)_U_$P(IBBDA0,U,14)_U_+$P(IBBDA0,U,5),1:$P($G(^DIC(36,+IBCURI,0)),U)_U_+IBCURI)
"RTN","IBCEPTC0",159,0)
 S IBS2=$S(IBSORT=1:$P(IB0,U,1),1:99999999-IBDTX)
"RTN","IBCEPTC0",160,0)
 ;
"RTN","IBCEPTC0",161,0)
 ; Meets all selection criteria - extract to sort global
"RTN","IBCEPTC0",162,0)
 S:IBS1="" IBS1=" " S:IBS2="" IBS2=" "
"RTN","IBCEPTC0",163,0)
 I '$D(^TMP("IB_PREV_CLAIM",$J,IBS1)) S ^TMP("IB_PREV_CLAIM",$J,IBS1)=$S(IBSORT=1:$$FMTE^XLFDT(IBDTX,"1"),1:IBIFN)
"RTN","IBCEPTC0",164,0)
 S ^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IB364)=IBTYP
"RTN","IBCEPTC0",165,0)
 ;
"RTN","IBCEPTC0",166,0)
STOREX ;
"RTN","IBCEPTC0",167,0)
 Q
"RTN","IBCEPTC0",168,0)
 ;
"RTN","IBCEPTC1")
0^4^B19060601^B16490219
"RTN","IBCEPTC1",1,0)
IBCEPTC1 ;ALB/TMK - EDI PREV TRANSMITTED CLAIMS REPORT OUTPUT ;01/20/05
"RTN","IBCEPTC1",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,547**;21-MAR-94;Build 119
"RTN","IBCEPTC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEPTC1",4,0)
 ;
"RTN","IBCEPTC1",5,0)
RPT(IBSORT,IBDT1,IBDT2) ; Output transmitted claims report
"RTN","IBCEPTC1",6,0)
 ; global ^TMP("IB_PREV_CLAIM",$J,srt1,srt2,ien of entry file 364)=""
"RTN","IBCEPTC1",7,0)
 ; IB*2.0*547 Variable IBLOC is pre-defined (in IBCEPTC)
"RTN","IBCEPTC1",8,0)
 N IBDA,IBIFN,IBPAGE,IBSTOP,IBHDR,IBS1,IBS2,Z,IBZ,IBREP
"RTN","IBCEPTC1",9,0)
 S (IBPAGE,IBSTOP)=0,IBPAGE(0)="",IBPAGE(1)="",IBREP="R"
"RTN","IBCEPTC1",10,0)
 ; IB*2.0*547 adds ability for locally printed as well as transmitted claims
"RTN","IBCEPTC1",11,0)
 S IBHDR=$S(IBLOC:"Printed",1:"Transmitted")_" Claims Report for period covering "_$$FMTE^XLFDT(IBDT1,1)_" thru "_$$FMTE^XLFDT(IBDT2,1)_$J("",14)_$$HTE^XLFDT($H,"1M"),IBHDR=IBHDR_$J("",124-$L(IBHDR))_"Page"
"RTN","IBCEPTC1",12,0)
 S IBS1="" F  S IBS1=$O(^TMP("IB_PREV_CLAIM",$J,IBS1)) Q:IBS1=""  D  Q:IBSTOP
"RTN","IBCEPTC1",13,0)
 . ; First level sort
"RTN","IBCEPTC1",14,0)
 . D:($Y+6)>IOSL!'IBPAGE HDR(IBHDR,IBSORT,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",15,0)
 . S IBPAGE(1)=IBS1,IBPAGE(0)="" ; Hold data for hdr repeated on new pg
"RTN","IBCEPTC1",16,0)
 . D HDR1(IBSORT,IBS1,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",17,0)
 . ;
"RTN","IBCEPTC1",18,0)
 . S IBPAGE(0)=1
"RTN","IBCEPTC1",19,0)
 . S IBS2="" F  S IBS2=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2)) Q:IBS2=""!IBSTOP  S IBDA=0 F  S IBDA=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA)) Q:'IBDA!IBSTOP  D
"RTN","IBCEPTC1",20,0)
 .. S IBIFN=$S(IBLOC:+IBDA,1:+$G(^IBA(364,+IBDA,0)))
"RTN","IBCEPTC1",21,0)
 .. ;
"RTN","IBCEPTC1",22,0)
 .. D:($Y+5)>IOSL!'IBPAGE HDR(IBHDR,IBSORT,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",23,0)
 .. D WRT^IBCEPTC2(IBS1,IBS2,IBDA,IBIFN,IBSORT,IBREP,"",.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",24,0)
 . S IBPAGE(0)=""
"RTN","IBCEPTC1",25,0)
 ;
"RTN","IBCEPTC1",26,0)
 G:IBSTOP STOP
"RTN","IBCEPTC1",27,0)
 I 'IBPAGE D WRT^IBCEPTC2("NO PREVIOUSLY "_$S(IBLOC:"PRINTED",1:"TRANSMITTED")_" CLAIMS EXIST TO MATCH THE SEARCH CRITERIA SELECTED","",0,0,IBSORT,IBREP,IBHDR,0,0)
"RTN","IBCEPTC1",28,0)
 ;
"RTN","IBCEPTC1",29,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTC1",30,0)
 ;
"RTN","IBCEPTC1",31,0)
STOP I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCEPTC1",32,0)
 I '$D(ZTQUEUED) W ! D ^%ZISC
"RTN","IBCEPTC1",33,0)
 ;
"RTN","IBCEPTC1",34,0)
 Q
"RTN","IBCEPTC1",35,0)
 ;
"RTN","IBCEPTC1",36,0)
HDR1(IBSORT,IBDATA,IBPAGE,IBSTOP) ; First level report sort headers
"RTN","IBCEPTC1",37,0)
 ; IBSORT = sort type
"RTN","IBCEPTC1",38,0)
 ; IBDATA = data at the 1st sort level
"RTN","IBCEPTC1",39,0)
 I ($Y+11)>IOSL D HDR(IBHDR,IBSORT,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",40,0)
 N Z,X,Y,Q
"RTN","IBCEPTC1",41,0)
 I IBSORT=1 D
"RTN","IBCEPTC1",42,0)
 . S Q=$S(IBLOC:"",1:"Batch Number: ")_$P(IBDATA,U,2)_$S('$P(IBDATA,U,4):"",1:"  ** This batch was rejected **")_$S('$P(IBDATA,U,3):"",1:"  ** This batch was a test batch **")
"RTN","IBCEPTC1",43,0)
 . W !!,Q W:$G(IBPAGE(0)) $J("",120-$L(Q)),"(Continued)" W !,"Date Last "_$S(IBLOC:"Printed: ",1:"Transmitted: "),$$FMTE^XLFDT(99999999-IBDATA,1)
"RTN","IBCEPTC1",44,0)
 . S Z="",$P(Z,"=",133)="" W !,Z
"RTN","IBCEPTC1",45,0)
 . W !,"Claim #   Form Type Seq  Status      A/R  Current Payer",$J("",13),"Payer Address",$J("",17),"Other Payer(s)  Patient Name",!
"RTN","IBCEPTC1",46,0)
 ;
"RTN","IBCEPTC1",47,0)
 I IBSORT=2 D
"RTN","IBCEPTC1",48,0)
 . N IBZ,IBIFN
"RTN","IBCEPTC1",49,0)
 . S IBIFN=""
"RTN","IBCEPTC1",50,0)
 . I IBDATA'="" S IBIFN=+$G(^TMP("IB_PREV_CLAIM",$J,IBDATA))
"RTN","IBCEPTC1",51,0)
 . S Q="Current Payer: "_$P(IBDATA,U)
"RTN","IBCEPTC1",52,0)
 . D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCEPTC1",53,0)
 . S Q=Q_"  "_$G(IBZ(1))_$S($G(IBZ(1))'="":",",1:"")_" "_$G(IBZ(4))_$S($G(IBZ(4))'="":",",1:"")_" "_$P($G(^DIC(5,+$G(IBZ(5)),0)),U,2)
"RTN","IBCEPTC1",54,0)
 . W !!,Q
"RTN","IBCEPTC1",55,0)
 . I $G(IBPAGE(0)) D
"RTN","IBCEPTC1",56,0)
 .. I $L(Q)>119 S Q="" W !
"RTN","IBCEPTC1",57,0)
 .. W $J("",120-$L(Q)),"(Continued)"
"RTN","IBCEPTC1",58,0)
 . S Z="",$P(Z,"=",133)="" W !,Z
"RTN","IBCEPTC1",59,0)
 . W !,"Claim #   Form Type Seq  Status      A/R    Other Payer(s)",$J("",6),"Patient Name",$J("",10),"Last "_$S(IBLOC:"Printed",1:"Transmit    Batch Number"),!
"RTN","IBCEPTC1",60,0)
 ;
"RTN","IBCEPTC1",61,0)
 Q
"RTN","IBCEPTC1",62,0)
 ;
"RTN","IBCEPTC1",63,0)
HDR(IBHDR,IBSORT,IBPAGE,IBSTOP) ; Report header
"RTN","IBCEPTC1",64,0)
 ;
"RTN","IBCEPTC1",65,0)
 N Z,DIR,X,Y
"RTN","IBCEPTC1",66,0)
 I IBPAGE D  Q:IBSTOP
"RTN","IBCEPTC1",67,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBSTOP=('Y) Q:IBSTOP
"RTN","IBCEPTC1",68,0)
 . W @IOF
"RTN","IBCEPTC1",69,0)
 S IBPAGE=IBPAGE+1,Z=IBHDR_$J(IBPAGE,4)
"RTN","IBCEPTC1",70,0)
 W !,Z
"RTN","IBCEPTC1",71,0)
 W:IBLOC'=1 !,"** A claim may appear on this report multiple times if it has been transmitted more than once. **"
"RTN","IBCEPTC1",72,0)
 I IBSORT=2,IBLOC'=1 D
"RTN","IBCEPTC1",73,0)
 . W !,"** T indicates the claim was transmitted as a test claim prior to turning on EDI live for the payer. **"
"RTN","IBCEPTC1",74,0)
 . W !,"** R indicates that the batch was rejected. **"
"RTN","IBCEPTC1",75,0)
 I IBPAGE>1,$G(IBPAGE(0)) D HDR1(IBSORT,IBPAGE(1),.IBPAGE,.IBSTOP)
"RTN","IBCEPTC1",76,0)
 Q
"RTN","IBCEPTC1",77,0)
 ;
"RTN","IBCEPTC2")
0^5^B52666304^B48277704
"RTN","IBCEPTC2",1,0)
IBCEPTC2 ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS LIST MGR ;01/20/05
"RTN","IBCEPTC2",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348,349,547**;21-MAR-94;Build 119
"RTN","IBCEPTC2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEPTC2",4,0)
 ; IA 3337 for file 430.3
"RTN","IBCEPTC2",5,0)
 ; IB*2.0*547 Variable IBLOC is pre-defined (in IBCEPTC)
"RTN","IBCEPTC2",6,0)
 ;
"RTN","IBCEPTC2",7,0)
HDR ;
"RTN","IBCEPTC2",8,0)
 K VALMHDR
"RTN","IBCEPTC2",9,0)
 I IBLOC S VALMHDR(1)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)" Q
"RTN","IBCEPTC2",10,0)
 S VALMHDR(1)="** A claim may appear multiple times if transmitted more than once. **"
"RTN","IBCEPTC2",11,0)
 ;
"RTN","IBCEPTC2",12,0)
 I $G(IBSORT)=1 D
"RTN","IBCEPTC2",13,0)
 . S VALMHDR(2)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",14,0)
 . Q
"RTN","IBCEPTC2",15,0)
 ;
"RTN","IBCEPTC2",16,0)
 I $G(IBSORT)=2 D
"RTN","IBCEPTC2",17,0)
 . S VALMHDR(2)="** T = Test Claim   ** R = Batch Rejected"
"RTN","IBCEPTC2",18,0)
 . S VALMHDR(3)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",19,0)
 . Q
"RTN","IBCEPTC2",20,0)
 ;
"RTN","IBCEPTC2",21,0)
 Q
"RTN","IBCEPTC2",22,0)
 ;
"RTN","IBCEPTC2",23,0)
INIT ;
"RTN","IBCEPTC2",24,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCEPTC2",25,0)
 D BLD
"RTN","IBCEPTC2",26,0)
 Q
"RTN","IBCEPTC2",27,0)
 ;
"RTN","IBCEPTC2",28,0)
BLD ; Build display lines
"RTN","IBCEPTC2",29,0)
 N IBDA,IBS1,IBS2,IBIFN,IB0,IBX,IBCNT,IBLEV1,IBBDA
"RTN","IBCEPTC2",30,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J),^TMP("IB_PREV_CLAIM_SELECT",$J),^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",31,0)
 S IBCNT=0
"RTN","IBCEPTC2",32,0)
 I $O(^TMP("IB_PREV_CLAIM",$J,""))="" D  G BLDQ
"RTN","IBCEPTC2",33,0)
 . S IBX=" ** NO PREVIOUSLY "_$S(IBLOC:"PRINTED",1:"TRANSMITTED")_" CLAIMS EXIST FOR SEARCH CRITERIA SELECTED **"
"RTN","IBCEPTC2",34,0)
 . D WRT(IBX,"",0,0,"","S","",.IBCNT,0)
"RTN","IBCEPTC2",35,0)
 ;
"RTN","IBCEPTC2",36,0)
 S IBS1="" F  S IBS1=$O(^TMP("IB_PREV_CLAIM",$J,IBS1)) Q:IBS1=""  D
"RTN","IBCEPTC2",37,0)
 . ; First level sort
"RTN","IBCEPTC2",38,0)
 . ; for sort by batch, display batch ID and transmit date
"RTN","IBCEPTC2",39,0)
 . I IBSORT=1 D
"RTN","IBCEPTC2",40,0)
 .. S IBLEV1="  Batch: "_$P(IBS1,U,2)_"  Last Transmitted: "_$G(^TMP("IB_PREV_CLAIM",$J,IBS1))
"RTN","IBCEPTC2",41,0)
 .. S IBBDA=+$O(^IBA(364.1,"B",$P(IBS1,U,2),0))
"RTN","IBCEPTC2",42,0)
 .. I $P(IBS1,U,3) S IBLEV1=IBLEV1_" ** Test"
"RTN","IBCEPTC2",43,0)
 .. I $P(IBS1,U,4) S IBLEV1=IBLEV1_" ** Rejected"
"RTN","IBCEPTC2",44,0)
 .. Q
"RTN","IBCEPTC2",45,0)
 . ;
"RTN","IBCEPTC2",46,0)
 . ; for sort by payer, display ins co name and payer address
"RTN","IBCEPTC2",47,0)
 . I IBSORT=2 D
"RTN","IBCEPTC2",48,0)
 .. S IBLEV1="  "_$P(IBS1,U)_"  "_$$CURRINS(+$G(^TMP("IB_PREV_CLAIM",$J,IBS1)),0)
"RTN","IBCEPTC2",49,0)
 .. Q
"RTN","IBCEPTC2",50,0)
 . ;
"RTN","IBCEPTC2",51,0)
 . ; output sort header line
"RTN","IBCEPTC2",52,0)
 . D WRT(IBLEV1,"",0,0,IBSORT,"S","",IBCNT,0) ; Add header line
"RTN","IBCEPTC2",53,0)
 . ;
"RTN","IBCEPTC2",54,0)
 . I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA)=VALMCNT
"RTN","IBCEPTC2",55,0)
 . S IBS2="" F  S IBS2=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2)) Q:IBS2=""  S IBDA=0 F  S IBDA=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA)) Q:'IBDA  D
"RTN","IBCEPTC2",56,0)
 .. N IBX,IBTEST
"RTN","IBCEPTC2",57,0)
 .. ;S IBIFN=+$G(^IBA(364,+IBDA,0)),IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",58,0)
 .. S IBIFN=$S(IBLOC:+IBDA,1:+$G(^IBA(364,+IBDA,0))),IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",59,0)
 .. S IBX=$P(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA),U,1)
"RTN","IBCEPTC2",60,0)
 .. I IBX=1 S IBTEST=0    ; live 364 transmission
"RTN","IBCEPTC2",61,0)
 .. I IBX=2 S IBTEST=1    ; test 364 transmission
"RTN","IBCEPTC2",62,0)
 .. I IBX=3 S IBTEST=1    ; test 361.4 transmission
"RTN","IBCEPTC2",63,0)
 .. D WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,"S","",.IBCNT,0,IBTEST)
"RTN","IBCEPTC2",64,0)
 .. I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA,VALMCNT)=IBIFN_U_IBCNT
"RTN","IBCEPTC2",65,0)
 .. Q
"RTN","IBCEPTC2",66,0)
 . Q
"RTN","IBCEPTC2",67,0)
 ;
"RTN","IBCEPTC2",68,0)
BLDQ Q
"RTN","IBCEPTC2",69,0)
 ;
"RTN","IBCEPTC2",70,0)
EXIT ; Clean up code
"RTN","IBCEPTC2",71,0)
 ;
"RTN","IBCEPTC2",72,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J)
"RTN","IBCEPTC2",73,0)
 K ^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC2",74,0)
 K ^TMP("IB_PREV_CLAIM_LIST_DX",$J)
"RTN","IBCEPTC2",75,0)
 K ^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",76,0)
 D CLEAR^VALM1
"RTN","IBCEPTC2",77,0)
 Q
"RTN","IBCEPTC2",78,0)
 ;
"RTN","IBCEPTC2",79,0)
WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,IBREP,IBHDR,IBPAGE,IBSTOP,IBTEST) ; Wrt/output
"RTN","IBCEPTC2",80,0)
 ;
"RTN","IBCEPTC2",81,0)
 N IBX,IB0,Z,IBCNT,ARSTAT
"RTN","IBCEPTC2",82,0)
 S IBCNT=IBPAGE
"RTN","IBCEPTC2",83,0)
 ;
"RTN","IBCEPTC2",84,0)
 I 'IBIFN D  G WRTQ
"RTN","IBCEPTC2",85,0)
 . ;
"RTN","IBCEPTC2",86,0)
 . ; for report output
"RTN","IBCEPTC2",87,0)
 . I IBREP="R" D  Q
"RTN","IBCEPTC2",88,0)
 .. S Z="",$P(Z,"=",133)=""
"RTN","IBCEPTC2",89,0)
 .. D SET(Z,1,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",90,0)
 .. D SET(IBS1,2,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",91,0)
 .. Q
"RTN","IBCEPTC2",92,0)
 . ;
"RTN","IBCEPTC2",93,0)
 . ; for ListMan screen output
"RTN","IBCEPTC2",94,0)
 . D SET(IBS1,0,IBDA,IBREP,IBHDR,IBCNT+1,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",95,0)
 . Q
"RTN","IBCEPTC2",96,0)
 ;
"RTN","IBCEPTC2",97,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",98,0)
 S IBX=$$FO^IBCNEUT1($P(IB0,U,1),8)        ; claim#
"RTN","IBCEPTC2",99,0)
 S IBX=IBX_$S(IBSORT=2&$G(IBTEST):"T",1:" ")_" "
"RTN","IBCEPTC2",100,0)
 S IBX=IBX_$S($P(IB0,U,19)=2:"1500",1:"UB04")_" "
"RTN","IBCEPTC2",101,0)
 S Z=$$INPAT^IBCEF(IBIFN) S IBX=IBX_$S(Z:"INPT ",1:"OUTPT")
"RTN","IBCEPTC2",102,0)
 S IBX=IBX_$J($P(IB0,U,21),3)_"  "
"RTN","IBCEPTC2",103,0)
 S Z=$$EXTERNAL^DILFD(399,.13,"",$P(IB0,U,13))
"RTN","IBCEPTC2",104,0)
 S IBX=IBX_$$FO^IBCNEUT1(Z,11)_"  "             ; claim status
"RTN","IBCEPTC2",105,0)
 S ARSTAT=+$P($$BILL^RCJIBFN2(IBIFN),U,2)       ; ien
"RTN","IBCEPTC2",106,0)
 S ARSTAT=$P($G(^PRCA(430.3,ARSTAT,0)),U,2)     ; abbreviation
"RTN","IBCEPTC2",107,0)
 S IBX=IBX_$$FO^IBCNEUT1(ARSTAT,4)              ; a/r status display
"RTN","IBCEPTC2",108,0)
 ;
"RTN","IBCEPTC2",109,0)
 I IBSORT=1 D                    ; sort by batch
"RTN","IBCEPTC2",110,0)
 . N Z,IBZ,IBXDATA
"RTN","IBCEPTC2",111,0)
 . ; Print current payer, payer address, other payers, pat name
"RTN","IBCEPTC2",112,0)
 . D F^IBCEF("N-CURR INSURANCE COMPANY NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",113,0)
 . S IBX=IBX_$$FO^IBCNEUT1(IBZ,25)_" "                     ; ins co name
"RTN","IBCEPTC2",114,0)
 . S IBX=IBX_$$FO^IBCNEUT1($$CURRINS(IBIFN,1),29)_" "      ; address
"RTN","IBCEPTC2",115,0)
 . K IBZ D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",116,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),15)_" "      ; other payer
"RTN","IBCEPTC2",117,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",118,0)
 . S IBX=IBX_$E(Z,1,18)                       ; patient name
"RTN","IBCEPTC2",119,0)
 . ;
"RTN","IBCEPTC2",120,0)
 . ; set line into list
"RTN","IBCEPTC2",121,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",122,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",123,0)
 . S IBX=""
"RTN","IBCEPTC2",124,0)
 . ;
"RTN","IBCEPTC2",125,0)
 . I $G(IBZ(2))'="" D    ; other payer #2 if it exists
"RTN","IBCEPTC2",126,0)
 .. S IBX=$J("",98)_$E($P(IBZ(2),U,1),1,15)
"RTN","IBCEPTC2",127,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",128,0)
 .. Q
"RTN","IBCEPTC2",129,0)
 . Q
"RTN","IBCEPTC2",130,0)
 ;
"RTN","IBCEPTC2",131,0)
 I IBSORT=2 D                    ; sort by payer
"RTN","IBCEPTC2",132,0)
 . N Z,IBZ
"RTN","IBCEPTC2",133,0)
 . S IBX=IBX_"  "
"RTN","IBCEPTC2",134,0)
 . ; Print other payers, patient name, date last trans, batch #, reject flag
"RTN","IBCEPTC2",135,0)
 . D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",136,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),18)_"  "   ; oth payer#1
"RTN","IBCEPTC2",137,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",138,0)
 . S IBX=IBX_$$FO^IBCNEUT1(Z,18)_"    "                  ; patient name
"RTN","IBCEPTC2",139,0)
 . ;
"RTN","IBCEPTC2",140,0)
 . S Z=+$P($G(^IBA(364,+IBDA,0)),U,2) ; Batch ptr
"RTN","IBCEPTC2",141,0)
 . S:IBLOC IBX=IBX_$$FO^IBCNEUT1($$FMTE^XLFDT($P($G(^DGCR(399,IBIFN,"S")),U,14),"1"),17)     ; date last printed *547*
"RTN","IBCEPTC2",142,0)
 . S:'IBLOC IBX=IBX_$$FO^IBCNEUT1($$FMTE^XLFDT($P($G(^IBA(364.1,+Z,1)),U,3)\1,"1"),17)     ; date last transmitted
"RTN","IBCEPTC2",143,0)
 . S:'IBLOC IBX=IBX_$$FO^IBCNEUT1($P($G(^IBA(364.1,Z,0)),U,1),10)   ; batch#
"RTN","IBCEPTC2",144,0)
 . S:IBLOC IBX=IBX_"" ; no batch#
"RTN","IBCEPTC2",145,0)
 . S IBX=IBX_$S($P($G(^IBA(364.1,Z,0)),U,5):" R",1:"")  ; batch rejected flag
"RTN","IBCEPTC2",146,0)
 . ;
"RTN","IBCEPTC2",147,0)
 . ; set line into list
"RTN","IBCEPTC2",148,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",149,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",150,0)
 . S IBX=""
"RTN","IBCEPTC2",151,0)
 . ;
"RTN","IBCEPTC2",152,0)
 . I $G(IBZ(2))'="" D       ; other payer#2 if it exists
"RTN","IBCEPTC2",153,0)
 .. S IBX=$J("",44)_$E($P(IBZ(2),U),1,18)
"RTN","IBCEPTC2",154,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",155,0)
 .. Q
"RTN","IBCEPTC2",156,0)
 . Q
"RTN","IBCEPTC2",157,0)
 ;
"RTN","IBCEPTC2",158,0)
WRTQ I IBREP="S" S IBPAGE=IBCNT
"RTN","IBCEPTC2",159,0)
 Q
"RTN","IBCEPTC2",160,0)
 ;
"RTN","IBCEPTC2",161,0)
SET(IBX,IBLINE,IBDA,IBREP,IBHDR,IBCNT,VALMCNT,IBPAGE,IBSTOP) ;
"RTN","IBCEPTC2",162,0)
 N Q,Z,IBZ
"RTN","IBCEPTC2",163,0)
 S IBZ=IBX,IBX=""
"RTN","IBCEPTC2",164,0)
 I IBREP="R" D  Q
"RTN","IBCEPTC2",165,0)
 . D:($Y+5)>IOSL!'IBPAGE HDR^IBCEPTC1(IBHDR,IBSORT,.IBPAGE,.IBSTOP) D
"RTN","IBCEPTC2",166,0)
 . I IBLINE F Z=1:1:IBLINE W !
"RTN","IBCEPTC2",167,0)
 . W:'IBSTOP IBZ
"RTN","IBCEPTC2",168,0)
 . Q
"RTN","IBCEPTC2",169,0)
 ;
"RTN","IBCEPTC2",170,0)
 ; only display the counter if we have a line with the claim#
"RTN","IBCEPTC2",171,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCEPTC2",172,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S IBZ=$$FO^IBCNEUT1($J(IBCNT,3),6)_IBZ
"RTN","IBCEPTC2",173,0)
 I IBDA,$TR($E(IBZ,1,8)," ")="" S IBZ="      "_IBZ
"RTN","IBCEPTC2",174,0)
 ;
"RTN","IBCEPTC2",175,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,VALMCNT,0)=IBZ
"RTN","IBCEPTC2",176,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBCEPTC2",177,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S ^TMP("IB_PREV_CLAIM_LIST_DX",$J,IBCNT)=VALMCNT_U_IBDA
"RTN","IBCEPTC2",178,0)
 Q
"RTN","IBCEPTC2",179,0)
 ;
"RTN","IBCEPTC2",180,0)
CURRINS(IBIFN,TRUNC) ; Returns Current insurance address for given claim
"RTN","IBCEPTC2",181,0)
 ; TRUNC = truncate flag; 1 to truncate the address and city
"RTN","IBCEPTC2",182,0)
 N IBX,IBZ,L1,CITY,ST
"RTN","IBCEPTC2",183,0)
 D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCEPTC2",184,0)
 S L1=$G(IBZ(1)) I +$G(TRUNC) S L1=$E(L1,1,15)
"RTN","IBCEPTC2",185,0)
 S CITY=$G(IBZ(4)) I +$G(TRUNC) S CITY=$E(CITY,1,10)
"RTN","IBCEPTC2",186,0)
 S ST=$G(IBZ(5))
"RTN","IBCEPTC2",187,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCEPTC2",188,0)
 S IBX=L1_" "_CITY
"RTN","IBCEPTC2",189,0)
 I CITY'="",ST'="" S IBX=IBX_","_ST
"RTN","IBCEPTC2",190,0)
 E  S IBX=IBX_" "_ST
"RTN","IBCEPTC2",191,0)
 Q IBX
"RTN","IBCEPTC2",192,0)
 ;
"RTN","IBCEPTC3")
0^6^B64803891^B61167367
"RTN","IBCEPTC3",1,0)
IBCEPTC3 ;ALB/ESG - EDI PREVIOUSLY TRANSMITTED CLAIMS ACTIONS ;12/19/05
"RTN","IBCEPTC3",2,0)
 ;;2.0;INTEGRATED BILLING;**320,547**;21-MAR-94;Build 119
"RTN","IBCEPTC3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEPTC3",4,0)
 ;
"RTN","IBCEPTC3",5,0)
 ; IB*2.0*547 Variable IBLOC is pre-defined (in IBCEPTC)
"RTN","IBCEPTC3",6,0)
 Q
"RTN","IBCEPTC3",7,0)
 ;
"RTN","IBCEPTC3",8,0)
SELECT ; Select claims to resubmit
"RTN","IBCEPTC3",9,0)
 N IBIFN,IBZ,IBI,IBQ,DIR,VALMY,X,Y
"RTN","IBCEPTC3",10,0)
 D FULL^VALM1
"RTN","IBCEPTC3",11,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCEPTC3",12,0)
 S IBZ=0 F  S IBZ=$O(VALMY(IBZ)) Q:'IBZ  D
"RTN","IBCEPTC3",13,0)
 . S IBQ=$G(^TMP("IB_PREV_CLAIM_LIST_DX",$J,IBZ)),IBI=+$P(IBQ,U,2),IBQ=+IBQ
"RTN","IBCEPTC3",14,0)
 . S IBIFN=$S(IBLOC:IBI,1:+$G(^IBA(364,IBI,0)))
"RTN","IBCEPTC3",15,0)
 . Q:'IBIFN
"RTN","IBCEPTC3",16,0)
 . D MARK(IBIFN,IBZ,IBQ,IBI,1,.VALMHDR)
"RTN","IBCEPTC3",17,0)
 S VALMBCK="R"
"RTN","IBCEPTC3",18,0)
 Q
"RTN","IBCEPTC3",19,0)
 ;
"RTN","IBCEPTC3",20,0)
SELBATCH ; Select a batch to resubmit
"RTN","IBCEPTC3",21,0)
 ; Assumes IBSORT is defined
"RTN","IBCEPTC3",22,0)
 N DIC,DIR,X,Y,Z,IBQ,IBZ,IBI,IBDX,IBASK,IBOK,IBY,DTOUT,DUOUT
"RTN","IBCEPTC3",23,0)
 D FULL^VALM1
"RTN","IBCEPTC3",24,0)
 ; IB*2.0*547 Do not allow batch resubmit of locally printed claims
"RTN","IBCEPTC3",25,0)
 I IBLOC=1 D  G SELBQ
"RTN","IBCEPTC3",26,0)
 . S DIR(0)="EA",DIR("A",1)="This action is not available for Locally Printed Claims",DIR("A")="Press return to continue: "
"RTN","IBCEPTC3",27,0)
 I IBSORT'=1 D  G SELBQ
"RTN","IBCEPTC3",28,0)
 . S DIR(0)="EA",DIR("A",1)="This action is not available unless you chose to sort by batch",DIR("A")="Press return to continue: "
"RTN","IBCEPTC3",29,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC3",30,0)
 S DIC="^IBA(364.1,",DIC(0)="AEMQ",DIC("S")="I $D(^TMP(""IB_PREV_CLAIM_BATCH"",$J,+Y))"
"RTN","IBCEPTC3",31,0)
 D ^DIC K DIC
"RTN","IBCEPTC3",32,0)
 I Y'>0 G SELBQ
"RTN","IBCEPTC3",33,0)
 S IBY=+Y,VALMBG=+$G(^TMP("IB_PREV_CLAIM_BATCH",$J,IBY))
"RTN","IBCEPTC3",34,0)
 ;
"RTN","IBCEPTC3",35,0)
 S (IBOK,IBASK)=1
"RTN","IBCEPTC3",36,0)
 I $G(^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,"SEL")) D  G:'IBOK SELBQ
"RTN","IBCEPTC3",37,0)
 . S DIR(0)="YA",DIR("A",1)="This batch was previously selected.",DIR("A")="Do you want to de-select all claims in this batch?: ",DIR("B")="No"
"RTN","IBCEPTC3",38,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC3",39,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEPTC3",40,0)
 . I Y S IBASK=0 K ^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,"SEL")
"RTN","IBCEPTC3",41,0)
 ;
"RTN","IBCEPTC3",42,0)
 S IBQ=0      ; last screen row# for claim
"RTN","IBCEPTC3",43,0)
 F  S IBQ=$O(^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,IBQ)) Q:'IBQ  D
"RTN","IBCEPTC3",44,0)
 . S IBZ=$G(^(IBQ))      ; IBIFN^selection#
"RTN","IBCEPTC3",45,0)
 . S Z=$P(IBZ,U,2)       ; selection#
"RTN","IBCEPTC3",46,0)
 . S IBDX=$G(^TMP("IB_PREV_CLAIM_LIST_DX",$J,+Z))   ; 1st screen row# for claim^364 ien
"RTN","IBCEPTC3",47,0)
 . S IBI=$P(IBDX,U,2)    ; 364 ien
"RTN","IBCEPTC3",48,0)
 . D MARK(+IBZ,Z,+IBDX,IBI,IBASK,.VALMHDR)
"RTN","IBCEPTC3",49,0)
 ;
"RTN","IBCEPTC3",50,0)
 I IBASK S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,"SEL")=1
"RTN","IBCEPTC3",51,0)
 ;
"RTN","IBCEPTC3",52,0)
SELBQ S VALMBCK="R"
"RTN","IBCEPTC3",53,0)
 Q
"RTN","IBCEPTC3",54,0)
 ;
"RTN","IBCEPTC3",55,0)
MARK(IBIFN,IBZ,IBQ,IBI,IBASK,VALMHDR) ; Mark claim as selected for resubmit
"RTN","IBCEPTC3",56,0)
 ; Returns VALMHDR killed if any selections/de-selections made
"RTN","IBCEPTC3",57,0)
 N DIR,X,Y
"RTN","IBCEPTC3",58,0)
 I $D(^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN)) D  Q
"RTN","IBCEPTC3",59,0)
 . S Y=1
"RTN","IBCEPTC3",60,0)
 . I IBASK D
"RTN","IBCEPTC3",61,0)
 .. S DIR(0)="YA",DIR("B")="No",DIR("A",1)="Claim "_$P($G(^DGCR(399,IBIFN,0)),U)_" for entry # "_IBZ_" has already been selected",DIR("A")="Do you want to de-select it?: " W ! D ^DIR K DIR
"RTN","IBCEPTC3",62,0)
 . I Y=1 K ^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN) S $E(^TMP("IB_PREV_CLAIM_LIST",$J,IBQ,0),6)=" ",^TMP("IB_PREV_CLAIM_SELECT",$J)=^TMP("IB_PREV_CLAIM_SELECT",$J)-1 K VALMHDR
"RTN","IBCEPTC3",63,0)
 ;
"RTN","IBCEPTC3",64,0)
 S ^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN)=IBQ,^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN,0)=IBI,^TMP("IB_PREV_CLAIM_SELECT",$J)=$G(^TMP("IB_PREV_CLAIM_SELECT",$J))+1
"RTN","IBCEPTC3",65,0)
 S $E(^TMP("IB_PREV_CLAIM_LIST",$J,IBQ,0),6)="*" K VALMHDR
"RTN","IBCEPTC3",66,0)
 Q
"RTN","IBCEPTC3",67,0)
 ;
"RTN","IBCEPTC3",68,0)
VIEW ; View claims selected
"RTN","IBCEPTC3",69,0)
 N IBCT,IBQUIT,DIR,X,Y,Z,Z0
"RTN","IBCEPTC3",70,0)
 D FULL^VALM1
"RTN","IBCEPTC3",71,0)
 I '$O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) D  G VIEWQ
"RTN","IBCEPTC3",72,0)
 . S DIR(0)="EA",DIR("A")="No claims have been selected - Press return to continue " D ^DIR K DIR
"RTN","IBCEPTC3",73,0)
 W @IOF
"RTN","IBCEPTC3",74,0)
 S (IBQUIT,IBCT)=0
"RTN","IBCEPTC3",75,0)
 W !,+^TMP("IB_PREV_CLAIM_SELECT",$J)," claims selected:"
"RTN","IBCEPTC3",76,0)
 S Z="" F  S Z=$O(^TMP("IB_PREV_CLAIM_SELECT",$J,Z)) Q:'Z  S Z0=+$G(^(Z)) D
"RTN","IBCEPTC3",77,0)
 . Q:'$D(^TMP("IB_PREV_CLAIM_LIST",$J,Z0,0))
"RTN","IBCEPTC3",78,0)
 . S IBCT=IBCT+1
"RTN","IBCEPTC3",79,0)
 . I '(IBCT#15) S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCEPTC3",80,0)
 .. S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTC3",81,0)
 .. I 'Y S IBQUIT=1
"RTN","IBCEPTC3",82,0)
 . W !,"  ",$E(^TMP("IB_PREV_CLAIM_LIST",$J,Z0,0),7,47)
"RTN","IBCEPTC3",83,0)
 ;
"RTN","IBCEPTC3",84,0)
 G:IBQUIT VIEWQ
"RTN","IBCEPTC3",85,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTC3",86,0)
 ;
"RTN","IBCEPTC3",87,0)
VIEWQ S VALMBCK="R"
"RTN","IBCEPTC3",88,0)
 Q
"RTN","IBCEPTC3",89,0)
 ;
"RTN","IBCEPTC3",90,0)
RESUB ; Resubmit selected claims
"RTN","IBCEPTC3",91,0)
 N DIR,X,Y,IBIFN,IB364,Z1,IBTYPPTC,DIRUT,DIROUT,DTOUT,DUOUT,IBFSKIP,IBABORT
"RTN","IBCEPTC3",92,0)
 D FULL^VALM1
"RTN","IBCEPTC3",93,0)
 I '$O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) D  G RESUBQ
"RTN","IBCEPTC3",94,0)
 . N DIR,X,Y
"RTN","IBCEPTC3",95,0)
 . S DIR(0)="EA",DIR("A")="No claims have been selected - Press return to continue " D ^DIR K DIR
"RTN","IBCEPTC3",96,0)
 ;
"RTN","IBCEPTC3",97,0)
 ; Ask user if resubmit as production or as test
"RTN","IBCEPTC3",98,0)
 S DIR(0)="SA^P:Production;T:Test Only"
"RTN","IBCEPTC3",99,0)
 S DIR("A")="Resubmit Claims: "
"RTN","IBCEPTC3",100,0)
 S DIR("B")="Production"
"RTN","IBCEPTC3",101,0)
 S DIR("?",1)="  Select Production to resubmit the claims to the payer for payment."
"RTN","IBCEPTC3",102,0)
 S DIR("?")="  Select Test to resubmit the claims as Test claims only."
"RTN","IBCEPTC3",103,0)
 ; IB*2.0*547  Only allow locally printed claims to resubmit as Test
"RTN","IBCEPTC3",104,0)
 W ! I IBLOC'=1 D ^DIR K DIR
"RTN","IBCEPTC3",105,0)
 I $D(DIRUT) G RESUBQ
"RTN","IBCEPTC3",106,0)
 S IBTYPPTC="TEST"
"RTN","IBCEPTC3",107,0)
 I IBLOC'=1,Y="P" S IBTYPPTC="PRODUCTION"
"RTN","IBCEPTC3",108,0)
 ;
"RTN","IBCEPTC3",109,0)
 S DIR(0)="YA",DIR("B")="No"
"RTN","IBCEPTC3",110,0)
 S DIR("A",1)="You are about to resubmit "_+^TMP("IB_PREV_CLAIM_SELECT",$J)_" claims as "_IBTYPPTC_" claims."
"RTN","IBCEPTC3",111,0)
 S DIR("A")="Are you sure you want to continue?: "
"RTN","IBCEPTC3",112,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC3",113,0)
 I Y'=1 G RESUBQ
"RTN","IBCEPTC3",114,0)
 ;
"RTN","IBCEPTC3",115,0)
 ; OK to proceed and resubmit
"RTN","IBCEPTC3",116,0)
 W !!,"Resubmission in process ... "
"RTN","IBCEPTC3",117,0)
 ;
"RTN","IBCEPTC3",118,0)
 ; loop thru selected claims and set into scratch globals
"RTN","IBCEPTC3",119,0)
 S IBFSKIP=0
"RTN","IBCEPTC3",120,0)
 KILL ^TMP("IBRCBOLD",$J)
"RTN","IBCEPTC3",121,0)
 S IBIFN=0 F  S IBIFN=$O(^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN)) Q:'IBIFN  S Z1=+$G(^(IBIFN)),IB364=+$G(^(IBIFN,0)) I IB364 D
"RTN","IBCEPTC3",122,0)
 . ;
"RTN","IBCEPTC3",123,0)
 . I IBTYPPTC="TEST" D
"RTN","IBCEPTC3",124,0)
 .. S ^TMP("IBEDI_TEST_BATCH",$J,IB364)=""
"RTN","IBCEPTC3",125,0)
 .. S ^TMP("IBRESUBMIT",$J,IB364)=""
"RTN","IBCEPTC3",126,0)
 .. I Z1 D MARK(IBIFN,"",Z1,IB364,0,.VALMHDR)
"RTN","IBCEPTC3",127,0)
 .. Q
"RTN","IBCEPTC3",128,0)
 . ;
"RTN","IBCEPTC3",129,0)
 . I IBTYPPTC="PRODUCTION" D
"RTN","IBCEPTC3",130,0)
 .. I '$$TXOK(IBIFN) S IBFSKIP=IBFSKIP+1 Q    ; transmission not allowed
"RTN","IBCEPTC3",131,0)
 .. N Y S Y=$$ADDTBILL^IBCB1(IBIFN)  ; new entry in file 364 - "X" status
"RTN","IBCEPTC3",132,0)
 .. I '$P(Y,U,3) Q                   ; quit if new entry didn't get added
"RTN","IBCEPTC3",133,0)
 .. S ^TMP("IBSELX",$J,+Y)=""
"RTN","IBCEPTC3",134,0)
 .. S ^TMP("IBRCBOLD",$J,IB364)=""   ; save list of old transmit bills
"RTN","IBCEPTC3",135,0)
 .. I Z1 D MARK(IBIFN,"",Z1,IB364,0,.VALMHDR)
"RTN","IBCEPTC3",136,0)
 .. Q
"RTN","IBCEPTC3",137,0)
 . ;
"RTN","IBCEPTC3",138,0)
 . Q
"RTN","IBCEPTC3",139,0)
 ;
"RTN","IBCEPTC3",140,0)
 ; set top level of scratch globals based on test or production
"RTN","IBCEPTC3",141,0)
 I IBTYPPTC="TEST" S ^TMP("IBRESUBMIT",$J)="^^0^1",^TMP("IBEDI_TEST_BATCH",$J)=1
"RTN","IBCEPTC3",142,0)
 E  KILL ^TMP("IBRESUBMIT",$J),^TMP("IBEDI_TEST_BATCH",$J),^TMP("IBONE",$J) S ^TMP("IBSELX",$J)=0
"RTN","IBCEPTC3",143,0)
 ;
"RTN","IBCEPTC3",144,0)
 ; resubmit call
"RTN","IBCEPTC3",145,0)
 D EN1^IBCE837B("","","",.IBABORT)
"RTN","IBCEPTC3",146,0)
 ;
"RTN","IBCEPTC3",147,0)
 ; if user aborted at the last minute, then get rid of the new entries
"RTN","IBCEPTC3",148,0)
 ; in file 364 that were added for production claim sending
"RTN","IBCEPTC3",149,0)
 I IBABORT D
"RTN","IBCEPTC3",150,0)
 . N IB,DIK,DA
"RTN","IBCEPTC3",151,0)
 . S IB=0 F  S IB=$O(^TMP("IBSELX",$J,IB)) Q:'IB  S DIK="^IBA(364,",DA=IB D ^DIK
"RTN","IBCEPTC3",152,0)
 . Q
"RTN","IBCEPTC3",153,0)
 ;
"RTN","IBCEPTC3",154,0)
 ; update EDI files for the old transmit bills
"RTN","IBCEPTC3",155,0)
 I 'IBABORT D
"RTN","IBCEPTC3",156,0)
 . N IB
"RTN","IBCEPTC3",157,0)
 . S IB=0 F  S IB=$O(^TMP("IBRCBOLD",$J,IB)) Q:'IB  D UPDEDI^IBCEM(IB,"R")
"RTN","IBCEPTC3",158,0)
 . Q
"RTN","IBCEPTC3",159,0)
 ;
"RTN","IBCEPTC3",160,0)
 ; cleanup
"RTN","IBCEPTC3",161,0)
 K ^TMP("IBEDI_TEST_BATCH",$J),^TMP("IBRESUBMIT",$J),^TMP("IBSELX",$J),^TMP("IBRCBOLD",$J)
"RTN","IBCEPTC3",162,0)
 I '$O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) K ^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC3",163,0)
 S DIR(0)="EA"
"RTN","IBCEPTC3",164,0)
 S DIR("A",1)="Selected claims have been resubmitted as "_IBTYPPTC_"."
"RTN","IBCEPTC3",165,0)
 I IBFSKIP D
"RTN","IBCEPTC3",166,0)
 . S DIR("A",2)="Please note: Some claims were not eligible to be resubmitted as live claims."
"RTN","IBCEPTC3",167,0)
 . S DIR("A",3)="             These claims are still indicated as being selected."
"RTN","IBCEPTC3",168,0)
 . Q
"RTN","IBCEPTC3",169,0)
 I IBABORT K DIR("A") S DIR("A",1)="No claims were resubmitted."
"RTN","IBCEPTC3",170,0)
 S DIR("A")="Press return to continue "
"RTN","IBCEPTC3",171,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC3",172,0)
 K VALMHDR
"RTN","IBCEPTC3",173,0)
 ;
"RTN","IBCEPTC3",174,0)
RESUBQ ;
"RTN","IBCEPTC3",175,0)
 S VALMBCK="R"
"RTN","IBCEPTC3",176,0)
 Q
"RTN","IBCEPTC3",177,0)
 ;
"RTN","IBCEPTC3",178,0)
REPORT ; Print report
"RTN","IBCEPTC3",179,0)
 ; Assumes IBSORT, IBDT1, IBDT2 defined
"RTN","IBCEPTC3",180,0)
 N IBACT,Z
"RTN","IBCEPTC3",181,0)
 D FULL^VALM1
"RTN","IBCEPTC3",182,0)
 F  S IBACT=0 D DEVSEL^IBCEPTC(.IBACT) Q:IBACT 
"RTN","IBCEPTC3",183,0)
 I IBACT'=99 D
"RTN","IBCEPTC3",184,0)
 . N IBREP
"RTN","IBCEPTC3",185,0)
 . S IBREP="R" D RPT^IBCEPTC1(IBSORT,IBDT1,IBDT2)
"RTN","IBCEPTC3",186,0)
 ;
"RTN","IBCEPTC3",187,0)
 D HOME^%ZIS
"RTN","IBCEPTC3",188,0)
 S VALMBCK="R"
"RTN","IBCEPTC3",189,0)
 Q
"RTN","IBCEPTC3",190,0)
 ;
"RTN","IBCEPTC3",191,0)
CKSENT(VALMBCK) ; Make sure selected entries are transmitted
"RTN","IBCEPTC3",192,0)
 ;
"RTN","IBCEPTC3",193,0)
 N IBOK,DIR,X,Y
"RTN","IBCEPTC3",194,0)
 S IBOK=1
"RTN","IBCEPTC3",195,0)
 I $O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) D
"RTN","IBCEPTC3",196,0)
 . D FULL^VALM1
"RTN","IBCEPTC3",197,0)
 . S DIR(0)="YA",DIR("A",1)="You have selected "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" claims, but have not resubmitted them",DIR("A")="Are you sure you want to quit before you resubmit them?: ",DIR("B")="No"
"RTN","IBCEPTC3",198,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC3",199,0)
 . I Y'=1 S VALMBCK="R",IBOK=0
"RTN","IBCEPTC3",200,0)
 I IBOK S VALMBCK="Q"
"RTN","IBCEPTC3",201,0)
 Q
"RTN","IBCEPTC3",202,0)
 ;
"RTN","IBCEPTC3",203,0)
TXOK(IBIFN) ; Function determines if claim is OK for live resubmission
"RTN","IBCEPTC3",204,0)
 NEW OK,IB364,IBD,IBSTAT
"RTN","IBCEPTC3",205,0)
 S OK=0
"RTN","IBCEPTC3",206,0)
 I '$P($G(^DGCR(399,+$G(IBIFN),"TX")),U,2) G TXOKX                  ; last electronic extract date
"RTN","IBCEPTC3",207,0)
 I '$F(".2.3.4.","."_$P($G(^DGCR(399,IBIFN,0)),U,13)_".") G TXOKX   ; claim status
"RTN","IBCEPTC3",208,0)
 S IB364=+$$LAST364^IBCEF4(+$G(IBIFN)) I 'IB364 G TXOKX             ; transmit bill exists
"RTN","IBCEPTC3",209,0)
 S IBD=$G(^IBA(364,IB364,0)) I IBD="" G TXOKX
"RTN","IBCEPTC3",210,0)
 S IBSTAT=$P(IBD,U,3) I IBSTAT="X" G TXOKX                          ; already awaiting extract
"RTN","IBCEPTC3",211,0)
 S OK=1
"RTN","IBCEPTC3",212,0)
TXOKX ;
"RTN","IBCEPTC3",213,0)
 Q OK
"RTN","IBCEPTC3",214,0)
 ;
"RTN","IBCEU1")
0^45^B91847621^B90709480
"RTN","IBCEU1",1,0)
IBCEU1 ;ALB/TMP - EDI UTILITIES FOR EOB PROCESSING ;10-FEB-99
"RTN","IBCEU1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,296,349,371,432,473,547**;21-MAR-94;Build 119
"RTN","IBCEU1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEU1",4,0)
 ;
"RTN","IBCEU1",5,0)
CCOB1(IBIFN,NODE,SEQ) ; Extract Claim level COB data
"RTN","IBCEU1",6,0)
 ; for a bill IBIFN
"RTN","IBCEU1",7,0)
 ; NODE = the file 361.1 node(s) to be returned, separated by commas
"RTN","IBCEU1",8,0)
 ; SEQ = the specific insurance sequence you want returned.  If not =
"RTN","IBCEU1",9,0)
 ;       1, 2, or 3, all are returned
"RTN","IBCEU1",10,0)
 ; Returns IBXDATA(COB,n,node)  where COB = COB insurance sequence,
"RTN","IBCEU1",11,0)
 ;  n is the entry number in file 361.1 and node is the node requested
"RTN","IBCEU1",12,0)
 ;   = the requested node's data
"RTN","IBCEU1",13,0)
 ;
"RTN","IBCEU1",14,0)
 N IB,IBN,IBBILL,IBS,A,B,C,IBCURR,IBMRAF,Z
"RTN","IBCEU1",15,0)
 ;
"RTN","IBCEU1",16,0)
 K IBXDATA
"RTN","IBCEU1",17,0)
 ;
"RTN","IBCEU1",18,0)
 S:$G(NODE)="" NODE=1
"RTN","IBCEU1",19,0)
 S IB=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU1",20,0)
 S IBCURR=$$COB^IBCEF(IBIFN)
"RTN","IBCEU1",21,0)
 ; ib*2.0*547 make sure you only set MRA flag if MRA on current sequence being checked
"RTN","IBCEU1",22,0)
 ;S IBMRAF=$$MCRONBIL^IBEFUNC(IBIFN)
"RTN","IBCEU1",23,0)
 S IBMRAF=$P($$MCRONBIL^IBEFUNC(IBIFN,$S(IBCURR="P":1,IBCURR="S":2,1:3)),U,2)
"RTN","IBCEU1",24,0)
 ;
"RTN","IBCEU1",25,0)
 S:"123"'[$G(SEQ) SEQ=""
"RTN","IBCEU1",26,0)
 ;
"RTN","IBCEU1",27,0)
 F B=1:1:3 S IBBILL=$P(IB,U,B) I IBBILL S C=0 F  S C=$O(^IBM(361.1,"B",IBBILL,C)) Q:'C  D
"RTN","IBCEU1",28,0)
 . I '$$EOBELIG(C,IBMRAF,IBCURR) Q      ; eob not eligible for secondary claim
"RTN","IBCEU1",29,0)
 . S IBS=$P($G(^IBM(361.1,C,0)),U,15)   ; insurance sequence
"RTN","IBCEU1",30,0)
 . I $S('$G(SEQ):1,1:SEQ=IBS) D
"RTN","IBCEU1",31,0)
 .. F Z=1:1:$L(NODE,",") D
"RTN","IBCEU1",32,0)
 ... S A=$P(NODE,",",Z)
"RTN","IBCEU1",33,0)
 ... Q:A=""
"RTN","IBCEU1",34,0)
 ... S IBN=$G(^IBM(361.1,C,A))
"RTN","IBCEU1",35,0)
 ... ; Start IB*2.0*473 BI Added to null patient responsibility in OI1
"RTN","IBCEU1",36,0)
 ... ; if the data is contained at the line level to be sent in LCOB.
"RTN","IBCEU1",37,0)
 ... ; Perform the following for only OI1.19 using the dictionary 364.6 IEN.
"RTN","IBCEU1",38,0)
 ... S:+$G(IBX0)=2204&($$LPREXIST(C))&(A=1) $P(IBN,U,2)=""
"RTN","IBCEU1",39,0)
 ... ; End IB*2.0*473
"RTN","IBCEU1",40,0)
 ... I $TR(IBN,U)'="" S IBXDATA(IBS,C,A)=IBN
"RTN","IBCEU1",41,0)
 ;
"RTN","IBCEU1",42,0)
 Q
"RTN","IBCEU1",43,0)
 ;
"RTN","IBCEU1",44,0)
CCAS1(IBIFN,SEQ) ; Extract all MEDICARE COB claim level adjustment data
"RTN","IBCEU1",45,0)
 ; for a bill IBIFN (subfile 361.11 in file 361.1)
"RTN","IBCEU1",46,0)
 ; SEQ = the specific insurance sequence you want returned.  If not =
"RTN","IBCEU1",47,0)
 ;       1, 2, or 3, all are returned
"RTN","IBCEU1",48,0)
 ; Returns IBXDATA(COB,n)  where COB = COB insurance sequence,
"RTN","IBCEU1",49,0)
 ;       n is the entry number in file 361.1 and
"RTN","IBCEU1",50,0)
 ;       = the 0-node of the subfile entry (361.11)
"RTN","IBCEU1",51,0)
 ;    and IBXDATA(COB,n,m) where m is a sequential # and
"RTN","IBCEU1",52,0)
 ;                         = this level's 0-node
"RTN","IBCEU1",53,0)
 N IB,IBA,IBS,IB0,IB00,IBBILL,B,C,D,E
"RTN","IBCEU1",54,0)
 ;
"RTN","IBCEU1",55,0)
 S IB=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU1",56,0)
 S:"123"'[$G(SEQ) SEQ=""
"RTN","IBCEU1",57,0)
 ;
"RTN","IBCEU1",58,0)
 F B=1:1:3 S IBBILL=$P(IB,U,B) I IBBILL S C=0 F  S C=$O(^IBM(361.1,"B",IBBILL,C)) Q:'C  D
"RTN","IBCEU1",59,0)
 . I '$$EOBELIG(C) Q      ; eob not eligible for secondary claim
"RTN","IBCEU1",60,0)
 . S IBS=$P($G(^IBM(361.1,C,0)),U,15)   ; insurance sequence
"RTN","IBCEU1",61,0)
 . I $S('$G(SEQ):1,1:SEQ=IBS) D
"RTN","IBCEU1",62,0)
 .. S (IBA,D)=0 F  S D=$O(^IBM(361.1,C,10,D)) Q:'D  S IB0=$G(^(D,0)) D
"RTN","IBCEU1",63,0)
 ... S IBXDATA(IBS,D)=IB0
"RTN","IBCEU1",64,0)
 ... S (IBA,E)=0
"RTN","IBCEU1",65,0)
 ... F  S E=$O(^IBM(361.1,C,10,D,1,E)) Q:'E  S IB00=$G(^(E,0)) D
"RTN","IBCEU1",66,0)
 .... S IBA=IBA+1
"RTN","IBCEU1",67,0)
 .... I $TR(IB00,U)'="" S IBXDATA(IBS,D,IBA)=IB00
"RTN","IBCEU1",68,0)
 ;
"RTN","IBCEU1",69,0)
 Q
"RTN","IBCEU1",70,0)
 ;
"RTN","IBCEU1",71,0)
SEQ(A) ; Translate sequence # A into corresponding letter representation
"RTN","IBCEU1",72,0)
 S A=$E("PST",A)
"RTN","IBCEU1",73,0)
 I $S(A'="":"PST"'[A,1:1) S A="P"
"RTN","IBCEU1",74,0)
 Q A
"RTN","IBCEU1",75,0)
 ;
"RTN","IBCEU1",76,0)
EOBTOT(IBIFN,IBCOBN) ; Total all EOB's for a bill's COB sequence
"RTN","IBCEU1",77,0)
 ; Function returns the total of all EOB's for a specific COB seq
"RTN","IBCEU1",78,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU1",79,0)
 ; IBCOBN = the # of the COB sequence you want EOB/MRA total for (1-3)
"RTN","IBCEU1",80,0)
 ;
"RTN","IBCEU1",81,0)
 N Z,Z0,IBTOT
"RTN","IBCEU1",82,0)
 S IBTOT=0
"RTN","IBCEU1",83,0)
 I $O(^IBM(361.1,"ABS",IBIFN,IBCOBN,0)) D
"RTN","IBCEU1",84,0)
 . ; Set up prior payment field here from MRA/EOB(s)
"RTN","IBCEU1",85,0)
 . S (IBTOT,Z)=0
"RTN","IBCEU1",86,0)
 . F  S Z=$O(^IBM(361.1,"ABS",IBIFN,IBCOBN,Z)) Q:'Z  D
"RTN","IBCEU1",87,0)
 .. ; HD64841 IB*2*371 - total up the payer paid amounts
"RTN","IBCEU1",88,0)
 .. S IBTOT=IBTOT+$P($G(^IBM(361.1,Z,1)),U,1)
"RTN","IBCEU1",89,0)
 Q IBTOT
"RTN","IBCEU1",90,0)
 ;
"RTN","IBCEU1",91,0)
 ;
"RTN","IBCEU1",92,0)
LCOBOUT(IBXSAVE,IBXDATA,COL) ; Output the line adjustment reasons COB
"RTN","IBCEU1",93,0)
 ;  line # data for an electronic claim
"RTN","IBCEU1",94,0)
 ; IBXSAVE,IBXDATA = arrays holding formatter information for claim -
"RTN","IBCEU1",95,0)
 ;                   pass by reference
"RTN","IBCEU1",96,0)
 ; COL = the column in the 837 flat file being output for LCAS record
"RTN","IBCEU1",97,0)
 N LINE,COBSEQ,RECCT,GRPCD,SEQ,RCCT,RCPC,DATA,RCREC,SEQLINE K IBXDATA
"RTN","IBCEU1",98,0)
 S (LINE,RECCT)=0
"RTN","IBCEU1",99,0)
 S RCPC=(COL#3) S:'RCPC RCPC=3
"RTN","IBCEU1",100,0)
 S RCREC=$S(COL'<4:COL-1\3,1:0)
"RTN","IBCEU1",101,0)
 ;S RCREC=$S(COL'<4:COL+5\6-1,1:0)
"RTN","IBCEU1",102,0)
 F  S LINE=$O(IBXSAVE("LCOB",LINE)) Q:'LINE  D
"RTN","IBCEU1",103,0)
 . S COBSEQ=0
"RTN","IBCEU1",104,0)
 . F  S COBSEQ=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ)) Q:'COBSEQ  S SEQLINE=0 F  S SEQLINE=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE)) Q:'SEQLINE  S GRPCD="" F  S GRPCD=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD)) Q:GRPCD=""  D
"RTN","IBCEU1",105,0)
 .. S RECCT=RECCT+1
"RTN","IBCEU1",106,0)
 .. ;IB*2.0*432/TAZ Added payer sequence in piece 22 of LCAS record (parameter Z)
"RTN","IBCEU1",107,0)
 .. I COL="Z" S IBXDATA(RECCT)=$E("PST",COBSEQ) I RECCT>1 D ID^IBCEF2(RECCT,"LCAS")
"RTN","IBCEU1",108,0)
 .. I COL=2 S IBXDATA(RECCT)=LINE,DATA=LINE D:RECCT>1 ID^IBCEF2(RECCT,"LCAS")
"RTN","IBCEU1",109,0)
 .. I COL=3 S IBXDATA(RECCT)=$TR(GRPCD," ")
"RTN","IBCEU1",110,0)
 .. S (SEQ,RCCT)=0
"RTN","IBCEU1",111,0)
 .. F  S SEQ=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)) Q:'SEQ  I $TR($G(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)),U)'="" D
"RTN","IBCEU1",112,0)
 ... S RCCT=RCCT+1
"RTN","IBCEU1",113,0)
 ... Q:COL'<4&(RCCT'=RCREC)&(RCCT'>6)
"RTN","IBCEU1",114,0)
 ... S DATA=$S(COL=2:LINE,COL=3:$TR(GRPCD," "),1:$P($G(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)),U,RCPC))
"RTN","IBCEU1",115,0)
 ... I COL'<4,RCCT=RCREC S:DATA'="" IBXDATA(RECCT)=DATA Q
"RTN","IBCEU1",116,0)
 ... I RCCT>6 S RCCT=1,RECCT=RECCT+1 D:COL=2 ID^IBCEF2(RECCT,"LCAS") I DATA'="",$S(COL'>3:1,1:RCCT=RCREC) S IBXDATA(RECCT)=DATA
"RTN","IBCEU1",117,0)
 Q
"RTN","IBCEU1",118,0)
 ;
"RTN","IBCEU1",119,0)
CCOBOUT(IBXSAVE,IBXDATA,COL) ; Output the claim adjustment reasons COB
"RTN","IBCEU1",120,0)
 ;  data for an electronic claim
"RTN","IBCEU1",121,0)
 ; IBXSAVE,IBXDATA = arrays holding formatter information for claim -
"RTN","IBCEU1",122,0)
 ;                   pass by reference
"RTN","IBCEU1",123,0)
 ; COL = the column in the 837 flat file being output for CCAS record
"RTN","IBCEU1",124,0)
 N COBSEQ,RECCT,GRPSEQ,SEQ,RCPC,RCCT,RCREC,DATA K IBXDATA
"RTN","IBCEU1",125,0)
 S RECCT=0
"RTN","IBCEU1",126,0)
 S RCPC=(COL#3) S:'RCPC RCPC=3
"RTN","IBCEU1",127,0)
 S RCREC=$S(COL'<4:COL+5\6-1,1:0)
"RTN","IBCEU1",128,0)
 S COBSEQ=0
"RTN","IBCEU1",129,0)
 F  S COBSEQ=$O(IBXSAVE("CCAS",COBSEQ)) Q:'COBSEQ  S GRPSEQ="" F  S GRPSEQ=$O(IBXSAVE("CCAS",COBSEQ,GRPSEQ)) Q:GRPSEQ=""  D
"RTN","IBCEU1",130,0)
 . S RECCT=RECCT+1
"RTN","IBCEU1",131,0)
 . I COL=2 S IBXDATA(RECCT)=COBSEQ D:RECCT>1 ID^IBCEF2(RECCT,"CCAS")
"RTN","IBCEU1",132,0)
 . I COL=3 S IBXDATA(RECCT)=$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ)),U)
"RTN","IBCEU1",133,0)
 . S (SEQ,RCCT)=0
"RTN","IBCEU1",134,0)
 . F  S SEQ=$O(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)) Q:'SEQ  I $TR($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)),U)'="" D
"RTN","IBCEU1",135,0)
 .. S RCCT=RCCT+1
"RTN","IBCEU1",136,0)
 .. Q:COL'<4&(RCCT'=RCREC)&(RCCT'>6)
"RTN","IBCEU1",137,0)
 .. S DATA=$S(COL=2:COBSEQ,COL=3:$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ)),U),1:$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)),U,RCPC))
"RTN","IBCEU1",138,0)
 .. I COL'<4,RCCT=RCREC S:DATA'="" IBXDATA(RECCT)=DATA Q
"RTN","IBCEU1",139,0)
 .. I RCCT>6 S RCCT=1,RECCT=RECCT+1 D:COL=2 ID^IBCEF2(RECCT,"CCAS") I DATA'="",$S(COL'>3:1,1:RCCT=RCREC) S IBXDATA(RECCT)=DATA
"RTN","IBCEU1",140,0)
 Q
"RTN","IBCEU1",141,0)
 ;
"RTN","IBCEU1",142,0)
COBOUT(IBXSAVE,IBXDATA,CL) ; build LCOB segment data
"RTN","IBCEU1",143,0)
 ; The IBXSAVE array used here is built by INS-2, then LCOB-1.9
"RTN","IBCEU1",144,0)
 ; This is basically the 361.115, but all the piece numbers here in this
"RTN","IBCEU1",145,0)
 ; local array are one higher than the pieces in subfile 361.115.
"RTN","IBCEU1",146,0)
 N Z,M,N,P,PCCL
"RTN","IBCEU1",147,0)
 S (N,Z)=0
"RTN","IBCEU1",148,0)
 F  S Z=$O(IBXSAVE("LCOB",Z)) Q:'Z  D
"RTN","IBCEU1",149,0)
 . S M=0 F  S M=$O(IBXSAVE("LCOB",Z,"COB",M)) Q:'M  D
"RTN","IBCEU1",150,0)
 .. S P=0 F  S P=$O(IBXSAVE("LCOB",Z,"COB",M,P)) Q:'P  D
"RTN","IBCEU1",151,0)
 ... S N=N+1
"RTN","IBCEU1",152,0)
 ... I CL="Z" S IBXDATA(N)=$E("PST",M) Q
"RTN","IBCEU1",153,0)
 ... S PCCL=$P($G(IBXSAVE("LCOB",Z,"COB",M,P)),U,CL)
"RTN","IBCEU1",154,0)
 ... ;IB*2.0*432/TAZ - If the revenue code is blank for the EOB get it from the Primary Level
"RTN","IBCEU1",155,0)
 ... I PCCL="",CL=11 S PCCL=$P($G(IBXSAVE("LCOB",Z)),U)
"RTN","IBCEU1",156,0)
 ... S:PCCL'="" IBXDATA(N)=PCCL
"RTN","IBCEU1",157,0)
 Q
"RTN","IBCEU1",158,0)
 ;
"RTN","IBCEU1",159,0)
 ;IB*2.0*432/TAZ - XCOBOUT is the original code which did not capture all the LCOB records.
"RTN","IBCEU1",160,0)
XCOBOUT(IBXSAVE,IBXDATA,CL) ; build LCOB segment data
"RTN","IBCEU1",161,0)
 ; The IBXSAVE array used here is built by INS-2, then LCOB-1.9
"RTN","IBCEU1",162,0)
 ; This is basically the 361.115, but all the piece numbers here in this
"RTN","IBCEU1",163,0)
 ; local array are one higher than the pieces in subfile 361.115.
"RTN","IBCEU1",164,0)
 N Z,M,N,P,PCCL
"RTN","IBCEU1",165,0)
 S (N,Z,P)=0 F  S Z=$O(IBXSAVE("LCOB",Z)) Q:'Z  D
"RTN","IBCEU1",166,0)
 . S N=N+1
"RTN","IBCEU1",167,0)
 . S M=$O(IBXSAVE("LCOB",Z,"COB",""),-1) Q:'M
"RTN","IBCEU1",168,0)
 . S P=$O(IBXSAVE("LCOB",Z,"COB",M,""),-1) Q:'P
"RTN","IBCEU1",169,0)
 . ;IB*2.0*432/TAZ Added Payer Sequence to piece 18 of the LCOB record
"RTN","IBCEU1",170,0)
 . I CL="Z" S IBXDATA(N)=$E("PST",M) Q
"RTN","IBCEU1",171,0)
 . S PCCL=$P($G(IBXSAVE("LCOB",Z,"COB",M,P)),U,CL)
"RTN","IBCEU1",172,0)
 . S:PCCL'="" IBXDATA(N)=PCCL
"RTN","IBCEU1",173,0)
 . Q
"RTN","IBCEU1",174,0)
 Q
"RTN","IBCEU1",175,0)
 ;
"RTN","IBCEU1",176,0)
COBPYRID(IBXIEN,IBXSAVE,IBXDATA) ; cob insurance company payer id
"RTN","IBCEU1",177,0)
 N CT,N,NUM,Z
"RTN","IBCEU1",178,0)
 K IBXDATA
"RTN","IBCEU1",179,0)
 I '$D(IBXSAVE("LCOB")) G COBPYRX
"RTN","IBCEU1",180,0)
 ;
"RTN","IBCEU1",181,0)
 ;IB*2.0*432/TAZ - Replaced following code with loop to insure that all LCOB records have the Payer ID
"RTN","IBCEU1",182,0)
 ;D ALLPAYID^IBCEF2(IBXIEN,.NUM,1)
"RTN","IBCEU1",183,0)
 ;S NUM=$G(NUM(1))
"RTN","IBCEU1",184,0)
 ;S NUM=$E(NUM_$J("",5),1,5)
"RTN","IBCEU1",185,0)
 ;S (CT,N)=0
"RTN","IBCEU1",186,0)
 ;F  S N=$O(IBXSAVE("LCOB",N)) Q:'N  S CT=CT+1,IBXDATA(CT)=NUM
"RTN","IBCEU1",187,0)
 ;
"RTN","IBCEU1",188,0)
 D ALLPAYID^IBCEF2(IBXIEN,.NUM)
"RTN","IBCEU1",189,0)
 S (CT,N)=0
"RTN","IBCEU1",190,0)
 F  S N=$O(IBXSAVE("LCOB",N)) Q:'N  D
"RTN","IBCEU1",191,0)
 . S Z=0
"RTN","IBCEU1",192,0)
 . F  S Z=$O(IBXSAVE("LCOB",N,"COB",Z)) Q:'Z  D
"RTN","IBCEU1",193,0)
 .. S CT=CT+1,IBXDATA(CT)=$G(NUM(Z))
"RTN","IBCEU1",194,0)
COBPYRX ;
"RTN","IBCEU1",195,0)
 Q
"RTN","IBCEU1",196,0)
 ;
"RTN","IBCEU1",197,0)
EOBELIG(IBEOB,IBMRAF,IBCURR) ; EOB eligibility for secondary claim
"RTN","IBCEU1",198,0)
 ; Function to decide if EOB entry in file 361.1 (ien=IBEOB) is
"RTN","IBCEU1",199,0)
 ; eligible to be included for secondary claim creation process
"RTN","IBCEU1",200,0)
 ; The EOB is not eligible if the review status is not 3, or if there
"RTN","IBCEU1",201,0)
 ; is no insurance sequence indicator, or if the EOB has been DENIED
"RTN","IBCEU1",202,0)
 ; and the patient responsibility for that EOB is $0 and that EOB is
"RTN","IBCEU1",203,0)
 ; not a split EOB.  Split EOB's need to be included (IB*2*371).
"RTN","IBCEU1",204,0)
 ;
"RTN","IBCEU1",205,0)
 ; 432 - added new flag IBMRAF to indicate if we need to check only MRA's or all EOB's
"RTN","IBCEU1",206,0)
 ; IBMRAF = 1 if only need MRA EOB's
"RTN","IBCEU1",207,0)
 ;
"RTN","IBCEU1",208,0)
 NEW ELIG,IBDATA,PTRESP
"RTN","IBCEU1",209,0)
 S ELIG=0
"RTN","IBCEU1",210,0)
 ; IB*2.0*432/TAZ Get current Payer sequence if not passed in.
"RTN","IBCEU1",211,0)
 I '$G(IBCURR) S IBCURR=$$COB^IBCEF(IBIFN)
"RTN","IBCEU1",212,0)
 I '$G(IBEOB) G EOBELIGX
"RTN","IBCEU1",213,0)
 S IBDATA=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEU1",214,0)
 I $G(IBMRAF)=1,$P(IBDATA,U,4)'=1 G EOBELIGX      ; Only MRA EOB's for now if flag = 1
"RTN","IBCEU1",215,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) G EOBELIGX     ; filing error
"RTN","IBCEU1",216,0)
 I $P(IBDATA,U,16)'=3 G EOBELIGX     ; review status - accepted-complete
"RTN","IBCEU1",217,0)
 I '$P(IBDATA,U,15) G EOBELIGX       ; insurance sequence must exist
"RTN","IBCEU1",218,0)
 ; IB*2.0*432/TAZ Don't send EOB data for current payer
"RTN","IBCEU1",219,0)
 I $P(IBDATA,U,15)=IBCURR G EOBELIGX ; Don't send EOB data for current payer (this is for retransmits)
"RTN","IBCEU1",220,0)
 S PTRESP=$P($G(^IBM(361.1,IBEOB,1)),U,2)     ; Pt Resp Amount for 1500s
"RTN","IBCEU1",221,0)
 I $$FT^IBCEF(+IBDATA)=3 S PTRESP=$$PTRESPI^IBCECOB1(IBEOB)  ; for UBs
"RTN","IBCEU1",222,0)
 I PTRESP'>0,$P(IBDATA,U,13)=2,'$$SPLIT^IBCEMU1(IBEOB) G EOBELIGX     ; Denied & No Pt. Resp. & not a split MRA
"RTN","IBCEU1",223,0)
 ;
"RTN","IBCEU1",224,0)
 S ELIG=1
"RTN","IBCEU1",225,0)
EOBELIGX ;
"RTN","IBCEU1",226,0)
 Q ELIG
"RTN","IBCEU1",227,0)
 ;
"RTN","IBCEU1",228,0)
EOBCNT(IBIFN) ; This function counts up the number of EOBs that are eligible
"RTN","IBCEU1",229,0)
 ; for the secondary claim creation process for a given bill#.
"RTN","IBCEU1",230,0)
 NEW CNT,IEN
"RTN","IBCEU1",231,0)
 S (CNT,IEN)=0
"RTN","IBCEU1",232,0)
 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D
"RTN","IBCEU1",233,0)
 . I $$EOBELIG(IEN) S CNT=CNT+1
"RTN","IBCEU1",234,0)
 . Q
"RTN","IBCEU1",235,0)
EOBCNTX ;
"RTN","IBCEU1",236,0)
 Q CNT
"RTN","IBCEU1",237,0)
 ;
"RTN","IBCEU1",238,0)
LPTRESP(IBIFN,IBXSAVE,IBXDATA,CL)  ; Line level patient responsibility.
"RTN","IBCEU1",239,0)
 ; Added with IB*2.0*473 BI
"RTN","IBCEU1",240,0)
 N IBPTZ,IBPTM,IBPTP,IBPTPR,IBPRDATA,IBPTCNT
"RTN","IBCEU1",241,0)
 S:'$D(CL) CL=17
"RTN","IBCEU1",242,0)
 S IBPTCNT=0
"RTN","IBCEU1",243,0)
 S IBPTZ=0 F  S IBPTZ=$O(IBXSAVE("LCOB",IBPTZ)) Q:'IBPTZ  D
"RTN","IBCEU1",244,0)
 . S IBPTM=0 F  S IBPTM=$O(IBXSAVE("LCOB",IBPTZ,"COB",IBPTM)) Q:'IBPTM  D
"RTN","IBCEU1",245,0)
 .. S IBPTP=0 F  S IBPTP=$O(IBXSAVE("LCOB",IBPTZ,"COB",IBPTM,IBPTP)) Q:'IBPTP  D
"RTN","IBCEU1",246,0)
 ... S IBPTCNT=IBPTCNT+1
"RTN","IBCEU1",247,0)
 ... I $$CHKCCOB1(IBIFN,IBPTM) S IBXDATA(IBPTCNT)="" Q
"RTN","IBCEU1",248,0)
 ... I CL=16 S IBXDATA(IBPTCNT)="EAF" Q
"RTN","IBCEU1",249,0)
 ... S IBXDATA(IBPTCNT)=0
"RTN","IBCEU1",250,0)
 ... S IBPTPR=0 F  S IBPTPR=$O(IBXSAVE("LCOB",IBPTZ,"COB",IBPTM,IBPTP,"PR",IBPTPR)) Q:'IBPTPR  D
"RTN","IBCEU1",251,0)
 .... S IBPRDATA=$G(IBXSAVE("LCOB",IBPTZ,"COB",IBPTM,IBPTP,"PR",IBPTPR))
"RTN","IBCEU1",252,0)
 .... I +IBPRDATA S IBXDATA(IBPTCNT)=IBXDATA(IBPTCNT)+$P(IBPRDATA,U,2)
"RTN","IBCEU1",253,0)
 ... S IBXDATA(IBPTCNT)=$$DOLLAR^IBCEFG1(IBXDATA(IBPTCNT))
"RTN","IBCEU1",254,0)
 Q
"RTN","IBCEU1",255,0)
 ;
"RTN","IBCEU1",256,0)
LPREXIST(EOBIEN)  ; Tests to see if Line Level Patient Responsibility Segments exists.
"RTN","IBCEU1",257,0)
 ; Added with IB*2.0*473 BI
"RTN","IBCEU1",258,0)
 N CL,CAS,PR,PRSEQ,PRZ,RESULT
"RTN","IBCEU1",259,0)
 S RESULT=0
"RTN","IBCEU1",260,0)
 Q:'$G(EOBIEN) RESULT
"RTN","IBCEU1",261,0)
 S CL=0 F  S CL=$O(^IBM(361.1,EOBIEN,15,CL)) Q:+CL=0  D
"RTN","IBCEU1",262,0)
 . S CAS=0 F  S CAS=$O(^IBM(361.1,EOBIEN,15,CL,CAS)) Q:+CAS=0  D
"RTN","IBCEU1",263,0)
 .. S PR=$O(^IBM(361.1,EOBIEN,15,CL,CAS,"B","PR",0)) Q:+PR=0
"RTN","IBCEU1",264,0)
 .. S PRSEQ=0 F  S PRSEQ=$O(^IBM(361.1,EOBIEN,15,CL,CAS,PR,1,PRSEQ)) Q:+PRSEQ=0  D
"RTN","IBCEU1",265,0)
 ... S PRZ=$G(^IBM(361.1,EOBIEN,15,CL,CAS,PR,1,PRSEQ,0)) Q:'+PRZ
"RTN","IBCEU1",266,0)
 ... S RESULT=1
"RTN","IBCEU1",267,0)
 Q RESULT
"RTN","IBCEU1",268,0)
 ;
"RTN","IBCEU1",269,0)
CHKCCOB1(IBIFN,IBS)  ; Test to see if Patient Responsibility pieces should be included
"RTN","IBCEU1",270,0)
 ; Added with IB*2.0*473 BI
"RTN","IBCEU1",271,0)
 N RESULTS,IBXDATA,EOBIEN
"RTN","IBCEU1",272,0)
 S RESULTS=1
"RTN","IBCEU1",273,0)
 ; INPUTS:  IBIFN - BILL/CLAIM INTERNAL NUMBER
"RTN","IBCEU1",274,0)
 ;          IBS   - INSURANCE SEQUENCE NUMBER
"RTN","IBCEU1",275,0)
 ; RETURNS: 0     - IF LCOB RECORDS ARE TO BE INCLUDED
"RTN","IBCEU1",276,0)
 ;          1     - IF LCOB RECORDS SHOULD NOT BE INCLUDED
"RTN","IBCEU1",277,0)
 D CCOB1(IBIFN,0,IBS)
"RTN","IBCEU1",278,0)
 S EOBIEN=$O(IBXDATA(IBS,0))
"RTN","IBCEU1",279,0)
 S RESULT='$$LPREXIST(EOBIEN)
"RTN","IBCEU1",280,0)
 Q RESULT
"RTN","IBCEU6")
0^51^B13711797^B13249318
"RTN","IBCEU6",1,0)
IBCEU6 ;ALB/ESG - EDI UTILITIES FOR EOB PROCESSING ;29-JUL-2003
"RTN","IBCEU6",2,0)
 ;;2.0;INTEGRATED BILLING;**155,371,432,547**;21-MAR-94;Build 119
"RTN","IBCEU6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEU6",4,0)
 Q
"RTN","IBCEU6",5,0)
 ;
"RTN","IBCEU6",6,0)
COBLINE(IBIFN,IBI,IBXDATA,SORT,IBXTRA) ; Extract all COB data for line item
"RTN","IBCEU6",7,0)
 ;  from file 361.1 (EOB), subfile 15 into IBXDATA(IBI,"COB",n)
"RTN","IBCEU6",8,0)
 ;
"RTN","IBCEU6",9,0)
 ; IBIFN = bill entry #
"RTN","IBCEU6",10,0)
 ; IBI = VistA outbound line item #
"RTN","IBCEU6",11,0)
 ; IBXDATA = array returned with COB line item data/pass by reference
"RTN","IBCEU6",12,0)
 ; SORT = flag that determines whether the data should be sorted for
"RTN","IBCEU6",13,0)
 ;        output for the 837 record ('PR' group always there and has
"RTN","IBCEU6",14,0)
 ;        a reason code for deductible first and co-insurance second -
"RTN","IBCEU6",15,0)
 ;        even if they are 0).
"RTN","IBCEU6",16,0)
 ;        1 = sort, 0 = no sort needed
"RTN","IBCEU6",17,0)
 ;
"RTN","IBCEU6",18,0)
 ;   Returns IBXDATA(IBI,"COB",COB,n) with COB data for each line item
"RTN","IBCEU6",19,0)
 ;      found in an accepted EOB for the bill and = the '0' node data of
"RTN","IBCEU6",20,0)
 ;      file 361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEU6",21,0)
 ;         -- AND --
"RTN","IBCEU6",22,0)
 ;    IBXDATA(IBI,"COB",COB,n,z,p)=
"RTN","IBCEU6",23,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEU6",24,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEU6",25,0)
 ;               z = this is either piece 1 of the 0-node for subfile
"RTN","IBCEU6",26,0)
 ;                   361.1151 (ADJUSTMENTS)
"RTN","IBCEU6",27,0)
 ;                          OR
"RTN","IBCEU6",28,0)
 ;                   for the 837 COB 'sorted' output, this will be ' PR'
"RTN","IBCEU6",29,0)
 ;                    for the forced/extracted entries for deductible
"RTN","IBCEU6",30,0)
 ;                    and co-insurance so they are always output first
"RTN","IBCEU6",31,0)
 ;                    The space needs to be stripped off on output
"RTN","IBCEU6",32,0)
 ;         -- AND --
"RTN","IBCEU6",33,0)
 ; IBXTRA = array returned if passed by reference if line is found
"RTN","IBCEU6",34,0)
 ;          associated with line IBI due to bundling/unbundling
"RTN","IBCEU6",35,0)
 ;          IBXTRA("ALL",x,paid procedure)=COB SEQ ^ seq # corresponding
"RTN","IBCEU6",36,0)
 ;                        to subscript n in IBXDATA(,"COB",COB,n
"RTN","IBCEU6",37,0)
 ;                (x = line #-original proc-service dt)
"RTN","IBCEU6",38,0)
 ;
"RTN","IBCEU6",39,0)
 ;IB*2.0*432/TAZ - Added loop to extract data from all associated EOBs.
"RTN","IBCEU6",40,0)
 ;
"RTN","IBCEU6",41,0)
 N IB,IBBILL,IBCURR
"RTN","IBCEU6",42,0)
 S IBCURR=$$COB^IBCEF(IBIFN)
"RTN","IBCEU6",43,0)
 ; IB*2.0*547 make sure MRA flag is only set if on current sequence being checked
"RTN","IBCEU6",44,0)
 ;S IBMRAF=$$MCRONBIL^IBEFUNC(IBIFN)
"RTN","IBCEU6",45,0)
 S IBMRAF=$P($$MCRONBIL^IBEFUNC(IBIFN,$S(IBCURR="P":1,IBCURR="S":2,1:3)),U,2)
"RTN","IBCEU6",46,0)
 S IB=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU6",47,0)
 ;
"RTN","IBCEU6",48,0)
 F B=1:1:3 S IBBILL=$P(IB,U,B) I IBBILL D COB1(IBBILL,.IBXDATA,IBMRAF,IBCURR)
"RTN","IBCEU6",49,0)
 Q
"RTN","IBCEU6",50,0)
 ;
"RTN","IBCEU6",51,0)
COB1(IBIFN,IBXDATA,IBMRAF,IBCURR) ; Process the EOB
"RTN","IBCEU6",52,0)
 ;
"RTN","IBCEU6",53,0)
 N A,B,B1,C,D,IBDATA,IB0,IB00,IBA,IBB,IBDED,IBCOI,IBS,IBN,IBDT
"RTN","IBCEU6",54,0)
 ;
"RTN","IBCEU6",55,0)
 ; If multiple EOB's reference this line for the same COB sequence,
"RTN","IBCEU6",56,0)
 ;   extract only the last one marked accepted containing this line item.
"RTN","IBCEU6",57,0)
 ;
"RTN","IBCEU6",58,0)
 S A=0
"RTN","IBCEU6",59,0)
 F  S A=$O(^IBM(361.1,"B",IBIFN,A)) Q:'A  D
"RTN","IBCEU6",60,0)
 . 
"RTN","IBCEU6",61,0)
 . I '$$EOBELIG^IBCEU1(A,IBMRAF,IBCURR) Q   ; eob not eligible for secondary claim
"RTN","IBCEU6",62,0)
 . I '$D(^IBM(361.1,A,15,"AC",IBI)) Q   ; this EOB does not reference VistA line# IBI
"RTN","IBCEU6",63,0)
 . S IBA=0
"RTN","IBCEU6",64,0)
 . S IBDATA=$G(^IBM(361.1,A,0))
"RTN","IBCEU6",65,0)
 . S IBS=$P(IBDATA,U,15)      ; insurance sequence#
"RTN","IBCEU6",66,0)
 . S IBN=+$O(IBXDATA(IBI,"COB",IBS,0))
"RTN","IBCEU6",67,0)
 . I IBN D  Q:IBN  ; check for later EOB
"RTN","IBCEU6",68,0)
 .. I $G(IBDT(IBI,IBS)),IBDT(IBI,IBS)<$P(IBDATA,U,6) K IBDT(IBI,IBS),IBXDATA(IBI,"COB",IBS) S IBN=0
"RTN","IBCEU6",69,0)
 . ;
"RTN","IBCEU6",70,0)
 . S IBDT(IBI,IBS)=$P(IBDATA,U,6)
"RTN","IBCEU6",71,0)
 . S B=0
"RTN","IBCEU6",72,0)
 . F  S B=$O(^IBM(361.1,A,15,"AC",IBI,B)) Q:'B  S IB0=$G(^IBM(361.1,A,15,B,0)),IB0=IB0_U_IBDT(IBI,IBS) D
"RTN","IBCEU6",73,0)
 .. Q:$TR(IB0,U)=""
"RTN","IBCEU6",74,0)
 .. S IBA=IBA+1,IBXDATA(IBI,"COB",IBS,IBA)=IBI_U_IB0
"RTN","IBCEU6",75,0)
 .. ;
"RTN","IBCEU6",76,0)
 .. ; capture the modifiers (361.1152)
"RTN","IBCEU6",77,0)
 .. I $D(^IBM(361.1,A,15,B,2)) M IBXDATA(IBI,"COBMOD")=^IBM(361.1,A,15,B,2)
"RTN","IBCEU6",78,0)
 .. I $P(IB0,U,15)'="" D  ;Line involved in bundling/unbundling
"RTN","IBCEU6",79,0)
 ... N Z0 S Z0=IBI_"-"_$P(IB0,U,15)_"-"_$P(IB0,U,16)
"RTN","IBCEU6",80,0)
 ... S IBXTRA("ALL",Z0,$P(IB0,U,4))=IBS_U_IBA,$P(IBXDATA(IBI,"COB",IBS,IBA),U)=""
"RTN","IBCEU6",81,0)
 .. S C=0,(IBDED(IBA),IBCOI(IBA))="0^0" ;Assume 0 if not found in list
"RTN","IBCEU6",82,0)
 .. F  S C=$O(^IBM(361.1,A,15,B,1,C)) Q:'C  S IB0=$G(^(C,0)) D
"RTN","IBCEU6",83,0)
 ... S D=0
"RTN","IBCEU6",84,0)
 ... F  S D=$O(^IBM(361.1,A,15,B,1,C,1,D)) Q:'D  S IB00=$S($G(SORT):$P($G(^(D,0)),U,1,3),1:$G(^(D,0))) D
"RTN","IBCEU6",85,0)
 .... I $G(SORT),$P(IB0,U)="PR" D  ;Check for deductible or co-ins
"RTN","IBCEU6",86,0)
 ..... I 'IBDED(IBA),$P(IB00,U)=1 S IBDED(IBA)=IB00,IB00="" Q
"RTN","IBCEU6",87,0)
 ..... I 'IBCOI(IBA),$P(IB00,U)=2 S IBCOI(IBA)=IB00,IB00="" Q
"RTN","IBCEU6",88,0)
 .... I $TR(IB00,U)'="" S IBB=$O(IBXDATA(IBI,"COB",IBS,IBA,$P(IB0,U),""),-1)+1,IBXDATA(IBI,"COB",IBS,IBA,$P(IB0,U),IBB)=IB00
"RTN","IBCEU6",89,0)
 .. Q:'$G(SORT)
"RTN","IBCEU6",90,0)
 .. S IBXDATA(IBI,"COB",IBS,IBA," PR",1)=IBDED(IBA)
"RTN","IBCEU6",91,0)
 .. S IBXDATA(IBI,"COB",IBS,IBA," PR",2)=IBCOI(IBA)
"RTN","IBCEU6",92,0)
 Q
"RTN","IBCEU6",93,0)
 ;
"RTN","IBCF23")
0^63^B49750471^B46459420
"RTN","IBCF23",1,0)
IBCF23 ;ALB/ARH - HCFA 1500 19-90 DATA (block 24, procs and charges) ;12-JUN-93
"RTN","IBCF23",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,122,51,152,137,402,432,488,547**;21-MAR-94;Build 119
"RTN","IBCF23",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCF23",4,0)
 ;
"RTN","IBCF23",5,0)
 ;requires IBIFN,IB(0),IB("U"),IB("U1"), returns # of line items in IBFLD(24)
"RTN","IBCF23",6,0)
 ;rev code array: IBRC("proc^division^basc flag^bedsection^rev code^unit chrg^Rx seq #")=units
"RTN","IBCF23",7,0)
 ;proc array:    IBCP(initial print ord)=proc date^proc^division^basc flag^dx^pos^tos^modifier^unit chrg^purch chrg amt^anesthesia mins^emerg indicator
"RTN","IBCF23",8,0)
 ;                    IBCP(initial print order,seq #)=auxillary data
"RTN","IBCF23",9,0)
 ;proc array:    IBSS("proc^division^basc flag^dx^pos^tos^modifier^unit chrg^Rx seq #")=lowest inital print order
"RTN","IBCF23",10,0)
 ;print order array:  IBPO(final print ord,emerg indicator,initial print order)=""
"RTN","IBCF23",11,0)
 ;print array:        IBFLD(24,I)=begin dt^end dt^pos^tos^proc^dx^unit chrg^units^modifier pointer ien(s) separated by commas^purch chrg amt^anesthesia mins^emerg indicator
"RTN","IBCF23",12,0)
 ;                    IBFLD(24,I,"AUX")=[auxillary data]
"RTN","IBCF23",13,0)
 ;                                 = "AUX" node of proc entry
"RTN","IBCF23",14,0)
 ;                    IBFLD(24,I,"RX")= soft link to file 362.4 or null
"RTN","IBCF23",15,0)
 ;                         if service is Rx, but no soft link
"RTN","IBCF23",16,0)
 ;                                   
"RTN","IBCF23",17,0)
 ;charge item link:   IBLINK(CPT IFN in multiple,RCIFN) = proc^division^basc flag^bedsection^rev code^unit chrg^rx seq #
"RTN","IBCF23",18,0)
 ;
"RTN","IBCF23",19,0)
 ; dx's used in arrays are ref #s
"RTN","IBCF23",20,0)
 ; IB*547 added backwards compatibility so that MRAs and EOBs would still roll/split procedures the same way as when the claim
"RTN","IBCF23",21,0)
 ;        was created.  Any claim transmitted before IB*547 was installed will roll/split the original way and any new
"RTN","IBCF23",22,0)
 ;        claim or claim transmitted after IB*547 was transmitted will roll/split the new way.
"RTN","IBCF23",23,0)
 ;        When updating in the future care must be taken to disable/remove older code so that only new changes are
"RTN","IBCF23",24,0)
 ;        affected by the IBNWPTCH variable.
"RTN","IBCF23",25,0)
 ;
"RTN","IBCF23",26,0)
RVC ; charges array
"RTN","IBCF23",27,0)
 D RVCE(,IBIFN)
"RTN","IBCF23",28,0)
 Q
"RTN","IBCF23",29,0)
 ;
"RTN","IBCF23",30,0)
RVCE(IBXIEN,IBIFN) ;Entry for EDI formatter call (IBXIEN will be defined)
"RTN","IBCF23",31,0)
 ; IBIFN required
"RTN","IBCF23",32,0)
 N IBRC,IBCP,IBSS,IBSSO,IBSS1,IBPO,IBLINK,IBLINK1,IBLINKRX,IBK,IBAUXLN
"RTN","IBCF23",33,0)
 N IBI,IBJ,IB11,IBLN,IBPDT,IBCHARG,IBMOD,IBPC,IBRX,IBRXF,IBPO2A,IBAUX,IBNWPTCH
"RTN","IBCF23",34,0)
 ;
"RTN","IBCF23",35,0)
 ; IB*547/TAZ - Add IBNWPTCH variable.
"RTN","IBCF23",36,0)
 S IBRX=0,IBNWPTCH=$$IBNWPTCH^IBCF23A(IBIFN,"IB*2.0*547")
"RTN","IBCF23",37,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"RC",IBI)) Q:'IBI  S IBLN=^(IBI,0) D
"RTN","IBCF23",38,0)
 . S IBSS="",IBPC=0 F IBJ=6,7,0,5,1,2,14 S IBPC=IBPC+1 S:IBJ $P(IBSS,U,IBPC,IBPC+1)=($P(IBLN,U,IBJ)_U)
"RTN","IBCF23",39,0)
 . I $P(IBSS,U,2)="" S $P(IBSS,U,2)=$P(^DGCR(399,IBIFN,0),U,22)
"RTN","IBCF23",40,0)
 . I +IBSS S $P(IBSS,U)=$P(IBSS,U)_";ICPT("
"RTN","IBCF23",41,0)
 . S $P(IBSS,U,3)=$S($D(^DGCR(399,"ASC1",+$P(IBLN,U,6),IBIFN,IBI)):1,1:"")
"RTN","IBCF23",42,0)
 . I +$P(IBLN,U,10)=3 D  Q  ; Rx
"RTN","IBCF23",43,0)
 .. I '$P(IBLN,U,15) S IBRX=IBRX+1,$P(IBSS,U,8)=(100+IBRX)
"RTN","IBCF23",44,0)
 .. I $P(IBLN,U,15) S $P(IBSS,U,8)=$P(IBLN,U,15)
"RTN","IBCF23",45,0)
 .. S IBRC(IBSS,"RX")=$P(IBLN,U,11)_U_IBI_U_$P(IBLN,U,15)
"RTN","IBCF23",46,0)
 .. S IBRC(IBSS)=$G(IBRC(IBSS))+1
"RTN","IBCF23",47,0)
 . ;
"RTN","IBCF23",48,0)
 . S IBRC(IBSS)=$G(IBRC(IBSS))+$P(IBLN,U,3) ; total units for similar RC
"RTN","IBCF23",49,0)
 . I "4"[+$P(IBLN,U,10),$P(IBLN,U,11) D  ; Soft-link proc with the rev cd
"RTN","IBCF23",50,0)
 .. S IBLINK(+$P(IBLN,U,11),IBI)=IBSS
"RTN","IBCF23",51,0)
 .. S $P(IBLINK(+$P(IBLN,U,11),IBI),U,7)=$P(IBLN,U,14)
"RTN","IBCF23",52,0)
 . I $P(IBLN,U,10) D
"RTN","IBCF23",53,0)
 .. S IBLINK1(IBSS,IBI)=$P(IBLN,U,10)_U_+$P(IBLN,U,11)
"RTN","IBCF23",54,0)
 . S IBRC(IBSS,"LNK")=IBI
"RTN","IBCF23",55,0)
 ;
"RTN","IBCF23",56,0)
 S IBSSO="" F  S IBSSO=$O(IBRC(IBSSO)) Q:IBSSO=""  I $D(IBRC(IBSSO,"RX")) D
"RTN","IBCF23",57,0)
 . S IBSS=IBSSO,IBI=$P(IBRC(IBSSO,"RX"),U,2),IB11=$P(IBRC(IBSSO,"RX"),U,3)
"RTN","IBCF23",58,0)
 . S IBRC(IBSSO)=1,IBLINKRX($S($P(IBSSO,U)>0:$P(IBSSO,U),$P($G(^DGCR(399,IBIFN,"CP",+IB11,0)),U)'="":$P(^(0),U),1:0),+IB11,+IBRC(IBSSO,"RX"))=IBSSO K IBRC(IBSSO,"RX")
"RTN","IBCF23",59,0)
 ;
"RTN","IBCF23",60,0)
 D PRC^IBCF23A ; Extract procedures
"RTN","IBCF23",61,0)
PO ; print order array w/chrgs
"RTN","IBCF23",62,0)
 ; combine multiple entries of same proc onto one line item via print order
"RTN","IBCF23",63,0)
 ;if both have print orders defined then they should not be combined onto one line item
"RTN","IBCF23",64,0)
 ;"proc^division^basc^dx^pos^tos^modifier(s)^unit chrg^purchased chg" must all be the same as well as the emergency indicator and all 'aux flds'
"RTN","IBCF23",65,0)
 N IBP,Z,IBPO11
"RTN","IBCF23",66,0)
 ;IB*547/TAZ - set entire node into IBSS for post IB*547 claims
"RTN","IBCF23",67,0)
 ;S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  S IBCP=IBCP(IBPO),IBSS=$P(IBCP,U,2,9),IBSS1="*"_$G(IBCP(IBPO,"AUX")),IBAUX=0 D
"RTN","IBCF23",68,0)
 S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  S IBCP=IBCP(IBPO),IBSS=$P(IBCP,U,2,$S(IBNWPTCH:$L(IBCP,U),1:9)),IBSS1="*"_$G(IBCP(IBPO,"AUX")),IBAUX=0 D
"RTN","IBCF23",69,0)
 . I $D(IBSS(IBSS)),'$D(IBCP(IBPO,"RX")),IBPO>1000 D  Q  ; combine lines
"RTN","IBCF23",70,0)
 .. I 'IBAUX S IBAUX=$$AUXOK^IBCF23A(.IBSS,IBSS1)
"RTN","IBCF23",71,0)
 .. S IBPO1=$S(IBAUX:IBSS(IBSS,IBAUX),1:IBPO)
"RTN","IBCF23",72,0)
 .. I 'IBAUX S Z=+$O(IBSS(IBSS,"A"),-1)+1,IBSS(IBSS,Z)=IBPO
"RTN","IBCF23",73,0)
 .. I IBPO>1000!(IBPO1>1000) S IBPO(IBPO1,+$P(IBCP,U,12),IBPO)="" D
"RTN","IBCF23",74,0)
 ... I $O(IBCP(IBPO,"L",0)) S Z=$O(IBCP(IBPO,"L",0)),IBPO(IBPO1,+$P(IBCP,U,12),IBPO,"L",Z)=IBCP(IBPO,"L",Z) K IBCP(IBPO,"L",Z)
"RTN","IBCF23",75,0)
 . S IBAUX=+$O(IBSS(IBSS,"A"),-1)+1,IBSS(IBSS,"AUX-X",IBAUX)=IBSS1
"RTN","IBCF23",76,0)
 . S IBSS(IBSS,IBAUX)=+IBPO,IBPO(+IBPO,+$P(IBCP,U,12),IBPO)=""
"RTN","IBCF23",77,0)
 . S Z=0 F  S Z=$O(IBCP(IBPO,Z)) Q:'Z  S IBPO(+IBPO,+$P(IBCP,U,12),IBPO,Z)=""
"RTN","IBCF23",78,0)
 . I $O(IBCP(IBPO,"L",0)) S Z=$O(IBCP(IBPO,"L",0)),IBPO(+IBPO,+$P(IBCP,U,12),IBPO,"L",Z)=IBCP(IBPO,"L",Z) K IBCP(IBPO,"L",Z)
"RTN","IBCF23",79,0)
 . S IBSS(IBSS,IBAUX,"AUX")=IBSS1,IBPO(+IBPO,+$P(IBCP,U,12),IBPO,"AUX")=$E(IBSS1,2,$L(IBSS1))
"RTN","IBCF23",80,0)
 . I $D(IBCP(IBPO,"RX")) S IBPO(+IBPO,+$P(IBCP,U,12),IBPO,"RX")=IBCP(IBPO,"RX"),IBSS(IBSS,IBAUX,"RX")=IBCP(IBPO)
"RTN","IBCF23",81,0)
 ;
"RTN","IBCF23",82,0)
 ; Find any remaining rev codes w/units that ref existing procedures
"RTN","IBCF23",83,0)
 S IBP(0)=0
"RTN","IBCF23",84,0)
 F IBP=3,2 Q:$G(IBP(0))  S IBRV="" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""  I IBRV,IBRC(IBRV) D
"RTN","IBCF23",85,0)
 . S IBSS1=$O(IBSS($P(IBRV,U,1,IBP))) Q:$P(IBRV,U,1,IBP)'=$P(IBSS1,U,1,IBP)
"RTN","IBCF23",86,0)
 . S IBP(0)=1,Z=0
"RTN","IBCF23",87,0)
 . F  S Z=$O(IBSS(IBSS1,Z)) Q:'Z  I $G(IBSS(IBSS1,Z)) D  Q
"RTN","IBCF23",88,0)
 .. I $D(IBCP(IBSS(IBSS1,Z))),$P(IBCP(IBSS(IBSS1,Z)),U,9)=$P(IBSS1,U,8) D
"RTN","IBCF23",89,0)
 ... N Q,Q0
"RTN","IBCF23",90,0)
 ... ; S Q=$O(IBCP(""),-1)+1,Q0=$P(IBCP(IBSS(IBSS1,Z)),U,12) ; WCJ;IB*488
"RTN","IBCF23",91,0)
 ... S Q=IBSS(IBSS1,Z),Q0=$P(IBCP(IBSS(IBSS1,Z)),U,12) ; WCJ;IB*488
"RTN","IBCF23",92,0)
 ... ;M IBPO(Q,$P(IBCP(IBSS(IBSS1,Z)),U,12),Q)=IBPO(IBSS(IBSS1,Z),$P(IBCP(IBSS(IBSS1,Z)),U,12),IBSS(IBSS1,Z)),IBCP(Q)=IBCP(IBSS(IBSS1,Z))  ; WCJ;IB*488
"RTN","IBCF23",93,0)
 ... ;S $P(IBCP(Q),U,9)=$P(IBRV,U,6) ; WCJ;IB*488
"RTN","IBCF23",94,0)
 ... ;F Z0=1:1:(IBRC(IBRV)-1) S IBPO(Q,Q0,Q+(Z0*.01))=IBPO(Q,Q0,Q)  I Z0=99,(IBRC(IBRV)'=100) S IBPO(Q,Q0,Q_".991")=(IBRC(IBRV)-1)_"^99" Q  ; Only put first 99 in array
"RTN","IBCF23",95,0)
 ... F Z0=1:1:(IBRC(IBRV)) S IBPO(Q,Q0,Q+(Z0*.001))=IBPO(Q,Q0,Q)  ; changing to .001 allows us up to 999 and the units field only allows 800. ; WCJ;IB*488
"RTN","IBCF23",96,0)
 ... S IBRC(IBRV)=0
"RTN","IBCF23",97,0)
 ;
"RTN","IBCF23",98,0)
PRTARR ;print proc array
"RTN","IBCF23",99,0)
 S IBREV="",IBPO1="",IBI=0 F  S IBPO1=$O(IBPO(IBPO1)) Q:IBPO1=""  D
"RTN","IBCF23",100,0)
 . K IBRXF
"RTN","IBCF23",101,0)
 . S IBEMG="" F  S IBEMG=$O(IBPO(IBPO1,IBEMG)) Q:IBEMG=""!("01"'[IBEMG)  S IBPO2="" D
"RTN","IBCF23",102,0)
 .. S IBDT1=99999999,IBDT2="",(IBMIN,IBUNIT)=0,(IBCHARG,IBAUX)=""
"RTN","IBCF23",103,0)
 .. F  S IBPO2=$O(IBPO(IBPO1,IBEMG,IBPO2)) Q:IBPO2=""  D
"RTN","IBCF23",104,0)
 ... I IBPO2#1=.991 D  Q:IBPO2#1=.991
"RTN","IBCF23",105,0)
 .... N Z
"RTN","IBCF23",106,0)
 .... S Z=$G(IBPO(IBPO1,IBEMG,IBPO2)) Q:'Z
"RTN","IBCF23",107,0)
 .... I ($P(Z,U,2)+1)>Z Q
"RTN","IBCF23",108,0)
 .... S $P(IBPO(IBPO1,IBEMG,IBPO2),U,2)=($P(Z,U,2)+1),IBPO2=(IBPO2\1)_".99"
"RTN","IBCF23",109,0)
 ... S Z=0 F  S Z=$O(IBPO(IBPO1,IBEMG,IBPO2,Z)) Q:'Z  S IBUNIT=IBUNIT+1
"RTN","IBCF23",110,0)
 ... I $D(IBCP(IBPO1)) S IBPO11=IBPO1
"RTN","IBCF23",111,0)
 ... S IBPO2A=$S($D(IBCP(IBPO2\1)):IBPO2\1,'$D(IBCP(IBPO2)):IBPO11,1:IBPO2)
"RTN","IBCF23",112,0)
 ... S IBCHARG=$P(IBCP(IBPO2A),U,9),IBPCHG=$P(IBCP(IBPO2A),U,10)
"RTN","IBCF23",113,0)
 ... ; I IBCHARG<10000,IBCHARG*(IBUNIT+1)'<10000 D  Q  ;$9,999 limit per line ;WCJ IB*488
"RTN","IBCF23",114,0)
 ... I IBCHARG<10000000,IBCHARG*(IBUNIT+1)'<10000000 D  Q  ; increased to $9,999,999 charge limit per line since that is printed form space limit ;WCJ IB*488
"RTN","IBCF23",115,0)
 .... N Z S Z=$O(IBPO(IBPO1\1+1),-1),Z=Z+$S(IBPO1+.001'=Z:.001,1:0) M IBPO(Z,IBEMG,IBPO2)=IBPO(IBPO1,IBEMG,IBPO2) K IBPO(IBPO1,IBEMG,IBPO2)
"RTN","IBCF23",116,0)
 ... S IBUNIT=IBUNIT+1,IBSS=IBCP(IBPO2A),IBMIN=IBMIN+$P(IBSS,U,11)
"RTN","IBCF23",117,0)
 ... S IBSS=$G(IBSS)_U_$G(IBCP(IBPO2A,"LNK"))
"RTN","IBCF23",118,0)
 ... S Z=$O(IBPO(IBPO1,IBEMG,IBPO2,"L",0)) I Z D
"RTN","IBCF23",119,0)
 .... S Z0=0
"RTN","IBCF23",120,0)
 .... F Z=Z:1 Q:'$O(IBPO(IBPO1,IBEMG,IBPO2,"L",0))!(Z0=IBUNIT)  I $D(IBPO(IBPO1,IBEMG,IBPO2,"L",Z))  S IBSS("L",Z)=IBPO(IBPO1,IBEMG,IBPO2,"L",Z),Z0=Z0+1 K IBPO(IBPO1,IBEMG,IBPO2,"L",Z)
"RTN","IBCF23",121,0)
 ... S:IBDT1>+IBSS IBDT1=+IBSS S:IBDT2<+IBSS IBDT2=+IBSS
"RTN","IBCF23",122,0)
 .. S IBAUX=$G(IBCP(IBPO1,"AUX")) S:$D(IBCP(IBPO1,"RX")) IBRXF=IBCP(IBPO1,"RX")
"RTN","IBCF23",123,0)
 .. I IBUNIT D B24^IBCF23A
"RTN","IBCF23",124,0)
 .. K IBRXF
"RTN","IBCF23",125,0)
 ;
"RTN","IBCF23",126,0)
 ;print any chrgs not associated with a proc (ie. not enough procs or proc not in "CP" level)
"RTN","IBCF23",127,0)
 S IBRV="" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""  I +IBRC(IBRV) D  D B24^IBCF23A K IBRXF
"RTN","IBCF23",128,0)
 . S IBUNIT=+IBRC(IBRV),IBCHARG=$P(IBRV,U,6),IBDT1=+IB("U"),IBDT2=$P(IB("U"),U,2),IBREV=$P(IBRV,U,5),IBEMG=0,IBAUX=""
"RTN","IBCF23",129,0)
 . S IBSS="^"_$S(+IBRV:$P(IBRV,U),1:$P($G(^DGCR(399.1,+$P(IBRV,U,4),0)),U))
"RTN","IBCF23",130,0)
 . S IBSS=$G(IBSS)_U_$$RC2CP^IBCEF22(IBIFN,+$G(IBRC(IBRV,"LNK")))
"RTN","IBCF23",131,0)
 . S Z=$O(IBLINK1(IBRV,0)) I Z D
"RTN","IBCF23",132,0)
 .. S Z0=0
"RTN","IBCF23",133,0)
 .. F Z=Z:1 Q:'$O(IBLINK1(IBRV,0))!(Z0=IBUNIT)  I $D(IBLINK1(IBRV,Z)) S IBSS("L",Z)=IBLINK1(IBRV,Z),Z0=Z0+1 K IBLINK1(IBRV,Z)
"RTN","IBCF23",134,0)
 ;
"RTN","IBCF23",135,0)
OFFSET ;
"RTN","IBCF23",136,0)
 S IBFLD(24)=IBI ;line item count
"RTN","IBCF23",137,0)
 K IBRC,IBCP,IBSS,IBPO,IBPO1,IBPO2,IBLN,IBRV,IBRV1,IBPDT,IBDT1,IBDT2,IBCHARG,IBMIN,IBUNIT,IBREV,IBLINK,IBLINK1,IBEMG,IBPCHG,Z
"RTN","IBCF23",138,0)
 Q
"RTN","IBCF23",139,0)
 ;
"RTN","IBCF23",140,0)
DATE(X) ; Fm dt in X ==> YYYYMMDD
"RTN","IBCF23",141,0)
 Q $$DT^IBCEFG1(X,,"D8")
"RTN","IBCF23",142,0)
 ;
"RTN","IBCF23",143,0)
B24 ; Moved to IBCF23A for space
"RTN","IBCF23",144,0)
 D B24^IBCF23A
"RTN","IBCF23",145,0)
 Q
"RTN","IBCF23",146,0)
 ;
"RTN","IBCF23A")
0^64^B37854610^B20324273
"RTN","IBCF23A",1,0)
IBCF23A ;ALB/ARH - HCFA 1500 19-90 DATA - Split from IBCF23 ;12-JUN-93
"RTN","IBCF23A",2,0)
 ;;2.0;INTEGRATED BILLING;**51,432,516,547**;21-MAR-94;Build 119
"RTN","IBCF23A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCF23A",4,0)
 ;
"RTN","IBCF23A",5,0)
 ; $$INSTALDT^XPDUTL(IBPATCH,.IBARY) - ICR 10141
"RTN","IBCF23A",6,0)
 ;
"RTN","IBCF23A",7,0)
B24 ; set individual entries in print array, external format
"RTN","IBCF23A",8,0)
 ; IBAUX = additional data for EDI output
"RTN","IBCF23A",9,0)
 ; IBRXF = array of RX procedures
"RTN","IBCF23A",10,0)
 N IBX,Z,IBD1,IBD2,IBCPLINK
"RTN","IBCF23A",11,0)
 S IBI=IBI+1,IBPROC=$P(IBSS,U,2),IBD1=$$DATE^IBCF23(IBDT1),IBD2=$S(IBDT1'=IBDT2:$$DATE^IBCF23(IBDT2),1:"")
"RTN","IBCF23A",12,0)
 I '$D(IBXIEN) S IBD1=$E(IBD1,5,8)_$E(IBD1,1,4),IBD2=$E(IBD2,5,8)_$E(IBD2,1,4)
"RTN","IBCF23A",13,0)
 S IBFLD(24,IBI)=IBD1_U_IBD2_U_$P($G(^IBE(353.1,+$P(IBSS,U,6),0)),U)_U_$P($G(^IBE(353.2,+$P(IBSS,U,7),0)),U)
"RTN","IBCF23A",14,0)
 I +IBPROC D
"RTN","IBCF23A",15,0)
 . S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$P($$PRCD^IBCEF1(IBPROC,1),U,2) S:$P(IBPROC,";",2)'["ICPT" IBFLD(24,IBI_"X")=""
"RTN","IBCF23A",16,0)
 I 'IBPROC S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$S('$D(IBXIEN):IBPROC,1:+IBREV),IBFLD(24,IBI_"A")=$P($G(^DGCR(399.2,+IBREV,0)),U,2)
"RTN","IBCF23A",17,0)
 I $D(IBRXF),IBCHARG="" S IBFLD(24,IBI_"A")=$P($G(^DGCR(399.2,+IBREV,0)),U,2)
"RTN","IBCF23A",18,0)
 S IBFLD(24,IBI)=IBFLD(24,IBI)_U_$P(IBSS,U,5)_U_IBCHARG_U_IBUNIT_U_$P(IBSS,U,8)_U_$G(IBPCHG)_U_$G(IBMIN)_U_$G(IBEMG)
"RTN","IBCF23A",19,0)
 I $D(IBSS("L")) S Z=0 F  S Z=$O(IBSS("L",Z)) Q:'Z  S IBFLD(24,IBI,$P(IBSS("L",Z),U),$P(IBSS("L",Z),U,2))=$G(IBFLD(24,IBI,$P(IBSS("L",Z),U),$P(IBSS("L",Z),U,2)))+1
"RTN","IBCF23A",20,0)
 S:$TR($G(IBAUX),U)'="" IBFLD(24,IBI,"AUX")=$G(IBAUX)
"RTN","IBCF23A",21,0)
 S:$D(IBRXF) IBFLD(24,IBI,"RX")=IBRXF
"RTN","IBCF23A",22,0)
 K IBPROC,IBSS("L")
"RTN","IBCF23A",23,0)
 S IBCPLINK=$P(IBSS,U,$L(IBSS,U))
"RTN","IBCF23A",24,0)
 S IBFLD(24,IBI)=IBFLD(24,IBI)_U_IBCPLINK
"RTN","IBCF23A",25,0)
 ; MRD;IB*2.0*516 - Added NDC and Units to line level of claim.
"RTN","IBCF23A",26,0)
 I IBCPLINK'="" S $P(IBFLD(24,IBI),U,14,15)=$TR($P($G(^DGCR(399,IBIFN,"CP",IBCPLINK,1)),U,7,8),"-")
"RTN","IBCF23A",27,0)
 Q
"RTN","IBCF23A",28,0)
 ;
"RTN","IBCF23A",29,0)
AUXOK(IBSS,IBSS1) ; Check all other flds are the same to combine procs
"RTN","IBCF23A",30,0)
 ; IBSS = subscript of IBCP to check for dups to combine - pass by ref
"RTN","IBCF23A",31,0)
 ; IBSS(IBSS,"AUX-X",n) = all the previously extracted line items for the
"RTN","IBCF23A",32,0)
 ;  same set of basic data, but having different "AUX" data
"RTN","IBCF23A",33,0)
 ; IBSS1 = the "AUX" data of the current IBCP entry
"RTN","IBCF23A",34,0)
 ;
"RTN","IBCF23A",35,0)
 ; Returns entry # in IBSS array if match found, or 0 if no match
"RTN","IBCF23A",36,0)
 ; Set the IBSS "AUX-X" node for no match
"RTN","IBCF23A",37,0)
 N Z,Z0
"RTN","IBCF23A",38,0)
 S Z=0 F  S Z=$O(IBSS(IBSS,"AUX-X",Z)) Q:'Z  I IBSS1=IBSS(IBSS,"AUX-X",Z) Q
"RTN","IBCF23A",39,0)
 I 'Z S Z0=+$O(IBSS(IBSS,"AUX-X",""),-1)+1,IBSS(IBSS,"AUX-X",Z0)=IBSS1
"RTN","IBCF23A",40,0)
 Q +Z
"RTN","IBCF23A",41,0)
 ;
"RTN","IBCF23A",42,0)
PRC ; Extract procedure data for HCFA 1500
"RTN","IBCF23A",43,0)
 ; IBRC(IBSS) = #rev codes with same billing criteria (IBSS)
"RTN","IBCF23A",44,0)
 ; IBLINK('CP' ien,'RC' ien) = IBSS including modifiers,rx seq in pc 7,8
"RTN","IBCF23A",45,0)
 ; IBLINK1(IBSS, 'RC' ien) =  auto (1)^ 'CP' ien (soft link)
"RTN","IBCF23A",46,0)
 ;
"RTN","IBCF23A",47,0)
 ; proc array w/chrg
"RTN","IBCF23A",48,0)
 N IBPR,IBP
"RTN","IBCF23A",49,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  S IBLN=^(IBI,0),IBAUXLN=$G(^("AUX")) D
"RTN","IBCF23A",50,0)
 . N Z,Z0,Z1,Q1
"RTN","IBCF23A",51,0)
 . S IBPDT=$P(IBLN,U,2)
"RTN","IBCF23A",52,0)
 . S IBSS=$$IBSS(IBI,.IBDXI,IBLN)
"RTN","IBCF23A",53,0)
 . S IBPO=$S($P(IBLN,U,4):+$P(IBLN,U,4),1:IBI+1000) ;Set print order
"RTN","IBCF23A",54,0)
 . S IBCP(IBPO)=IBPDT_"^"_IBSS,IBCP(IBPO,"AUX")=IBAUXLN
"RTN","IBCF23A",55,0)
 . S IBCP(IBPO,"LNK")=IBI
"RTN","IBCF23A",56,0)
 . ; Rx
"RTN","IBCF23A",57,0)
 . N IBZ,IBITEM
"RTN","IBCF23A",58,0)
 . S IBZ=$S($P(IBSS,U):$P(IBSS,U),1:"")
"RTN","IBCF23A",59,0)
 . I IBZ'="",$D(IBLINKRX(IBZ,IBI)) D  Q:IBCHARG'=""
"RTN","IBCF23A",60,0)
 .. S IBPO1=IBPO
"RTN","IBCF23A",61,0)
 .. S IBITEM=+$O(IBLINKRX(IBZ,IBI,0)),IBRV=$G(IBLINKRX(IBZ,IBI,IBITEM))
"RTN","IBCF23A",62,0)
 .. Q:$S(IBRV="":1,1:'$G(IBRC(IBRV)))
"RTN","IBCF23A",63,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",64,0)
 .. S $P(IBCP(IBPO1),U,9)=IBCHARG,IBCP(IBPO1,"RX")=IBITEM K IBLINKRX(IBZ,IBI,IBITEM)
"RTN","IBCF23A",65,0)
 . ; find chrgs directly linked to proc
"RTN","IBCF23A",66,0)
 . S IBK=0 F  S IBK=$O(IBLINK(IBI,IBK)) Q:'IBK  S IBRV1=IBLINK(IBI,IBK),IBRV=$P(IBRV1,U,1,6) I +IBRC(IBRV1) D
"RTN","IBCF23A",67,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV1)=IBRC(IBRV1)-1
"RTN","IBCF23A",68,0)
 .. I IBCHARG'="" S $P(IBSS,U,8)=IBCHARG,IBCP(IBPO)=IBPDT_"^"_IBSS,IBPO=IBPO+.1
"RTN","IBCF23A",69,0)
 ;
"RTN","IBCF23A",70,0)
 ; add chrgs associated with a proc (not a direct link)
"RTN","IBCF23A",71,0)
 ; find chrg associated with proc, if any (match proc,div,+/-basc)
"RTN","IBCF23A",72,0)
 K IBP(0)
"RTN","IBCF23A",73,0)
 F IBP=3,2 Q:$D(IBP(0))  S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  I $P(IBCP(IBPO),U,9)="" D
"RTN","IBCF23A",74,0)
 . S IBSS=$P(IBCP(IBPO),U,2,9)
"RTN","IBCF23A",75,0)
 . S IBCHARG="",(IBRV,IBSS)=$P(IBSS,U,1,IBP) F  S IBRV=$O(IBRC(IBRV)) Q:$P(IBRV,U,1,IBP)'=IBSS  S IBP(0)=0 I +IBRC(IBRV) D  Q
"RTN","IBCF23A",76,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",77,0)
 .. I IBRC(IBRV) S Z=0 F  S Z=$O(IBCP(IBPO,Z)) Q:'Z  S IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",78,0)
 . S $P(IBCP(IBPO),U,9)=IBCHARG
"RTN","IBCF23A",79,0)
 . I IBCHARG'="" S Z=$O(IBLINK1(IBRV,0)) I Z S IBCP(IBPO,"L",Z)=IBLINK1(IBRV,Z) K IBLINK1(IBRV,Z)
"RTN","IBCF23A",80,0)
 ;
"RTN","IBCF23A",81,0)
 ; add chrgs not associated with a proc to first proc with no chrg
"RTN","IBCF23A",82,0)
 ; Aggggh!!! TP
"RTN","IBCF23A",83,0)
 S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  I $P(IBCP(IBPO),U,9)="" D
"RTN","IBCF23A",84,0)
 . S IBCHARG="",IBRV="^" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""!+IBRV  I +IBRC(IBRV) D  Q
"RTN","IBCF23A",85,0)
 .. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
"RTN","IBCF23A",86,0)
 .. S Z=$O(IBLINK1(IBRV,0)) I Z S IBCP(IBPO,"L",Z)=IBLINK1(IBRV,Z) K IBLINK1(IBRV,Z)
"RTN","IBCF23A",87,0)
 . S $P(IBCP(IBPO),U,9)=IBCHARG
"RTN","IBCF23A",88,0)
 ;
"RTN","IBCF23A",89,0)
 Q
"RTN","IBCF23A",90,0)
IBSS(IBI,IBDXI,IBLN) ; Creates index sequence for procedure
"RTN","IBCF23A",91,0)
 N IBPC,IBJ,IBSS,IBLPI,IBX,IBLPAR
"RTN","IBCF23A",92,0)
 S (IBPC,IBLPI)=0
"RTN","IBCF23A",93,0)
 F IBJ=1,6,5,0,9,10 S IBPC=IBPC+1 S:IBJ $P(IBSS,U,IBPC,IBPC+1)=($P(IBLN,U,IBJ)_U)
"RTN","IBCF23A",94,0)
 S $P(IBSS,U,7)=($$GETMOD^IBEFUNC(IBIFN,IBI)_U) ;Modifiers
"RTN","IBCF23A",95,0)
 ;IB*547/TAZ - IBDXI not defined, use internal DX pointer
"RTN","IBCF23A",96,0)
 I '$G(IBNWPTCH) F IBJ=11:1:14 I $P(IBLN,U,IBJ) S $P(IBSS,U,4)=$P(IBSS,U,4)_$S(IBJ>11:",",1:"")_$G(IBDXI(+$P(IBLN,U,IBJ))) ; dx
"RTN","IBCF23A",97,0)
 I $G(IBNWPTCH) F IBJ=11:1:14 S IBX=$P(IBLN,U,IBJ) I IBX S $P(IBSS,U,4)=$P(IBSS,U,4)_$S(IBJ>11:",",1:"")_$G(IBDXI(IBX),IBX) ; dx
"RTN","IBCF23A",98,0)
 S $P(IBSS,U,10)=$P(IBLN,U,16),$P(IBSS,U,9)=$P(IBLN,U,19),$P(IBSS,U,11)=+$P(IBLN,U,17)
"RTN","IBCF23A",99,0)
 G:'$G(IBNWPTCH) IBSSX
"RTN","IBCF23A",100,0)
 ;IB*547/TAZ - Add additional fields for roll-up compare
"RTN","IBCF23A",101,0)
 S $P(IBSS,U,21)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","ASSOCIATED CLINIC","I")
"RTN","IBCF23A",102,0)
 S $P(IBSS,U,22)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","TYPE OF SERVICE","I")
"RTN","IBCF23A",103,0)
 S $P(IBSS,U,23)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","ATTACHMENT CONTROL NUMBER","I")
"RTN","IBCF23A",104,0)
 S $P(IBSS,U,24)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","NDC","I")
"RTN","IBCF23A",105,0)
 S $P(IBSS,U,25)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","PROCEDURE DESCRIPTION","I")
"RTN","IBCF23A",106,0)
 S $P(IBSS,U,26)=$$GET1^DIQ(399.0304,IBI_","_IBIFN_",","ADDITIONAL OB MINUTES","I")
"RTN","IBCF23A",107,0)
 ;Add Provider info in pieces 41-49
"RTN","IBCF23A",108,0)
 M IBLPAR=^DGCR(399,IBIFN,"CP",IBI,"LNPRV")
"RTN","IBCF23A",109,0)
 F  S IBLPI=$O(IBLPAR(IBLPI)) Q:'IBLPI  S IBX=IBLPAR(IBLPI,0),$P(IBSS,U,40+IBX)=$TR(IBX,"^","~")
"RTN","IBCF23A",110,0)
 K IBLPAR
"RTN","IBCF23A",111,0)
IBSSX ;
"RTN","IBCF23A",112,0)
 Q IBSS
"RTN","IBCF23A",113,0)
 ;
"RTN","IBCF23A",114,0)
IBNWPTCH(IBIFN,IBPATCH) ;
"RTN","IBCF23A",115,0)
 ;Checks the date the primary claim was 1st transmitted and returns 1 if the transmitted date is after the patch
"RTN","IBCF23A",116,0)
 ;referenced in variable IBPATCH was released. This allows the MRA/EOBs returning to roll up procedures the same
"RTN","IBCF23A",117,0)
 ;way as they went out.  Otherwise the order changes and the MRA/EOB won't match up.
"RTN","IBCF23A",118,0)
 ;
"RTN","IBCF23A",119,0)
 N IBARY,IBIDT,IBPFN,IBEFN,IBBN,IBX,IBBDT
"RTN","IBCF23A",120,0)
 S IBX=0
"RTN","IBCF23A",121,0)
 I $$INSTALDT^XPDUTL(IBPATCH,.IBARY) D   ;ICR 10141
"RTN","IBCF23A",122,0)
 . S IBX=1
"RTN","IBCF23A",123,0)
 . S IBIDT=$O(IBARY(""))
"RTN","IBCF23A",124,0)
 . ; Get Primary Bill Number. This will insure COB data is consistent across all bills.
"RTN","IBCF23A",125,0)
 . S IBPFN=$$GET1^DIQ(399,IBIFN_",","PRIMARY BILL #","I") I 'IBPFN S IBPFN=IBIFN
"RTN","IBCF23A",126,0)
 . ; Find 1st Accepted Entry (A1, A2, or Z) of Primary Bill in EDI TRANSMIT BILL FILE (364) to determine Batch Number
"RTN","IBCF23A",127,0)
 . S (IBEFN,IBBN)=0 F  S IBEFN=$O(^IBA(364,"B",IBPFN,IBEFN)) Q:'IBEFN  D  I IBBN Q
"RTN","IBCF23A",128,0)
 .. I ",A1,A2,Z,"'[(","_$$GET1^DIQ(364,IBEFN_",","TRANSMISSION STATUS","I")_",") Q
"RTN","IBCF23A",129,0)
 .. S IBBN=$$GET1^DIQ(364,IBEFN_",","BATCH NUMBER","I")
"RTN","IBCF23A",130,0)
 . ;Retrieve the date the batch was 1st sent.  If IBBN="" IBBDT will be null
"RTN","IBCF23A",131,0)
 . S IBBDT=$$GET1^DIQ(364.1,$$GET1^DIQ(364,IBBN_",","BATCH NUMBER","I")_",","DATE FIRST SENT","I")
"RTN","IBCF23A",132,0)
 . I IBBDT,(IBBDT<IBIDT) S IBX=0
"RTN","IBCF23A",133,0)
 Q IBX
"RTN","IBCNSC")
0^24^B36416057^B26150929
"RTN","IBCNSC",1,0)
IBCNSC ;ALB/NLR - INSURANCE COMPANY EDIT ;6/1/05 9:42am
"RTN","IBCNSC",2,0)
 ;;2.0;INTEGRATED BILLING;**46,137,184,276,320,371,400,488,547**;21-MAR-94;Build 119
"RTN","IBCNSC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSC",4,0)
 ;
"RTN","IBCNSC",5,0)
 ;also used for IA #4694
"RTN","IBCNSC",6,0)
 ;
"RTN","IBCNSC",7,0)
EN ; -- main entry point for IBCNS INSURANCE COMPANY, IBCNS VIEW INS CO
"RTN","IBCNSC",8,0)
 NEW IB1ST
"RTN","IBCNSC",9,0)
 K IBFASTXT,VALMQUIT,VALMEVL,XQORS,^TMP("XQORS",$J),IBCNS
"RTN","IBCNSC",10,0)
 S IBCHANGE="OKAY"
"RTN","IBCNSC",11,0)
 I '$G(IBVIEW) D EN^VALM("IBCNS INSURANCE COMPANY") G ENQ
"RTN","IBCNSC",12,0)
 D EN^VALM("IBCNS VIEW INS CO")
"RTN","IBCNSC",13,0)
ENQ Q
"RTN","IBCNSC",14,0)
 ;
"RTN","IBCNSC",15,0)
HDR ; -- header code
"RTN","IBCNSC",16,0)
 S VALMHDR(1)="Insurance Company Information for: "_$E($P(^DIC(36,IBCNS,0),"^"),1,30)
"RTN","IBCNSC",17,0)
 S VALMHDR(2)="Type of Company: "_$E($P($G(^IBE(355.2,+$P($G(^DIC(36,+IBCNS,0)),"^",13),0)),"^"),1,20)_"                     Currently "_$S(+($P($G(^DIC(36,+IBCNS,0)),"^",5)):"Inactive",1:"Active")
"RTN","IBCNSC",18,0)
 Q
"RTN","IBCNSC",19,0)
 ;
"RTN","IBCNSC",20,0)
INIT ; -- init variables and list array
"RTN","IBCNSC",21,0)
 K VALMQUIT
"RTN","IBCNSC",22,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNSC",23,0)
 I '$D(IBCNS) D INSCO Q:$D(VALMQUIT)
"RTN","IBCNSC",24,0)
 D BLD,HDR
"RTN","IBCNSC",25,0)
 Q
"RTN","IBCNSC",26,0)
BLD ; -- list builder
"RTN","IBCNSC",27,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC",28,0)
 ;NEW BLNKI
"RTN","IBCNSC",29,0)
 NEW BLNKI,IBACMAX ; new variable set in PARAM section and needed throughout for display
"RTN","IBCNSC",30,0)
 ;
"RTN","IBCNSC",31,0)
 K ^TMP("IBCNSC",$J)
"RTN","IBCNSC",32,0)
 D KILL^VALM10()    ; delete all video attributes
"RTN","IBCNSC",33,0)
 F BLNKI=1:1:62 D BLANK(.BLNKI)     ; 62 blank lines to start with
"RTN","IBCNSC",34,0)
 D PARAM^IBCNSC01      ; billing parameters
"RTN","IBCNSC",35,0)
 D MAIN^IBCNSC01       ; main mailing address
"RTN","IBCNSC",36,0)
 D CLAIMS1^IBCNSC0     ; inpatient claims office
"RTN","IBCNSC",37,0)
 D CLAIMS2^IBCNSC0     ; outpatient claims office
"RTN","IBCNSC",38,0)
 D PRESCR^IBCNSC1      ; prescription claims office
"RTN","IBCNSC",39,0)
 D APPEALS             ; appeals office
"RTN","IBCNSC",40,0)
 D INQUIRY             ; inquiry office
"RTN","IBCNSC",41,0)
 D DISP^IBCNSC02       ; parent/child associations (ESG 11/3/05)
"RTN","IBCNSC",42,0)
 D PROVID^IBCNSC1      ; provider IDs
"RTN","IBCNSC",43,0)
 D PAYER^IBCNSC01      ; payer/payer apps (ESG 7/29/02 IIV project)
"RTN","IBCNSC",44,0)
 D REMARKS^IBCNSC01    ; remarks
"RTN","IBCNSC",45,0)
 D SYN^IBCNSC01        ; synonyms
"RTN","IBCNSC",46,0)
 S VALMCNT=+$O(^TMP("IBCNSC",$J,""),-1)
"RTN","IBCNSC",47,0)
 Q
"RTN","IBCNSC",48,0)
 ;
"RTN","IBCNSC",49,0)
APPEALS ;
"RTN","IBCNSC",50,0)
 N OFFSET,START,IBCNS14,IBADD
"RTN","IBCNSC",51,0)
 ;
"RTN","IBCNSC",52,0)
 ;WCJ;IB*2.0*547;Call new API
"RTN","IBCNSC",53,0)
 ;S IBCNS14=$$ADDRESS^IBCNSC0(IBCNS,.14,7)
"RTN","IBCNSC",54,0)
 S IBCNS14=$$ADD2^IBCNSC0(IBCNS,.14,7)
"RTN","IBCNSC",55,0)
 ;
"RTN","IBCNSC",56,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC",57,0)
 ;S START=48,OFFSET=2
"RTN","IBCNSC",58,0)
 S START=49+(2*$G(IBACMAX)),OFFSET=2
"RTN","IBCNSC",59,0)
 D SET^IBCNSP(START,OFFSET+25," Appeals Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",60,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS14,"^",7),0)),"^",1))
"RTN","IBCNSC",61,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS14,"^",1))
"RTN","IBCNSC",62,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS14,"^",2))
"RTN","IBCNSC",63,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",64,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS14,"^",3)) S IBADD=1
"RTN","IBCNSC",65,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS14,"^",4),1,15)_$S($P(IBCNS14,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS14,"^",5),0)),"^",2)_" "_$E($P(IBCNS14,"^",6),1,5))
"RTN","IBCNSC",66,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS14,"^",8))
"RTN","IBCNSC",67,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS14,"^",9))
"RTN","IBCNSC",68,0)
 Q
"RTN","IBCNSC",69,0)
 ;
"RTN","IBCNSC",70,0)
INQUIRY ;
"RTN","IBCNSC",71,0)
 ;
"RTN","IBCNSC",72,0)
 N OFFSET,START,IBCNS15,IBADD
"RTN","IBCNSC",73,0)
 ;
"RTN","IBCNSC",74,0)
 ;WCJ;IB*2.0*547;Call new API
"RTN","IBCNSC",75,0)
 ;S IBCNS15=$$ADDRESS^IBCNSC0(IBCNS,.15,8)
"RTN","IBCNSC",76,0)
 S IBCNS15=$$ADD2^IBCNSC0(IBCNS,.15,8)
"RTN","IBCNSC",77,0)
 ;
"RTN","IBCNSC",78,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC",79,0)
 ;S START=55,OFFSET=2
"RTN","IBCNSC",80,0)
 S START=56+(2*$G(IBACMAX)),OFFSET=2
"RTN","IBCNSC",81,0)
 D SET^IBCNSP(START,OFFSET+25," Inquiry Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",82,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS15,"^",7),0)),"^",1))
"RTN","IBCNSC",83,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS15,"^"))
"RTN","IBCNSC",84,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS15,"^",2))
"RTN","IBCNSC",85,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",86,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS15,"^",3)) S IBADD=1
"RTN","IBCNSC",87,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS15,"^",4),1,15)_$S($P(IBCNS15,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS15,"^",5),0)),"^",2)_" "_$E($P(IBCNS15,"^",6),1,5))
"RTN","IBCNSC",88,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS15,"^",8))
"RTN","IBCNSC",89,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS15,"^",9))
"RTN","IBCNSC",90,0)
 Q
"RTN","IBCNSC",91,0)
 ;
"RTN","IBCNSC",92,0)
HELP ; -- help code
"RTN","IBCNSC",93,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNSC",94,0)
 Q
"RTN","IBCNSC",95,0)
 ;
"RTN","IBCNSC",96,0)
EXIT ; -- exit code
"RTN","IBCNSC",97,0)
 K VALMQUIT,IBCNS,IBCHANGE,IBFASTXT
"RTN","IBCNSC",98,0)
 D CLEAN^VALM10
"RTN","IBCNSC",99,0)
 Q
"RTN","IBCNSC",100,0)
 ;
"RTN","IBCNSC",101,0)
INSCO ; -- select insurance company
"RTN","IBCNSC",102,0)
 NEW DLAYGO,DIC,X,Y,DTOUT,DUOUT,IBCNS3
"RTN","IBCNSC",103,0)
 I '$D(IBCNS) D  G:$D(VALMQUIT) INSCOQ
"RTN","IBCNSC",104,0)
 .S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","IBCNSC",105,0)
 .I '$G(IBVIEW) S DLAYGO=36,DIC(0)=DIC(0)_"L"
"RTN","IBCNSC",106,0)
 .D ^DIC K DIC
"RTN","IBCNSC",107,0)
 .S IBCNS=+Y
"RTN","IBCNSC",108,0)
 .;/Beginning of IB*2.0*488 (vd)
"RTN","IBCNSC",109,0)
 .I +IBCNS I $P($G(^DIC(36,+IBCNS,3)),"^",1)="" D     ; Set default for EDI=Transmit? to YES-LIVE
"RTN","IBCNSC",110,0)
 ..S DR="3.01////1",DIE="^DIC(36,",DA=IBCNS D ^DIE K DIE
"RTN","IBCNSC",111,0)
 ..;/End of IB*2.0*488 (vd)
"RTN","IBCNSC",112,0)
 I $G(IBCNS)<1 K IBCNS S VALMQUIT="" G INSCOQ
"RTN","IBCNSC",113,0)
INSCOQ ;
"RTN","IBCNSC",114,0)
 K DIC
"RTN","IBCNSC",115,0)
 Q
"RTN","IBCNSC",116,0)
 ;
"RTN","IBCNSC",117,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSC",118,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSC",119,0)
 Q
"RTN","IBCNSC",120,0)
 ;
"RTN","IBCNSC",121,0)
EDIKEY() ; input transform code to determine if user is allowed to edit
"RTN","IBCNSC",122,0)
 ; certain fields in the insurance company file
"RTN","IBCNSC",123,0)
 NEW OK S OK=0
"RTN","IBCNSC",124,0)
 I $$KCHK^XUSRB("IB EDI INSURANCE EDIT") S OK=1 G EDIKEYX
"RTN","IBCNSC",125,0)
 D EN^DDIOL("You must hold the IB EDI INSURANCE EDIT security key to edit this field.",,"!!")
"RTN","IBCNSC",126,0)
 D EN^DDIOL("",,"!!?5")
"RTN","IBCNSC",127,0)
EDIKEYX ;
"RTN","IBCNSC",128,0)
 Q OK
"RTN","IBCNSC",129,0)
 ;
"RTN","IBCNSC",130,0)
DUPQUAL(IBCNS,QUAL,FIELD) ; input transform to make sure that the same qualifier is not used twice for
"RTN","IBCNSC",131,0)
 ; payer secondary IDs.  There are two sets of fields in file 36 that can not be duplicated.
"RTN","IBCNSC",132,0)
 ; 6.01 EDI INST SECONDARY ID QUAL(1) can not be the same as 6.03 EDI INST SECONDARY ID QUAL(2)
"RTN","IBCNSC",133,0)
 ; 6.05 EDI PROF SECONDARY ID QUAL(1) can not be the same as 6.07 EDI PROF SECONDARY ID QUAL(2)
"RTN","IBCNSC",134,0)
 ; 
"RTN","IBCNSC",135,0)
 ; Input:
"RTN","IBCNSC",136,0)
 ; IBCNS is the insurance company internal number
"RTN","IBCNSC",137,0)
 ; QUAL  is the internal code of the value being input.
"RTN","IBCNSC",138,0)
 ; FIELD is the field it is being compare with.
"RTN","IBCNSC",139,0)
 ;
"RTN","IBCNSC",140,0)
 ; Returns:
"RTN","IBCNSC",141,0)
 ; TRUE/1 if they are the same (duplicate)
"RTN","IBCNSC",142,0)
 ; FALSE/0 if they are not
"RTN","IBCNSC",143,0)
 ;
"RTN","IBCNSC",144,0)
 Q:$G(QUAL)="" 0  ; should not happen because this is invoked as an input transform
"RTN","IBCNSC",145,0)
 Q:'+$G(IBCNS) 1  ; stop from editing through fileman
"RTN","IBCNSC",146,0)
 N DUP
"RTN","IBCNSC",147,0)
 S DUP=$$GET1^DIQ(36,+$G(IBCNS)_",",+$G(FIELD),"I")
"RTN","IBCNSC",148,0)
 D CLEAN^DILF
"RTN","IBCNSC",149,0)
 Q QUAL=DUP
"RTN","IBCNSC",150,0)
 ;
"RTN","IBCNSC",151,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC",152,0)
ALLOWED(IBAC) ;  input transform to make sure that Administrative Contractor is set up in the site parameters.
"RTN","IBCNSC",153,0)
 ; it will be set up for either commercial or medicare.  Since the type is defined my the plan and we are at a higher
"RTN","IBCNSC",154,0)
 ; level in the Insurance Company, we have to allow both.
"RTN","IBCNSC",155,0)
 ; called from ^DD(36.015,.01,0) and ^DD(36.016,.01,0)
"RTN","IBCNSC",156,0)
 ;
"RTN","IBCNSC",157,0)
 ;3/17/2016 - A decision was made to limit which type is allowed by using the TYPE OF COVERAGE field. (TAZ)
"RTN","IBCNSC",158,0)
 ;
"RTN","IBCNSC",159,0)
 ;
"RTN","IBCNSC",160,0)
 ; Input:
"RTN","IBCNSC",161,0)
 ; IBAC  is the internal code of the value being input.
"RTN","IBCNSC",162,0)
 ;
"RTN","IBCNSC",163,0)
 ; Returns:
"RTN","IBCNSC",164,0)
 ; TRUE/1 if allowed (set up in site parameters)
"RTN","IBCNSC",165,0)
 ; FALSE/0 if they are not
"RTN","IBCNSC",166,0)
 ; 
"RTN","IBCNSC",167,0)
 Q:$D(^IBE(350.9,1,$S($$GET1^DIQ(36,IBCNS_",","TYPE OF COVERAGE")="MEDICARE":81,1:82),"B",IBAC)) 1
"RTN","IBCNSC",168,0)
 Q 0
"RTN","IBCNSC",169,0)
 ;
"RTN","IBCNSC",170,0)
 ; WCJ;IB*2.0*547
"RTN","IBCNSC",171,0)
 ; This is to clean up any extraneous nodes if a user entered an alternate ID type, but not an actual ID.
"RTN","IBCNSC",172,0)
CLEANIDS(INSIEN) ;
"RTN","IBCNSC",173,0)
 ; INSIEN=Insurance Company IEN
"RTN","IBCNSC",174,0)
 ;
"RTN","IBCNSC",175,0)
 N NODE,LOOP,DATA,CLEANUP
"RTN","IBCNSC",176,0)
 F NODE=15,16 D
"RTN","IBCNSC",177,0)
 .S LOOP=0 F  S LOOP=$O(^DIC(36,INSIEN,NODE,LOOP))  Q:'+LOOP  S DATA=$G(^(LOOP,0)) I DATA]"",$P(DATA,U,2)="" D
"RTN","IBCNSC",178,0)
 ..N DIK,DA
"RTN","IBCNSC",179,0)
 ..S DA=LOOP,DA(1)=INSIEN
"RTN","IBCNSC",180,0)
 ..S DIK="^DIC(36,"_INSIEN_","_NODE_","
"RTN","IBCNSC",181,0)
 ..D ^DIK
"RTN","IBCNSC",182,0)
 ..S CLEANUP=1
"RTN","IBCNSC",183,0)
 I $G(CLEANUP) D
"RTN","IBCNSC",184,0)
 . N DIR
"RTN","IBCNSC",185,0)
 . S DIR("A",1)="Payer ID Types without corresponding ID# were deleted."
"RTN","IBCNSC",186,0)
 . S DIR(0)="EA",DIR("A")="PRESS ENTER TO CONTINUE "
"RTN","IBCNSC",187,0)
 . D ^DIR
"RTN","IBCNSC",188,0)
 .Q
"RTN","IBCNSC",189,0)
 Q
"RTN","IBCNSC0")
0^35^B13502229^B9881323
"RTN","IBCNSC0",1,0)
IBCNSC0 ;ALB/NLR - INSURANCE COMPANY EDIT -  ;12-MAR-1993
"RTN","IBCNSC0",2,0)
 ;;2.0;INTEGRATED BILLING;**371,547**;21-MAR-94;Build 119
"RTN","IBCNSC0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSC0",4,0)
 ;
"RTN","IBCNSC0",5,0)
CLAIMS1 ; display Inpatient Claims information
"RTN","IBCNSC0",6,0)
 N OFFSET,START,IBCNS12,IBADD
"RTN","IBCNSC0",7,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC0",8,0)
 ;S START=27,OFFSET=2
"RTN","IBCNSC0",9,0)
 S START=28+(2*$G(IBACMAX)),OFFSET=2
"RTN","IBCNSC0",10,0)
 D SET^IBCNSP(START,OFFSET+20," Inpatient Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC0",11,0)
 ;
"RTN","IBCNSC0",12,0)
 ;WCJ;IB*2.0*547;Call New API
"RTN","IBCNSC0",13,0)
 ;S IBCNS12=$$ADDRESS(IBCNS,.12,5)
"RTN","IBCNSC0",14,0)
 S IBCNS12=$$ADD2(IBCNS,.12,5)
"RTN","IBCNSC0",15,0)
 ;
"RTN","IBCNSC0",16,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS12,"^",7),0)),"^",1))
"RTN","IBCNSC0",17,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS12,"^",1))
"RTN","IBCNSC0",18,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS12,"^",2))
"RTN","IBCNSC0",19,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC0",20,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS12,"^",3)) S IBADD=1
"RTN","IBCNSC0",21,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS12,"^",4),1,15)_$S($P(IBCNS12,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS12,"^",5),0)),"^",2)_" "_$E($P(IBCNS12,"^",6),1,5))
"RTN","IBCNSC0",22,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS12,"^",8))
"RTN","IBCNSC0",23,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS12,"^",9))
"RTN","IBCNSC0",24,0)
 Q
"RTN","IBCNSC0",25,0)
 ;
"RTN","IBCNSC0",26,0)
R1Q Q
"RTN","IBCNSC0",27,0)
CLAIMS2 ; display Outpatient Claims information
"RTN","IBCNSC0",28,0)
 ;
"RTN","IBCNSC0",29,0)
 N OFFSET,START,IBCNS16,IBADD
"RTN","IBCNSC0",30,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC0",31,0)
 ;S START=34,OFFSET=2
"RTN","IBCNSC0",32,0)
 S START=35+(2*$G(IBACMAX)),OFFSET=2
"RTN","IBCNSC0",33,0)
 D SET^IBCNSP(START,OFFSET+20," Outpatient Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC0",34,0)
 ;
"RTN","IBCNSC0",35,0)
 ;WCJ;IB*2.0*547;Call New API
"RTN","IBCNSC0",36,0)
 ;S IBCNS16=$$ADDRESS(IBCNS,.16,6)
"RTN","IBCNSC0",37,0)
 S IBCNS16=$$ADD2(IBCNS,.16,6)
"RTN","IBCNSC0",38,0)
 ;
"RTN","IBCNSC0",39,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS16,"^",7),0)),"^",1))
"RTN","IBCNSC0",40,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS16,"^",1))
"RTN","IBCNSC0",41,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS16,"^",2))
"RTN","IBCNSC0",42,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC0",43,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS16,"^",3)) S IBADD=1
"RTN","IBCNSC0",44,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS16,"^",4),1,15)_$S($P(IBCNS16,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS16,"^",5),0)),"^",2)_" "_$E($P(IBCNS16,"^",6),1,5))
"RTN","IBCNSC0",45,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS16,"^",8))
"RTN","IBCNSC0",46,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS16,"^",9))
"RTN","IBCNSC0",47,0)
 Q
"RTN","IBCNSC0",48,0)
 ;
"RTN","IBCNSC0",49,0)
 ; Only adding comments on patch 547.  Changes are on the ADD2 tag below.
"RTN","IBCNSC0",50,0)
 ; This tag is called from the Output formatter.
"RTN","IBCNSC0",51,0)
 ; It returns a "complete" address
"RTN","IBCNSC0",52,0)
 ; It judges an address complete if it has a state (don't ask why, I am just adding the comments)
"RTN","IBCNSC0",53,0)
 ; If the address it wants is not complete, it returns the main address.
"RTN","IBCNSC0",54,0)
 ; These addresses go out on claims and claims (X12 837) don't like partial addresses.
"RTN","IBCNSC0",55,0)
ADDRESS(INS,NODE,PH) ; -- generic find address
"RTN","IBCNSC0",56,0)
 ;
"RTN","IBCNSC0",57,0)
 N IBX,INSSAVE,IBPH,IBFX,IBCNT,IBA
"RTN","IBCNSC0",58,0)
 S IBX="" ;S IBPH="",IBFX="",IBA=""
"RTN","IBCNSC0",59,0)
 ;
"RTN","IBCNSC0",60,0)
REDO ; gather insurance carrier's main address information 
"RTN","IBCNSC0",61,0)
 S IBX=$G(^DIC(36,+INS,.11)),IBPH=$P($G(^DIC(36,+INS,.13)),"^",1),IBFX=$P(IBX,"^",9)
"RTN","IBCNSC0",62,0)
 ;S IBCNT=$G(IBCNT)+1
"RTN","IBCNSC0",63,0)
 ;
"RTN","IBCNSC0",64,0)
 ; -- if process the same co. more than once you are in an infinite loop
"RTN","IBCNSC0",65,0)
 ;I $D(IBCNT(IBCNS)) G ADDREQ
"RTN","IBCNSC0",66,0)
 ;S IBCNT(IBCNS)=""
"RTN","IBCNSC0",67,0)
 ;
"RTN","IBCNSC0",68,0)
 ; -- gather address information from specific office (Claims, Appeals, Inquiry)
"RTN","IBCNSC0",69,0)
 ;
"RTN","IBCNSC0",70,0)
 I $P($G(^DIC(36,+INS,+NODE)),"^",5) S IBX=$G(^DIC(36,+INS,+NODE)),IBPH=$P($G(^DIC(36,+INS,.13)),"^",PH),IBFX=$P($G(IBX),"^",9)
"RTN","IBCNSC0",71,0)
 I $P($G(^DIC(36,+INS,+NODE)),"^",7) S INSSAVE=INS,INS=$P($G(^DIC(36,+INS,+NODE)),"^",7) I INSSAVE'=INS G REDO
"RTN","IBCNSC0",72,0)
 ;
"RTN","IBCNSC0",73,0)
ADDRESQ ; concatenate company name, address, phone and fax 
"RTN","IBCNSC0",74,0)
 S $P(IBA,"^",1,6)=$P($G(IBX),"^",1,6)
"RTN","IBCNSC0",75,0)
 S $P(IBA,"^",7)=INS
"RTN","IBCNSC0",76,0)
 S $P(IBA,"^",8)=IBPH
"RTN","IBCNSC0",77,0)
 S $P(IBA,"^",9)=IBFX
"RTN","IBCNSC0",78,0)
ADDREQ Q IBA
"RTN","IBCNSC0",79,0)
 ;
"RTN","IBCNSC0",80,0)
 ; WCJ;IB*2.0*547;
"RTN","IBCNSC0",81,0)
 ; This is a new tag which is just called from the insurance company editor screens.
"RTN","IBCNSC0",82,0)
 ; The billers/insurance verifiers want to see what data is actually in the insurance company file.
"RTN","IBCNSC0",83,0)
 ; They don't care if it's complete.  Heck, a phone number may be enough.
"RTN","IBCNSC0",84,0)
 ; This will just return what is in the file for the ins company that handles that type of claims.
"RTN","IBCNSC0",85,0)
 ; Input: INS - IREN to file 36
"RTN","IBCNSC0",86,0)
 ;        NODE - Node in File 36 (corresponds to Claims, Appeals, Inquiry...)
"RTN","IBCNSC0",87,0)
 ;        PH - Location of Phone number in node .13
"RTN","IBCNSC0",88,0)
ADD2(INS,NODE,PH) ;
"RTN","IBCNSC0",89,0)
 N IBX,INSSAVE,IBFX,IBPH,IBA
"RTN","IBCNSC0",90,0)
 F  S IBX=$G(^DIC(36,+INS,+NODE)) Q:'$P(IBX,U,7)  S INSSAVE=INS,INS=$P(IBX,U,7) Q:INSSAVE=INS
"RTN","IBCNSC0",91,0)
 ; concatenate company name, address, phone and fax  
"RTN","IBCNSC0",92,0)
 S IBPH=$P($G(^DIC(36,+INS,.13)),U,PH),IBFX=$P(IBX,U,9)
"RTN","IBCNSC0",93,0)
 S $P(IBA,U,1,6)=$P(IBX,U,1,6),$P(IBA,U,7)=INS,$P(IBA,U,8)=IBPH,$P(IBA,U,9)=IBFX
"RTN","IBCNSC0",94,0)
 Q IBA
"RTN","IBCNSC01")
0^32^B73912803^B59075221
"RTN","IBCNSC01",1,0)
IBCNSC01 ;ALB/NLR - INSURANCE COMPANY EDIT ;6/1/05 10:06am
"RTN","IBCNSC01",2,0)
 ;;2.0;INTEGRATED BILLING;**52,137,191,184,232,320,349,371,399,416,432,494,519,547**;21-MAR-94;Build 119
"RTN","IBCNSC01",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSC01",4,0)
 ;
"RTN","IBCNSC01",5,0)
PARAM ; -- Insurance company parameters region
"RTN","IBCNSC01",6,0)
 N OFFSET,START,IBCNS0,IBCNS03,IBCNS06,IBCNS08,IBCNS13,IBCNS3,IBHPD
"RTN","IBCNSC01",7,0)
 S IBCNS0=$G(^DIC(36,+IBCNS,0)),IBCNS3=$G(^(3))
"RTN","IBCNSC01",8,0)
 S IBCNS03=$P(IBCNS0,"^",3),IBCNS06=$P(IBCNS0,"^",6),IBCNS08=$P(IBCNS0,"^",8)
"RTN","IBCNSC01",9,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",10,0)
 S START=1,OFFSET=2
"RTN","IBCNSC01",11,0)
 D SET^IBCNSP(START,OFFSET+25," Billing Parameters ",IORVON,IORVOFF)
"RTN","IBCNSC01",12,0)
 ;
"RTN","IBCNSC01",13,0)
 D SET^IBCNSP(START+1,OFFSET+1,"Signature Required?: "_$S(+IBCNS03:"YES",1:"NO"))
"RTN","IBCNSC01",14,0)
 D SET^IBCNSP(START+2,OFFSET+10,"Reimburse?: "_$E($$EXPAND^IBTRE(36,1,$P(IBCNS0,"^",2)),1,21))
"RTN","IBCNSC01",15,0)
 D SET^IBCNSP(START+3,OFFSET+3,"Mult. Bedsections: "_$S(+IBCNS06:"YES",IBCNS06=0:"NO",1:""))
"RTN","IBCNSC01",16,0)
 D SET^IBCNSP(START+4,OFFSET+6,"One Opt. Visit: "_$S(+IBCNS08:"YES",1:"NO"))
"RTN","IBCNSC01",17,0)
 D SET^IBCNSP(START+5,OFFSET+4,"Diff. Rev. Codes: "_$P(IBCNS0,"^",7))
"RTN","IBCNSC01",18,0)
 D SET^IBCNSP(START+6,OFFSET+1,"Amb. Sur. Rev. Code: "_$P(IBCNS0,"^",9))
"RTN","IBCNSC01",19,0)
 D SET^IBCNSP(START+7,OFFSET+1,"Rx Refill Rev. Code: "_$P(IBCNS0,"^",15))
"RTN","IBCNSC01",20,0)
 D SET^IBCNSP(START+8,OFFSET+3,"Filing Time Frame: "_$P(IBCNS0,"^",12)_$S(+$P(IBCNS0,"^",18):" ("_$$FTFN^IBCNSU31(,+IBCNS)_")",1:""))
"RTN","IBCNSC01",21,0)
 ;
"RTN","IBCNSC01",22,0)
 S OFFSET=45
"RTN","IBCNSC01",23,0)
 D SET^IBCNSP(START+1,OFFSET+4,"Type Of Coverage: "_$$EXPAND^IBTRE(36,.13,+$P(IBCNS0,U,13)))
"RTN","IBCNSC01",24,0)
 D SET^IBCNSP(START+2,OFFSET+7,"Billing Phone: "_$P(IBCNS13,"^",2))
"RTN","IBCNSC01",25,0)
 D SET^IBCNSP(START+3,OFFSET+2,"Verification Phone: "_$P(IBCNS13,"^",4))
"RTN","IBCNSC01",26,0)
 D SET^IBCNSP(START+4,OFFSET+2,"Precert Comp. Name: "_$P($G(^DIC(36,+$P(IBCNS13,"^",9),0)),"^",1))
"RTN","IBCNSC01",27,0)
 D SET^IBCNSP(START+5,OFFSET+7,"Precert Phone: "_$$PHONE(IBCNS13))
"RTN","IBCNSC01",28,0)
 I +IBCNS3=2 D SET^IBCNSP(START+6,OFFSET,"Max # Test Bills/Day: "_$P(IBCNS3,U,6))
"RTN","IBCNSC01",29,0)
 ;
"RTN","IBCNSC01",30,0)
 S START=11,OFFSET=2
"RTN","IBCNSC01",31,0)
 D SET^IBCNSP(START,OFFSET+28," EDI Parameters ",IORVON,IORVOFF)
"RTN","IBCNSC01",32,0)
 D SET^IBCNSP(START+1,OFFSET+13,"Transmit?: "_$S(+IBCNS3=1:"YES-LIVE",+IBCNS3=2:"TEST ONLY",1:"NO"))
"RTN","IBCNSC01",33,0)
 D SET^IBCNSP(START+2,OFFSET+1,"Inst Payer Primary ID: "_$P(IBCNS3,U,4))
"RTN","IBCNSC01",34,0)
 ;
"RTN","IBCNSC01",35,0)
 ;WCJ;IB*2.0*547; Lots o Changes below to include new Alternate Primary ID
"RTN","IBCNSC01",36,0)
 N IBAC,IBACND,LOOP
"RTN","IBCNSC01",37,0)
 S IBACMAX=0
"RTN","IBCNSC01",38,0)
 F IBACND=15,16 D
"RTN","IBCNSC01",39,0)
 .S LOOP=0 F  S LOOP=$O(^DIC(36,+IBCNS,IBACND,LOOP)) Q:'+LOOP  D
"RTN","IBCNSC01",40,0)
 ..S IBAC(IBACND,"CT")=$G(IBAC(IBACND,"CT"))+1 I IBAC(IBACND,"CT")>IBACMAX S IBACMAX=IBAC(IBACND,"CT")
"RTN","IBCNSC01",41,0)
 ..S IBAC(IBACND,IBAC(IBACND,"CT"))=$P($G(^DIC(36,+IBCNS,IBACND,LOOP,0)),U,1,2)
"RTN","IBCNSC01",42,0)
 ;
"RTN","IBCNSC01",43,0)
 S LOOP=0 F  S LOOP=$O(IBAC(15,LOOP)) Q:'LOOP  D
"RTN","IBCNSC01",44,0)
 .D SET^IBCNSP(START+2+(LOOP*2-1),OFFSET,"Alt-I Payer Prim ID Type: "_$$GET1^DIQ(355.98,+$P($G(IBAC(15,LOOP)),U),.01))
"RTN","IBCNSC01",45,0)
 .D SET^IBCNSP(START+2+(LOOP*2),OFFSET,"Alt-Inst Payer Prim ID: "_$P($G(IBAC(15,LOOP)),U,2))
"RTN","IBCNSC01",46,0)
 ;
"RTN","IBCNSC01",47,0)
 D SET^IBCNSP(START+3+(2*IBACMAX),OFFSET,"Inst Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.01))
"RTN","IBCNSC01",48,0)
 D SET^IBCNSP(START+4+(2*IBACMAX),OFFSET+5,"Inst Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.02))
"RTN","IBCNSC01",49,0)
 D SET^IBCNSP(START+5+(2*IBACMAX),OFFSET,"Inst Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.03))
"RTN","IBCNSC01",50,0)
 D SET^IBCNSP(START+6+(2*IBACMAX),OFFSET+5,"Inst Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.04))
"RTN","IBCNSC01",51,0)
 D SET^IBCNSP(START+7+(2*IBACMAX),OFFSET+12,"Bin Number: "_$P($G(^DIC(36,+IBCNS,3)),"^",3)) ;
"RTN","IBCNSC01",52,0)
 ;
"RTN","IBCNSC01",53,0)
 ;IB*2.0*547;WCJ Added and bumped HPID down
"RTN","IBCNSC01",54,0)
 D SET^IBCNSP(START+8+(2*IBACMAX),OFFSET+10,"UMO (278) ID: "_$P($G(^DIC(36,+IBCNS,7)),U))
"RTN","IBCNSC01",55,0)
 ;ib*2.0*519
"RTN","IBCNSC01",56,0)
 S IBHPD=$$HPD^IBCNHUT1(+IBCNS)
"RTN","IBCNSC01",57,0)
 D SET^IBCNSP(START+9+(2*IBACMAX),OFFSET+13,$P($$HOD^IBCNHUT1(IBHPD),U,2)_": "_IBHPD)
"RTN","IBCNSC01",58,0)
 ;
"RTN","IBCNSC01",59,0)
 S OFFSET=41
"RTN","IBCNSC01",60,0)
 D SET^IBCNSP(START+1,OFFSET+8," Insurance Type: "_$$EXPAND^IBTRE(36,3.09,+$P(IBCNS3,U,9)))
"RTN","IBCNSC01",61,0)
 D SET^IBCNSP(START+2,OFFSET+1," Prof Payer Primary ID: "_$P(IBCNS3,U,2))
"RTN","IBCNSC01",62,0)
 ;
"RTN","IBCNSC01",63,0)
 S LOOP=0 F  S LOOP=$O(IBAC(16,LOOP)) Q:'LOOP  D
"RTN","IBCNSC01",64,0)
 .D SET^IBCNSP(START+2+(LOOP*2-1),OFFSET+1,"Alt-P Payer Prim ID Type: "_$$GET1^DIQ(355.98,+$P($G(IBAC(16,LOOP)),U),.01))
"RTN","IBCNSC01",65,0)
 .D SET^IBCNSP(START+2+(LOOP*2),OFFSET+1,"Alt-Prof Payer Prim ID: "_$P($G(IBAC(16,LOOP)),U,2))
"RTN","IBCNSC01",66,0)
 ;
"RTN","IBCNSC01",67,0)
 D SET^IBCNSP(START+3+(2*IBACMAX),OFFSET," Prof Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.05))
"RTN","IBCNSC01",68,0)
 D SET^IBCNSP(START+4+(2*IBACMAX),OFFSET+5," Prof Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.06))
"RTN","IBCNSC01",69,0)
 D SET^IBCNSP(START+5+(2*IBACMAX),OFFSET," Prof Payer Sec ID Qual: "_$$GET1^DIQ(36,+IBCNS,6.07))
"RTN","IBCNSC01",70,0)
 D SET^IBCNSP(START+6+(2*IBACMAX),OFFSET+5," Prof Payer Sec ID: "_$$GET1^DIQ(36,+IBCNS,6.08))
"RTN","IBCNSC01",71,0)
 ;IB*2.0*432/TAZ Added fields 6.09 and 6.1
"RTN","IBCNSC01",72,0)
 D SET^IBCNSP(START+7+(2*IBACMAX),OFFSET-3," Prnt Sec/Tert Auto Claims: "_$$GET1^DIQ(36,+IBCNS,6.09))
"RTN","IBCNSC01",73,0)
 D SET^IBCNSP(START+8+(2*IBACMAX),OFFSET-5," Prnt Med Sec Claims w/o MRA: "_$$GET1^DIQ(36,+IBCNS,6.1))
"RTN","IBCNSC01",74,0)
 Q
"RTN","IBCNSC01",75,0)
 ;
"RTN","IBCNSC01",76,0)
PHONE(IBCNS13) ; -- Compute precert company phone
"RTN","IBCNSC01",77,0)
 N IBX,IBSAVE,IBCNT S IBX=""
"RTN","IBCNSC01",78,0)
 I '$P(IBCNS13,"^",9) S IBX=$P(IBCNS13,"^",3) G PHONEQ
"RTN","IBCNSC01",79,0)
REDOX S IBSAVE=+$P(IBCNS13,"^",9)
"RTN","IBCNSC01",80,0)
 S IBCNT=$G(IBCNT)+1
"RTN","IBCNSC01",81,0)
 ; -- if you process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",82,0)
 I $D(IBCNT(IBCNS)) G PHONEQ
"RTN","IBCNSC01",83,0)
 S IBCNT(IBCNS)=""
"RTN","IBCNSC01",84,0)
 S IBCNS13=$G(^DIC(36,+$P(IBCNS13,"^",9),.13))
"RTN","IBCNSC01",85,0)
 S IBX=$P(IBCNS13,"^") S:$L($P(IBCNS13,"^",3)) IBX=$P(IBCNS13,"^",3)
"RTN","IBCNSC01",86,0)
 ; -- if process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",87,0)
 I $P(IBCNS13,"^",9),$P(IBCNS13,"^",9)'=IBSAVE G REDOX
"RTN","IBCNSC01",88,0)
PHONEQ Q IBX
"RTN","IBCNSC01",89,0)
 ;
"RTN","IBCNSC01",90,0)
MAIN ; -- Insurance company main address
"RTN","IBCNSC01",91,0)
 N OFFSET,START,IBCNS11,IBCNS13,IBADD
"RTN","IBCNSC01",92,0)
 S IBCNS11=$G(^DIC(36,+IBCNS,.11))
"RTN","IBCNSC01",93,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",94,0)
 ;
"RTN","IBCNSC01",95,0)
 ;S START=21,OFFSET=25
"RTN","IBCNSC01",96,0)
 S START=22+(2*IBACMAX),OFFSET=25
"RTN","IBCNSC01",97,0)
 D SET^IBCNSP(START,OFFSET," Main Mailing Address ",IORVON,IORVOFF)
"RTN","IBCNSC01",98,0)
 N OFFSET S OFFSET=2
"RTN","IBCNSC01",99,0)
 D SET^IBCNSP(START+1,OFFSET,"       Street: "_$P(IBCNS11,"^",1)) S IBADD=1
"RTN","IBCNSC01",100,0)
 D SET^IBCNSP(START+2,OFFSET,"     Street 2: "_$P(IBCNS11,"^",2)) S IBADD=2
"RTN","IBCNSC01",101,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 3: "_$P(IBCNS11,"^",3)) S IBADD=3
"RTN","IBCNSC01",102,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS11,U,11))
"RTN","IBCNSC01",103,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC01",104,0)
 D SET^IBCNSP(START+1,OFFSET,"   City/State: "_$E($P(IBCNS11,"^",4),1,15)_$S($P(IBCNS11,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS11,"^",5),0)),"^",2)_" "_$E($P(IBCNS11,"^",6),1,5))
"RTN","IBCNSC01",105,0)
 D SET^IBCNSP(START+2,OFFSET,"        Phone: "_$P(IBCNS13,"^",1))
"RTN","IBCNSC01",106,0)
 D SET^IBCNSP(START+3,OFFSET,"          Fax: "_$P(IBCNS11,"^",9))
"RTN","IBCNSC01",107,0)
 Q
"RTN","IBCNSC01",108,0)
 ;
"RTN","IBCNSC01",109,0)
 ;
"RTN","IBCNSC01",110,0)
PAYER ; This procedure builds the display for the payer associated with
"RTN","IBCNSC01",111,0)
 ; this insurance company.
"RTN","IBCNSC01",112,0)
 ; ESG - 7/29/02 - IIV project
"RTN","IBCNSC01",113,0)
 ;     -  9/9/09 - eIV updated
"RTN","IBCNSC01",114,0)
 ;     -  2/4/13 - remove ePharmacy references (IB*2*494)
"RTN","IBCNSC01",115,0)
 ;
"RTN","IBCNSC01",116,0)
 NEW PAYERIEN,PAYR,APPDATA,APP,DATA,APPNAME,A1,A2,A3,A4,A5,A6,A7,A8
"RTN","IBCNSC01",117,0)
 NEW START,TITLE,OFFSET,IBLINE
"RTN","IBCNSC01",118,0)
 S PAYERIEN=$P($G(^DIC(36,+IBCNS,3)),U,10),PAYR="",APPDATA=0
"RTN","IBCNSC01",119,0)
 I PAYERIEN D
"RTN","IBCNSC01",120,0)
 . S PAYR=$G(^IBE(365.12,PAYERIEN,0))
"RTN","IBCNSC01",121,0)
 . S APP=0
"RTN","IBCNSC01",122,0)
 . F  S APP=$O(^IBE(365.12,PAYERIEN,1,APP)) Q:'APP  D
"RTN","IBCNSC01",123,0)
 .. S DATA=$G(^IBE(365.12,PAYERIEN,1,APP,0))
"RTN","IBCNSC01",124,0)
 .. S APPNAME=$$EXTERNAL^DILFD(365.121,.01,"",$P(DATA,U,1))
"RTN","IBCNSC01",125,0)
 .. I APPNAME="" Q
"RTN","IBCNSC01",126,0)
 .. I APPNAME="IIV" S APPNAME="eIV"   ; IB*2*416 - change external display to be eIV
"RTN","IBCNSC01",127,0)
 .. I APPNAME="E-PHARM" Q             ; IB*2*494 - don't display ePharmacy application data
"RTN","IBCNSC01",128,0)
 .. I $D(APPDATA(APPNAME)) Q
"RTN","IBCNSC01",129,0)
 .. S (A1,A2,A3,A4,A5,A6,A7)="NO",A8=""
"RTN","IBCNSC01",130,0)
 .. I $P(DATA,U,2) S A1="YES"      ; national active
"RTN","IBCNSC01",131,0)
 .. I $P(DATA,U,3) S A2="YES"      ; local active
"RTN","IBCNSC01",132,0)
 .. I $P(DATA,U,7) S A3="YES"      ; auto-accept
"RTN","IBCNSC01",133,0)
 .. I $P(DATA,U,8) S A4="YES"      ; ident inquiries require subscr ID (*416 field not used)
"RTN","IBCNSC01",134,0)
 .. I $P(DATA,U,9) S A5="YES"      ; use SSN for subscriber ID (*416 field not used)
"RTN","IBCNSC01",135,0)
 .. I $P(DATA,U,10) S A6="YES"     ; transmit SSN (*416 field not used)
"RTN","IBCNSC01",136,0)
 .. I $P(DATA,U,11) S A7="YES"     ; deactivated?
"RTN","IBCNSC01",137,0)
 .. ; A8 = deactivation date
"RTN","IBCNSC01",138,0)
 .. I $P(DATA,U,12) S A8=$P($$FMTE^XLFDT($P(DATA,U,12),"5Z"),"@",1)
"RTN","IBCNSC01",139,0)
 .. S APPDATA(APPNAME)=A1_U_A2_U_A3_U_A4_U_A5_U_A6_U_A7_U_A8
"RTN","IBCNSC01",140,0)
 .. S APPDATA=APPDATA+1
"RTN","IBCNSC01",141,0)
 .. Q
"RTN","IBCNSC01",142,0)
 . Q
"RTN","IBCNSC01",143,0)
 ;
"RTN","IBCNSC01",144,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC01",145,0)
 S IB1ST("PAYER")=START
"RTN","IBCNSC01",146,0)
 S TITLE=" Payer Information:  e-IV "     ; esg - IB*2*494 - remove ePharmacy reference
"RTN","IBCNSC01",147,0)
 S OFFSET=(40-($L(TITLE)/2))\1+1
"RTN","IBCNSC01",148,0)
 D SET^IBCNSP(START,OFFSET,TITLE,IORVON,IORVOFF)
"RTN","IBCNSC01",149,0)
 D SET^IBCNSP(START+1,9,"Payer Name: "_$P(PAYR,U,1))
"RTN","IBCNSC01",150,0)
 D SET^IBCNSP(START+2,5,"VA National ID: "_$P(PAYR,U,2))
"RTN","IBCNSC01",151,0)
 D SET^IBCNSP(START+2,51,"CMS National ID: "_$P(PAYR,U,3))
"RTN","IBCNSC01",152,0)
 S IBLINE=START+2
"RTN","IBCNSC01",153,0)
 ;
"RTN","IBCNSC01",154,0)
 ; Handle the case where no application data is defined
"RTN","IBCNSC01",155,0)
 I 'APPDATA D  G PAYERX
"RTN","IBCNSC01",156,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",157,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",158,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",159,0)
 . D SET^IBCNSP(IBLINE,16,"Payer Application data is not defined!")
"RTN","IBCNSC01",160,0)
 . Q
"RTN","IBCNSC01",161,0)
 ;
"RTN","IBCNSC01",162,0)
 ; Display all the applications
"RTN","IBCNSC01",163,0)
 S APPNAME=""
"RTN","IBCNSC01",164,0)
 F  S APPNAME=$O(APPDATA(APPNAME)) Q:APPNAME=""  D
"RTN","IBCNSC01",165,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",166,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",167,0)
 . ;
"RTN","IBCNSC01",168,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",169,0)
 . D SET^IBCNSP(IBLINE,2,"Payer Application: "_APPNAME)
"RTN","IBCNSC01",170,0)
 . D SET^IBCNSP(IBLINE,51,"FSC Auto-Update: "_$P(APPDATA(APPNAME),U,3))
"RTN","IBCNSC01",171,0)
 . ;
"RTN","IBCNSC01",172,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",173,0)
 . D SET^IBCNSP(IBLINE,4,"National Active: "_$P(APPDATA(APPNAME),U,1))
"RTN","IBCNSC01",174,0)
 . D SET^IBCNSP(IBLINE,55,"Deactivated: "_$P(APPDATA(APPNAME),U,7))
"RTN","IBCNSC01",175,0)
 . ;
"RTN","IBCNSC01",176,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",177,0)
 . D SET^IBCNSP(IBLINE,7,"Local Active: "_$P(APPDATA(APPNAME),U,2))
"RTN","IBCNSC01",178,0)
 . ;
"RTN","IBCNSC01",179,0)
 . ; If no deactivated date, then exit
"RTN","IBCNSC01",180,0)
 . I $P(APPDATA(APPNAME),U,8)="" Q
"RTN","IBCNSC01",181,0)
 . ;
"RTN","IBCNSC01",182,0)
 . D SET^IBCNSP(IBLINE,50,"Date Deactivated: "_$P(APPDATA(APPNAME),U,8))
"RTN","IBCNSC01",183,0)
 . ;
"RTN","IBCNSC01",184,0)
 . Q
"RTN","IBCNSC01",185,0)
PAYERX ;
"RTN","IBCNSC01",186,0)
 ; Two trailing blank lines after payer information display
"RTN","IBCNSC01",187,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",188,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",189,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",190,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",191,0)
 Q
"RTN","IBCNSC01",192,0)
 ;
"RTN","IBCNSC01",193,0)
 ;
"RTN","IBCNSC01",194,0)
REMARKS ;
"RTN","IBCNSC01",195,0)
 ;
"RTN","IBCNSC01",196,0)
 N OFFSET,START,IBLCNT,IBI
"RTN","IBCNSC01",197,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",198,0)
 S IB1ST("REM")=START
"RTN","IBCNSC01",199,0)
 ;
"RTN","IBCNSC01",200,0)
 D SET^IBCNSP(START,OFFSET," Remarks ",IORVON,IORVOFF)
"RTN","IBCNSC01",201,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^DIC(36,+IBCNS,11,IBI)) Q:IBI<1  D
"RTN","IBCNSC01",202,0)
 . S IBLCNT=IBLCNT+1
"RTN","IBCNSC01",203,0)
 . D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^DIC(36,+IBCNS,11,IBI,0)),1,80))
"RTN","IBCNSC01",204,0)
 . Q
"RTN","IBCNSC01",205,0)
 D SET^IBCNSP(START+IBLCNT+1,OFFSET," ")   ; blank line after remarks
"RTN","IBCNSC01",206,0)
 Q
"RTN","IBCNSC01",207,0)
 ;
"RTN","IBCNSC01",208,0)
SYN ;
"RTN","IBCNSC01",209,0)
 N OFFSET,START,SYN,SYNOI
"RTN","IBCNSC01",210,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",211,0)
 S IB1ST("SYN")=START
"RTN","IBCNSC01",212,0)
 D SET^IBCNSP(START,OFFSET," Synonyms ",IORVON,IORVOFF)
"RTN","IBCNSC01",213,0)
 S SYN="" F SYNOI=1:1:8 S SYN=$O(^DIC(36,+IBCNS,10,"B",SYN)) Q:SYN=""  D SET^IBCNSP(START+SYNOI,OFFSET,$S(SYNOI>7:"  ...edit to see more...",1:"  "_SYN))
"RTN","IBCNSC01",214,0)
 Q
"RTN","IBCNSC01",215,0)
 ;
"RTN","IBCNSC02")
0^33^B56719125^B55602026
"RTN","IBCNSC02",1,0)
IBCNSC02 ;ALB/ESG - Insurance Company parent/child management ;01-NOV-2005
"RTN","IBCNSC02",2,0)
 ;;2.0;INTEGRATED BILLING;**320,371,547**;21-MAR-94;Build 119
"RTN","IBCNSC02",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSC02",4,0)
 ;
"RTN","IBCNSC02",5,0)
 Q
"RTN","IBCNSC02",6,0)
 ;
"RTN","IBCNSC02",7,0)
DISP ; entry point for display of parent/child companies
"RTN","IBCNSC02",8,0)
 NEW PCFLG,PARENT,PCDESC,TITLE,START,IBLINE,OFFSET,INSDATA,CNT,TXT
"RTN","IBCNSC02",9,0)
 S PCFLG=$P($G(^DIC(36,+IBCNS,3)),U,13),PARENT=""
"RTN","IBCNSC02",10,0)
 I PCFLG="C" S PARENT=$P($G(^DIC(36,+IBCNS,3)),U,14),PCDESC="Child"
"RTN","IBCNSC02",11,0)
 I PCFLG="P" S PCDESC="Parent"
"RTN","IBCNSC02",12,0)
 S TITLE=" Associated Insurance Companies "
"RTN","IBCNSC02",13,0)
 ;
"RTN","IBCNSC02",14,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC02",15,0)
 ;S (START,IBLINE)=62
"RTN","IBCNSC02",16,0)
 S (START,IBLINE)=63+(2*IBACMAX)
"RTN","IBCNSC02",17,0)
 S OFFSET=(40-($L(TITLE)/2))\1+1
"RTN","IBCNSC02",18,0)
 D SET^IBCNSP(START,OFFSET,TITLE,IORVON,IORVOFF)
"RTN","IBCNSC02",19,0)
 ;
"RTN","IBCNSC02",20,0)
 ; no link - display this and get out
"RTN","IBCNSC02",21,0)
 I PCFLG="" D  G DISPX
"RTN","IBCNSC02",22,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",23,0)
 . D SET^IBCNSP(IBLINE,3,"This insurance company is not defined as either a Parent or a Child.")
"RTN","IBCNSC02",24,0)
 . Q
"RTN","IBCNSC02",25,0)
 ;
"RTN","IBCNSC02",26,0)
 ; display for either parent or child
"RTN","IBCNSC02",27,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",28,0)
 D SET^IBCNSP(IBLINE,3,"This insurance company is defined as a "_PCDESC_" Insurance Company.")
"RTN","IBCNSC02",29,0)
 ;
"RTN","IBCNSC02",30,0)
 ; child display
"RTN","IBCNSC02",31,0)
 I PCFLG="C" D  G DISPX
"RTN","IBCNSC02",32,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",33,0)
 . D SET^IBCNSP(IBLINE,3,"It is associated with the following Parent Insurance Company:")
"RTN","IBCNSC02",34,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",35,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC02",36,0)
 . S INSDATA=""
"RTN","IBCNSC02",37,0)
 . I 'PARENT S INSDATA="*** Parent Insurance Company not defined ***"
"RTN","IBCNSC02",38,0)
 . I PARENT D
"RTN","IBCNSC02",39,0)
 .. N AD S AD=$$INSADD(PARENT)   ; get parent ins co data
"RTN","IBCNSC02",40,0)
 .. S INSDATA=$P(AD,U,1)_"  "_$P(AD,U,2)_"  "_$P(AD,U,6)
"RTN","IBCNSC02",41,0)
 .. Q
"RTN","IBCNSC02",42,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",43,0)
 . D SET^IBCNSP(IBLINE,8,INSDATA)
"RTN","IBCNSC02",44,0)
 . Q
"RTN","IBCNSC02",45,0)
 ;
"RTN","IBCNSC02",46,0)
 ; parent display
"RTN","IBCNSC02",47,0)
 S CNT=$$PCNT(IBCNS)    ; count # of children
"RTN","IBCNSC02",48,0)
 S TXT="There are "_CNT_" Child Insurance Companies"
"RTN","IBCNSC02",49,0)
 I CNT=1 S TXT="There is 1 Child Insurance Company"
"RTN","IBCNSC02",50,0)
 S TXT=TXT_" associated with it."
"RTN","IBCNSC02",51,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",52,0)
 D SET^IBCNSP(IBLINE,3,TXT)
"RTN","IBCNSC02",53,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",54,0)
 D SET^IBCNSP(IBLINE,3,"Select the ""AC  Associate Companies"" action to enter/edit the children.")
"RTN","IBCNSC02",55,0)
 ;
"RTN","IBCNSC02",56,0)
DISPX ; end with 2 blank lines
"RTN","IBCNSC02",57,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",58,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC02",59,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",60,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC02",61,0)
 Q
"RTN","IBCNSC02",62,0)
 ;
"RTN","IBCNSC02",63,0)
PARENT(IBCNS) ; Insurance company parent/child management
"RTN","IBCNSC02",64,0)
 ; Calls ListMan screen for parent insurance companies
"RTN","IBCNSC02",65,0)
 NEW PCFLG
"RTN","IBCNSC02",66,0)
 I '$G(IBCNS) G PARENTX
"RTN","IBCNSC02",67,0)
 S PCFLG=$P($G(^DIC(36,IBCNS,3)),U,13)
"RTN","IBCNSC02",68,0)
 ;
"RTN","IBCNSC02",69,0)
 ; special check to remove 3.13 field if 3.14 field is nil
"RTN","IBCNSC02",70,0)
 I PCFLG="C",'$P($G(^DIC(36,IBCNS,3)),U,14) D
"RTN","IBCNSC02",71,0)
 . N DIE,DA,DR S DIE=36,DA=IBCNS,DR="3.13////@" D ^DIE
"RTN","IBCNSC02",72,0)
 . Q
"RTN","IBCNSC02",73,0)
 ;
"RTN","IBCNSC02",74,0)
 ; get out if not a parent insurance company
"RTN","IBCNSC02",75,0)
 I PCFLG'="P" G PARENTX
"RTN","IBCNSC02",76,0)
 ;
"RTN","IBCNSC02",77,0)
 ; call ListMan for parent/children management
"RTN","IBCNSC02",78,0)
 D EN^VALM("IBCNS ASSOCIATIONS LIST")
"RTN","IBCNSC02",79,0)
 KILL ^TMP($J,"IBCNSL")
"RTN","IBCNSC02",80,0)
PARENTX ;
"RTN","IBCNSC02",81,0)
 Q
"RTN","IBCNSC02",82,0)
 ;
"RTN","IBCNSC02",83,0)
HDR ; List header info
"RTN","IBCNSC02",84,0)
 S VALMHDR(1)="Parent Insurance Company:"
"RTN","IBCNSC02",85,0)
 S VALMHDR(2)="     "_$$INSCO(IBCNS)
"RTN","IBCNSC02",86,0)
 S VALMHDR(3)=""
"RTN","IBCNSC02",87,0)
HDRX ;
"RTN","IBCNSC02",88,0)
 Q
"RTN","IBCNSC02",89,0)
 ;
"RTN","IBCNSC02",90,0)
BLD ; Build list contents
"RTN","IBCNSC02",91,0)
 NEW C,INSDATA,INSNAME,STCITY,ENTRY,NM,ST,IEN,X
"RTN","IBCNSC02",92,0)
 KILL ^TMP($J,"IBCNSL")
"RTN","IBCNSC02",93,0)
 S C=0
"RTN","IBCNSC02",94,0)
 F  S C=$O(^DIC(36,"APC",IBCNS,C)) Q:'C  D
"RTN","IBCNSC02",95,0)
 . S INSDATA=$$INSADD(C)
"RTN","IBCNSC02",96,0)
 . S INSNAME=$P(INSDATA,U,1)
"RTN","IBCNSC02",97,0)
 . I INSNAME="" S INSNAME="~UNKNOWN"
"RTN","IBCNSC02",98,0)
 . S STCITY=$P(INSDATA,U,7)
"RTN","IBCNSC02",99,0)
 . I STCITY="" S STCITY="~UNKNOWN"
"RTN","IBCNSC02",100,0)
 . S ^TMP($J,"IBCNSL",1,INSNAME,STCITY,C)=""
"RTN","IBCNSC02",101,0)
 . Q
"RTN","IBCNSC02",102,0)
 ;
"RTN","IBCNSC02",103,0)
 I '$D(^TMP($J,"IBCNSL",1)) D  G BLDX
"RTN","IBCNSC02",104,0)
 . ; no children insurance companies found
"RTN","IBCNSC02",105,0)
 . S ^TMP($J,"IBCNSL",2,1,0)=""
"RTN","IBCNSC02",106,0)
 . S ^TMP($J,"IBCNSL",2,2,0)="     No Children Insurance Companies Found"
"RTN","IBCNSC02",107,0)
 . S VALMCNT=2
"RTN","IBCNSC02",108,0)
 . Q
"RTN","IBCNSC02",109,0)
 ;
"RTN","IBCNSC02",110,0)
 S VALMCNT=0,ENTRY=0
"RTN","IBCNSC02",111,0)
 S NM=""
"RTN","IBCNSC02",112,0)
 F  S NM=$O(^TMP($J,"IBCNSL",1,NM)) Q:NM=""  D
"RTN","IBCNSC02",113,0)
 . S ST=""
"RTN","IBCNSC02",114,0)
 . F  S ST=$O(^TMP($J,"IBCNSL",1,NM,ST)) Q:ST=""  D
"RTN","IBCNSC02",115,0)
 .. S IEN=0
"RTN","IBCNSC02",116,0)
 .. F  S IEN=$O(^TMP($J,"IBCNSL",1,NM,ST,IEN)) Q:'IEN  D
"RTN","IBCNSC02",117,0)
 ... S VALMCNT=VALMCNT+1,ENTRY=ENTRY+1
"RTN","IBCNSC02",118,0)
 ... S X=$$FO^IBCNEUT1($J(ENTRY,3),5)_$$INSCO(IEN)
"RTN","IBCNSC02",119,0)
 ... S ^TMP($J,"IBCNSL",2,VALMCNT,0)=X
"RTN","IBCNSC02",120,0)
 ... S ^TMP($J,"IBCNSL",2,"IDX",VALMCNT,ENTRY)=""
"RTN","IBCNSC02",121,0)
 ... S ^TMP($J,"IBCNSL",3,ENTRY)=IEN_U_VALMCNT
"RTN","IBCNSC02",122,0)
 ... Q
"RTN","IBCNSC02",123,0)
 .. Q
"RTN","IBCNSC02",124,0)
 . Q
"RTN","IBCNSC02",125,0)
BLDX ;
"RTN","IBCNSC02",126,0)
 Q
"RTN","IBCNSC02",127,0)
 ;
"RTN","IBCNSC02",128,0)
LINK ; action protocol IBCNSL LINK used to associate children insurance
"RTN","IBCNSC02",129,0)
 ; companies to the current parent ins co for the list
"RTN","IBCNSC02",130,0)
 NEW DIC,X,Y,DIE,DR,DA,NEWINS,IBSTOP,PAR,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","IBCNSC02",131,0)
 D FULL^VALM1
"RTN","IBCNSC02",132,0)
 I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G LINKX
"RTN","IBCNSC02",133,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC02",134,0)
 . D PAUSE^VALM1
"RTN","IBCNSC02",135,0)
 . Q
"RTN","IBCNSC02",136,0)
 ;
"RTN","IBCNSC02",137,0)
 ; lookup ins company
"RTN","IBCNSC02",138,0)
 W !
"RTN","IBCNSC02",139,0)
 S DIC=36,DIC(0)="AEMQ",DIC("A")="Select Insurance Company: "
"RTN","IBCNSC02",140,0)
 S DIC("W")="D INSLIST^IBCNSC02(Y)"
"RTN","IBCNSC02",141,0)
 ; screen - ins co Y is not a parent and also it is not already in the list of children
"RTN","IBCNSC02",142,0)
 S DIC("S")="I $P($G(^DIC(36,Y,3)),U,13)'=""P""&'$D(^DIC(36,""APC"",IBCNS,Y))"
"RTN","IBCNSC02",143,0)
 D ^DIC K DIC
"RTN","IBCNSC02",144,0)
 I +Y'>0 G LINKX
"RTN","IBCNSC02",145,0)
 S NEWINS=+Y
"RTN","IBCNSC02",146,0)
 ;
"RTN","IBCNSC02",147,0)
 ; check to see if this selected insurance company is already a child
"RTN","IBCNSC02",148,0)
 ; for some other parent
"RTN","IBCNSC02",149,0)
 S PAR=+$P($G(^DIC(36,NEWINS,3)),U,14),IBSTOP=0
"RTN","IBCNSC02",150,0)
 I PAR,PAR'=IBCNS D
"RTN","IBCNSC02",151,0)
 . W !
"RTN","IBCNSC02",152,0)
 . S DIR(0)="YO",DIR("B")="No"
"RTN","IBCNSC02",153,0)
 . S DIR("A",1)="Please Note:  The insurance company you selected is currently identified"
"RTN","IBCNSC02",154,0)
 . S DIR("A",2)="as a Child insurance company associated with the following Parent:"
"RTN","IBCNSC02",155,0)
 . S DIR("A",3)=""
"RTN","IBCNSC02",156,0)
 . S DIR("A",4)="     "_$$INSCO(PAR)
"RTN","IBCNSC02",157,0)
 . S DIR("A",5)=""
"RTN","IBCNSC02",158,0)
 . S DIR("A")="OK to proceed and make this switch"
"RTN","IBCNSC02",159,0)
 . D ^DIR K DIR
"RTN","IBCNSC02",160,0)
 . I Y'=1 S IBSTOP=1 Q
"RTN","IBCNSC02",161,0)
 . Q
"RTN","IBCNSC02",162,0)
 I IBSTOP G LINKX
"RTN","IBCNSC02",163,0)
 ;
"RTN","IBCNSC02",164,0)
 ; lock the potential new child ins company
"RTN","IBCNSC02",165,0)
 L +^DIC(36,NEWINS):0 I '$T D LOCKED^IBTRCD1 G LINKX
"RTN","IBCNSC02",166,0)
 ;
"RTN","IBCNSC02",167,0)
 ; update selected child
"RTN","IBCNSC02",168,0)
 S DIE=36,DA=NEWINS,DR="3.13////C;3.14////"_IBCNS D ^DIE
"RTN","IBCNSC02",169,0)
 ;
"RTN","IBCNSC02",170,0)
 ; Copy the IDs from the parent
"RTN","IBCNSC02",171,0)
 D COPY^IBCEPCID(NEWINS)
"RTN","IBCNSC02",172,0)
 ;
"RTN","IBCNSC02",173,0)
 ; unlock
"RTN","IBCNSC02",174,0)
 L -^DIC(36,NEWINS)
"RTN","IBCNSC02",175,0)
 ;
"RTN","IBCNSC02",176,0)
 D BLD   ; rebuild list of children
"RTN","IBCNSC02",177,0)
LINKX ;
"RTN","IBCNSC02",178,0)
 S VALMBCK="R"
"RTN","IBCNSC02",179,0)
 Q
"RTN","IBCNSC02",180,0)
 ;
"RTN","IBCNSC02",181,0)
UNLINK ; action protocol IBCNSL UNLINK used to disassociate selected children
"RTN","IBCNSC02",182,0)
 ; insurance companies from the list.
"RTN","IBCNSC02",183,0)
 NEW DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT,IBLST,IBSUB,IBPCE,IBSEL,DA,DIE,DR
"RTN","IBCNSC02",184,0)
 D FULL^VALM1
"RTN","IBCNSC02",185,0)
 I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G UNLINKX
"RTN","IBCNSC02",186,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC02",187,0)
 . D PAUSE^VALM1
"RTN","IBCNSC02",188,0)
 . Q
"RTN","IBCNSC02",189,0)
 ;
"RTN","IBCNSC02",190,0)
 I '$D(^TMP($J,"IBCNSL",3)) D  G UNLINKX
"RTN","IBCNSC02",191,0)
 . W !!?5,"There are no insurance companies to select." D PAUSE^VALM1
"RTN","IBCNSC02",192,0)
 . Q
"RTN","IBCNSC02",193,0)
 S DIR(0)="LO^1:"_+$O(^TMP($J,"IBCNSL",3,""),-1)
"RTN","IBCNSC02",194,0)
 S DIR("A")="Select Insurance Company(s)"
"RTN","IBCNSC02",195,0)
 W ! D ^DIR K DIR
"RTN","IBCNSC02",196,0)
 I $D(DIRUT) G UNLINKX
"RTN","IBCNSC02",197,0)
 M IBLST=Y
"RTN","IBCNSC02",198,0)
 ;
"RTN","IBCNSC02",199,0)
 W !
"RTN","IBCNSC02",200,0)
 S DIR(0)="YO"
"RTN","IBCNSC02",201,0)
 S DIR("A")="OK to proceed",DIR("B")="No"
"RTN","IBCNSC02",202,0)
 D ^DIR K DIR
"RTN","IBCNSC02",203,0)
 I Y'=1 G UNLINKX
"RTN","IBCNSC02",204,0)
 ;
"RTN","IBCNSC02",205,0)
 F IBSUB=0:1 Q:'$D(IBLST(IBSUB))  F IBPCE=1:1 S IBSEL=$P(IBLST(IBSUB),",",IBPCE) Q:'IBSEL  D
"RTN","IBCNSC02",206,0)
 . S DA=+$G(^TMP($J,"IBCNSL",3,IBSEL)) I 'DA Q
"RTN","IBCNSC02",207,0)
 . S DIE=36,DR="3.13////@;3.14////@" D ^DIE
"RTN","IBCNSC02",208,0)
 . Q
"RTN","IBCNSC02",209,0)
 ;
"RTN","IBCNSC02",210,0)
 D BLD   ; rebuild list of children
"RTN","IBCNSC02",211,0)
UNLINKX ;
"RTN","IBCNSC02",212,0)
 S VALMBCK="R"
"RTN","IBCNSC02",213,0)
 Q
"RTN","IBCNSC02",214,0)
 ;
"RTN","IBCNSC02",215,0)
PCNT(Z) ; count number of children for parent ins co Z
"RTN","IBCNSC02",216,0)
 NEW C,CNT
"RTN","IBCNSC02",217,0)
 S C=0,Z=+$G(Z)
"RTN","IBCNSC02",218,0)
 F CNT=0:1 S C=$O(^DIC(36,"APC",Z,C)) Q:'C
"RTN","IBCNSC02",219,0)
 Q CNT
"RTN","IBCNSC02",220,0)
 ;
"RTN","IBCNSC02",221,0)
INSADD(Z) ; function to return ins co address components
"RTN","IBCNSC02",222,0)
 NEW INSDATA,AD,NM,L1,CITY,ST,ZIP,CITYST,STCITY
"RTN","IBCNSC02",223,0)
 S INSDATA=""
"RTN","IBCNSC02",224,0)
 S AD=$G(^DIC(36,+$G(Z),.11))
"RTN","IBCNSC02",225,0)
 S NM=$P($G(^DIC(36,Z,0)),U,1)
"RTN","IBCNSC02",226,0)
 S L1=$P(AD,U,1),CITY=$P(AD,U,4),ST=$P(AD,U,5),ZIP=$P(AD,U,6)
"RTN","IBCNSC02",227,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCNSC02",228,0)
 S CITYST=$E(CITY,1,15)_" "_ST
"RTN","IBCNSC02",229,0)
 I CITY'="",ST'="" S CITYST=$E(CITY,1,15)_","_ST
"RTN","IBCNSC02",230,0)
 ;
"RTN","IBCNSC02",231,0)
 S $P(STCITY,"|",1)=ST
"RTN","IBCNSC02",232,0)
 I ST="" S $P(STCITY,"|",1)="~~"
"RTN","IBCNSC02",233,0)
 S $P(STCITY,"|",2)=CITY
"RTN","IBCNSC02",234,0)
 I CITY="" S $P(STCITY,"|",2)="~~~~"
"RTN","IBCNSC02",235,0)
 ;
"RTN","IBCNSC02",236,0)
 S INSDATA=NM_U_L1_U_CITY_U_ST_U_ZIP_U_CITYST_U_STCITY
"RTN","IBCNSC02",237,0)
 ;         1    2    3      4    5     6        7
"RTN","IBCNSC02",238,0)
INSADDX ;
"RTN","IBCNSC02",239,0)
 Q INSDATA
"RTN","IBCNSC02",240,0)
 ;
"RTN","IBCNSC02",241,0)
INSCO(Z) ; return display data for ins co Z
"RTN","IBCNSC02",242,0)
 NEW X,Y
"RTN","IBCNSC02",243,0)
 S Y=$$INSADD(Z)
"RTN","IBCNSC02",244,0)
 S X=$$FO^IBCNEUT1($P(Y,U,1),27)
"RTN","IBCNSC02",245,0)
 S X=X_$$FO^IBCNEUT1($P(Y,U,2),26)
"RTN","IBCNSC02",246,0)
 S X=X_$$FO^IBCNEUT1($P(Y,U,6),18)
"RTN","IBCNSC02",247,0)
INSCOX ;
"RTN","IBCNSC02",248,0)
 Q X
"RTN","IBCNSC02",249,0)
 ;
"RTN","IBCNSC02",250,0)
INSLIST(INS) ; insurance company lister for ^DIC call
"RTN","IBCNSC02",251,0)
 NEW Z
"RTN","IBCNSC02",252,0)
 S Z=$$INSADD(INS)
"RTN","IBCNSC02",253,0)
 W ?27,$E($P(Z,U,2),1,20)   ; address line 1
"RTN","IBCNSC02",254,0)
 W ?47,"  ",$P(Z,U,6)       ; city, state
"RTN","IBCNSC02",255,0)
INSLISTX ;
"RTN","IBCNSC02",256,0)
 Q
"RTN","IBCNSC02",257,0)
 ;
"RTN","IBCNSC1")
0^34^B84078544^B80307925
"RTN","IBCNSC1",1,0)
IBCNSC1 ;ALB/NLR - IBCNS INSURANCE COMPANY ;23-MAR-93
"RTN","IBCNSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**62,137,232,291,320,348,349,371,400,519,516,547**;21-MAR-94;Build 119
"RTN","IBCNSC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSC1",4,0)
 ;
"RTN","IBCNSC1",5,0)
% G EN^IBCNSC
"RTN","IBCNSC1",6,0)
 ;
"RTN","IBCNSC1",7,0)
AI ; -- (In)Activate Company
"RTN","IBCNSC1",8,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",9,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
"RTN","IBCNSC1",10,0)
 D ^IBCNSC2
"RTN","IBCNSC1",11,0)
 G EXIT
"RTN","IBCNSC1",12,0)
CC ; -- Change Insurance Company
"RTN","IBCNSC1",13,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",14,0)
 S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
"RTN","IBCNSC1",15,0)
 I '$D(IBCNS) S IBCNS=IBCNS1
"RTN","IBCNSC1",16,0)
 K IBCNS1,VALMQUIT
"RTN","IBCNSC1",17,0)
 G EXIT
"RTN","IBCNSC1",18,0)
EA ; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
"RTN","IBCNSC1",19,0)
 D FULL^VALM1
"RTN","IBCNSC1",20,0)
 ;
"RTN","IBCNSC1",21,0)
 ; IB*2*320 - check key for associate company action
"RTN","IBCNSC1",22,0)
 I $G(IBY)=",13,",'$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G EXIT
"RTN","IBCNSC1",23,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC1",24,0)
 . D PAUSE^VALM1
"RTN","IBCNSC1",25,0)
 . Q
"RTN","IBCNSC1",26,0)
 ;
"RTN","IBCNSC1",27,0)
 W !!
"RTN","IBCNSC1",28,0)
 D MAIN
"RTN","IBCNSC1",29,0)
 ;
"RTN","IBCNSC1",30,0)
 ; -- was company deleted
"RTN","IBCNSC1",31,0)
 I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
"RTN","IBCNSC1",32,0)
 ;
"RTN","IBCNSC1",33,0)
EXIT ;
"RTN","IBCNSC1",34,0)
 D HDR^IBCNSC,BLD^IBCNSC
"RTN","IBCNSC1",35,0)
 S VALMBCK="R"
"RTN","IBCNSC1",36,0)
 Q
"RTN","IBCNSC1",37,0)
MAIN ; -- Call edit template
"RTN","IBCNSC1",38,0)
 N IBEDIKEY,Z
"RTN","IBCNSC1",39,0)
 L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
"RTN","IBCNSC1",40,0)
 I $G(IBY)=",12," D FACID
"RTN","IBCNSC1",41,0)
 F Z=1,2,4,9,13,14 S IBEDIKEY(Z)=$P($G(^DIC(36,+IBCNS,3)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",42,0)
 F Z=1:1:8 S IBEDIKEY(Z,6)=$P($G(^DIC(36,+IBCNS,6)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",43,0)
 I $G(IBY)'=",12," N DIE,DA,DR S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE S:$D(Y) IB("^")=1 D:$TR($P($G(^DIC(36,IBCNS,6)),U,1,8),U)]"" CUIDS(IBCNS)
"RTN","IBCNSC1",44,0)
 I $G(IBY)=",12," D EDITID^IBCEP(+IBCNS)
"RTN","IBCNSC1",45,0)
 I $F(",6,1,",$G(IBY)) D CLEANIDS^IBCNSC(+IBCNS)   ;clean up any errant nodes on alternate payert IDS
"RTN","IBCNSC1",46,0)
 I $F(",6,13,",$G(IBY)) D PARENT^IBCNSC02(+IBCNS)   ; parent/child management
"RTN","IBCNSC1",47,0)
 L -^DIC(36,+IBCNS)
"RTN","IBCNSC1",48,0)
 ; IB*2.0*519:  If field 3.02 or 3.04 has changed, trigger HL7 to update the NIF
"RTN","IBCNSC1",49,0)
 I (IBEDIKEY(2)'=$P($G(^DIC(36,+IBCNS,3)),U,2))!(IBEDIKEY(4)'=$P($G(^DIC(36,+IBCNS,3)),U,4)) D EXR^IBCNHUT1(IBCNS),SEND^IBCNHHLO(IBCNS)
"RTN","IBCNSC1",50,0)
MAINQ Q
"RTN","IBCNSC1",51,0)
 ;
"RTN","IBCNSC1",52,0)
FACID ; -- Edit facility ids
"RTN","IBCNSC1",53,0)
 D FACID^IBCEP2B(+IBCNS,"E")
"RTN","IBCNSC1",54,0)
 Q
"RTN","IBCNSC1",55,0)
 ;
"RTN","IBCNSC1",56,0)
SORRY ; -- can't inactivate, don't have key
"RTN","IBCNSC1",57,0)
 W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
"RTN","IBCNSC1",58,0)
 Q
"RTN","IBCNSC1",59,0)
PRESCR ;
"RTN","IBCNSC1",60,0)
 N OFFSET,START,IBCNS18,IBADD
"RTN","IBCNSC1",61,0)
 ;
"RTN","IBCNSC1",62,0)
 ;WCJ;IB*2.0*547;Call New API
"RTN","IBCNSC1",63,0)
 ;S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",64,0)
 S IBCNS18=$$ADD2^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",65,0)
 ;
"RTN","IBCNSC1",66,0)
 ;WCJ;IB*2.0*547
"RTN","IBCNSC1",67,0)
 ;S START=41,OFFSET=2
"RTN","IBCNSC1",68,0)
 S START=42+(2*$G(IBACMAX)),OFFSET=2
"RTN","IBCNSC1",69,0)
 D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC1",70,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
"RTN","IBCNSC1",71,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
"RTN","IBCNSC1",72,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
"RTN","IBCNSC1",73,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS18,"^",11))
"RTN","IBCNSC1",74,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC1",75,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
"RTN","IBCNSC1",76,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
"RTN","IBCNSC1",77,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
"RTN","IBCNSC1",78,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
"RTN","IBCNSC1",79,0)
 Q
"RTN","IBCNSC1",80,0)
 ;
"RTN","IBCNSC1",81,0)
PROVID N OFFSET,START,IBCNS4,IBCNS3,IBDISP,Z,LINE
"RTN","IBCNSC1",82,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC1",83,0)
 S (IB1ST("PROVID"),LINE)=START
"RTN","IBCNSC1",84,0)
 S OFFSET=2,IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3))
"RTN","IBCNSC1",85,0)
 ;       
"RTN","IBCNSC1",86,0)
 D SET^IBCNSP(LINE,OFFSET+25,"Provider IDs",IORVON,IORVOFF)
"RTN","IBCNSC1",87,0)
 N OFFSET
"RTN","IBCNSC1",88,0)
 S LINE=LINE+1,OFFSET=1
"RTN","IBCNSC1",89,0)
 D SET^IBCNSP(LINE,OFFSET,"Billing Provider Secondary ID")
"RTN","IBCNSC1",90,0)
 ;
"RTN","IBCNSC1",91,0)
 N Z,Z0,Z1,IBS,I,DIV,FT,CU,CUF,DIVISION,FORMTYPE,PIDT
"RTN","IBCNSC1",92,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",93,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",94,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",95,0)
 . Q:'($P(Z0,U,8)="E")
"RTN","IBCNSC1",96,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z0,U,4))=$P(Z0,U,6)_U_$P(Z0,U,7)
"RTN","IBCNSC1",97,0)
 ;
"RTN","IBCNSC1",98,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",99,0)
 . S DIVISION=$$DIV^IBCEP7(DIV)
"RTN","IBCNSC1",100,0)
 . S CU="",CUF=0 F  S CU=$O(IBS(DIV,CU)) Q:CU=""  D
"RTN","IBCNSC1",101,0)
 .. S FT="" F  S FT=$O(IBS(DIV,CU,FT)) Q:FT=""  D
"RTN","IBCNSC1",102,0)
 ... S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",103,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",104,0)
 ... I 'CUF,+CU S CUF=1 S TEXT=$P(DIVISION,"/")_" Care Units :",OFFSET=5 D SET^IBCNSP(LINE,OFFSET,TEXT) S LINE=LINE+1
"RTN","IBCNSC1",105,0)
 ... I CU=0 S TEXT=DIVISION_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=2
"RTN","IBCNSC1",106,0)
 ... I +CU S TEXT=$$EXPAND^IBTRE(355.92,.03,CU)_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=5
"RTN","IBCNSC1",107,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",108,0)
 ;
"RTN","IBCNSC1",109,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",110,0)
 ;
"RTN","IBCNSC1",111,0)
 K IBS
"RTN","IBCNSC1",112,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",113,0)
 D SET^IBCNSP(LINE,OFFSET,"Additional Billing Provider Secondary IDs")
"RTN","IBCNSC1",114,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",115,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",116,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",117,0)
 . Q:'($P(Z0,U,8)="A")
"RTN","IBCNSC1",118,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",119,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",120,0)
 ;
"RTN","IBCNSC1",121,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",122,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",123,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",124,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",125,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",126,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",127,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",128,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",129,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",130,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",131,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",132,0)
 ;
"RTN","IBCNSC1",133,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",134,0)
 ;
"RTN","IBCNSC1",135,0)
 K IBS
"RTN","IBCNSC1",136,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",137,0)
 D SET^IBCNSP(LINE,OFFSET,"VA-Laboratory or Facility Secondary IDs")
"RTN","IBCNSC1",138,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",139,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",140,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",141,0)
 . Q:'($P(Z0,U,8)="LF")
"RTN","IBCNSC1",142,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",143,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",144,0)
 ;
"RTN","IBCNSC1",145,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",146,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",147,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",148,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",149,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",150,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",151,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",152,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",153,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",154,0)
 ... ;S TEXT=$$EXPAND^IBTRE(355.92,.06,PIDT)_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",155,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",156,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",157,0)
 ;
"RTN","IBCNSC1",158,0)
 ;
"RTN","IBCNSC1",159,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",160,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",161,0)
 S OFFSET=2
"RTN","IBCNSC1",162,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,OFFSET+25,"ID Parameters",IORVON,IORVOFF)
"RTN","IBCNSC1",163,0)
 ;
"RTN","IBCNSC1",164,0)
 S IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3)),OFFSET=1
"RTN","IBCNSC1",165,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.01,+$P(IBCNS4,U))
"RTN","IBCNSC1",166,0)
 S LINE=LINE+1
"RTN","IBCNSC1",167,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",168,0)
 ;
"RTN","IBCNSC1",169,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (UB-04): "_$$EXPAND^IBTRE(36,4.02,+$P(IBCNS4,U,2))
"RTN","IBCNSC1",170,0)
 S LINE=LINE+1
"RTN","IBCNSC1",171,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",172,0)
 ;
"RTN","IBCNSC1",173,0)
 S TEXT="Attending/Rendering Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.03,+$P(IBCNS4,U,3))
"RTN","IBCNSC1",174,0)
 S LINE=LINE+1
"RTN","IBCNSC1",175,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",176,0)
 ;
"RTN","IBCNSC1",177,0)
 S TEXT="Referring Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.04,+$P(IBCNS4,U,4))
"RTN","IBCNSC1",178,0)
 S LINE=LINE+1
"RTN","IBCNSC1",179,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",180,0)
 ;
"RTN","IBCNSC1",181,0)
 S TEXT="Referring Provider Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.05,+$P(IBCNS4,U,5))
"RTN","IBCNSC1",182,0)
 S LINE=LINE+1
"RTN","IBCNSC1",183,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",184,0)
 ;
"RTN","IBCNSC1",185,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (1500): "_$$EXPAND^IBTRE(36,4.06,+$P(IBCNS4,U,6))
"RTN","IBCNSC1",186,0)
 S LINE=LINE+1
"RTN","IBCNSC1",187,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",188,0)
 ;
"RTN","IBCNSC1",189,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (UB-04): "_$$EXPAND^IBTRE(36,4.08,+$P(IBCNS4,U,8))
"RTN","IBCNSC1",190,0)
 S LINE=LINE+1
"RTN","IBCNSC1",191,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",192,0)
 ;
"RTN","IBCNSC1",193,0)
 ; MRD;IB*2.0*516 - Marked fields 4.07, 4.11, 4.12 and 4.13 for
"RTN","IBCNSC1",194,0)
 ; deletion and removed all references to them.
"RTN","IBCNSC1",195,0)
 ;S TEXT="Always use main VAMC as Billing Provider (1500)?: "_$$EXPAND^IBTRE(36,4.11,+$P(IBCNS4,U,11))
"RTN","IBCNSC1",196,0)
 ;S LINE=LINE+1
"RTN","IBCNSC1",197,0)
 ;D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",198,0)
 ;
"RTN","IBCNSC1",199,0)
 ;S TEXT="Always use main VAMC as Billing Provider (UB-04)?: "_$$EXPAND^IBTRE(36,4.12,+$P(IBCNS4,U,12))
"RTN","IBCNSC1",200,0)
 ;S LINE=LINE+1
"RTN","IBCNSC1",201,0)
 ;D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",202,0)
 ;
"RTN","IBCNSC1",203,0)
 ;I $P(IBCNS4,U,11)!($P(IBCNS4,U,12)) D
"RTN","IBCNSC1",204,0)
 ;.S TEXT="Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7))
"RTN","IBCNSC1",205,0)
 ;.S LINE=LINE+1
"RTN","IBCNSC1",206,0)
 ;.D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",207,0)
 ;.;
"RTN","IBCNSC1",208,0)
 ;.S TEXT="Use the Billing Provider (VAMC) Name and Street Address?: "_$$EXPAND^IBTRE(36,4.13,+$P(IBCNS4,U,13))
"RTN","IBCNSC1",209,0)
 ;.S LINE=LINE+1
"RTN","IBCNSC1",210,0)
 ;.D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",211,0)
 ;.Q
"RTN","IBCNSC1",212,0)
 ;
"RTN","IBCNSC1",213,0)
 S TEXT="Transmit no Billing Provider Sec. ID for the Electronic Plan Types: "
"RTN","IBCNSC1",214,0)
 S LINE=LINE+1
"RTN","IBCNSC1",215,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",216,0)
 ;
"RTN","IBCNSC1",217,0)
 N TAR,ERR,IBCT
"RTN","IBCNSC1",218,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCNSC1",219,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCNSC1",220,0)
 . S TEXT=TAR("DILIST",1,IBCT)
"RTN","IBCNSC1",221,0)
 . S LINE=LINE+1
"RTN","IBCNSC1",222,0)
 . D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",223,0)
 ;
"RTN","IBCNSC1",224,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",225,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",226,0)
 Q
"RTN","IBCNSC1",227,0)
 ;       
"RTN","IBCNSC1",228,0)
INSDEF(IBINS,IBPTYP) ; Returns the default id # for an ins co, if possible
"RTN","IBCNSC1",229,0)
 N X
"RTN","IBCNSC1",230,0)
 S X=""
"RTN","IBCNSC1",231,0)
 I IBINS,IBPTYP S X=$P($G(^IBA(355.91,+$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*","")),0)),U,7)
"RTN","IBCNSC1",232,0)
 Q X
"RTN","IBCNSC1",233,0)
 ;
"RTN","IBCNSC1",234,0)
CUIDS(IBCNS) ;
"RTN","IBCNSC1",235,0)
 N DIE,DA,DR,PIECE,DAT6,Y
"RTN","IBCNSC1",236,0)
 S DAT6=$P(^DIC(36,IBCNS,6),U,1,8) ; get the Payer IDs
"RTN","IBCNSC1",237,0)
 ;
"RTN","IBCNSC1",238,0)
 ; Make sure each qualifier has an ID and vice versa
"RTN","IBCNSC1",239,0)
 F PIECE=1,3,5,7 D
"RTN","IBCNSC1",240,0)
 . I $TR($P(DAT6,U,PIECE,PIECE+1),U)="" Q  ; both blank
"RTN","IBCNSC1",241,0)
 . I $P(DAT6,U,PIECE)]"",$P(DAT6,U,PIECE+1)]"" Q  ; both have data
"RTN","IBCNSC1",242,0)
 . S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="6.0"_$S($P(DAT6,U,PIECE)]"":PIECE,1:PIECE+1)_"////@"
"RTN","IBCNSC1",243,0)
 . D ^DIE K DIE
"RTN","IBCNSC1",244,0)
 ;
"RTN","IBCNSC1",245,0)
 S DAT6=$P($G(^DIC(36,IBCNS,6)),U,1,8) ; get the Payer IDs again since they may have changed above.
"RTN","IBCNSC1",246,0)
 ;
"RTN","IBCNSC1",247,0)
 ; Make sure the first pair of ID/Qual are populated if the 2nd pair is.  If not, move em over.
"RTN","IBCNSC1",248,0)
 ; This is done for institutional then professional
"RTN","IBCNSC1",249,0)
 F PIECE=1,5 D
"RTN","IBCNSC1",250,0)
 . I $P(DAT6,U,PIECE)]"" Q  ; already has set one
"RTN","IBCNSC1",251,0)
 . I $P(DAT6,U,PIECE+2)="" Q  ; has no second set
"RTN","IBCNSC1",252,0)
 . S DIE="^DIC(36,",(DA,Y)=IBCNS
"RTN","IBCNSC1",253,0)
 . ; deleting the qualifier triggers deletion of the ID
"RTN","IBCNSC1",254,0)
 . S DR="6.0"_PIECE_"////"_$P(DAT6,U,PIECE+2)_";6.0"_(PIECE+1)_"////"_$P(DAT6,U,PIECE+3)_";6.0"_(PIECE+2)_"////@"
"RTN","IBCNSC1",255,0)
 . D ^DIE K DIE
"RTN","IBCNSC1",256,0)
 Q
"RTN","IBCSC10")
0^43^B8325466^B3383615
"RTN","IBCSC10",1,0)
IBCSC10 ;ALB/MJB - MCCR SCREEN 10 (UB-82 BILL SPECIFIC INFO)  ;27 MAY 88 10:20
"RTN","IBCSC10",2,0)
 ;;2.0;INTEGRATED BILLING;**432,547**;21-MAR-94;Build 119
"RTN","IBCSC10",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC10",4,0)
 ;
"RTN","IBCSC10",5,0)
 ;MAP TO DGCRSC8
"RTN","IBCSC10",6,0)
 ;
"RTN","IBCSC10",7,0)
 ; DEM;432 - Moved IBCSC8* billing screen routines to IBCSC10* billing screen
"RTN","IBCSC10",8,0)
 ;           routines and created a new billing screen 8 routine IBCSC8.
"RTN","IBCSC10",9,0)
 ;
"RTN","IBCSC10",10,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC10H ; hcfa 1500
"RTN","IBCSC10",11,0)
 I IBCUBFT=3 K IBCUBFT G ^IBCSC102 ; ub-92
"RTN","IBCSC10",12,0)
 ;I $P(^DGCR(399,IBIFN,0),"^",19)=2 G ^IBCSC10H ;hcfa 1500
"RTN","IBCSC10",13,0)
 D ^IBCSCU S IBSR=10,IBSR1="",IBV1="000000000" S:IBV IBV1="111111111" F I="U","U1",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC10",14,0)
 D H^IBCSCU
"RTN","IBCSC10",15,0)
 S Z=1,IBW=1 X IBWW W " Bill Remark    : ",$S($P(IB("U1"),U,8)]"":$P(IB("U1"),U,8),1:IBUN)
"RTN","IBCSC10",16,0)
 S IBX="^^^2^9^27^45" F I=4:1:7 S Z=(I-2),IBW=1 X IBWW W " Form Locator ",$P(IBX,U,I),$S($E($P(IBX,U,I),2)="":" : ",1:": "),$S($P(IB("U1"),U,I)]"":$P(IB("U1"),U,I),1:IBUN)
"RTN","IBCSC10",17,0)
 S IBX=91 F I=13,14 S Z=(I-7),IBW=1,IBX=IBX+1 X IBWW W " Form Locator ",IBX,": ",$S($P(IB("U1"),U,I)]"":$P(IB("U1"),U,I),1:IBUN)
"RTN","IBCSC10",18,0)
 S Z=8,IBW=1 X IBWW W " Tx Auth. Code  : ",$S($P(IB("U"),U,13)]"":$P(IB("U"),U,13),1:IBUN)
"RTN","IBCSC10",19,0)
 G ^IBCSCP
"RTN","IBCSC10",20,0)
Q Q
"RTN","IBCSC10",21,0)
 ;
"RTN","IBCSC10",22,0)
 ;WCJ;IB*2.0*547
"RTN","IBCSC10",23,0)
ACINTEL(IBINSDAT,IBNEXT) ; build some intelligence in this Alternate ID branching logic called from both screen 10 templates.
"RTN","IBCSC10",24,0)
 ;
"RTN","IBCSC10",25,0)
 ; Input:
"RTN","IBCSC10",26,0)
 ; IBINSDAT - INS DATA node
"RTN","IBCSC10",27,0)
 ; IBNEXT -where to branch if not correct plan
"RTN","IBCSC10",28,0)
 ;
"RTN","IBCSC10",29,0)
 ; Returns - where to branch to
"RTN","IBCSC10",30,0)
 ;
"RTN","IBCSC10",31,0)
 N IBPLAN,IBEPT,IBINSPRF
"RTN","IBCSC10",32,0)
 S IBPLAN=$P(IBINSDAT,U,18)
"RTN","IBCSC10",33,0)
 I IBPLAN=""  Q IBNEXT
"RTN","IBCSC10",34,0)
 S IBPLAN=$G(^IBA(355.3,+IBPLAN,0))
"RTN","IBCSC10",35,0)
 I IBPLAN="" Q IBNEXT
"RTN","IBCSC10",36,0)
 S IBEPT=$P(IBPLAN,U,15)
"RTN","IBCSC10",37,0)
 I IBEPT="" Q IBNEXT
"RTN","IBCSC10",38,0)
 I IBEPT="MX" Q:'$D(^IBE(350.9,1,81,"B")) IBNEXT  ; no medicare set up in site parameters
"RTN","IBCSC10",39,0)
 I IBEPT'="MX" Q:'$D(^IBE(350.9,1,82,"B")) IBNEXT   ; no commercial set up in site parameters
"RTN","IBCSC10",40,0)
 S IBINSPRF=$$INSPRF^IBCEF(IBIFN)
"RTN","IBCSC10",41,0)
 ;
"RTN","IBCSC10",42,0)
 ; Institutional
"RTN","IBCSC10",43,0)
 I IBINSPRF=1 Q:'$D(^DIC(36,+IBINSDAT,15,"B")) IBNEXT   ; this insurance company has no institutional set up
"RTN","IBCSC10",44,0)
 ;
"RTN","IBCSC10",45,0)
 ; Professional
"RTN","IBCSC10",46,0)
 I IBINSPRF=0 Q:'$D(^DIC(36,+IBINSDAT,16,"B")) IBNEXT  ; this insurance company has no professional set up
"RTN","IBCSC10",47,0)
 ;
"RTN","IBCSC10",48,0)
 ; now it gets complicated :)
"RTN","IBCSC10",49,0)
 ; there needs to be one set up for this form type in the ins comp file
"RTN","IBCSC10",50,0)
 ; and also set up for medicare/commercial in the site parameter file
"RTN","IBCSC10",51,0)
 N IBTMPINS,IBTMPSP,IBLOOP,IBFOUND
"RTN","IBCSC10",52,0)
 M IBTMPINS=^DIC(36,+IBINSDAT,$S(IBINSPRF=1:15,1:16),"B")
"RTN","IBCSC10",53,0)
 M IBTMPSP=^IBE(350.9,1,$S(IBEPT="MX":81,1:82),"B")
"RTN","IBCSC10",54,0)
 S IBLOOP="",IBFOUND=0
"RTN","IBCSC10",55,0)
 F  S IBLOOP=$O(IBTMPINS(IBLOOP)) Q:IBLOOP=""  D  Q:IBFOUND
"RTN","IBCSC10",56,0)
 . Q:'$D(IBTMPSP(IBLOOP))
"RTN","IBCSC10",57,0)
 . S IBFOUND=1
"RTN","IBCSC10",58,0)
 I IBFOUND Q ""
"RTN","IBCSC10",59,0)
 Q IBNEXT
"RTN","IBCSC10",60,0)
 ;IBCSC10
"RTN","IBCSC102")
0^37^B47787919^B41297495
"RTN","IBCSC102",1,0)
IBCSC102 ;ALB/MJB - MCCR SCREEN 10 (UB-04 BILL SPECIFIC INFO) ;27 MAY 88 10:20
"RTN","IBCSC102",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,461,547**;21-MAR-94;Build 119
"RTN","IBCSC102",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC102",4,0)
 ;
"RTN","IBCSC102",5,0)
 ; DEM;432 - Moved IBCSC8* billing screen routines to IBCSC10* billing screen
"RTN","IBCSC102",6,0)
 ;           routines and created a new billing screen 8 routine IBCSC8.
"RTN","IBCSC102",7,0)
 ;
"RTN","IBCSC102",8,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC10H ;CMS-1500
"RTN","IBCSC102",9,0)
 ;
"RTN","IBCSC102",10,0)
 N FIRSTPRV,I,IB,IBINP,IBX,PRV,PRVS,Z
"RTN","IBCSC102",11,0)
 S IBINP=$$INPAT^IBCEF(IBIFN)
"RTN","IBCSC102",12,0)
 D ^IBCSCU
"RTN","IBCSC102",13,0)
 ;
"RTN","IBCSC102",14,0)
 ;WCJ;IB*2.0*547
"RTN","IBCSC102",15,0)
 ;S IBSR=10,IBSR1=2,IBV1="0000000" S:IBINP $E(IBV1,2)=1 S:IBV IBV1="1111111"
"RTN","IBCSC102",16,0)
 S IBSR=10,IBSR1=2,IBV1="00000000" S:IBINP $E(IBV1,2)=1 S:IBV IBV1="11111111"
"RTN","IBCSC102",17,0)
 ;
"RTN","IBCSC102",18,0)
 ;WCJ;IB*2.0*547
"RTN","IBCSC102",19,0)
 ;F I="U","U1",0,"UF3","UF31","UF32","U2","TX","U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC102",20,0)
 F I="M2","U","U1",0,"UF3","UF31","UF32","U2","TX","U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC102",21,0)
 N IBZ,IBPRV,IBREQ,IBMRASEC,TEXT,BPZ,TXMT,IBZCNT
"RTN","IBCSC102",22,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC102",23,0)
 K IB("PRV")
"RTN","IBCSC102",24,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC102",25,0)
 ;
"RTN","IBCSC102",26,0)
 D H^IBCSCU
"RTN","IBCSC102",27,0)
 ;
"RTN","IBCSC102",28,0)
 ; Section 1
"RTN","IBCSC102",29,0)
 S Z=1,IBW=1 X IBWW W " Bill Remarks",!?5,"- FL-80",?22,": "
"RTN","IBCSC102",30,0)
 S TEXT=$P($G(^DGCR(399,IBIFN,"UF2")),U,3)  ; field# 402
"RTN","IBCSC102",31,0)
 I TEXT="" W IBUN                           ; unspecified [not required]
"RTN","IBCSC102",32,0)
 I TEXT'="" D
"RTN","IBCSC102",33,0)
 . N IBZ,Z
"RTN","IBCSC102",34,0)
 . D REMARK^IBCEF77(IBIFN,.IBZ)
"RTN","IBCSC102",35,0)
 . S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  D
"RTN","IBCSC102",36,0)
 .. W ?24,$G(IBZ(Z))
"RTN","IBCSC102",37,0)
 .. I Z>4 W ?48,$G(IBVI)," <--- This Line Will Not Print ",$G(IBVO)
"RTN","IBCSC102",38,0)
 .. I $O(IBZ(Z)) W !
"RTN","IBCSC102",39,0)
 .. Q
"RTN","IBCSC102",40,0)
 . Q
"RTN","IBCSC102",41,0)
 ;
"RTN","IBCSC102",42,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC102",43,0)
 I $P(IB("UF3"),U,4)]"" S IBZ(IBZCNT)="P: "_$P(IB("UF3"),U,4),IBZCNT=IBZCNT+1
"RTN","IBCSC102",44,0)
 I $P(IB("UF3"),U,5)]"" S IBZ(IBZCNT)="S: "_$P(IB("UF3"),U,5),IBZCNT=IBZCNT+1
"RTN","IBCSC102",45,0)
 I $P(IB("UF3"),U,6)]"" S IBZ(IBZCNT)="T: "_$P(IB("UF3"),U,6)
"RTN","IBCSC102",46,0)
 ;S IBZ(0)="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC102",47,0)
 I IBZ(0)="",$$IBMICN^IBCBB13(IBIFN) S IBZ(0)="UNSPECIFIED [REQUIRED]"
"RTN","IBCSC102",48,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC102",49,0)
 W !?4,"ICN/DCN(s)        : ",IBZ(0)
"RTN","IBCSC102",50,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?24,IBZ(IBZCNT)
"RTN","IBCSC102",51,0)
 K IBZ
"RTN","IBCSC102",52,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC102",53,0)
 I $P(IB("U"),U,13)]"" S IBZ(IBZCNT)="P: "_$P(IB("U"),U,13),IBZCNT=IBZCNT+1
"RTN","IBCSC102",54,0)
 I $P(IB("U2"),U,8)'="" S IBZ(IBZCNT)="S: "_$P(IB("U2"),U,8),IBZCNT=IBZCNT+1
"RTN","IBCSC102",55,0)
 I $P(IB("U2"),U,9)'="" S IBZ(IBZCNT)="T: "_$P(IB("U2"),U,9),IBZCNT=IBZCNT+1
"RTN","IBCSC102",56,0)
 I $P(IB("UF32"),U,1)'="" S IBZ(IBZCNT)="P: "_$P(IB("UF32"),U,1),IBZCNT=IBZCNT+1
"RTN","IBCSC102",57,0)
 I $P(IB("UF32"),U,2)'="" S IBZ(IBZCNT)="S: "_$P(IB("UF32"),U,2),IBZCNT=IBZCNT+1
"RTN","IBCSC102",58,0)
 I $P(IB("UF32"),U,3)'="" S IBZ(IBZCNT)="T: "_$P(IB("UF32"),U,3)
"RTN","IBCSC102",59,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"P: "_$P(IB("U"),U,13),1:"")
"RTN","IBCSC102",60,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC102",61,0)
 W !,?3," Auth/Referral     : ",IBZ(0)
"RTN","IBCSC102",62,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?24,IBZ(IBZCNT)
"RTN","IBCSC102",63,0)
 K IBZ S IBZ=""
"RTN","IBCSC102",64,0)
 ;
"RTN","IBCSC102",65,0)
 ; IB*2*400 - Admitting diagnosis only for inpatients
"RTN","IBCSC102",66,0)
 I IBINP W !,?3," Admitting Dx      : " S IBX=$$ICD9^IBACSV(+IB("U2"),$$BDATE^IBACSV(IBIFN)) W $S(IBX'="":$P(IBX,U)_" - "_$P(IBX,U,3),1:IBU)
"RTN","IBCSC102",67,0)
 ;
"RTN","IBCSC102",68,0)
 ; IB*2*400 - esg - display PPS (DRG) info for inpatient, UB claims
"RTN","IBCSC102",69,0)
 I IBINP D
"RTN","IBCSC102",70,0)
 . N PPS,PPSDISP
"RTN","IBCSC102",71,0)
 . S PPS=+$P(IB("U1"),U,15)
"RTN","IBCSC102",72,0)
 . I 'PPS S PPSDISP=IBUN
"RTN","IBCSC102",73,0)
 . I PPS S PPSDISP=$$FO^IBCNEUT1(PPS,4,"R",0)_" - "_$$DRGTD^IBACSV(PPS,$$BDATE^IBACSV(IBIFN))
"RTN","IBCSC102",74,0)
 . W !?4,"PPS (DRG)",?22,": ",$E(PPSDISP,1,56)
"RTN","IBCSC102",75,0)
 . Q
"RTN","IBCSC102",76,0)
 ;
"RTN","IBCSC102",77,0)
 I 'IBINP W !,?3," Admission Source  : " S IBX=$$EXTERNAL^DILFD(399,159,,$P(IB("U"),U,9)) W $S(IBX'="":IBX,1:IBU)   ; Outpatient only
"RTN","IBCSC102",78,0)
 ;
"RTN","IBCSC102",79,0)
 ; Section 2
"RTN","IBCSC102",80,0)
 S Z=2,IBW=1 X IBWW
"RTN","IBCSC102",81,0)
 S PRVS=$TR($P(IB("U3"),U,8,10),U) W " Pt Reason f/Visit : " I PRVS="" W IBU_$S(IBINP:" [NOT USED]",1:"")
"RTN","IBCSC102",82,0)
 I PRVS'="" S FIRSTPRV=1 F I=8:1:10 D
"RTN","IBCSC102",83,0)
 .S PRV=$$ICD9^IBACSV($P(IB("U3"),U,I),$$BDATE^IBACSV(IBIFN)) I PRV'="" W:'FIRSTPRV !,?24 W $P(PRV,U,1)_" - "_$E($P(PRV,U,3),1,45) S FIRSTPRV=0
"RTN","IBCSC102",84,0)
 .Q
"RTN","IBCSC102",85,0)
 ;
"RTN","IBCSC102",86,0)
 ; Section 3
"RTN","IBCSC102",87,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC102",88,0)
 W " Providers         : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC102",89,0)
 I $D(IB("PRV")) D
"RTN","IBCSC102",90,0)
 . N Z,IBT,IBQ,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC102",91,0)
 . S IBZ=0
"RTN","IBCSC102",92,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC102",93,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC102",94,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC102",95,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC102",96,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC102",97,0)
 .. N A,A1
"RTN","IBCSC102",98,0)
 .. S IBQ=""
"RTN","IBCSC102",99,0)
 .. W !,?5,"- "
"RTN","IBCSC102",100,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC102",101,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,15-$L(A1))_A1
"RTN","IBCSC102",102,0)
 .. W $E(A_$J("",15),1,15),": "
"RTN","IBCSC102",103,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC102",104,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",20),1,20) W:$G(IB("PRV",IBZ)) "(OLD PROV DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC102",105,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",20),1,20)
"RTN","IBCSC102",106,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC102",107,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC102",108,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC102",109,0)
 K IB("PRV")
"RTN","IBCSC102",110,0)
 ;
"RTN","IBCSC102",111,0)
 ; Section 4
"RTN","IBCSC102",112,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC102",113,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC102",114,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC102",115,0)
 I IBZ'="" D
"RTN","IBCSC102",116,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC102",117,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC102",118,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC102",119,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC102",120,0)
 . Q
"RTN","IBCSC102",121,0)
 ;
"RTN","IBCSC102",122,0)
 ; Section 5
"RTN","IBCSC102",123,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC102",124,0)
 W " Billing Provider  : "
"RTN","IBCSC102",125,0)
 K IBZ
"RTN","IBCSC102",126,0)
 S BPZ=+$$B^IBCEF79(IBIFN)
"RTN","IBCSC102",127,0)
 D GETBP^IBCEF79(IBIFN,"",BPZ,"UB SCREEN 8",.IBZ)
"RTN","IBCSC102",128,0)
 S TXMT=$$TXMT^IBCEF4(IBIFN)    ; transmittable?  variable also used in next section
"RTN","IBCSC102",129,0)
 I TXMT S IBZ=$G(IBZ("UB SCREEN 8","NAME"))     ; this is the BP name used in the PRV segment
"RTN","IBCSC102",130,0)
 I 'TXMT S IBZ=$$GETFAC^IBCEP8(BPZ,0,0)         ; this is the BP name printed in FL-1
"RTN","IBCSC102",131,0)
 W $S(IBZ'="":IBZ,1:IBU)                        ; billing provider name
"RTN","IBCSC102",132,0)
 W !?3," Taxonomy Code     : "
"RTN","IBCSC102",133,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC102",134,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC102",135,0)
 ;
"RTN","IBCSC102",136,0)
 ; WCJ;IB*2.0*547
"RTN","IBCSC102",137,0)
 ; Adding ALT PRIMARY IDS and moving sections down to make room
"RTN","IBCSC102",138,0)
 ; Section 6
"RTN","IBCSC102",139,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC102",140,0)
 W " Alt Prim Payer ID : "
"RTN","IBCSC102",141,0)
 K IBZ
"RTN","IBCSC102",142,0)
 S IBZCNT=0
"RTN","IBCSC102",143,0)
 I $P(IB("M2"),U,2)]"" S IBZCNT=IBZCNT+1,IBZ(IBZCNT)="P: "_$P(IB("M2"),U,2)
"RTN","IBCSC102",144,0)
 I $P(IB("M2"),U,4)]"" S IBZCNT=IBZCNT+1,IBZ(IBZCNT)="S: "_$P(IB("M2"),U,4)
"RTN","IBCSC102",145,0)
 I $P(IB("M2"),U,6)]"" S IBZCNT=IBZCNT+1,IBZ(IBZCNT)="T: "_$P(IB("M2"),U,6)
"RTN","IBCSC102",146,0)
 I 'IBZCNT W ?23,IBUN
"RTN","IBCSC102",147,0)
 I IBZCNT F IBZ1=1:1:IBZCNT W ?23,IBZ(IBZ1) W:(IBZ1'=IBZCNT) !
"RTN","IBCSC102",148,0)
 K IBZ
"RTN","IBCSC102",149,0)
 ;
"RTN","IBCSC102",150,0)
 ; Section 7
"RTN","IBCSC102",151,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC102",152,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC102",153,0)
 S Z=7,IBW=1 X IBWW W " ",$S('IBREQ:"Force To Print?   : ",1:"Force MRA Sec Prt?: ")
"RTN","IBCSC102",154,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC102",155,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC102",156,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'TXMT:"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC102",157,0)
 ;
"RTN","IBCSC102",158,0)
 ; Section 8
"RTN","IBCSC102",159,0)
 S Z=8,IBW=1 X IBWW
"RTN","IBCSC102",160,0)
 W " Provider ID Maint : (Edit Provider ID information)"
"RTN","IBCSC102",161,0)
 ;
"RTN","IBCSC102",162,0)
 G ^IBCSCP
"RTN","IBCSC102",163,0)
Q Q
"RTN","IBCSC102",164,0)
 ;IBCSC102
"RTN","IBCSC10H")
0^36^B51814065^B44927826
"RTN","IBCSC10H",1,0)
IBCSC10H ;ALB/ARH - MCCR SCREEN 10 (BILL SPECIFIC INFO) CMS-1500 ;4/21/92
"RTN","IBCSC10H",2,0)
 ;;2.0;INTEGRATED BILLING;**432,488,547**;21-MAR-94;Build 119
"RTN","IBCSC10H",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC10H",4,0)
 ; CMS-1500 screen 10
"RTN","IBCSC10H",5,0)
 ;
"RTN","IBCSC10H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC10H",7,0)
 ;
"RTN","IBCSC10H",8,0)
 ; DEM;432 - Moved IBCSC8* billing screen routines to IBCSC10* billing screen
"RTN","IBCSC10H",9,0)
 ;           routines and created a new billing screen 8 routine IBCSC8.
"RTN","IBCSC10H",10,0)
 ;
"RTN","IBCSC10H",11,0)
EN ;
"RTN","IBCSC10H",12,0)
 N I,IB,Y,Z
"RTN","IBCSC10H",13,0)
 D ^IBCSCU
"RTN","IBCSC10H",14,0)
 ;
"RTN","IBCSC10H",15,0)
 ;WCJ;IB*2.0*547
"RTN","IBCSC10H",16,0)
 ;S IBSR=10,IBSR1="H",IBV1="000000000" S:IBV IBV1="111111111"
"RTN","IBCSC10H",17,0)
 S IBSR=10,IBSR1="H",IBV1="0000000000" S:IBV IBV1="1111111111"
"RTN","IBCSC10H",18,0)
 ;F I="U","U1","UF2","UF3","UF32","U2","M","TX",0,"U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC10H",19,0)
 F I="U","U1","UF2","UF3","UF32","U2","M","M2","TX",0,"U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC10H",20,0)
 ;
"RTN","IBCSC10H",21,0)
 N IBZ,IBPRV,IBDATE,IBREQ,IBMRASEC,IBZ1,IBZCNT
"RTN","IBCSC10H",22,0)
 ;
"RTN","IBCSC10H",23,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC10H",24,0)
 S IBPRV=""
"RTN","IBCSC10H",25,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC10H",26,0)
 K IB("PRV")
"RTN","IBCSC10H",27,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC10H",28,0)
 ;
"RTN","IBCSC10H",29,0)
 D H^IBCSCU
"RTN","IBCSC10H",30,0)
 ;
"RTN","IBCSC10H",31,0)
 ; Section 1
"RTN","IBCSC10H",32,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC10H",33,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC10H",34,0)
 ;
"RTN","IBCSC10H",35,0)
 ; Section 2
"RTN","IBCSC10H",36,0)
 S Z=2,IBW=1 X IBWW I $$INPAT^IBCEF(IBIFN) W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN),!
"RTN","IBCSC10H",37,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC10H",38,0)
 I $P(IB("UF3"),U,4)]"" S IBZ(IBZCNT)="P: "_$P(IB("UF3"),U,4),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",39,0)
 I $P(IB("UF3"),U,5)]"" S IBZ(IBZCNT)="S: "_$P(IB("UF3"),U,5),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",40,0)
 I $P(IB("UF3"),U,6)]"" S IBZ(IBZCNT)="T: "_$P(IB("UF3"),U,6)
"RTN","IBCSC10H",41,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC10H",42,0)
 W ?4,"ICN/DCN(s)         : ",IBZ(0)
"RTN","IBCSC10H",43,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?25,IBZ(IBZCNT)
"RTN","IBCSC10H",44,0)
 K IBZ
"RTN","IBCSC10H",45,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC10H",46,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC10H",47,0)
 I $P(IB("U"),U,13)]"" S IBZ(IBZCNT)="P: "_$P(IB("U"),U,13),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",48,0)
 I $P(IB("U2"),U,8)'="" S IBZ(IBZCNT)="S: "_$P(IB("U2"),U,8),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",49,0)
 I $P(IB("U2"),U,9)'="" S IBZ(IBZCNT)="T: "_$P(IB("U2"),U,9),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",50,0)
 I $P(IB("UF32"),U,1)'="" S IBZ(IBZCNT)="P: "_$P(IB("UF32"),U,1),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",51,0)
 I $P(IB("UF32"),U,2)'="" S IBZ(IBZCNT)="S: "_$P(IB("UF32"),U,2),IBZCNT=IBZCNT+1
"RTN","IBCSC10H",52,0)
 I $P(IB("UF32"),U,3)'="" S IBZ(IBZCNT)="T: "_$P(IB("UF32"),U,3)
"RTN","IBCSC10H",53,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC10H",54,0)
 W !,?3," Auth/Referral      : ",IBZ(0)
"RTN","IBCSC10H",55,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?25,IBZ(IBZCNT)
"RTN","IBCSC10H",56,0)
 K IBZ S IBZ=""
"RTN","IBCSC10H",57,0)
 ;
"RTN","IBCSC10H",58,0)
 ; Section 3
"RTN","IBCSC10H",59,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC10H",60,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC10H",61,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC10H",62,0)
 . N IBQ,A,A1,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC10H",63,0)
 . S IBZ=0
"RTN","IBCSC10H",64,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC10H",65,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC10H",66,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC10H",67,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC10H",68,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC10H",69,0)
 .. S IBQ=""
"RTN","IBCSC10H",70,0)
 .. W !,?5,"- "
"RTN","IBCSC10H",71,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC10H",72,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC10H",73,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC10H",74,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC10H",75,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC10H",76,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC10H",77,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC10H",78,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC10H",79,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC10H",80,0)
 ;
"RTN","IBCSC10H",81,0)
 K IB("PRV")
"RTN","IBCSC10H",82,0)
 ;
"RTN","IBCSC10H",83,0)
 ; Section 4
"RTN","IBCSC10H",84,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC10H",85,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC10H",86,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC10H",87,0)
 I IBZ'="" D
"RTN","IBCSC10H",88,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC10H",89,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC10H",90,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC10H",91,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC10H",92,0)
 . Q
"RTN","IBCSC10H",93,0)
 ;
"RTN","IBCSC10H",94,0)
 ; clia# display - IB patch 320
"RTN","IBCSC10H",95,0)
 S (IBZ,IBZ1)=$P(IB("U2"),U,13)     ; retrieve CLIA# from database
"RTN","IBCSC10H",96,0)
 ;
"RTN","IBCSC10H",97,0)
 I IBZ="" D
"RTN","IBCSC10H",98,0)
 . NEW CLIAREQ,DEFCLIA,DIE,DA,DR
"RTN","IBCSC10H",99,0)
 . S CLIAREQ=$$CLIAREQ^IBCEP8A(IBIFN)
"RTN","IBCSC10H",100,0)
 . I 'CLIAREQ S IBZ1=IBUN Q          ; clia# not needed
"RTN","IBCSC10H",101,0)
 . S DEFCLIA=$$CLIA^IBCEP8A(IBIFN)   ; default clia# for claim
"RTN","IBCSC10H",102,0)
 . I DEFCLIA="" S IBZ1=IBU Q         ; no default found
"RTN","IBCSC10H",103,0)
 . I $G(IBMDOTCN) K IBMDOTCN S IBZ1=IBU Q     ; user @-deleted clia#
"RTN","IBCSC10H",104,0)
 . S IBZ1=DEFCLIA                    ; display and stuff default clia#
"RTN","IBCSC10H",105,0)
 . S DIE=399,DA=IBIFN,DR="235///"_DEFCLIA D ^DIE    ; stuff in default
"RTN","IBCSC10H",106,0)
 . Q
"RTN","IBCSC10H",107,0)
 ;
"RTN","IBCSC10H",108,0)
 W !,?4,"Lab CLIA #         : ",IBZ1
"RTN","IBCSC10H",109,0)
 ;
"RTN","IBCSC10H",110,0)
 ; Mammo# display IB patch 320
"RTN","IBCSC10H",111,0)
 S (IBZ,IBZ1)=$P(IB("U3"),U,1)    ; retrieve mammo# from database
"RTN","IBCSC10H",112,0)
 ;
"RTN","IBCSC10H",113,0)
 ; If mammo# is there, but should not be, then blank it out
"RTN","IBCSC10H",114,0)
 I IBZ'="",'$$XRAY^IBCEP8A(IBIFN) D
"RTN","IBCSC10H",115,0)
 . NEW DIE,DA,DR
"RTN","IBCSC10H",116,0)
 . S IBZ1=IBUN        ; mammo# not needed
"RTN","IBCSC10H",117,0)
 . S DIE=399,DA=IBIFN,DR="242////@" D ^DIE
"RTN","IBCSC10H",118,0)
 . Q
"RTN","IBCSC10H",119,0)
 ;
"RTN","IBCSC10H",120,0)
 I IBZ="" S IBZ1=IBUN
"RTN","IBCSC10H",121,0)
 W !?4,"Mammography Cert # : ",IBZ1
"RTN","IBCSC10H",122,0)
 ;
"RTN","IBCSC10H",123,0)
 ; Section 5
"RTN","IBCSC10H",124,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC10H",125,0)
 W " Chiropractic Data  : " S Y=$P(IB("U3"),U,5) X ^DD("DD") W $S(Y'="":"INITIAL TREATMENT ON "_Y,1:IBUN)
"RTN","IBCSC10H",126,0)
 ;
"RTN","IBCSC10H",127,0)
 ; Section 6  -> changed prompt for *488* : baa
"RTN","IBCSC10H",128,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC10H",129,0)
 W " CMS-1500 Box 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC10H",130,0)
 ;/ Beginning of IB*2.0*488 - Moved the following lines of code to IBCSC8 (vd)
"RTN","IBCSC10H",131,0)
 ;I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC10H",132,0)
 ;I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC10H",133,0)
 ;I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC10H",134,0)
 ;/ End of IB*2.0*488 (vd)
"RTN","IBCSC10H",135,0)
 ;
"RTN","IBCSC10H",136,0)
 ; Section 7
"RTN","IBCSC10H",137,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC10H",138,0)
 W " Billing Provider   : "
"RTN","IBCSC10H",139,0)
 K IBZ
"RTN","IBCSC10H",140,0)
 D GETBP^IBCEF79(IBIFN,"",+$$B^IBCEF79(IBIFN),"CMS-1500 SCREEN 8",.IBZ)
"RTN","IBCSC10H",141,0)
 S IBZ=$G(IBZ("CMS-1500 SCREEN 8","NAME"))
"RTN","IBCSC10H",142,0)
 W $S(IBZ'="":IBZ,1:IBU)    ; billing provider name
"RTN","IBCSC10H",143,0)
 W !?3," Taxonomy Code      : "
"RTN","IBCSC10H",144,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC10H",145,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC10H",146,0)
 ;
"RTN","IBCSC10H",147,0)
 ; Section 8
"RTN","IBCSC10H",148,0)
 ;WCJ;IB*2.0*547
"RTN","IBCSC10H",149,0)
 ;Adding ALT PRIMARY IDS and moving sections down to make room
"RTN","IBCSC10H",150,0)
 S Z=8,IBW=1 X IBWW
"RTN","IBCSC10H",151,0)
 W " Alt Prim Payer ID  : "
"RTN","IBCSC10H",152,0)
 K IBZ
"RTN","IBCSC10H",153,0)
 S IBZCNT=0
"RTN","IBCSC10H",154,0)
 I $P(IB("M2"),U,2)]"" S IBZCNT=IBZCNT+1,IBZ(IBZCNT)="P: "_$P(IB("M2"),U,2)
"RTN","IBCSC10H",155,0)
 I $P(IB("M2"),U,4)]"" S IBZCNT=IBZCNT+1,IBZ(IBZCNT)="S: "_$P(IB("M2"),U,4)
"RTN","IBCSC10H",156,0)
 I $P(IB("M2"),U,6)]"" S IBZCNT=IBZCNT+1,IBZ(IBZCNT)="T: "_$P(IB("M2"),U,6)
"RTN","IBCSC10H",157,0)
 I 'IBZCNT W ?23,IBUN
"RTN","IBCSC10H",158,0)
 I IBZCNT F IBZ1=1:1:IBZCNT W ?23,IBZ(IBZ1) W:(IBZ1'=IBZCNT) !
"RTN","IBCSC10H",159,0)
 K IBZ
"RTN","IBCSC10H",160,0)
 ;
"RTN","IBCSC10H",161,0)
 ; Section 9
"RTN","IBCSC10H",162,0)
 S Z=9,IBW=1 X IBWW
"RTN","IBCSC10H",163,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC10H",164,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC10H",165,0)
 W " ",$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt? : ")
"RTN","IBCSC10H",166,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC10H",167,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC10H",168,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC10H",169,0)
 ;
"RTN","IBCSC10H",170,0)
 ; Section 10
"RTN","IBCSC10H",171,0)
 S Z=10,IBW=1 X IBWW
"RTN","IBCSC10H",172,0)
 W " Provider ID Maint  : (Edit Provider ID information)",!
"RTN","IBCSC10H",173,0)
 G ^IBCSCP
"RTN","IBCSC10H",174,0)
Q Q
"RTN","IBCSC10H",175,0)
 ;
"RTN","IBCSC10H",176,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC10H",177,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC10H",178,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC10H",179,0)
 Q
"RTN","IBCSC10H",180,0)
 ;
"RTN","IBCSC10H",181,0)
NSAME(DA) ; Returns 1 if div on bill is not the default billing facility
"RTN","IBCSC10H",182,0)
 Q ($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(^DGCR(399,DA,0),U,22),0)),U,7))
"RTN","IBCSC10H",183,0)
 ;
"RTN","IBCSC10H",184,0)
 ;IBCSC10H
"RTN","IBCSC4F")
0^10^B36628771^B34285009
"RTN","IBCSC4F",1,0)
IBCSC4F ;ALB/ARH - GET PTF DIAGNOSIS ;10-OCT-1998
"RTN","IBCSC4F",2,0)
 ;;2.0;INTEGRATED BILLING;**106,403,400,522,547**;21-MAR-94;Build 119
"RTN","IBCSC4F",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSC4F",4,0)
 ;
"RTN","IBCSC4F",5,0)
PTFDXDT(IBPTF,IBDT1,IBDT2,TF) ; collect PTF Transfer (501) and Discharge (701) movements and diagnosis within a date range
"RTN","IBCSC4F",6,0)
 ; if end date is before Discharge date delete Discharge Diagnosis
"RTN","IBCSC4F",7,0)
 ; if bill is an interim first or interim continuous then the last date on the bill is included in the bill
"RTN","IBCSC4F",8,0)
 N IBSTAY,IBADM,IBDSCH,IBDT,IBLAST,IBMDT K ^TMP($J,"IBDX","D"),^TMP($J,"IBDX","M") Q:'$G(IBPTF)
"RTN","IBCSC4F",9,0)
 S IBDT1=+$G(IBDT1)\1 Q:IBDT1'?7N  S IBDT2=+$G(IBDT2)\1 Q:IBDT2'?7N
"RTN","IBCSC4F",10,0)
 ;
"RTN","IBCSC4F",11,0)
 D PTFDX(IBPTF)
"RTN","IBCSC4F",12,0)
 ;
"RTN","IBCSC4F",13,0)
 S IBSTAY=$G(^TMP($J,"IBDX","M")),IBADM=+$P($P(IBSTAY,U,2),".",1),IBDSCH=+$P($P(IBSTAY,U,3),".",1)
"RTN","IBCSC4F",14,0)
 ;
"RTN","IBCSC4F",15,0)
 I IBADM=IBDSCH Q  ; 1 day stay, accept all
"RTN","IBCSC4F",16,0)
 I IBDT1=IBADM,IBDT2=IBDSCH Q  ; bill for entire length of stay, accept all
"RTN","IBCSC4F",17,0)
 ;
"RTN","IBCSC4F",18,0)
 I IBDT2<IBDSCH K ^TMP($J,"IBDX","D") ; discharge date not on bill, exclude 701 Dxs
"RTN","IBCSC4F",19,0)
 I 'IBDSCH,IBDT2<DT K ^TMP($J,"IBDX","D") ; not discharged, current end date (today) not on bill, exclude 701 Dxs
"RTN","IBCSC4F",20,0)
 ;
"RTN","IBCSC4F",21,0)
 ; determine which of the movements should be included based on dates and timeframe
"RTN","IBCSC4F",22,0)
 S TF=$G(TF) I (TF=2)!(TF=3) S IBDT2=$$FMADD^XLFDT(IBDT2,1) ; if first or continuous bill include end date
"RTN","IBCSC4F",23,0)
 ;
"RTN","IBCSC4F",24,0)
 S (IBLAST,IBDT)="" F  S IBDT=$O(^TMP($J,"IBDX","M",IBDT)) Q:'IBDT  D  S IBLAST=IBDT
"RTN","IBCSC4F",25,0)
 . S IBMDT=$P(IBDT,".",1)
"RTN","IBCSC4F",26,0)
 . I IBMDT'>IBDT1 K ^TMP($J,"IBDX","M",IBDT)
"RTN","IBCSC4F",27,0)
 . I IBLAST>IBDT2 K ^TMP($J,"IBDX","M",IBDT)
"RTN","IBCSC4F",28,0)
 Q
"RTN","IBCSC4F",29,0)
 ;
"RTN","IBCSC4F",30,0)
PTFDX(IBPTF) ; collect all PTF Transfer (501) and Discharge (701) movements and diagnosis and try to assign SC
"RTN","IBCSC4F",31,0)
 ; PTF movements are assigned SC or NSC but diagnosis are not
"RTN","IBCSC4F",32,0)
 ; this routine 'interprets' this PTF data and 'assigns' SC/NSC to individual Diagnosis
"RTN","IBCSC4F",33,0)
 ; Movement (501) Diagnosis:  all Dx on SC movements are assigned SC
"RTN","IBCSC4F",34,0)
 ;                            a Dx on an NSC movement that is also the first Dx on an SC move is assigned SC
"RTN","IBCSC4F",35,0)
 ; Discharge (701) Diagnosis: if admit is for SC care all discharge Dx are assigned SC
"RTN","IBCSC4F",36,0)
 ;                            if the Dx is also the first Dx on an SC movement then is assigned SC
"RTN","IBCSC4F",37,0)
 ;                            a Dx on an SC movement only is assigned SC
"RTN","IBCSC4F",38,0)
 ;
"RTN","IBCSC4F",39,0)
 ; Output:  TMP($J,"IBDX","D")=PTF # ^ ADMIT DATE ^ DISCHARGE DATE
"RTN","IBCSC4F",40,0)
 ;          TMP($J,"IBDX","D", DISCHARGE DATE) = DISCHARGE DATE ^ SPECIALTY ^ SC (1/0) ^ DRG ^ PROVIDER
"RTN","IBCSC4F",41,0)
 ;          TMP($J,"IBDX","D", DISCHARGE DATE, x) = DIAGNOSIS ^ SC? (1/0) ^ POA
"RTN","IBCSC4F",42,0)
 ;
"RTN","IBCSC4F",43,0)
 ;          TMP($J,"IBDX","M")=PTF # ^ ADMIT DATE ^ DISCHARGE DATE
"RTN","IBCSC4F",44,0)
 ;          TMP($J,"IBDX","M", MOVEMENT DATE) = MOVEMENT DATE ^ SPECIALTY ^ SC (1/0) ^ DRG ^ PROVIDER
"RTN","IBCSC4F",45,0)
 ;          TMP($J,"IBDX","M", MOVEMENT DATE, x) = DIAGNOSIS ^ SC? (1/0) ^ POA
"RTN","IBCSC4F",46,0)
 ; if patient not discharged then NOW is used as date subscript and first piece will be null, SC?=interpreted SC
"RTN","IBCSC4F",47,0)
 ;
"RTN","IBCSC4F",48,0)
 N IBSTAY,IBMI,IBM0,IBDT,IBMDT,IBMBS,IBMP,IBMDRG,IBMPRV,IBMSC,IBMDX,IBD0,IBDDT,IBDBS,IBDDRG,IBDPRV,IBDSC,IBDDX
"RTN","IBCSC4F",49,0)
 N IBCNT,IBI,IBTMP,DFN,DGVAR,DRG,DRGCAL,ICDCAL,PTF,PTFCOD K ^TMP($J,"IBDX","M"),^TMP($J,"IBDX","D") Q:'$G(IBPTF)
"RTN","IBCSC4F",50,0)
 ;
"RTN","IBCSC4F",51,0)
 S IBSTAY=IBPTF_U_$P($G(^DGPT(IBPTF,0)),U,2)_U_$P($G(^DGPT(IBPTF,70)),U,1) Q:'$P(IBSTAY,U,2)
"RTN","IBCSC4F",52,0)
 ;
"RTN","IBCSC4F",53,0)
 ; collect PTF Movement Diagnosis (501)
"RTN","IBCSC4F",54,0)
 S ^TMP($J,"IBDX","M")=IBSTAY
"RTN","IBCSC4F",55,0)
 S IBMI=0 F  S IBMI=$O(^DGPT(IBPTF,"M",IBMI)) Q:'IBMI  D
"RTN","IBCSC4F",56,0)
 . S IBM0=$G(^DGPT(IBPTF,"M",IBMI,0)) Q:'IBM0
"RTN","IBCSC4F",57,0)
 . S (IBDT,IBMDT)=$P(IBM0,U,10) I 'IBDT S IBDT=$$NOW^XLFDT
"RTN","IBCSC4F",58,0)
 . S IBMBS=$P(IBM0,U,2),IBMSC=$P(IBM0,U,18),IBMSC=$S(IBMSC=1:1,1:"")
"RTN","IBCSC4F",59,0)
 . S IBMP=$G(^DGPT(IBPTF,"M",IBMI,"P")),IBMPRV=$P(IBMP,U,5),IBMDRG=$$MVDRG^IBCRBG(IBPTF,IBMI)
"RTN","IBCSC4F",60,0)
 . ;
"RTN","IBCSC4F",61,0)
 . S ^TMP($J,"IBDX","M",IBDT)=IBMDT_U_IBMBS_U_IBMSC_U_IBMDRG_U_IBMPRV
"RTN","IBCSC4F",62,0)
 . ;
"RTN","IBCSC4F",63,0)
 . D PTFCDS(IBPTF,501,IBMI,.PTFCOD) D  K PTFCOD ; get movements diagnosis
"RTN","IBCSC4F",64,0)
 .. S IBCNT=0,IBI="" F  S IBI=$O(PTFCOD(IBI)) Q:IBI=""  S IBMDX=PTFCOD(IBI) I +IBMDX S IBCNT=IBCNT+1 D
"RTN","IBCSC4F",65,0)
 ... S ^TMP($J,"IBDX","M",IBDT,IBCNT)=+IBMDX_U_U_$P(IBMDX,U,2),IBTMP("DXSC",+IBMDX,+IBMSC,IBCNT)=""
"RTN","IBCSC4F",66,0)
 ;
"RTN","IBCSC4F",67,0)
 ; collect PTF Discharge Diagnosis (701)
"RTN","IBCSC4F",68,0)
 S ^TMP($J,"IBDX","D")=IBSTAY
"RTN","IBCSC4F",69,0)
 S IBD0=$G(^DGPT(IBPTF,70)),IBDPRV=$P(IBD0,U,15),IBDDRG=$$PTFDDRG(IBPTF)
"RTN","IBCSC4F",70,0)
 S (IBDT,IBDDT)=$P(IBD0,U,1) I 'IBDT S IBDT=$$NOW^XLFDT
"RTN","IBCSC4F",71,0)
 S IBDBS=$P(IBD0,U,2),IBDSC=$P(IBD0,U,25),IBDSC=$S(IBDSC=1:1,1:"")
"RTN","IBCSC4F",72,0)
 ;
"RTN","IBCSC4F",73,0)
 S ^TMP($J,"IBDX","D",IBDT)=IBDDT_U_IBDBS_U_IBDSC_U_IBDDRG_U_IBDPRV
"RTN","IBCSC4F",74,0)
 ;
"RTN","IBCSC4F",75,0)
 D PTFCDS(IBPTF,701,,.PTFCOD) D  K PTFCOD ; get discharge diagnosis
"RTN","IBCSC4F",76,0)
 . S IBCNT=0,IBI="" F  S IBI=$O(PTFCOD(IBI)) Q:IBI=""  S IBDDX=PTFCOD(IBI) I +IBDDX S IBCNT=IBCNT+1 D
"RTN","IBCSC4F",77,0)
 .. S ^TMP($J,"IBDX","D",IBDT,IBCNT)=+IBDDX_U_U_$P(IBDDX,U,2)
"RTN","IBCSC4F",78,0)
 ;
"RTN","IBCSC4F",79,0)
 ; Try to assign SC to PTF Diagnosis
"RTN","IBCSC4F",80,0)
 ;
"RTN","IBCSC4F",81,0)
 ; assign SC to Movement Diagnosis (501):  if movement is SC or first Dx on an SC movement
"RTN","IBCSC4F",82,0)
 S IBMDT=0 F  S IBMDT=$O(^TMP($J,"IBDX","M",IBMDT)) Q:'IBMDT  D
"RTN","IBCSC4F",83,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX","M",IBMDT,IBI)) Q:'IBI  D
"RTN","IBCSC4F",84,0)
 .. S IBMDX=+$G(^TMP($J,"IBDX","M",IBMDT,IBI)) Q:'IBMDX
"RTN","IBCSC4F",85,0)
 .. ;
"RTN","IBCSC4F",86,0)
 .. S IBMSC=+$P($G(^TMP($J,"IBDX","M",IBMDT)),U,3) ; sc move
"RTN","IBCSC4F",87,0)
 .. I 'IBMSC,$D(IBTMP("DXSC",IBMDX,1,1)) S IBMSC=1 ; first dx on sc move
"RTN","IBCSC4F",88,0)
 .. ;
"RTN","IBCSC4F",89,0)
 .. I +IBMSC S $P(^TMP($J,"IBDX","M",IBMDT,IBI),U,2)=1
"RTN","IBCSC4F",90,0)
 ;
"RTN","IBCSC4F",91,0)
 ; assign SC to Discharge Diagnosis (701):  if stay is SC or first Dx on an SC movement or only on SC movement
"RTN","IBCSC4F",92,0)
 S IBDDT=0 F  S IBDDT=$O(^TMP($J,"IBDX","D",IBDDT)) Q:'IBDDT  D
"RTN","IBCSC4F",93,0)
 . S IBI="" F  S IBI=$O(^TMP($J,"IBDX","D",IBDDT,IBI)) Q:'IBI  D
"RTN","IBCSC4F",94,0)
 .. S IBDDX=+$G(^TMP($J,"IBDX","D",IBDDT,IBI)) Q:'IBDDX
"RTN","IBCSC4F",95,0)
 .. ;
"RTN","IBCSC4F",96,0)
 .. S IBDSC=+$P($G(^TMP($J,"IBDX","D",IBDDT)),U,3) ; sc stay
"RTN","IBCSC4F",97,0)
 .. I 'IBDSC,$D(IBTMP("DXSC",IBDDX,1,1)) S IBDSC=1 ; first dx on sc move
"RTN","IBCSC4F",98,0)
 .. I 'IBDSC,+$O(IBTMP("DXSC",IBDDX,"")) S IBDSC=1 ; on sc move only
"RTN","IBCSC4F",99,0)
 .. ;
"RTN","IBCSC4F",100,0)
 .. I +IBDSC S $P(^TMP($J,"IBDX","D",IBDDT,IBI),U,2)=1
"RTN","IBCSC4F",101,0)
 ;
"RTN","IBCSC4F",102,0)
 Q
"RTN","IBCSC4F",103,0)
 ;
"RTN","IBCSC4F",104,0)
SETPOA(IBIFN) ; get POAs from file 19640.1 and put them into file 362.3
"RTN","IBCSC4F",105,0)
 N DIAG,DIEN,IBPTF,IEN362,ORDER,POASET
"RTN","IBCSC4F",106,0)
 ; ICD-9 only, beginning with ICD-10 DSS will pass POA to PTF
"RTN","IBCSC4F",107,0)
 I $$BDATE^IBACSV(IBIFN)'<$$CSVDATE^IBACSV(30) Q
"RTN","IBCSC4F",108,0)
 ; get PTF ien
"RTN","IBCSC4F",109,0)
 S IBPTF=$P($G(^DGCR(399,IBIFN,0)),U,8) Q:IBPTF=""
"RTN","IBCSC4F",110,0)
 ; loop through all entries in 19640.1 for this PTF
"RTN","IBCSC4F",111,0)
 S DIEN="" F  S DIEN=$O(^DSIPPOA("B",IBPTF,DIEN)) Q:DIEN=""  D
"RTN","IBCSC4F",112,0)
 .S DIAG=$P($G(^DSIPPOA(DIEN,0)),U,3) Q:DIAG=""
"RTN","IBCSC4F",113,0)
 .; loop through all DXes in 362.3 for this claim and try to find a match for 19640.1 entry
"RTN","IBCSC4F",114,0)
 .S POASET=0,ORDER="" F  S ORDER=$O(^IBA(362.3,"AO",IBIFN,ORDER)) Q:ORDER=""!(POASET=1)  D
"RTN","IBCSC4F",115,0)
 ..S IEN362=$O(^IBA(362.3,"AO",IBIFN,ORDER,""))
"RTN","IBCSC4F",116,0)
 ..; if DX in 362.3 matches DX in 19640.1, put proper POA indicator into 362.3 and bail out
"RTN","IBCSC4F",117,0)
 ..; ib*2.0*547  IB no longer uses POA of 1, should be null
"RTN","IBCSC4F",118,0)
 ..;I DIAG=$P($G(^IBA(362.3,IEN362,0)),U) S $P(^IBA(362.3,IEN362,0),U,4)=$P(^DSIPPOA(DIEN,0),U,4),POASET=1
"RTN","IBCSC4F",119,0)
 ..I DIAG=$P($G(^IBA(362.3,IEN362,0)),U) S $P(^IBA(362.3,IEN362,0),U,4)=$S($P(^DSIPPOA(DIEN,0),U,4)=1:"",1:$P(^DSIPPOA(DIEN,0),U,4)),POASET=1
"RTN","IBCSC4F",120,0)
 ..Q 
"RTN","IBCSC4F",121,0)
 .Q
"RTN","IBCSC4F",122,0)
 Q
"RTN","IBCSC4F",123,0)
 ;
"RTN","IBCSC4F",124,0)
MAXECODE(IBIFN) ; returns 1 if there are already 3 Ecode diagnoses on the claim, 0 otherwise
"RTN","IBCSC4F",125,0)
 N IBDATE,IBDX,CNT
"RTN","IBCSC4F",126,0)
 Q:'IBIFN 0
"RTN","IBCSC4F",127,0)
 S CNT=0,IBDX="",IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4F",128,0)
 F  S IBDX=$O(^IBA(362.3,"AIFN"_IBIFN,IBDX))  Q:'IBDX  I $E($$ICD9^IBACSV(IBDX,IBDATE))="E" S CNT=CNT+1
"RTN","IBCSC4F",129,0)
 Q CNT>2
"RTN","IBCSC4F",130,0)
 ;
"RTN","IBCSC4F",131,0)
 ;
"RTN","IBCSC4F",132,0)
PTFDDRG(PTF) ; Returns PTF Discharge DRG (#45, 9) calculated field (clean up DG and ICD variables)
"RTN","IBCSC4F",133,0)
 N IBI,DFN,DGDAT,DGPMAN,DGPMCA,DGPTDAT,DGPTTMP,DGTMP,DGVAR,DRG,DRGCAL,EFFDATE
"RTN","IBCSC4F",134,0)
 N ICD10ORNIT,ICD10ORT,ICD10SDT,ICDCAL,ICDCDSY,ICDCSYS,ICDDATE,ICDDA,ICDIEN,ICDPOA,ICDRG,ICDTMP,ICDX,IMPDATE
"RTN","IBCSC4F",135,0)
 ;
"RTN","IBCSC4F",136,0)
 S IBI="" I +$G(PTF) S IBI=$$GET1^DIQ(45,PTF,9,"")
"RTN","IBCSC4F",137,0)
 Q IBI
"RTN","IBCSC4F",138,0)
 ;
"RTN","IBCSC4F",139,0)
PTFCDS(PTF,TYPE,NODE,PTFARR) ; Get PTF Diagnosis (501, 701) and PTF ICD Procedures (401, 601) Codes   DBIA ICR #6130
"RTN","IBCSC4F",140,0)
 ; returns codes for a single event: Discharge, one Movement, one Procedure or one Surgery
"RTN","IBCSC4F",141,0)
 ; Input:   PTF #, TYPE: 701, 501, 401, 601,  NODE: subfile IEN requested (501, 401, 601)
"RTN","IBCSC4F",142,0)
 ; Output:  PTFARR returned array of Diagnosis or Procedure codes found for event, pass by reference
"RTN","IBCSC4F",143,0)
 ;          PTFARR(x) = Dx IEN ^ POA ^ ... for 701 and 501,  PTFARR(x) =  ICD Prc IEN ^ ... for 401 and 601
"RTN","IBCSC4F",144,0)
 ; 
"RTN","IBCSC4F",145,0)
 N DGPMAN,DGPMCA K PTFARR S PTFARR=0 Q:'$G(PTF)
"RTN","IBCSC4F",146,0)
 S TYPE=$G(TYPE) I TYPE'=401,TYPE'=501,TYPE'=601,TYPE'=701 Q
"RTN","IBCSC4F",147,0)
 S NODE=$G(NODE) I TYPE'=701,'NODE Q
"RTN","IBCSC4F",148,0)
 ;
"RTN","IBCSC4F",149,0)
 D PTFICD^DGPTFUT(TYPE,PTF,NODE,.PTFARR)
"RTN","IBCSC4F",150,0)
 Q
"RTN","IBCSCE")
0^38^B10358004^B9204544
"RTN","IBCSCE",1,0)
IBCSCE ;ALB/MRL,MJB - MCCR SCREEN EDITS ;07 JUN 88 14:35
"RTN","IBCSCE",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,236,245,287,349,371,400,432,447,547**;21-MAR-94;Build 119
"RTN","IBCSCE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSCE",4,0)
 ;
"RTN","IBCSCE",5,0)
 ;MAP TO DGCRSCE
"RTN","IBCSCE",6,0)
 ; always do procedures last because they are edited upon return to screen routine
"RTN","IBCSCE",7,0)
 I IBDR20["54," S IBDR20=$P(IBDR20,"54,",1)_$P(IBDR20,"54,",2)_"54,"
"RTN","IBCSCE",8,0)
 I IBDR20["44," S IBDR20=$P(IBDR20,"44,",1)_$P(IBDR20,"44,",2)_"44,"
"RTN","IBCSCE",9,0)
LOOP N IBDRLP,IBDRL S IBDRLP=IBDR20 F IBDRL=1:1 S IBDR20=$P(IBDRLP,",",IBDRL) Q:IBDR20=""  D EDIT
"RTN","IBCSCE",10,0)
 Q
"RTN","IBCSCE",11,0)
EDIT N IBQUERY
"RTN","IBCSCE",12,0)
 I (IBDR20["31") D MCCR^IBCNSP2 G ENQ
"RTN","IBCSCE",13,0)
 I (IBDR20["43")!(IBDR20["52") D ^IBCSC4D G ENQ
"RTN","IBCSCE",14,0)
 I (IBDR20["74")!(IBDR20["53") K DR N I D ^IBCOPV S (DA,Y)=IBIFN G TMPL
"RTN","IBCSCE",15,0)
 I (IBDR20["54"),$P($G(^IBE(350.9,1,1)),"^",17) K DR N I D EN1^IBCCPT(.IBQUERY) D CLOSE^IBSDU(.IBQUERY) G TMPL ;
"RTN","IBCSCE",16,0)
 I (IBDR20["55") D ^IBCSC5A G ENQ
"RTN","IBCSCE",17,0)
 I (IBDR20["45")!(IBDR20["56") D ^IBCSC5B G ENQ
"RTN","IBCSCE",18,0)
 I (IBDR20["66")!(IBDR20["76") D EDIT^IBCRBE(IBIFN) D ASKCMB^IBCU65(IBIFN) G ENQ
"RTN","IBCSCE",19,0)
 I IBDR20["102",$$FT^IBCEF(IBIFN)=3 D EN^IBCSC10B G ENQ   ; UB-04 patient reason for visit (screen 10, section 2)
"RTN","IBCSCE",20,0)
 I IBDR20["105",$$FT^IBCEF(IBIFN)=2 D ^IBCSC10A G ENQ     ; cms-1500 chiropractic data (screen 10, section 5)
"RTN","IBCSCE",21,0)
 ;
"RTN","IBCSCE",22,0)
 ;WCJ;IB*2.0*547
"RTN","IBCSCE",23,0)
 ;I IBDR20["107",$$FT^IBCEF(IBIFN)=3 D EN1^IBCEP6 G ENQ   ; UB-04 provider ID maintenance (screen 10, section 7)
"RTN","IBCSCE",24,0)
 I IBDR20["108",$$FT^IBCEF(IBIFN)=3 D EN1^IBCEP6 G ENQ   ; UB-04 provider ID maintenance (screen 10, section 8)
"RTN","IBCSCE",25,0)
 ;
"RTN","IBCSCE",26,0)
 ;WCJ;IB*2.0*547
"RTN","IBCSCE",27,0)
 ;I IBDR20["109",$$FT^IBCEF(IBIFN)=2 D EN1^IBCEP6 G ENQ   ; cms-1500 provider ID maintenance (screen 10, section 9)
"RTN","IBCSCE",28,0)
 I IBDR20["110",$$FT^IBCEF(IBIFN)=2 D EN1^IBCEP6 G ENQ   ; cms-1500 provider ID maintenance (screen 10, section 10); not a misprint it is screen *10 +section which is 110
"RTN","IBCSCE",29,0)
 ;
"RTN","IBCSCE",30,0)
 F Q=1:1:9 I IBDR20[("11"_Q) D EDIT^IBCSC11 G ENQ     ; IB*2.0*447 BI
"RTN","IBCSCE",31,0)
TMPL N IBFLIAE S IBFLIAE=1 ;to invoke EN^DGREGAED from [IB SCREEN1]
"RTN","IBCSCE",32,0)
 S DR="[IB SCREEN"_IBSR_IBSR1_"]",(DA,Y)=IBIFN,DIE="^DGCR(399,"
"RTN","IBCSCE",33,0)
 D ^DIE K DIE,DR,DLAYGO
"RTN","IBCSCE",34,0)
 I (IBDR20["61")!(IBDR20["71") I +$G(DGRVRCAL) D PROC^IBCU7A(IBIFN,1)
"RTN","IBCSCE",35,0)
 ;
"RTN","IBCSCE",36,0)
ENQ ;
"RTN","IBCSCE",37,0)
 K DIE,DR,IBDR1,IBDR20,DGDRD,DGDRS,DGDRS1,DA
"RTN","IBCSCE",38,0)
 Q
"RTN","IBCSCE",39,0)
 ;
"RTN","IBCSCE",40,0)
 ;called by screen 3 (input template)
"RTN","IBCSCE",41,0)
UPDT F IBDD=0:0 S IBDD=$O(^DPT(DFN,.312,IBDD)) Q:IBDD'>0  S IBI1=^DPT(DFN,.312,IBDD,0) I $D(^DIC(36,+IBI1,0)),$P(^(0),"^",2)'="N" S IBDD(+IBI1)=IBI1
"RTN","IBCSCE",42,0)
 F IBAIC=0:0 S IBAIC=$O(^DGCR(399,IBIFN,"AIC",IBAIC)) Q:IBAIC'>0  I $D(IBDD(IBAIC)) F IBI1="I1","I2","I3" I $D(^DGCR(399,IBIFN,IBI1)),+^(IBI1)=IBAIC,^(IBI1)'=IBDD(IBAIC) S ^DGCR(399,IBIFN,IBI1)=IBDD(IBAIC)
"RTN","IBCSCE",43,0)
 K IBAIC,IBDD,IBI1 Q
"RTN","IBCSCE",44,0)
 ;
"RTN","IBCSCE",45,0)
 ;Edit patient's address using DGREGAED API
"RTN","IBCSCE",46,0)
EDADDR(IBDFN) ;
"RTN","IBCSCE",47,0)
 I $G(IBFLIAE)'=1!(IBDFN=0) Q 0
"RTN","IBCSCE",48,0)
 N IBFL S IBFL(1)=1
"RTN","IBCSCE",49,0)
 N X,Y,DIE,DA,DR,DIDEL,DIW,DIEDA,DG,DICR
"RTN","IBCSCE",50,0)
 D EN^DGREGAED(IBDFN,.IBFL)
"RTN","IBCSCE",51,0)
 Q 1
"RTN","IBCSCE",52,0)
 ;IBCSCE
"RTN","IBCSCP")
0^39^B12277958^B11636365
"RTN","IBCSCP",1,0)
IBCSCP ;ALB/MRL - BILLING SCREEN PROCESSOR ;01 JUN 88 12:00
"RTN","IBCSCP",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,161,266,432,447,547**;21-MAR-94;Build 119
"RTN","IBCSCP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCSCP",4,0)
 ;
"RTN","IBCSCP",5,0)
 ;MAP TO DGCRSCP
"RTN","IBCSCP",6,0)
 ;
"RTN","IBCSCP",7,0)
 D Q1 W !
"RTN","IBCSCP",8,0)
 S IBCSCPP=$S($L(IBV1)>1:"1-"_$L(IBV1),1:1)
"RTN","IBCSCP",9,0)
 F I=$Y:1:20 W !
"RTN","IBCSCP",10,0)
 S IBPOPOUT=0
"RTN","IBCSCP",11,0)
 S (ICDVDT,ICPTVDT)=$$BDATE^IBACSV(IBIFN) ;ICD/CPT version date
"RTN","IBCSCP",12,0)
 ; IB*2.0*447 BI Start
"RTN","IBCSCP",13,0)
 ;W "<RET> to ",$S(+IBSR<10:"CONTINUE",1:"QUIT") W:$S(+IBSR=9&(IBV1'["0"):0,1:'IBV) ", ",IBCSCPP," to EDIT," W " '^N' for screen N, or '^' to QUIT: " R IBSCNN:DTIME S IBCITOUT='$T G Q:'$T I IBSCNN="" S X1=2 G NOMO
"RTN","IBCSCP",14,0)
 W "<RET> to ",$S(+IBSR<11:"CONTINUE",1:"QUIT") W:$S(+IBSR=11&(IBV1'["0"):0,1:'IBV) ", ",IBCSCPP," to EDIT," W " '^N' for screen N, or '^' to QUIT: " R IBSCNN:DTIME S IBCITOUT='$T G Q:'$T I IBSCNN="" S X1=2 G NOMO
"RTN","IBCSCP",15,0)
 ; IB*2.0*447 BI End
"RTN","IBCSCP",16,0)
 G AN:IBSCNN?1"^"1N.N
"RTN","IBCSCP",17,0)
 I IBSCNN?1"^".E S IBPOPOUT=1 G Q
"RTN","IBCSCP",18,0)
 I IBSCNN'?1N.E D ^IBCSCH S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",19,0)
 ;
"RTN","IBCSCP",20,0)
 ; WCJ;IB*2*547;allow more than 9 sections on a screen
"RTN","IBCSCP",21,0)
 ;I IBSCNN?1N1"-"1N S IBDR20=IBSCNN,IBSCNN="" F I=+IBDR20:1:$P(IBDR20,"-",2) S IBSCNN=IBSCNN_I_","
"RTN","IBCSCP",22,0)
 I IBSCNN?1N1"-"1.2N,$P(IBSCNN,"-",2)'>$L(IBV1) S IBDR20=IBSCNN,IBSCNN="" F I=+IBDR20:1:$P(IBDR20,"-",2) S IBSCNN=IBSCNN_I_","
"RTN","IBCSCP",23,0)
 ;
"RTN","IBCSCP",24,0)
 ; IB*2.0*447 BI Start
"RTN","IBCSCP",25,0)
 S IBDR20="" F J=1:1 S I=$P(IBSCNN,",",J) Q:I=""!($L(I)>3)  I I<11 S:I'["-"&(IBDR20'[I_",") IBDR20=IBDR20_I_"," I I["-" S I1=$P(I,"-",1),I2=$P(I,"-",2) F I3=I1:1:I2 S IBDR20=IBDR20_I3_"," I I3>11 Q
"RTN","IBCSCP",26,0)
 ; IB*2.0*447 BI End
"RTN","IBCSCP",27,0)
 S DGDR1="" F J=1:1 S I=$P(IBDR20,",",J) Q:I=""  I '$E(IBV1,I) S DGDR1=DGDR1_(I+(IBSR*10))_","
"RTN","IBCSCP",28,0)
 I DGDR1']"" D ^IBCSCH S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",29,0)
 S IBDR20=DGDR1 D ^IBCSCE S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",30,0)
Q K IBSR,IBVV,VADM,IBVI,IBVO,ICDVDT,ICPTVDT
"RTN","IBCSCP",31,0)
 ;
"RTN","IBCSCP",32,0)
 ; If Ingenix ClaimsManager found some errors and the user is trying
"RTN","IBCSCP",33,0)
 ; to exit from these screens, then capture the user's comments.
"RTN","IBCSCP",34,0)
 ; Exit by time-out or by "^" pop out.
"RTN","IBCSCP",35,0)
 ; Here, it's important to preserve the value of $T since it is
"RTN","IBCSCP",36,0)
 ; being looked at by IBCB.
"RTN","IBCSCP",37,0)
 ;
"RTN","IBCSCP",38,0)
 S IBCIT("SAVE THE VALUE OF $T")=$T       ; save $T
"RTN","IBCSCP",39,0)
 I $$CM^IBCIUT1(IBIFN),$P($G(^IBA(351.9,IBIFN,0)),U,2)=4,($G(IBPOPOUT)!$G(IBCITOUT)) D COMMENT^IBCIUT7(IBIFN,1)
"RTN","IBCSCP",40,0)
 I IBCIT("SAVE THE VALUE OF $T")          ; restore $T
"RTN","IBCSCP",41,0)
 ;
"RTN","IBCSCP",42,0)
Q1 K %DT,C,DGA,DGA1,DGA2,DGAD,DGCC,IBSCNN,IBCSCPP,IBDR20,DGDR1,DGST,DGAAC,DGRCD,IBCPTX,IBCITOUT,IBCIT
"RTN","IBCSCP",43,0)
 K IBA,IBCPT,IBREVC,IBYN,IBZZ,IBABRT,IB,IBDD,IBIDS,IBIR,IBIRN,IBISEX,IBIUTL,IBU,IBUN,IBW,IBWW,DGPT,IBICD,IBHC,IBCC,IBDI,IBDIN,IBDPT,IBUCH
"RTN","IBCSCP",44,0)
 K DIC,DIWF,DIWL,I,I1,I2,I3,J,X,X1,X2,X3,Y,Z,Z1,Z2
"RTN","IBCSCP",45,0)
 Q
"RTN","IBCSCP",46,0)
 ; IB*2.0*447 BI Start
"RTN","IBCSCP",47,0)
NOMO S I=IBSR,J=1 I +IBSR=11 S X=IBSR G NOMO2
"RTN","IBCSCP",48,0)
NOMO1 S I=I+1,J=+$E(IBVV,I),X=I S:J&(+X=11) IBSR=X G NOMO2:+X=11 I J G NOMO1
"RTN","IBCSCP",49,0)
NOMO2 I +IBSR=11&(IBSCNN="") S X1=3,IBSR1=""
"RTN","IBCSCP",50,0)
 S:(+IBSR=10)&(IBSCNN="") IBSR1="" S X=$P($T(@(IBSR1_X)),";;",X1) G @X
"RTN","IBCSCP",51,0)
 Q
"RTN","IBCSCP",52,0)
 ; IB*2.0*447 BI End
"RTN","IBCSCP",53,0)
 ;
"RTN","IBCSCP",54,0)
AN S X=+$E(IBSCNN,2,99),X1=$P($T(@X),";;",2) I X1]"",'$E(IBVV,X) S IBSR1="",X1=2 G NOMO2
"RTN","IBCSCP",55,0)
 ; IB*2.0*447 BI Start
"RTN","IBCSCP",56,0)
 S Z="INVALID SCREEN NUMBER...VALID SCREENS ARE " F I=1:1:11 I '$E(IBVV,I) S Z=Z_I_$S(I<11:",",1:".")
"RTN","IBCSCP",57,0)
 ; IB*2.0*447 BI End
"RTN","IBCSCP",58,0)
 W !,*7 D W H 1 S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",59,0)
W ;I IOST="C-QUME",$L(IBVI)'=2 W Z
"RTN","IBCSCP",60,0)
 W IBVI,Z,IBVO
"RTN","IBCSCP",61,0)
 Q
"RTN","IBCSCP",62,0)
1 ;;^IBCSC1;;^IBCSC2
"RTN","IBCSCP",63,0)
2 ;;^IBCSC2;;^IBCSC3
"RTN","IBCSCP",64,0)
3 ;;^IBCSC3;;^IBCSC4
"RTN","IBCSCP",65,0)
4 ;;^IBCSC4;;^IBCSC5
"RTN","IBCSCP",66,0)
5 ;;^IBCSC5;;^IBCSC6
"RTN","IBCSCP",67,0)
6 ;;^IBCSC6;;^IBCSC7
"RTN","IBCSCP",68,0)
7 ;;^IBCSC7;;^IBCSC8
"RTN","IBCSCP",69,0)
8 ;;^IBCSC8;;^IBCSC9
"RTN","IBCSCP",70,0)
9 ;;^IBCSC9;;^IBCSC10
"RTN","IBCSCP",71,0)
 ; IB*2.0*447 BI Start
"RTN","IBCSCP",72,0)
10 ;;^IBCSC10;;^IBCSC11
"RTN","IBCSCP",73,0)
210 ;;^IBCSC102;;^IBCSC11
"RTN","IBCSCP",74,0)
H10 ;;^IBCSC10H;;^IBCSC11
"RTN","IBCSCP",75,0)
11 ;;^IBCSC11;;Q^IBCSCP
"RTN","IBCSCP",76,0)
 ; IB*2.0*447 BI End
"RTN","IBCSCP",77,0)
PAR ;;^IBCPAR;;^IBCPAR
"RTN","IBCSCP",78,0)
 ;IBCSCP
"RTN","IBCU")
0^40^B86259413^B52974983
"RTN","IBCU",1,0)
IBCU ;ALB/MRL - BILLING UTILITY ROUTINE ;01 JUN 88 12:00
"RTN","IBCU",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,51,191,232,323,320,384,432,547**;21-MAR-94;Build 119
"RTN","IBCU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified..
"RTN","IBCU",4,0)
 ;
"RTN","IBCU",5,0)
 ;MAP TO DGCRU
"RTN","IBCU",6,0)
 ;
"RTN","IBCU",7,0)
ARSTAT ;find status of bill in file 430.3 (ar) return status number
"RTN","IBCU",8,0)
 S IBARST=$$STA^PRCAFN(IBIFN)
"RTN","IBCU",9,0)
 Q
"RTN","IBCU",10,0)
 ;
"RTN","IBCU",11,0)
ARCAT ;Trigger logic to set who's responsible in 399.3 from AR Category
"RTN","IBCU",12,0)
 S X=$P($$CATN^PRCAFN($P(^DGCR(399.3,DA,0),"^",6)),"^",3)
"RTN","IBCU",13,0)
 S:X'="" X=$S("PC"[X:"p",X="N":"o",X="T":"i",1:"")
"RTN","IBCU",14,0)
 Q
"RTN","IBCU",15,0)
 ;
"RTN","IBCU",16,0)
PTF ;Screen for appropriate PTF records
"RTN","IBCU",17,0)
 K IBDD1 S DFN=+$P(^DGCR(399,+DA,0),"^",2) Q:'$D(^DPT(+DFN,0))  S IB05=$P(^(0),"^",1),IB03=$P(^DGCR(399,+DA,0),"^",3)
"RTN","IBCU",18,0)
 S IB01="",IB02=0 F IB02=0:0 S IB01=$O(^DD(45,0,"ID",IB01)) Q:'IB01  S IB02=IB02+1,IBDD(IB02)=^(IB01)
"RTN","IBCU",19,0)
 F IB01=0:0 S IB01=$O(^DGPT("B",+DFN,IB01)) Q:'IB01  I $D(^DGPT(+IB01,0)) S IB04=$P(^(0),"^",2),Y=+IB01 I $P(IB03,".",1)=$P(IB04,".",1) S IBDD1(+Y)="" I $S('$D(X):0,X["?":1,1:0) D PTFW
"RTN","IBCU",20,0)
 G PTFQ:X'["?" I '$O(IBDD1(0)) W !,"Patient has no ACTIVE PTF RECORDS for this event date.",!,"A 'PTF NUMBER' is required for inpatient billing records."
"RTN","IBCU",21,0)
 E  W !!,"Select the appropriate billing record from the above listing by number."
"RTN","IBCU",22,0)
PTFQ W ! K IB01,IB02,IB03,IB04,IB05,IBDD Q
"RTN","IBCU",23,0)
PTFW W !,Y,?15,IB05 F IB02=0:0 S IB02=$O(IBDD(IB02)) Q:'IB02  X IBDD(IB02)
"RTN","IBCU",24,0)
 Q
"RTN","IBCU",25,0)
 ;
"RTN","IBCU",26,0)
AGE ;Input Transform for Condition Code 17
"RTN","IBCU",27,0)
 I X=18 G SEX
"RTN","IBCU",28,0)
 I X=17 S IBC=X,DFN=$P(^DGCR(399,D0,0),"^",2) D DEM^VADPT I VADM(4)<100 W !!,"This patient is only ",VADM(4)," years old!!",!! K IBC Q
"RTN","IBCU",29,0)
 I $D(IBC) S X=IBC
"RTN","IBCU",30,0)
 Q
"RTN","IBCU",31,0)
 ;
"RTN","IBCU",32,0)
SEX ;Input Transform for Condition Code 18
"RTN","IBCU",33,0)
 I X=18 S IBC=X,DFN=$P(^DGCR(399,D0,0),"^",2) D DEM^VADPT I $E(VADM(5))="M" W !!,"This patient is a MALE!! Condition code 18 applies only to FEMALES!!",!! K IBC,X
"RTN","IBCU",34,0)
 I $D(IBC) S X=IBC
"RTN","IBCU",35,0)
 Q
"RTN","IBCU",36,0)
 ;
"RTN","IBCU",37,0)
REV ;Input Transform for Revenue Code
"RTN","IBCU",38,0)
 I X=-1 W !!,"Choose only ACTIVE Revenue Codes!!",!! S D="AC" ;S X="" S X=$O(^DGCR(399.2,"AC",X)) Q:X=""  W !,$P(^DGCR(399.2,X,0),"^",1),?30,$P(^(0),"^",2) K X Q
"RTN","IBCU",39,0)
 I '$D(IBC) I $D(^DGCR(399.2,X,0)) I '$P(^DGCR(399.2,X,0),"^",3) W !!,"Only ACTIVE Revenue Codes may be selected!!",!! K X Q
"RTN","IBCU",40,0)
 Q
"RTN","IBCU",41,0)
 ;
"RTN","IBCU",42,0)
YN S X=$E(X),X=$S(X=1:X,X=0:X,X="Y":1,X="y":1,X="n":0,X="N":0,1:2) I X'=2 D EN^DDIOL("  ("_$S(X:"YES",1:"NO")_")","","?0") Q
"RTN","IBCU",43,0)
 D EN^DDIOL("NOT A VALID CHOICE!","","!?4") K X Q
"RTN","IBCU",44,0)
 Q
"RTN","IBCU",45,0)
 ;
"RTN","IBCU",46,0)
NOPTF ; Input transform for file 399, field 159.5 (NON-VA ADMIT TIME)
"RTN","IBCU",47,0)
 N %DT
"RTN","IBCU",48,0)
 I X>24 K:X'=99 X Q
"RTN","IBCU",49,0)
 I $P($G(^DGCR(399,DA,0)),U,8) K X Q  ; PTF pointer exists 
"RTN","IBCU",50,0)
 S X=$TR(X,"M ") S:X=0 X="12A" S:X<12 X=$TR(X,"A")
"RTN","IBCU",51,0)
 S:X?1N.N&($L(X)<3) Y="."_$E("0",$L(X))_X S:X'?1.2N %DT="TPR",X=DT_"@"_X D:$L(X)>2 ^%DT S X=$E($P(Y,".",2)_"00",1,2)#24 K:Y=-1 X
"RTN","IBCU",52,0)
 Q
"RTN","IBCU",53,0)
 ;
"RTN","IBCU",54,0)
DIS ;Determine Billing Discharge status from PTF
"RTN","IBCU",55,0)
 ;Called from triggers on fields .08 and 161
"RTN","IBCU",56,0)
 N A
"RTN","IBCU",57,0)
 I '$D(^DGCR(399,DA,0)) S X="" G DISQ
"RTN","IBCU",58,0)
 S X=$P(^DGCR(399,DA,0),"^",6) I X=2!(X=3) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
"RTN","IBCU",59,0)
 S X=$P(^DGCR(399,DA,0),"^",8) I $S(X="":1,'$D(^DGPT(X)):1,1:0) S X="" G DISQ
"RTN","IBCU",60,0)
 I '+$G(^DGPT(X,70)) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
"RTN","IBCU",61,0)
 S A=$P($G(^DGCR(399,DA,"U")),"^",2) I A,(A+.24)<+$G(^DGPT(X,70)) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
"RTN","IBCU",62,0)
 S X=+$P($G(^DGPT(X,70)),"^",3)
"RTN","IBCU",63,0)
 I X=1 S X=$O(^DGCR(399.1,"B",$E("DISCHARGED TO HOME OR SELF CARE",1,30),0)) G DISQ
"RTN","IBCU",64,0)
 I X=4 S X=$O(^DGCR(399.1,"B",$E("LEFT AGAINST MEDICAL ADVICE",1,30),0)) G DISQ
"RTN","IBCU",65,0)
 I X=6!(X=7) S X=$O(^DGCR(399.1,"B","EXPIRED",0)) G DISQ
"RTN","IBCU",66,0)
 I X=5!(X=2) S X=$O(^DGCR(399.1,"B",$E("DISCHARGED TO ANOTHER SHORT-TERM GENERAL HOSPITAL",1,30),0)) G DISQ
"RTN","IBCU",67,0)
 S X=""
"RTN","IBCU",68,0)
DISQ Q
"RTN","IBCU",69,0)
 ;
"RTN","IBCU",70,0)
INST ;Ask Institutution address info
"RTN","IBCU",71,0)
 S DIC("DR")="1.01;1.02;1.03;.02;1.04" I $D(^XUSEC("IB SUPERVISOR",DUZ)) S DLAYGO=4
"RTN","IBCU",72,0)
 Q
"RTN","IBCU",73,0)
 ;
"RTN","IBCU",74,0)
PTADD(DFN,MAXL) ; outputs patient address for the trigger on Patient Short Address (399,110)
"RTN","IBCU",75,0)
 N IBX,IBY,IBI,IBDPT S (IBX,IBDPT)="" I $G(MAXL)="PSA" S MAXL=47
"RTN","IBCU",76,0)
 I +$G(DFN) S IBDPT=$G(^DPT(DFN,.11)) F IBI=1:1:4 S IBY=$P(IBDPT,U,IBI) I IBY'="" S IBX=IBX_IBY_","
"RTN","IBCU",77,0)
 I +$P(IBDPT,U,5) S IBY=$P($G(^DIC(5,+$P(IBDPT,U,5),0)),U,2),IBX=IBX_IBY
"RTN","IBCU",78,0)
 I $P(IBDPT,U,12)'="" S IBX=IBX_" "_$P(IBDPT,U,12)
"RTN","IBCU",79,0)
 I +$G(MAXL),$L(IBX)>+MAXL S IBX=""
"RTN","IBCU",80,0)
 Q IBX
"RTN","IBCU",81,0)
 ;
"RTN","IBCU",82,0)
SM ;Flag for printing medicare statment on UB-82
"RTN","IBCU",83,0)
 ;DGSM=0 means figure out which statement, DGSM=1 means no statements
"RTN","IBCU",84,0)
 S DGSM=0 Q
"RTN","IBCU",85,0)
 ;IBCU
"RTN","IBCU",86,0)
 ;
"RTN","IBCU",87,0)
CHGTYP(IBIFN,ARR) ; sets up array of all charge types defined on a bill:  ARR(TYPE, COMPONENT)=""
"RTN","IBCU",88,0)
 N IBI,IBX,IBT K ARR
"RTN","IBCU",89,0)
 I +$O(^DGCR(399,+$G(IBIFN),"RC",0)) S IBI=0 F  S IBI=$O(^DGCR(399,+IBIFN,"RC",IBI))  Q:'IBI  D
"RTN","IBCU",90,0)
 . S IBX=$G(^DGCR(399,+IBIFN,"RC",IBI,0)),IBT=$P(IBX,U,10) I +IBT S ARR(IBT,+$P(IBX,U,12))=""
"RTN","IBCU",91,0)
 Q
"RTN","IBCU",92,0)
 ;
"RTN","IBCU",93,0)
CHGTYPE(IBIFN) ; returns list of charge types on a bill: TYPE ^ TYPE ^ ... ; EXTERNAL TYPE , EXTERNAL TYPE , ...
"RTN","IBCU",94,0)
 N IBAR,IBY,IBS,IBI,IBC,IBJ,IBX
"RTN","IBCU",95,0)
 D CHGTYP($G(IBIFN),.IBAR)
"RTN","IBCU",96,0)
 S (IBX,IBY,IBS)="",IBI=0 F  S IBI=$O(IBAR(IBI)) Q:'IBI  D
"RTN","IBCU",97,0)
 . S IBX=IBX_IBI_U
"RTN","IBCU",98,0)
 . S IBC="INPT" I IBI=1 S IBJ=$O(IBAR(IBI,0)),IBC=$S(IBJ=1:"INST",IBJ=2:"PF",1:"INPT") I +$O(IBAR(IBI,IBJ)) S IBC="INPT"
"RTN","IBCU",99,0)
 . S IBY=IBY_IBS_$S(IBI=1:IBC,IBI=2:"VST",IBI=3:"RX",IBI=4:"CPT",IBI=5:"PI",IBI=6:"DRG",IBI=9:"UN",1:""),IBS=","
"RTN","IBCU",100,0)
 S IBY=IBX_";"_IBY
"RTN","IBCU",101,0)
 Q IBY
"RTN","IBCU",102,0)
 ;
"RTN","IBCU",103,0)
BCHGTYPE(IBIFN) ; returns type of bill and charges: (CLASS (.05): TYPE, TYPE, ...)
"RTN","IBCU",104,0)
 N IBCLASS,IBTYPE,IBY S IBY=""
"RTN","IBCU",105,0)
 S IBCLASS=$P($G(^DGCR(399,+$G(IBIFN),0)),U,5)
"RTN","IBCU",106,0)
 S IBTYPE=$P($$CHGTYPE(+$G(IBIFN)),";",2) I IBTYPE="INPT" S IBTYPE=""
"RTN","IBCU",107,0)
 I +IBCLASS S IBY=$S(IBCLASS<3:"Inpt",1:"Opt") I IBTYPE'="" S IBY=IBY_" ("_IBTYPE_")"
"RTN","IBCU",108,0)
 Q IBY
"RTN","IBCU",109,0)
 ;
"RTN","IBCU",110,0)
CLNSCRN(IBDT,CLIFN) ; screen for a Procedures Associated Clinic  (399, 304, 6), returns true if clinic can be used
"RTN","IBCU",111,0)
 ; clinic must be defined as a 'Clinic' and it must be active on date of procedure
"RTN","IBCU",112,0)
 ;
"RTN","IBCU",113,0)
 N IBCL0,IBCLI,IBX S IBX=0
"RTN","IBCU",114,0)
 S IBCL0=$G(^SC(+$G(CLIFN),0)),IBCLI=$G(^SC(+$G(CLIFN),"I"))
"RTN","IBCU",115,0)
 S IBX=$S($P(IBCL0,U,3)'="C":0,'$G(IBDT):0,'IBCLI:1,+IBCLI>+IBDT:1,'$P(IBCLI,U,2):0,1:$P(IBCLI,U,2)'>IBDT)
"RTN","IBCU",116,0)
 Q IBX
"RTN","IBCU",117,0)
 ;
"RTN","IBCU",118,0)
PRVNUM(IBIFN,IBINS,COB) ; Trigger code (399:122,123,124)
"RTN","IBCU",119,0)
 ; on Primary Secondary/Tertiary Carrier (399:101,102,103)
"RTN","IBCU",120,0)
 ; returns the Provider Number for the Insurance Company
"RTN","IBCU",121,0)
 ;         Hospital Provider Number for prov id in file 355.92
"RTN","IBCU",122,0)
 ;         or Medicare A provider Number (psych/non-psych) if Medicare A
"RTN","IBCU",123,0)
 ;
"RTN","IBCU",124,0)
 ; Input   IBIFN - bill ifn
"RTN","IBCU",125,0)
 ;         IBINS - insurance company ifn (opt)
"RTN","IBCU",126,0)
 ;         COB   - 1 for primary, 2 for secondary, 3 for tertiary
"RTN","IBCU",127,0)
 ;
"RTN","IBCU",128,0)
 N IBX,IBB0,IBBF,IBFT,Z,Z0
"RTN","IBCU",129,0)
 S:'$G(COB) COB=1
"RTN","IBCU",130,0)
 S IBX=$P($G(^DGCR(399,+$G(IBIFN),"M1")),U,COB+1),IBB0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU",131,0)
 I $G(IBINS)="" S IBINS=+$G(^DGCR(399,+$G(IBIFN),"I"_COB))
"RTN","IBCU",132,0)
 G:'IBINS PRVNQ
"RTN","IBCU",133,0)
 ;
"RTN","IBCU",134,0)
 ; OEC - 12/21/05 - If an MRA is being processed into an MRA secondary
"RTN","IBCU",135,0)
 ; claim and the billing provider # already exists, then leave it
"RTN","IBCU",136,0)
 I $G(IBPRCOB),IBX'="" G PRVNQ
"RTN","IBCU",137,0)
 ;
"RTN","IBCU",138,0)
 ;patch 432 enh5:  The IB system shall no longer add the following default Billing Provider Secondary ID to all Medicare Part A (Institutional) general/psychiatric claims:  674499 Psychiatric, 670899 General
"RTN","IBCU",139,0)
 ;I +$G(IBIFN),COB N DA S DA=IBIFN I $$MCRACK^IBCBB3(+IBIFN,$P($G(^DGCR(399,+IBIFN,"TX")),U,5),+COB) S IBX=$$MCRANUM^IBCBB3(+IBIFN) G PRVNQ
"RTN","IBCU",140,0)
 ;
"RTN","IBCU",141,0)
 ; WCJ - 1/17/06 - Some Insurances require certain electronic plan types to have no secondary ID
"RTN","IBCU",142,0)
 ; Check if this plan type requires a blank sec id to go out for this insurance
"RTN","IBCU",143,0)
 N NOSEC S NOSEC=0
"RTN","IBCU",144,0)
 I $D(^DIC(36,IBINS,13)),$G(IBIFN) D
"RTN","IBCU",145,0)
 . N PLAN,PLANTYPE
"RTN","IBCU",146,0)
 . S PLAN=$P($G(^DGCR(399,IBIFN,"I"_COB)),U,18) Q:'PLAN
"RTN","IBCU",147,0)
 . S PLANTYPE=$P($G(^IBA(355.3,PLAN,0)),U,15) Q:'PLANTYPE
"RTN","IBCU",148,0)
 . Q:'$D(^DIC(36,IBINS,13,"B",PLANTYPE))
"RTN","IBCU",149,0)
 . S NOSEC=1,IBX=""
"RTN","IBCU",150,0)
 I NOSEC G PRVNQ
"RTN","IBCU",151,0)
 ;
"RTN","IBCU",152,0)
 ; If using attending/rendering secondary ID, don't do anything
"RTN","IBCU",153,0)
 I $$FT^IBCEF(IBIFN)=2,$$GET1^DIQ(36,IBINS,4.06,"I") G PRVNQ
"RTN","IBCU",154,0)
 I $$FT^IBCEF(IBIFN)=3,$$GET1^DIQ(36,IBINS,4.08,"I") G PRVNQ
"RTN","IBCU",155,0)
 ;
"RTN","IBCU",156,0)
 S IBX=$$FACNUM^IBCEP2B(IBIFN,COB)
"RTN","IBCU",157,0)
 ;
"RTN","IBCU",158,0)
 ; PATCH 432 ENH5:  The IB system shall no longer add a default Billing Provider Secondary ID to a claim.
"RTN","IBCU",159,0)
 ;I IBX="" S IBX=$$GET1^DIQ(350.9,1,1.05)
"RTN","IBCU",160,0)
 ;
"RTN","IBCU",161,0)
PRVNQ Q IBX
"RTN","IBCU",162,0)
 ;
"RTN","IBCU",163,0)
BF() ; Returns ien of billing fac primary id type
"RTN","IBCU",164,0)
 N Z,IBX
"RTN","IBCU",165,0)
 S IBX="",Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,9) S IBX=Z Q
"RTN","IBCU",166,0)
 Q IBX
"RTN","IBCU",167,0)
 ;
"RTN","IBCU",168,0)
BILLPNS(IBIFN) ; Trigger Code that sets all Bill P/S/T Prov# and QUAL (399: .122,123,124,128,129,130)
"RTN","IBCU",169,0)
 ; on Bill Form Type (399:.19)
"RTN","IBCU",170,0)
 N IBDR
"RTN","IBCU",171,0)
 ;
"RTN","IBCU",172,0)
 I +$G(^DGCR(399,+$G(IBIFN),"I1")) S IBDR(399,IBIFN_",",122)=$$PRVNUM(IBIFN,"",1),IBDR(399,IBIFN_",",128)=$$PRVQUAL(IBIFN,"",1)
"RTN","IBCU",173,0)
 I +$G(^DGCR(399,+$G(IBIFN),"I2")) S IBDR(399,IBIFN_",",123)=$$PRVNUM(IBIFN,"",2),IBDR(399,IBIFN_",",129)=$$PRVQUAL(IBIFN,"",2)
"RTN","IBCU",174,0)
 I +$G(^DGCR(399,+$G(IBIFN),"I3")) S IBDR(399,IBIFN_",",124)=$$PRVNUM(IBIFN,"",3),IBDR(399,IBIFN_",",130)=$$PRVQUAL(IBIFN,"",3)
"RTN","IBCU",175,0)
 ;
"RTN","IBCU",176,0)
 I $O(IBDR(0)) D FILE^DIE("","IBDR")
"RTN","IBCU",177,0)
 Q
"RTN","IBCU",178,0)
 ;
"RTN","IBCU",179,0)
PRVQUAL(IBIFN,IBINS,COB) ; Trigger code for Bill P/S/T Prov QUAL (399:128,129,130)
"RTN","IBCU",180,0)
 ; on P/S/T Carrier (399: 101,102,103)
"RTN","IBCU",181,0)
 ; returns the Provider ID QUALIFIER
"RTN","IBCU",182,0)
 ;
"RTN","IBCU",183,0)
 ; Input   IBIFN - bill ifn
"RTN","IBCU",184,0)
 ;         IBINS - insurance company ifn (opt)
"RTN","IBCU",185,0)
 ;         COB   - 1 for primary, 2 for secondary, 3 for tertiary
"RTN","IBCU",186,0)
 ;
"RTN","IBCU",187,0)
 N IBX,IBB0,IBBF,IBFT,Z,Z0
"RTN","IBCU",188,0)
 S:'$G(COB) COB=1
"RTN","IBCU",189,0)
 S IBX=$P($G(^DGCR(399,+$G(IBIFN),"M1")),U,COB+9),IBB0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU",190,0)
 I $G(IBINS)="" S IBINS=+$G(^DGCR(399,+$G(IBIFN),"I"_COB))
"RTN","IBCU",191,0)
 G:'IBINS PRVQUALQ
"RTN","IBCU",192,0)
 ;
"RTN","IBCU",193,0)
 ; If an MRA is being processed into an MRA secondary claim and the
"RTN","IBCU",194,0)
 ; billing provider qualifier already exists, then leave it alone
"RTN","IBCU",195,0)
 I $G(IBPRCOB),IBX'="" G PRVQUALQ
"RTN","IBCU",196,0)
 ;
"RTN","IBCU",197,0)
 ; PATCH 432 ENH5:  The IB system shall no longer add a default Billing Provider Secondary ID to a claim.
"RTN","IBCU",198,0)
 ;I +$G(IBIFN),COB N DA S DA=IBIFN I $$MCRACK^IBCBB3(+IBIFN,$P($G(^DGCR(399,+IBIFN,"TX")),U,5),+COB) S IBX=$$FIND1^DIC(355.97,,"MX","MEDICARE PART A") G PRVQUALQ
"RTN","IBCU",199,0)
 ;
"RTN","IBCU",200,0)
 ; Some Insurances require certain electronic plan types to have no secondary ID
"RTN","IBCU",201,0)
 ; If this is the case, there is no qualifier
"RTN","IBCU",202,0)
 N NOSEC S NOSEC=0
"RTN","IBCU",203,0)
 I $D(^DIC(36,IBINS,13)),$G(IBIFN) D
"RTN","IBCU",204,0)
 . N PLAN,PLANTYPE
"RTN","IBCU",205,0)
 . S PLAN=$P($G(^DGCR(399,IBIFN,"I"_COB)),U,18) Q:'PLAN
"RTN","IBCU",206,0)
 . S PLANTYPE=$P($G(^IBA(355.3,PLAN,0)),U,15) Q:'PLANTYPE
"RTN","IBCU",207,0)
 . Q:'$D(^DIC(36,IBINS,13,"B",PLANTYPE))
"RTN","IBCU",208,0)
 . S NOSEC=1,IBX=""
"RTN","IBCU",209,0)
 I NOSEC G PRVQUALQ
"RTN","IBCU",210,0)
 ;
"RTN","IBCU",211,0)
 ; Leave qualifer blank if sending REND/ATT ID
"RTN","IBCU",212,0)
 I $$FT^IBCEF(IBIFN)=2,$$GET1^DIQ(36,IBINS,4.06,"I") G PRVQUALQ
"RTN","IBCU",213,0)
 I $$FT^IBCEF(IBIFN)=3,$$GET1^DIQ(36,IBINS,4.08,"I") G PRVQUALQ
"RTN","IBCU",214,0)
 ;
"RTN","IBCU",215,0)
 S IBX=$$FACNUM^IBCEP2B(IBIFN,COB,1)
"RTN","IBCU",216,0)
 ;
"RTN","IBCU",217,0)
 I IBX="",$$GET1^DIQ(350.9,1,1.05)=$P($G(^DGCR(399,IBIFN,"M1")),U,COB+1) S IBX=$$FIND1^DIC(355.97,,"MX","1J")
"RTN","IBCU",218,0)
 ;
"RTN","IBCU",219,0)
PRVQUALQ Q IBX
"RTN","IBCU",220,0)
 ;
"RTN","IBCU",221,0)
ACIDS(IBIFN,COB,ENTRY) ; Administrative Contractor IDS
"RTN","IBCU",222,0)
 ; This is called as a screen from fields 140, 142, and 144 in the BILL/CLAIMS file #399
"RTN","IBCU",223,0)
 ; It should only allow types that have previously been defined for this insurance company and
"RTN","IBCU",224,0)
 ; are allowed for this form type.
"RTN","IBCU",225,0)
 ;
"RTN","IBCU",226,0)
 ; Input   IBIFN - bill ifn
"RTN","IBCU",227,0)
 ;         COB   - 1 for primary, 2 for secondary, 3 for tertiary 
"RTN","IBCU",228,0)
 ;         ENTRY - IEN # to the pointed to file corresponding to what the user entered.
"RTN","IBCU",229,0)
 ;
"RTN","IBCU",230,0)
 ; Output 1 or 0, yay or nay, good or evil, jedi or sith ...
"RTN","IBCU",231,0)
 ;
"RTN","IBCU",232,0)
 ; overkill, but why not
"RTN","IBCU",233,0)
 Q:'$G(ENTRY) 0
"RTN","IBCU",234,0)
 Q:'$G(COB) 0
"RTN","IBCU",235,0)
 Q:'$D(IBIFN) 0
"RTN","IBCU",236,0)
 ;
"RTN","IBCU",237,0)
 N IBINSDAT,IBINSCO,IBPLAN,IBPLTYPE,IBPLDAT,IBSPSF,IBINST,IBINSSF
"RTN","IBCU",238,0)
 ;
"RTN","IBCU",239,0)
 ; get insurance company data from bill
"RTN","IBCU",240,0)
 S IBINSDAT=$G(^DGCR(399,IBIFN,"I"_COB))
"RTN","IBCU",241,0)
 Q:'IBINSDAT 0   ; no insurance company
"RTN","IBCU",242,0)
 S IBINSCO=+IBINSDAT
"RTN","IBCU",243,0)
 ;
"RTN","IBCU",244,0)
 ; get the plan
"RTN","IBCU",245,0)
 S IBPLAN=$P(IBINSDAT,U,18)
"RTN","IBCU",246,0)
 Q:'IBPLAN 0    ; no plan
"RTN","IBCU",247,0)
 ;
"RTN","IBCU",248,0)
 ; get the pland data
"RTN","IBCU",249,0)
 S IBPLDAT=$G(^IBA(355.3,IBPLAN,0))
"RTN","IBCU",250,0)
 Q:IBPLDAT="" 0   ; no valid plan
"RTN","IBCU",251,0)
 ;
"RTN","IBCU",252,0)
 ; get the electronic plan type
"RTN","IBCU",253,0)
 S IBPLTYPE=$P(IBPLDAT,U,15)
"RTN","IBCU",254,0)
 Q:IBPLTYPE="" 0   ; no electronic plan type
"RTN","IBCU",255,0)
 ;
"RTN","IBCU",256,0)
 ; at this point, IBPLTYPE="MX" for medicare.  anything else is not medicare (considered commercial for the purpose of this exercise).
"RTN","IBCU",257,0)
 ; we will next be looking to see if this is set up correctly by looking at the correct subfile in the file 36.
"RTN","IBCU",258,0)
 ; subfile 36.015 is for institutional
"RTN","IBCU",259,0)
 ; subfile 36.016 is for professional.
"RTN","IBCU",260,0)
 ;
"RTN","IBCU",261,0)
 ; get the site parameter subfile
"RTN","IBCU",262,0)
 S IBSPSF=$S(IBPLTYPE="MX":81,1:82)
"RTN","IBCU",263,0)
 ;
"RTN","IBCU",264,0)
 ; get the formtype (Instituional or professional)
"RTN","IBCU",265,0)
 S IBINST=$$FT^IBCEF(+IBIFN)=3  ; set IBINST flag=1 if it is institutional.
"RTN","IBCU",266,0)
 ;
"RTN","IBCU",267,0)
 ; get the insurance subfile
"RTN","IBCU",268,0)
 S IBINSSF=$S(IBINST:15,1:16)
"RTN","IBCU",269,0)
 ;
"RTN","IBCU",270,0)
 ; quit if the subfile is not defined
"RTN","IBCU",271,0)
 Q:'$P($G(^DIC(36,IBINSCO,IBINSSF,0)),U,3) 0   ; none set up for this Insurance Company
"RTN","IBCU",272,0)
 ;
"RTN","IBCU",273,0)
 ; get the values in the correct multiple
"RTN","IBCU",274,0)
 N TARGET,ERROR
"RTN","IBCU",275,0)
 D GETS^DIQ(36,IBINSCO_",",IBINSSF_"*","I","TARGET","ERROR")
"RTN","IBCU",276,0)
 Q:'$D(TARGET) 0   ; nothing set up in the site parameters 
"RTN","IBCU",277,0)
 ;
"RTN","IBCU",278,0)
 ; TARGET contains something like this
"RTN","IBCU",279,0)
 ; TARGET(36.015,"1,3,",.01,"I")=5
"RTN","IBCU",280,0)
 ; TARGET(36.015,"1,3,",.02,"I")="TESTID1"
"RTN","IBCU",281,0)
 ; TARGET(36.015,"2,3,",.01,"I")=29
"RTN","IBCU",282,0)
 ; TARGET(36.015,"2,3,",.02,"I")="TESTID2"
"RTN","IBCU",283,0)
 ;
"RTN","IBCU",284,0)
 N SUBFILE
"RTN","IBCU",285,0)
 S SUBFILE="36.0"_IBINSSF
"RTN","IBCU",286,0)
 ;
"RTN","IBCU",287,0)
 ; Now, time to make it more useful.
"RTN","IBCU",288,0)
 N LOOP1,ADMINCON
"RTN","IBCU",289,0)
 S LOOP1="" F  S LOOP1=$O(TARGET(SUBFILE,LOOP1)) Q:LOOP1=""  D
"RTN","IBCU",290,0)
 . Q:'$D(^IBE(350.9,1,IBSPSF,"B",+$G(TARGET(SUBFILE,LOOP1,.01,"I"))))
"RTN","IBCU",291,0)
 . S ADMINCON(TARGET(SUBFILE,LOOP1,.01,"I"))=""
"RTN","IBCU",292,0)
 ;
"RTN","IBCU",293,0)
 ; which leaves us with an array like
"RTN","IBCU",294,0)
 ; ADMINCON(IEN1)=""
"RTN","IBCU",295,0)
 ; ADMINCON(IEN2)=""
"RTN","IBCU",296,0)
 ; of allowable entries. 
"RTN","IBCU",297,0)
 ;
"RTN","IBCU",298,0)
 ; and finally, see if it's allowed.
"RTN","IBCU",299,0)
 ; at this point, it needed to be in the site parameter file for use with this form type (institutional or professional)
"RTN","IBCU",300,0)
 ; and it needed to be in the insurance company file for this type of plan (medicare or commercial)
"RTN","IBCU",301,0)
 Q $S($D(ADMINCON(+ENTRY)):1,1:0)
"RTN","IBCU",302,0)
 ;
"RTN","IBCU",303,0)
ACIDD(IBIFN,COB,ENTRY) ; Administrative Contractor ID Default
"RTN","IBCU",304,0)
 ; This will default the ID based on the valid type entered.
"RTN","IBCU",305,0)
 ; It is called from a trigger on fields 140, 142, and 144 in the BILL/CLAIMS file #399
"RTN","IBCU",306,0)
 ; and triggers fields 141, 143, and 145 
"RTN","IBCU",307,0)
 ;
"RTN","IBCU",308,0)
 ; Input   IBIFN - bill ien
"RTN","IBCU",309,0)
 ;         COB   - 1 for primary, 2 for secondary, 3 for tertiary
"RTN","IBCU",310,0)
 ;         ENTRY - value of triggering field
"RTN","IBCU",311,0)
 ;
"RTN","IBCU",312,0)
 ; Output  Default ID for that Insurance Company or nothing at all
"RTN","IBCU",313,0)
 ;
"RTN","IBCU",314,0)
 ; overkill, but why not
"RTN","IBCU",315,0)
 Q:$G(ENTRY)="" ""
"RTN","IBCU",316,0)
 Q:'$G(COB) ""
"RTN","IBCU",317,0)
 Q:'$G(IBIFN) ""
"RTN","IBCU",318,0)
 ;
"RTN","IBCU",319,0)
 N IBINST,IBINSDAT,IBINSSF,IBACID,IBSFIEN,IBINSCO
"RTN","IBCU",320,0)
 ;
"RTN","IBCU",321,0)
 ; get the form type (institutional or professional)
"RTN","IBCU",322,0)
 S IBINST=$$FT^IBCEF(+IBIFN)=3  ; set IBINST flag=1 if it is institutional.
"RTN","IBCU",323,0)
 ;
"RTN","IBCU",324,0)
 ; get insurance company data from bill
"RTN","IBCU",325,0)
 S IBINSDAT=$G(^DGCR(399,IBIFN,"I"_COB))
"RTN","IBCU",326,0)
 Q:'IBINSDAT ""   ; no insurance company
"RTN","IBCU",327,0)
 S IBINSCO=+IBINSDAT
"RTN","IBCU",328,0)
 ;
"RTN","IBCU",329,0)
 ; get the insurance subfile based on institutional or professional
"RTN","IBCU",330,0)
 S IBINSSF=$S(IBINST:15,1:16)
"RTN","IBCU",331,0)
 ;
"RTN","IBCU",332,0)
 ; quit if the subfile is not defined
"RTN","IBCU",333,0)
 Q:'$P($G(^DIC(36,IBINSCO,IBINSSF,0)),U,4) ""   ; none set up for this Insurance Company
"RTN","IBCU",334,0)
 ;
"RTN","IBCU",335,0)
 ; get the specific entry
"RTN","IBCU",336,0)
 S IBSFIEN=$O(^DIC(36,IBINSCO,IBINSSF,"B",ENTRY,""))
"RTN","IBCU",337,0)
 Q:'IBSFIEN ""
"RTN","IBCU",338,0)
 ;
"RTN","IBCU",339,0)
 S IBACID=$P($G(^DIC(36,IBINSCO,IBINSSF,IBSFIEN,0)),U,2)
"RTN","IBCU",340,0)
 ;
"RTN","IBCU",341,0)
 Q IBACID
"RTN","IBJPS")
0^16^B6490988^B4384435
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461,516,547**;21-MAR-94;Build 119
"RTN","IBJPS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 N DR
"RTN","IBJPS",39,0)
 I IBSET'="" D
"RTN","IBJPS",40,0)
 . ; MRD;IB*2.0*516 - Added TRICARE Pay-To Providers.
"RTN","IBJPS",41,0)
 . ; WCJ;IB*2.0*547 - shifted the numbers down to insert a new one
"RTN","IBJPS",42,0)
 . I IBSET=8 D EN^IBJPS5 Q
"RTN","IBJPS",43,0)
 . I IBSET=11 D EN^IBJPS3(0) Q
"RTN","IBJPS",44,0)
 . I IBSET=12 D EN^IBJPS3(1) Q
"RTN","IBJPS",45,0)
 . ;WCJ;IB*2.0*547 added default Administrative contractors for billing (medicare and commercial)
"RTN","IBJPS",46,0)
 . I IBSET=17 D EN^IBJPS6(1) Q   ; medicare
"RTN","IBJPS",47,0)
 . I IBSET=18 D EN^IBJPS6(2) Q   ; commercial
"RTN","IBJPS",48,0)
 . S DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",49,0)
 . Q
"RTN","IBJPS",50,0)
 ; WCJ;IB*2.0*547 - shifted the number down to insert a new one
"RTN","IBJPS",51,0)
 I IBSET=9,$$ICD9SYS^IBACSV(DT)=30 S $P(DR,";",1)=7.05
"RTN","IBJPS",52,0)
 ;
"RTN","IBJPS",53,0)
 I $G(DR)'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",54,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",55,0)
 Q
"RTN","IBJPS",56,0)
 ;
"RTN","IBJPS",57,0)
 ;WCJ;IB*2.0*547 - cleared the spot for the new #8, added 17 & 18, move 16 to 19.
"RTN","IBJPS",58,0)
 ;gef;IB*2.0*547 - added 20
"RTN","IBJPS",59,0)
1 ;;.09;.13;.14
"RTN","IBJPS",60,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",61,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",62,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",63,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",64,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",65,0)
7 ;;1.33;1.32;1.31;1.27;8.14T;8.15T;8.16T;8.19T
"RTN","IBJPS",66,0)
9 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",67,0)
10 ;;1.01;1.02;1.05
"RTN","IBJPS",68,0)
13 ;;2.08;2.09
"RTN","IBJPS",69,0)
14 ;;11.01
"RTN","IBJPS",70,0)
15 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",71,0)
16 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T;8.17T
"RTN","IBJPS",72,0)
19 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",73,0)
20 ;;52.01;52.02
"RTN","IBJPS",74,0)
 ;
"RTN","IBJPS2")
0^17^B54853458^B45274108
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461,516,547**;21-MAR-94;Build 119
"RTN","IBJPS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0,PTPSTR,BPZZ
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 ; IB patch 349 for UB-04 claim form and parameters
"RTN","IBJPS2",27,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("UB-04 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,33),350.9,1.33),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 S IBLN=$$SET("CMS-1500 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,32),350.9,1.32),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",30,0)
 S IBLN=$$SET("CMS-1500 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,14),350.9,8.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",31,0)
 S IBLN=$$SET("EOB Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,16),350.9,8.16),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",32,0)
 ;
"RTN","IBJPS2",33,0)
 D LEFT(2)
"RTN","IBJPS2",34,0)
 S IBLN=$$SET("UB-04 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",35,0)
 S IBLN=$$SET("CMS-1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("UB-04 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,15),350.9,8.15),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 S IBLN=$$SET("MRA Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,19),350.9,8.19),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",38,0)
 ;
"RTN","IBJPS2",39,0)
 ; VAD - IB*2.0*547 - inserted a new section 8.  Only count activated codes
"RTN","IBJPS2",40,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",41,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,15,"B",Z)) Q:'Z  I $P($G(^DGCR(399.2,Z,0)),U,3)=1 S Z0=Z0+1
"RTN","IBJPS2",42,0)
 S PTPSTR=Z0_" Activated Codes Defined"
"RTN","IBJPS2",43,0)
 S IBLN=$$SET("Printed Claims Rev Code Excl",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",44,0)
 ;
"RTN","IBJPS2",45,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",46,0)
 S Z=$$ICD9SYS^IBACSV(DT)
"RTN","IBJPS2",47,0)
 I Z=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29)_" (ICD-9)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",48,0)
 I Z'=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD7,U,5),350.9,7.05)_" (ICD-10)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",49,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",50,0)
 ;
"RTN","IBJPS2",51,0)
 D LEFT(2)
"RTN","IBJPS2",52,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",53,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",54,0)
 ;
"RTN","IBJPS2",55,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",56,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",57,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",58,0)
 ;
"RTN","IBJPS2",59,0)
 D LEFT(2)
"RTN","IBJPS2",60,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",61,0)
 ;
"RTN","IBJPS2",62,0)
 D RIGHT(3,1,1) ; - Pay-To Providers - section 11
"RTN","IBJPS2",63,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,19,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,19,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",64,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,3),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z,0),U),1:"")
"RTN","IBJPS2",65,0)
 S IBLN=$$SET("Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",66,0)
 ;
"RTN","IBJPS2",67,0)
 ; MRD;IB*2.0*516 - Added TRICARE Pay-To Providers.
"RTN","IBJPS2",68,0)
 D RIGHT(3,1,1) ; - TRICARE Pay-To Providers - section 12
"RTN","IBJPS2",69,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,29,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,29,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",70,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,4),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z,1),U),1:"")
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("TRICARE Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",72,0)
 ;
"RTN","IBJPS2",73,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",74,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",75,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",76,0)
 ;
"RTN","IBJPS2",77,0)
 ; ePharmacy parameters
"RTN","IBJPS2",78,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET("HIPPA NCPDP Active Flag",$S($P(IBPD11,U)=1:"Active",1:"Not Active"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 ;
"RTN","IBJPS2",81,0)
 ; transfer pricing
"RTN","IBJPS2",82,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",83,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",84,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 ;
"RTN","IBJPS2",88,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",89,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",90,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",91,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",92,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",93,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",94,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",95,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",98,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",99,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",100,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",103,0)
 S IBLN=$$SET(" Enable Auto Reg EOB Processing?",$$YN(+$P(IBPD8,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 ;
"RTN","IBJPS2",105,0)
 ; WCJ;IB*2.0*547;administrative contractors medicare
"RTN","IBJPS2",106,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",107,0)
 S Z=+$P($G(^IBE(350.9,1,81,0)),U,4)_" defined"
"RTN","IBJPS2",108,0)
 S IBLN=$$SET("Alt Prim Payer ID Typ-Medicare",Z,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",109,0)
 ;
"RTN","IBJPS2",110,0)
 ; WCJ;IB*2.0*547;administrative contractors commercial
"RTN","IBJPS2",111,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",112,0)
 S Z=+$P($G(^IBE(350.9,1,82,0)),U,4)_" defined"
"RTN","IBJPS2",113,0)
 S IBLN=$$SET("Alt Prim Payer ID Typ-Commercial",Z,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",114,0)
 ;
"RTN","IBJPS2",115,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",116,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",117,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",118,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",119,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",120,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",121,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",122,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",123,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",124,0)
 . Q
"RTN","IBJPS2",125,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",126,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",127,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",128,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",129,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",130,0)
 ;
"RTN","IBJPS2",131,0)
 ; Request For Additional Info patch 547
"RTN","IBJPS2",132,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",133,0)
 S Z=$G(^IBE(350.9,1,52)) S:$P(Z,U)="" $P(Z,U)="No Purge"
"RTN","IBJPS2",134,0)
 S IBLN=$$SET("Days to store 277RFAI Transactions",$P(Z,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",135,0)
 S IBLN=$$SET("Days to wait to purge entry on RFAI Management Worklist",$P(Z,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",136,0)
 Q
"RTN","IBJPS2",137,0)
 ;
"RTN","IBJPS2",138,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",139,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",140,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",141,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",142,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",143,0)
 S LN=LN+1
"RTN","IBJPS2",144,0)
 Q LN
"RTN","IBJPS2",145,0)
 ;
"RTN","IBJPS2",146,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",147,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",148,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",149,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",150,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",151,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",152,0)
 Q
"RTN","IBJPS2",153,0)
 ;
"RTN","IBJPS2",154,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",155,0)
 ;
"RTN","IBJPS2",156,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",157,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",158,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",159,0)
 Q
"RTN","IBJPS2",160,0)
 ;
"RTN","IBJPS2",161,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",162,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",163,0)
 Q
"RTN","IBJPS5")
0^18^B7748441^n/a
"RTN","IBJPS5",1,0)
IBJPS5 ;BP/VAD - IB Site Parameters, Revenue Codes ; 19-AUG-2015
"RTN","IBJPS5",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBJPS5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS5",4,0)
 ;
"RTN","IBJPS5",5,0)
EN ; -- main entry point for IBJP IB REVENUE CODES
"RTN","IBJPS5",6,0)
 D EN^VALM("IBJP IB REVENUE CODES")
"RTN","IBJPS5",7,0)
 Q
"RTN","IBJPS5",8,0)
 ;
"RTN","IBJPS5",9,0)
HDR ; -- header code
"RTN","IBJPS5",10,0)
 S VALMSG=""
"RTN","IBJPS5",11,0)
 Q
"RTN","IBJPS5",12,0)
 ;
"RTN","IBJPS5",13,0)
INIT ; INIT-- init variables and list array
"RTN","IBJPS5",14,0)
 N ERROR,IBCNT,IBLN,IBSTR,REVDATA,RIENS,RVCD,RVDSC
"RTN","IBJPS5",15,0)
 ;
"RTN","IBJPS5",16,0)
 S (VALMCNT,IBCNT,IBLN)=0
"RTN","IBJPS5",17,0)
 I $D(^IBE(350.9,1,15,"B")) D
"RTN","IBJPS5",18,0)
 . S RVCD=0 F  S RVCD=$O(^IBE(350.9,1,15,"B",RVCD)) Q:'RVCD  D
"RTN","IBJPS5",19,0)
 . . ;
"RTN","IBJPS5",20,0)
 . . S RIENS=RVCD_","
"RTN","IBJPS5",21,0)
 . . D GETS^DIQ(399.2,RIENS,".01;1;2","I","REVDATA","ERROR")
"RTN","IBJPS5",22,0)
 . . ; do not included *RESERVED codes (must be ACTIVATE = 1 for Activated)
"RTN","IBJPS5",23,0)
 . . Q:$G(REVDATA(399.2,RIENS,2,"I"))'=1
"RTN","IBJPS5",24,0)
 . . S IBCNT=IBCNT+1
"RTN","IBJPS5",25,0)
 . . S IBSTR=$$SETSTR^VALM1($J(IBCNT,4)_".","",2,6)
"RTN","IBJPS5",26,0)
 . . S IBSTR=$$SETSTR^VALM1($J($G(REVDATA(399.2,RIENS,.01,"I")),3),IBSTR,10,4)
"RTN","IBJPS5",27,0)
 . . S IBSTR=$$SETSTR^VALM1($G(REVDATA(399.2,RIENS,1,"I")),IBSTR,17,30)
"RTN","IBJPS5",28,0)
 . . S IBLN=$$SET(IBLN,IBSTR)
"RTN","IBJPS5",29,0)
 . . S @VALMAR@("ZIDX",IBCNT,$G(REVDATA(399.2,RIENS,.01,"I")))=""
"RTN","IBJPS5",30,0)
 . . Q
"RTN","IBJPS5",31,0)
 ;
"RTN","IBJPS5",32,0)
 I 'IBLN S IBLN=$$SET(IBLN,$$SETSTR^VALM1("No Revenue Codes defined.","",13,40))
"RTN","IBJPS5",33,0)
 ;
"RTN","IBJPS5",34,0)
 S VALMCNT=IBLN,VALMBG=1
"RTN","IBJPS5",35,0)
 Q
"RTN","IBJPS5",36,0)
 ;
"RTN","IBJPS5",37,0)
HELP ; -- help code
"RTN","IBJPS5",38,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS5",39,0)
 Q
"RTN","IBJPS5",40,0)
 ;
"RTN","IBJPS5",41,0)
EXIT ; -- exit code
"RTN","IBJPS5",42,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBJPS5",43,0)
 Q
"RTN","IBJPS5",44,0)
 ;
"RTN","IBJPS5",45,0)
RCADD ; -- Add a new Revenue Code
"RTN","IBJPS5",46,0)
 N X,Y,DIE,DR,DIR,DIRUT,DUOUT,DTOUT,ERRMSG,FDA,RETIEN
"RTN","IBJPS5",47,0)
 ;
"RTN","IBJPS5",48,0)
 S VALMBCK="R"
"RTN","IBJPS5",49,0)
 D FULL^VALM1
"RTN","IBJPS5",50,0)
 D RCADD1,INIT
"RTN","IBJPS5",51,0)
 Q
"RTN","IBJPS5",52,0)
 ;
"RTN","IBJPS5",53,0)
RCADD1 ; Looping tag for Adding Revenue Codes
"RTN","IBJPS5",54,0)
 K FDA,RETIEN,ERRMSG,X
"RTN","IBJPS5",55,0)
 ;
"RTN","IBJPS5",56,0)
 S DIR(0)="350.9399,.01"
"RTN","IBJPS5",57,0)
 S DIR("A")="Revenue Code"
"RTN","IBJPS5",58,0)
 D ^DIR
"RTN","IBJPS5",59,0)
 Q:'X
"RTN","IBJPS5",60,0)
 ;
"RTN","IBJPS5",61,0)
 I $D(^IBE(350.9,1,15,"B",+Y)) D  G RCADD1
"RTN","IBJPS5",62,0)
 . D FULL^VALM1
"RTN","IBJPS5",63,0)
 . W @IOF
"RTN","IBJPS5",64,0)
 . W !,"This Revenue Code already exists on the Exclusion list."
"RTN","IBJPS5",65,0)
 . W !,"Please enter another Revenue Code."
"RTN","IBJPS5",66,0)
 . Q
"RTN","IBJPS5",67,0)
 ;
"RTN","IBJPS5",68,0)
 S FDA(350.9399,"+1,1,",.01)=+Y
"RTN","IBJPS5",69,0)
 D UPDATE^DIE("","FDA","RETIEN","ERRMSG")
"RTN","IBJPS5",70,0)
 G RCADD1
"RTN","IBJPS5",71,0)
 ;
"RTN","IBJPS5",72,0)
RCDEL ; -- Delete a Revenue Code
"RTN","IBJPS5",73,0)
 N DR
"RTN","IBJPS5",74,0)
 D RCDEL1
"RTN","IBJPS5",75,0)
 S VALMBCK="R"
"RTN","IBJPS5",76,0)
 Q
"RTN","IBJPS5",77,0)
 ;
"RTN","IBJPS5",78,0)
RCDEL1 ; Looping tag for deleting Revenue Codes
"RTN","IBJPS5",79,0)
 N Z,VALMY
"RTN","IBJPS5",80,0)
 D FULL^VALM1
"RTN","IBJPS5",81,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS5",82,0)
 S Z=0
"RTN","IBJPS5",83,0)
 F  S Z=$O(VALMY(Z)) Q:'Z  D
"RTN","IBJPS5",84,0)
 . N DIK,IEN,RIEN
"RTN","IBJPS5",85,0)
 . S IEN=$O(@VALMAR@("ZIDX",Z,""))
"RTN","IBJPS5",86,0)
 . S RIEN=$O(^IBE(350.9,1,15,"B",IEN,""))
"RTN","IBJPS5",87,0)
 . I +RIEN S DIK="^IBE(350.9,1,15,",DA(1)=1,DA=RIEN D ^DIK
"RTN","IBJPS5",88,0)
 K @VALMAR
"RTN","IBJPS5",89,0)
 D INIT
"RTN","IBJPS5",90,0)
 ;D RE^VALM4
"RTN","IBJPS5",91,0)
 Q
"RTN","IBJPS5",92,0)
 ;
"RTN","IBJPS5",93,0)
SET(IBLN,IBSTR) ; -- Add a line to display list
"RTN","IBJPS5",94,0)
 ; returns line number added
"RTN","IBJPS5",95,0)
 S IBLN=IBLN+1 D SET^VALM10(IBLN,IBSTR,IBLN)
"RTN","IBJPS5",96,0)
 Q IBLN
"RTN","IBJPS5",97,0)
 ;
"RTN","IBJPS6")
0^23^B107465430^n/a
"RTN","IBJPS6",1,0)
IBJPS6 ;ALB/WCJ - IB Site Parameters, Administrative Contractors ; 27-AUG-2015
"RTN","IBJPS6",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBJPS6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPS6",4,0)
 ;;
"RTN","IBJPS6",5,0)
 ;
"RTN","IBJPS6",6,0)
 Q
"RTN","IBJPS6",7,0)
 ;
"RTN","IBJPS6",8,0)
EN(WHICH) ; -- main entry point for IBJP ALT PRIM PAYER ID TYP
"RTN","IBJPS6",9,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",10,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",11,0)
 N TEMPLATE
"RTN","IBJPS6",12,0)
 S TEMPLATE=$S(WHICH=1:"IBJP ADMIN CONTRACTOR MED",1:"IBJP ADMIN CONTRACTOR COM")
"RTN","IBJPS6",13,0)
 D EN^VALM(TEMPLATE)
"RTN","IBJPS6",14,0)
 Q
"RTN","IBJPS6",15,0)
 ;
"RTN","IBJPS6",16,0)
HDR(WHICH) ; -- header code
"RTN","IBJPS6",17,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",18,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",19,0)
 ;
"RTN","IBJPS6",20,0)
 S:WHICH=1 VALMHDR(1)="Medicare"
"RTN","IBJPS6",21,0)
 S:WHICH=2 VALMHDR(1)="Commercial"
"RTN","IBJPS6",22,0)
 Q
"RTN","IBJPS6",23,0)
 ;
"RTN","IBJPS6",24,0)
INIT(WHICH) ; Initialize variables and list array
"RTN","IBJPS6",25,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",26,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",27,0)
 ; Output:  ^TMP("IBJPS6",$J)   - Body lines to display for specified template
"RTN","IBJPS6",28,0)
 K ^TMP("IBJPS6",$J),^TMP($J,"IBJPS6IX")
"RTN","IBJPS6",29,0)
 D BLD(WHICH)
"RTN","IBJPS6",30,0)
 Q
"RTN","IBJPS6",31,0)
 ;
"RTN","IBJPS6",32,0)
BLD(WHICH) ; Build screen array, no variables required for input
"RTN","IBJPS6",33,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",34,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",35,0)
 ; Output:  ^TMP("IBJPS6",$J)   - Body lines to display for specified template
"RTN","IBJPS6",36,0)
 ;
"RTN","IBJPS6",37,0)
 N CNT,ENTRIES,LINE,NAME,NAMEIEN,NODE,NODE0,Z
"RTN","IBJPS6",38,0)
 S VALMCNT=0
"RTN","IBJPS6",39,0)
 S NODE=$S(WHICH=1:81,1:82)
"RTN","IBJPS6",40,0)
 S (Z,CNT)=0
"RTN","IBJPS6",41,0)
 F  D  Q:+Z=0
"RTN","IBJPS6",42,0)
 . S Z=$O(^IBE(350.9,1,NODE,Z))
"RTN","IBJPS6",43,0)
 . Q:+Z=0
"RTN","IBJPS6",44,0)
 . S NODE0=$G(^IBE(350.9,1,NODE,Z,0)),NAMEIEN=+$P(NODE0,U,1)
"RTN","IBJPS6",45,0)
 . I NAMEIEN>0 D
"RTN","IBJPS6",46,0)
 . . S CNT=CNT+1,NAME=$$EXTERNAL^DILFD(350.9_NODE,.01,"",NAMEIEN)
"RTN","IBJPS6",47,0)
 . . I NAME'="" D
"RTN","IBJPS6",48,0)
 . . . S ENTRIES(NAME,CNT)=NAMEIEN,ENTRIES(NAME,CNT,"IEN")=Z
"RTN","IBJPS6",49,0)
 I '$D(ENTRIES) D  Q
"RTN","IBJPS6",50,0)
 . S LINE=$$SETL("","","** No entries found **",29,22)
"RTN","IBJPS6",51,0)
 . S ^TMP("IBJPS6",$J,1,0)=LINE
"RTN","IBJPS6",52,0)
 ;
"RTN","IBJPS6",53,0)
 S NAME=""
"RTN","IBJPS6",54,0)
 F  D  Q:NAME=""
"RTN","IBJPS6",55,0)
 .S NAME=$O(ENTRIES(NAME)) Q:NAME=""
"RTN","IBJPS6",56,0)
 .S Z=0 F  D  Q:Z=""
"RTN","IBJPS6",57,0)
 ..S Z=$O(ENTRIES(NAME,Z)) Q:Z=""
"RTN","IBJPS6",58,0)
 ..S VALMCNT=VALMCNT+1
"RTN","IBJPS6",59,0)
 ..S LINE=$$BLDLN(VALMCNT,NAME,ENTRIES(NAME,Z))
"RTN","IBJPS6",60,0)
 ..D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBJPS6",61,0)
 ..S ^TMP($J,"IBJPS6IX",VALMCNT)=ENTRIES(NAME,Z,"IEN")
"RTN","IBJPS6",62,0)
 ..Q
"RTN","IBJPS6",63,0)
 .Q
"RTN","IBJPS6",64,0)
 Q
"RTN","IBJPS6",65,0)
 ;
"RTN","IBJPS6",66,0)
BLDLN(CTR,NAME,IEN) ; Builds a line to display and insurance
"RTN","IBJPS6",67,0)
 ; Input:   CTR     - Current Line Counter
"RTN","IBJPS6",68,0)
 ;          NAME    - Insurance Company Name
"RTN","IBJPS6",69,0)
 ;          IEN     - IEN of the insurance to be displayed
"RTN","IBJPS6",70,0)
 ; Output:  LINE    - Formatted for settng into the list display
"RTN","IBJPS6",71,0)
 N LINE,XX
"RTN","IBJPS6",72,0)
 S LINE=$$SETSTR^VALM1(CTR,"",1,4)                  ; Entry #
"RTN","IBJPS6",73,0)
 S LINE=$$SETSTR^VALM1(NAME,LINE,6,66)              ; Administrative Contractor Type
"RTN","IBJPS6",74,0)
 Q LINE
"RTN","IBJPS6",75,0)
 ;
"RTN","IBJPS6",76,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBJPS6",77,0)
 ; of the worklist
"RTN","IBJPS6",78,0)
 ; Input:   LINE    - Current line being created
"RTN","IBJPS6",79,0)
 ;          DATA    - Information to be added to the end of the current line
"RTN","IBJPS6",80,0)
 ;          LABEL   - Label to describe the information being added
"RTN","IBJPS6",81,0)
 ;          COL     - Column position in line to add information add
"RTN","IBJPS6",82,0)
 ;          LNG     - Maximum length of data information to include on the line
"RTN","IBJPS6",83,0)
 ; Returns: Line updated with added information
"RTN","IBJPS6",84,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBJPS6",85,0)
 Q LINE
"RTN","IBJPS6",86,0)
 ;
"RTN","IBJPS6",87,0)
HELP(WHICH) ; -- help code
"RTN","IBJPS6",88,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",89,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",90,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS6",91,0)
 Q
"RTN","IBJPS6",92,0)
 ;
"RTN","IBJPS6",93,0)
EXIT(WHICH) ; Exit code
"RTN","IBJPS6",94,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",95,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",96,0)
 K ^TMP("IBJPS6",$J),^TMP($J,"IBJPS6IX")
"RTN","IBJPS6",97,0)
 D CLEAR^VALM1
"RTN","IBJPS6",98,0)
 Q
"RTN","IBJPS6",99,0)
 ;
"RTN","IBJPS6",100,0)
EXPND ; -- expand code
"RTN","IBJPS6",101,0)
 Q
"RTN","IBJPS6",102,0)
 ;
"RTN","IBJPS6",103,0)
ADD(WHICH) ; Listman Protocol Action to add an entry to the specified Site Parameter node
"RTN","IBJPS6",104,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",105,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",106,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FDA,IEN,IENS,INSM,INSMC
"RTN","IBJPS6",107,0)
 N NODE,NAME,NAMEU,NODE0,X,XX,Y,Z,Z1
"RTN","IBJPS6",108,0)
 S NODE=$S(WHICH=1:81,1:82)
"RTN","IBJPS6",109,0)
 S VALMBCK="R"                                  ; Refresh screen on return
"RTN","IBJPS6",110,0)
 Q:'$$LOCK(NODE)                                ; Couldn't lock for adding
"RTN","IBJPS6",111,0)
 D FULL^VALM1
"RTN","IBJPS6",112,0)
 ;
"RTN","IBJPS6",113,0)
 I '$$ENTSEL(NODE,.IENS,WHICH) D  Q           ; Select entry(s) to be added
"RTN","IBJPS6",114,0)
 . S VALMSG="No Primary ID Types selected"
"RTN","IBJPS6",115,0)
 . D UNLOCK(NODE)
"RTN","IBJPS6",116,0)
 ;
"RTN","IBJPS6",117,0)
 ; Add the selected entries into the list
"RTN","IBJPS6",118,0)
 S IEN=""
"RTN","IBJPS6",119,0)
 F  D  Q:IEN=""
"RTN","IBJPS6",120,0)
 . S IEN=$O(IENS(IEN))
"RTN","IBJPS6",121,0)
 . Q:IEN=""
"RTN","IBJPS6",122,0)
 . Q:$$FIND1^DIC("350.9"_NODE,",1,","QX",IEN)   ; don't add it, it's already there. 
"RTN","IBJPS6",123,0)
 . S FDA("350.9"_NODE,"+1,1,",.01)=IEN
"RTN","IBJPS6",124,0)
 . D UPDATE^DIE("","FDA")
"RTN","IBJPS6",125,0)
 D UNLOCK(NODE)                                 ; Unlock the Node
"RTN","IBJPS6",126,0)
 ;
"RTN","IBJPS6",127,0)
 D INIT(WHICH)                                  ; Rebuild list body
"RTN","IBJPS6",128,0)
 S VALMSG="Added Primary ID Types"
"RTN","IBJPS6",129,0)
 Q
"RTN","IBJPS6",130,0)
 ;
"RTN","IBJPS6",131,0)
DEL(WHICH) ; Listman Protocol Action to delete an entry from the specified Site Parameter node
"RTN","IBJPS6",132,0)
 ; Input: WHICH     - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",133,0)
 ;                    2 - Using template IBJP ADMIN CONTRACTOR COM
"RTN","IBJPS6",134,0)
 ;
"RTN","IBJPS6",135,0)
 N CNT,CNT2,DA,DIK,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LIST,NAME
"RTN","IBJPS6",136,0)
 N NODE,NODE0,SELSTR,STR,X,XX,Y,Z,Z1,OTHER,SKIPPED,DELETED
"RTN","IBJPS6",137,0)
 S NODE=$S(WHICH=1:81,1:82)
"RTN","IBJPS6",138,0)
 S OTHER=$S(NODE=82:81,1:82)
"RTN","IBJPS6",139,0)
 S VALMBCK="R"                                  ; Refresh screen on return
"RTN","IBJPS6",140,0)
 Q:'$$LOCK(NODE)                                ; Couldn't lock for deletion
"RTN","IBJPS6",141,0)
 D FULL^VALM1                                    ; Display warning message
"RTN","IBJPS6",142,0)
 S STR=$$SELEVENT(0,"",.SELSTR,1,"IBJPS6IX")
"RTN","IBJPS6",143,0)
 ; 
"RTN","IBJPS6",144,0)
 I STR="" D  Q           ; Select entry(s) to be added
"RTN","IBJPS6",145,0)
 . S VALMSG="No Pimary ID Types selected"
"RTN","IBJPS6",146,0)
 . S VALMBCK="R"  ; resetting this variable which disappeared to refresh screen
"RTN","IBJPS6",147,0)
 . D UNLOCK(NODE)
"RTN","IBJPS6",148,0)
 ;
"RTN","IBJPS6",149,0)
 I STR'="" D
"RTN","IBJPS6",150,0)
 . F Z=1:1:$L(STR,",") D
"RTN","IBJPS6",151,0)
 . . S Z1=$P(STR,",",Z),NODE0=$G(^IBE(350.9,1,NODE,Z1,0))
"RTN","IBJPS6",152,0)
 . . S NAME=$$EXTERNAL^DILFD(350.9_NODE,.01,"",+$P(NODE0,"^",1))
"RTN","IBJPS6",153,0)
 . . S LIST(Z1)=NAME
"RTN","IBJPS6",154,0)
 . . S LIST(Z1,"I")=+NODE0
"RTN","IBJPS6",155,0)
 ;
"RTN","IBJPS6",156,0)
 ; Delete the selected entries from the list
"RTN","IBJPS6",157,0)
 S DA(1)=1,(CNT,CNT2,DA)=0
"RTN","IBJPS6",158,0)
 S SKIPPED=""
"RTN","IBJPS6",159,0)
 F  S DA=$O(LIST(DA)) Q:'DA  D
"RTN","IBJPS6",160,0)
 . I $D(^DIC(36,"AB",LIST(DA,"I")))!($D(^DIC(36,"AD",LIST(DA,"I")))),'$D(^IBE(350.9,1,OTHER,"B",LIST(DA,"I"))) D  Q  ; don't let them delete ones in use
"RTN","IBJPS6",161,0)
 .. S CNT2=CNT2+1
"RTN","IBJPS6",162,0)
 .. S SKIPPED=$S($G(SKIPPED)]"":SKIPPED_",",1:"")_LIST(DA)
"RTN","IBJPS6",163,0)
 .. Q
"RTN","IBJPS6",164,0)
 . S CNT=CNT+1
"RTN","IBJPS6",165,0)
 . S DELETED=$S($G(DELETED)]"":DELETED_",",1:"")_LIST(DA)
"RTN","IBJPS6",166,0)
 . S DIK="^IBE(350.9,"_DA(1)_","_NODE_","
"RTN","IBJPS6",167,0)
 . D ^DIK
"RTN","IBJPS6",168,0)
 S DIR(0)="EA",Z=1
"RTN","IBJPS6",169,0)
 S DIR("A",Z)=" ",Z=Z+1
"RTN","IBJPS6",170,0)
 I STR="" S DIR("A",Z)="No records selected",Z=Z+1
"RTN","IBJPS6",171,0)
 I STR'="" D
"RTN","IBJPS6",172,0)
 . I $D(LIST) D 
"RTN","IBJPS6",173,0)
 . . S Z1=0
"RTN","IBJPS6",174,0)
 . . I CNT D
"RTN","IBJPS6",175,0)
 . . . S DIR("A",Z)="The following "_CNT_" primary ID type"_$S(CNT>1:"s",1:"")_" deleted:",Z=Z+1
"RTN","IBJPS6",176,0)
 . . . S DIR("A",Z)=DELETED,Z=Z+1
"RTN","IBJPS6",177,0)
 . . . Q
"RTN","IBJPS6",178,0)
 . . I CNT2 D
"RTN","IBJPS6",179,0)
 . . . S DIR("A",Z)="The following "_CNT2_" primary ID type"_$S(CNT2>1:"s are",1:" is")_" in use and cannot be deleted:",Z=Z+1
"RTN","IBJPS6",180,0)
 . . . S DIR("A",Z)=SKIPPED,Z=Z+1
"RTN","IBJPS6",181,0)
 . . . S DIR("A",Z)="You must delete the ID from the Insurance Company file first.",Z=Z+1
"RTN","IBJPS6",182,0)
 S DIR("A",Z)=" ",Z=Z+1
"RTN","IBJPS6",183,0)
 S DIR("A")="Press RETURN to continue "
"RTN","IBJPS6",184,0)
 D ^DIR
"RTN","IBJPS6",185,0)
 D UNLOCK(NODE)                                 ; Unlock Site Parameter node
"RTN","IBJPS6",186,0)
 I STR]"" D INIT(WHICH)                                  ; Rebuild list body
"RTN","IBJPS6",187,0)
 Q
"RTN","IBJPS6",188,0)
 ;
"RTN","IBJPS6",189,0)
ENTSEL(NODE,IENS,WHICHF)   ; Selects an entry to be added to the specified Site Parameter Node
"RTN","IBJPS6",190,0)
 ; Input:
"RTN","IBJPS6",191,0)
 ;              NODE      - Site Parameter node where the data resides
"RTN","IBJPS6",192,0)
 ;              IENS      - not really being passed in
"RTN","IBJPS6",193,0)
 ;              WHICHF    - 1 - Using template IBJP ADMIN CONTRACTOR MED
"RTN","IBJPS6",194,0)
 ;                          2 - Using template IBJP ADMIN CONTRACTOR COM 
"RTN","IBJPS6",195,0)
 ; Output:      IENS        - Array of selected IEN(s), "" if not selected
"RTN","IBJPS6",196,0)
 ; Returns:     1           - At least one IEN selected, 0 otherwise
"RTN","IBJPS6",197,0)
 N DA,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,IX,STOP,STOP2,X,XX,Y
"RTN","IBJPS6",198,0)
 N TARGET,ERROR,FDA,FDAIEN,IBSAVEX,SCREEN,IBNODE
"RTN","IBJPS6",199,0)
 K IENS
"RTN","IBJPS6",200,0)
 S IBNODE=$S(WHICHF=1:81,1:82)
"RTN","IBJPS6",201,0)
 S STOP=0
"RTN","IBJPS6",202,0)
 ;
"RTN","IBJPS6",203,0)
 F  D  Q:STOP
"RTN","IBJPS6",204,0)
 . K DIR
"RTN","IBJPS6",205,0)
 . S DIR(0)="355.98,.01O^^S X=$$UP^XLFSTR(X)"   ; "O" is for optional
"RTN","IBJPS6",206,0)
 . S DIR("A")="Enter a Primary ID Type"
"RTN","IBJPS6",207,0)
 . D ^DIR
"RTN","IBJPS6",208,0)
 . I $G(DIRUT) S STOP=1 Q
"RTN","IBJPS6",209,0)
 . K DILIST,FDA,TARGET,ERROR,FDAIEN
"RTN","IBJPS6",210,0)
 . S X=$$UP^XLFSTR(X)
"RTN","IBJPS6",211,0)
 . S IBSAVEX=X
"RTN","IBJPS6",212,0)
 . S SCREEN="I '$D(^IBE(350.9,1,IBNODE,""B"",+Y))"  ; screen out the ones already there.  After all, this is the add action
"RTN","IBJPS6",213,0)
 . D FIND^DIC(355.98,,,"O",X,"*",,SCREEN,,"TARGET","ERROR")  ; looks for an exact match 1st.  If not, then look for partials.
"RTN","IBJPS6",214,0)
 . ;
"RTN","IBJPS6",215,0)
 . ; There was one match but already in the mulitple.  Can't add it if it's already there.
"RTN","IBJPS6",216,0)
 . I +$G(TARGET("DILIST",0))=0,$D(^IBA(355.98,"B",IBSAVEX)) Q
"RTN","IBJPS6",217,0)
 . ;
"RTN","IBJPS6",218,0)
 . ; found one entry in the file that was not in the mutiple already.  see if that's it
"RTN","IBJPS6",219,0)
 . I +$G(TARGET("DILIST",0))=1 D  Q:$G(STOP)  Q:Y
"RTN","IBJPS6",220,0)
 . . W $E($G(TARGET("DILIST",1,1)),$L(IBSAVEX)+1,99) ; only found one so write the rest of it if it was a partial match 
"RTN","IBJPS6",221,0)
 . . K DIR
"RTN","IBJPS6",222,0)
 . . S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK" D ^DIR
"RTN","IBJPS6",223,0)
 . . I $G(DIRUT) S STOP=1 Q
"RTN","IBJPS6",224,0)
 . . ; they said it wasn't the one so STOP if the entered value was an exact match to one in the file.
"RTN","IBJPS6",225,0)
 . . ; Don't if it's not; they may want to add later
"RTN","IBJPS6",226,0)
 . . I 'Y S:IBSAVEX=$G(TARGET("DILIST",1,1)) STOP=1 K TARGET Q
"RTN","IBJPS6",227,0)
 . . S IENS(+$G(TARGET("DILIST",2,1)))=""
"RTN","IBJPS6",228,0)
 . ;
"RTN","IBJPS6",229,0)
 . ; found more than one entry, pick one
"RTN","IBJPS6",230,0)
 . I +$G(TARGET("DILIST",0))>1 D  Q:$G(STOP)  Q:$D(TARGET)
"RTN","IBJPS6",231,0)
 . . F I=1:1:+$G(TARGET("DILIST",0)) W !,I,?3,TARGET("DILIST",1,I)
"RTN","IBJPS6",232,0)
 . . S DIR(0)="NO^1:"_+$G(TARGET("DILIST",0))
"RTN","IBJPS6",233,0)
 . . D ^DIR
"RTN","IBJPS6",234,0)
 . . I $G(DUOUT) S STOP=1 Q  ; ^ out
"RTN","IBJPS6",235,0)
 . . I $G(X) S IENS(+$G(TARGET("DILIST",2,X)))="" Q  ; actually selected one
"RTN","IBJPS6",236,0)
 . . I X="" S:$D(^IBA(355.98,"B",IBSAVEX)) STOP=1 K TARGET Q  ; set STOP if it was already in the file.  
"RTN","IBJPS6",237,0)
 . ;
"RTN","IBJPS6",238,0)
 . ; either found no entries or didn't like the the others.
"RTN","IBJPS6",239,0)
 . I '+$G(TARGET("DILIST",0)) D  Q  ; no matches so add it to 355.98
"RTN","IBJPS6",240,0)
 . . K DIR
"RTN","IBJPS6",241,0)
 . . S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to Add"_$S($D(TARGET):"",1:" '"_IBSAVEX_"'") D ^DIR
"RTN","IBJPS6",242,0)
 . . I $G(DIRUT) S STOP=1 Q
"RTN","IBJPS6",243,0)
 . . I 'Y Q
"RTN","IBJPS6",244,0)
 . . S FDA("355.98","+1,",.01)=IBSAVEX
"RTN","IBJPS6",245,0)
 . . D UPDATE^DIE("ES","FDA","FDAIEN")
"RTN","IBJPS6",246,0)
 . . S IENS(+FDAIEN(1))=""
"RTN","IBJPS6",247,0)
 . ; I had a list but didn't like any of them.  Should I add?
"RTN","IBJPS6",248,0)
 .
"RTN","IBJPS6",249,0)
 ;
"RTN","IBJPS6",250,0)
 I '$D(IENS) Q 0                                ; No IENS selected
"RTN","IBJPS6",251,0)
 Q 1
"RTN","IBJPS6",252,0)
 ;
"RTN","IBJPS6",253,0)
LOCK(NODE)  ;EP
"RTN","IBJPS6",254,0)
 ; Attempt to lock the Site Parameter node that is being worked
"RTN","IBJPS6",255,0)
 ; Input:   NODE        - Site Parameter node where the data resides
"RTN","IBJPS6",256,0)
 ; Returns: 1           - Successfully locked
"RTN","IBJPS6",257,0)
 ;          0           - Not successfully locked and an error message is
"RTN","IBJPS6",258,0)
 ;                        displayed
"RTN","IBJPS6",259,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,TEXT,X,Y
"RTN","IBJPS6",260,0)
 L +^IBE(350.9,1,NODE):1
"RTN","IBJPS6",261,0)
 I '$T D  Q 0
"RTN","IBJPS6",262,0)
 . S:NODE=81 TEXT="Medicare Primary ID Types"
"RTN","IBJPS6",263,0)
 . S:NODE=82 TEXT="Commercial Primary ID Types"
"RTN","IBJPS6",264,0)
 . W @IOF,"Someone else is editing the "_TEXT
"RTN","IBJPS6",265,0)
 . W !,"Please Try again later"
"RTN","IBJPS6",266,0)
 . D PAUSE^VALM1
"RTN","IBJPS6",267,0)
 Q 1
"RTN","IBJPS6",268,0)
 ;
"RTN","IBJPS6",269,0)
UNLOCK(NODE) ;EP
"RTN","IBJPS6",270,0)
 ; Unlocks the Site Parameter node that is being worked
"RTN","IBJPS6",271,0)
 ; Input:   NODE        - Site Parameter node where the data resides
"RTN","IBJPS6",272,0)
 L -^IBE(350.9,1,NODE)
"RTN","IBJPS6",273,0)
 Q
"RTN","IBJPS6",274,0)
 ;
"RTN","IBJPS6",275,0)
SELEVENT(FULL,PROMPT,DLINE,MULT,WLIST)    ; Select Entry(s) to perform an action upon
"RTN","IBJPS6",276,0)
 ; Input:   FULL                - 1 - full screen mode, 0 otherwise
"RTN","IBJPS6",277,0)
 ;          PROMPT              - Prompt to be displayed to the user
"RTN","IBJPS6",278,0)
 ;          MULT                - 1 to allow multiple entry selection
"RTN","IBJPS6",279,0)
 ;                                0 to only allow single entry selection
"RTN","IBJPS6",280,0)
 ;                                Optional, defaults to 0
"RTN","IBJPS6",281,0)
 ;          WLIST               - Worklist, the user is selecting from
"RTN","IBJPS6",282,0)
 ;                                Set to 'IBTRH5IX' when called from the
"RTN","IBJPS6",283,0)
 ;                                response worklist.
"RTN","IBJPS6",284,0)
 ;                                Optional, defaults to 'IBTRH1IX' 
"RTN","IBJPS6",285,0)
 ;          ^TMP($J,"IBJPS6IX") - Index of displayed lines of the HCSR Worklist
"RTN","IBJPS6",286,0)
 ;                                Only used if WLIST is not 'IBJPS6IX"
"RTN","IBJPS6",287,0)
 ; Output:  DLINE               - Comma delimitted list of Line #(s) of the 
"RTN","IBJPS6",288,0)
 ;                                selected entries
"RTN","IBJPS6",289,0)
 ; Returns: EIN(s) - Comma delimitted string or IENS for the selected entry(s)
"RTN","IBJPS6",290,0)
 ;          Error message and "" IENS if multi-selection and not allowed
"RTN","IBJPS6",291,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,EIEN,EIENS,IX,VALMY,X,Y
"RTN","IBJPS6",292,0)
 S:'$D(WLIST) WLIST="IBJPS6IX"
"RTN","IBJPS6",293,0)
 D:FULL FULL^VALM1
"RTN","IBJPS6",294,0)
 S DLINE=$P($P($G(XQORNOD(0)),"^",4),"=",2)     ; User selection with action
"RTN","IBJPS6",295,0)
 S DLINE=$TR(DLINE,"/\; .",",,,,,")             ; Check for multi-selection
"RTN","IBJPS6",296,0)
 S EIENS=""
"RTN","IBJPS6",297,0)
 ;
"RTN","IBJPS6",298,0)
 I 'MULT,DLINE["," D  Q ""                      ; Invalid multi-selection
"RTN","IBJPS6",299,0)
 . W !,*7,">>>> Only single entry selection is allowed"
"RTN","IBJPS6",300,0)
 . S DLINE=""
"RTN","IBJPS6",301,0)
 . K DIR
"RTN","IBJPS6",302,0)
 . D PAUSE^VALM1
"RTN","IBJPS6",303,0)
 ;
"RTN","IBJPS6",304,0)
 ; Check the user enter their selection(s)
"RTN","IBJPS6",305,0)
 D EN^VALM2($G(XQORNOD(0)),"O")     ; ListMan generic selector
"RTN","IBJPS6",306,0)
 I '$D(VALMY) Q ""
"RTN","IBJPS6",307,0)
 S IX="",DLINE=""
"RTN","IBJPS6",308,0)
 F  D  Q:IX=""
"RTN","IBJPS6",309,0)
 . S IX=$O(VALMY(IX))
"RTN","IBJPS6",310,0)
 . Q:IX=""
"RTN","IBJPS6",311,0)
 . S DLINE=$S(DLINE="":IX,1:DLINE_","_IX)
"RTN","IBJPS6",312,0)
 . S EIEN=$G(^TMP($J,WLIST,IX))
"RTN","IBJPS6",313,0)
 . S EIENS=$S(EIENS="":EIEN,1:EIENS_","_EIEN)
"RTN","IBJPS6",314,0)
 Q EIENS
"RTN","IBJTTC")
0^15^B92801270^B69337757
"RTN","IBJTTC",1,0)
IBJTTC ;ALB/ARH/PJH - TPI AR COMMENT HISTORY ; 3/18/11 2:15pm
"RTN","IBJTTC",2,0)
 ;;2.0;INTEGRATED BILLING;**39,377,431,432,447,547**;21-MAR-94;Build 119
"RTN","IBJTTC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTTC",4,0)
 ;
"RTN","IBJTTC",5,0)
 ; AR Profile of Comments:  This screen prints the following Comments:
"RTN","IBJTTC",6,0)
 ;    Bill Comments (430,98)  - entered during auditing
"RTN","IBJTTC",7,0)
 ;    For each COMMENT Transaction:
"RTN","IBJTTC",8,0)
 ;           Brief Comment (433,5.02)
"RTN","IBJTTC",9,0)
 ;           Transaction Comment (433,86)
"RTN","IBJTTC",10,0)
 ;           Comment (433,41)
"RTN","IBJTTC",11,0)
 ;
"RTN","IBJTTC",12,0)
EN ; -- main entry point for IBJT AR COMMENT HISTORY
"RTN","IBJTTC",13,0)
 D EN^VALM("IBJT AR COMMENT HISTORY")
"RTN","IBJTTC",14,0)
 Q
"RTN","IBJTTC",15,0)
 ;
"RTN","IBJTTC",16,0)
HDR ; -- header code
"RTN","IBJTTC",17,0)
 D HDR^IBJTU1(+IBIFN,+DFN,13)
"RTN","IBJTTC",18,0)
 Q
"RTN","IBJTTC",19,0)
 ;
"RTN","IBJTTC",20,0)
INIT ; -- init variables and list array
"RTN","IBJTTC",21,0)
 K ^TMP("IBJTTC",$J)
"RTN","IBJTTC",22,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTTC",23,0)
 D BLD
"RTN","IBJTTC",24,0)
INITQ Q
"RTN","IBJTTC",25,0)
 ;
"RTN","IBJTTC",26,0)
HELP ; -- help code
"RTN","IBJTTC",27,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTTC",28,0)
 Q
"RTN","IBJTTC",29,0)
 ;
"RTN","IBJTTC",30,0)
EXIT ; -- exit code
"RTN","IBJTTC",31,0)
 K ^TMP("IBJTTC",$J)
"RTN","IBJTTC",32,0)
 D CLEAR^VALM1
"RTN","IBJTTC",33,0)
 Q
"RTN","IBJTTC",34,0)
 ;
"RTN","IBJTTC",35,0)
BLD ;
"RTN","IBJTTC",36,0)
 N CMLN,CMSTR,X,IBCNT,IBZ,IB0,IBI,IBX,IBD,IBDATE,IBDUZ,IBRCT5,IBLN,IBSTR,IBK,IBJ,DIWL,DIWR,DIWF,COM
"RTN","IBJTTC",37,0)
 ; HIPAA 5010
"RTN","IBJTTC",38,0)
 N IB3611,FOUND
"RTN","IBJTTC",39,0)
 ;
"RTN","IBJTTC",40,0)
 S VALMCNT=0,IBLN=0
"RTN","IBJTTC",41,0)
 ;
"RTN","IBJTTC",42,0)
 ; Bill Comments (430,98)
"RTN","IBJTTC",43,0)
 K COM,^UTILITY($J,"W") D BCOM^RCJIBFN2(IBIFN) I $D(COM)>10 D
"RTN","IBJTTC",44,0)
 . S IBSTR="",IBD="AR BILL COMMENTS:" S IBSTR=$$SETLN(IBD,IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",45,0)
 . S IBSTR="",IBSTR=$$SETLN("--------------------------",IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",46,0)
 . ;
"RTN","IBJTTC",47,0)
 . S IBJ="" F  S IBJ=$O(COM(IBJ)) Q:'IBJ  S X=$G(COM(IBJ)) I X'="" S DIWL=1,DIWR=54,DIWF=""  D ^DIWP
"RTN","IBJTTC",48,0)
 . ;
"RTN","IBJTTC",49,0)
 . I $D(^UTILITY($J,"W")) S (IBK,IBCNT)=0 F  S IBK=$O(^UTILITY($J,"W",1,IBK)) Q:'IBK  D
"RTN","IBJTTC",50,0)
 .. S IBD=$G(^UTILITY($J,"W",1,IBK,0)) S IBSTR=$$SETLN(IBD,IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",51,0)
 . K ^UTILITY($J,"W")
"RTN","IBJTTC",52,0)
 ; AR profile of comment transactions  (433: 5.02, 41, 86)
"RTN","IBJTTC",53,0)
 K ^TMP("RCJIB",$J),^UTILITY($J,"W") D TRN^RCJIBFN2(IBIFN)
"RTN","IBJTTC",54,0)
 ;
"RTN","IBJTTC",55,0)
 ;HIPAA 5010 - check if contact data has been added as a comment 
"RTN","IBJTTC",56,0)
 I '$$CONTACT D
"RTN","IBJTTC",57,0)
 .;Check for payer contact data in all entries associated with the bill # (IBIFN)
"RTN","IBJTTC",58,0)
 .S (FOUND,IB3611)=0 F  S IB3611=$O(^IBM(361.1,"B",IBIFN,IB3611)) Q:'IB3611  Q:FOUND  S FOUND=$$EN^RCDPAYER(IB3611)
"RTN","IBJTTC",59,0)
 .Q:'FOUND  ; payer contact data does not exist in any of the EOB entries related to claim
"RTN","IBJTTC",60,0)
 .;Add canned text as a brief comment in file #433 which will serve as a notice that contact data came from 835 ERA
"RTN","IBJTTC",61,0)
 .D ADD^RCDPAYER(IBIFN) ;IA 5549
"RTN","IBJTTC",62,0)
 .;Rebuild AR profile of comment transactions
"RTN","IBJTTC",63,0)
 .K ^TMP("RCJIB",$J),^UTILITY($J,"W") D TRN^RCJIBFN2(IBIFN)
"RTN","IBJTTC",64,0)
 ;
"RTN","IBJTTC",65,0)
 I $D(^TMP("RCJIB",$J)) S IBI="" F  S IBI=$O(^TMP("RCJIB",$J,IBI)) Q:'IBI  D
"RTN","IBJTTC",66,0)
 . S IBX=$G(^TMP("RCJIB",$J,IBI)) I $$STNO^RCJIBFN2(+$P(IBX,U,3))'["COMMENT" Q
"RTN","IBJTTC",67,0)
 . S IBRCT5=$$N5^RCJIBFN1(IBI)
"RTN","IBJTTC",68,0)
 . S IBSTR="",IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",69,0)
 . S IBD=$P(IBX,U,1) S IBSTR=$$SETLN(IBD,IBSTR,2,8)
"RTN","IBJTTC",70,0)
 . S IBD=$$DATE(+$P(IBX,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,14,8)
"RTN","IBJTTC",71,0)
 . S IBD=$P(IBRCT5,U,1) S IBSTR=$$SETLN(IBD,IBSTR,25,30)
"RTN","IBJTTC",72,0)
 . S IBD="FOLLOW-UP DT: "_$$DATE(+$P(IBRCT5,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,57,22)
"RTN","IBJTTC",73,0)
 . S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",74,0)
 .;HIPAA 5010 - check if this comment is contact data
"RTN","IBJTTC",75,0)
 .I $P(IBRCT5,U)["ERA Payer Contact Information" D
"RTN","IBJTTC",76,0)
 ..N CONTACT,PHONE,FAX,EMAIL,WEB,NAME,EXT,PAYER,HAVPAYER
"RTN","IBJTTC",77,0)
 ..;Display contact data IA 5549
"RTN","IBJTTC",78,0)
 ..; primary, secondary, and tertiary contact data need to be displayed.  Display of contact data
"RTN","IBJTTC",79,0)
 ..; should only occur for each unique payer at BILL (B) x-ref of IBM(361.1,"B",IBIFN). 
"RTN","IBJTTC",80,0)
 ..; evaluation starts with the most recent entry.
"RTN","IBJTTC",81,0)
 ..; Contact data belonging to more than one payer can be distinguished by payer name
"RTN","IBJTTC",82,0)
 ..S (HAVPAYER,IB3611)=""
"RTN","IBJTTC",83,0)
 ..F  S IB3611=$O(^IBM(361.1,"B",IBIFN,IB3611),-1) Q:'IB3611  S CONTACT=$$EN^RCDPAYER(IB3611) D
"RTN","IBJTTC",84,0)
 ...Q:'CONTACT
"RTN","IBJTTC",85,0)
 ...S PAYER=$P($G(^IBM(361.1,IB3611,0)),U,2),PAYER=$$EXTERNAL^DILFD(361.1,.02,,PAYER) ;IA 4051
"RTN","IBJTTC",86,0)
 ...Q:PAYER=HAVPAYER  ; payer contact data has already been displayed
"RTN","IBJTTC",87,0)
 ...S HAVPAYER=PAYER
"RTN","IBJTTC",88,0)
 ...S FAX=$P(CONTACT,U,5),EMAIL=$P(CONTACT,U,6),WEB=$P(CONTACT,U,3)
"RTN","IBJTTC",89,0)
 ...S PHONE=$P(CONTACT,U,4),EXT=$P(CONTACT,U,7),NAME=$P(CONTACT,U,2)
"RTN","IBJTTC",90,0)
 ...S IBD="Payer Name: "_PAYER
"RTN","IBJTTC",91,0)
 ...S IBSTR=$$SETLN(IBD,IBSTR,25,78)
"RTN","IBJTTC",92,0)
 ...S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",93,0)
 ...I NAME]"" D
"RTN","IBJTTC",94,0)
 ....S IBD="Contact Name: "_NAME
"RTN","IBJTTC",95,0)
 ....S IBSTR=$$SETLN(IBD,IBSTR,25,78)
"RTN","IBJTTC",96,0)
 ....S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",97,0)
 ...I PHONE]"" D
"RTN","IBJTTC",98,0)
 ....S IBD="Phone Number: "_PHONE S:EXT]"" IBD=IBD_" Ext: "_EXT
"RTN","IBJTTC",99,0)
 ....S IBSTR=$$SETLN(IBD,IBSTR,25,78)
"RTN","IBJTTC",100,0)
 ....S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",101,0)
 ...I FAX]"" D
"RTN","IBJTTC",102,0)
 ....S IBD="Facsimile Number: "_FAX
"RTN","IBJTTC",103,0)
 ....S IBSTR=$$SETLN(IBD,IBSTR,25,78)
"RTN","IBJTTC",104,0)
 ....S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",105,0)
 ...I EMAIL]"" D
"RTN","IBJTTC",106,0)
 ....S IBD="Email Address: "_EMAIL
"RTN","IBJTTC",107,0)
 ....S IBSTR=$$SETLN(IBD,IBSTR,25,78)
"RTN","IBJTTC",108,0)
 ....S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",109,0)
 ...I WEB]"" D
"RTN","IBJTTC",110,0)
 ....S IBD="Website Address:"_$E(WEB,1,40)
"RTN","IBJTTC",111,0)
 ....S IBSTR=$$SETLN(IBD,IBSTR,25,78)
"RTN","IBJTTC",112,0)
 ....S IBLN=$$SET(IBSTR,IBLN),IBSTR="" Q:$L(WEB)<41
"RTN","IBJTTC",113,0)
 ....S IBSTR=$$SETLN($E(WEB,41,96),IBSTR,25,78)
"RTN","IBJTTC",114,0)
 ....S IBLN=$$SET(IBSTR,IBLN),IBSTR="" Q:$L(WEB)<97
"RTN","IBJTTC",115,0)
 ....S IBSTR=$$SETLN($E(WEB,97,115),IBSTR,25,78)
"RTN","IBJTTC",116,0)
 ....S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",117,0)
 ...S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",118,0)
 . ;
"RTN","IBJTTC",119,0)
 . ;   -- transaction comments (86)
"RTN","IBJTTC",120,0)
 . S X=$P($G(^TMP("RCJIB",$J,IBI)),U,6) I X'="" S DIWL=1,DIWR=54,DIWF=""  D ^DIWP
"RTN","IBJTTC",121,0)
 . ;
"RTN","IBJTTC",122,0)
 . ;   -- comments  (86 & 41)
"RTN","IBJTTC",123,0)
 . K COM D N7^RCJIBFN1(IBI) I $D(COM)>2 D
"RTN","IBJTTC",124,0)
 .. S IBJ="" F  S IBJ=$O(COM(IBJ)) Q:'IBJ  S X=$G(COM(IBJ)) I X'="" S DIWL=1,DIWR=54,DIWF=""  D ^DIWP
"RTN","IBJTTC",125,0)
 . ;
"RTN","IBJTTC",126,0)
 . I $D(^UTILITY($J,"W")) S (IBK,IBCNT)=0 F  S IBK=$O(^UTILITY($J,"W",1,IBK)) Q:'IBK  D
"RTN","IBJTTC",127,0)
 .. S IBD=$G(^UTILITY($J,"W",1,IBK,0)) S IBSTR=$$SETLN(IBD,IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",128,0)
 . K ^UTILITY($J,"W")
"RTN","IBJTTC",129,0)
 K ^TMP("RCJIB",$J),^UTILITY($J,"W")
"RTN","IBJTTC",130,0)
 ; MRA comments
"RTN","IBJTTC",131,0)
 ; check if we have any comments to display
"RTN","IBJTTC",132,0)
 I $D(^DGCR(399,IBIFN,"TXC","B")) D
"RTN","IBJTTC",133,0)
 .S IBLN=$$SET("",IBLN)
"RTN","IBJTTC",134,0)
 .S IBSTR="",IBSTR=$$SETLN("MRA REQUEST CLAIM COMMENTS",IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",135,0)
 .S IBSTR="",IBSTR=$$SETLN("--------------------------",IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",136,0)
 .; loop through all available comments
"RTN","IBJTTC",137,0)
 .S IBDATE="" F  S IBDATE=$O(^DGCR(399,IBIFN,"TXC","B",IBDATE),-1) Q:IBDATE=""  D
"RTN","IBJTTC",138,0)
 ..S IBZ=$O(^DGCR(399,IBIFN,"TXC","B",IBDATE,"")),IB0=^DGCR(399,IBIFN,"TXC",IBZ,0),IBDUZ=$P(IB0,U,2)
"RTN","IBJTTC",139,0)
 ..;S IBLN=$$SET("",IBLN)
"RTN","IBJTTC",140,0)
 ..S IBSTR=""
"RTN","IBJTTC",141,0)
 ..S IBSTR=$$SETLN($$FMTE^XLFDT(IBDATE,"2Z"),IBSTR,14,8)
"RTN","IBJTTC",142,0)
 ..S IBSTR=$$SETLN($J("Entered by "_$$GET1^DIQ(200,IBDUZ,.01),54),IBSTR,25,54)
"RTN","IBJTTC",143,0)
 ..S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",144,0)
 ..; loop through comment lines
"RTN","IBJTTC",145,0)
 ..S CMLN=0 F  S CMLN=$O(^DGCR(399,IBIFN,"TXC",IBZ,1,CMLN)) Q:CMLN=""  D
"RTN","IBJTTC",146,0)
 ...S X=^DGCR(399,IBIFN,"TXC",IBZ,1,CMLN,0) I X'="" S DIWL=1,DIWR=54,DIWF=""  D ^DIWP
"RTN","IBJTTC",147,0)
 ...Q
"RTN","IBJTTC",148,0)
 ..I $D(^UTILITY($J,"W")) S IBK=0 F  S IBK=$O(^UTILITY($J,"W",1,IBK)) Q:'IBK  D
"RTN","IBJTTC",149,0)
 ...S CMSTR=$G(^UTILITY($J,"W",1,IBK,0)) S IBSTR=$$SETLN(CMSTR,IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",150,0)
 ...Q
"RTN","IBJTTC",151,0)
 ..K ^UTILITY($J,"W")
"RTN","IBJTTC",152,0)
 ..Q
"RTN","IBJTTC",153,0)
 .;D CLEAN^DILF
"RTN","IBJTTC",154,0)
 .Q
"RTN","IBJTTC",155,0)
 ; display RFAI Claim Comments right after MRA REQUEST CLAIM COMMENTS *IB*2.0*547
"RTN","IBJTTC",156,0)
 D RFAIC
"RTN","IBJTTC",157,0)
 D EOBC ; IB*2.0*432
"RTN","IBJTTC",158,0)
 D MDACMTS ; IB*2.0*447 BI
"RTN","IBJTTC",159,0)
 D CLEAN^DILF
"RTN","IBJTTC",160,0)
 ;
"RTN","IBJTTC",161,0)
 I IBLN=0 S IBLN=$$SET("",IBLN),IBLN=$$SET("No Comment Transactions Exist For This Account.",IBLN)
"RTN","IBJTTC",162,0)
 S VALMCNT=IBLN
"RTN","IBJTTC",163,0)
 Q
"RTN","IBJTTC",164,0)
 ;
"RTN","IBJTTC",165,0)
EOBC ; check for new EOB comments IB*2.0*432
"RTN","IBJTTC",166,0)
 I $D(^DGCR(399,IBIFN,"TXC2","B")) D
"RTN","IBJTTC",167,0)
 .S IBLN=$$SET("",IBLN)
"RTN","IBJTTC",168,0)
 .S IBSTR="",IBSTR=$$SETLN("COB MANAGMENT CLAIM COMMENTS",IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",169,0)
 .S IBSTR="",IBSTR=$$SETLN("----------------------------",IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",170,0)
 .; loop through all available comments
"RTN","IBJTTC",171,0)
 .S IBDATE="" F  S IBDATE=$O(^DGCR(399,IBIFN,"TXC2","B",IBDATE),-1) Q:IBDATE=""  D
"RTN","IBJTTC",172,0)
 ..S IBZ=$O(^DGCR(399,IBIFN,"TXC2","B",IBDATE,"")),IB0=^DGCR(399,IBIFN,"TXC2",IBZ,0),IBDUZ=$P(IB0,U,2)
"RTN","IBJTTC",173,0)
 ..;S IBLN=$$SET("",IBLN)
"RTN","IBJTTC",174,0)
 ..S IBSTR=""
"RTN","IBJTTC",175,0)
 ..S IBSTR=$$SETLN($$FMTE^XLFDT(IBDATE,"2Z"),IBSTR,14,8)
"RTN","IBJTTC",176,0)
 ..S IBSTR=$$SETLN($J("Entered by "_$$GET1^DIQ(200,IBDUZ,.01),54),IBSTR,25,54)
"RTN","IBJTTC",177,0)
 ..S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",178,0)
 ..; loop through comment lines
"RTN","IBJTTC",179,0)
 ..S CMLN=0 F  S CMLN=$O(^DGCR(399,IBIFN,"TXC2",IBZ,1,CMLN)) Q:CMLN=""  D
"RTN","IBJTTC",180,0)
 ...S X=^DGCR(399,IBIFN,"TXC2",IBZ,1,CMLN,0) I X'="" S DIWL=1,DIWR=54,DIWF=""  D ^DIWP
"RTN","IBJTTC",181,0)
 ...Q
"RTN","IBJTTC",182,0)
 ..I $D(^UTILITY($J,"W")) S IBK=0 F  S IBK=$O(^UTILITY($J,"W",1,IBK)) Q:'IBK  D
"RTN","IBJTTC",183,0)
 ...S CMSTR=$G(^UTILITY($J,"W",1,IBK,0)) S IBSTR=$$SETLN(CMSTR,IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",184,0)
 ...Q
"RTN","IBJTTC",185,0)
 ..K ^UTILITY($J,"W")
"RTN","IBJTTC",186,0)
 ..Q
"RTN","IBJTTC",187,0)
 .Q
"RTN","IBJTTC",188,0)
 Q
"RTN","IBJTTC",189,0)
 ;
"RTN","IBJTTC",190,0)
CONTACT() ;HIPAA 5010 check for contact data in comments
"RTN","IBJTTC",191,0)
 N FOUND,IBI
"RTN","IBJTTC",192,0)
 S FOUND=0,IBI=""
"RTN","IBJTTC",193,0)
 F  S IBI=$O(^TMP("RCJIB",$J,IBI)) Q:'IBI  D  Q:FOUND
"RTN","IBJTTC",194,0)
 .S IBX=$G(^TMP("RCJIB",$J,IBI)) Q:$$STNO^RCJIBFN2(+$P(IBX,U,3))'["COMMENT"
"RTN","IBJTTC",195,0)
 .S:$P($$N5^RCJIBFN1(IBI),U)["ERA Payer Contact Information" FOUND=1
"RTN","IBJTTC",196,0)
 Q FOUND
"RTN","IBJTTC",197,0)
 ;
"RTN","IBJTTC",198,0)
DATE(X) ; date in external format
"RTN","IBJTTC",199,0)
 N Y S Y="" I +X S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTTC",200,0)
 Q Y
"RTN","IBJTTC",201,0)
 ;
"RTN","IBJTTC",202,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTTC",203,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTTC",204,0)
 Q IBX
"RTN","IBJTTC",205,0)
 ;
"RTN","IBJTTC",206,0)
SET(STR,LN) ; set up TMP array with screen data
"RTN","IBJTTC",207,0)
 S LN=LN+1 D SET^VALM10(LN,STR)
"RTN","IBJTTC",208,0)
SETQ Q LN
"RTN","IBJTTC",209,0)
 ;
"RTN","IBJTTC",210,0)
MDACMTS ; Check for MDA comments, Load for List Manager Screen IB*2.0*447 BI
"RTN","IBJTTC",211,0)
 ; INTEGRATION CONTROL REGISTRATION is contained in DBIA #5696.
"RTN","IBJTTC",212,0)
 D MCOM^PRCAMDA2(IBIFN,.IBLN)
"RTN","IBJTTC",213,0)
 Q
"RTN","IBJTTC",214,0)
 ;
"RTN","IBJTTC",215,0)
RFAIC ; check for new RFAI comments IB*2.0*547 (modeled after EOBC)
"RTN","IBJTTC",216,0)
 ; uses ^IBA(368,"D",$E(X,1,30),DA) PATIENT CONTROL NUMBER [D] cross-reference 
"RTN","IBJTTC",217,0)
 ;
"RTN","IBJTTC",218,0)
 Q:'$D(^IBA(368,"D",IBIFN))
"RTN","IBJTTC",219,0)
 N IBTNI,IBC,IBCLM,IBDUZ,IBDT,IBK,CMSTR,IBSTR,IBZ
"RTN","IBJTTC",220,0)
 ; loop through all available comments
"RTN","IBJTTC",221,0)
 S IBC=0,IBTNI="" F  S IBTNI=$O(^IBA(368,"D",IBIFN,IBTNI)) Q:IBTNI=""  D
"RTN","IBJTTC",222,0)
 .; not all transactions associated with a claim have comments
"RTN","IBJTTC",223,0)
 .Q:'$D(^IBA(368,IBTNI,201))
"RTN","IBJTTC",224,0)
 .; loop through all available comments
"RTN","IBJTTC",225,0)
 .S IBDT="" F  S IBDT=$O(^IBA(368,IBTNI,201,"B",IBDT),-1) Q:IBDT=""  D
"RTN","IBJTTC",226,0)
 ..S IBZ=$O(^IBA(368,IBTNI,201,"B",IBDT,"")),IBDUZ=$P($G(^IBA(368,IBTNI,201,IBZ,0)),U,2),IBC=IBC+1
"RTN","IBJTTC",227,0)
 ..; display header and underline prior to 1st transaction with comment only
"RTN","IBJTTC",228,0)
 ..D:IBC=1
"RTN","IBJTTC",229,0)
 ...S IBLN=$$SET("",IBLN)
"RTN","IBJTTC",230,0)
 ...S IBSTR="",IBSTR=$$SETLN("RFAI CLAIM COMMENTS",IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",231,0)
 ...S IBSTR="",IBSTR=$$SETLN("----------------------------",IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTTC",232,0)
 ..S IBSTR="",IBSTR=$$SETLN($$FMTE^XLFDT(IBDT,"2Z"),IBSTR,14,8),IBSTR=$$SETLN($J("Entered by "_$$GET1^DIQ(200,IBDUZ,.01),54),IBSTR,25,54)
"RTN","IBJTTC",233,0)
 ..S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",234,0)
 ..; loop through comment lines
"RTN","IBJTTC",235,0)
 ..S IBCLM=0 F  S IBCLM=$O(^IBA(368,IBTNI,201,IBZ,1,IBCLM)) Q:IBCLM=""  D
"RTN","IBJTTC",236,0)
 ...S X=$G(^IBA(368,IBTNI,201,IBZ,1,IBCLM,0)) I X'="" S DIWL=1,DIWR=54,DIWF=""  D ^DIWP
"RTN","IBJTTC",237,0)
 ..I $D(^UTILITY($J,"W")) S IBK=0 F  S IBK=$O(^UTILITY($J,"W",1,IBK)) Q:'IBK  D
"RTN","IBJTTC",238,0)
 ...S CMSTR=$G(^UTILITY($J,"W",1,IBK,0)) S IBSTR=$$SETLN(CMSTR,IBSTR,25,54),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTC",239,0)
 ..K ^UTILITY($J,"W")
"RTN","IBJTTC",240,0)
 Q
"RTN","IBJTTC",241,0)
 ;
"RTN","IBRFIHL1")
0^57^B29928361^n/a
"RTN","IBRFIHL1",1,0)
IBRFIHL1 ;TDM/DAL - HL7 Process Incoming EHC_E12 Messages ; 2/22/16 1:46pm
"RTN","IBRFIHL1",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBRFIHL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIHL1",4,0)
 ;
"RTN","IBRFIHL1",5,0)
 ;**Program Description**
"RTN","IBRFIHL1",6,0)
 ;  This routine will process incoming EHC_E12 HL7 messages.  It will
"RTN","IBRFIHL1",7,0)
 ;  parse and file the message into the HEALTH CARE CLAIM RFAI (277)
"RTN","IBRFIHL1",8,0)
 ;  (#368) file.
"RTN","IBRFIHL1",9,0)
 ;
"RTN","IBRFIHL1",10,0)
EN ; Entry Point
"RTN","IBRFIHL1",11,0)
 N AUTO,EBDA,ERFLG,ERROR,HCT,HLCMP,HLREP,HLSCMP,RIEN,SEG,DATA,IBSEG,MSH10
"RTN","IBRFIHL1",12,0)
 N DFNPTR,DFNSSN
"RTN","IBRFIHL1",13,0)
 S ERFLG=0
"RTN","IBRFIHL1",14,0)
 ;
"RTN","IBRFIHL1",15,0)
 S HLCMP=$E(HL("ECH"))        ; HL7 component separator
"RTN","IBRFIHL1",16,0)
 S HLSCMP=$E(HL("ECH"),4)     ; HL7 subcomponent separator
"RTN","IBRFIHL1",17,0)
 S HLREP=$E(HL("ECH"),2)      ; HL7 repetition separator
"RTN","IBRFIHL1",18,0)
 ;
"RTN","IBRFIHL1",19,0)
 ;  Loop through the message and find each segment for processing
"RTN","IBRFIHL1",20,0)
 S HCT="" F  S HCT=$O(^TMP($J,"IBRFIHLI",HCT)) Q:HCT=""  D  Q:ERFLG
"RTN","IBRFIHL1",21,0)
 .D SPAR^IBRFIHLU
"RTN","IBRFIHL1",22,0)
 .S SEG=$G(IBSEG(1))
"RTN","IBRFIHL1",23,0)
 .I SEG="MSH" D MSH^IBRFIHL2(.IBSEG) Q  ;Message Header Seg
"RTN","IBRFIHL1",24,0)
 .I SEG="RFI" D RFI^IBRFIHL2(.IBSEG) Q  ;Request for Info Seg
"RTN","IBRFIHL1",25,0)
 .I SEG="CTD" D CTD^IBRFIHL2(.IBSEG) Q  ;Contact Segment
"RTN","IBRFIHL1",26,0)
 .I SEG="IVC" D IVC^IBRFIHL2(.IBSEG,.DFNPTR,.DFNSSN) Q  ;Invoice Segment
"RTN","IBRFIHL1",27,0)
 .I SEG="PID" D PID^IBRFIHL2(.IBSEG,$G(DFNPTR),$G(DFNSSN)) Q  ;Patient Segment
"RTN","IBRFIHL1",28,0)
 .I SEG="PSL" D PSL^IBRFIHL2(.IBSEG) Q  ;Product/Service Ln Item
"RTN","IBRFIHL1",29,0)
 .I SEG="PYE" D PYE^IBRFIHL2(.IBSEG) Q  ;Payee Info Segment
"RTN","IBRFIHL1",30,0)
 .I SEG="OBX" D OBX^IBRFIHL2(.IBSEG)  ;Observation/Result
"RTN","IBRFIHL1",31,0)
 D FILE
"RTN","IBRFIHL1",32,0)
 Q
"RTN","IBRFIHL1",33,0)
 ;
"RTN","IBRFIHL1",34,0)
FILE ;  File all data.
"RTN","IBRFIHL1",35,0)
 N DO,DIC,X,FLD,IEN368,DIK,DA,DIE,DR,Y,DTOUT,DUOUT,LVL0,LVL1,SID,SID1
"RTN","IBRFIHL1",36,0)
 ;
"RTN","IBRFIHL1",37,0)
 ;Determine Primary LOINC
"RTN","IBRFIHL1",38,0)
 S:$G(OBX013(1,1.02))'="" DATA(368,22.03)=$G(OBX013(1,1.02))
"RTN","IBRFIHL1",39,0)
 S:$G(OBX013(1,1.02))="" DATA(368,22.03)=$G(PSL2199(1,1,1.02))
"RTN","IBRFIHL1",40,0)
 ;*******************************************************************
"RTN","IBRFIHL1",41,0)
 ;The following code has been commented out to avoid performing a
"RTN","IBRFIHL1",42,0)
 ;lookup into the LAB LOINC file (#95.3) because an Integration
"RTN","IBRFIHL1",43,0)
 ;Agreement could not be obtained.
"RTN","IBRFIHL1",44,0)
 ;S VAL=DATA(368,22.03) S VAL=$S(VAL["-":$P(VAL,"-"),1:$E(VAL,1,$L(VAL)-1))
"RTN","IBRFIHL1",45,0)
 ;S IEN=$$FIND1^DIC(95.3,,,VAL) S:IEN>0 DATA(368,122.03)=IEN
"RTN","IBRFIHL1",46,0)
 ;*******************************************************************
"RTN","IBRFIHL1",47,0)
 S VAL=DATA(368,22.03) I VAL'["-" S VAL=$E(VAL,1,$L(VAL)-1)_"-"_$E(VAL,$L(VAL)) S DATA(368,22.03)=VAL
"RTN","IBRFIHL1",48,0)
 ;
"RTN","IBRFIHL1",49,0)
 ;Initialize Deletion Flag
"RTN","IBRFIHL1",50,0)
 S DATA(368,200.01)=0
"RTN","IBRFIHL1",51,0)
 ;
"RTN","IBRFIHL1",52,0)
 ;File 368 data
"RTN","IBRFIHL1",53,0)
 S LSTFLD=$O(DATA(368,""),-1),DIC("DR")=""
"RTN","IBRFIHL1",54,0)
 S FLD=0 F  S FLD=$O(DATA(368,FLD)) Q:FLD=""  D
"RTN","IBRFIHL1",55,0)
 .S DIC("DR")=DIC("DR")_FLD_"////^S X=DATA(368,"_FLD_")"
"RTN","IBRFIHL1",56,0)
 .I FLD'=LSTFLD S DIC("DR")=DIC("DR")_";"
"RTN","IBRFIHL1",57,0)
 K DO
"RTN","IBRFIHL1",58,0)
 S DIC="^IBA(368,",DIC(0)="",X=DATA(368,.01)
"RTN","IBRFIHL1",59,0)
 D FILE^DICN
"RTN","IBRFIHL1",60,0)
 S IEN368=Y
"RTN","IBRFIHL1",61,0)
 K DIC,X,Y,DTOUT,DUOUT
"RTN","IBRFIHL1",62,0)
 ;
"RTN","IBRFIHL1",63,0)
 ;File 368.013 data
"RTN","IBRFIHL1",64,0)
 I $D(OBX013) D
"RTN","IBRFIHL1",65,0)
 .S SID="" F  S SID=$O(OBX013(SID)) Q:SID=""  D
"RTN","IBRFIHL1",66,0)
 ..S LSTFLD=$O(OBX013(SID,""),-1),DIC("DR")=""
"RTN","IBRFIHL1",67,0)
 ..S FLD=0 F  S FLD=$O(OBX013(SID,FLD)) Q:FLD=""  D
"RTN","IBRFIHL1",68,0)
 ...S DIC("DR")=DIC("DR")_FLD_"////^S X=OBX013(SID,"_FLD_")"
"RTN","IBRFIHL1",69,0)
 ...I FLD'=LSTFLD S DIC("DR")=DIC("DR")_";"
"RTN","IBRFIHL1",70,0)
 ..K DO
"RTN","IBRFIHL1",71,0)
 ..S X=SID,DIC="^IBA(368,"_+IEN368_",13,",DIC(0)="L",DA(1)=+IEN368
"RTN","IBRFIHL1",72,0)
 ..D FILE^DICN
"RTN","IBRFIHL1",73,0)
 ..K DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBRFIHL1",74,0)
 ;
"RTN","IBRFIHL1",75,0)
 ;File 368.0113 data
"RTN","IBRFIHL1",76,0)
 I $D(OBX0113) D
"RTN","IBRFIHL1",77,0)
 .S SID="" F  S SID=$O(OBX0113(SID)) Q:SID=""  D
"RTN","IBRFIHL1",78,0)
 ..S LSTFLD=$O(OBX0113(SID,""),-1),DIC("DR")=""
"RTN","IBRFIHL1",79,0)
 ..S FLD=0 F  S FLD=$O(OBX0113(SID,FLD)) Q:FLD=""  D
"RTN","IBRFIHL1",80,0)
 ...S DIC("DR")=DIC("DR")_FLD_"////^S X=OBX0113(SID,"_FLD_")"
"RTN","IBRFIHL1",81,0)
 ...I FLD'=LSTFLD S DIC("DR")=DIC("DR")_";"
"RTN","IBRFIHL1",82,0)
 ..K DO
"RTN","IBRFIHL1",83,0)
 ..S X=SID,DIC="^IBA(368,"_+IEN368_",113,",DIC(0)="L",DA(1)=+IEN368
"RTN","IBRFIHL1",84,0)
 ..D FILE^DICN
"RTN","IBRFIHL1",85,0)
 ..K DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBRFIHL1",86,0)
 ;
"RTN","IBRFIHL1",87,0)
 ;File 368.021 entries
"RTN","IBRFIHL1",88,0)
 I $D(PSL021) D
"RTN","IBRFIHL1",89,0)
 .S SID="" F  S SID=$O(PSL021(SID)) Q:SID=""  D
"RTN","IBRFIHL1",90,0)
 ..S LSTFLD=$O(PSL021(SID,""),-1),DIC("DR")=""
"RTN","IBRFIHL1",91,0)
 ..S FLD="" F  S FLD=$O(PSL021(SID,FLD)) Q:FLD=""  D
"RTN","IBRFIHL1",92,0)
 ...S DIC("DR")=DIC("DR")_FLD_"////^S X=PSL021(SID,"_FLD_")"
"RTN","IBRFIHL1",93,0)
 ...I FLD'=LSTFLD S DIC("DR")=DIC("DR")_";"
"RTN","IBRFIHL1",94,0)
 ..K DO
"RTN","IBRFIHL1",95,0)
 ..S X=SID,DIC="^IBA(368,"_+IEN368_",21,",DIC(0)="L",DA(1)=+IEN368
"RTN","IBRFIHL1",96,0)
 ..D FILE^DICN
"RTN","IBRFIHL1",97,0)
 ..S IEN021=Y
"RTN","IBRFIHL1",98,0)
 ..K DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBRFIHL1",99,0)
 ..;
"RTN","IBRFIHL1",100,0)
 ..;File 368.2199 entries
"RTN","IBRFIHL1",101,0)
 ..I $D(PSL2199) D
"RTN","IBRFIHL1",102,0)
 ...S SID1="" F  S SID1=$O(PSL2199(SID,SID1)) Q:SID1=""  D
"RTN","IBRFIHL1",103,0)
 ....S LSTFLD=$O(PSL2199(SID,SID1,""),-1),DIC("DR")=""
"RTN","IBRFIHL1",104,0)
 ....S FLD="" F  S FLD=$O(PSL2199(SID,SID1,FLD)) Q:FLD=""  D
"RTN","IBRFIHL1",105,0)
 .....S DIC("DR")=DIC("DR")_FLD_"////^S X=PSL2199(SID,SID1,"_FLD_")"
"RTN","IBRFIHL1",106,0)
 .....I FLD'=LSTFLD S DIC("DR")=DIC("DR")_";"
"RTN","IBRFIHL1",107,0)
 ....K DO
"RTN","IBRFIHL1",108,0)
 ....S X=SID1,DIC="^IBA(368,"_+IEN368_",21,"_+IEN021_",99,",DIC(0)="L"
"RTN","IBRFIHL1",109,0)
 ....S DA(1)=+IEN021,DA(2)=+IEN368
"RTN","IBRFIHL1",110,0)
 ....D FILE^DICN
"RTN","IBRFIHL1",111,0)
 ....K DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBRFIHL1",112,0)
 ;
"RTN","IBRFIHL1",113,0)
 ;File 368.0121 entries
"RTN","IBRFIHL1",114,0)
 I $D(PSL0121) D
"RTN","IBRFIHL1",115,0)
 .S SID="" F  S SID=$O(PSL0121(SID)) Q:SID=""  D
"RTN","IBRFIHL1",116,0)
 ..S LSTFLD=$O(PSL0121(SID,""),-1),DIC("DR")=""
"RTN","IBRFIHL1",117,0)
 ..S FLD="" F  S FLD=$O(PSL0121(SID,FLD)) Q:FLD=""  D
"RTN","IBRFIHL1",118,0)
 ...S DIC("DR")=DIC("DR")_FLD_"////^S X=PSL0121(SID,"_FLD_")"
"RTN","IBRFIHL1",119,0)
 ...I FLD'=LSTFLD S DIC("DR")=DIC("DR")_";"
"RTN","IBRFIHL1",120,0)
 ..K DO
"RTN","IBRFIHL1",121,0)
 ..S X=SID,DIC="^IBA(368,"_+IEN368_",121,",DIC(0)="L",DA(1)=+IEN368
"RTN","IBRFIHL1",122,0)
 ..D FILE^DICN
"RTN","IBRFIHL1",123,0)
 ..S IEN0121=Y
"RTN","IBRFIHL1",124,0)
 ..K DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBRFIHL1",125,0)
 ..;
"RTN","IBRFIHL1",126,0)
 ..;File 368.12199 entries
"RTN","IBRFIHL1",127,0)
 ..I $D(PSL12199) D
"RTN","IBRFIHL1",128,0)
 ...S SID1="" F  S SID1=$O(PSL12199(SID,SID1)) Q:SID1=""  D
"RTN","IBRFIHL1",129,0)
 ....S LSTFLD=$O(PSL12199(SID,SID1,""),-1),DIC("DR")=""
"RTN","IBRFIHL1",130,0)
 ....S FLD="" F  S FLD=$O(PSL12199(SID,SID1,FLD)) Q:FLD=""  D
"RTN","IBRFIHL1",131,0)
 .....S DIC("DR")=DIC("DR")_FLD_"////^S X=PSL12199(SID,SID1,"_FLD_")"
"RTN","IBRFIHL1",132,0)
 .....I FLD'=LSTFLD S DIC("DR")=DIC("DR")_";"
"RTN","IBRFIHL1",133,0)
 ....K DO
"RTN","IBRFIHL1",134,0)
 ....S DIC="^IBA(368,"_+IEN368_",121,"_+IEN0121_",99,",DIC(0)="L"
"RTN","IBRFIHL1",135,0)
 ....S X=SID1,DA(1)=+IEN0121,DA(2)=+IEN368
"RTN","IBRFIHL1",136,0)
 ....D FILE^DICN
"RTN","IBRFIHL1",137,0)
 ....K DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBRFIHL1",138,0)
 ;
"RTN","IBRFIHL1",139,0)
 K DATA,OBX013,OBX0113,PSL021,IEN021,PSL2199,PSL0121,IEN0121,PSL12199,IEN368,SID,SID1,FLD,LSTFLD
"RTN","IBRFIHL1",140,0)
 Q
"RTN","IBRFIHL1",141,0)
 ;
"RTN","IBRFIHL1",142,0)
PURG ; purge file 368 entries based on # of days in PURGE DAYS 277 RFAI  in IB SITE PARAMETERS
"RTN","IBRFIHL1",143,0)
 ; (field #52.01 in file #350.9).  Called from IBAMTC (tasked option IB MT NIGHT COMP) NIGHTLY^IBTRKR
"RTN","IBRFIHL1",144,0)
 ; null entry (the default) indicates the transactions will be stored forever. 
"RTN","IBRFIHL1",145,0)
 ;
"RTN","IBRFIHL1",146,0)
 N IBPURG,IBEND,IBSTR,IBRFI,DA,DIK
"RTN","IBRFIHL1",147,0)
 S IBPURG=$$GET1^DIQ(350.9,1,52.01) Q:IBPURG=""
"RTN","IBRFIHL1",148,0)
 S IBEND=$$FMTHL7^XLFDT($$FMADD^XLFDT(DT,-IBPURG))
"RTN","IBRFIHL1",149,0)
 S IBSTR="" F  S IBSTR=$O(^IBA(368,"C",IBSTR)) Q:IBSTR=""!($E(IBSTR,1,8)>IBEND)  D
"RTN","IBRFIHL1",150,0)
 .S IBRFI="" F  S IBRFI=$O(^IBA(368,"C",IBSTR,IBRFI)) Q:IBRFI=""  D
"RTN","IBRFIHL1",151,0)
 ..; DELETE
"RTN","IBRFIHL1",152,0)
 ..S DA=IBRFI,DIK="^IBA(368," D ^DIK
"RTN","IBRFIHL1",153,0)
 K IBPURG,IBEND,IBSTR,IBRFI,DA,DIK
"RTN","IBRFIHL1",154,0)
 Q
"RTN","IBRFIHL1",155,0)
 ;
"RTN","IBRFIHL2")
0^58^B153552095^n/a
"RTN","IBRFIHL2",1,0)
IBRFIHL2 ;TDM/DAL - HL7 Process Incoming EHC_E12 Msgs (cont.) ;02-SEP-2015  ; 2/22/16 4:41pm
"RTN","IBRFIHL2",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBRFIHL2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIHL2",4,0)
 ;
"RTN","IBRFIHL2",5,0)
 ;**Program Description**
"RTN","IBRFIHL2",6,0)
 ;  This routine will process the individual segments of the
"RTN","IBRFIHL2",7,0)
 ;  incoming EHC_E12 messages.
"RTN","IBRFIHL2",8,0)
 ;
"RTN","IBRFIHL2",9,0)
 ; * Each of these tags are called by IBRFIHL1.
"RTN","IBRFIHL2",10,0)
 ; 
"RTN","IBRFIHL2",11,0)
 Q  ; No direct calls
"RTN","IBRFIHL2",12,0)
 ;
"RTN","IBRFIHL2",13,0)
MSH(IBSEG) ; Process the MSH seg
"RTN","IBRFIHL2",14,0)
 N SQ,MSH
"RTN","IBRFIHL2",15,0)
 F SQ=7,10 S MSH(SQ)=$G(IBSEG(SQ))
"RTN","IBRFIHL2",16,0)
 ;
"RTN","IBRFIHL2",17,0)
 S DATA(368,.01)=MSH(10)                    ;Message Control ID
"RTN","IBRFIHL2",18,0)
 S DATA(368,.03)=MSH(7)                     ;Message Date/Time
"RTN","IBRFIHL2",19,0)
 ;
"RTN","IBRFIHL2",20,0)
 S DATA(368,100.03)=$$FMDATE^HLFNC(MSH(7))
"RTN","IBRFIHL2",21,0)
 Q
"RTN","IBRFIHL2",22,0)
 ;
"RTN","IBRFIHL2",23,0)
RFI(IBSEG) ; Process the RFI seg
"RTN","IBRFIHL2",24,0)
 N SQ,RFI
"RTN","IBRFIHL2",25,0)
 F SQ=1,2 S RFI(SQ)=$G(IBSEG(SQ+1))
"RTN","IBRFIHL2",26,0)
 ;
"RTN","IBRFIHL2",27,0)
 S DATA(368,.02)=RFI(1)                     ;Transaction Set Date/Time
"RTN","IBRFIHL2",28,0)
 S DATA(368,12.01)=RFI(2)                   ;Response Due Date
"RTN","IBRFIHL2",29,0)
 ;
"RTN","IBRFIHL2",30,0)
 S DATA(368,100.02)=$$FMDATE^HLFNC(RFI(1))
"RTN","IBRFIHL2",31,0)
 S DATA(368,112.01)=$$FMDATE^HLFNC(RFI(2))
"RTN","IBRFIHL2",32,0)
 Q
"RTN","IBRFIHL2",33,0)
 ;
"RTN","IBRFIHL2",34,0)
CTD(IBSEG) ; Process the CTD seg
"RTN","IBRFIHL2",35,0)
 N SQ,CTD,IEN,REP,CQUAL
"RTN","IBRFIHL2",36,0)
 F SQ=1:1:3,5 S CTD(SQ)=$G(IBSEG(SQ+1))
"RTN","IBRFIHL2",37,0)
 ;
"RTN","IBRFIHL2",38,0)
 F REP=1:1:3 D
"RTN","IBRFIHL2",39,0)
 .S CQUAL=$P($P(CTD(5),HLREP,REP),HLCMP)
"RTN","IBRFIHL2",40,0)
 .S CQUAL(REP)=$S(CQUAL="PRN":"TE",CQUAL="NET":"EM",CQUAL="BPN":"FX",CQUAL="ORN":"UR",1:CQUAL)
"RTN","IBRFIHL2",41,0)
 ;
"RTN","IBRFIHL2",42,0)
 I CTD(1)="IC" D                               ;IC=Information Contact
"RTN","IBRFIHL2",43,0)
 .S DATA(368,80.04)=$P(CTD(1),HLCMP)                    ;Contact Type
"RTN","IBRFIHL2",44,0)
 .S DATA(368,1.03)=$P(CTD(2),HLCMP)                     ;Contact Name
"RTN","IBRFIHL2",45,0)
 .S DATA(368,2.01)=CQUAL(1)                             ;Comm Qual 1
"RTN","IBRFIHL2",46,0)
 .S DATA(368,3.01)=$P($P(CTD(5),HLREP),HLCMP,8)         ;Comm Number 1
"RTN","IBRFIHL2",47,0)
 .S DATA(368,2.02)=CQUAL(2)                             ;Comm Qual 2
"RTN","IBRFIHL2",48,0)
 .S DATA(368,4.01)=$P($P(CTD(5),HLREP,2),HLCMP,8)       ;Comm Number 2
"RTN","IBRFIHL2",49,0)
 .S DATA(368,2.03)=CQUAL(3)                             ;Comm Qual 3
"RTN","IBRFIHL2",50,0)
 .S DATA(368,5.01)=$P($P(CTD(5),HLREP,3),HLCMP,8)       ;Comm Number 3
"RTN","IBRFIHL2",51,0)
 .S DATA(368,26.01)=$P($P(CTD(5),HLREP),HLCMP,7)        ;Comm Ext 1
"RTN","IBRFIHL2",52,0)
 .S DATA(368,27.01)=$P($P(CTD(5),HLREP,2),HLCMP,7)      ;Comm Ext 2
"RTN","IBRFIHL2",53,0)
 .S DATA(368,28.01)=$P($P(CTD(5),HLREP,3),HLCMP,7)      ;Comm Ext 2
"RTN","IBRFIHL2",54,0)
 .;
"RTN","IBRFIHL2",55,0)
 .S IEN=$$FIND1^DIC(365.021,,,CQUAL(1)) S:IEN>0 DATA(368,102.01)=IEN
"RTN","IBRFIHL2",56,0)
 .S IEN=$$FIND1^DIC(365.021,,,CQUAL(2)) S:IEN>0 DATA(368,102.02)=IEN
"RTN","IBRFIHL2",57,0)
 .S IEN=$$FIND1^DIC(365.021,,,CQUAL(3)) S:IEN>0 DATA(368,102.03)=IEN
"RTN","IBRFIHL2",58,0)
 ;
"RTN","IBRFIHL2",59,0)
 I CTD(1)="RE" D                                ;RE=Receiving Contact
"RTN","IBRFIHL2",60,0)
 .S DATA(368,80.27)=$P(CTD(1),HLCMP)                    ;Contact Type
"RTN","IBRFIHL2",61,0)
 .S DATA(368,15.01)=$P(CTD(2),HLCMP)                    ;Contact Name
"RTN","IBRFIHL2",62,0)
 .S DATA(368,20.01)=$P($P(CTD(3),HLCMP),HLSCMP)         ;Addr Line 1
"RTN","IBRFIHL2",63,0)
 .S DATA(368,20.02)=$P(CTD(3),HLCMP,2)                  ;Addr Line 2
"RTN","IBRFIHL2",64,0)
 .S DATA(368,20.03)=$P(CTD(3),HLCMP,3)                  ;City
"RTN","IBRFIHL2",65,0)
 .S DATA(368,20.04)=$P(CTD(3),HLCMP,4)                  ;State
"RTN","IBRFIHL2",66,0)
 .S DATA(368,20.05)=$P(CTD(3),HLCMP,5)                  ;Postal/Zip
"RTN","IBRFIHL2",67,0)
 .S DATA(368,20.06)=$P(CTD(3),HLCMP,6)                  ;Country
"RTN","IBRFIHL2",68,0)
 .S DATA(368,20.07)=$P(CTD(3),HLCMP,8)                  ;Country Sub
"RTN","IBRFIHL2",69,0)
 .S DATA(368,16.01)=CQUAL(1)                            ;Comm Qual 1
"RTN","IBRFIHL2",70,0)
 .S DATA(368,17.01)=$P($P(CTD(5),HLREP),HLCMP,8)        ;Comm Number 1
"RTN","IBRFIHL2",71,0)
 .S DATA(368,16.02)=CQUAL(2)                            ;Comm Qual 2
"RTN","IBRFIHL2",72,0)
 .S DATA(368,18.01)=$P($P(CTD(5),HLREP,2),HLCMP,8)      ;Comm Number 2
"RTN","IBRFIHL2",73,0)
 .S DATA(368,16.03)=CQUAL(3)                            ;Comm Qual 3
"RTN","IBRFIHL2",74,0)
 .S DATA(368,19.01)=$P($P(CTD(5),HLREP,3),HLCMP,8)      ;Comm Number 3
"RTN","IBRFIHL2",75,0)
 .S DATA(368,29.01)=$P($P(CTD(5),HLREP),HLCMP,7)        ;Comm Ext 1
"RTN","IBRFIHL2",76,0)
 .S DATA(368,30.01)=$P($P(CTD(5),HLREP,2),HLCMP,7)      ;Comm Ext 2
"RTN","IBRFIHL2",77,0)
 .S DATA(368,31.01)=$P($P(CTD(5),HLREP,3),HLCMP,7)      ;Comm Ext 3
"RTN","IBRFIHL2",78,0)
 .;
"RTN","IBRFIHL2",79,0)
 .S IEN=$$FIND1^DIC(365.021,,,CQUAL(1)) S:IEN>0 DATA(368,116.01)=IEN
"RTN","IBRFIHL2",80,0)
 .S IEN=$$FIND1^DIC(365.021,,,CQUAL(2)) S:IEN>0 DATA(368,116.02)=IEN
"RTN","IBRFIHL2",81,0)
 .S IEN=$$FIND1^DIC(365.021,,,CQUAL(3)) S:IEN>0 DATA(368,116.03)=IEN
"RTN","IBRFIHL2",82,0)
 .S IEN=+$$FIND1^DIC(5,,"X",$P(CTD(3),HLCMP,4),"C") S:IEN>0 DATA(368,120.04)=IEN
"RTN","IBRFIHL2",83,0)
 .S IEN=$$FIND1^DIC(5.11,,,$E($P(CTD(3),HLCMP,5),1,5),"B") S:IEN>0 DATA(368,120.05)=IEN
"RTN","IBRFIHL2",84,0)
 .S IEN=$$FIND1^DIC(779.004,,"X",$P(CTD(3),HLCMP,6),"B") S:IEN>0 DATA(368,120.06)=IEN
"RTN","IBRFIHL2",85,0)
 Q
"RTN","IBRFIHL2",86,0)
 ;
"RTN","IBRFIHL2",87,0)
IVC(IBSEG,DFN,DFNSSN) ;  Process the IVC seg
"RTN","IBRFIHL2",88,0)
 ; 
"RTN","IBRFIHL2",89,0)
 ; also try to get the patient file pointer from the claim and the patient SSN from that patient
"RTN","IBRFIHL2",90,0)
 ; will use those to compare against PID to verify that this is the correct patient
"RTN","IBRFIHL2",91,0)
 ;
"RTN","IBRFIHL2",92,0)
 N SQ,IVC,IEN,RQUAL
"RTN","IBRFIHL2",93,0)
 F SQ=1:1:3,5,7,10,11,20,26,28 S IVC(SQ)=$G(IBSEG(SQ+1))
"RTN","IBRFIHL2",94,0)
 ;
"RTN","IBRFIHL2",95,0)
 S RQUAL(1.4)=$S($P(IVC(1),HLCMP,4)="GUID":"EJ",1:$P(IVC(1),HLCMP,4))
"RTN","IBRFIHL2",96,0)
 S RQUAL(3.4)=$S($P(IVC(3),HLCMP,4)="URI":"D9",1:$P(IVC(3),HLCMP,4))
"RTN","IBRFIHL2",97,0)
 ;
"RTN","IBRFIHL2",98,0)
 S DATA(368,11.01)=$P(IVC(1),HLCMP)             ;Pt Crtl #
"RTN","IBRFIHL2",99,0)
 S DATA(368,80.18)=RQUAL(1.4)                   ;Ref ID Qual
"RTN","IBRFIHL2",100,0)
 S DATA(368,11.02)=$P(IVC(2),HLCMP)             ;Payer Claim #
"RTN","IBRFIHL2",101,0)
 S DATA(368,80.14)=$P(IVC(2),HLCMP,4)           ;Cur Tran Trace #
"RTN","IBRFIHL2",102,0)
 S DATA(368,11.04)=$P(IVC(3),HLCMP)             ;Clearinghouse Trace #
"RTN","IBRFIHL2",103,0)
 S DATA(368,80.21)=RQUAL(3.4)                   ;Ref ID Qualifier
"RTN","IBRFIHL2",104,0)
 S DATA(368,80.26)=$P(IVC(5),HLCMP)             ;Report Trans Code
"RTN","IBRFIHL2",105,0)
 S DATA(368,14.05)=$P(IVC(7),HLCMP)             ;Claim Service Period
"RTN","IBRFIHL2",106,0)
 S DATA(368,14.03)=$P($P(IVC(7),HLCMP),"-")     ;Start Date
"RTN","IBRFIHL2",107,0)
 S DATA(368,114.03)=$$FMDATE^HLFNC(DATA(368,14.03))  ;Start Date FileMan format
"RTN","IBRFIHL2",108,0)
 S DATA(368,14.04)=$P($P(IVC(7),HLCMP),"-",2)   ;End Date
"RTN","IBRFIHL2",109,0)
 S DATA(368,114.04)=$$FMDATE^HLFNC(DATA(368,14.04))  ;End Date FileMan format
"RTN","IBRFIHL2",110,0)
 I $P(IVC(10),HLCMP)'="" D
"RTN","IBRFIHL2",111,0)
 .;S DATA(368,80.08)=$P(IVC(10),HLCMP,3)        ;Provider Entity ID
"RTN","IBRFIHL2",112,0)
 .S DATA(368,80.09)=$P(IVC(10),HLCMP,2)         ;Prov Entity Type Qua
"RTN","IBRFIHL2",113,0)
 .S DATA(368,7.01)=$P(IVC(10),HLCMP)            ;Provider Name
"RTN","IBRFIHL2",114,0)
 I $P(IVC(10),HLCMP)="" D
"RTN","IBRFIHL2",115,0)
 .S DATA(368,80.09)=$P(IVC(12),HLCMP,10)
"RTN","IBRFIHL2",116,0)
 .S DATA(368,7.01)=$$FMNAME^HLFNC($P(IVC(12),HLCMP,2,5),HL("ECH"))
"RTN","IBRFIHL2",117,0)
 S DATA(368,80.01)=$P(IVC(11),HLCMP,10)         ;Payer Entity ID
"RTN","IBRFIHL2",118,0)
 S DATA(368,80.02)=$P(IVC(11),HLCMP,2)          ;Payer Entity Type Qua
"RTN","IBRFIHL2",119,0)
 S DATA(368,1.01)=$P(IVC(11),HLCMP)             ;Payer Name
"RTN","IBRFIHL2",120,0)
 S DATA(368,1.02)=$P(IVC(11),HLCMP,3)           ;Payer ID
"RTN","IBRFIHL2",121,0)
 S DATA(368,80.03)=$P(IVC(11),HLCMP,7)          ;ID Code Qualifier
"RTN","IBRFIHL2",122,0)
 S DATA(368,25.01)=$P(IVC(20),HLCMP)            ;Reference ID
"RTN","IBRFIHL2",123,0)
 S DATA(368,80.19)=$P(IVC(20),HLCMP,5)          ;Reference ID Qual
"RTN","IBRFIHL2",124,0)
 S DATA(368,8.01)=$P(IVC(26),HLCMP)             ;Provider ID
"RTN","IBRFIHL2",125,0)
 S DATA(368,80.1)=$P(IVC(28),HLCMP)             ;Provider ID Qualifier
"RTN","IBRFIHL2",126,0)
 ;
"RTN","IBRFIHL2",127,0)
 ;S IEN=$$FIND1^DIC(36,,,$P(IVC(11),HLCMP)) S:IEN>0 DATA(368,101.01)=IEN
"RTN","IBRFIHL2",128,0)
 ;
"RTN","IBRFIHL2",129,0)
 S IEN=$$FIND1^DIC(399,,"X",$P($P($P(IVC(1),HLCMP),"-",2),HLSCMP)) S:IEN>0 DATA(368,111.01)=IEN ;get and file ptr to 399 BILL/CLAIMS
"RTN","IBRFIHL2",130,0)
 ;
"RTN","IBRFIHL2",131,0)
 ; If BILL found, get patient (FILE 2) ptr and SSN and insurance company
"RTN","IBRFIHL2",132,0)
 I IEN D
"RTN","IBRFIHL2",133,0)
 .S DFN=$$GET1^DIQ(399,IEN_",",.02,"I")  ; get patient
"RTN","IBRFIHL2",134,0)
 .Q:'+DFN
"RTN","IBRFIHL2",135,0)
 .N VADM
"RTN","IBRFIHL2",136,0)
 .D DEM^VADPT
"RTN","IBRFIHL2",137,0)
 .S DFNSSN=$$NOPUNCT^IBCEF($P(VADM(2),U,2))
"RTN","IBRFIHL2",138,0)
 .I $P(IVC(11),HLCMP,3)]"" D
"RTN","IBRFIHL2",139,0)
 ..N LOOP,INSURERS,INSCLAIM,INSIEN,IDFIELD,PAYERID
"RTN","IBRFIHL2",140,0)
 ..; institutional or professional claim (1=IN2, 0=PRF)
"RTN","IBRFIHL2",141,0)
 ..S INSCLAIM=$$INSPRF^IBCEF(IEN)
"RTN","IBRFIHL2",142,0)
 ..;get correct field where ID is stored based on instituional or professional
"RTN","IBRFIHL2",143,0)
 ..S IDFIELD=$S(INSCLAIM:3.04,1:3.02)
"RTN","IBRFIHL2",144,0)
 ..; get all insurance companys in the claim
"RTN","IBRFIHL2",145,0)
 ..F LOOP="I1","I2","I3" Q:'$G(^DGCR(399,IEN,LOOP))  D
"RTN","IBRFIHL2",146,0)
 ...S INSIEN=+^DGCR(399,IEN,LOOP)
"RTN","IBRFIHL2",147,0)
 ...S PAYERID=$$GET1^DIQ(36,INSIEN_",",IDFIELD,"I")
"RTN","IBRFIHL2",148,0)
 ...Q:PAYERID=""
"RTN","IBRFIHL2",149,0)
 ...S INSURERS(PAYERID)=INSIEN
"RTN","IBRFIHL2",150,0)
 ...;Deal with a Medicare (WNR) kludge which sent out IDs not in file 36
"RTN","IBRFIHL2",151,0)
 ...I $$MCRWNR^IBEFUNC(INSIEN),$S(".12M61.SMTX1."[$P(IVC(11),HLCMP,3):1,1:0) S INSURERS($P(IVC(11),HLCMP,3))=INSIEN
"RTN","IBRFIHL2",152,0)
 ..I $D(INSURERS($P(IVC(11),HLCMP,3))) S DATA(368,101.01)=INSURERS($P(IVC(11),HLCMP,3))
"RTN","IBRFIHL2",153,0)
 Q
"RTN","IBRFIHL2",154,0)
 ;
"RTN","IBRFIHL2",155,0)
 ;
"RTN","IBRFIHL2",156,0)
PID(IBSEG,DFNPTR,DFNSSN) ;  Process the PID seg
"RTN","IBRFIHL2",157,0)
 N IDLIST,SUBCNT,SUBC,SUBCID,SUBCDATA,MRN,PID,MATCH
"RTN","IBRFIHL2",158,0)
 S IDLIST=$G(IBSEG(4)),(MRN,PID,DFN)=""
"RTN","IBRFIHL2",159,0)
 F SUBCNT=1:1:$L(IDLIST,HLREP) D
"RTN","IBRFIHL2",160,0)
 .S SUBC=$P(IDLIST,HLREP,SUBCNT)
"RTN","IBRFIHL2",161,0)
 .S SUBCID=$P(SUBC,HLCMP,5)                     ;Identifier Type Code
"RTN","IBRFIHL2",162,0)
 .S SUBCDATA=$P(SUBC,HLCMP,1)                   ;Data Value
"RTN","IBRFIHL2",163,0)
 .I SUBCID="EA" S MRN=SUBCDATA,DATA(368,80.2)=SUBCID
"RTN","IBRFIHL2",164,0)
 .I SUBCID="MI" S PID=SUBCDATA,DATA(368,80.13)=SUBCID
"RTN","IBRFIHL2",165,0)
 ;
"RTN","IBRFIHL2",166,0)
 S DATA(368,10.01)=PID                          ;Patient Primary ID
"RTN","IBRFIHL2",167,0)
 S DATA(368,11.03)=MRN                          ;Medical Record #
"RTN","IBRFIHL2",168,0)
 S DATA(368,9.01)=$$FMNAME^HLFNC($P($G(IBSEG(6)),HLCMP,1,5),HL("ECH")) ;Patient Name
"RTN","IBRFIHL2",169,0)
 S DATA(368,80.11)=$S($P($G(IBSEG(6)),HLCMP,8)="A":"QC",1:$P($G(IBSEG(6)),HLCMP,8))  ;Entity ID
"RTN","IBRFIHL2",170,0)
 S DATA(368,80.12)=$P($G(IBSEG(6)),HLCMP,7)     ;Entity Type Qualifier
"RTN","IBRFIHL2",171,0)
 ;
"RTN","IBRFIHL2",172,0)
 ;S:MRN'="" DFN=+$O(^DPT("SSN",MRN,""))
"RTN","IBRFIHL2",173,0)
 ;S:DFN>0 DATA(368,109.01)=DFN
"RTN","IBRFIHL2",174,0)
 ;if there is a Medical Record Number and it matches the SSN (which vista uses as an MRN), then we have the correct patient
"RTN","IBRFIHL2",175,0)
 S MATCH=0
"RTN","IBRFIHL2",176,0)
 I MRN]"",MRN=$G(DFNSSN) S DATA(368,109.01)=DFNPTR,MATCH=1
"RTN","IBRFIHL2",177,0)
 ;
"RTN","IBRFIHL2",178,0)
 ;if no match on MRN/SSN but Patient Name from incoming message matches the Patient Name from the Patient file (#2), then we have the correct patient.
"RTN","IBRFIHL2",179,0)
 I 'MATCH D
"RTN","IBRFIHL2",180,0)
 .N DFN,VADM
"RTN","IBRFIHL2",181,0)
 .S DFN=$G(DFNPTR) D DEM^VADPT
"RTN","IBRFIHL2",182,0)
 .I $G(VADM(1))=DATA(368,9.01) S DATA(368,109.01)=DFNPTR
"RTN","IBRFIHL2",183,0)
 Q
"RTN","IBRFIHL2",184,0)
 ;
"RTN","IBRFIHL2",185,0)
PSL(IBSEG) ;  Process the PSL seg
"RTN","IBRFIHL2",186,0)
 N SQ,PSL,FN,SID,SID1,RDTTM,IEN
"RTN","IBRFIHL2",187,0)
 F SQ=1,6:1:8,10,16:1:18,20,22,26 S PSL(SQ)=$G(IBSEG(SQ+1))
"RTN","IBRFIHL2",188,0)
 ;
"RTN","IBRFIHL2",189,0)
 S SID=$O(PSL021(""),-1)+1
"RTN","IBRFIHL2",190,0)
 S PSL021(SID,.01)=SID                                 ;Seq #
"RTN","IBRFIHL2",191,0)
 S PSL021(SID,.1)=$P(PSL(1),HLCMP)                     ;Line item ctrl
"RTN","IBRFIHL2",192,0)
 S PSL021(SID,1.01)=$P(PSL(1),HLCMP,4)                 ;Ref ID Qual
"RTN","IBRFIHL2",193,0)
 S PSL021(SID,.02)=$P(PSL(6),HLCMP)                    ;Prod/Svc Qual
"RTN","IBRFIHL2",194,0)
 S PSL021(SID,.03)=$P(PSL(7),HLCMP)                    ;Svc ID Code
"RTN","IBRFIHL2",195,0)
 S PSL021(SID,.04)=$P($P(PSL(8),HLREP),HLCMP)          ;Proc Mod 1
"RTN","IBRFIHL2",196,0)
 S PSL021(SID,.05)=$P($P(PSL(8),HLREP,2),HLCMP)        ;Proc Mod 2
"RTN","IBRFIHL2",197,0)
 S PSL021(SID,.06)=$P($P(PSL(8),HLREP,3),HLCMP)        ;Proc Mod 3
"RTN","IBRFIHL2",198,0)
 S PSL021(SID,.07)=$P($P(PSL(8),HLREP,4),HLCMP)        ;Proc Mod 4
"RTN","IBRFIHL2",199,0)
 S PSL021(SID,.08)=$P($P(PSL(16),HLCMP),HLSCMP)     ;Line item chg amt
"RTN","IBRFIHL2",200,0)
 S PSL021(SID,.09)=$P(PSL(22),HLCMP)                   ;Revenue Code
"RTN","IBRFIHL2",201,0)
 S PSL021(SID,.11)=$P(PSL(26),HLCMP)                   ;Svc Line Dt
"RTN","IBRFIHL2",202,0)
 ;
"RTN","IBRFIHL2",203,0)
 S SID1=$O(PSL2199(SID,""),-1)+1
"RTN","IBRFIHL2",204,0)
 S PSL2199(SID,SID1,.01)=SID1                            ;Seq ID
"RTN","IBRFIHL2",205,0)
 S PSL2199(SID,SID1,.02)=$P(PSL(10),HLCMP)               ;Stat Eff Dt
"RTN","IBRFIHL2",206,0)
 S PSL2199(SID,SID1,1.04)=$P($P(PSL(17),HLREP),HLCMP)  ;Cd List Qual 1
"RTN","IBRFIHL2",207,0)
 S PSL2199(SID,SID1,10.04)=$P($P(PSL(17),HLREP,2),HLCMP) ;Cd List Qual 2
"RTN","IBRFIHL2",208,0)
 S PSL2199(SID,SID1,11.04)=$P($P(PSL(17),HLREP,3),HLCMP) ;Cd List Qual 3
"RTN","IBRFIHL2",209,0)
 S PSL2199(SID,SID1,1.02)=$P($P(PSL(18),HLREP),HLCMP)    ;Addtl Info 1
"RTN","IBRFIHL2",210,0)
 I SID=1,SID1=1 S DATA(368,22.03)=$P($P(PSL(18),HLREP),HLCMP)  ;Save primiary LOINC for worklist
"RTN","IBRFIHL2",211,0)
 S PSL2199(SID,SID1,10.02)=$P($P(PSL(18),HLREP,2),HLCMP) ;Addtl Info 2
"RTN","IBRFIHL2",212,0)
 S PSL2199(SID,SID1,11.02)=$P($P(PSL(18),HLREP,3),HLCMP) ;Addtl Info 3
"RTN","IBRFIHL2",213,0)
 S PSL2199(SID,SID1,1.01)=$P($P(PSL(20),HLREP),HLCMP)    ;Health Claim 1
"RTN","IBRFIHL2",214,0)
 S PSL2199(SID,SID1,10.01)=$P($P(PSL(20),HLREP,2),HLCMP) ;Health Claim 2
"RTN","IBRFIHL2",215,0)
 S PSL2199(SID,SID1,11.01)=$P($P(PSL(20),HLREP,3),HLCMP) ;Health Claim 3
"RTN","IBRFIHL2",216,0)
 ;
"RTN","IBRFIHL2",217,0)
 S SID=$O(PSL0121(""),-1)+1
"RTN","IBRFIHL2",218,0)
 S PSL0121(SID,.01)=SID
"RTN","IBRFIHL2",219,0)
 S IEN=$$FIND1^DIC(368.002,,,$P(PSL(6),HLCMP)) S:IEN>0 PSL0121(SID,.02)=IEN  ;Prod/Svc Qual
"RTN","IBRFIHL2",220,0)
 ;
"RTN","IBRFIHL2",221,0)
 N FILE,CODETYPE
"RTN","IBRFIHL2",222,0)
 S CODETYPE=$P(PSL(6),HLCMP)
"RTN","IBRFIHL2",223,0)
 S FILE=$S(CODETYPE="HC":81,CODETYPE="NU":399.2,CODETYPE="N4":50.67,1:"")
"RTN","IBRFIHL2",224,0)
 I FILE D
"RTN","IBRFIHL2",225,0)
 .N FILELOC
"RTN","IBRFIHL2",226,0)
 .S FILELOC=$S(FILE=81:";ICPT(",FILE=399.2:";DGCR(399.2,",FILE=50.67:";PSNDF(50.67,",1:"")
"RTN","IBRFIHL2",227,0)
 .Q:FILELOC=""
"RTN","IBRFIHL2",228,0)
 .S IEN=$$FIND1^DIC(FILE,,"X",$P(PSL(7),HLCMP))
"RTN","IBRFIHL2",229,0)
 .S:IEN>0 PSL0121(SID,.03)=IEN_FILELOC
"RTN","IBRFIHL2",230,0)
 ;
"RTN","IBRFIHL2",231,0)
 S IEN=$$FIND1^DIC(81.3,,,$P($P(PSL(8),HLREP),HLCMP)) S:IEN>0 PSL0121(SID,.04)=IEN  ;Proc Mod 1
"RTN","IBRFIHL2",232,0)
 S IEN=$$FIND1^DIC(81.3,,,$P($P(PSL(8),HLREP,2),HLCMP)) S:IEN>0 PSL0121(SID,.05)=IEN  ;Proc Mod 2
"RTN","IBRFIHL2",233,0)
 S IEN=$$FIND1^DIC(81.3,,,$P($P(PSL(8),HLREP,3),HLCMP)) S:IEN>0 PSL0121(SID,.06)=IEN  ;Proc Mod 3
"RTN","IBRFIHL2",234,0)
 S IEN=$$FIND1^DIC(81.3,,,$P($P(PSL(8),HLREP,4),HLCMP)) S:IEN>0 PSL0121(SID,.07)=IEN  ;Proc Mod 4
"RTN","IBRFIHL2",235,0)
 S IEN=$$FIND1^DIC(399.2,,,$P(PSL(22),HLCMP)) S:IEN>0 PSL0121(SID,.09)=IEN         ;Revenue Code
"RTN","IBRFIHL2",236,0)
 S VAL=$P($P(PSL(16),HLCMP),HLSCMP)
"RTN","IBRFIHL2",237,0)
 I VAL=+VAL,VAL'["." S PSL0121(SID,.08)=$FN(VAL/100,",",2)
"RTN","IBRFIHL2",238,0)
 S PSL0121(SID,.11)=$$FMDATE^HLFNC($P(PSL(26),HLCMP)) ;Svc Line Dt [D]
"RTN","IBRFIHL2",239,0)
 ;
"RTN","IBRFIHL2",240,0)
 S SID1=$O(PSL12199(SID,""),-1)+1
"RTN","IBRFIHL2",241,0)
 S PSL12199(SID,SID1,.01)=SID1  ;Seq ID
"RTN","IBRFIHL2",242,0)
 S PSL12199(SID,SID1,.02)=$$FMDATE^HLFNC($P(PSL(10),HLCMP))  ;Stat Eff Dt
"RTN","IBRFIHL2",243,0)
 S IEN=$$FIND1^DIC(368.001,,,$P($P(PSL(20),HLREP),HLCMP)) S:IEN>0 PSL12199(SID,SID1,1.01)=IEN  ;Health Claim 1
"RTN","IBRFIHL2",244,0)
 S IEN=$$FIND1^DIC(368.001,,,$P($P(PSL(20),HLREP,2),HLCMP)) S:IEN>0 PSL12199(SID,SID1,10.01)=IEN  ;Health Claim 2
"RTN","IBRFIHL2",245,0)
 S IEN=$$FIND1^DIC(368.001,,,$P($P(PSL(20),HLREP,3),HLCMP)) S:IEN>0 PSL12199(SID,SID1,11.01)=IEN  ;Health Claim 3
"RTN","IBRFIHL2",246,0)
 ;
"RTN","IBRFIHL2",247,0)
 ;*******************************************************************
"RTN","IBRFIHL2",248,0)
 ;The following code has been commented out to avoid performing a
"RTN","IBRFIHL2",249,0)
 ;lookup into the LAB LOINC file (#95.3) because an Integration
"RTN","IBRFIHL2",250,0)
 ;Agreement could not be obtained.
"RTN","IBRFIHL2",251,0)
 ;S VAL=$P($P(PSL(18),HLREP),HLCMP)
"RTN","IBRFIHL2",252,0)
 ;S VAL=$S(VAL["-":$P(VAL,"-"),1:$E(VAL,1,$L(VAL)-1))
"RTN","IBRFIHL2",253,0)
 ;S IEN=$$FIND1^DIC(95.3,,,VAL) S:IEN>0 PSL12199(SID,SID1,1.02)=IEN
"RTN","IBRFIHL2",254,0)
 ;I SID=1,SID1=1,IEN>0 S DATA(368,122.03)=IEN
"RTN","IBRFIHL2",255,0)
 ;S VAL=$P($P(PSL(18),HLREP,2),HLCMP)
"RTN","IBRFIHL2",256,0)
 ;S VAL=$S(VAL["-":$P(VAL,"-"),1:$E(VAL,1,$L(VAL)-1))
"RTN","IBRFIHL2",257,0)
 ;S IEN=$$FIND1^DIC(95.3,,,VAL) S:IEN>0 PSL12199(SID,SID1,10.02)=IEN ;Addtl Info 2
"RTN","IBRFIHL2",258,0)
 ;S VAL=$P($P(PSL(18),HLREP,3),HLCMP)
"RTN","IBRFIHL2",259,0)
 ;S VAL=$S(VAL["-":$P(VAL,"-"),1:$E(VAL,1,$L(VAL)-1))
"RTN","IBRFIHL2",260,0)
 ;S IEN=$$FIND1^DIC(95.3,,,VAL) S:IEN>0 PSL12199(SID,SID1,11.02)=IEN ;Addtl Info 3
"RTN","IBRFIHL2",261,0)
 ;*******************************************************************
"RTN","IBRFIHL2",262,0)
 Q
"RTN","IBRFIHL2",263,0)
 ;
"RTN","IBRFIHL2",264,0)
PYE(IBSEG) ;  Process the PYE seg
"RTN","IBRFIHL2",265,0)
 N SQ,PYE
"RTN","IBRFIHL2",266,0)
 F SQ=2,4,5 S PYE(SQ)=$G(IBSEG(SQ+1))
"RTN","IBRFIHL2",267,0)
 ;
"RTN","IBRFIHL2",268,0)
 S DATA(368,80.05)=$P(PYE(2),HLCMP)                   ;Entity ID Code
"RTN","IBRFIHL2",269,0)
 S:PYE(4)'="" DATA(368,6.01)=$P(PYE(4),HLCMP)         ;Organization Nm
"RTN","IBRFIHL2",270,0)
 S DATA(368,6.02)=$P(PYE(4),HLCMP,3)                  ;Info Rec ID #
"RTN","IBRFIHL2",271,0)
 S DATA(368,80.07)=$P(PYE(4),HLCMP,7)                 ;ID Code Qual
"RTN","IBRFIHL2",272,0)
 S:PYE(5)'="" DATA(368,6.01)=$$FMNAME^HLFNC($P(PYE(5),HLCMP,1,3),HL("ECH"))     ;Payee Name
"RTN","IBRFIHL2",273,0)
 Q
"RTN","IBRFIHL2",274,0)
 ;
"RTN","IBRFIHL2",275,0)
OBX(IBSEG) ;  Process the OBX seg 
"RTN","IBRFIHL2",276,0)
 N SQ,OBX,FN,SID,OBXTYP,FLD1,FLD2,FLD3,CQUAL,VAL
"RTN","IBRFIHL2",277,0)
 F SQ=1,3,14  S OBX(SQ)=$G(IBSEG(SQ+1))
"RTN","IBRFIHL2",278,0)
 S OBXTYP=$P($P(OBX(3),HLREP),HLCMP,6)
"RTN","IBRFIHL2",279,0)
 S CQUAL=$P($P(OBX(3),HLREP),HLCMP,3)
"RTN","IBRFIHL2",280,0)
 S (FLD1,FLD2,FLD3)=""
"RTN","IBRFIHL2",281,0)
 ;
"RTN","IBRFIHL2",282,0)
 I OBXTYP="STC01" D
"RTN","IBRFIHL2",283,0)
 .S SID=$O(OBX013(""),-1)+1
"RTN","IBRFIHL2",284,0)
 .S FLD1=1.01,FLD2=1.02,FLD3=1.04
"RTN","IBRFIHL2",285,0)
 .S OBX013(SID,.01)=SID
"RTN","IBRFIHL2",286,0)
 .S OBX013(SID,.02)=$P(OBX(14),HLCMP)
"RTN","IBRFIHL2",287,0)
 I (OBXTYP="STC10")!(OBXTYP="STC11") S SID=$O(OBX013(""),-1)
"RTN","IBRFIHL2",288,0)
 ;
"RTN","IBRFIHL2",289,0)
 I OBXTYP="STC10" S FLD1=10.01,FLD2=10.02,FLD3=10.04
"RTN","IBRFIHL2",290,0)
 I OBXTYP="STC11" S FLD1=11.01,FLD2=11.02,FLD3=11.04
"RTN","IBRFIHL2",291,0)
 ;
"RTN","IBRFIHL2",292,0)
 S:FLD1'="" OBX013(SID,FLD1)=$P($P(OBX(3),HLREP),HLCMP,4)    ;Health Care Claim Status Cat
"RTN","IBRFIHL2",293,0)
 S:FLD2'="" OBX013(SID,FLD2)=$P($P(OBX(3),HLREP),HLCMP)      ;Addtl Info Request Mod 2-Claim
"RTN","IBRFIHL2",294,0)
 S:FLD3'="" OBX013(SID,FLD3)=$S(CQUAL="LN":"LOI",1:CQUAL)    ;Code List Qualifier Code
"RTN","IBRFIHL2",295,0)
 ;
"RTN","IBRFIHL2",296,0)
 I SID=1,FLD2=1.02 D
"RTN","IBRFIHL2",297,0)
 .S DATA(368,22.03)=$P($P(OBX(3),HLREP),HLCMP)  ; Save primiary LOINC for worklist
"RTN","IBRFIHL2",298,0)
 .;*******************************************************************
"RTN","IBRFIHL2",299,0)
 .;The following code has been commented out to avoid performing a
"RTN","IBRFIHL2",300,0)
 .;lookup into the LAB LOINC file (#95.3) because an Integration
"RTN","IBRFIHL2",301,0)
 .;Agreement could not be obtained.
"RTN","IBRFIHL2",302,0)
 .;S VAL=$P($P(OBX(3),HLREP),HLCMP) S VAL=$S(VAL["-":$P(VAL,"-"),1:$E(VAL,1,$L(VAL)-1))
"RTN","IBRFIHL2",303,0)
 .;S IEN=$$FIND1^DIC(95.3,,,VAL) S:IEN>0 DATA(368,122.03)=IEN  ; Save primiary LOINC [D]for worklist
"RTN","IBRFIHL2",304,0)
 ;*******************************************************************
"RTN","IBRFIHL2",305,0)
 ;
"RTN","IBRFIHL2",306,0)
 I OBXTYP="STC01" D
"RTN","IBRFIHL2",307,0)
 .S SID=$O(OBX0113(""),-1)+1
"RTN","IBRFIHL2",308,0)
 .S OBX0113(SID,.01)=SID
"RTN","IBRFIHL2",309,0)
 .S OBX0113(SID,.02)=$$FMDATE^HLFNC($P(OBX(14),HLCMP))
"RTN","IBRFIHL2",310,0)
 I (OBXTYP="STC10")!(OBXTYP="STC11") S SID=$O(OBX0113(""),-1)
"RTN","IBRFIHL2",311,0)
 ;
"RTN","IBRFIHL2",312,0)
 I FLD1'="" S IEN=$$FIND1^DIC(368.001,,,$P($P(OBX(3),HLREP),HLCMP,4)) S:IEN>0 OBX0113(SID,FLD1)=IEN
"RTN","IBRFIHL2",313,0)
 ;*******************************************************************
"RTN","IBRFIHL2",314,0)
 ;The following code has been commented out to avoid performing a
"RTN","IBRFIHL2",315,0)
 ;lookup into the LAB LOINC file (#95.3) because an Integration
"RTN","IBRFIHL2",316,0)
 ;Agreement could not be obtained.
"RTN","IBRFIHL2",317,0)
 ;S VAL=$P($P(OBX(3),HLREP),HLCMP) S VAL=$S(VAL["-":$P(VAL,"-"),1:$E(VAL,1,$L(VAL)-1))
"RTN","IBRFIHL2",318,0)
 ;I FLD2'="" S IEN=$$FIND1^DIC(95.3,,,VAL) S:IEN>0 OBX0113(SID,FLD2)=IEN
"RTN","IBRFIHL2",319,0)
 ;*******************************************************************
"RTN","IBRFIHL2",320,0)
 Q
"RTN","IBRFIHLI")
0^59^B4300194^n/a
"RTN","IBRFIHLI",1,0)
IBRFIHLI ;TDM/DAL - Incoming HL7 messages ; 12/30/15 11:45am
"RTN","IBRFIHLI",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBRFIHLI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIHLI",4,0)
 ;
"RTN","IBRFIHLI",5,0)
 ;**Program Description**
"RTN","IBRFIHLI",6,0)
 ;  This program parses each incoming HL7 message.
"RTN","IBRFIHLI",7,0)
 ;
"RTN","IBRFIHLI",8,0)
EN ;  Starting point - put message into a TMP global
"RTN","IBRFIHLI",9,0)
 ;
"RTN","IBRFIHLI",10,0)
 N ACK,BUFF,DFN,ERACT,ERCON,ERFLG,ERTXT,EVENT,HCT,HLECH,HLEID
"RTN","IBRFIHLI",11,0)
 N HLEIDS,HLFS,HLQ,IBPRTCL,IDUZ,MGRP,MSGID,RDAT0,RIEN,SBDEP,SEG
"RTN","IBRFIHLI",12,0)
 N SEGMT,SEGMT2,TAG,TQN,TRACE,VRFDT,DISYS,IPCT,PAYRID,PIEN,CNT
"RTN","IBRFIHLI",13,0)
 N ERROR,IRIEN,RSTYPE,SUBID,TQIEN
"RTN","IBRFIHLI",14,0)
 N DA,EBDA,IBFDA,II,MSGP,SYMBOL,IBSEG,PP,PRIEN,QFL,IBIEN,TQDATA,IBQFL
"RTN","IBRFIHLI",15,0)
 N DATA,OBXDATA,PSLDATA,HLQUIT,HLNODE,HLNEXT
"RTN","IBRFIHLI",16,0)
 ;
"RTN","IBRFIHLI",17,0)
 S HLQUIT=0,HLNODE="",HLNEXT="D HLNEXT^HLCSUTL"
"RTN","IBRFIHLI",18,0)
 K ^TMP($J,"IBRFIHLI")
"RTN","IBRFIHLI",19,0)
 F SEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","IBRFIHLI",20,0)
 .S CNT=0
"RTN","IBRFIHLI",21,0)
 .S ^TMP($J,"IBRFIHLI",SEGCNT,CNT)=HLNODE
"RTN","IBRFIHLI",22,0)
 .F  S CNT=$O(HLNODE(CNT)) Q:'CNT  D
"RTN","IBRFIHLI",23,0)
 ..S ^TMP($J,"IBRFIHLI",SEGCNT,CNT)=HLNODE(CNT)
"RTN","IBRFIHLI",24,0)
 ;
"RTN","IBRFIHLI",25,0)
 ;  Get the interface user
"RTN","IBRFIHLI",26,0)
 S IDUZ=$$FIND1^DIC(200,"","X","INTERFACE,IB RFI")
"RTN","IBRFIHLI",27,0)
 ;   Determine which protocol to use
"RTN","IBRFIHLI",28,0)
 S SEGMT=$G(^TMP($J,"IBRFIHLI",1,0))
"RTN","IBRFIHLI",29,0)
 Q:$E(SEGMT,1,3)'="MSH"
"RTN","IBRFIHLI",30,0)
 S HLFS=$E(SEGMT,4)
"RTN","IBRFIHLI",31,0)
 S EVENT=$P(SEGMT,HLFS,9),IBPRTCL=""
"RTN","IBRFIHLI",32,0)
 ;
"RTN","IBRFIHLI",33,0)
 ;  The event type determines protocol
"RTN","IBRFIHLI",34,0)
 I EVENT="EHC^E12" S IBPRTCL="IBRFI 277 IN"
"RTN","IBRFIHLI",35,0)
 ;
"RTN","IBRFIHLI",36,0)
 ;  Initialize the HL7 variables
"RTN","IBRFIHLI",37,0)
 D INIT^HLFNC2(IBPRTCL,.HL)
"RTN","IBRFIHLI",38,0)
 ;
"RTN","IBRFIHLI",39,0)
 ;  Call the event tag
"RTN","IBRFIHLI",40,0)
 D PROC
"RTN","IBRFIHLI",41,0)
 ;
"RTN","IBRFIHLI",42,0)
XIT K ^TMP($J,"IBRFIHLI"),HL,HLNEXT,HLNODE,HLQUIT,SEGCNT
"RTN","IBRFIHLI",43,0)
 Q
"RTN","IBRFIHLI",44,0)
 ;
"RTN","IBRFIHLI",45,0)
PROC ; Process message
"RTN","IBRFIHLI",46,0)
 D ^IBRFIHL1
"RTN","IBRFIHLI",47,0)
 ;
"RTN","IBRFIHLI",48,0)
 K ACK,BUFF,DFN,ERACT,ERCON,ERFLG,ERTXT,EVENT,HCT,HL,HLECH,HLEID
"RTN","IBRFIHLI",49,0)
 K HLEIDS,HLFS,HLQ,IBPRTCL,IDUZ,MGRP,MSGID,RDAT0,RIEN,SBDEP,SEG
"RTN","IBRFIHLI",50,0)
 K SEGMT,SEGMT2,TAG,TQN,TRACE,VRFDT,DISYS,IPCT,PAYRID,PIEN
"RTN","IBRFIHLI",51,0)
 K ERROR,IRIEN,RSTYPE,SUBID,TQIEN
"RTN","IBRFIHLI",52,0)
 K DA,EBDA,IBFDA,II,MSGP,SYMBOL,IBSEG,PP,PRIEN,QFL
"RTN","IBRFIHLI",53,0)
 Q
"RTN","IBRFIHLU")
0^60^B7107625^n/a
"RTN","IBRFIHLU",1,0)
IBRFIHLU ;TDM/DAL - HL7 Utilities ;24-AUG-2015  ; 1/8/16 1:14pm
"RTN","IBRFIHLU",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBRFIHLU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIHLU",4,0)
 ;
"RTN","IBRFIHLU",5,0)
HLP(PROTOCOL) ;  Find the Protocol IEN
"RTN","IBRFIHLU",6,0)
 Q +$O(^ORD(101,"B",PROTOCOL,0))
"RTN","IBRFIHLU",7,0)
 ;
"RTN","IBRFIHLU",8,0)
NAME(NM) ;  Convert a name that isn't in standard VISTA format -
"RTN","IBRFIHLU",9,0)
 NEW LNM,FNM,MI
"RTN","IBRFIHLU",10,0)
 ;
"RTN","IBRFIHLU",11,0)
 I NM?." " Q NM
"RTN","IBRFIHLU",12,0)
 ;  LastName,FirstName MI
"RTN","IBRFIHLU",13,0)
 I NM["," Q NM
"RTN","IBRFIHLU",14,0)
 ;
"RTN","IBRFIHLU",15,0)
 ; Remove double-spaces from name
"RTN","IBRFIHLU",16,0)
 F  Q:$L(NM,"  ")<2  S NM=$P(NM,"  ",1)_" "_$P(NM,"  ",2,9999)
"RTN","IBRFIHLU",17,0)
 ;
"RTN","IBRFIHLU",18,0)
 ; Trim leading/trailing spaces
"RTN","IBRFIHLU",19,0)
 S NM=$$TRIM^XLFSTR(NM)
"RTN","IBRFIHLU",20,0)
 ;
"RTN","IBRFIHLU",21,0)
 ; Find number of spaces in name
"RTN","IBRFIHLU",22,0)
 S II=$L(NM," ")
"RTN","IBRFIHLU",23,0)
 ;
"RTN","IBRFIHLU",24,0)
 I II>3 Q NM
"RTN","IBRFIHLU",25,0)
 I II=3 S FNM=$P(NM," ",1),MI=" "_$P(NM," ",2),LNM=$P(NM," ",3)
"RTN","IBRFIHLU",26,0)
 I II=2 S FNM=$P(NM," ",1),LNM=$P(NM," ",2),MI=""
"RTN","IBRFIHLU",27,0)
 I II<2 Q NM
"RTN","IBRFIHLU",28,0)
 Q LNM_","_FNM_MI
"RTN","IBRFIHLU",29,0)
 ;
"RTN","IBRFIHLU",30,0)
SPAR     ;  Segment Parsing
"RTN","IBRFIHLU",31,0)
 ;
"RTN","IBRFIHLU",32,0)
 ; This tag will parse the current segment referenced by the HCT index
"RTN","IBRFIHLU",33,0)
 ; and place the results in the IBSEG array.
"RTN","IBRFIHLU",34,0)
 ;
"RTN","IBRFIHLU",35,0)
 ; Input Variables
"RTN","IBRFIHLU",36,0)
 ; HCT
"RTN","IBRFIHLU",37,0)
 ;
"RTN","IBRFIHLU",38,0)
 ; Output Variables
"RTN","IBRFIHLU",39,0)
 ; IBSEG (ARRAY of fields in segment)
"RTN","IBRFIHLU",40,0)
 ;
"RTN","IBRFIHLU",41,0)
 N II,IJ,IK,IM,IS,ISBEG,ISCT,ISDATA,ISEND,ISPEC,LSDATA,NPC
"RTN","IBRFIHLU",42,0)
 ;
"RTN","IBRFIHLU",43,0)
 ;Reset IBSEG
"RTN","IBRFIHLU",44,0)
 K IBSEG
"RTN","IBRFIHLU",45,0)
 ;
"RTN","IBRFIHLU",46,0)
 S ISCT="",II=0,IS=0
"RTN","IBRFIHLU",47,0)
 F  S ISCT=$O(^TMP($J,"IBRFIHLI",HCT,ISCT)) Q:ISCT=""  D
"RTN","IBRFIHLU",48,0)
 . S IS=IS+1
"RTN","IBRFIHLU",49,0)
 . S ISDATA(IS)=$G(^TMP($J,"IBRFIHLI",HCT,ISCT))
"RTN","IBRFIHLU",50,0)
 . I $E(ISDATA(IS),1)=$C(10) S ISDATA(IS)=$E(ISDATA(IS),2,($L(ISDATA(IS))))    ;Strip out Line Feed
"RTN","IBRFIHLU",51,0)
 . I $O(^TMP($J,"IBRFIHLI",HCT,ISCT))="" S ISDATA(IS)=ISDATA(IS)_HLFS
"RTN","IBRFIHLU",52,0)
 . S ISPEC(IS)=$L(ISDATA(IS),HLFS)
"RTN","IBRFIHLU",53,0)
 ;
"RTN","IBRFIHLU",54,0)
 S IM=0,LSDATA=""
"RTN","IBRFIHLU",55,0)
LP S IM=IM+1 Q:IM>IS
"RTN","IBRFIHLU",56,0)
 S LSDATA=LSDATA_ISDATA(IM),NPC=ISPEC(IM)
"RTN","IBRFIHLU",57,0)
 F IJ=1:1:NPC-1 D
"RTN","IBRFIHLU",58,0)
 . S II=II+1,IBSEG(II)=$$CLNSTR($P(LSDATA,HLFS,IJ),$E(HL("ECH"),1,2)_$E(HL("ECH"),4),$E(HL("ECH")))
"RTN","IBRFIHLU",59,0)
 S LSDATA=$P(LSDATA,HLFS,NPC)
"RTN","IBRFIHLU",60,0)
 G LP
"RTN","IBRFIHLU",61,0)
CLNSTR(STRING,CHARS,SUBSEP)      ; Remove extra trailing components and subcomponents in the HL7 seg
"RTN","IBRFIHLU",62,0)
 ;
"RTN","IBRFIHLU",63,0)
 N NUMPEC,PEC,RTSTRING
"RTN","IBRFIHLU",64,0)
 ;
"RTN","IBRFIHLU",65,0)
 S RTSTRING=$$RTRIMCH(STRING,CHARS)
"RTN","IBRFIHLU",66,0)
 ; Now we have string w/o trailing chars, remove from subs
"RTN","IBRFIHLU",67,0)
 S NUMPEC=$L(RTSTRING,SUBSEP)
"RTN","IBRFIHLU",68,0)
 F PEC=1:1:NUMPEC S $P(RTSTRING,SUBSEP,PEC)=$$RTRIMCH($P(RTSTRING,SUBSEP,PEC),CHARS)
"RTN","IBRFIHLU",69,0)
 Q RTSTRING
"RTN","IBRFIHLU",70,0)
 ;
"RTN","IBRFIHLU",71,0)
RTRIMCH(STR,CHRS) ; Remove the trailing chars from string
"RTN","IBRFIHLU",72,0)
 ;
"RTN","IBRFIHLU",73,0)
 N R,L
"RTN","IBRFIHLU",74,0)
 ;
"RTN","IBRFIHLU",75,0)
 S L=1,CHRS=$G(CHRS," ")
"RTN","IBRFIHLU",76,0)
 F R=$L(STR):-1:1 Q:CHRS'[$E(STR,R)
"RTN","IBRFIHLU",77,0)
 I L=R,(CHRS[$E(STR)) S STR=""
"RTN","IBRFIHLU",78,0)
 Q $E(STR,L,R)
"RTN","IBRFIN")
0^53^B7093032^n/a
"RTN","IBRFIN",1,0)
IBRFIN ;ALB/JWS - RFAI Message Detail Worklist; 21-OCT-2015
"RTN","IBRFIN",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBRFIN",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIN",4,0)
 ;;
"RTN","IBRFIN",5,0)
EN ; -- main entry point for IBRFI COMMENTS
"RTN","IBRFIN",6,0)
 N VALMCNT,VALMBG,VALMHDR
"RTN","IBRFIN",7,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBRFIN",8,0)
 D EN^VALM("IBRFI COMMENTS")
"RTN","IBRFIN",9,0)
 S VALMBCK="R"
"RTN","IBRFIN",10,0)
 Q
"RTN","IBRFIN",11,0)
 ;
"RTN","IBRFIN",12,0)
HDR ; -- header code
"RTN","IBRFIN",13,0)
 N IBCLAIM
"RTN","IBRFIN",14,0)
 S IBCLAIM=$$GET1^DIQ(368,RFAIEN,111.01)
"RTN","IBRFIN",15,0)
 S:IBCLAIM="" IBCLAIM=$$GET1^DIQ(368,RFAIEN,11.01)
"RTN","IBRFIN",16,0)
 ;S VALMHDR(1)="RFAI Claim Comment History"
"RTN","IBRFIN",17,0)
 S VALMHDR(1)=IBCLAIM
"RTN","IBRFIN",18,0)
 Q
"RTN","IBRFIN",19,0)
 ;
"RTN","IBRFIN",20,0)
INIT ; -- init variables and list array
"RTN","IBRFIN",21,0)
 N LN,CO1,CO0,IBDUZ,IBDATE,STR,CMT,CMT0,MAX,POS,LEN
"RTN","IBRFIN",22,0)
 K @VALMAR
"RTN","IBRFIN",23,0)
 S LN=1
"RTN","IBRFIN",24,0)
 ; check if we have any comments to display
"RTN","IBRFIN",25,0)
 ; loop through all available comments
"RTN","IBRFIN",26,0)
 S CO1=0 F  S CO1=$O(^IBA(368,RFAIEN,201,CO1)) Q:CO1'=+CO1  D
"RTN","IBRFIN",27,0)
 . S CO0=$G(^IBA(368,RFAIEN,201,CO1,0)) I CO0="" Q
"RTN","IBRFIN",28,0)
 . S IBDUZ=$P(CO0,U,2),IBDATE=$P(CO0,U)
"RTN","IBRFIN",29,0)
 . D SET^VALM10(LN,"") S LN=LN+1
"RTN","IBRFIN",30,0)
 . S STR="",STR=$$SETFLD^VALM1("Entered by "_$$GET1^DIQ(200,IBDUZ,.01)_" on "_$$FMTE^XLFDT(IBDATE,"2ZM"),STR,"ENTERED")
"RTN","IBRFIN",31,0)
 . D SET^VALM10(LN,STR),FLDCTRL^VALM10(LN) S LN=LN+1
"RTN","IBRFIN",32,0)
 . S CMT=0 F  S CMT=$O(^IBA(368,RFAIEN,201,CO1,1,CMT)) Q:CMT'=+CMT  D
"RTN","IBRFIN",33,0)
 .. S CMT0=$G(^IBA(368,RFAIEN,201,CO1,1,CMT,0)) I CMT0="" Q
"RTN","IBRFIN",34,0)
 .. S MAX=$P(VALMDDF("MESSAGE"),U,3) ; max. number of characters in the "MESSAGE" field
"RTN","IBRFIN",35,0)
 .. ; if comment line is too long, split it into chunks that fit in the "MESSAGE" field
"RTN","IBRFIN",36,0)
 .. F  D  Q:CMT0=""
"RTN","IBRFIN",37,0)
 ... S (POS,LEN)=$L(CMT0) I LEN>MAX S POS=MAX F  Q:POS=0  Q:$E(CMT0,POS)=" "  S POS=POS-1 ; try to make a split on a space char.
"RTN","IBRFIN",38,0)
 ... S:'POS POS=MAX ; if we couldn't find a space, split at the max. number of chars
"RTN","IBRFIN",39,0)
 ... ; populate list manager array with this substring and remove it from the comment line
"RTN","IBRFIN",40,0)
 ... S STR="",STR=$$SETFLD^VALM1($E(CMT0,1,POS),STR,"MESSAGE") D SET^VALM10(LN,STR) S LN=LN+1,CMT0=$E(CMT0,POS+1,LEN)
"RTN","IBRFIN",41,0)
 ... Q
"RTN","IBRFIN",42,0)
 .. Q
"RTN","IBRFIN",43,0)
 . Q
"RTN","IBRFIN",44,0)
 S VALMCNT=LN-1
"RTN","IBRFIN",45,0)
 Q
"RTN","IBRFIN",46,0)
 ;
"RTN","IBRFIN",47,0)
HELP ; -- help code
"RTN","IBRFIN",48,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBRFIN",49,0)
 Q
"RTN","IBRFIN",50,0)
 ;
"RTN","IBRFIN",51,0)
EXIT ; -- exit code
"RTN","IBRFIN",52,0)
 K @VALMAR
"RTN","IBRFIN",53,0)
 Q
"RTN","IBRFIN",54,0)
 ;
"RTN","IBRFIN",55,0)
EXPND ; -- expand code
"RTN","IBRFIN",56,0)
 Q
"RTN","IBRFIN",57,0)
 ;
"RTN","IBRFIWL")
0^29^B194634880^n/a
"RTN","IBRFIWL",1,0)
IBRFIWL ;ALB/FA - IB LIST OF Request For Additional Information (RFAI) SCREEN ;18-JUL-2015
"RTN","IBRFIWL",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-1994;Build 119
"RTN","IBRFIWL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIWL",4,0)
 ;
"RTN","IBRFIWL",5,0)
EN ; Main entry point for RFAI Management Worklist
"RTN","IBRFIWL",6,0)
 ; Input: None
"RTN","IBRFIWL",7,0)
 ; Output:  IBAUTHB     - Selected Authorized Biller(s)
"RTN","IBRFIWL",8,0)
 ;          IBSORT1     - Selected Primary Sort
"RTN","IBRFIWL",9,0)
 ;          IBSORT2     - Selected Secondary Sort
"RTN","IBRFIWL",10,0)
 N IBAUTHB,IBDONE,IBSORT1,IBSORT2,VALMSG
"RTN","IBRFIWL",11,0)
 S IBDONE=$$SORT(0)
"RTN","IBRFIWL",12,0)
 I IBDONE D  Q
"RTN","IBRFIWL",13,0)
 . W !!,*7,"Sort Criteria was not selected"
"RTN","IBRFIWL",14,0)
 . D PAUSE^VALM1
"RTN","IBRFIWL",15,0)
 . S VALMQUIT=1
"RTN","IBRFIWL",16,0)
 D EN^VALM("IBRFI 277 WL")
"RTN","IBRFIWL",17,0)
 Q
"RTN","IBRFIWL",18,0)
 ;
"RTN","IBRFIWL",19,0)
HDR ;EP
"RTN","IBRFIWL",20,0)
 ; Build the listman template header information
"RTN","IBRFIWL",21,0)
 ; Input:   IBAUTHB     - Selected Authorized Biller(s)
"RTN","IBRFIWL",22,0)
 ;          IBSORT1     - Selected Primary Sort
"RTN","IBRFIWL",23,0)
 ;          IBSORT2     - Selected Secondary Sort
"RTN","IBRFIWL",24,0)
 ; Output:  VALMHDR     - array of header lines for the templaqte3
"RTN","IBRFIWL",25,0)
 ;N XX
"RTN","IBRFIWL",26,0)
 ;S XX="Primary Sort: "_$$SD^IBRFIWLA(IBSORT1)
"RTN","IBRFIWL",27,0)
 ;S:IBSORT2'="" XX=XX_"   Secondary Sort: "_$$SD^IBRFIWLA(IBSORT2)
"RTN","IBRFIWL",28,0)
 ;S VALMHDR(1)=XX
"RTN","IBRFIWL",29,0)
 ;S:IBAUTHB VALMHDR(2)="Filter: Selected Authorized Billers"
"RTN","IBRFIWL",30,0)
 Q
"RTN","IBRFIWL",31,0)
 ;
"RTN","IBRFIWL",32,0)
INIT ;EP
"RTN","IBRFIWL",33,0)
 ; Initialize variables and list array
"RTN","IBRFIWL",34,0)
 ; Input:   IBAUTHB     - Selected Authorized Biller(s)
"RTN","IBRFIWL",35,0)
 ;          IBSORT1     - Selected Primary Sort
"RTN","IBRFIWL",36,0)
 ;          IBSORT2     - Selected Secondary Sort
"RTN","IBRFIWL",37,0)
 ;K ^TMP("IBBIL",$J)
"RTN","IBRFIWL",38,0)
 K ^TMP("IBRFIWL",$J),^TMP("IBRFIWLS",$J),^TMP("IBRFIWLIX",$J)
"RTN","IBRFIWL",39,0)
 K VALMQUIT
"RTN","IBRFIWL",40,0)
 S VALMSG="|* Review in progress | Enter ?? for more actions|"
"RTN","IBRFIWL",41,0)
 D BLD(.IBAUTHB,IBSORT1,IBSORT2)
"RTN","IBRFIWL",42,0)
 Q
"RTN","IBRFIWL",43,0)
 ;
"RTN","IBRFIWL",44,0)
SORT(REBUILD) ;EP
"RTN","IBRFIWL",45,0)
 ; Protocol action and also called initially from method EN
"RTN","IBRFIWL",46,0)
 ; Select/ReSelect Sort/Filter criteria
"RTN","IBRFIWL",47,0)
 ; Input:   REBUILD     - 1 to rebuild the worklist (set to 1 from Resort
"RTN","IBRFIWL",48,0)
 ;                          protocol option)
"RTN","IBRFIWL",49,0)
 ;                        Optional, defaults to 0
"RTN","IBRFIWL",50,0)
 ;          IBAUTHB     - Currently Selected Authorized Biller(s)
"RTN","IBRFIWL",51,0)
 ;          IBSORT1     - Currently Selected Primary Sort
"RTN","IBRFIWL",52,0)
 ;          IBSORT2     - Currently Selected Secondary Sort
"RTN","IBRFIWL",53,0)
 ; Output:  IBAUTHB     - Currently Selected Authorized Biller(s)
"RTN","IBRFIWL",54,0)
 ;          IBSORT1     - Currently Selected Primary Sort
"RTN","IBRFIWL",55,0)
 ;          IBSORT2     - Currently Selected Secondary Sort
"RTN","IBRFIWL",56,0)
 ; Returns: 1 - User exited without entering Sort/Filter criteria
"RTN","IBRFIWL",57,0)
 ;          0 Otherwise
"RTN","IBRFIWL",58,0)
 N IBDONE,IBSTOP,XX
"RTN","IBRFIWL",59,0)
 S:'$D(REBUILD) REBUILD=0
"RTN","IBRFIWL",60,0)
 D FULL^VALM1
"RTN","IBRFIWL",61,0)
 D AUTHB(.IBAUTHB,.IBDONE)                      ; Authorized Biller filter
"RTN","IBRFIWL",62,0)
 Q:IBDONE 1
"RTN","IBRFIWL",63,0)
 S IBSORT1=$$SORTSET^IBRFIWLA(1,"L","",.IBDONE) ; Primary Sort
"RTN","IBRFIWL",64,0)
 Q:IBDONE 1
"RTN","IBRFIWL",65,0)
 ;
"RTN","IBRFIWL",66,0)
 ; If the user selected Oldest or Newest Date Received as the primary sort,
"RTN","IBRFIWL",67,0)
 ; Do not ask for secondary sort
"RTN","IBRFIWL",68,0)
 ;I (IBSORT1="O")!(IBSORT1="N") S IBSORT2=0
"RTN","IBRFIWL",69,0)
 ;E  D
"RTN","IBRFIWL",70,0)
 ;. S XX=$S(IBSORT1="O":"",1:"O")                ; Default Secondary Sort
"RTN","IBRFIWL",71,0)
 ;. S IBSORT2=$$SORTSET^IBRFIWLA(2,XX,IBSORT1,.IBDONE)    ; Secondary Sort
"RTN","IBRFIWL",72,0)
 S XX=$S(IBSORT1="O"!(IBSORT1="N"):"L",1:"O")                ; Default Secondary Sort
"RTN","IBRFIWL",73,0)
 S IBSORT2=$$SORTSET^IBRFIWLA(2,XX,IBSORT1,.IBDONE)    ; Secondary Sort
"RTN","IBRFIWL",74,0)
 I REBUILD D
"RTN","IBRFIWL",75,0)
 . D INIT                                       ; Rebuild Sorted worklist
"RTN","IBRFIWL",76,0)
 . D HDR                                        ; Redisplay Header
"RTN","IBRFIWL",77,0)
 . S VALMBCK="R"
"RTN","IBRFIWL",78,0)
 Q:IBDONE 1
"RTN","IBRFIWL",79,0)
 Q 0
"RTN","IBRFIWL",80,0)
 ;
"RTN","IBRFIWL",81,0)
AUTHB(IBAUTHB,IBDONE)  ; Set the Authorized Biller
"RTN","IBRFIWL",82,0)
 ; Input:   None
"RTN","IBRFIWL",83,0)
 ; Output:  IBAUTHB     - 1 - Authorized Biller(s) selected, 0 otherwise
"RTN","IBRFIWL",84,0)
 ;          IBDONE      - 1 if user quit or timed out
"RTN","IBRFIWL",85,0)
 ;
"RTN","IBRFIWL",86,0)
 K ^TMP("IBBIL",$J)
"RTN","IBRFIWL",87,0)
 N FIRST,DIC,DTOUT,DONE,DUOUT,X,Y
"RTN","IBRFIWL",88,0)
 S FIRST=1,(DONE,IBDONE)=0,IBAUTHB=0
"RTN","IBRFIWL",89,0)
 F  D  Q:DONE
"RTN","IBRFIWL",90,0)
 . S DIC="^VA(200,",DIC(0)="AEQM"
"RTN","IBRFIWL",91,0)
 . S DIC("A")="Select "_$S(FIRST:"",1:" Another ")_"Authorizing Biller: "
"RTN","IBRFIWL",92,0)
 . S:FIRST DIC("A")=DIC("A")_"ALL// "
"RTN","IBRFIWL",93,0)
 . D ^DIC
"RTN","IBRFIWL",94,0)
 . K DIC
"RTN","IBRFIWL",95,0)
 . I Y<0 S DONE=1 Q
"RTN","IBRFIWL",96,0)
 . I $D(^TMP("IBBIL",$J,+Y)) D  Q
"RTN","IBRFIWL",97,0)
 . . W !!,*7,"This biller has already been selected",!
"RTN","IBRFIWL",98,0)
 . S ^TMP("IBBIL",$J,+Y)="",FIRST=0,IBAUTHB=1
"RTN","IBRFIWL",99,0)
 I $D(DTOUT)!$D(DUOUT) S IBDONE=1 Q
"RTN","IBRFIWL",100,0)
 Q
"RTN","IBRFIWL",101,0)
 ;
"RTN","IBRFIWL",102,0)
BLD(IBAUTHB,IBSORT1,IBSORT2) ; Build the listman template body
"RTN","IBRFIWL",103,0)
 ; Input:   IBAUTHB                         - Authorized Biller filter
"RTN","IBRFIWL",104,0)
 ;          IBSORT1                         - Primary Sort
"RTN","IBRFIWL",105,0)
 ;          IBSORT2                         - Secondary Sort
"RTN","IBRFIWL",106,0)
 ;          ^TMP("IBRFIWLS",$J,A,B)=RFAIEN  - See GETMSGS
"RTN","IBRFIWL",107,0)
 ;          ^TMP("IBRIFWLIX",$J,CNT)=RFAIEN^### - Message Selector Index
"RTN","IBRFIWL",108,0)
 N AA,CNT,PFILTER,RFAIEN,S1,S2,XX,SFILTER
"RTN","IBRFIWL",109,0)
 D GETMSGS(.IBAUTHB,IBSORT1,IBSORT2)            ; Get Sorted/Filtered list
"RTN","IBRFIWL",110,0)
 S (CNT,VALMCNT)=0,(AA,PFILTER,S1)=""
"RTN","IBRFIWL",111,0)
 F  D  Q:AA=""
"RTN","IBRFIWL",112,0)
 . S AA=$O(^TMP("IBRFIWLS",$J,AA))
"RTN","IBRFIWL",113,0)
 . Q:AA=""
"RTN","IBRFIWL",114,0)
 . S S1=""
"RTN","IBRFIWL",115,0)
 . F  D  Q:S1=""
"RTN","IBRFIWL",116,0)
 . . S S1=$O(^TMP("IBRFIWLS",$J,AA,S1))
"RTN","IBRFIWL",117,0)
 . . Q:S1=""
"RTN","IBRFIWL",118,0)
 . . S S2=""
"RTN","IBRFIWL",119,0)
 . . F  D  Q:S2=""
"RTN","IBRFIWL",120,0)
 . . . S S2=$O(^TMP("IBRFIWLS",$J,AA,S1,S2))
"RTN","IBRFIWL",121,0)
 . . . Q:S2=""
"RTN","IBRFIWL",122,0)
 . . . S RFAIEN=""
"RTN","IBRFIWL",123,0)
 . . . F  D  Q:RFAIEN=""
"RTN","IBRFIWL",124,0)
 . . . . S RFAIEN=$O(^TMP("IBRFIWLS",$J,AA,S1,S2,RFAIEN))
"RTN","IBRFIWL",125,0)
 . . . . Q:RFAIEN=""
"RTN","IBRFIWL",126,0)
 . . . . S XX=$S(AA="~":S1,1:0)
"RTN","IBRFIWL",127,0)
 . . . . D BLDONEM(.VALMCNT,.CNT,RFAIEN,IBSORT1,.PFILTER,XX,S1,IBSORT2,S2,.SFILTER)
"RTN","IBRFIWL",128,0)
 Q
"RTN","IBRFIWL",129,0)
 ;
"RTN","IBRFIWL",130,0)
GETMSGS(IBAUTHB,IBSORT1,IBSORT2) ; Retrieves the RFAI Messages filtering
"RTN","IBRFIWL",131,0)
 ; by Authorized Biller in sorted order
"RTN","IBRFIWL",132,0)
 ; Input:   IBAUTHB - Authorized Biller filter
"RTN","IBRFIWL",133,0)
 ;          IBSORT1 - Primary Sort
"RTN","IBRFIWL",134,0)
 ;          IBSORT2 - Secondary Sort
"RTN","IBRFIWL",135,0)
 ; Output:  ^TMP("IBRFIWLS",$J,A,B,C,IEN)=""- Where:
"RTN","IBRFIWL",136,0)
 ;                                        A   - ~ - Bad Record Indicator
"RTN","IBRFIWL",137,0)
 ;                                              1 - No Authorized Biller filter
"RTN","IBRFIWL",138,0)
 ;                                              Authorized Biller Name
"RTN","IBRFIWL",139,0)
 ;                                        B   - When A=0 - Bad Data Type
"RTN","IBRFIWL",140,0)
 ;                                              Otherwise Primary sort value
"RTN","IBRFIWL",141,0)
 ;                                        C   - When A=0 - 0
"RTN","IBRFIWL",142,0)
 ;                                              Otherwise Secondary Sort value OR
"RTN","IBRFIWL",143,0)
 ;                                              0 if no secondary sort
"RTN","IBRFIWL",144,0)
 ;                                        IEN - IEN of the RFAI Message
"RTN","IBRFIWL",145,0)
 N CNT,IBIFN,PIEN,RAUTHBV,RFAIEN,SKIP,STATUS,XX
"RTN","IBRFIWL",146,0)
 S CNT=0,RFAIEN=""
"RTN","IBRFIWL",147,0)
 F  D  Q:RFAIEN=""
"RTN","IBRFIWL",148,0)
 . S RFAIEN=$O(^IBA(368,"E",0,RFAIEN))
"RTN","IBRFIWL",149,0)
 . Q:RFAIEN=""
"RTN","IBRFIWL",150,0)
 . S SKIP=0
"RTN","IBRFIWL",151,0)
 . Q:$$BADREQ(RFAIEN)                           ; Quit if bad data error
"RTN","IBRFIWL",152,0)
 . S:'$G(IBAUTHB) RAUTHBV=1  ; No Authorized Biller filter or primary sort
"RTN","IBRFIWL",153,0)
 . S:IBSORT1="B" RAUTHBV=""
"RTN","IBRFIWL",154,0)
 . ;
"RTN","IBRFIWL",155,0)
 . ; Filtering on Authorized Biller
"RTN","IBRFIWL",156,0)
 . I $G(RAUTHBV)'=1 D  Q:SKIP
"RTN","IBRFIWL",157,0)
 . . S RAUTHBV=$$GET1^DIQ(399,IBIFN,11,"I")     ; IEN of Bill/Claims Authorizer
"RTN","IBRFIWL",158,0)
 . . ;
"RTN","IBRFIWL",159,0)
 . . ; If Request MRA bill, pull the MRA Requestor user instead
"RTN","IBRFIWL",160,0)
 . . I 'RAUTHBV D
"RTN","IBRFIWL",161,0)
 . . . S STATUS=$$GET1^DIQ(399,IBIFN,.13,"I")       ; Status of Bill
"RTN","IBRFIWL",162,0)
 . . . Q:STATUS'=2                              ; Not a Request MRA Bill
"RTN","IBRFIWL",163,0)
 . . . S RAUTHBV=$$GET1^DIQ(399,IBIFN,8,"I")    ; MRA Requestor
"RTN","IBRFIWL",164,0)
 . . ;
"RTN","IBRFIWL",165,0)
 . . ; Not a selected Authorized Biller
"RTN","IBRFIWL",166,0)
 . . I $G(IBAUTHB),'$D(^TMP("IBBIL",$J,RAUTHBV)) S SKIP=1 Q
"RTN","IBRFIWL",167,0)
 . . S RAUTHBV=$$GET1^DIQ(200,RAUTHBV,.01)      ; New Person NAME
"RTN","IBRFIWL",168,0)
 . ;
"RTN","IBRFIWL",169,0)
 . D GETONEM(RFAIEN,RAUTHBV,IBSORT1,IBSORT2,IBIFN)   ; Get One Message
"RTN","IBRFIWL",170,0)
 Q
"RTN","IBRFIWL",171,0)
 ;
"RTN","IBRFIWL",172,0)
BADREQ(RFAIEN) ; Marks a record that contains missing or incorrect
"RTN","IBRFIWL",173,0)
 ; critical data
"RTN","IBRFIWL",174,0)
 ; Input:   RFAIEN                  - IEN of the record containing bad data
"RTN","IBRFIWL",175,0)
 ;          ^TMP("IBRFIWLS",$J,-1,TYPE,0)=RFAIEN potentially
"RTN","IBRFIWL",176,0)
 ; Returns: 1 - Bad data found, 0 otherwise
"RTN","IBRFIWL",177,0)
 N PIEN,XX
"RTN","IBRFIWL",178,0)
 S IBIFN=$$GET1^DIQ(368,RFAIEN,111.01,"I")      ; IEN for Bill/Claims file
"RTN","IBRFIWL",179,0)
 I IBIFN="" D  Q 1
"RTN","IBRFIWL",180,0)
 . S ^TMP("IBRFIWLS",$J,"~",1,0,RFAIEN)=""
"RTN","IBRFIWL",181,0)
 ;
"RTN","IBRFIWL",182,0)
 S PIEN=$$GET1^DIQ(368,RFAIEN,109.01,"I")       ; Patient IEN
"RTN","IBRFIWL",183,0)
 I PIEN="" D  Q 1
"RTN","IBRFIWL",184,0)
 . S ^TMP("IBRFIWLS",$J,"~",2,0,RFAIEN)=""        ; Patient Bill/Mismatch
"RTN","IBRFIWL",185,0)
 Q 0
"RTN","IBRFIWL",186,0)
 ;
"RTN","IBRFIWL",187,0)
GETONEM(RFAIEN,RAUTHB,IBSORT1,IBSORT2,IBIFN)  ; Get the Data for a specified
"RTN","IBRFIWL",188,0)
 ; RFAI Message
"RTN","IBRFIWL",189,0)
 ; Input:   RFAIEN  - IEN of the selected RFAI Message
"RTN","IBRFIWL",190,0)
 ;          RAUTHB  - Authorized Biller Name
"RTN","IBRFIWL",191,0)
 ;                    1 - No Authorized Biller filter
"RTN","IBRFIWL",192,0)
 ;          IBSORT1 - Primary Sort Code
"RTN","IBRFIWL",193,0)
 ;          IBSORT2 - Secondary Sort Code 
"RTN","IBRFIWL",194,0)
 ;          IBIFN   - IEN for the associated Bill/Claims record          
"RTN","IBRFIWL",195,0)
 ; Output:  ^TMP("IBRFIWLS",$J,A,B,C)=IEN - Where:
"RTN","IBRFIWL",196,0)
 ;                                        A   - 0 - Bad Record Indicator
"RTN","IBRFIWL",197,0)
 ;                                              1 - No Authorized Biller filter or it passed the filter
"RTN","IBRFIWL",198,0)
 ;                                        B   - When A=0 - Bad Data Type
"RTN","IBRFIWL",199,0)
 ;                                              Otherwise Primary sort value
"RTN","IBRFIWL",200,0)
 ;                                        C   - When A=0 - 0
"RTN","IBRFIWL",201,0)
 ;                                              Otherwise Secondary Sort value OR
"RTN","IBRFIWL",202,0)
 ;                                              0 if no secondary sort
"RTN","IBRFIWL",203,0)
 ;                                        IEN - IEN of the RFAI Message
"RTN","IBRFIWL",204,0)
 N FIELDP,FIELDS,RDATE
"RTN","IBRFIWL",205,0)
 S (FIELDP,FIELDS)=""
"RTN","IBRFIWL",206,0)
 ;
"RTN","IBRFIWL",207,0)
 ; Determine the Primary Sort field
"RTN","IBRFIWL",208,0)
 S:(IBSORT1="N")!(IBSORT1="O") FIELDP=100.02    ; Request date/tinme
"RTN","IBRFIWL",209,0)
 I FIELDP="",((IBSORT1="E")!(IBSORT1="D")) D    ; Response Date
"RTN","IBRFIWL",210,0)
 . S FIELDP=112.01
"RTN","IBRFIWL",211,0)
 I FIELDP="",IBSORT1="I" S FIELDP=101.01        ; Insurance Company Name
"RTN","IBRFIWL",212,0)
 I FIELDP="",IBSORT1="P" S FIELDP=109.01        ; Patient Name
"RTN","IBRFIWL",213,0)
 I FIELDP="",IBSORT1="L" S FIELDP=122.03        ; LOINC Code
"RTN","IBRFIWL",214,0)
 S:FIELDP="" FIELDP=-1                          ; Authorized Biller
"RTN","IBRFIWL",215,0)
 ;
"RTN","IBRFIWL",216,0)
 ; Determine the Secondary Sort field
"RTN","IBRFIWL",217,0)
 I IBSORT2="" S FIELDS=-2                         ; No Secondary Sort
"RTN","IBRFIWL",218,0)
 S:(IBSORT2="N")!(IBSORT2="O") FIELDS=100.03       ; Transmission Date
"RTN","IBRFIWL",219,0)
 I FIELDS="",((IBSORT2="E")!(IBSORT2="D")) D    ; Request Due Date
"RTN","IBRFIWL",220,0)
 . S FIELDS=112.01
"RTN","IBRFIWL",221,0)
 I FIELDS="",IBSORT2="I" S FIELDS=101.01        ; Insurance Company Name
"RTN","IBRFIWL",222,0)
 I FIELDS="",IBSORT2="P" S FIELDS=109.01        ; Patient Name
"RTN","IBRFIWL",223,0)
 I FIELDS="",IBSORT2="L" S FIELDS=122.03        ; LOINC Code
"RTN","IBRFIWL",224,0)
 S:FIELDS="" FIELDS=-1                          ; Authorized Biller
"RTN","IBRFIWL",225,0)
 ;
"RTN","IBRFIWL",226,0)
 ; Get the sort values
"RTN","IBRFIWL",227,0)
 ;S RDATE=$S(IBSORT1="N":1,IBSORT1="E":1,1:2)
"RTN","IBRFIWL",228,0)
 S RDATE=$S(IBSORT1="O":1,IBSORT1="D":1,1:2)
"RTN","IBRFIWL",229,0)
 S FIELDP=$S(IBSORT1="B":RAUTHB,1:$$GETFVAL(FIELDP,RFAIEN,RAUTHB,RDATE)) ; Get Primary sort value
"RTN","IBRFIWL",230,0)
 I ".D.O.N.E."[("."_IBSORT1_".") S FIELDP=$P(FIELDP,".")   ; don't need times for sort
"RTN","IBRFIWL",231,0)
 ;S RDATE=$S(IBSORT2="N":1,IBSORT2="E":1,1:2)
"RTN","IBRFIWL",232,0)
 S RDATE=$S(IBSORT2="O":1,IBSORT2="D":1,1:2)
"RTN","IBRFIWL",233,0)
 S FIELDS=$$GETFVAL(FIELDS,RFAIEN,RAUTHB,RDATE) ; Get Secondary sort value
"RTN","IBRFIWL",234,0)
 I ".D.O.N.E."[("."_IBSORT2_".") S FIELDS=$P(FIELDS,".")
"RTN","IBRFIWL",235,0)
 I IBSORT2=""!(IBSORT2=0) S FIELDS=0  ; no secondary, avoild subscript error
"RTN","IBRFIWL",236,0)
 ;
"RTN","IBRFIWL",237,0)
 ; Finally set the sorted record into the list
"RTN","IBRFIWL",238,0)
 S ^TMP("IBRFIWLS",$J,$S(RAUTHB="~":"~",1:1),FIELDP,FIELDS,RFAIEN)=""
"RTN","IBRFIWL",239,0)
 Q
"RTN","IBRFIWL",240,0)
 ;
"RTN","IBRFIWL",241,0)
GETFVAL(FIELD,RFAIEN,RAUTHB,RDATE,RETNA) ;EP
"RTN","IBRFIWL",242,0)
 ; Returns the external value of the specified field
"RTN","IBRFIWL",243,0)
 ; Input:   FIELD   - # of the field to be retrieved
"RTN","IBRFIWL",244,0)
 ;                    NOTE: if this number is >100 AND no value is found, then
"RTN","IBRFIWL",245,0)
 ;                          the value of FIELD-100 will be returned which is
"RTN","IBRFIWL",246,0)
 ;                          the raw value received from the HL7 message. 
"RTN","IBRFIWL",247,0)
 ;                          The following are 'special' FIELD values:
"RTN","IBRFIWL",248,0)
 ;                             -1 - RAUTHB variable is used
"RTN","IBRFIWL",249,0)
 ;                             -2 - 0 is returned
"RTN","IBRFIWL",250,0)
 ;                             -3 - Last 4 digits of the SSN are returned
"RTN","IBRFIWL",251,0)
 ;                             -4 - Current balance is returned
"RTN","IBRFIWL",252,0)
 ;                          FIELD
"RTN","IBRFIWL",253,0)
 ;          RFAIEN  - IEN of the RFAI Message (file 368) to retrieve values from
"RTN","IBRFIWL",254,0)
 ;          RAUTHB  - IEN of the Authorized Billed (special case)
"RTN","IBRFIWL",255,0)
 ;                    Optional, defaults to ""
"RTN","IBRFIWL",256,0)
 ;          RDATE   - 1 - Return negative internal date (used for sorting)
"RTN","IBRFIWL",257,0)
 ;                    2 - Return internal date (used for sorting)
"RTN","IBRFIWL",258,0)
 ;                    3 - Force Date conversion to DD/MM/YY
"RTN","IBRFIWL",259,0)
 ;                    0 - Return external date (DD/MM/YY)
"RTN","IBRFIWL",260,0)
 ;                    Optional, defaults to 0
"RTN","IBRFIWL",261,0)
 ;          RETNA   - 2 - Return null if field does not contain a value
"RTN","IBRFIWL",262,0)
 ;                    1 - Return '*NA*' if field does not contain a value
"RTN","IBRFIWL",263,0)
 ;                    0 - Return '0'
"RTN","IBRFIWL",264,0)
 ;                    Optional, defaults to 0
"RTN","IBRFIWL",265,0)
 ; Returns: External Field value
"RTN","IBRFIWL",266,0)
 N VAL,VAL2,XX,YY
"RTN","IBRFIWL",267,0)
 S:'$D(RAUTHB) RAUTHB=0
"RTN","IBRFIWL",268,0)
 S:'$D(RDATE) RDATE=0
"RTN","IBRFIWL",269,0)
 S:'$D(RETNA) RETNA=0
"RTN","IBRFIWL",270,0)
 I $F(FIELD,",") D  Q VAL
"RTN","IBRFIWL",271,0)
 . N FILE
"RTN","IBRFIWL",272,0)
 . S FILE=$P(FIELD,","),FIELD=$P(FIELD,",",2)
"RTN","IBRFIWL",273,0)
 . S VAL=$$GET1^DIQ(FILE,RFAIEN,FIELD)
"RTN","IBRFIWL",274,0)
 . I RDATE=3,VAL]"" S VAL2=$$GET1^DIQ(FILE,RFAIEN,FIELD,"I") S:VAL2]"" VAL=$$FMTE^XLFDT(VAL2,"2DZ")
"RTN","IBRFIWL",275,0)
 . I VAL="" D                    ; Return raw value
"RTN","IBRFIWL",276,0)
 .. I FILE=368.0113 S FILE=368.013
"RTN","IBRFIWL",277,0)
 .. I FILE=368.0121 S FILE=368.021
"RTN","IBRFIWL",278,0)
 .. I FILE=368.12199 S FILE=368.2199
"RTN","IBRFIWL",279,0)
 .. S VAL=$$GET1^DIQ(FILE,RFAIEN,FIELD)
"RTN","IBRFIWL",280,0)
 .. I VAL="" S VAL=$S(RETNA=1:"*NA*",RETNA=2:"",1:0)
"RTN","IBRFIWL",281,0)
 .. Q
"RTN","IBRFIWL",282,0)
 . Q
"RTN","IBRFIWL",283,0)
 I FIELD=-1 Q $$GET1^DIQ(200,RAUTHB,.01)        ; Authorized Biller Name
"RTN","IBRFIWL",284,0)
 I FIELD=-2 Q 0
"RTN","IBRFIWL",285,0)
 I FIELD=-3 D  Q VAL                            ; Last 4 digits of SSN
"RTN","IBRFIWL",286,0)
 . S VAL=$$GET1^DIQ(368,RFAIEN,109.01,"I")      ; Patient Pointer
"RTN","IBRFIWL",287,0)
 . I VAL="" S VAL=$S(RETNA=1:"*NA*",RETNA=2:"",1:0) Q
"RTN","IBRFIWL",288,0)
 . S VAL=$$GET1^DIQ(2,VAL,.09)                 ; SSN number
"RTN","IBRFIWL",289,0)
 . I VAL="" S VAL=$S(RETNA=1:"*NA*",RETNA=2:"",1:0) Q
"RTN","IBRFIWL",290,0)
 . S VAL=$E(VAL,6,9)
"RTN","IBRFIWL",291,0)
 I FIELD=-4 D  Q VAL                            ; Current Balance
"RTN","IBRFIWL",292,0)
 . S VAL=$$GET1^DIQ(368,RFAIEN,111.01,"I")      ; Bill pointer
"RTN","IBRFIWL",293,0)
 . I VAL="" S VAL=$S(RETNA=1:"*NA*",RETNA=2:"",1:0) Q
"RTN","IBRFIWL",294,0)
 . S XX=$$GET1^DIQ(399,VAL,201,"I")             ; Current Balance
"RTN","IBRFIWL",295,0)
 . S YY=$$GET1^DIQ(399,VAL,202,"I")             ; Offset
"RTN","IBRFIWL",296,0)
 . S VAL=XX-YY
"RTN","IBRFIWL",297,0)
 ;
"RTN","IBRFIWL",298,0)
 S VAL=$$GET1^DIQ(368,RFAIEN,FIELD,"E")         ; Get external value
"RTN","IBRFIWL",299,0)
 I FIELD=122.03,VAL'="" S VAL=VAL_":  "_$$GET1^DIQ(368,RFAIEN,FIELD_":1")    ; add LOINC code description
"RTN","IBRFIWL",300,0)
 I FIELD=122.03,VAL="" S VAL=$$GET1^DIQ(368,RFAIEN,22.03,"E")  ; for LOINC codes not in LAB LOINC file
"RTN","IBRFIWL",301,0)
 I ((FIELD=100.02)!(FIELD=100.03)!(FIELD=.03)!(FIELD=122.04)!(FIELD=113.03)!(FIELD=112.01)!(FIELD=114.03)!(FIELD=114.04)),VAL'="" D  Q VAL
"RTN","IBRFIWL",302,0)
 . S VAL=$$GET1^DIQ(368,RFAIEN,FIELD,"I")
"RTN","IBRFIWL",303,0)
 . Q:RDATE=2                                    ; Return internal date
"RTN","IBRFIWL",304,0)
 . I RDATE=1 S VAL=VAL*-1 Q                     ; Return negative internal date
"RTN","IBRFIWL",305,0)
 . S VAL=$$FMTE^XLFDT(VAL,"2DZ")                ; Return external date  
"RTN","IBRFIWL",306,0)
 I VAL'="" Q VAL
"RTN","IBRFIWL",307,0)
 I VAL="",FIELD>100 D                    ; Return raw value
"RTN","IBRFIWL",308,0)
 . S FIELD=FIELD-100
"RTN","IBRFIWL",309,0)
 . S VAL=$$GET1^DIQ(368,RFAIEN,FIELD)
"RTN","IBRFIWL",310,0)
 S:VAL="" VAL=$S(RETNA=1:"*NA*",RETNA=2:"",1:0)
"RTN","IBRFIWL",311,0)
 Q VAL
"RTN","IBRFIWL",312,0)
 ;
"RTN","IBRFIWL",313,0)
BLDONEM(VALMCNT,MSGCNT,RFAIEN,IBSORT1,PFILTER,BTYPE,PSORT,IBSORT2,SSORT,SFILTER) ; Build one Message into
"RTN","IBRFIWL",314,0)
 ; the listman display
"RTN","IBRFIWL",315,0)
 ; Input:   VALMCNT                     - Current Line of the display being
"RTN","IBRFIWL",316,0)
 ;                                       (re)built
"RTN","IBRFIWL",317,0)
 ;          MSGCNT                      - Current Message Number
"RTN","IBRFIWL",318,0)
 ;          RFAIEN                      - IEN of the message to be displayed
"RTN","IBRFIWL",319,0)
 ;          IBSORT1                     - Primary Sort Code
"RTN","IBRFIWL",320,0)
 ;          PFILTER                     - Current Filter line value
"RTN","IBRFIWL",321,0)
 ;          BTYPE                       - 0 - Not a bad record
"RTN","IBRFIWL",322,0)
 ;                                        Otherwise, type of bad record (1-2)
"RTN","IBRFIWL",323,0)
 ;          PSORT                       - External value of primary sort data
"RTN","IBRFIWL",324,0)
 ;          IBSORT2                     - Secondary Sort Code
"RTN","IBRFIWL",325,0)
 ;          SSORT                       - External value of secondary sort data
"RTN","IBRFIWL",326,0)
 ;
"RTN","IBRFIWL",327,0)
 ; Output:  VALMCNT                     - Updated Line of the display being
"RTN","IBRFIWL",328,0)
 ;          MSGCNT                      - Updated Message Number
"RTN","IBRFIWL",329,0)
 ;          PFILTER                     - Update Filter line Value
"RTN","IBRFIWL",330,0)
 ;          ^TMP("IBRIFWLIX",$J,CNT)    - Message Selector Index
"RTN","IBRFIWL",331,0)
 N LINE,VAL,XX
"RTN","IBRFIWL",332,0)
 I BTYPE D                                      ; Display Bad Record Type
"RTN","IBRFIWL",333,0)
 . Q:PFILTER=BTYPE                              ; Same as previous line
"RTN","IBRFIWL",334,0)
 . S VALMCNT=VALMCNT+1,PFILTER=BTYPE
"RTN","IBRFIWL",335,0)
 . I BTYPE=1 D
"RTN","IBRFIWL",336,0)
 . . S LINE="Messages with an invalid Bill Number"
"RTN","IBRFIWL",337,0)
 . I BTYPE=2 D
"RTN","IBRFIWL",338,0)
 . . S LINE="Messages with Patient/Bill Mismatch"
"RTN","IBRFIWL",339,0)
 . D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",340,0)
 I 'BTYPE D
"RTN","IBRFIWL",341,0)
 . I ".N.O.E.D."[("."_IBSORT1_".") S PSORT=$TR(PSORT,"-"),PSORT=$$FMTE^XLFDT(PSORT,"2DZ")
"RTN","IBRFIWL",342,0)
 . S LINE=$S(IBSORT1="I":"Insurance Company Name:  ",IBSORT1="P":"Patient Name:  ",IBSORT1="B":"Authorizing Biller:  ",IBSORT1="L":"LOINC Code:  ",IBSORT1="E"!(IBSORT1="D"):"Date Due:  ",1:"Date Received:  ")_PSORT
"RTN","IBRFIWL",343,0)
 . I PFILTER'=LINE D 
"RTN","IBRFIWL",344,0)
 . . S VALMCNT=VALMCNT+1,PFILTER=LINE
"RTN","IBRFIWL",345,0)
 . . D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",346,0)
 . . S SFILTER=""
"RTN","IBRFIWL",347,0)
 . I $G(IBSORT2)]"",$G(IBSORT2)'=0 D
"RTN","IBRFIWL",348,0)
 . . I ".N.O.E.D."[("."_IBSORT2_".") S SSORT=$TR(SSORT,"-"),SSORT=$$FMTE^XLFDT(SSORT,"2DZ")
"RTN","IBRFIWL",349,0)
 . . S LINE=" "_$S(IBSORT2="I":"Insurance Company Name:  ",IBSORT2="P":"Patient Name:  ",IBSORT2="B":"Authorizing Biller:  ",IBSORT2="L":"LOINC Code:  ",IBSORT2="E"!(IBSORT2="D"):"Date Due:  ",1:"Date Received:  ")_SSORT
"RTN","IBRFIWL",350,0)
 . . I SFILTER'=LINE D
"RTN","IBRFIWL",351,0)
 . . . S VALMCNT=VALMCNT+1,SFILTER=LINE
"RTN","IBRFIWL",352,0)
 . . . D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",353,0)
 S CNT=CNT+1,VALMCNT=VALMCNT+1
"RTN","IBRFIWL",354,0)
 S ^TMP("IBRFIWLIX",$J,CNT)=RFAIEN
"RTN","IBRFIWL",355,0)
 S LINE=$$SETL("",MSGCNT,"",1,4)                ; Message #
"RTN","IBRFIWL",356,0)
 S VAL=$$GETFVAL(111.01,RFAIEN,"",0,2)          ; External Bill #
"RTN","IBRFIWL",357,0)
 S XX=$$GET1^DIQ(368,RFAIEN,200.04,"I")         ; Review Status
"RTN","IBRFIWL",358,0)
 S:XX VAL=VAL_"*"
"RTN","IBRFIWL",359,0)
 S LINE=$$SETL(LINE,VAL,"",5,8)
"RTN","IBRFIWL",360,0)
 D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",361,0)
 S VAL=$$GETFVAL(101.01,RFAIEN,"",0,2)          ; Ins. Co. Name
"RTN","IBRFIWL",362,0)
 S LINE=$$SETL(LINE,VAL,"",15,16)
"RTN","IBRFIWL",363,0)
 D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",364,0)
 S VAL=$$GETFVAL(109.01,RFAIEN,"",0,2)          ; Patient Name
"RTN","IBRFIWL",365,0)
 S LINE=$$SETL(LINE,VAL,"",33,20)
"RTN","IBRFIWL",366,0)
 D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",367,0)
 S VAL=$$GETFVAL(-3,RFAIEN,"",0,2)              ; SSN
"RTN","IBRFIWL",368,0)
 S LINE=$$SETL(LINE,VAL,"",56,4)
"RTN","IBRFIWL",369,0)
 D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",370,0)
 S VAL=$$GETFVAL(114.03,RFAIEN,"",2,2)          ; Service Date
"RTN","IBRFIWL",371,0)
 I VAL'="" S VAL=$$FMTE^XLFDT(VAL,"2Z")
"RTN","IBRFIWL",372,0)
 S LINE=$$SETL(LINE,VAL,"",61,8)
"RTN","IBRFIWL",373,0)
 D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",374,0)
 S VAL=$$GETFVAL(-4,RFAIEN,"",0,2)              ; Current Balance
"RTN","IBRFIWL",375,0)
 S VAL=$J("$"_$FN(VAL,"",2),9)
"RTN","IBRFIWL",376,0)
 S LINE=$$SETL(LINE,VAL,"",71,9)
"RTN","IBRFIWL",377,0)
 D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",378,0)
 ;
"RTN","IBRFIWL",379,0)
 S ^TMP("IBRFIWLIX",$J,CNT)=RFAIEN_U_VALMCNT   ; Selection Index - RFAIEN is pointer to file 368, VALMCNT points to detailed entry in worklist ^TMP
"RTN","IBRFIWL",380,0)
 ;I IBSORT1'="L" D
"RTN","IBRFIWL",381,0)
 ;. S VALMCNT=VALMCNT+1
"RTN","IBRFIWL",382,0)
 ;. S VAL=$$GETFVAL(122.03,RFAIEN,"",0,2)        ; LOINC Code + Description
"RTN","IBRFIWL",383,0)
 ;. I VAL'="" D
"RTN","IBRFIWL",384,0)
 ;. . S LINE=$$SETL("",VAL,"",6,80)
"RTN","IBRFIWL",385,0)
 ;. . D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",386,0)
 ;
"RTN","IBRFIWL",387,0)
 S VALMCNT=VALMCNT+1
"RTN","IBRFIWL",388,0)
 S VAL=$$GETFVAL(122.03,RFAIEN,"",0,2)        ; LOINC Code + Description
"RTN","IBRFIWL",389,0)
 I VAL'="" D
"RTN","IBRFIWL",390,0)
 . S LINE=$$SETL("",VAL,"",5,80)
"RTN","IBRFIWL",391,0)
 . D SET^VALM10(VALMCNT,LINE,VALMCNT)
"RTN","IBRFIWL",392,0)
 Q
"RTN","IBRFIWL",393,0)
 ;
"RTN","IBRFIWL",394,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBRFIWL",395,0)
 ; of the worklist
"RTN","IBRFIWL",396,0)
 ; Input:   LINE    - Current line being created
"RTN","IBRFIWL",397,0)
 ;          DATA    - Information to be added to the end of the current line
"RTN","IBRFIWL",398,0)
 ;          LABEL   - Label to describe the information being added
"RTN","IBRFIWL",399,0)
 ;          COL     - Column position in line to add information add
"RTN","IBRFIWL",400,0)
 ;          LNG     - Maximum length of data information to include on the line
"RTN","IBRFIWL",401,0)
 ; Returns: Line updated with added information
"RTN","IBRFIWL",402,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBRFIWL",403,0)
 Q LINE
"RTN","IBRFIWL",404,0)
 ;
"RTN","IBRFIWL",405,0)
HELP ; -- help code
"RTN","IBRFIWL",406,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBRFIWL",407,0)
 S VALMSG="* Indicates review in progress"
"RTN","IBRFIWL",408,0)
 Q
"RTN","IBRFIWL",409,0)
 ;
"RTN","IBRFIWL",410,0)
SMSG ;EP
"RTN","IBRFIWL",411,0)
 ; Protocol action to select an RFI message to be worked
"RTN","IBRFIWL",412,0)
 ; Input:   ^TMP("IBRFIWLIX",$J,CNT)=RFAIEN
"RTN","IBRFIWL",413,0)
 N RFAIEN,RFAIDET,RFAIDHDR
"RTN","IBRFIWL",414,0)
 S VALMBCK="R"
"RTN","IBRFIWL",415,0)
 D FULL^VALM1
"RTN","IBRFIWL",416,0)
 S RFAIEN=$$SELMSG^IBRFIWLA("Select Message")
"RTN","IBRFIWL",417,0)
 I RFAIEN="" S VALMSG="|* Review in progress | Enter ?? for more actions|" Q
"RTN","IBRFIWL",418,0)
 S (RFAIDET,RFAIDHDR)=""
"RTN","IBRFIWL",419,0)
 I $P(RFAIEN,U,2) D
"RTN","IBRFIWL",420,0)
 .S RFAIDET=$P($G(RFAIEN),U,2)
"RTN","IBRFIWL",421,0)
 .I $G(RFAIDET) S RFAIDET=$E($G(^TMP("IBRFIWL",$J,+$G(RFAIDET),0)),6,999)
"RTN","IBRFIWL",422,0)
 .S RFAIDHDR=$E($G(VALMCAP),6,999)
"RTN","IBRFIWL",423,0)
 S RFAIEN=$P(RFAIEN,U)
"RTN","IBRFIWL",424,0)
 ;
"RTN","IBRFIWL",425,0)
 D EN^IBRFIWL1(RFAIEN,RFAIDET,RFAIDHDR)                      ; Show the detail of the message
"RTN","IBRFIWL",426,0)
 D INIT                                     ; Rebuild the list
"RTN","IBRFIWL",427,0)
 Q
"RTN","IBRFIWL",428,0)
 ;
"RTN","IBRFIWL",429,0)
EXIT ; -- exit code
"RTN","IBRFIWL",430,0)
 K IBAUTH,IBSORT1,IBSORT2
"RTN","IBRFIWL",431,0)
 K ^TMP("IBBIL",$J),^TMP("IBRFIWL",$J),^TMP("IBRFIWLS",$J),^TMP("IBRFIWLIX",$J)
"RTN","IBRFIWL",432,0)
 D CLEAN^VALM10
"RTN","IBRFIWL",433,0)
 Q
"RTN","IBRFIWL1")
0^30^B148319097^n/a
"RTN","IBRFIWL1",1,0)
IBRFIWL1 ;ALB/FA/JWS - RFAI Message Detail Worklist; 02-SEP-2015
"RTN","IBRFIWL1",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBRFIWL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIWL1",4,0)
 ;;
"RTN","IBRFIWL1",5,0)
 ;
"RTN","IBRFIWL1",6,0)
EN(RFAIEN,RFAIDET,RFAIDHDR) ; Main entry point
"RTN","IBRFIWL1",7,0)
 ; Displays the selected RFAI Message detail
"RTN","IBRFIWL1",8,0)
 ; Input:   RFAIEN      - IEN of the selected RFAI Message
"RTN","IBRFIWL1",9,0)
 ;          RFAIDET     - The detailed line from the initial worklist to show what entry is being worked on
"RTN","IBRFIWL1",10,0)
 ;          RFAIDHDR    - The header for said details mentioned above
"RTN","IBRFIWL1",11,0)
 N IBIFN,LOINC
"RTN","IBRFIWL1",12,0)
 S IBIFN=$$GET1^DIQ(368,RFAIEN,111.01,"I")      ; IEN for Bill/Claims file
"RTN","IBRFIWL1",13,0)
 D EN^VALM("IBRFI 277 DETAIL WL")
"RTN","IBRFIWL1",14,0)
 I $D(IBFASTXT) S VALMBCK="Q"
"RTN","IBRFIWL1",15,0)
 Q
"RTN","IBRFIWL1",16,0)
 ;
"RTN","IBRFIWL1",17,0)
HDR ;EP
"RTN","IBRFIWL1",18,0)
 ; Listman Template action to display Worklist  header information
"RTN","IBRFIWL1",19,0)
 ; Input:   RFAIEN - IEN of the selected Message
"RTN","IBRFIWL1",20,0)
 ;          RFAIDET     - The detailed line from the initial worklist to show what entry is being worked on
"RTN","IBRFIWL1",21,0)
 ;          RFAIDHDR    - The header for said details mentioned above
"RTN","IBRFIWL1",22,0)
 ; Output:  Header information for the Selected Message
"RTN","IBRFIWL1",23,0)
 ;
"RTN","IBRFIWL1",24,0)
 N RBY,RDATE,XX
"RTN","IBRFIWL1",25,0)
 S XX=$$GET1^DIQ(368,RFAIEN,200.04,"I")
"RTN","IBRFIWL1",26,0)
 I XX D
"RTN","IBRFIWL1",27,0)
 . S RDATE=$$GET1^DIQ(368,RFAIEN,200.05,"I")
"RTN","IBRFIWL1",28,0)
 . S RDATE=$$FMTE^XLFDT(RDATE,"2DZ")
"RTN","IBRFIWL1",29,0)
 . S RBY=$$GET1^DIQ(368,RFAIEN,200.06)
"RTN","IBRFIWL1",30,0)
 . S XX="Review Status: Review in Process By: "_RBY_" on "_RDATE
"RTN","IBRFIWL1",31,0)
 E  S XX="Review Status: Not Being Reviewed"
"RTN","IBRFIWL1",32,0)
 S VALMHDR(1)=$G(RFAIDHDR)
"RTN","IBRFIWL1",33,0)
 S VALMHDR(2)=$G(RFAIDET)
"RTN","IBRFIWL1",34,0)
 S VALMHDR(3)=XX
"RTN","IBRFIWL1",35,0)
 Q
"RTN","IBRFIWL1",36,0)
 ;
"RTN","IBRFIWL1",37,0)
INIT ;EP
"RTN","IBRFIWL1",38,0)
 ; Listman Template action to initialize the template
"RTN","IBRFIWL1",39,0)
 ; Input:   RFAIEN - IEN of the selected Message
"RTN","IBRFIWL1",40,0)
 ;
"RTN","IBRFIWL1",41,0)
 K ^TMP("IBRFIWL1",$J)
"RTN","IBRFIWL1",42,0)
 D BLD
"RTN","IBRFIWL1",43,0)
 Q
"RTN","IBRFIWL1",44,0)
 ;
"RTN","IBRFIWL1",45,0)
BLD ; Creates the body of the worklist
"RTN","IBRFIWL1",46,0)
 ; Input:   IBIFN   - IEN of the Bill/Claim (file 399) of the selected message
"RTN","IBRFIWL1",47,0)
 ;          RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",48,0)
 ;
"RTN","IBRFIWL1",49,0)
 N ELINEL,ELINER,SLINE
"RTN","IBRFIWL1",50,0)
 S SLINE=1
"RTN","IBRFIWL1",51,0)
 D BLDISRC(RFAIEN,SLINE,.ELINEL)   ; Build Information Source section
"RTN","IBRFIWL1",52,0)
 D BLDCLEV(RFAIEN,ELINEL,.ELINEL)  ; Build Claim Level Status section
"RTN","IBRFIWL1",53,0)
 D BLDSLI^IBRFIWLA(RFAIEN,ELINEL,.ELINEL)   ; Build Service Line Info section
"RTN","IBRFIWL1",54,0)
 D BLDCOM^IBRFIWLA(RFAIEN,ELINEL,.ELINEL)   ; Build Comment section
"RTN","IBRFIWL1",55,0)
 S VALMCNT=ELINEL-1
"RTN","IBRFIWL1",56,0)
 Q
"RTN","IBRFIWL1",57,0)
 ;
"RTN","IBRFIWL1",58,0)
BLDISRC(RFAIEN,SLINE,ELINE) ; Build the Information Source Section
"RTN","IBRFIWL1",59,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",60,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBRFIWL1",61,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBRFIWL1",62,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBRFIWL1",63,0)
 ;
"RTN","IBRFIWL1",64,0)
 N XX,YY,ZZ,WW
"RTN","IBRFIWL1",65,0)
 S ELINE=$$SETN("Information Source",SLINE,1,1)
"RTN","IBRFIWL1",66,0)
 S XX=$$GETFVAL^IBRFIWL(101.01,RFAIEN,"",0,2)
"RTN","IBRFIWL1",67,0)
 S ELINE=$$SET("Payer Name: ",XX,ELINE,1)
"RTN","IBRFIWL1",68,0)
 S XX=$$GETFVAL^IBRFIWL(1.03,RFAIEN,"",0,2)
"RTN","IBRFIWL1",69,0)
 S ELINE=$$SET("Payer Contact Name: ",XX,ELINE,1)
"RTN","IBRFIWL1",70,0)
 S XX=$$GETFVAL^IBRFIWL(3.01,RFAIEN,"",0,2)                 ; Contact 1
"RTN","IBRFIWL1",71,0)
 S YY=$$GETFVAL^IBRFIWL(102.01,RFAIEN,"",0,2)               ; Contact 1 Type
"RTN","IBRFIWL1",72,0)
 I (YY="FX"!(YY="TE")),$$HLPHONE^HLFNC(XX)]"" S XX=$$HLPHONE^HLFNC(XX)
"RTN","IBRFIWL1",73,0)
 S XX=$S(XX="":"",YY="FX":XX_"(Fax)",YY="TE":XX_"(Tel)",YY="EX":XX_"(Ext)",YY="EM":"(Email)",YY="UR":"(url)",1:XX)
"RTN","IBRFIWL1",74,0)
 S YY=$$GETFVAL^IBRFIWL(26.01,RFAIEN,"",0,2) I YY]"" S XX=XX_" EXT: "_YY
"RTN","IBRFIWL1",75,0)
 S ELINE=$$SET("Payer Contact #1: ",XX,ELINE,1) ;3.01 add (Fax) or (Tel) when
"RTN","IBRFIWL1",76,0)
 ;
"RTN","IBRFIWL1",77,0)
 S XX=$$GETFVAL^IBRFIWL(4.01,RFAIEN,"",0,2)                 ; Contact 2
"RTN","IBRFIWL1",78,0)
 I XX'="" D
"RTN","IBRFIWL1",79,0)
 . S YY=$$GETFVAL^IBRFIWL(102.02,RFAIEN,"",0,2)             ; Contact 2 Type
"RTN","IBRFIWL1",80,0)
 . I (YY="FX"!(YY="TE")),$$HLPHONE^HLFNC(XX)]"" S XX=$$HLPHONE^HLFNC(XX)
"RTN","IBRFIWL1",81,0)
 . S XX=$S(XX="":"",YY="FX":XX_"(Fax)",YY="TE":XX_"(Tel)",YY="EX":XX_"(Ext)",YY="EM":"(Email)",YY="UR":"(url)",1:XX)
"RTN","IBRFIWL1",82,0)
 . S YY=$$GETFVAL^IBRFIWL(27.01,RFAIEN,"",0,2) I YY]"" S XX=XX_" EXT: "_YY
"RTN","IBRFIWL1",83,0)
 . S ELINE=$$SET("Payer Contact #2: ",XX,ELINE,1)
"RTN","IBRFIWL1",84,0)
 ;
"RTN","IBRFIWL1",85,0)
 S XX=$$GETFVAL^IBRFIWL(5.01,RFAIEN,"",0,2)                 ; Contact 3
"RTN","IBRFIWL1",86,0)
 I XX'="" D
"RTN","IBRFIWL1",87,0)
 . S YY=$$GETFVAL^IBRFIWL(102.03,RFAIEN,"",0,2)             ; Contact 3 Type
"RTN","IBRFIWL1",88,0)
 . I (YY="FX"!(YY="TE")),$$HLPHONE^HLFNC(XX)]"" S XX=$$HLPHONE^HLFNC(XX)
"RTN","IBRFIWL1",89,0)
 . S XX=$S(XX="":"",YY="FX":XX_"(Fax)",YY="TE":XX_"(Tel)",YY="EX":XX_"(Ext)",YY="EM":"(Email)",YY="UR":"(url)",1:XX)
"RTN","IBRFIWL1",90,0)
 . S YY=$$GETFVAL^IBRFIWL(28.01,RFAIEN,"",0,2) I YY]"" S XX=XX_" EXT: "_YY
"RTN","IBRFIWL1",91,0)
 . S ELINE=$$SET("Payer Contact #3: ",XX,ELINE,1)
"RTN","IBRFIWL1",92,0)
 ;
"RTN","IBRFIWL1",93,0)
 S XX=$$GETFVAL^IBRFIWL(15.01,RFAIEN,"",0,2)
"RTN","IBRFIWL1",94,0)
 S ELINE=$$SET("Payer Response Contact Name: ",XX,ELINE,1)
"RTN","IBRFIWL1",95,0)
 S XX=$$GETFVAL^IBRFIWL(17.01,RFAIEN,"",0,2)                ; Response Contact 1
"RTN","IBRFIWL1",96,0)
 S YY=$$GETFVAL^IBRFIWL(16.01,RFAIEN,"",0,2)                ; Response Contact 1 Type
"RTN","IBRFIWL1",97,0)
 I XX]"",(YY="FX"!(YY="TE")),$$HLPHONE^HLFNC(XX)]"" S XX=$$HLPHONE^HLFNC(XX)
"RTN","IBRFIWL1",98,0)
 S XX=$S(XX="":"",YY="FX":XX_"(Fax)",YY="TE":XX_"(Tel)",YY="EX":XX_"(Ext)",YY="EM":"(Email)",YY="UR":"(url)",1:XX)
"RTN","IBRFIWL1",99,0)
 S YY=$$GETFVAL^IBRFIWL(29.01,RFAIEN,"",0,2) I YY]"" S XX=XX_" EXT: "_YY
"RTN","IBRFIWL1",100,0)
 S ELINE=$$SET("Payer Response Contact #1: ",XX,ELINE,1) ;5.01 skip when null
"RTN","IBRFIWL1",101,0)
 ;
"RTN","IBRFIWL1",102,0)
 S XX=$$GETFVAL^IBRFIWL(18.01,RFAIEN,"",0,2)                ; Response Contact 2
"RTN","IBRFIWL1",103,0)
 I XX'="" D
"RTN","IBRFIWL1",104,0)
 . S YY=$$GETFVAL^IBRFIWL(16.02,RFAIEN,"",0,2)              ; Contact 2 Type
"RTN","IBRFIWL1",105,0)
 . I (YY="FX"!(YY="TE")),$$HLPHONE^HLFNC(XX)]"" S XX=$$HLPHONE^HLFNC(XX)
"RTN","IBRFIWL1",106,0)
 . S XX=$S(XX="":"",YY="FX":XX_"(Fax)",YY="TE":XX_"(Tel)",YY="EX":XX_"(Ext)",YY="EM":"(Email)",YY="UR":"(url)",1:XX)
"RTN","IBRFIWL1",107,0)
 . S YY=$$GETFVAL^IBRFIWL(30.01,RFAIEN,"",0,2) I YY]"" S XX=XX_" EXT: "_YY
"RTN","IBRFIWL1",108,0)
 . S ELINE=$$SET("Payer Response Contact #2: ",XX,ELINE,1)
"RTN","IBRFIWL1",109,0)
 ;
"RTN","IBRFIWL1",110,0)
 S XX=$$GETFVAL^IBRFIWL(19.01,RFAIEN,"",0,2)                ; Response Contact 3
"RTN","IBRFIWL1",111,0)
 I XX'="" D
"RTN","IBRFIWL1",112,0)
 . S YY=$$GETFVAL^IBRFIWL(16.03,RFAIEN,"",0,2)              ; Contact 3 Type
"RTN","IBRFIWL1",113,0)
 . I (YY="FX"!(YY="TE")),$$HLPHONE^HLFNC(XX)]"" S XX=$$HLPHONE^HLFNC(XX)
"RTN","IBRFIWL1",114,0)
 . S XX=$S(XX="":"",YY="FX":XX_"(Fax)",YY="TE":XX_"(Tel)",YY="EX":XX_"(Ext)",YY="EM":"(Email)",YY="UR":"(url)",1:XX)
"RTN","IBRFIWL1",115,0)
 . S YY=$$GETFVAL^IBRFIWL(31.01,RFAIEN,"",0,2) I YY]"" S XX=XX_" EXT: "_YY
"RTN","IBRFIWL1",116,0)
 . S ELINE=$$SET("Payer Response Contact #3: ",XX,ELINE,1)
"RTN","IBRFIWL1",117,0)
 ;
"RTN","IBRFIWL1",118,0)
 S XX=$$GETFVAL^IBRFIWL(20.01,RFAIEN,"",0,2)                ; Response Cont Addr Line 1
"RTN","IBRFIWL1",119,0)
 S ELINE=$$SET("Payer Address: ",XX,ELINE,1)
"RTN","IBRFIWL1",120,0)
 S XX=$$GETFVAL^IBRFIWL(20.02,RFAIEN,"",0,2)                ; Response Cont Addr Line 2
"RTN","IBRFIWL1",121,0)
 I XX]"" S ELINE=$$SET("                             ",XX,ELINE,1)
"RTN","IBRFIWL1",122,0)
 S XX=$$GETFVAL^IBRFIWL(20.03,RFAIEN,"",0,2)                ; Response Cont City
"RTN","IBRFIWL1",123,0)
 S YY=$$GETFVAL^IBRFIWL(120.04,RFAIEN,"",0,2)               ; Response Cont State
"RTN","IBRFIWL1",124,0)
 S ZZ=$$GETFVAL^IBRFIWL(120.05,RFAIEN,"",0,2)               ; Response Cont ZIP
"RTN","IBRFIWL1",125,0)
 S WW=$$GETFVAL^IBRFIWL(120.06,RFAIEN,"",0,2)               ; Response Cont Country
"RTN","IBRFIWL1",126,0)
 S XX=$S(((XX'="")!(YY'="")!(ZZ'="")!(WW]"")):XX_", "_YY_" "_ZZ_" "_WW,1:"")
"RTN","IBRFIWL1",127,0)
 S ELINE=$$SET("",XX,ELINE,1)
"RTN","IBRFIWL1",128,0)
 ;
"RTN","IBRFIWL1",129,0)
 S XX=$$GETFVAL^IBRFIWL(11.02,RFAIEN,"",0,2)               ; Patient Claim Control #
"RTN","IBRFIWL1",130,0)
 S ELINE=$$SET("Payer Claim Control #: ",XX,ELINE,1)
"RTN","IBRFIWL1",131,0)
 Q
"RTN","IBRFIWL1",132,0)
 ;
"RTN","IBRFIWL1",133,0)
BLDCLEV(RFAIEN,SLINE,ELINE) ; Build the Claim Level Status Section
"RTN","IBRFIWL1",134,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",135,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBRFIWL1",136,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBRFIWL1",137,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBRFIWL1",138,0)
 ;
"RTN","IBRFIWL1",139,0)
 N XX,YY,ZZ,XC0,RFAIEN1,IEN399,ARY,LN,I
"RTN","IBRFIWL1",140,0)
 S ELINE=$$SET("",$J("",40),SLINE,1)            ; Spacing Blank Line
"RTN","IBRFIWL1",141,0)
 S ELINE=$$SETN("Claim Level Status",ELINE,1,1)
"RTN","IBRFIWL1",142,0)
 S XX=$$GETFVAL^IBRFIWL(111.01,RFAIEN,"",0,2)
"RTN","IBRFIWL1",143,0)
 S ELINE=$$SET("Patient Control #:  ",XX,ELINE,1)
"RTN","IBRFIWL1",144,0)
 S XX=$$GETFVAL^IBRFIWL(114.03,RFAIEN,"",3,2)
"RTN","IBRFIWL1",145,0)
 S YY=$$GETFVAL^IBRFIWL(114.04,RFAIEN,"",3,2)
"RTN","IBRFIWL1",146,0)
 I XX]"" S XX=XX_$S(YY]"":"-"_YY,1:"")
"RTN","IBRFIWL1",147,0)
 I XX="" S XX=$$GETFVAL^IBRFIWL(14.05,RFAIEN,"",0,2)
"RTN","IBRFIWL1",148,0)
 S ELINE=$$SET("Date of Service: ",XX,ELINE,1)
"RTN","IBRFIWL1",149,0)
 S XX=$$GETFVAL^IBRFIWL(11.03,RFAIEN,"",0,2)
"RTN","IBRFIWL1",150,0)
 S ELINE=$$SET("Medical Record Number: ",XX,ELINE,1)
"RTN","IBRFIWL1",151,0)
 S XX=$$GETFVAL^IBRFIWL(10.01,RFAIEN,"",0,2)
"RTN","IBRFIWL1",152,0)
 S ELINE=$$SET("Member Identification Number: ",XX,ELINE,1)
"RTN","IBRFIWL1",153,0)
 ;
"RTN","IBRFIWL1",154,0)
 S XX=$$GETFVAL^IBRFIWL(25.01,RFAIEN,"",0,2)
"RTN","IBRFIWL1",155,0)
 S IEN399=$$GETFVAL^IBRFIWL(111.01,RFAIEN,"",0,0)
"RTN","IBRFIWL1",156,0)
 I IEN399,$$INSPRF^IBCEF(IEN399) S ELINE=$$SET("Type of Service: ",XX,ELINE,1)
"RTN","IBRFIWL1",157,0)
 I IEN399,XX]"",'$$INSPRF^IBCEF(IEN399) S ELINE=$$SET("Type of Service: ",XX,ELINE,1)
"RTN","IBRFIWL1",158,0)
 I 'IEN399,XX]"" S ELINE=$$SET("Type of Service: ",XX,ELINE,1)
"RTN","IBRFIWL1",159,0)
 ;
"RTN","IBRFIWL1",160,0)
 S XC0=0 F  S XC0=$O(^IBA(368,RFAIEN,13,XC0)) Q:XC0'=+XC0  D
"RTN","IBRFIWL1",161,0)
 . S RFAIEN1=XC0_","_RFAIEN
"RTN","IBRFIWL1",162,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0113,1.01",RFAIEN1,"",0,2)
"RTN","IBRFIWL1",163,0)
 . S YY=$$GET1^DIQ(368.0113,RFAIEN1,1.01,"I")
"RTN","IBRFIWL1",164,0)
 . I YY S ZZ=$$GET1^DIQ(368.001,YY_",",.02) I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWL1",165,0)
 . I XX'="" D
"RTN","IBRFIWL1",166,0)
 .. K ARY S LN=$$WRAP^IBRFIWLA(XX,64,79,.ARY)
"RTN","IBRFIWL1",167,0)
 .. S ELINE=$$SET("HCCS Category: ",ARY(1),ELINE,1)
"RTN","IBRFIWL1",168,0)
 .. F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET("",ARY(I),ELINE,1)
"RTN","IBRFIWL1",169,0)
 .;
"RTN","IBRFIWL1",170,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0113,1.02",RFAIEN1,"",0,2)
"RTN","IBRFIWL1",171,0)
 . S YY=$$GET1^DIQ(368.0113,RFAIEN1,1.02,"I")
"RTN","IBRFIWL1",172,0)
 . I YY S ZZ=$P($$GET1^DIQ(368.0113,RFAIEN1,"1.02:80"),":") I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWL1",173,0)
 . S LN=$$WRAP^IBRFIWLA(XX,42,79,.ARY)
"RTN","IBRFIWL1",174,0)
 . S ELINE=$$SET("Add'l Info Request Modifier (LOINC): ",ARY(1),ELINE,1)
"RTN","IBRFIWL1",175,0)
 . F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET("",ARY(I),ELINE,1)
"RTN","IBRFIWL1",176,0)
 .;
"RTN","IBRFIWL1",177,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0113,10.01",RFAIEN1,"",0,2)
"RTN","IBRFIWL1",178,0)
 . S YY=$$GET1^DIQ(368.0113,RFAIEN1,10.01,"I")
"RTN","IBRFIWL1",179,0)
 . I YY S ZZ=$$GET1^DIQ(368.001,YY_",",.02) I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWL1",180,0)
 . I XX'="" D
"RTN","IBRFIWL1",181,0)
 .. K ARY S LN=$$WRAP^IBRFIWLA(XX,62,77,.ARY)
"RTN","IBRFIWL1",182,0)
 .. S ELINE=$$SET("  HCCS Category: ",ARY(1),ELINE,1)
"RTN","IBRFIWL1",183,0)
 .. F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET("  ",ARY(I),ELINE,1)
"RTN","IBRFIWL1",184,0)
 .;
"RTN","IBRFIWL1",185,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0113,10.02",RFAIEN1,"",0,2)
"RTN","IBRFIWL1",186,0)
 . S YY=$$GET1^DIQ(368.0113,RFAIEN1,10.02,"I")
"RTN","IBRFIWL1",187,0)
 . I YY S ZZ=$P($$GET1^DIQ(368.0113,RFAIEN1,"10.02:80"),":") I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWL1",188,0)
 . I XX'="" D
"RTN","IBRFIWL1",189,0)
 .. K ARY S LN=$$WRAP^IBRFIWLA(XX,48,77,.ARY)
"RTN","IBRFIWL1",190,0)
 .. S ELINE=$$SET("  Add'l Info Request Modifier: ",ARY(1),ELINE,1)
"RTN","IBRFIWL1",191,0)
 .. F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET("  ",ARY(I),ELINE,1)
"RTN","IBRFIWL1",192,0)
 .;
"RTN","IBRFIWL1",193,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0113,11.01",RFAIEN1,"",0,2)
"RTN","IBRFIWL1",194,0)
 . S YY=$$GET1^DIQ(368.0113,RFAIEN1,11.01,"I")
"RTN","IBRFIWL1",195,0)
 . I YY S ZZ=$$GET1^DIQ(368.001,YY_",",.02) I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWL1",196,0)
 . I XX'="" D
"RTN","IBRFIWL1",197,0)
 .. K ARY S LN=$$WRAP^IBRFIWLA(XX,62,77,.ARY)
"RTN","IBRFIWL1",198,0)
 .. S ELINE=$$SET("  HCCS Category: ",ARY(1),ELINE,1)
"RTN","IBRFIWL1",199,0)
 .. F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET("  ",ARY(I),ELINE,1)
"RTN","IBRFIWL1",200,0)
 .;
"RTN","IBRFIWL1",201,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0113,11.02",RFAIEN1,"",0,2)
"RTN","IBRFIWL1",202,0)
 . S YY=$$GET1^DIQ(368.0113,RFAIEN1,11.02,"I")
"RTN","IBRFIWL1",203,0)
 . I YY S ZZ=$P($$GET1^DIQ(368.0113,RFAIEN1,"11.02:80"),":") I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWL1",204,0)
 . I XX'="" D
"RTN","IBRFIWL1",205,0)
 .. K ARY S LN=$$WRAP^IBRFIWLA(XX,48,77,.ARY)
"RTN","IBRFIWL1",206,0)
 .. S ELINE=$$SET("  Add'l Info Request Modifier: ",ARY(1),ELINE,1)
"RTN","IBRFIWL1",207,0)
 .. F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET("  ",ARY(I),ELINE,1)
"RTN","IBRFIWL1",208,0)
 .;
"RTN","IBRFIWL1",209,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0113,.02",RFAIEN1,"",3,2)
"RTN","IBRFIWL1",210,0)
 . S ELINE=$$SET("Status Information Effective Date: ",XX,ELINE,1)
"RTN","IBRFIWL1",211,0)
 S XX=$$GETFVAL^IBRFIWL(112.01,RFAIEN,"",0,2)
"RTN","IBRFIWL1",212,0)
 S ELINE=$$SET("Response Due Date: ",XX,ELINE,1)
"RTN","IBRFIWL1",213,0)
 Q
"RTN","IBRFIWL1",214,0)
 ;
"RTN","IBRFIWL1",215,0)
SET(LABEL,DATA,LINE,COL) ; Sets text into the body of the worklist
"RTN","IBRFIWL1",216,0)
 ; Input:   LABEL   - Label text to set into the line
"RTN","IBRFIWL1",217,0)
 ;          DATA    - Field Data to set into the line
"RTN","IBRFIWL1",218,0)
 ;          LINE    - Line to set LABEL and DATA into
"RTN","IBRFIWL1",219,0)
 ;          COL     - Starting column position in LINE to insert
"RTN","IBRFIWL1",220,0)
 ;                    LABEL_DATA text
"RTN","IBRFIWL1",221,0)
 ; Returns: LINE    - Updated Line by 1
"RTN","IBRFIWL1",222,0)
 ;
"RTN","IBRFIWL1",223,0)
 N IBY
"RTN","IBRFIWL1",224,0)
 S IBY=LABEL_DATA
"RTN","IBRFIWL1",225,0)
 D SET1(IBY,LINE,COL,$L(IBY))
"RTN","IBRFIWL1",226,0)
 S LINE=LINE+1
"RTN","IBRFIWL1",227,0)
 Q LINE
"RTN","IBRFIWL1",228,0)
 ;
"RTN","IBRFIWL1",229,0)
SETN(TITLE,LINE,COL,RV) ; Sets a field Section title into the body of the worklist
"RTN","IBRFIWL1",230,0)
 ; Input:   TITLE   - Text to be used for the field Section Title
"RTN","IBRFIWL1",231,0)
 ;          LINE    - Line number in the body to insert the field section title
"RTN","IBRFIWL1",232,0)
 ;          COL     - Starting Column position to set Section Title into
"RTN","IBRFIWL1",233,0)
 ;          RV      - 1 - Set Reverse Video, 0 or null dont use Reverse Video
"RTN","IBRFIWL1",234,0)
 ;                        Optional, defaults to ""
"RTN","IBRFIWL1",235,0)
 ; Returns: LINE    - Line number increased by 1
"RTN","IBRFIWL1",236,0)
 ;
"RTN","IBRFIWL1",237,0)
 N IBY
"RTN","IBRFIWL1",238,0)
 S IBY=" "_TITLE_" "
"RTN","IBRFIWL1",239,0)
 D SET1(IBY,LINE,COL,$L(IBY),$G(RV))
"RTN","IBRFIWL1",240,0)
 S LINE=LINE+1
"RTN","IBRFIWL1",241,0)
 Q LINE
"RTN","IBRFIWL1",242,0)
 ;
"RTN","IBRFIWL1",243,0)
SET1(TEXT,LINE,COL,WIDTH,RV) ; Sets the TMP array with body data
"RTN","IBRFIWL1",244,0)
 ; Input:   TEXT                - Text to be set into the specified line
"RTN","IBRFIWL1",245,0)
 ;          LINE                - Line to set TEXT into
"RTN","IBRFIWL1",246,0)
 ;          COL                 - Column of LINE to set TEXT into
"RTN","IBRFIWL1",247,0)
 ;          WIDTH               - Width of the TEXT being set into line
"RTN","IBRFIWL1",248,0)
 ;          RV                  - 1 - Set Reverse Video, 0 or null dont use
"RTN","IBRFIWL1",249,0)
 ;                                    Reverse Video
"RTN","IBRFIWL1",250,0)
 ;                                Optional, defaults to ""
"RTN","IBRFIWL1",251,0)
 ;          ^TMP("IBRFIWL1",$J) - Current ^TMP array
"RTN","IBRFIWL1",252,0)
 ; Output:  ^TMP("IBRFIWL1",$J) - Updated ^TMP array
"RTN","IBRFIWL1",253,0)
 ;
"RTN","IBRFIWL1",254,0)
 N IBX
"RTN","IBRFIWL1",255,0)
 S IBX=$G(^TMP("IBRFIWL1",$J,LINE,0))
"RTN","IBRFIWL1",256,0)
 S IBX=$$SETSTR^VALM1(TEXT,IBX,COL,WIDTH)
"RTN","IBRFIWL1",257,0)
 D SET^VALM10(LINE,IBX)
"RTN","IBRFIWL1",258,0)
 D:$G(RV)'="" CNTRL^VALM10(LINE,COL,WIDTH,IORVON,IORVOFF)
"RTN","IBRFIWL1",259,0)
 Q
"RTN","IBRFIWL1",260,0)
 ;
"RTN","IBRFIWL1",261,0)
LOCKM(RFAIEN) ; Lock Selection of a specified Message
"RTN","IBRFIWL1",262,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",263,0)
 ; Returns: 1 - Lock was obtained, 0 otherwise
"RTN","IBRFIWL1",264,0)
 L +^IBA(368,RFAIEN):3
"RTN","IBRFIWL1",265,0)
 I '$T Q 0
"RTN","IBRFIWL1",266,0)
 Q 1
"RTN","IBRFIWL1",267,0)
 ;
"RTN","IBRFIWL1",268,0)
UNLOCKM(RFAIEN) ; Unlock Selection of a specified Message
"RTN","IBRFIWL1",269,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",270,0)
 L -^IBA(368,RFAIEN)
"RTN","IBRFIWL1",271,0)
 Q
"RTN","IBRFIWL1",272,0)
 ;
"RTN","IBRFIWL1",273,0)
REVIEW ;EP
"RTN","IBRFIWL1",274,0)
 ; Protocol action to Mark/Unmark the mesage as being In-Progress
"RTN","IBRFIWL1",275,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",276,0)
 N DA,DIE,DR,DTOUT,NOW,X,XX,Y
"RTN","IBRFIWL1",277,0)
 S VALMBCK="R"
"RTN","IBRFIWL1",278,0)
 D FULL^VALM1
"RTN","IBRFIWL1",279,0)
 I '$$LOCKM(RFAIEN) D  Q
"RTN","IBRFIWL1",280,0)
 . W !!,*7,"Someone else is reviewing the status of this message."
"RTN","IBRFIWL1",281,0)
 . W !,"Try again later."
"RTN","IBRFIWL1",282,0)
 . D PAUSE^VALM1
"RTN","IBRFIWL1",283,0)
 ; 
"RTN","IBRFIWL1",284,0)
 S DA=RFAIEN,DIE=368,NOW=$$NOW^XLFDT()
"RTN","IBRFIWL1",285,0)
 ;S XX=$$GET1^DIQ(368,RFAIEN,200.04,"I"),XX=$S(XX=1:"In Progress",1:XX)
"RTN","IBRFIWL1",286,0)
 ;S DR="200.04//"_XX_";200.05////"_NOW_";200.06////"_DUZ
"RTN","IBRFIWL1",287,0)
 S DR="200.04//REVIEW IN PROCESS"
"RTN","IBRFIWL1",288,0)
 D ^DIE
"RTN","IBRFIWL1",289,0)
 D UNLOCKM(RFAIEN)
"RTN","IBRFIWL1",290,0)
 D HDR
"RTN","IBRFIWL1",291,0)
 Q
"RTN","IBRFIWL1",292,0)
 ;
"RTN","IBRFIWL1",293,0)
COMMENT ;EP
"RTN","IBRFIWL1",294,0)
 ; Protocol action to Enter/Edit the comment of the selected Message
"RTN","IBRFIWL1",295,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",296,0)
 N CMTIEN
"RTN","IBRFIWL1",297,0)
 S VALMBCK="R"
"RTN","IBRFIWL1",298,0)
 D FULL^VALM1
"RTN","IBRFIWL1",299,0)
 I '$$LOCKM(RFAIEN) D  Q
"RTN","IBRFIWL1",300,0)
 . W !!,*7,"Someone else is entering/editing this message."
"RTN","IBRFIWL1",301,0)
 . W !,"Try again later."
"RTN","IBRFIWL1",302,0)
 . D PAUSE^VALM1
"RTN","IBRFIWL1",303,0)
 ; 
"RTN","IBRFIWL1",304,0)
 S DA(1)=RFAIEN,DLAYGO=368.0201,DIC(0)="L",DIC="^IBA(368,"_DA(1)_",201,",X=$$NOW^XLFDT()
"RTN","IBRFIWL1",305,0)
 D FILE^DICN K DD,DO S (CMTIEN,DA)=+Y I DA<1 D UNLOCKM(RFAIEN) Q
"RTN","IBRFIWL1",306,0)
 S DIE="^IBA(368,"_DA(1)_",201,"
"RTN","IBRFIWL1",307,0)
 S DR=".02////"_DUZ_";.03" D ^DIE
"RTN","IBRFIWL1",308,0)
 I $G(^IBA(368,RFAIEN,201,CMTIEN,1,1,0))="" S DIK=DIE,DA(1)=RFAIEN,DA=CMTIEN D ^DIK
"RTN","IBRFIWL1",309,0)
 ;. S DA=RFAIEN,DIE=368,NOW=$$NOW^XLFDT()
"RTN","IBRFIWL1",310,0)
 ;. ;S XX=$$GET1^DIQ(368,RFAIEN,200.04,"I") I XX=1 Q
"RTN","IBRFIWL1",311,0)
 I $G(^IBA(368,RFAIEN,201,CMTIEN,1,1,0))'="" D
"RTN","IBRFIWL1",312,0)
 . N DA S DA=RFAIEN,DIE=368
"RTN","IBRFIWL1",313,0)
 . S DR="200.04//REVIEW IN PROCESS"
"RTN","IBRFIWL1",314,0)
 . D ^DIE
"RTN","IBRFIWL1",315,0)
 D UNLOCKM(RFAIEN)
"RTN","IBRFIWL1",316,0)
 D CLEAN^VALM10,INIT^IBRFIN
"RTN","IBRFIWL1",317,0)
 Q
"RTN","IBRFIWL1",318,0)
 ;
"RTN","IBRFIWL1",319,0)
REMOVE ;EP
"RTN","IBRFIWL1",320,0)
 ; Protocol action to manually remove the selected Message
"RTN","IBRFIWL1",321,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWL1",322,0)
 N COM,XX
"RTN","IBRFIWL1",323,0)
 S VALMBCK="R"
"RTN","IBRFIWL1",324,0)
 D FULL^VALM1
"RTN","IBRFIWL1",325,0)
 I '$$LOCKM(RFAIEN) D  Q
"RTN","IBRFIWL1",326,0)
 . W !!,*7,"Someone else is removing this message."
"RTN","IBRFIWL1",327,0)
 . W !,"Try again later."
"RTN","IBRFIWL1",328,0)
 . D PAUSE^VALM1
"RTN","IBRFIWL1",329,0)
 ; 
"RTN","IBRFIWL1",330,0)
R2 ; Give final Warning
"RTN","IBRFIWL1",331,0)
 N DIK,DA,DLAYGO,DIC,X,Y,DIE,DR,CMTIEN,NOW
"RTN","IBRFIWL1",332,0)
 I '$$ASKYN("Are you Sure you want to Remove this Message") D  Q
"RTN","IBRFIWL1",333,0)
 . D UNLOCKM(RFAIEN)
"RTN","IBRFIWL1",334,0)
 ;
"RTN","IBRFIWL1",335,0)
 ; create comment multiple
"RTN","IBRFIWL1",336,0)
 S DA(1)=RFAIEN,DLAYGO=368.0201,DIC(0)="L",DIC="^IBA(368,"_DA(1)_",201,",X=$$NOW^XLFDT()
"RTN","IBRFIWL1",337,0)
 D FILE^DICN K DD,DO S (CMTIEN,DA)=+Y I DA<1 D  Q
"RTN","IBRFIWL1",338,0)
 . D UNLOCKM(RFAIEN)
"RTN","IBRFIWL1",339,0)
 . W !!,*7,"Unable to create comment multiple to remove entry!"
"RTN","IBRFIWL1",340,0)
 . D PAUSE^VALM1
"RTN","IBRFIWL1",341,0)
 ;
"RTN","IBRFIWL1",342,0)
 ; Add reason for removal
"RTN","IBRFIWL1",343,0)
 S DIE="^IBA(368,"_DA(1)_",201,",DR=".02////"_DUZ_";.03" D ^DIE K DR,DIE
"RTN","IBRFIWL1",344,0)
 ;
"RTN","IBRFIWL1",345,0)
 ; be sure user enters a comment before actually removing the entry
"RTN","IBRFIWL1",346,0)
 I $G(^IBA(368,RFAIEN,201,CMTIEN,1,1,0))=""!(X="^") D  G R2
"RTN","IBRFIWL1",347,0)
 . W !!,*7,"Please enter the reason this entry is being removed.  A comment is mandatory!"
"RTN","IBRFIWL1",348,0)
 . ; Must delete new comment multiple if they don't enter comment
"RTN","IBRFIWL1",349,0)
 . S DIK="^IBA(368,"_DA(1)_",201," D ^DIK K DIK
"RTN","IBRFIWL1",350,0)
 . D PAUSE^VALM1
"RTN","IBRFIWL1",351,0)
 ;
"RTN","IBRFIWL1",352,0)
 ; if comment entered, update review status
"RTN","IBRFIWL1",353,0)
 N DA,DIE S DA=RFAIEN,DIE=368,NOW=$$NOW^XLFDT()
"RTN","IBRFIWL1",354,0)
 I $G(^IBA(368,RFAIEN,201,CMTIEN,1,1,0))'="" D
"RTN","IBRFIWL1",355,0)
 . S XX=$$GET1^DIQ(368,RFAIEN,200.04,"I") I XX=1 Q
"RTN","IBRFIWL1",356,0)
 . S DR="200.04////1"
"RTN","IBRFIWL1",357,0)
 . D ^DIE K DR
"RTN","IBRFIWL1",358,0)
 ;
"RTN","IBRFIWL1",359,0)
 ; Set deleted flag and date
"RTN","IBRFIWL1",360,0)
 S DR="200.01////1;200.02////"_NOW_";200.03////"_DUZ
"RTN","IBRFIWL1",361,0)
 D ^DIE K DR
"RTN","IBRFIWL1",362,0)
 ;
"RTN","IBRFIWL1",363,0)
 D UNLOCKM(RFAIEN)
"RTN","IBRFIWL1",364,0)
 S VALMBCK="Q"
"RTN","IBRFIWL1",365,0)
 Q
"RTN","IBRFIWL1",366,0)
 ;
"RTN","IBRFIWL1",367,0)
TPJI ;EP
"RTN","IBRFIWL1",368,0)
 ; Protocol action to do Third Party Joint Inquiry for the selected message
"RTN","IBRFIWL1",369,0)
 ; Input:   IBIFN   - IEN for Bill/Claim of the selected message
"RTN","IBRFIWL1",370,0)
 S VALMBCK="R"
"RTN","IBRFIWL1",371,0)
 D FULL^VALM1
"RTN","IBRFIWL1",372,0)
 D TPJI1^IBCECOB2(IBIFN)
"RTN","IBRFIWL1",373,0)
 Q
"RTN","IBRFIWL1",374,0)
 ;
"RTN","IBRFIWL1",375,0)
ASKYN(PROMPT,DEFAULT)   ; Ask a yes/no question
"RTN","IBRFIWL1",376,0)
 ; Input:   PROMPT      - Question to be asked
"RTN","IBRFIWL1",377,0)
 ;          DEFAULT     - Default Answer
"RTN","IBRFIWL1",378,0)
 ;                        1 - YES, 0 - NO
"RTN","IBRFIWL1",379,0)
 ;                        Optional, defaults to 0
"RTN","IBRFIWL1",380,0)
 ; Returns: 1 - User answered YES, 0 othewise
"RTN","IBRFIWL1",381,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBRFIWL1",382,0)
 S:$G(DEFAULT)'=1 DEFAULT=0
"RTN","IBRFIWL1",383,0)
 S DIR(0)="Y",DIR("A")=PROMPT
"RTN","IBRFIWL1",384,0)
 S DIR("B")=$S(DEFAULT:"YES",1:"NO")
"RTN","IBRFIWL1",385,0)
 D ^DIR
"RTN","IBRFIWL1",386,0)
 Q Y
"RTN","IBRFIWL1",387,0)
 ;  
"RTN","IBRFIWL1",388,0)
HELP ;EP
"RTN","IBRFIWL1",389,0)
 ; Protocol Action to display help information
"RTN","IBRFIWL1",390,0)
 S X="?"
"RTN","IBRFIWL1",391,0)
 D DISP^XQORM1
"RTN","IBRFIWL1",392,0)
 W !!
"RTN","IBRFIWL1",393,0)
 Q
"RTN","IBRFIWL1",394,0)
 ;
"RTN","IBRFIWL1",395,0)
EXIT ;EP
"RTN","IBRFIWL1",396,0)
 ; Protocol action to exit the worklist
"RTN","IBRFIWL1",397,0)
 K ^TMP("IBRFIWL1",$J)
"RTN","IBRFIWL1",398,0)
 D CLEAR^VALM1
"RTN","IBRFIWL1",399,0)
 Q
"RTN","IBRFIWL1",400,0)
 ;
"RTN","IBRFIWLA")
0^31^B115196222^n/a
"RTN","IBRFIWLA",1,0)
IBRFIWLA ;ALB/FA - IB LIST OF Request For Additional Information (RFAI) SCREEN ;18-JUL-2015
"RTN","IBRFIWLA",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-1994;Build 119
"RTN","IBRFIWLA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRFIWLA",4,0)
 ;
"RTN","IBRFIWLA",5,0)
 ; Continuation of methods for the Request for Additional Information worklist
"RTN","IBRFIWLA",6,0)
 ;
"RTN","IBRFIWLA",7,0)
 Q
"RTN","IBRFIWLA",8,0)
 ;
"RTN","IBRFIWLA",9,0)
SORTSET(LEVEL,DEFSORT,IBSORT1,IBDONE) ;EP
"RTN","IBRFIWLA",10,0)
 ; Allows the user to select Primary or Secondary sort option
"RTN","IBRFIWLA",11,0)
 ; Input:   LEVEL   - 1 - Setting Primary Sort
"RTN","IBRFIWLA",12,0)
 ;                    2 - Setting Secondary sort
"RTN","IBRFIWLA",13,0)
 ;          DEFSORT - Default sort value
"RTN","IBRFIWLA",14,0)
 ;                    Optional, defaults to ""
"RTN","IBRFIWLA",15,0)
 ;          IBSORT1 - Current Primary Sort Value
"RTN","IBRFIWLA",16,0)
 ;                    Optional, only passed when selecting the Secondary sort
"RTN","IBRFIWLA",17,0)
 ; Output:  IBDONE  - 1 if user '^' or timed out, 0 otherwise
"RTN","IBRFIWLA",18,0)
 ; Returns: Selected Sort Option
"RTN","IBRFIWLA",19,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEVDESC,LINE,LN,SORT,SKIP,XX,X,Y
"RTN","IBRFIWLA",20,0)
 S:'$D(DEFSORT) DEFSORT=""
"RTN","IBRFIWLA",21,0)
 S IBDONE=0
"RTN","IBRFIWLA",22,0)
 S LEVDESC=$S(LEVEL=2:"Secondary",1:"Primary")
"RTN","IBRFIWLA",23,0)
 S DIR("A")="Select "_LEVDESC_" Sort"
"RTN","IBRFIWLA",24,0)
 S:DEFSORT'="" DIR("B")=$$SD(DEFSORT)
"RTN","IBRFIWLA",25,0)
 S DIR("?")="Enter a code from the list to indicate the "_LEVDESC_" sort order."
"RTN","IBRFIWLA",26,0)
 I LEVEL=2 D
"RTN","IBRFIWLA",27,0)
 . S DIR("?",1)="  Primary Sort is "_$$SD($G(IBSORT1))
"RTN","IBRFIWLA",28,0)
 . S DIR("?",LEVEL)=""
"RTN","IBRFIWLA",29,0)
 ;
"RTN","IBRFIWLA",30,0)
 I LEVEL=1 S DIR(0)="S"                         ; Primary sort required
"RTN","IBRFIWLA",31,0)
 E  S DIR(0)="SO"                               ; Optional Secondary sort
"RTN","IBRFIWLA",32,0)
 ;
"RTN","IBRFIWLA",33,0)
 ; Set the allowable sort options
"RTN","IBRFIWLA",34,0)
 S XX=""
"RTN","IBRFIWLA",35,0)
 F LN=1:1 D  Q:SORT=""
"RTN","IBRFIWLA",36,0)
 . S SORT=$P($T(ZZ+LN),";",3),SKIP=0            ; Sort Code
"RTN","IBRFIWLA",37,0)
 . Q:SORT="END"
"RTN","IBRFIWLA",38,0)
 . ;
"RTN","IBRFIWLA",39,0)
 . ; Secondary Sort - exclude primary sort or related option
"RTN","IBRFIWLA",40,0)
 . I LEVEL=2 D  Q:SKIP
"RTN","IBRFIWLA",41,0)
 . . I $P(SORT,":",1)=IBSORT1 S SKIP=1 Q        ; Exclude Primary Sort
"RTN","IBRFIWLA",42,0)
 . . I IBSORT1="D",$P(SORT,":",1)="E" S SKIP=1 Q
"RTN","IBRFIWLA",43,0)
 . . I IBSORT1="E",$P(SORT,":",1)="D" S SKIP=1 Q
"RTN","IBRFIWLA",44,0)
 . . I IBSORT1="N",$P(SORT,":",1)="O" S SKIP=1 Q
"RTN","IBRFIWLA",45,0)
 . . I IBSORT1="O",$P(SORT,":",1)="N" S SKIP=1 Q
"RTN","IBRFIWLA",46,0)
 . S XX=$S(XX="":SORT,1:XX_";"_SORT)
"RTN","IBRFIWLA",47,0)
 S $P(DIR(0),"^",2)=XX
"RTN","IBRFIWLA",48,0)
 D ^DIR
"RTN","IBRFIWLA",49,0)
 K DIR
"RTN","IBRFIWLA",50,0)
 I $D(DTOUT) S IBDONE=1 Q 0                     ; Timeout
"RTN","IBRFIWLA",51,0)
 ;I $D(DIRUT),LEVEL=1 S IBDONE=1 Q 0             ; ^ or nil response
"RTN","IBRFIWLA",52,0)
 I $D(DIRUT) S IBDONE=1 Q 0             ; ^ or nil response
"RTN","IBRFIWLA",53,0)
 Q Y
"RTN","IBRFIWLA",54,0)
 ;
"RTN","IBRFIWLA",55,0)
SELMSG(PROMPT) ;EP
"RTN","IBRFIWLA",56,0)
 ; Select a message
"RTN","IBRFIWLA",57,0)
 ; Input:   PROMPT                  - Prompt to display to the user
"RTN","IBRFIWLA",58,0)
 ;          ^TMP("IBRFIWLIX",$J,CNT)=RFAIEN
"RTN","IBRFIWLA",59,0)
 ; Returns: IEN of the selected message or ""
"RTN","IBRFIWLA",60,0)
 N DIROUT,DIRUT,DLINE,DTOUT,DUOUT,END,MCNT,RFAIEN,START,X,Y
"RTN","IBRFIWLA",61,0)
 I '$D(^TMP("IBRFIWLIX",$J)) W !!?5,"There are no 'RFAI Messages' to select." D PAUSE^VALM1 Q ""
"RTN","IBRFIWLA",62,0)
 S START=1,END=$O(^TMP("IBRFIWLIX",$J,""),-1)
"RTN","IBRFIWLA",63,0)
 D FULL^VALM1
"RTN","IBRFIWLA",64,0)
 S MCNT=$P($P($G(XQORNOD(0)),"^",4),"=",2)    ; User selection with action
"RTN","IBRFIWLA",65,0)
 S MCNT=$TR(MCNT,"/\; .",",,,,,")             ; Check for multi-selection
"RTN","IBRFIWLA",66,0)
 ;
"RTN","IBRFIWLA",67,0)
 I MCNT["," D  Q ""                           ; Invalid multi-selection
"RTN","IBRFIWLA",68,0)
 . W !,*7,">>>> Only single entry selection is allowed"
"RTN","IBRFIWLA",69,0)
 . K DIR
"RTN","IBRFIWLA",70,0)
 . D PAUSE^VALM1
"RTN","IBRFIWLA",71,0)
 S:MCNT="" MCNT=$$SELENTRY(PROMPT,START,END)
"RTN","IBRFIWLA",72,0)
 Q:MCNT<1 ""
"RTN","IBRFIWLA",73,0)
 S RFAIEN=^TMP("IBRFIWLIX",$J,MCNT)
"RTN","IBRFIWLA",74,0)
 Q RFAIEN
"RTN","IBRFIWLA",75,0)
 ;
"RTN","IBRFIWLA",76,0)
SELENTRY(PROMPT,START,END)    ; select a Message
"RTN","IBRFIWLA",77,0)
 ; Input:   PROMPT  - Prompt to be displayed to the user
"RTN","IBRFIWLA",78,0)
 ;          START   - Starting Message # that can be selected
"RTN","IBRFIWLA",79,0)
 ;          END     - Ending Message # that can be selected
"RTN","IBRFIWLA",80,0)
 ; Returns: Selected Message # or "" if not selected
"RTN","IBRFIWLA",81,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBRFIWLA",82,0)
 S DIR(0)="NO^"_START_":"_END_":0"
"RTN","IBRFIWLA",83,0)
 S DIR("A")=PROMPT
"RTN","IBRFIWLA",84,0)
 D ^DIR K DIR
"RTN","IBRFIWLA",85,0)
 Q +X
"RTN","IBRFIWLA",86,0)
 ;
"RTN","IBRFIWLA",87,0)
BLDCOM(RFAIEN,SLINE,ELINE) ; Build the Comment Section (if a comment exists) - called from IBRFIWL1
"RTN","IBRFIWLA",88,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWLA",89,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBRFIWLA",90,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBRFIWLA",91,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBRFIWLA",92,0)
 ;
"RTN","IBRFIWLA",93,0)
 N CBY,CDATE,COM,IX,LI,LIDATA
"RTN","IBRFIWLA",94,0)
 S ELINE=$$SET^IBRFIWL1("",$J("",40),SLINE,1)            ; Spacing Blank Line
"RTN","IBRFIWLA",95,0)
 I '$O(^IBA(368,RFAIEN,201,0)) Q        ; See if we have a comment
"RTN","IBRFIWLA",96,0)
 S ELINE=$$SETN^IBRFIWL1("Comment History",ELINE,1,1)
"RTN","IBRFIWLA",97,0)
 ; See if we have a comment
"RTN","IBRFIWLA",98,0)
 S LI=0 F  S LI=$O(^IBA(368,RFAIEN,201,LI)) Q:LI'=+LI  D
"RTN","IBRFIWLA",99,0)
 . S CDATE=$$GET1^DIQ(368.0201,LI_","_RFAIEN,.01,"I")
"RTN","IBRFIWLA",100,0)
 . S CDATE=$$FMTE^XLFDT(CDATE,"2ZM")
"RTN","IBRFIWLA",101,0)
 . S CBY=$$GET1^DIQ(368.0201,LI_","_RFAIEN,.02)
"RTN","IBRFIWLA",102,0)
 . S ELINE=$$SETN^IBRFIWL1("Comment - Entered By: "_CBY_" on "_CDATE,ELINE,1)
"RTN","IBRFIWLA",103,0)
 . S IX=0 F  S IX=$O(^IBA(368,RFAIEN,201,LI,1,IX)) Q:IX=""  S LIDATA=$G(^(IX,0)) D
"RTN","IBRFIWLA",104,0)
 .. S ELINE=$$SET^IBRFIWL1("  ",LIDATA,ELINE,1)
"RTN","IBRFIWLA",105,0)
 Q
"RTN","IBRFIWLA",106,0)
 ;
"RTN","IBRFIWLA",107,0)
WRAP(STRING,ROOM,SUBS,IBARY) ; wrap long lines without breaking up words, called from IBRFIWL1
"RTN","IBRFIWLA",108,0)
 ;
"RTN","IBRFIWLA",109,0)
 ; STRING = data string to wrap
"RTN","IBRFIWLA",110,0)
 ; ROOM = number of characters to break at for line 1
"RTN","IBRFIWLA",111,0)
 ; SUBS = number of characters to break at for subsequent lines (may or may not be same as ROOM)
"RTN","IBRFIWLA",112,0)
 ; IBARY = (required) subscripted array to return wrapped data in:
"RTN","IBRFIWLA",113,0)
 ;  array(1)=first line
"RTN","IBRFIWLA",114,0)
 ;  array(2)= 2nd line and so on
"RTN","IBRFIWLA",115,0)
 ;
"RTN","IBRFIWLA",116,0)
 ; Returns total # of lines in description
"RTN","IBRFIWLA",117,0)
 ;
"RTN","IBRFIWLA",118,0)
 N START,END,I,C
"RTN","IBRFIWLA",119,0)
 ; if there is enough room for 1 line, no wrapping needed
"RTN","IBRFIWLA",120,0)
 I $L(STRING)'>ROOM S IBARY(1)=STRING Q 1
"RTN","IBRFIWLA",121,0)
 ; add a space to the end of the string to avoid dropping last character
"RTN","IBRFIWLA",122,0)
 S START=1,END=ROOM,STRING=STRING_" "
"RTN","IBRFIWLA",123,0)
 F C=1:1 D  Q:$L(STRING)<START  ; stop if we have made it to the end of the data string
"RTN","IBRFIWLA",124,0)
 .; start at the end and work backwards until you find a blank space, cut the line there and move on to the next line 
"RTN","IBRFIWLA",125,0)
 .F I=END:-1:1 I $E(STRING,I)=" " S IBARY(C)=$E(STRING,START,I),START=I+1,END=SUBS+START Q
"RTN","IBRFIWLA",126,0)
 Q C
"RTN","IBRFIWLA",127,0)
 ;
"RTN","IBRFIWLA",128,0)
SD(SORT) ;EP
"RTN","IBRFIWLA",129,0)
 ; Returns the sort description given the sort code
"RTN","IBRFIWLA",130,0)
 ; Input:   SORT    - Sort Code
"RTN","IBRFIWLA",131,0)
 ; Returns: Sort Description
"RTN","IBRFIWLA",132,0)
 Q $P($P($T(@("ZZ"_$G(SORT))),";",3),":",2)
"RTN","IBRFIWLA",133,0)
 ;
"RTN","IBRFIWLA",134,0)
ZZ ; List of allowable sort criteria
"RTN","IBRFIWLA",135,0)
ZZN ;;N:Earliest Date Received
"RTN","IBRFIWLA",136,0)
ZZO ;;O:Latest Date Received
"RTN","IBRFIWLA",137,0)
ZZE ;;E:Earliest Due Date
"RTN","IBRFIWLA",138,0)
ZZD ;;D:Latest Due Date
"RTN","IBRFIWLA",139,0)
ZZI ;;I:Insurance Company Name
"RTN","IBRFIWLA",140,0)
ZZP ;;P:Patient Name
"RTN","IBRFIWLA",141,0)
ZZB ;;B:Authorizing Biller
"RTN","IBRFIWLA",142,0)
ZZL ;;L:LOINC Code
"RTN","IBRFIWLA",143,0)
END ;;END
"RTN","IBRFIWLA",144,0)
 ;
"RTN","IBRFIWLA",145,0)
 Q
"RTN","IBRFIWLA",146,0)
PURGWL ; purge file 368 entries based on # of days in PURGE DAYS 277 RFAI 
"RTN","IBRFIWLA",147,0)
 ;       in IB SITE PARAMETERS (field #52.02 in file #350.9)
"RTN","IBRFIWLA",148,0)
 ; Called from NIGHTLY^IBTRKR (tasked option IB MT NIGHT COMP)
"RTN","IBRFIWLA",149,0)
 ; null entry (the default) indicates the transactions will be stored forever.
"RTN","IBRFIWLA",150,0)
 N CMTIEN,DA,DIC,DLAYGO,IBPERS,IBRFI,NMIDX,NOW,RMVCOM,WLENDT,WLPRGD
"RTN","IBRFIWLA",151,0)
 ; get INTERFACE,IB RFI user id#
"RTN","IBRFIWLA",152,0)
 S IBPERS=$$FIND1^DIC(200,,,"INTERFACE,IB RFI")
"RTN","IBRFIWLA",153,0)
 S IBPERS=$S(IBPERS:IBPERS,1:.5) ; force to POSTMASTER if unknown 
"RTN","IBRFIWLA",154,0)
 ; get Purge in Number of days and WL Ending Date
"RTN","IBRFIWLA",155,0)
 S WLPRGD=$$GET1^DIQ(350.9,1,52.02) Q:WLPRGD=""
"RTN","IBRFIWLA",156,0)
 S WLENDT=$$FMTHL7^XLFDT($$FMADD^XLFDT(DT,-WLPRGD))
"RTN","IBRFIWLA",157,0)
 ; loop through non-deleted entries and see if they meet purge days criteria
"RTN","IBRFIWLA",158,0)
 S IBRFI="" F  S IBRFI=$O(^IBA(368,"E",0,IBRFI)) Q:IBRFI=""  D
"RTN","IBRFIWLA",159,0)
 . Q:$E($$GET1^DIQ(368,IBRFI,.03,"I"),1,8)>WLENDT
"RTN","IBRFIWLA",160,0)
 . ; CHECK FOR REVIEW STATUS (#200.04) I STATUS="1" for "REVIEW IN PROGRESS", QUIT
"RTN","IBRFIWLA",161,0)
 . Q:$$GET1^DIQ(368,IBRFI,200.04,"I")=1
"RTN","IBRFIWLA",162,0)
 . I '$$LOCKM^IBRFIWL1(IBRFI) Q  ;  unable to remove the WL, due to LOCK
"RTN","IBRFIWLA",163,0)
 . ;
"RTN","IBRFIWLA",164,0)
 . ; REMOVE WL & SET Comment Entered Date      (^IBA(368,D0,201,D1,0) [1P:200]
"RTN","IBRFIWLA",165,0)
 . S DA(1)=IBRFI,DLAYGO=368.0201,DIC(0)="L",DIC="^IBA(368,"_DA(1)_",201,"
"RTN","IBRFIWLA",166,0)
 . S X=$$NOW^XLFDT()
"RTN","IBRFIWLA",167,0)
 . D FILE^DICN
"RTN","IBRFIWLA",168,0)
 . K DD,DO S (CMTIEN,DA)=+Y
"RTN","IBRFIWLA",169,0)
 . I DA<1 D UNLOCKM^IBRFIWL1(IBRFI) Q  ; WL locked, unable to create comment multiple
"RTN","IBRFIWLA",170,0)
 . ;
"RTN","IBRFIWLA",171,0)
 . ; SET Comment Entered By & Comment          (^IBA(368,D0,201,D1,0) [2P:200]
"RTN","IBRFIWLA",172,0)
 . S DIE="^IBA(368,"_DA(1)_",201,"
"RTN","IBRFIWLA",173,0)
 . S RMVCOM="Entry automatically expired from the RFAI Management Worklist."
"RTN","IBRFIWLA",174,0)
 . S DR=".02////"_IBPERS_";.03///"_RMVCOM ;   user INTERFACE,IB RFI
"RTN","IBRFIWLA",175,0)
 . D ^DIE
"RTN","IBRFIWLA",176,0)
 . K DR,DIE
"RTN","IBRFIWLA",177,0)
 . ;
"RTN","IBRFIWLA",178,0)
 . ; if comment entered, update deleted flag and date
"RTN","IBRFIWLA",179,0)
 . N DA,DIE
"RTN","IBRFIWLA",180,0)
 . S DA=IBRFI,DIE=368,NOW=$$NOW^XLFDT()
"RTN","IBRFIWLA",181,0)
 . S DR="200.01////1;200.02////"_NOW_";200.03////"_IBPERS ;   User INTERFACE,IB RFI
"RTN","IBRFIWLA",182,0)
 . D ^DIE K DR
"RTN","IBRFIWLA",183,0)
 . ;
"RTN","IBRFIWLA",184,0)
 . D UNLOCKM^IBRFIWL1(IBRFI)
"RTN","IBRFIWLA",185,0)
 K CMTIEN,DA,DIC,DLAYGO,IBPERS,IBRFI,IBSTR,NMIDX,NOW,RMVCOM,WLENDT,WLPRGD,WLRVST
"RTN","IBRFIWLA",186,0)
 Q
"RTN","IBRFIWLA",187,0)
 ;
"RTN","IBRFIWLA",188,0)
BLDSLI(RFAIEN,SLINE,ELINE) ; Build the Service Line Information Section - called from IBRFIWL1
"RTN","IBRFIWLA",189,0)
 ; Input:   RFAIEN  - IEN of the selected Message
"RTN","IBRFIWLA",190,0)
 ;          SLINE   - Starting Section Line Number
"RTN","IBRFIWLA",191,0)
 ;          ELINE   - Current Ending Section Line Number
"RTN","IBRFIWLA",192,0)
 ; Output:  ELINE   - Updated Ending Section Line Number
"RTN","IBRFIWLA",193,0)
 ;
"RTN","IBRFIWLA",194,0)
 N SL0,SL1,RFAIEN1,XX,YY,ARY,LN,I
"RTN","IBRFIWLA",195,0)
 S ELINE=$$SET^IBRFIWL1("",$J("",40),SLINE,1)            ; Spacing Blank Line-
"RTN","IBRFIWLA",196,0)
 S ELINE=$$SETN^IBRFIWL1("Service Line Information / Service Line Status Information",ELINE,1,1)
"RTN","IBRFIWLA",197,0)
 ;
"RTN","IBRFIWLA",198,0)
 ; Make sure there is line info before wasting everyones time
"RTN","IBRFIWLA",199,0)
 I '+$O(^IBA(368,RFAIEN,21,0)) D  Q
"RTN","IBRFIWLA",200,0)
 .S ELINE=$$SET^IBRFIWL1("**No line information received** ","",ELINE+1,2)
"RTN","IBRFIWLA",201,0)
 .Q
"RTN","IBRFIWLA",202,0)
 ;
"RTN","IBRFIWLA",203,0)
 S SL0=0
"RTN","IBRFIWLA",204,0)
 F  S SL0=$O(^IBA(368,RFAIEN,21,SL0)) Q:SL0'=+SL0  D
"RTN","IBRFIWLA",205,0)
 . S RFAIEN1=SL0_","_RFAIEN_","
"RTN","IBRFIWLA",206,0)
 . S XX=$$GETFVAL^IBRFIWL("368.021,.1",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",207,0)
 . S ELINE=$$SET^IBRFIWL1("Line Item Control Number: ",XX,ELINE,1)
"RTN","IBRFIWLA",208,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.11",RFAIEN1,"",3,2)
"RTN","IBRFIWLA",209,0)
 . S ELINE=$$SET^IBRFIWL1("Service Line Date: ",XX,ELINE,1)  ;*FA* Same as service date above
"RTN","IBRFIWLA",210,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.09",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",211,0)
 . S ELINE=$$SET^IBRFIWL1("Revenue Code: ",XX,ELINE,1)
"RTN","IBRFIWLA",212,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.02",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",213,0)
 . S ELINE=$$SET^IBRFIWL1("Coding Method: ",XX,ELINE,1)
"RTN","IBRFIWLA",214,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.03",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",215,0)
 . S ELINE=$$SET^IBRFIWL1("Procedure Code: ",XX,ELINE,1)
"RTN","IBRFIWLA",216,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.04",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",217,0)
 . S:XX'="" ELINE=$$SET^IBRFIWL1("  Procedure Modifier 1: ",XX,ELINE,1)
"RTN","IBRFIWLA",218,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.05",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",219,0)
 . S:XX'="" ELINE=$$SET^IBRFIWL1("  Procedure Modifier 2: ",XX,ELINE,1)
"RTN","IBRFIWLA",220,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.06",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",221,0)
 . S:XX'="" ELINE=$$SET^IBRFIWL1("  Procedure Modifier 3: ",XX,ELINE,1)
"RTN","IBRFIWLA",222,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.07",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",223,0)
 . S:XX'="" ELINE=$$SET^IBRFIWL1("  Procedure Modifier 4: ",XX,ELINE,1)
"RTN","IBRFIWLA",224,0)
 . S XX=$$GETFVAL^IBRFIWL("368.0121,.08",RFAIEN1,"",0,2) S:XX]"" XX="$"_XX
"RTN","IBRFIWLA",225,0)
 . S ELINE=$$SET^IBRFIWL1("Line Item Charge Amount: ",XX,ELINE,1)
"RTN","IBRFIWLA",226,0)
 . S SL1=0 F  S SL1=$O(^IBA(368,RFAIEN,121,SL0,99,SL1)) Q:SL1'=+SL1  D
"RTN","IBRFIWLA",227,0)
 .. S RFAIEN1=SL1_","_SL0_","_RFAIEN
"RTN","IBRFIWLA",228,0)
 .. S XX=$$GETFVAL^IBRFIWL("368.12199,1.01",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",229,0)
 .. S YY=$$GET1^DIQ(368.12199,RFAIEN1,1.01,"I")
"RTN","IBRFIWLA",230,0)
 .. I YY S ZZ=$$GET1^DIQ(368.001,YY_",",.02) I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWLA",231,0)
 .. I XX'="" D
"RTN","IBRFIWLA",232,0)
 ... K ARY S LN=$$WRAP^IBRFIWLA(XX,64,79,.ARY)
"RTN","IBRFIWLA",233,0)
 ... S ELINE=$$SET^IBRFIWL1("HCCS Category: ",ARY(1),ELINE,1)
"RTN","IBRFIWLA",234,0)
 ... F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET^IBRFIWL1("",ARY(I),ELINE,1)
"RTN","IBRFIWLA",235,0)
 .. S XX=$$GETFVAL^IBRFIWL("368.12199,1.02",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",236,0)
 .. S YY=$$GET1^DIQ(368.12199,RFAIEN1,1.02,"I")
"RTN","IBRFIWLA",237,0)
 .. I YY S ZZ=$P($$GET1^DIQ(368.12199,RFAIEN1,"1.02:80"),":") I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWLA",238,0)
 .. S LN=$$WRAP^IBRFIWLA(XX,42,79,.ARY)
"RTN","IBRFIWLA",239,0)
 .. S ELINE=$$SET^IBRFIWL1("Add'l Info Request Modifier (LOINC): ",ARY(1),ELINE,1)
"RTN","IBRFIWLA",240,0)
 .. F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET^IBRFIWL1("",ARY(I),ELINE,1)
"RTN","IBRFIWLA",241,0)
 .. S XX=$$GETFVAL^IBRFIWL("368.12199,10.01",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",242,0)
 .. S YY=$$GET1^DIQ(368.12199,RFAIEN1,10.01,"I")
"RTN","IBRFIWLA",243,0)
 .. I YY S ZZ=$$GET1^DIQ(368.001,YY_",",.02) I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWLA",244,0)
 .. I XX'="" D
"RTN","IBRFIWLA",245,0)
 ... K ARY S LN=$$WRAP^IBRFIWLA(XX,62,77,.ARY)
"RTN","IBRFIWLA",246,0)
 ... S ELINE=$$SET^IBRFIWL1("  HCCS Category: ",ARY(1),ELINE,1)
"RTN","IBRFIWLA",247,0)
 ... F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET^IBRFIWL1("  ",ARY(I),ELINE,1)
"RTN","IBRFIWLA",248,0)
 .. S XX=$$GETFVAL^IBRFIWL("368.12199,10.02",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",249,0)
 .. S YY=$$GET1^DIQ(368.12199,RFAIEN1,10.02,"I")
"RTN","IBRFIWLA",250,0)
 .. I YY S ZZ=$P($$GET1^DIQ(368.12199,RFAIEN1,"10.02:80"),":") I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWLA",251,0)
 .. I XX'="" D
"RTN","IBRFIWLA",252,0)
 ... K ARY S LN=$$WRAP^IBRFIWLA(XX,48,77,.ARY)
"RTN","IBRFIWLA",253,0)
 ... S ELINE=$$SET^IBRFIWL1("  Add'l Info Request Modifier: ",ARY(1),ELINE,1)
"RTN","IBRFIWLA",254,0)
 ... F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET^IBRFIWL1("  ",ARY(I),ELINE,1)
"RTN","IBRFIWLA",255,0)
 .. S XX=$$GETFVAL^IBRFIWL("368.12199,11.01",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",256,0)
 .. S YY=$$GET1^DIQ(368.12199,RFAIEN1,11.01,"I")
"RTN","IBRFIWLA",257,0)
 .. I YY S ZZ=$$GET1^DIQ(368.001,YY_",",.02) I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWLA",258,0)
 .. I XX'="" D
"RTN","IBRFIWLA",259,0)
 ... K ARY S LN=$$WRAP^IBRFIWLA(XX,62,77,.ARY)
"RTN","IBRFIWLA",260,0)
 ... S ELINE=$$SET^IBRFIWL1("  HCCS Category: ",ARY(1),ELINE,1)
"RTN","IBRFIWLA",261,0)
 ... F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET^IBRFIWL1("  ",ARY(I),ELINE,1)
"RTN","IBRFIWLA",262,0)
 .. S XX=$$GETFVAL^IBRFIWL("368.12199,11.02",RFAIEN1,"",0,2)
"RTN","IBRFIWLA",263,0)
 .. S YY=$$GET1^DIQ(368.12199,RFAIEN1,11.02,"I")
"RTN","IBRFIWLA",264,0)
 .. I YY S ZZ=$P($$GET1^DIQ(368.12199,RFAIEN1,"11.02:80"),":") I ZZ]"" S XX=XX_" - "_ZZ
"RTN","IBRFIWLA",265,0)
 .. I XX'="" D
"RTN","IBRFIWLA",266,0)
 ... K ARY S LN=$$WRAP^IBRFIWLA(XX,48,77,.ARY)
"RTN","IBRFIWLA",267,0)
 ... S ELINE=$$SET^IBRFIWL1("  Add'l Info Request Modifier: ",ARY(1),ELINE,1)
"RTN","IBRFIWLA",268,0)
 ... F I=2:1:LN S:$D(ARY(LN)) ELINE=$$SET^IBRFIWL1("  ",ARY(I),ELINE,1)
"RTN","IBRFIWLA",269,0)
 .. S XX=$$GETFVAL^IBRFIWL("368.12199,.02",RFAIEN1,"",3,2)
"RTN","IBRFIWLA",270,0)
 .. S ELINE=$$SET^IBRFIWL1("Status Information Effective Date: ",XX,ELINE,1)
"RTN","IBRFIWLA",271,0)
 .. ;S ELINE=$$SET^IBRFIWL1("Response Due Date: ","",ELINE,1)
"RTN","IBRFIWLA",272,0)
 Q
"RTN","IBTRKR")
0^62^B38263485^B36589425
"RTN","IBTRKR",1,0)
IBTRKR ;ALB/AAS - CLAIMS TRACKER - AUTO-ENROLLER ; 4-AUG-93
"RTN","IBTRKR",2,0)
 ;;2.0;INTEGRATED BILLING;**23,43,45,56,214,547**;21-MAR-94;Build 119
"RTN","IBTRKR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRKR",4,0)
 ;
"RTN","IBTRKR",5,0)
INP ; -- Inpatient Tracker
"RTN","IBTRKR",6,0)
 ;    called by ibamtd  from DGPM MOVEMENT EVENTS
"RTN","IBTRKR",7,0)
 ;                                               add   edit   delete
"RTN","IBTRKR",8,0)
 ;  dgpma = after movement 0th node file 405  : data   data   null
"RTN","IBTRKR",9,0)
 ;  dgpmp = prior movement 0th node file 405  : null   data   data
"RTN","IBTRKR",10,0)
 ;  dfn   = ien of patient
"RTN","IBTRKR",11,0)
 ;  
"RTN","IBTRKR",12,0)
 N %,%H,%I,IBMVAD,IBMVTP,IBTRKR
"RTN","IBTRKR",13,0)
 ;
"RTN","IBTRKR",14,0)
 ;  inpatient claims tracking turned off
"RTN","IBTRKR",15,0)
 S IBTRKR=$G(^IBE(350.9,1,6)) I '$P(IBTRKR,"^",2) Q
"RTN","IBTRKR",16,0)
 ;
"RTN","IBTRKR",17,0)
 ;  movement type 1=admission, 2=transfer, 3=discharge, 6=specialty chg
"RTN","IBTRKR",18,0)
 S IBMVTP=$S($P(DGPMA,"^",2):$P(DGPMA,"^",2),1:$P(DGPMP,"^",2)) I 'IBMVTP Q
"RTN","IBTRKR",19,0)
 ;
"RTN","IBTRKR",20,0)
 ;  $p(14)=admission movement ptr entry in file 405
"RTN","IBTRKR",21,0)
 S IBMVAD=$S(DGPMA'="":$P(DGPMA,"^",14),1:$P(DGPMP,"^",14)) I 'IBMVAD Q
"RTN","IBTRKR",22,0)
 ;
"RTN","IBTRKR",23,0)
 D WRITE("Updating claims tracking ... ",2)
"RTN","IBTRKR",24,0)
 ;
"RTN","IBTRKR",25,0)
 I '$D(VAIN(1)) D INP^VADPT
"RTN","IBTRKR",26,0)
 ;
"RTN","IBTRKR",27,0)
 ;  add/edit admission
"RTN","IBTRKR",28,0)
 I IBMVTP=1 D ADMIT Q
"RTN","IBTRKR",29,0)
 ;
"RTN","IBTRKR",30,0)
 ;  transfer to asih (patch 23)
"RTN","IBTRKR",31,0)
 I $P($G(^DGPM(+$P(DGPMA,"^",15),0)),"^",2)=1 S IBMVAD=$P(DGPMA,"^",15) D ADMIT Q
"RTN","IBTRKR",32,0)
 ;
"RTN","IBTRKR",33,0)
 ;  specialty change
"RTN","IBTRKR",34,0)
 I IBMVTP=6 D SPECIAL Q
"RTN","IBTRKR",35,0)
 ;
"RTN","IBTRKR",36,0)
 D WRITE("completed.")
"RTN","IBTRKR",37,0)
 Q
"RTN","IBTRKR",38,0)
 ;
"RTN","IBTRKR",39,0)
 ;
"RTN","IBTRKR",40,0)
WRITE(MSG,FF)         ;  write message on screen if not silent
"RTN","IBTRKR",41,0)
 ;  write 'F'orm 'F'eeds count followed by msg (optional)
"RTN","IBTRKR",42,0)
 N %
"RTN","IBTRKR",43,0)
 I '$D(IB20),'$G(DGQUIET) D
"RTN","IBTRKR",44,0)
 .   F %=1:1:$G(FF) W !
"RTN","IBTRKR",45,0)
 .   W MSG
"RTN","IBTRKR",46,0)
 Q
"RTN","IBTRKR",47,0)
 ;
"RTN","IBTRKR",48,0)
 ;
"RTN","IBTRKR",49,0)
ADMIT ; -- process admission movements
"RTN","IBTRKR",50,0)
 ;  ibmvad is admission movement pointer to file 405
"RTN","IBTRKR",51,0)
 ;  dgpma  is movement entry from file 405
"RTN","IBTRKR",52,0)
 N %,%H,%I,IBCTFLAG,IBNEW,IBRANDOM,IBTRN,LASTADM,LASTDA,LASTDATA
"RTN","IBTRKR",53,0)
 ;
"RTN","IBTRKR",54,0)
 ;  this is a deleted admission from file 405, dgpma=null
"RTN","IBTRKR",55,0)
 I DGPMA="" D DELADMIT Q
"RTN","IBTRKR",56,0)
 ;
"RTN","IBTRKR",57,0)
 ;  try and relink to existing entry if already there
"RTN","IBTRKR",58,0)
 ;  find the last admission, check to make sure its inactive and there
"RTN","IBTRKR",59,0)
 ;  is not a pointer to the movement file ($p(5)).  if the current
"RTN","IBTRKR",60,0)
 ;  admission date is within 5 days, update the entry.
"RTN","IBTRKR",61,0)
 S LASTADM=$O(^IBT(356,"APTY",DFN,+$O(^IBE(356.6,"AC",1,0)),9999999),-1)
"RTN","IBTRKR",62,0)
 I LASTADM S LASTDA=+$O(^IBT(356,"APTY",DFN,1,LASTADM,0)),LASTDATA=$G(^IBT(356,LASTDA,0)) I $P(LASTDATA,"^",20)=0,$P(LASTDATA,"^",5)="" D  Q:$G(IBCTFLAG)
"RTN","IBTRKR",63,0)
 .   S %=$$FMDIFF^XLFDT($P(DGPMA,"."),$P(LASTADM,"."))
"RTN","IBTRKR",64,0)
 .   I %>-5,%<5 D RELINK^IBTRKRU(LASTDA,IBMVAD,$P(DGPMA,"^")),RELBULL^IBTRKRBR(DFN,LASTDA,DGPMA,+$G(VAIN(3))),WRITE("entry re-linked.") S IBCTFLAG=1
"RTN","IBTRKR",65,0)
 ;
"RTN","IBTRKR",66,0)
 ;  random sampler, admission date must equal today (dt)
"RTN","IBTRKR",67,0)
 I +$G(VAIN(3)),($E(+DGPMA,1,7)=DT) S IBRANDOM=$$RANDOM^IBTRKR1(+VAIN(3))
"RTN","IBTRKR",68,0)
 ;
"RTN","IBTRKR",69,0)
 N D,D0,DI,DIG,DIH,DIU,DIV,DQ,IBADMDT,IBETYP  ; variables left by ibtutl
"RTN","IBTRKR",70,0)
 ;  inpatient claims tracking = all patients
"RTN","IBTRKR",71,0)
 I $P(IBTRKR,"^",2)=2 D  Q
"RTN","IBTRKR",72,0)
 .   D ADM^IBTUTL(IBMVAD,+$E(+DGPMA,1,12),$G(IBRANDOM),$P(DGPMA,"^",27))
"RTN","IBTRKR",73,0)
 .   D WRITE("entry "_$S($G(IBNEW):"added.",1:"edited."))
"RTN","IBTRKR",74,0)
 .   I $G(IBRANDOM),$G(IBTRN) D ADMTBULL^IBTRKRBA(DFN,IBTRN,DGPMA,+$G(VAIN(3)))
"RTN","IBTRKR",75,0)
 ;
"RTN","IBTRKR",76,0)
 ;  inpatient claims tracking = insured and ur only
"RTN","IBTRKR",77,0)
 I $P(IBTRKR,"^",2)=1,$S($G(IBRANDOM):1,'$$INSURED^IBCNS1(DFN,+DGPMA):0,1:$$PTCOV^IBCNSU3(DFN,+DGPMA,"INPATIENT")) D  Q
"RTN","IBTRKR",78,0)
 .   D ADM^IBTUTL(IBMVAD,+$E(+DGPMA,1,12),$G(IBRANDOM),$P(DGPMA,"^",27))
"RTN","IBTRKR",79,0)
 .   D WRITE("entry "_$S($G(IBNEW):"added.",1:"edited."))
"RTN","IBTRKR",80,0)
 .   I $G(IBRANDOM),$G(IBTRN) D ADMTBULL^IBTRKRBA(DFN,IBTRN,DGPMA,+$G(VAIN(3)))
"RTN","IBTRKR",81,0)
 ;
"RTN","IBTRKR",82,0)
 ;  inpatient claims tracking = insured and ur only, but not insurred
"RTN","IBTRKR",83,0)
 ;  need to send off RDV in background
"RTN","IBTRKR",84,0)
 N IBT
"RTN","IBTRKR",85,0)
 I $P(IBTRKR,"^",2)=1,'$$INSURED^IBCNS1(DFN,+DGPMA),$$TFL^IBARXMU(DFN,.IBT),'$D(^IBT(356,"ARDV",DFN)) D ADM^IBCNRDV(DFN,IBMVAD,+$E(+DGPMA,1,12),$G(IBRANDOM),$P(DGPMA,"^",27)) D WRITE("Remote Query for insurance sent.") Q
"RTN","IBTRKR",86,0)
 ;
"RTN","IBTRKR",87,0)
 ;
"RTN","IBTRKR",88,0)
 D WRITE("no action taken.")
"RTN","IBTRKR",89,0)
 Q
"RTN","IBTRKR",90,0)
 ;
"RTN","IBTRKR",91,0)
 ;
"RTN","IBTRKR",92,0)
DELADMIT ;  deleted admission
"RTN","IBTRKR",93,0)
 N DA,FILE,IBDATE,IBTRN,SPECALTY
"RTN","IBTRKR",94,0)
 S IBTRN=$O(^IBT(356,"AD",+IBMVAD,0)) I IBTRN D  Q
"RTN","IBTRKR",95,0)
 .   S SPECALTY=+$P($G(^UTILITY($J,"ATS",+$P(DGPMP,"^"),+$O(^UTILITY($J,"ATS",+$P(DGPMP,"^"),0)))),"^",9)
"RTN","IBTRKR",96,0)
 .   ;  send information bulletin
"RTN","IBTRKR",97,0)
 .   D DELBULL^IBTRKRBD(DFN,IBTRN,DGPMP,SPECALTY)
"RTN","IBTRKR",98,0)
 .   ;  clean up files pointing to 405
"RTN","IBTRKR",99,0)
 .   F FILE=356.9,356.91,356.94 S DA=0 F  S DA=$O(^IBT(FILE,"C",+IBMVAD,DA)) Q:'DA  D DELETE^IBTRKRU(FILE,DA)
"RTN","IBTRKR",100,0)
 .   S IBDATE=0 F  S IBDATE=$O(^IBT(356.93,"AMVD",+IBMVAD,IBDATE)) Q:'IBDATE  S DA=0 F  S DA=$O(^IBT(356.93,"AMVD",+IBMVAD,IBDATE,DA)) Q:'DA  D DELETE^IBTRKRU(356.93,DA)
"RTN","IBTRKR",101,0)
 .   ;  inactivate entry in ct 356
"RTN","IBTRKR",102,0)
 .   D INACTIVE^IBTRKRU(IBTRN)
"RTN","IBTRKR",103,0)
 .   D WRITE("entry inactivated.")
"RTN","IBTRKR",104,0)
 D WRITE("no action taken.")
"RTN","IBTRKR",105,0)
 Q
"RTN","IBTRKR",106,0)
 ;
"RTN","IBTRKR",107,0)
 ;
"RTN","IBTRKR",108,0)
SPECIAL ;  specialty change
"RTN","IBTRKR",109,0)
 ;  deleted movement
"RTN","IBTRKR",110,0)
 I DGPMA="" D WRITE("no action taken.") Q
"RTN","IBTRKR",111,0)
 ;
"RTN","IBTRKR",112,0)
 ;  if specialty change is past 7 days, quit
"RTN","IBTRKR",113,0)
 I +DGPMA<$$FMADD^XLFDT(+DT,-7) D WRITE("no action taken.") Q
"RTN","IBTRKR",114,0)
 ;
"RTN","IBTRKR",115,0)
 N IBDT,IBTSA,IBTSP,IBTRC,IBTRN,IBTRV
"RTN","IBTRKR",116,0)
 ;  treating specialty after
"RTN","IBTRKR",117,0)
 S IBTSA=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+$P(DGPMA,"^",9),0)),"^",2),0)),"^",3)
"RTN","IBTRKR",118,0)
 ;
"RTN","IBTRKR",119,0)
 ;  treating specialty before
"RTN","IBTRKR",120,0)
 I DGPMP'="" S IBTSP=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+$P(DGPMP,"^",9),0)),"^",2),0)),"^",3)
"RTN","IBTRKR",121,0)
 ;
"RTN","IBTRKR",122,0)
 I DGPMP="" D
"RTN","IBTRKR",123,0)
 .   S IBDT=9999999.9999999-$P(DGPMA,"^")
"RTN","IBTRKR",124,0)
 .   S IBTSP=$P($G(^DIC(45.7,+$O(^(+$O(^DGPM("ATS",+DFN,+IBMVAD,+IBDT)),0)),0)),"^",2)
"RTN","IBTRKR",125,0)
 .   S IBTSP=$P($G(^DIC(42.4,+IBTSP,0)),"^",3)
"RTN","IBTRKR",126,0)
 ;
"RTN","IBTRKR",127,0)
 ;  no change in major bed section
"RTN","IBTRKR",128,0)
 I IBTSA=IBTSP D WRITE("no action taken.") Q
"RTN","IBTRKR",129,0)
 ;
"RTN","IBTRKR",130,0)
 S IBTRN=$O(^IBT(356,"AD",+IBMVAD,0))
"RTN","IBTRKR",131,0)
 ;
"RTN","IBTRKR",132,0)
 ;  tracked as hospital review
"RTN","IBTRKR",133,0)
 I $O(^IBT(356.1,"C",+IBTRN,0)) D
"RTN","IBTRKR",134,0)
 .   I $$ALREADY(356.1,+DGPMA) Q
"RTN","IBTRKR",135,0)
 .   D PRE^IBTUTL2($E(+DGPMA,1,7),IBTRN,30)
"RTN","IBTRKR",136,0)
 .   I $G(IBTRV) D COMMENT^IBTRKRU(356.1,+IBTRV)
"RTN","IBTRKR",137,0)
 ;
"RTN","IBTRKR",138,0)
 ;  tracked as insurance review
"RTN","IBTRKR",139,0)
 I $O(^IBT(356.2,"C",+IBTRN,0)) D
"RTN","IBTRKR",140,0)
 .   I $$ALREADY(356.2,+DGPMA) Q
"RTN","IBTRKR",141,0)
 .   I $P($G(^IBT(356,+IBTRN,0)),"^",24) D COM^IBTUTL3($E(+DGPMA,1,12),IBTRN,30)
"RTN","IBTRKR",142,0)
 .   I $G(IBTRC) D COMMENT^IBTRKRU(356.2,+IBTRC)
"RTN","IBTRKR",143,0)
 ;
"RTN","IBTRKR",144,0)
 D WRITE("completed.")
"RTN","IBTRKR",145,0)
 Q
"RTN","IBTRKR",146,0)
 ;
"RTN","IBTRKR",147,0)
 ;
"RTN","IBTRKR",148,0)
ALREADY(FILE,DATE) ; -- see if already is review for date
"RTN","IBTRKR",149,0)
 N X,Y,IBX
"RTN","IBTRKR",150,0)
 S IBX=0
"RTN","IBTRKR",151,0)
 S X=$P(DATE,".")+.25
"RTN","IBTRKR",152,0)
 S Y=$O(^IBT(FILE,"ATIDT",+IBTRN,-X)) S Y=-Y I Y,$P(Y,".")=$P(DATE,".") S IBX=1
"RTN","IBTRKR",153,0)
 Q IBX
"RTN","IBTRKR",154,0)
 ;
"RTN","IBTRKR",155,0)
 ;
"RTN","IBTRKR",156,0)
NIGHTLY ; -- nightly job for claims tracking, called by IBAMTC
"RTN","IBTRKR",157,0)
 ;
"RTN","IBTRKR",158,0)
 D PURG^IBRFIHL1  ; purge RFAI file (#368) - IB*2.0*547
"RTN","IBTRKR",159,0)
 D PURGWL^IBRFIWLA  ; purge Out of Date WLs of RFAI file (#368) - IB*2.0*547
"RTN","IBTRKR",160,0)
 D UPDATE^IBTRKR1 ; pdate claims tracking site parameters (random sampler)
"RTN","IBTRKR",161,0)
 D ^IBTRKR2 ;       add scheduled admissions to tracking
"RTN","IBTRKR",162,0)
 D ^IBTRKR3 ;       add rx refill to outpatient encounters
"RTN","IBTRKR",163,0)
 D ^IBTRKR4 ;       add outpatient encounters to tracking
"RTN","IBTRKR",164,0)
 D ^IBTRKR5 ;       add outpatient prosthetics item to tracking
"RTN","IBTRKR",165,0)
 Q
"RTN","IBTUBO")
0^46^B47033794^B35610159
"RTN","IBTUBO",1,0)
IBTUBO ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,235,248,155,516,547**;21-MAR-94;Build 119
"RTN","IBTUBO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO",4,0)
 ;
"RTN","IBTUBO",5,0)
% ; - Entry point for manual option.
"RTN","IBTUBO",6,0)
 N IBBDT,IBCOMP,IBDET,IBEDT,IBOPT,IBPRT,IBTIMON,IBQUIT,IBSEL,IBSBD
"RTN","IBTUBO",7,0)
 S (IBQUIT,IBSBD)=0 D:'$D(DT) DT^DICRW
"RTN","IBTUBO",8,0)
 W !!,"Re-Generate Unbilled Amounts Report",!
"RTN","IBTUBO",9,0)
 ;
"RTN","IBTUBO",10,0)
 ; - Ask to re-compile Unbilled Amounts data.
"RTN","IBTUBO",11,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBTUBO",12,0)
 S DIR("A")="Do you want to store Unbilled Amounts figures"
"RTN","IBTUBO",13,0)
 S DIR("?",1)="Enter 'YES' if you wish to store the Unbilled Amounts summary"
"RTN","IBTUBO",14,0)
 S DIR("?",2)="figures in your system for a specific month/year in the past."
"RTN","IBTUBO",15,0)
 S DIR("?",3)="Once stored, these figures will be available for inquiry through"
"RTN","IBTUBO",16,0)
 S DIR("?",4)="the View Unbilled Amounts option [IBT VIEW UNBILLED AMOUNTS]."
"RTN","IBTUBO",17,0)
 S DIR("?",5)="These summary figures are normally calculated and stored"
"RTN","IBTUBO",18,0)
 S DIR("?",6)="automatically by the system at the beginning of each month for"
"RTN","IBTUBO",19,0)
 S DIR("?",7)="the previous month."
"RTN","IBTUBO",20,0)
 S DIR("?",8)=" "
"RTN","IBTUBO",21,0)
 S DIR("?",9)="If you enter 'NO', the Unbilled Amounts summary figures will"
"RTN","IBTUBO",22,0)
 S DIR("?",10)="NOT be stored in your system, and the report may be run for"
"RTN","IBTUBO",23,0)
 S DIR("?")="any date range."
"RTN","IBTUBO",24,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBCOMP=Y
"RTN","IBTUBO",25,0)
 ;
"RTN","IBTUBO",26,0)
 ; IB*2.0*516 - Added ability to sort by Division
"RTN","IBTUBO",27,0)
 ;
"RTN","IBTUBO",28,0)
 K ^TMP($J,"IBTUB"),^TMP($J,"IBTUB-DIV")
"RTN","IBTUBO",29,0)
 I IBCOMP G RDATE
"RTN","IBTUBO",30,0)
 ;
"RTN","IBTUBO",31,0)
 ;IB*2.0*547/TAZ - Add prompt to search by division. If NO bypass all division selection.
"RTN","IBTUBO",32,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBTUBO",33,0)
 S DIR("A")="Search by Division?"
"RTN","IBTUBO",34,0)
 S DIR("?",1)=" This opt allows you to search for all unbilled amounts"
"RTN","IBTUBO",35,0)
 S DIR("?",2)=" or to search for unbilled amounts in only one or more"
"RTN","IBTUBO",36,0)
 S DIR("?",3)=" divisions."
"RTN","IBTUBO",37,0)
 S DIR("?",4)=""
"RTN","IBTUBO",38,0)
 S DIR("?",5)="Choose from:"
"RTN","IBTUBO",39,0)
 S DIR("?",6)="      N  NO"
"RTN","IBTUBO",40,0)
 S DIR("?")="      Y  YES"
"RTN","IBTUBO",41,0)
 D ^DIR K DIR G:$D(DIRUT) END
"RTN","IBTUBO",42,0)
 S IBSBD=Y I 'IBSBD G DIVX
"RTN","IBTUBO",43,0)
 ;
"RTN","IBTUBO",44,0)
DIV ; division
"RTN","IBTUBO",45,0)
 W !!
"RTN","IBTUBO",46,0)
 S DIR(0)="SA^A:All Divisions;S:Selected Divisions"
"RTN","IBTUBO",47,0)
 S DIR("A")="Include All Divisions or Selected Divisions? "
"RTN","IBTUBO",48,0)
 S DIR("B")="All"
"RTN","IBTUBO",49,0)
 D ^DIR K DIR
"RTN","IBTUBO",50,0)
 I $D(DIROUT)!$D(DIRUT) Q  ;Timeout or User "^"
"RTN","IBTUBO",51,0)
 I Y="A" G DIVX
"RTN","IBTUBO",52,0)
 ;
"RTN","IBTUBO",53,0)
 W !
"RTN","IBTUBO",54,0)
 F  D  I IBQUIT S IBQUIT=IBQUIT-1 Q
"RTN","IBTUBO",55,0)
 . S DIC=40.8,DIC(0)="AEMQ",DIC("A")="   Select Division: "
"RTN","IBTUBO",56,0)
 . I $O(^TMP($J,"IBTUB-DIV","")) S DIC("A")="   Select Another Division: "
"RTN","IBTUBO",57,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBTUBO",58,0)
 . I X="^^" S IBQUIT=2 Q       ; user entered ^^
"RTN","IBTUBO",59,0)
 . I +Y'>0 S IBQUIT=1 Q        ; user is done
"RTN","IBTUBO",60,0)
 . S ^TMP($J,"IBTUB-DIV",+Y)=$P(Y,U,2)
"RTN","IBTUBO",61,0)
 . Q
"RTN","IBTUBO",62,0)
 ;
"RTN","IBTUBO",63,0)
 I IBQUIT G END  ;User "^" out of the selection
"RTN","IBTUBO",64,0)
 ;
"RTN","IBTUBO",65,0)
 I '$O(^TMP($J,"IBTUB-DIV","")) D  G DIV
"RTN","IBTUBO",66,0)
 . W *7,!!?3,"No divisions have been selected.  Please try again."
"RTN","IBTUBO",67,0)
 . Q
"RTN","IBTUBO",68,0)
 ;
"RTN","IBTUBO",69,0)
DIVX ; Exit Division selection.
"RTN","IBTUBO",70,0)
 ;
"RTN","IBTUBO",71,0)
 ; - Select date(s) to build report.
"RTN","IBTUBO",72,0)
 W ! D DT1^IBTUBOU G:IBBDT="^" END
"RTN","IBTUBO",73,0)
 ;
"RTN","IBTUBO",74,0)
 ; - Select report(s).
"RTN","IBTUBO",75,0)
 S IBPRT="Choose report type(s) to print:"
"RTN","IBTUBO",76,0)
 S IBOPT(1)="INPATIENT UNBILLED"
"RTN","IBTUBO",77,0)
 S IBOPT(2)="OUTPATIENT UNBILLED"
"RTN","IBTUBO",78,0)
 S IBOPT(3)="PRESCRIPTION UNBILLED"
"RTN","IBTUBO",79,0)
 S IBOPT(4)="ALL OF THE ABOVE"
"RTN","IBTUBO",80,0)
 S IBSEL=$$MLTP^IBJD(IBPRT,.IBOPT,1) I 'IBSEL G END
"RTN","IBTUBO",81,0)
 S $E(IBSEL,$L(IBSEL))=""
"RTN","IBTUBO",82,0)
 ;
"RTN","IBTUBO",83,0)
RDATE ; - Select re-compile date, if necessary.
"RTN","IBTUBO",84,0)
 I IBCOMP D  G END:IBTIMON="^",DET
"RTN","IBTUBO",85,0)
 . W ! D DT2("Unbilled Amounts") Q:IBTIMON="^"
"RTN","IBTUBO",86,0)
 . W !!,"NOTE: Just a reminder that by entering the above month/year this"
"RTN","IBTUBO",87,0)
 . W !,"      report will re-calculate and update the Unbilled Amounts"
"RTN","IBTUBO",88,0)
 . W !,"      data on file in your system.",*7
"RTN","IBTUBO",89,0)
 . ;
"RTN","IBTUBO",90,0)
 . ; - Initialize variables
"RTN","IBTUBO",91,0)
 . I IBTIMON<3030900 N X S X=$$M2^IBJDE(IBTIMON,11,11) D 
"RTN","IBTUBO",92,0)
 .. S IBBDT=+X,IBEDT=$P(X,U,2)+.9,IBSEL="1,2,3"
"RTN","IBTUBO",93,0)
 . I IBTIMON'<3030900 S IBBDT=$$M3^IBJDE($$LDATE^IBJDE(IBTIMON)+1),IBEDT=$$LDATE^IBJDE(IBTIMON)+.9,IBSEL="1,2,3"
"RTN","IBTUBO",94,0)
 . D MSG W !
"RTN","IBTUBO",95,0)
 ;
"RTN","IBTUBO",96,0)
 S IBTIMON=IBEDT\100*100
"RTN","IBTUBO",97,0)
 ;
"RTN","IBTUBO",98,0)
DET ; - Ask to print detail report.
"RTN","IBTUBO",99,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBTUBO",100,0)
 S DIR("A")="Print detail report with the Unbilled Amounts summary"
"RTN","IBTUBO",101,0)
 S DIR("?",1)="Answer YES if you want a detailed listing of the patients"
"RTN","IBTUBO",102,0)
 S DIR("?",2)="and events that are unbilled. Answer NO if you just want"
"RTN","IBTUBO",103,0)
 S DIR("?")="the summary, or '^' to quit this option."
"RTN","IBTUBO",104,0)
 D ^DIR K DIR G:$D(DIRUT) END S IBDET=Y G:'IBDET QUE
"RTN","IBTUBO",105,0)
 ;
"RTN","IBTUBO",106,0)
 ; Ask to include REQUEST MRA Status
"RTN","IBTUBO",107,0)
 S DIR(0)="YA",DIR("A")="Do you want to include MRA claims?: ",DIR("B")="NO" W ! D ^DIR K DIR G:$D(DIRUT) END
"RTN","IBTUBO",108,0)
 S IBINMRA=+Y
"RTN","IBTUBO",109,0)
 ;
"RTN","IBTUBO",110,0)
 ;IB*2.0*547/TAZ - Add prompt to sort by Patient or Divsion if Division Search was selected.
"RTN","IBTUBO",111,0)
 I $G(IBSBD) D  G:$D(DIRUT) END
"RTN","IBTUBO",112,0)
 . S DIR("A")="Sort by: ",DIR("B")="Patient Name" W !
"RTN","IBTUBO",113,0)
 . S DIR(0)="SA^N:PATIENT NAME;D:DIVISION^S:X="""" X=""N"""
"RTN","IBTUBO",114,0)
 . S DIR("?",1)=" This determines whether the unbilled amounts are displayed"
"RTN","IBTUBO",115,0)
 . S DIR("?",2)=" in alphabetical order of patient name or in alphabetical "
"RTN","IBTUBO",116,0)
 . S DIR("?")=" order of patient name within a division."
"RTN","IBTUBO",117,0)
 . D ^DIR K DIR
"RTN","IBTUBO",118,0)
 . S IBSBD=Y="D" ;IBSBD=0 - Sort by Patient Name, IBSBD=1, Sort by Patient Name within Division.
"RTN","IBTUBO",119,0)
 ;
"RTN","IBTUBO",120,0)
 ; - Select device to print.
"RTN","IBTUBO",121,0)
 W !!,"This report takes a while to run, so you should queue it to run"
"RTN","IBTUBO",122,0)
 W !,"after normal business hours."
"RTN","IBTUBO",123,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBTUBO",124,0)
 S %ZIS="QM" D ^%ZIS G END:POP,QUE:$D(IO("Q"))
"RTN","IBTUBO",125,0)
 ;
"RTN","IBTUBO",126,0)
 U IO G STR
"RTN","IBTUBO",127,0)
 ;
"RTN","IBTUBO",128,0)
QUE ; - Queue report/summary, if necessary.
"RTN","IBTUBO",129,0)
 W ! I 'IBDET S ZTIO=""
"RTN","IBTUBO",130,0)
 S ZTRTN="IBTUBOA",ZTSAVE("IB*")=""
"RTN","IBTUBO",131,0)
 S ZTDESC="IB - Unbilled Amounts Report"
"RTN","IBTUBO",132,0)
 D ^%ZTLOAD K IO("Q"),ZTSK
"RTN","IBTUBO",133,0)
 D HOME^%ZIS G END
"RTN","IBTUBO",134,0)
 ;
"RTN","IBTUBO",135,0)
AUTO ; - Entry point for scheduled option.
"RTN","IBTUBO",136,0)
 Q  ;;**NO LONGER USED**
"RTN","IBTUBO",137,0)
 ;
"RTN","IBTUBO",138,0)
DQ ; - Entry point for DM extract.
"RTN","IBTUBO",139,0)
 ; - If AUTO PRINT UNBILLED LIST=yes and default report printer then
"RTN","IBTUBO",140,0)
 ;   automatically requeue to device.
"RTN","IBTUBO",141,0)
 I $P(^IBE(350.9,1,6),U,24) D  G END:'$G(IBXTRACT)
"RTN","IBTUBO",142,0)
 . N X S X=$O(^IBE(353,"B","IB REPORTS",0))
"RTN","IBTUBO",143,0)
 . S ZTIO=$P($G(^IBE(353,+X,0)),U,2) Q:ZTIO=""
"RTN","IBTUBO",144,0)
 . S IBDET=1,IBXTRACT=0,ZTDTH=$H,ZTRTN="IBTUBOA",ZTSAVE("IB*")=""
"RTN","IBTUBO",145,0)
 . S ZTDESC="IB - Unbilled Amounts Report" D ^%ZTLOAD
"RTN","IBTUBO",146,0)
 . S IBDET=0,IBXTRACT=1
"RTN","IBTUBO",147,0)
 . K ZTDESC,ZTDTH,ZTRTN,ZTSAVE,ZTSK
"RTN","IBTUBO",148,0)
 ;
"RTN","IBTUBO",149,0)
STR D ^IBTUBOA ; Start report.
"RTN","IBTUBO",150,0)
 ;
"RTN","IBTUBO",151,0)
END K DIRUT Q
"RTN","IBTUBO",152,0)
 ;
"RTN","IBTUBO",153,0)
MSG ; - Compile message.
"RTN","IBTUBO",154,0)
 W !!,"NOTE: After this report is run, the Unbilled Amounts totals for"
"RTN","IBTUBO",155,0)
 W !?6,"the month of "_$$DAT2^IBOUTL(IBTIMON)_" will be updated."
"RTN","IBTUBO",156,0)
 Q
"RTN","IBTUBO",157,0)
 ;
"RTN","IBTUBO",158,0)
DT2(STR) ; - Select re-compile date (returns variable IBTIMON).
"RTN","IBTUBO",159,0)
 ; Input: STR - String that describe the type of data that will be 
"RTN","IBTUBO",160,0)
 ;        re-compiled: "Unbilled Amounts", "Average Bill Amounts", etc...
"RTN","IBTUBO",161,0)
 ;
"RTN","IBTUBO",162,0)
 ; This code is very the same code as is in DT2^IBTUBOU... that is
"RTN","IBTUBO",163,0)
 ; a utility routine, so code was copied and altered to accommodate
"RTN","IBTUBO",164,0)
 ; EOAM changes. 
"RTN","IBTUBO",165,0)
 N DIRUT,DT0,DT1,DT2,Y
"RTN","IBTUBO",166,0)
 ; - AUG 1993 is the first month on file with Unbilled Amounts data
"RTN","IBTUBO",167,0)
 S DT0=2930800,DT1=$$DAT2^IBOUTL(DT0)
"RTN","IBTUBO",168,0)
 I $E(DT,6,7)'>$E($$LDATE^IBJDE(DT),6,7) S DT2=DT
"RTN","IBTUBO",169,0)
 I $E(DT,6,7)>$E($$LDATE^IBJDE(DT),6,7) S DT2=DT+100 I $E(DT2,4,5)=13 S DT2=DT+8900
"RTN","IBTUBO",170,0)
 S DT2=$$M1^IBJDE(DT2,1),DIR("B")=$$DAT2^IBOUTL(DT2)
"RTN","IBTUBO",171,0)
 S DIR(0)="DA^"_$E(DT0,1,5)_"00:"_DT2_":AE^K:$E(Y,6,7)'=""00"" X"
"RTN","IBTUBO",172,0)
 S DIR("A")="Re-compile "_$G(STR)_" through MONTH/YEAR: "
"RTN","IBTUBO",173,0)
 S DIR("?",1)="Enter a past month/year (ex. Oct 2000).",DIR("?",2)=""
"RTN","IBTUBO",174,0)
 S DIR("?",3)="NOTE: The earliest month/year that can be entered is "_DT1_", and"
"RTN","IBTUBO",175,0)
 S DIR("?")="      it is NOT possible to enter the current or a future month/year."
"RTN","IBTUBO",176,0)
 D ^DIR K DIR I $D(DIRUT) S IBTIMON="^" G DT2Q
"RTN","IBTUBO",177,0)
 I $E(Y,6,7)'="00"!($E(Y,4,7)="0000") W "  ??" G DT2
"RTN","IBTUBO",178,0)
 S IBTIMON=Y
"RTN","IBTUBO",179,0)
 ;
"RTN","IBTUBO",180,0)
DT2Q Q
"RTN","IBTUBO1")
0^47^B65321637^B62446159
"RTN","IBTUBO1",1,0)
IBTUBO1 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,247,155,277,339,399,516,547**;21-MAR-94;Build 119
"RTN","IBTUBO1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO1",4,0)
 ;
"RTN","IBTUBO1",5,0)
OPT(IBOE,IBQUERY) ; - Has the outpatient encounter been billed?
"RTN","IBTUBO1",6,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBTUBO1",7,0)
 ;               (NOTE: this value may be null)
"RTN","IBTUBO1",8,0)
 ;          IBQUERY (Passed by reference)=flag that is incremented when
"RTN","IBTUBO1",9,0)
 ;                  the Scheduling query API is invoked
"RTN","IBTUBO1",10,0)
 ;  *Pre-set variables: DFN=patient IEN, IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO1",11,0)
 ;                      IBEDT=End of reporting period date.
"RTN","IBTUBO1",12,0)
 ;                      IBX=ien of CLAIMS TRACKING entry file 356
"RTN","IBTUBO1",13,0)
 ;
"RTN","IBTUBO1",14,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!'$G(IBX) G OPTQ
"RTN","IBTUBO1",15,0)
 N IBCN,IBCPT,IBCPTSUM,IBCT,IBDATA,IBDAY,IBDIV,IBFL,IBNAME
"RTN","IBTUBO1",16,0)
 N IBQUIT,IBNCF,IBTCHRG,IBXX,IBYD,IBYY,IBZ,IBMRA
"RTN","IBTUBO1",17,0)
 ;
"RTN","IBTUBO1",18,0)
 ; - Check to be sure the encounter is billable.
"RTN","IBTUBO1",19,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) G OPTQ ;  Became inpatient same day.
"RTN","IBTUBO1",20,0)
 I $G(IBOE),$$ENCL^IBAMTS2(IBOE)["1" G OPTQ ; "ao^ir^sc^swa^mst^hnc^cv^shad" encounter.
"RTN","IBTUBO1",21,0)
 S IBDAY=$E(IBDT,1,7),IBNAME=$P($G(^DPT(DFN,0)),U),IBQUIT="",IBNCF=0
"RTN","IBTUBO1",22,0)
 ;
"RTN","IBTUBO1",23,0)
 ; - Determine the encounter division.
"RTN","IBTUBO1",24,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBTUBO1",25,0)
 ; IB*2.0*516 - Added ability to sort by Division.
"RTN","IBTUBO1",26,0)
 I $D(^TMP($J,"IBTUB-DIV")),'$D(^TMP($J,"IBTUB-DIV",IBDIV)) G OPTQ ; Not a selected Division
"RTN","IBTUBO1",27,0)
 ;
"RTN","IBTUBO1",28,0)
 ; - If no encounter, see if add/edits or registrations are not billable.
"RTN","IBTUBO1",29,0)
 I '$G(IBOE) D NOOE G:IBQUIT OPTQ
"RTN","IBTUBO1",30,0)
 ;
"RTN","IBTUBO1",31,0)
 ; - If encounter was dated prior to Reasonable Charges (9/1/99) and
"RTN","IBTUBO1",32,0)
 ;   the claim was not authorized before end of reporting period, add
"RTN","IBTUBO1",33,0)
 ;   encounter Tort Rate to Unbilled Outpatient Amount
"RTN","IBTUBO1",34,0)
 I IBDAY<2990901 D PRERC,SETUB:'IBQUIT G OPTQ
"RTN","IBTUBO1",35,0)
 I '$G(IBOE) G OPTQ ; If still no encounter, quit.
"RTN","IBTUBO1",36,0)
 ;
"RTN","IBTUBO1",37,0)
 ; - If encounter was made after start of Reasonable Charges (9/1/99)
"RTN","IBTUBO1",38,0)
 ;   and any of the encounter's procedure codes have no corresponding
"RTN","IBTUBO1",39,0)
 ;   inst. or prof. claims that were not authorized before end of the
"RTN","IBTUBO1",40,0)
 ;   reporting period, add the charges for the procedures to the
"RTN","IBTUBO1",41,0)
 ;   Unbilled Outpatient Amount.
"RTN","IBTUBO1",42,0)
 ;
"RTN","IBTUBO1",43,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBTUBO1",44,0)
 D GETCPT^SDOE(IBOE,"IBYY") G:'$G(IBYY) OPTQ ; Check CPT qty.
"RTN","IBTUBO1",45,0)
 ;
"RTN","IBTUBO1",46,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBTUBO1",47,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",48,0)
 . ;
"RTN","IBTUBO1",49,0)
 . ; - Get procedure pointer and code.
"RTN","IBTUBO1",50,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBTUBO1",51,0)
 . ;
"RTN","IBTUBO1",52,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBTUBO1",53,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBTUBO1",54,0)
 . ;
"RTN","IBTUBO1",55,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBTUBO1",56,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBTUBO1",57,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBTUBO1",58,0)
 . ;
"RTN","IBTUBO1",59,0)
 . ; - Eliminate components without a charge.
"RTN","IBTUBO1",60,0)
 . S IBCPTSUM(IBZ)=+$G(IBCPT(IBZ,1))+$G(IBCPT(IBZ,2))
"RTN","IBTUBO1",61,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBTUBO1",62,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBTUBO1",63,0)
 . Q
"RTN","IBTUBO1",64,0)
 ;
"RTN","IBTUBO1",65,0)
 I '$D(IBCPT) G OPTQ ; Quit if no billable procedures remain.
"RTN","IBTUBO1",66,0)
 ;
"RTN","IBTUBO1",67,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBTUBO1",68,0)
 ;   from the array those procedures that have been billed.
"RTN","IBTUBO1",69,0)
 S IBXX=0
"RTN","IBTUBO1",70,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",71,0)
 . ;
"RTN","IBTUBO1",72,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",73,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBTUBO1",74,0)
 . I $P(IBDATA,U,2)=2 S IBMRA(IBXX)=IBDATA ; MRA request
"RTN","IBTUBO1",75,0)
 . S IBNCF=IBNCF+1
"RTN","IBTUBO1",76,0)
 . ;
"RTN","IBTUBO1",77,0)
 . ; If Compile/Store & Not authorized/MRA requested before reporting period - Quit.
"RTN","IBTUBO1",78,0)
 . I $G(IBCOMP),$S('$G(IBMRA(IBXX)):$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO1",79,0)
 . ;
"RTN","IBTUBO1",80,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBTUBO1",81,0)
 . ;   all procedures billed on the claim.
"RTN","IBTUBO1",82,0)
 . S IBYY=0
"RTN","IBTUBO1",83,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBTUBO1",84,0)
 . . ;
"RTN","IBTUBO1",85,0)
 . . ; - Get the procedure code and charge type for the revenue code.
"RTN","IBTUBO1",86,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBTUBO1",87,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBTUBO1",88,0)
 . . S IBTCHRG=$P(IBYD,U,4)
"RTN","IBTUBO1",89,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBTUBO1",90,0)
 . . I $G(IBMRA(IBXX))'="" S:$D(IBCPT(IBZ)) IBCPT("MRA",IBZ,IBCT)=1 Q
"RTN","IBTUBO1",91,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBTUBO1",92,0)
 . . I $G(IBTCHRG)'<$G(IBCPTSUM(IBZ)) K IBCPT(IBZ) Q
"RTN","IBTUBO1",93,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT) Q
"RTN","IBTUBO1",94,0)
 . . K IBCPT(IBZ)
"RTN","IBTUBO1",95,0)
 . . Q
"RTN","IBTUBO1",96,0)
 . Q
"RTN","IBTUBO1",97,0)
 ;
"RTN","IBTUBO1",98,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBTUBO1",99,0)
 I '$D(IBCPT) G OPTQ
"RTN","IBTUBO1",100,0)
 ;
"RTN","IBTUBO1",101,0)
 ; If the IBSBD flag is not set, then reset the Division to be
"RTN","IBTUBO1",102,0)
 ; 999999.  This data will still be included, but the report
"RTN","IBTUBO1",103,0)
 ; will not be sorted by Division.
"RTN","IBTUBO1",104,0)
 ;
"RTN","IBTUBO1",105,0)
 I '$G(IBSBD) S IBDIV=999999
"RTN","IBTUBO1",106,0)
 ;
"RTN","IBTUBO1",107,0)
 ; - The encounter has unbilled procedure codes. Increment the counters
"RTN","IBTUBO1",108,0)
 ;   as per the extract specification.
"RTN","IBTUBO1",109,0)
 ;
"RTN","IBTUBO1",110,0)
 ; - Count the encounter (element 37N).
"RTN","IBTUBO1",111,0)
 S IBMRA=$S($D(IBCPT("MRA")):1,1:0)
"RTN","IBTUBO1",112,0)
 I 'IBMRA D
"RTN","IBTUBO1",113,0)
 . S IBUNB(IBDIV,"ENCNTRS")=$G(IBUNB(IBDIV,"ENCNTRS"))+1
"RTN","IBTUBO1",114,0)
 . S IBUNB("ENCNTRS")=$G(IBUNB("ENCNTRS"))+1
"RTN","IBTUBO1",115,0)
 I $G(IBXTRACT) S IB(14)=IB(14)+1
"RTN","IBTUBO1",116,0)
 ;
"RTN","IBTUBO1",117,0)
 ; - Look at all the unbilled procedures.
"RTN","IBTUBO1",118,0)
 S IBZ=0 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBTUBO1",119,0)
 . ;
"RTN","IBTUBO1",120,0)
 . S IBMRA=$S($D(IBCPT("MRA",IBZ)):1,1:0)
"RTN","IBTUBO1",121,0)
 . ; - Count the procedure (element 37M).
"RTN","IBTUBO1",122,0)
 . I $G(IBXTRACT) S IB(13)=IB(13)+1
"RTN","IBTUBO1",123,0)
 . ;
"RTN","IBTUBO1",124,0)
 . ; - Count the institutional component (element 37I) and its
"RTN","IBTUBO1",125,0)
 . ;   corresponding charge amount (element 37J).
"RTN","IBTUBO1",126,0)
 . I $G(IBCPT(IBZ,1)) D
"RTN","IBTUBO1",127,0)
 . . I IBMRA D
"RTN","IBTUBO1",128,0)
 . . . S IBUNB(IBDIV,"CPTMS-I-MRA")=$G(IBUNB(IBDIV,"CPTMS-I-MRA"))+1
"RTN","IBTUBO1",129,0)
 . . . S IBUNB("CPTMS-MRA")=$G(IBUNB("CPTMS-MRA"))+1
"RTN","IBTUBO1",130,0)
 . . . S IBUNB(IBDIV,"UNBILOP-MRA")=$G(IBUNB(IBDIV,"UNBILOP-MRA"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",131,0)
 . . . S IBUNB("UNBILOP-MRA")=$G(IBUNB("UNBILOP-MRA"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",132,0)
 . . . Q
"RTN","IBTUBO1",133,0)
 . . E  D
"RTN","IBTUBO1",134,0)
 . . . S IBUNB(IBDIV,"CPTMS-I")=$G(IBUNB(IBDIV,"CPTMS-I"))+1
"RTN","IBTUBO1",135,0)
 . . . S IBUNB("CPTMS")=$G(IBUNB("CPTMS"))+1
"RTN","IBTUBO1",136,0)
 . . . S IBUNB(IBDIV,"UNBILOP")=$G(IBUNB(IBDIV,"UNBILOP"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",137,0)
 . . . S IBUNB("UNBILOP")=$G(IBUNB("UNBILOP"))+IBCPT(IBZ,1)
"RTN","IBTUBO1",138,0)
 . . . Q
"RTN","IBTUBO1",139,0)
 . . I $G(IBXTRACT) S IB(9)=IB(9)+1,IB(10)=IB(10)+IBCPT(IBZ,1)
"RTN","IBTUBO1",140,0)
 . . Q
"RTN","IBTUBO1",141,0)
 . ;
"RTN","IBTUBO1",142,0)
 . ; - Count the professional component (element 37K) and its
"RTN","IBTUBO1",143,0)
 . ;   corresponding charge amount (element 37L).
"RTN","IBTUBO1",144,0)
 . I $G(IBCPT(IBZ,2)) D
"RTN","IBTUBO1",145,0)
 . . I IBMRA D
"RTN","IBTUBO1",146,0)
 . . . S IBUNB(IBDIV,"CPTMS-P-MRA")=$G(IBUNB(IBDIV,"CPTMS-P-MRA"))+1
"RTN","IBTUBO1",147,0)
 . . . S IBUNB("CPTMS-MRA")=$G(IBUNB("CPTMS-MRA"))+1
"RTN","IBTUBO1",148,0)
 . . . S IBUNB(IBDIV,"UNBILOP-MRA")=$G(IBUNB(IBDIV,"UNBILOP-MRA"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",149,0)
 . . . S IBUNB("UNBILOP-MRA")=$G(IBUNB("UNBILOP-MRA"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",150,0)
 . . . Q
"RTN","IBTUBO1",151,0)
 . . E  D
"RTN","IBTUBO1",152,0)
 . . . S IBUNB(IBDIV,"CPTMS-P")=$G(IBUNB(IBDIV,"CPTMS-P"))+1
"RTN","IBTUBO1",153,0)
 . . . S IBUNB("CPTMS")=$G(IBUNB("CPTMS"))+1
"RTN","IBTUBO1",154,0)
 . . . S IBUNB(IBDIV,"UNBILOP")=$G(IBUNB(IBDIV,"UNBILOP"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",155,0)
 . . . S IBUNB("UNBILOP")=$G(IBUNB("UNBILOP"))+IBCPT(IBZ,2)
"RTN","IBTUBO1",156,0)
 . . . Q
"RTN","IBTUBO1",157,0)
 . . I $G(IBXTRACT) S IB(11)=IB(11)+1,IB(12)=IB(12)+IBCPT(IBZ,2)
"RTN","IBTUBO1",158,0)
 . . Q
"RTN","IBTUBO1",159,0)
 . Q
"RTN","IBTUBO1",160,0)
 ;
"RTN","IBTUBO1",161,0)
 D SETUB
"RTN","IBTUBO1",162,0)
 ;
"RTN","IBTUBO1",163,0)
OPTQ Q
"RTN","IBTUBO1",164,0)
 ;
"RTN","IBTUBO1",165,0)
PRERC ; - Determine if a pre-9/1/99 visit has been billed.
"RTN","IBTUBO1",166,0)
 ;   Output: IBQUIT will be set to 1 if the visit has been billed.
"RTN","IBTUBO1",167,0)
 ;   *Pre-set variables DFN,IBDAY,IBDET,IBNAME,IBNCF,IBQUIT,IBRT,IBEDT
"RTN","IBTUBO1",168,0)
 ;    and IB/IBUNB arrays required.
"RTN","IBTUBO1",169,0)
 ; NO MRA Extract code needed for pre-RC processes
"RTN","IBTUBO1",170,0)
 ;
"RTN","IBTUBO1",171,0)
 S IBDIV=0
"RTN","IBTUBO1",172,0)
 F  S IBDIV=$O(^TMP($J,"IBTUB",IBDIV)) Q:'IBDIV  D  I IBQUIT Q
"RTN","IBTUBO1",173,0)
 . I $D(^TMP($J,"IBTUB",IBDIV,"OPT",IBNAME_"@@"_DFN,IBDAY)) S IBQUIT=1
"RTN","IBTUBO1",174,0)
 I IBQUIT G PRCQ
"RTN","IBTUBO1",175,0)
 ;
"RTN","IBTUBO1",176,0)
 ; - Check all outpatient claims on event date.
"RTN","IBTUBO1",177,0)
 N IBXX S IBXX=0
"RTN","IBTUBO1",178,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D  Q:IBQUIT
"RTN","IBTUBO1",179,0)
 . ;
"RTN","IBTUBO1",180,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",181,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""  S IBNCF=IBNCF+1
"RTN","IBTUBO1",182,0)
 . I IBDIV="" S IBDIV=$$GET1^DIQ(399,IBXX_",",.22,"I")
"RTN","IBTUBO1",183,0)
 . ;
"RTN","IBTUBO1",184,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO1",185,0)
 . I $G(IBCOMP),$P(IBDATA,U,3)>IBEDT Q
"RTN","IBTUBO1",186,0)
 . ;
"RTN","IBTUBO1",187,0)
 . S IBQUIT=1 ; Episode has been billed-set flag.
"RTN","IBTUBO1",188,0)
 . Q
"RTN","IBTUBO1",189,0)
 ;
"RTN","IBTUBO1",190,0)
 I IBQUIT G PRCQ ; Episode was billed.
"RTN","IBTUBO1",191,0)
 I IBDIV="" S IBDIV=999999
"RTN","IBTUBO1",192,0)
 ;
"RTN","IBTUBO1",193,0)
 ; - The episode was not billed; determine the tort rate for a visit
"RTN","IBTUBO1",194,0)
 ;   and increment the number and amount of unbilled pre-9/1/99 visits.
"RTN","IBTUBO1",195,0)
 S IBXX=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"OUTPATIENT VISIT DATE")
"RTN","IBTUBO1",196,0)
 S IBUNB(IBDIV,"UNBILOP")=$G(IBUNB(IBDIV,"UNBILOP"))+IBXX
"RTN","IBTUBO1",197,0)
 S IBUNB("UNBILOP")=$G(IBUNB("UNBILOP"))+IBXX
"RTN","IBTUBO1",198,0)
 S IBUNB(IBDIV,"ENCNTRS")=$G(IBUNB(IBDIV,"ENCNTRS"))+1
"RTN","IBTUBO1",199,0)
 S IBUNB("ENCNTRS")=$G(IBUNB("ENCNTRS"))+1
"RTN","IBTUBO1",200,0)
 ;
"RTN","IBTUBO1",201,0)
 I $G(IBXTRACT) S IB(7)=IB(7)+1,IB(8)=IB(8)+IBXX ; For DM extract.
"RTN","IBTUBO1",202,0)
 ;
"RTN","IBTUBO1",203,0)
PRCQ Q
"RTN","IBTUBO1",204,0)
 ;
"RTN","IBTUBO1",205,0)
NOOE ; - If there is no encounter, look for add/edits or registrations.
"RTN","IBTUBO1",206,0)
 ;   Output: IBQUIT will be set to 1 if the visit is non-billable.
"RTN","IBTUBO1",207,0)
 ;   *Pre-set variable IBQUIT required.
"RTN","IBTUBO1",208,0)
 N IBDATA,IBSC,IBSDV,IBXX,IBZERR
"RTN","IBTUBO1",209,0)
 ;
"RTN","IBTUBO1",210,0)
 ; - Check if for a visit at the visit date/time.
"RTN","IBTUBO1",211,0)
 S IBXX=$$EXOE^SDOE(DFN,IBDT,IBDT,"","IBZERR")
"RTN","IBTUBO1",212,0)
 I IBXX D CKENC^IBTUBOU(IBXX,"",.IBQUIT) G NOOEQ
"RTN","IBTUBO1",213,0)
 ;
"RTN","IBTUBO1",214,0)
 ; - Find next add/edit stop code encounter after IBDT.
"RTN","IBTUBO1",215,0)
 D SCAN^IBTUBOU(DFN,IBDT,.IBQUERY)
"RTN","IBTUBO1",216,0)
 ;
"RTN","IBTUBO1",217,0)
NOOEQ Q
"RTN","IBTUBO1",218,0)
 ;
"RTN","IBTUBO1",219,0)
SETUB ; Set array elements for the detail report.
"RTN","IBTUBO1",220,0)
 ; Array element format:
"RTN","IBTUBO1",221,0)
 ; NON-MRA:
"RTN","IBTUBO1",222,0)
 ;  ^TMP($J,"IBTUB",DIVISION,"OPT",NAME@@DFN,DATE,IBX)=bill status^claim type
"RTN","IBTUBO1",223,0)
 ;  ^TMP($J,"IBTUB",DIVISION,"OPT",NAME@@DFN,DATE,IBX,CPT no)=inst rate^prof rate
"RTN","IBTUBO1",224,0)
 ; MRA:
"RTN","IBTUBO1",225,0)
 ;  ^TMP($J,"IBTUB",DIVISION,"OPT_MRA",NAME@@DFN,DATE,IBX,CPT no)=1 if MRA req
"RTN","IBTUBO1",226,0)
 ;
"RTN","IBTUBO1",227,0)
 N IBCTF,IBCPTNM
"RTN","IBTUBO1",228,0)
 I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB",IBDIV,"OPT",IBNAME_"@@"_DFN,IBDAY,IBX)=IBNCF
"RTN","IBTUBO1",229,0)
 I $G(IBINMRA),$O(IBCPT("MRA","")) S ^TMP($J,"IBTUB",IBDIV,"OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX)=1
"RTN","IBTUBO1",230,0)
 G:'IBDET SETUBQ
"RTN","IBTUBO1",231,0)
 I $D(IBCPT) S IBXX=0 F  S IBXX=$O(IBCPT(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",232,0)
 . S IBCPTNM=$$CODEC^ICPTCOD(IBXX) I IBCPTNM=-1 S IBCPTNM="UNK"
"RTN","IBTUBO1",233,0)
 . S IBCTF=$S($G(IBCPT(IBXX,1)):"I",1:"")
"RTN","IBTUBO1",234,0)
 . S IBCTF=$S($G(IBCPT(IBXX,2)):$S(IBCTF="I":"I,P",1:"P"),1:IBCTF)
"RTN","IBTUBO1",235,0)
 . I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB",IBDIV,"OPT",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=+$G(IBCPT(IBXX,1))_U_+$G(IBCPT(IBXX,2))_U_IBCTF
"RTN","IBTUBO1",236,0)
 . I $G(IBINMRA) S:$G(IBCPT("MRA",IBXX)) ^TMP($J,"IBTUB",IBDIV,"OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=1
"RTN","IBTUBO1",237,0)
 . Q
"RTN","IBTUBO1",238,0)
 ;
"RTN","IBTUBO1",239,0)
SETUBQ Q
"RTN","IBTUBO2")
0^48^B54785777^B49823798
"RTN","IBTUBO2",1,0)
IBTUBO2 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  8:21 AM
"RTN","IBTUBO2",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,192,155,309,347,437,516,547**;21-MAR-94;Build 119
"RTN","IBTUBO2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO2",4,0)
 ;
"RTN","IBTUBO2",5,0)
INPT(DGPM) ; - Check if inpatient episode has bills or final bill; if not,
"RTN","IBTUBO2",6,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"INPT",NAME@@DFN,DATE,IBX)=bill status
"RTN","IBTUBO2",7,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"INPT_MRA",NAME@@DFN,DATE,IBX)=1 if MRA request
"RTN","IBTUBO2",8,0)
 ;   *Pre-set variables: DFN=patient IEN, DGPM=pointer to file #405,
"RTN","IBTUBO2",9,0)
 ;                       IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO2",10,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",11,0)
 ;
"RTN","IBTUBO2",12,0)
 I '$G(DFN)!('$G(DGPM))!('$G(IBDT))!('$G(IBRT)) G INPTQ
"RTN","IBTUBO2",13,0)
 N IBIP,IBDATA,IBNAME,IBNCF,IBXX,X,Y,IBMRA,IBDIV,IBWARD
"RTN","IBTUBO2",14,0)
 S IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",15,0)
 ;
"RTN","IBTUBO2",16,0)
 ; Get Division.  Default to main Division if not in Ward location
"RTN","IBTUBO2",17,0)
 S IBWARD=$$GET1^DIQ(405,DGPM_",",.06,"I")  ;Determine Ward location.
"RTN","IBTUBO2",18,0)
 S IBDIV=$$GET1^DIQ(42,IBWARD_",",.015,"I") I IBDIV="" S IBDIV=$$PRIM^VASITE()
"RTN","IBTUBO2",19,0)
 I $D(^TMP($J,"IBTUB-DIV")),'$D(^TMP($J,"IBTUB-DIV",IBDIV)) G INPTQ ; Not a selected Division
"RTN","IBTUBO2",20,0)
 ;
"RTN","IBTUBO2",21,0)
 ; If the IBSBD flag is not set, then reset the Division to be
"RTN","IBTUBO2",22,0)
 ; 999999.  This data will still be included, but the report
"RTN","IBTUBO2",23,0)
 ; will not be sorted by Division.
"RTN","IBTUBO2",24,0)
 ;
"RTN","IBTUBO2",25,0)
 S:'$G(IBSBD) IBDIV=999999
"RTN","IBTUBO2",26,0)
 ;
"RTN","IBTUBO2",27,0)
 I $D(^TMP($J,"IBTUB",IBDIV,"INPT",IBNAME_"@@"_DFN,IBDT)) G INPTQ
"RTN","IBTUBO2",28,0)
 ;
"RTN","IBTUBO2",29,0)
 I $P($G(^DGPM(DGPM,0)),U,11) G INPTQ ;      Admitted for SC condition.
"RTN","IBTUBO2",30,0)
 I $$SC^IBTUBOU($P($G(^DGPM(DGPM,0)),U,16)) G INPTQ ; Check PTF for SC.
"RTN","IBTUBO2",31,0)
 S (IBIP(1),IBIP(2))=0 ; Set claim flags.
"RTN","IBTUBO2",32,0)
 ;
"RTN","IBTUBO2",33,0)
 ; - Check patient's claims.
"RTN","IBTUBO2",34,0)
 S (IBNCF,X)=0
"RTN","IBTUBO2",35,0)
 F  S X=$O(^DGCR(399,"C",DFN,X)) Q:'X  D  Q:IBIP(1)&(IBIP(2))
"RTN","IBTUBO2",36,0)
 . S IBDATA=$$CKBIL^IBTUBOU(X,1) Q:IBDATA=""
"RTN","IBTUBO2",37,0)
 . ;
"RTN","IBTUBO2",38,0)
 . ; The admission date on the bill is different from the Event date.
"RTN","IBTUBO2",39,0)
 . I $P(IBDATA,U,5)'=$P(IBDT,".") Q
"RTN","IBTUBO2",40,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for episode
"RTN","IBTUBO2",41,0)
 . ;
"RTN","IBTUBO2",42,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",43,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO2",44,0)
 . ;
"RTN","IBTUBO2",45,0)
 . S IBIP($P(IBDATA,U,4))=$S($P(IBDATA,U,2)'=2:1,1:2) ;   Episode billed for inst/prof bill type
"RTN","IBTUBO2",46,0)
 . Q
"RTN","IBTUBO2",47,0)
 ;
"RTN","IBTUBO2",48,0)
 I IBIP(1)=1 G:IBIP(2)=1!(IBDT<2990901) INPTQ ; Episode is billed.
"RTN","IBTUBO2",49,0)
 ;
"RTN","IBTUBO2",50,0)
 ; - Add to episodes missing inst./prof. bills.
"RTN","IBTUBO2",51,0)
 S (IBXX,IBMRA)=""
"RTN","IBTUBO2",52,0)
 ;
"RTN","IBTUBO2",53,0)
 I IBIP(1)'=1 D
"RTN","IBTUBO2",54,0)
 . I 'IBIP(1) D
"RTN","IBTUBO2",55,0)
 . . S IBUNB(IBDIV,"EPISM-I")=$G(IBUNB(IBDIV,"EPISM-I"))+1
"RTN","IBTUBO2",56,0)
 . . S IBUNB("EPISM-I")=$G(IBUNB("EPISM-I"))+1
"RTN","IBTUBO2",57,0)
 . . I IBDET S IBXX="I"
"RTN","IBTUBO2",58,0)
 . . Q
"RTN","IBTUBO2",59,0)
 . I $G(IBXTRACT) S IB(1)=IB(1)+1 ; For DM extract.
"RTN","IBTUBO2",60,0)
 . I IBIP(1)=2 D
"RTN","IBTUBO2",61,0)
 . . S IBUNB(IBDIV,"EPISM-I-MRA")=$G(IBUNB(IBDIV,"EPISM-I-MRA"))+1
"RTN","IBTUBO2",62,0)
 . . S IBUNB("EPISM-I-MRA")=$G(IBUNB("EPISM-I-MRA"))+1
"RTN","IBTUBO2",63,0)
 . . I IBDET S IBMRA="I"
"RTN","IBTUBO2",64,0)
 . . Q
"RTN","IBTUBO2",65,0)
 . Q
"RTN","IBTUBO2",66,0)
 ;
"RTN","IBTUBO2",67,0)
 I IBIP(2)'=1,IBDT'<2990901 D
"RTN","IBTUBO2",68,0)
 . I 'IBIP(2) D
"RTN","IBTUBO2",69,0)
 . . S IBUNB(IBDIV,"EPISM-P")=$G(IBUNB(IBDIV,"EPISM-P"))+1
"RTN","IBTUBO2",70,0)
 . . S IBUNB("EPISM-P")=$G(IBUNB("EPISM-P"))+1
"RTN","IBTUBO2",71,0)
 . . I IBDET S IBXX=$S(IBXX="I":"I,P",1:"P")
"RTN","IBTUBO2",72,0)
 . . Q
"RTN","IBTUBO2",73,0)
 . I $G(IBXTRACT) S IB(3)=IB(3)+1 ; For DM extract.
"RTN","IBTUBO2",74,0)
 . I IBIP(2)=2 D
"RTN","IBTUBO2",75,0)
 . . S IBUNB(IBDIV,"EPISM-P-MRA")=$G(IBUNB(IBDIV,"EPISM-P-MRA"))+1
"RTN","IBTUBO2",76,0)
 . . S IBUNB("EPISM-P-MRA")=$G(IBUNB("EPISM-P-MRA"))+1
"RTN","IBTUBO2",77,0)
 . . I IBDET S IBMRA=$S(IBMRA="I":"I,P",1:"P")
"RTN","IBTUBO2",78,0)
 . . Q
"RTN","IBTUBO2",79,0)
 . Q
"RTN","IBTUBO2",80,0)
 ;
"RTN","IBTUBO2",81,0)
 I 'IBIP(1)!'IBIP(2) D  ; Number of Admissions missing claims
"RTN","IBTUBO2",82,0)
 . S IBUNB(IBDIV,"EPISM-A")=$G(IBUNB(IBDIV,"EPISM-A"))+1
"RTN","IBTUBO2",83,0)
 . S IBUNB("EPISM-A")=$G(IBUNB("EPISM-A"))+1
"RTN","IBTUBO2",84,0)
 I IBIP(1)=2!(IBIP(2)=2) D
"RTN","IBTUBO2",85,0)
 . S IBUNB(IBDIV,"EPISM-A-MRA")=$G(IBUNB(IBDIV,"EPISM-A-MRA"))+1
"RTN","IBTUBO2",86,0)
 . S IBUNB("EPISM-A-MRA")=$G(IBUNB("EPISM-A-MRA"))+1
"RTN","IBTUBO2",87,0)
 I $G(IBXTRACT) S IB(5)=IB(5)+1 ; For DM extract.
"RTN","IBTUBO2",88,0)
 ;
"RTN","IBTUBO2",89,0)
 I '$G(IBINMRA),IBIP(1)=2 G:IBIP(2)=1 INPTQ
"RTN","IBTUBO2",90,0)
 I '$G(IBINMRA),IBIP(2)=2 G:IBIP(1)=1 INPTQ
"RTN","IBTUBO2",91,0)
 ;
"RTN","IBTUBO2",92,0)
 ; - Set global for report.
"RTN","IBTUBO2",93,0)
 I $S($G(IBINMRA):1,1:IBXX'="") S ^TMP($J,"IBTUB",IBDIV,"INPT",IBNAME_"@@"_DFN,IBDT,IBX)=IBNCF_U_IBXX_U_U_U_$$HOSP^IBTUBOU(DGPM)
"RTN","IBTUBO2",94,0)
 I IBMRA'="",$G(IBINMRA) S ^TMP($J,"IBTUB",IBDIV,"INPT_MRA",IBNAME_"@@"_DFN,IBDT,IBX)=1_U_IBMRA
"RTN","IBTUBO2",95,0)
 ;
"RTN","IBTUBO2",96,0)
INPTQ Q
"RTN","IBTUBO2",97,0)
 ;
"RTN","IBTUBO2",98,0)
RX(IBRX) ; - Check if prescription has been billed; if not,
"RTN","IBTUBO2",99,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"RX",NAME@@DFN,DATE@RX#,IBX)=bill status^drug name^
"RTN","IBTUBO2",100,0)
 ;                                            original fill date
"RTN","IBTUBO2",101,0)
 ;   ^TMP($J,"IBTUB",DIVISION,"RX_MRA",NAME@@DFN,DATE@RX#,IBX)=1 if req MRA
"RTN","IBTUBO2",102,0)
 ;
"RTN","IBTUBO2",103,0)
 ;   *Pre-set variables: DFN=patient IEN, IBDT=refill date,
"RTN","IBTUBO2",104,0)
 ;                       IBRT=bill rate, IBRX=pointer to file #52,
"RTN","IBTUBO2",105,0)
 ;                       IBEDT=reporting period date
"RTN","IBTUBO2",106,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!('$G(IBRX)) G RXQ
"RTN","IBTUBO2",107,0)
 N IBDATA,IBDAY,IBDRX,IBFL,IBFLG,IBOFD,IBNAME,IBND,IBNO,IBNCF,RX,X,RXDT,IBMRA,IBCO,IBCLIN,IBDIV
"RTN","IBTUBO2",108,0)
 ;
"RTN","IBTUBO2",109,0)
 ; - Be sure prescription has an RX#.
"RTN","IBTUBO2",110,0)
 S IBND=$$RXZERO^IBRXUTL(DFN,IBRX),IBNO=$P(IBND,U) G:IBNO="" RXQ
"RTN","IBTUBO2",111,0)
 ;
"RTN","IBTUBO2",112,0)
 ; - Retrieve the Prescription Original Fill Date
"RTN","IBTUBO2",113,0)
 S IBOFD=$$FILE^IBRXUTL(IBRX,22)\1
"RTN","IBTUBO2",114,0)
 ;
"RTN","IBTUBO2",115,0)
 S IBDAY=$E(IBDT,1,7),IBDRX=IBDAY_"@@"_IBNO,IBNAME=$P($G(^DPT(DFN,0)),U)
"RTN","IBTUBO2",116,0)
 ;
"RTN","IBTUBO2",117,0)
 ; Get Division from Clinic associated with Rx.  Default to VAMC
"RTN","IBTUBO2",118,0)
 S IBCLIN=$$FILE^IBRXUTL(IBRX,5)
"RTN","IBTUBO2",119,0)
 S IBDIV=$$GET1^DIQ(44,IBCLIN_",",3.5,"I") I IBDIV="" S IBDIV=999999
"RTN","IBTUBO2",120,0)
 I $D(^TMP($J,"IBTUB-DIV")),'$D(^TMP($J,"IBTUB-DIV",IBDIV)) G RXQ ; Not a selected Division
"RTN","IBTUBO2",121,0)
 ;
"RTN","IBTUBO2",122,0)
 ; If the IBSBD flag is not set, then reset the Division to be
"RTN","IBTUBO2",123,0)
 ; 999999.  This data will still be included, but the report
"RTN","IBTUBO2",124,0)
 ; will not be sorted by Division.
"RTN","IBTUBO2",125,0)
 ;
"RTN","IBTUBO2",126,0)
 S:'$G(IBSBD) IBDIV=999999
"RTN","IBTUBO2",127,0)
 ;
"RTN","IBTUBO2",128,0)
 ; - Be sure that this fill was not already marked as unbilled.
"RTN","IBTUBO2",129,0)
 I $D(^TMP($J,"IBTUB",IBDIV,"RX",IBNAME_"@@"_DFN,IBDRX,IBX)) G RXQ
"RTN","IBTUBO2",130,0)
 ;
"RTN","IBTUBO2",131,0)
 ; - Look at all fills of the prescription that are on a claim.
"RTN","IBTUBO2",132,0)
 S (IBFL,X)="",(IBFLG,IBNCF,IBNCF(0),IBMRA)=0
"RTN","IBTUBO2",133,0)
 F  S X=$O(^IBA(362.4,"B",IBNO,X)) Q:'X  D  Q:IBFL
"RTN","IBTUBO2",134,0)
 . S RX=$G(^IBA(362.4,X,0)),RXDT=$P(RX,U,3)\1
"RTN","IBTUBO2",135,0)
 . I RXDT=IBOFD S IBFLG=1  ; Original Fill Date Billed?
"RTN","IBTUBO2",136,0)
 . I RXDT'=IBDAY Q  ; RX refill and claim refill dates not the same.
"RTN","IBTUBO2",137,0)
 . ;
"RTN","IBTUBO2",138,0)
 . ; - Skip bill if not authorized (and not meeting other criteria).
"RTN","IBTUBO2",139,0)
 . S IBDATA=$$CKBIL^IBTUBOU($P(RX,U,2)) Q:IBDATA=""
"RTN","IBTUBO2",140,0)
 . S IBNCF=IBNCF+1 ; Increment the number of bills on file for the episode
"RTN","IBTUBO2",141,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO2",142,0)
 . I $G(IBCOMP),$S($P(IBDATA,U,2)'=2:$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT S IBNONMRA=0 Q
"RTN","IBTUBO2",143,0)
 . S:$P(IBDATA,U,2)'=2 IBFL=1,IBMRA=0 ; at least 1 non-MRA bill exists
"RTN","IBTUBO2",144,0)
 . S:$P(IBDATA,U,2)=2 IBMRA=1 ; at least 1 MRA bill exists
"RTN","IBTUBO2",145,0)
 . Q
"RTN","IBTUBO2",146,0)
 ;
"RTN","IBTUBO2",147,0)
 I IBFL G RXQ ; Refill has been billed.
"RTN","IBTUBO2",148,0)
 ;
"RTN","IBTUBO2",149,0)
RX1 ; - Calculate unbilled amounts.
"RTN","IBTUBO2",150,0)
 I IBMRA D
"RTN","IBTUBO2",151,0)
 . S IBUNB(IBDIV,"PRESCRP-MRA")=$G(IBUNB(IBDIV,"PRESCRP-MRA"))+1
"RTN","IBTUBO2",152,0)
 . S IBUNB("PRESCRP-MRA")=$G(IBUNB("PRESCRP-MRA"))+1
"RTN","IBTUBO2",153,0)
 . Q
"RTN","IBTUBO2",154,0)
 E  D
"RTN","IBTUBO2",155,0)
 . S IBUNB(IBDIV,"PRESCRP")=$G(IBUNB(IBDIV,"PRESCRP"))+1
"RTN","IBTUBO2",156,0)
 . S IBUNB("PRESCRP")=$G(IBUNB("PRESCRP"))+1
"RTN","IBTUBO2",157,0)
 . Q
"RTN","IBTUBO2",158,0)
 ;
"RTN","IBTUBO2",159,0)
 ; Patch 437 update to call charge master with enough information
"RTN","IBTUBO2",160,0)
 ; to lookup actual cost of prescription 
"RTN","IBTUBO2",161,0)
 ;
"RTN","IBTUBO2",162,0)
 N IBBI,IBRSNEW,IBQTY,IBCOST,IBRFNUM,IBSUBND,IBFEE
"RTN","IBTUBO2",163,0)
 ;
"RTN","IBTUBO2",164,0)
 ; check charge master for the type of billing--VA Cost or not
"RTN","IBTUBO2",165,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBDAY,.IBRSNEW)
"RTN","IBTUBO2",166,0)
 ;
"RTN","IBTUBO2",167,0)
 I IBBI["VA COST" D
"RTN","IBTUBO2",168,0)
 . ; if this is a refill look up the refill info for cost and quantity
"RTN","IBTUBO2",169,0)
 . S IBRFNUM=$$RFLNUM^IBRXUTL(IBRX,IBDAY,"")
"RTN","IBTUBO2",170,0)
 . I IBRFNUM>0 D
"RTN","IBTUBO2",171,0)
 . . S IBSUBND=$$ZEROSUB^IBRXUTL(DFN,IBRX,IBRFNUM)
"RTN","IBTUBO2",172,0)
 . . S IBQTY=$P($G(IBSUBND),U,4)
"RTN","IBTUBO2",173,0)
 . . S IBCOST=$P($G(IBSUBND),U,11)
"RTN","IBTUBO2",174,0)
 . . Q
"RTN","IBTUBO2",175,0)
 . ;
"RTN","IBTUBO2",176,0)
 . ; if this was an original fill use the Rx info already in IBND
"RTN","IBTUBO2",177,0)
 . I $G(IBQTY)'>0 S IBQTY=$P($G(IBND),U,7)
"RTN","IBTUBO2",178,0)
 . I $G(IBCOST)'>0 S IBCOST=$P($G(IBND),U,17)
"RTN","IBTUBO2",179,0)
 . ;
"RTN","IBTUBO2",180,0)
 . S IBRSNEW=+$O(IBRSNEW($P(IBBI,";"),0))
"RTN","IBTUBO2",181,0)
 . S IBCO=$J($$RATECHG^IBCRCC(+IBRSNEW,IBQTY*IBCOST,IBDAY,.IBFEE),0,2)
"RTN","IBTUBO2",182,0)
 . Q
"RTN","IBTUBO2",183,0)
 E  D
"RTN","IBTUBO2",184,0)
 . S IBCO=$$BICOST^IBCRCI(IBRT,3,IBDAY,"PRESCRIPTION FILL")
"RTN","IBTUBO2",185,0)
 . Q
"RTN","IBTUBO2",186,0)
 ;
"RTN","IBTUBO2",187,0)
 I IBMRA D
"RTN","IBTUBO2",188,0)
 . S IBUNB(IBDIV,"UNBILRX-MRA")=$G(IBUNB(IBDIV,"UNBILRX-MRA"))+IBCO
"RTN","IBTUBO2",189,0)
 . S IBUNB("UNBILRX-MRA")=$G(IBUNB("UNBILRX-MRA"))+IBCO
"RTN","IBTUBO2",190,0)
 . Q
"RTN","IBTUBO2",191,0)
 I 'IBMRA D
"RTN","IBTUBO2",192,0)
 . S IBUNB(IBDIV,"UNBILRX")=$G(IBUNB(IBDIV,"UNBILRX"))+IBCO
"RTN","IBTUBO2",193,0)
 . S IBUNB("UNBILRX")=$G(IBUNB("UNBILRX"))+IBCO
"RTN","IBTUBO2",194,0)
 . Q
"RTN","IBTUBO2",195,0)
 I $G(IBXTRACT) D  ; For DM extract.
"RTN","IBTUBO2",196,0)
 . S IB(17)=IB(17)+1
"RTN","IBTUBO2",197,0)
 . S IB(18)=IB(18)+IBCO
"RTN","IBTUBO2",198,0)
 . Q
"RTN","IBTUBO2",199,0)
 ;
"RTN","IBTUBO2",200,0)
 ; - Set global for report.
"RTN","IBTUBO2",201,0)
 D ZERO^IBRXUTL(+$P(IBND,U,6))
"RTN","IBTUBO2",202,0)
 I $S($G(IBINMRA):1,1:'IBMRA) S ^TMP($J,"IBTUB",IBDIV,"RX",IBNAME_"@@"_DFN,IBDRX,IBX)=IBNCF_U_$P($G(^VA(200,+$P(IBND,U,4),0)),U)_U_$$FILE^IBRXUTL(IBRX,22)_U_U_IBFLG_U_$G(^TMP($J,"IBDRUG",+$P(IBND,U,6),.01))
"RTN","IBTUBO2",203,0)
 I IBMRA,$G(IBINMRA) S ^TMP($J,"IBTUB",IBDIV,"RX_MRA",IBNAME_"@@"_DFN,IBDRX,IBX)=1
"RTN","IBTUBO2",204,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTUBO2",205,0)
 ;
"RTN","IBTUBO2",206,0)
RXQ Q
"RTN","IBTUBO3")
0^49^B42226483^B28228475
"RTN","IBTUBO3",1,0)
IBTUBO3 ;ALB/RB - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  9:12 AM
"RTN","IBTUBO3",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,192,155,277,516,547**;21-MAR-94;Build 119
"RTN","IBTUBO3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBO3",4,0)
 ;
"RTN","IBTUBO3",5,0)
REPORT ; - Prepare report if requested, send summary bulletin.
"RTN","IBTUBO3",6,0)
 N IBDIV,IBN,IBPAG,IBQ,IBRUN,DFN,DTE,FL,PT,X0,X1
"RTN","IBTUBO3",7,0)
 S IBRUN=$$HTE^XLFDT($H,1)
"RTN","IBTUBO3",8,0)
 D BULL^IBTUBUL G:'IBDET REPRTQ
"RTN","IBTUBO3",9,0)
 ;
"RTN","IBTUBO3",10,0)
REPRT1 ;
"RTN","IBTUBO3",11,0)
 S (IBPAG,IBQ)=0
"RTN","IBTUBO3",12,0)
 ;I '$D(^TMP($J)) S X0="" D HDR,NIM D:'IBQ PAUSE G REPRTQ
"RTN","IBTUBO3",13,0)
 I '$O(^TMP($J,"IBTUB",0)) S X0="",IBDIV=999999 D HDR,NIM D:'IBQ PAUSE G REPRTQ
"RTN","IBTUBO3",14,0)
 I $G(IBSBD) D SUMPG
"RTN","IBTUBO3",15,0)
 S IBDIV=0
"RTN","IBTUBO3",16,0)
 I $D(^TMP($J,"IBTUB-DIV")) D  G REPRT1Q
"RTN","IBTUBO3",17,0)
 . F  S IBDIV=$O(^TMP($J,"IBTUB-DIV",IBDIV)) Q:'IBDIV  D REPRT2
"RTN","IBTUBO3",18,0)
 F  S IBDIV=$O(^TMP($J,"IBTUB",IBDIV)) Q:'IBDIV  D REPRT2
"RTN","IBTUBO3",19,0)
 ;
"RTN","IBTUBO3",20,0)
REPRT1Q ;
"RTN","IBTUBO3",21,0)
 D:'IBQ PAUSE
"RTN","IBTUBO3",22,0)
 ;
"RTN","IBTUBO3",23,0)
REPRTQ Q
"RTN","IBTUBO3",24,0)
 ;
"RTN","IBTUBO3",25,0)
SUMPG ;IB*2.0*547/TAZ - Summary page to show which Division has blank pages for selected reports.
"RTN","IBTUBO3",26,0)
 N IBND
"RTN","IBTUBO3",27,0)
 S IBDIV=0
"RTN","IBTUBO3",28,0)
 F  S IBDIV=$O(^DG(40.8,IBDIV)) Q:'IBDIV  D
"RTN","IBTUBO3",29,0)
 . I $D(^TMP($J,"IBTUB-DIV")),'$D(^TMP($J,"IBTUB-DIV",IBDIV)) Q  ;Not a selected division
"RTN","IBTUBO3",30,0)
 . F X0=1,2,3 I IBSEL[X0 D  Q:IBQ
"RTN","IBTUBO3",31,0)
 .. S X1=$S(X0=2:"OPT",X0=3:"RX",1:"INPT")
"RTN","IBTUBO3",32,0)
 .. I '$D(^TMP($J,"IBTUB",IBDIV,X1)) S IBND(X0,IBDIV)=""
"RTN","IBTUBO3",33,0)
 I $D(IBND) D
"RTN","IBTUBO3",34,0)
 . S IBPAG=1 W !
"RTN","IBTUBO3",35,0)
 . W !,"Unbilled Amounts Report"
"RTN","IBTUBO3",36,0)
 . W ?60,"Run Date: ",IBRUN,?124,"Page ",$J(IBPAG,3)
"RTN","IBTUBO3",37,0)
 . W !,"No data for the following Divisions for the selected reports:"
"RTN","IBTUBO3",38,0)
 . F X0=1,2,3 I IBSEL[X0 D  Q:IBQ
"RTN","IBTUBO3",39,0)
 .. W !,$S(X0=2:"Outpatient:",X0=3:"Prescriptions:",1:"Inpatient:")
"RTN","IBTUBO3",40,0)
 .. S IBDIV=0  W !
"RTN","IBTUBO3",41,0)
 .. F  S IBDIV=$O(IBND(X0,IBDIV)) Q:'IBDIV  D  Q:IBQ
"RTN","IBTUBO3",42,0)
 ... I $Y>(IOSL-6) D HDR Q:IBQ  W !,$S(X0=2:"Outpatient:",X0=3:"Prescriptions:",1:"Inpatient:")," Cont'd",!
"RTN","IBTUBO3",43,0)
 ... W $$GET1^DIQ(40.8,IBDIV_",",.01),!
"RTN","IBTUBO3",44,0)
 .. W !
"RTN","IBTUBO3",45,0)
 Q
"RTN","IBTUBO3",46,0)
 ;
"RTN","IBTUBO3",47,0)
REPRT2 ;Print Detail lines
"RTN","IBTUBO3",48,0)
 F X0=1,2,3 I IBSEL[X0 D  Q:IBQ
"RTN","IBTUBO3",49,0)
 . S X1=$S(X0=2:"OPT",X0=3:"RX",1:"INPT")
"RTN","IBTUBO3",50,0)
 . I IBSBD,'$D(^TMP($J,"IBTUB",IBDIV,X1)) Q  ;IB*2.0*547/TAZ Suppress blank pages for Sort by Division
"RTN","IBTUBO3",51,0)
 . D HDR Q:IBQ  I '$D(^TMP($J,"IBTUB",IBDIV,X1)) D NIM Q
"RTN","IBTUBO3",52,0)
 . S PT="" F  S PT=$O(^TMP($J,"IBTUB",IBDIV,X1,PT)) Q:PT=""  D  Q:IBQ
"RTN","IBTUBO3",53,0)
 .. S DFN=+$P(PT,"@@",2) Q:'DFN
"RTN","IBTUBO3",54,0)
 .. S (DTE,FL)="" F  S DTE=$O(^TMP($J,"IBTUB",IBDIV,X1,PT,DTE)) Q:DTE=""  D  Q:IBQ
"RTN","IBTUBO3",55,0)
 ... S IBX="" F  S IBX=$O(^TMP($J,"IBTUB",IBDIV,X1,PT,DTE,IBX)) Q:IBX=""  D  Q:IBQ
"RTN","IBTUBO3",56,0)
 .... S IBN=^TMP($J,"IBTUB",IBDIV,X1,PT,DTE,IBX) D LINE Q:IBQ  I X1["OPT" D CPTS Q:IBQ
"RTN","IBTUBO3",57,0)
 Q
"RTN","IBTUBO3",58,0)
 ;
"RTN","IBTUBO3",59,0)
HDR ; - Output header.
"RTN","IBTUBO3",60,0)
 N I,X,XTP,IBDIVHDR
"RTN","IBTUBO3",61,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE G HDRQ:IBQ
"RTN","IBTUBO3",62,0)
 I '$G(IBPAG) W !
"RTN","IBTUBO3",63,0)
 I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBTUBO3",64,0)
 S IBDIVHDR=""
"RTN","IBTUBO3",65,0)
 I IBDIV=999999 S IBDIVHDR=$S('IBSBD&$D(^TMP($J,"IBTUB-DIV")):"SELECTED",'$G(IBSBD):"ALL",1:"UNKNOWN")
"RTN","IBTUBO3",66,0)
 E  S IBDIVHDR=$$GET1^DIQ(40.8,IBDIV_",",.01)_" ("_$$GET1^DIQ(40.8,IBDIV_",",1)_")"
"RTN","IBTUBO3",67,0)
 S IBPAG=$G(IBPAG)+1
"RTN","IBTUBO3",68,0)
 W !,"Unbilled Amounts Report"
"RTN","IBTUBO3",69,0)
 W ?60,"Run Date: ",IBRUN,?124,"Page ",$J(IBPAG,3)
"RTN","IBTUBO3",70,0)
 S XTP=$S(X0=1:"INPATIENT",X0=2:"OUTPATIENT",X0=3:"PRESCRIPTIONS",1:"")
"RTN","IBTUBO3",71,0)
 I X0'=3 S XTP=XTP_" EPISODES"
"RTN","IBTUBO3",72,0)
 S X="ALL "_XTP_" FROM "
"RTN","IBTUBO3",73,0)
 S X=X_$$DTE(IBBDT)_" TO "_$$DTE(IBEDT\1)_" FOR DIVISION: "_IBDIVHDR
"RTN","IBTUBO3",74,0)
 I $G(IBCOMP) S X=X_" / DATA RECOMPILED/STORED FOR "_$$DAT2^IBOUTL(IBTIMON)
"RTN","IBTUBO3",75,0)
 S X=X_" / '*' AFTER THE PATIENT NAME = USUALLY BILLED MEANS TEST COPAYMENT"
"RTN","IBTUBO3",76,0)
 I X0=1 S X=X_" / 'H' AFTER THE ADMISSION DATE = PATIENT CURRENTLY HOSPITALIZED"
"RTN","IBTUBO3",77,0)
 I X0=3 S X=X_" / '$' AFTER THE ORIGINAL FILL DATE = ORIGINAL FILL DATE HAS BEEN BILLED"
"RTN","IBTUBO3",78,0)
 S X=X_" / 'CF' COLUMN = NUMBER OF CLAIMS ON FILE FOR THE EPISODE"
"RTN","IBTUBO3",79,0)
 I X0'=3 D
"RTN","IBTUBO3",80,0)
 . S X=X_" / 'I/P' COLUMN = 'I' - INSTUTIONAL CLAIM MISSING,"
"RTN","IBTUBO3",81,0)
 . S X=X_" 'P' - PROFESSIONAL CLAIM MISSING"
"RTN","IBTUBO3",82,0)
 . Q
"RTN","IBTUBO3",83,0)
 F I=1:1 W !,$E(X,1,132) S X=$E(X,133,999) Q:X=""
"RTN","IBTUBO3",84,0)
 ;
"RTN","IBTUBO3",85,0)
 I 'X0 W !,$TR($J(" ",IOM)," ","-"),! G HDRQ
"RTN","IBTUBO3",86,0)
 W !!?29,"Last Prim.  Claims" W:X0=3 ?52,"Fill",?123,"Original"
"RTN","IBTUBO3",87,0)
 W !,"Name",?29,"4SSN Elig.  Track.ID#"
"RTN","IBTUBO3",88,0)
 I X0=1 W ?52,"Admission CF Insurance Carrier(s)",?98,"I/P",?102,"MRA"
"RTN","IBTUBO3",89,0)
 I X0=2 W ?52,"Care Dt.  CF Insurance Carrier(s)",?98,"I/P",?102,"MRA",?106,"CPT     I. Rate   P. Rate"
"RTN","IBTUBO3",90,0)
 I X0=3 W ?52,"Date     CF Ins. Carrier(s)     MRA Drug Name        Physician",?123,"Fill Dt."
"RTN","IBTUBO3",91,0)
 W !,$TR($J(" ",IOM)," ","-"),!
"RTN","IBTUBO3",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D
"RTN","IBTUBO3",93,0)
 . W !!,"...Task stoped at user request"
"RTN","IBTUBO3",94,0)
 . S (IBQ,ZTSTOP)=1
"RTN","IBTUBO3",95,0)
 . Q
"RTN","IBTUBO3",96,0)
 ;
"RTN","IBTUBO3",97,0)
HDRQ Q
"RTN","IBTUBO3",98,0)
 ;
"RTN","IBTUBO3",99,0)
CPTS ; - Outpatient Only (CPTs and Rates)
"RTN","IBTUBO3",100,0)
 N CPT,IBN1
"RTN","IBTUBO3",101,0)
 I $O(^TMP($J,"IBTUB",IBDIV,X1,PT,DTE,IBX,""))="" W ?98,"I",?103,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"") W ! Q
"RTN","IBTUBO3",102,0)
 S CPT="" F  S CPT=$O(^TMP($J,"IBTUB",IBDIV,X1,PT,DTE,IBX,CPT)) Q:CPT=""  D  Q:IBQ
"RTN","IBTUBO3",103,0)
 . S IBN1=^TMP($J,"IBTUB",IBDIV,X1,PT,DTE,IBX,CPT)
"RTN","IBTUBO3",104,0)
 . I $Y>(IOSL-5) D HDR Q:IBQ  S FL=0 D LINE
"RTN","IBTUBO3",105,0)
 . W ?98,$P(IBN1,U,3),?103,$S('$G(IBINMRA):"",$G(^TMP($J,"IBTUB",IBDIV,X1_"_MRA",PT,DTE,IBX)):"M",1:""),?106,CPT,?113,$J(+IBN1,8,2)
"RTN","IBTUBO3",106,0)
 . W ?124,$J($P(IBN1,U,2),8,2),!
"RTN","IBTUBO3",107,0)
 Q
"RTN","IBTUBO3",108,0)
 ;
"RTN","IBTUBO3",109,0)
LINE ; - Print detail line.
"RTN","IBTUBO3",110,0)
 I $Y>(IOSL-6) D HDR G:IBQ LINQ S FL=0
"RTN","IBTUBO3",111,0)
 I 'FL D
"RTN","IBTUBO3",112,0)
 . W $E($P(PT,"@@"),1,26) I $$BIL^DGMTUB(DFN,+DTE) W " *"
"RTN","IBTUBO3",113,0)
 . W ?29,$$SSN(DFN),?34,$E($$ELIG(DFN),1,5) S FL=1
"RTN","IBTUBO3",114,0)
 ;
"RTN","IBTUBO3",115,0)
 W ?39,$J(IBX,11)
"RTN","IBTUBO3",116,0)
 ; - Inpatient and Outpatient Only
"RTN","IBTUBO3",117,0)
 I X1'["RX" D
"RTN","IBTUBO3",118,0)
 . W ?52,$$DTE(+DTE) W:X1["INPT" $S($P(IBN,U,5):"H",1:"")
"RTN","IBTUBO3",119,0)
 . W ?62,$J($P(IBN,U),2),?65,$$INS(DFN,+DTE,34)
"RTN","IBTUBO3",120,0)
 . I X1["INPT" D
"RTN","IBTUBO3",121,0)
 .. I $P(IBN,U,2)'="" W ?98,$E($P(IBN,U,2),1,3),!
"RTN","IBTUBO3",122,0)
 .. I '$G(^TMP($J,"IBTUB",IBDIV,X1_"_MRA",PT,DTE,IBX))!'$G(IBINMRA) W:$P(IBN,U,2)="" ! Q
"RTN","IBTUBO3",123,0)
 .. W ?98,$E($P(^TMP($J,"IBTUB",IBDIV,X1_"_MRA",PT,DTE,IBX),U,2),1,3),?103,"M",!
"RTN","IBTUBO3",124,0)
 ;
"RTN","IBTUBO3",125,0)
 ; - Pharmacy Only
"RTN","IBTUBO3",126,0)
 I X1["RX" D  G LINQ
"RTN","IBTUBO3",127,0)
 . W ?52,$$DTE(+DTE),?61,$J($P(IBN,U),2),?64,$$INS(DFN,+DTE,19),?85,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"")
"RTN","IBTUBO3",128,0)
 . W ?88,$E($P(IBN,U,6),1,15),?105,$E($P(IBN,U,2),1,14)
"RTN","IBTUBO3",129,0)
 . W ?123,$$DTE($P(IBN,U,3)) W:$P(IBN,"^",5) "$" W !
"RTN","IBTUBO3",130,0)
 ;
"RTN","IBTUBO3",131,0)
LINQ Q
"RTN","IBTUBO3",132,0)
 ;
"RTN","IBTUBO3",133,0)
SSN(DFN) ; - Return last 4 of patient's SSN.
"RTN","IBTUBO3",134,0)
 N SSN,VADM
"RTN","IBTUBO3",135,0)
 D DEM^VADPT S SSN=$P(VADM(2),"^"),SSN=$E(SSN,6,9) D KVA^VADPT
"RTN","IBTUBO3",136,0)
 Q SSN
"RTN","IBTUBO3",137,0)
 ;
"RTN","IBTUBO3",138,0)
ELIG(DFN) ; - Return patient's primary eligibility (1st 10 characters).
"RTN","IBTUBO3",139,0)
 N ELIG,VAEL
"RTN","IBTUBO3",140,0)
 D ELIG^VADPT S ELIG=$E($P(VAEL(1),"^",2),1,10) D KVAR^VADPT
"RTN","IBTUBO3",141,0)
 Q ELIG
"RTN","IBTUBO3",142,0)
 ;
"RTN","IBTUBO3",143,0)
DTE(D) ; - Format date (MM/DD/YY or MM/YY).
"RTN","IBTUBO3",144,0)
 Q $S('$G(D):"",1:$E(D,4,5)_"/"_$S($E(D,6,7)'="00":$E(D,6,7)_"/",1:"")_$E(D,2,3))
"RTN","IBTUBO3",145,0)
 ;
"RTN","IBTUBO3",146,0)
INS(P,D,C) ; - Return patient's insurance carrier(s).
"RTN","IBTUBO3",147,0)
 ;   Input: P=patient IEN, D=event date, C=Size of the Ins.Carrier column
"RTN","IBTUBO3",148,0)
 ;  Output: List of Providers
"RTN","IBTUBO3",149,0)
 ;
"RTN","IBTUBO3",150,0)
 I '$G(P)!('$G(D)) Q ""
"RTN","IBTUBO3",151,0)
 ;
"RTN","IBTUBO3",152,0)
 N INSC,INSL,INSN,LST,TMP,X
"RTN","IBTUBO3",153,0)
 ;
"RTN","IBTUBO3",154,0)
 S INSL="" D ALL^IBCNS1(P,"LST",1,D)
"RTN","IBTUBO3",155,0)
 S X=0 F  S X=$O(LST(X)) Q:'X  D
"RTN","IBTUBO3",156,0)
 . S INSC=+$G(LST(X,0)) Q:$D(TMP(INSC))!'INSC
"RTN","IBTUBO3",157,0)
 . S INSN=$P($G(^DIC(36,INSC,0)),U)
"RTN","IBTUBO3",158,0)
 . I $G(LST(0))>1 S INSN=$E(INSN,1,C\2)
"RTN","IBTUBO3",159,0)
 . S INSL=INSL_","_INSN
"RTN","IBTUBO3",160,0)
 . S TMP(INSC)=""
"RTN","IBTUBO3",161,0)
 ;
"RTN","IBTUBO3",162,0)
 S $E(INSL)=""
"RTN","IBTUBO3",163,0)
 I $L(INSL,",")>1,$L(INSL)>C D
"RTN","IBTUBO3",164,0)
 . S INSL=$E(INSL,1,C-3),$P(INSL,",",$L(INSL,","))="..."
"RTN","IBTUBO3",165,0)
 S INSL=$E(INSL,1,C)
"RTN","IBTUBO3",166,0)
 ;
"RTN","IBTUBO3",167,0)
 Q INSL
"RTN","IBTUBO3",168,0)
 ;
"RTN","IBTUBO3",169,0)
NIM ; - Print 'no info' message.
"RTN","IBTUBO3",170,0)
 W !?3,"No information available for the period specified."
"RTN","IBTUBO3",171,0)
 Q
"RTN","IBTUBO3",172,0)
 ;
"RTN","IBTUBO3",173,0)
PAUSE ; - Page break.
"RTN","IBTUBO3",174,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBTUBO3",175,0)
 I IOSL>24 Q  ;User is creating a continuous document to a log file.
"RTN","IBTUBO3",176,0)
 N IBI,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBTUBO3",177,0)
 F IBI=$Y:1:(IOSL-3) W !
"RTN","IBTUBO3",178,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQ=1
"RTN","IBTUBO3",179,0)
 Q
"RTN","IBTUBUL")
0^50^B60799593^B72452562
"RTN","IBTUBUL",1,0)
IBTUBUL ;ALB/AAS - UNBILLED AMOUNTS ;29-SEP-94
"RTN","IBTUBUL",2,0)
 ;;2.0;INTEGRATED BILLING;**19,123,159,217,155,356,516,547**;21-MAR-94;Build 119
"RTN","IBTUBUL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTUBUL",4,0)
 ;
"RTN","IBTUBUL",5,0)
 ; IB*2.0*516 - Added sort by Division.  Because some of the totals
"RTN","IBTUBUL",6,0)
 ; can be done by Division and some cannot, portions of the report
"RTN","IBTUBUL",7,0)
 ; were reorganized.
"RTN","IBTUBUL",8,0)
 ;
"RTN","IBTUBUL",9,0)
TEST ; - Create and send test bulletin.
"RTN","IBTUBUL",10,0)
 N IBBDT,IBEDT,IBSEL,IBTEST
"RTN","IBTUBUL",11,0)
 S IBBDT=DT,IBEDT=DT,IBSEL="1,2,3",IBTEST=1
"RTN","IBTUBUL",12,0)
 D TESTV
"RTN","IBTUBUL",13,0)
 ;
"RTN","IBTUBUL",14,0)
BULL ; - Create and send bulletin.
"RTN","IBTUBUL",15,0)
 ;
"RTN","IBTUBUL",16,0)
 I '$O(IBUNB(0)) Q  ; Quit out if no data.
"RTN","IBTUBUL",17,0)
 ;
"RTN","IBTUBUL",18,0)
 N I,IBDIV,IBGRP,IBT,IBTOTAL,IBX,IDX,X,XMDUZ,XMN,XMSUB,XMTEXT,XMY,XMZ
"RTN","IBTUBUL",19,0)
 S XMSUB="UNBILLED AMOUNTS SUMMARY REPORT"_$S($G(IBTEST):" (TEST)",1:"")
"RTN","IBTUBUL",20,0)
 ;
"RTN","IBTUBUL",21,0)
 D BULL1,SUMMARY
"RTN","IBTUBUL",22,0)
 ;
"RTN","IBTUBUL",23,0)
 I $G(IBSBD) S IBDIV=0 F  S IBDIV=$O(IBUNB(IBDIV)) Q:'IBDIV  D BULL2
"RTN","IBTUBUL",24,0)
 ;
"RTN","IBTUBUL",25,0)
 D BULL3,SEND
"RTN","IBTUBUL",26,0)
 ;
"RTN","IBTUBUL",27,0)
 Q
"RTN","IBTUBUL",28,0)
 ;
"RTN","IBTUBUL",29,0)
SUMMARY ; Print Grand Totals.
"RTN","IBTUBUL",30,0)
 ;
"RTN","IBTUBUL",31,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",32,0)
 S IBT(IDX)="  GRAND TOTALS",IDX=IDX+1
"RTN","IBTUBUL",33,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",34,0)
 ;
"RTN","IBTUBUL",35,0)
 I IBSEL[1 D
"RTN","IBTUBUL",36,0)
 . S X=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBUL",37,0)
 . S IBT(IDX+1)="    Inpatient Care:"
"RTN","IBTUBUL",38,0)
 . S IBT(IDX+2)="      Number of Unbilled Inpatient Admissions : "_$J(+$G(IBUNB("EPISM-A")),11)
"RTN","IBTUBUL",39,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Inpt Admissions  : "_$J(+$G(IBUNB("EPISM-A-MRA")),11)
"RTN","IBTUBUL",40,0)
 . S IBT(IDX+4)="      Number of Inpt. Institutional Cases     : "_$J(+$G(IBUNB("EPISM-I")),11)
"RTN","IBTUBUL",41,0)
 . S IBT(IDX+5)="      Average Inpt. Institutional Bill Amount : "_$J($P(X,"^"),11,2)
"RTN","IBTUBUL",42,0)
 . S IBT(IDX+6)="      Number of Inpt. Professional Cases      : "_$J(+$G(IBUNB("EPISM-P")),11)
"RTN","IBTUBUL",43,0)
 . S IBT(IDX+7)="      Average Inpt. Professional Bill Amount  : "_$J($P(X,"^",2),11,2)
"RTN","IBTUBUL",44,0)
 . S IBT(IDX+8)="      Total Unbilled Inpatient Care           : "_$J($G(IBUNB("UNBILIP")),11,2)
"RTN","IBTUBUL",45,0)
 . S IBT(IDX+9)="      Total MRA Unbilled Inpatient Care       : "_$J($G(IBUNB("UNBILIP-MRA")),11,2)
"RTN","IBTUBUL",46,0)
 . S IBT(IDX+10)="",IDX=IDX+10
"RTN","IBTUBUL",47,0)
 . Q
"RTN","IBTUBUL",48,0)
 ;
"RTN","IBTUBUL",49,0)
 I IBSEL[2 D
"RTN","IBTUBUL",50,0)
 . S IBT(IDX+1)="    Outpatient Care:"
"RTN","IBTUBUL",51,0)
 . S IBT(IDX+2)="      Number of Unbilled Outpatient Cases     : "_$J(+$G(IBUNB("ENCNTRS")),11)
"RTN","IBTUBUL",52,0)
 . S IBT(IDX+3)="      Number of Unbilled CPT Codes            : "_$J(+$G(IBUNB("CPTMS")),11)
"RTN","IBTUBUL",53,0)
 . S IBT(IDX+4)="      Number of MRA Unbilled CPT Codes        : "_$J(+$G(IBUNB("CPTMS-MRA")),11)
"RTN","IBTUBUL",54,0)
 . S IBT(IDX+5)="      Total Unbilled Outpatient Care          : "_$J($G(IBUNB("UNBILOP")),11,2)
"RTN","IBTUBUL",55,0)
 . S IBT(IDX+6)="      Total MRA Unbilled Outpatient Care      : "_$J($G(IBUNB("UNBILOP-MRA")),11,2)
"RTN","IBTUBUL",56,0)
 . S IBT(IDX+7)="",IDX=IDX+7
"RTN","IBTUBUL",57,0)
 . Q
"RTN","IBTUBUL",58,0)
 ;
"RTN","IBTUBUL",59,0)
 I IBSEL[3 D
"RTN","IBTUBUL",60,0)
 . S IBT(IDX+1)="    Prescriptions:"
"RTN","IBTUBUL",61,0)
 . S IBT(IDX+2)="      Number of Unbilled Prescriptions        : "_$J(+$G(IBUNB("PRESCRP")),11)
"RTN","IBTUBUL",62,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Prescriptions    : "_$J(+$G(IBUNB("PRESCRP-MRA")),11)
"RTN","IBTUBUL",63,0)
 . S IBT(IDX+4)="      Total Unbilled Prescriptions            : "_$J($G(IBUNB("UNBILRX")),11,2)
"RTN","IBTUBUL",64,0)
 . S IBT(IDX+5)="      Total MRA Unbilled Prescriptions        : "_$J($G(IBUNB("UNBILRX-MRA")),11,2)
"RTN","IBTUBUL",65,0)
 . S IBT(IDX+6)="",IDX=IDX+6
"RTN","IBTUBUL",66,0)
 . Q
"RTN","IBTUBUL",67,0)
 ;
"RTN","IBTUBUL",68,0)
 Q
"RTN","IBTUBUL",69,0)
 ;
"RTN","IBTUBUL",70,0)
BULL1 ; Header for entire report.
"RTN","IBTUBUL",71,0)
 ;
"RTN","IBTUBUL",72,0)
 N IBDIV
"RTN","IBTUBUL",73,0)
 S IDX=1
"RTN","IBTUBUL",74,0)
 S IBX=$P($$SITE^VASITE,U,2,3)
"RTN","IBTUBUL",75,0)
 S IBT(IDX)="SUMMARY UNBILLED AMOUNTS FOR "
"RTN","IBTUBUL",76,0)
 I '$D(^TMP($J,"IBTUB-DIV")) S IBT(IDX)=IBT(IDX)_$P(IBX,U)_" ("_$P(IBX,U,2)_").",IDX=IDX+1
"RTN","IBTUBUL",77,0)
 I $D(^TMP($J,"IBTUB-DIV")) D
"RTN","IBTUBUL",78,0)
 . S IBT(IDX)=IBT(IDX)_"SELECTED DIVISIONS:",IDX=IDX+1
"RTN","IBTUBUL",79,0)
 . S IBDIV="" F  S IBDIV=$O(^TMP($J,"IBTUB-DIV",IBDIV)) Q:IBDIV=""  D
"RTN","IBTUBUL",80,0)
 .. S IBT(IDX)="   "_$$GET1^DIQ(40.8,IBDIV_",",.01)_" ("_$$GET1^DIQ(40.8,IBDIV_",",1)_")",IDX=IDX+1
"RTN","IBTUBUL",81,0)
 S IBT(IDX)="PERIOD: FROM "_$$DAT1^IBOUTL(IBBDT)_" TO "_$$DAT1^IBOUTL(IBEDT),IDX=IDX+1
"RTN","IBTUBUL",82,0)
 ;
"RTN","IBTUBUL",83,0)
 I $G(IBDET) S IBT(IDX)="DETAILED REPORT PRINTED TO '"_IO_"'",IDX=IDX+1
"RTN","IBTUBUL",84,0)
 I $G(IBCOMP) S IBT(IDX)="UNBILLED AMOUNTS FIGURES STORED FOR "_$$DAT2^IBOUTL(IBTIMON),IDX=IDX+1
"RTN","IBTUBUL",85,0)
 ;
"RTN","IBTUBUL",86,0)
 Q
"RTN","IBTUBUL",87,0)
 ;
"RTN","IBTUBUL",88,0)
BULL2 ; Totals for one Division.
"RTN","IBTUBUL",89,0)
 ;
"RTN","IBTUBUL",90,0)
 I IBDIV=999999 S IBDIVHDR="UNKNOWN"
"RTN","IBTUBUL",91,0)
 E  S IBDIVHDR=$$GET1^DIQ(40.8,IBDIV_",",.01)_" ("_$$GET1^DIQ(40.8,IBDIV_",",1)_")"
"RTN","IBTUBUL",92,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",93,0)
 S IBT(IDX)="  DIVISION: "_IBDIVHDR,IDX=IDX+1
"RTN","IBTUBUL",94,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",95,0)
 ;
"RTN","IBTUBUL",96,0)
 I $G(IBTEST) S IBT(IDX)="  *** TEST DATA, TEST DATA ***",IDX=IDX+1
"RTN","IBTUBUL",97,0)
 ;
"RTN","IBTUBUL",98,0)
 I IBSEL[1 D
"RTN","IBTUBUL",99,0)
 . S X=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBUL",100,0)
 . S IBT(IDX+1)="    Inpatient Care:"
"RTN","IBTUBUL",101,0)
 . S IBT(IDX+2)="      Number of Unbilled Inpatient Admissions : "_$J(+$G(IBUNB(IBDIV,"EPISM-A")),11)
"RTN","IBTUBUL",102,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Inpt Admissions  : "_$J(+$G(IBUNB(IBDIV,"EPISM-A-MRA")),11)
"RTN","IBTUBUL",103,0)
 . S IBT(IDX+4)="      Number of Inpt. Institutional Cases     : "_$J(+$G(IBUNB(IBDIV,"EPISM-I")),11)
"RTN","IBTUBUL",104,0)
 . S IBT(IDX+5)="      Average Inpt. Institutional Bill Amount : "_$J($P(X,"^"),11,2)
"RTN","IBTUBUL",105,0)
 . S IBT(IDX+6)="      Number of Inpt. Professional Cases      : "_$J(+$G(IBUNB(IBDIV,"EPISM-P")),11)
"RTN","IBTUBUL",106,0)
 . S IBT(IDX+7)="      Average Inpt. Professional Bill Amount  : "_$J($P(X,"^",2),11,2)
"RTN","IBTUBUL",107,0)
 . S IBT(IDX+8)="      Total Unbilled Inpatient Care           : "_$J($G(IBUNB(IBDIV,"UNBILIP")),11,2)
"RTN","IBTUBUL",108,0)
 . S IBT(IDX+9)="      Total MRA Unbilled Inpatient Care       : "_$J($G(IBUNB(IBDIV,"UNBILIP-MRA")),11,2)
"RTN","IBTUBUL",109,0)
 . S IBT(IDX+10)="",IDX=IDX+10
"RTN","IBTUBUL",110,0)
 . Q
"RTN","IBTUBUL",111,0)
 ;
"RTN","IBTUBUL",112,0)
 I IBSEL[2 D
"RTN","IBTUBUL",113,0)
 . S IBT(IDX+1)="    Outpatient Care:"
"RTN","IBTUBUL",114,0)
 . S IBT(IDX+2)="      Number of Unbilled Outpatient Cases     : "_$J(+$G(IBUNB(IBDIV,"ENCNTRS")),11)
"RTN","IBTUBUL",115,0)
 . S IBT(IDX+3)="      Number of Unbilled CPT Codes            : "_$J(+$G(IBUNB(IBDIV,"CPTMS-I"))+$G(IBUNB(IBDIV,"CPTMS-P")),11)
"RTN","IBTUBUL",116,0)
 . S IBT(IDX+4)="      Number of MRA Unbilled CPT Codes        : "_$J(+$G(IBUNB(IBDIV,"CPTMS-I-MRA"))+$G(IBUNB(IBDIV,"CPTMS-P-MRA")),11)
"RTN","IBTUBUL",117,0)
 . S IBT(IDX+5)="      Total Unbilled Outpatient Care          : "_$J($G(IBUNB(IBDIV,"UNBILOP")),11,2)
"RTN","IBTUBUL",118,0)
 . S IBT(IDX+6)="      Total MRA Unbilled Outpatient Care      : "_$J($G(IBUNB(IBDIV,"UNBILOP-MRA")),11,2)
"RTN","IBTUBUL",119,0)
 . S IBT(IDX+7)="",IDX=IDX+7
"RTN","IBTUBUL",120,0)
 . Q
"RTN","IBTUBUL",121,0)
 ;
"RTN","IBTUBUL",122,0)
 I IBSEL[3 D
"RTN","IBTUBUL",123,0)
 . S IBT(IDX+1)="    Prescriptions:"
"RTN","IBTUBUL",124,0)
 . S IBT(IDX+2)="      Number of Unbilled Prescriptions        : "_$J(+$G(IBUNB(IBDIV,"PRESCRP")),11)
"RTN","IBTUBUL",125,0)
 . S IBT(IDX+3)="      Number of MRA Unbilled Prescriptions    : "_$J(+$G(IBUNB(IBDIV,"PRESCRP-MRA")),11)
"RTN","IBTUBUL",126,0)
 . S IBT(IDX+4)="      Total Unbilled Prescriptions            : "_$J($G(IBUNB(IBDIV,"UNBILRX")),11,2)
"RTN","IBTUBUL",127,0)
 . S IBT(IDX+5)="      Total MRA Unbilled Prescriptions        : "_$J($G(IBUNB(IBDIV,"UNBILRX-MRA")),11,2)
"RTN","IBTUBUL",128,0)
 . S IBT(IDX+6)="",IDX=IDX+6
"RTN","IBTUBUL",129,0)
 . Q
"RTN","IBTUBUL",130,0)
 ;
"RTN","IBTUBUL",131,0)
 Q
"RTN","IBTUBUL",132,0)
 ;
"RTN","IBTUBUL",133,0)
BULL3 ; concluding notes.
"RTN","IBTUBUL",134,0)
 ;
"RTN","IBTUBUL",135,0)
 I IBSEL="1,2,3" D
"RTN","IBTUBUL",136,0)
 . S IBT(IDX+1)="    Total Unbilled Amount (all care)          : "_$J($G(IBUNB("UNBILTL")),11,2)
"RTN","IBTUBUL",137,0)
 . S IBT(IDX+2)="    Total MRA Unbilled Amount (all care)      : "_$J($G(IBUNB("UNBILTL-MRA")),11,2)
"RTN","IBTUBUL",138,0)
 . S IDX(IDX+3)="",IDX=IDX+3
"RTN","IBTUBUL",139,0)
 . Q
"RTN","IBTUBUL",140,0)
 ;
"RTN","IBTUBUL",141,0)
 S IBT(IDX+1)="",IDX=IDX+1
"RTN","IBTUBUL",142,0)
 ;
"RTN","IBTUBUL",143,0)
 I IBSEL[1 D
"RTN","IBTUBUL",144,0)
 . S IBT(IDX+1)="Note:  Average bill Amount is based on Bills Authorized during the 12"
"RTN","IBTUBUL",145,0)
 . S IBT(IDX+2)="       months preceding the month of this report."
"RTN","IBTUBUL",146,0)
 . S IDX=IDX+2
"RTN","IBTUBUL",147,0)
 . Q
"RTN","IBTUBUL",148,0)
 ;
"RTN","IBTUBUL",149,0)
 S IBT(IDX+1)="Note:  Number of cases is insured cases in Claims Tracking that are"
"RTN","IBTUBUL",150,0)
 S IBT(IDX+2)="       not billed (or bill not authorized/req MRA) but appear to be billable."
"RTN","IBTUBUL",151,0)
 ;
"RTN","IBTUBUL",152,0)
 Q
"RTN","IBTUBUL",153,0)
 ;
"RTN","IBTUBUL",154,0)
SEND ; - Send bulletin.
"RTN","IBTUBUL",155,0)
 K XMY
"RTN","IBTUBUL",156,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBTUBUL",157,0)
 S XMN=0,IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,6)),"^",25),0)),"^")
"RTN","IBTUBUL",158,0)
 I $G(IBCOMP),IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBTUBUL",159,0)
 I '$G(IBCOMP) S XMY(DUZ)=""
"RTN","IBTUBUL",160,0)
 D ^XMD
"RTN","IBTUBUL",161,0)
 Q
"RTN","IBTUBUL",162,0)
 ;
"RTN","IBTUBUL",163,0)
TESTV ; - Set up test variables.
"RTN","IBTUBUL",164,0)
 S IBTIMON=9999999
"RTN","IBTUBUL",165,0)
 S IBUNB(999999,"CPTMS-I")=11111
"RTN","IBTUBUL",166,0)
 S IBUNB(999999,"CPTMS-I-MRA")=22222
"RTN","IBTUBUL",167,0)
 S IBUNB(999999,"CPTMS-P")=0
"RTN","IBTUBUL",168,0)
 S IBUNB(999999,"CPTMS-P-MRA")=0
"RTN","IBTUBUL",169,0)
 S IBUNB(999999,"ENCNTRS")=11111
"RTN","IBTUBUL",170,0)
 S IBUNB(999999,"EPISM-A")=11111
"RTN","IBTUBUL",171,0)
 S IBUNB(999999,"EPISM-A-MRA")=22222
"RTN","IBTUBUL",172,0)
 S IBUNB(999999,"EPISM-I")=11111
"RTN","IBTUBUL",173,0)
 S IBUNB(999999,"EPISM-P")=0
"RTN","IBTUBUL",174,0)
 S IBUNB(999999,"PRESCRP")=11111
"RTN","IBTUBUL",175,0)
 S IBUNB(999999,"PRESCRP-MRA")=22222
"RTN","IBTUBUL",176,0)
 S IBUNB(999999,"UNBILIP")=99999.99
"RTN","IBTUBUL",177,0)
 S IBUNB(999999,"UNBILIP-MRA")=77777.77
"RTN","IBTUBUL",178,0)
 S IBUNB(999999,"UNBILOP")=99999.99
"RTN","IBTUBUL",179,0)
 S IBUNB(999999,"UNBILOP-MRA")=77777.77
"RTN","IBTUBUL",180,0)
 S IBUNB(999999,"UNBILRX")=11111
"RTN","IBTUBUL",181,0)
 S IBUNB(999999,"UNBILRX-MRA")=22222
"RTN","IBTUBUL",182,0)
 ;
"RTN","IBTUBUL",183,0)
 S IBUNB("UNBILTL")=99999.99
"RTN","IBTUBUL",184,0)
 S IBUNB("UNBILTL-MRA")=77777.77
"RTN","IBTUBUL",185,0)
 Q
"RTN","IBY547PO")
0^2^B11193414^n/a
"RTN","IBY547PO",1,0)
IBY547PO ;ALB/GEF - Post install routine for patch 547 ; 7-JUN-15
"RTN","IBY547PO",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBY547PO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY547PO",4,0)
 ;
"RTN","IBY547PO",5,0)
 ; XPDUTL calls are DBIA#10141
"RTN","IBY547PO",6,0)
 ;
"RTN","IBY547PO",7,0)
DOC ;
"RTN","IBY547PO",8,0)
 ; POINDX^IBY547PO will run post-install to set new CROSS-REFERENCES for
"RTN","IBY547PO",9,0)
 ; existing fields 3.02 & 3.04 in file 36.
"RTN","IBY547PO",10,0)
 ;  
"RTN","IBY547PO",11,0)
 ; NEWRCS^IBY547PO sets the new multi-field in file #350.9 with the default Revenue Code Exclusions on the
"RTN","IBY547PO",12,0)
 ; Printed Claims Report (FUNC REQ: 2.6.4.8, SDD REQ: 6.2.2.2.4.8)
"RTN","IBY547PO",13,0)
 ;
"RTN","IBY547PO",14,0)
 ; RFAI sets the initial values in fields 52.01 (null) & 52.02 (20 days) in file #350.9
"RTN","IBY547PO",15,0)
 ;
"RTN","IBY547PO",16,0)
EN ; start post-install activities
"RTN","IBY547PO",17,0)
 D POINDX
"RTN","IBY547PO",18,0)
 D NEWRCS
"RTN","IBY547PO",19,0)
 D AC
"RTN","IBY547PO",20,0)
 D RFAI
"RTN","IBY547PO",21,0)
 D RIT
"RTN","IBY547PO",22,0)
 Q
"RTN","IBY547PO",23,0)
 ;
"RTN","IBY547PO",24,0)
POINDX ; POST-INSTALL comes here to set new x-refs
"RTN","IBY547PO",25,0)
 ; run triggers on new cross-refs for fields 3.02 & 3.04 (AEI & AEP)
"RTN","IBY547PO",26,0)
 D MES^XPDUTL("Setting new EDI cross-references in INSURANCE COMPANY file ")
"RTN","IBY547PO",27,0)
 N DIK,FLD
"RTN","IBY547PO",28,0)
 ; file 36, top level
"RTN","IBY547PO",29,0)
 S DIK="^DIC(36,"
"RTN","IBY547PO",30,0)
 F FLD=3.02,3.04 S DIK(1)=FLD D ENALL^DIK
"RTN","IBY547PO",31,0)
 Q
"RTN","IBY547PO",32,0)
 ;
"RTN","IBY547PO",33,0)
NEWRCS ; POST-INSTALL comes here to set new multi=field (#15) in file #350.9 for the default
"RTN","IBY547PO",34,0)
 ; Revenue Code Exclusions on the Printed Claims Report.
"RTN","IBY547PO",35,0)
 D MES^XPDUTL("Setting Default Revenue Code Exclusions in IB SITE PARAMETER file ")
"RTN","IBY547PO",36,0)
 N DIE,DIC,DA,DR,IREVCD,REVCD,FDA,ERRMSG,RETIEN
"RTN","IBY547PO",37,0)
 F REVCD=270:1:279,290:1:299 D
"RTN","IBY547PO",38,0)
 . S IREVCD=$$FIND1^DIC(399.2,,"X",REVCD) Q:'IREVCD
"RTN","IBY547PO",39,0)
 . I $D(^IBE(350.9,1,15,"B",IREVCD)) Q
"RTN","IBY547PO",40,0)
 . K FDA,ERRMSG,RETIEN
"RTN","IBY547PO",41,0)
 . S FDA(350.9399,"+1,1,",.01)=IREVCD
"RTN","IBY547PO",42,0)
 . D UPDATE^DIE("","FDA","RETIEN","ERRMSG")
"RTN","IBY547PO",43,0)
 D MES^XPDUTL("........Default Revenue Code Exclusions set. ")
"RTN","IBY547PO",44,0)
 Q
"RTN","IBY547PO",45,0)
 ;
"RTN","IBY547PO",46,0)
AC ; set initial values in new multiple (#81) in file #350.9 to the default Administrative Contractors for Medicare.
"RTN","IBY547PO",47,0)
 D MES^XPDUTL("Setting Default Administrative Contractor in IB SITE PARAMETER file ")
"RTN","IBY547PO",48,0)
 N FDA,ERRMSG,RETIEN
"RTN","IBY547PO",49,0)
 ;
"RTN","IBY547PO",50,0)
 ; lookup or add to the pointed to file (adds the first time, lookups the rest)
"RTN","IBY547PO",51,0)
 S FDA(355.98,"?+1,",.01)="DME"
"RTN","IBY547PO",52,0)
 D UPDATE^DIE("E","FDA","RETIEN","ERRMSG")  ; returns RETIEN(1) with the value to add or ERRMSG if not found
"RTN","IBY547PO",53,0)
 ;
"RTN","IBY547PO",54,0)
 I $D(ERRMSG) Q  ;if you can't find the entry in the pointed to file, might as well quit
"RTN","IBY547PO",55,0)
 K ERRMSG,FDA
"RTN","IBY547PO",56,0)
 ;
"RTN","IBY547PO",57,0)
 ; lookup or add to the multiple.
"RTN","IBY547PO",58,0)
 S FDA(350.981,"?+1,1,",.01)=RETIEN(1)
"RTN","IBY547PO",59,0)
 K RETIEN
"RTN","IBY547PO",60,0)
 D UPDATE^DIE("","FDA","RETIEN","ERRMSG")
"RTN","IBY547PO",61,0)
 D MES^XPDUTL("........Default Administrative Contractor 'DME' set. ")
"RTN","IBY547PO",62,0)
 Q
"RTN","IBY547PO",63,0)
 ;
"RTN","IBY547PO",64,0)
RFAI ; set initial values in fields 52.01 & 52.02 in file #350.9
"RTN","IBY547PO",65,0)
 N DA,DIE,DR,IBNL
"RTN","IBY547PO",66,0)
 D MES^XPDUTL("Setting Default RFAI Purge Days in IB SITE PARAMETER file ")
"RTN","IBY547PO",67,0)
 S IBNL="",DA=1,DIE=350.9,DR="52.01///^S X=IBNL" D ^DIE K DR
"RTN","IBY547PO",68,0)
 D MES^XPDUTL("........Default RFAI Transaction Purge Days (#52.01) set to null for 'no purge'. ")
"RTN","IBY547PO",69,0)
 S DR="52.02///20" D ^DIE
"RTN","IBY547PO",70,0)
 D MES^XPDUTL("........Default RFAI Worklist Purge Days (#52.02) set to 20 days. ")
"RTN","IBY547PO",71,0)
 K DA,DIE,DR
"RTN","IBY547PO",72,0)
 Q
"RTN","IBY547PO",73,0)
 ;
"RTN","IBY547PO",74,0)
RIT ; recompile billing screen templates
"RTN","IBY547PO",75,0)
 N X,Y,DMAX,IBN
"RTN","IBY547PO",76,0)
 D MES^XPDUTL("Recompiling Input Templates for Billing Screens ...")
"RTN","IBY547PO",77,0)
 F IBN=1:1:9,"10","102","10H" D
"RTN","IBY547PO",78,0)
 .S X="IBXS"_$S(IBN=10:"A",IBN="102":"A2",IBN="10H":"AH",1:IBN),Y=$$FIND1^DIC(.402,,"X","IB SCREEN"_IBN,"B"),DMAX=$$ROUSIZE^DILF
"RTN","IBY547PO",79,0)
 .I Y D EN^DIEZ
"RTN","IBY547PO",80,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY547PO",81,0)
 Q 
"RTN","IBY547PR")
0^12^B46231321^n/a
"RTN","IBY547PR",1,0)
IBY547PR ;ALB/WCJ - Pre-Installation for IB patch 547 ; 1/7/16 4:33pm
"RTN","IBY547PR",2,0)
 ;;2.0;INTEGRATED BILLING;**547**;21-MAR-94;Build 119
"RTN","IBY547PR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY547PR",4,0)
 ;
"RTN","IBY547PR",5,0)
 ; delete all output formatter (O.F.) data elements included in build
"RTN","IBY547PR",6,0)
 D DELOF,RATETYPE,RFIINTAD
"RTN","IBY547PR",7,0)
 Q
"RTN","IBY547PR",8,0)
 ;
"RTN","IBY547PR",9,0)
RATETYPE ;Update all active rate types to be transmittable electronically
"RTN","IBY547PR",10,0)
 ;FILE 399.3 field .1
"RTN","IBY547PR",11,0)
 ;
"RTN","IBY547PR",12,0)
 N IBIEN,DA,DR,DIE
"RTN","IBY547PR",13,0)
 S IBIEN=0
"RTN","IBY547PR",14,0)
 F  S IBIEN=$O(^DGCR(399.3,IBIEN)) Q:'IBIEN  D
"RTN","IBY547PR",15,0)
 . I '$$GET1^DIQ(399.3,IBIEN_",",.03) D
"RTN","IBY547PR",16,0)
 .. S DIE=399.3,DR=".1///1",DA=IBIEN
"RTN","IBY547PR",17,0)
 .. D ^DIE
"RTN","IBY547PR",18,0)
 K DIE,DR,DA
"RTN","IBY547PR",19,0)
 Q
"RTN","IBY547PR",20,0)
 ;
"RTN","IBY547PR",21,0)
RFIINTAD ;Add necessary entries for the IB RFI HL7 interface.
"RTN","IBY547PR",22,0)
 I '$O(^HL(771.5,"B",2.6,0)) D
"RTN","IBY547PR",23,0)
 .N DIC,X,DIK,DA,DIE,DR,Y,DTOUT,DUOUT
"RTN","IBY547PR",24,0)
 .D MES^XPDUTL("Adding entrie(s) to the HL7 VERSION file (#771.5)")
"RTN","IBY547PR",25,0)
 .K DO
"RTN","IBY547PR",26,0)
 .S DIC="^HL(771.5,",DIC(0)="",X=2.6
"RTN","IBY547PR",27,0)
 .S DIC("DR")="2////"_$$FIND1^DIC(771.8,,,"HEALTH LEVEL SEVEN")
"RTN","IBY547PR",28,0)
 .D FILE^DICN
"RTN","IBY547PR",29,0)
 .K DIC,DIE,DR,DTOUT,DUOUT,X,DIK
"RTN","IBY547PR",30,0)
 .D MES^XPDUTL("........'Version 2.6' added.")
"RTN","IBY547PR",31,0)
 ;
"RTN","IBY547PR",32,0)
 I '$O(^HL(771.2,"B","EHC",0)) D
"RTN","IBY547PR",33,0)
 .N DIC,X,DIK,DA,DIE,DR,Y,DTOUT,DUOUT
"RTN","IBY547PR",34,0)
 .D MES^XPDUTL("Adding entrie(s) to the HL7 Message Type file (#771.2)")
"RTN","IBY547PR",35,0)
 .K DO
"RTN","IBY547PR",36,0)
 .S DIC="^HL(771.2,",DIC(0)="",X="EHC"
"RTN","IBY547PR",37,0)
 .S DIC("DR")="2////Health Care Invoice"
"RTN","IBY547PR",38,0)
 .D FILE^DICN                                ;Supported by DBIA 2162
"RTN","IBY547PR",39,0)
 .S DIK="^HL(771.2,",DA=+Y D IX1^DIK         ;Supported by DBIA 2162
"RTN","IBY547PR",40,0)
 .K DIE,DR,DTOUT,DUOUT,X,DIK
"RTN","IBY547PR",41,0)
 .;
"RTN","IBY547PR",42,0)
 .K DO
"RTN","IBY547PR",43,0)
 .S DA(1)=+Y,DIC=DIC_DA(1)_","_"""V"""_",",DIC(0)="L"
"RTN","IBY547PR",44,0)
 .S X=$$FIND1^DIC(771.5,,,2.6)               ;Lookup IEN for 2.6
"RTN","IBY547PR",45,0)
 .D FILE^DICN                                ;Supported by DBIA 2162
"RTN","IBY547PR",46,0)
 .K DIC,DA,DIE,DR,Y,DTOUT,DUOUT,DIC,X
"RTN","IBY547PR",47,0)
 .D MES^XPDUTL("........'EHC-Health Care Invoice' added.")
"RTN","IBY547PR",48,0)
 ;
"RTN","IBY547PR",49,0)
 I '$O(^HL(779.001,"B","E12",0)) D
"RTN","IBY547PR",50,0)
 .N D0,DIC,X,DIK,DA,DIE,DR,DTOUT,DUOUT,Y
"RTN","IBY547PR",51,0)
 .D MES^XPDUTL("Adding entrie(s) to the HL7 Event Type Code file (#779.001)")
"RTN","IBY547PR",52,0)
 .K D0
"RTN","IBY547PR",53,0)
 .S DIC="^HL(779.001,",DIC(0)="",X="E12"
"RTN","IBY547PR",54,0)
 .S DIC("DR")="2////Request Additional Information"
"RTN","IBY547PR",55,0)
 .D FILE^DICN
"RTN","IBY547PR",56,0)
 .S DIK="^HL(779.001,",DA=+Y D IX1^DIK
"RTN","IBY547PR",57,0)
 .K DA,DIE,DR,DTOUT,DUOUT,X,DIK
"RTN","IBY547PR",58,0)
 .;
"RTN","IBY547PR",59,0)
 .K D0
"RTN","IBY547PR",60,0)
 .S DA(1)=+Y,DIC=DIC_DA(1)_",1,",DIC(0)="L"
"RTN","IBY547PR",61,0)
 .S X=$$FIND1^DIC(771.5,,,2.6)               ;Lookup IEN for 2.6
"RTN","IBY547PR",62,0)
 .D FILE^DICN
"RTN","IBY547PR",63,0)
 .S DIK="^HL(779.001,",DA=+Y D IX1^DIK
"RTN","IBY547PR",64,0)
 .K DIC,DA,DIE,DR,DTOUT,DUOUT,DIC,X,DIK,Y
"RTN","IBY547PR",65,0)
 .D MES^XPDUTL("........'E12-Request Additional Information' added.")
"RTN","IBY547PR",66,0)
 ;
"RTN","IBY547PR",67,0)
 I '$O(^HL(779.005,"B","EHC_E12",0)) D
"RTN","IBY547PR",68,0)
 .N D0,DIC,X,DIK,DA,DIE,DR,DTOUT,DUOUT,Y
"RTN","IBY547PR",69,0)
 .D MES^XPDUTL("Adding entrie(s) to the HL7 MESSAGE STRUCTURE CODE file (#779.005)")
"RTN","IBY547PR",70,0)
 .K D0
"RTN","IBY547PR",71,0)
 .S DIC="^HL(779.005,",DIC(0)="",X="EHC_E12"
"RTN","IBY547PR",72,0)
 .S DIC("DR")="2////E12"
"RTN","IBY547PR",73,0)
 .D FILE^DICN
"RTN","IBY547PR",74,0)
 .K DIE,DR,DTOUT,DUOUT,X,DIK
"RTN","IBY547PR",75,0)
 .;
"RTN","IBY547PR",76,0)
 .K D0
"RTN","IBY547PR",77,0)
 .S DA(1)=+Y,DIC=DIC_DA(1)_",1,",DIC(0)="L"
"RTN","IBY547PR",78,0)
 .S X=$$FIND1^DIC(771.5,,,2.6)               ;Lookup IEN for 2.6
"RTN","IBY547PR",79,0)
 .D FILE^DICN
"RTN","IBY547PR",80,0)
 .K DIC,DA,DIE,DR,DTOUT,DUOUT,X,DIK
"RTN","IBY547PR",81,0)
 .D MES^XPDUTL("........'EHC_E12' added.")
"RTN","IBY547PR",82,0)
 ;
"RTN","IBY547PR",83,0)
 ;Add interface user to file 200.  Supported by IA#4677.
"RTN","IBY547PR",84,0)
 N IEN200
"RTN","IBY547PR",85,0)
 D MES^XPDUTL("Adding entrie(s) to the New Person file (#200)")
"RTN","IBY547PR",86,0)
 S IEN200=$$CREATE^XUSAP("INTERFACE,IB RFI","")
"RTN","IBY547PR",87,0)
 I +IEN200=0 D MES^XPDUTL("........'Interface,IB RFI' already exists.")
"RTN","IBY547PR",88,0)
 I +IEN200>0 D MES^XPDUTL("........'Interface,IB RFI' added.")
"RTN","IBY547PR",89,0)
 I IEN200<0 D MES^XPDUTL("........'ERROR: Interface,IB RFI' NOT added.")
"RTN","IBY547PR",90,0)
 Q
"RTN","IBY547PR",91,0)
 ;
"RTN","IBY547PR",92,0)
INCLUDE(FILE,Y) ; function to determine if O.F. entry should be included in the build
"RTN","IBY547PR",93,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY547PR",94,0)
 ; Y=ien to file
"RTN","IBY547PR",95,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY547PR",96,0)
 S OK=0
"RTN","IBY547PR",97,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY547PR",98,0)
 Q OK
"RTN","IBY547PR",99,0)
 ;
"RTN","IBY547PR",100,0)
 ;Delete edited entries to insure clean install of new entries
"RTN","IBY547PR",101,0)
 ;Delete obsolete entries.
"RTN","IBY547PR",102,0)
DELOF   ; Delete included OF entries
"RTN","IBY547PR",103,0)
 NEW FILE,DIK,LN,TAG,TAGLN,DATA,PCE,DA,Y
"RTN","IBY547PR",104,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," D
"RTN","IBY547PR",105,0)
 . F TAG="ENT"_FILE,"DEL"_FILE D
"RTN","IBY547PR",106,0)
 .. F LN=2:1 S TAGLN=TAG_"+"_LN,DATA=$P($T(@TAGLN),";;",2) Q:DATA=""  D
"RTN","IBY547PR",107,0)
 ... F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY547PR",108,0)
 Q
"RTN","IBY547PR",109,0)
 ;
"RTN","IBY547PR",110,0)
 ; Example for ENT5, ENT6, ENT7, DEL5, DEL6, and DEL7:
"RTN","IBY547PR",111,0)
 ;;^195^254^259^269^324^325^
"RTN","IBY547PR",112,0)
 ; Note:  Must have beginning and ending up-carat
"RTN","IBY547PR",113,0)
 ;
"RTN","IBY547PR",114,0)
 ; 364.5 entries modified:
"RTN","IBY547PR",115,0)
 ;
"RTN","IBY547PR",116,0)
ENT5 ; OF entries in file 364.5 to be included
"RTN","IBY547PR",117,0)
 ;
"RTN","IBY547PR",118,0)
 ;;
"RTN","IBY547PR",119,0)
 ;
"RTN","IBY547PR",120,0)
 ;-----------------------------------------------------------------------
"RTN","IBY547PR",121,0)
 ; 364.6 entries modified:
"RTN","IBY547PR",122,0)
 ;    1 - CI2.2
"RTN","IBY547PR",123,0)
 ;    3 - PRV.11
"RTN","IBY547PR",124,0)
 ;    6 - CI2A.2.9
"RTN","IBY547PR",125,0)
 ;    7 - CI2A.5
"RTN","IBY547PR",126,0)
 ;    9 - CI2A.7
"RTN","IBY547PR",127,0)
 ;   10 - CI2.6.9
"RTN","IBY547PR",128,0)
 ;   11 - CI2.8
"RTN","IBY547PR",129,0)
 ;   12 - CI2A.8
"RTN","IBY547PR",130,0)
 ;   13 - CI3A.1.9
"RTN","IBY547PR",131,0)
 ;   16 - CI2.7
"RTN","IBY547PR",132,0)
 ;   17 - CI2A.3
"RTN","IBY547PR",133,0)
 ;   18 - CI3A.2
"RTN","IBY547PR",134,0)
 ;   22 - CI2.4
"RTN","IBY547PR",135,0)
 ;   26 - CI2.3
"RTN","IBY547PR",136,0)
 ;   29 - PT1.3
"RTN","IBY547PR",137,0)
 ;   37 - PT1.11
"RTN","IBY547PR",138,0)
 ;   41 - PT1.15
"RTN","IBY547PR",139,0)
 ;   43 - PT2.2
"RTN","IBY547PR",140,0)
 ;   59 - CL1.19
"RTN","IBY547PR",141,0)
 ;   65 - CI2.4
"RTN","IBY547PR",142,0)
 ;   66 - CL1.26
"RTN","IBY547PR",143,0)
 ;   67 - CL1.27
"RTN","IBY547PR",144,0)
 ;   96 - OI1.6
"RTN","IBY547PR",145,0)
 ;   98 - OI1.4
"RTN","IBY547PR",146,0)
 ;   99 - OI2.3
"RTN","IBY547PR",147,0)
 ;  100 - OI1.5
"RTN","IBY547PR",148,0)
 ;  101 - OI2.4
"RTN","IBY547PR",149,0)
 ;  102 - OI2.5
"RTN","IBY547PR",150,0)
 ;  106 - OI1A.3
"RTN","IBY547PR",151,0)
 ;  109 - OI2.8
"RTN","IBY547PR",152,0)
 ;  110 - OI2.9
"RTN","IBY547PR",153,0)
 ;  117 - PRF.8
"RTN","IBY547PR",154,0)
 ;  127 - INS.6
"RTN","IBY547PR",155,0)
 ;  132 - INS.11
"RTN","IBY547PR",156,0)
 ;  136 - RX1.5
"RTN","IBY547PR",157,0)
 ;  146 - CI3A.99.9
"RTN","IBY547PR",158,0)
 ;  155 - OI1A.99.9
"RTN","IBY547PR",159,0)
 ;  174 - SUB.6
"RTN","IBY547PR",160,0)
 ;  177 - PRV.3
"RTN","IBY547PR",161,0)
 ;  189 - CI3.2
"RTN","IBY547PR",162,0)
 ;  190 - CI3.3
"RTN","IBY547PR",163,0)
 ;  195 - OI1A.4
"RTN","IBY547PR",164,0)
 ;  196 - CI1.8
"RTN","IBY547PR",165,0)
 ;  581 - RX1.9
"RTN","IBY547PR",166,0)
 ;  784 - CL1.34
"RTN","IBY547PR",167,0)
 ;  785 - CL1.35
"RTN","IBY547PR",168,0)
 ;  789 - CI2A.6
"RTN","IBY547PR",169,0)
 ;  794 - CI3A.3
"RTN","IBY547PR",170,0)
 ;  804 - OI1A.5
"RTN","IBY547PR",171,0)
 ;  805 - OI1.7
"RTN","IBY547PR",172,0)
 ;  806 - OI1A.8
"RTN","IBY547PR",173,0)
 ;  809 - COB1.3
"RTN","IBY547PR",174,0)
 ;  810 - COB1.4
"RTN","IBY547PR",175,0)
 ;  811 - COB1.5
"RTN","IBY547PR",176,0)
 ;  812 - COB1.6
"RTN","IBY547PR",177,0)
 ;  939 - OPR.12
"RTN","IBY547PR",178,0)
 ;  944 - OPR.5
"RTN","IBY547PR",179,0)
 ;  952 - CL1.36
"RTN","IBY547PR",180,0)
 ;  956 - OI1A.9
"RTN","IBY547PR",181,0)
 ;  957 - CI3A.4
"RTN","IBY547PR",182,0)
 ;  968 - PRV.10
"RTN","IBY547PR",183,0)
 ;  971 - SUB.9
"RTN","IBY547PR",184,0)
 ;  980 - PRF.27
"RTN","IBY547PR",185,0)
 ;  981 - PRF.28
"RTN","IBY547PR",186,0)
 ;  988 - OI2.10
"RTN","IBY547PR",187,0)
 ;  999 - CI3A.6
"RTN","IBY547PR",188,0)
 ; 1000 - CI3A.5
"RTN","IBY547PR",189,0)
 ; 1004 - CI1.11
"RTN","IBY547PR",190,0)
 ; 1005 - OI1.8
"RTN","IBY547PR",191,0)
 ; 1010 - PRF.26
"RTN","IBY547PR",192,0)
 ; 1016 - CI2.6
"RTN","IBY547PR",193,0)
 ; 1029 - PT1.17
"RTN","IBY547PR",194,0)
 ; 1030 - PT1.18
"RTN","IBY547PR",195,0)
 ; 1034 - CL1A.4
"RTN","IBY547PR",196,0)
 ; 1043 - SUB2.4
"RTN","IBY547PR",197,0)
 ; 1065 - OI1.9
"RTN","IBY547PR",198,0)
 ; 1194 - SUB.11
"RTN","IBY547PR",199,0)
 ; 1289 - OI5.4
"RTN","IBY547PR",200,0)
 ; 1290 - OI5.5
"RTN","IBY547PR",201,0)
 ; 1315 - CI1.9
"RTN","IBY547PR",202,0)
 ; 1316 - CI1.7
"RTN","IBY547PR",203,0)
 ; 1317 - CI1.13
"RTN","IBY547PR",204,0)
 ; 1802 - CI6.3
"RTN","IBY547PR",205,0)
 ; 1804 - CI6.5
"RTN","IBY547PR",206,0)
 ; 1861 - PRV-2
"RTN","IBY547PR",207,0)
 ; 1862 - UB1.5
"RTN","IBY547PR",208,0)
 ; 1863 - UB1.6
"RTN","IBY547PR",209,0)
 ; 1864 - UB1.7
"RTN","IBY547PR",210,0)
 ; 1865 - UB1.8
"RTN","IBY547PR",211,0)
 ; 1866 - UB1.9
"RTN","IBY547PR",212,0)
 ; 1867 - UB1.10
"RTN","IBY547PR",213,0)
 ; 1868 - UB1.11
"RTN","IBY547PR",214,0)
 ; 1869 - UB1.12
"RTN","IBY547PR",215,0)
 ; 1870 - UB1.13
"RTN","IBY547PR",216,0)
 ; 1871 - UB1.14
"RTN","IBY547PR",217,0)
 ; 1872 - UB1.15
"RTN","IBY547PR",218,0)
 ; 1873 - UB1.16
"RTN","IBY547PR",219,0)
 ; 1874 - UB1.17
"RTN","IBY547PR",220,0)
 ; 1875 - UB1.18
"RTN","IBY547PR",221,0)
 ; 1876 - OPR1.13
"RTN","IBY547PR",222,0)
 ; 1913 - CL1A.14
"RTN","IBY547PR",223,0)
 ; 1927 - PRV1.4
"RTN","IBY547PR",224,0)
 ; 1928 - PRV1.5
"RTN","IBY547PR",225,0)
 ; 1929 - PRV1.6
"RTN","IBY547PR",226,0)
 ; 1930 - PRV1.7
"RTN","IBY547PR",227,0)
 ; 1931 - PRV1.8
"RTN","IBY547PR",228,0)
 ; 1966 - CI3A.7
"RTN","IBY547PR",229,0)
 ; 1967 - CI3A.8
"RTN","IBY547PR",230,0)
 ; 1968 - CI3A.9
"RTN","IBY547PR",231,0)
 ; 2059 - LDAT.9
"RTN","IBY547PR",232,0)
 ; 2060 - LDAT.10
"RTN","IBY547PR",233,0)
 ; 2204 - OI1A.6
"RTN","IBY547PR",234,0)
 ; 2205 - OI1A.7
"RTN","IBY547PR",235,0)
 ; 2253 - CI2A.1
"RTN","IBY547PR",236,0)
 ; 2254 - CI2A.2
"RTN","IBY547PR",237,0)
 ; 2255 - CI3A.1
"RTN","IBY547PR",238,0)
 ; 2256 - OI1A.1
"RTN","IBY547PR",239,0)
 ; 2257 - OI1A.2
"RTN","IBY547PR",240,0)
 ;
"RTN","IBY547PR",241,0)
ENT6 ; O.F. entries in file 364.6 to be included
"RTN","IBY547PR",242,0)
 ;
"RTN","IBY547PR",243,0)
 ;;^1^3^6^7^9^10^11^12^13^16^17^18^22^26^29^37^41^43^59^65^66^67^
"RTN","IBY547PR",244,0)
 ;;^96^98^99^100^101^102^106^109^110^117^127^132^136^146^155^174^177^
"RTN","IBY547PR",245,0)
 ;;^189^190^195^196^581^784^785^789^794^804^805^806^809^810^
"RTN","IBY547PR",246,0)
 ;;^811^812^939^944^952^956^957^968^971^980^981^988^999^1000^
"RTN","IBY547PR",247,0)
 ;;^1004^1005^1010^1016^1029^1030^1034^1043^1065^1194^1289^
"RTN","IBY547PR",248,0)
 ;;^1290^1315^1316^1317^1802^1804^1861^1862^1863^1864^1865^
"RTN","IBY547PR",249,0)
 ;;^1866^1867^1868^1869^1870^1871^1872^1873^1874^1875^1876^
"RTN","IBY547PR",250,0)
 ;;^1927^1928^1929^1930^1931^1966^1967^1968^2059^2060^2204^2205^2253^
"RTN","IBY547PR",251,0)
 ;;^2254^2255^2256^2257^
"RTN","IBY547PR",252,0)
 ;
"RTN","IBY547PR",253,0)
 ;-----------------------------------------------------------------------
"RTN","IBY547PR",254,0)
 ;
"RTN","IBY547PR",255,0)
 ;   27 - DC1.2
"RTN","IBY547PR",256,0)
 ;   28 - CL1-16
"RTN","IBY547PR",257,0)
 ;   37 - PC1.1.9
"RTN","IBY547PR",258,0)
 ;   77 - CL1.14
"RTN","IBY547PR",259,0)
 ;   98 - CL1.13.9
"RTN","IBY547PR",260,0)
 ;  100 - CL1.15.9
"RTN","IBY547PR",261,0)
 ;  809 - COB1.3
"RTN","IBY547PR",262,0)
 ; 1015 - GEN.7
"RTN","IBY547PR",263,0)
 ; 1579 - DC1.4
"RTN","IBY547PR",264,0)
 ; 1627 - PRV1.4
"RTN","IBY547PR",265,0)
 ; 1951 - CI2A.1
"RTN","IBY547PR",266,0)
 ; 1952 - CI2A.2
"RTN","IBY547PR",267,0)
 ; 1953 - CI3A.1
"RTN","IBY547PR",268,0)
 ; 1954 - OI1A.1
"RTN","IBY547PR",269,0)
 ; 1955 - OI1A.2
"RTN","IBY547PR",270,0)
 ;
"RTN","IBY547PR",271,0)
ENT7 ; O.F. entries in file 364.7 to be included
"RTN","IBY547PR",272,0)
 ;
"RTN","IBY547PR",273,0)
 ;;^27^28^37^77^98^100^809^1015^1198^1305^1579^1627^1951^1952^1953^1954^1955^
"RTN","IBY547PR",274,0)
 ;
"RTN","IBY547PR",275,0)
 ;-----------------------------------------------------------------------
"RTN","IBY547PR",276,0)
 ; 364.5 entries deleted:
"RTN","IBY547PR",277,0)
 ;
"RTN","IBY547PR",278,0)
DEL5    ; remove O.F. entries in file 364.5 (not re-added)
"RTN","IBY547PR",279,0)
 ;
"RTN","IBY547PR",280,0)
 ;;
"RTN","IBY547PR",281,0)
 ;
"RTN","IBY547PR",282,0)
 ;-----------------------------------------------------------------------
"RTN","IBY547PR",283,0)
 ; 364.6 entries deleted:
"RTN","IBY547PR",284,0)
 ;
"RTN","IBY547PR",285,0)
 ;    5 - CI2.6
"RTN","IBY547PR",286,0)
 ;   14 - CI3.7
"RTN","IBY547PR",287,0)
 ;   15 - CI3.6
"RTN","IBY547PR",288,0)
 ;  104 - OI1.6
"RTN","IBY547PR",289,0)
 ;  105 - OI1.7
"RTN","IBY547PR",290,0)
 ;  107 - OI1.9
"RTN","IBY547PR",291,0)
 ;  111 - OI1.10
"RTN","IBY547PR",292,0)
 ;  191 - CI3.4
"RTN","IBY547PR",293,0)
 ;  814 - COB1.8
"RTN","IBY547PR",294,0)
 ;  815 - COB1.9
"RTN","IBY547PR",295,0)
 ;  891 - COB1.10
"RTN","IBY547PR",296,0)
 ;  961 - COB1.11
"RTN","IBY547PR",297,0)
 ;  962 - COB1.12
"RTN","IBY547PR",298,0)
 ;  964 - COB1.13
"RTN","IBY547PR",299,0)
 ;  987 - CI3.12
"RTN","IBY547PR",300,0)
 ; 1097 - CI1A.10
"RTN","IBY547PR",301,0)
 ; 1098 - CI1A.11
"RTN","IBY547PR",302,0)
 ; 1099 - CI1A.12
"RTN","IBY547PR",303,0)
 ; 1100 - CI1A.13
"RTN","IBY547PR",304,0)
 ; 1101 - CI1A.14
"RTN","IBY547PR",305,0)
 ; 1102 - CI1A.15
"RTN","IBY547PR",306,0)
 ; 1103 - CI1A.16
"RTN","IBY547PR",307,0)
 ; 1104 - CI1A.17
"RTN","IBY547PR",308,0)
 ; 1195 - SUB.13
"RTN","IBY547PR",309,0)
 ; 1196 - SUB.14
"RTN","IBY547PR",310,0)
 ; 1214 - SUB2.13
"RTN","IBY547PR",311,0)
 ; 1215 - SUB2.14
"RTN","IBY547PR",312,0)
 ; 1216 - SUB2.15
"RTN","IBY547PR",313,0)
 ; 1217 - SUB2.16
"RTN","IBY547PR",314,0)
 ; 1232 - OPR2.10
"RTN","IBY547PR",315,0)
 ; 1233 - OPR2.11
"RTN","IBY547PR",316,0)
 ; 1242 - OPR3.10
"RTN","IBY547PR",317,0)
 ; 1243 - OPR3.11
"RTN","IBY547PR",318,0)
 ; 1252 - OPR4.10
"RTN","IBY547PR",319,0)
 ; 1253 - OPR4.11
"RTN","IBY547PR",320,0)
 ; 1260 - OPR5.8
"RTN","IBY547PR",321,0)
 ; 1261 - OPR5.9
"RTN","IBY547PR",322,0)
 ; 1262 - OPR5.10
"RTN","IBY547PR",323,0)
 ; 1263 - OPR5.11
"RTN","IBY547PR",324,0)
 ; 1285 - OPR8.10
"RTN","IBY547PR",325,0)
 ; 1286 - OPR8.11
"RTN","IBY547PR",326,0)
 ; 1296 - OI5.11
"RTN","IBY547PR",327,0)
 ; 1297 - OI5.12
"RTN","IBY547PR",328,0)
 ; 1298 - OI5.13
"RTN","IBY547PR",329,0)
 ; 1299 - OI5.14
"RTN","IBY547PR",330,0)
 ; 1805 - CI6.6
"RTN","IBY547PR",331,0)
 ; 1806 - CI6.7
"RTN","IBY547PR",332,0)
 ; 1807 - CI6.8
"RTN","IBY547PR",333,0)
 ; 1808 - CI6.9
"RTN","IBY547PR",334,0)
 ; 2029 - SUB2.17
"RTN","IBY547PR",335,0)
 ; 2030 - SUB2.18
"RTN","IBY547PR",336,0)
 ; 2031 - SUB2.18
"RTN","IBY547PR",337,0)
 ; 2032 - SUB2.20
"RTN","IBY547PR",338,0)
 ; 2033 - SUB2.21
"RTN","IBY547PR",339,0)
 ; 2034 - SUB2.22
"RTN","IBY547PR",340,0)
 ; 2208 - PRV1.12
"RTN","IBY547PR",341,0)
 ;
"RTN","IBY547PR",342,0)
DEL6    ; remove O.F. entries in file 364.6 (not re-added)
"RTN","IBY547PR",343,0)
 ;
"RTN","IBY547PR",344,0)
 ;;^5^14^15^104^105^107^111^191^814^815^891^961^962^964^987^
"RTN","IBY547PR",345,0)
 ;;^1097^1098^1099^1100^1101^1102^1103^1104^1195^1196^
"RTN","IBY547PR",346,0)
 ;;^1214^1215^1216^1217^1232^1233^1242^1243^1252^1253^
"RTN","IBY547PR",347,0)
 ;;^1260^1261^1262^1263^1285^1286^1296^1297^1298^1299^
"RTN","IBY547PR",348,0)
 ;;^1805^1806^1807^1808^2029^2030^2031^2032^2033^2034^2208^
"RTN","IBY547PR",349,0)
 ;
"RTN","IBY547PR",350,0)
 ;-----------------------------------------------------------------------
"RTN","IBY547PR",351,0)
 ; 364.7 entries deleted:
"RTN","IBY547PR",352,0)
 ;
"RTN","IBY547PR",353,0)
 ;    3 - CI2.6
"RTN","IBY547PR",354,0)
 ;   22 - CI3.6
"RTN","IBY547PR",355,0)
 ;   23 - CI3.7
"RTN","IBY547PR",356,0)
 ;  122 - OI1.6
"RTN","IBY547PR",357,0)
 ;  124 - OI1.7
"RTN","IBY547PR",358,0)
 ;  125 - OI1.9
"RTN","IBY547PR",359,0)
 ;  130 - 0I1.10
"RTN","IBY547PR",360,0)
 ;  133 - CI3.4
"RTN","IBY547PR",361,0)
 ;  378 - CI1A.10
"RTN","IBY547PR",362,0)
 ;  379 - CI1A.11
"RTN","IBY547PR",363,0)
 ;  380 - CI1A.12
"RTN","IBY547PR",364,0)
 ;  381 - CI1A.13
"RTN","IBY547PR",365,0)
 ;  382 - CI1A.14
"RTN","IBY547PR",366,0)
 ;  383 - CI1A.15
"RTN","IBY547PR",367,0)
 ;  384 - CI1A.16
"RTN","IBY547PR",368,0)
 ;  385 - CI1A.17
"RTN","IBY547PR",369,0)
 ;  392 - SUB.13
"RTN","IBY547PR",370,0)
 ;  393 - SUB.14
"RTN","IBY547PR",371,0)
 ;  410 - SUB2.13
"RTN","IBY547PR",372,0)
 ;  411 - SUB2.14
"RTN","IBY547PR",373,0)
 ;  412 - SUB2.15
"RTN","IBY547PR",374,0)
 ;  413 - SUB2.16
"RTN","IBY547PR",375,0)
 ;  428 - OPR2.10
"RTN","IBY547PR",376,0)
 ;  429 - OPR2.11
"RTN","IBY547PR",377,0)
 ;  438 - OPR3.10
"RTN","IBY547PR",378,0)
 ;  439 - OPR3.11
"RTN","IBY547PR",379,0)
 ;  451 - OPR8.10
"RTN","IBY547PR",380,0)
 ;  452 - OPR8.11
"RTN","IBY547PR",381,0)
 ;  462 - OI5.11
"RTN","IBY547PR",382,0)
 ;  463 - OI5.12
"RTN","IBY547PR",383,0)
 ;  464 - OI5.13
"RTN","IBY547PR",384,0)
 ;  465 - OI5.14
"RTN","IBY547PR",385,0)
 ;  650 - OPR5.8
"RTN","IBY547PR",386,0)
 ;  651 - OPR5.9
"RTN","IBY547PR",387,0)
 ;  652 - OPR5.10
"RTN","IBY547PR",388,0)
 ;  653 - OPR5.11
"RTN","IBY547PR",389,0)
 ;  657 - OPR4.11
"RTN","IBY547PR",390,0)
 ;  662 - OPR4.10
"RTN","IBY547PR",391,0)
 ;  844 - COB1.8
"RTN","IBY547PR",392,0)
 ;  845 - COB1.9
"RTN","IBY547PR",393,0)
 ;  951 - COB1.10
"RTN","IBY547PR",394,0)
 ;  955 - COB1.11
"RTN","IBY547PR",395,0)
 ;  956 - COB1.13
"RTN","IBY547PR",396,0)
 ;  983 - COB1.12
"RTN","IBY547PR",397,0)
 ;  990 - CI3.12
"RTN","IBY547PR",398,0)
 ; 1505 - CI6.6
"RTN","IBY547PR",399,0)
 ; 1506 - CI6.7
"RTN","IBY547PR",400,0)
 ; 1507 - CI6.8
"RTN","IBY547PR",401,0)
 ; 1508 - CI6.9
"RTN","IBY547PR",402,0)
 ; 1728 - SUB2.17
"RTN","IBY547PR",403,0)
 ; 1729 - SUB2.18
"RTN","IBY547PR",404,0)
 ; 1730 - SUB2.19
"RTN","IBY547PR",405,0)
 ; 1731 - SUB2.20
"RTN","IBY547PR",406,0)
 ; 1732 - SUB2.21
"RTN","IBY547PR",407,0)
 ; 1733 - SUB2.22
"RTN","IBY547PR",408,0)
 ; 1908 - PRV1.12
"RTN","IBY547PR",409,0)
 ;
"RTN","IBY547PR",410,0)
DEL7    ; remove O.F. entries in file 364.7 (not re-added)
"RTN","IBY547PR",411,0)
 ;
"RTN","IBY547PR",412,0)
 ;;^3^22^23^122^124^125^130^133^378^379^380^381^382^383^
"RTN","IBY547PR",413,0)
 ;;^384^385^392^393^410^411^412^413^428^429^438^439^451^
"RTN","IBY547PR",414,0)
 ;;^452^462^463^464^465^650^651^652^653^657^662^844^845^
"RTN","IBY547PR",415,0)
 ;;^951^955^956^983^990^1505^1506^1507^1508^1728^1729^
"RTN","IBY547PR",416,0)
 ;;^1730^1731^1732^1733^1908^
"RTN","IBY547PR",417,0)
 ;
"RTN","IBY547PR",418,0)
 ;-----------------------------------------------------------------------
"RTN","IBY547PR",419,0)
 ;
"SEC","^DIC",355.98,355.98,0,"AUDIT")
@
"SEC","^DIC",355.98,355.98,0,"DD")
@
"SEC","^DIC",355.98,355.98,0,"DEL")
@
"SEC","^DIC",355.98,355.98,0,"LAYGO")
@
"SEC","^DIC",355.98,355.98,0,"RD")
@
"SEC","^DIC",355.98,355.98,0,"WR")
@
"SEC","^DIC",368,368,0,"AUDIT")
@
"SEC","^DIC",368,368,0,"DD")
@
"SEC","^DIC",368,368,0,"DEL")
@
"SEC","^DIC",368,368,0,"LAYGO")
@
"SEC","^DIC",368,368,0,"RD")
@
"SEC","^DIC",368,368,0,"WR")
@
"SEC","^DIC",368.001,368.001,0,"AUDIT")
@
"SEC","^DIC",368.001,368.001,0,"DD")
@
"SEC","^DIC",368.001,368.001,0,"DEL")
@
"SEC","^DIC",368.001,368.001,0,"LAYGO")
@
"SEC","^DIC",368.001,368.001,0,"RD")
@
"SEC","^DIC",368.001,368.001,0,"WR")
@
"SEC","^DIC",368.002,368.002,0,"AUDIT")
@
"SEC","^DIC",368.002,368.002,0,"DD")
@
"SEC","^DIC",368.002,368.002,0,"DEL")
@
"SEC","^DIC",368.002,368.002,0,"LAYGO")
@
"SEC","^DIC",368.002,368.002,0,"RD")
@
"SEC","^DIC",368.002,368.002,0,"WR")
@
"UP",36,36.015,-1)
36^15
"UP",36,36.015,0)
36.015
"UP",36,36.016,-1)
36^16
"UP",36,36.016,0)
36.016
"UP",350.9,350.9399,-1)
350.9^15
"UP",350.9,350.9399,0)
350.9399
"UP",350.9,350.981,-1)
350.9^81
"UP",350.9,350.981,0)
350.981
"UP",350.9,350.982,-1)
350.9^82
"UP",350.9,350.982,0)
350.982
"VER")
8.0^22.0
"^DD",36,36,3.02,0)
EDI ID NUMBER - PROF^FX^^3;2^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.02,1,0)
^.1
"^DD",36,36,3.02,1,1,0)
36^AEP
"^DD",36,36,3.02,1,1,1)
S ^DIC(36,"AEP",$E(X,1,30),DA)=""
"^DD",36,36,3.02,1,1,2)
K ^DIC(36,"AEP",$E(X,1,30),DA)
"^DD",36,36,3.02,1,1,"%D",0)
^^2^2^3150820^
"^DD",36,36,3.02,1,1,"%D",1,0)
This cross-reference allows users to lookup an Insurance Company entry by 
"^DD",36,36,3.02,1,1,"%D",2,0)
Primary EDI # within the RCB option only.
"^DD",36,36,3.02,1,1,"DT")
3150618
"^DD",36,36,3.02,3)
Answer must be 1-30 characters. PRNT values are not allowed.
"^DD",36,36,3.02,21,0)
^^2^2^3140204^
"^DD",36,36,3.02,21,1,0)
This is the ID number used to identify the Payer on professional
"^DD",36,36,3.02,21,2,0)
claim transmissions. PRNT values are not valid Payer IDs.
"^DD",36,36,3.02,"DT")
3150618
"^DD",36,36,3.04,0)
EDI ID NUMBER - INST^FX^^3;4^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.04,1,0)
^.1
"^DD",36,36,3.04,1,1,0)
36^AEI
"^DD",36,36,3.04,1,1,1)
S ^DIC(36,"AEI",$E(X,1,30),DA)=""
"^DD",36,36,3.04,1,1,2)
K ^DIC(36,"AEI",$E(X,1,30),DA)
"^DD",36,36,3.04,1,1,"%D",0)
^^2^2^3150820^
"^DD",36,36,3.04,1,1,"%D",1,0)
This cross-reference allows users to lookup an Insurance Company entry by 
"^DD",36,36,3.04,1,1,"%D",2,0)
Primary EDI # within the RCB option only.
"^DD",36,36,3.04,1,1,"DT")
3150618
"^DD",36,36,3.04,3)
Answer must be 1-30 characters. PRNT values are not allowed.
"^DD",36,36,3.04,21,0)
^^2^2^3140210^
"^DD",36,36,3.04,21,1,0)
This is the ID number used to identify the Payer on institutional
"^DD",36,36,3.04,21,2,0)
claim transmissions. PRNT values are not valid Payer IDs.
"^DD",36,36,3.04,"DT")
3150618
"^DD",36,36,7.01,0)
EDI - UMO (278) ID^F^^7;1^K:$L(X)>80!($L(X)<2) X
"^DD",36,36,7.01,3)
Answer must be 2-80 characters in length.
"^DD",36,36,7.01,21,0)
^^2^2^3151123^
"^DD",36,36,7.01,21,1,0)
This is the Utilization Management Organization identifier which will be
"^DD",36,36,7.01,21,2,0)
sent in the 278 transaction with the qualifier of PI.
"^DD",36,36,7.01,"DT")
3151123
"^DD",36,36,15,0)
ALTERNATE INST PAYER ID TYPE^36.015P^^15;0
"^DD",36,36,15,21,0)
^^6^6^3151118^
"^DD",36,36,15,21,1,0)
This ID Type designates the type of claims which are processed by a
"^DD",36,36,15,21,2,0)
different Administration Contractor than normal claims. It determines
"^DD",36,36,15,21,3,0)
which Alternate Institutional Payer Primary ID will be transmitted.
"^DD",36,36,15,21,4,0)
 
"^DD",36,36,15,21,5,0)
In order for an Alternate ID to be added to the Bill/Claims, it has to be 
"^DD",36,36,15,21,6,0)
in this sub-file.
"^DD",36,36,16,0)
ALTERNATE PROF PAYER ID TYPE^36.016P^^16;0
"^DD",36,36,16,21,0)
^^6^6^3151118^
"^DD",36,36,16,21,1,0)
This ID Type designates the type of claims which are processed by a
"^DD",36,36,16,21,2,0)
different Administration Contractor than normal claims. It determines
"^DD",36,36,16,21,3,0)
which Alternate Professional Payer Primary ID will be transmitted.
"^DD",36,36,16,21,4,0)
 
"^DD",36,36,16,21,5,0)
In order for an Alternate ID to be added to the Bill/Claims, it has to be 
"^DD",36,36,16,21,6,0)
in this sub-file.
"^DD",36,36.015,0)
ALTERNATE INST PAYER ID TYPE SUB-FIELD^^.02^2
"^DD",36,36.015,0,"DT")
3160121
"^DD",36,36.015,0,"IX","B",36.015,.01)

"^DD",36,36.015,0,"NM","ALTERNATE INST PAYER ID TYPE")

"^DD",36,36.015,0,"UP")
36
"^DD",36,36.015,.01,0)
ALTERNATE INST PAYER ID TYPE^M*P355.98'^IBA(355.98,^0;1^S DIC("S")="I $$ALLOWED^IBCNSC(Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",36,36.015,.01,1,0)
^.1
"^DD",36,36.015,.01,1,1,0)
36.015^B
"^DD",36,36.015,.01,1,1,1)
S ^DIC(36,DA(1),15,"B",$E(X,1,30),DA)=""
"^DD",36,36.015,.01,1,1,2)
K ^DIC(36,DA(1),15,"B",$E(X,1,30),DA)
"^DD",36,36.015,.01,1,2,0)
36^AB
"^DD",36,36.015,.01,1,2,1)
S ^DIC(36,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",36,36.015,.01,1,2,2)
K ^DIC(36,"AB",$E(X,1,30),DA(1),DA)
"^DD",36,36.015,.01,1,2,"%D",0)
^^4^4^3151118^
"^DD",36,36.015,.01,1,2,"%D",1,0)
This cross reference is used to determine if any insurance company is 
"^DD",36,36.015,.01,1,2,"%D",2,0)
using a specific Payer ID Type.  If a Payer ID Type is in use by an 
"^DD",36,36.015,.01,1,2,"%D",3,0)
Insurance Company, it cannot be deleted from the IB SITE PARAMETERS 
"^DD",36,36.015,.01,1,2,"%D",4,0)
(#350.9) file.
"^DD",36,36.015,.01,1,2,"DT")
3150924
"^DD",36,36.015,.01,3)
Enter an Alternate Institutional Payer ID Type.
"^DD",36,36.015,.01,12)
Only allow entries defined in the IB Site Parameters.
"^DD",36,36.015,.01,12.1)
S DIC("S")="I $$ALLOWED^IBCNSC(Y)"
"^DD",36,36.015,.01,21,0)
^^4^4^3151118^^^^
"^DD",36,36.015,.01,21,1,0)
This ID Type designates the type of claims which are
"^DD",36,36.015,.01,21,2,0)
processed by a different Administration Contractor
"^DD",36,36.015,.01,21,3,0)
than normal claims. It determines which Alternate 
"^DD",36,36.015,.01,21,4,0)
Institutional Payer Primary ID will be transmitted.
"^DD",36,36.015,.01,"DT")
3160121
"^DD",36,36.015,.02,0)
ALTERNATE INST PAYER ID^FX^^0;2^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36.015,.02,3)
Answer must be 1-30 characters in length and not contain PRNT.
"^DD",36,36.015,.02,21,0)
^^1^1^3150930^
"^DD",36,36.015,.02,21,1,0)
Enter an alternate institutional primary payer ID number.
"^DD",36,36.015,.02,"DT")
3151118
"^DD",36,36.016,0)
ALTERNATE PROF PAYER ID TYPE SUB-FIELD^^.02^2
"^DD",36,36.016,0,"DT")
3160121
"^DD",36,36.016,0,"IX","B",36.016,.01)

"^DD",36,36.016,0,"NM","ALTERNATE PROF PAYER ID TYPE")

"^DD",36,36.016,0,"UP")
36
"^DD",36,36.016,.01,0)
ALTERNATE PROF PAYER ID TYPE^M*P355.98'^IBA(355.98,^0;1^S DIC("S")="I $$ALLOWED^IBCNSC(Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",36,36.016,.01,1,0)
^.1
"^DD",36,36.016,.01,1,1,0)
36.016^B
"^DD",36,36.016,.01,1,1,1)
S ^DIC(36,DA(1),16,"B",$E(X,1,30),DA)=""
"^DD",36,36.016,.01,1,1,2)
K ^DIC(36,DA(1),16,"B",$E(X,1,30),DA)
"^DD",36,36.016,.01,1,2,0)
36^AD
"^DD",36,36.016,.01,1,2,1)
S ^DIC(36,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",36,36.016,.01,1,2,2)
K ^DIC(36,"AD",$E(X,1,30),DA(1),DA)
"^DD",36,36.016,.01,1,2,"%D",0)
^^4^4^3151118^
"^DD",36,36.016,.01,1,2,"%D",1,0)
This cross reference is used to determine if any insurance company is 
"^DD",36,36.016,.01,1,2,"%D",2,0)
using a specific Payer ID Type.  If a Payer ID Type is in use by an 
"^DD",36,36.016,.01,1,2,"%D",3,0)
Insurance Company, it cannot be deleted from the IB SITE PARAMETERS 
"^DD",36,36.016,.01,1,2,"%D",4,0)
(#350.9) file.
"^DD",36,36.016,.01,1,2,"DT")
3150924
"^DD",36,36.016,.01,3)
Enter an Alternate Institutional Payer ID Type. 
"^DD",36,36.016,.01,12)
Only allow entries defined in the IB Site Parameters.
"^DD",36,36.016,.01,12.1)
S DIC("S")="I $$ALLOWED^IBCNSC(Y)"
"^DD",36,36.016,.01,21,0)
^^4^4^3151118^^
"^DD",36,36.016,.01,21,1,0)
This ID Type designates the type of claims which are
"^DD",36,36.016,.01,21,2,0)
processed by a different Administration Contractor
"^DD",36,36.016,.01,21,3,0)
than normal claims. It determines which Alternate 
"^DD",36,36.016,.01,21,4,0)
Professional Payer Primary ID will be transmitted.
"^DD",36,36.016,.01,"DT")
3160121
"^DD",36,36.016,.02,0)
ALTERNATE PROF PAYER ID^FX^^0;2^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36.016,.02,3)
Answer must be 1-30 characters in length and not contain PRNT.
"^DD",36,36.016,.02,21,0)
^^1^1^3150930^
"^DD",36,36.016,.02,21,1,0)
Enter an alternate professional primary payer ID number.
"^DD",36,36.016,.02,"DT")
3151118
"^DD",350.9,350.9,15,0)
PRINTED CLAIMS RC EXCLUSIONS^350.9399PA^^15;0
"^DD",350.9,350.9,15,21,0)
^^2^2^3150828^
"^DD",350.9,350.9,15,21,1,0)
This field contains Revenue Codes that are used to exclude a claim
"^DD",350.9,350.9,15,21,2,0)
from the Locally Printed Claims Report.
"^DD",350.9,350.9,15,23,0)
^^5^5^3150826^^
"^DD",350.9,350.9,15,23,1,0)
This multi-field points to the Revenue Code file.  It contains a list
"^DD",350.9,350.9,15,23,2,0)
of the Revenue Codes that are used to determine if a claim will be
"^DD",350.9,350.9,15,23,3,0)
excluded from the Locally Printed Claims Report.  If a claim contains
"^DD",350.9,350.9,15,23,4,0)
one of these Revenue Codes, the claim will not show on the Printed
"^DD",350.9,350.9,15,23,5,0)
Claims Report.
"^DD",350.9,350.9,52.01,0)
PURGE DAYS 277 RFAI^NJ4,0^^52;1^K:+X'=X!(X>3000)!(X<365)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,52.01,.1)
Days To Wait To Purge 277 RFAI Transactions
"^DD",350.9,350.9,52.01,3)
Type a number between 365 and 3000, 0 decimal digits.
"^DD",350.9,350.9,52.01,21,0)
^^4^4^3151021^
"^DD",350.9,350.9,52.01,21,1,0)
Enter the number of days (between 365 and 3000) to
"^DD",350.9,350.9,52.01,21,2,0)
retain 277 RFAI transactions in VistA.
"^DD",350.9,350.9,52.01,21,3,0)
A null entry (the default) indicates the transactions
"^DD",350.9,350.9,52.01,21,4,0)
will be stored forever.
"^DD",350.9,350.9,52.01,"DT")
3151021
"^DD",350.9,350.9,52.02,0)
WORKLIST PURGE DAYS 277 RFAI^NJ2,0^^52;2^K:+X'=X!(X>45)!(X<1)!(X?.E1"."1N.N) X
"^DD",350.9,350.9,52.02,.1)
Days To Wait To Purge Entry On RFAI Worklist Response
"^DD",350.9,350.9,52.02,3)
Type a number between 1 and 45, 0 decimal digits.
"^DD",350.9,350.9,52.02,21,0)
^^4^4^3151021^
"^DD",350.9,350.9,52.02,21,1,0)
Enter the number of days (between 1 and 45) that a
"^DD",350.9,350.9,52.02,21,2,0)
277 RFAI transaction will remain on the RFAI Worklist
"^DD",350.9,350.9,52.02,21,3,0)
unless specifically removed by a user.
"^DD",350.9,350.9,52.02,21,4,0)
The default is 20 days.
"^DD",350.9,350.9,52.02,"DT")
3151021
"^DD",350.9,350.9,81,0)
PRIMARY PAYER ID TYPES MED^350.981PA^^81;0
"^DD",350.9,350.9,81,21,0)
^^5^5^3151117^
"^DD",350.9,350.9,81,21,1,0)
This ID Type designates the type of claims which are
"^DD",350.9,350.9,81,21,2,0)
processed by a different Administration Contractor
"^DD",350.9,350.9,81,21,3,0)
than normal claims. It determines which Alternate 
"^DD",350.9,350.9,81,21,4,0)
Institutional or Professional Payer Primary ID will 
"^DD",350.9,350.9,81,21,5,0)
be transmitted for Medicare Plans.
"^DD",350.9,350.9,82,0)
PRIMARY PAYER ID TYPES COM^350.982PA^^82;0
"^DD",350.9,350.9,82,21,0)
^^5^5^3151117^
"^DD",350.9,350.9,82,21,1,0)
This ID Type designates the type of claims which are
"^DD",350.9,350.9,82,21,2,0)
processed by a different Administration Contractor
"^DD",350.9,350.9,82,21,3,0)
than normal claims. It determines which Alternate 
"^DD",350.9,350.9,82,21,4,0)
Institutional or Professional Payer Primary ID will 
"^DD",350.9,350.9,82,21,5,0)
be transmitted for Commercial Plans.
"^DD",350.9,350.9399,0)
PRINTED CLAIMS RC EXCLUSIONS SUB-FIELD^^.01^1
"^DD",350.9,350.9399,0,"DT")
3150824
"^DD",350.9,350.9399,0,"IX","B",350.9399,.01)

"^DD",350.9,350.9399,0,"NM","PRINTED CLAIMS RC EXCLUSIONS")

"^DD",350.9,350.9399,0,"UP")
350.9
"^DD",350.9,350.9399,.01,0)
REVENUE CODE^P399.2'^DGCR(399.2,^0;1^Q
"^DD",350.9,350.9399,.01,1,0)
^.1
"^DD",350.9,350.9399,.01,1,1,0)
350.9399^B
"^DD",350.9,350.9399,.01,1,1,1)
S ^IBE(350.9,DA(1),15,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.9399,.01,1,1,2)
K ^IBE(350.9,DA(1),15,"B",$E(X,1,30),DA)
"^DD",350.9,350.9399,.01,3)
Enter a Rev Code to Exclude a Claim from the Printed Claims Report.
"^DD",350.9,350.9399,.01,21,0)
^^2^2^3150828^
"^DD",350.9,350.9399,.01,21,1,0)
This field contains Revenue Codes that are used to exclude a claim
"^DD",350.9,350.9399,.01,21,2,0)
from the Locally Printed Claims Report.
"^DD",350.9,350.9399,.01,23,0)
^^5^5^3150826^^
"^DD",350.9,350.9399,.01,23,1,0)
This multi-field points to the Revenue Code file.  It contains a list
"^DD",350.9,350.9399,.01,23,2,0)
of the Revenue Codes that are used to determine if a claim will be
"^DD",350.9,350.9399,.01,23,3,0)
excluded from the Locally Printed Claims Report.  If a claim contains
"^DD",350.9,350.9399,.01,23,4,0)
one of these Revenue Codes, the claim will not show on the Printed
"^DD",350.9,350.9399,.01,23,5,0)
Claims Report.
"^DD",350.9,350.9399,.01,"DT")
3150828
"^DD",350.9,350.981,0)
PRIMARY PAYER ID TYPES MED SUB-FIELD^^.01^1
"^DD",350.9,350.981,0,"DT")
3151118
"^DD",350.9,350.981,0,"IX","B",350.981,.01)

"^DD",350.9,350.981,0,"NM","PRIMARY PAYER ID TYPES MED")

"^DD",350.9,350.981,0,"UP")
350.9
"^DD",350.9,350.981,.01,0)
PRIMARY PAYER ID TYPES MED^MP355.98^IBA(355.98,^0;1^Q
"^DD",350.9,350.981,.01,1,0)
^.1^^-1
"^DD",350.9,350.981,.01,1,1,0)
350.981^B
"^DD",350.9,350.981,.01,1,1,1)
S ^IBE(350.9,DA(1),81,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.981,.01,1,1,2)
K ^IBE(350.9,DA(1),81,"B",$E(X,1,30),DA)
"^DD",350.9,350.981,.01,3)
Enter a Primary ID Type for Medicare Claims.
"^DD",350.9,350.981,.01,21,0)
^^5^5^3151118^
"^DD",350.9,350.981,.01,21,1,0)
This ID Type designates the type of claims which are
"^DD",350.9,350.981,.01,21,2,0)
processed by a different Administration Contractor
"^DD",350.9,350.981,.01,21,3,0)
than normal claims. It determines which Alternate 
"^DD",350.9,350.981,.01,21,4,0)
Institutional or Professional Payer Primary ID will 
"^DD",350.9,350.981,.01,21,5,0)
be transmitted for Medicare Plans.
"^DD",350.9,350.981,.01,"DT")
3151118
"^DD",350.9,350.982,0)
PRIMARY PAYER ID TYPES COM SUB-FIELD^^.01^1
"^DD",350.9,350.982,0,"DT")
3150828
"^DD",350.9,350.982,0,"IX","B",350.982,.01)

"^DD",350.9,350.982,0,"NM","PRIMARY PAYER ID TYPES COM")

"^DD",350.9,350.982,0,"UP")
350.9
"^DD",350.9,350.982,.01,0)
PRIMARY PAYER ID TYPES COM^MP355.98^IBA(355.98,^0;1^Q
"^DD",350.9,350.982,.01,1,0)
^.1
"^DD",350.9,350.982,.01,1,1,0)
350.982^B
"^DD",350.9,350.982,.01,1,1,1)
S ^IBE(350.9,DA(1),82,"B",$E(X,1,30),DA)=""
"^DD",350.9,350.982,.01,1,1,2)
K ^IBE(350.9,DA(1),82,"B",$E(X,1,30),DA)
"^DD",350.9,350.982,.01,3)
Enter a Primary ID Type for commercial claims.
"^DD",350.9,350.982,.01,21,0)
^^5^5^3151118^
"^DD",350.9,350.982,.01,21,1,0)
This ID Type designates the type of claims which are
"^DD",350.9,350.982,.01,21,2,0)
processed by a different Administration Contractor
"^DD",350.9,350.982,.01,21,3,0)
than normal claims. It determines which Alternate 
"^DD",350.9,350.982,.01,21,4,0)
Institutional or Professional Payer Primary ID will 
"^DD",350.9,350.982,.01,21,5,0)
be transmitted for Commercial Plans.
"^DD",350.9,350.982,.01,"DT")
3151118
"^DD",355.98,355.98,0)
FIELD^^.01^1
"^DD",355.98,355.98,0,"DDA")
N
"^DD",355.98,355.98,0,"DT")
3150819
"^DD",355.98,355.98,0,"IX","B",355.98,.01)

"^DD",355.98,355.98,0,"NM","IB ALTERNATE PRIMARY ID TYPE")

"^DD",355.98,355.98,0,"PT",36.015,.01)

"^DD",355.98,355.98,0,"PT",36.016,.01)

"^DD",355.98,355.98,0,"PT",350.981,.01)

"^DD",355.98,355.98,0,"PT",350.982,.01)

"^DD",355.98,355.98,0,"PT",399,140)

"^DD",355.98,355.98,0,"PT",399,142)

"^DD",355.98,355.98,0,"PT",399,144)

"^DD",355.98,355.98,.01,0)
PRIMARY ID TYPE^RFX^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",355.98,355.98,.01,.1)
Primary ID Type
"^DD",355.98,355.98,.01,1,0)
^.1
"^DD",355.98,355.98,.01,1,1,0)
355.98^B
"^DD",355.98,355.98,.01,1,1,1)
S ^IBA(355.98,"B",$E(X,1,30),DA)=""
"^DD",355.98,355.98,.01,1,1,2)
K ^IBA(355.98,"B",$E(X,1,30),DA)
"^DD",355.98,355.98,.01,3)
Answer must be 3-60 characters in length.
"^DD",355.98,355.98,.01,21,0)
^^5^5^3150929^
"^DD",355.98,355.98,.01,21,1,0)
This ID Type designates the type of claims which are
"^DD",355.98,355.98,.01,21,2,0)
processed by a different Administration Contractor
"^DD",355.98,355.98,.01,21,3,0)
than normal claims. It determines which Alternate 
"^DD",355.98,355.98,.01,21,4,0)
Institutional or Professional Payer Primary ID will 
"^DD",355.98,355.98,.01,21,5,0)
be transmitted.
"^DD",355.98,355.98,.01,"DT")
3160223
"^DD",362.3,362.3,.04,0)
POA INDICATOR^*S^Y:Yes;N:No;U:No Information;W:Clinically Undetermined;1:Blank/Exempt from POA Reporting;^0;4^Q
"^DD",362.3,362.3,.04,.1)
POA Indicator
"^DD",362.3,362.3,.04,3)
Enter the value that correctly indicates if this condition was present at the time the patient was admitted.
"^DD",362.3,362.3,.04,12)
Blank/Exempt from POA Reporting is no longer an available option.
"^DD",362.3,362.3,.04,12.1)
S DIC("S")="I Y'=1"
"^DD",362.3,362.3,.04,21,0)
^.001^2^2^3151105^^^
"^DD",362.3,362.3,.04,21,1,0)
Enter the value that correctly indicates if this condition was present
"^DD",362.3,362.3,.04,21,2,0)
at the time the patient was admitted.
"^DD",362.3,362.3,.04,23,0)
^^6^6^3151105^
"^DD",362.3,362.3,.04,23,1,0)
This is "Present On Admission" indicator.
"^DD",362.3,362.3,.04,23,2,0)
 
"^DD",362.3,362.3,.04,23,3,0)
Value of "1" instead of the actual blank is no longer required for 837 
"^DD",362.3,362.3,.04,23,4,0)
transmissions (ID1^IBCEF2).
"^DD",362.3,362.3,.04,23,5,0)
Value of "1" from the QuadraMed interface is converted
"^DD",362.3,362.3,.04,23,6,0)
to a blank when stored into this file (SETPOA^IBCSC4F).
"^DD",362.3,362.3,.04,"DT")
3150630
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3071126
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,2.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>40!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1^^0
"^DD",364.6,364.6,.1,3)
Answer must be 1-40 characters in length
"^DD",364.6,364.6,.1,21,0)
^^2^2^3071126^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
3080310
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",368,368,0)
FIELD^^114.04^105
"^DD",368,368,0,"DDA")
N
"^DD",368,368,0,"DT")
3160302
"^DD",368,368,0,"IX","B",368,.01)

"^DD",368,368,0,"IX","C",368,.03)

"^DD",368,368,0,"IX","D",368,111.01)

"^DD",368,368,0,"IX","E",368,200.01)

"^DD",368,368,0,"NM","HEALTH CARE CLAIM RFAI (277)")

"^DD",368,368,.01,0)
MESSAGE CONTROL ID^RF^^0;1^K:$L(X)>20!($L(X)<3)!'(X'?1P.E) X
"^DD",368,368,.01,1,0)
^.1
"^DD",368,368,.01,1,1,0)
368^B
"^DD",368,368,.01,1,1,1)
S ^IBA(368,"B",$E(X,1,30),DA)=""
"^DD",368,368,.01,1,1,2)
K ^IBA(368,"B",$E(X,1,30),DA)
"^DD",368,368,.01,3)
Answer must be 3-20 characters in length.
"^DD",368,368,.01,21,0)
^^3^3^3151201^^
"^DD",368,368,.01,21,1,0)
This is the Message Control ID field received from the FSC ASC X12N 
"^DD",368,368,.01,21,2,0)
health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368,.01,21,3,0)
value is received via the MSH-10 segment of the 277 HL message.
"^DD",368,368,.01,"DT")
3151201
"^DD",368,368,.02,0)
REQUEST DATE/TIME^F^^0;2^K:$L(X)>24!($L(X)<1) X
"^DD",368,368,.02,3)
Answer must be 1-24 characters in length.
"^DD",368,368,.02,21,0)
^^3^3^3151201^
"^DD",368,368,.02,21,1,0)
This is the Request Date/Time field received from the FSC ASC X12N health 
"^DD",368,368,.02,21,2,0)
Care Claim Request For Additional Information (277) message.  The value 
"^DD",368,368,.02,21,3,0)
is received via the RFI-1 segment of the 277 HL message.
"^DD",368,368,.02,"DT")
3151201
"^DD",368,368,.03,0)
TRANSACTION DATE/TIME^F^^0;3^K:$L(X)>14!($L(X)<14) X
"^DD",368,368,.03,1,0)
^.1
"^DD",368,368,.03,1,1,0)
368^C
"^DD",368,368,.03,1,1,1)
S ^IBA(368,"C",$E(X,1,30),DA)=""
"^DD",368,368,.03,1,1,2)
K ^IBA(368,"C",$E(X,1,30),DA)
"^DD",368,368,.03,1,1,"%D",0)
^^1^1^3151201^
"^DD",368,368,.03,1,1,"%D",1,0)
This index will sort the data by the Transaction Date/Time field (#.03).
"^DD",368,368,.03,1,1,"DT")
3150903
"^DD",368,368,.03,3)
Answer must be 14 characters in length.
"^DD",368,368,.03,21,0)
^^3^3^3160111^^
"^DD",368,368,.03,21,1,0)
This is the Transaction Date/Time field received from the FSC ASC X12N 
"^DD",368,368,.03,21,2,0)
health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368,.03,21,3,0)
value is received via the MSH-7 segment of the 277 HL message.
"^DD",368,368,.03,"DT")
3160111
"^DD",368,368,1.01,0)
PAYER NAME^F^^1;1^K:$L(X)>60!($L(X)<1) X
"^DD",368,368,1.01,3)
Answer must be 1-60 characters in length.
"^DD",368,368,1.01,21,0)
^^3^3^3151201^
"^DD",368,368,1.01,21,1,0)
This is the Payer Name field received from the FSC ASC X12N health Care
"^DD",368,368,1.01,21,2,0)
Claim Request For Additional Information (277) message.  The value is
"^DD",368,368,1.01,21,3,0)
received via the IVC-11.1 segment of the 277 HL message.
"^DD",368,368,1.01,"DT")
3151201
"^DD",368,368,1.02,0)
PAYER IDENTIFIER^F^^1;2^K:$L(X)>80!($L(X)<1) X
"^DD",368,368,1.02,3)
Answer must be 1-80 characters in length.
"^DD",368,368,1.02,21,0)
^^3^3^3150602^
"^DD",368,368,1.02,21,1,0)
This is the Payer Identifier field received from the FSC ASC X12N Health
"^DD",368,368,1.02,21,2,0)
Care Claim Request For Additional Information (277) message.  The value is
"^DD",368,368,1.02,21,3,0)
received via the IVC-11.3 segment of the 277 HL7 message.
"^DD",368,368,1.02,"DT")
3150602
"^DD",368,368,1.03,0)
PAYER CONTACT NAME^F^^1;3^K:$L(X)>60!($L(X)<1) X
"^DD",368,368,1.03,3)
Answer must be 1-60 characters in length.
"^DD",368,368,1.03,21,0)
^^3^3^3150602^
"^DD",368,368,1.03,21,1,0)
This is the Payer Contact Name field received from the FSC ASC X12N Health
"^DD",368,368,1.03,21,2,0)
Care Claim Request For Additional Information (277) message.  The value is
"^DD",368,368,1.03,21,3,0)
received via the CTD-2.1 & CTD-2.2 segments of the 277 HL7 message.
"^DD",368,368,1.03,"DT")
3150602
"^DD",368,368,2.01,0)
PAYER CONTACT COMM TYPE 1^F^^2;1^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,2.01,3)
Answer must be 1-3 characters in length.
"^DD",368,368,2.01,21,0)
^^4^4^3150602^
"^DD",368,368,2.01,21,1,0)
This is the Payer Contact Communication Type 1 field received from the FSC
"^DD",368,368,2.01,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277)
"^DD",368,368,2.01,21,3,0)
message.  The value is received via the CTD-5.1 & 5.2 segment of the 277
"^DD",368,368,2.01,21,4,0)
HL7 message.
"^DD",368,368,2.01,"DT")
3160302
"^DD",368,368,2.02,0)
PAYER CONTACT COMM TYPE 2^F^^2;2^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,2.02,3)
Answer must be 1-2 characters in length.
"^DD",368,368,2.02,21,0)
^^4^4^3150602^
"^DD",368,368,2.02,21,1,0)
This is the Payer Contact Communication Type 2 field received from the FSC
"^DD",368,368,2.02,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277)
"^DD",368,368,2.02,21,3,0)
message.  The value is received via the CTD-5.1 & 5.2 segments of the 277
"^DD",368,368,2.02,21,4,0)
HL7 message.
"^DD",368,368,2.02,"DT")
3150602
"^DD",368,368,2.03,0)
PAYER CONTACT COMM TYPE 3^F^^2;3^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,2.03,3)
Answer must be 1-2 characters in length.
"^DD",368,368,2.03,21,0)
^^4^4^3150602^
"^DD",368,368,2.03,21,1,0)
This is the Payer Contact Communication Type 3 field received from the FSC
"^DD",368,368,2.03,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277)
"^DD",368,368,2.03,21,3,0)
message.  The value is received via the CTD-5.1 & 5.2 segments of the 277
"^DD",368,368,2.03,21,4,0)
HL7 message.
"^DD",368,368,2.03,"DT")
3150602
"^DD",368,368,3.01,0)
PAYER CONTACT COMMUNICATION 1^F^^3;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,3.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,3.01,21,0)
^^4^4^3160114^
"^DD",368,368,3.01,21,1,0)
This is the Payer Contact Communication 1 field received from the FSC ASC
"^DD",368,368,3.01,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,3.01,21,3,0)
The value is received via the CTD-5.8 segment of the 277 HL7 
"^DD",368,368,3.01,21,4,0)
message.
"^DD",368,368,3.01,"DT")
3160114
"^DD",368,368,4.01,0)
PAYER CONTACT COMMUNICATION 2^F^^4;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,4.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,4.01,21,0)
^^4^4^3160114^
"^DD",368,368,4.01,21,1,0)
This is the Payer Contact Communication 2 field received from the FSC ASC
"^DD",368,368,4.01,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,4.01,21,3,0)
The value is received via the CTD-5.8 segment of the 277 HL7 
"^DD",368,368,4.01,21,4,0)
message.
"^DD",368,368,4.01,"DT")
3160114
"^DD",368,368,5.01,0)
PAYER CONTACT COMMUNICATION 3^F^^5;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,5.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,5.01,21,0)
^^4^4^3160114^
"^DD",368,368,5.01,21,1,0)
This is the Payer Contact Communication 3 field received from the FSC ASC
"^DD",368,368,5.01,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,5.01,21,3,0)
The value is received via the CTD-5.8 segments of the 277 HL7 
"^DD",368,368,5.01,21,4,0)
message.
"^DD",368,368,5.01,"DT")
3160114
"^DD",368,368,6.01,0)
INFORMATION RECEIVER NAME^F^^6;1^K:$L(X)>120!($L(X)<1) X
"^DD",368,368,6.01,3)
Answer must be 1-120 characters in length.
"^DD",368,368,6.01,21,0)
^^4^4^3150602^
"^DD",368,368,6.01,21,1,0)
This is the Information Receiver Name field received from the FSC ASC
"^DD",368,368,6.01,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.
"^DD",368,368,6.01,21,3,0)
The value is received via the PYE-4.1, 5.1, 5.2, 5.3 & 5.4 segments of
"^DD",368,368,6.01,21,4,0)
the 277 HL7 message.
"^DD",368,368,6.01,"DT")
3150602
"^DD",368,368,6.02,0)
INFORMATION RECEIVER ID^F^^6;2^K:$L(X)>80!($L(X)<1) X
"^DD",368,368,6.02,3)
Answer must be 1-80 characters in length.
"^DD",368,368,6.02,21,0)
^^3^3^3150602^
"^DD",368,368,6.02,21,1,0)
This is the Information Receiver ID field received from the FSC ASC X12N
"^DD",368,368,6.02,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The
"^DD",368,368,6.02,21,3,0)
value is received via the PYE-4 segment of the 277 HL7 message.
"^DD",368,368,6.02,"DT")
3150602
"^DD",368,368,7.01,0)
SERVICE PROVIDER NAME^F^^7;1^K:$L(X)>130!($L(X)<1) X
"^DD",368,368,7.01,3)
Answer must be 1-130 characters in length.
"^DD",368,368,7.01,21,0)
^^3^3^3150602^
"^DD",368,368,7.01,21,1,0)
This is the Service Provider Name field received from the FSC ASC X12N
"^DD",368,368,7.01,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The
"^DD",368,368,7.01,21,3,0)
value is received via the IVC-10.1 segment of the 277 HL7 message.
"^DD",368,368,7.01,"DT")
3150602
"^DD",368,368,7.02,0)
SERVICE PROV FED TAXPAYER CODE^F^^7;2^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,7.02,3)
Answer must be 1-2 characters in length.
"^DD",368,368,7.02,21,0)
^^4^4^3150602^
"^DD",368,368,7.02,21,1,0)
This is the Service Provider Federal Taxpayer Code field received from
"^DD",368,368,7.02,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information
"^DD",368,368,7.02,21,3,0)
(277) message.  The value is received via the IVC-26 segment of the 277
"^DD",368,368,7.02,21,4,0)
HL7 message.
"^DD",368,368,7.02,"DT")
3150602
"^DD",368,368,8.01,0)
SERVICE PROVIDER ID^F^^8;1^K:$L(X)>80!($L(X)<1) X
"^DD",368,368,8.01,3)
Answer must be 1-80 characters in length.
"^DD",368,368,8.01,21,0)
^^3^3^3150602^
"^DD",368,368,8.01,21,1,0)
This is the Service Provider ID field received from the FSC ASC X12N
"^DD",368,368,8.01,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The
"^DD",368,368,8.01,21,3,0)
value is received via the IVC-10.3 segment of the 277 HL7 message.
"^DD",368,368,8.01,"DT")
3150602
"^DD",368,368,9.01,0)
PATIENT NAME^F^^9;1^K:$L(X)>130!($L(X)<1) X
"^DD",368,368,9.01,3)
Answer must be 1-130 characters in length.
"^DD",368,368,9.01,21,0)
^^4^4^3150602^
"^DD",368,368,9.01,21,1,0)
This is the Patient Name field received from the FSC ASC X12N Health Care 
"^DD",368,368,9.01,21,2,0)
Claim Request For Additional Information (277) message.  The value is 
"^DD",368,368,9.01,21,3,0)
received via the PID-5.1. 5.2, 5,3, 5,4 & 5.5 segments of the 277 HL7 
"^DD",368,368,9.01,21,4,0)
message.
"^DD",368,368,9.01,"DT")
3150602
"^DD",368,368,10.01,0)
PATIENT PRIMARY IDENTIFIER^F^^10;1^K:$L(X)>80!($L(X)<1) X
"^DD",368,368,10.01,3)
Answer must be 1-80 characters in length.
"^DD",368,368,10.01,21,0)
^^3^3^3150602^
"^DD",368,368,10.01,21,1,0)
This is the Patient Primary Identifier field received from the FSC ASC
"^DD",368,368,10.01,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,10.01,21,3,0)
The value is received via the PID-3.1 segment of the 277 HL7 message.
"^DD",368,368,10.01,"DT")
3150602
"^DD",368,368,11.01,0)
PATIENT CONTROL NUMBER^F^^11;1^K:$L(X)>50!($L(X)<1) X
"^DD",368,368,11.01,3)
Answer must be 1-50 characters in length.
"^DD",368,368,11.01,21,0)
^^3^3^3150603^
"^DD",368,368,11.01,21,1,0)
This is the Patient Control Number field received from the FSC ASC X12N
"^DD",368,368,11.01,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The
"^DD",368,368,11.01,21,3,0)
value is received via the PID-3.1 segment of the 277 HL7 message.
"^DD",368,368,11.01,"DT")
3150603
"^DD",368,368,11.02,0)
PAYER CLAIM CONTROL NUMBER^F^^11;2^K:$L(X)>50!($L(X)<1) X
"^DD",368,368,11.02,3)
Answer must be 1-50 characters in length.
"^DD",368,368,11.02,21,0)
^^3^3^3150603^
"^DD",368,368,11.02,21,1,0)
This is the Payer Claim Control Number field received from the FSC ASC
"^DD",368,368,11.02,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,11.02,21,3,0)
The value is received via the IVC-2 segment of the 277 HL7 message.
"^DD",368,368,11.02,"DT")
3150603
"^DD",368,368,11.03,0)
MEDICAL RECORD NUMBER^F^^11;3^K:$L(X)>50!($L(X)<1) X
"^DD",368,368,11.03,3)
Answer must be 1-50 characters in length.
"^DD",368,368,11.03,21,0)
^^3^3^3150603^
"^DD",368,368,11.03,21,1,0)
This is the Medical Record Number field received from the FSC ASC X12N
"^DD",368,368,11.03,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The
"^DD",368,368,11.03,21,3,0)
value is received via the PID-3.1 segment of the 277 HL7 message.
"^DD",368,368,11.03,"DT")
3150603
"^DD",368,368,11.04,0)
CLEARINGHOUSE TRACE NUMBER^F^^11;4^K:$L(X)>50!($L(X)<1) X
"^DD",368,368,11.04,3)
Answer must be 1-50 characters in length.
"^DD",368,368,11.04,21,0)
^^4^4^3151201^
"^DD",368,368,11.04,21,1,0)
This is the Clearinghouse Trace Number field received from the FSC ASC 
"^DD",368,368,11.04,21,2,0)
X12N health Care Claim Request For Additional Information (277) 
"^DD",368,368,11.04,21,3,0)
message.  The value is received via the IVC-3.1 segment of the 277 HL 
"^DD",368,368,11.04,21,4,0)
message.
"^DD",368,368,11.04,"DT")
3151201
"^DD",368,368,12.01,0)
RESPONSE DUE DATE^F^^12;1^K:$L(X)>35!($L(X)<1) X
"^DD",368,368,12.01,3)
Answer must be 1-35 characters in length.
"^DD",368,368,12.01,21,0)
^^3^3^3150603^
"^DD",368,368,12.01,21,1,0)
This is the Response Due Date field received from the FSC ASC X12N Health
"^DD",368,368,12.01,21,2,0)
Care Claim Request For Additional Information (277) message.  The value
"^DD",368,368,12.01,21,3,0)
is received via the RFI-2 segment of the 277 HL7 message.
"^DD",368,368,12.01,"DT")
3150603
"^DD",368,368,12.02,0)
REPORT TRANSMISSION CODE^F^^12;2^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,12.02,3)
Answer must be 1-2 characters in length.
"^DD",368,368,12.02,21,0)
^^1^1^3151201^
"^DD",368,368,12.02,21,1,0)
This field will contain the Report Transmission Code.
"^DD",368,368,12.02,"DT")
3151201
"^DD",368,368,13,0)
STC SEQ^368.013^^13;0
"^DD",368,368,13,21,0)
^^3^3^3151201^
"^DD",368,368,13,21,1,0)
This multiple will contain Claim Level Status Information from the STC 
"^DD",368,368,13,21,2,0)
segment received from the FSC ASC X12N health Care Claim Request For 
"^DD",368,368,13,21,3,0)
Additional Information (277) HL7 message.
"^DD",368,368,13,"DT")
3151016
"^DD",368,368,14.03,0)
CLAIM SERVICE START DATE^F^^14;3^K:$L(X)>8!($L(X)<8) X
"^DD",368,368,14.03,3)
Answer must be 8 characters in length.
"^DD",368,368,14.03,21,0)
^^2^2^3160115^
"^DD",368,368,14.03,21,1,0)
This is the CLAIM SERVICE START DATE which is the first date from the 
"^DD",368,368,14.03,21,2,0)
CLAIM SERVICE PERIOD.
"^DD",368,368,14.03,"DT")
3160115
"^DD",368,368,14.04,0)
CLAIM SERVICE END DATE^F^^14;4^K:$L(X)>8!($L(X)<8) X
"^DD",368,368,14.04,3)
Answer must be 8 characters in length.
"^DD",368,368,14.04,21,0)
^^2^2^3160115^
"^DD",368,368,14.04,21,1,0)
This is the CLAIM SERVICE END DATE which is the last date from the 
"^DD",368,368,14.04,21,2,0)
CLAIM SERVICE PERIOD.
"^DD",368,368,14.04,"DT")
3160115
"^DD",368,368,14.05,0)
CLAIM SERVICE PERIOD^F^^14;5^K:$L(X)>35!($L(X)<1) X
"^DD",368,368,14.05,3)
Answer must be 1-35 characters in length.
"^DD",368,368,14.05,21,0)
^^3^3^3150604^
"^DD",368,368,14.05,21,1,0)
This is the Claim Status Period field received from the FSC ASC X12N
"^DD",368,368,14.05,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The
"^DD",368,368,14.05,21,3,0)
value is received via the IVC-7 segment of the 277 HL7 message.
"^DD",368,368,14.05,"DT")
3151020
"^DD",368,368,15.01,0)
PAYER RESPONSE CONTACT NAME^F^^15;1^K:$L(X)>60!($L(X)<1) X
"^DD",368,368,15.01,3)
Answer must be 1-60 characters in length.
"^DD",368,368,15.01,21,0)
^^4^4^3150604^
"^DD",368,368,15.01,21,1,0)
This is the Payer Response Contact Name field received from the FSC ASC
"^DD",368,368,15.01,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,15.01,21,3,0)
The value is received via the CTD-2.1 & 2.2 segments of the 277 HL7
"^DD",368,368,15.01,21,4,0)
message.
"^DD",368,368,15.01,"DT")
3150604
"^DD",368,368,16.01,0)
PAYER RESP CONTACT COMM TYPE 1^F^^16;1^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,16.01,3)
Answer must be 1-2 characters in length.
"^DD",368,368,16.01,21,0)
^^4^4^3150604^
"^DD",368,368,16.01,21,1,0)
This is the Payer Response Contact Communication Type 1 field received
"^DD",368,368,16.01,21,2,0)
from the FSC ASC X12N Health Care Claim Request For Additional
"^DD",368,368,16.01,21,3,0)
Information (277) message.  The value is received via the CTD-5.1 & 5.2
"^DD",368,368,16.01,21,4,0)
segments of the 277 HL7 message.
"^DD",368,368,16.01,"DT")
3150604
"^DD",368,368,16.02,0)
PAYER RESP CONTACT COMM TYPE 2^F^^16;2^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,16.02,3)
Answer must be 1-2 characters in length.
"^DD",368,368,16.02,21,0)
^^4^4^3150604^
"^DD",368,368,16.02,21,1,0)
This is the Payer Response Contact Communication Type 2 field received
"^DD",368,368,16.02,21,2,0)
from the FSC ASC X12N Health Care Claim Request For Additional
"^DD",368,368,16.02,21,3,0)
Information (277) message.  The value is received via the CTD-5.1 & 5.2
"^DD",368,368,16.02,21,4,0)
segments of the 277 HL7 message.
"^DD",368,368,16.02,"DT")
3150604
"^DD",368,368,16.03,0)
PAYER RESP CONTACT COMM TYPE 3^F^^16;3^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,16.03,3)
Answer must be 1-2 characters in length.
"^DD",368,368,16.03,21,0)
^^4^4^3150604^
"^DD",368,368,16.03,21,1,0)
This is the Payer Response Contact Communication Type 3 field received
"^DD",368,368,16.03,21,2,0)
from the FSC ASC X12N Health Care Claim Request For Additional
"^DD",368,368,16.03,21,3,0)
Information (277) message.  The value is received via the CTD-5.1 & 5.2
"^DD",368,368,16.03,21,4,0)
segments of the 277 HL7 message.
"^DD",368,368,16.03,"DT")
3150604
"^DD",368,368,17.01,0)
PAYER RESPONSE CONTACT COMM 1^F^^17;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,17.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,17.01,21,0)
^^4^4^3160114^
"^DD",368,368,17.01,21,1,0)
This is the Payer Response Contact Communication 1 field received from
"^DD",368,368,17.01,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information
"^DD",368,368,17.01,21,3,0)
(277) message.  The value is received via the CTD-5.8 segment of
"^DD",368,368,17.01,21,4,0)
the 277 HL7 message.
"^DD",368,368,17.01,"DT")
3160114
"^DD",368,368,18.01,0)
PAYER RESPONSE CONTACT COMM 2^F^^18;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,18.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,18.01,21,0)
^^4^4^3160114^
"^DD",368,368,18.01,21,1,0)
This is the Payer Response Contact Communication 2 field received from 
"^DD",368,368,18.01,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,18.01,21,3,0)
(277) message.  The value is received via the CTD-5.8 segment of 
"^DD",368,368,18.01,21,4,0)
the 277 HL7 message.
"^DD",368,368,18.01,"DT")
3160114
"^DD",368,368,19.01,0)
PAYER RESPONSE CONTACT COMM 3^F^^19;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,19.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,19.01,21,0)
^^4^4^3160114^
"^DD",368,368,19.01,21,1,0)
This is the Payer Response Contact Communication 3 field received from
"^DD",368,368,19.01,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information
"^DD",368,368,19.01,21,3,0)
(277) message.  The value is received via the CTD-5.8 segment of
"^DD",368,368,19.01,21,4,0)
the 277 HL7 message.
"^DD",368,368,19.01,"DT")
3160114
"^DD",368,368,20.01,0)
PAYER RESP CONTACT ADDR LINE 1^F^^20;1^K:$L(X)>55!($L(X)<1) X
"^DD",368,368,20.01,3)
Answer must be 1-55 characters in length.
"^DD",368,368,20.01,21,0)
^^4^4^3150604^
"^DD",368,368,20.01,21,1,0)
This is the Payer Response Contact Address Line 1 field received from the
"^DD",368,368,20.01,21,2,0)
FSC ASC X12N Health Care Claim Request For Additional Information (277)
"^DD",368,368,20.01,21,3,0)
message.  The value is received via the CTD-3.1 segment of the 277 HL7
"^DD",368,368,20.01,21,4,0)
message.
"^DD",368,368,20.01,"DT")
3150604
"^DD",368,368,20.02,0)
PAYER RESP CONTACT ADDR LINE 2^F^^20;2^K:$L(X)>55!($L(X)<1) X
"^DD",368,368,20.02,3)
Answer must be 1-55 characters in length.
"^DD",368,368,20.02,21,0)
^^4^4^3150604^
"^DD",368,368,20.02,21,1,0)
This is the Payer Response Contact Address Line 2 field received from the
"^DD",368,368,20.02,21,2,0)
FSC ASC X12N Health Care Claim Request For Additional Information (277)
"^DD",368,368,20.02,21,3,0)
message.  The value is received via the CTD-3.2 segment of the 277 HL7
"^DD",368,368,20.02,21,4,0)
message.
"^DD",368,368,20.02,"DT")
3150604
"^DD",368,368,20.03,0)
PAYER RESP CONTACT CITY^F^^20;3^K:$L(X)>30!($L(X)<1) X
"^DD",368,368,20.03,3)
Answer must be 1-30 characters in length.
"^DD",368,368,20.03,21,0)
^^3^3^3150604^
"^DD",368,368,20.03,21,1,0)
This is the Payer Response Contact City field received from the FSC ASC
"^DD",368,368,20.03,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,20.03,21,3,0)
The value is received via the CTD-3.3 segment of the 277 HL7 message.
"^DD",368,368,20.03,"DT")
3150604
"^DD",368,368,20.04,0)
PAYER RESP CONTACT STATE^F^^20;4^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,20.04,3)
Answer must be 1-2 characters in length.
"^DD",368,368,20.04,21,0)
^^3^3^3150604^
"^DD",368,368,20.04,21,1,0)
This is the Payer Response Contact State field received from the FSC ASC
"^DD",368,368,20.04,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message. 
"^DD",368,368,20.04,21,3,0)
The value is received via the CTD-3.4 segment of the 277 HL7 message.
"^DD",368,368,20.04,"DT")
3150604
"^DD",368,368,20.05,0)
PAYER RESP CONTACT ZIP CODE^F^^20;5^K:$L(X)>15!($L(X)<1) X
"^DD",368,368,20.05,3)
Answer must be 1-15 characters in length.
"^DD",368,368,20.05,21,0)
^^4^4^3150604^
"^DD",368,368,20.05,21,1,0)
This is the Payer Response Contact Zip Code field received from the FSC 
"^DD",368,368,20.05,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277) 
"^DD",368,368,20.05,21,3,0)
message.  The value is received via the CTD-3.5 segment of the 277 HL7 
"^DD",368,368,20.05,21,4,0)
message.
"^DD",368,368,20.05,"DT")
3150604
"^DD",368,368,20.06,0)
PAYER RESP CONTACT COUNTRY^F^^20;6^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,20.06,3)
Answer must be 1-3 characters in length.
"^DD",368,368,20.06,21,0)
^^4^4^3150604^
"^DD",368,368,20.06,21,1,0)
This is the Payer Response Contact Country field received from the FSC
"^DD",368,368,20.06,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277)
"^DD",368,368,20.06,21,3,0)
message.  The value is received via the CTD-3.6 segment of the 277 HL7
"^DD",368,368,20.06,21,4,0)
message.
"^DD",368,368,20.06,"DT")
3150604
"^DD",368,368,20.07,0)
PAYER RESP CONT CNTRY SUBDIV^F^^20;7^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,20.07,3)
Answer must be 1-3 characters in length.
"^DD",368,368,20.07,21,0)
^^4^4^3151109^
"^DD",368,368,20.07,21,1,0)
This is the Payer Response Contact Country Subdivision field received 
"^DD",368,368,20.07,21,2,0)
from the FSC ASC X12N Health Care Claim Request For Additional 
"^DD",368,368,20.07,21,3,0)
Information (277) message.  The value is received via the CTD-3.8 segment 
"^DD",368,368,20.07,21,4,0)
of the 277 HL7 message.
"^DD",368,368,20.07,"DT")
3151109
"^DD",368,368,21,0)
STC-SVC LINE STAT INFO SEQ^368.021^^21;0
"^DD",368,368,21,21,0)
^^3^3^3151201^
"^DD",368,368,21,21,1,0)
This multiple field will contain Service Line Status Information 
"^DD",368,368,21,21,2,0)
received from the FSC ASC X12N HEALTH Care Claim Request For Additional 
"^DD",368,368,21,21,3,0)
Information (277) HL message.
"^DD",368,368,22.03,0)
PRIMARY LOINC^F^^22;3^K:$L(X)>30!($L(X)<1) X
"^DD",368,368,22.03,3)
Answer must be 1-30 characters in length.
"^DD",368,368,22.03,21,0)
^^4^4^3151123^
"^DD",368,368,22.03,21,1,0)
This is the Primary LYNC field received from the FSC ASC X12N Health Care 
"^DD",368,368,22.03,21,2,0)
Claim Request for Additional Information (277) message.  The value will 
"^DD",368,368,22.03,21,3,0)
be populated with the LOINC code from the claim level if available, 
"^DD",368,368,22.03,21,4,0)
otherwise the LOINC code from the line level.
"^DD",368,368,22.03,"DT")
3151123
"^DD",368,368,25.01,0)
REFERENCE ID-INST TYPE OF BILL^F^^25;1^K:$L(X)>50!($L(X)<1) X
"^DD",368,368,25.01,3)
Answer must be 1-50 characters in length.
"^DD",368,368,25.01,21,0)
^^4^4^3151109^
"^DD",368,368,25.01,21,1,0)
This is the Reference ID-Institutional Type of Bill field received from 
"^DD",368,368,25.01,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,25.01,21,3,0)
(277) message.  The value is received via the IVC-20.1 segment of the 277 
"^DD",368,368,25.01,21,4,0)
HL7 message.
"^DD",368,368,25.01,"DT")
3151109
"^DD",368,368,26.01,0)
PAYER CONTACT COMM 1 EXTENSION^F^^26;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,26.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,26.01,21,0)
^^4^4^3160114^
"^DD",368,368,26.01,21,1,0)
This is the Payer Contact Communication 1 Extension field received from 
"^DD",368,368,26.01,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,26.01,21,3,0)
(277) message.  The value is received via the CTD-5.7 segment of the 277 
"^DD",368,368,26.01,21,4,0)
HL7 message.
"^DD",368,368,26.01,"DT")
3160114
"^DD",368,368,27.01,0)
PAYER CONTACT COMM 2 EXTENSION^F^^27;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,27.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,27.01,21,0)
^^4^4^3160114^
"^DD",368,368,27.01,21,1,0)
This is the Payer Contact Communication 2 Extension field received from 
"^DD",368,368,27.01,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,27.01,21,3,0)
(277) message.  The value is received via the CTD-5.7 segment of the 277 
"^DD",368,368,27.01,21,4,0)
HL7 message.
"^DD",368,368,27.01,"DT")
3160114
"^DD",368,368,28.01,0)
PAYER CONTACT COMM 3 EXTENSION^F^^28;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,28.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,28.01,21,0)
^^4^4^3160114^
"^DD",368,368,28.01,21,1,0)
This is the Payer Contact Communication 3 Extension field received from 
"^DD",368,368,28.01,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,28.01,21,3,0)
(277) message.  The value is received via the CTD-5.7 segment of the 277 
"^DD",368,368,28.01,21,4,0)
HL7 message.
"^DD",368,368,28.01,"DT")
3160114
"^DD",368,368,29.01,0)
PAYER RESP CONTACT COMM 1 EXT^F^^29;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,29.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,29.01,21,0)
^^4^4^3160114^
"^DD",368,368,29.01,21,1,0)
This is the Payer Response Contact Communication 1 Extension field 
"^DD",368,368,29.01,21,2,0)
received from the FSC ASC X12N Health Care Claim Request For Additional 
"^DD",368,368,29.01,21,3,0)
Information (277) message.  The value is received via the CTD-5.8 segment 
"^DD",368,368,29.01,21,4,0)
of the 277 HL7 message.
"^DD",368,368,29.01,"DT")
3160114
"^DD",368,368,30.01,0)
PAYER RESP CONTACT COMM 2 EXT^F^^30;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,30.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,30.01,21,0)
^^4^4^3160114^
"^DD",368,368,30.01,21,1,0)
This is the Payer Response Contact Communication 2 Extension field 
"^DD",368,368,30.01,21,2,0)
received from the FSC ASC X12N Health Care Claim Request For Additional 
"^DD",368,368,30.01,21,3,0)
Information (277) message.  The value is received via the CTD-5.8 segment 
"^DD",368,368,30.01,21,4,0)
of the 277 HL7 message.
"^DD",368,368,30.01,"DT")
3160114
"^DD",368,368,31.01,0)
PAYER RESP CONTACT COMM 3 EXT^F^^31;1^K:$L(X)>250!($L(X)<1) X
"^DD",368,368,31.01,3)
Answer must be 1-250 characters in length.
"^DD",368,368,31.01,21,0)
^^4^4^3160114^
"^DD",368,368,31.01,21,1,0)
This is the Payer Response Contact Communication 3 Extension field 
"^DD",368,368,31.01,21,2,0)
received from the FSC ASC X12N Health Care Claim Request For Additional 
"^DD",368,368,31.01,21,3,0)
Information (277) message.  The value is received via the CTD-5.8 segment 
"^DD",368,368,31.01,21,4,0)
of the 277 HL7 message.
"^DD",368,368,31.01,"DT")
3160114
"^DD",368,368,80.01,0)
PAYER ENTITY IDENTIFIER CODE^F^^80;1^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.01,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.01,21,0)
^^3^3^3151109^
"^DD",368,368,80.01,21,1,0)
This is the Payer Entity Identifier Code field received from the FSC ASC 
"^DD",368,368,80.01,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368,80.01,21,3,0)
The value is received via the IVC-11.10 segment of the 277 HL7 message.
"^DD",368,368,80.01,"DT")
3151109
"^DD",368,368,80.02,0)
PAYER ENTITY TYPE QUALIFIER^F^^80;2^K:$L(X)>1!($L(X)<1) X
"^DD",368,368,80.02,3)
Answer must be 1 character in length.
"^DD",368,368,80.02,21,0)
^^3^3^3151109^
"^DD",368,368,80.02,21,1,0)
This is the Payer Entity Type Qualifier field received from the FSC ASC 
"^DD",368,368,80.02,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368,80.02,21,3,0)
The value is received via the IVC-11.2 segment of the 277 HL7 message.
"^DD",368,368,80.02,"DT")
3151109
"^DD",368,368,80.03,0)
PAYER ID CODE QUALIFIER^F^^80;3^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.03,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.03,21,0)
^^3^3^3151109^
"^DD",368,368,80.03,21,1,0)
This is the Payer ID Code Qualifier field received from the FSC ASC X12N 
"^DD",368,368,80.03,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368,80.03,21,3,0)
value is received via the IVC-11.7 segment of the 277 HL7 message.
"^DD",368,368,80.03,"DT")
3151109
"^DD",368,368,80.04,0)
PAYER CONTACT FUNCTION CODE^F^^80;4^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.04,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.04,21,0)
^^3^3^3151109^
"^DD",368,368,80.04,21,1,0)
This is the Payer Contact Function Code field received from the FSC ASC 
"^DD",368,368,80.04,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368,80.04,21,3,0)
The value is received via the CTD-2 segment of the 277 HL7 message.
"^DD",368,368,80.04,"DT")
3151109
"^DD",368,368,80.05,0)
INFORMATION RECEIVER ENTITY ID^F^^80;5^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.05,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.05,21,0)
^^3^3^3151109^
"^DD",368,368,80.05,21,1,0)
This is the Payer Contact Function Code field received from the FSC ASC 
"^DD",368,368,80.05,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368,80.05,21,3,0)
The value is received via the PYE-2 segment of the 277 HL7 message.
"^DD",368,368,80.05,"DT")
3151109
"^DD",368,368,80.06,0)
INFO RECEIVER ENTITY TYPE^F^^80;6^K:$L(X)>1!($L(X)<1) X
"^DD",368,368,80.06,3)
Answer must be 1 character in length.
"^DD",368,368,80.06,21,0)
^^3^3^3151201^
"^DD",368,368,80.06,21,1,0)
This field will contain the Information Receiver Entity Type field 
"^DD",368,368,80.06,21,2,0)
received from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,80.06,21,3,0)
Information (277) HL7 message
"^DD",368,368,80.06,"DT")
3151201
"^DD",368,368,80.07,0)
INFO RECEIVER ID QUALIFIER^F^^80;7^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.07,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.07,21,0)
^^4^4^3151109^
"^DD",368,368,80.07,21,1,0)
This is the Information Receiver ID Qualifier field received from the FSC 
"^DD",368,368,80.07,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277) 
"^DD",368,368,80.07,21,3,0)
message.  The value is received via the PYE-4.7 segment of the 277 HL7 
"^DD",368,368,80.07,21,4,0)
message.
"^DD",368,368,80.07,"DT")
3151109
"^DD",368,368,80.08,0)
SERVICE PROV ENTITY ID CODE^F^^80;8^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.08,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.08,21,0)
^^3^3^3151201^
"^DD",368,368,80.08,21,1,0)
This field will contain the Service Provider Entity ID Code received from 
"^DD",368,368,80.08,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368,80.08,21,3,0)
(277) HL7 message.
"^DD",368,368,80.08,"DT")
3151201
"^DD",368,368,80.09,0)
SERVICE PROV ENTITY TYPE QUAL^F^^80;9^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.09,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.09,21,0)
^^4^4^3151109^
"^DD",368,368,80.09,21,1,0)
This is the Service Provider Entity Type Qualifier field received from 
"^DD",368,368,80.09,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,80.09,21,3,0)
(277) message.  The value is received via the IVC-10.2 segment of the 277 
"^DD",368,368,80.09,21,4,0)
HL7 message.
"^DD",368,368,80.09,"DT")
3160114
"^DD",368,368,80.1,0)
SERVICE PROVIDER ID QUALIFIER^F^^80;10^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.1,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.1,21,0)
^^3^3^3151109^
"^DD",368,368,80.1,21,1,0)
This is the Service Provider ID Qualifier field received from the FSC ASC 
"^DD",368,368,80.1,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368,80.1,21,3,0)
The value is received via the IVC-28 segment of the 277 HL7 message.
"^DD",368,368,80.1,"DT")
3151109
"^DD",368,368,80.11,0)
PATIENT ENTITY IDENTIFIER CODE^F^^80;11^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.11,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.11,21,0)
^^3^3^3151201^
"^DD",368,368,80.11,21,1,0)
This field will contain the Patient Entity Identifier Code received from 
"^DD",368,368,80.11,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368,80.11,21,3,0)
(277) HL7 message.
"^DD",368,368,80.11,"DT")
3151201
"^DD",368,368,80.12,0)
PATIENT ENTITY TYPE QUALIFIER^F^^80;12^K:$L(X)>1!($L(X)<1) X
"^DD",368,368,80.12,3)
Answer must be 1 character in length.
"^DD",368,368,80.12,21,0)
^^3^3^3151201^
"^DD",368,368,80.12,21,1,0)
This field will contain the Patient Entity Type Qualifier received from 
"^DD",368,368,80.12,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368,80.12,21,3,0)
(277) HL7 message.
"^DD",368,368,80.12,"DT")
3151201
"^DD",368,368,80.13,0)
PATIENT ID CODE QUALIFIER^F^^80;13^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.13,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.13,21,0)
^^3^3^3151201^
"^DD",368,368,80.13,21,1,0)
This field will contain the Patient ID Code Qualifier received from the 
"^DD",368,368,80.13,21,2,0)
FSC ASC X12N health Care Claim Request For Additional Information (277) 
"^DD",368,368,80.13,21,3,0)
HL7 message.
"^DD",368,368,80.13,"DT")
3151201
"^DD",368,368,80.14,0)
PAYER CLAIM TRACE TYPE CODE^F^^80;14^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.14,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.14,21,0)
^^3^3^3151109^
"^DD",368,368,80.14,21,1,0)
This is the Payer Claim Trace Type Code field received from the FSC ASC 
"^DD",368,368,80.14,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368,80.14,21,3,0)
The value is received via the IVC-2.4 segment of the 277 HL7 message.
"^DD",368,368,80.14,"DT")
3151109
"^DD",368,368,80.18,0)
REFERENCE ID QUALIFIER-PT CRTL^F^^80;18^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.18,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.18,21,0)
^^4^4^3151109^
"^DD",368,368,80.18,21,1,0)
This is the Reference ID Qualifier-Patient Control field received from 
"^DD",368,368,80.18,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,80.18,21,3,0)
(277) message.  The value is received via the IVC-1.4 segment of the 277 
"^DD",368,368,80.18,21,4,0)
HL7 message.
"^DD",368,368,80.18,"DT")
3151109
"^DD",368,368,80.19,0)
REFERENCE ID QUALIFIER-INST^F^^80;19^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.19,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.19,21,0)
^^4^4^3151201^
"^DD",368,368,80.19,21,1,0)
This is the Reference ID Qualifier-Institution field received from the FSC
"^DD",368,368,80.19,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277) 
"^DD",368,368,80.19,21,3,0)
message.  The value is received via the IVC-20.5 segment of the 277 HL7 
"^DD",368,368,80.19,21,4,0)
message.
"^DD",368,368,80.19,"DT")
3151201
"^DD",368,368,80.2,0)
REFERENCE ID QUALIFIER-MRN^F^^80;20^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.2,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.2,21,0)
^^3^3^3151201^
"^DD",368,368,80.2,21,1,0)
This field will contain the Reference ID Qualifier - MRN received from 
"^DD",368,368,80.2,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368,80.2,21,3,0)
(277) HL7 message.
"^DD",368,368,80.2,"DT")
3151201
"^DD",368,368,80.21,0)
REFERENCE ID QUALIFIER-CTN^F^^80;21^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.21,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.21,21,0)
^^3^3^3151110^
"^DD",368,368,80.21,21,1,0)
This is the Reference ID Qualifier-CTN field received from the FSC ASC 
"^DD",368,368,80.21,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368,80.21,21,3,0)
The value is received via the IVC-3.4 segment of the 277 HL7 message.
"^DD",368,368,80.21,"DT")
3151110
"^DD",368,368,80.22,0)
CLAIM SERVICE DT/TM QUALIFIER^F^^80;22^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.22,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.22,21,0)
^^3^3^3151201^
"^DD",368,368,80.22,21,1,0)
This field will contain the Claim Service Date/Time Qualifier received 
"^DD",368,368,80.22,21,2,0)
from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,80.22,21,3,0)
Information (277) HL7 message.
"^DD",368,368,80.22,"DT")
3151201
"^DD",368,368,80.23,0)
CLAIM SERV DT/TM PERIOD QUAL^F^^80;23^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.23,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.23,21,0)
^^3^3^3151201^
"^DD",368,368,80.23,21,1,0)
This field will contain the Claim Service Date/Time Period Qualifier 
"^DD",368,368,80.23,21,2,0)
received from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,80.23,21,3,0)
Information (277) HL7 message.
"^DD",368,368,80.23,"DT")
3151201
"^DD",368,368,80.24,0)
RESPONSE DUE DT/TM QUALIFIER^F^^80;24^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.24,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.24,21,0)
^^3^3^3151201^
"^DD",368,368,80.24,21,1,0)
This field will contain the Response Due Date/Time Qualifier received 
"^DD",368,368,80.24,21,2,0)
from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,80.24,21,3,0)
Information (277) HL7 message.
"^DD",368,368,80.24,"DT")
3151201
"^DD",368,368,80.25,0)
RESPONSE DUE DT/TM PERIOD QUAL^F^^80;25^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.25,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.25,21,0)
^^3^3^3151201^
"^DD",368,368,80.25,21,1,0)
This field will contain the Response Due Date/Time Period Qualifier 
"^DD",368,368,80.25,21,2,0)
received from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,80.25,21,3,0)
Information (277) HL7 message.
"^DD",368,368,80.25,"DT")
3151201
"^DD",368,368,80.26,0)
CLAIM SUPP INFO REPORT TYPE^F^^80;26^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.26,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.26,21,0)
^^4^4^3151201^
"^DD",368,368,80.26,21,1,0)
This is the Claim Supplemental Information Report Type field received from
"^DD",368,368,80.26,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368,80.26,21,3,0)
(277) message.  The value is received via the IVC-5 segment of the 277 
"^DD",368,368,80.26,21,4,0)
HL7 message.
"^DD",368,368,80.26,"DT")
3151201
"^DD",368,368,80.27,0)
PAYER RESP CONTACT FUNC CODE^F^^80;27^K:$L(X)>2!($L(X)<1) X
"^DD",368,368,80.27,3)
Answer must be 1-2 characters in length.
"^DD",368,368,80.27,21,0)
^^4^4^3151110^
"^DD",368,368,80.27,21,1,0)
This is the Payer Response Contact Function Code field received from the 
"^DD",368,368,80.27,21,2,0)
FSC ASC X12N Health Care Claim Request For Additional Information (277) 
"^DD",368,368,80.27,21,3,0)
message.  The value is received via the CTD-2 segment of the 277 HL7 
"^DD",368,368,80.27,21,4,0)
message.
"^DD",368,368,80.27,"DT")
3151110
"^DD",368,368,80.29,0)
SERVICE LINE DT/TM QUALIFIER^F^^80;29^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.29,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.29,21,0)
^^3^3^3151201^
"^DD",368,368,80.29,21,1,0)
This field will contain the Service Line Date/Time Qualifier field 
"^DD",368,368,80.29,21,2,0)
received from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,80.29,21,3,0)
Information (277) HL7 message.
"^DD",368,368,80.29,"DT")
3151201
"^DD",368,368,80.3,0)
SERVICE LINE DT/TM PERIOD QUAL^F^^80;30^K:$L(X)>3!($L(X)<1) X
"^DD",368,368,80.3,3)
Answer must be 1-3 characters in length.
"^DD",368,368,80.3,21,0)
^^3^3^3151201^
"^DD",368,368,80.3,21,1,0)
This field will contain the Service Line Date/Time Period Qualifier field 
"^DD",368,368,80.3,21,2,0)
received from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,80.3,21,3,0)
Information (277) HL7 message.
"^DD",368,368,80.3,"DT")
3151201
"^DD",368,368,100.02,0)
REQUEST DATE/TIME [D]^D^^100;2^S %DT="ETXR" D ^%DT S X=Y K:X<1 X
"^DD",368,368,100.02,3)
Enter the Request Date/Time.
"^DD",368,368,100.02,21,0)
^^1^1^3151110^
"^DD",368,368,100.02,21,1,0)
This field is derived from the REQUEST DATE/TIME field (#.02).
"^DD",368,368,100.02,"DT")
3151201
"^DD",368,368,100.03,0)
MESSAGE DATE/TIME [D]^D^^100;3^S %DT="ETXR" D ^%DT S X=Y K:X<1 X
"^DD",368,368,100.03,3)
Enter the Message Date/Time.
"^DD",368,368,100.03,21,0)
^^1^1^3151110^
"^DD",368,368,100.03,21,1,0)
This field is derived from the MESSAGE DATE/TIME field (#.03).
"^DD",368,368,100.03,"DT")
3151201
"^DD",368,368,101.01,0)
PAYER NAME [D]^P36'^DIC(36,^101;1^Q
"^DD",368,368,101.01,3)
Answer must be one of the entries available.
"^DD",368,368,101.01,21,0)
^^1^1^3151110^
"^DD",368,368,101.01,21,1,0)
This field is derived from the PAYER NAME field (#1.01).
"^DD",368,368,101.01,"DT")
3151201
"^DD",368,368,102.01,0)
PAYER CONTACT COMM TYPE 1 [D]^P365.021'^IBE(365.021,^102;1^Q
"^DD",368,368,102.01,3)
Answer must be one of the entries available.
"^DD",368,368,102.01,21,0)
^^2^2^3151111^
"^DD",368,368,102.01,21,1,0)
This field is derived from the PAYER CONTACT COMMUNICATION TYPE 1 field 
"^DD",368,368,102.01,21,2,0)
(#2.01).
"^DD",368,368,102.01,"DT")
3151201
"^DD",368,368,102.02,0)
PAYER CONTACT COMM TYPE 2 [D]^P365.021'^IBE(365.021,^102;2^Q
"^DD",368,368,102.02,3)
Answer must be one of the existing entries.
"^DD",368,368,102.02,21,0)
^^2^2^3151123^
"^DD",368,368,102.02,21,1,0)
This field is derived from the PAYER CONTACT COMMUNICATION TYPE 2 field 
"^DD",368,368,102.02,21,2,0)
(#2.02).
"^DD",368,368,102.02,"DT")
3151123
"^DD",368,368,102.03,0)
PAYER CONTACT COMM TYPE 3 [D]^P365.021'^IBE(365.021,^102;3^Q
"^DD",368,368,102.03,3)
Answer must be one of the existing entries.
"^DD",368,368,102.03,21,0)
^^2^2^3151123^
"^DD",368,368,102.03,21,1,0)
This field is derived from the PAYER CONTACT COMMUNICATION TYPE 3 field 
"^DD",368,368,102.03,21,2,0)
(#2.03).                                                         
"^DD",368,368,102.03,"DT")
3151123
"^DD",368,368,109.01,0)
PATIENT NAME [D]^P2'^DPT(^109;1^Q
"^DD",368,368,109.01,3)
Answer must be one of the existing entries.
"^DD",368,368,109.01,21,0)
^^1^1^3151111^
"^DD",368,368,109.01,21,1,0)
This field is derived from the PATIENT NAME field (#9.01).
"^DD",368,368,109.01,"DT")
3151201
"^DD",368,368,111.01,0)
PATIENT CONTROL NUMBER [D]^P399'^DGCR(399,^111;1^Q
"^DD",368,368,111.01,1,0)
^.1
"^DD",368,368,111.01,1,1,0)
368^D
"^DD",368,368,111.01,1,1,1)
S ^IBA(368,"D",$E(X,1,30),DA)=""
"^DD",368,368,111.01,1,1,2)
K ^IBA(368,"D",$E(X,1,30),DA)
"^DD",368,368,111.01,1,1,"DT")
3150903
"^DD",368,368,111.01,3)
Answer must be one of the existing entries.
"^DD",368,368,111.01,21,0)
^^1^1^3151111^
"^DD",368,368,111.01,21,1,0)
This field is derived from the PATIENT CONTROL NUMBER field (#11.01).
"^DD",368,368,111.01,"DT")
3151201
"^DD",368,368,112.01,0)
RESPONSE DUE DATE [D]^D^^112;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",368,368,112.01,3)
Enter the Response Due Date.
"^DD",368,368,112.01,21,0)
^^1^1^3151111^
"^DD",368,368,112.01,21,1,0)
This field is derived from the RESPONSE DUE DATE field (#12.01).
"^DD",368,368,112.01,"DT")
3151201
"^DD",368,368,113,0)
STC SEQ [D]^368.0113A^^113;0
"^DD",368,368,113,21,0)
^.001^2^2^3160222^^
"^DD",368,368,113,21,1,0)
This field will contain the STC SEQ field received from the FSC ASC X12N 
"^DD",368,368,113,21,2,0)
health Care Claim Request For Additional Information (277) HL7 message.
"^DD",368,368,114.03,0)
CLAIM SERVICE START DATE [D]^D^^114;3^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",368,368,114.03,3)
Enter the Claim Service Start Date
"^DD",368,368,114.03,21,0)
^^1^1^3160601^^
"^DD",368,368,114.03,21,1,0)
This is the CLAIM SERVICE START DATE which is the first date from the CLAIM SERVICE PERIOD.
"^DD",368,368,114.03,"DT")
3160601
"^DD",368,368,114.04,0)
CLAIM SERVICE END DATE [D]^D^^114;4^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",368,368,114.04,3)
Enter the Claim Service End Date
"^DD",368,368,114.04,21,0)
^^1^1^3160601^
"^DD",368,368,114.04,21,1,0)
This is the CLAIM SERVICE END DATE which is the last date from the CLAIM SERVICE PERIOD.
"^DD",368,368,114.04,"DT")
3160601
"^DD",368,368,116.01,0)
PAYER RESP CONT COM TYPE 1 [D]^P365.021'^IBE(365.021,^116;1^Q
"^DD",368,368,116.01,3)
Answer must be one of the existing entries. 
"^DD",368,368,116.01,21,0)
^^2^2^3151123^
"^DD",368,368,116.01,21,1,0)
This field is derived from the PAYER RESP CONTACT COMM TYPE 1 field 
"^DD",368,368,116.01,21,2,0)
(#16.01).
"^DD",368,368,116.01,"DT")
3151201
"^DD",368,368,116.02,0)
PAYER RESP CONT COM TYPE 2 [D]^P365.021'^IBE(365.021,^116;2^Q
"^DD",368,368,116.02,3)
Answer must be one of the existing entries. 
"^DD",368,368,116.02,21,0)
^^2^2^3151123^
"^DD",368,368,116.02,21,1,0)
This field is derived from the PAYER RESP CONTACT COMM TYPE 2 field 
"^DD",368,368,116.02,21,2,0)
(#16.02).
"^DD",368,368,116.02,"DT")
3151201
"^DD",368,368,116.03,0)
PAYER RESP CONT COM TYPE 3 [D]^P365.021'^IBE(365.021,^116;3^Q
"^DD",368,368,116.03,3)
Answer must be one of the existing entries. 
"^DD",368,368,116.03,21,0)
^^2^2^3151123^
"^DD",368,368,116.03,21,1,0)
This field is derived from the PAYER RESP CONTACT COMM TYPE 3 field 
"^DD",368,368,116.03,21,2,0)
(#16.03).
"^DD",368,368,116.03,"DT")
3151201
"^DD",368,368,120.04,0)
PAYER RESP CONTACT ADDR ST [D]^P5'^DIC(5,^120;4^Q
"^DD",368,368,120.04,3)
Answer must be one of the existing entries. 
"^DD",368,368,120.04,21,0)
^^2^2^3151112^
"^DD",368,368,120.04,21,1,0)
This field is derived from the PAYER RESPONSE CONTACT ADDRESS STREET 
"^DD",368,368,120.04,21,2,0)
field (#20.04).
"^DD",368,368,120.04,"DT")
3151201
"^DD",368,368,120.05,0)
PAYER RESP CONT POSTAL/ZIP [D]^P5.11'^VIC(5.11,^120;5^Q
"^DD",368,368,120.05,3)
Answer must be one of the existing entries. 
"^DD",368,368,120.05,21,0)
^^2^2^3151112^
"^DD",368,368,120.05,21,1,0)
This field is derived from the PAYER RESPONSE CONTACT POSTAL/ZIP field 
"^DD",368,368,120.05,21,2,0)
(#20.05).
"^DD",368,368,120.05,"DT")
3151201
"^DD",368,368,120.06,0)
PAYER RESP CONTACT COUNTRY [D]^P779.004'^HL(779.004,^120;6^Q
"^DD",368,368,120.06,3)
Answer must be one of the existing entries. 
"^DD",368,368,120.06,21,0)
^^2^2^3151112^
"^DD",368,368,120.06,21,1,0)
This field is derived from the PAYER RESPONSE CONTACT COUNTRY field 
"^DD",368,368,120.06,21,2,0)
(#20.06).
"^DD",368,368,120.06,"DT")
3151201
"^DD",368,368,121,0)
STC-SVC LINE STAT INFO SEQ [D]^368.0121A^^121;0
"^DD",368,368,121,21,0)
^.001^3^3^3160222^^
"^DD",368,368,121,21,1,0)
This field will contain the STC-SVC Line Status Information Seq field 
"^DD",368,368,121,21,2,0)
received from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368,121,21,3,0)
Information (277) HL7 message.
"^DD",368,368,200.01,0)
DELETED FLAG^S^0:Not Deleted;1:Deleted;^200;1^Q
"^DD",368,368,200.01,1,0)
^.1
"^DD",368,368,200.01,1,1,0)
368^E
"^DD",368,368,200.01,1,1,1)
S ^IBA(368,"E",$E(X,1,30),DA)=""
"^DD",368,368,200.01,1,1,2)
K ^IBA(368,"E",$E(X,1,30),DA)
"^DD",368,368,200.01,1,1,"DT")
3150903
"^DD",368,368,200.01,3)
Enter 1 to indicate the Message was manually deleted. Otherwise enter 0.
"^DD",368,368,200.01,21,0)
^^2^2^3150903^
"^DD",368,368,200.01,21,1,0)
Used to flag the Message as being manually deleted (1) or still active 
"^DD",368,368,200.01,21,2,0)
(0).
"^DD",368,368,200.01,"DT")
3151201
"^DD",368,368,200.02,0)
DELETED DATE/TIME^D^^200;2^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",368,368,200.02,3)
Enter date/time the Message was deleted.
"^DD",368,368,200.02,21,0)
^^1^1^3150903^
"^DD",368,368,200.02,21,1,0)
Used to record the date/time the message was manually deleted.
"^DD",368,368,200.02,"DT")
3150903
"^DD",368,368,200.03,0)
DELETED BY^P200'^VA(200,^200;3^Q
"^DD",368,368,200.03,3)
Enter the user who deleted the message.
"^DD",368,368,200.03,21,0)
^^1^1^3150903^
"^DD",368,368,200.03,21,1,0)
The user who manually deleted the message.
"^DD",368,368,200.03,"DT")
3150903
"^DD",368,368,200.04,0)
REVIEW STATUS^S^0:NOT BEING REVIEWED;1:REVIEW IN PROCESS;^200;4^Q
"^DD",368,368,200.04,1,0)
^.1
"^DD",368,368,200.04,1,1,0)
^^TRIGGER^368^200.05
"^DD",368,368,200.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(368,D0,200)):^(200),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% S DIH=$G(^IBA(368,DIV(0),200)),DIV=X S $P(^(200),U,5)=DIV,DIH=368,DIG=200.05 D ^DICR
"^DD",368,368,200.04,1,1,2)
Q
"^DD",368,368,200.04,1,1,"CREATE VALUE")
NOW
"^DD",368,368,200.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",368,368,200.04,1,1,"FIELD")
#200.05
"^DD",368,368,200.04,1,2,0)
^^TRIGGER^368^200.06
"^DD",368,368,200.04,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(368,D0,200)):^(200),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=DUZ S DIH=$G(^IBA(368,DIV(0),200)),DIV=X S $P(^(200),U,6)=DIV,DIH=368,DIG=200.06 D ^DICR
"^DD",368,368,200.04,1,2,2)
Q
"^DD",368,368,200.04,1,2,"CREATE VALUE")
S X=DUZ
"^DD",368,368,200.04,1,2,"DELETE VALUE")
NO EFFECT
"^DD",368,368,200.04,1,2,"DT")
3160125
"^DD",368,368,200.04,1,2,"FIELD")
#200.06
"^DD",368,368,200.04,3)
Enter code indicating whether this MRA claim is being reviewed.
"^DD",368,368,200.04,21,0)
^^1^1^3160125^
"^DD",368,368,200.04,21,1,0)
Select code that indicates whether this claim is under review.
"^DD",368,368,200.04,"DT")
3160125
"^DD",368,368,200.05,0)
REVIEW STATUS DATE/TIME^D^^200;5^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",368,368,200.05,3)
Enter the date/time the message was marked in progress.
"^DD",368,368,200.05,5,1,0)
368^200.04^1
"^DD",368,368,200.05,9)
^
"^DD",368,368,200.05,21,0)
^^1^1^3150903^
"^DD",368,368,200.05,21,1,0)
Used to indicate the date/time the message was marked in progress.
"^DD",368,368,200.05,"DT")
3150903
"^DD",368,368,200.06,0)
REVIEW STATUS BY^P200'^VA(200,^200;6^Q
"^DD",368,368,200.06,3)
Enter the user who marked the message as in progress.
"^DD",368,368,200.06,5,1,0)
368^200.04^2
"^DD",368,368,200.06,9)
^
"^DD",368,368,200.06,21,0)
^^1^1^3150903^
"^DD",368,368,200.06,21,1,0)
Used to indicated the user who marked the message as in progress.
"^DD",368,368,200.06,"DT")
3150903
"^DD",368,368,201,0)
RFAI WORKLIST COMMENTS^368.0201D^^201;0
"^DD",368,368,201,21,0)
^^2^2^3151201^
"^DD",368,368,201,21,1,0)
This multiple is used to store notes by date entered that explain
"^DD",368,368,201,21,2,0)
what work needs to done before the message can be manually deleted. 
"^DD",368,368.0113,0)
STC SEQ [D] SUB-FIELD^^10.01^5
"^DD",368,368.0113,0,"DT")
3151102
"^DD",368,368.0113,0,"IX","B",368.0113,.01)

"^DD",368,368.0113,0,"NM","STC SEQ [D]")

"^DD",368,368.0113,0,"UP")
368
"^DD",368,368.0113,.01,0)
STC SEQ [D]^NJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",368,368.0113,.01,1,0)
^.1
"^DD",368,368.0113,.01,1,1,0)
368.0113^B
"^DD",368,368.0113,.01,1,1,1)
S ^IBA(368,DA(1),113,"B",$E(X,1,30),DA)=""
"^DD",368,368.0113,.01,1,1,2)
K ^IBA(368,DA(1),113,"B",$E(X,1,30),DA)
"^DD",368,368.0113,.01,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",368,368.0113,.01,21,0)
^^2^2^3151201^
"^DD",368,368.0113,.01,21,1,0)
This field will contain the STC SEQ field received from the FSC ASC X12N 
"^DD",368,368.0113,.01,21,2,0)
health Care Claim Request For Additional Information (277) HL7 message.
"^DD",368,368.0113,.01,"DT")
3151201
"^DD",368,368.0113,.02,0)
STATUS INFO EFFECTIVE DATE [D]^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",368,368.0113,.02,3)
Enter the Status Information Effective Date.
"^DD",368,368.0113,.02,21,0)
^^2^2^3151112^
"^DD",368,368.0113,.02,21,1,0)
This field is derived from the STATUS INFORMATION EFFECTIVE DATE field 
"^DD",368,368.0113,.02,21,2,0)
(#.02) within the STC SEQ multiple field (#13).
"^DD",368,368.0113,.02,"DT")
3151201
"^DD",368,368.0113,1.01,0)
HEALTH CARE CLAIM STAT CAT-1^P368.001'^IBE(368.001,^1;1^Q
"^DD",368,368.0113,1.01,3)
Answer must be one of the existing entries. 
"^DD",368,368.0113,1.01,21,0)
^^2^2^3151112^
"^DD",368,368.0113,1.01,21,1,0)
This field is derived from the HEALTH CARE CLAIM STATUS CATEGORY field 
"^DD",368,368.0113,1.01,21,2,0)
(#1.01) within the STC SEQ multiple field (#13).
"^DD",368,368.0113,1.01,"DT")
3151201
"^DD",368,368.0113,10.01,0)
HEALTH CARE CLAIM STAT CAT-10^P368.001'^IBE(368.001,^10;1^Q
"^DD",368,368.0113,10.01,3)
Answer must be one of the existing entries. 
"^DD",368,368.0113,10.01,21,0)
^^2^2^3151112^
"^DD",368,368.0113,10.01,21,1,0)
This field is derived from the HEALTH CARE CLAIM STATUS CATEGORY field 
"^DD",368,368.0113,10.01,21,2,0)
(#10.01) within the STC SEQ multiple field (#13).
"^DD",368,368.0113,10.01,"DT")
3151201
"^DD",368,368.0113,11.01,0)
HEALTH CARE CLAIM STAT CAT-11^P368.001'^IBE(368.001,^11;1^Q
"^DD",368,368.0113,11.01,3)
Answer must be one of the existing entries. 
"^DD",368,368.0113,11.01,21,0)
^^2^2^3151112^
"^DD",368,368.0113,11.01,21,1,0)
This field is derived from the HEALTH CARE CLAIM STATUS CATEGORY field 
"^DD",368,368.0113,11.01,21,2,0)
(#11.01) within the STC SEQ multiple field (#13).
"^DD",368,368.0113,11.01,"DT")
3151201
"^DD",368,368.0121,0)
STC-SVC LINE STAT INFO SEQ [D] SUB-FIELD^^.03^11
"^DD",368,368.0121,0,"DT")
3151201
"^DD",368,368.0121,0,"IX","B",368.0121,.01)

"^DD",368,368.0121,0,"NM","STC-SVC LINE STAT INFO SEQ [D]")

"^DD",368,368.0121,0,"UP")
368
"^DD",368,368.0121,.01,0)
STC-SVC LINE STAT INFO SEQ [D]^NJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",368,368.0121,.01,1,0)
^.1
"^DD",368,368.0121,.01,1,1,0)
368.0121^B
"^DD",368,368.0121,.01,1,1,1)
S ^IBA(368,DA(1),121,"B",$E(X,1,30),DA)=""
"^DD",368,368.0121,.01,1,1,2)
K ^IBA(368,DA(1),121,"B",$E(X,1,30),DA)
"^DD",368,368.0121,.01,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",368,368.0121,.01,21,0)
^^3^3^3151201^
"^DD",368,368.0121,.01,21,1,0)
This field will contain the STC-SVC Line Status Information Seq field 
"^DD",368,368.0121,.01,21,2,0)
received from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368.0121,.01,21,3,0)
Information (277) HL7 message.
"^DD",368,368.0121,.01,"DT")
3151201
"^DD",368,368.0121,.02,0)
PRODUCT/SERVICE ID QUAL [D]^P368.002'^IBE(368.002,^0;2^Q
"^DD",368,368.0121,.02,3)
Answer must be one of the existing entries.
"^DD",368,368.0121,.02,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.02,21,1,0)
This field is derived from the PRODUCT/SERVICE ID QUALIFIER field (#.02) 
"^DD",368,368.0121,.02,21,2,0)
within the STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.02,"DT")
3151201
"^DD",368,368.0121,.03,0)
SERVICE IDENTIFICATION CODE^V^^0;3^
"^DD",368,368.0121,.03,3)
Answer must be one of the existing entries.
"^DD",368,368.0121,.03,21,0)
^^2^2^3151112^^
"^DD",368,368.0121,.03,21,1,0)
This field is derived from the SERVICE IDENTIFICATION CODE field (#.03) 
"^DD",368,368.0121,.03,21,2,0)
within the STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.03,"DT")
3151201
"^DD",368,368.0121,.03,"V",0)
^.12P^3^3
"^DD",368,368.0121,.03,"V",1,0)
399.2^Revenue Code^1^R^n^n
"^DD",368,368.0121,.03,"V",2,0)
81^CPT codes^2^C^n^n
"^DD",368,368.0121,.03,"V",3,0)
50.67^NDC Codes^3^N^n^n
"^DD",368,368.0121,.04,0)
PROCEDURE MODIFIER 1 [D]^P81.3'^DIC(81.3,^0;4^Q
"^DD",368,368.0121,.04,3)
Answer must be one of the existing entries.
"^DD",368,368.0121,.04,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.04,21,1,0)
This field is derived from the PROCEDURE MODIFIER 1 field (#.04) within 
"^DD",368,368.0121,.04,21,2,0)
the STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.04,"DT")
3151201
"^DD",368,368.0121,.05,0)
PROCEDURE MODIFIER 2 [D]^P81.3'^DIC(81.3,^0;5^Q
"^DD",368,368.0121,.05,3)
Answer must be one of the existing entries.
"^DD",368,368.0121,.05,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.05,21,1,0)
This field is derived from the PROCEDURE MODIFIER 2 field (#.05) within 
"^DD",368,368.0121,.05,21,2,0)
the STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.05,"DT")
3151201
"^DD",368,368.0121,.06,0)
PROCEDURE MODIFIER 3 [D]^P81.3'^DIC(81.3,^0;6^Q
"^DD",368,368.0121,.06,3)
Answer must be one of the existing entries.
"^DD",368,368.0121,.06,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.06,21,1,0)
This field is derived from the PROCEDURE MODIFIER 3 field (#.06) within 
"^DD",368,368.0121,.06,21,2,0)
the STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.06,"DT")
3151201
"^DD",368,368.0121,.07,0)
PROCEDURE MODIFIER 4 [D]^P81.3'^DIC(81.3,^0;7^Q
"^DD",368,368.0121,.07,3)
Answer must be one of the existing entries.
"^DD",368,368.0121,.07,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.07,21,1,0)
This field is derived from the PROCEDURE MODIFIER 4 field (#.07) within 
"^DD",368,368.0121,.07,21,2,0)
the STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.07,"DT")
3151201
"^DD",368,368.0121,.08,0)
LINE ITEM CHARGE AMOUNT [D]^NJ18,2^^0;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999999999)!(X<0)!(X?.E1"."3.N) X
"^DD",368,368.0121,.08,3)
Type a dollar amount between 0 and 999999999999999, 2 decimal digits.
"^DD",368,368.0121,.08,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.08,21,1,0)
This field is derived from the LINE ITEM CHARGE AMOUT field (#.08) within 
"^DD",368,368.0121,.08,21,2,0)
the STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.08,"DT")
3151112
"^DD",368,368.0121,.09,0)
REVENUE CODE^P399.2'^DGCR(399.2,^0;9^Q
"^DD",368,368.0121,.09,3)
Answer must be one of the existing entries.
"^DD",368,368.0121,.09,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.09,21,1,0)
This field is derived from the REVENUE CODE field (#.09) within the 
"^DD",368,368.0121,.09,21,2,0)
STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.09,"DT")
3151201
"^DD",368,368.0121,.11,0)
SERVICE LINE DATE^D^^0;11^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",368,368.0121,.11,3)
Enter the Service Line Date.
"^DD",368,368.0121,.11,21,0)
^^2^2^3151112^
"^DD",368,368.0121,.11,21,1,0)
This field is derived from the SERVICE LINE DATE field (#.11) within the 
"^DD",368,368.0121,.11,21,2,0)
STC-SVC LINE STAT INFO SEQ multiple field (#21).
"^DD",368,368.0121,.11,"DT")
3151201
"^DD",368,368.0121,99,0)
STC SEQ-SERVICE LINE [D]^368.12199A^^99;0
"^DD",368,368.0121,99,21,0)
^.001^3^3^3160222^^
"^DD",368,368.0121,99,21,1,0)
This field will contain the SEQ-Service Line field received from the FSC 
"^DD",368,368.0121,99,21,2,0)
ASC X12N health Care Claim Request For Additional Information (277) HL7 
"^DD",368,368.0121,99,21,3,0)
message.
"^DD",368,368.013,0)
STC SEQ SUB-FIELD^^.02^11
"^DD",368,368.013,0,"DT")
3151016
"^DD",368,368.013,0,"IX","B",368.013,.01)

"^DD",368,368.013,0,"NM","STC SEQ")

"^DD",368,368.013,0,"UP")
368
"^DD",368,368.013,.01,0)
STC SEQ^NJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",368,368.013,.01,1,0)
^.1
"^DD",368,368.013,.01,1,1,0)
368.013^B
"^DD",368,368.013,.01,1,1,1)
S ^IBA(368,DA(1),13,"B",$E(X,1,30),DA)=""
"^DD",368,368.013,.01,1,1,2)
K ^IBA(368,DA(1),13,"B",$E(X,1,30),DA)
"^DD",368,368.013,.01,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",368,368.013,.01,21,0)
^^2^2^3151201^
"^DD",368,368.013,.01,21,1,0)
This field will contain the sequence number for the STC SEQ multiple 
"^DD",368,368.013,.01,21,2,0)
field.
"^DD",368,368.013,.01,"DT")
3151201
"^DD",368,368.013,.02,0)
STATUS INFO EFFECTIVE DATE^F^^0;2^K:$L(X)>8!($L(X)<1) X
"^DD",368,368.013,.02,3)
Answer must be 1-8 characters in length.
"^DD",368,368.013,.02,21,0)
^^4^4^3151201^^
"^DD",368,368.013,.02,21,1,0)
This is the Status Information Effective Date field received from the FSC 
"^DD",368,368.013,.02,21,2,0)
ASC X12N health Care Claim Request For Additional Information (277) 
"^DD",368,368.013,.02,21,3,0)
message.  The value is received via the OBX-14 segment of the 277 HL 
"^DD",368,368.013,.02,21,4,0)
message.
"^DD",368,368.013,.02,"DT")
3151201
"^DD",368,368.013,1.01,0)
HEALTH CARE CLAIM STATUS CAT^F^^1;1^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.013,1.01,3)
Answer must be 1-30 characters in length.
"^DD",368,368.013,1.01,21,0)
^^4^4^3151201^
"^DD",368,368.013,1.01,21,1,0)
This is the Health Care Claim Status Category Code field received from 
"^DD",368,368.013,1.01,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368.013,1.01,21,3,0)
(277) message.  The value is received via the OBX-3.4 segment of the 277 
"^DD",368,368.013,1.01,21,4,0)
HL message.
"^DD",368,368.013,1.01,"DT")
3151201
"^DD",368,368.013,1.02,0)
ADDTL INFO REQUEST MOD^F^^1;2^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.013,1.02,3)
Answer must be 1-30 characters in length.
"^DD",368,368.013,1.02,21,0)
^^4^4^3151201^
"^DD",368,368.013,1.02,21,1,0)
This is the Additional Information Request Modifier field received from 
"^DD",368,368.013,1.02,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368.013,1.02,21,3,0)
(277) message.  The value is received via the OBX-3.1 segment of the 277 
"^DD",368,368.013,1.02,21,4,0)
HL message.
"^DD",368,368.013,1.02,"DT")
3151201
"^DD",368,368.013,1.04,0)
CODE LIST QUALIFIER CODE^F^^1;4^K:$L(X)>3!($L(X)<1) X
"^DD",368,368.013,1.04,3)
Answer must be 1-3 characters in length.
"^DD",368,368.013,1.04,21,0)
^^3^3^3151201^
"^DD",368,368.013,1.04,21,1,0)
This is the Code List Qualifier Code field received from the FSC ASC X12N 
"^DD",368,368.013,1.04,21,2,0)
health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.013,1.04,21,3,0)
value is received via the OBX-3.3 segment of the 277 HL message.
"^DD",368,368.013,1.04,"DT")
3151201
"^DD",368,368.013,10.01,0)
HEALTH CARE CLAIM STATUS CAT^F^^10;1^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.013,10.01,3)
Answer must be 1-30 characters in length.
"^DD",368,368.013,10.01,21,0)
^^4^4^3151201^
"^DD",368,368.013,10.01,21,1,0)
This is the Health Care Claim Status Category Code field received from 
"^DD",368,368.013,10.01,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368.013,10.01,21,3,0)
(277) message.  The value is received via the OBX-3.4 segment of the 277 
"^DD",368,368.013,10.01,21,4,0)
HL message.
"^DD",368,368.013,10.01,"DT")
3151201
"^DD",368,368.013,10.02,0)
ADDTL INFO REQUEST MOD^F^^10;2^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.013,10.02,3)
Answer must be 1-30 characters in length.
"^DD",368,368.013,10.02,21,0)
^^4^4^3151201^
"^DD",368,368.013,10.02,21,1,0)
This is the Additional Information Request Modifier field received from 
"^DD",368,368.013,10.02,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368.013,10.02,21,3,0)
(277) message.  The value is received via the OBX-3.1 segment of the 277 
"^DD",368,368.013,10.02,21,4,0)
HL message.
"^DD",368,368.013,10.02,"DT")
3151201
"^DD",368,368.013,10.04,0)
CODE LIST QUALIFIER CODE^F^^10;4^K:$L(X)>3!($L(X)<1) X
"^DD",368,368.013,10.04,3)
Answer must be 1-3 characters in length.
"^DD",368,368.013,10.04,21,0)
^^3^3^3151201^
"^DD",368,368.013,10.04,21,1,0)
This is the Code List Qualifier Code field received from the FSC ASC X12N 
"^DD",368,368.013,10.04,21,2,0)
health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.013,10.04,21,3,0)
value is received via the OBX-3.3 segment of the 277 HL message.
"^DD",368,368.013,10.04,"DT")
3151201
"^DD",368,368.013,11.01,0)
HEALTH CARE CLAIM STATUS CAT^F^^11;1^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.013,11.01,3)
Answer must be 1-30 characters in length.
"^DD",368,368.013,11.01,21,0)
^^4^4^3151201^
"^DD",368,368.013,11.01,21,1,0)
This is the Health Care Claim Status Category Code field received from 
"^DD",368,368.013,11.01,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368.013,11.01,21,3,0)
(277) message.  The value is received via the OBX-3.4 segment of the 277 
"^DD",368,368.013,11.01,21,4,0)
HL message.
"^DD",368,368.013,11.01,"DT")
3151201
"^DD",368,368.013,11.02,0)
ADDTL INFO REQUEST MOD^F^^11;2^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.013,11.02,3)
Answer must be 1-30 characters in length.
"^DD",368,368.013,11.02,21,0)
^^4^4^3151201^
"^DD",368,368.013,11.02,21,1,0)
This is the Additional Information Request Modifier field received from 
"^DD",368,368.013,11.02,21,2,0)
the FSC ASC X12N health Care Claim Request For Additional Information 
"^DD",368,368.013,11.02,21,3,0)
(277) message.  The value is received via the OBX-3.1 segment of the 277 
"^DD",368,368.013,11.02,21,4,0)
HL message.
"^DD",368,368.013,11.02,"DT")
3151201
"^DD",368,368.013,11.04,0)
CODE LIST QUALIFIER CODE^F^^11;4^K:$L(X)>3!($L(X)<1) X
"^DD",368,368.013,11.04,3)
Answer must be 1-3 characters in length.
"^DD",368,368.013,11.04,21,0)
^^3^3^3151201^
"^DD",368,368.013,11.04,21,1,0)
This is the Code List Qualifier Code field received from the FSC ASC X12N 
"^DD",368,368.013,11.04,21,2,0)
health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.013,11.04,21,3,0)
value is received via the OBX-3.3 segment of the 277 HL message.
"^DD",368,368.013,11.04,"DT")
3151201
"^DD",368,368.0201,0)
RFAI WORKLIST COMMENTS SUB-FIELD^^.03^3
"^DD",368,368.0201,0,"DT")
3150921
"^DD",368,368.0201,0,"IX","B",368.0201,.01)

"^DD",368,368.0201,0,"NM","RFAI WORKLIST COMMENTS")

"^DD",368,368.0201,0,"UP")
368
"^DD",368,368.0201,.01,0)
COMMENT ENTERED DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",368,368.0201,.01,.1)
Comment Entered Date
"^DD",368,368.0201,.01,1,0)
^.1
"^DD",368,368.0201,.01,1,1,0)
368.0201^B
"^DD",368,368.0201,.01,1,1,1)
S ^IBA(368,DA(1),201,"B",$E(X,1,30),DA)=""
"^DD",368,368.0201,.01,1,1,2)
K ^IBA(368,DA(1),201,"B",$E(X,1,30),DA)
"^DD",368,368.0201,.01,3)
Enter the date/time the comment was entered.
"^DD",368,368.0201,.01,21,0)
^^2^2^3151201^
"^DD",368,368.0201,.01,21,1,0)
This is the date/time the comment was entered into the system.  Set 
"^DD",368,368.0201,.01,21,2,0)
automatically.  Don't edit through FileMan.
"^DD",368,368.0201,.01,"DT")
3151201
"^DD",368,368.0201,.02,0)
COMMENT ENTERED BY^P200'^VA(200,^0;2^Q
"^DD",368,368.0201,.02,3)
Enter the user who entered the comment.
"^DD",368,368.0201,.02,21,0)
^^2^2^3151201^
"^DD",368,368.0201,.02,21,1,0)
This is the user who entered the comment.  Set by the system 
"^DD",368,368.0201,.02,21,2,0)
automatically.  Don't edit through FileMan. 
"^DD",368,368.0201,.02,"DT")
3151201
"^DD",368,368.0201,.03,0)
COMMENTS^368.0301^^1;0
"^DD",368,368.0201,.03,21,0)
^^2^2^3150921^
"^DD",368,368.0201,.03,21,1,0)
Used to store notes entered by the user working the request that explain 
"^DD",368,368.0201,.03,21,2,0)
what work needs to done before the message can be manually deleted. 
"^DD",368,368.021,0)
STC-SVC LINE STAT INFO SEQ SUB-FIELD^^1.01^13
"^DD",368,368.021,0,"DT")
3151020
"^DD",368,368.021,0,"IX","B",368.021,.01)

"^DD",368,368.021,0,"NM","STC-SVC LINE STAT INFO SEQ")

"^DD",368,368.021,0,"UP")
368
"^DD",368,368.021,.01,0)
STC-SVC LINE STAT INFO SEQ^NJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",368,368.021,.01,1,0)
^.1
"^DD",368,368.021,.01,1,1,0)
368.021^B
"^DD",368,368.021,.01,1,1,1)
S ^IBA(368,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",368,368.021,.01,1,1,2)
K ^IBA(368,DA(1),21,"B",$E(X,1,30),DA)
"^DD",368,368.021,.01,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",368,368.021,.01,21,0)
^^2^2^3151201^
"^DD",368,368.021,.01,21,1,0)
This field will contain the sequence number for the STC-SVC Line Stat 
"^DD",368,368.021,.01,21,2,0)
Info Seq multiple field.
"^DD",368,368.021,.01,"DT")
3151201
"^DD",368,368.021,.02,0)
PRODUCT/SERVICE ID QUALIFIER^F^^0;2^K:$L(X)>2!($L(X)<1) X
"^DD",368,368.021,.02,3)
Answer must be 1-2 characters in length.
"^DD",368,368.021,.02,21,0)
^^3^3^3151109^
"^DD",368,368.021,.02,21,1,0)
This is the Product/Service ID Qualifier field received from the FSC ASC 
"^DD",368,368.021,.02,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368.021,.02,21,3,0)
The value is received via the PSL-6.1 segment of the 277 HL7 message.
"^DD",368,368.021,.02,"DT")
3151109
"^DD",368,368.021,.03,0)
SERVICE IDENTIFICATION CODE^F^^0;3^K:$L(X)>48!($L(X)<1) X
"^DD",368,368.021,.03,3)
Answer must be 1-48 characters in length.
"^DD",368,368.021,.03,21,0)
^^3^3^3151109^
"^DD",368,368.021,.03,21,1,0)
This is the Service Identification Code field received from the FSC ASC 
"^DD",368,368.021,.03,21,2,0)
X12N Health Care Claim Request For Additional Information (277) message.  
"^DD",368,368.021,.03,21,3,0)
The value is received via the PSL-7.1 segment of the 277 HL7 message.
"^DD",368,368.021,.03,"DT")
3151109
"^DD",368,368.021,.04,0)
PROCEDURE MODIFIER 1^F^^0;4^K:$L(X)>2!($L(X)<1) X
"^DD",368,368.021,.04,3)
Answer must be 1-2 characters in length.
"^DD",368,368.021,.04,21,0)
^^3^3^3151109^
"^DD",368,368.021,.04,21,1,0)
This is the Procedure Modifier field received from the FSC ASC X12N 
"^DD",368,368.021,.04,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.021,.04,21,3,0)
value is received via the PSL-8.1 segment of the 277 HL7 message.
"^DD",368,368.021,.04,"DT")
3151109
"^DD",368,368.021,.05,0)
PROCEDURE MODIFIER 2^F^^0;5^K:$L(X)>2!($L(X)<1) X
"^DD",368,368.021,.05,3)
Answer must be 1-2 characters in length.
"^DD",368,368.021,.05,21,0)
^^3^3^3151109^
"^DD",368,368.021,.05,21,1,0)
This is the Procedure Modifier field received from the FSC ASC X12N 
"^DD",368,368.021,.05,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.021,.05,21,3,0)
value is received via the PSL-8.1 segment of the 277 HL7 message.
"^DD",368,368.021,.05,"DT")
3151109
"^DD",368,368.021,.06,0)
PROCEDURE MODIFIER 3^F^^0;6^K:$L(X)>2!($L(X)<1) X
"^DD",368,368.021,.06,3)
Answer must be 1-2 characters in length.
"^DD",368,368.021,.06,21,0)
^^3^3^3151109^
"^DD",368,368.021,.06,21,1,0)
This is the Procedure Modifier field received from the FSC ASC X12N 
"^DD",368,368.021,.06,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.021,.06,21,3,0)
value is received via the PSL-8.1 segment of the 277 HL7 message.
"^DD",368,368.021,.06,"DT")
3151109
"^DD",368,368.021,.07,0)
PROCEDURE MODIFIER 4^F^^0;7^K:$L(X)>2!($L(X)<1) X
"^DD",368,368.021,.07,3)
Answer must be 1-2 characters in length.
"^DD",368,368.021,.07,21,0)
^^3^3^3151109^
"^DD",368,368.021,.07,21,1,0)
This is the Procedure Modifier field received from the FSC ASC X12N 
"^DD",368,368.021,.07,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.021,.07,21,3,0)
value is received via the PSL-8.1 segment of the 277 HL7 message.
"^DD",368,368.021,.07,"DT")
3151109
"^DD",368,368.021,.08,0)
LINE ITEM CHARGE AMOUNT^F^^0;8^K:$L(X)>18!($L(X)<1) X
"^DD",368,368.021,.08,3)
Answer must be 1-18 characters in length.
"^DD",368,368.021,.08,21,0)
^^3^3^3151109^
"^DD",368,368.021,.08,21,1,0)
This is the Line Item Charge Amount field received from the FSC ASC X12N 
"^DD",368,368.021,.08,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.021,.08,21,3,0)
value is received via the PSL-16.1.1 segment of the 277 HL7 message.
"^DD",368,368.021,.08,"DT")
3151109
"^DD",368,368.021,.09,0)
REVENUE CODE^F^^0;9^K:$L(X)>48!($L(X)<1) X
"^DD",368,368.021,.09,3)
Answer must be 1-48 characters in length.
"^DD",368,368.021,.09,21,0)
^^3^3^3151109^
"^DD",368,368.021,.09,21,1,0)
This is the Revenue Code field received from the FSC ASC X12N Health Care 
"^DD",368,368.021,.09,21,2,0)
Claim Request For Additional Information (277) message.  The value is 
"^DD",368,368.021,.09,21,3,0)
received via the PSL-22.1 segment of the 277 HL7 message.
"^DD",368,368.021,.09,"DT")
3151109
"^DD",368,368.021,.1,0)
LINE ITEM CONTROL NUMBER^F^^0;10^K:$L(X)>50!($L(X)<1) X
"^DD",368,368.021,.1,3)
Answer must be 1-50 characters in length.
"^DD",368,368.021,.1,21,0)
^^3^3^3151109^
"^DD",368,368.021,.1,21,1,0)
This is the Line Item Control Number field received from the FSC ASC X12N 
"^DD",368,368.021,.1,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.021,.1,21,3,0)
value is received via the PSL 1.1 segment of the 277 HL7 message.
"^DD",368,368.021,.1,"DT")
3151109
"^DD",368,368.021,.11,0)
SERVICE LINE DATE^F^^0;11^K:$L(X)>35!($L(X)<1) X
"^DD",368,368.021,.11,3)
Answer must be 1-35 characters in length.
"^DD",368,368.021,.11,21,0)
^^3^3^3151109^
"^DD",368,368.021,.11,21,1,0)
This is the Service Line Date field received from the FSC ASC X12N Health 
"^DD",368,368.021,.11,21,2,0)
Care Claim Request For Additional Information (277) message.  The value 
"^DD",368,368.021,.11,21,3,0)
is received via the PSL 26.1 segment of the 277 HL7 message.
"^DD",368,368.021,.11,"DT")
3151109
"^DD",368,368.021,1.01,0)
SERVICE LINE REF ID QUALIFIER^F^^1;1^K:$L(X)>3!($L(X)<1) X
"^DD",368,368.021,1.01,3)
Answer must be 1-3 characters in length.
"^DD",368,368.021,1.01,21,0)
^^3^3^3151201^
"^DD",368,368.021,1.01,21,1,0)
This field will contain the Service Line Reference ID Qualifier received 
"^DD",368,368.021,1.01,21,2,0)
from the FSC ASC X12N health Care Claim Request For Additional 
"^DD",368,368.021,1.01,21,3,0)
Information (277) HL7 message.
"^DD",368,368.021,1.01,"DT")
3151201
"^DD",368,368.021,99,0)
STC SEQ-SERVICE LINE^368.2199^^99;0
"^DD",368,368.021,99,21,0)
^^3^3^3151201^
"^DD",368,368.021,99,21,1,0)
This multiple field will contain Service Line Status Information 
"^DD",368,368.021,99,21,2,0)
received from the FSC ASC X12N HEALTH Care Claim Request For Additional 
"^DD",368,368.021,99,21,3,0)
Information (277) HL message.
"^DD",368,368.0301,0)
COMMENTS SUB-FIELD^^.01^1
"^DD",368,368.0301,0,"DT")
3150921
"^DD",368,368.0301,0,"NM","COMMENTS")

"^DD",368,368.0301,0,"UP")
368.0201
"^DD",368,368.0301,.01,0)
COMMENTS^Wx^^0;1^Q
"^DD",368,368.0301,.01,.1)
Comments
"^DD",368,368.0301,.01,3)
Enter any comments that explain what work needs to be done.
"^DD",368,368.0301,.01,21,0)
^.001^2^2^3150921^^
"^DD",368,368.0301,.01,21,1,0)
Used to store notes entered by the user working the request that explain 
"^DD",368,368.0301,.01,21,2,0)
what work needs to done before the message can be manually deleted. 
"^DD",368,368.0301,.01,"DT")
3150921
"^DD",368,368.12199,0)
STC SEQ-SERVICE LINE [D] SUB-FIELD^^11.01^5
"^DD",368,368.12199,0,"DT")
3151029
"^DD",368,368.12199,0,"IX","B",368.12199,.01)

"^DD",368,368.12199,0,"NM","STC SEQ-SERVICE LINE [D]")

"^DD",368,368.12199,0,"UP")
368.0121
"^DD",368,368.12199,.01,0)
STC SEQ-SERVICE LINE [D]^NJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",368,368.12199,.01,1,0)
^.1
"^DD",368,368.12199,.01,1,1,0)
368.12199^B
"^DD",368,368.12199,.01,1,1,1)
S ^IBA(368,DA(2),121,DA(1),99,"B",$E(X,1,30),DA)=""
"^DD",368,368.12199,.01,1,1,2)
K ^IBA(368,DA(2),121,DA(1),99,"B",$E(X,1,30),DA)
"^DD",368,368.12199,.01,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",368,368.12199,.01,"DT")
3151029
"^DD",368,368.12199,.02,0)
STATUS INFO EFFECTIVE DATE [D]^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",368,368.12199,.02,3)
Enter the Status Information Effective Date
"^DD",368,368.12199,.02,21,0)
^^3^3^3151202^
"^DD",368,368.12199,.02,21,1,0)
This field is derived from the STATUS INFORMATION EFFECTIVE DATE field 
"^DD",368,368.12199,.02,21,2,0)
(#.02) within the STC-SVC LINE STAT INFO SEQ multiple field (#21), within 
"^DD",368,368.12199,.02,21,3,0)
the STC SEQ-SERVICE LINE multiple field (#99).
"^DD",368,368.12199,.02,"DT")
3151202
"^DD",368,368.12199,1.01,0)
HEALTH CARE CLAIM STAT CAT-1^P368.001'^IBE(368.001,^1;1^Q
"^DD",368,368.12199,1.01,3)
Answer must be one of the existing entries.
"^DD",368,368.12199,1.01,21,0)
^^3^3^3151112^
"^DD",368,368.12199,1.01,21,1,0)
This field is derived from the HEALTH CARE CLAIM STATUS CATEGORY-1 field 
"^DD",368,368.12199,1.01,21,2,0)
(#1.01) within the STC-SVC LINE STAT INFO SEQ multiple field (#21), 
"^DD",368,368.12199,1.01,21,3,0)
within the STC SEQ-SERVICE LINE multiple field  (#99).
"^DD",368,368.12199,1.01,"DT")
3151201
"^DD",368,368.12199,10.01,0)
HEALTH CARE CLAIM STAT CAT-10^P368.001'^IBE(368.001,^10;1^Q
"^DD",368,368.12199,10.01,3)
Answer must be one of the existing entries.
"^DD",368,368.12199,10.01,21,0)
^^3^3^3151112^
"^DD",368,368.12199,10.01,21,1,0)
This field is derived from the HEALTH CARE CLAIM STATUS CATEGORY-10 field 
"^DD",368,368.12199,10.01,21,2,0)
(#10.01) within the STC-SVC LINE STAT INFO SEQ multiple field (#21), 
"^DD",368,368.12199,10.01,21,3,0)
within the STC SEQ-SERVICE LINE multiple field  (#99).
"^DD",368,368.12199,10.01,"DT")
3151201
"^DD",368,368.12199,11.01,0)
HEALTH CARE CLAIM STAT CAT-11^P368.001'^IBE(368.001,^11;1^Q
"^DD",368,368.12199,11.01,3)
Answer must be one of the existing entries.
"^DD",368,368.12199,11.01,21,0)
^^3^3^3151112^
"^DD",368,368.12199,11.01,21,1,0)
This field is derived from the HEALTH CARE CLAIM STATUS CATEGORY-11 field 
"^DD",368,368.12199,11.01,21,2,0)
(#11.01) within the STC-SVC LINE STAT INFO SEQ multiple field (#21), 
"^DD",368,368.12199,11.01,21,3,0)
within the STC SEQ-SERVICE LINE multiple field  (#99).
"^DD",368,368.12199,11.01,"DT")
3151201
"^DD",368,368.2199,0)
STC SEQ-SERVICE LINE SUB-FIELD^^.02^11
"^DD",368,368.2199,0,"DT")
3151019
"^DD",368,368.2199,0,"IX","B",368.2199,.01)

"^DD",368,368.2199,0,"NM","STC SEQ-SERVICE LINE")

"^DD",368,368.2199,0,"UP")
368.021
"^DD",368,368.2199,.01,0)
STC SEQ-SERVICE LINE^NJ10,0^^0;1^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",368,368.2199,.01,1,0)
^.1
"^DD",368,368.2199,.01,1,1,0)
368.2199^B
"^DD",368,368.2199,.01,1,1,1)
S ^IBA(368,DA(2),21,DA(1),99,"B",$E(X,1,30),DA)=""
"^DD",368,368.2199,.01,1,1,2)
K ^IBA(368,DA(2),21,DA(1),99,"B",$E(X,1,30),DA)
"^DD",368,368.2199,.01,3)
Type a number between 1 and 9999999999, 0 decimal digits.
"^DD",368,368.2199,.01,21,0)
^^2^2^3151201^
"^DD",368,368.2199,.01,21,1,0)
This field will contain the sequence number for the STC SEQ-Service Line
"^DD",368,368.2199,.01,21,2,0)
multiple field.
"^DD",368,368.2199,.01,"DT")
3151201
"^DD",368,368.2199,.02,0)
STATUS INFO EFFECTIVE DATE^F^^0;2^K:$L(X)>8!($L(X)<1) X
"^DD",368,368.2199,.02,3)
Answer must be 1-8 characters in length.
"^DD",368,368.2199,.02,21,0)
^^4^4^3151109^
"^DD",368,368.2199,.02,21,1,0)
This is the Status Information Effective Date field received from the FSC 
"^DD",368,368.2199,.02,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277) 
"^DD",368,368.2199,.02,21,3,0)
message.  The value is received via the PSL-10 segment of the 277 HL7 
"^DD",368,368.2199,.02,21,4,0)
message.
"^DD",368,368.2199,.02,"DT")
3151109
"^DD",368,368.2199,1.01,0)
HEALTH CARE CLAIM STATUS CAT^F^^1;1^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.2199,1.01,3)
Answer must be 1-30 characters in length.
"^DD",368,368.2199,1.01,21,0)
^^4^4^3151109^
"^DD",368,368.2199,1.01,21,1,0)
This is the Health Care Claim Status Category field received from the FSC 
"^DD",368,368.2199,1.01,21,2,0)
ASC X12N Health Care Claim Request For Additional Information (277) 
"^DD",368,368.2199,1.01,21,3,0)
message.  The value is received via the PSL-20 segment of the 277 HL7 
"^DD",368,368.2199,1.01,21,4,0)
message.
"^DD",368,368.2199,1.01,"DT")
3151109
"^DD",368,368.2199,1.02,0)
ADDTL INFO REQUEST MOD^F^^1;2^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.2199,1.02,3)
Answer must be 1-30 characters in length.
"^DD",368,368.2199,1.02,21,0)
^^4^4^3151109^
"^DD",368,368.2199,1.02,21,1,0)
This is the Additional Information Request Modifier field received from 
"^DD",368,368.2199,1.02,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information 
"^DD",368,368.2199,1.02,21,3,0)
(277) message.  The value is received via the PSL-18 segment of the 277 
"^DD",368,368.2199,1.02,21,4,0)
HL7 message.
"^DD",368,368.2199,1.02,"DT")
3151109
"^DD",368,368.2199,1.04,0)
CODE LIST QUALIFIER CODE^F^^1;4^K:$L(X)>3!($L(X)<1) X
"^DD",368,368.2199,1.04,3)
Answer must be 1-3 characters in length.
"^DD",368,368.2199,1.04,21,0)
^^3^3^3151109^
"^DD",368,368.2199,1.04,21,1,0)
This is the Code List Qualifier Code field received from the FSC ASC X12N 
"^DD",368,368.2199,1.04,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.2199,1.04,21,3,0)
value is received via the PSL-17 segment of the 277 HL7 message.
"^DD",368,368.2199,1.04,"DT")
3151109
"^DD",368,368.2199,10.01,0)
HEALTH CARE CLAIM STATUS CAT^F^^10;1^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.2199,10.01,3)
Answer must be 1-30 characters in length.
"^DD",368,368.2199,10.01,21,0)
^^4^4^3151109^
"^DD",368,368.2199,10.01,21,1,0)
This is the Health Care Claim Status Category field received from the 
"^DD",368,368.2199,10.01,21,2,0)
FSC  ASC X12N Health Care Claim Request For Additional Information (277)  
"^DD",368,368.2199,10.01,21,3,0)
message.  The value is received via the PSL-20 segment of the 277 HL7  
"^DD",368,368.2199,10.01,21,4,0)
message.
"^DD",368,368.2199,10.01,"DT")
3151109
"^DD",368,368.2199,10.02,0)
ADDTL INFO REQUEST MOD^F^^10;2^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.2199,10.02,3)
Answer must be 1-30 characters in length.
"^DD",368,368.2199,10.02,21,0)
^^4^4^3151109^
"^DD",368,368.2199,10.02,21,1,0)
This is the Additional Information Request Modifier field received from  
"^DD",368,368.2199,10.02,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information  
"^DD",368,368.2199,10.02,21,3,0)
(277) message.  The value is received via the PSL-18 segment of the 277  
"^DD",368,368.2199,10.02,21,4,0)
HL7 message.
"^DD",368,368.2199,10.02,"DT")
3151109
"^DD",368,368.2199,10.04,0)
CODE LIST QUALIFIER CODE^F^^10;4^K:$L(X)>3!($L(X)<1) X
"^DD",368,368.2199,10.04,3)
Answer must be 1-3 characters in length.
"^DD",368,368.2199,10.04,21,0)
^^3^3^3151109^
"^DD",368,368.2199,10.04,21,1,0)
This is the Code List Qualifier Code field received from the FSC ASC X12N 
"^DD",368,368.2199,10.04,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.2199,10.04,21,3,0)
value is received via the PSL-17 segment of the 277 HL7 message.
"^DD",368,368.2199,10.04,"DT")
3151109
"^DD",368,368.2199,11.01,0)
HEALTH CARE CLAIM STATUS CAT^F^^11;1^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.2199,11.01,3)
Answer must be 1-30 characters in length.
"^DD",368,368.2199,11.01,21,0)
^^4^4^3151109^
"^DD",368,368.2199,11.01,21,1,0)
This is the Health Care Claim Status Category field received from the 
"^DD",368,368.2199,11.01,21,2,0)
FSC  ASC X12N Health Care Claim Request For Additional Information (277)  
"^DD",368,368.2199,11.01,21,3,0)
message.  The value is received via the PSL-20 segment of the 277 HL7  
"^DD",368,368.2199,11.01,21,4,0)
message.
"^DD",368,368.2199,11.01,"DT")
3151109
"^DD",368,368.2199,11.02,0)
ADDTL INFO REQUEST MOD^F^^11;2^K:$L(X)>30!($L(X)<1) X
"^DD",368,368.2199,11.02,3)
Answer must be 1-30 characters in length.
"^DD",368,368.2199,11.02,21,0)
^^4^4^3151109^
"^DD",368,368.2199,11.02,21,1,0)
This is the Additional Information Request Modifier field received from  
"^DD",368,368.2199,11.02,21,2,0)
the FSC ASC X12N Health Care Claim Request For Additional Information  
"^DD",368,368.2199,11.02,21,3,0)
(277) message.  The value is received via the PSL-18 segment of the 277  
"^DD",368,368.2199,11.02,21,4,0)
HL7 message.
"^DD",368,368.2199,11.02,"DT")
3151109
"^DD",368,368.2199,11.04,0)
CODE LIST QUALIFIER CODE^F^^11;4^K:$L(X)>3!($L(X)<1) X
"^DD",368,368.2199,11.04,3)
Answer must be 1-3 characters in length.
"^DD",368,368.2199,11.04,21,0)
^^3^3^3151109^
"^DD",368,368.2199,11.04,21,1,0)
This is the Code List Qualifier Code field received from the FSC ASC X12N 
"^DD",368,368.2199,11.04,21,2,0)
Health Care Claim Request For Additional Information (277) message.  The 
"^DD",368,368.2199,11.04,21,3,0)
value is received via the PSL-17 segment of the 277 HL7 message.
"^DD",368,368.2199,11.04,"DT")
3151109
"^DD",368.001,368.001,0)
FIELD^^.02^2
"^DD",368.001,368.001,0,"DDA")
N
"^DD",368.001,368.001,0,"DT")
3151109
"^DD",368.001,368.001,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",368.001,368.001,0,"IX","B",368.001,.01)

"^DD",368.001,368.001,0,"NM","X12 277 CLAIM STATUS CATEGORY")

"^DD",368.001,368.001,0,"PT",368.0113,1.01)

"^DD",368.001,368.001,0,"PT",368.0113,10.01)

"^DD",368.001,368.001,0,"PT",368.0113,11.01)

"^DD",368.001,368.001,0,"PT",368.12199,1.01)

"^DD",368.001,368.001,0,"PT",368.12199,10.01)

"^DD",368.001,368.001,0,"PT",368.12199,11.01)

"^DD",368.001,368.001,.01,0)
CLAIM STATUS CATEGORY CODE^RF^^0;1^K:$L(X)>3!($L(X)<2)!'(X?1"R".E) X
"^DD",368.001,368.001,.01,1,0)
^.1
"^DD",368.001,368.001,.01,1,1,0)
368.001^B
"^DD",368.001,368.001,.01,1,1,1)
S ^IBE(368.001,"B",$E(X,1,30),DA)=""
"^DD",368.001,368.001,.01,1,1,2)
K ^IBE(368.001,"B",$E(X,1,30),DA)
"^DD",368.001,368.001,.01,3)
Answer must be 2-3 characters in length and begin with 'R'.
"^DD",368.001,368.001,.01,21,0)
^^2^2^3151125^
"^DD",368.001,368.001,.01,21,1,0)
This is the 'R' code from X12 code source 507 used to request additional 
"^DD",368.001,368.001,.01,21,2,0)
information.
"^DD",368.001,368.001,.01,"DT")
3151125
"^DD",368.001,368.001,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>240!($L(X)<1) X
"^DD",368.001,368.001,.02,1,0)
^.1^^0
"^DD",368.001,368.001,.02,3)
Answer must be 1-240 characters in length.
"^DD",368.001,368.001,.02,21,0)
^^2^2^3151125^
"^DD",368.001,368.001,.02,21,1,0)
This is text description that pertains to the 'R' code from X12 code
"^DD",368.001,368.001,.02,21,2,0)
source 507 used to request additional information.
"^DD",368.001,368.001,.02,"DT")
3151125
"^DD",368.002,368.002,0)
FIELD^^.02^2
"^DD",368.002,368.002,0,"DDA")
N
"^DD",368.002,368.002,0,"DT")
3151029
"^DD",368.002,368.002,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",368.002,368.002,0,"IX","B",368.002,.01)

"^DD",368.002,368.002,0,"NM","X12 277 PRODUCT OR SERVICE ID QUAL")

"^DD",368.002,368.002,0,"PT",368.0121,.02)

"^DD",368.002,368.002,.01,0)
CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",368.002,368.002,.01,1,0)
^.1
"^DD",368.002,368.002,.01,1,1,0)
368.002^B
"^DD",368.002,368.002,.01,1,1,1)
S ^IBE(368.002,"B",$E(X,1,30),DA)=""
"^DD",368.002,368.002,.01,1,1,2)
K ^IBE(368.002,"B",$E(X,1,30),DA)
"^DD",368.002,368.002,.01,3)
Answer must be 2 characters in length.
"^DD",368.002,368.002,.01,21,0)
^^2^2^3151125^
"^DD",368.002,368.002,.01,21,1,0)
This is code (qualifier) identifying the type/source of the descriptive
"^DD",368.002,368.002,.01,21,2,0)
number used in Product/Service ID
"^DD",368.002,368.002,.01,"DT")
3151125
"^DD",368.002,368.002,.02,0)
DESCRIPTION^F^^0;2^K:$L(X)>200!($L(X)<1) X
"^DD",368.002,368.002,.02,3)
Answer must be 1-200 characters in length.
"^DD",368.002,368.002,.02,21,0)
^^2^2^3151125^
"^DD",368.002,368.002,.02,21,1,0)
This is the description for the type of code used to identify the product 
"^DD",368.002,368.002,.02,21,2,0)
or service.
"^DD",368.002,368.002,.02,"DT")
3151125
"^DD",399,399,.19,0)
FORM TYPE^R*P353'^IBE(353,^0;19^S DIC("S")="N Z S Z=$G(^IBE(353,Y,2)) I $P(Z,U,2)=""P"",$P(Z,U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,.19,1,0)
^.1
"^DD",399,399,.19,1,1,0)
^^TRIGGER^399^.09
"^DD",399,399,.19,1,1,1)
X ^DD(399,.19,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=5 S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=399,DIG=.09 D ^DICR
"^DD",399,399,.19,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,.19,1,1,69.2) S X=$P($P(Y(3),$C(59)_$P(Y(2),U,9)_":",2),$C(59))="",Y=X,X=Y(1),X=X&Y
"^DD",399,399,.19,1,1,2)
Q
"^DD",399,399,.19,1,1,69.2)
S Y(3)=$C(59)_$P($G(^DD(399,.09,0)),U,3),Y(2)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($G(^IBE(353,+Y(0),0)),U)="CMS-1500",Y(1)=$G(X)
"^DD",399,399,.19,1,1,"%D",0)
^.101^2^2^3101115^^
"^DD",399,399,.19,1,1,"%D",1,0)
If the CMS-1500 claim form is used and no coding method defined, then set
"^DD",399,399,.19,1,1,"%D",2,0)
coding method to HCPCS
"^DD",399,399,.19,1,1,"CREATE CONDITION")
FORM TYPE="CMS-1500"&(PROCEDURE CODING METHOD="")
"^DD",399,399,.19,1,1,"CREATE VALUE")
S X=5
"^DD",399,399,.19,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.19,1,1,"DT")
3060928
"^DD",399,399,.19,1,1,"FIELD")
PROCEDURE CODING METHOD
"^DD",399,399,.19,1,2,0)
399^AREV7^MUMPS
"^DD",399,399,.19,1,2,1)
S DGRVRCAL=1
"^DD",399,399,.19,1,2,2)
S DGRVRCAL=2
"^DD",399,399,.19,1,2,3)
DO NOT DELETE
"^DD",399,399,.19,1,2,"%D",0)
^^2^2^2940214^
"^DD",399,399,.19,1,2,"%D",1,0)
Variable causes revenue codes and chrges to be re-calculated on return
"^DD",399,399,.19,1,2,"%D",2,0)
to the enter/edit billing screens.
"^DD",399,399,.19,1,2,"DT")
2920428
"^DD",399,399,.19,1,3,0)
399^AH^MUMPS
"^DD",399,399,.19,1,3,1)
D ALLID^IBCEP3(DA,.19,1)
"^DD",399,399,.19,1,3,2)
D ALLID^IBCEP3(DA,.19,2)
"^DD",399,399,.19,1,3,3)
Do not delete
"^DD",399,399,.19,1,3,"%D",0)
^.101^3^3^3101005^^^^
"^DD",399,399,.19,1,3,"%D",1,0)
This cross reference determines if the change of form type requires the
"^DD",399,399,.19,1,3,"%D",2,0)
provider id's to be updated or deleted.  If it does, the update/deletion
"^DD",399,399,.19,1,3,"%D",3,0)
is performed for the claim.
"^DD",399,399,.19,1,3,"DT")
3000926
"^DD",399,399,.19,1,4,0)
^^TRIGGER^399^140
"^DD",399,399,.19,1,4,1)
Q
"^DD",399,399,.19,1,4,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,1)=DIV,DIH=399,DIG=140 D ^DICR
"^DD",399,399,.19,1,4,"%D",0)
^^2^2^3151118^
"^DD",399,399,.19,1,4,"%D",1,0)
This trigger removes PRIMARY PAYER-ALT ID TYPE when Form Type is changed 
"^DD",399,399,.19,1,4,"%D",2,0)
since ID Type is dependent on FORM TYPE.
"^DD",399,399,.19,1,4,"CREATE VALUE")
NO EFFECT
"^DD",399,399,.19,1,4,"DELETE VALUE")
@
"^DD",399,399,.19,1,4,"DT")
3151112
"^DD",399,399,.19,1,4,"FIELD")
PRIMARY PAYER-ALT ID TYPE
"^DD",399,399,.19,1,5,0)
399^AJ^MUMPS
"^DD",399,399,.19,1,5,1)
D ATTREND^IBCU1(DA,"","")
"^DD",399,399,.19,1,5,2)
D ATTREND^IBCU1(DA,"","")
"^DD",399,399,.19,1,5,3)
Do Not Delete
"^DD",399,399,.19,1,5,"%D",0)
^.101^14^14^3100621^^^
"^DD",399,399,.19,1,5,"%D",1,0)
This Mumps cross reference is used to potentially trigger 6 other fields 
"^DD",399,399,.19,1,5,"%D",2,0)
in file 399.  The fields are triggered when the insurance companies in the
"^DD",399,399,.19,1,5,"%D",3,0)
claim have flags set to use the attending or rendering physicians as the 
"^DD",399,399,.19,1,5,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06 
"^DD",399,399,.19,1,5,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID 
"^DD",399,399,.19,1,5,"%D",6,0)
INST).
"^DD",399,399,.19,1,5,"%D",7,0)
 
"^DD",399,399,.19,1,5,"%D",8,0)
The following fields are the ones being "triggered":
"^DD",399,399,.19,1,5,"%D",9,0)
#122 PRIMARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",10,0)
#123 SECONDARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",11,0)
#124 TERTIARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",12,0)
#128 PRIMARY ID QUALIFER
"^DD",399,399,.19,1,5,"%D",13,0)
#129 SECONDARY ID QUALIFIER
"^DD",399,399,.19,1,5,"%D",14,0)
#130 TERTIARY ID QUALIFIER 
"^DD",399,399,.19,1,5,"DT")
3060508
"^DD",399,399,.19,1,6,0)
^^TRIGGER^399^141
"^DD",399,399,.19,1,6,1)
Q
"^DD",399,399,.19,1,6,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,2)=DIV,DIH=399,DIG=141 D ^DICR
"^DD",399,399,.19,1,6,"%D",0)
^^2^2^3151118^
"^DD",399,399,.19,1,6,"%D",1,0)
This trigger removes PRIMARY PAYER-ALT ID when Form Type is changed 
"^DD",399,399,.19,1,6,"%D",2,0)
since ID is dependent on FORM TYPE.
"^DD",399,399,.19,1,6,"CREATE VALUE")
NO EFFECT
"^DD",399,399,.19,1,6,"DELETE VALUE")
@
"^DD",399,399,.19,1,6,"DT")
3151112
"^DD",399,399,.19,1,6,"FIELD")
PRIMARY PAYER-ALT ID
"^DD",399,399,.19,1,7,0)
^^TRIGGER^399^142
"^DD",399,399,.19,1,7,1)
Q
"^DD",399,399,.19,1,7,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,3)=DIV,DIH=399,DIG=142 D ^DICR
"^DD",399,399,.19,1,7,"%D",0)
^^2^2^3151118^
"^DD",399,399,.19,1,7,"%D",1,0)
This trigger removes SECONDARY PAYER-ALT ID TYPE when Form Type is
"^DD",399,399,.19,1,7,"%D",2,0)
changed since ID Type is dependent on FORM TYPE.
"^DD",399,399,.19,1,7,"CREATE VALUE")
NO EFFECT
"^DD",399,399,.19,1,7,"DELETE VALUE")
@
"^DD",399,399,.19,1,7,"DT")
3151112
"^DD",399,399,.19,1,7,"FIELD")
SECONDARY PAYER-ALT ID TYPE
"^DD",399,399,.19,1,8,0)
^^TRIGGER^399^143
"^DD",399,399,.19,1,8,1)
Q
"^DD",399,399,.19,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,4)=DIV,DIH=399,DIG=143 D ^DICR
"^DD",399,399,.19,1,8,"%D",0)
^^2^2^3151118^
"^DD",399,399,.19,1,8,"%D",1,0)
This trigger removes SECONDARY PAYER-ALT ID when Form Type is changed
"^DD",399,399,.19,1,8,"%D",2,0)
since ID is dependent on FORM TYPE.
"^DD",399,399,.19,1,8,"CREATE VALUE")
NO EFFECT
"^DD",399,399,.19,1,8,"DELETE VALUE")
@
"^DD",399,399,.19,1,8,"DT")
3151112
"^DD",399,399,.19,1,8,"FIELD")
SECONDARY PAYER-ALT ID
"^DD",399,399,.19,1,9,0)
^^TRIGGER^399^144
"^DD",399,399,.19,1,9,1)
Q
"^DD",399,399,.19,1,9,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,5)=DIV,DIH=399,DIG=144 D ^DICR
"^DD",399,399,.19,1,9,"%D",0)
^^2^2^3151118^
"^DD",399,399,.19,1,9,"%D",1,0)
This trigger removes TERTIARY PAYER-ALT ID TYPE when Form Type is changed 
"^DD",399,399,.19,1,9,"%D",2,0)
since ID Type is dependent on FORM TYPE.
"^DD",399,399,.19,1,9,"CREATE VALUE")
NO EFFECT
"^DD",399,399,.19,1,9,"DELETE VALUE")
@
"^DD",399,399,.19,1,9,"DT")
3151112
"^DD",399,399,.19,1,9,"FIELD")
TERTIARY PAYER-ALT ID TYPE
"^DD",399,399,.19,1,10,0)
^^TRIGGER^399^145
"^DD",399,399,.19,1,10,1)
Q
"^DD",399,399,.19,1,10,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,6)=DIV,DIH=399,DIG=145 D ^DICR
"^DD",399,399,.19,1,10,"%D",0)
^^2^2^3151118^
"^DD",399,399,.19,1,10,"%D",1,0)
This trigger removes TERTIARY PAYER-ALT ID when Form Type is changed 
"^DD",399,399,.19,1,10,"%D",2,0)
since ID is dependent on FORM TYPE.
"^DD",399,399,.19,1,10,"CREATE VALUE")
NO EFFECT
"^DD",399,399,.19,1,10,"DELETE VALUE")
@
"^DD",399,399,.19,1,10,"DT")
3151112
"^DD",399,399,.19,1,10,"FIELD")
TERTIARY PAYER-ALT ID
"^DD",399,399,.19,3)
Enter the type of claim form to be used.
"^DD",399,399,.19,5,1,0)
399^.01^7
"^DD",399,399,.19,5,2,0)
399^.27^1
"^DD",399,399,.19,12)
Must be a printable national form type.
"^DD",399,399,.19,12.1)
S DIC("S")="N Z S Z=$G(^IBE(353,Y,2)) I $P(Z,U,2)=""P"",$P(Z,U,4)"
"^DD",399,399,.19,21,0)
^.001^1^1^3100621^^^
"^DD",399,399,.19,21,1,0)
Select the form type on which to print the bill.
"^DD",399,399,.19,23,0)
^.001^1^1^3100621^^^^
"^DD",399,399,.19,23,1,0)
Critical that this field either be a 2 or a 3.
"^DD",399,399,.19,"DT")
3151112
"^DD",399,399,101,0)
PRIMARY INSURANCE CARRIER^R*P36'X^DIC(36,^M;1^D DD^IBCNS S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))" D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,101,1,0)
^.1
"^DD",399,399,101,1,1,0)
^^TRIGGER^399^122
"^DD",399,399,101,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,1) X ^DD(399,101,1,1,1.4)
"^DD",399,399,101,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,2)=DIV,DIH=399,DIG=122 D ^DICR
"^DD",399,399,101,1,1,2)
Q
"^DD",399,399,101,1,1,3)
Do Not Delete
"^DD",399,399,101,1,1,"%D",0)
^.101^3^3^3020819^^
"^DD",399,399,101,1,1,"%D",1,0)
This trigger sets the Bill Primary Provider # based on the Form Type,  
"^DD",399,399,101,1,1,"%D",2,0)
using the Primary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,101,1,1,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,101,1,1,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,1)
"^DD",399,399,101,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,1,"DT")
3020819
"^DD",399,399,101,1,1,"FIELD")
PRIMARY PROVIDER #
"^DD",399,399,101,1,2,0)
^^TRIGGER^399^24
"^DD",399,399,101,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399,101,1,2,1.1) X ^DD(399,101,1,2,1.4)
"^DD",399,399,101,1,2,1.1)
S X=DIV S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,101,1,2,2.4)
"^DD",399,399,101,1,2,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,3)
DO NOT DELETE
"^DD",399,399,101,1,2,"%D",0)
^^2^2^2990628^
"^DD",399,399,101,1,2,"%D",1,0)
This triggers the CLAIM MRA STATUS to 'MRA NEEDED' (1N) if the primary
"^DD",399,399,101,1,2,"%D",2,0)
insurance is the current insurance and the current insurance = MEDICARE WNR.
"^DD",399,399,101,1,2,"CREATE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"CREATE VALUE")
S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,"DELETE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"DELETE VALUE")
@
"^DD",399,399,101,1,2,"DT")
2990628
"^DD",399,399,101,1,2,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,101,1,3,0)
^^TRIGGER^399^27
"^DD",399,399,101,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,101,1,3,1.4)
"^DD",399,399,101,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,101,1,3,2)
Q
"^DD",399,399,101,1,3,3)
Do not delete
"^DD",399,399,101,1,3,"%D",0)
^^3^3^3041119^
"^DD",399,399,101,1,3,"%D",1,0)
When the current insurance is the primary insurance and the primary
"^DD",399,399,101,1,3,"%D",2,0)
insurance is MEDICARE WNR, delete the FORCE CLAIM TO PRINT field as it
"^DD",399,399,101,1,3,"%D",3,0)
is not valid to print an MRA request.
"^DD",399,399,101,1,3,"CREATE CONDITION")
S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0)
"^DD",399,399,101,1,3,"CREATE VALUE")
@
"^DD",399,399,101,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,3,"DT")
3041119
"^DD",399,399,101,1,3,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,101,1,4,0)
^^TRIGGER^399^128
"^DD",399,399,101,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,X,1) X ^DD(399,101,1,4,1.4)
"^DD",399,399,101,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,10)=DIV,DIH=399,DIG=128 D ^DICR
"^DD",399,399,101,1,4,2)
Q
"^DD",399,399,101,1,4,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,X,1)
"^DD",399,399,101,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,4,"DT")
3060219
"^DD",399,399,101,1,4,"FIELD")
PRIMARY ID QUALIFIER
"^DD",399,399,101,1,5,0)
^^TRIGGER^399^27
"^DD",399,399,101,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CREATE^IBCEF84(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(399,101,1,5,1.4)
"^DD",399,399,101,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,101,1,5,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$DELETE^IBCEF84(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,101,1,5,2.4)
"^DD",399,399,101,1,5,2.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,101,1,5,"%D",0)
^^7^7^3101129^
"^DD",399,399,101,1,5,"%D",1,0)
This trigger is designed to set the FORCE CLAIM TO PRINT field 27 equal 
"^DD",399,399,101,1,5,"%D",2,0)
to 1 for SECONDARY MEDICARE WNR claims if the carrier field PRINT SEC MED 
"^DD",399,399,101,1,5,"%D",3,0)
CLAIMS W/O MRA, 6.1 is set.
"^DD",399,399,101,1,5,"%D",4,0)
If the current value of field 27, FORCE CLAIM TO PRINT is equal to 1, and 
"^DD",399,399,101,1,5,"%D",5,0)
field 101, PRIMARY INSURANCE CARRIER is changed to a carrier where field 
"^DD",399,399,101,1,5,"%D",6,0)
6.1, PRINT SEC MED CLAIMS W/O MRA is not set, then the value in field 27, 
"^DD",399,399,101,1,5,"%D",7,0)
FORCE CLAIM TO PRINT, is deleted.
"^DD",399,399,101,1,5,"CREATE CONDITION")
S X=$$CREATE^IBCEF84(DA)
"^DD",399,399,101,1,5,"CREATE VALUE")
S X=1
"^DD",399,399,101,1,5,"DELETE CONDITION")
S X=$$DELETE^IBCEF84(DA)
"^DD",399,399,101,1,5,"DELETE VALUE")
@
"^DD",399,399,101,1,5,"DT")
3101128
"^DD",399,399,101,1,5,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,101,1,6,0)
^^TRIGGER^399^140
"^DD",399,399,101,1,6,1)
Q
"^DD",399,399,101,1,6,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,1)=DIV,DIH=399,DIG=140 D ^DICR
"^DD",399,399,101,1,6,"%D",0)
^^2^2^3151118^
"^DD",399,399,101,1,6,"%D",1,0)
This trigger removes PRIMARY PAYER-ALT ID TYPE when PRIMARY INSURANCE 
"^DD",399,399,101,1,6,"%D",2,0)
CARRIER is changed since ID Type is dependent on INSURANCE CARRIER.
"^DD",399,399,101,1,6,"CREATE VALUE")
NO EFFECT
"^DD",399,399,101,1,6,"DELETE VALUE")
@
"^DD",399,399,101,1,6,"DT")
3151112
"^DD",399,399,101,1,6,"FIELD")
PRIMARY PAYER-ALT ID TYPE
"^DD",399,399,101,1,7,0)
^^TRIGGER^399^141
"^DD",399,399,101,1,7,1)
Q
"^DD",399,399,101,1,7,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,2)=DIV,DIH=399,DIG=141 D ^DICR
"^DD",399,399,101,1,7,"%D",0)
^^2^2^3151118^
"^DD",399,399,101,1,7,"%D",1,0)
This trigger removes PRIMARY PAYER-ALT ID when PRIMARY INSURANCE CARRIER
"^DD",399,399,101,1,7,"%D",2,0)
is changed since ID is dependent on INSURANCE CARRIER.
"^DD",399,399,101,1,7,"CREATE VALUE")
NO EFFECT
"^DD",399,399,101,1,7,"DELETE VALUE")
@
"^DD",399,399,101,1,7,"DT")
3151112
"^DD",399,399,101,1,7,"FIELD")
PRIMARY PAYER-ALT ID
"^DD",399,399,101,3)
Enter name of insurance carrier to which this bill is to be sent.
"^DD",399,399,101,5,1,0)
399^112^1
"^DD",399,399,101,12)
Only valid insurance companies for this date of care.
"^DD",399,399,101,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,101,21,0)
^^2^2^2990503^^^^
"^DD",399,399,101,21,1,0)
This is the name of the insurance carrier to which this bill is to be sent.
"^DD",399,399,101,21,2,0)
This is from the entries in this patient's file of insurance companies. 
"^DD",399,399,101,23,0)
^^3^3^2990503^^^
"^DD",399,399,101,23,1,0)
Only valid/active insurance companies for this patient can be choosen,
"^DD",399,399,101,23,2,0)
as defined by DD^IBCNS.  Company must not already be defined as a carrier 
"^DD",399,399,101,23,3,0)
(399,102-103) for this bill.
"^DD",399,399,101,"DT")
3151112
"^DD",399,399,102,0)
SECONDARY INSURANCE CARRIER^*P36'X^DIC(36,^M;2^D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,102,1,0)
^.1
"^DD",399,399,102,1,1,0)
399^AI2^MUMPS
"^DD",399,399,102,1,1,1)
Q
"^DD",399,399,102,1,1,2)
Q
"^DD",399,399,102,1,1,"DT")
2931220
"^DD",399,399,102,1,2,0)
^^TRIGGER^399^123
"^DD",399,399,102,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,2) X ^DD(399,102,1,2,1.4)
"^DD",399,399,102,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,3)=DIV,DIH=399,DIG=123 D ^DICR
"^DD",399,399,102,1,2,2)
Q
"^DD",399,399,102,1,2,3)
Do Not Delete
"^DD",399,399,102,1,2,"%D",0)
^^3^3^3020819^
"^DD",399,399,102,1,2,"%D",1,0)
This trigger sets the Bill Secondary Provider # based on the Form Type,  
"^DD",399,399,102,1,2,"%D",2,0)
using the Secondary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,102,1,2,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,102,1,2,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,2)
"^DD",399,399,102,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,2,"DT")
3020819
"^DD",399,399,102,1,2,"FIELD")
SECONDARY PROVIDER 
"^DD",399,399,102,1,3,0)
^^TRIGGER^399^24
"^DD",399,399,102,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=2 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399,102,1,3,1.1) X ^DD(399,102,1,3,1.4)
"^DD",399,399,102,1,3,1.1)
S X=DIV S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,102,1,3,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,102,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=2 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,102,1,3,2.4)
"^DD",399,399,102,1,3,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,102,1,3,3)
DO NOT DELETE
"^DD",399,399,102,1,3,"%D",0)
^^3^3^2990628^
"^DD",399,399,102,1,3,"%D",1,0)
This trigger forces the CLAIM MRA STATUS field to be set appropriately if
"^DD",399,399,102,1,3,"%D",2,0)
the current insurance is the secondary insurance company and it will require
"^DD",399,399,102,1,3,"%D",3,0)
an MRA request.
"^DD",399,399,102,1,3,"CREATE CONDITION")
I $$COBN^IBCEF(DA)=2
"^DD",399,399,102,1,3,"CREATE VALUE")
S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,102,1,3,"DELETE CONDITION")
I $$COBN^IBCEF(DA)=2
"^DD",399,399,102,1,3,"DELETE VALUE")
@
"^DD",399,399,102,1,3,"DT")
2990628
"^DD",399,399,102,1,3,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,102,1,4,0)
^^TRIGGER^399^27
"^DD",399,399,102,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=2,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,102,1,4,1.4)
"^DD",399,399,102,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,102,1,4,2)
Q
"^DD",399,399,102,1,4,3)
Do not delete
"^DD",399,399,102,1,4,"%D",0)
^^3^3^3041119^
"^DD",399,399,102,1,4,"%D",1,0)
When the current insurance is the secondary insurance and the secondary
"^DD",399,399,102,1,4,"%D",2,0)
insurance is MEDICARE WNR, delete the FORCE CLAIM TO PRINT field as it
"^DD",399,399,102,1,4,"%D",3,0)
is not valid to print an MRA request.
"^DD",399,399,102,1,4,"CREATE CONDITION")
S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=2,1:0)
"^DD",399,399,102,1,4,"CREATE VALUE")
@
"^DD",399,399,102,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,4,"DT")
3041119
"^DD",399,399,102,1,4,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,102,1,5,0)
^^TRIGGER^399^129
"^DD",399,399,102,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,X,2) X ^DD(399,102,1,5,1.4)
"^DD",399,399,102,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,11)=DIV,DIH=399,DIG=129 D ^DICR
"^DD",399,399,102,1,5,2)
Q
"^DD",399,399,102,1,5,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,X,2)
"^DD",399,399,102,1,5,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,5,"DT")
3060219
"^DD",399,399,102,1,5,"FIELD")
SECONDARY ID QUALIFIER
"^DD",399,399,102,1,6,0)
^^TRIGGER^399^142
"^DD",399,399,102,1,6,1)
Q
"^DD",399,399,102,1,6,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,3)=DIV,DIH=399,DIG=142 D ^DICR
"^DD",399,399,102,1,6,"%D",0)
^^2^2^3151118^
"^DD",399,399,102,1,6,"%D",1,0)
This trigger removes SECONDARY PAYER-ALT ID TYPE when SECONDARY INSURANCE
"^DD",399,399,102,1,6,"%D",2,0)
CARRIER is changed since ID Type is dependent on INSURANCE CARRIER.
"^DD",399,399,102,1,6,"CREATE VALUE")
NO EFFECT
"^DD",399,399,102,1,6,"DELETE VALUE")
@
"^DD",399,399,102,1,6,"DT")
3151112
"^DD",399,399,102,1,6,"FIELD")
SECONDARY PAYER-ALT ID TYPE
"^DD",399,399,102,1,7,0)
^^TRIGGER^399^143
"^DD",399,399,102,1,7,1)
Q
"^DD",399,399,102,1,7,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,4)=DIV,DIH=399,DIG=143 D ^DICR
"^DD",399,399,102,1,7,"%D",0)
^^2^2^3151118^
"^DD",399,399,102,1,7,"%D",1,0)
This trigger removes SECONDARY PAYER-ALT ID when SECONDARY INSURANCE
"^DD",399,399,102,1,7,"%D",2,0)
CARRIER is changed since ID is dependent on INSURANCE CARRIER.
"^DD",399,399,102,1,7,"CREATE VALUE")
NO EFFECT
"^DD",399,399,102,1,7,"DELETE VALUE")
@
"^DD",399,399,102,1,7,"DT")
3151112
"^DD",399,399,102,1,7,"FIELD")
SECONDARY PAYER-ALT ID
"^DD",399,399,102,3)
Enter name of secondary insurance carrier from which the provider might expect some payment for this bill.
"^DD",399,399,102,5,1,0)
399^113^1
"^DD",399,399,102,12)
Only valid insurance companies for this date of care.
"^DD",399,399,102,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,102,21,0)
^^2^2^2880831^
"^DD",399,399,102,21,1,0)
This is the name of the secondary insurance carrier from which the provider
"^DD",399,399,102,21,2,0)
might expect some payment for this bill.
"^DD",399,399,102,"DT")
3151112
"^DD",399,399,103,0)
TERTIARY INSURANCE CARRIER^*P36'X^DIC(36,^M;3^D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,103,1,0)
^.1
"^DD",399,399,103,1,1,0)
399^AI3^MUMPS
"^DD",399,399,103,1,1,1)
Q
"^DD",399,399,103,1,1,2)
Q
"^DD",399,399,103,1,1,"DT")
2931220
"^DD",399,399,103,1,2,0)
^^TRIGGER^399^124
"^DD",399,399,103,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,3) X ^DD(399,103,1,2,1.4)
"^DD",399,399,103,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,4)=DIV,DIH=399,DIG=124 D ^DICR
"^DD",399,399,103,1,2,2)
Q
"^DD",399,399,103,1,2,3)
Do Not Delete
"^DD",399,399,103,1,2,"%D",0)
^^3^3^3020819^
"^DD",399,399,103,1,2,"%D",1,0)
This trigger sets the Bill Tertiary Provider # based on the Form Type,  
"^DD",399,399,103,1,2,"%D",2,0)
using the Tertiary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,103,1,2,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,103,1,2,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,3)
"^DD",399,399,103,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,103,1,2,"DT")
3020819
"^DD",399,399,103,1,2,"FIELD")
TERTIARY PROVIDER
"^DD",399,399,103,1,3,0)
^^TRIGGER^399^130
"^DD",399,399,103,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,X,3) X ^DD(399,103,1,3,1.4)
"^DD",399,399,103,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,12)=DIV,DIH=399,DIG=130 D ^DICR
"^DD",399,399,103,1,3,2)
Q
"^DD",399,399,103,1,3,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,X,3)
"^DD",399,399,103,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,103,1,3,"DT")
3060219
"^DD",399,399,103,1,3,"FIELD")
TERTIARY ID QUALIFIER
"^DD",399,399,103,1,4,0)
^^TRIGGER^399^145
"^DD",399,399,103,1,4,1)
Q
"^DD",399,399,103,1,4,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,6)=DIV,DIH=399,DIG=145 D ^DICR
"^DD",399,399,103,1,4,"%D",0)
^^2^2^3151118^
"^DD",399,399,103,1,4,"%D",1,0)
This trigger removes TERTIARY PAYER-ALT ID when TERTIARY INSURANCE
"^DD",399,399,103,1,4,"%D",2,0)
CARRIER is changed since ID is dependent on INSURANCE CARRIER.
"^DD",399,399,103,1,4,"CREATE VALUE")
NO EFFECT
"^DD",399,399,103,1,4,"DELETE VALUE")
@
"^DD",399,399,103,1,4,"DT")
3151112
"^DD",399,399,103,1,4,"FIELD")
TERTIARY PAYER-ALT ID
"^DD",399,399,103,1,5,0)
^^TRIGGER^399^144
"^DD",399,399,103,1,5,1)
Q
"^DD",399,399,103,1,5,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,5)=DIV,DIH=399,DIG=144 D ^DICR
"^DD",399,399,103,1,5,"%D",0)
^^2^2^3151118^
"^DD",399,399,103,1,5,"%D",1,0)
This trigger removes TERTIARY PAYER-ALT ID TYPE when TERTIARY INSURANCE
"^DD",399,399,103,1,5,"%D",2,0)
CARRIER is changed since ID Type is dependent on INSURANCE CARRIER.
"^DD",399,399,103,1,5,"CREATE VALUE")
NO EFFECT
"^DD",399,399,103,1,5,"DELETE VALUE")
@
"^DD",399,399,103,1,5,"DT")
3151112
"^DD",399,399,103,1,5,"FIELD")
TERTIARY PAYER-ALT ID TYPE
"^DD",399,399,103,3)
Enter name of tertiary insurance carrier from which the provider might expect some payment for this bill.
"^DD",399,399,103,5,1,0)
399^114^1
"^DD",399,399,103,12)
Only valid insurance companies for this date of care.
"^DD",399,399,103,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,103,21,0)
^^2^2^2880831^
"^DD",399,399,103,21,1,0)
This is the name of the tertiary insurance carrier from which the provider
"^DD",399,399,103,21,2,0)
might expect some payment for this bill.
"^DD",399,399,103,"DT")
3151112
"^DD",399,399,140,0)
PRIMARY PAYER-ALT ID TYPE^*P355.98'^IBA(355.98,^M2;1^S DIC("S")="I $$ACIDS^IBCU(DA,1,+Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,140,1,0)
^.1
"^DD",399,399,140,1,1,0)
^^TRIGGER^399^141
"^DD",399,399,140,1,1,1)
X ^DD(399,140,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$ACIDD^IBCU(DA,1,X) X ^DD(399,140,1,1,1.4)
"^DD",399,399,140,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,2)=""
"^DD",399,399,140,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,2)=DIV,DIH=399,DIG=141 D ^DICR
"^DD",399,399,140,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,2)=DIV,DIH=399,DIG=141 D ^DICR
"^DD",399,399,140,1,1,"%D",0)
^^2^2^3151119^
"^DD",399,399,140,1,1,"%D",1,0)
Trigger the default Alternate ID for this INSURANCE COMPANY and this FORM
"^DD",399,399,140,1,1,"%D",2,0)
TYPE.
"^DD",399,399,140,1,1,"CREATE CONDITION")
#141=""
"^DD",399,399,140,1,1,"CREATE VALUE")
S X=$$ACIDD^IBCU(DA,1,X)
"^DD",399,399,140,1,1,"DELETE VALUE")
@
"^DD",399,399,140,1,1,"DT")
3150922
"^DD",399,399,140,1,1,"FIELD")
#141
"^DD",399,399,140,3)
Enter an Alternate Payer ID Type.
"^DD",399,399,140,5,1,0)
399^101^6
"^DD",399,399,140,5,2,0)
399^.19^4
"^DD",399,399,140,12)
Only allow ID types set up in Insurance Company Editor.
"^DD",399,399,140,12.1)
S DIC("S")="I $$ACIDS^IBCU(DA,1,+Y)"
"^DD",399,399,140,21,0)
^^2^2^3151119^
"^DD",399,399,140,21,1,0)
This is the Alternate Inst Primary Payer ID Type which is used
"^DD",399,399,140,21,2,0)
to identify an Alternate Inst Primary Payer ID for this payer.
"^DD",399,399,140,"DT")
3151119
"^DD",399,399,141,0)
PRIMARY PAYER-ALT ID^FX^^M2;2^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X
"^DD",399,399,141,3)
Answer must be 1-30 characters in length and not contain PRNT.
"^DD",399,399,141,5,1,0)
399^140^1
"^DD",399,399,141,5,2,0)
399^101^7
"^DD",399,399,141,5,3,0)
399^.19^6
"^DD",399,399,141,21,0)
^^3^3^3151119^
"^DD",399,399,141,21,1,0)
This is the Alternate Inst Prim Payer ID which is
"^DD",399,399,141,21,2,0)
used to route claims to an alternate administration 
"^DD",399,399,141,21,3,0)
contractor for certain claims.
"^DD",399,399,141,"DT")
3151119
"^DD",399,399,142,0)
SECONDARY PAYER-ALT ID TYPE^*P355.98'^IBA(355.98,^M2;3^S DIC("S")="I $$ACIDS^IBCU(DA,2,+Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,142,1,0)
^.1
"^DD",399,399,142,1,1,0)
^^TRIGGER^399^143
"^DD",399,399,142,1,1,1)
X ^DD(399,142,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$$ACIDD^IBCU(DA,2,X) X ^DD(399,142,1,1,1.4)
"^DD",399,399,142,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,4)=""
"^DD",399,399,142,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,4)=DIV,DIH=399,DIG=143 D ^DICR
"^DD",399,399,142,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,4)=DIV,DIH=399,DIG=143 D ^DICR
"^DD",399,399,142,1,1,"%D",0)
^^2^2^3151119^
"^DD",399,399,142,1,1,"%D",1,0)
Trigger the default Alternate ID for this INSURANCE COMPANY and this FORM
"^DD",399,399,142,1,1,"%D",2,0)
TYPE.
"^DD",399,399,142,1,1,"CREATE CONDITION")
#143=""
"^DD",399,399,142,1,1,"CREATE VALUE")
S X=$$ACIDD^IBCU(DA,2,X)
"^DD",399,399,142,1,1,"DELETE VALUE")
@
"^DD",399,399,142,1,1,"DT")
3150922
"^DD",399,399,142,1,1,"FIELD")
#143
"^DD",399,399,142,3)
Enter an Alternate Payer ID Type.
"^DD",399,399,142,5,1,0)
399^102^6
"^DD",399,399,142,5,2,0)
399^.19^7
"^DD",399,399,142,12)
Only allow ID types set up in Insurance Company Editor.
"^DD",399,399,142,12.1)
S DIC("S")="I $$ACIDS^IBCU(DA,2,+Y)"
"^DD",399,399,142,21,0)
^^2^2^3151119^
"^DD",399,399,142,21,1,0)
This is the Alternate Inst Primary Payer ID Type which is used
"^DD",399,399,142,21,2,0)
to identify an Alternate Inst Primary Payer ID for this payer.
"^DD",399,399,142,"DT")
3151119
"^DD",399,399,143,0)
SECONDARY PAYER-ALT ID^FX^^M2;4^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X
"^DD",399,399,143,3)
Answer must be 1-30 characters in length and not contain PRNT.
"^DD",399,399,143,5,1,0)
399^142^1
"^DD",399,399,143,5,2,0)
399^102^7
"^DD",399,399,143,5,3,0)
399^.19^8
"^DD",399,399,143,21,0)
^^3^3^3151119^
"^DD",399,399,143,21,1,0)
This is the Alternate Inst Prim Payer ID which is
"^DD",399,399,143,21,2,0)
used to route claims to an alternate administration 
"^DD",399,399,143,21,3,0)
contractor for certain claims.
"^DD",399,399,143,"DT")
3151119
"^DD",399,399,144,0)
TERTIARY PAYER-ALT ID TYPE^*P355.98'^IBA(355.98,^M2;5^S DIC("S")="I $$ACIDS^IBCU(DA,3,+Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,144,1,0)
^.1
"^DD",399,399,144,1,1,0)
^^TRIGGER^399^145
"^DD",399,399,144,1,1,1)
X ^DD(399,144,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=$$ACIDD^IBCU(DA,3,X) X ^DD(399,144,1,1,1.4)
"^DD",399,399,144,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,6)=""
"^DD",399,399,144,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,6)=DIV,DIH=399,DIG=145 D ^DICR
"^DD",399,399,144,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M2")):^("M2"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"M2")),DIV=X S $P(^("M2"),U,6)=DIV,DIH=399,DIG=145 D ^DICR
"^DD",399,399,144,1,1,"%D",0)
^^2^2^3151119^
"^DD",399,399,144,1,1,"%D",1,0)
Trigger the default Alternate ID for this INSURANCE COMPANY and this FORM
"^DD",399,399,144,1,1,"%D",2,0)
TYPE.
"^DD",399,399,144,1,1,"CREATE CONDITION")
#145=""
"^DD",399,399,144,1,1,"CREATE VALUE")
S X=$$ACIDD^IBCU(DA,3,X)
"^DD",399,399,144,1,1,"DELETE VALUE")
@
"^DD",399,399,144,1,1,"DT")
3150922
"^DD",399,399,144,1,1,"FIELD")
#145
"^DD",399,399,144,3)
Enter an Alternate Payer ID Type.
"^DD",399,399,144,5,1,0)
399^103^5
"^DD",399,399,144,5,2,0)
399^.19^9
"^DD",399,399,144,12)
Only allow ID types set up in Insurance Company Editor.
"^DD",399,399,144,12.1)
S DIC("S")="I $$ACIDS^IBCU(DA,3,+Y)"
"^DD",399,399,144,21,0)
^^2^2^3151119^^
"^DD",399,399,144,21,1,0)
This is the Alternate Inst Primary Payer ID Type which is used
"^DD",399,399,144,21,2,0)
to identify an Alternate Inst Primary Payer ID for this payer.
"^DD",399,399,144,"DT")
3151119
"^DD",399,399,145,0)
TERTIARY PAYER-ALT ID^FX^^M2;6^K:$L(X)>30!($L(X)<1)!($$UP^XLFSTR(X)["PRNT") X
"^DD",399,399,145,3)
Answer must be 1-30 characters in length and not contain PRNT.
"^DD",399,399,145,5,1,0)
399^144^1
"^DD",399,399,145,5,2,0)
399^103^4
"^DD",399,399,145,5,3,0)
399^.19^10
"^DD",399,399,145,21,0)
^^3^3^3151119^
"^DD",399,399,145,21,1,0)
This is the Alternate Inst Prim Payer ID which is
"^DD",399,399,145,21,2,0)
used to route claims to an alternate administration 
"^DD",399,399,145,21,3,0)
contractor for certain claims.
"^DD",399,399,145,"DT")
3151119
"^DIC",355.98,355.98,0)
IB ALTERNATE PRIMARY ID TYPE^355.98
"^DIC",355.98,355.98,0,"GL")
^IBA(355.98,
"^DIC",355.98,355.98,"%",0)
^1.005^^
"^DIC",355.98,355.98,"%D",0)
^^3^3^3151117^
"^DIC",355.98,355.98,"%D",1,0)
This file contains the Alternate Primary Payer ID Types which are used to
"^DIC",355.98,355.98,"%D",2,0)
identify an Alternate Primary Payer ID for a payer to be sent on the
"^DIC",355.98,355.98,"%D",3,0)
outgoing electronic claim (837).
"^DIC",355.98,"B","IB ALTERNATE PRIMARY ID TYPE",355.98)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"^DIC",368,368,0)
HEALTH CARE CLAIM RFAI (277)^368
"^DIC",368,368,0,"GL")
^IBA(368,
"^DIC",368,368,"%",0)
^1.005
"^DIC",368,368,"%D",0)
^^2^2^3151201^
"^DIC",368,368,"%D",1,0)
This file contains all records received from the FSC ASC X12N health Care 
"^DIC",368,368,"%D",2,0)
Claim Request For Additional Information (277) HL7 message.
"^DIC",368,"B","HEALTH CARE CLAIM RFAI (277)",368)

"^DIC",368.001,368.001,0)
X12 277 CLAIM STATUS CATEGORY^368.001
"^DIC",368.001,368.001,0,"GL")
^IBE(368.001,
"^DIC",368.001,368.001,"%",0)
^1.005^^
"^DIC",368.001,368.001,"%D",0)
^^2^2^3151125^
"^DIC",368.001,368.001,"%D",1,0)
Health Care Claim Status Codes - limited to the R codes of X12 code 
"^DIC",368.001,368.001,"%D",2,0)
source 507.
"^DIC",368.001,"B","X12 277 CLAIM STATUS CATEGORY",368.001)

"^DIC",368.002,368.002,0)
X12 277 PRODUCT OR SERVICE ID QUAL^368.002
"^DIC",368.002,368.002,0,"GL")
^IBE(368.002,
"^DIC",368.002,368.002,"%",0)
^1.005^^
"^DIC",368.002,368.002,"%D",0)
^^2^2^3151125^
"^DIC",368.002,368.002,"%D",1,0)
Code identifying the type/source of the descriptive number used in
"^DIC",368.002,368.002,"%D",2,0)
Product/Service ID.
"^DIC",368.002,"B","X12 277 PRODUCT OR SERVICE ID QUAL",368.002)

"BLD",9780,6)
^521
**END**
**END**

