Released IB*2*413 SEQ #391
Extracted from mail message
**KIDS**:IB*2.0*413^

**INSTALL NAME**
IB*2.0*413
"BLD",7983,0)
IB*2.0*413^INTEGRATED BILLING^0^3090903^y
"BLD",7983,1,0)
^^34^34^3090616^
"BLD",7983,1,1,0)
This build provides three new APIs for the Insurance Capture Buffer 
"BLD",7983,1,2,0)
application. There are two APIs that are to be used to move Insurance 
"BLD",7983,1,3,0)
Buffer (#355.33) file data to other Integrated Billing files or reject 
"BLD",7983,1,4,0)
this data. These APIs provide a front end into the existing ACCEPT and 
"BLD",7983,1,5,0)
REJECT Insurance Buffer APIs which suppresses all write statements and 
"BLD",7983,1,6,0)
interactive fileman calls within the existing code.
"BLD",7983,1,7,0)
 
"BLD",7983,1,8,0)
The Insurance Buffer (#355.33) file data is moved to the following files: 
"BLD",7983,1,9,0)
     Insurance Company (#36) file
"BLD",7983,1,10,0)
     Group Insurance Plan (#355.3) file
"BLD",7983,1,11,0)
     Patient Insurance Type (#2.312) subfile
"BLD",7983,1,12,0)
 
"BLD",7983,1,13,0)
There is also an API (UPDTICB) which will allow for fields that are not 
"BLD",7983,1,14,0)
stored in the insurance buffer to be updated into the IB Insurance Files.
"BLD",7983,1,15,0)
 
"BLD",7983,1,16,0)
These APIs are documented in Integration Control Registration (ICR) 
"BLD",7983,1,17,0)
#5353, (Accept/Reject Insurance Buffer data APIs).
"BLD",7983,1,18,0)
 
"BLD",7983,1,19,0)
The three new APIs are:
"BLD",7983,1,20,0)
       
"BLD",7983,1,21,0)
   
"BLD",7983,1,22,0)
   ACCEPAPI^IBCNICB(RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,
"BLD",7983,1,23,0)
                    IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR)
"BLD",7983,1,24,0)
   REJECAPI^IBCNICB(RESULT,IBBUFDA,IVMREPTR) 
"BLD",7983,1,25,0)
   UPDTICB^IBCNICB (RESULT,DFN,IBPOLDA,IBGRPDA,IBPOLCOM,IBPOLBIL,IBPLAN,
"BLD",7983,1,26,0)
                    IBELEC,IBGPCOM,IBFTF,IBFTFVAL)
"BLD",7983,1,27,0)
 
"BLD",7983,1,28,0)
This patch removes the Traditional Regular type "B" cross-reference on the
"BLD",7983,1,29,0)
TYPE OF PLAN (#355.1) file since this cross-reference only contains the
"BLD",7983,1,30,0)
first 30 characters of the NAME (#.01) field. This cross-reference
"BLD",7983,1,31,0)
limitation may create problems when using the Fileman DBS calls. A New
"BLD",7983,1,32,0)
Style Regular "B" cross-reference will be added that will contain all
"BLD",7983,1,33,0)
characters to the field limit of 40 characters. In a post install the
"BLD",7983,1,34,0)
patch will build the new "B" cross-reference on the file.
"BLD",7983,4,0)
^9.64PA^355.1^1
"BLD",7983,4,355.1,0)
355.1
"BLD",7983,4,355.1,2,0)
^9.641^355.1^1
"BLD",7983,4,355.1,2,355.1,0)
TYPE OF PLAN  (File-top level)
"BLD",7983,4,355.1,2,355.1,1,0)
^9.6411^.01^1
"BLD",7983,4,355.1,2,355.1,1,.01,0)
NAME
"BLD",7983,4,355.1,222)
y^y^p^^^^n^^n
"BLD",7983,4,355.1,224)

"BLD",7983,4,"APDD",355.1,355.1)

"BLD",7983,4,"APDD",355.1,355.1,.01)

"BLD",7983,4,"B",355.1,355.1)

"BLD",7983,6.3)
9
"BLD",7983,"INI")
DELB^IB20P413
"BLD",7983,"INID")
^y
"BLD",7983,"INIT")
REINDEX^IB20P413
"BLD",7983,"KRN",0)
^9.67PA^779.2^20
"BLD",7983,"KRN",.4,0)
.4
"BLD",7983,"KRN",.401,0)
.401
"BLD",7983,"KRN",.402,0)
.402
"BLD",7983,"KRN",.403,0)
.403
"BLD",7983,"KRN",.5,0)
.5
"BLD",7983,"KRN",.84,0)
.84
"BLD",7983,"KRN",3.6,0)
3.6
"BLD",7983,"KRN",3.8,0)
3.8
"BLD",7983,"KRN",9.2,0)
9.2
"BLD",7983,"KRN",9.8,0)
9.8
"BLD",7983,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",7983,"KRN",9.8,"NM",1,0)
IBCNBAR^^0^B41255372
"BLD",7983,"KRN",9.8,"NM",2,0)
IBCNBMI^^0^B80184806
"BLD",7983,"KRN",9.8,"NM",3,0)
IBCNICB^^0^B105382395
"BLD",7983,"KRN",9.8,"NM",4,0)
IBCNSM31^^0^B20882944
"BLD",7983,"KRN",9.8,"NM",5,0)
IBCNSM32^^0^B26493430
"BLD",7983,"KRN",9.8,"NM",6,0)
IBTRCD1^^0^B26536590
"BLD",7983,"KRN",9.8,"NM","B","IBCNBAR",1)

"BLD",7983,"KRN",9.8,"NM","B","IBCNBMI",2)

"BLD",7983,"KRN",9.8,"NM","B","IBCNICB",3)

"BLD",7983,"KRN",9.8,"NM","B","IBCNSM31",4)

"BLD",7983,"KRN",9.8,"NM","B","IBCNSM32",5)

"BLD",7983,"KRN",9.8,"NM","B","IBTRCD1",6)

"BLD",7983,"KRN",19,0)
19
"BLD",7983,"KRN",19,"NM",0)
^9.68A^^
"BLD",7983,"KRN",19.1,0)
19.1
"BLD",7983,"KRN",101,0)
101
"BLD",7983,"KRN",409.61,0)
409.61
"BLD",7983,"KRN",771,0)
771
"BLD",7983,"KRN",779.2,0)
779.2
"BLD",7983,"KRN",870,0)
870
"BLD",7983,"KRN",8989.51,0)
8989.51
"BLD",7983,"KRN",8989.52,0)
8989.52
"BLD",7983,"KRN",8994,0)
8994
"BLD",7983,"KRN","B",.4,.4)

"BLD",7983,"KRN","B",.401,.401)

"BLD",7983,"KRN","B",.402,.402)

"BLD",7983,"KRN","B",.403,.403)

"BLD",7983,"KRN","B",.5,.5)

"BLD",7983,"KRN","B",.84,.84)

"BLD",7983,"KRN","B",3.6,3.6)

"BLD",7983,"KRN","B",3.8,3.8)

"BLD",7983,"KRN","B",9.2,9.2)

"BLD",7983,"KRN","B",9.8,9.8)

"BLD",7983,"KRN","B",19,19)

"BLD",7983,"KRN","B",19.1,19.1)

"BLD",7983,"KRN","B",101,101)

"BLD",7983,"KRN","B",409.61,409.61)

"BLD",7983,"KRN","B",771,771)

"BLD",7983,"KRN","B",779.2,779.2)

"BLD",7983,"KRN","B",870,870)

"BLD",7983,"KRN","B",8989.51,8989.51)

"BLD",7983,"KRN","B",8989.52,8989.52)

"BLD",7983,"KRN","B",8994,8994)

"BLD",7983,"QUES",0)
^9.62^^
"BLD",7983,"REQB",0)
^9.611^4^3
"BLD",7983,"REQB",2,0)
IB*2.0*359^1
"BLD",7983,"REQB",3,0)
IB*2.0*399^1
"BLD",7983,"REQB",4,0)
IVM*2.0*135^1
"BLD",7983,"REQB","B","IB*2.0*359",2)

"BLD",7983,"REQB","B","IB*2.0*399",3)

"BLD",7983,"REQB","B","IVM*2.0*135",4)

"FIA",355.1)
TYPE OF PLAN
"FIA",355.1,0)
^IBE(355.1,
"FIA",355.1,0,0)
355.1I
"FIA",355.1,0,1)
y^y^p^^^^n^^n
"FIA",355.1,0,10)

"FIA",355.1,0,11)

"FIA",355.1,0,"RLRO")

"FIA",355.1,0,"VR")
2.0^IB
"FIA",355.1,355.1)
1
"FIA",355.1,355.1,.01)

"INI")
DELB^IB20P413
"INIT")
REINDEX^IB20P413
"IX",355.1,355.1,"B",0)
355.1^B^"B" Regular Cross-Reference of .01 field^R^^F^IR^I^355.1^^^^^LS
"IX",355.1,355.1,"B",.1,0)
^^3^3^3090615^^
"IX",355.1,355.1,"B",.1,1,0)
The "B" cross-reference has been updated to allow for a full 40-character
"IX",355.1,355.1,"B",.1,2,0)
lookup instead of being limited to the first 30 characters. This is done
"IX",355.1,355.1,"B",.1,3,0)
to prevent a potential lookup error by Fileman DBS calls.
"IX",355.1,355.1,"B",1)
S ^IBE(355.1,"B",$E(X,1,40),DA)=""
"IX",355.1,355.1,"B",2)
K ^IBE(355.1,"B",$E(X,1,40),DA)
"IX",355.1,355.1,"B",2.5)
K ^IBE(355.1,"B")
"IX",355.1,355.1,"B",11.1,0)
^.114IA^1^1
"IX",355.1,355.1,"B",11.1,1,0)
1^F^355.1^.01^40^1^F
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
413^3090903
"PKG",200,22,1,"PAH",1,1,0)
^^34^34^3090903
"PKG",200,22,1,"PAH",1,1,1,0)
This build provides three new APIs for the Insurance Capture Buffer 
"PKG",200,22,1,"PAH",1,1,2,0)
application. There are two APIs that are to be used to move Insurance 
"PKG",200,22,1,"PAH",1,1,3,0)
Buffer (#355.33) file data to other Integrated Billing files or reject 
"PKG",200,22,1,"PAH",1,1,4,0)
this data. These APIs provide a front end into the existing ACCEPT and 
"PKG",200,22,1,"PAH",1,1,5,0)
REJECT Insurance Buffer APIs which suppresses all write statements and 
"PKG",200,22,1,"PAH",1,1,6,0)
interactive fileman calls within the existing code.
"PKG",200,22,1,"PAH",1,1,7,0)
 
"PKG",200,22,1,"PAH",1,1,8,0)
The Insurance Buffer (#355.33) file data is moved to the following files: 
"PKG",200,22,1,"PAH",1,1,9,0)
     Insurance Company (#36) file
"PKG",200,22,1,"PAH",1,1,10,0)
     Group Insurance Plan (#355.3) file
"PKG",200,22,1,"PAH",1,1,11,0)
     Patient Insurance Type (#2.312) subfile
"PKG",200,22,1,"PAH",1,1,12,0)
 
"PKG",200,22,1,"PAH",1,1,13,0)
There is also an API (UPDTICB) which will allow for fields that are not 
"PKG",200,22,1,"PAH",1,1,14,0)
stored in the insurance buffer to be updated into the IB Insurance Files.
"PKG",200,22,1,"PAH",1,1,15,0)
 
"PKG",200,22,1,"PAH",1,1,16,0)
These APIs are documented in Integration Control Registration (ICR) 
"PKG",200,22,1,"PAH",1,1,17,0)
#5353, (Accept/Reject Insurance Buffer data APIs).
"PKG",200,22,1,"PAH",1,1,18,0)
 
"PKG",200,22,1,"PAH",1,1,19,0)
The three new APIs are:
"PKG",200,22,1,"PAH",1,1,20,0)
       
"PKG",200,22,1,"PAH",1,1,21,0)
   
"PKG",200,22,1,"PAH",1,1,22,0)
   ACCEPAPI^IBCNICB(RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,
"PKG",200,22,1,"PAH",1,1,23,0)
                    IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR)
"PKG",200,22,1,"PAH",1,1,24,0)
   REJECAPI^IBCNICB(RESULT,IBBUFDA,IVMREPTR) 
"PKG",200,22,1,"PAH",1,1,25,0)
   UPDTICB^IBCNICB (RESULT,DFN,IBPOLDA,IBGRPDA,IBPOLCOM,IBPOLBIL,IBPLAN,
"PKG",200,22,1,"PAH",1,1,26,0)
                    IBELEC,IBGPCOM,IBFTF,IBFTFVAL)
"PKG",200,22,1,"PAH",1,1,27,0)
 
"PKG",200,22,1,"PAH",1,1,28,0)
This patch removes the Traditional Regular type "B" cross-reference on the
"PKG",200,22,1,"PAH",1,1,29,0)
TYPE OF PLAN (#355.1) file since this cross-reference only contains the
"PKG",200,22,1,"PAH",1,1,30,0)
first 30 characters of the NAME (#.01) field. This cross-reference
"PKG",200,22,1,"PAH",1,1,31,0)
limitation may create problems when using the Fileman DBS calls. A New
"PKG",200,22,1,"PAH",1,1,32,0)
Style Regular "B" cross-reference will be added that will contain all
"PKG",200,22,1,"PAH",1,1,33,0)
characters to the field limit of 40 characters. In a post install the
"PKG",200,22,1,"PAH",1,1,34,0)
patch will build the new "B" cross-reference on the file.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","IB20P413")
0^^B1885171^n/a
"RTN","IB20P413",1,0)
IB20P413 ;ALB/SBW - Pre and Post install APIs ;16 June 2009
"RTN","IB20P413",2,0)
 ;;2.0;INTEGRATED BILLING;**413**;21-MAR-94;Build 9
"RTN","IB20P413",3,0)
 ;
"RTN","IB20P413",4,0)
DELB ;Delete the existing traditional "B" x-ref which will be updated to be
"RTN","IB20P413",5,0)
 ;a New Style Index of Regular Type for all 40 characters of the Name 
"RTN","IB20P413",6,0)
 ;(#.01) field in the TYPE OF PLAN (#355.1) file.
"RTN","IB20P413",7,0)
 N ERRMSG
"RTN","IB20P413",8,0)
 D BMES^XPDUTL("Traditionl 'B' cross-reference on TYPE OF PLAN (#355.1) file will be removed.")
"RTN","IB20P413",9,0)
 D DELIX^DDMOD(355.1,.01,1,"K",,"ERRMSG")
"RTN","IB20P413",10,0)
 I $D(ERRMSG) D
"RTN","IB20P413",11,0)
 . D BMES^XPDUTL("Error occured when removing Old 'B' cross-reference.")
"RTN","IB20P413",12,0)
 . D BMES^XPDUTL($G(ERRMSG("DIERR",1,"TEXT",1)))
"RTN","IB20P413",13,0)
 . D BMES^XPDUTL("Contact National Help Desk for assistances.")
"RTN","IB20P413",14,0)
 ;
"RTN","IB20P413",15,0)
 Q
"RTN","IB20P413",16,0)
REINDEX ;Re-index 355.1 "B" x-ref. X-ref was updated from being limited
"RTN","IB20P413",17,0)
 ;to the first 30 characters of the 40 character .01 field to using 
"RTN","IB20P413",18,0)
 ;the entire 40 characters for the x-ref.
"RTN","IB20P413",19,0)
 ;
"RTN","IB20P413",20,0)
 ;write message to user about cross-reference re-indexing
"RTN","IB20P413",21,0)
 D BMES^XPDUTL("New 'B' cross-reference on TYPE OF PLAN (#355.1) file will be re-indexed")
"RTN","IB20P413",22,0)
 N DIK
"RTN","IB20P413",23,0)
 S DIK="^IBE(355.1,",DIK(1)=".01^B"
"RTN","IB20P413",24,0)
 D ENALL^DIK
"RTN","IB20P413",25,0)
 D BMES^XPDUTL("Re-index completed")
"RTN","IB20P413",26,0)
 Q
"RTN","IBCNBAR")
0^1^B41255372^B18909068
"RTN","IBCNBAR",1,0)
IBCNBAR ;ALB/ARH-Ins Buffer: process Accept and Reject ;15 Jan 2009
"RTN","IBCNBAR",2,0)
 ;;2.0;INTEGRATED BILLING;**82,240,345,413**;21-MAR-94;Build 9
"RTN","IBCNBAR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNBAR",4,0)
 ;
"RTN","IBCNBAR",5,0)
 ;
"RTN","IBCNBAR",6,0)
ACCEPT(IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL) ; move buffer data into Insurance files then cleanup
"RTN","IBCNBAR",7,0)
 ;    1) data moved into insurance files, new records created if needed or edit existing ones
"RTN","IBCNBAR",8,0)
 ;    2) complete some general functions that are executed whenever insurance is entered/edited
"RTN","IBCNBAR",9,0)
 ;    3) allow user to view buffer entry and new/updated insurance records
"RTN","IBCNBAR",10,0)
 ;    4) buffer ins/group/policy data deleted
"RTN","IBCNBAR",11,0)
 ;    5) buffer entry status updated
"RTN","IBCNBAR",12,0)
 ;
"RTN","IBCNBAR",13,0)
 N RESULT,IBSUPRES
"RTN","IBCNBAR",14,0)
 ;Set IBSUPRES to zero to not suppress I/O within Accept 
"RTN","IBCNBAR",15,0)
 S IBSUPRES=0
"RTN","IBCNBAR",16,0)
 ;
"RTN","IBCNBAR",17,0)
PROCESS ; process all changes selected by user, add/edit insurance files based
"RTN","IBCNBAR",18,0)
 ; on buffer data. Entry point for ACCEPAPI^IBCNICB (patch 413)
"RTN","IBCNBAR",19,0)
 ;
"RTN","IBCNBAR",20,0)
 N IVMINSUP,IBNEW,IBCDFN S IBCDFN=IBPOLDA S:+IBNEWPOL IBNEW=1 D BEFORE^IBCNSEVT ; insurance event driver
"RTN","IBCNBAR",21,0)
 ;
"RTN","IBCNBAR",22,0)
 N DIR,X,Y,IBX,IBINSH,IBGRPH,IBPOLH S (IBINSH,IBGRPH,IBPOLH)="Updated" W:$G(IBSUPRES)'>0 " ...",!
"RTN","IBCNBAR",23,0)
 ;
"RTN","IBCNBAR",24,0)
 S RESULT(0)="-1^Add new INSURANCE COMPANY failed"
"RTN","IBCNBAR",25,0)
 I +IBNEWINS S IBINSDA=+$$NEWINS^IBCNBMN(IBBUFDA) G:'IBINSDA ACCPTQ  S IBINSH="Created",RESULT(1)="IBINSDA^"_IBINSDA
"RTN","IBCNBAR",26,0)
 ;
"RTN","IBCNBAR",27,0)
 S RESULT(0)="-1^Add new GROUP INSURANCE PLAN failed"
"RTN","IBCNBAR",28,0)
 I +IBNEWGRP S IBGRPDA=+$$NEWGRP^IBCNBMN(IBBUFDA,+IBINSDA) G:'IBGRPDA ACCPTQ S IBGRPH="Created",RESULT(2)="IBGRPDA^"_IBGRPDA
"RTN","IBCNBAR",29,0)
 ;
"RTN","IBCNBAR",30,0)
 S RESULT(0)="-1^Add new patient insurance policy failed"
"RTN","IBCNBAR",31,0)
 I +IBNEWPOL S IBPOLDA=+$$NEWPOL^IBCNBMN(IBBUFDA,+IBINSDA,+IBGRPDA) G:'IBPOLDA ACCPTQ S IBPOLH="Created",RESULT(3)="IBPOLDA^"_IBPOLDA
"RTN","IBCNBAR",32,0)
 ;
"RTN","IBCNBAR",33,0)
 ;Only do this check for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",34,0)
 S RESULT(0)="-1^Move TYPE parameter value="_IBMVINS_" is invalid"
"RTN","IBCNBAR",35,0)
 I $G(IBSUPRES)>0,"^1^2^3^"'[("^"_IBMVINS_"^") Q
"RTN","IBCNBAR",36,0)
 ;
"RTN","IBCNBAR",37,0)
 S RESULT(0)="-1^Move buffer data to insurance files failed"
"RTN","IBCNBAR",38,0)
 I +IBINSDA,+IBMVINS D INS^IBCNBMI(IBBUFDA,IBINSDA,+IBMVINS,.RESULT) W:$G(IBSUPRES)'>0 !,"Insurance Company "_IBINSH_"..."
"RTN","IBCNBAR",39,0)
 I +IBINSDA,+IBMVGRP,+IBGRPDA D 
"RTN","IBCNBAR",40,0)
 . D GRP^IBCNBMI(IBBUFDA,IBGRPDA,+IBMVGRP,.RESULT)
"RTN","IBCNBAR",41,0)
 . ; For ICB Interface ensure INDIVIDUAL POLICY PATIENT (.1) field is
"RTN","IBCNBAR",42,0)
 . ; appropriate for IS THIS A GROUP POLICY? (.02) field
"RTN","IBCNBAR",43,0)
 . I $G(IBSUPRES)>0 D
"RTN","IBCNBAR",44,0)
 . . N IBFLDS,IBISGRP,IBPAT
"RTN","IBCNBAR",45,0)
 . . S IBISGRP=$$GET1^DIQ(355.3,IBGRPDA,.02,"I")
"RTN","IBCNBAR",46,0)
 . . S IBPAT=$$GET1^DIQ(355.3,IBGRPDA,.1,"I")
"RTN","IBCNBAR",47,0)
 . . ;Quit if Group Policy and .1 field isn't populated
"RTN","IBCNBAR",48,0)
 . . I IBISGRP>0,IBPAT'>0 Q
"RTN","IBCNBAR",49,0)
 . . ;Quit if Individual Policy and .1 field is populated.
"RTN","IBCNBAR",50,0)
 . . I IBISGRP'>0,IBPAT>0 Q
"RTN","IBCNBAR",51,0)
 . . ;Delete .1 field if Group Policy
"RTN","IBCNBAR",52,0)
 . . I IBISGRP>0 S IBFLDS(355.3,IBGRPDA_",",.1)="@"
"RTN","IBCNBAR",53,0)
 . . I IBISGRP'>0 S IBFLDS(355.3,IBGRPDA_",",.1)=DFN
"RTN","IBCNBAR",54,0)
 . . D FILE^DIE("","IBFLDS","IBERR")
"RTN","IBCNBAR",55,0)
 . W:$G(IBSUPRES)'>0 !,"Group/Plan "_IBGRPH_"..."
"RTN","IBCNBAR",56,0)
 I +IBINSDA,+IBMVPOL,+IBGRPDA,+IBPOLDA D POLICY^IBCNBMI(IBBUFDA,IBPOLDA,+IBMVPOL,.RESULT) W:$G(IBSUPRES)'>0 !,"Patient Policy "_IBPOLH_"..."
"RTN","IBCNBAR",57,0)
 ;
"RTN","IBCNBAR",58,0)
 ;Only do this update for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",59,0)
 I $G(IBSUPRES)>0,+IBMVPOL,+IBGRPDA,+IBPOLDA,'IBNEWPOL D UPDPOL^IBCNICB(.RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA)
"RTN","IBCNBAR",60,0)
 ;
"RTN","IBCNBAR",61,0)
CLEANUP ; general updates and checks done whenever insurance is added/edited and clean up buffer file
"RTN","IBCNBAR",62,0)
 N IBSOURCE S IBSOURCE=$P($G(^IBA(355.33,IBBUFDA,0)),U,3)
"RTN","IBCNBAR",63,0)
 ;
"RTN","IBCNBAR",64,0)
 ;Don't do PAT^IBCNBMI for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",65,0)
 I $G(IBSUPRES)'>0,+IBPOLDA D PAT^IBCNBMI(DFN,IBPOLDA) ; update DOB&SSN of Pat Ins from Pat file
"RTN","IBCNBAR",66,0)
 D POL^IBCNSU41(DFN) ; update Tricare sponsor data
"RTN","IBCNBAR",67,0)
 D COVERED^IBCNSM31(DFN) ; update 'Covered by Insurance' field (2,.3192
"RTN","IBCNBAR",68,0)
 I +IBSOURCE=3 D IVM(1,IBBUFDA,$G(IVMREPTR),$G(IBSUPRES)) ; update/notify IVM
"RTN","IBCNBAR",69,0)
 ;Suppress Write in $$DUPCO^IBCNSOK1 if called from ICB Interface
"RTN","IBCNBAR",70,0)
 I +IBINSDA,+IBPOLDA S IBX=$$DUPCO^IBCNSOK1(DFN,IBINSDA,IBPOLDA,$S($G(IBSUPRES)>0:0,1:1)) ; warning if duplicate policy added for patient
"RTN","IBCNBAR",71,0)
 S RESULT(0)="0"_$S($G(IBX):"^Warning - Duplicate or inconsistent insurance data",1:"")
"RTN","IBCNBAR",72,0)
 ;
"RTN","IBCNBAR",73,0)
 ;Suppress Write in $$DUPPOL^IBCNSOK1 if called from ICB Interface
"RTN","IBCNBAR",74,0)
 I +IBGRPDA S IBX=$$DUPPOL^IBCNSOK1(IBGRPDA,$S($G(IBSUPRES)>0:0,1:1)) ; warning if duplicate plan was added
"RTN","IBCNBAR",75,0)
 S:IBX RESULT(0)=RESULT(0)_"^Warning - Duplicate or inconsistent policy data"
"RTN","IBCNBAR",76,0)
 ;
"RTN","IBCNBAR",77,0)
 ;Suppress Write in $$PTHLD^IBOHCR if called from ICB Interface
"RTN","IBCNBAR",78,0)
 I +IBNEWPOL I +$$PTHLD^IBOHCR(DFN,1,$S($G(IBSUPRES)>0:0,1:1)) D
"RTN","IBCNBAR",79,0)
 . W:$G(IBSUPRES)'>0 !!,"Patient's bills On Hold date updated due to new insurance."
"RTN","IBCNBAR",80,0)
 . S RESULT(0)=RESULT(0)_"^Patient's bills On Hold date updated due to new insurance"
"RTN","IBCNBAR",81,0)
 ;
"RTN","IBCNBAR",82,0)
 I $$HOLD^IBCNBLL(DFN) D
"RTN","IBCNBAR",83,0)
 . W:$G(IBSUPRES)'>0 !!,"There are bills On Hold for this patient."
"RTN","IBCNBAR",84,0)
 . S RESULT(0)=RESULT(0)_"^There are bills On Hold for this patient"
"RTN","IBCNBAR",85,0)
 ;
"RTN","IBCNBAR",86,0)
 ;Suppress DIR call functionality for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",87,0)
 D:$G(IBSUPRES)'>0
"RTN","IBCNBAR",88,0)
 . W !! S DIR(0)="FO",DIR("A")="Press 'V' to view the changes or Return to continue" D ^DIR
"RTN","IBCNBAR",89,0)
 . I Y="V"!(Y="v") W !! D INS^IBCNBCD(IBBUFDA,IBINSDA),WAIT^IBCNBUH,GRP^IBCNBCD(IBBUFDA,IBGRPDA),WAIT^IBCNBUH,POLICY^IBCNBCD(IBBUFDA,IBPOLDA),WAIT^IBCNBUH
"RTN","IBCNBAR",90,0)
 ;
"RTN","IBCNBAR",91,0)
 ; update buffer file entry so only stub remains and status is changed
"RTN","IBCNBAR",92,0)
 D STATUS^IBCNBEE(IBBUFDA,"A",IBNEWINS,IBNEWGRP,IBNEWPOL) ; update buffer entry's status to accepted
"RTN","IBCNBAR",93,0)
 D DELDATA^IBCNBED(IBBUFDA) ; delete buffer's insurance/patient data
"RTN","IBCNBAR",94,0)
 ;
"RTN","IBCNBAR",95,0)
 S IBCDFN=IBPOLDA S:+IBSOURCE=3 IVMINSUP=1 D AFTER^IBCNSEVT,^IBCNSEVT ; insurance event driver
"RTN","IBCNBAR",96,0)
 ;
"RTN","IBCNBAR",97,0)
ACCPTQ Q
"RTN","IBCNBAR",98,0)
 ;
"RTN","IBCNBAR",99,0)
REJECT(IBBUFDA) ; process a buffer entry reject
"RTN","IBCNBAR",100,0)
 ;    1) update/notify IVM
"RTN","IBCNBAR",101,0)
 ;    2) buffer ins/group/policy data deleted
"RTN","IBCNBAR",102,0)
 ;    3) buffer entry status updated
"RTN","IBCNBAR",103,0)
 ;    4) if patient has no other active insurance then release any patient bills On Hold
"RTN","IBCNBAR",104,0)
 ;
"RTN","IBCNBAR",105,0)
 N IBSUPRES,RESULT
"RTN","IBCNBAR",106,0)
 ;Set IBSUPRES to 0 to not suppress I/O within REJECT
"RTN","IBCNBAR",107,0)
 S IBSUPRES=0
"RTN","IBCNBAR",108,0)
 ;
"RTN","IBCNBAR",109,0)
REJPROC ;Entry point for REJECAPI^IBCNICB (Patch 413)
"RTN","IBCNBAR",110,0)
 ;
"RTN","IBCNBAR",111,0)
 N DFN S DFN=+$G(^IBA(355.33,+IBBUFDA,60))
"RTN","IBCNBAR",112,0)
 S RESULT="-1^PATIENT IEN MISSING FROM BUFFER ENTRY" Q:'$G(DFN)
"RTN","IBCNBAR",113,0)
 I +$P($G(^IBA(355.33,+IBBUFDA,0)),U,3)=3 D IVM(0,IBBUFDA,$G(IVMREPTR),$G(IBSUPRES))
"RTN","IBCNBAR",114,0)
 ;
"RTN","IBCNBAR",115,0)
 S RESULT=0
"RTN","IBCNBAR",116,0)
 D STATUS^IBCNBEE(+IBBUFDA,"R",0,0,0),DELDATA^IBCNBED(+IBBUFDA) W:$G(IBSUPRES)'>0 " ... done."
"RTN","IBCNBAR",117,0)
 ;
"RTN","IBCNBAR",118,0)
 I +DFN,'$$INSURED^IBCNS1(DFN),'$$BUFFER^IBCNBU1(DFN) D
"RTN","IBCNBAR",119,0)
 . ;Suppress Write in $$PTHLD^IBOHCR if called from ICB Interface
"RTN","IBCNBAR",120,0)
 . I +$$PTHLD^IBOHCR(DFN,2,$S($G(IBSUPRES)>0:0,1:1)) D
"RTN","IBCNBAR",121,0)
 . . I $G(IBSUPRES)'>0 W !!,"Patient has no other active Insurance.",!,"All patient bills On Hold waiting for Insurance to be released." D WAIT^IBCNBUH
"RTN","IBCNBAR",122,0)
 . . S RESULT=RESULT_"^Patient has no other active Insurance.  All patient bills On Hold waiting for Insurance to be released."
"RTN","IBCNBAR",123,0)
 ;
"RTN","IBCNBAR",124,0)
 Q
"RTN","IBCNBAR",125,0)
 ;
"RTN","IBCNBAR",126,0)
 ;
"RTN","IBCNBAR",127,0)
IVM(AR,IBBUFDA,IVMREPTR,IBSUPRES) ; IVM must be notified whenever a buffer entry
"RTN","IBCNBAR",128,0)
 ; that originated in IVM is accepted or rejected. This lets IVM clean up
"RTN","IBCNBAR",129,0)
 ; its files since IVM also has a buffer type file of insurance uploaded
"RTN","IBCNBAR",130,0)
 ; from the IVM center.
"RTN","IBCNBAR",131,0)
 ; If rejected and Interactive Reads not suppressed, IVM then ask the 
"RTN","IBCNBAR",132,0)
 ; user for a reason it was rejected
"RTN","IBCNBAR",133,0)
 ; input:  AR = 1 if accepted, 0 if rejected
"RTN","IBCNBAR",134,0)
 ;    IBBUFDA = Internal Entry Number to 355.33 file
"RTN","IBCNBAR",135,0)
 ;   IVMREPTR = Internal Entry Number to 301.91 file (Optional)
"RTN","IBCNBAR",136,0)
 ;   IBSUPRES = If equals 1, suppress writes and interactive reads
"RTN","IBCNBAR",137,0)
 ;
"RTN","IBCNBAR",138,0)
 N DFN,IBX,IBY I $P($G(^IBA(355.33,+IBBUFDA,0)),U,3)'=3 Q
"RTN","IBCNBAR",139,0)
 ;
"RTN","IBCNBAR",140,0)
 S DFN=+$G(^IBA(355.33,+IBBUFDA,60))
"RTN","IBCNBAR",141,0)
 S IBX=$P($G(^IBA(355.33,+IBBUFDA,20)),U,1)_U_$P($G(^IBA(355.33,+IBBUFDA,21)),U,1)_U_$P($G(^IBA(355.33,+IBBUFDA,40)),U,3)
"RTN","IBCNBAR",142,0)
 ;
"RTN","IBCNBAR",143,0)
 S IBY=$$UPDATE^IVMLINS4(DFN,AR,IBX,$G(IVMREPTR),$G(IBSUPRES))
"RTN","IBCNBAR",144,0)
 Q
"RTN","IBCNBAR",145,0)
 ;
"RTN","IBCNBMI")
0^2^B80184806^B54899476
"RTN","IBCNBMI",1,0)
IBCNBMI ;ALB/ARH-Ins Buffer: move buffer data to insurance files ;09 Mar 2005  11:42 AM
"RTN","IBCNBMI",2,0)
 ;;2.0;INTEGRATED BILLING;**82,184,246,251,299,345,361,371,413**;21-MAR-94;Build 9
"RTN","IBCNBMI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNBMI",4,0)
 ;
"RTN","IBCNBMI",5,0)
INS(IBBUFDA,IBINSDA,TYPE,RESULT) ;  move buffer insurance company data (file 355.33) to existing Insurance Company (file 36)
"RTN","IBCNBMI",6,0)
 ;
"RTN","IBCNBMI",7,0)
 S IBBUFDA=IBBUFDA_",",IBINSDA=$G(IBINSDA)_","
"RTN","IBCNBMI",8,0)
 D SET("INS",IBBUFDA,IBINSDA,TYPE,.RESULT)
"RTN","IBCNBMI",9,0)
 Q
"RTN","IBCNBMI",10,0)
 ;
"RTN","IBCNBMI",11,0)
GRP(IBBUFDA,IBGRPDA,TYPE,RESULT) ;  move buffer insurance group/plan data (file 355.33) to existing Group/Plan (file 355.33)
"RTN","IBCNBMI",12,0)
 ;
"RTN","IBCNBMI",13,0)
 S IBBUFDA=IBBUFDA_",",IBGRPDA=$G(IBGRPDA)_","
"RTN","IBCNBMI",14,0)
 D SET("GRP",IBBUFDA,IBGRPDA,TYPE,.RESULT)
"RTN","IBCNBMI",15,0)
 D STUFF("GRP",IBGRPDA,.RESULT)
"RTN","IBCNBMI",16,0)
 Q
"RTN","IBCNBMI",17,0)
 ;
"RTN","IBCNBMI",18,0)
POLICY(IBBUFDA,IBPOLDA,TYPE,RESULT) ;  move buffer insurance policy data (file 355.33) to existing Patient Policy (file 2.312)
"RTN","IBCNBMI",19,0)
 ;
"RTN","IBCNBMI",20,0)
 N DFN S DFN=+$G(^IBA(355.33,+$G(IBBUFDA),60)) Q:'DFN
"RTN","IBCNBMI",21,0)
 ;
"RTN","IBCNBMI",22,0)
 S IBBUFDA=IBBUFDA_",",IBPOLDA=$G(IBPOLDA)_","_DFN_","
"RTN","IBCNBMI",23,0)
 D SET("POL",IBBUFDA,IBPOLDA,TYPE,.RESULT)
"RTN","IBCNBMI",24,0)
 D STUFF("POL",IBPOLDA,.RESULT)
"RTN","IBCNBMI",25,0)
 D POLOTH(IBBUFDA,IBPOLDA,.RESULT)
"RTN","IBCNBMI",26,0)
 Q
"RTN","IBCNBMI",27,0)
 ;
"RTN","IBCNBMI",28,0)
SET(SET,IBBUFDA,IBEXTDA,TYPE,RESULT) ; move buffer data to insurance files
"RTN","IBCNBMI",29,0)
 ; Input:  IBBUFDA - ifn of Buffer File entry to move (#355.33)
"RTN","IBCNBMI",30,0)
 ;         IBEXTDA - ifn of insurance entry to update (#36,355.3,2)
"RTN","IBCNBMI",31,0)
 ;         TYPE    - 1 = Merge     (only buffer data moved to blank fields in ins file, no replace)
"RTN","IBCNBMI",32,0)
 ;                   2 = Overwrite (all buffer data moved to ins file, replace existing data)
"RTN","IBCNBMI",33,0)
 ;                   3 = Replace (all buffer data including null move to ins file)
"RTN","IBCNBMI",34,0)
 ;                   4 = Individually Accept (Skip Blanks) (user accepts
"RTN","IBCNBMI",35,0)
 ;  individual diffs b/w buffer data and existing file data (excl blanks)
"RTN","IBCNBMI",36,0)
 ;  to overwrite flds (or addr grp) in existing file)
"RTN","IBCNBMI",37,0)
 ; Output: RESULT - Passed array to return FM errror message if there are
"RTN","IBCNBMI",38,0)
 ;                  errors when filing the buffer data
"RTN","IBCNBMI",39,0)
 ;
"RTN","IBCNBMI",40,0)
 N IBX,IBFLDS,EXTFILE,DRBUF,DREXT,BUFARR,EXTARR,IBBUFFLD,IBEXTFLD,IBBUFVAL,IBEXTVAL,IBCHNG,IBCHNGN,IBERR
"RTN","IBCNBMI",41,0)
 ;
"RTN","IBCNBMI",42,0)
 D FIELDS(SET_"FLD")
"RTN","IBCNBMI",43,0)
 S IBX=$P($T(@(SET_"DR")+1),";;",2),EXTFILE=+$P(IBX,U,1),DRBUF=$P(IBX,U,2),DREXT=$P(IBX,U,3)
"RTN","IBCNBMI",44,0)
 ;
"RTN","IBCNBMI",45,0)
 D GETS^DIQ(355.33,IBBUFDA,DRBUF,"E","BUFARR")
"RTN","IBCNBMI",46,0)
 D GETS^DIQ(EXTFILE,IBEXTDA,DREXT,"E","EXTARR")
"RTN","IBCNBMI",47,0)
 ;
"RTN","IBCNBMI",48,0)
 I +$G(TYPE) S IBBUFFLD=0 F  S IBBUFFLD=$O(BUFARR(355.33,IBBUFDA,IBBUFFLD)) Q:'IBBUFFLD  D
"RTN","IBCNBMI",49,0)
 . ;If not called by ACCEPAPI^IBCNICB API, don't update from these 
"RTN","IBCNBMI",50,0)
 . ;fields:
"RTN","IBCNBMI",51,0)
 . ;   Insurance Company Name - #20.01, Reimburse? - 20.05
"RTN","IBCNBMI",52,0)
 . ;   Is this a Group Policy - #40.01
"RTN","IBCNBMI",53,0)
 . I $G(IBSUPRES)'>0,"^20.01^20.05^40.01^"[("^"_IBBUFFLD_"^") Q
"RTN","IBCNBMI",54,0)
 . ;
"RTN","IBCNBMI",55,0)
 . S IBEXTFLD=$G(IBFLDS(IBBUFFLD)) Q:'IBEXTFLD
"RTN","IBCNBMI",56,0)
 . S IBBUFVAL=BUFARR(355.33,IBBUFDA,IBBUFFLD,"E")
"RTN","IBCNBMI",57,0)
 . S IBEXTVAL=$G(EXTARR(EXTFILE,IBEXTDA,IBEXTFLD,"E"))
"RTN","IBCNBMI",58,0)
 . ;
"RTN","IBCNBMI",59,0)
 . I IBBUFVAL=IBEXTVAL Q
"RTN","IBCNBMI",60,0)
 . I TYPE=1,IBEXTVAL'="" Q
"RTN","IBCNBMI",61,0)
 . I TYPE=2,IBBUFVAL="" Q
"RTN","IBCNBMI",62,0)
 . I TYPE=4,'$D(^TMP($J,"IB BUFFER SELECTED",IBBUFFLD)) Q
"RTN","IBCNBMI",63,0)
 . ;
"RTN","IBCNBMI",64,0)
 . S IBCHNG(EXTFILE,IBEXTDA,IBEXTFLD)=IBBUFVAL
"RTN","IBCNBMI",65,0)
 . ;For ACCEPAPI^IBCNICB do not delete the .01 field. This prevents a
"RTN","IBCNBMI",66,0)
 . ;Data Dictionary Deletion Write message
"RTN","IBCNBMI",67,0)
 . Q:IBEXTFLD=".01"
"RTN","IBCNBMI",68,0)
 . S IBCHNGN(EXTFILE,IBEXTDA,IBEXTFLD)=""
"RTN","IBCNBMI",69,0)
 ;
"RTN","IBCNBMI",70,0)
 I $D(IBCHNGN)>9 D FILE^DIE("E","IBCHNGN","IBERR")
"RTN","IBCNBMI",71,0)
 ;Removed delete errors and move FM errors to RESULT
"RTN","IBCNBMI",72,0)
 D:$D(IBERR)>0 REMOVDEL(.IBERR),EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",73,0)
 K IBERR
"RTN","IBCNBMI",74,0)
 I $D(IBCHNG)>9 D FILE^DIE("E","IBCHNG","IBERR")
"RTN","IBCNBMI",75,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",76,0)
 D:$D(IBERR)>0 EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",77,0)
 Q
"RTN","IBCNBMI",78,0)
 ;
"RTN","IBCNBMI",79,0)
STUFF(SET,IBEXTDA,RESULT) ; update fields in insurance files that 
"RTN","IBCNBMI",80,0)
 ;should be automatically set when an entry is edited
"RTN","IBCNBMI",81,0)
 ; Input:  IBEXTDA - ifn of insurance entry to update (#36,356,2)
"RTN","IBCNBMI",82,0)
 ; Output: RESULT - Passed array to return FM errror message if there are
"RTN","IBCNBMI",83,0)
 ;                  errors when filing the data buffer data
"RTN","IBCNBMI",84,0)
 ;
"RTN","IBCNBMI",85,0)
 N IBX,IBFLDS,EXTFILE,IBEXTFLD,IBEXTVAL,IBCHNG,IBCHNGN,IBERR
"RTN","IBCNBMI",86,0)
 ;
"RTN","IBCNBMI",87,0)
 D FIELDS(SET_"A")
"RTN","IBCNBMI",88,0)
 S IBX=$P($T(@(SET_"DR")+1),";;",2),EXTFILE=+$P(IBX,U,1)
"RTN","IBCNBMI",89,0)
 ;
"RTN","IBCNBMI",90,0)
 S IBEXTFLD=0 F  S IBEXTFLD=$O(IBFLDS(IBEXTFLD)) Q:'IBEXTFLD  D
"RTN","IBCNBMI",91,0)
 . S IBEXTVAL=IBFLDS(IBEXTFLD) I IBEXTVAL="DUZ" S IBEXTVAL="`"_DUZ
"RTN","IBCNBMI",92,0)
 . S IBCHNG(EXTFILE,IBEXTDA,IBEXTFLD)=IBEXTVAL
"RTN","IBCNBMI",93,0)
 . S IBCHNGN(EXTFILE,IBEXTDA,IBEXTFLD)=""
"RTN","IBCNBMI",94,0)
 ;
"RTN","IBCNBMI",95,0)
 D FILE^DIE("E","IBCHNGN","IBERR")
"RTN","IBCNBMI",96,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",97,0)
 D:$D(IBERR)>0 EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",98,0)
 K IBERR
"RTN","IBCNBMI",99,0)
 D FILE^DIE("E","IBCHNG","IBERR")
"RTN","IBCNBMI",100,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",101,0)
 D:$D(IBERR)>0 EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",102,0)
 Q
"RTN","IBCNBMI",103,0)
 ;
"RTN","IBCNBMI",104,0)
FIELDS(SET) ; return array of corresponding fields: IBFLDS(Buffer #)=Ins #
"RTN","IBCNBMI",105,0)
 N IBI,IBLN,IBB,IBE,IBG K IBFLDS,IBADDS,IBLBLS
"RTN","IBCNBMI",106,0)
 F IBI=1:1 S IBLN=$P($T(@(SET)+IBI),";;",2) Q:IBLN=""  I $E(IBLN,1)'=" " D
"RTN","IBCNBMI",107,0)
 . S IBB=$P(IBLN,U,1),IBE=$P(IBLN,U,2),IBG=$P(IBLN,U,4)
"RTN","IBCNBMI",108,0)
 . I IBB'="",IBE'="" D
"RTN","IBCNBMI",109,0)
 .. S IBFLDS(IBB)=IBE
"RTN","IBCNBMI",110,0)
 .. I SET["FLD" S IBLBLS(IBB)=$P(IBLN,U,3) I +IBG S IBADDS(IBB)=IBE
"RTN","IBCNBMI",111,0)
 Q
"RTN","IBCNBMI",112,0)
 ;
"RTN","IBCNBMI",113,0)
INSDR ;
"RTN","IBCNBMI",114,0)
 ;;36^20.01:20.05;21.01:21.06^.01;.131;.132;.133;.111:.116;1
"RTN","IBCNBMI",115,0)
INSFLD ; corresponding fields: Buffer File (355.33) & Insurance Company file (36)
"RTN","IBCNBMI",116,0)
 ;;20.01^.01^Insurance Company Name^  ; Name
"RTN","IBCNBMI",117,0)
 ;;20.02^.131^Phone Number^           ; MM Phone Number
"RTN","IBCNBMI",118,0)
 ;;20.03^.132^Billing Phone^          ; Billing Phone Number
"RTN","IBCNBMI",119,0)
 ;;20.04^.133^Pre-Cert Phone^         ; Pre-Certification Phone Number
"RTN","IBCNBMI",120,0)
 ;;20.05^1^Reimburse?^                ; Will Reimburse?
"RTN","IBCNBMI",121,0)
 ;;21.01^.111^Street [Line 1]^1       ; MM Street Address [Line 1]
"RTN","IBCNBMI",122,0)
 ;;21.02^.112^Street [Line 2]^1       ; MM Street Address [Line 2]
"RTN","IBCNBMI",123,0)
 ;;21.03^.113^Street [Line 3]^1       ; MM Street Address [Line 3]
"RTN","IBCNBMI",124,0)
 ;;21.04^.114^City^1                  ; MM City
"RTN","IBCNBMI",125,0)
 ;;21.05^.115^State^1                 ; MM State
"RTN","IBCNBMI",126,0)
 ;;21.06^.116^Zip^1                   ; MM Zip Code
"RTN","IBCNBMI",127,0)
 ;
"RTN","IBCNBMI",128,0)
GRPDR ;
"RTN","IBCNBMI",129,0)
 ;;355.3^40.01:40.09;40.1;40.11;^.02:.09;6.02;6.03;.12
"RTN","IBCNBMI",130,0)
GRPFLD ;corresponding fields:  Buffer File (355.33) and Insurance Group Plan file (355.3)
"RTN","IBCNBMI",131,0)
 ;;40.01^.02^Is This a Group Policy?^ ; Is this a Group Policy?
"RTN","IBCNBMI",132,0)
 ;;40.02^.03^Group Name^              ; Group Name
"RTN","IBCNBMI",133,0)
 ;;40.03^.04^Group Number^            ; Group Number
"RTN","IBCNBMI",134,0)
 ;;40.1^6.02^BIN^                     ; BIN ;;Daou/EEN
"RTN","IBCNBMI",135,0)
 ;;40.11^6.03^PCN^                    ; PCN ;;Daou/EEN
"RTN","IBCNBMI",136,0)
 ;;40.04^.05^Require UR^              ; Utilization Review Required
"RTN","IBCNBMI",137,0)
 ;;40.05^.06^Require Pre-Cert^        ; Pre-Certification Required
"RTN","IBCNBMI",138,0)
 ;;40.06^.12^Require Amb Cert^        ; Ambulatory Care Certification
"RTN","IBCNBMI",139,0)
 ;;40.07^.07^Exclude Pre-Cond^        ; Exclude Pre-Existing Conditions
"RTN","IBCNBMI",140,0)
 ;;40.08^.08^Benefits Assign^         ; Benefits Assignable
"RTN","IBCNBMI",141,0)
 ;;40.09^.09^Type of Plan^            ; Type of Plan
"RTN","IBCNBMI",142,0)
 ;
"RTN","IBCNBMI",143,0)
GRPA ; auto set fields
"RTN","IBCNBMI",144,0)
 ;;1.05^NOW^                          ; Date Last Edited
"RTN","IBCNBMI",145,0)
 ;;1.06^DUZ^                          ; Last edited By
"RTN","IBCNBMI",146,0)
 ;
"RTN","IBCNBMI",147,0)
POLDR ;
"RTN","IBCNBMI",148,0)
 ;;2.312^60.02:62.01^8;3;1;6;16;17;3.01;3.05;4.01;4.02;.2;3.12;2.1;2.015;2.11;2.12;2.01:2.08;5.01
"RTN","IBCNBMI",149,0)
POLFLD ; corresponding fields:  Buffer File (355.33) and Insurance Patient Policy file (2.312)
"RTN","IBCNBMI",150,0)
 ;;60.02^8^Effective Date^            ; Effective Date
"RTN","IBCNBMI",151,0)
 ;;60.03^3^Expiration Date^           ; Expiration Date
"RTN","IBCNBMI",152,0)
 ;;60.04^1^Subscriber Id^             ; Subscriber Id
"RTN","IBCNBMI",153,0)
 ;;60.05^6^Whose Insurance^           ; Whose Insurance
"RTN","IBCNBMI",154,0)
 ;;60.06^16^Relationship^             ; Pt. Relationship to Insured
"RTN","IBCNBMI",155,0)
 ;;60.07^17^Name of Insured^          ; Name of Insured
"RTN","IBCNBMI",156,0)
 ;;60.08^3.01^Insured's DOB^          ; Insured's DOB
"RTN","IBCNBMI",157,0)
 ;;60.09^3.05^Insured's SSN^          ; Insured's SSN
"RTN","IBCNBMI",158,0)
 ;;60.1^4.01^Primary Provider^        ; Primary Care Provider
"RTN","IBCNBMI",159,0)
 ;;60.11^4.02^Provider Phone^         ; Primary Care Provider Phone
"RTN","IBCNBMI",160,0)
 ;;60.12^.2^Coor of Benefits^         ; Coordination of Benefits
"RTN","IBCNBMI",161,0)
 ;;60.13^3.12^Insured's Sex^          ; Insured's Sex
"RTN","IBCNBMI",162,0)
 ;;  
"RTN","IBCNBMI",163,0)
 ;;61.01^2.1^Emp Sponsored^           ; ESGHP?
"RTN","IBCNBMI",164,0)
 ;;61.02^2.015^Employer Name^         ; Subscriber's Employer Name
"RTN","IBCNBMI",165,0)
 ;;61.03^2.11^Emp Status^             ; Employment Status
"RTN","IBCNBMI",166,0)
 ;;61.04^2.12^Retirement Date^        ; Retirement Date
"RTN","IBCNBMI",167,0)
 ;;61.05^2.01^Send to Employer^       ; Send Bill to Employer?
"RTN","IBCNBMI",168,0)
 ;;61.06^2.02^Emp Street Ln 1^1       ; Employer Claims Street Line 1
"RTN","IBCNBMI",169,0)
 ;;61.07^2.03^Emp Street Ln 2^1       ; Employer Claims Street Line 2
"RTN","IBCNBMI",170,0)
 ;;61.08^2.04^Emp Street Ln 3^1       ; Employer Claims Street Line 3
"RTN","IBCNBMI",171,0)
 ;;61.09^2.05^Emp City^1              ; Employer Claims City
"RTN","IBCNBMI",172,0)
 ;;61.1^2.06^Emp State^1              ; Employer Claims State
"RTN","IBCNBMI",173,0)
 ;;61.11^2.07^Emp Zip Code^1          ; Employer Claims Zip Code
"RTN","IBCNBMI",174,0)
 ;;61.12^2.08^Emp Phone^              ; Employer Claims Phone
"RTN","IBCNBMI",175,0)
 ;;62.01^5.01^Patient Id^             ; Patient Id
"RTN","IBCNBMI",176,0)
 ;
"RTN","IBCNBMI",177,0)
POLA ; auto set fields
"RTN","IBCNBMI",178,0)
 ;;1.03^NOW^                          ; Date Last Verified (default is person that accepts entry)
"RTN","IBCNBMI",179,0)
 ;;1.04^DUZ^                          ; Verified By        (default is person that accepts entry)
"RTN","IBCNBMI",180,0)
 ;;1.05^NOW^                          ; Date Last Edited
"RTN","IBCNBMI",181,0)
 ;;1.06^DUZ^                          ; Last Edited By
"RTN","IBCNBMI",182,0)
 ;
"RTN","IBCNBMI",183,0)
 ;
"RTN","IBCNBMI",184,0)
POLOTH(IBBUFDA,IBPOLDA,RESULT) ; other special cases that can not be transferred using the generic code above, usually because of dependencies
"RTN","IBCNBMI",185,0)
 N IBERR,IB0 S IB0=$G(^IBA(355.33,+IBBUFDA,0))
"RTN","IBCNBMI",186,0)
 ;
"RTN","IBCNBMI",187,0)
 ;  --- if buffer entry was verified before the accept step, then add the correct verifier info to the policy
"RTN","IBCNBMI",188,0)
 I +$P(IB0,U,10) D
"RTN","IBCNBMI",189,0)
 . S IBCHNG(2.312,IBPOLDA,1.03)=$E($P(IB0,U,10),1,12),IBCHNGN(2.312,IBPOLDA,1.03)=""
"RTN","IBCNBMI",190,0)
 . S IBCHNG(2.312,IBPOLDA,1.04)=$P(IB0,U,11),IBCHNGN(2.312,IBPOLDA,1.04)=""
"RTN","IBCNBMI",191,0)
 ;
"RTN","IBCNBMI",192,0)
 I $D(IBCHNGN)>9 D FILE^DIE("I","IBCHNGN","IBERR")
"RTN","IBCNBMI",193,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",194,0)
 D:$D(IBERR)>0 EHANDLE("POL",.IBERR,.RESULT)
"RTN","IBCNBMI",195,0)
 K IBERR
"RTN","IBCNBMI",196,0)
 I $D(IBCHNG)>9 D FILE^DIE("I","IBCHNG","IBERR")
"RTN","IBCNBMI",197,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",198,0)
 D:$D(IBERR)>0 EHANDLE("POL",.IBERR,.RESULT)
"RTN","IBCNBMI",199,0)
 Q
"RTN","IBCNBMI",200,0)
 ;
"RTN","IBCNBMI",201,0)
PAT(DFN,IBPOLDA) ; Force DOB, SSN & SEX from Patient file (#2) in to Insurance Patient Policy file (2.312)
"RTN","IBCNBMI",202,0)
 N DA,DR,DIE,DOB,SSN,SEX,IENS,WI
"RTN","IBCNBMI",203,0)
 S IENS=IBPOLDA_","_DFN_","
"RTN","IBCNBMI",204,0)
 S WI=$$GET1^DIQ(2.312,IENS,6,"I")
"RTN","IBCNBMI",205,0)
 I WI'="v" Q  ; Only use when Whose Insurance is 'v'
"RTN","IBCNBMI",206,0)
 S DOB=$$GET1^DIQ(2,DFN,.03,"I")
"RTN","IBCNBMI",207,0)
 S SSN=$$GET1^DIQ(2,DFN,.09,"I")
"RTN","IBCNBMI",208,0)
 S SEX=$$GET1^DIQ(2,DFN,.02,"I")
"RTN","IBCNBMI",209,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN,DA=IBPOLDA
"RTN","IBCNBMI",210,0)
 S DR="3.01///^S X=DOB;3.05///^S X=SSN;3.12///^S X=SEX"
"RTN","IBCNBMI",211,0)
 D ^DIE
"RTN","IBCNBMI",212,0)
 Q
"RTN","IBCNBMI",213,0)
 ;
"RTN","IBCNBMI",214,0)
EHANDLE(SET,FMERR,RESULT) ;
"RTN","IBCNBMI",215,0)
 ;Fileman Error Processing tracking added for ACCEPAPI^IBCNICB API.
"RTN","IBCNBMI",216,0)
 ; INPUT: 
"RTN","IBCNBMI",217,0)
 ;   SET    - File where fileman error occurred
"RTN","IBCNBMI",218,0)
 ;       Value = "INS" --> File 36    --> RESULT(1)
"RTN","IBCNBMI",219,0)
 ;       Value = "GRP" --> File 355.3 --> RESULT(2)
"RTN","IBCNBMI",220,0)
 ;       Value = "POL" --> File 2.312 --> RESULT(3)
"RTN","IBCNBMI",221,0)
 ;   FMERR  - Array that is returned by FM with error messages
"RTN","IBCNBMI",222,0)
 ; OUTPUT:
"RTN","IBCNBMI",223,0)
 ;   RESULT - Passed array to return FM errror message if there are
"RTN","IBCNBMI",224,0)
 ;            errors when filing the data buffer data
"RTN","IBCNBMI",225,0)
 ;
"RTN","IBCNBMI",226,0)
 Q:$G(SET)']""!($D(FMERR)'>0)
"RTN","IBCNBMI",227,0)
 N SUB1,RNUM,ERRNUM,LINENUM
"RTN","IBCNBMI",228,0)
 ;Numeric 1st subscript of RESULT array based on file being updated
"RTN","IBCNBMI",229,0)
 ;File 36 = 1, 355.3 = 2, 2.312 = 3 
"RTN","IBCNBMI",230,0)
 S SUB1=$S(SET="INS":1,SET="GRP":2,SET="POL":3,1:"")
"RTN","IBCNBMI",231,0)
 ;Quit if SUB1 doesn't have a value.
"RTN","IBCNBMI",232,0)
 Q:SUB1']""
"RTN","IBCNBMI",233,0)
 S RNUM=$O(RESULT(SUB1,"ERR",9999999999),-1),ERRNUM=0
"RTN","IBCNBMI",234,0)
 F  S ERRNUM=$O(FMERR("DIERR",ERRNUM)) Q:+ERRNUM'>0  D
"RTN","IBCNBMI",235,0)
 . S LINENUM=0
"RTN","IBCNBMI",236,0)
 . F  S LINENUM=$O(FMERR("DIERR",ERRNUM,"TEXT",LINENUM)) Q:+LINENUM'>0  D
"RTN","IBCNBMI",237,0)
 . . S RNUM=RNUM+1
"RTN","IBCNBMI",238,0)
 . . S RESULT(SUB1,"ERR",RNUM)=FMERR("DIERR",ERRNUM,"TEXT",LINENUM)
"RTN","IBCNBMI",239,0)
 Q
"RTN","IBCNBMI",240,0)
 ;
"RTN","IBCNBMI",241,0)
REMOVDEL(FMERR) ;
"RTN","IBCNBMI",242,0)
 ;Removed field delete errors. SET and STUFF API delete data first and
"RTN","IBCNBMI",243,0)
 ;then update with new data from Insurance Buffer file. Error Code 712
"RTN","IBCNBMI",244,0)
 ;"Deletion was attempted but not allowed" errors will be removed from
"RTN","IBCNBMI",245,0)
 ;the returned FM error array 
"RTN","IBCNBMI",246,0)
 ; INPUT/OUTPUT:
"RTN","IBCNBMI",247,0)
 ;   FMERR  - Array that is returned by FM with error messages
"RTN","IBCNBMI",248,0)
 ;
"RTN","IBCNBMI",249,0)
 Q:$D(FMERR)'>0
"RTN","IBCNBMI",250,0)
 N ERRNUM
"RTN","IBCNBMI",251,0)
 S ERRNUM=0
"RTN","IBCNBMI",252,0)
 F  S ERRNUM=$O(FMERR("DIERR",ERRNUM)) Q:+ERRNUM'>0  D
"RTN","IBCNBMI",253,0)
 . I FMERR("DIERR",ERRNUM)=712 K FMERR("DIERR",ERRNUM)
"RTN","IBCNBMI",254,0)
 Q
"RTN","IBCNICB")
0^3^B105382395^n/a
"RTN","IBCNICB",1,0)
IBCNICB ;ALB/SBW - Update utilities for the ICB interface ;1 SEP 2009
"RTN","IBCNICB",2,0)
 ;;2.0;INTEGRATED BILLING;**413**;21-MAR-94;Build 9
"RTN","IBCNICB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNICB",4,0)
 ;
"RTN","IBCNICB",5,0)
ACCEPAPI(RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR) ;
"RTN","IBCNICB",6,0)
 ;Provides API to be called by the Insurance Capture Buffer (ICB) 
"RTN","IBCNICB",7,0)
 ;application to move buffer data in Insurance Files then cleanup
"RTN","IBCNICB",8,0)
 ;
"RTN","IBCNICB",9,0)
 ;The call to PROCESS^IBCNBAR and embedded Sub calls are updated to 
"RTN","IBCNICB",10,0)
 ;provide data in the RESULT parameter and suppress user I/O when 
"RTN","IBCNICB",11,0)
 ;function is called by ICB.
"RTN","IBCNICB",12,0)
 ;Input
"RTN","IBCNICB",13,0)
 ;  IBBUFDA  - INSURANCE BUFFER (#355.33) file internal entry number
"RTN","IBCNICB",14,0)
 ;             (IEN) (Required)
"RTN","IBCNICB",15,0)
 ;  DFN      - PATIENT (#2) file IEN (Required)
"RTN","IBCNICB",16,0)
 ;  IBINSDA  - INSURANCE COMPANY (#36) File IEN if not adding new entry
"RTN","IBCNICB",17,0)
 ;             (Optional)
"RTN","IBCNICB",18,0)
 ;  IBGRPDA  - GROUP INSURANCE PLAN (#355.3) File IEN if not adding new
"RTN","IBCNICB",19,0)
 ;             entry (Optional)
"RTN","IBCNICB",20,0)
 ;  IBPOLDA  - INSURANCE TYPE (#2.312) sub-file of PATIENT (#2) IEN if
"RTN","IBCNICB",21,0)
 ;             not adding new entry (Optional)
"RTN","IBCNICB",22,0)
 ;  IBMVINS  - Type for INSURANCE (Required)
"RTN","IBCNICB",23,0)
 ;     1=Merge, 2=Overwrite, 3=Replace, 4=Unsupported
"RTN","IBCNICB",24,0)
 ;  IBMVGRP  - Type for GROUP (Optional)
"RTN","IBCNICB",25,0)
 ;     1=Merge, 2=Overwrite, 3=Replace, 4=Unsupported
"RTN","IBCNICB",26,0)
 ;  IBMVPOL  - Type for POLICY (Optional)
"RTN","IBCNICB",27,0)
 ;     1=Merge, 2=Overwrite, 3=Replace, 4=Unsupported
"RTN","IBCNICB",28,0)
 ;  IBNEWINS - Add new INSURANCE COMPANY flag (non-zero means add)
"RTN","IBCNICB",29,0)
 ;  IBNEWGRP - Add new GROUP INSURANCE PLAN flag (non-zero means add)
"RTN","IBCNICB",30,0)
 ;  IBNEWPOL - Add new patient insurance policy (non-zero means add)
"RTN","IBCNICB",31,0)
 ;  IVMREPTR - IVM REASONS FOR NOT UPLOADING (#301.91) IEN (Optional)
"RTN","IBCNICB",32,0)
 ;
"RTN","IBCNICB",33,0)
 ;OUTPUT
"RTN","IBCNICB",34,0)
 ;  RESULT   - Returned Parameter Array with IENS of new entries and/or 
"RTN","IBCNICB",35,0)
 ;             errors/warning.
"RTN","IBCNICB",36,0)
 ;     RESULT(0) = -1^error message
"RTN","IBCNICB",37,0)
 ;     RESULT(0) =   0           -Move worked
"RTN","IBCNICB",38,0)
 ;     RESULT(0) =   0 ^ warning message ^ warning message ^ 
"RTN","IBCNICB",39,0)
 ;                   warning message ^ warning message
"RTN","IBCNICB",40,0)
 ;             - Move worked but there may be zero to 4 warning messages
"RTN","IBCNICB",41,0)
 ;     RESULT(1) = "IBINSDA^" IEN of new Insurance Company (#36) File
"RTN","IBCNICB",42,0)
 ;     RESULT(1,"ERR",#) - Array with any FM errors when data updated
"RTN","IBCNICB",43,0)
 ;                         from file 355.33 to 36.
"RTN","IBCNICB",44,0)
 ;     RESULT(2) = "IBGRPDA^" IEN of new GROUP INSURANCE PLAN (#355.3)
"RTN","IBCNICB",45,0)
 ;                            File
"RTN","IBCNICB",46,0)
 ;     RESULT(2,"ERR",#) - Array with any FM errors when data updated
"RTN","IBCNICB",47,0)
 ;                         from file 355.33 to 355.3.
"RTN","IBCNICB",48,0)
 ;     RESULT(3) = "IBPOLDA^" IEN of new INSURANCE TYPE (#2.312) sub-file
"RTN","IBCNICB",49,0)
 ;                  of PATIENT (#2) IEN
"RTN","IBCNICB",50,0)
 ;     RESULT(3,"ERR",#) - Array with any FM errors when data updated
"RTN","IBCNICB",51,0)
 ;                         from file 355.33 to 2.312.
"RTN","IBCNICB",52,0)
 ;     RESULT(4) Contains the results of the call to UPDPOL^IBCNICB which
"RTN","IBCNICB",53,0)
 ;               is used to update a new group into an existing patient
"RTN","IBCNICB",54,0)
 ;               policy entry when applicable.
"RTN","IBCNICB",55,0)
 ;     RESULT(4) =-1^error message      
"RTN","IBCNICB",56,0)
 ;     RESULT(4) =0 ^ message that process was successful or not required
"RTN","IBCNICB",57,0)
 ;
"RTN","IBCNICB",58,0)
 N IBSUPRES,IBUFSTAT,IBX
"RTN","IBCNICB",59,0)
 ;Set IBSUPRES to suppress screen I/O within ACCEPT
"RTN","IBCNICB",60,0)
 S IBSUPRES=1,IBUFSTAT=$P($G(^IBA(355.33,$G(IBBUFDA),0)),U,4)
"RTN","IBCNICB",61,0)
 ;
"RTN","IBCNICB",62,0)
 S RESULT(0)="-1^INSURANCE BUFFER (#355.33) IEN required" Q:'$G(IBBUFDA)
"RTN","IBCNICB",63,0)
 S RESULT(0)="-1^INSURANCE BUFFER ENTRY PREVIOUSLY PROCESSED"
"RTN","IBCNICB",64,0)
 Q:"~A~R~"[("~"_IBUFSTAT_"~")
"RTN","IBCNICB",65,0)
 S RESULT(0)="-1^INSURANCE BUFFER ENTRY STATUS SHOULD BE ENTERED"
"RTN","IBCNICB",66,0)
 Q:IBUFSTAT'="E"
"RTN","IBCNICB",67,0)
 S RESULT(0)="-1^PATIENT (#2) IEN required" Q:'$G(DFN)
"RTN","IBCNICB",68,0)
 S IBINSDA=$G(IBINSDA),IBGRPDA=$G(IBGRPDA),IBPOLDA=$G(IBPOLDA)
"RTN","IBCNICB",69,0)
 S IBMVINS=$G(IBMVINS,2),IBMVGRP=$G(IBMVGRP,2),IBMVPOL=$G(IBMVPOL,2)
"RTN","IBCNICB",70,0)
 S IBNEWINS=$G(IBNEWINS),IBNEWGRP=$G(IBNEWGRP),IBNEWPOL=$G(IBNEWPOL)
"RTN","IBCNICB",71,0)
 ;
"RTN","IBCNICB",72,0)
 S RESULT(0)="-1^Passed INSURANCE COMPANY (#36) entry doesn't exist"
"RTN","IBCNICB",73,0)
 I +IBINSDA,$G(^DIC(36,IBINSDA,0))="" Q
"RTN","IBCNICB",74,0)
 S RESULT(0)="-1^Passed GROUP INSURANCE PLAN (#355.3) entry doesn't exist"
"RTN","IBCNICB",75,0)
 I +IBGRPDA,$G(^IBA(355.3,IBGRPDA,0))="" Q
"RTN","IBCNICB",76,0)
 S RESULT(0)="-1^Passed Patient INSURANCE TYPE (#2.312) entry doesn't exist"
"RTN","IBCNICB",77,0)
 I +IBPOLDA,$G(^DPT(DFN,.312,IBPOLDA,0))="" Q
"RTN","IBCNICB",78,0)
 S RESULT(0)="-1^Passed GROUP INSURANCE PLAN (#355.3) entry points to different INSURANCE COMPANY (#36) entry"
"RTN","IBCNICB",79,0)
 I +IBGRPDA,+IBINSDA,+$G(^IBA(355.3,IBGRPDA,0))'=IBINSDA Q
"RTN","IBCNICB",80,0)
 S RESULT(0)="-1^Individual Policy Patient required to be Patient DFN when Group Insurance Plan is not Group Policy"
"RTN","IBCNICB",81,0)
 I +IBGRPDA S IBX=$G(^IBA(355.3,IBGRPDA,0)) I $P(IBX,U,2)=0,+$P(IBX,U,10),$P(IBX,U,10)'=DFN Q
"RTN","IBCNICB",82,0)
 ;
"RTN","IBCNICB",83,0)
 ;If existing GROUP INSURANCE PLAN (#355.3) entry is being changed from 
"RTN","IBCNICB",84,0)
 ;a group plan to individual plan with other subscribers, send error 
"RTN","IBCNICB",85,0)
 ;message and abort update
"RTN","IBCNICB",86,0)
 S RESULT(0)="-1^Can't change GROUP INSURANCE PLAN from Group Plan to Individual Plan when there are subscribers"
"RTN","IBCNICB",87,0)
 I +IBGRPDA,$P(IBX,U,2)=1,$P($G(^IBA(355.33,+$G(IBBUFDA),40)),U,1)'=1,$$SUBS^IBCNSJ(IBINSDA,IBGRPDA)>1 Q
"RTN","IBCNICB",88,0)
 ;
"RTN","IBCNICB",89,0)
 D PROCESS^IBCNBAR
"RTN","IBCNICB",90,0)
 Q
"RTN","IBCNICB",91,0)
 ;
"RTN","IBCNICB",92,0)
REJECAPI(RESULT,IBBUFDA,IVMREPTR) ;
"RTN","IBCNICB",93,0)
 ;Provides API to be called by the Insurance Capture Buffer (ICB) 
"RTN","IBCNICB",94,0)
 ;application to reject buffer entry.
"RTN","IBCNICB",95,0)
 ;The REJPROC^IBCNBAR call and embedded Sub calls are updated to 
"RTN","IBCNICB",96,0)
 ;provide data in the RESULT parameter and suppress I/O when function 
"RTN","IBCNICB",97,0)
 ;is called by ICB.
"RTN","IBCNICB",98,0)
 ;Input:
"RTN","IBCNICB",99,0)
 ;   IBBUFDA  - INSURANCE BUFFER (#355.33) file internal entry number
"RTN","IBCNICB",100,0)
 ;              (required)
"RTN","IBCNICB",101,0)
 ;   IVMREPTR - IVM REASONS FOR NOT UPLOADING (#301.91) File internal
"RTN","IBCNICB",102,0)
 ;              internal entry number (Optional)
"RTN","IBCNICB",103,0)
 ;Output:
"RTN","IBCNICB",104,0)
 ;   RESULT   - Returned parameter variable with errors messages if
"RTN","IBCNICB",105,0)
 ;              problems with the reject processing. Format:
"RTN","IBCNICB",106,0)
 ;     REJECT = -1 ^ error message
"RTN","IBCNICB",107,0)
 ;     REJECT =  0                     - Reject worked
"RTN","IBCNICB",108,0)
 ;     REJECT =  0 ^ warning message   - Reject process worked but there
"RTN","IBCNICB",109,0)
 ;                                       is a warning message
"RTN","IBCNICB",110,0)
 ;
"RTN","IBCNICB",111,0)
 N IBSUPRES
"RTN","IBCNICB",112,0)
 ;Set IBSUPRES to suppress screen I/O within REJECT
"RTN","IBCNICB",113,0)
 S IBSUPRES=1
"RTN","IBCNICB",114,0)
 S RESULT="-1^INSURANCE BUFFER IEN required" Q:'$G(IBBUFDA)
"RTN","IBCNICB",115,0)
 S RESULT="-1^INSURANCE BUFFER ENTRY PREVIOUSLY PROCESSED"
"RTN","IBCNICB",116,0)
 Q:"~A~R~"[("~"_$$GET1^DIQ(355.33,IBBUFDA,.04,"I")_"~")
"RTN","IBCNICB",117,0)
 D REJPROC^IBCNBAR
"RTN","IBCNICB",118,0)
 Q
"RTN","IBCNICB",119,0)
 ;
"RTN","IBCNICB",120,0)
UPDTICB(RESULT,DFN,IBPOLDA,IBGRPDA,IBPOLCOM,IBPOLBIL,IBPLAN,IBELEC,IBGPCOM,IBFTF,IBFTFVAL) ;
"RTN","IBCNICB",121,0)
 ;Updates additional fields for ICB Interface
"RTN","IBCNICB",122,0)
 ;
"RTN","IBCNICB",123,0)
 ;Input:
"RTN","IBCNICB",124,0)
 ;  DFN      - PATIENT (#2) file IEN (Required)
"RTN","IBCNICB",125,0)
 ;  IBGRPDA  - GROUP INSURANCE PLAN (#355.3) File IEN (Optional)
"RTN","IBCNICB",126,0)
 ;  IBPOLDA  - INSURANCE TYPE (#2.312) sub-file of PATIENT (#2) IEN 
"RTN","IBCNICB",127,0)
 ;             (Optional)
"RTN","IBCNICB",128,0)
 ;  IBPOLCOM - Data to be filed into the COMMENT - PATIENT POLICY
"RTN","IBCNICB",129,0)
 ;             (#1.08) field of the 2.312 sub-file.  (Optional)
"RTN","IBCNICB",130,0)
 ;  IBPOLBIL - Data to be filed into the POLICY NOT BILLABLE  (#3.04)
"RTN","IBCNICB",131,0)
 ;             field of the 2.312 sub-file. (Optional)
"RTN","IBCNICB",132,0)
 ;             Corresponds to the Internal codes in 3.04 field of 
"RTN","IBCNICB",133,0)
 ;             2.312 sub-file: '0' FOR NO; '1' FOR YES;
"RTN","IBCNICB",134,0)
 ;  IBPLAN   - Data to be filed in PLAN FILING TIME FRAME (#.13) field 
"RTN","IBCNICB",135,0)
 ;             of 355.3 file (Optional)
"RTN","IBCNICB",136,0)
 ;  IBELEC   - Data to be file in ELECTRONIC PLAN TYPE  (#.15) field 
"RTN","IBCNICB",137,0)
 ;             of 355.3 file (Optional)
"RTN","IBCNICB",138,0)
 ;             Corresponds to the Internal Codes in .15 field of 355.3 
"RTN","IBCNICB",139,0)
 ;             file
"RTN","IBCNICB",140,0)
 ;  IBGPCOM  - Group Plan Comment array that contains the word
"RTN","IBCNICB",141,0)
 ;             processing data to be filed the COMMENTS (#11) word-
"RTN","IBCNICB",142,0)
 ;             processing field of  355.3 file. (Optional)
"RTN","IBCNICB",143,0)
 ;              Example:  IBGPCOM(1)="This is line 1"
"RTN","IBCNICB",144,0)
 ;                        IBGPCOM(2)="This is line 2"
"RTN","IBCNICB",145,0)
 ;  IBFTF    - Data to be filed in the PLAN STANDARD FTF (#.16) field of
"RTN","IBCNICB",146,0)
 ;             355.3 file (Optional)
"RTN","IBCNICB",147,0)
 ;             Corresponds to the Internal Entry Number of the entry in 
"RTN","IBCNICB",148,0)
 ;             the INSURANCE FILING TIME FRAME (#355.13) File.
"RTN","IBCNICB",149,0)
 ;  IBFTFVAL - Data to be filed in the PLAN STANDARD FTF VALUE (#.17)
"RTN","IBCNICB",150,0)
 ;             field of 355.3 file (Optional - Calling application 
"RTN","IBCNICB",151,0)
 ;             responsible to pass value if required for Plan Standard
"RTN","IBCNICB",152,0)
 ;             FTF) 
"RTN","IBCNICB",153,0)
 ;
"RTN","IBCNICB",154,0)
 ;Output:
"RTN","IBCNICB",155,0)
 ;  RESULT - Returned Parameter Array with results of call
"RTN","IBCNICB",156,0)
 ;   RESULT = 0 ^ No data to update
"RTN","IBCNICB",157,0)
 ;   RESULT(1) = -1^ error with Insurance Type (#2.312) file update
"RTN","IBCNICB",158,0)
 ;   RESULT(1) = 0                   - Insurance Type update worked
"RTN","IBCNICB",159,0)
 ;   RESULT(2) = -1^ error with GROUP INSURANCE PLAN (#355.3) file update
"RTN","IBCNICB",160,0)
 ;   RESULT(2) = 0                   - Group Insurance Plan update worked
"RTN","IBCNICB",161,0)
 ;
"RTN","IBCNICB",162,0)
 ;Update Patient Policy Comment (#1.08) and/or 
"RTN","IBCNICB",163,0)
 ;Policy Not Billable (#3.04) fields in 2.312 subfile
"RTN","IBCNICB",164,0)
 I $G(IBPOLCOM)]""!($G(IBPOLBIL)]"") D
"RTN","IBCNICB",165,0)
 . N IBIENS,IBFDA
"RTN","IBCNICB",166,0)
 . I $G(DFN)']"" S RESULT(1)="-1^PATIENT (#2) DFN not passed" Q
"RTN","IBCNICB",167,0)
 . I $G(IBPOLDA)'>0 S RESULT(1)="-1^INSURANCE TYPE (#2.312) sub-file IEN not defined" Q
"RTN","IBCNICB",168,0)
 . I +IBPOLDA,$G(^DPT(DFN,.312,IBPOLDA,0))="" S RESULT(0)="-1^Passed Patient INSURANCE TYPE (#2.312) entry doesn't exist" Q
"RTN","IBCNICB",169,0)
 . L +^DPT(DFN,.312,IBPOLDA):5 I '$T S RESULT(1)="-1^INSURANCE TYPE (#2.312) sub-file entry locked, data not updated" Q
"RTN","IBCNICB",170,0)
 . S IBIENS=+IBPOLDA_","_+DFN_","
"RTN","IBCNICB",171,0)
 . I $G(IBPOLBIL)]"",$$EXTERNAL^DILFD(2.312,3.04,"",IBPOLBIL)']"" S RESULT(1)="-1^POLICY NOT BILLABLE ("_IBPOLBIL_") not a valid value",IBPOLBIL=""
"RTN","IBCNICB",172,0)
 . S:$G(IBPOLCOM)]"" IBFDA(2.312,IBIENS,1.08)=IBPOLCOM
"RTN","IBCNICB",173,0)
 . S:$G(IBPOLBIL)]"" IBFDA(2.312,IBIENS,3.04)=IBPOLBIL
"RTN","IBCNICB",174,0)
 . I $D(IBFDA)>0 D FILE^DIE(,"IBFDA") S:$D(RESULT(1))'>0 RESULT(1)=0
"RTN","IBCNICB",175,0)
 . L -^DPT(DFN,.312,IBPOLDA)
"RTN","IBCNICB",176,0)
 ;
"RTN","IBCNICB",177,0)
 ;Update Plan Filing Time Frame (#.13), Electronic Plan Type (#.15)
"RTN","IBCNICB",178,0)
 ;Plan Standard FTF (#.16), Plan Standard FTF Value (#.17), and/or
"RTN","IBCNICB",179,0)
 ;Group Plan Comments (#11) fields in 355.3 file
"RTN","IBCNICB",180,0)
 I $G(IBPLAN)]""!($G(IBELEC)]"")!($D(IBGPCOM)>0)!($G(IBFTF)]"")!($G(IBFTFVAL)]"") D
"RTN","IBCNICB",181,0)
 . N IBIENS,IBFDA
"RTN","IBCNICB",182,0)
 . I $G(IBGRPDA)'>0 S RESULT(2)="-1^GROUP INSURANCE PLAN (#355.3) file IEN not defined" Q
"RTN","IBCNICB",183,0)
 . I +IBGRPDA,$G(^IBA(355.3,IBGRPDA,0))="" S RESULT(2)="-1^Passed GROUP INSURANCE PLAN (#355.3) entry doesn't exist" Q
"RTN","IBCNICB",184,0)
 . L +^IBA(355.3,IBGRPDA):5 I '$T S RESULT(2)="-1^GROUP INSURANCE PLAN (#355.3) file entry locked, data not updated" Q
"RTN","IBCNICB",185,0)
 . S IBIENS=+IBGRPDA_","
"RTN","IBCNICB",186,0)
 . ; Consistency Checks for Plan Standard FTF and FTF VALUE fields
"RTN","IBCNICB",187,0)
 . I $G(IBELEC)]"",$$EXTERNAL^DILFD(355.3,.15,"",IBELEC)']"" S RESULT(2)="-1^ELECTRONIC PLAN TYPE ("_IBELEC_") not a valid value",IBELEC=""
"RTN","IBCNICB",188,0)
 . I $G(IBFTFVAL)]"",$G(IBFTF)']"" S RESULT(2)="-1^PLAN STANDARD FTF should be passed with PLAN STANDARD FTF VALUE",IBFTFVAL=""
"RTN","IBCNICB",189,0)
 . I $G(IBFTF)]"",$$EXTERNAL^DILFD(355.3,.16,"",IBFTF)']"" S RESULT(2)="-1^PLAN STANDARD FTF ("_IBFTF_") not a valid value",IBFTF=""
"RTN","IBCNICB",190,0)
 . I $G(IBFTF)]"",$$GET1^DIQ(355.13,+IBFTF_",",.02,"I")=1,$G(IBFTFVAL)'>0 S RESULT(2)="-1^Valid PLAN STANDARD FTF VALUE not passed for "_$$GET1^DIQ(355.13,+IBFTF,.01,"E"),IBFTF="",IBFTFVAL=""
"RTN","IBCNICB",191,0)
 . ;
"RTN","IBCNICB",192,0)
 . S:$G(IBPLAN)]"" IBFDA(355.3,IBIENS,.13)=IBPLAN
"RTN","IBCNICB",193,0)
 . S:$G(IBELEC)]"" IBFDA(355.3,IBIENS,.15)=IBELEC
"RTN","IBCNICB",194,0)
 . S:$G(IBFTF)]"" IBFDA(355.3,IBIENS,.16)=IBFTF
"RTN","IBCNICB",195,0)
 . S:$G(IBFTFVAL)]"" IBFDA(355.3,IBIENS,.17)=IBFTFVAL
"RTN","IBCNICB",196,0)
 . I $D(IBFDA)>0 D FILE^DIE(,"IBFDA") S:$D(RESULT(2))'>0 RESULT(2)=0
"RTN","IBCNICB",197,0)
 . ;
"RTN","IBCNICB",198,0)
 . ;Update Group Plan Comments (#11) word processing field in 355.3 file
"RTN","IBCNICB",199,0)
 . I $O(IBGPCOM(""))>0 D WP^DIE(355.3,+IBGRPDA_",",11,,"IBGPCOM") S:$D(RESULT(2))'>0 RESULT(2)=0
"RTN","IBCNICB",200,0)
 . L -^IBA(355.3,IBGRPDA)
"RTN","IBCNICB",201,0)
 I $D(RESULT(1))'>0&($D(RESULT(2))'>0) S RESULT="0^No data to update"
"RTN","IBCNICB",202,0)
 Q
"RTN","IBCNICB",203,0)
 ;
"RTN","IBCNICB",204,0)
UPDPOL(RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA) ;update a new group into 
"RTN","IBCNICB",205,0)
 ;an existing patient policy entry for ICB interface
"RTN","IBCNICB",206,0)
 ;Input
"RTN","IBCNICB",207,0)
 ;  IBBUFDA  - INSURANCE BUFFER (#355.33) file internal entry number
"RTN","IBCNICB",208,0)
 ;             (IEN) (Required)
"RTN","IBCNICB",209,0)
 ;  DFN      - PATIENT (#2) file IEN (Required)
"RTN","IBCNICB",210,0)
 ;  IBINSDA  - INSURANCE COMPANY (#36) File IEN if not adding new entry
"RTN","IBCNICB",211,0)
 ;             (Optional)
"RTN","IBCNICB",212,0)
 ;  IBGRPDA  - GROUP INSURANCE PLAN (#355.3) File IEN if not adding new
"RTN","IBCNICB",213,0)
 ;             entry (Required)
"RTN","IBCNICB",214,0)
 ;  IBPOLDA  - INSURANCE TYPE (#2.312) sub-file of PATIENT (#2) IEN if
"RTN","IBCNICB",215,0)
 ;             not adding new entry (Required)
"RTN","IBCNICB",216,0)
 ;Output:
"RTN","IBCNICB",217,0)
 ;  RESULT(4) - Returned Parameter Array with results of call
"RTN","IBCNICB",218,0)
 ;     RESULT(4) =-1^error message
"RTN","IBCNICB",219,0)
 ;     RESULT(4) =0 ^ message that process was successful or not require
"RTN","IBCNICB",220,0)
 ;
"RTN","IBCNICB",221,0)
 N IBPAT
"RTN","IBCNICB",222,0)
 I $G(IBBUFDA)'>0 S RESULT(4)="-1^INSURANCE BUFFER (#355.33) IEN required" Q
"RTN","IBCNICB",223,0)
 I $G(DFN)'>0 S RESULT(4)="-1^PATIENT (#2) IEN required" Q
"RTN","IBCNICB",224,0)
 I $G(IBPOLDA)'>0 S RESULT(4)="-1^INSURANCE TYPE (#2.312) SUB-FILE IEN required" Q
"RTN","IBCNICB",225,0)
 I $G(^DPT(DFN,.312,IBPOLDA,0))'>0 S RESULT(4)="-1^PATIENT INSURANCE TYPE(#2.312) entry doesn't exist" Q
"RTN","IBCNICB",226,0)
 I $G(IBGRPDA)'>0 S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) IEN required" Q
"RTN","IBCNICB",227,0)
 ;
"RTN","IBCNICB",228,0)
 ; NO changes required
"RTN","IBCNICB",229,0)
 S IBPAT=$G(^DPT(DFN,.312,IBPOLDA,0))
"RTN","IBCNICB",230,0)
 I $G(IBINSDA)>0,$P(IBPAT,U,1)=IBINSDA,$P(IBPAT,U,18)=IBGRPDA S RESULT(4)="0^NO CHANGE REQUIRE" Q
"RTN","IBCNICB",231,0)
 I $G(IBINSDA)'>0,$P(IBPAT,U,18)=IBGRPDA S RESULT(4)="0^NO CHANGE REQUIRE" Q
"RTN","IBCNICB",232,0)
 ;
"RTN","IBCNICB",233,0)
 ;Additional error checks
"RTN","IBCNICB",234,0)
 I $G(^IBA(355.3,IBGRPDA,0))="" S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) entry doesn't exist" Q
"RTN","IBCNICB",235,0)
 I $G(IBINSDA)>0,$G(^DIC(36,IBINSDA,0))="" S RESULT(4)="-1^INSURANCE COMPANY (#36) entry doesn't exist" Q
"RTN","IBCNICB",236,0)
 I $G(IBINSDA)>0,$P($G(^IBA(355.3,IBGRPDA,0)),U,1)'=IBINSDA S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) entry points to different INSURANCE COMPANY (#36) entry" Q
"RTN","IBCNICB",237,0)
 I $G(IBINSDA)'>0,$P($G(^IBA(355.3,IBGRPDA,0)),U,1)'=$P(IBPAT,U,1) S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) entry points to different INSURANCE COMPANY (#36) entry" Q
"RTN","IBCNICB",238,0)
 ;
"RTN","IBCNICB",239,0)
 D CLEANUP
"RTN","IBCNICB",240,0)
 ;
"RTN","IBCNICB",241,0)
 L +^DPT(DFN,.312,IBPOLDA):5 I '$T S RESULT(4)="-1^INSURANCE TYPE (#2.312) SUB-FILE ENTRY LOCKED, DATA NOT UPDATED" Q
"RTN","IBCNICB",242,0)
 ;
"RTN","IBCNICB",243,0)
 N IBXIFN,IBFIELDS,IBERR
"RTN","IBCNICB",244,0)
 S IBXIFN=IBPOLDA_","_DFN_","
"RTN","IBCNICB",245,0)
 I $G(IBINSDA) S IBFIELDS(2.312,IBXIFN,.01)=IBINSDA
"RTN","IBCNICB",246,0)
 S IBFIELDS(2.312,IBXIFN,.18)=IBGRPDA ;policy's group/plan always update 
"RTN","IBCNICB",247,0)
 Q:'$D(IBFIELDS)
"RTN","IBCNICB",248,0)
 ;Source
"RTN","IBCNICB",249,0)
 S IBFIELDS(2.312,IBXIFN,1.09)=$P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,3)
"RTN","IBCNICB",250,0)
 ;Source Date
"RTN","IBCNICB",251,0)
 S IBFIELDS(2.312,IBXIFN,1.1)=+$G(^IBA(355.33,+$G(IBBUFDA),0))
"RTN","IBCNICB",252,0)
 D FILE^DIE("","IBFIELDS","IBERR")
"RTN","IBCNICB",253,0)
 I $D(IBERR)>0 S RESULT(4)="-1^Fileman DIE error"
"RTN","IBCNICB",254,0)
 I $D(IBERR)'>0 S RESULT(4)="0^Data successfully updated"
"RTN","IBCNICB",255,0)
 L -^DPT(DFN,.312,IBPOLDA)
"RTN","IBCNICB",256,0)
 Q
"RTN","IBCNICB",257,0)
 ;
"RTN","IBCNICB",258,0)
CLEANUP ;This logic will delete obsolete Individual Plans, Repoint Insurance 
"RTN","IBCNICB",259,0)
 ;Reviews if Insurance Company changes, and Remove any Old Benefits Used.
"RTN","IBCNICB",260,0)
 N IBPAT,IBOLDINS,IBOLDGRP,IBIP,IBT,IBTNODE0,IBTNODE1,IBFIELDS,IBARR
"RTN","IBCNICB",261,0)
 S IBPAT=$G(^DPT(DFN,.312,IBPOLDA,0))
"RTN","IBCNICB",262,0)
 S IBOLDINS=$P(IBPAT,U,1),IBOLDGRP=$P(IBPAT,U,18)
"RTN","IBCNICB",263,0)
 S IBIP=$P($G(^IBA(355.3,+$P(IBPAT,U,18),0)),U,2)
"RTN","IBCNICB",264,0)
 ;If Old Group Insurance Plan is an Individual Plan with only one
"RTN","IBCNICB",265,0)
 ;subscriber for the same Patient Insurance Policy Entry, delete it
"RTN","IBCNICB",266,0)
 I IBIP=0,$$SUBS^IBCNSJ(IBOLDINS,IBOLDGRP,,"IBARR")'>1,($D(IBARR(DFN,IBPOLDA))>0) D DEL^IBCNSJ(IBOLDGRP)
"RTN","IBCNICB",267,0)
 ;If changing to a new Insurance Company
"RTN","IBCNICB",268,0)
 I $G(IBINSDA)>0,IBOLDINS'=IBINSDA D  Q
"RTN","IBCNICB",269,0)
 . ; - repoint all Insurance Reviews to new company
"RTN","IBCNICB",270,0)
 . I $$IR^IBCNSJ21(DFN,IBPOLDA) D
"RTN","IBCNICB",271,0)
 . S IBT=0
"RTN","IBCNICB",272,0)
 . F  S IBT=$O(^IBT(356.2,"D",DFN,IBT)) Q:'IBT  D
"RTN","IBCNICB",273,0)
 . . S IBTNODE0=$G(^IBT(356.2,IBT,0)),IBTNODE1=$G(^IBT(356.2,IBT,1))
"RTN","IBCNICB",274,0)
 . . I $P(IBTNODE1,U,5)=IBPOLDA,$P(IBTNODE0,U,8)'=IBINSDA D
"RTN","IBCNICB",275,0)
 . . . S IBFIELDS(356.2,IBT_",",.08)=IBINSDA
"RTN","IBCNICB",276,0)
 . . . D FILE^DIE("","IBFIELDS")
"RTN","IBCNICB",277,0)
 ;Delete Benefits Used (#355.5) corresponding to old Patient Group Plan
"RTN","IBCNICB",278,0)
 D DELBU
"RTN","IBCNICB",279,0)
 Q
"RTN","IBCNICB",280,0)
 ;
"RTN","IBCNICB",281,0)
DELBU ;Delete Benefits Used
"RTN","IBCNICB",282,0)
 N IBCDFN,IBPLAN,IBBU
"RTN","IBCNICB",283,0)
 S IBCDFN=IBPOLDA,IBPLAN=IBOLDGRP
"RTN","IBCNICB",284,0)
 ;Get Benefits Used
"RTN","IBCNICB",285,0)
 D BU^IBCNSJ21
"RTN","IBCNICB",286,0)
 ;If there are Benefits Used, then delete them
"RTN","IBCNICB",287,0)
 I $O(IBBU(0)) D
"RTN","IBCNICB",288,0)
 . N IBDAT
"RTN","IBCNICB",289,0)
 . S IBDAT=""
"RTN","IBCNICB",290,0)
 . F  S IBDAT=$O(IBBU(IBDAT)) Q:IBDAT=""  D DBU^IBCNSJ(IBBU(IBDAT))
"RTN","IBCNICB",291,0)
 Q
"RTN","IBCNSM31")
0^4^B20882944^B20632999
"RTN","IBCNSM31",1,0)
IBCNSM31 ;ALB/AAS - INSURANCE MANAGEMENT - OUTPUTS ;28-MAY-93
"RTN","IBCNSM31",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,68,413**;21-MAR-94;Build 9
"RTN","IBCNSM31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSM31",4,0)
 ;
"RTN","IBCNSM31",5,0)
% G EN^IBCNSM
"RTN","IBCNSM31",6,0)
 ;
"RTN","IBCNSM31",7,0)
EA ; -- Edit all insurance policy data
"RTN","IBCNSM31",8,0)
 N IBDIF,I,J,IBXX,IBCDFN,IBTRC,VALMY
"RTN","IBCNSM31",9,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM31",10,0)
 D FULL^VALM1
"RTN","IBCNSM31",11,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D  ;W !,"Entry ",X,"Selected" D
"RTN","IBCNSM31",12,0)
 .S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM31",13,0)
 .Q:IBPPOL=""
"RTN","IBCNSM31",14,0)
 .S IBCDFN=$P($G(IBPPOL),"^",4) I 'IBCDFN W !!,"Can't identify the policy!" Q
"RTN","IBCNSM31",15,0)
 .; -- edit patient data
"RTN","IBCNSM31",16,0)
 .N IBQUIT S IBQUIT=0
"RTN","IBCNSM31",17,0)
 .S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1) D PAT^IBCNSEH
"RTN","IBCNSM31",18,0)
 .D BEFORE^IBCNSEVT
"RTN","IBCNSM31",19,0)
 .D PATPOL^IBCNSM32(IBCDFN)
"RTN","IBCNSM31",20,0)
 .D AFTER^IBCNSEVT,^IBCNSEVT
"RTN","IBCNSM31",21,0)
 .; -- edit policy data
"RTN","IBCNSM31",22,0)
 .D:'$G(IBQUIT) POL^IBCNSEH,EDPOL^IBCNSM3(IBCDFN)
"RTN","IBCNSM31",23,0)
 .W ! D AI^IBCNSP1 D:$G(IBTRC) AIP^IBCNSP02(IBTRC)
"RTN","IBCNSM31",24,0)
 .Q
"RTN","IBCNSM31",25,0)
 ;
"RTN","IBCNSM31",26,0)
EAQ D BLD^IBCNSM
"RTN","IBCNSM31",27,0)
 S VALMBCK="R"
"RTN","IBCNSM31",28,0)
 Q
"RTN","IBCNSM31",29,0)
 ;
"RTN","IBCNSM31",30,0)
LK(IBCNS) ; -- screened look up to policy file
"RTN","IBCNSM31",31,0)
 ;      input:   IBCNS = pointer to insurance company file (36)
"RTN","IBCNSM31",32,0)
 ;
"RTN","IBCNSM31",33,0)
 N DIC,IBX,DIR,DUOUT,DTOUT,DIROUT,DIRUT,X,Y,IBCPOL
"RTN","IBCNSM31",34,0)
 S IBCPOL=""
"RTN","IBCNSM31",35,0)
 I $G(IBCNS)="" G LKQ
"RTN","IBCNSM31",36,0)
 ;
"RTN","IBCNSM31",37,0)
 I '$$ANYGP^IBCNSJ(IBCNS) W !!,"This company does not offer any active group plans." G LKQ
"RTN","IBCNSM31",38,0)
 ;
"RTN","IBCNSM31",39,0)
 S DIR(0)="Y",DIR("A")="This company offers active group plans.  Do you wish to select one"
"RTN","IBCNSM31",40,0)
 S DIR("?")="The look-up facility to select an active group plan has been enhanced to use the List Manager.  Enter 'YES' if you wish to select a plan from this look-up, or 'NO' to add your own plan."
"RTN","IBCNSM31",41,0)
 D ^DIR K DIR I 'Y G LKQ
"RTN","IBCNSM31",42,0)
 ;
"RTN","IBCNSM31",43,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you wish to directly enter this plan"
"RTN","IBCNSM31",44,0)
 S DIR("?")="The look-up facility to select an active group plan has been enhanced to use the List Manager.  Enter 'NO' if you wish to select a plan from this look-up, or 'YES' to directly enter the plan."
"RTN","IBCNSM31",45,0)
 D ^DIR K DIR I $D(DIRUT) G LKQ
"RTN","IBCNSM31",46,0)
 ;
"RTN","IBCNSM31",47,0)
 I 'Y D LKP^IBCNSU2(IBCNS,0,0,.IBCPOL,$G(IBALR)) G LKQ
"RTN","IBCNSM31",48,0)
 ;
"RTN","IBCNSM31",49,0)
 S DIC("A")="Select an Active GROUP PLAN: "
"RTN","IBCNSM31",50,0)
 S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I +^(0)=IBCNS,$P(^(0),U,2),'$P(^(0),U,11),$G(IBALR)'=+Y"
"RTN","IBCNSM31",51,0)
 S DIC("W")="N IBX S IBX=$G(^(0)) W ""   Name: "",$E($S($P(IBX,U,3)]"""":$P(IBX,U,3),1:""<none>"")_$J("""",20),1,20),""   Number: "",$S($P(IBX,U,4)]"""":$P(IBX,U,4),1:""<none>"")"
"RTN","IBCNSM31",52,0)
 D ^DIC K DIC I +Y>0 S IBCPOL=+Y
"RTN","IBCNSM31",53,0)
 ;
"RTN","IBCNSM31",54,0)
 ; -- see if only one policy
"RTN","IBCNSM31",55,0)
 ;I '$O(^IBA(355.3,"B",+IBCNS,IBX) D  G LKQ
"RTN","IBCNSM31",56,0)
 ;
"RTN","IBCNSM31",57,0)
 ; -- is more than one plan to choose from, let fileman do it.
"RTN","IBCNSM31",58,0)
 ;S DIC("A")="Select GROUP INSURANCE PLAN: "
"RTN","IBCNSM31",59,0)
 ;
"RTN","IBCNSM31",60,0)
 ;S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U)=IBCNS,($P(^(0),U,2)=1!($P(^(0),U,10)=$G(DFN)))"
"RTN","IBCNSM31",61,0)
 ;
"RTN","IBCNSM31",62,0)
 ;D ^DIC K DIC I +Y>0 S IBCPOL=+Y
"RTN","IBCNSM31",63,0)
 ;
"RTN","IBCNSM31",64,0)
LKQ Q IBCPOL
"RTN","IBCNSM31",65,0)
 ;
"RTN","IBCNSM31",66,0)
FUTURE ; -- if expiration date in future give warning
"RTN","IBCNSM31",67,0)
 I $G(IBFUTUR) K IBFUTUR Q
"RTN","IBCNSM31",68,0)
 I $P(^DPT(DFN,.312,IBCDFN,0),"^",4),$P(^(0),"^",4)>DT W !!,*7,"WARNING:  The expiration date for this policy is in the future!",!,"          Normally this is a past date or left blank or a past date",! S Y="@333"
"RTN","IBCNSM31",69,0)
 S IBFUTUR=1
"RTN","IBCNSM31",70,0)
 Q
"RTN","IBCNSM31",71,0)
 ;
"RTN","IBCNSM31",72,0)
COVERED(DFN,IBCOVP) ; -- update covered by insurance in background
"RTN","IBCNSM31",73,0)
 ; -- input ibcovp = the covered by insurance field prior to editing
"RTN","IBCNSM31",74,0)
 ;                   (add/edit/delete) of the 2.312 insurance type mult.
"RTN","IBCNSM31",75,0)
 ;
"RTN","IBCNSM31",76,0)
 Q:$G(DFN)<1
"RTN","IBCNSM31",77,0)
 N X,Y,I,IBCOV,IBNCOV,DA,DR,DIE,DIC,IBINS,IBINSD
"RTN","IBCNSM31",78,0)
 S (IBCOV,IBNCOV)=$P($G(^DPT(DFN,.31)),"^",11)
"RTN","IBCNSM31",79,0)
 D ALL^IBCNS1(DFN,"IBINS",2,DT) S IBINSD=+$G(IBINS(0))
"RTN","IBCNSM31",80,0)
 ;
"RTN","IBCNSM31",81,0)
 ; -- initial value ="" or Unknown
"RTN","IBCNSM31",82,0)
 I $G(IBCOVP)=""!($G(IBCOVP)="U") S IBNCOV=$S('$O(^DPT(DFN,.312,0)):"U",IBINSD:"Y",1:"N")
"RTN","IBCNSM31",83,0)
 ;
"RTN","IBCNSM31",84,0)
 ; -- initial value = YES or NO (treat the same)
"RTN","IBCNSM31",85,0)
 I $G(IBCOVP)="Y"!($G(IBCOVP)="N") S IBNCOV=$S('$O(^DPT(DFN,.312,0)):"N",IBINSD:"Y",1:"N")
"RTN","IBCNSM31",86,0)
 ;
"RTN","IBCNSM31",87,0)
 ;
"RTN","IBCNSM31",88,0)
 I IBCOV'=IBNCOV D
"RTN","IBCNSM31",89,0)
 .S DIE="^DPT(",DR=".3192////"_IBNCOV,DA=DFN D ^DIE
"RTN","IBCNSM31",90,0)
 .I '$D(ZTQUEUED)&($G(IBSUPRES)'>0) W !!,"COVERED BY HEALTH INSURANCE changed to '"_$S(IBNCOV="Y":"YES",IBNCOV="N":"NO",1:"UNKNOWN"),"'.",! H 3
"RTN","IBCNSM31",91,0)
 .Q
"RTN","IBCNSM31",92,0)
 Q
"RTN","IBCNSM31",93,0)
 ;
"RTN","IBCNSM31",94,0)
3 ; -- display group name as uneditable
"RTN","IBCNSM31",95,0)
 ;    called by die, expects da = entry in 355.3
"RTN","IBCNSM31",96,0)
 N X
"RTN","IBCNSM31",97,0)
 S X=$P($G(^IBA(355.3,DA,0)),"^",3)
"RTN","IBCNSM31",98,0)
 W !,"GROUP NAME: ",X,$S(X'="":"// ",1:""),"  (No Editing)"
"RTN","IBCNSM31",99,0)
 Q
"RTN","IBCNSM31",100,0)
 ;
"RTN","IBCNSM31",101,0)
4 ; -- display group number as uneditable
"RTN","IBCNSM31",102,0)
 ;    called by die, expects da = entry in 355.3
"RTN","IBCNSM31",103,0)
 N X
"RTN","IBCNSM31",104,0)
 S X=$P($G(^IBA(355.3,DA,0)),"^",4)
"RTN","IBCNSM31",105,0)
 W !,"GROUP NUMBER: ",X,$S(X'="":"// ",1:""),"  (No Editing)"
"RTN","IBCNSM31",106,0)
 Q
"RTN","IBCNSM32")
0^5^B26493430^B26481916
"RTN","IBCNSM32",1,0)
IBCNSM32 ;ALB/AAS - INSURANCE MANAGEMENT - POLICY EDIT ;23-JAN-95
"RTN","IBCNSM32",2,0)
 ;;2.0;INTEGRATED BILLING;**28,40,52,85,103,133,361,371,413**;21-MAR-94;Build 9
"RTN","IBCNSM32",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSM32",4,0)
 ;
"RTN","IBCNSM32",5,0)
PATPOL(IBCDFN) ; -- edit patient specific policy info
"RTN","IBCNSM32",6,0)
 I '$G(IBCDFN) G PATPOLQ
"RTN","IBCNSM32",7,0)
 D SAVEPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSM32",8,0)
 D POL^IBCNSU41(DFN)
"RTN","IBCNSM32",9,0)
 ;
"RTN","IBCNSM32",10,0)
 ; -- give warning if expired or inactive co.
"RTN","IBCNSM32",11,0)
 I $P(^DPT(DFN,.312,IBCDFN,0),"^",4),$P(^(0),"^",4)'>DT W !,"WARNING:  This appears to be an expired policy!",!
"RTN","IBCNSM32",12,0)
 I $P(^DIC(36,+$P(^DPT(DFN,.312,IBCDFN,0),"^"),0),"^",5) W !,*7,"WARNING:  This insurance company is INACTIVE!",!
"RTN","IBCNSM32",13,0)
 ;
"RTN","IBCNSM32",14,0)
 N IBAD,IBDIF,DA,DR,DIC,DIE,DGSENFLG S DGSENFLG=1
"RTN","IBCNSM32",15,0)
 L +^DPT(DFN,.312,+IBCDFN):5 I '$T D LOCKED^IBTRCD1 G PATPOLQ
"RTN","IBCNSM32",16,0)
 ;
"RTN","IBCNSM32",17,0)
 D EDIT^IBCNSP1(DFN,IBCDFN,.IBQUIT)    ; IB*371 edit 2.312 subfile data
"RTN","IBCNSM32",18,0)
 ;
"RTN","IBCNSM32",19,0)
 ; If the 2.312 subfile entry was deleted then unlock and get out
"RTN","IBCNSM32",20,0)
 I '$D(^DPT(DFN,.312,IBCDFN,0)) L -^DPT(DFN,.312,+IBCDFN) G PATPOLQ
"RTN","IBCNSM32",21,0)
 ;
"RTN","IBCNSM32",22,0)
 ; -- if the company was changed, change the policy plan
"RTN","IBCNSM32",23,0)
 I $G(IBREG),$G(IBCNS),+$G(^DPT(DFN,.312,IBCDFN,0))'=IBCNS D CHPL
"RTN","IBCNSM32",24,0)
 ;
"RTN","IBCNSM32",25,0)
 K IBFUTUR
"RTN","IBCNSM32",26,0)
 D COMPPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSM32",27,0)
 I IBDIF D UPDATPT^IBCNSP3(DFN,IBCDFN)
"RTN","IBCNSM32",28,0)
 L -^DPT(DFN,.312,+IBCDFN)
"RTN","IBCNSM32",29,0)
 ;
"RTN","IBCNSM32",30,0)
 D FUTURE^IBCNSM31 K Y,IBFUTUR
"RTN","IBCNSM32",31,0)
PATPOLQ Q
"RTN","IBCNSM32",32,0)
 ;
"RTN","IBCNSM32",33,0)
CHPL ; Change policy plan if the policy company differs from plan company.
"RTN","IBCNSM32",34,0)
 ;  Required variable input:
"RTN","IBCNSM32",35,0)
 ;        DFN  --  pointer to the patient in file #2
"RTN","IBCNSM32",36,0)
 ;     IBCDFN  --  pointer to the policy in file #2.312
"RTN","IBCNSM32",37,0)
 ;      IBCNS  --  pointer to the plan company in file #36
"RTN","IBCNSM32",38,0)
 ;
"RTN","IBCNSM32",39,0)
 N IBBU,IBCNS1,IBCPOL1,IBNEWP1,IBPLAN,IBIP,IBT,X
"RTN","IBCNSM32",40,0)
 S X=$G(^DPT(DFN,.312,IBCDFN,0)),IBCNS1=+X
"RTN","IBCNSM32",41,0)
 S IBPLAN=$P(X,"^",18),IBIP='$P($G(^IBA(355.3,IBPLAN,0)),"^",2)
"RTN","IBCNSM32",42,0)
 W !!,"Since you have changed the Insurance Company to ",$E($P($G(^DIC(36,IBCNS1,0)),"^"),1,25),","
"RTN","IBCNSM32",43,0)
 W !,"you must now change the Insurance Plan to which this veteran"
"RTN","IBCNSM32",44,0)
 W !,"is subscribing to one which is offered by this company!",!
"RTN","IBCNSM32",45,0)
 ;
"RTN","IBCNSM32",46,0)
 ; - warn about benefits used
"RTN","IBCNSM32",47,0)
 D BU^IBCNSJ21 I $O(IBBU(0)) D
"RTN","IBCNSM32",48,0)
 .W !,"The current policy plan has Benefits Used associated with it!"
"RTN","IBCNSM32",49,0)
 .W !,"If you add or select another plan to associate with this policy,"
"RTN","IBCNSM32",50,0)
 .W !,"these Benefits Used will be deleted!",!
"RTN","IBCNSM32",51,0)
 ;
"RTN","IBCNSM32",52,0)
 ; - warn about Individual Plans
"RTN","IBCNSM32",53,0)
 I IBIP D
"RTN","IBCNSM32",54,0)
 .W !,"  ***  Please note:  Since the veteran's current plan is an Individual Plan,"
"RTN","IBCNSM32",55,0)
 .W !?21,"this plan will be deleted if you add or select a new"
"RTN","IBCNSM32",56,0)
 .W !?21,"plan to associate with this policy.",!
"RTN","IBCNSM32",57,0)
 ;
"RTN","IBCNSM32",58,0)
 ; - select or add a new plan
"RTN","IBCNSM32",59,0)
 S IBCPOL1=$$LK^IBCNSM31(IBCNS1)
"RTN","IBCNSM32",60,0)
 I 'IBCPOL1 D NEW^IBCNSJ3(IBCNS1,.IBCPOL1) S:IBCPOL1 IBNEWP1=1
"RTN","IBCNSM32",61,0)
 I 'IBCPOL1 D  G CHPLQ
"RTN","IBCNSM32",62,0)
 .W !!,"A new plan was not added or selected!"
"RTN","IBCNSM32",63,0)
 .W !,"Changing the policy company back to ",$E($P($G(^DIC(36,IBCNS,0)),"^"),1,25),"..."
"RTN","IBCNSM32",64,0)
 .S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBCDFN,DR=".01////"_IBCNS_";1.05///NOW;1.06////"_DUZ D ^DIE K DA,DIE,DR
"RTN","IBCNSM32",65,0)
 ;
"RTN","IBCNSM32",66,0)
 W !!,"Changing the policy plan..."
"RTN","IBCNSM32",67,0)
 S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBCDFN,DR=".18////"_IBCPOL1_";1.05///NOW;1.06////"_DUZ D ^DIE K DA,DIE,DR
"RTN","IBCNSM32",68,0)
 I IBIP!$G(IBNEWP) W !!,"Deleting the ",$S(IBIP:"current Individual",1:"previously-added")," plan for ",$E($P($G(^DIC(36,IBCNS,0)),"^"),1,25),"..." D DEL^IBCNSJ(IBPLAN)
"RTN","IBCNSM32",69,0)
 ;
"RTN","IBCNSM32",70,0)
 ; - delete any dangling benefits used
"RTN","IBCNSM32",71,0)
 I $O(IBBU(0)) D
"RTN","IBCNSM32",72,0)
 .N IBDAT
"RTN","IBCNSM32",73,0)
 .W !!,"Deleting current Benefits Used... "
"RTN","IBCNSM32",74,0)
 .S IBDAT="" F  S IBDAT=$O(IBBU(IBDAT)) Q:IBDAT=""  D DBU^IBCNSJ(IBBU(IBDAT))
"RTN","IBCNSM32",75,0)
 ;
"RTN","IBCNSM32",76,0)
 ; - repoint all Insurance Reviews to new company
"RTN","IBCNSM32",77,0)
 I $$IR^IBCNSJ21(DFN,IBCDFN) D
"RTN","IBCNSM32",78,0)
 .W !!,"Repointing all Insurance Reviews to ",$E($P($G(^DIC(36,IBCNS1,0)),"^"),1,25),"... "
"RTN","IBCNSM32",79,0)
 .S IBT=0 F  S IBT=$O(^IBT(356.2,"D",DFN,IBT)) Q:'IBT  I $P($G(^IBT(356.2,IBT,1)),"^",5)=IBCDFN,$P($G(^(0)),"^",8)'=IBCNS1 S DA=IBT,DR=".08////"_IBCNS1,DIE="^IBT(356.2," D ^DIE K DA,DR,DIE W "."
"RTN","IBCNSM32",80,0)
 ;
"RTN","IBCNSM32",81,0)
 S IBCNS=IBCNS1,IBNEWP=$G(IBNEWP1)
"RTN","IBCNSM32",82,0)
CHPLQ Q
"RTN","IBCNSM32",83,0)
 ;
"RTN","IBCNSM32",84,0)
PLAN(DFN,IBCDFN,IBCNS) ; Fix policies when identified.
"RTN","IBCNSM32",85,0)
 ;
"RTN","IBCNSM32",86,0)
 ;  This function is invoked from Inactivate Plan or Change Policy Plan,
"RTN","IBCNSM32",87,0)
 ;  when it is recognized that the policy and plan companies are out
"RTN","IBCNSM32",88,0)
 ;  of synch.  If the user doesn't select a new plan to associate with
"RTN","IBCNSM32",89,0)
 ;  the policy, the policy company will be changed to the plan company.
"RTN","IBCNSM32",90,0)
 ;
"RTN","IBCNSM32",91,0)
 ;  The input parameters are defined above.
"RTN","IBCNSM32",92,0)
 ;
"RTN","IBCNSM32",93,0)
 N IBNEWP
"RTN","IBCNSM32",94,0)
 I '$G(DFN)!'$G(IBCDFN)!'$G(IBCNS) G PLANQ
"RTN","IBCNSM32",95,0)
 W !!,*7,"The policy company and plan company are not the same!!"
"RTN","IBCNSM32",96,0)
 W !,"This inconsistency probably occurred in the past when changing"
"RTN","IBCNSM32",97,0)
 W !,"the policy company through Screen 5 of Registration."
"RTN","IBCNSM32",98,0)
 W !!,"You must resolve this inconsistency.  If you do not choose a new plan"
"RTN","IBCNSM32",99,0)
 W !,"offered by the policy company, the policy company will be changed to"
"RTN","IBCNSM32",100,0)
 W !,"the plan company (",$P($G(^DIC(36,IBCNS,0)),"^"),") ...."
"RTN","IBCNSM32",101,0)
 D CHPL
"RTN","IBCNSM32",102,0)
PLANQ Q
"RTN","IBCNSM32",103,0)
HLP ; -- help text for subscriber id
"RTN","IBCNSM32",104,0)
 W !,?5,"Enter Medicare Claim Number (Subscriber ID) exactly as it"
"RTN","IBCNSM32",105,0)
 W !,?5,"appears on the Medicare Insurance Card including All Characters."
"RTN","IBCNSM32",106,0)
 W !,?5,"Valid HICN formats are:  1-3 alpha characters followed by 6 or 9 digits, "
"RTN","IBCNSM32",107,0)
 W !,?5,"or 9 digits followed by 1 alpha character optionally followed by another "
"RTN","IBCNSM32",108,0)
 W !,?5,"alpha character or 1 digit."
"RTN","IBCNSM32",109,0)
 Q
"RTN","IBTRCD1")
0^6^B26536590^B26162223
"RTN","IBTRCD1",1,0)
IBTRCD1 ;ALB/AAS/BGA - CLAIMS TRACKING INS ACTION EDIT ;11/8/06 9:34am
"RTN","IBTRCD1",2,0)
 ;;2.0;INTEGRATED BILLING;**10,359,413**;21-MAR-94;Build 9
"RTN","IBTRCD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRCD1",4,0)
 ;
"RTN","IBTRCD1",5,0)
% G ^IBTRC
"RTN","IBTRCD1",6,0)
 ;
"RTN","IBTRCD1",7,0)
QE ; -- Quick edit
"RTN","IBTRCD1",8,0)
 N IBXX,VALMY,DA,DR,DIC,DIE
"RTN","IBTRCD1",9,0)
 D QE1^IBTRC1
"RTN","IBTRCD1",10,0)
 D BLD^IBTRCD
"RTN","IBTRCD1",11,0)
 S VALMBCK="R"
"RTN","IBTRCD1",12,0)
 Q
"RTN","IBTRCD1",13,0)
 ;
"RTN","IBTRCD1",14,0)
NX(IBTMPNM,BLD) ; -- edit next template
"RTN","IBTRCD1",15,0)
 N IBXX,VALMY
"RTN","IBTRCD1",16,0)
 D EN^VALM(IBTMPNM)
"RTN","IBTRCD1",17,0)
 I '$D(IBFASTXT) D:'$G(BLD) BLD^IBTRCD
"RTN","IBTRCD1",18,0)
 I IBTMPNM="IBCNS VIEW PAT INS" D:$G(BLD)=1 BLD^IBTRE ;REBUILD LIST
"RTN","IBTRCD1",19,0)
 S VALMBCK="R"
"RTN","IBTRCD1",20,0)
 Q
"RTN","IBTRCD1",21,0)
 ;
"RTN","IBTRCD1",22,0)
EDIT(DR,BLD) ; -- edit entry point for claims tracking reviews
"RTN","IBTRCD1",23,0)
 ; -- Input   IBTEMP = template name or dr string
"RTN","IBTRCD1",24,0)
 ;               BLD = any non-zero value if calling routine is doing own
"RTN","IBTRCD1",25,0)
 ;                      rebuild
"RTN","IBTRCD1",26,0)
 ;
"RTN","IBTRCD1",27,0)
 N IBDIF,DA,DIC,DIE,DIR,X,Y,IBTLST
"RTN","IBTRCD1",28,0)
 D FULL^VALM1 W !
"RTN","IBTRCD1",29,0)
 D SAVE
"RTN","IBTRCD1",30,0)
 S DIE="^IBT(356.2,",DA=IBTRC
"RTN","IBTRCD1",31,0)
 L +^IBT(356.2,+IBTRC):5 I '$T D LOCKED G EDITQ
"RTN","IBTRCD1",32,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRCD1",33,0)
 I '$D(IBCON) D CON K IBCON
"RTN","IBTRCD1",34,0)
 D COMP
"RTN","IBTRCD1",35,0)
 I IBDIF=1 D UPDATE
"RTN","IBTRCD1",36,0)
 L -^IBT(356.2,+IBTRC)
"RTN","IBTRCD1",37,0)
 D BLD^IBTRCD:'$G(BLD)
"RTN","IBTRCD1",38,0)
EDITQ K ^TMP($J,"IBT")
"RTN","IBTRCD1",39,0)
 S VALMBCK="R"
"RTN","IBTRCD1",40,0)
 Q
"RTN","IBTRCD1",41,0)
 ;
"RTN","IBTRCD1",42,0)
SAVE ; -- Save the global before editing
"RTN","IBTRCD1",43,0)
 K ^TMP($J,"IBT")
"RTN","IBTRCD1",44,0)
 S ^TMP($J,"IBT",356.2,IBTRC,0)=$G(^IBT(356.2,IBTRC,0))
"RTN","IBTRCD1",45,0)
 S ^TMP($J,"IBT",356.2,IBTRC,1)=$G(^IBT(356.2,IBTRC,1))
"RTN","IBTRCD1",46,0)
 S ^TMP($J,"IBT",356.2,IBTRC,11,0)=$G(^IBT(356.2,IBTRC,11,0))
"RTN","IBTRCD1",47,0)
 S ^TMP($J,"IBT",356.2,IBTRC,12,0)=$G(^IBT(356.2,IBTRC,12,0))
"RTN","IBTRCD1",48,0)
 S ^TMP($J,"IBT",356.2,IBTRC,13,0)=$G(^IBT(356.2,IBTRC,13,0))
"RTN","IBTRCD1",49,0)
 Q
"RTN","IBTRCD1",50,0)
 ;
"RTN","IBTRCD1",51,0)
COMP ; -- Compare before editing with globals
"RTN","IBTRCD1",52,0)
 S IBDIF=0
"RTN","IBTRCD1",53,0)
 I $G(^IBT(356.2,IBTRC,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,0)) S IBDIF=1 Q
"RTN","IBTRCD1",54,0)
 I $G(^IBT(356.2,IBTRC,1))'=$G(^TMP($J,"IBT",356.2,IBTRC,1)) S IBDIF=1 Q
"RTN","IBTRCD1",55,0)
 I $G(^IBT(356.2,IBTRC,11,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,11,0)) S IBDIF=1 Q
"RTN","IBTRCD1",56,0)
 I $G(^IBT(356.2,IBTRC,12,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,12,0)) S IBDIF=1 Q
"RTN","IBTRCD1",57,0)
 I $G(^IBT(356.2,IBTRC,13,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,13,0)) S IBDIF=1 Q
"RTN","IBTRCD1",58,0)
 Q
"RTN","IBTRCD1",59,0)
 ;
"RTN","IBTRCD1",60,0)
UPDATE ; -- enter date and user if editing has taken place
"RTN","IBTRCD1",61,0)
 ;    entry locked during edit lock not needed here
"RTN","IBTRCD1",62,0)
 S DIE="^IBT(356.2,",DA=IBTRC
"RTN","IBTRCD1",63,0)
 S DR="1.03///NOW;1.04////"_DUZ
"RTN","IBTRCD1",64,0)
 D ^DIE K DA,DR,DIC,DIE
"RTN","IBTRCD1",65,0)
 Q
"RTN","IBTRCD1",66,0)
 ;
"RTN","IBTRCD1",67,0)
LOCKED ; -- write locked message
"RTN","IBTRCD1",68,0)
 Q:$D(ZTQUEUED)
"RTN","IBTRCD1",69,0)
 ;Suppress Writes & PAUSE^VALM1 call when used via ICB interface
"RTN","IBTRCD1",70,0)
 Q:$G(IBSUPRES)>0
"RTN","IBTRCD1",71,0)
 W !!,"Sorry, another user currently editing this entry."
"RTN","IBTRCD1",72,0)
 W !,"Try again later."
"RTN","IBTRCD1",73,0)
 D PAUSE^VALM1
"RTN","IBTRCD1",74,0)
 Q
"RTN","IBTRCD1",75,0)
 ;
"RTN","IBTRCD1",76,0)
CON ; -- consistency checker for insurance reviews
"RTN","IBTRCD1",77,0)
 N I,J,X,Y,DA,DR,DIC,DIE,IBI,IBDEL,IBACTION
"RTN","IBTRCD1",78,0)
 S IBCON=1 Q:'$D(^IBT(356.2,IBTRC,0))
"RTN","IBTRCD1",79,0)
 S IBACTION=$P($G(^IBE(356.7,+$P(^IBT(356.2,IBTRC,0),"^",11),0)),"^",3)
"RTN","IBTRCD1",80,0)
 I $G(IBACTION)="" S IBACTION=99
"RTN","IBTRCD1",81,0)
 ;
"RTN","IBTRCD1",82,0)
 ; -- if action and type the same okay, check nxt rv. dates
"RTN","IBTRCD1",83,0)
 I $P($G(^IBT(356.2,IBTRC,0)),"^",4)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",4),$P($G(^IBT(356.2,IBTRC,0)),"^",11)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) G NXRV
"RTN","IBTRCD1",84,0)
 ;
"RTN","IBTRCD1",85,0)
 ; -- if action different
"RTN","IBTRCD1",86,0)
 I $P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11)="" Q  ; no previous action
"RTN","IBTRCD1",87,0)
 I $P($G(^IBT(356.2,IBTRC,0)),"^",11)'=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) D
"RTN","IBTRCD1",88,0)
 .S DR=$P($T(@(IBACTION)),";;",2,99)
"RTN","IBTRCD1",89,0)
 .I DR'="" D EDIT(DR,1)
"RTN","IBTRCD1",90,0)
 .I IBACTION'=10 S $P(^IBT(356.2,IBTRC,0),"^",12,13)="^"
"RTN","IBTRCD1",91,0)
 .I IBACTION'=20 S $P(^IBT(356.2,IBTRC,0),"^",15,16)="^"
"RTN","IBTRCD1",92,0)
 .W !,"WARNING: I detected you changed the Action on this review and deleted",!,"data associated with the previous action." H 3
"RTN","IBTRCD1",93,0)
 .Q
"RTN","IBTRCD1",94,0)
 ; -- if not denial and denial reasons delete
"RTN","IBTRCD1",95,0)
 I $O(^IBT(356.2,IBTRC,12,0)),$G(IBACTION)'=20 D
"RTN","IBTRCD1",96,0)
 .S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",12," D ^DIK
"RTN","IBTRCD1",97,0)
 ;
"RTN","IBTRCD1",98,0)
 ; -- if not penalty and penalty reasons delete
"RTN","IBTRCD1",99,0)
 I $O(^IBT(356.2,IBTRC,13,0)),$G(IBACTION)'=30 D
"RTN","IBTRCD1",100,0)
 .S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",13," D ^DIK
"RTN","IBTRCD1",101,0)
 .Q
"RTN","IBTRCD1",102,0)
 ;
"RTN","IBTRCD1",103,0)
NXRV ; -- check Next Review Dates
"RTN","IBTRCD1",104,0)
 N IBI0,IBIX
"RTN","IBTRCD1",105,0)
 I '$D(IBTRN) N IBTRN S IBTRN=$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",2)
"RTN","IBTRCD1",106,0)
 Q:'$G(IBTRN)
"RTN","IBTRCD1",107,0)
 S IBI=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  D
"RTN","IBTRCD1",108,0)
 .I $P($G(^IBT(356.2,IBI,0)),"^",24) D
"RTN","IBTRCD1",109,0)
 ..S IBI0=$G(^(0))
"RTN","IBTRCD1",110,0)
 ..S IBI(IBI)=$$DAT1^IBOUTL($P(IBI0,U,24))_"^"_$P($G(^DIC(36,+$P(IBI0,U,8),0)),U,1)_"^"_$P($G(^IBE(356.11,+$P(IBI0,U,4),0)),U,3)
"RTN","IBTRCD1",111,0)
 ..Q
"RTN","IBTRCD1",112,0)
 .Q
"RTN","IBTRCD1",113,0)
 I $O(IBI(0)) D ASKDEL I IBDEL D
"RTN","IBTRCD1",114,0)
 .I $P(^IBT(356.2,IBTRC,0),U,24)!$O(IBI(+$O(IBI(0)))) D
"RTN","IBTRCD1",115,0)
 ..W !!,?3,"WARNING: This patient has the following multiple Next Review Dates: "
"RTN","IBTRCD1",116,0)
 ..W !!!,?5,"REVIEW",?18,"INSURANCE COMPANY",?45,"TYPE OF CONTACT",?65,"NEXT REV. DATE"
"RTN","IBTRCD1",117,0)
 ..W !,?5,$TR($J(" ",IOM-5)," ","=")
"RTN","IBTRCD1",118,0)
 ..S IBIX=0 F  S IBIX=$O(IBI(IBIX)) Q:'IBIX  D
"RTN","IBTRCD1",119,0)
 ...W !,?5,$$DAT1^IBOUTL(+^IBT(356.2,IBIX,0)),?18,$E($P(IBI(IBIX),U,2),1,23),?45,$P(IBI(IBIX),U,3),?65,$P(IBI(IBIX),U,1)
"RTN","IBTRCD1",120,0)
 ...Q
"RTN","IBTRCD1",121,0)
 ..W !,?5,$TR($J(" ",IOM-5)," ","=") S DIR("A")="Press RETURN to continue" D PAUSE^IBOUTL Q
"RTN","IBTRCD1",122,0)
 Q
"RTN","IBTRCD1",123,0)
 ;
"RTN","IBTRCD1",124,0)
ASKDEL ; -- ask if okay to delete next review dates
"RTN","IBTRCD1",125,0)
 S IBDEL=1
"RTN","IBTRCD1",126,0)
 Q
"RTN","IBTRCD1",127,0)
 ;
"RTN","IBTRCD1",128,0)
10 ;;1.07///@;.2///@;.21///@
"RTN","IBTRCD1",129,0)
20 ;;.14///@;1.08///@;.2///@;21///@;.28///@
"RTN","IBTRCD1",130,0)
30 ;;.14///@;1.07///@;1.08///@;.2///@;21///@;.28///@
"RTN","IBTRCD1",131,0)
40 ;;.14///@;1.07///@;1.08///@;21///@;.28///@
"RTN","IBTRCD1",132,0)
50 ;;.14///@;1.07///@;1.08///@;.2///@;.28///@
"RTN","IBTRCD1",133,0)
99 ;;.14///@;1.07///@;1.08///@;.2///@;21///@;.28///@
"VER")
8.0^22.0
"^DD",355.1,355.1,.01,0)
NAME^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",355.1,355.1,.01,1,0)
^.1^^0
"^DD",355.1,355.1,.01,3)
Enter the name of this type of policy that best describes the policy.  Answer must be 3-40 characters in length.
"^DD",355.1,355.1,.01,21,0)
^.001^10^10^3090504^^^^
"^DD",355.1,355.1,.01,21,1,0)
There are a number of different types of policies, some have very
"^DD",355.1,355.1,.01,21,2,0)
specific types of coverage while others cover a much broader
"^DD",355.1,355.1,.01,21,3,0)
range of care.  This is the name of the type of policy.  Select
"^DD",355.1,355.1,.01,21,4,0)
the name that best describes the type of policy.  This is a list of 
"^DD",355.1,355.1,.01,21,5,0)
standard types of policies.
"^DD",355.1,355.1,.01,21,6,0)
 
"^DD",355.1,355.1,.01,21,7,0)
The type of policy may be dependent on the type of coverage provided
"^DD",355.1,355.1,.01,21,8,0)
by the insurance company and may affect the type of benefits that are
"^DD",355.1,355.1,.01,21,9,0)
available for the policy.  This will be used in determining if the
"^DD",355.1,355.1,.01,21,10,0)
reimbursement from the insurance company is appropriate for this policy.
"^DD",355.1,355.1,.01,"DT")
3090615
"BLD",7983,6)
^391
**END**
**END**
