Released IB*2*405 SEQ #371
Extracted from mail message
**KIDS**:IB*2.0*405^

**INSTALL NAME**
IB*2.0*405
"BLD",7708,0)
IB*2.0*405^INTEGRATED BILLING^0^3080902^y
"BLD",7708,1,0)
^^1^1^3080825^
"BLD",7708,1,1,0)
ePHARMACY TRICARE/'N'/CT FIX
"BLD",7708,4,0)
^9.64PA^362.4^1
"BLD",7708,4,362.4,0)
362.4
"BLD",7708,4,362.4,2,0)
^9.641^362.4^1
"BLD",7708,4,362.4,2,362.4,0)
IB BILL/CLAIMS PRESCRIPTION REFILL  (File-top level)
"BLD",7708,4,362.4,2,362.4,1,0)
^9.6411^.1^1
"BLD",7708,4,362.4,2,362.4,1,.1,0)
FILL NUMBER
"BLD",7708,4,362.4,222)
y^n^p^^^^n^^n
"BLD",7708,4,362.4,224)

"BLD",7708,4,"APDD",362.4,362.4)

"BLD",7708,4,"APDD",362.4,362.4,.1)

"BLD",7708,4,"B",362.4,362.4)

"BLD",7708,6.3)
4
"BLD",7708,"INIT")
POST^IB20P405
"BLD",7708,"KRN",0)
^9.67PA^8989.52^19
"BLD",7708,"KRN",.4,0)
.4
"BLD",7708,"KRN",.401,0)
.401
"BLD",7708,"KRN",.402,0)
.402
"BLD",7708,"KRN",.403,0)
.403
"BLD",7708,"KRN",.5,0)
.5
"BLD",7708,"KRN",.84,0)
.84
"BLD",7708,"KRN",3.6,0)
3.6
"BLD",7708,"KRN",3.8,0)
3.8
"BLD",7708,"KRN",9.2,0)
9.2
"BLD",7708,"KRN",9.8,0)
9.8
"BLD",7708,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",7708,"KRN",9.8,"NM",1,0)
IBNCPDPU^^0^B69246173
"BLD",7708,"KRN",9.8,"NM",2,0)
IBCU1^^0^B44176485
"BLD",7708,"KRN",9.8,"NM",3,0)
IBNCPDP1^^0^B67595010
"BLD",7708,"KRN",9.8,"NM",4,0)
IBTRKR3^^0^B50230305
"BLD",7708,"KRN",9.8,"NM",5,0)
IBTRKR31^^0^B9625105
"BLD",7708,"KRN",9.8,"NM",6,0)
IBNCPDP4^^0^B49170045
"BLD",7708,"KRN",9.8,"NM",7,0)
IBNCPDP2^^0^B55687303
"BLD",7708,"KRN",9.8,"NM",8,0)
IBCSC5C^^0^B44697978
"BLD",7708,"KRN",9.8,"NM",9,0)
IBCSC5A^^0^B42695734
"BLD",7708,"KRN",9.8,"NM",10,0)
IBCCC3^^0^B9467829
"BLD",7708,"KRN",9.8,"NM",11,0)
IBCD3^^0^B31420103
"BLD",7708,"KRN",9.8,"NM",12,0)
IB20P405^^0^B9148350
"BLD",7708,"KRN",9.8,"NM","B","IB20P405",12)

"BLD",7708,"KRN",9.8,"NM","B","IBCCC3",10)

"BLD",7708,"KRN",9.8,"NM","B","IBCD3",11)

"BLD",7708,"KRN",9.8,"NM","B","IBCSC5A",9)

"BLD",7708,"KRN",9.8,"NM","B","IBCSC5C",8)

"BLD",7708,"KRN",9.8,"NM","B","IBCU1",2)

"BLD",7708,"KRN",9.8,"NM","B","IBNCPDP1",3)

"BLD",7708,"KRN",9.8,"NM","B","IBNCPDP2",7)

"BLD",7708,"KRN",9.8,"NM","B","IBNCPDP4",6)

"BLD",7708,"KRN",9.8,"NM","B","IBNCPDPU",1)

"BLD",7708,"KRN",9.8,"NM","B","IBTRKR3",4)

"BLD",7708,"KRN",9.8,"NM","B","IBTRKR31",5)

"BLD",7708,"KRN",19,0)
19
"BLD",7708,"KRN",19.1,0)
19.1
"BLD",7708,"KRN",101,0)
101
"BLD",7708,"KRN",409.61,0)
409.61
"BLD",7708,"KRN",771,0)
771
"BLD",7708,"KRN",870,0)
870
"BLD",7708,"KRN",8989.51,0)
8989.51
"BLD",7708,"KRN",8989.52,0)
8989.52
"BLD",7708,"KRN",8994,0)
8994
"BLD",7708,"KRN","B",.4,.4)

"BLD",7708,"KRN","B",.401,.401)

"BLD",7708,"KRN","B",.402,.402)

"BLD",7708,"KRN","B",.403,.403)

"BLD",7708,"KRN","B",.5,.5)

"BLD",7708,"KRN","B",.84,.84)

"BLD",7708,"KRN","B",3.6,3.6)

"BLD",7708,"KRN","B",3.8,3.8)

"BLD",7708,"KRN","B",9.2,9.2)

"BLD",7708,"KRN","B",9.8,9.8)

"BLD",7708,"KRN","B",19,19)

"BLD",7708,"KRN","B",19.1,19.1)

"BLD",7708,"KRN","B",101,101)

"BLD",7708,"KRN","B",409.61,409.61)

"BLD",7708,"KRN","B",771,771)

"BLD",7708,"KRN","B",870,870)

"BLD",7708,"KRN","B",8989.51,8989.51)

"BLD",7708,"KRN","B",8989.52,8989.52)

"BLD",7708,"KRN","B",8994,8994)

"BLD",7708,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7708,"QUES",0)
^9.62^^
"BLD",7708,"REQB",0)
^9.611^2^2
"BLD",7708,"REQB",1,0)
IB*2.0*383^2
"BLD",7708,"REQB",2,0)
IB*2.0*389^2
"BLD",7708,"REQB","B","IB*2.0*383",1)

"BLD",7708,"REQB","B","IB*2.0*389",2)

"FIA",362.4)
IB BILL/CLAIMS PRESCRIPTION REFILL
"FIA",362.4,0)
^IBA(362.4,
"FIA",362.4,0,0)
362.4I
"FIA",362.4,0,1)
y^n^p^^^^n^^n
"FIA",362.4,0,10)

"FIA",362.4,0,11)

"FIA",362.4,0,"RLRO")

"FIA",362.4,0,"VR")
2.0^IB
"FIA",362.4,362.4)
1
"FIA",362.4,362.4,.1)

"INIT")
POST^IB20P405
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
405^3080902
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3080902
"PKG",200,22,1,"PAH",1,1,1,0)
ePHARMACY TRICARE/'N'/CT FIX
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","IB20P405")
0^12^B9148350^n/a
"RTN","IB20P405",1,0)
IB20P405 ;OAK/ELZ - IB*2*405 POST-INIT TO POPULATE 362.4; 9/2/08
"RTN","IB20P405",2,0)
 ;;2.0;INTEGRATED BILLING;**405**;21-MAR-94;Build 4
"RTN","IB20P405",3,0)
 ;;Per VHA Directive 10-93-142 this routine should not be modified.
"RTN","IB20P405",4,0)
 ;
"RTN","IB20P405",5,0)
POST ;
"RTN","IB20P405",6,0)
 D BMES^XPDUTL("Queuing Post-init to populate 362.4...")
"RTN","IB20P405",7,0)
 N ZTDESC,ZTSAVE,ZTIO,ZTDTH,ZTRTN,ZTSK
"RTN","IB20P405",8,0)
 S ZTDTH=$$NOW^XLFDT,ZTIO="",ZTDESC="IB*2*405 POST INSTALL"
"RTN","IB20P405",9,0)
 S ZTRTN="DQ^IB20P405"
"RTN","IB20P405",10,0)
 D ^%ZTLOAD
"RTN","IB20P405",11,0)
 D BMES^XPDUTL("Post install queued task #"_ZTSK)
"RTN","IB20P405",12,0)
 Q
"RTN","IB20P405",13,0)
 ;
"RTN","IB20P405",14,0)
DQ ; queued entry point
"RTN","IB20P405",15,0)
 N IBX,IBDATA,IBCT,IBRX,IBDT,DFN,IBLIST,IBY,IBMSG,XMDUZ,XMTEXT,XMSUB,XMY,XMZ,IBRXN
"RTN","IB20P405",16,0)
 ;
"RTN","IB20P405",17,0)
 S (IBCT,IBX)=0,IBLIST="IB20P405"
"RTN","IB20P405",18,0)
 ;
"RTN","IB20P405",19,0)
 ; loop through all 362.4 entries and try to populate the new .1 field
"RTN","IB20P405",20,0)
 ; if it is not already populated.
"RTN","IB20P405",21,0)
 F  S IBX=$O(^IBA(362.4,IBX)) Q:'IBX  D
"RTN","IB20P405",22,0)
 . S IBDATA=$G(^IBA(362.4,IBX,0))
"RTN","IB20P405",23,0)
 . I '$L(IBDATA)!($L($P(IBDATA,"^",10))) Q
"RTN","IB20P405",24,0)
 . S DFN=$P($G(^DGCR(399,+$P(IBDATA,"^",2),0)),"^",2) Q:'DFN
"RTN","IB20P405",25,0)
 . S IBDT=$P(IBDATA,"^",3) Q:'IBDT
"RTN","IB20P405",26,0)
 . S IBRXN=$P(IBDATA,"^")
"RTN","IB20P405",27,0)
 . S IBRX=$P(IBDATA,"^",5)
"RTN","IB20P405",28,0)
 . I '$L(IBRXN),'IBRX Q
"RTN","IB20P405",29,0)
 . K ^TMP($J,IBLIST)
"RTN","IB20P405",30,0)
 . D
"RTN","IB20P405",31,0)
 .. I IBRX D RX^PSO52API(DFN,IBLIST,IBRX,,"0,2,R") Q
"RTN","IB20P405",32,0)
 .. D RX^PSO52API(DFN,IBLIST,,IBRXN,"0,2,R")
"RTN","IB20P405",33,0)
 .. S IBRX=$O(^TMP($J,IBLIST,DFN,0))
"RTN","IB20P405",34,0)
 . Q:'IBRX
"RTN","IB20P405",35,0)
 . ; matches original fill (old way)
"RTN","IB20P405",36,0)
 . I IBDT=+$G(^TMP($J,IBLIST,DFN,IBRX,22)) D SET(IBX,0,.IBCT) Q
"RTN","IB20P405",37,0)
 . ; look for match on refill (old way)
"RTN","IB20P405",38,0)
 . S IBRF=0
"RTN","IB20P405",39,0)
 . S IBY=0 F  S IBY=$O(^TMP($J,IBLIST,DFN,IBRX,"RF",IBY)) Q:'IBY  I IBDT=+$G(^TMP($J,IBLIST,DFN,IBRX,"RF",IBY,.01)) S IBRF=IBY Q
"RTN","IB20P405",40,0)
 . I IBRF D SET(IBX,IBRF,.IBCT) Q
"RTN","IB20P405",41,0)
 . ; look for original fill for Released Date, Dispense Date, Issue Date
"RTN","IB20P405",42,0)
 . I IBDT=+$P($G(^TMP($J,IBLIST,DFN,IBRX,1)),".") D SET(IBX,0,.IBCT) Q
"RTN","IB20P405",43,0)
 . I IBDT=+$P($G(^TMP($J,IBLIST,DFN,IBRX,25)),".") D SET(IBX,0,.IBCT) Q
"RTN","IB20P405",44,0)
 . I IBDT=+$P($G(^TMP($J,IBLIST,DFN,IBRX,31)),".") D SET(IBX,0,.IBCT) Q
"RTN","IB20P405",45,0)
 . ; look for refills based on Release Date or Dispense Date
"RTN","IB20P405",46,0)
 . S IBY=0 F  S IBY=$O(^TMP($J,IBLIST,DFN,IBRX,"RF",IBY)) Q:'IBY  I IBDT=+$P($G(^TMP($J,IBLIST,DFN,IBRX,"RF",IBY,17)),".")!(IBDT=+$P($G(^(10.1)),".")) S IBRF=IBY Q
"RTN","IB20P405",47,0)
 . I IBRF D SET(IBX,IBRF,.IBCT) Q
"RTN","IB20P405",48,0)
 K ^TMP($J,IBLIST)
"RTN","IB20P405",49,0)
 ;
"RTN","IB20P405",50,0)
 S IBMSG(1)=""
"RTN","IB20P405",51,0)
 S IBMSG(2)="The post-install for IB*2*405 finished.  "_IBCT_" records in 362.4 were"
"RTN","IB20P405",52,0)
 S IBMSG(3)="populated with fill/refill data."
"RTN","IB20P405",53,0)
 S XMSUB="IB*1*405 Post-Install Completed"
"RTN","IB20P405",54,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IB20P405",55,0)
 S XMTEXT="IBMSG("
"RTN","IB20P405",56,0)
 S XMY(DUZ)=""
"RTN","IB20P405",57,0)
 D ^XMD
"RTN","IB20P405",58,0)
 Q
"RTN","IB20P405",59,0)
 ;
"RTN","IB20P405",60,0)
SET(DA,IBRF,IBCT) ;
"RTN","IB20P405",61,0)
 S IBCT=IBCT+1
"RTN","IB20P405",62,0)
 S $P(^IBA(362.4,DA,0),"^",10)=IBRF
"RTN","IB20P405",63,0)
 Q
"RTN","IBCCC3")
0^10^B9467829^B9229322
"RTN","IBCCC3",1,0)
IBCCC3 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
"RTN","IBCCC3",2,0)
 ;;2.0;INTEGRATED BILLING;**363,381,389,405**;21-MAR-94;Build 4
"RTN","IBCCC3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCC3",4,0)
 ;
"RTN","IBCCC3",5,0)
 ;copy entries from table files:
"RTN","IBCCC3",6,0)
 ;passed in: IBIFN=new bill, IBIFN1=old bill
"RTN","IBCCC3",7,0)
 ;
"RTN","IBCCC3",8,0)
 I '$D(^DGCR(399,+$G(IBIFN),0))!'$D(^DGCR(399,+$G(IBIFN1),0)) Q
"RTN","IBCCC3",9,0)
 N IBXR,X,Y,IBX
"RTN","IBCCC3",10,0)
 ;
"RTN","IBCCC3",11,0)
DX ;copy diagnosis' (362.3)
"RTN","IBCCC3",12,0)
 N IBDX,IBDIFN
"RTN","IBCCC3",13,0)
 ;copy diagnosis from old bill
"RTN","IBCCC3",14,0)
 I $D(^IBA(362.3,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
"RTN","IBCCC3",15,0)
 . S IBDX=0 F  S IBDX=$O(^IBA(362.3,IBXR,IBDX)) Q:'IBDX  D
"RTN","IBCCC3",16,0)
 .. S IBDIFN=0 F  S IBDIFN=$O(^IBA(362.3,IBXR,IBDX,IBDIFN)) Q:'IBDIFN  D
"RTN","IBCCC3",17,0)
 ... S IBX=$G(^IBA(362.3,IBDIFN,0)) I 'IBX!($P(IBX,U,2)'=IBIFN1) Q
"RTN","IBCCC3",18,0)
 ... S DIC="^IBA(362.3,",DIC(0)="L",X=+IBX K DA,DO D FILE^DICN
"RTN","IBCCC3",19,0)
 ... S DIE=DIC,DA=+Y,DR=".02////"_IBIFN_";.03////"_$P(IBX,U,3) D ^DIE K DIC,DIE,DA,DO,DR
"RTN","IBCCC3",20,0)
 K DIE,DIC,DA,DO,DR,X,Y
"RTN","IBCCC3",21,0)
 ;
"RTN","IBCCC3",22,0)
PRDX ;repoint procedure's associated diagnosis (2,304,10-13 -> 362.3)
"RTN","IBCCC3",23,0)
 N IBCPT,IBDIFN1,IBLN,IBI
"RTN","IBCCC3",24,0)
 S IBCPT=0 F  S IBCPT=$O(^DGCR(399,+IBIFN,"CP",IBCPT)) Q:'IBCPT  D
"RTN","IBCCC3",25,0)
 . S IBLN=$G(^DGCR(399,+IBIFN,"CP",IBCPT,0)) F IBI=11:1:14 S IBDIFN1=$P(IBLN,U,IBI) I +IBDIFN1 D
"RTN","IBCCC3",26,0)
 .. S IBDX=+$G(^IBA(362.3,+IBDIFN1,0)) Q:'IBDX
"RTN","IBCCC3",27,0)
 .. S IBDIFN=$O(^IBA(362.3,"AIFN"_IBIFN,IBDX,0)) Q:'IBDIFN
"RTN","IBCCC3",28,0)
 .. S $P(^DGCR(399,+IBIFN,"CP",IBCPT,0),U,IBI)=IBDIFN
"RTN","IBCCC3",29,0)
 ;
"RTN","IBCCC3",30,0)
RX ;copy rx refills (362.4)
"RTN","IBCCC3",31,0)
 N IBRX,IBRIFN,IBRXDA,IBDATE,IBNDC,IBDFN,IB3624DA
"RTN","IBCCC3",32,0)
 ;copy rx refills from old bill
"RTN","IBCCC3",33,0)
 ; IB*2*363 - get NDC# from PRESCRIPTION file (#52) before creating new
"RTN","IBCCC3",34,0)
 ; record entry in 362.4
"RTN","IBCCC3",35,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
"RTN","IBCCC3",36,0)
 . S IBRX=0 F  S IBRX=$O(^IBA(362.4,IBXR,IBRX)) Q:IBRX=""  D
"RTN","IBCCC3",37,0)
 .. S IBRIFN=0 F  S IBRIFN=$O(^IBA(362.4,IBXR,IBRX,IBRIFN)) Q:'IBRIFN  D
"RTN","IBCCC3",38,0)
 ... S IBX=$G(^IBA(362.4,IBRIFN,0)) I IBX=""!($P(IBX,U,2)'=IBIFN1) Q
"RTN","IBCCC3",39,0)
 ... S DIC="^IBA(362.4,",DIC(0)="L",X=$P(IBX,U,1) K DA,DO D FILE^DICN K DA,DO Q:Y'>0
"RTN","IBCCC3",40,0)
 ... S IB3624DA=+Y,IBRXDA=$P(IBX,U,5),IBDATE=$P(IBX,U,3),IBDFN=$$GET1^DIQ(399,IBIFN1,.02,"I")
"RTN","IBCCC3",41,0)
 ... S IBNDC=$S(IBRXDA:$$GETNDC^IBEFUNC3(IBDFN,IBRXDA,IBDATE),1:$P(IBX,U,8))
"RTN","IBCCC3",42,0)
 ... S DR=".02////"_IBIFN_";.03////"_IBDATE_";.04////"_$P(IBX,U,4)_";.05////"_IBRXDA_";.06////"_$P(IBX,U,6)_";.07////"_$P(IBX,U,7)_";.08////"_IBNDC
"RTN","IBCCC3",43,0)
 ... S:$L($P(IBX,U,10)) DR=DR_";.1////"_$P(IBX,U,10)
"RTN","IBCCC3",44,0)
 ... S DIE=DIC,DA=IB3624DA D ^DIE K DIC,DIE,DA,DO,DR
"RTN","IBCCC3",45,0)
 K DIE,DIC,DA,DO,DR,X,Y
"RTN","IBCCC3",46,0)
 ;
"RTN","IBCCC3",47,0)
PROS ;copy prosthetics (362.5)
"RTN","IBCCC3",48,0)
 N IBPR,IBPIFN
"RTN","IBCCC3",49,0)
 ;copy rx refills from old bill
"RTN","IBCCC3",50,0)
 I $D(^IBA(362.5,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
"RTN","IBCCC3",51,0)
 . S IBPR=0 F  S IBPR=$O(^IBA(362.5,IBXR,IBPR)) Q:IBPR=""  D
"RTN","IBCCC3",52,0)
 .. S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.5,IBXR,IBPR,IBPIFN)) Q:'IBPIFN  D
"RTN","IBCCC3",53,0)
 ... S IBX=$G(^IBA(362.5,IBPIFN,0)) I IBX=""!($P(IBX,U,2)'=IBIFN1) Q
"RTN","IBCCC3",54,0)
 ... S DIC="^IBA(362.5,",DIC(0)="L",X=$P(IBX,U,1) K DA,DO D FILE^DICN K DA,DO Q:Y'>0
"RTN","IBCCC3",55,0)
 ... S DR=".02////"_IBIFN_";.04////"_$P(IBX,U,4)_";.05////^S X=$P(IBX,U,5)"
"RTN","IBCCC3",56,0)
 ... S DIE=DIC,DA=+Y D ^DIE K DIC,DIE,DA,DO,DR
"RTN","IBCCC3",57,0)
 K DIE,DIC,DA,DO,DR,X,Y
"RTN","IBCCC3",58,0)
 Q
"RTN","IBCCC3",59,0)
 ;IBCCC3
"RTN","IBCD3")
0^11^B31420103^B31379755
"RTN","IBCD3",1,0)
IBCD3 ;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - CREATE BILL ENTRY) ;9/5/93
"RTN","IBCD3",2,0)
 ;;2.0;INTEGRATED BILLING;**14,55,52,91,106,125,51,148,160,137,210,245,260,405**;21-MAR-94;Build 4
"RTN","IBCD3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCD3",4,0)
 ;
"RTN","IBCD3",5,0)
 ;Called by IBCD2,IBACUS2
"RTN","IBCD3",6,0)
 ;
"RTN","IBCD3",7,0)
EN(IBQUERY) ;
"RTN","IBCD3",8,0)
 N IBI,IBX,IBY,I,X,X1,X2,IBAC,IBCPY K IBDR,IBDR222 S IBAC=1
"RTN","IBCD3",9,0)
 S X=$P($T(WHERE),";;",2),X2=$P($T(WHERE+1),";;",2) F I=0:0 S I=$O(IB(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1) S:X1="" X1=$P($E(X2,$F(X2,I)+1,999),";",1) I $D(IB(I))=1 S $P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IB(I)
"RTN","IBCD3",10,0)
 F I=0,"C","M","M1","S","U","U1","U2" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCD3",11,0)
 S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1
"RTN","IBCD3",12,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK ; set cross-references
"RTN","IBCD3",13,0)
 ;
"RTN","IBCD3",14,0)
 ; Set the attending/rendering provider into provider multiple
"RTN","IBCD3",15,0)
 I $G(IB("PRV",.01))'="" D
"RTN","IBCD3",16,0)
 . S DIC("DR")="",I=.01
"RTN","IBCD3",17,0)
 . N IBV
"RTN","IBCD3",18,0)
 . F  S I=$O(IB("PRV",I)) Q:'I  I IB("PRV",I)'="" S IBV(I)=IB("PRV",I),DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////^S X=IBV("_I_")"
"RTN","IBCD3",19,0)
 . S DIC="^DGCR(399,"_IBIFN_",""PRV"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,X=IB("PRV",.01)
"RTN","IBCD3",20,0)
 . K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",21,0)
 ;
"RTN","IBCD3",22,0)
 ; Set the occurrence span codes for leave/pass days
"RTN","IBCD3",23,0)
 I $O(IB("OC",0)) D
"RTN","IBCD3",24,0)
 . N I,I1
"RTN","IBCD3",25,0)
 . S I1=0 F  S I1=$O(IB("OC",I1)) Q:'I1  D
"RTN","IBCD3",26,0)
 .. S I=0,DIC("DR")=""
"RTN","IBCD3",27,0)
 .. F  S I=$O(IB("OC",I1,I)) Q:'I  S DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////"_IB("OC",I1,I)
"RTN","IBCD3",28,0)
 .. S DIC="^DGCR(399,"_IBIFN_",""OC"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC("P")=$$GETSPEC^IBEFUNC(399,41),X=IB("OC")
"RTN","IBCD3",29,0)
 .. K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",30,0)
 ;
"RTN","IBCD3",31,0)
 ; file rx refills, default CPT and Dx if defined
"RTN","IBCD3",32,0)
 I $D(IB(362.4))>2 D  G END
"RTN","IBCD3",33,0)
 . N IBZ
"RTN","IBCD3",34,0)
 . S IBRX=0 F  S IBRX=$O(IB(362.4,IBRX)) Q:'IBRX  S IBY="" F  S IBY=$O(IB(362.4,IBRX,IBY)) Q:IBY=""  D
"RTN","IBCD3",35,0)
 .. S IBX=IB(362.4,IBRX,IBY) Q:IBX=""
"RTN","IBCD3",36,0)
 .. S IBZ=$$ADD^IBCSC5A($P(IBX,U),IBIFN,$P(IBX,U,4),$P(IBX,U,2),+IBRX,$P(IBX,U,3)_U_$P(IBX,U,5)_U_$P(IBX,U,6),IBY)
"RTN","IBCD3",37,0)
 ;
"RTN","IBCD3",38,0)
 ;file outpatient visit dates and find/store outpatient procedures and dx
"RTN","IBCD3",39,0)
 ;NOTE: If IBQUERY is defined at this point, it will be used to perform
"RTN","IBCD3",40,0)
 ;       the scan for outpatient procedures
"RTN","IBCD3",41,0)
 I '$$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",42,0)
 . I $D(IB(43))>2 D
"RTN","IBCD3",43,0)
 .. S ^DGCR(399,IBIFN,"OP",0)="^399.043DA^" S IBX=0 F  S IBX=$O(IB(43,IBX)) Q:'IBX  D
"RTN","IBCD3",44,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""OP"",",DIC(0)="L",DA(1)=IBIFN,(DINUM,X)=IBX,DLAYGO=399.043 K DD,DO D FILE^DICN K DIC,DA,DINUM,DO,DD,DLAYGO
"RTN","IBCD3",45,0)
 . ;
"RTN","IBCD3",46,0)
 . D VST^IBCCPT(.IBQUERY) I $D(^UTILITY($J,"CPT-CNT")) D
"RTN","IBCD3",47,0)
 .. N IBPRX
"RTN","IBCD3",48,0)
 .. S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCD3",49,0)
 .. S IBY=0 F  S IBY=$O(^UTILITY($J,"CPT-CNT",IBY)) Q:'IBY  S IBX=^(IBY) I '$P(IBX,U,6) D
"RTN","IBCD3",50,0)
 ... S IBPRX(+$P(IBX,U,8))=""
"RTN","IBCD3",51,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBX_";ICPT(",DLAYGO=399 K DD,DO D FILE^DICN K DO,DD,DLAYGO Q:Y'>0
"RTN","IBCD3",52,0)
 ... ;
"RTN","IBCD3",53,0)
 ... S IBCPY=+Y
"RTN","IBCD3",54,0)
 ... ;
"RTN","IBCD3",55,0)
 ... ; add dx to 362.3 for associations if they exist
"RTN","IBCD3",56,0)
 ... I $G(^UTILITY($J,"CPT-CNT",IBY,"DX")) D ADDDX^IBCCPT1(IBIFN,IBCPY,^("DX"),.IBDR) I $L($G(IBDR)) S IBDR=IBDR_";"
"RTN","IBCD3",57,0)
 ... ;
"RTN","IBCD3",58,0)
 ... ;
"RTN","IBCD3",59,0)
 ... S DR=$G(IBDR)_"1////"_$P(IBX,U,2)_$S(+$P(IBX,U,8):";18////"_+$P(IBX,U,8),1:"") K IBDR
"RTN","IBCD3",60,0)
 ... S DR=DR_$S(+$P(IBX,U,9):";6////"_+$P(IBX,U,9),1:"")_$S(+$P(IBX,U,5):";5////"_+$P(IBX,U,5),1:"")
"RTN","IBCD3",61,0)
 ... S DR=DR_$S(+$P(IBX,U,11):";20////"_+$P(IBX,U,11),1:"")
"RTN","IBCD3",62,0)
 ... S DIE=DIC,DA=+IBCPY D ^DIE K DIE,DIC,DA,DINUM,DO,DD
"RTN","IBCD3",63,0)
 ... I $P(IBX,U,10) D ADDMOD^IBCCPT(IBIFN,IBCPY,$P(IBX,U,10)) ;Modifiers
"RTN","IBCD3",64,0)
 .. I $O(IBPRX(""))=$O(IBPRX(""),-1),$O(IBPRX(0)) D
"RTN","IBCD3",65,0)
 ... ;If only 1 provider - make it the rendering
"RTN","IBCD3",66,0)
 ... S IB("PRV",.02)=+$O(IBPRX(0))_";VA(200,",IB("PRV",.01)=3
"RTN","IBCD3",67,0)
 . K DGCNT,V,IBOPV1,IBOPV2,I,DGDIV,I1,DGNOD,DGCPTS,I7,I2,DGCPT,^UTILITY($J,"CPT-CNT")
"RTN","IBCD3",68,0)
 . ;
"RTN","IBCD3",69,0)
 . D OPTDX^IBCSC4D(DFN,IB(151),IB(152),.IBDX) I +IBDX D  K IBDX
"RTN","IBCD3",70,0)
 .. S IBY=0 F  S IBY=$O(IBDX(IBY)) Q:IBY=""  S IBX=IBDX(IBY) I '$P(IBX,U,5) D
"RTN","IBCD3",71,0)
 ... I '$D(^DGCR(399,"AOPV",DFN,(+$P(IBX,U,4)\1),IBIFN)) Q
"RTN","IBCD3",72,0)
 ... S DIC("DR")=".02////"_IBIFN,DIC="^IBA(362.3,",DIC(0)="L",X=+IBX,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",73,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",74,0)
 ;
"RTN","IBCD3",75,0)
 ;store inpatient diagnosis and procedures, default admit dx to first dx found
"RTN","IBCD3",76,0)
 I $$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",77,0)
 . I $G(^TMP("IBDX",$J))=IB(.08) D  K ^TMP("IBDX",$J)
"RTN","IBCD3",78,0)
 .. N IBXDEF S IBXDEF=0
"RTN","IBCD3",79,0)
 .. S (IBI,IBX)="" F  S IBX=$O(^TMP("IBDX",$J,IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(^TMP("IBDX",$J,IBX,IBY)) Q:'IBY  D
"RTN","IBCD3",80,0)
 ... S IBZ=^TMP("IBDX",$J,IBX,IBY) Q:($$ICD9^IBACSV(+IBZ)="")  S IBI=IBI+1
"RTN","IBCD3",81,0)
 ... S DIC("DR")=".02////"_IBIFN_";.03////"_IBI,DIC="^IBA(362.3,",DIC(0)="L",X=+IBZ,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",82,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",83,0)
 ... I Y>0,'IBXDEF S IBXDEF=1,DR="215////"_+IBZ,DIE="^DGCR(399,",DA=IBIFN D ^DIE
"RTN","IBCD3",84,0)
 . ;
"RTN","IBCD3",85,0)
 . D IPRC^IBCD4(+IB(.08),IB(151),IB(152)) I $D(^TMP("IBIPRC",$J)) D  K ^TMP("IBIPRC",$J)
"RTN","IBCD3",86,0)
 .. S ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI^"
"RTN","IBCD3",87,0)
 .. S IBX=0 F  S IBX=$O(^TMP("IBIPRC",$J,IBX)) Q:'IBX  D
"RTN","IBCD3",88,0)
 ... S IBY=^TMP("IBIPRC",$J,IBX) F IBI=1:1 S IBZ=$P(IBY,U,IBI) Q:'IBZ  D
"RTN","IBCD3",89,0)
 .... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBZ_";ICD0(",DLAYGO=399.0304 K DD,DO D FILE^DICN
"RTN","IBCD3",90,0)
 .... I Y>0 S DIE=DIC,DA=+Y,DR="1////"_(IBX\1) D ^DIE K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",91,0)
 ;
"RTN","IBCD3",92,0)
END S IBX="1^Billing Record #"_$P(^DGCR(399,+IBIFN,0),"^",1)_" established for "_$P($G(^DPT(IBDFN,0)),U,1)
"RTN","IBCD3",93,0)
 ;
"RTN","IBCD3",94,0)
 S IBAUTO=1,DGPTUPDT="" I '$G(IBCHTRN) D PROC^IBCU7A(IBIFN) D ^IBCU6 ; auto calculate/store revenue codes
"RTN","IBCD3",95,0)
 ;
"RTN","IBCD3",96,0)
Q K %,%DT,IBDR,X1,X2,X3,X4,Y,DGDIRA,DGDIRB,DGDIR0,DIR,DGRVRCAL,DIC,DA,DR,DINUM,DGPTUPDT,DGXRF1,IBCHK,IBINDT,IBIDS,DLAYGO
"RTN","IBCD3",97,0)
 Q
"RTN","IBCD3",98,0)
 ;
"RTN","IBCD3",99,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.17^0^17;.16^0^16;.18^0^18;.19^0^19;.2^0^20;.22^0^22;.27^0^27;112^M^12;151^U^1;152^U^2;155^U^5;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;
"RTN","IBCD3",100,0)
 ;;217^U2^3;221^U2^7;
"RTN","IBCSC5A")
0^9^B42695734^B42023841
"RTN","IBCSC5A",1,0)
IBCSC5A ;ALB/ARH - ADD/ENTER PRESCRIPTION FILLS ; 12/27/93
"RTN","IBCSC5A",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,51,160,137,245,309,347,405**;21-MAR-94;Build 4
"RTN","IBCSC5A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5A",4,0)
 ;
"RTN","IBCSC5A",5,0)
EN ;add/edit prescription fills for a bill, IBIFN required
"RTN","IBCSC5A",6,0)
 S IBX=$$BILL(IBIFN) Q:'IBIFN  S DFN=+IBX,IBDT1=$P(IBX,U,2),IBDT2=$P(IBX,U,3),IBRXALL=$P(IBX,U,4)
"RTN","IBCSC5A",7,0)
 D SET(IBIFN,.IBRXA,"")
"RTN","IBCSC5A",8,0)
 D RXDISP^IBCSC5C(DFN,IBDT1,IBDT2,.IBPR,.IBPRO,.IBRXA,IBRXALL) I +$P($G(IBPRO),U,2) D NEWRX^IBCSC5C(+IBPRO) I +$G(IBLIST) D ADDNEW^IBCSC5C(IBIFN,IBLIST,.IBPR,.IBPRO) S DGRVRCAL=1
"RTN","IBCSC5A",9,0)
 S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
"RTN","IBCSC5A",10,0)
E1 S IBPIFN=0,IBRX=$$ASKRX(.IBRXAP,.IBPRO) G:IBRX="" EXIT S IBDT=$P(IBRX,U,2),IBRX=$P(IBRX,U,1),DGRVRCAL=1
"RTN","IBCSC5A",11,0)
 I 'IBDT S IBDT=$O(IBRXA(IBRX,0)) S:'IBDT IBDT=$O(IBPR(IBRX,0)) S IBDT=$$ASKDT(IBDT1,IBDT2,IBDT) G:'IBDT E1
"RTN","IBCSC5A",12,0)
 I +$$RXDUP^IBCU3(IBRX,IBDT,IBIFN,1),'$D(IBRXA(IBRX,IBDT)) G E1
"RTN","IBCSC5A",13,0)
 I '$D(IBPR(IBRX,IBDT)) W !,"This rx fill does not exist in Pharmacy for this patient!",!
"RTN","IBCSC5A",14,0)
 S IBPIFN=$G(IBRXA(IBRX,IBDT)),IBDRG=$P(IBPIFN,U,2)
"RTN","IBCSC5A",15,0)
 I 'IBPIFN S IBX=$G(IBPR(IBRX,IBDT)),IBPIFN=$$ADD(IBRX,IBIFN,IBDT,$P(IBX,U,3),$P(IBX,U,1),$P(IBX,U,4,6),$P(IBX,U,2)) D  G:'IBPIFN E1
"RTN","IBCSC5A",16,0)
 . I 'IBPIFN W " ??" Q
"RTN","IBCSC5A",17,0)
 . W "  ... ADDED"
"RTN","IBCSC5A",18,0)
 D EDIT(+IBPIFN,$P(IBPIFN,U,7)) S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP) G E1
"RTN","IBCSC5A",19,0)
 ;
"RTN","IBCSC5A",20,0)
EXIT ;
"RTN","IBCSC5A",21,0)
 K IBPIFN,IBRX,IBDRG,IBX,IBDT1,IBDT2,IBRXA,IBPR,IBDT,IBLIST,IBPRO,IBRXAP,IBRXALL
"RTN","IBCSC5A",22,0)
 Q
"RTN","IBCSC5A",23,0)
 ;
"RTN","IBCSC5A",24,0)
ASKRX(IBRXAP,IBPRO) ;
"RTN","IBCSC5A",25,0)
 N X,Y,IBY,IBX W ! S IBX=""
"RTN","IBCSC5A",26,0)
 I +$G(IBIFN) S DIR("?")="The prescription number for the fill.  "_$$HTEXT^IBCSC5C,DIR("??")="^D HELP^IBCSC5A("_IBIFN_")"
"RTN","IBCSC5A",27,0)
 S DIR("A")="Select RX FILL",DIR(0)="FO^1:11^K:X'?.UN X" D ^DIR I $D(DIRUT)!(Y'?.AN) S Y="" K DIR,DIRUT G ARX1E
"RTN","IBCSC5A",28,0)
 S IBX=Y I $D(IBRXAP)<10,$D(IBPRO)<10 G ARX1E
"RTN","IBCSC5A",29,0)
 ;
"RTN","IBCSC5A",30,0)
 S IBY=$G(IBRXAP(IBX)) S:IBY="" IBY=$G(IBPRO(IBX)) I IBY="" G ARX1E
"RTN","IBCSC5A",31,0)
 W ! S DIR(0)="YO",DIR("A")="ADD/EDIT RX FILL "_$P(IBY,U,1)_" FOR "_$$FMTE^XLFDT($P(IBY,U,2))_" CORRECT",DIR("B")="YES"
"RTN","IBCSC5A",32,0)
 D ^DIR K DIR I Y=1,'$D(DIRUT) S IBX=IBY
"RTN","IBCSC5A",33,0)
ARX1E Q IBX
"RTN","IBCSC5A",34,0)
 ;
"RTN","IBCSC5A",35,0)
ASKDT(IBDT1,IBDT2,IBDT) ;
"RTN","IBCSC5A",36,0)
 S DIR("A")="Select RX FILL DATE",DIR(0)="DO^"_IBDT1_":"_IBDT2_":EX",DIR("B")=$$FMTE^XLFDT(IBDT) D ^DIR K DIR,DTOUT,DIRUT
"RTN","IBCSC5A",37,0)
 Q $S(Y?7N:Y,1:0)
"RTN","IBCSC5A",38,0)
 ;
"RTN","IBCSC5A",39,0)
ADD(RX,IFN,IBDT,DRUG,PIFN,OTHER,IBRF) ;
"RTN","IBCSC5A",40,0)
 N IBX,X,Y,DD,DO,DA,DIC,DLAYGO
"RTN","IBCSC5A",41,0)
 S IBX=0 S DRUG=$$DRUG($G(DRUG)) G:'DRUG ADDE
"RTN","IBCSC5A",42,0)
 S DIC="^IBA(362.4,",DIC(0)="AQL",X=RX,DLAYGO=362.4 D FILE^DICN
"RTN","IBCSC5A",43,0)
 I Y>0 D
"RTN","IBCSC5A",44,0)
 . S DIE=DIC,(IBX,DA)=+Y,DR=".02////"_IFN_";.03////"_IBDT_";.04////"_DRUG_";.05////"_+PIFN_";.06////"_$P(OTHER,U,1)_";.07////"_$P(OTHER,U,2)_";.08////"_$P(OTHER,U,3) S:$L($G(IBRF)) DR=DR_";.1////"_IBRF D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5A",45,0)
 . S DGRVRCAL=1
"RTN","IBCSC5A",46,0)
ADDE Q IBX
"RTN","IBCSC5A",47,0)
 ;
"RTN","IBCSC5A",48,0)
EDIT(PIFN,REVIEN) ;
"RTN","IBCSC5A",49,0)
 N IBCHG,DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC5A",50,0)
 S DIDEL=362.4,DIE="^IBA(362.4,"
"RTN","IBCSC5A",51,0)
 S DR=".01;.03;.04;.06;.07;.08;.09;.1"
"RTN","IBCSC5A",52,0)
 S DA=PIFN D ^DIE
"RTN","IBCSC5A",53,0)
 I '$D(^IBA(362.4,PIFN,0)),$G(REVIEN) D  ; Deleted RX - delete related rev code/CPT code
"RTN","IBCSC5A",54,0)
 . I $P($G(^DGCR(399,IBIFN,"RC",REVIEN,0)),U,15) S DA(1)=IBIFN,DA=$P(^(0),U,15),DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCSC5A",55,0)
 . S DA=REVIEN,DA(1)=IBIFN,DIK="^DGCR(399,"_DA(1)_",""RC""," D ^DIK
"RTN","IBCSC5A",56,0)
 . S DGRVRCAL=1
"RTN","IBCSC5A",57,0)
 Q
"RTN","IBCSC5A",58,0)
 ;
"RTN","IBCSC5A",59,0)
SET(IFN,RXARR,RXARRP) ;setup array of all rx fills for bill, array name should be passed by reference
"RTN","IBCSC5A",60,0)
 ;returns: RXARR(RX #, FILL DT)=RX IFN (362.4) ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC # ^ Charge if known ^ ien of associated rev code multiple, if known ^ NDC FORMAT INDICATOR (1-4)
"RTN","IBCSC5A",61,0)
 ;         RXARR=BILL IFN ^ RX count
"RTN","IBCSC5A",62,0)
 N CNT,IBX,IBY,IBZ,PIFN,IBC,IBCNT,IBRC S IBCNT=+$G(RXARRP),IBC="AIFN"_$G(IFN) K RXARR,RXARRP
"RTN","IBCSC5A",63,0)
 ;
"RTN","IBCSC5A",64,0)
 D RCITEM(IFN,"IBRC",3)
"RTN","IBCSC5A",65,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.4,IBC,IBX)) Q:IBX=""  S PIFN=0 F  S PIFN=$O(^IBA(362.4,IBC,IBX,PIFN)) Q:'PIFN  D
"RTN","IBCSC5A",66,0)
 .S IBY=$G(^IBA(362.4,PIFN,0)) Q:IBY=""  S CNT=CNT+1,RXARR($P(IBY,U,1),+$P(IBY,U,3))=PIFN_U_$P(IBY,U,4)_U_$P(IBY,U,6,8),$P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,6)=$$CHG^IBCF4(PIFN,3,.IBRC)
"RTN","IBCSC5A",67,0)
 . I $G(IFN) S $P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,7)=$$FINDREV(IFN,3,PIFN)
"RTN","IBCSC5A",68,0)
 . S $P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,8)=$P(IBY,U,9)
"RTN","IBCSC5A",69,0)
 ;
"RTN","IBCSC5A",70,0)
 S RXARR=$G(IFN)_"^"_CNT
"RTN","IBCSC5A",71,0)
 S IBX=0 F  S IBX=$O(RXARR(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(RXARR(IBX,IBY)) Q:'IBY  S IBCNT=IBCNT+1,RXARRP(IBCNT)=IBX_"^"_IBY_"^"_$P(RXARR(IBX,IBY),U,7)
"RTN","IBCSC5A",72,0)
 Q
"RTN","IBCSC5A",73,0)
 ;
"RTN","IBCSC5A",74,0)
DISP(RXARR,RXARRP) ;screen display of existing fills for a bill: input should be print order array returned by SET^IBCSC5A: RXARR(RX,DT)=RX IFN (362.4) ^ DRUG, passed by reference
"RTN","IBCSC5A",75,0)
 N IBX,IBY,IBZ,IBS,IBP,IBIFN
"RTN","IBCSC5A",76,0)
 W !!,?5,"-----------------  Existing Prescriptions on Bill  -----------------",!
"RTN","IBCSC5A",77,0)
 S IBIFN=+$G(RXARR)
"RTN","IBCSC5A",78,0)
 S IBI=0 F  S IBI=$O(RXARRP(IBI)) Q:IBI=""  S IBX=$P(RXARRP(IBI),U,1),IBY=$P(RXARRP(IBI),U,2) I $D(RXARR(IBX,IBY)) D
"RTN","IBCSC5A",79,0)
 . S IBS=$$RXSTAT^IBCU1(+$P(RXARR(IBX,IBY),U,2),+$P($G(^IBA(362.4,+RXARR(IBX,IBY),0)),U,5),IBY)
"RTN","IBCSC5A",80,0)
 . D ZERO^IBRXUTL(+$P(RXARR(IBX,IBY),U,2))
"RTN","IBCSC5A",81,0)
 . S IBZ=$G(^TMP($J,"IBDRUG",+$P(RXARR(IBX,IBY),U,2),.01)),IBP=$$PRVNM(+RXARR(IBX,IBY))
"RTN","IBCSC5A",82,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCSC5A",83,0)
 . W !,$J(IBI,2),")",?5,IBX,?19,$E(IBZ,1,25),?46,$$DATE^IBCSC5C(IBY),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3)
"RTN","IBCSC5A",84,0)
 . S IBZ=$$RXDUP^IBCU3(IBX,IBY,IBIFN) I +IBZ W ?73,$P($G(^DGCR(399,+IBZ,0)),U,1)
"RTN","IBCSC5A",85,0)
 . S IBZ=$G(^DGCR(399,IBIFN,"RC",+$P(RXARR(IBX,IBY),U,7),0))
"RTN","IBCSC5A",86,0)
 . W !,?5,$E(IBP,1,25),?35,"(Rx Procedure ",$S($P(IBZ,U,15):"#"_$P(IBZ,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(IBZ,U,15)),1:"Missing"),"  Rev Code ",$S(IBZ:"#"_+$P(RXARR(IBX,IBY),U,7)_" "_$P($G(^DGCR(399.2,+IBZ,0)),U),1:"Missing"),")"
"RTN","IBCSC5A",87,0)
 W !
"RTN","IBCSC5A",88,0)
 Q
"RTN","IBCSC5A",89,0)
 ;
"RTN","IBCSC5A",90,0)
HELP(IFN) ;called for help from rx enter to display existing rx, displays rx' from 52 and 399
"RTN","IBCSC5A",91,0)
 I +$G(IFN) N IBX,IBRXA S IBX=$$BILL(IFN) I +IBX D SET(IFN,.IBRXA,""),RXDISP^IBCSC5C($P(IBX,U,1),$P(IBX,U,2),$P(IBX,U,3),.IBPR,.IBPRO,.IBRXA,$P(IBX,U,4)) S IBRXAP=+IBPRO D SET(IFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
"RTN","IBCSC5A",92,0)
 Q
"RTN","IBCSC5A",93,0)
BILL(IBIFN) ; return data on a bill 'patient ifn ^ from dt ^ to dt ^ true if add original rx'
"RTN","IBCSC5A",94,0)
 N IBX,IBY
"RTN","IBCSC5A",95,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),IBY=$P(IBX,U,2)
"RTN","IBCSC5A",96,0)
 I '$$PERDIEM^IBCRU3(+$P(IBX,U,7),+$P(IBX,U,5),+$P(IBX,U,3)) S $P(IBY,U,4)=1
"RTN","IBCSC5A",97,0)
 S IBX=$G(^DGCR(399,+IBIFN,"U")),$P(IBY,U,2)=+IBX,$P(IBY,U,3)=+$P(IBX,U,2)
"RTN","IBCSC5A",98,0)
 Q IBY
"RTN","IBCSC5A",99,0)
DRUG(IBD) ; get drug
"RTN","IBCSC5A",100,0)
 N X,Y S IBD=+$G(IBD) S DIC(0)="VQ",DIC="^PSDRUG(" D DIC^PSSDI(50,"PS",.DIC,IBD,) I +Y<0  S IBD=0,DIC="^PSDRUG(",DIC(0)="AEQ" D DIC^PSSDI(50,"PS",.DIC,,) K DIC I +Y>0 S IBD=+Y
"RTN","IBCSC5A",101,0)
 Q IBD
"RTN","IBCSC5A",102,0)
 ;
"RTN","IBCSC5A",103,0)
RCITEM(IBIFN,ARRAY,TYPE) ; Pull off all item charges from RC multiple 
"RTN","IBCSC5A",104,0)
 ;  for item TYPE on bill IBIFN, return array ARRAY
"RTN","IBCSC5A",105,0)
 ; If type = "ALL", pull off all types
"RTN","IBCSC5A",106,0)
 ;Set up @ARRAY@(type,item reference,ct)=# units^unit charge
"RTN","IBCSC5A",107,0)
 ; If no pointer to an item, this was a manually entered charge and
"RTN","IBCSC5A",108,0)
 ;  will only 'associate' with the items found in the appropriate
"RTN","IBCSC5A",109,0)
 ;  item source file that are not referenced by an item in the revenue
"RTN","IBCSC5A",110,0)
 ;  code multiple in a sequential fashion (first unassociated 'RC' will
"RTN","IBCSC5A",111,0)
 ;  correlate to the first unassociated entry found for the bill in source file)
"RTN","IBCSC5A",112,0)
 N Z,Z0,Z1
"RTN","IBCSC5A",113,0)
 S Z=0
"RTN","IBCSC5A",114,0)
 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $S(TYPE="ALL":1,1:$P(Z0,U,10)=TYPE) I $P(Z0,U,10)'="" S Z1=$S($P(Z0,U,11)="":0,1:$P(Z0,U,11)),@ARRAY@($P(Z0,U,10),Z1,Z)=$P(Z0,U,3)_U_$P(Z0,U,2)
"RTN","IBCSC5A",115,0)
 Q
"RTN","IBCSC5A",116,0)
 ;
"RTN","IBCSC5A",117,0)
FINDREV(IBIFN,TYP,PTR) ; Finds the first revenue code that matches the
"RTN","IBCSC5A",118,0)
 ; same item type and item pointer
"RTN","IBCSC5A",119,0)
 ;
"RTN","IBCSC5A",120,0)
 N REVIEN,Z,Z0
"RTN","IBCSC5A",121,0)
 S Z=0
"RTN","IBCSC5A",122,0)
 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $P(Z0,U,10)=TYP,$P(Z0,U,11)=PTR S REVIEN=Z Q
"RTN","IBCSC5A",123,0)
 Q $G(REVIEN)
"RTN","IBCSC5A",124,0)
 ;
"RTN","IBCSC5A",125,0)
NDCNUM(IBNDC) ; Returns the format of the NDC # IBNDC, if possible
"RTN","IBCSC5A",126,0)
 N Z
"RTN","IBCSC5A",127,0)
 S Z=$TR(IBNDC,"-")
"RTN","IBCSC5A",128,0)
 Q $S(IBNDC?4N1"-"4N1"-"2N:1,IBNDC?5N1"-"3N1"-"2N:2,IBNDC?5N1"-"4N1"-"1N:3,IBNDC?5N1"-"4N1"-"2N!($L(Z)=11):4,IBNDC'="":1,1:"")
"RTN","IBCSC5A",129,0)
 ;
"RTN","IBCSC5A",130,0)
PRVNM(PIFN) ; return provider name for an rx, if one defined or null
"RTN","IBCSC5A",131,0)
 N IBX,IBPRV,IBRXIFN S IBPRV=""
"RTN","IBCSC5A",132,0)
 S IBRXIFN=$P($G(^IBA(362.4,+$G(PIFN),0)),U,5) I +IBRXIFN S IBX=$$FILE^IBRXUTL(IBRXIFN,4) I +IBX S IBPRV=$P($G(^VA(200,+IBX,0)),U,1)
"RTN","IBCSC5A",133,0)
 Q IBPRV
"RTN","IBCSC5C")
0^8^B44697978^B44534568
"RTN","IBCSC5C",1,0)
IBCSC5C ;ALB/ARH - ADD/EDIT PRESCRIPTION FILLS (CONTINUED) ;3/4/94
"RTN","IBCSC5C",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,130,51,160,260,309,315,339,347,363,381,405**;21-MAR-94;Build 4
"RTN","IBCSC5C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5C",4,0)
 ;
"RTN","IBCSC5C",5,0)
 ;
"RTN","IBCSC5C",6,0)
DEFAULT(IFN,IBRX) ; add default DX and CPT to a prescription bill
"RTN","IBCSC5C",7,0)
 ; if one is not in PSO.  If there is, use it instead.
"RTN","IBCSC5C",8,0)
 ; IFN = ien of bill entry
"RTN","IBCSC5C",9,0)
 N IBX,IBPAR1,IBDX,IBCPT,IBDT,IBBIL,IBDXIFN,IBCPTIFN,IBY,IB52,IBC,PDFN,LIST,NODE
"RTN","IBCSC5C",10,0)
 S IBDXIFN=0
"RTN","IBCSC5C",11,0)
 S IBPAR1=$G(^IBE(350.9,1,1)),IBDX=$P(IBPAR1,U,29),IBCPT=$P(IBPAR1,U,30)
"RTN","IBCSC5C",12,0)
 S IBBIL=$G(^DGCR(399,+$G(IFN),0)) Q:IBBIL=""
"RTN","IBCSC5C",13,0)
 S IBX=$S($G(IBRX):$P($G(^DGCR(399,IFN,"RC",+IBRX,0)),U,11),1:$O(^IBA(362.4,"C",IFN,0))) Q:'IBX
"RTN","IBCSC5C",14,0)
 S IB52=+$P($G(^IBA(362.4,IBX,0)),"^",5),IBY=0 Q:IB52=0
"RTN","IBCSC5C",15,0)
 S PDFN=$$FILE^IBRXUTL(IB52,2)
"RTN","IBCSC5C",16,0)
 S LIST="IBCSC5CARR"
"RTN","IBCSC5C",17,0)
 S NODE="ICD"
"RTN","IBCSC5C",18,0)
 D RX^PSO52API(PDFN,LIST,IB52,,NODE,,)
"RTN","IBCSC5C",19,0)
 I ^TMP($J,LIST,PDFN,IB52,"ICD",0)>0 D
"RTN","IBCSC5C",20,0)
 .S IBY=0 F  S IBY=$O(^TMP($J,LIST,PDFN,IB52,"ICD",IBY)) Q:IBY'>0  D
"RTN","IBCSC5C",21,0)
 ..S IBDX(IBY)=$$ICD^IBRXUTL1(PDFN,IB52,IBY,LIST)
"RTN","IBCSC5C",22,0)
 ..I 'IBDX(IBY) K IBDX(IBY)
"RTN","IBCSC5C",23,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",24,0)
 I 'IBDX,'IBCPT,$D(IBDX)<10 Q
"RTN","IBCSC5C",25,0)
 S IBDT=$P($G(^IBA(362.4,+IBX,0)),U,3) Q:'IBDT
"RTN","IBCSC5C",26,0)
 ; add dx associated with rx if they are there.
"RTN","IBCSC5C",27,0)
 I $D(IBDX)>9 S (IBC,IBDX,IBY)=0 F  S IBY=$O(IBDX(IBY)) Q:'IBY  D
"RTN","IBCSC5C",28,0)
 . I $D(^IBA(362.3,"AIFN"_IFN,+IBDX(IBY))) Q
"RTN","IBCSC5C",29,0)
 . S IBC=IBC+1
"RTN","IBCSC5C",30,0)
 . S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN_";.03////"_IBC,X=+IBDX(IBY),DLAYGO=362.3
"RTN","IBCSC5C",31,0)
 . K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO
"RTN","IBCSC5C",32,0)
 . S IBDXIFN(IBC)=+Y
"RTN","IBCSC5C",33,0)
 ; add default dx if none found on actual rx.
"RTN","IBCSC5C",34,0)
 I +IBDX,'$D(^IBA(362.3,"AIFN"_IFN,+IBDX)) S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN,X=IBDX,DLAYGO=362.3 K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO S IBDXIFN=+Y
"RTN","IBCSC5C",35,0)
 I +IBCPT D  ;Check if the procedure is already present for the Rx
"RTN","IBCSC5C",36,0)
 . N Z,Z0,DUP
"RTN","IBCSC5C",37,0)
 . S (DUP,Z)=0 F  S Z=$O(^DGCR(399,IFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:DUP
"RTN","IBCSC5C",38,0)
 .. I $P(Z0,U,10)=3,$P(Z0,U,15),$P(Z0,U,11)=IBX S DUP=1
"RTN","IBCSC5C",39,0)
 . Q:DUP
"RTN","IBCSC5C",40,0)
 . I $P($G(^DGCR(399,IFN,0)),U,9)="" S DIE="^DGCR(399,",DA=IFN,DR=".09////5" D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5C",41,0)
 . I '$D(^DGCR(399,IFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCSC5C",42,0)
 . S DLAYGO=399,DIC("DR")="1////"_IBDT D
"RTN","IBCSC5C",43,0)
 . . I +IBDXIFN>0 S DIC("DR")=DIC("DR")_";10////"_IBDXIFN Q
"RTN","IBCSC5C",44,0)
 . . I $D(IBDXIFN)>9 F IBY=1:1:4 I $D(IBDXIFN(IBY)) S DIC("DR")=DIC("DR")_";"_(IBY+9)_"////"_IBDXIFN(IBY)
"RTN","IBCSC5C",45,0)
 . S DIC="^DGCR(399,"_IFN_",""CP"",",DIC(0)="L",DA(1)=IFN,X=IBCPT_";ICPT(" K DD,DO D FILE^DICN K DIC,DA,DD,DO,DR,DLAYGO
"RTN","IBCSC5C",46,0)
 . I +Y D
"RTN","IBCSC5C",47,0)
 .. N Z,IBZ
"RTN","IBCSC5C",48,0)
 .. S IBZ=+Y,Z=$S($G(IBREV):IBREV,1:$$FINDREV^IBCSC5A(IFN,3,+IBX))
"RTN","IBCSC5C",49,0)
 .. I Z S DR=".15////"_IBZ_";.06////"_IBCPT,DA=+Z,DA(1)=IFN,DIE="^DGCR(399,"_DA(1)_",""RC""," D ^DIE
"RTN","IBCSC5C",50,0)
 Q
"RTN","IBCSC5C",51,0)
 ;
"RTN","IBCSC5C",52,0)
RXDISP(DFN,DT1,DT2,ARRAY,POARR,RXARR,IBRXALL,NODISP) ; display all rx fills for a patient and date range
"RTN","IBCSC5C",53,0)
 ;RXARR (as defined by SET^IBCSC5A) passed by ref. only to check if rx-fill is on the bill, not necessary not changed
"RTN","IBCSC5C",54,0)
 ;returns: ARRAY(RX #, FILL DT) = RX IFN (52) ^ FILL IFN ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC, pass by reference if desired
"RTN","IBCSC5C",55,0)
 ;         POARR(CNT)=RX # ^ FILL DT
"RTN","IBCSC5C",56,0)
 N PIFN,RIFN,IBX,IBY,DTE,DTR,RX,IBCNT,IBRX0,IBRX2,IBS,LIST,LIST2 K ARRAY,POARR S POARR=0,NODISP=+$G(NODISP)
"RTN","IBCSC5C",57,0)
 S IBCNT=0,DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
"RTN","IBCSC5C",58,0)
 ;^PS(55,DFN,"P","A",EXPIRATION DATE, RX) is the best xref available for finding patient fills in a date range
"RTN","IBCSC5C",59,0)
 ;if RX expires/cancelled before start of bill then should not be applicable to bill
"RTN","IBCSC5C",60,0)
 S LIST="IBRXDISPARR"
"RTN","IBCSC5C",61,0)
 D PROF^PSO52API(DFN,LIST,DT1)
"RTN","IBCSC5C",62,0)
 S DTE=0 F  S DTE=$O(^TMP($J,LIST,"B",DTE)) Q:'DTE  D
"RTN","IBCSC5C",63,0)
 . S PIFN=0 F  S PIFN=$O(^TMP($J,LIST,"B",DTE,PIFN)) Q:'PIFN  D
"RTN","IBCSC5C",64,0)
 .. S IBRX0=$$RXZERO^IBRXUTL(DFN,PIFN),IBRX2=$$RXSEC^IBRXUTL(DFN,PIFN)
"RTN","IBCSC5C",65,0)
 .. ; original fill
"RTN","IBCSC5C",66,0)
 .. I +$G(IBRXALL) S DTR=$P(IBRX2,U,2) I DTR'<DT1,DTR'>DT2 D
"RTN","IBCSC5C",67,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",68,0)
 ... S ARRAY($P(IBRX0,U,1),+DTR)=PIFN_U_0_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBRX0,U,7)_U_$$GETNDC^PSONDCUT(PIFN,0)
"RTN","IBCSC5C",69,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",70,0)
 ... Q
"RTN","IBCSC5C",71,0)
 .. ; refills
"RTN","IBCSC5C",72,0)
 .. S LIST2="IBDISPSUB"
"RTN","IBCSC5C",73,0)
 .. S NODE="R"
"RTN","IBCSC5C",74,0)
 .. D RX^PSO52API(DFN,LIST2,PIFN,,NODE,,)
"RTN","IBCSC5C",75,0)
 .. S RIFN=0 F  S RIFN=$O(^TMP($J,LIST2,DFN,PIFN,"RF",RIFN)) Q:RIFN'>0  D
"RTN","IBCSC5C",76,0)
 ... S IBY=$$ZEROSUB^IBRXUTL(DFN,PIFN,RIFN) Q:IBY=""
"RTN","IBCSC5C",77,0)
 ... Q:+IBY<DT1!(+IBY>DT2)
"RTN","IBCSC5C",78,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",79,0)
 ... S ARRAY($P(IBRX0,U,1),+IBY)=PIFN_U_RIFN_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBY,U,4)_U_$$GETNDC^PSONDCUT(PIFN,RIFN)
"RTN","IBCSC5C",80,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",81,0)
 ... Q
"RTN","IBCSC5C",82,0)
 .. K ^TMP($J,LIST2)
"RTN","IBCSC5C",83,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",84,0)
 ;
"RTN","IBCSC5C",85,0)
 S IBX="",IBS=0 F  S IBX=$O(ARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(ARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCSC5C",86,0)
 . S IBCNT=IBCNT+1,POARR(IBCNT)=$P(IBX,U,1)_"^"_+IBY,POARR=IBCNT I $D(RXARR(IBX,IBY)) S IBS=IBS+1
"RTN","IBCSC5C",87,0)
 S $P(POARR,U,2)=IBCNT-IBS
"RTN","IBCSC5C",88,0)
 ;
"RTN","IBCSC5C",89,0)
 Q:+NODISP
"RTN","IBCSC5C",90,0)
 W @IOF,?33,"PRESCRIPTIONS IN DATE RANGE",!,"===============================================================================",!
"RTN","IBCSC5C",91,0)
 S IBCNT=0 F  S IBCNT=$O(POARR(IBCNT)) Q:IBCNT=""  S RX=$P(POARR(IBCNT),U,1),DTR=$P(POARR(IBCNT),U,2) I RX'="",DTR'="" D
"RTN","IBCSC5C",92,0)
 . S IBS=$$RXSTAT^IBCU1($P(ARRAY(RX,DTR),U,3),$P(ARRAY(RX,DTR),U,1),DTR)
"RTN","IBCSC5C",93,0)
 . S IBY="" I $D(RXARR(RX,+DTR)) S IBY="*"
"RTN","IBCSC5C",94,0)
 . D ZERO^IBRXUTL(+$P(ARRAY(RX,DTR),U,3))
"RTN","IBCSC5C",95,0)
 . W !,$J(IBCNT,2),")",?5,IBY,?6,RX,?19,$E($G(^TMP($J,"IBDRUG",+$P(ARRAY(RX,DTR),U,3),.01)),1,25),?46,$$DATE(+DTR),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3),?75,$$EXEMPT(+ARRAY(RX,DTR))
"RTN","IBCSC5C",96,0)
 . S IBY=$$RXDUP^IBCU3(RX,DTR,IBIFN) I +IBY W ?73,$P($G(^DGCR(399,+IBY,0)),U,1)
"RTN","IBCSC5C",97,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",98,0)
 Q
"RTN","IBCSC5C",99,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCSC5C",100,0)
 ;
"RTN","IBCSC5C",101,0)
NEWRX(IBX) ;
"RTN","IBCSC5C",102,0)
 Q:'$G(IBX)  N X,Y K IBLIST W !
"RTN","IBCSC5C",103,0)
NEWRX1 S DIR("?")="Enter the number preceding the RX Fills you want added to the bill. "_$$HTEXT
"RTN","IBCSC5C",104,0)
 S DIR("A")="SELECT NEW RX FILLS TO ADD THE BILL"
"RTN","IBCSC5C",105,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWRXE
"RTN","IBCSC5C",106,0)
 S IBLIST=Y
"RTN","IBCSC5C",107,0)
 ;
"RTN","IBCSC5C",108,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC5C",109,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWRXE
"RTN","IBCSC5C",110,0)
 I 'Y K IBLIST G NEWRX1
"RTN","IBCSC5C",111,0)
NEWRXE Q
"RTN","IBCSC5C",112,0)
 ;
"RTN","IBCSC5C",113,0)
ADDNEW(IBIFN,LIST,IBPR,IBPRO) ;
"RTN","IBCSC5C",114,0)
 Q:'LIST  N IBI,IBX,IBRX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC5C",115,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBPRO(IBX)) D
"RTN","IBCSC5C",116,0)
 . S IBRX=$P(IBPRO(IBX),U,1),IBDT=$P(IBPRO(IBX),U,2) Q:IBRX=""
"RTN","IBCSC5C",117,0)
 . S IBQ=0,IBY=$G(IBPR(IBRX,+IBDT)) Q:'IBY
"RTN","IBCSC5C",118,0)
 . S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBPIFN)) Q:'IBPIFN  I $P($G(^IBA(362.4,IBPIFN,0)),U,3)=IBDT S IBQ=1 Q
"RTN","IBCSC5C",119,0)
 . I 'IBQ S IBZ=$G(IBPR(IBRX,IBDT)) I $$ADD^IBCSC5A(IBRX,IBIFN,IBDT,$P(IBZ,U,3),$P(IBZ,U,1),$P(IBZ,U,4,6),$P(IBZ,U,2)) W "."
"RTN","IBCSC5C",120,0)
 Q
"RTN","IBCSC5C",121,0)
 ;
"RTN","IBCSC5C",122,0)
HTEXT() ;
"RTN","IBCSC5C",123,0)
 N X S X="If an Rx fill has been assigned to another bill it will be displayed in the last column. [ORG=Original Fill, NR=Not Released, RTS=Returned to Stock, OTC=Over-the-Counter, INV=Investigational, SUP=Supply Item]"
"RTN","IBCSC5C",124,0)
 Q X
"RTN","IBCSC5C",125,0)
 ;
"RTN","IBCSC5C",126,0)
RXLINK(IBIFN,CPIEN) ; Function returns the ien of the Rx rev code the proc
"RTN","IBCSC5C",127,0)
 ; code is linked to or 0 if no link found.
"RTN","IBCSC5C",128,0)
 Q +$O(^DGCR(399,IBIFN,"RC","ACP",+CPIEN,0))
"RTN","IBCSC5C",129,0)
 ;
"RTN","IBCSC5C",130,0)
EXEMPT(RX) ; Used to look up exemption if any on rx, the return value
"RTN","IBCSC5C",131,0)
 ; will be only the first exemption reason found.
"RTN","IBCSC5C",132,0)
 N IBX,IBZ,IBS,IBR,PDFN,LIST,NODE,ICDCT
"RTN","IBCSC5C",133,0)
 S PDFN=$$FILE^IBRXUTL(RX,2)
"RTN","IBCSC5C",134,0)
 S LIST="IBRXARREX"
"RTN","IBCSC5C",135,0)
 S NODE="ICD"
"RTN","IBCSC5C",136,0)
 D RX^PSO52API(PDFN,LIST,RX,,NODE,,)
"RTN","IBCSC5C",137,0)
 S ICDCT=$G(^TMP($J,LIST,PDFN,RX,"ICD",0))
"RTN","IBCSC5C",138,0)
 S IBR="",(IBS,IBX)=0
"RTN","IBCSC5C",139,0)
 I ICDCT>0 D
"RTN","IBCSC5C",140,0)
 .S IBX=0 F  S IBX=$O(^TMP($J,LIST,PDFN,RX,"ICD",IBX)) Q:IBX'>0!(IBS)  D
"RTN","IBCSC5C",141,0)
 ..S IBZ=$$ICD^IBRXUTL1(PDFN,RX,IBX,LIST) F IBP=2:1:8 Q:IBS  I $P(IBZ,"^",IBP) S IBR=$P($T(EREASON+(IBP-1)),";",3),IBS=1
"RTN","IBCSC5C",142,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",143,0)
 Q IBR
"RTN","IBCSC5C",144,0)
EREASON ;
"RTN","IBCSC5C",145,0)
 ;;AO
"RTN","IBCSC5C",146,0)
 ;;IR
"RTN","IBCSC5C",147,0)
 ;;SC
"RTN","IBCSC5C",148,0)
 ;;SWA
"RTN","IBCSC5C",149,0)
 ;;MST
"RTN","IBCSC5C",150,0)
 ;;HNC
"RTN","IBCSC5C",151,0)
 ;;CV
"RTN","IBCSC5C",152,0)
 ;;SHAD
"RTN","IBCSC5C",153,0)
 ;
"RTN","IBCU1")
0^2^B44176485^B43690980
"RTN","IBCU1",1,0)
IBCU1 ;ALB/MRL - BILLING UTILITY ROUTINE (CONTINUED) ;01 JUN 88 12:00
"RTN","IBCU1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,138,51,182,210,266,309,320,347,405**;21-MAR-94;Build 4
"RTN","IBCU1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU1",4,0)
 ;
"RTN","IBCU1",5,0)
 ;MAP TO DGCRU1
"RTN","IBCU1",6,0)
 ;
"RTN","IBCU1",7,0)
 ;procedure doesn't appear to be used (6/4/93), if it is used, what for??
"RTN","IBCU1",8,0)
 ;where would multiple provider numbers comde from?  ARH
"RTN","IBCU1",9,0)
 ;BCH    ;Blue Cross/Shield Help
"RTN","IBCU1",10,0)
 W ! S IB01=$P($G(^IBE(350.9,1,1)),"^",6)
"RTN","IBCU1",11,0)
 I IB01]"" W "CHOOSE FROM",!!?4,"1 - ",$P(IB01,"^",6) F IB00=2,3 I $P(IB01,"^",$S(IB00=2:14,1:15))]"" W !?4,IB00," - ",$P(IB01,"^",$S(IB00=2:14,1:15))
"RTN","IBCU1",12,0)
 W:IB01']"" "NO BLUE CROSS/SHIELD PROVIDER NUMBERS IDENTIFIED TO SELECT FROM!" W ! W:IB01]"" !,"OR " W "ENTER BLUE CROSS/SHIELD PROVIDER # (BETWEEN 3-13 CHARACTERS)",! K IB00,IB01 Q
"RTN","IBCU1",13,0)
 ;
"RTN","IBCU1",14,0)
RCD ;Revenue Code Display
"RTN","IBCU1",15,0)
 Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCU1",16,0)
 W @IOF,!,"Revenue Code Listing",?34,"Units",?45,"Charge" W:$$FT^IBCEF(IBIFN)=3 ?56,"Non-Cov"
"RTN","IBCU1",17,0)
 S DGIFN=0 F IBI=0:0 S DGIFN=$O(^DGCR(399,IBIFN,"RC",DGIFN)) Q:'DGIFN  I $D(^DGCR(399,IBIFN,"RC",DGIFN,0)) S Z=^(0) D DISRC
"RTN","IBCU1",18,0)
 W !
"RTN","IBCU1",19,0)
 I $D(DIC(0)) S DIC(0)=DIC(0)_"N"
"RTN","IBCU1",20,0)
 Q
"RTN","IBCU1",21,0)
DISRC N Z0 W !?1,DGIFN,?4,$P(^DGCR(399.2,+Z,0),"^"),"-",$E($P(^DGCR(399.2,+Z,0),"^",2),1,19)
"RTN","IBCU1",22,0)
 I +$P(Z,U,6) W ?28,$P($$CPT^ICPTCOD(+$P(Z,U,6)),U,2)
"RTN","IBCU1",23,0)
 W ?36,$P(Z,"^",3),?40 S X=$P(Z,"^",2),X2="2$" D COMMA^%DTC W X
"RTN","IBCU1",24,0)
 I $$FT^IBCEF(IBIFN)=3,$P(Z,U,9)'="" S X=$P(Z,U,9),X2="2$" D COMMA^%DTC W ?51,X
"RTN","IBCU1",25,0)
 I $D(^DGCR(399.1,+$P(Z,"^",5),0)) W ?64,$E($P(^(0),"^"),1,15)
"RTN","IBCU1",26,0)
 I $S($P(Z,U,15):1,1:$P(Z,U,10)=3) D
"RTN","IBCU1",27,0)
 . W !,?5,"(Rx: ",$S($P(Z,U,11):$P($G(^IBA(362.4,$P(Z,U,11),0)),U),1:"Link Missing"),"  Procedure "_$S($P(Z,U,15):"#"_$P(Z,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(Z,U,15)),1:"Link Missing"),")"
"RTN","IBCU1",28,0)
 Q
"RTN","IBCU1",29,0)
 ;
"RTN","IBCU1",30,0)
RVCPRC(IBIFN,IBD0) ; returns 1 if CHAMPVA rate type + 2 if CMS-1500, 0 otherwise
"RTN","IBCU1",31,0)
 ; IBD0 - zero node of bill if available, not required
"RTN","IBCU1",32,0)
 N X S X=0
"RTN","IBCU1",33,0)
 I $G(IBD0)="" S IBD0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU1",34,0)
 I $P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,1)="CHAMPVA" S X=X+1
"RTN","IBCU1",35,0)
 I $P(IBD0,U,19)=2 S X=X+2
"RTN","IBCU1",36,0)
 Q X
"RTN","IBCU1",37,0)
 ;
"RTN","IBCU1",38,0)
ORDNXT(IFN) ;CALLED BY TRIGGER ON (362.3,.02) THAT SETS DX PRINT ORDER (362.3,.03),
"RTN","IBCU1",39,0)
 ;returns the highest print order used on the bill plus 3, returns 3 if no existing print order
"RTN","IBCU1",40,0)
 ;used for the default print order so that dx's can be printed in order of entry without any input by the user,
"RTN","IBCU1",41,0)
 ;3 is added to allow spaces for additions, changes, moves
"RTN","IBCU1",42,0)
 N X,Y S X="" I $D(^DGCR(399,+$G(IFN),0)) S X=3,Y=0 F  S Y=$O(^IBA(362.3,"AO",+IFN,Y)) Q:'Y  S X=Y+3
"RTN","IBCU1",43,0)
 Q X
"RTN","IBCU1",44,0)
 ;
"RTN","IBCU1",45,0)
ORDDUP(ORD,DIFN) ;returns true if print order ORD is already defined for a bill (not same entry)
"RTN","IBCU1",46,0)
 N IBX,IBY S IBY=0
"RTN","IBCU1",47,0)
 I +$G(ORD) S IBX=$G(^IBA(362.3,+$G(DIFN),0)) I +IBX,+$P(IBX,U,3)'=ORD,$D(^IBA(362.3,"AO",+$P(IBX,U,2),+ORD)) S IBY=1
"RTN","IBCU1",48,0)
 Q IBY
"RTN","IBCU1",49,0)
 ;
"RTN","IBCU1",50,0)
DXDUP(DX,DIFN,IFN) ;returns true if DX is already defined for a bill (not same entry)
"RTN","IBCU1",51,0)
 ;either DIFN or IFN can be passed, both are not needed, DIFN is needed during edit so can reenter the same dx
"RTN","IBCU1",52,0)
 N IBX,IBY S IBY=0 I +$G(DX),'$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",53,0)
 I +$G(DX),$D(^IBA(362.3,"AIFN"_+IFN,+DX)),$O(^IBA(362.3,"AIFN"_+IFN,+DX,0))'=+$G(DIFN) S IBY=1
"RTN","IBCU1",54,0)
 Q IBY
"RTN","IBCU1",55,0)
 ;
"RTN","IBCU1",56,0)
DXBSTAT(DIFN,IFN) ;returns a diagnosis' bill status (either DIFN or IFN can be passed, both are not needed)
"RTN","IBCU1",57,0)
 N IBX,IBY I '$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",58,0)
 S IBY=+$P($G(^DGCR(399,+IFN,0)),U,13)
"RTN","IBCU1",59,0)
 Q IBY
"RTN","IBCU1",60,0)
 ;
"RTN","IBCU1",61,0)
RXSTAT(DRUG,PIFN,FILLDT) ; returns status/definition of rx
"RTN","IBCU1",62,0)
 ; returns: ORIGINAL ^ RELEASED/RETURNED TO STOCK ^ DRUG DEA
"RTN","IBCU1",63,0)
 N IBX,IBY,IBZ,IBLN,IBNUM S IBLN="",DRUG=+$G(DRUG),PIFN=+$G(PIFN),FILLDT=+$G(FILLDT)
"RTN","IBCU1",64,0)
 ;
"RTN","IBCU1",65,0)
 S IBX=$$RXSEC^IBRXUTL($$FILE^IBRXUTL(PIFN,2),PIFN),IBZ="" I IBX'="",$P(IBX,U,2)=$G(FILLDT) D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",66,0)
 . S IBLN="ORG"
"RTN","IBCU1",67,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",68,0)
 . I '$P(IBX,U,13) S IBZ="NR"
"RTN","IBCU1",69,0)
 . I +$P(IBX,U,15) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",70,0)
 ;
"RTN","IBCU1",71,0)
 I IBLN="" S IBNUM=$$RFLNUM^IBRXUTL(PIFN,FILLDT,1),IBX=$$ZEROSUB^IBRXUTL($$FILE^IBRXUTL(PIFN,2),PIFN,IBNUM),IBZ="" I IBX'="" D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",72,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",73,0)
 . I '$P(IBX,U,18) S IBZ="NR"
"RTN","IBCU1",74,0)
 . I +$P(IBX,U,16) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",75,0)
 ;
"RTN","IBCU1",76,0)
 D ZERO^IBRXUTL(DRUG)
"RTN","IBCU1",77,0)
 S IBX=$G(^TMP($J,"IBDRUG",0)) I IBX'="" S IBY=$G(^TMP($J,"IBDRUG",DRUG,3)),IBZ="" D  I IBZ'="" S $P(IBLN,U,3)=IBZ
"RTN","IBCU1",78,0)
 . I IBY["9" S IBZ="OTC"
"RTN","IBCU1",79,0)
 . I IBY["I" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"INV"
"RTN","IBCU1",80,0)
 . I IBY["S" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"SUP"
"RTN","IBCU1",81,0)
 . I IBY["N" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"NUT"
"RTN","IBCU1",82,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCU1",83,0)
 Q IBLN
"RTN","IBCU1",84,0)
 ;
"RTN","IBCU1",85,0)
PRVLIC(NPIFN,IBDT,ARR,STIFN) ; returns the Provider License data from the New Person file active on a date
"RTN","IBCU1",86,0)
 ; Input:   NPIFN = pointer to file 200,              IBDT = date to check (if none passed then all returned)
"RTN","IBCU1",87,0)
 ;          ARR = array pass by reference (optional), STIFN = state to return as value of function (optional)
"RTN","IBCU1",88,0)
 ; Output:  ARR(X) = license state (ifn) ^ license ^ expiration date (200,541)
"RTN","IBCU1",89,0)
 ;          return value = license data of state requested or if no state passed in then count found
"RTN","IBCU1",90,0)
 N IBX,IBY,IBLN,IBCNT S IBX=0,IBCNT=0 K ARR
"RTN","IBCU1",91,0)
 I +$G(NPIFN) S IBY=0 F  S IBY=$O(^VA(200,NPIFN,"PS1",IBY)) Q:'IBY  D
"RTN","IBCU1",92,0)
 . S IBLN=$G(^VA(200,NPIFN,"PS1",IBY,0))
"RTN","IBCU1",93,0)
 . I +$G(IBDT),+$P(IBLN,U,3),$P(IBLN,U,3)<IBDT Q
"RTN","IBCU1",94,0)
 . I +$G(STIFN),+STIFN=+IBLN S IBX=IBLN
"RTN","IBCU1",95,0)
 . S IBCNT=IBCNT+1,ARR(IBCNT)=IBLN
"RTN","IBCU1",96,0)
 S ARR=IBCNT I '$G(STIFN) S IBX=IBCNT
"RTN","IBCU1",97,0)
 Q IBX
"RTN","IBCU1",98,0)
 ;
"RTN","IBCU1",99,0)
DELPR(IB,IBX) ; Deletes the corresponding RX proc when the RX pointer is
"RTN","IBCU1",100,0)
 ; deleted
"RTN","IBCU1",101,0)
 ; IB = the ien of the bill in file 399
"RTN","IBCU1",102,0)
 ; IBX = the ien of the entry in the procedure multiple to be deleted
"RTN","IBCU1",103,0)
 ;
"RTN","IBCU1",104,0)
 N DA,DIK,X,Y
"RTN","IBCU1",105,0)
 S DA(1)=IB,DA=IBX
"RTN","IBCU1",106,0)
 I $D(^DGCR(399,DA(1),"CP",DA,0)) S DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCU1",107,0)
 Q
"RTN","IBCU1",108,0)
 ;
"RTN","IBCU1",109,0)
MODHLP(DA) ; Executable modifier help 399.042  .14
"RTN","IBCU1",110,0)
 ; DA = iens of the current entry DA(1) = file 399 ien
"RTN","IBCU1",111,0)
 ;                                DA    = file 399.042 ien
"RTN","IBCU1",112,0)
 N Z,IBZ,DIC,IBDATE
"RTN","IBCU1",113,0)
 S IBDATE=$$BDATE^IBACSV(+$G(DA(1))) ; The date of service
"RTN","IBCU1",114,0)
 I $P($G(^DGCR(399,+$G(DA(1)),"RC",+$G(DA),0)),U,14)'="" S Z=$P(^(0),U,14) D
"RTN","IBCU1",115,0)
 . N Q
"RTN","IBCU1",116,0)
 . S Q=1
"RTN","IBCU1",117,0)
 . S IBZ(1)="Current modifier"_$S($P(Z,";",2)'="":"s are:",1:"is:")
"RTN","IBCU1",118,0)
 . I $P(Z,";")'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";")_"  "_$P($$MOD^ICPTMOD($P(Z,";"),"E",IBDATE),U,3)
"RTN","IBCU1",119,0)
 . I $P(Z,";",2)'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";",2)_"  "_$P($$MOD^ICPTMOD($P(Z,";",2),"E",IBDATE),U,3)
"RTN","IBCU1",120,0)
 . S Q=Q+1,IBZ(Q)=" "
"RTN","IBCU1",121,0)
 . D EN^DDIOL(.IBZ)
"RTN","IBCU1",122,0)
 ;
"RTN","IBCU1",123,0)
 S DIC="^DIC(81.3,",DIC(0)="E"
"RTN","IBCU1",124,0)
 S DIC("S")="I $$MODP^ICPTMOD($P($G(^DGCR(399,DA(1),""RC"",DA,0)),U,6),Y,""I"",IBDATE)>0"
"RTN","IBCU1",125,0)
 S DIC("W")="W ?14,$P($$MOD^ICPTMOD(Y,""I"",IBDATE),U,3)"
"RTN","IBCU1",126,0)
 D ^DIC
"RTN","IBCU1",127,0)
 Q
"RTN","IBCU1",128,0)
 ;
"RTN","IBCU1",129,0)
QMED(IBRTN,IBIFN) ; DSS QuadraMed Interface: DSS/QuadraMed Available
"RTN","IBCU1",130,0)
 ; return 1 if QuadraMed Interface is On and available for the type of bill
"RTN","IBCU1",131,0)
 ; - routine must exist on the system (interface is 'On')
"RTN","IBCU1",132,0)
 ; Input: IBRTN = tag^routine, if it exists then Interface is 'On'
"RTN","IBCU1",133,0)
 ;        IBIFN = Bill IFN, bill to check if appropriate for sending to QuadraMed
"RTN","IBCU1",134,0)
 ;
"RTN","IBCU1",135,0)
 N IBON S IBON=0
"RTN","IBCU1",136,0)
 I +$G(IBIFN),$G(IBRTN)'="",$T(@IBRTN)'="" S IBON=1
"RTN","IBCU1",137,0)
 Q IBON
"RTN","IBCU1",138,0)
 ;
"RTN","IBCU1",139,0)
ATTREND(IBIFN,IBIFN1,FIELD) ; This function is called from Mumps Cross References in the claim file 399 and 
"RTN","IBCU1",140,0)
 ; also the PROVIDER subfile 399.0222.
"RTN","IBCU1",141,0)
 ;
"RTN","IBCU1",142,0)
 ; IBIFN = IEN to claim file
"RTN","IBCU1",143,0)
 ; IBIFN1 = IEN to provider sub-file in claim file
"RTN","IBCU1",144,0)
 ; FIELD = Field in sub-file being modified (the triggering event).  If field has no value, all 6 fields are
"RTN","IBCU1",145,0)
 ; possibly updated
"RTN","IBCU1",146,0)
 ;  
"RTN","IBCU1",147,0)
 ; The following fields are the "triggering" events
"RTN","IBCU1",148,0)
 ; File 399
"RTN","IBCU1",149,0)
 ; #19 FORM TYPE - This triggers all 6 fields (122, 123, 124, 128, 129, 130).
"RTN","IBCU1",150,0)
 ; 
"RTN","IBCU1",151,0)
 ; Sub-File 399.0222
"RTN","IBCU1",152,0)
 ; #.05 PRIMARY INS CO ID NUMBER triggers 122
"RTN","IBCU1",153,0)
 ; #.06 SECONDARY INS CO ID NUMBER triggers 123
"RTN","IBCU1",154,0)
 ; #.07 TERTIARY INS CO ID NUMBER triggers 124
"RTN","IBCU1",155,0)
 ; #.12 PRIM INS PROVIDER ID TYPE triggers 128
"RTN","IBCU1",156,0)
 ; #.13 SEC INS PROVIDER ID TYPE triggers 129
"RTN","IBCU1",157,0)
 ; #.14 TERT INS PROVIDER ID TYPE triggers 130
"RTN","IBCU1",158,0)
 ; 
"RTN","IBCU1",159,0)
 ; The following fields are the ones being "triggered"
"RTN","IBCU1",160,0)
 ; #122 PRIMARY PROVIDER #
"RTN","IBCU1",161,0)
 ; #123 SECONDARY PROVIDER #
"RTN","IBCU1",162,0)
 ; #124 TERTIARY PROVIDER #
"RTN","IBCU1",163,0)
 ; #128 PRIMARY ID QUALIFER
"RTN","IBCU1",164,0)
 ; #129 SECONDARY ID QUALIFIER
"RTN","IBCU1",165,0)
 ; #130 TERTIARY ID QUALIFIER
"RTN","IBCU1",166,0)
 ;
"RTN","IBCU1",167,0)
 Q:$G(IBPRCOB)  ; this is set when creating an MRA scondary claim.  Don't want to be changing the data on
"RTN","IBCU1",168,0)
 ; a secondary claim
"RTN","IBCU1",169,0)
 ;
"RTN","IBCU1",170,0)
 N FT,DATA,I,PC,INS,IFUNC,ATTRENDD,IBDR
"RTN","IBCU1",171,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCU1",172,0)
 Q:'FT
"RTN","IBCU1",173,0)
 ;
"RTN","IBCU1",174,0)
 S IFUNC=$O(^DGCR(399,IBIFN,"PRV","B",$S(FT=3:4,1:3),""))
"RTN","IBCU1",175,0)
 I $G(IBIFN1),$G(IFUNC)'=IBIFN1 Q   ; if called from subfile, quits if att/rend provider was not the one being modified
"RTN","IBCU1",176,0)
 S ATTRENDD=$S('$G(IFUNC):"",1:$G(^DGCR(399,IBIFN,"PRV",IFUNC,0)))
"RTN","IBCU1",177,0)
 ;
"RTN","IBCU1",178,0)
 S PC=$S(FT=2:6,FT=3:8,1:"")  ; get the correct piece from the ins co dictionary
"RTN","IBCU1",179,0)
 Q:'+PC
"RTN","IBCU1",180,0)
 ;
"RTN","IBCU1",181,0)
 F I="I1","I2","I3" D
"RTN","IBCU1",182,0)
 . S INS=$P($G(^DGCR(399,IBIFN,I)),U)
"RTN","IBCU1",183,0)
 . Q:'+INS
"RTN","IBCU1",184,0)
 . Q:'$P($G(^DIC(36,INS,4)),U,PC)
"RTN","IBCU1",185,0)
 . D:I="I1"
"RTN","IBCU1",186,0)
 .. S:".05"[FIELD IBDR(399,IBIFN_",",122)=$S($P(ATTRENDD,U,5)]"":$P(ATTRENDD,U,5),1:"@")
"RTN","IBCU1",187,0)
 .. S:".12"[FIELD IBDR(399,IBIFN_",",128)=$S($P(ATTRENDD,U,12)]"":$P(ATTRENDD,U,12),1:"@")
"RTN","IBCU1",188,0)
 . D:I="I2"
"RTN","IBCU1",189,0)
 .. S:".06"[FIELD IBDR(399,IBIFN_",",123)=$S($P(ATTRENDD,U,6)]"":$P(ATTRENDD,U,6),1:"@")
"RTN","IBCU1",190,0)
 .. S:".13"[FIELD IBDR(399,IBIFN_",",129)=$S($P(ATTRENDD,U,13)]"":$P(ATTRENDD,U,13),1:"@")
"RTN","IBCU1",191,0)
 . D:I="I3"
"RTN","IBCU1",192,0)
 .. S:".07"[FIELD IBDR(399,IBIFN_",",124)=$S($P(ATTRENDD,U,7)]"":$P(ATTRENDD,U,7),1:"@")
"RTN","IBCU1",193,0)
 .. S:".14"[FIELD IBDR(399,IBIFN_",",130)=$S($P(ATTRENDD,U,14)]"":$P(ATTRENDD,U,14),1:"@")
"RTN","IBCU1",194,0)
 ;
"RTN","IBCU1",195,0)
 I $O(IBDR(0)) D FILE^DIE("","IBDR")
"RTN","IBCU1",196,0)
 Q
"RTN","IBNCPDP1")
0^3^B67595010^B67408703
"RTN","IBNCPDP1",1,0)
IBNCPDP1 ;OAK/ELZ - PROCESSING FOR NEW RX REQUESTS ;3/27/08  17:36
"RTN","IBNCPDP1",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,339,363,383,405**;21-MAR-94;Build 4
"RTN","IBNCPDP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDP1",4,0)
 ;
"RTN","IBNCPDP1",5,0)
 ;
"RTN","IBNCPDP1",6,0)
RX(DFN,IBD) ; pharmacy package call, passing in IBD by ref
"RTN","IBNCPDP1",7,0)
 ; this is called by PSO for all prescriptions issued, return is
"RTN","IBNCPDP1",8,0)
 ; a response to bill ECME or not with array for billing data elements
"RTN","IBNCPDP1",9,0)
 ;warning: back-billing flag:
"RTN","IBNCPDP1",10,0)
 ;if passed IBSCRES(IBRXN,IBFIL)=1
"RTN","IBNCPDP1",11,0)
 ; - the the SC Determination is just done by the IB clerk (billable)
"RTN","IBNCPDP1",12,0)
 ;
"RTN","IBNCPDP1",13,0)
 ;clean up the list of non-answered SC/Env.indicators questions and INS
"RTN","IBNCPDP1",14,0)
 K IBD("SC/EI NO ANSW"),IBD("INS")
"RTN","IBNCPDP1",15,0)
 ;
"RTN","IBNCPDP1",16,0)
 N IBTRKR,IBARR,IBADT,IBRXN,IBFIL,IBTRKRN,IBRMARK,IBANY,IBX,IBT,IBINS,IBSAVE
"RTN","IBNCPDP1",17,0)
 N IBFEE,IBEABD,IBBI,IBIT,IBPRICE,IBRS,IBRT,IBTRN,IBCHG,IBERMSG,IBRES,IBNEEDS
"RTN","IBNCPDP1",18,0)
 ;
"RTN","IBNCPDP1",19,0)
 I '$G(DFN) S IBRES="0^No DFN" G RXQ
"RTN","IBNCPDP1",20,0)
 S IBRXN=+$G(IBD("IEN")) I 'IBRXN S IBRES="0^No Rx IEN" G RXQ
"RTN","IBNCPDP1",21,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G RXQ
"RTN","IBNCPDP1",22,0)
 S IBD("QTY")=+$G(IBD("QTY")) I 'IBD("QTY") S IBRES="0^No Quantity" G RXQ
"RTN","IBNCPDP1",23,0)
 ;
"RTN","IBNCPDP1",24,0)
 S IBRES="0^Error"
"RTN","IBNCPDP1",25,0)
 S (IBEABD,IBADT)=+$G(IBD("FILL DATE"),DT)
"RTN","IBNCPDP1",26,0)
 ;
"RTN","IBNCPDP1",27,0)
 ; -- look up insurance for patient
"RTN","IBNCPDP1",28,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDP1",29,0)
 ;
"RTN","IBNCPDP1",30,0)
 ; -- determine rate type
"RTN","IBNCPDP1",31,0)
 S IBRT=$$RT^IBNCPDPU(DFN,.IBINS)
"RTN","IBNCPDP1",32,0)
 ;
"RTN","IBNCPDP1",33,0)
 ; -- claims tracking info
"RTN","IBNCPDP1",34,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP1",35,0)
 ; date can't be before parameters
"RTN","IBNCPDP1",36,0)
 S $P(IBTRKR,U)=$S('$P(IBTRKR,U,4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP1",37,0)
 ; already in claims tracking
"RTN","IBNCPDP1",38,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP1",39,0)
 I IBTRKRN,$$PAPERBIL(IBTRKRN) S IBRES="0^Existing IB Bill in CT",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",40,0)
 ; already billed as Tricare
"RTN","IBNCPDP1",41,0)
 I $D(^IBA(351.5,"B",IBRXN_";"_IBFIL)) S IBRES="0^Already billed under prior Tricare process",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",42,0)
 ;
"RTN","IBNCPDP1",43,0)
 ; -- no pharmacy coverage, update ct if applicable, quit
"RTN","IBNCPDP1",44,0)
 I '$$PTCOV^IBCNSU3(DFN,IBADT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED") D:$P(IBTRKR,U,4)=2 CT S IBRES="0^"_IBRMARK,IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",45,0)
 ;
"RTN","IBNCPDP1",46,0)
 ;  -- check for compound,  NOT BILLABLE
"RTN","IBNCPDP1",47,0)
 I $G(IBD("DEA"))="" D CT S IBRES="0^Null DEA Special Handling field" G RXQ
"RTN","IBNCPDP1",48,0)
 I IBD("DEA")["M"!(IBD("DEA")["0") S IBRMARK="DRUG NOT BILLABLE" D CT S IBRES="0^COMPOUND DRUG" G RXQ
"RTN","IBNCPDP1",49,0)
 ; -- check drug (not investigational, supply, over the counter, or nutritional supplement drug
"RTN","IBNCPDP1",50,0)
 ;  "E" means always ecme billable
"RTN","IBNCPDP1",51,0)
 I (IBD("DEA")["I"!(IBD("DEA")["S")!(IBD("DEA")["9"))!(IBD("DEA")["N"),IBD("DEA")'["E" S IBRMARK="DRUG NOT BILLABLE" D CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",52,0)
 ;
"RTN","IBNCPDP1",53,0)
 ;retrieve indicators from file #52 and overwrite the indicators in IBD array
"RTN","IBNCPDP1",54,0)
 D GETINDIC^IBNCPUT2(+IBD("IEN"),.IBD)
"RTN","IBNCPDP1",55,0)
 ; -- process patient exemptions if any (if not already resolved)
"RTN","IBNCPDP1",56,0)
 I $G(IBD("SC/EI OVR"))'=1 D CL^SDCO21(DFN,IBADT,"",.IBARR)
"RTN","IBNCPDP1",57,0)
 ; check out exemptions
"RTN","IBNCPDP1",58,0)
 S IBNEEDS=0 ;flag will be set to 1 if at least one of the questions wasn't answered
"RTN","IBNCPDP1",59,0)
 I $G(IBD("SC/EI OVR"))'=1 I $D(IBARR)>9 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX),";;",2) Q:IBT=""  D:$D(IBARR(+IBT))
"RTN","IBNCPDP1",60,0)
 . I $G(IBD($P(IBT,U,2)))=0 Q
"RTN","IBNCPDP1",61,0)
 . I $G(IBD($P(IBT,U,2))) S IBRMARK=$P(IBT,U,3) Q
"RTN","IBNCPDP1",62,0)
 . I '$G(IBSCRES(IBRXN,IBFIL)) S IBNEEDS=1 D
"RTN","IBNCPDP1",63,0)
 . . S IBD("SC/EI NO ANSW")=$S($G(IBD("SC/EI NO ANSW"))="":$P(IBT,U,2),1:$G(IBD("SC/EI NO ANSW"))_","_$P(IBT,U,2))
"RTN","IBNCPDP1",64,0)
 I '$D(IBRMARK),IBNEEDS=1 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBNCPDP1",65,0)
 I $D(IBRMARK) D CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",66,0)
 ; Clean-up the NEEDS SC DETERMINATION record if resolved
"RTN","IBNCPDP1",67,0)
 ; And check if it is non-billable in CT
"RTN","IBNCPDP1",68,0)
 I IBTRKRN D
"RTN","IBNCPDP1",69,0)
 . N IBNBR,IBNBRT
"RTN","IBNCPDP1",70,0)
 . S IBNBR=$P($G(^IBT(356,+IBTRKRN,0)),U,19) Q:'IBNBR
"RTN","IBNCPDP1",71,0)
 . S IBNBRT=$P($G(^IBE(356.8,IBNBR,0)),U) Q:IBNBRT=""
"RTN","IBNCPDP1",72,0)
 . ; if refill was deleted (not RX) and now the refill is re-entered
"RTN","IBNCPDP1",73,0)
 . ;use $$RXSTATUS^IBNCPRR instead of $G(^PSRX(IBRXN,"STA"))
"RTN","IBNCPDP1",74,0)
 . I IBNBRT="PRESCRIPTION DELETED",$$RXSTATUS^IBNCPRR(DFN,IBRXN)'=13 D  Q
"RTN","IBNCPDP1",75,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",76,0)
 . . ; clean up REASON NOT BILLABLE and ADDITIONAL COMMENT
"RTN","IBNCPDP1",77,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@;1.08////@" D ^DIE
"RTN","IBNCPDP1",78,0)
 . ; Clean up NBR if released
"RTN","IBNCPDP1",79,0)
 . I IBNBRT="PRESCRIPTION NOT RELEASED" D:$G(IBD("RELEASE DATE"))  Q
"RTN","IBNCPDP1",80,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",81,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",82,0)
 . ; Clean up 'Needs SC determ'
"RTN","IBNCPDP1",83,0)
 . I IBNBRT="NEEDS SC DETERMINATION" D  Q
"RTN","IBNCPDP1",84,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",85,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",86,0)
 . S IBRMARK=IBNBRT
"RTN","IBNCPDP1",87,0)
 I $D(IBRMARK) S IBRES="0^Non-Billable in CT: "_IBRMARK G RXQ
"RTN","IBNCPDP1",88,0)
 ;
"RTN","IBNCPDP1",89,0)
 ; -- setup insurance data for patient
"RTN","IBNCPDP1",90,0)
 S IBERMSG="" ; Error message
"RTN","IBNCPDP1",91,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D
"RTN","IBNCPDP1",92,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D
"RTN","IBNCPDP1",93,0)
 .. N IBDAT,IBPL,IBINSN,IBPIEN,IBY,IBZ
"RTN","IBNCPDP1",94,0)
 .. S IBZ=$G(IBINS(IBT,0)) Q:IBZ=""
"RTN","IBNCPDP1",95,0)
 .. S IBPL=$P(IBZ,U,18) ; plan
"RTN","IBNCPDP1",96,0)
 .. Q:'IBPL
"RTN","IBNCPDP1",97,0)
 .. Q:'$$PLCOV^IBCNSU3(IBPL,IBADT,3)  ; not covered
"RTN","IBNCPDP1",98,0)
 .. I '$D(IBD("INS")),$P(IBRT,"^",3)="V",($P($G(^IBE(355.1,+$P($G(^IBA(355.3,+IBPL,0)),"^",9),0)),"^")["TRICARE"!($P($G(^(0)),"^")="CHAMPVA")) K IBINS Q  ;Tricare/ChampVa coverage for a Vet
"RTN","IBNCPDP1",99,0)
 .. S IBINSN=$P($G(^DIC(36,+$G(^IBA(355.3,+IBPL,0)),0)),U) ; ins name
"RTN","IBNCPDP1",100,0)
 .. S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBNCPDP1",101,0)
 .. I 'IBPIEN S IBERMSG="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDP1",102,0)
 .. D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDP1",103,0)
 .. I $E($G(IBY(1)))'="A" S IBERMSG=$$ERMSG($P($G(IBY(6)),",")) Q  ; not active
"RTN","IBNCPDP1",104,0)
 .. S IBDAT=IBPL ; Plan IEN
"RTN","IBNCPDP1",105,0)
 .. S $P(IBDAT,U,2)=$G(IBY(2)) ; BIN
"RTN","IBNCPDP1",106,0)
 .. S $P(IBDAT,U,3)=$G(IBY(3)) ; PCN
"RTN","IBNCPDP1",107,0)
 .. S $P(IBDAT,U,4)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",1),0)),U) ; Payer Sheet B1
"RTN","IBNCPDP1",108,0)
 .. S $P(IBDAT,U,5)=$P($G(IBINS(IBT,355.3)),U,4) ; Group ID
"RTN","IBNCPDP1",109,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,2) ; Cardholder ID
"RTN","IBNCPDP1",110,0)
 .. S $P(IBDAT,U,7)=$P(IBZ,U,16) ; Patient Relationship Code
"RTN","IBNCPDP1",111,0)
 .. S $P(IBDAT,U,8)=$P($P($P(IBZ,U,17),",",2)," ") ; Cardholder First Name
"RTN","IBNCPDP1",112,0)
 .. S $P(IBDAT,U,9)=$P($P(IBZ,U,17),",") ; Cardholder Last Name
"RTN","IBNCPDP1",113,0)
 .. S $P(IBDAT,U,10)=$P($G(^DIC(36,+IBZ,.11)),U,5) ; State
"RTN","IBNCPDP1",114,0)
 .. S $P(IBDAT,U,11)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",2),0)),U) ; Payer Sheet B2
"RTN","IBNCPDP1",115,0)
 .. S $P(IBDAT,U,12)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",3),0)),U) ; Payer Sheet B3
"RTN","IBNCPDP1",116,0)
 .. S $P(IBDAT,U,13)=$G(IBY(4)) ; Software/Vendor Cert ID
"RTN","IBNCPDP1",117,0)
 .. S $P(IBDAT,U,14)=IBINSN ; Ins Name
"RTN","IBNCPDP1",118,0)
 .. S IBD("INS",IBX,1)=IBDAT
"RTN","IBNCPDP1",119,0)
 .. S IBDAT=$P($G(IBINS(IBT,355.3)),"^",3) ;group name
"RTN","IBNCPDP1",120,0)
 .. S $P(IBDAT,U,2)=$$PHONE(+IBZ) ;ins co ph 3
"RTN","IBNCPDP1",121,0)
 .. S $P(IBDAT,U,3)=$$GET1^DIQ(366.03,IBPIEN_",",.01) ;plan ID
"RTN","IBNCPDP1",122,0)
 .. S $P(IBDAT,U,4)=$S($P($G(^IBE(355.1,+$P($G(IBINS(IBT,355.3)),"^",9),0)),"^")="TRICARE":"T",1:"V") ; plan type
"RTN","IBNCPDP1",123,0)
 .. S $P(IBDAT,U,5)=+$G(^IBA(355.3,+IBPL,0)) ; insurance co ien
"RTN","IBNCPDP1",124,0)
 .. S IBD("INS",IBX,3)=IBDAT
"RTN","IBNCPDP1",125,0)
 I '$D(IBD("INS")),IBERMSG'="" S IBRES="0^Not ECME billable: "_IBERMSG,IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",126,0)
 I '$D(IBD("INS")) S IBRES="0^No Insurance ECME billable",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",127,0)
 ;
"RTN","IBNCPDP1",128,0)
 ; determine rates/prices to use
"RTN","IBNCPDP1",129,0)
 I 'IBRT D CT S IBRES="0^Cannot determine Rate type" G RXQ
"RTN","IBNCPDP1",130,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBADT,.IBRS)
"RTN","IBNCPDP1",131,0)
 I 'IBBI,$P(IBBI,";")'="VA COST" D CT S IBRES="0^Cannot find Billable Item" G RXQ
"RTN","IBNCPDP1",132,0)
 ;1;BEDSECTION;1^
"RTN","IBNCPDP1",133,0)
 ;IBRS(1,18,5)=
"RTN","IBNCPDP1",134,0)
 S IBRS=+$O(IBRS($P(IBBI,";"),0))
"RTN","IBNCPDP1",135,0)
 S IBIT=$$ITPTR^IBCRU2($P(IBBI,";"),$S($P(IBRT,U,2)="A":$$NDC^IBNCPDPU($G(IBD("NDC"))),1:"PRESCRIPTION"))
"RTN","IBNCPDP1",136,0)
 I 'IBIT,$P(IBRT,U,2)'="C" D CT S IBRES="0^Cannot find Item Pointer" G RXQ
"RTN","IBNCPDP1",137,0)
 ;8
"RTN","IBNCPDP1",138,0)
 S IBPRICE=+$$BICOST^IBCRCI(+IBRT,3,IBADT,"PRESCRIPTION FILL",+IBIT,,,$S($P(IBRT,U,2)="A":IBD("QTY"),1:1))
"RTN","IBNCPDP1",139,0)
 ;36^2991001
"RTN","IBNCPDP1",140,0)
 ;
"RTN","IBNCPDP1",141,0)
 ; get fees if any, ignore return, don't care about price, just need fees
"RTN","IBNCPDP1",142,0)
 S IBCHG=$$RATECHG^IBCRCC(+IBRS,$S($P(IBRT,U,2)'="C":1,1:IBD("QTY")*IBD("COST")),IBADT,.IBFEE)
"RTN","IBNCPDP1",143,0)
 I $P(IBRT,U,2)="C" S IBPRICE=+IBCHG
"RTN","IBNCPDP1",144,0)
 ;
"RTN","IBNCPDP1",145,0)
 I 'IBPRICE D CT S IBRES="0^Cannot find price for Item" G RXQ
"RTN","IBNCPDP1",146,0)
 ;
"RTN","IBNCPDP1",147,0)
 S IBPRICE=(+$G(IBFEE))_U_$S($P(IBRT,U,2)="A":"01",$P(IBRT,U,2)="C":"05",1:"07")_U_$S($P(IBRT,U,2)="C":IBD("QTY")*IBD("COST")+$G(IBFEE),$P(IBRT,U,2)="A":IBPRICE-$G(IBFEE)-$P($G(IBFEE),U,2),1:IBPRICE)_U_IBPRICE_U_(+$P($G(IBFEE),U,2))
"RTN","IBNCPDP1",148,0)
 S IBX=0 F  S IBX=$O(IBD("INS",IBX)) Q:IBX<1  S IBD("INS",IBX,2)=IBPRICE ;_U_$P(IBPAYER,U,6)
"RTN","IBNCPDP1",149,0)
 ;
"RTN","IBNCPDP1",150,0)
 S IBRES=$S($D(IBRMARK):"0^"_IBRMARK,1:1)
"RTN","IBNCPDP1",151,0)
 I IBRES,'$G(IBD("RELEASE DATE")) S IBRMARK="PRESCRIPTION NOT RELEASED"
"RTN","IBNCPDP1",152,0)
 D CT
"RTN","IBNCPDP1",153,0)
 ;
"RTN","IBNCPDP1",154,0)
RXQ S $P(IBRES,"^",3)=$S($L($P($G(IBRT),"^",3)):$P(IBRT,"^",3),1:"V")
"RTN","IBNCPDP1",155,0)
 I IBRES D START^IBNCPDP6(IBRXN_";"_IBFIL,$P(IBRES,"^",3),+IBRT)
"RTN","IBNCPDP1",156,0)
 D LOG^IBNCPDP2("BILLABLE STATUS CHECK",IBRES)
"RTN","IBNCPDP1",157,0)
 Q IBRES
"RTN","IBNCPDP1",158,0)
 ;
"RTN","IBNCPDP1",159,0)
 ;
"RTN","IBNCPDP1",160,0)
CT ; files in claims tracking
"RTN","IBNCPDP1",161,0)
 I IBTRKR D CT^IBNCPDPU(DFN,IBRXN,IBFIL,IBADT,$G(IBRMARK))
"RTN","IBNCPDP1",162,0)
 Q
"RTN","IBNCPDP1",163,0)
 ;
"RTN","IBNCPDP1",164,0)
EXEMPT ; exemption reasons
"RTN","IBNCPDP1",165,0)
 ; variable from SD call ^ variable from PSO ^ reason not billable
"RTN","IBNCPDP1",166,0)
 ;;1^AO^AGENT ORANGE
"RTN","IBNCPDP1",167,0)
 ;;2^IR^IONIZING RADIATION
"RTN","IBNCPDP1",168,0)
 ;;3^SC^SC TREATMENT
"RTN","IBNCPDP1",169,0)
 ;;4^SWA^SOUTHWEST ASIA
"RTN","IBNCPDP1",170,0)
 ;;5^MST^MILITARY SEXUAL TRAUMA
"RTN","IBNCPDP1",171,0)
 ;;6^HNC^HEAD/NECK CANCER
"RTN","IBNCPDP1",172,0)
 ;;7^CV^COMBAT VETERAN
"RTN","IBNCPDP1",173,0)
 ;;8^SHAD^PROJECT 112/SHAD
"RTN","IBNCPDP1",174,0)
 ;;
"RTN","IBNCPDP1",175,0)
 ;
"RTN","IBNCPDP1",176,0)
ERMSG(IBSTL) ; Inactive status reason
"RTN","IBNCPDP1",177,0)
 N IBSTA,IBI,IBARR,IBTXT
"RTN","IBNCPDP1",178,0)
 D STATAR^IBCNRU1(.IBARR)
"RTN","IBNCPDP1",179,0)
 F IBI=1:1:$L(IBSTL,",")+1 S IBSTA=+$P(IBSTL,",",IBI) Q:"^100^200^300^400^"'[(U_IBSTA_U)
"RTN","IBNCPDP1",180,0)
 S IBTXT=$G(IBARR(+IBSTA),"Plan is not active.")
"RTN","IBNCPDP1",181,0)
 Q IBTXT
"RTN","IBNCPDP1",182,0)
 ;
"RTN","IBNCPDP1",183,0)
NEEDSC(IBTXT) ; is the CT NBR one of 'needs sc determination'?
"RTN","IBNCPDP1",184,0)
 I IBTXT="NEEDS SC DETERMINATION" Q 1
"RTN","IBNCPDP1",185,0)
 N I,RES,IBT
"RTN","IBNCPDP1",186,0)
 S RES=0
"RTN","IBNCPDP1",187,0)
 F I=2:1 S IBT=$P($P($T(EXEMPT+I),";;",2),U,3) Q:IBT=""  I IBT=IBTXT S RES=1 Q
"RTN","IBNCPDP1",188,0)
 Q RES
"RTN","IBNCPDP1",189,0)
 ;
"RTN","IBNCPDP1",190,0)
PAPERBIL(IBTRKRN) ; 'paper' bill in CT?
"RTN","IBNCPDP1",191,0)
 N IBZ,IBIFN
"RTN","IBNCPDP1",192,0)
 S IBZ=$G(^IBT(356,IBTRKRN,0)) I IBZ="" Q 0
"RTN","IBNCPDP1",193,0)
 S IBIFN=+$P(IBZ,U,11) I 'IBIFN Q 0
"RTN","IBNCPDP1",194,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=7 Q 0  ; cancelled
"RTN","IBNCPDP1",195,0)
 I $P($G(^DGCR(399,IBIFN,"M1")),U,8)'="" Q 0  ; ecme bill
"RTN","IBNCPDP1",196,0)
 Q 1
"RTN","IBNCPDP1",197,0)
 ;
"RTN","IBNCPDP1",198,0)
 ;gets the insurance phone
"RTN","IBNCPDP1",199,0)
 ;input:
"RTN","IBNCPDP1",200,0)
 ; IB36 - ptr to INSURANCE COMPANY File (#36)
"RTN","IBNCPDP1",201,0)
 ;output:
"RTN","IBNCPDP1",202,0)
 ; the phone number
"RTN","IBNCPDP1",203,0)
PHONE(IB36) ;
"RTN","IBNCPDP1",204,0)
 N IB1
"RTN","IBNCPDP1",205,0)
 ;check first CLAIMS (RX) PHONE NUMBER if empty
"RTN","IBNCPDP1",206,0)
 S IB1=$$GET1^DIQ(36,+IB36,.1311,"E")
"RTN","IBNCPDP1",207,0)
 Q:$L(IB1)>0 IB1
"RTN","IBNCPDP1",208,0)
 ;check BILLING PHONE NUMBER if empty - return nothing
"RTN","IBNCPDP1",209,0)
 S IB1=$$GET1^DIQ(36,+IB36,.132,"E")
"RTN","IBNCPDP1",210,0)
 Q IB1
"RTN","IBNCPDP1",211,0)
 ;
"RTN","IBNCPDP1",212,0)
 ;IBNCPDP1
"RTN","IBNCPDP2")
0^7^B55687303^B53296275
"RTN","IBNCPDP2",1,0)
IBNCPDP2 ;OAK/ELZ - PROCESSING FOR ECME RESP ;11/15/07  09:43
"RTN","IBNCPDP2",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,342,347,363,383,405**;21-MAR-94;Build 4
"RTN","IBNCPDP2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDP2",4,0)
 ;
"RTN","IBNCPDP2",5,0)
ECME(DFN,IBD) ; function called by STORESP^IBNCPDP
"RTN","IBNCPDP2",6,0)
 ; input - DFN - patient IEN for the prescription
"RTN","IBNCPDP2",7,0)
 ;         IBD array passed in by reference
"RTN","IBNCPDP2",8,0)
 ;      The IBD array is passed to various subroutines depending
"RTN","IBNCPDP2",9,0)
 ;      on the ePharmacy event as evaluated by IBD("STATUS")
"RTN","IBNCPDP2",10,0)
 I $G(IBD("EPHARM"))="" S IBD("EPHARM")=$$EPHARM(+$G(IBD("PRESCRIPTION")),+$G(IBD("FILL NUMBER")))
"RTN","IBNCPDP2",11,0)
 I IBD("STATUS")="PAID" Q $$BILL(DFN,.IBD)
"RTN","IBNCPDP2",12,0)
 I IBD("STATUS")="REVERSED" Q $$REVERSE^IBNCPDP3(DFN,.IBD)
"RTN","IBNCPDP2",13,0)
 I IBD("STATUS")="CLOSED" Q $$CLOSE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",14,0)
 I IBD("STATUS")="RELEASED" Q $$RELEASE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",15,0)
 I IBD("STATUS")="SUBMITTED" Q $$SUBMIT^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",16,0)
 I IBD("STATUS")="REOPEN" Q $$REOPEN^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",17,0)
 D LOG("UNKNOWN")
"RTN","IBNCPDP2",18,0)
 Q "0^Cannot determine ECME event status"
"RTN","IBNCPDP2",19,0)
 ;
"RTN","IBNCPDP2",20,0)
MATCH(BCID) ;
"RTN","IBNCPDP2",21,0)
 N IBX,IBHAVE
"RTN","IBNCPDP2",22,0)
 S IBX=0,IBHAVE=0 F  S IBX=$O(^DGCR(399,"AG",BCID,IBX)) Q:'IBX  S IBHAVE=1 I '$P($G(^DGCR(399,IBX,"S")),U,16) Q
"RTN","IBNCPDP2",23,0)
 I 'IBX,IBHAVE Q ""
"RTN","IBNCPDP2",24,0)
 Q +IBX
"RTN","IBNCPDP2",25,0)
 ;
"RTN","IBNCPDP2",26,0)
BILL(DFN,IBD) ; create bills
"RTN","IBNCPDP2",27,0)
 N IBDIV,IBAMT,IBY,IBSERV,IBFAC,IBSITE,IBDRX,IB,IBCDFN,IBINS,IBIDS,IBIFN,IBDFN,PRCASV,IBTRIC
"RTN","IBNCPDP2",28,0)
 N PRCAERR,IBADT,IBRXN,IBFIL,IBTRKRN,DIE,DA,DR,IBRES,IBLOCK,IBLDT,IBNOW,IBDUZ,RCDUZ,IBPREV,IBQUERY,IBPAID,IBACT,%,DGRVRCAL
"RTN","IBNCPDP2",29,0)
 ;
"RTN","IBNCPDP2",30,0)
 S IBDUZ=.5 ;POSTMASTER
"RTN","IBNCPDP2",31,0)
 ;I $G(IBD("FILLED BY")),$D(^VA(200,+IBD("FILLED BY"))) S IBDUZ=+IBD("FILLED BY")
"RTN","IBNCPDP2",32,0)
 S RCDUZ=IBDUZ
"RTN","IBNCPDP2",33,0)
 ;
"RTN","IBNCPDP2",34,0)
 S IBY=1,IBLOCK=0
"RTN","IBNCPDP2",35,0)
 I 'DFN S IBY="0^Missing DFN" G BILLQ
"RTN","IBNCPDP2",36,0)
 S IBAMT=+$G(IBD("BILLED")) ;FI portion of charge
"RTN","IBNCPDP2",37,0)
 I 'IBAMT S IBY="-1^Zero amount billed" G BILLQ
"RTN","IBNCPDP2",38,0)
 S IBADT=+$G(IBD("FILL DATE"),DT)
"RTN","IBNCPDP2",39,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBY="0^Missing Rx IEN" G BILLQ
"RTN","IBNCPDP2",40,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBY="0^No fill number" G BILLQ
"RTN","IBNCPDP2",41,0)
 S IBDIV=+$G(IBD("DIVISION"))
"RTN","IBNCPDP2",42,0)
 I '$L($G(IBD("CLAIMID"))) S IBY="-1^Missing ECME Number" G BILLQ
"RTN","IBNCPDP2",43,0)
 S IBD("BCID")=(+IBD("CLAIMID"))_";"_IBADT ; The BCID#
"RTN","IBNCPDP2",44,0)
 L +^DGCR(399,"AG",IBD("BCID")):15 E  S IBY="0^Cannot lock ECME number." G BILLQ
"RTN","IBNCPDP2",45,0)
 ;
"RTN","IBNCPDP2",46,0)
 S IBTRIC=$$TRICARE^IBNCPDP6(IBRXN_";"_IBFIL)
"RTN","IBNCPDP2",47,0)
 ; do patient copay first (only applicable if Tricare)
"RTN","IBNCPDP2",48,0)
 I $G(IBD("COPAY")),IBTRIC D BILL^IBNCPDP6(IBRXN_";"_IBFIL,IBD("COPAY"))
"RTN","IBNCPDP2",49,0)
 I IBTRIC,'$G(IBD("PAID")) S IBY="1^Nothing paid in Tricare claim." G BILLQ
"RTN","IBNCPDP2",50,0)
 ;
"RTN","IBNCPDP2",51,0)
 S IBLOCK=1
"RTN","IBNCPDP2",52,0)
 S IBLDT=$G(^DGCR(399,"AG",IBD("BCID"))) ;Last time called
"RTN","IBNCPDP2",53,0)
 D NOW^%DTC S IBNOW=%
"RTN","IBNCPDP2",54,0)
 ; 2 calls in 45 sec
"RTN","IBNCPDP2",55,0)
 I $P(IBLDT,"^",2)="B" I $$FMDIFF^XLFDT(IBNOW,+IBLDT,2)<45 S IBY="0^Duplicate billing call" G BILLQ
"RTN","IBNCPDP2",56,0)
 ;
"RTN","IBNCPDP2",57,0)
 I $$MATCH(IBD("BCID")) D   ;cancel the previous bill
"RTN","IBNCPDP2",58,0)
 . N IBARR M IBARR=IBD I $$REVERSE^IBNCPDP3(DFN,.IBARR,2)
"RTN","IBNCPDP2",59,0)
 ;
"RTN","IBNCPDP2",60,0)
 ; derive minimal variables
"RTN","IBNCPDP2",61,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB SITE" G BILLQ
"RTN","IBNCPDP2",62,0)
 S IBSERV=$P($G(^IBE(350.1,1,0)),"^",4)
"RTN","IBNCPDP2",63,0)
 I '$$SERV^IBARX1(IBSERV) S IBY="-1^IB SERVICE" G BILLQ
"RTN","IBNCPDP2",64,0)
 I 'IBDIV S IBDIV=$P($$MCDIV^IBNCPEB(IBRXN,IBFIL),U,2)
"RTN","IBNCPDP2",65,0)
 I 'IBDIV S IBDIV=+$P($G(^SC(+$$FILE^IBRXUTL(IBRXN,5),0)),"^",15)
"RTN","IBNCPDP2",66,0)
 I 'IBDIV S IBDIV=+$P($G(^IBE(350.9,1,1)),U,25) ;dflt
"RTN","IBNCPDP2",67,0)
 I IBDIV S IBD("DIVISION")=IBDIV
"RTN","IBNCPDP2",68,0)
 ; - establish a stub claim/receivable
"RTN","IBNCPDP2",69,0)
 D SET^IBR I IBY<0 G BILLQ
"RTN","IBNCPDP2",70,0)
 ;
"RTN","IBNCPDP2",71,0)
 ; set up the following variables for claim establishment:
"RTN","IBNCPDP2",72,0)
 ; .01 BILL #
"RTN","IBNCPDP2",73,0)
 ; .17 ORIG CLAIM
"RTN","IBNCPDP2",74,0)
 ; .2  AUTO?
"RTN","IBNCPDP2",75,0)
 ; .02 DFN
"RTN","IBNCPDP2",76,0)
 ; .06 TIMEFRAME
"RTN","IBNCPDP2",77,0)
 ; .07 RATE TYPE
"RTN","IBNCPDP2",78,0)
 ; .18 SC AT TIME?
"RTN","IBNCPDP2",79,0)
 ; .04 LOCATION
"RTN","IBNCPDP2",80,0)
 ; .22 DIVISION
"RTN","IBNCPDP2",81,0)
 ; .05 BILL CLASSIF  (3)
"RTN","IBNCPDP2",82,0)
 ; .03 EVT DATE (FILL DATE)
"RTN","IBNCPDP2",83,0)
 ; 151 BILL FROM
"RTN","IBNCPDP2",84,0)
 ; 152 BILL TO
"RTN","IBNCPDP2",85,0)
 ; 101 PRIMARY INS CARRIER
"RTN","IBNCPDP2",86,0)
 K IB
"RTN","IBNCPDP2",87,0)
 S (IB(.02),IBDFN)=DFN
"RTN","IBNCPDP2",88,0)
 S IB(.07)=$$RT^IBNCPDP6(IBRXN_";"_IBFIL) ; previously determined rate type
"RTN","IBNCPDP2",89,0)
 I 'IB(.07) S IB(.07)=+$$RT^IBNCPDPU(DFN) ; cannot find previously, try to recompute
"RTN","IBNCPDP2",90,0)
 I 'IB(.07) S IBY="-1^IB RATE TYPE" G BILLQ
"RTN","IBNCPDP2",91,0)
 ;
"RTN","IBNCPDP2",92,0)
 S IBIFN=PRCASV("ARREC")
"RTN","IBNCPDP2",93,0)
 S IB(.01)=$P(PRCASV("ARBIL"),"-",2)
"RTN","IBNCPDP2",94,0)
 S IB(.17)=""
"RTN","IBNCPDP2",95,0)
 S IB(.2)=0
"RTN","IBNCPDP2",96,0)
 S IB(.06)=1
"RTN","IBNCPDP2",97,0)
 S IB(.18)=$$SC^IBCU3(DFN)
"RTN","IBNCPDP2",98,0)
 S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1)
"RTN","IBNCPDP2",99,0)
 S:IBDIV IB(.22)=+IBDIV
"RTN","IBNCPDP2",100,0)
 S IB(.05)=3
"RTN","IBNCPDP2",101,0)
 S (IB(.03),IB(151),IB(152))=IBADT
"RTN","IBNCPDP2",102,0)
 S IBINS=$P($G(^IBA(355.3,+$G(IBD("PLAN")),0)),"^") I IBINS S IB(101)=IBINS
"RTN","IBNCPDP2",103,0)
 ;
"RTN","IBNCPDP2",104,0)
 ; set 362.4 node to rx#^p50^days sup^fill date^qty^ndc
"RTN","IBNCPDP2",105,0)
 S IB(362.4,IBRXN,IBFIL)=IBD("RX NO")_"^"_IBD("DRUG")_"^"_IBD("DAYS SUPPLY")_"^"_IBD("FILL DATE")_"^"_IBD("QTY")_"^"_IBD("NDC")
"RTN","IBNCPDP2",106,0)
 ;
"RTN","IBNCPDP2",107,0)
 ; call the autobiller module to create the claim with a default
"RTN","IBNCPDP2",108,0)
 ; diagnosis and procedure for prescriptions
"RTN","IBNCPDP2",109,0)
 D EN^IBCD3(.IBQUERY)
"RTN","IBNCPDP2",110,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBNCPDP2",111,0)
 ;
"RTN","IBNCPDP2",112,0)
 S ^DGCR(399,"AG",IBD("BCID"))=IBNOW_"^B"
"RTN","IBNCPDP2",113,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",114,0)
 ; update the ECME fields
"RTN","IBNCPDP2",115,0)
 S DR="460////^S X=IBD(""BCID"")" S:$L($G(IBD("AUTH #"))) DR=DR_";461////^S X=IBD(""AUTH #"")"
"RTN","IBNCPDP2",116,0)
 D ^DIE K DA,DR,DIE
"RTN","IBNCPDP2",117,0)
 D SETCT ; Set Claims Tracking record
"RTN","IBNCPDP2",118,0)
 ;
"RTN","IBNCPDP2",119,0)
 ; IEN to 2.3121
"RTN","IBNCPDP2",120,0)
 S IBCDFN=$$PLANN^IBNCPDPU(DFN,IBD("PLAN"),IBADT)
"RTN","IBNCPDP2",121,0)
 I 'IBCDFN S IBY="-1^Plan not found in Patient's Profile." G BILLQ
"RTN","IBNCPDP2",122,0)
 ;
"RTN","IBNCPDP2",123,0)
 ; add the payer (fiscal intermediary) to the claim
"RTN","IBNCPDP2",124,0)
 S IBINS=+IBCDFN,IBCDFN=$P(IBCDFN,"^",2)
"RTN","IBNCPDP2",125,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="112////"_IBCDFN
"RTN","IBNCPDP2",126,0)
 D ^DIE K DA,DR,DIE,DGRVRCAL
"RTN","IBNCPDP2",127,0)
 ;
"RTN","IBNCPDP2",128,0)
 ; need to make sure we have computed charges.
"RTN","IBNCPDP2",129,0)
 Q:'$$CHARGES(IBIFN,IBINS,+IB(.07),$G(IBD("PAID")),IBDIV,IBTRIC,.IBY)
"RTN","IBNCPDP2",130,0)
 ;
"RTN","IBNCPDP2",131,0)
 ; update the authorize/print fields
"RTN","IBNCPDP2",132,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",133,0)
 S DR="9////1;12////"_DT D ^DIE
"RTN","IBNCPDP2",134,0)
 K DA,DR,DIE
"RTN","IBNCPDP2",135,0)
 ;
"RTN","IBNCPDP2",136,0)
 ; pass the claim to AR
"RTN","IBNCPDP2",137,0)
 D GVAR^IBCBB,ARRAY^IBCBB1 S PRCASV("APR")=IBDUZ D ^PRCASVC6
"RTN","IBNCPDP2",138,0)
 I 'PRCASV("OKAY") S IBY="-1^Cannot establish receivable in AR." G BILLQ
"RTN","IBNCPDP2",139,0)
 D REL^PRCASVC
"RTN","IBNCPDP2",140,0)
 ;
"RTN","IBNCPDP2",141,0)
 ; update the AR status to Active
"RTN","IBNCPDP2",142,0)
 ;  D AUDITX^PRCAUDT(PRCASV("ARREC"))
"RTN","IBNCPDP2",143,0)
 S PRCASV("STATUS")=16
"RTN","IBNCPDP2",144,0)
 D STATUS^PRCASVC1
"RTN","IBNCPDP2",145,0)
 ;
"RTN","IBNCPDP2",146,0)
 ; decrease adjust bill
"RTN","IBNCPDP2",147,0)
 ; Auto decrease from service Bill#,Tran amt,person,reason,Tran date
"RTN","IBNCPDP2",148,0)
 S IBAMT=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBNCPDP2",149,0)
 S IBPAID=$G(IBD("PAID"))
"RTN","IBNCPDP2",150,0)
 I IBAMT-IBPAID>.01,'IBTRIC D
"RTN","IBNCPDP2",151,0)
 . D DEC^PRCASER1(PRCASV("ARREC"),IBAMT-IBPAID,IBDUZ,"Adjust based on ECME amount paid.",IBADT)
"RTN","IBNCPDP2",152,0)
 . I 'IBPAID S PRCASV("STATUS")=22 D STATUS^PRCASVC1 ; collected/closed
"RTN","IBNCPDP2",153,0)
 ;
"RTN","IBNCPDP2",154,0)
 D  ; set the user in 399
"RTN","IBNCPDP2",155,0)
 . N IBI,IBT F IBI=2,5,11,13,15 S IBT(399,IBIFN_",",IBI)=IBDUZ
"RTN","IBNCPDP2",156,0)
 . D FILE^DIE("","IBT")
"RTN","IBNCPDP2",157,0)
 ;
"RTN","IBNCPDP2",158,0)
BILLQ S IBRES=$S(IBY<0:"0^"_$S($L($P(IBY,"^",2)):$P(IBY,"^",2),1:$P(IBY,"^",3)),$G(IBIFN):+IBIFN,1:IBY)
"RTN","IBNCPDP2",159,0)
 I $G(IBIFN) S IBD("BILL")=IBIFN
"RTN","IBNCPDP2",160,0)
 D LOG("BILL",IBRES)
"RTN","IBNCPDP2",161,0)
 I IBY<0 D BULL^IBNCPEB($G(DFN),.IBD,IBRES,$G(IBIFN))
"RTN","IBNCPDP2",162,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP2",163,0)
 Q IBRES
"RTN","IBNCPDP2",164,0)
 ;
"RTN","IBNCPDP2",165,0)
SETCT ; update claims tracking saying bill has been billed
"RTN","IBNCPDP2",166,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP2",167,0)
 I IBTRKRN S DIE="^IBT(356,",DA=IBTRKRN,DR=".11////^S X=IBIFN;.17///@" D ^DIE
"RTN","IBNCPDP2",168,0)
 I IBTRKRN,(+$G(IBD("FILL DATE"))'=$P(^IBT(356,IBTRKRN,0),U,6)) S DIE="^IBT(356,",DA=IBTRKRN,DR=".06////"_IBD("FILL DATE") D ^DIE ; Check Fill Date
"RTN","IBNCPDP2",169,0)
 I IBTRKRN,IBIFN D CTB^IBCDC(IBTRKRN,IBIFN)
"RTN","IBNCPDP2",170,0)
 Q
"RTN","IBNCPDP2",171,0)
 ;
"RTN","IBNCPDP2",172,0)
LOG(PROC,RESULT) ;Store the data
"RTN","IBNCPDP2",173,0)
 ;Log values passed into IB by outside applications
"RTN","IBNCPDP2",174,0)
 ;
"RTN","IBNCPDP2",175,0)
 ;implicit input variables/arrays :
"RTN","IBNCPDP2",176,0)
 ; IBD array with values sent to IB (see calling subroutines)
"RTN","IBNCPDP2",177,0)
 ; DFN - patient's IEN (file #2)
"RTN","IBNCPDP2",178,0)
 ; DUZ - user's IEN(file #200)
"RTN","IBNCPDP2",179,0)
 ;explicit parameters:
"RTN","IBNCPDP2",180,0)
 ; PROC - type of event as string, i.e. BILL, REJECT and so on
"RTN","IBNCPDP2",181,0)
 ; RESULT - result of the event processing, format: return_code^message
"RTN","IBNCPDP2",182,0)
 ;
"RTN","IBNCPDP2",183,0)
 D LOG^IBNCPLOG(.IBD,DFN,PROC,RESULT,$J,$$NOW^XLFDT(),+DUZ)
"RTN","IBNCPDP2",184,0)
 Q
"RTN","IBNCPDP2",185,0)
 ;
"RTN","IBNCPDP2",186,0)
EPHARM(IBRX,IBREFILL) ;
"RTN","IBNCPDP2",187,0)
 ;returns ien of #9002313.56 BPS PHARMACIES associated
"RTN","IBNCPDP2",188,0)
 ;with the prescription specified by:
"RTN","IBNCPDP2",189,0)
 ; IBRX - IEN in file #52
"RTN","IBNCPDP2",190,0)
 ; IBREFILL - zero(0) for the original prescription or the refill
"RTN","IBNCPDP2",191,0)
 ;    number for a refill (IEN of REFILL multiple #52.1)
"RTN","IBNCPDP2",192,0)
 I +$G(IBRX)=0 Q ""
"RTN","IBNCPDP2",193,0)
 I $G(IBREFILL)="" Q ""
"RTN","IBNCPDP2",194,0)
 N IBDIV59
"RTN","IBNCPDP2",195,0)
 S IBDIV59=+$$RXSITE^PSOBPSUT(+IBRX,+IBREFILL)
"RTN","IBNCPDP2",196,0)
 I IBDIV59>0 Q $$GETPHARM^BPSUTIL(IBDIV59)
"RTN","IBNCPDP2",197,0)
 Q ""
"RTN","IBNCPDP2",198,0)
 ;
"RTN","IBNCPDP2",199,0)
CHARGES(IBIFN,IBINS,IBRT,IBAMT,IBDIV,IBTRIC,IBY) ;
"RTN","IBNCPDP2",200,0)
 ; will add charges onto bill based on rate type
"RTN","IBNCPDP2",201,0)
 ;
"RTN","IBNCPDP2",202,0)
 ; Input:  IBIFN = Bill (399) ien
"RTN","IBNCPDP2",203,0)
 ;         IBINS = Insurance Co (36) ien
"RTN","IBNCPDP2",204,0)
 ;         IBRT = Rate Type (399.3) ien
"RTN","IBNCPDP2",205,0)
 ; Output: 1 = Ok all done
"RTN","IBNCPDP2",206,0)
 ;         0 = not ok, bill doesn't have charges
"RTN","IBNCPDP2",207,0)
 ;
"RTN","IBNCPDP2",208,0)
 N IBCSZ,IBRVCD,IBBS,IBUNITS,IBCPT,IBAA,IBTYPE,IBITEM,X
"RTN","IBNCPDP2",209,0)
 ;
"RTN","IBNCPDP2",210,0)
 I 'IBTRIC D BILL^IBCRBC(IBIFN) Q 1
"RTN","IBNCPDP2",211,0)
 ;
"RTN","IBNCPDP2",212,0)
 ; - manually add charge to the claim (based on cost for Tricare)
"RTN","IBNCPDP2",213,0)
 S IBRVCD=$P($G(^DIC(36,IBINS,0)),"^",15) ;                   rx refill rev code
"RTN","IBNCPDP2",214,0)
 S IBCSZ=$G(^IBE(363.1,+$O(^IBE(363.1,"B","RX COST",0)),0)) ; using cost CS
"RTN","IBNCPDP2",215,0)
 I IBRVCD="" S IBRVCD=$P(IBCSZ,U,5) ;                         CS def rev code
"RTN","IBNCPDP2",216,0)
 I IBRVCD="" S X=250 ;                                        gen'l rx rev code
"RTN","IBNCPDP2",217,0)
 ;
"RTN","IBNCPDP2",218,0)
 S IBBS=$P(IBCSZ,U,6) ;                                       CS def bedsection
"RTN","IBNCPDP2",219,0)
 S IBUNITS=1 ;                                                one unit
"RTN","IBNCPDP2",220,0)
 S IBCPT=$P($G(^IBE(350.9,1,1)),"^",30) ;                     def rx refill cpt
"RTN","IBNCPDP2",221,0)
 S IBAA=0 ;                                                   not auto calc charges
"RTN","IBNCPDP2",222,0)
 S IBTYPE=3 ;                                                 rx type
"RTN","IBNCPDP2",223,0)
 S IBITEM="" ;                                                charge item link
"RTN","IBNCPDP2",224,0)
 ;
"RTN","IBNCPDP2",225,0)
 S X=$$ADDRC^IBCRBF(IBIFN,IBRVCD,IBBS,IBAMT,IBUNITS,IBCPT,IBDIV,IBAA,IBTYPE,IBITEM)
"RTN","IBNCPDP2",226,0)
 I X<0 S IBY="-1^^Unable to add Revenue Code charge to claim." Q 0
"RTN","IBNCPDP2",227,0)
 Q 1
"RTN","IBNCPDP2",228,0)
 ;
"RTN","IBNCPDP4")
0^6^B49170045^B48050373
"RTN","IBNCPDP4",1,0)
IBNCPDP4 ;DALOI/AAT - HANDLE ECME EVENTS ;20-JUN-2003
"RTN","IBNCPDP4",2,0)
 ;;2.0;INTEGRATED BILLING;**276,342,405**;21-MAR-94;Build 4
"RTN","IBNCPDP4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPDP4",4,0)
 ;
"RTN","IBNCPDP4",5,0)
 ;NCPDP PHASE III
"RTN","IBNCPDP4",6,0)
 Q
"RTN","IBNCPDP4",7,0)
 ;
"RTN","IBNCPDP4",8,0)
CLOSE(DFN,IBD) ; Close Claim Event
"RTN","IBNCPDP4",9,0)
 N IBADT,IBTRKR,IBTRKRN,IBRXN,IBFIL,IBEABD,IBRES,IBLOCK,IBDUZ
"RTN","IBNCPDP4",10,0)
 N IBRXTYP,IBCR,DA,DIE,DR,IBUSR
"RTN","IBNCPDP4",11,0)
 S IBDUZ=.5
"RTN","IBNCPDP4",12,0)
 S IBRES=1,IBLOCK=0
"RTN","IBNCPDP4",13,0)
 ;
"RTN","IBNCPDP4",14,0)
 I 'DFN S IBRES="0^No patient" G CLOSEQ
"RTN","IBNCPDP4",15,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G CLOSEQ
"RTN","IBNCPDP4",16,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G CLOSEQ
"RTN","IBNCPDP4",17,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G CLOSEQ
"RTN","IBNCPDP4",18,0)
 S IBCR=+$G(IBD("CLOSE REASON")) I 'IBCR S IBRES="0^No close reason" G CLOSEQ
"RTN","IBNCPDP4",19,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G CLOSEQ
"RTN","IBNCPDP4",20,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",21,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",22,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",23,0)
 ;
"RTN","IBNCPDP4",24,0)
 ; -- claims tracking info
"RTN","IBNCPDP4",25,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP4",26,0)
 ; date can't be before parameters
"RTN","IBNCPDP4",27,0)
 S $P(IBTRKR,"^")=$S('$P(IBTRKR,"^",4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP4",28,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP4",29,0)
 ;
"RTN","IBNCPDP4",30,0)
 I 'IBTRKRN S IBRES="0^CT record not found" G CLOSEQ
"RTN","IBNCPDP4",31,0)
 ;
"RTN","IBNCPDP4",32,0)
 D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,IBCR,$G(IBD("DROP TO PAPER")),$G(IBD("RELEASE COPAY")),$G(IBD("CLOSE COMMENT")),IBUSR)
"RTN","IBNCPDP4",33,0)
 ;
"RTN","IBNCPDP4",34,0)
 S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP4",35,0)
 ; add ECME #,ECME flag, remove total charges
"RTN","IBNCPDP4",36,0)
 S DR="1.1///"_IBD("CLAIMID")_";1.11///2;.29////@"
"RTN","IBNCPDP4",37,0)
 D ^DIE
"RTN","IBNCPDP4",38,0)
 ;
"RTN","IBNCPDP4",39,0)
 S IBRES=1 ; OK
"RTN","IBNCPDP4",40,0)
CLOSEQ ;
"RTN","IBNCPDP4",41,0)
 D LOG^IBNCPDP2("CLOSE",IBRES)
"RTN","IBNCPDP4",42,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",43,0)
 Q IBRES
"RTN","IBNCPDP4",44,0)
 ;
"RTN","IBNCPDP4",45,0)
 ;
"RTN","IBNCPDP4",46,0)
RELEASE(DFN,IBD) ;
"RTN","IBNCPDP4",47,0)
 N IBRES,IBADT,IBRXN,IBFIL,IBRDT,IBLOCK,IBLOCK2,IBTRKR,IBTRKRN
"RTN","IBNCPDP4",48,0)
 N IBEABD,IBNBR,DA,DIE,DR,IBUSR
"RTN","IBNCPDP4",49,0)
 S IBLOCK=0
"RTN","IBNCPDP4",50,0)
 I 'DFN S IBRES="0^No patient" G RELQ
"RTN","IBNCPDP4",51,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G RELQ
"RTN","IBNCPDP4",52,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G RELQ
"RTN","IBNCPDP4",53,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G RELQ
"RTN","IBNCPDP4",54,0)
 S IBRDT=+$G(IBD("RELEASE DATE"),-1) I 'IBRDT S IBRES="0^No release date" G RELQ
"RTN","IBNCPDP4",55,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G RELQ
"RTN","IBNCPDP4",56,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",57,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",58,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",59,0)
 ; -- claims tracking info
"RTN","IBNCPDP4",60,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP4",61,0)
 ; date can't be before parameters
"RTN","IBNCPDP4",62,0)
 S $P(IBTRKR,"^")=$S('$P(IBTRKR,"^",4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP4",63,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP4",64,0)
 I 'IBTRKRN S IBRES="0^No CT record found." G RELQ
"RTN","IBNCPDP4",65,0)
 ;
"RTN","IBNCPDP4",66,0)
 ; Remove NBR from CT and set T+60 (if not billed yet)
"RTN","IBNCPDP4",67,0)
 ; Set ECME flags in CT
"RTN","IBNCPDP4",68,0)
 ;
"RTN","IBNCPDP4",69,0)
 L +^IBT(356,IBTRKRN):5 S IBLOCK2=$T
"RTN","IBNCPDP4",70,0)
 S DIE="^IBT(356,",DA=IBTRKRN,DR=""
"RTN","IBNCPDP4",71,0)
 S IBNBR=+$P($G(^IBT(356,IBTRKRN,0)),U,19)
"RTN","IBNCPDP4",72,0)
 ; Clean up "Rx not released"
"RTN","IBNCPDP4",73,0)
 I IBNBR,$P($G(^IBE(356.8,IBNBR,0)),U)="PRESCRIPTION NOT RELEASED" S DR=DR_".19////@;",IBNBR=""
"RTN","IBNCPDP4",74,0)
 ;
"RTN","IBNCPDP4",75,0)
 ; Set EABD if no bill and no NBR
"RTN","IBNCPDP4",76,0)
 I '$P($G(^IBT(356,IBTRKRN,0)),U,11),'IBNBR D
"RTN","IBNCPDP4",77,0)
 . S IBEABD=$$EABD^IBTUTL($O(^IBE(356.6,"AC",4,0)),IBADT)
"RTN","IBNCPDP4",78,0)
 . S:'IBEABD IBEABD=DT
"RTN","IBNCPDP4",79,0)
 . S IBEABD=$$FMADD^XLFDT(IBEABD,60)
"RTN","IBNCPDP4",80,0)
 . S DR=DR_".17////^S X=IBEABD;"
"RTN","IBNCPDP4",81,0)
 ;
"RTN","IBNCPDP4",82,0)
 ; Set ECME Flags
"RTN","IBNCPDP4",83,0)
 S DR=DR_"1.1////"_IBD("CLAIMID")_";"
"RTN","IBNCPDP4",84,0)
 ; Reject status will not be set here
"RTN","IBNCPDP4",85,0)
 ;
"RTN","IBNCPDP4",86,0)
 ; Check that the Fill Date is current
"RTN","IBNCPDP4",87,0)
 I IBADT'=$P(^IBT(356,IBTRKRN,0),U,6) S DR=DR_".06////"_IBADT_";"
"RTN","IBNCPDP4",88,0)
 ;
"RTN","IBNCPDP4",89,0)
 D ^DIE
"RTN","IBNCPDP4",90,0)
 S IBFDA(356,IBTRKRN_",",1.03)=DT  ; date last edited
"RTN","IBNCPDP4",91,0)
 S IBFDA(356,IBTRKRN_",",1.04)=IBUSR   ; last edited by
"RTN","IBNCPDP4",92,0)
 D FILE^DIE("","IBFDA"),MSG^DIALOG()
"RTN","IBNCPDP4",93,0)
 I IBLOCK2 L -^IBT(356,IBTRKRN)
"RTN","IBNCPDP4",94,0)
 ; 
"RTN","IBNCPDP4",95,0)
 S IBRES=1
"RTN","IBNCPDP4",96,0)
RELQ ;
"RTN","IBNCPDP4",97,0)
 D LOG^IBNCPDP2("RELEASE",IBRES)
"RTN","IBNCPDP4",98,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",99,0)
 Q IBRES
"RTN","IBNCPDP4",100,0)
 ;
"RTN","IBNCPDP4",101,0)
SUBMIT(DFN,IBD) ;
"RTN","IBNCPDP4",102,0)
 N IBRES,IBLOCK,IBADT,IBRXN,IBFIL,IBRDT,IBNBR,IBFLAG,IBTRKR,IBTRKRN
"RTN","IBNCPDP4",103,0)
 N IBRESP,DA,DIE,DR,IBUSR
"RTN","IBNCPDP4",104,0)
 S IBLOCK=0
"RTN","IBNCPDP4",105,0)
 I 'DFN S IBRES="0^No patient" G SUBQ
"RTN","IBNCPDP4",106,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G SUBQ
"RTN","IBNCPDP4",107,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G SUBQ
"RTN","IBNCPDP4",108,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G SUBQ
"RTN","IBNCPDP4",109,0)
 S IBRESP=$G(IBD("RESPONSE")) I IBRESP="" S IBRES="0^No response from the payer" G SUBQ
"RTN","IBNCPDP4",110,0)
 S IBRDT=+$G(IBD("RELEASE DATE"),-1)
"RTN","IBNCPDP4",111,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G SUBQ
"RTN","IBNCPDP4",112,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",113,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",114,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",115,0)
 ;
"RTN","IBNCPDP4",116,0)
 ; -- claims tracking info
"RTN","IBNCPDP4",117,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP4",118,0)
 ; date can't be before parameters
"RTN","IBNCPDP4",119,0)
 S $P(IBTRKR,"^")=$S('$P(IBTRKR,"^",4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP4",120,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP4",121,0)
 ;
"RTN","IBNCPDP4",122,0)
 ; If the Rx is not released - set NBR in CT
"RTN","IBNCPDP4",123,0)
 I 'IBRDT,'$P($G(^IBT(356,IBTRKRN,0)),U,19) D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,"PRESCRIPTION NOT RELEASED","","","",IBUSR)
"RTN","IBNCPDP4",124,0)
 ;
"RTN","IBNCPDP4",125,0)
 ; If the Rx is released - clean up NBR in CT
"RTN","IBNCPDP4",126,0)
 I IBRDT,$P($G(^IBE(356.8,+$P($G(^IBT(356,IBTRKRN,0)),U,19),0)),U)="PRESCRIPTION NOT RELEASED" D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,"","","","",IBUSR)
"RTN","IBNCPDP4",127,0)
 ; Set ECME fields in CT
"RTN","IBNCPDP4",128,0)
 S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP4",129,0)
 S IBFLAG=$S(IBRESP["REJECT":1,1:0)
"RTN","IBNCPDP4",130,0)
 S DR="1.1///"_IBD("CLAIMID")_";1.11///"_IBFLAG
"RTN","IBNCPDP4",131,0)
 D ^DIE
"RTN","IBNCPDP4",132,0)
 S IBRES=1
"RTN","IBNCPDP4",133,0)
SUBQ ;
"RTN","IBNCPDP4",134,0)
 D LOG^IBNCPDP2("SUBMIT",IBRES)
"RTN","IBNCPDP4",135,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",136,0)
 Q IBRES
"RTN","IBNCPDP4",137,0)
 ;
"RTN","IBNCPDP4",138,0)
 ;
"RTN","IBNCPDP4",139,0)
REOPEN(DFN,IBD) ;
"RTN","IBNCPDP4",140,0)
 N IBRES,IBADT,IBRXN,IBFIL,IBRDT,IBLOCK,IBLOCK2,IBTRKRN
"RTN","IBNCPDP4",141,0)
 N IBEABD,IBNBR,DA,DIE,DR,IBUSR,IBEABD
"RTN","IBNCPDP4",142,0)
 S (IBLOCK,IBLOCK2)=0
"RTN","IBNCPDP4",143,0)
 I 'DFN S IBRES="0^No patient" G REOPQ
"RTN","IBNCPDP4",144,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G REOPQ
"RTN","IBNCPDP4",145,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G REOPQ
"RTN","IBNCPDP4",146,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G REOPQ
"RTN","IBNCPDP4",147,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G REOPQ
"RTN","IBNCPDP4",148,0)
 S IBRDT=$$RXRLDT^PSOBPSUT(IBRXN,IBFIL)  ; release date (if null is returned then Rx is not released)
"RTN","IBNCPDP4",149,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",150,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",151,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",152,0)
 ;
"RTN","IBNCPDP4",153,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))  ;get the claim entry associated with the Rx fill (or refill)
"RTN","IBNCPDP4",154,0)
 L +^IBT(356,IBTRKRN):5 S IBLOCK2=$T
"RTN","IBNCPDP4",155,0)
 S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP4",156,0)
 ;
"RTN","IBNCPDP4",157,0)
 I IBRDT D   ; if Rx released assign earliest autobill date 
"RTN","IBNCPDP4",158,0)
 . S IBEABD=$$EABD^IBTUTL($O(^IBE(356.6,"AC",4,0)),IBADT)
"RTN","IBNCPDP4",159,0)
 . S:'IBEABD IBEABD=DT
"RTN","IBNCPDP4",160,0)
 . S IBEABD=$$FMADD^XLFDT(IBEABD,60)
"RTN","IBNCPDP4",161,0)
 ;
"RTN","IBNCPDP4",162,0)
 N IBFDA
"RTN","IBNCPDP4",163,0)
 S IBFDA(356,IBTRKRN_",",.19)=$S('IBRDT:$O(^IBE(356.8,"B","PRESCRIPTION NOT RELEASED","")),1:"@")  ;non-billable reason
"RTN","IBNCPDP4",164,0)
 D FILE^DIE("","IBFDA"),MSG^DIALOG()
"RTN","IBNCPDP4",165,0)
 K IBFDA
"RTN","IBNCPDP4",166,0)
 S IBFDA(356,IBTRKRN_",",.17)=$S('IBRDT:"@",1:IBEABD)  ; earliest autobill date
"RTN","IBNCPDP4",167,0)
 S IBFDA(356,IBTRKRN_",",1.08)="@"  ;additional comments
"RTN","IBNCPDP4",168,0)
 S IBFDA(356,IBTRKRN_",",1.11)=0   ; reject flag - reset to "no"
"RTN","IBNCPDP4",169,0)
 S IBFDA(356,IBTRKRN_",",1.03)=DT  ; date last edited
"RTN","IBNCPDP4",170,0)
 S IBFDA(356,IBTRKRN_",",1.04)=IBUSR   ; last edited by
"RTN","IBNCPDP4",171,0)
 D FILE^DIE("","IBFDA"),MSG^DIALOG()
"RTN","IBNCPDP4",172,0)
 ; 
"RTN","IBNCPDP4",173,0)
 S IBRES=1
"RTN","IBNCPDP4",174,0)
REOPQ ;
"RTN","IBNCPDP4",175,0)
 D LOG^IBNCPDP2("REOPEN",IBRES)
"RTN","IBNCPDP4",176,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",177,0)
 I IBLOCK2 L -^IBT(356,IBTRKRN)
"RTN","IBNCPDP4",178,0)
 Q IBRES
"RTN","IBNCPDP4",179,0)
 ;IBNCPDP4
"RTN","IBNCPDPU")
0^1^B69246173^B68802824
"RTN","IBNCPDPU",1,0)
IBNCPDPU ;OAK/ELZ - UTILITIES FOR NCPCP ;6/10/08  13:26
"RTN","IBNCPDPU",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,347,383,405**;21-MAR-94;Build 4
"RTN","IBNCPDPU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDPU",4,0)
 ;
"RTN","IBNCPDPU",5,0)
 ;IA 4702
"RTN","IBNCPDPU",6,0)
 ;
"RTN","IBNCPDPU",7,0)
 ;
"RTN","IBNCPDPU",8,0)
CT(DFN,IBRXN,IBFIL,IBADT,IBRMARK) ; files in claims tracking
"RTN","IBNCPDPU",9,0)
 ; Input:
"RTN","IBNCPDPU",10,0)
 ;  DFN - Patient IEN
"RTN","IBNCPDPU",11,0)
 ;  IBRXN - Rx IEN
"RTN","IBNCPDPU",12,0)
 ;  IBFIL - Fill#
"RTN","IBNCPDPU",13,0)
 ;  IBADT - Fill Date
"RTN","IBNCPDPU",14,0)
 ;  IBRMARK - Non-billable Reason (.01 from 356.8)
"RTN","IBNCPDPU",15,0)
 ;
"RTN","IBNCPDPU",16,0)
 N DIE,DR,DA,IBRXTYP,IBEABD
"RTN","IBNCPDPU",17,0)
 ; Check that the Fill Date is current
"RTN","IBNCPDPU",18,0)
 I IBTRKRN,$G(IBADT),($G(IBADT)'=$P(^IBT(356,IBTRKRN,0),U,6)) D
"RTN","IBNCPDPU",19,0)
 . S DIE="^IBT(356,",DA=IBTRKRN,DR=".06////"_IBADT D ^DIE
"RTN","IBNCPDPU",20,0)
 I IBTRKRN D:$D(IBRMARK)  Q
"RTN","IBNCPDPU",21,0)
 . S DIE="^IBT(356,",DA=IBTRKRN,DR=".19///"_IBRMARK D ^DIE
"RTN","IBNCPDPU",22,0)
 ; event type pointer for rx billing
"RTN","IBNCPDPU",23,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0))
"RTN","IBNCPDPU",24,0)
 ; earliest auto-billing date
"RTN","IBNCPDPU",25,0)
 S IBEABD=$$EABD^IBTUTL(IBRXTYP,$$FMADD^XLFDT(IBADT,60))
"RTN","IBNCPDPU",26,0)
 ; space out earliest auto bill date
"RTN","IBNCPDPU",27,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBADT,IBRXN,IBFIL,$G(IBRMARK),IBEABD)
"RTN","IBNCPDPU",28,0)
 Q
"RTN","IBNCPDPU",29,0)
 ;
"RTN","IBNCPDPU",30,0)
NDC(X) ; Massage the NDC as it is stored in Pharmacy
"RTN","IBNCPDPU",31,0)
 ;  Input:  X  --  The NDC as it is stored in Pharmacy
"RTN","IBNCPDPU",32,0)
 ; Output:  X  --  The NDC in the format 5N 1"-" 4N 1"-" 2N
"RTN","IBNCPDPU",33,0)
 ;
"RTN","IBNCPDPU",34,0)
 I $G(X)="" S X="" G NDCQ
"RTN","IBNCPDPU",35,0)
 ;
"RTN","IBNCPDPU",36,0)
 N LEN,PCE,Y,Z
"RTN","IBNCPDPU",37,0)
 ;
"RTN","IBNCPDPU",38,0)
 S Z(1)=5,Z(2)=4,Z(3)=2
"RTN","IBNCPDPU",39,0)
 S PCE=0 F  S PCE=$O(Z(PCE)) Q:'PCE  S LEN=Z(PCE) D
"RTN","IBNCPDPU",40,0)
 .S Y=$P(X,"-",PCE)
"RTN","IBNCPDPU",41,0)
 .I $L(Y)>LEN S Y=$E(Y,2,LEN+1)
"RTN","IBNCPDPU",42,0)
 .I $L(+Y)<LEN S Y=$$FILL(Y,LEN)
"RTN","IBNCPDPU",43,0)
 .S $P(X,"-",PCE)=Y
"RTN","IBNCPDPU",44,0)
 ;
"RTN","IBNCPDPU",45,0)
NDCQ Q X
"RTN","IBNCPDPU",46,0)
 ;
"RTN","IBNCPDPU",47,0)
FILL(X,LEN) ; Zero-fill, right justified.
"RTN","IBNCPDPU",48,0)
 N Y
"RTN","IBNCPDPU",49,0)
 S:'$G(LEN) LEN=1
"RTN","IBNCPDPU",50,0)
 S Y=$E($G(X),1,LEN)
"RTN","IBNCPDPU",51,0)
 F  Q:$L(Y)>(LEN-1)  S Y="0"_Y
"RTN","IBNCPDPU",52,0)
 Q Y
"RTN","IBNCPDPU",53,0)
 ;
"RTN","IBNCPDPU",54,0)
PLANN(DFN,IBX,IBADT) ; returns the ien in the insurance multiple for the given plan
"RTN","IBNCPDPU",55,0)
 ; /patient privided.
"RTN","IBNCPDPU",56,0)
 ;   ien in multiple^insurance co ien
"RTN","IBNCPDPU",57,0)
 N IBPOL,IBY,IBR
"RTN","IBNCPDPU",58,0)
 S IBR=""
"RTN","IBNCPDPU",59,0)
 D ALL^IBCNS1(DFN,"IBPOL",3,IBADT)
"RTN","IBNCPDPU",60,0)
 S IBY=0 F  S IBY=$O(IBPOL(IBY)) Q:IBY<1!(IBR)  I $P(IBPOL(IBY,0),"^",18)=IBX S IBR=$P(IBPOL(IBY,0),"^")_"^"_IBY
"RTN","IBNCPDPU",61,0)
 Q IBR
"RTN","IBNCPDPU",62,0)
 ;
"RTN","IBNCPDPU",63,0)
RT(DFN,IBINS,IBN) ; returns rate type to use for bill
"RTN","IBNCPDPU",64,0)
 ; pass in insurance by ref and which insurance entry to use
"RTN","IBNCPDPU",65,0)
 ; if '$d(ibn) then it loops through to find the first one
"RTN","IBNCPDPU",66,0)
 ; format is RT (ien) ^ Rate Type (Tort or Awp or Cost) ^ Eligibility Basis (V=vet, T=tricare)
"RTN","IBNCPDPU",67,0)
 N VAEL,VAERR,IBPT,IBRT,IBX,IBE,IBI
"RTN","IBNCPDPU",68,0)
 D ELIG^VADPT
"RTN","IBNCPDPU",69,0)
 ;
"RTN","IBNCPDPU",70,0)
 ; if primary elig is vet type, use reimbursable
"RTN","IBNCPDPU",71,0)
 S IBPT=$P($G(^DIC(8,+VAEL(1),0)),"^",5) ; = N:NON-VETERAN;Y:VETERAN
"RTN","IBNCPDPU",72,0)
 I IBPT="Y" S IBRT=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) Q $S(IBRT:IBRT,1:8)_"^T^V"
"RTN","IBNCPDPU",73,0)
 ;
"RTN","IBNCPDPU",74,0)
 ; if patient is only Tricare elig and only Tricare ins bill for Tricare
"RTN","IBNCPDPU",75,0)
 ; ia #'s 427 & 2516
"RTN","IBNCPDPU",76,0)
 ;  -  determine eligibilities
"RTN","IBNCPDPU",77,0)
 S IBE=$P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(1),0)),"^",9),0)),"^"),IBE($S(IBE="TRICARE"!(IBE="SHARING AGREEMENT"):"T",IBE="CHAMPVA":"C",1:"O"))=""
"RTN","IBNCPDPU",78,0)
 S IBX=0 F  S IBX=$O(VAEL(1,IBX)) Q:'IBX  S IBE=$P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(1,IBX),0)),"^",9),0)),"^") S IBE($S(IBE="TRICARE"!(IBE="SHARING AGREEMENT"):"T",IBE="CHAMPVA":"C",1:"O"))=""
"RTN","IBNCPDPU",79,0)
 ;  -  determine insurance policies
"RTN","IBNCPDPU",80,0)
 S IBX=0 F  S IBX=$O(IBINS(IBX)) Q:'IBX  S IBI=$P($G(^IBE(355.1,+$P($G(IBINS(IBX,355.3)),"^",9),0)),"^") S IBI($S(IBI="TRICARE":"T",IBI="CHAMPVA":"C",1:"O"))=""
"RTN","IBNCPDPU",81,0)
 ;  -  tricare?
"RTN","IBNCPDPU",82,0)
 I $D(IBE("T")),'$D(IBE("O")),'$D(IBE("C")),$D(IBI("T")),'$D(IBI("O")),'$D(IBI("C")) S IBRT=$O(^DGCR(399.3,"B","TRICARE",0)) Q:IBRT IBRT_"^C^T"
"RTN","IBNCPDPU",83,0)
 ;
"RTN","IBNCPDPU",84,0)
 Q $S($D(IBRT):IBRT,1:"0^unable to determine rate type")
"RTN","IBNCPDPU",85,0)
 ;
"RTN","IBNCPDPU",86,0)
 ;
"RTN","IBNCPDPU",87,0)
 ; ********* temp code for tricare/champus ************** not currently used
"RTN","IBNCPDPU",88,0)
 ; if primary elig is TRICARE/CHAMPUS use one of the champus', depending
"RTN","IBNCPDPU",89,0)
 ; on insurance coverage
"RTN","IBNCPDPU",90,0)
 I $P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(3),0)),"^",9),0)),"^")="TRICARE/CHAMPUS" S IBRT=$$UINS("CHAMPUS",.IBINS,.IBN)
"RTN","IBNCPDPU",91,0)
 ;
"RTN","IBNCPDPU",92,0)
 ; if primary elig is CHAMPVA use one of the champva's, depending
"RTN","IBNCPDPU",93,0)
 ; on insurance coverage
"RTN","IBNCPDPU",94,0)
 I $P($G(^DIC(8.1,+$P($G(^DIC(8,+VAEL(3),0)),"^",9),0)),"^")="CHAMPVA" S IBRT=$$UINS("CHAMPVA",.IBINS,.IBN)
"RTN","IBNCPDPU",95,0)
 ;
"RTN","IBNCPDPU",96,0)
 Q $S($D(IBRT):IBRT,1:"0^unable to determine rate type")
"RTN","IBNCPDPU",97,0)
 ;
"RTN","IBNCPDPU",98,0)
 ;
"RTN","IBNCPDPU",99,0)
UINS(IBT,IBINS,IBN) ; in the case of tricare or champva you may have to use
"RTN","IBNCPDPU",100,0)
 ; insurance different rate types insted of the actual tricare or champva
"RTN","IBNCPDPU",101,0)
 N IBRT
"RTN","IBNCPDPU",102,0)
 S IBN=+$G(IBN,$O(IBINS("S",+$O(IBINS("S",0)),0)))
"RTN","IBNCPDPU",103,0)
 I $P($G(^IBE(355.1,+$P($G(IBINS(IBN,355.3)),"^",9),0)),"^")=IBT S IBRT=$O(^DGCR(399.3,"B",IBT,0)),IBRT=$S(IBRT:IBRT_"^"_$S(IBT="CHAMPUS":"A",1:"C"),1:"0^"_IBT_" Rate type not found")
"RTN","IBNCPDPU",104,0)
 I '$D(IBRT) S IBRT=$O(^DGCR(399.3,"B",IBT_" REIMB. INS.",0)),IBRT=$S(IBRT:IBRT_"^"_$S(IBT="CHAMPUS":"A",1:"C"),1:"0^"_IBT_" REIMB. INS. Rate type not found")
"RTN","IBNCPDPU",105,0)
 Q IBRT
"RTN","IBNCPDPU",106,0)
 ;
"RTN","IBNCPDPU",107,0)
BS() ; returns the mccr utility to use
"RTN","IBNCPDPU",108,0)
 N IBX
"RTN","IBNCPDPU",109,0)
 S IBX=0 F  S IBX=$O(^DGCR(399.1,"B","PRESCRIPTION",IBX)) Q:IBX<1  I $P($G(^DGCR(399.1,+$G(IBX),0)),U,5) Q
"RTN","IBNCPDPU",110,0)
 Q IBX
"RTN","IBNCPDPU",111,0)
 ;
"RTN","IBNCPDPU",112,0)
 ; Match IB Bill by the 7-digit ECME number
"RTN","IBNCPDPU",113,0)
RXBIL(IBINP,IBERR) ; Matching NCPDP payments
"RTN","IBNCPDPU",114,0)
 ;Input:
"RTN","IBNCPDPU",115,0)
 ;   IBINP("ECME") - the 7-digit ECME number (Reference Number)
"RTN","IBNCPDPU",116,0)
 ;   IBINP("FILLDT")  - the Rx fill date, YYYYMMDD or FileMan format
"RTN","IBNCPDPU",117,0)
 ;   IBINP("PNM") (optional) - the patient's last name
"RTN","IBNCPDPU",118,0)
 ;Returns:
"RTN","IBNCPDPU",119,0)
 ;   IBERR (by ref) - the error code, or null string if found
"RTN","IBNCPDPU",120,0)
 ;   $$RXBIL - IB Bill IEN, or 0 if not matched
"RTN","IBNCPDPU",121,0)
 N IBKEY,IBECME,BILLDA,IBFOUND,IBMATCH,IBDAT,IBPNAME
"RTN","IBNCPDPU",122,0)
 S IBERR=""
"RTN","IBNCPDPU",123,0)
 S IBECME=$G(IBINP("ECME"))
"RTN","IBNCPDPU",124,0)
 I IBECME'?1.7N S IBERR="Invalid ECME number" Q 0
"RTN","IBNCPDPU",125,0)
 S IBDAT=$G(IBINP("FILLDT")) ; Rx fill date
"RTN","IBNCPDPU",126,0)
 I IBDAT?8N S IBDAT=($E(IBDAT,1,4)-1700)_$E(IBDAT,5,8) ; conv date to FM format
"RTN","IBNCPDPU",127,0)
 I IBDAT'?7N Q $$RXBILND(IBECME)  ; date is not correct or null
"RTN","IBNCPDPU",128,0)
 S IBPNAME=$G(IBINP("PNM")) ; patient's name (optional)
"RTN","IBNCPDPU",129,0)
 S IBKEY=+IBECME_";"_IBDAT ; The ECME Number (BC ID)
"RTN","IBNCPDPU",130,0)
 S BILLDA="",IBFOUND=0,IBMATCH=0
"RTN","IBNCPDPU",131,0)
 ; Search backward
"RTN","IBNCPDPU",132,0)
 F  S BILLDA=$O(^DGCR(399,"AG",IBKEY,BILLDA),-1) Q:BILLDA=""  D  Q:IBFOUND
"RTN","IBNCPDPU",133,0)
 . I 'BILLDA Q  ; IEN must be numeric
"RTN","IBNCPDPU",134,0)
 . I '$D(^DGCR(399,BILLDA,0)) Q  ; Corrupted index
"RTN","IBNCPDPU",135,0)
 . S IBMATCH=1
"RTN","IBNCPDPU",136,0)
 . I IBPNAME'="" I '$$TXMATCH($P(IBPNAME,","),$P($G(^DPT(+$P(^DGCR(399,BILLDA,0),U,2),0)),","),8) Q  ; Patient name doesn't match
"RTN","IBNCPDPU",137,0)
 . S IBFOUND=1
"RTN","IBNCPDPU",138,0)
 I 'BILLDA S IBERR=$S(IBMATCH:"Patient's name does not match",1:"Matching bill not found") ; not matched
"RTN","IBNCPDPU",139,0)
 Q +BILLDA
"RTN","IBNCPDPU",140,0)
 ;
"RTN","IBNCPDPU",141,0)
RXBILND(IBECME) ;Match the bill with no date
"RTN","IBNCPDPU",142,0)
 N IBKEY,IBBC,BILLDA,IBY,IBCUT
"RTN","IBNCPDPU",143,0)
 S IBKEY=+IBECME_";"
"RTN","IBNCPDPU",144,0)
 S IBCUT=$$FMADD^XLFDT(DT,-180) ; only 180 days in the past
"RTN","IBNCPDPU",145,0)
 S BILLDA=0
"RTN","IBNCPDPU",146,0)
 ; Search PRNT/TX forward
"RTN","IBNCPDPU",147,0)
 S IBBC=IBKEY_IBCUT
"RTN","IBNCPDPU",148,0)
 F  S IBBC=$O(^DGCR(399,"AG",IBBC)) Q:IBBC'[IBKEY  D  Q:BILLDA
"RTN","IBNCPDPU",149,0)
 . S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY)) Q:'IBY  D  Q:BILLDA
"RTN","IBNCPDPU",150,0)
 .. I $P($G(^DGCR(399,+IBY,0)),U,13)'=4 Q  ; not PRNT/TX
"RTN","IBNCPDPU",151,0)
 .. S BILLDA=+IBY
"RTN","IBNCPDPU",152,0)
 I BILLDA Q BILLDA
"RTN","IBNCPDPU",153,0)
 ; Search ANY backward
"RTN","IBNCPDPU",154,0)
 S IBBC=IBKEY_"8000000"
"RTN","IBNCPDPU",155,0)
 F  S IBBC=$O(^DGCR(399,"AG",IBBC),-1) Q:IBBC'[IBKEY  Q:$P(IBBC,";",2)<IBCUT  D  Q:BILLDA
"RTN","IBNCPDPU",156,0)
 . S IBY="" F  S IBY=$O(^DGCR(399,"AG",IBBC,IBY),-1) Q:IBY=""  D  Q:BILLDA
"RTN","IBNCPDPU",157,0)
 .. ;I $P($G(^DGCR(399,+IBY,0)),U,13)'=7 Q  ; not CANCELLED
"RTN","IBNCPDPU",158,0)
 .. S BILLDA=+IBY
"RTN","IBNCPDPU",159,0)
 Q BILLDA
"RTN","IBNCPDPU",160,0)
 ;
"RTN","IBNCPDPU",161,0)
 ;Check matching of two strings - case insensitive, no spaces etc.
"RTN","IBNCPDPU",162,0)
TXMATCH(IBTXT1,IBTXT2,IBMAX) ;
"RTN","IBNCPDPU",163,0)
 N IBTR1,IBTR2,IBT1,IBT2
"RTN","IBNCPDPU",164,0)
 ;Checking only first IBMAX characters (long names may be trancated
"RTN","IBNCPDPU",165,0)
 S IBTR1="ABCDEFGHIJKLMNOPQRSTUVWXYZ:;"",'._()<>/\|@#$%&*-=!`~ "
"RTN","IBNCPDPU",166,0)
 S IBTR2="abcdefghijklmnopqrstuvwxyz"
"RTN","IBNCPDPU",167,0)
 S IBT1=$E($TR(IBTXT1,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",168,0)
 S IBT2=$E($TR(IBTXT2,IBTR1,IBTR2),1,IBMAX)
"RTN","IBNCPDPU",169,0)
 Q IBT1=IBT2
"RTN","IBNCPDPU",170,0)
 ;
"RTN","IBNCPDPU",171,0)
ECMEBIL(DFN,IBADT) ; Is the pat ECME Billable (pharmacy coverage only)
"RTN","IBNCPDPU",172,0)
 ; DFN - ptr to the patient
"RTN","IBNCPDPU",173,0)
 ; IBADT  - the date
"RTN","IBNCPDPU",174,0)
 N IBANY,IBERMSG,IBX,IBINS,IBT,IBZ,IBRES,IBCAT,IBCOV,IBPCOV
"RTN","IBNCPDPU",175,0)
 S IBRES=0 ; Not ECME Billable by default
"RTN","IBNCPDPU",176,0)
 S (IBCOV,IBPCOV)=0
"RTN","IBNCPDPU",177,0)
 ; -- look up ins with Rx
"RTN","IBNCPDPU",178,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDPU",179,0)
 S IBERMSG="" ; Error message
"RTN","IBNCPDPU",180,0)
 S IBCAT=$O(^IBE(355.31,"B","PHARMACY",0))
"RTN","IBNCPDPU",181,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D  Q:IBRES
"RTN","IBNCPDPU",182,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D  Q:IBRES
"RTN","IBNCPDPU",183,0)
 . . N IBZ,IBPIEN,IBY,IBPL
"RTN","IBNCPDPU",184,0)
 . . S IBZ=$G(IBINS(IBT,0))
"RTN","IBNCPDPU",185,0)
 . . S IBPL=+$P(IBZ,U,18) Q:'IBPL
"RTN","IBNCPDPU",186,0)
 . . S IBCOV=1 ; covered
"RTN","IBNCPDPU",187,0)
 . . I '$$PLCOV^IBCNSU3(IBPL,IBADT,IBCAT) Q
"RTN","IBNCPDPU",188,0)
 . . S IBPCOV=1
"RTN","IBNCPDPU",189,0)
 . . S IBPIEN=+$G(^IBA(355.3,IBPL,6))
"RTN","IBNCPDPU",190,0)
 . . I 'IBPIEN S IBERMSG="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDPU",191,0)
 . . D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDPU",192,0)
 . . I $E($G(IBY(1)))'="A" S:IBERMSG="" IBERMSG=$$ERMSG^IBNCPDP1($P($G(IBY(6)),",")) Q
"RTN","IBNCPDPU",193,0)
 . . S IBRES=1
"RTN","IBNCPDPU",194,0)
 I 'IBCOV Q "0^Not Insured"
"RTN","IBNCPDPU",195,0)
 I 'IBPCOV Q "0^No Pharmacy Coverage"
"RTN","IBNCPDPU",196,0)
 I 'IBRES,IBERMSG'="" Q "0^"_IBERMSG
"RTN","IBNCPDPU",197,0)
 I 'IBRES Q "0^No Insurance ECME billable"
"RTN","IBNCPDPU",198,0)
 ;
"RTN","IBNCPDPU",199,0)
 Q IBRES
"RTN","IBNCPDPU",200,0)
 ;
"RTN","IBNCPDPU",201,0)
SUBMIT(IBRX,IBFIL) ; Submit the Rx claim through ECME
"RTN","IBNCPDPU",202,0)
 ; IBRX - RX ien in file #52
"RTN","IBNCPDPU",203,0)
 ; IBFIL - Fill No (0 for orig fill)
"RTN","IBNCPDPU",204,0)
 N IBDT,IBNDC,IBX
"RTN","IBNCPDPU",205,0)
 I '$G(IBRX)!('$D(IBFIL)) Q "0^Invalid parameters."
"RTN","IBNCPDPU",206,0)
 S IBDT=$S('IBFIL:$$FILE^IBRXUTL(IBRX,22),1:$$SUBFILE^IBRXUTL(IBRX,IBFIL,52,.01))
"RTN","IBNCPDPU",207,0)
 S IBX=$$EN^BPSNCPDP(+IBRX,+IBFIL,IBDT,"BB")
"RTN","IBNCPDPU",208,0)
 I +IBX=0 D ECMEACT^PSOBPSU1(+IBRX,+IBFIL,"Claim submitted to 3rd party payer: IB BACK BILLING")
"RTN","IBNCPDPU",209,0)
 Q IBX
"RTN","IBNCPDPU",210,0)
 ;
"RTN","IBNCPDPU",211,0)
REASON(IBX,EXACT) ; Close Claim Reasons
"RTN","IBNCPDPU",212,0)
 Q $P($G(^IBE(356.8,+IBX,0)),U) ; non-billable reason
"RTN","IBNCPDPU",213,0)
 ;
"RTN","IBNCPDPU",214,0)
NABP(IBIFN) ;NABP Number
"RTN","IBNCPDPU",215,0)
 N IBY,IBTRKN,IBRX,IBFIL,IBZ,IBNABP
"RTN","IBNCPDPU",216,0)
 S IBY=+$O(^IBT(356.399,"C",IBIFN,0)) I 'IBY Q ""
"RTN","IBNCPDPU",217,0)
 S IBTRKN=$P($G(^IBT(356.399,IBY,0)),U) I 'IBTRKN Q ""
"RTN","IBNCPDPU",218,0)
 S IBZ=$G(^IBT(356,IBTRKN,0)) I IBZ="" Q ""
"RTN","IBNCPDPU",219,0)
 S IBRX=$P(IBZ,U,8)
"RTN","IBNCPDPU",220,0)
 S IBFIL=$P(IBZ,U,10)
"RTN","IBNCPDPU",221,0)
 S IBNABP=$$NABP^BPSBUTL(IBRX,IBFIL)
"RTN","IBNCPDPU",222,0)
 Q $S(IBNABP=0:"",1:IBNABP)
"RTN","IBNCPDPU",223,0)
 ;
"RTN","IBNCPDPU",224,0)
 ; Get the K-bill# from CT
"RTN","IBNCPDPU",225,0)
BILL(IBRX,IBFIL) ;
"RTN","IBNCPDPU",226,0)
 N IBTRKN,IBIFN
"RTN","IBNCPDPU",227,0)
 S IBTRKN=+$O(^IBT(356,"ARXFL",+$G(IBRX),+$G(IBFIL),""))
"RTN","IBNCPDPU",228,0)
 S IBIFN=+$P($G(^IBT(356,IBTRKN,0)),U,11)
"RTN","IBNCPDPU",229,0)
 Q $P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBNCPDPU",230,0)
 ;
"RTN","IBNCPDPU",231,0)
REJECT(IBECME,IBDATE) ; Is the e-claim rejected?
"RTN","IBNCPDPU",232,0)
 N IBINP,IBTRKRN,IBY
"RTN","IBNCPDPU",233,0)
 I IBECME'?1.7N Q 0
"RTN","IBNCPDPU",234,0)
 ;S IBINP("ECME")=IBECME
"RTN","IBNCPDPU",235,0)
 ;S IBINP("FILLDT")=IBDATE
"RTN","IBNCPDPU",236,0)
 ;I $$RXBIL(.IBINP) Q 0  ; bill exists
"RTN","IBNCPDPU",237,0)
 S IBTRKRN=+$O(^IBT(356,"AE",IBECME,0)) I 'IBTRKRN Q 0
"RTN","IBNCPDPU",238,0)
 S IBY=$G(^IBT(356,IBTRKRN,1))
"RTN","IBNCPDPU",239,0)
 I $P(IBY,U,11)>0 Q 1  ; Rejected or closed
"RTN","IBNCPDPU",240,0)
 Q 0
"RTN","IBNCPDPU",241,0)
 ;
"RTN","IBNCPDPU",242,0)
 ;
"RTN","IBNCPDPU",243,0)
 ;IBNCPDPU
"RTN","IBTRKR3")
0^4^B50230305^B49526056
"RTN","IBTRKR3",1,0)
IBTRKR3 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK RX FILLS ;13-AUG-93
"RTN","IBTRKR3",2,0)
 ;;2.0;INTEGRATED BILLING;**13,43,121,160,247,275,260,309,336,312,339,347,405**;21-MAR-94;Build 4
"RTN","IBTRKR3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR3",4,0)
 ;
"RTN","IBTRKR3",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR3",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR3",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-14)-.1
"RTN","IBTRKR3",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-7)+.9
"RTN","IBTRKR3",9,0)
 D EN1
"RTN","IBTRKR3",10,0)
 Q
"RTN","IBTRKR3",11,0)
 ;
"RTN","IBTRKR3",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR3",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI() ;IB*2.0*312
"RTN","IBTRKR3",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK,IBMESS
"RTN","IBTRKR3",15,0)
 S IBTALK=1
"RTN","IBTRKR3",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prescription Refills is currently turned off." G ENQ
"RTN","IBTRKR3",17,0)
 W !!!,"Select the Date Range of Rx Refills to Add to Claims Tracking.",!
"RTN","IBTRKR3",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR3",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR3",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR3",21,0)
 ;
"RTN","IBTRKR3",22,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Date ;IB*2.0*312
"RTN","IBTRKR3",23,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR3",24,0)
 .W !!,"The Begin OR End Date CANNOT be on or after"
"RTN","IBTRKR3",25,0)
 .W !,"the PFSS Effective Date: ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR3",26,0)
 ;
"RTN","IBTRKR3",27,0)
 ; -- check selected dates
"RTN","IBTRKR3",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR3",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR3",31,0)
 ; -- end date into future
"RTN","IBTRKR3",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR3",33,0)
 ;
"RTN","IBTRKR3",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR3",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR3",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR3",ZTSAVE("IB*")="",ZTDESC="IB - Add Rx Refills to Claims Tracking"
"RTN","IBTRKR3",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR3",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR3",39,0)
 D HOME^%ZIS
"RTN","IBTRKR3",40,0)
 Q
"RTN","IBTRKR3",41,0)
 ;
"RTN","IBTRKR3",42,0)
EN1 ; -- add rx refills to claims tracking file
"RTN","IBTRKR3",43,0)
 N I,J,X,Y,IBTRKR,IBDT,IBRXN,IBFILL,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2,LIST1
"RTN","IBTRKR3",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI() ;IB*2.0*312
"RTN","IBTRKR3",45,0)
 N IBICD,IBCOPAY
"RTN","IBTRKR3",46,0)
 ;
"RTN","IBTRKR3",47,0)
 ; -- check parameters
"RTN","IBTRKR3",48,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR3",49,0)
 G:'$P(IBTRKR,"^",4) EN1Q ; quit if rx tracking off
"RTN","IBTRKR3",50,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR3",51,0)
 ;
"RTN","IBTRKR3",52,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR3",53,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR3",54,0)
 ;
"RTN","IBTRKR3",55,0)
 S IBRXTYP=$O(^IBE(356.6,"AC",4,0)) ; event type pointer for rx billing
"RTN","IBTRKR3",56,0)
 ;
"RTN","IBTRKR3",57,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR3",58,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR3",59,0)
 S IBDT=IBTSBDT-.0001
"RTN","IBTRKR3",60,0)
 S LIST1="IBTRKAD"
"RTN","IBTRKR3",61,0)
 D REF^PSO52EX(IBDT,IBTSEDT,LIST1)
"RTN","IBTRKR3",62,0)
 S IBDT=0
"RTN","IBTRKR3",63,0)
 F  S IBDT=$O(^TMP($J,LIST1,"AD",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR3",64,0)
 .S IBRXN=0
"RTN","IBTRKR3",65,0)
 .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q
"RTN","IBTRKR3",66,0)
 .F  S IBRXN=$O(^TMP($J,LIST1,"AD",IBDT,IBRXN)) Q:'IBRXN  D
"RTN","IBTRKR3",67,0)
 ..S IBFILL=""
"RTN","IBTRKR3",68,0)
 ..F  S IBFILL=$O(^TMP($J,LIST1,"AD",IBDT,IBRXN,IBFILL)) Q:IBFILL=""  D RXCHK
"RTN","IBTRKR3",69,0)
 K ^TMP($J,LIST1)
"RTN","IBTRKR3",70,0)
 ;
"RTN","IBTRKR3",71,0)
 I $G(IBTALK) D BULL^IBTRKR31
"RTN","IBTRKR3",72,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR3",73,0)
 Q
"RTN","IBTRKR3",74,0)
 ;
"RTN","IBTRKR3",75,0)
RXCHK ; -- check and add rx
"RTN","IBTRKR3",76,0)
 N IBND,LIST,NODE
"RTN","IBTRKR3",77,0)
 S IBCNT=IBCNT+1
"RTN","IBTRKR3",78,0)
 ;I IBFILL<1 G RXCHKQ ; original fill
"RTN","IBTRKR3",79,0)
 I IBDT>(DT+.24) G RXCHKQ ; future fill
"RTN","IBTRKR3",80,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR3",81,0)
 ;
"RTN","IBTRKR3",82,0)
 S DFN=$$FILE^IBRXUTL(IBRXN,2)
"RTN","IBTRKR3",83,0)
 S IBRXDATA=$$RXZERO^IBRXUTL(DFN,IBRXN),IBRXSTAT=$$FILE^IBRXUTL(IBRXN,100,"I")
"RTN","IBTRKR3",84,0)
 ;I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") G RXCHKQ ;scheduled appointment on same day as fill date
"RTN","IBTRKR3",85,0)
 ;I $$BABCSC^IBEFUNC(DFN,$P(IBDT,".",1)) G RXCHKQ ; is billable clinic stop in encounter file for data (allows telephone stops on same day, but not others) (P121 - RC, can now bill Rx if on same day as opt visit)
"RTN","IBTRKR3",86,0)
 ;
"RTN","IBTRKR3",87,0)
 ; -- not already in claims tracking
"RTN","IBTRKR3",88,0)
 I $O(^IBT(356,"ARXFL",IBRXN,IBFILL,"")) G RXCHKQ ; already in claims tracking
"RTN","IBTRKR3",89,0)
 ;
"RTN","IBTRKR3",90,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR3",91,0)
 I $P(IBTRKR,"^",4)=1,'$$INSURED^IBCNS1(DFN,IBDT) G RXCHKQ ; patient not insure
"RTN","IBTRKR3",92,0)
 ;
"RTN","IBTRKR3",93,0)
 ; -- check rx status (not deleted)
"RTN","IBTRKR3",94,0)
 I IBRXSTAT=13 G RXCHKQ
"RTN","IBTRKR3",95,0)
 ;
"RTN","IBTRKR3",96,0)
 ; -- Don't PROCESS IF there is already a PFSS ACCT REF# -- ;IB*2.0*312
"RTN","IBTRKR3",97,0)
 I 'IBFILL,+$$FILE^IBRXUTL(IBRXN,125) G RXCHKQ
"RTN","IBTRKR3",98,0)
 I +IBFILL,+$$SUBFILE^IBRXUTL(IBRXN,IBFILL,52,21) G RXCHKQ
"RTN","IBTRKR3",99,0)
 ;
"RTN","IBTRKR3",100,0)
 ; -- original fill not released or returned to stock
"RTN","IBTRKR3",101,0)
 I 'IBFILL,'$$FILE^IBRXUTL(IBRXN,31) G RXCHKQ
"RTN","IBTRKR3",102,0)
 I 'IBFILL,$$FILE^IBRXUTL(IBRXN,32.1) G RXCHKQ
"RTN","IBTRKR3",103,0)
 ;
"RTN","IBTRKR3",104,0)
 ; -- refill not released or returned to stock
"RTN","IBTRKR3",105,0)
 I +IBFILL,'$$SUBFILE^IBRXUTL(IBRXN,IBFILL,52,17) G RXCHKQ
"RTN","IBTRKR3",106,0)
 I +IBFILL,$$SUBFILE^IBRXUTL(IBRXN,IBFILL,52,14) G RXCHKQ
"RTN","IBTRKR3",107,0)
 ;
"RTN","IBTRKR3",108,0)
 ; -- check drug (not investigational, supply, over the counter drug, or nutritional supplement
"RTN","IBTRKR3",109,0)
 S IBDRUG=$P(IBRXDATA,"^",6)
"RTN","IBTRKR3",110,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBTRKR3",111,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBTRKR3",112,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTRKR3",113,0)
 I IBDEA["I"!(IBDEA["S")!(IBDEA["9")!(IBDEA["N") G RXCHKQ ; investigational drug, supply, otc, or nutritional supplement
"RTN","IBTRKR3",114,0)
 ;
"RTN","IBTRKR3",115,0)
 ; -- see if insured for prescriptions
"RTN","IBTRKR3",116,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED")
"RTN","IBTRKR3",117,0)
 ;
"RTN","IBTRKR3",118,0)
 ; -- check sc status and others
"RTN","IBTRKR3",119,0)
 ; -- new ICD node in PSO with CIDC, if it exists use this for determination
"RTN","IBTRKR3",120,0)
 S LIST="IBTRKRLST"
"RTN","IBTRKR3",121,0)
 S NODE="ICD"
"RTN","IBTRKR3",122,0)
 S IBICD=0,IBCOPAY=0
"RTN","IBTRKR3",123,0)
 D RX^PSO52API(DFN,LIST,IBRXN,,NODE,,)
"RTN","IBTRKR3",124,0)
 I +$G(^TMP($J,LIST,DFN,IBRXN,"ICD",0))>0 S IBICD=1 ;Setup ICD Flag
"RTN","IBTRKR3",125,0)
 I +$$IBND^IBRXUTL(DFN,IBRXN)>0 S IBCOPAY=1 ;Setup Copay Flag
"RTN","IBTRKR3",126,0)
 I $G(IBRMARK)="",IBICD D CL^SDCO21(DFN,IBDT,"",.IBARR) I $D(IBARR) D
"RTN","IBTRKR3",127,0)
 .S IBM=0
"RTN","IBTRKR3",128,0)
 .F  S IBM=$O(^TMP($J,LIST,DFN,IBRXN,"ICD",IBM)) Q:'IBM!($G(IBRMARK)'="")  D
"RTN","IBTRKR3",129,0)
 ..S IBZ=$$ICD^IBRXUTL1(DFN,IBRXN,IBM,LIST) F IBP=1:1:7 Q:$G(IBRMARK)'=""  I $D(IBARR(IBP)) D
"RTN","IBTRKR3",130,0)
 ... S IBRMARK=$S($P(IBZ,"^",IBP+1):$P($T(EXEMPT+IBP),";",3),$P(IBZ,"^",IBP+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR3",131,0)
 ;
"RTN","IBTRKR3",132,0)
 ; -- no new ICD node in PSO, use old method of determining status
"RTN","IBTRKR3",133,0)
 I $G(IBRMARK)="",'IBICD D
"RTN","IBTRKR3",134,0)
 . D ELIG^VADPT
"RTN","IBTRKR3",135,0)
 . ;if the patient is covered by insurance for pharmacy ($G(IBRMARK)="")
"RTN","IBTRKR3",136,0)
 . ;AND if no copay in #350
"RTN","IBTRKR3",137,0)
 . ;then we need to determine the non billable reason and set IBRMARK
"RTN","IBTRKR3",138,0)
 . ;
"RTN","IBTRKR3",139,0)
 . ;IF VAEL(3) -- if this is a veteran with SC(service connection) status
"RTN","IBTRKR3",140,0)
 . I VAEL(3),'IBCOPAY D
"RTN","IBTRKR3",141,0)
 . . I $P(VAEL(3),"^",2)>49 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",142,0)
 . . ;in case of POW and Unempl.vet we cannot decide if the 3rd party should be exempt
"RTN","IBTRKR3",143,0)
 . . N IBPOWUNV,IBAUTRET S IBAUTRET=$$AUTOINFO^DGMTCOU1(DFN),IBPOWUNV=$S($P(IBAUTRET,U,8):1,$P(IBAUTRET,U,9):1,1:0)
"RTN","IBTRKR3",144,0)
 . . I $P(VAEL(3),"^",2)<50 S IBRMARK=$S(IBPOWUNV:"NEEDS SC DETERMINATION",1:"SC TREATMENT")
"RTN","IBTRKR3",145,0)
 . . I $$RXST^IBARXEU(DFN,$P(IBRXDATA,U,13))>0 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBTRKR3",146,0)
 . ;
"RTN","IBTRKR3",147,0)
 . ;IF +VAEL(3)=0 if the veteran doesn't have SC status, but
"RTN","IBTRKR3",148,0)
 . ;the veteran still may have CV status active
"RTN","IBTRKR3",149,0)
 . I $G(IBRMARK)="",+VAEL(3)=0,'IBCOPAY D
"RTN","IBTRKR3",150,0)
 . . I $$CVEDT^IBACV(DFN,IBDT) S IBRMARK="NEEDS SC DETERMINATION" ;SC-because IB staff usually is using this reason to search for cases that need to be reviewed. COMBAT VETERAN reason will be used after review if this was a case
"RTN","IBTRKR3",151,0)
 K ^TMP($J,LIST)
"RTN","IBTRKR3",152,0)
 ;
"RTN","IBTRKR3",153,0)
 ;
"RTN","IBTRKR3",154,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR3",155,0)
 D REFILL^IBTUTL1(DFN,IBRXTYP,IBDT,IBRXN,IBFILL,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR3",156,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR3",157,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR3",158,0)
 K IBANY,IBRMARK,VAEL,VA,IBDEA,IBDRUG,IBRXSTAT,IBRXDATA,DFN,X,Y
"RTN","IBTRKR3",159,0)
 K IBARR,IBM,IBZ,IBP
"RTN","IBTRKR3",160,0)
RXCHKQ Q
"RTN","IBTRKR3",161,0)
 ;
"RTN","IBTRKR3",162,0)
EXEMPT ; exemption reasons
"RTN","IBTRKR3",163,0)
 ;;AGENT ORANGE
"RTN","IBTRKR3",164,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR3",165,0)
 ;;SC TREATMENT
"RTN","IBTRKR3",166,0)
 ;;SOUTHWEST ASIA
"RTN","IBTRKR3",167,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR3",168,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR3",169,0)
 ;;COMBAT VETERAN
"RTN","IBTRKR3",170,0)
 ;;PROJECT 112/SHAD
"RTN","IBTRKR3",171,0)
 ;;
"RTN","IBTRKR31")
0^5^B9625105^B9498520
"RTN","IBTRKR31",1,0)
IBTRKR31 ;ALB/AAS - CLAIMS TRACKING - DBLCHK RX FILLS ; 13-AUG-93
"RTN","IBTRKR31",2,0)
 ;;2.0;INTEGRATED BILLING;**33,121,160,309,347,405**;21-MAR-94;Build 4
"RTN","IBTRKR31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR31",4,0)
 ;
"RTN","IBTRKR31",5,0)
% ; -- Double check rx data routine
"RTN","IBTRKR31",6,0)
DBLCHK(IBTRN) ; -- double check rx before billing, input tracking id
"RTN","IBTRKR31",7,0)
 N IBX,IBFILL,IBFILLD,IBRXN,IBTRND,IBRMARK,IBRXSTAT,IBDEA,IBDRUG,IBRXDATA,X,Y,IBY,IBDFN
"RTN","IBTRKR31",8,0)
 S IBX=0
"RTN","IBTRKR31",9,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)) I IBTRND="" G DBLCHKQ
"RTN","IBTRKR31",10,0)
 S IBRXN=$P(IBTRND,"^",8),IBFILL=$P(IBTRND,"^",10),IBFILLD=""
"RTN","IBTRKR31",11,0)
 ;
"RTN","IBTRKR31",12,0)
 S IBDFN=$$FILE^IBRXUTL(IBRXN,2)
"RTN","IBTRKR31",13,0)
 I IBFILL=0 S IBY=$$RXSEC^IBRXUTL(IBDFN,IBRXN),IBFILLD=$P(IBY,U,2)_U_$P(IBY,U,13)_U_$P(IBY,U,15)
"RTN","IBTRKR31",14,0)
 I IBFILL>0 S IBY=$$ZEROSUB^IBRXUTL(IBDFN,IBRXN,IBFILL),IBFILLD=$P(IBY,U,1)_U_$P(IBY,U,18)_U_$P(IBY,U,16)
"RTN","IBTRKR31",15,0)
 ;
"RTN","IBTRKR31",16,0)
 I (IBFILL'>0&(IBFILL'=0))!(IBRXN<1) S IBRMARK="INVALID PRESCRIPTION ENTRY" G DBLCHKQ
"RTN","IBTRKR31",17,0)
 ;
"RTN","IBTRKR31",18,0)
 S IBRXDATA=$$RXZERO^IBRXUTL(IBDFN,IBRXN),IBRXSTAT=$P(IBRXDATA,"^",15)
"RTN","IBTRKR31",19,0)
 ;S DFN=+$P(IBRXDATA,"^",2),IBDT=+IBFILLD
"RTN","IBTRKR31",20,0)
 ;I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") S IBRMARK="REFILL ON VISIT DATE" G DBLCHKQ
"RTN","IBTRKR31",21,0)
 ;
"RTN","IBTRKR31",22,0)
 ; -- check rx status (not  deleted)
"RTN","IBTRKR31",23,0)
 I IBRXSTAT=13 S IBRMARK="PRESCRIPTION DELETED" G DBLCHKQ
"RTN","IBTRKR31",24,0)
 ;
"RTN","IBTRKR31",25,0)
 ; -- refill not released or returned to stock
"RTN","IBTRKR31",26,0)
 I '$P(IBFILLD,"^",2) S IBRMARK="PRESCRIPTION NOT RELEASED" G DBLCHKQ
"RTN","IBTRKR31",27,0)
 I $P(IBFILLD,"^",3) S IBRMARK="PRESCRIPTION NOT RELEASED" G DBLCHKQ
"RTN","IBTRKR31",28,0)
 ;
"RTN","IBTRKR31",29,0)
 ; -- check drug (not investigational, supply, or over the counter drug
"RTN","IBTRKR31",30,0)
 S IBDRUG=$P(IBRXDATA,"^",6)
"RTN","IBTRKR31",31,0)
 D ZERO^IBRXUTL(IBDRUG)
"RTN","IBTRKR31",32,0)
 S IBDEA=$G(^TMP($J,"IBDRUG",+IBDRUG,3))
"RTN","IBTRKR31",33,0)
 I IBDEA["I"!(IBDEA["S")!(IBDEA["9")!(IBDEA["N") S IBRMARK="DRUG NOT BILLABLE" G DBLCHKQ ; investigational drug, supply or otc
"RTN","IBTRKR31",34,0)
 ;
"RTN","IBTRKR31",35,0)
 S IBX=1
"RTN","IBTRKR31",36,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBTRKR31",37,0)
 ;
"RTN","IBTRKR31",38,0)
DBLCHKQ I $G(IBRMARK)]"" D
"RTN","IBTRKR31",39,0)
 .S IBRMARK=$O(^IBE(356.8,"B",IBRMARK,0)) I 'IBRMARK S IBRMARK=999
"RTN","IBTRKR31",40,0)
 .N DA,DR,DIC,DIE
"RTN","IBTRKR31",41,0)
 .L +^IBT(356,+IBTRN):5 I '$T Q
"RTN","IBTRKR31",42,0)
 .S DA=IBTRN,DIE="^IBT(356,",DR=".19////"_IBRMARK
"RTN","IBTRKR31",43,0)
 .D ^DIE
"RTN","IBTRKR31",44,0)
 .L -^IBT(356,+IBTRN)
"RTN","IBTRKR31",45,0)
 Q IBX
"RTN","IBTRKR31",46,0)
 ;
"RTN","IBTRKR31",47,0)
 ;
"RTN","IBTRKR31",48,0)
BULL ; -- send bulletin
"RTN","IBTRKR31",49,0)
 ;
"RTN","IBTRKR31",50,0)
 S XMSUB="Rx Refills added to Claims Tracking Complete"
"RTN","IBTRKR31",51,0)
 S IBT(1)="The process to automatically add Rx Refills has successfully completed."
"RTN","IBTRKR31",52,0)
 S IBT(1.1)=""
"RTN","IBTRKR31",53,0)
 S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR31",54,0)
 S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR31",55,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR31",56,0)
 S IBT(4)=""
"RTN","IBTRKR31",57,0)
 S IBT(5)="  Total Rx fills checked: "_$G(IBCNT)
"RTN","IBTRKR31",58,0)
 S IBT(6)="Total NSC Rx fills Added: "_$G(IBCNT1)
"RTN","IBTRKR31",59,0)
 S IBT(7)=" Total SC Rx fills Added: "_$G(IBCNT2)
"RTN","IBTRKR31",60,0)
 S IBT(8)=""
"RTN","IBTRKR31",61,0)
 S IBT(9)="*The fills added as SC require determination and editing to be billed"
"RTN","IBTRKR31",62,0)
 D SEND
"RTN","IBTRKR31",63,0)
BULLQ Q
"RTN","IBTRKR31",64,0)
 ;
"RTN","IBTRKR31",65,0)
SEND S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBTRKR31",66,0)
 K XMY S XMN=0
"RTN","IBTRKR31",67,0)
 S XMY(DUZ)=""
"RTN","IBTRKR31",68,0)
 D ^XMD
"RTN","IBTRKR31",69,0)
 K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB
"RTN","IBTRKR31",70,0)
 Q
"VER")
8.0^22.0
"^DD",362.4,362.4,.1,0)
FILL NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",362.4,362.4,.1,3)
Type a number between 0 and 99, 0 Decimal Digits
"^DD",362.4,362.4,.1,21,0)
^^2^2^3080827^
"^DD",362.4,362.4,.1,21,1,0)
This is the Fill Number for the prescription. Where 0 = original fill and
"^DD",362.4,362.4,.1,21,2,0)
1 = 1st refill, etc.
"^DD",362.4,362.4,.1,"DT")
3080827
"BLD",7708,6)
^371
**END**
**END**
