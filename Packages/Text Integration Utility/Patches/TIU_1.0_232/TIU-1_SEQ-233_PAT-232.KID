Released TIU*1*232 SEQ #233
Extracted from mail message
**KIDS**:TIU*1.0*232^

**INSTALL NAME**
TIU*1.0*232
"BLD",7571,0)
TIU*1.0*232^TEXT INTEGRATION UTILITIES^0^3091028^y
"BLD",7571,1,0)
^^22^22^3090625^
"BLD",7571,1,1,0)
Fix the following defects.
"BLD",7571,1,2,0)
HD69695 When using copy to create a new document, the print name from the 
"BLD",7571,1,3,0)
original document is the print name for the newly created document.
"BLD",7571,1,4,0)
HD70760 In CPRS do not allow edit, delete, addendum of Nurse 
"BLD",7571,1,5,0)
Intraoperative Report and Anesthesia Report.  
"BLD",7571,1,6,0)
 Also, prohibit Amend, or Verify/Unverify -> Edit functions
"BLD",7571,1,7,0)
 for the Nurse Intraoperative Report and  Anesthesia Report
"BLD",7571,1,8,0)
 in the options listed below:
"BLD",7571,1,9,0)
 
"BLD",7571,1,10,0)
    TIU BROWSE DOCUMENT MGR       Individual Patient Document
"BLD",7571,1,11,0)
    TIU BROWSE DOCUMENT MRT       Individual Patient Document
"BLD",7571,1,12,0)
    TIU MAIN MENU MGR       Text Integration Utilities (MIS Manager)
"BLD",7571,1,13,0)
    TIU MAIN MENU MRT       Text Integration Utilities (MRT)
"BLD",7571,1,14,0)
    TIU REVIEW SCREEN MIS MANAGER       Multiple Patient Documents
"BLD",7571,1,15,0)
    TIU REVIEW SCREEN MRT       Multiple Patient Documents
"BLD",7571,1,16,0)
    TIU SEARCH LIST MGR       Search for Selected Documents
"BLD",7571,1,17,0)
    TIU SEARCH LIST MRT       Search for Selected Documents
"BLD",7571,1,18,0)
 
"BLD",7571,1,19,0)
 
"BLD",7571,1,20,0)
 
"BLD",7571,1,21,0)
HD166528 Update message displayed when trying to delete an 
"BLD",7571,1,22,0)
Interdisciplinary Parent note that has kids.
"BLD",7571,4,0)
^9.64PA^^
"BLD",7571,6)
3^
"BLD",7571,6.3)
19
"BLD",7571,"ABPKG")
n
"BLD",7571,"KRN",0)
^9.67PA^8989.52^19
"BLD",7571,"KRN",.4,0)
.4
"BLD",7571,"KRN",.401,0)
.401
"BLD",7571,"KRN",.402,0)
.402
"BLD",7571,"KRN",.403,0)
.403
"BLD",7571,"KRN",.5,0)
.5
"BLD",7571,"KRN",.84,0)
.84
"BLD",7571,"KRN",3.6,0)
3.6
"BLD",7571,"KRN",3.8,0)
3.8
"BLD",7571,"KRN",9.2,0)
9.2
"BLD",7571,"KRN",9.8,0)
9.8
"BLD",7571,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",7571,"KRN",9.8,"NM",1,0)
TIULP^^0^B50989073
"BLD",7571,"KRN",9.8,"NM",2,0)
TIULP2^^1^
"BLD",7571,"KRN",9.8,"NM",3,0)
TIUFLF4^^0^B17364801
"BLD",7571,"KRN",9.8,"NM",4,0)
TIULP3^^0^B5635029
"BLD",7571,"KRN",9.8,"NM",5,0)
TIURB^^0^B49509054
"BLD",7571,"KRN",9.8,"NM",6,0)
TIURB2^^0^B38846046
"BLD",7571,"KRN",9.8,"NM",7,0)
TIURC^^0^B19778021
"BLD",7571,"KRN",9.8,"NM","B","TIUFLF4",3)

"BLD",7571,"KRN",9.8,"NM","B","TIULP",1)

"BLD",7571,"KRN",9.8,"NM","B","TIULP2",2)

"BLD",7571,"KRN",9.8,"NM","B","TIULP3",4)

"BLD",7571,"KRN",9.8,"NM","B","TIURB",5)

"BLD",7571,"KRN",9.8,"NM","B","TIURB2",6)

"BLD",7571,"KRN",9.8,"NM","B","TIURC",7)

"BLD",7571,"KRN",19,0)
19
"BLD",7571,"KRN",19.1,0)
19.1
"BLD",7571,"KRN",101,0)
101
"BLD",7571,"KRN",409.61,0)
409.61
"BLD",7571,"KRN",771,0)
771
"BLD",7571,"KRN",870,0)
870
"BLD",7571,"KRN",8989.51,0)
8989.51
"BLD",7571,"KRN",8989.52,0)
8989.52
"BLD",7571,"KRN",8994,0)
8994
"BLD",7571,"KRN","B",.4,.4)

"BLD",7571,"KRN","B",.401,.401)

"BLD",7571,"KRN","B",.402,.402)

"BLD",7571,"KRN","B",.403,.403)

"BLD",7571,"KRN","B",.5,.5)

"BLD",7571,"KRN","B",.84,.84)

"BLD",7571,"KRN","B",3.6,3.6)

"BLD",7571,"KRN","B",3.8,3.8)

"BLD",7571,"KRN","B",9.2,9.2)

"BLD",7571,"KRN","B",9.8,9.8)

"BLD",7571,"KRN","B",19,19)

"BLD",7571,"KRN","B",19.1,19.1)

"BLD",7571,"KRN","B",101,101)

"BLD",7571,"KRN","B",409.61,409.61)

"BLD",7571,"KRN","B",771,771)

"BLD",7571,"KRN","B",870,870)

"BLD",7571,"KRN","B",8989.51,8989.51)

"BLD",7571,"KRN","B",8989.52,8989.52)

"BLD",7571,"KRN","B",8994,8994)

"BLD",7571,"QDEF")
^^^^^^^^^^YES
"BLD",7571,"QUES",0)
^9.62^^
"BLD",7571,"REQB",0)
^9.611^4^4
"BLD",7571,"REQB",1,0)
TIU*1.0*234^1
"BLD",7571,"REQB",2,0)
TIU*1.0*236^1
"BLD",7571,"REQB",3,0)
TIU*1.0*184^1
"BLD",7571,"REQB",4,0)
TIU*1.0*182^1
"BLD",7571,"REQB","B","TIU*1.0*182",4)

"BLD",7571,"REQB","B","TIU*1.0*184",3)

"BLD",7571,"REQB","B","TIU*1.0*234",1)

"BLD",7571,"REQB","B","TIU*1.0*236",2)

"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"PKG",470,-1)
1^1
"PKG",470,0)
TEXT INTEGRATION UTILITIES^TIU^Text Integration Utilities 
"PKG",470,20,0)
^9.402P^^
"PKG",470,22,0)
^9.49I^1^1
"PKG",470,22,1,0)
1.0^3010801^3010806^66481
"PKG",470,22,1,"PAH",1,0)
232^3091028^101036
"PKG",470,22,1,"PAH",1,1,0)
^^22^22^3091028
"PKG",470,22,1,"PAH",1,1,1,0)
Fix the following defects.
"PKG",470,22,1,"PAH",1,1,2,0)
HD69695 When using copy to create a new document, the print name from the 
"PKG",470,22,1,"PAH",1,1,3,0)
original document is the print name for the newly created document.
"PKG",470,22,1,"PAH",1,1,4,0)
HD70760 In CPRS do not allow edit, delete, addendum of Nurse 
"PKG",470,22,1,"PAH",1,1,5,0)
Intraoperative Report and Anesthesia Report.  
"PKG",470,22,1,"PAH",1,1,6,0)
 Also, prohibit Amend, or Verify/Unverify -> Edit functions
"PKG",470,22,1,"PAH",1,1,7,0)
 for the Nurse Intraoperative Report and  Anesthesia Report
"PKG",470,22,1,"PAH",1,1,8,0)
 in the options listed below:
"PKG",470,22,1,"PAH",1,1,9,0)
 
"PKG",470,22,1,"PAH",1,1,10,0)
    TIU BROWSE DOCUMENT MGR       Individual Patient Document
"PKG",470,22,1,"PAH",1,1,11,0)
    TIU BROWSE DOCUMENT MRT       Individual Patient Document
"PKG",470,22,1,"PAH",1,1,12,0)
    TIU MAIN MENU MGR       Text Integration Utilities (MIS Manager)
"PKG",470,22,1,"PAH",1,1,13,0)
    TIU MAIN MENU MRT       Text Integration Utilities (MRT)
"PKG",470,22,1,"PAH",1,1,14,0)
    TIU REVIEW SCREEN MIS MANAGER       Multiple Patient Documents
"PKG",470,22,1,"PAH",1,1,15,0)
    TIU REVIEW SCREEN MRT       Multiple Patient Documents
"PKG",470,22,1,"PAH",1,1,16,0)
    TIU SEARCH LIST MGR       Search for Selected Documents
"PKG",470,22,1,"PAH",1,1,17,0)
    TIU SEARCH LIST MRT       Search for Selected Documents
"PKG",470,22,1,"PAH",1,1,18,0)
 
"PKG",470,22,1,"PAH",1,1,19,0)
 
"PKG",470,22,1,"PAH",1,1,20,0)
 
"PKG",470,22,1,"PAH",1,1,21,0)
HD166528 Update message displayed when trying to delete an 
"PKG",470,22,1,"PAH",1,1,22,0)
Interdisciplinary Parent note that has kids.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","TIUFLF4")
0^3^B17364801^B16683756
"RTN","TIUFLF4",1,0)
TIUFLF4 ; SLC/MAM - Lib; ANCESTOR(FILEDA,NODE0,ANCESTOR,DOCFLAG), ORPHAN(FILEDA,NODE0,ANCESTOR), STUFFLDS(FILEDA,PFILEDA), ADDTEN(PFILEDA,FILEDA,NODE0,TENDA),NUMITEMS(FILEDA), MISSITEM(FILEDA) ;4/23/97  11:02
"RTN","TIUFLF4",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**11,43,236,232**;Jun 20, 1997;Build 19
"RTN","TIUFLF4",3,0)
 ;
"RTN","TIUFLF4",4,0)
NUMITEMS(FILEDA) ; Function returns Number of Items of FILEDA; Possibly 0
"RTN","TIUFLF4",5,0)
 N ITEMSANS,TIUFI
"RTN","TIUFLF4",6,0)
 S (ITEMSANS,TIUFI)=0
"RTN","TIUFLF4",7,0)
 F  S TIUFI=$O(^TIU(8925.1,FILEDA,10,TIUFI)) G:'TIUFI NUMIX S ITEMSANS=ITEMSANS+1
"RTN","TIUFLF4",8,0)
NUMIX Q ITEMSANS
"RTN","TIUFLF4",9,0)
 ;
"RTN","TIUFLF4",10,0)
MISSITEM(FILEDA) ; Function Checks FILEDA Items (doesn't check subitems etc.) for existence only. Returns IFN of first missing item it finds, else 0.
"RTN","TIUFLF4",11,0)
 ; Requires FILEDA.
"RTN","TIUFLF4",12,0)
 N TIUI,IFILEDA,MISSANS
"RTN","TIUFLF4",13,0)
 S TIUI=0,MISSANS=0
"RTN","TIUFLF4",14,0)
 F  S TIUI=$O(^TIU(8925.1,FILEDA,10,TIUI)) Q:'TIUI!MISSANS  D
"RTN","TIUFLF4",15,0)
 . S IFILEDA=+^TIU(8925.1,FILEDA,10,TIUI,0)
"RTN","TIUFLF4",16,0)
 . I '$D(^TIU(8925.1,IFILEDA,0)) S MISSANS=IFILEDA
"RTN","TIUFLF4",17,0)
 Q MISSANS
"RTN","TIUFLF4",18,0)
 ;
"RTN","TIUFLF4",19,0)
ANCESTOR(FILEDA,NODE0,ANCESTOR,DOCFLAG) ; Module traces ancestors of FILEDA,
"RTN","TIUFLF4",20,0)
 ;creates array ANCESTOR,
"RTN","TIUFLF4",21,0)
 ; where ANCESTOR(0)=FILEDA,
"RTN","TIUFLF4",22,0)
 ; where ANCESTOR(1)=Parent IFN of FILEDA,
"RTN","TIUFLF4",23,0)
 ;       ANCESTOR(2)=Parent IFN of ANCESTOR(1)
"RTN","TIUFLF4",24,0)
 ;       ...
"RTN","TIUFLF4",25,0)
 ;       ANCESTOR(last subscript)=IFN of oldest ancestor of FILEDA if
"RTN","TIUFLF4",26,0)
 ;                                '$G(DOCFLAG)
"RTN","TIUFLF4",27,0)
 ;                                           OR
"RTN","TIUFLF4",28,0)
 ;                                IFN of oldest ancestor of FILEDA NOT
"RTN","TIUFLF4",29,0)
 ;                                OF TYPE DC OR CL if $G(DOCFLAG)
"RTN","TIUFLF4",30,0)
 ; Don't stop the array for problems like bad type, no type, type object.
"RTN","TIUFLF4",31,0)
 ; If DOCFLAG, DON'T GET DC or CL; don't want array to mistakenly
"RTN","TIUFLF4",32,0)
 ;go all  the way to CLinical Documents.
"RTN","TIUFLF4",33,0)
 ; Array may not EXIST if DOCFLAG
"RTN","TIUFLF4",34,0)
 ; Requires FILEDA, NODE0= 0 Node;
"RTN","TIUFLF4",35,0)
 ; DOCFLAG optional, 0 or 1
"RTN","TIUFLF4",36,0)
 N TIUI,QUIT,ANODE0
"RTN","TIUFLF4",37,0)
 S DOCFLAG=+$G(DOCFLAG)
"RTN","TIUFLF4",38,0)
 I DOCFLAG,($P(NODE0,U,4)="DC")!($P(NODE0,U,4)="CL") G ANCEX
"RTN","TIUFLF4",39,0)
 S TIUI=0,ANCESTOR(0)=FILEDA
"RTN","TIUFLF4",40,0)
 F  D  Q:$G(QUIT)
"RTN","TIUFLF4",41,0)
 . S ANCESTOR(TIUI+1)=$O(^TIU(8925.1,"AD",ANCESTOR(TIUI),0))
"RTN","TIUFLF4",42,0)
 . I 'ANCESTOR(TIUI+1) K ANCESTOR(TIUI+1) S QUIT=1 Q
"RTN","TIUFLF4",43,0)
 . I DOCFLAG S ANODE0=^TIU(8925.1,ANCESTOR(TIUI+1),0) I ($P(ANODE0,U,4)="DC")!($P(ANODE0,U,4)="CL") K ANCESTOR(TIUI+1) S QUIT=1 Q
"RTN","TIUFLF4",44,0)
 . S TIUI=TIUI+1
"RTN","TIUFLF4",45,0)
ANCEX Q
"RTN","TIUFLF4",46,0)
 ;
"RTN","TIUFLF4",47,0)
ORPHAN(FILEDA,NODE0,ANCESTOR) ; Function traces ancestors of FILEDA,
"RTN","TIUFLF4",48,0)
 ; Returns NA if FILEDA is Object or Shared Component,
"RTN","TIUFLF4",49,0)
 ;         NO if NOT NA AND FILEDA belongs to Clinical Docmts Hierarchy,
"RTN","TIUFLF4",50,0)
 ;         YES if NOT NA, AND doesn't belong.
"RTN","TIUFLF4",51,0)
 ; Requires FILEDA, NODE0= 0 Node;
"RTN","TIUFLF4",52,0)
 N ORPHAN,LAST
"RTN","TIUFLF4",53,0)
 I $P(NODE0,U,4)="O" S ORPHAN="NA" G ORPHX
"RTN","TIUFLF4",54,0)
 I '$D(ANCESTOR) D ANCESTOR(FILEDA,NODE0,.ANCESTOR)
"RTN","TIUFLF4",55,0)
 I '$D(^TMP("TIUF",$J,"CLINDOC")) D  G:Y=-1 ORPHX
"RTN","TIUFLF4",56,0)
 . N DIC,X,Y
"RTN","TIUFLF4",57,0)
 . S DIC=8925.1,DIC(0)="X",X="CLINICAL DOCUMENTS" D ^DIC
"RTN","TIUFLF4",58,0)
 . I Y=-1 S ORPHAN="UNKNOWN" Q
"RTN","TIUFLF4",59,0)
 . S ^TMP("TIUF",$J,"CLINDOC")=+Y
"RTN","TIUFLF4",60,0)
 S LAST=$O(ANCESTOR(100),-1) I ANCESTOR(LAST)=^TMP("TIUF",$J,"CLINDOC") S ORPHAN="NO" G ORPHX
"RTN","TIUFLF4",61,0)
 S ORPHAN="YES"
"RTN","TIUFLF4",62,0)
ORPHX Q ORPHAN
"RTN","TIUFLF4",63,0)
 ;
"RTN","TIUFLF4",64,0)
STUFFLDS(FILEDA,PFILEDA) ; Stuff fields .03, .04 (tries), .07, [.1]
"RTN","TIUFLF4",65,0)
 ;for 8925.1 entry FILEDA.
"RTN","TIUFLF4",66,0)
 ; Requires FILEDA.
"RTN","TIUFLF4",67,0)
 ; Requires TIUFTLST as set in TYPELIST^TIUFLF7
"RTN","TIUFLF4",68,0)
 ; Requires PFILEDA if entry has prospective (as in Create and Add Item)
"RTN","TIUFLF4",69,0)
 ;or actual parent in order to try to stuff Type.
"RTN","TIUFLF4",70,0)
 ; Stuffs .03 Print Name = First 60 chars of .01 Name if not from copy
"RTN","TIUFLF4",71,0)
 ;action.
"RTN","TIUFLF4",72,0)
 ; Stuffs .04 Type if only 1 possible type in TIUFTLST (because of parent
"RTN","TIUFLF4",73,0)
 ;or duplicates or option e.g. create objects).
"RTN","TIUFLF4",74,0)
 ; Stuffs .07 Status = Inactive.
"RTN","TIUFLF4",75,0)
 ; If receives parent PFILEDA, parent is Shared, then
"RTN","TIUFLF4",76,0)
 ;stuffs .1 Shared = 1
"RTN","TIUFLF4",77,0)
 ; Should Lock FILEDA before calling STUFFLDS.
"RTN","TIUFLF4",78,0)
 N DIE,DA,DR,Y,NAME,PRINTDR,TYPEDR,STATUSDR,SHAREDR
"RTN","TIUFLF4",79,0)
 N NATL,NATLDR,NODE0,TYPE
"RTN","TIUFLF4",80,0)
 I '$G(PFILEDA) S PFILEDA=0
"RTN","TIUFLF4",81,0)
 S DIE=8925.1,DA=FILEDA
"RTN","TIUFLF4",82,0)
 S NODE0=^TIU(8925.1,FILEDA,0),NAME=$P(NODE0,U),PRINTDR=".03///^S X=NAME"
"RTN","TIUFLF4",83,0)
 I $L(TIUFTLST,U)=3 S TYPE=$P(TIUFTLST,U,2),TYPEDR=".04////^S X=TYPE"
"RTN","TIUFLF4",84,0)
 S STATUSDR=".07///INACTIVE"
"RTN","TIUFLF4",85,0)
 S SHAREDR=".1////1"
"RTN","TIUFLF4",86,0)
 I $G(XQORNOD(0))'["Copy" S DR=PRINTDR
"RTN","TIUFLF4",87,0)
 ;VMP/ELR P232. On a copy set print name equal title if not an object menu.
"RTN","TIUFLF4",88,0)
 I $G(TIUFXNOD)["Copy",$G(ACTION)="C",$P($G(NODE0),U,4)'="O" S DR=PRINTDR
"RTN","TIUFLF4",89,0)
 I $G(TYPEDR) S DR=$S($D(DR):DR_";"_TYPEDR,1:TYPEDR)
"RTN","TIUFLF4",90,0)
 S DR=$S($D(DR):DR_";"_STATUSDR,1:STATUSDR)
"RTN","TIUFLF4",91,0)
 I $P($G(^TIU(8925.1,PFILEDA,0)),U,10) S DR=DR_";"_SHAREDR
"RTN","TIUFLF4",92,0)
 D ^DIE
"RTN","TIUFLF4",93,0)
STUFFX Q
"RTN","TIUFLF4",94,0)
 ;
"RTN","TIUFLF4",95,0)
ADDTEN(PFILEDA,FILEDA,NODE0,TENDA) ; Add item FILEDA to 10 NODE of
"RTN","TIUFLF4",96,0)
 ;File 8925.1 entry PFILEDA. Stuff item Menu Text
"RTN","TIUFLF4",97,0)
 ; Requires PFILEDA = 8925.1 IFN of parent of FILEDA.
"RTN","TIUFLF4",98,0)
 ; Requires FILEDA, Requires NODE0 = ^TIU(8925.1,FILEDA,0)
"RTN","TIUFLF4",99,0)
 ; Returns TENDA = 10 node DA of new item.
"RTN","TIUFLF4",100,0)
 ; Returns TENDA="" if fails lookup.  Screen on fld 10, subfld .01
"RTN","TIUFLF4",101,0)
 ;prevents lookup failure due to duplicate names by allowing only
"RTN","TIUFLF4",102,0)
 ;FILEDA to pass screen.
"RTN","TIUFLF4",103,0)
 ;Should Lock PFILEDA before calling ADDTEN.
"RTN","TIUFLF4",104,0)
 N X,Y,DIE,DR,NAME,DA,DIC,DLAYGO,TIUFISCR,MSG,DUPITEM
"RTN","TIUFLF4",105,0)
 S TENDA=""
"RTN","TIUFLF4",106,0)
 I ('$G(PFILEDA))!('$G(FILEDA)) G ADDTX
"RTN","TIUFLF4",107,0)
 S NAME=$P(NODE0,U)
"RTN","TIUFLF4",108,0)
 I '$D(TIUFTLST) S DUPITEM=0,DUPITEM=$$DUPITEM^TIUFLF7(NAME,PFILEDA) I DUPITEM S MSG=" Can't add Item; Parent already has Item with the same Name" W !!,MSG,! G ADDTX ; possibly needed when called from TIU rather than from TIUF.
"RTN","TIUFLF4",109,0)
 S X=""""_NAME_""""
"RTN","TIUFLF4",110,0)
 S DA(1)=PFILEDA,DLAYGO=8925.1
"RTN","TIUFLF4",111,0)
 S TIUFISCR=FILEDA ; activates screen on fld 10, Subfld .01 in DD
"RTN","TIUFLF4",112,0)
 S DIC="^TIU(8925.1,DA(1),10,",DIC(0)="L",DIC("P")=$P(^DD(8925.1,10,0),U,2)
"RTN","TIUFLF4",113,0)
 D ^DIC S TENDA=+Y I Y=-1 S TENDA="" G ADDTX
"RTN","TIUFLF4",114,0)
 K DIC
"RTN","TIUFLF4",115,0)
 S DA=TENDA,DA(1)=PFILEDA D MTXTCHEC^TIUFT1(.DA,FILEDA,1)
"RTN","TIUFLF4",116,0)
ADDTX Q
"RTN","TIUFLF4",117,0)
 ;
"RTN","TIULP")
0^1^B50989073^B48499805
"RTN","TIULP",1,0)
TIULP ; SLC/JER - Functions determining privilege ;11/13/07
"RTN","TIULP",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**98,100,116,109,138,152,175,157,182,184,217,236,234,232**;Jun 20, 1997;Build 19
"RTN","TIULP",3,0)
 ; CANDO^USRLA: ICA 2325, ISA^USRLM: ICA 2324
"RTN","TIULP",4,0)
 ; 8930.1,2,8: IACS 3129,3128,3104 
"RTN","TIULP",5,0)
CANDO(TIUDA,TIUACT,PERSON) ; Can PERSON perform action now
"RTN","TIULP",6,0)
 ; Receives: TIUDA=Record number in file 8925
"RTN","TIULP",7,0)
 ;           TIUACT=Name of user action in 8930.8 (USR ACTION)
"RTN","TIULP",8,0)
 ;           PERSON=New Person file IFN.
"RTN","TIULP",9,0)
 ;                  Assumed to be DUZ if not received.
"RTN","TIULP",10,0)
 ;                  New **100** ID param, backward compatible.
"RTN","TIULP",11,0)
 ;  Returns:   TIUY=1:yes,0:no_"^"_why not message
"RTN","TIULP",12,0)
 N TIUI,TIUTYP,TIUROLE,STATUS,TIUY,TIUATYP,MSG,WHO,MODIFIER,TIUD0,TIUACTW
"RTN","TIULP",13,0)
 S TIUY=0 I '$G(PERSON) S PERSON=DUZ
"RTN","TIULP",14,0)
 S TIUD0=$G(^TIU(8925,+TIUDA,0)) I 'TIUD0 G CANDOX
"RTN","TIULP",15,0)
 I $$ISPRFDOC^TIUPRF(TIUDA),((TIUACT="ATTACH ID ENTRY")!(TIUACT="ATTACH TO ID NOTE")) S TIUY="0^Patient Record Flag notes may not be used as Interdisciplinary notes." G CANDOX
"RTN","TIULP",16,0)
 S TIUACTW=$G(TIUACT)
"RTN","TIULP",17,0)
 ;**100** was I +TIUACT'>0 S TIUACT etc.
"RTN","TIULP",18,0)
 S TIUACT=$$USREVNT(TIUACT) I +TIUACT'>0 G CANDOX
"RTN","TIULP",19,0)
 ; -- Historical Procedures - Prohibit actions detailed in
"RTN","TIULP",20,0)
 ;    HPCAN^TIUCP: P182
"RTN","TIULP",21,0)
 N HPCAN I $$ISHISTCP^TIUCP(+TIUD0) S HPCAN=$$HPCAN^TIUCP(+TIUACT) I 'HPCAN S TIUY=HPCAN G CANDOX
"RTN","TIULP",22,0)
 ; **152 Get status
"RTN","TIULP",23,0)
 S STATUS=+$P(TIUD0,U,5)
"RTN","TIULP",24,0)
 ; **152[234] prevents editing or sending back a completed or uncosigned document.
"RTN","TIULP",25,0)
 I STATUS>5,(+TIUACT=9)!(+TIUACT=17) D  G CANDOX
"RTN","TIULP",26,0)
 . ; **152[234] Displays message to user
"RTN","TIULP",27,0)
 . I +TIUACT=9 S TIUY="0^ You may not edit uncosigned or completed documents."
"RTN","TIULP",28,0)
 . I +TIUACT=17 S TIUY="0^You may not send back uncosigned or completed documents."
"RTN","TIULP",29,0)
 ; -- In case business rules have changed, & children already existed:
"RTN","TIULP",30,0)
 I +TIUACT=24,$D(^TIU(8925,"GDAD",TIUDA)) D  G CANDOX
"RTN","TIULP",31,0)
 . S TIUY="0^ This note cannot be attached; it has its own children."
"RTN","TIULP",32,0)
 I +TIUACT=25,+$G(^TIU(8925,TIUDA,21)) D  G CANDOX
"RTN","TIULP",33,0)
 . S TIUY="0^ This note cannot receive interdisciplinary children; it is itself a child."
"RTN","TIULP",34,0)
 I +TIUACT=4!(+TIUACT=5),+$$BLANK^TIULC(TIUDA) D  G CANDOX ;Sets TIUPRM1
"RTN","TIULP",35,0)
 . S TIUY="0^ Contains blanks ("_$P(TIUPRM1,U,6)_") which must be filled before "_$P(TIUACT,U,2)_"ATURE."
"RTN","TIULP",36,0)
 S TIUROLE=$$USRROLE(TIUDA,PERSON)
"RTN","TIULP",37,0)
 S TIUTYP=+TIUD0
"RTN","TIULP",38,0)
 I $$ISADDNDM^TIULC1(+TIUDA) S TIUATYP=TIUTYP,TIUTYP=+$G(^TIU(8925,+$P(TIUD0,U,6),0))
"RTN","TIULP",39,0)
 I TIUROLE']"" S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,PERSON)
"RTN","TIULP",40,0)
 F TIUI=1:1:($L(TIUROLE,U)-1) D  Q:+$G(TIUY)>0
"RTN","TIULP",41,0)
 . S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,PERSON,$P(TIUROLE,U,TIUI))
"RTN","TIULP",42,0)
 I +$G(TIUATYP) S TIUTYP=+$G(TIUATYP)
"RTN","TIULP",43,0)
 ;**100** update for PERSON param; update for verb modifier:
"RTN","TIULP",44,0)
 I +TIUY'>0 D  G CANDOX
"RTN","TIULP",45,0)
 . S WHO=" You"
"RTN","TIULP",46,0)
 . ;I PERSON'=DUZ S WHO=$P(^VA(200,PERSON,0),U),WHO=$$NAME^TIULS(WHO,"FIRST LAST")
"RTN","TIULP",47,0)
 . I PERSON'=DUZ S WHO=$$NAME^TIULS($$GET1^DIQ(200,PERSON,.01),"FIRST LAST") ;P182
"RTN","TIULP",48,0)
 . S MODIFIER=$P(TIUACT,U,3) I $L(MODIFIER) S MODIFIER=" "_MODIFIER
"RTN","TIULP",49,0)
 . ;e.g. "You may not ATTACH this UNSIGNED TELEPHONE NOTE TO AN ID NOTE."
"RTN","TIULP",50,0)
 . S MSG=WHO_" may not "_$P(TIUACT,U,2)_" this "_$P($G(^TIU(8925.6,+STATUS,0)),U)_" "_$$PNAME^TIULC1(TIUTYP)_MODIFIER_"."
"RTN","TIULP",51,0)
 . S TIUY=TIUY_U_MSG
"RTN","TIULP",52,0)
 I +TIUACT=15,$$HASIMG^TIURB2(+TIUDA) D  G CANDOX
"RTN","TIULP",53,0)
 . S TIUY="0^ This document contains linked images. You must ""delete"" the Images using the Imaging package before proceeding."
"RTN","TIULP",54,0)
 ;VMP/ELR P217. Do not allow deletion of a parent with child
"RTN","TIULP",55,0)
 I $G(TIUACTW)["DELETE RECORD",$$HASIDKID^TIUGBR(+TIUDA) D  G CANDOX
"RTN","TIULP",56,0)
 . ;VMP/ELR P232. Create new error msg.
"RTN","TIULP",57,0)
 . NEW TIUMSG D IDMSG^TIULP3(.TIUMSG) S TIUY="0^"_TIUMSG
"RTN","TIULP",58,0)
 ;VMP/ELR P232 do not allow edit, delete or addendum on NIR and Anesthesia report  IA3356 FOR XQY0
"RTN","TIULP",59,0)
 I (($G(XQY0)["OR CPRS GUI CHART")!($G(XQY0)["TIU ")),$$ACTION^TIULP3($G(TIUACTW)),$$ISSURG^TIULP3(+TIUDA) D  G CANDOX
"RTN","TIULP",60,0)
 . S TIUY="0^ "_$$SURMSG^TIULP3($G(TIUACTW))
"RTN","TIULP",61,0)
CANDOX Q TIUY
"RTN","TIULP",62,0)
 ;
"RTN","TIULP",63,0)
CANLINK(TIUTYP) ; Can user (DUZ) link (attach) a document of a particular type
"RTN","TIULP",64,0)
 ;to an ID note.
"RTN","TIULP",65,0)
 ; For use in ADD NEW ID NOTE, where docmt is not entered yet.
"RTN","TIULP",66,0)
 ; Assume most favorable circumstances (user will complete
"RTN","TIULP",67,0)
 ;the note, so if user still can't attach, can tell them no,
"RTN","TIULP",68,0)
 ;when they first select title for the new entry.
"RTN","TIULP",69,0)
 ; Rule out if TIUTYP can be an ID parent, since ID parent
"RTN","TIULP",70,0)
 ;and ID kid function as mutually exclusive, (regardless of
"RTN","TIULP",71,0)
 ;business rules).
"RTN","TIULP",72,0)
 N TIUACT,STATUS,USRROLE,TIUY
"RTN","TIULP",73,0)
 S TIUACT=$$USREVNT("ATTACH TO ID NOTE"),STATUS=7 ; complete
"RTN","TIULP",74,0)
 S USRROLE=+$O(^USR(8930.2,"B","COMPLETER",0))
"RTN","TIULP",75,0)
 S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,DUZ,USRROLE)
"RTN","TIULP",76,0)
 I '$G(TIUY) S TIUY="0^ You may not use this title for interdisciplinary child entries." Q TIUY
"RTN","TIULP",77,0)
 ; -- If user can attach a certain note, but note can also receive
"RTN","TIULP",78,0)
 ;    ID entries, don't let user attach it. --
"RTN","TIULP",79,0)
 I $$POSSPRNT^TIULP(TIUTYP) S TIUY="0^ This interdisciplinary PARENT title cannot be used for CHILD entries."
"RTN","TIULP",80,0)
 ; -- If selected type is a CWAD, don't let user attach it: --
"RTN","TIULP",81,0)
 I $$ISCWAD^TIULX(TIUTYP) S TIUY="0^ CWAD titles cannot be used for interdisciplinary entries."
"RTN","TIULP",82,0)
 ; -- If selected type is a PRF, don't let user attach it: --
"RTN","TIULP",83,0)
 I $$ISPFTTL^TIUPRFL(TIUTYP) S TIUY="0^ Patient Record Flag titles cannot be used for interdisciplinary entries."
"RTN","TIULP",84,0)
 ; -- If selected type is a consult, don't let user attach it: --
"RTN","TIULP",85,0)
 I $$ISA^TIULX(TIUTYP,+$$CLASS^TIUCNSLT) S TIUY="0^ Consult titles cannot be used for interdisciplinary entries."
"RTN","TIULP",86,0)
 Q TIUY
"RTN","TIULP",87,0)
 ;
"RTN","TIULP",88,0)
POSSPRNT(TIUTYP) ; Is a docmt intended as a possible ID parent?
"RTN","TIULP",89,0)
 ;Returns 1^WHYCAN'TATTACH if there are business rules permitting ANYONE
"RTN","TIULP",90,0)
 ;to attach ID entries to notes of type TIUTYP.
"RTN","TIULP",91,0)
 ;Else returns 0.
"RTN","TIULP",92,0)
 N TIUACT,STATUS,TIUY,DADTYP
"RTN","TIULP",93,0)
 S TIUY=0,TIUACT=+$$USREVNT("ATTACH ID ENTRY")
"RTN","TIULP",94,0)
 F STATUS=6,7,8 D  G:TIUY POSSX
"RTN","TIULP",95,0)
 . I $O(^USR(8930.1,"AR",TIUTYP,STATUS,TIUACT,0)) S TIUY=1 Q
"RTN","TIULP",96,0)
 . I $O(^USR(8930.1,"AC",TIUTYP,STATUS,TIUACT,0)) S TIUY=1
"RTN","TIULP",97,0)
 ; -- If no rules for TIUTYP, try its parent: --
"RTN","TIULP",98,0)
 S DADTYP=$O(^TIU(8925.1,"AD",TIUTYP,0)) G:DADTYP'>0 POSSX
"RTN","TIULP",99,0)
 S TIUY=$$POSSPRNT(DADTYP)
"RTN","TIULP",100,0)
POSSX I TIUY S TIUY="1^ Interdisciplinary PARENT notes cannot be attached as CHILD entries."
"RTN","TIULP",101,0)
 Q TIUY
"RTN","TIULP",102,0)
 ;
"RTN","TIULP",103,0)
CANENTR(TIUTYP) ; Evaluate privilege to enter a document of a particular type
"RTN","TIULP",104,0)
 N TIUACT,STATUS,USRROLE,TIUY
"RTN","TIULP",105,0)
 S TIUACT=$$USREVNT("ENTRY"),STATUS=2 ; untranscribed
"RTN","TIULP",106,0)
 S USRROLE=3 ; transcriber
"RTN","TIULP",107,0)
 S TIUY=$$CANDO^USRLA(TIUTYP,STATUS,+TIUACT,DUZ,USRROLE)
"RTN","TIULP",108,0)
 Q TIUY
"RTN","TIULP",109,0)
USRROLE(TIUDA,PERSON) ; Identify the user's role with respect to the document
"RTN","TIULP",110,0)
 ; 3/20/00 **100** Added role COMPLETER
"RTN","TIULP",111,0)
 ; 3/20/00 **100** Added PERSON param
"RTN","TIULP",112,0)
 N TIU0,TIU12,TIU13,TIUY,TIU15,COMPLTR,STATUS
"RTN","TIULP",113,0)
 S PERSON=$G(PERSON,DUZ)
"RTN","TIULP",114,0)
 S TIU0=$G(^TIU(8925,+TIUDA,0)),STATUS=$P(TIU0,U,5)
"RTN","TIULP",115,0)
 S TIU12=$G(^TIU(8925,+TIUDA,12))
"RTN","TIULP",116,0)
 S TIU13=$G(^TIU(8925,+TIUDA,13)),TIU15=$G(^TIU(8925,+TIUDA,15))
"RTN","TIULP",117,0)
 I PERSON=+$P(TIU13,U,2) S TIUY=+$O(^USR(8930.2,"B","TRANSCRIBER",0))_U
"RTN","TIULP",118,0)
 I PERSON=+$P(TIU12,U,2) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","AUTHOR/DICTATOR",0))_U
"RTN","TIULP",119,0)
 I PERSON=+$P(TIU12,U,9) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","ATTENDING PHYSICIAN",0))_U
"RTN","TIULP",120,0)
 I PERSON=+$P(TIU12,U,4) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","EXPECTED SIGNER",0))_U
"RTN","TIULP",121,0)
 I PERSON=+$P(TIU12,U,8) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","EXPECTED COSIGNER",0))_U
"RTN","TIULP",122,0)
 I $$ASURG^TIUADSIG(TIUDA) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","SURROGATE",0))_U ;P157
"RTN","TIULP",123,0)
 ;Check if the person can be an Interpreter for this document via a Consult API
"RTN","TIULP",124,0)
 I $$CPINTERP^GMRCCP(+TIUDA,PERSON) S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","INTERPRETER",0))_U
"RTN","TIULP",125,0)
 I STATUS>6 D  I COMPLTR S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","COMPLETER",0))_U
"RTN","TIULP",126,0)
 . S COMPLTR=0
"RTN","TIULP",127,0)
 . I PERSON=+$P(TIU15,U,8) S COMPLTR=1 Q
"RTN","TIULP",128,0)
 . I '$P(TIU15,U,8),PERSON=+$P(TIU15,U,2) S COMPLTR=1
"RTN","TIULP",129,0)
 I +$O(^TIU(8925.7,"AE",+TIUDA,+PERSON,0)) D
"RTN","TIULP",130,0)
 . N TIUXTRA S TIUXTRA=+$O(^TIU(8925.7,"AE",+TIUDA,+PERSON,0))
"RTN","TIULP",131,0)
 . I +$P($G(^TIU(8925.7,+TIUXTRA,0)),U,4) Q
"RTN","TIULP",132,0)
 . S TIUY=$G(TIUY)_+$O(^USR(8930.2,"B","ADDITIONAL SIGNER",0))_U
"RTN","TIULP",133,0)
 Q $G(TIUY)
"RTN","TIULP",134,0)
USREVNT(EVENT) ; Given event name, return:
"RTN","TIULP",135,0)
 ;EVENT = event pointer^user verb^verb modifier
"RTN","TIULP",136,0)
 ; **100** added verb modifier piece (.07)
"RTN","TIULP",137,0)
 N TIUY,TIUDA,NODE0
"RTN","TIULP",138,0)
 S TIUDA=+$O(^USR(8930.8,"B",EVENT,0))
"RTN","TIULP",139,0)
 S NODE0=$G(^USR(8930.8,TIUDA,0))
"RTN","TIULP",140,0)
 S TIUY=TIUDA_U_$P(NODE0,U,5)_U_$P(NODE0,U,7)
"RTN","TIULP",141,0)
 Q TIUY
"RTN","TIULP",142,0)
CANPICK(TIUTYP) ; Screens selection of title by title status and
"RTN","TIULP",143,0)
 ;(for status TEST), by owner.
"RTN","TIULP",144,0)
 N TIUPOWN,TIUCOWN,TIUT0,TIUTSTAT,TIUY S TIUY=0
"RTN","TIULP",145,0)
 S TIUT0=$G(^TIU(8925.1,+TIUTYP,0)),TIUTSTAT=$P(TIUT0,U,7)
"RTN","TIULP",146,0)
 I TIUTSTAT']"" S TIUY=0 G CANPIX
"RTN","TIULP",147,0)
 I TIUTSTAT=13 S TIUY=0 G CANPIX
"RTN","TIULP",148,0)
 I TIUTSTAT=11 S TIUY=1 G CANPIX
"RTN","TIULP",149,0)
 S TIUPOWN=$P(TIUT0,U,5),TIUCOWN=+$P(TIUT0,U,6)
"RTN","TIULP",150,0)
 I TIUTSTAT=10 S TIUY=$S(TIUPOWN=DUZ:1,+$$ISA^USRLM(DUZ,TIUCOWN):1,1:0)
"RTN","TIULP",151,0)
CANPIX Q +$G(TIUY)
"RTN","TIULP",152,0)
REQCOSIG(TIUTYP,TIUDA,USER,TIUDT) ; Evaluate whether user requires cosignature
"RTN","TIULP",153,0)
 N TIUI,TIUY,TIUDPRM S USER=$S(+$G(USER):+$G(USER),1:+$G(DUZ))
"RTN","TIULP",154,0)
 D DOCPRM^TIULC1(TIUTYP,.TIUDPRM,+$G(TIUDA))
"RTN","TIULP",155,0)
 I $G(TIUDPRM(5))="" G REQCOSX
"RTN","TIULP",156,0)
 I +$G(TIUDT)'>0 S TIUDT=+$P($P(+$G(^TIU(8925,+$G(TIUDA),13)),U),".")
"RTN","TIULP",157,0)
 F TIUI=1:1:$L(TIUDPRM(5),U) D  Q:+TIUY>0
"RTN","TIULP",158,0)
 . S TIUY=+$$ISA^USRLM(+USER,+$P(TIUDPRM(5),U,TIUI),,+$G(TIUDT))
"RTN","TIULP",159,0)
REQCOSX Q +$G(TIUY)
"RTN","TIULP",160,0)
 ;
"RTN","TIULP",161,0)
REQCPF(TIUCDA) ;Check if clinical procedure fields are required
"RTN","TIULP",162,0)
 ; Input  -- TIUCDA   Request/Consult File (#123) IEN
"RTN","TIULP",163,0)
 ; Output -- 1=Required and 0=Not Required
"RTN","TIULP",164,0)
 N TIUCPACT,REQF
"RTN","TIULP",165,0)
 I '$G(TIUCDA) G REQCPFQ
"RTN","TIULP",166,0)
 S TIUCPACT=$$CPACTM^GMRCCP(TIUCDA)
"RTN","TIULP",167,0)
 I TIUCPACT=1!(TIUCPACT=3) S REQF=1
"RTN","TIULP",168,0)
REQCPFQ Q +$G(REQF)
"RTN","TIULP2")
1^2^^B5528800
"RTN","TIULP3")
0^4^B5635029^n/a
"RTN","TIULP3",1,0)
TIULP3 ;BAY PINES/ELR - Functions determining privilege continued ;11/15/2006
"RTN","TIULP3",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**232**;Jun 20, 1997;Build 19
"RTN","TIULP3",3,0)
ISSURG(TIUDA) ;
"RTN","TIULP3",4,0)
 NEW TIUY
"RTN","TIULP3",5,0)
 I +$$ISADDNDM^TIULC1(TIUDA) S TIUDA=+$P($G(^TIU(8925,TIUDA,0)),U,6)
"RTN","TIULP3",6,0)
 D ISSURG^TIUSROI(.TIUY,+$G(^TIU(8925,+TIUDA,0)))
"RTN","TIULP3",7,0)
 G SURGEX:TIUY'>0
"RTN","TIULP3",8,0)
 ;SEE IF IT IS AN NIR OR AR
"RTN","TIULP3",9,0)
 N TIUS0,TIUSNAME
"RTN","TIULP3",10,0)
 S TIUY=0
"RTN","TIULP3",11,0)
 G SURGEX:'$L(TIUDA)
"RTN","TIULP3",12,0)
 G SURGEX:'$D(^TIU(8925,+TIUDA,0))
"RTN","TIULP3",13,0)
 S TIUS0=+$G(^TIU(8925,+TIUDA,0))
"RTN","TIULP3",14,0)
 G SURGEX:'$L(TIUS0)
"RTN","TIULP3",15,0)
 S TIUSNAME=$$PNAME^TIULC1(+TIUS0)
"RTN","TIULP3",16,0)
 G SURGEX:'$L(TIUSNAME)
"RTN","TIULP3",17,0)
 I TIUSNAME="NURSE INTRAOPERATIVE REPORT" S TIUY=1 G SURGEX
"RTN","TIULP3",18,0)
 I TIUSNAME="ANESTHESIA REPORT" S TIUY=1 G SURGEX
"RTN","TIULP3",19,0)
SURGEX Q TIUY
"RTN","TIULP3",20,0)
ACTION(TIUACTW) ;CHECK ACTION
"RTN","TIULP3",21,0)
 NEW TIUY S TIUY=0
"RTN","TIULP3",22,0)
 I (($G(TIUACTW)["DELETE RECORD")!($G(TIUACTW)["EDIT RECORD")!($G(TIUACTW)["ADDEND")) S TIUY=1 G ACTEX
"RTN","TIULP3",23,0)
ACTEX Q TIUY
"RTN","TIULP3",24,0)
SURMSG(TIUACTW) ;SET SURGERY ERROR MSG
"RTN","TIULP3",25,0)
 NEW TIUY,TIUDOC S TIUDOC=""
"RTN","TIULP3",26,0)
 I TIUACTW["DELETE" S TIUDOC="DELETE"
"RTN","TIULP3",27,0)
 I TIUACTW["EDIT" S TIUDOC="EDIT"
"RTN","TIULP3",28,0)
 I TIUACTW["ADDEND" S TIUDOC="CREATE AN ADDENDUM FOR"
"RTN","TIULP3",29,0)
 I TIUACTW["AMENDMENT" S TIUDOC="AMEND"
"RTN","TIULP3",30,0)
 S TIUY="You must use the Surgery Package to "_TIUDOC_" this Document"
"RTN","TIULP3",31,0)
 Q TIUY
"RTN","TIULP3",32,0)
IDMSG(TIUMSG) ;SET DELETE ID MSG
"RTN","TIULP3",33,0)
 S TIUMSG="You may NOT delete this parent ID note.  It has child ID notes attached. "
"RTN","TIULP3",34,0)
 S TIUMSG=TIUMSG_"If you need to delete this note you must first detach the child from the parent note."
"RTN","TIULP3",35,0)
 I $G(XQY0)["OR CPRS GUI CHART" D                 ;DBIA 3356
"RTN","TIULP3",36,0)
 . S TIUMSG=TIUMSG_" Select Action/Detach from Interdisciplinary Note to accomplish this."
"RTN","TIULP3",37,0)
 E  S TIUMSG=TIUMSG_"  Select the child note from the LM screen, then select Interdisciplinary Note."
"RTN","TIULP3",38,0)
 Q
"RTN","TIURB")
0^5^B49509054^B46724354
"RTN","TIURB",1,0)
TIURB ; SLC/JER - More Review Screen Actions ;12/11/07
"RTN","TIURB",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**4,32,52,78,58,100,109,155,184,234,232**;Jun 20, 1997;Build 19
"RTN","TIURB",3,0)
 ; DBIA 3473 TIU use of GMRCTIU
"RTN","TIURB",4,0)
AMEND ; Amendment action
"RTN","TIURB",5,0)
 N TIUDA,DFN,DIE,DR,TIU,TIUDATA,TIUI,TIUSIG,TIUY,X,X1,Y
"RTN","TIURB",6,0)
 N DIROUT,TIUCHNG,TIUDAARY,TIULST
"RTN","TIURB",7,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB",8,0)
 S TIUI=0
"RTN","TIURB",9,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB",10,0)
 . N RSTRCTD
"RTN","TIURB",11,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB",12,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURB",13,0)
 . I RSTRCTD D  Q
"RTN","TIURB",14,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB",15,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB",16,0)
 . W !!,"Amending #",+TIUDATA
"RTN","TIURB",17,0)
 . S TIUCHNG=0
"RTN","TIURB",18,0)
 . D AMEND1
"RTN","TIURB",19,0)
 . I $G(TIUDAARY(TIUI)) D
"RTN","TIURB",20,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURB",21,0)
 ; -- Update or Rebuild list, restore video:
"RTN","TIURB",22,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB",23,0)
 S VALMBCK="R"
"RTN","TIURB",24,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"amended")
"RTN","TIURB",25,0)
 Q
"RTN","TIURB",26,0)
AMEND1 ; Single record amend
"RTN","TIURB",27,0)
 N TIUCMT,TIUT0,TIUTYP,TIUAMND,TIUSNM,TIUSBLK,TIUCSNM,TIUCSBLK,DIE,DR
"RTN","TIURB",28,0)
 N DA,DFN,DIWESUB,TIU,TIUODA,TIUTITL,TIUCLSS,TIUCON,TIUCNSLT,TIUPRF,TIUFLAG
"RTN","TIURB",29,0)
 K ^TMP("TIURTRCT",$J)
"RTN","TIURB",30,0)
 ; TIU*155 Gets consult data if exists
"RTN","TIURB",31,0)
 S TIUTITL=$P($G(^TIU(8925,TIUDA,0)),U)
"RTN","TIURB",32,0)
 S TIUCLSS=$$CLASS^TIUCNSLT()
"RTN","TIURB",33,0)
 S TIUCON=+$$ISA^TIULX(TIUTITL,TIUCLSS)
"RTN","TIURB",34,0)
 S TIUCNSLT=+$P($G(^TIU(8925,TIUDA,14)),U,5)
"RTN","TIURB",35,0)
 S TIUPRF=0,TIUFLAG=0
"RTN","TIURB",36,0)
 D ISPRFTTL^TIUPRF2(.TIUPRF,TIUTITL)
"RTN","TIURB",37,0)
 I TIUPRF S TIUFLAG=$$FNDACTIF^TIUPRFL(TIUDA)
"RTN","TIURB",38,0)
 L +^TIU(8925,+TIUDA):1
"RTN","TIURB",39,0)
 E  D  Q
"RTN","TIURB",40,0)
 . W !?5,$C(7),"Another user is editing this entry." H 3
"RTN","TIURB",41,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",42,0)
 I +$P($G(^TIU(8925,+TIUDA,0)),U,5)'>6 D  Q
"RTN","TIURB",43,0)
 . W !?5,$C(7),"Only SIGNED Documents may be amended."
"RTN","TIURB",44,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",45,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",46,0)
 I '$$ISA^USRLM(+$G(DUZ),"PRIVACY ACT OFFICER"),'$$ISA^USRLM(+$G(DUZ),"CHIEF, MIS"),'$$ISA^USRLM(+$G(DUZ),"CHIEF, HIM") D  Q
"RTN","TIURB",47,0)
 . W !?5,$C(7),"Only Privacy Act Officers or MIS/HIM Chiefs may amend documents."
"RTN","TIURB",48,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",49,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",50,0)
 I +$$HASIMG^TIURB2(TIUDA) D IMGNOTE^TIURB2 Q
"RTN","TIURB",51,0)
 ;S TIUAMND=$$CANDO^TIULP(TIUDA,"AMENDMENT")
"RTN","TIURB",52,0)
 ;I +TIUAMND'>0 D  Q
"RTN","TIURB",53,0)
 ;. W !!,$C(7),$C(7),$C(7),$P(TIUAMND,U,2),!
"RTN","TIURB",54,0)
 ;. S TIUCHNG("REFRESH")=1
"RTN","TIURB",55,0)
 ;. I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",56,0)
 ;VMP/ELR P232. ADDED NEXT PARAGRAPH TO PREVENT AMEND OF NIR OR ANESTHESIA REPORT  MUST USE SURGERY
"RTN","TIURB",57,0)
 I $$ISSURG^TIULP3(+TIUDA) D  Q
"RTN","TIURB",58,0)
 . S TIUAMND=$$SURMSG^TIULP3("AMENDMENT")
"RTN","TIURB",59,0)
 . W !!,$C(7),$C(7),$C(7),$G(TIUAMND),!
"RTN","TIURB",60,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",61,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",62,0)
 W !!,"Before proceeding, please enter your Electronic Signature Code..."
"RTN","TIURB",63,0)
 S TIUAMND=$$GETSIG^TIURD2
"RTN","TIURB",64,0)
 I +TIUAMND'>0 D  Q
"RTN","TIURB",65,0)
 . W !!,"  Ok, no harm done...",!
"RTN","TIURB",66,0)
 . S TIUCHNG("REFRESH")=1
"RTN","TIURB",67,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",68,0)
 W !!,"The ORIGINAL document will be RETRACTED, and a copy will be amended...",!
"RTN","TIURB",69,0)
 S TIUODA=TIUDA
"RTN","TIURB",70,0)
 S TIUDA=+$$RETRACT^TIURD2(TIUDA,"",7)
"RTN","TIURB",71,0)
 I '+TIUDA D  Q
"RTN","TIURB",72,0)
 . W !!,$C(7),$C(7),$C(7),"Retraction of Original Document Failed.",!
"RTN","TIURB",73,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB",74,0)
 . S TIUDA=TIUODA,TIUCHNG("REFRESH")=1
"RTN","TIURB",75,0)
 L +^TIU(8925,TIUDA):1
"RTN","TIURB",76,0)
 E  D  Q
"RTN","TIURB",77,0)
 . W !?5,$C(7),"Another user is editing this entry."
"RTN","TIURB",78,0)
 . D RECOVER^TIURD4(TIUODA,TIUDA) H 3
"RTN","TIURB",79,0)
 . S TIUPRF=$$LINK^TIUPRF1(TIUODA,+TIUFLAG,$P(TIUFLAG,U,2),$P($G(^TIU(8925,TIUODA,0)),U,2))
"RTN","TIURB",80,0)
 . S TIUDA=TIUODA,TIUCHNG("REFRESH")=1
"RTN","TIURB",81,0)
 S TIUSNM=$$DECRYPT^TIULC1($P(^TIU(8925,TIUDA,15),U,3),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",82,0)
 S TIUSBLK=$$DECRYPT^TIULC1($P($G(^TIU(8925,TIUDA,15)),U,4),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",83,0)
 S TIUCSNM=$$DECRYPT^TIULC1($P(^TIU(8925,TIUDA,15),U,9),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",84,0)
 S TIUCSBLK=$$DECRYPT^TIULC1($P($G(^TIU(8925,TIUDA,15)),U,10),1,$$CHKSUM^TIULC("^TIU(8925,"_TIUDA_",""TEXT"")"))
"RTN","TIURB",85,0)
 S TIUTYP=+$G(^TIU(8925,+TIUDA,0)),TIUT0=$G(^TIU(8925.1,+TIUTYP,0))
"RTN","TIURB",86,0)
 S TIUTYP(1)="1^"_+TIUTYP_U_$P(TIUT0,U,3)_U
"RTN","TIURB",87,0)
 S DFN=$P($G(^TIU(8925,+TIUDA,0)),U,2)
"RTN","TIURB",88,0)
 D GETTIU^TIULD(.TIU,TIUDA)
"RTN","TIURB",89,0)
 S DIWESUB="Patient: "_$G(TIU("PNM"))
"RTN","TIURB",90,0)
 S TIUCHNG=0 D FULL^VALM1,TEXTEDIT^TIUEDI4(TIUDA,.TIUCMT,.TIUCHNG)
"RTN","TIURB",91,0)
 I '+$G(TIUCHNG) D  Q
"RTN","TIURB",92,0)
 . L -^TIU(8925,TIUDA)
"RTN","TIURB",93,0)
 . D RECOVER^TIURD4(TIUODA,TIUDA)
"RTN","TIURB",94,0)
 . S TIUPRF=$$LINK^TIUPRF1(TIUODA,+TIUFLAG,$P(TIUFLAG,U,2),$P($G(^TIU(8925,TIUODA,0)),U,2))
"RTN","TIURB",95,0)
 . L -^TIU(8925,TIUODA) H 3
"RTN","TIURB",96,0)
 . S TIUDA=TIUODA,TIUCHNG("REFRESH")=1
"RTN","TIURB",97,0)
 I +$G(TIUCHNG) D
"RTN","TIURB",98,0)
 . S DR=".05///AMENDED;1601////"_$$NOW^XLFDT_";1602////"_DUZ,DA=TIUDA,TIUSIG=0
"RTN","TIURB",99,0)
 . S DR=DR_";1603////"_$$NOW^XLFDT_";1604///^S X=$$SIGNAME^TIULS(DUZ);1605///^S X=$$SIGTITL^TIULS(DUZ)",TIUSIG=1
"RTN","TIURB",100,0)
 . S DIE=8925 D ^DIE
"RTN","TIURB",101,0)
 . ; Refile /es/-block fields
"RTN","TIURB",102,0)
 . S DR="1503///^S X=TIUSNM;1504///^S X=TIUSBLK;1509///^S X=TIUCSNM;1510///^S X=TIUCSBLK"
"RTN","TIURB",103,0)
 . D ^DIE
"RTN","TIURB",104,0)
 ; Drop Locks on both documents
"RTN","TIURB",105,0)
 L -^TIU(8925,+TIUDA)
"RTN","TIURB",106,0)
 L -^TIU(8925,+TIUODA)
"RTN","TIURB",107,0)
 S TIUDAARY(TIUI)=TIUDA
"RTN","TIURB",108,0)
 S TIUCHNG("RBLD")=1
"RTN","TIURB",109,0)
 ; if note is associated with a patient record flag - clean up
"RTN","TIURB",110,0)
 I +TIUFLAG S TIUPRF=$$LINK^TIUPRF1(TIUDA,+TIUFLAG,$P(TIUFLAG,U,2),$P($G(^TIU(8925,TIUDA,0)),U,2))
"RTN","TIURB",111,0)
 ; TIU*155 If note is associated with a consult update ^GMR global
"RTN","TIURB",112,0)
 ; to include the amended note
"RTN","TIURB",113,0)
 ; Rollback retracted note from ^GMR(123 node 50
"RTN","TIURB",114,0)
 I $G(TIUCON)=1 D
"RTN","TIURB",115,0)
 . N STATUS,GMRCSTAT,TIUAUTH
"RTN","TIURB",116,0)
 . S STATUS=$P($G(^TIU(8925,TIUDA,0)),U,5)
"RTN","TIURB",117,0)
 . S GMRCSTAT=$S(STATUS>6:"COMPLETED",1:"INCOMPLETE")
"RTN","TIURB",118,0)
 . S TIUAUTH=$P($G(^TIU(8925,TIUDA,12)),U,2)
"RTN","TIURB",119,0)
 . D ROLLBACK^TIUCNSLT(TIUODA)
"RTN","TIURB",120,0)
 . D GET^GMRCTIU(TIUCNSLT,TIUDA,GMRCSTAT,TIUAUTH)
"RTN","TIURB",121,0)
 Q
"RTN","TIURB",122,0)
SENDBACK ; Send back a Document to transcription
"RTN","TIURB",123,0)
 N TIUDA,DFN,TIU,TIUDATA,TIUCHNG,TIUI,TIUY,Y,DIROUT,TIULST
"RTN","TIURB",124,0)
 N TIUDAARY
"RTN","TIURB",125,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB",126,0)
 S TIUI=0
"RTN","TIURB",127,0)
 I +$O(VALMY(0)) D CLEAR^VALM1
"RTN","TIURB",128,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB",129,0)
 . N TIU,RSTRCTD
"RTN","TIURB",130,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB",131,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURB",132,0)
 . I RSTRCTD D  Q
"RTN","TIURB",133,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB",134,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB",135,0)
 . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURB",136,0)
 . S TIUCHNG=0
"RTN","TIURB",137,0)
 . D EN^VALM("TIU SEND BACK")
"RTN","TIURB",138,0)
 . I +$G(TIUCHNG) D
"RTN","TIURB",139,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURB",140,0)
SENDX ; Revise list and cycle back as appropriate
"RTN","TIURB",141,0)
 I $G(TIUCHNG("ADDM"))!$G(TIUCHNG("DELETE")) S TIUCHNG("RBLD")=1
"RTN","TIURB",142,0)
 E  S TIUCHNG("UPDATE")=1
"RTN","TIURB",143,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB",144,0)
 S VALMBCK="R"
"RTN","TIURB",145,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"sent back")
"RTN","TIURB",146,0)
 Q
"RTN","TIURB",147,0)
LINK ; Link to problem(s)
"RTN","TIURB",148,0)
 N TIUCHNG,TIUDA,DFN,TIU,TIUDATA,TIUEDIT,TIUI,TIUY,TIULST,Y,DIROUT
"RTN","TIURB",149,0)
 N TIUDAARY
"RTN","TIURB",150,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB",151,0)
 S TIUI=0
"RTN","TIURB",152,0)
 I +$O(VALMY(0)) D CLEAR^VALM1
"RTN","TIURB",153,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB",154,0)
 . N TIU,VALMY,XQORM,VA,VADM,GMPDFN,GMPLUSER,RSTRCTD
"RTN","TIURB",155,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB",156,0)
 . S TIUDA=+$P(TIUDATA,U,2),GMPLUSER=1
"RTN","TIURB",157,0)
 . I '$D(^TIU(8925,+TIUDA,0)) D  Q
"RTN","TIURB",158,0)
 . . W !,$C(7),"Document no longer exists.",!
"RTN","TIURB",159,0)
 . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURB",160,0)
 . S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURB",161,0)
 . I RSTRCTD D  Q
"RTN","TIURB",162,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB",163,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB",164,0)
 . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURB",165,0)
 . S DFN=+$P($G(^TIU(8925,+TIUDA,0)),U,2)
"RTN","TIURB",166,0)
 . I +DFN D DEM^VADPT S GMPDFN=DFN_U_VADM(1)_U_$E(VADM(1))_VA("BID")
"RTN","TIURB",167,0)
 . S TIUCHNG=0
"RTN","TIURB",168,0)
 . D EN^VALM("TIU LINK TO PROBLEM")
"RTN","TIURB",169,0)
 . I +$G(TIUCHNG) S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURB",170,0)
LINKX ; Revise list and cycle back as appropriate
"RTN","TIURB",171,0)
 S TIUCHNG("REFRESH")=1
"RTN","TIURB",172,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB",173,0)
 S VALMBCK="R"
"RTN","TIURB",174,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"linked to problems")
"RTN","TIURB",175,0)
 Q
"RTN","TIURB",176,0)
DEL(DA) ; -- Call to DEL for backward compatibility
"RTN","TIURB",177,0)
 G GODEL^TIURB2
"RTN","TIURB",178,0)
 Q
"RTN","TIURB2")
0^6^B38846046^B37777164
"RTN","TIURB2",1,0)
TIURB2 ; SLC/JER,AJB - More Review Screen Actions ; 1/18/05
"RTN","TIURB2",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**100,109,154,112,184,232**;Jun 20, 1997;Build 19
"RTN","TIURB2",3,0)
 ; 2/3: Update TEXTEDIT from TIUEDIT to TIUEDI4
"RTN","TIURB2",4,0)
 ; 9/28 Moved DELETE, DEL, DELTEXT, DIK to new rtn TIURB2
"RTN","TIURB2",5,0)
 ; 8/2/02 DELTEXT logic to bypass user-response if called by GUI TIU*1*154
"RTN","TIURB2",6,0)
 ;        GODEL+12, changed direct access of DPT global to FM
"RTN","TIURB2",7,0)
 Q
"RTN","TIURB2",8,0)
DELETE ; Delete action
"RTN","TIURB2",9,0)
 N TIUI,TIUY,TIUCHNG,Y,DIROUT,DTOUT,DUOUT
"RTN","TIURB2",10,0)
 N TIULNO,TIUJ,PRNTDA,LSTDA
"RTN","TIURB2",11,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURB2",12,0)
 S TIUI=0
"RTN","TIURB2",13,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURB2",14,0)
 . N TIUDATA,DA,RSTRCTD
"RTN","TIURB2",15,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURB2",16,0)
 . S DA=+$P(TIUDATA,U,2)
"RTN","TIURB2",17,0)
 . W !!,"Processing Item #",TIUI
"RTN","TIURB2",18,0)
 . L +^TIU(8925,+DA):1
"RTN","TIURB2",19,0)
 . E  D  Q
"RTN","TIURB2",20,0)
 . . W !?5,$C(7),"Another user is editing this entry."
"RTN","TIURB2",21,0)
 . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURB2",22,0)
 . . D PICK^TIULM(TIUI)
"RTN","TIURB2",23,0)
 . S RSTRCTD=$$DOCRES^TIULRR(DA)
"RTN","TIURB2",24,0)
 . I RSTRCTD D  Q
"RTN","TIURB2",25,0)
 . . W !!,$C(7),"Ok, no harm done...",! ; Echo denial message
"RTN","TIURB2",26,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURB2",27,0)
 . D DEL(DA)
"RTN","TIURB2",28,0)
 . L -^TIU(8925,+DA)
"RTN","TIURB2",29,0)
 ; -- Update or Rebuild list, restore video:
"RTN","TIURB2",30,0)
 S TIUCHNG("RBLD")=1
"RTN","TIURB2",31,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURB2",32,0)
 S VALMBCK="R"
"RTN","TIURB2",33,0)
 Q
"RTN","TIURB2",34,0)
DEL(DA) ; We don't hand out pencils, without erasers
"RTN","TIURB2",35,0)
GODEL ; -- Called from DEL^TIURB
"RTN","TIURB2",36,0)
 N CANDEL,TIUDA,TIUD0,TIUI,TIUDFLT,TIUPT,TIUVDT,TIUTYP,PROMPT,TIUAUDIT
"RTN","TIURB2",37,0)
 N TIUMSG,TIURSN,TIUVTYP,TIUABORT,ADDMPRNT,IDPRNT,TIUAUTH,TIUD12,STATUS
"RTN","TIURB2",38,0)
 L +^TIU(8925,+DA):1
"RTN","TIURB2",39,0)
 E  D  Q
"RTN","TIURB2",40,0)
 . W !?5,$C(7),"Another user is editing this entry."
"RTN","TIURB2",41,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURB2",42,0)
 I +$$HASIMG(DA) D IMGNOTE Q
"RTN","TIURB2",43,0)
 S TIUD0=$G(^TIU(8925,+DA,0)),TIUD12=$G(^(12))
"RTN","TIURB2",44,0)
 S TIUTYP=$$UP^XLFSTR($$PNAME^TIULC1(+TIUD0)),TIUAUTH=$P(TIUD12,U,2)
"RTN","TIURB2",45,0)
 S STATUS=$P(TIUD0,U,5),ADDMPRNT=+$P(TIUD0,U,6)
"RTN","TIURB2",46,0)
 S IDPRNT=+$P($G(^TMP("TIUR",$J,"IDDATA",DA)),U,3)
"RTN","TIURB2",47,0)
 S TIUPT=$$NAME^TIULS($P($G(^DPT(+$P(TIUD0,U,2),0)),U),"FIRST LAST")
"RTN","TIURB2",48,0)
 S TIUVDT=+$P(TIUD0,U,7)
"RTN","TIURB2",49,0)
 S TIUVDT=$$DATE^TIULS(TIUVDT,"MM/DD/YY"_$S($L(TIUVDT,".")=2:" HR:MIN",1:""))
"RTN","TIURB2",50,0)
 S TIUVTYP=$S(+$$ISDS^TIULX(+TIUD0):" Admission",1:" Visit")
"RTN","TIURB2",51,0)
 S TIUMSG="DELETING "_TIUTYP_" For "_TIUPT_"'s "_TIUVDT_TIUVTYP_"."
"RTN","TIURB2",52,0)
 S CANDEL=$$CANDO^TIULP(DA,"DELETE RECORD")
"RTN","TIURB2",53,0)
 ;VMP/ELR NEXT PARAGRAPH ADDED LONGER HANG FOR LONG ERROR MESSAGES
"RTN","TIURB2",54,0)
 I 'CANDEL D  G DELX
"RTN","TIURB2",55,0)
 . NEW TIUHANG S TIUHANG=2 I $L($G(CANDEL))>99 S TIUHANG=5
"RTN","TIURB2",56,0)
 . W !!,$C(7),$C(7),$C(7),$P(CANDEL,U,2),! H TIUHANG
"RTN","TIURB2",57,0)
 I $$HASIDKID^TIUGBR(DA) W !!,"This interdisciplinary parent cannot be deleted; its entries must first",!,"be detached.",! H 3 G DELX
"RTN","TIURB2",58,0)
 I $O(^TIU(8925,"DAD",+DA,0))>0,$$HASADDEN^TIULC1(DA) D
"RTN","TIURB2",59,0)
 . W !!,"This "_TIUTYP_" has ADDENDA."
"RTN","TIURB2",60,0)
 W !,$C(7) F TIUI=1:1:$L(TIUMSG,"|") W !,$P(TIUMSG,"|",TIUI)
"RTN","TIURB2",61,0)
 W ! S PROMPT="Are you SURE you want to DELETE"
"RTN","TIURB2",62,0)
 I '$$READ^TIUU("YO",PROMPT,"NO") W !,"Nothing DELETED.",! H 2 S TIUCHNG=0 G DELX
"RTN","TIURB2",63,0)
 S PROMPT="DELETE the TEXT ONLY, leaving audit trail information"
"RTN","TIURB2",64,0)
 S TIUDA=DA
"RTN","TIURB2",65,0)
 I STATUS'>5,$S(DUZ=TIUAUTH:1,+$$ISA^USRLM(DUZ,"MEDICAL INFORMATION SECTION")'>0:1,1:0) S TIUAUDIT=0 I 1
"RTN","TIURB2",66,0)
 E  D  G:$D(TIUABORT) DELX
"RTN","TIURB2",67,0)
 . I +$P($G(^TIU(8925,+TIUDA,0)),U,5)'<6 S TIUAUDIT=1
"RTN","TIURB2",68,0)
 . E  D
"RTN","TIURB2",69,0)
 . . S TIUAUDIT=+$$READ^TIUU("YO",PROMPT,"NO")
"RTN","TIURB2",70,0)
 . . I $D(DTOUT)!($D(DUOUT)) D
"RTN","TIURB2",71,0)
 . . . W !,"Nothing DELETED.",!
"RTN","TIURB2",72,0)
 . . . S TIUCHNG=0,TIUABORT=1
"RTN","TIURB2",73,0)
 . . . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB2",74,0)
 K ^TIU(8925,"ASAVE",DUZ,TIUDA) ; Remove SAVE-flag
"RTN","TIURB2",75,0)
 I +TIUAUDIT'>0 D  G DELX
"RTN","TIURB2",76,0)
 . W !,"DELETING Entire "_TIUTYP_" record.",!
"RTN","TIURB2",77,0)
 . D DELIRT^TIUDIRT(TIUDA),DIK(TIUDA) H 2
"RTN","TIURB2",78,0)
 . S TIUCHNG=2,TIUCHNG("DELETE")=1
"RTN","TIURB2",79,0)
 . D ALERTDEL^TIUALRT(TIUDA),DELSGNR^TIURB1(TIUDA)
"RTN","TIURB2",80,0)
 S PROMPT="Reason for DELETION (Privacy Act or Administrative): "
"RTN","TIURB2",81,0)
 S TIURSN=$P($$READ^TIUU("SA^P:privacy act;A:administrative",PROMPT,"PRIVACY ACT"),U)
"RTN","TIURB2",82,0)
 I '$L(TIURSN) D  G DELX
"RTN","TIURB2",83,0)
 . W !,"Nothing DELETED.",!
"RTN","TIURB2",84,0)
 . S TIUCHNG=0,TIUABORT=1
"RTN","TIURB2",85,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB2",86,0)
 D ALERTDEL^TIUALRT(TIUDA),DELSGNR^TIURB1(TIUDA)
"RTN","TIURB2",87,0)
 D DELTEXT(TIUDA,TIURSN),AUDEL^TIURB1(TIUDA,TIURSN) S TIUCHNG=1
"RTN","TIURB2",88,0)
DELX L -^TIU(8925,+DA)
"RTN","TIURB2",89,0)
 Q
"RTN","TIURB2",90,0)
DELTEXT(DA,TIURSN) ; After signature, only retraction possible
"RTN","TIURB2",91,0)
 N DR,DIE,TIUDA,TIUY I '$D(ZTQUEUED) D FULL^VALM1
"RTN","TIURB2",92,0)
 S TIUDA=DA
"RTN","TIURB2",93,0)
 W !!?5,$C(7),"***********************************************************************"
"RTN","TIURB2",94,0)
 W !?5,"*  This document will now be RETRACTED. As such, it has been removed  *"
"RTN","TIURB2",95,0)
 W !?5,"*    from public view, and from typical Releases of Information,      *"
"RTN","TIURB2",96,0)
 W !?5,"*          but will remain indefinitely discoverable to HIMS.         *"
"RTN","TIURB2",97,0)
 W !?5,"***********************************************************************",!
"RTN","TIURB2",98,0)
 S DIE=8925
"RTN","TIURB2",99,0)
 S DR="1610////^S X=+DUZ;1611////^S X=+$$NOW^XLFDT;1612////^S X=TIURSN"
"RTN","TIURB2",100,0)
 D ^DIE
"RTN","TIURB2",101,0)
 S DA=$$RETRACT^TIURD2(DA,"",14)
"RTN","TIURB2",102,0)
 ; Unlink PRF titles when TIU changes require it TIU*1*184
"RTN","TIURB2",103,0)
 D ISPRFTTL^TIUPRF2(.TIUY,+$G(^TIU(8925,TIUDA,0))) I +TIUY D UNLINK^TIUPRF1(TIUDA)
"RTN","TIURB2",104,0)
 ; Roll back SURGICAL REPORT TITLES when TIU changes require it ; TIU*1*112
"RTN","TIURB2",105,0)
 D ISSURG^TIUSROI(.TIUY,+$G(^TIU(8925,TIUDA,0))) I +TIUY D RETRACT^TIUSROI1(TIUDA)
"RTN","TIURB2",106,0)
 ; Remove link to consult if a Consult Title
"RTN","TIURB2",107,0)
 D ISCNSLT^TIUCNSLT(.TIUY,+$G(^TIU(8925,TIUDA,0))) I +TIUY D REMCNSLT^TIUCNSLT(TIUDA)
"RTN","TIURB2",108,0)
 I '$$BROKER^XWBLIB D
"RTN","TIURB2",109,0)
 . I '$D(ZTQUEUED),$$READ^TIUU("EA","Press RETURN to continue...")
"RTN","TIURB2",110,0)
 Q
"RTN","TIURB2",111,0)
DIK(DA,SUPPACT) ; Call ^DIK to delete the record
"RTN","TIURB2",112,0)
 ; [SUPPACT] = Boolean to suppress delete action
"RTN","TIURB2",113,0)
 N DIK,TIUTYP,TIUTYPE,TIUDA,TIUVSIT,TIUVKILL,TIUDELX S TIUDA=0
"RTN","TIURB2",114,0)
 F  S TIUDA=+$O(^TIU(8925,"DAD",+DA,TIUDA)) Q:+TIUDA'>0  D DIK(TIUDA)
"RTN","TIURB2",115,0)
 S TIUTYPE=+$G(^TIU(8925,+DA,0)),SUPPACT=+$G(SUPPACT)
"RTN","TIURB2",116,0)
 S TIUTYP=$P($G(^TIU(8925.1,TIUTYPE,0)),U)
"RTN","TIURB2",117,0)
 S TIUVSIT=+$P($G(^TIU(8925,DA,0)),U,3),TIUDA=DA
"RTN","TIURB2",118,0)
 S TIUDELX=$$DELETE^TIULC1(TIUTYPE)
"RTN","TIURB2",119,0)
 I TIUDELX]"",'SUPPACT X TIUDELX
"RTN","TIURB2",120,0)
 S DIK="^TIU(8925,"
"RTN","TIURB2",121,0)
 D ^DIK ; W:'$D(ZTQUEUED) "."
"RTN","TIURB2",122,0)
 D DELAUDIT^TIUEDI1(DA)
"RTN","TIURB2",123,0)
 D DELPROB^TIURB1(DA)
"RTN","TIURB2",124,0)
 D DELSGNR^TIURB1(DA)
"RTN","TIURB2",125,0)
 D DELIMG(DA)
"RTN","TIURB2",126,0)
 D ALERTDEL^TIUALRT(DA)
"RTN","TIURB2",127,0)
 ; **52** Disable call to $$DELVFILE^PXAPI 'til further notice
"RTN","TIURB2",128,0)
 ; I +TIUVSIT,$D(^AUPNVSIT(+TIUVSIT)) S TIUVKILL=$$DELVFILE^PXAPI("ALL",TIUVSIT,"","TEXT INTEGRATION UTILITIES")
"RTN","TIURB2",129,0)
 Q
"RTN","TIURB2",130,0)
HASIMG(TIUDA) ; Evaluate whether images are linked
"RTN","TIURB2",131,0)
 Q +$O(^TIU(8925.91,"B",TIUDA,0))
"RTN","TIURB2",132,0)
IMGNOTE ; Present Notice of Linked Images
"RTN","TIURB2",133,0)
 D FULL^VALM1
"RTN","TIURB2",134,0)
 W !!?5,$C(7),"***********************************************************************"
"RTN","TIURB2",135,0)
 W !?5,"* This document has linked images. You must ""delete"" the Images using *"
"RTN","TIURB2",136,0)
 W !?5,"*        the Imaging Package before proceeding with this action.      *"
"RTN","TIURB2",137,0)
 W !?5,"*      The images will be hidden from public view, but will remain    *"
"RTN","TIURB2",138,0)
 W !?5,"*                   indefinitely discoverable to HIMS.                *"
"RTN","TIURB2",139,0)
 W !?5,"***********************************************************************",!
"RTN","TIURB2",140,0)
 I $$READ^TIUU("EA","Press RETURN to continue...") ; pause
"RTN","TIURB2",141,0)
 Q
"RTN","TIURB2",142,0)
DELIMG(TIUDA) ; Remove linked images, when document deleted
"RTN","TIURB2",143,0)
 N DA,DIK S DIK="^TIU(8925.91,",DA=0
"RTN","TIURB2",144,0)
 F  S DA=$O(^TIU(8925.91,"B",TIUDA,DA)) Q:+DA'>0  D ^DIK
"RTN","TIURB2",145,0)
 Q
"RTN","TIURC")
0^7^B19778021^B18442801
"RTN","TIURC",1,0)
TIURC ; SLC/JER - Additional Review screen actions ;5/19/04
"RTN","TIURC",2,0)
 ;;1.0;TEXT INTEGRATION UTILITIES;**1,4,36,48,67,79,58,100,182,232**;Jun 20, 1997;Build 19
"RTN","TIURC",3,0)
VERIFY ; Verify Documents
"RTN","TIURC",4,0)
 N TIUCHNG,TIUDATA,TIUI,TIUY,Y,DIROUT,TIULST,TIUDAARY
"RTN","TIURC",5,0)
 I '$D(VALMY) D EN^VALM2(XQORNOD(0))
"RTN","TIURC",6,0)
 S TIUI=0
"RTN","TIURC",7,0)
 F  S TIUI=$O(VALMY(TIUI)) Q:+TIUI'>0  D  Q:$D(DIROUT)
"RTN","TIURC",8,0)
 . N TIU,TIUDATA,TIUDA,RSTRCTD
"RTN","TIURC",9,0)
 . S TIUDATA=$G(^TMP("TIURIDX",$J,TIUI))
"RTN","TIURC",10,0)
 . S TIUDA=+$P(TIUDATA,U,2) S RSTRCTD=$$DOCRES^TIULRR(TIUDA)
"RTN","TIURC",11,0)
 . I RSTRCTD D  Q
"RTN","TIURC",12,0)
 . . W !!,$C(7),"Ok, no harm done...",!
"RTN","TIURC",13,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURC",14,0)
 . S TIUDAARY(TIUI)=TIUDA
"RTN","TIURC",15,0)
 . S TIUCHNG=0
"RTN","TIURC",16,0)
 . D EN^VALM("TIU VERIFY")
"RTN","TIURC",17,0)
 . K ^TMP("TIUVIEW",$J)
"RTN","TIURC",18,0)
 . I +$G(TIUCHNG) D
"RTN","TIURC",19,0)
 . . S TIULST=$G(TIULST)_$S($G(TIULST)]"":",",1:"")_TIUI
"RTN","TIURC",20,0)
 ; -- Update or Rebuild list, restore video:
"RTN","TIURC",21,0)
 I $G(TIUCHNG("ADDM"))!$G(TIUCHNG("DELETE")) S TIUCHNG("RBLD")=1
"RTN","TIURC",22,0)
 E  S TIUCHNG("UPDATE")=1
"RTN","TIURC",23,0)
 D UPRBLD^TIURL(.TIUCHNG,.VALMY) K VALMY
"RTN","TIURC",24,0)
 S VALMBCK="R"
"RTN","TIURC",25,0)
 D VMSG^TIURS1($G(TIULST),.TIUDAARY,"verified/unverified")
"RTN","TIURC",26,0)
 Q
"RTN","TIURC",27,0)
VERIFY1 ; Single record verify
"RTN","TIURC",28,0)
 ; Receives TIUDA
"RTN","TIURC",29,0)
 N DA,DIE,DR,TIUTYP,TIUQUIT,TIUT0,TIUTNM,TIUVERX
"RTN","TIURC",30,0)
 S TIUTYP=+$G(^TIU(8925,+TIUDA,0)),TIUT0=$G(^TIU(8925.1,+TIUTYP,0))
"RTN","TIURC",31,0)
 S TIUTNM=$$PNAME^TIULC1(+TIUTYP)
"RTN","TIURC",32,0)
 S TIUTYP(1)="1^"_+TIUTYP_U_TIUTNM_U
"RTN","TIURC",33,0)
 I $$DADORKID^TIUGBR(TIUDA) D  Q
"RTN","TIURC",34,0)
 . W !!,$C(7),"This ",TIUTNM," is an interdisciplinary entry.",!,"ID entries must be verified prior to attaching.",!
"RTN","TIURC",35,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURC",36,0)
 I +$P($G(^TIU(8925,+TIUDA,15)),U)!+$P($G(^(15)),U,7) D  Q
"RTN","TIURC",37,0)
 . W !!,$C(7),"This ",TIUTNM," is already signed.",!
"RTN","TIURC",38,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURC",39,0)
 ; -- Can't verify admin closed docmts (P182):
"RTN","TIURC",40,0)
 I +$P($G(^TIU(8925,+TIUDA,16)),U,6) D  Q
"RTN","TIURC",41,0)
 . W !!,$C(7),"This ",TIUTNM," is already closed.",!
"RTN","TIURC",42,0)
 . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","TIURC",43,0)
 I +$P($G(^TIU(8925,+TIUDA,13)),U,5) D  Q
"RTN","TIURC",44,0)
 . W !!,"This ",TIUTNM," is already verified."
"RTN","TIURC",45,0)
 . S TIUY=$$READ^TIUU("YO","Do you want to UNVERIFY this "_TIUTNM,"NO","^D UNVER^TIUDIRH")
"RTN","TIURC",46,0)
 . I TIUY W !,TIUTNM," UNVERIFIED" D
"RTN","TIURC",47,0)
 . . S DA=TIUDA,DIE=8925,DR=".05///UNVERIFIED;1305///@;1306///@" D ^DIE
"RTN","TIURC",48,0)
 . . W "." S TIUCHNG=1
"RTN","TIURC",49,0)
 . . D ALERTDEL^TIUALRT(TIUDA)
"RTN","TIURC",50,0)
 N DUOUT,DIROUT,DTOUT
"RTN","TIURC",51,0)
 S TIUY=$$READ^TIUU("YO","Do you want to edit this "_TIUTNM,"NO")
"RTN","TIURC",52,0)
 I +TIUY D
"RTN","TIURC",53,0)
 . ;VMP/ELR ADDED NEXT 2 LINES TO PROHIBIT EDIT OF SURGERY WHILE VERIFYING
"RTN","TIURC",54,0)
 . NEW TIUMSG S TIUMSG=$$CANDO^TIULP(TIUDA,"EDIT RECORD") I +TIUMSG'>0 D  Q
"RTN","TIURC",55,0)
 . . W !!,$C(7),$P(TIUMSG,U,2),!
"RTN","TIURC",56,0)
 . D GETTIU^TIULD(.TIU,TIUDA),CLEAR^VALM1
"RTN","TIURC",57,0)
 . D DIE^TIUEDI4(TIUDA,.TIUQUIT) ; **100**
"RTN","TIURC",58,0)
 I +TIUY'>0,$S(+$G(TIUQUIT):1,$D(DUOUT):1,$D(DIROUT):1,$D(DTOUT):1,1:0) Q
"RTN","TIURC",59,0)
 S TIUY=$$READ^TIUU("YO","VERIFY this "_TIUTNM,"NO","^D VER^TIUDIRH")
"RTN","TIURC",60,0)
 I 'TIUY W !,TIUTNM," NOT VERIFIED." Q
"RTN","TIURC",61,0)
 S DA=TIUDA,DIE=8925,DR=".05///UNSIGNED;1305////"_$$NOW^TIULC_";1306////"_$G(DUZ) D ^DIE
"RTN","TIURC",62,0)
 S TIUCHNG=1,TIUVERX=$$VERIFY^TIULC1(+$G(^TIU(8925,+TIUDA,0)))
"RTN","TIURC",63,0)
 I TIUVERX]"" X TIUVERX
"RTN","TIURC",64,0)
 I +DA W !,TIUTNM," VERIFIED." D MAIN^TIUPD(DA,"V"),SEND^TIUALRT(DA)
"RTN","TIURC",65,0)
 Q
"RTN","TIURC",66,0)
ADD ; Add Document
"RTN","TIURC",67,0)
 N TIUONCE,TIUNDA,TIUCLASS,TIUCREAT,TIUITEM,LINENO,VALMY,TIUCHNG,RSTRCTD
"RTN","TIURC",68,0)
 ; OK to new TIUCHNG here, this is not used in browse.
"RTN","TIURC",69,0)
 S TIUONCE=1
"RTN","TIURC",70,0)
 S TIUCLASS=$S($G(VALM("ENTITY"))="Progress Note":3,$G(VALM("ENTITY"))="Discharge Summary":244,1:38)
"RTN","TIURC",71,0)
 D FULL^VALM1
"RTN","TIURC",72,0)
 I +$G(DFN) D  Q:+$G(RSTRCTD)
"RTN","TIURC",73,0)
 . S RSTRCTD=$$PTRES^TIULRR(DFN)
"RTN","TIURC",74,0)
 . I RSTRCTD D  Q
"RTN","TIURC",75,0)
 . . W !!,$C(7),"Ok, no harm done...",!
"RTN","TIURC",76,0)
 . . I $$READ^TIUU("EA","RETURN to continue...") ; pause
"RTN","TIURC",77,0)
 ; -- MAIN^TIUEDIT looks like:
"RTN","TIURC",78,0)
 ;    MAIN(TIUCLASS,SUCCESS,DFN,TIUTITLE,EVNTFLAG,NOSAVE,
"RTN","TIURC",79,0)
 ;         TIUNDA,TIUSNGL,TIUCHNG)
"RTN","TIURC",80,0)
 ;    i.e. TIUTITLE,EVNTFLAG,NOSAVE,TIUSNGL are null
"RTN","TIURC",81,0)
 D MAIN^TIUEDIT(TIUCLASS,.TIUCREAT,+$G(DFN),"","","",.TIUNDA,"",.TIUCHNG)
"RTN","TIURC",82,0)
 I $G(TIUCHNG("DELETE"))!$G(TIUCHNG("ADDM"))!$G(TIUCHNG("EXIST"))!$G(TIUCHNG("AVAIL")) S TIUCHNG("RBLD")=1
"RTN","TIURC",83,0)
 I +$O(TIUNDA(0))'>0 S TIUCHNG("REFRESH")=1 G ADDX
"RTN","TIURC",84,0)
 ; -- If in TIU OE/RR REVIEW PN, rebuild list and quit:
"RTN","TIURC",85,0)
 I $G(^TMP("TIUR",$J,"RTN"))="TIUROR" S TIUCHNG("RBLD")=1 G ADDX
"RTN","TIURC",86,0)
 ; -- If in Review Notes by Patient (no review screen),
"RTN","TIURC",87,0)
 ;    or rebuilding, don't add elements to end of screen:
"RTN","TIURC",88,0)
 I '$D(^TMP("TIUR",$J,"RTN")) G ADDX
"RTN","TIURC",89,0)
 I $G(TIUCHNG("RBLD")) G ADDX
"RTN","TIURC",90,0)
 ; -- If in an integrated docmts option, add one line
"RTN","TIURC",91,0)
 ;    to screen for each new docmt, refresh list, and quit:
"RTN","TIURC",92,0)
 S TIUNDA=0
"RTN","TIURC",93,0)
 F  S TIUNDA=$O(TIUNDA(TIUNDA)) Q:+TIUNDA'>0  D
"RTN","TIURC",94,0)
 . S TIUITEM=+$G(^TMP("TIUR",$J,0))
"RTN","TIURC",95,0)
 . ; -- Don't add if editing existing docmt which is already in list:
"RTN","TIURC",96,0)
 . S LINENO=$O(^TMP("TIUR",$J,"IEN",TIUNDA,0))
"RTN","TIURC",97,0)
 . I LINENO D  Q
"RTN","TIURC",98,0)
 . . S VALMY(LINENO)="",TIUCHNG("UPDATE")=1
"RTN","TIURC",99,0)
 . D ADDELMNT^TIUR2(TIUNDA,+TIUITEM,1)
"RTN","TIURC",100,0)
 S TIUCHNG("REFRESH")=1
"RTN","TIURC",101,0)
ADDX D UPRBLD^TIURL(.TIUCHNG,.VALMY)
"RTN","TIURC",102,0)
 Q
"RTN","TIURC",103,0)
COPY1 ; -- Call to COPY1 for backward compatibility
"RTN","TIURC",104,0)
 G COPY1^TIURC1
"RTN","TIURC",105,0)
 Q
"VER")
8.0^22.0
"BLD",7571,6)
^233
**END**
**END**
