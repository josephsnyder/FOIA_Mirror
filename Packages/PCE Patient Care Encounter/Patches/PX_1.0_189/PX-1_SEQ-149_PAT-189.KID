Released PX*1*189 SEQ #149
Extracted from mail message
**KIDS**:PX*1.0*189^

**INSTALL NAME**
PX*1.0*189
"BLD",7413,0)
PX*1.0*189^PCE PATIENT CARE ENCOUNTER^0^3090828^y
"BLD",7413,1,0)
^^15^15^3090828^^^^
"BLD",7413,1,1,0)
This patch will change the existing code for the Caseload Profile by 
"BLD",7413,1,2,0)
Clinic [PXRR CASELOAD PROFILE BY CL] report to remove the existing direct
"BLD",7413,1,3,0)
global read, so data is now pulled from the PXRMINDX index.
"BLD",7413,1,4,0)
 
"BLD",7413,1,5,0)
The second item this patch will modify is the report logic to display
"BLD",7413,1,6,0)
historical encounters that with no Loc. of Encounter (#.06) field
"BLD",7413,1,7,0)
populated in the Visit (#9000010) file when running the report Provider
"BLD",7413,1,8,0)
Encounter Counts [PXRR PROVIDER ENCOUNTER COUNTS] and selecting Service
"BLD",7413,1,9,0)
Category "EVENT (HISTORICAL)", it returns very few or no encounters. 
"BLD",7413,1,10,0)
Encounters occurred at Non-VA sites will be included in the report as 
"BLD",7413,1,11,0)
well.
"BLD",7413,1,12,0)
 
"BLD",7413,1,13,0)
The last item this patch will fix is an 'O' displayed after accepting the 
"BLD",7413,1,14,0)
default value N from a prompt when running the Provider Encounter Counts 
"BLD",7413,1,15,0)
report.
"BLD",7413,4,0)
^9.64PA^^
"BLD",7413,6)
5^
"BLD",7413,6.3)
13
"BLD",7413,"ABPKG")
n
"BLD",7413,"KRN",0)
^9.67PA^8989.52^19
"BLD",7413,"KRN",.4,0)
.4
"BLD",7413,"KRN",.401,0)
.401
"BLD",7413,"KRN",.402,0)
.402
"BLD",7413,"KRN",.403,0)
.403
"BLD",7413,"KRN",.5,0)
.5
"BLD",7413,"KRN",.84,0)
.84
"BLD",7413,"KRN",3.6,0)
3.6
"BLD",7413,"KRN",3.8,0)
3.8
"BLD",7413,"KRN",9.2,0)
9.2
"BLD",7413,"KRN",9.8,0)
9.8
"BLD",7413,"KRN",9.8,"NM",0)
^9.68A^8^6
"BLD",7413,"KRN",9.8,"NM",2,0)
PXRRECSE^^0^B59966884
"BLD",7413,"KRN",9.8,"NM",3,0)
PXRRPCE5^^0^B20348077
"BLD",7413,"KRN",9.8,"NM",4,0)
PXRRPRSP^^0^B26422525
"BLD",7413,"KRN",9.8,"NM",6,0)
PXRRLCSC^^0^B21063120
"BLD",7413,"KRN",9.8,"NM",7,0)
PXRRPRD^^0^B6825949
"BLD",7413,"KRN",9.8,"NM",8,0)
PXRRPRDP^^0^B30581269
"BLD",7413,"KRN",9.8,"NM","B","PXRRECSE",2)

"BLD",7413,"KRN",9.8,"NM","B","PXRRLCSC",6)

"BLD",7413,"KRN",9.8,"NM","B","PXRRPCE5",3)

"BLD",7413,"KRN",9.8,"NM","B","PXRRPRD",7)

"BLD",7413,"KRN",9.8,"NM","B","PXRRPRDP",8)

"BLD",7413,"KRN",9.8,"NM","B","PXRRPRSP",4)

"BLD",7413,"KRN",19,0)
19
"BLD",7413,"KRN",19.1,0)
19.1
"BLD",7413,"KRN",101,0)
101
"BLD",7413,"KRN",409.61,0)
409.61
"BLD",7413,"KRN",771,0)
771
"BLD",7413,"KRN",870,0)
870
"BLD",7413,"KRN",8989.51,0)
8989.51
"BLD",7413,"KRN",8989.52,0)
8989.52
"BLD",7413,"KRN",8994,0)
8994
"BLD",7413,"KRN","B",.4,.4)

"BLD",7413,"KRN","B",.401,.401)

"BLD",7413,"KRN","B",.402,.402)

"BLD",7413,"KRN","B",.403,.403)

"BLD",7413,"KRN","B",.5,.5)

"BLD",7413,"KRN","B",.84,.84)

"BLD",7413,"KRN","B",3.6,3.6)

"BLD",7413,"KRN","B",3.8,3.8)

"BLD",7413,"KRN","B",9.2,9.2)

"BLD",7413,"KRN","B",9.8,9.8)

"BLD",7413,"KRN","B",19,19)

"BLD",7413,"KRN","B",19.1,19.1)

"BLD",7413,"KRN","B",101,101)

"BLD",7413,"KRN","B",409.61,409.61)

"BLD",7413,"KRN","B",771,771)

"BLD",7413,"KRN","B",870,870)

"BLD",7413,"KRN","B",8989.51,8989.51)

"BLD",7413,"KRN","B",8989.52,8989.52)

"BLD",7413,"KRN","B",8994,8994)

"BLD",7413,"QDEF")
^^^^NO^^^^^^YES
"BLD",7413,"QUES",0)
^9.62^^
"BLD",7413,"REQB",0)
^9.611^5^3
"BLD",7413,"REQB",1,0)
PX*1.0*72^2
"BLD",7413,"REQB",4,0)
PX*1.0*48^2
"BLD",7413,"REQB",5,0)
PX*1.0*61^2
"BLD",7413,"REQB","B","PX*1.0*48",4)

"BLD",7413,"REQB","B","PX*1.0*61",5)

"BLD",7413,"REQB","B","PX*1.0*72",1)

"MBREQ")
0
"PKG",413,-1)
1^1
"PKG",413,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)^
"PKG",413,20,0)
^9.402P^^
"PKG",413,22,0)
^9.49I^1^1
"PKG",413,22,1,0)
1.0^2960812^2960913^12537
"PKG",413,22,1,"PAH",1,0)
189^3090828^100892
"PKG",413,22,1,"PAH",1,1,0)
^^15^15^3090828
"PKG",413,22,1,"PAH",1,1,1,0)
This patch will change the existing code for the Caseload Profile by 
"PKG",413,22,1,"PAH",1,1,2,0)
Clinic [PXRR CASELOAD PROFILE BY CL] report to remove the existing direct
"PKG",413,22,1,"PAH",1,1,3,0)
global read, so data is now pulled from the PXRMINDX index.
"PKG",413,22,1,"PAH",1,1,4,0)
 
"PKG",413,22,1,"PAH",1,1,5,0)
The second item this patch will modify is the report logic to display
"PKG",413,22,1,"PAH",1,1,6,0)
historical encounters that with no Loc. of Encounter (#.06) field
"PKG",413,22,1,"PAH",1,1,7,0)
populated in the Visit (#9000010) file when running the report Provider
"PKG",413,22,1,"PAH",1,1,8,0)
Encounter Counts [PXRR PROVIDER ENCOUNTER COUNTS] and selecting Service
"PKG",413,22,1,"PAH",1,1,9,0)
Category "EVENT (HISTORICAL)", it returns very few or no encounters. 
"PKG",413,22,1,"PAH",1,1,10,0)
Encounters occurred at Non-VA sites will be included in the report as 
"PKG",413,22,1,"PAH",1,1,11,0)
well.
"PKG",413,22,1,"PAH",1,1,12,0)
 
"PKG",413,22,1,"PAH",1,1,13,0)
The last item this patch will fix is an 'O' displayed after accepting the 
"PKG",413,22,1,"PAH",1,1,14,0)
default value N from a prompt when running the Provider Encounter Counts 
"PKG",413,22,1,"PAH",1,1,15,0)
report.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","PXRRECSE")
0^2^B59966884^B49433031
"RTN","PXRRECSE",1,0)
PXRRECSE ;ISL/PKR - Sort through encounters applying the selection criteria. ;6/27/97
"RTN","PXRRECSE",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**3,10,12,18,72,189**;Aug 12, 1996;Build 13
"RTN","PXRRECSE",3,0)
 ;;Reference to ^DIC(4 supported by DBIA 10090
"RTN","PXRRECSE",4,0)
 ;;Reference to ^DIC(40.7 supported by DBIA 93-C
"RTN","PXRRECSE",5,0)
SORT ;
"RTN","PXRRECSE",6,0)
 N BD,BUSY,CLASSNAM,CLINIC,CLINIEN,CSSCR
"RTN","PXRRECSE",7,0)
 N ED,IC,FAC,FACILITY,FOUND
"RTN","PXRRECSE",8,0)
 N HLOCIEN,HLOCNAM,HLOCMAX,HSSCR,NEWPIEN
"RTN","PXRRECSE",9,0)
 N PCLMAX,PCLASS,PNAME,PNMAX,PPNAME,PPONLY,PRVCNT,PRVIEN
"RTN","PXRRECSE",10,0)
 N TEMP,VACODE,VIEN,VISIT
"RTN","PXRRECSE",11,0)
 N HOSLOC,INS
"RTN","PXRRECSE",12,0)
 ;
"RTN","PXRRECSE",13,0)
 S (HLOCMAX,PCLMAX,PNMAX)=0
"RTN","PXRRECSE",14,0)
 ;
"RTN","PXRRECSE",15,0)
 I '(PXRRQUE!$D(IO("S"))) D INIT^PXRRBUSY(.BUSY)
"RTN","PXRRECSE",16,0)
 ;
"RTN","PXRRECSE",17,0)
 ;CSSCR is true if we want selected clinics.
"RTN","PXRRECSE",18,0)
 I $P($G(PXRRLCSC),U,1)="CS" S CSSCR=1
"RTN","PXRRECSE",19,0)
 E  S CSSCR=0
"RTN","PXRRECSE",20,0)
 ;
"RTN","PXRRECSE",21,0)
 ;CLINIC is true if we want clinics instead of hospital locations.
"RTN","PXRRECSE",22,0)
 I $P($G(PXRRLCSC),U,1)["C" S CLINIC=1
"RTN","PXRRECSE",23,0)
 E  S CLINIC=0
"RTN","PXRRECSE",24,0)
 ;
"RTN","PXRRECSE",25,0)
 ;HSSCR is true if we want selected hospital locations.
"RTN","PXRRECSE",26,0)
 I $P($G(PXRRLCSC),U,1)="HS" S HSSCR=1
"RTN","PXRRECSE",27,0)
 E  S HSSCR=0
"RTN","PXRRECSE",28,0)
 ;
"RTN","PXRRECSE",29,0)
 ;PPONLY is true if we want primary providers only.
"RTN","PXRRECSE",30,0)
 I $P($G(PXRRPRSC),U,1)="P" S PPONLY=1
"RTN","PXRRECSE",31,0)
 E  S PPONLY=0
"RTN","PXRRECSE",32,0)
 ;
"RTN","PXRRECSE",33,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRRECSE",34,0)
 S ZTREQ="@"
"RTN","PXRRECSE",35,0)
 ;
"RTN","PXRRECSE",36,0)
 S BD=PXRRBDT-.0001
"RTN","PXRRECSE",37,0)
 S ED=PXRREDT+.2359
"RTN","PXRRECSE",38,0)
NDATE S BD=$O(^AUPNVSIT("B",BD))
"RTN","PXRRECSE",39,0)
 ;If we have passed the ending date we are done.
"RTN","PXRRECSE",40,0)
 I (BD>ED)!(BD="") G DONE
"RTN","PXRRECSE",41,0)
 ;
"RTN","PXRRECSE",42,0)
 ;If this is an interactive session let the user know that something
"RTN","PXRRECSE",43,0)
 ;is happening.
"RTN","PXRRECSE",44,0)
 I '(PXRRQUE!$D(IO("S"))) D SPIN^PXRRBUSY("Sorting encounters",.BUSY)
"RTN","PXRRECSE",45,0)
 ;
"RTN","PXRRECSE",46,0)
 ;Check for a user request to stop the task.
"RTN","PXRRECSE",47,0)
 I $$S^%ZTLOAD S ZTSTOP=1 D EXIT^PXRRGUT
"RTN","PXRRECSE",48,0)
 ;
"RTN","PXRRECSE",49,0)
 ;Get the VISIT IEN
"RTN","PXRRECSE",50,0)
 S VIEN=0
"RTN","PXRRECSE",51,0)
VISIT S VIEN=$O(^AUPNVSIT("B",BD,VIEN))
"RTN","PXRRECSE",52,0)
 I VIEN="" G NDATE
"RTN","PXRRECSE",53,0)
 S VISIT=^AUPNVSIT(VIEN,0)
"RTN","PXRRECSE",54,0)
 ;
"RTN","PXRRECSE",55,0)
 ;Screen out inappropriate vists.
"RTN","PXRRECSE",56,0)
 I $P(VISIT,U,7)'="" I PXRRSCAT'[$P(VISIT,U,7) G VISIT
"RTN","PXRRECSE",57,0)
 I $P(VISIT,U,7)="" I PXRRSCAT'=$P(VISIT,U,7) G VISIT
"RTN","PXRRECSE",58,0)
 ;
"RTN","PXRRECSE",59,0)
 ;Make sure that the facility is on the list.
"RTN","PXRRECSE",60,0)
 S FOUND=0
"RTN","PXRRECSE",61,0)
 S FAC=$P(VISIT,U,6)
"RTN","PXRRECSE",62,0)
 F IC=1:1:NFAC I $P(PXRRFAC(IC),U,1)=FAC D  Q
"RTN","PXRRECSE",63,0)
 . S FACILITY=FAC
"RTN","PXRRECSE",64,0)
 . S FOUND=1
"RTN","PXRRECSE",65,0)
 ;
"RTN","PXRRECSE",66,0)
 ;If category was an encounter, check if encounter
"RTN","PXRRECSE",67,0)
 ;occurred at a non-VA site
"RTN","PXRRECSE",68,0)
 I PXRRSCAT["E"&($P(VISIT,U,7)="E")&(FAC="")&($D(NONVA)) D
"RTN","PXRRECSE",69,0)
 . I $D(^AUPNVSIT(VIEN,21)) S FACILITY="*",FOUND=1
"RTN","PXRRECSE",70,0)
 ;
"RTN","PXRRECSE",71,0)
 ;If Service Category = EVENT (HISTORICAL), get facility based on
"RTN","PXRRECSE",72,0)
 ;the hospital location, encounter occurred at a VA site. - *189
"RTN","PXRRECSE",73,0)
 I PXRRSCAT["E"&($P(VISIT,U,7)="E")&(FAC="") D
"RTN","PXRRECSE",74,0)
 . S (INS,HOSLOC)=""
"RTN","PXRRECSE",75,0)
 . I $P(VISIT,U,22)'="" S HOSLOC=$P(VISIT,U,22) D
"RTN","PXRRECSE",76,0)
 . . S INS=$P(^SC(HOSLOC,0),U,15)
"RTN","PXRRECSE",77,0)
 . . ;S:+INS INS=$P($G(^DG(40.8,INS,0)),U,7)
"RTN","PXRRECSE",78,0)
 . . S:+INS INS=$$GET1^DIQ(40.8,INS_",",.07,"I")
"RTN","PXRRECSE",79,0)
 . . S INS=$S(+INS&$D(^DIC(4,+INS,0)):INS,1:"")
"RTN","PXRRECSE",80,0)
 . . I $D(INS) F IC=1:1:NFAC I $P(PXRRFAC(IC),U,1)=INS D  Q
"RTN","PXRRECSE",81,0)
 . . . S FACILITY=INS,FOUND=1
"RTN","PXRRECSE",82,0)
 ;
"RTN","PXRRECSE",83,0)
 I 'FOUND G VISIT
"RTN","PXRRECSE",84,0)
 ;
"RTN","PXRRECSE",85,0)
 ;Get the Provider
"RTN","PXRRECSE",86,0)
 S PRVCNT=0
"RTN","PXRRECSE",87,0)
 S PRVIEN=0
"RTN","PXRRECSE",88,0)
PRV ;
"RTN","PXRRECSE",89,0)
 S PRVIEN=$O(^AUPNVPRV("AD",VIEN,PRVIEN))
"RTN","PXRRECSE",90,0)
 I (PRVIEN="")&(PRVCNT>0) G VISIT
"RTN","PXRRECSE",91,0)
 I (PRVIEN="") D
"RTN","PXRRECSE",92,0)
 . S NEWPIEN=0
"RTN","PXRRECSE",93,0)
 E  D
"RTN","PXRRECSE",94,0)
 . S NEWPIEN=$P(^AUPNVPRV(PRVIEN,0),U,1)
"RTN","PXRRECSE",95,0)
 S PRVCNT=PRVCNT+1
"RTN","PXRRECSE",96,0)
 S (CLASSNAM,HLOCNAM,PPNAME)=""
"RTN","PXRRECSE",97,0)
 S FOUND=1
"RTN","PXRRECSE",98,0)
 ;
"RTN","PXRRECSE",99,0)
 ;Apply any Provider screens.
"RTN","PXRRECSE",100,0)
 ;List of providers.
"RTN","PXRRECSE",101,0)
 I $D(PXRRPRPL) D
"RTN","PXRRECSE",102,0)
 . S FOUND=0
"RTN","PXRRECSE",103,0)
 . F IC=1:1:NPL I $P(PXRRPRPL(IC),U,2)=NEWPIEN D  Q
"RTN","PXRRECSE",104,0)
 ..;Mark this provider as being matched.
"RTN","PXRRECSE",105,0)
 .. S $P(PXRRPRPL(IC),U,4)="M"
"RTN","PXRRECSE",106,0)
 .. S PPNAME=$P(PXRRPRPL(IC),U,1)
"RTN","PXRRECSE",107,0)
 .. S FOUND=1
"RTN","PXRRECSE",108,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",109,0)
 ;
"RTN","PXRRECSE",110,0)
 ;Get the Person Class.
"RTN","PXRRECSE",111,0)
 S PCLASS=$$OCCUP^PXBGPRV(NEWPIEN,BD,"",1,"")
"RTN","PXRRECSE",112,0)
 ;
"RTN","PXRRECSE",113,0)
 ;Person class screen.
"RTN","PXRRECSE",114,0)
 I $D(PXRRPECL) D
"RTN","PXRRECSE",115,0)
 . S FOUND=$$MATCH^PXRRPECU(PCLASS)
"RTN","PXRRECSE",116,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",117,0)
 ;
"RTN","PXRRECSE",118,0)
 ;Primary Provider only.
"RTN","PXRRECSE",119,0)
 I PPONLY D
"RTN","PXRRECSE",120,0)
 . S FOUND=0
"RTN","PXRRECSE",121,0)
 . I PRVIEN>0 D
"RTN","PXRRECSE",122,0)
 .. I $P(^AUPNVPRV(PRVIEN,0),U,4)="P" S FOUND=1
"RTN","PXRRECSE",123,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",124,0)
 ;
"RTN","PXRRECSE",125,0)
 ;Clinic screen.
"RTN","PXRRECSE",126,0)
 I CSSCR D
"RTN","PXRRECSE",127,0)
 . S FOUND=0
"RTN","PXRRECSE",128,0)
 . S CLINIEN=$P(VISIT,U,8)
"RTN","PXRRECSE",129,0)
 . F IC=1:1:NCS I $P(PXRRCS(IC),U,2)=CLINIEN D  Q
"RTN","PXRRECSE",130,0)
 ..;Mark the clinic as being matched.
"RTN","PXRRECSE",131,0)
 .. S $P(PXRRCS(IC),U,4)="M"
"RTN","PXRRECSE",132,0)
 .. S HLOCNAM=$P(^DIC(40.7,CLINIEN,0),U,1)_U_CLINIEN
"RTN","PXRRECSE",133,0)
 .. S FOUND=1
"RTN","PXRRECSE",134,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",135,0)
 ;
"RTN","PXRRECSE",136,0)
 ;Hospital location screen.
"RTN","PXRRECSE",137,0)
 I HSSCR D
"RTN","PXRRECSE",138,0)
 . S FOUND=0
"RTN","PXRRECSE",139,0)
 . S HLOCIEN=$P(VISIT,U,22)
"RTN","PXRRECSE",140,0)
 . F IC=1:1:NHL I $P(PXRRLCHL(IC),U,2)=HLOCIEN D  Q
"RTN","PXRRECSE",141,0)
 ..;Mark the hospital location as being matched.
"RTN","PXRRECSE",142,0)
 .. S $P(PXRRLCHL(IC),U,4)="M"
"RTN","PXRRECSE",143,0)
 .. S HLOCNAM=$P(^SC(HLOCIEN,0),U,1)_U_HLOCIEN
"RTN","PXRRECSE",144,0)
 .. S CLINIEN=$P(^SC(HLOCIEN,0),U,7)
"RTN","PXRRECSE",145,0)
 .. S FOUND=1
"RTN","PXRRECSE",146,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",147,0)
 ;
"RTN","PXRRECSE",148,0)
 ;At this point we have an encounter that can be added to the list.
"RTN","PXRRECSE",149,0)
 ;Make sure we have a Provider name.
"RTN","PXRRECSE",150,0)
 I NEWPIEN=0 S PPNAME="Unknown"
"RTN","PXRRECSE",151,0)
 I $L(PPNAME)=0 D
"RTN","PXRRECSE",152,0)
 . S PPNAME=$P($G(^VA(200,NEWPIEN,0)),U,1)
"RTN","PXRRECSE",153,0)
 . I $L(PPNAME)=0 S PPNAME="Unknown",NEWPIEN=0
"RTN","PXRRECSE",154,0)
 S PNMAX=$$MAX^XLFMTH(PNMAX,$L(PPNAME))
"RTN","PXRRECSE",155,0)
 S PNAME=PPNAME_U_NEWPIEN
"RTN","PXRRECSE",156,0)
 ;
"RTN","PXRRECSE",157,0)
 ;Make sure we have a Person Class.
"RTN","PXRRECSE",158,0)
 I +$P($G(PCLASS),U,1)'>0 D
"RTN","PXRRECSE",159,0)
 . S CLASSNAM="Unknown"
"RTN","PXRRECSE",160,0)
 . S TEMP=CLASSNAM
"RTN","PXRRECSE",161,0)
 E  D
"RTN","PXRRECSE",162,0)
 . S VACODE=$P(PCLASS,U,7)
"RTN","PXRRECSE",163,0)
 . S CLASSNAM=$$ALPHA^PXRRPECU(PCLASS)
"RTN","PXRRECSE",164,0)
 . S TEMP=$$ABBRV^PXRRPECU(VACODE)
"RTN","PXRRECSE",165,0)
 S PCLMAX=$$MAX^XLFMTH(PCLMAX,$L(TEMP))
"RTN","PXRRECSE",166,0)
 ;
"RTN","PXRRECSE",167,0)
 ;Get the hospital location or clinic and stop code.
"RTN","PXRRECSE",168,0)
 I $L(HLOCNAM)'>0 D
"RTN","PXRRECSE",169,0)
 . I 'CLINIC D
"RTN","PXRRECSE",170,0)
 .. ;Get the hospital location.
"RTN","PXRRECSE",171,0)
 .. S HLOCIEN=$P(VISIT,U,22)
"RTN","PXRRECSE",172,0)
 .. I HLOCIEN>0 D
"RTN","PXRRECSE",173,0)
 ... S HLOCNAM=$P(^SC(HLOCIEN,0),U,1)_U_HLOCIEN
"RTN","PXRRECSE",174,0)
 ... S CLINIEN=$P(^SC(HLOCIEN,0),U,7)
"RTN","PXRRECSE",175,0)
 .. E  D
"RTN","PXRRECSE",176,0)
 ...;No hospital location, see if we can at least find the clinic.
"RTN","PXRRECSE",177,0)
 ... S HLOCNAM="Unknown"
"RTN","PXRRECSE",178,0)
 ... S CLINIEN=$P(VISIT,U,8)
"RTN","PXRRECSE",179,0)
 .. I PXRRSCAT["E"&($P(VISIT,U,7)="E")&(FAC="") D
"RTN","PXRRECSE",180,0)
 ...; If encounter occurred outside VA get location from node 21
"RTN","PXRRECSE",181,0)
 ...; Check if node 21 exists - *189
"RTN","PXRRECSE",182,0)
 ...I $D(^AUPNVSIT(VIEN,21)) S HLOCNAM=$P(^AUPNVSIT(VIEN,21),U,1)
"RTN","PXRRECSE",183,0)
 ...; If encounter occurred at VA site, get location from field .22 - *189
"RTN","PXRRECSE",184,0)
 ...I '$D(^AUPNVSIT(VIEN,21)) S HLOCNAM=$P(^SC($P(VISIT,U,22),0),U,1)
"RTN","PXRRECSE",185,0)
 . E  D
"RTN","PXRRECSE",186,0)
 .. ;Get the clinic.
"RTN","PXRRECSE",187,0)
 .. S CLINIEN=$P(VISIT,U,8)
"RTN","PXRRECSE",188,0)
 .. I CLINIEN>0 S HLOCNAM=$P(^DIC(40.7,CLINIEN,0),U,1)_U_CLINIEN
"RTN","PXRRECSE",189,0)
 .. E  S HLOCNAM="Unknown"
"RTN","PXRRECSE",190,0)
 ;
"RTN","PXRRECSE",191,0)
 ;Append the clinic stop code.
"RTN","PXRRECSE",192,0)
 I CLINIEN>0 S HLOCNAM=HLOCNAM_U_$P(^DIC(40.7,CLINIEN,0),U,2)
"RTN","PXRRECSE",193,0)
 S HLOCMAX=$$MAX^XLFMTH(HLOCMAX,$L($P(HLOCNAM,U,1)))
"RTN","PXRRECSE",194,0)
 ;
"RTN","PXRRECSE",195,0)
 S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,BD,HLOCNAM,VIEN)=""
"RTN","PXRRECSE",196,0)
 ;
"RTN","PXRRECSE",197,0)
 ;Get the next provider.
"RTN","PXRRECSE",198,0)
 G PRV
"RTN","PXRRECSE",199,0)
 ;
"RTN","PXRRECSE",200,0)
DONE ;
"RTN","PXRRECSE",201,0)
 I '(PXRRQUE!$D(IO("S"))) D DONE^PXRRBUSY("done")
"RTN","PXRRECSE",202,0)
 ;
"RTN","PXRRECSE",203,0)
 ;If there were selected clinic stops build dummy entries for all
"RTN","PXRRECSE",204,0)
 ;those without entries.
"RTN","PXRRECSE",205,0)
 I $D(PXRRCS) D
"RTN","PXRRECSE",206,0)
 . F FAC=1:1:NFAC D
"RTN","PXRRECSE",207,0)
 .. S FACILITY=$P(PXRRFAC(FAC),U,1)
"RTN","PXRRECSE",208,0)
 .. F IC=1:1:NCS  D
"RTN","PXRRECSE",209,0)
 ... I $P(PXRRCS(IC),U,4)'="M" D
"RTN","PXRRECSE",210,0)
 .... S PNAME="Unknown"_U_"0"
"RTN","PXRRECSE",211,0)
 .... S CLASSNAM="Unknown"
"RTN","PXRRECSE",212,0)
 .... S HLOCNAM=PXRRCS(IC)
"RTN","PXRRECSE",213,0)
 .... S HLOCMAX=$$MAX^XLFMTH(HLOCMAX,$L($P(HLOCNAM,U,1)))
"RTN","PXRRECSE",214,0)
 .... S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,0,HLOCNAM,0)=""
"RTN","PXRRECSE",215,0)
 ;
"RTN","PXRRECSE",216,0)
 ;If there were selected hospital locations build dummy entries for all
"RTN","PXRRECSE",217,0)
 ;those without entries.
"RTN","PXRRECSE",218,0)
 I $D(PXRRLCHL) D
"RTN","PXRRECSE",219,0)
 . F FAC=1:1:NFAC D
"RTN","PXRRECSE",220,0)
 .. S FACILITY=$P(PXRRFAC(FAC),U,1)
"RTN","PXRRECSE",221,0)
 .. F IC=1:1:NHL  D
"RTN","PXRRECSE",222,0)
 ... I $P(PXRRLCHL(IC),U,4)'="M" D
"RTN","PXRRECSE",223,0)
 .... S PNAME="Unknown"_U_"0"
"RTN","PXRRECSE",224,0)
 .... S CLASSNAM="Unknown"
"RTN","PXRRECSE",225,0)
 .... S HLOCNAM=PXRRLCHL(IC)
"RTN","PXRRECSE",226,0)
 .... S HLOCMAX=$$MAX^XLFMTH(HLOCMAX,$L($P(HLOCNAM,U,1)))
"RTN","PXRRECSE",227,0)
 .... S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,0,HLOCNAM,0)=""
"RTN","PXRRECSE",228,0)
 ;
"RTN","PXRRECSE",229,0)
 ;If there were selected providers build dummy entries for all those
"RTN","PXRRECSE",230,0)
 ;without encounters.
"RTN","PXRRECSE",231,0)
 I $D(PXRRPRPL) D
"RTN","PXRRECSE",232,0)
 . N CLASSLST,JC,NPCLASS
"RTN","PXRRECSE",233,0)
 . F FAC=1:1:NFAC D
"RTN","PXRRECSE",234,0)
 .. S FACILITY=$P(PXRRFAC(FAC),U,1)
"RTN","PXRRECSE",235,0)
 .. F IC=1:1:NPL  D
"RTN","PXRRECSE",236,0)
 ... I $P(PXRRPRPL(IC),U,4)'="M" D
"RTN","PXRRECSE",237,0)
 .... S PNAME=PXRRPRPL(IC)
"RTN","PXRRECSE",238,0)
 .... S PPNAME=$P(PNAME,U,1)
"RTN","PXRRECSE",239,0)
 .... S PNMAX=$$MAX^XLFMTH(PNMAX,$L(PPNAME))
"RTN","PXRRECSE",240,0)
 .... S NEWPIEN=$P(PNAME,U,2)
"RTN","PXRRECSE",241,0)
 ....;Get the person class list for this provider.
"RTN","PXRRECSE",242,0)
 .... S NPCLASS=$$PCLLIST^PXRRPECU(NEWPIEN,PXRRBDT,PXRREDT,.CLASSLST)
"RTN","PXRRECSE",243,0)
 .... F JC=1:1:NPCLASS D
"RTN","PXRRECSE",244,0)
 ..... S CLASSNAM=CLASSLST(JC)
"RTN","PXRRECSE",245,0)
 ..... S VACODE=$P(CLASSNAM,U,2)
"RTN","PXRRECSE",246,0)
 ..... I $L(VACODE)'>0 S TEMP="Unknown"
"RTN","PXRRECSE",247,0)
 ..... E  S TEMP=$$ABBRV^PXRRPECU(VACODE)
"RTN","PXRRECSE",248,0)
 ..... S PCLMAX=$$MAX^XLFMTH(PCLMAX,$L(TEMP))
"RTN","PXRRECSE",249,0)
 ..... S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,0,"HLOC")=0
"RTN","PXRRECSE",250,0)
 ;
"RTN","PXRRECSE",251,0)
EXIT ;Save the values of HLOCMAX, PCLMAX,and PNMAX.
"RTN","PXRRECSE",252,0)
 S ^XTMP(PXRRXTMP,"HLOCMAX")=HLOCMAX
"RTN","PXRRECSE",253,0)
 S ^XTMP(PXRRXTMP,"PCLMAX")=PCLMAX
"RTN","PXRRECSE",254,0)
 S ^XTMP(PXRRXTMP,"PNMAX")=PNMAX
"RTN","PXRRECSE",255,0)
 ;
"RTN","PXRRECSE",256,0)
 Q
"RTN","PXRRLCSC")
0^6^B21063120^B20357975
"RTN","PXRRLCSC",1,0)
PXRRLCSC ;ISL/PKR - PCE reports locations selection criteria routines. ;4/8/97
"RTN","PXRRLCSC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**12,18,20,72,189**;Aug 12, 1996;Build 13
"RTN","PXRRLCSC",3,0)
 ;;Reference to FileMan call Institution file (#4) supported by DBIA 10090.
"RTN","PXRRLCSC",4,0)
 ;;Reference to ^DIC(40.7 supported by DBIA 93-C.
"RTN","PXRRLCSC",5,0)
 ;
"RTN","PXRRLCSC",6,0)
 ;=======================================================================
"RTN","PXRRLCSC",7,0)
BYLOC ;Ask if the report should be broken down by clinic location or clinic
"RTN","PXRRLCSC",8,0)
 ;stop
"RTN","PXRRLCSC",9,0)
 N X,Y
"RTN","PXRRLCSC",10,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRRLCSC",11,0)
 S DIR(0)="S"_U_"L:Location;"
"RTN","PXRRLCSC",12,0)
 S DIR(0)=DIR(0)_"S:Stop"
"RTN","PXRRLCSC",13,0)
 S DIR("A")="Do you want totals by Clinic Location or Clinic Stop?"
"RTN","PXRRLCSC",14,0)
 S DIR("B")="L"
"RTN","PXRRLCSC",15,0)
 D ^DIR K DIR
"RTN","PXRRLCSC",16,0)
 I Y="L" S $P(PXRRLCSC,U,3)=1
"RTN","PXRRLCSC",17,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRRLCSC",18,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRRLCSC",19,0)
 Q
"RTN","PXRRLCSC",20,0)
 ;
"RTN","PXRRLCSC",21,0)
 ;=======================================================================
"RTN","PXRRLCSC",22,0)
CSTOP ;Get a list of clinic stop codes.
"RTN","PXRRLCSC",23,0)
 K DTOUT,DUOUT
"RTN","PXRRLCSC",24,0)
 S NCS=0
"RTN","PXRRLCSC",25,0)
 S DIC("A")="Select CLINIC STOP: "
"RTN","PXRRLCSC",26,0)
 W !
"RTN","PXRRLCSC",27,0)
NSTOP ;Select the clinic stop codes.
"RTN","PXRRLCSC",28,0)
 S DIC=40.7
"RTN","PXRRLCSC",29,0)
 S DIC(0)="AEMQZ"
"RTN","PXRRLCSC",30,0)
 I NCS'<1 S DIC("A")="Select another CLINIC STOP: "
"RTN","PXRRLCSC",31,0)
 D ^DIC K DIC
"RTN","PXRRLCSC",32,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRRLCSC",33,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRRLCSC",34,0)
 I (NCS=0)&(+Y=-1) W !,"You must select a clinic stop!" G CSTOP
"RTN","PXRRLCSC",35,0)
 I +Y'=-1 D  G NSTOP
"RTN","PXRRLCSC",36,0)
 . S NCS=NCS+1
"RTN","PXRRLCSC",37,0)
 .;Save the external form of the name, the IEN, and the stop code.
"RTN","PXRRLCSC",38,0)
 . S PXRRCS(NCS)=$P(Y(0,0),U,1)_U_$P(Y,U,1)_U_$P(Y(0),U,2)
"RTN","PXRRLCSC",39,0)
 ;Sort the clinic stop list into alphabetical order.
"RTN","PXRRLCSC",40,0)
 S NCS=$$SORT^PXRRUTIL(NCS,"PXRRCS",2)
"RTN","PXRRLCSC",41,0)
 Q
"RTN","PXRRLCSC",42,0)
 ;
"RTN","PXRRLCSC",43,0)
 ;=======================================================================
"RTN","PXRRLCSC",44,0)
FACILITY ;Get the facility list.
"RTN","PXRRLCSC",45,0)
 N IC,STATION,X,Y
"RTN","PXRRLCSC",46,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRRLCSC",47,0)
 S NFAC=0
"RTN","PXRRLCSC",48,0)
 S DIC("B")=+$P($$SITE^VASITE,U,3)
"RTN","PXRRLCSC",49,0)
 S DIC("A")="Select FACILITY: "
"RTN","PXRRLCSC",50,0)
 W !
"RTN","PXRRLCSC",51,0)
FAC ;Select the facilities.
"RTN","PXRRLCSC",52,0)
 S DIC=4
"RTN","PXRRLCSC",53,0)
 S DIC(0)="AEMQZ"
"RTN","PXRRLCSC",54,0)
 I NFAC'<1 S DIC("A")="Select another FACILITY: "
"RTN","PXRRLCSC",55,0)
 D ^DIC K DIC
"RTN","PXRRLCSC",56,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRRLCSC",57,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRRLCSC",58,0)
 I +Y'=-1 D  G FAC
"RTN","PXRRLCSC",59,0)
 . S NFAC=NFAC+1
"RTN","PXRRLCSC",60,0)
 . S PXRRFAC(NFAC)=Y_U_Y(0,0)
"RTN","PXRRLCSC",61,0)
 ;
"RTN","PXRRLCSC",62,0)
 ;Save the facility names and station.
"RTN","PXRRLCSC",63,0)
 F IC=1:1:NFAC D
"RTN","PXRRLCSC",64,0)
 . S X=$P(PXRRFAC(IC),U,1)
"RTN","PXRRLCSC",65,0)
 . ;S STATION=$P($G(^DIC(4,X,99)),U,1)
"RTN","PXRRLCSC",66,0)
 . S STATION=$$GET1^DIQ(4,X_",",99,"I")
"RTN","PXRRLCSC",67,0)
 . S PXRRFACN(X)=$P(PXRRFAC(IC),U,2)_U_STATION
"RTN","PXRRLCSC",68,0)
 ;
"RTN","PXRRLCSC",69,0)
 ;Ask user whether they want to display non-va sites
"RTN","PXRRLCSC",70,0)
 S DIR(0)="Y"_U_"N:No;"
"RTN","PXRRLCSC",71,0)
 S DIR(0)=DIR(0)_"Y:Yes"
"RTN","PXRRLCSC",72,0)
 W !
"RTN","PXRRLCSC",73,0)
 S DIR("A")="Do you want to display encounters at Non-VA sites "
"RTN","PXRRLCSC",74,0)
 S DIR("B")="NO"  ; Changed from N to NO - *189
"RTN","PXRRLCSC",75,0)
 D ^DIR K DIR
"RTN","PXRRLCSC",76,0)
 I +Y=1 D
"RTN","PXRRLCSC",77,0)
 . S NFAC=NFAC+1
"RTN","PXRRLCSC",78,0)
 . S PXRRFACN("*")="NON-VA^*"
"RTN","PXRRLCSC",79,0)
 . S PXRRFAC(NFAC)="*^NON-VA^NON-VA"
"RTN","PXRRLCSC",80,0)
 . S NONVA=1
"RTN","PXRRLCSC",81,0)
 ;
"RTN","PXRRLCSC",82,0)
 ;Sort the facility list into alphabetical order.
"RTN","PXRRLCSC",83,0)
 S NFAC=$$SORT^PXRRUTIL(NFAC,"PXRRFAC",2)
"RTN","PXRRLCSC",84,0)
 Q
"RTN","PXRRLCSC",85,0)
 ;
"RTN","PXRRLCSC",86,0)
 ;=======================================================================
"RTN","PXRRLCSC",87,0)
HLOC ;Build a list of hospital locations.
"RTN","PXRRLCSC",88,0)
 N IEN,SC,X,Y
"RTN","PXRRLCSC",89,0)
 K DTOUT,DUOUT
"RTN","PXRRLCSC",90,0)
 S NHL=0
"RTN","PXRRLCSC",91,0)
 S DIC="^SC("
"RTN","PXRRLCSC",92,0)
 S DIC(0)="AEQMZ"
"RTN","PXRRLCSC",93,0)
 S DIC("A")="Select HOSPITAL LOCATION: "
"RTN","PXRRLCSC",94,0)
 W !
"RTN","PXRRLCSC",95,0)
NHLOC I NHL'<1 S DIC("A")="Select another HOSPITAL LOCATION: "
"RTN","PXRRLCSC",96,0)
 D ^DIC
"RTN","PXRRLCSC",97,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRRLCSC",98,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRRLCSC",99,0)
 I +Y'=-1 D  G NHLOC
"RTN","PXRRLCSC",100,0)
 . S NHL=NHL+1
"RTN","PXRRLCSC",101,0)
 . S IEN=$P(Y,U,1)
"RTN","PXRRLCSC",102,0)
 .;Get the stop code.
"RTN","PXRRLCSC",103,0)
 . S X=$P(^SC(IEN,0),U,7)
"RTN","PXRRLCSC",104,0)
 . I +X>0 S SC=$P(^DIC(40.7,X,0),U,2)
"RTN","PXRRLCSC",105,0)
 . E  S SC="Unknown"
"RTN","PXRRLCSC",106,0)
 . I $L(SC)=0 S SC="Unknown"
"RTN","PXRRLCSC",107,0)
 .;Save the IEN, the external form of the name, and the stop code.
"RTN","PXRRLCSC",108,0)
 . S PXRRLCHL(NHL)=IEN_U_$P(Y(0,0),U,1)_U_SC
"RTN","PXRRLCSC",109,0)
 .;Save the external form of the name, then IEN, and the stop code.
"RTN","PXRRLCSC",110,0)
 . S PXRRLCHL(NHL)=$P(Y(0,0),U,1)_U_IEN_U_SC
"RTN","PXRRLCSC",111,0)
 E  K DIC
"RTN","PXRRLCSC",112,0)
 I $D(DUOUT) G HLOC
"RTN","PXRRLCSC",113,0)
 I (NHL=0)&(+Y=-1) W !,"You must select a hospital location!" G HLOC
"RTN","PXRRLCSC",114,0)
 ;Sort the hospital location list into alphabetical order.
"RTN","PXRRLCSC",115,0)
 S NHL=$$SORT^PXRRUTIL(NHL,"PXRRLCHL",2)
"RTN","PXRRLCSC",116,0)
 Q
"RTN","PXRRLCSC",117,0)
 ;
"RTN","PXRRLCSC",118,0)
 ;=======================================================================
"RTN","PXRRLCSC",119,0)
LOC(ADEF,BDEF) ;Establish the location selection criteria.
"RTN","PXRRLCSC",120,0)
 N X,Y
"RTN","PXRRLCSC",121,0)
LOC0 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRRLCSC",122,0)
 S DIR(0)="S"_U_"HA:All Hospital Locations (with encounters);"
"RTN","PXRRLCSC",123,0)
 S DIR(0)=DIR(0)_"HS:Selected Hospital Locations;"
"RTN","PXRRLCSC",124,0)
 S DIR(0)=DIR(0)_"CA:All Clinic Stops (with encounters);"
"RTN","PXRRLCSC",125,0)
 S DIR(0)=DIR(0)_"CS:Selected Clinic Stops"
"RTN","PXRRLCSC",126,0)
 S DIR("A")=ADEF
"RTN","PXRRLCSC",127,0)
 S DIR("B")=BDEF
"RTN","PXRRLCSC",128,0)
 D ^DIR K DIR
"RTN","PXRRLCSC",129,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRRLCSC",130,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRRLCSC",131,0)
 S PXRRLCSC=Y_U_Y(0)
"RTN","PXRRLCSC",132,0)
 ;
"RTN","PXRRLCSC",133,0)
 ;If locations are to be selected individually get the list.
"RTN","PXRRLCSC",134,0)
 I Y="HS" D HLOC
"RTN","PXRRLCSC",135,0)
 I $D(DTOUT) Q
"RTN","PXRRLCSC",136,0)
 I $D(DUOUT) G LOC0
"RTN","PXRRLCSC",137,0)
 I Y="CS" D CSTOP
"RTN","PXRRLCSC",138,0)
 I $D(DTOUT) Q
"RTN","PXRRLCSC",139,0)
 I $D(DUOUT) G LOC0
"RTN","PXRRLCSC",140,0)
 Q
"RTN","PXRRLCSC",141,0)
 ;
"RTN","PXRRLCSC",142,0)
 ;=======================================================================
"RTN","PXRRLCSC",143,0)
NEWPAGE ;Allow the user to decide if they want each location to start on a new
"RTN","PXRRLCSC",144,0)
 ;page.
"RTN","PXRRLCSC",145,0)
 N X,Y
"RTN","PXRRLCSC",146,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRRLCSC",147,0)
 S DIR(0)="YA0"
"RTN","PXRRLCSC",148,0)
 S DIR("A")="Want to start each location on a new page:  "
"RTN","PXRRLCSC",149,0)
 S DIR("B")="Y"
"RTN","PXRRLCSC",150,0)
 W !
"RTN","PXRRLCSC",151,0)
 D ^DIR K DIR
"RTN","PXRRLCSC",152,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRRLCSC",153,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRRLCSC",154,0)
 S PXRRLCNP=Y_U_Y(0)
"RTN","PXRRLCSC",155,0)
 Q
"RTN","PXRRLCSC",156,0)
 ;
"RTN","PXRRPCE5")
0^3^B20348077^B16550525
"RTN","PXRRPCE5",1,0)
PXRRPCE5 ;HIN/MjK - Clinic Specific Caseload Demographics ;6/7/96
"RTN","PXRRPCE5",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**189**;Aug 12, 1996;Build 13
"RTN","PXRRPCE5",3,0)
 ;;Reference to ^GMRD(120.51 supported by DBIA 1382
"RTN","PXRRPCE5",4,0)
 ;;Reference to ^PXRMINDX(120.5 supported by DBIA 4290
"RTN","PXRRPCE5",5,0)
 ;;Reference to EN^GMVPXRM supported by DBIA 3647
"RTN","PXRRPCE5",6,0)
BP ;_._._._._._._._._._._._._.Blood Pressure_._._._._._._._._._._._._._.
"RTN","PXRRPCE5",7,0)
 ;PX/189 removed direct global reads to get data from PXRMINDX
"RTN","PXRRPCE5",8,0)
 N PXRRNODE,PXRRSXDR,PXRRVT,PXRRSXDT
"RTN","PXRRPCE5",9,0)
 S PXRRDFN=0,PXRRVT=$O(^GMRD(120.51,"C","BP",0))
"RTN","PXRRPCE5",10,0)
 Q:PXRRVT'>0
"RTN","PXRRPCE5",11,0)
 F  S PXRRDFN=$O(^TMP($J,PXRRCLIN,"CLINIC PATIENTS",PXRRDFN)) Q:'PXRRDFN  D
"RTN","PXRRPCE5",12,0)
 .S PXRRSXDT=PXRRSXMO-.000001
"RTN","PXRRPCE5",13,0)
 .F  S PXRRSXDT=$O(^PXRMINDX(120.5,"PI",PXRRDFN,PXRRVT,PXRRSXDT)) Q:'PXRRSXDT!(PXRRSXDT>DT)  D
"RTN","PXRRPCE5",14,0)
 ..S PXRRBIEN=0
"RTN","PXRRPCE5",15,0)
 ..F  S PXRRBIEN=$O(^PXRMINDX(120.5,"PI",PXRRDFN,PXRRVT,PXRRSXDT,PXRRBIEN)) Q:$L(PXRRBIEN)'>0  D
"RTN","PXRRPCE5",16,0)
 ...D EN^GMVPXRM(.PXRRNODE,PXRRBIEN,"I")
"RTN","PXRRPCE5",17,0)
 ...I $P(PXRRNODE(1),U,1)=-1 Q
"RTN","PXRRPCE5",18,0)
 ...S X=$P(PXRRNODE(7),U,1),Y=$P(X,"/"),Z=$P(X,"/",2) D
"RTN","PXRRPCE5",19,0)
 ....;X = blood pressure ;y = systolic bp ;z = diastolic bp
"RTN","PXRRPCE5",20,0)
 ....I Y>159!(Z>90) D
"RTN","PXRRPCE5",21,0)
 .....S PXRRNODE=$P(PXRRNODE(1),U,1)_U_$P(PXRRNODE(2),U,1)_U_$P(PXRRNODE(3),U,1)_U_$P(PXRRNODE(4),U,1)_U_$P(PXRRNODE(5),U,1)_U_$P(PXRRNODE(6),U,1)_U_""_U_$P(PXRRNODE(7),U,1)
"RTN","PXRRPCE5",22,0)
 .....S ^TMP($J,"HIBP",PXRRCLIN,PXRRDFN)=Y_"/"_Z_U_$G(PXRRNODE)
"RTN","PXRRPCE5",23,0)
 ....Q
"RTN","PXRRPCE5",24,0)
 ...Q
"RTN","PXRRPCE5",25,0)
 ..Q
"RTN","PXRRPCE5",26,0)
 .Q
"RTN","PXRRPCE5",27,0)
 S (PXRRBPT,PXRRDFN)=0 F  S PXRRDFN=$O(^TMP($J,"HIBP",PXRRCLIN,PXRRDFN)) Q:'PXRRDFN  S PXRRBPT=PXRRBPT+1
"RTN","PXRRPCE5",28,0)
PERCNT1 ;_._._._._._._._._._.Calculate % Pats by DXS_._._._._._._._._._.
"RTN","PXRRPCE5",29,0)
 F PXRR="PXRRDM","PXRRHTN","PXRRCAD","PXRRHLIP","PXRRHTDM","PXRRHLIP" S Y=@PXRR S PXRR(PXRR)=$S('Y:0,1:(Y/PXRRVPAT)*100)
"RTN","PXRRPCE5",30,0)
PERCNT2 ;_._._._._._._.Percentages for Preventive Medicine Data_._._._._._._.
"RTN","PXRRPCE5",31,0)
 I PXRRTPAT S PXRR("SMOKE")=(PXRRSMYR/PXRRTPAT)*100 S PXRR("MAMGRM")=$S(+PXRRF50:(PXRRMMYR/PXRRF50)*100,1:"N/A")
"RTN","PXRRPCE5",32,0)
 I +PXRR("MAMGRM") S PXRR("MAMGRM")=$J(PXRR("MAMGRM"),2,1)
"RTN","PXRRPCE5",33,0)
 S PXRRHBA1=$S(+PXRRHBA1:$J(PXRRHBA1,2,1),1:PXRRHBA1),PXRRLDL=$S(+PXRRLDL:$J(PXRRLDL,2,1),1:PXRRLDL)
"RTN","PXRRPCE5",34,0)
TOTS S ^TMP($J,"CLINIC TOTALS",PXRRCLIN)=PXRRTVS_U_PXRRSESS_U_PXRRAG_U_PXRRCAD_U_$J(PXRR("PXRRCAD"),2,1)_U_PXRRDM_U_$J(PXRR("PXRRDM"),2,1)_U_PXRRHTN_U_$J(PXRR("PXRRHTN"),2,1)_U_PXRRHTDM_U_$J(PXRR("PXRRHTDM"),2,1)_U_PXRRHBA1
"RTN","PXRRPCE5",35,0)
 S X=PXRRCDSM_U_PXRRLDL_U_PXRRNOLD_U_$J($G(PXRR("PXRRSXUN")),2,1)_U_$J($G(PXRR("PXRRSXER")),2,1)_U_$J($G(PXRR("PXRRSXHP")),2,1)_U_PXRRSMYR_U_PXRRMMYR_U_PXRRUTVS_U_$J($G(PXRR("SMOKE")),2,1)
"RTN","PXRRPCE5",36,0)
 S Y=$G(PXRR("MAMGRM"))_U_$J(PXRRHLIP,2,1)_U_$J($G(PXRR("PXRRHLIP")),2,1)_U_PXRRRTVS_U_$J(PXRRPTSS,2,1)_U_PXRRMPAT_U_PXRRFPAT_U_PXRRHBG7_U_PXRRGL_U_PXRRCHOL_U_PXRRCDSX_U_$J(PXRR("PXRRPSUT"),2,1)_U_$J(PXRR("PXRRCOST"),4,2)
"RTN","PXRRPCE5",37,0)
 S Z=PXRRBPT_U_PXRRF50
"RTN","PXRRPCE5",38,0)
 S ^TMP($J,"CLINIC TOTALS",PXRRCLIN)=^TMP($J,"CLINIC TOTALS",PXRRCLIN)_U_X_U_Y_U_Z
"RTN","PXRRPCE5",39,0)
 Q
"RTN","PXRRPCE5",40,0)
MEAN ;_._._._._._.Calculate Mean Against Selected Clinics_._._._._._._.
"RTN","PXRRPCE5",41,0)
 S (X,Y)=0 F  S X=$O(^TMP($J,"CLINIC TOTALS",X)) Q:'X  S Y=Y+1
"RTN","PXRRPCE5",42,0)
 S PXRRCNUM=Y
"RTN","PXRRPCE5",43,0)
 F I=5,7,9,11,12,13,14,16,17,18,21,22,23,25,30,31,32,33,34,35,36 S ^TMP($J,"MEAN",I)=0,PXRRCLIN=0 F  S PXRRCLIN=$O(^TMP($J,"CLINIC TOTALS",PXRRCLIN)) Q:'PXRRCLIN  D
"RTN","PXRRPCE5",44,0)
 . I I=12!(I=14) S Z=$P(^TMP($J,"CLINIC TOTALS",PXRRCLIN),U,I),^TMP($J,"MEAN",I)=^TMP($J,"MEAN",I)+$S('Z&(PXRRCNUM-1):^TMP($J,"MEAN",I)/(PXRRCNUM-1),1:Z) Q
"RTN","PXRRPCE5",45,0)
 . S Z=$P(^TMP($J,"CLINIC TOTALS",PXRRCLIN),U,I),^TMP($J,"MEAN",I)=^TMP($J,"MEAN",I)+Z
"RTN","PXRRPCE5",46,0)
 F I=35 S ^TMP($J,"MEAN",I)=^TMP($J,"MEAN",I)/PXRRCNUM,^TMP($J,"MEAN",I)=$S(+^TMP($J,"MEAN",I):$J(^TMP($J,"MEAN",I),4,2),1:"N/A")
"RTN","PXRRPCE5",47,0)
 F I=12,14 S ^TMP($J,"MEAN",I)=^TMP($J,"MEAN",I)/PXRRCNUM,^TMP($J,"MEAN",I)=$S(+^TMP($J,"MEAN",I):$J(^TMP($J,"MEAN",I),2,1),1:"N/A")
"RTN","PXRRPCE5",48,0)
 F I=5,7,9,11,13,16,17,18,21,22,23,25,30,31,32,33,34,36 S ^TMP($J,"MEAN",I)=$J((^TMP($J,"MEAN",I)/PXRRCNUM),2,1)
"RTN","PXRRPCE5",49,0)
 Q
"RTN","PXRRPCE5",50,0)
INITVAR S (PXRRCAD,PXRRSESS,PXRRAG,PXRRAGE,PXRRTVS,PXRRSXUN,PXRRVPAT,PXRRQPAT,PXRRTPAT,PXRRMPAT,PXRRPSUT,PXRRCOST)=0
"RTN","PXRRPCE5",51,0)
 S X1=PXRREDT,X2=-180 D C^%DTC S PXRRSXMO=X,X1=PXRREDT,X2=-365 D C^%DTC S PXRRYR=X
"RTN","PXRRPCE5",52,0)
 Q
"RTN","PXRRPRD")
0^7^B6825949^B6708144
"RTN","PXRRPRD",1,0)
PXRRPRD ;ISL/PKR,ALB/Zoltan - PCE Provider Encounter reports driver.;9/22/98
"RTN","PXRRPRD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**3,10,12,18,61,189**;Aug 12, 1996;Build 13
"RTN","PXRRPRD",3,0)
MAIN ;
"RTN","PXRRPRD",4,0)
 N PXRRIOD,PXRRPRJB,PXRRPRST,PXRROPT,PXRRQUE,PXRRXTMP
"RTN","PXRRPRD",5,0)
 S PXRRXTMP=$$PXRRXTMP^PXRRWLD("PXRRPR")
"RTN","PXRRPRD",6,0)
 S ^XTMP(PXRRXTMP,0)=$$FMADD^XLFDT(DT,7)_U_DT_U_"PXRR Provider Encounter Count"
"RTN","PXRRPRD",7,0)
 ;
"RTN","PXRRPRD",8,0)
 ;Establish the selection criteria.
"RTN","PXRRPRD",9,0)
FAC ;Get the facility list.
"RTN","PXRRPRD",10,0)
 N NFAC,PXRRFAC,PXRRFACN
"RTN","PXRRPRD",11,0)
 D FACILITY^PXRRLCSC
"RTN","PXRRPRD",12,0)
 I $D(DTOUT)!$D(DUOUT) G EXIT
"RTN","PXRRPRD",13,0)
 ;
"RTN","PXRRPRD",14,0)
DR ;Get the date range.
"RTN","PXRRPRD",15,0)
 N PXRRBDT,PXRREDT
"RTN","PXRRPRD",16,0)
 D PDR^PXRRADUT(.PXRRBDT,.PXRREDT,"ENCOUNTER")
"RTN","PXRRPRD",17,0)
 I $D(DTOUT) G EXIT
"RTN","PXRRPRD",18,0)
 I $D(DUOUT) G FAC
"RTN","PXRRPRD",19,0)
 ;
"RTN","PXRRPRD",20,0)
SCAT ;Get the service categories.
"RTN","PXRRPRD",21,0)
 N PXRRSCAT
"RTN","PXRRPRD",22,0)
 D SCAT^PXRRECSC
"RTN","PXRRPRD",23,0)
 I $D(DTOUT) G EXIT
"RTN","PXRRPRD",24,0)
 I $D(DUOUT) G DR
"RTN","PXRRPRD",25,0)
 ;
"RTN","PXRRPRD",26,0)
PRV ;Get the provider list.
"RTN","PXRRPRD",27,0)
 N NCL,NPL,PXRRPECL,PXRRPRPL,PXRRPRSC
"RTN","PXRRPRD",28,0)
 D PRV^PXRRPRSC
"RTN","PXRRPRD",29,0)
 I $D(DTOUT) G EXIT
"RTN","PXRRPRD",30,0)
 I $D(DUOUT) G SCAT
"RTN","PXRRPRD",31,0)
 ;
"RTN","PXRRPRD",32,0)
PRTY ;Get the report type (detailed or summary).
"RTN","PXRRPRD",33,0)
 N PXRRPRTY
"RTN","PXRRPRD",34,0)
 D PRTYPE^PXRRPRSC
"RTN","PXRRPRD",35,0)
 I $D(DTOUT) G EXIT
"RTN","PXRRPRD",36,0)
 I $D(DUOUT) G PRV
"RTN","PXRRPRD",37,0)
 ;
"RTN","PXRRPRD",38,0)
 ;Determine whether the report should be queued.
"RTN","PXRRPRD",39,0)
 S %ZIS="QM"
"RTN","PXRRPRD",40,0)
 W !
"RTN","PXRRPRD",41,0)
 D ^%ZIS
"RTN","PXRRPRD",42,0)
 I POP G EXIT
"RTN","PXRRPRD",43,0)
 S PXRRIOD=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","PXRRPRD",44,0)
 S PXRRQUE=$G(IO("Q"))
"RTN","PXRRPRD",45,0)
 ;
"RTN","PXRRPRD",46,0)
 ;Queue the report.
"RTN","PXRRPRD",47,0)
 I PXRRQUE D 
"RTN","PXRRPRD",48,0)
 . N DESC,IODEV,ROUTINE
"RTN","PXRRPRD",49,0)
 . S DESC="Provider Encounter Count Report - sort"
"RTN","PXRRPRD",50,0)
 . S IODEV=""
"RTN","PXRRPRD",51,0)
 . S ROUTINE="SORT^PXRRPRSE"
"RTN","PXRRPRD",52,0)
 . S ^XTMP(PXRRXTMP,"SORTZTSK")=$$QUE^PXRRQUE(DESC,IODEV,ROUTINE,"SAVE^PXRRPRD")
"RTN","PXRRPRD",53,0)
 .;
"RTN","PXRRPRD",54,0)
 . S DESC="Provider Encounter Report - print"
"RTN","PXRRPRD",55,0)
 . S IODEV=PXRRIOD
"RTN","PXRRPRD",56,0)
 . I $P(PXRRPRTY,U,1)="D" S ROUTINE="PXRRPRDP"
"RTN","PXRRPRD",57,0)
 . E  S ROUTINE="PXRRPRSP"
"RTN","PXRRPRD",58,0)
 . S ZTDTH="@"
"RTN","PXRRPRD",59,0)
 . S ^XTMP(PXRRXTMP,"PRZTSK")=$$QUE^PXRRQUE(DESC,IODEV,ROUTINE,"SAVE^PXRRPRD")
"RTN","PXRRPRD",60,0)
 E  D SORT^PXRRPRSE
"RTN","PXRRPRD",61,0)
 Q
"RTN","PXRRPRD",62,0)
 ;=======================================================================
"RTN","PXRRPRD",63,0)
EXIT ;
"RTN","PXRRPRD",64,0)
 D EXIT^PXRRGUT
"RTN","PXRRPRD",65,0)
 Q
"RTN","PXRRPRD",66,0)
 ;
"RTN","PXRRPRD",67,0)
 ;=======================================================================
"RTN","PXRRPRD",68,0)
SAVE ;Save the variables.
"RTN","PXRRPRD",69,0)
 S ZTSAVE("PXRRBDT")="",ZTSAVE("PXRREDT")=""
"RTN","PXRRPRD",70,0)
 S ZTSAVE("PXRRCS(")="",ZTSAVE("NCS")=""
"RTN","PXRRPRD",71,0)
 S ZTSAVE("PXRRFAC(")="",ZTSAVE("NFAC")=""
"RTN","PXRRPRD",72,0)
 S ZTSAVE("PXRRFACN(")=""
"RTN","PXRRPRD",73,0)
 S ZTSAVE("PXRRIOD")=""
"RTN","PXRRPRD",74,0)
 S ZTSAVE("PXRRPECL(")="",ZTSAVE("NCL")=""
"RTN","PXRRPRD",75,0)
 S ZTSAVE("PXRRPRPL(")="",ZTSAVE("NPL")=""
"RTN","PXRRPRD",76,0)
 S ZTSAVE("PXRRPRSC")=""
"RTN","PXRRPRD",77,0)
 S ZTSAVE("PXRRPRTY")=""
"RTN","PXRRPRD",78,0)
 S ZTSAVE("PXRRQUE")=""
"RTN","PXRRPRD",79,0)
 S ZTSAVE("PXRRSCAT")=""
"RTN","PXRRPRD",80,0)
 S ZTSAVE("PXRRXTMP")=""
"RTN","PXRRPRD",81,0)
 S ZTSAVE("NONVA")=""
"RTN","PXRRPRD",82,0)
 Q
"RTN","PXRRPRD",83,0)
 ;
"RTN","PXRRPRDP")
0^8^B30581269^B30293995
"RTN","PXRRPRDP",1,0)
PXRRPRDP ;ISL/PKR - Provider encounter detailed print. ;2/26/98
"RTN","PXRRPRDP",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**3,10,12,18,48,189**;Aug 12, 1996;Build 13
"RTN","PXRRPRDP",3,0)
 ;
"RTN","PXRRPRDP",4,0)
 N BMARG,C1S,C2S,C3S,C1HS,C2HS,C3HS,DONE,INDENT,MID,PAGE
"RTN","PXRRPRDP",5,0)
 N CLASSNAM,CLINNAM
"RTN","PXRRPRDP",6,0)
 N DATE,DAY,DTOTAL,GTOTAL,HLOC,HLOCMAX,IC
"RTN","PXRRPRDP",7,0)
 N FACILITY,FACPNAME,FTOTAL
"RTN","PXRRPRDP",8,0)
 N OCC,NEWPIEN,PCLASS,PNAME,PPNAME,PTOTAL
"RTN","PXRRPRDP",9,0)
 N SPEC,SUBSPEC,TEMP,VACODE,VIEN
"RTN","PXRRPRDP",10,0)
 ;
"RTN","PXRRPRDP",11,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRRPRDP",12,0)
 S ZTREQ="@"
"RTN","PXRRPRDP",13,0)
 ;
"RTN","PXRRPRDP",14,0)
 U IO
"RTN","PXRRPRDP",15,0)
 S DONE=0
"RTN","PXRRPRDP",16,0)
 ;Setup the formatting parameters.
"RTN","PXRRPRDP",17,0)
 S HLOCMAX=^XTMP(PXRRXTMP,"HLOCMAX")
"RTN","PXRRPRDP",18,0)
 S INDENT=3
"RTN","PXRRPRDP",19,0)
 S C1HS=INDENT+4
"RTN","PXRRPRDP",20,0)
 S C2HS=INDENT+15
"RTN","PXRRPRDP",21,0)
 S C3HS=C2HS+45
"RTN","PXRRPRDP",22,0)
 ;We assume that the counts will never be longer than six digits.
"RTN","PXRRPRDP",23,0)
 S MID=C3HS+6
"RTN","PXRRPRDP",24,0)
 S C1S=C2HS+HLOCMAX+1
"RTN","PXRRPRDP",25,0)
 S C2S=C1S+7
"RTN","PXRRPRDP",26,0)
 ;
"RTN","PXRRPRDP",27,0)
 S PAGE=1
"RTN","PXRRPRDP",28,0)
 S GTOTAL=0
"RTN","PXRRPRDP",29,0)
 I ($E(IOST)="C")&(IO=IO(0)) S BMARG=3
"RTN","PXRRPRDP",30,0)
 E  S BMARG=2
"RTN","PXRRPRDP",31,0)
 D HDR^PXRRGPRT(PAGE)
"RTN","PXRRPRDP",32,0)
 W !!,"Criteria for Provider Encounter Detailed Report"
"RTN","PXRRPRDP",33,0)
 D OPRCRIT^PXRRGPRT(3)
"RTN","PXRRPRDP",34,0)
 ;
"RTN","PXRRPRDP",35,0)
SET ;Set up print fields
"RTN","PXRRPRDP",36,0)
 S FACILITY=0
"RTN","PXRRPRDP",37,0)
FAC S FACILITY=$O(^XTMP(PXRRXTMP,FACILITY))
"RTN","PXRRPRDP",38,0)
 ; Fix to include Non-VA site - *189
"RTN","PXRRPRDP",39,0)
 I (+FACILITY=0)&(FACILITY'="*") G FINAL
"RTN","PXRRPRDP",40,0)
 ;Mark the facility as being found.
"RTN","PXRRPRDP",41,0)
 F IC=1:1:NFAC I $P(PXRRFAC(IC),U,1)=FACILITY D  Q
"RTN","PXRRPRDP",42,0)
 . S $P(PXRRFAC(IC),U,4)="M"
"RTN","PXRRPRDP",43,0)
 S FTOTAL=0
"RTN","PXRRPRDP",44,0)
 S FACPNAME=$P(PXRRFACN(FACILITY),U,1)_"  "_$P(PXRRFACN(FACILITY),U,2)
"RTN","PXRRPRDP",45,0)
 S HAVEPRV=0
"RTN","PXRRPRDP",46,0)
 D HEAD(HAVEPRV)
"RTN","PXRRPRDP",47,0)
 ;
"RTN","PXRRPRDP",48,0)
 S PNAME=0
"RTN","PXRRPRDP",49,0)
PRV S PNAME=$O(^XTMP(PXRRXTMP,FACILITY,PNAME))
"RTN","PXRRPRDP",50,0)
 I PNAME="" D  G FAC
"RTN","PXRRPRDP",51,0)
 . S TEMP="Total facility encounters "
"RTN","PXRRPRDP",52,0)
 . I $Y>(IOSL-BMARG-1) D HEAD(HAVEPRV)
"RTN","PXRRPRDP",53,0)
 . I 'DONE D
"RTN","PXRRPRDP",54,0)
 .. D PTOTAL^PXRRGPRT(TEMP,FTOTAL,MID,0)
"RTN","PXRRPRDP",55,0)
 .. S GTOTAL=GTOTAL+FTOTAL
"RTN","PXRRPRDP",56,0)
 .. I $D(PXRRPECL) D CLASSNE^PXRRGPRT(INDENT)
"RTN","PXRRPRDP",57,0)
 I DONE G END
"RTN","PXRRPRDP",58,0)
 S PPNAME=$P(PNAME,U,1)
"RTN","PXRRPRDP",59,0)
 S NEWPIEN=$P(PNAME,U,2)
"RTN","PXRRPRDP",60,0)
 ;
"RTN","PXRRPRDP",61,0)
 ;Check for a user request to stop the task.
"RTN","PXRRPRDP",62,0)
 I $$S^%ZTLOAD S ZTSTOP=1 D EXIT^PXRRGUT
"RTN","PXRRPRDP",63,0)
 ;
"RTN","PXRRPRDP",64,0)
 S CLASSNAM=0
"RTN","PXRRPRDP",65,0)
CLASS ;
"RTN","PXRRPRDP",66,0)
 I DONE G END
"RTN","PXRRPRDP",67,0)
 S CLASSNAM=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM))
"RTN","PXRRPRDP",68,0)
 I CLASSNAM="" D  G PRV
"RTN","PXRRPRDP",69,0)
 . K ^TMP(PXRRXTMP,$J,PNAME)
"RTN","PXRRPRDP",70,0)
 S VACODE=$P(CLASSNAM,U,2)
"RTN","PXRRPRDP",71,0)
 I $L(VACODE)>0 D
"RTN","PXRRPRDP",72,0)
 . S PCLASS=$$OCCUP^PXBGPRV("","",VACODE,1)
"RTN","PXRRPRDP",73,0)
 . S OCCUP=$P(PCLASS,U,2)
"RTN","PXRRPRDP",74,0)
 . S SPEC=$P(PCLASS,U,3)
"RTN","PXRRPRDP",75,0)
 . S SUBSPEC=$P(PCLASS,U,4)
"RTN","PXRRPRDP",76,0)
 E  D
"RTN","PXRRPRDP",77,0)
 . S PCLASS=-3
"RTN","PXRRPRDP",78,0)
 . S OCCUP="Unknown"
"RTN","PXRRPRDP",79,0)
 . S SPEC=""
"RTN","PXRRPRDP",80,0)
 . S SUBSPEC=""
"RTN","PXRRPRDP",81,0)
 ;If we are doing selected person classes keep track of the ones we
"RTN","PXRRPRDP",82,0)
 ;found.
"RTN","PXRRPRDP",83,0)
 I $D(PXRRPECL) S TEMP=$$MATCH^PXRRPECU(PCLASS)
"RTN","PXRRPRDP",84,0)
 S (DATE,PTOTAL)=0
"RTN","PXRRPRDP",85,0)
 I DONE G END
"RTN","PXRRPRDP",86,0)
 D PPRINT
"RTN","PXRRPRDP",87,0)
 S HAVEPRV=1
"RTN","PXRRPRDP",88,0)
 ;
"RTN","PXRRPRDP",89,0)
DATE ;
"RTN","PXRRPRDP",90,0)
 S DATE=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,DATE))
"RTN","PXRRPRDP",91,0)
 I DATE="" D  G CLASS
"RTN","PXRRPRDP",92,0)
 .;Print the daily totals and get the total count.
"RTN","PXRRPRDP",93,0)
 . D DPRINT(.PTOTAL)
"RTN","PXRRPRDP",94,0)
 . I 'DONE D
"RTN","PXRRPRDP",95,0)
 .. S TEMP="Total encounters for "_PPNAME_"  "
"RTN","PXRRPRDP",96,0)
 .. I $Y>(IOSL-BMARG-3) D HEAD(HAVEPRV)
"RTN","PXRRPRDP",97,0)
 .. I 'DONE D
"RTN","PXRRPRDP",98,0)
 ... D PTOTAL^PXRRGPRT(TEMP,PTOTAL,MID,1)
"RTN","PXRRPRDP",99,0)
 ... S HAVEPRV=0
"RTN","PXRRPRDP",100,0)
 ... S FTOTAL=FTOTAL+PTOTAL
"RTN","PXRRPRDP",101,0)
 I DONE G END
"RTN","PXRRPRDP",102,0)
 ;
"RTN","PXRRPRDP",103,0)
 S HLOC=0
"RTN","PXRRPRDP",104,0)
HLO S HLOC=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,DATE,HLOC))
"RTN","PXRRPRDP",105,0)
 I HLOC="" G DATE
"RTN","PXRRPRDP",106,0)
 ;
"RTN","PXRRPRDP",107,0)
 ;Build a ^TMP array of all the visits for the current provider.
"RTN","PXRRPRDP",108,0)
 S DAY=$P(DATE,".",1)
"RTN","PXRRPRDP",109,0)
 S VIEN=0
"RTN","PXRRPRDP",110,0)
 F  S VIEN=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,DATE,HLOC,VIEN)) Q:+VIEN=0  D
"RTN","PXRRPRDP",111,0)
 . S ^TMP(PXRRXTMP,$J,PNAME,DAY,HLOC,VIEN)=""
"RTN","PXRRPRDP",112,0)
 G HLO
"RTN","PXRRPRDP",113,0)
 ;
"RTN","PXRRPRDP",114,0)
FINAL ;Print grand totals.
"RTN","PXRRPRDP",115,0)
 I DONE G END
"RTN","PXRRPRDP",116,0)
 I GTOTAL>0 D
"RTN","PXRRPRDP",117,0)
 . S TEMP="Total encounters "
"RTN","PXRRPRDP",118,0)
 . I $Y>(IOSL-BMARG-3) D PAGE^PXRRGPRT
"RTN","PXRRPRDP",119,0)
 . I 'DONE D PTOTAL^PXRRGPRT(TEMP,GTOTAL,MID,0)
"RTN","PXRRPRDP",120,0)
 I DONE G END
"RTN","PXRRPRDP",121,0)
 ;Check for facilities that were listed but had no encounters.
"RTN","PXRRPRDP",122,0)
 D FACNE^PXRRGPRT(INDENT)
"RTN","PXRRPRDP",123,0)
END ;
"RTN","PXRRPRDP",124,0)
 D EXIT^PXRRGUT
"RTN","PXRRPRDP",125,0)
 D EOR^PXRRGUT
"RTN","PXRRPRDP",126,0)
 Q
"RTN","PXRRPRDP",127,0)
 ;
"RTN","PXRRPRDP",128,0)
 ;=======================================================================
"RTN","PXRRPRDP",129,0)
DPRINT(PTOTAL) ;Print the daily totals and return the total provider count.
"RTN","PXRRPRDP",130,0)
 N DAY,HLOC,HLOCNAM,NVISITS,SC,SCAT,VIEN,VISITS
"RTN","PXRRPRDP",131,0)
 S PTOTAL=0
"RTN","PXRRPRDP",132,0)
 S DAY=0
"RTN","PXRRPRDP",133,0)
NDAY S DAY=$O(^TMP(PXRRXTMP,$J,PNAME,DAY))
"RTN","PXRRPRDP",134,0)
 I DAY="" Q
"RTN","PXRRPRDP",135,0)
 ;
"RTN","PXRRPRDP",136,0)
 S HLOC=""
"RTN","PXRRPRDP",137,0)
NHLOC S HLOC=$O(^TMP(PXRRXTMP,$J,PNAME,DAY,HLOC))
"RTN","PXRRPRDP",138,0)
 S HLOCNAM=$P(HLOC,U,1)
"RTN","PXRRPRDP",139,0)
 S SC=$P(HLOC,U,3)
"RTN","PXRRPRDP",140,0)
 I HLOC="" G NDAY
"RTN","PXRRPRDP",141,0)
 ;
"RTN","PXRRPRDP",142,0)
 S NVISITS=0
"RTN","PXRRPRDP",143,0)
 K VISITS
"RTN","PXRRPRDP",144,0)
 S VIEN=0
"RTN","PXRRPRDP",145,0)
NVIEN S VIEN=$O(^TMP(PXRRXTMP,$J,PNAME,DAY,HLOC,VIEN))
"RTN","PXRRPRDP",146,0)
 I VIEN="" D  G NHLOC
"RTN","PXRRPRDP",147,0)
 . S SCAT=$$SCAT(NVISITS,.VISITS)
"RTN","PXRRPRDP",148,0)
 . S PTOTAL=PTOTAL+NVISITS
"RTN","PXRRPRDP",149,0)
 . S C3S=MID-$L(NVISITS)
"RTN","PXRRPRDP",150,0)
 . I $Y>(IOSL-BMARG-3) D HEAD(HAVEPRV)
"RTN","PXRRPRDP",151,0)
 . I 'DONE D
"RTN","PXRRPRDP",152,0)
 .. W !,?INDENT,$$FMTE^XLFDT(DAY,"1D"),?C2HS,HLOCNAM
"RTN","PXRRPRDP",153,0)
 .. W ?C1S,SC,?C2S,SCAT,?C3S,NVISITS
"RTN","PXRRPRDP",154,0)
 I DONE Q
"RTN","PXRRPRDP",155,0)
 S NVISITS=NVISITS+1
"RTN","PXRRPRDP",156,0)
 S VISITS(NVISITS)=VIEN
"RTN","PXRRPRDP",157,0)
 G NVIEN
"RTN","PXRRPRDP",158,0)
 Q
"RTN","PXRRPRDP",159,0)
 ;
"RTN","PXRRPRDP",160,0)
 ;=======================================================================
"RTN","PXRRPRDP",161,0)
HEAD(HAVEPRV) ;Write the header.
"RTN","PXRRPRDP",162,0)
 N LEN,TEMP,VACODE
"RTN","PXRRPRDP",163,0)
 I $Y>(IOSL-BMARG-7) D PAGE^PXRRGPRT
"RTN","PXRRPRDP",164,0)
 I DONE Q
"RTN","PXRRPRDP",165,0)
 W !!,"Facility: ",FACPNAME
"RTN","PXRRPRDP",166,0)
 W !!,"Provider - Person Class"
"RTN","PXRRPRDP",167,0)
 W !,?C1HS,"Date",?C2HS,"Hos. Loc.   (Stop Code)   Serv. Cat.",?C3HS,"Encounters"
"RTN","PXRRPRDP",168,0)
 W !,?INDENT,"------------",?C2HS,"------------------------------------------",?C3HS,"----------"
"RTN","PXRRPRDP",169,0)
 I $G(HAVEPRV) W !,PPNAME," (continued)"
"RTN","PXRRPRDP",170,0)
 Q
"RTN","PXRRPRDP",171,0)
 ;
"RTN","PXRRPRDP",172,0)
 ;=======================================================================
"RTN","PXRRPRDP",173,0)
PPRINT ;Print the provider information.
"RTN","PXRRPRDP",174,0)
 I $Y>(IOSL-BMARG-4) D HEAD(HAVEPRV)
"RTN","PXRRPRDP",175,0)
 I DONE Q
"RTN","PXRRPRDP",176,0)
 S TEMP=PPNAME_" - "_OCCUP
"RTN","PXRRPRDP",177,0)
 S LEN=$L(TEMP)
"RTN","PXRRPRDP",178,0)
 I LEN>C3HS D
"RTN","PXRRPRDP",179,0)
 . W !,PPNAME," - "
"RTN","PXRRPRDP",180,0)
 . W !?3,OCCUP
"RTN","PXRRPRDP",181,0)
 . I $L(SPEC)>0 W !,?4,SPEC
"RTN","PXRRPRDP",182,0)
 . I $L(SUBSPEC)>0 W !,?5,SUBSPEC
"RTN","PXRRPRDP",183,0)
 E  D
"RTN","PXRRPRDP",184,0)
 . W !,TEMP
"RTN","PXRRPRDP",185,0)
 . I $L(SPEC)>0 W !,?4,SPEC
"RTN","PXRRPRDP",186,0)
 . I $L(SUBSPEC)>0 W !,?5,SUBSPEC
"RTN","PXRRPRDP",187,0)
 W !
"RTN","PXRRPRDP",188,0)
 Q
"RTN","PXRRPRDP",189,0)
 ;
"RTN","PXRRPRDP",190,0)
 ;=======================================================================
"RTN","PXRRPRDP",191,0)
SCAT(NVISITS,VISITS) ;Given a list of VISIT IENS return the service categories.
"RTN","PXRRPRDP",192,0)
 ;
"RTN","PXRRPRDP",193,0)
 N IC,SCATL,VISIT
"RTN","PXRRPRDP",194,0)
 S SCATL=""
"RTN","PXRRPRDP",195,0)
 F IC=1:1:NVISITS D
"RTN","PXRRPRDP",196,0)
 . S VISIT=^AUPNVSIT(VISITS(IC),0)
"RTN","PXRRPRDP",197,0)
 . S SCATL=$$USTRINS^PXRRGUT(SCATL,$P(VISIT,U,7))
"RTN","PXRRPRDP",198,0)
 Q SCATL
"RTN","PXRRPRDP",199,0)
 ;
"RTN","PXRRPRSP")
0^4^B26422525^B26159984
"RTN","PXRRPRSP",1,0)
PXRRPRSP ;ISL/PKR - Provider encounter summary print. ;6/03/97
"RTN","PXRRPRSP",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**3,10,12,18,189**;Aug 12, 1996;Build 13
"RTN","PXRRPRSP",3,0)
 ;
"RTN","PXRRPRSP",4,0)
 N BMARG,C1S,C3S,C1HS,C2HS,C3HS,C3HSMAX,DONE,HEAD
"RTN","PXRRPRSP",5,0)
 N INDENT,MID,MEWPAGE,PAGE,PCLMAX,PNMAX
"RTN","PXRRPRSP",6,0)
 N CLASSNAM,DATE,DAY,DTOTAL,GTOTAL,HLOC
"RTN","PXRRPRSP",7,0)
 N FACILITY,FACPNAME,FTOTAL
"RTN","PXRRPRSP",8,0)
 N PCLASS,PNAME,PPNAME,PTOTAL
"RTN","PXRRPRSP",9,0)
 N TEMP,VACODE,VIEN
"RTN","PXRRPRSP",10,0)
 ;
"RTN","PXRRPRSP",11,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRRPRSP",12,0)
 S ZTREQ="@"
"RTN","PXRRPRSP",13,0)
 ;
"RTN","PXRRPRSP",14,0)
 U IO
"RTN","PXRRPRSP",15,0)
 S DONE=0
"RTN","PXRRPRSP",16,0)
 ;Setup the formatting parameters.
"RTN","PXRRPRSP",17,0)
 S PCLMAX=^XTMP(PXRRXTMP,"PCLMAX")
"RTN","PXRRPRSP",18,0)
 S PNMAX=^XTMP(PXRRXTMP,"PNMAX")
"RTN","PXRRPRSP",19,0)
 S INDENT=3
"RTN","PXRRPRSP",20,0)
 S C1HS=INDENT
"RTN","PXRRPRSP",21,0)
 S C1S=INDENT
"RTN","PXRRPRSP",22,0)
 S C2HS=C1S+PNMAX+1
"RTN","PXRRPRSP",23,0)
 S C3HS=C2HS+PCLMAX+3
"RTN","PXRRPRSP",24,0)
 S C3HS=$$MAX^XLFMTH((C1HS+45),C3HS)
"RTN","PXRRPRSP",25,0)
 S C3HSMAX=C2HS+38
"RTN","PXRRPRSP",26,0)
 ;If C3HS>C3HSMAX set it to C3HSMAX+2 and wrap the Person Class entries.
"RTN","PXRRPRSP",27,0)
 I C3HS>C3HSMAX S C3HS=C3HSMAX+2
"RTN","PXRRPRSP",28,0)
 ;We assume that the counts will never be longer than six digits.
"RTN","PXRRPRSP",29,0)
 S MID=C3HS+6
"RTN","PXRRPRSP",30,0)
 ;
"RTN","PXRRPRSP",31,0)
 S (HEAD,PAGE)=1
"RTN","PXRRPRSP",32,0)
 S BMARG=2
"RTN","PXRRPRSP",33,0)
 S GTOTAL=0
"RTN","PXRRPRSP",34,0)
 D HDR^PXRRGPRT(PAGE)
"RTN","PXRRPRSP",35,0)
 W !!,"Criteria for Provider Encounter Summary Report"
"RTN","PXRRPRSP",36,0)
 D OPRCRIT^PXRRGPRT(3)
"RTN","PXRRPRSP",37,0)
 ;
"RTN","PXRRPRSP",38,0)
SET ;Set up print fields
"RTN","PXRRPRSP",39,0)
 S FACILITY=0
"RTN","PXRRPRSP",40,0)
FAC S FACILITY=$O(^XTMP(PXRRXTMP,FACILITY))
"RTN","PXRRPRSP",41,0)
 ; Fix to include Non-VA facility - *189
"RTN","PXRRPRSP",42,0)
 I (+FACILITY=0)&(FACILITY'="*") G FINAL
"RTN","PXRRPRSP",43,0)
 S FTOTAL=0
"RTN","PXRRPRSP",44,0)
 ;Mark the facility as being found.
"RTN","PXRRPRSP",45,0)
 F IC=1:1:NFAC I $P(PXRRFAC(IC),U,1)=FACILITY D  Q
"RTN","PXRRPRSP",46,0)
 . S $P(PXRRFAC(IC),U,4)="M"
"RTN","PXRRPRSP",47,0)
 S FACPNAME=$P(PXRRFACN(FACILITY),U,1)_"  "_$P(PXRRFACN(FACILITY),U,2)
"RTN","PXRRPRSP",48,0)
 S HEAD=1
"RTN","PXRRPRSP",49,0)
 D HEAD
"RTN","PXRRPRSP",50,0)
 ;
"RTN","PXRRPRSP",51,0)
 S PNAME=0
"RTN","PXRRPRSP",52,0)
PRV S PNAME=$O(^XTMP(PXRRXTMP,FACILITY,PNAME))
"RTN","PXRRPRSP",53,0)
 I PNAME="" D  G FAC
"RTN","PXRRPRSP",54,0)
 . I $Y>(IOSL-BMARG-3) D
"RTN","PXRRPRSP",55,0)
 .. D PAGE^PXRRGPRT
"RTN","PXRRPRSP",56,0)
 .. I 'DONE W !!,"Facility: ",FACPNAME
"RTN","PXRRPRSP",57,0)
 . I 'DONE D
"RTN","PXRRPRSP",58,0)
 .. S TEMP="Total facility encounters "
"RTN","PXRRPRSP",59,0)
 .. D PTOTAL^PXRRGPRT(TEMP,FTOTAL,MID,1)
"RTN","PXRRPRSP",60,0)
 .. S GTOTAL=GTOTAL+FTOTAL
"RTN","PXRRPRSP",61,0)
 .. I $D(PXRRPECL) D CLASSNE^PXRRGPRT(INDENT)
"RTN","PXRRPRSP",62,0)
 I DONE G END
"RTN","PXRRPRSP",63,0)
 S PPNAME=$P(PNAME,U,1)
"RTN","PXRRPRSP",64,0)
 ;
"RTN","PXRRPRSP",65,0)
 ;Check for a user request to stop the task.
"RTN","PXRRPRSP",66,0)
 I $$S^%ZTLOAD S ZTSTOP=1 D EXIT^PXRRGUT
"RTN","PXRRPRSP",67,0)
 ;
"RTN","PXRRPRSP",68,0)
 S CLASSNAM=0
"RTN","PXRRPRSP",69,0)
CLASS ;
"RTN","PXRRPRSP",70,0)
 I DONE G END
"RTN","PXRRPRSP",71,0)
 S CLASSNAM=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM))
"RTN","PXRRPRSP",72,0)
 I CLASSNAM="" D  G PRV
"RTN","PXRRPRSP",73,0)
 . K ^TMP(PXRRXTMP,$J,PNAME)
"RTN","PXRRPRSP",74,0)
 S VACODE=$P(CLASSNAM,U,2)
"RTN","PXRRPRSP",75,0)
 I $L(VACODE)>0 S PCLASS=$$OCCUP^PXBGPRV("","",VACODE,1)
"RTN","PXRRPRSP",76,0)
 E  S PCLASS=-3
"RTN","PXRRPRSP",77,0)
 ;If were are doing selected person classes keep track of the ones we
"RTN","PXRRPRSP",78,0)
 ;found.
"RTN","PXRRPRSP",79,0)
 I $D(PXRRPECL) S TEMP=$$MATCH^PXRRPECU(PCLASS)
"RTN","PXRRPRSP",80,0)
 S DATE=0
"RTN","PXRRPRSP",81,0)
 ;
"RTN","PXRRPRSP",82,0)
DATE ;
"RTN","PXRRPRSP",83,0)
 S DTOTAL=0
"RTN","PXRRPRSP",84,0)
 S DATE=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,DATE))
"RTN","PXRRPRSP",85,0)
 I DATE="" D  G CLASS
"RTN","PXRRPRSP",86,0)
 .;Print the provider totals.
"RTN","PXRRPRSP",87,0)
 . D SPRINT(.PTOTAL)
"RTN","PXRRPRSP",88,0)
 . S FTOTAL=FTOTAL+PTOTAL
"RTN","PXRRPRSP",89,0)
 I DONE G END
"RTN","PXRRPRSP",90,0)
 ;
"RTN","PXRRPRSP",91,0)
 S HLOC=0
"RTN","PXRRPRSP",92,0)
HLO S HLOC=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,DATE,HLOC))
"RTN","PXRRPRSP",93,0)
 I HLOC="" G DATE
"RTN","PXRRPRSP",94,0)
 ;
"RTN","PXRRPRSP",95,0)
 ;Build a ^TMP array of all the visits for the current provider.
"RTN","PXRRPRSP",96,0)
 S DAY=$P(DATE,".",1)
"RTN","PXRRPRSP",97,0)
 S VIEN=0
"RTN","PXRRPRSP",98,0)
 F  S VIEN=$O(^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,DATE,HLOC,VIEN)) Q:+VIEN=0  D
"RTN","PXRRPRSP",99,0)
 . S ^TMP(PXRRXTMP,$J,PNAME,DAY,HLOC,VIEN)=""
"RTN","PXRRPRSP",100,0)
 ;
"RTN","PXRRPRSP",101,0)
 G HLO
"RTN","PXRRPRSP",102,0)
 ;
"RTN","PXRRPRSP",103,0)
FINAL ;Print grand totals
"RTN","PXRRPRSP",104,0)
 S TEMP="Total encounters "
"RTN","PXRRPRSP",105,0)
 I $Y>(IOSL-BMARG-3) D
"RTN","PXRRPRSP",106,0)
 . D PAGE^PXRRGPRT
"RTN","PXRRPRSP",107,0)
 . I 'DONE W !
"RTN","PXRRPRSP",108,0)
 I 'DONE D
"RTN","PXRRPRSP",109,0)
 . D PTOTAL^PXRRGPRT(TEMP,GTOTAL,MID,0)
"RTN","PXRRPRSP",110,0)
 . D FACNE^PXRRGPRT(INDENT)
"RTN","PXRRPRSP",111,0)
END ;
"RTN","PXRRPRSP",112,0)
 D EXIT^PXRRGUT
"RTN","PXRRPRSP",113,0)
 D EOR^PXRRGUT
"RTN","PXRRPRSP",114,0)
 Q
"RTN","PXRRPRSP",115,0)
 ;
"RTN","PXRRPRSP",116,0)
 ;=======================================================================
"RTN","PXRRPRSP",117,0)
FMTPCL(PCL,START,END,PCL1,PCL2) ;Format the abbreviated Person Class, PCL so
"RTN","PXRRPRSP",118,0)
 ;that it fits between START and END.  If it is too long break it into
"RTN","PXRRPRSP",119,0)
 ;two lines, PCL1 and PCL2.
"RTN","PXRRPRSP",120,0)
 N LBC,LEN,LPLUS,LSPACE,MAXLEN
"RTN","PXRRPRSP",121,0)
 S MAXLEN=END-START
"RTN","PXRRPRSP",122,0)
 S LEN=$L(PCL)
"RTN","PXRRPRSP",123,0)
 I LEN'>MAXLEN D  Q
"RTN","PXRRPRSP",124,0)
 . S PCL1="("_PCL_")"
"RTN","PXRRPRSP",125,0)
 ;PCL is too long to fit on one line find a plus or a space to make the
"RTN","PXRRPRSP",126,0)
 ;break.
"RTN","PXRRPRSP",127,0)
 S LSPACE=$$LASTCHAR(PCL," ",MAXLEN)
"RTN","PXRRPRSP",128,0)
 S LPLUS=$$LASTCHAR(PCL,"+",MAXLEN)
"RTN","PXRRPRSP",129,0)
 S LBC=$$MAX^XLFMTH(LPLUS,LSPACE)
"RTN","PXRRPRSP",130,0)
 S PCL1="("_$E(PCL,1,LBC)
"RTN","PXRRPRSP",131,0)
 S PCL2=" "_$E(PCL,LBC+1,LEN)_")"
"RTN","PXRRPRSP",132,0)
 Q
"RTN","PXRRPRSP",133,0)
 ;
"RTN","PXRRPRSP",134,0)
 ;=======================================================================
"RTN","PXRRPRSP",135,0)
HEAD ;If necessary, write the header.
"RTN","PXRRPRSP",136,0)
 I HEAD D
"RTN","PXRRPRSP",137,0)
 . I $Y>(IOSL-BMARG-7) D PAGE^PXRRGPRT
"RTN","PXRRPRSP",138,0)
 . I DONE Q
"RTN","PXRRPRSP",139,0)
 . W !!,"Facility: ",FACPNAME
"RTN","PXRRPRSP",140,0)
 . W !!,?(C1HS+20),"Person Class"
"RTN","PXRRPRSP",141,0)
 . W !,?C1HS,"Provider (Occupation+Specialty+Subspecialty)",?C3HS,"Encounters"
"RTN","PXRRPRSP",142,0)
 . W !,?C1HS,"--------------------------------------------",?C3HS,"----------"
"RTN","PXRRPRSP",143,0)
 . S HEAD=0
"RTN","PXRRPRSP",144,0)
 Q
"RTN","PXRRPRSP",145,0)
 ;
"RTN","PXRRPRSP",146,0)
 ;=======================================================================
"RTN","PXRRPRSP",147,0)
LASTCHAR(STRING,CHAR,MAX) ;Return the position of the last character, CHAR, in
"RTN","PXRRPRSP",148,0)
 ;STRING ensuring that it is less than MAX.
"RTN","PXRRPRSP",149,0)
 ;Return 0 if there are none.
"RTN","PXRRPRSP",150,0)
 N IC0,IC1
"RTN","PXRRPRSP",151,0)
 S IC0=$F(STRING,CHAR)
"RTN","PXRRPRSP",152,0)
 I IC0=0 Q 0
"RTN","PXRRPRSP",153,0)
 F  S IC1=$F(STRING,CHAR,IC0) Q:(IC1=0)!(IC1>MAX)  D
"RTN","PXRRPRSP",154,0)
 . S IC0=IC1
"RTN","PXRRPRSP",155,0)
 Q IC0-1
"RTN","PXRRPRSP",156,0)
 ;
"RTN","PXRRPRSP",157,0)
 ;=======================================================================
"RTN","PXRRPRSP",158,0)
SPRINT(PTOTAL) ;Print the provider total and return the total.
"RTN","PXRRPRSP",159,0)
 N DAY,END,HLOC,PCL1,PCL2,TEMP,VACODE,VIEN
"RTN","PXRRPRSP",160,0)
 S PTOTAL=0
"RTN","PXRRPRSP",161,0)
 S DAY=0
"RTN","PXRRPRSP",162,0)
NDAY S DAY=$O(^TMP(PXRRXTMP,$J,PNAME,DAY))
"RTN","PXRRPRSP",163,0)
 I DAY="" D  Q
"RTN","PXRRPRSP",164,0)
 .;No more DAYs to sum over print the total.
"RTN","PXRRPRSP",165,0)
 . I $Y>(IOSL-BMARG-1) D
"RTN","PXRRPRSP",166,0)
 .. D PAGE^PXRRGPRT
"RTN","PXRRPRSP",167,0)
 .. D HEAD
"RTN","PXRRPRSP",168,0)
 . I 'DONE D
"RTN","PXRRPRSP",169,0)
 .. S C3S=MID-$L(PTOTAL)
"RTN","PXRRPRSP",170,0)
 .. S VACODE=$P(CLASSNAM,U,2)
"RTN","PXRRPRSP",171,0)
 .. S TEMP=$$ABBRV^PXRRPECU(VACODE)
"RTN","PXRRPRSP",172,0)
 .. D FMTPCL(TEMP,C2HS,C3HSMAX,.PCL1,.PCL2)
"RTN","PXRRPRSP",173,0)
 .. W !,?C1S,PPNAME,?C2HS,PCL1,?C3S,PTOTAL
"RTN","PXRRPRSP",174,0)
 .. I $D(PCL2) W !,?C2HS,PCL2
"RTN","PXRRPRSP",175,0)
 I DONE Q
"RTN","PXRRPRSP",176,0)
 ;
"RTN","PXRRPRSP",177,0)
 S HLOC=""
"RTN","PXRRPRSP",178,0)
NHLOC S HLOC=$O(^TMP(PXRRXTMP,$J,PNAME,DAY,HLOC))
"RTN","PXRRPRSP",179,0)
 I HLOC="" G NDAY
"RTN","PXRRPRSP",180,0)
 ;
"RTN","PXRRPRSP",181,0)
 S VIEN=0
"RTN","PXRRPRSP",182,0)
NVIEN S VIEN=$O(^TMP(PXRRXTMP,$J,PNAME,DAY,HLOC,VIEN))
"RTN","PXRRPRSP",183,0)
 I VIEN="" G NHLOC
"RTN","PXRRPRSP",184,0)
 S PTOTAL=PTOTAL+1
"RTN","PXRRPRSP",185,0)
 G NVIEN
"RTN","PXRRPRSP",186,0)
 ;
"VER")
8.0^22.0
"BLD",7413,6)
^149
**END**
**END**
