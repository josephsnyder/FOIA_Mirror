Released OOPS*2*21 SEQ #20
Extracted from mail message
**KIDS**:OOPS*2.0*21^

**INSTALL NAME**
OOPS*2.0*21
"BLD",8198,0)
OOPS*2.0*21^ASISTS^0^3091105^y
"BLD",8198,1,0)
^^9^9^3091105^
"BLD",8198,1,1,0)
1)  E-Sig not on Printed Dual Benefits
"BLD",8198,1,2,0)
2)  Report of incident is adding a year to the age.  DOB is correct
"BLD",8198,1,3,0)
3)  Cannot select current SECONDARY SUPERVISOR.,
"BLD",8198,1,4,0)
4)  Employee information disappears
"BLD",8198,1,5,0)
5)  Fields populated that should not be populated.
"BLD",8198,1,6,0)
6)  NOI code Garbled when printing CA1
"BLD",8198,1,7,0)
7)  Field exceeds max length error
"BLD",8198,1,8,0)
8)  Time showing incorrectly on print of CA1 form
"BLD",8198,1,9,0)
9)  Problem signing CA1 form for employee
"BLD",8198,4,0)
^9.64PA^2260^1
"BLD",8198,4,2260,0)
2260
"BLD",8198,4,2260,2,0)
^9.641^2260^1
"BLD",8198,4,2260,2,2260,0)
ASISTS ACCIDENT REPORTING  (File-top level)
"BLD",8198,4,2260,2,2260,1,0)
^9.6411^157^1
"BLD",8198,4,2260,2,2260,1,157,0)
PHYSICIAN ADDRESS
"BLD",8198,4,2260,222)
y^n^p^^^^n^^n
"BLD",8198,4,2260,224)

"BLD",8198,4,"APDD",2260,2260)

"BLD",8198,4,"APDD",2260,2260,157)

"BLD",8198,4,"B",2260,2260)

"BLD",8198,6.3)
7
"BLD",8198,"ABPKG")
n
"BLD",8198,"INI")
ENT^OOPSV221
"BLD",8198,"INID")
^^n
"BLD",8198,"KRN",0)
^9.67PA^779.2^20
"BLD",8198,"KRN",.4,0)
.4
"BLD",8198,"KRN",.401,0)
.401
"BLD",8198,"KRN",.402,0)
.402
"BLD",8198,"KRN",.403,0)
.403
"BLD",8198,"KRN",.5,0)
.5
"BLD",8198,"KRN",.84,0)
.84
"BLD",8198,"KRN",3.6,0)
3.6
"BLD",8198,"KRN",3.8,0)
3.8
"BLD",8198,"KRN",9.2,0)
9.2
"BLD",8198,"KRN",9.8,0)
9.8
"BLD",8198,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8198,"KRN",9.8,"NM",1,0)
OOPSGUI4^^0^B65904177
"BLD",8198,"KRN",9.8,"NM",2,0)
OOPSGUI8^^0^B51647610
"BLD",8198,"KRN",9.8,"NM",3,0)
OOPSGUI1^^0^B34501859
"BLD",8198,"KRN",9.8,"NM","B","OOPSGUI1",3)

"BLD",8198,"KRN",9.8,"NM","B","OOPSGUI4",1)

"BLD",8198,"KRN",9.8,"NM","B","OOPSGUI8",2)

"BLD",8198,"KRN",19,0)
19
"BLD",8198,"KRN",19.1,0)
19.1
"BLD",8198,"KRN",101,0)
101
"BLD",8198,"KRN",409.61,0)
409.61
"BLD",8198,"KRN",771,0)
771
"BLD",8198,"KRN",779.2,0)
779.2
"BLD",8198,"KRN",870,0)
870
"BLD",8198,"KRN",8989.51,0)
8989.51
"BLD",8198,"KRN",8989.52,0)
8989.52
"BLD",8198,"KRN",8994,0)
8994
"BLD",8198,"KRN","B",.4,.4)

"BLD",8198,"KRN","B",.401,.401)

"BLD",8198,"KRN","B",.402,.402)

"BLD",8198,"KRN","B",.403,.403)

"BLD",8198,"KRN","B",.5,.5)

"BLD",8198,"KRN","B",.84,.84)

"BLD",8198,"KRN","B",3.6,3.6)

"BLD",8198,"KRN","B",3.8,3.8)

"BLD",8198,"KRN","B",9.2,9.2)

"BLD",8198,"KRN","B",9.8,9.8)

"BLD",8198,"KRN","B",19,19)

"BLD",8198,"KRN","B",19.1,19.1)

"BLD",8198,"KRN","B",101,101)

"BLD",8198,"KRN","B",409.61,409.61)

"BLD",8198,"KRN","B",771,771)

"BLD",8198,"KRN","B",779.2,779.2)

"BLD",8198,"KRN","B",870,870)

"BLD",8198,"KRN","B",8989.51,8989.51)

"BLD",8198,"KRN","B",8989.52,8989.52)

"BLD",8198,"KRN","B",8994,8994)

"BLD",8198,"QUES",0)
^9.62^^
"BLD",8198,"REQB",0)
^9.611^1^1
"BLD",8198,"REQB",1,0)
OOPS*2.0*20^1
"BLD",8198,"REQB","B","OOPS*2.0*20",1)

"FIA",2260)
ASISTS ACCIDENT REPORTING
"FIA",2260,0)
^OOPS(2260,
"FIA",2260,0,0)
2260I
"FIA",2260,0,1)
y^n^p^^^^n^^n
"FIA",2260,0,10)

"FIA",2260,0,11)

"FIA",2260,0,"RLRO")

"FIA",2260,0,"VR")
2.0^OOPS
"FIA",2260,2260)
1
"FIA",2260,2260,157)

"INI")
ENT^OOPSV221
"MBREQ")
0
"PKG",472,-1)
1^1
"PKG",472,0)
ASISTS^OOPS^Automated Safety Incident Surveillance Tracking System
"PKG",472,20,0)
^9.402P^^
"PKG",472,22,0)
^9.49I^1^1
"PKG",472,22,1,0)
2.0^3020709^3030401^66481
"PKG",472,22,1,"PAH",1,0)
21^3091105
"PKG",472,22,1,"PAH",1,1,0)
^^9^9^3091105
"PKG",472,22,1,"PAH",1,1,1,0)
1)  E-Sig not on Printed Dual Benefits
"PKG",472,22,1,"PAH",1,1,2,0)
2)  Report of incident is adding a year to the age.  DOB is correct
"PKG",472,22,1,"PAH",1,1,3,0)
3)  Cannot select current SECONDARY SUPERVISOR.,
"PKG",472,22,1,"PAH",1,1,4,0)
4)  Employee information disappears
"PKG",472,22,1,"PAH",1,1,5,0)
5)  Fields populated that should not be populated.
"PKG",472,22,1,"PAH",1,1,6,0)
6)  NOI code Garbled when printing CA1
"PKG",472,22,1,"PAH",1,1,7,0)
7)  Field exceeds max length error
"PKG",472,22,1,"PAH",1,1,8,0)
8)  Time showing incorrectly on print of CA1 form
"PKG",472,22,1,"PAH",1,1,9,0)
9)  Problem signing CA1 form for employee
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","OOPSGUI1")
0^3^B34501859^B34497263
"RTN","OOPSGUI1",1,0)
OOPSGUI1 ;WIOFO/LLH-RPC routines ;9/3/01
"RTN","OOPSGUI1",2,0)
 ;;2.0;ASISTS;**4,8,7,11,15,18,20,21**;Jun 03, 2002;Build 7
"RTN","OOPSGUI1",3,0)
 ;
"RTN","OOPSGUI1",4,0)
OPT(RESULTS,INP) ; Returns the ASISTS GUI Menus user has access to
"RTN","OOPSGUI1",5,0)
 ;      INP      - Input String containing the version of GUI making call
"RTN","OOPSGUI1",6,0)
 ;  RESUTLS      - return value for broker call
"RTN","OOPSGUI1",7,0)
 ;                 P1 = 1 DUZ defined
"RTN","OOPSGUI1",8,0)
 ;                 P2 = 1 Emp Health menu accessible
"RTN","OOPSGUI1",9,0)
 ;                 P3 = 1 Employee menu accessible
"RTN","OOPSGUI1",10,0)
 ;                 P4 = 1 Supervisor menu accessible
"RTN","OOPSGUI1",11,0)
 ;                 P5 = 1 Safety Officer menu accessible
"RTN","OOPSGUI1",12,0)
 ;                 P6 = 1 Union menu accessible
"RTN","OOPSGUI1",13,0)
 ;                 P7 = 1 Workers' Comp menu accessible
"RTN","OOPSGUI1",14,0)
 ;                 P8 = SSN from New Person file for user
"RTN","OOPSGUI1",15,0)
 ;                 P9 = server version #
"RTN","OOPSGUI1",16,0)
 ;
"RTN","OOPSGUI1",17,0)
 N CNT,MENU,OPT,PRIM,SM,VER
"RTN","OOPSGUI1",18,0)
 S CNT=1
"RTN","OOPSGUI1",19,0)
 I 'DUZ S RESULTS="0^^^^^^^" Q
"RTN","OOPSGUI1",20,0)
 S RESULTS=DUZ_"^0^0^0^0^0^0^"
"RTN","OOPSGUI1",21,0)
 ;V2_P21 - changed version to 21
"RTN","OOPSGUI1",22,0)
  S VER="2.21.1.0"        ;Define version check patch #4
"RTN","OOPSGUI1",23,0)
 I $G(INP)=""!($G(INP)'=VER) Q
"RTN","OOPSGUI1",24,0)
 S PRIM=$$GET1^DIQ(200,DUZ,201)     ; get primary menu
"RTN","OOPSGUI1",25,0)
 I $G(PRIM)'="" S MENU(PRIM)=""
"RTN","OOPSGUI1",26,0)
 S SM=0
"RTN","OOPSGUI1",27,0)
 F  S SM=$O(^VA(200,DUZ,203,SM))  Q:SM'>0  D
"RTN","OOPSGUI1",28,0)
 . S OPT=$$GET1^DIQ(19,$P($G(^VA(200,DUZ,203,SM,0)),U),.01)
"RTN","OOPSGUI1",29,0)
 . I $G(OPT)'="" S MENU(OPT)=""
"RTN","OOPSGUI1",30,0)
 I $D(MENU("OOPS GUI EMPLOYEE HEALTH MENU")) S $P(RESULTS,U,2)=1
"RTN","OOPSGUI1",31,0)
 I $D(MENU("OOPS GUI EMPLOYEE")) S $P(RESULTS,U,3)=1
"RTN","OOPSGUI1",32,0)
 I $D(MENU("OOPS GUI SUPERVISOR MENU")) S $P(RESULTS,U,4)=1
"RTN","OOPSGUI1",33,0)
 I $D(MENU("OOPS GUI SAFETY OFFICER MENU")) S $P(RESULTS,U,5)=1
"RTN","OOPSGUI1",34,0)
 I $D(MENU("OOPS GUI UNION MENU")) S $P(RESULTS,U,6)=1
"RTN","OOPSGUI1",35,0)
 I $D(MENU("OOPS GUI WORKERS' COMP MENU")) S $P(RESULTS,U,7)=1
"RTN","OOPSGUI1",36,0)
 I +$$ACCESS^XQCHK(DUZ,"OOPS GUI EMPLOYEE") S $P(RESULTS,U,3)=1
"RTN","OOPSGUI1",37,0)
 S $P(RESULTS,U,8)=$$GET1^DIQ(200,DUZ,9)
"RTN","OOPSGUI1",38,0)
 S $P(RESULTS,U,9)=VER              ;return the version defined above.
"RTN","OOPSGUI1",39,0)
 Q
"RTN","OOPSGUI1",40,0)
SETSIGN(RESULTS,INPUT,SIGN) ; This subroutine validates that the signature
"RTN","OOPSGUI1",41,0)
 ;                         can be entered and is valid
"RTN","OOPSGUI1",42,0)
 ;  Input:   INPUT - Contains the IEN of the ASISTS case, the form type,
"RTN","OOPSGUI1",43,0)
 ;                   and the field number.  The field number is used
"RTN","OOPSGUI1",44,0)
 ;                   to trigger what validation should be preformed on
"RTN","OOPSGUI1",45,0)
 ;                   the fields in the form so that the signature can
"RTN","OOPSGUI1",46,0)
 ;                   be applied. The fourth parameter is a special flag
"RTN","OOPSGUI1",47,0)
 ;                   indicating the Workers Comp is signing for employee
"RTN","OOPSGUI1",48,0)
 ;                   Format is IEN^FORM^FIELD^WCFLAG
"RTN","OOPSGUI1",49,0)
 ;            SIGN - contains the signature test to be encrypted.
"RTN","OOPSGUI1",50,0)
 ; Output: RESULTS - is an array containing a list of fields that did
"RTN","OOPSGUI1",51,0)
 ;                   not pass the data validation and must be corrected
"RTN","OOPSGUI1",52,0)
 ;                   prior to applying a signature.
"RTN","OOPSGUI1",53,0)
 N CALL,DTIME,FDUZ,FDT,FLD,IEN,INC,FORM,ESIG,VALID,CALLER,WOK
"RTN","OOPSGUI1",54,0)
 N DR,DA,DIE,WCFLG
"RTN","OOPSGUI1",55,0)
 S IEN=$P($G(INPUT),U),FORM=$P($G(INPUT),U,2),FLD=$P($G(INPUT),U,3)
"RTN","OOPSGUI1",56,0)
 I '$G(IEN)!('$G(FLD)) S RESULTS(1)="User not Authorized to sign form" Q
"RTN","OOPSGUI1",57,0)
 I FLD=45!(FLD=170)!(FLD=266) S CALL="S"
"RTN","OOPSGUI1",58,0)
 I FLD=49!(FLD=77) S CALL="O"
"RTN","OOPSGUI1",59,0)
 ; Patch 5 ll - added !(FLD=313)!(FLD=320)
"RTN","OOPSGUI1",60,0)
 I FLD=68!(FLD=313)!(FLD=320) S CALL="W"
"RTN","OOPSGUI1",61,0)
 I FLD=80 S CALL="H"
"RTN","OOPSGUI1",62,0)
 ; Patch 5 llh - added !(FLD=310)
"RTN","OOPSGUI1",63,0)
 I FLD=120!(FLD=222)!(FLD=310) S CALL="E"
"RTN","OOPSGUI1",64,0)
 S WCFLG=$P($G(INPUT),U,4)
"RTN","OOPSGUI1",65,0)
 I WCFLG'="W" D
"RTN","OOPSGUI1",66,0)
 .; Patch 5 llh - moved non fld check logic to separate line
"RTN","OOPSGUI1",67,0)
 .; added stuff to check if dual benefits have been signed
"RTN","OOPSGUI1",68,0)
 .I (FLD=120!(FLD=222)) D
"RTN","OOPSGUI1",69,0)
 ..I ($$GET1^DIQ(2260,IEN,71,"I")'="Y") D  Q
"RTN","OOPSGUI1",70,0)
 ...S RESULTS(1)="Claim cannot be signed until the Bill of Rights Statement is understood."
"RTN","OOPSGUI1",71,0)
 ...D WCPBOR^OOPSMBUL(IEN)
"RTN","OOPSGUI1",72,0)
 ;..Commented out Patch 11 cvw
"RTN","OOPSGUI1",73,0)
 ;..I $$GET1^DIQ(2260,IEN,310)="" D  Q
"RTN","OOPSGUI1",74,0)
 ;...S RESULTS(1)="Claim cannot be signed until the Dual Benefits form has been signed."
"RTN","OOPSGUI1",75,0)
 ; check to make sure PAID fields (also Service) not "", if "" get data
"RTN","OOPSGUI1",76,0)
 D CHKPAID
"RTN","OOPSGUI1",77,0)
 S VALID=0
"RTN","OOPSGUI1",78,0)
 S INC=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUI1",79,0)
 ; Patch 5 llh - added ,(FLD'>300)
"RTN","OOPSGUI1",80,0)
 I (FLD'=77),(FLD'=80),(FLD'>300) D  I 'VALID Q
"RTN","OOPSGUI1",81,0)
 .D VALIDATE^OOPSGUI9(IEN,FORM,CALL,.VALID)
"RTN","OOPSGUI1",82,0)
 I $G(SIGN)="" S RESULTS(1)="No Signature Entered" Q
"RTN","OOPSGUI1",83,0)
 S VALID=$$VALIDATE($$DECRYP^XUSRB1(SIGN))
"RTN","OOPSGUI1",84,0)
 I 'VALID D  Q
"RTN","OOPSGUI1",85,0)
 .I $P($G(^VA(200,DUZ,20)),"^",4)="" S RESULTS(1)="No Electronic Signature on File" Q
"RTN","OOPSGUI1",86,0)
 .S RESULTS(1)="Invalid Signature Entered."
"RTN","OOPSGUI1",87,0)
SIGN ; All field validated, file signature
"RTN","OOPSGUI1",88,0)
 I FLD=77 S FDUZ=76,FDT=78             ; Safety approve WC sign
"RTN","OOPSGUI1",89,0)
 I FLD=80 S FDUZ=79,FDT=81             ; EH approve WC sign
"RTN","OOPSGUI1",90,0)
 I FLD=120 S FDUZ=119,FDT=121          ; Employee sign CA1
"RTN","OOPSGUI1",91,0)
 I FLD=222 S FDUZ=221,FDT=223          ; Employee sign CA2
"RTN","OOPSGUI1",92,0)
 I FLD=170 S FDUZ=169,FDT=171          ; Super sign CA1
"RTN","OOPSGUI1",93,0)
 I FLD=266 S FDUZ=265,FDT=267          ; Super sign CA2
"RTN","OOPSGUI1",94,0)
 I FLD=45 S FDUZ=44,FDT=46             ; Super sign 2162
"RTN","OOPSGUI1",95,0)
 I FLD=49 S FDUZ=48,FDT=50             ; Safety sign 2162
"RTN","OOPSGUI1",96,0)
 I FLD=68 S FDUZ=67,FDT=69,WOK=1       ; WC approve to DOL
"RTN","OOPSGUI1",97,0)
 ; patch 5 llh - added next 2 lines (may need more)
"RTN","OOPSGUI1",98,0)
 I FLD=310 S FDUZ=309,FDT=311          ; Emp sign Dual Benefits
"RTN","OOPSGUI1",99,0)
 I FLD=313 S FDUZ=312,FDT=314          ; WC sign Dual Benefits
"RTN","OOPSGUI1",100,0)
 D NOW^%DTC S DTIME=%
"RTN","OOPSGUI1",101,0)
 K DR S DIE="^OOPS(2260,",DA=IEN
"RTN","OOPSGUI1",102,0)
 S DR=FDUZ_"////^S X=+DUZ;"_FLD_"////^S X=ESIG;"_FDT_"////^S X=DTIME"
"RTN","OOPSGUI1",103,0)
 D ^DIE
"RTN","OOPSGUI1",104,0)
 I $G(Y)'="" Q
"RTN","OOPSGUI1",105,0)
 I FLD=68 D WCP^OOPSMBUL(IEN,"S")
"RTN","OOPSGUI1",106,0)
 I FLD=120!(FLD=222) S CALLER=CALL D EMP^OOPSVAL1
"RTN","OOPSGUI1",107,0)
 I FLD=45 D SAFETY^OOPSMBUL(IEN)
"RTN","OOPSGUI1",108,0)
 I (FLD=170)!(FLD=266) D SUPS^OOPSMBUL(IEN),UNION^OOPSMBUL(IEN)
"RTN","OOPSGUI1",109,0)
 Q
"RTN","OOPSGUI1",110,0)
VALIDATE(X) ; Validate Electronic Sign code
"RTN","OOPSGUI1",111,0)
 ;  Input:  X - contains the signature to be validated
"RTN","OOPSGUI1",112,0)
 ; Output: VSIGN - contains a 1 if a valid e-signature, a 0 if not valid
"RTN","OOPSGUI1",113,0)
 N VSIGN
"RTN","OOPSGUI1",114,0)
 S VSIGN=0
"RTN","OOPSGUI1",115,0)
 D HASH^XUSHSHP
"RTN","OOPSGUI1",116,0)
 I X'="",(X=$P($G(^VA(200,DUZ,20)),"^",4)) S VSIGN=1,ESIG=X
"RTN","OOPSGUI1",117,0)
 Q VSIGN
"RTN","OOPSGUI1",118,0)
CHKPAID ; check to make sure PAID fields have data, if not populate
"RTN","OOPSGUI1",119,0)
 ; this subroutine can be removed when go completely to GUI
"RTN","OOPSGUI1",120,0)
 N DA,DIE,DR,CAT,FLD,IEN200,OCCD,PAY,PAYP,RET,SAL,SERV,SSN
"RTN","OOPSGUI1",121,0)
 I $$GET1^DIQ(2260,IEN,60)="" D
"RTN","OOPSGUI1",122,0)
 .S FLD=26,RET="",RET=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",123,0)
 .S RET=$S(RET="FULL CSRS":"CSRS",RET="FERS":"FERS",1:"OTHER")
"RTN","OOPSGUI1",124,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="60///^S X=RET" D ^DIE
"RTN","OOPSGUI1",125,0)
 I $$GET1^DIQ(2260,IEN,86)="" D
"RTN","OOPSGUI1",126,0)
 .S SERV="",SSN=$$GET1^DIQ(2260,IEN,5,"I")
"RTN","OOPSGUI1",127,0)
 .I $G(SSN) S IEN200=$O(^VA(200,"SSN",SSN,""))
"RTN","OOPSGUI1",128,0)
 .I $G(IEN200) S SERV=$$GET1^DIQ(200,IEN200,29)
"RTN","OOPSGUI1",129,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="86///^S X=SERV" D ^DIE
"RTN","OOPSGUI1",130,0)
 I $$GET1^DIQ(2260,IEN,166)="" D
"RTN","OOPSGUI1",131,0)
 .S FLD=28,SAL="",SAL=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",132,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="166///^S X=SAL" D ^DIE
"RTN","OOPSGUI1",133,0)
 I $$GET1^DIQ(2260,IEN,167)="" D
"RTN","OOPSGUI1",134,0)
 .S FLD=19,PAY="",PAY=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",135,0)
 .S PAY=$S(PAY="PER ANNUM":"ANNUAL",PAY="PER HOUR":"HOURLY","PER DIEM":"DAILY","BIWEEKLY":"BI-WEEKLY",1:"")
"RTN","OOPSGUI1",136,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="167///^S X=PAY" D ^DIE
"RTN","OOPSGUI1",137,0)
 I $$GET1^DIQ(2260,IEN,63)="",($$GET1^DIQ(2260,IEN,2,"I")<3) D
"RTN","OOPSGUI1",138,0)
 .S CAT=$$GET1^DIQ(2260,IEN,2,"I")
"RTN","OOPSGUI1",139,0)
 .I CAT=1 S PAYP=$$PAID^OOPSUTL1(IEN,20) I $G(PAYP)'="" S PAYP=$$PAYP^OOPSUTL1(PAYP)
"RTN","OOPSGUI1",140,0)
 .I CAT=2 S PAYP="VO"
"RTN","OOPSGUI1",141,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="63///^S X=PAYP" D ^DIE
"RTN","OOPSGUI1",142,0)
 I $$GET1^DIQ(2260,IEN,111)="" D
"RTN","OOPSGUI1",143,0)
 .S FLD=16,OCCD="",OCCD=$$PAID^OOPSUTL1(IEN,FLD)
"RTN","OOPSGUI1",144,0)
 .S DIE="^OOPS(2260,",DA=IEN,DR="111///^S X=OCCD" D ^DIE
"RTN","OOPSGUI1",145,0)
 Q
"RTN","OOPSGUI1",146,0)
VALEMP(RESULTS,INPUT) ; This broker call should be used if the Pay
"RTN","OOPSGUI1",147,0)
 ;                 Plan = "OT" (other) to determine if the claim
"RTN","OOPSGUI1",148,0)
 ;                 can be successfully submitted to DOL.  The PERSONNEL
"RTN","OOPSGUI1",149,0)
 ;                 STATUS is assumed to equal 1 (employee)
"RTN","OOPSGUI1",150,0)
 S IEN=$P($G(INPUT),U,2),FORM=$P($G(INPUT),U)
"RTN","OOPSGUI1",151,0)
 I '$G(IEN)!($G(FORM)="") S RESULTS="Invalid Input, cannot continue." Q
"RTN","OOPSGUI1",152,0)
 I $$VALEMP^OOPSUTL6 S RESULTS="Valid" Q
"RTN","OOPSGUI1",153,0)
 S RESULTS="Invalid data on claim"
"RTN","OOPSGUI1",154,0)
 Q
"RTN","OOPSGUI4")
0^1^B65904177^B63619404
"RTN","OOPSGUI4",1,0)
OOPSGUI4 ;WIOFO/LLH-RPC BROKER CALLS ;10/02/01
"RTN","OOPSGUI4",2,0)
 ;;2.0;ASISTS;**4,8,7,11,15,18,21**;Jun 03, 2002;Build 7
"RTN","OOPSGUI4",3,0)
 ;
"RTN","OOPSGUI4",4,0)
PAID(RESULTS,NAME) ; retrieves PAID employee and data from file 450
"RTN","OOPSGUI4",5,0)
 ;  Input:    NAME - the Employee or partial Name Passed in
"RTN","OOPSGUI4",6,0)
 ; Output: RESULTS - array containing PAID fields in the order returned
"RTN","OOPSGUI4",7,0)
 ;                   from FIND^DIC
"RTN","OOPSGUI4",8,0)
 ;
"RTN","OOPSGUI4",9,0)
 N IEN200,LP,PAY,PAYP,PHONE,OCCDESC,RET,SAL,SSN,X,STATE,SERV,SAMEFLG
"RTN","OOPSGUI4",10,0)
 N IEN450,TERM
"RTN","OOPSGUI4",11,0)
 I NAME="" S RESULTS(1)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",12,0)
 S X=NAME,SAMEFLG=0
"RTN","OOPSGUI4",13,0)
 D FIND^DIC(450,,"@;.01;6;8;10;13;16EI;31;32;38;186.1;186.2;186;186.4;458I;30","MPS",X,500)
"RTN","OOPSGUI4",14,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",15,0)
 I $P(^TMP("DILIST",$J,0),U)=0 S RESULTS(0)="^NO PAID EMPLOYEE FOUND" Q
"RTN","OOPSGUI4",16,0)
 F LP=0:0 S LP=$O(^TMP("DILIST",$J,LP)) Q:LP=""  D
"RTN","OOPSGUI4",17,0)
 .; cannot pick yourself if selecting case,use SSN to see if DUZ matches
"RTN","OOPSGUI4",18,0)
 .S SSN=$TR($P($G(^TMP("DILIST",$J,LP,0)),U,4),"-","")
"RTN","OOPSGUI4",19,0)
 .I $G(SSN) S IEN200=$O(^VA(200,"SSN",SSN,""))
"RTN","OOPSGUI4",20,0)
 .; 12/29/03 llh - also cannot pick a person from the PAID file with
"RTN","OOPSGUI4",21,0)
 .;                a pseudo SSN (one that begins with 000)
"RTN","OOPSGUI4",22,0)
 .I $E(SSN,1,3)="000" Q
"RTN","OOPSGUI4",23,0)
 .I DUZ=IEN200 S SAMEFLG=1 Q
"RTN","OOPSGUI4",24,0)
 .;V2_P18 expand logic, check for future date - if termination date not beyond today include
"RTN","OOPSGUI4",25,0)
 .S TERM=$$GET1^DIQ(200,IEN200,9.2,"I") I $G(TERM) Q:($$FMDIFF^XLFDT(TERM,$$DT^XLFDT)<0)
"RTN","OOPSGUI4",26,0)
 .;V2_P15 - moved/modified next line up from below & if separated from PAID, Q
"RTN","OOPSGUI4",27,0)
 .S IEN450=$P(^TMP("DILIST",$J,LP,0),U)
"RTN","OOPSGUI4",28,0)
 .I $$GET1^DIQ(450,IEN450,80,"I")="Y" Q
"RTN","OOPSGUI4",29,0)
 .S RESULTS(LP)=^TMP("DILIST",$J,LP,0)
"RTN","OOPSGUI4",30,0)
 .S $P(RESULTS(LP),U,5)=$E($P(RESULTS(LP),U,5),1,45)
"RTN","OOPSGUI4",31,0)
 .;V2_P15 restrict output of OCCUPATION SERIES & TITLE to 30 characters
"RTN","OOPSGUI4",32,0)
 .S $P(RESULTS(LP),U,7)=$E($P(RESULTS(LP),U,7),1,30)
"RTN","OOPSGUI4",33,0)
 .S $P(RESULTS(LP),U,8)=$E($P($G(RESULTS(LP)),U,8),1,4)
"RTN","OOPSGUI4",34,0)
 .S PHONE=""  ; ,SSN=$TR($P($G(RESULTS(LP)),U,4),"-","")
"RTN","OOPSGUI4",35,0)
 .I $G(IEN200) S PHONE=$P($G(^VA(200,IEN200,.13)),U)
"RTN","OOPSGUI4",36,0)
 .I $TR(PHONE,"(,)-^*/# &%@!","")'?10N S PHONE=""  ;Must be 10 char
"RTN","OOPSGUI4",37,0)
 .S RESULTS(LP)=RESULTS(LP)_U_PHONE
"RTN","OOPSGUI4",38,0)
 .I $G(IEN450) D
"RTN","OOPSGUI4",39,0)
 ..S PAYP=$$GET1^DIQ(450,IEN450,20) I $G(PAYP)'="" S PAYP=$$PAYP^OOPSUTL1(PAYP)
"RTN","OOPSGUI4",40,0)
 ..S SAL=$$GET1^DIQ(450,IEN450,28)
"RTN","OOPSGUI4",41,0)
 ..S RET=$$GET1^DIQ(450,IEN450,26) I $G(RET)'="" S RET=$S(RET="FULL CSRS":"CSRS",RET="FERS":"FERS",1:"OTHER")
"RTN","OOPSGUI4",42,0)
 ..S PAY=$$GET1^DIQ(450,IEN450,19) I $G(PAY)'="" S PAY=$S(PAY="PER ANNUM":"ANNUAL",PAY="PER HOUR":"HOURLY","PER DIEM":"DAILY","BIWEEKLY":"BI-WEEKLY",1:"")
"RTN","OOPSGUI4",43,0)
 ..S OCCDESC=$E($$GET1^DIQ(450,IEN450,16),1,30)
"RTN","OOPSGUI4",44,0)
 .S SERV="" I $G(IEN200) S SERV=$$GET1^DIQ(200,IEN200,29)
"RTN","OOPSGUI4",45,0)
 .S RESULTS(LP)=RESULTS(LP)_U_PAY_U_SAL_U_RET_U_PAYP_U_OCCDESC_U_SERV
"RTN","OOPSGUI4",46,0)
 I SAMEFLG,'$D(RESULTS) S RESULTS(0)="^CANNOT CREATE CASE FOR YOURSELF"
"RTN","OOPSGUI4",47,0)
 KILL DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",48,0)
 Q
"RTN","OOPSGUI4",49,0)
ASISTS(RESULTS,NAME) ; Lookup on ASISTS Accident Reporting file_2260
"RTN","OOPSGUI4",50,0)
 ;  Input:  - Name or partial name of person to lookup on
"RTN","OOPSGUI4",51,0)
 ; Output:  - array with name of person, sex, DOB, and SSN
"RTN","OOPSGUI4",52,0)
 N ARR,I,X,SAMEFLG
"RTN","OOPSGUI4",53,0)
 K ^TMP("DILIST",$J)
"RTN","OOPSGUI4",54,0)
 I NAME="" S RESULTS(0)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",55,0)
 S X=NAME,SAMEFLG=0
"RTN","OOPSGUI4",56,0)
 D FIND^DIC(2260,,"@;1;7;6;5","PSMC",X,500,"C^SSN^BS5")
"RTN","OOPSGUI4",57,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",58,0)
 I $P(^TMP("DILIST",$J,0),"^")=0 S RESULTS(1)="^NO ASISTS CASE FOUND" Q
"RTN","OOPSGUI4",59,0)
 F I=0:0 S I=$O(^TMP("DILIST",$J,I)) Q:I=""  D
"RTN","OOPSGUI4",60,0)
 .I DUZ=$P(^TMP("DILIST",$J,I,0),U) S SAMEFLG=1 Q
"RTN","OOPSGUI4",61,0)
 .I $D(ARR($P(^TMP("DILIST",$J,I,0),U,2))) Q
"RTN","OOPSGUI4",62,0)
 .S ARR($P(^TMP("DILIST",$J,I,0),U,2))=""
"RTN","OOPSGUI4",63,0)
 .S RESULTS(I)=^TMP("DILIST",$J,I,0)
"RTN","OOPSGUI4",64,0)
 I SAMEFLG,'$D(RESULTS) S RESULTS(0)="^CANNOT CREATE CASE FOR YOURSELF"
"RTN","OOPSGUI4",65,0)
 I '$D(RESULTS) S RESULTS(0)="^NO SELECTABLE CASES FOUND"
"RTN","OOPSGUI4",66,0)
 K DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",67,0)
 Q
"RTN","OOPSGUI4",68,0)
PER(RESULTS,NAME) ; Lookup for Non-Paid Employee (New Person file_
"RTN","OOPSGUI4",69,0)
 ;  Input:  - Name or partial name of person to lookup on
"RTN","OOPSGUI4",70,0)
 ; Output:  - array with name of new person, sex, DOB, and SSN
"RTN","OOPSGUI4",71,0)
 N I,SSN,X,SAMEFLG,IEN200
"RTN","OOPSGUI4",72,0)
 K ^TMP("DILIST",$J)
"RTN","OOPSGUI4",73,0)
 I NAME="" S RESULTS(0)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",74,0)
 S X=NAME,SAMEFLG=0
"RTN","OOPSGUI4",75,0)
 D FIND^DIC(200,,"@;.01;4;5;9;29","PSMC",X,500)
"RTN","OOPSGUI4",76,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",77,0)
 I $P(^TMP("DILIST",$J,0),"^")=0 S RESULTS(1)="^NO NEW PERSON FOUND" Q
"RTN","OOPSGUI4",78,0)
 F I=0:0 S I=$O(^TMP("DILIST",$J,I)) Q:I=""  D
"RTN","OOPSGUI4",79,0)
 .; make sure not a PAID Employee
"RTN","OOPSGUI4",80,0)
 .S SSN=$P(^TMP("DILIST",$J,I,0),U,5)
"RTN","OOPSGUI4",81,0)
 .I $G(SSN),$$FIND1^DIC(450,"","MX",SSN) Q
"RTN","OOPSGUI4",82,0)
 .;V2_P15 modified for HD0000000152026
"RTN","OOPSGUI4",83,0)
 .S IEN200=$P(^TMP("DILIST",$J,I,0),U)
"RTN","OOPSGUI4",84,0)
 .I DUZ=IEN200 S SAMEFLG=1 Q
"RTN","OOPSGUI4",85,0)
 .;V2_P18 expand logic, check for future date - if termination date not beyond today include
"RTN","OOPSGUI4",86,0)
 .S TERM=$$GET1^DIQ(200,IEN200,9.2,"I") I $G(TERM) Q:($$FMDIFF^XLFDT(TERM,$$DT^XLFDT)<0)
"RTN","OOPSGUI4",87,0)
 .S RESULTS(I)=^TMP("DILIST",$J,I,0)
"RTN","OOPSGUI4",88,0)
 I SAMEFLG,'$D(RESULTS) S RESULTS(0)="^CANNOT CREATE CASE FOR YOURSELF"
"RTN","OOPSGUI4",89,0)
 I '$D(RESULTS) S RESULTS(0)="^NO SELECTABLE CASES FOUND"
"RTN","OOPSGUI4",90,0)
 K DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",91,0)
 Q
"RTN","OOPSGUI4",92,0)
SUPER(RESULTS,NAME,EMPSSN) ; Lookup for Supervisors or anyone from the New 
"RTN","OOPSGUI4",93,0)
 ;                 Person file.  Broker call will also be used to
"RTN","OOPSGUI4",94,0)
 ;                 lookup Union Reps for the Enter/Edit Union Information.
"RTN","OOPSGUI4",95,0)
 ;  Input:    NAME - Name or partial name of person to lookup on
"RTN","OOPSGUI4",96,0)
 ;             SSN - SSN of the Person Involved if called from 2162
"RTN","OOPSGUI4",97,0)
 ; Output: RESULTS - array with name of new person, sex, DOB, and SSN
"RTN","OOPSGUI4",98,0)
 N I,SSN,SAME,STR,X
"RTN","OOPSGUI4",99,0)
 K ^TMP("DILIST",$J)
"RTN","OOPSGUI4",100,0)
 I NAME="" S RESULTS(1)="^NO SSN OR NAME PROVIDED" Q
"RTN","OOPSGUI4",101,0)
 S X=NAME,SAME=0
"RTN","OOPSGUI4",102,0)
 D FIND^DIC(200,,".01;9","PSCM",X,500)
"RTN","OOPSGUI4",103,0)
 I $G(DIERR) D CLEAN^DILF Q
"RTN","OOPSGUI4",104,0)
 I $P(^TMP("DILIST",$J,0),"^")=0 S RESULTS(1)="^NO NEW PERSON FOUND" Q
"RTN","OOPSGUI4",105,0)
 F I=0:0 S I=$O(^TMP("DILIST",$J,I)) Q:I=""  D
"RTN","OOPSGUI4",106,0)
 .S STR=$G(^TMP("DILIST",$J,I,0))
"RTN","OOPSGUI4",107,0)
 .;Remedy Ticket: HD0000000311261 expand logic, check for future date - if term. date not beyond 
"RTN","OOPSGUI4",108,0)
 .;today include. This changed logic from patch 15, was if terminated don't include
"RTN","OOPSGUI4",109,0)
 .S TERM=$$GET1^DIQ(200,$P(STR,U,1),9.2,"I") I $G(TERM) Q:($$FMDIFF^XLFDT(TERM,$$DT^XLFDT)<0)
"RTN","OOPSGUI4",110,0)
 .I $G(EMPSSN)'="",($P(STR,U,3)=$G(EMPSSN)) S SAME=1 Q
"RTN","OOPSGUI4",111,0)
 .S RESULTS(I)=STR
"RTN","OOPSGUI4",112,0)
 I SAME,'$D(RESULTS) S RESULTS(1)="^CANNOT BE SUPERVISOR FOR YOUR CLAIM"
"RTN","OOPSGUI4",113,0)
 I '$D(RESULTS) S RESULTS(1)="^NO VALID SELECTION"
"RTN","OOPSGUI4",114,0)
 K DIERR,^TMP("DILIST",$J)
"RTN","OOPSGUI4",115,0)
 Q
"RTN","OOPSGUI4",116,0)
 ;
"RTN","OOPSGUI4",117,0)
LOAD(RESULTS,ARR) ; Create new OOPS record
"RTN","OOPSGUI4",118,0)
 ;  Input:     ARR  - contains data entered from the Create Incident
"RTN","OOPSGUI4",119,0)
 ;                    Report Option
"RTN","OOPSGUI4",120,0)
 ; Output:  RESULTS - status message
"RTN","OOPSGUI4",121,0)
 ;
"RTN","OOPSGUI4",122,0)
 N ASUB,CAT,DA,DATE,DIC,DR,ERROR,FLDS,FNUM,FYEAR,IEN2260,LP,NUM,PCE,SSN,X
"RTN","OOPSGUI4",123,0)
 N LIST,CNT,DLAYGO
"RTN","OOPSGUI4",124,0)
 S CAT=""
"RTN","OOPSGUI4",125,0)
 I $G(ARR(2)) S CAT=ARR(2)
"RTN","OOPSGUI4",126,0)
 I $G(ARR(5)) S SSN=ARR(5)
"RTN","OOPSGUI4",127,0)
 D NOW^%DTC
"RTN","OOPSGUI4",128,0)
 S DATE=X
"RTN","OOPSGUI4",129,0)
 S FYEAR=""
"RTN","OOPSGUI4",130,0)
 S FYEAR=$$FYEAR^OOPSCSN(X)
"RTN","OOPSGUI4",131,0)
 S NUM=$$NEWR^OOPSCSN(FYEAR)
"RTN","OOPSGUI4",132,0)
 K DD,DO
"RTN","OOPSGUI4",133,0)
 S DLAYGO=2260,DIC="^OOPS(2260,"
"RTN","OOPSGUI4",134,0)
 S DIC(0)="QLZ"
"RTN","OOPSGUI4",135,0)
 S X=NUM
"RTN","OOPSGUI4",136,0)
 D FILE^DICN
"RTN","OOPSGUI4",137,0)
 I Y<0 S (RESULTS,RESULTS(0))="UNABLE TO CREATE RECORD" Q
"RTN","OOPSGUI4",138,0)
 S IEN2260=+Y
"RTN","OOPSGUI4",139,0)
 S DIE="^OOPS(2260,"
"RTN","OOPSGUI4",140,0)
 S DA=IEN2260
"RTN","OOPSGUI4",141,0)
 S LIST="1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,52,60,63,86,90,335,"
"RTN","OOPSGUI4",142,0)
 S LIST=LIST_"336,338,339,349,350,351,352,"
"RTN","OOPSGUI4",143,0)
 I ARR(52)="Injury" S LIST=LIST_",111,166,167"
"RTN","OOPSGUI4",144,0)
 I ARR(52)="Illness/Disease" S LIST=LIST_",208,334"
"RTN","OOPSGUI4",145,0)
 F CNT=1:1 S FNUM=$P(LIST,",",CNT) Q:FNUM=""  I $G(ARR(FNUM))'="" D VAL(DA,FNUM,ARR(FNUM))
"RTN","OOPSGUI4",146,0)
 K DR S DIE="^OOPS(2260,",DA=IEN2260,DR=""
"RTN","OOPSGUI4",147,0)
 S DR(1,2260,1)="1///^S X=ARR(1)"
"RTN","OOPSGUI4",148,0)
 S DR(1,2260,2)="2///^S X=ARR(2)"
"RTN","OOPSGUI4",149,0)
 S DR(1,2260,3)="3///^S X=ARR(3)"
"RTN","OOPSGUI4",150,0)
 S DR(1,2260,4)="4///^S X=ARR(4)"
"RTN","OOPSGUI4",151,0)
 S DR(1,2260,5)="5///^S X=ARR(5)"
"RTN","OOPSGUI4",152,0)
 S DR(1,2260,6)="6///^S X=ARR(6)"
"RTN","OOPSGUI4",153,0)
 S DR(1,2260,7)="7///^S X=ARR(7)"
"RTN","OOPSGUI4",154,0)
 S DR(1,2260,8)="8///^S X=ARR(8)"
"RTN","OOPSGUI4",155,0)
 S DR(1,2260,9)="9///^S X=ARR(9)"
"RTN","OOPSGUI4",156,0)
 S DR(1,2260,10)="10///^S X=ARR(10)"
"RTN","OOPSGUI4",157,0)
 S DR(1,2260,12)="11///^S X=ARR(11)"
"RTN","OOPSGUI4",158,0)
 S DR(1,2260,15)="12///^S X=ARR(12)"
"RTN","OOPSGUI4",159,0)
 S DR(1,2260,18)="13////^S X=ARR(13)"
"RTN","OOPSGUI4",160,0)
 S DR(1,2260,21)="14///^S X=ARR(14)"
"RTN","OOPSGUI4",161,0)
 S DR(1,2260,24)="15///^S X=ARR(15)"
"RTN","OOPSGUI4",162,0)
 S DR(1,2260,27)="16///^S X=ARR(16)"
"RTN","OOPSGUI4",163,0)
 S DR(1,2260,30)="17///^S X=ARR(17)"
"RTN","OOPSGUI4",164,0)
 S DR(1,2260,33)="18///^S X=ARR(18)"
"RTN","OOPSGUI4",165,0)
 S DR(1,2260,36)="52///^S X=ARR(52)"
"RTN","OOPSGUI4",166,0)
 S DR(1,2260,39)="53////^S X=ARR(53)"
"RTN","OOPSGUI4",167,0)
 S DR(1,2260,42)="53.1////^S X=ARR(22)"
"RTN","OOPSGUI4",168,0)
 S DR(1,2260,45)="56////^S X=ARR(48)"
"RTN","OOPSGUI4",169,0)
 S DR(1,2260,48)="60///^S X=ARR(60)"
"RTN","OOPSGUI4",170,0)
 S DR(1,2260,51)="63///^S X=ARR(63)"
"RTN","OOPSGUI4",171,0)
 S DR(1,2260,54)="86///^S X=ARR(86)"
"RTN","OOPSGUI4",172,0)
 S DR(1,2260,57)="90///^S X=ARR(90)"
"RTN","OOPSGUI4",173,0)
 S DR(1,2260,58)="335///^S X=ARR(169)"
"RTN","OOPSGUI4",174,0)
 S DR(1,2260,59)="336///^S X=ARR(170)"
"RTN","OOPSGUI4",175,0)
 I ARR(52)="Injury" D
"RTN","OOPSGUI4",176,0)
 .S DR(1,2260,60)="111///^S X=ARR(19)"
"RTN","OOPSGUI4",177,0)
 .S DR(1,2260,63)="166///^S X=ARR(166)"
"RTN","OOPSGUI4",178,0)
 .S DR(1,2260,67)="167///^S X=ARR(167)"
"RTN","OOPSGUI4",179,0)
 I ARR(52)="Illness/Disease" D
"RTN","OOPSGUI4",180,0)
 .S DR(1,2260,60)="208///^S X=ARR(19)"
"RTN","OOPSGUI4",181,0)
 .S DR(1,2260,61)="334///^S X=ARR(168)"
"RTN","OOPSGUI4",182,0)
 ; patch 11 - new OSHA 300 questions
"RTN","OOPSGUI4",183,0)
 S DR(1,2260,70)="349///^S X=ARR(171)"
"RTN","OOPSGUI4",184,0)
 S DR(1,2260,71)="339///^S X=ARR(172)"
"RTN","OOPSGUI4",185,0)
 S DR(1,2260,72)="338///^S X=ARR(173)"
"RTN","OOPSGUI4",186,0)
 S DR(1,2260,73)="350///^S X=ARR(174)"
"RTN","OOPSGUI4",187,0)
 S DR(1,2260,74)="351///^S X=ARR(175)"
"RTN","OOPSGUI4",188,0)
 S DR(1,2260,75)="352///^S X=ARR(176)"
"RTN","OOPSGUI4",189,0)
 ; V2P15 new field
"RTN","OOPSGUI4",190,0)
 S DR(1,2260,76)="360///^S X=ARR(177)"
"RTN","OOPSGUI4",191,0)
 D ^DIE
"RTN","OOPSGUI4",192,0)
 ;V2_P15 - if INITIAL RETURN TO WORK STATUS = Days Away work or Job Transfer/Restriction
"RTN","OOPSGUI4",193,0)
 ;send a new bulletin
"RTN","OOPSGUI4",194,0)
 I ARR(176)="DAYS AWAY WORK"!(ARR(176)="Job Transfer/Restriction") D CIO^OOPSMBUL(IEN2260)
"RTN","OOPSGUI4",195,0)
 D CASE^OOPSMBUL(IEN2260) D:(CAT=1)!(CAT=6) BOR^OOPSMBUL(IEN2260):$D(^VA(200,"SSN",SSN))
"RTN","OOPSGUI4",196,0)
 K DR S DIE="^OOPS(2260,",DA=IEN2260,DR="51///0" D ^DIE
"RTN","OOPSGUI4",197,0)
 K DIE,DR,DA
"RTN","OOPSGUI4",198,0)
 S (RESULTS,RESULTS(1))="OK" S:$G(ERROR)]"" (RESULTS,RESULTS(1))=ERROR
"RTN","OOPSGUI4",199,0)
 S RESULTS(2)=$P(^OOPS(2260,IEN2260,0),"^")
"RTN","OOPSGUI4",200,0)
 Q
"RTN","OOPSGUI4",201,0)
DELETE ;Delete incomplete case
"RTN","OOPSGUI4",202,0)
 N DIK,DA
"RTN","OOPSGUI4",203,0)
 S DIK="^OOPS(2260,",DA=IEN2260
"RTN","OOPSGUI4",204,0)
 D ^DIK
"RTN","OOPSGUI4",205,0)
 Q
"RTN","OOPSGUI4",206,0)
VAL(DA,FIELD,VALUE) ;Validate Input
"RTN","OOPSGUI4",207,0)
 ;  Input:   DA  - IEN of the ASISTS record
"RTN","OOPSGUI4",208,0)
 ;        FIELD  - field number for data to be validated
"RTN","OOPSGUI4",209,0)
 ;        VALUE  - data to be validated
"RTN","OOPSGUI4",210,0)
 ; Output:  none
"RTN","OOPSGUI4",211,0)
 N X
"RTN","OOPSGUI4",212,0)
 D VAL^DIE(2260,DA,FIELD,"",VALUE,.X)
"RTN","OOPSGUI4",213,0)
 I X=U D
"RTN","OOPSGUI4",214,0)
 .S:$G(ERROR)]"" ERROR=ERROR_","
"RTN","OOPSGUI4",215,0)
 .S ERROR=$G(ERROR)_$$GET1^DID(2260,FIELD,"","LABEL")_U_VALUE
"RTN","OOPSGUI4",216,0)
 .; set the data to nil so filing will not bomb
"RTN","OOPSGUI4",217,0)
 .S ARR(FIELD)=""
"RTN","OOPSGUI4",218,0)
 Q
"RTN","OOPSGUI4",219,0)
DUP(RESULTS,SSN) ; Duplicate Case error checking broker call
"RTN","OOPSGUI4",220,0)
 ;  Input:    INPUT - SSN of current ASISTS case number
"RTN","OOPSGUI4",221,0)
 ; Output:  RESULTS - return array with case information
"RTN","OOPSGUI4",222,0)
 ;
"RTN","OOPSGUI4",223,0)
 N CN,DT,IEN,NM,TYPE
"RTN","OOPSGUI4",224,0)
 S IEN="",CN=0
"RTN","OOPSGUI4",225,0)
 S RESULTS(CN)="NO MATCHES FOUND"
"RTN","OOPSGUI4",226,0)
 F  S IEN=$O(^OOPS(2260,"SSN",SSN,IEN)) Q:IEN=""  D
"RTN","OOPSGUI4",227,0)
 .I $$GET1^DIQ(2260,IEN,51,"I") Q        ;case not open, don't include
"RTN","OOPSGUI4",228,0)
 .S NM=$$GET1^DIQ(2260,IEN,1)
"RTN","OOPSGUI4",229,0)
 .S TYPE=$$GET1^DIQ(2260,IEN,"3:.01")
"RTN","OOPSGUI4",230,0)
 .S DT=$$GET1^DIQ(2260,IEN,4)
"RTN","OOPSGUI4",231,0)
 .S RESULTS(CN)=NM_"  "_DT_"  "_TYPE
"RTN","OOPSGUI4",232,0)
 .S CN=CN+1,(NM,TYPE,DT)=""
"RTN","OOPSGUI4",233,0)
 Q
"RTN","OOPSGUI8")
0^2^B51647610^B50811506
"RTN","OOPSGUI8",1,0)
OOPSGUI8 ;WIOFO/LLH-RPC Broker calls for GUI ;10/23/01
"RTN","OOPSGUI8",2,0)
 ;;2.0;ASISTS;**8,7,11,15,21**;Jun 03, 2002;Build 7
"RTN","OOPSGUI8",3,0)
 ;
"RTN","OOPSGUI8",4,0)
EN1(RESULTS,INPUT) ; Entry point for routine
"RTN","OOPSGUI8",5,0)
 ;  Input:  INPUT contains the IEN of the ASISTS record and the 
"RTN","OOPSGUI8",6,0)
 ;          calling menu, in the format IEN^CALLING MENU
"RTN","OOPSGUI8",7,0)
 ; Output:  RESULTS contains status messages back to the client. 
"RTN","OOPSGUI8",8,0)
 ;          RESULTS(0) will = either 1 or 0.  1 if ok for form to be
"RTN","OOPSGUI8",9,0)
 ;          signed by calling menu option, 0 if not ok.  The RESULTS
"RTN","OOPSGUI8",10,0)
 ;          array with status message will start at 1.
"RTN","OOPSGUI8",11,0)
 ;
"RTN","OOPSGUI8",12,0)
 N CALL,CN,DIC,IEN,FORM,PRM1,PRM2,SIGN,Y
"RTN","OOPSGUI8",13,0)
 S CN=1
"RTN","OOPSGUI8",14,0)
 S IEN=$P($G(INPUT),U),CALL=$P($G(INPUT),U,2)
"RTN","OOPSGUI8",15,0)
 S FORM=$$GET1^DIQ(2260,IEN,52,"I")
"RTN","OOPSGUI8",16,0)
 S FORM=$S(FORM=1:"CA1",FORM=2:"CA2",1:"")
"RTN","OOPSGUI8",17,0)
 S PRM1=$S(CALL="O":"Safety Officer",CALL="H":"Occupational Health",1:0)
"RTN","OOPSGUI8",18,0)
 S PRM2=PRM1_" approves the WCP signing for the Employee: "
"RTN","OOPSGUI8",19,0)
 S SIGN=""
"RTN","OOPSGUI8",20,0)
 I '$G(IEN)!($G(FORM)="")!($G(CALL)="") D  Q
"RTN","OOPSGUI8",21,0)
 . S RESULTS(0)=0
"RTN","OOPSGUI8",22,0)
 . S RESULTS(1)="Missing Information, Cannot Continue"
"RTN","OOPSGUI8",23,0)
 I CALL="W" G WCPS4E
"RTN","OOPSGUI8",24,0)
 S RESULTS(0)=$$VALID()
"RTN","OOPSGUI8",25,0)
 I RESULTS(0) S RESULTS(CN)=PRM2,CN=CN+1
"RTN","OOPSGUI8",26,0)
 G EXIT
"RTN","OOPSGUI8",27,0)
WCPS4E ; allow WCP to sign for employee if all approvals given
"RTN","OOPSGUI8",28,0)
 N CONT,EHS,SIGN,SOS,VALID,VIEW
"RTN","OOPSGUI8",29,0)
 S SIGN=0,VALID=0,VIEW=1
"RTN","OOPSGUI8",30,0)
 ; V2_P15 - all code related to safety and occ health signing is obsolete, commented out
"RTN","OOPSGUI8",31,0)
 ;S SOS=$$GET1^DIQ(2260,IEN,76,"I")
"RTN","OOPSGUI8",32,0)
 ;S EHS=$$GET1^DIQ(2260,IEN,79,"I")
"RTN","OOPSGUI8",33,0)
 ;S CONT=$S(DUZ=SOS:"S",DUZ=EHS:"H",1:"")
"RTN","OOPSGUI8",34,0)
 ;I (CONT="S")!(CONT="H") D
"RTN","OOPSGUI8",35,0)
 ;. S RESULTS(CN)="You have approved as "_$S(CONT="S":"Safety Officer",CONT="H":"Occ Health Rep",1:"")
"RTN","OOPSGUI8",36,0)
 ;. S RESULTS(CN)=RESULTS(0)_" and cannot sign as Employee.",CN=CN+1
"RTN","OOPSGUI8",37,0)
 ;. S RESULTS(CN)="Three different individuals must be involved."
"RTN","OOPSGUI8",38,0)
 ;. S VIEW=0
"RTN","OOPSGUI8",39,0)
 ;I '$G(SOS) S VIEW=0 D
"RTN","OOPSGUI8",40,0)
 ;. S RESULTS(CN)="Safety Officer has not approved WCP signing for employee.",CN=CN+1
"RTN","OOPSGUI8",41,0)
 ;I '$G(EHS) S VIEW=0 D
"RTN","OOPSGUI8",42,0)
 ;. S RESULTS(CN)="Occupational Health has not approved WCP signing for employee.",CN=CN+1
"RTN","OOPSGUI8",43,0)
 I VIEW D
"RTN","OOPSGUI8",44,0)
 . ; Allow clearing WCP signature, employee may be able to sign
"RTN","OOPSGUI8",45,0)
 . I $$GET1^DIQ(2260,IEN,119,"I") D CLRES^OOPSUTL1(IEN,"E",FORM)
"RTN","OOPSGUI8",46,0)
 . ;V2P15 - needed to change the logic in the remaining code due to new functionality where
"RTN","OOPSGUI8",47,0)
 . ;        Safety and Occ Health do not need to approve prior to WC signing for employee.
"RTN","OOPSGUI8",48,0)
 . ;        Must now check required fields are completed before letting WC sign.
"RTN","OOPSGUI8",49,0)
 . ;D VALIDATE^OOPSUTL4(IEN,FORM,"E",.VALID)
"RTN","OOPSGUI8",50,0)
 . ;V2_P15 llh - modifed for patch 15 - RESULTS will contain the list of invalid fields if any
"RTN","OOPSGUI8",51,0)
 . ;             from OOPSGUI9.  If all fields ok, set RESULTS(0) to indicate that by setting =1
"RTN","OOPSGUI8",52,0)
 . S RESULTS(0)="The following required fields must be completed before signing"
"RTN","OOPSGUI8",53,0)
 . D VALIDATE^OOPSGUI9(IEN,FORM,"E",.VALID)
"RTN","OOPSGUI8",54,0)
 . ;09/15/09 - v2_P21 remedy ticket 300258 - put next line back in - took out ;
"RTN","OOPSGUI8",55,0)
 . I 'VALID S RESULTS(CN)="All required fields not completed",CN=CN+1 Q
"RTN","OOPSGUI8",56,0)
 . I VALID S RESULTS(0)=1
"RTN","OOPSGUI8",57,0)
 . I CALL="W" N CALLER S CALLER="E"
"RTN","OOPSGUI8",58,0)
 . D EMP^OOPSVAL1
"RTN","OOPSGUI8",59,0)
EXIT ;
"RTN","OOPSGUI8",60,0)
 Q
"RTN","OOPSGUI8",61,0)
VALID() ; make sure same person is not signing for both safety and EH and if
"RTN","OOPSGUI8",62,0)
 ; signed from menu option being called not needed again - so quit
"RTN","OOPSGUI8",63,0)
 N CONT,EHAPP,ERR,SOAPP,VALID
"RTN","OOPSGUI8",64,0)
 S VALID=1,ERR=0
"RTN","OOPSGUI8",65,0)
 ;
"RTN","OOPSGUI8",66,0)
 S SOAPP=$P($G(^OOPS(2260,IEN,"WCSE")),U)
"RTN","OOPSGUI8",67,0)
 S EHAPP=$P($G(^OOPS(2260,IEN,"WCSE")),U,4)
"RTN","OOPSGUI8",68,0)
 S CONT=$S(DUZ=SOAPP:"S",DUZ=EHAPP:"H",1:"")
"RTN","OOPSGUI8",69,0)
 I CALL="O" D
"RTN","OOPSGUI8",70,0)
 . I CONT="S" S ERR=1
"RTN","OOPSGUI8",71,0)
 . I $G(EHAPP)=DUZ S ERR=2
"RTN","OOPSGUI8",72,0)
 . I $G(SOAPP)&($G(CONT)="") S ERR=3
"RTN","OOPSGUI8",73,0)
 I CALL="H" D
"RTN","OOPSGUI8",74,0)
 . I CONT="H" S ERR=1
"RTN","OOPSGUI8",75,0)
 . I $G(SOAPP)=DUZ S ERR=2
"RTN","OOPSGUI8",76,0)
 . I $G(EHAPP)&($G(CONT)="") S ERR=3
"RTN","OOPSGUI8",77,0)
 I ERR=1 D
"RTN","OOPSGUI8",78,0)
 . S RESULTS(CN)="You have signed as "
"RTN","OOPSGUI8",79,0)
 . S RESULTS(CN)=RESULTS(CN)_PRM1
"RTN","OOPSGUI8",80,0)
 . S RESULTS(CN)=RESULTS(CN)_", Cannot sign."
"RTN","OOPSGUI8",81,0)
 . S CN=CN+1,VALID=0
"RTN","OOPSGUI8",82,0)
 I ERR=2 D
"RTN","OOPSGUI8",83,0)
 . S RESULTS(CN)="You have already signed as "
"RTN","OOPSGUI8",84,0)
 . S RESULTS(CN)=RESULTS(CN)_$S(CALL="O":"Occupational Health",CALL="H":"Safety Officer",1:0)_".",CN=CN+1
"RTN","OOPSGUI8",85,0)
 . S RESULTS(CN)="Both signatures cannot be made by the same person."
"RTN","OOPSGUI8",86,0)
 . S CN=CN+1,VALID=0
"RTN","OOPSGUI8",87,0)
 I ERR=3 D
"RTN","OOPSGUI8",88,0)
 . S RESULTS(CN)=PRM1_" has already signed, re-signing is not required."
"RTN","OOPSGUI8",89,0)
 . S CN=CN+1,VALID=0
"RTN","OOPSGUI8",90,0)
 Q VALID
"RTN","OOPSGUI8",91,0)
CSIGN(RESULTS,IEN,FORM,CALL) ; Clears Signature from form
"RTN","OOPSGUI8",92,0)
 ;
"RTN","OOPSGUI8",93,0)
 ;   Input:     IEN - IEN of the ASISTS case to have the
"RTN","OOPSGUI8",94,0)
 ;                    signature cleared from
"RTN","OOPSGUI8",95,0)
 ;             FORM - the Form to clear the signature from, 2162,
"RTN","OOPSGUI8",96,0)
 ;                    CA1 or CA2 or CA7 (CA7 added V2 patch 5)
"RTN","OOPSGUI8",97,0)
 ;             CALL - the calling menu
"RTN","OOPSGUI8",98,0)
 ;  Output: RESULTS - single value with status message
"RTN","OOPSGUI8",99,0)
 ;
"RTN","OOPSGUI8",100,0)
 S RESULTS="Clearing Signatures"
"RTN","OOPSGUI8",101,0)
 I ('$G(IEN))!($G(FORM)="")!($G(CALL)="") S RESULTS="FAILED"
"RTN","OOPSGUI8",102,0)
 ; V2 Patch 5 llh - added logic for CA7
"RTN","OOPSGUI8",103,0)
 I FORM'="CA7" D CLRES^OOPSUTL1(IEN,CALL,FORM)
"RTN","OOPSGUI8",104,0)
 I FORM="CA7" D CLRES^OOPSGUIS(IEN,CALL,FORM)
"RTN","OOPSGUI8",105,0)
 S RESULTS="CLEARED"
"RTN","OOPSGUI8",106,0)
 Q
"RTN","OOPSGUI8",107,0)
DTFC(RESULTS,DATE,FLAG) ; Reformat Date/Time
"RTN","OOPSGUI8",108,0)
 ;  Input  - Date to be reformatted
"RTN","OOPSGUI8",109,0)
 ;         - Flag to be used
"RTN","OOPSGUI8",110,0)
 ; Output  - RESULTS contains the reformatted date
"RTN","OOPSGUI8",111,0)
 ;
"RTN","OOPSGUI8",112,0)
 N X,%DT            ; patch 11 - added %DT
"RTN","OOPSGUI8",113,0)
 S FLAG=+$G(FLAG)
"RTN","OOPSGUI8",114,0)
 I DATE=""!(FLAG="") S (RESULTS,RESULTS(1))="" Q
"RTN","OOPSGUI8",115,0)
 S X=DATE,%DT="T" D ^%DT
"RTN","OOPSGUI8",116,0)
 S DATE=Y,X="NOW"
"RTN","OOPSGUI8",117,0)
 D ^%DT
"RTN","OOPSGUI8",118,0)
 I $S(DATE=-1:1,FLAG<0:Y<DATE,FLAG>0:DATE>Y,1:0) S DATE=-1
"RTN","OOPSGUI8",119,0)
 I DATE=-1 S (RESULTS,RESULTS(1))="DATE ERROR" Q
"RTN","OOPSGUI8",120,0)
 S (RESULTS,RESULTS(1))=$$FMTE^XLFDT(DATE,5)
"RTN","OOPSGUI8",121,0)
 Q
"RTN","OOPSGUI8",122,0)
GETNOI(RESULTS,OPT) ; Broker Call to retrieve NOI Codes
"RTN","OOPSGUI8",123,0)
 ;  Input:     OPT - Either CA1 or CA2 to indicate which codes should be
"RTN","OOPSGUI8",124,0)
 ;                   retrieved.  If CA1 must start with T, otherwise CA2
"RTN","OOPSGUI8",125,0)
 ; Output: RESULTS - NOI Description and Code
"RTN","OOPSGUI8",126,0)
 N NOI,DES,CODE,CN
"RTN","OOPSGUI8",127,0)
 S DES="",CN=0
"RTN","OOPSGUI8",128,0)
 F  S DES=$O(^OOPS(2263.3,"B",DES)) Q:DES=""  S NOI="" F  S NOI=$O(^OOPS(2263.3,"B",DES,NOI)) Q:NOI=""  D
"RTN","OOPSGUI8",129,0)
 . S CODE=$P(^OOPS(2263.3,NOI,0),U,2)
"RTN","OOPSGUI8",130,0)
 . I OPT="CA1",($E(CODE,1)="T") S RESULTS(CN)=NOI_":"_DES_" - "_CODE
"RTN","OOPSGUI8",131,0)
 . I OPT="CA2",($E(CODE,1)'="T") S RESULTS(CN)=NOI_":"_DES_" - "_CODE
"RTN","OOPSGUI8",132,0)
 . S CN=CN+1
"RTN","OOPSGUI8",133,0)
 Q
"RTN","OOPSGUI8",134,0)
ZIPCHK(RESULTS,DATA) ; patch 5 - validate zip code against file 5.12
"RTN","OOPSGUI8",135,0)
 ;                 to ensure zip in file and has correct state.
"RTN","OOPSGUI8",136,0)
 ;
"RTN","OOPSGUI8",137,0)
 ;  Input:    DATA - contains ZIP CODE^STATE NAME
"RTN","OOPSGUI8",138,0)
 ; Output: RESULTS - returns message with validation results
"RTN","OOPSGUI8",139,0)
 ;
"RTN","OOPSGUI8",140,0)
 N STATE,VALSTATE,VALZIP,ZIP,ZZIP
"RTN","OOPSGUI8",141,0)
 S ZIP=$P($G(DATA),U,1),STATE=$P($G(DATA),U,2)
"RTN","OOPSGUI8",142,0)
 S RESULTS=""
"RTN","OOPSGUI8",143,0)
 I '$G(ZIP)!($G(STATE)="") S RESULTS="MISSING PARAMETERS" Q
"RTN","OOPSGUI8",144,0)
 D POSTAL^XIPUTIL(ZIP,.ZZIP)
"RTN","OOPSGUI8",145,0)
 I $G(ZZIP("ERROR"))'="" S RESULTS="ZIP CODE NOT FOUND" Q
"RTN","OOPSGUI8",146,0)
 I STATE'=ZZIP("STATE") S RESULTS="STATE MISMATCH ON ZIP" Q
"RTN","OOPSGUI8",147,0)
 S RESULTS="VALID ZIP/STATE"
"RTN","OOPSGUI8",148,0)
 Q
"RTN","OOPSGUI8",149,0)
AMEND(RESULTS,OLDIEN) ; File new Amended Case
"RTN","OOPSGUI8",150,0)
 ;  Input:  OLDIEN - The ASISTS IEN for the case to have an
"RTN","OOPSGUI8",151,0)
 ;                   amendment created for.
"RTN","OOPSGUI8",152,0)
 ; Output: RESULTS - Single value with the new case number
"RTN","OOPSGUI8",153,0)
 ;
"RTN","OOPSGUI8",154,0)
 N DLAYGO
"RTN","OOPSGUI8",155,0)
 Q:$P(^OOPS(2260,OLDIEN,0),"^",6)'=0   ;defensive code, should not occur
"RTN","OOPSGUI8",156,0)
 S NUM=$P(^OOPS(2260,OLDIEN,0),U,1),SUF=$E(NUM,11)
"RTN","OOPSGUI8",157,0)
 S $P(^OOPS(2260,OLDIEN,0),U,6)=3
"RTN","OOPSGUI8",158,0)
 S NUM=$E(NUM,1,10)_$S(SUF="":"A",1:$CHAR($ASCII(SUF)+1))
"RTN","OOPSGUI8",159,0)
 K DD,DO
"RTN","OOPSGUI8",160,0)
 S DLAYGO=2260,DIC="^OOPS(2260,",DIC(0)="QLZ",X=NUM
"RTN","OOPSGUI8",161,0)
 D FILE^DICN G:Y=-1 DONE
"RTN","OOPSGUI8",162,0)
 S NEWIEN=+Y
"RTN","OOPSGUI8",163,0)
 MERGE ^OOPS(2260,NEWIEN)=^OOPS(2260,OLDIEN)
"RTN","OOPSGUI8",164,0)
 S OOP=^OOPS(2260,NEWIEN,0)
"RTN","OOPSGUI8",165,0)
 S $P(OOP,U,1)=NUM,$P(OOP,U,6)=0,$P(OOP,U,11)="",$P(OOP,U,19)=""
"RTN","OOPSGUI8",166,0)
 S ^OOPS(2260,NEWIEN,0)=OOP,$P(^OOPS(2260,NEWIEN,"CA"),U,6)=""
"RTN","OOPSGUI8",167,0)
 S DIK="^OOPS(2260,",DA=NEWIEN D IX^DIK
"RTN","OOPSGUI8",168,0)
 K ^OOPS(2260,NEWIEN,"2162ES")
"RTN","OOPSGUI8",169,0)
 K ^OOPS(2260,NEWIEN,"CA1ES")
"RTN","OOPSGUI8",170,0)
 K ^OOPS(2260,NEWIEN,"CA2ES")
"RTN","OOPSGUI8",171,0)
 N IEN,X,WCPDUZ,WOK
"RTN","OOPSGUI8",172,0)
 S WCPDUZ=$P($G(^OOPS(2260,NEWIEN,"WCES")),U)
"RTN","OOPSGUI8",173,0)
 I $G(WCPDUZ) S WOK=1,X=WCPDUZ,IEN=OLDIEN D WK^OOPSUTL1
"RTN","OOPSGUI8",174,0)
 K ^OOPS(2260,NEWIEN,"WCES")
"RTN","OOPSGUI8",175,0)
 S RESULTS=NUM
"RTN","OOPSGUI8",176,0)
DONE K DA,DIC,OLDIEN,NEWIEN,NUM,SUF,X,Y,DIK,OOP
"RTN","OOPSGUI8",177,0)
 Q
"RTN","OOPSGUI8",178,0)
SETDLOC(RESULTS,P1,DATA) ; files the detail location records
"RTN","OOPSGUI8",179,0)
 ;  Input - P1 is the Location record IEN concatenated with the station
"RTN","OOPSGUI8",180,0)
 ;              subrecord IEN. EX.  38^600  
"RTN","OOPSGUI8",181,0)
 ;          DATA is a # subscripted array containing the detail loc data
"RTN","OOPSGUI8",182,0)
 ;          in the format - detail location description^Detail Loc IEN  
"RTN","OOPSGUI8",183,0)
 ; Output - RESULTS indicating the success of the filing.
"RTN","OOPSGUI8",184,0)
 N CNT,IENS,FILE,LV1,LV2,LOC,MSG,REC,RECNO,STAFDA,STR
"RTN","OOPSGUI8",185,0)
 S BAD=0,FILE=2261.4,LOC=$P(P1,U),STA=$P(P1,U,2),RESULTS=""
"RTN","OOPSGUI8",186,0)
 I $D(DATA)<10 S RESULTS="NO DATA TO FILE, CANNOT CONTINUE" Q
"RTN","OOPSGUI8",187,0)
 I '$G(STA) S RESULTS="NO STATION SENT, COULDN'T FILE" Q
"RTN","OOPSGUI8",188,0)
 I '$G(LOC) S RESULTS="NO LOCATION SENT, COULDN'T FILE" Q
"RTN","OOPSGUI8",189,0)
 I '$D(^OOPS(FILE,LOC,1,"B",STA)) D  I BAD Q
"RTN","OOPSGUI8",190,0)
 .S IENS="+1,"_LOC_",",STAFDA(2261.43,IENS,.01)=STA
"RTN","OOPSGUI8",191,0)
 .D UPDATE^DIE("","STAFDA","IENS","MSG")
"RTN","OOPSGUI8",192,0)
 .I $D(MSG("DIERR")) D
"RTN","OOPSGUI8",193,0)
 ..S RESULTS="PROBLEM FILING NEW STATION SUBRECORD",BAD=1
"RTN","OOPSGUI8",194,0)
 ;KILL THE DETAIL LOCATION REC FOR STATION AND LOCATION PASSED IN
"RTN","OOPSGUI8",195,0)
 S DIENS=$O(^OOPS(FILE,"E",STA,LOC,"")),LV1=$O(^OOPS(FILE,LOC,0))
"RTN","OOPSGUI8",196,0)
 I $G(DIENS) D
"RTN","OOPSGUI8",197,0)
 .S LV2=$O(^OOPS(FILE,LOC,LV1,DIENS,0))
"RTN","OOPSGUI8",198,0)
 .I $G(LV2) K ^OOPS(FILE,LOC,LV1,DIENS,LV2)
"RTN","OOPSGUI8",199,0)
 .I $D(^OOPS(FILE,"F",DIENS,LOC)) K ^OOPS(FILE,"F",DIENS,LOC)
"RTN","OOPSGUI8",200,0)
 ;RE-FILE THE DETAIL LOCATION LEVEL RECORD
"RTN","OOPSGUI8",201,0)
 K STAFDA S CNT=0,RECNO=0,REC=""
"RTN","OOPSGUI8",202,0)
 F  S REC=$O(DATA(REC)) Q:REC=""  D
"RTN","OOPSGUI8",203,0)
 .S STR=DATA(REC),RECNO=$P(STR,U,2),CNT=CNT+1
"RTN","OOPSGUI8",204,0)
 .I RECNO="" S RECNO=CNT
"RTN","OOPSGUI8",205,0)
 .S IENS="+"_RECNO_","_DIENS_","_LOC_","
"RTN","OOPSGUI8",206,0)
 .S STAFDA(2261.431,IENS,.01)=$P(STR,U,1)
"RTN","OOPSGUI8",207,0)
 D UPDATE^DIE("E","STAFDA","IENS","MSG")
"RTN","OOPSGUI8",208,0)
 I '$D(MSG) S RESULTS="Filing Successful"
"RTN","OOPSGUI8",209,0)
 K MSG,STR,Y,X,%DT
"RTN","OOPSGUI8",210,0)
 Q
"RTN","OOPSV221")
0^^B6181059^n/a
"RTN","OOPSV221",1,0)
OOPSV221 ;WIOFO/LLH-POST INIT ROUTINE, FILL FIELD 331 ;09/15/09
"RTN","OOPSV221",2,0)
 ;;2.0;ASISTS;**21**;Jun 03, 2002;Build 7
"RTN","OOPSV221",3,0)
 ;
"RTN","OOPSV221",4,0)
 ; Patch 21 Pre Init Routine to clean up data in the Patient Source
"RTN","OOPSV221",5,0)
 ; field (#34) and Contamination field (#35)
"RTN","OOPSV221",6,0)
 ; and update 2263.3 T8 code
"RTN","OOPSV221",7,0)
 ;
"RTN","OOPSV221",8,0)
 Q  ; prevents excuting from top of routine
"RTN","OOPSV221",9,0)
 ;
"RTN","OOPSV221",10,0)
ENT ;
"RTN","OOPSV221",11,0)
 D BMES^XPDUTL("Starting Pre-install....") H 1
"RTN","OOPSV221",12,0)
 D CLEAN,UPDATE
"RTN","OOPSV221",13,0)
 D BMES^XPDUTL("Pre-install Complete!!!") H 1
"RTN","OOPSV221",14,0)
 Q
"RTN","OOPSV221",15,0)
CLEAN ;CLEAN UP 2260 ENTRIES
"RTN","OOPSV221",16,0)
 N OOPSCN,DA,DIC,DIE,DR,OOPSIEN,OOPSFILE,OOPSTYP,OOPSCONTAM,OOPSPAT,DR
"RTN","OOPSV221",17,0)
 S OOPSFILE=2260,OOPSIEN=0
"RTN","OOPSV221",18,0)
 D BMES^XPDUTL("Starting data clean up of PATIENT SOURCE (#34) and CONTAMINATION (#35) fields") H 1
"RTN","OOPSV221",19,0)
 D MES^XPDUTL(" ")
"RTN","OOPSV221",20,0)
 S DIE="^OOPS(2260,",DR=""
"RTN","OOPSV221",21,0)
 F  S OOPSIEN=$O(^OOPS(OOPSFILE,OOPSIEN)) Q:OOPSIEN'>0  D
"RTN","OOPSV221",22,0)
 .S OOPSTYP=$$GET1^DIQ(OOPSFILE,OOPSIEN,3,"I")
"RTN","OOPSV221",23,0)
 .I OOPSTYP>10&(OOPSTYP<15) Q  ; these are blood borne incidents and should have data
"RTN","OOPSV221",24,0)
 .; check to see if data in #34 or #35 - if so, kill then go on
"RTN","OOPSV221",25,0)
 .S OOPSPAT=$$GET1^DIQ(OOPSFILE,OOPSIEN,34,"I"),OOPSCONTAM=$$GET1^DIQ(OOPSFILE,OOPSIEN,35,"I")
"RTN","OOPSV221",26,0)
 .S OOPSCN=0,DR=""
"RTN","OOPSV221",27,0)
 .I $G(OOPSPAT)'="" S OOPSCN=OOPSCN+1,DR(1,2260,OOPSCN)="34///@"
"RTN","OOPSV221",28,0)
 .I $G(OOPSCONTAM)'="" S OOPSCN=OOPSCN+1,DR(1,2260,OOPSCN)="35///@"
"RTN","OOPSV221",29,0)
 .I $D(DR)>1 S DA=OOPSIEN D ^DIE K DR
"RTN","OOPSV221",30,0)
 D BMES^XPDUTL("Data Cleanup Complete") H 1
"RTN","OOPSV221",31,0)
 D MES^XPDUTL(" ")
"RTN","OOPSV221",32,0)
 Q
"RTN","OOPSV221",33,0)
UPDATE ;UPDATE 2263.3 IEN 59
"RTN","OOPSV221",34,0)
 N OOPSIEN1,DA,DIE,DIK
"RTN","OOPSV221",35,0)
 D BMES^XPDUTL("Starting update of the ASISTS DOL NATURE OF INJURY CODES file") H 1
"RTN","OOPSV221",36,0)
 S OOPSIEN1=""
"RTN","OOPSV221",37,0)
 S OOPSIEN1=$O(^OOPS(2263.3,"B","TRAUMATIC INJURY - UNCLASS. (EXCEPT DISEASE, ILLNESS)",0))
"RTN","OOPSV221",38,0)
 I OOPSIEN1="" D BMES^XPDUTL("TRAUMATIC INJURY (T8) does not exist....quitting update") Q
"RTN","OOPSV221",39,0)
 S DIK="^OOPS(2263.3,"
"RTN","OOPSV221",40,0)
 S DA=OOPSIEN1,DIK(1)=.01
"RTN","OOPSV221",41,0)
 D EN2^DIK
"RTN","OOPSV221",42,0)
 S $P(^OOPS(2263.3,DA,0),"^")="TRAUMATIC INJURY- UNCLASS. (EXCEPT DISEASE, ILLNESS)"
"RTN","OOPSV221",43,0)
 D EN1^DIK
"RTN","OOPSV221",44,0)
 D BMES^XPDUTL("Update Complete") H 1
"RTN","OOPSV221",45,0)
 K DA,DIE,DIK
"RTN","OOPSV221",46,0)
 Q
"VER")
8.0^22.0
"^DD",2260,2260,157,0)
PHYSICIAN ADDRESS^FX^^CA1I;2^K:$L(X)>35!($L(X)<3) X
"^DD",2260,2260,157,.1)
32. PHYSICIAN ADDRESS
"^DD",2260,2260,157,3)
Answer must be 3-35 characters in length.
"^DD",2260,2260,157,21,0)
^^1^1^2980410^
"^DD",2260,2260,157,21,1,0)
This is the physician's street address. (Injury)
"^DD",2260,2260,157,"DT")
3091014
"BLD",8198,6)
^20
**END**
**END**
