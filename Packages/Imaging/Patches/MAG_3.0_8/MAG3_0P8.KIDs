KIDS Distribution saved on Sep 15, 2004@14:23:17
VistA Imaging V3 - Patch 8
**KIDS**:MAG*3.0*8^

**INSTALL NAME**
MAG*3.0*8
"BLD",3392,0)
MAG*3.0*8^IMAGING^0^3040915^y
"BLD",3392,1,0)
^^70^70^3040915^
"BLD",3392,1,1,0)
 
"BLD",3392,1,2,0)
 
"BLD",3392,1,3,0)
Document scanning and image filtering.
"BLD",3392,1,4,0)
 
"BLD",3392,1,5,0)
Routine checksums:
"BLD",3392,1,6,0)
 
"BLD",3392,1,7,0)
MAGBAPI   value = 13283725
"BLD",3392,1,8,0)
MAGBAPIP  value = 4490136
"BLD",3392,1,9,0)
MAGFILEB  value = 11644630
"BLD",3392,1,10,0)
MAGGNLKP  value = 5120114
"BLD",3392,1,11,0)
MAGGNTI   value = 9823383
"BLD",3392,1,12,0)
MAGGSCP   value = 6072520
"BLD",3392,1,13,0)
MAGGSFL1  value = 5952938
"BLD",3392,1,14,0)
MAGGSFLT  value = 9149177
"BLD",3392,1,15,0)
MAGGSFT   value = 3683491
"BLD",3392,1,16,0)
MAGGSIA   value = 6077587
"BLD",3392,1,17,0)
MAGGSIA1  value = 13485750
"BLD",3392,1,18,0)
MAGGSIM   value = 5442685
"BLD",3392,1,19,0)
MAGGSIU1  value = 5521127
"BLD",3392,1,20,0)
MAGGSIU2  value = 4915214
"BLD",3392,1,21,0)
MAGGSIU3  value = 8910698
"BLD",3392,1,22,0)
MAGGSIUI  value = 15004401
"BLD",3392,1,23,0)
MAGGSIV   value = 15908776
"BLD",3392,1,24,0)
MAGGSIV1  value = 3907430
"BLD",3392,1,25,0)
MAGGSPP   value = 5789193
"BLD",3392,1,26,0)
MAGGSQI   value = 21356895
"BLD",3392,1,27,0)
MAGGTAU   value = 11244676
"BLD",3392,1,28,0)
MAGGTERR  value = 3000489
"BLD",3392,1,29,0)
MAGGTIA   value = 11274455
"BLD",3392,1,30,0)
MAGGTIA1  value = 7046008
"BLD",3392,1,31,0)
MAGGTID   value = 10903946
"BLD",3392,1,32,0)
MAGGTIG   value = 10401360
"BLD",3392,1,33,0)
MAGGTII   value = 8729176
"BLD",3392,1,34,0)
MAGGTMC   value = 4890330
"BLD",3392,1,35,0)
MAGGTPT1  value = 7555501
"BLD",3392,1,36,0)
MAGGTRAI  value = 9211973
"BLD",3392,1,37,0)
MAGGTRP1  value = 6078443
"BLD",3392,1,38,0)
MAGGTRPT  value = 12184290
"BLD",3392,1,39,0)
MAGGTSR   value = 4904140
"BLD",3392,1,40,0)
MAGGTU1   value = 4009879
"BLD",3392,1,41,0)
MAGGTU3   value = 11515909
"BLD",3392,1,42,0)
MAGGTU4   value = 8596313
"BLD",3392,1,43,0)
MAGGTU5   value = 4562085
"BLD",3392,1,44,0)
MAGGTU6   value = 9042947
"BLD",3392,1,45,0)
MAGGTU7   value = 9742723
"BLD",3392,1,46,0)
MAGGTU9   value = 8121952
"BLD",3392,1,47,0)
MAGGTUP   value = 6949357
"BLD",3392,1,48,0)
MAGIPOS8  value = 10371822
"BLD",3392,1,49,0)
MAGLOG    value = 4151777
"BLD",3392,1,50,0)
MAGQBAB   value = 5521638
"BLD",3392,1,51,0)
MAGQBGCC  value = 5471832
"BLD",3392,1,52,0)
MAGQBJB   value = 6294131
"BLD",3392,1,53,0)
MAGQBJH   value = 8678496
"BLD",3392,1,54,0)
MAGQBPG1  value = 12026245
"BLD",3392,1,55,0)
MAGQBPG2  value = 7662428
"BLD",3392,1,56,0)
MAGQBPRG  value = 9927955
"BLD",3392,1,57,0)
MAGQBTM   value = 14872817
"BLD",3392,1,58,0)
MAGQBUT   value = 14453966
"BLD",3392,1,59,0)
MAGQBUT1  value = 16504458
"BLD",3392,1,60,0)
MAGQBUT2  value = 15657747
"BLD",3392,1,61,0)
MAGQBUT4  value = 4347014
"BLD",3392,1,62,0)
MAGQE5    value = 10174225
"BLD",3392,1,63,0)
MAGSDEL4  value = 2647473
"BLD",3392,1,64,0)
MAGSDLGR  value = 6841689
"BLD",3392,1,65,0)
MAGSIMBR  value = 4052881
"BLD",3392,1,66,0)
MAGSIXG1  value = 11374305
"BLD",3392,1,67,0)
MAGSIXGT  value = 10338816
"BLD",3392,1,68,0)
MAGUSIT   value = 6381382
"BLD",3392,1,69,0)
 
"BLD",3392,1,70,0)
Routine MAGIPOS8 is deleted after the KIDS install.
"BLD",3392,4,0)
^9.64PA^2006.8^12
"BLD",3392,4,2005,0)
2005
"BLD",3392,4,2005,2,0)
^9.641^2005^1
"BLD",3392,4,2005,2,2005,0)
IMAGE  (File-top level)
"BLD",3392,4,2005,2,2005,1,0)
^9.6411^1^4
"BLD",3392,4,2005,2,2005,1,1,0)
FILEREF
"BLD",3392,4,2005,2,2005,1,30,0)
DELETED BY
"BLD",3392,4,2005,2,2005,1,30.1,0)
DELETED DATE
"BLD",3392,4,2005,2,2005,1,30.2,0)
DELETED REASON
"BLD",3392,4,2005,222)
y^y^p^^^^n
"BLD",3392,4,2005.021,0)
2005.021
"BLD",3392,4,2005.021,222)
y^y^f^^n^^y^r^n
"BLD",3392,4,2005.021,224)

"BLD",3392,4,2005.1,0)
2005.1
"BLD",3392,4,2005.1,2,0)
^9.641^2005.1106^3
"BLD",3392,4,2005.1,2,2005.1,0)
IMAGE AUDIT  (File-top level)
"BLD",3392,4,2005.1,2,2005.1,1,0)
^9.6411^42^15
"BLD",3392,4,2005.1,2,2005.1,1,.05,0)
ACQUSITION SITE
"BLD",3392,4,2005.1,2,2005.1,1,13,0)
IQ
"BLD",3392,4,2005.1,2,2005.1,1,30,0)
DELETED BY
"BLD",3392,4,2005.1,2,2005.1,1,30.1,0)
DELETED DATE
"BLD",3392,4,2005.1,2,2005.1,1,30.2,0)
DELETED REASON
"BLD",3392,4,2005.1,2,2005.1,1,40,0)
PACKAGE INDEX
"BLD",3392,4,2005.1,2,2005.1,1,41,0)
CLASS INDEX
"BLD",3392,4,2005.1,2,2005.1,1,42,0)
TYPE INDEX
"BLD",3392,4,2005.1,2,2005.1,1,43,0)
PROC/EVENT INDEX
"BLD",3392,4,2005.1,2,2005.1,1,44,0)
SPEC/SUBSPEC INDEX
"BLD",3392,4,2005.1,2,2005.1,1,45,0)
ORIGIN INDEX
"BLD",3392,4,2005.1,2,2005.1,1,107,0)
ACQUISITION DEVICE
"BLD",3392,4,2005.1,2,2005.1,1,108,0)
TRACKING ID
"BLD",3392,4,2005.1,2,2005.1,1,109,0)
CREATE METHOD
"BLD",3392,4,2005.1,2,2005.1,1,110,0)
DOCUMENT DATE
"BLD",3392,4,2005.1,2,2005.11,0)
EXPORT LOCATION  (sub-file)
"BLD",3392,4,2005.1,2,2005.11,1,0)
^9.6411^^0
"BLD",3392,4,2005.1,2,2005.1106,0)
ROUTING TIMESTAMP  (sub-file)
"BLD",3392,4,2005.1,2,2005.1106,1,0)
^9.6411^7^7
"BLD",3392,4,2005.1,2,2005.1106,1,.01,0)
ROUTING TIMESTAMP
"BLD",3392,4,2005.1,2,2005.1106,1,2,0)
DESTINATION
"BLD",3392,4,2005.1,2,2005.1106,1,3,0)
TYPE
"BLD",3392,4,2005.1,2,2005.1106,1,4,0)
FILENAME
"BLD",3392,4,2005.1,2,2005.1106,1,5,0)
START TRANSMIT
"BLD",3392,4,2005.1,2,2005.1106,1,6,0)
TIMESTAMP QUEUE ENTRY
"BLD",3392,4,2005.1,2,2005.1106,1,7,0)
LOG ENTRY
"BLD",3392,4,2005.1,222)
y^y^p^^^^n^^n
"BLD",3392,4,2005.1,224)

"BLD",3392,4,2005.2,0)
2005.2
"BLD",3392,4,2005.2,2,0)
^9.641^2005.2^1
"BLD",3392,4,2005.2,2,2005.2,0)
NETWORK LOCATION  (File-top level)
"BLD",3392,4,2005.2,2,2005.2,1,0)
^9.6411^6^1
"BLD",3392,4,2005.2,2,2005.2,1,6,0)
STORAGE TYPE
"BLD",3392,4,2005.2,222)
y^y^p^^^^n^^n
"BLD",3392,4,2005.2,224)

"BLD",3392,4,2005.86,0)
2005.86
"BLD",3392,4,2005.86,222)
y^y^f^^n^^y^o^n
"BLD",3392,4,2005.87,0)
2005.87
"BLD",3392,4,2005.87,222)
y^y^f^^^^n
"BLD",3392,4,2006.1,0)
2006.1
"BLD",3392,4,2006.1,2,0)
^9.641^2006.1^1
"BLD",3392,4,2006.1,2,2006.1,0)
IMAGING SITE PARAMETERS  (File-top level)
"BLD",3392,4,2006.1,2,2006.1,1,0)
^9.6411^70^7
"BLD",3392,4,2006.1,2,2006.1,1,60,0)
NEW AUTOPURGE
"BLD",3392,4,2006.1,2,2006.1,1,61,0)
CONTINUOUS PURGE
"BLD",3392,4,2006.1,2,2006.1,1,62,0)
SCHEDULED PURGE
"BLD",3392,4,2006.1,2,2006.1,1,63,0)
SCHEDULED PURGE FREQUENCY
"BLD",3392,4,2006.1,2,2006.1,1,64,0)
SCHEDULED PURGE TIME
"BLD",3392,4,2006.1,2,2006.1,1,65,0)
DATE OF LAST PURGE
"BLD",3392,4,2006.1,2,2006.1,1,70,0)
CT PRESETS
"BLD",3392,4,2006.1,222)
y^y^p^^^^n^^n
"BLD",3392,4,2006.1,224)

"BLD",3392,4,2006.18,0)
2006.18
"BLD",3392,4,2006.18,2,0)
^9.641^2006.18^1
"BLD",3392,4,2006.18,2,2006.18,0)
IMAGING USER PREFERENCE  (File-top level)
"BLD",3392,4,2006.18,2,2006.18,1,0)
^9.6411^179^29
"BLD",3392,4,2006.18,2,2006.18,1,137,0)
ABS COLS
"BLD",3392,4,2006.18,2,2006.18,1,138,0)
ABS MAXLOAD
"BLD",3392,4,2006.18,2,2006.18,1,140,0)
FULL COLS
"BLD",3392,4,2006.18,2,2006.18,1,141,0)
FULL MAXLOAD
"BLD",3392,4,2006.18,2,2006.18,1,143,0)
DOC COLS
"BLD",3392,4,2006.18,2,2006.18,1,144,0)
DOC MAXLOAD
"BLD",3392,4,2006.18,2,2006.18,1,146,0)
GRP COLS
"BLD",3392,4,2006.18,2,2006.18,1,147,0)
GRP MAXLOAD
"BLD",3392,4,2006.18,2,2006.18,1,148,0)
ABS TOOLBAR
"BLD",3392,4,2006.18,2,2006.18,1,149,0)
FULL TOOLBAR
"BLD",3392,4,2006.18,2,2006.18,1,150,0)
DOC TOOLBAR
"BLD",3392,4,2006.18,2,2006.18,1,151,0)
GRP TOOLBAR
"BLD",3392,4,2006.18,2,2006.18,1,152,0)
ABS ROWS
"BLD",3392,4,2006.18,2,2006.18,1,153,0)
FULL ROWS
"BLD",3392,4,2006.18,2,2006.18,1,154,0)
DOC ROWS
"BLD",3392,4,2006.18,2,2006.18,1,155,0)
GRP ROWS
"BLD",3392,4,2006.18,2,2006.18,1,156,0)
ABS LOCKSIZE
"BLD",3392,4,2006.18,2,2006.18,1,157,0)
FULL LOCKSIZE
"BLD",3392,4,2006.18,2,2006.18,1,158,0)
DOC LOCKSIZE
"BLD",3392,4,2006.18,2,2006.18,1,159,0)
GRP LOCKSIZE
"BLD",3392,4,2006.18,2,2006.18,1,163,0)
COLUMN WIDTHS
"BLD",3392,4,2006.18,2,2006.18,1,164,0)
FULL IMAGE WIDTH
"BLD",3392,4,2006.18,2,2006.18,1,165,0)
FULL IMAGE HEIGHT
"BLD",3392,4,2006.18,2,2006.18,1,174,0)
VIEW REMOTE ABS
"BLD",3392,4,2006.18,2,2006.18,1,175,0)
ABS PREVIEW
"BLD",3392,4,2006.18,2,2006.18,1,176,0)
REPORT PREVIEW
"BLD",3392,4,2006.18,2,2006.18,1,177,0)
FILTER DEFAULT
"BLD",3392,4,2006.18,2,2006.18,1,178,0)
FILTER TABS
"BLD",3392,4,2006.18,2,2006.18,1,179,0)
FILTER TABS MULTILINE
"BLD",3392,4,2006.18,222)
y^y^p^^^^n^^n
"BLD",3392,4,2006.18,224)

"BLD",3392,4,2006.8,0)
2006.8
"BLD",3392,4,2006.8,2,0)
^9.641^2006.8^1
"BLD",3392,4,2006.8,2,2006.8,0)
BP WORKSTATIONS  (File-top level)
"BLD",3392,4,2006.8,2,2006.8,1,0)
^9.6411^16^2
"BLD",3392,4,2006.8,2,2006.8,1,16,0)
IMPORT
"BLD",3392,4,2006.8,2,2006.8,1,17,0)
GCC
"BLD",3392,4,2006.8,222)
y^y^p^^^^n^^n
"BLD",3392,4,2006.8,224)

"BLD",3392,4,2006.81,0)
2006.81
"BLD",3392,4,2006.81,2,0)
^9.641^2006.81^1
"BLD",3392,4,2006.81,2,2006.81,0)
IMAGING WINDOWS WORKSTATIONS  (File-top level)
"BLD",3392,4,2006.81,2,2006.81,1,0)
^9.6411^.04^1
"BLD",3392,4,2006.81,2,2006.81,1,.04,0)
PLACE
"BLD",3392,4,2006.81,222)
y^y^p^^^^n^^n
"BLD",3392,4,2006.81,224)

"BLD",3392,4,2006.82,0)
2006.82
"BLD",3392,4,2006.82,2,0)
^9.641^2006.821^2
"BLD",3392,4,2006.82,2,2006.82,0)
IMAGING WINDOWS SESSIONS  (File-top level)
"BLD",3392,4,2006.82,2,2006.82,1,0)
^9.6411^9.4^5
"BLD",3392,4,2006.82,2,2006.82,1,.04,0)
PLACE
"BLD",3392,4,2006.82,2,2006.82,1,8,0)
TRACKING ID
"BLD",3392,4,2006.82,2,2006.82,1,9,0)
CLIENT VERSION
"BLD",3392,4,2006.82,2,2006.82,1,9.2,0)
HOST VERSION
"BLD",3392,4,2006.82,2,2006.82,1,9.4,0)
OS VERSION
"BLD",3392,4,2006.82,2,2006.821,0)
ACTIONS  (sub-file)
"BLD",3392,4,2006.82,2,2006.821,1,0)
^9.6411^13^14
"BLD",3392,4,2006.82,2,2006.821,1,.01,0)
ACTION
"BLD",3392,4,2006.82,2,2006.821,1,1,0)
DFN
"BLD",3392,4,2006.82,2,2006.821,1,2,0)
Image IEN
"BLD",3392,4,2006.82,2,2006.821,1,3,0)
Procedure
"BLD",3392,4,2006.82,2,2006.821,1,4,0)
TIMESTAMP
"BLD",3392,4,2006.82,2,2006.821,1,5,0)
V-RAD IMAGES
"BLD",3392,4,2006.82,2,2006.821,1,6,0)
V-RAD PATIENTS
"BLD",3392,4,2006.82,2,2006.821,1,7,0)
V-RAD USER TYPE
"BLD",3392,4,2006.82,2,2006.821,1,8,0)
V-RAD REMOTE READ FLAG
"BLD",3392,4,2006.82,2,2006.821,1,9,0)
RESOLUTION HEIGHT
"BLD",3392,4,2006.82,2,2006.821,1,10,0)
RESOLUTION WIDTH
"BLD",3392,4,2006.82,2,2006.821,1,11,0)
RESOLUTION BITS
"BLD",3392,4,2006.82,2,2006.821,1,12,0)
DISPLAY TYPE
"BLD",3392,4,2006.82,2,2006.821,1,13,0)
ACTION PARAMETER
"BLD",3392,4,2006.82,222)
y^y^p^^^^n^^n
"BLD",3392,4,2006.82,224)

"BLD",3392,4,2006.95,0)
2006.95
"BLD",3392,4,2006.95,2,0)
^9.641^2006.95^1
"BLD",3392,4,2006.95,2,2006.95,0)
IMAGE ACCESS LOG  (File-top level)
"BLD",3392,4,2006.95,2,2006.95,1,0)
^9.6411^9^1
"BLD",3392,4,2006.95,2,2006.95,1,9,0)
SESSION
"BLD",3392,4,2006.95,222)
y^y^p^^^^n
"BLD",3392,4,"APDD",2005,2005)

"BLD",3392,4,"APDD",2005,2005,1)

"BLD",3392,4,"APDD",2005,2005,30)

"BLD",3392,4,"APDD",2005,2005,30.1)

"BLD",3392,4,"APDD",2005,2005,30.2)

"BLD",3392,4,"APDD",2005.1,2005.1)

"BLD",3392,4,"APDD",2005.1,2005.1,.05)

"BLD",3392,4,"APDD",2005.1,2005.1,13)

"BLD",3392,4,"APDD",2005.1,2005.1,30)

"BLD",3392,4,"APDD",2005.1,2005.1,30.1)

"BLD",3392,4,"APDD",2005.1,2005.1,30.2)

"BLD",3392,4,"APDD",2005.1,2005.1,40)

"BLD",3392,4,"APDD",2005.1,2005.1,41)

"BLD",3392,4,"APDD",2005.1,2005.1,42)

"BLD",3392,4,"APDD",2005.1,2005.1,43)

"BLD",3392,4,"APDD",2005.1,2005.1,44)

"BLD",3392,4,"APDD",2005.1,2005.1,45)

"BLD",3392,4,"APDD",2005.1,2005.1,107)

"BLD",3392,4,"APDD",2005.1,2005.1,108)

"BLD",3392,4,"APDD",2005.1,2005.1,109)

"BLD",3392,4,"APDD",2005.1,2005.1,110)

"BLD",3392,4,"APDD",2005.1,2005.11)

"BLD",3392,4,"APDD",2005.1,2005.1106)

"BLD",3392,4,"APDD",2005.1,2005.1106,.01)

"BLD",3392,4,"APDD",2005.1,2005.1106,2)

"BLD",3392,4,"APDD",2005.1,2005.1106,3)

"BLD",3392,4,"APDD",2005.1,2005.1106,4)

"BLD",3392,4,"APDD",2005.1,2005.1106,5)

"BLD",3392,4,"APDD",2005.1,2005.1106,6)

"BLD",3392,4,"APDD",2005.1,2005.1106,7)

"BLD",3392,4,"APDD",2005.2,2005.2)

"BLD",3392,4,"APDD",2005.2,2005.2,6)

"BLD",3392,4,"APDD",2006.1,2006.1)

"BLD",3392,4,"APDD",2006.1,2006.1,60)

"BLD",3392,4,"APDD",2006.1,2006.1,61)

"BLD",3392,4,"APDD",2006.1,2006.1,62)

"BLD",3392,4,"APDD",2006.1,2006.1,63)

"BLD",3392,4,"APDD",2006.1,2006.1,64)

"BLD",3392,4,"APDD",2006.1,2006.1,65)

"BLD",3392,4,"APDD",2006.1,2006.1,70)

"BLD",3392,4,"APDD",2006.18,2006.18)

"BLD",3392,4,"APDD",2006.18,2006.18,137)

"BLD",3392,4,"APDD",2006.18,2006.18,138)

"BLD",3392,4,"APDD",2006.18,2006.18,140)

"BLD",3392,4,"APDD",2006.18,2006.18,141)

"BLD",3392,4,"APDD",2006.18,2006.18,143)

"BLD",3392,4,"APDD",2006.18,2006.18,144)

"BLD",3392,4,"APDD",2006.18,2006.18,146)

"BLD",3392,4,"APDD",2006.18,2006.18,147)

"BLD",3392,4,"APDD",2006.18,2006.18,148)

"BLD",3392,4,"APDD",2006.18,2006.18,149)

"BLD",3392,4,"APDD",2006.18,2006.18,150)

"BLD",3392,4,"APDD",2006.18,2006.18,151)

"BLD",3392,4,"APDD",2006.18,2006.18,152)

"BLD",3392,4,"APDD",2006.18,2006.18,153)

"BLD",3392,4,"APDD",2006.18,2006.18,154)

"BLD",3392,4,"APDD",2006.18,2006.18,155)

"BLD",3392,4,"APDD",2006.18,2006.18,156)

"BLD",3392,4,"APDD",2006.18,2006.18,157)

"BLD",3392,4,"APDD",2006.18,2006.18,158)

"BLD",3392,4,"APDD",2006.18,2006.18,159)

"BLD",3392,4,"APDD",2006.18,2006.18,163)

"BLD",3392,4,"APDD",2006.18,2006.18,164)

"BLD",3392,4,"APDD",2006.18,2006.18,165)

"BLD",3392,4,"APDD",2006.18,2006.18,174)

"BLD",3392,4,"APDD",2006.18,2006.18,175)

"BLD",3392,4,"APDD",2006.18,2006.18,176)

"BLD",3392,4,"APDD",2006.18,2006.18,177)

"BLD",3392,4,"APDD",2006.18,2006.18,178)

"BLD",3392,4,"APDD",2006.18,2006.18,179)

"BLD",3392,4,"APDD",2006.8,2006.8)

"BLD",3392,4,"APDD",2006.8,2006.8,16)

"BLD",3392,4,"APDD",2006.8,2006.8,17)

"BLD",3392,4,"APDD",2006.81,2006.81)

"BLD",3392,4,"APDD",2006.81,2006.81,.04)

"BLD",3392,4,"APDD",2006.82,2006.82)

"BLD",3392,4,"APDD",2006.82,2006.82,.04)

"BLD",3392,4,"APDD",2006.82,2006.82,8)

"BLD",3392,4,"APDD",2006.82,2006.82,9)

"BLD",3392,4,"APDD",2006.82,2006.82,9.2)

"BLD",3392,4,"APDD",2006.82,2006.82,9.4)

"BLD",3392,4,"APDD",2006.82,2006.821)

"BLD",3392,4,"APDD",2006.82,2006.821,.01)

"BLD",3392,4,"APDD",2006.82,2006.821,1)

"BLD",3392,4,"APDD",2006.82,2006.821,2)

"BLD",3392,4,"APDD",2006.82,2006.821,3)

"BLD",3392,4,"APDD",2006.82,2006.821,4)

"BLD",3392,4,"APDD",2006.82,2006.821,5)

"BLD",3392,4,"APDD",2006.82,2006.821,6)

"BLD",3392,4,"APDD",2006.82,2006.821,7)

"BLD",3392,4,"APDD",2006.82,2006.821,8)

"BLD",3392,4,"APDD",2006.82,2006.821,9)

"BLD",3392,4,"APDD",2006.82,2006.821,10)

"BLD",3392,4,"APDD",2006.82,2006.821,11)

"BLD",3392,4,"APDD",2006.82,2006.821,12)

"BLD",3392,4,"APDD",2006.82,2006.821,13)

"BLD",3392,4,"APDD",2006.95,2006.95)

"BLD",3392,4,"APDD",2006.95,2006.95,9)

"BLD",3392,4,"B",2005,2005)

"BLD",3392,4,"B",2005.021,2005.021)

"BLD",3392,4,"B",2005.1,2005.1)

"BLD",3392,4,"B",2005.2,2005.2)

"BLD",3392,4,"B",2005.86,2005.86)

"BLD",3392,4,"B",2005.87,2005.87)

"BLD",3392,4,"B",2006.1,2006.1)

"BLD",3392,4,"B",2006.18,2006.18)

"BLD",3392,4,"B",2006.8,2006.8)

"BLD",3392,4,"B",2006.81,2006.81)

"BLD",3392,4,"B",2006.82,2006.82)

"BLD",3392,4,"B",2006.95,2006.95)

"BLD",3392,"ABNS",0)
^9.66A^^
"BLD",3392,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",3392,"INI")
PRE^MAGIPOS8
"BLD",3392,"INID")
^y
"BLD",3392,"INIT")
POST^MAGIPOS8
"BLD",3392,"KRN",0)
^9.67PA^8989.52^19
"BLD",3392,"KRN",.4,0)
.4
"BLD",3392,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3392,"KRN",.401,0)
.401
"BLD",3392,"KRN",.402,0)
.402
"BLD",3392,"KRN",.403,0)
.403
"BLD",3392,"KRN",.5,0)
.5
"BLD",3392,"KRN",.84,0)
.84
"BLD",3392,"KRN",3.6,0)
3.6
"BLD",3392,"KRN",3.8,0)
3.8
"BLD",3392,"KRN",9.2,0)
9.2
"BLD",3392,"KRN",9.8,0)
9.8
"BLD",3392,"KRN",9.8,"NM",0)
^9.68A^84^61
"BLD",3392,"KRN",9.8,"NM",18,0)
MAGSIMBR^^0^B6173550
"BLD",3392,"KRN",9.8,"NM",19,0)
MAGSIXGT^^0^B37432066
"BLD",3392,"KRN",9.8,"NM",21,0)
MAGGTUP^^0^B20185672
"BLD",3392,"KRN",9.8,"NM",22,0)
MAGGTU3^^0^B56717908
"BLD",3392,"KRN",9.8,"NM",23,0)
MAGGSPP^^0^B10825768
"BLD",3392,"KRN",9.8,"NM",24,0)
MAGGTRP1^^0^B17417093
"BLD",3392,"KRN",9.8,"NM",25,0)
MAGGTAU^^0^B51565767
"BLD",3392,"KRN",9.8,"NM",26,0)
MAGGTID^^0^B43238209
"BLD",3392,"KRN",9.8,"NM",30,0)
MAGLOG^^0^B6490989
"BLD",3392,"KRN",9.8,"NM",31,0)
MAGFILEB^^0^B47953260
"BLD",3392,"KRN",9.8,"NM",32,0)
MAGGSIA^^0^B18817772
"BLD",3392,"KRN",9.8,"NM",33,0)
MAGGTIA1^^0^B21367924
"BLD",3392,"KRN",9.8,"NM",34,0)
MAGGTII^^0^B36318486
"BLD",3392,"KRN",9.8,"NM",35,0)
MAGSIXG1^^0^B32635345
"BLD",3392,"KRN",9.8,"NM",36,0)
MAGSDLGR^^0^B12156712
"BLD",3392,"KRN",9.8,"NM",37,0)
MAGGTPT1^^0^B26050561
"BLD",3392,"KRN",9.8,"NM",38,0)
MAGGSCP^^0^B13828582
"BLD",3392,"KRN",9.8,"NM",39,0)
MAGGSIM^^0^B14674288
"BLD",3392,"KRN",9.8,"NM",40,0)
MAGGSIU3^^0^B23025825
"BLD",3392,"KRN",9.8,"NM",41,0)
MAGBAPI^^0^B58206727
"BLD",3392,"KRN",9.8,"NM",42,0)
MAGGSIUI^^0^B57037227
"BLD",3392,"KRN",9.8,"NM",43,0)
MAGGTMC^^0^B11614224
"BLD",3392,"KRN",9.8,"NM",44,0)
MAGGTU4^^0^B25864523
"BLD",3392,"KRN",9.8,"NM",45,0)
MAGGTU6^^0^B32792243
"BLD",3392,"KRN",9.8,"NM",46,0)
MAGGTU7^^0^B21834600
"BLD",3392,"KRN",9.8,"NM",47,0)
MAGGSIU1^^0^B13472953
"BLD",3392,"KRN",9.8,"NM",48,0)
MAGGSIA1^^0^B38724152
"BLD",3392,"KRN",9.8,"NM",49,0)
MAGGSIV^^0^B46501828
"BLD",3392,"KRN",9.8,"NM",50,0)
MAGGTU1^^0^B6555035
"BLD",3392,"KRN",9.8,"NM",51,0)
MAGBAPIP^^0^B8014515
"BLD",3392,"KRN",9.8,"NM",53,0)
MAGGTIA^^0^B41249295
"BLD",3392,"KRN",9.8,"NM",54,0)
MAGGSFT^^0^B6466586
"BLD",3392,"KRN",9.8,"NM",55,0)
MAGGSQI^^0^B71116866
"BLD",3392,"KRN",9.8,"NM",56,0)
MAGGNTI^^0^B26704930
"BLD",3392,"KRN",9.8,"NM",57,0)
MAGGTIG^^0^B52107947
"BLD",3392,"KRN",9.8,"NM",58,0)
MAGQBTM^^0^B99142809
"BLD",3392,"KRN",9.8,"NM",59,0)
MAGGSFLT^^0^B27846060
"BLD",3392,"KRN",9.8,"NM",60,0)
MAGGTRAI^^0^B28882379
"BLD",3392,"KRN",9.8,"NM",61,0)
MAGGTSR^^0^B9517947
"BLD",3392,"KRN",9.8,"NM",62,0)
MAGQBAB^^0^B9913534
"BLD",3392,"KRN",9.8,"NM",63,0)
MAGQBGCC^^0^B10461667
"BLD",3392,"KRN",9.8,"NM",64,0)
MAGQBJB^^0^B14181194
"BLD",3392,"KRN",9.8,"NM",65,0)
MAGQBJH^^0^B23150331
"BLD",3392,"KRN",9.8,"NM",66,0)
MAGQBPG1^^0^B48703244
"BLD",3392,"KRN",9.8,"NM",67,0)
MAGQBUT^^0^B65302451
"BLD",3392,"KRN",9.8,"NM",68,0)
MAGQBUT1^^0^B78974758
"BLD",3392,"KRN",9.8,"NM",69,0)
MAGGTRPT^^0^B42848929
"BLD",3392,"KRN",9.8,"NM",70,0)
MAGGNLKP^^0^B10282451
"BLD",3392,"KRN",9.8,"NM",71,0)
MAGGTERR^^0^B5312930
"BLD",3392,"KRN",9.8,"NM",72,0)
MAGGTU9^^0^B20290460
"BLD",3392,"KRN",9.8,"NM",73,0)
MAGGSIU2^^0^B8027721
"BLD",3392,"KRN",9.8,"NM",74,0)
MAGQBPRG^^0^B51672759
"BLD",3392,"KRN",9.8,"NM",75,0)
MAGQBPG2^^0^B21017968
"BLD",3392,"KRN",9.8,"NM",76,0)
MAGUSIT^^0^B17254641
"BLD",3392,"KRN",9.8,"NM",77,0)
MAGGTU5^^0^B7750805
"BLD",3392,"KRN",9.8,"NM",79,0)
MAGQBUT4^^0^B10763650
"BLD",3392,"KRN",9.8,"NM",80,0)
MAGGSIV1^^0^B6852981
"BLD",3392,"KRN",9.8,"NM",81,0)
MAGGSFL1^^0^B12555242
"BLD",3392,"KRN",9.8,"NM",82,0)
MAGQE5^^0^B37769146
"BLD",3392,"KRN",9.8,"NM",83,0)
MAGQBUT2^^0^B81305506
"BLD",3392,"KRN",9.8,"NM",84,0)
MAGSDEL4^^0^B3576635
"BLD",3392,"KRN",9.8,"NM","B","MAGBAPI",41)

"BLD",3392,"KRN",9.8,"NM","B","MAGBAPIP",51)

"BLD",3392,"KRN",9.8,"NM","B","MAGFILEB",31)

"BLD",3392,"KRN",9.8,"NM","B","MAGGNLKP",70)

"BLD",3392,"KRN",9.8,"NM","B","MAGGNTI",56)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSCP",38)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSFL1",81)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSFLT",59)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSFT",54)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIA",32)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIA1",48)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIM",39)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIU1",47)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIU2",73)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIU3",40)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIUI",42)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIV",49)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSIV1",80)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSPP",23)

"BLD",3392,"KRN",9.8,"NM","B","MAGGSQI",55)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTAU",25)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTERR",71)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTIA",53)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTIA1",33)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTID",26)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTIG",57)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTII",34)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTMC",43)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTPT1",37)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTRAI",60)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTRP1",24)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTRPT",69)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTSR",61)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTU1",50)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTU3",22)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTU4",44)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTU5",77)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTU6",45)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTU7",46)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTU9",72)

"BLD",3392,"KRN",9.8,"NM","B","MAGGTUP",21)

"BLD",3392,"KRN",9.8,"NM","B","MAGLOG",30)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBAB",62)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBGCC",63)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBJB",64)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBJH",65)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBPG1",66)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBPG2",75)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBPRG",74)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBTM",58)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBUT",67)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBUT1",68)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBUT2",83)

"BLD",3392,"KRN",9.8,"NM","B","MAGQBUT4",79)

"BLD",3392,"KRN",9.8,"NM","B","MAGQE5",82)

"BLD",3392,"KRN",9.8,"NM","B","MAGSDEL4",84)

"BLD",3392,"KRN",9.8,"NM","B","MAGSDLGR",36)

"BLD",3392,"KRN",9.8,"NM","B","MAGSIMBR",18)

"BLD",3392,"KRN",9.8,"NM","B","MAGSIXG1",35)

"BLD",3392,"KRN",9.8,"NM","B","MAGSIXGT",19)

"BLD",3392,"KRN",9.8,"NM","B","MAGUSIT",76)

"BLD",3392,"KRN",19,0)
19
"BLD",3392,"KRN",19,"NM",0)
^9.68A^8^7
"BLD",3392,"KRN",19,"NM",1,0)
MAG WINDOWS^^0
"BLD",3392,"KRN",19,"NM",2,0)
MAG SYS-DELETE IMAGEGROUP^^0
"BLD",3392,"KRN",19,"NM",3,0)
MAG SYS MENU^^2
"BLD",3392,"KRN",19,"NM",4,0)
MAG SYS-DEFINE SITE PARAMETERS^^1^
"BLD",3392,"KRN",19,"NM",6,0)
MAG SYS-ENTER/EDIT WORKSTATION^^1^
"BLD",3392,"KRN",19,"NM",7,0)
MAG SYS-ENTER/EDIT NETWORK LOC^^1^
"BLD",3392,"KRN",19,"NM",8,0)
MAG SYS-EDIT PURGE PARAMETERS^^1^
"BLD",3392,"KRN",19,"NM","B","MAG SYS MENU",3)

"BLD",3392,"KRN",19,"NM","B","MAG SYS-DEFINE SITE PARAMETERS",4)

"BLD",3392,"KRN",19,"NM","B","MAG SYS-DELETE IMAGEGROUP",2)

"BLD",3392,"KRN",19,"NM","B","MAG SYS-EDIT PURGE PARAMETERS",8)

"BLD",3392,"KRN",19,"NM","B","MAG SYS-ENTER/EDIT NETWORK LOC",7)

"BLD",3392,"KRN",19,"NM","B","MAG SYS-ENTER/EDIT WORKSTATION",6)

"BLD",3392,"KRN",19,"NM","B","MAG WINDOWS",1)

"BLD",3392,"KRN",19.1,0)
19.1
"BLD",3392,"KRN",19.1,"NM",0)
^9.68A^3^3
"BLD",3392,"KRN",19.1,"NM",1,0)
MAGDISP CLIN^^0
"BLD",3392,"KRN",19.1,"NM",2,0)
MAG RAD SETTINGS^^0
"BLD",3392,"KRN",19.1,"NM",3,0)
MAGCAP ADMIN^^0
"BLD",3392,"KRN",19.1,"NM","B","MAG RAD SETTINGS",2)

"BLD",3392,"KRN",19.1,"NM","B","MAGCAP ADMIN",3)

"BLD",3392,"KRN",19.1,"NM","B","MAGDISP CLIN",1)

"BLD",3392,"KRN",101,0)
101
"BLD",3392,"KRN",101,"NM",0)
^9.68A^^
"BLD",3392,"KRN",409.61,0)
409.61
"BLD",3392,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",3392,"KRN",771,0)
771
"BLD",3392,"KRN",771,"NM",0)
^9.68A^^
"BLD",3392,"KRN",870,0)
870
"BLD",3392,"KRN",870,"NM",0)
^9.68A^^
"BLD",3392,"KRN",8989.51,0)
8989.51
"BLD",3392,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3392,"KRN",8989.52,0)
8989.52
"BLD",3392,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",3392,"KRN",8994,0)
8994
"BLD",3392,"KRN",8994,"NM",0)
^9.68A^25^24
"BLD",3392,"KRN",8994,"NM",1,0)
MAG4 INDEX GET EVENT^^0
"BLD",3392,"KRN",8994,"NM",2,0)
MAG4 INDEX GET TYPE^^0
"BLD",3392,"KRN",8994,"NM",3,0)
MAG4 INDEX GET SPECIALTY^^0
"BLD",3392,"KRN",8994,"NM",4,0)
MAG4 PAT GET IMAGES^^0
"BLD",3392,"KRN",8994,"NM",5,0)
MAG4 POST PROCESS ACTIONS^^0
"BLD",3392,"KRN",8994,"NM",7,0)
MAG4 GET IMAGE INFO^^0
"BLD",3392,"KRN",8994,"NM",8,0)
MAG4 GET FILE FORMAT INFO^^0
"BLD",3392,"KRN",8994,"NM",9,0)
MAG GET ENV^^0
"BLD",3392,"KRN",8994,"NM",10,0)
MAG4 CT PRESETS GET^^0
"BLD",3392,"KRN",8994,"NM",11,0)
MAG4 CT PRESETS SAVE^^0
"BLD",3392,"KRN",8994,"NM",12,0)
MAG4 FILTER DELETE^^0
"BLD",3392,"KRN",8994,"NM",13,0)
MAG4 FILTER DETAILS^^0
"BLD",3392,"KRN",8994,"NM",14,0)
MAG4 FILTER GET LIST^^0
"BLD",3392,"KRN",8994,"NM",15,0)
MAG4 FILTER SAVE^^0
"BLD",3392,"KRN",8994,"NM",16,0)
MAG4 GET SUPPORTED EXTENSIONS^^0
"BLD",3392,"KRN",8994,"NM",17,0)
MAG4 VERSION CHECK^^0
"BLD",3392,"KRN",8994,"NM",18,0)
MAGG PLACE^^0
"BLD",3392,"KRN",8994,"NM",19,0)
MAGG CONS^^0
"BLD",3392,"KRN",8994,"NM",20,0)
MAGGUSER^^1^
"BLD",3392,"KRN",8994,"NM",21,0)
MAGGIMAGELIST^^1^
"BLD",3392,"KRN",8994,"NM",22,0)
MAGGPATAPPT^^1^
"BLD",3392,"KRN",8994,"NM",23,0)
MAG FLD ATT^^0
"BLD",3392,"KRN",8994,"NM",24,0)
MAGG INSTALL^^0
"BLD",3392,"KRN",8994,"NM",25,0)
MAG DIRHASH^^0
"BLD",3392,"KRN",8994,"NM","B","MAG DIRHASH",25)

"BLD",3392,"KRN",8994,"NM","B","MAG FLD ATT",23)

"BLD",3392,"KRN",8994,"NM","B","MAG GET ENV",9)

"BLD",3392,"KRN",8994,"NM","B","MAG4 CT PRESETS GET",10)

"BLD",3392,"KRN",8994,"NM","B","MAG4 CT PRESETS SAVE",11)

"BLD",3392,"KRN",8994,"NM","B","MAG4 FILTER DELETE",12)

"BLD",3392,"KRN",8994,"NM","B","MAG4 FILTER DETAILS",13)

"BLD",3392,"KRN",8994,"NM","B","MAG4 FILTER GET LIST",14)

"BLD",3392,"KRN",8994,"NM","B","MAG4 FILTER SAVE",15)

"BLD",3392,"KRN",8994,"NM","B","MAG4 GET FILE FORMAT INFO",8)

"BLD",3392,"KRN",8994,"NM","B","MAG4 GET IMAGE INFO",7)

"BLD",3392,"KRN",8994,"NM","B","MAG4 GET SUPPORTED EXTENSIONS",16)

"BLD",3392,"KRN",8994,"NM","B","MAG4 INDEX GET EVENT",1)

"BLD",3392,"KRN",8994,"NM","B","MAG4 INDEX GET SPECIALTY",3)

"BLD",3392,"KRN",8994,"NM","B","MAG4 INDEX GET TYPE",2)

"BLD",3392,"KRN",8994,"NM","B","MAG4 PAT GET IMAGES",4)

"BLD",3392,"KRN",8994,"NM","B","MAG4 POST PROCESS ACTIONS",5)

"BLD",3392,"KRN",8994,"NM","B","MAG4 VERSION CHECK",17)

"BLD",3392,"KRN",8994,"NM","B","MAGG CONS",19)

"BLD",3392,"KRN",8994,"NM","B","MAGG INSTALL",24)

"BLD",3392,"KRN",8994,"NM","B","MAGG PLACE",18)

"BLD",3392,"KRN",8994,"NM","B","MAGGIMAGELIST",21)

"BLD",3392,"KRN",8994,"NM","B","MAGGPATAPPT",22)

"BLD",3392,"KRN",8994,"NM","B","MAGGUSER",20)

"BLD",3392,"KRN","B",.4,.4)

"BLD",3392,"KRN","B",.401,.401)

"BLD",3392,"KRN","B",.402,.402)

"BLD",3392,"KRN","B",.403,.403)

"BLD",3392,"KRN","B",.5,.5)

"BLD",3392,"KRN","B",.84,.84)

"BLD",3392,"KRN","B",3.6,3.6)

"BLD",3392,"KRN","B",3.8,3.8)

"BLD",3392,"KRN","B",9.2,9.2)

"BLD",3392,"KRN","B",9.8,9.8)

"BLD",3392,"KRN","B",19,19)

"BLD",3392,"KRN","B",19.1,19.1)

"BLD",3392,"KRN","B",101,101)

"BLD",3392,"KRN","B",409.61,409.61)

"BLD",3392,"KRN","B",771,771)

"BLD",3392,"KRN","B",870,870)

"BLD",3392,"KRN","B",8989.51,8989.51)

"BLD",3392,"KRN","B",8989.52,8989.52)

"BLD",3392,"KRN","B",8994,8994)

"BLD",3392,"QUES",0)
^9.62^^
"BLD",3392,"REQB",0)
^9.611^6^5
"BLD",3392,"REQB",1,0)
MAG*3.0*17^2
"BLD",3392,"REQB",2,0)
MAG*3.0*25^2
"BLD",3392,"REQB",3,0)
MAG*3.0*7^2
"BLD",3392,"REQB",4,0)
MAG*3.0*3^2
"BLD",3392,"REQB",6,0)
MAG*3.0*24^2
"BLD",3392,"REQB","B","MAG*3.0*17",1)

"BLD",3392,"REQB","B","MAG*3.0*24",6)

"BLD",3392,"REQB","B","MAG*3.0*25",2)

"BLD",3392,"REQB","B","MAG*3.0*3",4)

"BLD",3392,"REQB","B","MAG*3.0*7",3)

"DATA",2005.021,1,0)
TGA^Targa Image TGA^1^^1^1
"DATA",2005.021,2,0)
TIF^Scanned Document TIF^1^^1^15
"DATA",2005.021,3,0)
PAC^Xray image PAC^1^^1^3
"DATA",2005.021,4,0)
BIG^Xray big file 2000K BIG^1^^1^3
"DATA",2005.021,5,0)
ABS^Abstract file ABS^1^^1^1
"DATA",2005.021,6,0)
BW^Black and White BW^1^^1^9
"DATA",2005.021,7,0)
756^Historical 756^1^^1^3
"DATA",2005.021,8,0)
BMP^Bitmap file BMP^1^^1^1
"DATA",2005.021,9,0)
MPG^Motion Video MPG^0^magavi.bmp^0^21
"DATA",2005.021,10,0)
ASC^Text file Image extension ASC^1^magtext.bmp^0^103
"DATA",2005.021,11,0)
AVI^Motion Video AVI^1^magavi.bmp^0^21
"DATA",2005.021,12,0)
DOC^Word Document DOC^0^magdoc.bmp^0^102
"DATA",2005.021,13,0)
HTM^Web Document HTM^1^maghtml.bmp^0^101
"DATA",2005.021,14,0)
JPG^Full Color JPG^1^^1^1
"DATA",2005.021,15,0)
PDF^Adobe PDF^0^magpdf.bmp^0^104
"DATA",2005.021,16,0)
RTF^Rich Text format RTF^0^magrtf.bmp^0^105
"DATA",2005.021,17,0)
WAV^Audio file WAV^0^magwav.bmp^0^106
"DATA",2005.021,18,0)
DCM^Dicom file DCM^1^^1^100
"DATA",2005.021,19,0)
TXT^Text file import TXT^1^magtext.bmp^0^103
"DATA",2005.021,21,0)
MPEG^Motion Video MPG^0^magavi.bmp^0^21
"DATA",2005.021,22,0)
HTML^Web Document HTML^1^maghtml.bmp^0^101
"DATA",2005.021,23,0)
MP3^Motion Video MPEG-3^0^magavi.bmp^0^21
"DATA",2005.021,24,0)
MP4^Motion Video MPEG-4^0^magavi.bmp^0^21
"DATA",2005.86,1,0)
HEC COPY^0^HEC^MAGGSPP
"DATA",2005.86,1,1)
Means Test document images will be copied to the Health Eligibility Center (HEC) 
"DATA",2005.86,1,2,0)
^2005.865P^2^2
"DATA",2005.86,1,2,1,0)
46
"DATA",2005.86,1,2,2,0)
47
"FIA",2005)
IMAGE
"FIA",2005,0)
^MAG(2005,
"FIA",2005,0,0)
2005I
"FIA",2005,0,1)
y^y^p^^^^n
"FIA",2005,0,10)

"FIA",2005,0,11)

"FIA",2005,0,"RLRO")

"FIA",2005,0,"VR")
3.0^MAG
"FIA",2005,2005)
1
"FIA",2005,2005,1)

"FIA",2005,2005,30)

"FIA",2005,2005,30.1)

"FIA",2005,2005,30.2)

"FIA",2005.021)
IMAGE FILE TYPES
"FIA",2005.021,0)
^MAG(2005.021,
"FIA",2005.021,0,0)
2005.021
"FIA",2005.021,0,1)
y^y^f^^n^^y^r^n
"FIA",2005.021,0,10)

"FIA",2005.021,0,11)

"FIA",2005.021,0,"RLRO")

"FIA",2005.021,0,"VR")
3.0^MAG
"FIA",2005.021,2005.021)
0
"FIA",2005.1)
IMAGE AUDIT
"FIA",2005.1,0)
^MAG(2005.1,
"FIA",2005.1,0,0)
2005.1I
"FIA",2005.1,0,1)
y^y^p^^^^n^^n
"FIA",2005.1,0,10)

"FIA",2005.1,0,11)

"FIA",2005.1,0,"RLRO")

"FIA",2005.1,0,"VR")
3.0^MAG
"FIA",2005.1,2005.1)
1
"FIA",2005.1,2005.1,.05)

"FIA",2005.1,2005.1,.06)

"FIA",2005.1,2005.1,13)

"FIA",2005.1,2005.1,30)

"FIA",2005.1,2005.1,30.1)

"FIA",2005.1,2005.1,30.2)

"FIA",2005.1,2005.1,40)

"FIA",2005.1,2005.1,41)

"FIA",2005.1,2005.1,42)

"FIA",2005.1,2005.1,43)

"FIA",2005.1,2005.1,44)

"FIA",2005.1,2005.1,45)

"FIA",2005.1,2005.1,106)

"FIA",2005.1,2005.1,107)

"FIA",2005.1,2005.1,108)

"FIA",2005.1,2005.1,109)

"FIA",2005.1,2005.1,110)

"FIA",2005.1,2005.11)
0
"FIA",2005.1,2005.1106)
1
"FIA",2005.1,2005.1106,.01)

"FIA",2005.1,2005.1106,2)

"FIA",2005.1,2005.1106,3)

"FIA",2005.1,2005.1106,4)

"FIA",2005.1,2005.1106,5)

"FIA",2005.1,2005.1106,6)

"FIA",2005.1,2005.1106,7)

"FIA",2005.2)
NETWORK LOCATION
"FIA",2005.2,0)
^MAG(2005.2,
"FIA",2005.2,0,0)
2005.2I
"FIA",2005.2,0,1)
y^y^p^^^^n^^n
"FIA",2005.2,0,10)

"FIA",2005.2,0,11)

"FIA",2005.2,0,"RLRO")

"FIA",2005.2,0,"VR")
3.0^MAG
"FIA",2005.2,2005.2)
1
"FIA",2005.2,2005.2,6)

"FIA",2005.86)
IMAGE ACTIONS
"FIA",2005.86,0)
^MAG(2005.86,
"FIA",2005.86,0,0)
2005.86
"FIA",2005.86,0,1)
y^y^f^^n^^y^o^n
"FIA",2005.86,0,10)

"FIA",2005.86,0,11)

"FIA",2005.86,0,"RLRO")

"FIA",2005.86,0,"VR")
3.0^MAG
"FIA",2005.86,2005.86)
0
"FIA",2005.86,2005.865)
0
"FIA",2005.87)
IMAGE LIST FILTERS
"FIA",2005.87,0)
^MAG(2005.87,
"FIA",2005.87,0,0)
2005.87I
"FIA",2005.87,0,1)
y^y^f^^^^n
"FIA",2005.87,0,10)

"FIA",2005.87,0,11)

"FIA",2005.87,0,"RLRO")

"FIA",2005.87,0,"VR")
3.0^MAG
"FIA",2005.87,2005.87)
0
"FIA",2006.1)
IMAGING SITE PARAMETERS
"FIA",2006.1,0)
^MAG(2006.1,
"FIA",2006.1,0,0)
2006.1I
"FIA",2006.1,0,1)
y^y^p^^^^n^^n
"FIA",2006.1,0,10)

"FIA",2006.1,0,11)

"FIA",2006.1,0,"RLRO")

"FIA",2006.1,0,"VR")
3.0^MAG
"FIA",2006.1,2006.1)
1
"FIA",2006.1,2006.1,60)

"FIA",2006.1,2006.1,61)

"FIA",2006.1,2006.1,62)

"FIA",2006.1,2006.1,63)

"FIA",2006.1,2006.1,64)

"FIA",2006.1,2006.1,65)

"FIA",2006.1,2006.1,70)

"FIA",2006.18)
IMAGING USER PREFERENCE
"FIA",2006.18,0)
^MAG(2006.18,
"FIA",2006.18,0,0)
2006.18
"FIA",2006.18,0,1)
y^y^p^^^^n^^n
"FIA",2006.18,0,10)

"FIA",2006.18,0,11)

"FIA",2006.18,0,"RLRO")

"FIA",2006.18,0,"VR")
3.0^MAG
"FIA",2006.18,2006.18)
1
"FIA",2006.18,2006.18,137)

"FIA",2006.18,2006.18,138)

"FIA",2006.18,2006.18,140)

"FIA",2006.18,2006.18,141)

"FIA",2006.18,2006.18,143)

"FIA",2006.18,2006.18,144)

"FIA",2006.18,2006.18,146)

"FIA",2006.18,2006.18,147)

"FIA",2006.18,2006.18,148)

"FIA",2006.18,2006.18,149)

"FIA",2006.18,2006.18,150)

"FIA",2006.18,2006.18,151)

"FIA",2006.18,2006.18,152)

"FIA",2006.18,2006.18,153)

"FIA",2006.18,2006.18,154)

"FIA",2006.18,2006.18,155)

"FIA",2006.18,2006.18,156)

"FIA",2006.18,2006.18,157)

"FIA",2006.18,2006.18,158)

"FIA",2006.18,2006.18,159)

"FIA",2006.18,2006.18,163)

"FIA",2006.18,2006.18,164)

"FIA",2006.18,2006.18,165)

"FIA",2006.18,2006.18,174)

"FIA",2006.18,2006.18,175)

"FIA",2006.18,2006.18,176)

"FIA",2006.18,2006.18,177)

"FIA",2006.18,2006.18,178)

"FIA",2006.18,2006.18,179)

"FIA",2006.8)
BP WORKSTATIONS
"FIA",2006.8,0)
^MAG(2006.8,
"FIA",2006.8,0,0)
2006.8
"FIA",2006.8,0,1)
y^y^p^^^^n^^n
"FIA",2006.8,0,10)

"FIA",2006.8,0,11)

"FIA",2006.8,0,"RLRO")

"FIA",2006.8,0,"VR")
3.0^MAG
"FIA",2006.8,2006.8)
1
"FIA",2006.8,2006.8,16)

"FIA",2006.8,2006.8,17)

"FIA",2006.81)
IMAGING WINDOWS WORKSTATIONS
"FIA",2006.81,0)
^MAG(2006.81,
"FIA",2006.81,0,0)
2006.81
"FIA",2006.81,0,1)
y^y^p^^^^n^^n
"FIA",2006.81,0,10)

"FIA",2006.81,0,11)

"FIA",2006.81,0,"RLRO")

"FIA",2006.81,0,"VR")
3.0^MAG
"FIA",2006.81,2006.81)
1
"FIA",2006.81,2006.81,.04)

"FIA",2006.82)
IMAGING WINDOWS SESSIONS
"FIA",2006.82,0)
^MAG(2006.82,
"FIA",2006.82,0,0)
2006.82IAO
"FIA",2006.82,0,1)
y^y^p^^^^n^^n
"FIA",2006.82,0,10)

"FIA",2006.82,0,11)

"FIA",2006.82,0,"RLRO")

"FIA",2006.82,0,"VR")
3.0^MAG
"FIA",2006.82,2006.82)
1
"FIA",2006.82,2006.82,.04)

"FIA",2006.82,2006.82,8)

"FIA",2006.82,2006.82,9)

"FIA",2006.82,2006.82,9.2)

"FIA",2006.82,2006.82,9.4)

"FIA",2006.82,2006.82,20)

"FIA",2006.82,2006.821)
1
"FIA",2006.82,2006.821,.01)

"FIA",2006.82,2006.821,1)

"FIA",2006.82,2006.821,2)

"FIA",2006.82,2006.821,3)

"FIA",2006.82,2006.821,4)

"FIA",2006.82,2006.821,5)

"FIA",2006.82,2006.821,6)

"FIA",2006.82,2006.821,7)

"FIA",2006.82,2006.821,8)

"FIA",2006.82,2006.821,9)

"FIA",2006.82,2006.821,10)

"FIA",2006.82,2006.821,11)

"FIA",2006.82,2006.821,12)

"FIA",2006.82,2006.821,13)

"FIA",2006.95)
IMAGE ACCESS LOG
"FIA",2006.95,0)
^MAG(2006.95,
"FIA",2006.95,0,0)
2006.95I
"FIA",2006.95,0,1)
y^y^p^^^^n
"FIA",2006.95,0,10)

"FIA",2006.95,0,11)

"FIA",2006.95,0,"RLRO")

"FIA",2006.95,0,"VR")
3.0^MAG
"FIA",2006.95,2006.95)
1
"FIA",2006.95,2006.95,9)

"INI")
PRE^MAGIPOS8
"INIT")
POST^MAGIPOS8
"IX",2005.1,2005.1,"ROUTE",0)
2005.1^ROUTE^Which files were routed to where^R^^R^IR^W^2005.1106^^^^^LS
"IX",2005.1,2005.1,"ROUTE",.1,0)
^^4^4^3001107^
"IX",2005.1,2005.1,"ROUTE",.1,1,0)
This cross reference keeps track of which files were routed
"IX",2005.1,2005.1,"ROUTE",.1,2,0)
to which remote locations.
"IX",2005.1,2005.1,"ROUTE",.1,3,0)
This cross reference is automatically cleaned up when entries are
"IX",2005.1,2005.1,"ROUTE",.1,4,0)
removed from this multiple during the daily purge for the remote location.
"IX",2005.1,2005.1,"ROUTE",1)
S ^MAG(2005.1,"ROUTE",X(1),X(2),DA(1),DA)=""
"IX",2005.1,2005.1,"ROUTE",2)
K ^MAG(2005.1,"ROUTE",X(1),X(2),DA(1),DA)
"IX",2005.1,2005.1,"ROUTE",2.5)
K ^MAG(2005.1,"ROUTE")
"IX",2005.1,2005.1,"ROUTE",11.1,0)
^.114IA^2^2
"IX",2005.1,2005.1,"ROUTE",11.1,1,0)
1^F^2005.1106^2^^1^F
"IX",2005.1,2005.1,"ROUTE",11.1,1,3)

"IX",2005.1,2005.1,"ROUTE",11.1,2,0)
2^F^2005.1106^.01^^2^F
"IX",2005.1,2005.1,"ROUTE",11.1,2,3)

"KRN",19,20680,-1)
2^3
"KRN",19,20680,0)
MAG SYS MENU^Imaging System Manager Menu^^M^126^MAG SYSTEM^^^^^^454
"KRN",19,20680,10,0)
^19.01IP^14^10
"KRN",19,20680,10,13,0)
22067
"KRN",19,20680,10,13,"^")
MAG SYS-DELETE IMAGEGROUP
"KRN",19,20680,"U")
IMAGING SYSTEM MANAGER MENU
"KRN",19,20686,-1)
0^1
"KRN",19,20686,0)
MAG WINDOWS^All MAG* RPC's ^^B^^^^^^^^
"KRN",19,20686,99.1)
58420,21644
"KRN",19,20686,"MAGJ CACHELOCATION",0)
^19.05P^12^12
"KRN",19,20686,"MAGJ CACHELOCATION",1,0)
567
"KRN",19,20686,"MAGJ CACHELOCATION",2,0)
MAGJ CACHELOCATION
"KRN",19,20686,"MAGJ CACHELOCATION",3,0)
MAGJ CACHELOCATION
"KRN",19,20686,"MAGJ CACHELOCATION",4,0)
MAGJ CACHELOCATION
"KRN",19,20686,"MAGJ CACHELOCATION",5,0)
567^S X=NULL
"KRN",19,20686,"MAGJ CACHELOCATION",5,1)
S X=NULL
"KRN",19,20686,"MAGJ CACHELOCATION",6,0)
567^S X=@
"KRN",19,20686,"MAGJ CACHELOCATION",6,1)
S X=@
"KRN",19,20686,"MAGJ CACHELOCATION",7,0)
567^S X=@
"KRN",19,20686,"MAGJ CACHELOCATION",7,1)
S X=@
"KRN",19,20686,"MAGJ CACHELOCATION",8,0)
567
"KRN",19,20686,"MAGJ CACHELOCATION",9,0)
625
"KRN",19,20686,"MAGJ CACHELOCATION",10,0)
626
"KRN",19,20686,"MAGJ CACHELOCATION",11,0)
626
"KRN",19,20686,"MAGJ CACHELOCATION",12,0)
626
"KRN",19,20686,"MAGJ PTRADEXAMS",0)
^19.05P^11^11
"KRN",19,20686,"MAGJ PTRADEXAMS",1,0)
423
"KRN",19,20686,"MAGJ PTRADEXAMS",2,0)
MAGJ PTRADEXAMS
"KRN",19,20686,"MAGJ PTRADEXAMS",3,0)
MAGJ PTRADEXAMS
"KRN",19,20686,"MAGJ PTRADEXAMS",4,0)
MAGJ PTRADEXAMS
"KRN",19,20686,"MAGJ PTRADEXAMS",5,0)
423^S X=NULL
"KRN",19,20686,"MAGJ PTRADEXAMS",5,1)
S X=NULL
"KRN",19,20686,"MAGJ PTRADEXAMS",6,0)
423^S X=@
"KRN",19,20686,"MAGJ PTRADEXAMS",6,1)
S X=@
"KRN",19,20686,"MAGJ PTRADEXAMS",7,0)
423^S X=@
"KRN",19,20686,"MAGJ PTRADEXAMS",7,1)
S X=@
"KRN",19,20686,"MAGJ PTRADEXAMS",8,0)
423
"KRN",19,20686,"MAGJ PTRADEXAMS",9,0)
625
"KRN",19,20686,"MAGJ PTRADEXAMS",10,0)
626
"KRN",19,20686,"MAGJ PTRADEXAMS",11,0)
626
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",0)
^19.05P^11^11
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",1,0)
422
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",2,0)
MAGJ RADACTIVEEXAMS
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",3,0)
MAGJ RADACTIVEEXAMS
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",4,0)
MAGJ RADACTIVEEXAMS
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",5,0)
422^S X=NULL
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",5,1)
S X=NULL
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",6,0)
422^S X=@
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",6,1)
S X=@
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",7,0)
422^S X=@
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",7,1)
S X=@
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",8,0)
422
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",9,0)
625
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",10,0)
626
"KRN",19,20686,"MAGJ RADACTIVEEXAMS",11,0)
626
"KRN",19,20686,"MAGJ RADCASEIMAGES",0)
^19.05P^11^11
"KRN",19,20686,"MAGJ RADCASEIMAGES",1,0)
427
"KRN",19,20686,"MAGJ RADCASEIMAGES",2,0)
MAGJ RADCASEIMAGES
"KRN",19,20686,"MAGJ RADCASEIMAGES",3,0)
MAGJ RADCASEIMAGES
"KRN",19,20686,"MAGJ RADCASEIMAGES",4,0)
MAGJ RADCASEIMAGES
"KRN",19,20686,"MAGJ RADCASEIMAGES",5,0)
427^S X=NULL
"KRN",19,20686,"MAGJ RADCASEIMAGES",5,1)
S X=NULL
"KRN",19,20686,"MAGJ RADCASEIMAGES",6,0)
427^S X=@
"KRN",19,20686,"MAGJ RADCASEIMAGES",6,1)
S X=@
"KRN",19,20686,"MAGJ RADCASEIMAGES",7,0)
427^S X=@
"KRN",19,20686,"MAGJ RADCASEIMAGES",7,1)
S X=@
"KRN",19,20686,"MAGJ RADCASEIMAGES",8,0)
427
"KRN",19,20686,"MAGJ RADCASEIMAGES",9,0)
625
"KRN",19,20686,"MAGJ RADCASEIMAGES",10,0)
626
"KRN",19,20686,"MAGJ RADCASEIMAGES",11,0)
626
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",0)
^19.05P^11^11
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",1,0)
455
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",2,0)
MAGJ RADSTATUSUPDATE
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",3,0)
MAGJ RADSTATUSUPDATE
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",4,0)
MAGJ RADSTATUSUPDATE
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",5,0)
455^S X=NULL
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",5,1)
S X=NULL
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",6,0)
455^S X=@
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",6,1)
S X=@
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",7,0)
455^S X=@
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",7,1)
S X=@
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",8,0)
455
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",9,0)
625
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",10,0)
626
"KRN",19,20686,"MAGJ RADSTATUSUPDATE",11,0)
626
"KRN",19,20686,"RPC",0)
^19.05P^200^200
"KRN",19,20686,"RPC",1,0)
MAG ABSJB
"KRN",19,20686,"RPC",2,0)
MAG CONSULT MSG CREATE
"KRN",19,20686,"RPC",4,0)
MAGGADDIMAGE
"KRN",19,20686,"RPC",5,0)
MAGGDESCCAT
"KRN",19,20686,"RPC",6,0)
MAGGDGRPD
"KRN",19,20686,"RPC",7,0)
MAGGHS
"KRN",19,20686,"RPC",8,0)
MAGGHSLIST
"KRN",19,20686,"RPC",10,0)
MAGGLAB FILE
"KRN",19,20686,"RPC",11,0)
MAGGLAB MICRO
"KRN",19,20686,"RPC",12,0)
MAGGLAB SECT
"KRN",19,20686,"RPC",13,0)
MAGGLAB STAIN
"KRN",19,20686,"RPC",14,0)
MAGGLAB START
"KRN",19,20686,"RPC",15,0)
MAGGLISTPROC
"KRN",19,20686,"RPC",22,0)
MAGGPATPROC
"KRN",19,20686,"RPC",25,0)
MAGGPROCIMAGE
"KRN",19,20686,"RPC",26,0)
MAGGRADIMAGE
"KRN",19,20686,"RPC",27,0)
MAGGRADLIST
"KRN",19,20686,"RPC",28,0)
MAGGRADPTR
"KRN",19,20686,"RPC",29,0)
MAGGRADREPORT
"KRN",19,20686,"RPC",30,0)
MAGGRPT
"KRN",19,20686,"RPC",31,0)
MAGGUPREFGET
"KRN",19,20686,"RPC",32,0)
MAGGUPREFSAVE
"KRN",19,20686,"RPC",40,0)
MAGGSUR GET
"KRN",19,20686,"RPC",41,0)
MAGGSUR FILE
"KRN",19,20686,"RPC",42,0)
MAGG DTTM
"KRN",19,20686,"RPC",43,0)
MAGGACTION LOG
"KRN",19,20686,"RPC",44,0)
MAGGUSER2
"KRN",19,20686,"RPC",45,0)
MAGG VERIFY ESIG
"KRN",19,20686,"RPC",46,0)
MAGG WRKS UPDATES
"KRN",19,20686,"RPC",47,0)
MAGG LOGOFF
"KRN",19,20686,"RPC",48,0)
MAGGUSERKEYS
"KRN",19,20686,"RPC",50,0)
MAGQ ABP
"KRN",19,20686,"RPC",51,0)
MAGQ ALL SERVER
"KRN",19,20686,"RPC",52,0)
MAGQ FS UPDATE
"KRN",19,20686,"RPC",54,0)
MAGQ GET
"KRN",19,20686,"RPC",55,0)
MAGQ QUD
"KRN",19,20686,"RPC",56,0)
MAGQ REQ
"KRN",19,20686,"RPC",62,0)
MAGG MED NEW
"KRN",19,20686,"RPC",63,0)
MAGG DEV SHOW NODE
"KRN",19,20686,"RPC",67,0)
MAGG IMAGE DELETE
"KRN",19,20686,"RPC",68,0)
MAGG IMAGE INFO
"KRN",19,20686,"RPC",69,0)
MAGG SYS WRKS DISPLAY
"KRN",19,20686,"RPC",70,0)
MAGG MED DICOMID
"KRN",19,20686,"RPC",72,0)
MAGG SYS WRKS SESSIONS
"KRN",19,20686,"RPC",73,0)
MAGG SYS SESSION DISPLAY
"KRN",19,20686,"RPC",74,0)
MAG3 LOGACTION
"KRN",19,20686,"RPC",75,0)
MAGG QUE IMAGE
"KRN",19,20686,"RPC",76,0)
MAGG QUE IMAGE GROUP
"KRN",19,20686,"RPC",77,0)
MAGG QUE PATIENT
"KRN",19,20686,"RPC",78,0)
MAGG QUE LIST
"KRN",19,20686,"RPC",79,0)
MAGG OFFLINE IMAGE ACCESSED
"KRN",19,20686,"RPC",80,0)
MAGQ FS CHNGE
"KRN",19,20686,"RPC",81,0)
MAGQ FTYPE
"KRN",19,20686,"RPC",87,0)
MAGQBP ALL SHARES
"KRN",19,20686,"RPC",88,0)
MAGQBP FREF
"KRN",19,20686,"RPC",89,0)
MAGQBP PARM
"KRN",19,20686,"RPC",90,0)
MAGQBP UPDATE
"KRN",19,20686,"RPC",92,0)
MAGG SYS GLOBAL NODE
"KRN",19,20686,"RPC",93,0)
MAGG CPRS RAD EXAM
"KRN",19,20686,"RPC",94,0)
MAGG GROUP IMAGES
"KRN",19,20686,"RPC",96,0)
MAGG PAT IMAGES
"KRN",19,20686,"RPC",97,0)
MAGQ ELOGR
"KRN",19,20686,"RPC",98,0)
MAGQ JBQUE
"KRN",19,20686,"RPC",99,0)
MAGG PAT EACH IMAGE
"KRN",19,20686,"RPC",101,0)
MAGQ CUPDTE
"KRN",19,20686,"RPC",102,0)
MAGQB QSL
"KRN",19,20686,"RPC",103,0)
MAGQB QUEDEL
"KRN",19,20686,"RPC",104,0)
MAGQ JH RPT
"KRN",19,20686,"RPC",105,0)
MAGG GET TIMEOUT
"KRN",19,20686,"RPC",106,0)
MAGQB PURNUL
"KRN",19,20686,"RPC",108,0)
DDR FILER
"KRN",19,20686,"RPC",109,0)
DDR FINDER
"KRN",19,20686,"RPC",110,0)
DDR GET DD HELP
"KRN",19,20686,"RPC",111,0)
DDR GETS ENTRY DATA
"KRN",19,20686,"RPC",112,0)
DDR LISTER
"KRN",19,20686,"RPC",113,0)
DDR VALIDATOR
"KRN",19,20686,"RPC",114,0)
DDR FIND1
"KRN",19,20686,"RPC",115,0)
MAGQ JBS
"KRN",19,20686,"RPC",117,0)
MAGQ JBSCN
"KRN",19,20686,"RPC",118,0)
MAGQ SHARES
"KRN",19,20686,"RPC",130,0)
MAGQ VCUD
"KRN",19,20686,"RPC",131,0)
MAGQ JPUD
"KRN",19,20686,"RPC",132,0)
MAG3 CPRS TIU NOTE
"KRN",19,20686,"RPC",133,0)
MAG3 LOOKUP ANY
"KRN",19,20686,"RPC",134,0)
MAG3 TIU DATA FROM DA
"KRN",19,20686,"RPC",135,0)
MAG3 TIU IMAGE
"KRN",19,20686,"RPC",136,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,20686,"RPC",137,0)
TIU SUMMARIES
"KRN",19,20686,"RPC",138,0)
TIU GET RECORD TEXT
"KRN",19,20686,"RPC",139,0)
TIU GET PN TITLES
"KRN",19,20686,"RPC",140,0)
TIU CREATE RECORD
"KRN",19,20686,"RPC",141,0)
TIU SIGN RECORD
"KRN",19,20686,"RPC",142,0)
MAGQ DIK
"KRN",19,20686,"RPC",143,0)
MAGQ ISN
"KRN",19,20686,"RPC",144,0)
MAGG PAT FIND
"KRN",19,20686,"RPC",145,0)
MAGG PAT BS5 CHECK
"KRN",19,20686,"RPC",146,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,20686,"RPC",147,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,20686,"RPC",148,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,20686,"RPC",149,0)
MAGG PAT INFO
"KRN",19,20686,"RPC",150,0)
MAG EKG ONLINE
"KRN",19,20686,"RPC",151,0)
MAG GET NETLOC
"KRN",19,20686,"RPC",152,0)
MAGG PAT PHOTOS
"KRN",19,20686,"RPC",153,0)
MAGG LOG ERROR TEXT
"KRN",19,20686,"RPC",154,0)
MAGQ SYSTEM
"KRN",19,20686,"RPC",155,0)
MAGG DEV FIELD VALUES
"KRN",19,20686,"RPC",167,0)
MAG4 POST PROCESSING
"KRN",19,20686,"RPC",168,0)
MAG4 VERSION CHECK
"KRN",19,20686,"RPC",169,0)
MAGQ DFNIQ
"KRN",19,20686,"RPC",170,0)
MAG4 VALIDATE DATA
"KRN",19,20686,"RPC",171,0)
MAG4 REMOTE IMPORT
"KRN",19,20686,"RPC",172,0)
MAG4 DATA FROM IMPORT QUEUE
"KRN",19,20686,"RPC",173,0)
MAG4 ADD IMAGE
"KRN",19,20686,"RPC",174,0)
MAG4 STATUS CALLBACK
"KRN",19,20686,"RPC",175,0)
MAG4 CP CONSULT TO TIUDA
"KRN",19,20686,"RPC",176,0)
MAG4 CP GET REQUESTS
"KRN",19,20686,"RPC",177,0)
MAG4 CP GET VISITS
"KRN",19,20686,"RPC",178,0)
MAG4 GET SUPPORTED EXTENSIONS
"KRN",19,20686,"RPC",179,0)
MAG4 CP UPDATE CONSULT
"KRN",19,20686,"RPC",180,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,20686,"RPC",181,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,20686,"RPC",182,0)
MAG DIRHASH
"KRN",19,20686,"RPC",183,0)
MAG GET ENV
"KRN",19,20686,"RPC",184,0)
MAG4 CT PRESETS GET
"KRN",19,20686,"RPC",185,0)
MAG4 CT PRESETS SAVE
"KRN",19,20686,"RPC",186,0)
MAG4 FILTER DELETE
"KRN",19,20686,"RPC",187,0)
MAG4 FILTER DETAILS
"KRN",19,20686,"RPC",188,0)
MAG4 FILTER GET LIST
"KRN",19,20686,"RPC",189,0)
MAG4 FILTER SAVE
"KRN",19,20686,"RPC",190,0)
MAG4 GET FILE FORMAT INFO
"KRN",19,20686,"RPC",191,0)
MAG4 GET IMAGE INFO
"KRN",19,20686,"RPC",192,0)
MAG4 INDEX GET EVENT
"KRN",19,20686,"RPC",193,0)
MAG4 INDEX GET SPECIALTY
"KRN",19,20686,"RPC",194,0)
MAG4 INDEX GET TYPE
"KRN",19,20686,"RPC",195,0)
MAG4 PAT GET IMAGES
"KRN",19,20686,"RPC",196,0)
MAG4 POST PROCESS ACTIONS
"KRN",19,20686,"RPC",197,0)
MAGG INSTALL
"KRN",19,20686,"RPC",198,0)
MAGG CONS
"KRN",19,20686,"RPC",199,0)
MAGG PLACE
"KRN",19,20686,"RPC",200,0)
MAG FLD ATT
"KRN",19,20686,"U")
ALL MAG* RPC'S 
"KRN",19,22067,-1)
0^2
"KRN",19,22067,0)
MAG SYS-DELETE IMAGEGROUP^Delete Image Group^^R^^^^^^^^
"KRN",19,22067,1,0)
^19.06^2^2^3020919^^^^
"KRN",19,22067,1,1,0)
This option allows a user with the system manager key to delete images
"KRN",19,22067,1,2,0)
or image groups.
"KRN",19,22067,25)
IMGDEL^MAGSDLGR
"KRN",19,22067,"U")
DELETE IMAGE GROUP
"KRN",19,22073,-1)
1^4
"KRN",19,22073,0)
MAG SYS-DEFINE SITE PARAMETERS
"KRN",19,22074,-1)
1^6
"KRN",19,22074,0)
MAG SYS-ENTER/EDIT WORKSTATION
"KRN",19,22075,-1)
1^7
"KRN",19,22075,0)
MAG SYS-ENTER/EDIT NETWORK LOC
"KRN",19,22076,-1)
1^8
"KRN",19,22076,0)
MAG SYS-EDIT PURGE PARAMETERS
"KRN",19.1,760,-1)
0^3
"KRN",19.1,760,0)
MAGCAP ADMIN^Administrative Documents
"KRN",19.1,760,1,0)
^^1^1^3011227^
"KRN",19.1,760,1,1,0)
Allows a user to capture Administrative Documents to the Imaging package.
"KRN",19.1,789,-1)
0^1
"KRN",19.1,789,0)
MAGDISP CLIN
"KRN",19.1,789,1,0)
^^1^1^3030625^
"KRN",19.1,789,1,1,0)
Allows Imaging User to View Clinical Images/Documents
"KRN",19.1,790,-1)
0^2
"KRN",19.1,790,0)
MAG RAD SETTINGS^Imaging CT Presets key
"KRN",19.1,790,1,0)
^^1^1^3030716^
"KRN",19.1,790,1,1,0)
This key allows user to Edit the CT Presets in the Imaging workstation Radiology Viewer.
"KRN",8994,1245,-1)
0^17
"KRN",8994,1245,0)
MAG4 VERSION CHECK^CHKVER^MAGGTU4^2^R
"KRN",8994,1245,1,0)
^8994.01^3^3^3030801^^
"KRN",8994,1245,1,1,0)
Checks the version of the Delphi Application 
"KRN",8994,1245,1,2,0)
Depending on version of VistA Imaging KIDs install, we
"KRN",8994,1245,1,3,0)
could force the Delphi APP to HALT.
"KRN",8994,1245,2,0)
^8994.02A^1^1
"KRN",8994,1245,2,1,0)
MAGVER^1^30^1^1
"KRN",8994,1245,2,1,1,0)
^8994.021^1^1^3030801^^
"KRN",8994,1245,2,1,1,1,0)
This is the version of the Delphi Application.
"KRN",8994,1245,2,"B","MAGVER",1)

"KRN",8994,1245,2,"PARAMSEQ",1,1)

"KRN",8994,1245,3,0)
^8994.03^8^8^3030801^^
"KRN",8994,1245,3,1,0)
Return array can have multiple lines.
"KRN",8994,1245,3,2,0)
If multiple lines are returned, they are displayed
"KRN",8994,1245,3,3,0)
in a dialog box.
"KRN",8994,1245,3,4,0)
Regardless of the 
"KRN",8994,1245,3,5,0)
[A
"KRN",8994,1245,3,6,0)
the 0 node is of the form 1^continue  or 2^message
"KRN",8994,1245,3,7,0)
a code of 2 in the first piece will halt the Delphi App.
"KRN",8994,1245,3,8,0)
The message (if multiple lines exist) will always be displayed first.
"KRN",8994,1283,-1)
0^16
"KRN",8994,1283,0)
MAG4 GET SUPPORTED EXTENSIONS^LIST^MAGGSFT^2^R
"KRN",8994,1283,1,0)
^8994.01^1^1^3011010^^^
"KRN",8994,1283,1,1,0)
Returns a list of supported file extensions, used in Imaging.
"KRN",8994,1283,3,0)
^8994.03^1^1^3011010^^^
"KRN",8994,1283,3,1,0)
list of supported file extensions, used in Imaging.
"KRN",8994,1285,-1)
0^5
"KRN",8994,1285,0)
MAG4 POST PROCESS ACTIONS^POSTACT^MAGGSPP^2^R
"KRN",8994,1285,1,0)
^8994.01^5^5^3020806^^^^
"KRN",8994,1285,1,1,0)
 This is call to perform any post processing action required on
"KRN",8994,1285,1,2,0)
  a newly saved image of this type.  post processing (for now) is
"KRN",8994,1285,1,3,0)
  determined by the IMAGE INDEX FOR TYPES file.  If this image
"KRN",8994,1285,1,4,0)
  points to an entry in that file that has Action turned ON, then
"KRN",8994,1285,1,5,0)
  the TAG^ROUTINE will be called with the Image IEN.
"KRN",8994,1285,2,0)
^8994.02A^1^1
"KRN",8994,1285,2,1,0)
MAGIEN^1^30^1^1
"KRN",8994,1285,2,1,1,0)
^8994.021^1^1^3020806^^^
"KRN",8994,1285,2,1,1,1,0)
Internal entry number in the Image File (^MAG(2005))
"KRN",8994,1285,2,"B","MAGIEN",1)

"KRN",8994,1285,2,"PARAMSEQ",1,1)

"KRN",8994,1285,3,0)
^8994.03^2^2^3020806^^^
"KRN",8994,1285,3,1,0)
1^Success
"KRN",8994,1285,3,2,0)
0^Error message
"KRN",8994,1286,-1)
0^2
"KRN",8994,1286,0)
MAG4 INDEX GET TYPE^IGT^MAGSIXGT^2^R^0^^0^3
"KRN",8994,1286,1,0)
^8994.01^10^10^3021121^^^^
"KRN",8994,1286,1,1,0)
This Remote Procedure Call is used to filter out those
"KRN",8994,1286,1,2,0)
image types that belong to a given image category (Class).
"KRN",8994,1286,1,3,0)
 
"KRN",8994,1286,1,4,0)
When images are displayed, it is desirable to limit the
"KRN",8994,1286,1,5,0)
list of presented images to only those that are likely
"KRN",8994,1286,1,6,0)
to be relevant in the current context.
"KRN",8994,1286,1,7,0)
 
"KRN",8994,1286,1,8,0)
This procedure accepts an "image category" (either an IEN
"KRN",8994,1286,1,9,0)
or the name of a category) and returns all "image types"
"KRN",8994,1286,1,10,0)
that belong to that category.
"KRN",8994,1286,2,0)
^8994.02A^2^2
"KRN",8994,1286,2,1,0)
CATEGORY^1^50^1^1
"KRN",8994,1286,2,1,1,0)
^8994.021^3^3^3020416^^^^
"KRN",8994,1286,2,1,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1286,2,1,1,2,0)
identifies an "image category".
"KRN",8994,1286,2,1,1,3,0)
Image categories are defined in file 2005.82.
"KRN",8994,1286,2,2,0)
IGN^1^3^0^2
"KRN",8994,1286,2,2,1,0)
^^3^3^3021121^
"KRN",8994,1286,2,2,1,1,0)
This parameter is sent if the calling application wants to
"KRN",8994,1286,2,2,1,2,0)
ignore the Value of the STATUS field.
"KRN",8994,1286,2,2,1,3,0)
STATUS Field is either  "I" Inactive or "A" (or null) for Active
"KRN",8994,1286,2,"B","CATEGORY",1)

"KRN",8994,1286,2,"B","IGN",2)

"KRN",8994,1286,2,"PARAMSEQ",1,1)

"KRN",8994,1286,2,"PARAMSEQ",2,2)

"KRN",8994,1286,3,0)
^8994.03^10^10^3021121^^^^
"KRN",8994,1286,3,1,0)
The output of this procedure is an array.
"KRN",8994,1286,3,2,0)
 
"KRN",8994,1286,3,3,0)
This procedure may report the following errors:
"KRN",8994,1286,3,4,0)
  -1: No Category Provided
"KRN",8994,1286,3,5,0)
  -2: Invalid Category: "[category]".
"KRN",8994,1286,3,6,0)
  -3: No Types Found for "[category]".
"KRN",8994,1286,3,7,0)
 
"KRN",8994,1286,3,8,0)
The structure of the output array is:
"KRN",8994,1286,3,9,0)
  OUT(0) = "0^OK" or one of the above error messages
"KRN",8994,1286,3,10,0)
  OUT(i) = name of image type ^ ien of image type
"KRN",8994,1287,-1)
0^1
"KRN",8994,1287,0)
MAG4 INDEX GET EVENT^IGE^MAGSIXGT^2^R^0^^0^3
"KRN",8994,1287,1,0)
^8994.01^10^10^3021121^^^^
"KRN",8994,1287,1,1,0)
This Remote Procedure Call is used to filter out those
"KRN",8994,1287,1,2,0)
events that may happen for a given image category. (Class)
"KRN",8994,1287,1,3,0)
 
"KRN",8994,1287,1,4,0)
When images are displayed, it is desirable to limit the
"KRN",8994,1287,1,5,0)
list of presented images to only those that are likely
"KRN",8994,1287,1,6,0)
to be relevant in the current context.
"KRN",8994,1287,1,7,0)
 
"KRN",8994,1287,1,8,0)
This procedure accepts an "image category" (either an IEN
"KRN",8994,1287,1,9,0)
or the name of a category) and returns all "image events"
"KRN",8994,1287,1,10,0)
that belong to that category.
"KRN",8994,1287,2,0)
^8994.02A^2^2
"KRN",8994,1287,2,1,0)
CATEGORY^1^50^0^1
"KRN",8994,1287,2,1,1,0)
^8994.021^3^3^3020429^^^^
"KRN",8994,1287,2,1,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1287,2,1,1,2,0)
identifies an "image category".
"KRN",8994,1287,2,1,1,3,0)
Image categories are defined in file 2005.82.
"KRN",8994,1287,2,2,0)
IGN^1^3^0^2
"KRN",8994,1287,2,2,1,0)
^^3^3^3021121^
"KRN",8994,1287,2,2,1,1,0)
This parameter is sent if the calling application wants to
"KRN",8994,1287,2,2,1,2,0)
ignore the Value of the STATUS field.
"KRN",8994,1287,2,2,1,3,0)
STATUS Field is either  "I" Inactive or "A" (or null) for Active
"KRN",8994,1287,2,"B","CATEGORY",1)

"KRN",8994,1287,2,"B","IGN",2)

"KRN",8994,1287,2,"PARAMSEQ",1,1)

"KRN",8994,1287,2,"PARAMSEQ",2,2)

"KRN",8994,1287,3,0)
^8994.03^10^10^3021121^^^^
"KRN",8994,1287,3,1,0)
The output of this procedure is an array.
"KRN",8994,1287,3,2,0)
 
"KRN",8994,1287,3,3,0)
This procedure may report the following errors:
"KRN",8994,1287,3,4,0)
  -1: No Category Provided
"KRN",8994,1287,3,5,0)
  -2: Invalid Category: "[category]".
"KRN",8994,1287,3,6,0)
  -3: No Events Found for "[category]".
"KRN",8994,1287,3,7,0)
 
"KRN",8994,1287,3,8,0)
The structure of the output array is:
"KRN",8994,1287,3,9,0)
  OUT(0) = "0^OK" or one of the above error messages
"KRN",8994,1287,3,10,0)
  OUT(i) = name of event ^ ien of event ^ abbreviation for event
"KRN",8994,1288,-1)
0^3
"KRN",8994,1288,0)
MAG4 INDEX GET SPECIALTY^IGS^MAGSIXGT^2^R^0^^0^3
"KRN",8994,1288,1,0)
^8994.01^10^10^3021121^^^^
"KRN",8994,1288,1,1,0)
This Remote Procedure Call is used to filter out those
"KRN",8994,1288,1,2,0)
specialties for which a given image category (Class) may be relevant.
"KRN",8994,1288,1,3,0)
 
"KRN",8994,1288,1,4,0)
When images are displayed, it is desirable to limit the
"KRN",8994,1288,1,5,0)
list of presented images to only those that are likely
"KRN",8994,1288,1,6,0)
to be relevant in the current context.
"KRN",8994,1288,1,7,0)
 
"KRN",8994,1288,1,8,0)
This procedure accepts an "image category" (either an IEN
"KRN",8994,1288,1,9,0)
or the name of a category) and returns all "(sub)specialties"
"KRN",8994,1288,1,10,0)
that generate images in that category.
"KRN",8994,1288,2,0)
^8994.02A^3^3
"KRN",8994,1288,2,1,0)
CATEGORY^1^50^0^1
"KRN",8994,1288,2,1,1,0)
^8994.021^3^3^3020422^^
"KRN",8994,1288,2,1,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1288,2,1,1,2,0)
identifies an "image category".
"KRN",8994,1288,2,1,1,3,0)
Image categories are defined in file 2005.82.
"KRN",8994,1288,2,2,0)
EVENT^1^50^0^2
"KRN",8994,1288,2,2,1,0)
^8994.021^3^3^3020422^^^^
"KRN",8994,1288,2,2,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1288,2,2,1,2,0)
identifies an "image event".
"KRN",8994,1288,2,2,1,3,0)
Image Events are defined in file 2005.85.
"KRN",8994,1288,2,3,0)
IGN^1^3^0^3
"KRN",8994,1288,2,3,1,0)
^^3^3^3021121^
"KRN",8994,1288,2,3,1,1,0)
This parameter is sent if the calling application wants to
"KRN",8994,1288,2,3,1,2,0)
ignore the Value of the STATUS field.
"KRN",8994,1288,2,3,1,3,0)
STATUS Field is either  "I" Inactive or "A" (or null) for Active
"KRN",8994,1288,2,"B","CATEGORY",1)

"KRN",8994,1288,2,"B","EVENT",2)

"KRN",8994,1288,2,"B","IGN",3)

"KRN",8994,1288,2,"PARAMSEQ",1,1)

"KRN",8994,1288,2,"PARAMSEQ",2,2)

"KRN",8994,1288,2,"PARAMSEQ",3,3)

"KRN",8994,1288,3,0)
^8994.03^12^12^3021121^^^^
"KRN",8994,1288,3,1,0)
The output of this procedure is an array.
"KRN",8994,1288,3,2,0)
 
"KRN",8994,1288,3,3,0)
This procedure may report the following errors:
"KRN",8994,1288,3,4,0)
  -1: No Category Provided
"KRN",8994,1288,3,5,0)
  -2: Invalid Category: "[category]".
"KRN",8994,1288,3,6,0)
  -3: No Event Provided
"KRN",8994,1288,3,7,0)
  -4: Invalid Event: "[event]".
"KRN",8994,1288,3,8,0)
  -5: No Specialties Found for "[category]" and "[event]".
"KRN",8994,1288,3,9,0)
 
"KRN",8994,1288,3,10,0)
The structure of the output array is:
"KRN",8994,1288,3,11,0)
  OUT(0) = "0^OK" or one of the above error messages
"KRN",8994,1288,3,12,0)
  OUT(i) = name of specialty ^ ien of specialty
"KRN",8994,1289,-1)
0^4
"KRN",8994,1289,0)
MAG4 PAT GET IMAGES^PGI^MAGSIXG1^2^R^0^^0^3
"KRN",8994,1289,1,0)
^8994.01^12^12^3020822^^^^
"KRN",8994,1289,1,1,0)
This Remote Procedure Call is used to filter out those
"KRN",8994,1289,1,2,0)
specialty for which a given image category may be relevant.
"KRN",8994,1289,1,3,0)
 
"KRN",8994,1289,1,4,0)
When images are displayed, it is desirable to limit the
"KRN",8994,1289,1,5,0)
list of presented images to only those that are likely
"KRN",8994,1289,1,6,0)
to be relevant in the current context.
"KRN",8994,1289,1,7,0)
 
"KRN",8994,1289,1,8,0)
This procedure accepts a patient-IEN (DFN) and optionally
"KRN",8994,1289,1,9,0)
also a category, type, event and specialty.
"KRN",8994,1289,1,10,0)
 
"KRN",8994,1289,1,11,0)
This procedure will return a list of all images for that
"KRN",8994,1289,1,12,0)
patient that match the specified other input parameters.
"KRN",8994,1289,2,0)
^8994.02A^5^5
"KRN",8994,1289,2,1,0)
DFN^1^15^1^1
"KRN",8994,1289,2,1,1,0)
^^2^2^3020416^
"KRN",8994,1289,2,1,1,1,0)
The value of this parameter is the IEN in the Patient File (#2)
"KRN",8994,1289,2,1,1,2,0)
of a patient.
"KRN",8994,1289,2,2,0)
CATEGORY^1^50^0^2
"KRN",8994,1289,2,2,1,0)
^^3^3^3020416^
"KRN",8994,1289,2,2,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1289,2,2,1,2,0)
identifies an "image category".
"KRN",8994,1289,2,2,1,3,0)
Image categories are defined in file 2005.82.
"KRN",8994,1289,2,3,0)
TYPE^1^50^0^3
"KRN",8994,1289,2,3,1,0)
^8994.021^3^3^3020416^^
"KRN",8994,1289,2,3,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1289,2,3,1,2,0)
identifies an "image type".
"KRN",8994,1289,2,3,1,3,0)
Image types are defined in file 2005.83.
"KRN",8994,1289,2,4,0)
EVENT^1^50^0^4
"KRN",8994,1289,2,4,1,0)
^^3^3^3020416^
"KRN",8994,1289,2,4,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1289,2,4,1,2,0)
identifies an "image event".
"KRN",8994,1289,2,4,1,3,0)
Image events are defined in file 2005.85.
"KRN",8994,1289,2,5,0)
SPECIALTY^1^50^0^5
"KRN",8994,1289,2,5,1,0)
^8994.021^3^3^3020822^^^^
"KRN",8994,1289,2,5,1,1,0)
The value of this parameter is either an IEN or a string that
"KRN",8994,1289,2,5,1,2,0)
identifies an "image specialty or subspecialty".
"KRN",8994,1289,2,5,1,3,0)
Image specialties are defined in file 2005.84.
"KRN",8994,1289,2,"B","CATEGORY",2)

"KRN",8994,1289,2,"B","DFN",1)

"KRN",8994,1289,2,"B","EVENT",4)

"KRN",8994,1289,2,"B","SPECIALTY",5)

"KRN",8994,1289,2,"B","TYPE",3)

"KRN",8994,1289,2,"PARAMSEQ",1,1)

"KRN",8994,1289,2,"PARAMSEQ",2,2)

"KRN",8994,1289,2,"PARAMSEQ",3,3)

"KRN",8994,1289,2,"PARAMSEQ",4,4)

"KRN",8994,1289,2,"PARAMSEQ",5,5)

"KRN",8994,1289,3,0)
^8994.03^37^37^3020416^^^^
"KRN",8994,1289,3,1,0)
The output of this procedure is an array.
"KRN",8994,1289,3,2,0)
 
"KRN",8994,1289,3,3,0)
This procedure may report the following errors:
"KRN",8994,1289,3,4,0)
  -1: Invalid Category: "[category]".
"KRN",8994,1289,3,5,0)
  -2: Invalid Event: "[event]".
"KRN",8994,1289,3,6,0)
  -3: Invalid Specialty: "[specialty]".
"KRN",8994,1289,3,7,0)
  -4: Invalid Type: "[type]".
"KRN",8994,1289,3,8,0)
  -6: No images found for "[dfn]", "[category]", "[type]", "[event]", "[specialty]".
"KRN",8994,1289,3,9,0)
 
"KRN",8994,1289,3,10,0)
The structure of the output array is:
"KRN",8994,1289,3,11,0)
  OUT(0) = "0^OK" or one of the above error messages
"KRN",8994,1289,3,12,0)
  OUT(2) = list of headers
"KRN",8994,1289,3,13,0)
  OUT(i) = list of image information fields
"KRN",8994,1289,3,14,0)
 
"KRN",8994,1289,3,15,0)
The list of headers consists of the following "^" separated texts:
"KRN",8994,1289,3,16,0)
   1: Proc DT~S1
"KRN",8994,1289,3,17,0)
   2: Procedure
"KRN",8994,1289,3,18,0)
   3: Ct~S2
"KRN",8994,1289,3,19,0)
   4: Short Desc
"KRN",8994,1289,3,20,0)
   5: Category
"KRN",8994,1289,3,21,0)
   6: Type
"KRN",8994,1289,3,22,0)
   7: Event
"KRN",8994,1289,3,23,0)
   8: (Sub)Specialty
"KRN",8994,1289,3,24,0)
 
"KRN",8994,1289,3,25,0)
A list of image information fields consists of the following
"KRN",8994,1289,3,26,0)
"^" separated pieces
"KRN",8994,1289,3,27,0)
   1: Field 2005, 15 (Timestamp for Procedure)
"KRN",8994,1289,3,28,0)
   2: Field 2005,  6 (Name of Procedure)
"KRN",8994,1289,3,29,0)
   3: Count (number of images in group)
"KRN",8994,1289,3,30,0)
   4: Field 2005, 10 (Short Description)
"KRN",8994,1289,3,31,0)
   5: Field 2005, 41 (Category)
"KRN",8994,1289,3,32,0)
   6: Field 2005, 42 (Type)
"KRN",8994,1289,3,33,0)
   7: Field 2005, 43 (Event)
"KRN",8994,1289,3,34,0)
   8: Field 2005, 44 ((Sub)Specialty)
"KRN",8994,1289,3,35,0)
 
"KRN",8994,1289,3,36,0)
Following this list appears a vertical bar ("|") and
"KRN",8994,1289,3,37,0)
the IEN of the image in question.
"KRN",8994,1483,-1)
0^7
"KRN",8994,1483,0)
MAG4 GET IMAGE INFO^GETINFO^MAGGTU3^2^R
"KRN",8994,1483,1,0)
^8994.01^2^2^3021223^^
"KRN",8994,1483,1,1,0)
Returns specific fields of an image entry, to be displayed
"KRN",8994,1483,1,2,0)
in the image information window.
"KRN",8994,1483,2,0)
^8994.02A^1^1
"KRN",8994,1483,2,1,0)
IEN^1^30^1^1
"KRN",8994,1483,2,1,1,0)
^8994.021^1^1^3021223^^
"KRN",8994,1483,2,1,1,1,0)
Image File internal entry number.
"KRN",8994,1483,2,"B","IEN",1)

"KRN",8994,1483,2,"PARAMSEQ",1,1)

"KRN",8994,1483,3,0)
^8994.03^1^1^3021223^^
"KRN",8994,1483,3,1,0)
Array of information on a specific image
"KRN",8994,1484,-1)
0^8
"KRN",8994,1484,0)
MAG4 GET FILE FORMAT INFO^INFO^MAGGSFT^2^R
"KRN",8994,1484,1,0)
^^1^1^3021223^
"KRN",8994,1484,1,1,0)
Returns information given a file extension. (Format)
"KRN",8994,1484,2,0)
^8994.02A^1^1
"KRN",8994,1484,2,1,0)
MAGEXT^1^10^1^1
"KRN",8994,1484,2,1,1,0)
^^2^2^3021223^
"KRN",8994,1484,2,1,1,1,0)
This is the file Format. (The file extension)
"KRN",8994,1484,2,1,1,2,0)
examples: JPG, TGA, DOC, HTM
"KRN",8994,1484,2,"B","MAGEXT",1)

"KRN",8994,1484,2,"PARAMSEQ",1,1)

"KRN",8994,1484,3,0)
^^2^2^3021223^
"KRN",8994,1484,3,1,0)
Returns Image File system information
"KRN",8994,1484,3,2,0)
 based on the Image file extension. i.e. JPG
"KRN",8994,1485,-1)
0^9
"KRN",8994,1485,0)
MAG GET ENV^GETENV^MAGGTU6^1^R
"KRN",8994,1485,1,0)
^8994.01^1^1^3030207^^
"KRN",8994,1485,1,1,0)
Returns environment variables from VistA server
"KRN",8994,1486,-1)
0^11
"KRN",8994,1486,0)
MAG4 CT PRESETS SAVE^SAVECTP^MAGGTU6^1^R
"KRN",8994,1486,1,0)
^^1^1^3030609^
"KRN",8994,1486,1,1,0)
Returns the site specific CT Presets.
"KRN",8994,1486,2,0)
^8994.02A^1^1
"KRN",8994,1486,2,1,0)
VALUE^1^245^1^1
"KRN",8994,1486,2,1,1,0)
^^1^1^3030609^
"KRN",8994,1486,2,1,1,1,0)
This is the string of CT Presets. 
"KRN",8994,1486,2,"B","VALUE",1)

"KRN",8994,1486,2,"PARAMSEQ",1,1)

"KRN",8994,1486,3,0)
^^2^2^3030609^
"KRN",8994,1486,3,1,0)
  1^message for success
"KRN",8994,1486,3,2,0)
  0^error message  for error.
"KRN",8994,1487,-1)
0^10
"KRN",8994,1487,0)
MAG4 CT PRESETS GET^GETCTP^MAGGTU6^1^R
"KRN",8994,1487,1,0)
^^1^1^3030609^
"KRN",8994,1487,1,1,0)
Returns the site specific CT Presets
"KRN",8994,1487,3,0)
^^1^1^3030609^
"KRN",8994,1487,3,1,0)
Returns a string of CT Presets.
"KRN",8994,1488,-1)
0^13
"KRN",8994,1488,0)
MAG4 FILTER DETAILS^GET^MAGGSFLT^2^R
"KRN",8994,1488,1,0)
^8994.01^1^1^3030616^^
"KRN",8994,1488,1,1,0)
Returns the property values of a single filter
"KRN",8994,1488,2,0)
^8994.02A^1^1
"KRN",8994,1488,2,1,0)
FLTIEN^1^245^1^1
"KRN",8994,1488,2,1,1,0)
^8994.021^1^1^3030616^^
"KRN",8994,1488,2,1,1,1,0)
This is the filter ien in the IMAGE LIST FILTERS file.
"KRN",8994,1488,2,"B","FLTIEN",1)

"KRN",8994,1488,2,"PARAMSEQ",1,1)

"KRN",8994,1488,3,0)
^8994.03^6^6^3030616^^
"KRN",8994,1488,3,1,0)
Returns the property values of a single filter.
"KRN",8994,1488,3,2,0)
 ARRAY(0)=  1 ^ Filter name, IEN
"KRN",8994,1488,3,3,0)
     or
"KRN",8994,1488,3,4,0)
 ARRAY(0)=  0 ^ Error message
"KRN",8994,1488,3,5,0)
 ARRAY(1)= Filter IEN _ "0" node of the entry
"KRN",8994,1488,3,6,0)
   in the IMAGE LIST FILTERS file.
"KRN",8994,1489,-1)
0^14
"KRN",8994,1489,0)
MAG4 FILTER GET LIST^GETLIST^MAGGSFLT^2^R
"KRN",8994,1489,1,0)
^8994.01^5^5^3030613^
"KRN",8994,1489,1,1,0)
Returns a list of Image Filters
"KRN",8994,1489,1,2,0)
Either for a specific user (Private filters)
"KRN",8994,1489,1,3,0)
or Public filters.
"KRN",8994,1489,1,4,0)
Some Public filters are distributed with the installation.
"KRN",8994,1489,1,5,0)
Public filters can also be created by the Imaging site manager.
"KRN",8994,1489,2,0)
^8994.02A^1^1
"KRN",8994,1489,2,1,0)
USER^1^40^0^1
"KRN",8994,1489,2,1,1,0)
^^1^1^3030613^
"KRN",8994,1489,2,1,1,1,0)
This is DUZ, if "" is sent, then the RPC retrieves the Public filters.
"KRN",8994,1489,2,"B","USER",1)

"KRN",8994,1489,2,"PARAMSEQ",1,1)

"KRN",8994,1489,3,0)
^^1^1^3030613^
"KRN",8994,1489,3,1,0)
Returns a list of Filter IENs ^ Filter Name
"KRN",8994,1490,-1)
0^15
"KRN",8994,1490,0)
MAG4 FILTER SAVE^SET^MAGGSFL1^1^R
"KRN",8994,1490,1,0)
^8994.01^1^1^3040826^^^^
"KRN",8994,1490,1,1,0)
Saves a new Filter to the IMAGE LIST FILTERS file.
"KRN",8994,1490,2,0)
^8994.02A^1^1
"KRN",8994,1490,2,1,0)
MAGGZ^2^30^1^1
"KRN",8994,1490,2,1,1,0)
^8994.021^4^4^3040826^^^
"KRN",8994,1490,2,1,1,1,0)
MAGGZ is the input array in format:
"KRN",8994,1490,2,1,1,2,0)
MAGGZ(n)="field number ^ field value"
"KRN",8994,1490,2,1,1,3,0)
if field number = "IEN".  User is modifying an existing filter.
"KRN",8994,1490,2,1,1,4,0)
field number = "USER".  The filter is being saved for that user.
"KRN",8994,1490,2,"B","MAGGZ",1)

"KRN",8994,1490,2,"PARAMSEQ",1,1)

"KRN",8994,1490,3,0)
^8994.03^3^3^3040826^^^^
"KRN",8994,1490,3,1,0)
The return literal is two piece "^" delimited string
"KRN",8994,1490,3,2,0)
If successful:    Filter IEN ^ Filter NAME
"KRN",8994,1490,3,3,0)
If an Error:  0^error message
"KRN",8994,1491,-1)
0^12
"KRN",8994,1491,0)
MAG4 FILTER DELETE^DEL^MAGGSFLT^1^R
"KRN",8994,1491,1,0)
^^1^1^3030618^
"KRN",8994,1491,1,1,0)
Deletes a Filter entry in the IMAGE LIST FILTERS file.
"KRN",8994,1491,2,0)
^8994.02A^1^1
"KRN",8994,1491,2,1,0)
FLTIEN^1^30^1^1
"KRN",8994,1491,2,1,1,0)
^^1^1^3030618^
"KRN",8994,1491,2,1,1,1,0)
This is the IEN to Delete.
"KRN",8994,1491,2,"B","FLTIEN",1)

"KRN",8994,1491,2,"PARAMSEQ",1,1)

"KRN",8994,1491,3,0)
^^2^2^3030618^
"KRN",8994,1491,3,1,0)
  1^success
"KRN",8994,1491,3,2,0)
  0^error message
"KRN",8994,1493,-1)
0^25
"KRN",8994,1493,0)
MAG DIRHASH^DHRPC^MAGQBUT4^1^R^^^^3
"KRN",8994,1493,1,0)
^^16^16^3030205^
"KRN",8994,1493,1,1,0)
+---------------------------------------------------------------+
"KRN",8994,1493,1,2,0)
| Property of the US Government.                                |
"KRN",8994,1493,1,3,0)
| No permission to copy or redistribute this software is given. |
"KRN",8994,1493,1,4,0)
| Use of unreleased versions of this software requires the user |
"KRN",8994,1493,1,5,0)
| to execute a written test agreement with the VistA Imaging    |
"KRN",8994,1493,1,6,0)
| Development Office of the Department of Veterans Affairs,     |
"KRN",8994,1493,1,7,0)
| telephone (301) 734-0100.                                     |
"KRN",8994,1493,1,8,0)
|                  
"KRN",8994,1493,1,9,0)
| The Food and Drug Administration classifies this software as  |
"KRN",8994,1493,1,10,0)
| a medical device.  As such, it may not be changed in any way. |
"KRN",8994,1493,1,11,0)
| Modifications to this software may result in an adulterated   |
"KRN",8994,1493,1,12,0)
| medical device under 21CFR820, the use of which is considered |
"KRN",8994,1493,1,13,0)
| to be a violation of US Federal Statutes.                     |
"KRN",8994,1493,1,14,0)
+---------------------------------------------------------------+
"KRN",8994,1493,1,15,0)
 
"KRN",8994,1493,1,16,0)
This function returns the current hash schema.
"KRN",8994,1493,2,0)
^8994.02A^2^2
"KRN",8994,1493,2,1,0)
Filenamd^1^30^1^1
"KRN",8994,1493,2,1,1,0)
^^1^1^3030205^
"KRN",8994,1493,2,1,1,1,0)
Name of the Image file to be evaluated hashing.
"KRN",8994,1493,2,2,0)
Network location file pointer.^1^999^1^2
"KRN",8994,1493,2,2,1,0)
^^2^2^3030205^
"KRN",8994,1493,2,2,1,1,0)
This reference is used to determine whether hashing is enabled
"KRN",8994,1493,2,2,1,2,0)
on the target network location.
"KRN",8994,1493,2,"B","Filenamd",1)

"KRN",8994,1493,2,"B","Network location file pointer.",2)

"KRN",8994,1493,2,"PARAMSEQ",1,1)

"KRN",8994,1493,2,"PARAMSEQ",2,2)

"KRN",8994,1493,3,0)
^^7^7^3030205^
"KRN",8994,1493,3,1,0)
This value is null if the network location does not have hashing enabled
"KRN",8994,1493,3,2,0)
otherwise the appropriate hashing algorithm is applied to the filename 
"KRN",8994,1493,3,3,0)
and a string is returned for the network path segment between the drive or
"KRN",8994,1493,3,4,0)
share and the filename itself:
"KRN",8994,1493,3,5,0)
 
"KRN",8994,1493,3,6,0)
DM00\12\34\56\78 is returned from DM001234567812.TGA
"KRN",8994,1493,3,7,0)
and DM\12\34 is returned from DM123456.TGA.
"KRN",8994,1495,-1)
0^24
"KRN",8994,1495,0)
MAGG INSTALL^GPACHX^MAGQBUT4^2^R
"KRN",8994,1495,1,0)
^^2^2^3031027^
"KRN",8994,1495,1,1,0)
This is a list of all Image package installs on the host system.
"KRN",8994,1495,1,2,0)
This list comes from the Install file.
"KRN",8994,1496,-1)
0^19
"KRN",8994,1496,0)
MAGG CONS^CONRPC^MAGBAPI^1^R
"KRN",8994,1496,1,0)
^^3^3^3031105^
"KRN",8994,1496,1,1,0)
This function returns the boolean value used to determine
"KRN",8994,1496,1,2,0)
whether the Imaging site is operating in the Consolidation
"KRN",8994,1496,1,3,0)
mode.
"KRN",8994,1496,3,0)
^^2^2^3031105^
"KRN",8994,1496,3,1,0)
0 means the site is running Non-consolidated Vista Imaging.
"KRN",8994,1496,3,2,0)
1 means the site is running Consolidated Vista Imaging.
"KRN",8994,1497,-1)
0^18
"KRN",8994,1497,0)
MAGG PLACE^PLACER^MAGBAPI^1^R
"KRN",8994,1497,1,0)
^^2^2^3031105^
"KRN",8994,1497,1,1,0)
This rpc returns the IEN of the 2006.1 entry that is appropriate for 
"KRN",8994,1497,1,2,0)
the multi institution parameter designated by the users DUZ(2).
"KRN",8994,1497,3,0)
^^1^1^3031105^
"KRN",8994,1497,3,1,0)
The ien or DA of the users Site Paramter file record.
"KRN",8994,1551,-1)
0^23
"KRN",8994,1551,0)
MAG FLD ATT^DDLF^MAGQBUT4^2^R
"KRN",8994,1551,1,0)
^8994.01^1^1^3040809^
"KRN",8994,1551,1,1,0)
This RPC returns a list of field attributes.
"KRN",8994,1551,2,0)
^8994.02A^4^4
"KRN",8994,1551,2,1,0)
FILE^1^32^1^1
"KRN",8994,1551,2,1,1,0)
^8994.021^1^1^3040809^^
"KRN",8994,1551,2,1,1,1,0)
The file number that contains the desired attribute.
"KRN",8994,1551,2,2,0)
FIELD^1^32^1^2
"KRN",8994,1551,2,2,1,0)
^8994.021^1^1^3040809^^
"KRN",8994,1551,2,2,1,1,0)
The desired field attribute.
"KRN",8994,1551,2,3,0)
FLAG^1^32^0^3
"KRN",8994,1551,2,4,0)
ATTR^1^32^1^4
"KRN",8994,1551,2,4,1,0)
^^1^1^3040809^
"KRN",8994,1551,2,4,1,1,0)
The field attribute desired.
"KRN",8994,1551,2,"B","ATTR",4)

"KRN",8994,1551,2,"B","FIELD",2)

"KRN",8994,1551,2,"B","FILE",1)

"KRN",8994,1551,2,"B","FLAG",3)

"KRN",8994,1551,2,"PARAMSEQ",1,1)

"KRN",8994,1551,2,"PARAMSEQ",2,2)

"KRN",8994,1551,2,"PARAMSEQ",3,3)

"KRN",8994,1551,2,"PARAMSEQ",4,4)

"KRN",8994,1553,-1)
1^20
"KRN",8994,1553,0)
MAGGUSER
"KRN",8994,1554,-1)
1^21
"KRN",8994,1554,0)
MAGGIMAGELIST
"KRN",8994,1555,-1)
1^22
"KRN",8994,1555,0)
MAGGPATAPPT
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020517^126
"PKG",454,22,1,"PAH",1,0)
8^3040915^1216
"PKG",454,22,1,"PAH",1,1,0)
^^70^70^3040915
"PKG",454,22,1,"PAH",1,1,1,0)
 
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
Document scanning and image filtering.
"PKG",454,22,1,"PAH",1,1,4,0)
 
"PKG",454,22,1,"PAH",1,1,5,0)
Routine checksums:
"PKG",454,22,1,"PAH",1,1,6,0)
 
"PKG",454,22,1,"PAH",1,1,7,0)
MAGBAPI   value = 13283725
"PKG",454,22,1,"PAH",1,1,8,0)
MAGBAPIP  value = 4490136
"PKG",454,22,1,"PAH",1,1,9,0)
MAGFILEB  value = 11644630
"PKG",454,22,1,"PAH",1,1,10,0)
MAGGNLKP  value = 5120114
"PKG",454,22,1,"PAH",1,1,11,0)
MAGGNTI   value = 9823383
"PKG",454,22,1,"PAH",1,1,12,0)
MAGGSCP   value = 6072520
"PKG",454,22,1,"PAH",1,1,13,0)
MAGGSFL1  value = 5952938
"PKG",454,22,1,"PAH",1,1,14,0)
MAGGSFLT  value = 9149177
"PKG",454,22,1,"PAH",1,1,15,0)
MAGGSFT   value = 3683491
"PKG",454,22,1,"PAH",1,1,16,0)
MAGGSIA   value = 6077587
"PKG",454,22,1,"PAH",1,1,17,0)
MAGGSIA1  value = 13485750
"PKG",454,22,1,"PAH",1,1,18,0)
MAGGSIM   value = 5442685
"PKG",454,22,1,"PAH",1,1,19,0)
MAGGSIU1  value = 5521127
"PKG",454,22,1,"PAH",1,1,20,0)
MAGGSIU2  value = 4915214
"PKG",454,22,1,"PAH",1,1,21,0)
MAGGSIU3  value = 8910698
"PKG",454,22,1,"PAH",1,1,22,0)
MAGGSIUI  value = 15004401
"PKG",454,22,1,"PAH",1,1,23,0)
MAGGSIV   value = 15908776
"PKG",454,22,1,"PAH",1,1,24,0)
MAGGSIV1  value = 3907430
"PKG",454,22,1,"PAH",1,1,25,0)
MAGGSPP   value = 5789193
"PKG",454,22,1,"PAH",1,1,26,0)
MAGGSQI   value = 21356895
"PKG",454,22,1,"PAH",1,1,27,0)
MAGGTAU   value = 11244676
"PKG",454,22,1,"PAH",1,1,28,0)
MAGGTERR  value = 3000489
"PKG",454,22,1,"PAH",1,1,29,0)
MAGGTIA   value = 11274455
"PKG",454,22,1,"PAH",1,1,30,0)
MAGGTIA1  value = 7046008
"PKG",454,22,1,"PAH",1,1,31,0)
MAGGTID   value = 10903946
"PKG",454,22,1,"PAH",1,1,32,0)
MAGGTIG   value = 10401360
"PKG",454,22,1,"PAH",1,1,33,0)
MAGGTII   value = 8729176
"PKG",454,22,1,"PAH",1,1,34,0)
MAGGTMC   value = 4890330
"PKG",454,22,1,"PAH",1,1,35,0)
MAGGTPT1  value = 7555501
"PKG",454,22,1,"PAH",1,1,36,0)
MAGGTRAI  value = 9211973
"PKG",454,22,1,"PAH",1,1,37,0)
MAGGTRP1  value = 6078443
"PKG",454,22,1,"PAH",1,1,38,0)
MAGGTRPT  value = 12184290
"PKG",454,22,1,"PAH",1,1,39,0)
MAGGTSR   value = 4904140
"PKG",454,22,1,"PAH",1,1,40,0)
MAGGTU1   value = 4009879
"PKG",454,22,1,"PAH",1,1,41,0)
MAGGTU3   value = 11515909
"PKG",454,22,1,"PAH",1,1,42,0)
MAGGTU4   value = 8596313
"PKG",454,22,1,"PAH",1,1,43,0)
MAGGTU5   value = 4562085
"PKG",454,22,1,"PAH",1,1,44,0)
MAGGTU6   value = 9042947
"PKG",454,22,1,"PAH",1,1,45,0)
MAGGTU7   value = 9742723
"PKG",454,22,1,"PAH",1,1,46,0)
MAGGTU9   value = 8121952
"PKG",454,22,1,"PAH",1,1,47,0)
MAGGTUP   value = 6949357
"PKG",454,22,1,"PAH",1,1,48,0)
MAGIPOS8  value = 10371822
"PKG",454,22,1,"PAH",1,1,49,0)
MAGLOG    value = 4151777
"PKG",454,22,1,"PAH",1,1,50,0)
MAGQBAB   value = 5521638
"PKG",454,22,1,"PAH",1,1,51,0)
MAGQBGCC  value = 5471832
"PKG",454,22,1,"PAH",1,1,52,0)
MAGQBJB   value = 6294131
"PKG",454,22,1,"PAH",1,1,53,0)
MAGQBJH   value = 8678496
"PKG",454,22,1,"PAH",1,1,54,0)
MAGQBPG1  value = 12026245
"PKG",454,22,1,"PAH",1,1,55,0)
MAGQBPG2  value = 7662428
"PKG",454,22,1,"PAH",1,1,56,0)
MAGQBPRG  value = 9927955
"PKG",454,22,1,"PAH",1,1,57,0)
MAGQBTM   value = 14872817
"PKG",454,22,1,"PAH",1,1,58,0)
MAGQBUT   value = 14453966
"PKG",454,22,1,"PAH",1,1,59,0)
MAGQBUT1  value = 16504458
"PKG",454,22,1,"PAH",1,1,60,0)
MAGQBUT2  value = 15657747
"PKG",454,22,1,"PAH",1,1,61,0)
MAGQBUT4  value = 4347014
"PKG",454,22,1,"PAH",1,1,62,0)
MAGQE5    value = 10174225
"PKG",454,22,1,"PAH",1,1,63,0)
MAGSDEL4  value = 2647473
"PKG",454,22,1,"PAH",1,1,64,0)
MAGSDLGR  value = 6841689
"PKG",454,22,1,"PAH",1,1,65,0)
MAGSIMBR  value = 4052881
"PKG",454,22,1,"PAH",1,1,66,0)
MAGSIXG1  value = 11374305
"PKG",454,22,1,"PAH",1,1,67,0)
MAGSIXGT  value = 10338816
"PKG",454,22,1,"PAH",1,1,68,0)
MAGUSIT   value = 6381382
"PKG",454,22,1,"PAH",1,1,69,0)
 
"PKG",454,22,1,"PAH",1,1,70,0)
Routine MAGIPOS8 is deleted after the KIDS install.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
62
"RTN","MAGBAPI")
0^41^B58206727
"RTN","MAGBAPI",1,0)
MAGBAPI ;WOIFO/PMK,RMP,SEB,MLH - Background Processor API to build queues ; 08/26/2003  07:04
"RTN","MAGBAPI",2,0)
 ;;3.0;IMAGING;**1,7,8**;Sep 15, 2004
"RTN","MAGBAPI",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBAPI",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGBAPI",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGBAPI",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGBAPI",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGBAPI",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGBAPI",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGBAPI",10,0)
 ;; |                                                               |
"RTN","MAGBAPI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGBAPI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGBAPI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGBAPI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGBAPI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGBAPI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBAPI",17,0)
 ;;
"RTN","MAGBAPI",18,0)
 ; The API returns the entry's queue pointer
"RTN","MAGBAPI",19,0)
 ;
"RTN","MAGBAPI",20,0)
ABSTRACT(INPUT,PLACE) ; Entry point to create an image abstract
"RTN","MAGBAPI",21,0)
 ; input = image pointer
"RTN","MAGBAPI",22,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",23,0)
 Q $$QUEUE("ABSTRACT",INPUT,PLACE)
"RTN","MAGBAPI",24,0)
 ;
"RTN","MAGBAPI",25,0)
GCC(INPUT,PLACE) ; Entry point to create an Document Imaging Export Copy
"RTN","MAGBAPI",26,0)
 ; input = image pointer(^Second Piece Optional Location specified^3rd optional extension(s) specifier)
"RTN","MAGBAPI",27,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",28,0)
 Q $$QUEUE("GCC",$P(INPUT,"^")_"^^"_$P(INPUT,"^",4)_"^"_$P(INPUT,"^",2,3),PLACE)
"RTN","MAGBAPI",29,0)
 ;       
"RTN","MAGBAPI",30,0)
JUKEBOX(INPUT,PLACE) ; Entry point to copy an image file and abstract to the Jukebox
"RTN","MAGBAPI",31,0)
 ; input = image pointer
"RTN","MAGBAPI",32,0)
 N NEXT,CONS
"RTN","MAGBAPI",33,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",34,0)
 S CONS=$$CONSOLID()
"RTN","MAGBAPI",35,0)
 I CONS S NEXT=$O(^MAGQUEUE(2006.03,"E",PLACE,$P(INPUT,"^"),$$NEXTQ("JUKEBOX",PLACE)))
"RTN","MAGBAPI",36,0)
 E  S NEXT=$O(^MAGQUEUE(2006.03,"JX",$P(INPUT,"^"),$$NEXTQ("JUKEBOX")))
"RTN","MAGBAPI",37,0)
 Q:NEXT?1N.N NEXT
"RTN","MAGBAPI",38,0)
 S NEXT=$$QUEUE("JUKEBOX",INPUT,PLACE)
"RTN","MAGBAPI",39,0)
 I CONS S ^MAGQUEUE(2006.03,"E",PLACE,$P(INPUT,"^"),NEXT)=""
"RTN","MAGBAPI",40,0)
 E  S ^MAGQUEUE(2006.03,"JX",$P(INPUT,"^"),NEXT)=""
"RTN","MAGBAPI",41,0)
 Q NEXT
"RTN","MAGBAPI",42,0)
 ;
"RTN","MAGBAPI",43,0)
DELETE(INPUT,PLACE) ; Entry point to delete a file (literally from anywhere)
"RTN","MAGBAPI",44,0)
 ; input = full path of file to delete
"RTN","MAGBAPI",45,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",46,0)
 I $$CONSOLID() Q $$QUEUE("DELETE","^^^"_INPUT,PLACE) ;SETS 10TH PIECE
"RTN","MAGBAPI",47,0)
 Q $$QUEUE("DELETE","^^"_+$P(INPUT,"^",3)_U_$P(INPUT,"^")) ;SETS 10TH PIECE
"RTN","MAGBAPI",48,0)
 ;
"RTN","MAGBAPI",49,0)
IMPORT(INPUT,CALLBACK,TRACKID,PLACE) ; Entry point to import a file
"RTN","MAGBAPI",50,0)
 ; input = Image Parameter Array
"RTN","MAGBAPI",51,0)
 ; Callback = the process called with the results of the import activity
"RTN","MAGBAPI",52,0)
 N QUEIEN,INDX,FDA,DINUM,%,MS1,CT,REQUE
"RTN","MAGBAPI",53,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE "0^Missing PLACE parameter" ; DBI - SEB Patch 4
"RTN","MAGBAPI",54,0)
 S REQUE=$S($P($G(INPUT),"^",3)'?1N.N:0,1:1)
"RTN","MAGBAPI",55,0)
 I REQUE=0 Q:($O(^MAG(2006.041,"C",TRACKID,""))?1N.N) "0^Duplicate Tracking ID"
"RTN","MAGBAPI",56,0)
 S QUEIEN=$$QUEUE("IMPORT","^^"_$P($G(INPUT),"^",3)_U_$TR(CALLBACK,"^","|")_U_$P($G(INPUT),"^",4),PLACE)
"RTN","MAGBAPI",57,0)
 I REQUE=0 D
"RTN","MAGBAPI",58,0)
 . S $P(^MAGQUEUE(2006.03,QUEIEN,0),"^",11)=QUEIEN
"RTN","MAGBAPI",59,0)
 . S (DINUM,X)=QUEIEN,DIC="^MAG(2006.034,",DLAYGO="2006.034",DIC(0)="L"
"RTN","MAGBAPI",60,0)
 . D FILE^DICN
"RTN","MAGBAPI",61,0)
 . K DIC
"RTN","MAGBAPI",62,0)
 . S CT=0
"RTN","MAGBAPI",63,0)
 . D CONV^MAGQBUT4(.INPUT,.CT)
"RTN","MAGBAPI",64,0)
 . D MRGMULT^MAGQBUT4(.INPUT,"^MAG(2006.034,"_QUEIEN_",1,","2006.341A",CT)
"RTN","MAGBAPI",65,0)
 D NOW^%DTC
"RTN","MAGBAPI",66,0)
 K DIE,FDA
"RTN","MAGBAPI",67,0)
 S FDA(2006.041,"+1,",.01)=$S(REQUE=0:QUEIEN,1:$P($G(INPUT),"^",4))
"RTN","MAGBAPI",68,0)
 S FDA(2006.041,"+1,",.02)=TRACKID
"RTN","MAGBAPI",69,0)
 S FDA(2006.041,"+1,",1)=$S(REQUE=0:"QUEUING",1:"REQUEUING")
"RTN","MAGBAPI",70,0)
 S FDA(2006.041,"+1,",2)=%
"RTN","MAGBAPI",71,0)
 D UPDATE^DIE("U","FDA","","MAGIMP")
"RTN","MAGBAPI",72,0)
 Q $S($D(DIERR):"0^"_MAGIMP("DIERR",1,"TEXT",1),1:QUEIEN)
"RTN","MAGBAPI",73,0)
 ;
"RTN","MAGBAPI",74,0)
JBTOHD(INPUT,PLACE) ; Entry point to copy an image from the Jukebox to the Hard Disk
"RTN","MAGBAPI",75,0)
 ; input = image pointer ^ FULL or ABSTRACT or BIG
"RTN","MAGBAPI",76,0)
 N NEXT,IEN,JDTYPE,CONS
"RTN","MAGBAPI",77,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",78,0)
 S IEN=$P(INPUT,"^"),JDTYPE=$P(INPUT,"^",2)
"RTN","MAGBAPI",79,0)
 S CONS=$$CONSOLID()
"RTN","MAGBAPI",80,0)
 I CONS S NEXT=$O(^MAGQUEUE(2006.03,"F",PLACE,IEN,JDTYPE,$$NEXTQ("JBTOHD",PLACE)))
"RTN","MAGBAPI",81,0)
 E  S NEXT=$O(^MAGQUEUE(2006.03,"JD",IEN,JDTYPE,$$NEXTQ("JBTOHD")))
"RTN","MAGBAPI",82,0)
 Q:NEXT?1N.N NEXT
"RTN","MAGBAPI",83,0)
 S NEXT=$$QUEUE("JBTOHD",INPUT,PLACE)
"RTN","MAGBAPI",84,0)
 I CONS S ^MAGQUEUE(2006.03,"F",PLACE,$P(INPUT,"^"),$P(INPUT,"^",2),NEXT)=""
"RTN","MAGBAPI",85,0)
 E  S ^MAGQUEUE(2006.03,"JD",$P(INPUT,"^"),$P(INPUT,"^",2),NEXT)=""
"RTN","MAGBAPI",86,0)
 Q NEXT
"RTN","MAGBAPI",87,0)
 ;
"RTN","MAGBAPI",88,0)
PREFET(INPUT,PLACE) ;
"RTN","MAGBAPI",89,0)
 ; input = image pointer ^ FULL or ABSTRACT or BIG
"RTN","MAGBAPI",90,0)
 N NEXT,IEN,JDTYPE,CONS
"RTN","MAGBAPI",91,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",92,0)
 S CONS=$$CONSOLID()
"RTN","MAGBAPI",93,0)
 S IEN=$P(INPUT,"^"),JDTYPE=$P(INPUT,"^",2)
"RTN","MAGBAPI",94,0)
 I CONS S NEXT=$O(^MAGQUEUE(2006.03,"F",PLACE,IEN,JDTYPE,$$NEXTQ("PREFET",PLACE)))
"RTN","MAGBAPI",95,0)
 E  S NEXT=$O(^MAGQUEUE(2006.03,"JD",IEN,JDTYPE,$$NEXTQ("PREFET")))
"RTN","MAGBAPI",96,0)
 Q:NEXT?1N.N NEXT
"RTN","MAGBAPI",97,0)
 S NEXT=$$QUEUE("PREFET",INPUT,PLACE)
"RTN","MAGBAPI",98,0)
 I CONS S ^MAGQUEUE(2006.03,"F",PLACE,$P(INPUT,"^"),$P(INPUT,"^",2),NEXT)=""
"RTN","MAGBAPI",99,0)
 E  S ^MAGQUEUE(2006.03,"JD",$P(INPUT,"^"),$P(INPUT,"^",2),NEXT)=""
"RTN","MAGBAPI",100,0)
 Q NEXT
"RTN","MAGBAPI",101,0)
 ;
"RTN","MAGBAPI",102,0)
EVAL(IMAGE,PLACE) ; Entry point for before rules are evaluated
"RTN","MAGBAPI",103,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",104,0)
 Q $$QUEUE("EVAL",IMAGE,PLACE)
"RTN","MAGBAPI",105,0)
 ;
"RTN","MAGBAPI",106,0)
NEXTQ(TYPE,PLACE) ;
"RTN","MAGBAPI",107,0)
 N X
"RTN","MAGBAPI",108,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",109,0)
 I $$CONSOLID() S X=$O(^MAGQUEUE(2006.031,"C",PLACE,TYPE,""))
"RTN","MAGBAPI",110,0)
 E  S X=$O(^MAGQUEUE(2006.031,"B",TYPE,""))
"RTN","MAGBAPI",111,0)
 Q $S('X:X,1:$P(^MAGQUEUE(2006.031,X,0),"^",2))
"RTN","MAGBAPI",112,0)
 ;
"RTN","MAGBAPI",113,0)
QUEUE(Q,INPUT,PLACE) ; Stuff the entry (header + INPUT) into the appropriate queue (Q)
"RTN","MAGBAPI",114,0)
 N %,%H,%I,QPTR,QTR,X,Y
"RTN","MAGBAPI",115,0)
 S U="^"
"RTN","MAGBAPI",116,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",117,0)
 ; increment the QPTR
"RTN","MAGBAPI",118,0)
 ;
"RTN","MAGBAPI",119,0)
 L +^MAGQUEUE(2006.03,0)
"RTN","MAGBAPI",120,0)
 S X=^MAGQUEUE(2006.03,0)
"RTN","MAGBAPI",121,0)
 S QPTR=$O(^MAGQUEUE(2006.03," "),-1)+1
"RTN","MAGBAPI",122,0)
 S $P(X,"^",3)=QPTR,$P(X,"^",4)=$P(X,"^",4)+1 ; #entries
"RTN","MAGBAPI",123,0)
 S ^MAGQUEUE(2006.03,0)=X
"RTN","MAGBAPI",124,0)
 ;
"RTN","MAGBAPI",125,0)
 ; add user, system id, date & time, and completion pieces to each entry
"RTN","MAGBAPI",126,0)
 D NOW^%DTC
"RTN","MAGBAPI",127,0)
 ; stuff the entry and "B" cross reference
"RTN","MAGBAPI",128,0)
 S ^MAGQUEUE(2006.03,QPTR,0)=Q_"^"_$G(DUZ)_"^"_^%ZOSF("VOL")_"^"_%_"^^^"_INPUT
"RTN","MAGBAPI",129,0)
 I $$CONSOLID() S ^MAGQUEUE(2006.03,"C",PLACE,Q,QPTR)="",$P(^MAGQUEUE(2006.03,QPTR,0),"^",12)=PLACE
"RTN","MAGBAPI",130,0)
 E  S ^MAGQUEUE(2006.03,"B",Q,QPTR)=""
"RTN","MAGBAPI",131,0)
 L -^MAGQUEUE(2006.03,0)
"RTN","MAGBAPI",132,0)
 D ADD(1,Q,PLACE)
"RTN","MAGBAPI",133,0)
 Q QPTR ; return pointer to the entry in the queue
"RTN","MAGBAPI",134,0)
 ;
"RTN","MAGBAPI",135,0)
ADD(N,QUEUE,PLACE) ; Ensure that the counter has a valid numeric value
"RTN","MAGBAPI",136,0)
 ; and increment it by N (N will be 0 if just validating...)
"RTN","MAGBAPI",137,0)
 ; QUEUE = Name of queue in 2006.03
"RTN","MAGBAPI",138,0)
 ;
"RTN","MAGBAPI",139,0)
 ; The counters in 2006.031 look like
"RTN","MAGBAPI",140,0)
 ;   ^MAGQUEUE(2006.031,D0,0) = Name ^ Next ^ Count
"RTN","MAGBAPI",141,0)
 ;     where Next is the IEN in 2006.03 of the next entry to be
"RTN","MAGBAPI",142,0)
 ;                processed by a 'background processor'
"RTN","MAGBAPI",143,0)
 ;       and Count is the number of entries for this queue
"RTN","MAGBAPI",144,0)
 ;
"RTN","MAGBAPI",145,0)
 N CNT,D0,I,X,CONS
"RTN","MAGBAPI",146,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",147,0)
 S CONS=$$CONSOLID()
"RTN","MAGBAPI",148,0)
 ;
"RTN","MAGBAPI",149,0)
 I CONS S D0=$O(^MAGQUEUE(2006.031,"C",PLACE,QUEUE,""))
"RTN","MAGBAPI",150,0)
 E  S D0=$O(^MAGQUEUE(2006.031,"B",QUEUE,""))
"RTN","MAGBAPI",151,0)
 D:'D0
"RTN","MAGBAPI",152,0)
 . L +^MAGQUEUE(2006.031)
"RTN","MAGBAPI",153,0)
 . S D0=$O(^MAGQUEUE(2006.031," "),-1)+1
"RTN","MAGBAPI",154,0)
 . S ^MAGQUEUE(2006.031,D0,0)=QUEUE_"^0"
"RTN","MAGBAPI",155,0)
 . I CONS=0 S ^MAGQUEUE(2006.031,"B",QUEUE,D0)=""
"RTN","MAGBAPI",156,0)
 . E  S ^MAGQUEUE(2006.031,"C",PLACE,QUEUE,D0)=""
"RTN","MAGBAPI",157,0)
 . S X="IMAGE BACKGROUND QUEUE POINTER^2006.031^"_D0_"^"_D0
"RTN","MAGBAPI",158,0)
 . S ^MAGQUEUE(2006.031,0)=X
"RTN","MAGBAPI",159,0)
 . L -^MAGQUEUE(2006.031)
"RTN","MAGBAPI",160,0)
 . Q
"RTN","MAGBAPI",161,0)
 L +^MAGQUEUE(2006.031,D0)
"RTN","MAGBAPI",162,0)
 S X=^MAGQUEUE(2006.031,D0,0),CNT=$P(X,"^",3)
"RTN","MAGBAPI",163,0)
 I CNT?1.N S CNT=CNT+N
"RTN","MAGBAPI",164,0)
 E  D
"RTN","MAGBAPI",165,0)
 . S I=$P(X,"^",2),CNT=0
"RTN","MAGBAPI",166,0)
 . I CONS F  S I=$O(^MAGQUEUE(2006.03,"C",PLACE,QUEUE,I)) Q:I'?1N.N  S CNT=CNT+1
"RTN","MAGBAPI",167,0)
 . E  F  S I=$O(^MAGQUEUE(2006.03,"B",QUEUE,I)) Q:I'?1N.N  S CNT=CNT+1
"RTN","MAGBAPI",168,0)
 . Q
"RTN","MAGBAPI",169,0)
 I CONS S $P(X,"^",4)=PLACE
"RTN","MAGBAPI",170,0)
 S $P(X,"^",3)=CNT,^MAGQUEUE(2006.031,D0,0)=X
"RTN","MAGBAPI",171,0)
 L -^MAGQUEUE(2006.031,D0)
"RTN","MAGBAPI",172,0)
 Q
"RTN","MAGBAPI",173,0)
 ;
"RTN","MAGBAPI",174,0)
CWL(PLACE) ;Current Write Location
"RTN","MAGBAPI",175,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",176,0)
 Q $P($G(^MAG(2006.1,PLACE,0)),"^",3)
"RTN","MAGBAPI",177,0)
 ;
"RTN","MAGBAPI",178,0)
PLACE(IEN) ; DBI - SEB Patch 4
"RTN","MAGBAPI",179,0)
 Q $$GETPLACE(+$O(^MAG(2006.1,"B",IEN,"")))
"RTN","MAGBAPI",180,0)
 ;
"RTN","MAGBAPI",181,0)
CWP(PLACE) ;Current Write Platter
"RTN","MAGBAPI",182,0)
 N JBPTR
"RTN","MAGBAPI",183,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",184,0)
 S JBPTR=$$JBPTR(PLACE) Q:'JBPTR 0
"RTN","MAGBAPI",185,0)
 Q $P($G(^MAGQUEUE(2006.032,JBPTR,0)),"^",3)
"RTN","MAGBAPI",186,0)
 ;
"RTN","MAGBAPI",187,0)
JBPTR(PLACE) ;Current JukeBox Pointer
"RTN","MAGBAPI",188,0)
 S PLACE=$$GETPLACE($G(PLACE)) Q:'PLACE 0 ; DBI - SEB Patch 4
"RTN","MAGBAPI",189,0)
 Q $P($G(^MAG(2006.1,PLACE,1)),"^",6)
"RTN","MAGBAPI",190,0)
 ;
"RTN","MAGBAPI",191,0)
GETPLACE(PLACE) ; Validate place
"RTN","MAGBAPI",192,0)
 S PLACE=+$S($$CONSOLID():$G(PLACE),1:$O(^MAG(2006.1,0)))
"RTN","MAGBAPI",193,0)
 I PLACE,$P($G(^MAG(2006.1,PLACE,0)),"^",1)="" S PLACE=0
"RTN","MAGBAPI",194,0)
 I 'PLACE D:$G(^MAG(2006.1,"WARNING","MAGBAPI"))+1<$$NOW^XLFDT
"RTN","MAGBAPI",195,0)
 . N I,MSG,S,T
"RTN","MAGBAPI",196,0)
 . S MSG="Application process failure"
"RTN","MAGBAPI",197,0)
 . S I=1,MSG(I)="Cannot determine 'place' (location, division, institution) for image."
"RTN","MAGBAPI",198,0)
 . S T=$J("At",11) F S=$ST-1:-1:0 D
"RTN","MAGBAPI",199,0)
 . . S I=I+1,MSG(I)=T_": "_$ST(S,"PLACE")_" = "_$ST(S,"MCODE"),T="Called From"
"RTN","MAGBAPI",200,0)
 . . Q
"RTN","MAGBAPI",201,0)
 . S:$G(DUZ) I=I+1,MSG(I)="The USER was: "_$$GET1^DIQ(200,DUZ,".01","E")
"RTN","MAGBAPI",202,0)
 . S I=I+1,MSG(I)="This fault may result in the failure to archive or process images."
"RTN","MAGBAPI",203,0)
 . S I=I+1,MSG(I)="Please log a NOIS-call."
"RTN","MAGBAPI",204,0)
 . S ^MAG(2006.1,"WARNING","MAGBAPI")=$$NOW^XLFDT
"RTN","MAGBAPI",205,0)
 . S I="" F  S I=$O(MSG(I)) Q:I=""  D DFNIQ^MAGQBPG1("",MSG(I),0)
"RTN","MAGBAPI",206,0)
 . D DFNIQ^MAGQBPG1("",MSG,1)
"RTN","MAGBAPI",207,0)
 . Q
"RTN","MAGBAPI",208,0)
 Q PLACE
"RTN","MAGBAPI",209,0)
 ;
"RTN","MAGBAPI",210,0)
CONSOLID() ;
"RTN","MAGBAPI",211,0)
 Q $GET(^MAG(2006.1,"CONSOLIDATED"))="YES"
"RTN","MAGBAPI",212,0)
 ;
"RTN","MAGBAPI",213,0)
CONRPC(RESULT) ;[MAGG CONS]
"RTN","MAGBAPI",214,0)
 S RESULT=$$CONSOLID^MAGBAPI()
"RTN","MAGBAPI",215,0)
 Q
"RTN","MAGBAPI",216,0)
PLACER(RESULT) ;[MAGG PLACE]
"RTN","MAGBAPI",217,0)
 S RESULT=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGBAPI",218,0)
 Q
"RTN","MAGBAPI",219,0)
 ;
"RTN","MAGBAPIP")
0^51^B8014515
"RTN","MAGBAPIP",1,0)
MAGBAPIP ;WOIFO/MLH - Background Processor API to build queues - Modules for place
"RTN","MAGBAPIP",2,0)
 ;;3.0;IMAGING;**1,7,8**;Sep 15, 2004
"RTN","MAGBAPIP",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBAPIP",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGBAPIP",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGBAPIP",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGBAPIP",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGBAPIP",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGBAPIP",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGBAPIP",10,0)
 ;; |                                                               |
"RTN","MAGBAPIP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGBAPIP",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGBAPIP",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGBAPIP",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGBAPIP",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGBAPIP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBAPIP",17,0)
 ;;
"RTN","MAGBAPIP",18,0)
DUZ2PLC(WARN) ; Moved from MAGGTU3 v2.5 - DBI - SEB Patch 4
"RTN","MAGBAPIP",19,0)
 ; Extrinsic : Always returns a PLACE /gek 8/2003
"RTN","MAGBAPIP",20,0)
 ; WARN          : message about where the PLACE was derived from.  /gek 8/2003
"RTN","MAGBAPIP",21,0)
 ; Compute the Users Institution for older versions of Imaging Display workstation.
"RTN","MAGBAPIP",22,0)
 ; This is called when : 
"RTN","MAGBAPIP",23,0)
 ;               DUZ(2) doesn' exist, 
"RTN","MAGBAPIP",24,0)
 ;               Or Can't resolve DUZ(2) into site param entry
"RTN","MAGBAPIP",25,0)
 N MAGINST,DIVDTA,PLACE
"RTN","MAGBAPIP",26,0)
 S MAGINST=0
"RTN","MAGBAPIP",27,0)
 D GETS^DIQ(200,DUZ,"16*","I","DIVDTA") ; look up Division field
"RTN","MAGBAPIP",28,0)
 ;                                 ? Any division data on file for this user
"RTN","MAGBAPIP",29,0)
 I $D(DIVDTA) D  ; yes, use it
"RTN","MAGBAPIP",30,0)
 . S MAGINST=@$Q(DIVDTA),WARN="Using first Division of New Person File."
"RTN","MAGBAPIP",31,0)
 . Q
"RTN","MAGBAPIP",32,0)
 E  D  ;                   no, use default site param?
"RTN","MAGBAPIP",33,0)
 . S MAGINST=$$KSP^XUPARAM("INST"),WARN="Using Kernel Site Param default entry." Q
"RTN","MAGBAPIP",34,0)
 . Q
"RTN","MAGBAPIP",35,0)
 S PLACE=$$GETPLACE^MAGBAPI(+$$PLACE^MAGBAPI(MAGINST))
"RTN","MAGBAPIP",36,0)
 I 'PLACE S PLACE=$O(^MAG(2006.1,0)),WARN="Using First Site Param entry."
"RTN","MAGBAPIP",37,0)
 Q PLACE
"RTN","MAGBAPIP",38,0)
 ;
"RTN","MAGBAPIP",39,0)
DA2PLC(MAGDA,TYPE) ; Moved from MAGGTU7 v2.5 - DBI - SEB Patch 4
"RTN","MAGBAPIP",40,0)
 ; TYPE :        Possible values "A" Abstract, "F" Full Res or "B" Big File
"RTN","MAGBAPIP",41,0)
 ; (defaults to "F" if null)
"RTN","MAGBAPIP",42,0)
 ; Resolve current place of image using NetWork Location pointer.
"RTN","MAGBAPIP",43,0)
 ; 
"RTN","MAGBAPIP",44,0)
 N MAGREF,MAG0,FBIG
"RTN","MAGBAPIP",45,0)
 I '$G(MAGDA) Q 0
"RTN","MAGBAPIP",46,0)
 S MAG0=^MAG(2005,MAGDA,0)
"RTN","MAGBAPIP",47,0)
 ;I '$D(TYPE) S TYPE="F" /gek 8/2003  mod for efficiency (from ed)
"RTN","MAGBAPIP",48,0)
 S TYPE=$E($G(TYPE)_"F",1)
"RTN","MAGBAPIP",49,0)
 I "AF"[TYPE D
"RTN","MAGBAPIP",50,0)
 . S MAGREF=$S(TYPE="A":+$P(MAG0,"^",4),1:+$P(MAG0,"^",3))
"RTN","MAGBAPIP",51,0)
 . I MAGREF=0 S MAGJB=1,MAGREF=+$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGBAPIP",52,0)
 I "B"[TYPE D
"RTN","MAGBAPIP",53,0)
 . S FBIG=$G(^MAG(2005,MAGDA,"FBIG"))
"RTN","MAGBAPIP",54,0)
 . S MAGREF=+$P(FBIG,"^") ; get file from magnetic disk, if possible
"RTN","MAGBAPIP",55,0)
 . I MAGREF=0 S MAGREF=+$P(FBIG,"^",2) ; get file from jukebox
"RTN","MAGBAPIP",56,0)
 I 'MAGREF Q 0
"RTN","MAGBAPIP",57,0)
 I '$D(^MAG(2005.2,MAGREF,0)) Q 0
"RTN","MAGBAPIP",58,0)
 Q $$GETPLACE^MAGBAPI(+$$GET1^DIQ(2005.2,MAGREF,.04,"I"))
"RTN","MAGFILEB")
0^31^B47953260
"RTN","MAGFILEB",1,0)
MAGFILEB ;WOIFO/RED - CREATE FILE REFERENCE FROM ^MAG(2005) ; 10/22/2002  06:39
"RTN","MAGFILEB",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGFILEB",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGFILEB",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGFILEB",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGFILEB",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGFILEB",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGFILEB",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGFILEB",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGFILEB",10,0)
 ;; |                                                               |
"RTN","MAGFILEB",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGFILEB",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGFILEB",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGFILEB",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGFILEB",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGFILEB",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGFILEB",17,0)
 ;;
"RTN","MAGFILEB",18,0)
 ; CALL WITH MAGXX=IEN NUMBER IN IMAGE FILE (2005)
"RTN","MAGFILEB",19,0)
 ;Calling FINDFILE requires FILETYPE to be defined ["FULL"|"ABSTRACT"|"BIG"|"TEXT"]
"RTN","MAGFILEB",20,0)
 ;   returns : 
"RTN","MAGFILEB",21,0)
 ; ..MAGFILE1 =          FILENAME ONLY
"RTN","MAGFILEB",22,0)
 ; ..MAGFILE1(.01)=      .01 FIELD OF FILE (2005)
"RTN","MAGFILEB",23,0)
 ; ..MAGFILE1("ERROR") = Message if NetWork device is offline and Image Not On JB
"RTN","MAGFILEB",24,0)
 ; ..MAGINST =                   Pointer to Institution File (Consolidated)
"RTN","MAGFILEB",25,0)
 ; ..                      OR  IEN of Imaging Site Parameters only entry (Non-Consolidated)
"RTN","MAGFILEB",26,0)
 ; ..MAGJBOL =                   NULL("")  OR " ** "_Name of Platter that is Offline"_" ** "
"RTN","MAGFILEB",27,0)
 ; ..MAGOFFLN =                  NULL("")  OR "1"   "1" means image is on platter that is offline.
"RTN","MAGFILEB",28,0)
 ; ..MAGPLACE =                  PLACE of Image. (IEN of IMAGING SITE PARAMETERS FILE)
"RTN","MAGFILEB",29,0)
 ; ..                                      Determined from Network Location file                 
"RTN","MAGFILEB",30,0)
 ; ..MAGPREF  =          Full Path of Image Network (or Jukebox) Directory 
"RTN","MAGFILEB",31,0)
 ;
"RTN","MAGFILEB",32,0)
 ;Calling other TAGS (VST,VSTNOCP,ABS,ABSNOCP,BIG,BIGNOCP,FULL,ABSTRACT,BIGFILE)      
"RTN","MAGFILEB",33,0)
 ;   return all of above and : 
"RTN","MAGFILEB",34,0)
 ; ..MAGFILE  =          FILE NAME WITH FULL PATH FOLLOWED BY $C(0)
"RTN","MAGFILEB",35,0)
 ; ..MAGFILE2 =          FILE NAME WITH FULL PATH W/O $C(0)
"RTN","MAGFILEB",36,0)
 ; .. Deletes MAGXX
"RTN","MAGFILEB",37,0)
 ; .. Does not Return MAGPREF
"RTN","MAGFILEB",38,0)
 ; Modified to handle hierarchical directory hash 4/23/98 -- PMK
"RTN","MAGFILEB",39,0)
 ;
"RTN","MAGFILEB",40,0)
 Q
"RTN","MAGFILEB",41,0)
VST ; Entry point to get a full size image with copying from JB to MAG DISK
"RTN","MAGFILEB",42,0)
 N MAGPREF,MAGJBCP S MAGJBCP=1 G FULL
"RTN","MAGFILEB",43,0)
 ;
"RTN","MAGFILEB",44,0)
VSTNOCP ; Entry point to get a full size image without copying it from the JB
"RTN","MAGFILEB",45,0)
 N MAGPREF,MAGJBCP S MAGJBCP=0 G FULL
"RTN","MAGFILEB",46,0)
 ;
"RTN","MAGFILEB",47,0)
ABS ; Entry point to get an image abstract with copying from JB to MAG DISK
"RTN","MAGFILEB",48,0)
 N MAGPREF,MAGJBCP S MAGJBCP=1 G ABSTRACT
"RTN","MAGFILEB",49,0)
 ;
"RTN","MAGFILEB",50,0)
ABSNOCP ; Entry point to get an image abstract without copying it from the JB
"RTN","MAGFILEB",51,0)
 N MAGPREF,MAGJBCP S MAGJBCP=0 G ABSTRACT
"RTN","MAGFILEB",52,0)
 ;
"RTN","MAGFILEB",53,0)
BIG ; Entry point to get a big file with copying from JB to MAG DISK
"RTN","MAGFILEB",54,0)
 N MAGPREF,MAGJBCP S MAGJBCP=1 G BIGFILE
"RTN","MAGFILEB",55,0)
 ;
"RTN","MAGFILEB",56,0)
BIGNOCP ; Entry point to get a big without copying it from the JB
"RTN","MAGFILEB",57,0)
 N MAGPREF,MAGJBCP S MAGJBCP=0 G BIGFILE
"RTN","MAGFILEB",58,0)
 ;
"RTN","MAGFILEB",59,0)
FULL N FILETYPE,MAGTYPE S FILETYPE="FULL" D FINDFILE G EXIT
"RTN","MAGFILEB",60,0)
 ;
"RTN","MAGFILEB",61,0)
ABSTRACT N FILETYPE,MAGTYPE S FILETYPE="ABSTRACT" D FINDFILE G EXIT
"RTN","MAGFILEB",62,0)
 ;
"RTN","MAGFILEB",63,0)
BIGFILE N FILETYPE,MAGTYPE S FILETYPE="BIG" D FINDFILE G EXIT
"RTN","MAGFILEB",64,0)
 ;
"RTN","MAGFILEB",65,0)
EXIT S MAGPREF=$G(MAGPREF)
"RTN","MAGFILEB",66,0)
 S MAGFILE2=MAGPREF_MAGFILE1,MAGFILE=MAGFILE2_$C(0)
"RTN","MAGFILEB",67,0)
 K MAGXX Q
"RTN","MAGFILEB",68,0)
 ;
"RTN","MAGFILEB",69,0)
FINDFILE ;
"RTN","MAGFILEB",70,0)
 N MAG0,MAGERR,MAGREF,MAGSTORE,CNDBMP
"RTN","MAGFILEB",71,0)
 K MAGPREF,MAGFILE1("ERROR") S (MAGJBOL,MAGERR,MAGTYPE,MAGOFFLN,MAGREF)=""
"RTN","MAGFILEB",72,0)
 I '$D(^MAG(2005,+MAGXX,0)) S MAGFILE1="-13,Image "_MAGXX_" is deleted",MAGERR=1 Q
"RTN","MAGFILEB",73,0)
 S MAG0=^MAG(2005,+MAGXX,0),MAGFILE1=$P(MAG0,"^",2)
"RTN","MAGFILEB",74,0)
 S MAGFILE1(.01)=$P(MAG0,"^") ; for MAILMAN interface
"RTN","MAGFILEB",75,0)
 S MAGFILE1=$P(MAGFILE1,"\",$L(MAGFILE1,"\"))
"RTN","MAGFILEB",76,0)
 ; 
"RTN","MAGFILEB",77,0)
 I FILETYPE="TEXT" S FILETYPE="FULL" S $P(MAGFILE1,".",2)="TXT"
"RTN","MAGFILEB",78,0)
 ;
"RTN","MAGFILEB",79,0)
 I FILETYPE="FULL" D  ; code for full size image
"RTN","MAGFILEB",80,0)
 . S MAGREF=$P(MAG0,"^",3)
"RTN","MAGFILEB",81,0)
 . I MAGREF="" S MAGJB=1,MAGREF=$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGFILEB",82,0)
 . Q
"RTN","MAGFILEB",83,0)
 ;
"RTN","MAGFILEB",84,0)
 I FILETYPE="ABSTRACT" D  Q:MAGERR  ; code for abstract
"RTN","MAGFILEB",85,0)
 . ;  gek 8/26/02 not sending full as the abstract for Documents.
"RTN","MAGFILEB",86,0)
 . ;  If Abs doesn't exist for Document (TIF) we'll Queue it. (don't know if it's on JB)
"RTN","MAGFILEB",87,0)
 . S MAGREF=$P(MAG0,"^",4)
"RTN","MAGFILEB",88,0)
 . I (MAGREF="") D  Q:MAGERR
"RTN","MAGFILEB",89,0)
 . . D RSLVABS^MAGGTU3(MAGXX,.CNDBMP)
"RTN","MAGFILEB",90,0)
 . . I $L(CNDBMP) S MAGFILE1=CNDBMP,MAGERR=1 Q
"RTN","MAGFILEB",91,0)
 . . S MAGJB=1,MAGREF=$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGFILEB",92,0)
 . . I $P(MAG0,"^",6)=15 S X=$$ABSTRACT^MAGBAPI(+MAGXX)
"RTN","MAGFILEB",93,0)
 . . Q
"RTN","MAGFILEB",94,0)
 . S $P(MAGFILE1,".",2)="ABS"
"RTN","MAGFILEB",95,0)
 . Q
"RTN","MAGFILEB",96,0)
 ;
"RTN","MAGFILEB",97,0)
 I FILETYPE="BIG" D  Q:MAGERR  ; code for big file
"RTN","MAGFILEB",98,0)
 . N FBIG
"RTN","MAGFILEB",99,0)
 . S FBIG=$G(^MAG(2005,MAGXX,"FBIG"))
"RTN","MAGFILEB",100,0)
 . I FBIG="" D  Q  ; no big file exists
"RTN","MAGFILEB",101,0)
 . . S MAGPREF="",MAGFILE1="-1~BIG File Does NOT Exist",MAGERR=1
"RTN","MAGFILEB",102,0)
 . S $P(MAGFILE1,".",2)="BIG"
"RTN","MAGFILEB",103,0)
 . S MAGREF=$P(FBIG,"^") ; get file from magnetic disk, if possible
"RTN","MAGFILEB",104,0)
 . I MAGREF="" S MAGREF=$P(FBIG,"^",2) ; get file from jukebox
"RTN","MAGFILEB",105,0)
 . Q
"RTN","MAGFILEB",106,0)
 ;
"RTN","MAGFILEB",107,0)
 I MAGREF="" D  Q  ;NO NETWORK LOCATION
"RTN","MAGFILEB",108,0)
 . S MAGFILE1="-1~NO NETWORK OR JUKEBOX LOCATION DEFINED"
"RTN","MAGFILEB",109,0)
 ;
"RTN","MAGFILEB",110,0)
 I '$D(^MAG(2005.2,MAGREF,0)) D  Q  ; BAD POINTER
"RTN","MAGFILEB",111,0)
 . S MAGFILE1="-1~INVALID NETWORK LOCATION POINTER ->"_MAGREF
"RTN","MAGFILEB",112,0)
 ;
"RTN","MAGFILEB",113,0)
 S MAGSTORE=^MAG(2005.2,MAGREF,0),MAGTYPE=$P(MAGSTORE,"^",7)
"RTN","MAGFILEB",114,0)
 I MAGTYPE="" S MAGTYPE=$E(MAGSTORE,1,4) ; in case the type is null
"RTN","MAGFILEB",115,0)
 ;
"RTN","MAGFILEB",116,0)
 S MAGERR=""
"RTN","MAGFILEB",117,0)
 I '$P(MAGSTORE,"^",6) D  Q:MAGERR  ; the network device is off-line
"RTN","MAGFILEB",118,0)
 . I MAGTYPE["MAG" D  Q:MAGERR  ; get the jukebox device
"RTN","MAGFILEB",119,0)
 . . S MAGSTORE=$P(MAG0,"^",5)
"RTN","MAGFILEB",120,0)
 . . I 'MAGSTORE D NOWHERE S MAGERR=1 Q  ;big trouble:nowhere on jbox
"RTN","MAGFILEB",121,0)
 . . S MAGSTORE=^MAG(2005.2,MAGSTORE,0) ; get the file from the jbox
"RTN","MAGFILEB",122,0)
 . . Q
"RTN","MAGFILEB",123,0)
 . I '$P(MAGSTORE,"^",6) D OFFLINE S MAGERR=1 Q  ;jbox cartridge offline
"RTN","MAGFILEB",124,0)
 . S MAGREF=$P(MAG0,"^",5)
"RTN","MAGFILEB",125,0)
 . Q
"RTN","MAGFILEB",126,0)
 ;
"RTN","MAGFILEB",127,0)
 S MAGPREF=""
"RTN","MAGFILEB",128,0)
 I MAGTYPE["MAG" S MAGPREF=$P(MAGSTORE,"^",2)
"RTN","MAGFILEB",129,0)
 ;
"RTN","MAGFILEB",130,0)
 I MAGTYPE?1"WORM".E D  ; code for Jukeboxes
"RTN","MAGFILEB",131,0)
 . I MAGTYPE=("WORM-OTG") S MAGPREF=$P(MAGSTORE,"^",2)
"RTN","MAGFILEB",132,0)
 . E  I MAGTYPE="WORM-PDT" S MAGPREF=$P(MAGSTORE,"^",2)
"RTN","MAGFILEB",133,0)
 . E  I MAGTYPE["WORM-DG" D  ; this code is for DG/SONY jukebox
"RTN","MAGFILEB",134,0)
 . . N SUBDIR ; the subdirectory is the last two digits of the file name
"RTN","MAGFILEB",135,0)
 . . S SUBDIR=$P(MAGFILE1,".")
"RTN","MAGFILEB",136,0)
 . . S SUBDIR=$E(100+$E(SUBDIR,$L(SUBDIR)-1,999),2,3)_"\"
"RTN","MAGFILEB",137,0)
 . . S MAGPREF=$P(MAGSTORE,"^",2)_SUBDIR
"RTN","MAGFILEB",138,0)
 . . Q
"RTN","MAGFILEB",139,0)
 . ; The following is for tracking offline images
"RTN","MAGFILEB",140,0)
 . I $$IMOFFLN(MAGFILE1) S MAGOFFLN=1
"RTN","MAGFILEB",141,0)
 . I MAGJBCP D  ; add the image to the JukeBox TO Hard Disk copy queue
"RTN","MAGFILEB",142,0)
 . . S X=$$JBTOHD^MAGBAPI(MAGXX_"^"_FILETYPE,$$GET1^DIQ(2005.2,MAGREF,.04,"I")) ; DBI - SEB Patch 4
"RTN","MAGFILEB",143,0)
 . . Q
"RTN","MAGFILEB",144,0)
 . Q
"RTN","MAGFILEB",145,0)
 ;
"RTN","MAGFILEB",146,0)
 S MAGPREF=MAGPREF_$$DIRHASH^MAGFILEB(MAGFILE1,MAGREF)
"RTN","MAGFILEB",147,0)
 ;
"RTN","MAGFILEB",148,0)
 Q
"RTN","MAGFILEB",149,0)
 ;
"RTN","MAGFILEB",150,0)
DIRHASH(FILENAME,NETLOCN) ; determine the hierarchical file directory hash 
"RTN","MAGFILEB",151,0)
 ;
"RTN","MAGFILEB",152,0)
 ; Input Variables:
"RTN","MAGFILEB",153,0)
 ; FILENAME -- the name of the file, with or without the extension
"RTN","MAGFILEB",154,0)
 ; NETLOCN --- the network location file internal entry number
"RTN","MAGFILEB",155,0)
 ; Return Value: the hierarchical file directory hash
"RTN","MAGFILEB",156,0)
 ;
"RTN","MAGFILEB",157,0)
 N FN,HASHFLAG,HASH,I
"RTN","MAGFILEB",158,0)
 S HASHFLAG=$P(^MAG(2005.2,NETLOCN,0),"^",8)
"RTN","MAGFILEB",159,0)
 I HASHFLAG="Y" D  ; calculate the hierarchical directory hash
"RTN","MAGFILEB",160,0)
 . ; for an 8.3 filename AB123456.XYZ, the directory hash is AB\12\34
"RTN","MAGFILEB",161,0)
 . ; for a 14.3 filename BALT1234567890.XYZ, its BALT\12\34\56\78
"RTN","MAGFILEB",162,0)
 . S FN=$P(FILENAME,".") ; strip off the extension
"RTN","MAGFILEB",163,0)
 . I $L(FN)=8 S HASH=$E(FN,1,2)_"\"_$E(FN,3,4)_"\"_$E(FN,5,6)
"RTN","MAGFILEB",164,0)
 . E  S HASH=$E(FN,1,4) F I=5,7,9,11 S HASH=HASH_"\"_$E(FN,I,I+1)
"RTN","MAGFILEB",165,0)
 . S HASH=HASH_"\" ; add the trailing directory separator
"RTN","MAGFILEB",166,0)
 . Q
"RTN","MAGFILEB",167,0)
 E  S HASH="" ; flat directory structure, no hierarchical hashing 
"RTN","MAGFILEB",168,0)
 Q HASH
"RTN","MAGFILEB",169,0)
 ; 
"RTN","MAGFILEB",170,0)
NOWHERE ; File is not anywhere on the jukebox -- output error message
"RTN","MAGFILEB",171,0)
 ; Requested image file is not on the Jukebox
"RTN","MAGFILEB",172,0)
 S MAGPREF="",MAGFILE1="-1^"_MAGXX_"^^NOWHERE"
"RTN","MAGFILEB",173,0)
 S MAGFILE1("ERROR")="-1~Network device Off-Line and Image not on JukeBox"
"RTN","MAGFILEB",174,0)
 Q
"RTN","MAGFILEB",175,0)
 ;
"RTN","MAGFILEB",176,0)
OFFLINE ; Jukebox Cartridge is off-line -- output error message
"RTN","MAGFILEB",177,0)
 ; Jukebox Cartridge with image file is off-line."
"RTN","MAGFILEB",178,0)
 S MAGPREF="",MAGFILE1="-1^"_MAGXX_"^"_$P(MAG0,"^",5)_"^OFFLINE"
"RTN","MAGFILEB",179,0)
 Q
"RTN","MAGFILEB",180,0)
IMOFFLN(FILE) ;Check to see if image is offline (jb platter removed)
"RTN","MAGFILEB",181,0)
 N XX,X
"RTN","MAGFILEB",182,0)
 I '$L(FILE) Q 0
"RTN","MAGFILEB",183,0)
 S X=FILE X ^%ZOSF("UPPERCASE") S FILE=Y
"RTN","MAGFILEB",184,0)
 I $D(^MAGQUEUE(2006.033,"B",FILE)) D   Q 1
"RTN","MAGFILEB",185,0)
 . S XX="",XX=$O(^MAGQUEUE(2006.033,"B",FILE,XX))
"RTN","MAGFILEB",186,0)
 . S MAGJBOL=" ** "_$P(^MAGQUEUE(2006.033,XX,0),"^",2)_" **"
"RTN","MAGFILEB",187,0)
 Q 0
"RTN","MAGGNLKP")
0^70^B10282451
"RTN","MAGGNLKP",1,0)
MAGGNLKP ;WOIFO/GEK - Lookup from delphi into any file ; [ 06/20/2001 08:56 ]
"RTN","MAGGNLKP",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGNLKP",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNLKP",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGNLKP",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNLKP",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNLKP",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGNLKP",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGNLKP",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGNLKP",10,0)
 ;; |                                                               |
"RTN","MAGGNLKP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNLKP",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNLKP",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNLKP",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNLKP",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGNLKP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNLKP",17,0)
 ;;
"RTN","MAGGNLKP",18,0)
 Q
"RTN","MAGGNLKP",19,0)
 ;
"RTN","MAGGNLKP",20,0)
LKP(MAGRY,MAGIN) ;RPC [MAG3 LOOKUP ANY] 
"RTN","MAGGNLKP",21,0)
 ; Generic lookup using FIND^DIC
"RTN","MAGGNLKP",22,0)
 ; MAGRY is the Array to return.
"RTN","MAGGNLKP",23,0)
 ; MAGIN is parameter sent by calling app (Delphi)
"RTN","MAGGNLKP",24,0)
 ;    FILE NUM ^ NUM TO RETURN ^ TEXT TO MATCH ^  ^ SCREEN ($P 5-99)
"RTN","MAGGNLKP",25,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGNLKP",26,0)
 ;
"RTN","MAGGNLKP",27,0)
 ; Kernel uses Y, we have to New it because calls to DIC etc
"RTN","MAGGNLKP",28,0)
 ;            also use it and change it, and kill it.
"RTN","MAGGNLKP",29,0)
 N Y,XI,Z,FI,MAGIEN,INFO
"RTN","MAGGNLKP",30,0)
 N FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT
"RTN","MAGGNLKP",31,0)
 S (FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)=""
"RTN","MAGGNLKP",32,0)
 ;
"RTN","MAGGNLKP",33,0)
 S FILE=+$P(MAGIN,U,1) ; this is the File Number
"RTN","MAGGNLKP",34,0)
 ; HERE
"RTN","MAGGNLKP",35,0)
 I 'FILE S MAGRY(1)="0^ERROR - Invalid Parameter:  File Number ? " Q
"RTN","MAGGNLKP",36,0)
 I '$$VFILE^DILFD(FILE) S MAGRY(1)="0^ERROR - Invalid File # - "_FILE Q
"RTN","MAGGNLKP",37,0)
 ;          Number of entries to return, If 0 we'll stop at 200
"RTN","MAGGNLKP",38,0)
 S NUM=$S(+$P(MAGIN,U,2):+$P(MAGIN,U,2),1:200)
"RTN","MAGGNLKP",39,0)
 S VAL=$P(MAGIN,U,3) ; this is the starting value i.e. 'Smi'
"RTN","MAGGNLKP",40,0)
 S SCR=$P(MAGIN,U,5,99)
"RTN","MAGGNLKP",41,0)
 ;  
"RTN","MAGGNLKP",42,0)
 S FLDS=$P(MAGIN,U,4) ; if fields were sent (6/21/96)
"RTN","MAGGNLKP",43,0)
 ;  index will default to "B" if nothing sent. 
"RTN","MAGGNLKP",44,0)
 S INDEX="B"
"RTN","MAGGNLKP",45,0)
 ;
"RTN","MAGGNLKP",46,0)
 K ^TMP("DILIST",$J) ; is this necessary ?
"RTN","MAGGNLKP",47,0)
 K ^TMP("DIERR",$J) ; This is. 
"RTN","MAGGNLKP",48,0)
 ;  
"RTN","MAGGNLKP",49,0)
 D FIND^DIC(FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)
"RTN","MAGGNLKP",50,0)
 ;
"RTN","MAGGNLKP",51,0)
 I '$D(^TMP("DILIST",$J,1)) S XI=1 D  Q
"RTN","MAGGNLKP",52,0)
 . I $D(^TMP("DIERR",$J)) D FINDERR(XI) Q
"RTN","MAGGNLKP",53,0)
 . S MAGRY(XI)="0^NO MATCH for lookup on """_$P(MAGIN,"^",3)_""""
"RTN","MAGGNLKP",54,0)
 ;  so we have some matches, (BUT we could still have an error)
"RTN","MAGGNLKP",55,0)
 ;  so first list all matches, then the ERROR
"RTN","MAGGNLKP",56,0)
 ;  Next lines were Q&D but old .EXE's expect return string with 
"RTN","MAGGNLKP",57,0)
 ;  this syntax, when all T11 code is gone, this can be rewritten
"RTN","MAGGNLKP",58,0)
 S XI="" F  S XI=$O(^TMP("DILIST",$J,1,XI)) Q:XI=""  S X=^(XI) D
"RTN","MAGGNLKP",59,0)
 . S MAGIEN=^TMP("DILIST",$J,2,XI)
"RTN","MAGGNLKP",60,0)
 . S Z=""
"RTN","MAGGNLKP",61,0)
 . F  S Z=$O(^TMP("DILIST",$J,"ID",XI,Z)) Q:Z=""  S X=X_"   "_^(Z)
"RTN","MAGGNLKP",62,0)
 . S MAGRY(XI)=X_"^"_MAGIEN
"RTN","MAGGNLKP",63,0)
 ;
"RTN","MAGGNLKP",64,0)
 I $D(^TMP("DIERR",$J)) D FINDERR() Q
"RTN","MAGGNLKP",65,0)
 I $D(^TMP("DILIST",$J,0)) S INFO=^(0) D
"RTN","MAGGNLKP",66,0)
 . S MAGRY(0)=$P(INFO,"^")_U_"Found "_$P(INFO,"^")_" entr"_$S((+INFO=1):"y",1:"ies")_" matching """_$P(MAGIN,"^",3)_""""
"RTN","MAGGNLKP",67,0)
 . I $P(INFO,"^",3)>0 S MAGRY(0)=MAGRY(0)_" there are more"
"RTN","MAGGNLKP",68,0)
 . Q
"RTN","MAGGNLKP",69,0)
 Q
"RTN","MAGGNLKP",70,0)
FINDERR(XI) ;
"RTN","MAGGNLKP",71,0)
 ;
"RTN","MAGGNLKP",72,0)
 I '+$G(XI) S XI=$O(MAGRY(""),-1)+1
"RTN","MAGGNLKP",73,0)
 S MAGRY(XI)="ERROR^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","MAGGNLKP",74,0)
 Q
"RTN","MAGGNTI")
0^56^B26704930
"RTN","MAGGNTI",1,0)
MAGGNTI ;WOIFO/GEK - Imaging interface to TIU RPC Calls etc. ; 04 Apr 2002  2:37 PM
"RTN","MAGGNTI",2,0)
 ;;3.0;IMAGING;**10,8**;Sep 15, 2004
"RTN","MAGGNTI",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGNTI",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNTI",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNTI",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGNTI",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGNTI",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGNTI",10,0)
 ;; |                                                               |
"RTN","MAGGNTI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNTI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNTI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNTI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNTI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGNTI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI",17,0)
 ;;
"RTN","MAGGNTI",18,0)
 Q
"RTN","MAGGNTI",19,0)
FILE(MAGRY,MAGDA,TIUDA) ;RPC [MAG3 TIU IMAGE]
"RTN","MAGGNTI",20,0)
 ; Call to file TIU and Imaging Pointers
"RTN","MAGGNTI",21,0)
 ; TIU API to add image to TIU
"RTN","MAGGNTI",22,0)
 I $P(^TIU(8925,TIUDA,0),U,2)'=$P(^MAG(2005,MAGDA,0),U,7) S MAGRY="0^Patient Mismatch." Q
"RTN","MAGGNTI",23,0)
 D PUTIMAGE^TIUSRVPL(.MAGRY,TIUDA,MAGDA) ;
"RTN","MAGGNTI",24,0)
 I 'MAGRY Q
"RTN","MAGGNTI",25,0)
 ; Now SET the Parent fields in the Image File
"RTN","MAGGNTI",26,0)
 S $P(^MAG(2005,MAGDA,2),U,6,8)=8925_U_TIUDA_U_+MAGRY
"RTN","MAGGNTI",27,0)
 ; DONE.
"RTN","MAGGNTI",28,0)
 S MAGRY="1^Image pointer filed successfully"
"RTN","MAGGNTI",29,0)
 Q
"RTN","MAGGNTI",30,0)
DATA(MAGRY,TIUDA) ;RPC [MAG3 TIU DATA FROM DA]
"RTN","MAGGNTI",31,0)
 ; Call to get TIU data from the TIUDA
"RTN","MAGGNTI",32,0)
 ; Return =     TIUDA^Document Type ^Document Date^DFN
"RTN","MAGGNTI",33,0)
 ;
"RTN","MAGGNTI",34,0)
 S MAGRY=TIUDA_U_$$GET1^DIQ(8925,TIUDA,".01","E")_U_$$GET1^DIQ(8925,TIUDA,"1201","I")_U_$$GET1^DIQ(8925,TIUDA,".02","I")
"RTN","MAGGNTI",35,0)
 Q
"RTN","MAGGNTI",36,0)
IMAGES(MAGRY,TIUDA) ;RPC [MAG3 CPRS TIU NOTE]
"RTN","MAGGNTI",37,0)
 ; Call to get all images for a given TIU DA
"RTN","MAGGNTI",38,0)
 ; We first get all Image IEN's breaking groups into seperate images
"RTN","MAGGNTI",39,0)
 ; Then get Image Info for each one.
"RTN","MAGGNTI",40,0)
 ; MAGRY    -     Return array of Image Data entries
"RTN","MAGGNTI",41,0)
 ; MAGRY(0)    is   1 ^ message  if successful
"RTN","MAGGNTI",42,0)
 ;                  0 ^ Error message if error;
"RTN","MAGGNTI",43,0)
 ; TIUDA  is IEN in ^TIU(8925
"RTN","MAGGNTI",44,0)
 ;
"RTN","MAGGNTI",45,0)
 ; Call TIU API to get list of Image IEN's
"RTN","MAGGNTI",46,0)
 N MAGARR,CT,TCT K ^TMP("MAGGX",$J)
"RTN","MAGGNTI",47,0)
 N DA,MAGQI,MAGNCHK,MAGXX,MAGRSLT
"RTN","MAGGNTI",48,0)
 N TIUDFN,MAGQUIT ; MAGQI 8/22/01
"RTN","MAGGNTI",49,0)
 ; MAGFILE is returned from MAGGTII
"RTN","MAGGNTI",50,0)
 ; 
"RTN","MAGGNTI",51,0)
 S MAGQUIT=0 ; MAGQI 8/22/01
"RTN","MAGGNTI",52,0)
 S TIUDFN=$P($G(^TIU(8925,TIUDA,0)),U,2) ;MAGQI 8/22/01
"RTN","MAGGNTI",53,0)
 I 'TIUDFN S MAGRY(0)="0^Invalid Patient DFN for Note ID: '"_TIUDA_"'"
"RTN","MAGGNTI",54,0)
 D GETILST^TIUSRVPL(.MAGARR,TIUDA)
"RTN","MAGGNTI",55,0)
 S CT=0,TCT=0
"RTN","MAGGNTI",56,0)
 ; Now get all images for all groups and single images.
"RTN","MAGGNTI",57,0)
 S I="" F  S I=$O(MAGARR(I)) Q:'I  S DA=MAGARR(I) D  ;Q:MAGQUIT
"RTN","MAGGNTI",58,0)
 . S Z=$$ISDELIMG(DA) I Z S TCT=TCT+1,MAGRY(TCT)="B2^"_Z Q
"RTN","MAGGNTI",59,0)
 . ; Check that array of images from selected TIUDA have 
"RTN","MAGGNTI",60,0)
 . ;     same patient's and valid backward pointers
"RTN","MAGGNTI",61,0)
 . I $P($G(^MAG(2005,DA,0)),U,7)'=TIUDFN S MAGQUIT=1,MAGNCHK="Patient Mismatch. TIU: "_TIUDA
"RTN","MAGGNTI",62,0)
 . I $P($G(^MAG(2005,DA,2)),U,7)'=TIUDA S MAGQUIT=1,MAGNCHK="Pointer Mismatch. TIU: "_TIUDA
"RTN","MAGGNTI",63,0)
 . I MAGQUIT S MAGXX=DA D INFO^MAGGTII D  Q
"RTN","MAGGNTI",64,0)
 . . ; remove the Abstract and Image File Names  ; 2/14/03 p8t14  remove c:\program files.  with   .\bmp\
"RTN","MAGGNTI",65,0)
 . . S $P(MAGFILE,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGNTI",66,0)
 . . ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGNTI",67,0)
 . . S $P(MAGFILE,U,6)=$S(($P(MAGFILE,U,6)'=11):"99",1:11)
"RTN","MAGGNTI",68,0)
 . . S $P(MAGFILE,U,10)="M"
"RTN","MAGGNTI",69,0)
 . . ;Send the error message
"RTN","MAGGNTI",70,0)
 . . S $P(MAGFILE,U,17)=MAGNCHK
"RTN","MAGGNTI",71,0)
 . . S TCT=TCT+1,MAGRY(TCT)="B2^"_MAGFILE
"RTN","MAGGNTI",72,0)
 . ;
"RTN","MAGGNTI",73,0)
 . I $O(^MAG(2005,DA,1,0)) D  Q
"RTN","MAGGNTI",74,0)
 . . ; Integrity check, if group is questionable, add it's ien to list, not it's 
"RTN","MAGGNTI",75,0)
 . . ;   children.  Later when list is looped through, it's INFO^MAGGTII will be in 
"RTN","MAGGNTI",76,0)
 . . ;   list.  Have to do this to allow other images in list from TIU to be processed.
"RTN","MAGGNTI",77,0)
 . . D CHK^MAGGSQI(.MAGQI,DA) I 'MAGQI(0) S CT=CT+1,^TMP("MAGGX",$J,CT)=DA Q
"RTN","MAGGNTI",78,0)
 . . S J=0 ; the following line needs to take only the first piece of the node - PMK 4/4/02
"RTN","MAGGNTI",79,0)
 . . F  S J=$O(^MAG(2005,DA,1,J)) Q:'J  S CT=CT+1,^TMP("MAGGX",$J,CT)=$P(^(J,0),"^")
"RTN","MAGGNTI",80,0)
 . S CT=CT+1
"RTN","MAGGNTI",81,0)
 . S ^TMP("MAGGX",$J,CT)=DA
"RTN","MAGGNTI",82,0)
 ; Now get image info for each image
"RTN","MAGGNTI",83,0)
 ;
"RTN","MAGGNTI",84,0)
 S Z=""
"RTN","MAGGNTI",85,0)
 S MAGQUIET=1
"RTN","MAGGNTI",86,0)
 F  S Z=$O(^TMP("MAGGX",$J,Z)) Q:Z=""  D
"RTN","MAGGNTI",87,0)
 . S TCT=TCT+1,MAGXX=^TMP("MAGGX",$J,Z)
"RTN","MAGGNTI",88,0)
 . ;GEK 8/24/00 Stoping the Invalid Image IEN's and Deleted Images
"RTN","MAGGNTI",89,0)
 . I '$D(^MAG(2005,MAGXX)) D  Q
"RTN","MAGGNTI",90,0)
 . . D INVALID^MAGGTIG(MAGXX,.MAGRSLT) S MAGRY(CT)=MAGRSLT
"RTN","MAGGNTI",91,0)
 . D INFO^MAGGTII
"RTN","MAGGNTI",92,0)
 . S MAGRY(TCT)="B2^"_MAGFILE
"RTN","MAGGNTI",93,0)
 K MAGQUIET
"RTN","MAGGNTI",94,0)
 S MAGRY(0)=TCT_"^"_TCT_" Images for the selected TIU NOTE"
"RTN","MAGGNTI",95,0)
 ; PUT THE Image IEN of the last image into the group ien field.
"RTN","MAGGNTI",96,0)
 Q:'TCT
"RTN","MAGGNTI",97,0)
 S $P(MAGRY(0),U,3)=TIUDA
"RTN","MAGGNTI",98,0)
 K MAGRSLT
"RTN","MAGGNTI",99,0)
 D DATA(.MAGRSLT,TIUDA)
"RTN","MAGGNTI",100,0)
 S $P(MAGRY(0),U,4)=$$GET1^DIQ(8925,TIUDA,".02","E")_"  "_$P(MAGRSLT,U,2)_"  "_$$FMTE^XLFDT($P(MAGRSLT,U,3),"8")
"RTN","MAGGNTI",101,0)
 ;
"RTN","MAGGNTI",102,0)
 S $P(MAGRY(0),U,5)=$S($P($G(MAGFILE),U):$P(MAGFILE,U),1:MAGXX)
"RTN","MAGGNTI",103,0)
 Q
"RTN","MAGGNTI",104,0)
 ;. S Z=ISDELIMG(DA) I Z S TCT=TCT+1,MAGRY(TCT)="B2^"_$P(Z,U,2) Q
"RTN","MAGGNTI",105,0)
ISDELIMG(MAGIEN) ; Is this a deleted Image.
"RTN","MAGGNTI",106,0)
 N MAGDEL,MAGIMG,MAGR,Z,MAGT
"RTN","MAGGNTI",107,0)
 S MAGDEL=$D(^MAG(2005.1,MAGIEN))
"RTN","MAGGNTI",108,0)
 S MAGIMG=$D(^MAG(2005,MAGIEN))
"RTN","MAGGNTI",109,0)
 I MAGIMG,'MAGDEL S MAGR="0^Valid Image"
"RTN","MAGGNTI",110,0)
 I 'MAGIMG,MAGDEL S MAGR="1^Deleted Image",MAGT=66
"RTN","MAGGNTI",111,0)
 I 'MAGIMG,'MAGDEL S MAGR="1^Invalid Image pointer",MAGT=67
"RTN","MAGGNTI",112,0)
 I MAGIMG,MAGDEL S MAGR="0^Image IEN exists, and is Deleted !"
"RTN","MAGGNTI",113,0)
 I 'MAGR Q MAGR
"RTN","MAGGNTI",114,0)
 S MAGR=$P(MAGR,U,2)
"RTN","MAGGNTI",115,0)
 S $P(Z,U,1,4)=MAGIEN_"^-1~"_MAGR_"^-1~"_MAGR_"^"_MAGR
"RTN","MAGGNTI",116,0)
 S $P(Z,U,6)=MAGT
"RTN","MAGGNTI",117,0)
 ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGNTI",118,0)
 S $P(Z,U,10)="M"
"RTN","MAGGNTI",119,0)
 ;Send the error message
"RTN","MAGGNTI",120,0)
 S $P(Z,U,17)=$P(MAGR,U,2)
"RTN","MAGGNTI",121,0)
 Q Z
"RTN","MAGGSCP")
0^38^B13828582
"RTN","MAGGSCP",1,0)
MAGGSCP ;WOIFO/GEK - Imaging RPC Broker call for CP.  
"RTN","MAGGSCP",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSCP",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSCP",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSCP",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSCP",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSCP",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSCP",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSCP",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSCP",10,0)
 ;; |                                                               |
"RTN","MAGGSCP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSCP",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSCP",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSCP",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSCP",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSCP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSCP",17,0)
 ;;
"RTN","MAGGSCP",18,0)
 ;;
"RTN","MAGGSCP",19,0)
 Q
"RTN","MAGGSCP",20,0)
LIST(MAGRY,MAGDFN,PROC) ;RPC [MAG4 CP GET REQUESTS]
"RTN","MAGGSCP",21,0)
 ; Get list of CP Requests
"RTN","MAGGSCP",22,0)
 ; PROC = IEN FROM FILE 702.01 IF JUST ONE PROCEURE DESIRED, DEFAULTS TO ALL
"RTN","MAGGSCP",23,0)
 ; 
"RTN","MAGGSCP",24,0)
 ; The compressed listing, 4 columns  
"RTN","MAGGSCP",25,0)
 ; Not restructuring the output yet
"RTN","MAGGSCP",26,0)
 ;    "Date^Spec^Desc^Img Count^procedure info"
"RTN","MAGGSCP",27,0)
 N MAGX,I,ACT,NODE,TMP
"RTN","MAGGSCP",28,0)
 K ^TMP($J,"MAGCP")
"RTN","MAGGSCP",29,0)
 K ^TMP($J,"MAGCP1")
"RTN","MAGGSCP",30,0)
 S PROC=$G(PROC)
"RTN","MAGGSCP",31,0)
 ;S MAGRY=$NA(^TMP($J,"MAGCP1"))
"RTN","MAGGSCP",32,0)
 D CPLIST^GMRCCP(MAGDFN,PROC,$NA(^TMP($J,"MAGCP")))
"RTN","MAGGSCP",33,0)
 I '$D(^TMP($J,"MAGCP")) S MAGRY(0)="0^There are no Clinical Procedure Requests for Patient : "_$$GET1^DIQ(2,MAGDFN,.01) Q
"RTN","MAGGSCP",34,0)
 S ACT=1
"RTN","MAGGSCP",35,0)
 S I="" F  S I=$O(^TMP($J,"MAGCP",I)) Q:I=""  S NODE=^(I) D
"RTN","MAGGSCP",36,0)
 . ; screening out x - cancelled and 'dc' - discontinued 
"RTN","MAGGSCP",37,0)
 . I ",x,dc,"[(","_$P(NODE,U,4)_",") Q 
"RTN","MAGGSCP",38,0)
 . S X=$$INF(NODE)
"RTN","MAGGSCP",39,0)
 . S ACT=ACT+1
"RTN","MAGGSCP",40,0)
 . S MAGRY(ACT)=X ;S @MAGRY@(ACT)=X
"RTN","MAGGSCP",41,0)
 S MAGRY(1)="Date~S1^CP DEF nam^urgency^status" ;^cons #^CP DEF ien
"RTN","MAGGSCP",42,0)
 S MAGRY(0)=ACT-1_"^"_ACT-1_" Clinical Procedure Requests."
"RTN","MAGGSCP",43,0)
 Q
"RTN","MAGGSCP",44,0)
INF(NODE) ;
"RTN","MAGGSCP",45,0)
 N RY
"RTN","MAGGSCP",46,0)
 ; FOR NOW JUST SEND THE SAME DATA (TESTING)
"RTN","MAGGSCP",47,0)
 S RY=$P(NODE,U,1,4)_"|"_$P(NODE,U,5,99)
"RTN","MAGGSCP",48,0)
 S $P(RY,U)=$$EXTDT^MAGGSU1($P(RY,U))
"RTN","MAGGSCP",49,0)
 Q RY
"RTN","MAGGSCP",50,0)
 ;S RY=$$EXTDT^MAGGSU1($P(NODE,U,3))_U_"TIU"_U_$P(NODE,U,2)_U
"RTN","MAGGSCP",51,0)
 ;S RY=RY_$$IMGCT($P(NODE,U))_U_$P($P(NODE,U,5),";",2)_U
"RTN","MAGGSCP",52,0)
 ;S RY=RY_"|TIU^"_$P(NODE,U)
"RTN","MAGGSCP",53,0)
 Q RY
"RTN","MAGGSCP",54,0)
TIUDA(MAGRY,MAGDFN,MAGCONS,MAGVSTR,MAGCMP) ;RPC [MAG4 CP CONSULT TO TIUDA]
"RTN","MAGGSCP",55,0)
 ;
"RTN","MAGGSCP",56,0)
 K MAGRY S MAGVSTR=$G(MAGVSTR),MAGCMP=$G(MAGCMP,0)
"RTN","MAGGSCP",57,0)
 ; No longer sending CP the 'Complete' Flag 9/20/01 GEK
"RTN","MAGGSCP",58,0)
 ;D ITIU^MDAPI(.MAGRY,MAGDFN,MAGCONS,MAGVSTR,MAGCMP)
"RTN","MAGGSCP",59,0)
 ; CODE^DFN^MAGIEN^<computed time 'now'>^TEXT
"RTN","MAGGSCP",60,0)
 D ACTION^MAGGTAU("API^"_MAGDFN_"|ITIU-MDAPI Params: Cnslt#-"_MAGCONS_" vstr-"_MAGVSTR)
"RTN","MAGGSCP",61,0)
 D ITIU^MDAPI(.MAGRY,MAGDFN,MAGCONS,MAGVSTR)
"RTN","MAGGSCP",62,0)
 D ACTION^MAGGTAU("API^"_MAGDFN_"|ITIU-MDAPI Result: "_MAGRY(0))
"RTN","MAGGSCP",63,0)
 Q
"RTN","MAGGSCP",64,0)
VISITS(MAGRY,MAGDFN,MAGCONS) ;RPC [MAG4 CP GET VISITS]
"RTN","MAGGSCP",65,0)
 N I,MAGCT,MAGNODE,MAGI,MAGZ,MAGVISIT,DFN
"RTN","MAGGSCP",66,0)
 S DFN=MAGDFN
"RTN","MAGGSCP",67,0)
 S RESULTS="MAGVISIT"
"RTN","MAGGSCP",68,0)
 ; RESULTS and DFN variables are needed by MDRPCOP
"RTN","MAGGSCP",69,0)
 D GETVST^MDRPCOP
"RTN","MAGGSCP",70,0)
 I '$D(MAGVISIT(0)) S MAGRY(0)="0^ERROR: Listing visits." Q
"RTN","MAGGSCP",71,0)
 S I=0,MAGCT=1 F  S I=$O(MAGVISIT(I)) Q:'I  D
"RTN","MAGGSCP",72,0)
 . S MAGZ=MAGVISIT(I)
"RTN","MAGGSCP",73,0)
 . S $P(MAGNODE,"^")=$$EXTDT^MAGGSU1($P(MAGZ,"^",2)) ;Date
"RTN","MAGGSCP",74,0)
 . S $P(MAGNODE,"^",2,3)=$P(MAGZ,"^",3,4) ; Clinic, Status
"RTN","MAGGSCP",75,0)
 . S $P(MAGNODE,"|",2)=$P(MAGZ,"^",1) ; VSTRING;
"RTN","MAGGSCP",76,0)
 . S MAGCT=MAGCT+1,MAGRY(MAGCT)=MAGNODE
"RTN","MAGGSCP",77,0)
 I '$D(MAGRY) S MAGRY(0)="0^0 Visits for patient" Q
"RTN","MAGGSCP",78,0)
 S MAGRY(0)=$O(MAGRY(""),-1)-1_"^Visits for patient"
"RTN","MAGGSCP",79,0)
 S MAGRY(1)="Date~S1^Location^Status"
"RTN","MAGGSCP",80,0)
 Q
"RTN","MAGGSCP",81,0)
UPDCONS(MAGRY,MAGCONS,MAGTIU,MAGCMP) ;Update Consults;
"RTN","MAGGSCP",82,0)
 ; Update Consults with the Complete Flag. Consults will update
"RTN","MAGGSCP",83,0)
 ; it's status to 'pr' partial results.
"RTN","MAGGSCP",84,0)
 D ACTION^MAGGTAU("API|CPDOC-GMRCCP Params: Cnslt#-"_MAGCONS_" tiuda-"_MAGTIU_" cmpfl-"_MAGCMP)
"RTN","MAGGSCP",85,0)
 S MAGRY=$$CPDOC^GMRCCP(MAGCONS,MAGTIU,MAGCMP) ; MAGCMP IS 2
"RTN","MAGGSCP",86,0)
 Q
"RTN","MAGGSFL1")
0^81^B12555242
"RTN","MAGGSFL1",1,0)
MAGGSFL1 ;WOIFO/GEK - Image list Filters utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGSFL1",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGSFL1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFL1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSFL1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSFL1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSFL1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSFL1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSFL1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSFL1",10,0)
 ;; |                                                               |
"RTN","MAGGSFL1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSFL1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSFL1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSFL1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSFL1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSFL1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFL1",17,0)
 ;;
"RTN","MAGGSFL1",18,0)
 Q
"RTN","MAGGSFL1",19,0)
SET(MAGRY,MAGGZ) ;RPC [MAG4 FILTER SAVE]
"RTN","MAGGSFL1",20,0)
 ; Enter/Edit a filter.
"RTN","MAGGSFL1",21,0)
 ;  Use DUZ for field  #22 Ceated By
"RTN","MAGGSFL1",22,0)
 ;  MAGGZ is input array in format
"RTN","MAGGSFL1",23,0)
 ;  MAGGZ(n)="field number ^ field value"
"RTN","MAGGSFL1",24,0)
 ;                       if field number = "IEN".  User is modifying an existing filter.
"RTN","MAGGSFL1",25,0)
 ;                          field number = "USER".  The filter is being saved for that user.
"RTN","MAGGSFL1",26,0)
 ;
"RTN","MAGGSFL1",27,0)
 K MAGRY
"RTN","MAGGSFL1",28,0)
 S MAGRY="0^Starting: Saving Filter..."
"RTN","MAGGSFL1",29,0)
 N MAGGDA,MAGGFDA,MFDA2,MAGGIEN,MAGGXE,MAGGFLD,MAGGDAT,MAGOK,FLTIEN,FLTUSER,RES,MAGMOD
"RTN","MAGGSFL1",30,0)
 S FLTIEN=0,FLTUSER=0,MAGOK=1,MAGMOD=0
"RTN","MAGGSFL1",31,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSFL1",32,0)
 I ($D(MAGGZ)<10) S MAGRY="0^No input data, Operation CANCELED" Q
"RTN","MAGGSFL1",33,0)
 ;
"RTN","MAGGSFL1",34,0)
 S Z="" F  S Z=$O(MAGGZ(Z)) Q:Z=""  D  I 'MAGOK S MAGRY=MAGOK Q
"RTN","MAGGSFL1",35,0)
 . N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSFL1",36,0)
 . S MAGGFLD=$P(MAGGZ(Z),U,1),MAGGDAT=$P(MAGGZ(Z),U,2,99)
"RTN","MAGGSFL1",37,0)
 . I MAGGFLD=""!(MAGGDAT="") S MAGOK="0^Field and Value are Required" Q
"RTN","MAGGSFL1",38,0)
 . I MAGGFLD="IEN" S FLTIEN=+MAGGDAT,MAGMOD=1 Q
"RTN","MAGGSFL1",39,0)
 . I MAGGFLD="USER" S FLTUSER=+MAGGDAT S MAGGFLD=20
"RTN","MAGGSFL1",40,0)
 . I '$$VALID^MAGGSIV1(2005.87,MAGGFLD,.MAGGDAT,.RES) S MAGOK="0^"_RES Q
"RTN","MAGGSFL1",41,0)
 . S MAGGFDA(2005.87,"+1,",MAGGFLD)=MAGGDAT
"RTN","MAGGSFL1",42,0)
 I 'MAGOK Q
"RTN","MAGGSFL1",43,0)
 ; Data is valid.  If modifying existing entry make sure we clear old values.
"RTN","MAGGSFL1",44,0)
 L +(^MAG(2005.87,0)):10 E  S MAGRY="0^The File Image List Filters is locked.  Operation canceled" Q
"RTN","MAGGSFL1",45,0)
 I MAGMOD D
"RTN","MAGGSFL1",46,0)
 . I '$D(^MAG(2005.87,FLTIEN)) S MAGRY="0^Invalid Filter IEN: "_FLTIEN Q
"RTN","MAGGSFL1",47,0)
 . N MAGV F I=1,2,3,4,5,6,7,8,9,20,21 S MAGV(I)="@"
"RTN","MAGGSFL1",48,0)
 . M MAGV=MAGGFDA(2005.87,"+1,")
"RTN","MAGGSFL1",49,0)
 . K MAGGFDA
"RTN","MAGGSFL1",50,0)
 . M MAGGFDA(2005.87,FLTIEN_",")=MAGV
"RTN","MAGGSFL1",51,0)
 . ; Here we file the modified entry, killing old values and setting new.
"RTN","MAGGSFL1",52,0)
 . ;L// L +(^MAG(2005.87,FLTIEN)):5 E  S MAGRY="0^Filter is locked.  Operation canceled" Q
"RTN","MAGGSFL1",53,0)
 . D FILE^DIE("","MAGGFDA","MAGGXE")
"RTN","MAGGSFL1",54,0)
 . ;L// L -(^MAG(2005.87,FLTIEN))
"RTN","MAGGSFL1",55,0)
 . I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGSFL1",56,0)
 . S MAGRY=FLTIEN_"^"_$P(^MAG(2005.87,FLTIEN,0),"^",1)
"RTN","MAGGSFL1",57,0)
 . Q
"RTN","MAGGSFL1",58,0)
 I 'MAGMOD D
"RTN","MAGGSFL1",59,0)
 . S MAGGFDA(2005.87,"+1,",22)=DUZ
"RTN","MAGGSFL1",60,0)
 . D UPDATE^DIE("","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGSFL1",61,0)
 . I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGSFL1",62,0)
 . S MAGRY=MAGGIEN(1)_"^"_$P(^MAG(2005.87,+MAGGIEN(1),0),"^",1)
"RTN","MAGGSFL1",63,0)
 . Q
"RTN","MAGGSFL1",64,0)
 L -(^MAG(2005.87,0))
"RTN","MAGGSFL1",65,0)
 D CLEAN^DILF
"RTN","MAGGSFL1",66,0)
 Q
"RTN","MAGGSFL1",67,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGSFL1",68,0)
 N MAGRESA
"RTN","MAGGSFL1",69,0)
 D MSG^DIALOG("A",.MAGRESA,245,5,"MAGGXE")
"RTN","MAGGSFL1",70,0)
 S ETXT="0^"_MAGRESA(1)
"RTN","MAGGSFL1",71,0)
 D CLEAN^DILF
"RTN","MAGGSFL1",72,0)
 Q
"RTN","MAGGSFL1",73,0)
ERR ;
"RTN","MAGGSFL1",74,0)
 ;L// L -(^MAG(2005.87,FLTIEN))
"RTN","MAGGSFL1",75,0)
 L -(^MAG(2005.87,0))
"RTN","MAGGSFL1",76,0)
 N ERR
"RTN","MAGGSFL1",77,0)
 S ERR=$$EC^%ZOSV
"RTN","MAGGSFL1",78,0)
 S MAGRY="0^Error Filter Add/Edit: "_ERR
"RTN","MAGGSFL1",79,0)
 S MAGOK=MAGRY
"RTN","MAGGSFL1",80,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGSFL1",81,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSFL1",82,0)
 D CLEAN^DILF
"RTN","MAGGSFL1",83,0)
 Q
"RTN","MAGGSFLT")
0^59^B27846060
"RTN","MAGGSFLT",1,0)
MAGGSFLT ;WOIFO/GEK - Image list Filters utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGSFLT",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSFLT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFLT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSFLT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSFLT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSFLT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSFLT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSFLT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSFLT",10,0)
 ;; |                                                               |
"RTN","MAGGSFLT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSFLT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSFLT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSFLT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSFLT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSFLT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFLT",17,0)
 ;;
"RTN","MAGGSFLT",18,0)
 Q
"RTN","MAGGSFLT",19,0)
DEL(MAGRY,FLTIEN) ;RPC [MAG4 FILTER DELETE] DELETE A FILTER
"RTN","MAGGSFLT",20,0)
 N DIK,DA
"RTN","MAGGSFLT",21,0)
 S DIK="^MAG(2005.87,"
"RTN","MAGGSFLT",22,0)
 S DA=FLTIEN
"RTN","MAGGSFLT",23,0)
 D ^DIK
"RTN","MAGGSFLT",24,0)
 D CLEAN^DILF
"RTN","MAGGSFLT",25,0)
 S MAGRY="1^Deleted"
"RTN","MAGGSFLT",26,0)
 Q
"RTN","MAGGSFLT",27,0)
GETLIST(MAGRY,USER,GETALL) ;RPC [MAG4 FILTER GET LIST] Return a list of filters for a USER
"RTN","MAGGSFLT",28,0)
 ; user = DUZ
"RTN","MAGGSFLT",29,0)
 ; if user = "" send list of public filters
"RTN","MAGGSFLT",30,0)
 ; if user > 0 and GETALL = 1 then send User Private and Public filters.
"RTN","MAGGSFLT",31,0)
 N I,MAGADMIN,MAGCLIN
"RTN","MAGGSFLT",32,0)
 S USER=$G(USER)
"RTN","MAGGSFLT",33,0)
 S MAGRY(0)="0^Retrieving Filter list..."
"RTN","MAGGSFLT",34,0)
 ; we'll get public if getall or no user
"RTN","MAGGSFLT",35,0)
 D CLSKEYS(.MAGADMIN,.MAGCLIN)
"RTN","MAGGSFLT",36,0)
 I $G(GETALL)!('USER) D
"RTN","MAGGSFLT",37,0)
 . S I=""
"RTN","MAGGSFLT",38,0)
 . F  S I=$O(^MAG(2005.87,"D",1,I)) Q:I=""  D
"RTN","MAGGSFLT",39,0)
 . . I '$$HASKEY(I) Q  ; HERE HAVE TO USE DUZ, TO FILTER THE FILTERS BASED ON MAGDISP CLIN AND MAGDISP ADMIN
"RTN","MAGGSFLT",40,0)
 . . S MAGRY($O(MAGRY(""),-1)+1)=I_"^"_$P(^MAG(2005.87,I,0),"^",1)_"^"_$P(^MAG(2005.87,I,1),"^")
"RTN","MAGGSFLT",41,0)
 . . Q
"RTN","MAGGSFLT",42,0)
 I USER D
"RTN","MAGGSFLT",43,0)
 . S I=""
"RTN","MAGGSFLT",44,0)
 . F  S I=$O(^MAG(2005.87,"C",USER,I)) Q:I=""  D
"RTN","MAGGSFLT",45,0)
 . . I '$$HASKEY(I) Q
"RTN","MAGGSFLT",46,0)
 . . S MAGRY($O(MAGRY(""),-1)+1)=I_"^"_$P(^MAG(2005.87,I,0),"^",1)_"^"_$P(^MAG(2005.87,I,1),"^")
"RTN","MAGGSFLT",47,0)
 . . Q
"RTN","MAGGSFLT",48,0)
 S MAGRY(0)=$S($G(MAGRY(1)):$O(MAGRY(""),-1),1:"0^ERROR Retrieving Filter list.")
"RTN","MAGGSFLT",49,0)
 I MAGRY(0) D
"RTN","MAGGSFLT",50,0)
 . ; we have a list of filters, send the default as Piece 1 in 0 node.
"RTN","MAGGSFLT",51,0)
 . S $P(MAGRY(0),"^",1)=$$DFTFLT(USER)
"RTN","MAGGSFLT",52,0)
 Q
"RTN","MAGGSFLT",53,0)
HASKEY(IEN) ; True or False, Does user have Correct Key(s)(ADMIN and/or CLIN) to view this filter.
"RTN","MAGGSFLT",54,0)
 N CLS
"RTN","MAGGSFLT",55,0)
 S CLS=$P(^MAG(2005.87,IEN,0),"^",3)
"RTN","MAGGSFLT",56,0)
 I (CLS="") S CLS="CLIN,ADMIN" ; CLS="", now treat it as both.  (Might rethink, treat it as any ? )
"RTN","MAGGSFLT",57,0)
 I (CLS["ADMIN"),(CLS["CLIN") Q (MAGCLIN&MAGADMIN)
"RTN","MAGGSFLT",58,0)
 I (CLS["CLIN") Q MAGCLIN
"RTN","MAGGSFLT",59,0)
 I (CLS["ADMIN") Q MAGADMIN
"RTN","MAGGSFLT",60,0)
 Q 0
"RTN","MAGGSFLT",61,0)
CLSKEYS(ADM,CLIN) ;
"RTN","MAGGSFLT",62,0)
 S (ADM,CLIN)=0
"RTN","MAGGSFLT",63,0)
 N I,MAGKEY
"RTN","MAGGSFLT",64,0)
 D USERKEYS^MAGGTU3(.MAGKEY)
"RTN","MAGGSFLT",65,0)
 S I="" F  S I=$O(MAGKEY(I)) Q:I=""  D
"RTN","MAGGSFLT",66,0)
 . I MAGKEY(I)="MAGDISP CLIN" S CLIN=1
"RTN","MAGGSFLT",67,0)
 . I MAGKEY(I)="MAGDISP ADMIN" S ADM=1
"RTN","MAGGSFLT",68,0)
 . Q
"RTN","MAGGSFLT",69,0)
 Q
"RTN","MAGGSFLT",70,0)
GET(MAGRY,FLTIEN,FLTNAME,USER) ;RPC [MAG4 FILTER DETAILS] Return a filter
"RTN","MAGGSFLT",71,0)
 ; Return the full FLTIEN Node, the Delphi App will Parse it.
"RTN","MAGGSFLT",72,0)
 K MAGV,FLTC
"RTN","MAGGSFLT",73,0)
 I '$G(FLTIEN) S FLTIEN=$$RSLVIEN($G(FLTNAME),$G(USER))
"RTN","MAGGSFLT",74,0)
 I 'FLTIEN S MAGRY(0)="0^Can not resolve Filter name in VistA." Q
"RTN","MAGGSFLT",75,0)
 I '$D(^MAG(2005.87,FLTIEN)) S MAGRY="0^Filter ID #"_FLTIEN_" Doesn't exist." Q
"RTN","MAGGSFLT",76,0)
 S FLTC=FLTIEN_","
"RTN","MAGGSFLT",77,0)
 S MAGRY(0)="1^Filter "_$P(^MAG(2005.87,FLTIEN,0),"^",1)_" # "_FLTIEN
"RTN","MAGGSFLT",78,0)
 ; S MAGRY(1)=FLTIEN_"^"_^MAG(2005.87,FLTIEN,0)
"RTN","MAGGSFLT",79,0)
 F I=1:1:9 D GETS^DIQ(2005.87,FLTC,".01:9","E","MAGV")
"RTN","MAGGSFLT",80,0)
 S MAGRY(1)=FLTIEN
"RTN","MAGGSFLT",81,0)
 S X=MAGV(2005.87,FLTC,6,"E") I X]"" S %DT="" D ^%DT S MAGV(2005.87,FLTC,6,"E")=$$FMTE^XLFDT(Y,"2Z")
"RTN","MAGGSFLT",82,0)
 S X=MAGV(2005.87,FLTC,7,"E") I X]"" S %DT="" D ^%DT S MAGV(2005.87,FLTC,7,"E")=$$FMTE^XLFDT(Y,"2Z")
"RTN","MAGGSFLT",83,0)
 S I="" F  S I=$O(MAGV(2005.87,FLTC,I)) Q:I=""  S MAGRY(1)=MAGRY(1)_"^"_MAGV(2005.87,FLTC,I,"E")
"RTN","MAGGSFLT",84,0)
 Q
"RTN","MAGGSFLT",85,0)
RSLVIEN(NAME,USER) ; Return an IEN from the NAME and USER
"RTN","MAGGSFLT",86,0)
 N I,IEN S I=""
"RTN","MAGGSFLT",87,0)
 I NAME="" Q 0
"RTN","MAGGSFLT",88,0)
 S IEN=0
"RTN","MAGGSFLT",89,0)
 F  S I=$O(^MAG(2005.87,"B",NAME,I)) Q:'I  D
"RTN","MAGGSFLT",90,0)
 . I $P(^MAG(2005.87,I,1),"^")=USER S IEN=I
"RTN","MAGGSFLT",91,0)
 Q IEN
"RTN","MAGGSFLT",92,0)
DFTFLT(USER) ; Create a Default Filter for user. Or Return Existing.
"RTN","MAGGSFLT",93,0)
 ;  Plus this call, makes sure the Default Filter is valid.
"RTN","MAGGSFLT",94,0)
 ; USER is the IEN in the New Person file
"RTN","MAGGSFLT",95,0)
 ;   default to DUZ if ""
"RTN","MAGGSFLT",96,0)
 N FLTIEN,XIEN
"RTN","MAGGSFLT",97,0)
 S USER=$S($G(USER):USER,1:$G(DUZ))
"RTN","MAGGSFLT",98,0)
 S XIEN=$O(^MAG(2006.18,"AC",USER,"")) Q:XIEN="" 0
"RTN","MAGGSFLT",99,0)
 S FLTIEN=$P($G(^MAG(2006.18,XIEN,"LISTWIN1")),"^",3)
"RTN","MAGGSFLT",100,0)
 I FLTIEN D  Q FLTIEN
"RTN","MAGGSFLT",101,0)
 . I $D(^MAG(2005.87,FLTIEN)) Q  ; Valid filter Quit.
"RTN","MAGGSFLT",102,0)
 . ; Users dflt filter invalid. Set dflt as first private or first public
"RTN","MAGGSFLT",103,0)
 . ;   We dont' create the Admin All, or Clin All a second time.
"RTN","MAGGSFLT",104,0)
 . S FLTIEN=$O(^MAG(2005.87,"C",USER,"")) ; get first private
"RTN","MAGGSFLT",105,0)
 . I 'FLTIEN S FLTIEN=$O(^MAG(2005.87,"D",1,"")) ; return first public
"RTN","MAGGSFLT",106,0)
 . S $P(^MAG(2006.18,XIEN,"LISTWIN1"),"^",3)=FLTIEN
"RTN","MAGGSFLT",107,0)
 . Q
"RTN","MAGGSFLT",108,0)
 ; 
"RTN","MAGGSFLT",109,0)
 ;  Here we'll create Private filters for a user or send first existing 
"RTN","MAGGSFLT",110,0)
 ;  private filter as the default.
"RTN","MAGGSFLT",111,0)
 N MAGADMIN,MAGCLIN,MAGY,MAGX
"RTN","MAGGSFLT",112,0)
 S FLTIEN=$O(^MAG(2005.87,"C",USER,"")) ; get first private
"RTN","MAGGSFLT",113,0)
 I FLTIEN S $P(^MAG(2006.18,XIEN,"LISTWIN1"),"^",3)=FLTIEN Q FLTIEN
"RTN","MAGGSFLT",114,0)
 D CLSKEYS(.MAGADMIN,.MAGCLIN)
"RTN","MAGGSFLT",115,0)
 I MAGADMIN D
"RTN","MAGGSFLT",116,0)
 . ; Create a Filter for All Admin add to IMAGE LIST FILTERS File for this user.
"RTN","MAGGSFLT",117,0)
 . S MAGX(1)="USER^"_USER
"RTN","MAGGSFLT",118,0)
 . S MAGX(2)=".01^Admin All"
"RTN","MAGGSFLT",119,0)
 . S MAGX(3)="2^ADMIN"
"RTN","MAGGSFLT",120,0)
 . D SET^MAGGSFL1(.MAGY,.MAGX)
"RTN","MAGGSFLT",121,0)
 . S FLTIEN=$S(+MAGY:+MAGY,1:"")
"RTN","MAGGSFLT",122,0)
 . Q
"RTN","MAGGSFLT",123,0)
 K MAGY,MAGX
"RTN","MAGGSFLT",124,0)
 I MAGCLIN D
"RTN","MAGGSFLT",125,0)
 . ;Create a Filter for All Clin add to IMAGE LIST FILTERS File for this user.
"RTN","MAGGSFLT",126,0)
 . S MAGX(1)="USER^"_USER
"RTN","MAGGSFLT",127,0)
 . S MAGX(2)=".01^Clinical All"
"RTN","MAGGSFLT",128,0)
 . S MAGX(3)="2^CLIN"
"RTN","MAGGSFLT",129,0)
 . D SET^MAGGSFL1(.MAGY,.MAGX)
"RTN","MAGGSFLT",130,0)
 . S FLTIEN=$S(+MAGY:+MAGY,1:"")
"RTN","MAGGSFLT",131,0)
 . Q
"RTN","MAGGSFLT",132,0)
 Q:'FLTIEN 0
"RTN","MAGGSFLT",133,0)
 S $P(^MAG(2006.18,XIEN,"LISTWIN1"),"^",3)=FLTIEN
"RTN","MAGGSFLT",134,0)
 Q FLTIEN
"RTN","MAGGSFT")
0^54^B6466586
"RTN","MAGGSFT",1,0)
MAGGSFT ;WOIFO/GEK - Utilities 
"RTN","MAGGSFT",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSFT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSFT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSFT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSFT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSFT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSFT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSFT",10,0)
 ;; |                                                               |
"RTN","MAGGSFT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSFT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSFT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSFT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSFT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSFT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFT",17,0)
 ;;
"RTN","MAGGSFT",18,0)
 Q
"RTN","MAGGSFT",19,0)
LIST(MAGRY) ;RPC [MAG4 GET SUPPORTED EXTENSIONS]
"RTN","MAGGSFT",20,0)
 ;to return a list of supported image file extensions
"RTN","MAGGSFT",21,0)
 N I,Y,CT,MAGN0
"RTN","MAGGSFT",22,0)
 ;NAME [1F] ^ DESCRIPTION [2F] ^VIEWER [3S] ^ 
"RTN","MAGGSFT",23,0)
 ;       Bitmap for Abstract [4F] ^Abstract Created [5S] ^ Default Object Type [6P]
"RTN","MAGGSFT",24,0)
 ;
"RTN","MAGGSFT",25,0)
 ;  2nd "|" piece is system info = Ien of 2005.021 ^ NAME ^ Default Object Type [6P]
"RTN","MAGGSFT",26,0)
 S MAGRY(0)="0^Compiling list of supported extensions..."
"RTN","MAGGSFT",27,0)
 S MAGRY(1)="Ext^Description^Imaging Viewer^Abs Bitmap^Abs Created"
"RTN","MAGGSFT",28,0)
 S CT=1
"RTN","MAGGSFT",29,0)
 S I=0 F  S I=$O(^MAG(2005.021,I)) Q:'I  S MAGN0=^(I,0) D
"RTN","MAGGSFT",30,0)
 . S CT=CT+1
"RTN","MAGGSFT",31,0)
 . S MAGRY(CT)=$P(MAGN0,U,1,5)_"|"_I_U_$P(MAGN0,U)_U_$P(MAGN0,U,6)
"RTN","MAGGSFT",32,0)
 S MAGRY(0)="1^Okay"
"RTN","MAGGSFT",33,0)
 Q
"RTN","MAGGSFT",34,0)
EXTSUPP(MAGRY,MAGEXT) ;
"RTN","MAGGSFT",35,0)
 ;  ? ? AM I MISSING CODE HERE.  DID WE LOSE SOME LIKE BEFORE.
"RTN","MAGGSFT",36,0)
 Q
"RTN","MAGGSFT",37,0)
INFO(MAGRY,MAGEXT) ;RPC [MAG4 GET FILE FORMAT INFO]
"RTN","MAGGSFT",38,0)
 ;IMAGE FILE TYPES FILE ^MAG(2005.021
"RTN","MAGGSFT",39,0)
 ;NAME [1F] ^ DESCRIPTION [2F] ^VIEWER [3S] ^ 
"RTN","MAGGSFT",40,0)
 ;       Bitmap for Abstract [4F] ^Abstract Created [5S] ^ Default Object Type [6P]
"RTN","MAGGSFT",41,0)
 ;
"RTN","MAGGSFT",42,0)
 ;"Ext^Description^Imaging Viewer^Abs Bitmap^Abs Created"
"RTN","MAGGSFT",43,0)
 ;                            "|" IEN ^ NAME ^ Default Object Type [6P] 
"RTN","MAGGSFT",44,0)
 N MAGN0,MAGIEN
"RTN","MAGGSFT",45,0)
 S MAGRY(0)="1^OK"
"RTN","MAGGSFT",46,0)
 S MAGEXT=$$UP^XLFSTR(MAGEXT)
"RTN","MAGGSFT",47,0)
 S MAGIEN=$O(^MAG(2005.021,"B",MAGEXT,""))
"RTN","MAGGSFT",48,0)
 I 'MAGIEN S MAGRY(0)="0^Unsupported File Extension : "_MAGEXT Q
"RTN","MAGGSFT",49,0)
 S MAGN0=^MAG(2005.021,MAGIEN,0)
"RTN","MAGGSFT",50,0)
 S MAGRY(1)=$P(MAGN0,U,1,5)_"|"_MAGIEN_U_$P(MAGN0,U)_U_$P(MAGN0,U,6)
"RTN","MAGGSFT",51,0)
 Q
"RTN","MAGGSFT",52,0)
ABS4IMAG(MAGIEN) ; True, False  If the Image (MAGIEN) has an abstract
"RTN","MAGGSFT",53,0)
 ;  We base this on the Extension of image, in the IMAGE FILE TYPES file.
"RTN","MAGGSFT",54,0)
 N X,FTIEN
"RTN","MAGGSFT",55,0)
 S X=$P($P($G(^MAG(2005,MAGIEN,0)),"^",2),".",2)
"RTN","MAGGSFT",56,0)
 I '$L(X) Q 0
"RTN","MAGGSFT",57,0)
 S FTIEN=$O(^MAG(2005.021,"B",X,""))
"RTN","MAGGSFT",58,0)
 I 'FTIEN Q 0
"RTN","MAGGSFT",59,0)
 Q $P(^MAG(2005.021,FTIEN,0),"^",5)
"RTN","MAGGSIA")
0^32^B18817772
"RTN","MAGGSIA",1,0)
MAGGSIA ;WOIFO/GEK - Imaging RPC Broker calls. Add/Modify Image entry ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIA",2,0)
 ;;3.0;IMAGING;**7,21,8**;Sep 15, 2004
"RTN","MAGGSIA",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIA",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIA",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIA",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIA",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIA",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIA",10,0)
 ;; |                                                               |
"RTN","MAGGSIA",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIA",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIA",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIA",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIA",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIA",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA",17,0)
 ;;
"RTN","MAGGSIA",18,0)
 Q
"RTN","MAGGSIA",19,0)
 ;
"RTN","MAGGSIA",20,0)
 ;**** CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE
"RTN","MAGGSIA",21,0)
 ;**** on DISK TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGSIA",22,0)
 ;
"RTN","MAGGSIA",23,0)
ADD(MAGRY,MAGARRAY) ; RPC [MAG4 ADD IMAGE]
"RTN","MAGGSIA",24,0)
 ; Calls UPDATE^DIE to Add an Image File entry
"RTN","MAGGSIA",25,0)
 ;  Called from Import API Delphi component and ImportX (Active X) control.
"RTN","MAGGSIA",26,0)
 ;  Parameters : 
"RTN","MAGGSIA",27,0)
 ;    MAGARRAY -  array of field numbers and their entries
"RTN","MAGGSIA",28,0)
 ;             i.e. MAGARRAY(1)=".5^38"  field# .5   data is 38
"RTN","MAGGSIA",29,0)
 ;    If Long Description is included in array (field 11), we create a new
"RTN","MAGGSIA",30,0)
 ;      array to hold the text, and pass that to UPDATE^DIE
"RTN","MAGGSIA",31,0)
 ;    If this entry is an Image Group
"RTN","MAGGSIA",32,0)
 ;      i.e. MAGARRAY(n)="2005.04^344"
"RTN","MAGGSIA",33,0)
 ;      (the field 2005.04 is the OBJECT GROUP MULTIPLE)
"RTN","MAGGSIA",34,0)
 ;      ( 344 is the pointer to the Image File Entry that will be added
"RTN","MAGGSIA",35,0)
 ;      ( as a member of this new/existing Group)
"RTN","MAGGSIA",36,0)
 ;
"RTN","MAGGSIA",37,0)
 ;  Return Variable
"RTN","MAGGSIA",38,0)
 ;
"RTN","MAGGSIA",39,0)
 ;    MAGRY(0) - Array
"RTN","MAGGSIA",40,0)
 ;      Successful   MAGRY(0) = IEN^FILE NAME (with full path)
"RTN","MAGGSIA",41,0)
 ;      UNsuccessful MAGRY(0) = 0^Error desc
"RTN","MAGGSIA",42,0)
 ;                   MAGRY(0)(1..n) = Errors and warnings. 
"RTN","MAGGSIA",43,0)
 ;
"RTN","MAGGSIA",44,0)
 ;    CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE on DISK
"RTN","MAGGSIA",45,0)
 ;      TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGSIA",46,0)
 ;      Changed to include hierarchial directory hash  - PMK 04/23/98
"RTN","MAGGSIA",47,0)
 ;----------------------------------------------------------------
"RTN","MAGGSIA",48,0)
 N MAGGFDA,MAGGDRV,MAGGRP,MAGCHLD,GRPCT,MAGGDA,MAGGFNM
"RTN","MAGGSIA",49,0)
 N MAGGWP,MAGERR,MAGREF,MAGDHASH,MAGTEMP,MAGACT,MAGGIEN,MAGGXE
"RTN","MAGGSIA",50,0)
 N GIEN,DIEN,NEWIEN ;3.0
"RTN","MAGGSIA",51,0)
 N I,J,X,Y,Z,WPCT
"RTN","MAGGSIA",52,0)
 ;
"RTN","MAGGSIA",53,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGSERR"
"RTN","MAGGSIA",54,0)
 I ($D(MAGARRAY)<10) S MAGRY(0)="0^No input data, Operation CANCELED" Q
"RTN","MAGGSIA",55,0)
 ;
"RTN","MAGGSIA",56,0)
 S MAGRY(0)="0^Creating VistA Image Entry..."
"RTN","MAGGSIA",57,0)
 S MAGERR="",MAGGRP=0,GRPCT=1,WPCT=0
"RTN","MAGGSIA",58,0)
 ;  Validate the Data, and Action codes in the Input Array
"RTN","MAGGSIA",59,0)
 D VAL^MAGGSIV(.MAGRY,.MAGARRAY) I 'MAGRY(0) Q
"RTN","MAGGSIA",60,0)
 ;
"RTN","MAGGSIA",61,0)
 ;  Make the FileMan FDA array and the Imaging Action array.
"RTN","MAGGSIA",62,0)
 D MAKEFDA^MAGGSIU2(.MAGGFDA,.MAGARRAY,.MAGACT,.MAGCHLD,.MAGGRP,.MAGGWP)
"RTN","MAGGSIA",63,0)
 I '$D(MAGGFDA(2005,"+1,")) S MAGRY(0)="0^No data to file.  Operation CANCELED." Q
"RTN","MAGGSIA",64,0)
 ;
"RTN","MAGGSIA",65,0)
 ;  Check on some possible problems: required fields, create default values etc.
"RTN","MAGGSIA",66,0)
 D PRE^MAGGSIA1(.MAGERR,.MAGGFDA,MAGGRP,.MAGGDRV,.MAGREF) I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",67,0)
 ; Locking Patch 8. Get latest Image IEN and Deleted IEN take the greater of the two.
"RTN","MAGGSIA",68,0)
 S GIEN=$O(^MAG(2005," "),-1)+1
"RTN","MAGGSIA",69,0)
 S DIEN=$O(^MAG(2005.1," "),-1)+1
"RTN","MAGGSIA",70,0)
 S NEWIEN=$S(GIEN>DIEN:GIEN,1:DIEN)
"RTN","MAGGSIA",71,0)
LOCK L +^MAG(2005,NEWIEN):0 E  S NEWIEN=NEWIEN+1 G LOCK ; lock it, or get next
"RTN","MAGGSIA",72,0)
 I $D(^MAG(2005,NEWIEN)) L -^MAG(2005,NEWIEN) S NEWIEN=NEWIEN+1 G LOCK ; if it exists, get next
"RTN","MAGGSIA",73,0)
 S MAGGIEN(1)=NEWIEN
"RTN","MAGGSIA",74,0)
 D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGSIA",75,0)
 ;
"RTN","MAGGSIA",76,0)
 ;  ERROR: QUIT
"RTN","MAGGSIA",77,0)
 I '$G(MAGGIEN(1)) D  S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",78,0)
 . S MAGERR="0^ERROR Creating new Image File Entry "
"RTN","MAGGSIA",79,0)
 . I $D(DIERR) D RTRNERR^MAGGSIU1(.MAGERR)
"RTN","MAGGSIA",80,0)
 . D CLEAN
"RTN","MAGGSIA",81,0)
 ;
"RTN","MAGGSIA",82,0)
 S MAGGDA=MAGGIEN(1)
"RTN","MAGGSIA",83,0)
 ;
"RTN","MAGGSIA",84,0)
 D ACTION^MAGGTAU("CAP^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA)
"RTN","MAGGSIA",85,0)
 ;
"RTN","MAGGSIA",86,0)
 ; IF a group, UpDate the GROUP PARENT in each Group Object and QUIT
"RTN","MAGGSIA",87,0)
 ;  The Return (MAGRY(0)) will be IEN with NO Filename. Groups don't get Filename
"RTN","MAGGSIA",88,0)
 I MAGGRP D  Q
"RTN","MAGGSIA",89,0)
 . D UPDCHLD^MAGGSIM(.MAGCHLD,MAGGDA)
"RTN","MAGGSIA",90,0)
 . S MAGRY(0)=MAGGDA_U
"RTN","MAGGSIA",91,0)
 . D CLEAN
"RTN","MAGGSIA",92,0)
 . Q
"RTN","MAGGSIA",93,0)
 ; ENTRY in Image File has been made, if any errors from here on
"RTN","MAGGSIA",94,0)
 ;  then we have to delete the image entry.
"RTN","MAGGSIA",95,0)
 ; New Index Field Check.  If this entry doesn't have the Index fields introduced
"RTN","MAGGSIA",96,0)
 ;   in 3.0.8 then we use the Patch 17 conversion API call to generate default values.
"RTN","MAGGSIA",97,0)
 ;-This is being deferred to a later patch.
"RTN","MAGGSIA",98,0)
 ;-I '$D(^MAG(2005,MAGGDA,40)) D
"RTN","MAGGSIA",99,0)
 ;-. D ONE^MAGSCNVI(MAGGDA)
"RTN","MAGGSIA",100,0)
 ;-. D ACTION^MAGGTAU("DFTINDX^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA)
"RTN","MAGGSIA",101,0)
 ;
"RTN","MAGGSIA",102,0)
 ; Now generate the Image FileName. This is passed back to the calling app, 
"RTN","MAGGSIA",103,0)
 ;  and the calling app is responsible for renaming/copying the Image File to
"RTN","MAGGSIA",104,0)
 ;  this new name. 
"RTN","MAGGSIA",105,0)
 I $D(MAGGFDA(2005,"+1,",1)) S MAGGFNM=MAGGFDA(2005,"+1,",1)
"RTN","MAGGSIA",106,0)
 E  D  I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",107,0)
 . N MAGXFDA
"RTN","MAGGSIA",108,0)
 . S X=$$DA2NAME^MAGGTU1(MAGGDA,$G(MAGACT("EXT"))) I 'X D  Q
"RTN","MAGGSIA",109,0)
 . . S MAGERR=X
"RTN","MAGGSIA",110,0)
 . . D KILLENT^MAGGSIU1(MAGGDA)
"RTN","MAGGSIA",111,0)
 . . D CLEAN
"RTN","MAGGSIA",112,0)
 . ;
"RTN","MAGGSIA",113,0)
 . S MAGGFNM=$P(X,U,2),Y=MAGGDA_","
"RTN","MAGGSIA",114,0)
 . S MAGXFDA(2005,Y,1)=MAGGFNM
"RTN","MAGGSIA",115,0)
 . D UPDATE^DIE("","MAGXFDA","","MAGGXE")
"RTN","MAGGSIA",116,0)
 . ;   in case of an error
"RTN","MAGGSIA",117,0)
 . I $D(DIERR) D  Q
"RTN","MAGGSIA",118,0)
 . . D RTRNERR^MAGGSIU1(.MAGERR,.MAGGXE)
"RTN","MAGGSIA",119,0)
 . . D KILLENT^MAGGSIU1(MAGGDA)
"RTN","MAGGSIA",120,0)
 . . D CLEAN
"RTN","MAGGSIA",121,0)
 ;
"RTN","MAGGSIA",122,0)
 ;
"RTN","MAGGSIA",123,0)
 ;
"RTN","MAGGSIA",124,0)
 ;  IF This image is a member of a Group, Update the Group Entry with new child.
"RTN","MAGGSIA",125,0)
 S X=$G(MAGGFDA(2005,"+1,",14)) I +X D  I $L(MAGERR) Q
"RTN","MAGGSIA",126,0)
 . D UPDPAR^MAGGSIM(.MAGERR,X,.MAGACT,MAGGDA)
"RTN","MAGGSIA",127,0)
 . I $L(MAGERR) S MAGRY(0)=MAGERR D CLEAN
"RTN","MAGGSIA",128,0)
 ;
"RTN","MAGGSIA",129,0)
 ;** ABS and JB image queues AREN'T SET WHEN ADDING AN IMAGE. 
"RTN","MAGGSIA",130,0)
 ;** RPC =-> 'MAG ABSJB' after abstract is/isn't created on the workstation
"RTN","MAGGSIA",131,0)
 ;
"RTN","MAGGSIA",132,0)
 ;  The Return is:  IEN ^ DRIVE:DIR ^ FILE.EXT [^ DRIVE:DIR ^ FILE.BIG]
"RTN","MAGGSIA",133,0)
 ;   i.e  487^C:\IMAGE\^DC000487.TIF
"RTN","MAGGSIA",134,0)
 ;  The calling routine is responsible for renaming/naming the file
"RTN","MAGGSIA",135,0)
 ;   to the returned DRIVE:\DIR\FILENAME.EXT
"RTN","MAGGSIA",136,0)
 ;
"RTN","MAGGSIA",137,0)
 ; Modified 4/23/98 to include hierarchial directory structure -- PMK
"RTN","MAGGSIA",138,0)
 S MAGDHASH=$$DIRHASH^MAGFILEB(MAGGFNM,MAGREF)
"RTN","MAGGSIA",139,0)
 ; For now, BIG files are in same directory as FullRes (or PACS) file
"RTN","MAGGSIA",140,0)
 S MAGRY(0)=MAGGDA_U_MAGGDRV_MAGDHASH_U_MAGGFNM
"RTN","MAGGSIA",141,0)
 ; If BIG file also, add it's Drive, Hash, Filename to end of Return string.
"RTN","MAGGSIA",142,0)
 I $G(MAGACT("BIG")) D
"RTN","MAGGSIA",143,0)
 . S X=$P(MAGGFNM,".",1)_".BIG"
"RTN","MAGGSIA",144,0)
 . S MAGRY(0)=MAGRY(0)_U_MAGGDRV_MAGDHASH_U_X
"RTN","MAGGSIA",145,0)
 ;
"RTN","MAGGSIA",146,0)
CLEAN ; Called as tag
"RTN","MAGGSIA",147,0)
 D CLEAN^DILF
"RTN","MAGGSIA",148,0)
 L -^MAG(2005,NEWIEN)
"RTN","MAGGSIA",149,0)
 Q
"RTN","MAGGSIA1")
0^48^B38724152
"RTN","MAGGSIA1",1,0)
MAGGSIA1 ;WOIFO/GEK - RPC Call to Add Image File entry ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIA1",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSIA1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIA1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIA1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIA1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIA1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIA1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIA1",10,0)
 ;; |                                                               |
"RTN","MAGGSIA1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIA1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIA1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIA1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIA1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIA1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",17,0)
 ;;
"RTN","MAGGSIA1",18,0)
 Q
"RTN","MAGGSIA1",19,0)
PRE(MAGERR,MAGGFDA,MAGGRP,MAGGDRV,MAGREF) ;
"RTN","MAGGSIA1",20,0)
 ;  Check on some possible problems: required fields etc.
"RTN","MAGGSIA1",21,0)
 ;  Object Type and (Patient, or Short Desc) Required.
"RTN","MAGGSIA1",22,0)
 N MAGRSLT,X,Z
"RTN","MAGGSIA1",23,0)
 I '$D(MAGGFDA(2005,"+1,",3)) D OBJTYPE
"RTN","MAGGSIA1",24,0)
 I '$D(MAGGFDA(2005,"+1,",3)) S MAGERR="0^Need an Object Type " Q
"RTN","MAGGSIA1",25,0)
 I '$D(MAGGFDA(2005,"+1,",5)),'$D(MAGGFDA(2005,"+1,",10)) D  Q
"RTN","MAGGSIA1",26,0)
 . S MAGERR="0^Need Patient or Short Desc.  Operation CANCELED "
"RTN","MAGGSIA1",27,0)
 ; IF no Procedure text we'll give it some so crossref will set.
"RTN","MAGGSIA1",28,0)
 D PATCHK(.MAGRSLT) I 'MAGRSLT S MAGERR=MAGRSLT Q
"RTN","MAGGSIA1",29,0)
 ; Patch 8 IAPI We Create IXCLS (#41 CLASS) and  IXPKG (#40 Package) if TYPE is in Data.
"RTN","MAGGSIA1",30,0)
 ; But we are not making TYPE required yet for backward compatibality.
"RTN","MAGGSIA1",31,0)
 I $D(MAGGFDA(2005,"+1,",42)) D
"RTN","MAGGSIA1",32,0)
 . I $$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),2,"E")="INACTIVE" D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",33,0)
 . . S MAGERR="0^Index Type: "_$$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),.01,"E")_"is INACTIVE"
"RTN","MAGGSIA1",34,0)
 . I '$D(MAGGFDA(2005,"+1,",41)) D MAKECLAS^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",35,0)
 . I ($D(MAGGFDA(2005,"+1,",16)))&($$ISTYPADM(MAGGFDA(2005,"+1,",42))) D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",36,0)
 . . S MAGERR="0^Can't have an ADMIN TYPE with Clinical Image."
"RTN","MAGGSIA1",37,0)
 . I '$D(MAGGFDA(2005,"+1,",40)) D MAKEPKG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",38,0)
 . I '$D(MAGGFDA(2005,"+1,",6)) D MAKEPROC^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",39,0)
 . I '$D(MAGGFDA(2005,"+1,",45)) D MAKEORIG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",40,0)
 . Q
"RTN","MAGGSIA1",41,0)
 ;
"RTN","MAGGSIA1",42,0)
 I '$D(MAGGFDA(2005,"+1,",6)) D PROCTEXT
"RTN","MAGGSIA1",43,0)
 ;
"RTN","MAGGSIA1",44,0)
 ; If no Procedure/Exam Date/Time we'll give it DocDT, or NOW
"RTN","MAGGSIA1",45,0)
 I '$D(MAGGFDA(2005,"+1,",15)) D
"RTN","MAGGSIA1",46,0)
 . I $D(MAGGFDA(2005,"+1,",110)) S MAGGFDA(2005,"+1,",15)=MAGGFDA(2005,"+1,",110) Q
"RTN","MAGGSIA1",47,0)
 . S MAGGFDA(2005,"+1,",15)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",48,0)
 ; DateTime image saved.
"RTN","MAGGSIA1",49,0)
 I '$D(MAGGFDA(2005,"+1,",7)) S MAGGFDA(2005,"+1,",7)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",50,0)
 ; Short Description
"RTN","MAGGSIA1",51,0)
 ;I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",52,0)
 I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$G(MAGGFDA(2005,"+1,",6))
"RTN","MAGGSIA1",53,0)
 ; Name (.01)
"RTN","MAGGSIA1",54,0)
 I '$D(MAGGFDA(2005,"+1,",.01)) S MAGGFDA(2005,"+1,",.01)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",55,0)
 ; Only get drive:dir if not a group
"RTN","MAGGSIA1",56,0)
 I '$D(MAGGFDA(2005,"+1,",8)) S MAGGFDA(2005,"+1,",8)=$G(DUZ)
"RTN","MAGGSIA1",57,0)
 I 'MAGGRP D  I $L(MAGERR) Q
"RTN","MAGGSIA1",58,0)
 . ; The value of the Action Code "WRITE^value" OVERRIDES any Write Location
"RTN","MAGGSIA1",59,0)
 . ; sent as field # 2 in the input array. (The only value we check for is "PACS" from peter's code)
"RTN","MAGGSIA1",60,0)
 . S X=$S($D(MAGACT("WRITE")):MAGACT("WRITE"),$D(MAGGFDA(2005,"+1,",2)):MAGGFDA(2005,"+1,",2),1:"")
"RTN","MAGGSIA1",61,0)
 . S Z=$$DRIVE^MAGGTU1(X) ;Drv:Dir to Write
"RTN","MAGGSIA1",62,0)
 . I 'Z S MAGERR=Z Q
"RTN","MAGGSIA1",63,0)
 . S MAGGDRV=$P(Z,U,2)
"RTN","MAGGSIA1",64,0)
 . S MAGGFDA(2005,"+1,",2)=+Z               ;Disk & Vol magnetic
"RTN","MAGGSIA1",65,0)
 . ; if a big file is being made on workstation, put NetWork Location
"RTN","MAGGSIA1",66,0)
 . ; pointer in the BIG NETWORK LOCATION field.
"RTN","MAGGSIA1",67,0)
 . ; (BIG files default to same Network Location as FullRes (or PACS))
"RTN","MAGGSIA1",68,0)
 . I $G(MAGACT("BIG"))=1 S MAGGFDA(2005,"+1,",102)=+Z
"RTN","MAGGSIA1",69,0)
 . S MAGREF=+Z ; save network location ien for $$DIRHASH in ^MAGGSIA1
"RTN","MAGGSIA1",70,0)
 . I $G(MAGACT("ABS"))="STUFFONLY" S MAGGFDA(2005,"+1,",2.1)=+Z
"RTN","MAGGSIA1",71,0)
 ;
"RTN","MAGGSIA1",72,0)
 ; If an Acquisition Site is passed, save it in image file
"RTN","MAGGSIA1",73,0)
 I $D(MAGACT("ACQS")) D
"RTN","MAGGSIA1",74,0)
 . ; Patch 8 Have to modify: Field 105 (Acquisition Site) is NOW Field .05
"RTN","MAGGSIA1",75,0)
 . I $P(MAGACT("ACQS"),";")]"" S MAGGFDA(2005,"+1,",.05)=$P(MAGACT("ACQS"),";")
"RTN","MAGGSIA1",76,0)
 I $D(MAGACT("ACQL")) S MAGGFDA(2005,"+1,",101)=MAGACT("ACQL")
"RTN","MAGGSIA1",77,0)
 ; HERE we are putting PRE Processing for the Import API action codes.
"RTN","MAGGSIA1",78,0)
 ; "ACQD,ACQS" If Acquisition device entry doesn't exist, create it.
"RTN","MAGGSIA1",79,0)
 I $D(MAGACT("ACQD")) D
"RTN","MAGGSIA1",80,0)
 . ; IF Value is a pointer to the ACQ DEVICE File Quit.  If it's invalid then UPDATE will catch it.
"RTN","MAGGSIA1",81,0)
 . I (+MAGACT("ACQD")=MAGACT("ACQD")) S MAGGFDA(2005,"+1,",107)=MAGACT("ACQD") Q
"RTN","MAGGSIA1",82,0)
 . I $D(^MAG(2006.04,"B",MAGACT("ACQD"))) D  Q
"RTN","MAGGSIA1",83,0)
 . . ; IF Already exists, add it to the FDA
"RTN","MAGGSIA1",84,0)
 . . S MAGGFDA(2005,"+1,",107)=$O(^MAG(2006.04,"B",MAGACT("ACQD"),""))
"RTN","MAGGSIA1",85,0)
 . . ; What do we do with the Acquisition Site. IF Acq Dev already exists. ? 
"RTN","MAGGSIA1",86,0)
 . . ; ??
"RTN","MAGGSIA1",87,0)
 . ; IF it doesn't exist, create it, and add it's ien to the image entry 
"RTN","MAGGSIA1",88,0)
 . N MAGDFDA,MAGDIEN,MAGDXE
"RTN","MAGGSIA1",89,0)
 . S MAGDFDA(2006.04,"+1,",.01)=MAGACT("ACQD")
"RTN","MAGGSIA1",90,0)
 . S MAGDFDA(2006.04,"+1,",1)=$S($D(MAGACT("ACQS")):$P(MAGACT("ACQS"),";"),1:$G(MAGGFDA(2005,"+1,",.05)))
"RTN","MAGGSIA1",91,0)
 . S MAGDFDA(2006.04,"+1,",2)=$S($D(MAGACT("ACQL")):MAGACT("ACQL"),$D(MAGGFDA(2005,"+1,",101)):MAGGFDA(2005,"+1,",101),1:$P($G(MAGACT("ACQS")),";",2))
"RTN","MAGGSIA1",92,0)
 . ; ACQS was a 2 ';' piece value with Acq Location (HOSPITAL LOCATION) as 2nd piece
"RTN","MAGGSIA1",93,0)
 . ;   now it is sent as it's own value in ACQL
"RTN","MAGGSIA1",94,0)
 . D UPDATE^DIE("","MAGDFDA","MAGDIEN","MAGDXE")
"RTN","MAGGSIA1",95,0)
 . S MAGGFDA(2005,"+1,",107)=MAGDIEN(1)
"RTN","MAGGSIA1",96,0)
 ;
"RTN","MAGGSIA1",97,0)
 ;  Check the last entry in Audit File to see if it is greater than 
"RTN","MAGGSIA1",98,0)
 ; last image in Image File.  IF yes, change Image File (0) node entry.
"RTN","MAGGSIA1",99,0)
 I ($O(^MAG(2005,"A"),-1)<$O(^MAG(2005.1,"A"),-1)) S $P(^MAG(2005,0),U,3)=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGSIA1",100,0)
 ;
"RTN","MAGGSIA1",101,0)
 Q
"RTN","MAGGSIA1",102,0)
PATCHK(MAGR) ; This uses the FDA Array and checks the Imaging Patient against the Procedure patient
"RTN","MAGGSIA1",103,0)
 ;
"RTN","MAGGSIA1",104,0)
 N MAGDFN,PX,PXDA,MAGY
"RTN","MAGGSIA1",105,0)
 S PX=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",106,0)
 S PXDA=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",107,0)
 I 'PX S MAGR=1 Q  ; This is a category, or an Image of a group (no parent pointer)
"RTN","MAGGSIA1",108,0)
 S MAGDFN=MAGGFDA(2005,"+1,",5)
"RTN","MAGGSIA1",109,0)
 I (PX=8925) D  Q
"RTN","MAGGSIA1",110,0)
 . I '$D(^TIU(8925,PXDA)) S MAGR="0^Invalid TIU Entry Number: "_PXDA Q
"RTN","MAGGSIA1",111,0)
 . D DATA^MAGGNTI(.MAGY,PXDA)
"RTN","MAGGSIA1",112,0)
 . I '(MAGDFN=$P(MAGY,U,4)) S MAGR="0^Procedure and Imaging patients don't match." Q
"RTN","MAGGSIA1",113,0)
 . S MAGR=1
"RTN","MAGGSIA1",114,0)
 Q
"RTN","MAGGSIA1",115,0)
OBJTYPE ; This call uses the EXT and computes an Object Type
"RTN","MAGGSIA1",116,0)
 N MTYPE
"RTN","MAGGSIA1",117,0)
 I '$L($G(MAGACT("EXT"))) Q
"RTN","MAGGSIA1",118,0)
 S MTYPE=$O(^MAG(2005.02,"AD",MAGACT("EXT"),""))
"RTN","MAGGSIA1",119,0)
 ;I 'MTYPE Q
"RTN","MAGGSIA1",120,0)
 ;TODO : Answer question, do we want to have a default Image type ?
"RTN","MAGGSIA1",121,0)
 I 'MTYPE S MTYPE=1
"RTN","MAGGSIA1",122,0)
 S MAGGFDA(2005,"+1,",3)=MTYPE
"RTN","MAGGSIA1",123,0)
 Q
"RTN","MAGGSIA1",124,0)
ISTYPADM(TYPE) ; Returns 1 if this is an Admin Type
"RTN","MAGGSIA1",125,0)
 N CL
"RTN","MAGGSIA1",126,0)
 I '$G(TYPE) Q 0
"RTN","MAGGSIA1",127,0)
 S CL=$$GET1^DIQ(2005.83,TYPE,1,"E")
"RTN","MAGGSIA1",128,0)
 Q $S($E(CL,1,5)="ADMIN":1,1:0)
"RTN","MAGGSIA1",129,0)
PROCTEXT ;This call uses flds 16 and 17 to compute fld #6 PROCEDURE TEXT [8F]
"RTN","MAGGSIA1",130,0)
 ; We are here because fld #6 PROCEDURE [8F] is null.
"RTN","MAGGSIA1",131,0)
 ; If a pointer to a package is in the data, (flds 16 and 17)
"RTN","MAGGSIA1",132,0)
 ;  get fld #6 from that , if not then treat it as an UNASSIGNED image 
"RTN","MAGGSIA1",133,0)
 ; i.e. Category UNASSIGNED.
"RTN","MAGGSIA1",134,0)
 N MAGYPX,PARENT,PARIEN,PXDESC
"RTN","MAGGSIA1",135,0)
 S PARENT=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",136,0)
 S PARIEN=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",137,0)
 ;
"RTN","MAGGSIA1",138,0)
 I (PARENT=8925),(PARIEN]"") D  Q
"RTN","MAGGSIA1",139,0)
 . D DATA^MAGGNTI(.MAGYPX,PARIEN)
"RTN","MAGGSIA1",140,0)
 . S MAGGFDA(2005,"+1,",6)=$P(MAGYPX,U,2)
"RTN","MAGGSIA1",141,0)
 ;TODO; create calls to get default procedure desc for all specialties
"RTN","MAGGSIA1",142,0)
 ; AND default to NONE if a TYPE and no PARENT data File (fld 16)
"RTN","MAGGSIA1",143,0)
 ; If a Parent pointer exists, and it isn't TIU, for now set "NO Description"
"RTN","MAGGSIA1",144,0)
 I PARENT]"" S MAGGFDA(2005,"+1,",6)="No Description" Q
"RTN","MAGGSIA1",145,0)
 ;
"RTN","MAGGSIA1",146,0)
 ; Do we have a pointer to a MAG DESCRIPTIVE CATEGORY
"RTN","MAGGSIA1",147,0)
 I ($G(MAGGFDA(2005,"+1,",100))]"") D  Q
"RTN","MAGGSIA1",148,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005.81,MAGGFDA(2005,"+1,",100),0),U,1)
"RTN","MAGGSIA1",149,0)
 ; 
"RTN","MAGGSIA1",150,0)
 ; If a new child of a Group, use that Proc Desc
"RTN","MAGGSIA1",151,0)
 I $G(MAGGFDA(2005,"+1,",14))]"" D  Q
"RTN","MAGGSIA1",152,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005,MAGGFDA(2005,"+1,",14),0),U,8)
"RTN","MAGGSIA1",153,0)
 ;
"RTN","MAGGSIA1",154,0)
 ; Parent="", and no Category pointer, then we Call it UNASSIGNED
"RTN","MAGGSIA1",155,0)
 S MAGGFDA(2005,"+1,",100)=$O(^MAG(2005.81,"B","UNASSIGNED",""))
"RTN","MAGGSIA1",156,0)
 S MAGGFDA(2005,"+1,",6)="UNASSIGNED"
"RTN","MAGGSIA1",157,0)
 Q
"RTN","MAGGSIM")
0^39^B14674288
"RTN","MAGGSIM",1,0)
MAGGSIM ;WOIFO/GEK - Call to Modify Image File entry ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIM",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSIM",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIM",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIM",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIM",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIM",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIM",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIM",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIM",10,0)
 ;; |                                                               |
"RTN","MAGGSIM",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIM",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIM",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIM",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIM",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIM",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIM",17,0)
 ;;
"RTN","MAGGSIM",18,0)
 Q
"RTN","MAGGSIM",19,0)
 ;
"RTN","MAGGSIM",20,0)
MOD(MAGRY,MAGARRAY) ; RPC Call to UPDATE^DIE to Add an Image File entry
"RTN","MAGGSIM",21,0)
 ;  Parameters : 
"RTN","MAGGSIM",22,0)
 ;    MAGARRAY -  array of field numbers and their entries
"RTN","MAGGSIM",23,0)
 ;             i.e. MAGARRAY(1)=".5^38"  field# .5   data is 38
"RTN","MAGGSIM",24,0)
 ;    If Long Description is included in array (field 11), we create a new
"RTN","MAGGSIM",25,0)
 ;      array to hold the text, and pass that to UPDATE^DIE
"RTN","MAGGSIM",26,0)
 ;    If this entry is an Image Group
"RTN","MAGGSIM",27,0)
 ;      i.e. MAGARRAY(n)="2005.04^344"
"RTN","MAGGSIM",28,0)
 ;      (the field 2005.04 is the OBJECT GROUP MULTIPLE)
"RTN","MAGGSIM",29,0)
 ;      ( 344 is the pointer to the Image File Entry that will be added
"RTN","MAGGSIM",30,0)
 ;      ( as a member of this new/existing Group)
"RTN","MAGGSIM",31,0)
 ;
"RTN","MAGGSIM",32,0)
 ;  Return Variable
"RTN","MAGGSIM",33,0)
 ;       MAGRY is a string;
"RTN","MAGGSIM",34,0)
 ;               "1^success"
"RTN","MAGGSIM",35,0)
 ;               "0^Error message"
"RTN","MAGGSIM",36,0)
 ;
"RTN","MAGGSIM",37,0)
 N MAGGFDA,MAGGDRV,MAGGRP,MAGCHLD,GRPCT,MAGGDA,MAGGFNM
"RTN","MAGGSIM",38,0)
 N MAGGWP,WPCT,MAGGFLD,MAGGDAT,MAGERR
"RTN","MAGGSIM",39,0)
 N MAGREF,MAGDHASH,MAGTEMP
"RTN","MAGGSIM",40,0)
 N MAGVY,MAGACT
"RTN","MAGGSIM",41,0)
 N MAGTEMP,TEMPIEN
"RTN","MAGGSIM",42,0)
 N MAGGIEN,MAGGXE
"RTN","MAGGSIM",43,0)
 N I,J,X,Y,Z
"RTN","MAGGSIM",44,0)
 ;
"RTN","MAGGSIM",45,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGSERR"
"RTN","MAGGSIM",46,0)
 ;
"RTN","MAGGSIM",47,0)
 I ($D(MAGARRAY)<10) S MAGRY="0^No input data, Operation CANCELED" Q
"RTN","MAGGSIM",48,0)
 ;
"RTN","MAGGSIM",49,0)
 S MAGRY="0^Creating VistA Image Entry..."
"RTN","MAGGSIM",50,0)
 S MAGERR="",MAGGRP=0,GRPCT=1,WPCT=0
"RTN","MAGGSIM",51,0)
 ;
"RTN","MAGGSIM",52,0)
 ;  Validate the Data, and Action codes in the Input Array
"RTN","MAGGSIM",53,0)
 D VAL^MAGGSIV(.MAGVY,.MAGARRAY) I 'MAGVY(0) S MAGRY=MAGVY(0) Q
"RTN","MAGGSIM",54,0)
 ;
"RTN","MAGGSIM",55,0)
 ;
"RTN","MAGGSIM",56,0)
 ;  Make the FileMan FDA array and the Imaging Action array.
"RTN","MAGGSIM",57,0)
 D MAKEFDA^MAGGSIU2(.MAGGFDA,.MAGARRAY,.MAGACT,.MAGCHLD,.MAGGRP,.MAGGWP)
"RTN","MAGGSIM",58,0)
 ;
"RTN","MAGGSIM",59,0)
 I '$D(MAGACT("IEN")) S MAGRY="0^You Need to send the IEN" Q
"RTN","MAGGSIM",60,0)
 ;
"RTN","MAGGSIM",61,0)
 I '$D(MAGGFDA(2005,"+1,")) S MAGRY="0^No data to file.  Operation CANCELED." Q
"RTN","MAGGSIM",62,0)
 ;
"RTN","MAGGSIM",63,0)
 S TEMPIEN=MAGACT("IEN")_","
"RTN","MAGGSIM",64,0)
 M MAGTEMP(2005,TEMPIEN)=MAGGFDA(2005,"+1,") K MAGGFDA
"RTN","MAGGSIM",65,0)
 M MAGGFDA=MAGTEMP K MAGTEMP
"RTN","MAGGSIM",66,0)
 ;
"RTN","MAGGSIM",67,0)
 D FILE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGSIM",68,0)
 ; We shouldn't have errors, because the data was validated before the call
"RTN","MAGGSIM",69,0)
 ; But we'll still check for errors.
"RTN","MAGGSIM",70,0)
 I $D(DIERR) D  S MAGRY=MAGERR Q
"RTN","MAGGSIM",71,0)
 . D RTRNERR(.MAGERR)
"RTN","MAGGSIM",72,0)
 . D CLEAN^DILF
"RTN","MAGGSIM",73,0)
 ;
"RTN","MAGGSIM",74,0)
 ;S MAGRY="1^OK"         
"RTN","MAGGSIM",75,0)
 D ACTION^MAGGTAU("MOD^"_MAGGFDA(2005,"+1,",5)_"^"_$G(MAGACT("IEN")))
"RTN","MAGGSIM",76,0)
 ;
"RTN","MAGGSIM",77,0)
 ;Q
"RTN","MAGGSIM",78,0)
 ;  THE REST OF THIS IS FROM IMAGE ADD, DON'T KNOW YET WHAT
"RTN","MAGGSIM",79,0)
 ;  WE NEED TO CHECK or are going to allow from the GUI.
"RTN","MAGGSIM",80,0)
 ;
"RTN","MAGGSIM",81,0)
 ; IF THE IEN is a group, Modify GROUP PARENT in each Group Object and QUIT
"RTN","MAGGSIM",82,0)
 ;
"RTN","MAGGSIM",83,0)
 I MAGGRP D UPDCHLD(.MAGCHLD,MAGACT("IEN")) S MAGRY="1^OK" Q
"RTN","MAGGSIM",84,0)
 ; 
"RTN","MAGGSIM",85,0)
 I $G(MAGGFDA(2005,"+1,",14)) D  I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIM",86,0)
 . D UPDPAR(.MAGERR,MAGGFDA(2005,"+1,",14),.MAGACT,MAGACT("IEN"))
"RTN","MAGGSIM",87,0)
 Q
"RTN","MAGGSIM",88,0)
UPDPAR(MAGERR,MAGRPDA,MAGACT,MAGGDA) ;
"RTN","MAGGSIM",89,0)
 ; We're here beceause this image is a member of a Group
"RTN","MAGGSIM",90,0)
 ;   so we will modify the Group Parent, adding this to it's group
"RTN","MAGGSIM",91,0)
 ; HERE we will also send the 'Series Number' and 'Image Number' if
"RTN","MAGGSIM",92,0)
 ; they exist;
"RTN","MAGGSIM",93,0)
 N MAGFDA
"RTN","MAGGSIM",94,0)
 S Y="+2,"_MAGRPDA_","
"RTN","MAGGSIM",95,0)
 S MAGFDA(2005.04,Y,.01)=MAGGDA
"RTN","MAGGSIM",96,0)
 ; DICOM SERIES AND IMAGE NUMBER CAN BE ANYTHING, WE CAN'T CHECK FOR +X
"RTN","MAGGSIM",97,0)
 I $L($G(MAGACT("DICOMSN"))) S MAGFDA(2005.04,Y,1)=MAGACT("DICOMSN")
"RTN","MAGGSIM",98,0)
 I $L($G(MAGACT("DICOMIN"))) S MAGFDA(2005.04,Y,2)=MAGACT("DICOMIN")
"RTN","MAGGSIM",99,0)
 D UPDATE^DIE("S","MAGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGSIM",100,0)
 ;   in case of an error
"RTN","MAGGSIM",101,0)
 I $D(DIERR) D RTRNERR(.MAGERR)
"RTN","MAGGSIM",102,0)
 D CLEAN^DILF
"RTN","MAGGSIM",103,0)
 Q
"RTN","MAGGSIM",104,0)
 ;
"RTN","MAGGSIM",105,0)
UPDCHLD(MAGCHLD,MAGGDA) ;
"RTN","MAGGSIM",106,0)
 S Z=""
"RTN","MAGGSIM",107,0)
 F  S Z=$O(MAGCHLD(Z)) Q:Z=""  D
"RTN","MAGGSIM",108,0)
 . S $P(^MAG(2005,Z,0),U,10)=MAGGDA
"RTN","MAGGSIM",109,0)
 . ; TODO;  have to modify the parent global root, ( delete it if 
"RTN","MAGGSIM",110,0)
 . ; this image was assigned as a single to the wrong parent )
"RTN","MAGGSIM",111,0)
 Q
"RTN","MAGGSIM",112,0)
RTRNERR(ETXT) ; There was error from FILE^DIE quit with error text
"RTN","MAGGSIM",113,0)
 S ETXT="0^ERROR  "_MAGGXE("DIERR",1,"TEXT",1)
"RTN","MAGGSIM",114,0)
 Q
"RTN","MAGGSIU1")
0^47^B13472953
"RTN","MAGGSIU1",1,0)
MAGGSIU1 ;WOIFO/GEK - Utilities for Image Add/Modify ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIU1",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSIU1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU1",10,0)
 ;; |                                                               |
"RTN","MAGGSIU1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU1",17,0)
 ;;
"RTN","MAGGSIU1",18,0)
 Q
"RTN","MAGGSIU1",19,0)
 ;
"RTN","MAGGSIU1",20,0)
 ; GEK 11/04/2002  Keep MAGGTU1 as utility for DA2NAME and DRIVE
"RTN","MAGGSIU1",21,0)
 ;
"RTN","MAGGSIU1",22,0)
MAKENAME(MAGGFDA) ; get info from the MAGGFDA array
"RTN","MAGGSIU1",23,0)
 ;  For all Images the Name (.01) is first 18 characters of patient name 
"RTN","MAGGSIU1",24,0)
 ;    concatenated with SSN.
"RTN","MAGGSIU1",25,0)
 ;  If No patient name is sent, well make the name from the short desc.
"RTN","MAGGSIU1",26,0)
 ;  We were making name of : 
"RTN","MAGGSIU1",27,0)
 ;    $E(PATENT NAME,1,10)' '$E(DESC CATEG,1,9)' 'MM/DD/YY   (DOC DATE)
"RTN","MAGGSIU1",28,0)
 N ZDESC,X
"RTN","MAGGSIU1",29,0)
 S ZDESC=""
"RTN","MAGGSIU1",30,0)
 ; If we don't have a patient name ( later) we set .01 to Short Desc 
"RTN","MAGGSIU1",31,0)
 ; if it exists.
"RTN","MAGGSIU1",32,0)
 I $D(MAGGFDA(2005,"+1,",10)) S ZDESC=$E(MAGGFDA(2005,"+1,",10),1,30)
"RTN","MAGGSIU1",33,0)
 ;                   DFN
"RTN","MAGGSIU1",34,0)
 I $D(MAGGFDA(2005,"+1,",5)) D
"RTN","MAGGSIU1",35,0)
 . S X=MAGGFDA(2005,"+1,",5)
"RTN","MAGGSIU1",36,0)
 . ;                NAME                        SSN
"RTN","MAGGSIU1",37,0)
 . S ZDESC=$E($P(^DPT(X,0),U),1,18)_"   "_$P(^DPT(X,0),U,9)
"RTN","MAGGSIU1",38,0)
 ;
"RTN","MAGGSIU1",39,0)
 Q ZDESC
"RTN","MAGGSIU1",40,0)
MAKECLAS ; Patch 8: This call will attempt to compute an Image CLASS ^ (#41) CLASS [2P] 
"RTN","MAGGSIU1",41,0)
 ; from the TYPE Field   (#42) TYPE [3P]  
"RTN","MAGGSIU1",42,0)
 ; Call assumes the FM FDA Array MAGGFDA exists.
"RTN","MAGGSIU1",43,0)
 ;// Note : this is also called from MAGGTIA. TYPE may not exist.
"RTN","MAGGSIU1",44,0)
 ; Calling RTN expects MAGERR to exist if error.
"RTN","MAGGSIU1",45,0)
 N TYPE,CLS
"RTN","MAGGSIU1",46,0)
 S TYPE=$G(MAGGFDA(2005,"+1,",42))
"RTN","MAGGSIU1",47,0)
 ; Can't make Type required.  yet.
"RTN","MAGGSIU1",48,0)
 ;I TYPE="" S MAGERR="0^A Value for Field #42 (Image Type) is missing." Q
"RTN","MAGGSIU1",49,0)
 I TYPE="" Q
"RTN","MAGGSIU1",50,0)
 S CLS=$P(^MAG(2005.83,TYPE,0),U,2)
"RTN","MAGGSIU1",51,0)
 I 'CLS S MAGERR="0^Missing Class pointer for TYPE : "_$P(^MAG(2005.83,TYPE,0),U)_" ("_TYPE_")" Q
"RTN","MAGGSIU1",52,0)
 S MAGGFDA(2005,"+1,",41)=CLS
"RTN","MAGGSIU1",53,0)
 Q
"RTN","MAGGSIU1",54,0)
MAKEPKG ;Patch 8 This call will attempt to compute the field (#40) PACKAGE INDEX [1S] from Patent Data File.
"RTN","MAGGSIU1",55,0)
 ; Call assumes the FM FDA Array MAGGFDA exists.
"RTN","MAGGSIU1",56,0)
 N PARENT,PKG,PXIEN,MAGRY,OK,TYPE
"RTN","MAGGSIU1",57,0)
 S PARENT=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIU1",58,0)
 S TYPE=$G(MAGGFDA(2005,"+1,",42))
"RTN","MAGGSIU1",59,0)
 I (PARENT="")&(TYPE=$$PHOTODA) D  Q
"RTN","MAGGSIU1",60,0)
 . S MAGGFDA(2005,"+1,",40)="PHOTOID"
"RTN","MAGGSIU1",61,0)
 . ;  Need next line, bacause the Method that returns Photo ID for a Pat.
"RTN","MAGGSIU1",62,0)
 . ;  checks for PHOTO ID in the Cross Reference.
"RTN","MAGGSIU1",63,0)
 . S MAGGFDA(2005,"+1,",6)="PHOTO ID"
"RTN","MAGGSIU1",64,0)
 . Q
"RTN","MAGGSIU1",65,0)
 I PARENT="" S MAGGFDA(2005,"+1,",40)="NONE" Q  ;MAGERR="0^Missing Parent Data File pointer" Q
"RTN","MAGGSIU1",66,0)
 I PARENT'=8925 S PKG=$P(^MAG(2005.03,PARENT,2),U) Q
"RTN","MAGGSIU1",67,0)
 S PXIEN=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIU1",68,0)
 D DATA^MAGGNTI(.MAGRY,PXIEN)
"RTN","MAGGSIU1",69,0)
 D ISCP^TIUCP(.OK,$P(MAGRY,U,2)) I OK S MAGGFDA(2005,"+1,",40)="CP" Q
"RTN","MAGGSIU1",70,0)
 D ISCNSLT^TIUCNSLT(.OK,$P(MAGRY,U,2)) I OK S MAGGFDA(2005,"+1,",40)="CONS" Q
"RTN","MAGGSIU1",71,0)
 S MAGGFDA(2005,"+1,",40)="NOTE"
"RTN","MAGGSIU1",72,0)
 Q
"RTN","MAGGSIU1",73,0)
MAKEPROC ; Patch 8: This call will attempt to compute PROCEDURE field  ^ (#6) PROCEDURE [8F] 
"RTN","MAGGSIU1",74,0)
 ; from Fields:   (#41) CLASS [2P]  or PACKAGE field (#40) PACKAGE [1S]
"RTN","MAGGSIU1",75,0)
 ; Call assumes the FM FDA Array MAGGFDA exists.
"RTN","MAGGSIU1",76,0)
 ; We are here because TYPE INDEX, CLASS INDEX and PACKAGE INDEX exist but PROCEDURE doesn't 
"RTN","MAGGSIU1",77,0)
 ; Calling RTN expects MAGERR to exist if error. ; 
"RTN","MAGGSIU1",78,0)
 N TYPE,CLS,PKG
"RTN","MAGGSIU1",79,0)
 I $G(MAGGFDA(2005,"+1,",40),"NONE")'="NONE" S MAGGFDA(2005,"+1,",6)=MAGGFDA(2005,"+1,",40) Q 
"RTN","MAGGSIU1",80,0)
 S TYPE=$G(MAGGFDA(2005,"+1,",42))
"RTN","MAGGSIU1",81,0)
 ; Can't make Type required.  yet.
"RTN","MAGGSIU1",82,0)
 S CLS=$P(^MAG(2005.83,TYPE,0),U,2)
"RTN","MAGGSIU1",83,0)
 I 'CLS S MAGERR="0^Missing Class pointer for TYPE : "_$P(^MAG(2005.83,TYPE,0),U)_" ("_TYPE_")" Q
"RTN","MAGGSIU1",84,0)
 S MAGGFDA(2005,"+1,",6)=$P($$GET1^DIQ(2005.82,CLS,".01","E"),"/")
"RTN","MAGGSIU1",85,0)
 Q
"RTN","MAGGSIU1",86,0)
MAKEORIG ; Patch 8: This call will default the Origin field #45 to "VA"
"RTN","MAGGSIU1",87,0)
 ; We are here because TYPE exists in the Array but Origin doesn't
"RTN","MAGGSIU1",88,0)
 S MAGGFDA(2005,"+1,",45)="VA"
"RTN","MAGGSIU1",89,0)
 Q
"RTN","MAGGSIU1",90,0)
KILLENT(MAGGDA) ; Delete the entry just created, because of Post processing Error
"RTN","MAGGSIU1",91,0)
 D CLEAN^DILF
"RTN","MAGGSIU1",92,0)
 S DA=MAGGDA,DIK="^MAG(2005," D ^DIK
"RTN","MAGGSIU1",93,0)
 K DA,DIC,DIK
"RTN","MAGGSIU1",94,0)
 Q
"RTN","MAGGSIU1",95,0)
RTRNERR(ETXT,MAGGXE) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGSIU1",96,0)
 S ETXT="0^ERROR  "_MAGGXE("DIERR",1,"TEXT",1)
"RTN","MAGGSIU1",97,0)
 Q
"RTN","MAGGSIU1",98,0)
PHOTODA() ;Return the DA from File IMAGE INDEX FOR TYPES that is the PhotoID entry.
"RTN","MAGGSIU1",99,0)
 Q $O(^MAG(2005.83,"B","PHOTO ID",""))
"RTN","MAGGSIU2")
0^73^B8027721
"RTN","MAGGSIU2",1,0)
MAGGSIU2 ;WOIFO/GEK - Utilities for Image Add/Modify ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIU2",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSIU2",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU2",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU2",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU2",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU2",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU2",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU2",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU2",10,0)
 ;; |                                                               |
"RTN","MAGGSIU2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU2",17,0)
 ;;
"RTN","MAGGSIU2",18,0)
 Q
"RTN","MAGGSIU2",19,0)
MAKEFDA(MAGGFDA,MAGARRAY,MAGACT,MAGCHLD,MAGGRP,MAGGWP) ;
"RTN","MAGGSIU2",20,0)
 ;  Create the FileMan FDA Array
"RTN","MAGGSIU2",21,0)
 ;  Create Imaging Action Codes Array (for Pre and Post processing)
"RTN","MAGGSIU2",22,0)
 N MAGGFLD,MAGGDAT,GRPCT,WPCT,Z
"RTN","MAGGSIU2",23,0)
 S Z="" F  S Z=$O(MAGARRAY(Z)) Q:Z=""  D  I $L(MAGERR) Q
"RTN","MAGGSIU2",24,0)
 . S MAGGFLD=$P(MAGARRAY(Z),U,1),MAGGDAT=$P(MAGARRAY(Z),U,2,99)
"RTN","MAGGSIU2",25,0)
 . ;  If this entry is one of the action codes, store it in the action array.
"RTN","MAGGSIU2",26,0)
 . I $$ACTCODE^MAGGSIV(MAGGFLD) S MAGACT(MAGGFLD)=MAGGDAT Q
"RTN","MAGGSIU2",27,0)
 . ;
"RTN","MAGGSIU2",28,0)
 . ; If we are Creating a Group Entry, add any Images that are to be members of this group.
"RTN","MAGGSIU2",29,0)
 . I MAGGFLD=2005.04 D  Q
"RTN","MAGGSIU2",30,0)
 . . S MAGGRP=1
"RTN","MAGGSIU2",31,0)
 . . I '+MAGGDAT Q  ; making a group entry, with no group entries yet. This is OK.
"RTN","MAGGSIU2",32,0)
 . . S MAGCHLD(MAGGDAT)=""
"RTN","MAGGSIU2",33,0)
 . . S GRPCT=GRPCT+1
"RTN","MAGGSIU2",34,0)
 . . S MAGGFDA(2005.04,"+"_GRPCT_",+1,",.01)=MAGGDAT
"RTN","MAGGSIU2",35,0)
 . ;
"RTN","MAGGSIU2",36,0)
 . ; if we are getting a WP for Long Desc, set array to pass.
"RTN","MAGGSIU2",37,0)
 . I MAGGFLD=11 D  ; this is one line of the WP Long Desc field.
"RTN","MAGGSIU2",38,0)
 . . S WPCT=WPCT+1,MAGGWP(WPCT)=MAGGDAT
"RTN","MAGGSIU2",39,0)
 . . S MAGGFDA(2005,"+1,",11)="MAGGWP"
"RTN","MAGGSIU2",40,0)
 . ;  Set the Node for the UPDATE^DIC Call.
"RTN","MAGGSIU2",41,0)
 . S MAGGFDA(2005,"+1,",MAGGFLD)=MAGGDAT
"RTN","MAGGSIU2",42,0)
 . Q
"RTN","MAGGSIU2",43,0)
 ; Patch 8.  Special processing for field 107 (ACQUISITION DEVICE)
"RTN","MAGGSIU2",44,0)
 ;  We'll change any MAGGFDA(2005,"+1,",107) to MAGACT("ACQD")
"RTN","MAGGSIU2",45,0)
 ;  This way the PRE processing of the array will check and create a new
"RTN","MAGGSIU2",46,0)
 ;  ACQUISITION DEVICE file entry, if needed. 
"RTN","MAGGSIU2",47,0)
 I $D(MAGACT("107")) S MAGACT("ACQD")=MAGACT("107") K MAGACT("107")
"RTN","MAGGSIU2",48,0)
 I $D(MAGGFDA(2005,"+1,",107)) S MAGACT("ACQD")=MAGGFDA(2005,"+1,",107) K MAGGFDA(2005,"+1,",107)
"RTN","MAGGSIU2",49,0)
 Q
"RTN","MAGGSIU3")
0^40^B23025825
"RTN","MAGGSIU3",1,0)
MAGGSIU3 ;WOIFO/GEK - Utilities 
"RTN","MAGGSIU3",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSIU3",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU3",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU3",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU3",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU3",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU3",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU3",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU3",10,0)
 ;; |                                                               |
"RTN","MAGGSIU3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU3",17,0)
 ;;
"RTN","MAGGSIU3",18,0)
 Q
"RTN","MAGGSIU3",19,0)
LOG(MAGRY,MAGIX,IMAGES,PAT,WRKS,TRKID) ;Utilities for Import API, logging data for tracking and debugging 
"RTN","MAGGSIU3",20,0)
 ; into Imaging Windows Session and Imaging Windows Workstation files.
"RTN","MAGGSIU3",21,0)
 N WRKSIEN,WRKSN0,USERSRV,MAGSTART,I,SESSIEN,X,Z
"RTN","MAGGSIU3",22,0)
 I '$L($G(WRKS)) S WRKS="NULL WORKSTATION NAME"
"RTN","MAGGSIU3",23,0)
 S WRKSIEN=0
"RTN","MAGGSIU3",24,0)
 S SESSIEN=0
"RTN","MAGGSIU3",25,0)
 S WRKSIEN=$O(^MAG(2006.81,"B",WRKS,""))
"RTN","MAGGSIU3",26,0)
 I 'WRKSIEN D NEWWRKS^MAGGTAU(WRKS,"",.WRKSIEN) I WRKSIEN<1 S MAGRY="0^Error Creating Workstation Entry." Q 0
"RTN","MAGGSIU3",27,0)
 ;
"RTN","MAGGSIU3",28,0)
 S WRKSN0=^MAG(2006.81,WRKSIEN,0) ; '0' node for use later.
"RTN","MAGGSIU3",29,0)
 S WRKSIEN=+WRKSIEN_","
"RTN","MAGGSIU3",30,0)
 S MAGGFDA(2006.81,WRKSIEN,.01)=WRKS ; Compter Name
"RTN","MAGGSIU3",31,0)
 S MAGGFDA(2006.81,WRKSIEN,8)=0 ; Active or not.
"RTN","MAGGSIU3",32,0)
 S MAGGFDA(2006.81,WRKSIEN,3)="@" ; delete logff time for this job.
"RTN","MAGGSIU3",33,0)
 S MAGGFDA(2006.81,WRKSIEN,10)="@" ; delete session pointer
"RTN","MAGGSIU3",34,0)
 S MAGGFDA(2006.81,WRKSIEN,11)="@" ; reset the session error count.
"RTN","MAGGSIU3",35,0)
 ;
"RTN","MAGGSIU3",36,0)
 ;
"RTN","MAGGSIU3",37,0)
 S MAGGFDA(2006.81,WRKSIEN,12.5)=$P(WRKSN0,U,14)+1 ; total Import Sessions for workstation
"RTN","MAGGSIU3",38,0)
 ;
"RTN","MAGGSIU3",39,0)
 S X=$$NOW^XLFDT
"RTN","MAGGSIU3",40,0)
 S MAGSTART=$E(X,1,12)
"RTN","MAGGSIU3",41,0)
 I $G(DUZ) D 
"RTN","MAGGSIU3",42,0)
 . S MAGGFDA(2006.81,WRKSIEN,1)=DUZ
"RTN","MAGGSIU3",43,0)
 . S MAGGFDA(2006.81,WRKSIEN,2)=MAGSTART
"RTN","MAGGSIU3",44,0)
 ;
"RTN","MAGGSIU3",45,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGSIU3",46,0)
 I $D(DIERR) D RTRNERR^MAGGTAU(.MAGRY) Q 0
"RTN","MAGGSIU3",47,0)
 ; 
"RTN","MAGGSIU3",48,0)
 S MAGRY="1^"
"RTN","MAGGSIU3",49,0)
 ;
"RTN","MAGGSIU3",50,0)
 ; SESSION : Now here we have to create a new session entry;
"RTN","MAGGSIU3",51,0)
 ; //TODO, make a generic call to create a Session entry, this is 
"RTN","MAGGSIU3",52,0)
 ;   a duplicate of code in MAGGTAU
"RTN","MAGGSIU3",53,0)
 D GETS^DIQ(200,DUZ_",","29","I","Z","") ; service/section
"RTN","MAGGSIU3",54,0)
 S USERSRV=$G(Z(200,DUZ_",",29,"I"))
"RTN","MAGGSIU3",55,0)
 ;
"RTN","MAGGSIU3",56,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGSIU3",57,0)
 S MAGGFDA(2006.82,"+1,",.01)=$P(^VA(200,DUZ,0),U,1) ; User
"RTN","MAGGSIU3",58,0)
 S MAGGFDA(2006.82,"+1,",1)=DUZ ; USER
"RTN","MAGGSIU3",59,0)
 S MAGGFDA(2006.82,"+1,",2)=MAGSTART ; Session Start Time
"RTN","MAGGSIU3",60,0)
 S MAGGFDA(2006.82,"+1,",4)=+WRKSIEN ; Workstation 
"RTN","MAGGSIU3",61,0)
 I $D(^DPT(+PAT,0)) S MAGGFDA(2006.82,"+1,",5)=+PAT ; Patient 
"RTN","MAGGSIU3",62,0)
 S MAGGFDA(2006.82,"+1,",7)=+USERSRV ; User's Service/Section pointer
"RTN","MAGGSIU3",63,0)
 S MAGGFDA(2006.82,"+1,",13)=3 ; 1=normal 2= started by CPRS 3= Import API session.
"RTN","MAGGSIU3",64,0)
 S MAGGFDA(2006.82,"+1,",8)=$G(TRKID) ; Tracking ID
"RTN","MAGGSIU3",65,0)
 ;
"RTN","MAGGSIU3",66,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGSIU3",67,0)
 I $D(DIERR) D RTRNERR^MAGGTAU(.MAGRY) Q 0
"RTN","MAGGSIU3",68,0)
 S MAGRY="1^"
"RTN","MAGGSIU3",69,0)
 I '+MAGXIEN(1) S MAGRY="0^" Q 0
"RTN","MAGGSIU3",70,0)
 S SESSIEN=+MAGXIEN(1)
"RTN","MAGGSIU3",71,0)
 S MAGRY=SESSIEN_"^Session # "_SESSIEN_" Started."
"RTN","MAGGSIU3",72,0)
 S MAGGFDA(2006.81,+WRKSIEN_",",10)=SESSIEN
"RTN","MAGGSIU3",73,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGSIU3",74,0)
 D ACTION^MAGGTAU("IMPORT^",0,SESSIEN)       ;
"RTN","MAGGSIU3",75,0)
 S I="" F  S I=$O(MAGIX(I)) Q:I=""  D ACTION^MAGGTAU("Data:|"_"("_I_"): "_$TR(MAGIX(I),"^","~"),0,SESSIEN)
"RTN","MAGGSIU3",76,0)
 S I="" F  S I=$O(IMAGES(I)) Q:I=""  D ACTION^MAGGTAU("Image:|"_"("_I_"): "_$TR(IMAGES(I),"^","~"),0,SESSIEN)
"RTN","MAGGSIU3",77,0)
 Q SESSIEN
"RTN","MAGGSIU3",78,0)
LOGRES(RES,LOGTM,MAGSESS) ;
"RTN","MAGGSIU3",79,0)
 N I
"RTN","MAGGSIU3",80,0)
 S LOGTM=+$G(LOGTM)
"RTN","MAGGSIU3",81,0)
 I '$G(MAGSESS) Q
"RTN","MAGGSIU3",82,0)
 D ACTION^MAGGTAU("RESULTS^",1,MAGSESS)       ;
"RTN","MAGGSIU3",83,0)
 S I="" F  S I=$O(RES(I)) Q:I=""  D ACTION^MAGGTAU("Result:|"_"("_I_"): "_$TR(RES(I),"^","~"),LOGTM,MAGSESS)
"RTN","MAGGSIU3",84,0)
 Q
"RTN","MAGGSIU3",85,0)
INPRC(RET,ARR) ; gek/Duplicate Import check
"RTN","MAGGSIU3",86,0)
 ; gek/stop duplicates. Import now has a status in the Session File.
"RTN","MAGGSIU3",87,0)
 ; ^MAG(2006.82,"STATUS",TRKID,SESSION IEN)= status
"RTN","MAGGSIU3",88,0)
 ; INPRC tells if the Session (by Tracking ID) is in process  or not.
"RTN","MAGGSIU3",89,0)
 ; if In Procress, we won't return the data.
"RTN","MAGGSIU3",90,0)
 ; INPRC will set the status to In Process if not currently in process.
"RTN","MAGGSIU3",91,0)
 N I,SESS,STAT,TRKID
"RTN","MAGGSIU3",92,0)
 S TRKID=0
"RTN","MAGGSIU3",93,0)
 S I="" F  S I=$O(ARR(I)) Q:I=""  D
"RTN","MAGGSIU3",94,0)
 . S FLD=$P(ARR(I),"^",1) I (FLD=108)!(FLD="TRKID") D
"RTN","MAGGSIU3",95,0)
 . . S TRKID=$P(ARR(I),"^",2)
"RTN","MAGGSIU3",96,0)
 . . Q
"RTN","MAGGSIU3",97,0)
 . Q
"RTN","MAGGSIU3",98,0)
 I TRKID="" S RET="0^Null value for Tracking ID." Q 0
"RTN","MAGGSIU3",99,0)
 S RET="0^This tracking ID: "_TRKID_" isn't being processed"
"RTN","MAGGSIU3",100,0)
 I '$D(^MAG(2006.82,"E",TRKID)) Q 0
"RTN","MAGGSIU3",101,0)
 S SESS=$$SES4TRK(TRKID) Q:'SESS 0  ; This tracking ID isn't being processed yet.
"RTN","MAGGSIU3",102,0)
 S STAT=$$GETSTAT(TRKID,SESS)
"RTN","MAGGSIU3",103,0)
 I 'STAT D SETSTAT(TRKID,SESS,"-5") Q 0  ; -5 means In Process
"RTN","MAGGSIU3",104,0)
 ; If in process we return 1
"RTN","MAGGSIU3",105,0)
 I (+STAT=-5) D  Q 1
"RTN","MAGGSIU3",106,0)
 . S RET="0^Import for Tracking ID: "_TRKID_" has been processed."
"RTN","MAGGSIU3",107,0)
 Q 0
"RTN","MAGGSIU3",108,0)
SES4TRK(TRKID) ; Returns the Session ID for a Tracking ID
"RTN","MAGGSIU3",109,0)
 Q +$O(^MAG(2006.82,"E",TRKID,""),-1)
"RTN","MAGGSIU3",110,0)
 ;
"RTN","MAGGSIU3",111,0)
GETSTAT(TRKID,SESS) ; Get Status for given Tracking ID and Session ID
"RTN","MAGGSIU3",112,0)
 Q $G(^MAG(2006.82,"STATUS",TRKID,SESS))
"RTN","MAGGSIU3",113,0)
 ;
"RTN","MAGGSIU3",114,0)
SETSTAT(TRKID,SESS,STAT) ; Set Status for given Tracking ID and Session ID
"RTN","MAGGSIU3",115,0)
 S ^MAG(2006.82,"STATUS",TRKID,SESS)=STAT
"RTN","MAGGSIU3",116,0)
 Q
"RTN","MAGGSIUI")
0^42^B57037227
"RTN","MAGGSIUI",1,0)
MAGGSIUI ;WOIFO/GEK - Utilities for Image Import API
"RTN","MAGGSIUI",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSIUI",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIUI",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIUI",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIUI",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIUI",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIUI",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIUI",10,0)
 ;; |                                                               |
"RTN","MAGGSIUI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIUI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIUI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIUI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIUI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIUI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",17,0)
 ;;
"RTN","MAGGSIUI",18,0)
 Q
"RTN","MAGGSIUI",19,0)
REMOTE(MAGRY,MAGDATA) ;RPC [MAG4 REMOTE IMPORT]
"RTN","MAGGSIUI",20,0)
 ; To Import Images into VistA from a Windows App, by sending an array.
"RTN","MAGGSIUI",21,0)
 I ($D(MAGDATA)<10) S MAGRY(0)="0^Missing Data Array !." Q
"RTN","MAGGSIUI",22,0)
 N I,J,ICT,DCT,MAGIX,IMAGES,ERR,X,Z
"RTN","MAGGSIUI",23,0)
 S (ERR,ICT,DCT)=0
"RTN","MAGGSIUI",24,0)
 S I="" F  S I=$O(MAGDATA(I)) Q:I=""  S X=MAGDATA(I) D  Q:ERR
"RTN","MAGGSIUI",25,0)
 . S Z=$P(X,U)
"RTN","MAGGSIUI",26,0)
 . I (X="")!(Z="") S MAGRY(0)="0^INVALID Data in Input Array: Node "_I_"="""_X_"",ERR=1 Q
"RTN","MAGGSIUI",27,0)
 . I Z="IMAGE" S ICT=ICT+1,IMAGES(ICT)=$P(X,U,2,99) Q
"RTN","MAGGSIUI",28,0)
 . S DCT=DCT+1,MAGIX(Z)=$P(X,U,2,99)
"RTN","MAGGSIUI",29,0)
 I 'ERR D IMPORT(.MAGRY,.IMAGES,.MAGIX)
"RTN","MAGGSIUI",30,0)
 Q
"RTN","MAGGSIUI",31,0)
 ;
"RTN","MAGGSIUI",32,0)
IMPORT(MAGRY,IMAGES,MAGIX) ;
"RTN","MAGGSIUI",33,0)
 ; "IDFN","PXPKG","PXIEN","PXDT","TRKID","ACQD","ACQS","ACQL","STSCB","ITYPE",
"RTN","MAGGSIUI",34,0)
 ;        "CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT",
"RTN","MAGGSIUI",35,0)
 ;        "IXTYPE","IXSPEC","IXPROC","IXORIGIN    ;Patch 8: Added Index fields
"RTN","MAGGSIUI",36,0)
 ;
"RTN","MAGGSIUI",37,0)
 ;   Index fields Package and Class ("IXPKG" and "IXCLS") aren't accepted.  The values for those
"RTN","MAGGSIUI",38,0)
 ;     fields are computed.
"RTN","MAGGSIUI",39,0)
 ;We'll convert the parameters into the Image Data Array,
"RTN","MAGGSIUI",40,0)
 ;   validate it, then set the Import Queue
"RTN","MAGGSIUI",41,0)
 ;
"RTN","MAGGSIUI",42,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGSIUI"
"RTN","MAGGSIUI",43,0)
 K MAGRY S MAGRY(0)="0^Importing data..."
"RTN","MAGGSIUI",44,0)
 N APISESS
"RTN","MAGGSIUI",45,0)
 N PRM,CT,MAGA,MAGY,MAGTN,TNODE
"RTN","MAGGSIUI",46,0)
 N IDFN,PXPKG,PXIEN,PXDT,TRKID,ACQD,ACQS,ACQL,STSCB,ITYPE,CMTH,CDUZ,USERNAME,PASSWORD,GDESC,DFLG,TRTYPE,DOCCTG,DOCDT,IXPKG,IXCLS,IXTYPE,IXSPEC,IXPROC,IXORIGIN
"RTN","MAGGSIUI",47,0)
 N MAGTM,QTIME,MAGIXZ
"RTN","MAGGSIUI",48,0)
 S CT=0
"RTN","MAGGSIUI",49,0)
 M MAGIXZ=MAGIX
"RTN","MAGGSIUI",50,0)
 F PRM="IDFN","PXPKG","PXIEN","PXDT","TRKID","ACQD","ACQS","ACQL","STSCB","ITYPE","CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT","IXTYPE","IXSPEC","IXPROC","IXORIGIN" D
"RTN","MAGGSIUI",51,0)
 . S @PRM=$G(MAGIX(PRM)) K MAGIX(PRM) ; P8T14 added K.. and next line to account for field numbers later.
"RTN","MAGGSIUI",52,0)
 . Q
"RTN","MAGGSIUI",53,0)
 S PRM="" F  S PRM=$O(MAGIX(PRM)) Q:PRM=""  D SA(PRM,$G(MAGIX(PRM)))
"RTN","MAGGSIUI",54,0)
 ;
"RTN","MAGGSIUI",55,0)
 S MAGTM=$$NOW^XLFDT
"RTN","MAGGSIUI",56,0)
 I '$G(DUZ) S MAGRY(0)="0^DUZ is undefined." Q  ;D ERRTRK Q
"RTN","MAGGSIUI",57,0)
 ; DATATRK sets the Global Variable APISESS  = Internal entry number for Session File.
"RTN","MAGGSIUI",58,0)
 D DATATRK
"RTN","MAGGSIUI",59,0)
 I '$$REQPARAM() D ERRTRK Q
"RTN","MAGGSIUI",60,0)
 ;
"RTN","MAGGSIUI",61,0)
 ; Set the image data array
"RTN","MAGGSIUI",62,0)
 ;S CT=0
"RTN","MAGGSIUI",63,0)
 D SA(5,IDFN)    ;PATIENT
"RTN","MAGGSIUI",64,0)
 D SA(16,PXPKG)   ;PARENT DATA FILE
"RTN","MAGGSIUI",65,0)
 D SA(17,PXIEN) ;PARENT GLOBAL ROOT
"RTN","MAGGSIUI",66,0)
 D SA(15,PXDT)   ; PROCEDURE/EXAM DATE/TIME
"RTN","MAGGSIUI",67,0)
 D SA(108,TRKID) ; TRACKING ID (new)
"RTN","MAGGSIUI",68,0)
 D SA("ACQD",ACQD)  ; ACQUISTION DEVICE ( new )
"RTN","MAGGSIUI",69,0)
 ; Acquisition site is a 2 ';' piece param of INSTITUTION ';' HOSPITAL LOCATION  
"RTN","MAGGSIUI",70,0)
 ;//  ACQS had Location in it, doesn't now.
"RTN","MAGGSIUI",71,0)
 D SA(.05,ACQS) ; this used to be fld 105
"RTN","MAGGSIUI",72,0)
 D SA(101,ACQL)
"RTN","MAGGSIUI",73,0)
 ;// 5/7/03 Patch 8 : fix bug with ACQS and ACQL this ';' was old way of sending info.
"RTN","MAGGSIUI",74,0)
 ;//D SA("ACQS",ACQS_";"_$G(ACQL)) ;Fields of ACQUISITION DEVICE file: #1 INSTITUTION ';' #2 HOSPITAL LOCATION
"RTN","MAGGSIUI",75,0)
 D SA("STATUSCB",STSCB)  ; STATUS CALLBACK  (was refered to as ExceptionHandler)
"RTN","MAGGSIUI",76,0)
 D SA(3,ITYPE)   ; OBJECT TYPE
"RTN","MAGGSIUI",77,0)
 D SA("CALLMTH",CMTH)     ; CALL METHOD
"RTN","MAGGSIUI",78,0)
 D SA(8,CDUZ)    ; IMAGE SAVE BY
"RTN","MAGGSIUI",79,0)
 ; // It was USERPASS = USERNAME_";"_(encrypted)PASSWORD
"RTN","MAGGSIUI",80,0)
 D SA("USERNAME",USERNAME)
"RTN","MAGGSIUI",81,0)
 D SA("PASSWORD",PASSWORD)
"RTN","MAGGSIUI",82,0)
 D SA(10,GDESC)  ; SHORT DESCRIPTION
"RTN","MAGGSIUI",83,0)
 D SA("DELFLAG",DFLG)    ; DELETE FLAG
"RTN","MAGGSIUI",84,0)
 D SA("TRNSTYP",TRTYPE)  ; TRANSACTION TYPE
"RTN","MAGGSIUI",85,0)
 D SA(100,DOCCTG) ;  document Main category
"RTN","MAGGSIUI",86,0)
 ;D SA("DOCCTG2",DOCCTG2) ;  document Sub category
"RTN","MAGGSIUI",87,0)
 ;D SA("DOCCTG3",DOCCTG3) ;  document Sub Sub category
"RTN","MAGGSIUI",88,0)
 D SA(110,DOCDT)     ;  document date
"RTN","MAGGSIUI",89,0)
 ; Patch 8 allows Index fields to be imported.
"RTN","MAGGSIUI",90,0)
 ;"IXTYPE","IXSPEC","IXPROC","IXORIGIN"
"RTN","MAGGSIUI",91,0)
 D SA(42,IXTYPE)     ;  Index Type
"RTN","MAGGSIUI",92,0)
 D SA(43,IXPROC)     ;  Index Proc/Event
"RTN","MAGGSIUI",93,0)
 D SA(44,IXSPEC)     ;  Index Spec/SubSpec
"RTN","MAGGSIUI",94,0)
 D SA(45,IXORIGIN)         ;  Index Origin
"RTN","MAGGSIUI",95,0)
 ;
"RTN","MAGGSIUI",96,0)
 ;
"RTN","MAGGSIUI",97,0)
 D VAL^MAGGSIV(.MAGRY,.MAGA,1)
"RTN","MAGGSIUI",98,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",99,0)
 D SI("IMAGES",.IMAGES)  ; ARRAY OF IMAGES TO IMPORT
"RTN","MAGGSIUI",100,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",101,0)
 K MAGRY
"RTN","MAGGSIUI",102,0)
 ;
"RTN","MAGGSIUI",103,0)
 I TRTYPE="NOQUEUE" M MAGRY=MAGA S MAGRY(0)="1^" Q
"RTN","MAGGSIUI",104,0)
 ; Testing without BackGround Processor.
"RTN","MAGGSIUI",105,0)
 ;
"RTN","MAGGSIUI",106,0)
 ; This call is for BP
"RTN","MAGGSIUI",107,0)
 S QTIME=$$NOW^XLFDT
"RTN","MAGGSIUI",108,0)
 S MAGY=$$IMPORT^MAGBAPI(.MAGA,STSCB,TRKID,$$PLACE^MAGBAPI(DUZ(2))) ; DBI - SEB 10/11/2002
"RTN","MAGGSIUI",109,0)
 ; RETURN THE QUEUE NUMBER
"RTN","MAGGSIUI",110,0)
 I 'MAGY S MAGRY(0)="0^Error Setting Queue: "_$P(MAGY,U,2),MAGY=TRKID
"RTN","MAGGSIUI",111,0)
 E  S MAGRY(0)=MAGY_"^Data has been Queued.",MAGY=+MAGY
"RTN","MAGGSIUI",112,0)
 ; for Testing, we'll track input array, and results array by Queue number.
"RTN","MAGGSIUI",113,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",114,0)
 D LOGRES^MAGGSIU3(.MAGRY,0,APISESS)
"RTN","MAGGSIUI",115,0)
 ;
"RTN","MAGGSIUI",116,0)
 Q
"RTN","MAGGSIUI",117,0)
REQPARAM() ;Check that the required parameters have values.
"RTN","MAGGSIUI",118,0)
 N CT
"RTN","MAGGSIUI",119,0)
 S CT=0
"RTN","MAGGSIUI",120,0)
 S MAGRY(0)="1^Checking for Required parameter values..."
"RTN","MAGGSIUI",121,0)
 I IDFN="" S CT=CT+1,MAGRY(CT)="DFN is Required. !"
"RTN","MAGGSIUI",122,0)
 I '$D(IMAGES),'CMTH S CT=CT+1,MAGRY(CT)="List of Images is Required. !"
"RTN","MAGGSIUI",123,0)
 ;
"RTN","MAGGSIUI",124,0)
 I (PXPKG=""),(DOCCTG=""),(IXTYPE="") S CT=CT+1,MAGRY(CT)="Procedure or Category or Index Type is Required. !"
"RTN","MAGGSIUI",125,0)
 I (PXPKG'=""),(DOCCTG'="") S CT=CT+1,MAGRY(CT)="Procedure OR Document Category. Not BOTH. !"
"RTN","MAGGSIUI",126,0)
 ;
"RTN","MAGGSIUI",127,0)
 I (PXPKG'=""),(PXIEN="") S CT=CT+1,MAGRY(CT)="Procedure IEN is Required. !"
"RTN","MAGGSIUI",128,0)
 I (PXPKG=""),(PXIEN'="") S CT=CT+1,MAGRY(CT)="Procedure Package is Required. !"
"RTN","MAGGSIUI",129,0)
 I (PXPKG'=""),(PXDT="") S CT=CT+1,MAGRY(CT)="Procedure Date is Required. !"
"RTN","MAGGSIUI",130,0)
 ;
"RTN","MAGGSIUI",131,0)
 ;Patch 8 index field check... could be using Patch 7 or Patch 8.
"RTN","MAGGSIUI",132,0)
 ;  We're this far, so either PXIEN or DOCCTG is defined
"RTN","MAGGSIUI",133,0)
 I (IXTYPE'=""),(DOCCTG'="") S CT=CT+1,MAGRY(CT)="Image Type OR Document Category. Not BOTH. !"
"RTN","MAGGSIUI",134,0)
 ; MAGGSIA computes PACKAGE #40 and CLASS #41 when adding an Image (2005) entry.
"RTN","MAGGSIUI",135,0)
 ;
"RTN","MAGGSIUI",136,0)
 I TRKID="" S CT=CT+1,MAGRY(CT)="Tracking ID is Required. !"
"RTN","MAGGSIUI",137,0)
 I ACQD="" S CT=CT+1,MAGRY(CT)="Acquisition Device is Required. !"
"RTN","MAGGSIUI",138,0)
 ;   ACQS ( could ? ) default to users institution i.e. DUZ(2)
"RTN","MAGGSIUI",139,0)
 I ACQS="" S CT=CT+1,MAGRY(CT)="Acquisition Site is Required. !"
"RTN","MAGGSIUI",140,0)
 ;
"RTN","MAGGSIUI",141,0)
 I STSCB="" S CT=CT+1,MAGRY(CT)="Status Handler (TAG^ROUTINE) is Required. !"
"RTN","MAGGSIUI",142,0)
 ;
"RTN","MAGGSIUI",143,0)
 I (DOCCTG'=""),(DOCDT="") S CT=CT+1,MAGRY(CT)="Document Date is Required. !"
"RTN","MAGGSIUI",144,0)
 ;
"RTN","MAGGSIUI",145,0)
 I (CT>0) S MAGRY(0)="0^Required parameter is null" Q MAGRY(0)
"RTN","MAGGSIUI",146,0)
 ; More Checks here to stop Duplicate or incorrect Tracking ID's from being Queued
"RTN","MAGGSIUI",147,0)
 ;  //TODO: Need to check the Queue File, to see if this Tracking ID is already Queued.
"RTN","MAGGSIUI",148,0)
 I (TRKID'="") I $D(^MAG(2005,"ATRKID",TRKID)) S MAGRY(0)="0^Tracking ID Must be Unique !"
"RTN","MAGGSIUI",149,0)
 I (TRKID'="") I ($L(TRKID,";")<2) S MAGRY(0)="0^Tracking ID Must have "";"" Delimiter"
"RTN","MAGGSIUI",150,0)
 ;
"RTN","MAGGSIUI",151,0)
 Q MAGRY(0)
"RTN","MAGGSIUI",152,0)
 ;
"RTN","MAGGSIUI",153,0)
SA(FLD,VAL) ;Set the data array with Fld,Value
"RTN","MAGGSIUI",154,0)
 Q:VAL=""
"RTN","MAGGSIUI",155,0)
 S CT=CT+1,MAGA(CT)=FLD_U_VAL
"RTN","MAGGSIUI",156,0)
 Q
"RTN","MAGGSIUI",157,0)
SI(FLD,ARR) ;Set the images into the data array
"RTN","MAGGSIUI",158,0)
 ; Don't New 'CT' it is a global variable.
"RTN","MAGGSIUI",159,0)
 S MAGRY(0)="1^Valid Image file Extensions."
"RTN","MAGGSIUI",160,0)
 N I,MAGEXT,MAGFN
"RTN","MAGGSIUI",161,0)
 S I="" F  S I=$O(ARR(I)) Q:I=""  D  Q:'MAGRY(0)
"RTN","MAGGSIUI",162,0)
 . S CT=CT+1
"RTN","MAGGSIUI",163,0)
 . I '($L($P(ARR(I),U),".")=2) S MAGRY(0)="0^Invalid file name: "_ARR(I) Q
"RTN","MAGGSIUI",164,0)
 . S MAGFN=$P(ARR(I),"^")
"RTN","MAGGSIUI",165,0)
 . S MAGEXT=$$UP^XLFSTR($P(MAGFN,".",2))
"RTN","MAGGSIUI",166,0)
 . I '$D(^MAG(2005.021,"B",MAGEXT)) S MAGRY(0)="0^Unsupported File Type:'."_MAGEXT Q
"RTN","MAGGSIUI",167,0)
 . S MAGA(CT)="IMAGE"_U_ARR(I)
"RTN","MAGGSIUI",168,0)
 Q
"RTN","MAGGSIUI",169,0)
GETARR(ARR,QNUM) ;RPC [MAG4 DATA FROM IMPORT QUEUE]
"RTN","MAGGSIUI",170,0)
 ; Get the Input Array from Queue Number
"RTN","MAGGSIUI",171,0)
 I '$G(QNUM) S ARR(0)="0^INVALID QUEUE Number: "_$G(QNUM) Q
"RTN","MAGGSIUI",172,0)
 N MAGERR ;gek/stop duplicates.
"RTN","MAGGSIUI",173,0)
 D IMPAR^MAGQBUT2(.ARR,QNUM)
"RTN","MAGGSIUI",174,0)
 I 'ARR(0) Q
"RTN","MAGGSIUI",175,0)
 I $$INPRC^MAGGSIU3(.MAGERR,.ARR) K ARR S ARR(0)=MAGERR
"RTN","MAGGSIUI",176,0)
 Q
"RTN","MAGGSIUI",177,0)
STATUSCB(MAGRY,STAT,TAGRTN,DOCB) ;RPC [MAG4 STATUS CALLBACK]
"RTN","MAGGSIUI",178,0)
 ; Report Status to calling application
"RTN","MAGGSIUI",179,0)
 ; gek P8T32 10/29/03 The BP No Longer makes this call
"RTN","MAGGSIUI",180,0)
 ; The Import Component (and OCX) call this RPC 
"RTN","MAGGSIUI",181,0)
 ;
"RTN","MAGGSIUI",182,0)
 ; STAT(0)= "0^message" or "1^message"
"RTN","MAGGSIUI",183,0)
 ; STAT(1)=TRKID,
"RTN","MAGGSIUI",184,0)
 ;        (2)=QNUM
"RTN","MAGGSIUI",185,0)
 ;        (3..N)=warnings
"RTN","MAGGSIUI",186,0)
 ;TAGRTN                 : The TAG^RTN to call with Status Array
"RTN","MAGGSIUI",187,0)
 ;DOCB                   : Flag (1|0) to supress the execution of the Status Callback
"RTN","MAGGSIUI",188,0)
 ; 
"RTN","MAGGSIUI",189,0)
 N APISESS,TRKID,CBMSG
"RTN","MAGGSIUI",190,0)
 S DOCB=$S($G(DOCB)="":1,1:+$G(DOCB)) ;If no value sent, default to TRUE
"RTN","MAGGSIUI",191,0)
 ; Old Import API, BP that make this call, will function as before because DOCB defaults to 1
"RTN","MAGGSIUI",192,0)
 S CBMSG=$S(DOCB:"Status Callback was called",1:"Status Callback was NOT called")
"RTN","MAGGSIUI",193,0)
 I DOCB D @(TAGRTN_"(.STAT)")
"RTN","MAGGSIUI",194,0)
 S MAGRY="1^"_CBMSG
"RTN","MAGGSIUI",195,0)
 S STAT($O(STAT(""),-1)+1)=MAGRY
"RTN","MAGGSIUI",196,0)
 S TRKID=$G(STAT(1))
"RTN","MAGGSIUI",197,0)
 ; Log Results if Status Callback was made or not.
"RTN","MAGGSIUI",198,0)
 I $L(TRKID) D
"RTN","MAGGSIUI",199,0)
 . S APISESS=$$SES4TRK^MAGGSIU3(TRKID) ;
"RTN","MAGGSIUI",200,0)
 . I APISESS D LOGRES^MAGGSIU3(.STAT,0,APISESS) ;gek/send Tracking ID to log status
"RTN","MAGGSIUI",201,0)
 Q
"RTN","MAGGSIUI",202,0)
TESTCB(STATARR) ;TESTING.  This is used as the Status Callback for testing purposes
"RTN","MAGGSIUI",203,0)
 ; a Valid "M" TAG^ROUTINE must be sent as a value for the import property STATUSCB
"RTN","MAGGSIUI",204,0)
 ; This TAG is here so that the STATUSCB value validates successfully
"RTN","MAGGSIUI",205,0)
 Q
"RTN","MAGGSIUI",206,0)
ERRTRK ;Track bad data and Quit
"RTN","MAGGSIUI",207,0)
 N I
"RTN","MAGGSIUI",208,0)
 D LOGERR^MAGGSERR("---- New Error ----",APISESS)
"RTN","MAGGSIUI",209,0)
 S I="" F  S I=$O(MAGRY(I)) Q:I=""  D LOGERR^MAGGSERR(MAGRY(I),APISESS)
"RTN","MAGGSIUI",210,0)
 Q
"RTN","MAGGSIUI",211,0)
DATATRK ; Track the raw data being sent to the Import API.
"RTN","MAGGSIUI",212,0)
 ; This is called to log the data being imported.  
"RTN","MAGGSIUI",213,0)
 ; Later the Results (or error messages) will be logged
"RTN","MAGGSIUI",214,0)
 N XY
"RTN","MAGGSIUI",215,0)
 S APISESS=$$LOG^MAGGSIU3(.XY,.MAGIXZ,.IMAGES,IDFN,ACQD,TRKID)
"RTN","MAGGSIUI",216,0)
 Q
"RTN","MAGGSIUI",217,0)
ERR ; ERROR TRAP FOR Import API
"RTN","MAGGSIUI",218,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIUI",219,0)
 S MAGRY(0)="0^ETRAP: "_ERR
"RTN","MAGGSIUI",220,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIUI",221,0)
 I $G(APISESS) D ERRTRK
"RTN","MAGGSIUI",222,0)
 Q
"RTN","MAGGSIV")
0^49^B46501828
"RTN","MAGGSIV",1,0)
MAGGSIV ;WOIFO/GEK - Imaging RPC Broker calls. Validate Image data array ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIV",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSIV",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIV",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIV",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIV",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIV",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIV",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIV",10,0)
 ;; |                                                               |
"RTN","MAGGSIV",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIV",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIV",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIV",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIV",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIV",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV",17,0)
 ;;
"RTN","MAGGSIV",18,0)
 Q
"RTN","MAGGSIV",19,0)
VAL(MAGRY,MAGARRAY,ALL) ;RPC [MAG4 VALIDATE DATA]
"RTN","MAGGSIV",20,0)
 ;Call to Validate the Image Data Array before a new image/modified entry is attempted.  
"RTN","MAGGSIV",21,0)
 ; Called from MAGGSIA, MAGGSIUI and Capture GUI.
"RTN","MAGGSIV",22,0)
 ;  Parameters : 
"RTN","MAGGSIV",23,0)
 ;    MAGARRAY - array of 'Field numbers'/'Action codes'  and their Values 
"RTN","MAGGSIV",24,0)
 ;                     MAGARRAY(1)="5^38"  Field#:  5   Value: 38
"RTN","MAGGSIV",25,0)
 ;         an example of an action code is the Code for File Extension    
"RTN","MAGGSIV",26,0)
 ;                     MAGARRAY(2)="EXT^JPG"  Action: EXT Value: JPG                        
"RTN","MAGGSIV",27,0)
 ;    ALL - "1" = Validate ALL fields, returning an array of error messages.
"RTN","MAGGSIV",28,0)
 ;          "0" = Stop validating if an error occurs, return
"RTN","MAGGSIV",29,0)
 ;                           the error message in (0) node.
"RTN","MAGGSIV",30,0)
 ;  Return Variable
"RTN","MAGGSIV",31,0)
 ;    MAGRY() - Array
"RTN","MAGGSIV",32,0)
 ;      Successful   MAGRY(0) = 1^Image Data is Valid.
"RTN","MAGGSIV",33,0)
 ;      UNsuccessful MAGRY(0) = 0^Error desc
"RTN","MAGGSIV",34,0)
 ;                   IF ALL then MAGRY(1..N) =0^Error desc of all errors
"RTN","MAGGSIV",35,0)
 N MAGGFLD,MAGGDAT,MAGFSPEC,CHKOK,MAGETXT,MAGRET,MAGRES
"RTN","MAGGSIV",36,0)
 N Y,AITEM,CT,MAGERR,DFNFLAG,DAT1
"RTN","MAGGSIV",37,0)
 ;N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGSERR"
"RTN","MAGGSIV",38,0)
 S ALL=$G(ALL)
"RTN","MAGGSIV",39,0)
 S MAGRY(0)="0^Validating the Data Array..."
"RTN","MAGGSIV",40,0)
 S MAGERR="",DFNFLAG=0,CT=0
"RTN","MAGGSIV",41,0)
 ;  Do we have any data ? 
"RTN","MAGGSIV",42,0)
 I ($D(MAGARRAY)<10) S MAGRY(0)="0^No input data, Operation CANCELED" Q
"RTN","MAGGSIV",43,0)
 ;  Loop through Input Array
"RTN","MAGGSIV",44,0)
 S AITEM="" F  S AITEM=$O(MAGARRAY(AITEM)) Q:AITEM=""  D  I $L(MAGERR) Q:'ALL  S CT=CT+1,MAGRY(CT)=MAGERR,MAGERR=""
"RTN","MAGGSIV",45,0)
 . S MAGERR=""
"RTN","MAGGSIV",46,0)
 . S MAGGFLD=$P(MAGARRAY(AITEM),U,1),MAGGDAT=$P(MAGARRAY(AITEM),U,2,99)
"RTN","MAGGSIV",47,0)
 . I MAGGFLD="" S MAGERR="0^A Field Number/Action Code is required: "_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",48,0)
 . I MAGGDAT="" S MAGERR="0^A Value is required."_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",49,0)
 . I MAGGFLD=5 S DFNFLAG=1
"RTN","MAGGSIV",50,0)
 . ; This inadvertantly disallowed Tracking ID's on Group Images.
"RTN","MAGGSIV",51,0)
 . ;I MAGGFLD=108 I $D(^MAG(2005,"ATRKID",MAGGDAT)) S MAGERR="0^Tracking ID Must be Unique !" Q
"RTN","MAGGSIV",52,0)
 . I MAGGFLD=108 I ($L(MAGGDAT,";")<2) S MAGRY(0)="0^Tracking ID Must have "";"" Delimiter" Q
"RTN","MAGGSIV",53,0)
 . ; Check for possible action codes that could be in the array.
"RTN","MAGGSIV",54,0)
 . I $$ACTCODE(MAGGFLD) D  Q
"RTN","MAGGSIV",55,0)
 . . S DAT1=MAGGDAT
"RTN","MAGGSIV",56,0)
 . . S Y=$$VALCODE(MAGGFLD,.MAGGDAT) S:'Y MAGERR=Y_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",57,0)
 . . I DAT1'=MAGGDAT S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT
"RTN","MAGGSIV",58,0)
 . ; If we are adding Multiple Images to a Group, they must be Validated.
"RTN","MAGGSIV",59,0)
 . ;   we could have multiple "2005.04^IENs" in this array. Which means we are 
"RTN","MAGGSIV",60,0)
 . ;   adding existing Images to a New/Existing Group.
"RTN","MAGGSIV",61,0)
 . I MAGGFLD=2005.04 D  Q  ; 2005.04 isn't the field number, #4 is the field number
"RTN","MAGGSIV",62,0)
 . . I $G(MAGGDAT,0)=0 Q  ;Creating a new Group, with no group entries is the usual way
"RTN","MAGGSIV",63,0)
 . . ; to do it.  Then make successive calls to ADD, Adding each Image to the 
"RTN","MAGGSIV",64,0)
 . . ; Object Group multiple of the Group Parent (fld#14) as it is created.
"RTN","MAGGSIV",65,0)
 . . I '$D(^MAG(2005,MAGGDAT,0)) S MAGERR="0^Group Object "_MAGGDAT_" doesn't exist"_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",66,0)
 . . ;  We can't allow adding an image if it already has a group parent.
"RTN","MAGGSIV",67,0)
 . . I $P(^MAG(2005,MAGGDAT,0),U,10) S MAGERR="0^The Image to be added to the Group, already has a Group Parent"_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",68,0)
 . ; if we are getting a WP line of text for Long Desc Field.  Can't validate it.
"RTN","MAGGSIV",69,0)
 . I MAGGFLD=11 Q  ; this is a line of the WP Long Desc field.
"RTN","MAGGSIV",70,0)
 . ; NEW CALL TO VALIDATE FILE,FIELD,DATA 
"RTN","MAGGSIV",71,0)
 . S DAT1=MAGGDAT
"RTN","MAGGSIV",72,0)
 . I '$$VALID^MAGGSIV1(2005,MAGGFLD,.MAGGDAT,.MAGRES) S MAGERR="0^"_MAGRES Q
"RTN","MAGGSIV",73,0)
 . I DAT1'=MAGGDAT S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT
"RTN","MAGGSIV",74,0)
 . Q
"RTN","MAGGSIV",75,0)
 . ;// ;if a BAD field number
"RTN","MAGGSIV",76,0)
 . ;// I '$$VFIELD^DILFD(2005,MAGGFLD) S MAGERR="0^Field Number "_MAGGFLD_" doesn't exist"_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",77,0)
 . ;// ;
"RTN","MAGGSIV",78,0)
 . ;// ; Get Field Specifiers
"RTN","MAGGSIV",79,0)
 . ;// D FIELD^DID(2005,MAGGFLD,"","LABEL;SPECIFIER","MAGFSPEC")
"RTN","MAGGSIV",80,0)
 . ;// ; 
"RTN","MAGGSIV",81,0)
 . ;// I (MAGFSPEC("SPECIFIER")["D") D  Q:$L(MAGERR)
"RTN","MAGGSIV",82,0)
 . ;// . S %DT="T",X=MAGGDAT D ^%DT
"RTN","MAGGSIV",83,0)
 . ;// . I Y=-1 S MAGERR="0^Invalid Date: "_MAGGDAT_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",84,0)
 . ;// . S MAGGDAT=Y
"RTN","MAGGSIV",85,0)
 . ;// . S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT
"RTN","MAGGSIV",86,0)
 . ;// ;  Usually for Pointer fields, we're getting the Internal value. So
"RTN","MAGGSIV",87,0)
 . ;// ;  We'll test for that here, and if success, we quit.
"RTN","MAGGSIV",88,0)
 . ;// ;  If not success, then maybe it's the external value being passed in,
"RTN","MAGGSIV",89,0)
 . ;// ;  so we continue, letting it get validated again.
"RTN","MAGGSIV",90,0)
 . ;// I (MAGFSPEC("SPECIFIER")["P") D  Q:CHKOK
"RTN","MAGGSIV",91,0)
 . ;// . S CHKOK=0
"RTN","MAGGSIV",92,0)
 . ;// . ; If MAGGDAT="75XKXKSK" AND 75 IS VALID, THIS NEXT CALL RETURNS TRUE.
"RTN","MAGGSIV",93,0)
 . ;// . I $$EXTERNAL^DILFD(2005,MAGGFLD,"",MAGGDAT)'="" S CHKOK=1 Q  ; Valid Internal value, returned the external
"RTN","MAGGSIV",94,0)
 . ;// . D CHK^DIE(2005,MAGGFLD,"",MAGGDAT,.MAGRET,"MAGETXT") I 'MAGRET Q  ; Let it get error message below
"RTN","MAGGSIV",95,0)
 . ;// . ; Valid External Value is in .MAGRET
"RTN","MAGGSIV",96,0)
 . ;// . S MAGGDAT=MAGRET
"RTN","MAGGSIV",97,0)
 . ;// . S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT S CHKOK=1
"RTN","MAGGSIV",98,0)
 . ;// . Q
"RTN","MAGGSIV",99,0)
 . ;// ; Validate all fields here.  
"RTN","MAGGSIV",100,0)
 . ;// S MAGRET=""
"RTN","MAGGSIV",101,0)
 . ;// D VAL^DIE(2005,"",MAGGFLD,"",MAGGDAT,.MAGRET,"","MAGETXT") I MAGRET="^" D  Q
"RTN","MAGGSIV",102,0)
 . ;// . S MAGERR="0^"_MAGETXT("DIERR",1,"TEXT",1)_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",103,0)
 ;
"RTN","MAGGSIV",104,0)
 ; if there was an Error in data we'll quit now.
"RTN","MAGGSIV",105,0)
 ; If ALL is true, then MAGRY(1...N) will exist if there were errors.
"RTN","MAGGSIV",106,0)
 I $O(MAGRY(0)) S MAGRY(0)="0^Errors were found in data." Q
"RTN","MAGGSIV",107,0)
 ; If ALL is false, then MAGERR will exist if there was an error.
"RTN","MAGGSIV",108,0)
 I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIV",109,0)
 ;
"RTN","MAGGSIV",110,0)
 ;  If all data is valid we get here.
"RTN","MAGGSIV",111,0)
 ;  Last Test, see if a Patient was in array, 
"RTN","MAGGSIV",112,0)
 ;  (Patient is the only Required field check done in this routine).
"RTN","MAGGSIV",113,0)
 I 'DFNFLAG S MAGRY(0)="0^A Patient DFN is required. " Q
"RTN","MAGGSIV",114,0)
 S MAGRY(0)="1^Data is Valid."
"RTN","MAGGSIV",115,0)
 Q
"RTN","MAGGSIV",116,0)
ACTCODE(CODE) ;Function that returns True (1) if this code is a valid Import API Action Code
"RTN","MAGGSIV",117,0)
 ; Patch 8.  We're adding 107 as an action code, so it will pass validation even if the entry
"RTN","MAGGSIV",118,0)
 ;   in the Acquisition Device File doesn't exist;
"RTN","MAGGSIV",119,0)
 ;   it will be validated in PRE^MAGGSIA1 and a new Acquisition Device entry made if needed.
"RTN","MAGGSIV",120,0)
 I ",107,ACQD,IEN,EXT,ABS,JB,WRITE,BIG,DICOMSN,DICOMIN,ACQS,ACQL,STATUSCB,CALLMTH,USERNAME,PASSWORD,DELFLAG,TRNSTYP,"[(","_CODE_",") Q 1
"RTN","MAGGSIV",121,0)
 Q 0
"RTN","MAGGSIV",122,0)
VALCODE(CODE,VALUE) ; We validate the values for the possible action codes
"RTN","MAGGSIV",123,0)
 N MAGY
"RTN","MAGGSIV",124,0)
 I VALUE="" Q "0^NO VALUE in Action Code string: """_X_""
"RTN","MAGGSIV",125,0)
 ; Patch 8, added 107 
"RTN","MAGGSIV",126,0)
 I ",ACQS,ACQL,CALLMTH,USERNAME,PASSWORD,"[(","_CODE_",") Q 1 ; NO VALIDATION FOR THESE CODES
"RTN","MAGGSIV",127,0)
 D @CODE
"RTN","MAGGSIV",128,0)
 Q MAGY
"RTN","MAGGSIV",129,0)
 ;  Each Tag is a valid Action code
"RTN","MAGGSIV",130,0)
IEN I $D(^MAG(2005,VALUE)) S MAGY=1
"RTN","MAGGSIV",131,0)
 E  S MAGY="0^INVALID IMAGE IEN."
"RTN","MAGGSIV",132,0)
 Q
"RTN","MAGGSIV",133,0)
EXT ; code will go here to validate the extension type.  i.e. we won't let types .exe .bat .com .zip ... etc.
"RTN","MAGGSIV",134,0)
 ;  Maybe a modification to Object Type file, to have allowable extensions in the file, and a 
"RTN","MAGGSIV",135,0)
 ;  cross reference on a new field EXTENSION.  The capture workstation wouldn't have to ask the 
"RTN","MAGGSIV",136,0)
 ; user for the file type of each file, and we wouldn't get WORD .DOC files that the user called Color Images
"RTN","MAGGSIV",137,0)
ABS ; Meaning: Have the BP create the abstract
"RTN","MAGGSIV",138,0)
JB ; Meaning: Have the BP copy the image to the JukeBox
"RTN","MAGGSIV",139,0)
BIG ; Meaning: There is a big file also, set the Image File field ? to indicate there is a BIG File.
"RTN","MAGGSIV",140,0)
 S MAGY=1
"RTN","MAGGSIV",141,0)
 Q
"RTN","MAGGSIV",142,0)
WRITE ; Meaning: This is the Internal Entry (or "PACS") of the WRITE Directory. Images will be written
"RTN","MAGGSIV",143,0)
 ; here instead of the default WRITE Directory.
"RTN","MAGGSIV",144,0)
 S MAGY=$$DRIVE^MAGGTU1(VALUE)
"RTN","MAGGSIV",145,0)
 Q
"RTN","MAGGSIV",146,0)
DICOMSN ;Meaning: DICOM Series Number.  This will be entered in the Group Object multiple, field #1
"RTN","MAGGSIV",147,0)
 ;We were validating this as an integer, but it can be anything, no way to validate.
"RTN","MAGGSIV",148,0)
 S MAGY=1
"RTN","MAGGSIV",149,0)
 Q
"RTN","MAGGSIV",150,0)
DICOMIN ;Meaning: DICOM Image Number.  This will be entered in the Group Object multiple, field #2
"RTN","MAGGSIV",151,0)
 ; We were validating this as an integer, but it can be anything, no way to validate.
"RTN","MAGGSIV",152,0)
 S MAGY=1
"RTN","MAGGSIV",153,0)
 Q
"RTN","MAGGSIV",154,0)
DELFLAG ;Meaning: This flag tells the Delphi Import Component to Delete the Image files after successful processing
"RTN","MAGGSIV",155,0)
 I ",TRUE,FALSE,0,1,"[(","_$$UPPER(VALUE)_",") S MAGY=1
"RTN","MAGGSIV",156,0)
 E  S MAGY="0^INVALID Value "
"RTN","MAGGSIV",157,0)
 I VALUE="1" S VALUE="TRUE"
"RTN","MAGGSIV",158,0)
 I VALUE="0" S VALUE="FALSE"
"RTN","MAGGSIV",159,0)
 Q
"RTN","MAGGSIV",160,0)
TRNSTYP ;Meaning: This flag is for future use, for now it is ignored, defaults to "NEW"
"RTN","MAGGSIV",161,0)
 S MAGY=1
"RTN","MAGGSIV",162,0)
 Q
"RTN","MAGGSIV",163,0)
STATUSCB ; Meaning: This is the TAG^RTN that Imaging calls to report the 
"RTN","MAGGSIV",164,0)
 ; status of the Import.
"RTN","MAGGSIV",165,0)
 S MAGY="0^Error validating TAG^RTN: "_VALUE
"RTN","MAGGSIV",166,0)
 I '$L($T(@VALUE)) S MAGY="0^Invalid Status CallBack "_VALUE
"RTN","MAGGSIV",167,0)
 E  S MAGY=1
"RTN","MAGGSIV",168,0)
 Q
"RTN","MAGGSIV",169,0)
107 ;    107 and ACQD are the same.  Calling 107 falls into validation for ACQD.
"RTN","MAGGSIV",170,0)
ACQD ; 107 and ACQD are ACQUISITION DEVICE FILE (2006.04) pointers or Values.
"RTN","MAGGSIV",171,0)
 ; If it is an integer, We assume the value is an IEN and validate it here.
"RTN","MAGGSIV",172,0)
 I +VALUE,'$D(^MAG(2006.04,VALUE)) S MAGY="0^Invalid IEN ("_VALUE_") for ACQUISITION DEVICE File." Q
"RTN","MAGGSIV",173,0)
 ; if it is not an integer, it is either a new/existing entry for 2006.04 Result is Success,
"RTN","MAGGSIV",174,0)
 ;       and it will be validated in PRE^MAGGSIA1 and added to File 2006.04 if needed.
"RTN","MAGGSIV",175,0)
 S MAGY=1
"RTN","MAGGSIV",176,0)
 Q
"RTN","MAGGSIV",177,0)
UPPER(X) ;
"RTN","MAGGSIV",178,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MAGGSIV1")
0^80^B6852981
"RTN","MAGGSIV1",1,0)
MAGGSIV1 ;WOIFO/GEK - Imaging Validate Data ; [ 08/15/2004 08:57 ]
"RTN","MAGGSIV1",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGSIV1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIV1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIV1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIV1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIV1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIV1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIV1",10,0)
 ;; |                                                               |
"RTN","MAGGSIV1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIV1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIV1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIV1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIV1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIV1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV1",17,0)
 ;;
"RTN","MAGGSIV1",18,0)
 Q
"RTN","MAGGSIV1",19,0)
VALID(MAGF,MAGL,MAGD,MAGRES) ; call to validate a value for a field in a FM file.
"RTN","MAGGSIV1",20,0)
 ; Function is boolean.  Returns:
"RTN","MAGGSIV1",21,0)
 ;        0   -  Invalid 
"RTN","MAGGSIV1",22,0)
 ;        1   -  Valid 
"RTN","MAGGSIV1",23,0)
 ;        ""  -  Error
"RTN","MAGGSIV1",24,0)
 ; Call this function before you set the FDA Array.
"RTN","MAGGSIV1",25,0)
 ; MAGD - sent by reference because it could be Internal or External
"RTN","MAGGSIV1",26,0)
 ;        and if it is external and valid, it is changed to Internal.
"RTN","MAGGSIV1",27,0)
 ;        
"RTN","MAGGSIV1",28,0)
 ; MAGF  : File Number
"RTN","MAGGSIV1",29,0)
 ; MAGL  : Field Number
"RTN","MAGGSIV1",30,0)
 ; MAGD  : (sent by reference) data value of field
"RTN","MAGGSIV1",31,0)
 ; MAGRES: (sent by refernece) Result message
"RTN","MAGGSIV1",32,0)
 ;
"RTN","MAGGSIV1",33,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSIV1",34,0)
 N MAGR,MAGMSG,MAGSP,MAGRESA,MAGE,MAGPT
"RTN","MAGGSIV1",35,0)
 ;if a BAD field number
"RTN","MAGGSIV1",36,0)
 I '$$VFIELD^DILFD(MAGF,MAGL) D  Q 0
"RTN","MAGGSIV1",37,0)
 . S MAGRES="The field number: "_MAGL_", in File: "_MAGF_", is invalid."
"RTN","MAGGSIV1",38,0)
 D FIELD^DID(MAGF,MAGL,"","SPECIFIER","MAGSP")
"RTN","MAGGSIV1",39,0)
 ; If it is a pointer field 
"RTN","MAGGSIV1",40,0)
 ; If an  integer - We assume it is a pointer and validate that and Quit.
"RTN","MAGGSIV1",41,0)
 ; If not integer - We assume it is external value, proceed to let CHK do validate
"RTN","MAGGSIV1",42,0)
 I (MAGSP("SPECIFIER")["P"),(+MAGD=MAGD) D  Q MAGPT
"RTN","MAGGSIV1",43,0)
 . I $$EXTERNAL^DILFD(MAGF,MAGL,"",MAGD)'="" S MAGPT=1,MAGRES="Valid pointer" Q
"RTN","MAGGSIV1",44,0)
 . S MAGPT=0,MAGRES="The value: "_MAGD_" for field: "_MAGL_" in File: "_MAGF_" is an invalid Pointer."
"RTN","MAGGSIV1",45,0)
 . Q
"RTN","MAGGSIV1",46,0)
 ;
"RTN","MAGGSIV1",47,0)
 D CHK^DIE(MAGF,MAGL,"E",MAGD,.MAGR,"MAGMSG")
"RTN","MAGGSIV1",48,0)
 ; If success, Quit. We changed External to Internal. Internal is in MAGR
"RTN","MAGGSIV1",49,0)
 I MAGR'="^" S MAGD=MAGR Q 1
"RTN","MAGGSIV1",50,0)
 ;  If not success Get the error text and Quit 0
"RTN","MAGGSIV1",51,0)
 D MSG^DIALOG("A",.MAGRESA,245,5,"MAGMSG")
"RTN","MAGGSIV1",52,0)
 S MAGRES=MAGRESA(1)
"RTN","MAGGSIV1",53,0)
 Q 0
"RTN","MAGGSIV1",54,0)
ERR ;
"RTN","MAGGSIV1",55,0)
 N ERR
"RTN","MAGGSIV1",56,0)
 S ERR=$$EC^%ZOSV
"RTN","MAGGSIV1",57,0)
 S MAGRES="0^Error during data validation: "_ERR
"RTN","MAGGSIV1",58,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGSIV1",59,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIV1",60,0)
 D CLEAN^DILF
"RTN","MAGGSIV1",61,0)
 Q
"RTN","MAGGSPP")
0^23^B10825768
"RTN","MAGGSPP",1,0)
MAGGSPP ;WOIFO/GEK - Utilities for Post Processing of a new Image Entry
"RTN","MAGGSPP",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGSPP",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSPP",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSPP",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSPP",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSPP",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSPP",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSPP",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSPP",10,0)
 ;; |                                                               |
"RTN","MAGGSPP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSPP",12,0)
 ;; | a medical device.  As such, it may not be changed             |
"RTN","MAGGSPP",13,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGGSPP",14,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGGSPP",15,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGGSPP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSPP",17,0)
 ;;
"RTN","MAGGSPP",18,0)
 Q
"RTN","MAGGSPP",19,0)
ACTION(MAGRY,MAGIEN) ;RPC [MAG4 POST PROCESSING]
"RTN","MAGGSPP",20,0)
 ; Post processing when Image is sucessfully created in Image
"RTN","MAGGSPP",21,0)
 ;  This is Pre 3.0.8
"RTN","MAGGSPP",22,0)
 ; file and copied to Network.
"RTN","MAGGSPP",23,0)
 ;       MAGRY : is the Return Array
"RTN","MAGGSPP",24,0)
 ;       MAGRY(0)  = 1^SUCCESS
"RTN","MAGGSPP",25,0)
 ;                OR 0^ERROR MESSAGE
"RTN","MAGGSPP",26,0)
 ;       MAGIEN : is the Internal Entry Number in the Image File.
"RTN","MAGGSPP",27,0)
 ;  This call is Post Processing depending on the Type of MAG DESCRIPTIVE CATEGORY
"RTN","MAGGSPP",28,0)
 ;  Does the Image Point to a MagDescriptive Category.
"RTN","MAGGSPP",29,0)
 ;  
"RTN","MAGGSPP",30,0)
 I '+$G(^MAG(2005,MAGIEN,100)) S MAGRY(0)="1^No Post Processing required for Image ID: "_MAGIEN Q
"RTN","MAGGSPP",31,0)
 N MAGCTG S MAGCTG=+^MAG(2005,MAGIEN,100)
"RTN","MAGGSPP",32,0)
 I '+$G(^MAG(2005.81,MAGCTG,1)) S MAGRY(0)="1^No Post Processing required for Image ID: "_MAGIEN Q
"RTN","MAGGSPP",33,0)
 ; SO here we know an action is in play for this Image Category
"RTN","MAGGSPP",34,0)
 N MAGACT
"RTN","MAGGSPP",35,0)
 S MAGACT=$P(^MAG(2005.81,MAGCTG,1),U,3,4)
"RTN","MAGGSPP",36,0)
 ;        D @(TAGRTN_"(.STAT)")
"RTN","MAGGSPP",37,0)
 D @(MAGACT_"(.MAGRY,"_MAGIEN_")")
"RTN","MAGGSPP",38,0)
 ;;
"RTN","MAGGSPP",39,0)
 Q
"RTN","MAGGSPP",40,0)
POSTACT(MAGRY,MAGIEN) ;RPC [MAG4 POST PROCESS ACTIONS]
"RTN","MAGGSPP",41,0)
 ; Post processing when Image is sucessfully created in Image
"RTN","MAGGSPP",42,0)
 ; file and copied to Network. Patch 3.0.8  
"RTN","MAGGSPP",43,0)
 ;       MAGRY : is the Return Array
"RTN","MAGGSPP",44,0)
 ;       MAGRY(0)  = 1^SUCCESS
"RTN","MAGGSPP",45,0)
 ;                OR 0^ERROR MESSAGE
"RTN","MAGGSPP",46,0)
 ; Post Processing Action: depends on Image Type (fld #42 )
"RTN","MAGGSPP",47,0)
 N TYPE,AIEN
"RTN","MAGGSPP",48,0)
 S TYPE=+$P($G(^MAG(2005,MAGIEN,40)),"^",3) I 'TYPE D  Q
"RTN","MAGGSPP",49,0)
 . ; comment out, for backward compatibility
"RTN","MAGGSPP",50,0)
 . ;S MAGRY(0)="1^No Post Processing required for Image ID: "_MAGIEN Q
"RTN","MAGGSPP",51,0)
 . ;This is here so that the new code is backward compatible. If no value for TYPE INDEX, we have to 
"RTN","MAGGSPP",52,0)
 . ;check the MAG DESC CTG field.
"RTN","MAGGSPP",53,0)
 . D ACTION(.MAGRY,MAGIEN)
"RTN","MAGGSPP",54,0)
 . Q
"RTN","MAGGSPP",55,0)
 I '$D(^MAG(2005.86,"ATYPE",TYPE)) S MAGRY(0)="1^No Post Processing required for "_$P(^MAG(2005.83,TYPE,0),U) Q
"RTN","MAGGSPP",56,0)
 S AIEN=$O(^MAG(2005.86,"ATYPE",TYPE,""))
"RTN","MAGGSPP",57,0)
 I $P(^MAG(2005.86,AIEN,0),"^",2) S MAGRY(0)="1^Action: "_$P(^MAG(2005.86,AIEN,0),"^")_" in Not Active." Q
"RTN","MAGGSPP",58,0)
 ; SO here we know an action is in play for this TYPE INDEX
"RTN","MAGGSPP",59,0)
 N MAGACT
"RTN","MAGGSPP",60,0)
 S MAGACT=$P(^MAG(2005.86,AIEN,0),"^",3,4)
"RTN","MAGGSPP",61,0)
 D @(MAGACT_"(.MAGRY,"_MAGIEN_")")
"RTN","MAGGSPP",62,0)
 Q
"RTN","MAGGSPP",63,0)
HEC(MAGRY,MAGIEN) ;  QUEING OF HEC IMAGES
"RTN","MAGGSPP",64,0)
 S MAGRY(0)=$$GCC^MAGBAPI(MAGIEN,$$DA2PLC^MAGBAPIP(MAGIEN,"F")) ; DBI - SEB 9/23/2002
"RTN","MAGGSPP",65,0)
 S MAGRY(1)=MAGIEN_" "_$$NOW^XLFDT
"RTN","MAGGSPP",66,0)
 D ACTION^MAGGTAU("PPACT^"_$P(^MAG(2005,MAGIEN,0),"^",7)_"^"_MAGIEN_"|HEC-COPY using GCC^MAGBAPI",1)
"RTN","MAGGSPP",67,0)
 ;ACTION(TXT,LOGTM,MAGSESS) ;Call to log actions for Imaging Session.
"RTN","MAGGSPP",68,0)
 ; TXT is "^" delimited string
"RTN","MAGGSPP",69,0)
 ; $P(1) is code   $P(2) is DFN   $P(3) is Image IEN
"RTN","MAGGSPP",70,0)
 ; LOGTM   - [1|0] Flag to indicate wheter or not to log the time of the Action.  Default = 0
"RTN","MAGGSPP",71,0)
 ; MAGSESS - Session IEN where the action should be logged.  Default to MAGJOB("SESSION")
"RTN","MAGGSPP",72,0)
 ;
"RTN","MAGGSPP",73,0)
 Q
"RTN","MAGGSQI")
0^55^B71116866
"RTN","MAGGSQI",1,0)
MAGGSQI ;WOIFO/GEK ; Image Integrity Checker ; [ 11/08/2001 17:18 ]
"RTN","MAGGSQI",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGSQI",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSQI",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSQI",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSQI",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSQI",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSQI",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSQI",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSQI",10,0)
 ;; |                                                               |
"RTN","MAGGSQI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSQI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSQI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSQI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSQI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSQI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSQI",17,0)
 ;;
"RTN","MAGGSQI",18,0)
RPT(MAGRY,CT,LASTIEN) ; Run the check for the last CT entries in Image file.
"RTN","MAGGSQI",19,0)
 N I,J,MAGX,ERRCT,ACTCT,TYPECT,MAGSTART,MAGPUR
"RTN","MAGGSQI",20,0)
 K ^XTMP("MAGCHK")
"RTN","MAGGSQI",21,0)
 S LASTIEN=$G(LASTIEN)
"RTN","MAGGSQI",22,0)
 ; See DOCU^MAGCRTP for documenation on this global
"RTN","MAGGSQI",23,0)
 D NOW^%DTC S MAGSTART=%
"RTN","MAGGSQI",24,0)
 S X1=%,X2=60 D C^%DTC S MAGPUR=X K X,X1,X2
"RTN","MAGGSQI",25,0)
 ;Set purge, create and purge date
"RTN","MAGGSQI",26,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",1)=MAGPUR,$P(^(0),"^",2)=MAGSTART
"RTN","MAGGSQI",27,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",5)=MAGSTART
"RTN","MAGGSQI",28,0)
 ;Set description
"RTN","MAGGSQI",29,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",3)="Imaging Scan DB"
"RTN","MAGGSQI",30,0)
 ;Set status to active
"RTN","MAGGSQI",31,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",4)="ACTIVE"
"RTN","MAGGSQI",32,0)
 S MAGRY(0)="0^Checking..."
"RTN","MAGGSQI",33,0)
 S I="A"
"RTN","MAGGSQI",34,0)
 S CT=$G(CT,5000),ERRCT=0,ACTCT=0
"RTN","MAGGSQI",35,0)
 F  S I=$O(^MAG(2005,I),-1) Q:CT<1  Q:'I  Q:I<LASTIEN  D
"RTN","MAGGSQI",36,0)
 . S CT=CT-1,ACTCT=ACTCT+1
"RTN","MAGGSQI",37,0)
 . I '(ACTCT#1000) I IO(0)=IO U IO W "."
"RTN","MAGGSQI",38,0)
 . K MAGX
"RTN","MAGGSQI",39,0)
 . D CHK(.MAGX,I)
"RTN","MAGGSQI",40,0)
 . I +MAGX(0)'=1 S ERRCT=ERRCT+1 D
"RTN","MAGGSQI",41,0)
 . . S ^XTMP("MAGCHK",$J,+MAGX(0),I)=MAGX(0)
"RTN","MAGGSQI",42,0)
 . . S ^XTMP("MAGCHK",$J,"B",$P(MAGX(0),"^",2),I)=""
"RTN","MAGGSQI",43,0)
 . . S TYPECT($P(MAGX(0),"^",2))=$G(TYPECT($P(MAGX(0),"^",2)))+1
"RTN","MAGGSQI",44,0)
 I 'ERRCT S MAGRY(0)="0^All Okay"
"RTN","MAGGSQI",45,0)
 I ERRCT S MAGRY(0)=ERRCT_"^Errors of "_ACTCT_" Images Checked."
"RTN","MAGGSQI",46,0)
 S I="" F  S I=$O(TYPECT(I)) Q:I=""  D
"RTN","MAGGSQI",47,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=TYPECT(I)_"^"_I
"RTN","MAGGSQI",48,0)
 ;Set status to complete
"RTN","MAGGSQI",49,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",4)="COMPLETE"
"RTN","MAGGSQI",50,0)
 ;Set end time
"RTN","MAGGSQI",51,0)
 D NOW^%DTC
"RTN","MAGGSQI",52,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",6)=%
"RTN","MAGGSQI",53,0)
 ;Set total number of entries checked
"RTN","MAGGSQI",54,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",8)=ACTCT
"RTN","MAGGSQI",55,0)
 Q
"RTN","MAGGSQI",56,0)
CHK(MAGRY,MAGIEN) ;
"RTN","MAGGSQI",57,0)
 ;
"RTN","MAGGSQI",58,0)
 N MAGDFN,MAGPK,MAGPKDA,MAGPKIP,MAGPKDA1,Y,I,MAGISGRP,MAGRPIEN
"RTN","MAGGSQI",59,0)
 N MAGN2,MAGN0,MAGPDFIL,MAGRCT,MAGDEL,MAGIMG,MAGN100,MAGZ,VALID
"RTN","MAGGSQI",60,0)
 S MAGRCT=0,MAGISGRP=0
"RTN","MAGGSQI",61,0)
 ;GEK 01/09/03 Patch 8 : moved the next two lines here. So they are after init of MAGRCT 
"RTN","MAGGSQI",62,0)
 S MAGRY(0)="0^Error during Image Integrity Check !"
"RTN","MAGGSQI",63,0)
 I 'MAGIEN S MAGRY(MAGRCT)="0^Invalid Image pointer" Q
"RTN","MAGGSQI",64,0)
 ;
"RTN","MAGGSQI",65,0)
 S MAGDEL=$D(^MAG(2005.1,MAGIEN))
"RTN","MAGGSQI",66,0)
 S MAGIMG=$D(^MAG(2005,MAGIEN))
"RTN","MAGGSQI",67,0)
 I 'MAGIMG,MAGDEL S MAGRY(0)="1^Deleted Image" Q
"RTN","MAGGSQI",68,0)
 I 'MAGIMG,'MAGDEL S MAGRY(0)="0^Invalid Image pointer" Q
"RTN","MAGGSQI",69,0)
 I MAGIMG,MAGDEL S MAGRY($O(MAGRY(""),-1)+1)="2^Image IEN exists, and is Deleted !"
"RTN","MAGGSQI",70,0)
 ;
"RTN","MAGGSQI",71,0)
 S MAGN0=$G(^MAG(2005,MAGIEN,0))
"RTN","MAGGSQI",72,0)
 S MAGN2=$G(^MAG(2005,MAGIEN,2))
"RTN","MAGGSQI",73,0)
 S MAGN100=$G(^MAG(2005,MAGIEN,100))
"RTN","MAGGSQI",74,0)
 ;
"RTN","MAGGSQI",75,0)
 I $O(^MAG(2005,MAGIEN,1,0))!($P(MAGN0,U,6)=11) S MAGISGRP=1
"RTN","MAGGSQI",76,0)
 I MAGISGRP,'$O(^MAG(2005,MAGIEN,1,0)) S MAGRY(0)="0^Group of 0 images" Q
"RTN","MAGGSQI",77,0)
 ;
"RTN","MAGGSQI",78,0)
 S MAGPK=$P(MAGN2,U,6)
"RTN","MAGGSQI",79,0)
 S MAGPKDA=$P(MAGN2,U,7)
"RTN","MAGGSQI",80,0)
 S MAGPKIP=$P(MAGN2,U,8)
"RTN","MAGGSQI",81,0)
 S MAGPKDA1=$P(MAGN2,U,10)
"RTN","MAGGSQI",82,0)
 S MAGDFN=$P(MAGN0,U,7)
"RTN","MAGGSQI",83,0)
 ;
"RTN","MAGGSQI",84,0)
 ; If this image is a member of a group, compare some fields against the Group entry.
"RTN","MAGGSQI",85,0)
 I +$P(MAGN0,U,10) S MAGRPIEN=$P(MAGN0,U,10) D  Q
"RTN","MAGGSQI",86,0)
 . ;   Check the DFN's Quit if they don't match
"RTN","MAGGSQI",87,0)
 . I $P($G(^MAG(2005,MAGRPIEN,0)),U,7)'=MAGDFN S MAGRY(0)="0^Patient pointer mismatch between Image Group and Image" Q
"RTN","MAGGSQI",88,0)
 . ; if image has data in parent fields, Quit if not same as Group entry.
"RTN","MAGGSQI",89,0)
 . I +MAGPK,($P(MAGN2,U,6,7)'=$P($G(^MAG(2005,MAGRPIEN,2)),U,6,7)) S MAGRY(MAGRCT)="0^Pointer Mismatch in Group" Q
"RTN","MAGGSQI",90,0)
 . ;Have a check that assures that the Group has this image in it's multiple
"RTN","MAGGSQI",91,0)
 . ;   ? Do we want to do this when we have the Grp entry, for each of its members. ? 
"RTN","MAGGSQI",92,0)
 . S (I,VALID)=0 F  S I=$O(^MAG(2005,MAGRPIEN,1,I)) Q:'I  D  Q:VALID
"RTN","MAGGSQI",93,0)
 . . I +^MAG(2005,MAGRPIEN,1,I,0)=MAGIEN S VALID=1
"RTN","MAGGSQI",94,0)
 . I VALID S MAGRY(MAGRCT)="1^Valid Group image."
"RTN","MAGGSQI",95,0)
 . E  S MAGRY(MAGRCT)="0^Pointer Missing in Group entries."
"RTN","MAGGSQI",96,0)
 ;
"RTN","MAGGSQI",97,0)
 ; In current scheme of things, image points to Package or a Descriptive Categroy
"RTN","MAGGSQI",98,0)
 ;  So we can make the following assumption, but maybe not for long.
"RTN","MAGGSQI",99,0)
 I 'MAGPK,+MAGN100 S MAGRY(MAGRCT)="1^Image Category" Q
"RTN","MAGGSQI",100,0)
 I 'MAGPK,($P(MAGN0,U,6)=18) S MAGRY(MAGRCT)="1^Patient Photo" Q
"RTN","MAGGSQI",101,0)
 ;
"RTN","MAGGSQI",102,0)
 ; Old images Didn't require Parent Pointer,Parent root, Parent Image Pointer
"RTN","MAGGSQI",103,0)
 ;I 'MAGPK S MAGRY(0)="0^Missing the Parent file pointer" Q
"RTN","MAGGSQI",104,0)
 ;I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",105,0)
 ;I 'MAGPKIP S MAGRY(0)="0^Missing the Parent image pointer" Q
"RTN","MAGGSQI",106,0)
 ;
"RTN","MAGGSQI",107,0)
 ; Surgery reports
"RTN","MAGGSQI",108,0)
 I (MAGPK=130) D  Q
"RTN","MAGGSQI",109,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",110,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",111,0)
 . I 'MAGPKIP S MAGRY(0)="0^Missing the Parent image pointer" Q
"RTN","MAGGSQI",112,0)
 . I '$D(^SRF(MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",113,0)
 . I '$D(^SRF(MAGPKDA,2005,MAGPKIP,0)) S MAGRY="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",114,0)
 . I '(MAGDFN=$P(^SRF(MAGPKDA,0),U,1)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",115,0)
 . I '(MAGIEN=+$G(^SRF(MAGPKDA,2005,MAGPKIP,0))) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",116,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",117,0)
 ;
"RTN","MAGGSQI",118,0)
 ; TIU documents;
"RTN","MAGGSQI",119,0)
 I MAGPK=8925 D  Q
"RTN","MAGGSQI",120,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",121,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",122,0)
 . I 'MAGPKIP S MAGRY(0)="0^Missing the Parent image pointer" Q
"RTN","MAGGSQI",123,0)
 . I '$D(^TIU(8925,MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",124,0)
 . I '$D(^TIU(8925.91,MAGPKIP,0)) S MAGRY(0)="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",125,0)
 . I '(MAGDFN=$P($G(^TIU(8925,MAGPKDA,0)),U,2)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",126,0)
 . S MAGZ=MAGPKDA_"^"_MAGIEN
"RTN","MAGGSQI",127,0)
 . I '(MAGZ=$G(^TIU(8925.91,MAGPKIP,0))) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",128,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",129,0)
 ;
"RTN","MAGGSQI",130,0)
 ; Medicine reports
"RTN","MAGGSQI",131,0)
 I ((MAGPK>689.999)&(MAGPK<703)) D  Q
"RTN","MAGGSQI",132,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",133,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",134,0)
 . I '$D(^MCAR(MAGPK,MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",135,0)
 . I MAGPKIP I '$D(^MCAR(MAGPK,MAGPKDA,2005,MAGPKIP,0)) S MAGRY(0)="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",136,0)
 . I '(MAGDFN=$P($G(^MCAR(MAGPK,MAGPKDA,0)),U,2)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",137,0)
 . ;I '(MAGIEN=+^MCAR(MAGPK,MAGPKDA,2005,MAGPKIP,0)) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",138,0)
 . I '$D(^MCAR(MAGPK,MAGPKDA,2005,"B",MAGIEN)) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",139,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",140,0)
 . ;
"RTN","MAGGSQI",141,0)
 . ;         S MCFILE=+$P($P(^MCAR(697.2,PSIEN,0),U,2),"(",2)
"RTN","MAGGSQI",142,0)
 . ;      S PATFLD=$O(^DD(MCFILE,"B","MEDICAL PATIENT",""))
"RTN","MAGGSQI",143,0)
 . ;         S:PATFLD="" PATFLD=1
"RTN","MAGGSQI",144,0)
 . ;
"RTN","MAGGSQI",145,0)
 . ;          S TMP=$P($P(^DD(MCFILE,PATFLD,0),U,4),";",2)
"RTN","MAGGSQI",146,0)
 . ;      Q $S(DFN'=$P(^MCAR(MCFILE,MCIEN,0),U,TMP):"O^Image and associated report have different patient pointers",1:"1")
"RTN","MAGGSQI",147,0)
 ;
"RTN","MAGGSQI",148,0)
 ; Radiology reports
"RTN","MAGGSQI",149,0)
 I MAGPK=74 D  Q
"RTN","MAGGSQI",150,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",151,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",152,0)
 . I '$D(^RARPT(MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",153,0)
 . I MAGPKIP I '$D(^RARPT(MAGPKDA,2005,MAGPKIP,0)) S MAGRY(0)="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",154,0)
 . ;
"RTN","MAGGSQI",155,0)
 . I '(MAGDFN=$P($G(^RARPT(MAGPKDA,0)),U,2)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",156,0)
 . ;I '(MAGIEN=+$G(^RARPT(MAGPKDA,2005,MAGPKIP,0))) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",157,0)
 . I '$D(^RARPT(MAGPKDA,2005,"B",MAGIEN)) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",158,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",159,0)
 ;
"RTN","MAGGSQI",160,0)
 ; Laboratory reports
"RTN","MAGGSQI",161,0)
 I (MAGPK>62.999)&(MAGPK<64) D  Q
"RTN","MAGGSQI",162,0)
 . ;I $P(^MAG(2005.03,MAGTMPRT,0),"^",4)=63
"RTN","MAGGSQI",163,0)
 . S MAGRY(0)="1^Lab image not checked "
"RTN","MAGGSQI",164,0)
 . ;D @$S(MAGTMPRT=63:"AU",MAGTMPRT=63.2:"AU",1:"LAB") Q
"RTN","MAGGSQI",165,0)
 ;
"RTN","MAGGSQI",166,0)
 S MAGRY(0)="2^Images only point to Patient."
"RTN","MAGGSQI",167,0)
 Q
"RTN","MAGGSQI",168,0)
CHKGRPCH(CHKY,GRPIEN,GRPDFN,GRPCH) ; Check the child of a Group.  
"RTN","MAGGSQI",169,0)
 ;       i.e. an IEN in the "1" node of the Group.
"RTN","MAGGSQI",170,0)
 ;       Can't just check the IEN by calling CHK.  It might be okay that way.
"RTN","MAGGSQI",171,0)
 ;       Have to compare it to Groups IEN, and DFN
"RTN","MAGGSQI",172,0)
 N CHN0
"RTN","MAGGSQI",173,0)
 S CHN0=$G(^MAG(2005,GRPCH,0)) I '$L(CHN0) S CHKY="0^Invalid Image pointer" Q
"RTN","MAGGSQI",174,0)
 I $P(CHN0,U,7)'=GRPDFN S CHKY="0^Patient Mismatch in Group member:"_GRPCH Q
"RTN","MAGGSQI",175,0)
 I $P(CHN0,U,10)'=GRPIEN S CHKY="0^Pointer Mismatch in Group member:"_GRPCH Q
"RTN","MAGGSQI",176,0)
 S CHKY="1^Okay Group Image"
"RTN","MAGGSQI",177,0)
 Q
"RTN","MAGGTAU")
0^25^B51565767
"RTN","MAGGTAU",1,0)
MAGGTAU ;WOIFO/GEK - RPC Calls to Update the Imaging Windows Workstation file ; [ 03/25/2001 11:20 ]
"RTN","MAGGTAU",2,0)
 ;;3.0;IMAGING;**7,16,8**;Sep 15, 2004
"RTN","MAGGTAU",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTAU",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTAU",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTAU",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTAU",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTAU",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTAU",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTAU",10,0)
 ;; |                                                               |
"RTN","MAGGTAU",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTAU",12,0)
 ;; | a medical device.  As such, it may not be changed             |
"RTN","MAGGTAU",13,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGGTAU",14,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGGTAU",15,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGGTAU",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTAU",17,0)
 ;;
"RTN","MAGGTAU",18,0)
 Q
"RTN","MAGGTAU",19,0)
UPD(MAGRY,DATA) ;RPC [MAGG WRKS UPDATES] 
"RTN","MAGGTAU",20,0)
 ; Call from workstation updating it's exe's Date/Time
"RTN","MAGGTAU",21,0)
 ; and other Workstation information into IMAGING WINDOWS WORKSTATION
"RTN","MAGGTAU",22,0)
 ; at logon of user.
"RTN","MAGGTAU",23,0)
 ;
"RTN","MAGGTAU",24,0)
 ; DATA is '^' delimited piece
"RTN","MAGGTAU",25,0)
 ; 1 Workstation name            2 Date/Time of capture app.
"RTN","MAGGTAU",26,0)
 ; 3 Date/Time of Display App.
"RTN","MAGGTAU",27,0)
 ; 4 Location of worksation      5 Date/Time of MAGSETUP
"RTN","MAGGTAU",28,0)
 ; 6 Version of Display          7 Version of Capture
"RTN","MAGGTAU",29,0)
 ; 8  1=Normal startup 2=Started by CPRS 3=Import API
"RTN","MAGGTAU",30,0)
 ; 9 OS Version                 10 VistaRad Version
"RTN","MAGGTAU",31,0)
 N X,Y,Z
"RTN","MAGGTAU",32,0)
 N MAGNAME,MAGCDT,MAGDDT,MAG0,MAGLOC,MAGIEN,MAGSETUP,MAGSTART,MAGSRV
"RTN","MAGGTAU",33,0)
 N MAGVERSD,MAGVERSC,MAGMODE,MAGOSVER,MAGVERVR,MAGPL,MAGVERX
"RTN","MAGGTAU",34,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",35,0)
 S MAGNAME=$P(DATA,U,1)
"RTN","MAGGTAU",36,0)
 S MAGCDT=$P(DATA,U,2)
"RTN","MAGGTAU",37,0)
 S MAGDDT=$P(DATA,U,3)
"RTN","MAGGTAU",38,0)
 S MAGLOC=$P(DATA,U,4)
"RTN","MAGGTAU",39,0)
 S MAGSETUP=$P(DATA,U,5)
"RTN","MAGGTAU",40,0)
 S MAGVERSD=$P(DATA,U,6)
"RTN","MAGGTAU",41,0)
 S MAGVERSC=$P(DATA,U,7)
"RTN","MAGGTAU",42,0)
 S MAGMODE=$P(DATA,U,8)
"RTN","MAGGTAU",43,0)
 S MAGOSVER=$P(DATA,U,9)
"RTN","MAGGTAU",44,0)
 S MAGVERVR=$P(DATA,U,10)
"RTN","MAGGTAU",45,0)
 S MAGIEN=0
"RTN","MAGGTAU",46,0)
 I $L(MAGNAME) S MAGIEN=$O(^MAG(2006.81,"B",MAGNAME,""))
"RTN","MAGGTAU",47,0)
 I 'MAGIEN D NEWWRKS(MAGNAME,MAGLOC,.MAGIEN)
"RTN","MAGGTAU",48,0)
 I MAGIEN<1 S MAGRY="0^Workstation Not on file" Q
"RTN","MAGGTAU",49,0)
 ;
"RTN","MAGGTAU",50,0)
 S %DT="T",X=MAGCDT D ^%DT S MAGCDT=Y
"RTN","MAGGTAU",51,0)
 S %DT="T",X=MAGDDT D ^%DT S MAGDDT=Y
"RTN","MAGGTAU",52,0)
 S %DT="T",X=MAGSETUP D ^%DT S MAGSETUP=Y
"RTN","MAGGTAU",53,0)
 S MAG0=^MAG(2006.81,MAGIEN,0) ; '0' node for use later.
"RTN","MAGGTAU",54,0)
 L +^MAG(2006.81,"LOCK",MAGIEN):0
"RTN","MAGGTAU",55,0)
 S MAGIEN=+MAGIEN_","
"RTN","MAGGTAU",56,0)
 S MAGGFDA(2006.81,MAGIEN,.01)=MAGNAME ; Compter Name
"RTN","MAGGTAU",57,0)
 I MAGCDT>-1 S MAGGFDA(2006.81,MAGIEN,4)=MAGCDT ;TELE19N.EXE dttm
"RTN","MAGGTAU",58,0)
 I MAGDDT>-1 S MAGGFDA(2006.81,MAGIEN,5)=MAGDDT ;IMGVWP10.EXE dttm
"RTN","MAGGTAU",59,0)
 I MAGSETUP>-1 S MAGGFDA(2006.81,MAGIEN,7)=MAGSETUP ; MAGSETUP.EXE dttm
"RTN","MAGGTAU",60,0)
 S MAGGFDA(2006.81,MAGIEN,8)=1 ; Active or not.
"RTN","MAGGTAU",61,0)
 S MAGGFDA(2006.81,MAGIEN,6)=MAGLOC ; location free text from .INI
"RTN","MAGGTAU",62,0)
 S MAGGFDA(2006.81,MAGIEN,3)="@" ; delete logff time for this job.
"RTN","MAGGTAU",63,0)
 S MAGGFDA(2006.81,MAGIEN,10)="@" ; delete session pointer
"RTN","MAGGTAU",64,0)
 S MAGGFDA(2006.81,MAGIEN,11)="@" ; reset the session error count.
"RTN","MAGGTAU",65,0)
 S MAGGFDA(2006.81,MAGIEN,9)=MAGVERSD ; IMGVWP10.EXE Version Info
"RTN","MAGGTAU",66,0)
 S MAGGFDA(2006.81,MAGIEN,9.5)=MAGVERSC ; TELE19N.EXE Version Info
"RTN","MAGGTAU",67,0)
 S MAGGFDA(2006.81,MAGIEN,9.7)=MAGVERVR ; VistARad.EXE Version Info
"RTN","MAGGTAU",68,0)
 S MAGGFDA(2006.81,MAGIEN,13)=MAGOSVER ; Operating System Version.
"RTN","MAGGTAU",69,0)
 ;
"RTN","MAGGTAU",70,0)
 S X=$P(MAG0,U,12)
"RTN","MAGGTAU",71,0)
 S MAGGFDA(2006.81,MAGIEN,12)=X+1 ; Sess count for wrks.
"RTN","MAGGTAU",72,0)
 ; Keep the last PLACE that this wrks logged in.
"RTN","MAGGTAU",73,0)
 S MAGPL=0 I $D(DUZ(2)) S MAGPL=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI
"RTN","MAGGTAU",74,0)
 I MAGPL S MAGGFDA(2006.81,MAGIEN,.04)=MAGPL ; DBI
"RTN","MAGGTAU",75,0)
 ;
"RTN","MAGGTAU",76,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTAU",77,0)
 S MAGSTART=$E(X,1,12)
"RTN","MAGGTAU",78,0)
 I $G(DUZ) D
"RTN","MAGGTAU",79,0)
 . S MAGGFDA(2006.81,MAGIEN,1)=DUZ
"RTN","MAGGTAU",80,0)
 . S MAGGFDA(2006.81,MAGIEN,2)=MAGSTART
"RTN","MAGGTAU",81,0)
 ;
"RTN","MAGGTAU",82,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",83,0)
 I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGTAU",84,0)
 ; The " MAGJOB(" array is used by Imaging routines that are
"RTN","MAGGTAU",85,0)
 ; called from the Delphi App. 
"RTN","MAGGTAU",86,0)
 ; We use nodes of the Array MAGJ0B to organize the shared partition variables.
"RTN","MAGGTAU",87,0)
 ; 
"RTN","MAGGTAU",88,0)
 ; 3.O.8 Whatever App calls this, we'll use that Version number.
"RTN","MAGGTAU",89,0)
 S MAGVERX=$S(MAGVERSD]"":MAGVERSD,MAGVERSC]"":MAGVERSC,MAGVERVR]"":MAGVERVR,1:0)
"RTN","MAGGTAU",90,0)
 S MAGJOB("WRKSIEN")=+MAGIEN
"RTN","MAGGTAU",91,0)
 S MAGJOB("VERSION")=MAGVERX
"RTN","MAGGTAU",92,0)
 S MAGRY="1^"
"RTN","MAGGTAU",93,0)
 ;
"RTN","MAGGTAU",94,0)
 ; SESSION : Now we create new session entry
"RTN","MAGGTAU",95,0)
 D GETS^DIQ(200,DUZ_",","29","I","Z","") ; service/section
"RTN","MAGGTAU",96,0)
 S MAGSRV=$G(Z(200,DUZ_",",29,"I"))
"RTN","MAGGTAU",97,0)
 ;
"RTN","MAGGTAU",98,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",99,0)
 S MAGGFDA(2006.82,"+1,",.01)=$P(^VA(200,DUZ,0),U,1) ; User
"RTN","MAGGTAU",100,0)
 S MAGGFDA(2006.82,"+1,",1)=DUZ ; USER
"RTN","MAGGTAU",101,0)
 S MAGGFDA(2006.82,"+1,",2)=MAGSTART ; Sess Start Time
"RTN","MAGGTAU",102,0)
 S MAGGFDA(2006.82,"+1,",4)=+MAGIEN ; Wrks
"RTN","MAGGTAU",103,0)
 S MAGGFDA(2006.82,"+1,",7)=+MAGSRV ; User's Service/Section
"RTN","MAGGTAU",104,0)
 S MAGGFDA(2006.82,"+1,",13)=MAGMODE ; 1=normal 2= started by CPRS
"RTN","MAGGTAU",105,0)
 ; DBI - save the logon PLACE in the Session file.
"RTN","MAGGTAU",106,0)
 I MAGPL S MAGGFDA(2006.82,"+1,",.04)=MAGPL ; User's Institution (Imaging site param entry)
"RTN","MAGGTAU",107,0)
 ;
"RTN","MAGGTAU",108,0)
 ;3.0.8  new fields 9 Client Ver, 9.2 Host Version, 9.4 OS Version 
"RTN","MAGGTAU",109,0)
 S MAGGFDA(2006.82,"+1,",9)=MAGVERX ;
"RTN","MAGGTAU",110,0)
 S MAGGFDA(2006.82,"+1,",9.2)=$$VERSION^XPDUTL("IMAGING") ;
"RTN","MAGGTAU",111,0)
 S MAGGFDA(2006.82,"+1,",9.4)=MAGOSVER ;
"RTN","MAGGTAU",112,0)
 ;         
"RTN","MAGGTAU",113,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",114,0)
 I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGTAU",115,0)
 S MAGRY="1^"
"RTN","MAGGTAU",116,0)
 I '+MAGXIEN(1) S MAGRY="0^" Q
"RTN","MAGGTAU",117,0)
 S MAGJOB("SESSION")=+MAGXIEN(1)
"RTN","MAGGTAU",118,0)
 S MAGRY=MAGJOB("SESSION")_"^Session # "_MAGJOB("SESSION")_" Started."
"RTN","MAGGTAU",119,0)
 S MAGGFDA(2006.81,+MAGIEN_",",10)=+MAGXIEN(1)
"RTN","MAGGTAU",120,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",121,0)
 D ACTION("LOGON^")
"RTN","MAGGTAU",122,0)
 Q
"RTN","MAGGTAU",123,0)
LOGACT(MAGRY,ACTION) ;RPC [MAG3 LOGACTION]
"RTN","MAGGTAU",124,0)
 ; Call to log actions for Imaging Session from
"RTN","MAGGTAU",125,0)
 ; Delphi interface
"RTN","MAGGTAU",126,0)
 D ACTION(ACTION)
"RTN","MAGGTAU",127,0)
 S MAGRY="1^Action Logged"
"RTN","MAGGTAU",128,0)
 Q
"RTN","MAGGTAU",129,0)
ACTION(TXT,LOGTM,MAGSESS) ;Call to log actions for Imaging Workstation Session from other M routines
"RTN","MAGGTAU",130,0)
 ; ACTIONS LOGGED
"RTN","MAGGTAU",131,0)
 ; LOGON - Session StartTime     LOGOFF - Session End Time
"RTN","MAGGTAU",132,0)
 ; IMG   - Image accessed        PAT    - Patient Accessed
"RTN","MAGGTAU",133,0)
 ; CAP   - Image Captured  
"RTN","MAGGTAU",134,0)
 ; DEL   - Image Deleted         MOD    - Image entry modified
"RTN","MAGGTAU",135,0)
 ; IMPORT - Import API has been called
"RTN","MAGGTAU",136,0)
 ; Data   - a node of data passed to Import API
"RTN","MAGGTAU",137,0)
 ; Result - a node of the Result Array from Import API Processing.
"RTN","MAGGTAU",138,0)
 ; Image  - one of the Images (full path of import directory) that was imported.
"RTN","MAGGTAU",139,0)
 ; PPACT  - A Post processing Action has been processed.
"RTN","MAGGTAU",140,0)
 ; VR-VW  - VistaRad Exam displayed
"RTN","MAGGTAU",141,0)
 ; VR-INT - VistaRad Exam interpreted
"RTN","MAGGTAU",142,0)
 ; API   - parameters sent to CP API, and the API Call i.e. ITIU-MDAPI
"RTN","MAGGTAU",143,0)
 ; DFTINDX- If the index fields have no values, call to Patch 17 code to
"RTN","MAGGTAU",144,0)
 ;               generate the values for the fields.
"RTN","MAGGTAU",145,0)
 ; MOD   - This was intended to log Modifications to Image Entries, it is 
"RTN","MAGGTAU",146,0)
 ;         (for now) only called when a group entry has an image added to its multiple.
"RTN","MAGGTAU",147,0)
 ;
"RTN","MAGGTAU",148,0)
 ; TXT is "^" delimited string
"RTN","MAGGTAU",149,0)
 ; $P(1) is code ( see above )   $P(2) is DFN
"RTN","MAGGTAU",150,0)
 ; $P(3) is Image IEN            $P(4) reserved for procedure
"RTN","MAGGTAU",151,0)
 ; $P(5) reserved for time-stamp $P(6) is Vrad Image Count
"RTN","MAGGTAU",152,0)
 ; $P(7) is Vrad Patient Count
"RTN","MAGGTAU",153,0)
 ; $P(8) is Vrad User Type (1/0 = Rad/Non-Rad)
"RTN","MAGGTAU",154,0)
 ; $P(9) is Vrad REMOTE Read flag (1/0; 1=REMOTE)
"RTN","MAGGTAU",155,0)
 ; $P(TXT,"$$",2) is Tracking ID from an Imported Image.  From this we compute Session #, to log actions.
"RTN","MAGGTAU",156,0)
 ; LOGTM   - [1|0] Flag to indicate wheter or not to log the time of the Action.  Default = 0
"RTN","MAGGTAU",157,0)
 ; MAGSESS - Session IEN where the action should be logged.  Default to MAGJOB("SESSION")
"RTN","MAGGTAU",158,0)
 ;
"RTN","MAGGTAU",159,0)
 N NODE,SESSIEN,MAGGFDA,MAGXERR,MAGXIEN,MAGPROC,LOGX,TRKID
"RTN","MAGGTAU",160,0)
 S LOGTM=$G(LOGTM)
"RTN","MAGGTAU",161,0)
 I TXT["$$" S TRKID=$P(TXT,"$$",2),TXT=$P(TXT,"$$",1)
"RTN","MAGGTAU",162,0)
 S SESSIEN=$S($G(MAGSESS):MAGSESS,$D(MAGJOB("SESSION")):MAGJOB("SESSION"),$G(TRKID)'="":$O(^MAG(2006.82,"E",TRKID,""),-1),1:0)
"RTN","MAGGTAU",163,0)
 I 'SESSIEN Q
"RTN","MAGGTAU",164,0)
 S NODE="+1,"_SESSIEN_","
"RTN","MAGGTAU",165,0)
 I $P(TXT,U,3) S MAGPROC=$P($G(^MAG(2005,$P(TXT,U,3),0)),U,8)
"RTN","MAGGTAU",166,0)
 ;
"RTN","MAGGTAU",167,0)
 I $P(TXT,U)="PAT" D
"RTN","MAGGTAU",168,0)
 . S Z=+$G(^MAG(2006.82,SESSIEN,1))+1
"RTN","MAGGTAU",169,0)
 . S MAGGFDA(2006.82,SESSIEN_",",10)=Z
"RTN","MAGGTAU",170,0)
 I $P(TXT,U)="IMG" D
"RTN","MAGGTAU",171,0)
 . S Z=+$P($G(^MAG(2006.82,SESSIEN,1)),U,2)+1
"RTN","MAGGTAU",172,0)
 . S MAGGFDA(2006.82,SESSIEN_",",11)=Z
"RTN","MAGGTAU",173,0)
 . D ENTRY^MAGLOG("IMGVW",DUZ,$P(TXT,"^",3),"Wrks",$P(TXT,"^",2),"1")
"RTN","MAGGTAU",174,0)
 . D ACCESS^MAGLOG($P(TXT,"^",3))
"RTN","MAGGTAU",175,0)
 I $E(TXT,1,3)="CAP" D
"RTN","MAGGTAU",176,0)
 . S Z=+$P($G(^MAG(2006.82,SESSIEN,1)),U,3)+1
"RTN","MAGGTAU",177,0)
 . S MAGGFDA(2006.82,SESSIEN_",",12)=Z
"RTN","MAGGTAU",178,0)
 . D ENTRY^MAGLOG("CAP",DUZ,$P(TXT,"^",3),"Wrks",$P(TXT,"^",2),"1")
"RTN","MAGGTAU",179,0)
 I $P(TXT,U,2) D
"RTN","MAGGTAU",180,0)
 . S MAGGFDA(2006.82,SESSIEN_",",5)=$P(TXT,U,2)
"RTN","MAGGTAU",181,0)
 I LOGTM D
"RTN","MAGGTAU",182,0)
 . S X=$$NOW^XLFDT
"RTN","MAGGTAU",183,0)
 . S $P(TXT,U,4)=$G(MAGPROC),$P(TXT,U,5)=$E(X,1,12)
"RTN","MAGGTAU",184,0)
 S MAGGFDA(2006.821,NODE,.01)=$P(TXT,"|",1)
"RTN","MAGGTAU",185,0)
 I $L(TXT,"|")>1 S MAGGFDA(2006.821,NODE,13)=$P(TXT,"|",2,99)
"RTN","MAGGTAU",186,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",187,0)
 Q
"RTN","MAGGTAU",188,0)
NEWWRKS(MAGNAME,MAGLOC,MAGIEN) ;
"RTN","MAGGTAU",189,0)
 I $G(MAGNAME)="" Q
"RTN","MAGGTAU",190,0)
 N Y,MAGNFDA,MAGNIEN
"RTN","MAGGTAU",191,0)
 S MAGNFDA(2006.81,"+1,",.01)=MAGNAME
"RTN","MAGGTAU",192,0)
 S MAGNFDA(2006.81,"+1,",6)=$G(MAGLOC)
"RTN","MAGGTAU",193,0)
 D UPDATE^DIE("","MAGNFDA","MAGNIEN")
"RTN","MAGGTAU",194,0)
 S MAGIEN=MAGNIEN(1)
"RTN","MAGGTAU",195,0)
 Q
"RTN","MAGGTAU",196,0)
LOGOFF(MAGRY) ;RPC [MAGG LOGOFF] Call when session is over.
"RTN","MAGGTAU",197,0)
 ; This updates session file with logoff time
"RTN","MAGGTAU",198,0)
 ;   and marks the session closed.
"RTN","MAGGTAU",199,0)
 ;
"RTN","MAGGTAU",200,0)
 K ^TMP("MAGGTAU","LOGOFF",$J)
"RTN","MAGGTAU",201,0)
 S MAGRY=1
"RTN","MAGGTAU",202,0)
 N MAGGFDA,MAGXERR,MAGXIEN,MAGIEN,MAGSESS,MAGEND,MAGCON
"RTN","MAGGTAU",203,0)
 ; The Imaging Workstation file keeps time of login
"RTN","MAGGTAU",204,0)
 ; We'll enter the logoff time ($$now^xlfdt) here.
"RTN","MAGGTAU",205,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTAU",206,0)
 S MAGEND=$E(X,1,12)
"RTN","MAGGTAU",207,0)
 Q:'+$G(MAGJOB("WRKSIEN"))
"RTN","MAGGTAU",208,0)
 L -^MAG(2006.81,"LOCK",MAGJOB("WRKSIEN"))
"RTN","MAGGTAU",209,0)
 S MAGIEN=+MAGJOB("WRKSIEN")_","
"RTN","MAGGTAU",210,0)
 S MAGGFDA(2006.81,MAGIEN,3)=MAGEND ; logoff dttm
"RTN","MAGGTAU",211,0)
 S MAGGFDA(2006.81,MAGIEN,8)=0 ; Set job number to 0
"RTN","MAGGTAU",212,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",213,0)
 ;MAGJOB("WRKSIEN")
"RTN","MAGGTAU",214,0)
 Q:(+$G(MAGJOB("SESSION"))=0)
"RTN","MAGGTAU",215,0)
 S MAGSESS=+MAGJOB("SESSION")_","
"RTN","MAGGTAU",216,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",217,0)
 S MAGGFDA(2006.82,MAGSESS,3)=MAGEND
"RTN","MAGGTAU",218,0)
 ; calculate the length of the session
"RTN","MAGGTAU",219,0)
 S MAGCON=""
"RTN","MAGGTAU",220,0)
 S MAGGFDA(2006.82,MAGSESS,14)=MAGCON
"RTN","MAGGTAU",221,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",222,0)
 D ACTION("LOGOFF^")
"RTN","MAGGTAU",223,0)
 ;
"RTN","MAGGTAU",224,0)
 Q
"RTN","MAGGTAU",225,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGTAU",226,0)
 S ETXT="0^ERROR  "_MAGXERR("DIERR",1,"TEXT",1)
"RTN","MAGGTAU",227,0)
 Q
"RTN","MAGGTERR")
0^71^B5312930
"RTN","MAGGTERR",1,0)
MAGGTERR ;WOIFO/GEK - IMAGING ERROR TRAP, AND ERROR LOG ; [ 06/20/2001 08:56 ]
"RTN","MAGGTERR",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTERR",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTERR",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTERR",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTERR",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTERR",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTERR",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTERR",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTERR",10,0)
 ;; |                                                               |
"RTN","MAGGTERR",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTERR",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTERR",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTERR",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTERR",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTERR",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTERR",17,0)
 ;;
"RTN","MAGGTERR",18,0)
 Q
"RTN","MAGGTERR",19,0)
 ;  Imaging routines should have this code for setting error trap
"RTN","MAGGTERR",20,0)
 ;  This will enable logging Imaging errors and Sending messages for
"RTN","MAGGTERR",21,0)
 ;  certain errors etc. later
"RTN","MAGGTERR",22,0)
 ;IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTERR",23,0)
 ;E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTERR",24,0)
 ;
"RTN","MAGGTERR",25,0)
 ; This assumes the Return variable or array is MAGRY or MAGRY()
"RTN","MAGGTERR",26,0)
 Q
"RTN","MAGGTERR",27,0)
ERRA ; ERROR TRAP FOR Array Return variables
"RTN","MAGGTERR",28,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTERR",29,0)
 S MAGRY(0)="0^"_ERR
"RTN","MAGGTERR",30,0)
 D LOGERR(ERR)
"RTN","MAGGTERR",31,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTERR",32,0)
 Q
"RTN","MAGGTERR",33,0)
 ;
"RTN","MAGGTERR",34,0)
AERRA ; ERROR TRAP FOR Global Return Variables
"RTN","MAGGTERR",35,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTERR",36,0)
 S @MAGRY@(0)="0^ERROR "_ERR
"RTN","MAGGTERR",37,0)
 D LOGERR(ERR)
"RTN","MAGGTERR",38,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTERR",39,0)
 Q
"RTN","MAGGTERR",40,0)
ERR ; ERROR TRAP FOR String Return variables
"RTN","MAGGTERR",41,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTERR",42,0)
 S MAGRY="0^ERROR "_ERR
"RTN","MAGGTERR",43,0)
 D LOGERR(ERR)
"RTN","MAGGTERR",44,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTERR",45,0)
 Q
"RTN","MAGGTERR",46,0)
LOGERR(ERROR) ;
"RTN","MAGGTERR",47,0)
 Q:'$G(MAGJOB("SESSION"))
"RTN","MAGGTERR",48,0)
 N MAGGFDA,MAGXERR,MAGXIEN,MAGNODE
"RTN","MAGGTERR",49,0)
 S MAGNODE="+1,"_+MAGJOB("SESSION")_","
"RTN","MAGGTERR",50,0)
 ;S MAGNODE="+1,10,"
"RTN","MAGGTERR",51,0)
 S MAGGFDA(2006.823,MAGNODE,.01)=ERROR
"RTN","MAGGTERR",52,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTERR",53,0)
 ; error flag for this session in workstation file
"RTN","MAGGTERR",54,0)
 S MAGNODE=+MAGJOB("WRKSIEN")_","
"RTN","MAGGTERR",55,0)
 S MAGGFDA(2006.81,MAGNODE,11)=+MAGXIEN(1) ;
"RTN","MAGGTERR",56,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTERR",57,0)
 Q
"RTN","MAGGTIA")
0^53^B41249295
"RTN","MAGGTIA",1,0)
MAGGTIA ;WOIFO/GEK/RMP - Imaging RPC Broker calls. Add/Modify Image entry ; [ 11/08/2001 17:18 ]
"RTN","MAGGTIA",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTIA",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIA",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIA",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIA",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIA",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIA",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIA",10,0)
 ;; |                                                               |
"RTN","MAGGTIA",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIA",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIA",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIA",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIA",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIA",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA",17,0)
 ;;
"RTN","MAGGTIA",18,0)
 Q
"RTN","MAGGTIA",19,0)
 ;
"RTN","MAGGTIA",20,0)
 ;**** CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE
"RTN","MAGGTIA",21,0)
 ;**** on DISK TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGTIA",22,0)
 ;
"RTN","MAGGTIA",23,0)
ADD(MAGRY,MAGGZ) ; RPC [MAGGADDIMAGE] 
"RTN","MAGGTIA",24,0)
 ; Call to UPDATE^DIE to Add an Image File entry
"RTN","MAGGTIA",25,0)
 ; MAGGZ is an array of fields and their entries
"RTN","MAGGTIA",26,0)
 ;  i.e. MAGGZ(1)=".5^38"  Image File,  field .5   data is 38
"RTN","MAGGTIA",27,0)
 ; If Long Description is included in fields, we create a new
"RTN","MAGGTIA",28,0)
 ;  array to hold the text, and pass that to UPDATE^DIE
"RTN","MAGGTIA",29,0)
 ; If this entry is an object group
"RTN","MAGGTIA",30,0)
 ;  i.e. MAGGZ(n)="2005.04^344"
"RTN","MAGGTIA",31,0)
 ;   (the field 2005.04 is the OBJECT GROUP MULTIPLE)
"RTN","MAGGTIA",32,0)
 ;
"RTN","MAGGTIA",33,0)
 ; MAGRY - Ret variable (Single Variable)
"RTN","MAGGTIA",34,0)
 ;  
"RTN","MAGGTIA",35,0)
 ;   Changed to include hierarchial directory hash  - PMK 04/23/98
"RTN","MAGGTIA",36,0)
 ;   If successful   MAGRY = IEN^FILE NAME (with full path)
"RTN","MAGGTIA",37,0)
 ;        IEN is Internal Entry Number of ^MAG(2005
"RTN","MAGGTIA",38,0)
 ;   If UNsuccessful MAGRY = 0^Error desc
"RTN","MAGGTIA",39,0)
 ;
"RTN","MAGGTIA",40,0)
 ; CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE on DISK
"RTN","MAGGTIA",41,0)
 ;   TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGTIA",42,0)
 ;----------------------------------------------------------------
"RTN","MAGGTIA",43,0)
 N MAGGXE,MAGGFDA,MAGGIEN,MAGGDRV,MAGGR,MAGGRC,MAGGDA,MAGGFNM
"RTN","MAGGTIA",44,0)
 N MAGGWP,MAGGWPC,MAGGFLD,MAGGDAT,MAGERR,MAGGEXT,MAGGJB
"RTN","MAGGTIA",45,0)
 N MAGADD,MAGMOD,MAGWRITE,MAGREF,MAGDHASH,MAGDCMSN,MAGDCMIN
"RTN","MAGGTIA",46,0)
 N MAGBIG,MAGGABS,MAGQY,MAGRET,MAGETXT
"RTN","MAGGTIA",47,0)
 N MAGFSPEC,MAGFNM
"RTN","MAGGTIA",48,0)
 N I,J,X,Y,Z,ZZ
"RTN","MAGGTIA",49,0)
 ;
"RTN","MAGGTIA",50,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTIA",51,0)
 ;
"RTN","MAGGTIA",52,0)
 S MAGADD=1 ;Flag says we are adding an entry.
"RTN","MAGGTIA",53,0)
 S MAGRY="0^Starting Add Image Entry"
"RTN","MAGGTIA",54,0)
 S MAGERR="",MAGGR=0,MAGGRC=1,MAGGWPC=0
"RTN","MAGGTIA",55,0)
 I ($D(MAGGZ)<10) S MAGRY="0^No input data, Operation CANCELED" Q
"RTN","MAGGTIA",56,0)
 ;
"RTN","MAGGTIA",57,0)
 S Z="" F  S Z=$O(MAGGZ(Z)) Q:Z=""  D  I $L(MAGERR) Q
"RTN","MAGGTIA",58,0)
 . S MAGGFLD=$P(MAGGZ(Z),U,1),MAGGDAT=$P(MAGGZ(Z),U,2,99)
"RTN","MAGGTIA",59,0)
 . I MAGGFLD=""!(MAGGDAT="") S MAGRY="0^Field and Value are Required" Q
"RTN","MAGGTIA",60,0)
 . I MAGGFLD=5 S MAGGDAT=+MAGGDAT ; MOD RED 10/5/95
"RTN","MAGGTIA",61,0)
 . I MAGGFLD=2005.04 S MAGGDAT=+MAGGDAT ; MOD RED 10/18/95
"RTN","MAGGTIA",62,0)
 . I MAGGFLD="IEN" S MAGMOD=+MAGGDAT Q
"RTN","MAGGTIA",63,0)
 . I MAGGFLD="EXT" S MAGGEXT=MAGGDAT Q
"RTN","MAGGTIA",64,0)
 . I MAGGFLD="ABS" S MAGGABS=MAGGDAT Q
"RTN","MAGGTIA",65,0)
 . I MAGGFLD="JB" S MAGGJB=MAGGDAT Q
"RTN","MAGGTIA",66,0)
 . I MAGGFLD="WRITE" S MAGWRITE=MAGGDAT Q
"RTN","MAGGTIA",67,0)
 . I MAGGFLD="BIG" S MAGBIG=MAGGDAT Q
"RTN","MAGGTIA",68,0)
 . I MAGGFLD="DICOMSN" S MAGDCMSN=MAGGDAT Q
"RTN","MAGGTIA",69,0)
 . I MAGGFLD="DICOMIN" S MAGDCMIN=MAGGDAT Q
"RTN","MAGGTIA",70,0)
 . ;
"RTN","MAGGTIA",71,0)
 . ; if this is a group object.
"RTN","MAGGTIA",72,0)
 . I MAGGFLD=2005.04 D  Q
"RTN","MAGGTIA",73,0)
 . . S MAGGR=1
"RTN","MAGGTIA",74,0)
 . . I '+MAGGDAT Q  ; making a group entry, with no group entries.
"RTN","MAGGTIA",75,0)
 . . S MAGGR(MAGGDAT)=""
"RTN","MAGGTIA",76,0)
 . . S MAGGRC=MAGGRC+1
"RTN","MAGGTIA",77,0)
 . . I '$D(^MAG(2005,MAGGDAT,0)) S MAGERR="0^Group Object "_MAGGDAT_" doesn't exist"
"RTN","MAGGTIA",78,0)
 . . S MAGGFDA(2005.04,"+"_MAGGRC_",+1,",.01)=MAGGDAT
"RTN","MAGGTIA",79,0)
 . ;
"RTN","MAGGTIA",80,0)
 . ; if we are getting a WP for Long Desc, set array to pass.
"RTN","MAGGTIA",81,0)
 . I MAGGFLD=11 D  ; this is a line of the WP Long Desc field.
"RTN","MAGGTIA",82,0)
 . . S MAGGWPC=MAGGWPC+1,MAGGWP(MAGGWPC)=MAGGDAT
"RTN","MAGGTIA",83,0)
 . ;
"RTN","MAGGTIA",84,0)
 . ;if a BAD field number
"RTN","MAGGTIA",85,0)
 . I '$$VFIELD^DILFD(2005,MAGGFLD) S MAGERR="0^Field Number "_MAGGFLD_" doesn't exist" Q
"RTN","MAGGTIA",86,0)
 . ;
"RTN","MAGGTIA",87,0)
 . ; Get Field Specifiers
"RTN","MAGGTIA",88,0)
 . D FIELD^DID(2005,MAGGFLD,"","LABEL;SPECIFIER","MAGFSPEC")
"RTN","MAGGTIA",89,0)
 . ; if a Date field, we'll convert it here.
"RTN","MAGGTIA",90,0)
 . I (MAGFSPEC("SPECIFIER")["D") D  Q:$L(MAGERR)
"RTN","MAGGTIA",91,0)
 . . S %DT="T",X=MAGGDAT D ^%DT
"RTN","MAGGTIA",92,0)
 . . I Y=-1 S MAGERR="0^Invalid Date: "_MAGGDAT_" Field: "_MAGFSPEC("LABEL") Q
"RTN","MAGGTIA",93,0)
 . . S MAGGDAT=Y
"RTN","MAGGTIA",94,0)
 . ;
"RTN","MAGGTIA",95,0)
 . ;  if a pointer field, we'll assure the pointed to entry exists.
"RTN","MAGGTIA",96,0)
 . I (MAGFSPEC("SPECIFIER")["P") D  Q:$L(MAGERR)
"RTN","MAGGTIA",97,0)
 . . I ($$EXTERNAL^DILFD(2005,MAGGFLD,"",MAGGDAT)="") S MAGERR="0^Invalid Value for Field "_MAGFSPEC("LABEL") Q
"RTN","MAGGTIA",98,0)
 . ;
"RTN","MAGGTIA",99,0)
 . I (MAGFSPEC("SPECIFIER")["S") D  Q:$L(MAGERR)
"RTN","MAGGTIA",100,0)
 . . D VAL^DIE(2005,"",MAGGFLD,"",MAGGDAT,.MAGRET,"","MAGETXT") I MAGRET="^" D  Q
"RTN","MAGGTIA",101,0)
 . . . S MAGERR="0^"_MAGETXT("DIERR",1,"TEXT",1)
"RTN","MAGGTIA",102,0)
 . ;
"RTN","MAGGTIA",103,0)
 . ; made it here, so set the Node for the UPDATE^DIC Call.
"RTN","MAGGTIA",104,0)
 . S MAGGFDA(2005,"+1,",MAGGFLD)=MAGGDAT
"RTN","MAGGTIA",105,0)
 ;
"RTN","MAGGTIA",106,0)
 ; if there was an Error in data we'll quit now.
"RTN","MAGGTIA",107,0)
 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",108,0)
 I $D(MAGMOD) D
"RTN","MAGGTIA",109,0)
 . I $D(MAGGWP) S MAGGFDA(2005,"+1,",11)="MAGGWP"
"RTN","MAGGTIA",110,0)
 . S MAGMOD=MAGMOD_","
"RTN","MAGGTIA",111,0)
 . M MAGXXX(2005,MAGMOD)=MAGGFDA(2005,"+1,") K MAGGFDA
"RTN","MAGGTIA",112,0)
 . M MAGGFDA=MAGXXX K MAGXXX
"RTN","MAGGTIA",113,0)
 I $D(MAGMOD) D ADD^MAGGTIA1 Q
"RTN","MAGGTIA",114,0)
 ;
"RTN","MAGGTIA",115,0)
 ;  some possible problems, we'll check for now.
"RTN","MAGGTIA",116,0)
 I '$D(MAGGFDA(2005,"+1,")) S MAGRY="0^No data to file  Operation CANCELED " Q
"RTN","MAGGTIA",117,0)
 ;
"RTN","MAGGTIA",118,0)
 ;  We're making Object Type and either Patient, or short Desc Required.
"RTN","MAGGTIA",119,0)
 I '$D(MAGGFDA(2005,"+1,",3)) S MAGRY="0^Need an Object Type " Q
"RTN","MAGGTIA",120,0)
 ; Change to require patient. not patient or short desc.
"RTN","MAGGTIA",121,0)
 I '$D(MAGGFDA(2005,"+1,",5)) D  Q
"RTN","MAGGTIA",122,0)
 . S MAGRY="0^Need Patient.  Operation CANCELED "
"RTN","MAGGTIA",123,0)
 ; MAGQA check.
"RTN","MAGGTIA",124,0)
 D QACHK^MAGGTIA2(.MAGQY,MAGGFDA(2005,"+1,",5),$G(MAGGFDA(2005,"+1,",16)),$G(MAGGFDA(2005,"+1,",17)))
"RTN","MAGGTIA",125,0)
 I 'MAGQY S MAGRY=MAGQY Q
"RTN","MAGGTIA",126,0)
 ;-Checking for a missing TYPE value, and generating a value if needed
"RTN","MAGGTIA",127,0)
 ;- are being deferred to a later patch.
"RTN","MAGGTIA",128,0)
 ; Check for Image TYPE #42
"RTN","MAGGTIA",129,0)
 ;-I '$D(MAGGFDA(2005,"+1,",42)) D MAKETYPE^MAGGSIA1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",130,0)
 ; Check for Image Class, #41
"RTN","MAGGTIA",131,0)
 I '$D(MAGGFDA(2005,"+1,",41)) D MAKECLAS^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",132,0)
 ; IF no Procedure text we'll give it some so crossref will set.
"RTN","MAGGTIA",133,0)
 I '$D(MAGGFDA(2005,"+1,",6)) S MAGGFDA(2005,"+1,",6)="NO TEXT"
"RTN","MAGGTIA",134,0)
 ; If no Procedure/Exam Date/Time we'll give it NOW
"RTN","MAGGTIA",135,0)
 I '$D(MAGGFDA(2005,"+1,",15)) S MAGGFDA(2005,"+1,",15)=$$NOW^XLFDT
"RTN","MAGGTIA",136,0)
 ; DateTime image saved.
"RTN","MAGGTIA",137,0)
 I '$D(MAGGFDA(2005,"+1,",7)) S MAGGFDA(2005,"+1,",7)=$$NOW^XLFDT
"RTN","MAGGTIA",138,0)
 ; If no INSTITUTION pointer then default to the DUZ(2) or the Kernel Site parameter file institution
"RTN","MAGGTIA",139,0)
 I '$D(MAGGFDA(2005,"+1,",.05)) D
"RTN","MAGGTIA",140,0)
 . I $D(DUZ(2)) S MAGGFDA(2005,"+1,",.05)=DUZ(2) Q
"RTN","MAGGTIA",141,0)
 . ;Q:$T(KSP^XUPARAM)=""  //GEK 4/15/2004 Not needed on Gateway anymore
"RTN","MAGGTIA",142,0)
 . S MAGGFDA(2005,"+1,",.05)=$$KSP^XUPARAM("INST")
"RTN","MAGGTIA",143,0)
 . Q
"RTN","MAGGTIA",144,0)
 ;
"RTN","MAGGTIA",145,0)
 I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$$MAKENAME^MAGGTIA1()
"RTN","MAGGTIA",146,0)
 ; Only get drive:dir if not a group
"RTN","MAGGTIA",147,0)
 I 'MAGGR D  I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",148,0)
 . S X=$S($D(MAGGFDA(2005,"+1,",2)):MAGGFDA(2005,"+1,",2),1:"")
"RTN","MAGGTIA",149,0)
 . S Z=$$DRIVE^MAGGTU1(X)                     ;Drv:Dir to Write
"RTN","MAGGTIA",150,0)
 . I 'Z S MAGERR=Z Q
"RTN","MAGGTIA",151,0)
 . S MAGGDRV=$P(Z,U,2)
"RTN","MAGGTIA",152,0)
 . S MAGGFDA(2005,"+1,",2)=+Z               ;Disk & Vol magnetic
"RTN","MAGGTIA",153,0)
 . ; if a big file is being made on workstation, put NetWork Location
"RTN","MAGGTIA",154,0)
 . ; pointer in the BIG NETWORK LOCATION field.
"RTN","MAGGTIA",155,0)
 . ; (BIG files default to same Network Location as FullRes (or PACS))
"RTN","MAGGTIA",156,0)
 . I $G(MAGBIG)=1 S MAGGFDA(2005,"+1,",102)=+Z
"RTN","MAGGTIA",157,0)
 . S MAGREF=+Z ; save network location ien for $$DIRHASH in ^MAGGTIA1
"RTN","MAGGTIA",158,0)
 . I $G(MAGGABS)="STUFFONLY" S MAGGFDA(2005,"+1,",2.1)=+Z
"RTN","MAGGTIA",159,0)
 ;
"RTN","MAGGTIA",160,0)
 ; If a Name (.01) wasn't sent, we'll make one
"RTN","MAGGTIA",161,0)
 ; We know that either Patient or Short Desc, and Object Type exist
"RTN","MAGGTIA",162,0)
 I '$D(MAGGFDA(2005,"+1,",.01)) S MAGGFDA(2005,"+1,",.01)=$$MAKENAME^MAGGTIA1()
"RTN","MAGGTIA",163,0)
 ;
"RTN","MAGGTIA",164,0)
 ; If a long description was sent.
"RTN","MAGGTIA",165,0)
 I $D(MAGGWP) S MAGGFDA(2005,"+1,",11)="MAGGWP"
"RTN","MAGGTIA",166,0)
 ;
"RTN","MAGGTIA",167,0)
 D ADD^MAGGTIA1 ; continued
"RTN","MAGGTIA",168,0)
 Q
"RTN","MAGGTIA1")
0^33^B21367924
"RTN","MAGGTIA1",1,0)
MAGGTIA1 ;WOIFO/GEK - RPC Call to Add Image File entry ; [ 06/20/2001 08:56 ]
"RTN","MAGGTIA1",2,0)
 ;;3.0;IMAGING;**21,8**;Sep 15, 2004
"RTN","MAGGTIA1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIA1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIA1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIA1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIA1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIA1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIA1",10,0)
 ;; |                                                               |
"RTN","MAGGTIA1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIA1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIA1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIA1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIA1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIA1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA1",17,0)
 ;;
"RTN","MAGGTIA1",18,0)
 Q
"RTN","MAGGTIA1",19,0)
ADD ;Now call Fileman to file the data
"RTN","MAGGTIA1",20,0)
 N GIEN,DIEN,NEWIEN,MAGGDA,X,Y
"RTN","MAGGTIA1",21,0)
 ;Because we delete the Image node on image deletion, we have to 
"RTN","MAGGTIA1",22,0)
 ; check the last entry in Audit File, to see if it is greater than 
"RTN","MAGGTIA1",23,0)
 ; last image in Image File.
"RTN","MAGGTIA1",24,0)
 I ($O(^MAG(2005,"A"),-1)<$O(^MAG(2005.1,"A"),-1)) S $P(^MAG(2005,0),U,3)=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGTIA1",25,0)
 ;   we know that MAGGIEN WILL contain the internal number.
"RTN","MAGGTIA1",26,0)
 ;    after the call.
"RTN","MAGGTIA1",27,0)
 ;
"RTN","MAGGTIA1",28,0)
 I $G(MAGMOD) D  Q  ; WE'LL QUIT AFTER MODIFICATION
"RTN","MAGGTIA1",29,0)
 . D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",30,0)
 . S MAGRY="1^OK"
"RTN","MAGGTIA1",31,0)
 . ; Now, after UPDATE^DIE, we aren't getting the MAGGIEN array., We'll use MAGMOD
"RTN","MAGGTIA1",32,0)
 . D ACTION^MAGGTAU("MOD^"_$P(^MAG(2005,+MAGMOD,0),U,7)_"^"_+$G(MAGMOD)) ; This is the Image IEN
"RTN","MAGGTIA1",33,0)
 ;
"RTN","MAGGTIA1",34,0)
 ; There are incidents of using an IEN from a deleted image (still)
"RTN","MAGGTIA1",35,0)
 ;  these next lines are TESTING for now.  To stop the problem.
"RTN","MAGGTIA1",36,0)
 S GIEN=$O(^MAG(2005," "),-1)+1
"RTN","MAGGTIA1",37,0)
 S DIEN=$O(^MAG(2005.1," "),-1)+1
"RTN","MAGGTIA1",38,0)
 S NEWIEN=$S(GIEN>DIEN:GIEN,1:DIEN)
"RTN","MAGGTIA1",39,0)
LOCK L +^MAG(2005,NEWIEN):0 E  S NEWIEN=NEWIEN+1 G LOCK
"RTN","MAGGTIA1",40,0)
 I $D(^MAG(2005,NEWIEN)) L -^MAG(2005,NEWIEN) S NEWIEN=NEWIEN+1 G LOCK
"RTN","MAGGTIA1",41,0)
 S MAGGIEN(1)=NEWIEN
"RTN","MAGGTIA1",42,0)
 D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",43,0)
 ;
"RTN","MAGGTIA1",44,0)
 I '$G(MAGGIEN(1)) D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",45,0)
 . S MAGERR="0^ERROR Creating new Image File Entry "
"RTN","MAGGTIA1",46,0)
 . I $D(DIERR) D RTRNERR(.MAGERR)
"RTN","MAGGTIA1",47,0)
 . D CLEAN
"RTN","MAGGTIA1",48,0)
 ;
"RTN","MAGGTIA1",49,0)
 S MAGGDA=MAGGIEN(1)
"RTN","MAGGTIA1",50,0)
 ;
"RTN","MAGGTIA1",51,0)
 D ACTION^MAGGTAU("CAP^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA)
"RTN","MAGGTIA1",52,0)
 ;
"RTN","MAGGTIA1",53,0)
 ; IF a group, Modify GROUP PARENT in each Group Object and QUIT
"RTN","MAGGTIA1",54,0)
 ;   we'll do this by hand, Else it'll take forever.
"RTN","MAGGTIA1",55,0)
 ;   we Return the IEN with NO Filename. Groups don't get Filename
"RTN","MAGGTIA1",56,0)
 ;
"RTN","MAGGTIA1",57,0)
 I MAGGR S MAGRY=MAGGDA_U,Z="" D  Q
"RTN","MAGGTIA1",58,0)
 . F  S Z=$O(MAGGR(Z)) Q:Z=""  S $P(^MAG(2005,Z,0),U,10)=MAGGDA
"RTN","MAGGTIA1",59,0)
 . D CLEAN
"RTN","MAGGTIA1",60,0)
 ;
"RTN","MAGGTIA1",61,0)
 S X=$G(MAGGFDA(2005,"+1,",14)) I +X D
"RTN","MAGGTIA1",62,0)
 . ; We're here beceause this image is a member of a Group
"RTN","MAGGTIA1",63,0)
 . ;   so we will modify the Group Parent, adding this to it's group
"RTN","MAGGTIA1",64,0)
 . ; HERE we will also send the 'Series Number' and 'Image Number' if
"RTN","MAGGTIA1",65,0)
 . ; they exist;
"RTN","MAGGTIA1",66,0)
 . K MAGGFDA
"RTN","MAGGTIA1",67,0)
 . S Y="+2,"_X_","
"RTN","MAGGTIA1",68,0)
 . S MAGGFDA(2005.04,Y,.01)=MAGGDA
"RTN","MAGGTIA1",69,0)
 . ; GEK 4/4/00 ADDED $L( we were dying on "0"
"RTN","MAGGTIA1",70,0)
 . I $L($G(MAGDCMSN)) S MAGGFDA(2005.04,Y,1)=MAGDCMSN
"RTN","MAGGTIA1",71,0)
 . I $L($G(MAGDCMIN)) S MAGGFDA(2005.04,Y,2)=MAGDCMIN
"RTN","MAGGTIA1",72,0)
 . D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",73,0)
 ;
"RTN","MAGGTIA1",74,0)
 ;
"RTN","MAGGTIA1",75,0)
 ;
"RTN","MAGGTIA1",76,0)
 ; now get the Image file name. DOS FILE name
"RTN","MAGGTIA1",77,0)
 ; ENTRY in Image File has been made, if any errors from here on
"RTN","MAGGTIA1",78,0)
 ;  then we have to delete the image entry.
"RTN","MAGGTIA1",79,0)
 I $D(MAGGFDA(2005,"+1,",1)) S MAGGFNM=MAGGFDA(2005,"+1,",1) G C1
"RTN","MAGGTIA1",80,0)
 K MAGGFDA
"RTN","MAGGTIA1",81,0)
 S X=$$DA2NAME^MAGGTU1(MAGGDA,$G(MAGGEXT)) I 'X D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",82,0)
 . S MAGERR=X
"RTN","MAGGTIA1",83,0)
 . S DA=MAGGDA,DIK="^MAG(2005," D ^DIK
"RTN","MAGGTIA1",84,0)
 . K DA,DIC,DIK
"RTN","MAGGTIA1",85,0)
 . D CLEAN
"RTN","MAGGTIA1",86,0)
 S MAGGFNM=$P(X,U,2),Y=MAGGDA_","
"RTN","MAGGTIA1",87,0)
 S MAGGFDA(2005,Y,1)=MAGGFNM
"RTN","MAGGTIA1",88,0)
 D UPDATE^DIE("","MAGGFDA","","MAGGXE")
"RTN","MAGGTIA1",89,0)
 ;   shouldn't have an error just editing one entry, but just in case.
"RTN","MAGGTIA1",90,0)
 I $D(DIERR) D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",91,0)
 . D RTRNERR(.MAGERR)
"RTN","MAGGTIA1",92,0)
 . S DA=MAGGDA,DIK="^MAG(2005," D ^DIK
"RTN","MAGGTIA1",93,0)
 . K DA,DIC,DIK
"RTN","MAGGTIA1",94,0)
 . D CLEAN
"RTN","MAGGTIA1",95,0)
 ;
"RTN","MAGGTIA1",96,0)
C1 ; we jump here if we already had a Filename sent
"RTN","MAGGTIA1",97,0)
 ;
"RTN","MAGGTIA1",98,0)
 K MAGGFDA
"RTN","MAGGTIA1",99,0)
 ; New Index Field Check.  If this entry doesn't have the Index fields introduced
"RTN","MAGGTIA1",100,0)
 ;   in 3.0.8 then we use the Patch 17 conversion API call to generate default values.
"RTN","MAGGTIA1",101,0)
 ;
"RTN","MAGGTIA1",102,0)
 ;-This is being deferred to a later patch.
"RTN","MAGGTIA1",103,0)
 ;-I '$D(^MAG(2005,MAGGDA,40)) D
"RTN","MAGGTIA1",104,0)
 ;-. D ONE^MAGSCNVI(MAGGDA)
"RTN","MAGGTIA1",105,0)
 ;-. D ACTION^MAGGTAU("DFTINDX^^"_MAGGDA)
"RTN","MAGGTIA1",106,0)
 ;
"RTN","MAGGTIA1",107,0)
 ;** ABS and JB image queues AREN'T SET WHEN ADDING AN IMAGE. 
"RTN","MAGGTIA1",108,0)
 ;** IT IS DONE IN A SEPERATE CALL 
"RTN","MAGGTIA1",109,0)
 ;** RPC =-> 'MAG ABSJB' after abstract is/isn't created on 
"RTN","MAGGTIA1",110,0)
 ;**  the workstation
"RTN","MAGGTIA1",111,0)
 ;
"RTN","MAGGTIA1",112,0)
 ; Queue it to be copied to Jukebox.
"RTN","MAGGTIA1",113,0)
 ;        CREATE ABSTRACT
"RTN","MAGGTIA1",114,0)
 ; visn15 ADDED $$DA2PLCA to resolve the Image's current PLACE
"RTN","MAGGTIA1",115,0)
 I $G(MAGGABS)="YES" S X=$$ABSTRACT^MAGBAPI(MAGGDA,$$DA2PLC^MAGBAPIP(MAGGDA,"A"))
"RTN","MAGGTIA1",116,0)
 ;        RESTORE AFTER GLOBAL SETUP
"RTN","MAGGTIA1",117,0)
 I $G(MAGGJB)="YES" S X=$$JUKEBOX^MAGBAPI(MAGGDA,$$DA2PLC^MAGBAPIP(MAGGDA,"F"))
"RTN","MAGGTIA1",118,0)
 ;     Code for setting a Queue to Copy BIG to JUKEBOX
"RTN","MAGGTIA1",119,0)
 ; 
"RTN","MAGGTIA1",120,0)
 ;  We return the IEN ^ DRIVE:DIR ^ FILE.EXT
"RTN","MAGGTIA1",121,0)
 ;   i.e  487^C:\IMAGE\^DC000487.TIF
"RTN","MAGGTIA1",122,0)
 ;  The calling routine is responsible for renaming/naming the file
"RTN","MAGGTIA1",123,0)
 ;   to the returned DRIVE:\DIR\FILENAME.EXT
"RTN","MAGGTIA1",124,0)
 ;  Modified 4/23/98 to include hierarchial directory structure -- PMK
"RTN","MAGGTIA1",125,0)
 ;
"RTN","MAGGTIA1",126,0)
 S MAGDHASH=$$DIRHASH^MAGFILEB(MAGGFNM,MAGREF)
"RTN","MAGGTIA1",127,0)
 S MAGRY=MAGGDA_U_MAGGDRV_MAGDHASH_U_MAGGFNM
"RTN","MAGGTIA1",128,0)
 ; For now, BIG files are in same directory as FullRes (or PACS) file
"RTN","MAGGTIA1",129,0)
 I $G(MAGBIG) D
"RTN","MAGGTIA1",130,0)
 . S X=$P(MAGGFNM,".",1)_".BIG"
"RTN","MAGGTIA1",131,0)
 . S MAGRY=MAGRY_U_MAGGDRV_MAGDHASH_U_X
"RTN","MAGGTIA1",132,0)
 . Q
"RTN","MAGGTIA1",133,0)
 ;
"RTN","MAGGTIA1",134,0)
CLEAN ;
"RTN","MAGGTIA1",135,0)
 D CLEAN^DILF
"RTN","MAGGTIA1",136,0)
 L -^MAG(2005,NEWIEN)
"RTN","MAGGTIA1",137,0)
 Q
"RTN","MAGGTIA1",138,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGTIA1",139,0)
 S ETXT="0^ERROR  "_MAGGXE("DIERR",1,"TEXT",1)
"RTN","MAGGTIA1",140,0)
 Q
"RTN","MAGGTIA1",141,0)
ERR ; Error trap
"RTN","MAGGTIA1",142,0)
 S MAGRY="0^ERROR "_$$EC^%ZOSV
"RTN","MAGGTIA1",143,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTIA1",144,0)
 Q
"RTN","MAGGTIA1",145,0)
MAKENAME() ; MAGGFDA exists so get info from that.
"RTN","MAGGTIA1",146,0)
 ; We'll make NAME (.01)  with PATIENT NAME   SSN
"RTN","MAGGTIA1",147,0)
 ; DOCUMENT Imaging was making name of
"RTN","MAGGTIA1",148,0)
 ; $E(PATENT NAME,1,10)' '$E(DESC CATEG,1,9)' 'MM/DD/YY   (DOC DATE)
"RTN","MAGGTIA1",149,0)
 N Z,ZT,ZNAME,ZSSN,ZDESC
"RTN","MAGGTIA1",150,0)
 ; GEK 10/10/2000
"RTN","MAGGTIA1",151,0)
 ; Modifying this procedure to make same name for all Image types
"RTN","MAGGTIA1",152,0)
 ;  The name will be (first 18 chars of patient Name) _ SSN
"RTN","MAGGTIA1",153,0)
 I $D(MAGGFDA(2005,"+1,",10)) S ZDESC=$E(MAGGFDA(2005,"+1,",10),1,30)
"RTN","MAGGTIA1",154,0)
 I $D(MAGGFDA(2005,"+1,",5)) D
"RTN","MAGGTIA1",155,0)
 . S X=MAGGFDA(2005,"+1,",5)
"RTN","MAGGTIA1",156,0)
 . S ZNAME=$P(^DPT(X,0),U),ZSSN=$P(^DPT(X,0),U,9)
"RTN","MAGGTIA1",157,0)
 ;
"RTN","MAGGTIA1",158,0)
 ; For all Images the name is first 18 characters of patient name 
"RTN","MAGGTIA1",159,0)
 ;  concatenated with SSN.  If No patient name is sent, well make
"RTN","MAGGTIA1",160,0)
 ;  the name from the short desc.
"RTN","MAGGTIA1",161,0)
 I $D(ZNAME) S Z=$E(ZNAME,1,18)_"   "_ZSSN
"RTN","MAGGTIA1",162,0)
 E  S Z=ZDESC
"RTN","MAGGTIA1",163,0)
 Q Z
"RTN","MAGGTID")
0^26^B43238209
"RTN","MAGGTID",1,0)
MAGGTID ;WOIFO/SRR/RED/SAF/GEK - Deletion of Images and Pointers ; [ 06/20/2001 08:56 ]
"RTN","MAGGTID",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTID",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTID",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTID",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTID",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTID",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTID",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTID",10,0)
 ;; |                                                               |
"RTN","MAGGTID",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTID",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTID",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTID",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTID",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTID",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",17,0)
 ;;
"RTN","MAGGTID",18,0)
 Q
"RTN","MAGGTID",19,0)
 ;
"RTN","MAGGTID",20,0)
IMAGEDEL(MAGGRY,MAGIEN,MAGGRPDF,REASON) ;RPC [MAGG IMAGE DELETE]
"RTN","MAGGTID",21,0)
 ; Call to Delete Image entry 
"RTN","MAGGTID",22,0)
 ; SEB 6/6/2002 - added MAGGRPDF - group delete flag = 1 if group delete allowed
"RTN","MAGGTID",23,0)
 ; from Image file ^MAG(2005
"RTN","MAGGTID",24,0)
 N Y,RY
"RTN","MAGGTID",25,0)
 ; 1 in 3rd piece means : DELETE the Image File Also.
"RTN","MAGGTID",26,0)
 S MAGGRPDF=+$G(MAGGRPDF),REASON=$G(REASON)
"RTN","MAGGTID",27,0)
 L +^MAG(2005,MAGIEN):4
"RTN","MAGGTID",28,0)
 E  S MAGGRY(0)="Image ID# "_MAGIEN_" is Locked. Delete is Canceled" Q
"RTN","MAGGTID",29,0)
 D DELETE(.MAGGRY,MAGIEN,1,MAGGRPDF,REASON)
"RTN","MAGGTID",30,0)
 L -^MAG(2005,MAGIEN)
"RTN","MAGGTID",31,0)
 Q
"RTN","MAGGTID",32,0)
DELETE(RY,MAGIEN,DF,GRPDF,REASON) ;RPC [MAGQ DIK] Entry point for silent call
"RTN","MAGGTID",33,0)
 ;RY=Return Array RY(0)="1^SUCCESS" 
"RTN","MAGGTID",34,0)
 ;                RY(0)="0^reason for failure"
"RTN","MAGGTID",35,0)
 ;                ;NOT RETURNING LIST AT THIS TIME
"RTN","MAGGTID",36,0)
 ;                ( RY(1)..RY(n)= IEN's of deleted images.)
"RTN","MAGGTID",37,0)
 ;MAGIEN=Image entry number to be deleted
"RTN","MAGGTID",38,0)
 ; if MAGIEN has a 2nd piece = 1 then we force delete, don't test 
"RTN","MAGGTID",39,0)
 ; for MAG DELETE KEY
"RTN","MAGGTID",40,0)
 ;DF=Delete file flag - 1=delete the Image file
"RTN","MAGGTID",41,0)
 ;                    - 0=don't delete the image file
"RTN","MAGGTID",42,0)
 ;
"RTN","MAGGTID",43,0)
 S REASON=$G(REASON) I REASON="" S REASON="Unknown reason"
"RTN","MAGGTID",44,0)
 S RY(0)="0^Image Delete Failed, reason unknown."
"RTN","MAGGTID",45,0)
 S:'$D(MAGSYS) MAGSYS=^%ZOSF("VOL")
"RTN","MAGGTID",46,0)
 N MAGERR,SYSDEL,Z
"RTN","MAGGTID",47,0)
 S SYSDEL=+$P(MAGIEN,U,2)
"RTN","MAGGTID",48,0)
 ; Check the business rules for deleting an image
"RTN","MAGGTID",49,0)
 D DELETE^MAGSIMBR(.RY,MAGIEN,SYSDEL) I +RY(0)=0 Q
"RTN","MAGGTID",50,0)
 S MAGIEN=+MAGIEN
"RTN","MAGGTID",51,0)
 ;  a couple tests of privilage and valid IEN
"RTN","MAGGTID",52,0)
 I '$D(^MAG(2005,MAGIEN,0)) D  Q
"RTN","MAGGTID",53,0)
 . S RY(0)="0^Image entry doesn't exist in image file"
"RTN","MAGGTID",54,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)=0 D  Q
"RTN","MAGGTID",55,0)
 . S RY(0)="0^Deleting a Group is not allowed."
"RTN","MAGGTID",56,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)'=0 D  Q
"RTN","MAGGTID",57,0)
 . N MAGGRP S MAGGRP=MAGIEN N MAGIEN,MAGX,MAGOK,MAGFAIL
"RTN","MAGGTID",58,0)
 . S MAGX=0,MAGOK=0,MAGFAIL=0
"RTN","MAGGTID",59,0)
 . F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D
"RTN","MAGGTID",60,0)
 . . S MAGIEN=$P($G(^MAG(2005,MAGGRP,1,MAGX,0)),"^") D DEL1IMG
"RTN","MAGGTID",61,0)
 . . I +RY(0) S Z=+$O(RY(""),-1),RY(Z)=RY(Z)_"^"_RY(0),MAGOK=MAGOK+1
"RTN","MAGGTID",62,0)
 . . E  S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN_"^"_RY(0),MAGFAIL=MAGFAIL+1
"RTN","MAGGTID",63,0)
 . . Q
"RTN","MAGGTID",64,0)
 . I +MAGFAIL=0 S RY(0)="1^Deletion of Group #"_MAGGRP_" was successful.^"_MAGOK_"^0"
"RTN","MAGGTID",65,0)
 . E  S RY(0)="0^Error deleting child image(s). Group Not Deleted.^"_MAGOK_"^"_MAGFAIL
"RTN","MAGGTID",66,0)
 . Q
"RTN","MAGGTID",67,0)
 ;
"RTN","MAGGTID",68,0)
 ; Ok lets start
"RTN","MAGGTID",69,0)
 ; lets delete the parent pointers first.
"RTN","MAGGTID",70,0)
DEL1IMG ;
"RTN","MAGGTID",71,0)
 N DELMSG,Z
"RTN","MAGGTID",72,0)
 D DELPAR^MAGSDEL2
"RTN","MAGGTID",73,0)
 I $G(MAGERR) S RY(0)="0^Error: Deleting Specialty Pointers. Image Not Deleted. "_DELMSG Q
"RTN","MAGGTID",74,0)
 ;
"RTN","MAGGTID",75,0)
 ; Now delete image record & xref's
"RTN","MAGGTID",76,0)
 ; if this Image is member of group DELGRP will delete those pointers
"RTN","MAGGTID",77,0)
 ; and delete the Group, if this is only image in it.
"RTN","MAGGTID",78,0)
 S MAGDFN=$P($G(^MAG(2005,MAGIEN,0)),"^",7) ; Moved here from below. DELGRP needs MAGDFN now.
"RTN","MAGGTID",79,0)
 D DELGRP
"RTN","MAGGTID",80,0)
 I $G(MAGERR) S RY(0)="0^Error deleting Group Pointers." Q
"RTN","MAGGTID",81,0)
 ;
"RTN","MAGGTID",82,0)
 ; write the deleted by, delete reason, and delete date to the file.
"RTN","MAGGTID",83,0)
 D SETDEL(MAGIEN,REASON)
"RTN","MAGGTID",84,0)
 ;
"RTN","MAGGTID",85,0)
 ; save the Image record to the archive before we delete it.
"RTN","MAGGTID",86,0)
 D ARCHIVE(MAGIEN)
"RTN","MAGGTID",87,0)
 ;
"RTN","MAGGTID",88,0)
 ; Now let's set the Queue to delete the Image File, if Flag is set
"RTN","MAGGTID",89,0)
 I $G(DF) D DELFILE
"RTN","MAGGTID",90,0)
 ; 
"RTN","MAGGTID",91,0)
 ; we're having "APPXDT" crossref left around, lets delete it first.
"RTN","MAGGTID",92,0)
 S X=MAGDFN,DA=MAGIEN D KILPPXD^MAGUXRF
"RTN","MAGGTID",93,0)
 ;
"RTN","MAGGTID",94,0)
 ; now lets delete the image.
"RTN","MAGGTID",95,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR S DIK="^MAG(2005,",DA=MAGIEN
"RTN","MAGGTID",96,0)
 D ^DIK
"RTN","MAGGTID",97,0)
 S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN
"RTN","MAGGTID",98,0)
 ; we were having problems with "AC" so lets check to make sure.
"RTN","MAGGTID",99,0)
 I $D(^MAG(2005,"AC",MAGDFN,MAGIEN)) K ^MAG(2005,"AC",MAGDFN,MAGIEN)
"RTN","MAGGTID",100,0)
 ; log it.
"RTN","MAGGTID",101,0)
 D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGIEN),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1)
"RTN","MAGGTID",102,0)
 S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGIEN)
"RTN","MAGGTID",103,0)
 D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",104,0)
 S RY(0)="1^Deletion of Image was Successful."
"RTN","MAGGTID",105,0)
 Q
"RTN","MAGGTID",106,0)
DELGRP ;del grp ptrs and check to see if this is the last image in the group
"RTN","MAGGTID",107,0)
 N MAGGRP,MAGX,MAGQUIT,MAGIFNS,Z
"RTN","MAGGTID",108,0)
 S MAGGRP=$P($G(^MAG(2005,MAGIEN,0)),"^",10)
"RTN","MAGGTID",109,0)
 Q:'$G(MAGGRP)
"RTN","MAGGTID",110,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR
"RTN","MAGGTID",111,0)
 S MAGX=0,MAGQUIT=0
"RTN","MAGGTID",112,0)
 F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D  Q:MAGQUIT
"RTN","MAGGTID",113,0)
 . I +^MAG(2005,MAGGRP,1,MAGX,0)=MAGIEN D
"RTN","MAGGTID",114,0)
 . . S DIK="^MAG(2005,MAGGRP,1,",DA(1)=MAGGRP,DA=MAGX D ^DIK S MAGQUIT=1
"RTN","MAGGTID",115,0)
 . . ;added DA(1) needed for xref deletion of dicom series 
"RTN","MAGGTID",116,0)
 . I $O(^MAG(2005,MAGGRP,1,0))="" D
"RTN","MAGGTID",117,0)
 . . I $P($G(^MAG(2005,MAGGRP,2)),"^",6) D
"RTN","MAGGTID",118,0)
 . . . ;report is on group - need to delete it
"RTN","MAGGTID",119,0)
 . . . S MAGIFNS=MAGIEN,MAGIEN=MAGGRP
"RTN","MAGGTID",120,0)
 . . . D DELPAR^MAGSDEL2
"RTN","MAGGTID",121,0)
 . . . S MAGIEN=MAGIFNS
"RTN","MAGGTID",122,0)
 . . I '$D(MAGERR) D
"RTN","MAGGTID",123,0)
 . . . D SETDEL(MAGGRP,REASON),ARCHIVE(MAGGRP) S DIK="^MAG(2005,",DA=MAGGRP D ^DIK
"RTN","MAGGTID",124,0)
 . . . ; Log the Deletion of The Group Header to  ^MAG(2006.95, and ^MAG(2006.82 
"RTN","MAGGTID",125,0)
 . . . D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGGRP),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1,"Group Header deleted")
"RTN","MAGGTID",126,0)
 . . . S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGGRP)
"RTN","MAGGTID",127,0)
 . . . D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",128,0)
 . . . S Z=+$O(RY(""),-1)+1,RY(Z)=MAGGRP_"^1^Deletion of Group was Successful."
"RTN","MAGGTID",129,0)
 . . . Q
"RTN","MAGGTID",130,0)
 . . Q
"RTN","MAGGTID",131,0)
 . Q
"RTN","MAGGTID",132,0)
 Q
"RTN","MAGGTID",133,0)
SETDEL(MAGIEN,REASON) ; set deletion fields
"RTN","MAGGTID",134,0)
 N DA,DR,DIE,%H,X
"RTN","MAGGTID",135,0)
 S %H=$H D YMD^%DTC
"RTN","MAGGTID",136,0)
 ;  gek - changed 3 slash to 4 slash. to stop FM question marks. ??
"RTN","MAGGTID",137,0)
 S DR="30////"_DUZ_";30.1////"_X_";30.2////"_REASON
"RTN","MAGGTID",138,0)
 S DIE="2005",DA=MAGIEN D ^DIE
"RTN","MAGGTID",139,0)
 Q
"RTN","MAGGTID",140,0)
 ;
"RTN","MAGGTID",141,0)
ARCHIVE(MAGARCIE) ;save image data before deletion
"RTN","MAGGTID",142,0)
 N MAGCNT,MAGLAST
"RTN","MAGGTID",143,0)
 S MAGCNT=$P(^MAG(2005.1,0),U,4)+1
"RTN","MAGGTID",144,0)
 S %X="^MAG(2005,"_MAGARCIE_",",%Y="^MAG(2005.1,"_MAGARCIE_","
"RTN","MAGGTID",145,0)
 D %XY^%RCR
"RTN","MAGGTID",146,0)
 ; GEK 9/29/00 Fix the 3rd piece to be last ien in file.
"RTN","MAGGTID",147,0)
 S MAGLAST=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGTID",148,0)
 S $P(^MAG(2005.1,0),U,4)=MAGCNT
"RTN","MAGGTID",149,0)
 I '($P(^MAG(2005.1,0),U,3)=MAGLAST) S $P(^MAG(2005.1,0),U,3)=MAGLAST
"RTN","MAGGTID",150,0)
 S DA=MAGARCIE
"RTN","MAGGTID",151,0)
 S DIK="^MAG(2005.1," D IX1^DIK
"RTN","MAGGTID",152,0)
 Q
"RTN","MAGGTID",153,0)
DELFILE ;Delete image file on server if exists 
"RTN","MAGGTID",154,0)
 ;gek 3/21/2003  Changed to stop using FullRes Path for Abs,Big
"RTN","MAGGTID",155,0)
 ;   and only Delete .TXT and Alternates if Full is being deleted.
"RTN","MAGGTID",156,0)
 N X0,X1,X2,ALTEXT,ALTPATH,MAGXX,XBIG
"RTN","MAGGTID",157,0)
 N MAGPLC ; DBI - SEB 9/20/2002
"RTN","MAGGTID",158,0)
 ; MAGIEN IS ASSUMED TO BE DEFINED.
"RTN","MAGGTID",159,0)
 ; MAGXX         - This is IEN in ^MAG(2005, MAGFILEB Expects this to be defined.
"RTN","MAGGTID",160,0)
 ; MAGPLC        - "Place" of Full Res Image.  
"RTN","MAGGTID",161,0)
 ; ALTEXT        - Extension of the Alternate image file.
"RTN","MAGGTID",162,0)
 ; ALTPATH       - Full path of Alternate image file.
"RTN","MAGGTID",163,0)
 S X0=^MAG(2005,MAGIEN,0)
"RTN","MAGGTID",164,0)
 ;delete Full Res if one exists on Magnetic
"RTN","MAGGTID",165,0)
 I $P(X0,U,3) D
"RTN","MAGGTID",166,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",167,0)
 . S MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"F")
"RTN","MAGGTID",168,0)
 . D VSTNOCP^MAGFILEB
"RTN","MAGGTID",169,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,MAGPLC)
"RTN","MAGGTID",170,0)
 . ;Delete any other ALTernate files. ( TXT) 
"RTN","MAGGTID",171,0)
 . ;gek 3/31/03  Since ALT files are (for now) always on same server as Full
"RTN","MAGGTID",172,0)
 . ;    We only attempt to delete them here  (If we have a path to FullRes on Magnetic)
"RTN","MAGGTID",173,0)
 . S X2=0
"RTN","MAGGTID",174,0)
 . F  S X2=$O(^MAG(2006.1,MAGPLC,2,X2)) Q:'X2  D
"RTN","MAGGTID",175,0)
 . . S ALTEXT=^MAG(2006.1,MAGPLC,2,X2,0)
"RTN","MAGGTID",176,0)
 . . S ALTPATH=$P(MAGFILE2,".")_"."_ALTEXT
"RTN","MAGGTID",177,0)
 . . S X=$$DELETE^MAGBAPI(ALTPATH,MAGPLC)
"RTN","MAGGTID",178,0)
 . Q
"RTN","MAGGTID",179,0)
 ;
"RTN","MAGGTID",180,0)
 ;delete image abstract if one exists on Magnetic
"RTN","MAGGTID",181,0)
 I $P(X0,U,4) D
"RTN","MAGGTID",182,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",183,0)
 . D ABSNOCP^MAGFILEB
"RTN","MAGGTID",184,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"A")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",185,0)
 ;
"RTN","MAGGTID",186,0)
 ;delete the big file if one exists on Magnetic
"RTN","MAGGTID",187,0)
 S XBIG=$G(^MAG(2005,MAGIEN,"FBIG"))
"RTN","MAGGTID",188,0)
 I $P(XBIG,U) D 
"RTN","MAGGTID",189,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",190,0)
 . D BIGNOCP^MAGFILEB
"RTN","MAGGTID",191,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"B")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",192,0)
 Q
"RTN","MAGGTIG")
0^57^B52107947
"RTN","MAGGTIG",1,0)
MAGGTIG ;WOIFO/GEK - MAGGT Image Get. Callbacks to Get Image lists ; [ 11/08/2001 17:18 ]
"RTN","MAGGTIG",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTIG",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIG",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIG",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIG",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIG",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIG",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIG",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIG",10,0)
 ;; |                                                               |
"RTN","MAGGTIG",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIG",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIG",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIG",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIG",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIG",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIG",17,0)
 ;;
"RTN","MAGGTIG",18,0)
 Q
"RTN","MAGGTIG",19,0)
GRPCOUNT(MAGRY,MAGIEN) ;
"RTN","MAGGTIG",20,0)
 S MAGRY=+$P($G(^MAG(2005,MAGIEN,1,0)),U,4)
"RTN","MAGGTIG",21,0)
 Q
"RTN","MAGGTIG",22,0)
IMAGES(MAGRY,MAGDFN) ;RPC [MAGG PAT IMAGES]
"RTN","MAGGTIG",23,0)
 ;  Call to return a list of images for a pateint.
"RTN","MAGGTIG",24,0)
 ;   We are returning all images for a patient, Groups are returned
"RTN","MAGGTIG",25,0)
 ;   as one Image.
"RTN","MAGGTIG",26,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",27,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",28,0)
 ;   User can reorder at the workstation level.
"RTN","MAGGTIG",29,0)
 K MAGRY
"RTN","MAGGTIG",30,0)
 N Y,RDT,PRX,CT,IEN,GBLRET
"RTN","MAGGTIG",31,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",32,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",33,0)
 ;  if no Images for the patient, then quit.
"RTN","MAGGTIG",34,0)
 I '$D(^MAG(2005,"APDTPX",MAGDFN)) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",35,0)
 ;   the "APDTPX" cross reference is :
"RTN","MAGGTIG",36,0)
 ;     "APDTPX",DFN,Rev Date,Procedure,MAGIEN )
"RTN","MAGGTIG",37,0)
 ;
"RTN","MAGGTIG",38,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",39,0)
 S GBLRET=0
"RTN","MAGGTIG",40,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",41,0)
 S CT=0,RDT=""
"RTN","MAGGTIG",42,0)
 F  S RDT=$O(^MAG(2005,"APDTPX",MAGDFN,RDT)) Q:'RDT  D
"RTN","MAGGTIG",43,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",MAGDFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGGTIG",44,0)
 . . S IEN=""
"RTN","MAGGTIG",45,0)
 . . F  S IEN=$O(^MAG(2005,"APDTPX",MAGDFN,RDT,PRX,IEN)) Q:'IEN  D
"RTN","MAGGTIG",46,0)
 . . . Q:$P($G(^MAG(2005,IEN,0)),"^",10)  ; CHILD OF GROUP
"RTN","MAGGTIG",47,0)
 . . . S CT=CT+1
"RTN","MAGGTIG",48,0)
 . . . I (CT>100),'GBLRET D ARY2GLB
"RTN","MAGGTIG",49,0)
 . . . S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",50,0)
 . . . S @MAGRY@(CT)="B2^"_MAGFILE
"RTN","MAGGTIG",51,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",52,0)
 Q
"RTN","MAGGTIG",53,0)
PHOTOS(MAGRY,MAGDFN) ;RPC [MAGG PAT PHOTOS]
"RTN","MAGGTIG",54,0)
 ; Call to return list of all Photo ID's on file for a patient.
"RTN","MAGGTIG",55,0)
 ;   We are returning all Photo ID images for a patient.
"RTN","MAGGTIG",56,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",57,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",58,0)
 K MAGRY
"RTN","MAGGTIG",59,0)
 N Y,RDT,PRX,CT,IEN,IENS,GBLRET,MAGXX
"RTN","MAGGTIG",60,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",61,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",62,0)
 ;  if no Photo ID Images for the patient, then quit.
"RTN","MAGGTIG",63,0)
 I '$D(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID")) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",64,0)
 ;   the "APPXDT" cross reference is :
"RTN","MAGGTIG",65,0)
 ;     "APPXDT",DFN,Procedure,Rev Date,MAGIEN )
"RTN","MAGGTIG",66,0)
 ;
"RTN","MAGGTIG",67,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",68,0)
 S GBLRET=0
"RTN","MAGGTIG",69,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",70,0)
 S CT=0
"RTN","MAGGTIG",71,0)
 S RDT="" F  S RDT=$O(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID",RDT)) Q:RDT=""  D
"RTN","MAGGTIG",72,0)
 . S IEN=""
"RTN","MAGGTIG",73,0)
 . F  S IEN=$O(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID",RDT,IEN)) Q:'IEN  D
"RTN","MAGGTIG",74,0)
 . . ;Q:$P($G(^MAG(2005,IEN,0)),"^",10)  ; CHILD OF GROUP
"RTN","MAGGTIG",75,0)
 . . S IENS(IEN)=""
"RTN","MAGGTIG",76,0)
 . . Q
"RTN","MAGGTIG",77,0)
 . Q
"RTN","MAGGTIG",78,0)
 S IEN="" F  S IEN=$O(IENS(IEN),-1) Q:'IEN  D
"RTN","MAGGTIG",79,0)
 . S CT=CT+1
"RTN","MAGGTIG",80,0)
 . S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",81,0)
 . S @MAGRY@(CT)="B2^"_MAGFILE
"RTN","MAGGTIG",82,0)
 . Q
"RTN","MAGGTIG",83,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",84,0)
 Q
"RTN","MAGGTIG",85,0)
EACHIMG(MAGRY,MAGDFN,MAX) ;RPC [MAGG PAT EACH IMAGE]
"RTN","MAGGTIG",86,0)
 ; Call Returns list of recent Patient images.
"RTN","MAGGTIG",87,0)
 ;   MAX = maximum number of images to return
"RTN","MAGGTIG",88,0)
 ;   MAGDFN = patient DFN
"RTN","MAGGTIG",89,0)
 ;   We are returning all images for a patient, and listing each image.
"RTN","MAGGTIG",90,0)
 ;   This is called from Capture Window where groups aren't listed.
"RTN","MAGGTIG",91,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",92,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",93,0)
 ;   User can decide how many of the most recent they want to list.
"RTN","MAGGTIG",94,0)
 K MAGRY
"RTN","MAGGTIG",95,0)
 N Y,RDT,PRX,CT,IEN,GBLRET
"RTN","MAGGTIG",96,0)
 S MAX=$S($G(MAX)>0:MAX,1:50) ; 50 IS DEFAULT
"RTN","MAGGTIG",97,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRG^MAGGTERR"
"RTN","MAGGTIG",98,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",99,0)
 ;  if no Images for the patient, then quit.
"RTN","MAGGTIG",100,0)
 I '$D(^MAG(2005,"AC",MAGDFN)) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",101,0)
 ;   the "AC" cross reference is :
"RTN","MAGGTIG",102,0)
 ;     "AC",DFN,IEN )
"RTN","MAGGTIG",103,0)
 ;
"RTN","MAGGTIG",104,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",105,0)
 S GBLRET=0
"RTN","MAGGTIG",106,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",107,0)
 S CT=0,IEN=""
"RTN","MAGGTIG",108,0)
 F  S IEN=$O(^MAG(2005,"AC",MAGDFN,IEN),-1) Q:'IEN  D  Q:(CT>MAX)
"RTN","MAGGTIG",109,0)
 . Q:$P($G(^MAG(2005,IEN,0)),U,6)=11  ; NOT LISTING GROUP ENTRIES
"RTN","MAGGTIG",110,0)
 . S CT=CT+1
"RTN","MAGGTIG",111,0)
 . I (CT>100),'GBLRET D ARY2GLB
"RTN","MAGGTIG",112,0)
 . S @MAGRY@(CT)=$$CAPINFO(IEN)
"RTN","MAGGTIG",113,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",114,0)
 Q
"RTN","MAGGTIG",115,0)
CAPINFO(IEN) ; RETURN A STRING OF INFORMATION ABOUT THE IMAGE
"RTN","MAGGTIG",116,0)
 ; This is for Capture App
"RTN","MAGGTIG",117,0)
 S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",118,0)
 S RETY=$P(MAGFILE,U,1,7)_U
"RTN","MAGGTIG",119,0)
 S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGGTIG",120,0)
 S RETY=RETY_$$FMTE^XLFDT($P(N2,U,1),"5P")_U
"RTN","MAGGTIG",121,0)
 S X=$P(RETY,U,5),X=$$FMTE^XLFDT(X,"5"),X=$P(X,"@")
"RTN","MAGGTIG",122,0)
 S $P(RETY,U,5)=X
"RTN","MAGGTIG",123,0)
 Q RETY
"RTN","MAGGTIG",124,0)
 Q
"RTN","MAGGTIG",125,0)
ARY2GLB ; Image count is getting big, switch from array to Global return type
"RTN","MAGGTIG",126,0)
 S GBLRET=1
"RTN","MAGGTIG",127,0)
 K ^TMP("MAGGTIG",$J)
"RTN","MAGGTIG",128,0)
 S MAGRY=""
"RTN","MAGGTIG",129,0)
 M ^TMP("MAGGTIG",$J)=MAGRY
"RTN","MAGGTIG",130,0)
 K MAGRY
"RTN","MAGGTIG",131,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTIG",132,0)
 S MAGRY=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGGTIG",133,0)
 Q
"RTN","MAGGTIG",134,0)
GROUP(MAGRY,MAGIEN,BKG) ;RPC [MAGG GROUP IMAGES]
"RTN","MAGGTIG",135,0)
 ; CalL to Return image list of a Group.
"RTN","MAGGTIG",136,0)
 ; MAGIEN is the entry in MAG(2005 we assume it is a group.
"RTN","MAGGTIG",137,0)
 N Y,MAGDFN,I,MAGCHILD,MAGCT,MAGTMPAR,MSGX,MAGQI,MAGY
"RTN","MAGGTIG",138,0)
 N MAGNOCHK
"RTN","MAGGTIG",139,0)
 ;
"RTN","MAGGTIG",140,0)
 ;Test BigGroup S BKG=+$G(BKG)
"RTN","MAGGTIG",141,0)
 ;Test BigGroup K ^TMP("MAGBGRP")
"RTN","MAGGTIG",142,0)
 S MAGIEN=+MAGIEN,MSGX=""
"RTN","MAGGTIG",143,0)
 I '$D(^MAG(2005,MAGIEN,0)) S MAGRY(0)="0^ERROR: Image entry "_MAGIEN_" Doesn't exist" Q
"RTN","MAGGTIG",144,0)
 I $O(^MAG(2005,MAGIEN,1,0))="" S MAGRY(0)="0^ERROR: There are NO Images defined for this Group" Q
"RTN","MAGGTIG",145,0)
 ;
"RTN","MAGGTIG",146,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is being returned
"RTN","MAGGTIG",147,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",148,0)
 ;
"RTN","MAGGTIG",149,0)
 ;  if we are switching to a Global Array because too many images, 
"RTN","MAGGTIG",150,0)
 ;  then set MAGRY and clean it up first
"RTN","MAGGTIG",151,0)
 ;I +$P($G(^MAG(2005,MAGIEN,1,0)),U,4)>100
"RTN","MAGGTIG",152,0)
 D
"RTN","MAGGTIG",153,0)
 . S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTIG",154,0)
 . S MAGRY=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGGTIG",155,0)
 . K @MAGRY
"RTN","MAGGTIG",156,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",157,0)
 ;
"RTN","MAGGTIG",158,0)
 ;Test BigGroup I $D(^TMP("MAGBGRP",MAGIEN)) D  Q
"RTN","MAGGTIG",159,0)
 ;Test BigGroup . M ^TMP("MAGGTIG",$J)=^TMP("MAGBGRP",MAGIEN)
"RTN","MAGGTIG",160,0)
 ;Test BigGroup . Q
"RTN","MAGGTIG",161,0)
 ; integrity check, stop if group entry is questionable
"RTN","MAGGTIG",162,0)
 D CHK^MAGGSQI(.MAGQI,MAGIEN) I 'MAGQI(0) D  Q
"RTN","MAGGTIG",163,0)
 . S @MAGRY@(0)=MAGQI(0)
"RTN","MAGGTIG",164,0)
 ;
"RTN","MAGGTIG",165,0)
 S MAGNOCHK=1
"RTN","MAGGTIG",166,0)
 S I=0,MAGCT=0,MAGDFN=$P(^MAG(2005,MAGIEN,0),"^",7)
"RTN","MAGGTIG",167,0)
 I $D(^MAG(2005,MAGIEN,1,"ADCM")) D
"RTN","MAGGTIG",168,0)
 . N INUM,SNUM
"RTN","MAGGTIG",169,0)
 . S INUM="" ; GEK 4/3/00  changed Q:'INUM  to  Q:INUM="" below
"RTN","MAGGTIG",170,0)
 . F  S INUM=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM)) Q:INUM=""  D
"RTN","MAGGTIG",171,0)
 . . S SNUM=""
"RTN","MAGGTIG",172,0)
 . . F  S SNUM=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM,SNUM)) Q:SNUM=""  D
"RTN","MAGGTIG",173,0)
 . . . S MAGCHILD=""
"RTN","MAGGTIG",174,0)
 . . . F  S MAGCHILD=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM,SNUM,MAGCHILD)) Q:'MAGCHILD  D
"RTN","MAGGTIG",175,0)
 . . . . S MAGCT=MAGCT+1
"RTN","MAGGTIG",176,0)
 . . . . I '$D(^MAG(2005,MAGCHILD)) D INVALID(MAGCHILD,.MSGX) S @MAGRY@(MAGCT)=MSGX Q
"RTN","MAGGTIG",177,0)
 . . . . ; Added for MAGQI integrity check
"RTN","MAGGTIG",178,0)
 . . . . K MAGY
"RTN","MAGGTIG",179,0)
 . . . . D CHKGRPCH^MAGGSQI(.MAGY,MAGIEN,MAGDFN,MAGCHILD) I 'MAGY D INVCH(.MAGY,MAGCHILD) S @MAGRY@(MAGCT)=MAGY Q
"RTN","MAGGTIG",180,0)
 . . . . S MAGXX=MAGCHILD
"RTN","MAGGTIG",181,0)
 . . . . S MAGTMPAR(MAGXX)=""
"RTN","MAGGTIG",182,0)
 . . . . D INFO^MAGGTII
"RTN","MAGGTIG",183,0)
 . . . . S $P(MAGFILE,U,12,13)=INUM_U_SNUM
"RTN","MAGGTIG",184,0)
 . . . . S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",185,0)
 . . . . ;Test BigGroup I 'BKG S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",186,0)
 . . . . ;Test BigGroup E  S ^TMP("MAGBGRP",MAGIEN,MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",187,0)
 ;GEK 4/8/99 MODIFIED, because now we have groups, that some entries 
"RTN","MAGGTIG",188,0)
 ;                     have dicom numbers and some don't.  So we have to go through the group again.
"RTN","MAGGTIG",189,0)
 ;Test BigGroup - Need a Pre/Post init, that fixes Groups where some entries have Dicom values, and some 
"RTN","MAGGTIG",190,0)
 ;         don't.  In such a group, we will make Dicom values for the images that don't have them.
"RTN","MAGGTIG",191,0)
 ;         Testing in Washington - this will take hours.
"RTN","MAGGTIG",192,0)
 ;
"RTN","MAGGTIG",193,0)
 S I=0
"RTN","MAGGTIG",194,0)
 F  S I=$O(^MAG(2005,MAGIEN,1,I)) Q:'I  D
"RTN","MAGGTIG",195,0)
 . S MAGCHILD=+^MAG(2005,MAGIEN,1,I,0)
"RTN","MAGGTIG",196,0)
 . I $D(MAGTMPAR(MAGCHILD)) Q
"RTN","MAGGTIG",197,0)
 . S MAGCT=MAGCT+1
"RTN","MAGGTIG",198,0)
 . I '$D(^MAG(2005,MAGCHILD)) D INVALID(MAGCHILD,.MSGX) S @MAGRY@(MAGCT)=MSGX Q
"RTN","MAGGTIG",199,0)
 . ;Added for MAGQI integrity check
"RTN","MAGGTIG",200,0)
 . K MAGY
"RTN","MAGGTIG",201,0)
 . D CHKGRPCH^MAGGSQI(.MAGY,MAGIEN,MAGDFN,MAGCHILD) I 'MAGY D INVCH(.MAGY,MAGCHILD) S @MAGRY@(MAGCT)=MAGY Q
"RTN","MAGGTIG",202,0)
 . S MAGXX=MAGCHILD
"RTN","MAGGTIG",203,0)
 . D INFO^MAGGTII
"RTN","MAGGTIG",204,0)
 . S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",205,0)
 . ;Test BigGroup        I 'BKG S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",206,0)
 . ;Test BigGroup        E  S ^TMP("MAGBGRP",MAGIEN,MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",207,0)
 S @MAGRY@(0)="1^"_MAGCT
"RTN","MAGGTIG",208,0)
 Q
"RTN","MAGGTIG",209,0)
INVALID(MAGX,MAGZ) ;
"RTN","MAGGTIG",210,0)
 ;
"RTN","MAGGTIG",211,0)
 I $D(^MAG(2005.1,MAGX,0)) S MAGZ="B2^"_MAGX_"^^^INVALID Reference to Deleted Image^^66^^^^^^^^"
"RTN","MAGGTIG",212,0)
 E  S MAGZ="B2^"_MAGX_"^^^INVALID Image ID (IEN)^^67^^^^^^^^"
"RTN","MAGGTIG",213,0)
 ;Added with MAGQI integrity check, 
"RTN","MAGGTIG",214,0)
 S MAGTMPAR(MAGX)=""
"RTN","MAGGTIG",215,0)
 Q
"RTN","MAGGTIG",216,0)
INVCH(MSG,CHILD) ;Added for MAGQI integrity check
"RTN","MAGGTIG",217,0)
 ; MSG is passed by reference, we create a MAGFILE equivilant and pass it back.
"RTN","MAGGTIG",218,0)
 N EMSG
"RTN","MAGGTIG",219,0)
 S EMSG=$P(MSG,U,2)
"RTN","MAGGTIG",220,0)
 K MSG
"RTN","MAGGTIG",221,0)
 S $P(MSG,U)=CHILD
"RTN","MAGGTIG",222,0)
 ; remove dependency on c:\program files.   with   .\bmp\
"RTN","MAGGTIG",223,0)
 S $P(MSG,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGTIG",224,0)
 S $P(MSG,U,4)=$P($G(^MAG(2005,CHILD,2)),U,4)
"RTN","MAGGTIG",225,0)
 S $P(MSG,U,6)=$S(($P(MSG,U,6)'=11):"99",1:11)
"RTN","MAGGTIG",226,0)
 ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGTIG",227,0)
 S $P(MSG,U,10)="M"
"RTN","MAGGTIG",228,0)
 ;Send the error message
"RTN","MAGGTIG",229,0)
 S $P(MSG,U,17)=EMSG
"RTN","MAGGTIG",230,0)
 S MSG="B2^"_MSG
"RTN","MAGGTIG",231,0)
 S MAGTMPAR(CHILD)=""
"RTN","MAGGTIG",232,0)
 Q
"RTN","MAGGTII")
0^34^B36318486
"RTN","MAGGTII",1,0)
MAGGTII ;WOIFO/GEK - RETURN IMAGE INFO ; [ 11/08/2001 17:18 ]
"RTN","MAGGTII",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTII",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTII",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTII",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTII",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTII",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTII",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTII",10,0)
 ;; |                                                               |
"RTN","MAGGTII",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTII",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTII",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTII",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTII",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTII",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",17,0)
 ;;
"RTN","MAGGTII",18,0)
 ; CALL WITH MAGXX=IEN of IMAGE FILE (2005)
"RTN","MAGGTII",19,0)
 ; RETURNS MAGFILE='^' delimeted string of Image information.
"RTN","MAGGTII",20,0)
 ; 
"RTN","MAGGTII",21,0)
 ; 
"RTN","MAGGTII",22,0)
INFO ;Get info for an Image File entry
"RTN","MAGGTII",23,0)
 ; We assume that MAGXX exists and is the Image File entry
"RTN","MAGGTII",24,0)
 ; We return a '^' delimited string for the Image entry.
"RTN","MAGGTII",25,0)
 ; $P(1^2^3)   IEN^Image FullPath and name^Abstract FullPath and Name
"RTN","MAGGTII",26,0)
 ; $P(4)       SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",27,0)
 ; $P(5)       PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",28,0)
 ; $P(6)       OBJECT TYPE
"RTN","MAGGTII",29,0)
 ; $P(7)       PROCEDURE field
"RTN","MAGGTII",30,0)
 ; $P(8)       display date
"RTN","MAGGTII",31,0)
 ; $P(9)       to return the PARENT DATA FILE image pointer
"RTN","MAGGTII",32,0)
 ; $p(10)      return the ABSTYPE  'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",33,0)
 ; $p(11)      is  'A' accessable   'O' offline
"RTN","MAGGTII",34,0)
 ; $p(12^13)   Dicom Series Number  $p(12) and   Image Number  $p(13)
"RTN","MAGGTII",35,0)
 ; $p(14)      is count of images in group, 1 if single image.
"RTN","MAGGTII",36,0)
 ; VISN15
"RTN","MAGGTII",37,0)
 ; $p(15^16)   SiteParameter IEN ^ SiteParameter CODE
"RTN","MAGGTII",38,0)
 ; $P(17)      is err description of Integrity Check
"RTN","MAGGTII",39,0)
 ; $P(18)      Image BIGPath and name             //Patch 5
"RTN","MAGGTII",40,0)
 ; $P(19^20)   Patient DFN  ^ Patient Name; // Patch 3.8
"RTN","MAGGTII",41,0)
 ; $P(21)          Image Class: Clin,Admin,Clin/Admin,Admin/Clin
"RTN","MAGGTII",42,0)
 ;
"RTN","MAGGTII",43,0)
 N FILETYPE,MAGPREF,MAGJBCP,GRPTYPE,GRPIEN,ABSTYPE,MAGTYPE
"RTN","MAGGTII",44,0)
 N MAGPLACE,MAGINST,MAGPLCF,MAGINSTF,MAGPLCA,MAGINSTA,MAGPLCB,MAGINSTB ; DBI
"RTN","MAGGTII",45,0)
 N MAGOFFLN,FULLTYPE,MAGOBJT,MAGQI
"RTN","MAGGTII",46,0)
 N ABSFILE,FULLFILE,BIGFILE
"RTN","MAGGTII",47,0)
 N MAGN0,MAGN2,MAGN40
"RTN","MAGGTII",48,0)
 ;    set the Variables for the Global Nodes of the Image Entry
"RTN","MAGGTII",49,0)
 S MAGN0=$G(^MAG(2005,MAGXX,0))
"RTN","MAGGTII",50,0)
 S MAGN2=$G(^MAG(2005,MAGXX,2))
"RTN","MAGGTII",51,0)
 S MAGN40=$G(^MAG(2005,MAGXX,40))
"RTN","MAGGTII",52,0)
 ;  Object Type
"RTN","MAGGTII",53,0)
 S MAGOBJT=$P(MAGN0,"^",6)
"RTN","MAGGTII",54,0)
 ;
"RTN","MAGGTII",55,0)
 ; if this is a group, change MAGXX to first image in group to get
"RTN","MAGGTII",56,0)
 ;  that abstract to use for the group abstract
"RTN","MAGGTII",57,0)
 I MAGOBJT=11!(MAGOBJT=16) S GRPTYPE=MAGOBJT D
"RTN","MAGGTII",58,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",59,0)
 . ; next line to account for group of NO images for whatever reason.
"RTN","MAGGTII",60,0)
 . ;  we change Object Type to XRAY (3)  or STILL IMAGE (1)
"RTN","MAGGTII",61,0)
 . I 'X S MAGOBJT=$S(MAGOBJT=11:3,MAGOBJT=16:1,1:1) K GRPTYPE Q
"RTN","MAGGTII",62,0)
 . S X=^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",63,0)
 . ;  keep the Real IEN, so we can change back later
"RTN","MAGGTII",64,0)
 . S GRPIEN=MAGXX,MAGXX=+X
"RTN","MAGGTII",65,0)
 . Q
"RTN","MAGGTII",66,0)
 S MAGJBCP=0 ; Don't Queue a copy from JukeBox.
"RTN","MAGGTII",67,0)
 ;  The call to FINDFILE returns:
"RTN","MAGGTII",68,0)
 ; MAGFILE1=LA100066.ABS   filename
"RTN","MAGGTII",69,0)
 ;          if no Network Location pointer or INVALID Pointer
"RTN","MAGGTII",70,0)
 ;          then MAGFILE1=-1~NO NETWORK LOCATION POINTER  
"RTN","MAGGTII",71,0)
 ;          or -1~INVALID NETWORK LOCATION POINTER
"RTN","MAGGTII",72,0)
 ; MAGFILE1(.01)=KIRIN,B   202524404 image desc
"RTN","MAGGTII",73,0)
 ; MAGJBOL=    desc of Offline server
"RTN","MAGGTII",74,0)
 ; MAGOFFLN=    if JB is offline
"RTN","MAGGTII",75,0)
 ; MAGPREF=C:\TEMP\LA\10\00\  path
"RTN","MAGGTII",76,0)
 ; MAGTYPE=MAG    MAG or WORM
"RTN","MAGGTII",77,0)
 ;
"RTN","MAGGTII",78,0)
 ;   first get Full Path and File Name of the Abstract
"RTN","MAGGTII",79,0)
 S FILETYPE="ABSTRACT" K MAGFILE1("ERROR")
"RTN","MAGGTII",80,0)
 S (MAGPREF,MAGPLACE,MAGINST)="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",81,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",82,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",83,0)
 S ABSTYPE=$E(MAGTYPE,1) I MAGOFFLN S ABSTYPE="O"
"RTN","MAGGTII",84,0)
 ;   Here we must test for +MAGFILE1 = -1  which means we don't have
"RTN","MAGGTII",85,0)
 ;   any entry in the Image File for the Abstract Network Location 
"RTN","MAGGTII",86,0)
 ;   pointer.
"RTN","MAGGTII",87,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",88,0)
 S ABSFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",89,0)
 S MAGPLCA=MAGPLACE,MAGINSTA=MAGINST ; DBI - SEB Patch 4
"RTN","MAGGTII",90,0)
 ;
"RTN","MAGGTII",91,0)
 ;    now lets get the Full Path and file name FULL RES image.
"RTN","MAGGTII",92,0)
 S FULLTYPE="A" ; Accessable
"RTN","MAGGTII",93,0)
 S FILETYPE="FULL" K MAGFILE1("ERROR")
"RTN","MAGGTII",94,0)
 S (MAGPREF,MAGPLACE,MAGINST)="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",95,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",96,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",97,0)
 I MAGOFFLN S FULLTYPE="O" ; Offline
"RTN","MAGGTII",98,0)
 ;  here we have to do the same test as above. for bad data.
"RTN","MAGGTII",99,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",100,0)
 S FULLFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",101,0)
 S MAGPLCF=MAGPLACE,MAGINSTF=MAGINST ; DBI
"RTN","MAGGTII",102,0)
 ;//PATCH 5
"RTN","MAGGTII",103,0)
 ;    now lets get the Full Path and file name for BIG image.
"RTN","MAGGTII",104,0)
 S FILETYPE="BIG" K MAGFILE1("ERROR")
"RTN","MAGGTII",105,0)
 S (MAGPREF,MAGPLACE,MAGINST)="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",106,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",107,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",108,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",109,0)
 S BIGFILE=$S($E(MAGFILE1,1,2)="-1":"",1:MAGPREF_MAGFILE1)
"RTN","MAGGTII",110,0)
 S MAGPLCB=MAGPLACE,MAGINSTB=MAGINST ; DBI - SEB Patch 4
"RTN","MAGGTII",111,0)
 ;   if we were using first image of a group, reset the Real IEN
"RTN","MAGGTII",112,0)
 I $G(GRPIEN) S MAGXX=GRPIEN
"RTN","MAGGTII",113,0)
 ;
"RTN","MAGGTII",114,0)
 ;   we have to change the OBJECT TYPE variable back to real value
"RTN","MAGGTII",115,0)
 ;   MAGOBJT might have been changed if we had Group of no images.
"RTN","MAGGTII",116,0)
 ;   but we need to keep it changed, because Delphi window checks this
"RTN","MAGGTII",117,0)
 ;   entry to determine which window to open.
"RTN","MAGGTII",118,0)
 ;   i.e. Group window, Single image window, 
"RTN","MAGGTII",119,0)
 S MAGOBJT=$P(MAGN0,U,6)
"RTN","MAGGTII",120,0)
 ;
"RTN","MAGGTII",121,0)
 ; now start building the return string
"RTN","MAGGTII",122,0)
 ;
"RTN","MAGGTII",123,0)
 K MAGFILE
"RTN","MAGGTII",124,0)
 S $P(MAGFILE,U,25)="" ; We put extra '^^^' on end of String to stop error in Delphi.
"RTN","MAGGTII",125,0)
 ;
"RTN","MAGGTII",126,0)
 ; $P(1^2^3) IEN^Image FullPath and name^Abstract FullPath and Name 
"RTN","MAGGTII",127,0)
 S $P(MAGFILE,U,1,3)=MAGXX_U_FULLFILE_U_ABSFILE
"RTN","MAGGTII",128,0)
 S $P(MAGFILE,U,18)=BIGFILE
"RTN","MAGGTII",129,0)
 ;
"RTN","MAGGTII",130,0)
 ; now set $P(4) SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",131,0)
 S $P(MAGFILE,U,4)=$P(MAGN2,U,4)_$G(MAGJBOL)
"RTN","MAGGTII",132,0)
 ;
"RTN","MAGGTII",133,0)
 ; now set $P(5)PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",134,0)
 S $P(MAGFILE,U,5)=$P(MAGN2,U,5)
"RTN","MAGGTII",135,0)
 ;
"RTN","MAGGTII",136,0)
 ; now set $P(6) OBJECT TYPE
"RTN","MAGGTII",137,0)
 S $P(MAGFILE,U,6)=MAGOBJT
"RTN","MAGGTII",138,0)
 ;
"RTN","MAGGTII",139,0)
 ; now set $P(7) PROCEDURE field
"RTN","MAGGTII",140,0)
 S $P(MAGFILE,U,7)=$P(MAGN0,U,8)
"RTN","MAGGTII",141,0)
 ;
"RTN","MAGGTII",142,0)
 ; now we're making a DATE to display and will use it for a sort in  
"RTN","MAGGTII",143,0)
 ;  the delphi TStringGrid so we display mm/dd/yyyy
"RTN","MAGGTII",144,0)
 ; now set $P(8) display date
"RTN","MAGGTII",145,0)
 S X=$P($P(MAGN2,"^",5),".",1)
"RTN","MAGGTII",146,0)
 I X'="" S X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_($E(X,1,3)+1700)
"RTN","MAGGTII",147,0)
 S $P(MAGFILE,U,8)=X
"RTN","MAGGTII",148,0)
 ;
"RTN","MAGGTII",149,0)
 ; now return the PARENT DATA FILE image pointer
"RTN","MAGGTII",150,0)
 S $P(MAGFILE,U,9)=$P(MAGN2,U,8)
"RTN","MAGGTII",151,0)
 ;
"RTN","MAGGTII",152,0)
 ; now return the ABSTYPE ( this is 'M' or 'W' or 'O' )
"RTN","MAGGTII",153,0)
 ; 'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",154,0)
 S $P(MAGFILE,U,10)=ABSTYPE
"RTN","MAGGTII",155,0)
 ;
"RTN","MAGGTII",156,0)
 ; now return the code to show if full res image is offline 'A' or 'O'
"RTN","MAGGTII",157,0)
 ; 'A' accessable   'O' offline
"RTN","MAGGTII",158,0)
 S $P(MAGFILE,U,11)=FULLTYPE
"RTN","MAGGTII",159,0)
 ;
"RTN","MAGGTII",160,0)
 ;  2/1/99 Dicom Series number and Dicom Image Number  
"RTN","MAGGTII",161,0)
 ;    $p(12) and $p(13)
"RTN","MAGGTII",162,0)
 ;
"RTN","MAGGTII",163,0)
 ; lets add the count of images , if this is a group
"RTN","MAGGTII",164,0)
 S X=+$P($G(^MAG(2005,MAGXX,1,0)),U,4),$P(MAGFILE,U,14)=$S(X:X,1:1)
"RTN","MAGGTII",165,0)
 ;
"RTN","MAGGTII",166,0)
 ; $p(15^16 ) are SiteIEN and SiteCode Consolidation - DBI
"RTN","MAGGTII",167,0)
 S $P(MAGFILE,U,15)=MAGPLCF
"RTN","MAGGTII",168,0)
 I MAGPLCF]"" D
"RTN","MAGGTII",169,0)
 . S PLCCODE=$$GET1^DIQ(2006.1,+MAGPLCF,.09)
"RTN","MAGGTII",170,0)
 . S $P(MAGFILE,U,16)=$S($L(PLCCODE):PLCCODE,1:"Unk")
"RTN","MAGGTII",171,0)
 E  S $P(MAGFILE,U,16)=""
"RTN","MAGGTII",172,0)
 ; $p(17)           8/22/01 GEK Mod for integrity check.
"RTN","MAGGTII",173,0)
 I '$G(MAGNOCHK) D CHK^MAGGSQI(.MAGQI,MAGXX) I 'MAGQI(0) D
"RTN","MAGGTII",174,0)
 . ; remove the Abstract and Image File Names ; 2/14/03 remove c:\program files... with .\bmp\
"RTN","MAGGTII",175,0)
 . S $P(MAGFILE,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGTII",176,0)
 . ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGTII",177,0)
 . S $P(MAGFILE,U,6)=$S(($P(MAGFILE,U,6)'=11):"99",1:11)
"RTN","MAGGTII",178,0)
 . S $P(MAGFILE,U,10)="M"
"RTN","MAGGTII",179,0)
 . ;Send the error message
"RTN","MAGGTII",180,0)
 . S $P(MAGFILE,U,17)=$P(MAGQI(0),U,2)
"RTN","MAGGTII",181,0)
 ; $p(18) is BIGFile Full name and path. ( set above)
"RTN","MAGGTII",182,0)
 I ($P($G(MAGJOB("VERSION")),".",1,3)'="3.0.8") Q  ;For Speed of Loading Lists.
"RTN","MAGGTII",183,0)
 S $P(MAGFILE,U,19)=$P(MAGN0,U,7)                         ; DFN
"RTN","MAGGTII",184,0)
 ;S $P(MAGFILE,U,20)=$$GET1^DIQ(2,$P(MAGN0,U,7)_",",.01)   ; Patient Name
"RTN","MAGGTII",185,0)
 S $P(MAGFILE,U,21)=$S(+$P(MAGN40,U,2):$P(^MAG(2005.82,$P(MAGN40,U,2),0),U),1:"")
"RTN","MAGGTII",186,0)
 ; Stop displaying a Group of 1 as a Group, so here we'll change Object type
"RTN","MAGGTII",187,0)
 ;  to that of the '1ST' image in the group of 1.
"RTN","MAGGTII",188,0)
 I $P($G(^MAG(2005,MAGXX,1,0)),U,4)=1 D
"RTN","MAGGTII",189,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",190,0)
 . S X=+^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",191,0)
 . S $P(MAGFILE,U,6)=$P(^MAG(2005,X,0),U,6) ; OBJECT TYPE OF 1ST IMAGE IN GROUP
"RTN","MAGGTII",192,0)
 . S $P(MAGFILE,U,1)=X
"RTN","MAGGTII",193,0)
 Q
"RTN","MAGGTMC")
0^43^B11614224
"RTN","MAGGTMC",1,0)
MAGGTMC ;WOIFO/GEK - RPC Calls for Imaging/Medicine procedures ; [ 06/20/2001 08:56 ]
"RTN","MAGGTMC",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTMC",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTMC",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTMC",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTMC",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTMC",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTMC",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTMC",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTMC",10,0)
 ;; |                                                               |
"RTN","MAGGTMC",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTMC",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTMC",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTMC",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTMC",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTMC",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTMC",17,0)
 ;;
"RTN","MAGGTMC",18,0)
 Q
"RTN","MAGGTMC",19,0)
LIST(MAGRY,MAGGZY) ;RPC [MAGGLISTPROC]
"RTN","MAGGTMC",20,0)
 ; Call to return a list of procedures/subspecialities
"RTN","MAGGTMC",21,0)
 ;MAGGZY NOT USED in Version 2.5
"RTN","MAGGTMC",22,0)
 ;  if MAGGZY=1 then add procedure PRINT NAME (full name) in output
"RTN","MAGGTMC",23,0)
 ; returns list of  NAME       PRINT NAME  ^     GLOBAL ^   IEN
"RTN","MAGGTMC",24,0)
 ;  i.e.           "ECG        ELECTROCARDIOGRAM^MCAR(691.5^2"
"RTN","MAGGTMC",25,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTMC",26,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTMC",27,0)
 N X,Y,Z,I,CT,PRCSTR,MAGKEY,TEMP,MAGPLC
"RTN","MAGGTMC",28,0)
 S CT=0
"RTN","MAGGTMC",29,0)
 ; Now we will check keys for medicine procedures the user is 
"RTN","MAGGTMC",30,0)
 ; allowed to capture to.
"RTN","MAGGTMC",31,0)
 ; We allow site to Use/Not Use the Capture Security Keys based on 
"RTN","MAGGTMC",32,0)
 ;  an entry in the Site Parameters File
"RTN","MAGGTMC",33,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGGTMC",34,0)
 S MAGKEY=+$P($G(^MAG(2006.1,MAGPLC,"KEYS")),U)
"RTN","MAGGTMC",35,0)
 I 'MAGKEY D  Q
"RTN","MAGGTMC",36,0)
 . S X="" F  S X=$O(^MCAR(697.2,"B",X)) Q:X=""  D
"RTN","MAGGTMC",37,0)
 . . S I=$O(^MCAR(697.2,"B",X,"")) S Z=X
"RTN","MAGGTMC",38,0)
 . . S Y=^MCAR(697.2,I,0)
"RTN","MAGGTMC",39,0)
 . . Q:'$D(^MAG(2005.03,$P($P(Y,U,2),"(",2)))
"RTN","MAGGTMC",40,0)
 . . S CT=CT+1
"RTN","MAGGTMC",41,0)
 . . S MAGRY(CT)=Z_U_$P(Y,U,8)_U_$P(Y,U,2)_U_I
"RTN","MAGGTMC",42,0)
 D PROCS(.DUZ,.TEMP)
"RTN","MAGGTMC",43,0)
 S (X,CT)=0 F  S X=$O(TEMP(X)) Q:X'?1N.N  D
"RTN","MAGGTMC",44,0)
 . Q:'$D(^XUSEC("MAGCAP MED "_$P(TEMP(X),U,5),DUZ))
"RTN","MAGGTMC",45,0)
 . S CT=CT+1,MAGRY(CT)=TEMP(X)
"RTN","MAGGTMC",46,0)
 Q
"RTN","MAGGTMC",47,0)
PRC(MAGRY,MAGGZY) ;RPC [MAGGPATPROC]
"RTN","MAGGTMC",48,0)
 ;  Call to return a List of Patient Procedures
"RTN","MAGGTMC",49,0)
 ;                in subspeciality, or all
"RTN","MAGGTMC",50,0)
 ; MAGGZY is a '^' delimited string of 4 pieces.
"RTN","MAGGTMC",51,0)
 ;   $p(1) = Internal entry number of the Subspecialty
"RTN","MAGGTMC",52,0)
 ;             i.e. ^MCAR(697.2,IEN)  
"RTN","MAGGTMC",53,0)
 ;   $P(2) = DFN 
"RTN","MAGGTMC",54,0)
 ;   $P(3) = TO DATE (external format) 
"RTN","MAGGTMC",55,0)
 ;   $P(4) = FROM DATE def to TODAY (external format)
"RTN","MAGGTMC",56,0)
 ;             i.e. "43^643^07/03/95"
"RTN","MAGGTMC",57,0)
 ;
"RTN","MAGGTMC",58,0)
 N DIQUIET,Y,X,MCFILE,MAGGFI,MAGGFN,MAGDFN,MAGGPN,MAGGD
"RTN","MAGGTMC",59,0)
 ;
"RTN","MAGGTMC",60,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTMC",61,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTMC",62,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGGTMC",63,0)
 ;  FILE               PATIENT               DATE
"RTN","MAGGTMC",64,0)
 S MAGGFI=+$P(MAGGZY,U),MAGDFN=+$P(MAGGZY,U,2),MAGGD=$P(MAGGZY,U,3)
"RTN","MAGGTMC",65,0)
 ; 
"RTN","MAGGTMC",66,0)
 I '$D(^MCAR(697.2,MAGGFI)) D  Q
"RTN","MAGGTMC",67,0)
 . S MAGRY(0)="0^NO Specialty # exists "_MAGGFI
"RTN","MAGGTMC",68,0)
 S MCFILE=$P(^MCAR(697.2,MAGGFI,0),U,2)   ; GLOBAL i.e.  MCAR(691
"RTN","MAGGTMC",69,0)
 S MAGGFN=$P(^MCAR(697.2,MAGGFI,0),U)     ; NAME   i.e.  ECHO
"RTN","MAGGTMC",70,0)
 S MAGGPN=$P(^DPT(MAGDFN,0),U)            ; PATIENT NAME
"RTN","MAGGTMC",71,0)
 ; Call Medicine API to list procedure for patient in this subspecialty
"RTN","MAGGTMC",72,0)
 D SUB^MCARUTL2(.MAGRY,MAGDFN,MAGGFI)
"RTN","MAGGTMC",73,0)
 Q
"RTN","MAGGTMC",74,0)
PROCS(DUZ,PROCS) ;MAGDUZ=DUZ , PROCS IS CALLED BY REFERENCE
"RTN","MAGGTMC",75,0)
 N IEN,CNT,KEY,NAME,NODE
"RTN","MAGGTMC",76,0)
 S NAME="",CNT=0
"RTN","MAGGTMC",77,0)
 F  S NAME=$O(^MCAR(697.2,"B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,"")) D
"RTN","MAGGTMC",78,0)
 . Q:IEN'?1N.N
"RTN","MAGGTMC",79,0)
 . S NODE=$G(^MCAR(697.2,IEN,0)) Q:NODE=""
"RTN","MAGGTMC",80,0)
 . Q:'$D(^MAG(2005.03,$P($P(NODE,U,2),"(",2)))
"RTN","MAGGTMC",81,0)
 . S CNT=CNT+1
"RTN","MAGGTMC",82,0)
 . S $P(PROCS(CNT),U,1)=NAME ;PROCEDURE NAME
"RTN","MAGGTMC",83,0)
 . S $P(PROCS(CNT),U,2)=$P(NODE,U,8)  ;PRINTNAME
"RTN","MAGGTMC",84,0)
 . S $P(PROCS(CNT),U,3)=$P(NODE,U,2)  ;GLOBAL LOCATION
"RTN","MAGGTMC",85,0)
 . S $P(PROCS(CNT),U,4)=IEN  ;PROC/SUBSPEC FILE IEN
"RTN","MAGGTMC",86,0)
 . S $P(PROCS(CNT),U,5)=$P(NODE,U,4)  ;PROCEDURE TYPE
"RTN","MAGGTMC",87,0)
 Q
"RTN","MAGGTPT1")
0^37^B26050561
"RTN","MAGGTPT1",1,0)
MAGGTPT1 ;WOIFO/GEK - Delphi-Broker calls for patient lookup and information ; [ 06/20/2001 08:57 ]
"RTN","MAGGTPT1",2,0)
 ;;3.0;IMAGING;**16,8**;Sep 15, 2004
"RTN","MAGGTPT1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTPT1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTPT1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTPT1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTPT1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTPT1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTPT1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTPT1",10,0)
 ;; |                                                               |
"RTN","MAGGTPT1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTPT1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTPT1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTPT1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTPT1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTPT1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTPT1",17,0)
 ;;
"RTN","MAGGTPT1",18,0)
 Q
"RTN","MAGGTPT1",19,0)
 ;
"RTN","MAGGTPT1",20,0)
FIND(MAGRY,ZY) ;RPC [MAGG PAT FIND]
"RTN","MAGGTPT1",21,0)
 ; Call to Do a lookup using FIND^DIC
"RTN","MAGGTPT1",22,0)
 ; MAGRY is the Array to return.
"RTN","MAGGTPT1",23,0)
 ; ZY is parameter sent by calling app (Delphi)
"RTN","MAGGTPT1",24,0)
 ;    FILE NUM ^ NUM TO RETURN ^ TEXT TO MATCH ^  ^ SCREEN ($P 5-99)
"RTN","MAGGTPT1",25,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTPT1",26,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTPT1",27,0)
 ;
"RTN","MAGGTPT1",28,0)
 N X,Y,I,Z,MAGDFN,WARD
"RTN","MAGGTPT1",29,0)
 N FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT
"RTN","MAGGTPT1",30,0)
 S (FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)=""
"RTN","MAGGTPT1",31,0)
 ;
"RTN","MAGGTPT1",32,0)
 S FILE=2 ; Patient File
"RTN","MAGGTPT1",33,0)
 ;          Number of entries to return, If 0 we'll stop at 100
"RTN","MAGGTPT1",34,0)
 S NUM=$S(+$P(ZY,U,1):+$P(ZY,U,1),1:100)
"RTN","MAGGTPT1",35,0)
 S VAL=$P(ZY,U,2) ; this is the starting value i.e. 'Smi'
"RTN","MAGGTPT1",36,0)
 S SCR=$P(ZY,U,5,99)
"RTN","MAGGTPT1",37,0)
 S FLDS=$P(ZY,U,3)
"RTN","MAGGTPT1",38,0)
 ; $P(ZU,U,4) isn't used.
"RTN","MAGGTPT1",39,0)
 ;  If specific fields aren't requested, 
"RTN","MAGGTPT1",40,0)
 ;     Get Identifiers, and ward as FLDS
"RTN","MAGGTPT1",41,0)
 ;I '$L(FLDS) S FLDS=FLDS_";.1;.03;.09;.301;391"
"RTN","MAGGTPT1",42,0)
 I '$L(FLDS) S FLDS=FLDS_";.1;.301;391"
"RTN","MAGGTPT1",43,0)
 ;  we'll add ACN to the index to search, for ward
"RTN","MAGGTPT1",44,0)
 ; for speed we'll decide which xref to use
"RTN","MAGGTPT1",45,0)
 S INDEX=$S(VAL?9N:"SSN^ACN",VAL?1U1.N:"BS5^ACN",1:"B^ACN")
"RTN","MAGGTPT1",46,0)
 ;
"RTN","MAGGTPT1",47,0)
 K ^TMP("DILIST",$J) ; is this necessary ?
"RTN","MAGGTPT1",48,0)
 K ^TMP("DIERR",$J) ; This is.
"RTN","MAGGTPT1",49,0)
 ; 
"RTN","MAGGTPT1",50,0)
 D FIND^DIC(FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)
"RTN","MAGGTPT1",51,0)
 ;
"RTN","MAGGTPT1",52,0)
 ;  if no Match or ERROR  we return 0 as 1st '^' piece.
"RTN","MAGGTPT1",53,0)
 ;
"RTN","MAGGTPT1",54,0)
 I '$D(^TMP("DILIST",$J,1)) S I=1 D  Q
"RTN","MAGGTPT1",55,0)
 . I $D(^TMP("DIERR",$J)) D FINDERR(I) Q
"RTN","MAGGTPT1",56,0)
 . S MAGRY(I)="NO MATCH for lookup on """_$P(ZY,"^",2)_""""
"RTN","MAGGTPT1",57,0)
 ;
"RTN","MAGGTPT1",58,0)
 ;  so we have some matches, (BUT we could still have an error)
"RTN","MAGGTPT1",59,0)
 ;  so first list all matches, then the Errors, if any.
"RTN","MAGGTPT1",60,0)
 S I="" F  S I=$O(^TMP("DILIST",$J,1,I)) Q:I=""  D
"RTN","MAGGTPT1",61,0)
 . S X=^TMP("DILIST",$J,1,I) ; Name
"RTN","MAGGTPT1",62,0)
 . S MAGDFN=^TMP("DILIST",$J,2,I) ; DFN
"RTN","MAGGTPT1",63,0)
 . ;
"RTN","MAGGTPT1",64,0)
 . S WARD=^TMP("DILIST",$J,"ID",I,.1)
"RTN","MAGGTPT1",65,0)
 . K ^TMP("DILIST",$J,"ID",I,.1)
"RTN","MAGGTPT1",66,0)
 . I $E(WARD,1,$L(VAL))=VAL S X=WARD_"   "_X
"RTN","MAGGTPT1",67,0)
 . ;
"RTN","MAGGTPT1",68,0)
 . S X=X_"   "_$$DOB^DPTLK1(MAGDFN)_"   "_$$SSN^DPTLK1(MAGDFN)
"RTN","MAGGTPT1",69,0)
 . S Z=0
"RTN","MAGGTPT1",70,0)
 . ; We are displaying other identifers with each patient.
"RTN","MAGGTPT1",71,0)
 . F  S Z=$O(^TMP("DILIST",$J,"ID",I,Z)) Q:Z=""  S X=X_"   "_^(Z)
"RTN","MAGGTPT1",72,0)
 . S MAGRY(I)=X_"^"_+MAGDFN
"RTN","MAGGTPT1",73,0)
 ;
"RTN","MAGGTPT1",74,0)
 I $D(^TMP("DIERR",$J)) D FINDERR() Q
"RTN","MAGGTPT1",75,0)
 I '$D(^TMP("DILIST",$J,0)) Q
"RTN","MAGGTPT1",76,0)
 S X=^TMP("DILIST",$J,0)
"RTN","MAGGTPT1",77,0)
 S I=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",78,0)
 S MAGRY(0)="Found "_$P(X,"^")_" entr"_$S((+X=1):"y",1:"ies")_" matching """_$P(ZY,"^",3)_""""
"RTN","MAGGTPT1",79,0)
 I $P(X,"^",3)>0 S MAGRY(0)=MAGRY(0)_" there are more"
"RTN","MAGGTPT1",80,0)
 Q
"RTN","MAGGTPT1",81,0)
FINDERR(XI) ;
"RTN","MAGGTPT1",82,0)
 I '+$G(XI) S XI=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",83,0)
 S MAGRY(XI)="ERROR^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","MAGGTPT1",84,0)
 Q
"RTN","MAGGTPT1",85,0)
INFO(MAGRY,DATA) ;RPC [MAGG PAT INFO]  Call to  Return patient info.
"RTN","MAGGTPT1",86,0)
 ; Input in DATA:  MAGDFN ^ NOLOG
"RTN","MAGGTPT1",87,0)
 ;     MAGDFN -- Patient DFN
"RTN","MAGGTPT1",88,0)
 ;     NOLOG  -- 0/1; if 1, then do NOT update the Session log
"RTN","MAGGTPT1",89,0)
 ;  We return the following :
"RTN","MAGGTPT1",90,0)
 ; //$P     1        2      3     4     5     6     7     8        9                     10
"RTN","MAGGTPT1",91,0)
 ; //    status ^   DFN ^ name ^ sex ^ DOB ^ SSN ^ S/C ^ TYPE ^ Veteran(y/n)  ^ Patient Image Count
"RTN","MAGGTPT1",92,0)
 ; VADM(1)=Patient's name
"RTN","MAGGTPT1",93,0)
 ; VADM(5)=Patient's sex (M^MALE)
"RTN","MAGGTPT1",94,0)
 ; VADM(3)=Patient's DOB (internal^external)
"RTN","MAGGTPT1",95,0)
 ; VADM(2)=Patient's SSN (internal^external)
"RTN","MAGGTPT1",96,0)
 ; VAEL(3)=Patient's Service Connected? (#.301) (1=yes)
"RTN","MAGGTPT1",97,0)
 ; VAEL(4)=Patient's Veteran Y/N (#1901) (1=yes)
"RTN","MAGGTPT1",98,0)
 ; VAEL(6)=Patient's Type (#391) (internal^external)
"RTN","MAGGTPT1",99,0)
 ;
"RTN","MAGGTPT1",100,0)
 N MAGDFN,DFN,X,NOLOG
"RTN","MAGGTPT1",101,0)
 S MAGDFN=$P(DATA,U),NOLOG=+$P(DATA,U,2)
"RTN","MAGGTPT1",102,0)
 S DFN=+MAGDFN D DEM^VADPT,ELIG^VADPT
"RTN","MAGGTPT1",103,0)
 I VAERR S MAGRY="0^"_"Entry not found in Patient file."
"RTN","MAGGTPT1",104,0)
 S X=$TR($$FMTE^XLFDT($P(VADM(3),"^"),"2FD")," ",0)
"RTN","MAGGTPT1",105,0)
 ; //             1        2      3     4     5     6     7     8        9                     10
"RTN","MAGGTPT1",106,0)
 ; // st is   status ^   DFN ^ name ^ sex ^ DOB ^ SSN ^ S/C ^ TYPE ^ Veteran(y/n)  ^ Patient Image Count
"RTN","MAGGTPT1",107,0)
 S $P(MAGRY,"^",1,2)="1^"_+MAGDFN
"RTN","MAGGTPT1",108,0)
 S $P(MAGRY,"^",3,6)=$G(VADM(1))_"^"_$P(VADM(5),"^",2)_"^"_X_"^"_$P(VADM(2),"^")
"RTN","MAGGTPT1",109,0)
 ; Fields:        NAME,           SEX,      DATE OF BIRTH,    SSN
"RTN","MAGGTPT1",110,0)
 S $P(MAGRY,"^",7,9)=$S(+VAEL(3):"YES",1:"")_"^"_$P(VAEL(6),"^",2)_"^"_$S(+VAEL(4):"YES",1:"")
"RTN","MAGGTPT1",111,0)
 ; Fields:         Service Connected?,       Type,                   Veteran Y/N?     
"RTN","MAGGTPT1",112,0)
 S $P(MAGRY,"^",10,12)=$$IMGCT(DFN)_"^"
"RTN","MAGGTPT1",113,0)
 D KVAR^VADPT,KVA^VADPT
"RTN","MAGGTPT1",114,0)
 I NOLOG  ; Don't update session log
"RTN","MAGGTPT1",115,0)
 E  D ACTION^MAGGTAU("PAT^"_MAGDFN)
"RTN","MAGGTPT1",116,0)
 Q
"RTN","MAGGTPT1",117,0)
IMGCT(DFN) ; RETURN TOTAL NUMBER OF IMAGES FOR A PATIENT;
"RTN","MAGGTPT1",118,0)
 ;
"RTN","MAGGTPT1",119,0)
 N I,CT,RDT,PRX,IEN
"RTN","MAGGTPT1",120,0)
 S CT=0
"RTN","MAGGTPT1",121,0)
 S RDT="" F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:RDT=""  D
"RTN","MAGGTPT1",122,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGGTPT1",123,0)
 . . S IEN="" F  S IEN=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX,IEN)) Q:IEN=""  S CT=CT+1
"RTN","MAGGTPT1",124,0)
 Q CT
"RTN","MAGGTPT1",125,0)
BS5CHK(MAGRY,MAGDFN) ;RPC [MAGG PAT BS5 CHECK]
"RTN","MAGGTPT1",126,0)
 ; Call to check the BS5 cross ref 
"RTN","MAGGTPT1",127,0)
 ; and see if any similiar patients exist.
"RTN","MAGGTPT1",128,0)
 ; If yes, all matching patients will be listed and shown to the user.
"RTN","MAGGTPT1",129,0)
 ;
"RTN","MAGGTPT1",130,0)
 N MAGX,MAGDPT,XDFN,XSSN,CT,LNTH
"RTN","MAGGTPT1",131,0)
 S LNTH=0
"RTN","MAGGTPT1",132,0)
 S MAGRY(1)="-1^Error checking cross reference"
"RTN","MAGGTPT1",133,0)
 D GUIBS5A^DPTLK6(.MAGRY,MAGDFN)
"RTN","MAGGTPT1",134,0)
 I MAGRY(1)=0 Q
"RTN","MAGGTPT1",135,0)
 S CT=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",136,0)
 S MAGRY(CT)=MAGRY(CT-1),MAGRY(CT-1)="0^ "
"RTN","MAGGTPT1",137,0)
 S I="" F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTPT1",138,0)
 . I $P(MAGRY(I),U)=0 Q
"RTN","MAGGTPT1",139,0)
 . I $L($P(MAGRY(I),U,3))>LNTH S LNTH=$L($P(MAGRY(I),U,3))
"RTN","MAGGTPT1",140,0)
 S LNTH=LNTH+1
"RTN","MAGGTPT1",141,0)
 S I=1 F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTPT1",142,0)
 . I $P(MAGRY(I),U)="0" S MAGRY(I)=$P(MAGRY(I),U,2) Q
"RTN","MAGGTPT1",143,0)
 . S XDFN=$P(MAGRY(I),U,2)
"RTN","MAGGTPT1",144,0)
 . I +XDFN=+MAGDFN S MAGX="   >>>>>> "
"RTN","MAGGTPT1",145,0)
 . E  S MAGX="          "
"RTN","MAGGTPT1",146,0)
 . S XSSN=$$SSN^DPTLK1(XDFN) I XSSN?9N S XSSN=$E(XSSN,1,3)_"-"_$E(XSSN,4,5)_"-"_$E(XSSN,6,9)
"RTN","MAGGTPT1",147,0)
 . S MAGDPT=$P(MAGRY(I),U,3),$E(MAGDPT,LNTH)=" "
"RTN","MAGGTPT1",148,0)
 . S MAGX=MAGX_MAGDPT_"   "_$$DOB^DPTLK1(XDFN)_"   "_XSSN
"RTN","MAGGTPT1",149,0)
 . S MAGRY(I)=MAGX
"RTN","MAGGTPT1",150,0)
 Q
"RTN","MAGGTRAI")
0^60^B28882379
"RTN","MAGGTRAI",1,0)
MAGGTRAI ;WOIFO/GEK - list images for Radiology report ; [ 11/08/2001 17:18 ]
"RTN","MAGGTRAI",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTRAI",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRAI",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTRAI",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTRAI",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTRAI",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTRAI",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTRAI",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTRAI",10,0)
 ;; |                                                               |
"RTN","MAGGTRAI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTRAI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTRAI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTRAI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTRAI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTRAI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRAI",17,0)
 ;;
"RTN","MAGGTRAI",18,0)
 Q
"RTN","MAGGTRAI",19,0)
IMAGE(MAGZRY,DATA) ;RPC [MAGGRADIMAGE]
"RTN","MAGGTRAI",20,0)
 ; Call from selected entry in Rad Exam list.
"RTN","MAGGTRAI",21,0)
 ;  INPUT is DATA, which is just what we sent in the list of Rad
"RTN","MAGGTRAI",22,0)
 ;     Exams for the patient.
"RTN","MAGGTRAI",23,0)
 ;DATA is the Radiology values stored in ^TMP($J,"RAEX",x)
"RTN","MAGGTRAI",24,0)
 ;  that the radiology procedure RAPTLU sets during the search 
"RTN","MAGGTRAI",25,0)
 ;  for patient exams.  (see routine RAPTLU )
"RTN","MAGGTRAI",26,0)
 ;      ^TMP($J,"RAEX",RACNT)=
"RTN","MAGGTRAI",27,0)
 ;     RADFN_"^"_RADTI_"^"_RACNI_"^"_RANME_"^"_RASSN_"^"
"RTN","MAGGTRAI",28,0)
 ;     _RADATE_"^"_RADTE_"^"_RACN_"^"_RAPRC_"^"_RARPT_"^"_RAST
"RTN","MAGGTRAI",29,0)
 ;
"RTN","MAGGTRAI",30,0)
 S MAGZRY=$NA(^TMP("MAGGTRAI",$J))
"RTN","MAGGTRAI",31,0)
 K @MAGZRY
"RTN","MAGGTRAI",32,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTRAI",33,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTRAI",34,0)
 N I,Y,CT,MAGIEN
"RTN","MAGGTRAI",35,0)
 ;
"RTN","MAGGTRAI",36,0)
 S DATA=$P(DATA,"^",7,99)
"RTN","MAGGTRAI",37,0)
 S CT=0
"RTN","MAGGTRAI",38,0)
 F I="RADFN","RADTI","RACNI","RANME","RASSN","RADATE","RADTE","RACN","RAPRC","RARPT","RAST" S CT=CT+1,@I=$P(DATA,"^",CT)
"RTN","MAGGTRAI",39,0)
 ; Patch 2.0.5 next few lines for Patient Safety
"RTN","MAGGTRAI",40,0)
 I RARPT["PMRAD" S @MAGZRY@(0)="-2^Patient Mismatch. Radiology Files" Q
"RTN","MAGGTRAI",41,0)
 I 'RARPT S @MAGZRY@(0)="0^No Report for selected exam." Q
"RTN","MAGGTRAI",42,0)
 I '$O(^RARPT(RARPT,2005,0)) S @MAGZRY@(0)="0^No Images for selected exam." Q
"RTN","MAGGTRAI",43,0)
 I $P($G(^RARPT(RARPT,0)),U,2)'=RADFN S @MAGZRY@(0)="-2^Patient Mismatch. Radiology Files" Q
"RTN","MAGGTRAI",44,0)
 D GETLIST
"RTN","MAGGTRAI",45,0)
 Q
"RTN","MAGGTRAI",46,0)
IMAGEC(MAGZRY,DATA) ;RPC [MAGG CPRS RAD EXAM]
"RTN","MAGGTRAI",47,0)
 ; Call to list Images for a Rad Exam that was selected from CPRS 
"RTN","MAGGTRAI",48,0)
 ; and Imaging Window was notified via windows messaging
"RTN","MAGGTRAI",49,0)
 ;   INPUT :  DATA is in format of Windows message received from CPRS
"RTN","MAGGTRAI",50,0)
 ;    example   'RPT^CPRS^29027^RA^i79029185.9998-1'
"RTN","MAGGTRAI",51,0)
 N DFN,RARPT,ENT,INVDTTM,INVDT,INVTM
"RTN","MAGGTRAI",52,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTRAI",53,0)
 S MAGZRY=$NA(^TMP("MAGGTRAI",$J))
"RTN","MAGGTRAI",54,0)
 K @MAGZRY
"RTN","MAGGTRAI",55,0)
 S DFN=$P(DATA,U,3)
"RTN","MAGGTRAI",56,0)
 S ENT=$P($P(DATA,U,5),"-",2)
"RTN","MAGGTRAI",57,0)
 S INVDTTM=$P($P(DATA,U,5),"-",1)
"RTN","MAGGTRAI",58,0)
 S INVDT=$P(INVDTTM,".",1)
"RTN","MAGGTRAI",59,0)
 S INVTM=$P(INVDTTM,".",2)
"RTN","MAGGTRAI",60,0)
 F  Q:($L(INVDT)<8)  S INVDT=$E(INVDT,2,$L(INVDT))
"RTN","MAGGTRAI",61,0)
 S INVDTTM=INVDT_"."_INVTM
"RTN","MAGGTRAI",62,0)
 I '$D(^RADPT(DFN,"DT",INVDTTM,"P",ENT,0)) S @MAGZRY@(0)="0^INVALID Data : Attempt to access Exam failed." Q
"RTN","MAGGTRAI",63,0)
 ;   Get out the Naked reference .
"RTN","MAGGTRAI",64,0)
 S RARPT=$P(^RADPT(DFN,"DT",INVDTTM,"P",ENT,0),U,17)
"RTN","MAGGTRAI",65,0)
 ;S RARPT=$P(^(0),U,17)
"RTN","MAGGTRAI",66,0)
 I 'RARPT S @MAGZRY@(0)="0^No Report for selected Exam" Q
"RTN","MAGGTRAI",67,0)
 ; MAGQI 8/22/01
"RTN","MAGGTRAI",68,0)
 I $P($G(^RARPT(RARPT,0)),U,2)'=DFN S @MAGZRY@(0)="-2^Patient Mismatch. Radiology File" Q
"RTN","MAGGTRAI",69,0)
 D GETLIST
"RTN","MAGGTRAI",70,0)
 N XINFO
"RTN","MAGGTRAI",71,0)
 S XINFO=$P(^RARPT(RARPT,0),U,1)
"RTN","MAGGTRAI",72,0)
 S X=$P(^RADPT(DFN,"DT",INVDTTM,"P",ENT,0),U,2)
"RTN","MAGGTRAI",73,0)
 S XINFO=XINFO_"  "_$P(^RAMIS(71,X,0),U)
"RTN","MAGGTRAI",74,0)
 S X=$P(^RARPT(RARPT,0),U,3)
"RTN","MAGGTRAI",75,0)
 S XINFO=XINFO_"  "_X
"RTN","MAGGTRAI",76,0)
 S $P(@MAGZRY@(0),U,3)=RARPT
"RTN","MAGGTRAI",77,0)
 S $P(@MAGZRY@(0),U,4)=XINFO
"RTN","MAGGTRAI",78,0)
 Q
"RTN","MAGGTRAI",79,0)
GETLIST ; Private call. From other points in this routine, when RARPT is defined
"RTN","MAGGTRAI",80,0)
 ; and returns a list in MAGZRY(1..n). 
"RTN","MAGGTRAI",81,0)
 ; We'll make a tmp list of just the image IEN's
"RTN","MAGGTRAI",82,0)
 ;  splitting groups into individual image entries.
"RTN","MAGGTRAI",83,0)
 ; If more than 1 Image group points to this report, we
"RTN","MAGGTRAI",84,0)
 ;  will prefix the Image Description with (G1), (G2) etc
"RTN","MAGGTRAI",85,0)
 ; We call GROUP^MAGGTIG to get the images for the group, this call
"RTN","MAGGTRAI",86,0)
 ;  sorts the images in Dicom Series, Dicom Image number order.
"RTN","MAGGTRAI",87,0)
 ;
"RTN","MAGGTRAI",88,0)
 K ^TMP("MAGGX",$J)
"RTN","MAGGTRAI",89,0)
 N OI,IGCT,MAGIEN1,ORDCT,GCT,MAGQI,MAGX
"RTN","MAGGTRAI",90,0)
 S (ORDCT,GCT,SINGCT)=0
"RTN","MAGGTRAI",91,0)
 S IGCT=+$P($G(^RARPT(RARPT,2005,0)),U,4)
"RTN","MAGGTRAI",92,0)
 ; Quit if no images for RARPT
"RTN","MAGGTRAI",93,0)
 I IGCT=0 S @MAGZRY@(0)="0^0 Images for Radiology Report." Q 
"RTN","MAGGTRAI",94,0)
 ;
"RTN","MAGGTRAI",95,0)
 ; Check all Image entries in RARPT 2005 NODE. for Patient match Pointer match, from both 
"RTN","MAGGTRAI",96,0)
 ;   RARPT end, and Imaging end.
"RTN","MAGGTRAI",97,0)
 S MAGQI=1
"RTN","MAGGTRAI",98,0)
 S OI=0,CT=1 F  S OI=$O(^RARPT(RARPT,2005,OI)) Q:'OI  D  Q:(MAGQI<1)
"RTN","MAGGTRAI",99,0)
 . S MAGIEN1=$P(^RARPT(RARPT,2005,OI,0),U)
"RTN","MAGGTRAI",100,0)
 . ; Assure magdfn = rarpt dfn
"RTN","MAGGTRAI",101,0)
 . I $P($G(^RARPT(RARPT,0)),U,2)'=$P($G(^MAG(2005,MAGIEN1,0)),U,7) S MAGQI="-2^Patient Mismatch. Radiology Report" Q
"RTN","MAGGTRAI",102,0)
 . ; Assure magien1 is pointing to this rarpt
"RTN","MAGGTRAI",103,0)
 . I $P($G(^MAG(2005,MAGIEN1,2)),U,7)'=RARPT S MAGQI="-2^Pointer Mismatch. Radiology Report" Q
"RTN","MAGGTRAI",104,0)
 . ; Now run the Imaging integrity check
"RTN","MAGGTRAI",105,0)
 . D CHK^MAGGSQI(.MAGX,MAGIEN1) I 'MAGX(0) S MAGQI="-2^"_$P(MAGX(0),U,2,99) Q
"RTN","MAGGTRAI",106,0)
 ;
"RTN","MAGGTRAI",107,0)
 I MAGQI<1 S @MAGZRY@(0)=MAGQI Q
"RTN","MAGGTRAI",108,0)
 S CT=0
"RTN","MAGGTRAI",109,0)
 ;
"RTN","MAGGTRAI",110,0)
 S OI=0,CT=1 F  S OI=$O(^RARPT(RARPT,2005,OI)) Q:'OI  D
"RTN","MAGGTRAI",111,0)
 . S MAGIEN1=$P(^RARPT(RARPT,2005,OI,0),U) D ONELIST
"RTN","MAGGTRAI",112,0)
 ;
"RTN","MAGGTRAI",113,0)
 ; Now get the list from the TMP LIST and return it.
"RTN","MAGGTRAI",114,0)
 I '$D(^TMP("MAGGX",$J)) S @MAGZRY@(0)="0^Report "_RARPT_": has INVALID Image Pointers" Q
"RTN","MAGGTRAI",115,0)
 S CT=0
"RTN","MAGGTRAI",116,0)
 S MAGQUIET=1
"RTN","MAGGTRAI",117,0)
 S I="",J="",K=""
"RTN","MAGGTRAI",118,0)
 F  S I=$O(^TMP("MAGGX",$J,I)) Q:I=""  D
"RTN","MAGGTRAI",119,0)
 . S J=""
"RTN","MAGGTRAI",120,0)
 . F  S J=$O(^TMP("MAGGX",$J,I,J)) Q:J=""  D
"RTN","MAGGTRAI",121,0)
 . . S K=""
"RTN","MAGGTRAI",122,0)
 . . F  S K=$O(^TMP("MAGGX",$J,I,J,K)) Q:K=""  D
"RTN","MAGGTRAI",123,0)
 . . . S CT=CT+1
"RTN","MAGGTRAI",124,0)
 . . . S X="["_J_"]"_$P(^TMP("MAGGX",$J,I,J,K),U,8)
"RTN","MAGGTRAI",125,0)
 . . . S $P(^TMP("MAGGX",$J,I,J,K),U,8)=X
"RTN","MAGGTRAI",126,0)
 . . . S @MAGZRY@(CT)=^TMP("MAGGX",$J,I,J,K)
"RTN","MAGGTRAI",127,0)
 K MAGQUIET
"RTN","MAGGTRAI",128,0)
 S @MAGZRY@(0)=CT_"^Images for the selected Radiology Exam"
"RTN","MAGGTRAI",129,0)
 ; Redesign needed for Multiple Image Groups pointing to an exam or note.
"RTN","MAGGTRAI",130,0)
 ; we now put all images from all groups in one list. 
"RTN","MAGGTRAI",131,0)
 S $P(@MAGZRY@(0),U,5)=$G(MAGIEN1) ; this was last ien from multiple Image Groups.
"RTN","MAGGTRAI",132,0)
 ;
"RTN","MAGGTRAI",133,0)
 Q
"RTN","MAGGTRAI",134,0)
ONELIST ;        Private Call from other parts of this routine.
"RTN","MAGGTRAI",135,0)
 N MAGTMP
"RTN","MAGGTRAI",136,0)
 Q:'$D(^MAG(2005,MAGIEN1,0))
"RTN","MAGGTRAI",137,0)
 ; if a single image just get record for that IEN
"RTN","MAGGTRAI",138,0)
 I '$O(^MAG(2005,MAGIEN1,1,0)) D  Q
"RTN","MAGGTRAI",139,0)
 . S MAGXX=MAGIEN1 D INFO^MAGGTII
"RTN","MAGGTRAI",140,0)
 . S ORDCT=ORDCT+1,SINGCT=SINGCT+1
"RTN","MAGGTRAI",141,0)
 . S ^TMP("MAGGX",$J,ORDCT,"S",SINGCT)="B2^"_MAGFILE
"RTN","MAGGTRAI",142,0)
 D GROUP^MAGGTIG(.MAGTMP,MAGIEN1) I $P(@MAGTMP@(0),U,2)>0 D
"RTN","MAGGTRAI",143,0)
 . S ORDCT=ORDCT+1,GCT=GCT+1,X="G"_GCT
"RTN","MAGGTRAI",144,0)
 . K @MAGTMP@(0)
"RTN","MAGGTRAI",145,0)
 . M ^TMP("MAGGX",$J,ORDCT,X)=@MAGTMP
"RTN","MAGGTRAI",146,0)
 Q
"RTN","MAGGTRP1")
0^24^B17417093
"RTN","MAGGTRP1",1,0)
MAGGTRP1 ;WOIFO/GEK - Display Associated Report ; [ 11/08/2001 17:18 ]
"RTN","MAGGTRP1",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTRP1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRP1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTRP1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTRP1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTRP1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTRP1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTRP1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTRP1",10,0)
 ;; |                                                               |
"RTN","MAGGTRP1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTRP1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTRP1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTRP1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTRP1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTRP1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRP1",17,0)
 ;;
"RTN","MAGGTRP1",18,0)
 Q
"RTN","MAGGTRP1",19,0)
RAD(MAGRPTY,RARPT) ;RPC [MAGGRADREPORT] Call to retrun a Radiology report
"RTN","MAGGTRP1",20,0)
 ; MAGRPTY is the return array
"RTN","MAGGTRP1",21,0)
 ; RARPT is the Radiology Report IEN i.e. ^RARPT(RARPT
"RTN","MAGGTRP1",22,0)
 N ERRRES,RPTRES
"RTN","MAGGTRP1",23,0)
 S ERRRES=""
"RTN","MAGGTRP1",24,0)
 D OPENDEV Q:POP
"RTN","MAGGTRP1",25,0)
 D BUILD(RARPT)
"RTN","MAGGTRP1",26,0)
 S RPTRES=$G(@MAGRPTY@(0))
"RTN","MAGGTRP1",27,0)
 I 'RPTRES S ERRRES=RPTRES
"RTN","MAGGTRP1",28,0)
 I +RPTRES=-2 S ERRRES=RPTRES
"RTN","MAGGTRP1",29,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGGTRP1",30,0)
 I $L(ERRRES) K @MAGRPTY S @MAGRPTY@(0)=ERRRES
"RTN","MAGGTRP1",31,0)
 ; Mod Patch5 block Questionable reports 
"RTN","MAGGTRP1",32,0)
 ; stop incorrectly report success on a failed report attempt.  this line is 
"RTN","MAGGTRP1",33,0)
 ; moved inside BUILD tag
"RTN","MAGGTRP1",34,0)
 ;S @MAGRPTY@(0)="1^OK"
"RTN","MAGGTRP1",35,0)
 Q
"RTN","MAGGTRP1",36,0)
BUILD(RARPT) ;Call to generate the Radiology Report
"RTN","MAGGTRP1",37,0)
 ; This call is called be various Imaging routines to get the Rad Report
"RTN","MAGGTRP1",38,0)
 ; This call assumes the device is already open.
"RTN","MAGGTRP1",39,0)
 ; New the variables that'll be defined in the call to RASET^RAUTL2
"RTN","MAGGTRP1",40,0)
 N RACN,RACNI,RADATE,RADFN,RADTE,RADTI
"RTN","MAGGTRP1",41,0)
 ; We'll use these
"RTN","MAGGTRP1",42,0)
 ; RADTI = Inverse date/time for rad order
"RTN","MAGGTRP1",43,0)
 ; RACNI = rad case number
"RTN","MAGGTRP1",44,0)
 ; RADFN = Patient DFN
"RTN","MAGGTRP1",45,0)
 N I,Y,X,MAGPRC,XINF
"RTN","MAGGTRP1",46,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTRP1"
"RTN","MAGGTRP1",47,0)
 E  S X="ERRA^MAGGTPR1",@^%ZOSF("TRAP")
"RTN","MAGGTRP1",48,0)
 I RARPT["PMRAD" S @MAGRPTY@(0)="-2^Patient Mismatch. Radiology Files" Q
"RTN","MAGGTRP1",49,0)
 I '$G(RARPT) S @MAGRPTY@(0)="0^NO Radiology Report number." Q
"RTN","MAGGTRP1",50,0)
 ; 
"RTN","MAGGTRP1",51,0)
 I '$$FIND1^DIC(74,"","A",+RARPT) S @MAGRPTY@(0)="0^Radiology report entry "_RARPT_" is not on file.  Contact IRM." Q
"RTN","MAGGTRP1",52,0)
 ;
"RTN","MAGGTRP1",53,0)
 S Y=RARPT
"RTN","MAGGTRP1",54,0)
 ; This call will define the needed variables RADTI,RACNI and RADFN
"RTN","MAGGTRP1",55,0)
 D RASET^RAUTL2
"RTN","MAGGTRP1",56,0)
 ;D RPT2DPT(RARPT,.XINF)
"RTN","MAGGTRP1",57,0)
 ;S ^TMP("MAGQIRP1",$J,"XINF")=XINF
"RTN","MAGGTRP1",58,0)
 ;I +XINF'=RADFN S @MAGRPTY@(0)="0^Patient Mismatch. Radiology Files"  Q
"RTN","MAGGTRP1",59,0)
 S ^TMP("MAGQIRP1",$J)="RADFN "_RADFN_" RADTI "_RADTI_" RACNI "_RACNI
"RTN","MAGGTRP1",60,0)
 S ^TMP("MAGQIRP1",$J,1)="RARPT "_RARPT_" ,0)="_$G(^RARPT(RARPT,0))
"RTN","MAGGTRP1",61,0)
 D EN3^RAO7PC3(RADFN_"^"_RADTI_"^"_RACNI)
"RTN","MAGGTRP1",62,0)
 I '$D(^TMP($J,"RAE3")) D  Q
"RTN","MAGGTRP1",63,0)
 . S @MAGRPTY@(0)="0^Radiology report not on file.  Contact IRM." Q
"RTN","MAGGTRP1",64,0)
 S MAGPRC=$O(^TMP($J,"RAE3",RADFN,RACNI,""))
"RTN","MAGGTRP1",65,0)
 S I=0 F  S I=$O(^TMP($J,"RAE3",RADFN,RACNI,MAGPRC,I)) Q:'I  D
"RTN","MAGGTRP1",66,0)
 . W !,$G(^TMP($J,"RAE3",RADFN,RACNI,MAGPRC,I))
"RTN","MAGGTRP1",67,0)
 ; 2.5P5  This line was moved from above.  So this BUILD function
"RTN","MAGGTRP1",68,0)
 ;        should now correctly return success or failure.
"RTN","MAGGTRP1",69,0)
 S @MAGRPTY@(0)="1^OK"
"RTN","MAGGTRP1",70,0)
 Q
"RTN","MAGGTRP1",71,0)
OPENDEV ;
"RTN","MAGGTRP1",72,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT"))
"RTN","MAGGTRP1",73,0)
 K @MAGRPTY ; clean it up first.
"RTN","MAGGTRP1",74,0)
 S IOP="IMAGING WORKSTATION",%ZIS=0 D ^%ZIS
"RTN","MAGGTRP1",75,0)
 I POP S @MAGRPTY@(0)="0^Can't open device IMAGING WORKSTATION" Q
"RTN","MAGGTRP1",76,0)
 U IO
"RTN","MAGGTRP1",77,0)
 Q
"RTN","MAGGTRP1",78,0)
ERRA ;
"RTN","MAGGTRP1",79,0)
 S @MAGRPTY@(0)="0^ERROR "_$$EC^%ZOSV
"RTN","MAGGTRP1",80,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTRP1",81,0)
 Q
"RTN","MAGGTRP1",82,0)
GRPDESC(MAGIEN) ; PRINT LONG DESC OF IMAGE GROUP and ALL children in Group
"RTN","MAGGTRP1",83,0)
 ;DEVICE HAS ALREADY BEEN OPENED
"RTN","MAGGTRP1",84,0)
 N MAGCIEN,MAGJ,MAGDASH
"RTN","MAGGTRP1",85,0)
 S $P(MAGDASH,"_",79)="_"
"RTN","MAGGTRP1",86,0)
 K ^UTILITY($J,"W")
"RTN","MAGGTRP1",87,0)
 D GETDESC(MAGIEN)
"RTN","MAGGTRP1",88,0)
 S MAGCIEN=0
"RTN","MAGGTRP1",89,0)
 F  S MAGCIEN=$O(^MAG(2005,MAGIEN,1,MAGCIEN)) Q:'MAGCIEN  D
"RTN","MAGGTRP1",90,0)
 . S MAGJ=^MAG(2005,MAGIEN,1,MAGCIEN,0)
"RTN","MAGGTRP1",91,0)
 . I '$D(^MAG(2005,+MAGJ,3)) Q
"RTN","MAGGTRP1",92,0)
 . D GETDESC(MAGJ)
"RTN","MAGGTRP1",93,0)
 W MAGDASH
"RTN","MAGGTRP1",94,0)
 Q
"RTN","MAGGTRP1",95,0)
GETDESC(MAGIEN) ;
"RTN","MAGGTRP1",96,0)
 ;
"RTN","MAGGTRP1",97,0)
 N X,MAGI,DIWR,DIWL,DIWF,MAGHD
"RTN","MAGGTRP1",98,0)
 I $O(^MAG(2005,MAGIEN,1,0)) S MAGHD="Group"
"RTN","MAGGTRP1",99,0)
 E  S MAGHD="Image"
"RTN","MAGGTRP1",100,0)
 W MAGHD_" ID# "_MAGIEN,!
"RTN","MAGGTRP1",101,0)
 I $O(^MAG(2005,MAGIEN,3,0)) D
"RTN","MAGGTRP1",102,0)
 . S DIWR=80,DIWL=1,DIWF="N"
"RTN","MAGGTRP1",103,0)
 . W MAGHD_" : "_$P(^MAG(2005,MAGIEN,2),U,4),!
"RTN","MAGGTRP1",104,0)
 . W MAGHD_" Long Description:  ",!
"RTN","MAGGTRP1",105,0)
 . S MAGI=0
"RTN","MAGGTRP1",106,0)
 . F  S MAGI=$O(^MAG(2005,MAGIEN,3,MAGI)) Q:+MAGI<1  D
"RTN","MAGGTRP1",107,0)
 . . S X=^MAG(2005,MAGIEN,3,MAGI,0) D ^DIWP
"RTN","MAGGTRP1",108,0)
 . D ^DIWW
"RTN","MAGGTRP1",109,0)
 . W !
"RTN","MAGGTRP1",110,0)
 Q
"RTN","MAGGTRP1",111,0)
RPT2DPT(RARPT,RET) ; For input RARPT, return string RET containing case
"RTN","MAGGTRP1",112,0)
 ;                 subscript values for accessing ^RADPT
"RTN","MAGGTRP1",113,0)
 ; Stole this code from john, don't tell him.
"RTN","MAGGTRP1",114,0)
 ; * This subroutine may be called by other routines of the Radiology
"RTN","MAGGTRP1",115,0)
 ;   Imaging Workstation programs
"RTN","MAGGTRP1",116,0)
 ;
"RTN","MAGGTRP1",117,0)
 N DFN,DTI,CNI S (DFN,DTI,CNI)=""
"RTN","MAGGTRP1",118,0)
 I RARPT?1N.N,$D(^RARPT(RARPT)) S X=$G(^(RARPT,0)) I X]"" D
"RTN","MAGGTRP1",119,0)
 . S X=$P(X,U)
"RTN","MAGGTRP1",120,0)
 . S X=$O(^RADPT("ADC",X,0)) I X S DFN=X,DTI=$O(^(X,0)),CNI=$O(^(DTI,0))
"RTN","MAGGTRP1",121,0)
 . S RET=DFN_U_DTI_U_CNI
"RTN","MAGGTRP1",122,0)
 E  S RET=""
"RTN","MAGGTRP1",123,0)
 Q
"RTN","MAGGTRPT")
0^69^B42848929
"RTN","MAGGTRPT",1,0)
MAGGTRPT ;WOIFO/RED/GEK - Display Associated Report ; [ 11/08/2001 17:18 ]
"RTN","MAGGTRPT",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTRPT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRPT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTRPT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTRPT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTRPT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTRPT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTRPT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTRPT",10,0)
 ;; |                                                               |
"RTN","MAGGTRPT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTRPT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTRPT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTRPT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTRPT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTRPT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRPT",17,0)
 ;;
"RTN","MAGGTRPT",18,0)
BRK(MAGRPTY,MAGGIEN) ;RPC [MAGGRPT]  Call to return Image report
"RTN","MAGGTRPT",19,0)
 ;  MAGGIEN is internal number in Image File ^MAG(2005,
"RTN","MAGGTRPT",20,0)
 ;
"RTN","MAGGTRPT",21,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT"))
"RTN","MAGGTRPT",22,0)
 K @MAGRPTY ; clean it up first.
"RTN","MAGGTRPT",23,0)
 S @MAGRPTY@(0)="0^Building the Image report..."
"RTN","MAGGTRPT",24,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTRPT"
"RTN","MAGGTRPT",25,0)
 E  S X="ERRA^MAGGTRPT",@^%ZOSF("TRAP")
"RTN","MAGGTRPT",26,0)
 ;
"RTN","MAGGTRPT",27,0)
 N X,Y,Z,MAGGBRK,MAGO,MAGGRPO,MAGDFN,MAGTMPR,MAGTMPRT
"RTN","MAGGTRPT",28,0)
 N MAGNODIS,MAGTMPR2,MAGDESC,MAGISGRP,MAGQA
"RTN","MAGGTRPT",29,0)
 S MAGGBRK=1,MAGISGRP=0
"RTN","MAGGTRPT",30,0)
 S MAGO=+$P(MAGGIEN,"^")
"RTN","MAGGTRPT",31,0)
 ; Requesting a report, have to check Image
"RTN","MAGGTRPT",32,0)
 ;   and Group, if this image is in a group.
"RTN","MAGGTRPT",33,0)
 I '$D(MAGJOB("SKIPQA")) D  Q:'MAGQA(0)
"RTN","MAGGTRPT",34,0)
 . D CHK^MAGGSQI(.MAGQA,MAGO)
"RTN","MAGGTRPT",35,0)
 . ;I 'MAGQA(0) S @MAGRPTY@(0)=MAGQA(0) Q  ; Patch 5
"RTN","MAGGTRPT",36,0)
 . I 'MAGQA(0) S @MAGRPTY@(0)="-2^"_$P(MAGQA(0),U,2,99) Q
"RTN","MAGGTRPT",37,0)
 . S MAGGRPO=+$P(^MAG(2005,MAGO,0),U,10)
"RTN","MAGGTRPT",38,0)
 . Q:'MAGGRPO  K MAGQA
"RTN","MAGGTRPT",39,0)
 . D CHK^MAGGSQI(.MAGQA,MAGGRPO)
"RTN","MAGGTRPT",40,0)
 . ;I 'MAGQA(0) S @MAGRPTY@(0)=MAGQA(0)
"RTN","MAGGTRPT",41,0)
 . I 'MAGQA(0) S @MAGRPTY@(0)="-2^"_$P(MAGQA(0),U,2,99) Q  ;Patch 5
"RTN","MAGGTRPT",42,0)
 ;
"RTN","MAGGTRPT",43,0)
 ;
"RTN","MAGGTRPT",44,0)
 I 'MAGO S @MAGRPTY@(0)="INVALID Image pointer: '"_MAGGIEN_"'" Q
"RTN","MAGGTRPT",45,0)
 I $D(^MAG(2005.1,MAGO)) S @MAGRPTY@(0)="0^Image : """_$P($G(^MAG(2005.1,MAGO,2)),U,4)_""" has been deleted." Q
"RTN","MAGGTRPT",46,0)
 S MAGDESC="",MAGDFN=$P(^MAG(2005,MAGO,0),U,7)
"RTN","MAGGTRPT",47,0)
 ; IN check we get Desc for Report Window header,
"RTN","MAGGTRPT",48,0)
 ;    and Define Group IEN  - MAGGRPO if it exists.
"RTN","MAGGTRPT",49,0)
 ;    and Define MAGISGRP = 1 if this MAGO is a group itself
"RTN","MAGGTRPT",50,0)
 D CHECK(.MAGO,MAGDFN,.MAGDESC,.MAGGRPO,.MAGISGRP)
"RTN","MAGGTRPT",51,0)
 ; quit if NO PARENT DATA FILE and No long description.
"RTN","MAGGTRPT",52,0)
 ;  for the Image or the Group entry
"RTN","MAGGTRPT",53,0)
 I ($P($G(^MAG(2005,MAGO,2)),U,6)="")&('$D(^MAG(2005,MAGO,3)))&($P($G(^MAG(2005,MAGGRPO,2)),U,6)="")&('$D(^MAG(2005,MAGGRPO,3))) S @MAGRPTY@(0)="0^No Report for this Image" Q
"RTN","MAGGTRPT",54,0)
 S IOP="IMAGING WORKSTATION",%ZIS=0 D ^%ZIS
"RTN","MAGGTRPT",55,0)
 I POP S @MAGRPTY@(0)="0^Can't open device IMAGING WORKSTATION" Q
"RTN","MAGGTRPT",56,0)
 U IO D BUILD
"RTN","MAGGTRPT",57,0)
 ;
"RTN","MAGGTRPT",58,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGGTRPT",59,0)
 S:+$P(@MAGRPTY@(0),"^") @MAGRPTY@(0)="1^"_MAGDESC
"RTN","MAGGTRPT",60,0)
 Q
"RTN","MAGGTRPT",61,0)
BUILD ;
"RTN","MAGGTRPT",62,0)
 K DIC,DIR
"RTN","MAGGTRPT",63,0)
 N MAGDASH
"RTN","MAGGTRPT",64,0)
 S $P(MAGDASH,"_",79)="_"
"RTN","MAGGTRPT",65,0)
 ; If Child of group get PARENT DATA FILE from group
"RTN","MAGGTRPT",66,0)
 I MAGGRPO S MAGTMPR=$G(^MAG(2005,MAGGRPO,2)),MAGTMPRT=$P(MAGTMPR,"^",6)  ;
"RTN","MAGGTRPT",67,0)
 ; if not child of group, then get PARENT DATA FILE from original IEN
"RTN","MAGGTRPT",68,0)
 I 'MAGGRPO S MAGTMPR=$G(^MAG(2005,MAGO,2)),MAGTMPRT=$P(MAGTMPR,"^",6)
"RTN","MAGGTRPT",69,0)
 S DIWR=80,DIWL=1
"RTN","MAGGTRPT",70,0)
 ;  IF This is a group call GRPDESC which will print ALL image long descriptions , not just the group long desc
"RTN","MAGGTRPT",71,0)
 I MAGISGRP D GRPDESC^MAGGTRP1(MAGO)
"RTN","MAGGTRPT",72,0)
 ; If not a group, then print group long desc if it exists,
"RTN","MAGGTRPT",73,0)
 ;   and/or the long desc of the Images itself
"RTN","MAGGTRPT",74,0)
 I 'MAGISGRP D
"RTN","MAGGTRPT",75,0)
 . I MAGGRPO D GETDESC^MAGGTRP1(MAGGRPO)
"RTN","MAGGTRPT",76,0)
 . D GETDESC^MAGGTRP1(MAGO)
"RTN","MAGGTRPT",77,0)
 . W MAGDASH
"RTN","MAGGTRPT",78,0)
 I MAGTMPRT="" D ENTRY^MAGLOG("LONGDES",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0) Q
"RTN","MAGGTRPT",79,0)
 I $P(MAGTMPR,"^",7)="" S @MAGRPTY@(0)="0^Full report not available through this windows option." Q
"RTN","MAGGTRPT",80,0)
 ;
"RTN","MAGGTRPT",81,0)
 ; Surgery reports
"RTN","MAGGTRPT",82,0)
 S MAGTMPR2=$P(^MAG(2005.03,MAGTMPRT,0),"^",1) I MAGTMPR2="SURGERY" D  Q
"RTN","MAGGTRPT",83,0)
 . S SRTN=$P(MAGTMPR,"^",7)
"RTN","MAGGTRPT",84,0)
 . D ^SROPRPT K SRTN
"RTN","MAGGTRPT",85,0)
 . D ENTRY^MAGLOG("SURGRPT",DUZ,MAGO,"MAGRPT",MAGDFN,0)
"RTN","MAGGTRPT",86,0)
 ;
"RTN","MAGGTRPT",87,0)
 ; TIU documents;
"RTN","MAGGTRPT",88,0)
 I MAGTMPRT=8925 D  Q
"RTN","MAGGTRPT",89,0)
 . N MAGY
"RTN","MAGGTRPT",90,0)
 . D TGET^TIUSRVR1(.MAGY,$P(MAGTMPR,"^",7))
"RTN","MAGGTRPT",91,0)
 . S I="" F  S I=$O(@MAGY@(I)) Q:'I  W !,@MAGY@(I)
"RTN","MAGGTRPT",92,0)
 . D ENTRY^MAGLOG("TIURPT",DUZ,MAGO,"MAGRPT",MAGDFN,0)
"RTN","MAGGTRPT",93,0)
 ;
"RTN","MAGGTRPT",94,0)
 ; Medicine reports
"RTN","MAGGTRPT",95,0)
 I MAGTMPRT>689.999&(MAGTMPRT<703) D  Q
"RTN","MAGGTRPT",96,0)
 . S MAGNODIS=1
"RTN","MAGGTRPT",97,0)
 . D REPRT^MCMAGDSP($P(MAGTMPR,"^",7),MAGTMPRT)
"RTN","MAGGTRPT",98,0)
 . D ENTRY^MAGLOG("MEDRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",99,0)
 ;
"RTN","MAGGTRPT",100,0)
 ; Radiology reports
"RTN","MAGGTRPT",101,0)
 I MAGTMPRT=74 D  Q
"RTN","MAGGTRPT",102,0)
 . D BUILD^MAGGTRP1($P(MAGTMPR,U,7))
"RTN","MAGGTRPT",103,0)
 . D ENTRY^MAGLOG("RADRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",104,0)
 ;
"RTN","MAGGTRPT",105,0)
 ;Laboratory reports
"RTN","MAGGTRPT",106,0)
 I $P(^MAG(2005.03,MAGTMPRT,0),"^",4)=63 D @$S(MAGTMPRT=63:"AU",MAGTMPRT=63.2:"AU",1:"LAB") Q
"RTN","MAGGTRPT",107,0)
 ;
"RTN","MAGGTRPT",108,0)
 S @MAGRPTY@(0)="0^Full report not available through this windows option."
"RTN","MAGGTRPT",109,0)
 Q
"RTN","MAGGTRPT",110,0)
 ;
"RTN","MAGGTRPT",111,0)
CHECK(MAGO,MAGDFN,MAGDESC,MAGGRPO,MAGISGRP) ;
"RTN","MAGGTRPT",112,0)
 ; 9/28/99  Change Report long description, so this is changed to 
"RTN","MAGGTRPT",113,0)
 ; return the desc of MAGO, and define MAGGRPO if this is child of grp
"RTN","MAGGTRPT",114,0)
 N MAGTMP
"RTN","MAGGTRPT",115,0)
 I '$D(^MAG(2005,MAGO)) S @MAGRPTY@(0)="0^Invalid Image pointer"_MAGO Q
"RTN","MAGGTRPT",116,0)
 S MAGDESC=$P($G(^MAG(2005,MAGO,2)),U,4)
"RTN","MAGGTRPT",117,0)
 I $O(^MAG(2005,MAGO,1,0)) S MAGISGRP=1
"RTN","MAGGTRPT",118,0)
 S MAGGRPO=+$P(^MAG(2005,MAGO,0),U,10)
"RTN","MAGGTRPT",119,0)
 ;
"RTN","MAGGTRPT",120,0)
 S MAGTMP=$S(MAGGRPO:MAGGRPO,1:MAGO)
"RTN","MAGGTRPT",121,0)
 Q:'$D(^MAG(2005,MAGTMP,2))
"RTN","MAGGTRPT",122,0)
 ;Y2J compliance
"RTN","MAGGTRPT",123,0)
 ; Procedure Exam Date/Time
"RTN","MAGGTRPT",124,0)
 S Y=$P(^MAG(2005,MAGTMP,2),U,5),X=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_($E(Y,1,3)+1700)
"RTN","MAGGTRPT",125,0)
 ;             procedure                     short description
"RTN","MAGGTRPT",126,0)
 S Y=X_"  "_$P(^MAG(2005,MAGTMP,0),U,8)_"  "_$P($G(^MAG(2005,MAGTMP,2)),U,4)
"RTN","MAGGTRPT",127,0)
 I MAGDFN S MAGDESC=MAGDESC_"^"_$P($G(^DPT(MAGDFN,0)),U)
"RTN","MAGGTRPT",128,0)
 Q
"RTN","MAGGTRPT",129,0)
LAB ; Pathology Reports
"RTN","MAGGTRPT",130,0)
 N LINE,MAGIOPEN,MAGSTART,MAGEND,MAGSUB,TYPE,MAGXX,MAGLR
"RTN","MAGGTRPT",131,0)
 S TYPE=$P(^MAG(2005.03,MAGTMPRT,0),"^",2)
"RTN","MAGGTRPT",132,0)
 S MAGSTART=$P(^MAG(2005,MAGO,2),"^",10),MAGLR=$P(^MAG(2005,MAGO,2),"^",7)
"RTN","MAGGTRPT",133,0)
 I MAGSTART,MAGLR,$D(^LR(MAGLR,TYPE,MAGSTART,0)) D
"RTN","MAGGTRPT",134,0)
 . S (MAGSTART,MAGEND)=9999999-MAGSTART
"RTN","MAGGTRPT",135,0)
 . Q
"RTN","MAGGTRPT",136,0)
 ;if no pointer back to lab file use the procedure date/time.
"RTN","MAGGTRPT",137,0)
 I 'MAGSTART D 
"RTN","MAGGTRPT",138,0)
 . S MAGSTART=$P(^MAG(2005,MAGO,2),"^",5)
"RTN","MAGGTRPT",139,0)
 . S (MAGSTART,MAGEND)=$P(MAGSTART,".")
"RTN","MAGGTRPT",140,0)
 . Q
"RTN","MAGGTRPT",141,0)
 I '$L(MAGSTART) D  Q
"RTN","MAGGTRPT",142,0)
 . S @MAGRPTY@(1)="No Procedure Date/Time entered in file 2005 for this Image"
"RTN","MAGGTRPT",143,0)
 S TYPE=$S(TYPE="SP":"SURGICAL PATHOLOGY",TYPE="CY":"CYTOPATHOLOGY",1:TYPE)
"RTN","MAGGTRPT",144,0)
 S MAGSUB=1,MAGSUB(TYPE)="",MAGXX=""
"RTN","MAGGTRPT",145,0)
 S MAGIOPEN=1
"RTN","MAGGTRPT",146,0)
 D EN^LR7OSUM(MAGXX,MAGDFN,MAGSTART,MAGEND,10,80,.MAGSUB)
"RTN","MAGGTRPT",147,0)
 I '$D(^TMP("LRC",$J)) S @MAGRPTY@(1)="No report(s) on file." Q
"RTN","MAGGTRPT",148,0)
 E  S LINE=0 F  S LINE=$O(^TMP("LRC",$J,LINE)) Q:LINE<1  W !,^TMP("LRC",$J,LINE,0)
"RTN","MAGGTRPT",149,0)
 D ENTRY^MAGLOG("LABRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",150,0)
 K ^TMP("LRC",$J),^TMP("LRT",$J),^TMP("LRH",$J)
"RTN","MAGGTRPT",151,0)
 Q
"RTN","MAGGTRPT",152,0)
AU ;Autopsy Report
"RTN","MAGGTRPT",153,0)
 N LRDFN,MAGSUB,MAGXX,LINE
"RTN","MAGGTRPT",154,0)
 S MAGSUB("AUTOPSY")=""
"RTN","MAGGTRPT",155,0)
 I '$D(MAGO)!'$D(MAGDFN) W !,"Missing imaging pointers." Q
"RTN","MAGGTRPT",156,0)
 S LRDFN=$P(^MAG(2005,MAGO,2),"^",7),LRDFN=+LRDFN
"RTN","MAGGTRPT",157,0)
 I 'LRDFN!'$D(^LR(LRDFN,0)) W !,"Information missing, please use DHCP Lab print options." Q
"RTN","MAGGTRPT",158,0)
 I '$D(^LR(LRDFN,"AU")) W !,"Missing autopsy information." K LRDFN Q
"RTN","MAGGTRPT",159,0)
 D EN^LR7OSUM(.MAGXX,MAGDFN,,,,80,.MAGSUB)
"RTN","MAGGTRPT",160,0)
 I '$D(^TMP("LRC",$J)) S @MAGRPTY@(1)="No autopsy report on file." Q
"RTN","MAGGTRPT",161,0)
 S LINE=0 F  S LINE=$O(^TMP("LRC",$J,LINE)) Q:LINE<1  W !,^TMP("LRC",$J,LINE,0)
"RTN","MAGGTRPT",162,0)
 D ENTRY^MAGLOG("LABRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",163,0)
 K ^TMP("LRC",$J)
"RTN","MAGGTRPT",164,0)
 Q
"RTN","MAGGTRPT",165,0)
ERRA ;
"RTN","MAGGTRPT",166,0)
 S @MAGRPTY@(0)="0^ERROR "_$$EC^%ZOSV
"RTN","MAGGTRPT",167,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTRPT",168,0)
 Q
"RTN","MAGGTSR")
0^61^B9517947
"RTN","MAGGTSR",1,0)
MAGGTSR ;WOIFO/GEK - SURGERY CASE LIST ; [ 06/20/2001 08:57 ]
"RTN","MAGGTSR",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTSR",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSR",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTSR",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTSR",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTSR",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTSR",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTSR",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTSR",10,0)
 ;; |                                                               |
"RTN","MAGGTSR",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTSR",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTSR",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTSR",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTSR",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTSR",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSR",17,0)
 ;;
"RTN","MAGGTSR",18,0)
 Q
"RTN","MAGGTSR",19,0)
GET(MAGRY,MAGDFN) ;RPC [MAGGSUR GET]
"RTN","MAGGTSR",20,0)
 ; Call to get list of Patient Surgery procedures
"RTN","MAGGTSR",21,0)
 ; MAGDFN is Patient DFN
"RTN","MAGGTSR",22,0)
 ;
"RTN","MAGGTSR",23,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTSR",24,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTSR",25,0)
 N Y,DFN,MAGNAME
"RTN","MAGGTSR",26,0)
 S MAGNAME=$P($G(^DPT(MAGDFN,0)),U)
"RTN","MAGGTSR",27,0)
 I MAGNAME="" S MAGGRY(0)="0^INVALID Patient ID" Q
"RTN","MAGGTSR",28,0)
 D GET^SROGTSR(.MAGRY,MAGDFN)
"RTN","MAGGTSR",29,0)
 I 'MAGRY(0) S MAGRY(0)=MAGRY(0)_" for "_MAGNAME Q
"RTN","MAGGTSR",30,0)
 ; Here we are changing the data returned in the array, from SROGTSR
"RTN","MAGGTSR",31,0)
 ; , it will now also return the count of images associated with the 
"RTN","MAGGTSR",32,0)
 ; surgery report.  This is in advance of the change for Display, to 
"RTN","MAGGTSR",33,0)
 ; list the patient's surgery reports, like we list radiology reports.
"RTN","MAGGTSR",34,0)
 ;
"RTN","MAGGTSR",35,0)
 I (+$G(MAGJOB("VERSION"))<2.5) Q
"RTN","MAGGTSR",36,0)
 S MAGRY(1)=$P(MAGRY(1),U,1,3)_"^Images"
"RTN","MAGGTSR",37,0)
 S I=1 F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTSR",38,0)
 . S MAGRY(I)=$P(MAGRY(I),U,1,3)_U_$P(MAGRY(I),U,6)_U_$C(124)_$P(MAGRY(I),U,4,5)_U
"RTN","MAGGTSR",39,0)
 Q
"RTN","MAGGTSR",40,0)
IMAGE(MAGRY,DATA) ;
"RTN","MAGGTSR",41,0)
 ;  Called with the IEN of the Surgery package ^SRF(170,x
"RTN","MAGGTSR",42,0)
 ;  We'll return a list of images.
"RTN","MAGGTSR",43,0)
 N SRFIEN,MAGIEN
"RTN","MAGGTSR",44,0)
 S SRFIEN=+DATA
"RTN","MAGGTSR",45,0)
 I '$D(^SRF(SRFIEN)) S MAGRY(0)="0^INVALID Surgery File entry" Q
"RTN","MAGGTSR",46,0)
 I '$O(^SRF(SRFIEN,2005,0)) S MAGRY(0)="0^No Images for this Operation." Q
"RTN","MAGGTSR",47,0)
 D GETLIST
"RTN","MAGGTSR",48,0)
 Q
"RTN","MAGGTSR",49,0)
GETLIST ; called from other points in this routine, when SRFIEN is defined
"RTN","MAGGTSR",50,0)
 ; and returns a list in MAGRY(1..n)
"RTN","MAGGTSR",51,0)
 ; We'll make a tmp list of just the image IEN's
"RTN","MAGGTSR",52,0)
 ;  splitting groups into individual image entries.
"RTN","MAGGTSR",53,0)
 K ^TMP("MAGGX",$J)
"RTN","MAGGTSR",54,0)
 S I=0,CT=1 F  S I=$O(^SRF(SRFIEN,2005,I)) Q:'I  D
"RTN","MAGGTSR",55,0)
 . S MAGIEN=$P(^SRF(SRFIEN,2005,I,0),U,1)
"RTN","MAGGTSR",56,0)
 . Q:'$D(^MAG(2005,MAGIEN,0))
"RTN","MAGGTSR",57,0)
 . I '$O(^MAG(2005,MAGIEN,1,0)) S ^TMP("MAGGX",$J,MAGIEN)=""
"RTN","MAGGTSR",58,0)
 . E  S Z=0 F  S Z=$O(^MAG(2005,MAGIEN,1,Z)) Q:Z=""  S ^TMP("MAGGX",$J,$P(^MAG(2005,MAGIEN,1,Z,0),U,1))=""
"RTN","MAGGTSR",59,0)
 I '$D(^TMP("MAGGX",$J)) S MAGRY(0)="0^Surgery File Entry "_SRFIEN_": has INVALID Image Pointers" Q
"RTN","MAGGTSR",60,0)
 S Z="",CT=0
"RTN","MAGGTSR",61,0)
 S MAGQUIET=1
"RTN","MAGGTSR",62,0)
 F  S Z=$O(^TMP("MAGGX",$J,Z)) Q:Z=""  D
"RTN","MAGGTSR",63,0)
 . S CT=CT+1,MAGXX=Z D INFO^MAGGTII
"RTN","MAGGTSR",64,0)
 . S MAGRY(CT)="B2^"_MAGFILE
"RTN","MAGGTSR",65,0)
 K MAGQUIET
"RTN","MAGGTSR",66,0)
 S MAGRY(0)=CT_"^Images for the selected Surgery File entry"
"RTN","MAGGTSR",67,0)
 K ^TMP("MAGGX")
"RTN","MAGGTSR",68,0)
 Q
"RTN","MAGGTU1")
0^50^B6555035
"RTN","MAGGTU1",1,0)
MAGGTU1 ;WOIFO/GEK - Silent Utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU1",2,0)
 ;;3.0;IMAGING;**3,8**;Sep 15, 2004
"RTN","MAGGTU1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU1",10,0)
 ;; |                                                               |
"RTN","MAGGTU1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU1",17,0)
 ;;
"RTN","MAGGTU1",18,0)
 Q
"RTN","MAGGTU1",19,0)
DRIVE(X) ; Get the current drive for writing an image
"RTN","MAGGTU1",20,0)
 ; Copied from MAGFILE and edited for silent running, made extrinsic.
"RTN","MAGGTU1",21,0)
 ;
"RTN","MAGGTU1",22,0)
 N Z,MAGREF,MAGREFNM,MAGDRIVE,MAGPLC ; DBI 9/20/02 - SEB
"RTN","MAGGTU1",23,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGGTU1",24,0)
 S MAGREF=$G(X)
"RTN","MAGGTU1",25,0)
 I $G(MAGWRITE)="PACS" S MAGREF=$$GET1^DIQ(2006.1,MAGPLC,1.03,"I") ; DBI 9/20/02 - SEB
"RTN","MAGGTU1",26,0)
 I 'MAGREF S MAGREF=$$GET1^DIQ(2006.1,MAGPLC,.03,"I") ; DBI 9/20/02 - SEB
"RTN","MAGGTU1",27,0)
 I MAGREF="" D  Q Z
"RTN","MAGGTU1",28,0)
 . S Z="0^NEED WRITE LOCATION in SITE Parameters file!!! Call IRM"
"RTN","MAGGTU1",29,0)
 ;
"RTN","MAGGTU1",30,0)
 I '$P(^MAG(2005.2,MAGREF,0),"^",6) D  Q Z
"RTN","MAGGTU1",31,0)
 . S Z="0^The Server that you are writing to is off-line.  Call IRM"
"RTN","MAGGTU1",32,0)
 ;
"RTN","MAGGTU1",33,0)
 S MAGREFNM=$P(^MAG(2005.2,MAGREF,0),"^",1),MAGDRIVE=$P(^(0),"^",2)
"RTN","MAGGTU1",34,0)
 Q MAGREF_U_MAGDRIVE
"RTN","MAGGTU1",35,0)
 ;
"RTN","MAGGTU1",36,0)
DA2NAME(IEN,SUF) ; Return file name with extension 
"RTN","MAGGTU1",37,0)
 ;  SUF should always be defined, but default to .TIF if not.
"RTN","MAGGTU1",38,0)
 N PRE,FILE,CMPF,MAGPLC
"RTN","MAGGTU1",39,0)
 S MAGPLC=$$DA2PLC^MAGBAPIP(IEN,"F")
"RTN","MAGGTU1",40,0)
 S SUF=$S($L($G(SUF)):SUF,1:"TIF")
"RTN","MAGGTU1",41,0)
 S PRE=$$GET1^DIQ(2006.1,MAGPLC,.02,"E") ; gek DBI
"RTN","MAGGTU1",42,0)
 ;S PRE=$G(^MAG(2006.1,"ALTR"))
"RTN","MAGGTU1",43,0)
 I '$L(PRE) Q "0^Need Site Specific LETTERS in Site Parameters File"
"RTN","MAGGTU1",44,0)
 ;
"RTN","MAGGTU1",45,0)
 S FILE=PRE_IEN
"RTN","MAGGTU1",46,0)
 ; Design of Patch 3 was changed to only return 14 digit file names.
"RTN","MAGGTU1",47,0)
 ; 08/02/2002 Patch 3,8 force 14.3 file name convention
"RTN","MAGGTU1",48,0)
 I ($L(FILE)<14) S FILE=PRE_$E(10000000000000+IEN,$L(PRE)+1,14)
"RTN","MAGGTU1",49,0)
 Q "1^"_FILE_"."_SUF
"RTN","MAGGTU3")
0^22^B56717908
"RTN","MAGGTU3",1,0)
MAGGTU3 ;WOIFO/GEK - Silent calls for Imaging ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU3",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGTU3",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU3",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU3",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU3",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU3",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU3",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU3",10,0)
 ;; |                                                               |
"RTN","MAGGTU3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",17,0)
 ;;
"RTN","MAGGTU3",18,0)
 Q
"RTN","MAGGTU3",19,0)
IMAGEINF(MAGRY,IEN) ;RPC [MAGG IMAGE INFO] Call to return information for 1 image;
"RTN","MAGGTU3",20,0)
 N MAGFILE,Y,Z
"RTN","MAGGTU3",21,0)
 I '$D(^MAG(2005,IEN)) D  Q
"RTN","MAGGTU3",22,0)
 . I $D(^MAG(2005.1,IEN)) S MAGRY(0)="0^Image : """_$P($G(^MAG(2005.1,IEN,2)),U,4)_""" has been deleted." Q
"RTN","MAGGTU3",23,0)
 . S MAGRY(0)="0^INVALID Image number "_IEN
"RTN","MAGGTU3",24,0)
 S MAGXX=IEN D INFO^MAGGTII ; this'll give us the  MAGFILE variable
"RTN","MAGGTU3",25,0)
 S Z=$P(^MAG(2005,IEN,0),U,7)
"RTN","MAGGTU3",26,0)
 I '$D(^DPT(Z)) S Z="1^Invalid patient pointer"
"RTN","MAGGTU3",27,0)
 E  S Z=Z_U_$P(^DPT(Z,0),U)
"RTN","MAGGTU3",28,0)
 S MAGRY(0)="1^"_MAGFILE
"RTN","MAGGTU3",29,0)
 S MAGRY(1)=Z ; dfn^name
"RTN","MAGGTU3",30,0)
 Q
"RTN","MAGGTU3",31,0)
USERINF2(MAGRY,MAGWRKID) ;RPC [MAGGUSER2] Return user info.
"RTN","MAGGTU3",32,0)
 ; MAGRY(1) = DUZ ^ FULL NAME  ^ INITIALS
"RTN","MAGGTU3",33,0)
 ; MAGRY(2) = Network UserName ^ PassWord.
"RTN","MAGGTU3",34,0)
 ; MAGRY(3) = MUSE Site number. ( default = 1)
"RTN","MAGGTU3",35,0)
 ; MAGRY(4) = SITE PARAM: IEN ^ SITE PARAM: SITE CODE ^ DUZ(2) ^ SITE PARAM: INSTITUTION (FULL TEXT)(.01) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",36,0)
 ; MAGRY(5) = +<CP Version>|0 ^ Version of CP installed on Server
"RTN","MAGGTU3",37,0)
 ; MAGRY(6) = Warning message if we can't resolve which Site Parameter entry to use.
"RTN","MAGGTU3",38,0)
 ; MAGRY(7) = Warning message  <reserverd for future>
"RTN","MAGGTU3",39,0)
 ;
"RTN","MAGGTU3",40,0)
 N J,K,Y,MAGPLC,MAGWARN,MAGWARN1 ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",41,0)
 S MAGPLC=0
"RTN","MAGGTU3",42,0)
 I $D(DUZ(2)) S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",43,0)
 ;
"RTN","MAGGTU3",44,0)
 ; SET THE PARTITION VARIABLE MAGSYS   i.e.'IGK_Garrett's Desk'
"RTN","MAGGTU3",45,0)
 S MAGSYS=$G(MAGWRKID,"")
"RTN","MAGGTU3",46,0)
 I +$G(DUZ)=0 S MAGRY(0)="0^DUZ Undefined, Null or Zero" Q
"RTN","MAGGTU3",47,0)
 I 'MAGPLC D
"RTN","MAGGTU3",48,0)
 . S MAGWARN="Can't resolve Site Param, DUZ(2): "_$S($D(DUZ(2)):DUZ(2),1:"NULL")_" DUZ: "_DUZ
"RTN","MAGGTU3",49,0)
 . S MAGPLC=$$DUZ2PLC^MAGBAPIP(.MAGWARN1) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",50,0)
 . Q
"RTN","MAGGTU3",51,0)
 S MAGRY(0)="1^"
"RTN","MAGGTU3",52,0)
 ;          DUZ     FULL NAME                INITIALS
"RTN","MAGGTU3",53,0)
 S MAGRY(1)=DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)
"RTN","MAGGTU3",54,0)
 ; NOW NET STUFF
"RTN","MAGGTU3",55,0)
 I 'MAGPLC Q 
"RTN","MAGGTU3",56,0)
 ; Get info from IMAGING SITE PARAMETERS File
"RTN","MAGGTU3",57,0)
 ; get the Network UserName and PassWord.
"RTN","MAGGTU3",58,0)
 S MAGRY(2)=$P($G(^MAG(2006.1,MAGPLC,"NET")),U,1,2)
"RTN","MAGGTU3",59,0)
 ; get the default MUSE Site number.
"RTN","MAGGTU3",60,0)
 S MAGRY(3)=+$P($G(^MAG(2006.1,MAGPLC,"USERPREF")),U,2)
"RTN","MAGGTU3",61,0)
 ; default to 1 if nothing is entered in Site Parameters File
"RTN","MAGGTU3",62,0)
 I MAGRY(3)=0 S MAGRY(3)=1
"RTN","MAGGTU3",63,0)
 ; This SITEIEN^SITECODE^USER INSTITUTION IEN^INSTITUTION NAME
"RTN","MAGGTU3",64,0)
 ;  is  used by Display to determine location of Workstation
"RTN","MAGGTU3",65,0)
 ;  and used by Capture to determine the Write Location.
"RTN","MAGGTU3",66,0)
 S MAGRY(4)=MAGPLC_U_$$GET1^DIQ(2006.1,MAGPLC,.09)_U_$G(DUZ(2))_U_$$GET1^DIQ(2006.1,MAGPLC,.01,"E")
"RTN","MAGGTU3",67,0)
 ; is CP installed at this site, the Front End will hide options
"RTN","MAGGTU3",68,0)
 ;  related to CP if not installed.
"RTN","MAGGTU3",69,0)
 S X=$$VERSION^XPDUTL("CLINICAL PROCEDURES")
"RTN","MAGGTU3",70,0)
 S MAGRY(5)=+X_U_X
"RTN","MAGGTU3",71,0)
 S MAGRY(6)=$G(MAGWARN)
"RTN","MAGGTU3",72,0)
 S MAGRY(7)=$G(MAGWARN1)
"RTN","MAGGTU3",73,0)
 Q
"RTN","MAGGTU3",74,0)
 ;
"RTN","MAGGTU3",75,0)
CATEGORY(MAGRY) ; RPC [MAGGDESCCAT] Call to return Mag Descriptive Categories in array
"RTN","MAGGTU3",76,0)
 ; for listing in a list box.
"RTN","MAGGTU3",77,0)
 N I,K,CT,Y
"RTN","MAGGTU3",78,0)
 S I=0,CT=0
"RTN","MAGGTU3",79,0)
 I '$D(^MAG(2005.81)) D  Q
"RTN","MAGGTU3",80,0)
 . S MAGRY(0)="0^ERROR Mag Descriptive Category File doesn't exist"
"RTN","MAGGTU3",81,0)
 F  S I=$O(^MAG(2005.81,"B",I)) Q:I=""  D
"RTN","MAGGTU3",82,0)
 . ;S K=$O(^MAG(2005.81,"B",I,"")),CT=CT+1,MAGRY(CT)=I_U_K
"RTN","MAGGTU3",83,0)
 . ;Next line adds ADMIN, CLIN 3rd piece of the data returned
"RTN","MAGGTU3",84,0)
 . S K=$O(^MAG(2005.81,"B",I,"")),CT=CT+1
"RTN","MAGGTU3",85,0)
 . S MAGRY(CT)=I_U_K_U_$P(^MAG(2005.81,K,0),U,2)
"RTN","MAGGTU3",86,0)
 S MAGRY(0)=CT_"^Categories on file"
"RTN","MAGGTU3",87,0)
 Q
"RTN","MAGGTU3",88,0)
USERKEYS(MAGK) ; RPC [MAGGUSERKEYS]
"RTN","MAGGTU3",89,0)
 ; Call to return an array of IMAGING Security Keys
"RTN","MAGGTU3",90,0)
 ; to use on the workstation to limit capture ability
"RTN","MAGGTU3",91,0)
 ; and to limit functionality on Display application.
"RTN","MAGGTU3",92,0)
 ;
"RTN","MAGGTU3",93,0)
 N Y
"RTN","MAGGTU3",94,0)
 N MAGKS ; list of keys to send to XUS KEY CHECK
"RTN","MAGGTU3",95,0)
 N MAGKG ; list returned from XUS KEY CHECK
"RTN","MAGGTU3",96,0)
 N I,J,MAGMED,MAGKEY,MAGPLC
"RTN","MAGGTU3",97,0)
 K MAGK
"RTN","MAGGTU3",98,0)
 S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",99,0)
 S MAGKEY=+$P($G(^MAG(2006.1,MAGPLC,"KEYS")),U)
"RTN","MAGGTU3",100,0)
 I 'MAGKEY S MAGK(0)="CAPTURE KEYS OFF"
"RTN","MAGGTU3",101,0)
 E  S MAGK(0)="CAPTURE KEYS ON"
"RTN","MAGGTU3",102,0)
 N X S X="MAG",I=0
"RTN","MAGGTU3",103,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,3)'="MAG"  D
"RTN","MAGGTU3",104,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGGTU3",105,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGGTU3",106,0)
 S I=0,J=0,MAGMED=0
"RTN","MAGGTU3",107,0)
 F  S I=$O(MAGKG(I)) Q:I=""  D
"RTN","MAGGTU3",108,0)
 . Q:MAGKG(I)=0
"RTN","MAGGTU3",109,0)
 . S J=J+1,MAGK(J)=MAGKS(I)
"RTN","MAGGTU3",110,0)
 . I MAGKS(I)["MAGCAP MED" S MAGMED=1
"RTN","MAGGTU3",111,0)
 I MAGMED S J=J+1,MAGK(J)="MAGCAP MED"
"RTN","MAGGTU3",112,0)
 Q
"RTN","MAGGTU3",113,0)
MEDSTR(XSTR) ; Return a string of TYPE OF PROCEDURE that
"RTN","MAGGTU3",114,0)
 ; this user has the keys to capture images to.
"RTN","MAGGTU3",115,0)
 N MAGK,X,Y,Z
"RTN","MAGGTU3",116,0)
 S XSTR=","
"RTN","MAGGTU3",117,0)
 D USERKEYS(.MAGK)
"RTN","MAGGTU3",118,0)
 I $D(MAGK("MCKEYCARD")) S XSTR=XSTR_"C,"
"RTN","MAGGTU3",119,0)
 I $D(MAGK("MCKEYGI")) S XSTR=XSTR_"G,"
"RTN","MAGGTU3",120,0)
 I $D(MAGK("MCKEYHEM")) S XSTR=XSTR_"H,"
"RTN","MAGGTU3",121,0)
 I $D(MAGK("MCKEYPULM")) S XSTR=XSTR_"P,"
"RTN","MAGGTU3",122,0)
 I $D(MAGK("MCKEYPFT")) S XSTR=XSTR_"PF,"
"RTN","MAGGTU3",123,0)
 I $D(MAGK("MAGCAP MED GEN")) S XSTR=XSTR_"Z,R,GEN,N,"
"RTN","MAGGTU3",124,0)
 Q
"RTN","MAGGTU3",125,0)
CLEANTMP ; Clean the ^TMP Global, delete our testing global nodeS
"RTN","MAGGTU3",126,0)
 N I S I="MAFZ"
"RTN","MAGGTU3",127,0)
 F  S I=$O(^TMP(I)) Q:$E(I,1,3)'="MAG"  W !,"Deleted ^TMP(",I,")" K ^TMP(I)
"RTN","MAGGTU3",128,0)
 Q
"RTN","MAGGTU3",129,0)
MAIL(MAGRY,MAGFILE,MAGIEN) ;RPC [MAGG OFFLINE IMAGE ACCESSED]
"RTN","MAGGTU3",130,0)
 ;   called when a user tries to access an image that in offline as
"RTN","MAGGTU3",131,0)
 ;   determined by Stuarts file
"RTN","MAGGTU3",132,0)
 ;       ^MAGQUEUE(2006.033,0) = OFFLINE IMAGES
"RTN","MAGGTU3",133,0)
 ;   User must edit the MAGQUEUE file by hand to say if images are
"RTN","MAGGTU3",134,0)
 ;   OFFLINE.
"RTN","MAGGTU3",135,0)
 ;
"RTN","MAGGTU3",136,0)
 N FILEREF,PLATTER
"RTN","MAGGTU3",137,0)
 S MAGRY="0^Error : logging access to Off-Line Image"
"RTN","MAGGTU3",138,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU3",139,0)
 S FILEREF=$$UP^XLFSTR($P(MAGFILE,"\",$L(MAGFILE,"\")))
"RTN","MAGGTU3",140,0)
 S PLATTER=$O(^MAGQUEUE(2006.033,"B",FILEREF,""))
"RTN","MAGGTU3",141,0)
 S PLATTER=$P(^MAGQUEUE(2006.033,PLATTER,0),U,2)
"RTN","MAGGTU3",142,0)
 I MAGFILE[".ABS" Q
"RTN","MAGGTU3",143,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGTU3",144,0)
 S XMDUZ=$S($D(DUZ):DUZ,1:.5)
"RTN","MAGGTU3",145,0)
 S XMSUB="Offline Image Request"
"RTN","MAGGTU3",146,0)
 S XMTEXT="A("
"RTN","MAGGTU3",147,0)
 S A(1)="Patient   : "_$P(^DPT($P($G(^MAG(2005,+MAGIEN,0)),U,7),0),U,1)
"RTN","MAGGTU3",148,0)
 S A(2)="FileName  : "_MAGFILE_"  "_MAGIEN
"RTN","MAGGTU3",149,0)
 S A(3)="Desc      : "_$P($G(^MAG(2005,MAGIEN,2)),U,4)
"RTN","MAGGTU3",150,0)
 S A(4)="Procedure : "_$P($G(^MAG(2005,MAGIEN,0)),U,8)
"RTN","MAGGTU3",151,0)
 S A(5)="Platter   : "_PLATTER
"RTN","MAGGTU3",152,0)
 S A(6)="User      : "_$$GET1^DIQ(200,DUZ_",",.01)_"("_$G(DUZ)_")"
"RTN","MAGGTU3",153,0)
 S XMY("G.OFFLINE IMAGE TRACKERS")="" D ^XMD
"RTN","MAGGTU3",154,0)
 S MAGRY="1^Message sent :  Offline Image Accessed"
"RTN","MAGGTU3",155,0)
 Q
"RTN","MAGGTU3",156,0)
LOGERROR(MAGRY,TEXT) ;RPC [MAGG LOG ERROR TEXT]
"RTN","MAGGTU3",157,0)
 ; Call to stuff error information from Delphi app into the Session file.
"RTN","MAGGTU3",158,0)
 D LOGERR^MAGGTERR("---- New Error ----")
"RTN","MAGGTU3",159,0)
 S I="" F  S I=$O(TEXT(I)) Q:I=""  D LOGERR^MAGGTERR(TEXT(I))
"RTN","MAGGTU3",160,0)
 S MAGRY="1^Error text saved to Session file"
"RTN","MAGGTU3",161,0)
 Q
"RTN","MAGGTU3",162,0)
RSLVABS(MAGIEN,FILENAME) ;Resolve Abstract into the Default Bitmap 
"RTN","MAGGTU3",163,0)
 ; Return the default bitmap, If the image file extension resolves into a default bitmap
"RTN","MAGGTU3",164,0)
 ; MAGIEN        : Image internal entry number
"RTN","MAGGTU3",165,0)
 ; FILENAME      : ""  or Relative Path and Default Bitmap. ie ('.\BMP\magavi.bmp')
"RTN","MAGGTU3",166,0)
 N FTIEN,EXT ; 
"RTN","MAGGTU3",167,0)
 S FILENAME=""
"RTN","MAGGTU3",168,0)
 I '$D(^MAG(2005.021)) Q  ; IMAGE FILE TYPES doesn't exist on this system.
"RTN","MAGGTU3",169,0)
 S EXT=$P($P(^MAG(2005,MAGIEN,0),"^",2),".",2) ; image file extension   JPG, TGA, etc.
"RTN","MAGGTU3",170,0)
 Q:EXT=""  ;
"RTN","MAGGTU3",171,0)
 S FTIEN=$O(^MAG(2005.021,"B",EXT,""))
"RTN","MAGGTU3",172,0)
 Q:'FTIEN  ; No extension in IMAGE FILE TYPES file.
"RTN","MAGGTU3",173,0)
 ; gek P8, get rid of dependency on "c:\program files"
"RTN","MAGGTU3",174,0)
 I '+$P(^MAG(2005.021,FTIEN,0),"^",5) S FILENAME=".\BMP\"_$P(^MAG(2005.021,FTIEN,0),"^",4)
"RTN","MAGGTU3",175,0)
 Q
"RTN","MAGGTU3",176,0)
GETINFO(MAGRY,IEN) ; RPC [MAG4 GET IMAGE INFO]
"RTN","MAGGTU3",177,0)
 ; Call (3.0p8) to get information on 1 image
"RTN","MAGGTU3",178,0)
 N Y,J,JI,I,CT,IENC,FLAGS,SNGRP,Z
"RTN","MAGGTU3",179,0)
 S I=0,CT=0
"RTN","MAGGTU3",180,0)
 S MAGRY(CT)="Image ID#:      "_IEN
"RTN","MAGGTU3",181,0)
 I $D(^MAG(2005.1,IEN)) D  Q
"RTN","MAGGTU3",182,0)
 . S CT=CT+1,MAGRY(CT)="    STATUS:  "_"HAS BEEN DELETED. !!"
"RTN","MAGGTU3",183,0)
 . S CT=CT+1,MAGRY(CT)="Deleted By: "_$$GET1^DIQ(2005.1,IEN,30,"E")
"RTN","MAGGTU3",184,0)
 . S CT=CT+1,MAGRY(CT)="    Reason: "_$$GET1^DIQ(2005.1,IEN,30.2,"E")
"RTN","MAGGTU3",185,0)
 . S CT=CT+1,MAGRY(CT)="      Date: "_$$GET1^DIQ(2005.1,IEN,30.1,"E")
"RTN","MAGGTU3",186,0)
 . Q
"RTN","MAGGTU3",187,0)
 S Z=$P($G(^MAG(2005,IEN,0)),"^",10) I Z D
"RTN","MAGGTU3",188,0)
 . S CT=CT+1,MAGRY(CT)=" is in Group#: "_Z_"  ("_+$P(^MAG(2005,Z,1,0),"^",4)_" images)"
"RTN","MAGGTU3",189,0)
 . Q
"RTN","MAGGTU3",190,0)
 S SNGRP="FLDS"
"RTN","MAGGTU3",191,0)
 I (+$O(^MAG(2005,IEN,1,0)))!($P(^MAG(2005,IEN,0),"^",6)=11)!($P(^MAG(2005,IEN,0),"^",6)=16) D
"RTN","MAGGTU3",192,0)
 . S CT=CT+1,MAGRY(CT)=$P(^MAG(2005,IEN,0),"^",8)_" Group of "_+$P($G(^MAG(2005,IEN,1,0)),U,4)
"RTN","MAGGTU3",193,0)
 . S SNGRP="FLDG"
"RTN","MAGGTU3",194,0)
 . Q
"RTN","MAGGTU3",195,0)
 N MAGOUT,MAGERR,MAGVAL
"RTN","MAGGTU3",196,0)
 S IENC=IEN_","
"RTN","MAGGTU3",197,0)
 S FLAGS="EN"
"RTN","MAGGTU3",198,0)
 S I=-1
"RTN","MAGGTU3",199,0)
 F  S I=I+1,Z=$T(@SNGRP+I) Q:$P(Z,";",3)="end"  D
"RTN","MAGGTU3",200,0)
 . S J=$P(Z,";",4),JI=J_";"
"RTN","MAGGTU3",201,0)
 . K MAGOUT
"RTN","MAGGTU3",202,0)
 . S CT=CT+1,MAGRY(CT)=$P(Z,";",3)
"RTN","MAGGTU3",203,0)
 . D GETS^DIQ(2005,IEN,JI,FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTU3",204,0)
 . ; Get Extension from FileRef
"RTN","MAGGTU3",205,0)
 . I J=1 S MAGVAL=$P($G(MAGOUT(2005,IENC,J,"E")),".",2)
"RTN","MAGGTU3",206,0)
 . E  S MAGVAL=$G(MAGOUT(2005,IENC,J,"E"))
"RTN","MAGGTU3",207,0)
 . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU3",208,0)
 Q
"RTN","MAGGTU3",209,0)
FLDS ;;Format:       ;3;;
"RTN","MAGGTU3",210,0)
 ;;Extension:    ;1;;
"RTN","MAGGTU3",211,0)
FLDG ;;Patient:      ;5;;
"RTN","MAGGTU3",212,0)
 ;;Desc:         ;10;;
"RTN","MAGGTU3",213,0)
 ;;Procedure:    ;6;;
"RTN","MAGGTU3",214,0)
 ;;     Date:    ;15;;
"RTN","MAGGTU3",215,0)
 ;;Class:        ;41;;
"RTN","MAGGTU3",216,0)
 ;;Package:      ;40;;
"RTN","MAGGTU3",217,0)
 ;;Type:         ;42;;
"RTN","MAGGTU3",218,0)
 ;;Proc/Event:   ;43;;
"RTN","MAGGTU3",219,0)
 ;;Spec/SubSpec: ;44;;
"RTN","MAGGTU3",220,0)
 ;;Origin:       ;45;;
"RTN","MAGGTU3",221,0)
 ;;Captured on:  ;7;;
"RTN","MAGGTU3",222,0)
 ;;         by:  ;8;;
"RTN","MAGGTU3",223,0)
 ;;end;;
"RTN","MAGGTU4")
0^44^B25850659
"RTN","MAGGTU4",1,0)
MAGGTU4 ;WOIFO/GEK - Testing callbacks for Delphi Doc Image Prototype ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU4",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTU4",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4",10,0)
 ;; |                                                               |
"RTN","MAGGTU4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",17,0)
 ;;
"RTN","MAGGTU4",18,0)
 Q
"RTN","MAGGTU4",19,0)
ABSJB(MAGRY,MAGIN) ;RPC [MAG ABSJB] SET ABSTRACT AND/OR JUKEBOX QUEUES
"RTN","MAGGTU4",20,0)
 N MAGIENAB,MAGIENJB,MAGERR
"RTN","MAGGTU4",21,0)
 S MAGERR=0
"RTN","MAGGTU4",22,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGTU4",23,0)
 S MAGRY="0^ERROR: Setting Queue for Abstract or JukeBox copy"
"RTN","MAGGTU4",24,0)
 S MAGIENAB=+$P(MAGIN,"^",1),MAGIENJB=$P(MAGIN,"^",2)
"RTN","MAGGTU4",25,0)
 L +(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031)):10 E  D QERR Q
"RTN","MAGGTU4",26,0)
 I +MAGIENAB>0 S X=$$ABSTRACT^MAGBAPI(MAGIENAB)
"RTN","MAGGTU4",27,0)
 I MAGIENJB'="" S X=$$JUKEBOX^MAGBAPI(MAGIENJB)
"RTN","MAGGTU4",28,0)
 L -(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031))
"RTN","MAGGTU4",29,0)
 S MAGRY="1^SUCCESSFUL"
"RTN","MAGGTU4",30,0)
 Q
"RTN","MAGGTU4",31,0)
ERR ;
"RTN","MAGGTU4",32,0)
 L -(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031))
"RTN","MAGGTU4",33,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTU4",34,0)
 S MAGRY="0^Error setting JukeBox/Abstract Queue.  Not Fatal.  'Save' will continue..."
"RTN","MAGGTU4",35,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGTU4",36,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTU4",37,0)
 Q
"RTN","MAGGTU4",38,0)
QERR ;
"RTN","MAGGTU4",39,0)
 N MAGTXT
"RTN","MAGGTU4",40,0)
 S MAGTXT="Failed to set JukeBox/Abstract Queue."
"RTN","MAGGTU4",41,0)
 ;ENTRY(MAGIMT,MAGDUZ,MAGO,MAGPACK,MAGDFN,MAGCT,MAGAD)
"RTN","MAGGTU4",42,0)
 D ENTRY^MAGLOG("QFAIL",$G(DUZ),MAGIENJB,"","","",MAGTXT)
"RTN","MAGGTU4",43,0)
 D ACTION^MAGGTAU(MAGTXT,1)
"RTN","MAGGTU4",44,0)
 S MAGRY="1^"_MAGTXT_"  Message was sent to IRM.  Not Fatal.  'Save' will continue..."
"RTN","MAGGTU4",45,0)
 N XMSUB,XMY,XMTEXT,XMK,XMDUZ
"RTN","MAGGTU4",46,0)
 S XMTEXT="^TMP($J,""MAGQ"","
"RTN","MAGGTU4",47,0)
 S XMSUB=MAGTXT
"RTN","MAGGTU4",48,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGGTU4",49,0)
 S ^TMP($J,"MAGQ",1)=MAGTXT
"RTN","MAGGTU4",50,0)
 S ^TMP($J,"MAGQ",2)=" for Image IEN: "_MAGIENJB
"RTN","MAGGTU4",51,0)
 S ^TMP($J,"MAGQ",3)="You need to run the Verifier for this Image IEN"
"RTN","MAGGTU4",52,0)
 S XMY("G.IMAGING DEVELOPMENT@DOMAIN.EXT")=""
"RTN","MAGGTU4",53,0)
 D ^XMD
"RTN","MAGGTU4",54,0)
 S XMDUZ=DUZ D KLQ^XMA1B
"RTN","MAGGTU4",55,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGGTU4",56,0)
 Q
"RTN","MAGGTU4",57,0)
CHKVER(MAGRY,CLVER) ;RPC [MAG4 VERSION CHECK]
"RTN","MAGGTU4",58,0)
 ; CLVER is Delphi App Ver.
"RTN","MAGGTU4",59,0)
 ; We can force it to exit, or let it continue.
"RTN","MAGGTU4",60,0)
 ; Ver 2.5P9 (2.5.24.1) is first Delphi Ver that makes this call.
"RTN","MAGGTU4",61,0)
 ; CLVER format = Major,Minor,Patch,T Version (3.0.8.x)  for Version 3.0 Patch 8
"RTN","MAGGTU4",62,0)
 ; Delphi App will display whole message i.e. $P(MAGRY(0),U,2) + MAGRY(1..n)
"RTN","MAGGTU4",63,0)
 ; Then if code  = 2 (MAGRY(0)="2^..."  The App will terminate.
"RTN","MAGGTU4",64,0)
 ;// NEXT LINE is what Version 3.0.7 and before, Returns in MAGRY(0) to the Delphi App
"RTN","MAGGTU4",65,0)
 ;// S MAGRY(0)="1^Version not Checked, continue"
"RTN","MAGGTU4",66,0)
 ;// Q
"RTN","MAGGTU4",67,0)
 S MAGRY(0)="1^Temporarily Allowing All Versions"
"RTN","MAGGTU4",68,0)
 Q
"RTN","MAGGTU4",69,0)
 ;
"RTN","MAGGTU4",70,0)
 ;   NOW FOR V 3.0.8.21 WE need to check version and Terminate the Application
"RTN","MAGGTU4",71,0)
 ;   If it is below V 3.0.8 (exception : Allow 3.0.7 and 3.0.2 ) 
"RTN","MAGGTU4",72,0)
 ;  THIS Needs to be determined from the KIDS version installed on the Server.
"RTN","MAGGTU4",73,0)
 ;  ELSE it'll need to be hardcoded into the Routine.  Not very nice.
"RTN","MAGGTU4",74,0)
 N SV,ST,CV,CT,ALLOWV
"RTN","MAGGTU4",75,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGGTU4",76,0)
 S CV=$P(CLVER,".",1,3),CT=$P(CLVER,".",4)
"RTN","MAGGTU4",77,0)
 I CV]SV D  Q
"RTN","MAGGTU4",78,0)
 . S MAGRY(0)="2^   Server is running Imaging V. "_SV
"RTN","MAGGTU4",79,0)
 . S MAGRY(5)="   Client is running Imaging V. "_CV
"RTN","MAGGTU4",80,0)
 . S MAGRY(7)="    "
"RTN","MAGGTU4",81,0)
 . S MAGRY(10)="  The Server needs to be Updated "
"RTN","MAGGTU4",82,0)
 . S MAGRY(12)="     for the Client to run correctly"
"RTN","MAGGTU4",83,0)
 . S MAGRY(20)="  Contact the Imaging System Manager."
"RTN","MAGGTU4",84,0)
 . S MAGRY(30)="   "
"RTN","MAGGTU4",85,0)
 . Q
"RTN","MAGGTU4",86,0)
 I (CV'=SV),'(ALLOWV[("|"_CV_"|")) D  Q
"RTN","MAGGTU4",87,0)
 . S MAGRY(0)="2^Server has Imaging V. "_SV_" installed."
"RTN","MAGGTU4",88,0)
 . S MAGRY(5)="Client is running Imaging V. "_CV
"RTN","MAGGTU4",89,0)
 . S MAGRY(7)="    "
"RTN","MAGGTU4",90,0)
 . S MAGRY(10)=" The Client application will not run correctly"
"RTN","MAGGTU4",91,0)
 . S MAGRY(20)=" Contact the Imaging System Manager"
"RTN","MAGGTU4",92,0)
 . S MAGRY(25)=" to update this workstation."
"RTN","MAGGTU4",93,0)
 . S MAGRY(30)="   "
"RTN","MAGGTU4",94,0)
 . S MAGRY(40)="      APPLICATION WILL ABORT !"
"RTN","MAGGTU4",95,0)
 . S MAGRY(50)="(clicking 'Cancel' will not stop the Abort.)"
"RTN","MAGGTU4",96,0)
 . Q 
"RTN","MAGGTU4",97,0)
 I SV]CV D  Q
"RTN","MAGGTU4",98,0)
 . S MAGRY(0)="0^   Server is running Imaging V. "_SV
"RTN","MAGGTU4",99,0)
 . S MAGRY(5)="   Client is running Imaging V. "_CV
"RTN","MAGGTU4",100,0)
 . S MAGRY(7)="    "
"RTN","MAGGTU4",101,0)
 . S MAGRY(10)="  The Client application should be updated "
"RTN","MAGGTU4",102,0)
 . S MAGRY(20)="  Contact the Imaging System Manager"
"RTN","MAGGTU4",103,0)
 . S MAGRY(25)="  to update this workstation."
"RTN","MAGGTU4",104,0)
 . S MAGRY(30)="   "
"RTN","MAGGTU4",105,0)
 . S MAGRY(40)="       APPLICATION Will Continue"
"RTN","MAGGTU4",106,0)
 . S MAGRY(50)="(clicking 'Cancel' will not stop the Client.)"
"RTN","MAGGTU4",107,0)
 . Q
"RTN","MAGGTU4",108,0)
 ; released Client will have the T version that the server expects.
"RTN","MAGGTU4",109,0)
 I CT,(CT'=ST) D  Q
"RTN","MAGGTU4",110,0)
 . S MAGRY(0)="0^                   Server is running Imaging V. "_SV_"."_ST
"RTN","MAGGTU4",111,0)
 . S MAGRY(5)="                   Client is running Imaging V. "_CLVER
"RTN","MAGGTU4",112,0)
 . S MAGRY(10)="     "
"RTN","MAGGTU4",113,0)
 . S MAGRY(20)="  Test Versions of Patch "_SV_" other than T"_ST_" may not work correctly."
"RTN","MAGGTU4",114,0)
 . S MAGRY(25)="     "
"RTN","MAGGTU4",115,0)
 . S MAGRY(30)="                       APPLICATION will Continue  "
"RTN","MAGGTU4",116,0)
 . Q
"RTN","MAGGTU4",117,0)
 S MAGRY(0)="1^Version Check OK. Server: "_SV_" Client: "_CV Q
"RTN","MAGGTU4",118,0)
 Q
"RTN","MAGGTU4",119,0)
GETVER(SVRVER,SVRTVER,ALLOWCL) ;
"RTN","MAGGTU4",120,0)
 ; This needs looked into: 
"RTN","MAGGTU4",121,0)
 ; can we compute the Server's current version ( and T Version? )
"RTN","MAGGTU4",122,0)
 ; rather than hardcoding it. ? 
"RTN","MAGGTU4",123,0)
 S SVRVER="3.0.8"
"RTN","MAGGTU4",124,0)
 S SVRTVER="49" ; This is the T version that the server expects 
"RTN","MAGGTU4",125,0)
 ; released Client will have the T version that the server expects
"RTN","MAGGTU4",126,0)
 S ALLOWCL="|3.0.24|3.0.33|3.0.42|3.0.41|"
"RTN","MAGGTU4",127,0)
 Q
"RTN","MAGGTU5")
0^77^B7750805
"RTN","MAGGTU5",1,0)
MAGGTU5 ;WOIFO/GEK - Silent Utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU5",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTU5",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU5",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU5",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU5",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU5",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU5",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU5",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU5",10,0)
 ;; |                                                               |
"RTN","MAGGTU5",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU5",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU5",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU5",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU5",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU5",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU5",17,0)
 ;;
"RTN","MAGGTU5",18,0)
 Q
"RTN","MAGGTU5",19,0)
CLOSE ;Close Execute for the WS.DAT Device
"RTN","MAGGTU5",20,0)
 Q:IO["nul"  ; OPENM calls this 'close execute' twice, we get "" array.
"RTN","MAGGTU5",21,0)
 N MAGDT
"RTN","MAGGTU5",22,0)
 ; IF NOT CALLED FROM IMAGING ROUTINE, USE ^TMP GLOBAL
"RTN","MAGGTU5",23,0)
 I '$D(MAGRPTY) S MAGRPTY=$NA(^TMP($J,"WSDAT")) K @MAGRPTY
"RTN","MAGGTU5",24,0)
 S MAGDT=$$FMTE^XLFDT($$NOW^XLFDT,"1P")
"RTN","MAGGTU5",25,0)
 N I S I=3
"RTN","MAGGTU5",26,0)
 U IO W !!,"** END REPORT "_MAGDT_" **",!
"RTN","MAGGTU5",27,0)
 S X=$$REWIND^%ZIS(IO,IOT,IOPAR) I 'X S @MAGRPTY@(0)="0^Failed: Rewinding to beginning of Host File. Call IRM" Q
"RTN","MAGGTU5",28,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D EOF^MAGGTU5"
"RTN","MAGGTU5",29,0)
 E  S X="EOF^MAGGTU5",@^%ZOSF("TRAP")
"RTN","MAGGTU5",30,0)
 F  U IO R X:5 D  Q:X["** END REPORT "_MAGDT_" **"
"RTN","MAGGTU5",31,0)
 . I X[$C(8)_"_" D
"RTN","MAGGTU5",32,0)
 . . ;strip backspaces and separate underline if they exist saf 4/19/00
"RTN","MAGGTU5",33,0)
 . . S @MAGRPTY@(I)=$E(X,1,$FIND(X,$P(X,$C(8)))-1),I=I+1
"RTN","MAGGTU5",34,0)
 . . S @MAGRPTY@(I)=$E(X,$FIND(X,$P(X,"_")),$L(X)),I=I+1
"RTN","MAGGTU5",35,0)
 . E  S @MAGRPTY@(I)=$$TRIM(X),I=I+1
"RTN","MAGGTU5",36,0)
 S @MAGRPTY@(0)="1^Report Complete"
"RTN","MAGGTU5",37,0)
 Q
"RTN","MAGGTU5",38,0)
EOF ;
"RTN","MAGGTU5",39,0)
 S X=$$EC^%ZOSV
"RTN","MAGGTU5",40,0)
 I ((X["ENDOFFILE")!(X["EOF")) S @MAGRPTY(0)="1^Report Complete" Q
"RTN","MAGGTU5",41,0)
 D ^%ZTER
"RTN","MAGGTU5",42,0)
 S @MAGRPTY@(0)="0^ERROR: "_$$EC^%ZOSV
"RTN","MAGGTU5",43,0)
 Q
"RTN","MAGGTU5",44,0)
 ;
"RTN","MAGGTU5",45,0)
DTTM(MAGRY,X) ; RPC [MAGG DTTM] Call to return DHCP Date/Time
"RTN","MAGGTU5",46,0)
 ; Output is in   :   Jan 04, 1999@11:55   format
"RTN","MAGGTU5",47,0)
 N Y
"RTN","MAGGTU5",48,0)
 S %DT="TS" D ^%DT
"RTN","MAGGTU5",49,0)
 I Y=-1 S MAGRY="0^Incorrect date format: "_X Q
"RTN","MAGGTU5",50,0)
 S MAGRY="1^"_$$FMTE^XLFDT(Y,"8")_U_Y
"RTN","MAGGTU5",51,0)
 Q
"RTN","MAGGTU5",52,0)
TRIM(X) ;trim backspace characters
"RTN","MAGGTU5",53,0)
 N I,Y
"RTN","MAGGTU5",54,0)
 S Y=X
"RTN","MAGGTU5",55,0)
 I X[$C(8) D
"RTN","MAGGTU5",56,0)
 . S Y=""
"RTN","MAGGTU5",57,0)
 . F I=1:1:$L(X) I $E(X,I)'=$C(8) S Y=Y_$E(X,I)
"RTN","MAGGTU5",58,0)
 Q Y
"RTN","MAGGTU6")
0^45^B32792243
"RTN","MAGGTU6",1,0)
MAGGTU6 ;WOIFO/GEK - Silent Utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU6",2,0)
 ;;3.0;IMAGING;**24,8**;Sep 15, 2004
"RTN","MAGGTU6",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU6",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU6",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU6",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU6",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU6",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU6",10,0)
 ;; |                                                               |
"RTN","MAGGTU6",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU6",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU6",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU6",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU6",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU6",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",17,0)
 ;;
"RTN","MAGGTU6",18,0)
 Q
"RTN","MAGGTU6",19,0)
 ;
"RTN","MAGGTU6",20,0)
LOGACT(MAGRY,ZY) ;RPC [MAGGACTION LOG]
"RTN","MAGGTU6",21,0)
 ; Call to LogAction from Delphi Window 
"RTN","MAGGTU6",22,0)
 ; From delphi this is called when user copies image from Display
"RTN","MAGGTU6",23,0)
 ; application and enters a reason ,and electronic signature.
"RTN","MAGGTU6",24,0)
 ;
"RTN","MAGGTU6",25,0)
 ; ZY is input variable it is '^' delimited string
"RTN","MAGGTU6",26,0)
 ; 'A|B|C|D|E' ^^ MAGIEN ^ 'Copy/Download' ^ DFN ^ '1';
"RTN","MAGGTU6",27,0)
 ;  DUZ is inserted as 2nd piece below.
"RTN","MAGGTU6",28,0)
 ; I.E. zy  = "C^^103660^Copy To Clipboard^1033^1"
"RTN","MAGGTU6",29,0)
 N Y
"RTN","MAGGTU6",30,0)
 S MAGRY="0^Logging access..."
"RTN","MAGGTU6",31,0)
 ;
"RTN","MAGGTU6",32,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU6",33,0)
 ;                 C       DUZ      MAGIEN     ACTION       DFN       1
"RTN","MAGGTU6",34,0)
 D ENTRY^MAGLOG($P(ZY,U),+$G(DUZ),$P(ZY,U,3),$P(ZY,U,4),$P(ZY,U,5),$P(ZY,U,6))
"RTN","MAGGTU6",35,0)
 S MAGRY="1^Action was Logged."
"RTN","MAGGTU6",36,0)
 Q
"RTN","MAGGTU6",37,0)
TIMEOUT(MAGRY,APP) ;RPC [MAGG GET TIMEOUT]
"RTN","MAGGTU6",38,0)
 ; Call  Returns the timeout for the APP from IMAGING SITE PARAMETERS File
"RTN","MAGGTU6",39,0)
 ;  APP is either 'DISPLAY'  'CAPTURE' or   'VISTARAD'
"RTN","MAGGTU6",40,0)
 N I,MAGTIMES,MAGPLC
"RTN","MAGGTU6",41,0)
 S MAGRY=""
"RTN","MAGGTU6",42,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2)) I 'MAGPLC Q  ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",43,0)
 S MAGTIMES=$G(^MAG(2006.1,MAGPLC,"KEYS"))
"RTN","MAGGTU6",44,0)
 I APP="DISPLAY" S MAGRY=$P(MAGTIMES,U,2)
"RTN","MAGGTU6",45,0)
 I APP="CAPTURE" S MAGRY=$P(MAGTIMES,U,3)
"RTN","MAGGTU6",46,0)
 I APP="VISTARAD" S MAGRY=$P(MAGTIMES,U,4)
"RTN","MAGGTU6",47,0)
 Q
"RTN","MAGGTU6",48,0)
EXIST(EKGPLACE) ;Does an ekg server exist in 2005.2
"RTN","MAGGTU6",49,0)
 I $$CONSOLID^MAGBAPI()=0 Q $O(^MAG(2005.2,"E","EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",50,0)
 Q $O(^MAG(2005.2,"F",EKGPLACE,"EKG",""))
"RTN","MAGGTU6",51,0)
 ;
"RTN","MAGGTU6",52,0)
ONLINE(MAGR) ;RPC [MAG EKG ONLINE] EKG network location status    
"RTN","MAGGTU6",53,0)
 ;returns the status of the first EKG network location type
"RTN","MAGGTU6",54,0)
 ;O if offline or a network location doesn't exist
"RTN","MAGGTU6",55,0)
 ;1 if online
"RTN","MAGGTU6",56,0)
 ;
"RTN","MAGGTU6",57,0)
 N EKG1,EKGPLACE
"RTN","MAGGTU6",58,0)
 S EKGPLACE=$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",59,0)
 I EKGPLACE=0 S EKGPLACE=$$DUZ2PLC^MAGBAPIP() ;Convert to extrinsic /gek 8/2003
"RTN","MAGGTU6",60,0)
 I $$EXIST(EKGPLACE) D
"RTN","MAGGTU6",61,0)
 . I $$CONSOLID^MAGBAPI() S EKG1=$O(^MAG(2005.2,"F",EKGPLACE,"EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",62,0)
 . E  S EKG1=$O(^MAG(2005.2,"E","EKG",""))
"RTN","MAGGTU6",63,0)
 . S MAGR=$P(^MAG(2005.2,EKG1,0),U,6)
"RTN","MAGGTU6",64,0)
 E  S MAGR=0
"RTN","MAGGTU6",65,0)
 Q
"RTN","MAGGTU6",66,0)
SHARE(MAGRY,TYPE) ;RPC [MAG GET NETLOC]
"RTN","MAGGTU6",67,0)
 ; Get list of image shares
"RTN","MAGGTU6",68,0)
 ;TYPE = MAG, EKG, WORM, or ALL
"RTN","MAGGTU6",69,0)
 N TMP,INDX,DATA0,DATA2,DATA6,CNT,SHARE,VALUE
"RTN","MAGGTU6",70,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTU6",71,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTU6",72,0)
 S CNT=1,INDX=0
"RTN","MAGGTU6",73,0)
 I TYPE="" S TYPE="ALL"
"RTN","MAGGTU6",74,0)
 S MAGRY(0)="1^SUCCESS"
"RTN","MAGGTU6",75,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:'INDX  D
"RTN","MAGGTU6",76,0)
 . S DATA0=$G(^MAG(2005.2,INDX,0))
"RTN","MAGGTU6",77,0)
 . S DATA2=$G(^MAG(2005.2,INDX,2))
"RTN","MAGGTU6",78,0)
 . S DATA3=$G(^MAG(2005.2,INDX,3))
"RTN","MAGGTU6",79,0)
 . S DATA6=$G(^MAG(2005.2,INDX,6))
"RTN","MAGGTU6",80,0)
 . I TYPE'="ALL" Q:$P(DATA0,"^",7)'[TYPE
"RTN","MAGGTU6",81,0)
 . Q:$P(DATA0,"^",6)=0     ;SHARE IS OFFLINE (don't return offline shares)
"RTN","MAGGTU6",82,0)
 . Q:$P(DATA0,"^",2)[":"   ;Don't return local drives (i.e. c:\)
"RTN","MAGGTU6",83,0)
 . Q:$P(DATA0,"^",2)["."
"RTN","MAGGTU6",84,0)
 . S SHARE=$P(DATA0,"^",2)
"RTN","MAGGTU6",85,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGGTU6",86,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGGTU6",87,0)
 . S $P(SHARE,"^",2)=$P($G(DATA0),"^",7) ;Physical reference (path)
"RTN","MAGGTU6",88,0)
 . S $P(SHARE,"^",3)=$P($G(DATA0),"^",6)  ;Operational Status 0=OFFLINE 1=ONLINE
"RTN","MAGGTU6",89,0)
 . S $P(SHARE,"^",4)=$P($G(DATA2),"^",1) ;Username
"RTN","MAGGTU6",90,0)
 . S $P(SHARE,"^",5)=$P($G(DATA2),"^",2) ;Password
"RTN","MAGGTU6",91,0)
 . S $P(SHARE,"^",6)=$P($G(DATA6),"^",1)  ;MUSE Site #
"RTN","MAGGTU6",92,0)
 . I $P($G(DATA6),"^",2)'="" S $P(SHARE,"^",7)=^MAG(2006.17,$P(DATA6,"^",2),0)  ;MUSE version #
"RTN","MAGGTU6",93,0)
 . S $P(SHARE,"^",8)=$P($G(DATA3),"^",5)  ;Network location SITE
"RTN","MAGGTU6",94,0)
 . Q:$D(TMP(SHARE))
"RTN","MAGGTU6",95,0)
 . S TMP(SHARE)=INDX
"RTN","MAGGTU6",96,0)
 S INDX=""
"RTN","MAGGTU6",97,0)
 F  S INDX=$O(TMP(INDX)) Q:INDX=""  D
"RTN","MAGGTU6",98,0)
 . S MAGRY(CNT)=TMP(INDX)_"^"_INDX,CNT=CNT+1
"RTN","MAGGTU6",99,0)
 K TMP
"RTN","MAGGTU6",100,0)
 Q
"RTN","MAGGTU6",101,0)
GETENV(MAGRY) ;RPC [MAG GET ENV]
"RTN","MAGGTU6",102,0)
 ; Get some environment variables (used by annotation control)
"RTN","MAGGTU6",103,0)
 D NOW^%DTC
"RTN","MAGGTU6",104,0)
 S MAGRY=DUZ(2)_"^"_%
"RTN","MAGGTU6",105,0)
 Q
"RTN","MAGGTU6",106,0)
ANNCB(STATARR) ;Status Callback (called by the import API)
"RTN","MAGGTU6",107,0)
 ;
"RTN","MAGGTU6",108,0)
 N I,CDUZ,QINDEX,A,COUNT
"RTN","MAGGTU6",109,0)
 I $P(STATARR(0),"^",1)=1 D
"RTN","MAGGTU6",110,0)
 . ;Import was sucessful
"RTN","MAGGTU6",111,0)
 E  D
"RTN","MAGGTU6",112,0)
 . ;Import failed - send mail to MAG SERVER group and person who queued the import
"RTN","MAGGTU6",113,0)
 . S XMDUZ=DUZ
"RTN","MAGGTU6",114,0)
 . S XMSUB="Import Error Report"
"RTN","MAGGTU6",115,0)
 . ;get text of message from status array
"RTN","MAGGTU6",116,0)
 . S XMTEXT="A("
"RTN","MAGGTU6",117,0)
 . S I=-1,COUNT=0 F  S I=$O(STATARR(I)) Q:I=""  D
"RTN","MAGGTU6",118,0)
 . . S A(I)=I_") "_STATARR(I)
"RTN","MAGGTU6",119,0)
 . . S COUNT=COUNT+1
"RTN","MAGGTU6",120,0)
 . S A(COUNT+1)=" "
"RTN","MAGGTU6",121,0)
 . S A(COUNT+2)=" "
"RTN","MAGGTU6",122,0)
 . S A(COUNT+3)="     The errors listed above were generated by"
"RTN","MAGGTU6",123,0)
 . S A(COUNT+4)="     the VistA Imaging Annotation Editor while"
"RTN","MAGGTU6",124,0)
 . S A(COUNT+5)="     trying to import your diagram.  Please"
"RTN","MAGGTU6",125,0)
 . S A(COUNT+6)="     report these errors to your VistA Imaging"
"RTN","MAGGTU6",126,0)
 . S A(COUNT+7)="     support personnel."
"RTN","MAGGTU6",127,0)
 . ;Get person who did the import
"RTN","MAGGTU6",128,0)
 . S QINDEX=STATARR(2)
"RTN","MAGGTU6",129,0)
 . S I=-1 F  S I=$O(^MAG(2006.034,QINDEX,1,I)) Q:I=""  D
"RTN","MAGGTU6",130,0)
 . . I $P($G(^MAG(2006.034,QINDEX,1,I,0)),"^",1)=8 S CDUZ=$P(^MAG(2006.034,QINDEX,1,I,0),"^",2)
"RTN","MAGGTU6",131,0)
 . ;Set recipients of message
"RTN","MAGGTU6",132,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGGTU6",133,0)
 . I $G(CDUZ) S XMY(CDUZ)=""
"RTN","MAGGTU6",134,0)
 . D ^XMD
"RTN","MAGGTU6",135,0)
 Q
"RTN","MAGGTU6",136,0)
GETCTP(MAGRY) ;RPC [MAG4 CT PRESETS GET]
"RTN","MAGGTU6",137,0)
 N MAGPLC
"RTN","MAGGTU6",138,0)
 S MAGPLC=$$DUZ2PLC^MAGBAPIP()
"RTN","MAGGTU6",139,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",140,0)
 S MAGRY=$G(^MAG(2006.1,MAGPLC,"CT"))
"RTN","MAGGTU6",141,0)
 I MAGRY="" S MAGRY="0^Site doesn't have CT Presets defined." Q
"RTN","MAGGTU6",142,0)
 S MAGRY="1^"_MAGRY
"RTN","MAGGTU6",143,0)
 Q
"RTN","MAGGTU6",144,0)
SAVECTP(MAGRY,VALUE) ;RPC [MAG4 CT PRESETS SAVE]
"RTN","MAGGTU6",145,0)
 N MAGPLC
"RTN","MAGGTU6",146,0)
 S MAGPLC=$$DUZ2PLC^MAGBAPIP()
"RTN","MAGGTU6",147,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",148,0)
 S ^MAG(2006.1,MAGPLC,"CT")=VALUE
"RTN","MAGGTU6",149,0)
 S MAGRY="1^CT Presets saved."
"RTN","MAGGTU6",150,0)
 Q
"RTN","MAGGTU7")
0^46^B21834600
"RTN","MAGGTU7",1,0)
MAGGTU7 ;WOIFO/GEK - Silent calls for Queing functions from GUI ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU7",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTU7",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU7",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU7",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU7",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU7",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU7",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU7",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU7",10,0)
 ;; |                                                               |
"RTN","MAGGTU7",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU7",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU7",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU7",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU7",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU7",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU7",17,0)
 ;;
"RTN","MAGGTU7",18,0)
 Q
"RTN","MAGGTU7",19,0)
ONJBOX(MAGIEN,CODE) ;
"RTN","MAGGTU7",20,0)
 ;Check to see if the image ( Abs, Full, or Big ) is on the worm 
"RTN","MAGGTU7",21,0)
 ;  before queuing it to be copied to HardDrive.
"RTN","MAGGTU7",22,0)
 ; We're testing to see if a pointer to the magnetic exists.
"RTN","MAGGTU7",23,0)
 ;  If not then we assume the Image is on JukeBox
"RTN","MAGGTU7",24,0)
 IF '$L($G(^MAG(2005,+MAGIEN,0))) Q 0
"RTN","MAGGTU7",25,0)
 IF $$IMOFFLN^MAGFILEB($P(^MAG(2005,+MAGIEN,0),"^",2)) Q 0
"RTN","MAGGTU7",26,0)
 IF CODE="A" Q '$P(^MAG(2005,+MAGIEN,0),U,4)
"RTN","MAGGTU7",27,0)
 IF CODE="F" Q '$P(^MAG(2005,+MAGIEN,0),U,3)
"RTN","MAGGTU7",28,0)
 IF CODE="B" Q '$P(^MAG(2005,+MAGIEN,"FBIG"),U,1)
"RTN","MAGGTU7",29,0)
 ;
"RTN","MAGGTU7",30,0)
 Q
"RTN","MAGGTU7",31,0)
QUEIMAGE(MAGRY,CODE,MAGIEN) ;RPC [MAGG QUE IMAGE]
"RTN","MAGGTU7",32,0)
 ; Call to Queue an image for copy from Jukebox
"RTN","MAGGTU7",33,0)
 ;  NOTE : This is also called from other M routines.
"RTN","MAGGTU7",34,0)
 ; 
"RTN","MAGGTU7",35,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",36,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",37,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",38,0)
 ;     ["B" Big File
"RTN","MAGGTU7",39,0)
 ;
"RTN","MAGGTU7",40,0)
 N Y,QUE
"RTN","MAGGTU7",41,0)
 S QUE=""
"RTN","MAGGTU7",42,0)
 S MAGRY="0^Error setting Que from JukeBox"
"RTN","MAGGTU7",43,0)
 ;S MAGRY="1^Image was Queued to copy from JukeBox"
"RTN","MAGGTU7",44,0)
 ;  GEK 6/27/03  added code (ABS4IMAG) that returns 1|0  1 if this image should have an Abstract
"RTN","MAGGTU7",45,0)
 ;     This will stop the Queing of Canned Bitmaps for Images of type DOC, PDF, WAV, AVI  etc.
"RTN","MAGGTU7",46,0)
 I (CODE["A"),$$ONJBOX(MAGIEN,"A"),$$ABS4IMAG^MAGGSFT(MAGIEN) S Y=$$JBTOHD^MAGBAPI(+MAGIEN_"^ABSTRACT",$$DA2PLC^MAGBAPIP(MAGIEN,"A")) S QUE="A" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",47,0)
 I (CODE["F"),$$ONJBOX(MAGIEN,"F") S Y=$$JBTOHD^MAGBAPI(+MAGIEN_"^FULL",$$DA2PLC^MAGBAPIP(MAGIEN,"F")) S QUE=QUE_"F" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",48,0)
 I (CODE["B"),$$ONJBOX(MAGIEN,"B") S Y=$$JBTOHD^MAGBAPI(+MAGIEN_"^BIG",$$DA2PLC^MAGBAPIP(MAGIEN,"B")) S QUE=QUE_"B" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",49,0)
 I QUE="" S MAGRY="1^Copy from JukeBox not needed, Image was NOT Queued."
"RTN","MAGGTU7",50,0)
 E  S MAGRY="1^Image was Queued to copy from JukeBox ("_QUE_")"
"RTN","MAGGTU7",51,0)
 Q
"RTN","MAGGTU7",52,0)
QPREFET(MAGRY,CODE,MAGIEN) ;
"RTN","MAGGTU7",53,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",54,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",55,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",56,0)
 ;     ["B" Big File
"RTN","MAGGTU7",57,0)
 ;
"RTN","MAGGTU7",58,0)
 N Y,QUE
"RTN","MAGGTU7",59,0)
 S QUE=""
"RTN","MAGGTU7",60,0)
 S MAGRY="0^Error setting Prefetch Que from JukeBox"
"RTN","MAGGTU7",61,0)
 ;S MAGRY="1^Image was Queued to copy from JukeBox"
"RTN","MAGGTU7",62,0)
 I (CODE["A"),$$ONJBOX(MAGIEN,"A"),$$ABS4IMAG^MAGGSFT(MAGIEN) S Y=$$PREFET^MAGBAPI(+MAGIEN_"^ABSTRACT",$$DA2PLC^MAGBAPIP(MAGIEN,"A")) S QUE="A" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",63,0)
 I (CODE["F"),$$ONJBOX(MAGIEN,"F") S Y=$$PREFET^MAGBAPI(+MAGIEN_"^FULL",$$DA2PLC^MAGBAPIP(MAGIEN,"F")) S QUE=QUE_"F" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",64,0)
 I (CODE["B"),$$ONJBOX(MAGIEN,"B") S Y=$$PREFET^MAGBAPI(+MAGIEN_"^BIG",$$DA2PLC^MAGBAPIP(MAGIEN,"B")) S QUE=QUE_"B" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",65,0)
 I QUE="" S MAGRY="1^Copy from JukeBox not needed, Image was NOT Queued."
"RTN","MAGGTU7",66,0)
 E  S MAGRY="1^Image was Queued to copy from JukeBox"
"RTN","MAGGTU7",67,0)
 Q
"RTN","MAGGTU7",68,0)
QUELIST(MAGRY,CODE,LIST) ;RPC [MAGG QUE LIST]
"RTN","MAGGTU7",69,0)
 ; Call to queue all images in the input list for a copy from jukebox
"RTN","MAGGTU7",70,0)
 ;
"RTN","MAGGTU7",71,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",72,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",73,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",74,0)
 ;     ["B" Big File
"RTN","MAGGTU7",75,0)
 ; LIST is an array of Image IEN's,  we queue images contained in CODE
"RTN","MAGGTU7",76,0)
 ;
"RTN","MAGGTU7",77,0)
 N Y,CT
"RTN","MAGGTU7",78,0)
 S CT=0
"RTN","MAGGTU7",79,0)
 S X="" F  S X=$O(LIST(X)) Q:X=""  D QUEIMAGE(.XX,CODE,X) S CT=CT+1
"RTN","MAGGTU7",80,0)
 S MAGRY=CT_"^"_CT_" Image"_$S(CT=1:"",1:"'s")_" Queued to copy from JukeBox"
"RTN","MAGGTU7",81,0)
 Q
"RTN","MAGGTU7",82,0)
QUEGROUP(MAGRY,CODE,MAGIEN,QCODE) ;RPC [MAGG QUE IMAGE GROUP]
"RTN","MAGGTU7",83,0)
 ; Call to queue all images of an Image group for a copy from JukeBox.
"RTN","MAGGTU7",84,0)
 ;  This can also be a PREFETCH, in which case the Images being 
"RTN","MAGGTU7",85,0)
 ;  Queued have a lower priority than other copies from JukeBox
"RTN","MAGGTU7",86,0)
 ;
"RTN","MAGGTU7",87,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",88,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",89,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",90,0)
 ;     ["B" Big File
"RTN","MAGGTU7",91,0)
 ; MAGIEN is assumed to be a group image.
"RTN","MAGGTU7",92,0)
 ; QCODE is a QUEUE code.  If = 1 then this is a prefetch
"RTN","MAGGTU7",93,0)
 ;   here we are queing the images contained in CODE
"RTN","MAGGTU7",94,0)
 ;   for all images in the group.
"RTN","MAGGTU7",95,0)
 N X,Y,Z,CT
"RTN","MAGGTU7",96,0)
 S QCODE=$G(QCODE)
"RTN","MAGGTU7",97,0)
 I '$D(^MAG(2005,+MAGIEN,0)) S MAGRY="0^Invalid Image IEN. Queuing Canceled." Q
"RTN","MAGGTU7",98,0)
 S CT=0,X=0
"RTN","MAGGTU7",99,0)
 F  S X=$O(^MAG(2005,+MAGIEN,1,X)) Q:'X  S Z=+^(X,0) D
"RTN","MAGGTU7",100,0)
 . I QCODE D QPREFET(.XX,CODE,Z) S CT=CT+1
"RTN","MAGGTU7",101,0)
 . I 'QCODE D QUEIMAGE(.XX,CODE,Z) S CT=CT+1
"RTN","MAGGTU7",102,0)
 S MAGRY=CT_"^"_CT_" Group Image"_$S(CT=1:"",1:"'s")_" Queued to copy from JukeBox"
"RTN","MAGGTU7",103,0)
 Q
"RTN","MAGGTU7",104,0)
QUEPAT(MAGRY,CODE,MAGDFN) ;RPC [MAGG QUE PATIENT]
"RTN","MAGGTU7",105,0)
 ; Call to  Prefetch all images for a patient.
"RTN","MAGGTU7",106,0)
 ;  CODE is a string code for which images to Queue
"RTN","MAGGTU7",107,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",108,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",109,0)
 ;     ["B" Big File
"RTN","MAGGTU7",110,0)
 ;  this will queue a JBTOHD copy for all images for the patient.
"RTN","MAGGTU7",111,0)
 ;  images queued depend on what is contained in CODE
"RTN","MAGGTU7",112,0)
 ;
"RTN","MAGGTU7",113,0)
 N Y,I
"RTN","MAGGTU7",114,0)
 I '$D(^MAG(2005,"AC",+MAGDFN)) S MAGRY="0^No Images on file for "_$P($G(^DPT(+MAGDFN,0)),U,1) Q
"RTN","MAGGTU7",115,0)
 S I="" F  S I=$O(^MAG(2005,"AC",+MAGDFN,I),-1) Q:'I  D
"RTN","MAGGTU7",116,0)
 . I $P(^MAG(2005,I,0),U,10) Q
"RTN","MAGGTU7",117,0)
 . I $P(^MAG(2005,I,0),U,6)="11" D QUEGROUP(.XX,CODE,I,1) Q
"RTN","MAGGTU7",118,0)
 . D QPREFET(.XX,CODE,I)
"RTN","MAGGTU7",119,0)
 S MAGRY="1^"_$P(^DPT(+MAGDFN,0),U)_"'s Images will be copied from the JukeBox."
"RTN","MAGGTU7",120,0)
 Q
"RTN","MAGGTU9")
0^72^B20290460
"RTN","MAGGTU9",1,0)
MAGGTU9 ;WOIFO/LB/GEK - Imaging utilities assign key
"RTN","MAGGTU9",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGGTU9",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU9",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU9",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU9",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU9",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU9",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU9",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU9",10,0)
 ;; |                                                               |
"RTN","MAGGTU9",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU9",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU9",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU9",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU9",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU9",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU9",17,0)
 ;;
"RTN","MAGGTU9",18,0)
 Q
"RTN","MAGGTU9",19,0)
EN ;Give MAGDISP CLIN key to all MAG WINDOWS option holders.
"RTN","MAGGTU9",20,0)
 ;   Find the menu option's IEN
"RTN","MAGGTU9",21,0)
 N MKEY,ERR,OPT,MAGUSER,I,KEYNM,KEYCT,KEYECT,XCT,KEYHAS
"RTN","MAGGTU9",22,0)
 N UCT,UTOT,OPTACC,MDOT
"RTN","MAGGTU9",23,0)
 S KEYNM="MAGDISP CLIN"
"RTN","MAGGTU9",24,0)
 S KEYCT=0 ; count of number of users that were assigned the key.
"RTN","MAGGTU9",25,0)
 S KEYECT=0 ; count of number of errors during the assignment.
"RTN","MAGGTU9",26,0)
 S KEYHAS=0 ; count of number of users that already have key.
"RTN","MAGGTU9",27,0)
 S OPTACC=0 ; count of users with access to MAG WINDOWS.
"RTN","MAGGTU9",28,0)
 S MDOT=10000 ; print '.' to screen to show progress.
"RTN","MAGGTU9",29,0)
 S UCT=0 ; user count. for progress
"RTN","MAGGTU9",30,0)
 S UTOT=$P(^VA(200,0),"^",4)
"RTN","MAGGTU9",31,0)
 ; 
"RTN","MAGGTU9",32,0)
 D MES^XPDUTL("Assigning "_KEYNM_" to all users with access to Option : "_"MAG WINDOWS")
"RTN","MAGGTU9",33,0)
 S OPT=$$FIND1^DIC(19,"","X","MAG WINDOWS","","","ERR")
"RTN","MAGGTU9",34,0)
 I OPT="" D MES^XPDUTL("ERROR ",$G(ERR("DIERR",1,"TEXT",1))) Q
"RTN","MAGGTU9",35,0)
 I OPT=0 D MES^XPDUTL("MAG WINDOWS wasn't found in Option File") Q
"RTN","MAGGTU9",36,0)
 ;   Lookup the security key
"RTN","MAGGTU9",37,0)
 S MKEY=$$LKUP^XPDKEY(KEYNM)
"RTN","MAGGTU9",38,0)
 I 'MKEY D MES^XPDUTL("ERROR "_KEYNM_" Key wasn't found") Q
"RTN","MAGGTU9",39,0)
 ;   Give users the Key, if they don't have it already
"RTN","MAGGTU9",40,0)
 D MES^XPDUTL("Checking users...")
"RTN","MAGGTU9",41,0)
 S I=0 F  S I=$O(^VA(200,I)) Q:'I  D
"RTN","MAGGTU9",42,0)
 . S UCT=UCT+1 I UCT>MDOT S MDOT=MDOT+10000 D MES^XPDUTL(UCT_" of "_UTOT_" users checked...")
"RTN","MAGGTU9",43,0)
 . I (($$ACCESS^XQCHK(I,OPT))>0) S OPTACC=OPTACC+1 D GIVEKEY(MKEY,KEYNM,I)
"RTN","MAGGTU9",44,0)
 . Q
"RTN","MAGGTU9",45,0)
 D MES^XPDUTL(OPTACC_" of "_UTOT_" Users have access to option MAG WINDOWS.")
"RTN","MAGGTU9",46,0)
 D MES^XPDUTL(KEYHAS_" Users already have Key "_KEYNM)
"RTN","MAGGTU9",47,0)
 D MES^XPDUTL(KEYCT_" Users were assigned key: "_KEYNM)
"RTN","MAGGTU9",48,0)
 D MES^XPDUTL("Assignment Complete.")
"RTN","MAGGTU9",49,0)
 I KEYECT>0 D MES^XPDUTL(KEYECT_" Errors during Key Assignment. See install log for details")
"RTN","MAGGTU9",50,0)
 Q
"RTN","MAGGTU9",51,0)
GIVEKEY(KEY,KEYNM,USER) ;
"RTN","MAGGTU9",52,0)
 ; Give KEY to USER
"RTN","MAGGTU9",53,0)
 N DO,D1,MFDA,Z,MIEN
"RTN","MAGGTU9",54,0)
 ; Quit if they already have the key
"RTN","MAGGTU9",55,0)
 S Z=$$FIND1^DIC(200.051,","_USER_",","",KEYNM)
"RTN","MAGGTU9",56,0)
 I +Z S KEYHAS=KEYHAS+1
"RTN","MAGGTU9",57,0)
 Q:Z  ; Already have key
"RTN","MAGGTU9",58,0)
 I Z="" D  Q
"RTN","MAGGTU9",59,0)
 . D MES^XPDUTL("ERROR Validating that user ("_USER_") has key ("_KEYNM_")")
"RTN","MAGGTU9",60,0)
 . S KEYECT=KEYECT+1
"RTN","MAGGTU9",61,0)
 ;
"RTN","MAGGTU9",62,0)
 S MFDA(200.051,"+1,"_USER_",",.01)=KEY
"RTN","MAGGTU9",63,0)
 S MFDA(200.051,"+1,"_USER_",",1)=DUZ
"RTN","MAGGTU9",64,0)
 S MFDA(200.051,"+1,"_USER_",",2)=DT
"RTN","MAGGTU9",65,0)
 S MIEN(1)=KEY_","
"RTN","MAGGTU9",66,0)
 D UPDATE^DIE("","MFDA","MIEN")
"RTN","MAGGTU9",67,0)
 I $D(DIERR) D  Q
"RTN","MAGGTU9",68,0)
 . D MES^XPDUTL("ERROR Assigning key ("_KEYNM_") to user ("_USER_")")
"RTN","MAGGTU9",69,0)
 . S KEYECT=KEYECT+1
"RTN","MAGGTU9",70,0)
 . D CLEAN^DILF
"RTN","MAGGTU9",71,0)
 . Q
"RTN","MAGGTU9",72,0)
 S KEYCT=KEYCT+1
"RTN","MAGGTU9",73,0)
 D CLEAN^DILF
"RTN","MAGGTU9",74,0)
 Q
"RTN","MAGGTU9",75,0)
FLT ;  Create a Few Public Filters as a default for sites.
"RTN","MAGGTU9",76,0)
 ;  Only create new public filters if file is empty.
"RTN","MAGGTU9",77,0)
 N DIK
"RTN","MAGGTU9",78,0)
 I +$P(^MAG(2005.87,0),"^",3) D  Q
"RTN","MAGGTU9",79,0)
 . D MES^XPDUTL("The IMAGE LIST FILTERS File is not empty,")
"RTN","MAGGTU9",80,0)
 . D MES^XPDUTL("  Default Public Filters were not installed.")
"RTN","MAGGTU9",81,0)
 . Q
"RTN","MAGGTU9",82,0)
 S ^MAG(2005.87,1,0)="Rad All^RAD^CLIN^^^^^^0"
"RTN","MAGGTU9",83,0)
 S ^MAG(2005.87,1,1)="^1^.05"
"RTN","MAGGTU9",84,0)
 S ^MAG(2005.87,2,0)="Clin All^^CLIN^^^^^^0"
"RTN","MAGGTU9",85,0)
 S ^MAG(2005.87,2,1)="^1^.05"
"RTN","MAGGTU9",86,0)
 S ^MAG(2005.87,3,0)="Admin All^^ADMIN^^^^^^0"
"RTN","MAGGTU9",87,0)
 S ^MAG(2005.87,3,1)="^1^.05"
"RTN","MAGGTU9",88,0)
 S ^MAG(2005.87,4,0)="Clin 2 yr^^CLIN^^^^^^-24"
"RTN","MAGGTU9",89,0)
 S ^MAG(2005.87,4,1)="^1^.05"
"RTN","MAGGTU9",90,0)
 S ^MAG(2005.87,5,0)="Admin 10-10EZ All^^ADMIN^46,^^^^^0"
"RTN","MAGGTU9",91,0)
 S ^MAG(2005.87,5,1)="^1^.05"
"RTN","MAGGTU9",92,0)
 S ^MAG(2005.87,6,0)="Adv Directives^^CLIN^67^^^^^0"
"RTN","MAGGTU9",93,0)
 S ^MAG(2005.87,6,1)="^1^.05"
"RTN","MAGGTU9",94,0)
 S ^MAG(2005.87,7,0)="All^^^^^^^^0"
"RTN","MAGGTU9",95,0)
 S ^MAG(2005.87,7,1)="^1^.05"
"RTN","MAGGTU9",96,0)
 S ^MAG(2005.87,8,0)="All 2 yr^^^^^^^^-24"
"RTN","MAGGTU9",97,0)
 S ^MAG(2005.87,8,1)="^1^.05"
"RTN","MAGGTU9",98,0)
 S ^MAG(2005.87,9,0)="All 6 mth^^^^^^^^-6"
"RTN","MAGGTU9",99,0)
 S ^MAG(2005.87,9,1)="^1^.05"
"RTN","MAGGTU9",100,0)
 ;All Advance Directives^^CLIN^67^^^^^0
"RTN","MAGGTU9",101,0)
 S DIK="^MAG(2005.87," D IXALL^DIK
"RTN","MAGGTU9",102,0)
 D MES^XPDUTL("Default Public Filters added to IMAGE LIST FILTERS File.")
"RTN","MAGGTU9",103,0)
 Q
"RTN","MAGGTUP")
0^21^B20185672
"RTN","MAGGTUP",1,0)
MAGGTUP ;WOIFO/GEK - Imaging System User preferences ; [ 06/20/2001 08:57 ]
"RTN","MAGGTUP",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGGTUP",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUP",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUP",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUP",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUP",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUP",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUP",10,0)
 ;; |                                                               |
"RTN","MAGGTUP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUP",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUP",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUP",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUP",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",17,0)
 ;;
"RTN","MAGGTUP",18,0)
 Q
"RTN","MAGGTUP",19,0)
GET(MAGRY,CODE) ;RPC [MAGGUPREFGET] Call to Get user preferences.
"RTN","MAGGTUP",20,0)
 ;
"RTN","MAGGTUP",21,0)
 N Y,PRFIEN,J,X,Z,NODE,MAGPREF
"RTN","MAGGTUP",22,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTUP",23,0)
 K MAGRY
"RTN","MAGGTUP",24,0)
 S MAGRY(0)="0^Error: Attempting to access user preference"
"RTN","MAGGTUP",25,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,""))
"RTN","MAGGTUP",26,0)
 ;    if first time user
"RTN","MAGGTUP",27,0)
 I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",28,0)
 ;    merge default settings into User's Preferences
"RTN","MAGGTUP",29,0)
 D MERGE(PRFIEN)
"RTN","MAGGTUP",30,0)
 ;    This returns the users default Filter, and creates filters if needed.
"RTN","MAGGTUP",31,0)
 S $P(^MAG(2006.18,PRFIEN,"LISTWIN1"),"^",3)=$$DFTFLT^MAGGSFLT(DUZ)
"RTN","MAGGTUP",32,0)
 S MAGRY(0)="1^User Preferences returned."
"RTN","MAGGTUP",33,0)
 ; 
"RTN","MAGGTUP",34,0)
 ; At This point.  Then entry in 2006.18 for User DUZ in complete
"RTN","MAGGTUP",35,0)
 ;   it has been merged with defaults, and has a valid Default Filter.
"RTN","MAGGTUP",36,0)
 ;   
"RTN","MAGGTUP",37,0)
 ;  if caller only wants one node, get it then quit.
"RTN","MAGGTUP",38,0)
 I $L($G(CODE))  S MAGRY($O(MAGRY(""),-1)+1)=CODE_"^"_^MAG(2006.18,PRFIEN,CODE) Q
"RTN","MAGGTUP",39,0)
 ;
"RTN","MAGGTUP",40,0)
 ;  loop through User Pref file, returning all nodes.
"RTN","MAGGTUP",41,0)
 ; Next line was Un-Commented out. BUT Clients before Patch 8 need it.
"RTN","MAGGTUP",42,0)
 S MAGRY($O(MAGRY(""),-1)+1)="SYS^"_^MAG(2006.18,PRFIEN,0)
"RTN","MAGGTUP",43,0)
 S NODE=""
"RTN","MAGGTUP",44,0)
 F  S NODE=$O(^MAG(2006.18,PRFIEN,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",45,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=NODE_"^"_^MAG(2006.18,PRFIEN,NODE)
"RTN","MAGGTUP",46,0)
 Q
"RTN","MAGGTUP",47,0)
MERGE(PRFIEN) ; Merge default settings into User Prefs returned.
"RTN","MAGGTUP",48,0)
 ; This will assure the User Prefs returned have values for New fields.
"RTN","MAGGTUP",49,0)
 ; PRFIEN = IEN in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",50,0)
 N NODE,DARR,MN,YN
"RTN","MAGGTUP",51,0)
 D DFLTARR(.DARR)
"RTN","MAGGTUP",52,0)
 S NODE="" F  S NODE=$O(DARR($J,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",53,0)
 . S YN=DARR($J,NODE)
"RTN","MAGGTUP",54,0)
 . S MN=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",55,0)
 . F J=1:1:$L(YN,"^") I ($P(YN,"^",J)'=""),($P(MN,"^",J)="") S $P(MN,"^",J)=$P(YN,"^",J)
"RTN","MAGGTUP",56,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=MN
"RTN","MAGGTUP",57,0)
 ;
"RTN","MAGGTUP",58,0)
 Q
"RTN","MAGGTUP",59,0)
SAVE(MAGRY,DATA) ;RPC [MAGGUPREFSAVE] Call to save User Preferences
"RTN","MAGGTUP",60,0)
 ;
"RTN","MAGGTUP",61,0)
 S MAGRY="0^Error: Saving user preferences."
"RTN","MAGGTUP",62,0)
 N X,Y,NODE,PRFIEN,J
"RTN","MAGGTUP",63,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTUP",64,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,"")) I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",65,0)
 S NODE="" F  S NODE=$O(DATA(NODE)) Q:NODE=""  D
"RTN","MAGGTUP",66,0)
 . S X=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",67,0)
 . S Y=DATA(NODE)
"RTN","MAGGTUP",68,0)
 . F J=1:1:$L(Y,"^") I $L($P(Y,"^",J)) S $P(X,"^",J)=$P(Y,"^",J)
"RTN","MAGGTUP",69,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=X
"RTN","MAGGTUP",70,0)
 S MAGRY="1^User Preferences saved."
"RTN","MAGGTUP",71,0)
 Q
"RTN","MAGGTUP",72,0)
NEWUSER(USER) ;Returns IEN of New entry in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",73,0)
 K DD,DO
"RTN","MAGGTUP",74,0)
 S X=$E($$GET1^DIQ(200,USER_",",.01),1,15)_" (SETTING 1)"
"RTN","MAGGTUP",75,0)
 S DIC="^MAG(2006.18,",DIC(0)="L"
"RTN","MAGGTUP",76,0)
 S DIC("DR")="1////"_USER_";2////12;3////12;" D FILE^DICN
"RTN","MAGGTUP",77,0)
 I Y=-1 Q Y
"RTN","MAGGTUP",78,0)
 D DEFAULT(+Y)
"RTN","MAGGTUP",79,0)
 Q +Y
"RTN","MAGGTUP",80,0)
DEFAULT(NEWPREF) ;Setup a new IMAGING USER PREFERENCES entry, with System defaults.
"RTN","MAGGTUP",81,0)
 ;    NEWPREF = IEN in IMAGING USER PREFERENCES File
"RTN","MAGGTUP",82,0)
 N DFTPREF,N0,DFTSET
"RTN","MAGGTUP",83,0)
 S DFTPREF=+$$GET1^DIQ(2006.1,$$PLACE^MAGBAPI(DUZ(2)),100,"I") ; DBI - SEB 9/20/2002
"RTN","MAGGTUP",84,0)
 I DFTPREF,$D(^MAG(2006.18,DFTPREF)) D DEFUSER(NEWPREF,DFTPREF) Q
"RTN","MAGGTUP",85,0)
 ;    save the User name, Setting Name 
"RTN","MAGGTUP",86,0)
 S N0=$P(^MAG(2006.18,NEWPREF,0),U,1,4)
"RTN","MAGGTUP",87,0)
 D DFLTARR(.DFTSET)
"RTN","MAGGTUP",88,0)
 M ^MAG(2006.18,NEWPREF)=DFTSET($J)
"RTN","MAGGTUP",89,0)
 ;    reset User name, Setting name.
"RTN","MAGGTUP",90,0)
 S $P(^MAG(2006.18,NEWPREF,0),U,1,4)=N0
"RTN","MAGGTUP",91,0)
 Q
"RTN","MAGGTUP",92,0)
DEFUSER(NEWPREF,DFTPREF) ;Merge New User preference with the Default User as defined
"RTN","MAGGTUP",93,0)
 ; in the Imaging Site Parameters file
"RTN","MAGGTUP",94,0)
 ;    NEWPREF  =  new IMAGING USER PREFERENCE (IEN)
"RTN","MAGGTUP",95,0)
 ;    DFLTPREF =  DEFAULT USER PREFERENCE in the IMAGING SITE PARAMETERS File
"RTN","MAGGTUP",96,0)
 ; 
"RTN","MAGGTUP",97,0)
 N X0
"RTN","MAGGTUP",98,0)
 S X0=$P(^MAG(2006.18,NEWPREF,0),"^",1,4)
"RTN","MAGGTUP",99,0)
 M ^MAG(2006.18,NEWPREF)=^MAG(2006.18,DFTPREF)
"RTN","MAGGTUP",100,0)
 S $P(^MAG(2006.18,NEWPREF,0),"^",1,4)=X0
"RTN","MAGGTUP",101,0)
 ;    remove default user's default Filter from new user's preferences.
"RTN","MAGGTUP",102,0)
 S $P(^MAG(2006.18,NEWPREF,"LISTWIN1"),"^",3)=""
"RTN","MAGGTUP",103,0)
 Q
"RTN","MAGGTUP",104,0)
DFLTARR(ARR) ; Return an Array of All Default settings
"RTN","MAGGTUP",105,0)
 K ARR($J)
"RTN","MAGGTUP",106,0)
 S ARR($J,0)="^^^^0^1^1^"
"RTN","MAGGTUP",107,0)
 S ARR($J,"DICOMWIN")="2^320^292^724^487"
"RTN","MAGGTUP",108,0)
 S ARR($J,"IMAGEGRID")="2^487^2^786^426^1^35,73,67,34,110,46,69,96,76,79,25,0,0^0"
"RTN","MAGGTUP",109,0)
 S ARR($J,"REPORT")="2^2^333^722^437^Courier^^10"
"RTN","MAGGTUP",110,0)
 S ARR($J,"RADLISTWIN")="2^487^10^433^172^0"
"RTN","MAGGTUP",111,0)
 S ARR($J,"MAIN")="2^1^1^487^172^1"
"RTN","MAGGTUP",112,0)
 S ARR($J,"ABS")="2^1^160^486^326^105^60^1^1^2^24^2^1^0"
"RTN","MAGGTUP",113,0)
 S ARR($J,"FULL")="2^310^282^714^487^674^447^^1^2^4^2^0"
"RTN","MAGGTUP",114,0)
 S ARR($J,"GROUP")="2^24^231^427^457^110^70^^1^2^24^2^1^0"
"RTN","MAGGTUP",115,0)
 S ARR($J,"DOC")="2^298^24^729^429^0^0^3^1^2^4^2^0"
"RTN","MAGGTUP",116,0)
 S ARR($J,"CAPCONFIG")="1^1^1^0^0^0^0^1^0^1^0^0^1^1^0^0^1^1^1^1^1^1^200^400^300^100^500^0^0^1^"
"RTN","MAGGTUP",117,0)
 S ARR($J,"APPPREFS")="0^7^7^10"
"RTN","MAGGTUP",118,0)
 S ARR($J,"LISTWIN1")="1^1^^1^1"
"RTN","MAGGTUP",119,0)
 Q
"RTN","MAGIPOS8")
0^^B40623427
"RTN","MAGIPOS8",1,0)
MAGIPOS8 ;Post init routine to queue site activity at install.
"RTN","MAGIPOS8",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGIPOS8",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPOS8",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIPOS8",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIPOS8",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIPOS8",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIPOS8",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIPOS8",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIPOS8",10,0)
 ;; |                                                               |
"RTN","MAGIPOS8",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIPOS8",12,0)
 ;; | a medical device.  As such, it may not be changed             |
"RTN","MAGIPOS8",13,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGIPOS8",14,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGIPOS8",15,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGIPOS8",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPOS8",17,0)
 ;;
"RTN","MAGIPOS8",18,0)
 Q
"RTN","MAGIPOS8",19,0)
PRE ; Remove DD definition so that new definition can be laid down cleanly
"RTN","MAGIPOS8",20,0)
 N I
"RTN","MAGIPOS8",21,0)
 F DIU=2005.86,2005.021,2005.87 D
"RTN","MAGIPOS8",22,0)
 . S DIU(0)="" D EN^DIU2
"RTN","MAGIPOS8",23,0)
 . Q
"RTN","MAGIPOS8",24,0)
 ;Also handle partials DDs for 2005, 2005.1, 2006.1, 2006.81, 2006.82, 2006.95
"RTN","MAGIPOS8",25,0)
 S DIK="^DD(2005,",DA=30,DA(1)=2005 D ^DIK
"RTN","MAGIPOS8",26,0)
 S DIK="^DD(2005,",DA=30.1,DA(1)=2005 D ^DIK
"RTN","MAGIPOS8",27,0)
 S DIK="^DD(2005,",DA=30.2,DA(1)=2005 D ^DIK
"RTN","MAGIPOS8",28,0)
 S DIK="^DD(2005.1,",DA=.05,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",29,0)
 S DIK="^DD(2005.1,",DA=.06,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",30,0)
 S DIK="^DD(2005.1,",DA=13,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",31,0)
 S DIK="^DD(2005.1,",DA=20,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",32,0)
 S DIK="^DD(2005.1,",DA=30,DA(1)=2005 D ^DIK
"RTN","MAGIPOS8",33,0)
 S DIK="^DD(2005.1,",DA=30.1,DA(1)=2005 D ^DIK
"RTN","MAGIPOS8",34,0)
 S DIK="^DD(2005.1,",DA=30.2,DA(1)=2005 D ^DIK
"RTN","MAGIPOS8",35,0)
 S DIK="^DD(2005.1,",DA=40,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",36,0)
 S DIK="^DD(2005.1,",DA=41,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",37,0)
 S DIK="^DD(2005.1,",DA=42,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",38,0)
 S DIK="^DD(2005.1,",DA=43,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",39,0)
 S DIK="^DD(2005.1,",DA=44,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",40,0)
 S DIK="^DD(2005.1,",DA=45,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",41,0)
 S DIK="^DD(2005.1,",DA=106,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",42,0)
 S DIK="^DD(2005.1,",DA=107,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",43,0)
 S DIK="^DD(2005.1,",DA=108,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",44,0)
 S DIK="^DD(2005.1,",DA=109,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",45,0)
 S DIK="^DD(2005.1,",DA=110,DA(1)=2005.1 D ^DIK
"RTN","MAGIPOS8",46,0)
 S DIK="^DD(2005.1106,",DA=.01,DA(1)=2005.1106 D ^DIK
"RTN","MAGIPOS8",47,0)
 S DIK="^DD(2005.1106,",DA=2,DA(1)=2005.1106 D ^DIK
"RTN","MAGIPOS8",48,0)
 S DIK="^DD(2005.1106,",DA=3,DA(1)=2005.1106 D ^DIK
"RTN","MAGIPOS8",49,0)
 S DIK="^DD(2005.1106,",DA=4,DA(1)=2005.1106 D ^DIK
"RTN","MAGIPOS8",50,0)
 S DIK="^DD(2005.1106,",DA=5,DA(1)=2005.1106 D ^DIK
"RTN","MAGIPOS8",51,0)
 S DIK="^DD(2005.1106,",DA=6,DA(1)=2005.1106 D ^DIK
"RTN","MAGIPOS8",52,0)
 S DIK="^DD(2005.1106,",DA=7,DA(1)=2005.1106 D ^DIK
"RTN","MAGIPOS8",53,0)
 S DIK="^DD(2005.2,",DA=6,DA(1)=2005 D ^DIK
"RTN","MAGIPOS8",54,0)
 S DIK="^DD(2006.95,",DA=9,DA(1)=2006.95 D ^DIK
"RTN","MAGIPOS8",55,0)
 S DIK="^DD(2006.1,",DA=70,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",56,0)
 S DIK="^DD(2006.1,",DA=11.6,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",57,0)
 S DIK="^DD(2006.1,",DA=11.7,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",58,0)
 S DIK="^DD(2006.1,",DA=11.8,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",59,0)
 S DIK="^DD(2006.1,",DA=60,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",60,0)
 S DIK="^DD(2006.1,",DA=61,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",61,0)
 S DIK="^DD(2006.1,",DA=62,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",62,0)
 S DIK="^DD(2006.1,",DA=63,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",63,0)
 S DIK="^DD(2006.1,",DA=64,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",64,0)
 S DIK="^DD(2006.1,",DA=65,DA(1)=2006.1 D ^DIK
"RTN","MAGIPOS8",65,0)
 S DIK="^DD(2006.8,",DA=17,DA(1)=2006.8 D ^DIK
"RTN","MAGIPOS8",66,0)
 S DIK="^DD(2006.81,",DA=.04,DA(1)=2006.81 D ^DIK
"RTN","MAGIPOS8",67,0)
 S DIK="^DD(2006.82,",DA=.04,DA(1)=2006.82 D ^DIK
"RTN","MAGIPOS8",68,0)
 F I=137,138,140,141,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,164,165,174,175,176,177,178,179 D
"RTN","MAGIPOS8",69,0)
 . S DIK="^DD(2006.18,",DA=I,DA(1)=2006.18 D ^DIK
"RTN","MAGIPOS8",70,0)
 K DIK,DA
"RTN","MAGIPOS8",71,0)
 K ^DD(2006.8,0,"IX","AMAPI",2006.8,6)
"RTN","MAGIPOS8",72,0)
 Q
"RTN","MAGIPOS8",73,0)
POST ;
"RTN","MAGIPOS8",74,0)
 ; Remove field 105 it is now .05 same field nameACQUISITION SITE 
"RTN","MAGIPOS8",75,0)
 ; and global storage in file IMAGE AUDIT.
"RTN","MAGIPOS8",76,0)
 S DIK="^DD(2005.1,",DA=105,DA(1)=2005 D ^DIK K DIK,DA
"RTN","MAGIPOS8",77,0)
 D UPDATE
"RTN","MAGIPOS8",78,0)
 D CLEARUP
"RTN","MAGIPOS8",79,0)
 D NETREL
"RTN","MAGIPOS8",80,0)
 D INDEX
"RTN","MAGIPOS8",81,0)
 ; Assign the MAGDISP CLIN Key to all MAG WINDOWS Option holders. 
"RTN","MAGIPOS8",82,0)
 D EN^MAGGTU9
"RTN","MAGIPOS8",83,0)
 ;  Create a Few Public Filters 
"RTN","MAGIPOS8",84,0)
 D FLT^MAGGTU9
"RTN","MAGIPOS8",85,0)
 D CHTYP ; Change CLASS of ADVANCE DIRECTIVE to CLIN/ADMIN
"RTN","MAGIPOS8",86,0)
 D REMTASK^MAGQE4
"RTN","MAGIPOS8",87,0)
 D STTASK^MAGQE4
"RTN","MAGIPOS8",88,0)
 D INS(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGIPOS8",89,0)
 D POSTI^MAGQBUT
"RTN","MAGIPOS8",90,0)
 Q
"RTN","MAGIPOS8",91,0)
INDEX ; Re-index actually
"RTN","MAGIPOS8",92,0)
 K ^MAG(2005.2,"E") S DIK="MAG(2005.2,",DIK(1)="6^E" D ENALL^DIK
"RTN","MAGIPOS8",93,0)
 K ^MAG(2006.95,"AS") S DIK="MAG(2006.95,",DIK(1)="9^AS" D ENALL^DIK
"RTN","MAGIPOS8",94,0)
 K ^MAG(2006.81,"C") S DIK="MAG(2005.81,",DIK(1)=".04^C" D ENALL^DIK
"RTN","MAGIPOS8",95,0)
 K ^MAG(2006.8,"B"),^MAG(2006.8,"C"),^MAG(2006.8,"D") S DIK="^MAG(2006.8," D IXALL^DIK
"RTN","MAGIPOS8",96,0)
 K DIK
"RTN","MAGIPOS8",97,0)
 Q
"RTN","MAGIPOS8",98,0)
UPDATE ;Is GCC Export set in the Imaging Site Param file?
"RTN","MAGIPOS8",99,0)
 N ENTRY
"RTN","MAGIPOS8",100,0)
 S ENTRY=0
"RTN","MAGIPOS8",101,0)
 F  S ENTRY=$O(^MAG(2006.1,ENTRY)) Q:'ENTRY  D
"RTN","MAGIPOS8",102,0)
 . I $D(^MAG(2006.1,ENTRY,0)),+$P(^MAG(2006.1,ENTRY,0),"^",7) D
"RTN","MAGIPOS8",103,0)
 . . D IMAGACT
"RTN","MAGIPOS8",104,0)
 . . Q
"RTN","MAGIPOS8",105,0)
 . Q
"RTN","MAGIPOS8",106,0)
 Q
"RTN","MAGIPOS8",107,0)
IMAGACT ;Set the IMAGE ACTION entry in file 2005.86
"RTN","MAGIPOS8",108,0)
 ; Set the ACTIVE field = to MEANS TEST Active field in MAG DESC CTGS
"RTN","MAGIPOS8",109,0)
 N IEN,HEC,MTIEN,MTNAME
"RTN","MAGIPOS8",110,0)
 S MTNAME=$O(^MAG(2005.81,"B","MEANS TEST")) ; Get IEN of MEANS TEST 10-10EZ
"RTN","MAGIPOS8",111,0)
 ;  - Sites were allowed to change names.
"RTN","MAGIPOS8",112,0)
 I MTNAME'["MEANS TEST" Q
"RTN","MAGIPOS8",113,0)
 S MTIEN=$O(^MAG(2005.81,"B",MTNAME,""))
"RTN","MAGIPOS8",114,0)
 Q:'MTIEN
"RTN","MAGIPOS8",115,0)
 S HEC=+$G(^MAG(2005.81,MTIEN,1))
"RTN","MAGIPOS8",116,0)
 S IEN=$O(^MAG(2005.86,"B","HEC COPY",0)) Q:'IEN
"RTN","MAGIPOS8",117,0)
 I $D(^MAG(2005.86,IEN,0)) S $P(^MAG(2005.86,IEN,0),"^",2)=HEC
"RTN","MAGIPOS8",118,0)
 Q
"RTN","MAGIPOS8",119,0)
CLEARUP ;Clear field #52 VIEWJBOX IMAGES in file 2006.18 Imaging User Preference.
"RTN","MAGIPOS8",120,0)
 ; field 52 is the 6th piece of ^MAG(2006.18,0)
"RTN","MAGIPOS8",121,0)
 N J
"RTN","MAGIPOS8",122,0)
 W !,"Clearing the VIEWJBOX IMAGES field values from file 2006.18"
"RTN","MAGIPOS8",123,0)
 S J=0 F  S J=$O(^MAG(2006.18,J)) Q:'J  I $D(^MAG(2006.18,J,0)) S $P(^(0),"^",6)=0
"RTN","MAGIPOS8",124,0)
 W !,"Complete"
"RTN","MAGIPOS8",125,0)
 Q
"RTN","MAGIPOS8",126,0)
NETREL ; Set Internal and External values for each of the Network locations
"RTN","MAGIPOS8",127,0)
 N IEN,NAME,TYPE,VALUE,DR,DA,DIE,X,Y
"RTN","MAGIPOS8",128,0)
 S (NAME,IEN)="" F  S IEN=$O(^MAG(2005.2,"B",NAME)) Q:NAME=""  D
"RTN","MAGIPOS8",129,0)
 . S IEN=$O(^MAG(2005.2,"B",NAME,""))
"RTN","MAGIPOS8",130,0)
 . S TYPE=$P($G(^MAG(2005.2,IEN,0)),U,7)
"RTN","MAGIPOS8",131,0)
 . S VALUE=$S(TYPE["MAG":"I",TYPE["WORM":"I",1:"E")
"RTN","MAGIPOS8",132,0)
 . S DR="6.5///^S X=VALUE",DA=IEN,DIE=2005.2 D ^DIE
"RTN","MAGIPOS8",133,0)
 . Q
"RTN","MAGIPOS8",134,0)
 Q
"RTN","MAGIPOS8",135,0)
INS(XP,DUZ,DATE,IDA) ;
"RTN","MAGIPOS8",136,0)
 N CT,CNT,COM,D,D0,D1,D2,DDATE,DG,DIC,DICR,DIW,MAGMSG,ST,XMID,XMY
"RTN","MAGIPOS8",137,0)
 D GETENV^%ZOSV
"RTN","MAGIPOS8",138,0)
 S CNT=0
"RTN","MAGIPOS8",139,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGIPOS8",140,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGIPOS8",141,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XP
"RTN","MAGIPOS8",142,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XP)
"RTN","MAGIPOS8",143,0)
 S ST=$$GET1^DIQ(9.7,IDA,11,"I")
"RTN","MAGIPOS8",144,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGIPOS8",145,0)
 S CT=$$GET1^DIQ(9.7,IDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT
"RTN","MAGIPOS8",146,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGIPOS8",147,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGIPOS8",148,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGIPOS8",149,0)
 S COM=$$GET1^DIQ(9.7,IDA,6,"I")
"RTN","MAGIPOS8",150,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_COM
"RTN","MAGIPOS8",151,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_DATE
"RTN","MAGIPOS8",152,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$$GET1^DIQ(9.7,IDA,9,"E")
"RTN","MAGIPOS8",153,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$$GET1^DIQ(9.7,IDA,.01,"E")
"RTN","MAGIPOS8",154,0)
 S DDATE=$$GET1^DIQ(9.7,IDA,51,"I")
"RTN","MAGIPOS8",155,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGIPOS8",156,0)
 S XMSUB=XP_" INSTALLATION"
"RTN","MAGIPOS8",157,0)
 S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGIPOS8",158,0)
 S XMY(XMID)=""
"RTN","MAGIPOS8",159,0)
 S XMY("G.MAG SERVER")=""
"RTN","MAGIPOS8",160,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGIPOS8",161,0)
 S XMSUB=$E(XMSUB,1,63)
"RTN","MAGIPOS8",162,0)
 D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ,)
"RTN","MAGIPOS8",163,0)
 I $G(XMERR) M XMERR=^TMP("XMERR",$J) S $EC=",U13-Cannot send MailMan message,"
"RTN","MAGIPOS8",164,0)
 Q
"RTN","MAGIPOS8",165,0)
CHTYP ;Change CLASS of INDEX TYPE:  ADVANCE DIRECTIVE to CLIN/ADMIN
"RTN","MAGIPOS8",166,0)
 N I,J
"RTN","MAGIPOS8",167,0)
 S I=$O(^MAG(2005.82,"B","CLIN/ADMIN","")) Q:'I
"RTN","MAGIPOS8",168,0)
 S J=$O(^MAG(2005.83,"B","ADVANCE DIRECTIVE","")) Q:'J
"RTN","MAGIPOS8",169,0)
 S $P(^MAG(2005.83,J,0),"^",2)=I
"RTN","MAGIPOS8",170,0)
 Q
"RTN","MAGLOG")
0^30^B6490989
"RTN","MAGLOG",1,0)
MAGLOG ;WOIFO/RED,SRR,MLH - Log image access ; [ 06/20/2001 08:57 ]
"RTN","MAGLOG",2,0)
 ;;3.0;IMAGING;**17,8**;Sep 15, 2004
"RTN","MAGLOG",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGLOG",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGLOG",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGLOG",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGLOG",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGLOG",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGLOG",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGLOG",10,0)
 ;; |                                                               |
"RTN","MAGLOG",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGLOG",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGLOG",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGLOG",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGLOG",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGLOG",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGLOG",17,0)
 ;;
"RTN","MAGLOG",18,0)
 ; CALL WITH:
"RTN","MAGLOG",19,0)
 ; MAGIMT = TYPE OF ACCESS
"RTN","MAGLOG",20,0)
 ; DUZ = USER NO.
"RTN","MAGLOG",21,0)
 ; MAGO = IMAGE SUBSCRIPT NO.
"RTN","MAGLOG",22,0)
 ; MAGPACK = USER INTERFACE PACKAGE
"RTN","MAGLOG",23,0)
 ; MAGDFN = PATIENT NO.
"RTN","MAGLOG",24,0)
 ; MAGCT = TOTAL IMAGE COUNT
"RTN","MAGLOG",25,0)
 ; MAGAD = ADDITIONAL DATA
"RTN","MAGLOG",26,0)
ENTRY(MAGIMT,MAGDUZ,MAGO,MAGPACK,MAGDFN,MAGCT,MAGAD) ;
"RTN","MAGLOG",27,0)
 I '$D(MAGSYS) S MAGSYS=^%ZOSF("VOL")
"RTN","MAGLOG",28,0)
 N MAGC,MSYS
"RTN","MAGLOG",29,0)
 S MSYS=$$UP^XLFSTR(MAGSYS)
"RTN","MAGLOG",30,0)
 I (MSYS["UNKNOWN"),($D(MAGJOB("WRKSIEN"))) S MSYS=$P(^MAG(2006.81,MAGJOB("WRKSIEN"),0),"^",1)
"RTN","MAGLOG",31,0)
 L +^MAG(2006.95,0):10 E  Q  ;entries were being overwritten.
"RTN","MAGLOG",32,0)
 S MAGC=$P(^MAG(2006.95,0),"^",3)+1
"RTN","MAGLOG",33,0)
 S $P(^MAG(2006.95,0),"^",3,4)=MAGC_"^"_MAGC
"RTN","MAGLOG",34,0)
 L -^MAG(2006.95,0)
"RTN","MAGLOG",35,0)
 D NOW^%DTC ;gives us % (now)
"RTN","MAGLOG",36,0)
 ;   FLD #'s            .01         1                2          3          4             5         6       7          8               9  
"RTN","MAGLOG",37,0)
 S ^MAG(2006.95,MAGC,0)=MAGC_"^"_$G(MAGIMT)_"^"_$G(MAGDUZ)_"^"_MAGO_"^"_MAGPACK_"^"_MSYS_"^"_%_"^"_MAGDFN_"^"_MAGCT_"^"_+$G(MAGJOB("SESSION"))
"RTN","MAGLOG",38,0)
 I $D(MAGAD) S ^MAG(2006.95,MAGC,100)=MAGAD
"RTN","MAGLOG",39,0)
 S ^MAG(2006.95,"B",MAGC,MAGC)=""
"RTN","MAGLOG",40,0)
 I $G(MAGJOB("SESSION")) S ^MAG(2006.95,"AS",+$G(MAGJOB("SESSION")),MAGC)=""
"RTN","MAGLOG",41,0)
 Q
"RTN","MAGLOG",42,0)
ACCESS(MAGO) ; Update Field "Last Access Date" in Image File.
"RTN","MAGLOG",43,0)
 S %H=$H D YMD^%DTC
"RTN","MAGLOG",44,0)
 S $P(^MAG(2005,MAGO,0),"^",9)=X
"RTN","MAGLOG",45,0)
 Q
"RTN","MAGQBAB")
0^62^B9913534
"RTN","MAGQBAB",1,0)
MAGQBAB ;WOIFO/PMK/RMP - Create an ABSTRACT from an image file [ 06/20/2001 08:57 ]
"RTN","MAGQBAB",2,0)
 ;;3.0;IMAGING;**1,8**;Sep 15, 2004
"RTN","MAGQBAB",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBAB",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBAB",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBAB",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBAB",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBAB",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBAB",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBAB",10,0)
 ;; |                                                               |
"RTN","MAGQBAB",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBAB",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBAB",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBAB",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBAB",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBAB",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBAB",17,0)
 ;;
"RTN","MAGQBAB",18,0)
ENTRY(RESULT,QPTR) ;
"RTN","MAGQBAB",19,0)
 ; RESULT=STATUS^IMAGE PTR^FROM FILEPATH^ABSTRACT FILEPATH^QPTR^VWP^QSN
"RTN","MAGQBAB",20,0)
 ; VWP=VISTA WRITE LOCATION,QSN=QUEUE SEQUENCE NUMBER
"RTN","MAGQBAB",21,0)
 N IMGPTR,L,X,MAGXX,FILENAME,FILE,ABSNAME,JBPATH
"RTN","MAGQBAB",22,0)
 N MAGNODE,MAGFILE,MAGFILE2,QSN,QNODE,MAGDRIVE,CWL
"RTN","MAGQBAB",23,0)
 S U="^",QNODE=$G(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBAB",24,0)
 S IMGPTR=$P(QNODE,U,7),QSN=+$P(QNODE,U,9)
"RTN","MAGQBAB",25,0)
 S MAGNODE=$G(^MAG(2005,IMGPTR,0))
"RTN","MAGQBAB",26,0)
 I $P(MAGNODE,U,2)="" D  Q
"RTN","MAGQBAB",27,0)
 . S RESULT="-1^"_QPTR_"^File not present^^^^"_QSN
"RTN","MAGQBAB",28,0)
 . Q
"RTN","MAGQBAB",29,0)
 I $P(MAGNODE,U,4)?1N.N D  Q
"RTN","MAGQBAB",30,0)
 . S RESULT="-1^"_QPTR_"^An .ABS file is already referenced on the Vista cache ^^^^"_QSN
"RTN","MAGQBAB",31,0)
 . Q
"RTN","MAGQBAB",32,0)
 I $P(MAGNODE,U,3)="" D  Q
"RTN","MAGQBAB",33,0)
 . I $P(MAGNODE,U,5)?1N.N D  Q
"RTN","MAGQBAB",34,0)
 . . N QN,TMP
"RTN","MAGQBAB",35,0)
 . . S QN=$$JBTOHD^MAGBAPI(IMGPTR_U_"FULL")
"RTN","MAGQBAB",36,0)
 . . S TMP="Full File is not on the VC, a JBTOHD queue will retrieve and the ABSTRACT will be requeued"
"RTN","MAGQBAB",37,0)
 . . S RESULT="-15^"_QPTR_U_TMP_"^^"_QPTR_"^^"_QSN
"RTN","MAGQBAB",38,0)
 . . Q
"RTN","MAGQBAB",39,0)
 . S RESULT="-2^"_QPTR_"^File not available on the Vista network^^"_QPTR_"^^"_QSN
"RTN","MAGQBAB",40,0)
 ; get the path and file name for this image
"RTN","MAGQBAB",41,0)
 S MAGXX=IMGPTR D VSTNOCP^MAGFILEB I $P(MAGFILE1,U)="-1" D  Q
"RTN","MAGQBAB",42,0)
 . S RESULT="-3^"_QPTR_"^File not on-line^^"_QPTR_"^^"_QSN
"RTN","MAGQBAB",43,0)
 S FILENAME=MAGFILE
"RTN","MAGQBAB",44,0)
 S L=$L(FILENAME) I '$A(FILENAME,L) S FILENAME=$E(FILENAME,1,L-1)
"RTN","MAGQBAB",45,0)
 S L=$L(FILENAME,"\") ; parse the file
"RTN","MAGQBAB",46,0)
 S FILE=$P(FILENAME,"\",L)
"RTN","MAGQBAB",47,0)
 K MAGFILE1
"RTN","MAGQBAB",48,0)
 ;
"RTN","MAGQBAB",49,0)
 S JBPATH=$P(MAGNODE,U,5)
"RTN","MAGQBAB",50,0)
 S JBPATH=$S('JBPATH:"",1:$P(^MAG(2005.2,JBPATH,0),U,2)_$$DIRHASH^MAGFILEB(FILE,JBPATH))
"RTN","MAGQBAB",51,0)
 S CWL=$$CWL^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2)))),MAGDRIVE=$P(^MAG(2005.2,CWL,0),U,2)
"RTN","MAGQBAB",52,0)
 S ABSNAME=MAGDRIVE_$$DIRHASH^MAGFILEB(FILE,CWL)
"RTN","MAGQBAB",53,0)
 S ABSNAME=ABSNAME_$P(FILE,".")_".ABS"
"RTN","MAGQBAB",54,0)
 S RESULT="1"_U_IMGPTR_U_FILENAME_U_ABSNAME_U_QPTR_U_CWL_U_QSN_U_JBPATH
"RTN","MAGQBAB",55,0)
 Q
"RTN","MAGQBGCC")
0^63^B10461667
"RTN","MAGQBGCC",1,0)
MAGQBGCC ;WOIFO/RMP - Export an image file to a remote location  [ 06/20/2001 08:57 ]
"RTN","MAGQBGCC",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGQBGCC",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBGCC",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBGCC",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBGCC",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBGCC",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBGCC",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBGCC",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBGCC",10,0)
 ;; |                                                               |
"RTN","MAGQBGCC",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBGCC",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBGCC",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBGCC",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBGCC",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBGCC",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBGCC",17,0)
 ;;
"RTN","MAGQBGCC",18,0)
ENTRY(RESULT,QPTR) ; entry point from ^MAGQBTM
"RTN","MAGQBGCC",19,0)
 ; RESULT=STATUS^IMAGE PTR^FROM FILE^TO FILE^QUEUE PTR^REMOTELOC PTR^QSN
"RTN","MAGQBGCC",20,0)
 ; QSN=QUEUE SEQUENCE NUMBER
"RTN","MAGQBGCC",21,0)
 N CWL,IMGPTR,L,FILE,MAGREF,TOFILE,QNODE,QSN,ZNODE,SOURCE,FTYPE,MSG,EXT,ALTDEST,ALTTYPE
"RTN","MAGQBGCC",22,0)
 S QNODE=$G(^MAGQUEUE(2006.03,QPTR,0)),RESULT="1"
"RTN","MAGQBGCC",23,0)
 S IMGPTR=$P(QNODE,U,7),QSN=+$P(QNODE,U,9),ALTDEST=+$P(QNODE,U,10),ALTTYPE=$P(QNODE,U,11)
"RTN","MAGQBGCC",24,0)
 S ZNODE=$G(^MAG(2005,IMGPTR,0))
"RTN","MAGQBGCC",25,0)
 I ZNODE="" D  Q  ;RESULT ;!!!!
"RTN","MAGQBGCC",26,0)
 . S RESULT="-101^"_QPTR_"^MAG Global Node #"_IMGPTR_" not present"
"RTN","MAGQBGCC",27,0)
 S FILE=$P(ZNODE,U,2)
"RTN","MAGQBGCC",28,0)
 I FILE="" D  Q  ;RESULT ;!!!
"RTN","MAGQBGCC",29,0)
 . I +$P($G(^MAG(2005,IMGPTR,1,0)),U,4)>0 D
"RTN","MAGQBGCC",30,0)
 . . S MSG="Image group parent"
"RTN","MAGQBGCC",31,0)
 . E  S MSG="Does not have an image file specified"
"RTN","MAGQBGCC",32,0)
 . S RESULT="-5"_U_QPTR_U_MSG
"RTN","MAGQBGCC",33,0)
 S FTYPE=$S(ALTTYPE="":"FULL",1:$$FTYPE^MAGQBPRG(ALTTYPE))
"RTN","MAGQBGCC",34,0)
 D @(FTYPE_"(.RESULT,.MAGREF,IMGPTR)")
"RTN","MAGQBGCC",35,0)
 Q:$P(RESULT,"^")<0
"RTN","MAGQBGCC",36,0)
 S SOURCE=$$WPATH(FILE,MAGREF)_FILE
"RTN","MAGQBGCC",37,0)
 S L=+$P(QNODE,"^",10)
"RTN","MAGQBGCC",38,0)
 S CWL=$S(L>0:L,1:$$CWL^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2)))))
"RTN","MAGQBGCC",39,0)
 I $P(^MAG(2005.2,CWL,0),"^",6)'="1" D  Q
"RTN","MAGQBGCC",40,0)
 . S RESULT="-4"_U_IMGPTR_U_"Export Network Location is set Off-Line"
"RTN","MAGQBGCC",41,0)
 S TOFILE=$$WPATH(FILE,CWL)_FILE
"RTN","MAGQBGCC",42,0)
 S RESULT="1^"_IMGPTR_U_SOURCE_U_TOFILE_U_QPTR_U_CWL_U_QSN_U_$P(QNODE,U,11)
"RTN","MAGQBGCC",43,0)
 Q
"RTN","MAGQBGCC",44,0)
WPATH(FILE,LOC) ; Write path of location (CWP)
"RTN","MAGQBGCC",45,0)
 Q $P(^MAG(2005.2,LOC,0),"^",2)_$$DIRHASH^MAGFILEB(FILE,LOC)
"RTN","MAGQBGCC",46,0)
FULL(RESULT,MAGREF,MAGIFN) ; copy a full-size image
"RTN","MAGQBGCC",47,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",3)
"RTN","MAGQBGCC",48,0)
 I MAGREF'?1N.N S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",5)
"RTN","MAGQBGCC",49,0)
 S:MAGREF'?1N.N RESULT="-3"_U_QPTR_U_"File not on-line"
"RTN","MAGQBGCC",50,0)
 Q 
"RTN","MAGQBGCC",51,0)
 ;
"RTN","MAGQBGCC",52,0)
ABS(RESULT,MAGREF,MAGIFN) ; copy an image abstract
"RTN","MAGQBGCC",53,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",4)
"RTN","MAGQBGCC",54,0)
 I MAGREF'?1N.N S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",5)
"RTN","MAGQBGCC",55,0)
 S:MAGREF'?1N.N RESULT="-3"_U_QPTR_U_"Abstract File not on-line"
"RTN","MAGQBGCC",56,0)
 Q 
"RTN","MAGQBGCC",57,0)
 ;
"RTN","MAGQBGCC",58,0)
BIG(RESULT,MAGREF,MAGIFN) ; copy a big image
"RTN","MAGQBGCC",59,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,"FBIG"),"^",2)
"RTN","MAGQBGCC",60,0)
 I MAGREF'?1N.N S MAGREF=$P(^MAG(2005,MAGIFN,"FBIG"),"^")
"RTN","MAGQBGCC",61,0)
 S:MAGREF'?1N.N RESULT="-3"_U_QPTR_U_"Big File not on-line"
"RTN","MAGQBGCC",62,0)
 Q
"RTN","MAGQBGCC",63,0)
 ;
"RTN","MAGQBJB")
0^64^B14181194
"RTN","MAGQBJB",1,0)
MAGQBJB ;WOIFO/PMK/RMP - Get an image file to copy to the JukeBoX [ 06/20/2001 08:57 ]
"RTN","MAGQBJB",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGQBJB",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBJB",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBJB",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBJB",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBJB",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBJB",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBJB",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBJB",10,0)
 ;; |                                                               |
"RTN","MAGQBJB",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBJB",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBJB",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBJB",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBJB",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBJB",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBJB",17,0)
 ;;
"RTN","MAGQBJB",18,0)
ENTRY(RESULT,QPTR) ; entry point from ^MAGQBTM
"RTN","MAGQBJB",19,0)
 ; RESULT=STATUS^IMAGE PTR^FROM FILE^TO FILE^VOLUME NAME^
"RTN","MAGQBJB",20,0)
 ;   JUKEBOX DEVICE^QUEUE PTR^JUKEBOX-NETWORK LOC PTR^QSN
"RTN","MAGQBJB",21,0)
 ; QSN=QUEUE SEQUENCE NUMBER
"RTN","MAGQBJB",22,0)
 N CWP,IMGPTR,L,JBDEVICE,FILENAME,FILE,X,JBPTR,SUBDIR
"RTN","MAGQBJB",23,0)
 N MAGFILE,MAGXX,MAGSTORE,MAGFILE2,PERCENT,SIZERTN,MAGDEV
"RTN","MAGQBJB",24,0)
 N TOFILE,TOTAL,QNODE,QSN,ZNODE,BNODE,FULL,ABS,BIG,MSG
"RTN","MAGQBJB",25,0)
 S U="^",QNODE=$G(^MAGQUEUE(2006.03,QPTR,0)),(ZNODE,FULL,ABS,BIG)=""
"RTN","MAGQBJB",26,0)
 S IMGPTR=$P(QNODE,U,7),QSN=+$P(QNODE,U,9)
"RTN","MAGQBJB",27,0)
 K ^MAGQUEUE(2006.03,"JX",IMGPTR,QPTR)
"RTN","MAGQBJB",28,0)
 I $D(^MAG(2005,IMGPTR,0)) D
"RTN","MAGQBJB",29,0)
 . S ZNODE=$G(^MAG(2005,IMGPTR,0))
"RTN","MAGQBJB",30,0)
 . S BNODE=$G(^MAG(2005,IMGPTR,"FBIG"))
"RTN","MAGQBJB",31,0)
 . Q
"RTN","MAGQBJB",32,0)
 E  I $D(^MAG(2005.1,IMGPTR,0)) D
"RTN","MAGQBJB",33,0)
 . S ZNODE=$G(^MAG(2005.1,IMGPTR,0))
"RTN","MAGQBJB",34,0)
 . S BNODE=$G(^MAG(2005.1,IMGPTR,"FBIG"))
"RTN","MAGQBJB",35,0)
 . Q
"RTN","MAGQBJB",36,0)
 I ZNODE="" D  Q  ;RESULT ;!!!!
"RTN","MAGQBJB",37,0)
 . S RESULT="-101^"_QPTR_"^MAG Global Node #"_IMGPTR_" not present"
"RTN","MAGQBJB",38,0)
 S FILE=$P(ZNODE,U,2)
"RTN","MAGQBJB",39,0)
 I FILE="" D  Q  ;RESULT ;!!!
"RTN","MAGQBJB",40,0)
 . I +$P($G(^MAG(2005,IMGPTR,1,0)),U,4)>0 D
"RTN","MAGQBJB",41,0)
 . . S MSG="Image group parent"
"RTN","MAGQBJB",42,0)
 . E  S MSG="Does not have an image file specified"
"RTN","MAGQBJB",43,0)
 . S RESULT="-5"_U_QPTR_U_MSG
"RTN","MAGQBJB",44,0)
 I $P(ZNODE,U,3)?1N.N,$P(ZNODE,U,5)="" D
"RTN","MAGQBJB",45,0)
 . S MAGDEV=$P(^MAG(2005.2,$P(ZNODE,U,3),0),U,2)
"RTN","MAGQBJB",46,0)
 . S FULL=MAGDEV_$$DIRHASH^MAGFILEB(FILE,$P(ZNODE,U,3))_FILE
"RTN","MAGQBJB",47,0)
 I $P(ZNODE,U,4)?1N.N D
"RTN","MAGQBJB",48,0)
 . S MAGDEV=$P(^MAG(2005.2,$P(ZNODE,U,4),0),U,2)
"RTN","MAGQBJB",49,0)
 . S ABS=MAGDEV_$$DIRHASH^MAGFILEB(FILE,$P(ZNODE,U,4))
"RTN","MAGQBJB",50,0)
 . S ABS=ABS_$P(FILE,".")_".ABS"
"RTN","MAGQBJB",51,0)
 I $P(BNODE,U)?1N.N,$P(BNODE,U,2)="" D
"RTN","MAGQBJB",52,0)
 . S MAGDEV=$P(^MAG(2005.2,$P(BNODE,U),0),U,2)
"RTN","MAGQBJB",53,0)
 . S BIG=MAGDEV_$$DIRHASH^MAGFILEB(FILE,$P(BNODE,U))
"RTN","MAGQBJB",54,0)
 . S BIG=BIG_$P(FILE,".")_".BIG"
"RTN","MAGQBJB",55,0)
 I FULL="",BIG="",ABS="" D  Q
"RTN","MAGQBJB",56,0)
 . S MSG=$S(('$P(BNODE,U))&('$P(ZNODE,U,4))&('$P(ZNODE,U,4)):"No Vista Cache Source",1:"")
"RTN","MAGQBJB",57,0)
 . S MSG=$S((('MSG)&($P(BNODE,U,2)!$P(ZNODE,U,5))):"Source file is already archived",1:MSG)
"RTN","MAGQBJB",58,0)
 . S MSG=$S('MSG:"No Network location OR already on WORM",1:MSG)
"RTN","MAGQBJB",59,0)
 . S RESULT="-11^"_QPTR_"^"_MSG
"RTN","MAGQBJB",60,0)
 S CWP=$$CWP^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBJB",61,0)
 I $P(^MAG(2005.2,CWP,0),"^",6)'="1" D  Q
"RTN","MAGQBJB",62,0)
 . S RESULT="-4"_U_IMGPTR_U_"Jukebox Network Location is set Off-Line"
"RTN","MAGQBJB",63,0)
 S JBPTR=$$JBPTR^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBJB",64,0)
 S JBDEVICE=$$JBDEV(JBPTR)
"RTN","MAGQBJB",65,0)
 K MAGFILE1
"RTN","MAGQBJB",66,0)
 S TOFILE=$$WPATH(FILE,CWP)_FILE
"RTN","MAGQBJB",67,0)
 S RESULT="1^"_IMGPTR_U_FULL_U_TOFILE_U
"RTN","MAGQBJB",68,0)
 S RESULT=RESULT_$$VOLNM(JBPTR)_U_JBDEVICE_U_QPTR_U_CWP_U_QSN_U_ABS_U_BIG
"RTN","MAGQBJB",69,0)
 Q  ;RESULT ;!!!
"RTN","MAGQBJB",70,0)
JBLPT(JBPTR) ; Jukebox Ptr to Network Location File
"RTN","MAGQBJB",71,0)
 Q $P(^MAGQUEUE(2006.032,JBPTR,0),U,3)
"RTN","MAGQBJB",72,0)
WPATH(FILE,CWP) ; Write path of Current Write Platter (CWP)
"RTN","MAGQBJB",73,0)
 Q $P(^MAG(2005.2,CWP,0),"^",2)_$$DIRHASH^MAGFILEB(FILE,CWP)
"RTN","MAGQBJB",74,0)
VOLNM(JBPTR) ; Volume name of JBDEVICE
"RTN","MAGQBJB",75,0)
 Q $P($G(^MAGQUEUE(2006.032,JBPTR,0)),"^",9)
"RTN","MAGQBJB",76,0)
JBDEV(JBPTR) ; Jukebox Device (drive spec)
"RTN","MAGQBJB",77,0)
 Q $P($G(^MAGQUEUE(2006.032,JBPTR,0)),"^",2)
"RTN","MAGQBJH")
0^65^B23150331
"RTN","MAGQBJH",1,0)
MAGQBJH ;WOIFO/PMK/RMP - Copy an image from the Jukebox to the Hard Disk [ 06/20/2001 08:57 ]
"RTN","MAGQBJH",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGQBJH",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBJH",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBJH",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBJH",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBJH",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBJH",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBJH",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBJH",10,0)
 ;; |                                                               |
"RTN","MAGQBJH",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBJH",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBJH",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBJH",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBJH",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBJH",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBJH",17,0)
 ;;
"RTN","MAGQBJH",18,0)
 ; RESULT=STATUS^MAGIFN^FROMPATH^TOPATH^FILETYPE^QPTR^VWP^QSN
"RTN","MAGQBJH",19,0)
 ; VWP = VISTA WRITE-LOCATION POINTER, QSN=QUEUE SEQUENCE NUMBER
"RTN","MAGQBJH",20,0)
ENTRY(RESULT,QPTR) ; entry point from ^MAGBMAIN
"RTN","MAGQBJH",21,0)
 N NODE,X,MAGIFN,FILETYPE,MAGXX,STATUS,TODAY,MAGPIECE,MAGREF
"RTN","MAGQBJH",22,0)
 N FROMPATH,TOPATH,MAGFILE,MAGFILE2,QSN,MSG
"RTN","MAGQBJH",23,0)
 S U="^",NODE=^MAGQUEUE(2006.03,QPTR,0),QSN=+$P(NODE,U,9)
"RTN","MAGQBJH",24,0)
 I "^JBTOHD^PREFET^"'[(U_$P(NODE,U)_U) D  Q
"RTN","MAGQBJH",25,0)
 . S RESULT="-4"_U_QPTR_U_"Not a Jukebox to HardDisk Process"
"RTN","MAGQBJH",26,0)
 S MAGIFN=$P(NODE,U,7),FILETYPE=$P(NODE,U,8)
"RTN","MAGQBJH",27,0)
 D NOW^%DTC S TODAY=X
"RTN","MAGQBJH",28,0)
 I "^FULL^ABSTRACT^BIG^"'[("^"_FILETYPE_"^") D  Q
"RTN","MAGQBJH",29,0)
 . S RESULT="-4"_U_QPTR_U_FILETYPE_" Is not a Jukebox to HardDisk Process"
"RTN","MAGQBJH",30,0)
 I $P(^MAG(2005,MAGIFN,0),U,2)="" D  Q
"RTN","MAGQBJH",31,0)
 . I +$P($G(^MAG(2005,MAGIFN,1,0)),U,4)>0 D
"RTN","MAGQBJH",32,0)
 . . S MSG="Image group parent"
"RTN","MAGQBJH",33,0)
 . E  S MSG="Does not have an image file specified"
"RTN","MAGQBJH",34,0)
 . S RESULT="-5"_U_QPTR_U_MSG
"RTN","MAGQBJH",35,0)
 . K ^MAGQUEUE(2006.03,"JD",MAGIFN,FILETYPE,QPTR)
"RTN","MAGQBJH",36,0)
 D @FILETYPE ; do either FULL or ABSTRACT
"RTN","MAGQBJH",37,0)
 K ^MAGQUEUE(2006.03,"JD",MAGIFN,FILETYPE,QPTR)
"RTN","MAGQBJH",38,0)
 K MAGFILE1
"RTN","MAGQBJH",39,0)
 S RESULT=STATUS
"RTN","MAGQBJH",40,0)
 S $P(RESULT,U,8)=QSN
"RTN","MAGQBJH",41,0)
 Q  ;RESULT ;!!! REMOVE RESULT ON DISTRIBUTION
"RTN","MAGQBJH",42,0)
 ;
"RTN","MAGQBJH",43,0)
FULL ; copy a full-size image
"RTN","MAGQBJH",44,0)
 S MAGXX=MAGIFN D VSTNOCP^MAGFILEB
"RTN","MAGQBJH",45,0)
 I (($P(MAGFILE1,U)="-1")!('$P(^MAG(2005,MAGIFN,0),"^",5))) D  Q 
"RTN","MAGQBJH",46,0)
 . S STATUS="-3"_U_QPTR_U_"File not on-line"
"RTN","MAGQBJH",47,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",3)
"RTN","MAGQBJH",48,0)
 I MAGREF?1N.N D WLSET(.STATUS,MAGIFN,MAGREF,"FULL") Q
"RTN","MAGQBJH",49,0)
 S STATUS=$$COPY() I +STATUS>0 D  ;
"RTN","MAGQBJH",50,0)
 . S $P(^MAG(2005,MAGIFN,0),"^",9)=TODAY ; update the last access date
"RTN","MAGQBJH",51,0)
 Q 
"RTN","MAGQBJH",52,0)
 ;
"RTN","MAGQBJH",53,0)
ABSTRACT ; copy an image abstract
"RTN","MAGQBJH",54,0)
 S MAGXX=MAGIFN D ABSNOCP^MAGFILEB
"RTN","MAGQBJH",55,0)
 I (($P(MAGFILE1,U)="-1")!('$P(^MAG(2005,MAGIFN,0),"^",5))) D  Q
"RTN","MAGQBJH",56,0)
 . S STATUS="-3"_U_QPTR_U_"File not on-line"
"RTN","MAGQBJH",57,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",4)
"RTN","MAGQBJH",58,0)
 I MAGREF?1N.N D WLSET(.STATUS,MAGIFN,MAGREF,"ABSTRACT") Q
"RTN","MAGQBJH",59,0)
 S STATUS=$$COPY() I +STATUS>0 D  ;
"RTN","MAGQBJH",60,0)
 . S $P(^MAG(2005,MAGIFN,0),"^",9)=TODAY ; update the last access date
"RTN","MAGQBJH",61,0)
 Q 
"RTN","MAGQBJH",62,0)
 ;
"RTN","MAGQBJH",63,0)
BIG ; copy a big image
"RTN","MAGQBJH",64,0)
 S MAGXX=MAGIFN D BIGNOCP^MAGFILEB
"RTN","MAGQBJH",65,0)
 I (($P(MAGFILE1,U)="-1")!('$P($G(^MAG(2005,MAGIFN,"FBIG")),U,2))) D  Q
"RTN","MAGQBJH",66,0)
 . S STATUS="-3"_U_QPTR_U_"Big File not on-line"
"RTN","MAGQBJH",67,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,"FBIG"),U)
"RTN","MAGQBJH",68,0)
 I MAGREF?1N.N D WLSET(.STATUS,MAGIFN,MAGREF,"BIG") Q
"RTN","MAGQBJH",69,0)
 S STATUS=$$COPY() I +STATUS>0 D  ;
"RTN","MAGQBJH",70,0)
 . S $P(^MAG(2005,MAGIFN,0),"^",9)=TODAY ; update the last access date
"RTN","MAGQBJH",71,0)
 Q 
"RTN","MAGQBJH",72,0)
 ;
"RTN","MAGQBJH",73,0)
WLSET(STATUS,MAGIFN,MAGREF,TYPE) ;Write Location set already
"RTN","MAGQBJH",74,0)
 N JBREF,JBPATH,CWL,SOURCE,DEST,ALTDEST,ONLINE,PATH
"RTN","MAGQBJH",75,0)
 S $P(^MAG(2005,MAGIFN,0),U,9)=TODAY ; update the last access date
"RTN","MAGQBJH",76,0)
 ; output the warning message
"RTN","MAGQBJH",77,0)
 S JBREF=$S(TYPE="BIG":$P($G(^MAG(2005,MAGIFN,"FBIG")),U,2),1:$P(^MAG(2005,MAGIFN,0),U,5))
"RTN","MAGQBJH",78,0)
 S JBPATH=$P(^MAG(2005.2,JBREF,0),U,2)
"RTN","MAGQBJH",79,0)
 S JBPATH=JBPATH_$$DIRHASH^MAGFILEB(MAGFILE1,JBREF)
"RTN","MAGQBJH",80,0)
 S CWL=$$CWL^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBJH",81,0)
 S SOURCE=JBPATH_MAGFILE1
"RTN","MAGQBJH",82,0)
 S ONLINE=$P(^MAG(2005.2,MAGREF,0),U,6)
"RTN","MAGQBJH",83,0)
 ;If the current magnetic write location is on line the first
"RTN","MAGQBJH",84,0)
 ;destination path will be to that path and the 2nd path is the 
"RTN","MAGQBJH",85,0)
 ;current write location
"RTN","MAGQBJH",86,0)
 S PATH=$P(^MAG(2005.2,$S(ONLINE:MAGREF,1:CWL),0),U,2)
"RTN","MAGQBJH",87,0)
 S DEST=PATH_$$DIRHASH^MAGFILEB(MAGFILE1,$S(ONLINE:MAGREF,1:CWL))_MAGFILE1
"RTN","MAGQBJH",88,0)
 S:ONLINE ALTDEST=$P(^MAG(2005.2,CWL,0),U,2)_$$DIRHASH^MAGFILEB(MAGFILE1,CWL)_MAGFILE1
"RTN","MAGQBJH",89,0)
 S STATUS="2^"_MAGIFN_U_SOURCE_U_DEST
"RTN","MAGQBJH",90,0)
 S STATUS=STATUS_U_FILETYPE_U_QPTR_U_$S(ONLINE:MAGREF,1:CWL)_U_QSN
"RTN","MAGQBJH",91,0)
 S:ONLINE STATUS=STATUS_U_ALTDEST_U_CWL
"RTN","MAGQBJH",92,0)
 Q
"RTN","MAGQBJH",93,0)
 ;
"RTN","MAGQBJH",94,0)
COPY() ; copy an image file from the jukebox to the hard drive
"RTN","MAGQBJH",95,0)
 N MAGREF,MAGDRIVE
"RTN","MAGQBJH",96,0)
 D GETDRIVE(.MAGDRIVE,.MAGREF) ;^MAGFILE ; find space to put file
"RTN","MAGQBJH",97,0)
 I MAGREF'?1N.N Q "-4^"_QPTR_"^Current Write Location is not SET"
"RTN","MAGQBJH",98,0)
 I +$P(^MAG(2005.2,MAGREF,0),"^",6)'>0 Q "-4^"_QPTR_"^Current Write Location is OFFLINE"
"RTN","MAGQBJH",99,0)
 S TOPATH=MAGDRIVE_$$DIRHASH^MAGFILEB(MAGFILE1,MAGREF)_MAGFILE1
"RTN","MAGQBJH",100,0)
 S FROMPATH=MAGFILE2
"RTN","MAGQBJH",101,0)
 Q "1"_U_MAGIFN_U_FROMPATH_U_TOPATH_U_FILETYPE_U_QPTR_U_MAGREF
"RTN","MAGQBJH",102,0)
GETDRIVE(DRIVE,MAGREF) ; Get the current drive for writing an image
"RTN","MAGQBJH",103,0)
 S MAGREF=$$CWL^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBJH",104,0)
 S DRIVE=$S('MAGREF:"",1:$P(^MAG(2005.2,MAGREF,0),U,2))
"RTN","MAGQBJH",105,0)
 Q
"RTN","MAGQBJH",106,0)
 ;
"RTN","MAGQBPG1")
0^66^B48703244
"RTN","MAGQBPG1",1,0)
MAGQBPG1 ;WOIFO/RMP - REMOTE Task SERVER Program [ 11/08/2001 17:18 ]
"RTN","MAGQBPG1",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGQBPG1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBPG1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBPG1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBPG1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBPG1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBPG1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBPG1",10,0)
 ;; |                                                               |
"RTN","MAGQBPG1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBPG1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBPG1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBPG1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBPG1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBPG1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG1",17,0)
 ;;
"RTN","MAGQBPG1",18,0)
ENTRY(RESULT,WSTAT,PROCESS) ;RPC[MAGQ JBS]
"RTN","MAGQBPG1",19,0)
 N X,SYSIEN,SYSNAME,ZNODE,NODE,INDX,CNT,PROC,%,QPTR,QCNT,SHARE,PLACE
"RTN","MAGQBPG1",20,0)
 D NOW^%DTC
"RTN","MAGQBPG1",21,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",22,0)
 S (SYSIEN,CNT)=0,SYSNAME="",U="^",PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPG1",23,0)
 S SYSIEN=$O(^MAG(2006.8,"C",WSTAT,"")) ;TRUE WORKSTATION NAME
"RTN","MAGQBPG1",24,0)
 I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",$$UPPER^MAGQE4(WSTAT),""))
"RTN","MAGQBPG1",25,0)
 I 'SYSIEN D  ;ATTEMPT TO FIND A MATCH FROM LOCAL NAME
"RTN","MAGQBPG1",26,0)
 . N TRY
"RTN","MAGQBPG1",27,0)
 . F TRY=1:1:$L(WSTAT,".") D  Q:SYSIEN?1N.N
"RTN","MAGQBPG1",28,0)
 . . S SYSIEN=$O(^MAG(2006.8,"C",$P(WSTAT,".",TRY),""))
"RTN","MAGQBPG1",29,0)
 . . I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",$$UPPER^MAGQE4($P(WSTAT,".",TRY)),""))
"RTN","MAGQBPG1",30,0)
 I SYSIEN="" D  Q
"RTN","MAGQBPG1",31,0)
 . S RESULT(0)="-1^This workstation is not currently setup as a Background Processor."
"RTN","MAGQBPG1",32,0)
 . Q
"RTN","MAGQBPG1",33,0)
 S NODE=^MAG(2006.8,SYSIEN,0)
"RTN","MAGQBPG1",34,0)
 S SYSNAME=$P(NODE,U)
"RTN","MAGQBPG1",35,0)
 I SYSNAME="" D  Q
"RTN","MAGQBPG1",36,0)
 . S RESULT(0)="-1^This workstation is not currently setup as a Background Processor."
"RTN","MAGQBPG1",37,0)
 . Q
"RTN","MAGQBPG1",38,0)
 S RESULT(0)="0^BP List^PID: "_$$BASE^XLFUTL($J,10,16)_U_SYSNAME_U_WSTAT_U_$P(^MAG(2006.1,PLACE,0),U,2)
"RTN","MAGQBPG1",39,0)
 S (X,CNT)=0
"RTN","MAGQBPG1",40,0)
 F  S X=$O(^MAG(2005.2,X)) Q:X'?1N.N  S ZNODE=^(X,0) D
"RTN","MAGQBPG1",41,0)
 . Q:'$P(ZNODE,U,6)  ;1=on-line
"RTN","MAGQBPG1",42,0)
 . Q:$E($P(ZNODE,U,2),1,2)'="\\"
"RTN","MAGQBPG1",43,0)
 . Q:(($P(ZNODE,U,7)'["WORM")&($P(ZNODE,U,7)'="RW"))
"RTN","MAGQBPG1",44,0)
 . S CNT=CNT+1,SHARE=$P(ZNODE,U,2)
"RTN","MAGQBPG1",45,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBPG1",46,0)
 . S RESULT(CNT)=X_U_SHARE_U_$P(ZNODE,U,8)
"RTN","MAGQBPG1",47,0)
 Q
"RTN","MAGQBPG1",48,0)
JBPTR(RESULT,FILE) ; RPC [MAGQ JBPTR]
"RTN","MAGQBPG1",49,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",50,0)
 N IEN,SITEID
"RTN","MAGQBPG1",51,0)
 S SITEID=$$UPPER^MAGQE4($P(^MAG(2006.1,$$PLACE^MAGBAPI(+$G(DUZ(2))),0),U,2))
"RTN","MAGQBPG1",52,0)
 S IEN=$P(+$P(FILE,SITEID,2),".")
"RTN","MAGQBPG1",53,0)
 S RESULT=$$JBPTR^MAGQBPRG(IEN,$$FTYPE^MAGQBPRG($P(FILE,".",2)))
"RTN","MAGQBPG1",54,0)
 Q
"RTN","MAGQBPG1",55,0)
SHR(RESULT) ; RPC[MAGQ SHARES]
"RTN","MAGQBPG1",56,0)
 N TMP,INDX,DATA,CNT,SHARE,CWL,VALUE ;CWL=CURRENT WRITE LOCATION
"RTN","MAGQBPG1",57,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",58,0)
 S (CNT,INDX)=0,U="^"
"RTN","MAGQBPG1",59,0)
 S CWL=$$CWL^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBPG1",60,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBPG1",61,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBPG1",62,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBPG1",63,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBPG1",64,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBPG1",65,0)
 . S SHARE=$P(DATA,U,2)
"RTN","MAGQBPG1",66,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGQBPG1",67,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBPG1",68,0)
 . S SHARE=SHARE_U_$P(DATA,U,8)
"RTN","MAGQBPG1",69,0)
 . Q:$D(TMP(SHARE))
"RTN","MAGQBPG1",70,0)
 . S TMP(SHARE)=INDX
"RTN","MAGQBPG1",71,0)
 S INDX=""
"RTN","MAGQBPG1",72,0)
 F  S INDX=$O(TMP(INDX)) Q:INDX=""  D
"RTN","MAGQBPG1",73,0)
 . S RESULT(CNT)=TMP(INDX)_U_INDX,CNT=CNT+1
"RTN","MAGQBPG1",74,0)
 . S ^TMP("MAGQBP",$J,"SHRLST",CNT-1)=TMP(INDX)_U_INDX
"RTN","MAGQBPG1",75,0)
 K TMP
"RTN","MAGQBPG1",76,0)
 Q
"RTN","MAGQBPG1",77,0)
CNP2(RESULT,IEN,START,STOP) ;RPC [MAGQ JBSCN]
"RTN","MAGQBPG1",78,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",79,0)
 N FNAME,PIECE,ZNODE,NODE2,BNODE,BNAME,PTR,HASH,TEMP,ORDER,RDATE,PLACE,OFFLINE
"RTN","MAGQBPG1",80,0)
 S RESULT="",PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2))),OFFLINE=0
"RTN","MAGQBPG1",81,0)
 S:START="" START=$O(^MAG(2005,0)) S:STOP="" STOP=$O(^MAG(2005,"A"),-1)
"RTN","MAGQBPG1",82,0)
 S ORDER=$S(START>STOP:"R",1:"F")
"RTN","MAGQBPG1",83,0)
 I (IEN'?1N.N)!IEN=0 D  I IEN="" S RESULT=0 Q
"RTN","MAGQBPG1",84,0)
 . I START=0 S IEN=START Q
"RTN","MAGQBPG1",85,0)
 . S IEN=$S(ORDER="F":$O(^MAG(2005,START),-1),1:$O(^MAG(2005,START)))
"RTN","MAGQBPG1",86,0)
 . Q
"RTN","MAGQBPG1",87,0)
 S IEN=+IEN
"RTN","MAGQBPG1",88,0)
 F  S IEN=$S(ORDER="F":$O(^MAG(2005,IEN)),1:$O(^MAG(2005,IEN),-1)) D  Q:(('OFFLINE)!('IEN))
"RTN","MAGQBPG1",89,0)
 . S ZNODE=$G(^MAG(2005,IEN,0))
"RTN","MAGQBPG1",90,0)
 . Q:($P(ZNODE,U,2)="")  ; Only check the offline status of image files
"RTN","MAGQBPG1",91,0)
 . S OFFLINE=$$IMOFFLN^MAGFILEB($P(ZNODE,U,2))
"RTN","MAGQBPG1",92,0)
 . Q
"RTN","MAGQBPG1",93,0)
 I $S('IEN:1,((ORDER="F")&(IEN>STOP)):1,((ORDER="R")&(IEN<STOP)):1,1:0) D  Q
"RTN","MAGQBPG1",94,0)
 . S RESULT=0
"RTN","MAGQBPG1",95,0)
 . Q
"RTN","MAGQBPG1",96,0)
 S FNAME=$P(ZNODE,U,2)
"RTN","MAGQBPG1",97,0)
 S $P(RESULT,U)=IEN
"RTN","MAGQBPG1",98,0)
 S $P(RESULT,U,19)=$P($P($G(^MAG(2005,IEN,2)),U),".")
"RTN","MAGQBPG1",99,0)
 I $P(ZNODE,U,2)'="" D  ;NON-GROUP PARENT
"RTN","MAGQBPG1",100,0)
 . S BNODE=$G(^MAG(2005,IEN,"FBIG"))
"RTN","MAGQBPG1",101,0)
 . S:$P(ZNODE,U,5)?1N.N $P(RESULT,U,3)=$P(ZNODE,U,5)
"RTN","MAGQBPG1",102,0)
 . I $P(ZNODE,U,5)?1N.N S $P(RESULT,U,3)=$P(ZNODE,U,5)
"RTN","MAGQBPG1",103,0)
 . E  D  ;SET JBPTR TO THE CURRENT JB WRITE LOCATION
"RTN","MAGQBPG1",104,0)
 . . S TEMP=$P(^MAG(2006.1,PLACE,1),U,6)
"RTN","MAGQBPG1",105,0)
 . . S $P(RESULT,U,3)=$P(^MAGQUEUE(2006.032,TEMP,0),U,3)
"RTN","MAGQBPG1",106,0)
 . . Q
"RTN","MAGQBPG1",107,0)
 . S:$P(BNODE,U,2)?1N.N $P(RESULT,U,4)=$P(BNODE,U,2)
"RTN","MAGQBPG1",108,0)
 . S:$P(ZNODE,U,3)?1N.N $P(RESULT,U,5)=$P(ZNODE,U,3)
"RTN","MAGQBPG1",109,0)
 . S:$P(ZNODE,U,4)?1N.N $P(RESULT,U,6)=$P(ZNODE,U,4)
"RTN","MAGQBPG1",110,0)
 . S:$P(BNODE,U)?1N.N $P(RESULT,U,7)=$P(BNODE,U)
"RTN","MAGQBPG1",111,0)
 . S $P(RESULT,U,8)=$$CWL^MAGBAPI(PLACE)
"RTN","MAGQBPG1",112,0)
 . S $P(RESULT,U,2)=FNAME
"RTN","MAGQBPG1",113,0)
 . Q
"RTN","MAGQBPG1",114,0)
 S $P(RESULT,U,12,17)=$$CHKIMG^MAGQBUT2(IEN)
"RTN","MAGQBPG1",115,0)
 Q
"RTN","MAGQBPG1",116,0)
JPUD(RESULT,JPTR,EXT,IEN) ; RPC[MAGQ JPUD]
"RTN","MAGQBPG1",117,0)
 N TYPE,PIECE,NODE
"RTN","MAGQBPG1",118,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP"),RESULT="0"
"RTN","MAGQBPG1",119,0)
 S TYPE=$$FTYPE^MAGQBPRG(EXT)
"RTN","MAGQBPG1",120,0)
 S PIECE=$S(TYPE="BIG":2,1:5)
"RTN","MAGQBPG1",121,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPG1",122,0)
 I PIECE=0 D ELOG^MAGQBPRG(FN,FP) Q
"RTN","MAGQBPG1",123,0)
 S:JPTR="0" JPTR=""
"RTN","MAGQBPG1",124,0)
 I 'JPTR,$D(^MAGQUEUE(2006.033,"B",$P($G(^MAG(2005,IEN,0)),U,2))) D  Q
"RTN","MAGQBPG1",125,0)
 . S RESULT=0 Q  ;Don't clear the JB pointer if image is on an Off-line Platter
"RTN","MAGQBPG1",126,0)
 S:$D(^MAG(2005,IEN,NODE)) $P(^MAG(2005,IEN,NODE),U,PIECE)=JPTR
"RTN","MAGQBPG1",127,0)
 S:$D(^MAG(2005.1,IEN,NODE)) $P(^MAG(2005.1,IEN,NODE),U,PIECE)=JPTR
"RTN","MAGQBPG1",128,0)
 S RESULT="1"
"RTN","MAGQBPG1",129,0)
 Q
"RTN","MAGQBPG1",130,0)
VCUD(RESULT,VCPTR,EXT,IEN) ; RPC[MAGQ VCUD]
"RTN","MAGQBPG1",131,0)
 N TYPE,PIECE,NODE
"RTN","MAGQBPG1",132,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP"),RESULT="0"
"RTN","MAGQBPG1",133,0)
 S TYPE=$$FTYPE^MAGQBPRG(EXT)
"RTN","MAGQBPG1",134,0)
 S PIECE=$S(TYPE="BIG":1,TYPE="ABS":4,1:3)
"RTN","MAGQBPG1",135,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPG1",136,0)
 I PIECE=0 D ELOG^MAGQBPRG(FN,FP) Q
"RTN","MAGQBPG1",137,0)
 S:VCPTR="0" VCPTR=""
"RTN","MAGQBPG1",138,0)
 S:$D(^MAG(2005,IEN,NODE)) $P(^MAG(2005,IEN,NODE),U,PIECE)=VCPTR
"RTN","MAGQBPG1",139,0)
 S:$D(^MAG(2005.1,IEN,NODE)) $P(^MAG(2005.1,IEN,NODE),U,PIECE)=VCPTR
"RTN","MAGQBPG1",140,0)
 S RESULT="1"
"RTN","MAGQBPG1",141,0)
 Q
"RTN","MAGQBPG1",142,0)
DFNIQ(RESULT,INPUT,SEND) ;
"RTN","MAGQBPG1",143,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",144,0)
 N LOC,CNT
"RTN","MAGQBPG1",145,0)
 S U="^"
"RTN","MAGQBPG1",146,0)
 S CNT=+$O(^TMP($J,"MAGQDFN",""),-1)
"RTN","MAGQBPG1",147,0)
 I CNT<2 D
"RTN","MAGQBPG1",148,0)
 . D NOW^%DTC S Y=% D DD^%DT
"RTN","MAGQBPG1",149,0)
 . S LOC=$$KSP^XUPARAM("WHERE")
"RTN","MAGQBPG1",150,0)
 . S ^TMP($J,"MAGQDFN",1)="            SITE: "_LOC
"RTN","MAGQBPG1",151,0)
 . S ^TMP($J,"MAGQDFN",2)="            DATE: "_Y_" "_$G(^XMB("TIMEZONE"))
"RTN","MAGQBPG1",152,0)
 . S CNT=2
"RTN","MAGQBPG1",153,0)
 . Q
"RTN","MAGQBPG1",154,0)
 I SEND="1" D
"RTN","MAGQBPG1",155,0)
 . S XMSUB=INPUT
"RTN","MAGQBPG1",156,0)
 . N XMY,XMTEXT
"RTN","MAGQBPG1",157,0)
 . S XMTEXT="^TMP($J,""MAGQDFN"","
"RTN","MAGQBPG1",158,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGQBPG1",159,0)
 . S:$G(DUZ) XMY(DUZ)=""
"RTN","MAGQBPG1",160,0)
 . D ^XMD
"RTN","MAGQBPG1",161,0)
 . K ^TMP($J,"MAGQDFN")
"RTN","MAGQBPG1",162,0)
 . Q
"RTN","MAGQBPG1",163,0)
 E  S CNT=CNT+1,^TMP($J,"MAGQDFN",CNT)=INPUT
"RTN","MAGQBPG1",164,0)
 S RESULT="1"
"RTN","MAGQBPG1",165,0)
 Q
"RTN","MAGQBPG1",166,0)
MOVE(RESULT,FNAM) ;[MAGQ MOVE]
"RTN","MAGQBPG1",167,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG1",168,0)
 N IEN,FTYPE,NMSPC,SITEID,EXT,ALT,J
"RTN","MAGQBPG1",169,0)
 S NMSPC=$TR($P(FNAM,"."),"0123456789","")
"RTN","MAGQBPG1",170,0)
 S SITEID=$$INIS^MAGQBPG2($$PLACE^MAGBAPI(+DUZ(2)))
"RTN","MAGQBPG1",171,0)
 I SITEID'[(","_NMSPC_",") D  Q
"RTN","MAGQBPG1",172,0)
 . S RESULT="0^Invalid Imaging Namespace"
"RTN","MAGQBPG1",173,0)
 S IEN=$P(+$P(FNAM,NMSPC,2),".") ;NON-CONSOLIDATED VERS.
"RTN","MAGQBPG1",174,0)
 ;S IEN=$O(^MAG(2005,"F",$P(FNAM,"."),"")) ;CONSOLIDATED VERS.
"RTN","MAGQBPG1",175,0)
 I IEN'?1N.N!('$D(^MAG(2005,IEN,0))) D  Q
"RTN","MAGQBPG1",176,0)
 . S RESULT="0^No matching 2005 entry"
"RTN","MAGQBPG1",177,0)
 S EXT=$P(FNAM,".",2)
"RTN","MAGQBPG1",178,0)
 I $P($G(^MAG(2005,IEN,0)),U,2)[FNAM S RESULT=IEN_U_"FULL"
"RTN","MAGQBPG1",179,0)
 E  D
"RTN","MAGQBPG1",180,0)
 . S FTYPE=$$FTYPE^MAGQBPRG(EXT)
"RTN","MAGQBPG1",181,0)
 . I FTYPE="FULL" D  Q
"RTN","MAGQBPG1",182,0)
 . . D FTYPE^MAGQBUT(.ALT)
"RTN","MAGQBPG1",183,0)
 . . S J=""
"RTN","MAGQBPG1",184,0)
 . . F  S J=$O(ALT(J)) Q:J'?1N.N  S:ALT(J)[EXT FTYPE="ALT"
"RTN","MAGQBPG1",185,0)
 . . I FTYPE["ALT" S RESULT=IEN_U_FTYPE
"RTN","MAGQBPG1",186,0)
 . . E  S RESULT="0^Invalid File Extension"
"RTN","MAGQBPG1",187,0)
 . E  S RESULT=IEN_U_FTYPE
"RTN","MAGQBPG1",188,0)
 Q
"RTN","MAGQBPG1",189,0)
 ;
"RTN","MAGQBPG2")
0^75^B21017968
"RTN","MAGQBPG2",1,0)
MAGQBPG2 ;WCIOFO - TS RMP Magnetic Server Purge processes [ 06/29/2001 18:28 ]
"RTN","MAGQBPG2",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGQBPG2",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG2",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBPG2",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBPG2",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBPG2",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBPG2",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBPG2",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBPG2",10,0)
 ;; |                                                               |
"RTN","MAGQBPG2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBPG2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way  |
"RTN","MAGQBPG2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBPG2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBPG2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBPG2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPG2",17,0)
 ;;
"RTN","MAGQBPG2",18,0)
CNP(RESULT,IEN) ; [MAGQ PCHKN]
"RTN","MAGQBPG2",19,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG2",20,0)
 N FNAME,PIECE,ZNODE,BNODE,BNAME,PTR,HASH
"RTN","MAGQBPG2",21,0)
 S IEN=+IEN,RESULT="^^^",U="^"
"RTN","MAGQBPG2",22,0)
 F  S IEN=$O(^MAG(2005,IEN)) Q:IEN'?1N.N  D  Q:RESULT'="^^^"
"RTN","MAGQBPG2",23,0)
 . S ZNODE=$G(^MAG(2005,IEN,0))
"RTN","MAGQBPG2",24,0)
 . S FNAME=$P(ZNODE,U,2)
"RTN","MAGQBPG2",25,0)
 . I (FNAME["\")!(FNAME[":") D
"RTN","MAGQBPG2",26,0)
 . . S FNAME=$$FNX(FNAME)
"RTN","MAGQBPG2",27,0)
 . . S $P(^MAG(2005,IEN,0),U,2)=FNAME
"RTN","MAGQBPG2",28,0)
 . Q:$P(ZNODE,U,2)=""  ;PROBABLE GROUP HEAD
"RTN","MAGQBPG2",29,0)
 . S BNODE=$G(^MAG(2005,IEN,"FBIG"))
"RTN","MAGQBPG2",30,0)
 . S PTR=$P(ZNODE,U,3) I PTR?1N.N D
"RTN","MAGQBPG2",31,0)
 . . S HASH=$P(^MAG(2005.2,PTR,0),U,8)
"RTN","MAGQBPG2",32,0)
 . . S $P(^MAG(2005,IEN,0),U,3)=$$SHNAM^MAGQBPRG($P(^MAG(2005.2,PTR,0),U,2),HASH)
"RTN","MAGQBPG2",33,0)
 . . S $P(RESULT,"^")=$$JBPATH^MAGQBPRG(FNAME,PTR)
"RTN","MAGQBPG2",34,0)
 . S PTR=$P(ZNODE,U,4) I PTR?1N.N D
"RTN","MAGQBPG2",35,0)
 . . S HASH=$P(^MAG(2005.2,PTR,0),U,8)
"RTN","MAGQBPG2",36,0)
 . . S $P(^MAG(2005,IEN,0),U,4)=$$SHNAM^MAGQBPRG($P(^MAG(2005.2,PTR,0),U,2),HASH)
"RTN","MAGQBPG2",37,0)
 . . S $P(RESULT,U,2)=$$JBPATH^MAGQBPRG($P(FNAME,".")_".ABS",PTR)
"RTN","MAGQBPG2",38,0)
 . S PTR=$P(BNODE,U) I PTR?1N.N D
"RTN","MAGQBPG2",39,0)
 . . S HASH=$P(^MAG(2005.2,PTR,0),U,8)
"RTN","MAGQBPG2",40,0)
 . . S $P(^MAG(2005,IEN,"FBIG"),U)=$$SHNAM^MAGQBPRG($P(^MAG(2005.2,PTR,0),U,2),HASH)
"RTN","MAGQBPG2",41,0)
 . . S BNAME=$P(FNAME,".")_".BIG"
"RTN","MAGQBPG2",42,0)
 . . S $P(RESULT,"^",3)=$$JBPATH^MAGQBPRG(BNAME,PTR)
"RTN","MAGQBPG2",43,0)
 . I RESULT'="^^^" S $P(RESULT,U,4)=IEN  ;IEN
"RTN","MAGQBPG2",44,0)
 Q
"RTN","MAGQBPG2",45,0)
FNX(NAME) ;FIX FILENAME
"RTN","MAGQBPG2",46,0)
 I NAME[":" S NAME=$P(NAME,":",$L(NAME,":"))
"RTN","MAGQBPG2",47,0)
 I NAME["\" S NAME=$P(NAME,"\",$L(NAME,"\"))
"RTN","MAGQBPG2",48,0)
 Q NAME
"RTN","MAGQBPG2",49,0)
CNPT ;
"RTN","MAGQBPG2",50,0)
 N IEN,RESULT,%
"RTN","MAGQBPG2",51,0)
 S IEN=0
"RTN","MAGQBPG2",52,0)
 D NOW^%DTC
"RTN","MAGQBPG2",53,0)
 F  D CNP(.RESULT,.IEN) W:RESULT[":" !,RESULT Q:IEN'?1N.N  D
"RTN","MAGQBPG2",54,0)
 . S IEN=$P(RESULT,"^",4)
"RTN","MAGQBPG2",55,0)
 Q
"RTN","MAGQBPG2",56,0)
PGEPAR(RESULT) ; RPC[MAGQBP PARM]
"RTN","MAGQBPG2",57,0)
 ;; RECORD PurgeParam
"RTN","MAGQBPG2",58,0)
 ;; Status^MinAbs^MinFull^MinBig^ABS^PACABS^FULL^PACS^BIG^PACSBIG^RADHOLD
"RTN","MAGQBPG2",59,0)
 ;; ^FilePrefix
"RTN","MAGQBPG2",60,0)
 ;; FULL:8,PACS:9,BIGPACS:21,BIG:22,ABS:23,ABSPACS:24,RADHOLDS:13
"RTN","MAGQBPG2",61,0)
 N ABS,FULL,PACSABS,PACS,BIG,BIGPACS,MINABS,MINFULL,MINBIG,PREFIX,NODE3
"RTN","MAGQBPG2",62,0)
 N FILE,IENS,FIELD,FLAGS
"RTN","MAGQBPG2",63,0)
 S IENS=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPG2",64,0)
 S NODE3=$G(^MAG(2006.1,IENS,3))
"RTN","MAGQBPG2",65,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG2",66,0)
 S U="^"
"RTN","MAGQBPG2",67,0)
 S FILE=2006.1,FIELD="8;9;13;21;22;23;24",FLAGS="E"
"RTN","MAGQBPG2",68,0)
 D GETS^DIQ(FILE,IENS,FIELD,FLAGS,"ARR","ERR")
"RTN","MAGQBPG2",69,0)
 S FULL=+ARR(2006.1,IENS_",",8,"E"),TFULL(FULL)=""
"RTN","MAGQBPG2",70,0)
 S ABS=+ARR(2006.1,IENS_",",23,"E"),TABS(ABS)=""
"RTN","MAGQBPG2",71,0)
 S PACS=+ARR(2006.1,IENS_",",9,"E"),TFULL(PACS)=""
"RTN","MAGQBPG2",72,0)
 S PACSABS=+ARR(2006.1,IENS_",",24,"E"),TABS(PACSABS)=""
"RTN","MAGQBPG2",73,0)
 S PACSBIG=+ARR(2006.1,IENS_",",21,"E"),TBIG(PACSBIG)=""
"RTN","MAGQBPG2",74,0)
 S BIG=+ARR(2006.1,IENS_",",22,"E"),TBIG(BIG)=""
"RTN","MAGQBPG2",75,0)
 S MINABS=+$O(TABS(0)),MINFULL=+$O(TFULL(0)),MINBIG=+$O(TBIG(0))
"RTN","MAGQBPG2",76,0)
 S PREFIX=$$INIS(IENS)
"RTN","MAGQBPG2",77,0)
 K TABS,TFULL,TBIG
"RTN","MAGQBPG2",78,0)
 S RESULT="1"_U_MINABS_U_MINFULL_U_MINBIG_U_ABS_U_PACSABS_U_FULL_U_PACS
"RTN","MAGQBPG2",79,0)
 S RESULT=RESULT_U_BIG_U_PACSBIG_U_+ARR(2006.1,IENS_",",13,"E")_U_PREFIX
"RTN","MAGQBPG2",80,0)
 Q
"RTN","MAGQBPG2",81,0)
 ;;
"RTN","MAGQBPG2",82,0)
PGEUD(RESULT,FILENAME,EXT,IEN,DEVICE) ; RPC[MAGQBP UPDATE]
"RTN","MAGQBPG2",83,0)
 N FTYPE,NODE,PIECE,PLACE
"RTN","MAGQBPG2",84,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPG2",85,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBPG2",86,0)
 S RESULT="0",FTYPE=$$FTYPE^MAGQBPRG(EXT)
"RTN","MAGQBPG2",87,0)
 I $P($G(^MAG(2006.1,PLACE,"JBEX")),U,5) D IMAGEDEL^MAGGTID(.RESULT,IEN) Q
"RTN","MAGQBPG2",88,0)
 S NODE=$S(FTYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPG2",89,0)
 S:DEVICE="JB" PIECE=$S(FTYPE="ABS":5,FTYPE="BIG":2,FTYPE="FULL":5,1:0)
"RTN","MAGQBPG2",90,0)
 S:DEVICE="NET" PIECE=$S(FTYPE="ABS":4,FTYPE="BIG":1,FTYPE="FULL":3,1:0)
"RTN","MAGQBPG2",91,0)
 I PIECE=0 D ELOG^MAGQBPRG(NODE,FTYPE) Q
"RTN","MAGQBPG2",92,0)
 S RESULT="1"
"RTN","MAGQBPG2",93,0)
 S:$D(^MAG(2005,IEN,NODE)) $P(^MAG(2005,IEN,NODE),U,PIECE)=""
"RTN","MAGQBPG2",94,0)
 S:$D(^MAG(2005.1,IEN,NODE)) $P(^MAG(2005.1,IEN,NODE),U,PIECE)=""
"RTN","MAGQBPG2",95,0)
 Q
"RTN","MAGQBPG2",96,0)
INIS(PLACE) ;
"RTN","MAGQBPG2",97,0)
 N ARRY,CNT,SUB,RESULT
"RTN","MAGQBPG2",98,0)
 S ARRY($P($G(^MAG(2006.1,PLACE,0)),"^",2))=""
"RTN","MAGQBPG2",99,0)
 S CNT=0
"RTN","MAGQBPG2",100,0)
 F  S CNT=$O(^MAG(2006.1,PLACE,4,CNT)) Q:CNT'?1N.N  D
"RTN","MAGQBPG2",101,0)
 . S ARRY(^MAG(2006.1,PLACE,4,CNT,0))=""
"RTN","MAGQBPG2",102,0)
 S (SUB,RESULT)=""
"RTN","MAGQBPG2",103,0)
 F  S SUB=$O(ARRY(SUB)) Q:SUB=""  D
"RTN","MAGQBPG2",104,0)
 . S RESULT=$S(RESULT="":SUB,1:(RESULT_","_SUB))
"RTN","MAGQBPG2",105,0)
 K ARRY
"RTN","MAGQBPG2",106,0)
 Q RESULT
"RTN","MAGQBPRG")
0^74^B51672759
"RTN","MAGQBPRG",1,0)
MAGQBPRG ;WOIOFO/RMP Magnetic Server Purge processes [ 06/29/2001 18:28 ]
"RTN","MAGQBPRG",2,0)
 ;;3.0;IMAGING;**7,3,8**;Sep 15, 2004
"RTN","MAGQBPRG",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPRG",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBPRG",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBPRG",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBPRG",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBPRG",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBPRG",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBPRG",10,0)
 ;; |                                                               |
"RTN","MAGQBPRG",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBPRG",12,0)
 ;; | a medical device.  As such, it may not be changed in any way  |
"RTN","MAGQBPRG",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBPRG",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBPRG",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBPRG",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBPRG",17,0)
 ;;
"RTN","MAGQBPRG",18,0)
FILEREF(RESULT,FILEPATH,FNAM,EXT,NETLOC,RADHOLD) ; RPC[MAGQBP FREF]
"RTN","MAGQBPRG",19,0)
 ;VALIDATES THAT THE FILEPATH IS CONSISTENT WITH VISTA MAGFILE REFERENCE
"RTN","MAGQBPRG",20,0)
 ;SET THE SECOND PIECE TO "PACS" IF IT REPRESENTS DICOM
"RTN","MAGQBPRG",21,0)
 ;VALIDATES THAT A JUKEBOX POINTER EXISTS
"RTN","MAGQBPRG",22,0)
 ;RESULT VALUES
"RTN","MAGQBPRG",23,0)
 ;PIECE  1:-3 = FOREIGN FILE, DO NOT PURGE
"RTN","MAGQBPRG",24,0)
 ;         -2 = QUEUED FOR JUKEBOX COPY, DO NOT PURGE
"RTN","MAGQBPRG",25,0)
 ;         -1 = DO NOT PURGE
"RTN","MAGQBPRG",26,0)
 ;          0 = PURGE('MAG 2005 ENTRY)!('JUKEBOX PTRS & 'EXCEPTIONS)
"RTN","MAGQBPRG",27,0)
 ;          1 = PURGE GIVEN NORMAL DATE CRITERIA (NDC) + CONFIRMED ON JB
"RTN","MAGQBPRG",28,0)
 ;          2 = PURGE GIVEN NDC IF TGA PRESENT
"RTN","MAGQBPRG",29,0)
 ;          3 = PURGE IF FILE IS AT ALTERNATE NETWORK LOCATION SITE
"RTN","MAGQBPRG",30,0)
 ;              ELSE PURGE IF AGED & UPDATE FILE REFERENCES
"RTN","MAGQBPRG",31,0)
 ;        **4 = (**NA**)AGE PURGE IF ON JUKEBOX, UPDATE FILE REFERENCES
"RTN","MAGQBPRG",32,0)
 ;              ELSE UPDATE FILEREFENCES, QUEUE JUKEBOX COPY
"RTN","MAGQBPRG",33,0)
 ;          5 = PURGE IF AT ALTERNATE SITE,QUEUE JUKEBOX IF NOT ON JB
"RTN","MAGQBPRG",34,0)
 ;          6 = PURGE GIVEN NORMAL DATE CRITERIA
"RTN","MAGQBPRG",35,0)
 ;PIECE   2:0 = NONPACS
"RTN","MAGQBPRG",36,0)
 ;         :1 = PACS
"RTN","MAGQBPRG",37,0)
 ;PIECE    3: RECORD CATEGORY
"RTN","MAGQBPRG",38,0)
 ;         1 = 'NO 2005 ENTRY
"RTN","MAGQBPRG",39,0)
 ;         2 = RADIOLOGY HOLD
"RTN","MAGQBPRG",40,0)
 ;         3 = NO JUKEBOX/JUKEBOX PTRS
"RTN","MAGQBPRG",41,0)
 ;         4 = JUKEBOX - NO JUKEBOX PTRS (P/EXCEPT)ELSE QUEUE
"RTN","MAGQBPRG",42,0)
 ;         5 = JUKEBOX/JUKEBOX PTRS, NO CACHE PTRS,PURGE IF CONFIRMED
"RTN","MAGQBPRG",43,0)
 ;         6 = JUKEBOX/JUKEBOX PTRS, WRONG CACHE PTRS PURGE IF AT ALT
"RTN","MAGQBPRG",44,0)
 ;         7 = JUKEBOX/JUKEBOX PTRS, NO CACHE PTRS, FIX PTRS
"RTN","MAGQBPRG",45,0)
 ;         8 = JUKEBOX/JUKEBOX PTRS, CACHE PTRS, AGE (IF CONFIRMED)
"RTN","MAGQBPRG",46,0)
 ;         9 = RECORD NOT IN THE IMAGE FILE
"RTN","MAGQBPRG",47,0)
 ;        10 = FOREIGN IMAGE FILE
"RTN","MAGQBPRG",48,0)
 ;        11 = NOT AN IMAGE FILE
"RTN","MAGQBPRG",49,0)
 ;        12 = FILE LOCATION NOT VALID 
"RTN","MAGQBPRG",50,0)
 ;        13 = DELETE 2005 ENTRY (LAST LOCATION REFERENCED)
"RTN","MAGQBPRG",51,0)
 N FILEXT,IEN,SITEID,MAGXX,MAGFILE,MAGFILE1,MAGFILE2,PACS,RIEN,ZNODE
"RTN","MAGQBPRG",52,0)
 N FILETYPE,CPTR,JBPTR,CPOK,BNODE,ALTPATH,NMSPC
"RTN","MAGQBPRG",53,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",54,0)
 S U="^",(MAGFILE2,RESULT)=""
"RTN","MAGQBPRG",55,0)
 S FNAM=$$UPPER^MAGQE4(FNAM)
"RTN","MAGQBPRG",56,0)
 S ^TMP("MAGQ",$J,"PRG","LAST")=FILEPATH_U_FNAM_U_EXT_U_NETLOC_U_RADHOLD
"RTN","MAGQBPRG",57,0)
 I FNAM'?1.5A1.13N1"."1.3E  D  Q  ;LATER ADD EXT VERIFY USING 2005.02
"RTN","MAGQBPRG",58,0)
 . D ELOG(FNAM,FILEPATH) S RESULT="-3^^11" Q  ;'IMAGE FILE
"RTN","MAGQBPRG",59,0)
 S SITEID=$$UPPER^MAGQE4($$INIS^MAGQBPG2($$PLACE^MAGBAPI(+$G(DUZ(2)))))
"RTN","MAGQBPRG",60,0)
 S NMSPC=$TR($P(FNAM,"."),"0123456789","")
"RTN","MAGQBPRG",61,0)
 S FILEPATH=$$UPPER^MAGQE4(FILEPATH)
"RTN","MAGQBPRG",62,0)
 I SITEID'[NMSPC D ELOG(FNAM,FILEPATH) S RESULT="-3^^10" Q  ;FOREIGN FILE
"RTN","MAGQBPRG",63,0)
 S IEN=$P(+$P(FNAM,NMSPC,2),".")
"RTN","MAGQBPRG",64,0)
 ;PURGE UNCONDITIONALLY IF NO 2005 ENTRY ????
"RTN","MAGQBPRG",65,0)
 I '$D(^MAG(2005,IEN,0)) D  Q
"RTN","MAGQBPRG",66,0)
 . I $D(^MAG(2005.1,IEN,0)) D  Q
"RTN","MAGQBPRG",67,0)
 . . I '$P(^MAG(2005.1,IEN,0),U,5)  D
"RTN","MAGQBPRG",68,0)
 . . . S XX=$$JUKEBOX^MAGBAPI(IEN)
"RTN","MAGQBPRG",69,0)
 . . . S RESULT="-2^^9^^^"_IEN
"RTN","MAGQBPRG",70,0)
 . . E  S RESULT="-1^^9^^^"_IEN
"RTN","MAGQBPRG",71,0)
 . E  S RESULT="1^^9^^"_$P(^MAG(2005.1,IEN,0),U,5)_"^"_IEN
"RTN","MAGQBPRG",72,0)
 . Q
"RTN","MAGQBPRG",73,0)
 S ZNODE=^MAG(2005,IEN,0)
"RTN","MAGQBPRG",74,0)
 S FTYPE=$$FTYPE(EXT)
"RTN","MAGQBPRG",75,0)
 S BNODE=$S(FTYPE="BIG":$G(^MAG(2005,IEN,"FBIG")),1:"")
"RTN","MAGQBPRG",76,0)
 S JBPTR=$$JBPTR(IEN,FTYPE)
"RTN","MAGQBPRG",77,0)
 ; NEXT PROCESS MAGNETIC PTR~LESS
"RTN","MAGQBPRG",78,0)
 S CPTR=$$CHKCP($S(FTYPE="BIG":BNODE,1:ZNODE),FTYPE)
"RTN","MAGQBPRG",79,0)
 I 'CPTR D  Q
"RTN","MAGQBPRG",80,0)
 . D CPUPD(FTYPE,IEN,FILEPATH,FNAM)
"RTN","MAGQBPRG",81,0)
 . I 'JBPTR,$P($G(^MAG(2005.2,+$$CWP^MAGBAPI(+$G(DUZ(2))),0)),U,6)="1" D
"RTN","MAGQBPRG",82,0)
 . . S XX=$$JUKEBOX^MAGBAPI(IEN)
"RTN","MAGQBPRG",83,0)
 . S RESULT="-1^^7^^"_JBPTR_U_IEN ;$S(JBPTR:JBPTR,1:XX)_U_IEN
"RTN","MAGQBPRG",84,0)
 S CPOK=$S('CPTR:0,1:$$CPOK(FTYPE,.ALTPATH,FILEPATH,IEN))
"RTN","MAGQBPRG",85,0)
 S ALTPATH=ALTPATH_FNAM
"RTN","MAGQBPRG",86,0)
 S RDHOLD=$S(RADHOLD:$$RDHOLD(IEN),1:0)
"RTN","MAGQBPRG",87,0)
 S PACS=$S($D(^MAG(2005,IEN,"PACS")):1,1:0)
"RTN","MAGQBPRG",88,0)
 ;
"RTN","MAGQBPRG",89,0)
 ;RULE PROCESSOR
"RTN","MAGQBPRG",90,0)
 I RDHOLD D  Q
"RTN","MAGQBPRG",91,0)
 . I CPOK S RESULT="-1^"_PACS_"^2^" Q
"RTN","MAGQBPRG",92,0)
 . ;PURGE IF@ALT SITE
"RTN","MAGQBPRG",93,0)
 . S RESULT="5^"_PACS_"^6^"_ALTPATH_U_$$JBPATH(FNAM,JBPTR)_U_IEN
"RTN","MAGQBPRG",94,0)
 I 'CPOK,JBPTR D  Q
"RTN","MAGQBPRG",95,0)
 . S RESULT="3^"_PACS_"^6^"_ALTPATH_U_$$JBPATH(FNAM,JBPTR)_U_IEN
"RTN","MAGQBPRG",96,0)
 I 'JBPTR D  Q  ;(???('CPOK,'JBPTR))
"RTN","MAGQBPRG",97,0)
 . D WXCPT(.RESULT,PACS,FTYPE)
"RTN","MAGQBPRG",98,0)
 . I $P(RESULT,U)="-2" S XX=$$JUKEBOX^MAGBAPI(IEN) Q
"RTN","MAGQBPRG",99,0)
 . S $P(RESULT,U,6)=IEN
"RTN","MAGQBPRG",100,0)
 . Q:$P(RESULT,U)'="6"
"RTN","MAGQBPRG",101,0)
 . S $P(RESULT,U,3)=$S($$LASTNP(FTYPE):"13",1:$P(RESULT,U,3))
"RTN","MAGQBPRG",102,0)
 ;ELSE CPOK & JBPTR - NO RAD HOLD
"RTN","MAGQBPRG",103,0)
 ;!!MUST ADD CONDITIONAL CONFIRM ON JBOX
"RTN","MAGQBPRG",104,0)
 S RESULT="1^"_PACS_"^8^^"_$$JBPATH(FNAM,JBPTR)_U_IEN
"RTN","MAGQBPRG",105,0)
 Q
"RTN","MAGQBPRG",106,0)
 ;
"RTN","MAGQBPRG",107,0)
LASTNP(TYPE) ;
"RTN","MAGQBPRG",108,0)
 I TYPE="BIG" Q $S($P(ZNODE,U,3,4)="^":1,1:0)
"RTN","MAGQBPRG",109,0)
 I TYPE="ABS" Q $S((($P(ZNODE,U,3)="")&($P(BNODE,U)="")):1,1:0)
"RTN","MAGQBPRG",110,0)
 Q $S((($P(ZNODE,U,4)="")&($P(BNODE,U)="")):1,1:0)
"RTN","MAGQBPRG",111,0)
JBPATH(FN,NL) ;
"RTN","MAGQBPRG",112,0)
 Q $P($G(^MAG(2005.2,NL,0)),U,2)_$$DIRHASH^MAGFILEB(FN,NL)_FN
"RTN","MAGQBPRG",113,0)
WXCPT(RESULT,XPACS,TYPE) ;Check for Worm Exceptions
"RTN","MAGQBPRG",114,0)
 ;                        when no Worm reference in 2005
"RTN","MAGQBPRG",115,0)
 ;NO JUKEBOX Q:1 ????
"RTN","MAGQBPRG",116,0)
 ;SITE PARAMETER EXCEPTIONS
"RTN","MAGQBPRG",117,0)
 ; ALL           "JBEX";1
"RTN","MAGQBPRG",118,0)
 ; ALL PACS      "JBEX";2
"RTN","MAGQBPRG",119,0)
 ; ALL PACS BIG  "JBEX";3
"RTN","MAGQBPRG",120,0)
 ; ALL PACS BIG IF TGA PRESENT ON MAGNETIC
"RTN","MAGQBPRG",121,0)
 ; ALL BIG NON PACS "JBEX";4
"RTN","MAGQBPRG",122,0)
 N PARNODE,RY
"RTN","MAGQBPRG",123,0)
 I '$D(^MAG(2006.1,1,"JBEX")) D  Q
"RTN","MAGQBPRG",124,0)
 . S $P(RESULT,U)="-2^"_XPACS_"^4"  ;NO WXCPT
"RTN","MAGQBPRG",125,0)
 S PARNODE=$G(^MAG(2006.1,1,"JBEX"))
"RTN","MAGQBPRG",126,0)
 I +$P(PARNODE,U)?1"1" S $P(RESULT,U)="6^"_XPACS_"^4" Q  ;ALL
"RTN","MAGQBPRG",127,0)
 I +$P(PARNODE,U)?1"2" S $P(RESULT,U)="6^"_XPACS_"^4" D  Q  ;ALL
"RTN","MAGQBPRG",128,0)
 . S ^XUSEC("MAG DELETE",DUZ)=""
"RTN","MAGQBPRG",129,0)
 . D DELETE^MAGGTID(.RY,IEN,0)
"RTN","MAGQBPRG",130,0)
 . S ^TMP("MAGQ",$J,IEN)=RY(0)
"RTN","MAGQBPRG",131,0)
 . K RY
"RTN","MAGQBPRG",132,0)
 I XPACS D  Q
"RTN","MAGQBPRG",133,0)
 . I $P(PARNODE,U,2) S $P(RESULT,U)="6^1^4" Q  ;ALL PACS
"RTN","MAGQBPRG",134,0)
 . I TYPE="BIG" D 
"RTN","MAGQBPRG",135,0)
 . . I +$P(PARNODE,U,3) S $P(RESULT,U)="6^1^4" Q  ;ALL BIG PACS
"RTN","MAGQBPRG",136,0)
 . . I +$P(PARNODE,U,6) S $P(RESULT,U)="2^1^4" Q  ;BIG PACS IF TGA 
"RTN","MAGQBPRG",137,0)
 . I $P(RESULT,U)="" D
"RTN","MAGQBPRG",138,0)
 . . I $P($G(^MAG(2005.2,++$$CWP^MAGBAPI(+$G(DUZ(2))),0)),U,6)'="1" S RESULT="-1" Q
"RTN","MAGQBPRG",139,0)
 . . S RESULT="-2^1^4"
"RTN","MAGQBPRG",140,0)
 ;NON PACS
"RTN","MAGQBPRG",141,0)
 I ((TYPE="BIG")&(+$P(PARNODE,U,4))) S RESULT="6^0^4" Q
"RTN","MAGQBPRG",142,0)
 I $P($G(^MAG(2005.2,+$$CWP^MAGBAPI(+$G(DUZ(2))),0)),U,6)'="1" S RESULT="-1^0^4" Q
"RTN","MAGQBPRG",143,0)
 S RESULT="-2^0^4"
"RTN","MAGQBPRG",144,0)
 Q
"RTN","MAGQBPRG",145,0)
 ;
"RTN","MAGQBPRG",146,0)
FTYPE(FEXT) ;
"RTN","MAGQBPRG",147,0)
 S FEXT=$$UPPER^MAGQE4(FEXT)
"RTN","MAGQBPRG",148,0)
 I "^ABS^"[("^"_FEXT_"^") Q "ABS"
"RTN","MAGQBPRG",149,0)
 I "^BIG^"[("^"_FEXT_"^") Q "BIG"
"RTN","MAGQBPRG",150,0)
 Q "FULL"
"RTN","MAGQBPRG",151,0)
CHKCP(NODE,TYPE) ;
"RTN","MAGQBPRG",152,0)
 N PIECE,CP
"RTN","MAGQBPRG",153,0)
 S PIECE=$S(TYPE="ABS":4,TYPE="BIG":1,TYPE="FULL":3,1:0)
"RTN","MAGQBPRG",154,0)
 Q $P(NODE,U,PIECE)
"RTN","MAGQBPRG",155,0)
JBPTR(MAGIEN,TYPE) ;
"RTN","MAGQBPRG",156,0)
 N PTR
"RTN","MAGQBPRG",157,0)
 I TYPE="BIG" S PTR=+$P($G(^MAG(2005,MAGIEN,"FBIG")),"^",2)
"RTN","MAGQBPRG",158,0)
 E  S PTR=+$P($G(^MAG(2005,MAGIEN,0)),"^",5)
"RTN","MAGQBPRG",159,0)
 Q $S($P($G(^MAG(2005.2,PTR,0)),U,6)=1:PTR,1:0)
"RTN","MAGQBPRG",160,0)
RDHOLD(IEN) ;
"RTN","MAGQBPRG",161,0)
 N HOLD,RIEN
"RTN","MAGQBPRG",162,0)
 S RIEN=$G(^MAG(2005,IEN,2))
"RTN","MAGQBPRG",163,0)
 Q:$P(RIEN,"^",6)'=74 0
"RTN","MAGQBPRG",164,0)
 S HOLD=$G(^RARPT($P(RIEN,"^",7),"NOPURGE"))
"RTN","MAGQBPRG",165,0)
 Q $S($$UPPER^MAGQE4(HOLD)="N":1,1:0)
"RTN","MAGQBPRG",166,0)
CPOK(TYPE,ALTPATH,FILEPATH,IEN) ;
"RTN","MAGQBPRG",167,0)
 N MAGXX,PIECE,NODE,LOC
"RTN","MAGQBPRG",168,0)
 S MAGXX=IEN
"RTN","MAGQBPRG",169,0)
 S PIECE=$S(TYPE="ABS":4,TYPE="BIG":1,TYPE="FULL":3,1:0)
"RTN","MAGQBPRG",170,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPRG",171,0)
 S LOC=$P($G(^MAG(2005,IEN,NODE)),U,PIECE)
"RTN","MAGQBPRG",172,0)
 Q:'LOC 0
"RTN","MAGQBPRG",173,0)
 S ALTPATH=$$UPPER^MAGQE4($P($G(^MAG(2005.2,LOC,0)),U,2)_$$DIRHASH^MAGFILEB(FNAM,LOC))
"RTN","MAGQBPRG",174,0)
 Q $S(ALTPATH=FILEPATH:1,1:0)
"RTN","MAGQBPRG",175,0)
CPUPD(TYPE,IEN,FP,FN) ;
"RTN","MAGQBPRG",176,0)
 N PIECE,CP,NODE,LOC
"RTN","MAGQBPRG",177,0)
 S PIECE=$S(TYPE="ABS":4,TYPE="BIG":1,TYPE="FULL":3,1:0)
"RTN","MAGQBPRG",178,0)
 S NODE=$S(TYPE="BIG":"FBIG",1:0)
"RTN","MAGQBPRG",179,0)
 S LOC=$$UNHASH(FN,FP)
"RTN","MAGQBPRG",180,0)
 I (PIECE=0)!(+LOC=0) D ELOG(FN,FP) Q
"RTN","MAGQBPRG",181,0)
 S $P(^MAG(2005,IEN,NODE),U,PIECE)=LOC
"RTN","MAGQBPRG",182,0)
 Q
"RTN","MAGQBPRG",183,0)
CUPD(RESULT,FILEPATH,FILENAME,EXT,IEN) ; RPC[MAGQ CUPDTE]
"RTN","MAGQBPRG",184,0)
 N TYPE
"RTN","MAGQBPRG",185,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",186,0)
 S TYPE=$$FTYPE(EXT)
"RTN","MAGQBPRG",187,0)
 D CPUPD(TYPE,IEN,FILEPATH,FILENAME)
"RTN","MAGQBPRG",188,0)
 Q
"RTN","MAGQBPRG",189,0)
UNHASH(FN,FP) ; RETURN NETWORK LOCATION NUMBER
"RTN","MAGQBPRG",190,0)
 N SHARE,HASH
"RTN","MAGQBPRG",191,0)
 S SHARE=$S(FP[":":$P(FP,"\",1,2)_"\",1:$P(FP,"\",1,4)_"\")
"RTN","MAGQBPRG",192,0)
 S HASH=$S($P(FP,SHARE,2)["\":"Y",1:"")
"RTN","MAGQBPRG",193,0)
 Q $$SHNAM(SHARE,HASH)
"RTN","MAGQBPRG",194,0)
ELOG(FN,FP) ;
"RTN","MAGQBPRG",195,0)
 N INDX
"RTN","MAGQBPRG",196,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",197,0)
 S INDX=+$O(^TMP("MAGQ",$J,"PRG",FN,99999),-1)+1
"RTN","MAGQBPRG",198,0)
 S ^TMP("MAGQ",$J,"PRG",FN,INDX)=FN_"^"_FP
"RTN","MAGQBPRG",199,0)
 Q
"RTN","MAGQBPRG",200,0)
ELOGR(RESULT) ;[MAGQ ELOGR] - Error log report and purge
"RTN","MAGQBPRG",201,0)
 N FN,INDX,CNT
"RTN","MAGQBPRG",202,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBPRG",203,0)
 S FN="",CNT=0
"RTN","MAGQBPRG",204,0)
 F  S FN=$O(^TMP("MAGQ",$J,"PRG",FN)) Q:FN=""  D
"RTN","MAGQBPRG",205,0)
 . S INDX=""
"RTN","MAGQBPRG",206,0)
 . F  S INDX=$O(^TMP("MAGQ",$J,"PRG",FN,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBPRG",207,0)
 . . S CNT=CNT+1,RESULT(CNT)=^TMP("MAGQ",$J,"PRG",FN,INDX)
"RTN","MAGQBPRG",208,0)
 S RESULT(0)=CNT
"RTN","MAGQBPRG",209,0)
 K ^TMP("MAGQ",$J,"PRG")
"RTN","MAGQBPRG",210,0)
 Q
"RTN","MAGQBPRG",211,0)
SHNAM(SHARE,HASH) ;
"RTN","MAGQBPRG",212,0)
 N NUM,ONLINE,ZNODE
"RTN","MAGQBPRG",213,0)
 S (NUM,ONLINE)=0
"RTN","MAGQBPRG",214,0)
 Q:((SHARE="")!(SHARE[":")) ""
"RTN","MAGQBPRG",215,0)
 F  S NUM=$O(^MAG(2005.2,"AC",SHARE,NUM)) Q:'NUM  D  Q:ONLINE
"RTN","MAGQBPRG",216,0)
 . S ZNODE=^MAG(2005.2,NUM,0)
"RTN","MAGQBPRG",217,0)
 . Q:'($P(ZNODE,"^",6)="1")
"RTN","MAGQBPRG",218,0)
 . Q:'($P(ZNODE,"^",8)=HASH)
"RTN","MAGQBPRG",219,0)
 . S ONLINE="1"
"RTN","MAGQBPRG",220,0)
 Q NUM
"RTN","MAGQBTM")
0^58^B99142809
"RTN","MAGQBTM",1,0)
MAGQBTM ;WOIFO/RMP - REMOTE Task SERVER Program [ 03/25/2001 11:20 ]
"RTN","MAGQBTM",2,0)
 ;;3.0;IMAGING;**1,7,8**;Sep 15, 2004
"RTN","MAGQBTM",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBTM",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBTM",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBTM",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBTM",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBTM",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBTM",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBTM",10,0)
 ;; |                                                               |
"RTN","MAGQBTM",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBTM",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBTM",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBTM",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBTM",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBTM",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBTM",17,0)
 ;;
"RTN","MAGQBTM",18,0)
 ;
"RTN","MAGQBTM",19,0)
ENTRY(RESULT,WSTAT,PROCESS) ;
"RTN","MAGQBTM",20,0)
 ; RPC[MAGQ ABP]
"RTN","MAGQBTM",21,0)
 N X,SYSIEN,SYSNAME,NODE,INDX,CNT,PROC,%,QPTR,QCNT,VERS,EXEDATE,WSOS
"RTN","MAGQBTM",22,0)
 D NOW^%DTC
"RTN","MAGQBTM",23,0)
 ; Initialize error trap
"RTN","MAGQBTM",24,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",25,0)
 S (SYSIEN,CNT)=0,SYSNAME=""
"RTN","MAGQBTM",26,0)
 S $P(RESULT(0),U,6)=$D(^XUSEC("MAG SYSTEM",DUZ))
"RTN","MAGQBTM",27,0)
 Q:'$P(RESULT(0),U,6)
"RTN","MAGQBTM",28,0)
 S VERS=$P(WSTAT,U,2),EXEDATE=$P(WSTAT,U,3),WSOS=$P(WSTAT,U,4)
"RTN","MAGQBTM",29,0)
 S WSTAT=$P(WSTAT,U)
"RTN","MAGQBTM",30,0)
 S SYSIEN=$O(^MAG(2006.8,"C",WSTAT,"")) ; True workstation name
"RTN","MAGQBTM",31,0)
 I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",$$UPPER^MAGQE4(WSTAT),""))
"RTN","MAGQBTM",32,0)
 I 'SYSIEN D  ; Attempt to find a match from local name
"RTN","MAGQBTM",33,0)
 . N TRY
"RTN","MAGQBTM",34,0)
 . F TRY=1:1:$L(WSTAT,".") D  Q:SYSIEN?1.N
"RTN","MAGQBTM",35,0)
 . . S SYSIEN=$O(^MAG(2006.8,"C",$P(WSTAT,".",TRY),""))
"RTN","MAGQBTM",36,0)
 . . I 'SYSIEN S SYSIEN=$O(^MAG(2006.8,"C",$$UPPER^MAGQE4($P(WSTAT,".",TRY)),""))
"RTN","MAGQBTM",37,0)
 . . Q
"RTN","MAGQBTM",38,0)
 . Q
"RTN","MAGQBTM",39,0)
 ;
"RTN","MAGQBTM",40,0)
 Q:SYSIEN=""
"RTN","MAGQBTM",41,0)
 S $P(^MAG(2006.8,SYSIEN,1),U,2)=VERS
"RTN","MAGQBTM",42,0)
 S $P(^MAG(2006.8,SYSIEN,1),U,3)=EXEDATE
"RTN","MAGQBTM",43,0)
 S $P(^MAG(2006.8,SYSIEN,1),U,4)=WSOS
"RTN","MAGQBTM",44,0)
 S VERS=$P(VERS,".",1,2)_"P"_$P(VERS,".",3)
"RTN","MAGQBTM",45,0)
 Q:'$$VOK^MAGQBUT4(VERS)
"RTN","MAGQBTM",46,0)
 S ^TMP("MAGQN",$J,0)=SYSIEN_"^"_WSTAT
"RTN","MAGQBTM",47,0)
 S NODE=^MAG(2006.8,SYSIEN,0)
"RTN","MAGQBTM",48,0)
 S SYSNAME=$P(NODE,U)
"RTN","MAGQBTM",49,0)
 I SYSNAME="" D  Q
"RTN","MAGQBTM",50,0)
 . S $P(RESULT(0),U,1,2)="-1^No Background Processor parameters on system"
"RTN","MAGQBTM",51,0)
 I $P(NODE,U,12)'=1 D  Q
"RTN","MAGQBTM",52,0)
 . S $P(RESULT(0),U,1,2)="-1^Not assigned as a Background Processor"
"RTN","MAGQBTM",53,0)
 F PROC="ABSTRACT","JUKEBOX","JBTOHD","DELETE","PREFET","GCC","IMPORT" D
"RTN","MAGQBTM",54,0)
 . N FNUM,PIECE
"RTN","MAGQBTM",55,0)
 . S FNUM=$$FNUM(PROC)
"RTN","MAGQBTM",56,0)
 . S PIECE=$$GET1^DID(2006.8,FNUM,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGQBTM",57,0)
 . S PIECE=$P(PIECE,";",2)
"RTN","MAGQBTM",58,0)
 . I $P(NODE,U,PIECE)="1" D
"RTN","MAGQBTM",59,0)
 . . N QCNT,QPTR
"RTN","MAGQBTM",60,0)
 . . D ADD^MAGBAPI(0,PROC)
"RTN","MAGQBTM",61,0)
 . . S QPTR=$O(^MAGQUEUE(2006.031,"B",PROC,""))
"RTN","MAGQBTM",62,0)
 . . S QCNT=$P($G(^MAGQUEUE(2006.031,+QPTR,0)),U,3)
"RTN","MAGQBTM",63,0)
 . . S CNT=CNT+1
"RTN","MAGQBTM",64,0)
 . . S RESULT(CNT)=PROC_U_QCNT
"RTN","MAGQBTM",65,0)
 . . Q
"RTN","MAGQBTM",66,0)
 . Q
"RTN","MAGQBTM",67,0)
 S $P(RESULT(0),U,1,5)="0^BP List^PID: "_$$BASE^XLFUTL($J,10,16)_"^"_SYSNAME_U_WSTAT
"RTN","MAGQBTM",68,0)
 Q
"RTN","MAGQBTM",69,0)
 ;
"RTN","MAGQBTM",70,0)
FNUM(PROCESS) ;
"RTN","MAGQBTM",71,0)
 Q:PROC="ABSTRACT" 12
"RTN","MAGQBTM",72,0)
 Q:PROC="JUKEBOX" 13
"RTN","MAGQBTM",73,0)
 Q:PROC="JBTOHD" 14
"RTN","MAGQBTM",74,0)
 Q:PROC="PREFET" 15
"RTN","MAGQBTM",75,0)
 Q:PROC="IMPORT" 16
"RTN","MAGQBTM",76,0)
 Q:PROC="GCC" 17
"RTN","MAGQBTM",77,0)
 Q:PROC="DELETE" 20
"RTN","MAGQBTM",78,0)
 Q 0
"RTN","MAGQBTM",79,0)
 ;
"RTN","MAGQBTM",80,0)
GETQUE(RESULT,ACTION) ;
"RTN","MAGQBTM",81,0)
 ; RPC[MAGQ GET]
"RTN","MAGQBTM",82,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",83,0)
 D @(ACTION_"(.RESULT)")
"RTN","MAGQBTM",84,0)
 I +RESULT<0 D
"RTN","MAGQBTM",85,0)
 . D NOW^%DTC
"RTN","MAGQBTM",86,0)
 . D QSTAT($P(RESULT,U,2),$P(RESULT,U,3),ACTION)
"RTN","MAGQBTM",87,0)
 . D QPTER(ACTION,$P(RESULT,U,2))
"RTN","MAGQBTM",88,0)
 . Q
"RTN","MAGQBTM",89,0)
 Q
"RTN","MAGQBTM",90,0)
 ;
"RTN","MAGQBTM",91,0)
ABSTRACT(RESULT) ;
"RTN","MAGQBTM",92,0)
 D DEQUEUE("ABSTRACT",.RESULT)
"RTN","MAGQBTM",93,0)
 Q
"RTN","MAGQBTM",94,0)
 ;
"RTN","MAGQBTM",95,0)
JUKEBOX(RESULT) ;
"RTN","MAGQBTM",96,0)
 D DEQUEUE("JUKEBOX",.RESULT)
"RTN","MAGQBTM",97,0)
 Q
"RTN","MAGQBTM",98,0)
 ;
"RTN","MAGQBTM",99,0)
JBTOHD(RESULT) ;
"RTN","MAGQBTM",100,0)
 D DEQUEUE("JBTOHD",.RESULT)
"RTN","MAGQBTM",101,0)
 Q
"RTN","MAGQBTM",102,0)
 ;
"RTN","MAGQBTM",103,0)
GCC(RESULT) ;
"RTN","MAGQBTM",104,0)
 D DEQUEUE("GCC",.RESULT)
"RTN","MAGQBTM",105,0)
 Q
"RTN","MAGQBTM",106,0)
 ;
"RTN","MAGQBTM",107,0)
DELETE(RESULT) ;
"RTN","MAGQBTM",108,0)
 D DEQUEUE("DELETE",.RESULT)
"RTN","MAGQBTM",109,0)
 Q
"RTN","MAGQBTM",110,0)
 ;
"RTN","MAGQBTM",111,0)
PREFET(RESULT) ;
"RTN","MAGQBTM",112,0)
 D DEQUEUE("PREFET",.RESULT)
"RTN","MAGQBTM",113,0)
 Q
"RTN","MAGQBTM",114,0)
 ;
"RTN","MAGQBTM",115,0)
IMPORT(RESULT) ;
"RTN","MAGQBTM",116,0)
 D DEQUEUE("IMPORT",.RESULT)
"RTN","MAGQBTM",117,0)
 Q
"RTN","MAGQBTM",118,0)
 ;
"RTN","MAGQBTM",119,0)
DEQUEUE(QUE,RESULT) ;
"RTN","MAGQBTM",120,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",121,0)
 N QPTR,QPTR2,ROU,MAGIEN,ZNODE,MSG,IMQUE
"RTN","MAGQBTM",122,0)
 S QPTR2=$O(^MAGQUEUE(2006.031,"B",QUE,""))
"RTN","MAGQBTM",123,0)
 S QPTR=$S(QPTR2:$P(^MAGQUEUE(2006.031,QPTR2,0),U,2),1:"")
"RTN","MAGQBTM",124,0)
 S QPTR=$O(^MAGQUEUE(2006.03,"B",QUE,QPTR))
"RTN","MAGQBTM",125,0)
 I QPTR="" D  Q
"RTN","MAGQBTM",126,0)
 . S RESULT="0"_U_QPTR2_U_"No "_QUE_" "_QPTR2_" to process."
"RTN","MAGQBTM",127,0)
 . Q
"RTN","MAGQBTM",128,0)
 D QSTAT(QPTR,QUE_" in progress.",QUE)
"RTN","MAGQBTM",129,0)
 S ZNODE=$G(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBTM",130,0)
 I ZNODE="" S RESULT=-101_U_QPTR_U_"Queue Record does not exist" Q
"RTN","MAGQBTM",131,0)
 I QUE="IMPORT" D ENTRY^MAGQBIM(QPTR,QUE,QPTR2,ZNODE,.RESULT) Q
"RTN","MAGQBTM",132,0)
 S MAGIEN=$P(ZNODE,"^",7)
"RTN","MAGQBTM",133,0)
 I QUE'="DELETE",(('(+MAGIEN))!('$D(^MAG(2005,+MAGIEN,0)))!($P(ZNODE,U)'=QUE)) D  Q
"RTN","MAGQBTM",134,0)
 . I $D(^MAG(2005.1,+MAGIEN,0)) D
"RTN","MAGQBTM",135,0)
 . . S MSG="Image Record Deleted and in archive file."
"RTN","MAGQBTM",136,0)
 . . Q
"RTN","MAGQBTM",137,0)
 . E  S MSG="No valid image file number to process."
"RTN","MAGQBTM",138,0)
 . S RESULT=-101_U_QPTR_U_MSG
"RTN","MAGQBTM",139,0)
 . Q
"RTN","MAGQBTM",140,0)
 S ROU=$$RESET(QUE)
"RTN","MAGQBTM",141,0)
 I ROU="" S RESULT="-1"_U_QPTR_U_QUE_" Is an inactive process" Q
"RTN","MAGQBTM",142,0)
 D @("ENTRY^"_ROU_"(.RESULT,QPTR)")
"RTN","MAGQBTM",143,0)
 Q
"RTN","MAGQBTM",144,0)
 ;
"RTN","MAGQBTM",145,0)
QSTAT(QPTR,MESSAGE,ACTION) ;
"RTN","MAGQBTM",146,0)
 Q:QPTR=""
"RTN","MAGQBTM",147,0)
 Q:'$D(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBTM",148,0)
 D NOW^%DTC
"RTN","MAGQBTM",149,0)
 I $P($G(^MAGQUEUE(2006.03,QPTR,0)),U,5)]"" D
"RTN","MAGQBTM",150,0)
 . K ^MAGQUEUE(2006.03,"C",$E($P(^MAGQUEUE(2006.03,QPTR,0),U),1,30),$E($P(^MAGQUEUE(2006.03,QPTR,0),U,5),1,30),QPTR)
"RTN","MAGQBTM",151,0)
 . Q
"RTN","MAGQBTM",152,0)
 S ^MAGQUEUE(2006.03,"C",$E($P(^MAGQUEUE(2006.03,QPTR,0),U),1,30),$E(MESSAGE,1,30),QPTR)=""
"RTN","MAGQBTM",153,0)
 S $P(^MAGQUEUE(2006.03,QPTR,0),U,5,6)=$P(MESSAGE,U)_U_%
"RTN","MAGQBTM",154,0)
 I ACTION["IMPORT" D STAT^MAGQBIM(QPTR,%,MESSAGE)
"RTN","MAGQBTM",155,0)
 Q
"RTN","MAGQBTM",156,0)
 ;
"RTN","MAGQBTM",157,0)
QPTER(QUEUE,QPTR) ;
"RTN","MAGQBTM",158,0)
 N QREC,PREV,PNODE
"RTN","MAGQBTM",159,0)
 S QREC=$O(^MAGQUEUE(2006.031,"B",QUEUE,""))
"RTN","MAGQBTM",160,0)
 S PREV=$S(QREC:$P(^MAGQUEUE(2006.031,QREC,0),U,2),1:"")
"RTN","MAGQBTM",161,0)
 I PREV'="" D  Q
"RTN","MAGQBTM",162,0)
 . I QPTR=$O(^MAGQUEUE(2006.03,"B",QUEUE,PREV)) D
"RTN","MAGQBTM",163,0)
 . . L +^MAGQUEUE(2006.031)
"RTN","MAGQBTM",164,0)
 . . D ADD^MAGBAPI(-1,QUEUE)
"RTN","MAGQBTM",165,0)
 . . S $P(^MAGQUEUE(2006.031,QREC,0),U,2)=QPTR
"RTN","MAGQBTM",166,0)
 . . L -^MAGQUEUE(2006.031)
"RTN","MAGQBTM",167,0)
 . . S PNODE=$G(^MAGQUEUE(2006.03,PREV,0))
"RTN","MAGQBTM",168,0)
 . . I +$P(PNODE,"^",5)>0 D DQUE^MAGQBUT(PREV)
"RTN","MAGQBTM",169,0)
 . . Q
"RTN","MAGQBTM",170,0)
 . Q
"RTN","MAGQBTM",171,0)
 D ADD^MAGBAPI(0,QUEUE)
"RTN","MAGQBTM",172,0)
 Q
"RTN","MAGQBTM",173,0)
 ;
"RTN","MAGQBTM",174,0)
RESET(QUEUE) ; Set Routine parameter
"RTN","MAGQBTM",175,0)
 Q:QUEUE="ABSTRACT" "MAGQBAB"
"RTN","MAGQBTM",176,0)
 Q:QUEUE="JUKEBOX" "MAGQBJB"
"RTN","MAGQBTM",177,0)
 Q:QUEUE="JBTOHD" "MAGQBJH"
"RTN","MAGQBTM",178,0)
 Q:QUEUE="DELETE" "MAGQBD"
"RTN","MAGQBTM",179,0)
 Q:QUEUE="PREFET" "MAGQBJH"
"RTN","MAGQBTM",180,0)
 Q:QUEUE="IMPORT" "MAGQBIM"
"RTN","MAGQBTM",181,0)
 Q:QUEUE="GCC" "MAGQBGCC"
"RTN","MAGQBTM",182,0)
 Q ""
"RTN","MAGQBTM",183,0)
 ;
"RTN","MAGQBTM",184,0)
RQCNT ;
"RTN","MAGQBTM",185,0)
 N QIEN,QPTR,QNAM
"RTN","MAGQBTM",186,0)
 L +^MAGQUEUE(2006.031)
"RTN","MAGQBTM",187,0)
 S QNAM=""
"RTN","MAGQBTM",188,0)
 F  S QNAM=$O(^MAGQUEUE(2006.031,"B",QNAM)) Q:QNAM=""  D
"RTN","MAGQBTM",189,0)
 . S QIEN=$O(^MAGQUEUE(2006.031,"B",QNAM,"")) Q:QIEN'?1.N
"RTN","MAGQBTM",190,0)
 . S QPTR=+$P(^MAGQUEUE(2006.031,QIEN,0),U,2)
"RTN","MAGQBTM",191,0)
 . S $P(^MAGQUEUE(2006.031,QIEN,0),U,3)=""
"RTN","MAGQBTM",192,0)
 . D ADD^MAGBAPI(0,QNAM)
"RTN","MAGQBTM",193,0)
 . S $P(^MAGQUEUE(2006.031,QIEN,0),U,2)=QPTR
"RTN","MAGQBTM",194,0)
 . Q
"RTN","MAGQBTM",195,0)
 L -^MAGQUEUE(2006.031)
"RTN","MAGQBTM",196,0)
 Q
"RTN","MAGQBTM",197,0)
 ;
"RTN","MAGQBTM",198,0)
QUPDTE(RESULT,QPTR,UPDATE) ;
"RTN","MAGQBTM",199,0)
 ; RPC[MAGQ QUD]
"RTN","MAGQBTM",200,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",201,0)
 N NODE,STAT,TYPE,VPTR,MPTR,IEN,IDFN,MSG
"RTN","MAGQBTM",202,0)
 S NODE=$G(^MAGQUEUE(2006.03,QPTR,0))
"RTN","MAGQBTM",203,0)
 S RESULT="1^QUEUE UPDATE COMPLETE"
"RTN","MAGQBTM",204,0)
 S STAT=$P(UPDATE,U)
"RTN","MAGQBTM",205,0)
 S TYPE=$P(NODE,U)
"RTN","MAGQBTM",206,0)
 S MSG=$S($P(UPDATE,U,2)="":TYPE_" Process Error",1:$P(UPDATE,U,2))
"RTN","MAGQBTM",207,0)
 I TYPE="" D QRUPT(QPTR,.RESULT,NODE) Q
"RTN","MAGQBTM",208,0)
 D QSTAT(QPTR,$S(STAT<0:MSG,1:STAT),TYPE)
"RTN","MAGQBTM",209,0)
 D QPTER(TYPE,QPTR)
"RTN","MAGQBTM",210,0)
 I STAT<0 Q
"RTN","MAGQBTM",211,0)
 I "^DELETE^"[("^"_TYPE_"^") D DQUE^MAGQBUT(QPTR) Q
"RTN","MAGQBTM",212,0)
 S VPTR=$P(UPDATE,U,3)
"RTN","MAGQBTM",213,0)
 I VPTR?1.N D
"RTN","MAGQBTM",214,0)
 . S MPTR=$P(NODE,U,7)
"RTN","MAGQBTM",215,0)
 . I "^ABSTRACT^"[("^"_TYPE_"^") D  Q
"RTN","MAGQBTM",216,0)
 . . S $P(^MAG(2005,MPTR,0),U,4)=VPTR
"RTN","MAGQBTM",217,0)
 . . S X=$$JUKEBOX^MAGBAPI(MPTR)
"RTN","MAGQBTM",218,0)
 . . D DQUE^MAGQBUT(QPTR)
"RTN","MAGQBTM",219,0)
 . . Q
"RTN","MAGQBTM",220,0)
 . I ("^JBTOHD^"[("^"_TYPE_"^"))!("^PREFET^"[("^"_TYPE_"^")) D  Q
"RTN","MAGQBTM",221,0)
 . . I "^FULL^"[$P(NODE,U,8) S $P(^MAG(2005,MPTR,0),U,3)=VPTR
"RTN","MAGQBTM",222,0)
 . . I "^ABSTRACT^"[$P(NODE,U,8) S $P(^MAG(2005,MPTR,0),U,4)=VPTR
"RTN","MAGQBTM",223,0)
 . . I "^BIG^"[$P(NODE,U,8) S $P(^MAG(2005,MPTR,"FBIG"),U)=VPTR
"RTN","MAGQBTM",224,0)
 . . D DQUE^MAGQBUT(QPTR)
"RTN","MAGQBTM",225,0)
 . . Q
"RTN","MAGQBTM",226,0)
 . I "^JUKEBOX^"[("^"_TYPE_"^") D  Q 
"RTN","MAGQBTM",227,0)
 . . I $P(UPDATE,U,2)["BIG" D  Q
"RTN","MAGQBTM",228,0)
 . . . S:$D(^MAG(2005,MPTR)) $P(^MAG(2005,MPTR,"FBIG"),U,2)=VPTR
"RTN","MAGQBTM",229,0)
 . . . S:$D(^MAG(2005.1,MPTR)) $P(^MAG(2005.1,MPTR,"FBIG"),U,2)=VPTR
"RTN","MAGQBTM",230,0)
 . . E  D
"RTN","MAGQBTM",231,0)
 . . S:$D(^MAG(2005,MPTR)) $P(^MAG(2005,MPTR,0),U,5)=VPTR
"RTN","MAGQBTM",232,0)
 . . S:$D(^MAG(2005.1,MPTR)) $P(^MAG(2005.1,MPTR,0),U,5)=VPTR
"RTN","MAGQBTM",233,0)
 . . D DQUE^MAGQBUT(QPTR)
"RTN","MAGQBTM",234,0)
 . . Q
"RTN","MAGQBTM",235,0)
 . I "^GCC^"[("^"_TYPE_"^") D  Q
"RTN","MAGQBTM",236,0)
 . . D NOW^%DTC
"RTN","MAGQBTM",237,0)
 . . S FDA(2005.01,"+1,"_MPTR_",",.01)=VPTR
"RTN","MAGQBTM",238,0)
 . . S FDA(2005.01,"+1,"_MPTR_",",1)=%
"RTN","MAGQBTM",239,0)
 . . S FDA(2005.01,"+1,"_MPTR_",",2)=$P($$TRIM^MAGQST($P(UPDATE,U,2))," ")
"RTN","MAGQBTM",240,0)
 . . D UPDATE^DIE("U","FDA","","MAGIMP")
"RTN","MAGQBTM",241,0)
 . . S IDFN=$P(^MAG(2005,MPTR,0),U,7)
"RTN","MAGQBTM",242,0)
 . . D ENTRY^MAGLOG("EXPORT->"_$P($G(^MAG(2005.2,VPTR,0)),U,2),$P(NODE,U,2),MPTR,"Document Imaging",IDFN,0)
"RTN","MAGQBTM",243,0)
 . . Q
"RTN","MAGQBTM",244,0)
 . Q
"RTN","MAGQBTM",245,0)
 Q
"RTN","MAGQBTM",246,0)
 ;
"RTN","MAGQBTM",247,0)
QRUPT(PTR,RESULT,NODE) ; Delete corrupt 2006.03 entry/update next queue ptr prn
"RTN","MAGQBTM",248,0)
 N %,TYPE,DONE,QIEN,MSG
"RTN","MAGQBTM",249,0)
 D NOW^%DTC
"RTN","MAGQBTM",250,0)
 I $D(^MAG(2005.1,PTR)) D
"RTN","MAGQBTM",251,0)
 . S MSG="Image Record Deleted and in archive file: "
"RTN","MAGQBTM",252,0)
 . Q
"RTN","MAGQBTM",253,0)
 E  S MSG="Queue record corrupted: "
"RTN","MAGQBTM",254,0)
 S RESULT="-1^"_PTR_"^"_MSG_NODE
"RTN","MAGQBTM",255,0)
 D QSTAT(PTR,"QUEUE RECORD CORRUPTED","DON'T KNOW")
"RTN","MAGQBTM",256,0)
 S ^TMP("MAGQ",$J,"QRUPT",PTR,%)=RESULT_U_NODE
"RTN","MAGQBTM",257,0)
 S (TYPE,DONE)=""
"RTN","MAGQBTM",258,0)
 F  S TYPE=$O(^MAGQUEUE(2006.031,"B",TYPE)) Q:TYPE=""  D  Q:DONE
"RTN","MAGQBTM",259,0)
 . I $D(^MAGQUEUE(2006.03,"B",TYPE,PTR)) D 
"RTN","MAGQBTM",260,0)
 . . S $P(^MAGQUEUE(2006.03,PTR,0),U)=TYPE,DONE=1
"RTN","MAGQBTM",261,0)
 . . Q
"RTN","MAGQBTM",262,0)
 . Q
"RTN","MAGQBTM",263,0)
 I 'DONE ;K ^MAGQUEUE(2006.03,PTR,0)
"RTN","MAGQBTM",264,0)
 Q
"RTN","MAGQBTM",265,0)
 ;
"RTN","MAGQBTM",266,0)
REQUE(RESULT,QPTR) ;
"RTN","MAGQBTM",267,0)
 ; RPC[MAGQ REQ]
"RTN","MAGQBTM",268,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBTM",269,0)
 N PROC,NODE,INDX,PARAM,OPDUZ,STATUS,TRACKID
"RTN","MAGQBTM",270,0)
 S INDX=$$TRIM^MAGQST(QPTR),TRACKID=0
"RTN","MAGQBTM",271,0)
 S NODE=$G(^MAGQUEUE(2006.03,INDX,0))
"RTN","MAGQBTM",272,0)
 Q:NODE=""
"RTN","MAGQBTM",273,0)
 S PROC=$P(NODE,U),STATUS=$P(NODE,U,5)
"RTN","MAGQBTM",274,0)
 I PROC'="IMPORT" D
"RTN","MAGQBTM",275,0)
 . D RQP(PROC,NODE,.PARAM)
"RTN","MAGQBTM",276,0)
 . S @("RESULT=$$"_PROC_"^MAGBAPI(PARAM)")
"RTN","MAGQBTM",277,0)
 . Q
"RTN","MAGQBTM",278,0)
 E  D
"RTN","MAGQBTM",279,0)
 . S $P(PARAM,U,3)=+$P(NODE,U,9)+1
"RTN","MAGQBTM",280,0)
 . S $P(PARAM,U,4)=$S($P(NODE,U,11)?1N.N:$P(NODE,U,11),1:QPTR)
"RTN","MAGQBTM",281,0)
 . D TIDL^MAGQBIM($S($P(NODE,U,11)?1N.N:$P(NODE,U,11),1:QPTR),PROC,.TRACKID)
"RTN","MAGQBTM",282,0)
 . Q:TRACKID=0
"RTN","MAGQBTM",283,0)
 . S @("RESULT=$$"_PROC_"^MAGBAPI(PARAM,$P(NODE,U,10),TRACKID)")
"RTN","MAGQBTM",284,0)
 I RESULT?1.N,STATUS'="" D
"RTN","MAGQBTM",285,0)
 . S $P(^MAGQUEUE(2006.03,RESULT,0),U,5)=STATUS
"RTN","MAGQBTM",286,0)
 . S ^MAGQUEUE(2006.03,"C",PROC,$E(STATUS,1,30),RESULT)=""
"RTN","MAGQBTM",287,0)
 . Q
"RTN","MAGQBTM",288,0)
 Q:((PROC="IMPORT")&(TRACKID=0))
"RTN","MAGQBTM",289,0)
 D DQUE^MAGQBUT(INDX)
"RTN","MAGQBTM",290,0)
 Q
"RTN","MAGQBTM",291,0)
 ;
"RTN","MAGQBTM",292,0)
RQP(P,N,PAR) ;
"RTN","MAGQBTM",293,0)
 N P1,P2,P3,P4
"RTN","MAGQBTM",294,0)
 I ("^JBTOHD^PREFET^")[P S P1=$P(N,U,7),P2=$P(N,U,8),P3=+$P(N,U,9)+1,PAR=P1_U_P2_U_P3 Q
"RTN","MAGQBTM",295,0)
 I P["DELETE" S P1=$P(N,U,10)_"^^",P2=+$P(N,U,9)+1,PAR=P1_P2 Q
"RTN","MAGQBTM",296,0)
 I P["GCC" D  Q
"RTN","MAGQBTM",297,0)
 . S P1=$P(N,U,7),P2=$P(N,U,10),P3=$P(N,U,11),P4=$P(N,U,9)+1,PAR=P1_U_P2_U_P3_U_P4 Q
"RTN","MAGQBTM",298,0)
 S P1=$P(N,U,7)_"^^",P2=+$P(N,U,9)+1,PAR=P1_P2 ;JUKEBOX + ABSTRACT
"RTN","MAGQBTM",299,0)
 Q
"RTN","MAGQBTM",300,0)
ERR ;
"RTN","MAGQBTM",301,0)
 N ERRXX
"RTN","MAGQBTM",302,0)
 S ERRXX=$$EC^%ZOSV
"RTN","MAGQBTM",303,0)
 D ^%ZTER
"RTN","MAGQBTM",304,0)
 D ^XUSCLEAN
"RTN","MAGQBTM",305,0)
 Q
"RTN","MAGQBTM",306,0)
 ;
"RTN","MAGQBUT")
0^67^B65302451
"RTN","MAGQBUT",1,0)
MAGQBUT ;WOIFO/RMP - Imaging Background Processor Utilities [ 03/25/2001 11:20 ]
"RTN","MAGQBUT",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGQBUT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT",10,0)
 ;; |                                                               |
"RTN","MAGQBUT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT",17,0)
 ;;
"RTN","MAGQBUT",18,0)
FTYPE(RESULT) ;
"RTN","MAGQBUT",19,0)
 ; RPC[MAGQ FTYPE]
"RTN","MAGQBUT",20,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT",21,0)
 N MAX,INDX,PLACE
"RTN","MAGQBUT",22,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",23,0)
 S U="^",MAX=$P(^MAG(2006.1,PLACE,2,0),U,4),INDX=0
"RTN","MAGQBUT",24,0)
 Q:+MAX<1
"RTN","MAGQBUT",25,0)
 F  S INDX=$O(^MAG(2006.1,PLACE,2,INDX)) Q:INDX'?1N.N  D  Q:INDX=MAX
"RTN","MAGQBUT",26,0)
 . S RESULT(INDX-1)=$G(^MAG(2006.1,PLACE,2,INDX,0))
"RTN","MAGQBUT",27,0)
 Q
"RTN","MAGQBUT",28,0)
CHGSERV(RESULT) ;
"RTN","MAGQBUT",29,0)
 ; RPC[MAGQ FS CHNGE]
"RTN","MAGQBUT",30,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT",31,0)
 N SPACE,DATA,IEN,SIZE,CWL,MIN,CNT,TNODE,TINT,NOW,TLTIME,TOD,PLACE,TS,AUTON
"RTN","MAGQBUT",32,0)
 S U="^",(INDX,SPACE,SIZE,CNT)=0,IEN=""
"RTN","MAGQBUT",33,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",34,0)
 S MIN=$$SPARM
"RTN","MAGQBUT",35,0)
 S CWL=$$CWL^MAGBAPI(PLACE)
"RTN","MAGQBUT",36,0)
 S DATA=$S(CWL?1N.N:$G(^MAG(2005.2,CWL,0)),1:0)
"RTN","MAGQBUT",37,0)
 ;Check for scheduled purge
"RTN","MAGQBUT",38,0)
 S AUTON=$G(^MAG(2006.1,PLACE,5))
"RTN","MAGQBUT",39,0)
 I $P(AUTON,U,3) D
"RTN","MAGQBUT",40,0)
 . I ($$NOW^XLFDT-$P(AUTON,U,4))>($P(AUTON,U,6)_"."_$P(AUTON,U,5)) D
"RTN","MAGQBUT",41,0)
 . . S $P(RESULT,U,4)="PURGE"
"RTN","MAGQBUT",42,0)
 . . S $P(^MAG(2006.1,PLACE,5),U,6)=$P($$NOW^XLFDT,".")
"RTN","MAGQBUT",43,0)
 . . Q
"RTN","MAGQBUT",44,0)
 . Q
"RTN","MAGQBUT",45,0)
 I $P($G(^MAG(2006.1,PLACE,1)),U,10) D  Q  ;Cache balancing off
"RTN","MAGQBUT",46,0)
 . I $$MAXSP(CWL,SPACE,SIZE,DATA,MIN) S $P(RESULT,U)=1 Q
"RTN","MAGQBUT",47,0)
 . D FSP(MIN,.SPACE,.SIZE,.IEN,.TS)
"RTN","MAGQBUT",48,0)
 . I IEN D SCWL(IEN) S $P(RESULT,U)=1 ;Advance current write location
"RTN","MAGQBUT",49,0)
 . E  D
"RTN","MAGQBUT",50,0)
 . . S $P(RESULT,U)=0
"RTN","MAGQBUT",51,0)
 . . S $P(RESULT,U,2,3)=$P(^MAG(2005.2,$P(^MAG(2006.1,PLACE,0),U,3),0),U,1,2)
"RTN","MAGQBUT",52,0)
 . . S:$P($G(^MAG(2006.1,PLACE,5)),U) $P(RESULT,U,4)="PURGE"
"RTN","MAGQBUT",53,0)
 . . D TMESS
"RTN","MAGQBUT",54,0)
 . . Q
"RTN","MAGQBUT",55,0)
 . Q
"RTN","MAGQBUT",56,0)
 D FSP(MIN,.SPACE,.SIZE,.IEN,.TS)
"RTN","MAGQBUT",57,0)
 ; SET THE CURRENT WRITE LOCATION = IEN HERE
"RTN","MAGQBUT",58,0)
 I IEN D SCWL(IEN)  ;NEED TO PARAMETER DRIVE THIS PROCESS !!!!!
"RTN","MAGQBUT",59,0)
 I SIZE>0,(((SPACE/SIZE)*100)>MIN) S $P(RESULT,U)=1 Q
"RTN","MAGQBUT",60,0)
 S $P(RESULT,U)=0
"RTN","MAGQBUT",61,0)
 S $P(RESULT,U,2,3)=$P(^MAG(2005.2,$P(^MAG(2006.1,PLACE,0),U,3),0),U,1,2)
"RTN","MAGQBUT",62,0)
 S:$P($G(^MAG(2006.1,PLACE,5)),U) $P(RESULT,U,4)="PURGE"
"RTN","MAGQBUT",63,0)
 D TMESS
"RTN","MAGQBUT",64,0)
 Q
"RTN","MAGQBUT",65,0)
TMESS ;Trigger a message
"RTN","MAGQBUT",66,0)
 N TN S TN=^MAG(2006.1,PLACE,3)
"RTN","MAGQBUT",67,0)
 Q:$$FMADD^XLFDT($P(TN,"^",11),"",$P(TN,"^",7),"","")>$$NOW^XLFDT
"RTN","MAGQBUT",68,0)
 D ICCL^MAGQBUT1(CNT_U_TS_U_SPACE_U_$P($G(^MAG(2006.1,PLACE,5)),U),$P(TN,"^",7)_" hours.")
"RTN","MAGQBUT",69,0)
 Q
"RTN","MAGQBUT",70,0)
TPURGE ; 
"RTN","MAGQBUT",71,0)
 S $P(RESULT,U,2,3)=$P(^MAG(2005.2,$P(^MAG(2006.1,PLACE,0),U,3),0),1,2)
"RTN","MAGQBUT",72,0)
 S TNODE=^MAG(2006.1,PLACE,3)
"RTN","MAGQBUT",73,0)
 S TINT=$P(TNODE,"^",8) I "^W^D^"[("^"_TINT_"^") D  ;CONDITIONAL PURGE
"RTN","MAGQBUT",74,0)
 . S NOW=$$NOW^XLFDT,TOD=$P(TNODE,"^",9)
"RTN","MAGQBUT",75,0)
 . Q:NOW<$$FMADD^XLFDT($P(NOW,"."),"",TOD,"","")
"RTN","MAGQBUT",76,0)
 . S TLTIME=$P(TNODE,"^",10)
"RTN","MAGQBUT",77,0)
 . I NOW>$$FMADD^XLFDT(TLTIME,$S(TINT="D":1,TINT="W":7),"","","") D
"RTN","MAGQBUT",78,0)
 . . S $P(RESULT,"^",4)="PURGE"
"RTN","MAGQBUT",79,0)
 Q
"RTN","MAGQBUT",80,0)
MAXSP(IEN,FS,SZ,NODE,MIN) ;
"RTN","MAGQBUT",81,0)
 N SPACE,SIZE
"RTN","MAGQBUT",82,0)
 S SPACE=+$P(NODE,U,5),SIZE=+$P(NODE,U,3)
"RTN","MAGQBUT",83,0)
 I SIZE>0,(((SPACE/SIZE)*100)>MIN),SPACE>FS D  Q 1
"RTN","MAGQBUT",84,0)
 . S FS=SPACE,SZ=SIZE
"RTN","MAGQBUT",85,0)
 Q 0
"RTN","MAGQBUT",86,0)
HFIND(SHARE,IEN) ;HASHED SHARE AT THE SAME LOCATION
"RTN","MAGQBUT",87,0)
 N INDEX,NODE
"RTN","MAGQBUT",88,0)
 S INDEX=0,RESULT=""
"RTN","MAGQBUT",89,0)
 F  S INDEX=$O(^MAG(2005.2,"AC",SHARE,INDEX)) Q:INDEX'?1N.N  D
"RTN","MAGQBUT",90,0)
 . Q:INDEX=IEN
"RTN","MAGQBUT",91,0)
 . I $P(^MAG(2005.2,INDEX,0),"^",8)="Y" S RESULT=1
"RTN","MAGQBUT",92,0)
 Q RESULT
"RTN","MAGQBUT",93,0)
SPARM() ;Site Parameter for PERCENT server space to be held in reserve
"RTN","MAGQBUT",94,0)
 N VALUE
"RTN","MAGQBUT",95,0)
 S VALUE=$P($G(^MAG(2006.1,$$PLACE^MAGBAPI(+$G(DUZ(2))),1)),U,8)
"RTN","MAGQBUT",96,0)
 Q $S(VALUE>0:VALUE,1:5)
"RTN","MAGQBUT",97,0)
SCWL(IEN) ;
"RTN","MAGQBUT",98,0)
 S ^MAG(2006.1,PLACE,"ARITE")=IEN,$P(^MAG(2006.1,PLACE,0),U,3)=IEN
"RTN","MAGQBUT",99,0)
 S ^MAG(2006.1,PLACE,"APXWRITE")=IEN,$P(^MAG(2006.1,PLACE,"PACS"),U,3)=IEN
"RTN","MAGQBUT",100,0)
 Q
"RTN","MAGQBUT",101,0)
FSP(MIN,SPACE,SIZE,IEN,TOTAL) ; Find Space
"RTN","MAGQBUT",102,0)
 N INDX,DATA S (TOTAL,INDX)=0
"RTN","MAGQBUT",103,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBUT",104,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBUT",105,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBUT",106,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBUT",107,0)
 . I $P(DATA,U,8)'="Y",$$HFIND($P(DATA,"^",2),INDX) Q
"RTN","MAGQBUT",108,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBUT",109,0)
 . Q:$E($P(DATA,U,2),1,2)'="\\"
"RTN","MAGQBUT",110,0)
 . S TOTAL=TOTAL+(+$P(DATA,U,5))
"RTN","MAGQBUT",111,0)
 . S CNT=CNT+1
"RTN","MAGQBUT",112,0)
 . I $$MAXSP(INDX,.SPACE,.SIZE,DATA,MIN) S IEN=INDX
"RTN","MAGQBUT",113,0)
 Q
"RTN","MAGQBUT",114,0)
BUTERR ;Background Processor Utility Error trap
"RTN","MAGQBUT",115,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGQBUT",116,0)
 Q
"RTN","MAGQBUT",117,0)
SLAD(RESULT) ;SITE LAST ACCESS DATE(DEFAULT TO 180)
"RTN","MAGQBUT",118,0)
 N PLACE
"RTN","MAGQBUT",119,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",120,0)
 S RESULT=$S(+$P(^MAG(2006.1,PLACE,1),"^",2):+$P(^MAG(2006.1,PLACE,1),"^",2),1:180)
"RTN","MAGQBUT",121,0)
 Q
"RTN","MAGQBUT",122,0)
DQUE(QIEN) ;
"RTN","MAGQBUT",123,0)
 N ZNODE,TYPE,MAGIEN,QREC
"RTN","MAGQBUT",124,0)
 S U="^"
"RTN","MAGQBUT",125,0)
 S ZNODE=$G(^MAGQUEUE(2006.03,QIEN,0))
"RTN","MAGQBUT",126,0)
 S TYPE=$P(ZNODE,U)
"RTN","MAGQBUT",127,0)
 I TYPE="" D DBQ(QIEN) Q
"RTN","MAGQBUT",128,0)
 S QREC=$O(^MAGQUEUE(2006.031,"B",TYPE,""))
"RTN","MAGQBUT",129,0)
 I QREC,$P($G(^MAGQUEUE(2006.031,QREC,0)),U,2)=QIEN Q  ;'DELETE LPROC YET
"RTN","MAGQBUT",130,0)
 K ^MAGQUEUE(2006.03,"B",$P(ZNODE,U),QIEN)
"RTN","MAGQBUT",131,0)
 K ^MAGQUEUE(2006.03,QIEN,0)
"RTN","MAGQBUT",132,0)
 I $P(ZNODE,U,5)]"" D
"RTN","MAGQBUT",133,0)
 . K ^MAGQUEUE(2006.03,"C",TYPE,$E($P(ZNODE,U,5),1,30),QIEN)
"RTN","MAGQBUT",134,0)
 L +^MAGQUEUE(2006.03,0)
"RTN","MAGQBUT",135,0)
 S $P(^MAGQUEUE(2006.03,0),"^",4)=$P(^MAGQUEUE(2006.03,0),"^",4)-1
"RTN","MAGQBUT",136,0)
 L -^MAGQUEUE(2006.03,0)
"RTN","MAGQBUT",137,0)
 Q:TYPE="DELETE"
"RTN","MAGQBUT",138,0)
 S MAGIEN=$P(ZNODE,U,7)
"RTN","MAGQBUT",139,0)
 Q:MAGIEN'?1N.N
"RTN","MAGQBUT",140,0)
 I TYPE="JUKEBOX" D  Q
"RTN","MAGQBUT",141,0)
 . K ^MAGQUEUE(2006.03,"JX",MAGIEN,QIEN)
"RTN","MAGQBUT",142,0)
 I "^JBTOHD^PREFET^"[("^"_TYPE_"^") D  Q
"RTN","MAGQBUT",143,0)
 . Q:'$P(ZNODE,U,8)
"RTN","MAGQBUT",144,0)
 . K ^MAGQUEUE(2006.03,"JD",MAGIEN,$P(ZNODE,U,8),QIEN)
"RTN","MAGQBUT",145,0)
 Q
"RTN","MAGQBUT",146,0)
DQUE1(RESULT,QIEN) ;[MAGQB QUEDEL]
"RTN","MAGQBUT",147,0)
 D DQUE(QIEN)
"RTN","MAGQBUT",148,0)
 Q
"RTN","MAGQBUT",149,0)
DBQ(QIEN) ;
"RTN","MAGQBUT",150,0)
 N INDX
"RTN","MAGQBUT",151,0)
 F INDX="DELETE","ABSTRACT","JUKEBOX","JBTOHD","PREFET","IMPORT" D
"RTN","MAGQBUT",152,0)
 . K ^MAGQUEUE(2006.03,"B",INDX,QIEN)
"RTN","MAGQBUT",153,0)
 K ^MAGQUEUE(2006.03,QIEN,0)
"RTN","MAGQBUT",154,0)
 Q
"RTN","MAGQBUT",155,0)
JBQUE(RESULT,QIEN) ; RPC[MAGQBP JBQUE]
"RTN","MAGQBUT",156,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT",157,0)
 S RESULT=$$JUKEBOX^MAGBAPI(QIEN)
"RTN","MAGQBUT",158,0)
 Q
"RTN","MAGQBUT",159,0)
POSTI ;
"RTN","MAGQBUT",160,0)
 D INI^MAGUSIT
"RTN","MAGQBUT",161,0)
 N DIC,X,DA,Y,NODE1,NODE3,PLACE
"RTN","MAGQBUT",162,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",163,0)
 S DIC="^MAG(2006.1,"_PLACE_",2,",DIC(0)="XL",X="TXT",DLAYGO="2006.112"
"RTN","MAGQBUT",164,0)
 S DA(1)=PLACE,DIC("P")="2006.112"
"RTN","MAGQBUT",165,0)
 D ^DIC
"RTN","MAGQBUT",166,0)
 ;File retention parameters defaults 45 - non abs /120 abs
"RTN","MAGQBUT",167,0)
 ;autowrite location update defaulted to ON
"RTN","MAGQBUT",168,0)
 S (DIE,DIC,DLAYGO)=2006.1,DA=PLACE,DIC(0)="XL"
"RTN","MAGQBUT",169,0)
 S NODE1=$G(^MAG(2006.1,1,1)),NODE3=$G(^MAG(2006.1,PLACE,3)),DR=""
"RTN","MAGQBUT",170,0)
 S KEYS=$G(^MAG(2006.1,PLACE,"KEYS"))
"RTN","MAGQBUT",171,0)
 S DR=$S(($P(NODE1,"^",2)'?1N.N):"8///45",1:DR)
"RTN","MAGQBUT",172,0)
 I ($P(NODE1,"^",5)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"9///45"
"RTN","MAGQBUT",173,0)
 I ($P(NODE1,"^",10)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"20///1"
"RTN","MAGQBUT",174,0)
 I ($P(NODE3,"^",1)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"21///45"
"RTN","MAGQBUT",175,0)
 I ($P(NODE3,"^",2)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"22///45"
"RTN","MAGQBUT",176,0)
 I ($P(NODE3,"^",3)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"23///120"
"RTN","MAGQBUT",177,0)
 I ($P(NODE3,"^",4)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"24///120"
"RTN","MAGQBUT",178,0)
 I ($P(NODE3,"^",5)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"102///10"
"RTN","MAGQBUT",179,0)
 I ($P(NODE3,"^",6)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"103///15"
"RTN","MAGQBUT",180,0)
 I ($P(NODE3,"^",7)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"11.5///6"
"RTN","MAGQBUT",181,0)
 S DR=DR_$S((DR["/"):";",1:"")_"11.6///D"
"RTN","MAGQBUT",182,0)
 I ($P(NODE3,"^",9)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"11.7///4"
"RTN","MAGQBUT",183,0)
 I ($P(NODE3,"^",10)'?1N.E) D
"RTN","MAGQBUT",184,0)
 . S DR=DR_$S((DR["/"):";",1:"")_"11.8///"_$$NOW^XLFDT
"RTN","MAGQBUT",185,0)
 I ($P(NODE3,"^",11)'?1N.E) D
"RTN","MAGQBUT",186,0)
 . S DR=DR_$S((DR["/"):";",1:"")_"11.9///"_$$NOW^XLFDT
"RTN","MAGQBUT",187,0)
 I ($P(KEYS,"^",2)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"121///60"
"RTN","MAGQBUT",188,0)
 I ($P(KEYS,"^",3)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"122///90"
"RTN","MAGQBUT",189,0)
 D ^DIE
"RTN","MAGQBUT",190,0)
 ; Enable the Imaging Health Summary component
"RTN","MAGQBUT",191,0)
 I $D(^GMT(142.1,235)) D
"RTN","MAGQBUT",192,0)
 . S (DIE,DIC)=142.1,DA=235
"RTN","MAGQBUT",193,0)
 . S DR="5///@;8///@"
"RTN","MAGQBUT",194,0)
 . D ^DIE
"RTN","MAGQBUT",195,0)
 K DIE,DIC,DA,Y,X,DLAYGO
"RTN","MAGQBUT",196,0)
 ; ESTABLISH LOCAL MAIL GROUP
"RTN","MAGQBUT",197,0)
 D MMGRP^MAGQAI
"RTN","MAGQBUT",198,0)
 D SILENT^MAGDROUT
"RTN","MAGQBUT",199,0)
 Q
"RTN","MAGQBUT",200,0)
X1 ; CLEANUP OLD FAILED JUKEBOX AND JBTOHD QUEUE ENTRYS
"RTN","MAGQBUT",201,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","MAGQBUT",202,0)
 S DIR("?")="This activity removes already processed queues which precede the current queue pointer.  These queues are not necessary for file recovery.The current BP software will recover files during purge or by the verify."
"RTN","MAGQBUT",203,0)
 S DIR("A")="Do you wish to remove old processed Background Processor Queues" D
"RTN","MAGQBUT",204,0)
 . D ^DIR Q:($D(DIRUT)!(Y'="1"))
"RTN","MAGQBUT",205,0)
 . F PC="JUKEBOX","JBTOHD","PREFET","IMPORT" D FOQUE(PC)
"RTN","MAGQBUT",206,0)
 ; REINDEX FIELD 4 (COMPLETION STATUS) IN FILE 2006.03 (QUEUE)
"RTN","MAGQBUT",207,0)
 K ^MAGQUEUE(2006.03,"C")
"RTN","MAGQBUT",208,0)
 S DIK="^MAGQUEUE(2006.03,",DIK(1)="4^C"
"RTN","MAGQBUT",209,0)
 D ENALL^DIK K DIK
"RTN","MAGQBUT",210,0)
 Q
"RTN","MAGQBUT",211,0)
FOQUE(PROC) ;PASS A BP PROCESS TO DELETE OLD FAILED QUEUES
"RTN","MAGQBUT",212,0)
 N XX,JXMAX,JHMAX,QIEN
"RTN","MAGQBUT",213,0)
 S QIEN=$O(^MAGQUEUE(2006.031,"B",PROC,""))
"RTN","MAGQBUT",214,0)
 I QIEN?1N.N D
"RTN","MAGQBUT",215,0)
 . S JXMAX=$P($G(^MAGQUEUE(2006.031,QIEN,0)),"^",2)
"RTN","MAGQBUT",216,0)
 . Q:JXMAX'?1N.N 
"RTN","MAGQBUT",217,0)
 . S JXMAX=$O(^MAGQUEUE(2006.03,"B",PROC,JXMAX),-1)
"RTN","MAGQBUT",218,0)
 . Q:JXMAX'?1N.N
"RTN","MAGQBUT",219,0)
 . S XX=0
"RTN","MAGQBUT",220,0)
 . F  S XX=$O(^MAGQUEUE(2006.03,"B",PROC,XX)) Q:XX>(JXMAX-1)  D
"RTN","MAGQBUT",221,0)
 . . I $P($G(^MAGQUEUE(2006.03,XX,0)),"^",5)'="" D DQUE(XX)
"RTN","MAGQBUT1")
0^68^B78974758
"RTN","MAGQBUT1",1,0)
MAGQBUT1 ;WOIFO/RP; Utilities for Background [ 03/25/2001 11:20 ]
"RTN","MAGQBUT1",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGQBUT1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT1",10,0)
 ;; |                                                               |
"RTN","MAGQBUT1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT1",17,0)
 ;;
"RTN","MAGQBUT1",18,0)
 Q
"RTN","MAGQBUT1",19,0)
BPPS(INPUT,WS,PROCESS) ;INPUT TRANSFORM FOR FILE 2006.8
"RTN","MAGQBUT1",20,0)
 N IEN,FND,WSNAME,WSNAME2,ZNODE,PIECE,MAGX,MAGY
"RTN","MAGQBUT1",21,0)
 S U="^"
"RTN","MAGQBUT1",22,0)
 Q:'(+$P($G(^MAG(2006.8,WS,0)),U,12)) 0  ;NOT A BACKGROUND PROCESSOR
"RTN","MAGQBUT1",23,0)
 Q:'INPUT 1
"RTN","MAGQBUT1",24,0)
 S WSNAME=$$UPPER^MAGQE4($P($G(^MAG(2006.8,WS,1)),U))
"RTN","MAGQBUT1",25,0)
 Q:$L(WSNAME)<3 0 ;BP WS NOT PROPERLY INSTALLED
"RTN","MAGQBUT1",26,0)
 Q:$O(^MAG(2006.8,"C",WSNAME,""))'?1N.N 0
"RTN","MAGQBUT1",27,0)
 F MAGX=12,13,14,15,16,17,20 D  Q:MAGY=PROCESS
"RTN","MAGQBUT1",28,0)
 . S MAGY=$$GET1^DID(2006.8,MAGX,"","LABEL")
"RTN","MAGQBUT1",29,0)
 . D:MAGY=PROCESS
"RTN","MAGQBUT1",30,0)
 . . S PIECE=$$GET1^DID(2006.8,MAGX,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGQBUT1",31,0)
 Q:MAGY'=PROCESS 0
"RTN","MAGQBUT1",32,0)
 S PIECE=$P(PIECE,";",2)
"RTN","MAGQBUT1",33,0)
 S IEN=0,WSNAME2="",FND=0
"RTN","MAGQBUT1",34,0)
 F  S WSNAME2=$$UPPER^MAGQE4($O(^MAG(2006.8,"C",WSNAME2))) Q:WSNAME2=""  D  Q:FND
"RTN","MAGQBUT1",35,0)
 . Q:WSNAME2=WSNAME
"RTN","MAGQBUT1",36,0)
 . S IEN=$O(^MAG(2006.8,"C",WSNAME2,"")) Q:IEN'?1N.N
"RTN","MAGQBUT1",37,0)
 . S ZNODE=$G(^MAG(2006.8,IEN,0))
"RTN","MAGQBUT1",38,0)
 . Q:$P(ZNODE,"^",12)'="1"
"RTN","MAGQBUT1",39,0)
 . S:($P(ZNODE,"^",PIECE)="1") FND="1"
"RTN","MAGQBUT1",40,0)
 Q $S(FND="1":0,1:1)
"RTN","MAGQBUT1",41,0)
BPCLR(X) ;
"RTN","MAGQBUT1",42,0)
 N PIECE
"RTN","MAGQBUT1",43,0)
 F PIECE=13,14,15,16,17,18,23 D
"RTN","MAGQBUT1",44,0)
 . S $P(^MAG(2006.8,X,0),"^",PIECE)="0"
"RTN","MAGQBUT1",45,0)
 Q
"RTN","MAGQBUT1",46,0)
BPQSL(RESULT,TYPE) ;
"RTN","MAGQBUT1",47,0)
 N STATUS,CNT,IEN,CP
"RTN","MAGQBUT1",48,0)
 S STATUS="",CNT=0
"RTN","MAGQBUT1",49,0)
 F  S STATUS=$O(^MAGQUEUE(2006.03,"C",TYPE,STATUS)) Q:STATUS=""  D
"RTN","MAGQBUT1",50,0)
 . Q:+STATUS>0
"RTN","MAGQBUT1",51,0)
 . S IEN=$O(^MAGQUEUE(2006.03,"C",TYPE,STATUS,""))
"RTN","MAGQBUT1",52,0)
 . S CP=$P(^MAGQUEUE(2006.031,$O(^MAGQUEUE(2006.031,"B",TYPE,"")),0),"^",2)
"RTN","MAGQBUT1",53,0)
 . Q:IEN>(CP)
"RTN","MAGQBUT1",54,0)
 . S CNT=CNT+1,RESULT(CNT)=STATUS
"RTN","MAGQBUT1",55,0)
 Q
"RTN","MAGQBUT1",56,0)
BPPNQ(RESULT) ;[MAGQB PURNUL]
"RTN","MAGQBUT1",57,0)
 N INDEX,ZNODE,PREFIX,STATUS,PLACE
"RTN","MAGQBUT1",58,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT1",59,0)
 S PLACE=$$GETPLACE^MAGBAPI($G(DUZ(2)))
"RTN","MAGQBUT1",60,0)
 S INDEX=0,RESULT="1",PREFIX=$P($G(^MAG(2006.1,PLACE,0)),"^",2)
"RTN","MAGQBUT1",61,0)
 F  S INDEX=$O(^MAGQUEUE(2006.03,INDEX)) Q:INDEX'?1N.N  D
"RTN","MAGQBUT1",62,0)
 . S ZNODE=^MAGQUEUE(2006.03,INDEX,0)
"RTN","MAGQBUT1",63,0)
 . I $P(ZNODE,"^")="" D DQUE^MAGQBUT(INDEX) Q
"RTN","MAGQBUT1",64,0)
 . S STATUS=$P(ZNODE,"^",5)
"RTN","MAGQBUT1",65,0)
 . I STATUS[(PREFIX_INDEX) D
"RTN","MAGQBUT1",66,0)
 . . F  S STATUS=$P(STATUS,(PREFIX_INDEX))_$P(STATUS,(PREFIX_INDEX),2,999) Q:STATUS'[(PREFIX_INDEX)
"RTN","MAGQBUT1",67,0)
 . . S $P(^MAGQUEUE(2006.03,INDEX,0),"^",5)=STATUS
"RTN","MAGQBUT1",68,0)
 . I STATUS[(INDEX_" ") D
"RTN","MAGQBUT1",69,0)
 . . F  S STATUS=$P(STATUS,(INDEX_" "))_$P(STATUS,(INDEX_" "),2,999) Q:STATUS'[(INDEX_" ")
"RTN","MAGQBUT1",70,0)
 . . S $P(^MAGQUEUE(2006.03,INDEX,0),"^",5)=STATUS
"RTN","MAGQBUT1",71,0)
 K ^MAGQUEUE(2006.03,"C")
"RTN","MAGQBUT1",72,0)
 S DIK="^MAGQUEUE(2006.03,",DIK(1)="4^C"
"RTN","MAGQBUT1",73,0)
 D ENALL^DIK K DIK
"RTN","MAGQBUT1",74,0)
 Q
"RTN","MAGQBUT1",75,0)
RSQUE(RESULT,IEN,QUEUE) ;[MAGQB RSQUE]
"RTN","MAGQBUT1",76,0)
 N PTR
"RTN","MAGQBUT1",77,0)
 S PTR=$O(^MAGQUEUE(2006.031,"B",QUEUE,""))
"RTN","MAGQBUT1",78,0)
 I $P(^MAGQUEUE(2006.031,PTR,0),"^")=QUEUE D
"RTN","MAGQBUT1",79,0)
 . S $P(^MAGQUEUE(2006.031,PTR,0),"^",2)=IEN
"RTN","MAGQBUT1",80,0)
 . D RQCNT^MAGQBTM
"RTN","MAGQBUT1",81,0)
 Q
"RTN","MAGQBUT1",82,0)
ICCL(SRVRCNT,NMESS) ;UPDATE IMAGING DISTRIBUTION
"RTN","MAGQBUT1",83,0)
 N Y,LOC,INDEX,CNT,IEN,ARRAY,SUB1,SUB2,NAME
"RTN","MAGQBUT1",84,0)
 D NOW^%DTC S Y=% D DD^%DT
"RTN","MAGQBUT1",85,0)
 S LOC=$$KSP^XUPARAM("WHERE")
"RTN","MAGQBUT1",86,0)
 S CNT=1,^TMP($J,"MAGQ",CNT)="SITE: "_LOC
"RTN","MAGQBUT1",87,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="DATE: "_Y_" "_$G(^XMB("TIMEZONE"))
"RTN","MAGQBUT1",88,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="SENDER: Imaging Background Processor"
"RTN","MAGQBUT1",89,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="Total Cache Free: "_$P(SRVRCNT,U,2)_" gigabytes"
"RTN","MAGQBUT1",90,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="Total Cache Available: "_$P(SRVRCNT,U,3)_" gigabytes"
"RTN","MAGQBUT1",91,0)
 I $P(SRVRCNT,U,4) S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="An Automatic Purge process has been Activated."
"RTN","MAGQBUT1",92,0)
 E  S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="The Automatic Purge process is NOT configured."
"RTN","MAGQBUT1",93,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="The "_$P(SRVRCNT,U)_" Imaging cache servers will"
"RTN","MAGQBUT1",94,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="require operator intervention to ensure continued"
"RTN","MAGQBUT1",95,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="availability.  The following MAG SERVER members"
"RTN","MAGQBUT1",96,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="are being notified:"
"RTN","MAGQBUT1",97,0)
 S INDEX=0,IEN=$$FIND1^DIC(3.8,"","MX","MAG SERVER","","","ERR")
"RTN","MAGQBUT1",98,0)
 Q:IEN'?1N.N
"RTN","MAGQBUT1",99,0)
 D GETS^DIQ(3.8,IEN_",","2*;11*;12*","","ARRAY")
"RTN","MAGQBUT1",100,0)
 S (SUB1,SUB2)=""
"RTN","MAGQBUT1",101,0)
 F  S SUB1=$O(ARRAY(SUB1)) Q:SUB1=""  D
"RTN","MAGQBUT1",102,0)
 . F  S SUB2=$O(ARRAY(SUB1,SUB2)) Q:SUB2=""  D
"RTN","MAGQBUT1",103,0)
 . . S NAME=$G(ARRAY(SUB1,SUB2,".01")) D:NAME'=""
"RTN","MAGQBUT1",104,0)
 . . . S CNT=CNT+1,^TMP($J,"MAGQ",8+CNT)=NAME
"RTN","MAGQBUT1",105,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)="The next notifications will occur in:"
"RTN","MAGQBUT1",106,0)
 S CNT=CNT+1,^TMP($J,"MAGQ",CNT)=NMESS
"RTN","MAGQBUT1",107,0)
 D MAILIT
"RTN","MAGQBUT1",108,0)
 S $P(^MAG(2006.1,$$GETPLACE^MAGBAPI($G(DUZ(2))),3),"^",11)=$$NOW^XLFDT
"RTN","MAGQBUT1",109,0)
 K ARRAY
"RTN","MAGQBUT1",110,0)
 Q
"RTN","MAGQBUT1",111,0)
MAILIT ;Send the report to the Clinicial Application Time
"RTN","MAGQBUT1",112,0)
 N XMSUB
"RTN","MAGQBUT1",113,0)
 S XMSUB="Image Cache Critically Low at "_LOC
"RTN","MAGQBUT1",114,0)
MAILSHR ;Shared Mail server code
"RTN","MAGQBUT1",115,0)
 ;If droping in...must manage XMSUB
"RTN","MAGQBUT1",116,0)
 N XMY,XMTEXT
"RTN","MAGQBUT1",117,0)
 S XMTEXT="^TMP($J,""MAGQ"","
"RTN","MAGQBUT1",118,0)
 S:$G(DUZ) XMY(DUZ)=""
"RTN","MAGQBUT1",119,0)
 S XMY("G.MAG SERVER")=""
"RTN","MAGQBUT1",120,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGQBUT1",121,0)
 D ^XMD
"RTN","MAGQBUT1",122,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGQBUT1",123,0)
 Q
"RTN","MAGQBUT1",124,0)
ALLSERV(RESULT) ;
"RTN","MAGQBUT1",125,0)
 ; RPC[MAGQ ALL SERVER]
"RTN","MAGQBUT1",126,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT1",127,0)
 N INDX,DATA,CNT,SHARE,CWL,VALUE,TMP ;CWL=CURRENT WRITE LOCATION
"RTN","MAGQBUT1",128,0)
 S CWL=$$CWL^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBUT1",129,0)
 I CWL D
"RTN","MAGQBUT1",130,0)
 . S DATA=$G(^MAG(2005.2,CWL,0))
"RTN","MAGQBUT1",131,0)
 . S SHARE=$P(DATA,U,2)
"RTN","MAGQBUT1",132,0)
 . S RESULT(0)=SHARE_U_CWL_U_+$P(DATA,U,5)_U_+$P(DATA,U,3)_U_$P(DATA,U)
"RTN","MAGQBUT1",133,0)
 . Q
"RTN","MAGQBUT1",134,0)
 E  S RESULT(0)="-1^The Current Write Location (CWL) could not be set."
"RTN","MAGQBUT1",135,0)
 S INDX=0,U="^",CNT=1
"RTN","MAGQBUT1",136,0)
 K ^TMP("MAGQAS")
"RTN","MAGQBUT1",137,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBUT1",138,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBUT1",139,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBUT1",140,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBUT1",141,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBUT1",142,0)
 . S SHARE=$P(DATA,U,2)
"RTN","MAGQBUT1",143,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGQBUT1",144,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBUT1",145,0)
 . ;Q:$D(TMP(SHARE))
"RTN","MAGQBUT1",146,0)
 . S TMP(SHARE)=""
"RTN","MAGQBUT1",147,0)
 . S VALUE=SHARE_U_INDX_U_+$P(DATA,U,5)_U_+$P(DATA,U,3)_U_$P(DATA,U)
"RTN","MAGQBUT1",148,0)
 . I INDX=CWL D  Q  ;ELSE CONTINUE 
"RTN","MAGQBUT1",149,0)
 . . S RESULT(0)=VALUE_U_$G(^TMP("MAGQ","WSUD"))
"RTN","MAGQBUT1",150,0)
 . . S ^TMP("MAGQAS",0)=VALUE ;1ST SHARE=CWL
"RTN","MAGQBUT1",151,0)
 . S RESULT(CNT)=VALUE,CNT=CNT+1
"RTN","MAGQBUT1",152,0)
 . S ^TMP("MAGQAS",CNT-1)=VALUE
"RTN","MAGQBUT1",153,0)
 Q
"RTN","MAGQBUT1",154,0)
ALLSHR(RESULT) ; RPC[MAGQBP ALL SHARES]
"RTN","MAGQBUT1",155,0)
 N TMP,INDX,DATA,CNT,SHARE,CWL,VALUE ;CWL=CURRENT WRITE LOCATION
"RTN","MAGQBUT1",156,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT1",157,0)
 S (CNT,INDX)=0,U="^"
"RTN","MAGQBUT1",158,0)
 S CWL=$$CWL^MAGBAPI($$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGQBUT1",159,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBUT1",160,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBUT1",161,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBUT1",162,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBUT1",163,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBUT1",164,0)
 . S SHARE=$P(DATA,U,2)
"RTN","MAGQBUT1",165,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGQBUT1",166,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGQBUT1",167,0)
 . Q:$D(TMP(SHARE))
"RTN","MAGQBUT1",168,0)
 . S TMP(SHARE)=""
"RTN","MAGQBUT1",169,0)
 S INDX=""
"RTN","MAGQBUT1",170,0)
 F  S INDX=$O(TMP(INDX)) Q:INDX=""  D
"RTN","MAGQBUT1",171,0)
 . S RESULT(CNT)=INDX,CNT=CNT+1
"RTN","MAGQBUT1",172,0)
 K TMP
"RTN","MAGQBUT1",173,0)
 Q
"RTN","MAGQBUT1",174,0)
FSUPDT(RESULT,IEN,SPACE,SIZE) ;
"RTN","MAGQBUT1",175,0)
 ;File Server Update
"RTN","MAGQBUT1",176,0)
 ; RPC[MAGQ FS UPDATE]
"RTN","MAGQBUT1",177,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT1",178,0)
 N NODE,X,Y,INDEX,SHNAME
"RTN","MAGQBUT1",179,0)
 S X=$$NOW^XLFDT S Y=X D DD^%DT S ^TMP("MAGQ","WSUD")=Y
"RTN","MAGQBUT1",180,0)
 S ^TMP("MAGQ","WSUD",XWBTIP)=Y
"RTN","MAGQBUT1",181,0)
 I $G(^MAG(2005.2,IEN,0))="" S RESULT="-1^No Network Location Entry" Q
"RTN","MAGQBUT1",182,0)
 S NODE=^MAG(2005.2,IEN,0)
"RTN","MAGQBUT1",183,0)
 D FSW(IEN,NODE)
"RTN","MAGQBUT1",184,0)
 S INDEX=0,SHNAME=$P(NODE,"^",2)
"RTN","MAGQBUT1",185,0)
 ; NOW UPDATE THE SIZING FIELDS FOR SHARES OF SAME PHYS LOCATION
"RTN","MAGQBUT1",186,0)
 F  S INDEX=$O(^MAG(2005.2,"AC",SHNAME,INDEX)) Q:INDEX'?1N.N  D
"RTN","MAGQBUT1",187,0)
 . Q:INDEX=IEN
"RTN","MAGQBUT1",188,0)
 . S NODE=^MAG(2005.2,INDEX,0)
"RTN","MAGQBUT1",189,0)
 . D FSW(INDEX,NODE)
"RTN","MAGQBUT1",190,0)
 S RESULT="1^Update Complete"
"RTN","MAGQBUT1",191,0)
 D RQCNT^MAGQBTM  ;RECOUNT THE TO BE PROCESSED COUNTERS !!NEW
"RTN","MAGQBUT1",192,0)
 Q
"RTN","MAGQBUT1",193,0)
FSW(INDEX,NODE) ;
"RTN","MAGQBUT1",194,0)
 I (($P(NODE,"^",3)'=(+SIZE))!($P(NODE,"^",5)'=(+SPACE))) D
"RTN","MAGQBUT1",195,0)
 . S $P(NODE,"^",3)=+SIZE,$P(NODE,"^",5)=+SPACE,^MAG(2005.2,INDEX,0)=NODE
"RTN","MAGQBUT1",196,0)
 Q
"RTN","MAGQBUT1",197,0)
QUEUER(QUE,FROM,TO) ;
"RTN","MAGQBUT1",198,0)
 N TYPE,INC,CNT,AR,TMP
"RTN","MAGQBUT1",199,0)
 I $$GET1^DIQ(200,+$G(DUZ),.01)="" D  Q
"RTN","MAGQBUT1",200,0)
 . W !,"You must have a valid User ID (DUZ) to use this function!"
"RTN","MAGQBUT1",201,0)
 I "^JBTOHD^PREFET^ABSTRACT^JUKEBOX^GCC^DELETE^"'[QUE D  Q
"RTN","MAGQBUT1",202,0)
 . W !,"Only JBTOHD, PREFET, ABSTRACT, JUKEBOX, DELETE & GCC queues are valid!"
"RTN","MAGQBUT1",203,0)
 . W !,"Input values: ""Queue type"",""From Image IEN"",""To Image IEN"""
"RTN","MAGQBUT1",204,0)
 S CNT=0
"RTN","MAGQBUT1",205,0)
 F INC=FROM:1:TO D
"RTN","MAGQBUT1",206,0)
 . I ('$D(^MAG(2005,INC,0))&('$D(^MAG(2005.1,INC,0)))) Q
"RTN","MAGQBUT1",207,0)
 . I ($P($G(^MAG(2005,INC,0)),"^",2)="")&($P($G(^MAG(2005.1,INC,0)),"^",2)="") Q  ;No full filename attribute
"RTN","MAGQBUT1",208,0)
 . I (+$P($G(^MAG(2005,INC,1,0)),"^",4)>0)!(+$P($G(^MAG(2005.1,INC,1,0)),"^",4)>0) Q  ;GROUP PARENT
"RTN","MAGQBUT1",209,0)
 . I "^DELETE^"[QUE D IMAGEDEL^MAGGTID(.XX,INC,"","TESTING")
"RTN","MAGQBUT1",210,0)
 . I "^JBTOHD^PREFET^"[QUE F TYPE="ABSTRACT","FULL","BIG" D
"RTN","MAGQBUT1",211,0)
 . . Q:(TYPE="BIG")&('$D(^MAG(2005,INC,"FBIG"))!'$D(^MAG(2005.1,INC,"FBIG")))
"RTN","MAGQBUT1",212,0)
 . . D MAPI(QUE,INC_"^"_TYPE,.CNT)
"RTN","MAGQBUT1",213,0)
 . E  D MAPI(QUE,INC,.CNT)
"RTN","MAGQBUT1",214,0)
 Q
"RTN","MAGQBUT1",215,0)
MPAC(SW,FROM,TO) ;
"RTN","MAGQBUT1",216,0)
 N INDEX
"RTN","MAGQBUT1",217,0)
 I (SW'=1)&(SW'=0) W !,"The first parameter must equal 0 or 1" Q
"RTN","MAGQBUT1",218,0)
 I (FROM<0)!((TO<0)!(TO<FROM)) W !,"The second parameter must be greater than 0 and less than the third!" Q
"RTN","MAGQBUT1",219,0)
 S FROM=FROM-1
"RTN","MAGQBUT1",220,0)
 F  S INDEX=$O(^MAG(2005,INDEX)) Q:INDEX'?1N.N  Q:INDEX>TO  D
"RTN","MAGQBUT1",221,0)
 . I '$D(^MAG(2005,INDEX,0)) Q
"RTN","MAGQBUT1",222,0)
 . I $P($G(^MAG(2005,INDEX,0)),"^",2)="" Q  ;No full filename attribute
"RTN","MAGQBUT1",223,0)
 . I +$P($G(^MAG(2005,INDEX,1,0)),"^",4)>0 Q  ;GROUP PARENT
"RTN","MAGQBUT1",224,0)
 . I (SW=1)&('$D(^MAG(2005,INDEX,"PACS"))) S ^MAG(2005,INDEX,"PACS")="TEST PACS" Q
"RTN","MAGQBUT1",225,0)
 . I SW=0 K ^MAG(2005,INDEX,"PACS")
"RTN","MAGQBUT1",226,0)
 Q
"RTN","MAGQBUT1",227,0)
MAPI(TYP,PARAM,CNT) ;
"RTN","MAGQBUT1",228,0)
 S CNT=CNT+1
"RTN","MAGQBUT1",229,0)
 W !,CNT," TYPE: ",TYP,": ",PARAM_" QUEUE #: ",@("$$"_TYP_"^MAGBAPI(PARAM)")
"RTN","MAGQBUT1",230,0)
 Q
"RTN","MAGQBUT2")
0^83^B81305506
"RTN","MAGQBUT2",1,0)
MAGQBUT2 ;WOIFO/SRR/RMP -IMAGE SITE PARAMETERS COMPANION [ 11/08/2001 17:18 ]
"RTN","MAGQBUT2",2,0)
 ;;3.0;IMAGING;**7,8**;Sep 15, 2004
"RTN","MAGQBUT2",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT2",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT2",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT2",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT2",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT2",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT2",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT2",10,0)
 ;; |                                                               |
"RTN","MAGQBUT2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT2",17,0)
 ;;
"RTN","MAGQBUT2",18,0)
VSTAV() ;
"RTN","MAGQBUT2",19,0)
 N VER,IEN,ARRAY,VALUE,LATEST
"RTN","MAGQBUT2",20,0)
 S VER=$$VERSION^XPDUTL("IMAGING")
"RTN","MAGQBUT2",21,0)
 S:$T(LAST^XPDUTL)]"" VER=VER_"^"_$$LAST^XPDUTL("IMAGING",VER)
"RTN","MAGQBUT2",22,0)
 Q VER
"RTN","MAGQBUT2",23,0)
BPV(BPWS) ;
"RTN","MAGQBUT2",24,0)
 N IEN,NODE,INDEX
"RTN","MAGQBUT2",25,0)
 S IEN=0
"RTN","MAGQBUT2",26,0)
 F  S IEN=$O(^MAG(2006.8,IEN)) Q:IEN'?1N.N  D
"RTN","MAGQBUT2",27,0)
 . Q:$P($G(^MAG(2006.8,IEN,0)),"^",12)'="1"
"RTN","MAGQBUT2",28,0)
 . S NODE=$G(^MAG(2006.8,IEN,1))
"RTN","MAGQBUT2",29,0)
 . I +$P(NODE,"^",2)>0 D
"RTN","MAGQBUT2",30,0)
 . . S INDEX=$P(NODE,"^",2)_U_$P(NODE,"^",4)
"RTN","MAGQBUT2",31,0)
 . . S BPWS(INDEX)=$G(BPWS(INDEX))+1
"RTN","MAGQBUT2",32,0)
 . . S $P(BPWS(INDEX),"^",2)=$P(NODE,"^",3)
"RTN","MAGQBUT2",33,0)
 Q $S($D(BPWS):1,1:0)
"RTN","MAGQBUT2",34,0)
IWSV(WSD,WSC,WSV,PLACE) ;IMAGE WORKSTATION VERSIONS
"RTN","MAGQBUT2",35,0)
 N IEN,NODE,RD,OS
"RTN","MAGQBUT2",36,0)
 S RD=$$FMADD^XLFDT($$NOW^XLFDT,-180,"","","")
"RTN","MAGQBUT2",37,0)
 S IEN=0
"RTN","MAGQBUT2",38,0)
 F  S IEN=$O(^MAG(2006.81,"C",PLACE,IEN)) Q:IEN'?1N.N  D
"RTN","MAGQBUT2",39,0)
 . S NODE=^MAG(2006.81,IEN,0)
"RTN","MAGQBUT2",40,0)
 . Q:($P(NODE,U,3)<RD)
"RTN","MAGQBUT2",41,0)
 . S OS=$P($G(^MAG(2006.81,IEN,1)),U,2)
"RTN","MAGQBUT2",42,0)
 . I $P(NODE,"^",9)'="" D
"RTN","MAGQBUT2",43,0)
 . . S INDEX=$P(NODE,"^",9),INDEX=$S(OS="":INDEX,1:INDEX_U_OS)
"RTN","MAGQBUT2",44,0)
 . . S WSD(INDEX)=$G(WSD(INDEX))+1
"RTN","MAGQBUT2",45,0)
 . . Q
"RTN","MAGQBUT2",46,0)
 . I $P(NODE,"^",13)'="" D
"RTN","MAGQBUT2",47,0)
 . . S INDEX=$P(NODE,"^",13),INDEX=$S(OS="":INDEX,1:INDEX_U_OS)
"RTN","MAGQBUT2",48,0)
 . . S WSC(INDEX)=$G(WSC(INDEX))+1
"RTN","MAGQBUT2",49,0)
 . . Q
"RTN","MAGQBUT2",50,0)
 . I $P(NODE,"^",15)'="" D
"RTN","MAGQBUT2",51,0)
 . . S INDEX=$P(NODE,"^",15),INDEX=$S(OS="":INDEX,1:INDEX_U_OS)
"RTN","MAGQBUT2",52,0)
 . . S WSV(INDEX)=$G(WSV(INDEX))+1
"RTN","MAGQBUT2",53,0)
 . . Q
"RTN","MAGQBUT2",54,0)
 Q
"RTN","MAGQBUT2",55,0)
DICOMV(DCMG) ;Version of DICOM
"RTN","MAGQBUT2",56,0)
 N X,ARRAY,IEN,NAME
"RTN","MAGQBUT2",57,0)
 S X=""
"RTN","MAGQBUT2",58,0)
 F  S X=$O(^MAG(2006.83,"B",X)) Q:X=""  D
"RTN","MAGQBUT2",59,0)
 . S IEN=$O(^MAG(2006.83,"B",X,"")) Q:IEN'?1N.N
"RTN","MAGQBUT2",60,0)
 . S DCMG($P(^MAG(2006.83,IEN,0),U,3))=$G(DCMG($P(^MAG(2006.83,IEN,0),U,3)))+1
"RTN","MAGQBUT2",61,0)
 Q $S($D(DCMG):1,1:0)
"RTN","MAGQBUT2",62,0)
VISTARV() ;
"RTN","MAGQBUT2",63,0)
 Q $$VERSION^XPDUTL("MAGJ RADIOLOGY")
"RTN","MAGQBUT2",64,0)
MAGSYS(LIST) ;
"RTN","MAGQBUT2",65,0)
 N VAIEN,NODE,MGIEN,UNAME,TDATE
"RTN","MAGQBUT2",66,0)
 S MGIEN=$$FIND1^DIC(3.8,"","MX","MAG SERVER","","","ERR")
"RTN","MAGQBUT2",67,0)
 S VAIEN=0
"RTN","MAGQBUT2",68,0)
 F  S VAIEN=$O(^XUSEC("MAG SYSTEM",VAIEN)) Q:VAIEN'?1N.N  D
"RTN","MAGQBUT2",69,0)
 . S UNAME=$$GET1^DIQ(200,VAIEN,.01)
"RTN","MAGQBUT2",70,0)
 . Q:UNAME=""
"RTN","MAGQBUT2",71,0)
 . ;CHECK FOR TERMINATION DATE
"RTN","MAGQBUT2",72,0)
 . S TDATE=$$GET1^DIQ(200,VAIEN,9.2)
"RTN","MAGQBUT2",73,0)
 . Q:((TDATE'="")&(TDATE<$$NOW^XLFDT))
"RTN","MAGQBUT2",74,0)
 . ;the next line screens existing 'MAG SERVER' members
"RTN","MAGQBUT2",75,0)
 . I MGIEN?1N.N,$$FIND1^DIC(3.81,","_MGIEN_",","QA",VAIEN,"","","ERR") Q
"RTN","MAGQBUT2",76,0)
 . S LIST(VAIEN)=VAIEN_"^"_UNAME
"RTN","MAGQBUT2",77,0)
 Q
"RTN","MAGQBUT2",78,0)
IMPAR(RESULT,QIEN) ;
"RTN","MAGQBUT2",79,0)
 N INDX,CNT
"RTN","MAGQBUT2",80,0)
 S (INDX,CNT)=0
"RTN","MAGQBUT2",81,0)
 F  S INDX=$O(^MAG(2006.034,QIEN,1,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBUT2",82,0)
 . S CNT=CNT+1
"RTN","MAGQBUT2",83,0)
 . S RESULT(CNT)=$G(^MAG(2006.034,QIEN,1,INDX,0))
"RTN","MAGQBUT2",84,0)
 I CNT<1 S RESULT(0)="0^Corrupted Import Array"
"RTN","MAGQBUT2",85,0)
 E  S RESULT(0)="1"
"RTN","MAGQBUT2",86,0)
 Q
"RTN","MAGQBUT2",87,0)
SNS(PLACE) ;
"RTN","MAGQBUT2",88,0)
 N RESULT,INDEX
"RTN","MAGQBUT2",89,0)
 S INDEX=0
"RTN","MAGQBUT2",90,0)
 S RESULT=$P(^MAG(2006.1,PLACE,0),U,2)
"RTN","MAGQBUT2",91,0)
 F  S INDEX=$O(^MAG(2006.1,PLACE,4,INDEX)) Q:INDEX'?1N.N  D
"RTN","MAGQBUT2",92,0)
 . S RESULT=RESULT_U_$P($G(^MAG(2006.1,PLACE,4,INDEX,0)),U)
"RTN","MAGQBUT2",93,0)
 Q RESULT
"RTN","MAGQBUT2",94,0)
CHKIMG(IEN) ;
"RTN","MAGQBUT2",95,0)
 ;
"RTN","MAGQBUT2",96,0)
 ; Given an Image IEN, return:
"RTN","MAGQBUT2",97,0)
 ;   1: Case # or accession #
"RTN","MAGQBUT2",98,0)
 ;   2: Parent application~IEN
"RTN","MAGQBUT2",99,0)
 ;   3: Application DFN
"RTN","MAGQBUT2",100,0)
 ;   4: Image DFN
"RTN","MAGQBUT2",101,0)
 ;   5: Flag: true = all DFNs in images in same parent group are identical
"RTN","MAGQBUT2",102,0)
 ;   6: Image object Class
"RTN","MAGQBUT2",103,0)
 ;
"RTN","MAGQBUT2",104,0)
 ; PF: Parent Data file number
"RTN","MAGQBUT2",105,0)
 ; PT(): Parent file data dictionary
"RTN","MAGQBUT2",106,0)
 ; PD0: Parent (Global root) IEN (D0)
"RTN","MAGQBUT2",107,0)
 ; PD1:  Lab Parent Global Root (D1)
"RTN","MAGQBUT2",108,0)
 ; PD2:  Parent Data File Image Pointer
"RTN","MAGQBUT2",109,0)
 ; T():  Error types
"RTN","MAGQBUT2",110,0)
 ; IDFN: Image file entry DFN
"RTN","MAGQBUT2",111,0)
 ; PDFN: Parent file DFN
"RTN","MAGQBUT2",112,0)
 ; GRG:  virtual Parent File Image Multiple
"RTN","MAGQBUT2",113,0)
 ; IOR: Image Object Referenced (by parent)
"RTN","MAGQBUT2",114,0)
 N GF,GP,G0,GR,GRD,GRG,GR0,IDFN,IENV,P0,PD0,PD1,PD2,PF,PT,X0,X2,N0,N1,R,T,GPDFN,PACS,IOR,APR,I,PDFN
"RTN","MAGQBUT2",115,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT2",116,0)
 S R="^^^^^"
"RTN","MAGQBUT2",117,0)
 S T(1)="No Image ptr in AP"
"RTN","MAGQBUT2",118,0)
 S T(2)="GP has no Images"
"RTN","MAGQBUT2",119,0)
 S T(3)="Conflicting AP & Image DFNs"
"RTN","MAGQBUT2",120,0)
 S T(4)="Invalid Image Ptr to AP"
"RTN","MAGQBUT2",121,0)
 S T(5)="Conflicting GP and GO DFN"
"RTN","MAGQBUT2",122,0)
 S T(6)="GP & GO AP Mismatch"
"RTN","MAGQBUT2",123,0)
 S T(7)="GP Missing GO ptr"
"RTN","MAGQBUT2",124,0)
 S T(8)="No AP Ptr"
"RTN","MAGQBUT2",125,0)
 S T(9)="No AP Entry ptr"
"RTN","MAGQBUT2",126,0)
 S T(10)="No AP Mult ptr"
"RTN","MAGQBUT2",127,0)
 S T(11)="GO DFN mismatches"
"RTN","MAGQBUT2",128,0)
 S T(12)="Null Image Ptr"
"RTN","MAGQBUT2",129,0)
 S T(13)="Invalid Image Ptr"
"RTN","MAGQBUT2",130,0)
 S T(14)="Invalid Image Ptr to AP"
"RTN","MAGQBUT2",131,0)
 S T(15)="Image Entry is structurally abnormal"
"RTN","MAGQBUT2",132,0)
 S T(16)="Missing Group Objects"
"RTN","MAGQBUT2",133,0)
 S T(21)="DFN Mismatches in AP Image Mult"
"RTN","MAGQBUT2",134,0)
 ;
"RTN","MAGQBUT2",135,0)
 I IEN="" S $P(R,"^",5)=T(12)_"~1" Q R
"RTN","MAGQBUT2",136,0)
 S X0=$G(^MAG(2005,IEN,0))
"RTN","MAGQBUT2",137,0)
 I X0="" S $P(R,"^",5)=T(13)_"~1" Q R
"RTN","MAGQBUT2",138,0)
 S IDFN=$P(X0,"^",7),$P(R,"^",4)=IDFN
"RTN","MAGQBUT2",139,0)
 S PT(3.9)="^XMB(3.9,PD0,|Mail message||2|^XMB(3.9,PD0,2005,|MAIL"
"RTN","MAGQBUT2",140,0)
 S PT(63)="^LR(PD0,GF,PD1,|Autopsy (microscopic)|AY|1|^LR(PD0,GF,PD1,2005,|AUM"
"RTN","MAGQBUT2",141,0)
 S PT(63.02)="^LR(PD0,GF,PD1,|Electron microscopy|EM|1|^LR(PD0,GF,PD1,2005,|EM"
"RTN","MAGQBUT2",142,0)
 S PT(63.08)="^LR(PD0,GF,PD1,|Surgical pathology|SP|1|^LR(PD0,GF,PD1,2005,|SP"
"RTN","MAGQBUT2",143,0)
 S PT(63.09)="^LR(PD0,GF,PD1,|Cytology|CY|1|^LR(PD0,GF,PD1,2005,|CY|"
"RTN","MAGQBUT2",144,0)
 S PT(63.2)="^LR(PD0,GF,PD1,|Autopsy (gross)|AU|1|^LR(PD0,GF,PD1,2005,|AUG"
"RTN","MAGQBUT2",145,0)
 S PT(70)="^RADPT(PDFN,|Radiology Patient||1|"
"RTN","MAGQBUT2",146,0)
 S PT(74)="^RARPT(PD0,|Radiology||2|^RARPT(PD0,2005,|RAD"
"RTN","MAGQBUT2",147,0)
 S PT(130)="^SRF(PD0,|Surgery||1|^SRF(PD0,2005,|SUR"
"RTN","MAGQBUT2",148,0)
 S PT(691)="^MCAR(691,PD0,|Echocardiogram||2|^MCAR(691,PD0,2005,|ECHO"
"RTN","MAGQBUT2",149,0)
 S PT(691.1)="^MCAR(691.1,PD0,|Cardiac catheterization||2|^MCAR(691.1,PD0,2005,|CATH"
"RTN","MAGQBUT2",150,0)
 S PT(691.5)="^MCAR(691.5,PD0,|Electrocardiography||2|^MCAR(691.5,PD0,2005,|ECG"
"RTN","MAGQBUT2",151,0)
 S PT(694)="^MCAR(694,PD0,|Hematology||2|^MCAR(694,PD0,2005,|HEM"
"RTN","MAGQBUT2",152,0)
 S PT(699)="^MCAR(699,PD0,|Endoscopy||2|^MCAR(699,PD0,2005,|ENDO"
"RTN","MAGQBUT2",153,0)
 S PT(699.5)="^MCAR(699.5,PD0,|Medicine||2|^MCAR(699.5,PD0,2005,|GEN"
"RTN","MAGQBUT2",154,0)
 S PT(8925)="^TIU(8925,PD0,|TIU||2|^TIU(8925.91,""ADI"",PD0,|TIU"
"RTN","MAGQBUT2",155,0)
 S IC=$$IC(IEN,.N0,.N2,.GPDFN),$P(R,U,6)=IC
"RTN","MAGQBUT2",156,0)
 I IC="ER" S $P(R,U,5)=T(15)_"~1" Q R
"RTN","MAGQBUT2",157,0)
 I IC["GP",'$O(^MAG(2005,IEN,1,0)) S $P(R,U,5)=T(2)_"~1" Q R
"RTN","MAGQBUT2",158,0)
 D PF(IEN,IC,N0,.PF,.PD0,.PD1,.PD2,.PACS,.IOR,.APR)
"RTN","MAGQBUT2",159,0)
 I "GP^GO"[IC D  Q:$P(R,U,5)'="" R
"RTN","MAGQBUT2",160,0)
 . S I=0
"RTN","MAGQBUT2",161,0)
 . F  S I=$O(^MAG(2005,IOR,1,I)) Q:I'?1N.N  D
"RTN","MAGQBUT2",162,0)
 . . I '$D(^MAG(2005,$P($G(^MAG(2005,IOR,1,I,0)),U),0)) S $P(R,U,5)=T(16)_$S(IC="GO":"~2",1:"~1")
"RTN","MAGQBUT2",163,0)
 . . Q
"RTN","MAGQBUT2",164,0)
 I IC["GO" S $P(R,U,6)=$P(R,U,6)_"~"_IOR
"RTN","MAGQBUT2",165,0)
 I PD2'?1N.N,(('PACS)&(PD0?1N.N)) S $P(R,U,5)=T(10)_$S(IC["GO":"~2",1:"~1") Q R
"RTN","MAGQBUT2",166,0)
 I IC["GO" D  Q:$P(R,U,5)'="" R
"RTN","MAGQBUT2",167,0)
 . N I,J
"RTN","MAGQBUT2",168,0)
 . S (I,J)=0
"RTN","MAGQBUT2",169,0)
 . F  S I=$O(^MAG(2005,IOR,1,I)) Q:I'?1N.N  S:IEN=$P($G(^MAG(2005,IOR,1,I,0)),U,1) J=1
"RTN","MAGQBUT2",170,0)
 . S:J=0 $P(R,U,5)=T(7)_"~2"
"RTN","MAGQBUT2",171,0)
 . Q
"RTN","MAGQBUT2",172,0)
 I IC["GO",IDFN'=GPDFN S $P(R,U,5)=T(5)_"~1",$P(R,U,3)=GPDFN Q R
"RTN","MAGQBUT2",173,0)
 I IC["GO" D  Q:$P(R,U,5)'="" R
"RTN","MAGQBUT2",174,0)
 . N I,J
"RTN","MAGQBUT2",175,0)
 . S I=0
"RTN","MAGQBUT2",176,0)
 . F  S I=$O(^MAG(2005,IOR,1,I)) Q:I'?1N.N  D  Q:$P(R,U,5)'=""
"RTN","MAGQBUT2",177,0)
 . . S J=$P($G(^MAG(2005,IOR,1,I,0)),U)
"RTN","MAGQBUT2",178,0)
 . . I $P($G(^MAG(2005,J,0)),U,7)'=IDFN S $P(R,U,5)=T(11)_"~2",$P(R,U,3)=$P($G(^MAG(2005,J,0)),U,7)
"RTN","MAGQBUT2",179,0)
 . . Q
"RTN","MAGQBUT2",180,0)
 I IC["GO",PACS,(($P(N2,U,6,7)'="")&($P(N2,U,6,7)'="^")),$P(N2,U,6,7)'=$P($G(^MAG(2005,$P(N0,U,10),2)),U,6,7) D  Q R
"RTN","MAGQBUT2",181,0)
 . S $P(R,U,5)=T(6)_"~1",$P(R,U,3)=$P(^MAG(2005,IOR,0),U,7) Q
"RTN","MAGQBUT2",182,0)
 I (PF\1=63),PD1'?1N.N,PD1'?1N.N1"."1N.N Q R
"RTN","MAGQBUT2",183,0)
 I PF?1N.E,$D(PT(+PF)),PD0?1N.N D
"RTN","MAGQBUT2",184,0)
 . S $P(R,"^",2)=$P(PT(PF),"|",6)_"~"_PD0
"RTN","MAGQBUT2",185,0)
 . S GR=$P(PT(PF),"|",1),GR0=GR_"0)"
"RTN","MAGQBUT2",186,0)
 . S GF=$P(PT(PF),"|",3),GP=$P(PT(PF),"|",4)
"RTN","MAGQBUT2",187,0)
 . S T=$P(PT(PF),"|",5),GRD=T_"G0,0)",GRG=T_"G0)"
"RTN","MAGQBUT2",188,0)
 E  D  Q R
"RTN","MAGQBUT2",189,0)
 . S:((IC["GP")&($P(R,U,5)="")) $P(R,U,5)="1"
"RTN","MAGQBUT2",190,0)
 S P0=$G(@GR0)
"RTN","MAGQBUT2",191,0)
 I P0="" S $P(R,"^",5)=T(4)_$S((('PACS)&(IC["GO")):"~2",1:"~1") Q R
"RTN","MAGQBUT2",192,0)
 S PDFN=$S(PF\1=63:$P(^LR(PD0,0),U,3),$P(P0,"^",GP)'="":$P(P0,"^",GP),1:PDFN)
"RTN","MAGQBUT2",193,0)
 I 'PDFN,$P($G(^VA(200,IDFN,0)),"^",1)=PDFN S PDFN=IDFN
"RTN","MAGQBUT2",194,0)
 S $P(R,"^",3)=PDFN
"RTN","MAGQBUT2",195,0)
 I PDFN'=IDFN S $P(R,U,5)=T(3)_$S((('PACS)&(IC["GO")):"~2",1:"~1") Q R
"RTN","MAGQBUT2",196,0)
 I PF=74 D
"RTN","MAGQBUT2",197,0)
 . S GR=$P(PT(70),"|",1),GR0=GR_"0)"
"RTN","MAGQBUT2",198,0)
 . S GF=$P(PT(70),"|",3),GP=$P(PT(70),"|",4)
"RTN","MAGQBUT2",199,0)
 . S P0=$G(@GR0),$P(R,"^",3)=$P(R,"^",3)_"~"_$P(P0,"^",GP)
"RTN","MAGQBUT2",200,0)
 S T=1,G0=0,IENV=0
"RTN","MAGQBUT2",201,0)
 F  S G0=$O(@GRG) Q:'G0  Q:$P(R,U,5)'=""  D  I 'T K PT Q
"RTN","MAGQBUT2",202,0)
 . I PF=8925 D  Q
"RTN","MAGQBUT2",203,0)
 . . I '$D(^MAG(2005,+G0,0)) S $P(R,U,5)=T(14)_$S((('PACS)&(IC["GO")):"~2",1:"~1")
"RTN","MAGQBUT2",204,0)
 . . S:G0=IOR IENV=1
"RTN","MAGQBUT2",205,0)
 . . I $P($G(^MAG(2005,+G0,0)),"^",7)'=IDFN S $P(R,U,5)=T(21)_"~2",$P(R,U,3)=$P($G(^MAG(2005,+G0,0)),"^",7)
"RTN","MAGQBUT2",206,0)
 . . Q
"RTN","MAGQBUT2",207,0)
 . I '$D(^MAG(2005,+$P($G(@GRD),"^",1),0)) S $P(R,U,5)=T(14)_$S((('PACS)&(IC["GO")):"~2",1:"~1")
"RTN","MAGQBUT2",208,0)
 . I $P($G(^MAG(2005,+$P($G(@GRD),"^",1),0)),"^",7)'=IDFN D  Q
"RTN","MAGQBUT2",209,0)
 . . S $P(R,U,5)=T(21)_"~2",$P(R,U,3)=$P($G(^MAG(2005,+$P($G(@GRD),"^",1),0)),"^",7) Q
"RTN","MAGQBUT2",210,0)
 . I PF=63 S:+$P($G(^LR(PD0,GF,PD1,2005.1,G0,0)),U)=IOR IENV=1
"RTN","MAGQBUT2",211,0)
 . I PF=63.2 S:+$P($G(^LR(PD0,GF,PD1,2005,G0,0)),U)=IOR IENV=1
"RTN","MAGQBUT2",212,0)
 . S:+$P($G(@GRD),"^",1)=IOR IENV=1
"RTN","MAGQBUT2",213,0)
 . Q
"RTN","MAGQBUT2",214,0)
 Q:$P(R,U,5)'="" R
"RTN","MAGQBUT2",215,0)
 I IC["GP" S $P(R,U,5)="1"
"RTN","MAGQBUT2",216,0)
 I IENV=0 S $P(R,U,5)=T(1)_"~1"
"RTN","MAGQBUT2",217,0)
 I PF=74 S $P(R,"^",1)=$P(P0,"^",1)
"RTN","MAGQBUT2",218,0)
 K PT
"RTN","MAGQBUT2",219,0)
 Q R
"RTN","MAGQBUT2",220,0)
IC(IEN,N0,N2,GPDFN) ;
"RTN","MAGQBUT2",221,0)
 S N0=$G(^MAG(2005,IEN,0))
"RTN","MAGQBUT2",222,0)
 S N1=$G(^MAG(2005,IEN,1,0))
"RTN","MAGQBUT2",223,0)
 S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGQBUT2",224,0)
 I ($P(N0,U,2)="")&($P(N0,U,10)="")&($P(N1,U,4)>0) Q "GP"
"RTN","MAGQBUT2",225,0)
 I (($P(N0,U,2)'="")&($P(N0,U,10)?1N.N)&(N1="")) D  Q "GO"
"RTN","MAGQBUT2",226,0)
 . S GPDFN=$P($G(^MAG(2005,$P(N0,U,10),0)),U,7) Q
"RTN","MAGQBUT2",227,0)
 I ($P(N0,U,2)'="")&($P(N0,U,10)'?1N.N)&(N1="") Q "NG"
"RTN","MAGQBUT2",228,0)
 Q "ER"
"RTN","MAGQBUT2",229,0)
PF(IEN,IC,N0,PF,PD0,PD1,PD2,PACS,IOR,APR) ;
"RTN","MAGQBUT2",230,0)
 N N2
"RTN","MAGQBUT2",231,0)
 S PACS=$S($D(^MAG(2005,IEN,"PACS")):1,1:0)
"RTN","MAGQBUT2",232,0)
 S IOR=$S(IC="GO":$P($G(N0),U,10),1:IEN)
"RTN","MAGQBUT2",233,0)
 I ((IC="GP")!(IC="NG")!((PACS)&(IC="GO"))) S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGQBUT2",234,0)
 I ((IC="GO")&('PACS)) S N2=$G(^MAG(2005,IOR,2))
"RTN","MAGQBUT2",235,0)
 S PF=$P(N2,"^",6),PD0=$P(N2,"^",7),PD1=$P(N2,"^",10),PD2=$P(N2,"^",8)
"RTN","MAGQBUT2",236,0)
 I PACS S APR=$S(PD0?1N.N:1,1:0)
"RTN","MAGQBUT2",237,0)
 E  S APR=$S(((PF'="")&(PD0?1N.N)):1,$P($G(^MAG(2005,IOR,100)),U)?1N.N:1,$P($G(^MAG(2005,IOR,0)),U,6)="18":1,1:0)
"RTN","MAGQBUT2",238,0)
 Q
"RTN","MAGQBUT4")
0^79^B10763650
"RTN","MAGQBUT4",1,0)
MAGQBUT4 ;WOIFO/RMP - BP Utilities  ;19 Nov 2001 1:23 PM
"RTN","MAGQBUT4",2,0)
 ;;3.0;IMAGING;**7,8 **;Sep 15, 2004
"RTN","MAGQBUT4",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT4",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT4",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT4",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT4",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT4",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT4",10,0)
 ;; |                                                               |
"RTN","MAGQBUT4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",17,0)
 ;;
"RTN","MAGQBUT4",18,0)
 ;
"RTN","MAGQBUT4",19,0)
 Q
"RTN","MAGQBUT4",20,0)
CONV(ARR,ICT) ;Convert any single node array to FM Style multiple
"RTN","MAGQBUT4",21,0)
 ;  The node subscripts of ARR are ignored, and not retained
"RTN","MAGQBUT4",22,0)
 ; i.e.  ARR(34)=8
"RTN","MAGQBUT4",23,0)
 ;       ARR("BLUE")=9
"RTN","MAGQBUT4",24,0)
 ;       ARR("D")=10
"RTN","MAGQBUT4",25,0)
 ; converts to
"RTN","MAGQBUT4",26,0)
 ;      ARR(1,0)=8
"RTN","MAGQBUT4",27,0)
 ;      ARR(2,0)=9
"RTN","MAGQBUT4",28,0)
 ;      ARR(3,0)=10
"RTN","MAGQBUT4",29,0)
 N I,ARO
"RTN","MAGQBUT4",30,0)
 S ICT=0,I=""
"RTN","MAGQBUT4",31,0)
 F  S I=$O(ARR(I)) Q:(I="")  D
"RTN","MAGQBUT4",32,0)
 . S ICT=ICT+1
"RTN","MAGQBUT4",33,0)
 . S ARO(ICT,0)=ARR(I)
"RTN","MAGQBUT4",34,0)
 K ARR
"RTN","MAGQBUT4",35,0)
 M ARR=ARO
"RTN","MAGQBUT4",36,0)
 Q
"RTN","MAGQBUT4",37,0)
MRGMULT(ARR,RT,RTDSC,CT) ;Merge the FM formated array into a FM File
"RTN","MAGQBUT4",38,0)
 ;   multiple field.
"RTN","MAGQBUT4",39,0)
 ;   This isn't for general consumption.
"RTN","MAGQBUT4",40,0)
 ; RT = FILE ROOT, RECORD NUMBER, NODE
"RTN","MAGQBUT4",41,0)
 ; i.e.  "^MAG(2006.034,44,1,"   -> 44 is the IEN of MAG(2006.34
"RTN","MAGQBUT4",42,0)
 ; RTDSC is the 2nd piece of the 0 node of the multiple field.
"RTN","MAGQBUT4",43,0)
 S RT=$E(RT,1,$L(RT)-1)_")"
"RTN","MAGQBUT4",44,0)
 S @RT@(0)=U_RTDSC_U_CT_U_CT ;  i.e.    ^2006.341A^13^13
"RTN","MAGQBUT4",45,0)
 M @RT=ARR
"RTN","MAGQBUT4",46,0)
 Q
"RTN","MAGQBUT4",47,0)
DDLF(RESULTS,FILE,FIELD,FLAGS,ATTR) ;[MAG FLD ATT]
"RTN","MAGQBUT4",48,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",49,0)
 K X
"RTN","MAGQBUT4",50,0)
 D FIELD^DID(FILE,FIELD,FLAGS,ATTR,"RESULTS","RESULTS")
"RTN","MAGQBUT4",51,0)
 Q
"RTN","MAGQBUT4",52,0)
DDFA(RESULTS) ;[MAG ATT LST]
"RTN","MAGQBUT4",53,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",54,0)
 K X
"RTN","MAGQBUT4",55,0)
 D FIELDLST^DID(RESULTS)
"RTN","MAGQBUT4",56,0)
 Q
"RTN","MAGQBUT4",57,0)
DHRPC(RESULTS,FNAME,FLOC) ;[MAG DIRHASH]
"RTN","MAGQBUT4",58,0)
 N TMP
"RTN","MAGQBUT4",59,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",60,0)
 K X
"RTN","MAGQBUT4",61,0)
 S TMP=$$DIRHASH^MAGFILEB(FNAME,FLOC)
"RTN","MAGQBUT4",62,0)
 S RESULTS=$S(TMP="":U,1:TMP)
"RTN","MAGQBUT4",63,0)
 Q
"RTN","MAGQBUT4",64,0)
GPACHX(PV) ; Get Package File Install History of Imaging
"RTN","MAGQBUT4",65,0)
 N I,LCNT,MSG,PKG
"RTN","MAGQBUT4",66,0)
 S LCNT=0
"RTN","MAGQBUT4",67,0)
 S PV(0)="Version^Install Date"
"RTN","MAGQBUT4",68,0)
 F PKG="IMAGING" D
"RTN","MAGQBUT4",69,0)
 . N J,K,L,VERS,DATE,X,Y,%DT
"RTN","MAGQBUT4",70,0)
 . S J=$O(^DIC(9.4,"B",PKG,"")) Q:'J
"RTN","MAGQBUT4",71,0)
 . S VERS="" F  S VERS=$O(^DIC(9.4,J,22,"B",VERS)) Q:VERS=""  D
"RTN","MAGQBUT4",72,0)
 . . N MSG,TAR
"RTN","MAGQBUT4",73,0)
 . . S K=$O(^DIC(9.4,J,22,"B",VERS,""))
"RTN","MAGQBUT4",74,0)
 . . D LIST^DIC(9.4901,","_K_","_J_",","@;.01;.02;.03","","","","","","","","TAR","MSG")
"RTN","MAGQBUT4",75,0)
 . . Q:$D(MSG("DIERR"))
"RTN","MAGQBUT4",76,0)
 . . S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQBUT4",77,0)
 . . . S LCNT=LCNT+1
"RTN","MAGQBUT4",78,0)
 . . . S PV(LCNT)=VERS_"P"_$P(TAR("DILIST","ID",L,".01"),"^",1)
"RTN","MAGQBUT4",79,0)
 . . . S X=$P(TAR("DILIST","ID",L,".02"),"^",1) D ^%DT S DATE=$$FMTE^XLFDT(Y,2)
"RTN","MAGQBUT4",80,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$S(DATE["-1":"",1:DATE)
"RTN","MAGQBUT4",81,0)
 . . . Q
"RTN","MAGQBUT4",82,0)
 . . Q
"RTN","MAGQBUT4",83,0)
 . Q
"RTN","MAGQBUT4",84,0)
 Q
"RTN","MAGQBUT4",85,0)
VOK(VER) ; Check for the appropriate BP Queue processor version
"RTN","MAGQBUT4",86,0)
 ; This routine MAGQBUT4 will need to be released with each BP Update
"RTN","MAGQBUT4",87,0)
 ; The variable CVERS will contain the current BP server version
"RTN","MAGQBUT4",88,0)
 ;       ;;3.0;IMAGING;**7,13,8**;Jul 26, 2004
"RTN","MAGQBUT4",89,0)
 N VN,I,CVERS,PNUM,SLINE
"RTN","MAGQBUT4",90,0)
 S SLINE=$T(+2)
"RTN","MAGQBUT4",91,0)
 S PNUM=$$TRIM^MAGQST($P(SLINE,"**",2)),PNUM=$$TRIM^MAGQST($P(PNUM,",",$L(PNUM,",")))
"RTN","MAGQBUT4",92,0)
 S CVERS=$$TRIM^MAGQST($P(SLINE,";",3))_"P"_PNUM
"RTN","MAGQBUT4",93,0)
 Q $S(CVERS=VER:1,1:0)
"RTN","MAGQBUT4",94,0)
 ;
"RTN","MAGQE5")
0^82^B37769146
"RTN","MAGQE5",1,0)
MAGQE5 ;WOIFO/RMP - Support for MAG Enterprise ; 05/06/2004  06:32
"RTN","MAGQE5",2,0)
 ;;3.0;IMAGING;**27,29,8,30**;Sep 15, 2004
"RTN","MAGQE5",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQE5",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQE5",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQE5",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQE5",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQE5",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQE5",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQE5",10,0)
 ;; |                                                               |
"RTN","MAGQE5",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQE5",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQE5",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQE5",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQE5",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQE5",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQE5",17,0)
 ;;
"RTN","MAGQE5",18,0)
ISU2 ;
"RTN","MAGQE5",19,0)
 ; Workstation Session and Patient counts
"RTN","MAGQE5",20,0)
 N CCNT,D0,DATE,ICNT,M1,M2,PCNT,RES,SCNAD,SCNMN,SCNT,TD,TD1,UNSCN,VD,VI,X1,X2,YR
"RTN","MAGQE5",21,0)
 S (SCNT,PCNT,ICNT,CCNT)=0
"RTN","MAGQE5",22,0)
 S (VD,VI)=""
"RTN","MAGQE5",23,0)
 I '$$CONSOLID() D
"RTN","MAGQE5",24,0)
 . S DATE="L"_START
"RTN","MAGQE5",25,0)
 . F  S DATE=$O(^MAG(2006.82,"AC",DATE)) Q:DATE=""  Q:$P(DATE,"L",2)\1>STOP  D
"RTN","MAGQE5",26,0)
 . . S D0=0 F  S D0=$O(^MAG(2006.82,"AC",DATE,D0)) Q:'D0  D
"RTN","MAGQE5",27,0)
 . . . Q:'$D(^MAG(2006.82,D0,1))
"RTN","MAGQE5",28,0)
 . . . S SCNT=SCNT+1
"RTN","MAGQE5",29,0)
 . . . S PCNT=PCNT+$P($G(^MAG(2006.82,D0,1)),"^",1)
"RTN","MAGQE5",30,0)
 . . . D ACT^MAGQE3(D0,.ICNT,.CCNT,.VD,.VI,.RES)
"RTN","MAGQE5",31,0)
 . . . Q
"RTN","MAGQE5",32,0)
 . . Q
"RTN","MAGQE5",33,0)
 . Q
"RTN","MAGQE5",34,0)
 E  D
"RTN","MAGQE5",35,0)
 . S DATE=START
"RTN","MAGQE5",36,0)
 . F  S DATE=$O(^MAG(2006.82,"APL",PLACE,DATE)) Q:DATE=""  Q:DATE\1>STOP  D
"RTN","MAGQE5",37,0)
 . . S D0=0 F  S D0=$O(^MAG(2006.82,"APL",PLACE,DATE,D0)) Q:D0'?1.N  D
"RTN","MAGQE5",38,0)
 . . . Q:'$D(^MAG(2006.82,D0,1))
"RTN","MAGQE5",39,0)
 . . . S SCNT=SCNT+1
"RTN","MAGQE5",40,0)
 . . . S PCNT=PCNT+$P($G(^MAG(2006.82,D0,1)),"^",1)
"RTN","MAGQE5",41,0)
 . . . D ACT^MAGQE3(D0,.ICNT,.CCNT,.VD,.VI,.RES)
"RTN","MAGQE5",42,0)
 . . . Q
"RTN","MAGQE5",43,0)
 . . Q
"RTN","MAGQE5",44,0)
 . Q
"RTN","MAGQE5",45,0)
 S X1=START,X2=STOP D ^%DTC S X=$TR(X,"-")+1_" day "
"RTN","MAGQE5",46,0)
 D MSG^MAGQE2(X_"Image Workstation Sessions: "_SCNT)
"RTN","MAGQE5",47,0)
 D MSG^MAGQE2(X_"Image Workstation Patients: "_PCNT)
"RTN","MAGQE5",48,0)
 D MSG^MAGQE2(X_"Image Workstation Images: "_ICNT)
"RTN","MAGQE5",49,0)
 D MSG^MAGQE2(X_"Image Workstation Captures: "_CCNT)
"RTN","MAGQE5",50,0)
 D MSG^MAGQE2(X_"VistaRad WS Display: "_VD)
"RTN","MAGQE5",51,0)
 D MSG^MAGQE2(X_"VistaRad WS Interpretations: "_VI)
"RTN","MAGQE5",52,0)
 K VD,VI
"RTN","MAGQE5",53,0)
 I $T(AVERAGE^MAGBRTLD)'="" D
"RTN","MAGQE5",54,0)
 . D MSG^MAGQE2(X_"average daily routed images: "_$$AVERAGE^MAGBRTLD())
"RTN","MAGQE5",55,0)
 . Q
"RTN","MAGQE5",56,0)
 D BPV^MAGQE1(PLACE)
"RTN","MAGQE5",57,0)
 D MSG^MAGQE2("Vista Image Version/Build: "_$$VSTAV^MAGQE1())
"RTN","MAGQE5",58,0)
 D DICOMV^MAGQE1()
"RTN","MAGQE5",59,0)
 D MSG^MAGQE2("Image file namespace(s): "_$$SNS^MAGQE1(PLACE))
"RTN","MAGQE5",60,0)
 S I="" F  S I=$O(RES(I)) Q:I=""  D
"RTN","MAGQE5",61,0)
 . S RES="" F  S RES=$O(RES(I,RES)) Q:RES=""  D
"RTN","MAGQE5",62,0)
 . . S X=$TR(I,"^")_"^"_RES S $P(X,"^",6)=RES(I,RES)
"RTN","MAGQE5",63,0)
 . . D MSG^MAGQE2(" RESOLUTION: "_X)
"RTN","MAGQE5",64,0)
 . . Q
"RTN","MAGQE5",65,0)
 . Q
"RTN","MAGQE5",66,0)
 K RES
"RTN","MAGQE5",67,0)
 ;
"RTN","MAGQE5",68,0)
 D COUNT^MAGQE3(START,STOP,INST)
"RTN","MAGQE5",69,0)
 ;
"RTN","MAGQE5",70,0)
 S (I,D0)=0 F  S D0=$O(^TMP($J,"MAGQ","ACQPAT",D0)) Q:D0=""  S I=I+1
"RTN","MAGQE5",71,0)
 D MSG^MAGQE2("Unique Image patients captured: "_I)
"RTN","MAGQE5",72,0)
 K ^TMP($J,"MAGQ","ACQPAT")
"RTN","MAGQE5",73,0)
 S (I,D0)=0 F  S D0=$O(^TMP($J,"MAGQ","DISPAT",D0)) Q:D0=""  S I=I+1
"RTN","MAGQE5",74,0)
 D MSG^MAGQE2("Unique Image patients display: "_I)
"RTN","MAGQE5",75,0)
 K ^TMP($J,"MAGQ","DISPAT")
"RTN","MAGQE5",76,0)
 S (I,D0)=0 F  S D0=$O(^TMP($J,"MAGQ","ALLPAT",D0)) Q:D0=""  S I=I+1
"RTN","MAGQE5",77,0)
 D MSG^MAGQE2("Unique Image patients All: "_I)
"RTN","MAGQE5",78,0)
 K ^TMP($J,"MAGQ","ALLPAT")
"RTN","MAGQE5",79,0)
 ;
"RTN","MAGQE5",80,0)
 D ADCNT^MAGQE3(START,STOP,INST)
"RTN","MAGQE5",81,0)
 D GPACHX^MAGQE3()
"RTN","MAGQE5",82,0)
 D GS1^MAGQE5() ;Get Share data
"RTN","MAGQE5",83,0)
 Q
"RTN","MAGQE5",84,0)
 ;
"RTN","MAGQE5",85,0)
AHOPT ;
"RTN","MAGQE5",86,0)
 N %DT,START,STOP
"RTN","MAGQE5",87,0)
 S STOP=$$FMADD^XLFDT($$NOW^XLFDT()\100_"01",-1)
"RTN","MAGQE5",88,0)
 S START=STOP\100_"01"
"RTN","MAGQE5",89,0)
 S Y=START D DD^%DT S %DT("B")=Y
"RTN","MAGQE5",90,0)
 S %DT="AEXP",%DT("A")="Enter starting Date: "
"RTN","MAGQE5",91,0)
 D ^%DT I ((X="")!(X="^")!($D(DTOUT))) K %DT(0) Q
"RTN","MAGQE5",92,0)
 S START=Y
"RTN","MAGQE5",93,0)
 S Y=STOP D DD^%DT S %DT("B")=Y
"RTN","MAGQE5",94,0)
 S %DT="AEXP",%DT("A")="Enter ending Date: "
"RTN","MAGQE5",95,0)
 D ^%DT I ((X="")!(X="^")!($D(DTOUT))) K %DT(0) Q
"RTN","MAGQE5",96,0)
 S STOP=Y
"RTN","MAGQE5",97,0)
 W !!,"Creating ad-hoc report over the period "
"RTN","MAGQE5",98,0)
 W $$DT(START)," until ",$$DT(STOP),".",!
"RTN","MAGQE5",99,0)
 D AHISU^MAGQE2(START,STOP)
"RTN","MAGQE5",100,0)
 Q
"RTN","MAGQE5",101,0)
 ;
"RTN","MAGQE5",102,0)
DT(X) ;
"RTN","MAGQE5",103,0)
 Q (X\1#100)_"-"_$P("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"," ",X\100#100)_"-"_(X\10000+1700)
"RTN","MAGQE5",104,0)
 ;
"RTN","MAGQE5",105,0)
LLOAD(AR,LBL) ;
"RTN","MAGQE5",106,0)
 N I
"RTN","MAGQE5",107,0)
 S I="" F  S I=$O(AR(I)) Q:I=""  D MSG^MAGQE2(" "_LBL_" "_I_"^"_AR(I))
"RTN","MAGQE5",108,0)
 Q
"RTN","MAGQE5",109,0)
 ;
"RTN","MAGQE5",110,0)
GETPLACE(PLACE) ; Validate place
"RTN","MAGQE5",111,0)
 S PLACE=$S($$CONSOLID():$G(PLACE),1:+$O(^MAG(2006.1," "),-1)) Q:'PLACE 0
"RTN","MAGQE5",112,0)
 S:$P($G(^MAG(2006.1,PLACE,0)),"^",1)="" PLACE=0
"RTN","MAGQE5",113,0)
 Q PLACE
"RTN","MAGQE5",114,0)
 ;
"RTN","MAGQE5",115,0)
CONSOLID() ;
"RTN","MAGQE5",116,0)
 ; Return value: 0 = site not consolidated,
"RTN","MAGQE5",117,0)
 ;               1 = site is consolidated
"RTN","MAGQE5",118,0)
 N FLDNFO
"RTN","MAGQE5",119,0)
 D FIELD^DID(2006.1,.01,"","SPECIFIER","FLDNFO")
"RTN","MAGQE5",120,0)
 I $G(FLDNFO("SPECIFIER"))["P" Q 1
"RTN","MAGQE5",121,0)
 Q 0
"RTN","MAGQE5",122,0)
 ;
"RTN","MAGQE5",123,0)
PLACE(INST) ;
"RTN","MAGQE5",124,0)
 Q:'$$CONSOLID() +$O(^MAG(2006.1," "),-1)
"RTN","MAGQE5",125,0)
 Q $$GETPLACE(+$O(^MAG(2006.1,"B",INST,"")))
"RTN","MAGQE5",126,0)
 ;
"RTN","MAGQE5",127,0)
QCNT(READY,PLACE) ;
"RTN","MAGQE5",128,0)
 N D0,FAILED,NEXT,TYPE
"RTN","MAGQE5",129,0)
 S (READY,FAILED)=0
"RTN","MAGQE5",130,0)
 I $$CONSOLID() D
"RTN","MAGQE5",131,0)
 . S TYPE="" F  S TYPE=$O(^MAGQUEUE(2006.031,"C",PLACE,TYPE)) Q:TYPE=""  D
"RTN","MAGQE5",132,0)
 . . S NEXT=+$O(^MAGQUEUE(2006.031,"C",PLACE,TYPE,""))
"RTN","MAGQE5",133,0)
 . . S NEXT=+$P($G(^MAGQUEUE(2006.031,NEXT,0)),"^",2)
"RTN","MAGQE5",134,0)
 . . S D0=0 F  S D0=$O(^MAGQUEUE(2006.03,"C",PLACE,TYPE,D0)) Q:'D0  D
"RTN","MAGQE5",135,0)
 . . . I D0<NEXT S FAILED=FAILED+1
"RTN","MAGQE5",136,0)
 . . . E  S READY=READY+1
"RTN","MAGQE5",137,0)
 . . . Q
"RTN","MAGQE5",138,0)
 . . Q
"RTN","MAGQE5",139,0)
 E  D
"RTN","MAGQE5",140,0)
 . S TYPE="" F  S TYPE=$O(^MAGQUEUE(2006.031,"B",TYPE)) Q:TYPE=""  D
"RTN","MAGQE5",141,0)
 . . S NEXT=+$O(^MAGQUEUE(2006.031,"B",TYPE,""))
"RTN","MAGQE5",142,0)
 . . S NEXT=+$P($G(^MAGQUEUE(2006.031,NEXT,0)),"^",2)
"RTN","MAGQE5",143,0)
 . . S D0=0 F  S D0=$O(^MAGQUEUE(2006.03,"B",TYPE,D0)) Q:'D0  D
"RTN","MAGQE5",144,0)
 . . . I D0<NEXT S FAILED=FAILED+1
"RTN","MAGQE5",145,0)
 . . . E  S READY=READY+1
"RTN","MAGQE5",146,0)
 . . . Q
"RTN","MAGQE5",147,0)
 . . Q
"RTN","MAGQE5",148,0)
 . Q
"RTN","MAGQE5",149,0)
 Q READY+FAILED
"RTN","MAGQE5",150,0)
 ;
"RTN","MAGQE5",151,0)
WSP(PLACE) ; Imaging workstations per place
"RTN","MAGQE5",152,0)
 N COUNT,D0,RD
"RTN","MAGQE5",153,0)
 S RD=$$FMADD^XLFDT($$NOW^XLFDT,-180,"","","")
"RTN","MAGQE5",154,0)
 S (D0,COUNT)=0 F  S D0=$O(^MAG(2006.81,"C",PLACE,D0)) Q:'D0  D
"RTN","MAGQE5",155,0)
 . S:$P(^MAG(2006.81,D0,0),"^",3)'<RD COUNT=COUNT+1
"RTN","MAGQE5",156,0)
 . Q
"RTN","MAGQE5",157,0)
 Q COUNT
"RTN","MAGQE5",158,0)
 ;
"RTN","MAGQE5",159,0)
MAGDUZ2() Q $G(DUZ(2),$$KSP^XUPARAM("INST"))
"RTN","MAGQE5",160,0)
 ;
"RTN","MAGQE5",161,0)
GS1() ; Get local Network location share data
"RTN","MAGQE5",162,0)
 N I,L,M,MSG,RESULT,TAR
"RTN","MAGQE5",163,0)
 S RESULT(0)="NETWORK LOCATION^PHYSICAL REFERENCE^TOTAL SPACE^SPACE USED^FREE SPACE^OPERATIONAL STATUS^STORAGE TYPE^HASH"
"RTN","MAGQE5",164,0)
 D LIST^DIC(2005.2,"","@;.01;1;2;3;4;5;6;7","","","","","","","","TAR","MSG")
"RTN","MAGQE5",165,0)
 Q:$D(MSG("DIERR"))
"RTN","MAGQE5",166,0)
 S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQE5",167,0)
 . S RESULT(L)=$P(TAR("DILIST","ID",L,.01),U,1)
"RTN","MAGQE5",168,0)
 . F M=1,2,3,4,5,6,7 S RESULT(L)=RESULT(L)_U_$P(TAR("DILIST","ID",L,M),U,1)
"RTN","MAGQE5",169,0)
 . Q
"RTN","MAGQE5",170,0)
 S I="" F  S I=$O(RESULT(I)) Q:I=""  D
"RTN","MAGQE5",171,0)
 . D MSG^MAGQE2("LOCAL NETWORK LOCATIONS: "_I_"^"_RESULT(I))
"RTN","MAGQE5",172,0)
 . Q
"RTN","MAGQE5",173,0)
 Q
"RTN","MAGQE5",174,0)
 ;
"RTN","MAGSDEL4")
0^84^B3576635
"RTN","MAGSDEL4",1,0)
MAGSDEL4 ;WOIFO/GEK - Find DA for Image delete function ; [ 06/20/2001 08:57 ]
"RTN","MAGSDEL4",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGSDEL4",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDEL4",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSDEL4",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSDEL4",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSDEL4",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSDEL4",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSDEL4",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSDEL4",10,0)
 ;; |                                                               |
"RTN","MAGSDEL4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSDEL4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSDEL4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSDEL4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSDEL4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSDEL4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDEL4",17,0)
 ;;
"RTN","MAGSDEL4",18,0)
 Q
"RTN","MAGSDEL4",19,0)
GETDA(PPTR,DA1,MAGDA,DA) ; DA must be passed by reference.  
"RTN","MAGSDEL4",20,0)
 ; The Calling routine checks DA to see if a valid DA was found
"RTN","MAGSDEL4",21,0)
 ; for the MAGDA (Image IEN) sent.
"RTN","MAGSDEL4",22,0)
 N MAGX
"RTN","MAGSDEL4",23,0)
 D FILE^DID(PPTR,"","GLOBAL NAME","MAGRT")
"RTN","MAGSDEL4",24,0)
 Q:'$D(MAGRT("GLOBAL NAME"))
"RTN","MAGSDEL4",25,0)
 S MAGX=$G(MAGRT("GLOBAL NAME"))_DA1_",2005,""B"","_MAGDA_",0)"
"RTN","MAGSDEL4",26,0)
 S DA=$O(@MAGX)
"RTN","MAGSDEL4",27,0)
 Q
"RTN","MAGSDLGR")
0^36^B12156712
"RTN","MAGSDLGR",1,0)
MAGSDLGR ;WOIFO/SEB - Delete Image Group ; [ 06/20/2001 08:56 ]
"RTN","MAGSDLGR",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGSDLGR",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDLGR",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSDLGR",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSDLGR",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSDLGR",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSDLGR",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSDLGR",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSDLGR",10,0)
 ;; |                                                               |
"RTN","MAGSDLGR",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSDLGR",12,0)
 ;; | a Class II medical device.  As such, it may not be changed    |
"RTN","MAGSDLGR",13,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGSDLGR",14,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGSDLGR",15,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGSDLGR",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSDLGR",17,0)
 ;;
"RTN","MAGSDLGR",18,0)
 Q
"RTN","MAGSDLGR",19,0)
 ;
"RTN","MAGSDLGR",20,0)
 ; Delete an image group (option MAG SYS-DELETE GROUP)
"RTN","MAGSDLGR",21,0)
IMGDEL N DIC,X,Y,MAGIEN,MAGRSN,MAGGRY
"RTN","MAGSDLGR",22,0)
 W ! S DIC=2005,DIC(0)="AENQ",DIC("A")="Enter the image group ID to delete: "
"RTN","MAGSDLGR",23,0)
 S DIC("S")="I $P(^(0),U,10)=""""" D ^DIC
"RTN","MAGSDLGR",24,0)
 I Y=-1 Q
"RTN","MAGSDLGR",25,0)
 S MAGIEN=+Y
"RTN","MAGSDLGR",26,0)
 D SHOWINFO(MAGIEN)
"RTN","MAGSDLGR",27,0)
RSN R !!,"Enter a Reason for deletion: ",MAGRSN:DTIME
"RTN","MAGSDLGR",28,0)
 I $E(MAGRSN)="?" W !,"Please describe why the image group is being deleted.",!,"  or enter ""^"" to cancel." G RSN
"RTN","MAGSDLGR",29,0)
 I (MAGRSN="^")!(MAGRSN="") W !,"Deletion Canceled.  The image group was not deleted." Q
"RTN","MAGSDLGR",30,0)
 I $L(MAGRSN)<10 W !,"Please enter a description of a few words. (more than 10 characters)",!,"  or enter ""^"" to cancel." G RSN
"RTN","MAGSDLGR",31,0)
 I '$$CONFIRM W !,"Deletion Canceled.  The image group was not deleted." Q
"RTN","MAGSDLGR",32,0)
 W !,"Deleting Group Images..."
"RTN","MAGSDLGR",33,0)
 D IMAGEDEL^MAGGTID(.MAGGRY,MAGIEN,1,MAGRSN)
"RTN","MAGSDLGR",34,0)
 I +MAGGRY(0)=0 W !!,$P(MAGGRY(0),U,2)
"RTN","MAGSDLGR",35,0)
 E  W !!,"Image group deletion successful!"
"RTN","MAGSDLGR",36,0)
 Q
"RTN","MAGSDLGR",37,0)
CONFIRM() ;
"RTN","MAGSDLGR",38,0)
 R !!,"ARE YOU SURE YOU WANT TO DELETE ALL IMAGES IN THIS GROUP ?  Y/N  N//",ANS:DTIME
"RTN","MAGSDLGR",39,0)
 I "Nn"[ANS Q 0
"RTN","MAGSDLGR",40,0)
 I "Yy"'[ANS Q 0
"RTN","MAGSDLGR",41,0)
 Q 1
"RTN","MAGSDLGR",42,0)
SHOWINFO(IEN) ;
"RTN","MAGSDLGR",43,0)
 W !!,"Information on Selected Image :",!
"RTN","MAGSDLGR",44,0)
 N MAGGTRG,MAGGXE
"RTN","MAGSDLGR",45,0)
 D GETS^DIQ(2005,IEN,"5;6;15;10;7;8;42:44","ER","MAGGTRG","MAGGXE")
"RTN","MAGSDLGR",46,0)
 W !,"IMAGE ID (IEN)",?30,IEN
"RTN","MAGSDLGR",47,0)
 W !,"# Images in Group = ",?30,+$P($G(^MAG(2005,IEN,1,0)),U,4)
"RTN","MAGSDLGR",48,0)
 W !,"PATIENT",?30,MAGGTRG(2005,IEN_",","PATIENT","E")
"RTN","MAGSDLGR",49,0)
 W !,"PROCEDURE",?30,MAGGTRG(2005,IEN_",","PROCEDURE","E")
"RTN","MAGSDLGR",50,0)
 W !,"PROCEDURE/EXAM DATE/TIME",?30,MAGGTRG(2005,IEN_",","PROCEDURE/EXAM DATE/TIME","E")
"RTN","MAGSDLGR",51,0)
 W !,"SHORT DESCRIPTION",?30,MAGGTRG(2005,IEN_",","SHORT DESCRIPTION","E")
"RTN","MAGSDLGR",52,0)
 W !,"TYPE",?30,$G(MAGGTRG(2005,IEN_",","TYPE INDEX","E"))
"RTN","MAGSDLGR",53,0)
 W !,"SPEC/SUBSPEC",?30,$G(MAGGTRG(2005,IEN_",","SPEC/SUBSPEC INDEX","E"))
"RTN","MAGSDLGR",54,0)
 W !,"PROC/EVENT",?30,$G(MAGGTRG(2005,IEN_",","PROC/EVENT INDEX","E"))
"RTN","MAGSDLGR",55,0)
 W !,"DATE/TIME IMAGE SAVED",?30,MAGGTRG(2005,IEN_",","DATE/TIME IMAGE SAVED","E")
"RTN","MAGSDLGR",56,0)
 W !,"IMAGE SAVE BY",?30,MAGGTRG(2005,IEN_",","IMAGE SAVE BY","E")
"RTN","MAGSDLGR",57,0)
 Q
"RTN","MAGSIMBR")
0^18^B6173550
"RTN","MAGSIMBR",1,0)
MAGSIMBR ;WOIFO/SEB - Image Business Rules ;
"RTN","MAGSIMBR",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGSIMBR",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIMBR",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIMBR",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIMBR",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIMBR",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIMBR",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIMBR",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIMBR",10,0)
 ;; |                                                               |
"RTN","MAGSIMBR",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIMBR",12,0)
 ;; | a Class II medical device.  As such, it may not be changed    |
"RTN","MAGSIMBR",13,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGSIMBR",14,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGSIMBR",15,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGSIMBR",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIMBR",17,0)
 ;;
"RTN","MAGSIMBR",18,0)
 Q
"RTN","MAGSIMBR",19,0)
 ; Business rules for deletion of images
"RTN","MAGSIMBR",20,0)
DELETE(RY,MAGIEN,SYSDEL) N DELOK,MAGRY,MAG2,TIUDA
"RTN","MAGSIMBR",21,0)
 ; Check user privileges for delete key
"RTN","MAGSIMBR",22,0)
 S RY(0)="1^This image is allowed to be deleted."
"RTN","MAGSIMBR",23,0)
 I 'SYSDEL I '$D(^XUSEC("MAG DELETE",DUZ)) D
"RTN","MAGSIMBR",24,0)
 . S RY(0)="0^User doesn't have delete privilege."
"RTN","MAGSIMBR",25,0)
 . Q
"RTN","MAGSIMBR",26,0)
 I +RY(0)=0 Q
"RTN","MAGSIMBR",27,0)
 ; Check if we are allowed to delete this image
"RTN","MAGSIMBR",28,0)
 ; (Node 101 - Placeholder for future status field)
"RTN","MAGSIMBR",29,0)
 S DELOK=1 ;I $P($G(^MAG(2005,MAGIEN,101)),"^")=0 S DELOK=0
"RTN","MAGSIMBR",30,0)
 I DELOK=0 S RY(0)="0^This image cannot be deleted."
"RTN","MAGSIMBR",31,0)
 I +RY(0)=0 Q
"RTN","MAGSIMBR",32,0)
 ; If this image is linked to a TIU note, check to see that the TIU note is not signed.
"RTN","MAGSIMBR",33,0)
 S MAG2=$G(^MAG(2005,MAGIEN,2)) I $P(MAG2,"^",6)=8925 D
"RTN","MAGSIMBR",34,0)
 . S TIUDA=$P(MAG2,"^",7) D DATA(.MAGRY,TIUDA)
"RTN","MAGSIMBR",35,0)
 . ;I $P(MAGRY,"^",4)="COMPLETED" S RY(0)="0^The TIU note has been signed. Cannot delete this image."
"RTN","MAGSIMBR",36,0)
 . Q
"RTN","MAGSIMBR",37,0)
 I +RY(0)=0 Q
"RTN","MAGSIMBR",38,0)
 Q
"RTN","MAGSIMBR",39,0)
 ;
"RTN","MAGSIMBR",40,0)
DATA(MAGRY,TIUDA) ;RPC Call to get TIU data from the TIUDA
"RTN","MAGSIMBR",41,0)
 ; Return = TIUDA^Document Type^Document Date^Document Status
"RTN","MAGSIMBR",42,0)
 ;
"RTN","MAGSIMBR",43,0)
 S MAGRY=TIUDA_U_$$GET1^DIQ(8925,TIUDA,".01","E")_U_$$GET1^DIQ(8925,TIUDA,"1201","I")_U_$$GET1^DIQ(8925,TIUDA,".05","E")
"RTN","MAGSIMBR",44,0)
 Q
"RTN","MAGSIXG1")
0^35^B32635345
"RTN","MAGSIXG1",1,0)
MAGSIXG1 ;WOIFO/EdM/GEK/SEB - RPCs for Document Imaging ; 04/29/2002  16:15
"RTN","MAGSIXG1",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGSIXG1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXG1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXG1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXG1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXG1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXG1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXG1",10,0)
 ;; |                                                               |
"RTN","MAGSIXG1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXG1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXG1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXG1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXG1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXG1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",17,0)
 ;;
"RTN","MAGSIXG1",18,0)
 Q
"RTN","MAGSIXG1",19,0)
 ;
"RTN","MAGSIXG1",20,0)
 ; OUT ;--- Output array
"RTN","MAGSIXG1",21,0)
 ; CLS ;--- Class
"RTN","MAGSIXG1",22,0)
 ; TYPE ;-- Type (of what?)
"RTN","MAGSIXG1",23,0)
 ; SPEC ;-- Specialty or SubSpecialty
"RTN","MAGSIXG1",24,0)
 ; EVENT ;- Event or Procedure or Action
"RTN","MAGSIXG1",25,0)
PGI(OUT,DFN,PKG,CLS,TYPE,EVENT,SPEC,FROM,UNTIL,ORIGIN) ;RPC [MAG4 PAT GET IMAGES]
"RTN","MAGSIXG1",26,0)
 ; Get Images for Patient.  
"RTN","MAGSIXG1",27,0)
 ; New call in Patch 3.0.8 uses Image Filter to get list of images
"RTN","MAGSIXG1",28,0)
 ; 
"RTN","MAGSIXG1",29,0)
 N C,DAT1,DAT2,E,IMAGE,N,OK,P,RDT,RESULT,S,T,V,CT,PKG1,CLS1,TYPE1,EVENT1,SPEC1,FLTX,CAPDUZ,CAPDT
"RTN","MAGSIXG1",30,0)
 D REVDT(FROM,UNTIL,.DAT1,.DAT2)
"RTN","MAGSIXG1",31,0)
 S RESULT="OUT" K OUT,^TMP($T(+0),$J)
"RTN","MAGSIXG1",32,0)
 S PKG=$G(PKG),CLS=$G(CLS),EVENT=$G(EVENT),SPEC=$G(SPEC),TYPE=$G(TYPE),ORIGIN=$G(ORIGIN)
"RTN","MAGSIXG1",33,0)
 I PKG'="" D PKG^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",34,0)
 I CLS'="" D CLS^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",35,0)
 I EVENT'="" D EVENT^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",36,0)
 I SPEC'="" D SPEC^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",37,0)
 I TYPE'="" D TYPE^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",38,0)
 I ORIGIN'="" D ORIGIN^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",39,0)
 ;
"RTN","MAGSIXG1",40,0)
 I +DFN'=DFN S @RESULT@(0)="0^Invalid Patient Number: """_DFN_"""." Q
"RTN","MAGSIXG1",41,0)
 I '$D(^DPT(DFN,0))#2 S @RESULT@(0)="0^No Such Patient: """_DFN_"""." Q
"RTN","MAGSIXG1",42,0)
 S N=0
"RTN","MAGSIXG1",43,0)
 ;S RDT="" F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:RDT=""  D
"RTN","MAGSIXG1",44,0)
 ;3.0.8/gek, Quit searching all images, just do the date range.
"RTN","MAGSIXG1",45,0)
 S RDT=DAT1 F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:(RDT="")!(RDT>DAT2)  D
"RTN","MAGSIXG1",46,0)
 . N COUNT,PRX,X0,X2,X40
"RTN","MAGSIXG1",47,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGSIXG1",48,0)
 . . S IMAGE="" F  S IMAGE=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX,IMAGE)) Q:IMAGE=""  D
"RTN","MAGSIXG1",49,0)
 . . . S X0=$G(^MAG(2005,IMAGE,0)),X2=$G(^MAG(2005,IMAGE,2)),X40=$G(^MAG(2005,IMAGE,40))
"RTN","MAGSIXG1",50,0)
 . . . Q:$P(X0,"^",10)  ; child of Group
"RTN","MAGSIXG1",51,0)
 . . . S P=$P(X40,U),C=$P(X40,"^",2),T=$P(X40,"^",3),E=$P(X40,"^",4),S=$P(X40,"^",5),V=$P(X40,"^",6)
"RTN","MAGSIXG1",52,0)
 . . . I PKG'="",P'="",'$D(OK(5,P)) Q
"RTN","MAGSIXG1",53,0)
 . . . I ORIGIN'="",V'="",'$D(OK(6,V)) Q
"RTN","MAGSIXG1",54,0)
 . . . I CLS'="",C'="",'$D(OK(1,C)) Q
"RTN","MAGSIXG1",55,0)
 . . . I EVENT'="",E,'$D(OK(2,E)) Q
"RTN","MAGSIXG1",56,0)
 . . . ;3.0.8 Stop list enties with no Event, if Event is in Search Specs
"RTN","MAGSIXG1",57,0)
 . . . I EVENT'="",E="" Q
"RTN","MAGSIXG1",58,0)
 . . . I SPEC'="",S,'$D(OK(3,S)) Q
"RTN","MAGSIXG1",59,0)
 . . . ;3.0.8 Stop list enties with no Spec, if Spec is in Search Specs
"RTN","MAGSIXG1",60,0)
 . . . I SPEC'="",S="" Q
"RTN","MAGSIXG1",61,0)
 . . . I TYPE'="",T,'$D(OK(4,T)) Q
"RTN","MAGSIXG1",62,0)
 . . . ; Get Count of Images in Group, use 4th piece of ,1,0) multiple
"RTN","MAGSIXG1",63,0)
 . . . S COUNT=$S($P($G(^MAG(2005,IMAGE,1,0)),"^",4):$P($G(^MAG(2005,IMAGE,1,0)),"^",4),1:1)
"RTN","MAGSIXG1",64,0)
 . . . S FLTX=$P($$FMTE^XLFDT($P(X2,"^",5),"5Z"),"@",1)
"RTN","MAGSIXG1",65,0)
 . . . S FLTX=FLTX_"^"_$P(X0,"^",8)_"^"_COUNT_"^"_$P(X2,"^",4)
"RTN","MAGSIXG1",66,0)
 . . . S FLTX=FLTX_"^"_P
"RTN","MAGSIXG1",67,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.82,+C,0)),"^",1)
"RTN","MAGSIXG1",68,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.83,+T,0)),"^",1)
"RTN","MAGSIXG1",69,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.84,+S,0)),"^",1)
"RTN","MAGSIXG1",70,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.85,+E,0)),"^",1)
"RTN","MAGSIXG1",71,0)
 . . . S FLTX=FLTX_"^"_V
"RTN","MAGSIXG1",72,0)
 . . . S FLTX=FLTX_"^"_$P($$FMTE^XLFDT($P(X2,"^",1),"5Z"),"@",1)
"RTN","MAGSIXG1",73,0)
 . . . ; P8T36 gek. Fix Error caused if $P(X2,"^",2) "ImageSavedBy" is null
"RTN","MAGSIXG1",74,0)
 . . . S FLTX=FLTX_"^"_$$GET1^DIQ(200,+$P(X2,"^",2)_",",.01)
"RTN","MAGSIXG1",75,0)
 . . . N MAGFILE,MAGXX
"RTN","MAGSIXG1",76,0)
 . . . S MAGXX=IMAGE D INFO^MAGGTII
"RTN","MAGSIXG1",77,0)
 . . . S FLTX=FLTX_"^"_$P(MAGFILE,"^",1)
"RTN","MAGSIXG1",78,0)
 . . . S N=N+1,@RESULT@(N+1)=N_"^"_FLTX_"|"_MAGFILE
"RTN","MAGSIXG1",79,0)
 . . . Q:N<101  Q:RESULT["^"
"RTN","MAGSIXG1",80,0)
 . . . ; Image count is getting big, switch from array to Global return type
"RTN","MAGSIXG1",81,0)
 . . . S ^TMP($T(+0),$J)=""
"RTN","MAGSIXG1",82,0)
 . . . M ^TMP($T(+0),$J)=OUT
"RTN","MAGSIXG1",83,0)
 . . . K OUT
"RTN","MAGSIXG1",84,0)
 . . . S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGSIXG1",85,0)
 . . . S RESULT=$NA(^TMP($T(+0),$J))
"RTN","MAGSIXG1",86,0)
 . . . S OUT=$NA(^TMP($T(+0),$J)) ;GEK 10/01/02
"RTN","MAGSIXG1",87,0)
 . . . Q
"RTN","MAGSIXG1",88,0)
 . . Q
"RTN","MAGSIXG1",89,0)
 . Q
"RTN","MAGSIXG1",90,0)
 S FLT=$$FLTDESC(X)
"RTN","MAGSIXG1",91,0)
 I 'N S @RESULT@(0)="0^No images for filter: "_FLT  Q
"RTN","MAGSIXG1",92,0)
 S @RESULT@(0)="1^"_FLT
"RTN","MAGSIXG1",93,0)
 S @RESULT@(1)="Item~S2^Proc DT~S1^Procedure^# Img~S2^Short Desc^Pkg^Class^Type^Specialty^Event^Origin^Cap Dt~S1~W0^Cap by~~W0^Image ID~S2~W0"
"RTN","MAGSIXG1",94,0)
 Q
"RTN","MAGSIXG1",95,0)
FLTDESC(X) ;
"RTN","MAGSIXG1",96,0)
 S FLT=""
"RTN","MAGSIXG1",97,0)
 ; Package
"RTN","MAGSIXG1",98,0)
 S FLT=FLT_$S(PKG="":"",1:"Pkg: "_PKG_" - ")
"RTN","MAGSIXG1",99,0)
 ; Class
"RTN","MAGSIXG1",100,0)
 S FLT=FLT_$S(CLS="":"",CLS="ADMIN,ADMIN/CLIN,CLIN/ADMIN":"Class: ADMIN - ",CLS="CLIN,CLIN/ADMIN,ADMIN/CLIN":"Class: CLIN - ",1:"Class: "_CLS_" - ")
"RTN","MAGSIXG1",101,0)
 ; Type
"RTN","MAGSIXG1",102,0)
 F CT=1:1:$L(TYPE,",") D
"RTN","MAGSIXG1",103,0)
 . S TYPE1=$P(TYPE,",",CT) I TYPE1'="" S TYPE1=$P($G(^MAG(2005.83,TYPE1,0)),"^")
"RTN","MAGSIXG1",104,0)
 . S $P(TYPE,",",CT)=$E(TYPE1)_$$LOW^XLFSTR($E(TYPE1,2,999))
"RTN","MAGSIXG1",105,0)
 S FLT=FLT_$S(TYPE="":"",1:"Type: "_TYPE_" - ")
"RTN","MAGSIXG1",106,0)
 ; Specialty/SubSpecialty
"RTN","MAGSIXG1",107,0)
 F CT=1:1:$L(SPEC,",") D
"RTN","MAGSIXG1",108,0)
 . S SPEC1=$P(SPEC,",",CT) I SPEC1'="" S SPEC1=$P($G(^MAG(2005.84,SPEC1,0)),"^")
"RTN","MAGSIXG1",109,0)
 . S $P(SPEC,",",CT)=$E(SPEC1)_$$LOW^XLFSTR($E(SPEC1,2,999))
"RTN","MAGSIXG1",110,0)
 S FLT=FLT_$S(SPEC="":"",1:"Spec.: "_SPEC_" - ")
"RTN","MAGSIXG1",111,0)
 ; Procedure/Event
"RTN","MAGSIXG1",112,0)
 F CT=1:1:$L(EVENT,",") D
"RTN","MAGSIXG1",113,0)
 . S EVENT1=$P(EVENT,",",CT) I EVENT1'="" S EVENT1=$P($G(^MAG(2005.85,EVENT1,0)),"^")
"RTN","MAGSIXG1",114,0)
 . S $P(EVENT,",",CT)=$E(EVENT1)_$$LOW^XLFSTR($E(EVENT1,2,999))
"RTN","MAGSIXG1",115,0)
 S FLT=FLT_$S(EVENT="":"",1:"Event: "_EVENT_" - ")
"RTN","MAGSIXG1",116,0)
 ; Orgin
"RTN","MAGSIXG1",117,0)
 S FLT=FLT_$S(ORIGIN="":"",1:"Origin: "_ORIGIN_" - ")
"RTN","MAGSIXG1",118,0)
 ; Date Range - From
"RTN","MAGSIXG1",119,0)
 S FROM=$S($G(FROM)="":"",1:" from "_FROM)
"RTN","MAGSIXG1",120,0)
 ; Date Range - Until
"RTN","MAGSIXG1",121,0)
 S UNTIL=$S($G(UNTIL)="":"",1:" to "_UNTIL)
"RTN","MAGSIXG1",122,0)
 S FLT=FLT_$G(FROM)_$G(UNTIL)
"RTN","MAGSIXG1",123,0)
 ; If No Filter.  Then get All.
"RTN","MAGSIXG1",124,0)
 I FLT="" S FLT="All Images"
"RTN","MAGSIXG1",125,0)
 Q FLT
"RTN","MAGSIXG1",126,0)
REVDT(FROM,UNTIL,DAT1,DAT2) ; Calculate the Reverse Dates and switch for $O
"RTN","MAGSIXG1",127,0)
 ; for $O( through a data cross reference that is reversed, i.e. X=9999999.9999-DT
"RTN","MAGSIXG1",128,0)
 ; FROM  = Date in External or Internal
"RTN","MAGSIXG1",129,0)
 ; UNTIL = Date in External or Internal
"RTN","MAGSIXG1",130,0)
 ; DAT1  = Reverse the two dates, FROM and UNTIL, equal to the earliest
"RTN","MAGSIXG1",131,0)
 ; DAT2  = Reverse the two dates, FROM and UNTIL, equal to the latest
"RTN","MAGSIXG1",132,0)
 ; 
"RTN","MAGSIXG1",133,0)
 S DAT1=$$E2I^MAGSIXGT($G(FROM))
"RTN","MAGSIXG1",134,0)
 S DAT2=$$E2I^MAGSIXGT($G(UNTIL))
"RTN","MAGSIXG1",135,0)
 I 'DAT2 S DAT2=9999999.9999
"RTN","MAGSIXG1",136,0)
 S DAT1=9999999.9999-DAT1
"RTN","MAGSIXG1",137,0)
 S DAT2=9999999.9999-DAT2
"RTN","MAGSIXG1",138,0)
 I DAT1]DAT2 S X=DAT1,DAT1=DAT2,DAT2=X
"RTN","MAGSIXG1",139,0)
 S DAT1=DAT1\1,$P(DAT2,".",2)="9999"
"RTN","MAGSIXG1",140,0)
 Q
"RTN","MAGSIXGT")
0^19^B37432066
"RTN","MAGSIXGT",1,0)
MAGSIXGT ;WOIFO/EdM/GEK/SEB - RPC for Document Imaging ; 04/29/2002  16:15
"RTN","MAGSIXGT",2,0)
 ;;3.0;IMAGING;**8**;Sep 15, 2004
"RTN","MAGSIXGT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXGT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXGT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXGT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXGT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXGT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXGT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXGT",10,0)
 ;; |                                                               |
"RTN","MAGSIXGT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXGT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXGT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXGT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXGT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXGT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXGT",17,0)
 ;;
"RTN","MAGSIXGT",18,0)
 Q
"RTN","MAGSIXGT",19,0)
 ;
"RTN","MAGSIXGT",20,0)
 ; OUT ;--- Output array
"RTN","MAGSIXGT",21,0)
 ; CLS ;--- Image Class 
"RTN","MAGSIXGT",22,0)
 ; TYPE ;-- Image Type 
"RTN","MAGSIXGT",23,0)
 ; SPEC ;-- Image Specialty/SubSpecialty
"RTN","MAGSIXGT",24,0)
 ; EVENT ;- Image Procdure/Event
"RTN","MAGSIXGT",25,0)
 ;
"RTN","MAGSIXGT",26,0)
IGT(OUT,CLS,IGN) ;RPC [MAG4 INDEX GET TYPE]
"RTN","MAGSIXGT",27,0)
 ; OUT : the result array
"RTN","MAGSIXGT",28,0)
 ; CLS : a ',' seperated list of Classes.
"RTN","MAGSIXGT",29,0)
 ; IGN : Flag to IGNore the Status field. 1=IGNore
"RTN","MAGSIXGT",30,0)
 N C,D0,LOC,N,OK,X
"RTN","MAGSIXGT",31,0)
 K OUT
"RTN","MAGSIXGT",32,0)
 S CLS=$G(CLS),IGN=$G(IGN)
"RTN","MAGSIXGT",33,0)
 D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",34,0)
 ;
"RTN","MAGSIXGT",35,0)
 S N=1
"RTN","MAGSIXGT",36,0)
 S D0=0 F  S D0=$O(^MAG(2005.83,D0)) Q:'D0  D
"RTN","MAGSIXGT",37,0)
 . S X=$G(^MAG(2005.83,D0,0)),C=$P(X,"^",2)
"RTN","MAGSIXGT",38,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",39,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",40,0)
 . I 'IGN Q:$P(X,"^",3)="I"  ; This is the Status field inactive Flag;
"RTN","MAGSIXGT",41,0)
 . S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.83,D0,1)),"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",42,0)
 . Q
"RTN","MAGSIXGT",43,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",44,0)
 I N<2 S OUT(0)="0^-3, No Types Found for """_CLS_"""."
"RTN","MAGSIXGT",45,0)
 E  S OUT(0)="1^OK: "_N,OUT(1)=CLS_" Image Types^Abbr"
"RTN","MAGSIXGT",46,0)
 Q
"RTN","MAGSIXGT",47,0)
IGE(OUT,CLS,SPEC,IGN) ;RPC [MAG4 INDEX GET EVENT]
"RTN","MAGSIXGT",48,0)
 ; Index Get Procedure/Event (optionally based on (Sub)Specialty)
"RTN","MAGSIXGT",49,0)
 ; OUT : the result array
"RTN","MAGSIXGT",50,0)
 ; CLS : a ',' seperated list of Classes.
"RTN","MAGSIXGT",51,0)
 ; SPEC : a ',' seperated list of Spec/Subspecialties 
"RTN","MAGSIXGT",52,0)
 ; IGN : Flag to IGNore the Status field. 1=IGNore
"RTN","MAGSIXGT",53,0)
 N C,D0,D1,LOC,N,NO,OK,S,X
"RTN","MAGSIXGT",54,0)
 K OUT
"RTN","MAGSIXGT",55,0)
 S CLS=$G(CLS),SPEC=$G(SPEC),IGN=$G(IGN)
"RTN","MAGSIXGT",56,0)
 D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",57,0)
 D SPEC Q:$D(OUT(0))
"RTN","MAGSIXGT",58,0)
 ;
"RTN","MAGSIXGT",59,0)
 S N=1
"RTN","MAGSIXGT",60,0)
 S D0=0 F  S D0=$O(^MAG(2005.85,D0)) Q:'D0  D
"RTN","MAGSIXGT",61,0)
 . S X=$G(^MAG(2005.85,D0,0)),C=$P(X,"^",2)
"RTN","MAGSIXGT",62,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",63,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",64,0)
 . I 'IGN Q:$P(X,"^",3)="I"  ;This is the Status field inactive Flag;
"RTN","MAGSIXGT",65,0)
 . ; if Specialty not null, check it. Null Specialties will be listed in output.
"RTN","MAGSIXGT",66,0)
 . I SPEC'="" D  Q:NO
"RTN","MAGSIXGT",67,0)
 . . S NO=0
"RTN","MAGSIXGT",68,0)
 . . ; Next line: put "S:'D1 NO=1" before the quit to block implicit mapping 
"RTN","MAGSIXGT",69,0)
 . . S D1=0 F  S D1=$O(^MAG(2005.85,D0,1,D1)) Q:'D1  D  Q:'NO
"RTN","MAGSIXGT",70,0)
 . . . S NO=1
"RTN","MAGSIXGT",71,0)
 . . . S S=$P($G(^MAG(2005.85,D0,1,D1,0)),"^",1)
"RTN","MAGSIXGT",72,0)
 . . . Q:S=""
"RTN","MAGSIXGT",73,0)
 . . . S:$D(OK(3,S)) NO=0
"RTN","MAGSIXGT",74,0)
 . . . Q
"RTN","MAGSIXGT",75,0)
 . . Q
"RTN","MAGSIXGT",76,0)
 . S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.85,D0,2)),"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",77,0)
 . Q
"RTN","MAGSIXGT",78,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",79,0)
 I N<2 S OUT(0)="0^No Procedures or Events found for """_CLS_""" and """_SPEC_"""."
"RTN","MAGSIXGT",80,0)
 E  S OUT(0)="1^OK: "_N,OUT(1)="Procedure/Event^Abbr"
"RTN","MAGSIXGT",81,0)
 Q
"RTN","MAGSIXGT",82,0)
 ;
"RTN","MAGSIXGT",83,0)
IGS(OUT,CLS,EVENT,IGN) ;RPC [MAG4 INDEX GET SPECIALTY]
"RTN","MAGSIXGT",84,0)
 ; OUT : the result array
"RTN","MAGSIXGT",85,0)
 ; CLS : a ',' seperated list of Classes.
"RTN","MAGSIXGT",86,0)
 ; EVENT : a ',' seperated list of Proc/Events
"RTN","MAGSIXGT",87,0)
 ; IGN : Flag to IGNore the Status field. 1=IGNore
"RTN","MAGSIXGT",88,0)
 N C,D0,D1,E,LOC,N,OK,X
"RTN","MAGSIXGT",89,0)
 K OUT
"RTN","MAGSIXGT",90,0)
 S CLS=$G(CLS),EVENT=$G(EVENT),IGN=$G(IGN)
"RTN","MAGSIXGT",91,0)
 I CLS'="" D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",92,0)
 I EVENT'="" D EVENT Q:$D(OUT(0))
"RTN","MAGSIXGT",93,0)
 ;
"RTN","MAGSIXGT",94,0)
 S N=1
"RTN","MAGSIXGT",95,0)
 I EVENT="" S D0=0 F  S D0=$O(^MAG(2005.84,D0)) Q:'D0  D
"RTN","MAGSIXGT",96,0)
 . S X=$G(^MAG(2005.84,D0,0)),C=$P(X,"^",2) ;,E=$P(X,"^",3)
"RTN","MAGSIXGT",97,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",98,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",99,0)
 . I 'IGN Q:$P(X,"^",4)="I"  ; This is the Status field inactive Flag;
"RTN","MAGSIXGT",100,0)
 . ;I EVENT'="" Q:E=""  Q:'$D(OK(2,E))
"RTN","MAGSIXGT",101,0)
 . S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D0,2)),"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",102,0)
 . Q
"RTN","MAGSIXGT",103,0)
 I EVENT]"" S E="" F  S E=$O(OK(2,E)) Q:E=""  D
"RTN","MAGSIXGT",104,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",105,0)
 . I CLS'="" S C=$P($G(^MAG(2005.85,E,0)),"^",2) Q:'$D(OK(1,C))
"RTN","MAGSIXGT",106,0)
 . I +$P($G(^MAG(2005.85,E,1,0)),U,3)=0 D GETSPECS(.LOC)
"RTN","MAGSIXGT",107,0)
 . S D0="" F  S D0=$O(^MAG(2005.85,E,1,D0)) Q:D0=""  D
"RTN","MAGSIXGT",108,0)
 . . S D1=$G(^MAG(2005.85,E,1,D0,0)) I D1="" Q
"RTN","MAGSIXGT",109,0)
 . . S X=$G(^MAG(2005.84,D1,0))
"RTN","MAGSIXGT",110,0)
 . . I X]"" S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D1,2)),"^",1)_"|"_D1)=""
"RTN","MAGSIXGT",111,0)
 . Q
"RTN","MAGSIXGT",112,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",113,0)
 I N<2 S OUT(0)="0^-5, No (Sub)Specialties found for """_CLS_""" and """_EVENT_"""."
"RTN","MAGSIXGT",114,0)
 E  S OUT(0)="1^OK: "_N,OUT(1)="Specialty/SubSpecialty^Abbr"
"RTN","MAGSIXGT",115,0)
 Q
"RTN","MAGSIXGT",116,0)
 ;
"RTN","MAGSIXGT",117,0)
PKG N P
"RTN","MAGSIXGT",118,0)
 I $G(PKG)="" Q
"RTN","MAGSIXGT",119,0)
 F I=1:1:$L(PKG,",") I $L($P(PKG,",",I)) S OK(5,$P(PKG,",",I))=""
"RTN","MAGSIXGT",120,0)
 Q
"RTN","MAGSIXGT",121,0)
ORIGIN ;
"RTN","MAGSIXGT",122,0)
 N V
"RTN","MAGSIXGT",123,0)
 I $G(ORIGIN)="" Q
"RTN","MAGSIXGT",124,0)
 F I=1:1:$L(ORIGIN,",") I $L($P(ORIGIN,",",I)) S OK(6,$P(ORIGIN,",",I))=""
"RTN","MAGSIXGT",125,0)
 Q
"RTN","MAGSIXGT",126,0)
CLS N C
"RTN","MAGSIXGT",127,0)
 I $G(CLS)="" Q
"RTN","MAGSIXGT",128,0)
 F I=1:1:$L(CLS,",") I $L($P(CLS,",",I)) S CLSX=$P(CLS,",",I) D
"RTN","MAGSIXGT",129,0)
 . I CLSX=+CLSX,$D(^MAG(2005.82,CLSX)) S OK(1,CLSX)=""
"RTN","MAGSIXGT",130,0)
 . S C="" F  S C=$O(^MAG(2005.82,"B",CLSX,C)) Q:C=""  S OK(1,C)=""
"RTN","MAGSIXGT",131,0)
 I $O(OK(1,""))="" S OUT(0)="0^Invalid Class: """_CLS_"""." Q
"RTN","MAGSIXGT",132,0)
 Q
"RTN","MAGSIXGT",133,0)
 ;
"RTN","MAGSIXGT",134,0)
EVENT N E
"RTN","MAGSIXGT",135,0)
 I $G(EVENT)="" Q
"RTN","MAGSIXGT",136,0)
 F I=1:1:$L(EVENT,",") I $L($P(EVENT,",",I)) S EVENTX=$P(EVENT,",",I) D
"RTN","MAGSIXGT",137,0)
 . I EVENTX=+EVENTX,$D(^MAG(2005.85,EVENTX)) S OK(2,EVENTX)=""
"RTN","MAGSIXGT",138,0)
 . S E="" F  S E=$O(^MAG(2005.85,"B",EVENTX,E)) Q:E=""  S OK(2,E)=""
"RTN","MAGSIXGT",139,0)
 I $O(OK(2,""))="" S OUT(0)="0^Invalid Event: """_EVENT_"""." Q
"RTN","MAGSIXGT",140,0)
 Q
"RTN","MAGSIXGT",141,0)
 ;
"RTN","MAGSIXGT",142,0)
SPEC N S
"RTN","MAGSIXGT",143,0)
 I $G(SPEC)="" Q
"RTN","MAGSIXGT",144,0)
 F I=1:1:$L(SPEC,",") I $L($P(SPEC,",",I)) S SPECX=$P(SPEC,",",I) D
"RTN","MAGSIXGT",145,0)
 . I SPECX=+SPECX,$D(^MAG(2005.84,SPECX)) S OK(3,SPECX)=""
"RTN","MAGSIXGT",146,0)
 . S S="" F  S S=$O(^MAG(2005.84,"B",SPECX,S)) Q:S=""  S OK(3,S)=""
"RTN","MAGSIXGT",147,0)
 I $O(OK(3,""))="" S OUT(0)="0^Invalid Specialty: """_SPEC_"""." Q
"RTN","MAGSIXGT",148,0)
 Q
"RTN","MAGSIXGT",149,0)
 ;
"RTN","MAGSIXGT",150,0)
TYPE N T
"RTN","MAGSIXGT",151,0)
 I $G(TYPE)="" Q
"RTN","MAGSIXGT",152,0)
 F I=1:1:$L(TYPE,",") I $L($P(TYPE,",",I)) S TYPEX=$P(TYPE,",",I) D
"RTN","MAGSIXGT",153,0)
 . I TYPEX=+TYPEX,$D(^MAG(2005.83,TYPEX)) S OK(4,TYPEX)=""
"RTN","MAGSIXGT",154,0)
 . S T="" F  S T=$O(^MAG(2005.83,"B",TYPEX,T)) Q:T=""  S OK(4,T)=""
"RTN","MAGSIXGT",155,0)
 I $O(OK(4,""))="" S OUT(0)="0^Invalid Type: """_TYPE_"""." Q
"RTN","MAGSIXGT",156,0)
 Q
"RTN","MAGSIXGT",157,0)
 ;
"RTN","MAGSIXGT",158,0)
GETSPECS(LOC) N D0,X
"RTN","MAGSIXGT",159,0)
 S D0=0 F  S D0=$O(^MAG(2005.84,D0)) Q:'D0  D
"RTN","MAGSIXGT",160,0)
 . S X=$G(^MAG(2005.84,D0,0)) I X]"" S LOC($P(X,"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",161,0)
 . Q
"RTN","MAGSIXGT",162,0)
 Q
"RTN","MAGSIXGT",163,0)
 ;
"RTN","MAGSIXGT",164,0)
D2(N) Q $TR($J(N,2)," ",0)
"RTN","MAGSIXGT",165,0)
 ;
"RTN","MAGSIXGT",166,0)
E2I(D) N %DT,X,Y
"RTN","MAGSIXGT",167,0)
 Q:$P(D,".",1)?7N D\1
"RTN","MAGSIXGT",168,0)
 Q:D="" 0
"RTN","MAGSIXGT",169,0)
 S X=D,%DT="TS" D ^%DT Q:Y<0 0
"RTN","MAGSIXGT",170,0)
 Q Y\1
"RTN","MAGUSIT")
0^76^B17254641
"RTN","MAGUSIT",1,0)
MAGUSIT ;WOIFO/SRR/RMP - IMAGE SITE PARAMETERS COMPANION [ 06/29/2001 18:28 ]
"RTN","MAGUSIT",2,0)
 ;;3.0;IMAGING;**3,8**;Sep 15, 2004
"RTN","MAGUSIT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUSIT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUSIT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUSIT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUSIT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUSIT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUSIT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUSIT",10,0)
 ;; |                                                               |
"RTN","MAGUSIT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUSIT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUSIT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUSIT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUSIT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUSIT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUSIT",17,0)
 ;;
"RTN","MAGUSIT",18,0)
INI ;
"RTN","MAGUSIT",19,0)
 N NAME,D0,MAGDA,CNMSP,PLACE
"RTN","MAGUSIT",20,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGUSIT",21,0)
 I $D(^MAG(2006.1,PLACE,0)),$L($P(^(0),U,2))=3 Q
"RTN","MAGUSIT",22,0)
 S NAME=$$KSP^XUPARAM("WHERE")
"RTN","MAGUSIT",23,0)
 I NAME[".MED" S NAME=$P(NAME,".MED",1)_$P(NAME,".MED",2)
"RTN","MAGUSIT",24,0)
 S MAGDA=$O(^MAG(2006.19,"B",NAME,""))
"RTN","MAGUSIT",25,0)
 S FN=$S('MAGDA:$$UNDEF(NAME),1:$P($G(^MAG(2006.19,MAGDA,0)),U,4))
"RTN","MAGUSIT",26,0)
 I FN="" D LNOIS Q
"RTN","MAGUSIT",27,0)
 D PNMSP(PLACE,FN)
"RTN","MAGUSIT",28,0)
 Q
"RTN","MAGUSIT",29,0)
PNMSP(PLACE,FN) ;
"RTN","MAGUSIT",30,0)
 S CNMSP=$P(^MAG(2006.1,PLACE,0),U,2)
"RTN","MAGUSIT",31,0)
 I $L(CNMSP)>0 D  ;UPDATE MULTI NAMESPACE
"RTN","MAGUSIT",32,0)
 . K DIE,DINUM,FDA,DIERR
"RTN","MAGUSIT",33,0)
 . S FDA(2006.11,"+1,"_PLACE_",",.01)=CNMSP
"RTN","MAGUSIT",34,0)
 . D UPDATE^DIE("U","FDA")
"RTN","MAGUSIT",35,0)
 . K FDA Q
"RTN","MAGUSIT",36,0)
 I $D(DIERR) D LNOIS Q
"RTN","MAGUSIT",37,0)
 D BMES^XPDUTL("Imaging SITE is: "_NAME_" Namespace: "_FN)
"RTN","MAGUSIT",38,0)
 K FDA,DIE,DINUM,DIERR
"RTN","MAGUSIT",39,0)
 S FDA(2006.1,PLACE_",",.02)=FN
"RTN","MAGUSIT",40,0)
 D UPDATE^DIE("U","FDA")
"RTN","MAGUSIT",41,0)
 K FDA
"RTN","MAGUSIT",42,0)
 I $D(DIERR) D LNOIS
"RTN","MAGUSIT",43,0)
 Q
"RTN","MAGUSIT",44,0)
LNOIS ;
"RTN","MAGUSIT",45,0)
 D BMES^XPDUTL(" Contact the National Help desk to update a namespace!") Q
"RTN","MAGUSIT",46,0)
UNDEF(NAME) ;The domain is undefined in the Image site file (2006.19)
"RTN","MAGUSIT",47,0)
 N ASK,Y,FN
"RTN","MAGUSIT",48,0)
 S DIR("A")="Enter the type of account"
"RTN","MAGUSIT",49,0)
 S DIR("?")="Enter either T for a test account or P for a production account",DIR("B")="T"
"RTN","MAGUSIT",50,0)
 S DIR(0)="S0^T:Test;P:PRODUCTION"
"RTN","MAGUSIT",51,0)
 D ^DIR S ASK=Y
"RTN","MAGUSIT",52,0)
 I ASK="T" S FN="ZZT"
"RTN","MAGUSIT",53,0)
 I ASK="P" D
"RTN","MAGUSIT",54,0)
 . S FN=$$ONE^MAGQAI(NAME)
"RTN","MAGUSIT",55,0)
 . D UI(NAME,FN) ;MAIL MESSAGE TO LAVC-SERVER/IMAGE DEVELOPERS
"RTN","MAGUSIT",56,0)
 Q FN
"RTN","MAGUSIT",57,0)
EXIT ;EXIT
"RTN","MAGUSIT",58,0)
 K DIC,DIE,DA,DR,MAM,NET,WORK
"RTN","MAGUSIT",59,0)
 Q
"RTN","MAGUSIT",60,0)
UI(DOMAIN,INIT) ;UPDATE IMAGING DISTRIBUTION
"RTN","MAGUSIT",61,0)
 N Y,LOC
"RTN","MAGUSIT",62,0)
 D NOW^%DTC S Y=% D DD^%DT
"RTN","MAGUSIT",63,0)
 S LOC=$$KSP^XUPARAM("WHERE")
"RTN","MAGUSIT",64,0)
 S ^TMP($J,"MAGQ",1)="            SITE: "_LOC
"RTN","MAGUSIT",65,0)
 S ^TMP($J,"MAGQ",2)="            DATE: "_Y_" "_$G(^XMB("TIMEZONE"))
"RTN","MAGUSIT",66,0)
 S ^TMP($J,"MAGQ",3)="          DOMAIN: "_DOMAIN
"RTN","MAGUSIT",67,0)
 S ^TMP($J,"MAGQ",4)="        INITIALS: "_INIT
"RTN","MAGUSIT",68,0)
 D MAILIT
"RTN","MAGUSIT",69,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGUSIT",70,0)
 Q
"RTN","MAGUSIT",71,0)
MAILIT ;Send the report to the Clinicial Application Time
"RTN","MAGUSIT",72,0)
 N XMSUB
"RTN","MAGUSIT",73,0)
 S XMSUB="Update Site file from "_LOC
"RTN","MAGUSIT",74,0)
MAILSHR ;Shared Mail server code
"RTN","MAGUSIT",75,0)
 ;If droping in...must manage XMSUB
"RTN","MAGUSIT",76,0)
 N XMY,XMTEXT,D,D0,D1,D2,DG,DIC,DICR,DIW,INDX
"RTN","MAGUSIT",77,0)
 S XMTEXT="^TMP($J,""MAGQ"")"
"RTN","MAGUSIT",78,0)
 I $G(DUZ) S XMY(DUZ)="",XMDUZ=DUZ
"RTN","MAGUSIT",79,0)
 E  S XMY(.5)="",XMDUZ=.5
"RTN","MAGUSIT",80,0)
 S XMY("G.MAG SERVER")=""
"RTN","MAGUSIT",81,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGUSIT",82,0)
 S XMSUBJ=XMSUB
"RTN","MAGUSIT",83,0)
 S XMBODY=XMTEXT
"RTN","MAGUSIT",84,0)
 S INDX=""
"RTN","MAGUSIT",85,0)
 F  S INDX=$O(XMY(INDX)) Q:INDX=""  S XMTO(INDX)=""
"RTN","MAGUSIT",86,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ,)
"RTN","MAGUSIT",87,0)
 Q
"RTN","MAGUSIT",88,0)
ISN(RESULT,FILENAME,NETSIZE,JBSIZE) ; Image File Size variance Notice
"RTN","MAGUSIT",89,0)
 N Y,LOC,XMSUB,DIS,CAP,CNT,I,VR,DM,INST
"RTN","MAGUSIT",90,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGUSIT",91,0)
 D NOW^%DTC S Y=% D DD^%DT
"RTN","MAGUSIT",92,0)
 S INST=$S($$CONSOLID^MAGBAPI():$$GET1^DIQ(2006.1,$$PLACE^MAGBAPI(+$G(DUZ(2))),.01),1:$$KSP^XUPARAM("INST"))
"RTN","MAGUSIT",93,0)
 S XMSUB="Image File Size Variance: "_$$GET1^DIQ(4,INST,.01)
"RTN","MAGUSIT",94,0)
 S ^TMP($J,"MAGQ",1)="            SITE: "_$$GET1^DIQ(4,INST,.01)_"^"_INST
"RTN","MAGUSIT",95,0)
 S ^TMP($J,"MAGQ",2)="            DATE: "_Y_" "_$G(^XMB("TIMEZONE"))
"RTN","MAGUSIT",96,0)
 S ^TMP($J,"MAGQ",3)="          DOMAIN: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGUSIT",97,0)
 S ^TMP($J,"MAGQ",4)="        Filename: "_FILENAME
"RTN","MAGUSIT",98,0)
 S ^TMP($J,"MAGQ",5)="Vista Cache Size: "_NETSIZE
"RTN","MAGUSIT",99,0)
 S ^TMP($J,"MAGQ",6)="    Jukebox Size: "_JBSIZE
"RTN","MAGUSIT",100,0)
 D MAILSHR
"RTN","MAGUSIT",101,0)
 S RESULT="1"
"RTN","MAGUSIT",102,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGUSIT",103,0)
 Q
"RTN","MAGUSIT",104,0)
 ;
"SEC","^DIC",2005.021,2005.021,0,"AUDIT")
@
"SEC","^DIC",2005.021,2005.021,0,"DD")
@
"SEC","^DIC",2005.021,2005.021,0,"DEL")
@
"SEC","^DIC",2005.021,2005.021,0,"LAYGO")
@
"SEC","^DIC",2005.021,2005.021,0,"RD")
@
"SEC","^DIC",2005.021,2005.021,0,"WR")
@
"SEC","^DIC",2005.86,2005.86,0,"AUDIT")
@
"SEC","^DIC",2005.86,2005.86,0,"DD")
@
"SEC","^DIC",2005.86,2005.86,0,"DEL")
@
"SEC","^DIC",2005.86,2005.86,0,"LAYGO")
@
"SEC","^DIC",2005.86,2005.86,0,"RD")
@
"SEC","^DIC",2005.86,2005.86,0,"WR")
@
"SEC","^DIC",2005.87,2005.87,0,"AUDIT")
@
"SEC","^DIC",2005.87,2005.87,0,"DD")
@
"SEC","^DIC",2005.87,2005.87,0,"DEL")
@
"SEC","^DIC",2005.87,2005.87,0,"LAYGO")
@
"SEC","^DIC",2005.87,2005.87,0,"RD")
@
"SEC","^DIC",2005.87,2005.87,0,"WR")
@
"UP",2005.1,2005.11,-1)
2005.1^5
"UP",2005.1,2005.11,0)
2005.11
"UP",2005.1,2005.1106,-1)
2005.1^4
"UP",2005.1,2005.1106,0)
2005.1106
"UP",2006.82,2006.821,-1)
2006.82^ACT
"UP",2006.82,2006.821,0)
2006.821
"VER")
8.0^22.0
"^DD",2005,2005,1,0)
FILEREF^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<1) X
"^DD",2005,2005,1,1,0)
^.1
"^DD",2005,2005,1,1,1,0)
2005^E
"^DD",2005,2005,1,1,1,1)
S ^MAG(2005,"E",$E(X,1,30),DA)=""
"^DD",2005,2005,1,1,1,2)
K ^MAG(2005,"E",$E(X,1,30),DA)
"^DD",2005,2005,1,1,1,3)
DOS IMAGE file cross-reference.
"^DD",2005,2005,1,1,1,"%D",0)
^.101^2^2^3040825^^^
"^DD",2005,2005,1,1,1,"%D",1,0)
This cross-reference produces a list of unique entries as the DOS file
"^DD",2005,2005,1,1,1,"%D",2,0)
reference associated with each image/object is by definition unique.
"^DD",2005,2005,1,1,1,"DT")
2930909
"^DD",2005,2005,1,3)
Answer must be 1-30 characters in length.
"^DD",2005,2005,1,21,0)
^.001^8^8^3040825^^^^
"^DD",2005,2005,1,21,1,0)
This field contains the unique image filename of the image stored
"^DD",2005,2005,1,21,2,0)
on the Vista Imaging file servers.  It is either 12 or 18 characters long.
"^DD",2005,2005,1,21,3,0)
It contains three elements: the facility's Imaging Namespace,
"^DD",2005,2005,1,21,4,0)
from the Current Namespace field (#.02) of the IMAGING SITE PARAMETERS file
"^DD",2005,2005,1,21,5,0)
(#2006.1), the Image IEN, and padded with zeros if needed, 
"^DD",2005,2005,1,21,6,0)
and the extension that indicates the format of the image.  
"^DD",2005,2005,1,21,7,0)
Supported formats are stored in the IMAGE FILE TYPES (#2005.021) file.
"^DD",2005,2005,1,21,8,0)
This field is automatically set by the Imaging software.
"^DD",2005,2005,1,"DT")
2930909
"^DD",2005,2005,30,0)
DELETED BY^P200'^VA(200,^30;1^Q
"^DD",2005,2005,30,3)
This is system added field.  The Person who deleted the image.
"^DD",2005,2005,30,21,0)
^.001^1^1^3040519^^^^
"^DD",2005,2005,30,21,1,0)
This is the person who deleted the image.  It is a pointer to the new person file.  The system uses the DUZ variable to set the field.
"^DD",2005,2005,30,"DT")
3040519
"^DD",2005,2005,30.1,0)
DELETED DATE^D^^30;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2005,2005,30.1,3)
This is the date the Image was deleted from the Image File.
"^DD",2005,2005,30.1,21,0)
^.001^1^1^3040519^^^^
"^DD",2005,2005,30.1,21,1,0)
This is the date the Image was deleted from the Image File.
"^DD",2005,2005,30.1,"DT")
3040519
"^DD",2005,2005,30.2,0)
DELETED REASON^F^^30;3^K:$L(X)>60!($L(X)<10) X
"^DD",2005,2005,30.2,3)
The Reason that the Image was deleted from the Patient record.
"^DD",2005,2005,30.2,21,0)
^.001^1^1^3040519^^^^
"^DD",2005,2005,30.2,21,1,0)
This is the Reason that the Image was deleted.
"^DD",2005,2005,30.2,"DT")
3040519
"^DD",2005.021,2005.021,0)
FIELD^^5^6
"^DD",2005.021,2005.021,0,"DDA")
N
"^DD",2005.021,2005.021,0,"DT")
3030620
"^DD",2005.021,2005.021,0,"IX","B",2005.021,.01)

"^DD",2005.021,2005.021,0,"IX","C",2005.021,1)

"^DD",2005.021,2005.021,0,"IX","D",2005.021,5)

"^DD",2005.021,2005.021,0,"NM","IMAGE FILE TYPES")

"^DD",2005.021,2005.021,0,"VRPK")
MAG
"^DD",2005.021,2005.021,.01,0)
NAME^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",2005.021,2005.021,.01,1,0)
^.1
"^DD",2005.021,2005.021,.01,1,1,0)
2005.021^B
"^DD",2005.021,2005.021,.01,1,1,1)
S ^MAG(2005.021,"B",$E(X,1,30),DA)=""
"^DD",2005.021,2005.021,.01,1,1,2)
K ^MAG(2005.021,"B",$E(X,1,30),DA)
"^DD",2005.021,2005.021,.01,3)
Answer must be 1-10 characters in length.
"^DD",2005.021,2005.021,.01,21,0)
^.001^1^1^3020419^^
"^DD",2005.021,2005.021,.01,21,1,0)
This field contains the image filename extension, i.e., tga.
"^DD",2005.021,2005.021,.01,"DT")
3030620
"^DD",2005.021,2005.021,1,0)
DESCRIPTION^RF^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",2005.021,2005.021,1,1,0)
^.1
"^DD",2005.021,2005.021,1,1,1,0)
2005.021^C
"^DD",2005.021,2005.021,1,1,1,1)
S ^MAG(2005.021,"C",$E(X,1,30),DA)=""
"^DD",2005.021,2005.021,1,1,1,2)
K ^MAG(2005.021,"C",$E(X,1,30),DA)
"^DD",2005.021,2005.021,1,1,1,"%D",0)
^^1^1^3011008^
"^DD",2005.021,2005.021,1,1,1,"%D",1,0)
The 3 character image file extension.
"^DD",2005.021,2005.021,1,1,1,"DT")
3011008
"^DD",2005.021,2005.021,1,3)
Answer must be 1-30 characters in length.
"^DD",2005.021,2005.021,1,21,0)
^^2^2^3020419^
"^DD",2005.021,2005.021,1,21,1,0)
This field contains the description of the filename extension.  For 
"^DD",2005.021,2005.021,1,21,2,0)
example a filename extension of 'doc' is for Microsoft Word document.
"^DD",2005.021,2005.021,1,"DT")
3011008
"^DD",2005.021,2005.021,2,0)
VIEWER^RS^1:YES;0:NO;^0;3^Q
"^DD",2005.021,2005.021,2,21,0)
^^1^1^3011008^
"^DD",2005.021,2005.021,2,21,1,0)
Flag, Imaging provides a viewer for files with this extension Y/N
"^DD",2005.021,2005.021,2,"DT")
3011008
"^DD",2005.021,2005.021,3,0)
Bitmap for Abstract^F^^0;4^K:$L(X)>30!($L(X)<3) X
"^DD",2005.021,2005.021,3,3)
Answer must be 3-30 characters in length.
"^DD",2005.021,2005.021,3,21,0)
^^1^1^3011008^
"^DD",2005.021,2005.021,3,21,1,0)
If Imaging does not create abstracts for this type, this Bitmap will be used for the Abstract.
"^DD",2005.021,2005.021,3,"DT")
3011008
"^DD",2005.021,2005.021,4,0)
Abstract Created^RS^1:YES;0:NO;^0;5^Q
"^DD",2005.021,2005.021,4,3)
Enter Yes if Imaging will create an abstract for this file type.
"^DD",2005.021,2005.021,4,21,0)
^.001^2^2^3020419^^^
"^DD",2005.021,2005.021,4,21,1,0)
The Capture workstation and Background Processor will create abstracts for 
"^DD",2005.021,2005.021,4,21,2,0)
image files with this extension only if this field is Yes
"^DD",2005.021,2005.021,4,"DT")
3011008
"^DD",2005.021,2005.021,5,0)
DEFAULT OBJECT TYPE^P2005.02'^MAG(2005.02,^0;6^Q
"^DD",2005.021,2005.021,5,1,0)
^.1
"^DD",2005.021,2005.021,5,1,1,0)
2005.021^D
"^DD",2005.021,2005.021,5,1,1,1)
S ^MAG(2005.021,"D",$E(X,1,30),DA)=""
"^DD",2005.021,2005.021,5,1,1,2)
K ^MAG(2005.021,"D",$E(X,1,30),DA)
"^DD",2005.021,2005.021,5,1,1,"%D",0)
^^1^1^3030122^
"^DD",2005.021,2005.021,5,1,1,"%D",1,0)
Gives the ability to query the file, based on an Image's 'Object Type'
"^DD",2005.021,2005.021,5,1,1,"DT")
3030122
"^DD",2005.021,2005.021,5,3)
Enter the Default Object Type for this file Extension
"^DD",2005.021,2005.021,5,21,0)
^^1^1^3011008^
"^DD",2005.021,2005.021,5,21,1,0)
Certain Extensions have a default Object Type defined in this field.
"^DD",2005.021,2005.021,5,"DT")
3030122
"^DD",2005.1,2005.1,.05,0)
ACQUSITION SITE^RP4'^DIC(4,^100;3^Q
"^DD",2005.1,2005.1,.05,3)
Enter the name of the site where the image was created.
"^DD",2005.1,2005.1,.05,21,0)
^.001^7^7^3030226^^^^
"^DD",2005.1,2005.1,.05,21,1,0)
The 'origin' location is the location where an image is created.
"^DD",2005.1,2005.1,.05,21,2,0)
For instance, a site like 'St. Louis' may process images for several
"^DD",2005.1,2005.1,.05,21,3,0)
other locations, such as Topeka, Wichita and Leavenworth.
"^DD",2005.1,2005.1,.05,21,4,0)
Any reference to a site identifier will return the name of the
"^DD",2005.1,2005.1,.05,21,5,0)
primary location. For the purpose of finding the 'origin' of images,
"^DD",2005.1,2005.1,.05,21,6,0)
the more specific sub-site is needed.
"^DD",2005.1,2005.1,.05,21,7,0)
This field contains the name of this 'sub-site'.
"^DD",2005.1,2005.1,.05,"DT")
3030123
"^DD",2005.1,2005.1,.06,0)
EXPORT LOCATION^2005.11PA^^5;0
"^DD",2005.1,2005.1,.06,21,0)
^.001^4^4^3040519^^
"^DD",2005.1,2005.1,.06,21,1,0)
This table contains audit information regarding the export locations
"^DD",2005.1,2005.1,.06,21,2,0)
of file copies generated by the generic carbon copy (GCC)
"^DD",2005.1,2005.1,.06,21,3,0)
utility.  This utility is used by the Health Eligibility Center
"^DD",2005.1,2005.1,.06,21,4,0)
functionality.
"^DD",2005.1,2005.1,13,0)
IQ^S^1:YES;^0;11^Q
"^DD",2005.1,2005.1,13,21,0)
^^2^2^3030123^
"^DD",2005.1,2005.1,13,21,1,0)
This field is set by various integrity checkers in the Imaging software.
"^DD",2005.1,2005.1,13,21,2,0)
This field is set if an entry has questionable integrity.
"^DD",2005.1,2005.1,13,"DT")
3030123
"^DD",2005.1,2005.1,30,0)
DELETED BY^P200'^VA(200,^30;1^Q
"^DD",2005.1,2005.1,30,3)
This is system added field.  The Person who deleted the image.
"^DD",2005.1,2005.1,30,21,0)
^^2^2^3040519^
"^DD",2005.1,2005.1,30,21,1,0)
This is the person who deleted the image.  It is a pointer to the new person
"^DD",2005.1,2005.1,30,21,2,0)
 file.  The system uses the DUZ variable to set the field.
"^DD",2005.1,2005.1,30,"DT")
3040519
"^DD",2005.1,2005.1,30.1,0)
DELETED DATE^D^^30;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2005.1,2005.1,30.1,3)
This is the date the Image was deleted from the Image File.
"^DD",2005.1,2005.1,30.1,21,0)
^^1^1^3040519^
"^DD",2005.1,2005.1,30.1,21,1,0)
This is the date the Image was deleted from the Image File.
"^DD",2005.1,2005.1,30.1,"DT")
3040519
"^DD",2005.1,2005.1,30.2,0)
DELETED REASON^F^^30;3^K:$L(X)>60!($L(X)<10) X
"^DD",2005.1,2005.1,30.2,3)
The Reason that the Image was deleted from the Patient record.
"^DD",2005.1,2005.1,30.2,21,0)
^^1^1^3040519^
"^DD",2005.1,2005.1,30.2,21,1,0)
This is the Reason that the Image was deleted.
"^DD",2005.1,2005.1,30.2,"DT")
3040519
"^DD",2005.1,2005.1,40,0)
PACKAGE INDEX^S^RAD:RAD;LAB:LAB;MED:MED;NOTE:NOTE;CP:CP;SUR:SUR;PHOTOID:PHOTOID;NONE:NONE;CONS:CONS;^40;1^Q
"^DD",2005.1,2005.1,40,3)
The Package associated with the Image
"^DD",2005.1,2005.1,40,21,0)
^.001^1^1^3040519^^
"^DD",2005.1,2005.1,40,21,1,0)
This is an abbreviation of the package that the Image is attached to.
"^DD",2005.1,2005.1,40,"DT")
3040519
"^DD",2005.1,2005.1,41,0)
CLASS INDEX^P2005.82'^MAG(2005.82,^40;2^Q
"^DD",2005.1,2005.1,41,21,0)
^.001^2^2^3040519^^
"^DD",2005.1,2005.1,41,21,1,0)
The Classification of the Image.
"^DD",2005.1,2005.1,41,21,2,0)
CLASS is an index field used for sorting and searching.
"^DD",2005.1,2005.1,41,"DT")
3040519
"^DD",2005.1,2005.1,42,0)
TYPE INDEX^P2005.83'^MAG(2005.83,^40;3^Q
"^DD",2005.1,2005.1,42,3)
This field is used to screen image types.
"^DD",2005.1,2005.1,42,"DT")
3040701
"^DD",2005.1,2005.1,43,0)
PROC/EVENT INDEX^P2005.85'^MAG(2005.85,^40;4^Q
"^DD",2005.1,2005.1,43,21,0)
^.001^1^1^3040519^^
"^DD",2005.1,2005.1,43,21,1,0)
The PROCEDURE/EVENT of Image.  PROCEDURE/EVENT is an index field used for sorting and searching.
"^DD",2005.1,2005.1,43,"DT")
3040519
"^DD",2005.1,2005.1,44,0)
SPEC/SUBSPEC INDEX^P2005.84'^MAG(2005.84,^40;5^Q
"^DD",2005.1,2005.1,44,21,0)
^.001^2^2^3040519^^
"^DD",2005.1,2005.1,44,21,1,0)
The SPECIALTY/SUBSPECIALTY of Image.
"^DD",2005.1,2005.1,44,21,2,0)
  SPECIALTY/SUBSPECIALTY is an index field used for sorting and searching.
"^DD",2005.1,2005.1,44,"DT")
3040519
"^DD",2005.1,2005.1,45,0)
ORIGIN INDEX^S^V:VA;N:NON-VA;^40;6^Q
"^DD",2005.1,2005.1,45,3)
This field indicates whether this image originated inside or outside of the VA
"^DD",2005.1,2005.1,45,21,0)
^^1^1^3040519^
"^DD",2005.1,2005.1,45,21,1,0)
This field indicates whether this image originated inside or outside of  the VA
"^DD",2005.1,2005.1,45,"DT")
3040519
"^DD",2005.1,2005.1,106,0)
ROUTING TIMESTAMP^2005.1106DA^^4;0
"^DD",2005.1,2005.1,106,21,0)
^^1^1^3040701^
"^DD",2005.1,2005.1,106,21,1,0)
This field keeps track of any routing activity.
"^DD",2005.1,2005.1,106,"DT")
3030226
"^DD",2005.1,2005.1,107,0)
ACQUISITION DEVICE^P2006.04^MAG(2006.04,^100;4^Q
"^DD",2005.1,2005.1,107,"DT")
3030123
"^DD",2005.1,2005.1,108,0)
TRACKING ID^F^^100;5^K:$L(X)>30!($L(X)<3) X
"^DD",2005.1,2005.1,108,3)
Package ID that performed the Import ";" Internal package identifier
"^DD",2005.1,2005.1,108,21,0)
^^4^4^3030123^
"^DD",2005.1,2005.1,108,21,1,0)
This field tracks the packages that are using the Import API.
"^DD",2005.1,2005.1,108,21,2,0)
It is an ";" (semicolon) delimited free text field.
"^DD",2005.1,2005.1,108,21,3,0)
First piece is the Package ID that performed the Import
"^DD",2005.1,2005.1,108,21,4,0)
Second piece is the Internal package identifier.
"^DD",2005.1,2005.1,108,"DT")
3030123
"^DD",2005.1,2005.1,109,0)
CREATE METHOD^F^^METHOD;1^K:$L(X)>245!($L(X)<3) X
"^DD",2005.1,2005.1,109,3)
This field holds the command that either has created the image(s), or will dynamically access the Image from the Display GUI.
"^DD",2005.1,2005.1,109,21,0)
^^5^5^3030123^
"^DD",2005.1,2005.1,109,21,1,0)
This field holds the command that either
"^DD",2005.1,2005.1,109,21,2,0)
   has created the image(s)
"^DD",2005.1,2005.1,109,21,3,0)
   or will dynamically access the Image when called from the Display GUI
"^DD",2005.1,2005.1,109,21,4,0)
an example is a DLL provided by a COTS product.
"^DD",2005.1,2005.1,109,21,5,0)
When the DLL is called, it generates the image.
"^DD",2005.1,2005.1,109,"DT")
3030123
"^DD",2005.1,2005.1,110,0)
DOCUMENT DATE^D^^100;6^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2005.1,2005.1,110,3)
If this image is a scanned document, enter the date of the document.
"^DD",2005.1,2005.1,110,21,0)
^^1^1^3030123^
"^DD",2005.1,2005.1,110,21,1,0)
Document Images can have a seperate date, unlike clinical images that are attached to a procedure, and only procedure date is needed.
"^DD",2005.1,2005.1,110,"DT")
3030123
"^DD",2005.1,2005.11,0)
EXPORT LOCATION SUB-FIELD^^2^3
"^DD",2005.1,2005.11,0,"DT")
3030123
"^DD",2005.1,2005.11,0,"IX","B",2005.11,.01)

"^DD",2005.1,2005.11,0,"NM","EXPORT LOCATION")

"^DD",2005.1,2005.11,0,"UP")
2005.1
"^DD",2005.1,2005.11,.01,0)
EXPORT LOCATION^P2005.2'^MAG(2005.2,^0;1^Q
"^DD",2005.1,2005.11,.01,1,0)
^.1
"^DD",2005.1,2005.11,.01,1,1,0)
2005.11^B
"^DD",2005.1,2005.11,.01,1,1,1)
S ^MAG(2005.1,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",2005.1,2005.11,.01,1,1,2)
K ^MAG(2005.1,DA(1),5,"B",$E(X,1,30),DA)
"^DD",2005.1,2005.11,.01,21,0)
^.001^2^2^3030123^^
"^DD",2005.1,2005.11,.01,21,1,0)
This is the network location file pointer that successfully received
"^DD",2005.1,2005.11,.01,21,2,0)
a copy of the file.
"^DD",2005.1,2005.11,.01,"DT")
3030123
"^DD",2005.1,2005.11,1,0)
TIMESTAMP^D^^0;2^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2005.1,2005.11,1,21,0)
^^2^2^3030123^
"^DD",2005.1,2005.11,1,21,1,0)
This is the date and time that the file was copied to the
"^DD",2005.1,2005.11,1,21,2,0)
network location.
"^DD",2005.1,2005.11,1,"DT")
3030123
"^DD",2005.1,2005.11,2,0)
EXTENSION^F^^0;3^K:$L(X)>3!($L(X)<3) X
"^DD",2005.1,2005.11,2,3)
Answer must be 3 characters in length.
"^DD",2005.1,2005.11,2,21,0)
^^2^2^3030123^
"^DD",2005.1,2005.11,2,21,1,0)
This is the file extension that was successfully copied to the
"^DD",2005.1,2005.11,2,21,2,0)
network location.
"^DD",2005.1,2005.11,2,"DT")
3030123
"^DD",2005.1,2005.1106,0)
ROUTING TIMESTAMP SUB-FIELD^^7^7
"^DD",2005.1,2005.1106,0,"NM","ROUTING TIMESTAMP")

"^DD",2005.1,2005.1106,.01,0)
ROUTING TIMESTAMP^D^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",2005.1,2005.1106,.01,1,0)
^.1^^0
"^DD",2005.1,2005.1106,.01,3)
Enter the date and time when the image file was 'routed'.
"^DD",2005.1,2005.1106,.01,21,0)
^^6^6^2981208^
"^DD",2005.1,2005.1106,.01,21,1,0)
This field keeps track of any routing activity.
"^DD",2005.1,2005.1106,.01,21,2,0)
For each time that an image file is transmitted in the context
"^DD",2005.1,2005.1106,.01,21,3,0)
of 'routing', an entry will be added to this multiple that
"^DD",2005.1,2005.1106,.01,21,4,0)
records which type of image file was transmitted (FULL, BIG,
"^DD",2005.1,2005.1106,.01,21,5,0)
ABSTRACT, etcetera), and to which destination (pointer to
"^DD",2005.1,2005.1106,.01,21,6,0)
network location) it was transmitted.
"^DD",2005.1,2005.1106,.01,"DT")
3030226
"^DD",2005.1,2005.1106,2,0)
DESTINATION^RP2005.2'^MAG(2005.2,^0;2^Q
"^DD",2005.1,2005.1106,2,1,0)
^.1^^-1
"^DD",2005.1,2005.1106,2,1,1,0)
2005.1106^LOC
"^DD",2005.1,2005.1106,2,1,1,1)
S ^MAG(2005.1,DA(1),4,"LOC",$E(X,1,30),DA)=""
"^DD",2005.1,2005.1106,2,1,1,2)
K ^MAG(2005.1,DA(1),4,"LOC",$E(X,1,30),DA)
"^DD",2005.1,2005.1106,2,1,1,"%D",0)
^^3^3^2981222^
"^DD",2005.1,2005.1106,2,1,1,"%D",1,0)
This cross-reference keeps track of which destinations
"^DD",2005.1,2005.1106,2,1,1,"%D",2,0)
(network locations) have received image files from the
"^DD",2005.1,2005.1106,2,1,1,"%D",3,0)
current system.
"^DD",2005.1,2005.1106,2,1,1,"DT")
2981222
"^DD",2005.1,2005.1106,2,3)
Enter the destination to which the image file was transmitted.
"^DD",2005.1,2005.1106,2,21,0)
^^3^3^2981221^^^
"^DD",2005.1,2005.1106,2,21,1,0)
The value of this field is a pointer (into the network location file)
"^DD",2005.1,2005.1106,2,21,2,0)
that indicated where an image file was sent in the context of
"^DD",2005.1,2005.1106,2,21,3,0)
automated routing.
"^DD",2005.1,2005.1106,2,"DT")
3030226
"^DD",2005.1,2005.1106,3,0)
TYPE^RS^FULL:Full;ABSTRACT:Abstract;BIG:Big;TEXT:Text;DICOM:DICOM;^0;3^Q
"^DD",2005.1,2005.1106,3,3)
Enter the type of image file that was transmitted.
"^DD",2005.1,2005.1106,3,21,0)
^^2^2^2981221^^
"^DD",2005.1,2005.1106,3,21,1,0)
The value of this field indicates what type of image file
"^DD",2005.1,2005.1106,3,21,2,0)
was transmitted (FULL, BIG, TEXT, DICOM or ABSTRACT).
"^DD",2005.1,2005.1106,3,"DT")
3030226
"^DD",2005.1,2005.1106,4,0)
FILENAME^RF^^0;4^K:$L(X)>100!($L(X)<1) X
"^DD",2005.1,2005.1106,4,3)
Enter the name of the transmitted file (path+name at destination).
"^DD",2005.1,2005.1106,4,21,0)
^^3^3^2981221^^
"^DD",2005.1,2005.1106,4,21,1,0)
The value of this field is the name of the transmitted file as
"^DD",2005.1,2005.1106,4,21,2,0)
it is at the destination location. This file name contains all
"^DD",2005.1,2005.1106,4,21,3,0)
directory prefixes and a 'type' suffix.
"^DD",2005.1,2005.1106,4,"DT")
3030226
"^DD",2005.1,2005.1106,5,0)
START TRANSMIT^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",2005.1,2005.1106,5,3)
Enter the time that the transmission started.
"^DD",2005.1,2005.1106,5,21,0)
^^6^6^3031212^
"^DD",2005.1,2005.1106,5,21,1,0)
The value of this field is a timestamp that indicates
"^DD",2005.1,2005.1106,5,21,2,0)
the date and time when the transmission of a file started.
"^DD",2005.1,2005.1106,5,21,3,0)
 
"^DD",2005.1,2005.1106,5,21,4,0)
Together with the value of the field ROUTING TIMESTAMP,
"^DD",2005.1,2005.1106,5,21,5,0)
which indicates the time when the transmission completed,
"^DD",2005.1,2005.1106,5,21,6,0)
statistics can be calculated on how long it took to transmit image files.
"^DD",2005.1,2005.1106,5,"DT")
3031212
"^DD",2005.1,2005.1106,6,0)
TIMESTAMP QUEUE ENTRY^D^^0;6^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",2005.1,2005.1106,6,3)
Enter the time when the queue-entry was made.
"^DD",2005.1,2005.1106,6,21,0)
^^7^7^3031212^
"^DD",2005.1,2005.1106,6,21,1,0)
The value of this field is a timestamp that indicates
"^DD",2005.1,2005.1106,6,21,2,0)
the date and time when the entry was made into the routing queue.
"^DD",2005.1,2005.1106,6,21,3,0)
 
"^DD",2005.1,2005.1106,6,21,4,0)
Together with the value of the field START TRANSMIT,
"^DD",2005.1,2005.1106,6,21,5,0)
which indicates when the transmission started,
"^DD",2005.1,2005.1106,6,21,6,0)
statistics can be calculated related to wait times
"^DD",2005.1,2005.1106,6,21,7,0)
in the routing queue.
"^DD",2005.1,2005.1106,6,"DT")
3031212
"^DD",2005.1,2005.1106,7,0)
LOG ENTRY^NJ15,0^^0;7^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2005.1,2005.1106,7,3)
Enter the sequence number of the "permanent" log entry.
"^DD",2005.1,2005.1106,7,21,0)
^^6^6^3031212^
"^DD",2005.1,2005.1106,7,21,1,0)
The value of this field is an integer number that indicates the entry
"^DD",2005.1,2005.1106,7,21,2,0)
in the "permanent" log of all routed copies of the current
"^DD",2005.1,2005.1106,7,21,3,0)
image (as required by HIPAA).
"^DD",2005.1,2005.1106,7,21,4,0)
 
"^DD",2005.1,2005.1106,7,21,5,0)
This value is used to record when images are purged from their
"^DD",2005.1,2005.1106,7,21,6,0)
routed destination.
"^DD",2005.1,2005.1106,7,"DT")
3031212
"^DD",2005.2,2005.2,6,0)
STORAGE TYPE^RS^MAG:MAGNETIC;WORM-DG:WORM-DG;WORM-PDT:WORM-PDT;RW:READ/WRITE;WORM-OTG:WORM-OTG;EKG:MUSE-EKG;GCC:EXPORT;DGM:DIAGRAM;^0;7^Q
"^DD",2005.2,2005.2,6,1,0)
^.1
"^DD",2005.2,2005.2,6,1,1,0)
2005.2^E
"^DD",2005.2,2005.2,6,1,1,1)
S ^MAG(2005.2,"E",$E(X,1,30),DA)=""
"^DD",2005.2,2005.2,6,1,1,2)
K ^MAG(2005.2,"E",$E(X,1,30),DA)
"^DD",2005.2,2005.2,6,1,1,"%D",0)
^.101^1^1^3030813^^
"^DD",2005.2,2005.2,6,1,1,"%D",1,0)
Storage Type cross reference
"^DD",2005.2,2005.2,6,1,1,"DT")
3000131
"^DD",2005.2,2005.2,6,3)
Enter the type of storage this network location is i.e.
"^DD",2005.2,2005.2,6,21,0)
^.001^7^7^3040519^^^^
"^DD",2005.2,2005.2,6,21,1,0)
This field describes the media type of this network location. It should be
"^DD",2005.2,2005.2,6,21,2,0)
MAGNETIC for a magnetic disk server. Jukeboxes should be WORM-DG for Data
"^DD",2005.2,2005.2,6,21,3,0)
General Jukeboxes under Open Netware or WORM-PDT for Pegasus Jukeboxes or
"^DD",2005.2,2005.2,6,21,4,0)
WORM-OTG for OTG Disk Extender. WORM-DG and WORM-PDT are for backward
"^DD",2005.2,2005.2,6,21,5,0)
compatibility only.  Note: WORM stands for Write Once, Read Many
"^DD",2005.2,2005.2,6,21,6,0)
The GCC type refers to the Generic Carbon Copy (GCC) utility implemented
"^DD",2005.2,2005.2,6,21,7,0)
by the Health Eligibility Center application.
"^DD",2005.2,2005.2,6,"DT")
3030206
"^DD",2005.86,2005.86,0)
FIELD^^5^6
"^DD",2005.86,2005.86,0,"DDA")
N
"^DD",2005.86,2005.86,0,"DT")
3020205
"^DD",2005.86,2005.86,0,"IX","ATYPE",2005.865,.01)

"^DD",2005.86,2005.86,0,"IX","B",2005.86,.01)

"^DD",2005.86,2005.86,0,"NM","IMAGE ACTIONS")

"^DD",2005.86,2005.86,0,"VRPK")
MAG
"^DD",2005.86,2005.86,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",2005.86,2005.86,.01,1,0)
^.1
"^DD",2005.86,2005.86,.01,1,1,0)
2005.86^B
"^DD",2005.86,2005.86,.01,1,1,1)
S ^MAG(2005.86,"B",$E(X,1,30),DA)=""
"^DD",2005.86,2005.86,.01,1,1,2)
K ^MAG(2005.86,"B",$E(X,1,30),DA)
"^DD",2005.86,2005.86,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",2005.86,2005.86,.01,21,0)
^^1^1^3020827^
"^DD",2005.86,2005.86,.01,21,1,0)
Enter the name of the image action to take place.
"^DD",2005.86,2005.86,.01,"DT")
3020913
"^DD",2005.86,2005.86,1,0)
ACTIVE^S^1:YES;0:NO;^0;2^Q
"^DD",2005.86,2005.86,1,21,0)
^^1^1^3020201^
"^DD",2005.86,2005.86,1,21,1,0)
The processing of actions can be turned off/on.
"^DD",2005.86,2005.86,1,"DT")
3020201
"^DD",2005.86,2005.86,2,0)
TAG^RF^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",2005.86,2005.86,2,3)
Answer must be 1-20 characters in length.
"^DD",2005.86,2005.86,2,21,0)
^^1^1^3020201^
"^DD",2005.86,2005.86,2,21,1,0)
The tag of the routine that will be called to process the action.
"^DD",2005.86,2005.86,2,"DT")
3020201
"^DD",2005.86,2005.86,3,0)
ROUTINE^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",2005.86,2005.86,3,3)
Answer must be 1-20 characters in length.
"^DD",2005.86,2005.86,3,21,0)
^^1^1^3020201^
"^DD",2005.86,2005.86,3,21,1,0)
The routine that will be called to process the action.
"^DD",2005.86,2005.86,3,"DT")
3020201
"^DD",2005.86,2005.86,4,0)
DESC^F^^1;1^K:$L(X)>120!($L(X)<3) X
"^DD",2005.86,2005.86,4,3)
Answer must be 3-120 characters in length.
"^DD",2005.86,2005.86,4,21,0)
^^1^1^3020201^
"^DD",2005.86,2005.86,4,21,1,0)
A Description of the Action.
"^DD",2005.86,2005.86,4,"DT")
3020201
"^DD",2005.86,2005.86,5,0)
TYPE^2005.865P^^2;0
"^DD",2005.86,2005.86,5,21,0)
^.001^2^2^3020205^^
"^DD",2005.86,2005.86,5,21,1,0)
Certain Types of images can have actions performed when an entry is made
"^DD",2005.86,2005.86,5,21,2,0)
in the IMAGE File.  An example is Copying Means Tests Documents to H.E.C.
"^DD",2005.86,2005.865,0)
TYPE SUB-FIELD^^.01^1
"^DD",2005.86,2005.865,0,"DT")
3020205
"^DD",2005.86,2005.865,0,"IX","B",2005.865,.01)

"^DD",2005.86,2005.865,0,"NM","TYPE")

"^DD",2005.86,2005.865,0,"UP")
2005.86
"^DD",2005.86,2005.865,.01,0)
TYPE^MP2005.83'^MAG(2005.83,^0;1^Q
"^DD",2005.86,2005.865,.01,1,0)
^.1
"^DD",2005.86,2005.865,.01,1,1,0)
2005.865^B
"^DD",2005.86,2005.865,.01,1,1,1)
S ^MAG(2005.86,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",2005.86,2005.865,.01,1,1,2)
K ^MAG(2005.86,DA(1),2,"B",$E(X,1,30),DA)
"^DD",2005.86,2005.865,.01,1,2,0)
2005.86^ATYPE
"^DD",2005.86,2005.865,.01,1,2,1)
S ^MAG(2005.86,"ATYPE",$E(X,1,30),DA(1),DA)=""
"^DD",2005.86,2005.865,.01,1,2,2)
K ^MAG(2005.86,"ATYPE",$E(X,1,30),DA(1),DA)
"^DD",2005.86,2005.865,.01,1,2,"%D",0)
^^1^1^3020205^
"^DD",2005.86,2005.865,.01,1,2,"%D",1,0)
Quickly find all actions for a certain type
"^DD",2005.86,2005.865,.01,1,2,"DT")
3020205
"^DD",2005.86,2005.865,.01,21,0)
0^.001^1^1^3020205^
"^DD",2005.86,2005.865,.01,21,1,0)
This field points to the Image Types that will have this action 
"^DD",2005.86,2005.865,.01,"DT")
3020205
"^DD",2005.87,2005.87,0)
FIELD^^22^13
"^DD",2005.87,2005.87,0,"DDA")
N
"^DD",2005.87,2005.87,0,"DT")
3030731
"^DD",2005.87,2005.87,0,"ID",20)
S %I=Y,Y=$S('$D(^(1)):"",$D(^VA(200,+$P(^(1),U,1),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(200,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",2005.87,2005.87,0,"IX","B",2005.87,.01)

"^DD",2005.87,2005.87,0,"IX","C",2005.87,20)

"^DD",2005.87,2005.87,0,"IX","D",2005.87,21)

"^DD",2005.87,2005.87,0,"NM","IMAGE LIST FILTERS")

"^DD",2005.87,2005.87,0,"PT",2006.18,160)

"^DD",2005.87,2005.87,0,"PT",2006.18,161)

"^DD",2005.87,2005.87,0,"PT",2006.18,162)

"^DD",2005.87,2005.87,0,"PT",2006.18,177)

"^DD",2005.87,2005.87,0,"VRPK")
MAG
"^DD",2005.87,2005.87,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",2005.87,2005.87,.01,1,0)
^.1
"^DD",2005.87,2005.87,.01,1,1,0)
2005.87^B
"^DD",2005.87,2005.87,.01,1,1,1)
S ^MAG(2005.87,"B",$E(X,1,30),DA)=""
"^DD",2005.87,2005.87,.01,1,1,2)
K ^MAG(2005.87,"B",$E(X,1,30),DA)
"^DD",2005.87,2005.87,.01,3)
Answer must be 3-30 characters in length.
"^DD",2005.87,2005.87,.01,21,0)
^.001^4^4^3030731^^^
"^DD",2005.87,2005.87,.01,21,1,0)
Descriptive name of filter.  Names aren't unique in the File, but are 
"^DD",2005.87,2005.87,.01,21,2,0)
forced to be unique by user.  i.e. A user can not have two filters 
"^DD",2005.87,2005.87,.01,21,3,0)
called "All Clinical", but two different users can have filters with
"^DD",2005.87,2005.87,.01,21,4,0)
the same name
"^DD",2005.87,2005.87,.01,"DT")
3030730
"^DD",2005.87,2005.87,1,0)
PACKAGE^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",2005.87,2005.87,1,3)
The packages to include seperated by ''  i.e. RADMEDSUR
"^DD",2005.87,2005.87,1,21,0)
^.001^1^1^3030731^^
"^DD",2005.87,2005.87,1,21,1,0)
Cooresponds to IMAGE File, Field #40 PACKAGE INDEX
"^DD",2005.87,2005.87,1,"DT")
3030608
"^DD",2005.87,2005.87,2,0)
CLASS^S^ADMIN:ADMIN;CLIN:CLIN;^0;3^Q
"^DD",2005.87,2005.87,2,3)
ADMIN or CLIN.  (If field is blank the entry will be considered both Admin and Clin.)
"^DD",2005.87,2005.87,2,21,0)
^.001^1^1^3030731^^^^
"^DD",2005.87,2005.87,2,21,1,0)
Corresponds to IMAGE File, Field #41 CLASS INDEX.
"^DD",2005.87,2005.87,2,"DT")
3030608
"^DD",2005.87,2005.87,3,0)
TYPE^F^^0;4^K:$L(X)>50!($L(X)<1) X
"^DD",2005.87,2005.87,3,3)
The INDEX TYPE(IENs) seperated by ':' included in this filter.
"^DD",2005.87,2005.87,3,21,0)
^.001^1^1^3030731^^
"^DD",2005.87,2005.87,3,21,1,0)
Corresponds to IMAGE File, Field #42 TYPE INDEX.
"^DD",2005.87,2005.87,3,"DT")
3030608
"^DD",2005.87,2005.87,4,0)
EVENT^F^^0;5^K:$L(X)>50!($L(X)<1) X
"^DD",2005.87,2005.87,4,3)
The INDEX PROC/EVENTS(IENs) seperated by ':' to include.
"^DD",2005.87,2005.87,4,21,0)
^^1^1^3030731^
"^DD",2005.87,2005.87,4,21,1,0)
Corresponds to IMAGE File, Field #43 PROC/EVENT INDEX.
"^DD",2005.87,2005.87,4,"DT")
3030608
"^DD",2005.87,2005.87,5,0)
SPEC^F^^0;6^K:$L(X)>50!($L(X)<1) X
"^DD",2005.87,2005.87,5,3)
The INDEX SPECIALTIES(IENs) seperated by ':' to include.
"^DD",2005.87,2005.87,5,21,0)
^^1^1^3030731^
"^DD",2005.87,2005.87,5,21,1,0)
Corresponds to IMAGE File, Field ##44 SPEC/SUBSPEC INDEX.
"^DD",2005.87,2005.87,5,"DT")
3030608
"^DD",2005.87,2005.87,6,0)
FROM^D^^0;7^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2005.87,2005.87,6,3)
(No range limit on date)
"^DD",2005.87,2005.87,6,21,0)
^.001^3^3^3030731^^^^
"^DD",2005.87,2005.87,6,21,1,0)
If a specific date range is desired, these fields will be populated:
"^DD",2005.87,2005.87,6,21,2,0)
FROM and UNTIL.  This isn't a relative date range.  
"^DD",2005.87,2005.87,6,21,3,0)
If you want images for the last 3 months, use the RELATIVE RANGE FIELD.
"^DD",2005.87,2005.87,6,"DT")
3030731
"^DD",2005.87,2005.87,7,0)
UNTIL^D^^0;8^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2005.87,2005.87,7,3)
(No range limit on date)
"^DD",2005.87,2005.87,7,21,0)
^.001^3^3^3030731^^^
"^DD",2005.87,2005.87,7,21,1,0)
If a specific date range is desired, these fields will be populated:
"^DD",2005.87,2005.87,7,21,2,0)
FROM and UNTIL.  This isn't a relative date range.
"^DD",2005.87,2005.87,7,21,3,0)
If you want images for the last 3 months, use the RELATIVE RANGE FIELD.
"^DD",2005.87,2005.87,7,"DT")
3030731
"^DD",2005.87,2005.87,8,0)
RELATIVE RANGE^NJ1,0^^0;9^K:+X'=X!(X>0)!(X<-120)!(X?.E1"."1N.N) X
"^DD",2005.87,2005.87,8,1,0)
^.1^^0
"^DD",2005.87,2005.87,8,3)
Enter the number of Months to search backwards.  -3 = search 3 months back.
"^DD",2005.87,2005.87,8,21,0)
^.001^5^5^3030731^^^^
"^DD",2005.87,2005.87,8,21,1,0)
This is a relative number of months to search backwards for Images.
"^DD",2005.87,2005.87,8,21,2,0)
  -1 means search back 1 month
"^DD",2005.87,2005.87,8,21,3,0)
 -12 means search back 1 year  etc.
"^DD",2005.87,2005.87,8,21,4,0)
  0  means get all (unless a specific date range exists
"^DD",2005.87,2005.87,8,21,5,0)
     in the From and Until Date Fields.
"^DD",2005.87,2005.87,8,"DT")
3030616
"^DD",2005.87,2005.87,9,0)
ORIGIN^F^^2;1^K:$L(X)>50!($L(X)<1) X
"^DD",2005.87,2005.87,9,1,0)
^.1^^0
"^DD",2005.87,2005.87,9,3)
Answer must be 1-50 characters in length.
"^DD",2005.87,2005.87,9,21,0)
^^3^3^3030731^
"^DD",2005.87,2005.87,9,21,1,0)
This field determines which scope of images to include in the filter
"^DD",2005.87,2005.87,9,21,2,0)
possible values of scope are VA and NON-VA.
"^DD",2005.87,2005.87,9,21,3,0)
Corresponds to IMAGE File, Field #45 ORIGIN INDEX.
"^DD",2005.87,2005.87,9,"DT")
3030730
"^DD",2005.87,2005.87,20,0)
USER^P200'^VA(200,^1;1^Q
"^DD",2005.87,2005.87,20,1,0)
^.1
"^DD",2005.87,2005.87,20,1,1,0)
2005.87^C
"^DD",2005.87,2005.87,20,1,1,1)
S ^MAG(2005.87,"C",$E(X,1,30),DA)=""
"^DD",2005.87,2005.87,20,1,1,2)
K ^MAG(2005.87,"C",$E(X,1,30),DA)
"^DD",2005.87,2005.87,20,1,1,"%D",0)
^^1^1^3030608^
"^DD",2005.87,2005.87,20,1,1,"%D",1,0)
Cross reference for filters for a specific user.
"^DD",2005.87,2005.87,20,1,1,"DT")
3030608
"^DD",2005.87,2005.87,20,3)
Enter the User of the Filter
"^DD",2005.87,2005.87,20,21,0)
^.001^1^1^3030730^^
"^DD",2005.87,2005.87,20,21,1,0)
Users can have their own filters.  This field determines the user.
"^DD",2005.87,2005.87,20,"DT")
3030608
"^DD",2005.87,2005.87,21,0)
PUBLIC^S^1:PUBLIC;^1;2^Q
"^DD",2005.87,2005.87,21,1,0)
^.1
"^DD",2005.87,2005.87,21,1,1,0)
2005.87^D
"^DD",2005.87,2005.87,21,1,1,1)
S ^MAG(2005.87,"D",$E(X,1,30),DA)=""
"^DD",2005.87,2005.87,21,1,1,2)
K ^MAG(2005.87,"D",$E(X,1,30),DA)
"^DD",2005.87,2005.87,21,1,1,"%D",0)
^^1^1^3030608^
"^DD",2005.87,2005.87,21,1,1,"%D",1,0)
All public filters will be available for all users.
"^DD",2005.87,2005.87,21,1,1,"DT")
3030608
"^DD",2005.87,2005.87,21,3)
Public filters will be displayed on the Filter (File) menu for all users.
"^DD",2005.87,2005.87,21,21,0)
^.001^1^1^3030731^^^
"^DD",2005.87,2005.87,21,21,1,0)
If a filter is public, it will be displayed on the Filter (File) menu for all users.
"^DD",2005.87,2005.87,21,"DT")
3030608
"^DD",2005.87,2005.87,22,0)
CREATED BY^P200'^VA(200,^1;3^Q
"^DD",2005.87,2005.87,22,3)
This is the person that created the filter.
"^DD",2005.87,2005.87,22,21,0)
^.001^2^2^3030731^^^
"^DD",2005.87,2005.87,22,21,1,0)
A function (future) of the Imaging Filter window will be that a user
"^DD",2005.87,2005.87,22,21,2,0)
will be able to create a Filter for another user.
"^DD",2005.87,2005.87,22,"DT")
3030608
"^DD",2006.1,2006.1,60,0)
NEW AUTOPURGE^S^0:OFF;1:ON;^5;1^Q
"^DD",2006.1,2006.1,60,3)
This value is used by the Background processor to determine whether to start a purge process when the Vista Cache low water mark has been reached.
"^DD",2006.1,2006.1,60,21,0)
^.001^2^2^3031205^^
"^DD",2006.1,2006.1,60,21,1,0)
This boolean value is used by the Background Processor to determine whether
"^DD",2006.1,2006.1,60,21,2,0)
to launch the purge when the Vista Cache low water mark has been reached.
"^DD",2006.1,2006.1,60,"DT")
3031205
"^DD",2006.1,2006.1,61,0)
CONTINUOUS PURGE^SX^0:OFF;1:ON;^5;2^S:X=1 $P(^MAG(2006.1,DA,5),U,3)=0
"^DD",2006.1,2006.1,61,3)
This value is used to determine whether the BP Queue processor should maintain a continuous Vista Cache purge process.
"^DD",2006.1,2006.1,61,21,0)
^^3^3^3031205^
"^DD",2006.1,2006.1,61,21,1,0)
This boolean value is used to determine whether the BP Queue processor should 
"^DD",2006.1,2006.1,61,21,2,0)
maintain a continuous purge process.  This process cannot be co-enabled with 
"^DD",2006.1,2006.1,61,21,3,0)
the scheduled purge process.
"^DD",2006.1,2006.1,61,"DT")
3031205
"^DD",2006.1,2006.1,62,0)
SCHEDULED PURGE^SX^0:OFF;1:ON;^5;3^S:X=1 $P(^MAG(2006.1,DA,5),U,2)=0
"^DD",2006.1,2006.1,62,3)
This value is used to determine whether the BP Queue Processor will trigger a purge process on a scheduled frequency.
"^DD",2006.1,2006.1,62,21,0)
^.001^6^6^3031205^^
"^DD",2006.1,2006.1,62,21,1,0)
This boolean value is used to determine whether the BP Queue Processor
"^DD",2006.1,2006.1,62,21,2,0)
will trigger a scheduled purge process.  This value cannot be co-enabled 
"^DD",2006.1,2006.1,62,21,3,0)
with the continuous purge process.  The frequency will be determined by
"^DD",2006.1,2006.1,62,21,4,0)
the frequency days and the date of the last purge. A default value of 28
"^DD",2006.1,2006.1,62,21,5,0)
days will be used if the frequency value is null.  A default vault of
"^DD",2006.1,2006.1,62,21,6,0)
2400 hour will be used if the Purge Time is not set.
"^DD",2006.1,2006.1,62,"DT")
3031205
"^DD",2006.1,2006.1,63,0)
SCHEDULED PURGE FREQUENCY^NJ3,0^^5;4^K:+X'=X!(X>365)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,63,3)
Type a Number between 1 and 365, 0 Decimal Digits
"^DD",2006.1,2006.1,63,21,0)
^^5^5^3031205^
"^DD",2006.1,2006.1,63,21,1,0)
When Scheduled Purge process is enabled this value will be added
"^DD",2006.1,2006.1,63,21,2,0)
to the date of the last purge for the BP Queue processor to
"^DD",2006.1,2006.1,63,21,3,0)
evaluate for launching a purge process.  If the Schedule 
"^DD",2006.1,2006.1,63,21,4,0)
Purge process is enabled and this value is not set, then the
"^DD",2006.1,2006.1,63,21,5,0)
default value of 28 days will be used.
"^DD",2006.1,2006.1,63,"DT")
3031205
"^DD",2006.1,2006.1,64,0)
SCHEDULED PURGE TIME^NJ4,0X^^5;5^K:+X'=X!(X>2400)!(X<0)!(X?.E1"."1N.N)!($L(X)<4)!($E(X,3,4)>60) X
"^DD",2006.1,2006.1,64,3)
Type a Number between 0000 and 2400, 0 Decimal Digits
"^DD",2006.1,2006.1,64,21,0)
^^5^5^3031205^
"^DD",2006.1,2006.1,64,21,1,0)
This military time value is used to determine what time of day the scheduled
"^DD",2006.1,2006.1,64,21,2,0)
purge will be triggered.  A default value of 2400 will be used by the 
"^DD",2006.1,2006.1,64,21,3,0)
BP Queue Processor if the Scheduled Purge option is enabled and the 
"^DD",2006.1,2006.1,64,21,4,0)
frequency days plus date of last purge threshold has been reached and this
"^DD",2006.1,2006.1,64,21,5,0)
value is undefined.
"^DD",2006.1,2006.1,64,"DT")
3031205
"^DD",2006.1,2006.1,65,0)
DATE OF LAST PURGE^D^^5;6^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,65,3)
This date is automatically set by the purge process when that process has successfully completed.
"^DD",2006.1,2006.1,65,21,0)
^^2^2^3031205^
"^DD",2006.1,2006.1,65,21,1,0)
This date is set by the BP Purge process.  It is used in conjunction with
"^DD",2006.1,2006.1,65,21,2,0)
the Scheduled purge process to automated the purge process execution.
"^DD",2006.1,2006.1,65,"DT")
3031205
"^DD",2006.1,2006.1,70,0)
CT PRESETS^F^^CT;1^K:$L(X)>245!($L(X)<3) X
"^DD",2006.1,2006.1,70,3)
These are used by the Imaging Display Radiology Viewer
"^DD",2006.1,2006.1,70,21,0)
^^5^5^3040407^
"^DD",2006.1,2006.1,70,21,1,0)
 A Series of CT Presets delimited by '~'.  Defined at the site.
"^DD",2006.1,2006.1,70,21,2,0)
 These are used by the Imaging Display Radiology Viewer.
"^DD",2006.1,2006.1,70,21,3,0)
 They are presented to the user on the CT Presets Menu Option.
"^DD",2006.1,2006.1,70,21,4,0)
 example of two :
"^DD",2006.1,2006.1,70,21,5,0)
 Abdomen|350|1041~Bone|500|1274
"^DD",2006.1,2006.1,70,"DT")
3040407
"^DD",2006.18,2006.18,137,0)
ABS COLS^NJ4,0^^ABS;10^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,137,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,137,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,137,21,1,0)
This field contains the number of columns in the Abstract window.
"^DD",2006.18,2006.18,137,"DT")
3020724
"^DD",2006.18,2006.18,138,0)
ABS MAXLOAD^NJ4,0^^ABS;11^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,138,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,138,21,0)
^.001^1^1^3021010^^^
"^DD",2006.18,2006.18,138,21,1,0)
This field contains the maximum number of abstracts to load in the Abstract window. 
"^DD",2006.18,2006.18,138,"DT")
3020724
"^DD",2006.18,2006.18,140,0)
FULL COLS^NJ4,0^^FULL;10^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,140,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,140,21,0)
^.001^1^1^3021010^^^
"^DD",2006.18,2006.18,140,21,1,0)
This field contains the number of columns in the Full Resolution window. 
"^DD",2006.18,2006.18,140,"DT")
3020724
"^DD",2006.18,2006.18,141,0)
FULL MAXLOAD^NJ4,0^^FULL;11^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,141,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,141,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,141,21,1,0)
This field contains the maximum number of images to load in the Full Resolution window.
"^DD",2006.18,2006.18,141,"DT")
3020724
"^DD",2006.18,2006.18,143,0)
DOC COLS^NJ4,0^^DOC;10^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,143,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,143,21,0)
^.001^1^1^3021010^^
"^DD",2006.18,2006.18,143,21,1,0)
This field contains the number of columns in the Document window.
"^DD",2006.18,2006.18,143,"DT")
3020724
"^DD",2006.18,2006.18,144,0)
DOC MAXLOAD^NJ4,0^^DOC;11^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,144,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,144,21,0)
^.001^1^1^3021010^^^
"^DD",2006.18,2006.18,144,21,1,0)
This field contains the maximum number of images to load in the Document window.
"^DD",2006.18,2006.18,144,"DT")
3020724
"^DD",2006.18,2006.18,146,0)
GRP COLS^NJ4,0^^GROUP;10^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,146,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,146,21,0)
^.001^1^1^3021010^^
"^DD",2006.18,2006.18,146,21,1,0)
This field contains the number of columns in the Group window.
"^DD",2006.18,2006.18,146,"DT")
3020724
"^DD",2006.18,2006.18,147,0)
GRP MAXLOAD^NJ4,0^^GROUP;11^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,147,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,147,21,0)
^.001^1^1^3021010^^^
"^DD",2006.18,2006.18,147,21,1,0)
This field contains the maximum number of images to load in the Group Abstract window.
"^DD",2006.18,2006.18,147,"DT")
3020724
"^DD",2006.18,2006.18,148,0)
ABS TOOLBAR^NJ2,0^^ABS;9^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,148,3)
Type '0' to hide or '1' to display the toolbar on the Abstract window.
"^DD",2006.18,2006.18,148,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,148,21,1,0)
Show or Hide the toolbar on the Abstract window.
"^DD",2006.18,2006.18,148,"DT")
3020724
"^DD",2006.18,2006.18,149,0)
FULL TOOLBAR^NJ2,0^^FULL;9^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,149,3)
Type '0' to hide or '1' to display the toolbar on the Full Resolution window.
"^DD",2006.18,2006.18,149,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,149,21,1,0)
Show or Hide the toolbar on the Full Resolution window.
"^DD",2006.18,2006.18,149,"DT")
3020724
"^DD",2006.18,2006.18,150,0)
DOC TOOLBAR^NJ2,0^^DOC;9^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,150,3)
Type '0' to hide or '1' to display the toolbar on the Document window.
"^DD",2006.18,2006.18,150,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,150,21,1,0)
Show or Hide the toolbar on the Document window.
"^DD",2006.18,2006.18,150,"DT")
3020724
"^DD",2006.18,2006.18,151,0)
GRP TOOLBAR^NJ2,0^^GROUP;9^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,151,3)
Type '0' to hide or '1' to display the toolbar on the Group Abstract window.
"^DD",2006.18,2006.18,151,21,0)
^.001^1^1^3021010^^^
"^DD",2006.18,2006.18,151,21,1,0)
Show or Hide the toolbar on the Group Abstract window.
"^DD",2006.18,2006.18,151,"DT")
3020724
"^DD",2006.18,2006.18,152,0)
ABS ROWS^NJ4,0^^ABS;12^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,152,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,152,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,152,21,1,0)
This field contains the number of rows of images to display in the Abstract window.
"^DD",2006.18,2006.18,152,"DT")
3020724
"^DD",2006.18,2006.18,153,0)
FULL ROWS^NJ4,0^^FULL;12^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,153,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,153,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,153,21,1,0)
 This field contains the number of rows of images to display in the Full Resolution window.
"^DD",2006.18,2006.18,153,"DT")
3020724
"^DD",2006.18,2006.18,154,0)
DOC ROWS^NJ4,0^^DOC;12^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,154,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,154,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,154,21,1,0)
This field contains the number of rows of images to display in the Document window.
"^DD",2006.18,2006.18,154,"DT")
3020724
"^DD",2006.18,2006.18,155,0)
GRP ROWS^NJ4,0^^GROUP;12^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,155,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,155,21,0)
^.001^1^1^3021010^^^^
"^DD",2006.18,2006.18,155,21,1,0)
This field contains the number of rows of images in the Group Abstract window.
"^DD",2006.18,2006.18,155,"DT")
3020724
"^DD",2006.18,2006.18,156,0)
ABS LOCKSIZE^NJ2,0^^ABS;13^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,156,3)
Type a Number between 0 and 10, 0 Decimal Digits
"^DD",2006.18,2006.18,156,21,0)
^.001^2^2^3021010^^
"^DD",2006.18,2006.18,156,21,1,0)
Lock the size of the image when resizing the window. 
"^DD",2006.18,2006.18,156,21,2,0)
User will see more images, not bigger images.
"^DD",2006.18,2006.18,156,"DT")
3020724
"^DD",2006.18,2006.18,157,0)
FULL LOCKSIZE^NJ2,0^^FULL;13^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,157,3)
Type a Number between 0 and 10, 0 Decimal Digits
"^DD",2006.18,2006.18,157,21,0)
^^2^2^3020724^
"^DD",2006.18,2006.18,157,21,1,0)
Lock the size of the image when resizing the window.
"^DD",2006.18,2006.18,157,21,2,0)
User will see more images, not bigger images
"^DD",2006.18,2006.18,157,"DT")
3020724
"^DD",2006.18,2006.18,158,0)
DOC LOCKSIZE^NJ2,0^^DOC;13^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,158,3)
Type a Number between 0 and 10, 0 Decimal Digits
"^DD",2006.18,2006.18,158,21,0)
^^2^2^3020724^
"^DD",2006.18,2006.18,158,21,1,0)
Lock the size of the image when resizing the window.
"^DD",2006.18,2006.18,158,21,2,0)
User will see more images, not bigger images
"^DD",2006.18,2006.18,158,"DT")
3020724
"^DD",2006.18,2006.18,159,0)
GRP LOCKSIZE^NJ2,0^^GROUP;13^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,159,3)
Type a Number between 0 and 10, 0 Decimal Digits
"^DD",2006.18,2006.18,159,21,0)
^^2^2^3020724^
"^DD",2006.18,2006.18,159,21,1,0)
Lock the size of the image when resizing the window.
"^DD",2006.18,2006.18,159,21,2,0)
User will see more images, not bigger images
"^DD",2006.18,2006.18,159,"DT")
3020724
"^DD",2006.18,2006.18,163,0)
COLUMN WIDTHS^F^^IMAGEGRID;7^K:$L(X)>60!($L(X)<3) X
"^DD",2006.18,2006.18,163,3)
Answer must be 3-60 characters in length.
"^DD",2006.18,2006.18,163,21,0)
^^3^3^3020812^
"^DD",2006.18,2006.18,163,21,1,0)
This is a Comma delimited string of widths of the columns 
"^DD",2006.18,2006.18,163,21,2,0)
in the image list window.  
"^DD",2006.18,2006.18,163,21,3,0)
$p(columnwidths,',',1)= width of column 1 etc.
"^DD",2006.18,2006.18,163,"DT")
3020812
"^DD",2006.18,2006.18,164,0)
FULL IMAGE WIDTH^NJ4,0^^FULL;6^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,164,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,164,21,0)
^^1^1^3020819^
"^DD",2006.18,2006.18,164,21,1,0)
This is the Width of the Images in the Full Resolution window
"^DD",2006.18,2006.18,164,"DT")
3020819
"^DD",2006.18,2006.18,165,0)
FULL IMAGE HEIGHT^NJ4,0^^FULL;7^K:+X'=X!(X>1000)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,165,3)
Type a Number between 1 and 1000, 0 Decimal Digits
"^DD",2006.18,2006.18,165,21,0)
^^1^1^3020819^
"^DD",2006.18,2006.18,165,21,1,0)
This is the Height of the Images in the Full Resolution window.
"^DD",2006.18,2006.18,165,"DT")
3020819
"^DD",2006.18,2006.18,174,0)
VIEW REMOTE ABS^S^1:TRUE;0:FALSE;^0;8^Q
"^DD",2006.18,2006.18,174,3)
If true, Imaging display will display abstracts located on remote servers. If flase, only abstracts on local servers will be displayed.
"^DD",2006.18,2006.18,174,21,0)
^.001^6^6^3021105^^^
"^DD",2006.18,2006.18,174,21,1,0)
If True, Imaging display will always display abstracts
"^DD",2006.18,2006.18,174,21,2,0)
 even if they are located on remote servers
"^DD",2006.18,2006.18,174,21,3,0)
If False, Imaging display will only display abstracts
"^DD",2006.18,2006.18,174,21,4,0)
 if they are on local servers.
"^DD",2006.18,2006.18,174,21,5,0)
In a Consolidated Site, 'Local Site' is where the User logs into
"^DD",2006.18,2006.18,174,21,6,0)
All others are considered 'Remote Sites'.
"^DD",2006.18,2006.18,174,"DT")
3021105
"^DD",2006.18,2006.18,175,0)
ABS PREVIEW^S^1:YES;0:NO;^LISTWIN1;1^Q
"^DD",2006.18,2006.18,175,3)
Set to yes if user wants to preview the abstract in the Image List window.
"^DD",2006.18,2006.18,175,21,0)
^^2^2^3030930^
"^DD",2006.18,2006.18,175,21,1,0)
if Yes, the Image Abstract will be displayed when the user selects an 
"^DD",2006.18,2006.18,175,21,2,0)
an entry from the Image List.
"^DD",2006.18,2006.18,175,"DT")
3030930
"^DD",2006.18,2006.18,176,0)
REPORT PREVIEW^S^1:YES;0:NO;^LISTWIN1;2^Q
"^DD",2006.18,2006.18,176,3)
Set to yes if user wants to preview the report in the image list window
"^DD",2006.18,2006.18,176,21,0)
^^2^2^3030930^
"^DD",2006.18,2006.18,176,21,1,0)
if Yes, the Image Report will be displayed when the user selects an
"^DD",2006.18,2006.18,176,21,2,0)
an entry from the Image List.
"^DD",2006.18,2006.18,176,"DT")
3030930
"^DD",2006.18,2006.18,177,0)
FILTER DEFAULT^P2005.87'^MAG(2005.87,^LISTWIN1;3^Q
"^DD",2006.18,2006.18,177,3)
Enter the default filter for the User.
"^DD",2006.18,2006.18,177,21,0)
^.001^2^2^3030930^^^
"^DD",2006.18,2006.18,177,21,1,0)
Pointer to the Image List filter file.
"^DD",2006.18,2006.18,177,21,2,0)
This is the users default Image Filter.
"^DD",2006.18,2006.18,177,"DT")
3030930
"^DD",2006.18,2006.18,178,0)
FILTER TABS^S^1:YES;0:NO;^LISTWIN1;4^Q
"^DD",2006.18,2006.18,178,3)
Select yes to display the filters as Tabs across the top of the image list window.
"^DD",2006.18,2006.18,178,21,0)
^^3^3^3030930^
"^DD",2006.18,2006.18,178,21,1,0)
If set to YES (1), the list of filters will be displayed across
"^DD",2006.18,2006.18,178,21,2,0)
the top of image list window as Tabs.
"^DD",2006.18,2006.18,178,21,3,0)
This will allow quick access to different filters, and subsets of images.
"^DD",2006.18,2006.18,178,"DT")
3030930
"^DD",2006.18,2006.18,179,0)
FILTER TABS MULTILINE^S^1:YES;0:NO;^LISTWIN1;5^Q
"^DD",2006.18,2006.18,179,3)
Enter yes to display the filter tabs as multi-line tabs.
"^DD",2006.18,2006.18,179,21,0)
^^7^7^3030930^
"^DD",2006.18,2006.18,179,21,1,0)
If YES (1) then filters will be displayed as multi-line tabs when there
"^DD",2006.18,2006.18,179,21,2,0)
are too many to fit in one line.  This will allow all filters to be visible
"^DD",2006.18,2006.18,179,21,3,0)
when the window is resized, or there are too many to fit in one line.
"^DD",2006.18,2006.18,179,21,4,0)
If NO (0) and too many filters exist to display in one line, then scroll
"^DD",2006.18,2006.18,179,21,5,0)
buttons will be displayed to the right of the last visible filter.  The 
"^DD",2006.18,2006.18,179,21,6,0)
user can use the scroll buttons to access any filters (tabs) that aren't
"^DD",2006.18,2006.18,179,21,7,0)
visible.
"^DD",2006.18,2006.18,179,"DT")
3030930
"^DD",2006.8,2006.8,16,0)
IMPORT^SX^0:NO;1:YES;^0;17^S DIC("S")="I $$BPPS^MAGQBUT1(X,DA,""IMPORT"")" S:'$$BPPS^MAGQBUT1(X,DA,"IMPORT") $P(^MAG(2006.8,DA,0),U,17)="0"
"^DD",2006.8,2006.8,16,3)
Only one Background Processor may be assigned this ask at a time.  Retire the IMPORT assignment from its current assignee then reassign.
"^DD",2006.8,2006.8,16,12.1)
S DIC("S")="I $$BPPS^MAGQBUT1(X,DA,""IMPORT"")"
"^DD",2006.8,2006.8,16,21,0)
^^2^2^2970722^^^^
"^DD",2006.8,2006.8,16,21,1,0)
This field indicates that this BACKGROUND PROCESSOR is to copy
"^DD",2006.8,2006.8,16,21,2,0)
files to the IMPORT
"^DD",2006.8,2006.8,16,"DT")
3010405
"^DD",2006.8,2006.8,17,0)
GCC^*SX^0:NO;1:YES;^0;18^S DIC("S")="I $$BPPS^MAGQBUT1(X,DA,""GCC"")" S:'$$BPPS^MAGQBUT1(X,DA,"GCC") $P(^MAG(2006.8,DA,0),U,18)="0"
"^DD",2006.8,2006.8,17,12.1)
S DIC("S")="I $$BPPS^MAGQBUT1(X,DA,""GCC"")"
"^DD",2006.8,2006.8,17,21,0)
^^1^1^3011213^
"^DD",2006.8,2006.8,17,21,1,0)
Indicate that this BACKGROUND PROCESSOR is to process Generic Carbon Copies.
"^DD",2006.8,2006.8,17,"DT")
3011129
"^DD",2006.81,2006.81,.04,0)
PLACE^P2006.1'^MAG(2006.1,^1;2^Q
"^DD",2006.81,2006.81,.04,1,0)
^.1
"^DD",2006.81,2006.81,.04,1,1,0)
2006.81^C
"^DD",2006.81,2006.81,.04,1,1,1)
S ^MAG(2006.81,"C",$E(X,1,30),DA)=""
"^DD",2006.81,2006.81,.04,1,1,2)
K ^MAG(2006.81,"C",$E(X,1,30),DA)
"^DD",2006.81,2006.81,.04,1,1,"%D",0)
^^1^1^3030514^
"^DD",2006.81,2006.81,.04,1,1,"%D",1,0)
This allows the workstations to be distinguishable between sites.
"^DD",2006.81,2006.81,.04,1,1,"DT")
3030514
"^DD",2006.81,2006.81,.04,21,0)
^^3^3^3021104^
"^DD",2006.81,2006.81,.04,21,1,0)
Pointer to Imaging Site Parameters.  This tells us which division, the
"^DD",2006.81,2006.81,.04,21,2,0)
workstation was logged on to, in a consolidated site, this is used for
"^DD",2006.81,2006.81,.04,21,3,0)
Statistics.
"^DD",2006.81,2006.81,.04,"DT")
3030514
"^DD",2006.82,2006.82,.04,0)
PLACE^P2006.1'^MAG(2006.1,^1;4^Q
"^DD",2006.82,2006.82,.04,3)
Select the Imaging Site Parameter entry where this image was captured.
"^DD",2006.82,2006.82,.04,21,0)
^.001^3^3^3021107^^
"^DD",2006.82,2006.82,.04,21,1,0)
This is the Site parameter entry where this imaging session took place.
"^DD",2006.82,2006.82,.04,21,2,0)
In a consolidated site, the 'Place' determines which Network storage
"^DD",2006.82,2006.82,.04,21,3,0)
device to use when saving and retrieving images.
"^DD",2006.82,2006.82,.04,"DT")
3021104
"^DD",2006.82,2006.82,8,0)
TRACKING ID^F^^0;9^K:$L(X)>40!($L(X)<3) X
"^DD",2006.82,2006.82,8,1,0)
^.1
"^DD",2006.82,2006.82,8,1,1,0)
2006.82^E
"^DD",2006.82,2006.82,8,1,1,1)
S ^MAG(2006.82,"E",$E(X,1,30),DA)=""
"^DD",2006.82,2006.82,8,1,1,2)
K ^MAG(2006.82,"E",$E(X,1,30),DA)
"^DD",2006.82,2006.82,8,1,1,"%D",0)
^^1^1^3020506^
"^DD",2006.82,2006.82,8,1,1,"%D",1,0)
Tracking ID associated with the Import.
"^DD",2006.82,2006.82,8,1,1,"DT")
3020506
"^DD",2006.82,2006.82,8,3)
Answer must be 3-40 characters in length.
"^DD",2006.82,2006.82,8,21,0)
^^2^2^3020506^
"^DD",2006.82,2006.82,8,21,1,0)
This is the tracking id sent by the Application doing the Import
"^DD",2006.82,2006.82,8,21,2,0)
It is a unique number, to be used for tracking purposes.
"^DD",2006.82,2006.82,8,"DT")
3020506
"^DD",2006.82,2006.82,9,0)
CLIENT VERSION^F^^0;10^K:$L(X)>20!($L(X)<3) X
"^DD",2006.82,2006.82,9,3)
Answer must be 3-20 characters in length.
"^DD",2006.82,2006.82,9,21,0)
^^1^1^3021029^
"^DD",2006.82,2006.82,9,21,1,0)
This is the version of the Client application.
"^DD",2006.82,2006.82,9,"DT")
3021029
"^DD",2006.82,2006.82,9.2,0)
HOST VERSION^F^^0;11^K:$L(X)>20!($L(X)<2) X
"^DD",2006.82,2006.82,9.2,3)
Answer must be 2-20 characters in length.
"^DD",2006.82,2006.82,9.2,21,0)
^^1^1^3021029^
"^DD",2006.82,2006.82,9.2,21,1,0)
This is the Version of Imaging installed on the Host.
"^DD",2006.82,2006.82,9.2,"DT")
3021029
"^DD",2006.82,2006.82,9.4,0)
OS VERSION^F^^0;12^K:$L(X)>20!($L(X)<3) X
"^DD",2006.82,2006.82,9.4,3)
Answer must be 3-20 characters in length.
"^DD",2006.82,2006.82,9.4,21,0)
^^2^2^3021029^
"^DD",2006.82,2006.82,9.4,21,1,0)
This is the Operating System Version installed 
"^DD",2006.82,2006.82,9.4,21,2,0)
on the Workstation.
"^DD",2006.82,2006.82,9.4,"DT")
3021029
"^DD",2006.82,2006.82,20,0)
ACTIONS^2006.821A^^ACT;0
"^DD",2006.82,2006.82,20,21,0)
^.001^3^3^3021120^^^^
"^DD",2006.82,2006.82,20,21,1,0)
Certain actions are tracked in abbreviated form.
"^DD",2006.82,2006.82,20,21,2,0)
Patient selection, Image Capture, Image selection, Errors, Logon and Logoff.
"^DD",2006.82,2006.82,20,21,3,0)
This is mainly for debugging purposes.
"^DD",2006.82,2006.82,20,23,0)
^.001^9^9^3021120^^^^
"^DD",2006.82,2006.82,20,23,1,0)
The information in this 'ACTION' multiple can be viewed by using the 
"^DD",2006.82,2006.82,20,23,2,0)
MAGSYS.EXE utility program.  This is mainly used for debugging information.
"^DD",2006.82,2006.82,20,23,3,0)
//
"^DD",2006.82,2006.82,20,23,4,0)
(an example of the display)
"^DD",2006.82,2006.82,20,23,5,0)
LOGON^^^^3001010.1213
"^DD",2006.82,2006.82,20,23,6,0)
PAT^99999^^^3001010.1213
"^DD",2006.82,2006.82,20,23,7,0)
IMG^99999^12345^Anatomic Diagram^3001010.1214
"^DD",2006.82,2006.82,20,23,8,0)
ERROR^99999^12345^description of error^3001010.1214
"^DD",2006.82,2006.82,20,23,9,0)
LOGOFF^^^^3001010.1215
"^DD",2006.82,2006.821,0)
ACTIONS SUB-FIELD^^13^14
"^DD",2006.82,2006.821,0,"NM","ACTIONS")

"^DD",2006.82,2006.821,.01,0)
ACTION^F^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",2006.82,2006.821,.01,1,0)
^.1^^0
"^DD",2006.82,2006.821,.01,3)
Answer must be 1-30 characters in length.
"^DD",2006.82,2006.821,.01,21,0)
^.001^9^9^3021108^^^^
"^DD",2006.82,2006.821,.01,21,1,0)
The Action field is an abbreviated form of the actual information.  The 
"^DD",2006.82,2006.821,.01,21,2,0)
information in the field can be used for debugging purposes.
"^DD",2006.82,2006.821,.01,21,3,0)
The information contains the Action, DFN, MAGIEN, Desc, Date/Time
"^DD",2006.82,2006.821,.01,21,4,0)
Possible actions are :
"^DD",2006.82,2006.821,.01,21,5,0)
   LOGON,PAT (patient selected), IMG (image viewed),
"^DD",2006.82,2006.821,.01,21,6,0)
   CAP (image captured), MOD (image data modified), ERROR ('M' error occurred)
"^DD",2006.82,2006.821,.01,21,7,0)
   and LOGOFF.
"^DD",2006.82,2006.821,.01,21,8,0)

"^DD",2006.82,2006.821,.01,21,9,0)
  IMPORT, Data, Result, and WSCheck are additional actions.
"^DD",2006.82,2006.821,.01,"DT")
2980827
"^DD",2006.82,2006.821,1,0)
DFN^F^^0;2^K:$L(X)>11!($L(X)<1) X
"^DD",2006.82,2006.821,1,3)
Answer must be 1-11 characters in length
"^DD",2006.82,2006.821,1,21,0)
^^2^2^3021108^
"^DD",2006.82,2006.821,1,21,1,0)
This is the internal entry number that relates the Imaging action to 
"^DD",2006.82,2006.821,1,21,2,0)
the Vista Patient file.
"^DD",2006.82,2006.821,1,"DT")
3021023
"^DD",2006.82,2006.821,2,0)
Image IEN^F^^0;3^K:$L(X)>11!($L(X)<1) X
"^DD",2006.82,2006.821,2,3)
Answer must be 1-11 characters in length
"^DD",2006.82,2006.821,2,21,0)
^^2^2^3021108^
"^DD",2006.82,2006.821,2,21,1,0)
This is the internal entry number of the Vista Image file (#2005) that
"^DD",2006.82,2006.821,2,21,2,0)
relates the ACTION activity to the Image.
"^DD",2006.82,2006.821,2,"DT")
3021023
"^DD",2006.82,2006.821,3,0)
Procedure^F^^0;4^K:$L(X)>64!($L(X)<1) X
"^DD",2006.82,2006.821,3,3)
Answer must be 1-64 characters in length
"^DD",2006.82,2006.821,3,21,0)
^^2^2^3021108^
"^DD",2006.82,2006.821,3,21,1,0)
This is the Imaging application or modality that resulted in this
"^DD",2006.82,2006.821,3,21,2,0)
session action.
"^DD",2006.82,2006.821,3,"DT")
3021023
"^DD",2006.82,2006.821,4,0)
TIMESTAMP^F^^0;5^K:$L(X)>26!($L(X)<1) X
"^DD",2006.82,2006.821,4,3)
Answer must be 1-26 characters in length
"^DD",2006.82,2006.821,4,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,4,21,1,0)
This is the time and date that this action event occurred.
"^DD",2006.82,2006.821,4,"DT")
3021023
"^DD",2006.82,2006.821,5,0)
V-RAD IMAGES^F^^0;6^K:$L(X)>9!($L(X)<1) X
"^DD",2006.82,2006.821,5,3)
Answer must be 1-9 characters in length
"^DD",2006.82,2006.821,5,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,5,21,1,0)
This is the number of images associated with this VistaRad action.
"^DD",2006.82,2006.821,5,"DT")
3021023
"^DD",2006.82,2006.821,6,0)
V-RAD PATIENTS^F^^0;7^K:$L(X)>9!($L(X)<1) X
"^DD",2006.82,2006.821,6,3)
Answer must be 1-9 characters in length
"^DD",2006.82,2006.821,6,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,6,21,1,0)
This is the number of patients associated with this VistaRad action.
"^DD",2006.82,2006.821,6,"DT")
3021023
"^DD",2006.82,2006.821,7,0)
V-RAD USER TYPE^F^^0;8^K:$L(X)>18!($L(X)<1) X
"^DD",2006.82,2006.821,7,3)
Answer must be 1-18 characters in length
"^DD",2006.82,2006.821,7,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,7,21,1,0)
This is the VistaRad user type associated with this action.
"^DD",2006.82,2006.821,7,"DT")
3021023
"^DD",2006.82,2006.821,8,0)
V-RAD REMOTE READ FLAG^S^1:Yes;0:No;^0;9^Q
"^DD",2006.82,2006.821,8,3)
Null is the default for local V-Rad user.
"^DD",2006.82,2006.821,8,21,0)
^.001^2^2^3021120^^
"^DD",2006.82,2006.821,8,21,1,0)
This is the flag that specifies whether this VistaRad action occurred
"^DD",2006.82,2006.821,8,21,2,0)
locally or remotely.
"^DD",2006.82,2006.821,8,"DT")
3021023
"^DD",2006.82,2006.821,9,0)
RESOLUTION HEIGHT^F^^0;10^K:$L(X)>11!($L(X)<1) X
"^DD",2006.82,2006.821,9,3)
Answer must be 1-11 characters in length
"^DD",2006.82,2006.821,9,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,9,21,1,0)
This is the monitor resolution height settings at the action event.
"^DD",2006.82,2006.821,9,"DT")
3021023
"^DD",2006.82,2006.821,10,0)
RESOLUTION WIDTH^F^^0;11^K:$L(X)>11!($L(X)<1) X
"^DD",2006.82,2006.821,10,3)
Answer must be 1-11 characters in length
"^DD",2006.82,2006.821,10,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,10,21,1,0)
This is the monitor resolution width at the action event.
"^DD",2006.82,2006.821,10,"DT")
3021023
"^DD",2006.82,2006.821,11,0)
RESOLUTION BITS^F^^0;12^K:$L(X)>4!($L(X)<1) X
"^DD",2006.82,2006.821,11,3)
Answer must be 1-4 characters in length
"^DD",2006.82,2006.821,11,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,11,21,1,0)
This is the monitor resolution bit settings at the action event.
"^DD",2006.82,2006.821,11,"DT")
3021023
"^DD",2006.82,2006.821,12,0)
DISPLAY TYPE^S^CL:Clinical Quality;ND:Non-Dome;VR:VistaRad Quality;TC:Thin Client;^0;13^Q
"^DD",2006.82,2006.821,12,3)
CL (Default) is Clinical Quality, ND is VistaRAD non-dome, etc... 
"^DD",2006.82,2006.821,12,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,12,21,1,0)
This field defines the monitor settings resolution quality at the action event.
"^DD",2006.82,2006.821,12,"DT")
3021023
"^DD",2006.82,2006.821,13,0)
ACTION PARAMETER^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",2006.82,2006.821,13,3)
Answer must be 1-250 characters in length
"^DD",2006.82,2006.821,13,21,0)
^^1^1^3021108^
"^DD",2006.82,2006.821,13,21,1,0)
This is the data parameters used for Data and Result action events.
"^DD",2006.82,2006.821,13,"DT")
3021023
"^DD",2006.95,2006.95,9,0)
SESSION^NJ14,0^^0;10^K:+X'=X!(X>99999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.95,2006.95,9,1,0)
^.1
"^DD",2006.95,2006.95,9,1,1,0)
2006.95^AS
"^DD",2006.95,2006.95,9,1,1,1)
S ^MAG(2006.95,"AS",$E(X,1,30),DA)=""
"^DD",2006.95,2006.95,9,1,1,2)
K ^MAG(2006.95,"AS",$E(X,1,30),DA)
"^DD",2006.95,2006.95,9,1,1,"%D",0)
^^1^1^3020723^
"^DD",2006.95,2006.95,9,1,1,"%D",1,0)
Cross reference to group actions together by session.
"^DD",2006.95,2006.95,9,1,1,"DT")
3020723
"^DD",2006.95,2006.95,9,3)
This is the Imaging Session that initiated the action.
"^DD",2006.95,2006.95,9,21,0)
^^1^1^3020723^
"^DD",2006.95,2006.95,9,21,1,0)
This is the IEN of the Imaging Windows Session file.
"^DD",2006.95,2006.95,9,"DT")
3020723
"^DIC",2005.021,2005.021,0)
IMAGE FILE TYPES^2005.021
"^DIC",2005.021,2005.021,0,"GL")
^MAG(2005.021,
"^DIC",2005.021,2005.021,"%",0)
^1.005^^0
"^DIC",2005.021,2005.021,"%D",0)
^1.001^21^21^3030620^^
"^DIC",2005.021,2005.021,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.021,2005.021,"%D",2,0)
 |                                                               |
"^DIC",2005.021,2005.021,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.021,2005.021,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.021,2005.021,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.021,2005.021,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.021,2005.021,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.021,2005.021,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.021,2005.021,"%D",9,0)
 |                                                               |
"^DIC",2005.021,2005.021,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.021,2005.021,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.021,2005.021,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.021,2005.021,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.021,2005.021,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.021,2005.021,"%D",15,0)
 |                                                               |
"^DIC",2005.021,2005.021,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.021,2005.021,"%D",17,0)
 
"^DIC",2005.021,2005.021,"%D",18,0)
This file contains all the image filename extensions supported by 
"^DIC",2005.021,2005.021,"%D",19,0)
Imaging and specific characteristics for the filename extensions. 
"^DIC",2005.021,2005.021,"%D",20,0)
This is a static file only updated by newer versions of the Imaging 
"^DIC",2005.021,2005.021,"%D",21,0)
application. 
"^DIC",2005.021,"B","IMAGE FILE TYPES",2005.021)

"^DIC",2005.86,2005.86,0)
IMAGE ACTIONS^2005.86
"^DIC",2005.86,2005.86,0,"GL")
^MAG(2005.86,
"^DIC",2005.86,2005.86,"%",0)
^1.005^^0
"^DIC",2005.86,2005.86,"%D",0)
^^26^26^3020827^
"^DIC",2005.86,2005.86,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.86,2005.86,"%D",2,0)
 |                                                               |
"^DIC",2005.86,2005.86,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.86,2005.86,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.86,2005.86,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.86,2005.86,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.86,2005.86,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.86,2005.86,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.86,2005.86,"%D",9,0)
 |                                                               |
"^DIC",2005.86,2005.86,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.86,2005.86,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.86,2005.86,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.86,2005.86,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.86,2005.86,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.86,2005.86,"%D",15,0)
 |                                                               |
"^DIC",2005.86,2005.86,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.86,2005.86,"%D",17,0)
 
"^DIC",2005.86,2005.86,"%D",18,0)
This file is populated with post processing actions for each image type.  
"^DIC",2005.86,2005.86,"%D",19,0)
The file has a multiple 'TYPE' field that points to the file IMAGE INDEX 
"^DIC",2005.86,2005.86,"%D",20,0)
FOR TYPES which allows the possibility of multiplempost processing for
"^DIC",2005.86,2005.86,"%D",21,0)
each entry in this file.
"^DIC",2005.86,2005.86,"%D",22,0)
 
"^DIC",2005.86,2005.86,"%D",23,0)
When an Image is successfully captured an evaluation is done on the 
"^DIC",2005.86,2005.86,"%D",24,0)
image's TYPE property.  If the TYPE matches an entry's TYPE field value in
"^DIC",2005.86,2005.86,"%D",25,0)
this file and the entry is ACTIVE, then execution is passed to the routine
"^DIC",2005.86,2005.86,"%D",26,0)
identified in the fields: TAG and ROUTINE.
"^DIC",2005.86,"B","IMAGE ACTIONS",2005.86)

"^DIC",2005.87,2005.87,0)
IMAGE LIST FILTERS^2005.87
"^DIC",2005.87,2005.87,0,"GL")
^MAG(2005.87,
"^DIC",2005.87,2005.87,"%",0)
^1.005^^0
"^DIC",2005.87,2005.87,"%D",0)
^1.001^2^2^3030730^^^^
"^DIC",2005.87,2005.87,"%D",1,0)
This file holds Image Filters created by each user, and Created by an 
"^DIC",2005.87,2005.87,"%D",2,0)
Imaging system manager as public filters, to be available for all users.
"^DIC",2005.87,"B","IMAGE LIST FILTERS",2005.87)

**END**
**END**
