KIDS Distribution saved on Feb 01, 2008@12:23:14
VistA Imaging V 3 - Patch 59 - TIU Enhancements
**KIDS**:MAG*3.0*59^

**INSTALL NAME**
MAG*3.0*59
"BLD",5613,0)
MAG*3.0*59^IMAGING^0^3080201^y
"BLD",5613,1,0)
^9.61A^71^71^3071127^^^^
"BLD",5613,1,1,0)
This will check the routines from a BUILD file.
"BLD",5613,1,2,0)
Select BUILD NAME:    MAG*3.0*59     IMAGING
"BLD",5613,1,3,0)
MAGBAPIP  value = 9049823
"BLD",5613,1,4,0)
MAGGNLKP  value = 14546243
"BLD",5613,1,5,0)
MAGGNTI   value = 37673155
"BLD",5613,1,6,0)
MAGGNTI1  value = 44242412
"BLD",5613,1,7,0)
MAGGNTI2  value = 21199592
"BLD",5613,1,8,0)
MAGGNTI3  value = 11336428
"BLD",5613,1,9,0)
MAGGSIA   value = 37580788
"BLD",5613,1,10,0)
MAGGSIA1  value = 40441705
"BLD",5613,1,11,0)
MAGGSIU2  value = 19991293
"BLD",5613,1,12,0)
MAGGSIUI  value = 44173317
"BLD",5613,1,13,0)
MAGGSIV   value = 39311019
"BLD",5613,1,14,0)
MAGGSIV1  value = 22249629
"BLD",5613,1,15,0)
MAGGTAU   value = 53570032
"BLD",5613,1,16,0)
MAGGTERR  value = 6185941
"BLD",5613,1,17,0)
MAGGTIA1  value = 34754160
"BLD",5613,1,18,0)
MAGGTID   value = 44603396
"BLD",5613,1,19,0)
MAGGTII   value = 43921962
"BLD",5613,1,20,0)
MAGGTLB1  value = 24325063
"BLD",5613,1,21,0)
MAGGTMC1  value = 10841224
"BLD",5613,1,22,0)
MAGGTPT1  value = 32058249
"BLD",5613,1,23,0)
MAGGTRA   value = 11950621
"BLD",5613,1,24,0)
MAGGTSR   value = 18209701
"BLD",5613,1,25,0)
MAGGTSR1  value = 6582516
"BLD",5613,1,26,0)
MAGGTSY2  value = 5995567
"BLD",5613,1,27,0)
MAGGTSYS  value = 11307252
"BLD",5613,1,28,0)
MAGGTU1   value = 7410851
"BLD",5613,1,29,0)
MAGGTU3   value = 33146590
"BLD",5613,1,30,0)
MAGGTU31  value = 37368094
"BLD",5613,1,31,0)
MAGGTU4   value = 39449032
"BLD",5613,1,32,0)
MAGGTU41  value = 29145844
"BLD",5613,1,33,0)
MAGGTU6   value = 48411406
"BLD",5613,1,34,0)
MAGGTU71  value = 12408880
"BLD",5613,1,35,0)
MAGGTU9   value = 41693963
"BLD",5613,1,36,0)
MAGGTUP   value = 22068923
"BLD",5613,1,37,0)
MAGGTUX   value = 84671980
"BLD",5613,1,38,0)
MAGGTUX1  value = 47937341
"BLD",5613,1,39,0)
MAGGTUX2  value = 16893557
"BLD",5613,1,40,0)
MAGGTUX3  value = 20033133
"BLD",5613,1,41,0)
MAGIPS59  value = 30034575
"BLD",5613,1,42,0)
MAGLOG    value = 8166700
"BLD",5613,1,43,0)
MAGSIXG1  value = 48513335
"BLD",5613,1,44,0)
MAGSIXGT  value = 67629374
"BLD",5613,1,45,0)
done
"BLD",5613,1,46,0)
 
"BLD",5613,1,47,0)
TIU Enhancements patch.
"BLD",5613,1,48,0)
Adds functionality to Capture Application that will allow user to: 
"BLD",5613,1,49,0)
Create a New TIU Note
"BLD",5613,1,50,0)
Create an Addendum to an existing signed TIU Note.
"BLD",5613,1,51,0)
Set the status of the new note/addendum to
"BLD",5613,1,52,0)
 - unsigned
"BLD",5613,1,53,0)
 - administrative closure
"BLD",5613,1,54,0)
 - Signed.
"BLD",5613,1,55,0)
  
"BLD",5613,1,56,0)
Displays the Note Title from the TIU Document file (8925) in the
"BLD",5613,1,57,0)
  Image List Window of Imaging Display, this assures 
"BLD",5613,1,58,0)
display of the current Note title because Note Titles sometimes change.
"BLD",5613,1,59,0)
  
"BLD",5613,1,60,0)
Imaging Display
"BLD",5613,1,61,0)
 - Stops users that do not have an Imaging Display security from signing 
"BLD",5613,1,62,0)
on to Imaging Display. User needs either MAGDISP CLIN or
"BLD",5613,1,63,0)
MAGDISP ADMIN or both.
"BLD",5613,1,64,0)
  
"BLD",5613,1,65,0)
Imaging Capture
"BLD",5613,1,66,0)
Automatically generates Index Values for new Images that do not have 
"BLD",5613,1,67,0)
index values as input data.  This happens when Applications using the 
"BLD",5613,1,68,0)
Import API or Imaging Capture Client versions prior to version 3.0.8
"BLD",5613,1,69,0)
Index Term Fix:
"BLD",5613,1,70,0)
Iterate through the entire Image Global and Fix the Index Terms if
"BLD",5613,1,71,0)
Type Index is missing.
"BLD",5613,4,0)
^9.64PA^2006.18^5
"BLD",5613,4,2005,0)
2005
"BLD",5613,4,2005,2,0)
^9.641^2005^1
"BLD",5613,4,2005,2,2005,0)
IMAGE  (File-top level)
"BLD",5613,4,2005,2,2005,1,0)
^9.6411^110^3
"BLD",5613,4,2005,2,2005,1,30.1,0)
DELETED DATE
"BLD",5613,4,2005,2,2005,1,64,0)
PARENT ASSOCIATION DATE
"BLD",5613,4,2005,2,2005,1,110,0)
CREATION DATE
"BLD",5613,4,2005,222)
y^y^p^^^^n^^n
"BLD",5613,4,2005,224)

"BLD",5613,4,2005.021,0)
2005.021
"BLD",5613,4,2005.021,222)
y^y^f^^n^^y^o^n
"BLD",5613,4,2005.84,0)
2005.84
"BLD",5613,4,2005.84,2,0)
^9.641^2005.84^1
"BLD",5613,4,2005.84,2,2005.84,0)
IMAGE INDEX FOR SPECIALTY/SUBSPECIALTY  (File-top level)
"BLD",5613,4,2005.84,2,2005.84,1,0)
^9.6411^2^1
"BLD",5613,4,2005.84,2,2005.84,1,2,0)
SPEC LEVEL
"BLD",5613,4,2005.84,222)
y^y^p^^^^n^^n
"BLD",5613,4,2005.84,224)

"BLD",5613,4,2006.18,0)
2006.18
"BLD",5613,4,2006.18,2,0)
^9.641^2006.18^1
"BLD",5613,4,2006.18,2,2006.18,0)
IMAGING USER PREFERENCE  (File-top level)
"BLD",5613,4,2006.18,2,2006.18,1,0)
^9.6411^196^17
"BLD",5613,4,2006.18,2,2006.18,1,180,0)
TIU TOP
"BLD",5613,4,2006.18,2,2006.18,1,181,0)
TIU LEFT
"BLD",5613,4,2006.18,2,2006.18,1,182,0)
TIU HEIGHT
"BLD",5613,4,2006.18,2,2006.18,1,183,0)
TIU WIDTH
"BLD",5613,4,2006.18,2,2006.18,1,184,0)
TIU PREVIEW HEIGHT
"BLD",5613,4,2006.18,2,2006.18,1,185,0)
TIU TEXT HEIGHT
"BLD",5613,4,2006.18,2,2006.18,1,186,0)
TIU TITLE HEIGHT
"BLD",5613,4,2006.18,2,2006.18,1,187,0)
TIU PREVIEW ON
"BLD",5613,4,2006.18,2,2006.18,1,188,0)
TIU SHOW ADDENDUMS
"BLD",5613,4,2006.18,2,2006.18,1,189,0)
TIU VISIT LOCATION
"BLD",5613,4,2006.18,2,2006.18,1,190,0)
TIU STATUS ICONS ON
"BLD",5613,4,2006.18,2,2006.18,1,191,0)
TIU LIST COUNT
"BLD",5613,4,2006.18,2,2006.18,1,192,0)
TIU LIST MONTHS
"BLD",5613,4,2006.18,2,2006.18,1,193,0)
TIU LIST FROM
"BLD",5613,4,2006.18,2,2006.18,1,194,0)
TIU LIST TO
"BLD",5613,4,2006.18,2,2006.18,1,195,0)
TIU NOTE GLYPHS ON
"BLD",5613,4,2006.18,2,2006.18,1,196,0)
TIU USE DEFAULT LOCATION
"BLD",5613,4,2006.18,222)
y^y^p^^^^n^^n
"BLD",5613,4,2006.18,224)

"BLD",5613,4,2006.96,0)
2006.96
"BLD",5613,4,2006.96,2,0)
^9.641^2006.96^1
"BLD",5613,4,2006.96,2,2006.96,0)
IMAGE INDEX CONVERSION  (File-top level)
"BLD",5613,4,2006.96,2,2006.96,1,0)
^9.6411^.01^1
"BLD",5613,4,2006.96,2,2006.96,1,.01,0)
CONVERTED BY
"BLD",5613,4,2006.96,222)
y^y^p^^^^n^^n
"BLD",5613,4,2006.96,224)

"BLD",5613,4,"APDD",2005,2005)

"BLD",5613,4,"APDD",2005,2005,30.1)

"BLD",5613,4,"APDD",2005,2005,64)

"BLD",5613,4,"APDD",2005,2005,110)

"BLD",5613,4,"APDD",2005.84,2005.84)

"BLD",5613,4,"APDD",2005.84,2005.84,2)

"BLD",5613,4,"APDD",2006.18,2006.18)

"BLD",5613,4,"APDD",2006.18,2006.18,180)

"BLD",5613,4,"APDD",2006.18,2006.18,181)

"BLD",5613,4,"APDD",2006.18,2006.18,182)

"BLD",5613,4,"APDD",2006.18,2006.18,183)

"BLD",5613,4,"APDD",2006.18,2006.18,184)

"BLD",5613,4,"APDD",2006.18,2006.18,185)

"BLD",5613,4,"APDD",2006.18,2006.18,186)

"BLD",5613,4,"APDD",2006.18,2006.18,187)

"BLD",5613,4,"APDD",2006.18,2006.18,188)

"BLD",5613,4,"APDD",2006.18,2006.18,189)

"BLD",5613,4,"APDD",2006.18,2006.18,190)

"BLD",5613,4,"APDD",2006.18,2006.18,191)

"BLD",5613,4,"APDD",2006.18,2006.18,192)

"BLD",5613,4,"APDD",2006.18,2006.18,193)

"BLD",5613,4,"APDD",2006.18,2006.18,194)

"BLD",5613,4,"APDD",2006.18,2006.18,195)

"BLD",5613,4,"APDD",2006.18,2006.18,196)

"BLD",5613,4,"APDD",2006.96,2006.96)

"BLD",5613,4,"APDD",2006.96,2006.96,.01)

"BLD",5613,4,"B",2005,2005)

"BLD",5613,4,"B",2005.021,2005.021)

"BLD",5613,4,"B",2005.84,2005.84)

"BLD",5613,4,"B",2006.18,2006.18)

"BLD",5613,4,"B",2006.96,2006.96)

"BLD",5613,6.3)
20
"BLD",5613,"ABNS",0)
^9.66A^^
"BLD",5613,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",5613,"INID")
^y
"BLD",5613,"INIT")
POST^MAGIPS59
"BLD",5613,"KRN",0)
^9.67PA^8989.52^19
"BLD",5613,"KRN",.4,0)
.4
"BLD",5613,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5613,"KRN",.401,0)
.401
"BLD",5613,"KRN",.401,"NM",0)
^9.68A^^
"BLD",5613,"KRN",.402,0)
.402
"BLD",5613,"KRN",.403,0)
.403
"BLD",5613,"KRN",.5,0)
.5
"BLD",5613,"KRN",.84,0)
.84
"BLD",5613,"KRN",3.6,0)
3.6
"BLD",5613,"KRN",3.8,0)
3.8
"BLD",5613,"KRN",9.2,0)
9.2
"BLD",5613,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",5613,"KRN",9.8,0)
9.8
"BLD",5613,"KRN",9.8,"NM",0)
^9.68A^44^42
"BLD",5613,"KRN",9.8,"NM",1,0)
MAGGNTI1^^0^B44242412
"BLD",5613,"KRN",9.8,"NM",2,0)
MAGGNTI2^^0^B21199592
"BLD",5613,"KRN",9.8,"NM",3,0)
MAGGSIA^^0^B37580788
"BLD",5613,"KRN",9.8,"NM",4,0)
MAGGSIUI^^0^B44173317
"BLD",5613,"KRN",9.8,"NM",5,0)
MAGGSIV^^0^B39311019
"BLD",5613,"KRN",9.8,"NM",6,0)
MAGGSIV1^^0^B22249629
"BLD",5613,"KRN",9.8,"NM",7,0)
MAGGTIA1^^0^B34754160
"BLD",5613,"KRN",9.8,"NM",8,0)
MAGGTII^^0^B43921962
"BLD",5613,"KRN",9.8,"NM",9,0)
MAGGTPT1^^0^B32058249
"BLD",5613,"KRN",9.8,"NM",10,0)
MAGGTU3^^0^B33146590
"BLD",5613,"KRN",9.8,"NM",12,0)
MAGGTU4^^0^B39449032
"BLD",5613,"KRN",9.8,"NM",13,0)
MAGGTU6^^0^B48411406
"BLD",5613,"KRN",9.8,"NM",14,0)
MAGSIXG1^^0^B48513335
"BLD",5613,"KRN",9.8,"NM",15,0)
MAGSIXGT^^0^B67629374
"BLD",5613,"KRN",9.8,"NM",16,0)
MAGGTUP^^0^B22068923
"BLD",5613,"KRN",9.8,"NM",18,0)
MAGGTERR^^0^B6185941
"BLD",5613,"KRN",9.8,"NM",19,0)
MAGGTUX^^0^B84671980
"BLD",5613,"KRN",9.8,"NM",20,0)
MAGGTUX1^^0^B47937341
"BLD",5613,"KRN",9.8,"NM",21,0)
MAGGTUX2^^0^B16893557
"BLD",5613,"KRN",9.8,"NM",22,0)
MAGGTUX3^^0^B20033133
"BLD",5613,"KRN",9.8,"NM",23,0)
MAGGNTI^^0^B37673155
"BLD",5613,"KRN",9.8,"NM",24,0)
MAGGTAU^^0^B53570032
"BLD",5613,"KRN",9.8,"NM",25,0)
MAGGTU41^^0^B29145844
"BLD",5613,"KRN",9.8,"NM",26,0)
MAGIPS59^^0^B30034575
"BLD",5613,"KRN",9.8,"NM",27,0)
MAGGTLB1^^0^B24325063
"BLD",5613,"KRN",9.8,"NM",28,0)
MAGGTMC1^^0^B10841224
"BLD",5613,"KRN",9.8,"NM",29,0)
MAGGTSR1^^0^B6582516
"BLD",5613,"KRN",9.8,"NM",30,0)
MAGGTRA^^0^B11950621
"BLD",5613,"KRN",9.8,"NM",31,0)
MAGGNLKP^^0^B14546243
"BLD",5613,"KRN",9.8,"NM",32,0)
MAGGTSR^^0^B18209701
"BLD",5613,"KRN",9.8,"NM",33,0)
MAGGTSY2^^0^B5995567
"BLD",5613,"KRN",9.8,"NM",34,0)
MAGGTSYS^^0^B11307252
"BLD",5613,"KRN",9.8,"NM",35,0)
MAGGTU31^^0^B37368094
"BLD",5613,"KRN",9.8,"NM",36,0)
MAGGTU71^^0^B12408880
"BLD",5613,"KRN",9.8,"NM",37,0)
MAGGNTI3^^0^B11336428
"BLD",5613,"KRN",9.8,"NM",38,0)
MAGGTU9^^0^B41693963
"BLD",5613,"KRN",9.8,"NM",39,0)
MAGGTID^^0^B44603396
"BLD",5613,"KRN",9.8,"NM",40,0)
MAGLOG^^0^B8166700
"BLD",5613,"KRN",9.8,"NM",41,0)
MAGBAPIP^^0^B9049823
"BLD",5613,"KRN",9.8,"NM",42,0)
MAGGSIA1^^0^B40441705
"BLD",5613,"KRN",9.8,"NM",43,0)
MAGGTU1^^0^B7410851
"BLD",5613,"KRN",9.8,"NM",44,0)
MAGGSIU2^^0^B19991293
"BLD",5613,"KRN",9.8,"NM","B","MAGBAPIP",41)

"BLD",5613,"KRN",9.8,"NM","B","MAGGNLKP",31)

"BLD",5613,"KRN",9.8,"NM","B","MAGGNTI",23)

"BLD",5613,"KRN",9.8,"NM","B","MAGGNTI1",1)

"BLD",5613,"KRN",9.8,"NM","B","MAGGNTI2",2)

"BLD",5613,"KRN",9.8,"NM","B","MAGGNTI3",37)

"BLD",5613,"KRN",9.8,"NM","B","MAGGSIA",3)

"BLD",5613,"KRN",9.8,"NM","B","MAGGSIA1",42)

"BLD",5613,"KRN",9.8,"NM","B","MAGGSIU2",44)

"BLD",5613,"KRN",9.8,"NM","B","MAGGSIUI",4)

"BLD",5613,"KRN",9.8,"NM","B","MAGGSIV",5)

"BLD",5613,"KRN",9.8,"NM","B","MAGGSIV1",6)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTAU",24)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTERR",18)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTIA1",7)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTID",39)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTII",8)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTLB1",27)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTMC1",28)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTPT1",9)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTRA",30)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTSR",32)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTSR1",29)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTSY2",33)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTSYS",34)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU1",43)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU3",10)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU31",35)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU4",12)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU41",25)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU6",13)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU71",36)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTU9",38)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTUP",16)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTUX",19)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTUX1",20)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTUX2",21)

"BLD",5613,"KRN",9.8,"NM","B","MAGGTUX3",22)

"BLD",5613,"KRN",9.8,"NM","B","MAGIPS59",26)

"BLD",5613,"KRN",9.8,"NM","B","MAGLOG",40)

"BLD",5613,"KRN",9.8,"NM","B","MAGSIXG1",14)

"BLD",5613,"KRN",9.8,"NM","B","MAGSIXGT",15)

"BLD",5613,"KRN",19,0)
19
"BLD",5613,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",5613,"KRN",19,"NM",1,0)
MAG IMAGE INDEX MENU^^2
"BLD",5613,"KRN",19,"NM",2,0)
MAG IMAGE INDEX VAL MENU^^0
"BLD",5613,"KRN",19,"NM",3,0)
MAG IMAGE INDEX VAL FIX^^0
"BLD",5613,"KRN",19,"NM",4,0)
MAG IMAGE INDEX VAL CHECK^^0
"BLD",5613,"KRN",19,"NM",5,0)
MAG IMAGE INDEX VAL REVIEW^^0
"BLD",5613,"KRN",19,"NM","B","MAG IMAGE INDEX MENU",1)

"BLD",5613,"KRN",19,"NM","B","MAG IMAGE INDEX VAL CHECK",4)

"BLD",5613,"KRN",19,"NM","B","MAG IMAGE INDEX VAL FIX",3)

"BLD",5613,"KRN",19,"NM","B","MAG IMAGE INDEX VAL MENU",2)

"BLD",5613,"KRN",19,"NM","B","MAG IMAGE INDEX VAL REVIEW",5)

"BLD",5613,"KRN",19.1,0)
19.1
"BLD",5613,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",5613,"KRN",19.1,"NM",1,0)
MAG NOTE EFILE^^0
"BLD",5613,"KRN",19.1,"NM","B","MAG NOTE EFILE",1)

"BLD",5613,"KRN",101,0)
101
"BLD",5613,"KRN",101,"NM",0)
^9.68A^^
"BLD",5613,"KRN",409.61,0)
409.61
"BLD",5613,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",5613,"KRN",771,0)
771
"BLD",5613,"KRN",771,"NM",0)
^9.68A^^
"BLD",5613,"KRN",870,0)
870
"BLD",5613,"KRN",870,"NM",0)
^9.68A^^
"BLD",5613,"KRN",8989.51,0)
8989.51
"BLD",5613,"KRN",8989.52,0)
8989.52
"BLD",5613,"KRN",8994,0)
8994
"BLD",5613,"KRN",8994,"NM",0)
^9.68A^14^13
"BLD",5613,"KRN",8994,"NM",1,0)
MAGG PAT INFO^^0
"BLD",5613,"KRN",8994,"NM",2,0)
MAG3 TIU LONG LIST OF TITLES^^0
"BLD",5613,"KRN",8994,"NM",3,0)
MAG3 TIU NEW^^0
"BLD",5613,"KRN",8994,"NM",4,0)
MAG3 TIU CREATE ADDENDUM^^0
"BLD",5613,"KRN",8994,"NM",5,0)
MAG3 TIU SIGN RECORD^^0
"BLD",5613,"KRN",8994,"NM",6,0)
MAG4 INDEX GET TYPE^^0
"BLD",5613,"KRN",8994,"NM",7,0)
MAG4 INDEX GET EVENT^^0
"BLD",5613,"KRN",8994,"NM",8,0)
MAG4 INDEX GET SPECIALTY^^0
"BLD",5613,"KRN",8994,"NM",10,0)
MAG3 TIU MODIFY NOTE^^0
"BLD",5613,"KRN",8994,"NM",11,0)
MAG ABSJB^^0
"BLD",5613,"KRN",8994,"NM",12,0)
MAG4 VERSION STATUS^^0
"BLD",5613,"KRN",8994,"NM",13,0)
MAG3 LOOKUP ANY^^0
"BLD",5613,"KRN",8994,"NM",14,0)
MAGG IS DOC CLASS^^0
"BLD",5613,"KRN",8994,"NM","B","MAG ABSJB",11)

"BLD",5613,"KRN",8994,"NM","B","MAG3 LOOKUP ANY",13)

"BLD",5613,"KRN",8994,"NM","B","MAG3 TIU CREATE ADDENDUM",4)

"BLD",5613,"KRN",8994,"NM","B","MAG3 TIU LONG LIST OF TITLES",2)

"BLD",5613,"KRN",8994,"NM","B","MAG3 TIU MODIFY NOTE",10)

"BLD",5613,"KRN",8994,"NM","B","MAG3 TIU NEW",3)

"BLD",5613,"KRN",8994,"NM","B","MAG3 TIU SIGN RECORD",5)

"BLD",5613,"KRN",8994,"NM","B","MAG4 INDEX GET EVENT",7)

"BLD",5613,"KRN",8994,"NM","B","MAG4 INDEX GET SPECIALTY",8)

"BLD",5613,"KRN",8994,"NM","B","MAG4 INDEX GET TYPE",6)

"BLD",5613,"KRN",8994,"NM","B","MAG4 VERSION STATUS",12)

"BLD",5613,"KRN",8994,"NM","B","MAGG IS DOC CLASS",14)

"BLD",5613,"KRN",8994,"NM","B","MAGG PAT INFO",1)

"BLD",5613,"KRN","B",.4,.4)

"BLD",5613,"KRN","B",.401,.401)

"BLD",5613,"KRN","B",.402,.402)

"BLD",5613,"KRN","B",.403,.403)

"BLD",5613,"KRN","B",.5,.5)

"BLD",5613,"KRN","B",.84,.84)

"BLD",5613,"KRN","B",3.6,3.6)

"BLD",5613,"KRN","B",3.8,3.8)

"BLD",5613,"KRN","B",9.2,9.2)

"BLD",5613,"KRN","B",9.8,9.8)

"BLD",5613,"KRN","B",19,19)

"BLD",5613,"KRN","B",19.1,19.1)

"BLD",5613,"KRN","B",101,101)

"BLD",5613,"KRN","B",409.61,409.61)

"BLD",5613,"KRN","B",771,771)

"BLD",5613,"KRN","B",870,870)

"BLD",5613,"KRN","B",8989.51,8989.51)

"BLD",5613,"KRN","B",8989.52,8989.52)

"BLD",5613,"KRN","B",8994,8994)

"BLD",5613,"QUES",0)
^9.62^^
"BLD",5613,"REQB",0)
^9.611^9^5
"BLD",5613,"REQB",5,0)
MAG*3.0*45^2
"BLD",5613,"REQB",6,0)
MAG*3.0*46^2
"BLD",5613,"REQB",7,0)
MAG*3.0*63^2
"BLD",5613,"REQB",8,0)
MAG*3.0*61^2
"BLD",5613,"REQB",9,0)
MAG*3.0*85^2
"BLD",5613,"REQB","B","MAG*3.0*45",5)

"BLD",5613,"REQB","B","MAG*3.0*46",6)

"BLD",5613,"REQB","B","MAG*3.0*61",8)

"BLD",5613,"REQB","B","MAG*3.0*63",7)

"BLD",5613,"REQB","B","MAG*3.0*85",9)

"DATA",2005.021,1,0)
TGA^Targa Image TGA^1^^1^1
"DATA",2005.021,2,0)
TIF^Scanned Document TIF^1^^1^15
"DATA",2005.021,3,0)
PAC^Xray image PAC^1^^1^3
"DATA",2005.021,4,0)
BIG^Xray big file 2000K BIG^1^^1^3
"DATA",2005.021,5,0)
ABS^Abstract file ABS^1^^1^1
"DATA",2005.021,6,0)
BW^Black and White BW^1^^1^9
"DATA",2005.021,7,0)
756^Historical 756^1^^1^3
"DATA",2005.021,8,0)
BMP^Bitmap file BMP^1^^1^1
"DATA",2005.021,9,0)
MPG^Motion Video MPG^0^magavi.bmp^0^21
"DATA",2005.021,10,0)
ASC^Text file Image extension ASC^1^magtext.bmp^0^103
"DATA",2005.021,11,0)
AVI^Motion Video AVI^1^magavi.bmp^0^21
"DATA",2005.021,12,0)
DOC^Word Document DOC^0^magdoc.bmp^0^102
"DATA",2005.021,13,0)
HTM^Web Document HTM^1^maghtml.bmp^0^101
"DATA",2005.021,14,0)
JPG^Full Color JPG^1^^1^1
"DATA",2005.021,15,0)
PDF^Adobe PDF^0^magpdf.bmp^0^104
"DATA",2005.021,16,0)
RTF^Rich Text format RTF^0^magrtf.bmp^0^105
"DATA",2005.021,17,0)
WAV^Audio file WAV^0^magwav.bmp^0^106
"DATA",2005.021,18,0)
DCM^Dicom file DCM^1^^1^100
"DATA",2005.021,19,0)
TXT^Text file import TXT^1^magtext.bmp^0^103
"DATA",2005.021,21,0)
MPEG^Motion Video MPG^0^magavi.bmp^0^21
"DATA",2005.021,22,0)
HTML^Web Document HTML^1^maghtml.bmp^0^101
"DATA",2005.021,23,0)
MP3^Motion Video MPEG-3^0^magavi.bmp^0^21
"DATA",2005.021,24,0)
MP4^Motion Video MPEG-4^0^magavi.bmp^0^21
"DATA",2005.021,25,0)
MHT^MIME HTML Document^1^maghtml.bmp^0^101
"DATA",2005.021,26,0)
MHTML^MIME HTML Document^1^maghtml.bmp^0^101
"FIA",2005)
IMAGE
"FIA",2005,0)
^MAG(2005,
"FIA",2005,0,0)
2005I
"FIA",2005,0,1)
y^y^p^^^^n^^n
"FIA",2005,0,10)

"FIA",2005,0,11)

"FIA",2005,0,"RLRO")

"FIA",2005,0,"VR")
3.0^MAG
"FIA",2005,2005)
1
"FIA",2005,2005,30.1)

"FIA",2005,2005,64)

"FIA",2005,2005,110)

"FIA",2005.021)
IMAGE FILE TYPES
"FIA",2005.021,0)
^MAG(2005.021,
"FIA",2005.021,0,0)
2005.021
"FIA",2005.021,0,1)
y^y^f^^n^^y^o^n
"FIA",2005.021,0,10)

"FIA",2005.021,0,11)

"FIA",2005.021,0,"RLRO")

"FIA",2005.021,0,"VR")
3.0^MAG
"FIA",2005.021,2005.021)
0
"FIA",2005.84)
IMAGE INDEX FOR SPECIALTY/SUBSPECIALTY
"FIA",2005.84,0)
^MAG(2005.84,
"FIA",2005.84,0,0)
2005.84
"FIA",2005.84,0,1)
y^y^p^^^^n^^n
"FIA",2005.84,0,10)

"FIA",2005.84,0,11)

"FIA",2005.84,0,"RLRO")

"FIA",2005.84,0,"VR")
3.0^MAG
"FIA",2005.84,2005.84)
1
"FIA",2005.84,2005.84,2)

"FIA",2006.18)
IMAGING USER PREFERENCE
"FIA",2006.18,0)
^MAG(2006.18,
"FIA",2006.18,0,0)
2006.18
"FIA",2006.18,0,1)
y^y^p^^^^n^^n
"FIA",2006.18,0,10)

"FIA",2006.18,0,11)

"FIA",2006.18,0,"RLRO")

"FIA",2006.18,0,"VR")
3.0^MAG
"FIA",2006.18,2006.18)
1
"FIA",2006.18,2006.18,180)

"FIA",2006.18,2006.18,181)

"FIA",2006.18,2006.18,182)

"FIA",2006.18,2006.18,183)

"FIA",2006.18,2006.18,184)

"FIA",2006.18,2006.18,185)

"FIA",2006.18,2006.18,186)

"FIA",2006.18,2006.18,187)

"FIA",2006.18,2006.18,188)

"FIA",2006.18,2006.18,189)

"FIA",2006.18,2006.18,190)

"FIA",2006.18,2006.18,191)

"FIA",2006.18,2006.18,192)

"FIA",2006.18,2006.18,193)

"FIA",2006.18,2006.18,194)

"FIA",2006.18,2006.18,195)

"FIA",2006.18,2006.18,196)

"FIA",2006.96)
IMAGE INDEX CONVERSION
"FIA",2006.96,0)
^MAGIXCVT(2006.96,
"FIA",2006.96,0,0)
2006.96S
"FIA",2006.96,0,1)
y^y^p^^^^n^^n
"FIA",2006.96,0,10)

"FIA",2006.96,0,11)

"FIA",2006.96,0,"RLRO")

"FIA",2006.96,0,"VR")
3.0^MAG
"FIA",2006.96,2006.96)
1
"FIA",2006.96,2006.96,.01)

"INIT")
POST^MAGIPS59
"KRN",19,22060,-1)
2^1
"KRN",19,22060,0)
MAG IMAGE INDEX MENU^Image Index Conversion Menu^^M^133^^^^^^^454
"KRN",19,22060,10,0)
^19.01IP^8^8
"KRN",19,22060,10,8,0)
22988^VAL^8
"KRN",19,22060,10,8,"^")
MAG IMAGE INDEX VAL MENU
"KRN",19,22060,"U")
IMAGE INDEX CONVERSION MENU
"KRN",19,22988,-1)
0^2
"KRN",19,22988,0)
MAG IMAGE INDEX VAL MENU^Image Index Validate Menu^^M^^^^^^^^IMAGING
"KRN",19,22988,1,0)
^19.06^1^1^3051007^^
"KRN",19,22988,1,1,0)
This menu has options to validate and fix missing index values.
"KRN",19,22988,10,0)
^19.01IP^3^3
"KRN",19,22988,10,1,0)
22989^CHK^1
"KRN",19,22988,10,1,"^")
MAG IMAGE INDEX VAL CHECK
"KRN",19,22988,10,2,0)
22990^FIX^2
"KRN",19,22988,10,2,"^")
MAG IMAGE INDEX VAL FIX
"KRN",19,22988,10,3,0)
22991^REV^3
"KRN",19,22988,10,3,"^")
MAG IMAGE INDEX VAL REVIEW
"KRN",19,22988,99)
61027,43864
"KRN",19,22988,"U")
IMAGE INDEX VALIDATE MENU
"KRN",19,22989,-1)
0^4
"KRN",19,22989,0)
MAG IMAGE INDEX VAL CHECK^Check Image File for missing Index values^^R^^^^^^^^
"KRN",19,22989,1,0)
^19.06^10^10^3051007^^
"KRN",19,22989,1,1,0)
Starts or Resumes a check of all entries in the Image File.
"KRN",19,22989,1,2,0)
Checks for missing index values that are required.
"KRN",19,22989,1,3,0)
Checks for invalid Origin Index values.
"KRN",19,22989,1,4,0)
Checks for incorrectly stored pointers to CR when CT was intended.
"KRN",19,22989,1,5,0)
Checks for invalid associations between:
"KRN",19,22989,1,6,0)
   Type, Procedure/Event and Specialty/SubSpecialty Index values
"KRN",19,22989,1,7,0)
Checks for Image Groups with 1 image.
"KRN",19,22989,1,8,0)
Checks for Image Groups with 0 images.
"KRN",19,22989,1,9,0)
Checks for Images with missing Patient Pointer.
"KRN",19,22989,1,10,0)
Checks for Corrupt enties in Image File: No '0' node.
"KRN",19,22989,25)
CHECK^MAGGTUX
"KRN",19,22989,"U")
CHECK IMAGE FILE FOR MISSING I
"KRN",19,22990,-1)
0^3
"KRN",19,22990,0)
MAG IMAGE INDEX VAL FIX^Fix missing Index values in Image File^^R^^^^^^^^
"KRN",19,22990,1,0)
^^14^14^3051007^
"KRN",19,22990,1,1,0)
Starts or Resumes a process that will fix missing index terms and
"KRN",19,22990,1,2,0)
certain invalid index terms.
"KRN",19,22990,1,3,0)
  
"KRN",19,22990,1,4,0)
For missing index values that are required, values are Generated
"KRN",19,22990,1,5,0)
and Commited to the database using image index conversion utilities.
"KRN",19,22990,1,6,0)
Fixes invalid entries for field Origin Index.
"KRN",19,22990,1,7,0)
Fixes incorrectly stored pointers to CR when CT was intended.
"KRN",19,22990,1,8,0)
 
"KRN",19,22990,1,9,0)
Reports on invalid associations between:
"KRN",19,22990,1,10,0)
   Type, Procedure/Event and Specialty/SubSpecialty Index values
"KRN",19,22990,1,11,0)
Reports on Image Groups with 1 image.
"KRN",19,22990,1,12,0)
Reports on Image Groups with 0 images.
"KRN",19,22990,1,13,0)
Reports on Images with missing Patient Pointer.
"KRN",19,22990,1,14,0)
Reports on Corrupt enties in Image File: No '0' node
"KRN",19,22990,25)
FIX^MAGGTUX
"KRN",19,22990,"U")
FIX MISSING INDEX VALUES IN IM
"KRN",19,22991,-1)
0^5
"KRN",19,22991,0)
MAG IMAGE INDEX VAL REVIEW^Review a Summary of the last Fix or Check process.^^R^^^^^^^^
"KRN",19,22991,1,0)
^19.06^2^2^3051007^^
"KRN",19,22991,1,1,0)
This will print a summary to screen of the results of the last Fix or 
"KRN",19,22991,1,2,0)
Check process that was run.
"KRN",19,22991,25)
REVIEW^MAGGTUX
"KRN",19,22991,"U")
REVIEW A SUMMARY OF THE LAST F
"KRN",19.1,853,-1)
0^1
"KRN",19.1,853,0)
MAG NOTE EFILE^MAG ELECTRONICALLY FILED
"KRN",19.1,853,1,0)
^^1^1^3061215^
"KRN",19.1,853,1,1,0)
The Imaging Capture Client checks for this Key.  Users need this key to be able to save a TIU Note from the Capture Client as 'Electronically Filed'
"KRN",8994,2299,-1)
0^11
"KRN",8994,2299,0)
MAG ABSJB^ABSJB^MAGGTU71^1^R
"KRN",8994,2299,1,0)
^8994.01^1^1^3060512^^^^
"KRN",8994,2299,1,1,0)
Sets queue entry to create abstract and/or copy to jukebox.
"KRN",8994,2299,2,0)
^8994.02A^^0
"KRN",8994,2299,2,1,0)
MAGIEN^1^255^1
"KRN",8994,2299,2,1,1,0)
^^1^1^2970325^^
"KRN",8994,2299,2,1,1,1,0)
Pointer to image file
"KRN",8994,2299,2,2,0)
DATA^1^200^1^1
"KRN",8994,2299,2,2,1,0)
^8994.021^5^5^3060301^^^^
"KRN",8994,2299,2,2,1,1,0)
$P(1) IEN.  Set an Abstract Queue for the IEN.
"KRN",8994,2299,2,2,1,2,0)
           - Abstract will be created.
"KRN",8994,2299,2,2,1,3,0)
$p(2) IEN. Set a JukeBox Queue for the IEN.
"KRN",8994,2299,2,2,1,4,0)
           - Image will be copied from Jukebox.
"KRN",8994,2299,2,2,1,5,0)

"KRN",8994,2299,2,"B","DATA",2)

"KRN",8994,2299,2,"B","MAGIEN",1)

"KRN",8994,2299,2,"B","MAGIN",2)

"KRN",8994,2299,2,"PARAMSEQ",1,2)

"KRN",8994,2299,3,0)
^8994.03^1^1^3060512^^^^
"KRN",8994,2299,3,1,0)
1|0 ^ message  1 = success  0 = failure
"KRN",8994,2299,3,2,0)
Piece1=1 if successful
"KRN",8994,2300,-1)
0^13
"KRN",8994,2300,0)
MAG3 LOOKUP ANY^LKP^MAGGNLKP^2^R^^^1
"KRN",8994,2300,1,0)
^8994.01^1^1^3061107^^^^
"KRN",8994,2300,1,1,0)
Lookup using FIND^DIC for general purpose file lookup.
"KRN",8994,2300,2,0)
^8994.02A^3^2
"KRN",8994,2300,2,1,0)
ZYx^1^256^1^1
"KRN",8994,2300,2,1,1,0)
^^2^2^3000512^
"KRN",8994,2300,2,1,1,1,0)
        ; ZY is parameter sent by calling app (Delphi)
"KRN",8994,2300,2,1,1,2,0)
        ;    FILE NUM ^ NUM TO RETURN ^ TEXT TO MATCH ^  ^ SCREEN ($P 5-99)
"KRN",8994,2300,2,2,0)
MAGIN^1^200^1^1
"KRN",8994,2300,2,2,1,0)
^^2^2^3061107^
"KRN",8994,2300,2,2,1,1,0)
MAGIN is parameter sent by calling app (Delphi)
"KRN",8994,2300,2,2,1,2,0)
 FILE NUM ^ NUM TO RETURN ^ TEXT TO MATCH ^ FIELDS ^ SCREEN ($P 5-99)
"KRN",8994,2300,2,3,0)
DATA^1^40^1^2
"KRN",8994,2300,2,3,1,0)
^^10^10^3061107^
"KRN",8994,2300,2,3,1,1,0)
|TAB|; DATA : 
"KRN",8994,2300,2,3,1,2,0)
|TAB|;  LVIEW =Piece 1 
"KRN",8994,2300,2,3,1,3,0)
|TAB|;     +LVIEW = 1  :  
"KRN",8994,2300,2,3,1,4,0)
|TAB|;          result array is formatted for a magListView control
"KRN",8994,2300,2,3,1,5,0)
|TAB|;              i.e.  ^ delimiter for data and "|" delimiter for IEN
"KRN",8994,2300,2,3,1,6,0)
|TAB|;     +LVIEW = 0  : 
"KRN",8994,2300,2,3,1,7,0)
|TAB|;         old way,  "  " delim for data and '^' delim for IEN
"KRN",8994,2300,2,3,1,8,0)
|TAB|;  INDX = Piece 2
"KRN",8994,2300,2,3,1,9,0)
|TAB|;                       This is the index to search 
"KRN",8994,2300,2,3,1,10,0)
|TAB|;                       Defaults to "B"
"KRN",8994,2300,2,"B","DATA",3)

"KRN",8994,2300,2,"B","MAGIN",2)

"KRN",8994,2300,2,"B","ZYx",1)

"KRN",8994,2300,2,"PARAMSEQ",1,1)

"KRN",8994,2300,2,"PARAMSEQ",1,2)

"KRN",8994,2300,2,"PARAMSEQ",2,3)

"KRN",8994,2300,3,0)
^8994.03^2^2^3061107^^^
"KRN",8994,2300,3,1,0)
Returns a list of matching entries.
"KRN",8994,2300,3,2,0)
Each list entry is NAME^IEN 
"KRN",8994,2301,-1)
0^1
"KRN",8994,2301,0)
MAGG PAT INFO^INFO^MAGGTPT1^1^R
"KRN",8994,2301,1,0)
^8994.01^2^2^3061107^^^^
"KRN",8994,2301,1,1,0)
Returns a string of '^' delimited pieces of patient information.
"KRN",8994,2301,1,2,0)

"KRN",8994,2301,2,0)
^8994.02A^1^1
"KRN",8994,2301,2,1,0)
DATA^1^90^1^1
"KRN",8994,2301,2,1,1,0)
^8994.021^5^5^3061107^^^^
"KRN",8994,2301,2,1,1,1,0)
;    DATA:  MAGDFN ^ NOLOG ^ ISICN
"KRN",8994,2301,2,1,1,2,0)
;       MAGDFN -- Patient DFN
"KRN",8994,2301,2,1,1,3,0)
;       NOLOG  -- 0/1; if 1, then do NOT update the Session log
"KRN",8994,2301,2,1,1,4,0)
;       ISICN  -- 0/1  if 1, then this is an ICN,
"KRN",8994,2301,2,1,1,5,0)
    if 0 (default) this is a DFN ; Patch 41
"KRN",8994,2301,2,"B","DATA",1)

"KRN",8994,2301,2,"B","MAGDFN",1)

"KRN",8994,2301,2,"PARAMSEQ",1,1)

"KRN",8994,2301,3,0)
^8994.03^9^9^3051005^^^^
"KRN",8994,2301,3,1,0)
The result String returns the following.
"KRN",8994,2301,3,2,0)
  1        2      3     4     5     6     7 
"KRN",8994,2301,3,3,0)
 status ^   DFN ^ name ^ sex ^ DOB ^ SSN ^ S/C
"KRN",8994,2301,3,4,0)
  
"KRN",8994,2301,3,5,0)
 8        9                     10
"KRN",8994,2301,3,6,0)
TYPE ^ Veteran(y/n)  ^ Patient Image Count
"KRN",8994,2301,3,7,0)
  
"KRN",8994,2301,3,8,0)
   11            12              13
"KRN",8994,2301,3,9,0)
 ICN       SITE Number   ^ Production Account 1/0
"KRN",8994,2302,-1)
0^6
"KRN",8994,2302,0)
MAG4 INDEX GET TYPE^IGT^MAGSIXGT^2^R^0^^0^3
"KRN",8994,2302,1,0)
^8994.01^10^10^3050727^^^^
"KRN",8994,2302,1,1,0)
This Remote Procedure Call is used to filter out those
"KRN",8994,2302,1,2,0)
image types that belong to a given image category (Class).
"KRN",8994,2302,1,3,0)
 
"KRN",8994,2302,1,4,0)
When images are displayed, it is desirable to limit the
"KRN",8994,2302,1,5,0)
list of presented images to only those that are likely
"KRN",8994,2302,1,6,0)
to be relevant in the current context.
"KRN",8994,2302,1,7,0)
 
"KRN",8994,2302,1,8,0)
This procedure accepts an "image class" (either an IEN
"KRN",8994,2302,1,9,0)
or the name of a class) and returns all "image types"
"KRN",8994,2302,1,10,0)
that belong to that class..
"KRN",8994,2302,2,0)
^8994.02A^2^2
"KRN",8994,2302,2,1,0)
CLS^1^160^1^1
"KRN",8994,2302,2,1,1,0)
^8994.021^3^3^3050517^^^^
"KRN",8994,2302,2,1,1,1,0)
This parameter is a ',' (comma) delimited string of classes.
"KRN",8994,2302,2,1,1,2,0)
only those index types, that match a 'class' in the string will
"KRN",8994,2302,2,1,1,3,0)
be returned in the result array.
"KRN",8994,2302,2,2,0)
FLGS^1^40^0^2
"KRN",8994,2302,2,2,1,0)
^8994.021^4^4^3050727^^^^
"KRN",8994,2302,2,2,1,1,0)
;  FLGS : An '^' delimited string
"KRN",8994,2302,2,2,1,2,0)
;     1 IGN: Flag to IGNore the Status field
"KRN",8994,2302,2,2,1,3,0)
;     2 INCL: Include Class in the Output string
"KRN",8994,2302,2,2,1,4,0)
;     3 INST: Include Status in the Output String
"KRN",8994,2302,2,"B","CATEGORY",1)

"KRN",8994,2302,2,"B","CLS",1)

"KRN",8994,2302,2,"B","FLGS",2)

"KRN",8994,2302,2,"B","IGN",2)

"KRN",8994,2302,2,"PARAMSEQ",1,1)

"KRN",8994,2302,2,"PARAMSEQ",2,2)

"KRN",8994,2302,3,0)
^8994.03^4^4^3050727^^^^
"KRN",8994,2302,3,1,0)
The result is an array of Image TYPES that are valid for the 
"KRN",8994,2302,3,2,0)
class or classes.
"KRN",8994,2302,3,3,0)
Each item in the result array is in the format:
"KRN",8994,2302,3,4,0)
TYPE^Abbreviation (and optionally) ^CLASS^STATUS
"KRN",8994,2302,3,5,0)
  -2: Invalid Category: "[category]".
"KRN",8994,2302,3,6,0)
  -3: No Types Found for "[category]".
"KRN",8994,2302,3,7,0)
 
"KRN",8994,2302,3,8,0)
The structure of the output array is:
"KRN",8994,2302,3,9,0)
  OUT(0) = "0^OK" or one of the above error messages
"KRN",8994,2302,3,10,0)
  OUT(i) = name of image type ^ ien of image type
"KRN",8994,2303,-1)
0^7
"KRN",8994,2303,0)
MAG4 INDEX GET EVENT^IGE^MAGSIXGT^2^R^0^^0^3
"KRN",8994,2303,1,0)
^8994.01^3^3^3050823^^^^
"KRN",8994,2303,1,1,0)
This call will return an array of INDEX PROCEDURE/EVENT(s)
"KRN",8994,2303,1,2,0)
based on the input parameters CLS (Class)
"KRN",8994,2303,1,3,0)
and SPEC (Specialty/subspecialty)
"KRN",8994,2303,1,4,0)
When images are displayed, it is desirable to limit the
"KRN",8994,2303,1,5,0)
list of presented images to only those that are likely
"KRN",8994,2303,1,6,0)
to be relevant in the current context.
"KRN",8994,2303,1,7,0)
 
"KRN",8994,2303,1,8,0)
This procedure accepts an "image category" (either an IEN
"KRN",8994,2303,1,9,0)
or the name of a category) and returns all "image events"
"KRN",8994,2303,1,10,0)
that belong to that category.
"KRN",8994,2303,2,0)
^8994.02A^3^3
"KRN",8994,2303,2,1,0)
CLS^1^90^1^1
"KRN",8994,2303,2,1,1,0)
^8994.021^3^3^3050823^^^^
"KRN",8994,2303,2,1,1,1,0)
This parameter is a ',' (comma) delimited string of classes
"KRN",8994,2303,2,1,1,2,0)
only those index types, that match a 'class' in the string
"KRN",8994,2303,2,1,1,3,0)
will be returned in the array
"KRN",8994,2303,2,2,0)
FLGS^1^40^0^3
"KRN",8994,2303,2,2,1,0)
^8994.021^4^4^3050823^^^^
"KRN",8994,2303,2,2,1,1,0)
;  FLGS : An '^' delimited string
"KRN",8994,2303,2,2,1,2,0)
;     1 IGN: Flag to IGNore the Status field
"KRN",8994,2303,2,2,1,3,0)
;     2 INCL: Include Class in the Output string
"KRN",8994,2303,2,2,1,4,0)
;     3 INST: Include Status in the Output String
"KRN",8994,2303,2,3,0)
SPEC^1^60^0^2
"KRN",8994,2303,2,3,1,0)
^8994.021^5^5^3050727^^^
"KRN",8994,2303,2,3,1,1,0)
This is a comma delimited list of Specialty/SubSpecialties
"KRN",8994,2303,2,3,1,2,0)
Only Procedure/Events that are associated with one of these will be
"KRN",8994,2303,2,3,1,3,0)
returned in the list.
"KRN",8994,2303,2,3,1,4,0)
If a Procedure/Event is not associated with any Specialty/Subspecialties
"KRN",8994,2303,2,3,1,5,0)
it is considered valid for all, and will be returned.
"KRN",8994,2303,2,"B","CATEGORY",1)

"KRN",8994,2303,2,"B","CLS",1)

"KRN",8994,2303,2,"B","FLGS",2)

"KRN",8994,2303,2,"B","IGN",2)

"KRN",8994,2303,2,"B","SPEC",3)

"KRN",8994,2303,2,"PARAMSEQ",1,1)

"KRN",8994,2303,2,"PARAMSEQ",2,2)

"KRN",8994,2303,2,"PARAMSEQ",2,3)

"KRN",8994,2303,2,"PARAMSEQ",3,2)

"KRN",8994,2303,3,0)
^8994.03^9^9^3050823^^^^
"KRN",8994,2303,3,1,0)
The result array includes all Procedure/Events that match the
"KRN",8994,2303,3,2,0)
Class and Specialty/SubSpecialty that were passes as input parameters.
"KRN",8994,2303,3,3,0)
The format of the result Array: 
"KRN",8994,2303,3,4,0)
  
"KRN",8994,2303,3,5,0)
Result(0)="0^<error message>"   <- if error
"KRN",8994,2303,3,6,0)
Result(0)="1^OK"                <- if success
"KRN",8994,2303,3,7,0)
the items in the array are in the format
"KRN",8994,2303,3,8,0)
Result(1..n)="Procedure/Event^Abbreviation"  and Optionally
"KRN",8994,2303,3,9,0)
  the 3rd and 4th '^' pieces could be CLASS^STATUS
"KRN",8994,2303,3,10,0)
  OUT(i) = name of event ^ ien of event ^ abbreviation for event
"KRN",8994,2304,-1)
0^8
"KRN",8994,2304,0)
MAG4 INDEX GET SPECIALTY^IGS^MAGSIXGT^2^R^0^^0^3
"KRN",8994,2304,1,0)
^8994.01^3^3^3050727^^^^
"KRN",8994,2304,1,1,0)
This call will return an array of INDEX SPECIALTY/SUBSPECIALTIES
"KRN",8994,2304,1,2,0)
based on the input parameters CLS (Class)
"KRN",8994,2304,1,3,0)
and EVENT (Procedure/Event)
"KRN",8994,2304,1,4,0)
When images are displayed, it is desirable to limit the
"KRN",8994,2304,1,5,0)
list of presented images to only those that are likely
"KRN",8994,2304,1,6,0)
to be relevant in the current context.
"KRN",8994,2304,1,7,0)
 
"KRN",8994,2304,1,8,0)
This procedure accepts an "image category" (either an IEN
"KRN",8994,2304,1,9,0)
or the name of a category) and returns all "(sub)specialties"
"KRN",8994,2304,1,10,0)
that generate images in that category.
"KRN",8994,2304,2,0)
^8994.02A^3^3
"KRN",8994,2304,2,1,0)
CLS^1^90^1^1
"KRN",8994,2304,2,1,1,0)
^8994.021^3^3^3050517^^^^
"KRN",8994,2304,2,1,1,1,0)
This parameter is a ',' (comma) delimited string of classes
"KRN",8994,2304,2,1,1,2,0)
only those specialties that match a 'class' in the string
"KRN",8994,2304,2,1,1,3,0)
will be listed in the result array.
"KRN",8994,2304,2,2,0)
EVENT^1^50^0^2
"KRN",8994,2304,2,2,1,0)
^8994.021^3^3^3050517^^^^
"KRN",8994,2304,2,2,1,1,0)
This is a ','(comma) delimited string of Procedure/Events
"KRN",8994,2304,2,2,1,2,0)
only those Specialties associated with one of these Proc/Events 
"KRN",8994,2304,2,2,1,3,0)
will be listed in the output.
"KRN",8994,2304,2,3,0)
FLGS^1^40^0^3
"KRN",8994,2304,2,3,1,0)
^8994.021^5^5^3050727^^^
"KRN",8994,2304,2,3,1,1,0)
;  FLGS : An '^' delimited string
"KRN",8994,2304,2,3,1,2,0)
;     1 IGN: Flag to IGNore the Status field
"KRN",8994,2304,2,3,1,3,0)
;     2 INCL: Include Class in the Output string
"KRN",8994,2304,2,3,1,4,0)
;     3 INST: Include Status in the Output String
"KRN",8994,2304,2,3,1,5,0)
;     4 INSP: Include Specialty in the OutPut String
"KRN",8994,2304,2,"B","CATEGORY",1)

"KRN",8994,2304,2,"B","CLS",1)

"KRN",8994,2304,2,"B","EVENT",2)

"KRN",8994,2304,2,"B","FLGS",3)

"KRN",8994,2304,2,"B","IGN",3)

"KRN",8994,2304,2,"PARAMSEQ",1,1)

"KRN",8994,2304,2,"PARAMSEQ",2,2)

"KRN",8994,2304,2,"PARAMSEQ",3,3)

"KRN",8994,2304,3,0)
^8994.03^9^9^3050727^^^^
"KRN",8994,2304,3,1,0)
The result array includes all Specialty/SubSpecialties that match the
"KRN",8994,2304,3,2,0)
Class and Procedure/Event that were passed as input parameters.
"KRN",8994,2304,3,3,0)
The format of the result array is : 
"KRN",8994,2304,3,4,0)
Result(0)="0^<error message>"   <- if error
"KRN",8994,2304,3,5,0)
Result(0)="1^OK"                <- if success
"KRN",8994,2304,3,6,0)
the items in the array are in the format
"KRN",8994,2304,3,7,0)
Result(1..n)="Specialty/SubSpecialty^Abbreviation" 
"KRN",8994,2304,3,8,0)
  and optionally the 3rd,4th and 5th pieces could be
"KRN",8994,2304,3,9,0)
  CLASS^STATUS^SPECIALTY
"KRN",8994,2304,3,10,0)
The structure of the output array is:
"KRN",8994,2304,3,11,0)
  OUT(0) = "0^OK" or one of the above error messages
"KRN",8994,2304,3,12,0)
  OUT(i) = name of specialty ^ ien of specialty
"KRN",8994,2305,-1)
0^3
"KRN",8994,2305,0)
MAG3 TIU NEW^NEW^MAGGNTI1^1^R
"KRN",8994,2305,1,0)
^8994.01^5^5^3070206^^^^
"KRN",8994,2305,1,1,0)
RPC Call to create a New Note 
"KRN",8994,2305,1,2,0)
  and Optionally :  
"KRN",8994,2305,1,3,0)
           Electronically Sign the Note.
"KRN",8994,2305,1,4,0)
           Administratively Close the Note.
"KRN",8994,2305,1,5,0)
           Add Text to the Note.
"KRN",8994,2305,2,0)
^8994.02A^10^10
"KRN",8994,2305,2,1,0)
MAGDFN^1^60^1^1
"KRN",8994,2305,2,1,1,0)
^8994.021^1^1^3050517^^^
"KRN",8994,2305,2,1,1,1,0)
DFN of the Patient.
"KRN",8994,2305,2,2,0)
MAGTITLE^1^60^1^2
"KRN",8994,2305,2,2,1,0)
^^1^1^3050517^
"KRN",8994,2305,2,2,1,1,0)
IEN of TIU DOCUMENT DEFINITION entry in file ^TIU(8925.1
"KRN",8994,2305,2,3,0)
MAGADCL^1^10^0^3
"KRN",8994,2305,2,3,1,0)
^^2^2^3050517^
"KRN",8994,2305,2,3,1,1,0)
  1 = Mark this Note as Administratively Closed
"KRN",8994,2305,2,3,1,2,0)
  otherwise it will be Un-Signed
"KRN",8994,2305,2,4,0)
MAGMODE^1^30^0^4
"KRN",8994,2305,2,4,1,0)
^^3^3^3050517^
"KRN",8994,2305,2,4,1,1,0)
Mode of Admin Closure:
"KRN",8994,2305,2,4,1,2,0)
 "S" = Scanned Document
"KRN",8994,2305,2,4,1,3,0)
 "M" = Manual closure
"KRN",8994,2305,2,5,0)
MAGES^1^60^0^5
"KRN",8994,2305,2,5,1,0)
^8994.021^1^1^3070206^^^
"KRN",8994,2305,2,5,1,1,0)
 The encrypted Electronic Signature
"KRN",8994,2305,2,6,0)
MAGESBY^1^90^0^6
"KRN",8994,2305,2,6,1,0)
^^1^1^3050517^
"KRN",8994,2305,2,6,1,1,0)
 The DUZ of the Signer (Defaults to DUZ)
"KRN",8994,2305,2,7,0)
MAGLOC^1^60^0^7
"KRN",8994,2305,2,7,1,0)
^^1^1^3050517^
"KRN",8994,2305,2,7,1,1,0)
IEN in Hospital Location File #44, Global ^SC(
"KRN",8994,2305,2,8,0)
MAGTEXT^2^3200^0^8
"KRN",8994,2305,2,8,1,0)
^8994.021^1^1^3050517^^
"KRN",8994,2305,2,8,1,1,0)
Array of Text to add to the New Note.
"KRN",8994,2305,2,9,0)
MAGDATE^1^40^0^8
"KRN",8994,2305,2,9,1,0)
^^1^1^3050727^
"KRN",8994,2305,2,9,1,1,0)
Date of the Note. For New Notes.
"KRN",8994,2305,2,10,0)
MAGCNSLT^1^30^0^9
"KRN",8994,2305,2,10,1,0)
^^1^1^3050727^
"KRN",8994,2305,2,10,1,1,0)
DA of Consult to Link this note to.
"KRN",8994,2305,2,"B","MAGADCL",3)

"KRN",8994,2305,2,"B","MAGCNSLT",10)

"KRN",8994,2305,2,"B","MAGDATE",9)

"KRN",8994,2305,2,"B","MAGDFN",1)

"KRN",8994,2305,2,"B","MAGES",5)

"KRN",8994,2305,2,"B","MAGESBY",6)

"KRN",8994,2305,2,"B","MAGLOC",7)

"KRN",8994,2305,2,"B","MAGMODE",4)

"KRN",8994,2305,2,"B","MAGTEXT",8)

"KRN",8994,2305,2,"B","MAGTITLE",2)

"KRN",8994,2305,2,"PARAMSEQ",1,1)

"KRN",8994,2305,2,"PARAMSEQ",2,2)

"KRN",8994,2305,2,"PARAMSEQ",3,3)

"KRN",8994,2305,2,"PARAMSEQ",4,4)

"KRN",8994,2305,2,"PARAMSEQ",5,5)

"KRN",8994,2305,2,"PARAMSEQ",6,6)

"KRN",8994,2305,2,"PARAMSEQ",7,7)

"KRN",8994,2305,2,"PARAMSEQ",8,8)

"KRN",8994,2305,2,"PARAMSEQ",8,9)

"KRN",8994,2305,2,"PARAMSEQ",9,10)

"KRN",8994,2305,3,0)
^8994.03^7^7^3070206^^^
"KRN",8994,2305,3,1,0)
If success : result = "1^Note was created."
"KRN",8994,2305,3,2,0)
If success and Administratively Closed.
"KRN",8994,2305,3,3,0)
             result = "1^Note was created. Administrative Closure."
"KRN",8994,2305,3,4,0)
If success and Signed
"KRN",8994,2305,3,5,0)
             result = "1^Note was created.  Signed."
"KRN",8994,2305,3,6,0)
  
"KRN",8994,2305,3,7,0)
If error:   result = "0^<error message>" 
"KRN",8994,2306,-1)
0^2
"KRN",8994,2306,0)
MAG3 TIU LONG LIST OF TITLES^LIST^MAGGNTI2^2^R^^^1
"KRN",8994,2306,1,0)
^8994.01^2^2^3061107^^^^
"KRN",8994,2306,1,1,0)
For the Document Class that is input,
"KRN",8994,2306,1,2,0)
 get a list of Progress Note titles
"KRN",8994,2306,2,0)
^8994.02A^2^2
"KRN",8994,2306,2,1,0)
CLASS^1^100^1^1
"KRN",8994,2306,2,1,1,0)
^8994.021^1^1^3061107^^^^
"KRN",8994,2306,2,1,1,1,0)
"," Delimited list of Classes to get the list of Note Titles for.
"KRN",8994,2306,2,2,0)
MYLIST^1^30^0^2
"KRN",8994,2306,2,2,1,0)
^8994.021^2^2^3061107^^
"KRN",8994,2306,2,2,1,1,0)
If '1', then return list of 'Users' TIU Titles.
"KRN",8994,2306,2,2,1,2,0)
If '0' or null, then return long list of titles.
"KRN",8994,2306,2,"B","CLASS",1)

"KRN",8994,2306,2,"B","MYLIST",2)

"KRN",8994,2306,2,"PARAMSEQ",1,1)

"KRN",8994,2306,2,"PARAMSEQ",2,2)

"KRN",8994,2306,3,0)
^8994.03^1^1^3061107^^^^
"KRN",8994,2306,3,1,0)
Returns a list of Note Titles for the class.
"KRN",8994,2307,-1)
0^4
"KRN",8994,2307,0)
MAG3 TIU CREATE ADDENDUM^NEWADD^MAGGNTI1^1^R
"KRN",8994,2307,1,0)
^8994.01^6^6^3070206^^^^
"KRN",8994,2307,1,1,0)
Creates a TIU Addendum to a document.
"KRN",8994,2307,1,2,0)
  RPC call to create an Addendum to a Note
"KRN",8994,2307,1,3,0)
  and Optionally :  
"KRN",8994,2307,1,4,0)
           Electronically Sign the Addendum
"KRN",8994,2307,1,5,0)
           Administratively Close the Addendum
"KRN",8994,2307,1,6,0)
           Add Text to the Addendum
"KRN",8994,2307,2,0)
^8994.02A^8^8
"KRN",8994,2307,2,1,0)
MAGDFN^1^30^1^1
"KRN",8994,2307,2,1,1,0)
^^1^1^3050517^
"KRN",8994,2307,2,1,1,1,0)
DFN of the Patient.
"KRN",8994,2307,2,2,0)
MAGTIUDA^1^60^1^2
"KRN",8994,2307,2,2,1,0)
^^1^1^3050517^
"KRN",8994,2307,2,2,1,1,0)
This is the IEN of the Note in file ^TIU(8925
"KRN",8994,2307,2,3,0)
MAGADCL^1^60^0^3
"KRN",8994,2307,2,3,1,0)
^^2^2^3050517^
"KRN",8994,2307,2,3,1,1,0)
 1 = Mark this Note as Administratively Closed
"KRN",8994,2307,2,3,1,2,0)
 otherwise it will be Un-Signed
"KRN",8994,2307,2,4,0)
MAGMODE^1^30^0^4
"KRN",8994,2307,2,4,1,0)
^^3^3^3050517^
"KRN",8994,2307,2,4,1,1,0)
Mode of Admin Closure:
"KRN",8994,2307,2,4,1,2,0)
"S" = Scanned Document
"KRN",8994,2307,2,4,1,3,0)
"M" = Manual closure
"KRN",8994,2307,2,5,0)
MAGES^1^60^0^5
"KRN",8994,2307,2,5,1,0)
^8994.021^1^1^3070206^^
"KRN",8994,2307,2,5,1,1,0)
The encrypted Electronic Signature
"KRN",8994,2307,2,6,0)
MAGESBY^1^90^0^6
"KRN",8994,2307,2,6,1,0)
^^1^1^3050517^
"KRN",8994,2307,2,6,1,1,0)
 The DUZ of the Signer (Defaults to DUZ)
"KRN",8994,2307,2,7,0)
MAGTEXT^2^3200^0^7
"KRN",8994,2307,2,7,1,0)
^^1^1^3050517^
"KRN",8994,2307,2,7,1,1,0)
Array of Text to add to the New Note.
"KRN",8994,2307,2,8,0)
MAGDATE^1^40^0^7
"KRN",8994,2307,2,8,1,0)
^^1^1^3050727^
"KRN",8994,2307,2,8,1,1,0)
The Date of the New TIU Note/Addendum
"KRN",8994,2307,2,"B","MAGADCL",3)

"KRN",8994,2307,2,"B","MAGDATE",8)

"KRN",8994,2307,2,"B","MAGDFN",1)

"KRN",8994,2307,2,"B","MAGES",5)

"KRN",8994,2307,2,"B","MAGESBY",6)

"KRN",8994,2307,2,"B","MAGMODE",4)

"KRN",8994,2307,2,"B","MAGTEXT",7)

"KRN",8994,2307,2,"B","MAGTIUDA",2)

"KRN",8994,2307,2,"PARAMSEQ",1,1)

"KRN",8994,2307,2,"PARAMSEQ",2,2)

"KRN",8994,2307,2,"PARAMSEQ",3,3)

"KRN",8994,2307,2,"PARAMSEQ",4,4)

"KRN",8994,2307,2,"PARAMSEQ",5,5)

"KRN",8994,2307,2,"PARAMSEQ",6,6)

"KRN",8994,2307,2,"PARAMSEQ",7,7)

"KRN",8994,2307,2,"PARAMSEQ",7,8)

"KRN",8994,2307,3,0)
^8994.03^9^9^3050727^^
"KRN",8994,2307,3,1,0)
If success :
"KRN",8994,2307,3,2,0)
    result = "<TIU IEN>^Addendum was created."
"KRN",8994,2307,3,3,0)
If success and Administratively Closed.
"KRN",8994,2307,3,4,0)
    result ="<TIU IEN>^Addendum was created. Administrative Closure."
"KRN",8994,2307,3,5,0)
If success and signed.
"KRN",8994,2307,3,6,0)
    result ="<TIU IEN>^Addendum was created.  Signed."
"KRN",8994,2307,3,7,0)
  
"KRN",8994,2307,3,8,0)
If error: 
"KRN",8994,2307,3,9,0)
    result ="0^<error message>"
"KRN",8994,2308,-1)
0^5
"KRN",8994,2308,0)
MAG3 TIU SIGN RECORD^SIGN^MAGGNTI1^1^R
"KRN",8994,2308,1,0)
^8994.01^3^3^3070206^^^^
"KRN",8994,2308,1,1,0)
Calls TIU API : SIGN^TIUSRVP
"KRN",8994,2308,1,2,0)
If the call succeeds the Note will be changed to 'completed'
"KRN",8994,2308,1,3,0)
If the call fails, the Note status will not be changed.
"KRN",8994,2308,2,0)
^8994.02A^4^4
"KRN",8994,2308,2,1,0)
MAGDFN^1^60^1^1
"KRN",8994,2308,2,1,1,0)
^8994.021^1^1^3050517^^^
"KRN",8994,2308,2,1,1,1,0)
Patient DFN
"KRN",8994,2308,2,2,0)
MAGTIUDA^1^60^1^2
"KRN",8994,2308,2,2,1,0)
^8994.021^1^1^3050517^^^
"KRN",8994,2308,2,2,1,1,0)
The TIU Document IEN from File ^TIU(8925
"KRN",8994,2308,2,3,0)
MAGES^1^60^1^3
"KRN",8994,2308,2,3,1,0)
^8994.021^1^1^3050517^^^
"KRN",8994,2308,2,3,1,1,0)
The users encrypted Electronic Signature.
"KRN",8994,2308,2,4,0)
MAGESBY^1^30^0^4
"KRN",8994,2308,2,4,1,0)
^8994.021^1^1^3070206^^^^
"KRN",8994,2308,2,4,1,1,0)
The DUZ of the Signer (defaults to Partition Variable: DUZ)
"KRN",8994,2308,2,"B","MAGDFN",1)

"KRN",8994,2308,2,"B","MAGES",3)

"KRN",8994,2308,2,"B","MAGESBY",4)

"KRN",8994,2308,2,"B","MAGTIUDA",2)

"KRN",8994,2308,2,"PARAMSEQ",1,1)

"KRN",8994,2308,2,"PARAMSEQ",2,2)

"KRN",8994,2308,2,"PARAMSEQ",3,3)

"KRN",8994,2308,2,"PARAMSEQ",4,4)

"KRN",8994,2308,3,0)
^8994.03^2^2^3070206^^^
"KRN",8994,2308,3,1,0)
If success the result is:  "1^Success: Note has been Signed."
"KRN",8994,2308,3,2,0)
If error the result is: "0^<error message>"
"KRN",8994,2309,-1)
0^10
"KRN",8994,2309,0)
MAG3 TIU MODIFY NOTE^MOD^MAGGNTI1^1^R
"KRN",8994,2309,1,0)
^8994.01^3^3^3070206^^^^
"KRN",8994,2309,1,1,0)
Modify an Existing Note. 
"KRN",8994,2309,1,2,0)
Change it's status from unsigned to administrative closure
"KRN",8994,2309,1,3,0)
or to signed.
"KRN",8994,2309,2,0)
^8994.02A^7^7
"KRN",8994,2309,2,1,0)
MAGDFN^1^60^1^1
"KRN",8994,2309,2,1,1,0)
^^1^1^3050520^
"KRN",8994,2309,2,1,1,1,0)
DFN of the Patient.
"KRN",8994,2309,2,2,0)
MAGTIUDA^1^60^1^2
"KRN",8994,2309,2,2,1,0)
^^1^1^3050520^
"KRN",8994,2309,2,2,1,1,0)
This is the IEN of the Note in file ^TIU(8925
"KRN",8994,2309,2,3,0)
MAGADCL^1^10^1^3
"KRN",8994,2309,2,3,1,0)
^^2^2^3050520^
"KRN",8994,2309,2,3,1,1,0)
 1 = Mark this Note as Administratively Closed
"KRN",8994,2309,2,3,1,2,0)
 otherwise it will be Un-Signed
"KRN",8994,2309,2,4,0)
MAGMODE^1^20^1^4
"KRN",8994,2309,2,4,1,0)
^^3^3^3050520^
"KRN",8994,2309,2,4,1,1,0)
Mode of Admin Closure:
"KRN",8994,2309,2,4,1,2,0)
"S" = Scanned Document
"KRN",8994,2309,2,4,1,3,0)
"M" = Manual closure
"KRN",8994,2309,2,5,0)
MAGES^1^90^0^5
"KRN",8994,2309,2,5,1,0)
^8994.021^1^1^3070206^^^
"KRN",8994,2309,2,5,1,1,0)
The encrypted Electronic Signature
"KRN",8994,2309,2,6,0)
MAGESBY^1^90^0^6
"KRN",8994,2309,2,6,1,0)
^^1^1^3050520^
"KRN",8994,2309,2,6,1,1,0)
 The DUZ of the Signer (Defaults to DUZ)
"KRN",8994,2309,2,7,0)
MAGTEXT^2^3200^0^7
"KRN",8994,2309,2,7,1,0)
^^1^1^3050520^
"KRN",8994,2309,2,7,1,1,0)
Array of Text to add to the Note.
"KRN",8994,2309,2,"B","MAGADCL",3)

"KRN",8994,2309,2,"B","MAGDFN",1)

"KRN",8994,2309,2,"B","MAGES",5)

"KRN",8994,2309,2,"B","MAGESBY",6)

"KRN",8994,2309,2,"B","MAGMODE",4)

"KRN",8994,2309,2,"B","MAGTEXT",7)

"KRN",8994,2309,2,"B","MAGTIUDA",2)

"KRN",8994,2309,2,"PARAMSEQ",1,1)

"KRN",8994,2309,2,"PARAMSEQ",2,2)

"KRN",8994,2309,2,"PARAMSEQ",3,3)

"KRN",8994,2309,2,"PARAMSEQ",4,4)

"KRN",8994,2309,2,"PARAMSEQ",5,5)

"KRN",8994,2309,2,"PARAMSEQ",6,6)

"KRN",8994,2309,2,"PARAMSEQ",7,7)

"KRN",8994,2309,3,0)
^8994.03^10^10^3070206^^
"KRN",8994,2309,3,1,0)
If success :
"KRN",8994,2309,3,2,0)
   result = "<TIU IEN>^Addendum was created."
"KRN",8994,2309,3,3,0)
If success and Administratively Closed.
"KRN",8994,2309,3,4,0)
  result ="<TIU IEN>^Addendum was created...
"KRN",8994,2309,3,5,0)
                             Administrative Closure."
"KRN",8994,2309,3,6,0)
If success and signed.
"KRN",8994,2309,3,7,0)
  result ="<TIU IEN>^Addendum was created.  Signed."
"KRN",8994,2309,3,8,0)
   
"KRN",8994,2309,3,9,0)
If error:
"KRN",8994,2309,3,10,0)
  result ="0^<error message>"
"KRN",8994,2310,-1)
0^12
"KRN",8994,2310,0)
MAG4 VERSION STATUS^VERSTAT^MAGGTU4^1^R
"KRN",8994,2310,1,0)
^^1^1^3050919^
"KRN",8994,2310,1,1,0)
RPC to evaluate the status of an Imaging Version.
"KRN",8994,2310,2,0)
^8994.02A^1^1
"KRN",8994,2310,2,1,0)
MAGVER^1^100^1^1
"KRN",8994,2310,2,1,1,0)
^^2^2^3050919^
"KRN",8994,2310,2,1,1,1,0)
The Imaging Version to be checked.  In the format
"KRN",8994,2310,2,1,1,2,0)
   MAG*3.0*59   or   3.0.59
"KRN",8994,2310,2,"B","MAGVER",1)

"KRN",8994,2310,2,"PARAMSEQ",1,1)

"KRN",8994,2310,3,0)
^^5^5^3050919^
"KRN",8994,2310,3,1,0)
String
"KRN",8994,2310,3,2,0)
        0^No Install record for KIDs Build : MAGVER
"KRN",8994,2310,3,3,0)
        1^Unknown Release Status for : MAGVER
"KRN",8994,2310,3,4,0)
        2^Alpha/Beta Version
"KRN",8994,2310,3,5,0)
        3^Released Version
"KRN",8994,2311,-1)
0^14
"KRN",8994,2311,0)
MAGG IS DOC CLASS^ISDOCCL^MAGGNTI^1^R
"KRN",8994,2311,1,0)
^8994.01^1^1^3061108^^^
"KRN",8994,2311,1,1,0)
Checks to see if IEN of TIU Files 8925 or 8925.1 is of a certain Doc Class
"KRN",8994,2311,2,0)
^8994.02A^3^3
"KRN",8994,2311,2,1,0)
IEN^1^30^1^1
"KRN",8994,2311,2,1,1,0)
^^1^1^3061101^
"KRN",8994,2311,2,1,1,1,0)
Internal Entry Number in the TIUFILE
"KRN",8994,2311,2,2,0)
TIUFILE^1^10^1^2
"KRN",8994,2311,2,2,1,0)
^^2^2^3061101^
"KRN",8994,2311,2,2,1,1,0)
 IS - 8925   if we need to see if a Note is of a Document Class
"KRN",8994,2311,2,2,1,2,0)
 IS - 8925.1 if we need to see if a Title is of a Document Class
"KRN",8994,2311,2,3,0)
CLASS^1^60^1^3
"KRN",8994,2311,2,3,1,0)
^8994.021^1^1^3061108^^^
"KRN",8994,2311,2,3,1,1,0)
Text Name of the Document Class   example: "ADVANCE DIRECTIVE"
"KRN",8994,2311,2,"B","CLASS",3)

"KRN",8994,2311,2,"B","IEN",1)

"KRN",8994,2311,2,"B","TIUFILE",2)

"KRN",8994,2311,2,"PARAMSEQ",1,1)

"KRN",8994,2311,2,"PARAMSEQ",2,2)

"KRN",8994,2311,2,"PARAMSEQ",3,3)

"KRN",8994,2311,3,0)
^8994.03^3^3^3061108^^^
"KRN",8994,2311,3,1,0)
MAGRY= Return String  
"KRN",8994,2311,3,2,0)
  for Success   "1^message"
"KRN",8994,2311,3,3,0)
  for Failure  "0^message"
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020517^126
"PKG",454,22,1,"PAH",1,0)
59^3080201^1216
"PKG",454,22,1,"PAH",1,1,0)
^^71^71^3080201
"PKG",454,22,1,"PAH",1,1,1,0)
This will check the routines from a BUILD file.
"PKG",454,22,1,"PAH",1,1,2,0)
Select BUILD NAME:    MAG*3.0*59     IMAGING
"PKG",454,22,1,"PAH",1,1,3,0)
MAGBAPIP  value = 9049823
"PKG",454,22,1,"PAH",1,1,4,0)
MAGGNLKP  value = 14546243
"PKG",454,22,1,"PAH",1,1,5,0)
MAGGNTI   value = 37673155
"PKG",454,22,1,"PAH",1,1,6,0)
MAGGNTI1  value = 44242412
"PKG",454,22,1,"PAH",1,1,7,0)
MAGGNTI2  value = 21199592
"PKG",454,22,1,"PAH",1,1,8,0)
MAGGNTI3  value = 11336428
"PKG",454,22,1,"PAH",1,1,9,0)
MAGGSIA   value = 37580788
"PKG",454,22,1,"PAH",1,1,10,0)
MAGGSIA1  value = 40441705
"PKG",454,22,1,"PAH",1,1,11,0)
MAGGSIU2  value = 19991293
"PKG",454,22,1,"PAH",1,1,12,0)
MAGGSIUI  value = 44173317
"PKG",454,22,1,"PAH",1,1,13,0)
MAGGSIV   value = 39311019
"PKG",454,22,1,"PAH",1,1,14,0)
MAGGSIV1  value = 22249629
"PKG",454,22,1,"PAH",1,1,15,0)
MAGGTAU   value = 53570032
"PKG",454,22,1,"PAH",1,1,16,0)
MAGGTERR  value = 6185941
"PKG",454,22,1,"PAH",1,1,17,0)
MAGGTIA1  value = 34754160
"PKG",454,22,1,"PAH",1,1,18,0)
MAGGTID   value = 44603396
"PKG",454,22,1,"PAH",1,1,19,0)
MAGGTII   value = 43921962
"PKG",454,22,1,"PAH",1,1,20,0)
MAGGTLB1  value = 24325063
"PKG",454,22,1,"PAH",1,1,21,0)
MAGGTMC1  value = 10841224
"PKG",454,22,1,"PAH",1,1,22,0)
MAGGTPT1  value = 32058249
"PKG",454,22,1,"PAH",1,1,23,0)
MAGGTRA   value = 11950621
"PKG",454,22,1,"PAH",1,1,24,0)
MAGGTSR   value = 18209701
"PKG",454,22,1,"PAH",1,1,25,0)
MAGGTSR1  value = 6582516
"PKG",454,22,1,"PAH",1,1,26,0)
MAGGTSY2  value = 5995567
"PKG",454,22,1,"PAH",1,1,27,0)
MAGGTSYS  value = 11307252
"PKG",454,22,1,"PAH",1,1,28,0)
MAGGTU1   value = 7410851
"PKG",454,22,1,"PAH",1,1,29,0)
MAGGTU3   value = 33146590
"PKG",454,22,1,"PAH",1,1,30,0)
MAGGTU31  value = 37368094
"PKG",454,22,1,"PAH",1,1,31,0)
MAGGTU4   value = 39449032
"PKG",454,22,1,"PAH",1,1,32,0)
MAGGTU41  value = 29145844
"PKG",454,22,1,"PAH",1,1,33,0)
MAGGTU6   value = 48411406
"PKG",454,22,1,"PAH",1,1,34,0)
MAGGTU71  value = 12408880
"PKG",454,22,1,"PAH",1,1,35,0)
MAGGTU9   value = 41693963
"PKG",454,22,1,"PAH",1,1,36,0)
MAGGTUP   value = 22068923
"PKG",454,22,1,"PAH",1,1,37,0)
MAGGTUX   value = 84671980
"PKG",454,22,1,"PAH",1,1,38,0)
MAGGTUX1  value = 47937341
"PKG",454,22,1,"PAH",1,1,39,0)
MAGGTUX2  value = 16893557
"PKG",454,22,1,"PAH",1,1,40,0)
MAGGTUX3  value = 20033133
"PKG",454,22,1,"PAH",1,1,41,0)
MAGIPS59  value = 30034575
"PKG",454,22,1,"PAH",1,1,42,0)
MAGLOG    value = 8166700
"PKG",454,22,1,"PAH",1,1,43,0)
MAGSIXG1  value = 48513335
"PKG",454,22,1,"PAH",1,1,44,0)
MAGSIXGT  value = 67629374
"PKG",454,22,1,"PAH",1,1,45,0)
done
"PKG",454,22,1,"PAH",1,1,46,0)
 
"PKG",454,22,1,"PAH",1,1,47,0)
TIU Enhancements patch.
"PKG",454,22,1,"PAH",1,1,48,0)
Adds functionality to Capture Application that will allow user to: 
"PKG",454,22,1,"PAH",1,1,49,0)
Create a New TIU Note
"PKG",454,22,1,"PAH",1,1,50,0)
Create an Addendum to an existing signed TIU Note.
"PKG",454,22,1,"PAH",1,1,51,0)
Set the status of the new note/addendum to
"PKG",454,22,1,"PAH",1,1,52,0)
 - unsigned
"PKG",454,22,1,"PAH",1,1,53,0)
 - administrative closure
"PKG",454,22,1,"PAH",1,1,54,0)
 - Signed.
"PKG",454,22,1,"PAH",1,1,55,0)
  
"PKG",454,22,1,"PAH",1,1,56,0)
Displays the Note Title from the TIU Document file (8925) in the
"PKG",454,22,1,"PAH",1,1,57,0)
  Image List Window of Imaging Display, this assures 
"PKG",454,22,1,"PAH",1,1,58,0)
display of the current Note title because Note Titles sometimes change.
"PKG",454,22,1,"PAH",1,1,59,0)
  
"PKG",454,22,1,"PAH",1,1,60,0)
Imaging Display
"PKG",454,22,1,"PAH",1,1,61,0)
 - Stops users that do not have an Imaging Display security from signing 
"PKG",454,22,1,"PAH",1,1,62,0)
on to Imaging Display. User needs either MAGDISP CLIN or
"PKG",454,22,1,"PAH",1,1,63,0)
MAGDISP ADMIN or both.
"PKG",454,22,1,"PAH",1,1,64,0)
  
"PKG",454,22,1,"PAH",1,1,65,0)
Imaging Capture
"PKG",454,22,1,"PAH",1,1,66,0)
Automatically generates Index Values for new Images that do not have 
"PKG",454,22,1,"PAH",1,1,67,0)
index values as input data.  This happens when Applications using the 
"PKG",454,22,1,"PAH",1,1,68,0)
Import API or Imaging Capture Client versions prior to version 3.0.8
"PKG",454,22,1,"PAH",1,1,69,0)
Index Term Fix:
"PKG",454,22,1,"PAH",1,1,70,0)
Iterate through the entire Image Global and Fix the Index Terms if
"PKG",454,22,1,"PAH",1,1,71,0)
Type Index is missing.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
42
"RTN","MAGBAPIP")
0^41^B9049823
"RTN","MAGBAPIP",1,0)
MAGBAPIP ;WOIFO/MLH - Background Processor API to build queues - Modules for place
"RTN","MAGBAPIP",2,0)
 ;;3.0;IMAGING;**1,7,8,20,59**;Nov 27, 2007;Build 20
"RTN","MAGBAPIP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGBAPIP",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBAPIP",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGBAPIP",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGBAPIP",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGBAPIP",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGBAPIP",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGBAPIP",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGBAPIP",11,0)
 ;; |                                                               |
"RTN","MAGBAPIP",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGBAPIP",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGBAPIP",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGBAPIP",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGBAPIP",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGBAPIP",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGBAPIP",18,0)
 ;;
"RTN","MAGBAPIP",19,0)
DUZ2PLC(WARN) ;Convert DUZ to a PLACE. File 2006.1 entry (PLACE)
"RTN","MAGBAPIP",20,0)
 ; Extrinsic : Always returns a PLACE
"RTN","MAGBAPIP",21,0)
 ; WARN          : message about where the PLACE was derived from.
"RTN","MAGBAPIP",22,0)
 ; Compute the Users Institution for older versions of Imaging Display workstation.
"RTN","MAGBAPIP",23,0)
 ; This is called when DUZ(2) doesn't exist Or Can't resolve DUZ(2)
"RTN","MAGBAPIP",24,0)
 ;  into site param entry.  This solved a GateWay Problem where DUZ(2) didn't
"RTN","MAGBAPIP",25,0)
 ;  exist.  - Shouldn't get here anymore, that was fixed.
"RTN","MAGBAPIP",26,0)
 N MAGINST,DIVDTA,PLACE
"RTN","MAGBAPIP",27,0)
 S MAGINST=0
"RTN","MAGBAPIP",28,0)
 D GETS^DIQ(200,DUZ,"16*","I","DIVDTA") ; look up Division field
"RTN","MAGBAPIP",29,0)
 ;                                 ? Any division data on file for this user
"RTN","MAGBAPIP",30,0)
 I $D(DIVDTA) D  ; yes, use it
"RTN","MAGBAPIP",31,0)
 . S MAGINST=@$Q(DIVDTA),WARN="Using first Division of New Person File."
"RTN","MAGBAPIP",32,0)
 . Q
"RTN","MAGBAPIP",33,0)
 E  D  ;                   no, use default site param?
"RTN","MAGBAPIP",34,0)
 . S MAGINST=$$KSP^XUPARAM("INST"),WARN="Using Kernel Site Param default entry." Q
"RTN","MAGBAPIP",35,0)
 . Q
"RTN","MAGBAPIP",36,0)
 S PLACE=$$GETPLACE^MAGBAPI(+$$PLACE^MAGBAPI(MAGINST))
"RTN","MAGBAPIP",37,0)
 I 'PLACE S PLACE=$O(^MAG(2006.1,0)),WARN="Using First Site Param entry."
"RTN","MAGBAPIP",38,0)
 Q PLACE
"RTN","MAGBAPIP",39,0)
 ;
"RTN","MAGBAPIP",40,0)
DA2PLC(MAGDA,TYPE) ; Get Place from Image File IEN
"RTN","MAGBAPIP",41,0)
 ; TYPE :        Possible values "A" Abstract, "F" Full Res or "B" Big File
"RTN","MAGBAPIP",42,0)
 ; (defaults to "F" if null)
"RTN","MAGBAPIP",43,0)
 ; Resolve Place (PLC) using the Acquisition Site field (ACQS)
"RTN","MAGBAPIP",44,0)
 ; IF ACQS is null or not doesn't exist in the site parameter file
"RTN","MAGBAPIP",45,0)
 ; THEN Resolve PLC using NetWork Location pointer
"RTN","MAGBAPIP",46,0)
 ; 
"RTN","MAGBAPIP",47,0)
 N MAGREF,MAG0,FBIG,SITE,PLC,MAGJB
"RTN","MAGBAPIP",48,0)
 I '$G(MAGDA) Q 0
"RTN","MAGBAPIP",49,0)
 S SITE=$P($G(^MAG(2005,MAGDA,100)),U,3)
"RTN","MAGBAPIP",50,0)
 I SITE S PLC=$$PLACE^MAGBAPI(SITE) Q:PLC PLC
"RTN","MAGBAPIP",51,0)
 ; p59  Stop the error when an Image is Deleted.
"RTN","MAGBAPIP",52,0)
 S MAG0=$G(^MAG(2005,MAGDA,0)) Q:MAG0="" 0
"RTN","MAGBAPIP",53,0)
 ;
"RTN","MAGBAPIP",54,0)
 S TYPE=$E($G(TYPE)_"F",1)
"RTN","MAGBAPIP",55,0)
 I "AF"[TYPE D
"RTN","MAGBAPIP",56,0)
 . S MAGREF=$S(TYPE="A":+$P(MAG0,"^",4),1:+$P(MAG0,"^",3))
"RTN","MAGBAPIP",57,0)
 . I MAGREF=0 S MAGJB=1,MAGREF=+$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGBAPIP",58,0)
 I "B"[TYPE D
"RTN","MAGBAPIP",59,0)
 . S FBIG=$G(^MAG(2005,MAGDA,"FBIG"))
"RTN","MAGBAPIP",60,0)
 . S MAGREF=+$P(FBIG,"^") ; get file from magnetic disk, if possible
"RTN","MAGBAPIP",61,0)
 . I MAGREF=0 S MAGREF=+$P(FBIG,"^",2) ; get file from jukebox
"RTN","MAGBAPIP",62,0)
 I 'MAGREF Q 0
"RTN","MAGBAPIP",63,0)
 I '$D(^MAG(2005.2,MAGREF,0)) Q 0
"RTN","MAGBAPIP",64,0)
 Q $$GETPLACE^MAGBAPI(+$$GET1^DIQ(2005.2,MAGREF,.04,"I"))
"RTN","MAGGNLKP")
0^31^B14546243
"RTN","MAGGNLKP",1,0)
MAGGNLKP ;WOIFO/GEK - Lookup from delphi into any file ; [ 06/20/2001 08:56 ]
"RTN","MAGGNLKP",2,0)
 ;;3.0;IMAGING;**8,92,46,59**;Nov 27, 2007;Build 20
"RTN","MAGGNLKP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGNLKP",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNLKP",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGNLKP",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNLKP",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNLKP",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGNLKP",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGNLKP",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGNLKP",11,0)
 ;; |                                                               |
"RTN","MAGGNLKP",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNLKP",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNLKP",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNLKP",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNLKP",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGNLKP",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNLKP",18,0)
 ;;
"RTN","MAGGNLKP",19,0)
 Q
"RTN","MAGGNLKP",20,0)
 ;
"RTN","MAGGNLKP",21,0)
LKP(MAGRY,MAGIN,DATA) ;RPC [MAG3 LOOKUP ANY] 
"RTN","MAGGNLKP",22,0)
 ; Generic lookup using FIND^DIC
"RTN","MAGGNLKP",23,0)
 ; MAGRY is the Array to return.
"RTN","MAGGNLKP",24,0)
 ; MAGIN is parameter sent by calling app (Delphi)
"RTN","MAGGNLKP",25,0)
 ;    FILE NUM ^ NUM TO RETURN ^ TEXT TO MATCH ^ FIELDS ^ SCREEN ($P 5-99)
"RTN","MAGGNLKP",26,0)
 ;    
"RTN","MAGGNLKP",27,0)
 ; DATA : 
"RTN","MAGGNLKP",28,0)
 ;  LVIEW =Piece 1 
"RTN","MAGGNLKP",29,0)
 ;     +LVIEW = 1  :  
"RTN","MAGGNLKP",30,0)
 ;          result array is formatted for a magListView control
"RTN","MAGGNLKP",31,0)
 ;              i.e.  ^ delimiter for data and "|" delimiter for IEN
"RTN","MAGGNLKP",32,0)
 ;     +LVIEW = 0  : 
"RTN","MAGGNLKP",33,0)
 ;         old way,  "  " delim for data and '^' delim for IEN
"RTN","MAGGNLKP",34,0)
 ;  INDX = Piece 2
"RTN","MAGGNLKP",35,0)
 ;                       This is the index to search 
"RTN","MAGGNLKP",36,0)
 ;                       Defaults to "B"
"RTN","MAGGNLKP",37,0)
 ;    
"RTN","MAGGNLKP",38,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGNLKP",39,0)
 ;
"RTN","MAGGNLKP",40,0)
 N Y,XI,Z,FI,MAGIEN,INFO,LVIEW,INDX
"RTN","MAGGNLKP",41,0)
 N FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT
"RTN","MAGGNLKP",42,0)
 S (FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)=""
"RTN","MAGGNLKP",43,0)
 S MAGIN=$G(MAGIN)
"RTN","MAGGNLKP",44,0)
 S DATA=$G(DATA)
"RTN","MAGGNLKP",45,0)
 ;
"RTN","MAGGNLKP",46,0)
 S FILE=+$P(MAGIN,U,1)
"RTN","MAGGNLKP",47,0)
 S NUM=$S(+$P(MAGIN,U,2):+$P(MAGIN,U,2),1:200)
"RTN","MAGGNLKP",48,0)
 S VAL=$P(MAGIN,U,3)
"RTN","MAGGNLKP",49,0)
 S FLDS=$P(MAGIN,U,4)
"RTN","MAGGNLKP",50,0)
 S SCR=$P(MAGIN,U,5,99)
"RTN","MAGGNLKP",51,0)
 ;
"RTN","MAGGNLKP",52,0)
 S LVIEW=+$P(DATA,"^",1)
"RTN","MAGGNLKP",53,0)
 S INDX=$S($L($P(DATA,"^",2)):$P(DATA,"^",2),1:"B")
"RTN","MAGGNLKP",54,0)
 ;
"RTN","MAGGNLKP",55,0)
 I 'FILE S MAGRY(1)="0^ERROR - Invalid Parameter:  File Number ? " Q
"RTN","MAGGNLKP",56,0)
 I '$$VFILE^DILFD(FILE) S MAGRY(1)="0^ERROR - Invalid File # - "_FILE Q
"RTN","MAGGNLKP",57,0)
 ;          Number of entries to return, If 0 we'll stop at 200
"RTN","MAGGNLKP",58,0)
 ;
"RTN","MAGGNLKP",59,0)
 K ^TMP("DILIST",$J)
"RTN","MAGGNLKP",60,0)
 K ^TMP("DIERR",$J)
"RTN","MAGGNLKP",61,0)
 ;  VAL is the initial value to search for. i.e. the user input.
"RTN","MAGGNLKP",62,0)
 ;  Next line is to stop the FM Infinite Error Trap problem.
"RTN","MAGGNLKP",63,0)
 I $L(VAL)>30 S MAGRY(0)="0^Invalid Input: '"_$E(VAL,1,40)_"...' is too long. "_$L(VAL)_" characters." Q
"RTN","MAGGNLKP",64,0)
 D FIND^DIC(FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)
"RTN","MAGGNLKP",65,0)
 ;
"RTN","MAGGNLKP",66,0)
 I '$D(^TMP("DILIST",$J,1)) S XI=1 D  Q
"RTN","MAGGNLKP",67,0)
 . I $D(^TMP("DIERR",$J)) D FINDERR(XI) Q
"RTN","MAGGNLKP",68,0)
 . S MAGRY(XI)="0^NO MATCH for lookup on """_$P(MAGIN,"^",3)_""""
"RTN","MAGGNLKP",69,0)
 ;  so we have some matches, (BUT we could still have an error)
"RTN","MAGGNLKP",70,0)
 ;  so first list all matches, then the ERROR
"RTN","MAGGNLKP",71,0)
 ;  Next lines were Q&D but old .EXE's expect return string with 
"RTN","MAGGNLKP",72,0)
 ;  this syntax, when all T11 code is gone, this can be rewritten
"RTN","MAGGNLKP",73,0)
 I LVIEW S XI="" F  S XI=$O(^TMP("DILIST",$J,1,XI)) Q:XI=""  S X=^(XI) D
"RTN","MAGGNLKP",74,0)
 . S MAGIEN=^TMP("DILIST",$J,2,XI)
"RTN","MAGGNLKP",75,0)
 . S Z=".01",FLD="NAME"
"RTN","MAGGNLKP",76,0)
 . F  S Z=$O(^TMP("DILIST",$J,"ID",XI,Z)) Q:Z=""  S X=X_"^"_^(Z),FLD=FLD_"^"_$$GET1^DID(FILE,Z,"","LABEL","MAGFLD")
"RTN","MAGGNLKP",77,0)
 . S MAGRY(.05)=FLD
"RTN","MAGGNLKP",78,0)
 . S MAGRY(XI)=X_"^|"_MAGIEN
"RTN","MAGGNLKP",79,0)
 . Q
"RTN","MAGGNLKP",80,0)
 I 'LVIEW  S XI="" F  S XI=$O(^TMP("DILIST",$J,1,XI)) Q:XI=""  S X=^(XI) D
"RTN","MAGGNLKP",81,0)
 . S MAGIEN=^TMP("DILIST",$J,2,XI)
"RTN","MAGGNLKP",82,0)
 . S Z=""
"RTN","MAGGNLKP",83,0)
 . F  S Z=$O(^TMP("DILIST",$J,"ID",XI,Z)) Q:Z=""  S X=X_"   "_^(Z)
"RTN","MAGGNLKP",84,0)
 . S MAGRY(XI)=X_"^"_MAGIEN
"RTN","MAGGNLKP",85,0)
 . Q
"RTN","MAGGNLKP",86,0)
 I $D(^TMP("DIERR",$J)) D FINDERR() Q
"RTN","MAGGNLKP",87,0)
 I $D(^TMP("DILIST",$J,0)) S INFO=^(0) D
"RTN","MAGGNLKP",88,0)
 . S MAGRY(0)=$P(INFO,"^")_U_"Found "_$P(INFO,"^")_" entr"_$S((+INFO=1):"y",1:"ies")_" matching """_$P(MAGIN,"^",3)_""""
"RTN","MAGGNLKP",89,0)
 . I $P(INFO,"^",3)>0 S MAGRY(0)=MAGRY(0)_" there are more"
"RTN","MAGGNLKP",90,0)
 . Q
"RTN","MAGGNLKP",91,0)
 Q
"RTN","MAGGNLKP",92,0)
FINDERR(XI) ;
"RTN","MAGGNLKP",93,0)
 ;
"RTN","MAGGNLKP",94,0)
 I '+$G(XI) S XI=$O(MAGRY(""),-1)+1
"RTN","MAGGNLKP",95,0)
 S MAGRY(XI)="ERROR^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","MAGGNLKP",96,0)
 Q
"RTN","MAGGNTI")
0^23^B37673155
"RTN","MAGGNTI",1,0)
MAGGNTI ;WOIFO/GEK - Imaging interface to TIU RPC Calls etc. ; 04 Apr 2002  2:37 PM
"RTN","MAGGNTI",2,0)
 ;;3.0;IMAGING;**10,8,59**;Nov 27, 2007;Build 20
"RTN","MAGGNTI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGNTI",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGNTI",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNTI",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNTI",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGNTI",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGNTI",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGNTI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNTI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNTI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNTI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNTI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGNTI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI",17,0)
 ;;
"RTN","MAGGNTI",18,0)
 Q
"RTN","MAGGNTI",19,0)
FILE(MAGRY,MAGDA,TIUDA) ;RPC [MAG3 TIU IMAGE]
"RTN","MAGGNTI",20,0)
 ; Call to file TIU and Imaging Pointers
"RTN","MAGGNTI",21,0)
 ; TIU API to add image to TIU
"RTN","MAGGNTI",22,0)
 N X
"RTN","MAGGNTI",23,0)
 I $P(^TIU(8925,TIUDA,0),U,2)'=$P(^MAG(2005,MAGDA,0),U,7) S MAGRY="0^Patient Mismatch." Q
"RTN","MAGGNTI",24,0)
 D PUTIMAGE^TIUSRVPL(.MAGRY,TIUDA,MAGDA) ;
"RTN","MAGGNTI",25,0)
 I 'MAGRY Q
"RTN","MAGGNTI",26,0)
 ; Now SET the Parent fields in the Image File
"RTN","MAGGNTI",27,0)
 S $P(^MAG(2005,MAGDA,2),U,6,8)=8925_U_TIUDA_U_+MAGRY
"RTN","MAGGNTI",28,0)
 ; DONE.
"RTN","MAGGNTI",29,0)
 S MAGRY="1^Image pointer filed successfully"
"RTN","MAGGNTI",30,0)
 ; Now we save the PARENT ASSOCIATION Date/Time 
"RTN","MAGGNTI",31,0)
 D LINKDT^MAGGTU6(.X,MAGDA)
"RTN","MAGGNTI",32,0)
 Q
"RTN","MAGGNTI",33,0)
DATA(MAGRY,TIUDA) ;RPC [MAG3 TIU DATA FROM DA]
"RTN","MAGGNTI",34,0)
 ; Call to get TIU data from the TIUDA
"RTN","MAGGNTI",35,0)
 ; Return =     TIUDA^Document Type ^Document Date^DFN^Author DUZ
"RTN","MAGGNTI",36,0)
 ;
"RTN","MAGGNTI",37,0)
 S MAGRY=TIUDA_U_$$GET1^DIQ(8925,TIUDA,".01","E")_U_$$GET1^DIQ(8925,TIUDA,"1201","I")_U_$$GET1^DIQ(8925,TIUDA,".02","I")_U_$$GET1^DIQ(8925,TIUDA,"1202","I")_U
"RTN","MAGGNTI",38,0)
 Q
"RTN","MAGGNTI",39,0)
IMAGES(MAGRY,TIUDA) ;RPC [MAG3 CPRS TIU NOTE]
"RTN","MAGGNTI",40,0)
 ; Call to get all images for a given TIU DA
"RTN","MAGGNTI",41,0)
 ; We first get all Image IEN's breaking groups into separate images
"RTN","MAGGNTI",42,0)
 ; Then get Image Info for each one.
"RTN","MAGGNTI",43,0)
 ; MAGRY    -     Return array of Image Data entries
"RTN","MAGGNTI",44,0)
 ; MAGRY(0)    is   1 ^ message  if successful
"RTN","MAGGNTI",45,0)
 ;                  0 ^ Error message if error;
"RTN","MAGGNTI",46,0)
 ; TIUDA  is IEN in ^TIU(8925
"RTN","MAGGNTI",47,0)
 ;
"RTN","MAGGNTI",48,0)
 ; Call TIU API to get list of Image IEN's
"RTN","MAGGNTI",49,0)
 N MAGARR,CT,TCT,I,J,Z K ^TMP($J,"MAGGX")
"RTN","MAGGNTI",50,0)
 N DA,MAGQI,MAGNCHK,MAGXX,MAGRSLT
"RTN","MAGGNTI",51,0)
 N TIUDFN,MAGQUIT ; MAGQI 8/22/01
"RTN","MAGGNTI",52,0)
 ; MAGFILE is returned from MAGGTII
"RTN","MAGGNTI",53,0)
 ; 
"RTN","MAGGNTI",54,0)
 S MAGQUIT=0 ; MAGQI 8/22/01
"RTN","MAGGNTI",55,0)
 S TIUDFN=$P($G(^TIU(8925,TIUDA,0)),U,2) ;MAGQI 8/22/01
"RTN","MAGGNTI",56,0)
 I 'TIUDFN S MAGRY(0)="0^Invalid Patient DFN for Note ID: '"_TIUDA_"'"
"RTN","MAGGNTI",57,0)
 D GETILST^TIUSRVPL(.MAGARR,TIUDA)
"RTN","MAGGNTI",58,0)
 S CT=0,TCT=0
"RTN","MAGGNTI",59,0)
 ; Now get all images for all groups and single images.
"RTN","MAGGNTI",60,0)
 S I="" F  S I=$O(MAGARR(I)) Q:'I  S DA=MAGARR(I) D  ;Q:MAGQUIT
"RTN","MAGGNTI",61,0)
 . S Z=$$ISDELIMG(DA) I Z S TCT=TCT+1,MAGRY(TCT)="B2^"_Z Q
"RTN","MAGGNTI",62,0)
 . ; Check that array of images from selected TIUDA have 
"RTN","MAGGNTI",63,0)
 . ;     same patient's and valid backward pointers
"RTN","MAGGNTI",64,0)
 . I $P($G(^MAG(2005,DA,0)),U,7)'=TIUDFN S MAGQUIT=1,MAGNCHK="Patient Mismatch. TIU: "_TIUDA
"RTN","MAGGNTI",65,0)
 . I $P($G(^MAG(2005,DA,2)),U,7)'=TIUDA S MAGQUIT=1,MAGNCHK="Pointer Mismatch. TIU: "_TIUDA
"RTN","MAGGNTI",66,0)
 . I MAGQUIT S MAGXX=DA D INFO^MAGGTII D  Q
"RTN","MAGGNTI",67,0)
 . . ; remove the Abstract and Image File Names  ; 2/14/03 p8t14  remove c:\program files.  with   .\bmp\
"RTN","MAGGNTI",68,0)
 . . S $P(MAGFILE,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGNTI",69,0)
 . . ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGNTI",70,0)
 . . S $P(MAGFILE,U,6)=$S(($P(MAGFILE,U,6)'=11):"99",1:11)
"RTN","MAGGNTI",71,0)
 . . S $P(MAGFILE,U,10)="M"
"RTN","MAGGNTI",72,0)
 . . ;Send the error message
"RTN","MAGGNTI",73,0)
 . . S $P(MAGFILE,U,17)=MAGNCHK
"RTN","MAGGNTI",74,0)
 . . S TCT=TCT+1,MAGRY(TCT)="B2^"_MAGFILE
"RTN","MAGGNTI",75,0)
 . ;
"RTN","MAGGNTI",76,0)
 . I $O(^MAG(2005,DA,1,0)) D  Q
"RTN","MAGGNTI",77,0)
 . . ; Integrity check, if group is questionable, add it's ien to list, not it's 
"RTN","MAGGNTI",78,0)
 . . ;   children.  Later when list is looped through, it's INFO^MAGGTII will be in 
"RTN","MAGGNTI",79,0)
 . . ;   list.  Have to do this to allow other images in list from TIU to be processed.
"RTN","MAGGNTI",80,0)
 . . D CHK^MAGGSQI(.MAGQI,DA) I 'MAGQI(0) S CT=CT+1,^TMP($J,"MAGGX",CT)=DA Q
"RTN","MAGGNTI",81,0)
 . . S J=0 ; the following line needs to take only the first piece of the node - PMK 4/4/02
"RTN","MAGGNTI",82,0)
 . . F  S J=$O(^MAG(2005,DA,1,J)) Q:'J  S CT=CT+1,^TMP($J,"MAGGX",CT)=$P(^(J,0),"^")
"RTN","MAGGNTI",83,0)
 . S CT=CT+1
"RTN","MAGGNTI",84,0)
 . S ^TMP($J,"MAGGX",CT)=DA
"RTN","MAGGNTI",85,0)
 ; Now get image info for each image
"RTN","MAGGNTI",86,0)
 ;
"RTN","MAGGNTI",87,0)
 S Z=""
"RTN","MAGGNTI",88,0)
 S MAGQUIET=1
"RTN","MAGGNTI",89,0)
 F  S Z=$O(^TMP($J,"MAGGX",Z)) Q:Z=""  D
"RTN","MAGGNTI",90,0)
 . S TCT=TCT+1,MAGXX=^TMP($J,"MAGGX",Z)
"RTN","MAGGNTI",91,0)
 . ;GEK 8/24/00 Stopping the Invalid Image IEN's and Deleted Images
"RTN","MAGGNTI",92,0)
 . I '$D(^MAG(2005,MAGXX)) D  Q
"RTN","MAGGNTI",93,0)
 . . D INVALID^MAGGTIG(MAGXX,.MAGRSLT) S MAGRY(CT)=MAGRSLT
"RTN","MAGGNTI",94,0)
 . D INFO^MAGGTII
"RTN","MAGGNTI",95,0)
 . S MAGRY(TCT)="B2^"_MAGFILE
"RTN","MAGGNTI",96,0)
 K MAGQUIET
"RTN","MAGGNTI",97,0)
 S MAGRY(0)=TCT_"^"_TCT_" Images for the selected TIU NOTE"
"RTN","MAGGNTI",98,0)
 ; Put the Image IEN of the last image into the group IEN field.
"RTN","MAGGNTI",99,0)
 Q:'TCT
"RTN","MAGGNTI",100,0)
 S $P(MAGRY(0),U,3)=TIUDA
"RTN","MAGGNTI",101,0)
 K MAGRSLT
"RTN","MAGGNTI",102,0)
 D DATA(.MAGRSLT,TIUDA)
"RTN","MAGGNTI",103,0)
 S $P(MAGRY(0),U,4)=$$GET1^DIQ(8925,TIUDA,".02","E")_"  "_$P(MAGRSLT,U,2)_"  "_$$FMTE^XLFDT($P(MAGRSLT,U,3),"8")
"RTN","MAGGNTI",104,0)
 ;
"RTN","MAGGNTI",105,0)
 S $P(MAGRY(0),U,5)=$S($P($G(MAGFILE),U):$P(MAGFILE,U),$G(MAGXX):MAGXX,1:0)
"RTN","MAGGNTI",106,0)
 Q
"RTN","MAGGNTI",107,0)
 ;. S Z=ISDELIMG(DA) I Z S TCT=TCT+1,MAGRY(TCT)="B2^"_$P(Z,U,2) Q
"RTN","MAGGNTI",108,0)
ISDELIMG(MAGIEN) ; Is this a deleted Image.
"RTN","MAGGNTI",109,0)
 N MAGDEL,MAGIMG,MAGR,Z,MAGT
"RTN","MAGGNTI",110,0)
 S MAGDEL=$D(^MAG(2005.1,MAGIEN))
"RTN","MAGGNTI",111,0)
 S MAGIMG=$D(^MAG(2005,MAGIEN))
"RTN","MAGGNTI",112,0)
 I MAGIMG,'MAGDEL S MAGR="0^Valid Image"
"RTN","MAGGNTI",113,0)
 I 'MAGIMG,MAGDEL S MAGR="1^Deleted Image",MAGT=66
"RTN","MAGGNTI",114,0)
 I 'MAGIMG,'MAGDEL S MAGR="1^Invalid Image pointer",MAGT=67
"RTN","MAGGNTI",115,0)
 I MAGIMG,MAGDEL S MAGR="0^Image IEN exists, and is Deleted !"
"RTN","MAGGNTI",116,0)
 I 'MAGR Q MAGR
"RTN","MAGGNTI",117,0)
 S MAGR=$P(MAGR,U,2)
"RTN","MAGGNTI",118,0)
 S $P(Z,U,1,4)=MAGIEN_"^-1~"_MAGR_"^-1~"_MAGR_"^"_MAGR
"RTN","MAGGNTI",119,0)
 S $P(Z,U,6)=MAGT
"RTN","MAGGNTI",120,0)
 ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGNTI",121,0)
 S $P(Z,U,10)="M"
"RTN","MAGGNTI",122,0)
 ;Send the error message
"RTN","MAGGNTI",123,0)
 S $P(Z,U,17)=$P(MAGR,U,2)
"RTN","MAGGNTI",124,0)
 Q Z
"RTN","MAGGNTI",125,0)
ISDOCCL(MAGRY,IEN,TIUFILE,CLASS) ;RPC [MAGG IS DOC CLASS]
"RTN","MAGGNTI",126,0)
 ;Checks to see if IEN of TIU Files 8925 or 8925.1 is of a certain Doc Class 
"RTN","MAGGNTI",127,0)
 ;MAGRY  = Return String  
"RTN","MAGGNTI",128,0)
 ;                 for Success   "1^message"
"RTN","MAGGNTI",129,0)
 ;                 for Failure   "0^message"
"RTN","MAGGNTI",130,0)
 ;IEN    = Internal Entry Number in the TIUFILE
"RTN","MAGGNTI",131,0)
 ;TIUFILE = either 8925   if we need to see if a Note is of a Document Class 
"RTN","MAGGNTI",132,0)
 ;            or   8925.1 if we need to see if a Title is of a Document Class
"RTN","MAGGNTI",133,0)
 ;CLASS  = Text Name of the Document Class   example: "ADVANCE DIRECTIVE"
"RTN","MAGGNTI",134,0)
 ;
"RTN","MAGGNTI",135,0)
 S MAGRY="0^Unknown Error checking TIU Document Class"
"RTN","MAGGNTI",136,0)
 K MAGTRGT,DEFIEN,DOCCL,RES,DONE,NTTL
"RTN","MAGGNTI",137,0)
 S DONE=0
"RTN","MAGGNTI",138,0)
 ; If we're resolving a Title
"RTN","MAGGNTI",139,0)
 I TIUFILE="8925.1" D  Q:DONE
"RTN","MAGGNTI",140,0)
 . S DEFIEN=IEN,NTTL="Title"
"RTN","MAGGNTI",141,0)
 . I '$D(^TIU(8925.1,DEFIEN,0)) S MAGRY="0^Invalid Title IEN",DONE=1 Q
"RTN","MAGGNTI",142,0)
 . Q
"RTN","MAGGNTI",143,0)
 ; If we're resolving a Note
"RTN","MAGGNTI",144,0)
 I TIUFILE="8925" D  Q:DONE
"RTN","MAGGNTI",145,0)
 . S NTTL="Note"
"RTN","MAGGNTI",146,0)
 . I '$D(^TIU(8925,IEN)) S MAGRY="0^Invalid Note IEN",DONE=1 Q
"RTN","MAGGNTI",147,0)
 . ; Get Title IEN from Note IEN
"RTN","MAGGNTI",148,0)
 . S DEFIEN=$$GET1^DIQ(8925,IEN_",",.01,"I")
"RTN","MAGGNTI",149,0)
 . I DEFIEN="" S MAGRY="0^Error resolving Document Class from Note IEN" S DONE=1 Q
"RTN","MAGGNTI",150,0)
 . Q
"RTN","MAGGNTI",151,0)
 ;
"RTN","MAGGNTI",152,0)
 ; Find the IEN in 8925.1 for Document Class (CLASS) 
"RTN","MAGGNTI",153,0)
 D FIND^DIC(8925.1,"","@;.001","X",CLASS,"","","I $P(^(0),U,4)=""DC""","","MAGTRGT")
"RTN","MAGGNTI",154,0)
 S DOCCL=$G(MAGTRGT("DILIST",2,1))
"RTN","MAGGNTI",155,0)
 ;
"RTN","MAGGNTI",156,0)
 ; See if ^TIU(8925.1,DEFIEN is of Document Class DOCCL
"RTN","MAGGNTI",157,0)
 S RES=$$ISA^TIULX(DEFIEN,DOCCL)
"RTN","MAGGNTI",158,0)
 I RES S MAGRY="1^The "_NTTL_" is of Document Class "_CLASS Q
"RTN","MAGGNTI",159,0)
 S MAGRY="0^The "_NTTL_" is Not of Document Class "_CLASS
"RTN","MAGGNTI",160,0)
 Q
"RTN","MAGGNTI1")
0^1^B44242412
"RTN","MAGGNTI1",1,0)
MAGGNTI1 ;WOIFO/GEK - Imaging interface to TIU. RPC Calls etc. ; 04 Apr 2002  2:37 PM
"RTN","MAGGNTI1",2,0)
 ;;3.0;IMAGING;**46,59**;Nov 27, 2007;Build 20
"RTN","MAGGNTI1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGNTI1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGNTI1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNTI1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNTI1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGNTI1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGNTI1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGNTI1",11,0)
 ;; |                                                               |
"RTN","MAGGNTI1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNTI1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNTI1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNTI1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNTI1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGNTI1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI1",18,0)
 ;;      
"RTN","MAGGNTI1",19,0)
 Q
"RTN","MAGGNTI1",20,0)
NEW(MAGRY,MAGDFN,MAGTITLE,MAGADCL,MAGMODE,MAGES,MAGESBY,MAGLOC,MAGDATE,MAGCNSLT,MAGTEXT) ;RPC [MAG3 TIU NEW]
"RTN","MAGGNTI1",21,0)
 ;
"RTN","MAGGNTI1",22,0)
 ;  RPC call to create a New Note 
"RTN","MAGGNTI1",23,0)
 ;  and Optionally :  
"RTN","MAGGNTI1",24,0)
 ;     Electronically Sign,  
"RTN","MAGGNTI1",25,0)
 ;     Administratively Close 
"RTN","MAGGNTI1",26,0)
 ;     or Add Text to the Note.
"RTN","MAGGNTI1",27,0)
 ;       
"RTN","MAGGNTI1",28,0)
 ;  - - -  Required  - - - 
"RTN","MAGGNTI1",29,0)
 ;  MAGDFN   - Patient DFN
"RTN","MAGGNTI1",30,0)
 ;  MAGTITLE - IEN of TIU Document Title in file 8925.1
"RTN","MAGGNTI1",31,0)
 ;  - - -  Optional  - - - 
"RTN","MAGGNTI1",32,0)
 ;  Use DUZ for TIUAUTH 
"RTN","MAGGNTI1",33,0)
 ;  Use NOW for TIURDT
"RTN","MAGGNTI1",34,0)
 ;  MAGTEXT  - Array of Text to add to the New Note.
"RTN","MAGGNTI1",35,0)
 ;  MAGLOC   - IEN in Hospital Location File 44
"RTN","MAGGNTI1",36,0)
 ;  MAGES    - The encrypted Electronic Signature
"RTN","MAGGNTI1",37,0)
 ;  MAGESBY  - The DUZ of the Signer (Defaults to DUZ)
"RTN","MAGGNTI1",38,0)
 ;  MAGADCL  - 1 = Mark this Note as Administratively Closed
"RTN","MAGGNTI1",39,0)
 ;  MAGMODE  - Mode of Admin Closure: "S" = Scanned Document 
"RTN","MAGGNTI1",40,0)
 ;             "M" = Manual closure, "E" = Electronically Filed
"RTN","MAGGNTI1",41,0)
 ;  MAGDATE  - Date of the Note. For New Notes.
"RTN","MAGGNTI1",42,0)
 ;  MAGCNSLT - DA of Consult to Link to.
"RTN","MAGGNTI1",43,0)
 ;
"RTN","MAGGNTI1",44,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGNTI1",45,0)
 S MAGDFN=$G(MAGDFN),MAGTITLE=$G(MAGTITLE),MAGLOC=$G(MAGLOC)
"RTN","MAGGNTI1",46,0)
 S MAGES=$G(MAGES),MAGADCL=$G(MAGADCL)
"RTN","MAGGNTI1",47,0)
 S MAGESBY=$S($G(MAGESBY):MAGESBY,1:DUZ)
"RTN","MAGGNTI1",48,0)
 S MAGMODE=$S($L($G(MAGMODE)):MAGMODE,1:"S")
"RTN","MAGGNTI1",49,0)
 S MAGDATE=$G(MAGDATE),MAGCNSLT=$G(MAGCNSLT)
"RTN","MAGGNTI1",50,0)
 N MAGTIUDA,I,NODE,MAGTY,ISVAL,MAGISC,MTXT,MUPD,MAGX,MAGVSTR,MAGTIUX
"RTN","MAGGNTI1",51,0)
 ;
"RTN","MAGGNTI1",52,0)
 ;  MAGMODE is only sent if Admin Closure is wanted.
"RTN","MAGGNTI1",53,0)
 I (MAGMODE="S") S MAGTEXT(.1)="   VistA Imaging - Scanned Document"
"RTN","MAGGNTI1",54,0)
 I (MAGMODE="M") S MAGTEXT(.1)="   VistA Imaging - Manual Closure"
"RTN","MAGGNTI1",55,0)
 I "MSE"'[MAGMODE S MAGRY="0^Invalid Mode of Closure: """_MAGMODE_"""" Q
"RTN","MAGGNTI1",56,0)
 ;
"RTN","MAGGNTI1",57,0)
 ;       Here if we have no Text, we'll add at least a line.
"RTN","MAGGNTI1",58,0)
 I $O(MAGTEXT(""))="" S MAGTEXT(.1)="   VistA Imaging - - Scanned Document"
"RTN","MAGGNTI1",59,0)
 ;               Reformat Text - "TEXT",i,0)"   for TIU Call.
"RTN","MAGGNTI1",60,0)
 S I="",NODE=0
"RTN","MAGGNTI1",61,0)
 F  S I=$O(MAGTEXT(I)) Q:I=""  D
"RTN","MAGGNTI1",62,0)
 . S NODE=NODE+1 S MAGTIUX("TEXT",NODE,0)=MAGTEXT(I)
"RTN","MAGGNTI1",63,0)
 . Q
"RTN","MAGGNTI1",64,0)
 ;          validate the DFN
"RTN","MAGGNTI1",65,0)
 I '$D(^DPT(+MAGDFN,0)) S MAGRY="0^Invalid data: Patient DFN is invalid" Q
"RTN","MAGGNTI1",66,0)
 ;      validate the User
"RTN","MAGGNTI1",67,0)
 I '$D(^VA(200,MAGESBY,0)) S MAGRY="0^Invalid data: Author DUZ is invalid" Q
"RTN","MAGGNTI1",68,0)
 ;      validate the TIU TITLE
"RTN","MAGGNTI1",69,0)
 I '$D(^TIU(8925.1,MAGTITLE,0)) S MAGRY="0^Invalid data: Note TITLE is invalid" Q
"RTN","MAGGNTI1",70,0)
 ;      validate Esig first, if caller wants to also mark this Note as Signed
"RTN","MAGGNTI1",71,0)
 I +$G(MAGES) I '$$VALES^MAGGNTI2(MAGES) S MAGRY="0^Invalid data: E-sign is invalid" Q
"RTN","MAGGNTI1",72,0)
 ;      validate the Date   MAGDATE is changed to INternal if it is valid.
"RTN","MAGGNTI1",73,0)
 I +$L(MAGDATE) I '$$VALID^MAGGSIV1(8925,1301,.MAGDATE,.MAGX) S MAGRY="0^"_MAGX Q
"RTN","MAGGNTI1",74,0)
 I '$L(MAGDATE) S MAGDATE=$$NOW^XLFDT
"RTN","MAGGNTI1",75,0)
 ; LINK TO CONSULT
"RTN","MAGGNTI1",76,0)
 ; can user create Notes with This Title
"RTN","MAGGNTI1",77,0)
 I '$$CANENTR^TIULP(MAGTITLE) S MAGRY="0^You need privileges to enter notes of that Title" Q
"RTN","MAGGNTI1",78,0)
 ;
"RTN","MAGGNTI1",79,0)
 D ISCNSLT^TIUCNSLT(.MAGISC,MAGTITLE)
"RTN","MAGGNTI1",80,0)
 I MAGISC D  I 'MAGISC S MAGRY=MAGISC Q
"RTN","MAGGNTI1",81,0)
 . ;  See if a Consult DA was sent.
"RTN","MAGGNTI1",82,0)
 . IF 'MAGCNSLT S MAGISC="0^A Consult is needed to link to this note title"
"RTN","MAGGNTI1",83,0)
 . Q
"RTN","MAGGNTI1",84,0)
 I ('MAGISC)&(MAGCNSLT) S MAGRY="0^Cannot Link Consult with a Non Consult Title" Q
"RTN","MAGGNTI1",85,0)
 ;
"RTN","MAGGNTI1",86,0)
 ;               make a VSTR for TIU Call.
"RTN","MAGGNTI1",87,0)
 S MAGVSTR=MAGLOC_";"_MAGDATE_";E"
"RTN","MAGGNTI1",88,0)
 ;
"RTN","MAGGNTI1",89,0)
 ; Call to NEW^TIUPNAPI wasn't doing what we needed. Now call TIU CREATE RECORD
"RTN","MAGGNTI1",90,0)
 ; MAKE(SUCCESS,DFN,TITLE,VDT,VLOC,VSIT,TIUX,VSTR,SUPPRESS,NOASF)                
"RTN","MAGGNTI1",91,0)
 D MAKE^TIUSRVP(.MAGTIUDA,MAGDFN,MAGTITLE,"",MAGLOC,"",.MAGTIUX,MAGVSTR)
"RTN","MAGGNTI1",92,0)
 I 'MAGTIUDA!(MAGTIUDA=-1) S MAGRY="0^Error creating Note"_$G(MAGTIUDA) Q
"RTN","MAGGNTI1",93,0)
 S MAGRY=MAGTIUDA_"^Note was created."
"RTN","MAGGNTI1",94,0)
 S MAGTY=MAGRY
"RTN","MAGGNTI1",95,0)
 ;
"RTN","MAGGNTI1",96,0)
 ;       ;Put in the Date that was sent.
"RTN","MAGGNTI1",97,0)
 I '$$VALID^MAGGSIV1(8925,1301,.MAGDATE,.MAGRES) S MAGRY=MAGRY_"  "_MAGRES
"RTN","MAGGNTI1",98,0)
 E  S MTXT(1301)=MAGDATE
"RTN","MAGGNTI1",99,0)
 ; - Fix in T30,  if DUZ isn't MAGESBY, we have Author different than User.
"RTN","MAGGNTI1",100,0)
 I MAGESBY'=DUZ S MTXT("1202")=MAGESBY
"RTN","MAGGNTI1",101,0)
 ;               Update and LINK TO CONSULT if needed.
"RTN","MAGGNTI1",102,0)
 I MAGISC S MTXT("1405")=MAGCNSLT_";GMR(123,"
"RTN","MAGGNTI1",103,0)
 I $D(MTXT) D  I 'MUPD S MAGRY=MUPD Q
"RTN","MAGGNTI1",104,0)
 . D UPDATE^TIUSRVP(.MUPD,MAGTIUDA,.MTXT)
"RTN","MAGGNTI1",105,0)
 . Q
"RTN","MAGGNTI1",106,0)
 ;
"RTN","MAGGNTI1",107,0)
 ;               If Admin Close, then We quit.
"RTN","MAGGNTI1",108,0)
 I MAGADCL="1" D  Q
"RTN","MAGGNTI1",109,0)
 . D ADMNCLOS^MAGGNTI2(.MAGTY,MAGDFN,MAGTIUDA,MAGMODE)
"RTN","MAGGNTI1",110,0)
 . S MAGRY=$S('MAGTY:MAGTY,1:MAGRY_"  Administrative Closure.")
"RTN","MAGGNTI1",111,0)
 . Q
"RTN","MAGGNTI1",112,0)
 ;
"RTN","MAGGNTI1",113,0)
 ;               if caller sent esignature to Sign this Note.
"RTN","MAGGNTI1",114,0)
 I $L(MAGES) D
"RTN","MAGGNTI1",115,0)
 . D SIGN^MAGGNTI3(.MAGTY,MAGDFN,MAGTIUDA,MAGES,MAGESBY)
"RTN","MAGGNTI1",116,0)
 . S MAGRY=$S('MAGTY:MAGTY,1:MAGRY_"  Signed.")
"RTN","MAGGNTI1",117,0)
 . Q
"RTN","MAGGNTI1",118,0)
 Q
"RTN","MAGGNTI1",119,0)
 ;
"RTN","MAGGNTI1",120,0)
 ;(MAGRY,MAGDFN,MAGTITLE,MAGADCL,MAGMODE,MAGES,MAGESBY,MAGLOC,MAGTEXT)
"RTN","MAGGNTI1",121,0)
NEWADD(MAGRY,MAGDFN,MAGTIUDA,MAGADCL,MAGMODE,MAGES,MAGESBY,MAGDATE,MAGTEXT) ; RPC [MAG3 TIU CREATE ADDENDUM]
"RTN","MAGGNTI1",122,0)
 ;  RPC call to create an Addendum to a Note
"RTN","MAGGNTI1",123,0)
 ;  and Optionally :  
"RTN","MAGGNTI1",124,0)
 ;           Electronically Sign,
"RTN","MAGGNTI1",125,0)
 ;           Administratively Close,
"RTN","MAGGNTI1",126,0)
 ;           or Add Text to the Addendum
"RTN","MAGGNTI1",127,0)
 ;       
"RTN","MAGGNTI1",128,0)
 ;  - - -  Required  - - - 
"RTN","MAGGNTI1",129,0)
 ;  MAGDFN   - Patient DFN
"RTN","MAGGNTI1",130,0)
 ;  MAGTIUDA - IEN of TIU NOTE in file 8925
"RTN","MAGGNTI1",131,0)
 ;  - - -  Optional  - - - 
"RTN","MAGGNTI1",132,0)
 ;  MAGTEXT  - Array of Text to add to the New Note.
"RTN","MAGGNTI1",133,0)
 ;  MAGES    - The encrypted Electronic Signature
"RTN","MAGGNTI1",134,0)
 ;  MAGESBY  - The DUZ of the Signer (Defaults to DUZ)
"RTN","MAGGNTI1",135,0)
 ;  MAGADCL  - 1 = Mark this Note as Administratively Closed
"RTN","MAGGNTI1",136,0)
 ;  MAGMODE  - Mode of Admin Closure: "S" = Scanned Document "M" = Manual closure  "E" = Electronically Filed
"RTN","MAGGNTI1",137,0)
 ;  MAGDATE  - Date of the Addendum.
"RTN","MAGGNTI1",138,0)
 ;
"RTN","MAGGNTI1",139,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGNTI1",140,0)
 S MAGDFN=$G(MAGDFN),MAGTIUDA=$G(MAGTIUDA),MAGES=$G(MAGES),MAGADCL=$G(MAGADCL)
"RTN","MAGGNTI1",141,0)
 S MAGESBY=$S($G(MAGESBY):MAGESBY,1:DUZ),MAGMODE=$S($L($G(MAGMODE)):MAGMODE,1:"S")
"RTN","MAGGNTI1",142,0)
 S MAGDATE=$G(MAGDATE)
"RTN","MAGGNTI1",143,0)
 ;
"RTN","MAGGNTI1",144,0)
 I '$$VALDATA^MAGGNTI2(.MAGRY,MAGDFN,MAGTIUDA) Q
"RTN","MAGGNTI1",145,0)
 N MAGXT,I,CT,NEWTIUDA,MAGY,MAGRES,MAGUPD
"RTN","MAGGNTI1",146,0)
 S CT=1,I=""
"RTN","MAGGNTI1",147,0)
 S MAGXT("TEXT",1,0)="VistA Imaging  Scanned Document - Addendum."
"RTN","MAGGNTI1",148,0)
 I $D(MAGTEXT) F  S I=$O(MAGTEXT(I)) Q:I=""  D
"RTN","MAGGNTI1",149,0)
 . S CT=CT+1,MAGXT("TEXT",CT,0)=MAGTEXT(I)
"RTN","MAGGNTI1",150,0)
 . Q
"RTN","MAGGNTI1",151,0)
 ;
"RTN","MAGGNTI1",152,0)
 ; Calling TIU CREATE ADDENDUM RECORD
"RTN","MAGGNTI1",153,0)
 D MAKEADD^TIUSRVP(.MAGRY,MAGTIUDA,.MAGXT)
"RTN","MAGGNTI1",154,0)
 ; MAGRY could be 0^error message
"RTN","MAGGNTI1",155,0)
 ;       -1^message
"RTN","MAGGNTI1",156,0)
 ;       TIUDA
"RTN","MAGGNTI1",157,0)
 I $P(MAGRY,"^")<0 S $P(MAGRY,"^")=0 Q
"RTN","MAGGNTI1",158,0)
 S NEWTIUDA=+MAGRY
"RTN","MAGGNTI1",159,0)
 S MAGRY=MAGRY_"^Addendum was created."
"RTN","MAGGNTI1",160,0)
 ;
"RTN","MAGGNTI1",161,0)
 ;Put in the Date that was sent.
"RTN","MAGGNTI1",162,0)
 K MAGUPD
"RTN","MAGGNTI1",163,0)
 I '$$VALID^MAGGSIV1(8925,1301,.MAGDATE,.MAGRES) S MAGRY=MAGRY_"  "_MAGRES
"RTN","MAGGNTI1",164,0)
 E  D
"RTN","MAGGNTI1",165,0)
 . S MAGUPD(1301)=MAGDATE
"RTN","MAGGNTI1",166,0)
 . S MAGUPD(1211)=$$GET1^DIQ(8925,1211,MAGTIUDA,"I")
"RTN","MAGGNTI1",167,0)
 ; - Fix in T30,  if DUZ isn't MAGESBY, we have Author different than User.
"RTN","MAGGNTI1",168,0)
 I MAGESBY'=DUZ S MAGUPD("1202")=MAGESBY
"RTN","MAGGNTI1",169,0)
 I $D(MAGUPD) D
"RTN","MAGGNTI1",170,0)
 . D UPDATE^TIUSRVP(.MAGY,NEWTIUDA,.MAGUPD)
"RTN","MAGGNTI1",171,0)
 . I 'MAGY S MAGRY=MAGRY_" TIU Data was Not Correctly Filed."
"RTN","MAGGNTI1",172,0)
 . Q
"RTN","MAGGNTI1",173,0)
 ;
"RTN","MAGGNTI1",174,0)
 ; if caller sent esignature to Sign this Addendum.
"RTN","MAGGNTI1",175,0)
 I $L(MAGES) D  Q
"RTN","MAGGNTI1",176,0)
 . D SIGN^MAGGNTI3(.MAGTY,MAGDFN,NEWTIUDA,MAGES,MAGESBY)
"RTN","MAGGNTI1",177,0)
 . S MAGRY=$S('MAGTY:MAGTY,1:MAGRY_"  Signed.")
"RTN","MAGGNTI1",178,0)
 . Q
"RTN","MAGGNTI1",179,0)
 ;
"RTN","MAGGNTI1",180,0)
 ; if caller wants to Admin Close this Addendum.
"RTN","MAGGNTI1",181,0)
 I MAGADCL="1" D  Q
"RTN","MAGGNTI1",182,0)
 . D ADMNCLOS^MAGGNTI2(.MAGTY,MAGDFN,NEWTIUDA,MAGMODE)
"RTN","MAGGNTI1",183,0)
 . S MAGRY=$S('MAGTY:MAGTY,1:MAGRY_"  Administrative Closure.")
"RTN","MAGGNTI1",184,0)
 . Q
"RTN","MAGGNTI1",185,0)
 Q
"RTN","MAGGNTI1",186,0)
MOD(MAGRY,MAGDFN,MAGTIUDA,MAGADCL,MAGMODE,MAGES,MAGESBY,MAGTEXT) ; RPC [MAG3 TIU MODIFY NOTE]
"RTN","MAGGNTI1",187,0)
 ; After a Note is filed, we call this to Modify the Note.  We do this to sign it.
"RTN","MAGGNTI1",188,0)
 ;  That way the Signed Date is After the Image Association  Date/Time.
"RTN","MAGGNTI1",189,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGNTI1",190,0)
 S MAGDFN=$G(MAGDFN),MAGTIUDA=$G(MAGTIUDA)
"RTN","MAGGNTI1",191,0)
 S MAGADCL=$G(MAGADCL)
"RTN","MAGGNTI1",192,0)
 S MAGMODE=$S($L($G(MAGMODE)):MAGMODE,1:"S")
"RTN","MAGGNTI1",193,0)
 S MAGES=$G(MAGES)
"RTN","MAGGNTI1",194,0)
 S MAGESBY=$S($G(MAGESBY):MAGESBY,1:DUZ)
"RTN","MAGGNTI1",195,0)
 D MOD^MAGGNTI3(.MAGRY,MAGDFN,MAGTIUDA,MAGADCL,MAGMODE,MAGES,MAGESBY)
"RTN","MAGGNTI1",196,0)
 Q
"RTN","MAGGNTI1",197,0)
ERR ; ERROR TRAP
"RTN","MAGGNTI1",198,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGNTI1",199,0)
 S MAGRY="0^ETRAP: "_ERR
"RTN","MAGGNTI1",200,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGNTI1",201,0)
 Q
"RTN","MAGGNTI1",202,0)
SIGN(MAGRY,MAGDFN,MAGTIUDA,MAGES,MAGESBY) ;RPC [MAG3 TIU SIGN RECORD]
"RTN","MAGGNTI1",203,0)
 ; RPC Call to 'Sign' a Note. 
"RTN","MAGGNTI1",204,0)
 D SIGN^MAGGNTI3(.MAGRY,$G(MAGDFN),$G(MAGTIUDA),$G(MAGES),$G(MAGESBY))
"RTN","MAGGNTI1",205,0)
 Q
"RTN","MAGGNTI2")
0^2^B21198042
"RTN","MAGGNTI2",1,0)
MAGGNTI2 ;WOIFO/GEK - Imaging interface to TIU. RPC Calls etc. ; 04 Apr 2002  2:37 PM
"RTN","MAGGNTI2",2,0)
 ;;3.0;IMAGING;**46,59**;Nov 27, 2007;Build 20
"RTN","MAGGNTI2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGNTI2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI2",5,0)
 ;; | Property of the US Government.        |
"RTN","MAGGNTI2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNTI2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNTI2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging |
"RTN","MAGGNTI2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,  |
"RTN","MAGGNTI2",10,0)
 ;; | telephone (301) 734-0100.          |
"RTN","MAGGNTI2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNTI2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNTI2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNTI2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNTI2",15,0)
 ;; | to be a violation of US Federal Statutes.      |
"RTN","MAGGNTI2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI2",17,0)
 ;;      
"RTN","MAGGNTI2",18,0)
 Q
"RTN","MAGGNTI2",19,0)
LIST(MAGRY,CLASS,MYLIST) ; RPC [MAG3 TIU LONG LIST OF TITLES]
"RTN","MAGGNTI2",20,0)
 ; Get a list of Document Titles
"RTN","MAGGNTI2",21,0)
 ; CLASS         = ("," delimited string of one or More of) "NOTE,DS,CONS,CP,SUR,<CLASS IEN>"
"RTN","MAGGNTI2",22,0)
 ;                             CLASS IEN is any IEN of TIU 8925.1  that is a Class
"RTN","MAGGNTI2",23,0)
 ;                "|" delimited string of Class| text | Direction
"RTN","MAGGNTI2",24,0)
 ; MYLIST                = [1|""]   optional
"RTN","MAGGNTI2",25,0)
 ;                               If MYLIST=1 then return
"RTN","MAGGNTI2",26,0)
 ;                               TIU PERSONAL TITLE LIST       PERSLIST^TIUSRVD 
"RTN","MAGGNTI2",27,0)
 ;                                       
"RTN","MAGGNTI2",28,0)
 ; Note : sending CLASS IEN isn't used in p59.
"RTN","MAGGNTI2",29,0)
 ; 
"RTN","MAGGNTI2",30,0)
 K MAGRY
"RTN","MAGGNTI2",31,0)
 ; was a Global, now leave it an Array, only getting 44
"RTN","MAGGNTI2",32,0)
 N I,T,CL,CLN,CLNOTE,CLDS,CLCP,CLCONS,CLSUR,IL,J,TX,TXC,TX2,TX1,DFLT
"RTN","MAGGNTI2",33,0)
 N INTXT,UPDN,TARR
"RTN","MAGGNTI2",34,0)
 S MYLIST=$G(MYLIST)
"RTN","MAGGNTI2",35,0)
 S INTXT=$P(CLASS,"|",2)
"RTN","MAGGNTI2",36,0)
 S UPDN=$S(+$P(CLASS,"|",3):+$P(CLASS,"|",3),1:1)
"RTN","MAGGNTI2",37,0)
 S CLASS=$P(CLASS,"|",1)
"RTN","MAGGNTI2",38,0)
 I $L(CLASS)=0 S MAGRY(0)="0^Invalid Selection Class." Q
"RTN","MAGGNTI2",39,0)
 S CLNOTE=3 ; It is hard coded in TIU code.  Note Class
"RTN","MAGGNTI2",40,0)
 S CLDS=244 ; It is hard coded in TIU code.  Discharge Summary Class
"RTN","MAGGNTI2",41,0)
 D CPCLASS^TIUCP(.CLCP)
"RTN","MAGGNTI2",42,0)
 D CNSLCLAS^TIUSRVD(.CLCONS)
"RTN","MAGGNTI2",43,0)
 D SURGCLAS^TIUSRVD(.CLSUR)
"RTN","MAGGNTI2",44,0)
 S MAGRY(0)="0^Error: While accessing a list of Note Titles."
"RTN","MAGGNTI2",45,0)
 S MAGRY(1)="key word^TITLE^CLASS"
"RTN","MAGGNTI2",46,0)
 S I=""
"RTN","MAGGNTI2",47,0)
 F I=1:1:$L(CLASS,",") D
"RTN","MAGGNTI2",48,0)
 . S CL=$P(CLASS,",",I)
"RTN","MAGGNTI2",49,0)
 . S CLN=$S(+CL:+CL,CL="NOTE":3,CL="DS":CLDS,CL="CP":CLCP,CL="CONS":CLCONS,CL="SUR":CLSUR,1:-1)
"RTN","MAGGNTI2",50,0)
 . I MYLIST D  Q
"RTN","MAGGNTI2",51,0)
 . . D MYLIST(CLN,.TARR)
"RTN","MAGGNTI2",52,0)
 . . I $O(TARR(""))'="" S MAGRY(0)="1^Personal List"
"RTN","MAGGNTI2",53,0)
 . . S J="" F  S J=$O(TARR(J)) Q:J=""  D
"RTN","MAGGNTI2",54,0)
 . . . S TX1=$P(TARR(J),"^",1)
"RTN","MAGGNTI2",55,0)
 . . . ; output has 'd' or 'i' as first character, we need to get rid of it.
"RTN","MAGGNTI2",56,0)
 . . . I $E(TX1)="d" S DFLT=$E(TX1,2,999),MAGRY(0)=DFLT_"^Personal list"
"RTN","MAGGNTI2",57,0)
 . . . S TX1=$E(TX1,2,999)
"RTN","MAGGNTI2",58,0)
 . . . S TX=$P(TARR(J),"^",2),TX2=$P(TX,"<",2) S:$L(TX2) TX=$P(TX,"<",1) S:$L(TX2) TX2="<"_TX2
"RTN","MAGGNTI2",59,0)
 . . . S MAGRY($O(MAGRY(""),-1)+1)=TX_"^"_TX2_"^"_CL_"|"_TX1
"RTN","MAGGNTI2",60,0)
 . . . Q
"RTN","MAGGNTI2",61,0)
 . . Q
"RTN","MAGGNTI2",62,0)
 . ; here add line as a break between Personal List and Start of Total List
"RTN","MAGGNTI2",63,0)
 . K TARR
"RTN","MAGGNTI2",64,0)
 . D BLDLIST(CLN,.TARR,INTXT,UPDN)
"RTN","MAGGNTI2",65,0)
 . S J="" F  S J=$O(TARR(J)) Q:J=""  D
"RTN","MAGGNTI2",66,0)
 . . S TX=$P(TARR(J),"^",2),TX2=$P(TX,"<",2) S:$L(TX2) TX=$P(TX,"<",1) S:$L(TX2) TX2="<"_TX2
"RTN","MAGGNTI2",67,0)
 . . S TX1=$P(TARR(J),"^",1)
"RTN","MAGGNTI2",68,0)
 . . S MAGRY($O(MAGRY(""),-1)+1)=TX_"^"_TX2_"^"_CL_"|"_TX1
"RTN","MAGGNTI2",69,0)
 . . Q
"RTN","MAGGNTI2",70,0)
 . Q
"RTN","MAGGNTI2",71,0)
 I '$D(MAGRY(2)) K MAGRY(1) S MAGRY(0)="0^0 Items match input: "_INTXT
"RTN","MAGGNTI2",72,0)
 E  S MAGRY(0)="1^Success"_"^"_$G(DFLT)_"^"
"RTN","MAGGNTI2",73,0)
 Q
"RTN","MAGGNTI2",74,0)
 ;
"RTN","MAGGNTI2",75,0)
MYLIST(CLN,TARR) ;
"RTN","MAGGNTI2",76,0)
 ; if not short list, default is listed twice, (This is how CPRS displays it)
"RTN","MAGGNTI2",77,0)
 K TARR
"RTN","MAGGNTI2",78,0)
 D PERSLIST^TIUSRVD(.TARR,DUZ,CLN)
"RTN","MAGGNTI2",79,0)
 Q
"RTN","MAGGNTI2",80,0)
BLDLIST(CLN,TARR,STC,UPDN) ;
"RTN","MAGGNTI2",81,0)
 ;
"RTN","MAGGNTI2",82,0)
 S UPDN=$S(+$G(UPDN):+$G(UPDN),1:1)
"RTN","MAGGNTI2",83,0)
 K TARR
"RTN","MAGGNTI2",84,0)
 D LONGLIST^TIUSRVD(.TARR,CLN,STC,UPDN)
"RTN","MAGGNTI2",85,0)
 Q
"RTN","MAGGNTI2",86,0)
ADMNCLOS(MAGRY,MAGDFN,MAGTIUDA,MAGMODE) ; calls TIU API to set as Admin Closed.
"RTN","MAGGNTI2",87,0)
 ; RPC Call to Administratively Close a TIU Note.  
"RTN","MAGGNTI2",88,0)
 ; - - - Required - - - 
"RTN","MAGGNTI2",89,0)
 ; MAGDFN    - Patient DFN
"RTN","MAGGNTI2",90,0)
 ; MAGTIUDA  - Note IEN in File 8925
"RTN","MAGGNTI2",91,0)
 ; - - - Optional - - - 
"RTN","MAGGNTI2",92,0)
 ; MAGMODE   - "S" Scanned Document "M" - Manual closure  "E" - Electronically Filed.
"RTN","MAGGNTI2",93,0)
 ;
"RTN","MAGGNTI2",94,0)
 S MAGDFN=$G(MAGDFN),MAGTIUDA=$G(MAGTIUDA),MAGMODE=$G(MAGMODE,"S")
"RTN","MAGGNTI2",95,0)
 I '$$VALDATA(.MAGRY,MAGDFN,MAGTIUDA) Q
"RTN","MAGGNTI2",96,0)
 ; Calling TIU SET ADMINISTRATIVE CLOSURE
"RTN","MAGGNTI2",97,0)
 ; MAGMODE can be "S" for SCANNED DOCUMENT  <- HIMS may get this changed
"RTN","MAGGNTI2",98,0)
 ;                                            to Electronically Filed.
"RTN","MAGGNTI2",99,0)
 ;             or "M" for MANUAL CLOSURE or "E" for ELECTONICALL FILE  
"RTN","MAGGNTI2",100,0)
 D ADMNCLOS^TIUSRVPT(.MAGRY,MAGTIUDA,MAGMODE)
"RTN","MAGGNTI2",101,0)
 ;   on success MAGRY  = MAGTIUDA
"RTN","MAGGNTI2",102,0)
 ;   on error   MAGRY  = 0^<message>
"RTN","MAGGNTI2",103,0)
 I MAGRY S MAGRY=MAGRY_"^Success: Administrative Closure."
"RTN","MAGGNTI2",104,0)
 Q
"RTN","MAGGNTI2",105,0)
VALES(X) ; Validate the esig
"RTN","MAGGNTI2",106,0)
 N MAGY S MAGY=0
"RTN","MAGGNTI2",107,0)
 D HASH^ROUTINE
"RTN","MAGGNTI2",108,0)
 I X]"",(X=$P($G(^VA(200,+DUZ,20)),U,4)) S MAGY=1
"RTN","MAGGNTI2",109,0)
 Q MAGY
"RTN","MAGGNTI2",110,0)
VALDATA(RY,MAGDFN,MAGTIUDA) ; Validate the TIUDA and the DFN
"RTN","MAGGNTI2",111,0)
 S MAGTIUDA=$G(MAGTIUDA),MAGDFN=$G(MAGDFN)
"RTN","MAGGNTI2",112,0)
 I 'MAGDFN S RY="0^Invalid data: Patient DFN invalid: "_MAGDFN Q 0
"RTN","MAGGNTI2",113,0)
 I '$D(^DPT(+MAGDFN,0)) S RY="0^Invalid data: Patient DFN invalid: "_MAGDFN Q 0
"RTN","MAGGNTI2",114,0)
 I 'MAGTIUDA S RY="0^Invalid Note IEN: "_MAGTIUDA Q 0
"RTN","MAGGNTI2",115,0)
 I '$D(^TIU(8925,MAGTIUDA,0)) S RY="0^Invalid Note IEN: "_MAGTIUDA Q 0
"RTN","MAGGNTI2",116,0)
 I $P(^TIU(8925,MAGTIUDA,0),"^",2)'=MAGDFN S RY="0^Invalid Patient DFN: "_MAGDFN_" for Note: "_MAGTIUDA Q 0
"RTN","MAGGNTI2",117,0)
 S RY="1^Validated OK."
"RTN","MAGGNTI2",118,0)
 Q 1
"RTN","MAGGNTI3")
0^37^B11336428
"RTN","MAGGNTI3",1,0)
MAGGNTI3 ;WOIFO/GEK - Imaging interface to TIU. RPC Calls etc. ; 04 Apr 2002  2:37 PM
"RTN","MAGGNTI3",2,0)
 ;;3.0;IMAGING;**46,59**;Nov 27, 2007;Build 20
"RTN","MAGGNTI3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGNTI3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGNTI3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNTI3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNTI3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGNTI3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGNTI3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGNTI3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNTI3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNTI3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNTI3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNTI3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGNTI3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI3",17,0)
 ;;      
"RTN","MAGGNTI3",18,0)
 Q
"RTN","MAGGNTI3",19,0)
MOD(MAGRY,MAGDFN,MAGTIUDA,MAGADCL,MAGMODE,MAGES,MAGESBY,MAGTEXT) ; RPC [MAG3 TIU MODIFY NOTE]
"RTN","MAGGNTI3",20,0)
 ;  RPC call to Modify an Existing Note by: 
"RTN","MAGGNTI3",21,0)
 ;           Electronically Signing or
"RTN","MAGGNTI3",22,0)
 ;           Administratively Closing the Note
"RTN","MAGGNTI3",23,0)
 ;
"RTN","MAGGNTI3",24,0)
 ;  - - -  Required  - - - 
"RTN","MAGGNTI3",25,0)
 ;  MAGDFN   - Patient DFN
"RTN","MAGGNTI3",26,0)
 ;  MAGTIUDA - IEN of TIU NOTE in file 8925
"RTN","MAGGNTI3",27,0)
 ;  - - -  Optional  - - - 
"RTN","MAGGNTI3",28,0)
 ;  MAGADCL  - 1 = Mark this Note as Administratively Closed
"RTN","MAGGNTI3",29,0)
 ;  MAGMODE  - Mode of Admin Closure: "S" = Scanned Document "M" = Manual closure
"RTN","MAGGNTI3",30,0)
 ;  MAGES    - The encrypted Electronic Signature
"RTN","MAGGNTI3",31,0)
 ;  MAGESBY  - The DUZ of the Signer (Defaults to DUZ)
"RTN","MAGGNTI3",32,0)
 ;  MAGTEXT  - Array of Text to add to the New Note. // NOT USED IN 3.0.59
"RTN","MAGGNTI3",33,0)
 ;
"RTN","MAGGNTI3",34,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGNTI3",35,0)
 S MAGDFN=$G(MAGDFN),MAGTIUDA=$G(MAGTIUDA)
"RTN","MAGGNTI3",36,0)
 S MAGES=$G(MAGES),MAGADCL=$G(MAGADCL)
"RTN","MAGGNTI3",37,0)
 S MAGESBY=$S($G(MAGESBY):MAGESBY,1:DUZ)
"RTN","MAGGNTI3",38,0)
 S MAGMODE=$S($L($G(MAGMODE)):MAGMODE,1:"S")
"RTN","MAGGNTI3",39,0)
 I '$$VALDATA^MAGGNTI2(.MAGRY,MAGDFN,MAGTIUDA) Q
"RTN","MAGGNTI3",40,0)
 N MAGXT,I,CT,MAGMRC,X
"RTN","MAGGNTI3",41,0)
 S CT=1,I=""
"RTN","MAGGNTI3",42,0)
 ; We don't allow Editing/Adding of Text to an existing document.
"RTN","MAGGNTI3",43,0)
 ; If Change Status to Admin Close. Then we Quit
"RTN","MAGGNTI3",44,0)
 S MAGRY="1^"
"RTN","MAGGNTI3",45,0)
 I MAGADCL="1" D  Q:'MAGRY
"RTN","MAGGNTI3",46,0)
 . D ADMNCLOS^MAGGNTI2(.MAGTY,MAGDFN,MAGTIUDA,MAGMODE)
"RTN","MAGGNTI3",47,0)
 . S MAGRY=$S('MAGTY:MAGTY,1:MAGRY_"Note is Administratively Closed.")
"RTN","MAGGNTI3",48,0)
 . S ^TMP($J,"MAGGNTI1","MOD AFTER ADMNCLOS ")=MAGRY
"RTN","MAGGNTI3",49,0)
 . Q:'MAGRY
"RTN","MAGGNTI3",50,0)
 . ; Note has been E-Filed  Complete the Consult if one is attached.
"RTN","MAGGNTI3",51,0)
 . D GET1405^TIUSRVR(.MAGMRC,MAGTIUDA)
"RTN","MAGGNTI3",52,0)
 . S ^TMP($J,"MAGGNTI1","MOD MAGMRC")=$G(MAGMRC)
"RTN","MAGGNTI3",53,0)
 . I (+MAGMRC>0)&(MAGMRC["GMR(123") D
"RTN","MAGGNTI3",54,0)
 . . ;Use GRMC Call to 'Close' the consult. For AdminClos the Consult Status
"RTN","MAGGNTI3",55,0)
 . . ;went from 'p' to 'pr'  this will change it to 'c' (complete).        
"RTN","MAGGNTI3",56,0)
 . . S X=$$SFILE^GMRCGUIB(+MAGMRC,10)
"RTN","MAGGNTI3",57,0)
 . . Q
"RTN","MAGGNTI3",58,0)
 . Q
"RTN","MAGGNTI3",59,0)
 ;
"RTN","MAGGNTI3",60,0)
 ; if caller sent esignature to Sign this Addendum.
"RTN","MAGGNTI3",61,0)
 I $L(MAGES) D  Q:'MAGRY
"RTN","MAGGNTI3",62,0)
 . D SIGN(.MAGTY,MAGDFN,MAGTIUDA,MAGES,MAGESBY)
"RTN","MAGGNTI3",63,0)
 . S MAGRY=$S('MAGTY:MAGTY,1:MAGRY_"Note is Signed.")
"RTN","MAGGNTI3",64,0)
 . Q
"RTN","MAGGNTI3",65,0)
 Q
"RTN","MAGGNTI3",66,0)
SIGN(MAGRY,MAGDFN,MAGTIUDA,MAGES,MAGESBY) ;RPC [MAG3 TIU SIGN RECORD]
"RTN","MAGGNTI3",67,0)
 ; RPC Call to 'Sign' a Note.  
"RTN","MAGGNTI3",68,0)
 ; - - - Required - - - 
"RTN","MAGGNTI3",69,0)
 ; MAGDFN    - DFN of Patient.
"RTN","MAGGNTI3",70,0)
 ; MAGTIUDA  - TIUDA - IEN of TIU Note file 8925
"RTN","MAGGNTI3",71,0)
 ; MAGES     - The encrypted Electronic Signature
"RTN","MAGGNTI3",72,0)
 ; MAGESBY   - The DUZ of the Signer (Defaults to DUZ)
"RTN","MAGGNTI3",73,0)
 ; 
"RTN","MAGGNTI3",74,0)
 N RY
"RTN","MAGGNTI3",75,0)
 S MAGDFN=$G(MAGDFN),MAGTIUDA=$G(MAGTIUDA),MAGES=$G(MAGES),MAGESBY=$G(MAGESBY,DUZ)
"RTN","MAGGNTI3",76,0)
 I '$$VALDATA^MAGGNTI2(.MAGRY,MAGDFN,MAGTIUDA) Q
"RTN","MAGGNTI3",77,0)
 ;
"RTN","MAGGNTI3",78,0)
 ; Calling TIU SIGN RECORD
"RTN","MAGGNTI3",79,0)
 D SIGN^TIUSRVP(.RY,MAGTIUDA,MAGES)
"RTN","MAGGNTI3",80,0)
 ;   on success   RY = 0
"RTN","MAGGNTI3",81,0)
 ;   on error RY = error code ^ < message >
"RTN","MAGGNTI3",82,0)
 I +RY S MAGRY="0^"_$TR(RY,"^","~")
"RTN","MAGGNTI3",83,0)
 E  S MAGRY="1^Success: Note has been Signed."
"RTN","MAGGNTI3",84,0)
 Q
"RTN","MAGGNTI3",85,0)
ERR ; ERROR TRAP
"RTN","MAGGNTI3",86,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGNTI3",87,0)
 S MAGRY="0^ETRAP: "_ERR
"RTN","MAGGNTI3",88,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGNTI3",89,0)
 Q
"RTN","MAGGSIA")
0^3^B37580788
"RTN","MAGGSIA",1,0)
MAGGSIA ;WOIFO/GEK - Imaging RPC Broker calls. Add/Modify Image entry ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIA",2,0)
 ;;3.0;IMAGING;**7,21,8,59**;Nov 27, 2007;Build 20
"RTN","MAGGSIA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIA",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIA",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIA",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIA",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIA",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIA",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIA",11,0)
 ;; |                                                               |
"RTN","MAGGSIA",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIA",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIA",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIA",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIA",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIA",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA",18,0)
 ;;
"RTN","MAGGSIA",19,0)
 Q
"RTN","MAGGSIA",20,0)
 ;
"RTN","MAGGSIA",21,0)
 ;**** CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE
"RTN","MAGGSIA",22,0)
 ;**** on DISK TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGSIA",23,0)
 ;
"RTN","MAGGSIA",24,0)
ADD(MAGRY,MAGARRAY) ; RPC [MAG4 ADD IMAGE]
"RTN","MAGGSIA",25,0)
 ; Calls UPDATE^DIE to Add an Image File entry
"RTN","MAGGSIA",26,0)
 ;  Called from Import API Delphi component and ImportX (Active X) control.
"RTN","MAGGSIA",27,0)
 ;  Parameters : 
"RTN","MAGGSIA",28,0)
 ;    MAGARRAY -  array of field numbers and their entries
"RTN","MAGGSIA",29,0)
 ;             i.e. MAGARRAY(1)=".5^38"  field# .5   data is 38
"RTN","MAGGSIA",30,0)
 ;    If Long Description is included in array (field 11), we create a new
"RTN","MAGGSIA",31,0)
 ;      array to hold the text, and pass that to UPDATE^DIE
"RTN","MAGGSIA",32,0)
 ;    If this entry is an Image Group
"RTN","MAGGSIA",33,0)
 ;      i.e. MAGARRAY(n)="2005.04^344"
"RTN","MAGGSIA",34,0)
 ;      (the field 2005.04 is the OBJECT GROUP MULTIPLE)
"RTN","MAGGSIA",35,0)
 ;      ( 344 is the pointer to the Image File Entry that will be added
"RTN","MAGGSIA",36,0)
 ;      ( as a member of this new/existing Group)
"RTN","MAGGSIA",37,0)
 ;
"RTN","MAGGSIA",38,0)
 ;  Return Variable
"RTN","MAGGSIA",39,0)
 ;
"RTN","MAGGSIA",40,0)
 ;    MAGRY(0) - Array
"RTN","MAGGSIA",41,0)
 ;      Successful   MAGRY(0) = IEN^FILE NAME (with full path)
"RTN","MAGGSIA",42,0)
 ;      UNsuccessful MAGRY(0) = 0^Error desc
"RTN","MAGGSIA",43,0)
 ;                   MAGRY(0)(1..n) = Errors and warnings. 
"RTN","MAGGSIA",44,0)
 ;
"RTN","MAGGSIA",45,0)
 ;    CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE on DISK
"RTN","MAGGSIA",46,0)
 ;      TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGSIA",47,0)
 ;      Changed to include hierarchical directory hash  - PMK 04/23/98
"RTN","MAGGSIA",48,0)
 ;----------------------------------------------------------------
"RTN","MAGGSIA",49,0)
 N MAGGFDA,MAGGDRV,MAGGRP,MAGCHLD,GRPCT,MAGGDA,MAGGFNM
"RTN","MAGGSIA",50,0)
 N MAGGWP,MAGERR,MAGREF,MAGDHASH,MAGTEMP,MAGACT,MAGGIEN,MAGGXE
"RTN","MAGGSIA",51,0)
 N GIEN,DIEN,NEWIEN ;3.0
"RTN","MAGGSIA",52,0)
 N I,J,X,Y,Z,WPCT
"RTN","MAGGSIA",53,0)
 ;
"RTN","MAGGSIA",54,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGSERR"
"RTN","MAGGSIA",55,0)
 I ($D(MAGARRAY)<10) S MAGRY(0)="0^No input data, Operation CANCELED" Q
"RTN","MAGGSIA",56,0)
 ;
"RTN","MAGGSIA",57,0)
 S MAGRY(0)="0^Creating VistA Image Entry..."
"RTN","MAGGSIA",58,0)
 S MAGERR="",MAGGRP=0,GRPCT=1,WPCT=0
"RTN","MAGGSIA",59,0)
 ;  Validate the Data, and Action codes in the Input Array
"RTN","MAGGSIA",60,0)
 D VAL^MAGGSIV(.MAGRY,.MAGARRAY) I 'MAGRY(0) Q
"RTN","MAGGSIA",61,0)
 ;
"RTN","MAGGSIA",62,0)
 ;  Make the FileMan FDA array and the Imaging Action array.
"RTN","MAGGSIA",63,0)
 D MAKEFDA^MAGGSIU2(.MAGGFDA,.MAGARRAY,.MAGACT,.MAGCHLD,.MAGGRP,.MAGGWP)
"RTN","MAGGSIA",64,0)
 I '$D(MAGGFDA(2005,"+1,")) S MAGRY(0)="0^No data to file.  Operation CANCELED." Q
"RTN","MAGGSIA",65,0)
 ;
"RTN","MAGGSIA",66,0)
 ;Q:'$$VALINDEX^MAGGSIV1(.MAGRY,$G(MAGGFDA(2005,"+1,",42)),$G(MAGGFDA(2005,"+1,",44)),$G(MAGGFDA(2005,"+1,",43)))
"RTN","MAGGSIA",67,0)
 ;  Check on some possible problems: required fields, create default values etc.
"RTN","MAGGSIA",68,0)
 D PRE^MAGGSIA1(.MAGERR,.MAGGFDA,MAGGRP,.MAGGDRV,.MAGREF) I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",69,0)
 ; Locking Patch 8. Get latest Image IEN and Deleted IEN take the greater of the two.
"RTN","MAGGSIA",70,0)
 S GIEN=$O(^MAG(2005," "),-1)+1
"RTN","MAGGSIA",71,0)
 S DIEN=$O(^MAG(2005.1," "),-1)+1
"RTN","MAGGSIA",72,0)
 S NEWIEN=$S(GIEN>DIEN:GIEN,1:DIEN)
"RTN","MAGGSIA",73,0)
LOCK L +^MAG(2005,NEWIEN):0 E  S NEWIEN=NEWIEN+1 G LOCK ; lock it, or get next
"RTN","MAGGSIA",74,0)
 I $D(^MAG(2005,NEWIEN)) L -^MAG(2005,NEWIEN) S NEWIEN=NEWIEN+1 G LOCK ; if it exists, get next
"RTN","MAGGSIA",75,0)
 S MAGGIEN(1)=NEWIEN
"RTN","MAGGSIA",76,0)
 D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGSIA",77,0)
 ;
"RTN","MAGGSIA",78,0)
 ;  ERROR: QUIT
"RTN","MAGGSIA",79,0)
 I '$G(MAGGIEN(1)) D  S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",80,0)
 . S MAGERR="0^ERROR Creating new Image File Entry "
"RTN","MAGGSIA",81,0)
 . I $D(DIERR) D RTRNERR^MAGGSIU1(.MAGERR)
"RTN","MAGGSIA",82,0)
 . D CLEAN
"RTN","MAGGSIA",83,0)
 ;
"RTN","MAGGSIA",84,0)
 S MAGGDA=MAGGIEN(1)
"RTN","MAGGSIA",85,0)
 ;
"RTN","MAGGSIA",86,0)
 D ACTION^MAGGTAU("CAP^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA)
"RTN","MAGGSIA",87,0)
 ;
"RTN","MAGGSIA",88,0)
 ; IF a group, UpDate the GROUP PARENT in each Group Object and QUIT
"RTN","MAGGSIA",89,0)
 ;  The Return (MAGRY(0)) will be IEN with NO Filename. Groups don't get Filename
"RTN","MAGGSIA",90,0)
 I MAGGRP D  G C1
"RTN","MAGGSIA",91,0)
 . D UPDCHLD^MAGGSIM(.MAGCHLD,MAGGDA)
"RTN","MAGGSIA",92,0)
 . S MAGRY(0)=MAGGDA_U
"RTN","MAGGSIA",93,0)
 . D CLEAN
"RTN","MAGGSIA",94,0)
 . Q
"RTN","MAGGSIA",95,0)
 ; ENTRY in Image File has been made, if any errors from here on
"RTN","MAGGSIA",96,0)
 ;  then we have to delete the image entry.
"RTN","MAGGSIA",97,0)
 ;  IF This image is a member of a Group, Update the Group Entry with new child.
"RTN","MAGGSIA",98,0)
 S X=$G(MAGGFDA(2005,"+1,",14)) I +X D  I $L(MAGERR) Q
"RTN","MAGGSIA",99,0)
 . D UPDPAR^MAGGSIM(.MAGERR,X,.MAGACT,MAGGDA)
"RTN","MAGGSIA",100,0)
 . I $L(MAGERR) S MAGRY(0)=MAGERR D CLEAN
"RTN","MAGGSIA",101,0)
 ;
"RTN","MAGGSIA",102,0)
 ; Now generate the Image FileName. This is passed back to the calling app, 
"RTN","MAGGSIA",103,0)
 ;  and the calling app is responsible for renaming/copying the Image File to
"RTN","MAGGSIA",104,0)
 ;  this new name. 
"RTN","MAGGSIA",105,0)
 I $D(MAGGFDA(2005,"+1,",1)) S MAGGFNM=MAGGFDA(2005,"+1,",1)
"RTN","MAGGSIA",106,0)
 E  D  I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",107,0)
 . N MAGXFDA
"RTN","MAGGSIA",108,0)
 . S X=$$DA2NAME^MAGGTU1(MAGGDA,$G(MAGACT("EXT"))) I 'X D  Q
"RTN","MAGGSIA",109,0)
 . . S MAGERR=X
"RTN","MAGGSIA",110,0)
 . . D KILLENT^MAGGSIU1(MAGGDA)
"RTN","MAGGSIA",111,0)
 . . D CLEAN
"RTN","MAGGSIA",112,0)
 . ;
"RTN","MAGGSIA",113,0)
 . S MAGGFNM=$P(X,U,2),Y=MAGGDA_","
"RTN","MAGGSIA",114,0)
 . S MAGXFDA(2005,Y,1)=MAGGFNM
"RTN","MAGGSIA",115,0)
 . D UPDATE^DIE("","MAGXFDA","","MAGGXE")
"RTN","MAGGSIA",116,0)
 . ;   in case of an error
"RTN","MAGGSIA",117,0)
 . I $D(DIERR) D  Q
"RTN","MAGGSIA",118,0)
 . . D RTRNERR^MAGGSIU1(.MAGERR,.MAGGXE)
"RTN","MAGGSIA",119,0)
 . . D KILLENT^MAGGSIU1(MAGGDA)
"RTN","MAGGSIA",120,0)
 . . D CLEAN
"RTN","MAGGSIA",121,0)
 ;
"RTN","MAGGSIA",122,0)
C1 ; 59 
"RTN","MAGGSIA",123,0)
 K MAGGFDA ; P59.
"RTN","MAGGSIA",124,0)
 ;P59 Now we Auto-Generate the Index Fields, if they don't exist for this entry
"RTN","MAGGSIA",125,0)
 I '$D(^MAG(2005,MAGGDA,40)) D
"RTN","MAGGSIA",126,0)
 . N INDXD
"RTN","MAGGSIA",127,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGSIA",128,0)
 . D COMIEN^MAGXCVC(MAGGDA,.INDXD)
"RTN","MAGGSIA",129,0)
 . S ^MAGIXCVT(2006.96,MAGGDA)=1 ; Flag. Says fields were converted by index generation
"RTN","MAGGSIA",130,0)
 . ; TRKING ID  TRKID =   MAGGFDA(2005,"+1,",108)
"RTN","MAGGSIA",131,0)
 . ;;D ACTION^MAGGTAU("GENINDX^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGSIA",132,0)
 . D ACTION^MAGGTAU("INDEX-ALL^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA_"$$"_$P(^MAG(2005,MAGGDA,100),"^",5))
"RTN","MAGGSIA",133,0)
 . Q
"RTN","MAGGSIA",134,0)
 ;
"RTN","MAGGSIA",135,0)
 ;P59 If TYPE INDEX is missing we Auto-Generate Index Type and other missing Index Term values.
"RTN","MAGGSIA",136,0)
 I '$P(^MAG(2005,MAGGDA,40),"^",3) D
"RTN","MAGGSIA",137,0)
 . N INDXD,OLD40,N40
"RTN","MAGGSIA",138,0)
 . S (N40,OLD40)=^MAG(2005,MAGGDA,40)
"RTN","MAGGSIA",139,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGSIA",140,0)
 . ; If Origin doesn't exist in existing, this will put V in. 
"RTN","MAGGSIA",141,0)
 . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGSIA",142,0)
 . ; We're not changing existing values of Spec,Proc or Origin 
"RTN","MAGGSIA",143,0)
 . F J=1:1:6 I '$L($P(N40,"^",J)) S $P(N40,"^",J)=$P(INDXD,"^",J)
"RTN","MAGGSIA",144,0)
 . ;Validate the merged Spec and Proc, if  not valid, revert back to old Spec and Proc
"RTN","MAGGSIA",145,0)
 . I '$$VALINDEX^MAGGSIV1(.X,$P(N40,"^",3),$P(N40,"^",5),$P(N40,"^",4)) S $P(N40,"^",4,5)=$P(OLD40,"^",4,5)
"RTN","MAGGSIA",146,0)
 . S ^MAG(2005,MAGGDA,40)=N40
"RTN","MAGGSIA",147,0)
 . ;;D ACTION^MAGGTAU("INDEX-42^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA) ;_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGSIA",148,0)
 . D ACTION^MAGGTAU("INDEX-42^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA_"$$"_$P(^MAG(2005,MAGGDA,100),"^",5))
"RTN","MAGGSIA",149,0)
 . D ENTRY^MAGLOG("INDEX-42",DUZ,MAGGDA,"P59",$P(^MAG(2005,MAGGDA,0),"^",7),1)
"RTN","MAGGSIA",150,0)
 . Q
"RTN","MAGGSIA",151,0)
 ;** ABS and JB image queues AREN'T SET WHEN ADDING AN IMAGE. 
"RTN","MAGGSIA",152,0)
 ;** RPC =-> 'MAG ABSJB' after abstract is/isn't created on the workstation
"RTN","MAGGSIA",153,0)
 ;
"RTN","MAGGSIA",154,0)
 ;  The Return is:  IEN ^ DRIVE:DIR ^ FILE.EXT [^ DRIVE:DIR ^ FILE.BIG]
"RTN","MAGGSIA",155,0)
 ;   example:  487^C:\IMAGE\^DC000487.TIF
"RTN","MAGGSIA",156,0)
 ;  The calling routine is responsible for renaming/naming the file
"RTN","MAGGSIA",157,0)
 ;   to the returned DRIVE:\DIR\FILENAME.EXT
"RTN","MAGGSIA",158,0)
 ;
"RTN","MAGGSIA",159,0)
 ; Modified 4/23/98 to include hierarchical directory structure -- PMK
"RTN","MAGGSIA",160,0)
 I 'MAGGRP D
"RTN","MAGGSIA",161,0)
 . S MAGDHASH=$$DIRHASH^MAGFILEB(MAGGFNM,MAGREF)
"RTN","MAGGSIA",162,0)
 . ; For now, BIG files are in same directory as FullRes (or PACS) file
"RTN","MAGGSIA",163,0)
 . S MAGRY(0)=MAGGDA_U_MAGGDRV_MAGDHASH_U_MAGGFNM
"RTN","MAGGSIA",164,0)
 . ; If BIG file also, add it's Drive, Hash, Filename to end of Return string.
"RTN","MAGGSIA",165,0)
 . I $G(MAGACT("BIG")) D
"RTN","MAGGSIA",166,0)
 . . S X=$P(MAGGFNM,".",1)_".BIG"
"RTN","MAGGSIA",167,0)
 . . S MAGRY(0)=MAGRY(0)_U_MAGGDRV_MAGDHASH_U_X
"RTN","MAGGSIA",168,0)
 . . Q
"RTN","MAGGSIA",169,0)
 . Q
"RTN","MAGGSIA",170,0)
 ;
"RTN","MAGGSIA",171,0)
CLEAN ; Called as tag
"RTN","MAGGSIA",172,0)
 D CLEAN^DILF
"RTN","MAGGSIA",173,0)
 L -^MAG(2005,NEWIEN)
"RTN","MAGGSIA",174,0)
 Q
"RTN","MAGGSIA1")
0^42^B40441705
"RTN","MAGGSIA1",1,0)
MAGGSIA1 ;WOIFO/GEK - RPC Call to Add Image File entry ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIA1",2,0)
 ;;3.0;IMAGING;**7,8,85,59**;Nov 27, 2007;Build 20
"RTN","MAGGSIA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIA1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIA1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIA1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIA1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIA1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIA1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIA1",11,0)
 ;; |                                                               |
"RTN","MAGGSIA1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIA1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIA1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIA1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIA1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIA1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",18,0)
 ;;
"RTN","MAGGSIA1",19,0)
 Q
"RTN","MAGGSIA1",20,0)
PRE(MAGERR,MAGGFDA,MAGGRP,MAGGDRV,MAGREF) ;
"RTN","MAGGSIA1",21,0)
 ;  Check on some possible problems: required fields etc.
"RTN","MAGGSIA1",22,0)
 ;  Object Type and (Patient, or Short Desc) Required.
"RTN","MAGGSIA1",23,0)
 N MAGRSLT,X,Z
"RTN","MAGGSIA1",24,0)
 I '$D(MAGGFDA(2005,"+1,",3)) D OBJTYPE
"RTN","MAGGSIA1",25,0)
 I '$D(MAGGFDA(2005,"+1,",3)) S MAGERR="0^Need an Object Type " Q
"RTN","MAGGSIA1",26,0)
 I '$D(MAGGFDA(2005,"+1,",5)),'$D(MAGGFDA(2005,"+1,",10)) D  Q
"RTN","MAGGSIA1",27,0)
 . S MAGERR="0^Need Patient or Short Desc.  Operation CANCELED "
"RTN","MAGGSIA1",28,0)
 ; IF no Procedure text we'll give it some so crossref will set.
"RTN","MAGGSIA1",29,0)
 D PATCHK(.MAGRSLT) I 'MAGRSLT S MAGERR=MAGRSLT Q
"RTN","MAGGSIA1",30,0)
 ; Patch 8 IAPI We Create IXCLS (#41 CLASS) and  IXPKG (#40 Package) if TYPE is in Data.
"RTN","MAGGSIA1",31,0)
 ; But we are not making TYPE required yet for backward compatibality.
"RTN","MAGGSIA1",32,0)
 I $D(MAGGFDA(2005,"+1,",42)) D
"RTN","MAGGSIA1",33,0)
 . I $$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),2,"E")="INACTIVE" D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",34,0)
 . . S MAGERR="0^Index Type: "_$$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),.01,"E")_"is INACTIVE"
"RTN","MAGGSIA1",35,0)
 . I '$D(MAGGFDA(2005,"+1,",41)) D MAKECLAS^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",36,0)
 . I ($D(MAGGFDA(2005,"+1,",16)))&($$ISTYPADM(MAGGFDA(2005,"+1,",42))) D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",37,0)
 . . S MAGERR="0^Can't have an ADMIN TYPE with Clinical Image."
"RTN","MAGGSIA1",38,0)
 . I '$D(MAGGFDA(2005,"+1,",40)) D MAKEPKG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",39,0)
 . I '$D(MAGGFDA(2005,"+1,",6)) D MAKEPROC^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",40,0)
 . I '$D(MAGGFDA(2005,"+1,",45)) D MAKEORIG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",41,0)
 . Q
"RTN","MAGGSIA1",42,0)
 ;
"RTN","MAGGSIA1",43,0)
 I '$D(MAGGFDA(2005,"+1,",6)) D PROCTEXT
"RTN","MAGGSIA1",44,0)
 ;
"RTN","MAGGSIA1",45,0)
 ; If no Procedure/Exam Date/Time we'll give it DocDT, or NOW
"RTN","MAGGSIA1",46,0)
 I '$D(MAGGFDA(2005,"+1,",15)) D
"RTN","MAGGSIA1",47,0)
 . I $D(MAGGFDA(2005,"+1,",110)) S MAGGFDA(2005,"+1,",15)=MAGGFDA(2005,"+1,",110) Q
"RTN","MAGGSIA1",48,0)
 . S MAGGFDA(2005,"+1,",15)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",49,0)
 ; DateTime image saved.
"RTN","MAGGSIA1",50,0)
 I '$D(MAGGFDA(2005,"+1,",7)) S MAGGFDA(2005,"+1,",7)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",51,0)
 ; Short Description
"RTN","MAGGSIA1",52,0)
 ;I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",53,0)
 I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$G(MAGGFDA(2005,"+1,",6))
"RTN","MAGGSIA1",54,0)
 ; Name (.01)
"RTN","MAGGSIA1",55,0)
 I '$D(MAGGFDA(2005,"+1,",.01)) S MAGGFDA(2005,"+1,",.01)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",56,0)
 I '$D(MAGGFDA(2005,"+1,",8)) S MAGGFDA(2005,"+1,",8)=$G(DUZ)
"RTN","MAGGSIA1",57,0)
 ; Acquisition Site, Use it to tell where to save the file.
"RTN","MAGGSIA1",58,0)
 I $D(MAGACT("ACQS")) D
"RTN","MAGGSIA1",59,0)
 . ; Patch 8 Have to modify: Field 105 (Acquisition Site) is NOW Field .05
"RTN","MAGGSIA1",60,0)
 . I $P(MAGACT("ACQS"),";")]"" S MAGGFDA(2005,"+1,",.05)=$P(MAGACT("ACQS"),";")
"RTN","MAGGSIA1",61,0)
 ; Only get drive:dir if not a group
"RTN","MAGGSIA1",62,0)
 I 'MAGGRP D  I $L(MAGERR) Q
"RTN","MAGGSIA1",63,0)
 . ; The value of the Action Code "WRITE^value" OVERRIDES any Write Location
"RTN","MAGGSIA1",64,0)
 . ; sent as field # 2 in the input array. (The only value we check for is "PACS" from peter's code)
"RTN","MAGGSIA1",65,0)
 . S X=$S($D(MAGACT("WRITE")):MAGACT("WRITE"),$D(MAGGFDA(2005,"+1,",2)):MAGGFDA(2005,"+1,",2),1:"")
"RTN","MAGGSIA1",66,0)
 . ;P85 Send ACQS as second Param. $$DRIVE will use ACQS If X = ""
"RTN","MAGGSIA1",67,0)
 . ;
"RTN","MAGGSIA1",68,0)
 . S Z=$$DRIVE^MAGGTU1(X,$G(MAGGFDA(2005,"+1,",.05))) ;Drv:Dir to Write
"RTN","MAGGSIA1",69,0)
 . I 'Z S MAGERR=Z Q
"RTN","MAGGSIA1",70,0)
 . S MAGGDRV=$P(Z,U,2)
"RTN","MAGGSIA1",71,0)
 . S MAGGFDA(2005,"+1,",2)=+Z               ;Disk & Vol magnetic
"RTN","MAGGSIA1",72,0)
 . ; if a big file is being made on workstation, put NetWork Location
"RTN","MAGGSIA1",73,0)
 . ; pointer in the BIG NETWORK LOCATION field.
"RTN","MAGGSIA1",74,0)
 . ; (BIG files default to same Network Location as FullRes (or PACS))
"RTN","MAGGSIA1",75,0)
 . I $G(MAGACT("BIG"))=1 S MAGGFDA(2005,"+1,",102)=+Z
"RTN","MAGGSIA1",76,0)
 . S MAGREF=+Z ; save network location ien for $$DIRHASH in ^MAGGSIA1
"RTN","MAGGSIA1",77,0)
 . I $G(MAGACT("ABS"))="STUFFONLY" S MAGGFDA(2005,"+1,",2.1)=+Z
"RTN","MAGGSIA1",78,0)
 ;
"RTN","MAGGSIA1",79,0)
 I $D(MAGACT("ACQL")) S MAGGFDA(2005,"+1,",101)=MAGACT("ACQL")
"RTN","MAGGSIA1",80,0)
 ; HERE we are putting PRE Processing for the Import API action codes.
"RTN","MAGGSIA1",81,0)
 ; "ACQD,ACQS" If Acquisition device entry doesn't exist, create it.
"RTN","MAGGSIA1",82,0)
 I $D(MAGACT("ACQD")) D
"RTN","MAGGSIA1",83,0)
 . ; IF Value is a pointer to the ACQ DEVICE File Quit.  If it's invalid then UPDATE will catch it.
"RTN","MAGGSIA1",84,0)
 . I (+MAGACT("ACQD")=MAGACT("ACQD")) S MAGGFDA(2005,"+1,",107)=MAGACT("ACQD") Q
"RTN","MAGGSIA1",85,0)
 . I $D(^MAG(2006.04,"B",MAGACT("ACQD"))) D  Q
"RTN","MAGGSIA1",86,0)
 . . ; IF Already exists, add it to the FDA
"RTN","MAGGSIA1",87,0)
 . . S MAGGFDA(2005,"+1,",107)=$O(^MAG(2006.04,"B",MAGACT("ACQD"),""))
"RTN","MAGGSIA1",88,0)
 . . ; What do we do with the Acquisition Site. IF Acq Dev already exists. ? 
"RTN","MAGGSIA1",89,0)
 . . ; ??
"RTN","MAGGSIA1",90,0)
 . ; IF it doesn't exist, create it, and add it's ien to the image entry 
"RTN","MAGGSIA1",91,0)
 . N MAGDFDA,MAGDIEN,MAGDXE
"RTN","MAGGSIA1",92,0)
 . S MAGDFDA(2006.04,"+1,",.01)=MAGACT("ACQD")
"RTN","MAGGSIA1",93,0)
 . S MAGDFDA(2006.04,"+1,",1)=$S($D(MAGACT("ACQS")):$P(MAGACT("ACQS"),";"),1:$G(MAGGFDA(2005,"+1,",.05)))
"RTN","MAGGSIA1",94,0)
 . S MAGDFDA(2006.04,"+1,",2)=$S($D(MAGACT("ACQL")):MAGACT("ACQL"),$D(MAGGFDA(2005,"+1,",101)):MAGGFDA(2005,"+1,",101),1:$P($G(MAGACT("ACQS")),";",2))
"RTN","MAGGSIA1",95,0)
 . ; ACQS was a 2 ';' piece value with Acq Location (HOSPITAL LOCATION) as 2nd piece
"RTN","MAGGSIA1",96,0)
 . ;   now it is sent as it's own value in ACQL
"RTN","MAGGSIA1",97,0)
 . D UPDATE^DIE("","MAGDFDA","MAGDIEN","MAGDXE")
"RTN","MAGGSIA1",98,0)
 . S MAGGFDA(2005,"+1,",107)=MAGDIEN(1)
"RTN","MAGGSIA1",99,0)
 ;
"RTN","MAGGSIA1",100,0)
 ;  Check the last entry in Audit File to see if it is greater than 
"RTN","MAGGSIA1",101,0)
 ; last image in Image File.  IF yes, change Image File (0) node entry.
"RTN","MAGGSIA1",102,0)
 I ($O(^MAG(2005,"A"),-1)<$O(^MAG(2005.1,"A"),-1)) S $P(^MAG(2005,0),U,3)=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGSIA1",103,0)
 ;
"RTN","MAGGSIA1",104,0)
 Q
"RTN","MAGGSIA1",105,0)
PATCHK(MAGR) ; This uses the FDA Array and checks the Imaging Patient against the Procedure patient
"RTN","MAGGSIA1",106,0)
 ;
"RTN","MAGGSIA1",107,0)
 N MAGDFN,PX,PXDA,MAGY
"RTN","MAGGSIA1",108,0)
 S PX=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",109,0)
 S PXDA=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",110,0)
 I 'PX S MAGR=1 Q  ; This is a category, or an Image of a group (no parent pointer)
"RTN","MAGGSIA1",111,0)
 S MAGDFN=MAGGFDA(2005,"+1,",5)
"RTN","MAGGSIA1",112,0)
 I (PX=8925) D  Q
"RTN","MAGGSIA1",113,0)
 . I '$D(^TIU(8925,PXDA)) S MAGR="0^Invalid TIU Entry Number: "_PXDA Q
"RTN","MAGGSIA1",114,0)
 . D DATA^MAGGNTI(.MAGY,PXDA)
"RTN","MAGGSIA1",115,0)
 . I '(MAGDFN=$P(MAGY,U,4)) S MAGR="0^Procedure and Imaging patients don't match." Q
"RTN","MAGGSIA1",116,0)
 . S MAGR=1
"RTN","MAGGSIA1",117,0)
 Q
"RTN","MAGGSIA1",118,0)
OBJTYPE ; This call uses the EXT and computes an Object Type
"RTN","MAGGSIA1",119,0)
 N MTYPE
"RTN","MAGGSIA1",120,0)
 I '$L($G(MAGACT("EXT"))) Q
"RTN","MAGGSIA1",121,0)
 S MTYPE=$O(^MAG(2005.02,"AD",MAGACT("EXT"),""))
"RTN","MAGGSIA1",122,0)
 ;I 'MTYPE Q
"RTN","MAGGSIA1",123,0)
 ;TODO : Answer question, do we want to have a default Image type ?
"RTN","MAGGSIA1",124,0)
 I 'MTYPE S MTYPE=1
"RTN","MAGGSIA1",125,0)
 S MAGGFDA(2005,"+1,",3)=MTYPE
"RTN","MAGGSIA1",126,0)
 Q
"RTN","MAGGSIA1",127,0)
ISTYPADM(TYPE) ; Returns 1 if this is an Admin Type
"RTN","MAGGSIA1",128,0)
 N CL
"RTN","MAGGSIA1",129,0)
 I '$G(TYPE) Q 0
"RTN","MAGGSIA1",130,0)
 S CL=$$GET1^DIQ(2005.83,TYPE,1,"E")
"RTN","MAGGSIA1",131,0)
 Q $S($E(CL,1,5)="ADMIN":1,1:0)
"RTN","MAGGSIA1",132,0)
PROCTEXT ;This call uses flds 16 and 17 to compute fld #6 PROCEDURE TEXT [8F]
"RTN","MAGGSIA1",133,0)
 ; We are here because fld #6 PROCEDURE [8F] is null.
"RTN","MAGGSIA1",134,0)
 ; If a pointer to a package is in the data, (flds 16 and 17)
"RTN","MAGGSIA1",135,0)
 ;  get fld #6 from that , if not then treat it as an UNASSIGNED image 
"RTN","MAGGSIA1",136,0)
 ; i.e. Category UNASSIGNED.
"RTN","MAGGSIA1",137,0)
 N MAGYPX,PARENT,PARIEN,PXDESC
"RTN","MAGGSIA1",138,0)
 S PARENT=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",139,0)
 S PARIEN=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",140,0)
 ;
"RTN","MAGGSIA1",141,0)
 I (PARENT=8925),(PARIEN]"") D  Q
"RTN","MAGGSIA1",142,0)
 . D DATA^MAGGNTI(.MAGYPX,PARIEN)
"RTN","MAGGSIA1",143,0)
 . S MAGGFDA(2005,"+1,",6)=$P(MAGYPX,U,2)
"RTN","MAGGSIA1",144,0)
 ;TODO; create calls to get default procedure desc for all specialties
"RTN","MAGGSIA1",145,0)
 ; AND default to NONE if a TYPE and no PARENT data File (fld 16)
"RTN","MAGGSIA1",146,0)
 ; If a Parent pointer exists, and it isn't TIU, for now set "NO Description"
"RTN","MAGGSIA1",147,0)
 I PARENT]"" S MAGGFDA(2005,"+1,",6)="No Description" Q
"RTN","MAGGSIA1",148,0)
 ;
"RTN","MAGGSIA1",149,0)
 ; Do we have a pointer to a MAG DESCRIPTIVE CATEGORY
"RTN","MAGGSIA1",150,0)
 I ($G(MAGGFDA(2005,"+1,",100))]"") D  Q
"RTN","MAGGSIA1",151,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005.81,MAGGFDA(2005,"+1,",100),0),U,1)
"RTN","MAGGSIA1",152,0)
 ; 
"RTN","MAGGSIA1",153,0)
 ; If a new child of a Group, use that Proc Desc
"RTN","MAGGSIA1",154,0)
 I $G(MAGGFDA(2005,"+1,",14))]"" D  Q
"RTN","MAGGSIA1",155,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005,MAGGFDA(2005,"+1,",14),0),U,8)
"RTN","MAGGSIA1",156,0)
 ;
"RTN","MAGGSIA1",157,0)
 ; Parent="", and no Category pointer, then we Call it UNASSIGNED
"RTN","MAGGSIA1",158,0)
 S MAGGFDA(2005,"+1,",100)=$O(^MAG(2005.81,"B","UNASSIGNED",""))
"RTN","MAGGSIA1",159,0)
 S MAGGFDA(2005,"+1,",6)="UNASSIGNED"
"RTN","MAGGSIA1",160,0)
 Q
"RTN","MAGGSIU2")
0^44^B19991293
"RTN","MAGGSIU2",1,0)
MAGGSIU2 ;WOIFO/GEK - Utilities for Image Add/Modify ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIU2",2,0)
 ;;3.0;IMAGING;**7,8,85,59**;Nov 27, 2007;Build 20
"RTN","MAGGSIU2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIU2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU2",11,0)
 ;; |                                                               |
"RTN","MAGGSIU2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU2",18,0)
 ;;
"RTN","MAGGSIU2",19,0)
 Q
"RTN","MAGGSIU2",20,0)
MAKEFDA(MAGGFDA,MAGARRAY,MAGACT,MAGCHLD,MAGGRP,MAGGWP) ;
"RTN","MAGGSIU2",21,0)
 ;  Create the FileMan FDA Array
"RTN","MAGGSIU2",22,0)
 ;  Create Imaging Action Codes Array (for Pre and Post processing)
"RTN","MAGGSIU2",23,0)
 N MAGGFLD,MAGGDAT,GRPCT,WPCT,Z
"RTN","MAGGSIU2",24,0)
 S Z="" F  S Z=$O(MAGARRAY(Z)) Q:Z=""  D  I $L(MAGERR) Q
"RTN","MAGGSIU2",25,0)
 . S MAGGFLD=$P(MAGARRAY(Z),U,1),MAGGDAT=$P(MAGARRAY(Z),U,2,99)
"RTN","MAGGSIU2",26,0)
 . ;  If this entry is one of the action codes, store it in the action array.
"RTN","MAGGSIU2",27,0)
 . I $$ACTCODE^MAGGSIV(MAGGFLD) S MAGACT(MAGGFLD)=MAGGDAT Q
"RTN","MAGGSIU2",28,0)
 . ;
"RTN","MAGGSIU2",29,0)
 . ; If we are Creating a Group Entry, add any Images that are to be members of this group.
"RTN","MAGGSIU2",30,0)
 . I MAGGFLD=2005.04 D  Q
"RTN","MAGGSIU2",31,0)
 . . S MAGGRP=1
"RTN","MAGGSIU2",32,0)
 . . I '+MAGGDAT Q  ; making a group entry, with no group entries yet. This is OK.
"RTN","MAGGSIU2",33,0)
 . . S MAGCHLD(MAGGDAT)=""
"RTN","MAGGSIU2",34,0)
 . . S GRPCT=GRPCT+1
"RTN","MAGGSIU2",35,0)
 . . S MAGGFDA(2005.04,"+"_GRPCT_",+1,",.01)=MAGGDAT
"RTN","MAGGSIU2",36,0)
 . ;
"RTN","MAGGSIU2",37,0)
 . ; if we are getting a WP for Long Desc, set array to pass.
"RTN","MAGGSIU2",38,0)
 . I MAGGFLD=11 D  ; this is one line of the WP Long Desc field.
"RTN","MAGGSIU2",39,0)
 . . S WPCT=WPCT+1,MAGGWP(WPCT)=MAGGDAT
"RTN","MAGGSIU2",40,0)
 . . S MAGGFDA(2005,"+1,",11)="MAGGWP"
"RTN","MAGGSIU2",41,0)
 . ;  Set the Node for the UPDATE^DIC Call.
"RTN","MAGGSIU2",42,0)
 . S MAGGFDA(2005,"+1,",MAGGFLD)=MAGGDAT
"RTN","MAGGSIU2",43,0)
 . Q
"RTN","MAGGSIU2",44,0)
 ; Patch 8.  Special processing for field 107 (ACQUISITION DEVICE)
"RTN","MAGGSIU2",45,0)
 ;  We'll change any MAGGFDA(2005,"+1,",107) to MAGACT("ACQD")
"RTN","MAGGSIU2",46,0)
 ;  This way the PRE processing of the array will check and create a new
"RTN","MAGGSIU2",47,0)
 ;  ACQUISITION DEVICE file entry, if needed. 
"RTN","MAGGSIU2",48,0)
 I $D(MAGACT("107")) S MAGACT("ACQD")=MAGACT("107") K MAGACT("107")
"RTN","MAGGSIU2",49,0)
 I $D(MAGGFDA(2005,"+1,",107)) S MAGACT("ACQD")=MAGGFDA(2005,"+1,",107) K MAGGFDA(2005,"+1,",107)
"RTN","MAGGSIU2",50,0)
 Q
"RTN","MAGGSIU2",51,0)
REQPARAM() ;Do required parameters have values. Called from MAGGSIUI
"RTN","MAGGSIU2",52,0)
 ; VARIABLES ARE SET AND KILLED IN THAT ROUTINE.  
"RTN","MAGGSIU2",53,0)
 N CT
"RTN","MAGGSIU2",54,0)
 S CT=0
"RTN","MAGGSIU2",55,0)
 S MAGRY(0)="1^Checking for Required parameter values..."
"RTN","MAGGSIU2",56,0)
 I IDFN="" S CT=CT+1,MAGRY(CT)="DFN is Required. !"
"RTN","MAGGSIU2",57,0)
 I '$D(IMAGES),'CMTH S CT=CT+1,MAGRY(CT)="List of Images is Required. !"
"RTN","MAGGSIU2",58,0)
 ;
"RTN","MAGGSIU2",59,0)
 I (PXPKG=""),(DOCCTG=""),(IXTYPE="") S CT=CT+1,MAGRY(CT)="Procedure or Category or Index Type is Required. !"
"RTN","MAGGSIU2",60,0)
 I (PXPKG'=""),(DOCCTG'="") S CT=CT+1,MAGRY(CT)="Procedure OR Document Category. Not BOTH. !"
"RTN","MAGGSIU2",61,0)
 ;
"RTN","MAGGSIU2",62,0)
 I (PXPKG'=""),(PXIEN="") S CT=CT+1,MAGRY(CT)="Procedure IEN is Required. !"
"RTN","MAGGSIU2",63,0)
 I (PXPKG=""),(PXIEN'="") S CT=CT+1,MAGRY(CT)="Procedure Package is Required. !"
"RTN","MAGGSIU2",64,0)
 I (PXPKG'=""),(PXDT="") S CT=CT+1,MAGRY(CT)="Procedure Date is Required. !"
"RTN","MAGGSIU2",65,0)
 ;
"RTN","MAGGSIU2",66,0)
 ;Patch 8 index field check... could be using Patch 7 or Patch 8.
"RTN","MAGGSIU2",67,0)
 ;  We're this far, so either PXIEN or DOCCTG is defined
"RTN","MAGGSIU2",68,0)
 I (IXTYPE'=""),(DOCCTG'="") S CT=CT+1,MAGRY(CT)="Image Type OR Document Category. Not BOTH. !"
"RTN","MAGGSIU2",69,0)
 ; MAGGSIA computes PACKAGE #40 and CLASS #41 when adding an Image (2005) entry.
"RTN","MAGGSIU2",70,0)
 ;
"RTN","MAGGSIU2",71,0)
 I TRKID="" S CT=CT+1,MAGRY(CT)="Tracking ID is Required. !"
"RTN","MAGGSIU2",72,0)
 I ACQD="" S CT=CT+1,MAGRY(CT)="Acquisition Device is Required. !"
"RTN","MAGGSIU2",73,0)
 ;   ACQS ( could ? ) default to users institution i.e. DUZ(2)
"RTN","MAGGSIU2",74,0)
 I (ACQS="")&(ACQN="") S CT=CT+1,MAGRY(CT)="Acquisition Site IEN or Station Number is Required. !"
"RTN","MAGGSIU2",75,0)
 I (ACQS]"")&(ACQN]"") S CT=CT+1,MAGRY(CT)="Station IEN or Station Number, Not BOTH. !"
"RTN","MAGGSIU2",76,0)
 ;
"RTN","MAGGSIU2",77,0)
 I STSCB="" S CT=CT+1,MAGRY(CT)="Status Handler (TAG^ROUTINE) is Required. !"
"RTN","MAGGSIU2",78,0)
 ;
"RTN","MAGGSIU2",79,0)
 I (DOCCTG'=""),(DOCDT="") S CT=CT+1,MAGRY(CT)="Document Date is Required. !"
"RTN","MAGGSIU2",80,0)
 ;
"RTN","MAGGSIU2",81,0)
 I (CT>0) S MAGRY(0)="0^Required parameter is null" Q MAGRY(0)
"RTN","MAGGSIU2",82,0)
 ;Checks to stop Duplicate or incorrect Tracking ID's
"RTN","MAGGSIU2",83,0)
 ;  //TODO: ?? check the Queue File, is this Tracking ID already Queued.
"RTN","MAGGSIU2",84,0)
 I (TRKID'="") I $D(^MAG(2005,"ATRKID",TRKID)) S MAGRY(0)="0^Tracking ID Must be Unique !"
"RTN","MAGGSIU2",85,0)
 I (TRKID'="") I ($L(TRKID,";")<2) S MAGRY(0)="0^Tracking ID Must have "";"" Delimiter"
"RTN","MAGGSIU2",86,0)
 ;
"RTN","MAGGSIU2",87,0)
 Q MAGRY(0)
"RTN","MAGGSIUI")
0^4^B44173317
"RTN","MAGGSIUI",1,0)
MAGGSIUI ;WOIFO/GEK - Utilities for Image Import API
"RTN","MAGGSIUI",2,0)
 ;;3.0;IMAGING;**7,8,48,20,85,59**;Nov 27, 2007;Build 20
"RTN","MAGGSIUI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIUI",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIUI",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIUI",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIUI",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIUI",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIUI",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIUI",11,0)
 ;; |                                                               |
"RTN","MAGGSIUI",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIUI",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIUI",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIUI",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIUI",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIUI",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",18,0)
 ;;
"RTN","MAGGSIUI",19,0)
 Q
"RTN","MAGGSIUI",20,0)
REMOTE(MAGRY,MAGDATA) ;RPC [MAG4 REMOTE IMPORT]
"RTN","MAGGSIUI",21,0)
 ; Import Images from a Windows App, by sending an array.
"RTN","MAGGSIUI",22,0)
 I ($D(MAGDATA)<10) S MAGRY(0)="0^Missing Data Array !." Q
"RTN","MAGGSIUI",23,0)
 N I,J,ICT,DCT,MAGIX,IMAGES,ERR,X,Z
"RTN","MAGGSIUI",24,0)
 S (ERR,ICT,DCT)=0
"RTN","MAGGSIUI",25,0)
 S I="" F  S I=$O(MAGDATA(I)) Q:I=""  S X=MAGDATA(I) D  Q:ERR
"RTN","MAGGSIUI",26,0)
 . S Z=$P(X,U)
"RTN","MAGGSIUI",27,0)
 . I (X="")!(Z="") S MAGRY(0)="0^INVALID Data in Input Array: Node "_I_"="""_X_"",ERR=1 Q
"RTN","MAGGSIUI",28,0)
 . I Z="IMAGE" S ICT=ICT+1,IMAGES(ICT)=$P(X,U,2,99) Q
"RTN","MAGGSIUI",29,0)
 . S DCT=DCT+1,MAGIX(Z)=$P(X,U,2,99)
"RTN","MAGGSIUI",30,0)
 I 'ERR D IMPORT(.MAGRY,.IMAGES,.MAGIX)
"RTN","MAGGSIUI",31,0)
 Q
"RTN","MAGGSIUI",32,0)
 ;
"RTN","MAGGSIUI",33,0)
IMPORT(MAGRY,IMAGES,MAGIX) ;
"RTN","MAGGSIUI",34,0)
 ; "IDFN","PXPKG","PXIEN","PXDT","TRKID","ACQD","ACQS","ACQL","STSCB","ITYPE",
"RTN","MAGGSIUI",35,0)
 ;        "CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT",
"RTN","MAGGSIUI",36,0)
 ;        "IXTYPE","IXSPEC","IXPROC","IXORIGIN    ;Patch 8: Added Index fields
"RTN","MAGGSIUI",37,0)
 ;
"RTN","MAGGSIUI",38,0)
 ;Index fields Package, Class ("IXPKG" and "IXCLS") aren't accepted
"RTN","MAGGSIUI",39,0)
 ;    they are computed values.
"RTN","MAGGSIUI",40,0)
 ; - Convert field codes into an Input Data Array,
"RTN","MAGGSIUI",41,0)
 ;   validate, then set the Import Queue
"RTN","MAGGSIUI",42,0)
 ;
"RTN","MAGGSIUI",43,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSIUI",44,0)
 K MAGRY S MAGRY(0)="0^Importing data..."
"RTN","MAGGSIUI",45,0)
 N APISESS,MWIN
"RTN","MAGGSIUI",46,0)
 S MWIN=$$BROKER^XWBLIB
"RTN","MAGGSIUI",47,0)
 N PRM,CT,MAGA,MAGY,MAGTN,TNODE
"RTN","MAGGSIUI",48,0)
 N IDFN,PXPKG,PXIEN,PXDT,TRKID,ACQD,ACQS,ACQN,ACQL,STSCB,ITYPE,CMTH,CDUZ,USERNAME,PASSWORD
"RTN","MAGGSIUI",49,0)
 N GDESC,DFLG,TRTYPE,DOCCTG,DOCDT,IXPKG,IXCLS,IXTYPE,IXSPEC,IXPROC,IXORIGIN,MAX,SITEPLC
"RTN","MAGGSIUI",50,0)
 N ERR,MAGTM,QTIME,MAGIXZ
"RTN","MAGGSIUI",51,0)
 S CT=0,ERR=0
"RTN","MAGGSIUI",52,0)
 M MAGIXZ=MAGIX
"RTN","MAGGSIUI",53,0)
 ;  DON'T CONVERT ACQS(really a ACQN) to a REAL ACQS, leave it ACQS to be converted by MAGGSIV
"RTN","MAGGSIUI",54,0)
 ; 
"RTN","MAGGSIUI",55,0)
 F PRM="IDFN","PXPKG","PXIEN","PXDT","TRKID","ACQD","ACQS","ACQN","ACQL","STSCB","ITYPE","CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT","IXTYPE","IXSPEC","IXPROC","IXORIGIN" D
"RTN","MAGGSIUI",56,0)
 . S @PRM=$G(MAGIX(PRM)) K MAGIX(PRM) ; P8T14 added K.. and next line to account for field numbers later.
"RTN","MAGGSIUI",57,0)
 . Q
"RTN","MAGGSIUI",58,0)
 S PRM="" F  S PRM=$O(MAGIX(PRM)) Q:PRM=""  D SA(PRM,$G(MAGIX(PRM)))
"RTN","MAGGSIUI",59,0)
 ;
"RTN","MAGGSIUI",60,0)
 S MAGTM=$$NOW^XLFDT
"RTN","MAGGSIUI",61,0)
 I '$G(DUZ) S MAGRY(0)="0^DUZ is undefined." Q  ;D ERRTRK Q
"RTN","MAGGSIUI",62,0)
 ; DATATRK sets Global var. APISESS  = IEN of Session File.
"RTN","MAGGSIUI",63,0)
 D DATATRK
"RTN","MAGGSIUI",64,0)
 I '$$REQPARAM^MAGGSIU2() D ERRTRK Q
"RTN","MAGGSIUI",65,0)
 S MAX=$P(TRKID,";",1)="MAX"
"RTN","MAGGSIUI",66,0)
 ;I 'MWIN W !,"----------------" ZW  W !,"---------------------"
"RTN","MAGGSIUI",67,0)
 ; Workaround VIC (Maximus) is sending Station Number 
"RTN","MAGGSIUI",68,0)
 ; we'll convert to Institution IEN
"RTN","MAGGSIUI",69,0)
 I MAX&(ACQS]"") D  Q:ERR
"RTN","MAGGSIUI",70,0)
 . S X=$O(^DIC(4,"D",ACQS,""))
"RTN","MAGGSIUI",71,0)
 . I X="" S MAGRY(0)="0^Invalid Station Number:(Maximus ACQS): "_ACQS,ERR=1 Q
"RTN","MAGGSIUI",72,0)
 . S SITEPLC=X ; We need the Place for the Queue
"RTN","MAGGSIUI",73,0)
 . ;S ACQS=X  Out in 85. Don't change to ACQS, that's done in VAL^MAGGSIV
"RTN","MAGGSIUI",74,0)
 . Q
"RTN","MAGGSIUI",75,0)
 ; Change to Allow ACQN - STATION NUMBER from INSTITUTION File.
"RTN","MAGGSIUI",76,0)
 I $L(ACQN) D  Q:ERR
"RTN","MAGGSIUI",77,0)
 . S ACQS=$O(^DIC(4,"D",ACQN,""))
"RTN","MAGGSIUI",78,0)
 . I ACQS="" S MAGRY(0)="0^Invalid STATION NUMBER: (ACQN): "_ACQN,ERR=1 Q
"RTN","MAGGSIUI",79,0)
 . ; VAL^MAGGSIV Will fail if ACQS is real and this is Maximus 
"RTN","MAGGSIUI",80,0)
 . I MAX S ACQS=ACQN K ACQN Q
"RTN","MAGGSIUI",81,0)
 . S ACQN="" ;We converted to ACQS, lets make "" so no confusion later.
"RTN","MAGGSIUI",82,0)
 . Q
"RTN","MAGGSIUI",83,0)
 ;
"RTN","MAGGSIUI",84,0)
 ; Set the input data array
"RTN","MAGGSIUI",85,0)
 D SA(5,IDFN)    ;PATIENT
"RTN","MAGGSIUI",86,0)
 D SA(16,PXPKG)   ;PARENT DATA FILE
"RTN","MAGGSIUI",87,0)
 D SA(17,PXIEN) ;PARENT GLOBAL ROOT
"RTN","MAGGSIUI",88,0)
 D SA(15,PXDT)   ; PROCEDURE/EXAM DATE/TIME
"RTN","MAGGSIUI",89,0)
 D SA(108,TRKID) ; TRACKING ID (new)
"RTN","MAGGSIUI",90,0)
 D SA("ACQD",ACQD)  ; ACQUISTION DEVICE ( new )
"RTN","MAGGSIUI",91,0)
 I 'MAX S SITEPLC=ACQS D SA(.05,ACQS) ; this used to be fld 105
"RTN","MAGGSIUI",92,0)
 D SA(101,ACQL)
"RTN","MAGGSIUI",93,0)
 D SA("STATUSCB",STSCB)  ; STATUS CALLBACK  (was referred to as ExceptionHandler)
"RTN","MAGGSIUI",94,0)
 D SA(3,ITYPE)   ; OBJECT TYPE
"RTN","MAGGSIUI",95,0)
 D SA("CALLMTH",CMTH)     ; CALL METHOD
"RTN","MAGGSIUI",96,0)
 D SA(8,CDUZ)    ; IMAGE SAVE BY
"RTN","MAGGSIUI",97,0)
 D SA("USERNAME",USERNAME)
"RTN","MAGGSIUI",98,0)
 D SA("PASSWORD",PASSWORD)
"RTN","MAGGSIUI",99,0)
 D SA(10,GDESC)  ; SHORT DESCRIPTION
"RTN","MAGGSIUI",100,0)
 D SA("DELFLAG",DFLG)    ; DELETE FLAG
"RTN","MAGGSIUI",101,0)
 D SA("TRNSTYP",TRTYPE)  ; TRANSACTION TYPE
"RTN","MAGGSIUI",102,0)
 D SA(100,DOCCTG) ;  document Main category
"RTN","MAGGSIUI",103,0)
 D SA(110,DOCDT)     ;  document date
"RTN","MAGGSIUI",104,0)
 ; Patch 8 allows Index fields to be imported.
"RTN","MAGGSIUI",105,0)
 ;"IXTYPE","IXSPEC","IXPROC","IXORIGIN"
"RTN","MAGGSIUI",106,0)
 D SA(42,IXTYPE)     ;  Index Type
"RTN","MAGGSIUI",107,0)
 D SA(43,IXPROC)     ;  Index Proc/Event
"RTN","MAGGSIUI",108,0)
 D SA(44,IXSPEC)     ;  Index Spec/SubSpec
"RTN","MAGGSIUI",109,0)
 D SA(45,IXORIGIN)         ;  Index Origin
"RTN","MAGGSIUI",110,0)
 ;
"RTN","MAGGSIUI",111,0)
 D VAL^MAGGSIV(.MAGRY,.MAGA,1) I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",112,0)
 I MAX D SA(.05,ACQS) ; this used to be fld 105
"RTN","MAGGSIUI",113,0)
 ; Also Done in MAGGSIA when image is being Saved.
"RTN","MAGGSIUI",114,0)
 I '$$VALINDEX^MAGGSIV1(.MAGRY,IXTYPE,IXSPEC,IXPROC) D ERRTRK Q
"RTN","MAGGSIUI",115,0)
 ;   Array of Images to Import
"RTN","MAGGSIUI",116,0)
 D SI("IMAGES",.IMAGES) I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",117,0)
 K MAGRY
"RTN","MAGGSIUI",118,0)
 ;
"RTN","MAGGSIUI",119,0)
 I TRTYPE="NOQUEUE" M MAGRY=MAGA S MAGRY(0)="1^" Q
"RTN","MAGGSIUI",120,0)
 ; This call is for BP
"RTN","MAGGSIUI",121,0)
 S QTIME=$$NOW^XLFDT
"RTN","MAGGSIUI",122,0)
 ; p85 use ACQS instead of DUZ(2)
"RTN","MAGGSIUI",123,0)
 S MAGY=$$IMPORT^MAGBAPI(.MAGA,STSCB,TRKID,$$PLACE^MAGBAPI(SITEPLC))
"RTN","MAGGSIUI",124,0)
 ; Return Queue Number
"RTN","MAGGSIUI",125,0)
 I 'MAGY S MAGRY(0)="0^Error Setting Queue: "_$P(MAGY,U,2),MAGY=TRKID
"RTN","MAGGSIUI",126,0)
 E  S MAGRY(0)=MAGY_"^Data has been Queued.",MAGY=+MAGY
"RTN","MAGGSIUI",127,0)
 ; for Testing, we'll track input array, and results array by Queue number.
"RTN","MAGGSIUI",128,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",129,0)
 D LOGRES^MAGGSIU3(.MAGRY,0,APISESS)
"RTN","MAGGSIUI",130,0)
 ;
"RTN","MAGGSIUI",131,0)
 Q
"RTN","MAGGSIUI",132,0)
 ;
"RTN","MAGGSIUI",133,0)
SA(FLD,VAL) ;Set the data array with Fld,Value
"RTN","MAGGSIUI",134,0)
 Q:VAL=""
"RTN","MAGGSIUI",135,0)
 S CT=CT+1,MAGA(CT)=FLD_U_VAL
"RTN","MAGGSIUI",136,0)
 Q
"RTN","MAGGSIUI",137,0)
SI(FLD,ARR) ;Set the images into the data array
"RTN","MAGGSIUI",138,0)
 ; 'CT' is a global variable.
"RTN","MAGGSIUI",139,0)
 S MAGRY(0)="1^Valid Image file Extensions."
"RTN","MAGGSIUI",140,0)
 N I,MAGEXT,MAGFN
"RTN","MAGGSIUI",141,0)
 S I="" F  S I=$O(ARR(I)) Q:I=""  D  Q:'MAGRY(0)
"RTN","MAGGSIUI",142,0)
 . S CT=CT+1
"RTN","MAGGSIUI",143,0)
 . I ($L($P(ARR(I),U),".")<2) S MAGRY(0)="0^Invalid file name: "_ARR(I) Q
"RTN","MAGGSIUI",144,0)
 . S MAGFN=$P(ARR(I),"^")
"RTN","MAGGSIUI",145,0)
 . S MAGEXT=$$UP^XLFSTR($P(MAGFN,".",$L(MAGFN,".")))
"RTN","MAGGSIUI",146,0)
 . I '$D(^MAG(2005.021,"B",MAGEXT)) S MAGRY(0)="0^Unsupported File Type:'."_MAGEXT Q
"RTN","MAGGSIUI",147,0)
 . S MAGA(CT)="IMAGE"_U_ARR(I)
"RTN","MAGGSIUI",148,0)
 Q
"RTN","MAGGSIUI",149,0)
GETARR(ARR,QNUM) ;RPC [MAG4 DATA FROM IMPORT QUEUE]
"RTN","MAGGSIUI",150,0)
 ; Get the Input Array from Queue Number
"RTN","MAGGSIUI",151,0)
 I '$G(QNUM) S ARR(0)="0^INVALID QUEUE Number: "_$G(QNUM) Q
"RTN","MAGGSIUI",152,0)
 D IMPAR^MAGQBUT2(.ARR,QNUM)
"RTN","MAGGSIUI",153,0)
 Q
"RTN","MAGGSIUI",154,0)
STATUSCB(MAGRY,STAT,TAGRTN,DOCB) ;RPC [MAG4 STATUS CALLBACK]
"RTN","MAGGSIUI",155,0)
 ; Report Status to calling application
"RTN","MAGGSIUI",156,0)
 ; Now the IAPI and OCX make this call.  Not BP
"RTN","MAGGSIUI",157,0)
 ; STAT(0)= "0^message" or "1^message"
"RTN","MAGGSIUI",158,0)
 ; STAT(1)=TRKID,
"RTN","MAGGSIUI",159,0)
 ;        (2)=QNUM
"RTN","MAGGSIUI",160,0)
 ;        (3..N)=warnings
"RTN","MAGGSIUI",161,0)
 ;TAGRTN                 : The TAG^RTN to call with Status Array
"RTN","MAGGSIUI",162,0)
 ;DOCB                   : (1|0) to suppress execution of Status Callback
"RTN","MAGGSIUI",163,0)
 ; 
"RTN","MAGGSIUI",164,0)
 N APISESS,TRKID,CBMSG
"RTN","MAGGSIUI",165,0)
 S DOCB=$S($G(DOCB)="":1,1:+$G(DOCB)) ;  Default to TRUE
"RTN","MAGGSIUI",166,0)
 ; Old Import API and BP that made this call, will work : DOCB defaults to 1
"RTN","MAGGSIUI",167,0)
 S CBMSG=$S(DOCB:"Status Callback was called",1:"Status Callback was NOT called")
"RTN","MAGGSIUI",168,0)
 I DOCB D @(TAGRTN_"(.STAT)")
"RTN","MAGGSIUI",169,0)
 S MAGRY="1^"_CBMSG
"RTN","MAGGSIUI",170,0)
 S STAT($O(STAT(""),-1)+1)=MAGRY
"RTN","MAGGSIUI",171,0)
 S TRKID=$G(STAT(1))
"RTN","MAGGSIUI",172,0)
 ; Log Results. Always.
"RTN","MAGGSIUI",173,0)
 I $L(TRKID) D
"RTN","MAGGSIUI",174,0)
 . S APISESS=$$SES4TRK^MAGGSIU3(TRKID) ;
"RTN","MAGGSIUI",175,0)
 . I APISESS D LOGRES^MAGGSIU3(.STAT,0,APISESS) ;gek/send Tracking ID to log status
"RTN","MAGGSIUI",176,0)
 Q
"RTN","MAGGSIUI",177,0)
TESTCB(STATARR) ;TESTING.  This is the Status Callback for testing.
"RTN","MAGGSIUI",178,0)
 ; the STATUSCB property must have a Valid "M" TAG^ROUTINE
"RTN","MAGGSIUI",179,0)
 ; TAG TESTCB exists so that STATUSCB validates successfully
"RTN","MAGGSIUI",180,0)
 Q
"RTN","MAGGSIUI",181,0)
ERRTRK ;Track bad data and Quit
"RTN","MAGGSIUI",182,0)
 N I
"RTN","MAGGSIUI",183,0)
 D LOGERR^MAGGSERR("---- New Error ----",APISESS)
"RTN","MAGGSIUI",184,0)
 S I="" F  S I=$O(MAGRY(I)) Q:I=""  D LOGERR^MAGGSERR(MAGRY(I),APISESS)
"RTN","MAGGSIUI",185,0)
 Q
"RTN","MAGGSIUI",186,0)
DATATRK ; Track the raw data being sent to the Import API.
"RTN","MAGGSIUI",187,0)
 ; Log the data being imported.  Results are logged later.
"RTN","MAGGSIUI",188,0)
 N XY
"RTN","MAGGSIUI",189,0)
 S APISESS=$$LOG^MAGGSIU3(.XY,.MAGIXZ,.IMAGES,IDFN,ACQD,TRKID)
"RTN","MAGGSIUI",190,0)
 Q
"RTN","MAGGSIUI",191,0)
ERR ; ERROR TRAP FOR Import API
"RTN","MAGGSIUI",192,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIUI",193,0)
 S MAGRY(0)="0^ETRAP: "_ERR
"RTN","MAGGSIUI",194,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIUI",195,0)
 I $G(APISESS) D ERRTRK
"RTN","MAGGSIUI",196,0)
 Q
"RTN","MAGGSIV")
0^5^B39311019
"RTN","MAGGSIV",1,0)
MAGGSIV ;WOIFO/GEK - Imaging RPC Broker calls. Validate Image data array ; [ 12/27/2000 10:49 ]
"RTN","MAGGSIV",2,0)
 ;;3.0;IMAGING;**7,8,20,59**;Nov 27, 2007;Build 20
"RTN","MAGGSIV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIV",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIV",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIV",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIV",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIV",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIV",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIV",11,0)
 ;; |                                                               |
"RTN","MAGGSIV",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIV",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIV",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIV",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIV",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIV",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV",18,0)
 ;;
"RTN","MAGGSIV",19,0)
 Q
"RTN","MAGGSIV",20,0)
VAL(MAGRY,MAGARRAY,ALL) ;RPC [MAG4 VALIDATE DATA]
"RTN","MAGGSIV",21,0)
 ;Call to Validate the Image Data Array before a new image/modified entry is attempted.  
"RTN","MAGGSIV",22,0)
 ; Called from MAGGSIA, MAGGSIUI and Capture GUI.
"RTN","MAGGSIV",23,0)
 ;  Parameters : 
"RTN","MAGGSIV",24,0)
 ;    MAGARRAY - array of 'Field numbers'|'Action codes'  and their Values 
"RTN","MAGGSIV",25,0)
 ;                     MAGARRAY(1)="5^38"  Field#:  5   Value: 38
"RTN","MAGGSIV",26,0)
 ;         an example of an action code is the Code for File Extension    
"RTN","MAGGSIV",27,0)
 ;                     MAGARRAY(2)="EXT^JPG"  Action: EXT Value: JPG                        
"RTN","MAGGSIV",28,0)
 ;    ALL - "1" = Validate ALL fields, returning an array of error messages.
"RTN","MAGGSIV",29,0)
 ;          "0" = Stop validating if an error occurs, return
"RTN","MAGGSIV",30,0)
 ;                           the error message in (0) node.
"RTN","MAGGSIV",31,0)
 ;  Return Variable
"RTN","MAGGSIV",32,0)
 ;    MAGRY() - Array
"RTN","MAGGSIV",33,0)
 ;      Successful   MAGRY(0) = 1^Image Data is Valid.
"RTN","MAGGSIV",34,0)
 ;      UNsuccessful MAGRY(0) = 0^Error desc
"RTN","MAGGSIV",35,0)
 ;                   IF ALL then MAGRY(1..N) =0^Error desc of all errors
"RTN","MAGGSIV",36,0)
 N MAGGFLD,MAGGDAT,MAGFSPEC,CHKOK,MAGETXT,MAGRET,MAGRES
"RTN","MAGGSIV",37,0)
 N Y,AITEM,CT,MAGERR,DFNFLAG,DAT1,X,MAX
"RTN","MAGGSIV",38,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSIV",39,0)
 S ALL=$G(ALL)
"RTN","MAGGSIV",40,0)
 S MAGRY(0)="0^Validating the Data Array..."
"RTN","MAGGSIV",41,0)
 S MAGERR="",DFNFLAG=0,CT=0
"RTN","MAGGSIV",42,0)
 ;  Do we have any data ? 
"RTN","MAGGSIV",43,0)
 I ($D(MAGARRAY)<10) S MAGRY(0)="0^No input data, Operation CANCELED" Q
"RTN","MAGGSIV",44,0)
 ;  Flag if from Maximus
"RTN","MAGGSIV",45,0)
 S MAX=0
"RTN","MAGGSIV",46,0)
 S X="" F  S X=$O(MAGARRAY(X)) Q:X=""  I $P(MAGARRAY(X),U,1)="TRKID"!($P(MAGARRAY(X),U,1)="108") I $P($P(MAGARRAY(X),U,2),";",1)="MAX" S MAX=1
"RTN","MAGGSIV",47,0)
 ;  Loop through Input Array
"RTN","MAGGSIV",48,0)
 S AITEM="" F  S AITEM=$O(MAGARRAY(AITEM)) Q:AITEM=""  D  I $L(MAGERR) Q:'ALL  S CT=CT+1,MAGRY(CT)=MAGERR,MAGERR=""
"RTN","MAGGSIV",49,0)
 . S MAGERR=""
"RTN","MAGGSIV",50,0)
 . S MAGGFLD=$P(MAGARRAY(AITEM),U,1),MAGGDAT=$P(MAGARRAY(AITEM),U,2,99)
"RTN","MAGGSIV",51,0)
 . I MAGGFLD="" S MAGERR="0^A Field Number/Action Code is required: "_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",52,0)
 . I MAGGDAT="" S MAGERR="0^A Value is required."_" Item: "_MAGARRAY(AITEM) Q
"RTN","MAGGSIV",53,0)
 . I MAGGFLD=5 S DFNFLAG=1
"RTN","MAGGSIV",54,0)
 . ; This inadvertently disallowed Tracking ID's on Group Images.
"RTN","MAGGSIV",55,0)
 . ;I MAGGFLD=108 I $D(^MAG(2005,"ATRKID",MAGGDAT)) S MAGERR="0^Tracking ID Must be Unique !" Q
"RTN","MAGGSIV",56,0)
 . I MAGGFLD=108 I ($L(MAGGDAT,";")<2) S MAGRY(0)="0^Tracking ID Must have "";"" Delimiter" Q
"RTN","MAGGSIV",57,0)
 . ; Check for possible action codes that could be in the array.
"RTN","MAGGSIV",58,0)
 . I $$ACTCODE(MAGGFLD) D  Q
"RTN","MAGGSIV",59,0)
 . . S DAT1=MAGGDAT
"RTN","MAGGSIV",60,0)
 . . S Y=$$VALCODE(MAGGFLD,.MAGGDAT) S:'Y MAGERR=Y_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",61,0)
 . . I DAT1'=MAGGDAT S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT
"RTN","MAGGSIV",62,0)
 . ; If we are adding Multiple Images to a Group, they must be Validated.
"RTN","MAGGSIV",63,0)
 . ;   we could have multiple "2005.04^IENs" in this array. Which means we are 
"RTN","MAGGSIV",64,0)
 . ;   adding existing Images to a New/Existing Group.
"RTN","MAGGSIV",65,0)
 . I MAGGFLD=2005.04 D  Q  ; 2005.04 isn't the field number, #4 is the field number
"RTN","MAGGSIV",66,0)
 . . I $G(MAGGDAT,0)=0 Q  ;Creating a new Group, with no group entries is the usual way
"RTN","MAGGSIV",67,0)
 . . ; to do it.  Then make successive calls to ADD, Adding each Image to the 
"RTN","MAGGSIV",68,0)
 . . ; Object Group multiple of the Group Parent (fld#14) as it is created.
"RTN","MAGGSIV",69,0)
 . . I '$D(^MAG(2005,MAGGDAT,0)) S MAGERR="0^Group Object "_MAGGDAT_" doesn't exist"_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",70,0)
 . . ;  We can't allow adding an image if it already has a group parent.
"RTN","MAGGSIV",71,0)
 . . I $P(^MAG(2005,MAGGDAT,0),U,10) S MAGERR="0^The Image to be added to the Group, already has a Group Parent"_" Item: "_MAGARRAY(AITEM)
"RTN","MAGGSIV",72,0)
 . ; if we are getting a WP line of text for Long Desc Field.  Can't validate it.
"RTN","MAGGSIV",73,0)
 . I MAGGFLD=11 Q  ; this is a line of the WP Long Desc field.
"RTN","MAGGSIV",74,0)
 . ; NEW CALL TO VALIDATE FILE,FIELD,DATA 
"RTN","MAGGSIV",75,0)
 . S DAT1=MAGGDAT
"RTN","MAGGSIV",76,0)
 . I '$$VALID^MAGGSIV1(2005,MAGGFLD,.MAGGDAT,.MAGRES) S MAGERR="0^"_MAGRES Q
"RTN","MAGGSIV",77,0)
 . I DAT1'=MAGGDAT S MAGARRAY(AITEM)=MAGGFLD_"^"_MAGGDAT
"RTN","MAGGSIV",78,0)
 . Q
"RTN","MAGGSIV",79,0)
 ;
"RTN","MAGGSIV",80,0)
 ; if there was an Error in data we'll quit now.
"RTN","MAGGSIV",81,0)
 ; If ALL is true, then MAGRY(1...N) will exist if there were errors.
"RTN","MAGGSIV",82,0)
 I $O(MAGRY(0)) S MAGRY(0)="0^Errors were found in data." Q
"RTN","MAGGSIV",83,0)
 ; If ALL is false, then MAGERR will exist if there was an error.
"RTN","MAGGSIV",84,0)
 I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIV",85,0)
 ;
"RTN","MAGGSIV",86,0)
 ;  If all data is valid we get here.
"RTN","MAGGSIV",87,0)
 ;  Last Test, see if a Patient was in array, 
"RTN","MAGGSIV",88,0)
 ;  (Patient is the only Required field check done in this routine).
"RTN","MAGGSIV",89,0)
 I 'DFNFLAG S MAGRY(0)="0^A Patient DFN is required. " Q
"RTN","MAGGSIV",90,0)
 S MAGRY(0)="1^Data is Valid."
"RTN","MAGGSIV",91,0)
 Q
"RTN","MAGGSIV",92,0)
ACTCODE(CODE) ;Function that returns True (1) if this code is a valid Import API Action Code
"RTN","MAGGSIV",93,0)
 ; Patch 8.  We're adding 107 as an action code, so it will pass validation even if the entry
"RTN","MAGGSIV",94,0)
 ;   in the Acquisition Device File doesn't exist;
"RTN","MAGGSIV",95,0)
 ;   it will be validated in PRE^MAGGSIA1 and a new Acquisition Device entry made if needed.
"RTN","MAGGSIV",96,0)
 I ",107,ACQD,IEN,EXT,ABS,JB,WRITE,BIG,DICOMSN,DICOMIN,ACQS,ACQL,STATUSCB,CALLMTH,USERNAME,PASSWORD,DELFLAG,TRNSTYP,"[(","_CODE_",") Q 1
"RTN","MAGGSIV",97,0)
 Q 0
"RTN","MAGGSIV",98,0)
VALCODE(CODE,VALUE) ; We validate the values for the possible action codes
"RTN","MAGGSIV",99,0)
 N MAGY
"RTN","MAGGSIV",100,0)
 I VALUE="" Q "0^NO VALUE in Action Code string: """_X_""
"RTN","MAGGSIV",101,0)
 ; Patch 8, added 107 
"RTN","MAGGSIV",102,0)
 I ",ACQL,CALLMTH,USERNAME,PASSWORD,"[(","_CODE_",") Q 1 ; NO VALIDATION FOR THESE CODES
"RTN","MAGGSIV",103,0)
 D @CODE
"RTN","MAGGSIV",104,0)
 Q MAGY
"RTN","MAGGSIV",105,0)
 ;  Each Tag is a valid Action code
"RTN","MAGGSIV",106,0)
IEN I $D(^MAG(2005,VALUE)) S MAGY=1
"RTN","MAGGSIV",107,0)
 E  S MAGY="0^INVALID IMAGE IEN."
"RTN","MAGGSIV",108,0)
 Q
"RTN","MAGGSIV",109,0)
EXT ; code will go here to validate the extension type.  i.e. we won't let types .exe .bat .com .zip ... etc.
"RTN","MAGGSIV",110,0)
 ;  Maybe a modification to Object Type file, to have allowable extensions in the file, and a 
"RTN","MAGGSIV",111,0)
 ;  cross reference on a new field EXTENSION.  The capture workstation wouldn't have to ask the 
"RTN","MAGGSIV",112,0)
 ; user for the file type of each file, and we wouldn't get WORD .DOC files that the user called Color Images
"RTN","MAGGSIV",113,0)
ABS ; Meaning: Have the BP create the abstract
"RTN","MAGGSIV",114,0)
JB ; Meaning: Have the BP copy the image to the JukeBox
"RTN","MAGGSIV",115,0)
BIG ; Meaning: There is a big file also, set the Image File field ? to indicate there is a BIG File.
"RTN","MAGGSIV",116,0)
 S MAGY=1
"RTN","MAGGSIV",117,0)
 Q
"RTN","MAGGSIV",118,0)
WRITE ; Meaning: This is the Internal Entry (or "PACS") of the WRITE Directory. Images will be written
"RTN","MAGGSIV",119,0)
 ; here instead of the default WRITE Directory.
"RTN","MAGGSIV",120,0)
 S MAGY=$$DRIVE^MAGGTU1(VALUE)
"RTN","MAGGSIV",121,0)
 Q
"RTN","MAGGSIV",122,0)
DICOMSN ;Meaning: DICOM Series Number.  This will be entered in the Group Object multiple, field #1
"RTN","MAGGSIV",123,0)
 ;We were validating this as an integer, but it can be anything, no way to validate.
"RTN","MAGGSIV",124,0)
 S MAGY=1
"RTN","MAGGSIV",125,0)
 Q
"RTN","MAGGSIV",126,0)
DICOMIN ;Meaning: DICOM Image Number.  This will be entered in the Group Object multiple, field #2
"RTN","MAGGSIV",127,0)
 ; We were validating this as an integer, but it can be anything, no way to validate.
"RTN","MAGGSIV",128,0)
 S MAGY=1
"RTN","MAGGSIV",129,0)
 Q
"RTN","MAGGSIV",130,0)
DELFLAG ;Meaning: This flag tells the Delphi Import Component to Delete the Image files after successful processing
"RTN","MAGGSIV",131,0)
 I ",TRUE,FALSE,0,1,"[(","_$$UPPER(VALUE)_",") S MAGY=1
"RTN","MAGGSIV",132,0)
 E  S MAGY="0^INVALID Value "
"RTN","MAGGSIV",133,0)
 I VALUE="1" S VALUE="TRUE"
"RTN","MAGGSIV",134,0)
 I VALUE="0" S VALUE="FALSE"
"RTN","MAGGSIV",135,0)
 Q
"RTN","MAGGSIV",136,0)
TRNSTYP ;Meaning: This flag is for future use, for now it is ignored, defaults to "NEW"
"RTN","MAGGSIV",137,0)
 S MAGY=1
"RTN","MAGGSIV",138,0)
 Q
"RTN","MAGGSIV",139,0)
STATUSCB ; Meaning: This is the TAG^RTN that Imaging calls to report the 
"RTN","MAGGSIV",140,0)
 ; status of the Import.
"RTN","MAGGSIV",141,0)
 S MAGY="0^Error validating TAG^RTN: "_VALUE
"RTN","MAGGSIV",142,0)
 I '$L($T(@VALUE)) S MAGY="0^Invalid Status CallBack "_VALUE
"RTN","MAGGSIV",143,0)
 E  S MAGY=1
"RTN","MAGGSIV",144,0)
 Q
"RTN","MAGGSIV",145,0)
ACQS ; We need to make sure the ACQS (Acquisition Site) is a Valid entry in Imaging Site Params.
"RTN","MAGGSIV",146,0)
 S VALUE=$P(VALUE,";") ; Stop error, when old OCX sends data.
"RTN","MAGGSIV",147,0)
 ; Next Block is for VIC (Maximus) that sends Station Number.
"RTN","MAGGSIV",148,0)
 N ERR S ERR=0
"RTN","MAGGSIV",149,0)
 I MAX D  Q:ERR
"RTN","MAGGSIV",150,0)
 . S X=$O(^DIC(4,"D",VALUE,""))
"RTN","MAGGSIV",151,0)
 . I X="" S MAGY="0^Invalid STATION NUMBER: (ACQS): "_VALUE,ERR=1 Q
"RTN","MAGGSIV",152,0)
 . S VALUE=X
"RTN","MAGGSIV",153,0)
 . Q
"RTN","MAGGSIV",154,0)
 I '$$CONSOLID^MAGBAPI S MAGY=1 Q
"RTN","MAGGSIV",155,0)
 ;Patch 20 will have this.
"RTN","MAGGSIV",156,0)
 I '$D(^MAG(2006.1,"B",VALUE)) S MAGY="0^Acquisition Site ("_VALUE_") is Not in Site Param File." Q
"RTN","MAGGSIV",157,0)
 S MAGY=1
"RTN","MAGGSIV",158,0)
 Q
"RTN","MAGGSIV",159,0)
107 ;    107 and ACQD are the same.  Calling 107 falls into validation for ACQD.
"RTN","MAGGSIV",160,0)
ACQD ; 107 and ACQD are ACQUISITION DEVICE FILE (2006.04) pointers or Values.
"RTN","MAGGSIV",161,0)
 ; If it is an integer, We assume the value is an IEN and validate it here.
"RTN","MAGGSIV",162,0)
 I ((+VALUE)=VALUE),'$D(^MAG(2006.04,VALUE)) S MAGY="0^Invalid IEN ("_VALUE_") for ACQUISITION DEVICE File." Q
"RTN","MAGGSIV",163,0)
 ; if it is not an integer, it is either a new/existing entry for 2006.04 Result is Success,
"RTN","MAGGSIV",164,0)
 ;       and it will be validated in PRE^MAGGSIA1 and added to File 2006.04 if needed.
"RTN","MAGGSIV",165,0)
 S MAGY=1
"RTN","MAGGSIV",166,0)
 Q
"RTN","MAGGSIV",167,0)
UPPER(X) ;
"RTN","MAGGSIV",168,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MAGGSIV",169,0)
 ;
"RTN","MAGGSIV",170,0)
ERR ; ERROR TRAP FOR Import API
"RTN","MAGGSIV",171,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIV",172,0)
 S MAGRY(0)="0^ETRAP: "_ERR
"RTN","MAGGSIV",173,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIV",174,0)
 Q
"RTN","MAGGSIV1")
0^6^B22249629
"RTN","MAGGSIV1",1,0)
MAGGSIV1 ;WOIFO/GEK - Imaging Validate Data ; [ 08/15/2004 08:57 ]
"RTN","MAGGSIV1",2,0)
 ;;3.0;IMAGING;**8,20,59**;Nov 27, 2007;Build 20
"RTN","MAGGSIV1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIV1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIV1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIV1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIV1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIV1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIV1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIV1",11,0)
 ;; |                                                               |
"RTN","MAGGSIV1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIV1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIV1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIV1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIV1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIV1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIV1",18,0)
 ;;
"RTN","MAGGSIV1",19,0)
 Q
"RTN","MAGGSIV1",20,0)
VALID(MAGF,MAGL,MAGD,MAGRES) ; call to validate value for field in a FM file.
"RTN","MAGGSIV1",21,0)
 ; Function is boolean.  Returns:
"RTN","MAGGSIV1",22,0)
 ;        0   -  Invalid 
"RTN","MAGGSIV1",23,0)
 ;        1   -  Valid 
"RTN","MAGGSIV1",24,0)
 ;        ""  -  Error
"RTN","MAGGSIV1",25,0)
 ; Call this function before you set the FDA Array.
"RTN","MAGGSIV1",26,0)
 ; MAGD - sent by reference because it could be Internal or External
"RTN","MAGGSIV1",27,0)
 ;        and if it is external and valid, it is changed to Internal.
"RTN","MAGGSIV1",28,0)
 ;        
"RTN","MAGGSIV1",29,0)
 ; MAGF  : File Number
"RTN","MAGGSIV1",30,0)
 ; MAGL  : Field Number
"RTN","MAGGSIV1",31,0)
 ; MAGD  : (sent by reference) data value of field
"RTN","MAGGSIV1",32,0)
 ; MAGRES: (sent by reference) Result message
"RTN","MAGGSIV1",33,0)
 ;
"RTN","MAGGSIV1",34,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSIV1",35,0)
 N MAGR,MAGMSG,MAGSP,MAGRESA,MAGE,MAGPT
"RTN","MAGGSIV1",36,0)
 ;if a BAD field number
"RTN","MAGGSIV1",37,0)
 I '$$VFIELD^DILFD(MAGF,MAGL) D  Q 0
"RTN","MAGGSIV1",38,0)
 . S MAGRES="The field number: "_MAGL_", in File: "_MAGF_", is invalid."
"RTN","MAGGSIV1",39,0)
 D FIELD^DID(MAGF,MAGL,"","SPECIFIER","MAGSP")
"RTN","MAGGSIV1",40,0)
 ; If it is a pointer field 
"RTN","MAGGSIV1",41,0)
 ; If an  integer - We assume it is a pointer and validate that and Quit.
"RTN","MAGGSIV1",42,0)
 ; If not integer - We assume it is external value, proceed to let CHK do validate
"RTN","MAGGSIV1",43,0)
 I (MAGSP("SPECIFIER")["P"),(+MAGD=MAGD) D  Q MAGPT
"RTN","MAGGSIV1",44,0)
 . I $$EXTERNAL^DILFD(MAGF,MAGL,"",MAGD)'="" S MAGPT=1,MAGRES="Valid pointer" Q
"RTN","MAGGSIV1",45,0)
 . S MAGPT=0,MAGRES="The value: "_MAGD_" for field: "_MAGL_" in File: "_MAGF_" is an invalid Pointer."
"RTN","MAGGSIV1",46,0)
 . Q
"RTN","MAGGSIV1",47,0)
 ;
"RTN","MAGGSIV1",48,0)
 D CHK^DIE(MAGF,MAGL,"E",MAGD,.MAGR,"MAGMSG")
"RTN","MAGGSIV1",49,0)
 ; If success, Quit. We changed External to Internal. Internal is in MAGR
"RTN","MAGGSIV1",50,0)
 I MAGR'="^" S MAGD=MAGR Q 1
"RTN","MAGGSIV1",51,0)
 ;  If not success Get the error text and Quit 0
"RTN","MAGGSIV1",52,0)
 D MSG^DIALOG("A",.MAGRESA,245,5,"MAGMSG")
"RTN","MAGGSIV1",53,0)
 S MAGRES=MAGRESA(1)
"RTN","MAGGSIV1",54,0)
 Q 0
"RTN","MAGGSIV1",55,0)
VALINDEX(MAGRY,TYPE,SPEC,PROC) ; Validate the interdependency of Index Terms.
"RTN","MAGGSIV1",56,0)
 ; MAGRY is the return array 
"RTN","MAGGSIV1",57,0)
 ; MAGRY(0)="1^Okay"  or   "0^error message"
"RTN","MAGGSIV1",58,0)
 ; MAGRY(1..n)  Information about the Type,Spec and Proc
"RTN","MAGGSIV1",59,0)
 ; 
"RTN","MAGGSIV1",60,0)
 ; Validate the Procedure/Event <-> Specialty/SubSpecialty interdependency
"RTN","MAGGSIV1",61,0)
 ; Assure the TYPE is a Clinical TYPE.
"RTN","MAGGSIV1",62,0)
 ; Assure all are Active.
"RTN","MAGGSIV1",63,0)
 N CLS,RES,ARR,TYX,PRX,SPX,OK
"RTN","MAGGSIV1",64,0)
 K MAGRY
"RTN","MAGGSIV1",65,0)
 S TYPE=$G(TYPE),PROC=$G(PROC),SPEC=$G(SPEC)
"RTN","MAGGSIV1",66,0)
 I TYPE=0 S TYPE=""
"RTN","MAGGSIV1",67,0)
 I PROC=0 S PROC=""
"RTN","MAGGSIV1",68,0)
 I SPEC=0 S SPEC=""
"RTN","MAGGSIV1",69,0)
 I ((PROC]"")!(SPEC]"")) I TYPE="" S MAGRY(0)="0^Type is required." Q 0
"RTN","MAGGSIV1",70,0)
 ; TYPE is required, but not enforcing yet.  All vendors are not sending
"RTN","MAGGSIV1",71,0)
 ; index values.
"RTN","MAGGSIV1",72,0)
 ; VALID will accept External or Internal and return Internal if Valid
"RTN","MAGGSIV1",73,0)
 I $L(TYPE) I '$$VALID(2005,42,.TYPE,.RES) S MAGRY(0)="0^"_RES Q 0
"RTN","MAGGSIV1",74,0)
 I $L(PROC) I '$$VALID(2005,43,.PROC,.RES) S MAGRY(0)="0^"_RES Q 0
"RTN","MAGGSIV1",75,0)
 I $L(SPEC) I '$$VALID(2005,44,.SPEC,.RES) S MAGRY(0)="0^"_RES Q 0
"RTN","MAGGSIV1",76,0)
 ;
"RTN","MAGGSIV1",77,0)
 I TYPE D  I 'OK S MAGRY(0)=OK Q 0
"RTN","MAGGSIV1",78,0)
 . S OK=1,TYX=TYPE_","
"RTN","MAGGSIV1",79,0)
 . K ARR D GETS^DIQ(2005.83,TYX,".01;1;2","EI","ARR")
"RTN","MAGGSIV1",80,0)
 . S MAGRY(1)="Type - Class          : "_ARR(2005.83,TYX,.01,"E")_" - "_ARR(2005.83,TYX,1,"E")
"RTN","MAGGSIV1",81,0)
 . I $L(ARR(2005.83,TYX,2,"E")) S MAGRY(1)=MAGRY(1)_" - "_ARR(2005.83,TYX,2,"E")
"RTN","MAGGSIV1",82,0)
 . I ARR(2005.83,TYX,2,"I")="I" S OK="0^Type is Inactive"
"RTN","MAGGSIV1",83,0)
 . Q
"RTN","MAGGSIV1",84,0)
 ;
"RTN","MAGGSIV1",85,0)
 I SPEC D  I 'OK S MAGRY(0)=OK Q 0
"RTN","MAGGSIV1",86,0)
 . S OK=1,SPX=SPEC_","
"RTN","MAGGSIV1",87,0)
 . K ARR D GETS^DIQ(2005.84,SPX,".01;2;4","EI","ARR")
"RTN","MAGGSIV1",88,0)
 . S MAGRY(2)="Specialty/SubSpecialty: "_ARR(2005.84,SPX,.01,"E")
"RTN","MAGGSIV1",89,0)
 . I $L(ARR(2005.84,SPX,4,"E")) S MAGRY(2)=MAGRY(2)_" - "_ARR(2005.84,SPX,4,"E")
"RTN","MAGGSIV1",90,0)
 . I $L(ARR(2005.84,SPX,2,"E")) S MAGRY(2)=MAGRY(2)_" <"_ARR(2005.84,SPX,2,"E")_">"
"RTN","MAGGSIV1",91,0)
 . I ARR(2005.84,SPX,4,"I")="I" S OK="0^Specialty is Inactive"
"RTN","MAGGSIV1",92,0)
 . Q
"RTN","MAGGSIV1",93,0)
 ;
"RTN","MAGGSIV1",94,0)
 I PROC D  I 'OK S MAGRY(0)=OK Q 0
"RTN","MAGGSIV1",95,0)
 . S OK=1,PRX=PROC_","
"RTN","MAGGSIV1",96,0)
 . K ARR D GETS^DIQ(2005.85,PRX,".01;4","EI","ARR")
"RTN","MAGGSIV1",97,0)
 . S MAGRY(4)="Procedure/Event       : "_$$GET1^DIQ(2005.85,PROC,.01)
"RTN","MAGGSIV1",98,0)
 . I $L(ARR(2005.85,PRX,4,"E")) S MAGRY(4)=MAGRY(4)_" - "_ARR(2005.85,PRX,4,"E")
"RTN","MAGGSIV1",99,0)
 . I ARR(2005.85,PRX,4,"I")="I" S OK="0^Procedure is Inactive"
"RTN","MAGGSIV1",100,0)
 . Q
"RTN","MAGGSIV1",101,0)
 ;
"RTN","MAGGSIV1",102,0)
 ; If PROC and SPEC are "", then Quit, any TYPE by itself is valid
"RTN","MAGGSIV1",103,0)
 I (PROC=""),(SPEC="") S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGSIV1",104,0)
 ; Here, TYPE has to be Clin.
"RTN","MAGGSIV1",105,0)
 S CLS=$$GET1^DIQ(2005.83,TYPE,1,"","MAGTAR") I $E(CLS,1,5)="ADMIN" D  Q 0
"RTN","MAGGSIV1",106,0)
 . S MAGRY(0)="0^The Type Index is Administrative, it has to be Clinical."
"RTN","MAGGSIV1",107,0)
 I (PROC="")!(SPEC="") S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGSIV1",108,0)
 ; we get here, we have to validate the interdependency of SPEC <-> PROC.
"RTN","MAGGSIV1",109,0)
 I '$O(^MAG(2005.85,PROC,1,0)) S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGSIV1",110,0)
 I '$D(^MAG(2005.85,PROC,1,"B",SPEC)) D  Q 0
"RTN","MAGGSIV1",111,0)
 . S MAGRY(0)="0^Invalid Association between Spec/SubSpec and Proc/Event"
"RTN","MAGGSIV1",112,0)
 . Q
"RTN","MAGGSIV1",113,0)
 S MAGRY(0)="1^Okay"
"RTN","MAGGSIV1",114,0)
 Q 1
"RTN","MAGGSIV1",115,0)
ERR ;
"RTN","MAGGSIV1",116,0)
 N ERR
"RTN","MAGGSIV1",117,0)
 S ERR=$$EC^%ZOSV
"RTN","MAGGSIV1",118,0)
 S MAGRES="0^Error during data validation: "_ERR
"RTN","MAGGSIV1",119,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGSIV1",120,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIV1",121,0)
 D CLEAN^DILF
"RTN","MAGGSIV1",122,0)
 Q
"RTN","MAGGTAU")
0^24^B53570032
"RTN","MAGGTAU",1,0)
MAGGTAU ;WOIFO/GEK - RPC Calls to Update the Imaging Windows Workstation file ; [ 03/25/2001 11:20 ]
"RTN","MAGGTAU",2,0)
 ;;3.0;IMAGING;**7,16,8,59**;Nov 27, 2007;Build 20
"RTN","MAGGTAU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTAU",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTAU",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTAU",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTAU",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTAU",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTAU",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTAU",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTAU",11,0)
 ;; |                                                               |
"RTN","MAGGTAU",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTAU",13,0)
 ;; | a medical device.  As such, it may not be changed             |
"RTN","MAGGTAU",14,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGGTAU",15,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGGTAU",16,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGGTAU",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTAU",18,0)
 ;;
"RTN","MAGGTAU",19,0)
 Q
"RTN","MAGGTAU",20,0)
UPD(MAGRY,DATA) ;RPC [MAGG WRKS UPDATES]
"RTN","MAGGTAU",21,0)
 ; Called after User login. Local and RIV.
"RTN","MAGGTAU",22,0)
 ; Updates information in the IMAGING WINDOWS WORKSTATION
"RTN","MAGGTAU",23,0)
 ;
"RTN","MAGGTAU",24,0)
 ; DATA is '^' delimited piece
"RTN","MAGGTAU",25,0)
 ; 1 Workstation name            2 Date/Time of capture app.
"RTN","MAGGTAU",26,0)
 ; 3 Date/Time of Display App.
"RTN","MAGGTAU",27,0)
 ; 4 Location of workstation      5 Date/Time of MAGSETUP
"RTN","MAGGTAU",28,0)
 ; 6 Version of Display          7 Version of Capture
"RTN","MAGGTAU",29,0)
 ; 8  1=Normal startup 2=Started by CPRS 3=Import API
"RTN","MAGGTAU",30,0)
 ; 9 OS Version                 10 VistaRad Version
"RTN","MAGGTAU",31,0)
 ; 11 RPCBroker Server    12 RPCBroker Port
"RTN","MAGGTAU",32,0)
 N X,Y,Z
"RTN","MAGGTAU",33,0)
 N MAGNAME,MAGCDT,MAGDDT,MAG0,MAGLOC,MAGIEN,MAGSETUP,MAGSTART,MAGSRV
"RTN","MAGGTAU",34,0)
 N MAGVERSD,MAGVERSC,MAGMODE,MAGOSVER,MAGVERVR,MAGPL,MAGVERX
"RTN","MAGGTAU",35,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",36,0)
 S MAGNAME=$P(DATA,U,1)
"RTN","MAGGTAU",37,0)
 S MAGCDT=$P(DATA,U,2)
"RTN","MAGGTAU",38,0)
 S MAGDDT=$P(DATA,U,3)
"RTN","MAGGTAU",39,0)
 S MAGLOC=$P(DATA,U,4)
"RTN","MAGGTAU",40,0)
 S MAGSETUP=$P(DATA,U,5)
"RTN","MAGGTAU",41,0)
 S MAGVERSD=$P(DATA,U,6)
"RTN","MAGGTAU",42,0)
 I MAGVERSD S MAGJOB("DISPLAY")=""
"RTN","MAGGTAU",43,0)
 S MAGVERSC=$P(DATA,U,7)
"RTN","MAGGTAU",44,0)
 I MAGVERSC S MAGJOB("CAPTURE")=""
"RTN","MAGGTAU",45,0)
 S MAGMODE=$P(DATA,U,8)
"RTN","MAGGTAU",46,0)
 S MAGOSVER=$P(DATA,U,9)
"RTN","MAGGTAU",47,0)
 S MAGVERVR=$P(DATA,U,10)
"RTN","MAGGTAU",48,0)
 I $P(DATA,U,11)]"" S MAGJOB("RPCSERVER")=$P(DATA,U,11)
"RTN","MAGGTAU",49,0)
 I $P(DATA,U,12)]"" S MAGJOB("RPCPORT")=$P(DATA,U,12)
"RTN","MAGGTAU",50,0)
 S MAGIEN=0
"RTN","MAGGTAU",51,0)
 I $L(MAGNAME) S MAGIEN=$O(^MAG(2006.81,"B",MAGNAME,""))
"RTN","MAGGTAU",52,0)
 I 'MAGIEN D NEWWRKS(MAGNAME,MAGLOC,.MAGIEN)
"RTN","MAGGTAU",53,0)
 I MAGIEN<1 S MAGRY="0^Workstation Not on file" Q
"RTN","MAGGTAU",54,0)
 ;
"RTN","MAGGTAU",55,0)
 S %DT="T",X=MAGCDT D ^%DT S MAGCDT=Y
"RTN","MAGGTAU",56,0)
 S %DT="T",X=MAGDDT D ^%DT S MAGDDT=Y
"RTN","MAGGTAU",57,0)
 S %DT="T",X=MAGSETUP D ^%DT S MAGSETUP=Y
"RTN","MAGGTAU",58,0)
 S MAG0=^MAG(2006.81,MAGIEN,0) ; '0' node for use later.
"RTN","MAGGTAU",59,0)
 L +^MAG(2006.81,"LOCK",MAGIEN):0
"RTN","MAGGTAU",60,0)
 S MAGIEN=+MAGIEN_","
"RTN","MAGGTAU",61,0)
 S MAGGFDA(2006.81,MAGIEN,.01)=MAGNAME ; Computer Name
"RTN","MAGGTAU",62,0)
 I MAGCDT>-1 S MAGGFDA(2006.81,MAGIEN,4)=MAGCDT ;TELE19N.EXE dttm
"RTN","MAGGTAU",63,0)
 I MAGDDT>-1 S MAGGFDA(2006.81,MAGIEN,5)=MAGDDT ;IMGVWP10.EXE dttm
"RTN","MAGGTAU",64,0)
 I MAGSETUP>-1 S MAGGFDA(2006.81,MAGIEN,7)=MAGSETUP ; MAGSETUP.EXE dttm
"RTN","MAGGTAU",65,0)
 S MAGGFDA(2006.81,MAGIEN,8)=1 ; Active or not.
"RTN","MAGGTAU",66,0)
 S MAGGFDA(2006.81,MAGIEN,6)=MAGLOC ; location free text from .INI
"RTN","MAGGTAU",67,0)
 S MAGGFDA(2006.81,MAGIEN,3)="@" ; delete logoff time for this job.
"RTN","MAGGTAU",68,0)
 S MAGGFDA(2006.81,MAGIEN,10)="@" ; delete session pointer
"RTN","MAGGTAU",69,0)
 S MAGGFDA(2006.81,MAGIEN,11)="@" ; reset the session error count.
"RTN","MAGGTAU",70,0)
 S MAGGFDA(2006.81,MAGIEN,9)=MAGVERSD ; IMGVWP10.EXE Version Info
"RTN","MAGGTAU",71,0)
 S MAGGFDA(2006.81,MAGIEN,9.5)=MAGVERSC ; TELE19N.EXE Version Info
"RTN","MAGGTAU",72,0)
 S MAGGFDA(2006.81,MAGIEN,9.7)=MAGVERVR ; VistARad.EXE Version Info
"RTN","MAGGTAU",73,0)
 S MAGGFDA(2006.81,MAGIEN,13)=MAGOSVER ; Operating System Version.
"RTN","MAGGTAU",74,0)
 ;
"RTN","MAGGTAU",75,0)
 S X=$P(MAG0,U,12)
"RTN","MAGGTAU",76,0)
 S MAGGFDA(2006.81,MAGIEN,12)=X+1 ; Sess count for wrks.
"RTN","MAGGTAU",77,0)
 ; Keep PLACE that this wrks logged in.
"RTN","MAGGTAU",78,0)
 S MAGPL=0 I $D(DUZ(2)) S MAGPL=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI
"RTN","MAGGTAU",79,0)
 I MAGPL S MAGGFDA(2006.81,MAGIEN,.04)=MAGPL ; DBI
"RTN","MAGGTAU",80,0)
 ;
"RTN","MAGGTAU",81,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTAU",82,0)
 S MAGSTART=$E(X,1,12)
"RTN","MAGGTAU",83,0)
 I $G(DUZ) D
"RTN","MAGGTAU",84,0)
 . S MAGGFDA(2006.81,MAGIEN,1)=DUZ
"RTN","MAGGTAU",85,0)
 . S MAGGFDA(2006.81,MAGIEN,2)=MAGSTART
"RTN","MAGGTAU",86,0)
 ;
"RTN","MAGGTAU",87,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",88,0)
 I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGTAU",89,0)
 ; The MAGJOB( array is used by Imaging routines that are
"RTN","MAGGTAU",90,0)
 ; called from the Delphi App. 
"RTN","MAGGTAU",91,0)
 ; 
"RTN","MAGGTAU",92,0)
 ; 3.0.8 Whatever App calls this, we'll use that Version number.
"RTN","MAGGTAU",93,0)
 S MAGVERX=$S(MAGVERSD]"":MAGVERSD,MAGVERSC]"":MAGVERSC,MAGVERVR]"":MAGVERVR,1:0)
"RTN","MAGGTAU",94,0)
 S MAGJOB("WRKSIEN")=+MAGIEN
"RTN","MAGGTAU",95,0)
 S MAGJOB("VERSION")=MAGVERX
"RTN","MAGGTAU",96,0)
 S MAGRY="1^"
"RTN","MAGGTAU",97,0)
 ;
"RTN","MAGGTAU",98,0)
 ; SESSION : Create new session entry
"RTN","MAGGTAU",99,0)
 D GETS^DIQ(200,DUZ_",","29","I","Z","") ; service/section
"RTN","MAGGTAU",100,0)
 S MAGSRV=$G(Z(200,DUZ_",",29,"I"))
"RTN","MAGGTAU",101,0)
 ;
"RTN","MAGGTAU",102,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",103,0)
 S MAGGFDA(2006.82,"+1,",.01)=$P(^VA(200,DUZ,0),U,1) ; User
"RTN","MAGGTAU",104,0)
 S MAGGFDA(2006.82,"+1,",1)=DUZ ; USER
"RTN","MAGGTAU",105,0)
 S MAGGFDA(2006.82,"+1,",2)=MAGSTART ; Sess Start Time
"RTN","MAGGTAU",106,0)
 S MAGGFDA(2006.82,"+1,",4)=+MAGIEN ; Wrks
"RTN","MAGGTAU",107,0)
 S MAGGFDA(2006.82,"+1,",7)=+MAGSRV ; User's Service/Section
"RTN","MAGGTAU",108,0)
 S MAGGFDA(2006.82,"+1,",13)=MAGMODE ; 1=normal 2= started by CPRS
"RTN","MAGGTAU",109,0)
 ; DBI - save the logon PLACE in the Session file.
"RTN","MAGGTAU",110,0)
 I MAGPL S MAGGFDA(2006.82,"+1,",.04)=MAGPL ; User's Institution (Imaging site param entry)
"RTN","MAGGTAU",111,0)
 ;
"RTN","MAGGTAU",112,0)
 ;3.0.8  new fields 9 Client Ver, 9.2 Host Version, 9.4 OS Version 
"RTN","MAGGTAU",113,0)
 S MAGGFDA(2006.82,"+1,",9)=MAGVERX ;
"RTN","MAGGTAU",114,0)
 S MAGGFDA(2006.82,"+1,",9.2)=$$VERSION^XPDUTL("IMAGING") ;
"RTN","MAGGTAU",115,0)
 S MAGGFDA(2006.82,"+1,",9.4)=MAGOSVER ;
"RTN","MAGGTAU",116,0)
 ;         
"RTN","MAGGTAU",117,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",118,0)
 I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGTAU",119,0)
 S MAGRY="1^"
"RTN","MAGGTAU",120,0)
 I '+MAGXIEN(1) S MAGRY="0^" Q
"RTN","MAGGTAU",121,0)
 S MAGJOB("SESSION")=+MAGXIEN(1)
"RTN","MAGGTAU",122,0)
 S MAGRY=MAGJOB("SESSION")_"^Session # "_MAGJOB("SESSION")_" Started."
"RTN","MAGGTAU",123,0)
 S MAGGFDA(2006.81,+MAGIEN_",",10)=+MAGXIEN(1)
"RTN","MAGGTAU",124,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",125,0)
 D ACTION("LOGON^")
"RTN","MAGGTAU",126,0)
 Q
"RTN","MAGGTAU",127,0)
LOGACT(MAGRY,ACTION) ;RPC [MAG3 LOGACTION]
"RTN","MAGGTAU",128,0)
 ; Call to log actions for Imaging Session from
"RTN","MAGGTAU",129,0)
 ; Delphi interface
"RTN","MAGGTAU",130,0)
 D ACTION(ACTION)
"RTN","MAGGTAU",131,0)
 S MAGRY="1^Action Logged"
"RTN","MAGGTAU",132,0)
 Q
"RTN","MAGGTAU",133,0)
ACTION(TXT,LOGTM,MAGSESS) ;Call to log actions for Imaging Workstation Session from other M routines
"RTN","MAGGTAU",134,0)
 ; ACTIONS LOGGED
"RTN","MAGGTAU",135,0)
 ; LOGON - Session StartTime     LOGOFF - Session End Time
"RTN","MAGGTAU",136,0)
 ; IMG   - Image accessed        PAT    - Patient Accessed
"RTN","MAGGTAU",137,0)
 ; CAP   - Image Captured  
"RTN","MAGGTAU",138,0)
 ; DEL   - Image Deleted         MOD    - Image entry modified
"RTN","MAGGTAU",139,0)
 ; IMPORT - Import API has been called
"RTN","MAGGTAU",140,0)
 ; Data   - a node of data passed to Import API
"RTN","MAGGTAU",141,0)
 ; Result - a node of the Result Array from Import API Processing.
"RTN","MAGGTAU",142,0)
 ; Image  - one of the Images (full path of import directory) that was imported.
"RTN","MAGGTAU",143,0)
 ; PPACT  - A Post processing Action has been processed.
"RTN","MAGGTAU",144,0)
 ; VR-VW  - VistaRad Exam displayed
"RTN","MAGGTAU",145,0)
 ; VR-INT - VistaRad Exam interpreted
"RTN","MAGGTAU",146,0)
 ; API   - parameters sent to CP API, and the API Call i.e. ITIU-MDAPI
"RTN","MAGGTAU",147,0)
 ; DFTINDX- If the index fields have no values, call to Patch 17 code to
"RTN","MAGGTAU",148,0)
 ;               generate the values for the fields.
"RTN","MAGGTAU",149,0)
 ; MOD   - This was intended to log Modifications to Image Entries, it is 
"RTN","MAGGTAU",150,0)
 ;         (for now) only called when a group entry has an image added to its multiple.
"RTN","MAGGTAU",151,0)
 ;
"RTN","MAGGTAU",152,0)
 ; TXT is "^" delimited string
"RTN","MAGGTAU",153,0)
 ; $P(1) is code ( see above )   $P(2) is DFN
"RTN","MAGGTAU",154,0)
 ; $P(3) is Image IEN            $P(4) reserved for procedure
"RTN","MAGGTAU",155,0)
 ; $P(5) reserved for time-stamp $P(6) is Vrad Image Count
"RTN","MAGGTAU",156,0)
 ; $P(7) is Vrad Patient Count
"RTN","MAGGTAU",157,0)
 ; $P(8) is Vrad User Type (1/0 = Rad/Non-Rad)
"RTN","MAGGTAU",158,0)
 ; $P(9) is Vrad REMOTE Read flag (1/0; 1=REMOTE)
"RTN","MAGGTAU",159,0)
 ; $P(TXT,"$$",2) is Tracking ID from an Imported Image.  From this we compute Session #, to log actions.
"RTN","MAGGTAU",160,0)
 ; LOGTM   - [1|0] Flag to indicate whether or not to log the time of the Action.  Default = 0
"RTN","MAGGTAU",161,0)
 ; MAGSESS - Session IEN where the action should be logged.  Default to MAGJOB("SESSION")
"RTN","MAGGTAU",162,0)
 ;
"RTN","MAGGTAU",163,0)
 N NODE,SESSIEN,MAGGFDA,MAGXERR,MAGXIEN,MAGPROC,LOGX,TRKID
"RTN","MAGGTAU",164,0)
 S LOGTM=$G(LOGTM)
"RTN","MAGGTAU",165,0)
 I TXT["$$" S TRKID=$P(TXT,"$$",2),TXT=$P(TXT,"$$",1)
"RTN","MAGGTAU",166,0)
 S SESSIEN=$S($G(MAGSESS):MAGSESS,$D(MAGJOB("SESSION")):MAGJOB("SESSION"),$G(TRKID)'="":$O(^MAG(2006.82,"E",TRKID,""),-1),1:0)
"RTN","MAGGTAU",167,0)
 I 'SESSIEN Q
"RTN","MAGGTAU",168,0)
 S NODE="+1,"_SESSIEN_","
"RTN","MAGGTAU",169,0)
 I $P(TXT,U,3) S MAGPROC=$P($G(^MAG(2005,$P(TXT,U,3),0)),U,8)
"RTN","MAGGTAU",170,0)
 ;
"RTN","MAGGTAU",171,0)
 I $P(TXT,U)="PAT" D
"RTN","MAGGTAU",172,0)
 . S Z=+$G(^MAG(2006.82,SESSIEN,1))+1
"RTN","MAGGTAU",173,0)
 . S MAGGFDA(2006.82,SESSIEN_",",10)=Z
"RTN","MAGGTAU",174,0)
 I $P(TXT,U)="IMG" D
"RTN","MAGGTAU",175,0)
 . S Z=+$P($G(^MAG(2006.82,SESSIEN,1)),U,2)+1
"RTN","MAGGTAU",176,0)
 . S MAGGFDA(2006.82,SESSIEN_",",11)=Z
"RTN","MAGGTAU",177,0)
 . D ENTRY^MAGLOG("IMGVW",DUZ,$P(TXT,"^",3),"Wrks",$P(TXT,"^",2),"1")
"RTN","MAGGTAU",178,0)
 . D ACCESS^MAGLOG($P(TXT,"^",3))
"RTN","MAGGTAU",179,0)
 I $E(TXT,1,3)="CAP" D
"RTN","MAGGTAU",180,0)
 . S Z=+$P($G(^MAG(2006.82,SESSIEN,1)),U,3)+1
"RTN","MAGGTAU",181,0)
 . S MAGGFDA(2006.82,SESSIEN_",",12)=Z
"RTN","MAGGTAU",182,0)
 . D ENTRY^MAGLOG("CAP",DUZ,$P(TXT,"^",3),"Wrks",$P(TXT,"^",2),"1")
"RTN","MAGGTAU",183,0)
 I $P(TXT,U,2) D
"RTN","MAGGTAU",184,0)
 . S MAGGFDA(2006.82,SESSIEN_",",5)=$P(TXT,U,2)
"RTN","MAGGTAU",185,0)
 I LOGTM D
"RTN","MAGGTAU",186,0)
 . S X=$$NOW^XLFDT
"RTN","MAGGTAU",187,0)
 . S $P(TXT,U,4)=$G(MAGPROC),$P(TXT,U,5)=$E(X,1,12)
"RTN","MAGGTAU",188,0)
 S MAGGFDA(2006.821,NODE,.01)=$P(TXT,"|",1)
"RTN","MAGGTAU",189,0)
 I $L(TXT,"|")>1 S MAGGFDA(2006.821,NODE,13)=$P(TXT,"|",2,99)
"RTN","MAGGTAU",190,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",191,0)
 Q
"RTN","MAGGTAU",192,0)
NEWWRKS(MAGNAME,MAGLOC,MAGIEN) ;
"RTN","MAGGTAU",193,0)
 I $G(MAGNAME)="" Q
"RTN","MAGGTAU",194,0)
 N Y,MAGNFDA,MAGNIEN
"RTN","MAGGTAU",195,0)
 S MAGNFDA(2006.81,"+1,",.01)=MAGNAME
"RTN","MAGGTAU",196,0)
 S MAGNFDA(2006.81,"+1,",6)=$G(MAGLOC)
"RTN","MAGGTAU",197,0)
 D UPDATE^DIE("","MAGNFDA","MAGNIEN")
"RTN","MAGGTAU",198,0)
 S MAGIEN=MAGNIEN(1)
"RTN","MAGGTAU",199,0)
 Q
"RTN","MAGGTAU",200,0)
LOGOFF(MAGRY) ;RPC [MAGG LOGOFF] Call when session is over.
"RTN","MAGGTAU",201,0)
 ; This updates session file with logoff time
"RTN","MAGGTAU",202,0)
 ;   and marks the session closed.
"RTN","MAGGTAU",203,0)
 ;
"RTN","MAGGTAU",204,0)
 S MAGRY=1
"RTN","MAGGTAU",205,0)
 N MAGGFDA,MAGXERR,MAGXIEN,MAGIEN,MAGSESS,MAGEND,MAGCON
"RTN","MAGGTAU",206,0)
 ; The Imaging Workstation file keeps time of login
"RTN","MAGGTAU",207,0)
 ; We'll enter the logoff time ($$now^xlfdt) here.
"RTN","MAGGTAU",208,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTAU",209,0)
 S MAGEND=$E(X,1,12)
"RTN","MAGGTAU",210,0)
 Q:'+$G(MAGJOB("WRKSIEN"))
"RTN","MAGGTAU",211,0)
 L -^MAG(2006.81,"LOCK",MAGJOB("WRKSIEN"))
"RTN","MAGGTAU",212,0)
 S MAGIEN=+MAGJOB("WRKSIEN")_","
"RTN","MAGGTAU",213,0)
 S MAGGFDA(2006.81,MAGIEN,3)=MAGEND ; logoff dttm
"RTN","MAGGTAU",214,0)
 S MAGGFDA(2006.81,MAGIEN,8)=0 ; Set job number to 0
"RTN","MAGGTAU",215,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",216,0)
 ;MAGJOB("WRKSIEN")
"RTN","MAGGTAU",217,0)
 Q:(+$G(MAGJOB("SESSION"))=0)
"RTN","MAGGTAU",218,0)
 S MAGSESS=+MAGJOB("SESSION")_","
"RTN","MAGGTAU",219,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",220,0)
 S MAGGFDA(2006.82,MAGSESS,3)=MAGEND
"RTN","MAGGTAU",221,0)
 ; calculate the length of the session
"RTN","MAGGTAU",222,0)
 S MAGCON=""
"RTN","MAGGTAU",223,0)
 S MAGGFDA(2006.82,MAGSESS,14)=MAGCON
"RTN","MAGGTAU",224,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",225,0)
 D ACTION("LOGOFF^")
"RTN","MAGGTAU",226,0)
 ;
"RTN","MAGGTAU",227,0)
 Q
"RTN","MAGGTAU",228,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGTAU",229,0)
 S ETXT="0^ERROR  "_MAGXERR("DIERR",1,"TEXT",1)
"RTN","MAGGTAU",230,0)
 Q
"RTN","MAGGTERR")
0^18^B6185941
"RTN","MAGGTERR",1,0)
MAGGTERR ;WOIFO/GEK - IMAGING ERROR TRAP, AND ERROR LOG ; [ 06/20/2001 08:56 ]
"RTN","MAGGTERR",2,0)
 ;;3.0;IMAGING;**8,59**;Nov 27, 2007;Build 20
"RTN","MAGGTERR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTERR",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTERR",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTERR",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTERR",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTERR",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTERR",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTERR",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTERR",11,0)
 ;; |                                                               |
"RTN","MAGGTERR",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTERR",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTERR",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTERR",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTERR",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTERR",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTERR",18,0)
 ;;
"RTN","MAGGTERR",19,0)
 Q
"RTN","MAGGTERR",20,0)
 ;  Imaging routines should have this code for setting error trap
"RTN","MAGGTERR",21,0)
 ;  This will enable logging Imaging errors and Sending messages for
"RTN","MAGGTERR",22,0)
 ;  certain errors etc. later
"RTN","MAGGTERR",23,0)
 ;N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTERR",24,0)
 ;
"RTN","MAGGTERR",25,0)
 ; This assumes the Return variable or array is MAGRY or MAGRY()
"RTN","MAGGTERR",26,0)
 Q
"RTN","MAGGTERR",27,0)
ERRA ; ERROR TRAP FOR Array Return variables
"RTN","MAGGTERR",28,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTERR",29,0)
 S MAGRY(0)="0^"_ERR
"RTN","MAGGTERR",30,0)
 D LOGERR(ERR)
"RTN","MAGGTERR",31,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTERR",32,0)
 Q
"RTN","MAGGTERR",33,0)
 ;
"RTN","MAGGTERR",34,0)
AERRA ; ERROR TRAP FOR Global Return Variables
"RTN","MAGGTERR",35,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTERR",36,0)
 S @MAGRY@(0)="0^ERROR "_ERR
"RTN","MAGGTERR",37,0)
 D LOGERR(ERR)
"RTN","MAGGTERR",38,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTERR",39,0)
 Q
"RTN","MAGGTERR",40,0)
ERR ; ERROR TRAP FOR String Return variables
"RTN","MAGGTERR",41,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTERR",42,0)
 S MAGRY="0^ERROR "_ERR
"RTN","MAGGTERR",43,0)
 D LOGERR(ERR)
"RTN","MAGGTERR",44,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTERR",45,0)
 Q
"RTN","MAGGTERR",46,0)
LOGERR(ERROR) ;
"RTN","MAGGTERR",47,0)
 Q:'$G(MAGJOB("SESSION"))
"RTN","MAGGTERR",48,0)
 N SESS,WRKS,ERR
"RTN","MAGGTERR",49,0)
 S SESS=$G(MAGJOB("SESSION"))
"RTN","MAGGTERR",50,0)
 ; Quit if No entry in Session File.
"RTN","MAGGTERR",51,0)
 Q:'$D(^MAG(2006.82,SESS,0))
"RTN","MAGGTERR",52,0)
 I '$D(^MAG(2006.82,SESS,"ERR",0)) S ^MAG(2006.82,SESS,"ERR",0)="^2006.823A^0^0"
"RTN","MAGGTERR",53,0)
 S ERR=$O(^MAG(2006.82,SESS,"ERR"," "),-1)+1
"RTN","MAGGTERR",54,0)
 S ^MAG(2006.82,SESS,"ERR",ERR,0)=ERROR
"RTN","MAGGTERR",55,0)
 S $P(^MAG(2006.82,SESS,"ERR",0),"^",3,4)=ERR_"^"_ERR
"RTN","MAGGTERR",56,0)
 ;
"RTN","MAGGTERR",57,0)
 Q:'$G(MAGJOB("WRKSIEN"))
"RTN","MAGGTERR",58,0)
 S WRKS=$G(MAGJOB("WRKSIEN"))
"RTN","MAGGTERR",59,0)
 ; Quit if No entry in Workstation File.
"RTN","MAGGTERR",60,0)
 Q:'$D(^MAG(2006.81,WRKS,0))
"RTN","MAGGTERR",61,0)
 S $P(^MAG(2006.81,WRKS,0),"^",11)=ERR
"RTN","MAGGTERR",62,0)
 Q
"RTN","MAGGTIA1")
0^7^B34754160
"RTN","MAGGTIA1",1,0)
MAGGTIA1 ;WOIFO/GEK - RPC Call to Add Image File entry ; [ 06/20/2001 08:56 ]
"RTN","MAGGTIA1",2,0)
 ;;3.0;IMAGING;**21,8,59**;Nov 27, 2007;Build 20
"RTN","MAGGTIA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTIA1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIA1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIA1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIA1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIA1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIA1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIA1",11,0)
 ;; |                                                               |
"RTN","MAGGTIA1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIA1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIA1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIA1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIA1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIA1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA1",18,0)
 ;;
"RTN","MAGGTIA1",19,0)
 Q
"RTN","MAGGTIA1",20,0)
ADD ;Now call Fileman to file the data
"RTN","MAGGTIA1",21,0)
 N GIEN,DIEN,NEWIEN,MAGGDA,X,Y
"RTN","MAGGTIA1",22,0)
 ;Because we delete the Image node on image deletion, we have to 
"RTN","MAGGTIA1",23,0)
 ; check the last entry in Audit File, to see if it is greater than 
"RTN","MAGGTIA1",24,0)
 ; last image in Image File.
"RTN","MAGGTIA1",25,0)
 I ($O(^MAG(2005,"A"),-1)<$O(^MAG(2005.1,"A"),-1)) S $P(^MAG(2005,0),U,3)=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGTIA1",26,0)
 ;   we know that MAGGIEN WILL contain the internal number.
"RTN","MAGGTIA1",27,0)
 ;    after the call.
"RTN","MAGGTIA1",28,0)
 ;
"RTN","MAGGTIA1",29,0)
 I $G(MAGMOD) D  Q  ; WE'LL QUIT AFTER MODIFICATION
"RTN","MAGGTIA1",30,0)
 . D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",31,0)
 . S MAGRY="1^OK"
"RTN","MAGGTIA1",32,0)
 . ; Now, after UPDATE^DIE, we aren't getting the MAGGIEN array., We'll use MAGMOD
"RTN","MAGGTIA1",33,0)
 . D ACTION^MAGGTAU("MOD^"_$P(^MAG(2005,+MAGMOD,0),U,7)_"^"_+$G(MAGMOD)) ; This is the Image IEN
"RTN","MAGGTIA1",34,0)
 ;
"RTN","MAGGTIA1",35,0)
 ; There are incidents of using an IEN from a deleted image
"RTN","MAGGTIA1",36,0)
 ;  these next lines are to stop the problem.
"RTN","MAGGTIA1",37,0)
 S GIEN=$O(^MAG(2005," "),-1)+1
"RTN","MAGGTIA1",38,0)
 S DIEN=$O(^MAG(2005.1," "),-1)+1
"RTN","MAGGTIA1",39,0)
 S NEWIEN=$S(GIEN>DIEN:GIEN,1:DIEN)
"RTN","MAGGTIA1",40,0)
LOCK L +^MAG(2005,NEWIEN):0 E  S NEWIEN=NEWIEN+1 G LOCK
"RTN","MAGGTIA1",41,0)
 I $D(^MAG(2005,NEWIEN)) L -^MAG(2005,NEWIEN) S NEWIEN=NEWIEN+1 G LOCK
"RTN","MAGGTIA1",42,0)
 S MAGGIEN(1)=NEWIEN
"RTN","MAGGTIA1",43,0)
 D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",44,0)
 ;
"RTN","MAGGTIA1",45,0)
 I '$G(MAGGIEN(1)) D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",46,0)
 . S MAGERR="0^ERROR Creating new Image File Entry "
"RTN","MAGGTIA1",47,0)
 . I $D(DIERR) D RTRNERR(.MAGERR)
"RTN","MAGGTIA1",48,0)
 . D CLEAN
"RTN","MAGGTIA1",49,0)
 ;
"RTN","MAGGTIA1",50,0)
 S MAGGDA=MAGGIEN(1)
"RTN","MAGGTIA1",51,0)
 ;
"RTN","MAGGTIA1",52,0)
 D ACTION^MAGGTAU("CAP^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA)
"RTN","MAGGTIA1",53,0)
 ;
"RTN","MAGGTIA1",54,0)
 ; IF a group, Modify GROUP PARENT in each Group Object and QUIT
"RTN","MAGGTIA1",55,0)
 ;   we'll do this by hand, Else it'll take forever.
"RTN","MAGGTIA1",56,0)
 ;   we Return the IEN with NO Filename. Groups don't get Filename
"RTN","MAGGTIA1",57,0)
 ;
"RTN","MAGGTIA1",58,0)
 I MAGGR S MAGRY=MAGGDA_U,Z="" D  G C1
"RTN","MAGGTIA1",59,0)
 . F  S Z=$O(MAGGR(Z)) Q:Z=""  S $P(^MAG(2005,Z,0),U,10)=MAGGDA
"RTN","MAGGTIA1",60,0)
 . D CLEAN
"RTN","MAGGTIA1",61,0)
 ;
"RTN","MAGGTIA1",62,0)
 S X=$G(MAGGFDA(2005,"+1,",14)) I +X D
"RTN","MAGGTIA1",63,0)
 . ; If here: This image is a member of a Group
"RTN","MAGGTIA1",64,0)
 . ;   -Modify the Group Parent, add DA to it's group
"RTN","MAGGTIA1",65,0)
 . ;   -Also set 'Series Number' and 'Image Number' if they exist;
"RTN","MAGGTIA1",66,0)
 . K MAGGFDA
"RTN","MAGGTIA1",67,0)
 . S Y="+2,"_X_","
"RTN","MAGGTIA1",68,0)
 . S MAGGFDA(2005.04,Y,.01)=MAGGDA
"RTN","MAGGTIA1",69,0)
 . ; GEK 4/4/00 ADDED $L( we were dying on "0"
"RTN","MAGGTIA1",70,0)
 . I $L($G(MAGDCMSN)) S MAGGFDA(2005.04,Y,1)=MAGDCMSN
"RTN","MAGGTIA1",71,0)
 . I $L($G(MAGDCMIN)) S MAGGFDA(2005.04,Y,2)=MAGDCMIN
"RTN","MAGGTIA1",72,0)
 . D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",73,0)
 ;
"RTN","MAGGTIA1",74,0)
 ; Now get the Image file name. DOS FILE name
"RTN","MAGGTIA1",75,0)
 ; The ENTRY in Image File has been made, if any errors from here on
"RTN","MAGGTIA1",76,0)
 ;  then we have to delete the image entry.
"RTN","MAGGTIA1",77,0)
 I $D(MAGGFDA(2005,"+1,",1)) S MAGGFNM=MAGGFDA(2005,"+1,",1) G C1
"RTN","MAGGTIA1",78,0)
 K MAGGFDA
"RTN","MAGGTIA1",79,0)
 S X=$$DA2NAME^MAGGTU1(MAGGDA,$G(MAGGEXT)) I 'X D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",80,0)
 . S MAGERR=X
"RTN","MAGGTIA1",81,0)
 . S DA=MAGGDA,DIK="^MAG(2005," D ^DIK
"RTN","MAGGTIA1",82,0)
 . K DA,DIC,DIK
"RTN","MAGGTIA1",83,0)
 . D CLEAN
"RTN","MAGGTIA1",84,0)
 S MAGGFNM=$P(X,U,2),Y=MAGGDA_","
"RTN","MAGGTIA1",85,0)
 S MAGGFDA(2005,Y,1)=MAGGFNM
"RTN","MAGGTIA1",86,0)
 D UPDATE^DIE("","MAGGFDA","","MAGGXE")
"RTN","MAGGTIA1",87,0)
 ;   shouldn't have an error just editing one entry, but just in case.
"RTN","MAGGTIA1",88,0)
 I $D(DIERR) D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",89,0)
 . D RTRNERR(.MAGERR)
"RTN","MAGGTIA1",90,0)
 . S DA=MAGGDA,DIK="^MAG(2005," D ^DIK
"RTN","MAGGTIA1",91,0)
 . K DA,DIC,DIK
"RTN","MAGGTIA1",92,0)
 . D CLEAN
"RTN","MAGGTIA1",93,0)
 ;
"RTN","MAGGTIA1",94,0)
C1 ; we jump here if we already had a Filename sent
"RTN","MAGGTIA1",95,0)
 K MAGGFDA
"RTN","MAGGTIA1",96,0)
 ; New Index Field Check.  If this entry doesn't have the Index fields introduced
"RTN","MAGGTIA1",97,0)
 ;   in 3.0.8 then we use the Patch 17 conversion API call to generate default values.
"RTN","MAGGTIA1",98,0)
 ;
"RTN","MAGGTIA1",99,0)
 ;P59 Now we Auto-Generate the Index Fields, if they don't exist for this entry.
"RTN","MAGGTIA1",100,0)
 I '$D(^MAG(2005,MAGGDA,40)) D
"RTN","MAGGTIA1",101,0)
 . N INDXD
"RTN","MAGGTIA1",102,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGTIA1",103,0)
 . S ^MAG(2005,MAGGDA,40)=INDXD
"RTN","MAGGTIA1",104,0)
 . S ^MAGIXCVT(2006.96,MAGGDA)=2 ; Flag. Says fields were converted Patch 59
"RTN","MAGGTIA1",105,0)
 . ; TRKING ID  TRKID =   MAGGFDA(2005,"+1,",108)
"RTN","MAGGTIA1",106,0)
 . D ACTION^MAGGTAU("INDEX-ALL^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA) ;_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGTIA1",107,0)
 . D ENTRY^MAGLOG("INDEX-ALL",DUZ,MAGGDA,"P59",$P(^MAG(2005,MAGGDA,0),"^",7),1)
"RTN","MAGGTIA1",108,0)
 . Q
"RTN","MAGGTIA1",109,0)
 ;P59 If TYPE INDEX is missing we Auto-Generate Index Type and other missing Index Term values.
"RTN","MAGGTIA1",110,0)
 I '$P(^MAG(2005,MAGGDA,40),"^",3) D
"RTN","MAGGTIA1",111,0)
 . N INDXD,OLD40,N40
"RTN","MAGGTIA1",112,0)
 . S (N40,OLD40)=^MAG(2005,MAGGDA,40)
"RTN","MAGGTIA1",113,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGTIA1",114,0)
 . ; If Origin doesn't exist in existing, this will put V in. 
"RTN","MAGGTIA1",115,0)
 . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGTIA1",116,0)
 . ; We're not changing existing values of Spec,Proc or Origin 
"RTN","MAGGTIA1",117,0)
 . F J=1:1:6 I '$L($P(N40,"^",J)) S $P(N40,"^",J)=$P(INDXD,"^",J)
"RTN","MAGGTIA1",118,0)
 . ;Validate the merged Spec and Proc, if  not valid, revert back to old Spec and Proc
"RTN","MAGGTIA1",119,0)
 . I '$$VALINDEX^MAGGSIV1(.X,$P(N40,"^",3),$P(N40,"^",5),$P(N40,"^",4)) S $P(N40,"^",4,5)=$P(OLD40,"^",4,5)
"RTN","MAGGTIA1",120,0)
 . S ^MAG(2005,MAGGDA,40)=N40
"RTN","MAGGTIA1",121,0)
 . D ACTION^MAGGTAU("INDEX-42^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA) ;_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGTIA1",122,0)
 . D ENTRY^MAGLOG("INDEX-42",DUZ,MAGGDA,"P59",$P(^MAG(2005,MAGGDA,0),"^",7),1)
"RTN","MAGGTIA1",123,0)
 . Q
"RTN","MAGGTIA1",124,0)
 ;** ABS and JB image queues AREN'T SET WHEN ADDING AN IMAGE. 
"RTN","MAGGTIA1",125,0)
 ;** IT IS DONE IN A SEPERATE CALL 
"RTN","MAGGTIA1",126,0)
 ;** RPC =-> 'MAG ABSJB' after abstract is/isn't created on 
"RTN","MAGGTIA1",127,0)
 ;**  the workstation
"RTN","MAGGTIA1",128,0)
 ;
"RTN","MAGGTIA1",129,0)
 ; Queue it to be copied to Jukebox.
"RTN","MAGGTIA1",130,0)
 ;        CREATE ABSTRACT
"RTN","MAGGTIA1",131,0)
 ; visn15 ADDED $$DA2PLCA to resolve the Image's current PLACE
"RTN","MAGGTIA1",132,0)
 I $G(MAGGABS)="YES" S X=$$ABSTRACT^MAGBAPI(MAGGDA,$$DA2PLC^MAGBAPIP(MAGGDA,"A"))
"RTN","MAGGTIA1",133,0)
 ;        RESTORE AFTER GLOBAL SETUP
"RTN","MAGGTIA1",134,0)
 I $G(MAGGJB)="YES" S X=$$JUKEBOX^MAGBAPI(MAGGDA,$$DA2PLC^MAGBAPIP(MAGGDA,"F"))
"RTN","MAGGTIA1",135,0)
 ;     Code for setting a Queue to Copy BIG to JUKEBOX
"RTN","MAGGTIA1",136,0)
 ; 
"RTN","MAGGTIA1",137,0)
 ;  We return the IEN ^ DRIVE:DIR ^ FILE.EXT
"RTN","MAGGTIA1",138,0)
 ;   example:   487^C:\IMAGE\^DC000487.TIF
"RTN","MAGGTIA1",139,0)
 ;  The calling routine is responsible for renaming/naming the file
"RTN","MAGGTIA1",140,0)
 ;   to the returned DRIVE:\DIR\FILENAME.EXT
"RTN","MAGGTIA1",141,0)
 ;  4/23/98 to include hierarchical directory structure -- PMK
"RTN","MAGGTIA1",142,0)
 ;
"RTN","MAGGTIA1",143,0)
 I 'MAGGR D
"RTN","MAGGTIA1",144,0)
 . S MAGDHASH=$$DIRHASH^MAGFILEB(MAGGFNM,MAGREF)
"RTN","MAGGTIA1",145,0)
 . S MAGRY=MAGGDA_U_MAGGDRV_MAGDHASH_U_MAGGFNM
"RTN","MAGGTIA1",146,0)
 . ; For now, BIG files are in same directory as FullRes (or PACS) file
"RTN","MAGGTIA1",147,0)
 . I $G(MAGBIG) D
"RTN","MAGGTIA1",148,0)
 . . S X=$P(MAGGFNM,".",1)_".BIG"
"RTN","MAGGTIA1",149,0)
 . . S MAGRY=MAGRY_U_MAGGDRV_MAGDHASH_U_X
"RTN","MAGGTIA1",150,0)
 . . Q
"RTN","MAGGTIA1",151,0)
 . Q
"RTN","MAGGTIA1",152,0)
 ;
"RTN","MAGGTIA1",153,0)
CLEAN ;
"RTN","MAGGTIA1",154,0)
 D CLEAN^DILF
"RTN","MAGGTIA1",155,0)
 L -^MAG(2005,NEWIEN)
"RTN","MAGGTIA1",156,0)
 Q
"RTN","MAGGTIA1",157,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGTIA1",158,0)
 S ETXT="0^ERROR  "_MAGGXE("DIERR",1,"TEXT",1)
"RTN","MAGGTIA1",159,0)
 Q
"RTN","MAGGTIA1",160,0)
ERR ; Error trap
"RTN","MAGGTIA1",161,0)
 S MAGRY="0^ERROR "_$$EC^%ZOSV
"RTN","MAGGTIA1",162,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTIA1",163,0)
 Q
"RTN","MAGGTIA1",164,0)
MAKENAME() ; MAGGFDA exists so get info from that.
"RTN","MAGGTIA1",165,0)
 ; We'll make NAME (.01)  with PATIENT NAME   SSN
"RTN","MAGGTIA1",166,0)
 ; DOCUMENT Imaging was making name of
"RTN","MAGGTIA1",167,0)
 ; $E(PATENT NAME,1,10)' '$E(DESC CATEG,1,9)' 'MM/DD/YY   (DOC DATE)
"RTN","MAGGTIA1",168,0)
 N Z,ZT,ZNAME,ZSSN,ZDESC
"RTN","MAGGTIA1",169,0)
 ; GEK 10/10/2000
"RTN","MAGGTIA1",170,0)
 ; Modifying this procedure to make same name for all Image types
"RTN","MAGGTIA1",171,0)
 ;  The name will be (first 18 chars of patient Name) _ SSN
"RTN","MAGGTIA1",172,0)
 I $D(MAGGFDA(2005,"+1,",10)) S ZDESC=$E(MAGGFDA(2005,"+1,",10),1,30)
"RTN","MAGGTIA1",173,0)
 I $D(MAGGFDA(2005,"+1,",5)) D
"RTN","MAGGTIA1",174,0)
 . S X=MAGGFDA(2005,"+1,",5)
"RTN","MAGGTIA1",175,0)
 . S ZNAME=$P(^DPT(X,0),U),ZSSN=$P(^DPT(X,0),U,9)
"RTN","MAGGTIA1",176,0)
 ;
"RTN","MAGGTIA1",177,0)
 ; For all Images the name is first 18 characters of patient name 
"RTN","MAGGTIA1",178,0)
 ;  concatenated with SSN.  If No patient name is sent, well make
"RTN","MAGGTIA1",179,0)
 ;  the name from the short desc.
"RTN","MAGGTIA1",180,0)
 I $D(ZNAME) S Z=$E(ZNAME,1,18)_"   "_ZSSN
"RTN","MAGGTIA1",181,0)
 E  S Z=ZDESC
"RTN","MAGGTIA1",182,0)
 Q Z
"RTN","MAGGTID")
0^39^B44603396
"RTN","MAGGTID",1,0)
MAGGTID ;WOIFO/SRR/RED/SAF/GEK - Deletion of Images and Pointers ; [ 06/20/2001 08:56 ]
"RTN","MAGGTID",2,0)
 ;;3.0;IMAGING;**8,59**;Nov 27, 2007;Build 20
"RTN","MAGGTID",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTID",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTID",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTID",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTID",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTID",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTID",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTID",11,0)
 ;; |                                                               |
"RTN","MAGGTID",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTID",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTID",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTID",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTID",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTID",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",18,0)
 ;;
"RTN","MAGGTID",19,0)
 Q
"RTN","MAGGTID",20,0)
 ;
"RTN","MAGGTID",21,0)
IMAGEDEL(MAGGRY,MAGIEN,MAGGRPDF,REASON) ;RPC [MAGG IMAGE DELETE]
"RTN","MAGGTID",22,0)
 ; Call to Delete Image entry from Image file ^MAG(2005
"RTN","MAGGTID",23,0)
 ; MAGIEN   Image IEN ^ SYSDEL flag
"RTN","MAGGTID",24,0)
 ; MAGGRPDF   group delete flag   1 = group delete allowed
"RTN","MAGGTID",25,0)
 ; SYSDEL    Flag that forces delete, even if no KEY
"RTN","MAGGTID",26,0)
 ; 
"RTN","MAGGTID",27,0)
 N Y,RY
"RTN","MAGGTID",28,0)
 ; 1 in 3rd piece means : DELETE the Image File Also.
"RTN","MAGGTID",29,0)
 S MAGGRPDF=+$G(MAGGRPDF),REASON=$G(REASON)
"RTN","MAGGTID",30,0)
 L +^MAG(2005,MAGIEN):4
"RTN","MAGGTID",31,0)
 E  S MAGGRY(0)="Image ID# "_MAGIEN_" is Locked. Delete is Canceled" Q
"RTN","MAGGTID",32,0)
 D DELETE(.MAGGRY,MAGIEN,1,MAGGRPDF,REASON)
"RTN","MAGGTID",33,0)
 L -^MAG(2005,MAGIEN)
"RTN","MAGGTID",34,0)
 Q
"RTN","MAGGTID",35,0)
DELETE(RY,MAGIEN,DF,GRPDF,REASON) ;RPC [MAGQ DIK] Entry point for silent call
"RTN","MAGGTID",36,0)
 ;RY=Return Array RY(0)="1^SUCCESS" 
"RTN","MAGGTID",37,0)
 ;                RY(0)="0^reason for failure"
"RTN","MAGGTID",38,0)
 ;                ;NOT RETURNING LIST AT THIS TIME
"RTN","MAGGTID",39,0)
 ;                ( RY(1)..RY(n)= IEN's of deleted images.)
"RTN","MAGGTID",40,0)
 ;MAGIEN=Image entry number to be deleted
"RTN","MAGGTID",41,0)
 ; if MAGIEN has a 2nd piece = 1 then we force delete, don't test 
"RTN","MAGGTID",42,0)
 ; for MAG DELETE KEY
"RTN","MAGGTID",43,0)
 ;DF=Delete file flag - 1=delete the Image file
"RTN","MAGGTID",44,0)
 ;                    - 0=don't delete the image file
"RTN","MAGGTID",45,0)
 ;
"RTN","MAGGTID",46,0)
 S REASON=$G(REASON) I REASON="" S REASON="Unknown reason"
"RTN","MAGGTID",47,0)
 S RY(0)="0^Image Delete Failed, reason unknown."
"RTN","MAGGTID",48,0)
 S:'$D(MAGSYS) MAGSYS=^%ZOSF("VOL")
"RTN","MAGGTID",49,0)
 N MAGERR,SYSDEL,Z
"RTN","MAGGTID",50,0)
 S SYSDEL=+$P(MAGIEN,U,2)
"RTN","MAGGTID",51,0)
 ; Check the business rules for deleting an image
"RTN","MAGGTID",52,0)
 D DELETE^MAGSIMBR(.RY,MAGIEN,SYSDEL) I +RY(0)=0 Q
"RTN","MAGGTID",53,0)
 S MAGIEN=+MAGIEN
"RTN","MAGGTID",54,0)
 ;  a couple tests of privilage and valid IEN
"RTN","MAGGTID",55,0)
 I '$D(^MAG(2005,MAGIEN,0)) D  Q
"RTN","MAGGTID",56,0)
 . S RY(0)="0^Image entry doesn't exist in image file"
"RTN","MAGGTID",57,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)=0 D  Q
"RTN","MAGGTID",58,0)
 . S RY(0)="0^Deleting a Group is not allowed."
"RTN","MAGGTID",59,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)'=0 D  Q
"RTN","MAGGTID",60,0)
 . N MAGGRP S MAGGRP=MAGIEN N MAGIEN,MAGX,MAGOK,MAGFAIL
"RTN","MAGGTID",61,0)
 . S MAGX=0,MAGOK=0,MAGFAIL=0
"RTN","MAGGTID",62,0)
 . F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D
"RTN","MAGGTID",63,0)
 . . S MAGIEN=$P($G(^MAG(2005,MAGGRP,1,MAGX,0)),"^") D DEL1IMG
"RTN","MAGGTID",64,0)
 . . I +RY(0) S Z=+$O(RY(""),-1),RY(Z)=RY(Z)_"^"_RY(0),MAGOK=MAGOK+1
"RTN","MAGGTID",65,0)
 . . E  S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN_"^"_RY(0),MAGFAIL=MAGFAIL+1
"RTN","MAGGTID",66,0)
 . . Q
"RTN","MAGGTID",67,0)
 . I +MAGFAIL=0 S RY(0)="1^Deletion of Group #"_MAGGRP_" was successful.^"_MAGOK_"^0"
"RTN","MAGGTID",68,0)
 . E  S RY(0)="0^Error deleting child image(s). Group Not Deleted.^"_MAGOK_"^"_MAGFAIL
"RTN","MAGGTID",69,0)
 . Q
"RTN","MAGGTID",70,0)
 ;
"RTN","MAGGTID",71,0)
 ; Ok lets start
"RTN","MAGGTID",72,0)
 ; lets delete the parent pointers first.
"RTN","MAGGTID",73,0)
DEL1IMG ;
"RTN","MAGGTID",74,0)
 N DELMSG,Z
"RTN","MAGGTID",75,0)
 D DELPAR^MAGSDEL2
"RTN","MAGGTID",76,0)
 I $G(MAGERR) S RY(0)="0^Error: Deleting Specialty Pointers. Image Not Deleted. "_DELMSG Q
"RTN","MAGGTID",77,0)
 ;
"RTN","MAGGTID",78,0)
 ; Now delete image record & xref's
"RTN","MAGGTID",79,0)
 ; if this Image is member of group DELGRP will delete those pointers
"RTN","MAGGTID",80,0)
 ; and delete the Group, if this is only image in it.
"RTN","MAGGTID",81,0)
 S MAGDFN=$P($G(^MAG(2005,MAGIEN,0)),"^",7) ; Moved here from below. DELGRP needs MAGDFN now.
"RTN","MAGGTID",82,0)
 D DELGRP
"RTN","MAGGTID",83,0)
 I $G(MAGERR) S RY(0)="0^Error deleting Group Pointers." Q
"RTN","MAGGTID",84,0)
 ;
"RTN","MAGGTID",85,0)
 ; write the deleted by, delete reason, and delete date to the file.
"RTN","MAGGTID",86,0)
 D SETDEL(MAGIEN,REASON)
"RTN","MAGGTID",87,0)
 ;
"RTN","MAGGTID",88,0)
 ; save the Image record to the archive before we delete it.
"RTN","MAGGTID",89,0)
 D ARCHIVE(MAGIEN)
"RTN","MAGGTID",90,0)
 ;
"RTN","MAGGTID",91,0)
 ; Now let's set the Queue to delete the Image File, if Flag is set
"RTN","MAGGTID",92,0)
 I $G(DF) D DELFILE
"RTN","MAGGTID",93,0)
 ; 
"RTN","MAGGTID",94,0)
 ; we're having "APPXDT" crossref left around, lets delete it first.
"RTN","MAGGTID",95,0)
 S X=MAGDFN,DA=MAGIEN D KILPPXD^MAGUXRF
"RTN","MAGGTID",96,0)
 ;
"RTN","MAGGTID",97,0)
 ; now lets delete the image.
"RTN","MAGGTID",98,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR S DIK="^MAG(2005,",DA=MAGIEN
"RTN","MAGGTID",99,0)
 D ^DIK
"RTN","MAGGTID",100,0)
 S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN
"RTN","MAGGTID",101,0)
 ; we were having problems with "AC" so lets check to make sure.
"RTN","MAGGTID",102,0)
 I $D(^MAG(2005,"AC",MAGDFN,MAGIEN)) K ^MAG(2005,"AC",MAGDFN,MAGIEN)
"RTN","MAGGTID",103,0)
 ; log it.
"RTN","MAGGTID",104,0)
 D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGIEN),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1)
"RTN","MAGGTID",105,0)
 S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGIEN)
"RTN","MAGGTID",106,0)
 D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",107,0)
 S RY(0)="1^Deletion of Image was Successful."
"RTN","MAGGTID",108,0)
 Q
"RTN","MAGGTID",109,0)
DELGRP ;del grp ptrs and check to see if this is the last image in the group
"RTN","MAGGTID",110,0)
 N MAGGRP,MAGX,MAGQUIT,MAGIFNS,Z
"RTN","MAGGTID",111,0)
 S MAGGRP=$P($G(^MAG(2005,MAGIEN,0)),"^",10)
"RTN","MAGGTID",112,0)
 Q:'$G(MAGGRP)
"RTN","MAGGTID",113,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR
"RTN","MAGGTID",114,0)
 S MAGX=0,MAGQUIT=0
"RTN","MAGGTID",115,0)
 F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D  Q:MAGQUIT
"RTN","MAGGTID",116,0)
 . I +^MAG(2005,MAGGRP,1,MAGX,0)=MAGIEN D
"RTN","MAGGTID",117,0)
 . . S DIK="^MAG(2005,MAGGRP,1,",DA(1)=MAGGRP,DA=MAGX D ^DIK S MAGQUIT=1
"RTN","MAGGTID",118,0)
 . . ;added DA(1) needed for xref deletion of dicom series 
"RTN","MAGGTID",119,0)
 . I $O(^MAG(2005,MAGGRP,1,0))="" D
"RTN","MAGGTID",120,0)
 . . I $P($G(^MAG(2005,MAGGRP,2)),"^",6) D
"RTN","MAGGTID",121,0)
 . . . ;report is on group - need to delete it
"RTN","MAGGTID",122,0)
 . . . S MAGIFNS=MAGIEN,MAGIEN=MAGGRP
"RTN","MAGGTID",123,0)
 . . . D DELPAR^MAGSDEL2
"RTN","MAGGTID",124,0)
 . . . S MAGIEN=MAGIFNS
"RTN","MAGGTID",125,0)
 . . I '$D(MAGERR) D
"RTN","MAGGTID",126,0)
 . . . D SETDEL(MAGGRP,REASON),ARCHIVE(MAGGRP) S DIK="^MAG(2005,",DA=MAGGRP D ^DIK
"RTN","MAGGTID",127,0)
 . . . ; Log the Deletion of The Group Header to  ^MAG(2006.95, and ^MAG(2006.82 
"RTN","MAGGTID",128,0)
 . . . D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGGRP),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1,"Group Header deleted")
"RTN","MAGGTID",129,0)
 . . . S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGGRP)
"RTN","MAGGTID",130,0)
 . . . D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",131,0)
 . . . S Z=+$O(RY(""),-1)+1,RY(Z)=MAGGRP_"^1^Deletion of Group was Successful."
"RTN","MAGGTID",132,0)
 . . . Q
"RTN","MAGGTID",133,0)
 . . Q
"RTN","MAGGTID",134,0)
 . Q
"RTN","MAGGTID",135,0)
 Q
"RTN","MAGGTID",136,0)
SETDEL(MAGIEN,REASON) ; set deletion fields
"RTN","MAGGTID",137,0)
 N DA,DR,DIE,X
"RTN","MAGGTID",138,0)
 ;N %H
"RTN","MAGGTID",139,0)
 ;S %H=$H D YMD^%DTC
"RTN","MAGGTID",140,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTID",141,0)
 ;  gek - changed 3 slash to 4 slash. to stop FM question marks. ??
"RTN","MAGGTID",142,0)
 S DR="30////"_DUZ_";30.1////"_X_";30.2////"_REASON
"RTN","MAGGTID",143,0)
 S DIE="2005",DA=MAGIEN D ^DIE
"RTN","MAGGTID",144,0)
 Q
"RTN","MAGGTID",145,0)
 ;
"RTN","MAGGTID",146,0)
ARCHIVE(MAGARCIE) ;save image data before deletion
"RTN","MAGGTID",147,0)
 N MAGCNT,MAGLAST,%X,%Y
"RTN","MAGGTID",148,0)
 S MAGCNT=$P(^MAG(2005.1,0),U,4)+1
"RTN","MAGGTID",149,0)
 S %X="^MAG(2005,"_MAGARCIE_",",%Y="^MAG(2005.1,"_MAGARCIE_","
"RTN","MAGGTID",150,0)
 D %XY^%RCR
"RTN","MAGGTID",151,0)
 ; GEK 9/29/00 Fix the 3rd piece to be last ien in file.
"RTN","MAGGTID",152,0)
 S MAGLAST=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGTID",153,0)
 S $P(^MAG(2005.1,0),U,4)=MAGCNT
"RTN","MAGGTID",154,0)
 I '($P(^MAG(2005.1,0),U,3)=MAGLAST) S $P(^MAG(2005.1,0),U,3)=MAGLAST
"RTN","MAGGTID",155,0)
 S DA=MAGARCIE
"RTN","MAGGTID",156,0)
 S DIK="^MAG(2005.1," D IX1^DIK
"RTN","MAGGTID",157,0)
 Q
"RTN","MAGGTID",158,0)
DELFILE ;Delete image file on server if exists 
"RTN","MAGGTID",159,0)
 ;gek 3/21/2003  Changed to stop using FullRes Path for Abs,Big
"RTN","MAGGTID",160,0)
 ;   and only Delete .TXT and Alternates if Full is being deleted.
"RTN","MAGGTID",161,0)
 N X0,X1,X2,ALTEXT,ALTPATH,MAGXX,XBIG
"RTN","MAGGTID",162,0)
 N MAGPLC ; DBI - SEB 9/20/2002
"RTN","MAGGTID",163,0)
 ; MAGIEN IS ASSUMED TO BE DEFINED.
"RTN","MAGGTID",164,0)
 ; MAGXX         - This is IEN in ^MAG(2005, MAGFILEB Expects this to be defined.
"RTN","MAGGTID",165,0)
 ; MAGPLC        - "Place" of Full Res Image.  
"RTN","MAGGTID",166,0)
 ; ALTEXT        - Extension of the Alternate image file.
"RTN","MAGGTID",167,0)
 ; ALTPATH       - Full path of Alternate image file.
"RTN","MAGGTID",168,0)
 S X0=^MAG(2005,MAGIEN,0)
"RTN","MAGGTID",169,0)
 ;delete Full Res if one exists on Magnetic
"RTN","MAGGTID",170,0)
 I $P(X0,U,3) D
"RTN","MAGGTID",171,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",172,0)
 . S MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"F")
"RTN","MAGGTID",173,0)
 . D VSTNOCP^MAGFILEB
"RTN","MAGGTID",174,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,MAGPLC)
"RTN","MAGGTID",175,0)
 . ;Delete any other ALTernate files. ( TXT) 
"RTN","MAGGTID",176,0)
 . ;gek 3/31/03  Since ALT files are (for now) always on same server as Full
"RTN","MAGGTID",177,0)
 . ;    We only attempt to delete them here  (If we have a path to FullRes on Magnetic)
"RTN","MAGGTID",178,0)
 . S X2=0
"RTN","MAGGTID",179,0)
 . F  S X2=$O(^MAG(2006.1,MAGPLC,2,X2)) Q:'X2  D
"RTN","MAGGTID",180,0)
 . . S ALTEXT=^MAG(2006.1,MAGPLC,2,X2,0)
"RTN","MAGGTID",181,0)
 . . S ALTPATH=$P(MAGFILE2,".")_"."_ALTEXT
"RTN","MAGGTID",182,0)
 . . S X=$$DELETE^MAGBAPI(ALTPATH,MAGPLC)
"RTN","MAGGTID",183,0)
 . Q
"RTN","MAGGTID",184,0)
 ;
"RTN","MAGGTID",185,0)
 ;delete image abstract if one exists on Magnetic
"RTN","MAGGTID",186,0)
 I $P(X0,U,4) D
"RTN","MAGGTID",187,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",188,0)
 . D ABSNOCP^MAGFILEB
"RTN","MAGGTID",189,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"A")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",190,0)
 ;
"RTN","MAGGTID",191,0)
 ;delete the big file if one exists on Magnetic
"RTN","MAGGTID",192,0)
 S XBIG=$G(^MAG(2005,MAGIEN,"FBIG"))
"RTN","MAGGTID",193,0)
 I $P(XBIG,U) D 
"RTN","MAGGTID",194,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",195,0)
 . D BIGNOCP^MAGFILEB
"RTN","MAGGTID",196,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"B")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",197,0)
 Q
"RTN","MAGGTII")
0^8^B43921962
"RTN","MAGGTII",1,0)
MAGGTII ;WOIFO/GEK - RETURN IMAGE INFO ; [ 11/08/2001 17:18 ]
"RTN","MAGGTII",2,0)
 ;;3.0;IMAGING;**8,48,63,59**;Nov 27, 2007;Build 20
"RTN","MAGGTII",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTII",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTII",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTII",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTII",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTII",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTII",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTII",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTII",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTII",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTII",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTII",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTII",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",17,0)
 ;;
"RTN","MAGGTII",18,0)
 ; CALL WITH MAGXX=IEN of IMAGE FILE (2005)
"RTN","MAGGTII",19,0)
 ; RETURNS MAGFILE='^' delimited string of Image information.
"RTN","MAGGTII",20,0)
 ; 
"RTN","MAGGTII",21,0)
 ; 
"RTN","MAGGTII",22,0)
INFO ;Get info for an Image File entry
"RTN","MAGGTII",23,0)
 ; We assume that MAGXX exists and is the Image File entry
"RTN","MAGGTII",24,0)
 ; We return a '^' delimited string for the Image entry.
"RTN","MAGGTII",25,0)
 ; $P(1^2^3)   IEN^Image FullPath and name^Abstract FullPath and Name
"RTN","MAGGTII",26,0)
 ; $P(4)       SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",27,0)
 ; $P(5)       PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",28,0)
 ; $P(6)       OBJECT TYPE
"RTN","MAGGTII",29,0)
 ; $P(7)       PROCEDURE field
"RTN","MAGGTII",30,0)
 ; $P(8)       display date
"RTN","MAGGTII",31,0)
 ; $P(9)       to return the PARENT DATA FILE image pointer
"RTN","MAGGTII",32,0)
 ; $p(10)      return the ABSTYPE  'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",33,0)
 ; $p(11)      is  'A' accessible   'O' offline
"RTN","MAGGTII",34,0)
 ; $p(12^13)   Dicom Series Number  $p(12) and   Image Number  $p(13)
"RTN","MAGGTII",35,0)
 ; $p(14)      is count of images in group, 1 if single image.
"RTN","MAGGTII",36,0)
 ; VISN15
"RTN","MAGGTII",37,0)
 ; $p(15^16)   SiteParameter IEN ^ SiteParameter CODE
"RTN","MAGGTII",38,0)
 ; $P(17)      is err description of Integrity Check
"RTN","MAGGTII",39,0)
 ; $P(18)      Image BIGPath and name             //Patch 5
"RTN","MAGGTII",40,0)
 ; $P(19^20)   Patient DFN  ^ Patient Name; // Patch 3.8
"RTN","MAGGTII",41,0)
 ; $P(21)          Image Class: Clin,Admin,Clin/Admin,Admin/Clin
"RTN","MAGGTII",42,0)
 ; $p(22)      Date Time Image Saved(FLD 7)
"RTN","MAGGTII",43,0)
 ; $p(23)      Document Date    (FLD 110)
"RTN","MAGGTII",44,0)
 ;
"RTN","MAGGTII",45,0)
 N FILETYPE,MAGPREF,MAGJBCP,GRPTYPE,GRPIEN,ABSTYPE,MAGTYPE,MAGJBOL
"RTN","MAGGTII",46,0)
 N MAGOFFLN,FULLTYPE,MAGOBJT,MAGQI,X
"RTN","MAGGTII",47,0)
 N ABSFILE,FULLFILE,BIGFILE,PATCH,MDFN,FNL,PLC,PLCODE
"RTN","MAGGTII",48,0)
 N MAGN0,MAGN2,MAGN40,MAGN100
"RTN","MAGGTII",49,0)
 ;    set the Variables for the Global Nodes of the Image Entry
"RTN","MAGGTII",50,0)
 S MAGN0=$G(^MAG(2005,MAGXX,0))
"RTN","MAGGTII",51,0)
 S MDFN=$P(MAGN0,"^",7)
"RTN","MAGGTII",52,0)
 S MAGN2=$G(^MAG(2005,MAGXX,2))
"RTN","MAGGTII",53,0)
 S MAGN40=$G(^MAG(2005,MAGXX,40))
"RTN","MAGGTII",54,0)
 S MAGN100=$G(^MAG(2005,MAGXX,100))
"RTN","MAGGTII",55,0)
 ; Set Name in Variable, Call $$GET 1 time not 2000
"RTN","MAGGTII",56,0)
 I MDFN I '$D(MAGJOB("PTNM",MDFN)) S MAGJOB("PTNM",MDFN)=$$GET1^DIQ(2,MDFN_",",.01)
"RTN","MAGGTII",57,0)
 I '$D(MAGJOB("NETPLC")) D NETPLCS^MAGGTU6
"RTN","MAGGTII",58,0)
 ;  Object Type
"RTN","MAGGTII",59,0)
 S MAGOBJT=$P(MAGN0,"^",6)
"RTN","MAGGTII",60,0)
 ; if this is a group, change MAGXX to first image in group to get
"RTN","MAGGTII",61,0)
 ;  that abstract to use for the group abstract
"RTN","MAGGTII",62,0)
 I MAGOBJT=11!(MAGOBJT=16) S GRPTYPE=MAGOBJT D
"RTN","MAGGTII",63,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",64,0)
 . ; next line to account for group of NO images for whatever reason.
"RTN","MAGGTII",65,0)
 . ;  we change Object Type to XRAY (3)  or STILL IMAGE (1)
"RTN","MAGGTII",66,0)
 . I 'X S MAGOBJT=$S(MAGOBJT=11:3,MAGOBJT=16:1,1:1) K GRPTYPE Q
"RTN","MAGGTII",67,0)
 . S X=^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",68,0)
 . ;  keep the Real IEN, so we can change back later
"RTN","MAGGTII",69,0)
 . S GRPIEN=MAGXX,MAGXX=+X
"RTN","MAGGTII",70,0)
 . Q
"RTN","MAGGTII",71,0)
 S MAGJBCP=0 ; Don't Queue a copy from JukeBox.
"RTN","MAGGTII",72,0)
 ;  The call to FINDFILE returns:
"RTN","MAGGTII",73,0)
 ; MAGFILE1=LA100066.ABS   filename
"RTN","MAGGTII",74,0)
 ;          if no Network Location pointer or INVALID Pointer
"RTN","MAGGTII",75,0)
 ;          then MAGFILE1=-1~NO NETWORK LOCATION POINTER  
"RTN","MAGGTII",76,0)
 ;          or -1~INVALID NETWORK LOCATION POINTER
"RTN","MAGGTII",77,0)
 ; MAGFILE1(.01)=ONE,PATIENT   111223333 image desc
"RTN","MAGGTII",78,0)
 ; MAGJBOL=    desc of Offline server
"RTN","MAGGTII",79,0)
 ; MAGOFFLN=    if JB is offline
"RTN","MAGGTII",80,0)
 ; MAGPREF=C:\TEMP\LA\10\00\  path
"RTN","MAGGTII",81,0)
 ; MAGTYPE=MAG    MAG or WORM
"RTN","MAGGTII",82,0)
 ;
"RTN","MAGGTII",83,0)
 ;   first get Full Path and File Name of the Abstract
"RTN","MAGGTII",84,0)
 S FILETYPE="ABSTRACT" K MAGFILE1("ERROR")
"RTN","MAGGTII",85,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",86,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",87,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",88,0)
 S ABSTYPE=$E(MAGTYPE,1) I MAGOFFLN S ABSTYPE="O"
"RTN","MAGGTII",89,0)
 ;   Here we must test for +MAGFILE1 = -1  which means we don't have
"RTN","MAGGTII",90,0)
 ;   any entry in the Image File for the Abstract Network Location 
"RTN","MAGGTII",91,0)
 ;   pointer.
"RTN","MAGGTII",92,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",93,0)
 S ABSFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",94,0)
 ;
"RTN","MAGGTII",95,0)
 ;    now lets get the Full Path and file name FULL RES image.
"RTN","MAGGTII",96,0)
 S FULLTYPE="A" ; Accessible
"RTN","MAGGTII",97,0)
 S FILETYPE="FULL" K MAGFILE1("ERROR")
"RTN","MAGGTII",98,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",99,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",100,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",101,0)
 I MAGOFFLN S FULLTYPE="O" ; Offline
"RTN","MAGGTII",102,0)
 ;  here we have to do the same test as above. for bad data.
"RTN","MAGGTII",103,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",104,0)
 S FULLFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",105,0)
 ;
"RTN","MAGGTII",106,0)
 ;    now lets get the Full Path and file name for BIG image.
"RTN","MAGGTII",107,0)
 S FILETYPE="BIG" K MAGFILE1("ERROR")
"RTN","MAGGTII",108,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",109,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",110,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",111,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",112,0)
 S BIGFILE=$S($E(MAGFILE1,1,2)="-1":"",1:MAGPREF_MAGFILE1)
"RTN","MAGGTII",113,0)
 ;
"RTN","MAGGTII",114,0)
 K MAGFILE1 ; Cleanup
"RTN","MAGGTII",115,0)
 ; Site and Site Code are in Entry of first Image in Group
"RTN","MAGGTII",116,0)
 ; so we need to set here, before MAGXX is changed back.
"RTN","MAGGTII",117,0)
 S X=$G(^MAG(2005,MAGXX,0))
"RTN","MAGGTII",118,0)
 S FNL=$S(+$P(X,"^",3):$P(X,"^",3),1:+$P(X,"^",5))
"RTN","MAGGTII",119,0)
 S PLC=$P($G(MAGJOB("NETPLC",FNL)),"^",1)
"RTN","MAGGTII",120,0)
 S PLCODE=$P($G(MAGJOB("NETPLC",FNL)),"^",2)
"RTN","MAGGTII",121,0)
 I PLC="" S PLC=$G(MAGJOB("PLC")),PLCODE=$G(MAGJOB("PLCODE")) ; Group of 0 need this.
"RTN","MAGGTII",122,0)
 ;   if we were using first image of a group, reset the Real IEN 
"RTN","MAGGTII",123,0)
 I $G(GRPIEN) S MAGXX=GRPIEN
"RTN","MAGGTII",124,0)
 ;
"RTN","MAGGTII",125,0)
 ;   we have to change the OBJECT TYPE variable back to real value
"RTN","MAGGTII",126,0)
 ;   MAGOBJT might have been changed if we had Group of no images.
"RTN","MAGGTII",127,0)
 ;   but we need to keep it changed, because Delphi window checks this
"RTN","MAGGTII",128,0)
 ;   entry to determine which window to open.
"RTN","MAGGTII",129,0)
 ;   i.e. Group window, Single image window, 
"RTN","MAGGTII",130,0)
 S MAGOBJT=$P(MAGN0,U,6)
"RTN","MAGGTII",131,0)
 ;
"RTN","MAGGTII",132,0)
 ; now start building the return string
"RTN","MAGGTII",133,0)
 ;
"RTN","MAGGTII",134,0)
 S PATCH=$P($G(MAGJOB("VERSION")),".",3) ; //'="3.0.8")
"RTN","MAGGTII",135,0)
 K MAGFILE
"RTN","MAGGTII",136,0)
 S $P(MAGFILE,U,25)="" ; We put extra '^^^' on end of String to stop error in Delphi.
"RTN","MAGGTII",137,0)
 ; Pieces 26 BrokerServer and 27 Broker Port are set if this is P59 Client.
"RTN","MAGGTII",138,0)
 ; Clients Prior to Patch 59, the String must only be 25 pieces. - Patch 45 snafu
"RTN","MAGGTII",139,0)
 ; 
"RTN","MAGGTII",140,0)
 ; $P(1^2^3) IEN^Image FullPath and name^Abstract FullPath and Name 
"RTN","MAGGTII",141,0)
 S $P(MAGFILE,U,1,3)=MAGXX_U_FULLFILE_U_ABSFILE
"RTN","MAGGTII",142,0)
 ;
"RTN","MAGGTII",143,0)
 ; now set $P(4) SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",144,0)
 S $P(MAGFILE,U,4)=$P(MAGN2,U,4)_$G(MAGJBOL)
"RTN","MAGGTII",145,0)
 ;
"RTN","MAGGTII",146,0)
 ; now set $P(5)PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",147,0)
 S $P(MAGFILE,U,5)=$P(MAGN2,U,5)
"RTN","MAGGTII",148,0)
 ;
"RTN","MAGGTII",149,0)
 ; now set $P(6) OBJECT TYPE
"RTN","MAGGTII",150,0)
 S $P(MAGFILE,U,6)=MAGOBJT
"RTN","MAGGTII",151,0)
 ;
"RTN","MAGGTII",152,0)
 ; now set $P(7) PROCEDURE field
"RTN","MAGGTII",153,0)
 S $P(MAGFILE,U,7)=$P(MAGN0,U,8)
"RTN","MAGGTII",154,0)
 ;
"RTN","MAGGTII",155,0)
 ; now we're making a DATE to display and will use it for a sort in  
"RTN","MAGGTII",156,0)
 ;  the delphi TStringGrid so we display mm/dd/yyyy
"RTN","MAGGTII",157,0)
 ; now set $P(8) display date
"RTN","MAGGTII",158,0)
 S X=$$FMTE^XLFDT($P(MAGN2,U,5),"5Z")
"RTN","MAGGTII",159,0)
 S X=$TR(X,"@"," ")
"RTN","MAGGTII",160,0)
 S $P(MAGFILE,U,8)=X
"RTN","MAGGTII",161,0)
 ;
"RTN","MAGGTII",162,0)
 ; now return the PARENT DATA FILE image pointer
"RTN","MAGGTII",163,0)
 S $P(MAGFILE,U,9)=$P(MAGN2,U,8)
"RTN","MAGGTII",164,0)
 ;
"RTN","MAGGTII",165,0)
 ; now return the ABSTYPE ( this is 'M' or 'W' or 'O' )
"RTN","MAGGTII",166,0)
 ; 'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",167,0)
 S $P(MAGFILE,U,10)=ABSTYPE
"RTN","MAGGTII",168,0)
 ;
"RTN","MAGGTII",169,0)
 ; now return the code to show if full res image is offline 'A' or 'O'
"RTN","MAGGTII",170,0)
 ; 'A' accessible   'O' offline
"RTN","MAGGTII",171,0)
 S $P(MAGFILE,U,11)=FULLTYPE
"RTN","MAGGTII",172,0)
 ;
"RTN","MAGGTII",173,0)
 ;  2/1/99 Dicom Series number and Dicom Image Number  
"RTN","MAGGTII",174,0)
 ;    $p(12) and $p(13)
"RTN","MAGGTII",175,0)
 ;
"RTN","MAGGTII",176,0)
 ; 14 - count of images , if this is a group
"RTN","MAGGTII",177,0)
 S X=+$P($G(^MAG(2005,MAGXX,1,0)),U,4),$P(MAGFILE,U,14)=$S(X:X,1:1)
"RTN","MAGGTII",178,0)
 ;
"RTN","MAGGTII",179,0)
 ; $p(15^16 ) are SiteIEN and SiteCode Consolidation - DBI
"RTN","MAGGTII",180,0)
 ; We use SiteIEN and SiteCODE from above 
"RTN","MAGGTII",181,0)
 S $P(MAGFILE,"^",15)=PLC
"RTN","MAGGTII",182,0)
 S $P(MAGFILE,"^",16)=PLCODE
"RTN","MAGGTII",183,0)
 ;
"RTN","MAGGTII",184,0)
 ; $p(17)           8/22/01 GEK Mod for integrity check.
"RTN","MAGGTII",185,0)
 I '$G(MAGNOCHK) D CHK^MAGGSQI(.MAGQI,MAGXX) I 'MAGQI(0) D
"RTN","MAGGTII",186,0)
 . ; remove the Abstract and Image File Names ; 2/14/03 remove c:\program files... with .\bmp\
"RTN","MAGGTII",187,0)
 . S $P(MAGFILE,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGTII",188,0)
 . ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGTII",189,0)
 . S $P(MAGFILE,U,6)=$S(($P(MAGFILE,U,6)'=11):"99",1:11)
"RTN","MAGGTII",190,0)
 . S $P(MAGFILE,U,10)="M"
"RTN","MAGGTII",191,0)
 . ;Send the error message
"RTN","MAGGTII",192,0)
 . S $P(MAGFILE,U,17)=$P(MAGQI(0),U,2)
"RTN","MAGGTII",193,0)
 ; $p(18) is BIGFile Full name and path.
"RTN","MAGGTII",194,0)
 S $P(MAGFILE,U,18)=BIGFILE
"RTN","MAGGTII",195,0)
 ; DFN
"RTN","MAGGTII",196,0)
 S $P(MAGFILE,U,19)=$P(MAGN0,U,7)
"RTN","MAGGTII",197,0)
 ; Patient Name
"RTN","MAGGTII",198,0)
 S $P(MAGFILE,U,20)=$S(MDFN:MAGJOB("PTNM",MDFN),1:MDFN)
"RTN","MAGGTII",199,0)
 S $P(MAGFILE,U,21)=$S(+$P(MAGN40,U,2):$P(^MAG(2005.82,$P(MAGN40,U,2),0),U),1:"")
"RTN","MAGGTII",200,0)
 S X=$$FMTE^XLFDT($P(MAGN2,U,1),"5Z") ; Date/Time Image Saved  #7
"RTN","MAGGTII",201,0)
 S X=$TR(X,"@"," ")
"RTN","MAGGTII",202,0)
 S $P(MAGFILE,U,22)=X
"RTN","MAGGTII",203,0)
 S X=$$FMTE^XLFDT($P(MAGN100,U,6),"5Z")   ; DocumentDate #110
"RTN","MAGGTII",204,0)
 S X=$TR(X,"@"," ")
"RTN","MAGGTII",205,0)
 S $P(MAGFILE,U,23)=X
"RTN","MAGGTII",206,0)
 ; If Patch 59 Client - we can set beyond 25 pieces.
"RTN","MAGGTII",207,0)
 I $D(MAGJOB("RPCSERVER"))&$D(MAGJOB("RPCPORT")) D
"RTN","MAGGTII",208,0)
 . S $P(MAGFILE,U,26)=MAGJOB("RPCSERVER")
"RTN","MAGGTII",209,0)
 . S $P(MAGFILE,U,27)=MAGJOB("RPCPORT")
"RTN","MAGGTII",210,0)
 . S $P(MAGFILE,U,28)="" ; "^" at end, stops problems in delphi
"RTN","MAGGTII",211,0)
 . Q
"RTN","MAGGTII",212,0)
 ; Stop displaying a Group of 1 as a Group, so here we'll change Object type
"RTN","MAGGTII",213,0)
 ;  to that of the '1ST' image in the group of 1.
"RTN","MAGGTII",214,0)
 I $P($G(^MAG(2005,MAGXX,1,0)),U,4)=1 D
"RTN","MAGGTII",215,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",216,0)
 . S X=+^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",217,0)
 . S $P(MAGFILE,U,6)=$P(^MAG(2005,X,0),U,6) ; OBJECT TYPE OF 1ST IMAGE IN GROUP
"RTN","MAGGTII",218,0)
 . S $P(MAGFILE,U,1)=X
"RTN","MAGGTII",219,0)
 . Q
"RTN","MAGGTII",220,0)
 Q
"RTN","MAGGTLB1")
0^27^B24325063
"RTN","MAGGTLB1",1,0)
MAGGTLB1 ;WOIFO/LB - RPC routine for Imaging Lab Interface ; [ 06/20/2001 08:56 ]
"RTN","MAGGTLB1",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTLB1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTLB1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTLB1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTLB1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTLB1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTLB1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTLB1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTLB1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTLB1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTLB1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTLB1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTLB1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTLB1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTLB1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTLB1",17,0)
 ;;
"RTN","MAGGTLB1",18,0)
 Q
"RTN","MAGGTLB1",19,0)
 ;This routine is called from the Laboratory Image capture window.
"RTN","MAGGTLB1",20,0)
 ;After an image is captured and an entry is created in file 2005,
"RTN","MAGGTLB1",21,0)
 ;this routine will be called to set the imaging pointers in the 
"RTN","MAGGTLB1",22,0)
 ;corresponding Lab subfile (Autopsy/ Organism, Surgical Path, EM,
"RTN","MAGGTLB1",23,0)
 ;or Cytology) and update the imaging file with the corresponding
"RTN","MAGGTLB1",24,0)
 ;Lab pointers. 
"RTN","MAGGTLB1",25,0)
FILE(MAGRY,IMIEN,DATA) ;RPC Call to file pointers in Lab and Image files.
"RTN","MAGGTLB1",26,0)
 ;IMIEN - ^MAG(2005,IMIEN image captured.
"RTN","MAGGTLB1",27,0)
 ;DATA - piece 1 = stain             piece 2 = micro obj
"RTN","MAGGTLB1",28,0)
 ;             3 = Pt name                 4 = ssn
"RTN","MAGGTLB1",29,0)
 ;             5 = date/time               6 = acc#
"RTN","MAGGTLB1",30,0)
 ;             7 = Pathologist             8 = specimen desc.
"RTN","MAGGTLB1",31,0)
 ;             9 = lab section            10 = dfn
"RTN","MAGGTLB1",32,0)
 ;            11 = lrdfn                  12 = lri
"RTN","MAGGTLB1",33,0)
 ;            13 = spec ien               14 = field#
"RTN","MAGGTLB1",34,0)
 ;            15 = global root e.g. ^LR(1,"SP",7069758,1,1
"RTN","MAGGTLB1",35,0)
 ;DATA is the result of START^MAGGTLB (the specimen variable during the
"RTN","MAGGTLB1",36,0)
 ;image capture window).
"RTN","MAGGTLB1",37,0)
 ;Will return a single value on filing success. 
"RTN","MAGGTLB1",38,0)
 ;
"RTN","MAGGTLB1",39,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTLB1",40,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTLB1",41,0)
 ;
"RTN","MAGGTLB1",42,0)
 N ANUM,DA,DA1,DAS,DFN,DIERR,FIELD,I,IMOBJ,LABD,LABFDA,LABIEN,LABIENS
"RTN","MAGGTLB1",43,0)
 N LRDFN,LRI,MAGFDA,MAGIEN,MAGNODE,OUT,SECT,SECTLTR,SPEC,SPECD
"RTN","MAGGTLB1",44,0)
 N SSUBFILE,SSUBFL,STAIN,SUBFILE,X,Y
"RTN","MAGGTLB1",45,0)
 S MAGRY="0^Started filing",MAGIEN=IMIEN
"RTN","MAGGTLB1",46,0)
 S SECT=$P(DATA,"^",9),DFN=$P(DATA,"^",10),LRDFN=$P(DATA,"^",11)
"RTN","MAGGTLB1",47,0)
 S LRI=$P(DATA,"^",12)
"RTN","MAGGTLB1",48,0)
 S SPEC=$P(DATA,"^",13),FIELD=$P(DATA,"^",14)
"RTN","MAGGTLB1",49,0)
 S MAGNODE="^"_$P(DATA,"^",15,99),ANUM=$P(DATA,"^",6)
"RTN","MAGGTLB1",50,0)
 S SPECD=$P(DATA,"^",8),STAIN=$P(DATA,"^",1),IMOBJ=$P(DATA,"^",2)
"RTN","MAGGTLB1",51,0)
 I SECT["~" S SECT=$P(SECT,"~",1)
"RTN","MAGGTLB1",52,0)
 ;Check for valid image
"RTN","MAGGTLB1",53,0)
 I '$D(^MAG(2005,MAGIEN,0)) D  Q
"RTN","MAGGTLB1",54,0)
 . S Y(0)="0^Image entry does not exist."
"RTN","MAGGTLB1",55,0)
 ;Check for valid image patient entry.
"RTN","MAGGTLB1",56,0)
 I $P(^MAG(2005,MAGIEN,0),"^",7)'=DFN D  Q
"RTN","MAGGTLB1",57,0)
 . S MAGRY="0^Image patient does not match Lab patient."
"RTN","MAGGTLB1",58,0)
 ;Check if parent file and corresponding fields are filed in file 2005.
"RTN","MAGGTLB1",59,0)
 I $D(^MAG(2005,MAGIEN,2)) S X=^MAG(2005,MAGIEN,2) D  Q:OUT
"RTN","MAGGTLB1",60,0)
 . S OUT=0
"RTN","MAGGTLB1",61,0)
 . I $P(X,"^",6),$P(X,"^",7),$P(X,"^",8) S OUT=1
"RTN","MAGGTLB1",62,0)
 . I OUT S MAGRY="0^Report already exist for this image."
"RTN","MAGGTLB1",63,0)
 ;Check the Lab entries...do they still exists.
"RTN","MAGGTLB1",64,0)
 S MAGNODE=MAGNODE_",0)"
"RTN","MAGGTLB1",65,0)
 I '$D(@MAGNODE) S MAGRY="0^Specimen no longer in Lab file." Q
"RTN","MAGGTLB1",66,0)
 ;Everything seem okay lets file image pointer in lab file.
"RTN","MAGGTLB1",67,0)
 S SECTLTR=$S(SECT=63:"AY",SECT=63.2:"AY",1:$P(^MAG(2005.03,SECT,0),"^",2))
"RTN","MAGGTLB1",68,0)
 ;Lab nodes; AY, SP, EM or CY.
"RTN","MAGGTLB1",69,0)
 ;
"RTN","MAGGTLB1",70,0)
LAB2 ;updating files using silent Fileman DB calls.
"RTN","MAGGTLB1",71,0)
 N MAGERR,MAGLVL
"RTN","MAGGTLB1",72,0)
 S SUBFILE=$S(SECT=63:63.2,1:SECT)
"RTN","MAGGTLB1",73,0)
 S MAGRY="0^Lab's Imaging subfile doesn't exisit." ;default
"RTN","MAGGTLB1",74,0)
 ;Laboratory's Autopsy subfile has two imaging fields (2005 & 2005.1)
"RTN","MAGGTLB1",75,0)
 ; and file 2005.03 does not reflect this.
"RTN","MAGGTLB1",76,0)
 D FIELD^DID(SUBFILE,FIELD,"","SPECIFIER","MAGLVL","MAGERR")
"RTN","MAGGTLB1",77,0)
 I $D(MAGERR("DIERR")) Q
"RTN","MAGGTLB1",78,0)
 I '$D(MAGLVL("SPECIFIER")) Q
"RTN","MAGGTLB1",79,0)
 S SSUBFL=$G(MAGLVL("SPECIFIER"))      ;Lab's Imaging subfile
"RTN","MAGGTLB1",80,0)
 I SSUBFL="" Q
"RTN","MAGGTLB1",81,0)
 ;Image sub-subfile.
"RTN","MAGGTLB1",82,0)
 S SSUBFILE="" F I=1:1:$L(SSUBFL) D
"RTN","MAGGTLB1",83,0)
 . I $E(SSUBFL,I)?1N!($E(SSUBFL,I)?1".") S SSUBFILE=SSUBFILE_$E(SSUBFL,I)
"RTN","MAGGTLB1",84,0)
 . ;Leave off the alpha characters
"RTN","MAGGTLB1",85,0)
 S DA1=$S(SECTLTR="AY":SPEC,1:LRI)  ;Autopsy is by specimen not date/time
"RTN","MAGGTLB1",86,0)
 S DAS="+3,"_DA1_","_LRDFN_","
"RTN","MAGGTLB1",87,0)
 ;Sets the iens e.g. da,da(1),da(2). The +3 can be any #; it is the 
"RTN","MAGGTLB1",88,0)
 ;subscript of the return variable LABIENS.  
"RTN","MAGGTLB1",89,0)
 ;Returns IEN for that subfile & use of +3 is because it's 2 levels down.
"RTN","MAGGTLB1",90,0)
 S LABFDA(SSUBFILE,DAS,.01)=MAGIEN,LABIENS=""
"RTN","MAGGTLB1",91,0)
 D UPDATE^DIE("S","LABFDA","LABIENS")
"RTN","MAGGTLB1",92,0)
 I $D(DIERR) S MAGRY="O^Unsuccessful Lab updating." Q
"RTN","MAGGTLB1",93,0)
 I '$D(LABIENS(3)) S MAGRY="0^Unsuccessful Lab updating" Q
"RTN","MAGGTLB1",94,0)
 S DA=$G(LABIENS(3))
"RTN","MAGGTLB1",95,0)
 I 'DA!('$D(^LR(LRDFN,SECTLTR,DA1,FIELD,DA,0))) D  Q
"RTN","MAGGTLB1",96,0)
 . S MAGRY="0^Unsuccessful Lab updating"
"RTN","MAGGTLB1",97,0)
IMAGE2 ;
"RTN","MAGGTLB1",98,0)
 S MAGIEN=MAGIEN_",",LABIEN=DA,LABD=DA1 K DA,DA1
"RTN","MAGGTLB1",99,0)
 ;  The following fields are saved in the ADDIMAGE Call.
"RTN","MAGGTLB1",100,0)
 ;       50 =ANUM  ;ACCESSION NUMBER FIELD
"RTN","MAGGTLB1",101,0)
 ;       51 =SPECD  ;SPECIMEN DESCRIPTION FIELD
"RTN","MAGGTLB1",102,0)
 ;       52 =SPEC  ;SPECIMEN DO
"RTN","MAGGTLB1",103,0)
 ;       53 =STAIN  ;Histology stain
"RTN","MAGGTLB1",104,0)
 ;       54 =IMOBJ  ;MICROSCOPE OBJECTIVE
"RTN","MAGGTLB1",105,0)
 N DIK
"RTN","MAGGTLB1",106,0)
 S MAGFDA(2005,MAGIEN,16)=SECT     ;LAB SECTION
"RTN","MAGGTLB1",107,0)
 S MAGFDA(2005,MAGIEN,17)=LRDFN    ;PARENT FILE DO VALUE
"RTN","MAGGTLB1",108,0)
 S MAGFDA(2005,MAGIEN,18)=LABIEN   ;LAB BACKWARD IMAGE POINTER
"RTN","MAGGTLB1",109,0)
 S MAGFDA(2005,MAGIEN,63)=LABD  ;If AUTOPSY, it's specimen else date/time
"RTN","MAGGTLB1",110,0)
 S I=0 F I=$O(MAGFDA(2005,MAGIEN,I)) Q:'I  D
"RTN","MAGGTLB1",111,0)
 . D UPDATE^DIE("S","MAGFDA","")
"RTN","MAGGTLB1",112,0)
 I $D(DIERR) S I=0 F  S I=$O(MAGFDA(2005,MAGIEN,I)) Q:'I  D
"RTN","MAGGTLB1",113,0)
 . S MAGFDA(2005,MAGIEN,I)="" D UPDATE^DIE("","MAGFDA","")
"RTN","MAGGTLB1",114,0)
 I $D(DIERR),$D(^LR(LRDFN,SECTLTR,DA1,FIELD,LABIEN,0)),$G(^LR(LRDFN,SECTLTR,DA1,FIELD,LABIEN,0))=MAGIEN D
"RTN","MAGGTLB1",115,0)
 . S DA(2)=LRDFN,DA(1)=DA1,DA=LABIEN
"RTN","MAGGTLB1",116,0)
 . S DIK="^LR("_LRDFN_","""_SECTLTR_""","_DA1_","_FIELD_","
"RTN","MAGGTLB1",117,0)
 . D ^DIK    ;Remove imaging pointers from lab subfile.
"RTN","MAGGTLB1",118,0)
 I $D(DIERR) S MAGRY="0^Unsuccessful both files not updated." K DIERR Q
"RTN","MAGGTLB1",119,0)
 S MAGRY="1^Success in filing both parent & image files." K DIERR
"RTN","MAGGTLB1",120,0)
 D LINKDT^MAGGTU6(.X,+MAGIEN)
"RTN","MAGGTLB1",121,0)
 Q
"RTN","MAGGTMC1")
0^28^B10841224
"RTN","MAGGTMC1",1,0)
MAGGTMC1 ;WOIFO/GEK - RPC Calls for Imaging/Medicine procedures ; [ 06/20/2001 08:57 ]
"RTN","MAGGTMC1",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTMC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTMC1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTMC1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTMC1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTMC1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTMC1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTMC1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTMC1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTMC1",11,0)
 ;; |                                                               |
"RTN","MAGGTMC1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTMC1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTMC1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTMC1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTMC1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTMC1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTMC1",18,0)
 ;;
"RTN","MAGGTMC1",19,0)
 Q
"RTN","MAGGTMC1",20,0)
FILE(MAGRY,DATA,MAGARR) ;RPC Call to File the Image pointer into 
"RTN","MAGGTMC1",21,0)
 ; the Procedure/Subspecialty and Proc/Subspec into Image file.
"RTN","MAGGTMC1",22,0)
 ;
"RTN","MAGGTMC1",23,0)
 ; DATA = DATETIME^PSIEN^DFN^MCIEN^PROCSTUB ; 6/19/97
"RTN","MAGGTMC1",24,0)
 ; If MCIEN isn't sent, this will be added as new procedure
"RTN","MAGGTMC1",25,0)
 ; MAGARR is array of image pointers
"RTN","MAGGTMC1",26,0)
 ; IF PROCSTUB is 1 we JUST want New Medicine procedure stub IEN 6/19/97
"RTN","MAGGTMC1",27,0)
 ; as the success    i.e.  MAGRY="IEN^Procdure Stub created"    6/19/97
"RTN","MAGGTMC1",28,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTMC1",29,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTMC1",30,0)
 N I,J,K,X,Y,Z,TIME,PSIEN,DFN,MAGPTR,MAGMCIEN,MCFILE,MAGOK,MAGERR,PROCSTUB
"RTN","MAGGTMC1",31,0)
 ;
"RTN","MAGGTMC1",32,0)
 S X=$P(DATA,U,1),%DT="TS" D ^%DT S TIME=Y
"RTN","MAGGTMC1",33,0)
 S PSIEN=+$P(DATA,U,2)
"RTN","MAGGTMC1",34,0)
 S DFN=+$P(DATA,U,3)
"RTN","MAGGTMC1",35,0)
 S MAGMCIEN=+$P(DATA,U,4)
"RTN","MAGGTMC1",36,0)
 S PROCSTUB=+$P(DATA,U,5) ; NEW 6/19/97 GEK
"RTN","MAGGTMC1",37,0)
 S MCFILE=$P($P(^MCAR(697.2,PSIEN,0),U,2),"(",2)
"RTN","MAGGTMC1",38,0)
 I '$D(^MAG(2005.03,MCFILE)) S MAGRY="0^Procedure file is Invalid in Imaging Parent Data File " Q
"RTN","MAGGTMC1",39,0)
 S MAGOK=""
"RTN","MAGGTMC1",40,0)
 S I="" F  S I=$O(MAGARR(I)) Q:I=""  D
"RTN","MAGGTMC1",41,0)
 . S MAGPTR(I)=""
"RTN","MAGGTMC1",42,0)
 . I '$D(^MAG(2005,I)) S MAGERR="0^INVALID Image entry "_I
"RTN","MAGGTMC1",43,0)
 I $D(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTMC1",44,0)
 ; 6/19/97  New Note .MAGMCIEN
"RTN","MAGGTMC1",45,0)
 D UPDATE^MCUIMAG0(TIME,PSIEN,DFN,.MAGPTR,.MAGMCIEN,.MAGOK)
"RTN","MAGGTMC1",46,0)
 ;
"RTN","MAGGTMC1",47,0)
 I 'MAGOK S MAGRY=MAGOK Q
"RTN","MAGGTMC1",48,0)
 ; Next if we're getting a stub, Quit with the stub if it was created
"RTN","MAGGTMC1",49,0)
 I MAGOK,PROCSTUB D  Q
"RTN","MAGGTMC1",50,0)
 . I MAGMCIEN<1 S MAGRY="0^FAILED Creating New Procedure stub"_MAGOK Q
"RTN","MAGGTMC1",51,0)
 . S MAGRY=$P(MAGMCIEN,U,1)_"^Procedure Stub created"
"RTN","MAGGTMC1",52,0)
 ;
"RTN","MAGGTMC1",53,0)
 ; now enter the pointers to procedures, in the image file.
"RTN","MAGGTMC1",54,0)
 ; we get back MAGPTR(I)= MCFILE^PSIEN^MULTIPLE ENTRY IEN
"RTN","MAGGTMC1",55,0)
 S I="" F  S I=$O(MAGPTR(I)) Q:I=""  D
"RTN","MAGGTMC1",56,0)
 . S $P(^MAG(2005,I,2),U,6,8)=MAGPTR(I)
"RTN","MAGGTMC1",57,0)
 . D LINKDT^MAGGTU6(.X,I)
"RTN","MAGGTMC1",58,0)
 S MAGRY=MAGOK
"RTN","MAGGTMC1",59,0)
 Q
"RTN","MAGGTMC1",60,0)
 ;/GEK/ 4/29/98 put in modification to return DICOM ID for MED proc.
"RTN","MAGGTMC1",61,0)
DICOMID(MAGRY,DATA) ;RPC Call to return a Dicom ID for medicine procedure.
"RTN","MAGGTMC1",62,0)
 ;  This is displayed on workstation, and used to link Dicom images 
"RTN","MAGGTMC1",63,0)
 ;  to a medicine procedure.
"RTN","MAGGTMC1",64,0)
 ;  DATA is    null  ^ PSIEN ^ DFN ^ MCIEN ^ null
"RTN","MAGGTMC1",65,0)
 ; 
"RTN","MAGGTMC1",66,0)
 N TMCFILE,TPSIEN,TDFN,TMCIEN,RETX
"RTN","MAGGTMC1",67,0)
 S TPSIEN=+$P(DATA,U,2)
"RTN","MAGGTMC1",68,0)
 S TDFN=+$P(DATA,U,3)
"RTN","MAGGTMC1",69,0)
 S TMCIEN=+$P(DATA,U,4)
"RTN","MAGGTMC1",70,0)
 S TMCFILE=$P($P($G(^MCAR(697.2,TPSIEN,0)),U,2),"(",2)
"RTN","MAGGTMC1",71,0)
 I 'TMCFILE S MAGRY="0^InValid data input PSIEN="_TPSIEN Q
"RTN","MAGGTMC1",72,0)
 D DICOMID^MAGDMEDI(.RETX,TMCFILE,TMCIEN,TPSIEN,TDFN)
"RTN","MAGGTMC1",73,0)
 S MAGRY=RETX
"RTN","MAGGTMC1",74,0)
 Q
"RTN","MAGGTMC1",75,0)
NEW(MAGRY,DATA) ;RPC call to Create NEW Procedure stub
"RTN","MAGGTMC1",76,0)
 ;       for a medicine procedure
"RTN","MAGGTMC1",77,0)
 ;
"RTN","MAGGTMC1",78,0)
 ; DATA = DATETIME^PSIEN^DFN  ; same as old call
"RTN","MAGGTMC1",79,0)
 S $P(DATA,"^",4)="^1" ; the 1 means we want a new procedure stub
"RTN","MAGGTMC1",80,0)
 K MAGARR ; we are not passing any images.
"RTN","MAGGTMC1",81,0)
 D FILE(.MAGRY,DATA,.MAGARR)
"RTN","MAGGTMC1",82,0)
 Q
"RTN","MAGGTPT1")
0^9^B32058249
"RTN","MAGGTPT1",1,0)
MAGGTPT1 ;WOIFO/GEK - Delphi-Broker calls for patient lookup and information ; [ 06/20/2001 08:57 ]
"RTN","MAGGTPT1",2,0)
 ;;3.0;IMAGING;**16,8,92,46,59**;Nov 27, 2007;Build 20
"RTN","MAGGTPT1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTPT1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTPT1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTPT1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTPT1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTPT1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTPT1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTPT1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTPT1",11,0)
 ;; |                                                               |
"RTN","MAGGTPT1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTPT1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTPT1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTPT1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTPT1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTPT1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTPT1",18,0)
 ;;
"RTN","MAGGTPT1",19,0)
 Q
"RTN","MAGGTPT1",20,0)
 ;
"RTN","MAGGTPT1",21,0)
FIND(MAGRY,ZY) ;RPC [MAGG PAT FIND]
"RTN","MAGGTPT1",22,0)
 ; Call to Do a lookup using FIND^DIC
"RTN","MAGGTPT1",23,0)
 ; MAGRY is the Array to return.
"RTN","MAGGTPT1",24,0)
 ; ZY is parameter sent by calling app (Delphi)
"RTN","MAGGTPT1",25,0)
 ;    FILE NUM ^ NUM TO RETURN ^ TEXT TO MATCH ^  ^ SCREEN ($P 5-99)
"RTN","MAGGTPT1",26,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTPT1",27,0)
 ;
"RTN","MAGGTPT1",28,0)
 N X,Y,I,Z,MAGDFN,WARD
"RTN","MAGGTPT1",29,0)
 N FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT
"RTN","MAGGTPT1",30,0)
 S (FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)=""
"RTN","MAGGTPT1",31,0)
 ;
"RTN","MAGGTPT1",32,0)
 S FILE=2 ; Patient File
"RTN","MAGGTPT1",33,0)
 ;          Number of entries to return, If 0 we'll stop at 100
"RTN","MAGGTPT1",34,0)
 S NUM=$S(+$P(ZY,U,1):+$P(ZY,U,1),1:100)
"RTN","MAGGTPT1",35,0)
 S VAL=$P(ZY,U,2) ; this is the starting value i.e. 'Smi'
"RTN","MAGGTPT1",36,0)
 S SCR=$P(ZY,U,5,99)
"RTN","MAGGTPT1",37,0)
 S FLDS=$P(ZY,U,3)
"RTN","MAGGTPT1",38,0)
 ; $P(ZU,U,4) isn't used.
"RTN","MAGGTPT1",39,0)
 ;  If specific fields aren't requested, 
"RTN","MAGGTPT1",40,0)
 ;     Get Identifiers, and ward as FLDS
"RTN","MAGGTPT1",41,0)
 ;I '$L(FLDS) S FLDS=FLDS_";.1;.03;.09;.301;391"
"RTN","MAGGTPT1",42,0)
 I '$L(FLDS) S FLDS=FLDS_";.1;.301;391"
"RTN","MAGGTPT1",43,0)
 ;  we'll add ACN to the index to search, for ward
"RTN","MAGGTPT1",44,0)
 ; for speed we'll decide which xref to use
"RTN","MAGGTPT1",45,0)
 S INDEX=$S(VAL?9N:"SSN^ACN",VAL?1U1.N:"BS5^ACN",1:"B^ACN")
"RTN","MAGGTPT1",46,0)
 ;
"RTN","MAGGTPT1",47,0)
 K ^TMP("DILIST",$J)
"RTN","MAGGTPT1",48,0)
 K ^TMP("DIERR",$J)
"RTN","MAGGTPT1",49,0)
 ;  VAL is the initial value to search for. i.e. the user input.
"RTN","MAGGTPT1",50,0)
 ;  Next line is to stop the FM Infinite Error Trap problem.
"RTN","MAGGTPT1",51,0)
 I $L(VAL)>30 S MAGRY(0)="0^Invalid: Input '"_$E(VAL,1,40)_"...' is too long. "_$L(VAL)_" characters." Q
"RTN","MAGGTPT1",52,0)
 D FIND^DIC(FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)
"RTN","MAGGTPT1",53,0)
 ;
"RTN","MAGGTPT1",54,0)
 ;  if no Match or ERROR  we return 0 as 1st '^' piece.
"RTN","MAGGTPT1",55,0)
 ;
"RTN","MAGGTPT1",56,0)
 I '$D(^TMP("DILIST",$J,1)) S I=1 D  Q
"RTN","MAGGTPT1",57,0)
 . I $D(^TMP("DIERR",$J)) D FINDERR(I) Q
"RTN","MAGGTPT1",58,0)
 . S MAGRY(I)="NO MATCH for lookup on """_$P(ZY,"^",2)_""""
"RTN","MAGGTPT1",59,0)
 ;
"RTN","MAGGTPT1",60,0)
 ;  so we have some matches, (BUT we could still have an error)
"RTN","MAGGTPT1",61,0)
 ;  so first list all matches, then the Errors, if any.
"RTN","MAGGTPT1",62,0)
 S I="" F  S I=$O(^TMP("DILIST",$J,1,I)) Q:I=""  D
"RTN","MAGGTPT1",63,0)
 . S X=^TMP("DILIST",$J,1,I) ; Name
"RTN","MAGGTPT1",64,0)
 . S MAGDFN=^TMP("DILIST",$J,2,I) ; DFN
"RTN","MAGGTPT1",65,0)
 . ;
"RTN","MAGGTPT1",66,0)
 . S WARD=^TMP("DILIST",$J,"ID",I,.1)
"RTN","MAGGTPT1",67,0)
 . K ^TMP("DILIST",$J,"ID",I,.1)
"RTN","MAGGTPT1",68,0)
 . I $E(WARD,1,$L(VAL))=VAL S X=WARD_"   "_X
"RTN","MAGGTPT1",69,0)
 . ;
"RTN","MAGGTPT1",70,0)
 . S X=X_"   "_$$DOB^DPTLK1(MAGDFN)_"   "_$$SSN^DPTLK1(MAGDFN)
"RTN","MAGGTPT1",71,0)
 . S Z=0
"RTN","MAGGTPT1",72,0)
 . ; We are displaying other identifiers with each patient.
"RTN","MAGGTPT1",73,0)
 . F  S Z=$O(^TMP("DILIST",$J,"ID",I,Z)) Q:Z=""  S X=X_"   "_^(Z)
"RTN","MAGGTPT1",74,0)
 . S MAGRY(I)=X_"^"_+MAGDFN
"RTN","MAGGTPT1",75,0)
 ;
"RTN","MAGGTPT1",76,0)
 I $D(^TMP("DIERR",$J)) D FINDERR() Q
"RTN","MAGGTPT1",77,0)
 I '$D(^TMP("DILIST",$J,0)) Q
"RTN","MAGGTPT1",78,0)
 S X=^TMP("DILIST",$J,0)
"RTN","MAGGTPT1",79,0)
 S I=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",80,0)
 S MAGRY(0)="Found "_$P(X,"^")_" entr"_$S((+X=1):"y",1:"ies")_" matching """_$P(ZY,"^",3)_""""
"RTN","MAGGTPT1",81,0)
 I $P(X,"^",3)>0 S MAGRY(0)=MAGRY(0)_" there are more"
"RTN","MAGGTPT1",82,0)
 Q
"RTN","MAGGTPT1",83,0)
FINDERR(XI) ;
"RTN","MAGGTPT1",84,0)
 I '+$G(XI) S XI=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",85,0)
 S MAGRY(XI)="ERROR^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","MAGGTPT1",86,0)
 Q
"RTN","MAGGTPT1",87,0)
INFO(MAGRY,DATA) ;RPC [MAGG PAT INFO]  Call to  Return patient info.
"RTN","MAGGTPT1",88,0)
 ; Input parameters 
"RTN","MAGGTPT1",89,0)
 ;    DATA:  MAGDFN ^ NOLOG ^ ISICN
"RTN","MAGGTPT1",90,0)
 ;       MAGDFN -- Patient DFN
"RTN","MAGGTPT1",91,0)
 ;       NOLOG  -- 0/1; if 1, then do NOT update the Session log
"RTN","MAGGTPT1",92,0)
 ;       ISICN  -- 0/1  if 1, then this is an ICN, if 0 (default) this is a DFN ; Patch 41
"RTN","MAGGTPT1",93,0)
 ;  MAGRY is a string, we return the following :
"RTN","MAGGTPT1",94,0)
 ; //$P     1        2      3     4     5     6     7     8        9                     10
"RTN","MAGGTPT1",95,0)
 ; //    status ^   DFN ^ name ^ sex ^ DOB ^ SSN ^ S/C ^ TYPE ^ Veteran(y/n)  ^ Patient Image Count
"RTN","MAGGTPT1",96,0)
 ; //$P    11            12              13
"RTN","MAGGTPT1",97,0)
 ;        ICN       SITE Number   ^ Production Account 1/0
"RTN","MAGGTPT1",98,0)
 ; VADM(1)=Patient's name
"RTN","MAGGTPT1",99,0)
 ; VADM(5)=Patient's sex (M^MALE)
"RTN","MAGGTPT1",100,0)
 ; VADM(3)=Patient's DOB (internal^external)
"RTN","MAGGTPT1",101,0)
 ; VADM(2)=Patient's SSN (internal^external)
"RTN","MAGGTPT1",102,0)
 ; VAEL(3)=Patient's Service Connected? (#.301) (1=yes)
"RTN","MAGGTPT1",103,0)
 ; VAEL(4)=Patient's Veteran Y/N (#1901) (1=yes)
"RTN","MAGGTPT1",104,0)
 ; VAEL(6)=Patient's Type (#391) (internal^external)
"RTN","MAGGTPT1",105,0)
 ;
"RTN","MAGGTPT1",106,0)
 N MAGDFN,DFN,X,NOLOG,VADM,VAEL,VAERR,ISICN
"RTN","MAGGTPT1",107,0)
 S MAGDFN=$P(DATA,U),NOLOG=+$P(DATA,U,2),ISICN=+$P(DATA,U,3)
"RTN","MAGGTPT1",108,0)
 I ISICN D GETDFN^VAFCTFU1(.DFN,MAGDFN)
"RTN","MAGGTPT1",109,0)
 E  S DFN=+MAGDFN
"RTN","MAGGTPT1",110,0)
 D DEM^VADPT,ELIG^VADPT
"RTN","MAGGTPT1",111,0)
 I VAERR S MAGRY="0^"_"Entry not found in Patient file." Q
"RTN","MAGGTPT1",112,0)
 S X=$TR($$FMTE^XLFDT($P(VADM(3),"^"),"2FD")," ",0)
"RTN","MAGGTPT1",113,0)
 ; //           status ^   DFN ^ name ^ sex ^ DOB ^ SSN    ^ S/C ^ TYPE ^ Veteran(y/n)  ^ Patient Image Count
"RTN","MAGGTPT1",114,0)
 S $P(MAGRY,"^",1,2)="1^"_DFN
"RTN","MAGGTPT1",115,0)
 ;          Fields:      NAME,           SEX,      DATE OF BIRTH,    SSN
"RTN","MAGGTPT1",116,0)
 S $P(MAGRY,"^",3,6)=$G(VADM(1))_"^"_$P(VADM(5),"^",2)_"^"_X_"^"_$P(VADM(2),"^")
"RTN","MAGGTPT1",117,0)
 ;          Fields:  Service Connected?,       Type,                   Veteran Y/N?     
"RTN","MAGGTPT1",118,0)
 S $P(MAGRY,"^",7,9)=$S(+VAEL(3):"YES",1:"")_"^"_$P(VAEL(6),"^",2)_"^"_$S(+VAEL(4):"YES",1:"")
"RTN","MAGGTPT1",119,0)
 ;          Fields:  Patient Image Count   
"RTN","MAGGTPT1",120,0)
 S $P(MAGRY,"^",10)=$$IMGCT(DFN)_"^"
"RTN","MAGGTPT1",121,0)
 ;  Additions. for Patch 41
"RTN","MAGGTPT1",122,0)
 ;          Fields :   Patient ICN
"RTN","MAGGTPT1",123,0)
 S $P(MAGRY,"^",11)=$$GETICN^MPIF001(DFN)
"RTN","MAGGTPT1",124,0)
 S X=$$SITE^VASITE
"RTN","MAGGTPT1",125,0)
 ;          Fields:   Site Number       Prod Acct
"RTN","MAGGTPT1",126,0)
 S $P(MAGRY,"^",12)=$P($G(X),"^",3)_"^"_"1" ; We'll default to Production Account = Yes.
"RTN","MAGGTPT1",127,0)
 ; NEED KERNEL PATCH XU*8.0*284 FOR PROD^XUPROD
"RTN","MAGGTPT1",128,0)
 ;          Fields :   the Actual value for Prod Acct
"RTN","MAGGTPT1",129,0)
 I $L($T(PROD^XUPROD)) S $P(MAGRY,"^",13)=+$$PROD^XUPROD
"RTN","MAGGTPT1",130,0)
 S $P(MAGRY,"^",14)="^"
"RTN","MAGGTPT1",131,0)
 ; AGE
"RTN","MAGGTPT1",132,0)
 S $P(MAGRY,"^",15)=VADM(4)_"^"
"RTN","MAGGTPT1",133,0)
 D KVAR^VADPT,KVA^VADPT
"RTN","MAGGTPT1",134,0)
 I NOLOG  ; Don't update session log
"RTN","MAGGTPT1",135,0)
 ;  We'll track DFN:ICN
"RTN","MAGGTPT1",136,0)
 E  D ACTION^MAGGTAU("PAT^"_DFN_$S(ISICN:"-"_MAGDFN,1:""))
"RTN","MAGGTPT1",137,0)
 Q
"RTN","MAGGTPT1",138,0)
IMGCT(DFN) ; RETURN TOTAL NUMBER OF IMAGES FOR A PATIENT;
"RTN","MAGGTPT1",139,0)
 ;
"RTN","MAGGTPT1",140,0)
 N I,CT,RDT,PRX,IEN
"RTN","MAGGTPT1",141,0)
 S CT=0
"RTN","MAGGTPT1",142,0)
 S RDT="" F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:RDT=""  D
"RTN","MAGGTPT1",143,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGGTPT1",144,0)
 . . S IEN="" F  S IEN=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX,IEN)) Q:IEN=""  S CT=CT+1
"RTN","MAGGTPT1",145,0)
 Q CT
"RTN","MAGGTPT1",146,0)
BS5CHK(MAGRY,MAGDFN) ;RPC [MAGG PAT BS5 CHECK]
"RTN","MAGGTPT1",147,0)
 ; Call to check the BS5 cross ref 
"RTN","MAGGTPT1",148,0)
 ; and see if any similar patients exist.
"RTN","MAGGTPT1",149,0)
 ; If yes, all matching patients will be listed and shown to the user.
"RTN","MAGGTPT1",150,0)
 ;
"RTN","MAGGTPT1",151,0)
 N MAGX,MAGDPT,XDFN,XSSN,CT,LNTH
"RTN","MAGGTPT1",152,0)
 S LNTH=0
"RTN","MAGGTPT1",153,0)
 S MAGRY(1)="-1^Error checking cross reference"
"RTN","MAGGTPT1",154,0)
 D GUIBS5A^DPTLK6(.MAGRY,MAGDFN)
"RTN","MAGGTPT1",155,0)
 I MAGRY(1)=0 Q
"RTN","MAGGTPT1",156,0)
 S CT=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",157,0)
 S MAGRY(CT)=MAGRY(CT-1),MAGRY(CT-1)="0^ "
"RTN","MAGGTPT1",158,0)
 S I="" F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTPT1",159,0)
 . I $P(MAGRY(I),U)=0 Q
"RTN","MAGGTPT1",160,0)
 . I $L($P(MAGRY(I),U,3))>LNTH S LNTH=$L($P(MAGRY(I),U,3))
"RTN","MAGGTPT1",161,0)
 S LNTH=LNTH+1
"RTN","MAGGTPT1",162,0)
 S I=1 F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTPT1",163,0)
 . I $P(MAGRY(I),U)="0" S MAGRY(I)=$P(MAGRY(I),U,2) Q
"RTN","MAGGTPT1",164,0)
 . S XDFN=$P(MAGRY(I),U,2)
"RTN","MAGGTPT1",165,0)
 . I +XDFN=+MAGDFN S MAGX="   >>>>>> "
"RTN","MAGGTPT1",166,0)
 . E  S MAGX="          "
"RTN","MAGGTPT1",167,0)
 . S XSSN=$$SSN^DPTLK1(XDFN) I XSSN?9N S XSSN=$E(XSSN,1,3)_"-"_$E(XSSN,4,5)_"-"_$E(XSSN,6,9)
"RTN","MAGGTPT1",168,0)
 . S MAGDPT=$P(MAGRY(I),U,3),$E(MAGDPT,LNTH)=" "
"RTN","MAGGTPT1",169,0)
 . S MAGX=MAGX_MAGDPT_"   "_$$DOB^DPTLK1(XDFN)_"   "_XSSN
"RTN","MAGGTPT1",170,0)
 . S MAGRY(I)=MAGX
"RTN","MAGGTPT1",171,0)
 Q
"RTN","MAGGTRA")
0^30^B11950621
"RTN","MAGGTRA",1,0)
MAGGTRA ;WOIFO/GEK - RPC Call to list Patient's Rad/Nuc Exams, Reports ; [ 06/20/2001 08:57 ]
"RTN","MAGGTRA",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTRA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTRA",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRA",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTRA",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTRA",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTRA",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTRA",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTRA",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTRA",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTRA",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTRA",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTRA",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTRA",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTRA",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRA",17,0)
 ;;
"RTN","MAGGTRA",18,0)
 Q
"RTN","MAGGTRA",19,0)
LIST(MAGRY,DATA) ;
"RTN","MAGGTRA",20,0)
 ; SOME OLD IMAGING EXECUTABLES (IMGVWP10) STILL CALL HERE
"RTN","MAGGTRA",21,0)
 ;  THIS HAS BEEN SWITCHED TO LIST^MAGGTRA1
"RTN","MAGGTRA",22,0)
 ;
"RTN","MAGGTRA",23,0)
 ;MAGRY - return array of patient's exams.
"RTN","MAGGTRA",24,0)
 ;DATA   - RADFN - Radiology Patient's DFN  ^RADPT(
"RTN","MAGGTRA",25,0)
 ;
"RTN","MAGGTRA",26,0)
 D LIST^MAGGTRA1(.MAGRY,.DATA)
"RTN","MAGGTRA",27,0)
 Q
"RTN","MAGGTRA",28,0)
MAGPTR(MAGRY,XDUZ,MAGIEN,DATA) ;RPC Call to file Image pointer into Radiology
"RTN","MAGGTRA",29,0)
 ;   File and Radiology pointer into Image File.
"RTN","MAGGTRA",30,0)
 ;
"RTN","MAGGTRA",31,0)
 ; MAGRY is the return string = 1^success     if things work okay.
"RTN","MAGGTRA",32,0)
 ;                               0^message     if things not okay.
"RTN","MAGGTRA",33,0)
 ;  DATA is The data that was sent in LIST^MAGGTRA
"RTN","MAGGTRA",34,0)
 ;        it is the display data _ to ^TMP($J,"RAEX",RACNT
"RTN","MAGGTRA",35,0)
 ;        the ^TMP is setup by RAPTLU, (and MAGGTRA) in the lookup
"RTN","MAGGTRA",36,0)
 ;        of patient exams, we keep it, and send it back in case
"RTN","MAGGTRA",37,0)
 ;        we need to create a new report.
"RTN","MAGGTRA",38,0)
 ;
"RTN","MAGGTRA",39,0)
 ;  XDUZ is not used from parameter list anymore.
"RTN","MAGGTRA",40,0)
 ;  MAGIEN is Image File IEN ^MAG(2005,IEN
"RTN","MAGGTRA",41,0)
 ;
"RTN","MAGGTRA",42,0)
 N Y,I,CT,MAGERR,DIQUIET
"RTN","MAGGTRA",43,0)
 N RADFN,RADTI,RACNI,RANME,RASSN,RADATE,RADTE,RACN,RAPRC,RARPT,RAST,MAGGP
"RTN","MAGGTRA",44,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTRA",45,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTRA",46,0)
 S DIQUIET=1,MAGERR=0,CT=0
"RTN","MAGGTRA",47,0)
 D DT^DICRW
"RTN","MAGGTRA",48,0)
 ;    The list entry selected has the following data associated with it
"RTN","MAGGTRA",49,0)
 ;    it was created using parts of RAPTLU routine to list rad exams
"RTN","MAGGTRA",50,0)
 ;^TMP($J,"RAEX",RACNT)=RADFN_"^"_RADTI_"^"_RACNI_"^"_RANME_"^"_RASSN_"^"_RADATE_"^"_RADTE_"^"_RACN_"^"_RAPRC_"^"_RARPT_"^"_RAST
"RTN","MAGGTRA",51,0)
 ;
"RTN","MAGGTRA",52,0)
 S DATA=$P(DATA,"^",7,99)
"RTN","MAGGTRA",53,0)
 F I="RADFN","RADTI","RACNI","RANME","RASSN","RADATE","RADTE","RACN","RAPRC","RARPT","RAST" S CT=CT+1,@I=$P(DATA,"^",CT)
"RTN","MAGGTRA",54,0)
 ;
"RTN","MAGGTRA",55,0)
 ; let us check a few things first
"RTN","MAGGTRA",56,0)
 ; Do we have a valid IMAGE IEN  ^MAG(2005,
"RTN","MAGGTRA",57,0)
 I '$D(^MAG(2005,MAGIEN,0)) S MAGRY="0^OPERATION CANCEDED: INVALID Imaging (2005) entry" Q
"RTN","MAGGTRA",58,0)
 ; Does this Imaging entry already point to a Report.
"RTN","MAGGTRA",59,0)
 I $D(^MAG(2005,MAGIEN,2)) S Z=^(2) D
"RTN","MAGGTRA",60,0)
 . F I=6,7,8 S X=$P(Z,U,I) I $L(X) S MAGERR=1 Q
"RTN","MAGGTRA",61,0)
 I MAGERR S MAGRY="0^OPERATION CANCELED: Imaging File entry already has an associated Report" Q
"RTN","MAGGTRA",62,0)
 ; Does the Imaging entry patient, match the Rad Exam entry patient
"RTN","MAGGTRA",63,0)
 I $P(^MAG(2005,MAGIEN,0),U,7)'=RADFN S MAGRY="0^OPERATION CANCELED: Imaging Patient doesn't match Radiology Patient" Q
"RTN","MAGGTRA",64,0)
 I RARPT,'$D(^RARPT(RARPT,0)) S MAGRY="0^OPERATION CANCELED: INVALID Radiology Report Number" Q
"RTN","MAGGTRA",65,0)
 I '$G(RARPT) D CREATE^RARIC I '$G(RARPT) S MAGRY="0^OPERATION FAILED creating new Radiology Report entry" Q
"RTN","MAGGTRA",66,0)
 ;    Now lets file the Image pointer in the ^RARPT(  file.
"RTN","MAGGTRA",67,0)
 S MAGGP=MAGIEN
"RTN","MAGGTRA",68,0)
 D PTR^RARIC
"RTN","MAGGTRA",69,0)
 I Y<1 S MAGRY="0^OPERATION FAILED Creating Image pointer in Report File" Q
"RTN","MAGGTRA",70,0)
 ; Now SET the Parent fields in the Image File
"RTN","MAGGTRA",71,0)
 S $P(^MAG(2005,MAGIEN,2),U,6,8)=74_U_RARPT_U_+Y
"RTN","MAGGTRA",72,0)
 ; DONE.
"RTN","MAGGTRA",73,0)
 S MAGRY="1^Image pointer filed successfully"
"RTN","MAGGTRA",74,0)
 D LINKDT^MAGGTU6(.X,MAGIEN)
"RTN","MAGGTRA",75,0)
 Q
"RTN","MAGGTSR")
0^32^B18209701
"RTN","MAGGTSR",1,0)
MAGGTSR ;WOIFO/GEK - SURGERY CASE LIST ; [ 06/20/2001 08:57 ]
"RTN","MAGGTSR",2,0)
 ;;3.0;IMAGING;**8,59**;Nov 27, 2007;Build 20
"RTN","MAGGTSR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTSR",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSR",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTSR",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTSR",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTSR",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTSR",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTSR",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTSR",11,0)
 ;; |                                                               |
"RTN","MAGGTSR",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTSR",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTSR",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTSR",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTSR",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTSR",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSR",18,0)
 ;;
"RTN","MAGGTSR",19,0)
 Q
"RTN","MAGGTSR",20,0)
GET(MAGRY,MAGDFN,DATA) ;RPC [MAGGSUR GET]
"RTN","MAGGTSR",21,0)
 ; Call to get list of Patient Surgery procedures
"RTN","MAGGTSR",22,0)
 ;  MAGDFN       =       Patient DFN
"RTN","MAGGTSR",23,0)
 ;  DATA         =       For Future Use.
"RTN","MAGGTSR",24,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTSR",25,0)
 N Y,NAME,AI,CASES,SDAT,DTX,SRFDA
"RTN","MAGGTSR",26,0)
 K ^TMP($J,"MAGGTSR")
"RTN","MAGGTSR",27,0)
 S NAME=$P($G(^DPT(MAGDFN,0)),U) I NAME="" S MAGRY(0)="0^INVALID Patient ID" Q
"RTN","MAGGTSR",28,0)
 ; This is the Old Call we have always made.  Doesn't have Non-OR
"RTN","MAGGTSR",29,0)
 D GET^SROGTSR(.MAGRY,MAGDFN)
"RTN","MAGGTSR",30,0)
 I 'MAGRY(0) S MAGRY(0)=MAGRY(0)_" for "_NAME G C1
"RTN","MAGGTSR",31,0)
 ; Image count is for future use by Display
"RTN","MAGGTSR",32,0)
 S MAGRY(1)="#^Date^Case description^Case #^Images"
"RTN","MAGGTSR",33,0)
 S I=1 F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTSR",34,0)
 . S DTX=$$FMTE^XLFDT($P(MAGRY(I),U,5),"5MZ")
"RTN","MAGGTSR",35,0)
 . S ^TMP($J,"MAGGTSR",$P(MAGRY(I),U,5),$P(MAGRY(I),U,4))=DTX_"^"_$P(MAGRY(I),U,3)_"^"_$P(MAGRY(I),"^",4)_"^"_$P(MAGRY(I),U,6)_U_"|"_$P(MAGRY(I),U,4,5)_U
"RTN","MAGGTSR",36,0)
 ;
"RTN","MAGGTSR",37,0)
 ;This is the New Call, which has Non-OR, but doesn't have (Scheduled) so we merge the two calls.
"RTN","MAGGTSR",38,0)
C1 D LIST^SROESTV(.CASES,MAGDFN)
"RTN","MAGGTSR",39,0)
 I '$D(@CASES)  G E1
"RTN","MAGGTSR",40,0)
 S MAGRY(0)="1^"
"RTN","MAGGTSR",41,0)
 S MAGRY(1)="#^Date^Case description^Case #^Images"
"RTN","MAGGTSR",42,0)
 S I=0 F  S I=$O(@CASES@(I)) Q:'I  D
"RTN","MAGGTSR",43,0)
 . S SDAT=@CASES@(I)
"RTN","MAGGTSR",44,0)
 . ; SDAT = SURIEN  ^ SURDESC  ^ SURDT ^ DFN;NAME ^ 
"RTN","MAGGTSR",45,0)
 . I $D(^TMP($J,"MAGGTSR",$P(SDAT,U,3),$P(SDAT,U,1))) Q
"RTN","MAGGTSR",46,0)
 . S ^TMP($J,"MAGGTSR",$P(SDAT,U,3),$P(SDAT,U,1))=$$FMTE^XLFDT($P(SDAT,U,3),"5MZ")_U_$P(SDAT,U,2)_U_$P(SDAT,U,1)_U_$$IMGCT($P(SDAT,U,1))_U_"|"_$P(SDAT,U,1)_U_$P(SDAT,U,3)_U
"RTN","MAGGTSR",47,0)
 . Q
"RTN","MAGGTSR",48,0)
 ;
"RTN","MAGGTSR",49,0)
 ; Now Returned the Merged List of the results of Old Call, with Results of New Call.
"RTN","MAGGTSR",50,0)
E1 ;
"RTN","MAGGTSR",51,0)
 I '$D(^TMP($J,"MAGGTSR")) S MAGRY(0)="0^No Cases for "_$G(NAME) Q
"RTN","MAGGTSR",52,0)
 S I=1,DTX=0,SRFDA=0
"RTN","MAGGTSR",53,0)
 F  S DTX=$O(^TMP($J,"MAGGTSR",DTX)) Q:'DTX  D
"RTN","MAGGTSR",54,0)
 . S SRFDA="" F  S SRFDA=$O(^TMP($J,"MAGGTSR",DTX,SRFDA),-1) Q:'SRFDA  D
"RTN","MAGGTSR",55,0)
 . . S I=I+1,MAGRY(I)=I-1_"^"_^TMP($J,"MAGGTSR",DTX,SRFDA)
"RTN","MAGGTSR",56,0)
 . . Q
"RTN","MAGGTSR",57,0)
 . Q
"RTN","MAGGTSR",58,0)
 S $P(MAGRY(0),"^",1)=I-1
"RTN","MAGGTSR",59,0)
 Q
"RTN","MAGGTSR",60,0)
IMGCT(SRFIEN) ;
"RTN","MAGGTSR",61,0)
 ;  Count of images for this Surgery Case
"RTN","MAGGTSR",62,0)
 ;  If more than one group (or image) 
"RTN","MAGGTSR",63,0)
 ;  then return "Group count : total images"  i.e.   "3:134"
"RTN","MAGGTSR",64,0)
 ;  else return count of Images i.e. "4"
"RTN","MAGGTSR",65,0)
 ;
"RTN","MAGGTSR",66,0)
 N CT,GCT,ICT,J
"RTN","MAGGTSR",67,0)
 S J=0,CT=0,GCT=0
"RTN","MAGGTSR",68,0)
 F  S J=$O(^SRF(SRFIEN,2005,"B",J)) Q:'J  D
"RTN","MAGGTSR",69,0)
 . S ICT=+$P($G(^MAG(2005,J,1,0)),U,4)
"RTN","MAGGTSR",70,0)
 . S ICT=$S(ICT:ICT,1:1) ;If no group images, set count =1 (single image)
"RTN","MAGGTSR",71,0)
 . S GCT=GCT+1
"RTN","MAGGTSR",72,0)
 . S CT=CT+ICT
"RTN","MAGGTSR",73,0)
 I (GCT>1) Q GCT_":"_CT
"RTN","MAGGTSR",74,0)
 Q CT
"RTN","MAGGTSR",75,0)
 ;       
"RTN","MAGGTSR",76,0)
IMAGE(MAGRY,DATA) ;
"RTN","MAGGTSR",77,0)
 ;  Called with the IEN of the Surgery package ^SRF(170,x
"RTN","MAGGTSR",78,0)
 ;  We'll return a list of images.
"RTN","MAGGTSR",79,0)
 N SRFIEN,MAGIEN
"RTN","MAGGTSR",80,0)
 S SRFIEN=+DATA
"RTN","MAGGTSR",81,0)
 I '$D(^SRF(SRFIEN)) S MAGRY(0)="0^INVALID Surgery File entry" Q
"RTN","MAGGTSR",82,0)
 I '$O(^SRF(SRFIEN,2005,0)) S MAGRY(0)="0^No Images for this Operation." Q
"RTN","MAGGTSR",83,0)
 D GETLIST
"RTN","MAGGTSR",84,0)
 Q
"RTN","MAGGTSR",85,0)
GETLIST ; called from other points in this routine, when SRFIEN is defined
"RTN","MAGGTSR",86,0)
 ; and returns a list in MAGRY(1..n)
"RTN","MAGGTSR",87,0)
 ; We'll make a tmp list of just the image IEN's
"RTN","MAGGTSR",88,0)
 ;  splitting groups into individual image entries.
"RTN","MAGGTSR",89,0)
 K ^TMP($J,"MAGGX")
"RTN","MAGGTSR",90,0)
 S I=0,CT=1 F  S I=$O(^SRF(SRFIEN,2005,I)) Q:'I  D
"RTN","MAGGTSR",91,0)
 . S MAGIEN=$P(^SRF(SRFIEN,2005,I,0),U,1)
"RTN","MAGGTSR",92,0)
 . Q:'$D(^MAG(2005,MAGIEN,0))
"RTN","MAGGTSR",93,0)
 . I '$O(^MAG(2005,MAGIEN,1,0)) S ^TMP($J,"MAGGX",MAGIEN)=""
"RTN","MAGGTSR",94,0)
 . E  S Z=0 F  S Z=$O(^MAG(2005,MAGIEN,1,Z)) Q:Z=""  S ^TMP($J,"MAGGX",$P(^MAG(2005,MAGIEN,1,Z,0),U,1))=""
"RTN","MAGGTSR",95,0)
 I '$D(^TMP($J,"MAGGX")) S MAGRY(0)="0^Surgery File Entry "_SRFIEN_": has INVALID Image Pointers" Q
"RTN","MAGGTSR",96,0)
 S Z="",CT=0
"RTN","MAGGTSR",97,0)
 S MAGQUIET=1
"RTN","MAGGTSR",98,0)
 F  S Z=$O(^TMP($J,"MAGGX",Z)) Q:Z=""  D
"RTN","MAGGTSR",99,0)
 . S CT=CT+1,MAGXX=Z D INFO^MAGGTII
"RTN","MAGGTSR",100,0)
 . S MAGRY(CT)="B2^"_MAGFILE
"RTN","MAGGTSR",101,0)
 K MAGQUIET
"RTN","MAGGTSR",102,0)
 S MAGRY(0)=CT_"^Images for the selected Surgery File entry"
"RTN","MAGGTSR",103,0)
 K ^TMP("MAGGX")
"RTN","MAGGTSR",104,0)
 Q
"RTN","MAGGTSR1")
0^29^B6582516
"RTN","MAGGTSR1",1,0)
MAGGTSR1 ;WOIFO/GEK - ADD IMAGES TO SURGERY FILE ; [ 06/20/2001 08:57 ]
"RTN","MAGGTSR1",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTSR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTSR1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSR1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTSR1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTSR1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTSR1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTSR1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTSR1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTSR1",11,0)
 ;; |                                                               |
"RTN","MAGGTSR1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTSR1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTSR1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTSR1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTSR1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTSR1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSR1",18,0)
 ;;
"RTN","MAGGTSR1",19,0)
 Q
"RTN","MAGGTSR1",20,0)
FILE(MAGRY,MAGIEN,DATA) ;RPC Call to file Image pointers in Surgery package
"RTN","MAGGTSR1",21,0)
 ;   and Surgery pointers in Image File.
"RTN","MAGGTSR1",22,0)
 ;
"RTN","MAGGTSR1",23,0)
 ; DATA is same data that we listed in the GET^MAGGTSR call
"RTN","MAGGTSR1",24,0)
 ; MAGIEN is the Imaging internal number.
"RTN","MAGGTSR1",25,0)
 ;  example
"RTN","MAGGTSR1",26,0)
 ; for Imaging Versions < 2.5 the data is 
"RTN","MAGGTSR1",27,0)
 ; #     DATE             DESC      SRF(IEN   FM DATE
"RTN","MAGGTSR1",28,0)
 ;CNT_U_(READABLE DATE)_U_SROPS(1)_U_SROP_U_SRSDATE
"RTN","MAGGTSR1",29,0)
 ;
"RTN","MAGGTSR1",30,0)
 ; for Imaging Versions > 2.4, the data is different
"RTN","MAGGTSR1",31,0)
 ;CNT_U_(READABLE DATE)_U_SROPS(1)_U_IMAGECT_U_"|"_SROP_U_SRSDATE
"RTN","MAGGTSR1",32,0)
 ;  example
"RTN","MAGGTSR1",33,0)
 ;  1^05-06-1997^REMOVE TONSILS (REQUESTED)^8^|9853^2970506^
"RTN","MAGGTSR1",34,0)
 ;
"RTN","MAGGTSR1",35,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTSR1",36,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTSR1",37,0)
 N Y,MAGSIEN,MAGPDT,MAGFDA,MAGERR,MAGIENS
"RTN","MAGGTSR1",38,0)
 ; 
"RTN","MAGGTSR1",39,0)
 I (+$G(MAGJOB("VERSION"))>2.4) D
"RTN","MAGGTSR1",40,0)
 . S MAGSIEN=$P($P(DATA,$C(124),2),U,1)
"RTN","MAGGTSR1",41,0)
 . S MAGPDT=$P($P(DATA,$C(124),2),U,2)
"RTN","MAGGTSR1",42,0)
 E  S MAGSIEN=$P(DATA,U,4),MAGPDT=$P(DATA,U,5)
"RTN","MAGGTSR1",43,0)
 S MAGFDA(130.02005,"+1,"_MAGSIEN_",",.01)=MAGIEN
"RTN","MAGGTSR1",44,0)
 D UPDATE^DIE("S","MAGFDA","MAGIENS","MAGERR")
"RTN","MAGGTSR1",45,0)
 I '$G(MAGIENS(1)) D  D CLEAN^DILF S MAGRY=MAGERR Q
"RTN","MAGGTSR1",46,0)
 . S MAGERR="0^ERROR Adding Image to Surgery Package "
"RTN","MAGGTSR1",47,0)
 . I $D(DIERR) D RTRNERR(.MAGERR)
"RTN","MAGGTSR1",48,0)
 S MAGRY="1^Image added to Surgery Package"
"RTN","MAGGTSR1",49,0)
 S $P(^MAG(2005,MAGIEN,2),U,6,8)="130^"_MAGSIEN_U_MAGIENS(1)
"RTN","MAGGTSR1",50,0)
 D LINKDT^MAGGTU6(.X,MAGIEN)
"RTN","MAGGTSR1",51,0)
 Q
"RTN","MAGGTSR1",52,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGTSR1",53,0)
 S ETXT="0^ERROR  "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGGTSR1",54,0)
 Q
"RTN","MAGGTSY2")
0^33^B5995567
"RTN","MAGGTSY2",1,0)
MAGGTSY2 ;WOIFO/GEK - Calls from Imaging windows for System Manager ; [ 06/20/2001 08:57 ]
"RTN","MAGGTSY2",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTSY2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTSY2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSY2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTSY2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTSY2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTSY2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTSY2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTSY2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTSY2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTSY2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTSY2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTSY2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTSY2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTSY2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSY2",17,0)
 ;;
"RTN","MAGGTSY2",18,0)
 Q
"RTN","MAGGTSY2",19,0)
MAG(MAGRY,NODE) ;RPC Call to show node of Image File
"RTN","MAGGTSY2",20,0)
 ;  NODE is the IEN of Image File :  ^MAG(2005,NODE
"RTN","MAGGTSY2",21,0)
 N Y,I,CT,X,TNODE
"RTN","MAGGTSY2",22,0)
 S MAGRY=$NA(^TMP("MAGNODE",$J))
"RTN","MAGGTSY2",23,0)
 S NODE=$G(NODE)
"RTN","MAGGTSY2",24,0)
 N I,CT,X
"RTN","MAGGTSY2",25,0)
 K @MAGRY
"RTN","MAGGTSY2",26,0)
 S @MAGRY@(0)="Display NODE: "_$S($L(NODE):NODE,1:"LAST")
"RTN","MAGGTSY2",27,0)
 S I=0,CT=0
"RTN","MAGGTSY2",28,0)
 I $E(NODE)="^" G OTH
"RTN","MAGGTSY2",29,0)
 I 'NODE S NODE=$P(^MAG(2005,0),U,3)
"RTN","MAGGTSY2",30,0)
 S I="^MAG(2005,"_NODE_","""")"
"RTN","MAGGTSY2",31,0)
 F  S X=$Q(@I) S I=X Q:$P(X,",",2)'=NODE  D
"RTN","MAGGTSY2",32,0)
 . S CT=CT+1,@MAGRY@(CT)=X_" "_@X
"RTN","MAGGTSY2",33,0)
 . Q
"RTN","MAGGTSY2",34,0)
 I $P($G(^MAG(2005,NODE,2)),"^",6)="8925" D
"RTN","MAGGTSY2",35,0)
 . S CT=CT+1,@MAGRY@(CT)="   *******   TIU    ******* "
"RTN","MAGGTSY2",36,0)
 . S TNODE=$P(^MAG(2005,NODE,2),"^",7)
"RTN","MAGGTSY2",37,0)
 . S I="^TIU(8925,"_TNODE_","""")"
"RTN","MAGGTSY2",38,0)
 . F  S X=$Q(@I) S I=X Q:$P(X,",",2)'=TNODE  D
"RTN","MAGGTSY2",39,0)
 . . S CT=CT+1,@MAGRY@(CT)=X_" "_@X
"RTN","MAGGTSY2",40,0)
 . . Q
"RTN","MAGGTSY2",41,0)
 Q
"RTN","MAGGTSY2",42,0)
OTH ;
"RTN","MAGGTSY2",43,0)
 N OTHDA
"RTN","MAGGTSY2",44,0)
 S OTHDA=$P(NODE,",",2)
"RTN","MAGGTSY2",45,0)
 I OTHDA=0 S NODE=NODE_")" Q:'$D(@NODE)  S CT=$O(@MAGRY@(""),-1)+1,@MAGRY@(CT)=$G(@(NODE)) Q
"RTN","MAGGTSY2",46,0)
 S I=NODE_","""")"
"RTN","MAGGTSY2",47,0)
 F  S X=$Q(@I) S I=X Q:$P(X,",",2)'=OTHDA  D
"RTN","MAGGTSY2",48,0)
 . S CT=$O(@MAGRY@(""),-1)+1,@MAGRY@(CT)=X_" "_@X
"RTN","MAGGTSY2",49,0)
 . Q
"RTN","MAGGTSY2",50,0)
 Q
"RTN","MAGGTSYS")
0^34^B11307252
"RTN","MAGGTSYS",1,0)
MAGGTSYS ;WOIFO/GEK - Calls from Imaging windows for System Manager ; [ 06/20/2001 08:57 ]
"RTN","MAGGTSYS",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTSYS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTSYS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSYS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTSYS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTSYS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTSYS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTSYS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTSYS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTSYS",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTSYS",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTSYS",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTSYS",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTSYS",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTSYS",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSYS",17,0)
 ;;
"RTN","MAGGTSYS",18,0)
 Q
"RTN","MAGGTSYS",19,0)
GETS(MAGRY,NODE,FLAGS) ; USE GETS^DIQ TO GET FIELD VALUES.
"RTN","MAGGTSYS",20,0)
 K MAGWIN,I,CT,Y,NC,MAGOUT,MAGERR,TNC,ZZ
"RTN","MAGGTSYS",21,0)
 S MAGRY=$NA(^TMP("MAGNODE",$J))
"RTN","MAGGTSYS",22,0)
 S NODE=+$G(NODE)
"RTN","MAGGTSYS",23,0)
 I 'NODE S NODE=$P(^MAG(2005,0),U,3)
"RTN","MAGGTSYS",24,0)
 S MAGWIN=$$BROKER^XWBLIB
"RTN","MAGGTSYS",25,0)
 I 'MAGWIN W !,"NODE","  ",NODE
"RTN","MAGGTSYS",26,0)
 K @MAGRY
"RTN","MAGGTSYS",27,0)
 S @MAGRY@(0)="******    Fields for Image IEN: "_NODE_"    ******"
"RTN","MAGGTSYS",28,0)
 S I=0,CT=0
"RTN","MAGGTSYS",29,0)
 S FLAGS=$S($L($G(FLAGS)):FLAGS,1:"IERN")
"RTN","MAGGTSYS",30,0)
 D GETS^DIQ(2005,NODE,"*",FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTSYS",31,0)
 ;D GETS^DIQ(2005,NODE,".01;1;2;2.1;2.2;3;5;6;12","R","MAGOUT","MAGERR")
"RTN","MAGGTSYS",32,0)
 S NC=NODE_","
"RTN","MAGGTSYS",33,0)
 S I="" F  S I=$O(MAGOUT(2005,NC,I)) Q:I=""  D
"RTN","MAGGTSYS",34,0)
 . S CT=CT+1
"RTN","MAGGTSYS",35,0)
 . I $G(MAGOUT(2005,NC,I,"I"))=$G(MAGOUT(2005,NC,I,"E")) D  Q
"RTN","MAGGTSYS",36,0)
 . . S ZZ=I,$E(ZZ,45,999)=" = "_$G(MAGOUT(2005,NC,I,"E"))
"RTN","MAGGTSYS",37,0)
 . . S @MAGRY@(CT)=ZZ
"RTN","MAGGTSYS",38,0)
 . . ;S @MAGRY@(CT)=I_" = "_MAGOUT(2005,NC,I,"E") Q
"RTN","MAGGTSYS",39,0)
 . . Q
"RTN","MAGGTSYS",40,0)
 . ;
"RTN","MAGGTSYS",41,0)
 . S ZZ=I,$E(ZZ,25,999)=" = ("_$G(MAGOUT(2005,NC,I,"I"))_") "
"RTN","MAGGTSYS",42,0)
 . I ($L(ZZ)>44) S ZZ=ZZ_" = "_$G(MAGOUT(2005,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",43,0)
 . I ($L(ZZ)<45) S $E(ZZ,45,999)=" = "_$G(MAGOUT(2005,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",44,0)
 . ;S @MAGRY@(CT)=I_" = ("_$G(MAGOUT(2005,NC,I,"I"))_") = "_$G(MAGOUT(2005,NC,I,"E"))
"RTN","MAGGTSYS",45,0)
 . Q
"RTN","MAGGTSYS",46,0)
 I $P($G(^MAG(2005,NODE,2)),"^",6)=8925 D
"RTN","MAGGTSYS",47,0)
 . K MAGOUT,MAGERR
"RTN","MAGGTSYS",48,0)
 . S CT=CT+1,@MAGRY@(CT)="   ***************   TIU    *************** "
"RTN","MAGGTSYS",49,0)
 . S CT=CT+1,@MAGRY@(CT)="   **** Field Values for TIUDA: "_$P(^MAG(2005,NODE,2),"^",7)_"  ****"
"RTN","MAGGTSYS",50,0)
 . D GETS^DIQ(8925,$P(^MAG(2005,NODE,2),"^",7),"*",FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTSYS",51,0)
 . S NC=$P(^MAG(2005,NODE,2),"^",7)_","
"RTN","MAGGTSYS",52,0)
 . S I="" F  S I=$O(MAGOUT(8925,NC,I)) Q:I=""  D
"RTN","MAGGTSYS",53,0)
 . . S CT=CT+1
"RTN","MAGGTSYS",54,0)
 . . I $G(MAGOUT(8925,NC,I,"I"))=$G(MAGOUT(8925,NC,I,"E")) D  Q
"RTN","MAGGTSYS",55,0)
 . . . S ZZ=I,$E(ZZ,45,999)=" = "_$G(MAGOUT(8925,NC,I,"E"))
"RTN","MAGGTSYS",56,0)
 . . . S @MAGRY@(CT)=ZZ
"RTN","MAGGTSYS",57,0)
 . . . ;S @MAGRY@(CT)=I_" = "_MAGOUT(2005,NC,I,"E") Q
"RTN","MAGGTSYS",58,0)
 . . . Q
"RTN","MAGGTSYS",59,0)
 . . ;
"RTN","MAGGTSYS",60,0)
 . . S ZZ=I,$E(ZZ,25,999)=" = ("_$G(MAGOUT(8925,NC,I,"I"))_") "
"RTN","MAGGTSYS",61,0)
 . . I ($L(ZZ)>44) S ZZ=ZZ_" = "_$G(MAGOUT(8925,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",62,0)
 . . I ($L(ZZ)<45) S $E(ZZ,45,999)=" = "_$G(MAGOUT(8925,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",63,0)
 . . ;S @MAGRY@(CT)=I_" = ("_$G(MAGOUT(2005,NC,I,"I"))_") = "_$G(MAGOUT(2005,NC,I,"E"))
"RTN","MAGGTSYS",64,0)
 . . Q
"RTN","MAGGTSYS",65,0)
 . Q
"RTN","MAGGTSYS",66,0)
 Q
"RTN","MAGGTU1")
0^43^B7410851
"RTN","MAGGTU1",1,0)
MAGGTU1 ;WOIFO/GEK - Silent Utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU1",2,0)
 ;;3.0;IMAGING;**3,8,85,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU1",11,0)
 ;; |                                                               |
"RTN","MAGGTU1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU1",18,0)
 ;;
"RTN","MAGGTU1",19,0)
 Q
"RTN","MAGGTU1",20,0)
DRIVE(X,SITE) ; Get the current drive for writing an image
"RTN","MAGGTU1",21,0)
 ; Copied from MAGFILE and edited for silent running, made extrinsic.
"RTN","MAGGTU1",22,0)
 ; X : The Network Location to Write to.  Dicom Gateway sends this.
"RTN","MAGGTU1",23,0)
 ; IF 'X then use DUZ(2) to find IMAGE NETWORK WRITE LOCATION.
"RTN","MAGGTU1",24,0)
 ; P 85, Enable writing to any valid site. Not Just Duz(2)
"RTN","MAGGTU1",25,0)
 ; SITE : The Site to Write to.  Import API now sends this.
"RTN","MAGGTU1",26,0)
 ; 
"RTN","MAGGTU1",27,0)
 ;
"RTN","MAGGTU1",28,0)
 N Z,MAGREF,MAGREFNM,MAGDRIVE,MAGPLC
"RTN","MAGGTU1",29,0)
 S SITE=$S($G(SITE):SITE,1:$G(DUZ(2)))
"RTN","MAGGTU1",30,0)
 S MAGPLC=$$PLACE^MAGBAPI(SITE) ;pre-patch 85 was DUZ(2)
"RTN","MAGGTU1",31,0)
 S MAGREF=$G(X)
"RTN","MAGGTU1",32,0)
 I $G(MAGWRITE)="PACS" S MAGREF=$$GET1^DIQ(2006.1,MAGPLC,1.03,"I") ; DBI 9/20/02 - SEB
"RTN","MAGGTU1",33,0)
 I 'MAGREF S MAGREF=$$GET1^DIQ(2006.1,MAGPLC,.03,"I") ; DBI 9/20/02 - SEB
"RTN","MAGGTU1",34,0)
 I MAGREF="" D  Q Z
"RTN","MAGGTU1",35,0)
 . S Z="0^NEED WRITE LOCATION in SITE Parameters file!!! Call IRM"
"RTN","MAGGTU1",36,0)
 ;
"RTN","MAGGTU1",37,0)
 I '$P(^MAG(2005.2,MAGREF,0),"^",6) D  Q Z
"RTN","MAGGTU1",38,0)
 . S Z="0^The Server that you are writing to is off-line.  Call IRM"
"RTN","MAGGTU1",39,0)
 ;
"RTN","MAGGTU1",40,0)
 S MAGREFNM=$P(^MAG(2005.2,MAGREF,0),"^",1),MAGDRIVE=$P(^(0),"^",2)
"RTN","MAGGTU1",41,0)
 Q MAGREF_U_MAGDRIVE
"RTN","MAGGTU1",42,0)
 ;
"RTN","MAGGTU1",43,0)
DA2NAME(IEN,SUF) ; Return file name with extension 
"RTN","MAGGTU1",44,0)
 ;  SUF should always be defined, but default to .TIF if not.
"RTN","MAGGTU1",45,0)
 N PRE,FILE,CMPF,MAGPLC
"RTN","MAGGTU1",46,0)
 S MAGPLC=$$DA2PLC^MAGBAPIP(IEN,"F")
"RTN","MAGGTU1",47,0)
 S SUF=$S($L($G(SUF)):SUF,1:"TIF")
"RTN","MAGGTU1",48,0)
 S PRE=$$GET1^DIQ(2006.1,MAGPLC,.02,"E") ; gek DBI
"RTN","MAGGTU1",49,0)
 ;S PRE=$G(^MAG(2006.1,"ALTR"))
"RTN","MAGGTU1",50,0)
 I '$L(PRE) Q "0^Need Site Specific LETTERS in Site Parameters File"
"RTN","MAGGTU1",51,0)
 ;
"RTN","MAGGTU1",52,0)
 S FILE=PRE_IEN
"RTN","MAGGTU1",53,0)
 ; Design of Patch 3 was changed to only return 14 digit file names.
"RTN","MAGGTU1",54,0)
 ; 08/02/2002 Patch 3,8 force 14.3 file name convention
"RTN","MAGGTU1",55,0)
 I ($L(FILE)<14) S FILE=PRE_$E(10000000000000+IEN,$L(PRE)+1,14)
"RTN","MAGGTU1",56,0)
 Q "1^"_FILE_"."_SUF
"RTN","MAGGTU3")
0^10^B33146590
"RTN","MAGGTU3",1,0)
MAGGTU3 ;WOIFO/GEK - Silent calls for Imaging ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU3",2,0)
 ;;3.0;IMAGING;**7,8,48,45,20,46,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",17,0)
 ;;
"RTN","MAGGTU3",18,0)
 Q
"RTN","MAGGTU3",19,0)
IMAGEINF(MAGRY,IEN,NOCHK) ;RPC [MAGG IMAGE INFO] Call to return information for 1 image;
"RTN","MAGGTU3",20,0)
 ; IEN   =       Image IEN  ^MAG(2005,IEN
"RTN","MAGGTU3",21,0)
 ; NOCHK =    1|""   if 1 then do not run QA check on this image.
"RTN","MAGGTU3",22,0)
 ; 
"RTN","MAGGTU3",23,0)
 N MAGFILE,Y,Z,MAGNOCHK
"RTN","MAGGTU3",24,0)
 I '$D(^MAG(2005,IEN)) D  Q
"RTN","MAGGTU3",25,0)
 . I $D(^MAG(2005.1,IEN)) S MAGRY(0)="0^Image : """_$P($G(^MAG(2005.1,IEN,2)),U,4)_""" has been deleted." Q
"RTN","MAGGTU3",26,0)
 . S MAGRY(0)="0^INVALID Image number "_IEN
"RTN","MAGGTU3",27,0)
 . Q
"RTN","MAGGTU3",28,0)
 ; MAGGTII queries the variable MAGNOCHK to run QA check or not.
"RTN","MAGGTU3",29,0)
 S MAGNOCHK=+$G(NOCHK)
"RTN","MAGGTU3",30,0)
 S MAGXX=IEN D INFO^MAGGTII ; this'll give us the  MAGFILE variable
"RTN","MAGGTU3",31,0)
 S Z=$P(^MAG(2005,IEN,0),U,7)
"RTN","MAGGTU3",32,0)
 I '$D(^DPT(Z)) S Z="1^Invalid patient pointer"
"RTN","MAGGTU3",33,0)
 E  S Z=Z_U_$P(^DPT(Z,0),U)
"RTN","MAGGTU3",34,0)
 S MAGRY(0)="1^"_MAGFILE
"RTN","MAGGTU3",35,0)
 S MAGRY(1)=Z ; dfn^name
"RTN","MAGGTU3",36,0)
 Q
"RTN","MAGGTU3",37,0)
USERINF2(MAGRY,MAGWRKID) ;RPC [MAGGUSER2] Return user info.
"RTN","MAGGTU3",38,0)
 ; MAGRY(1) = DUZ ^ FULL NAME  ^ INITIALS
"RTN","MAGGTU3",39,0)
 ; MAGRY(2) = Network UserName ^ PassWord.
"RTN","MAGGTU3",40,0)
 ; MAGRY(3) = MUSE Site number. ( default = 1)
"RTN","MAGGTU3",41,0)
 ; Node 4 is data from IMAGING SITE PARAMATERS File #2006.1 and INSTITUTION File #4
"RTN","MAGGTU3",42,0)
 ; MAGRY(4)= PLACE IEN  ^ SITE CODE ^ DUZ(2) ^ INSTITUTION NAME (.01) ^ $$CONSOLID ^ User's local STATION NUMBER (99)
"RTN","MAGGTU3",43,0)
 ; MAGRY(5) = +<CP Version>|0 ^ Version of CP installed on Server
"RTN","MAGGTU3",44,0)
 ; MAGRY(6) = Warning message if we can't resolve which Site Parameter entry to use.
"RTN","MAGGTU3",45,0)
 ; MAGRY(7) = Warning message  <reserved for future>
"RTN","MAGGTU3",46,0)
 ; MAGRY(8) = 1|0  1 = Production account    0 = Test Account (or couldn't determine) ;Patch 41
"RTN","MAGGTU3",47,0)
 ; MAGRY(9) = Vista Site Service PHYSICAL REFERENCE from Network Location File.
"RTN","MAGGTU3",48,0)
 ; MAGRY(10)=Domain Name
"RTN","MAGGTU3",49,0)
 ; MAGRY(11)=Primary Division IEN
"RTN","MAGGTU3",50,0)
 ; MAGRY(12)=Primary Division STATION NUMBER
"RTN","MAGGTU3",51,0)
 ;  
"RTN","MAGGTU3",52,0)
 N J,K,Y,MAGPLC,MAGWARN,MAGWARN1,VSRV,PHYREF ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",53,0)
 S MAGPLC=0
"RTN","MAGGTU3",54,0)
 I $D(DUZ(2)) S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",55,0)
 ;
"RTN","MAGGTU3",56,0)
 ; SET THE PARTITION VARIABLE MAGSYS   i.e.'IGK_Garrett's Desk'
"RTN","MAGGTU3",57,0)
 S MAGSYS=$G(MAGWRKID,"")
"RTN","MAGGTU3",58,0)
 I +$G(DUZ)=0 S MAGRY(0)="0^DUZ Undefined, Null or Zero" Q
"RTN","MAGGTU3",59,0)
 I 'MAGPLC D
"RTN","MAGGTU3",60,0)
 . S MAGWARN="Can't resolve Site Param, DUZ(2): "_$S($D(DUZ(2)):DUZ(2),1:"NULL")_" DUZ: "_DUZ
"RTN","MAGGTU3",61,0)
 . S MAGPLC=$$DUZ2PLC^MAGBAPIP(.MAGWARN1) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",62,0)
 . Q
"RTN","MAGGTU3",63,0)
 S MAGRY(0)="1^"
"RTN","MAGGTU3",64,0)
 ;          DUZ     FULL NAME                INITIALS
"RTN","MAGGTU3",65,0)
 S MAGRY(1)=DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)
"RTN","MAGGTU3",66,0)
 ; NOW NET STUFF
"RTN","MAGGTU3",67,0)
 I 'MAGPLC Q 
"RTN","MAGGTU3",68,0)
 ; From IMAGING SITE PARAMETERS File
"RTN","MAGGTU3",69,0)
 ;   get the Network UserName and PassWord.
"RTN","MAGGTU3",70,0)
 S MAGRY(2)=$P($G(^MAG(2006.1,MAGPLC,"NET")),U,1,2)
"RTN","MAGGTU3",71,0)
 ;   get the default MUSE Site number.
"RTN","MAGGTU3",72,0)
 S MAGRY(3)=+$P($G(^MAG(2006.1,MAGPLC,"USERPREF")),U,2)
"RTN","MAGGTU3",73,0)
 ;   default to 1 if nothing is entered in Site Parameters File
"RTN","MAGGTU3",74,0)
 I MAGRY(3)=0 S MAGRY(3)=1
"RTN","MAGGTU3",75,0)
 ; This SITEIEN^SITECODE^USER INSTITUTION IEN^INSTITUTION NAME^CONSOLIDATED^User's local STATION NUMBER
"RTN","MAGGTU3",76,0)
 ;  is  used by Display to determine location of Workstation
"RTN","MAGGTU3",77,0)
 ;  and used by Capture to determine the Write Location.
"RTN","MAGGTU3",78,0)
 S MAGRY(4)=MAGPLC_U_$$GET1^DIQ(2006.1,MAGPLC,.09)_U_$G(DUZ(2))_U_$$GET1^DIQ(2006.1,MAGPLC,.01,"E")
"RTN","MAGGTU3",79,0)
 S MAGJOB("PLC")=MAGPLC
"RTN","MAGGTU3",80,0)
 S MAGJOB("PLCODE")=$$GET1^DIQ(2006.1,MAGPLC,.09)
"RTN","MAGGTU3",81,0)
 S MAGRY(4)=MAGRY(4)_U_$$CONSOLID^MAGBAPI_U_$$GET1^DIQ(4,DUZ(2),99,"E")
"RTN","MAGGTU3",82,0)
 ; is CP not installed at this site, the Client will hide options
"RTN","MAGGTU3",83,0)
 ;  related to CP.
"RTN","MAGGTU3",84,0)
 S X=$$VERSION^XPDUTL("CLINICAL PROCEDURES")
"RTN","MAGGTU3",85,0)
 S MAGRY(5)=+X_U_X
"RTN","MAGGTU3",86,0)
 S MAGRY(6)=$G(MAGWARN)
"RTN","MAGGTU3",87,0)
 S MAGRY(7)=$G(MAGWARN1)
"RTN","MAGGTU3",88,0)
 S MAGRY(8)=$S($L($T(PROD^XUPROD)):+$$PROD^XUPROD,1:0)
"RTN","MAGGTU3",89,0)
 S VSRV=$P($G(^MAG(2006.1,MAGPLC,"NET")),"^",5)
"RTN","MAGGTU3",90,0)
 I VSRV I +$P($G(^MAG(2005.2,VSRV,0)),"^",6) S PHYREF=$P($G(^MAG(2005.2,VSRV,0)),"^",2)
"RTN","MAGGTU3",91,0)
 S MAGRY(9)=$G(PHYREF)
"RTN","MAGGTU3",92,0)
 S MAGRY(10)=$$KSP^XUPARAM("WHERE")
"RTN","MAGGTU3",93,0)
 S MAGRY(11)=$P($$SITE^VASITE(),"^")
"RTN","MAGGTU3",94,0)
 S MAGRY(12)=$P($$SITE^VASITE(),"^",3)
"RTN","MAGGTU3",95,0)
 Q
"RTN","MAGGTU3",96,0)
 ;
"RTN","MAGGTU3",97,0)
CATEGORY(MAGRY) ; RPC [MAGGDESCCAT] Call to return Mag Descriptive Categories in array
"RTN","MAGGTU3",98,0)
 ; for listing in a list box.
"RTN","MAGGTU3",99,0)
 N I,K,CT,Y
"RTN","MAGGTU3",100,0)
 S I=0,CT=0
"RTN","MAGGTU3",101,0)
 I '$D(^MAG(2005.81)) D  Q
"RTN","MAGGTU3",102,0)
 . S MAGRY(0)="0^ERROR Mag Descriptive Category File doesn't exist"
"RTN","MAGGTU3",103,0)
 F  S I=$O(^MAG(2005.81,"B",I)) Q:I=""  D
"RTN","MAGGTU3",104,0)
 . ;Next line adds ADMIN, CLIN 3rd piece of the data returned
"RTN","MAGGTU3",105,0)
 . S K=$O(^MAG(2005.81,"B",I,"")),CT=CT+1
"RTN","MAGGTU3",106,0)
 . S MAGRY(CT)=I_U_K_U_$P(^MAG(2005.81,K,0),U,2)
"RTN","MAGGTU3",107,0)
 S MAGRY(0)=CT_"^Categories on file"
"RTN","MAGGTU3",108,0)
 Q
"RTN","MAGGTU3",109,0)
USERKEYS(MAGKEY) ; RPC [MAGGUSERKEYS]
"RTN","MAGGTU3",110,0)
 ; Call to return an array of IMAGING Security Keys
"RTN","MAGGTU3",111,0)
 D USERKEYS^MAGGTU31(.MAGKEY)
"RTN","MAGGTU3",112,0)
 Q
"RTN","MAGGTU3",113,0)
MAIL(MAGRY,MAGFILE,MAGIEN) ;RPC [MAGG OFFLINE IMAGE ACCESSED]
"RTN","MAGGTU3",114,0)
 ;   Called to log an Offline Image accessed.
"RTN","MAGGTU3",115,0)
 ;   ^MAGQUEUE(2006.033,0) = OFFLINE IMAGES
"RTN","MAGGTU3",116,0)
 ;   User must edit 2006.033 by hand to mark images as OFFLINE.
"RTN","MAGGTU3",117,0)
 ;
"RTN","MAGGTU3",118,0)
 N FILEREF,PLATTER,A
"RTN","MAGGTU3",119,0)
 S MAGRY="0^Error : logging access to Off-Line Image"
"RTN","MAGGTU3",120,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU3",121,0)
 S FILEREF=$$UP^XLFSTR($P(MAGFILE,"\",$L(MAGFILE,"\")))
"RTN","MAGGTU3",122,0)
 S PLATTER=$O(^MAGQUEUE(2006.033,"B",FILEREF,""))
"RTN","MAGGTU3",123,0)
 S PLATTER=$P(^MAGQUEUE(2006.033,PLATTER,0),U,2)
"RTN","MAGGTU3",124,0)
 I MAGFILE[".ABS" Q
"RTN","MAGGTU3",125,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGTU3",126,0)
 S XMDUZ=$S($D(DUZ):DUZ,1:.5)
"RTN","MAGGTU3",127,0)
 S XMSUB="Offline Image Request"
"RTN","MAGGTU3",128,0)
 S XMTEXT="A("
"RTN","MAGGTU3",129,0)
 S A(1)="Patient   : "_$P(^DPT($P($G(^MAG(2005,+MAGIEN,0)),U,7),0),U,1)
"RTN","MAGGTU3",130,0)
 S A(2)="FileName  : "_MAGFILE_"  "_MAGIEN
"RTN","MAGGTU3",131,0)
 S A(3)="Desc      : "_$P($G(^MAG(2005,MAGIEN,2)),U,4)
"RTN","MAGGTU3",132,0)
 S A(4)="Procedure : "_$P($G(^MAG(2005,MAGIEN,0)),U,8)
"RTN","MAGGTU3",133,0)
 S A(5)="Platter   : "_PLATTER
"RTN","MAGGTU3",134,0)
 S A(6)="User      : "_$$GET1^DIQ(200,DUZ_",",.01)_"("_$G(DUZ)_")"
"RTN","MAGGTU3",135,0)
 S XMY("G.OFFLINE IMAGE TRACKERS")="" D ^XMD
"RTN","MAGGTU3",136,0)
 S MAGRY="1^Message sent :  Offline Image Accessed"
"RTN","MAGGTU3",137,0)
 Q
"RTN","MAGGTU3",138,0)
LOGERROR(MAGRY,TEXT) ;RPC [MAGG LOG ERROR TEXT]
"RTN","MAGGTU3",139,0)
 ; Call to stuff error information from Delphi app into the Session file.
"RTN","MAGGTU3",140,0)
 Q:($P($G(MAGJOB("VERSION")),".",1,2))<"3.0"
"RTN","MAGGTU3",141,0)
 D LOGERR^MAGGTERR("---- New Error ----")
"RTN","MAGGTU3",142,0)
 S I="" F  S I=$O(TEXT(I)) Q:I=""  D LOGERR^MAGGTERR(TEXT(I))
"RTN","MAGGTU3",143,0)
 S MAGRY="1^Error text saved to Session file"
"RTN","MAGGTU3",144,0)
 Q
"RTN","MAGGTU3",145,0)
RSLVABS(MAGIEN,FILENAME) ;Resolve Abstract into the Default Bitmap 
"RTN","MAGGTU3",146,0)
 ; Return the default bitmap, If the image file extension resolves into a default bitmap
"RTN","MAGGTU3",147,0)
 ; MAGIEN        : Image internal entry number
"RTN","MAGGTU3",148,0)
 ; FILENAME      : ""  or Relative Path and Default Bitmap. ie ('.\BMP\magavi.bmp')
"RTN","MAGGTU3",149,0)
 N FTIEN,EXT ; 
"RTN","MAGGTU3",150,0)
 S FILENAME=""
"RTN","MAGGTU3",151,0)
 I '$D(^MAG(2005.021)) Q  ; IMAGE FILE TYPES doesn't exist on this system.
"RTN","MAGGTU3",152,0)
 S EXT=$P($P(^MAG(2005,MAGIEN,0),"^",2),".",2) ; image file extension   JPG, TGA, etc.
"RTN","MAGGTU3",153,0)
 Q:EXT=""  ;
"RTN","MAGGTU3",154,0)
 S FTIEN=$O(^MAG(2005.021,"B",EXT,""))
"RTN","MAGGTU3",155,0)
 Q:'FTIEN  ; No extension in IMAGE FILE TYPES file.
"RTN","MAGGTU3",156,0)
 ; stop dependency on "c:\program files"
"RTN","MAGGTU3",157,0)
 I '+$P(^MAG(2005.021,FTIEN,0),"^",5) S FILENAME=".\BMP\"_$P(^MAG(2005.021,FTIEN,0),"^",4)
"RTN","MAGGTU3",158,0)
 Q
"RTN","MAGGTU3",159,0)
GETINFO(MAGRY,IEN) ; RPC [MAG4 GET IMAGE INFO]
"RTN","MAGGTU3",160,0)
 ; Call (3.0p8) to get information on 1 image 
"RTN","MAGGTU3",161,0)
 ; and Display in the Image Information Window
"RTN","MAGGTU3",162,0)
 D GETINFO^MAGGTU31(.MAGRY,IEN)
"RTN","MAGGTU3",163,0)
 Q
"RTN","MAGGTU31")
0^35^B37368094
"RTN","MAGGTU31",1,0)
MAGGTU31 ;WOIFO/GEK - Silent calls for Imaging ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU31",2,0)
 ;;3.0;IMAGING;**46,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU31",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU31",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU31",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU31",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU31",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU31",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU31",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU31",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU31",11,0)
 ;; |                                                               |
"RTN","MAGGTU31",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU31",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU31",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU31",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU31",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU31",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU31",18,0)
 ;;
"RTN","MAGGTU31",19,0)
 Q
"RTN","MAGGTU31",20,0)
ATTSTAT(IEN) ; Return a sentence saying if the Image was attached
"RTN","MAGGTU31",21,0)
 ; to the TIU NOte before or after the Note was signed.
"RTN","MAGGTU31",22,0)
 ; was signed.
"RTN","MAGGTU31",23,0)
 N SIGNDT,NOTE,MARR,AMMEND,N2,MAGDT,NC,CLOSDT,X
"RTN","MAGGTU31",24,0)
 S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGGTU31",25,0)
 I $P(N2,"^",6)'=8925 Q ""
"RTN","MAGGTU31",26,0)
 S MAGDT=$S($P(N2,"^",11):$P(N2,"^",11),1:$P(N2,"^",1))
"RTN","MAGGTU31",27,0)
 S NOTE=$P(N2,"^",7)
"RTN","MAGGTU31",28,0)
 S NC=NOTE_","
"RTN","MAGGTU31",29,0)
 D GETS^DIQ(8925,NOTE,".01;.06;1501;1606","I","MARR")
"RTN","MAGGTU31",30,0)
 I $D(DIERR) Q "Error: Note-"_NOTE_" : "_$G(^TMP("DIERR",$J,1,"TEXT",1))
"RTN","MAGGTU31",31,0)
 I (MARR(8925,NC,".01","I")=81)!(MARR(8925,NC,".06","I")>0) Q "Image is attached to an Addendum"
"RTN","MAGGTU31",32,0)
 S SIGNDT=MARR(8925,NC,"1501","I")
"RTN","MAGGTU31",33,0)
 S CLOSDT=MARR(8925,NC,"1606","I")
"RTN","MAGGTU31",34,0)
 I CLOSDT]"" D  Q X
"RTN","MAGGTU31",35,0)
 . I $P(CLOSDT,".",2)="" S MAGDT=$P(MAGDT,".",1) I MAGDT=CLOSDT S X="Image was attached Same Day as Note was Electronically Filed." Q
"RTN","MAGGTU31",36,0)
 . I MAGDT>CLOSDT S X="Image was attached After Note was Electronically Filed." Q
"RTN","MAGGTU31",37,0)
 . S X="Image was attached Before Note was Electronically Filed." Q
"RTN","MAGGTU31",38,0)
 . Q
"RTN","MAGGTU31",39,0)
 I SIGNDT="" Q "Image is attached to an UnSigned Note."
"RTN","MAGGTU31",40,0)
 I $P(SIGNDT,".",2)="" S MAGDT=$P(MAGDT,".",1) I MAGDT=SIGNDT Q "Image was attached Same Day as Note was Signed."
"RTN","MAGGTU31",41,0)
 I MAGDT>SIGNDT Q "Image was attached After the Note was Signed."
"RTN","MAGGTU31",42,0)
 Q "Image was attached Before the Note was Signed."
"RTN","MAGGTU31",43,0)
USERKEYS(MAGK) ; RPC [MAGGUSERKEYS]  (called from MAGGTU3)
"RTN","MAGGTU31",44,0)
 N Y
"RTN","MAGGTU31",45,0)
 N MAGKS ; list of keys to send to XUS KEY CHECK
"RTN","MAGGTU31",46,0)
 N MAGKG ; list returned from XUS KEY CHECK
"RTN","MAGGTU31",47,0)
 N I,J,MAGMED,MAGKEY,MAGPLC
"RTN","MAGGTU31",48,0)
 K MAGK
"RTN","MAGGTU31",49,0)
 S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU31",50,0)
 S MAGKEY=+$P($G(^MAG(2006.1,MAGPLC,"KEYS")),U)
"RTN","MAGGTU31",51,0)
 I 'MAGKEY S MAGK(0)="CAPTURE KEYS OFF"
"RTN","MAGGTU31",52,0)
 E  S MAGK(0)="CAPTURE KEYS ON"
"RTN","MAGGTU31",53,0)
 N X S X="MAG",I=0
"RTN","MAGGTU31",54,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,3)'="MAG"  D
"RTN","MAGGTU31",55,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGGTU31",56,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGGTU31",57,0)
 S I=0,J=0,MAGMED=0
"RTN","MAGGTU31",58,0)
 F  S I=$O(MAGKG(I)) Q:I=""  D
"RTN","MAGGTU31",59,0)
 . Q:MAGKG(I)=0
"RTN","MAGGTU31",60,0)
 . S J=J+1,MAGK(J)=MAGKS(I)
"RTN","MAGGTU31",61,0)
 . I MAGKS(I)["MAGCAP MED" S MAGMED=1
"RTN","MAGGTU31",62,0)
 I MAGMED S J=J+1,MAGK(J)="MAGCAP MED"
"RTN","MAGGTU31",63,0)
 Q
"RTN","MAGGTU31",64,0)
GETINFO(MAGRY,IEN) ; RPC [MAG4 GET IMAGE INFO]Called from MAGGTU3
"RTN","MAGGTU31",65,0)
 ; Call (3.0p8) to get information on 1 image 
"RTN","MAGGTU31",66,0)
 ; and Display in the Image Information Window
"RTN","MAGGTU31",67,0)
 N Y,J,JI,I,CT,IENC,FLAGS,SNGRP,Z,M40,T,QACHK,OBJTYP,VAL,LBL
"RTN","MAGGTU31",68,0)
 S I=0,CT=0
"RTN","MAGGTU31",69,0)
 S MAGRY(CT)="Image ID#:      "_IEN
"RTN","MAGGTU31",70,0)
 I $D(^MAG(2005.1,IEN)) D  Q
"RTN","MAGGTU31",71,0)
 . S CT=CT+1,MAGRY(CT)="    STATUS:  "_"HAS BEEN DELETED. !!"
"RTN","MAGGTU31",72,0)
 . S CT=CT+1,MAGRY(CT)="Deleted By: "_$$GET1^DIQ(2005.1,IEN,30,"E")
"RTN","MAGGTU31",73,0)
 . S CT=CT+1,MAGRY(CT)="    Reason: "_$$GET1^DIQ(2005.1,IEN,30.2,"E")
"RTN","MAGGTU31",74,0)
 . S CT=CT+1,MAGRY(CT)="      Date: "_$$GET1^DIQ(2005.1,IEN,30.1,"E")
"RTN","MAGGTU31",75,0)
 . Q
"RTN","MAGGTU31",76,0)
 S M40=$G(^MAG(2005,IEN,40)),T=$P(M40,"^",3)
"RTN","MAGGTU31",77,0)
 S Z=$P($G(^MAG(2005,IEN,0)),"^",10) I Z D
"RTN","MAGGTU31",78,0)
 . S CT=CT+1,MAGRY(CT)=" is in Group#: "_Z_"  ("_+$P(^MAG(2005,Z,1,0),"^",4)_" images)"
"RTN","MAGGTU31",79,0)
 . D CHK^MAGGSQI(.QACHK,Z) Q:QACHK(0) 
"RTN","MAGGTU31",80,0)
 . S CT=CT+1,MAGRY(CT)=" QA Warning - Group#: "_Z_" "_$P(QACHK(0),"^",2)
"RTN","MAGGTU31",81,0)
 . Q
"RTN","MAGGTU31",82,0)
 S OBJTYP=$P(^MAG(2005,IEN,0),"^",6)
"RTN","MAGGTU31",83,0)
 S SNGRP="FLDS"
"RTN","MAGGTU31",84,0)
 I (+$O(^MAG(2005,IEN,1,0)))!(OBJTYP=11)!(OBJTYP=16) D
"RTN","MAGGTU31",85,0)
 . S CT=CT+1,MAGRY(CT)=$P($G(^MAG(2005,IEN,40)),"^",1)_" Group of "_+$P($G(^MAG(2005,IEN,1,0)),U,4)
"RTN","MAGGTU31",86,0)
 . S SNGRP="FLDG"
"RTN","MAGGTU31",87,0)
 . Q
"RTN","MAGGTU31",88,0)
 K QACHK
"RTN","MAGGTU31",89,0)
 D CHK^MAGGSQI(.QACHK,IEN) I 'QACHK(0) D
"RTN","MAGGTU31",90,0)
 . S CT=CT+1,MAGRY(CT)=" QA Warning - Image#: "_IEN_" "_$P(QACHK(0),"^",2)
"RTN","MAGGTU31",91,0)
 N MAGOUT,MAGERR,MAGVAL,PKG
"RTN","MAGGTU31",92,0)
 S IENC=IEN_","
"RTN","MAGGTU31",93,0)
 S FLAGS="EN"
"RTN","MAGGTU31",94,0)
 S I=-1
"RTN","MAGGTU31",95,0)
 S PKG=""
"RTN","MAGGTU31",96,0)
 F  S I=I+1,Z=$T(@SNGRP+I) Q:$P(Z,";",3)="end"  D
"RTN","MAGGTU31",97,0)
 . S J=$P(Z,";",4),JI=J_";"
"RTN","MAGGTU31",98,0)
 . K MAGOUT
"RTN","MAGGTU31",99,0)
 . S CT=CT+1,MAGRY(CT)=$P(Z,";",3)
"RTN","MAGGTU31",100,0)
 . I J=41 D  Q  ; Need to compute the Class.  Class field in Image File is wrong.
"RTN","MAGGTU31",101,0)
 . . S MAGVAL=$S('T:"",'$D(^MAG(2005.83,T,0)):"",1:$P(^MAG(2005.82,$P(^MAG(2005.83,T,0),"^",2),0),"^",1))
"RTN","MAGGTU31",102,0)
 . . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU31",103,0)
 . . Q
"RTN","MAGGTU31",104,0)
 . D GETS^DIQ(2005,IEN,JI,FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTU31",105,0)
 . ; Get Extension from FileRef
"RTN","MAGGTU31",106,0)
 . I J=1 S MAGVAL=$P($G(MAGOUT(2005,IENC,J,"E")),".",2)
"RTN","MAGGTU31",107,0)
 . E  S MAGVAL=$G(MAGOUT(2005,IENC,J,"E"))
"RTN","MAGGTU31",108,0)
 . S MAGVAL=$TR(MAGVAL,"&","+")
"RTN","MAGGTU31",109,0)
 . I J=40 S PKG=MAGVAL
"RTN","MAGGTU31",110,0)
 . I ((J>=50)&(J<=54)) D  Q
"RTN","MAGGTU31",111,0)
 . . I PKG'="LAB" K MAGRY(CT) Q
"RTN","MAGGTU31",112,0)
 . . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU31",113,0)
 . . Q
"RTN","MAGGTU31",114,0)
 . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU31",115,0)
 ; Compare Parent Association Date with Date/Time Note Signed.
"RTN","MAGGTU31",116,0)
 I $P(^MAG(2005,IEN,0),"^",10) S IEN=$P(^MAG(2005,IEN,0),"^",10)
"RTN","MAGGTU31",117,0)
 I $P(^MAG(2005,IEN,2),"^",6)=8925 S CT=CT+1,MAGRY(CT)=$$ATTSTAT^MAGGTU31(IEN)
"RTN","MAGGTU31",118,0)
 ;
"RTN","MAGGTU31",119,0)
 I (OBJTYP=11),($P($G(^MAG(2005,IEN,100)),"^",6)="") D
"RTN","MAGGTU31",120,0)
 . S X=$O(^MAG(2005,IEN,1,0))
"RTN","MAGGTU31",121,0)
 . S IEN=+$G(^MAG(2005,IEN,1,X,0))
"RTN","MAGGTU31",122,0)
 . Q
"RTN","MAGGTU31",123,0)
 I $P($G(^MAG(2005,IEN,100)),"^",6)]"" D
"RTN","MAGGTU31",124,0)
 . I OBJTYP=11 D  ; If a Group, get Object Type of First Child
"RTN","MAGGTU31",125,0)
 . . S Z=$O(^MAG(2005,IEN,1,0))
"RTN","MAGGTU31",126,0)
 . . I 'Z Q
"RTN","MAGGTU31",127,0)
 . . S Z=+$G(^MAG(2005,IEN,1,Z,0))
"RTN","MAGGTU31",128,0)
 . . S OBJTYP=+$P($G(^MAG(2005,Z,0)),"^",6) ; Object of First Child
"RTN","MAGGTU31",129,0)
 . . Q
"RTN","MAGGTU31",130,0)
 . S OBJTYP=","_OBJTYP_","
"RTN","MAGGTU31",131,0)
 . S LBL="",VAL=""
"RTN","MAGGTU31",132,0)
 . I ",3,9,10,12,100,"[OBJTYP S LBL="Image Creation Date: "           ; "Acquisition Date";
"RTN","MAGGTU31",133,0)
 . I ",15,101,102,103,104,105,"[OBJTYP S LBL="Document Creation Date: "
"RTN","MAGGTU31",134,0)
 . I LBL="" S LBL="Image Creation Date: "
"RTN","MAGGTU31",135,0)
 . S VAL=$$GET1^DIQ(2005,IEN,110,"E") S:(VAL="") VAL="N/A"
"RTN","MAGGTU31",136,0)
 . S CT=CT+1,MAGRY(CT)=LBL_VAL
"RTN","MAGGTU31",137,0)
 . Q
"RTN","MAGGTU31",138,0)
 Q
"RTN","MAGGTU31",139,0)
 ;
"RTN","MAGGTU31",140,0)
FLDS ;;Format:       ;3;;
"RTN","MAGGTU31",141,0)
 ;;Extension:    ;1;;
"RTN","MAGGTU31",142,0)
FLDG ;;Patient:      ;5;;
"RTN","MAGGTU31",143,0)
 ;;Desc:         ;10;;
"RTN","MAGGTU31",144,0)
 ;;Procedure:    ;6;;
"RTN","MAGGTU31",145,0)
 ;;     Date:    ;15;;
"RTN","MAGGTU31",146,0)
 ;;Class:        ;41;;
"RTN","MAGGTU31",147,0)
 ;;Package:      ;40;;
"RTN","MAGGTU31",148,0)
 ;;Type:         ;42;;
"RTN","MAGGTU31",149,0)
 ;;Proc/Event:   ;43;;
"RTN","MAGGTU31",150,0)
 ;;Spec/SubSpec: ;44;;
"RTN","MAGGTU31",151,0)
 ;;Origin:       ;45;;
"RTN","MAGGTU31",152,0)
 ;;Accession #   ;50;;
"RTN","MAGGTU31",153,0)
 ;;Specimen Desc ;51;;
"RTN","MAGGTU31",154,0)
 ;;Specimen#     ;52;;
"RTN","MAGGTU31",155,0)
 ;;Stain         ;53;;
"RTN","MAGGTU31",156,0)
 ;;Objective     ;54;;
"RTN","MAGGTU31",157,0)
 ;;Captured on:  ;7;;
"RTN","MAGGTU31",158,0)
 ;;         by:  ;8;;
"RTN","MAGGTU31",159,0)
 ;;end;;
"RTN","MAGGTU4")
0^12^B39449032
"RTN","MAGGTU4",1,0)
MAGGTU4 ;WOIFO/GEK - Imaging Client- Version checking routine; [ 06/20/2001 08:57 ]
"RTN","MAGGTU4",2,0)
 ;;3.0;IMAGING;**8,48,63,45,46,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",17,0)
 ;;
"RTN","MAGGTU4",18,0)
 Q
"RTN","MAGGTU4",19,0)
GETVER(SVRVER,SVRTVER,A) ;
"RTN","MAGGTU4",20,0)
 ; We Can't compute the Server's current version
"RTN","MAGGTU4",21,0)
 ; KIDS installs aren't all related to the Delphi Client.
"RTN","MAGGTU4",22,0)
 ; The Server Version SVRVER needs hardcoded to match the Delphi Client.
"RTN","MAGGTU4",23,0)
 ; and This Routine must be distributed whenever a new Client is
"RTN","MAGGTU4",24,0)
 S SVRVER="3.0.59"
"RTN","MAGGTU4",25,0)
 S SVRTVER="31" ; This is the T version that the server expects
"RTN","MAGGTU4",26,0)
 ; released Client will have the T version that the server expects
"RTN","MAGGTU4",27,0)
 S A("3.0.24")=5         ;Sept 2003
"RTN","MAGGTU4",28,0)
 S A("3.0.33")=11        ;June 2004
"RTN","MAGGTU4",29,0)
 S A("3.0.8")=49         ;Sept 2004
"RTN","MAGGTU4",30,0)
 S A("3.0.42")=1         ;n/a
"RTN","MAGGTU4",31,0)
 S A("3.0.48")=6         ;Mar  2005
"RTN","MAGGTU4",32,0)
 S A("3.0.63")=4         ;June 2005
"RTN","MAGGTU4",33,0)
 S A("3.0.45")=8         ;Sept 2005
"RTN","MAGGTU4",34,0)
 S A("3.0.46")=28        ;Mar  2007
"RTN","MAGGTU4",35,0)
 S A("3.0.72")=17        ;Jan  2008
"RTN","MAGGTU4",36,0)
 S A("3.0.83")=1         ;Mar  2008
"RTN","MAGGTU4",37,0)
 S A("3.0.95")=1         ;Jan  2008
"RTN","MAGGTU4",38,0)
 S A("3.0.96")=1         ;Mar  2008 
"RTN","MAGGTU4",39,0)
 Q
"RTN","MAGGTU4",40,0)
 ;
"RTN","MAGGTU4",41,0)
CHKVER(MAGRY,CLVER) ;RPC [MAG4 VERSION CHECK]
"RTN","MAGGTU4",42,0)
 ; CLVER is the version of the Delphi Client.
"RTN","MAGGTU4",43,0)
 ; CLVER format = Major.Minor.Patch.T-version
"RTN","MAGGTU4",44,0)
 ; example : for Version 3.0 Patch 8 T 21 -->  CLVER=3.0.8.21
"RTN","MAGGTU4",45,0)
 ; Ver 2.5P9 (2.5.24.1) is first Delphi Ver that makes this call.
"RTN","MAGGTU4",46,0)
 ; CLVER may have Parameters attached to it in '|' pieces.
"RTN","MAGGTU4",47,0)
 ;           "CLVER|RIV"      this is a remote image view client
"RTN","MAGGTU4",48,0)
 ;           "CLVER|CAPTURE"  this is a Capture Client
"RTN","MAGGTU4",49,0)
 ;           "CLVER|DISPLAY"  this is a Display Client
"RTN","MAGGTU4",50,0)
 ; 3 possible return codes in 1st '^' piece of MAGRY(0).
"RTN","MAGGTU4",51,0)
 ; 0^message :   The Client will display the message and continue.
"RTN","MAGGTU4",52,0)
 ; 1^message :   The Client will continue without displaying any message.
"RTN","MAGGTU4",53,0)
 ; 2^message :   The Client will display the message and then Abort. (Terminate)
"RTN","MAGGTU4",54,0)
 ;    The message displayed is the 2nd '^' piece of (0) node
"RTN","MAGGTU4",55,0)
 ;    and all text of any other nodes. i.e. MAGRY(1..n)
"RTN","MAGGTU4",56,0)
 ;
"RTN","MAGGTU4",57,0)
 S CLVER=$G(CLVER)
"RTN","MAGGTU4",58,0)
 ; Bug in 42.  the Version comes in as 30.5.42.x  (42 wasn't released) 
"RTN","MAGGTU4",59,0)
 I $P(CLVER,".",1)="30" S CLVER="3.0."_$P(CLVER,".",3,99)
"RTN","MAGGTU4",60,0)
 ;
"RTN","MAGGTU4",61,0)
 N PLC,SV,ST,SVSTAT,CV,CP,CT,OKVER,WARN,I,BETA
"RTN","MAGGTU4",62,0)
 ; PLC = Entry in 2006.1
"RTN","MAGGTU4",63,0)
 ; SV = Server Version -> (3.0.8) from (3.0.8.43) Hard coded to Sync with Delphi Clients
"RTN","MAGGTU4",64,0)
 ; ST = Server T Version -> 43 from full version (3.0.8.43)
"RTN","MAGGTU4",65,0)
 ; CV = Client Version sent from Client 3.0.8 same format as SV
"RTN","MAGGTU4",66,0)
 ; CT = Client T Version sent from Client i.e. 43 same format as ST
"RTN","MAGGTU4",67,0)
 ; OKVER = Array of Supported Versions, and Released T Version OKVER(3.0.48)=6
"RTN","MAGGTU4",68,0)
 ; WARN = 1|0 Boolean value determines if client needs EKG Warning. 
"RTN","MAGGTU4",69,0)
 ; 
"RTN","MAGGTU4",70,0)
 S PLC=$$PLACE^MAGBAPI($G(DUZ(2)))
"RTN","MAGGTU4",71,0)
 ;      Quit if we don't have a valid DUZ(2) or valid PLACE: ^MAG(2006.1,PLC)
"RTN","MAGGTU4",72,0)
 I 'PLC D BADPLC^MAGGTU41(.MAGRY) Q
"RTN","MAGGTU4",73,0)
 ;
"RTN","MAGGTU4",74,0)
 ;      Set up local variables.
"RTN","MAGGTU4",75,0)
 D GETVER(.SV,.ST,.OKVER)
"RTN","MAGGTU4",76,0)
 F I=2:1:$L(CLVER,"|") I $P(CLVER,"|",I)]"" S MAGJOB($P(CLVER,"|",I))=1
"RTN","MAGGTU4",77,0)
 S CLVER=$P(CLVER,"|",1)
"RTN","MAGGTU4",78,0)
 S CV=$P(CLVER,".",1,3),CP=$P(CLVER,".",3),CT=$P(CLVER,".",4)
"RTN","MAGGTU4",79,0)
 I CT="" S $P(CLVER,".",4)=0,CT=0
"RTN","MAGGTU4",80,0)
 ;      set WARN to indicate if Warning is needed or not.
"RTN","MAGGTU4",81,0)
 ;
"RTN","MAGGTU4",82,0)
 D NEEDWARN(.WARN)
"RTN","MAGGTU4",83,0)
 ;      Quit if site has VERSION CHECKING=0 (OFF) in Imaging Site Params File.  
"RTN","MAGGTU4",84,0)
 I '$$VERCHKON(PLC) D  Q
"RTN","MAGGTU4",85,0)
 . S MAGRY(0)="1^Version Checking is OFF. Allowing All Versions"
"RTN","MAGGTU4",86,0)
 . ;      But, need to Display the warning, even if Version Checking is OFF
"RTN","MAGGTU4",87,0)
 . I WARN S MAGRY(0)="0^      =========== WARNING ===============" D WARNING
"RTN","MAGGTU4",88,0)
 . Q
"RTN","MAGGTU4",89,0)
 ;      If Remote Connection , allow it.
"RTN","MAGGTU4",90,0)
 I $D(MAGJOB("RIV")) S MAGRY(0)="1^Allowing Remote Image Connection" Q
"RTN","MAGGTU4",91,0)
 ;      Is this Server Version Alpha/Beta or Released.
"RTN","MAGGTU4",92,0)
 D VERSTAT(.SVSTAT,SV)
"RTN","MAGGTU4",93,0)
 I 'SVSTAT S MAGRY(0)="2^"_$P(SVSTAT,"^",2) Q  ; There is not record of a KIDS for this Server.
"RTN","MAGGTU4",94,0)
 ; Set Alpha Beta Flag
"RTN","MAGGTU4",95,0)
 S BETA=(+SVSTAT=2)
"RTN","MAGGTU4",96,0)
 ;      If Client isn't one of the Supported Clients.
"RTN","MAGGTU4",97,0)
 I (CV'=SV),'$D(OKVER(CV)) D  Q
"RTN","MAGGTU4",98,0)
 . I BETA D NOTOKB^MAGGTU41(.MAGRY) Q
"RTN","MAGGTU4",99,0)
 . D NOTOK^MAGGTU41(.MAGRY) Q
"RTN","MAGGTU4",100,0)
 . Q 
"RTN","MAGGTU4",101,0)
 ;
"RTN","MAGGTU4",102,0)
 ;      Client is Supported. Only Warn if we are Not In ALPHA/BETA Testing.
"RTN","MAGGTU4",103,0)
 I (CV'=SV) D  Q
"RTN","MAGGTU4",104,0)
 . I CT<$G(OKVER(CV)) D  Q
"RTN","MAGGTU4",105,0)
 . . I BETA DO OKBADTB^MAGGTU41(.MAGRY) Q
"RTN","MAGGTU4",106,0)
 . . DO OKBADT^MAGGTU41(.MAGRY) Q
"RTN","MAGGTU4",107,0)
 . . Q
"RTN","MAGGTU4",108,0)
 . I BETA D OKB^MAGGTU41(.MAGRY)
"RTN","MAGGTU4",109,0)
 . E  D OK^MAGGTU41(.MAGRY)
"RTN","MAGGTU4",110,0)
 . I WARN D WARNING
"RTN","MAGGTU4",111,0)
 . Q
"RTN","MAGGTU4",112,0)
 ; 
"RTN","MAGGTU4",113,0)
 ; At this point, Versions are the Same: If T versions are not, warn the Client.
"RTN","MAGGTU4",114,0)
 I CT,(CT'=ST) D  Q
"RTN","MAGGTU4",115,0)
 . I BETA D TNOTOKB^MAGGTU41(.MAGRY) Q
"RTN","MAGGTU4",116,0)
 . D TNOTOK^MAGGTU41(.MAGRY) Q
"RTN","MAGGTU4",117,0)
 . Q
"RTN","MAGGTU4",118,0)
 ; Client and Server Versions are the same, to the T. (Ha, get it)
"RTN","MAGGTU4",119,0)
 S MAGRY(0)="1^Version Check OK. Server: "_SV_" Client: "_CV Q
"RTN","MAGGTU4",120,0)
 Q
"RTN","MAGGTU4",121,0)
 ;
"RTN","MAGGTU4",122,0)
VERCHKON(PLC) ; Is Version checking on for the site (Place)
"RTN","MAGGTU4",123,0)
 Q +$P(^MAG(2006.1,PLC,"KEYS"),"^",5)
"RTN","MAGGTU4",124,0)
 ;
"RTN","MAGGTU4",125,0)
NEEDWARN(WARN) ; This call determines if Client needs the warning.
"RTN","MAGGTU4",126,0)
 I $P($G(^MAG(2006.1,PLC,"USERPREF")),U,2)="" S WARN=0 Q  ; Not a MUSE Site.
"RTN","MAGGTU4",127,0)
 I $D(MAGJOB("CAPTURE")) S WARN=0 Q  ;Not needed for Capture Clients
"RTN","MAGGTU4",128,0)
 I CV="3.0.59"    S WARN=0 Q  ; Client 59 has 63.
"RTN","MAGGTU4",129,0)
 I CV="3.0.45"    S WARN=0 Q  ; Client 45 has 63.
"RTN","MAGGTU4",130,0)
 I CV="3.0.41"    S WARN=0 Q  ; It is fixed in 41
"RTN","MAGGTU4",131,0)
 I CV="3.0.63"    S WARN=0 Q  ; It is fixed in 63
"RTN","MAGGTU4",132,0)
 I $P(CV,".",1)=2 S WARN=0 Q  ;Older Clients don't have the EKG Problem.
"RTN","MAGGTU4",133,0)
 I '$D(OKVER(CV)) S WARN=0 Q  ; Patch 3.0.7, 3.0.2 don't have EKG problem.
"RTN","MAGGTU4",134,0)
 S WARN=1 ; This means to Show the EKG Warning.
"RTN","MAGGTU4",135,0)
 Q
"RTN","MAGGTU4",136,0)
 ;
"RTN","MAGGTU4",137,0)
WARNING ; This is hard coded for the EKG Warning.
"RTN","MAGGTU4",138,0)
 ; Put Warning at the End of any Return Message.
"RTN","MAGGTU4",139,0)
 S MAGRY(1000)=" "
"RTN","MAGGTU4",140,0)
 S MAGRY(1010)="!*************************************************!"
"RTN","MAGGTU4",141,0)
 S MAGRY(1015)=" "
"RTN","MAGGTU4",142,0)
 S MAGRY(1020)="  PATIENT SAFETY NOTIFICATION"
"RTN","MAGGTU4",143,0)
 S MAGRY(1025)=" "
"RTN","MAGGTU4",144,0)
 S MAGRY(1030)="      Under certain circumstances, the EKG window will not"
"RTN","MAGGTU4",145,0)
 S MAGRY(1040)="refresh properly when you select a new patient in CPRS; "
"RTN","MAGGTU4",146,0)
 S MAGRY(1050)="instead of showing the new patient, the EKG window will "
"RTN","MAGGTU4",147,0)
 S MAGRY(1060)="continue to show the previous patient.   "
"RTN","MAGGTU4",148,0)
 S MAGRY(1065)="   "
"RTN","MAGGTU4",149,0)
 S MAGRY(1070)="To prevent this problem:"
"RTN","MAGGTU4",150,0)
 S MAGRY(1075)=" "
"RTN","MAGGTU4",151,0)
 S MAGRY(1080)="     Verify that the 'Show MUSE EKGs' option under"
"RTN","MAGGTU4",152,0)
 S MAGRY(1085)="     Options > View Preferences is checked;"
"RTN","MAGGTU4",153,0)
 S MAGRY(1090)="     OR"
"RTN","MAGGTU4",154,0)
 S MAGRY(1100)="     Do not minimize the Imaging Display window while viewing EKGs."
"RTN","MAGGTU4",155,0)
 S MAGRY(1110)="   "
"RTN","MAGGTU4",156,0)
 S MAGRY(1115)="This problem will be corrected shortly by Imaging Patch 63."
"RTN","MAGGTU4",157,0)
 S MAGRY(1120)="!*************************************************!"
"RTN","MAGGTU4",158,0)
 Q
"RTN","MAGGTU4",159,0)
VERSTAT(MAGRY,MAGVER) ;RPC - [MAG4 VERSION STATUS]    
"RTN","MAGGTU4",160,0)
 ; Returns the status of an Imaging Version
"RTN","MAGGTU4",161,0)
 ; Input : 
"RTN","MAGGTU4",162,0)
 ;       MAGVER - Version number
"RTN","MAGGTU4",163,0)
 ;          in the format  MAG*3.0*59
"RTN","MAGGTU4",164,0)
 ;          or the format  3.0.59
"RTN","MAGGTU4",165,0)
 ; Return:
"RTN","MAGGTU4",166,0)
 ;       MAGRY =  0^There is No KIDs Install record
"RTN","MAGGTU4",167,0)
 ;                1^Unknown Release Status
"RTN","MAGGTU4",168,0)
 ;                2^Alpha/Beta Version
"RTN","MAGGTU4",169,0)
 ;                3^Released Version
"RTN","MAGGTU4",170,0)
 ; 
"RTN","MAGGTU4",171,0)
 N VERI,TVER,MAGERR
"RTN","MAGGTU4",172,0)
 I +MAGVER S MAGVER="MAG*"_$P(MAGVER,".",1,2)_"*"_$P(MAGVER,".",3)
"RTN","MAGGTU4",173,0)
 S VERI=$$FIND1^DIC(9.6,"","M",MAGVER,"","","MAGERR")
"RTN","MAGGTU4",174,0)
 I 'VERI S MAGRY="0^There is No KIDs Install record." Q
"RTN","MAGGTU4",175,0)
 S TVER=$$GET1^DIQ(9.6,VERI_",","ALPHA/BETA TESTING")
"RTN","MAGGTU4",176,0)
 I TVER="YES" S MAGRY="2^Alpha/Beta Version." Q
"RTN","MAGGTU4",177,0)
 I TVER="NO" S MAGRY="3^Released Version." Q
"RTN","MAGGTU4",178,0)
 S MAGRY="1^Unknown Release Status."
"RTN","MAGGTU4",179,0)
 Q
"RTN","MAGGTU4",180,0)
ABSJB(MAGRY,MAGIN) ;RPC [MAG ABSJB] SET ABSTRACT AND/OR JUKEBOX QUEUES
"RTN","MAGGTU4",181,0)
 D ABSJB^MAGGTU71(.MAGRY,.MAGIN)
"RTN","MAGGTU4",182,0)
 Q
"RTN","MAGGTU41")
0^25^B29145844
"RTN","MAGGTU41",1,0)
MAGGTU41 ;WOIFO/GEK - Version Control utilities  ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU41",2,0)
 ;;3.0;IMAGING;**46,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU41",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU41",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU41",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU41",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU41",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU41",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU41",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU41",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU41",11,0)
 ;; |                                                               |
"RTN","MAGGTU41",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU41",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU41",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU41",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU41",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU41",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU41",18,0)
 ;;
"RTN","MAGGTU41",19,0)
 Q
"RTN","MAGGTU41",20,0)
NOTOKB(X) ; Client Not Supported. Server is Beta
"RTN","MAGGTU41",21,0)
 ; Client will not be supported when this version is Released.  Warn Client.
"RTN","MAGGTU41",22,0)
 S X(0)="0^     This site is a test site for Version: "_SV_"."
"RTN","MAGGTU41",23,0)
 S X(5)="     Client is running               Version: "_CV
"RTN","MAGGTU41",24,0)
 S X(7)="    "
"RTN","MAGGTU41",25,0)
 S X(10)="       When Version : "_SV_" is Released,  "
"RTN","MAGGTU41",26,0)
 S X(15)=" Client Version: "_CV_" will no longer be supported."
"RTN","MAGGTU41",27,0)
 S X(17)="  "
"RTN","MAGGTU41",28,0)
 S X(18)=" This Client Application will not work correctly."
"RTN","MAGGTU41",29,0)
 S X(19)=" "
"RTN","MAGGTU41",30,0)
 S X(20)=" Contact the Imaging System Manager to update this workstation."
"RTN","MAGGTU41",31,0)
 S X(30)="  "
"RTN","MAGGTU41",32,0)
 S X(40)="                          APPLICATION Will Continue"
"RTN","MAGGTU41",33,0)
 Q
"RTN","MAGGTU41",34,0)
NOTOK(X) ; Client Not Supported.
"RTN","MAGGTU41",35,0)
 S X(0)="2^   Server is running Imaging V. "_SV_"      "_$P(SVSTAT,"^",2)
"RTN","MAGGTU41",36,0)
 S X(1)="   "
"RTN","MAGGTU41",37,0)
 S X(5)=" Client is running Imaging V. "_CV
"RTN","MAGGTU41",38,0)
 S X(7)="  "
"RTN","MAGGTU41",39,0)
 S X(10)=" Version "_CV_" is no longer supported."
"RTN","MAGGTU41",40,0)
 S X(15)="  "
"RTN","MAGGTU41",41,0)
 S X(20)=" Contact the Imaging System Manager to update this workstation."
"RTN","MAGGTU41",42,0)
 S X(30)="   "
"RTN","MAGGTU41",43,0)
 S X(40)="                       APPLICATION WILL ABORT !"
"RTN","MAGGTU41",44,0)
 ;  Clients prior to 8, have a 'Cancel' button on Message Dialog (oversight)
"RTN","MAGGTU41",45,0)
 I $P(CV,".",1)=2 S X(50)="(clicking 'Cancel' will not stop the Abort.)"
"RTN","MAGGTU41",46,0)
 Q
"RTN","MAGGTU41",47,0)
OKBADTB(X) ; Client not Equal, Is supported. Previous Supported Version. Beta
"RTN","MAGGTU41",48,0)
 ;  But it's T isn't the T of it's Released Patch
"RTN","MAGGTU41",49,0)
 S X(0)="0^   Server is running Imaging V. "_SV_"      "_$P(SVSTAT,"^",2)
"RTN","MAGGTU41",50,0)
 S X(3)="   "
"RTN","MAGGTU41",51,0)
 S X(5)="  Client is running Imaging V. "_CLVER
"RTN","MAGGTU41",52,0)
 S X(10)="  The Released Version of Patch "_CP_" is V. "_CV_"."_$G(OKVER(CV))
"RTN","MAGGTU41",53,0)
 S X(12)="  "
"RTN","MAGGTU41",54,0)
 S X(18)="  This Client Application will not work correctly.  You should"
"RTN","MAGGTU41",55,0)
 S X(20)="  update this workstation with the Released Version of Patch "_CP
"RTN","MAGGTU41",56,0)
 S X(21)=" "
"RTN","MAGGTU41",57,0)
 S X(22)="  Contact the Imaging System Manager to update this workstation."
"RTN","MAGGTU41",58,0)
 S X(27)="     "
"RTN","MAGGTU41",59,0)
 S X(30)="                          APPLICATION will Continue  "
"RTN","MAGGTU41",60,0)
 Q
"RTN","MAGGTU41",61,0)
OKBADT(X) ; Client not Equal, but it is supported.  Previous Supported Version
"RTN","MAGGTU41",62,0)
 ;  But it's T isn't the T of it's Released Patch
"RTN","MAGGTU41",63,0)
 S X(0)="2^   Server is running Imaging V. "_SV_"      "_$P(SVSTAT,"^",2)
"RTN","MAGGTU41",64,0)
 S X(3)="   "
"RTN","MAGGTU41",65,0)
 S X(5)="   Client is running Imaging V. "_CLVER
"RTN","MAGGTU41",66,0)
 S X(10)="  The Released Version of Patch "_CP_" is V. "_CV_"."_$G(OKVER(CV))
"RTN","MAGGTU41",67,0)
 S X(15)=" "
"RTN","MAGGTU41",68,0)
 S X(18)="  Version "_CLVER_" is not supported."
"RTN","MAGGTU41",69,0)
 S X(19)="  "
"RTN","MAGGTU41",70,0)
 S X(20)="  You must update this workstation."
"RTN","MAGGTU41",71,0)
 S X(22)="  "
"RTN","MAGGTU41",72,0)
 S X(25)="  Contact the Imaging System Manager to update this workstation."
"RTN","MAGGTU41",73,0)
 S X(27)="     "
"RTN","MAGGTU41",74,0)
 S X(40)="                       APPLICATION WILL ABORT !"
"RTN","MAGGTU41",75,0)
 Q
"RTN","MAGGTU41",76,0)
OKB(X) ; Client is Not Equal to server.  Server Version / Beta
"RTN","MAGGTU41",77,0)
 ; Alpha/Beta Version so allow to continue. no message  
"RTN","MAGGTU41",78,0)
 S X(0)="1^   Alpha/Beta testing in progress for: "_SV
"RTN","MAGGTU41",79,0)
 Q
"RTN","MAGGTU41",80,0)
OK(X) ; Client is Not Equal to the server.   Warn
"RTN","MAGGTU41",81,0)
 S X(0)="0^   Server is running Imaging V. "_SV_"      "_$P(SVSTAT,"^",2)
"RTN","MAGGTU41",82,0)
 S X(5)="   Client is running   Imaging V. "_CV
"RTN","MAGGTU41",83,0)
 S X(7)="    "
"RTN","MAGGTU41",84,0)
 S X(10)="  The Client application should be updated "
"RTN","MAGGTU41",85,0)
 S X(15)=" "
"RTN","MAGGTU41",86,0)
 S X(20)="  Contact the Imaging System Manager to update this workstation."
"RTN","MAGGTU41",87,0)
 S X(30)="   "
"RTN","MAGGTU41",88,0)
 S X(40)="                       APPLICATION Will Continue"
"RTN","MAGGTU41",89,0)
 ;  Clients prior to 8, have a 'Cancel' button on Message Dialog (oversight)
"RTN","MAGGTU41",90,0)
 I $P(CV,".",1)=2 S X(50)="(clicking 'Cancel' will not stop the Client.)"
"RTN","MAGGTU41",91,0)
 Q
"RTN","MAGGTU41",92,0)
 ;
"RTN","MAGGTU41",93,0)
 ; Versions are the Same: If T versions are not, warn the Client.
"RTN","MAGGTU41",94,0)
 ; Released Client (of any version) will have the T version that the server expects, and 
"RTN","MAGGTU41",95,0)
 ; no warning will be displayed.
"RTN","MAGGTU41",96,0)
TNOTOKB(X) ; Client T is Not Equal to Server T, Beta Site.
"RTN","MAGGTU41",97,0)
 ;I CT,(CT'=ST) D  Q
"RTN","MAGGTU41",98,0)
 S X(0)="0^   Server is running Imaging V. "_SV_"."_ST_"      "_$P(SVSTAT,"^",2)
"RTN","MAGGTU41",99,0)
 S X(5)="   Client is running   Imaging V. "_CLVER
"RTN","MAGGTU41",100,0)
 S X(10)="     "
"RTN","MAGGTU41",101,0)
 S X(20)="  Test Versions of Patch "_SV_" other than T"_ST_" may not work correctly."
"RTN","MAGGTU41",102,0)
 S X(25)="     "
"RTN","MAGGTU41",103,0)
 S X(30)="                       APPLICATION will Continue  "
"RTN","MAGGTU41",104,0)
 Q
"RTN","MAGGTU41",105,0)
TNOTOK(X) ; Client T is Not Equal to Server T.
"RTN","MAGGTU41",106,0)
 ;I CT,(CT'=ST) D  Q
"RTN","MAGGTU41",107,0)
 S X(0)="0^   Server is running Imaging V. "_SV_"."_ST_"      "_$P(SVSTAT,"^",2)
"RTN","MAGGTU41",108,0)
 S X(5)="   Client is running Imaging V. "_CLVER
"RTN","MAGGTU41",109,0)
 S X(10)="     "
"RTN","MAGGTU41",110,0)
 S X(12)="  For Patch "_CP_" the released T version is:  "_ST
"RTN","MAGGTU41",111,0)
 S X(20)="  You must update this workstation with the Released Version."
"RTN","MAGGTU41",112,0)
 S X(22)="  "
"RTN","MAGGTU41",113,0)
 S X(25)="  Contact the Imaging System Manager to update this workstation."
"RTN","MAGGTU41",114,0)
 S X(27)="     "
"RTN","MAGGTU41",115,0)
 S X(30)="                       APPLICATION will Continue  "
"RTN","MAGGTU41",116,0)
 Q
"RTN","MAGGTU41",117,0)
BADPLC(X) ; The call to $$PLACE^MAGBAPI($G(DUZ(2))) Failed, return a message.
"RTN","MAGGTU41",118,0)
 ;
"RTN","MAGGTU41",119,0)
 I '$G(DUZ(2)) S X(0)="2^   Error: Undefined DUZ(2)"
"RTN","MAGGTU41",120,0)
 E  D
"RTN","MAGGTU41",121,0)
 . S X(0)="2^   Error: Division "_$P($G(^DIC(4,DUZ(2),0)),"^",1)_" ["_DUZ(2)_"]"
"RTN","MAGGTU41",122,0)
 . S X(2)="      is not an Imaging Site Parameter."
"RTN","MAGGTU41",123,0)
 . Q
"RTN","MAGGTU41",124,0)
 S X(5)="   Contact IRM.  Application will abort"
"RTN","MAGGTU41",125,0)
 Q
"RTN","MAGGTU6")
0^13^B48411406
"RTN","MAGGTU6",1,0)
MAGGTU6 ;WOIFO/GEK - Silent Utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU6",2,0)
 ;;3.0;IMAGING;**24,8,48,45,20,46,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU6",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU6",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU6",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU6",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU6",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU6",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU6",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU6",11,0)
 ;; |                                                               |
"RTN","MAGGTU6",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU6",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU6",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU6",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU6",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU6",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",18,0)
 ;;
"RTN","MAGGTU6",19,0)
 Q
"RTN","MAGGTU6",20,0)
 ;
"RTN","MAGGTU6",21,0)
LOGACT(MAGRY,ZY) ;RPC [MAGGACTION LOG]
"RTN","MAGGTU6",22,0)
 ; Call to LogAction from Delphi Window 
"RTN","MAGGTU6",23,0)
 ;
"RTN","MAGGTU6",24,0)
 ; ZY is input variable it is '^' delimited string
"RTN","MAGGTU6",25,0)
 ; 'A|B|C|D|E' ^^ MAGIEN ^ 'Copy/Download' ^ DFN ^ '1';
"RTN","MAGGTU6",26,0)
 ;  DUZ is inserted as 2nd piece below.
"RTN","MAGGTU6",27,0)
 ; I.E. zy  = "C^^103660^Copy To Clipboard^1033^1"
"RTN","MAGGTU6",28,0)
 N Y
"RTN","MAGGTU6",29,0)
 S MAGRY="0^Logging access..."
"RTN","MAGGTU6",30,0)
 ;
"RTN","MAGGTU6",31,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU6",32,0)
 ;                 C       DUZ      MAGIEN     ACTION       DFN       1
"RTN","MAGGTU6",33,0)
 D ENTRY^MAGLOG($P(ZY,U),+$G(DUZ),$P(ZY,U,3),$P(ZY,U,4),$P(ZY,U,5),$P(ZY,U,6))
"RTN","MAGGTU6",34,0)
 S MAGRY="1^Action was Logged."
"RTN","MAGGTU6",35,0)
 Q
"RTN","MAGGTU6",36,0)
LINKDT(MAGRY,MAGDA,DTTM) ; This is called when an Image is successfully 
"RTN","MAGGTU6",37,0)
 ; linked (Associated) with a Report/Procedure/Note etc.
"RTN","MAGGTU6",38,0)
 ;  MAGDA = Image IEN
"RTN","MAGGTU6",39,0)
 ;  DTTM = ""            No date sent, so use NOW 
"RTN","MAGGTU6",40,0)
 ;  DTTM = 1                     No Date Sent, but use Image capture Date.
"RTN","MAGGTU6",41,0)
 ;  DTTM = Valid FM Date/Time    , Use it.
"RTN","MAGGTU6",42,0)
 N MSG
"RTN","MAGGTU6",43,0)
 S DTTM=$G(DTTM)
"RTN","MAGGTU6",44,0)
 I 'DTTM S DTTM=$$NOW^XLFDT      ; Using NOW
"RTN","MAGGTU6",45,0)
 I '$D(^MAG(2005,MAGDA)) Q
"RTN","MAGGTU6",46,0)
 I DTTM=1 S DTTM=$P(^MAG(2005,MAGDA,2),"^",1) ; Using Date Image Captured.
"RTN","MAGGTU6",47,0)
 I '$$VALID^MAGGSIV1(2005,64,.DTTM,.MSG) S MAGRY="0^"_MSG Q
"RTN","MAGGTU6",48,0)
 S $P(^MAG(2005,MAGDA,2),"^",11)=DTTM
"RTN","MAGGTU6",49,0)
 S MAGRY="1^Okay"
"RTN","MAGGTU6",50,0)
 Q
"RTN","MAGGTU6",51,0)
TIMEOUT(MAGRY,APP) ;RPC [MAGG GET TIMEOUT]
"RTN","MAGGTU6",52,0)
 ; Call  Returns the timeout for the APP from IMAGING SITE PARAMETERS File
"RTN","MAGGTU6",53,0)
 ;  APP is either 'DISPLAY'  'CAPTURE' or   'VISTARAD'
"RTN","MAGGTU6",54,0)
 N I,MAGTIMES,MAGPLC
"RTN","MAGGTU6",55,0)
 S MAGRY=""
"RTN","MAGGTU6",56,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2)) I 'MAGPLC Q  ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",57,0)
 S MAGTIMES=$G(^MAG(2006.1,MAGPLC,"KEYS"))
"RTN","MAGGTU6",58,0)
 I APP="DISPLAY" S MAGRY=$P(MAGTIMES,U,2)
"RTN","MAGGTU6",59,0)
 I APP="CAPTURE" S MAGRY=$P(MAGTIMES,U,3)
"RTN","MAGGTU6",60,0)
 I APP="VISTARAD" S MAGRY=$P(MAGTIMES,U,4)
"RTN","MAGGTU6",61,0)
 I APP="TELEREADER" S MAGRY=$P(MAGTIMES,U,6)  ;  MJK - 2006.01.25 - TeleReader
"RTN","MAGGTU6",62,0)
 Q
"RTN","MAGGTU6",63,0)
EXIST(EKGPLACE) ;Does an ekg server exist in 2005.2
"RTN","MAGGTU6",64,0)
 I $$CONSOLID^MAGBAPI()=0 Q $O(^MAG(2005.2,"E","EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",65,0)
 Q $O(^MAG(2005.2,"F",EKGPLACE,"EKG",""))
"RTN","MAGGTU6",66,0)
 ;
"RTN","MAGGTU6",67,0)
ONLINE(MAGR) ;RPC [MAG EKG ONLINE] EKG network location status    
"RTN","MAGGTU6",68,0)
 ;returns the status of the first EKG network location type
"RTN","MAGGTU6",69,0)
 ;O if offline or a network location doesn't exist
"RTN","MAGGTU6",70,0)
 ;1 if online
"RTN","MAGGTU6",71,0)
 ;
"RTN","MAGGTU6",72,0)
 N EKG1,EKGPLACE
"RTN","MAGGTU6",73,0)
 S EKGPLACE=$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",74,0)
 I EKGPLACE=0 S EKGPLACE=$$PLACE^MAGBAPI(DUZ(2)) ;Convert to extrinsic /gek 8/2003
"RTN","MAGGTU6",75,0)
 I $$EXIST(EKGPLACE) D
"RTN","MAGGTU6",76,0)
 . I $$CONSOLID^MAGBAPI() S EKG1=$O(^MAG(2005.2,"F",EKGPLACE,"EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",77,0)
 . E  S EKG1=$O(^MAG(2005.2,"E","EKG",""))
"RTN","MAGGTU6",78,0)
 . S MAGR=$P(^MAG(2005.2,EKG1,0),U,6)
"RTN","MAGGTU6",79,0)
 E  S MAGR=0
"RTN","MAGGTU6",80,0)
 Q
"RTN","MAGGTU6",81,0)
SHARE(MAGRY,TYPE) ;RPC [MAG GET NETLOC]
"RTN","MAGGTU6",82,0)
 ; Get list of image shares
"RTN","MAGGTU6",83,0)
 ;TYPE = One of the STORAGE TYPE codes : MAG, EKG, WORM, URL or ALL
"RTN","MAGGTU6",84,0)
 N TMP,I,DATA0,DATA2,DATA3,DATA6,INFO,VALUE,STYP,PHYREF
"RTN","MAGGTU6",85,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTU6",86,0)
 S I=0
"RTN","MAGGTU6",87,0)
 I TYPE="" S TYPE="ALL"
"RTN","MAGGTU6",88,0)
 S MAGRY(0)="1^SUCCESS"
"RTN","MAGGTU6",89,0)
 F  S I=$O(^MAG(2005.2,I)) Q:'I  D
"RTN","MAGGTU6",90,0)
 . Q:$$LOCDRIVE(I)
"RTN","MAGGTU6",91,0)
 . S DATA0=$G(^MAG(2005.2,I,0))
"RTN","MAGGTU6",92,0)
 . S DATA2=$G(^MAG(2005.2,I,2))
"RTN","MAGGTU6",93,0)
 . S DATA3=$G(^MAG(2005.2,I,3))
"RTN","MAGGTU6",94,0)
 . S DATA6=$G(^MAG(2005.2,I,6))
"RTN","MAGGTU6",95,0)
 . ; 
"RTN","MAGGTU6",96,0)
 . S PHYREF=$P(DATA0,"^",2) ; PHYSICAL REFERENCE
"RTN","MAGGTU6",97,0)
 . S STYP=$P(DATA0,"^",7) ; STORAGE TYPE
"RTN","MAGGTU6",98,0)
 . ;
"RTN","MAGGTU6",99,0)
 . I TYPE'="ALL" Q:STYP'[TYPE
"RTN","MAGGTU6",100,0)
 . Q:$P(DATA0,"^",6)=0     ;SHARE IS OFFLINE (don't return offline shares)
"RTN","MAGGTU6",101,0)
 . I STYP'="URL" Q:(PHYREF[".")  ; pre 45, quit if '.' in phyref
"RTN","MAGGTU6",102,0)
 . I STYP'="URL" Q:($E(PHYREF,1,2)'="\\")  ; pre 45 quit if doesn't start with '\\'
"RTN","MAGGTU6",103,0)
 . ;
"RTN","MAGGTU6",104,0)
 . S INFO=$S($E(PHYREF,$L(PHYREF))="\":$E(PHYREF,1,$L(PHYREF)-1),1:PHYREF)
"RTN","MAGGTU6",105,0)
 . S $P(INFO,"^",2)=$P($G(DATA0),"^",7) ;Physical reference (path)
"RTN","MAGGTU6",106,0)
 . S $P(INFO,"^",3)=$P($G(DATA0),"^",6)  ;Operational Status 0=OFFLINE 1=ONLINE
"RTN","MAGGTU6",107,0)
 . S $P(INFO,"^",4)=$P($G(DATA2),"^",1) ;Username
"RTN","MAGGTU6",108,0)
 . S $P(INFO,"^",5)=$P($G(DATA2),"^",2) ;Password
"RTN","MAGGTU6",109,0)
 . S $P(INFO,"^",6)=$P($G(DATA6),"^",1)  ;MUSE Site #
"RTN","MAGGTU6",110,0)
 . I $P($G(DATA6),"^",2)'="" S $P(INFO,"^",7)=^MAG(2006.17,$P(DATA6,"^",2),0)  ;MUSE version #
"RTN","MAGGTU6",111,0)
 . S $P(INFO,"^",8)=$P($G(DATA3),"^",5)  ;Network location SITE
"RTN","MAGGTU6",112,0)
 . Q:$D(TMP(INFO))
"RTN","MAGGTU6",113,0)
 . S TMP(INFO)=I
"RTN","MAGGTU6",114,0)
 S INFO=""
"RTN","MAGGTU6",115,0)
 F  S INFO=$O(TMP(INFO)) Q:INFO=""  D
"RTN","MAGGTU6",116,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=TMP(INFO)_"^"_INFO
"RTN","MAGGTU6",117,0)
 K TMP
"RTN","MAGGTU6",118,0)
 Q
"RTN","MAGGTU6",119,0)
LOCDRIVE(I) ; Returns 1 if this is a local drive, else 0
"RTN","MAGGTU6",120,0)
 ; Local Drive is determined by the DIR not being Type : URL and having a ":"
"RTN","MAGGTU6",121,0)
 I $P(^MAG(2005.2,I,0),"^",7)'="URL" I $P(^MAG(2005.2,I,0),"^",2)[":" Q 1
"RTN","MAGGTU6",122,0)
 Q 0
"RTN","MAGGTU6",123,0)
GETENV(MAGRY) ;RPC [MAG GET ENV]
"RTN","MAGGTU6",124,0)
 ; Get some environment variables (used by annotation control)
"RTN","MAGGTU6",125,0)
 S MAGRY=DUZ(2)_"^"_$$NOW^XLFDT
"RTN","MAGGTU6",126,0)
 Q
"RTN","MAGGTU6",127,0)
ANNCB(STATARR) ;Status Callback (called by the import API)
"RTN","MAGGTU6",128,0)
 ;
"RTN","MAGGTU6",129,0)
 N I,CDUZ,QINDEX,A,COUNT
"RTN","MAGGTU6",130,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGTU6",131,0)
 ;  0 = error, all others are success.
"RTN","MAGGTU6",132,0)
 I $P(STATARR(0),"^",1)'=0 D
"RTN","MAGGTU6",133,0)
 . ;   Import was successful
"RTN","MAGGTU6",134,0)
 E  D
"RTN","MAGGTU6",135,0)
 . ;   Import failed - send mail to MAG SERVER group and person who queued the import
"RTN","MAGGTU6",136,0)
 . S XMDUZ=DUZ
"RTN","MAGGTU6",137,0)
 . S XMSUB="Import Error Report"
"RTN","MAGGTU6",138,0)
 . ;    get text of message from status array
"RTN","MAGGTU6",139,0)
 . S XMTEXT="A("
"RTN","MAGGTU6",140,0)
 . ; XMD needs array to start with 1, not 0
"RTN","MAGGTU6",141,0)
 . S COUNT=1,I=""
"RTN","MAGGTU6",142,0)
 . F  S I=$O(STATARR(I)) Q:I=""  D
"RTN","MAGGTU6",143,0)
 . . S A(COUNT)=I_") "_STATARR(I)
"RTN","MAGGTU6",144,0)
 . . S COUNT=COUNT+1
"RTN","MAGGTU6",145,0)
 . . Q
"RTN","MAGGTU6",146,0)
 . S A(COUNT+1)=" "
"RTN","MAGGTU6",147,0)
 . S A(COUNT+2)=" "
"RTN","MAGGTU6",148,0)
 . S A(COUNT+3)="     The errors listed above were generated by"
"RTN","MAGGTU6",149,0)
 . S A(COUNT+4)="     the VistA Imaging Annotation Editor while"
"RTN","MAGGTU6",150,0)
 . S A(COUNT+5)="     trying to import your diagram.  Please"
"RTN","MAGGTU6",151,0)
 . S A(COUNT+6)="     report these errors to your VistA Imaging"
"RTN","MAGGTU6",152,0)
 . S A(COUNT+7)="     support personnel."
"RTN","MAGGTU6",153,0)
 . ;Get person who did the import
"RTN","MAGGTU6",154,0)
 . S QINDEX=STATARR(2)
"RTN","MAGGTU6",155,0)
 . S I=-1 F  S I=$O(^MAG(2006.034,QINDEX,1,I)) Q:I=""  D
"RTN","MAGGTU6",156,0)
 . . I $P($G(^MAG(2006.034,QINDEX,1,I,0)),"^",1)=8 S CDUZ=$P(^MAG(2006.034,QINDEX,1,I,0),"^",2)
"RTN","MAGGTU6",157,0)
 . ;Set recipients of message
"RTN","MAGGTU6",158,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGGTU6",159,0)
 . I $G(CDUZ) S XMY(CDUZ)=""
"RTN","MAGGTU6",160,0)
 . D ^XMD
"RTN","MAGGTU6",161,0)
 . Q
"RTN","MAGGTU6",162,0)
 Q
"RTN","MAGGTU6",163,0)
GETCTP(MAGRY) ;RPC [MAG4 CT PRESETS GET]
"RTN","MAGGTU6",164,0)
 N MAGPLC
"RTN","MAGGTU6",165,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGGTU6",166,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",167,0)
 S MAGRY=$G(^MAG(2006.1,MAGPLC,"CT"))
"RTN","MAGGTU6",168,0)
 I MAGRY="" S MAGRY="0^Site doesn't have CT Presets defined." Q
"RTN","MAGGTU6",169,0)
 S MAGRY="1^"_MAGRY
"RTN","MAGGTU6",170,0)
 Q
"RTN","MAGGTU6",171,0)
SAVECTP(MAGRY,VALUE) ;RPC [MAG4 CT PRESETS SAVE]
"RTN","MAGGTU6",172,0)
 N MAGPLC
"RTN","MAGGTU6",173,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGGTU6",174,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",175,0)
 S ^MAG(2006.1,MAGPLC,"CT")=VALUE
"RTN","MAGGTU6",176,0)
 S MAGRY="1^CT Presets saved."
"RTN","MAGGTU6",177,0)
 Q
"RTN","MAGGTU6",178,0)
NETPLCS ; Create an array of Place, SiteCodes for all entries of
"RTN","MAGGTU6",179,0)
 ; Network Location entries.  
"RTN","MAGGTU6",180,0)
 N I,PLC,PLCODE,CONS
"RTN","MAGGTU6",181,0)
 S CONS=$$CONSOLID^MAGBAPI
"RTN","MAGGTU6",182,0)
 I 'CONS S PLC=$O(^MAG(2006.1,0)),PLCODE=$P(^MAG(2006.1,PLC,0),"^",9)
"RTN","MAGGTU6",183,0)
 ; 
"RTN","MAGGTU6",184,0)
 K MAGJOB("NETPLC")
"RTN","MAGGTU6",185,0)
 S I=0 F  S I=$O(^MAG(2005.2,I)) Q:'I  D
"RTN","MAGGTU6",186,0)
 . I 'CONS S MAGJOB("NETPLC",I)=PLC_"^"_PLCODE Q
"RTN","MAGGTU6",187,0)
 . ; Here, for consolidated sites we get the real Site IEN, and Site Code.
"RTN","MAGGTU6",188,0)
 . I CONS S PLC=$P($G(^MAG(2005.2,I,0)),"^",10),PLCODE=$S(PLC:$P($G(^MAG(2006.1,PLC,0)),"^",9),1:"n/a")
"RTN","MAGGTU6",189,0)
 . S MAGJOB("NETPLC",I)=PLC_"^"_PLCODE
"RTN","MAGGTU6",190,0)
 . Q
"RTN","MAGGTU6",191,0)
 Q
"RTN","MAGGTU71")
0^36^B12392696
"RTN","MAGGTU71",1,0)
MAGGTU71 ;WOIFO/GEK - Silent calls for Queing functions from GUI, cont ;  [ 06/20/2001 08:57 ]
"RTN","MAGGTU71",2,0)
 ;;3.0;IMAGING;**46,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU71",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU71",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU71",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU71",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU71",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU71",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU71",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU71",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU71",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU71",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU71",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU71",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU71",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU71",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU71",17,0)
 ;;
"RTN","MAGGTU71",18,0)
 Q
"RTN","MAGGTU71",19,0)
ABSJB(MAGRY,DATA) ;RPC [MAG ABSJB] SET ABSTRACT AND/OR JUKEBOX QUEUES
"RTN","MAGGTU71",20,0)
 ;
"RTN","MAGGTU71",21,0)
 ;       DATA
"RTN","MAGGTU71",22,0)
 ;   DESCRIPTION:  '^' delimited String:
"RTN","MAGGTU71",23,0)
 ;   Piece 1 = the IEN of the image that needs an abstract created.
"RTN","MAGGTU71",24,0)
 ;   Piece 2 = the IEN of the image that needs copied to the jukebox
"RTN","MAGGTU71",25,0)
 ;
"RTN","MAGGTU71",26,0)
 ;       MAGRY = "1^Successful"
"RTN","MAGGTU71",27,0)
 ;             = "0^error message"
"RTN","MAGGTU71",28,0)
 ;             
"RTN","MAGGTU71",29,0)
 N MAGIENAB,MAGIENJB,MAGERR,X,QMSG
"RTN","MAGGTU71",30,0)
 S MAGERR=0
"RTN","MAGGTU71",31,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGTU71",32,0)
 S MAGRY="0^ERROR: Setting Queue for Abstract or JukeBox copy"
"RTN","MAGGTU71",33,0)
 S MAGIENAB=+$P(DATA,"^",1),MAGIENJB=+$P(DATA,"^",2)
"RTN","MAGGTU71",34,0)
 I MAGIENAB Q:((+$P($G(^MAG(2005,MAGIENAB,0)),U,11))!(+$P($G(^MAG(2005,MAGIENAB,0)),U,12))) "0^Image integrity"
"RTN","MAGGTU71",35,0)
 I MAGIENJB Q:((+$P($G(^MAG(2005,MAGIENJB,0)),U,11))!(+$P($G(^MAG(2005,MAGIENJB,0)),U,12))) "0^Image integrity"
"RTN","MAGGTU71",36,0)
 S QMSG=$S(MAGIENAB:"Setting Abstract Queue",1:"")
"RTN","MAGGTU71",37,0)
 I MAGIENJB S QMSG=$S(QMSG="":"Setting JukeBox Queue",1:" and JukeBox Queue")
"RTN","MAGGTU71",38,0)
 L +(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031)):10 E  D QERR Q
"RTN","MAGGTU71",39,0)
 I MAGIENAB S X=$$ABSTRACT^MAGBAPI(MAGIENAB,$$DA2PLC^MAGBAPIP(MAGIENAB,"F"))
"RTN","MAGGTU71",40,0)
 I MAGIENJB S X=$$JUKEBOX^MAGBAPI(MAGIENJB,$$DA2PLC^MAGBAPIP(MAGIENJB,"F"))
"RTN","MAGGTU71",41,0)
 L -(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031))
"RTN","MAGGTU71",42,0)
 S MAGRY="1^SUCCESSFUL"
"RTN","MAGGTU71",43,0)
 Q
"RTN","MAGGTU71",44,0)
ERR ;
"RTN","MAGGTU71",45,0)
 L -(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031))
"RTN","MAGGTU71",46,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTU71",47,0)
 S MAGRY="0^Timed out trying to set JukeBox/Abstract Queue.  Not Fatal.  'Save' will continue..."
"RTN","MAGGTU71",48,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGTU71",49,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTU71",50,0)
 Q
"RTN","MAGGTU71",51,0)
QERR ;
"RTN","MAGGTU71",52,0)
 N MAGTXT,EMSG
"RTN","MAGGTU71",53,0)
 S MAGTXT="Failed "_QMSG
"RTN","MAGGTU71",54,0)
 ;ENTRY(MAGIMT,MAGDUZ,MAGO,MAGPACK,MAGDFN,MAGCT,MAGAD)
"RTN","MAGGTU71",55,0)
 D ENTRY^MAGLOG("QFAIL",$G(DUZ),MAGIENJB,"","","",MAGTXT)
"RTN","MAGGTU71",56,0)
 D ACTION^MAGGTAU(MAGTXT,1)
"RTN","MAGGTU71",57,0)
 S EMSG="Timed out trying to Lock Queue File"
"RTN","MAGGTU71",58,0)
 D ACTION^MAGGTAU(EMSG,1)
"RTN","MAGGTU71",59,0)
 S MAGRY="1^"_MAGTXT_"  Message was sent to IRM.  Not Fatal.  'Save' will continue..."
"RTN","MAGGTU71",60,0)
 N XMSUB,XMY,XMTEXT,XMK,XMDUZ
"RTN","MAGGTU71",61,0)
 S XMTEXT="^TMP($J,""MAGQ"","
"RTN","MAGGTU71",62,0)
 S XMSUB=MAGTXT
"RTN","MAGGTU71",63,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGGTU71",64,0)
 S ^TMP($J,"MAGQ",1)=MAGTXT
"RTN","MAGGTU71",65,0)
 S ^TMP($J,"MAGQ",2)=EMSG
"RTN","MAGGTU71",66,0)
 S ^TMP($J,"MAGQ",3)=" for Image IEN: "_MAGIENJB
"RTN","MAGGTU71",67,0)
 S ^TMP($J,"MAGQ",4)="You need to run the Verifier for this Image IEN"
"RTN","MAGGTU71",68,0)
 S XMY("G.IMAGING DEVELOPMENT@DOMAIN.EXT")=""
"RTN","MAGGTU71",69,0)
 D ^XMD
"RTN","MAGGTU71",70,0)
 S XMDUZ=DUZ D KLQ^XMA1B
"RTN","MAGGTU71",71,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGGTU71",72,0)
 Q
"RTN","MAGGTU9")
0^38^B41693963
"RTN","MAGGTU9",1,0)
MAGGTU9 ;WOIFO/LB/GEK - Imaging utilities assign key
"RTN","MAGGTU9",2,0)
 ;;3.0;IMAGING;**8,59**;Nov 27, 2007;Build 20
"RTN","MAGGTU9",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU9",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU9",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU9",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU9",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU9",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU9",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU9",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU9",11,0)
 ;; |                                                               |
"RTN","MAGGTU9",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU9",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU9",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU9",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU9",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU9",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU9",18,0)
 ;;
"RTN","MAGGTU9",19,0)
 Q
"RTN","MAGGTU9",20,0)
CHKKEY ;
"RTN","MAGGTU9",21,0)
 N NOGIVE
"RTN","MAGGTU9",22,0)
 S NOGIVE=1
"RTN","MAGGTU9",23,0)
GIVEKEY ;Give MAGDISP CLIN key to all MAG WINDOWS option holders
"RTN","MAGGTU9",24,0)
 ; that have neither MAGDISP CLIN nor MAGDISP ADMIN
"RTN","MAGGTU9",25,0)
 ;   Find the menu option's IEN
"RTN","MAGGTU9",26,0)
 N MKEYC,MKEYA,ERR,OPT,MAGUSER,I,KEYCLIN,KEYADMIN,KEYCT,KEYECT,XCT
"RTN","MAGGTU9",27,0)
 N KEYHASC,KEYHASA,KEYHASB,KEYNONE,SP,LSP
"RTN","MAGGTU9",28,0)
 N UCT,UTOT,OPTACC,MDOT,UDISCT
"RTN","MAGGTU9",29,0)
 ; This could be made Generic if ever a need, to search for users 
"RTN","MAGGTU9",30,0)
 ; withour either key, and assigned those users the first (KEYCLIN)
"RTN","MAGGTU9",31,0)
 S KEYCLIN="MAGDISP CLIN"
"RTN","MAGGTU9",32,0)
 S KEYADMIN="MAGDISP ADMIN"
"RTN","MAGGTU9",33,0)
 S KEYCT=0 ; count of number of users that were assigned the key.
"RTN","MAGGTU9",34,0)
 S KEYECT=0 ; count of number of errors during the assignment.
"RTN","MAGGTU9",35,0)
 S KEYHASC=0 ; count of number of users that already have key Clin
"RTN","MAGGTU9",36,0)
 S KEYHASA=0 ; count of number of users that already have key Admin
"RTN","MAGGTU9",37,0)
 S KEYHASB=0 ; count of number of users that Have Both keys
"RTN","MAGGTU9",38,0)
 S KEYNONE=0 ; count of Users that have Neither Key.
"RTN","MAGGTU9",39,0)
 S OPTACC=0 ; count of users with access to MAG WINDOWS.
"RTN","MAGGTU9",40,0)
 S UDISCT=0 ; count of Disabled Users Skipped.
"RTN","MAGGTU9",41,0)
 S MDOT=10000 ; print '.' to screen to show progress.
"RTN","MAGGTU9",42,0)
 S UCT=0 ; user count. for progress
"RTN","MAGGTU9",43,0)
 S UTOT=$P(^VA(200,0),"^",4)
"RTN","MAGGTU9",44,0)
 ;
"RTN","MAGGTU9",45,0)
 I $G(NOGIVE) D 
"RTN","MAGGTU9",46,0)
 . D MES^XPDUTL("Checking for users that have access to Option : "_"MAG WINDOWS")
"RTN","MAGGTU9",47,0)
 . D MES^XPDUTL("  but do not have either '"_KEYCLIN_"' or '"_KEYADMIN_"' Keys")
"RTN","MAGGTU9",48,0)
 . D MES^XPDUTL("  Disabled users (DISUSER=1) are skipped, they are not checked.")
"RTN","MAGGTU9",49,0)
 . Q
"RTN","MAGGTU9",50,0)
 E  D MES^XPDUTL("Assigning "_KEYCLIN_" to all users with access to Option : "_"MAG WINDOWS")
"RTN","MAGGTU9",51,0)
 D MES^XPDUTL("  ")
"RTN","MAGGTU9",52,0)
 S OPT=$$FIND1^DIC(19,"","X","MAG WINDOWS","","","ERR")
"RTN","MAGGTU9",53,0)
 I OPT="" D MES^XPDUTL("ERROR ",$G(ERR("DIERR",1,"TEXT",1))) Q
"RTN","MAGGTU9",54,0)
 I OPT=0 D MES^XPDUTL("MAG WINDOWS wasn't found in Option File") Q
"RTN","MAGGTU9",55,0)
 ;   Lookup the security key
"RTN","MAGGTU9",56,0)
 S MKEYC=$$LKUP^XPDKEY(KEYCLIN)
"RTN","MAGGTU9",57,0)
 S MKEYA=$$LKUP^XPDKEY(KEYADMIN)
"RTN","MAGGTU9",58,0)
 I ('MKEYC)!('MKEYA) D MES^XPDUTL("ERROR: Imaging Display Keys are not defined at this site") Q
"RTN","MAGGTU9",59,0)
 ;   Check all Users at site to see if they don't have either Clin or Admin
"RTN","MAGGTU9",60,0)
 D MES^XPDUTL("Checking users...")
"RTN","MAGGTU9",61,0)
 D MES^XPDUTL(" ")
"RTN","MAGGTU9",62,0)
 S I=0 F  S I=$O(^VA(200,I)) Q:'I  D
"RTN","MAGGTU9",63,0)
 . I $$GET1^DIQ(200,I,7,"E")]"" S UDISCT=UDISCT+1 Q
"RTN","MAGGTU9",64,0)
 . S UCT=UCT+1 I UCT>MDOT S MDOT=MDOT+10000 D MES^XPDUTL(UCT_" of "_UTOT_" users checked...")
"RTN","MAGGTU9",65,0)
 . I (($$ACCESS^XQCHK(I,OPT))>0) S OPTACC=OPTACC+1 D C(I)
"RTN","MAGGTU9",66,0)
 . Q
"RTN","MAGGTU9",67,0)
 S SP="          "
"RTN","MAGGTU9",68,0)
 S LSP=$L(UTOT)+3
"RTN","MAGGTU9",69,0)
 D MES^XPDUTL("   ")
"RTN","MAGGTU9",70,0)
 I $G(NOGIVE) D
"RTN","MAGGTU9",71,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(OPTACC))_OPTACC_" of "_UTOT_" Users have access to option MAG WINDOWS.")
"RTN","MAGGTU9",72,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYHASB))_KEYHASB_" Users have Both Keys ")
"RTN","MAGGTU9",73,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYHASC))_KEYHASC_" Users only have "_KEYCLIN_" key")
"RTN","MAGGTU9",74,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYHASA))_KEYHASA_" Users only have "_KEYADMIN_" key")
"RTN","MAGGTU9",75,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYNONE))_KEYNONE_" Users have neither Key")
"RTN","MAGGTU9",76,0)
 . I KEYECT>0 D MES^XPDUTL(KEYECT_" Errors during Key Assignment. See install log for details")
"RTN","MAGGTU9",77,0)
 . Q
"RTN","MAGGTU9",78,0)
 I '$G(NOGIVE) D
"RTN","MAGGTU9",79,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(OPTACC))_OPTACC_" of "_UTOT_" Users have access to option MAG WINDOWS.")
"RTN","MAGGTU9",80,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYHASB))_KEYHASB_" Users already have Both Keys ")
"RTN","MAGGTU9",81,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYHASC))_KEYHASC_" Users have Only Key "_KEYCLIN)
"RTN","MAGGTU9",82,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYHASA))_KEYHASA_" Users have Only Key "_KEYADMIN)
"RTN","MAGGTU9",83,0)
 . D MES^XPDUTL($E(SP,1,LSP-$L(KEYCT))_KEYCT_" Users were assigned key: "_KEYCLIN)
"RTN","MAGGTU9",84,0)
 . D MES^XPDUTL("Assignment Complete.")
"RTN","MAGGTU9",85,0)
 . I KEYECT>0 D MES^XPDUTL(KEYECT_" Errors during Key Assignment. See install log for details")
"RTN","MAGGTU9",86,0)
 . Q
"RTN","MAGGTU9",87,0)
 Q
"RTN","MAGGTU9",88,0)
C(USER) ;
"RTN","MAGGTU9",89,0)
 ; check KEY for USER
"RTN","MAGGTU9",90,0)
 N DO,D1,MFDA,ZC,ZA,MIEN
"RTN","MAGGTU9",91,0)
 ; check to see if they have the Clin key
"RTN","MAGGTU9",92,0)
 S ZC=$$FIND1^DIC(200.051,","_USER_",","",KEYCLIN)
"RTN","MAGGTU9",93,0)
 I ZC="" D  Q
"RTN","MAGGTU9",94,0)
 . D MES^XPDUTL("ERROR Validating that user ("_USER_") has Key "_KEYCLIN)
"RTN","MAGGTU9",95,0)
 . S KEYECT=KEYECT+1
"RTN","MAGGTU9",96,0)
 . Q
"RTN","MAGGTU9",97,0)
 ; check to see if they have the Admin key
"RTN","MAGGTU9",98,0)
 S ZA=$$FIND1^DIC(200.051,","_USER_",","",KEYADMIN)
"RTN","MAGGTU9",99,0)
 I ZA="" D  Q
"RTN","MAGGTU9",100,0)
 . D MES^XPDUTL("ERROR Validating that user ("_USER_") has Key "_KEYADMIN)
"RTN","MAGGTU9",101,0)
 . S KEYECT=KEYECT+1
"RTN","MAGGTU9",102,0)
 . Q
"RTN","MAGGTU9",103,0)
 I ((+ZC)&(+ZA)) S KEYHASB=KEYHASB+1 Q
"RTN","MAGGTU9",104,0)
 I +ZC S KEYHASC=KEYHASC+1 Q
"RTN","MAGGTU9",105,0)
 I +ZA S KEYHASA=KEYHASA+1 Q
"RTN","MAGGTU9",106,0)
 S KEYNONE=KEYNONE+1
"RTN","MAGGTU9",107,0)
 I $G(NOGIVE) D  Q
"RTN","MAGGTU9",108,0)
 . D MES^XPDUTL("User: "_$P($G(^VA(200,USER,0)),"^")_" has neither Key")
"RTN","MAGGTU9",109,0)
 . Q
"RTN","MAGGTU9",110,0)
 S MFDA(200.051,"+1,"_USER_",",.01)=MKEYC
"RTN","MAGGTU9",111,0)
 S MFDA(200.051,"+1,"_USER_",",1)=DUZ
"RTN","MAGGTU9",112,0)
 S MFDA(200.051,"+1,"_USER_",",2)=DT
"RTN","MAGGTU9",113,0)
 S MIEN(1)=MKEYC_","
"RTN","MAGGTU9",114,0)
 D UPDATE^DIE("","MFDA","MIEN")
"RTN","MAGGTU9",115,0)
 I $D(DIERR) D  Q
"RTN","MAGGTU9",116,0)
 . D MES^XPDUTL("ERROR Assigning Key ("_KEYCLIN_") to user ("_USER_")")
"RTN","MAGGTU9",117,0)
 . S KEYECT=KEYECT+1
"RTN","MAGGTU9",118,0)
 . D CLEAN^DILF
"RTN","MAGGTU9",119,0)
 . Q
"RTN","MAGGTU9",120,0)
 S KEYCT=KEYCT+1
"RTN","MAGGTU9",121,0)
 D CLEAN^DILF
"RTN","MAGGTU9",122,0)
 Q
"RTN","MAGGTU9",123,0)
FLT ;  Create a Few Public Filters as a default for sites.
"RTN","MAGGTU9",124,0)
 ;  Only create new public filters if file is empty.
"RTN","MAGGTU9",125,0)
 N DIK
"RTN","MAGGTU9",126,0)
 I +$P(^MAG(2005.87,0),"^",3) D  Q
"RTN","MAGGTU9",127,0)
 . D MES^XPDUTL("The IMAGE LIST FILTERS File is not empty,")
"RTN","MAGGTU9",128,0)
 . D MES^XPDUTL("  Default Public Filters were not installed.")
"RTN","MAGGTU9",129,0)
 . Q
"RTN","MAGGTU9",130,0)
 S ^MAG(2005.87,1,0)="Rad All^RAD^CLIN^^^^^^0"
"RTN","MAGGTU9",131,0)
 S ^MAG(2005.87,1,1)="^1^.05"
"RTN","MAGGTU9",132,0)
 S ^MAG(2005.87,2,0)="Clin All^^CLIN^^^^^^0"
"RTN","MAGGTU9",133,0)
 S ^MAG(2005.87,2,1)="^1^.05"
"RTN","MAGGTU9",134,0)
 S ^MAG(2005.87,3,0)="Admin All^^ADMIN^^^^^^0"
"RTN","MAGGTU9",135,0)
 S ^MAG(2005.87,3,1)="^1^.05"
"RTN","MAGGTU9",136,0)
 S ^MAG(2005.87,4,0)="Clin 2 yr^^CLIN^^^^^^-24"
"RTN","MAGGTU9",137,0)
 S ^MAG(2005.87,4,1)="^1^.05"
"RTN","MAGGTU9",138,0)
 S ^MAG(2005.87,5,0)="Admin 10-10EZ All^^ADMIN^46,^^^^^0"
"RTN","MAGGTU9",139,0)
 S ^MAG(2005.87,5,1)="^1^.05"
"RTN","MAGGTU9",140,0)
 S ^MAG(2005.87,6,0)="Adv Directives^^CLIN^67^^^^^0"
"RTN","MAGGTU9",141,0)
 S ^MAG(2005.87,6,1)="^1^.05"
"RTN","MAGGTU9",142,0)
 S ^MAG(2005.87,7,0)="All^^^^^^^^0"
"RTN","MAGGTU9",143,0)
 S ^MAG(2005.87,7,1)="^1^.05"
"RTN","MAGGTU9",144,0)
 S ^MAG(2005.87,8,0)="All 2 yr^^^^^^^^-24"
"RTN","MAGGTU9",145,0)
 S ^MAG(2005.87,8,1)="^1^.05"
"RTN","MAGGTU9",146,0)
 S ^MAG(2005.87,9,0)="All 6 mth^^^^^^^^-6"
"RTN","MAGGTU9",147,0)
 S ^MAG(2005.87,9,1)="^1^.05"
"RTN","MAGGTU9",148,0)
 ;All Advance Directives^^CLIN^67^^^^^0
"RTN","MAGGTU9",149,0)
 S DIK="^MAG(2005.87," D IXALL^DIK
"RTN","MAGGTU9",150,0)
 D MES^XPDUTL("Default Public Filters added to IMAGE LIST FILTERS File.")
"RTN","MAGGTU9",151,0)
 Q
"RTN","MAGGTUP")
0^16^B22068923
"RTN","MAGGTUP",1,0)
MAGGTUP ;WOIFO/GEK - Imaging System User preferences ; [ 06/20/2001 08:57 ]
"RTN","MAGGTUP",2,0)
 ;;3.0;IMAGING;**7,8,48,45,59**;Nov 27, 2007;Build 20
"RTN","MAGGTUP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUP",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUP",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUP",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUP",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUP",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUP",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUP",11,0)
 ;; |                                                               |
"RTN","MAGGTUP",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUP",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUP",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUP",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUP",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUP",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",18,0)
 ;;
"RTN","MAGGTUP",19,0)
 Q
"RTN","MAGGTUP",20,0)
GET(MAGRY,CODE) ;RPC [MAGGUPREFGET] Call to Get user preferences.
"RTN","MAGGTUP",21,0)
 ;
"RTN","MAGGTUP",22,0)
 N Y,PRFIEN,J,X,Z,NODE,MAGPREF
"RTN","MAGGTUP",23,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTUP",24,0)
 K MAGRY
"RTN","MAGGTUP",25,0)
 S MAGRY(0)="0^Error: Attempting to access user preference"
"RTN","MAGGTUP",26,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,""))
"RTN","MAGGTUP",27,0)
 ;    if first time user
"RTN","MAGGTUP",28,0)
 I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",29,0)
 ;    merge default settings into User's Preferences
"RTN","MAGGTUP",30,0)
 D MERGE(PRFIEN)
"RTN","MAGGTUP",31,0)
 ;    This returns the users default Filter, and creates filters if needed.
"RTN","MAGGTUP",32,0)
 S $P(^MAG(2006.18,PRFIEN,"LISTWIN1"),"^",3)=$$DFTFLT^MAGGSFLT(DUZ)
"RTN","MAGGTUP",33,0)
 S MAGRY(0)="1^User Preferences returned."
"RTN","MAGGTUP",34,0)
 ; 
"RTN","MAGGTUP",35,0)
 ; At This point.  Then entry in 2006.18 for User DUZ in complete
"RTN","MAGGTUP",36,0)
 ;   it has been merged with defaults, and has a valid Default Filter.
"RTN","MAGGTUP",37,0)
 ;   
"RTN","MAGGTUP",38,0)
 ;  if caller only wants one node, get it then quit.
"RTN","MAGGTUP",39,0)
 I $L($G(CODE))  S MAGRY($O(MAGRY(""),-1)+1)=CODE_"^"_$G(^MAG(2006.18,PRFIEN,CODE)) Q
"RTN","MAGGTUP",40,0)
 ;
"RTN","MAGGTUP",41,0)
 ;  loop through User Pref file, returning all nodes.
"RTN","MAGGTUP",42,0)
 ; Next line was Un-Commented out. BUT Clients before Patch 8 need it.
"RTN","MAGGTUP",43,0)
 S MAGRY($O(MAGRY(""),-1)+1)="SYS^"_^MAG(2006.18,PRFIEN,0)
"RTN","MAGGTUP",44,0)
 S NODE=""
"RTN","MAGGTUP",45,0)
 F  S NODE=$O(^MAG(2006.18,PRFIEN,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",46,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=NODE_"^"_^MAG(2006.18,PRFIEN,NODE)
"RTN","MAGGTUP",47,0)
 Q
"RTN","MAGGTUP",48,0)
MERGE(PRFIEN) ; Merge default settings into User Prefs returned.
"RTN","MAGGTUP",49,0)
 ; This will assure the User Prefs returned have values for New fields.
"RTN","MAGGTUP",50,0)
 ; PRFIEN = IEN in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",51,0)
 N NODE,DARR,MN,YN
"RTN","MAGGTUP",52,0)
 D DFLTARR(.DARR)
"RTN","MAGGTUP",53,0)
 S NODE="" F  S NODE=$O(DARR($J,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",54,0)
 . S YN=DARR($J,NODE)
"RTN","MAGGTUP",55,0)
 . S MN=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",56,0)
 . F J=1:1:$L(YN,"^") I ($P(YN,"^",J)'=""),($P(MN,"^",J)="") S $P(MN,"^",J)=$P(YN,"^",J)
"RTN","MAGGTUP",57,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=MN
"RTN","MAGGTUP",58,0)
 ;
"RTN","MAGGTUP",59,0)
 Q
"RTN","MAGGTUP",60,0)
SAVE(MAGRY,DATA) ;RPC [MAGGUPREFSAVE] Call to save User Preferences
"RTN","MAGGTUP",61,0)
 ;
"RTN","MAGGTUP",62,0)
 S MAGRY="0^Error: Saving user preferences."
"RTN","MAGGTUP",63,0)
 N X,Y,NODE,PRFIEN,J
"RTN","MAGGTUP",64,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTUP",65,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,"")) I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",66,0)
 S NODE="" F  S NODE=$O(DATA(NODE)) Q:NODE=""  D
"RTN","MAGGTUP",67,0)
 . S X=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",68,0)
 . S Y=DATA(NODE)
"RTN","MAGGTUP",69,0)
 . F J=1:1:$L(Y,"^") I $L($P(Y,"^",J)) S $P(X,"^",J)=$P(Y,"^",J)
"RTN","MAGGTUP",70,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=X
"RTN","MAGGTUP",71,0)
 S MAGRY="1^User Preferences saved."
"RTN","MAGGTUP",72,0)
 Q
"RTN","MAGGTUP",73,0)
NEWUSER(USER) ;Returns IEN of New entry in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",74,0)
 K DD,DO
"RTN","MAGGTUP",75,0)
 N DIC
"RTN","MAGGTUP",76,0)
 S X=$E($$GET1^DIQ(200,USER_",",.01),1,15)_" (SETTING 1)"
"RTN","MAGGTUP",77,0)
 S DIC="^MAG(2006.18,",DIC(0)="L"
"RTN","MAGGTUP",78,0)
 S DIC("DR")="1////"_USER_";2////12;3////12;" D FILE^DICN
"RTN","MAGGTUP",79,0)
 I Y=-1 Q Y
"RTN","MAGGTUP",80,0)
 D DEFAULT(+Y)
"RTN","MAGGTUP",81,0)
 Q +Y
"RTN","MAGGTUP",82,0)
DEFAULT(NEWPREF) ;Setup a new IMAGING USER PREFERENCES entry, with System defaults.
"RTN","MAGGTUP",83,0)
 ;    NEWPREF = IEN in IMAGING USER PREFERENCES File
"RTN","MAGGTUP",84,0)
 N DFTPREF,N0,DFTSET
"RTN","MAGGTUP",85,0)
 S DFTPREF=+$$GET1^DIQ(2006.1,$$PLACE^MAGBAPI(DUZ(2)),100,"I") ; DBI - SEB 9/20/2002
"RTN","MAGGTUP",86,0)
 I DFTPREF,$D(^MAG(2006.18,DFTPREF)) D DEFUSER(NEWPREF,DFTPREF) Q
"RTN","MAGGTUP",87,0)
 ;    save the User name, Setting Name 
"RTN","MAGGTUP",88,0)
 S N0=$P(^MAG(2006.18,NEWPREF,0),U,1,4)
"RTN","MAGGTUP",89,0)
 D DFLTARR(.DFTSET)
"RTN","MAGGTUP",90,0)
 M ^MAG(2006.18,NEWPREF)=DFTSET($J)
"RTN","MAGGTUP",91,0)
 ;    reset User name, Setting name.
"RTN","MAGGTUP",92,0)
 S $P(^MAG(2006.18,NEWPREF,0),U,1,4)=N0
"RTN","MAGGTUP",93,0)
 Q
"RTN","MAGGTUP",94,0)
DEFUSER(NEWPREF,DFTPREF) ;Merge New User preference with the Default User as defined
"RTN","MAGGTUP",95,0)
 ; in the Imaging Site Parameters file
"RTN","MAGGTUP",96,0)
 ;    NEWPREF  =  new IMAGING USER PREFERENCE (IEN)
"RTN","MAGGTUP",97,0)
 ;    DFLTPREF =  DEFAULT USER PREFERENCE in the IMAGING SITE PARAMETERS File
"RTN","MAGGTUP",98,0)
 ; 
"RTN","MAGGTUP",99,0)
 N X0
"RTN","MAGGTUP",100,0)
 S X0=$P(^MAG(2006.18,NEWPREF,0),"^",1,4)
"RTN","MAGGTUP",101,0)
 M ^MAG(2006.18,NEWPREF)=^MAG(2006.18,DFTPREF)
"RTN","MAGGTUP",102,0)
 S $P(^MAG(2006.18,NEWPREF,0),"^",1,4)=X0
"RTN","MAGGTUP",103,0)
 ;    remove default user's default Filter from new user's preferences.
"RTN","MAGGTUP",104,0)
 S $P(^MAG(2006.18,NEWPREF,"LISTWIN1"),"^",3)=""
"RTN","MAGGTUP",105,0)
 Q
"RTN","MAGGTUP",106,0)
DFLTARR(ARR) ; Return an Array of All Default settings
"RTN","MAGGTUP",107,0)
 K ARR($J)
"RTN","MAGGTUP",108,0)
 S ARR($J,0)="^^^^0^1^1^"
"RTN","MAGGTUP",109,0)
 S ARR($J,"DICOMWIN")="2^320^292^724^487"
"RTN","MAGGTUP",110,0)
 S ARR($J,"IMAGEGRID")="2^487^2^786^426^1^35,73,67,34,110,46,69,96,76,79,25,0,0^1^"
"RTN","MAGGTUP",111,0)
 S ARR($J,"REPORT")="2^2^333^722^437^Courier^^10"
"RTN","MAGGTUP",112,0)
 S ARR($J,"RADLISTWIN")="2^487^10^433^172^0"
"RTN","MAGGTUP",113,0)
 S ARR($J,"MAIN")="2^1^1^487^172^1"
"RTN","MAGGTUP",114,0)
 S ARR($J,"ABS")="2^1^160^486^326^134^113^1^1^3^24^2^1^0"
"RTN","MAGGTUP",115,0)
 S ARR($J,"FULL")="2^310^282^714^487^674^447^^1^1^4^1^0^1"
"RTN","MAGGTUP",116,0)
 S ARR($J,"GROUP")="2^24^231^427^457^110^70^^1^2^24^2^1^0"
"RTN","MAGGTUP",117,0)
 S ARR($J,"DOC")="2^298^24^729^429^0^0^3^1^2^4^2^0"
"RTN","MAGGTUP",118,0)
 S ARR($J,"CAPCONFIG")="1^1^1^0^0^0^0^1^0^1^0^0^1^1^0^0^1^1^1^1^1^1^200^400^300^100^500^0^0^1^0^1"
"RTN","MAGGTUP",119,0)
 ;                    1   2   3   4   5  6  7  8 9 0 1  2   3  456 7 8
"RTN","MAGGTUP",120,0)
 S ARR($J,"CAPTIU")="261^414^455^654^66^67^280^1^1^~^1^100^-12^^^1^1^^"
"RTN","MAGGTUP",121,0)
 S ARR($J,"RIVER")="1^0^0^0^"
"RTN","MAGGTUP",122,0)
 S ARR($J,"APPMSG")="0^0^"
"RTN","MAGGTUP",123,0)
 S ARR($J,"APPPREFS")="1^7^7^10"
"RTN","MAGGTUP",124,0)
 S ARR($J,"LISTWIN1")="1^1^^1^1"
"RTN","MAGGTUP",125,0)
 Q
"RTN","MAGGTUX")
0^19^B84671980
"RTN","MAGGTUX",1,0)
MAGGTUX ;WIOFO/GEK Imaging utility to validate INDEX values.
"RTN","MAGGTUX",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTUX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUX",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUX",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUX",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUX",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUX",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUX",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUX",11,0)
 ;; |                                                               |
"RTN","MAGGTUX",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUX",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUX",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUX",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUX",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUX",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX",18,0)
 ;;
"RTN","MAGGTUX",19,0)
 Q
"RTN","MAGGTUX",20,0)
CHECK ; Check the entries, NO DATABASE changes.
"RTN","MAGGTUX",21,0)
 D 1(0,"MAGGTUXC")
"RTN","MAGGTUX",22,0)
 Q
"RTN","MAGGTUX",23,0)
FIX ; Fix/Check INDEX values in Image File entries. 
"RTN","MAGGTUX",24,0)
 D 1(1,"MAGGTUX")
"RTN","MAGGTUX",25,0)
 Q
"RTN","MAGGTUX",26,0)
1(COMMIT,MAGN) ; Start here.
"RTN","MAGGTUX",27,0)
 I '$D(DUZ) W !,"DUZ is undefined.   Quitting." Q
"RTN","MAGGTUX",28,0)
 N DESC,ANS,ZTDTH,ZTIO,ZTRTN,ZTDESC,ZTSAVE,ZTSK ; -- TaskMan variables
"RTN","MAGGTUX",29,0)
 I 'COMMIT W !,"   **** Just Checking entries, no DataBase changes will occur. ****",!
"RTN","MAGGTUX",30,0)
 W !,"Validate Image Index Terms:"
"RTN","MAGGTUX",31,0)
 W !,"  The Image File is searched for invalid or missing index values."
"RTN","MAGGTUX",32,0)
 W !,"  The Image Index Generate and Commit functions are used"
"RTN","MAGGTUX",33,0)
 W !,"  to fix the incorrect Index values."
"RTN","MAGGTUX",34,0)
 W !
"RTN","MAGGTUX",35,0)
 W !,"For a summary of the index values that will be changed."
"RTN","MAGGTUX",36,0)
 W !,"  use the menu option:   CHK  -  Check Image File for missing Index values"
"RTN","MAGGTUX",37,0)
 W !," "
"RTN","MAGGTUX",38,0)
 W !,"To Fix the invalid index values in the Image File (#2005)."
"RTN","MAGGTUX",39,0)
 W !,"  use the menu option:   FIX  -  Fix missing Index values in Image File"
"RTN","MAGGTUX",40,0)
 W !
"RTN","MAGGTUX",41,0)
 I 'COMMIT W !,"   **** Just Checking entries, No DataBase changes will occur. ****",!
"RTN","MAGGTUX",42,0)
 E  W !,"   **** Fixing invalid entries,  DataBase changes Will occur. ****",!
"RTN","MAGGTUX",43,0)
 D TASKMAN^MAGXCVP(.ANS)
"RTN","MAGGTUX",44,0)
 I "^"=ANS W !,"Canceled. " Q
"RTN","MAGGTUX",45,0)
 S ZTSK=0 I ANS="" D START(COMMIT,MAGN,0) Q
"RTN","MAGGTUX",46,0)
 S ZTRTN="TASK^MAGGTUX"
"RTN","MAGGTUX",47,0)
 S DESC=$S(COMMIT:"FIX INVALID INDEX VALUES",1:"CHECK FOR INVALID INDEX VALUES")
"RTN","MAGGTUX",48,0)
 S ZTDESC=DESC
"RTN","MAGGTUX",49,0)
 S ZTDTH=ANS,ZTIO=""
"RTN","MAGGTUX",50,0)
 S ZTSAVE("COMMIT")=COMMIT,ZTSAVE("MAGN")=MAGN,ZTSAVE("QUEUED")=1
"RTN","MAGGTUX",51,0)
 D ^%ZTLOAD
"RTN","MAGGTUX",52,0)
 W !,DESC_" Has been Queued as task# : "_ZTSK
"RTN","MAGGTUX",53,0)
 Q
"RTN","MAGGTUX",54,0)
TASK ;
"RTN","MAGGTUX",55,0)
 D START(COMMIT,MAGN,QUEUED)
"RTN","MAGGTUX",56,0)
 Q
"RTN","MAGGTUX",57,0)
START(COMMIT,MAGN,QUEUED) ;Start here.
"RTN","MAGGTUX",58,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGTUX",59,0)
 L +MAGTMP("VALIDATE INDEX TERMS"):0 E  D  Q
"RTN","MAGGTUX",60,0)
 . I 'QUEUED W !,"Image Index Validate process is currently running.  Try later." Q
"RTN","MAGGTUX",61,0)
 . S XMSUB="Image Index Validate wasn't started"
"RTN","MAGGTUX",62,0)
 . S ^TMP($J,"MAGQ",1)="You attempted to Task the Index Validate process, but the"
"RTN","MAGGTUX",63,0)
 . S ^TMP($J,"MAGQ",2)="Image Validate process is currently running.  Please try later."
"RTN","MAGGTUX",64,0)
 . D MAILSHR^MAGQBUT1
"RTN","MAGGTUX",65,0)
 . Q
"RTN","MAGGTUX",66,0)
 N DOT,N0,N40,OL40,N2,MDFN,IXT,IXP,IXS,IXO,ST,ET,NORG,ISGRP,X,J,RADCT,RADCR,CDT,IEN,INDXD
"RTN","MAGGTUX",67,0)
 N PKG,SD,TIM,TITLE,TIUDA,TTLDA,MRY,LNT,LNI,X1,STTIME,ENDTIME,ELSP,%H,%
"RTN","MAGGTUX",68,0)
 N GRINT,NI,NOPAT,NOZ,INVG,CRCT,INVO,GRINI,NT,CT,STOP,LN,GO1,GO0,ORG,OFX,NOMERG,OKMERG,FIX
"RTN","MAGGTUX",69,0)
 S (GRINT,NI,NOPAT,NOZ,INVG,CRCT,INVO,GRINI,NT,CT,STOP,LN,GO1,GO0,ORG,OFX,NOMERG,OKMERG,FIX)=0
"RTN","MAGGTUX",70,0)
 ; Write 200 lines to screen.
"RTN","MAGGTUX",71,0)
 S DOT=$P(($P(^MAG(2005,0),"^",4)/200),".",1)
"RTN","MAGGTUX",72,0)
 S IEN="A"
"RTN","MAGGTUX",73,0)
 ; if it was started and stopped, continue.
"RTN","MAGGTUX",74,0)
 ; ^XTMP("MAGGTUX,0)=PurgeDate^CreateDate^LastIENChecked^HighestIENChecked^NumberChecked^Description
"RTN","MAGGTUX",75,0)
 ; 
"RTN","MAGGTUX",76,0)
 I $D(^XTMP(MAGN,0)) D INIT^MAGGTUX2
"RTN","MAGGTUX",77,0)
 S STTIME=$$NOW^XLFDT
"RTN","MAGGTUX",78,0)
 I 'QUEUED D  I STOP G END
"RTN","MAGGTUX",79,0)
 . I 'COMMIT W !!,"Just Checking Index Terms, NO CHANGES to database. (Q to quit)"
"RTN","MAGGTUX",80,0)
 . E  W !!,"Invalid entries will be fixed.  Database will be modified (Q to quit)"
"RTN","MAGGTUX",81,0)
 . W !!,"   Press 'Q' at any time to QUIT.  It can be resumed later.",!
"RTN","MAGGTUX",82,0)
 . W !,"Ready to Start   Y/N    N// " R X:30
"RTN","MAGGTUX",83,0)
 . I "Nn"[X W !!,"Canceled." S STOP=1 Q
"RTN","MAGGTUX",84,0)
 . W !,"Starting at "_$$FMTE^XLFDT(STTIME)
"RTN","MAGGTUX",85,0)
 . Q
"RTN","MAGGTUX",86,0)
 ;  Start.....
"RTN","MAGGTUX",87,0)
 ;  Set XTMP Dates
"RTN","MAGGTUX",88,0)
 I IEN="A" K ^XTMP(MAGN) S $P(^XTMP(MAGN,0),"^",4)=$O(^MAG(2005,IEN),-1) ; Keep the Highest IEN checked.
"RTN","MAGGTUX",89,0)
 S X1=DT,X2=14 D C^%DTC S $P(^XTMP(MAGN,0),"^",1,2)=X_"^"_$$NOW^XLFDT
"RTN","MAGGTUX",90,0)
 S $P(^XTMP(MAGN,0),"^",6)="Fix Invalid Index Nodes"
"RTN","MAGGTUX",91,0)
 ; Set variables to check the CR - CT problem.
"RTN","MAGGTUX",92,0)
 S RADCR=+$O(^MAG(2005.85,"B","COMPUTED RADIOGRAPHY",""))
"RTN","MAGGTUX",93,0)
 S RADCT=+$O(^MAG(2005.85,"B","COMPUTED TOMOGRAPHY",""))
"RTN","MAGGTUX",94,0)
 ;
"RTN","MAGGTUX",95,0)
 D PRHDR
"RTN","MAGGTUX",96,0)
 S ST=$P($H,",",2) ; Start Time
"RTN","MAGGTUX",97,0)
 S TIM=$P(^MAG(2005,0),"^",4) ; Total Images
"RTN","MAGGTUX",98,0)
 F  S IEN=$O(^MAG(2005,IEN),-1) Q:IEN=0  D  I STOP Q  ;G END
"RTN","MAGGTUX",99,0)
 . R X:0 I X="Q" D  Q
"RTN","MAGGTUX",100,0)
 . . S STOP=1
"RTN","MAGGTUX",101,0)
 . . I 'QUEUED W ! D MES^XPDUTL(" Function interrupted. ")
"RTN","MAGGTUX",102,0)
 . . Q
"RTN","MAGGTUX",103,0)
 . S ISGRP=0
"RTN","MAGGTUX",104,0)
 . S N0=$G(^MAG(2005,IEN,0))
"RTN","MAGGTUX",105,0)
 . S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGGTUX",106,0)
 . S N40=$G(^MAG(2005,IEN,40))
"RTN","MAGGTUX",107,0)
 . S MDFN=+$P(N0,"^",7)
"RTN","MAGGTUX",108,0)
 . S IXT=$P(N40,"^",3),IXS=$P(N40,"^",5),IXP=$P(N40,"^",4),IXO=$P(N40,"^",6)
"RTN","MAGGTUX",109,0)
 . S CT=CT+1
"RTN","MAGGTUX",110,0)
 . I (CT=1)!(CT#DOT=0)!($O(^MAG(2005,IEN),-1)=0) D PRLINE
"RTN","MAGGTUX",111,0)
 . ; Count NO Patient, No Zero Node
"RTN","MAGGTUX",112,0)
 . I 'MDFN S NOPAT=NOPAT+1 Q
"RTN","MAGGTUX",113,0)
 . I N0="" S NOZ=NOZ+1 Q
"RTN","MAGGTUX",114,0)
 . ; Count Groups of 1, No change.
"RTN","MAGGTUX",115,0)
 . I $P(N0,"^",6)=11 S ISGRP=1 I $P($G(^MAG(2005,IEN,1,0)),"^",4)=1 S GO1=GO1+1
"RTN","MAGGTUX",116,0)
 . I ISGRP I $O(^MAG(2005,IEN,1,0))="" S GO0=GO0+1 Q
"RTN","MAGGTUX",117,0)
 . ;
"RTN","MAGGTUX",118,0)
 . ;  Chk ORIGIN (fld #45) had 'VA' not 'V'.
"RTN","MAGGTUX",119,0)
 . I '("VNFD"[$P(N40,"^",6)) D CHK45^MAGGTUX2(.N40,IEN)
"RTN","MAGGTUX",120,0)
 . ;
"RTN","MAGGTUX",121,0)
 . ; Was a CR, CT mismapping, this will fix it.
"RTN","MAGGTUX",122,0)
 . I RADCR=IXP D CHKCR^MAGGTUX2(.N40,IEN)
"RTN","MAGGTUX",123,0)
 . ; 
"RTN","MAGGTUX",124,0)
 . ; Validate the Proc/Event <-> Spec/SubSpec dependency
"RTN","MAGGTUX",125,0)
 . ; Check TYPE is Clinical, All are Active.
"RTN","MAGGTUX",126,0)
 . I IXT D VALIND^MAGGTUX2 Q  ;If image has TYPE, Check then Quit.
"RTN","MAGGTUX",127,0)
 . ;
"RTN","MAGGTUX",128,0)
 . ; Counting problems
"RTN","MAGGTUX",129,0)
 . ; If no index values.
"RTN","MAGGTUX",130,0)
 . I N40="" D
"RTN","MAGGTUX",131,0)
 . . I $P(N0,"^",10) S GRINI=GRINI+1 ; GRoupImageNoIndex
"RTN","MAGGTUX",132,0)
 . . E  S NI=NI+1 ; NoIndex
"RTN","MAGGTUX",133,0)
 . . S LNI=IEN_"-"_$P(N2,"^",1)
"RTN","MAGGTUX",134,0)
 . . Q
"RTN","MAGGTUX",135,0)
 . ;
"RTN","MAGGTUX",136,0)
 . ; If this case follows the Majority of invalid 40 Nodes
"RTN","MAGGTUX",137,0)
 . ; i.e. PKG^^^^^V  PKG^^^^^VA then Kill and ReGenerate later
"RTN","MAGGTUX",138,0)
 . I (N40'="") D
"RTN","MAGGTUX",139,0)
 . . I $P(N0,"^",10) S GRINT=GRINT+1 ; Group Image with No Type
"RTN","MAGGTUX",140,0)
 . . E  S NT=NT+1  ; NoType :  group or single
"RTN","MAGGTUX",141,0)
 . . S ^XTMP(MAGN,"AAN40",N40)=$G(^XTMP(MAGN,"AAN40",N40))+1
"RTN","MAGGTUX",142,0)
 . . S ^XTMP(MAGN,"AAN40",N40,"IEN")=IEN
"RTN","MAGGTUX",143,0)
 . . S LNT=IEN_"-"_$P(N2,"^",1)
"RTN","MAGGTUX",144,0)
 . . ; if 40 node is just default PKG and ORIGIN,  we kill and regenerate.
"RTN","MAGGTUX",145,0)
 . . ; Don't kill N40 if Origin is F,D or N
"RTN","MAGGTUX",146,0)
 . . I N40?.A1"^^^^^".E I "V"[$P(N40,"^",6) S N40=""
"RTN","MAGGTUX",147,0)
 . . Q
"RTN","MAGGTUX",148,0)
 . ;
"RTN","MAGGTUX",149,0)
 . ; Use Patch 31 Utils to Generate Index values
"RTN","MAGGTUX",150,0)
 . I N40="" D  Q
"RTN","MAGGTUX",151,0)
 . . I COMMIT D
"RTN","MAGGTUX",152,0)
 . . . ; GENERATE AND COMMIT INDEX VALUES.
"RTN","MAGGTUX",153,0)
 . . . D GENIEN^MAGXCVI(IEN,.INDXD)
"RTN","MAGGTUX",154,0)
 . . . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGTUX",155,0)
 . . . S ^MAG(2005,IEN,40)=INDXD
"RTN","MAGGTUX",156,0)
 . . . S ^MAGIXCVT(2006.96,IEN)=2 ; status = 2 ( generate by Patch 59) 
"RTN","MAGGTUX",157,0)
 . . . S FIX=FIX+1
"RTN","MAGGTUX",158,0)
 . . . D ENTRY^MAGLOG("INDEX-ALL",DUZ,IEN,"TUX59",MDFN,1)
"RTN","MAGGTUX",159,0)
 . . . Q
"RTN","MAGGTUX",160,0)
 . . Q
"RTN","MAGGTUX",161,0)
 . ;  40 node is missing TYPE
"RTN","MAGGTUX",162,0)
 . ;   - has Spec and/or Proc 
"RTN","MAGGTUX",163,0)
 . ;   - or Origin is not V.
"RTN","MAGGTUX",164,0)
 . ; Compare old to new, only set missing pieces, (don't overwrite)
"RTN","MAGGTUX",165,0)
 . ; If the merged 40 node doesn't pass VAL59G,
"RTN","MAGGTUX",166,0)
 . ; Then revert to old Spec and Proc but keep Generated Type.
"RTN","MAGGTUX",167,0)
 . ; 
"RTN","MAGGTUX",168,0)
 . D GENIEN^MAGXCVI(IEN,.INDXD)
"RTN","MAGGTUX",169,0)
 . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGTUX",170,0)
 . S OL40=N40
"RTN","MAGGTUX",171,0)
 . ; We're not changing existing values of Spec,Proc or Origin 
"RTN","MAGGTUX",172,0)
 . F J=1:1:6 I '$L($P(N40,"^",J)) S $P(N40,"^",J)=$P(INDXD,"^",J)
"RTN","MAGGTUX",173,0)
 . ;  Validate the merged Spec and Proc dependency, may be invalid.
"RTN","MAGGTUX",174,0)
 . D VALMERG^MAGGTUX2(OL40,.N40) ; 
"RTN","MAGGTUX",175,0)
 . I '$D(^XTMP(MAGN,"AAN40",OL40,"CVT",INDXD)) S ^XTMP(MAGN,"AAN40",OL40,"CVT",INDXD)=N40
"RTN","MAGGTUX",176,0)
 . I COMMIT D
"RTN","MAGGTUX",177,0)
 . . S ^MAG(2005,IEN,40)=N40
"RTN","MAGGTUX",178,0)
 . . S FIX=FIX+1
"RTN","MAGGTUX",179,0)
 . . S ^MAGIXCVT(2006.96,IEN)=2 ; 2 is set of codes - converted by Patch 59 
"RTN","MAGGTUX",180,0)
 . . D ENTRY^MAGLOG("INDEX-42",DUZ,IEN,"TUX59",MDFN,1)
"RTN","MAGGTUX",181,0)
 . . Q
"RTN","MAGGTUX",182,0)
 . Q
"RTN","MAGGTUX",183,0)
 S ENDTIME=$$NOW^XLFDT
"RTN","MAGGTUX",184,0)
 S %H=$P($H,",")_","_($P($H,",",2)-ST) D YMD^%DTC
"RTN","MAGGTUX",185,0)
 S ELSP=$P($$FMTE^XLFDT(X_%),"@",2)
"RTN","MAGGTUX",186,0)
 S ^XTMP(MAGN,0,"END")=$$FMTE^XLFDT(ENDTIME)_"^"_ELSP
"RTN","MAGGTUX",187,0)
 S $P(^XTMP(MAGN,0),"^",3)=IEN ; last IEN Checked.
"RTN","MAGGTUX",188,0)
 S $P(^XTMP(MAGN,0),"^",5)=$P(^XTMP(MAGN,0),"^",5)+CT
"RTN","MAGGTUX",189,0)
 ;
"RTN","MAGGTUX",190,0)
 S ^XTMP(MAGN,"AATCHK")=$G(^XTMP(MAGN,"AATCHK"))+CT
"RTN","MAGGTUX",191,0)
 S ^XTMP(MAGN,"AANT")=NT
"RTN","MAGGTUX",192,0)
 S ^XTMP(MAGN,"AANI")=NI
"RTN","MAGGTUX",193,0)
 S ^XTMP(MAGN,"AAGRINT")=GRINT
"RTN","MAGGTUX",194,0)
 S ^XTMP(MAGN,"AAGRINI")=GRINI
"RTN","MAGGTUX",195,0)
 S ^XTMP(MAGN,"AAGO1")=GO1
"RTN","MAGGTUX",196,0)
 S ^XTMP(MAGN,"AAGO0")=GO0
"RTN","MAGGTUX",197,0)
 S ^XTMP(MAGN,"AAOFX")=OFX
"RTN","MAGGTUX",198,0)
 S ^XTMP(MAGN,"AAINVG")=INVG
"RTN","MAGGTUX",199,0)
 S ^XTMP(MAGN,"AAINVO")=INVO
"RTN","MAGGTUX",200,0)
 S ^XTMP(MAGN,"AANOMERG")=NOMERG
"RTN","MAGGTUX",201,0)
 S ^XTMP(MAGN,"AAOKMERG")=OKMERG
"RTN","MAGGTUX",202,0)
 S ^XTMP(MAGN,"AACRCT")=CRCT
"RTN","MAGGTUX",203,0)
 S ^XTMP(MAGN,"AAN40","no index")=GRINI+NI
"RTN","MAGGTUX",204,0)
 S ^XTMP(MAGN,"AANOPAT")=NOPAT
"RTN","MAGGTUX",205,0)
 S ^XTMP(MAGN,"AANOZ")=NOZ
"RTN","MAGGTUX",206,0)
 S ^XTMP(MAGN,0,"NT")=$G(LNT)
"RTN","MAGGTUX",207,0)
 S ^XTMP(MAGN,0,"NI")=$G(LNI)
"RTN","MAGGTUX",208,0)
 I FIX S ^XTMP(MAGN,"AAFIX")=FIX
"RTN","MAGGTUX",209,0)
 I 'QUEUED D DISPLAY^MAGGTUX1
"RTN","MAGGTUX",210,0)
 D MAIL^MAGGTUX1
"RTN","MAGGTUX",211,0)
 ; KILL LOCKS.
"RTN","MAGGTUX",212,0)
END ;
"RTN","MAGGTUX",213,0)
 L -MAGTMP("VALIDATE INDEX TERMS")
"RTN","MAGGTUX",214,0)
 Q
"RTN","MAGGTUX",215,0)
ERR ; 
"RTN","MAGGTUX",216,0)
 L -MAGTMP("VALIDATE INDEX TERMS")
"RTN","MAGGTUX",217,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTUX",218,0)
 Q
"RTN","MAGGTUX",219,0)
EST() ;Estimate time remaining.
"RTN","MAGGTUX",220,0)
 Q:'$G(ST) ""    ; we didn't start yet.
"RTN","MAGGTUX",221,0)
 N ET,EST,PS             ; Elapsed Time, Estimate Time, Number Per Second.
"RTN","MAGGTUX",222,0)
 S ET=$P($H,",",2)-ST I ET<2 Q "" ; Elapsed Time (seconds)
"RTN","MAGGTUX",223,0)
 I (CT/ET)<1 Q ""
"RTN","MAGGTUX",224,0)
 S PS=$P(CT/ET,".") ; number Per second
"RTN","MAGGTUX",225,0)
 S EST=$P(((TIM-CT)/PS),".") ;remaining/ (num/sec) = seconds remaining
"RTN","MAGGTUX",226,0)
 S %H=$P($H,",")_","_EST D YMD^%DTC
"RTN","MAGGTUX",227,0)
 Q $P($$FMTE^XLFDT(X_%),"@",2)
"RTN","MAGGTUX",228,0)
 ;
"RTN","MAGGTUX",229,0)
PRLINE ; Print a line of current counts
"RTN","MAGGTUX",230,0)
 Q:QUEUED
"RTN","MAGGTUX",231,0)
 S CDT=$$FMTE^XLFDT($P($G(^MAG(2005,IEN,2)),"^",1),"2DF") ; Capture DaTe
"RTN","MAGGTUX",232,0)
 W !,IEN,?10,CDT,?22,CT,?36,NT,?48,NI,?64,$$EST_" ..."
"RTN","MAGGTUX",233,0)
 S LN=LN+1 I LN#10=0 D PRHDR
"RTN","MAGGTUX",234,0)
 Q
"RTN","MAGGTUX",235,0)
PRHDR ; Print a header and estimate of time.
"RTN","MAGGTUX",236,0)
 ; For Test DataBase, put code to Hang here for 1 sec. (magslow)
"RTN","MAGGTUX",237,0)
 Q:QUEUED
"RTN","MAGGTUX",238,0)
 I 'COMMIT W !,"Just Checking Index Terms, NO CHANGES to database. (Q to quit)"
"RTN","MAGGTUX",239,0)
 W !,"IEN       Saved       #checked   No Type     No Index values    est: "
"RTN","MAGGTUX",240,0)
 Q
"RTN","MAGGTUX",241,0)
REVIEW G REVIEW^MAGGTUX1
"RTN","MAGGTUX",242,0)
 Q
"RTN","MAGGTUX1")
0^20^B47937341
"RTN","MAGGTUX1",1,0)
MAGGTUX1 ;WIOFO/GEK Imaging utility to track missing TYPE INDEX values.
"RTN","MAGGTUX1",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTUX1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUX1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUX1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUX1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUX1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUX1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUX1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUX1",11,0)
 ;; |                                                               |
"RTN","MAGGTUX1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUX1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUX1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUX1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUX1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUX1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX1",18,0)
 ;;
"RTN","MAGGTUX1",19,0)
 Q
"RTN","MAGGTUX1",20,0)
REVIEW ;
"RTN","MAGGTUX1",21,0)
 N CHK,FIX,MAGN
"RTN","MAGGTUX1",22,0)
 S CHK=$D(^XTMP("MAGGTUXC"))
"RTN","MAGGTUX1",23,0)
 S FIX=$D(^XTMP("MAGGTUX"))
"RTN","MAGGTUX1",24,0)
 N EQ S $P(EQ,"=",78)=""
"RTN","MAGGTUX1",25,0)
 W !,EQ
"RTN","MAGGTUX1",26,0)
 I 'CHK,'FIX W !,"No reports to review." Q
"RTN","MAGGTUX1",27,0)
 S X=$S(FIX:"F",1:"C")
"RTN","MAGGTUX1",28,0)
 I CHK&FIX D
"RTN","MAGGTUX1",29,0)
 . W !,"Review last Report of Checked or Fixed Index terms:  C/F   //F  :" R X:30
"RTN","MAGGTUX1",30,0)
 I "fF"[$E(X) W !,"Starting Review of last Fixed Report:" S MAGN="MAGGTUX"
"RTN","MAGGTUX1",31,0)
 E  W !,"Starting Review of last Checked Report:" S MAGN="MAGGTUXC"
"RTN","MAGGTUX1",32,0)
 W !,"Summary of search for Images where TYPE INDEX = null"
"RTN","MAGGTUX1",33,0)
 N I,PKG,BT,ICT,CT,J,JCT,TCT,TTCT
"RTN","MAGGTUX1",34,0)
 S BT=0
"RTN","MAGGTUX1",35,0)
 D 3
"RTN","MAGGTUX1",36,0)
 ;
"RTN","MAGGTUX1",37,0)
 W !,"Last Image IEN missing a Type Index : ",$P($G(^XTMP(MAGN,0,"NT")),"-")
"RTN","MAGGTUX1",38,0)
 W ?41,$$FMTE^XLFDT($P($G(^XTMP(MAGN,0,"NT")),"-",2))
"RTN","MAGGTUX1",39,0)
 W !,"Last Image IEN missing All Index : ",$P($G(^XTMP(MAGN,0,"NI")),"-")
"RTN","MAGGTUX1",40,0)
 W ?41,$$FMTE^XLFDT($P($G(^XTMP(MAGN,0,"NI")),"-",2))
"RTN","MAGGTUX1",41,0)
 W !,"------------------------------"
"RTN","MAGGTUX1",42,0)
 S I="",TCT=0
"RTN","MAGGTUX1",43,0)
 W !,"Different settings of invalid INDEX Node"
"RTN","MAGGTUX1",44,0)
 W !,"Current Terms",?22,"Generated Terms",?50,"New Terms",!
"RTN","MAGGTUX1",45,0)
 F  S I=$O(^XTMP(MAGN,"AAN40",I)) Q:I=""  D
"RTN","MAGGTUX1",46,0)
 . S TCT=TCT+$G(^XTMP(MAGN,"AAN40",I))
"RTN","MAGGTUX1",47,0)
 . W !,I,?20,^XTMP(MAGN,"AAN40",I),?65,"= ",TCT
"RTN","MAGGTUX1",48,0)
 . S J="" F  S J=$O(^XTMP(MAGN,"AAN40",I,"CVT",J)) Q:J=""  D
"RTN","MAGGTUX1",49,0)
 . . W !,I,?20,"+ ",J,?45,"= ",^XTMP(MAGN,"AAN40",I,"CVT",J)
"RTN","MAGGTUX1",50,0)
 . Q
"RTN","MAGGTUX1",51,0)
 ;
"RTN","MAGGTUX1",52,0)
DISPLAY ; This is called after a CHECK or a FIX from MAGGTUX
"RTN","MAGGTUX1",53,0)
 N A
"RTN","MAGGTUX1",54,0)
 S A=$NA(^TMP($J,"MAGGTUX","RPT"))
"RTN","MAGGTUX1",55,0)
 D BUILD(A)
"RTN","MAGGTUX1",56,0)
 S I="" F  S I=$O(@A@(I)) Q:I=""  D MES^XPDUTL(^(I))
"RTN","MAGGTUX1",57,0)
 Q
"RTN","MAGGTUX1",58,0)
MAIL ; This will mail results to the MAG SERVER mail group.
"RTN","MAGGTUX1",59,0)
 N A,MAGDT
"RTN","MAGGTUX1",60,0)
 S MAGDT=$P($$FMTE^XLFDT($$NOW^XLFDT),"@",1)
"RTN","MAGGTUX1",61,0)
 S A=$NA(^TMP($J,"MAGQ"))
"RTN","MAGGTUX1",62,0)
 D BUILD(A)
"RTN","MAGGTUX1",63,0)
 N XMSUB S XMSUB="Image Index Validate "_MAGDT_": Report"
"RTN","MAGGTUX1",64,0)
 S @A@(1)=$$GET1^DIQ(200,$G(DUZ),.01)_"   "_$$GET1^DIQ(4,$G(DUZ(2)),.01)
"RTN","MAGGTUX1",65,0)
 D MAILSHR^MAGQBUT1
"RTN","MAGGTUX1",66,0)
 Q
"RTN","MAGGTUX1",67,0)
BUILD(A) ;BUILD A TMP global of the report.
"RTN","MAGGTUX1",68,0)
 N CT
"RTN","MAGGTUX1",69,0)
 S CT=5 K @A
"RTN","MAGGTUX1",70,0)
 S CT=CT+1,@A@(CT)="================================================================="
"RTN","MAGGTUX1",71,0)
 S CT=CT+1,@A@(CT)="Start time                                    : "_$$FMTE^XLFDT($P(^XTMP(MAGN,0),"^",2))
"RTN","MAGGTUX1",72,0)
 S CT=CT+1,@A@(CT)="End time                                      : "_$P($G(^XTMP(MAGN,0,"END")),"^",1)
"RTN","MAGGTUX1",73,0)
 S CT=CT+1,@A@(CT)="Elapsed time                                  : "_$P($G(^XTMP(MAGN,0,"END")),"^",2)
"RTN","MAGGTUX1",74,0)
 S CT=CT+1,@A@(CT)="Last Image IEN missing a Type Index           : "_$P($G(^XTMP(MAGN,0,"NT")),"-")_"  "_$$FMTE^XLFDT($P($G(^XTMP(MAGN,0,"NT")),"-",2))
"RTN","MAGGTUX1",75,0)
 S CT=CT+1,@A@(CT)="Last Image IEN missing All Index              : "_$P($G(^XTMP(MAGN,0,"NI")),"-")_"  "_$$FMTE^XLFDT($P($G(^XTMP(MAGN,0,"NI")),"-",2))
"RTN","MAGGTUX1",76,0)
 S CT=CT+1,@A@(CT)="Total Checked:                                  "_$G(^XTMP(MAGN,"AATCHK"))
"RTN","MAGGTUX1",77,0)
 S CT=CT+1,@A@(CT)="   --   Entries Missing a Type Index    -- "
"RTN","MAGGTUX1",78,0)
 S CT=CT+1,@A@(CT)="Total Study Groups & Single Images            : "_+$G(^XTMP(MAGN,"AANT"))
"RTN","MAGGTUX1",79,0)
 S CT=CT+1,@A@(CT)="Total Group Images                            : "_$G(^XTMP(MAGN,"AAGRINT"))
"RTN","MAGGTUX1",80,0)
 S CT=CT+1,@A@(CT)="   --   Entries Missing all Index Terms -- "
"RTN","MAGGTUX1",81,0)
 S CT=CT+1,@A@(CT)="Total Study Groups & Single Images            : "_+$G(^XTMP(MAGN,"AANI"))
"RTN","MAGGTUX1",82,0)
 S CT=CT+1,@A@(CT)="Total Group Images                            : "_$G(^XTMP(MAGN,"AAGRINI"))
"RTN","MAGGTUX1",83,0)
 S CT=CT+1,@A@(CT)="   --   Other Index checks              -- "
"RTN","MAGGTUX1",84,0)
 S CT=CT+1,@A@(CT)="  Total Origin Index fixes                    : "_$G(^XTMP(MAGN,"AAOFX"))
"RTN","MAGGTUX1",85,0)
 S CT=CT+1,@A@(CT)="  CR -> CT fix                                : "_$G(^XTMP(MAGN,"AACRCT"))
"RTN","MAGGTUX1",86,0)
 S CT=CT+1,@A@(CT)="      Total DataBase Changes                 =  "_+$G(^XTMP(MAGN,"AAFIX"))
"RTN","MAGGTUX1",87,0)
 S CT=CT+1,@A@(CT)="                          "
"RTN","MAGGTUX1",88,0)
 S CT=CT+1,@A@(CT)="Also : Information gathered during Check/Fix"
"RTN","MAGGTUX1",89,0)
 S CT=CT+1,@A@(CT)=" - - - Generate Index Values and Merge  - - -  "
"RTN","MAGGTUX1",90,0)
 S CT=CT+1,@A@(CT)="  The Merged proc/spec not valid. No change.)    "_$G(^XTMP(MAGN,"AANOMERG"))
"RTN","MAGGTUX1",91,0)
 S CT=CT+1,@A@(CT)="  The Merged proc/spec was okay. Changed.        "_$G(^XTMP(MAGN,"AAOKMERG"))
"RTN","MAGGTUX1",92,0)
 S CT=CT+1,@A@(CT)=" - - - other - - - "
"RTN","MAGGTUX1",93,0)
 S CT=CT+1,@A@(CT)="  Total Groups of only 1 image     "_$G(^XTMP(MAGN,"AAGO1"))
"RTN","MAGGTUX1",94,0)
 S CT=CT+1,@A@(CT)="  Total Groups of 0 images         "_$G(^XTMP(MAGN,"AAGO0"))
"RTN","MAGGTUX1",95,0)
 S CT=CT+1,@A@(CT)="  Total Images w/No Patient        "_$G(^XTMP(MAGN,"AANOPAT"))
"RTN","MAGGTUX1",96,0)
 S CT=CT+1,@A@(CT)="  Total Images w/No 0 node         "_$G(^XTMP(MAGN,"AANOZ"))
"RTN","MAGGTUX1",97,0)
 S CT=CT+1,@A@(CT)="  Warnings: Generated Proc,Spec    "_$G(^XTMP(MAGN,"AAINVG"))
"RTN","MAGGTUX1",98,0)
 S CT=CT+1,@A@(CT)="  Warnings: Entered   Proc,Spec    "_$G(^XTMP(MAGN,"AAINVO"))
"RTN","MAGGTUX1",99,0)
 S IEN=$P(^XTMP(MAGN,0),"^",3)
"RTN","MAGGTUX1",100,0)
 I +IEN D
"RTN","MAGGTUX1",101,0)
 . S CT=CT+1,@A@(CT)=" "
"RTN","MAGGTUX1",102,0)
 . S CT=CT+1,@A@(CT)="Last IEN Checked: "_IEN
"RTN","MAGGTUX1",103,0)
 . S CT=CT+1,@A@(CT)="    Capture Date:     "_$$FMTE^XLFDT($P($G(^MAG(2005,IEN,2)),"^",1))
"RTN","MAGGTUX1",104,0)
 . Q
"RTN","MAGGTUX1",105,0)
 I IEN=0 D
"RTN","MAGGTUX1",106,0)
 . S CT=CT+1,@A@(CT)=" "
"RTN","MAGGTUX1",107,0)
 . S CT=CT+1,@A@(CT)="All Entries were checked"
"RTN","MAGGTUX1",108,0)
 . Q
"RTN","MAGGTUX1",109,0)
 S CT=CT+1,@A@(CT)=" "
"RTN","MAGGTUX1",110,0)
 S CT=CT+1,@A@(CT)="For a summary of the last Check or Fix process"
"RTN","MAGGTUX1",111,0)
 S CT=CT+1,@A@(CT)="Use the menu option: "
"RTN","MAGGTUX1",112,0)
 S CT=CT+1,@A@(CT)="   ""REV    Review a Summary of the last Fix or Check process."""
"RTN","MAGGTUX1",113,0)
 S CT=CT+1,@A@(CT)="================================================================="
"RTN","MAGGTUX1",114,0)
 Q
"RTN","MAGGTUX1",115,0)
 ;
"RTN","MAGGTUX1",116,0)
3 ; called from above.  Display the Spec - Proc problems
"RTN","MAGGTUX1",117,0)
 N MAIDX
"RTN","MAGGTUX1",118,0)
 S MAIDX="MAIDXG"
"RTN","MAGGTUX1",119,0)
 W !!,"Mismatch in the Generated Values of Specialty/SubSpec <-> Proc/Event",!
"RTN","MAGGTUX1",120,0)
 D 31
"RTN","MAGGTUX1",121,0)
 S MAIDX="MAIDXO"
"RTN","MAGGTUX1",122,0)
 W !!,"Mismatch in the User entered Values of Specialty/SubSpec <-> Proc/Event",!
"RTN","MAGGTUX1",123,0)
 D 31
"RTN","MAGGTUX1",124,0)
 Q
"RTN","MAGGTUX1",125,0)
31 ;
"RTN","MAGGTUX1",126,0)
 N IT,IS,IP
"RTN","MAGGTUX1",127,0)
 N I,SD,SUBO,I3,CT,J,MY
"RTN","MAGGTUX1",128,0)
 S IT="" F  S IT=$O(^XTMP(MAGN,MAIDX,IT)) Q:IT=""  D
"RTN","MAGGTUX1",129,0)
 . S IS="" F  S IS=$O(^XTMP(MAGN,MAIDX,IT,IS)) Q:IS=""  D
"RTN","MAGGTUX1",130,0)
 . . S IP="" F  S IP=$O(^XTMP(MAGN,MAIDX,IT,IS,IP)) Q:IP=""  D
"RTN","MAGGTUX1",131,0)
 . . . S CT=^(IP)
"RTN","MAGGTUX1",132,0)
 . . . K MY D VALTUX1^MAGGTUX3(.MY,IT,IS,IP) W !,CT,"  "
"RTN","MAGGTUX1",133,0)
 . . . S I="" F  S I=$O(MY(I)) Q:I=""  W ?7,MY(I),!
"RTN","MAGGTUX1",134,0)
 . . . I $L($O(^MAG(2005.85,IP,1,"B",""))) W ?35,"Valid specs: "
"RTN","MAGGTUX1",135,0)
 . . . S I3="" F  S I3=$O(^MAG(2005.85,IP,1,"B",I3)) Q:'I3  D
"RTN","MAGGTUX1",136,0)
 . . . . W !,?35,$P(^MAG(2005.84,I3,0),"^")
"RTN","MAGGTUX1",137,0)
 . . . . S SUBO=$P(^MAG(2005.84,I3,0),"^",3)
"RTN","MAGGTUX1",138,0)
 . . . . I SUBO W " <",$P(^MAG(2005.84,SUBO,0),"^"),">"
"RTN","MAGGTUX1",139,0)
 . . . . Q
"RTN","MAGGTUX1",140,0)
 . . . K ^TMP($J,"MAGDCT")
"RTN","MAGGTUX1",141,0)
 . . . S SD="" F  S SD=$O(^XTMP(MAGN,"MAIDSD",+IT,+IS,+IP,"SD",SD))  Q:SD=""  D
"RTN","MAGGTUX1",142,0)
 . . . . S ^TMP($J,"MAGDCT",^XTMP(MAGN,"MAIDSD",+IT,+IS,+IP,"SD",SD))="Desc:    "_SD
"RTN","MAGGTUX1",143,0)
 . . . S CT="" F J=1:1:5 S CT=$O(^TMP($J,"MAGDCT",CT),-1) Q:CT=""  W !,?7,CT,?15,"Desc:    ",^TMP($J,"MAGDCT",CT)
"RTN","MAGGTUX1",144,0)
 . . . W !
"RTN","MAGGTUX1",145,0)
 . . . Q
"RTN","MAGGTUX1",146,0)
 . . Q
"RTN","MAGGTUX1",147,0)
 . Q
"RTN","MAGGTUX1",148,0)
 Q
"RTN","MAGGTUX2")
0^21^B16893557
"RTN","MAGGTUX2",1,0)
MAGGTUX2 ;WIOFO/GEK Imaging utility to validate INDEX values.
"RTN","MAGGTUX2",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTUX2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUX2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUX2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUX2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUX2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUX2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUX2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUX2",11,0)
 ;; |                                                               |
"RTN","MAGGTUX2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUX2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUX2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUX2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUX2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUX2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX2",18,0)
 ;;
"RTN","MAGGTUX2",19,0)
 Q
"RTN","MAGGTUX2",20,0)
INIT ; If this is a continuation, initialize the variables.
"RTN","MAGGTUX2",21,0)
 ;W !,"MAGN ",MAGN
"RTN","MAGGTUX2",22,0)
 I $P(^MAG(2005,0),"^",3)>$P(^XTMP(MAGN,0),"^",4) D
"RTN","MAGGTUX2",23,0)
 . W !,"There are new images since this utility was last run."
"RTN","MAGGTUX2",24,0)
 S IEN=$P($G(^XTMP(MAGN,0)),"^",3)+1 I IEN=1 D  Q  ; Already run, so start over.
"RTN","MAGGTUX2",25,0)
 . S IEN="A"
"RTN","MAGGTUX2",26,0)
 . W !!,"All Images were checked as of "_$$FMTE^XLFDT($P(^XTMP(MAGN,0),"^",2))
"RTN","MAGGTUX2",27,0)
 . W !
"RTN","MAGGTUX2",28,0)
 . W !,"For a summary of the last Check or Fix process use the menu option: "
"RTN","MAGGTUX2",29,0)
 . W !,"     ""REV    Review a Summary of the last Fix or Check process."""
"RTN","MAGGTUX2",30,0)
 . W !,"  or continue to Re-Check the Image file."
"RTN","MAGGTUX2",31,0)
 W !,"Continue: where you left off, at IEN : ",IEN,"   Y/N   //N  :" R X:30
"RTN","MAGGTUX2",32,0)
 I "Nn"[$E(X) W !,"Starting over..." S IEN="A" Q
"RTN","MAGGTUX2",33,0)
 W !,"Continuing from IEN: ",IEN,!
"RTN","MAGGTUX2",34,0)
 S NT=$G(^XTMP(MAGN,"AANT"))
"RTN","MAGGTUX2",35,0)
 S NI=$G(^XTMP(MAGN,"AANI"))
"RTN","MAGGTUX2",36,0)
 S GRINT=$G(^XTMP(MAGN,"AAGRINT"))
"RTN","MAGGTUX2",37,0)
 S GRINI=$G(^XTMP(MAGN,"AAGRINI"))
"RTN","MAGGTUX2",38,0)
 S GO1=$G(^XTMP(MAGN,"AAGO1"))
"RTN","MAGGTUX2",39,0)
 S OFX=$G(^XTMP(MAGN,"AAOFX"))
"RTN","MAGGTUX2",40,0)
 S INVG=$G(^XTMP(MAGN,"AAINVG"))
"RTN","MAGGTUX2",41,0)
 S INVO=$G(^XTMP(MAGN,"AAINVO"))
"RTN","MAGGTUX2",42,0)
 S NOMERG=$G(^XTMP(MAGN,"AANOMERG"))
"RTN","MAGGTUX2",43,0)
 S OKMERG=$G(^XTMP(MAGN,"AAOKMERG"))
"RTN","MAGGTUX2",44,0)
 S FIX=$G(^XTMP(MAGN,"AAFIX"))
"RTN","MAGGTUX2",45,0)
 S CRCT=$G(^XTMP(MAGN,"AACRCT"))
"RTN","MAGGTUX2",46,0)
 Q
"RTN","MAGGTUX2",47,0)
TRK2 ; Keep a Count of Short Desc, transpose to compact the list.
"RTN","MAGGTUX2",48,0)
 S SD=$P(N2,"^",4)
"RTN","MAGGTUX2",49,0)
 S SD=$TR(SD,"0123456789+-/\.,~`!@#$%^&*()_-={}[]|:;""'<>?","")
"RTN","MAGGTUX2",50,0)
 S SD=$TR(SD,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MAGGTUX2",51,0)
 F  Q:SD'["  "  S SD=$P(SD,"  ",1)_" "_$P(SD,"  ",2,999)
"RTN","MAGGTUX2",52,0)
 S SD=$$TRIM^XLFSTR(SD,"LR")
"RTN","MAGGTUX2",53,0)
 S:SD="" SD="[NO SHORT DESC]"
"RTN","MAGGTUX2",54,0)
 S ^XTMP(MAGN,"MAIDSD",+IXT,+IXS,+IXP,"SD",SD)=$G(^XTMP(MAGN,"MAIDSD",+IXT,+IXS,+IXP,"SD",SD))+1
"RTN","MAGGTUX2",55,0)
 Q
"RTN","MAGGTUX2",56,0)
CHKCR(N40,IEN) ; Image has Procedure/Event CR, see if it should be CT.
"RTN","MAGGTUX2",57,0)
 N INDXD
"RTN","MAGGTUX2",58,0)
 D GENIEN^MAGXCVI(IEN,.INDXD)
"RTN","MAGGTUX2",59,0)
 I $P(INDXD,"^",4)'=RADCT Q
"RTN","MAGGTUX2",60,0)
 S CRCT=CRCT+1
"RTN","MAGGTUX2",61,0)
 I COMMIT D
"RTN","MAGGTUX2",62,0)
 . S FIX=FIX+1
"RTN","MAGGTUX2",63,0)
 . S $P(^MAG(2005,IEN,40),"^",4)=RADCT
"RTN","MAGGTUX2",64,0)
 . D ENTRY^MAGLOG("INDEX-CR",DUZ,IEN,"TUX59",MDFN,1)
"RTN","MAGGTUX2",65,0)
 . Q
"RTN","MAGGTUX2",66,0)
 Q
"RTN","MAGGTUX2",67,0)
CHK45(N40,IEN) ;  Check the Origin Set of Codes.
"RTN","MAGGTUX2",68,0)
 ; N40 passed by Ref, it may be changed in here.
"RTN","MAGGTUX2",69,0)
 N ORG,NORG
"RTN","MAGGTUX2",70,0)
 S ORG=$P(N40,"^",6)
"RTN","MAGGTUX2",71,0)
 I "VNFD"[ORG Q  ; Valid
"RTN","MAGGTUX2",72,0)
 ; get it's first Char.
"RTN","MAGGTUX2",73,0)
 S $P(N40,"^",6)=$S("VNFD"[$E(ORG):$E(ORG),1:"")
"RTN","MAGGTUX2",74,0)
 S OFX=OFX+1
"RTN","MAGGTUX2",75,0)
 I COMMIT D
"RTN","MAGGTUX2",76,0)
 . S FIX=FIX+1
"RTN","MAGGTUX2",77,0)
 . S ^MAG(2005,IEN,40)=N40
"RTN","MAGGTUX2",78,0)
 . D ENTRY^MAGLOG("INDEX-45",DUZ,IEN,"TUX59",MDFN,1)
"RTN","MAGGTUX2",79,0)
 . Q
"RTN","MAGGTUX2",80,0)
 Q
"RTN","MAGGTUX2",81,0)
VALIND ;Validate the interdependency between Type, Spec, Proc/Event for Entries that have a TYpe.
"RTN","MAGGTUX2",82,0)
 K MRY I $$VALTUX2^MAGGTUX3(.MRY,IXT,IXS,IXP) Q  ; Valid Type <-> Spec <-> Proc
"RTN","MAGGTUX2",83,0)
 ; Keep list of Generated or User entered invalid Type<->Spec<->Proc
"RTN","MAGGTUX2",84,0)
 I $D(^MAGIXCVT(2006.96,IEN)) S ^XTMP(MAGN,"MAIDXG",+IXT,+IXS,+IXP)=$G(^XTMP(MAGN,"MAIDXG",+IXT,+IXS,+IXP))+1,INVG=INVG+1
"RTN","MAGGTUX2",85,0)
 E  S ^XTMP(MAGN,"MAIDXO",+IXT,+IXS,+IXP)=$G(^XTMP(MAGN,"MAIDXO",+IXT,+IXS,+IXP))+1,INVO=INVO+1
"RTN","MAGGTUX2",86,0)
 D TRK2
"RTN","MAGGTUX2",87,0)
 Q
"RTN","MAGGTUX2",88,0)
VALMERG(O40,N40) ; N40 Passed by Ref.
"RTN","MAGGTUX2",89,0)
 ; if the merged Proc-Spec in New 40 Node (N40) are not valid,
"RTN","MAGGTUX2",90,0)
 ; Then just take the TYPE, and revert back to old O40 Spec and Proc
"RTN","MAGGTUX2",91,0)
 K MRY
"RTN","MAGGTUX2",92,0)
 I $$VALTUX2^MAGGTUX3(.MRY,$P(N40,"^",3),$P(N40,"^",5),$P(N40,"^",4)) S OKMERG=OKMERG+1 Q  ; Merged values are valid
"RTN","MAGGTUX2",93,0)
 S NOMERG=NOMERG+1
"RTN","MAGGTUX2",94,0)
 S $P(N40,"^",4,5)=$P(O40,"^",4,5) ; Put the Spec and Proc back to original way.
"RTN","MAGGTUX2",95,0)
 Q
"RTN","MAGGTUX3")
0^22^B20033133
"RTN","MAGGTUX3",1,0)
MAGGTUX3 ;WIOFO/GEK Imaging utility to validate INDEX values.
"RTN","MAGGTUX3",2,0)
 ;;3.0;IMAGING;**59**;Nov 27, 2007;Build 20
"RTN","MAGGTUX3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUX3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUX3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUX3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUX3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUX3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUX3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUX3",11,0)
 ;; |                                                               |
"RTN","MAGGTUX3",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUX3",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUX3",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUX3",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUX3",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUX3",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX3",18,0)
 ;;
"RTN","MAGGTUX3",19,0)
 Q
"RTN","MAGGTUX3",20,0)
 ; VALTUX1 and VALTUX2 : 
"RTN","MAGGTUX3",21,0)
 ; Copied VALINDEX from MAGGSIV1 and modified for use with IEN's as input
"RTN","MAGGTUX3",22,0)
 ; for the TYPE SPEC PROC parameters.  Running time of utility is 
"RTN","MAGGTUX3",23,0)
 ; reduced 10 fold.
"RTN","MAGGTUX3",24,0)
 ; VALTUX2 called from CHECK and FIX in MAGGTUX.
"RTN","MAGGTUX3",25,0)
 ;    it sets ^XTMP global for later review.
"RTN","MAGGTUX3",26,0)
 ; VALTUX1 called From REVIEW, to produce the Readable Output.
"RTN","MAGGTUX3",27,0)
 ;
"RTN","MAGGTUX3",28,0)
VALTUX1(MAGRY,TYPE,SPEC,PROC) ; Validate the interdependency of Index Terms.
"RTN","MAGGTUX3",29,0)
 ; MAGRY is the return array 
"RTN","MAGGTUX3",30,0)
 ; MAGRY(0)="1^Okay"  or   "0^error message"
"RTN","MAGGTUX3",31,0)
 ; MAGRY(1..n)  Information about the Type,Spec and Proc
"RTN","MAGGTUX3",32,0)
 ; 
"RTN","MAGGTUX3",33,0)
 ; - Validate the Procedure/Event <-> Specialty/SubSpecialty interdependency
"RTN","MAGGTUX3",34,0)
 ; - Assure the TYPE is a Clinical TYPE.
"RTN","MAGGTUX3",35,0)
 ; - Assure all are Active.
"RTN","MAGGTUX3",36,0)
 ; 
"RTN","MAGGTUX3",37,0)
 N CLS,ARR,TYX,PRX,SPX,OK
"RTN","MAGGTUX3",38,0)
 K MAGRY
"RTN","MAGGTUX3",39,0)
 S TYPE=$G(TYPE),PROC=$G(PROC),SPEC=$G(SPEC)
"RTN","MAGGTUX3",40,0)
 I ((PROC]"")!(SPEC]"")) I TYPE="" S MAGRY(0)="0^Type is required." Q 0
"RTN","MAGGTUX3",41,0)
 ;
"RTN","MAGGTUX3",42,0)
 I TYPE D  I 'OK S MAGRY(0)=OK Q 0
"RTN","MAGGTUX3",43,0)
 . S OK=1,TYX=TYPE_","
"RTN","MAGGTUX3",44,0)
 . K ARR D GETS^DIQ(2005.83,TYX,".01;1;2","EI","ARR")
"RTN","MAGGTUX3",45,0)
 . S MAGRY(1)="Type - Class          : "_ARR(2005.83,TYX,.01,"E")_" - "_ARR(2005.83,TYX,1,"E")
"RTN","MAGGTUX3",46,0)
 . I $L(ARR(2005.83,TYX,2,"E")) S MAGRY(1)=MAGRY(1)_" - "_ARR(2005.83,TYX,2,"E")
"RTN","MAGGTUX3",47,0)
 . I ARR(2005.83,TYX,2,"I")="I" S OK="0^Type is Inactive"
"RTN","MAGGTUX3",48,0)
 . Q
"RTN","MAGGTUX3",49,0)
 ;
"RTN","MAGGTUX3",50,0)
 I SPEC D  I 'OK S MAGRY(0)=OK Q 0
"RTN","MAGGTUX3",51,0)
 . S OK=1,SPX=SPEC_","
"RTN","MAGGTUX3",52,0)
 . K ARR D GETS^DIQ(2005.84,SPX,".01;2;4","EI","ARR")
"RTN","MAGGTUX3",53,0)
 . S MAGRY(2)="Specialty/SubSpecialty: "_ARR(2005.84,SPX,.01,"E")
"RTN","MAGGTUX3",54,0)
 . I $L(ARR(2005.84,SPX,4,"E")) S MAGRY(2)=MAGRY(2)_" - "_ARR(2005.84,SPX,4,"E")
"RTN","MAGGTUX3",55,0)
 . I $L(ARR(2005.84,SPX,2,"E")) S MAGRY(2)=MAGRY(2)_" <"_ARR(2005.84,SPX,2,"E")_">"
"RTN","MAGGTUX3",56,0)
 . I ARR(2005.84,SPX,4,"I")="I" S OK="0^Specialty is Inactive"
"RTN","MAGGTUX3",57,0)
 . Q
"RTN","MAGGTUX3",58,0)
 ;
"RTN","MAGGTUX3",59,0)
 I PROC D  I 'OK S MAGRY(0)=OK Q 0
"RTN","MAGGTUX3",60,0)
 . S OK=1,PRX=PROC_","
"RTN","MAGGTUX3",61,0)
 . K ARR D GETS^DIQ(2005.85,PRX,".01;4","EI","ARR")
"RTN","MAGGTUX3",62,0)
 . S MAGRY(4)="Procedure/Event       : "_$$GET1^DIQ(2005.85,PROC,.01)
"RTN","MAGGTUX3",63,0)
 . I $L(ARR(2005.85,PRX,4,"E")) S MAGRY(4)=MAGRY(4)_" - "_ARR(2005.85,PRX,4,"E")
"RTN","MAGGTUX3",64,0)
 . I ARR(2005.85,PRX,4,"I")="I" S OK="0^Procedure is Inactive"
"RTN","MAGGTUX3",65,0)
 . Q
"RTN","MAGGTUX3",66,0)
 ;
"RTN","MAGGTUX3",67,0)
 ; If PROC and SPEC are "", then Quit, any TYPE by itself is valid
"RTN","MAGGTUX3",68,0)
 I (PROC=""),(SPEC="") S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGTUX3",69,0)
 ; Here, TYPE has to be Clin.
"RTN","MAGGTUX3",70,0)
 S CLS=$$GET1^DIQ(2005.83,TYPE,1,"","MAGTAR") I $E(CLS,1,5)="ADMIN" D  Q 0
"RTN","MAGGTUX3",71,0)
 . S MAGRY(0)="0^The Type Index is Administrative, it has to be Clinical."
"RTN","MAGGTUX3",72,0)
 I (PROC="")!(SPEC="") S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGTUX3",73,0)
 ; we get here, we have to validate the interdependency of SPEC <-> PROC.
"RTN","MAGGTUX3",74,0)
 I '$O(^MAG(2005.85,PROC,1,0)) S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGTUX3",75,0)
 I '$D(^MAG(2005.85,PROC,1,"B",SPEC)) D  Q 0
"RTN","MAGGTUX3",76,0)
 . S MAGRY(0)="0^Invalid Association between Spec/SubSpec and Proc/Event"
"RTN","MAGGTUX3",77,0)
 . Q
"RTN","MAGGTUX3",78,0)
 S MAGRY(0)="1^Okay"
"RTN","MAGGTUX3",79,0)
 Q 1
"RTN","MAGGTUX3",80,0)
VALTUX2(MAGRY,TYPE,SPEC,PROC) ; Validate the interdependency of Index Terms.
"RTN","MAGGTUX3",81,0)
 ; MAGRY is the return array 
"RTN","MAGGTUX3",82,0)
 ; MAGRY(0)="1^Okay"  or   "0^error message"
"RTN","MAGGTUX3",83,0)
 ; MAGRY(1..n)  Information about the Type,Spec and Proc
"RTN","MAGGTUX3",84,0)
 ; 
"RTN","MAGGTUX3",85,0)
 ; - Validate the Procedure/Event <-> Specialty/SubSpecialty interdependency
"RTN","MAGGTUX3",86,0)
 ; - Assure the TYPE is a Clinical TYPE.
"RTN","MAGGTUX3",87,0)
 ; - Assure all are Active.
"RTN","MAGGTUX3",88,0)
 K MAGRY
"RTN","MAGGTUX3",89,0)
 S TYPE=$G(TYPE),PROC=$G(PROC),SPEC=$G(SPEC)
"RTN","MAGGTUX3",90,0)
 I ((PROC]"")!(SPEC]"")) I TYPE="" S MAGRY(0)="0^Type is required." Q 0
"RTN","MAGGTUX3",91,0)
 ; TYPE is required, but not enforcing yet.  All vendors are not sending
"RTN","MAGGTUX3",92,0)
 I TYPE I $P(^MAG(2005.83,TYPE,0),"^",3)="I" S MAGRY(0)="0^Type is Inactive" Q 0
"RTN","MAGGTUX3",93,0)
 ;
"RTN","MAGGTUX3",94,0)
 I SPEC I $P(^MAG(2005.84,SPEC,0),"^",4)="I" S MAGRY(0)="0^Specialty is Inactive" Q 0
"RTN","MAGGTUX3",95,0)
 ;
"RTN","MAGGTUX3",96,0)
 I PROC I $P(^MAG(2005.85,PROC,0),"^",3)="I" S MAGRY(0)="0^Procedure is Inactive" Q 0
"RTN","MAGGTUX3",97,0)
 ;
"RTN","MAGGTUX3",98,0)
 ; If PROC and SPEC are "", then Quit, any TYPE by itself is valid
"RTN","MAGGTUX3",99,0)
 I (PROC=""),(SPEC="") S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGTUX3",100,0)
 ; Here, TYPE has to be Clin.
"RTN","MAGGTUX3",101,0)
 I $P(^MAG(2005.83,TYPE,0),"^",2)>7 S MAGRY(0)="0^The Type Index is Administrative, it has to be Clinical." Q 0
"RTN","MAGGTUX3",102,0)
 I (PROC="")!(SPEC="") S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGTUX3",103,0)
 ; we get here, we have to validate the interdependency of SPEC <-> PROC.
"RTN","MAGGTUX3",104,0)
 ; 
"RTN","MAGGTUX3",105,0)
 ; if PROC is not pointing to any SPEC's, then it is okay for all
"RTN","MAGGTUX3",106,0)
 I '$O(^MAG(2005.85,PROC,1,0)) S MAGRY(0)="1^Okay" Q 1
"RTN","MAGGTUX3",107,0)
 ; if PROC doesn't point to SPEC - it is Invalid.
"RTN","MAGGTUX3",108,0)
 I '$D(^MAG(2005.85,PROC,1,"B",SPEC)) D  Q 0
"RTN","MAGGTUX3",109,0)
 . S MAGRY(0)="0^Invalid Association between Spec/SubSpec and Proc/Event"
"RTN","MAGGTUX3",110,0)
 . Q
"RTN","MAGGTUX3",111,0)
 S MAGRY(0)="1^Okay"
"RTN","MAGGTUX3",112,0)
 Q 1
"RTN","MAGIPS59")
0^26^B30034575
"RTN","MAGIPS59",1,0)
MAGIPS59 ;Post init routine to queue site activity at install ; 16 Feb 2004  2:41 PM
"RTN","MAGIPS59",2,0)
 ;;3.0;IMAGING;**59**;Mar 27, 2007;Build 20
"RTN","MAGIPS59",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIPS59",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPS59",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIPS59",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIPS59",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIPS59",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIPS59",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIPS59",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIPS59",11,0)
 ;; |                                                               |
"RTN","MAGIPS59",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIPS59",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIPS59",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIPS59",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIPS59",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIPS59",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPS59",18,0)
 ;;
"RTN","MAGIPS59",19,0)
 Q
"RTN","MAGIPS59",20,0)
POST ;
"RTN","MAGIPS59",21,0)
 ; create and send the site installation message
"RTN","MAGIPS59",22,0)
 D VERCHKON ; Turn on Version Checking
"RTN","MAGIPS59",23,0)
 D CR ; Run the Cross Reference on Field #2 SPEC LEVEL of File #2005.84
"RTN","MAGIPS59",24,0)
 ; Check for and display Users that are assigned the MAG WINDOWS Option
"RTN","MAGIPS59",25,0)
 ; but do not have either MAGDISP CLIN or MAGDISP ADMIN 
"RTN","MAGIPS59",26,0)
 D CHKKEY^MAGGTU9
"RTN","MAGIPS59",27,0)
 D REMTASK^MAGQE4
"RTN","MAGIPS59",28,0)
 D STTASK^MAGQE4
"RTN","MAGIPS59",29,0)
 D INS(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGIPS59",30,0)
 D NEWRPC ; Add RPC's to the OPTION: MAG WINDOWS 
"RTN","MAGIPS59",31,0)
 D FIXTASK ; Task off the FIX^MAGGTUX process. 
"RTN","MAGIPS59",32,0)
 Q
"RTN","MAGIPS59",33,0)
NEWRPC ; Add new RPC's to MAG WINDOWS Option.
"RTN","MAGIPS59",34,0)
 D ADDRPC("MAG3 TIU CREATE ADDENDUM","MAG WINDOWS")
"RTN","MAGIPS59",35,0)
 D ADDRPC("MAG3 TIU LONG LIST OF TITLES","MAG WINDOWS")
"RTN","MAGIPS59",36,0)
 D ADDRPC("MAG3 TIU MODIFY NOTE","MAG WINDOWS")
"RTN","MAGIPS59",37,0)
 D ADDRPC("MAG3 TIU NEW","MAG WINDOWS")
"RTN","MAGIPS59",38,0)
 D ADDRPC("MAG3 TIU SIGN RECORD","MAG WINDOWS")
"RTN","MAGIPS59",39,0)
 D ADDRPC("MAG4 INDEX GET EVENT","MAG WINDOWS")
"RTN","MAGIPS59",40,0)
 D ADDRPC("MAG4 INDEX GET SPECIALTY","MAG WINDOWS")
"RTN","MAGIPS59",41,0)
 D ADDRPC("MAG4 INDEX GET TYPE","MAG WINDOWS")
"RTN","MAGIPS59",42,0)
 D ADDRPC("MAGG PAT INFO","MAG WINDOWS")
"RTN","MAGIPS59",43,0)
 D ADDRPC("TIU AUTHORIZATION","MAG WINDOWS")
"RTN","MAGIPS59",44,0)
 D ADDRPC("TIU LOAD BOILERPLATE TEXT","MAG WINDOWS")
"RTN","MAGIPS59",45,0)
 D ADDRPC("TIU IS THIS A CONSULT?","MAG WINDOWS")
"RTN","MAGIPS59",46,0)
 D ADDRPC("GMRC LIST CONSULT REQUESTS","MAG WINDOWS")
"RTN","MAGIPS59",47,0)
 D ADDRPC("MAG4 VERSION STATUS","MAG WINDOWS")
"RTN","MAGIPS59",48,0)
 D ADDRPC("MAGG IS DOC CLASS","MAG WINDOWS")
"RTN","MAGIPS59",49,0)
 Q 
"RTN","MAGIPS59",50,0)
 ; We add RPC to MAG WINDOWS Option this way instead of sending Option : MAG WINDOWS
"RTN","MAGIPS59",51,0)
 ; If we send MAG WINDOWS Option, the last one installed will overwrite others.
"RTN","MAGIPS59",52,0)
 ; ADDRPC copied from Patch 51, added the call "D MES^XPDUTL(" instead of "W !"
"RTN","MAGIPS59",53,0)
ADDRPC(RPCNAME,OPTNAME) ;
"RTN","MAGIPS59",54,0)
 N DA,DIC
"RTN","MAGIPS59",55,0)
 S DIC="^DIC(19,",DIC(0)="",X=OPTNAME D ^DIC
"RTN","MAGIPS59",56,0)
 I Y<0 D  Q
"RTN","MAGIPS59",57,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGIPS59",58,0)
 . D MES^XPDUTL("Cannot find Option: """_OPTNAME_""".")
"RTN","MAGIPS59",59,0)
 . Q
"RTN","MAGIPS59",60,0)
 I '$D(^XWB(8994,"B",RPCNAME)) D  Q
"RTN","MAGIPS59",61,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGIPS59",62,0)
 . D MES^XPDUTL("Cannot find RPC: """_RPCNAME_""".")
"RTN","MAGIPS59",63,0)
 . Q
"RTN","MAGIPS59",64,0)
 S DA(1)=+Y
"RTN","MAGIPS59",65,0)
 S DIC=DIC_DA(1)_",""RPC"","
"RTN","MAGIPS59",66,0)
 S DIC(0)="L" ; LAYGO should be allowed here
"RTN","MAGIPS59",67,0)
 S X=RPCNAME
"RTN","MAGIPS59",68,0)
 D ^DIC
"RTN","MAGIPS59",69,0)
 I Y<0 D  Q
"RTN","MAGIPS59",70,0)
 . D MES^XPDUTL("Error Adding RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGIPS59",71,0)
 . Q
"RTN","MAGIPS59",72,0)
 Q
"RTN","MAGIPS59",73,0)
CR ; Run the Cross reference on Field #2 SPEC LEVEL 
"RTN","MAGIPS59",74,0)
 ; of File #2005.84 IMAGE INDEX FOR SPECIALTY/SUBSPECIALTY
"RTN","MAGIPS59",75,0)
 N DIK
"RTN","MAGIPS59",76,0)
 S DIK="^MAG(2005.84,"
"RTN","MAGIPS59",77,0)
 D IXALL2^DIK ;  Kill all cross references.
"RTN","MAGIPS59",78,0)
 D IXALL^DIK ; Set all cross references.
"RTN","MAGIPS59",79,0)
 Q
"RTN","MAGIPS59",80,0)
VERCHKON ; Turn on Version Checking at the Sites.
"RTN","MAGIPS59",81,0)
 ; We aren't forcing it to stay on, sites can turn it back off.
"RTN","MAGIPS59",82,0)
 N MAGIEN,MAGSITE,VERCHK,MSG
"RTN","MAGIPS59",83,0)
 S MAGIEN=0
"RTN","MAGIPS59",84,0)
 F  S MAGIEN=$O(^MAG(2006.1,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGIPS59",85,0)
 . S MSG="is already ON, no action taken"
"RTN","MAGIPS59",86,0)
 . S MAGSITE=$P($G(^MAG(2006.1,MAGIEN,0)),"^",1)
"RTN","MAGIPS59",87,0)
 . S VERCHK=$P($G(^MAG(2006.1,MAGIEN,"KEYS")),"^",5)
"RTN","MAGIPS59",88,0)
 . I 'VERCHK S $P(^MAG(2006.1,MAGIEN,"KEYS"),"^",5)=1 S MSG="has been turned ON"
"RTN","MAGIPS59",89,0)
 . D MES^XPDUTL("Patch 59 is turning Version Checking ON...")
"RTN","MAGIPS59",90,0)
 . D MES^XPDUTL("Version Checking "_MSG_" for Site: "_MAGSITE)
"RTN","MAGIPS59",91,0)
 Q
"RTN","MAGIPS59",92,0)
FIXTASK ; This will task off the FIX^MAGGTUX process that will fix the 
"RTN","MAGIPS59",93,0)
 ; Invalid INDEX VALUES in the Image File.
"RTN","MAGIPS59",94,0)
 N ANS
"RTN","MAGIPS59",95,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","MAGIPS59",96,0)
 S ZTRTN="TASK^MAGGTUX",ZTDESC="VALIDATE IMAGE INDEX VALUES",ZTIO=""
"RTN","MAGIPS59",97,0)
 S ZTSAVE("COMMIT")=1,ZTSAVE("MAGN")="MAGGTUX",ZTSAVE("QUEUED")=1
"RTN","MAGIPS59",98,0)
 D ^%ZTLOAD
"RTN","MAGIPS59",99,0)
 D MES^XPDUTL("The Utility to Fix invalid Index Values in the entire")
"RTN","MAGIPS59",100,0)
 D MES^XPDUTL("Image File (#2005) has been Queued as TASK# : "_ZTSK)
"RTN","MAGIPS59",101,0)
 Q
"RTN","MAGIPS59",102,0)
INS(XP,DUZ,DATE,IDA) ;
"RTN","MAGIPS59",103,0)
 N CT,CNT,COM,D,D0,D1,D2,DDATE,DG,DIC,DICR,DIW,MAGMSG,ST,XMID,XMY
"RTN","MAGIPS59",104,0)
 D GETENV^%ZOSV
"RTN","MAGIPS59",105,0)
 S CNT=0
"RTN","MAGIPS59",106,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGIPS59",107,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGIPS59",108,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XP
"RTN","MAGIPS59",109,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XP)
"RTN","MAGIPS59",110,0)
 S ST=$$GET1^DIQ(9.7,IDA,11,"I")
"RTN","MAGIPS59",111,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGIPS59",112,0)
 S CT=$$GET1^DIQ(9.7,IDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT
"RTN","MAGIPS59",113,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGIPS59",114,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGIPS59",115,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGIPS59",116,0)
 S COM=$$GET1^DIQ(9.7,IDA,6,"I")
"RTN","MAGIPS59",117,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_COM
"RTN","MAGIPS59",118,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_DATE
"RTN","MAGIPS59",119,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$$GET1^DIQ(9.7,IDA,9,"E")
"RTN","MAGIPS59",120,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$$GET1^DIQ(9.7,IDA,.01,"E")
"RTN","MAGIPS59",121,0)
 S DDATE=$$GET1^DIQ(9.7,IDA,51,"I")
"RTN","MAGIPS59",122,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGIPS59",123,0)
 S XMSUB=XP_" INSTALLATION"
"RTN","MAGIPS59",124,0)
 S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGIPS59",125,0)
 S XMY(XMID)=""
"RTN","MAGIPS59",126,0)
 S XMY("G.MAG SERVER")=""
"RTN","MAGIPS59",127,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGIPS59",128,0)
 S XMSUB=$E(XMSUB,1,63)
"RTN","MAGIPS59",129,0)
 D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ,)
"RTN","MAGIPS59",130,0)
 I $G(XMERR) M XMERR=^TMP("XMERR",$J) S $EC=",U13-Cannot send MailMan message,"
"RTN","MAGIPS59",131,0)
 Q
"RTN","MAGLOG")
0^40^B8166700
"RTN","MAGLOG",1,0)
MAGLOG ;WOIFO/RED,SRR,MLH - Log image access ; [ 06/20/2001 08:57 ]
"RTN","MAGLOG",2,0)
 ;;3.0;IMAGING;**17,8,20,59**;Nov 27, 2007;Build 20
"RTN","MAGLOG",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGLOG",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGLOG",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGLOG",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGLOG",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGLOG",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGLOG",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGLOG",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGLOG",11,0)
 ;; |                                                               |
"RTN","MAGLOG",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGLOG",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGLOG",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGLOG",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGLOG",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGLOG",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGLOG",18,0)
 ;;
"RTN","MAGLOG",19,0)
 ; CALL WITH:
"RTN","MAGLOG",20,0)
 ; MAGIMT = TYPE OF ACCESS
"RTN","MAGLOG",21,0)
 ; DUZ = USER NO.
"RTN","MAGLOG",22,0)
 ; MAGO = IMAGE SUBSCRIPT NO.
"RTN","MAGLOG",23,0)
 ; MAGPACK = USER INTERFACE PACKAGE
"RTN","MAGLOG",24,0)
 ; MAGDFN = PATIENT NO.
"RTN","MAGLOG",25,0)
 ; MAGCT = TOTAL IMAGE COUNT
"RTN","MAGLOG",26,0)
 ; MAGAD = ADDITIONAL DATA
"RTN","MAGLOG",27,0)
ENTRY(MAGIMT,MAGDUZ,MAGO,MAGPACK,MAGDFN,MAGCT,MAGAD) ;
"RTN","MAGLOG",28,0)
 I '$D(MAGSYS) S MAGSYS=^%ZOSF("VOL")
"RTN","MAGLOG",29,0)
 N MAGC,MSYS
"RTN","MAGLOG",30,0)
 S MSYS=$$UP^XLFSTR(MAGSYS)
"RTN","MAGLOG",31,0)
 I (MSYS["UNKNOWN"),($D(MAGJOB("WRKSIEN"))) S MSYS=$P(^MAG(2006.81,MAGJOB("WRKSIEN"),0),"^",1)
"RTN","MAGLOG",32,0)
 L +^MAG(2006.95,0):10 E  Q  ;entries were being overwritten.
"RTN","MAGLOG",33,0)
 S MAGC=$P(^MAG(2006.95,0),"^",3)+1
"RTN","MAGLOG",34,0)
 S $P(^MAG(2006.95,0),"^",3,4)=MAGC_"^"_MAGC
"RTN","MAGLOG",35,0)
 L -^MAG(2006.95,0)
"RTN","MAGLOG",36,0)
 D NOW^%DTC ;gives us % (now)
"RTN","MAGLOG",37,0)
 ;   FLD #'s            .01         1                2          3          4             5         6       7          8               9  
"RTN","MAGLOG",38,0)
 S ^MAG(2006.95,MAGC,0)=MAGC_"^"_$G(MAGIMT)_"^"_$G(MAGDUZ)_"^"_MAGO_"^"_MAGPACK_"^"_MSYS_"^"_%_"^"_MAGDFN_"^"_MAGCT_"^"_+$G(MAGJOB("SESSION"))
"RTN","MAGLOG",39,0)
 I $D(MAGAD) S ^MAG(2006.95,MAGC,100)=MAGAD
"RTN","MAGLOG",40,0)
 S ^MAG(2006.95,"B",MAGC,MAGC)=""
"RTN","MAGLOG",41,0)
 D ACCESS(MAGO) ; This should be here.  Can now search 2006.95 from "Last Access Date" to "Capture Date" to
"RTN","MAGLOG",42,0)
 ; get all Actions logged. We Don't have to search entire Image File.
"RTN","MAGLOG",43,0)
 I $G(MAGJOB("SESSION")) S ^MAG(2006.95,"AS",+$G(MAGJOB("SESSION")),MAGC)=""
"RTN","MAGLOG",44,0)
 Q
"RTN","MAGLOG",45,0)
ACCESS(MAGO) ; Update Field "Last Access Date" in Image File.
"RTN","MAGLOG",46,0)
 Q:'$G(MAGO)
"RTN","MAGLOG",47,0)
 I '$D(^MAG(2005,MAGO,0)) D  Q
"RTN","MAGLOG",48,0)
 . I $D(^MAG(2005.1,MAGO,0)) S $P(^MAG(2005.1,MAGO,0),"^",9)=$$NOW^XLFDT
"RTN","MAGLOG",49,0)
 . Q
"RTN","MAGLOG",50,0)
 S $P(^MAG(2005,MAGO,0),"^",9)=$$NOW^XLFDT
"RTN","MAGLOG",51,0)
 Q
"RTN","MAGSIXG1")
0^14^B48513335
"RTN","MAGSIXG1",1,0)
MAGSIXG1 ;WOIFO/EdM/GEK/SEB - RPCs for Document Imaging ; 04/29/2002  16:15
"RTN","MAGSIXG1",2,0)
 ;;3.0;IMAGING;**8,48,59**;Nov 27, 2007;Build 20
"RTN","MAGSIXG1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSIXG1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXG1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXG1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXG1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXG1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXG1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXG1",11,0)
 ;; |                                                               |
"RTN","MAGSIXG1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXG1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXG1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXG1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXG1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXG1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",18,0)
 ;;
"RTN","MAGSIXG1",19,0)
 Q
"RTN","MAGSIXG1",20,0)
 ;
"RTN","MAGSIXG1",21,0)
 ; OUT  =  Output array.  
"RTN","MAGSIXG1",22,0)
 ;   OUT(0)        ->  1|0 ^ message
"RTN","MAGSIXG1",23,0)
 ;   OUT(1)        ->  Field Headers 
"RTN","MAGSIXG1",24,0)
 ;       '^' delimited list of column headers used in cMagListView
"RTN","MAGSIXG1",25,0)
 ;   OUT(2..n) ->  each line is information on 1 image.
"RTN","MAGSIXG1",26,0)
 ;       piece '|' 1 is '^' delimited data to be displayed in columns.
"RTN","MAGSIXG1",27,0)
 ;       piece '|' 2  is data that is used internally by App.
"RTN","MAGSIXG1",28,0)
 ;       
"RTN","MAGSIXG1",29,0)
 ; PKG   - Package fld 40
"RTN","MAGSIXG1",30,0)
 ; CLS   - Class   fld 41
"RTN","MAGSIXG1",31,0)
 ; TYPE  - Type    fld 42
"RTN","MAGSIXG1",32,0)
 ; EVENT - Proc/Event         fld 43
"RTN","MAGSIXG1",33,0)
 ; SPEC  - Spec/SubSpecialty  fld 44
"RTN","MAGSIXG1",34,0)
 ; FROM  - Date to search from
"RTN","MAGSIXG1",35,0)
 ; UNTIL - Date to search to
"RTN","MAGSIXG1",36,0)
 ; ORIGIN - Origin fld 45
"RTN","MAGSIXG1",37,0)
 ; DATA  -  Future
"RTN","MAGSIXG1",38,0)
 ; FLGS  -  Future  
"RTN","MAGSIXG1",39,0)
 ; 
"RTN","MAGSIXG1",40,0)
PGI(OUT,DFN,PKG,CLS,TYPE,EVENT,SPEC,FROM,UNTIL,ORIGIN,DATA,FLGS) ;RPC [MAG4 PAT GET IMAGES]
"RTN","MAGSIXG1",41,0)
 ; Get Images for Patient.  
"RTN","MAGSIXG1",42,0)
 ; New call in Patch 3.0.8 uses Image Filter to get list of images
"RTN","MAGSIXG1",43,0)
 N C,DAT1,DAT2,E,IMAGE,N,OK,P,RDT,RESULT,S,T,V,CT,PKG1,CLS1,TYPE1,EVENT1,SPEC1,FLTX,FLTY,CAPDUZ,CAPDT,MAGVR,FNL
"RTN","MAGSIXG1",44,0)
 S FROM=$G(FROM),UNTIL=$G(UNTIL)
"RTN","MAGSIXG1",45,0)
 D REVDT(FROM,UNTIL,.DAT1,.DAT2)
"RTN","MAGSIXG1",46,0)
 S RESULT="OUT" K OUT,^TMP($T(+0),$J)
"RTN","MAGSIXG1",47,0)
 S PKG=$G(PKG),CLS=$G(CLS),EVENT=$G(EVENT),SPEC=$G(SPEC),TYPE=$G(TYPE),ORIGIN=$G(ORIGIN)
"RTN","MAGSIXG1",48,0)
 I PKG'="" D PKG^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",49,0)
 I CLS'="" D CLS^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",50,0)
 I EVENT'="" D EVENT^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",51,0)
 I SPEC'="" D SPEC^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",52,0)
 I TYPE'="" D TYPE^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",53,0)
 I ORIGIN'="" D ORIGIN^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",54,0)
 I +DFN'=DFN S @RESULT@(0)="0^Invalid Patient Number: """_DFN_"""." Q
"RTN","MAGSIXG1",55,0)
 I '$D(^DPT(DFN,0))#2 S @RESULT@(0)="0^No Such Patient: """_DFN_"""." Q
"RTN","MAGSIXG1",56,0)
 S N=0
"RTN","MAGSIXG1",57,0)
 D NETPLCS^MAGGTU6
"RTN","MAGSIXG1",58,0)
 ;3.0.8/gek, Quit searching all images, just do the date range.
"RTN","MAGSIXG1",59,0)
 S RDT=DAT1 F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:(RDT="")!(RDT>DAT2)  D
"RTN","MAGSIXG1",60,0)
 . K ^TMP($J,"MAGSIX")
"RTN","MAGSIXG1",61,0)
 . N COUNT,PRX,X0,X2,X40,I1,X01
"RTN","MAGSIXG1",62,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX)) Q:PRX=""  M ^TMP($J,"MAGSIX")=^MAG(2005,"APDTPX",DFN,RDT,PRX)
"RTN","MAGSIXG1",63,0)
 . S IMAGE="" F  S IMAGE=$O(^TMP($J,"MAGSIX",IMAGE),-1) Q:IMAGE=""  D
"RTN","MAGSIXG1",64,0)
 . . S X0=$G(^MAG(2005,IMAGE,0))
"RTN","MAGSIXG1",65,0)
 . . Q:$P(X0,"^",10)  ; child of Group
"RTN","MAGSIXG1",66,0)
 . . S X2=$G(^MAG(2005,IMAGE,2)),X40=$G(^MAG(2005,IMAGE,40)),I1=$O(^MAG(2005,IMAGE,1,0))
"RTN","MAGSIXG1",67,0)
 . . S P=$P(X40,U),C=$P(X40,"^",2),T=$P(X40,"^",3),E=$P(X40,"^",4),S=$P(X40,"^",5)
"RTN","MAGSIXG1",68,0)
 . . ;Patch 59.  Treat Class as a computed Field.  Arrange with Mike to change DB.
"RTN","MAGSIXG1",69,0)
 . . S C=$S('T:"",'$D(^MAG(2005.83,T,0)):"",1:$P(^(0),"^",2))
"RTN","MAGSIXG1",70,0)
 . . S V=$S($P(X40,"^",6)="":"V",1:$P(X40,"^",6)) ; P48T1 show VA for Null
"RTN","MAGSIXG1",71,0)
 . . D CHK^DIE(2005,45,"E",V,.MAGVR) I MAGVR'="^" S V=MAGVR(0) ; P48T1 show External Value
"RTN","MAGSIXG1",72,0)
 . . I PKG'="",P'="",'$D(OK(5,P)) Q
"RTN","MAGSIXG1",73,0)
 . . I ORIGIN'="",V'="",'$D(OK(6,V)) Q
"RTN","MAGSIXG1",74,0)
 . . I CLS'="",C'="",'$D(OK(1,C)) Q
"RTN","MAGSIXG1",75,0)
 . . I EVENT'="",E,'$D(OK(2,E)) Q
"RTN","MAGSIXG1",76,0)
 . . ;3.0.8 Stop list entries with no Event, if Event is in Search Specs
"RTN","MAGSIXG1",77,0)
 . . I EVENT'="",E="" Q
"RTN","MAGSIXG1",78,0)
 . . I SPEC'="",S,'$D(OK(3,S)) Q
"RTN","MAGSIXG1",79,0)
 . . ;3.0.8 Stop list entries with no Spec, if Spec is in Search Specs
"RTN","MAGSIXG1",80,0)
 . . I SPEC'="",S="" Q
"RTN","MAGSIXG1",81,0)
 . . I TYPE'="",T,'$D(OK(4,T)) Q
"RTN","MAGSIXG1",82,0)
 . . ; Get Count of Images in Group, use 4th piece of ,1,0) multiple
"RTN","MAGSIXG1",83,0)
 . . S COUNT=$S($P($G(^MAG(2005,IMAGE,1,0)),"^",4):$P($G(^MAG(2005,IMAGE,1,0)),"^",4),1:1)
"RTN","MAGSIXG1",84,0)
 . . S FLTX=""
"RTN","MAGSIXG1",85,0)
 . . ; PUT in Site Code as 2nd piece.
"RTN","MAGSIXG1",86,0)
 . . S X01=$S(I1:$G(^MAG(2005,+$G(^MAG(2005,IMAGE,1,I1,0)),0)),1:X0)
"RTN","MAGSIXG1",87,0)
 . . S FNL=$S(+$P(X01,"^",3):$P(X01,"^",3),1:+$P(X01,"^",5))
"RTN","MAGSIXG1",88,0)
 . . S FLTX=$P($G(MAGJOB("NETPLC",FNL)),"^",2)
"RTN","MAGSIXG1",89,0)
 . . I FLTX="" S FLTX=$G(MAGJOB("PLCODE"))
"RTN","MAGSIXG1",90,0)
 . . S FLTX=FLTX_"^"_$$RPTITLE($P(X2,"^",6),$P(X2,"^",7))
"RTN","MAGSIXG1",91,0)
 . . S X=$$FMTE^XLFDT($P(X2,"^",5),"5Z")
"RTN","MAGSIXG1",92,0)
 . . S X=$P(X,"@",1)_" "_$S($L($P(X,"@",2)):$P(X,"@",2),1:"00:01")
"RTN","MAGSIXG1",93,0)
 . . S FLTX=FLTX_"^"_X
"RTN","MAGSIXG1",94,0)
 . . S FLTX=FLTX_"^"_$P(X0,"^",8)_"^"_COUNT_"^"_$P(X2,"^",4)
"RTN","MAGSIXG1",95,0)
 . . S FLTX=FLTX_"^"_P
"RTN","MAGSIXG1",96,0)
 . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.82,+C,0)),"^",1)
"RTN","MAGSIXG1",97,0)
 . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.83,+T,0)),"^",1)
"RTN","MAGSIXG1",98,0)
 . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.84,+S,0)),"^",1)
"RTN","MAGSIXG1",99,0)
 . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.85,+E,0)),"^",1)
"RTN","MAGSIXG1",100,0)
 . . S FLTX=FLTX_"^"_V
"RTN","MAGSIXG1",101,0)
 . . ;S FLTX=FLTX_"^"_$P($$FMTE^XLFDT($P(X2,"^",1),"5Z"),"@",1)
"RTN","MAGSIXG1",102,0)
 . . S X=$$FMTE^XLFDT($P(X2,"^",1),"5Z")
"RTN","MAGSIXG1",103,0)
 . . S X=$P(X,"@",1)_" "_$S($L($P(X,"@",2)):$P(X,"@",2),1:"00:01")
"RTN","MAGSIXG1",104,0)
 . . S FLTX=FLTX_"^"_X
"RTN","MAGSIXG1",105,0)
 . . ;;;;;;;;;
"RTN","MAGSIXG1",106,0)
 . . ; P8T36 gek. Fix Error caused if $P(X2,"^",2) "ImageSavedBy" is null
"RTN","MAGSIXG1",107,0)
 . . S FLTX=FLTX_"^"_$$GET1^DIQ(200,+$P(X2,"^",2)_",",.01)
"RTN","MAGSIXG1",108,0)
 . . N MAGFILE,MAGXX
"RTN","MAGSIXG1",109,0)
 . . S MAGXX=IMAGE D INFO^MAGGTII
"RTN","MAGSIXG1",110,0)
 . . S FLTX=FLTX_"^"_$P(MAGFILE,"^",1)
"RTN","MAGSIXG1",111,0)
 . . S N=N+1,@RESULT@(N+1)=N_"^"_FLTX_"|"_MAGFILE
"RTN","MAGSIXG1",112,0)
 . . Q:N<76  Q:RESULT["^"
"RTN","MAGSIXG1",113,0)
 . . ; Image count is getting big, switch from array to Global return type
"RTN","MAGSIXG1",114,0)
 . . S ^TMP($T(+0),$J)=""
"RTN","MAGSIXG1",115,0)
 . . M ^TMP($T(+0),$J)=OUT
"RTN","MAGSIXG1",116,0)
 . . K OUT
"RTN","MAGSIXG1",117,0)
 . . S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGSIXG1",118,0)
 . . S RESULT=$NA(^TMP($T(+0),$J))
"RTN","MAGSIXG1",119,0)
 . . S OUT=$NA(^TMP($T(+0),$J)) ;GEK 10/01/02
"RTN","MAGSIXG1",120,0)
 . . Q
"RTN","MAGSIXG1",121,0)
 . ;Q
"RTN","MAGSIXG1",122,0)
 . Q
"RTN","MAGSIXG1",123,0)
 S FLTY=$$FLTDESC(X)
"RTN","MAGSIXG1",124,0)
 I 'N S @RESULT@(0)="0^No images for filter: "_FLTY  Q
"RTN","MAGSIXG1",125,0)
 S @RESULT@(0)="1^"_FLTY
"RTN","MAGSIXG1",126,0)
 S @RESULT@(1)="Item~S2^Site^Note Title~~W0^Proc DT~S1^Procedure^# Img~S2^Short Desc^Pkg^Class^Type^Specialty^Event^Origin^Cap Dt~S1~W0^Cap by~~W0^Image ID~S2~W0"
"RTN","MAGSIXG1",127,0)
 ;S @RESULT@(1)="Item~S2^Site^Proc DT~S1^Procedure^# Img~S2^Short Desc^Pkg^Class^Type^Specialty^Event^Origin^Cap Dt~S1~W0^Cap by~~W0^Image ID~S2~W0"
"RTN","MAGSIXG1",128,0)
 Q
"RTN","MAGSIXG1",129,0)
RPTITLE(FILE,IEN) ; 
"RTN","MAGSIXG1",130,0)
 I FILE=8925,$D(^TIU(8925,IEN,0)) Q $P(^TIU(8925.1,$P(^TIU(8925,IEN,0),"^",1),0),"^",1)
"RTN","MAGSIXG1",131,0)
 ;I FILE=8925,$D(^TIU(8925,IEN,0)) Q $$GET1^DIQ(FILE,IEN,".01:.01")
"RTN","MAGSIXG1",132,0)
 E  Q "   "
"RTN","MAGSIXG1",133,0)
FLTDESC(X) ;
"RTN","MAGSIXG1",134,0)
 N FLT
"RTN","MAGSIXG1",135,0)
 S FLT=""
"RTN","MAGSIXG1",136,0)
 ; Package
"RTN","MAGSIXG1",137,0)
 S FLT=FLT_$S(PKG="":"",1:"Pkg: "_PKG_" - ")
"RTN","MAGSIXG1",138,0)
 ; Class
"RTN","MAGSIXG1",139,0)
 S FLT=FLT_$S(CLS="":"",CLS="ADMIN,ADMIN/CLIN,CLIN/ADMIN":"Class: ADMIN - ",CLS="CLIN,CLIN/ADMIN,ADMIN/CLIN":"Class: CLIN - ",1:"Class: "_CLS_" - ")
"RTN","MAGSIXG1",140,0)
 ; Type
"RTN","MAGSIXG1",141,0)
 F CT=1:1:$L(TYPE,",") D
"RTN","MAGSIXG1",142,0)
 . S TYPE1=$P(TYPE,",",CT) I TYPE1'="" S TYPE1=$P($G(^MAG(2005.83,TYPE1,0)),"^")
"RTN","MAGSIXG1",143,0)
 . S $P(TYPE,",",CT)=$E(TYPE1)_$$LOW^XLFSTR($E(TYPE1,2,999))
"RTN","MAGSIXG1",144,0)
 S FLT=FLT_$S(TYPE="":"",1:"Type: "_TYPE_" - ")
"RTN","MAGSIXG1",145,0)
 ; Specialty/SubSpecialty
"RTN","MAGSIXG1",146,0)
 F CT=1:1:$L(SPEC,",") D
"RTN","MAGSIXG1",147,0)
 . S SPEC1=$P(SPEC,",",CT) I SPEC1'="" S SPEC1=$P($G(^MAG(2005.84,SPEC1,0)),"^")
"RTN","MAGSIXG1",148,0)
 . S $P(SPEC,",",CT)=$E(SPEC1)_$$LOW^XLFSTR($E(SPEC1,2,999))
"RTN","MAGSIXG1",149,0)
 S FLT=FLT_$S(SPEC="":"",1:"Spec.: "_SPEC_" - ")
"RTN","MAGSIXG1",150,0)
 ; Procedure/Event
"RTN","MAGSIXG1",151,0)
 F CT=1:1:$L(EVENT,",") D
"RTN","MAGSIXG1",152,0)
 . S EVENT1=$P(EVENT,",",CT) I EVENT1'="" S EVENT1=$P($G(^MAG(2005.85,EVENT1,0)),"^")
"RTN","MAGSIXG1",153,0)
 . S $P(EVENT,",",CT)=$E(EVENT1)_$$LOW^XLFSTR($E(EVENT1,2,999))
"RTN","MAGSIXG1",154,0)
 S FLT=FLT_$S(EVENT="":"",1:"Event: "_EVENT_" - ")
"RTN","MAGSIXG1",155,0)
 ; Origin
"RTN","MAGSIXG1",156,0)
 S FLT=FLT_$S(ORIGIN="":"",1:"Origin: "_ORIGIN_" - ")
"RTN","MAGSIXG1",157,0)
 ; Date Range - From
"RTN","MAGSIXG1",158,0)
 S FROM=$S($G(FROM)="":"",1:" from "_FROM)
"RTN","MAGSIXG1",159,0)
 ; Date Range - Until
"RTN","MAGSIXG1",160,0)
 S UNTIL=$S($G(UNTIL)="":"",1:" to "_UNTIL)
"RTN","MAGSIXG1",161,0)
 S FLT=FLT_$G(FROM)_$G(UNTIL)
"RTN","MAGSIXG1",162,0)
 ; If No Filter.  Then get All.
"RTN","MAGSIXG1",163,0)
 I FLT="" S FLT="All Images"
"RTN","MAGSIXG1",164,0)
 Q FLT
"RTN","MAGSIXG1",165,0)
REVDT(FROM,UNTIL,DAT1,DAT2) ; Calculate the Reverse Dates and switch for $O
"RTN","MAGSIXG1",166,0)
 ; for $O( through a data cross reference that is reversed, i.e. X=9999999.9999-DT
"RTN","MAGSIXG1",167,0)
 ; FROM  = Date in External or Internal
"RTN","MAGSIXG1",168,0)
 ; UNTIL = Date in External or Internal
"RTN","MAGSIXG1",169,0)
 ; DAT1  = Reverse the two dates, FROM and UNTIL, equal to the earliest
"RTN","MAGSIXG1",170,0)
 ; DAT2  = Reverse the two dates, FROM and UNTIL, equal to the latest
"RTN","MAGSIXG1",171,0)
 ; 
"RTN","MAGSIXG1",172,0)
 S DAT1=$$E2I^MAGSIXGT($G(FROM))
"RTN","MAGSIXG1",173,0)
 S DAT2=$$E2I^MAGSIXGT($G(UNTIL))
"RTN","MAGSIXG1",174,0)
 I 'DAT2 S DAT2=9999999.9999
"RTN","MAGSIXG1",175,0)
 S DAT1=9999999.9999-DAT1
"RTN","MAGSIXG1",176,0)
 S DAT2=9999999.9999-DAT2
"RTN","MAGSIXG1",177,0)
 I DAT1]DAT2 S X=DAT1,DAT1=DAT2,DAT2=X
"RTN","MAGSIXG1",178,0)
 S DAT1=DAT1\1,$P(DAT2,".",2)="9999"
"RTN","MAGSIXG1",179,0)
 Q
"RTN","MAGSIXGT")
0^15^B67629374
"RTN","MAGSIXGT",1,0)
MAGSIXGT ;WOIFO/EdM/GEK/SEB - RPC for Document Imaging ; 04/29/2002  16:15
"RTN","MAGSIXGT",2,0)
 ;;3.0;IMAGING;**8,48,61,59**;Nov 27, 2007;Build 20
"RTN","MAGSIXGT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSIXGT",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXGT",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXGT",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXGT",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXGT",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXGT",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXGT",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXGT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXGT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXGT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXGT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXGT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXGT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXGT",17,0)
 ;;
"RTN","MAGSIXGT",18,0)
 Q
"RTN","MAGSIXGT",19,0)
 ;
"RTN","MAGSIXGT",20,0)
IGT(OUT,CLS,FLGS) ;RPC [MAG4 INDEX GET TYPE]
"RTN","MAGSIXGT",21,0)
 ; OUT : the result array
"RTN","MAGSIXGT",22,0)
 ; CLS : a ',' separated list of Classes.
"RTN","MAGSIXGT",23,0)
 ; FLGS : An '^' delimited string
"RTN","MAGSIXGT",24,0)
 ;       1 IGN   : Flag to IGNore the Status field
"RTN","MAGSIXGT",25,0)
 ;       2 INCL  : Include Class in the Output string
"RTN","MAGSIXGT",26,0)
 ;       3 INST  : Include Status in the Output String
"RTN","MAGSIXGT",27,0)
 ;       
"RTN","MAGSIXGT",28,0)
 N C,D0,LOC,N,OK,X,NODE,IGN
"RTN","MAGSIXGT",29,0)
 N MAGX
"RTN","MAGSIXGT",30,0)
 K OUT
"RTN","MAGSIXGT",31,0)
 S CLS=$G(CLS),FLGS=$P($G(FLGS),"|")
"RTN","MAGSIXGT",32,0)
 ; Capture app will send CLS as ADMIN,ADMIN/CLIN for admin
"RTN","MAGSIXGT",33,0)
 ; or  CLIN,CLIN/ADMIN for clinical 
"RTN","MAGSIXGT",34,0)
 ; 61 - We're expanding CLASS returned to include ALL Clin
"RTN","MAGSIXGT",35,0)
 ; or all Admin
"RTN","MAGSIXGT",36,0)
 I CLS="ADMIN,ADMIN/CLIN" S CLS="ADMIN,ADMIN/CLIN,CLIN/ADMIN"
"RTN","MAGSIXGT",37,0)
 I CLS="CLIN,CLIN/ADMIN" S CLS="CLIN,CLIN/ADMIN,ADMIN/CLIN"
"RTN","MAGSIXGT",38,0)
 S IGN=$P(FLGS,"^",1),INCL=$P(FLGS,"^",2),INST=$P(FLGS,"^",3)
"RTN","MAGSIXGT",39,0)
 D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",40,0)
 ;
"RTN","MAGSIXGT",41,0)
 S N=1
"RTN","MAGSIXGT",42,0)
 S D0=0 F  S D0=$O(^MAG(2005.83,D0)) Q:'D0  D
"RTN","MAGSIXGT",43,0)
 . S X=$G(^MAG(2005.83,D0,0)),C=$P(X,"^",2)
"RTN","MAGSIXGT",44,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",45,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",46,0)
 . I 'IGN Q:$P(X,"^",3)="I"  ; This is the Status field inactive Flag;
"RTN","MAGSIXGT",47,0)
 . S NODE=$P(X,"^",1)_"^"_$P($G(^MAG(2005.83,D0,1)),"^",1)
"RTN","MAGSIXGT",48,0)
 . I INCL S NODE=NODE_"^"_$$GET1^DIQ(2005.83,D0,1,"MAGX")
"RTN","MAGSIXGT",49,0)
 . I INST S NODE=NODE_"^"_$$GET1^DIQ(2005.83,D0,2,"MAGX")
"RTN","MAGSIXGT",50,0)
 . S LOC(NODE_"|"_D0)=""
"RTN","MAGSIXGT",51,0)
 . Q
"RTN","MAGSIXGT",52,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",53,0)
 I N<2 S OUT(0)="0^-3, No Types Found for """_CLS_"""." Q
"RTN","MAGSIXGT",54,0)
 S OUT(0)="1^OK: "_N
"RTN","MAGSIXGT",55,0)
 S OUT(1)=CLS_" Image Types^Abbr"
"RTN","MAGSIXGT",56,0)
 I INCL S OUT(1)=OUT(1)_"^Class"
"RTN","MAGSIXGT",57,0)
 I INST S OUT(1)=OUT(1)_"^Status"
"RTN","MAGSIXGT",58,0)
 Q
"RTN","MAGSIXGT",59,0)
IGE(OUT,CLS,SPEC,FLGS) ;RPC [MAG4 INDEX GET EVENT]
"RTN","MAGSIXGT",60,0)
 ; Index Get Procedure/Event (optionally based on (Sub)Specialty)
"RTN","MAGSIXGT",61,0)
 ; OUT : the result array
"RTN","MAGSIXGT",62,0)
 ; CLS : a ',' separated list of Classes.
"RTN","MAGSIXGT",63,0)
 ; SPEC : a ',' separated list of Spec/Subspecialties 
"RTN","MAGSIXGT",64,0)
 ; FLGS : An '^' delimited string
"RTN","MAGSIXGT",65,0)
 ;       - IGN  [1|0]  : Flag to IGNore the Status field
"RTN","MAGSIXGT",66,0)
 ;       - INCL [1|0]  : Include Class in the Output string
"RTN","MAGSIXGT",67,0)
 ;       - INST [1|0]  : Include Status in the Output String
"RTN","MAGSIXGT",68,0)
 ; 
"RTN","MAGSIXGT",69,0)
 N C,D0,D1,LOC,N,NO,OK,S,X,NODE
"RTN","MAGSIXGT",70,0)
 K OUT
"RTN","MAGSIXGT",71,0)
 S CLS=$G(CLS),SPEC=$G(SPEC),FLGS=$P($G(FLGS),"|")
"RTN","MAGSIXGT",72,0)
 S IGN=$P(FLGS,"^",1),INCL=$P(FLGS,"^",2),INST=$P(FLGS,"^",3)
"RTN","MAGSIXGT",73,0)
 D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",74,0)
 D SPEC Q:$D(OUT(0))
"RTN","MAGSIXGT",75,0)
 ;
"RTN","MAGSIXGT",76,0)
 S N=1
"RTN","MAGSIXGT",77,0)
 S D0=0 F  S D0=$O(^MAG(2005.85,D0)) Q:'D0  D
"RTN","MAGSIXGT",78,0)
 . S X=$G(^MAG(2005.85,D0,0)),C=$P(X,"^",2)
"RTN","MAGSIXGT",79,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",80,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",81,0)
 . I 'IGN Q:$P(X,"^",3)="I"  ;This is the Status field inactive Flag;
"RTN","MAGSIXGT",82,0)
 . ; if Specialty not null, check it. Null Specialties will be listed in output.
"RTN","MAGSIXGT",83,0)
 . I SPEC'="" D  Q:NO
"RTN","MAGSIXGT",84,0)
 . . S NO=0
"RTN","MAGSIXGT",85,0)
 . . ; Next line: put "S:'D1 NO=1" before the quit to block implicit mapping 
"RTN","MAGSIXGT",86,0)
 . . S D1=0 F  S D1=$O(^MAG(2005.85,D0,1,D1)) Q:'D1  D  Q:'NO
"RTN","MAGSIXGT",87,0)
 . . . S NO=1
"RTN","MAGSIXGT",88,0)
 . . . S S=$P($G(^MAG(2005.85,D0,1,D1,0)),"^",1)
"RTN","MAGSIXGT",89,0)
 . . . Q:S=""
"RTN","MAGSIXGT",90,0)
 . . . S:$D(OK(3,S)) NO=0
"RTN","MAGSIXGT",91,0)
 . . . Q
"RTN","MAGSIXGT",92,0)
 . . Q
"RTN","MAGSIXGT",93,0)
 . S NODE=$P(X,"^",1)_"^"_$P($G(^MAG(2005.85,D0,2)),"^",1)
"RTN","MAGSIXGT",94,0)
 . I INCL S NODE=NODE_"^"_$$GET1^DIQ(2005.85,D0,1,"MAGX")
"RTN","MAGSIXGT",95,0)
 . I INST S NODE=NODE_"^"_$$GET1^DIQ(2005.85,D0,4,"MAGX")
"RTN","MAGSIXGT",96,0)
 . S LOC(NODE_"|"_D0)=""
"RTN","MAGSIXGT",97,0)
 . Q
"RTN","MAGSIXGT",98,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",99,0)
 I N<2 S OUT(0)="0^No Procedures or Events found for """_CLS_""" and """_SPEC_"""." Q
"RTN","MAGSIXGT",100,0)
 S OUT(0)="1^OK: "_N
"RTN","MAGSIXGT",101,0)
 S OUT(1)="Procedure/Event^Abbr"
"RTN","MAGSIXGT",102,0)
 I INCL S OUT(1)=OUT(1)_"^Class"
"RTN","MAGSIXGT",103,0)
 I INST S OUT(1)=OUT(1)_"^Status"
"RTN","MAGSIXGT",104,0)
 Q
"RTN","MAGSIXGT",105,0)
 ;
"RTN","MAGSIXGT",106,0)
IGS(OUT,CLS,EVENT,FLGS) ;RPC [MAG4 INDEX GET SPECIALTY]
"RTN","MAGSIXGT",107,0)
 ; OUT : the result array
"RTN","MAGSIXGT",108,0)
 ; CLS : a ',' separated list of Classes.
"RTN","MAGSIXGT",109,0)
 ; EVENT : a ',' separated list of Proc/Events
"RTN","MAGSIXGT",110,0)
 ; FLGS : An '^' delimited string
"RTN","MAGSIXGT",111,0)
 ;       - IGN  [1|0]  : Flag to IGNore the Status field
"RTN","MAGSIXGT",112,0)
 ;       - INCL [1|0]  : Include Class in the Output string
"RTN","MAGSIXGT",113,0)
 ;       - INST [1|0]  : Include Status in the Output String
"RTN","MAGSIXGT",114,0)
 ;       - INSP [1|0]  : Include Specialty in the OutPut String
"RTN","MAGSIXGT",115,0)
 ; 
"RTN","MAGSIXGT",116,0)
 N C,D0,D1,E,LOC,N,OK,X
"RTN","MAGSIXGT",117,0)
 K OUT
"RTN","MAGSIXGT",118,0)
 S CLS=$G(CLS),EVENT=$G(EVENT),FLGS=$P($G(FLGS),"|")
"RTN","MAGSIXGT",119,0)
 S IGN=$P(FLGS,"^",1),INCL=$P(FLGS,"^",2),INST=$P(FLGS,"^",3),INSP=$P(FLGS,"^",4)
"RTN","MAGSIXGT",120,0)
 I CLS'="" D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",121,0)
 I EVENT'="" D EVENT Q:$D(OUT(0))
"RTN","MAGSIXGT",122,0)
 ;
"RTN","MAGSIXGT",123,0)
 S N=1
"RTN","MAGSIXGT",124,0)
 I EVENT="" S D0=0 F  S D0=$O(^MAG(2005.84,D0)) Q:'D0  D
"RTN","MAGSIXGT",125,0)
 . S X=$G(^MAG(2005.84,D0,0)),C=$P(X,"^",2) ;,E=$P(X,"^",3)
"RTN","MAGSIXGT",126,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",127,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",128,0)
 . I 'IGN Q:$P(X,"^",4)="I"  ; This is the Status field inactive Flag;
"RTN","MAGSIXGT",129,0)
 . ;I EVENT'="" Q:E=""  Q:'$D(OK(2,E))
"RTN","MAGSIXGT",130,0)
 . S NODE=$P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D0,2)),"^",1)
"RTN","MAGSIXGT",131,0)
 . I INCL S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D0,1,"MAGX")
"RTN","MAGSIXGT",132,0)
 . I INST S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D0,4,"MAGX")
"RTN","MAGSIXGT",133,0)
 . I INSP S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D0,2,"MAGX")
"RTN","MAGSIXGT",134,0)
 . S LOC(NODE_"|"_D0)=""
"RTN","MAGSIXGT",135,0)
 . Q
"RTN","MAGSIXGT",136,0)
 I EVENT]"" S E="" F  S E=$O(OK(2,E)) Q:E=""  D
"RTN","MAGSIXGT",137,0)
 . ; if Class isn't null, include image if Class matches;
"RTN","MAGSIXGT",138,0)
 . ; images with Null classes will be listed in output.
"RTN","MAGSIXGT",139,0)
 . I CLS'="" S C=$P($G(^MAG(2005.85,E,0)),"^",2) Q:'$D(OK(1,C))
"RTN","MAGSIXGT",140,0)
 . ; if this procedure has specialty pointers, include it if they matches.
"RTN","MAGSIXGT",141,0)
 . ; images with Proc/Event 
"RTN","MAGSIXGT",142,0)
 . I +$P($G(^MAG(2005.85,E,1,0)),U,3)=0 D GETSPECS(.LOC,INCL,INST,INSP)
"RTN","MAGSIXGT",143,0)
 . S D0="0" F  S D0=$O(^MAG(2005.85,E,1,D0)) Q:D0=""  D
"RTN","MAGSIXGT",144,0)
 . . S D1=$G(^MAG(2005.85,E,1,D0,0)) I D1="" Q
"RTN","MAGSIXGT",145,0)
 . . S X=$G(^MAG(2005.84,D1,0))
"RTN","MAGSIXGT",146,0)
 . . I '(X]"") Q
"RTN","MAGSIXGT",147,0)
 . . S NODE=$P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D1,2)),"^",1)
"RTN","MAGSIXGT",148,0)
 . . I INCL S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D1,1,"MAGX")
"RTN","MAGSIXGT",149,0)
 . . I INST S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D1,4,"MAGX")
"RTN","MAGSIXGT",150,0)
 . . I INSP S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D1,2,"MAGX")
"RTN","MAGSIXGT",151,0)
 . . S LOC(NODE_"|"_D1)=""
"RTN","MAGSIXGT",152,0)
 . Q
"RTN","MAGSIXGT",153,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",154,0)
 I N<2 S OUT(0)="0^-5, No (Sub)Specialties found for """_CLS_""" and """_EVENT_"""." Q
"RTN","MAGSIXGT",155,0)
 S OUT(0)="1^OK: "_N
"RTN","MAGSIXGT",156,0)
 S OUT(1)="Specialty/SubSpecialty^Abbr"
"RTN","MAGSIXGT",157,0)
 I INCL S OUT(1)=OUT(1)_"^Class"
"RTN","MAGSIXGT",158,0)
 I INST S OUT(1)=OUT(1)_"^Status"
"RTN","MAGSIXGT",159,0)
 I INSP S OUT(1)=OUT(1)_"^Specialty"
"RTN","MAGSIXGT",160,0)
 Q
"RTN","MAGSIXGT",161,0)
 ;
"RTN","MAGSIXGT",162,0)
PKG N P,I
"RTN","MAGSIXGT",163,0)
 I $G(PKG)="" Q
"RTN","MAGSIXGT",164,0)
 F I=1:1:$L(PKG,",") I $L($P(PKG,",",I)) S OK(5,$P(PKG,",",I))=""
"RTN","MAGSIXGT",165,0)
 Q
"RTN","MAGSIXGT",166,0)
ORIGIN N I
"RTN","MAGSIXGT",167,0)
 N V,MAGR,MAGD,MAGE
"RTN","MAGSIXGT",168,0)
 I $G(ORIGIN)="" Q
"RTN","MAGSIXGT",169,0)
 ; P48T1 Allow Internal or External for Origin (set of codes)
"RTN","MAGSIXGT",170,0)
 F I=1:1:$L(ORIGIN,",") I $L($P(ORIGIN,",",I)) S OK(6,$P(ORIGIN,",",I))="" D
"RTN","MAGSIXGT",171,0)
 . S MAGD=$P(ORIGIN,",",I)
"RTN","MAGSIXGT",172,0)
 . D CHK^DIE(2005,45,"E",MAGD,.MAGR) I MAGR'="^" S OK(6,MAGR)="",OK(6,MAGR(0))=""
"RTN","MAGSIXGT",173,0)
 Q
"RTN","MAGSIXGT",174,0)
CLS N C,CLSX,I
"RTN","MAGSIXGT",175,0)
 I $G(CLS)="" Q
"RTN","MAGSIXGT",176,0)
 F I=1:1:$L(CLS,",") I $L($P(CLS,",",I)) S CLSX=$P(CLS,",",I) D
"RTN","MAGSIXGT",177,0)
 . I CLSX=+CLSX,$D(^MAG(2005.82,CLSX)) S OK(1,CLSX)=""
"RTN","MAGSIXGT",178,0)
 . S C="" F  S C=$O(^MAG(2005.82,"B",CLSX,C)) Q:C=""  S OK(1,C)=""
"RTN","MAGSIXGT",179,0)
 I $O(OK(1,""))="" S OUT(0)="0^Invalid Class: """_CLS_"""." Q
"RTN","MAGSIXGT",180,0)
 Q
"RTN","MAGSIXGT",181,0)
 ;
"RTN","MAGSIXGT",182,0)
EVENT N E,EVENTX,I
"RTN","MAGSIXGT",183,0)
 I $G(EVENT)="" Q
"RTN","MAGSIXGT",184,0)
 F I=1:1:$L(EVENT,",") I $L($P(EVENT,",",I)) S EVENTX=$P(EVENT,",",I) D
"RTN","MAGSIXGT",185,0)
 . I EVENTX=+EVENTX,$D(^MAG(2005.85,EVENTX)) S OK(2,EVENTX)=""
"RTN","MAGSIXGT",186,0)
 . S E="" F  S E=$O(^MAG(2005.85,"B",EVENTX,E)) Q:E=""  S OK(2,E)=""
"RTN","MAGSIXGT",187,0)
 I $O(OK(2,""))="" S OUT(0)="0^Invalid Event: """_EVENT_"""." Q
"RTN","MAGSIXGT",188,0)
 Q
"RTN","MAGSIXGT",189,0)
 ;
"RTN","MAGSIXGT",190,0)
SPEC N S,SS,SPECX,I
"RTN","MAGSIXGT",191,0)
 I $G(SPEC)="" Q
"RTN","MAGSIXGT",192,0)
 ; Here we examine each piece of Spec,  If piece is a Specialty, include
"RTN","MAGSIXGT",193,0)
 ; its subspecialties.
"RTN","MAGSIXGT",194,0)
 ;  
"RTN","MAGSIXGT",195,0)
 F I=1:1:$L(SPEC,",") I $L($P(SPEC,",",I)) S SPECX=$P(SPEC,",",I) D
"RTN","MAGSIXGT",196,0)
 . I SPECX=+SPECX,$D(^MAG(2005.84,SPECX)) S OK(3,SPECX)=""
"RTN","MAGSIXGT",197,0)
 . S S="" F  S S=$O(^MAG(2005.84,"B",SPECX,S)) Q:S=""  S OK(3,S)=""
"RTN","MAGSIXGT",198,0)
 . Q
"RTN","MAGSIXGT",199,0)
 I $O(OK(3,""))="" S OUT(0)="0^Invalid Specialty: """_SPEC_"""." Q
"RTN","MAGSIXGT",200,0)
 I $D(MAGJOB("CAPTURE")) Q  ; 59 for capture we don't want subspecs.
"RTN","MAGSIXGT",201,0)
 S S="" F  S S=$O(OK(3,S)) Q:S=""  I $D(^MAG(2005.84,"ASPEC",S)) D
"RTN","MAGSIXGT",202,0)
 . S SS="" F  S SS=$O(^MAG(2005.84,"ASPEC",S,SS)) Q:SS=""  S OK(3,SS)=""
"RTN","MAGSIXGT",203,0)
 . Q
"RTN","MAGSIXGT",204,0)
 Q
"RTN","MAGSIXGT",205,0)
 ;
"RTN","MAGSIXGT",206,0)
TYPE N T,TYPEX,I
"RTN","MAGSIXGT",207,0)
 I $G(TYPE)="" Q
"RTN","MAGSIXGT",208,0)
 F I=1:1:$L(TYPE,",") I $L($P(TYPE,",",I)) S TYPEX=$P(TYPE,",",I) D
"RTN","MAGSIXGT",209,0)
 . I TYPEX=+TYPEX,$D(^MAG(2005.83,TYPEX)) S OK(4,TYPEX)=""
"RTN","MAGSIXGT",210,0)
 . S T="" F  S T=$O(^MAG(2005.83,"B",TYPEX,T)) Q:T=""  S OK(4,T)=""
"RTN","MAGSIXGT",211,0)
 I $O(OK(4,""))="" S OUT(0)="0^Invalid Type: """_TYPE_"""." Q
"RTN","MAGSIXGT",212,0)
 Q
"RTN","MAGSIXGT",213,0)
 ;
"RTN","MAGSIXGT",214,0)
GETSPECS(LOC,INCL,INST,INSP) N D0,X,NODE
"RTN","MAGSIXGT",215,0)
 S D0=0 F  S D0=$O(^MAG(2005.84,D0)) Q:'D0  D
"RTN","MAGSIXGT",216,0)
 . S X=$G(^MAG(2005.84,D0,0))
"RTN","MAGSIXGT",217,0)
 . ;I X]"" S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D0,2)),"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",218,0)
 . ;Q
"RTN","MAGSIXGT",219,0)
 . S NODE=$P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D0,2)),"^",1)
"RTN","MAGSIXGT",220,0)
 . I INCL S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D0,1,"MAGX")
"RTN","MAGSIXGT",221,0)
 . I INST S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D0,4,"MAGX")
"RTN","MAGSIXGT",222,0)
 . I INSP S NODE=NODE_"^"_$$GET1^DIQ(2005.84,D0,2,"MAGX")
"RTN","MAGSIXGT",223,0)
 . S LOC(NODE_"|"_D0)=""
"RTN","MAGSIXGT",224,0)
 . Q
"RTN","MAGSIXGT",225,0)
 Q
"RTN","MAGSIXGT",226,0)
 ;
"RTN","MAGSIXGT",227,0)
D2(N) Q $TR($J(N,2)," ",0)
"RTN","MAGSIXGT",228,0)
 ;
"RTN","MAGSIXGT",229,0)
E2I(D) N %DT,X,Y
"RTN","MAGSIXGT",230,0)
 Q:$P(D,".",1)?7N D\1
"RTN","MAGSIXGT",231,0)
 Q:D="" 0
"RTN","MAGSIXGT",232,0)
 S X=D,%DT="TS" D ^%DT Q:Y<0 0
"RTN","MAGSIXGT",233,0)
 Q Y\1
"SEC","^DIC",2005.021,2005.021,0,"AUDIT")
@
"SEC","^DIC",2005.021,2005.021,0,"DD")
@
"SEC","^DIC",2005.021,2005.021,0,"DEL")
@
"SEC","^DIC",2005.021,2005.021,0,"LAYGO")
@
"SEC","^DIC",2005.021,2005.021,0,"RD")
@
"SEC","^DIC",2005.021,2005.021,0,"WR")
@
"VER")
8.0^22.0
"^DD",2005,2005,30.1,0)
DELETED DATE^D^^30;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2005,2005,30.1,3)
This is the date the Image was deleted from the Image File.
"^DD",2005,2005,30.1,21,0)
^.001^1^1^3070124^^^^
"^DD",2005,2005,30.1,21,1,0)
This is the date the Image was deleted from the Image File.
"^DD",2005,2005,30.1,"DT")
3070124
"^DD",2005,2005,64,0)
PARENT ASSOCIATION DATE^D^^2;11^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2005,2005,64,3)
(No range limit on date)
"^DD",2005,2005,64,21,0)
^.001^2^2^3051222^^^^
"^DD",2005,2005,64,21,1,0)
This is the Date that the Document/Image was associated with the 
"^DD",2005,2005,64,21,2,0)
Parent Data File. Field # 16
"^DD",2005,2005,64,"DT")
3051222
"^DD",2005,2005,110,0)
CREATION DATE^D^^100;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2005,2005,110,3)
If this image is a scanned document, enter the date of the document.  For Radiology Images it is the Acquisition Date
"^DD",2005,2005,110,21,0)
^.001^4^4^3070206^^^^
"^DD",2005,2005,110,21,1,0)
 Scanned Documents and Images can have a date that is different
"^DD",2005,2005,110,21,2,0)
 than the date of the associated procedure.  This is the Date of the 
"^DD",2005,2005,110,21,3,0)
 Document or Image.
"^DD",2005,2005,110,21,4,0)
 For Radiology/Dicom images this is the Acquisition Date
"^DD",2005,2005,110,23,0)
^.001^4^4^3070206^^
"^DD",2005,2005,110,23,1,0)
Date Time that the Image was created.
"^DD",2005,2005,110,23,2,0)
For Documents this is usually the date the Document was signed
"^DD",2005,2005,110,23,3,0)
  or the Date the Document was transcribed.
"^DD",2005,2005,110,23,4,0)
For Radiology/Dicom Images, this is the Acquisition Date
"^DD",2005,2005,110,"DT")
3070125
"^DD",2005.021,2005.021,0)
FIELD^^5^6
"^DD",2005.021,2005.021,0,"DDA")
N
"^DD",2005.021,2005.021,0,"DT")
3030620
"^DD",2005.021,2005.021,0,"IX","B",2005.021,.01)

"^DD",2005.021,2005.021,0,"IX","C",2005.021,1)

"^DD",2005.021,2005.021,0,"IX","D",2005.021,5)

"^DD",2005.021,2005.021,0,"NM","IMAGE FILE TYPES")

"^DD",2005.021,2005.021,0,"VRPK")
MAG
"^DD",2005.021,2005.021,.01,0)
NAME^RFI^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",2005.021,2005.021,.01,1,0)
^.1
"^DD",2005.021,2005.021,.01,1,1,0)
2005.021^B
"^DD",2005.021,2005.021,.01,1,1,1)
S ^MAG(2005.021,"B",$E(X,1,30),DA)=""
"^DD",2005.021,2005.021,.01,1,1,2)
K ^MAG(2005.021,"B",$E(X,1,30),DA)
"^DD",2005.021,2005.021,.01,3)
Answer must be 1-10 characters in length.
"^DD",2005.021,2005.021,.01,21,0)
^.001^1^1^3061219^^^
"^DD",2005.021,2005.021,.01,21,1,0)
This field contains the image filename extension, i.e., tga.
"^DD",2005.021,2005.021,.01,"DT")
3060110
"^DD",2005.021,2005.021,.01,"LAYGO",1,0)
I 0
"^DD",2005.021,2005.021,1,0)
DESCRIPTION^RFI^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",2005.021,2005.021,1,1,0)
^.1
"^DD",2005.021,2005.021,1,1,1,0)
2005.021^C
"^DD",2005.021,2005.021,1,1,1,1)
S ^MAG(2005.021,"C",$E(X,1,30),DA)=""
"^DD",2005.021,2005.021,1,1,1,2)
K ^MAG(2005.021,"C",$E(X,1,30),DA)
"^DD",2005.021,2005.021,1,1,1,"%D",0)
^^1^1^3011008^
"^DD",2005.021,2005.021,1,1,1,"%D",1,0)
The 3 character image file extension.
"^DD",2005.021,2005.021,1,1,1,"DT")
3011008
"^DD",2005.021,2005.021,1,3)
Answer must be 1-30 characters in length.
"^DD",2005.021,2005.021,1,21,0)
^^2^2^3020419^
"^DD",2005.021,2005.021,1,21,1,0)
This field contains the description of the filename extension.  For 
"^DD",2005.021,2005.021,1,21,2,0)
example a filename extension of 'doc' is for Microsoft Word document.
"^DD",2005.021,2005.021,1,"DT")
3050923
"^DD",2005.021,2005.021,2,0)
VIEWER^RSI^1:YES;0:NO;^0;3^Q
"^DD",2005.021,2005.021,2,21,0)
^^1^1^3011008^
"^DD",2005.021,2005.021,2,21,1,0)
Flag, Imaging provides a viewer for files with this extension Y/N
"^DD",2005.021,2005.021,2,"DT")
3050923
"^DD",2005.021,2005.021,3,0)
Bitmap for Abstract^FI^^0;4^K:$L(X)>30!($L(X)<3) X
"^DD",2005.021,2005.021,3,3)
Answer must be 3-30 characters in length.
"^DD",2005.021,2005.021,3,21,0)
^^1^1^3011008^
"^DD",2005.021,2005.021,3,21,1,0)
If Imaging does not create abstracts for this type, this Bitmap will be used for the Abstract.
"^DD",2005.021,2005.021,3,"DT")
3060110
"^DD",2005.021,2005.021,4,0)
Abstract Created^RSI^1:YES;0:NO;^0;5^Q
"^DD",2005.021,2005.021,4,3)
Enter Yes if Imaging will create an abstract for this file type.
"^DD",2005.021,2005.021,4,21,0)
^.001^2^2^3020419^^^
"^DD",2005.021,2005.021,4,21,1,0)
The Capture workstation and Background Processor will create abstracts for 
"^DD",2005.021,2005.021,4,21,2,0)
image files with this extension only if this field is Yes
"^DD",2005.021,2005.021,4,"DT")
3050923
"^DD",2005.021,2005.021,5,0)
DEFAULT OBJECT TYPE^P2005.02'I^MAG(2005.02,^0;6^Q
"^DD",2005.021,2005.021,5,1,0)
^.1
"^DD",2005.021,2005.021,5,1,1,0)
2005.021^D
"^DD",2005.021,2005.021,5,1,1,1)
S ^MAG(2005.021,"D",$E(X,1,30),DA)=""
"^DD",2005.021,2005.021,5,1,1,2)
K ^MAG(2005.021,"D",$E(X,1,30),DA)
"^DD",2005.021,2005.021,5,1,1,"%D",0)
^^1^1^3030122^
"^DD",2005.021,2005.021,5,1,1,"%D",1,0)
Gives the ability to query the file, based on an Image's 'Object Type'
"^DD",2005.021,2005.021,5,1,1,"DT")
3030122
"^DD",2005.021,2005.021,5,3)
Enter the Default Object Type for this file Extension
"^DD",2005.021,2005.021,5,21,0)
^^1^1^3011008^
"^DD",2005.021,2005.021,5,21,1,0)
Certain Extensions have a default Object Type defined in this field.
"^DD",2005.021,2005.021,5,"DT")
3050923
"^DD",2005.84,2005.84,2,0)
SPEC LEVEL^P2005.84'^MAG(2005.84,^0;3^Q
"^DD",2005.84,2005.84,2,1,0)
^.1
"^DD",2005.84,2005.84,2,1,1,0)
2005.84^ASPEC
"^DD",2005.84,2005.84,2,1,1,1)
S ^MAG(2005.84,"ASPEC",$E(X,1,30),DA)=""
"^DD",2005.84,2005.84,2,1,1,2)
K ^MAG(2005.84,"ASPEC",$E(X,1,30),DA)
"^DD",2005.84,2005.84,2,1,1,"DT")
3050222
"^DD",2005.84,2005.84,2,9)
^
"^DD",2005.84,2005.84,2,21,0)
^.001^4^4^3050909^^^^
"^DD",2005.84,2005.84,2,21,1,0)
This field contain the specialty level for the specialty being entered.
"^DD",2005.84,2005.84,2,21,2,0)
For example specialties VASCULAR and UROLOGY are part of the specialty 
"^DD",2005.84,2005.84,2,21,3,0)
level SURGERY. This field will be used in indexing images and provide a
"^DD",2005.84,2005.84,2,21,4,0)
broad level of sorting.
"^DD",2005.84,2005.84,2,"DT")
3050909
"^DD",2006.18,2006.18,180,0)
TIU TOP^NJ5,0^^CAPTIU;1^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,180,3)
This is the Top pixel location of the Notes Window in Capture.
"^DD",2006.18,2006.18,180,21,0)
^.001^1^1^3060629^^
"^DD",2006.18,2006.18,180,21,1,0)
This is the Top pixel location of the Notes Window in Capture.
"^DD",2006.18,2006.18,180,"DT")
3060629
"^DD",2006.18,2006.18,181,0)
TIU LEFT^NJ5,0^^CAPTIU;2^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,181,3)
This is the Left pixel location of the Notes Window in Capture.
"^DD",2006.18,2006.18,181,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,181,21,1,0)
This is the Left pixel location of the Notes Window in Capture.
"^DD",2006.18,2006.18,181,"DT")
3060629
"^DD",2006.18,2006.18,182,0)
TIU HEIGHT^NJ5,0^^CAPTIU;3^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,182,3)
This is the pixel Height of the Notes Window in Capture.
"^DD",2006.18,2006.18,182,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,182,21,1,0)
This is the pixel Height of the Notes Window in Capture.
"^DD",2006.18,2006.18,182,"DT")
3060629
"^DD",2006.18,2006.18,183,0)
TIU WIDTH^NJ5,0^^CAPTIU;4^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,183,3)
This is the pixel Width of the Notes Window in Capture.
"^DD",2006.18,2006.18,183,21,0)
^.001^1^1^3060629^^
"^DD",2006.18,2006.18,183,21,1,0)
This is the pixel Width of the Notes Window in Capture.
"^DD",2006.18,2006.18,183,"DT")
3060629
"^DD",2006.18,2006.18,184,0)
TIU PREVIEW HEIGHT^NJ4,0^^CAPTIU;5^K:+X'=X!(X>3000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,184,3)
This is the pixel height of the Preview Panel in the Notes Window in Capture.
"^DD",2006.18,2006.18,184,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,184,21,1,0)
This is the pixel height of the Preview Panel in the Notes Window in Capture.
"^DD",2006.18,2006.18,184,"DT")
3060629
"^DD",2006.18,2006.18,185,0)
TIU TEXT HEIGHT^NJ4,0^^CAPTIU;6^K:+X'=X!(X>3000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,185,3)
This is the pixel height of the Text area in the Notes Window in Capture.
"^DD",2006.18,2006.18,185,21,0)
^.001^1^1^3060629^^
"^DD",2006.18,2006.18,185,21,1,0)
This is the pixel height of the Text area in the Notes Window in Capture.
"^DD",2006.18,2006.18,185,"DT")
3060629
"^DD",2006.18,2006.18,186,0)
TIU TITLE HEIGHT^NJ4,0^^CAPTIU;7^K:+X'=X!(X>3000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,186,3)
This is the pixel height of the Title List in the Notes Window in Capture.
"^DD",2006.18,2006.18,186,21,0)
^.001^1^1^3060629^^^
"^DD",2006.18,2006.18,186,21,1,0)
This is the pixel height of the Title List in the Notes Window in Capture.
"^DD",2006.18,2006.18,186,"DT")
3060629
"^DD",2006.18,2006.18,187,0)
TIU PREVIEW ON^S^0:FALSE;1:TRUE;^CAPTIU;8^Q
"^DD",2006.18,2006.18,187,3)
Enter '1' to make the Preview Panel in the Notes Window visible.
"^DD",2006.18,2006.18,187,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,187,21,1,0)
Enter '1' to make the Preview Panel in the Notes Window visible.
"^DD",2006.18,2006.18,187,"DT")
3060629
"^DD",2006.18,2006.18,188,0)
TIU SHOW ADDENDUMS^S^0:FALSE;1:TRUE;^CAPTIU;9^Q
"^DD",2006.18,2006.18,188,3)
Enter '1' to show related Addendums in the Note Listing.
"^DD",2006.18,2006.18,188,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,188,21,1,0)
Enter '1' to show related Addendums in the Note Listing.
"^DD",2006.18,2006.18,188,"DT")
3060629
"^DD",2006.18,2006.18,189,0)
TIU VISIT LOCATION^F^^CAPTIU;10^K:$L(X)>40!($L(X)<1) X
"^DD",2006.18,2006.18,189,3)
This is the IEN ~ NAME of the Visit Location default to use for New Notes.
"^DD",2006.18,2006.18,189,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,189,21,1,0)
This is the IEN ~ NAME of the Visit Location default to use for New Notes.
"^DD",2006.18,2006.18,189,"DT")
3060629
"^DD",2006.18,2006.18,190,0)
TIU STATUS ICONS ON^S^0:FALSE;1:TRUE;^CAPTIU;11^Q
"^DD",2006.18,2006.18,190,3)
Enter '1' to use icons in the Note Listing to represent the Note Status.
"^DD",2006.18,2006.18,190,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,190,21,1,0)
Enter '1' to use icons in the Note Listing to represent the Note Status.
"^DD",2006.18,2006.18,190,"DT")
3060629
"^DD",2006.18,2006.18,191,0)
TIU LIST COUNT^NJ4,0^^CAPTIU;12^K:+X'=X!(X>3000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,191,3)
Maximun number of Notes to list.
"^DD",2006.18,2006.18,191,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,191,21,1,0)
Maximun number of Notes to list.
"^DD",2006.18,2006.18,191,"DT")
3060629
"^DD",2006.18,2006.18,192,0)
TIU LIST MONTHS^NJ3,0^^CAPTIU;13^K:+X'=X!(X>999)!(X<-999)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,192,3)
List a Patient's Notes for this number of Previous Months.
"^DD",2006.18,2006.18,192,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,192,21,1,0)
List a Patient's Notes for this number of Previous Months.
"^DD",2006.18,2006.18,192,"DT")
3060629
"^DD",2006.18,2006.18,193,0)
TIU LIST FROM^D^^CAPTIU;14^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2006.18,2006.18,193,3)
List a Patient's note in the Date Range starting with This Date.
"^DD",2006.18,2006.18,193,21,0)
^^1^1^3060629^
"^DD",2006.18,2006.18,193,21,1,0)
List a Patient's note in the Date Range starting with This Date.
"^DD",2006.18,2006.18,193,"DT")
3060629
"^DD",2006.18,2006.18,194,0)
TIU LIST TO^D^^CAPTIU;15^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2006.18,2006.18,194,3)
List a Patient's note in the Date Range ending with This Date.
"^DD",2006.18,2006.18,194,21,0)
^.001^1^1^3060629^^
"^DD",2006.18,2006.18,194,21,1,0)
List a Patient's note in the Date Range ending with This Date.
"^DD",2006.18,2006.18,194,"DT")
3060629
"^DD",2006.18,2006.18,195,0)
TIU NOTE GLYPHS ON^S^0:FALSE;1:TRUE;^CAPTIU;16^Q
"^DD",2006.18,2006.18,195,3)
Enter '1' to use glyphs rather than text to display note info.
"^DD",2006.18,2006.18,195,21,0)
^^3^3^3060629^
"^DD",2006.18,2006.18,195,21,1,0)
Enter '1' to use glyphs rather than text to display note info.
"^DD",2006.18,2006.18,195,21,2,0)
This refers to the Note-Status-Location information field that 
"^DD",2006.18,2006.18,195,21,3,0)
is displayed when a Progress Note is selected.
"^DD",2006.18,2006.18,195,"DT")
3060629
"^DD",2006.18,2006.18,196,0)
TIU USE DEFAULT LOCATION^S^0:FALSE;1:TRUE;^CAPTIU;17^Q
"^DD",2006.18,2006.18,196,3)
Enter '1' to Use the defaults for Visit Location.
"^DD",2006.18,2006.18,196,21,0)
^^2^2^3060629^
"^DD",2006.18,2006.18,196,21,1,0)
Enter '1' to Use the defaults for Visit Location.
"^DD",2006.18,2006.18,196,21,2,0)
Enter '0' to be prompted each time a visit location is needed.
"^DD",2006.18,2006.18,196,"DT")
3060629
"^DD",2006.96,2006.96,.01,0)
CONVERTED BY^RS^0:UNKNOWN;1:PATCH 25;2:PATCH 59;^0;1^Q
"^DD",2006.96,2006.96,.01,1,0)
^.1^^0
"^DD",2006.96,2006.96,.01,3)
Do not modify the entries in this file.
"^DD",2006.96,2006.96,.01,21,0)
^.001^1^1^3050829^^^^
"^DD",2006.96,2006.96,.01,21,1,0)
This field indicates by what means the index values were converted.
"^DD",2006.96,2006.96,.01,"DT")
3050829
"^DIC",2005.021,2005.021,0)
IMAGE FILE TYPES^2005.021
"^DIC",2005.021,2005.021,0,"GL")
^MAG(2005.021,
"^DIC",2005.021,2005.021,"%",0)
^1.005^^0
"^DIC",2005.021,2005.021,"%D",0)
^1.001^21^21^3061219^^^^
"^DIC",2005.021,2005.021,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.021,2005.021,"%D",2,0)
 |                                                               |
"^DIC",2005.021,2005.021,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.021,2005.021,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.021,2005.021,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.021,2005.021,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.021,2005.021,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.021,2005.021,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.021,2005.021,"%D",9,0)
 |                                                               |
"^DIC",2005.021,2005.021,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.021,2005.021,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.021,2005.021,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.021,2005.021,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.021,2005.021,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.021,2005.021,"%D",15,0)
 |                                                               |
"^DIC",2005.021,2005.021,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.021,2005.021,"%D",17,0)
 
"^DIC",2005.021,2005.021,"%D",18,0)
This file contains all the image filename extensions supported by 
"^DIC",2005.021,2005.021,"%D",19,0)
Imaging and specific characteristics for the filename extensions. 
"^DIC",2005.021,2005.021,"%D",20,0)
This is a static file only updated by newer versions of the Imaging 
"^DIC",2005.021,2005.021,"%D",21,0)
application. 
"^DIC",2005.021,"B","IMAGE FILE TYPES",2005.021)

**END**
**END**
