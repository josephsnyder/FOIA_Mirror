KIDS Distribution saved on Sep 23, 2003@16:27:19
Imaging Patch 22 -- Vistarad Maintenance
**KIDS**:MAG*3.0*22^

**INSTALL NAME**
MAG*3.0*22
"BLD",2833,0)
MAG*3.0*22^IMAGING^0^3030923^y
"BLD",2833,1,0)
^^15^15^3030730^^^^
"BLD",2833,1,1,0)
Imaging Patch 22 -- Vistarad Maintenance
"BLD",2833,1,2,0)
Routine Checksums:
"BLD",2833,1,3,0)
 
"BLD",2833,1,4,0)
MAGJEX1   value = 25378323
"BLD",2833,1,5,0)
MAGJEX1B  value = 6070161
"BLD",2833,1,6,0)
MAGJLS2   value = 17792693
"BLD",2833,1,7,0)
MAGJLS2B  value = 18169808
"BLD",2833,1,8,0)
MAGJLS3   value = 17053988
"BLD",2833,1,9,0)
MAGJLST1  value = 28230644
"BLD",2833,1,10,0)
MAGJMN1   value = 16954953
"BLD",2833,1,11,0)
MAGJORD   value = 7481199
"BLD",2833,1,12,0)
MAGJRT    value = 11832101
"BLD",2833,1,13,0)
MAGJUPD1  value = 17310296
"BLD",2833,1,14,0)
MAGJUTL1  value = 11539488
"BLD",2833,1,15,0)
MAGJUTL3  value = 9066809
"BLD",2833,4,0)
^9.64PA^2006.631^3
"BLD",2833,4,2006.63,0)
2006.63
"BLD",2833,4,2006.63,222)
y^y^f^^n^^y^o^n
"BLD",2833,4,2006.631,0)
2006.631
"BLD",2833,4,2006.631,222)
y^y^f^^n^^y^r^n
"BLD",2833,4,2006.631,224)
I $P(^(0),"^",2)>9000
"BLD",2833,4,2006.634,0)
2006.634
"BLD",2833,4,2006.634,222)
y^y^f^^^^n
"BLD",2833,4,"B",2006.63,2006.63)

"BLD",2833,4,"B",2006.631,2006.631)

"BLD",2833,4,"B",2006.634,2006.634)

"BLD",2833,"ABNS",0)
^9.66A^^
"BLD",2833,"ABPKG")
n^y^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",2833,"INI")
PRE^MAGJMN1
"BLD",2833,"INID")
^n
"BLD",2833,"INIT")
BLDALL^MAGJMN1
"BLD",2833,"KRN",0)
^9.67PA^8989.52^19
"BLD",2833,"KRN",.4,0)
.4
"BLD",2833,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",2833,"KRN",.4,"NM",1,0)
MAGJ EXCAT PRINT    FILE #2006.61^2006.61^1^
"BLD",2833,"KRN",.4,"NM","B","MAGJ EXCAT PRINT    FILE #2006.61",1)

"BLD",2833,"KRN",.401,0)
.401
"BLD",2833,"KRN",.401,"NM",0)
^9.68A^1^1
"BLD",2833,"KRN",.401,"NM",1,0)
MAGJ EXCAT SORT    FILE #2006.61^2006.61^1^
"BLD",2833,"KRN",.401,"NM","B","MAGJ EXCAT SORT    FILE #2006.61",1)

"BLD",2833,"KRN",.402,0)
.402
"BLD",2833,"KRN",.403,0)
.403
"BLD",2833,"KRN",.5,0)
.5
"BLD",2833,"KRN",.84,0)
.84
"BLD",2833,"KRN",3.6,0)
3.6
"BLD",2833,"KRN",3.8,0)
3.8
"BLD",2833,"KRN",9.2,0)
9.2
"BLD",2833,"KRN",9.8,0)
9.8
"BLD",2833,"KRN",9.8,"NM",0)
^9.68A^14^12
"BLD",2833,"KRN",9.8,"NM",1,0)
MAGJEX1^^0^B75012350
"BLD",2833,"KRN",9.8,"NM",2,0)
MAGJEX1B^^0^B10226958
"BLD",2833,"KRN",9.8,"NM",3,0)
MAGJUPD1^^0^B55284332
"BLD",2833,"KRN",9.8,"NM",4,0)
MAGJUTL3^^0^B36726723
"BLD",2833,"KRN",9.8,"NM",5,0)
MAGJORD^^0^B15818939
"BLD",2833,"KRN",9.8,"NM",6,0)
MAGJLST1^^0^B85130159
"BLD",2833,"KRN",9.8,"NM",7,0)
MAGJLS3^^0^B68453237
"BLD",2833,"KRN",9.8,"NM",8,0)
MAGJLS2B^^0^B70800707
"BLD",2833,"KRN",9.8,"NM",11,0)
MAGJMN1^^0^B74584215
"BLD",2833,"KRN",9.8,"NM",12,0)
MAGJLS2^^0^B65376693
"BLD",2833,"KRN",9.8,"NM",13,0)
MAGJRT^^0^B45304207
"BLD",2833,"KRN",9.8,"NM",14,0)
MAGJUTL1^^0^B37444535
"BLD",2833,"KRN",9.8,"NM","B","MAGJEX1",1)

"BLD",2833,"KRN",9.8,"NM","B","MAGJEX1B",2)

"BLD",2833,"KRN",9.8,"NM","B","MAGJLS2",12)

"BLD",2833,"KRN",9.8,"NM","B","MAGJLS2B",8)

"BLD",2833,"KRN",9.8,"NM","B","MAGJLS3",7)

"BLD",2833,"KRN",9.8,"NM","B","MAGJLST1",6)

"BLD",2833,"KRN",9.8,"NM","B","MAGJMN1",11)

"BLD",2833,"KRN",9.8,"NM","B","MAGJORD",5)

"BLD",2833,"KRN",9.8,"NM","B","MAGJRT",13)

"BLD",2833,"KRN",9.8,"NM","B","MAGJUPD1",3)

"BLD",2833,"KRN",9.8,"NM","B","MAGJUTL1",14)

"BLD",2833,"KRN",9.8,"NM","B","MAGJUTL3",4)

"BLD",2833,"KRN",19,0)
19
"BLD",2833,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",2833,"KRN",19,"NM",1,0)
MAGJ E/E EXAM CATEGORIES^^1^
"BLD",2833,"KRN",19,"NM",2,0)
MAGJ PRINT EXAM CAT^^1^
"BLD",2833,"KRN",19,"NM","B","MAGJ E/E EXAM CATEGORIES",1)

"BLD",2833,"KRN",19,"NM","B","MAGJ PRINT EXAM CAT",2)

"BLD",2833,"KRN",19.1,0)
19.1
"BLD",2833,"KRN",101,0)
101
"BLD",2833,"KRN",409.61,0)
409.61
"BLD",2833,"KRN",771,0)
771
"BLD",2833,"KRN",870,0)
870
"BLD",2833,"KRN",8989.51,0)
8989.51
"BLD",2833,"KRN",8989.52,0)
8989.52
"BLD",2833,"KRN",8994,0)
8994
"BLD",2833,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",2833,"KRN","B",.4,.4)

"BLD",2833,"KRN","B",.401,.401)

"BLD",2833,"KRN","B",.402,.402)

"BLD",2833,"KRN","B",.403,.403)

"BLD",2833,"KRN","B",.5,.5)

"BLD",2833,"KRN","B",.84,.84)

"BLD",2833,"KRN","B",3.6,3.6)

"BLD",2833,"KRN","B",3.8,3.8)

"BLD",2833,"KRN","B",9.2,9.2)

"BLD",2833,"KRN","B",9.8,9.8)

"BLD",2833,"KRN","B",19,19)

"BLD",2833,"KRN","B",19.1,19.1)

"BLD",2833,"KRN","B",101,101)

"BLD",2833,"KRN","B",409.61,409.61)

"BLD",2833,"KRN","B",771,771)

"BLD",2833,"KRN","B",870,870)

"BLD",2833,"KRN","B",8989.51,8989.51)

"BLD",2833,"KRN","B",8989.52,8989.52)

"BLD",2833,"KRN","B",8994,8994)

"BLD",2833,"QUES",0)
^9.62^^
"BLD",2833,"REQB",0)
^9.611^1^1
"BLD",2833,"REQB",1,0)
MAG*3.0*9^2
"BLD",2833,"REQB","B","MAG*3.0*9",1)

"DATA",2006.63,1,0)
CASE NUMBER^Case #^^^^1^^S3
"DATA",2006.63,2,0)
EXAM LOCK INDICATOR^Lock^^^^2
"DATA",2006.63,3,0)
PATIENT NAME^Patient Name^^^^3
"DATA",2006.63,4,0)
PATIENT ID^ID #^^^^4
"DATA",2006.63,5,0)
PRIORITY^Priority^^^^5^1
"DATA",2006.63,6,0)
PROCEDURE^Procedure^^^^6
"DATA",2006.63,7,0)
IMAGE DATE/TIME^Image Date/Time^^^^7^^S1
"DATA",2006.63,8,0)
STATUS^Status^^^^8
"DATA",2006.63,9,0)
NUMBER OF IMAGES^# Img^# Img^^^9^1^S2
"DATA",2006.63,10,0)
ONLINE STATUS^Onl^^^^10
"DATA",2006.63,11,0)
IMAGING LOCATION^Imaging Loc^^^^13
"DATA",2006.63,12,0)
REMOTE CACHE INDICATOR^RC^RC^^^11
"DATA",2006.63,13,0)
IMAGES EXIST INDICATOR^MAGSRT^^1^^51^1
"DATA",2006.63,14,0)
IMAGE DATE/TIME-SORTABLE^SORT_IMG_DT^^1^^50^1
"DATA",2006.63,15,0)
MODALITY^Mod^^^^12
"DATA",2006.63,16,0)
INTERNAL EXAM STATUS^IntStat^^^1^52
"DATA",2006.63,17,0)
IMAGE TYPE ABBREVIATION^ImgType^^^^15
"DATA",2006.63,18,0)
PATIENT LOCATION ABBREV^Pt Loc'n Abb^^^^14
"DATA",2006.63,19,0)
PATIENT LOCATION NAME^Pt Loc'n Name^^^^14.5
"DATA",2006.63,20,0)
INTERPRETING RADIOLOGISTS^Interp By^^^^14.7
"DATA",2006.63,21,0)
SSN LAST 4^SSN-4^^^^4.3^1^S2
"DATA",2006.63,22,0)
RADIOLOGY DIVISION^Rad Div^Rad Div^^^13.3
"DATA",2006.63,23,0)
SITE CODE^SITE CODE^SITE^^^13.5
"DATA",2006.63,24,0)
INTERP BY LOGON RADIOLOGIST?^Interp By Me?^^^^53
"DATA",2006.63,25,0)
PROCEDURE MODIFIER^Modifier^Modifier^^^6.3
"DATA",2006.63,26,0)
PATIENT LOCATION TYPE^PT LOC TYPE^Loc'n Type^^^14.3
"DATA",2006.631,2,0)
All Examined by Priority, Date/Time^9991^U^ALL^3030502.153224^1^Unread #9991
"DATA",2006.631,2,1,0)
^2006.6311PA^14^14
"DATA",2006.631,2,1,1,0)
1
"DATA",2006.631,2,1,2,0)
2
"DATA",2006.631,2,1,3,0)
3^12
"DATA",2006.631,2,1,4,0)
4
"DATA",2006.631,2,1,5,0)
5
"DATA",2006.631,2,1,6,0)
6^25
"DATA",2006.631,2,1,7,0)
7
"DATA",2006.631,2,1,8,0)
8^6
"DATA",2006.631,2,1,9,0)
9
"DATA",2006.631,2,1,10,0)
10
"DATA",2006.631,2,1,11,0)
12^10
"DATA",2006.631,2,1,12,0)
11
"DATA",2006.631,2,1,13,0)
15
"DATA",2006.631,2,1,14,0)
23
"DATA",2006.631,2,2,0)
^2006.6312PA^4^4
"DATA",2006.631,2,2,1,0)
13
"DATA",2006.631,2,2,2,0)
5
"DATA",2006.631,2,2,3,0)
14
"DATA",2006.631,2,2,4,0)
1^0
"DATA",2006.631,2,"DEF",0)
3030923.112755
"DATA",2006.631,2,"DEF",.5)
Case #~S3^Lock^Patient Name^ID #^Priority^Procedure^Image Date/Time~S1^Status^# Img~S2^Onl^RC^Mod^Imaging Loc^SITE
"DATA",2006.631,2,"DEF",1)
1^2^3;12^4^5^6;25^7^8;6^9^10^12;10^15^11^23
"DATA",2006.631,2,"DEF",2)
13^5^14^1
"DATA",2006.631,5,0)
All Interpreted or Transcribed by Date/Time^9992^R^ALL^3030502.15363^1^Recent #9992
"DATA",2006.631,5,1,0)
^2006.6311PA^17^15
"DATA",2006.631,5,1,1,0)
1
"DATA",2006.631,5,1,2,0)
2
"DATA",2006.631,5,1,3,0)
3^12
"DATA",2006.631,5,1,4,0)
4
"DATA",2006.631,5,1,5,0)
5
"DATA",2006.631,5,1,6,0)
6^25
"DATA",2006.631,5,1,7,0)
7
"DATA",2006.631,5,1,8,0)
8^6
"DATA",2006.631,5,1,9,0)
9
"DATA",2006.631,5,1,10,0)
10
"DATA",2006.631,5,1,11,0)
12^10
"DATA",2006.631,5,1,13,0)
15
"DATA",2006.631,5,1,14,0)
20
"DATA",2006.631,5,1,15,0)
23
"DATA",2006.631,5,1,17,0)
11
"DATA",2006.631,5,2,0)
^2006.6312PA^4^3
"DATA",2006.631,5,2,1,0)
13
"DATA",2006.631,5,2,3,0)
14^1
"DATA",2006.631,5,2,4,0)
1^0
"DATA",2006.631,5,"DEF",0)
3030923.112755
"DATA",2006.631,5,"DEF",.5)
Case #~S3^Lock^Patient Name^ID #^Priority^Procedure^Image Date/Time~S1^Status^# Img~S2^Onl^RC^Mod^Imaging Loc^SITE^Interp By
"DATA",2006.631,5,"DEF",1)
1^2^3;12^4^5^6;25^7^8;6^9^10^12;10^15^11^23^20
"DATA",2006.631,5,"DEF",2)
13^14-^1
"DATA",2006.631,6,0)
All Examined, Interpreted, & Transcribed, by Date/Time^9993^A^ALL^3030502.153506^1^All Active #9993
"DATA",2006.631,6,1,0)
^2006.6311PA^17^15
"DATA",2006.631,6,1,1,0)
1
"DATA",2006.631,6,1,2,0)
2
"DATA",2006.631,6,1,3,0)
3^12
"DATA",2006.631,6,1,4,0)
4
"DATA",2006.631,6,1,5,0)
5
"DATA",2006.631,6,1,6,0)
6^25
"DATA",2006.631,6,1,7,0)
7
"DATA",2006.631,6,1,8,0)
8^6
"DATA",2006.631,6,1,9,0)
9
"DATA",2006.631,6,1,10,0)
10
"DATA",2006.631,6,1,11,0)
12^10
"DATA",2006.631,6,1,13,0)
15
"DATA",2006.631,6,1,14,0)
20
"DATA",2006.631,6,1,15,0)
23
"DATA",2006.631,6,1,17,0)
11
"DATA",2006.631,6,2,0)
^2006.6312PA^4^3
"DATA",2006.631,6,2,1,0)
13
"DATA",2006.631,6,2,3,0)
14^1
"DATA",2006.631,6,2,4,0)
1^0
"DATA",2006.631,6,"DEF",0)
3030923.112755
"DATA",2006.631,6,"DEF",.5)
Case #~S3^Lock^Patient Name^ID #^Priority^Procedure^Image Date/Time~S1^Status^# Img~S2^Onl^RC^Mod^Imaging Loc^SITE^Interp By
"DATA",2006.631,6,"DEF",1)
1^2^3;12^4^5^6;25^7^8;6^9^10^12;10^15^11^23^20
"DATA",2006.631,6,"DEF",2)
13^14-^1
"DATA",2006.631,10,0)
Newly Interpreted Exams for RECENT Compile^9995^N^ALL^3030502.153548^1^9995
"DATA",2006.631,10,1,0)
^2006.6311PA^1^1
"DATA",2006.631,10,1,1,0)
1
"DATA",2006.631,10,"DEF",0)
3030923.112755
"DATA",2006.631,10,"DEF",.5)
Case #~S3
"DATA",2006.631,10,"DEF",1)
1
"DATA",2006.631,10,"DEF",2)

"FIA",2006.63)
MAG RAD LIST DATA ELEMENTS
"FIA",2006.63,0)
^MAG(2006.63,
"FIA",2006.63,0,0)
2006.63
"FIA",2006.63,0,1)
y^y^f^^n^^y^o^n
"FIA",2006.63,0,10)

"FIA",2006.63,0,11)

"FIA",2006.63,0,"RLRO")

"FIA",2006.63,0,"VR")
3.0^MAG
"FIA",2006.63,2006.63)
0
"FIA",2006.631)
MAG RAD LISTS DEFINITION
"FIA",2006.631,0)
^MAG(2006.631,
"FIA",2006.631,0,0)
2006.631I
"FIA",2006.631,0,1)
y^y^f^^n^^y^r^n
"FIA",2006.631,0,10)

"FIA",2006.631,0,11)
I $P(^(0),"^",2)>9000
"FIA",2006.631,0,"RLRO")

"FIA",2006.631,0,"VR")
3.0^MAG
"FIA",2006.631,2006.631)
0
"FIA",2006.631,2006.6311)
0
"FIA",2006.631,2006.6312)
0
"FIA",2006.634)
MAGJ ZLIST SEARCH
"FIA",2006.634,0)
^MAG(2006.634,
"FIA",2006.634,0,0)
2006.634
"FIA",2006.634,0,1)
y^y^f^^^^n
"FIA",2006.634,0,10)

"FIA",2006.634,0,11)

"FIA",2006.634,0,"RLRO")

"FIA",2006.634,0,"VR")
3.0^MAG
"FIA",2006.634,2006.634)
0
"INI")
PRE^MAGJMN1
"INIT")
BLDALL^MAGJMN1
"KRN",.4,2625,-1)
1^1
"KRN",.4,2625,0)
MAGJ EXCAT PRINT    FILE #2006.61
"KRN",.401,10000,-1)
1^1
"KRN",.401,10000,0)
MAGJ EXCAT SORT    FILE #2006.61
"KRN",19,21832,-1)
1^1
"KRN",19,21832,0)
MAGJ E/E EXAM CATEGORIES
"KRN",19,21833,-1)
1^2
"KRN",19,21833,0)
MAGJ PRINT EXAM CAT
"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020402^126
"PKG",454,22,1,"PAH",1,0)
22^3030923
"PKG",454,22,1,"PAH",1,1,0)
^^15^15^3030923
"PKG",454,22,1,"PAH",1,1,1,0)
Imaging Patch 22 -- Vistarad Maintenance
"PKG",454,22,1,"PAH",1,1,2,0)
Routine Checksums:
"PKG",454,22,1,"PAH",1,1,3,0)
 
"PKG",454,22,1,"PAH",1,1,4,0)
MAGJEX1   value = 25378323
"PKG",454,22,1,"PAH",1,1,5,0)
MAGJEX1B  value = 6070161
"PKG",454,22,1,"PAH",1,1,6,0)
MAGJLS2   value = 17792693
"PKG",454,22,1,"PAH",1,1,7,0)
MAGJLS2B  value = 18169808
"PKG",454,22,1,"PAH",1,1,8,0)
MAGJLS3   value = 17053988
"PKG",454,22,1,"PAH",1,1,9,0)
MAGJLST1  value = 28230644
"PKG",454,22,1,"PAH",1,1,10,0)
MAGJMN1   value = 16954953
"PKG",454,22,1,"PAH",1,1,11,0)
MAGJORD   value = 7481199
"PKG",454,22,1,"PAH",1,1,12,0)
MAGJRT    value = 11832101
"PKG",454,22,1,"PAH",1,1,13,0)
MAGJUPD1  value = 17310296
"PKG",454,22,1,"PAH",1,1,14,0)
MAGJUTL1  value = 11539488
"PKG",454,22,1,"PAH",1,1,15,0)
MAGJUTL3  value = 9066809
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","MAGJEX1")
0^1^B75012350
"RTN","MAGJEX1",1,0)
MAGJEX1 ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  9:56 AM
"RTN","MAGJEX1",2,0)
 ;;3.0;IMAGING;**16,22**;Jul 29, 2003
"RTN","MAGJEX1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJEX1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJEX1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJEX1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJEX1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJEX1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJEX1",10,0)
 ;; |                                                               |
"RTN","MAGJEX1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJEX1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJEX1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJEX1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJEX1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJEX1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1",17,0)
 ;;
"RTN","MAGJEX1",18,0)
 Q
"RTN","MAGJEX1",19,0)
 ; Entry Points:
"RTN","MAGJEX1",20,0)
 ;   OPENCASE--Open Exam
"RTN","MAGJEX1",21,0)
 ;
"RTN","MAGJEX1",22,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR
"RTN","MAGJEX1",23,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJEX1",24,0)
 Q:$Q 1  Q
"RTN","MAGJEX1",25,0)
 ;
"RTN","MAGJEX1",26,0)
OPENCASE(MAGGRY,DATA) ; RPC Call: MAGJ RADCASEIMAGES
"RTN","MAGJEX1",27,0)
 ; MAGGRY holds $NA reference to ^TMP for Broker return message;
"RTN","MAGJEX1",28,0)
 ;   all ref's to MAGGRY use subscript indirection
"RTN","MAGJEX1",29,0)
 ; input in DATA:
"RTN","MAGJEX1",30,0)
 ; OPEN_FLAG^RADFN^RADTI^RACNI^RARPT^SERDISA^STK/LAY^USETGA
"RTN","MAGJEX1",31,0)
 ; OPEN_FLAG = 1/0 - 1: OPEN the case for update; else, view-only
"RTN","MAGJEX1",32,0)
 ; RADFN^RADTI^RACNI specify case of interest
"RTN","MAGJEX1",33,0)
 ; SERDISA = 1/0 - Disable Mult Series processing if true
"RTN","MAGJEX1",34,0)
 ; STK/LAY = 1/0 - 1:Open in Stack; 0:Open in Layout
"RTN","MAGJEX1",35,0)
 ; USETGA  = 1/0 - 1:Open .TGA file; 0:Open .BIG file
"RTN","MAGJEX1",36,0)
 ;
"RTN","MAGJEX1",37,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJEX1"
"RTN","MAGJEX1",38,0)
 N RARPT,RADFN,RADTI,RACNI,RADIV
"RTN","MAGJEX1",39,0)
 N DAYCASE,CURCASE,REPLY,CT,MAGS,STARTNOD,LOCKED,DATAOUT,RADATA,RIST,MDL
"RTN","MAGJEX1",40,0)
 N IMAG,MAGXX,MAGFILE,MAGFILE1,MAGFILE2,MAGFILE3,MAGLST,MAGOBJT,MODALITY
"RTN","MAGJEX1",41,0)
 N SERDISA,MAGSTRT,MAGEND,SERLBL,SERBRK,SERLIM,NSERIES,ALTPATH,CURPATHS
"RTN","MAGJEX1",42,0)
 N MIXEDUP,VIEWOK,STKLAY,USETGA,OPENCNT,USELORES,IMGST,REMOTE
"RTN","MAGJEX1",43,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJEX1",44,0)
 S CT=0,MODALITY="",DATAOUT="",DAYCASE="",MAGLST="MAGJOPENCASE",ALTPATH="",MIXEDUP=0,VIEWOK=1,OPENCNT=1
"RTN","MAGJEX1",45,0)
 ;
"RTN","MAGJEX1",46,0)
 ; <*> Next line assumes only 1 exam at a time--remove to
"RTN","MAGJEX1",47,0)
 ; implement more complex msgs (e.g., >1 case per call)
"RTN","MAGJEX1",48,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)),STARTNOD=0 K @MAGGRY  ; assign MAGGRY value
"RTN","MAGJEX1",49,0)
 ; S STARTNOD=$G(@MAGGRY@(0))+1 ; <*> enable this line if remove above
"RTN","MAGJEX1",50,0)
 ; I STARTNOD=1 K @MAGGRY       ;  ditto
"RTN","MAGJEX1",51,0)
 ;
"RTN","MAGJEX1",52,0)
 S CURCASE=$P(DATA,U),RARPT=+$P(DATA,U,5),SERDISA=+$P(DATA,U,6)
"RTN","MAGJEX1",53,0)
 S STKLAY=+$P(DATA,U,7),USETGA=+$P(DATA,U,8)
"RTN","MAGJEX1",54,0)
 S RADFN=$P(DATA,U,2),RADTI=$P(DATA,U,3),RACNI=$P(DATA,U,4)
"RTN","MAGJEX1",55,0)
 I RADFN,RADTI,RACNI D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,"",.X)
"RTN","MAGJEX1",56,0)
 I 'X S REPLY="4~Request Contains Invalid Case Pointer ("_RADFN_U_RADTI_U_RACNI_U_RARPT_")." G OPENCASZ
"RTN","MAGJEX1",57,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1))
"RTN","MAGJEX1",58,0)
 S RADIV=$P($G(^TMP($J,"MAGRAEX",1,2)),U,5) K ^TMP($J,"MAGRAEX")
"RTN","MAGJEX1",59,0)
 S RARPT=+$P(RADATA,U,10),DAYCASE=$P(RADATA,U,12)
"RTN","MAGJEX1",60,0)
 I 'RARPT!'$D(^RARPT(RARPT,2005)) S REPLY="4~This exam has no images associated with it." G OPENCASZ
"RTN","MAGJEX1",61,0)
 D CKINTEG^MAGJLST1(.X,RADFN,RADTI,RACNI,RARPT,RADATA)
"RTN","MAGJEX1",62,0)
 I X]"" S MIXEDUP=1,MIXEDUP("REPLY")=X ; DB corruption
"RTN","MAGJEX1",63,0)
 S REPLY="4~Attempting to open/display case #"_DAYCASE
"RTN","MAGJEX1",64,0)
 S IMGST=$$JBFETCH^MAGJUTL2(RARPT,.MAGS,USETGA)  ; open only if NOT on JB
"RTN","MAGJEX1",65,0)
 I +IMGST D  G OPENCASZ
"RTN","MAGJEX1",66,0)
 . I $D(MAGS("OFFLN")) N T,TT S T="",TT="" D
"RTN","MAGJEX1",67,0)
 .. F  S T=$O(MAGS("OFFLN",T)) Q:T=""  S TT=TT_$S(TT="":"",1:", ")_T
"RTN","MAGJEX1",68,0)
 .. S REPLY="2~Case #"_DAYCASE_"--Images for this exam are stored OFF-LINE.  To view these images, contact your Imaging Coordinator, and request mounting of the following platters: "_TT
"RTN","MAGJEX1",69,0)
 . E  S REPLY="2~Case #"_DAYCASE_"--"_+IMGST_" Images have been requested from Jukebox; try again later."
"RTN","MAGJEX1",70,0)
 I '$P(IMGST,U,2) S REPLY="2~No Images exist for Case #"_DAYCASE_"." G OPENCASZ
"RTN","MAGJEX1",71,0)
 S USELORES=+$P(IMGST,U,3)_U_$P(IMGST,U,2)
"RTN","MAGJEX1",72,0)
 ; set up series info
"RTN","MAGJEX1",73,0)
 I STKLAY,SERDISA S STKLAY=3 ; disable series in Stacker
"RTN","MAGJEX1",74,0)
 N SERHI S SERHI=$G(MAGS("SER",0))
"RTN","MAGJEX1",75,0)
 K SERBRK
"RTN","MAGJEX1",76,0)
 I SERHI>1,$P($G(^MAG(2006.69,1,0)),U,12) D  ;  Process for mult. Series
"RTN","MAGJEX1",77,0)
 . Q:SERDISA  ; user disabled from w/s
"RTN","MAGJEX1",78,0)
 . Q:STKLAY  ; <*> Don't do this for Stacker
"RTN","MAGJEX1",79,0)
 . N SERCT,SERSTR I '$D(SERLIM) S SERLIM=5 ; min size for a series
"RTN","MAGJEX1",80,0)
 . S SERSTR="",SERCT=0,SERBRK(0)=0
"RTN","MAGJEX1",81,0)
 . ; step 1: roll up "small" series at the bottom to next higher ones
"RTN","MAGJEX1",82,0)
 . F  Q:(MAGS("SER",SERHI)'<SERLIM)!(SERHI=1)  D
"RTN","MAGJEX1",83,0)
 .. S X=MAGS("SER",SERHI),Y=MAGS("SER",SERHI-1),Y=Y+X_U_$P(Y,U,2)_", "_$P(X,U,2)
"RTN","MAGJEX1",84,0)
 .. S SERHI=SERHI-1,MAGS("SER",SERHI)=Y
"RTN","MAGJEX1",85,0)
 . I SERHI<2 K SERBRK Q  ; no "real" series to enumerate
"RTN","MAGJEX1",86,0)
 . ; step 2: from top, fold "small" series into next lower ones
"RTN","MAGJEX1",87,0)
 . F I=1:1:SERHI S X=MAGS("SER",I),SERCT=SERCT+X D
"RTN","MAGJEX1",88,0)
 .. I +X'<SERLIM S SERBRK(SERCT)=SERSTR_$S(SERSTR="":"",1:", ")_$P(X,U,2),SERSTR="",SERBRK(0)=SERBRK(0)+1
"RTN","MAGJEX1",89,0)
 .. E  S SERSTR=SERSTR_$S(SERSTR="":"",1:", ")_$P(X,U,2)
"RTN","MAGJEX1",90,0)
 . I '$D(SERBRK(SERCT)) S SERBRK(SERCT)=SERSTR,SERBRK(0)=SERBRK(0)+1
"RTN","MAGJEX1",91,0)
 . I SERBRK(SERCT)<2 K SERBRK  ; only one "series" resulted
"RTN","MAGJEX1",92,0)
 I $D(SERBRK) S SERBRK=0,NSERIES=SERBRK(0) D
"RTN","MAGJEX1",93,0)
 . F  S MAGSTRT=SERBRK+1,SERBRK=$O(SERBRK(SERBRK)) Q:'SERBRK  S MAGEND=SERBRK,SERLBL="*S^Series "_SERBRK(SERBRK) D IMGLOOP^MAGJEX1B
"RTN","MAGJEX1",94,0)
 E  S MAGSTRT=1,MAGEND=MAGS,NSERIES=1 D IMGLOOP^MAGJEX1B
"RTN","MAGJEX1",95,0)
 S REPLY="0~Images for Case #"_DAYCASE
"RTN","MAGJEX1",96,0)
 ;
"RTN","MAGJEX1",97,0)
OPENCASZ I 'CT,(REPLY["Attempting") S REPLY="4~Unable to retrieve images for Case #"_DAYCASE_"."
"RTN","MAGJEX1",98,0)
 ;
"RTN","MAGJEX1",99,0)
 ; Contents of successful reply = 4 pipe ("|") pieces:
"RTN","MAGJEX1",100,0)
 ;1: # nodes below ^ Reply Msg Type ~ Reply Msg display text
"RTN","MAGJEX1",101,0)
 ;2: Exam ID String (= radfn^radti^racni^rarpt)
"RTN","MAGJEX1",102,0)
 ;3: Pt Name ^ CASE # ^ # Images ^ Proc. Name ^ Exam Date ^ Time ^
"RTN","MAGJEX1",103,0)
 ; modality ^ SSN ^ Stack/Layout ^ LOCKED? (1/0) [^ if only 1 series]
"RTN","MAGJEX1",104,0)
 ;4: Is Radiologist? ^ # Series ^ Alt_Path Flag ^ Opened Exam Count?
"RTN","MAGJEX1",105,0)
 ;
"RTN","MAGJEX1",106,0)
 S LOCKED=0
"RTN","MAGJEX1",107,0)
 I MIXEDUP D
"RTN","MAGJEX1",108,0)
 . S VIEWOK=$S($D(MAGJOB("KEYS","MAGJ SEE BAD IMAGES")):1,1:0)
"RTN","MAGJEX1",109,0)
 . I MIXEDUP>1 D
"RTN","MAGJEX1",110,0)
 .. S XPTS="",XDFN=0 F IMIX=0:1 S XDFN=$O(MIXEDUP(XDFN)) Q:'XDFN  S XPTS=XPTS_$S(IMIX:" and ",1:" ")_$$PNAM(XDFN)
"RTN","MAGJEX1",111,0)
 .. S XPTS=$S(IMIX=1:" ",1:"s ")_XPTS
"RTN","MAGJEX1",112,0)
 .. S REPLY=(7-VIEWOK)_"~This exam is registered for "_$$PNAM(RADFN)_"; however, it is linked to images for patient"_XPTS_".  This is a serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJEX1",113,0)
 . E  S REPLY=(7-VIEWOK)_"~"_MIXEDUP("REPLY")
"RTN","MAGJEX1",114,0)
 . I CURCASE S REPLY=REPLY_"  The exam is NOT Locked." S CURCASE=0
"RTN","MAGJEX1",115,0)
 I CT D
"RTN","MAGJEX1",116,0)
 . I CURCASE,$G(MAGJOB("CONSOLIDATED")),(RADIV'=DUZ(2)) D  S CURCASE=0
"RTN","MAGJEX1",117,0)
 .. S REPLY="5~Exam is for Station #"_$$STATN(RADIV)_"; you are logged on to #"_$$STATN(DUZ(2))_".  Exam is NOT Locked."
"RTN","MAGJEX1",118,0)
 . S RIST=$S(+MAGJOB("USER",1):1,1:0)
"RTN","MAGJEX1",119,0)
 . I CURCASE,RIST,'USELORES D LOCK  ; lock only for Current Case for Radiologist
"RTN","MAGJEX1",120,0)
 . S DATAOUT=$P(RADATA,U,4)_U_DAYCASE_U_$P(RADATA,U,9)
"RTN","MAGJEX1",121,0)
 . S X=$P(RADATA,U,6),T=$L(X,"  "),X=$P(X,"  ",1,T-1)_U_$P(X,"  ",T)
"RTN","MAGJEX1",122,0)
 . S DATAOUT=DATAOUT_U_X
"RTN","MAGJEX1",123,0)
 . S DATAOUT=DATAOUT_U_MODALITY_U_$P(RADATA,U,5)_U_STKLAY_U_LOCKED_$S(NSERIES>1:"",1:U)
"RTN","MAGJEX1",124,0)
 . S DATAOUT=DATAOUT_"|"_RIST_U_NSERIES_U_ALTPATH_U_OPENCNT
"RTN","MAGJEX1",125,0)
 . I USELORES D
"RTN","MAGJEX1",126,0)
 .. I +USELORES=+$P(USELORES,U,2) S X="All"
"RTN","MAGJEX1",127,0)
 .. E  S X=+USELORES_" of "_+$P(USELORES,U,2)
"RTN","MAGJEX1",128,0)
 .. I $E(REPLY,1,8)="0~Images" S REPLY="3~"
"RTN","MAGJEX1",129,0)
 .. E  S REPLY=REPLY_"  --  "
"RTN","MAGJEX1",130,0)
 .. S REPLY=REPLY_"Note: "_X_" images for Case #"_DAYCASE_" are REDUCED RESOLUTION images, using parameters set by your site Imaging Manager; to view full-resolution images, disable the Reduced Resolution option setting. Exam NOT Locked."
"RTN","MAGJEX1",131,0)
 S @MAGGRY@(STARTNOD)=CT_U_REPLY_"|"_RADFN_U_RADTI_U_RACNI_U_RARPT_"|"_DATAOUT
"RTN","MAGJEX1",132,0)
 ; if mixedup & not have keys to see images, delete image refs
"RTN","MAGJEX1",133,0)
 ;   & send only reply msg
"RTN","MAGJEX1",134,0)
 I MIXEDUP,('VIEWOK) S CT=0 K @MAGGRY S @MAGGRY@(0)=CT_U_REPLY
"RTN","MAGJEX1",135,0)
 E  S $P(@MAGGRY@(0),U)=CT+STARTNOD
"RTN","MAGJEX1",136,0)
 ; Image access log
"RTN","MAGJEX1",137,0)
 I CT D
"RTN","MAGJEX1",138,0)
 . I MAGJOB("ALTPATH") S REMOTE=$P(MAGJOB("ALTPATH"),U,2)
"RTN","MAGJEX1",139,0)
 . E  S REMOTE=0
"RTN","MAGJEX1",140,0)
 . D LOG^MAGJUTL3("VR-VW",RADFN,+$P(MAGS(1),U,4),+MAGS,REMOTE)
"RTN","MAGJEX1",141,0)
 . ; for locked exam, save data needed to log Interpreted event
"RTN","MAGJEX1",142,0)
 . I LOCKED S X=^XTMP("MAGJ","LOCK",RARPT)_U_RADFN_U_+$P(MAGS(1),U,4)_U_+MAGS_U_REMOTE,^(RARPT)=X
"RTN","MAGJEX1",143,0)
 Q
"RTN","MAGJEX1",144,0)
 ;
"RTN","MAGJEX1",145,0)
 ;
"RTN","MAGJEX1",146,0)
PNAM(X) ; return pt name for input DFN
"RTN","MAGJEX1",147,0)
 I X S X=$G(^DPT(+X,0)) I X]"" S X=$P(X,U)
"RTN","MAGJEX1",148,0)
 E  S X="UNKNOWN"
"RTN","MAGJEX1",149,0)
 Q X
"RTN","MAGJEX1",150,0)
 ;
"RTN","MAGJEX1",151,0)
STATN(X) ; get station #, else return input value
"RTN","MAGJEX1",152,0)
 N T
"RTN","MAGJEX1",153,0)
 I X]"" D GETS^DIQ(4,X,99,"","T") S T=$G(T(4,X_",",99,"E")) I T]"" S X=T
"RTN","MAGJEX1",154,0)
 Q X
"RTN","MAGJEX1",155,0)
 ;
"RTN","MAGJEX1",156,0)
LOCK ; A radiologist may lock multiple cases at a time. Each case
"RTN","MAGJEX1",157,0)
 ;   must have Exam Status ~= Examined, AND not be already locked
"RTN","MAGJEX1",158,0)
 ; NOTE: locking only ONE exam in a Printset
"RTN","MAGJEX1",159,0)
 ;  effectively locks ALL Printset exams
"RTN","MAGJEX1",160,0)
 I '$P($G(^MAG(2006.69,1,0)),U,4) Q  ;  Status Updates not enabled
"RTN","MAGJEX1",161,0)
 S X=$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,3)
"RTN","MAGJEX1",162,0)
 I '$D(^RA(72,"AVC","E",X)) S REPLY="5~For Case #"_DAYCASE_", current Status is "_$P(^RA(72,X,0),U)_"; Status Update will NOT be allowed." Q
"RTN","MAGJEX1",163,0)
 L +^XTMP("MAGJ","LOCK",RARPT):0
"RTN","MAGJEX1",164,0)
 I  S LOCKED=1 D
"RTN","MAGJEX1",165,0)
 . S X=$G(^XTMP("MAGJ","LOCK",RARPT)) I X]"",($P(X,U)'=DUZ) D
"RTN","MAGJEX1",166,0)
 .. S X=$S(+X:$$USERINF^MAGJUTL3(+X,1),1:"Unknown")
"RTN","MAGJEX1",167,0)
 .. S REPLY="3~Case #"_DAYCASE_" was previously locked by "_X_".  The lock is now assigned to you."
"RTN","MAGJEX1",168,0)
 . E  S REPLY="1~#"_DAYCASE_" ("_$P(RADATA,U,4)_") locked for update by "_$P(MAGJOB("USER",1),U,3)
"RTN","MAGJEX1",169,0)
 . S ^XTMP("MAGJ","LOCK",RARPT)=DUZ_U_$J_U_$H
"RTN","MAGJEX1",170,0)
 . S X=+$G(^XTMP("MAGJ","LOCK",RARPT,DAYCASE))+1,^(DAYCASE)=X_U_$J_U_$H
"RTN","MAGJEX1",171,0)
 ; above line counts # of locks, to account for mult open of same exam
"RTN","MAGJEX1",172,0)
 ; --needed to manage UN-Locks when close the exams
"RTN","MAGJEX1",173,0)
 E  S X=$P($G(^XTMP("MAGJ","LOCK",RARPT)),U) D
"RTN","MAGJEX1",174,0)
 . I DUZ'=X S X=$S(+X:$$USERINF^MAGJUTL3(+X,.01),1:"Unknown"),REPLY="5~Case #"_DAYCASE_" is Locked by "_$P(X,",",2)_" "_$P(X,",")_"; Status Update will NOT be allowed."
"RTN","MAGJEX1",175,0)
 . E  S REPLY="3~Case #"_DAYCASE_" is already locked by you, perhaps at another workstation."  ; will not cause a problem on either end
"RTN","MAGJEX1",176,0)
 Q
"RTN","MAGJEX1",177,0)
 ;
"RTN","MAGJEX1",178,0)
END ;
"RTN","MAGJEX1B")
0^2^B10226958
"RTN","MAGJEX1B",1,0)
MAGJEX1B ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  9:58 AM
"RTN","MAGJEX1B",2,0)
 ;;3.0;IMAGING;**16,22**;Jul 29, 2003
"RTN","MAGJEX1B",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1B",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJEX1B",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJEX1B",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJEX1B",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJEX1B",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJEX1B",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJEX1B",10,0)
 ;; |                                                               |
"RTN","MAGJEX1B",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJEX1B",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJEX1B",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJEX1B",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJEX1B",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJEX1B",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1B",17,0)
 ;;
"RTN","MAGJEX1B",18,0)
 Q
"RTN","MAGJEX1B",19,0)
 ; Subroutines for fetch exam images, etc.
"RTN","MAGJEX1B",20,0)
 ;
"RTN","MAGJEX1B",21,0)
IMGLOOP ; get data for all the images
"RTN","MAGJEX1B",22,0)
 ; This subroutine is called from MAGJEX1
"RTN","MAGJEX1B",23,0)
 ;       MAGGRY holds $NA reference to ^TMP where Broker return message is assembled;
"RTN","MAGJEX1B",24,0)
 ;   all references to MAGGRY use subscript indirection  
"RTN","MAGJEX1B",25,0)
 N DFN
"RTN","MAGJEX1B",26,0)
 I '$D(MAGJOB("ALTPATH")) S MAGJOB("ALTPATH")=0 ; facilitates testing
"RTN","MAGJEX1B",27,0)
 F IMAG=MAGSTRT:1:MAGEND S MAGIEN=$P(MAGS(IMAG),U,4) D
"RTN","MAGJEX1B",28,0)
 . S DFN=$P(MAGS(IMAG),U,8) I DFN=RADFN S MIXEDUP(RADFN)=""  ;ok
"RTN","MAGJEX1B",29,0)
 . E  S:'DFN DFN=0 S MIXEDUP=MIXEDUP+2,MIXEDUP(DFN)="" ; database corruption
"RTN","MAGJEX1B",30,0)
 . S MDL=$P(MAGS(IMAG),U,3)
"RTN","MAGJEX1B",31,0)
 . I MDL="DR" S MDL="CR"  ; for now, hard code cx of non-standard code
"RTN","MAGJEX1B",32,0)
 . I $G(SERBRK),(SERLBL]"") D    ; mark Begin of series
"RTN","MAGJEX1B",33,0)
 .. S CT=CT+1,@MAGGRY@(CT+STARTNOD)=SERLBL,SERLBL=""
"RTN","MAGJEX1B",34,0)
 . S MAGXX=MAGIEN D
"RTN","MAGJEX1B",35,0)
 .. I 'USETGA,($P(MAGS(IMAG),U,2)["BIG") D BIG^MAGFILEB Q
"RTN","MAGJEX1B",36,0)
 .. E  D VST^MAGFILEB         ; default is to get .TGA file
"RTN","MAGJEX1B",37,0)
 . I MAGJOB("ALTPATH") S X=$P(MAGS(IMAG),U,6) I X D
"RTN","MAGJEX1B",38,0)
 .. F I=1:1:$L(X,",") S T=$P(X,",",I) S:T CURPATHS(T)=""
"RTN","MAGJEX1B",39,0)
 . S CT=CT+1,@MAGGRY@(CT+STARTNOD)="B2^"_MAGIEN_U_MAGFILE2
"RTN","MAGJEX1B",40,0)
 . I MODALITY="" D
"RTN","MAGJEX1B",41,0)
 .. N T S T=$P("1dummy1^CT^CR^MR^US^AS^CD^CS^DG^EC^FA^LP^MA^PT^ST^XA^NM^OT^BI^CP^DD^DM^ES^FS^LS^MS^RG^TG^RF^RTIMAGE^RTSTRUCT^HC^RTDOSE^RTPLAN^RTRECORD^DX^MG^IO^PX",U_MDL_U,1)
"RTN","MAGJEX1B",42,0)
 .. S MODALITY=$L(T,U)
"RTN","MAGJEX1B",43,0)
 .. I MODALITY>38 S MODALITY=9999  ; 38=TOTAL # modalities defined; else 9999
"RTN","MAGJEX1B",44,0)
 .. I STKLAY S OPENCNT=0 ; no limit on WS for # of exams open in StackVwr
"RTN","MAGJEX1B",45,0)
 ;
"RTN","MAGJEX1B",46,0)
 I 'MAGJOB("ALTPATH") S ALTPATH=-1
"RTN","MAGJEX1B",47,0)
 E  D
"RTN","MAGJEX1B",48,0)
 . S T=0 F  S T=$O(CURPATHS(T)) Q:'T  I $D(MAGJOB("LOC",T)) Q
"RTN","MAGJEX1B",49,0)
 . S ALTPATH=$S('T:0,1:1)
"RTN","MAGJEX1B",50,0)
 . I ALTPATH=$P(MAGJOB("ALTPATH"),U,2) S ALTPATH=-1
"RTN","MAGJEX1B",51,0)
 . E  S $P(MAGJOB("ALTPATH"),U,2)=ALTPATH
"RTN","MAGJEX1B",52,0)
 Q  ; img loop
"RTN","MAGJEX1B",53,0)
 ;
"RTN","MAGJEX1B",54,0)
END ;
"RTN","MAGJLS2")
0^12^B65376693
"RTN","MAGJLS2",1,0)
MAGJLS2 ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  9:58 AM
"RTN","MAGJLS2",2,0)
 ;;3.0;IMAGING;**22**;Jul 29, 2003
"RTN","MAGJLS2",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2",10,0)
 ;; |                                                               |
"RTN","MAGJLS2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",17,0)
 ;;
"RTN","MAGJLS2",18,0)
 Q
"RTN","MAGJLS2",19,0)
 ; Subroutines for fetching Exam Info for Radiology Workstation
"RTN","MAGJLS2",20,0)
 ; Exam listings:
"RTN","MAGJLS2",21,0)
 ;  ACTIVE -- list exams (Unread, Recent, &/or Pending) for input Imaging
"RTN","MAGJLS2",22,0)
 ;          Type(s) (i.e., ~modality)
"RTN","MAGJLS2",23,0)
 ;       RPC Call: MAGJ RADACTIVEEXAMS
"RTN","MAGJLS2",24,0)
 ;  BKGND -- EP for Background Compile of UNREAD list
"RTN","MAGJLS2",25,0)
 ;  BKGND2 -- EP for Background Compile of RECENT list
"RTN","MAGJLS2",26,0)
 Q
"RTN","MAGJLS2",27,0)
BKGERR S ERRCOUNT=$G(ERRCOUNT)+1 H 3 I ERRCOUNT>2 K ZTQUEUED G ^XUSCLEAN ; prevent bkgnd loop
"RTN","MAGJLS2",28,0)
ERR1 I $G(LSTNAM)]"" L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",29,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",30,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLS2",31,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2",32,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLS2",33,0)
 Q:$Q 1  Q
"RTN","MAGJLS2",34,0)
ACTIVE(MAGGRY,DATA) ; EP for getting Active (Unread/Recent/Pend) Exam Lists
"RTN","MAGJLS2",35,0)
 ; MAGGRY holds $NA reference to ^TMP where Broker return message is assembled;
"RTN","MAGJLS2",36,0)
 ;   all references to MAGGRY use subscript indirection
"RTN","MAGJLS2",37,0)
 ; If not use background, compile list in foreground ...
"RTN","MAGJLS2",38,0)
 ;
"RTN","MAGJLS2",39,0)
 N BKGND,COMPFAIL,MAGLST,LSTPARAM,LSTREQ,LSTID,LSTNUM,LSTNAM,NEWLIST
"RTN","MAGJLS2",40,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLS2"
"RTN","MAGJLS2",41,0)
 S X=$P(DATA,U) D PARAMS^MAGJLS2B(X)
"RTN","MAGJLS2",42,0)
 I 'LSTID S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with Exams List Compile--"_DATA_"." Q
"RTN","MAGJLS2",43,0)
 I BKGND,LSTREQ="U" D BKREQU Q  ; Deal w/ UNREAD Exams compiled in bkgnd
"RTN","MAGJLS2",44,0)
 I BKGND,LSTREQ="R" D BKREQR Q  ; RECENT Exams compiled in bkgnd
"RTN","MAGJLS2",45,0)
 I BKGND,LSTREQ="A" D BKREQA(DATA) Q  ; ALL Active Exams
"RTN","MAGJLS2",46,0)
 D FOREGND    ; other list types, or site not enabled bkgnd compile
"RTN","MAGJLS2",47,0)
ACTIVEZ Q
"RTN","MAGJLS2",48,0)
 ;
"RTN","MAGJLS2",49,0)
FOREGND ; compile in foreground
"RTN","MAGJLS2",50,0)
 D BLDACTV^MAGJLS3(.MAGLST,LSTPARAM)
"RTN","MAGJLS2",51,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST) K @MAGLST
"RTN","MAGJLS2",52,0)
 Q
"RTN","MAGJLS2",53,0)
 ;
"RTN","MAGJLS2",54,0)
BKREQU ; UNREAD exams from bkgnd
"RTN","MAGJLS2",55,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):0
"RTN","MAGJLS2",56,0)
 E  D BKOUT("UNREAD") Q           ; bkgnd process IS running
"RTN","MAGJLS2",57,0)
 ; bkgnd process is NOT running, so start it!
"RTN","MAGJLS2",58,0)
 ; this 2nd errtrap is to properly deal with locks if error occurs
"RTN","MAGJLS2",59,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR1^MAGJLS2"
"RTN","MAGJLS2",60,0)
 S ZTRTN="BKGND^MAGJLS2",ZTDESC="IMAGING VistaRad UNREAD List Compile"
"RTN","MAGJLS2",61,0)
 S ZTDTH=$H,ZTIO="" D ^%ZTLOAD
"RTN","MAGJLS2",62,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",63,0)
 I LSTAGE>(DELTA+300)  S BKGPROC=2 D  ; Foregnd compile list if need fresh one
"RTN","MAGJLS2",64,0)
 . D LSTCOMP(.COMPFAIL) K BKGPROC S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",65,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",66,0)
 I +$G(COMPFAIL) S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Unable to Compile a fresh Unread Exams list"
"RTN","MAGJLS2",67,0)
 E  D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE)
"RTN","MAGJLS2",68,0)
 Q
"RTN","MAGJLS2",69,0)
 ;
"RTN","MAGJLS2",70,0)
BKREQR ; Recent Exams from bkgnd
"RTN","MAGJLS2",71,0)
 D BKOUT("RECENT")
"RTN","MAGJLS2",72,0)
 Q
"RTN","MAGJLS2",73,0)
 ;
"RTN","MAGJLS2",74,0)
BKOUT(LSTNM) ; output a list from the bkgnd process
"RTN","MAGJLS2",75,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",76,0)
 I 'LSTNUM S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with "_LSTNM_" List Compile program (age="_LSTAGE_" for "_LSTNAM_")"_$S(LSTNAM["9992":"--May need to Schedule RECENT List Compile in TaskMan.",1:"")
"RTN","MAGJLS2",77,0)
 E  D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE)
"RTN","MAGJLS2",78,0)
 Q
"RTN","MAGJLS2",79,0)
 ;
"RTN","MAGJLS2",80,0)
BKREQA(DATA) ; ALL Active from Bkgnd
"RTN","MAGJLS2",81,0)
 ; Copy compiles of Unread & Recent to a scratch global, & call lstout
"RTN","MAGJLS2",82,0)
 N ALLGO,CNT,GETLST,ICNT,REPLY
"RTN","MAGJLS2",83,0)
 S ALLGO=1,CNT=0
"RTN","MAGJLS2",84,0)
 F GETLST=9991,9992 D  I 'ALLGO S REPLY="Component List "_GETLST_ALLGO Q
"RTN","MAGJLS2",85,0)
 . D PARAMS^MAGJLS2B(GETLST) I 'LSTID S ALLGO=" not properly defined."  Q
"RTN","MAGJLS2",86,0)
 . S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",87,0)
 . I 'LSTNUM S ALLGO=" needs more time to compile." Q
"RTN","MAGJLS2",88,0)
 . F ICNT=1:1:$G(^XTMP("MAGJ2",LSTNAM,LSTNUM,0,1)) S X=^XTMP("MAGJ2",LSTNAM,LSTNUM,ICNT,1),Y=^(2),CNT=CNT+1,^TMP($J,"MAGJ",CNT,1)=X,^(2)=Y
"RTN","MAGJLS2",89,0)
 I ALLGO D
"RTN","MAGJLS2",90,0)
 . S ^TMP($J,"MAGJ",0,1)=CNT_U_"1~ALL Active Exams",^(2)=""
"RTN","MAGJLS2",91,0)
 . D PARAMS^MAGJLS2B($P(DATA,U))
"RTN","MAGJLS2",92,0)
 . D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^TMP($J,"MAGJ")))
"RTN","MAGJLS2",93,0)
 I 'ALLGO S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with ALL Exams List Compile "_DATA_". "_REPLY
"RTN","MAGJLS2",94,0)
 Q
"RTN","MAGJLS2",95,0)
 ;
"RTN","MAGJLS2",96,0)
BKGND ; EP for background compile of UNREAD exams
"RTN","MAGJLS2",97,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):600 ; allow fgnd job to finish compile
"RTN","MAGJLS2",98,0)
 E  Q  ; I must already be running!
"RTN","MAGJLS2",99,0)
 N BKGLSTID S BKGLSTID=9991 G BKGNDA
"RTN","MAGJLS2",100,0)
 Q
"RTN","MAGJLS2",101,0)
BKGND2 ; EP for background compile of RECENT exams
"RTN","MAGJLS2",102,0)
 N BKGLSTID S BKGLSTID=9992 G BKGNDA
"RTN","MAGJLS2",103,0)
 Q
"RTN","MAGJLS2",104,0)
BKGNDA S BKGPROC=1,U="^"
"RTN","MAGJLS2",105,0)
 N $ETRAP,$ESTACK S $ETRAP="D BKGERR^MAGJLS2"
"RTN","MAGJLS2",106,0)
 D PARAMS^MAGJLS2B(BKGLSTID)
"RTN","MAGJLS2",107,0)
BKLOOP ; Loop here & do compile of "master" list for UNREAD List
"RTN","MAGJLS2",108,0)
 S BKLOOP=$G(BKLOOP)+1
"RTN","MAGJLS2",109,0)
 I BKLOOP>1 D PARAMS^MAGJLS2B(9991) ; Only UNREAD loops--refresh params
"RTN","MAGJLS2",110,0)
 I 'LSTID D  G BKGNDZ
"RTN","MAGJLS2",111,0)
 . S X="0^4~Problem with BACKGROUND Compile of Exams List"
"RTN","MAGJLS2",112,0)
 . F I=1,2 K ^XTMP("MAGJ2",LSTNAM,I)
"RTN","MAGJLS2",113,0)
 . F I=1,2 S ^XTMP("MAGJ2",LSTNAM,I,0,1)=X,^(2)=""  ; get msg to WS user
"RTN","MAGJLS2",114,0)
 I 'BKGND G BKGNDZ  ; need this to cover for excessive time to compile
"RTN","MAGJLS2",115,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",116,0)
 I LSTREQ="U",(LSTAGE<DELTA) D  I 'BKGND G BKGNDZ ;bkgnd compile off?
"RTN","MAGJLS2",117,0)
 . N ITEST,TEST,MORE
"RTN","MAGJLS2",118,0)
 . S TEST=(DELTA-LSTAGE)\5,MORE=(DELTA-LSTAGE)-(5*TEST)
"RTN","MAGJLS2",119,0)
 . ; while waiting for interval, periodically chk for stop conditions
"RTN","MAGJLS2",120,0)
 . F ITEST=1:1:TEST H 5 D  Q:'BKGND
"RTN","MAGJLS2",121,0)
 .. S BKGND=+$P($G(^MAG(2006.69,1,0)),U,8) Q:'BKGND
"RTN","MAGJLS2",122,0)
 .. I $D(ZTQUEUED),$$S^%ZTLOAD S BKGND=0 ; Exit bkgnd via TaskMan Req
"RTN","MAGJLS2",123,0)
 . H MORE
"RTN","MAGJLS2",124,0)
 D LSTCOMP()
"RTN","MAGJLS2",125,0)
 I LSTREQ="R" D NEWINT
"RTN","MAGJLS2",126,0)
 I LSTREQ="U" D UPDR G BKLOOP  ;UNREAD only loops; RECENT uses TaskMan
"RTN","MAGJLS2",127,0)
BKGNDZ I LSTREQ="U" L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",128,0)
 S ZTREQ="@"  ;  clean up task entry
"RTN","MAGJLS2",129,0)
 Q  ; Exit bkgnd compile
"RTN","MAGJLS2",130,0)
 ;
"RTN","MAGJLS2",131,0)
UPDR ; Incrementally add Newly Interpreted exams to Recent List
"RTN","MAGJLS2",132,0)
 D PARAMS^MAGJLS2B(9995)
"RTN","MAGJLS2",133,0)
 I 'LSTID G UPDRZ
"RTN","MAGJLS2",134,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",135,0)
 D LSTCOMP()
"RTN","MAGJLS2",136,0)
UPDRZ Q  ;
"RTN","MAGJLS2",137,0)
 ;
"RTN","MAGJLS2",138,0)
NEWINT ; Make sure exams newly Interpreted since Recent Compile started
"RTN","MAGJLS2",139,0)
 ; are appended to the Recent List, by adding them to the "RECENT" index.
"RTN","MAGJLS2",140,0)
 ; First, get list of all potential candidates:
"RTN","MAGJLS2",141,0)
 N INDX L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",142,0)
 E  Q
"RTN","MAGJLS2",143,0)
 S INDX=+$G(^TMP($J,"NEWINT")) ; counter when Recent Compile started
"RTN","MAGJLS2",144,0)
 I INDX S INDX=INDX-1 F  S INDX=$O(^XTMP("MAGJ2","RECENT",INDX)) Q:'INDX  S X=^(INDX) I X S ^TMP($J,"NEWINT",0,INDX)=X
"RTN","MAGJLS2",145,0)
 K ^XTMP("MAGJ2","RECENT") S ^("RECENT",0)=0 ; init this index
"RTN","MAGJLS2",146,0)
 L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",147,0)
 ; now find those not included in Recent Compile, and add to index
"RTN","MAGJLS2",148,0)
 S INDX=""
"RTN","MAGJLS2",149,0)
 F  S INDX=$O(^TMP($J,"NEWINT",0,INDX)) Q:'INDX  S X=^(INDX) D
"RTN","MAGJLS2",150,0)
 . I $D(^TMP($J,"NEWINT",$P(X,U,1,3))) Q  ; already in the compile
"RTN","MAGJLS2",151,0)
 . L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",152,0)
 . E  Q
"RTN","MAGJLS2",153,0)
 . S I=+$G(^XTMP("MAGJ2","RECENT",0))+1,$P(^(0),U)=I,^(I)=X ; add to indx
"RTN","MAGJLS2",154,0)
 . L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",155,0)
 K ^TMP($J,"NEWINT")
"RTN","MAGJLS2",156,0)
 Q
"RTN","MAGJLS2",157,0)
 ;
"RTN","MAGJLS2",158,0)
LSTCOMP(COMPFAIL) ; Compile new list; subrtn used by Active and Bkgnd tags
"RTN","MAGJLS2",159,0)
 S COMPFAIL=0 ; Return T/F for "Executed a List Compile?"
"RTN","MAGJLS2",160,0)
 L +^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE"):60 ; shouldn't need any time
"RTN","MAGJLS2",161,0)
 E  S COMPFAIL=1 G LSTCOMZ
"RTN","MAGJLS2",162,0)
 S NEWLIST=$S(LSTNUM=1:2,1:1)       ; toggle node to use for new compile
"RTN","MAGJLS2",163,0)
 N TS,COMTIM
"RTN","MAGJLS2",164,0)
 S TS="" F I=2,0 S %H=$H+I D YMD^%DTC S TS=TS_$S(TS="":"",1:U)_X
"RTN","MAGJLS2",165,0)
 S ^XTMP("MAGJ2",0)=TS_U_"VistaRad List Compile"
"RTN","MAGJLS2",166,0)
 S ^XTMP("MAGJ2",0,LSTNAM,NEWLIST)=$H
"RTN","MAGJLS2",167,0)
 D BLDACTV^MAGJLS3(.MAGGRY,LSTPARAM,$NA(^XTMP("MAGJ2",LSTNAM,NEWLIST)))
"RTN","MAGJLS2",168,0)
 S COMTIM=$$DELTA($P(^XTMP("MAGJ2",0,LSTNAM,NEWLIST),U))
"RTN","MAGJLS2",169,0)
 S ^XTMP("MAGJ2",LSTNAM,NEWLIST)=$H_U_$J_U_COMTIM
"RTN","MAGJLS2",170,0)
 S ^XTMP("MAGJ2","BKGND",LSTNAM,0)=NEWLIST_U_$H
"RTN","MAGJLS2",171,0)
 I $G(^XTMP("MAGJ2",0,"TIME")) D
"RTN","MAGJLS2",172,0)
 . S T1=$P($H,",",2)/3600,T2=$E(100+(T1\1),2,3),T=T2_":"_$E(100+(T1-T2*60),2,3)
"RTN","MAGJLS2",173,0)
 . S ^XTMP("MAGJ2",0,"TIME",LSTNAM,+$H,T)=COMTIM K T,T1,T2
"RTN","MAGJLS2",174,0)
LSTCOMZ L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",175,0)
 Q  ;
"RTN","MAGJLS2",176,0)
 ;
"RTN","MAGJLS2",177,0)
CURLIST(LSTNAM,WAIT)     ; return current list & its age in seconds
"RTN","MAGJLS2",178,0)
 ; 
"RTN","MAGJLS2",179,0)
 S WAIT=+$G(WAIT)
"RTN","MAGJLS2",180,0)
 N X,RET,AGE,TRY,START,EXTRATIM
"RTN","MAGJLS2",181,0)
 S TRY=0,START=$H,EXTRATIM=$S(LSTREQ="U":600,1:1800)
"RTN","MAGJLS2",182,0)
 S X=$G(^XTMP("MAGJ2","BKGND",LSTNAM,0))  ; Cur # ^ $H created
"RTN","MAGJLS2",183,0)
 I X="" S RET="^86400" G CURLISZ  ; this lstnam has yet to be compiled!
"RTN","MAGJLS2",184,0)
 S AGE=$$DELTA($P(X,U,2)),RET=$P(X,U)_U_AGE
"RTN","MAGJLS2",185,0)
 I AGE>(DELTA+EXTRATIM) S $P(RET,U)=""  ; Something must be wrong w/ compile, so force an error message
"RTN","MAGJLS2",186,0)
CURLISZ Q RET
"RTN","MAGJLS2",187,0)
 ;
"RTN","MAGJLS2",188,0)
DELTA(X,Y) ; calc # seconds between 2 $h values; default 2nd value = now
"RTN","MAGJLS2",189,0)
 ; useful limit is one day
"RTN","MAGJLS2",190,0)
 I $G(Y)="" S Y=$H
"RTN","MAGJLS2",191,0)
 I +Y=+X
"RTN","MAGJLS2",192,0)
 E  D
"RTN","MAGJLS2",193,0)
 . I Y-X=1 S $P(Y,",",2)=86400+$P(Y,",",2)  ; cross midnight boundary
"RTN","MAGJLS2",194,0)
 . E  S $P(X,",",2)=0,$P(Y,",",2)=86400  ; more than one day
"RTN","MAGJLS2",195,0)
 Q ($P(Y,",",2)-$P(X,",",2))
"RTN","MAGJLS2",196,0)
 ;
"RTN","MAGJLS2",197,0)
END ;
"RTN","MAGJLS2B")
0^8^B70800707
"RTN","MAGJLS2B",1,0)
MAGJLS2B ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  9:59 AM
"RTN","MAGJLS2B",2,0)
 ;;3.0;IMAGING;**16,22**;Jul 29, 2003
"RTN","MAGJLS2B",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2B",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2B",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2B",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2B",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2B",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2B",10,0)
 ;; |                                                               |
"RTN","MAGJLS2B",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2B",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2B",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2B",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2B",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2B",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",17,0)
 ;;
"RTN","MAGJLS2B",18,0)
 Q
"RTN","MAGJLS2B",19,0)
 ; Subroutines for fetching Exam Info for Radiology Workstation
"RTN","MAGJLS2B",20,0)
 ;
"RTN","MAGJLS2B",21,0)
PARAMS(X) ; Initialize some variables used for Exam Lists
"RTN","MAGJLS2B",22,0)
 N LASTEDIT
"RTN","MAGJLS2B",23,0)
 S LSTID=+$O(^MAG(2006.631,"C",X,""))
"RTN","MAGJLS2B",24,0)
 I 'LSTID S LSTID="Invalid List ID" Q  ;
"RTN","MAGJLS2B",25,0)
 S X=^MAG(2006.631,LSTID,0)
"RTN","MAGJLS2B",26,0)
 I '$P(X,U,6) S LSTID="LIST NOT ENABLED" Q  ;
"RTN","MAGJLS2B",27,0)
 S LSTTL=$P(X,U),LSTREQ=$P(X,U,3),LSTPARAM=LSTREQ_U_$P(X,U,4),LASTEDIT=$P(X,U,5)
"RTN","MAGJLS2B",28,0)
 S LSTTL=$S(LSTREQ="U":"UNREAD",LSTREQ="R":"RECENT",LSTREQ="A":"ACTIVE",LSTREQ="P":"PENDING",LSTREQ="N":"NEWLY INTERP",1:"")_" EXAMS: "_LSTTL
"RTN","MAGJLS2B",29,0)
 I $P(LSTPARAM,U,2)="" S $P(LSTPARAM,U,2)="ALL" ; dflt All ImagingTypes
"RTN","MAGJLS2B",30,0)
 S X=$G(^MAG(2006.69,1,0)),BKGND=+$P(X,U,8),DELTA=+$P(X,U,$S(LSTREQ="U":9,1:13))*60
"RTN","MAGJLS2B",31,0)
 I BKGND,'DELTA S DELTA=360 ;dflt Unread List compile cycle time secs
"RTN","MAGJLS2B",32,0)
 S LSTNAM="LS"_LSTID
"RTN","MAGJLS2B",33,0)
 I BKGND S LSTNAM=$S(LSTREQ="U":"LS9991",LSTREQ="R":"LS9992",LSTREQ="N":"LS9995",1:LSTNAM) ; hard-code for "Master" list Bkgnd compile
"RTN","MAGJLS2B",34,0)
 Q
"RTN","MAGJLS2B",35,0)
 ;
"RTN","MAGJLS2B",36,0)
SETVARS(LSTID) ; build output control variables
"RTN","MAGJLS2B",37,0)
 D LSTVAR(LSTID),SRTVAR(LSTID),SELVAR(LSTID)
"RTN","MAGJLS2B",38,0)
 Q
"RTN","MAGJLS2B",39,0)
 ;
"RTN","MAGJLS2B",40,0)
LSTVAR(LSTID) ; build output columns string
"RTN","MAGJLS2B",41,0)
 S MDLVAR=^MAG(2006.631,LSTID,"DEF",1),LSTHDR=^(.5)
"RTN","MAGJLS2B",42,0)
 N I,XX,SC,XOUT,XOUT2
"RTN","MAGJLS2B",43,0)
 S SC=";",XOUT="",XOUT2=""
"RTN","MAGJLS2B",44,0)
 F I=1:1:$L(MDLVAR,U) S XX=$P(MDLVAR,U,I) D
"RTN","MAGJLS2B",45,0)
 . I +XX=12 I '$G(SNDREMOT) Q  ; exclude RC ind
"RTN","MAGJLS2B",46,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",47,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",48,0)
 . S XOUT2=XOUT2_$S(XOUT2="":"",1:U)_$P(LSTHDR,U,I)
"RTN","MAGJLS2B",49,0)
 S MDLVAR=XOUT,LSTHDR=XOUT2
"RTN","MAGJLS2B",50,0)
 Q
"RTN","MAGJLS2B",51,0)
SRTVAR(LSTID) ; build sort-variables indirect string in SORTSS
"RTN","MAGJLS2B",52,0)
 ;  this string is referenced indirectly when compiling output list (see tag LSTOUT)
"RTN","MAGJLS2B",53,0)
 S MDSVAR=^MAG(2006.631,LSTID,"DEF",2)
"RTN","MAGJLS2B",54,0)
 N I,XX,XOUT,HAVEONE
"RTN","MAGJLS2B",55,0)
 S SORTSS="",XOUT="",HAVEONE=0
"RTN","MAGJLS2B",56,0)
 F I=1:1:$L(MDSVAR,U) S XX=$P(MDSVAR,U,I) D
"RTN","MAGJLS2B",57,0)
 . I +XX=12 Q:'$G(SNDREMOT)   ; exclude RC ind
"RTN","MAGJLS2B",58,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",59,0)
 . I 'HAVEONE S HAVEONE=(+XX=1)  ; 1 = Case #
"RTN","MAGJLS2B",60,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",61,0)
 . S XX=$S(XX?1N.N1"-":"-",1:"")_"MD("_+XX_")"
"RTN","MAGJLS2B",62,0)
 . S SORTSS=SORTSS_","_XX
"RTN","MAGJLS2B",63,0)
 I 'HAVEONE S SORTSS=SORTSS_",MD(1)",XOUT=XOUT_U_1  ; guarantee unique entry each exam
"RTN","MAGJLS2B",64,0)
 I $E(SORTSS)="," S SORTSS=$E(SORTSS,2,999)
"RTN","MAGJLS2B",65,0)
 S MDSVAR=XOUT
"RTN","MAGJLS2B",66,0)
 Q
"RTN","MAGJLS2B",67,0)
 ;
"RTN","MAGJLS2B",68,0)
SELVAR(LSTID) ; build selection logic executes, ret in DIS array
"RTN","MAGJLS2B",69,0)
 N CX,DC,DCX,DL,DLX,EXP,I,IDL,SELVAR,SELVAR2,SS
"RTN","MAGJLS2B",70,0)
 S SS=0 F  S SS=$O(^MAG(2006.631,LSTID,"DEF",3,SS)) Q:'SS  S DC(SS)=^(SS)
"RTN","MAGJLS2B",71,0)
 S SS=0 F I=1:1 S SS=$O(^MAG(2006.631,LSTID,"DEF",4,SS)) Q:'SS  S DL(I)=^(SS)
"RTN","MAGJLS2B",72,0)
 ;  DL(5)="^2^3'^" <DLX     CX=3'    DC(2)="1^>44" <DCX
"RTN","MAGJLS2B",73,0)
 K DIS,MDCVAR S DIS(0)=0
"RTN","MAGJLS2B",74,0)
 F IDL=1:1 S DLX=$G(DL(IDL)) Q:DLX=""  S DIS(0)=DIS(0)+1,DIS(DIS(0))="" D
"RTN","MAGJLS2B",75,0)
 . F I=2:1:$L(DLX,U)-1 S CX=$P(DLX,U,I) S DCX=DC(+CX) D
"RTN","MAGJLS2B",76,0)
 .. S EXP="(MD("_+DCX_")"_$P(DCX,U,2)_")"
"RTN","MAGJLS2B",77,0)
 .. S EXP="I "_$S(CX["'":"'",1:"")_EXP
"RTN","MAGJLS2B",78,0)
 .. S DIS(DIS(0))=DIS(DIS(0))_" "_EXP
"RTN","MAGJLS2B",79,0)
 .. S MDCVAR(+DCX)=""
"RTN","MAGJLS2B",80,0)
 Q
"RTN","MAGJLS2B",81,0)
 ;
"RTN","MAGJLS2B",82,0)
CHKLOCK(RARPT) ; If exam is locked, return initials of locking user
"RTN","MAGJLS2B",83,0)
 ; Also return truth flag for locking user = logon user
"RTN","MAGJLS2B",84,0)
 N X S X="" I RARPT D
"RTN","MAGJLS2B",85,0)
 . L +^XTMP("MAGJ","LOCK",RARPT):0 I  D
"RTN","MAGJLS2B",86,0)
 .. S X=$G(^XTMP("MAGJ","LOCK",RARPT)) I X]"" S X=$P(X,U)_U_($P(X,U)=DUZ)
"RTN","MAGJLS2B",87,0)
 .. L -^XTMP("MAGJ","LOCK",RARPT)
"RTN","MAGJLS2B",88,0)
 . E  S X=$P($G(^XTMP("MAGJ","LOCK",RARPT)),U)_U_0
"RTN","MAGJLS2B",89,0)
 I X]"" S $P(X,U)=$S(+X:$$USERINF^MAGJUTL3(+X,1),1:"Unknown")
"RTN","MAGJLS2B",90,0)
 Q X
"RTN","MAGJLS2B",91,0)
 ;
"RTN","MAGJLS2B",92,0)
SHOWPLAC(X) ; return list of places to show: all defined places NOT equal to
"RTN","MAGJLS2B",93,0)
 ; the user's logon place
"RTN","MAGJLS2B",94,0)
 N IEN,SHOWPLAC S SHOWPLAC=""
"RTN","MAGJLS2B",95,0)
 S IEN=0 F  S IEN=$O(^MAG(2006.1,IEN)) Q:'IEN  I IEN'=+MAGJOB("SITEP") S X=$P(^(IEN,0),U,9) I X]"" S SHOWPLAC=SHOWPLAC_","_X
"RTN","MAGJLS2B",96,0)
 I SHOWPLAC]"" S SHOWPLAC=1_U_SHOWPLAC_"," ; 1 for logical true
"RTN","MAGJLS2B",97,0)
 Q SHOWPLAC
"RTN","MAGJLS2B",98,0)
 ;
"RTN","MAGJLS2B",99,0)
LSTOUT(MAGGRY,LSTID,MAGLST,LSTAGE) ; Build output list, w/ sort & selection
"RTN","MAGJLS2B",100,0)
 ;  Input: LSTID=List def'n
"RTN","MAGJLS2B",101,0)
 ;         MAGLST=Indirect global ref for input records; all reads use subscript indirection
"RTN","MAGJLS2B",102,0)
 ;       the nodes in @MAGLST contain:
"RTN","MAGJLS2B",103,0)
 ;       
"RTN","MAGJLS2B",104,0)
 ;  Node1=DFN ^ DTI ^ CNI ^ PtName ^ SSN ^ Img Date/Time(?) ^ Exam Date ^ Acn# ^ Proc ^ RARPT
"RTN","MAGJLS2B",105,0)
 ;        ^ Status IEN ^ DAYCASE ^ Img Loc'n ^ Status Text ^ Status Order ^ RADTPRT ^ CPT Code ^ ImgTypABB
"RTN","MAGJLS2B",106,0)
 ;  Node2=REQLOCA ^ REQLOCName ^ Interp Rad'ist ^ Complication ind. ^ Division ^ Site ^ Rist Is Me?
"RTN","MAGJLS2B",107,0)
 ;        ^ Proc. Mod._U_REQLOCType
"RTN","MAGJLS2B",108,0)
 ;
"RTN","MAGJLS2B",109,0)
 ; Output: MAGGRY=Indirect ref to output file
"RTN","MAGJLS2B",110,0)
 ; 
"RTN","MAGJLS2B",111,0)
 N DIS,MDCVAR,SNDREMOT,ILST,IMD,MAGRACNT
"RTN","MAGJLS2B",112,0)
 N RARPT,RAST,RADFN,RACNI,RADTI,T,WHOLOCK,XX,MYLOCK,DAYCASE,MODALITY
"RTN","MAGJLS2B",113,0)
 N OUT,QX,SORT,SORTSS,LSTHDR,MD,MDLVAR,MDSVAR,REMONLY,REMOTCAS,SHOWPLAC,SORTLEN
"RTN","MAGJLS2B",114,0)
 S LSTAGE=$G(LSTAGE)
"RTN","MAGJLS2B",115,0)
 ;<*> DIVSCRN= { "": n/a; DIV: This DIV Only, or List of OK DIVs }
"RTN","MAGJLS2B",116,0)
 ;                               ,DIV1,DIV2,
"RTN","MAGJLS2B",117,0)
 ;     ??? H2 determine case for divscrn=0 ?
"RTN","MAGJLS2B",118,0)
 I '$G(MAGJOB("CONSOLIDATED")) S DIVSCRN=""
"RTN","MAGJLS2B",119,0)
 E  S DIVSCRN=","_DUZ(2)_","
"RTN","MAGJLS2B",120,0)
 ;      Show any Place (Site Code) that is NOT the Login Place
"RTN","MAGJLS2B",121,0)
 S SHOWPLAC=$$SHOWPLAC("")
"RTN","MAGJLS2B",122,0)
 S X=^MAG(2006.69,1,0)
"RTN","MAGJLS2B",123,0)
 S REMONLY=$G(MAGJOB("REMOTE"))&+$P(X,U,10) ;only show remote cache?
"RTN","MAGJLS2B",124,0)
 S SNDREMOT=+$P(X,U,11) ; Site routes images remotely?
"RTN","MAGJLS2B",125,0)
 D SETVARS(LSTID)
"RTN","MAGJLS2B",126,0)
 S MAGRACNT=0
"RTN","MAGJLS2B",127,0)
 S SORT="^TMP("_$J_",""MAGJSORT""",SORTLEN=$L(SORT) K ^TMP($J,"MAGJSORT")
"RTN","MAGJLS2B",128,0)
 K ^TMP($J,"RET") S ^TMP($J,"RET",0)="0^4~Getting Exam List"
"RTN","MAGJLS2B",129,0)
 S X=$G(@MAGLST@(0,1)) I +X<1 D  G LSTOUTZ  ; No exams to list!
"RTN","MAGJLS2B",130,0)
 . I X="" S ^TMP($J,"RET",0)="0^4~Problem with Exams List Compile"
"RTN","MAGJLS2B",131,0)
 . E  S ^TMP($J,"RET",0)=X
"RTN","MAGJLS2B",132,0)
 ; <*>On the OUTPUT side, may want to package global nodes w/ a structure
"RTN","MAGJLS2B",133,0)
 ;  that Delphi side "likes"--perhaps a tag for each output line, so that
"RTN","MAGJLS2B",134,0)
 ;  if need to break lines up, they can be re-assembled: var OUT below
"RTN","MAGJLS2B",135,0)
 ;
"RTN","MAGJLS2B",136,0)
 F ILST=1:1 Q:'$D(@MAGLST@(ILST))  S XX=^(ILST,1),XX2=^(2) K MD D  ; node contents described above
"RTN","MAGJLS2B",137,0)
 . S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")="" ;<*> string could get long ...
"RTN","MAGJLS2B",138,0)
 . ; Execute Selection logic:
"RTN","MAGJLS2B",139,0)
 . S X=0 F  S X=$O(MDCVAR(X)) Q:'X  S MD(X)=$P(XX,U,X) ; load needed data
"RTN","MAGJLS2B",140,0)
 . I 1 F I=1:1:$G(DIS(0)) X DIS(I) I  Q  ; quit loop if search logic True
"RTN","MAGJLS2B",141,0)
 . E  Q  ; failed selection criteria--skip this record
"RTN","MAGJLS2B",142,0)
 . S RAST=$P(XX,U,16)
"RTN","MAGJLS2B",143,0)
 . S T=$P(XX2,"|",2),RADFN=$P(T,U),RADTI=$P(T,U,2),RACNI=$P(T,U,3),RARPT=$P(T,U,4)
"RTN","MAGJLS2B",144,0)
 . I LSTREQ="U",'$D(^RADPT("AS",RAST,RADFN,RADTI,RACNI)) Q  ; No longer Unread Status!
"RTN","MAGJLS2B",145,0)
 . I LSTREQ="U",(DIVSCRN]"") S RADIV=","_$P(XX,U,22)_"," I '(DIVSCRN[RADIV) Q  ; Screen Unread exams for DIVision
"RTN","MAGJLS2B",146,0)
 . S REMOTCAS=$P(XX,U,12)
"RTN","MAGJLS2B",147,0)
 . I REMONLY,'REMOTCAS Q  ; don't show if not the remote reading site
"RTN","MAGJLS2B",148,0)
 . I REMONLY,REMOTCAS D  I 'T Q
"RTN","MAGJLS2B",149,0)
 . . F I=1:1:$L(REMOTCAS,",")+1 S T=$P(REMOTCAS,",",I) I T,$D(MAGJOB("LOC",T)) Q
"RTN","MAGJLS2B",150,0)
 . ; set up sort values, creating sort index w/ indirect reference to sort global
"RTN","MAGJLS2B",151,0)
 . F I=1:1:$L(MDSVAR,U) S X=+$P(MDSVAR,U,I) S MD(X)=$P(XX,U,X) I MD(X)="" S MD(X)="~"
"RTN","MAGJLS2B",152,0)
 . S @(SORT_","_SORTSS_")")=ILST_U_RARPT
"RTN","MAGJLS2B",153,0)
 . S MAGRACNT=MAGRACNT+1
"RTN","MAGJLS2B",154,0)
 I 'MAGRACNT S ^TMP($J,"RET",0)="0^2~No Exams Found"
"RTN","MAGJLS2B",155,0)
 E  D  ; generate output file
"RTN","MAGJLS2B",156,0)
 . S @(SORT_","_-9999999999_")")=0,QX=SORT_")" ; define $Query var.; initialize beginning w/ dummy entry
"RTN","MAGJLS2B",157,0)
 . ; proceed thru sort index until the string contained in SORT is not present
"RTN","MAGJLS2B",158,0)
 . ; fetch data using indirect references to the stored data
"RTN","MAGJLS2B",159,0)
 . F ILST=0:1 S QX=$Q(@QX) Q:($E(QX,1,SORTLEN))'=SORT  S XX=@MAGLST@(+(@QX),1),XX2=^(2),OUT="" D
"RTN","MAGJLS2B",160,0)
 .. I 'ILST D  Q       ; Header string
"RTN","MAGJLS2B",161,0)
 ... S T="" I LSTAGE?1N.N S T=LSTAGE\60 S T=" (List age: "_$S(T:T_" min, ",1:"")_(LSTAGE#60)_" sec)"
"RTN","MAGJLS2B",162,0)
 ... I +$P(XX,U,2)=1 S $P(XX,"~",2)=LSTTL_T  ; List Title
"RTN","MAGJLS2B",163,0)
 ... S ^TMP($J,"RET",0)=XX
"RTN","MAGJLS2B",164,0)
 .. S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")=""
"RTN","MAGJLS2B",165,0)
 .. S RARPT=$P(@QX,U,2)
"RTN","MAGJLS2B",166,0)
 .. S T=$$CHKLOCK(RARPT),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLS2B",167,0)
 .. S $P(XX,U,2)=WHOLOCK
"RTN","MAGJLS2B",168,0)
 .. S MODALITY=$P(XX,U,15)
"RTN","MAGJLS2B",169,0)
 .. F IMD=1:1:$L(MDLVAR,U) S X=$P(MDLVAR,U,IMD),MD=$P(XX,U,+X) D
"RTN","MAGJLS2B",170,0)
 ... I +X=12,(MD]""),SNDREMOT D
"RTN","MAGJLS2B",171,0)
 .... ; if site routes images remotely, display Remote Cache indicator
"RTN","MAGJLS2B",172,0)
 .... N I,T I $G(MAGJOB("REMOTE")) D  Q  ; user is at a remote site
"RTN","MAGJLS2B",173,0)
 ..... F I=1:1:$L(MD,",")+1 S T=$P(MD,",",I) I T,$D(MAGJOB("LOC",T)) Q
"RTN","MAGJLS2B",174,0)
 ..... I T S MD=$P($G(^MAG(2005.2,T,3)),U,5)
"RTN","MAGJLS2B",175,0)
 ..... E  S MD=""  ; user not at the site that got this exam's images
"RTN","MAGJLS2B",176,0)
 .... E  N T S T="" D  Q  ; user is at sending site
"RTN","MAGJLS2B",177,0)
 ..... F I=1:1:$L(MD,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(MD,",",I),3)),U,5)
"RTN","MAGJLS2B",178,0)
 ..... S MD=T
"RTN","MAGJLS2B",179,0)
 ... I +X=23,(MD]""),SHOWPLAC D
"RTN","MAGJLS2B",180,0)
 .... I SHOWPLAC'[(","_MD_",") S MD=""  ; Don't show user's local place
"RTN","MAGJLS2B",181,0)
 ... I +X=22,(MD]"") D
"RTN","MAGJLS2B",182,0)
 .... I DIVSCRN[(","_MD_",")!(DIVSCRN="") S MD=""  ; Don't show user's local Division
"RTN","MAGJLS2B",183,0)
 ... I X[";" S T=+$P(X,";",2) I T S MD=$E(MD,1,T)  ; truncate output col
"RTN","MAGJLS2B",184,0)
 ... S $P(OUT,U,IMD)=MD
"RTN","MAGJLS2B",185,0)
 .. S $P(OUT,U,IMD+1)="",OUT=U_OUT,OUT=OUT_"|"_$P(XX2,"|",2,9)
"RTN","MAGJLS2B",186,0)
 .. I WHOLOCK]"" S T=$P(OUT,"|",4),$P(T,U,2)=WHOLOCK,$P(T,U,3)=MYLOCK,$P(OUT,"|",4)=T ; pass lock info to Server
"RTN","MAGJLS2B",187,0)
 .. S T=$P(OUT,"|",4),$P(T,U,4)=MODALITY,$P(OUT,"|",4)=T
"RTN","MAGJLS2B",188,0)
 .. S ^TMP($J,"RET",ILST+1)=OUT
"RTN","MAGJLS2B",189,0)
 . S ^TMP($J,"RET",1)=U_LSTHDR
"RTN","MAGJLS2B",190,0)
 . S $P(^TMP($J,"RET",0),U)=MAGRACNT
"RTN","MAGJLS2B",191,0)
LSTOUTZ K MAGGRY,^TMP($J,"MAGJSORT") S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2B",192,0)
 Q
"RTN","MAGJLS2B",193,0)
 ;
"RTN","MAGJLS2B",194,0)
END Q  ;
"RTN","MAGJLS2B",195,0)
 ;
"RTN","MAGJLS3")
0^7^B68453237
"RTN","MAGJLS3",1,0)
MAGJLS3        ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  10:00 AM
"RTN","MAGJLS3",2,0)
 ;;3.0;IMAGING;**16,22**;Jul 29, 2003
"RTN","MAGJLS3",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS3",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS3",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS3",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS3",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS3",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS3",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS3",10,0)
 ;; |                                                               |
"RTN","MAGJLS3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS3",17,0)
 ;;
"RTN","MAGJLS3",18,0)
 Q
"RTN","MAGJLS3",19,0)
 ;
"RTN","MAGJLS3",20,0)
 ; Subroutines for fetching Exam Info for Radiology Workstation
"RTN","MAGJLS3",21,0)
 ; Exam listings:
"RTN","MAGJLS3",22,0)
 ;   BLDACTV -- Compile list of active exams
"RTN","MAGJLS3",23,0)
 Q
"RTN","MAGJLS3",24,0)
 ;
"RTN","MAGJLS3",25,0)
BLDACTV(MAGGRY,DATA,MAGLST) ; get subset of Active Exams from Rad files
"RTN","MAGJLS3",26,0)
 ; Called from MAGJLS2
"RTN","MAGJLS3",27,0)
 ; MAGGRY - Indirect Global ref of return array
"RTN","MAGJLS3",28,0)
 ; DATA   - type of listing ^ Imaging Types to process
"RTN","MAGJLS3",29,0)
 ;   Piece 1 = U  -- UNREAD Exams only (Status Category=E)
"RTN","MAGJLS3",30,0)
 ;           = R  -- RECENT Exams (Status Categories D & T)
"RTN","MAGJLS3",31,0)
 ;           = A  -- ALL Active exams (Categories E, D, & T)
"RTN","MAGJLS3",32,0)
 ;           = P  -- PENDING exams (Category "W")
"RTN","MAGJLS3",33,0)
 ;           = N  -- Newly Interpreted Exams (No Cat.-Internal use only)
"RTN","MAGJLS3",34,0)
 ;   Piece 2,ff = List of Imaging Types to process, or "ALL" for all
"RTN","MAGJLS3",35,0)
 ; MAGLST holds $NA reference to global containing returned list; references
"RTN","MAGJLS3",36,0)
 ;        to MAGLST use subscript indirection
"RTN","MAGJLS3",37,0)
 ; Value of MAGLST may optionally be passed in to specify return global location
"RTN","MAGJLS3",38,0)
 ; 
"RTN","MAGJLS3",39,0)
 ;* This subroutine can continue to receive U/R/A/P/N (LSTREQ),
"RTN","MAGJLS3",40,0)
 ;                                ^_delim list of ImgTypes (IMTYPS)
"RTN","MAGJLS3",41,0)
 ; BKGPROC
"RTN","MAGJLS3",42,0)
 N RADFN,RADTI,RACNI
"RTN","MAGJLS3",43,0)
 N HDR,HDRLST,MAGIMGTY,MAGRACNT,MAGRET,LSTREQ,LISTYP,LISCAT,IMTYPS
"RTN","MAGJLS3",44,0)
 N REPLY,STAT,TYP,SORTMAG,DIQUIET,STATCHK,LASTDT,IMGSONLY,URGORD,REMONLY
"RTN","MAGJLS3",45,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLS3",46,0)
 I $G(MAGLST)="" S MAGLST=$NA(^TMP($J,"MAGJACTIVE")) ; default loc'n if not passed in
"RTN","MAGJLS3",47,0)
 K ^TMP($J,"MAGRAEX"),@MAGLST
"RTN","MAGJLS3",48,0)
 S LSTREQ=$P(DATA,U),IMTYPS=$P(DATA,U,2,99)
"RTN","MAGJLS3",49,0)
 I LSTREQ="U"!(LSTREQ="R")!(LSTREQ="A")!(LSTREQ="P")!(LSTREQ="N")
"RTN","MAGJLS3",50,0)
 E  S REPLY="0^4~Invalid Request (List Type="_LSTREQ_")" G BLDACTVZ
"RTN","MAGJLS3",51,0)
 S MAGRACNT=0
"RTN","MAGJLS3",52,0)
 S X=$G(^MAG(2006.69,1,0)),IMGSONLY=+$P(X,U,7) ; show only exams w/ images?
"RTN","MAGJLS3",53,0)
 S REMONLY=$G(MAGJOB("REMOTE"))&+$P(X,U,10) ;show remote cache only?
"RTN","MAGJLS3",54,0)
 S X=$G(^MAG(2006.69,1,1)),URGORD=$P(X,U)
"RTN","MAGJLS3",55,0)
 S:URGORD="" URGORD="S,U,P,R" S URGORD=$TR(URGORD,",") ; "Priority" sort
"RTN","MAGJLS3",56,0)
 S HDR=$S(LSTREQ="U":"UNREAD",LSTREQ="R":"RECENT",LSTREQ="P":"PENDING",LSTREQ="A":"UNREAD and RECENT",LSTREQ="N":"NEWLY INTERP",1:"")_" Exams"_" for IMAGING TYPES: "
"RTN","MAGJLS3",57,0)
 S LISTYP=$S(LSTREQ="U":"E",LSTREQ="R":"D^T",LSTREQ="A":"E^D^T",LSTREQ="P":"W",LSTREQ="N":"",1:"E")
"RTN","MAGJLS3",58,0)
 S REPLY="0^4~Compiling list of Radiology Exams (ACTIVE)."
"RTN","MAGJLS3",59,0)
 I $G(BKGPROC),(LSTREQ="R") K ^TMP($J,"NEWINT") S ^TMP($J,"NEWINT")=+$G(^XTMP("MAGJ2","RECENT",0))
"RTN","MAGJLS3",60,0)
 I LSTREQ="N" D BLDACT2
"RTN","MAGJLS3",61,0)
 I LSTREQ'="N" D BLDACT1
"RTN","MAGJLS3",62,0)
BLDACTVZ ;
"RTN","MAGJLS3",63,0)
 I 'MAGRACNT S:(REPLY["Compiling") REPLY="0^2~No Exams Found"
"RTN","MAGJLS3",64,0)
 E  D
"RTN","MAGJLS3",65,0)
 . I IMTYPS="ALL" S HDR=HDR_" ALL"
"RTN","MAGJLS3",66,0)
 . E  S Y="" F I=0:1 S Y=$O(HDRLST(Y)) Q:Y=""  S HDR=HDR_$S('I:"",1:", ")_Y
"RTN","MAGJLS3",67,0)
 . S REPLY=MAGRACNT_U_"1~"_HDR
"RTN","MAGJLS3",68,0)
 S @MAGLST@(0,1)=REPLY,^(2)=""
"RTN","MAGJLS3",69,0)
 K ^TMP($J,"MAGRAEX"),^("RAE1")
"RTN","MAGJLS3",70,0)
 S MAGGRY=MAGLST
"RTN","MAGJLS3",71,0)
 Q
"RTN","MAGJLS3",72,0)
BLDACT1 ; Compile exams by Status codes
"RTN","MAGJLS3",73,0)
 D BLDSTAT
"RTN","MAGJLS3",74,0)
 F  S LISCAT=$P(LISTYP,U),LISTYP=$P(LISTYP,U,2,9) Q:LISCAT=""  D
"RTN","MAGJLS3",75,0)
 . I IMTYPS="ALL" S TYP="" D  Q
"RTN","MAGJLS3",76,0)
 .. F  S TYP=$O(STAT(LISCAT,TYP)) Q:TYP=""  D IMGTYP(LISCAT,TYP)
"RTN","MAGJLS3",77,0)
 . E  I +IMTYPS D IMGTYLST(LISCAT,IMTYPS) Q
"RTN","MAGJLS3",78,0)
 . E  S REPLY="0^4~Invalid Imaging Type"
"RTN","MAGJLS3",79,0)
 Q
"RTN","MAGJLS3",80,0)
BLDACT2 ; Add recently interpreted exams to the "Recent" compile data
"RTN","MAGJLS3",81,0)
 ; First, compile these exams into their own list
"RTN","MAGJLS3",82,0)
 N CNT,INDX,RAST,STATCHK,RECLIST
"RTN","MAGJLS3",83,0)
 S X=$G(^XTMP("MAGJ2","RECENT",0)),INDX=+$P(X,U,2)
"RTN","MAGJLS3",84,0)
 F  S INDX=$O(^XTMP("MAGJ2","RECENT",INDX)) Q:'INDX  S X=^(INDX) D
"RTN","MAGJLS3",85,0)
 . S RADFN=$P(X,U),RADTI=$P(X,U,2),RACNI=$P(X,U,3),(RAST,STATCHK)=$P(X,U,4)
"RTN","MAGJLS3",86,0)
 . D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJLS3",87,0)
 . I MAGRET D SVMAG2A
"RTN","MAGJLS3",88,0)
 . S $P(^XTMP("MAGJ2","RECENT",0),U,2)=INDX
"RTN","MAGJLS3",89,0)
 ; now copy the above list records to the "RECENT" curlist
"RTN","MAGJLS3",90,0)
 S RECLIST=+$$CURLIST^MAGJLS2("LS9992")
"RTN","MAGJLS3",91,0)
 I 'RECLIST S RECLIST=+$G(^XTMP("MAGJ2","BKGND","LS9992",0))
"RTN","MAGJLS3",92,0)
 I 'RECLIST Q  ; Recent list not being compiled--skip it!
"RTN","MAGJLS3",93,0)
 F CNT=1:1:MAGRACNT S X1=@MAGLST@(CNT,1),X2=^(2) D  ; MAGLST described at BLDACTV
"RTN","MAGJLS3",94,0)
 . S REC=^XTMP("MAGJ2","LS9992",RECLIST,0,1)+1
"RTN","MAGJLS3",95,0)
 . S ^XTMP("MAGJ2","LS9992",RECLIST,REC,1)=X1,^(2)=X2
"RTN","MAGJLS3",96,0)
 . S $P(^XTMP("MAGJ2","LS9992",RECLIST,0,1),U)=REC
"RTN","MAGJLS3",97,0)
 Q
"RTN","MAGJLS3",98,0)
 ;
"RTN","MAGJLS3",99,0)
 ;
"RTN","MAGJLS3",100,0)
SVMAG2A ; 2A used by subroutine at tag BLDACTV
"RTN","MAGJLS3",101,0)
 ; load return array @MAGLST@(n, ...
"RTN","MAGJLS3",102,0)
 ; Note: ^TMP("MAGRAEX" is set by the subroutine Getexam2^Magjutl1
"RTN","MAGJLS3",103,0)
 ;
"RTN","MAGJLS3",104,0)
 N MAGDT,SORTDT,IMGCNT,ONL,XX,XX2,Y
"RTN","MAGJLS3",105,0)
 N REMOTE,MODALITY,DAYCASE,EXCAT,ORD,URG,URG1,PREOP,LASTSSN
"RTN","MAGJLS3",106,0)
 S URG="",PREOP=""   ; <*> Need below until RAO7PC1A returns URG
"RTN","MAGJLS3",107,0)
 S X=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJLS3",108,0)
 S ORD=$P(X,U,11)
"RTN","MAGJLS3",109,0)
 I ORD S Y=$G(^RAO(75.1,ORD,0)),URG=$P(Y,U,6),PREOP=$P(Y,U,12)
"RTN","MAGJLS3",110,0)
 S XX=$G(^TMP($J,"MAGRAEX",1,1)),XX2=$G(^(2))
"RTN","MAGJLS3",111,0)
 I $G(STATCHK),(STATCHK=$P(XX,U,11))
"RTN","MAGJLS3",112,0)
 E  Q       ;  index '= stored status
"RTN","MAGJLS3",113,0)
 D IMGINFO^MAGJUTL2($P(XX,U,10),.Y)
"RTN","MAGJLS3",114,0)
 S IMGCNT=$P(Y,U),ONL=$P(Y,U,2),MAGDT=$P(Y,U,3),REMOTE=$P(Y,U,4),MODALITY=$P(Y,U,5),PLACE=$P(Y,U,6)
"RTN","MAGJLS3",115,0)
 I IMGSONLY,'IMGCNT Q  ;only list exams w/ imgs
"RTN","MAGJLS3",116,0)
 I REMONLY,'REMOTE,'$G(BKGPROC) Q  ; only list exams cached remotely
"RTN","MAGJLS3",117,0)
 S:PLACE PLACE=$P($G(^MAG(2006.1,PLACE,0)),U,9)
"RTN","MAGJLS3",118,0)
 I MAGDT="" S MAGDT=$P(XX,U,7)
"RTN","MAGJLS3",119,0)
 S SORTDT=MAGDT
"RTN","MAGJLS3",120,0)
 S MAGDT=$$FMTE^XLFDT(MAGDT,"5Z")
"RTN","MAGJLS3",121,0)
   ; XX 1 RADFN   RADTI    RACNI   RANME    RASSN  <-- from GETEXAM
"RTN","MAGJLS3",122,0)
   ;    6 RADATE  RADTE    RACN    RAPRC     RARPT
"RTN","MAGJLS3",123,0)
   ;   11 RAST    DAYCASE  RAELOC   RASTP     RASTORD
"RTN","MAGJLS3",124,0)
   ;   16 RADTPRT RACPT    IMTYPABB
"RTN","MAGJLS3",125,0)
   ;XX2 1 REQLOCABB  REQLOCNM  RdRIST  COMPLIC  RAD_DIV
"RTN","MAGJLS3",126,0)
   ;    6 SITE_CODE  RISTISME  PROCMOD  REQLOCT
"RTN","MAGJLS3",127,0)
 S:'URG URG=9  ;  request urgency default to Routine
"RTN","MAGJLS3",128,0)
 I URG=9,(PREOP]"") S URG=8  ; dummy value for Pre-Op "urgency"
"RTN","MAGJLS3",129,0)
 S URG1=$S(URG=1:"Stat",URG=2:"Urg",URG=8:"PreOp",1:"Rout"),X=$E(URG1),URG1=$F(URGORD,X)-1_"-"_URG1
"RTN","MAGJLS3",130,0)
 I PREOP]"",(URG'=8) S URG1=URG1_"/Pre" ; show PreOp & another priority
"RTN","MAGJLS3",131,0)
 S SORTMAG=$S(+IMGCNT:"A",1:"B") ; sort index: has/not images
"RTN","MAGJLS3",132,0)
 S DAYCASE=$P(XX,U,12)
"RTN","MAGJLS3",133,0)
 S Z=$D(^RA(72,"AVC","E",$P(XX,U,11))),EXCAT=$S(Z:"E",1:"") ; "Examined" indic.
"RTN","MAGJLS3",134,0)
 S LASTSSN=$P($P(XX,U,5),"-",3)
"RTN","MAGJLS3",135,0)
 ; build output string in Y & Y2
"RTN","MAGJLS3",136,0)
 S Y=DAYCASE_U_U_$E($P(XX,U,4),1,30)_U_$E($P(XX,U,4))_LASTSSN
"RTN","MAGJLS3",137,0)
 S Y=Y_U_URG1_U_$E($P(XX,U,9),1,30)_U_MAGDT_U_$E($P(XX,U,14),1,10)_U_IMGCNT
"RTN","MAGJLS3",138,0)
 S Y=Y_U_ONL_U_$E($P(XX,U,13),1,15)_U_REMOTE
"RTN","MAGJLS3",139,0)
 S Y=Y_U_SORTMAG_U_SORTDT_U_MODALITY_U_RAST_U_$$RAIMTYP(RAST)
"RTN","MAGJLS3",140,0)
 S X=$P(XX2,U,7),RISTISME=$S(X:"Y",1:"N")
"RTN","MAGJLS3",141,0)
 S Y2=$P(XX2,U,1,3)_U_LASTSSN_U_$P(XX2,U,5)_U_PLACE_U_RISTISME_U_$P(XX2,U,8,9)_U_"|"_$P(XX,U,1,3)_U_$P(XX,U,10)_"||"_EXCAT
"RTN","MAGJLS3",142,0)
 S MAGRACNT=MAGRACNT+1
"RTN","MAGJLS3",143,0)
 S @MAGLST@(MAGRACNT,1)=Y,^(2)=Y2  ; save output nodes for one exam
"RTN","MAGJLS3",144,0)
 I $G(BKGPROC),(LSTREQ="R") S ^TMP($J,"NEWINT",$P(XX,U,1,3))=""
"RTN","MAGJLS3",145,0)
 Q
"RTN","MAGJLS3",146,0)
 ;
"RTN","MAGJLS3",147,0)
RAIMTYP(RAST)   ; return Imaging Type Abbrev for Status Code
"RTN","MAGJLS3",148,0)
 N X S X="" I RAST]"" D
"RTN","MAGJLS3",149,0)
 . S X=$G(RAIMTYP(RAST)) Q:X]""
"RTN","MAGJLS3",150,0)
 . S X=$P($G(^RA(72,RAST,0)),U,7)
"RTN","MAGJLS3",151,0)
 . I X S X=$P($G(^RA(79.2,X,0)),U,3)_"~"_X  ; abb~ien
"RTN","MAGJLS3",152,0)
 . S RAIMTYP(RAST)=X   ; save for future use
"RTN","MAGJLS3",153,0)
 Q X
"RTN","MAGJLS3",154,0)
 ;
"RTN","MAGJLS3",155,0)
IMGTYLST(LISCAT,LST)       ; get exams for list of image types for input LISCAT
"RTN","MAGJLS3",156,0)
 N TYP
"RTN","MAGJLS3",157,0)
 F  Q:'(LST?1.N.E)  S TYP=+$P(LST,U),LST=$P(LST,U,2,99) D:TYP IMGTYP(LISCAT,TYP)
"RTN","MAGJLS3",158,0)
 Q
"RTN","MAGJLS3",159,0)
 ;
"RTN","MAGJLS3",160,0)
IMGTYP(LISCAT,IMGTY)       ; process statuses for one Image Type for LISCAT
"RTN","MAGJLS3",161,0)
 I '$D(^RA(79.2,IMGTY,0)) S REPLY="0^4~Invalid Imaging Type" Q
"RTN","MAGJLS3",162,0)
 N LST
"RTN","MAGJLS3",163,0)
 I $D(STAT)<10 D BLDSTAT
"RTN","MAGJLS3",164,0)
 S (STAT,LST)=""
"RTN","MAGJLS3",165,0)
 S LASTDT=$P(STAT(LISCAT),U)
"RTN","MAGJLS3",166,0)
 F  S STAT=$O(STAT(LISCAT,IMGTY,STAT)) Q:STAT=""  S LST=LST_$S(LST="":"",1:U)_STAT,HDRLST(STAT(LISCAT,IMGTY))=""
"RTN","MAGJLS3",167,0)
 I LST]"" D STATLST(LST)
"RTN","MAGJLS3",168,0)
 Q
"RTN","MAGJLS3",169,0)
 ;
"RTN","MAGJLS3",170,0)
STATLST(LST)       ; get exams for a list of status codes
"RTN","MAGJLS3",171,0)
 F  Q:'(LST?1.N.E)  S STAT=+$P(LST,U),LST=$P(LST,U,2,99) D:STAT STAT(STAT)
"RTN","MAGJLS3",172,0)
 Q
"RTN","MAGJLS3",173,0)
 ;
"RTN","MAGJLS3",174,0)
STAT(RAST)           ; get exams for one status code
"RTN","MAGJLS3",175,0)
 ; this subroutine uses ^RADPT (#70) "AS" index of exams not yet complete
"RTN","MAGJLS3",176,0)
 ;
"RTN","MAGJLS3",177,0)
 N RASTP
"RTN","MAGJLS3",178,0)
 I $D(^RA(72,RAST)) S RASTP=$P(^(RAST,0),U)
"RTN","MAGJLS3",179,0)
 E  S REPLY="0^4~Invalid Exam Status" Q
"RTN","MAGJLS3",180,0)
 I '$D(^RADPT("AS",RAST)) S REPLY="0^2~No exams on file with Exam Status "_RASTP Q
"RTN","MAGJLS3",181,0)
 S RADFN=0,STATCHK=RAST
"RTN","MAGJLS3",182,0)
 F  S RADFN=$O(^RADPT("AS",RAST,RADFN)) Q:RADFN'>0  S RADTI=0 D
"RTN","MAGJLS3",183,0)
 . F  S RADTI=$O(^RADPT("AS",RAST,RADFN,RADTI)) Q:RADTI'>0!(RADTI>LASTDT)  S RACNI=0 D
"RTN","MAGJLS3",184,0)
 .. F  S RACNI=$O(^RADPT("AS",RAST,RADFN,RADTI,RACNI)) Q:RACNI'>0  D
"RTN","MAGJLS3",185,0)
 ... D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJLS3",186,0)
 ... Q:'MAGRET  ; no exam returned
"RTN","MAGJLS3",187,0)
 ... D SVMAG2A
"RTN","MAGJLS3",188,0)
 Q
"RTN","MAGJLS3",189,0)
 ;
"RTN","MAGJLS3",190,0)
BLDSTAT ; build list of Exam Status codes: STAT(CATEGORY,IMAG_TYP,STAT)=STATNM
"RTN","MAGJLS3",191,0)
 N X,CAT,TYP,STNM K STAT S CAT="",STAT=0
"RTN","MAGJLS3",192,0)
 F  S CAT=$O(^RA(72,"AVC",CAT)) Q:CAT=""  D
"RTN","MAGJLS3",193,0)
 . S X=$S(CAT="E":3,1:2),X=$P($G(^MAG(2006.69,1,0)),U,X)
"RTN","MAGJLS3",194,0)
 . S:'X X=$S(CAT="E":30,1:6) S X=$H-X+1,X=$$HTFM^XLFDT(X),X=9999999.9999-X
"RTN","MAGJLS3",195,0)
 . S STAT(CAT)=X
"RTN","MAGJLS3",196,0)
 . F  S STAT=$O(^RA(72,"AVC",CAT,STAT)) Q:'STAT  D
"RTN","MAGJLS3",197,0)
 .. S TYP=$P($G(^RA(72,STAT,0)),U,7),STNM=$P(^(0),U) S:TYP="" TYP="~"
"RTN","MAGJLS3",198,0)
 .. S STAT(CAT,TYP)=$P($G(^RA(79.2,TYP,0)),U,3),STAT(CAT,TYP,STAT)=STNM
"RTN","MAGJLS3",199,0)
 Q
"RTN","MAGJLS3",200,0)
 ;
"RTN","MAGJLS3",201,0)
END Q  ;
"RTN","MAGJLST1")
0^6^B85130159
"RTN","MAGJLST1",1,0)
MAGJLST1 ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  10:01 AM
"RTN","MAGJLST1",2,0)
 ;;3.0;IMAGING;**16,22**;Jul 29, 2003
"RTN","MAGJLST1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLST1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLST1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLST1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLST1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLST1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLST1",10,0)
 ;; |                                                               |
"RTN","MAGJLST1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLST1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLST1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLST1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLST1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLST1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",17,0)
 ;;
"RTN","MAGJLST1",18,0)
 Q
"RTN","MAGJLST1",19,0)
 ;
"RTN","MAGJLST1",20,0)
 ; Subroutines for fetching Exam Info for Radiology Workstation
"RTN","MAGJLST1",21,0)
 ; Exam listings:
"RTN","MAGJLST1",22,0)
 ;     PTLIST -- list subset of all exams for a patient
"RTN","MAGJLST1",23,0)
 ;          Note, this is a reworked vs of tag 'LIST' from the
"RTN","MAGJLST1",24,0)
 ;          routine MAGGTRA
"RTN","MAGJLST1",25,0)
 ;        RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",26,0)
 ;   PTLSTALL -- list ALL exams for a patient
"RTN","MAGJLST1",27,0)
 ;       RPC Call: MAGJ PT ALL EXAMS
"RTN","MAGJLST1",28,0)
 ; Subroutine for display Radiology Report:
"RTN","MAGJLST1",29,0)
 ;     RADRPT -- 
"RTN","MAGJLST1",30,0)
 ;       RPC Call: MAGJ EXAM REPORT
"RTN","MAGJLST1",31,0)
 Q
"RTN","MAGJLST1",32,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLST1",33,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLST1",34,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLST1",35,0)
 Q:$Q 1  Q
"RTN","MAGJLST1",36,0)
 ;
"RTN","MAGJLST1",37,0)
RADRPT(MAGRPTY,DATA) ; Display rad report; 1st must pass integrity checks
"RTN","MAGJLST1",38,0)
 ; Note: adds an additional line of output for the Report Window header
"RTN","MAGJLST1",39,0)
 ;  RPC is MAGJ EXAM REPORT
"RTN","MAGJLST1",40,0)
 ;
"RTN","MAGJLST1",41,0)
 ; MAGRPTY holds $NA reference to  return message; references to it use subscript indirection
"RTN","MAGJLST1",42,0)
 ;
"RTN","MAGJLST1",43,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT")) K @MAGRPTY
"RTN","MAGJLST1",44,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLST1"
"RTN","MAGJLST1",45,0)
 N RARPT,RADATA,MAGDFN,MAGDTI,MAGCNI,X,MAGRET,HDR,REPLY,POP,MAGPRC,COMPLIC
"RTN","MAGJLST1",46,0)
 S MAGDFN=$P(DATA,U),MAGDTI=$P(DATA,U,2),MAGCNI=$P(DATA,U,3),RARPT=+$P(DATA,U,4)
"RTN","MAGJLST1",47,0)
 I '(MAGDFN&MAGDTI&MAGCNI) D  G RPTZ
"RTN","MAGJLST1",48,0)
 . S REPLY="0^4~Request Contains Invalid Case Pointer ("_MAGDFN_" "_MAGDTI_" "_MAGCNI_")."
"RTN","MAGJLST1",49,0)
 . I $L(DATA,U)=1 S REPLY=REPLY_"  VistaRSV module must be updated to newer version (T17 or later); contact Imaging support."
"RTN","MAGJLST1",50,0)
 D GETEXAM2^MAGJUTL1(MAGDFN,MAGDTI,MAGCNI,"",.MAGRET)
"RTN","MAGJLST1",51,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1)),XX=$G(^(2)),HDR=""
"RTN","MAGJLST1",52,0)
 S COMPLIC=$P(XX,U,4)  ;  Complications text
"RTN","MAGJLST1",53,0)
 F I=4,12,9 S HDR=HDR_$P(RADATA,U,I)_"   "
"RTN","MAGJLST1",54,0)
 D CKINTEG(.REPLY,MAGDFN,MAGDTI,MAGCNI,RARPT,RADATA)
"RTN","MAGJLST1",55,0)
 I REPLY]"" S REPLY="0^7~"_REPLY G RPTZ  ; DB integ problem
"RTN","MAGJLST1",56,0)
 D OPENDEV^MAGJORD
"RTN","MAGJLST1",57,0)
 I POP S REPLY="0^4~Unable to open device 'IMAGING WORKSTATION'" G RPTZ
"RTN","MAGJLST1",58,0)
 D EN3^RAO7PC3(MAGDFN_"^"_MAGDTI_"^"_MAGCNI)
"RTN","MAGJLST1",59,0)
 I '$D(^TMP($J,"RAE3")) S REPLY="0^4~No report on file." G RPTZ
"RTN","MAGJLST1",60,0)
 D COMMENTS^MAGJORD(MAGDFN,MAGDTI,MAGCNI,MAGRPTY,2,COMPLIC)
"RTN","MAGJLST1",61,0)
 S MAGPRC=$O(^TMP($J,"RAE3",MAGDFN,MAGCNI,"")),I=0
"RTN","MAGJLST1",62,0)
 F  S I=$O(^TMP($J,"RAE3",MAGDFN,MAGCNI,MAGPRC,I)) Q:'I  W !,$G(^TMP($J,"RAE3",MAGDFN,MAGCNI,MAGPRC,I))
"RTN","MAGJLST1",63,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGJLST1",64,0)
 S REPLY="1^1~Radiology Report"
"RTN","MAGJLST1",65,0)
RPTZ S @MAGRPTY@(0)=REPLY
"RTN","MAGJLST1",66,0)
 I +$G(@MAGRPTY@(0)) S @MAGRPTY@(1)="RPT: "_HDR ; if a report exists, add header line to output
"RTN","MAGJLST1",67,0)
 K ^TMP($J,"MAGRAEX"),^("RAE3")
"RTN","MAGJLST1",68,0)
 Q
"RTN","MAGJLST1",69,0)
 ;
"RTN","MAGJLST1",70,0)
CKINTEG(REPLY,RADFN,RADTI,RACNI,RARPT,RADATA) ; check integrity between Exam, Report, and Image Group Headers
"RTN","MAGJLST1",71,0)
 ; This subroutine used by other programs (magjord)
"RTN","MAGJLST1",72,0)
 ;
"RTN","MAGJLST1",73,0)
 N IEN,MAGIEN,MIXEDUP,X,CKDFN,CKACN
"RTN","MAGJLST1",74,0)
 S MIXEDUP=0,REPLY=""
"RTN","MAGJLST1",75,0)
 I RARPT D  G CK2:MIXEDUP
"RTN","MAGJLST1",76,0)
 . S X=$G(^RARPT(RARPT,0)),CKDFN=$P(X,U,2),CKACN=$P(X,U,4)
"RTN","MAGJLST1",77,0)
 . I CKDFN'=RADFN S MIXEDUP=1_U_+CKDFN Q
"RTN","MAGJLST1",78,0)
 . I $G(RADATA)]"" D
"RTN","MAGJLST1",79,0)
 .. I $P(RADATA,U,8)'=CKACN D
"RTN","MAGJLST1",80,0)
 ... N MAGPSET,RAPRTSET,ACN,OK S OK=0
"RTN","MAGJLST1",81,0)
 ... S RAPRTSET=0 D EN2^RAUTL20(.MAGPSET) I RAPRTSET D
"RTN","MAGJLST1",82,0)
 .... N I S I=0 F  S I=$O(MAGPSET(I)) Q:'I  I +MAGPSET(I)=CKACN S OK=1 Q
"RTN","MAGJLST1",83,0)
 ... I 'OK S MIXEDUP=5_U_CKACN_U_$P(RADATA,U,8)
"RTN","MAGJLST1",84,0)
 I $D(^RARPT(+RARPT,2005)) S IEN=0 D  G CK2:MIXEDUP
"RTN","MAGJLST1",85,0)
 . F  S IEN=$O(^RARPT(RARPT,2005,IEN)) Q:'IEN  S MAGIEN=+$G(^(IEN,0)) D  Q:MIXEDUP
"RTN","MAGJLST1",86,0)
 .. S X=$P($G(^MAG(2005,MAGIEN,0)),U,7) I X'=RADFN S MIXEDUP=2_U_+X Q
"RTN","MAGJLST1",87,0)
 .. S X=$P($G(^MAG(2005,MAGIEN,2)),U,7) I X'=RARPT S MIXEDUP=3_U_+X Q
"RTN","MAGJLST1",88,0)
CK2 I 'MIXEDUP Q  ; no problems detected
"RTN","MAGJLST1",89,0)
 I +MIXEDUP=1!(+MIXEDUP=2) D  Q
"RTN","MAGJLST1",90,0)
 . S X=$$PNAM^MAGJEX1($P(MIXEDUP,U,2))
"RTN","MAGJLST1",91,0)
 . I +MIXEDUP=1 S REPLY="The Exam file for this exam has patient "_$$PNAM^MAGJEX1(RADFN)_"; the corresponding Report file has patient "_X_".  This is a serious problem--immediately report it to Radiology management and Imaging support!"
"RTN","MAGJLST1",92,0)
 . I +MIXEDUP=2 S REPLY="This exam is registered for "_$$PNAM^MAGJEX1(RADFN)_"; however, it is linked to images for patient "_X_".  This is a serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJLST1",93,0)
 I +MIXEDUP=3 D  Q
"RTN","MAGJLST1",94,0)
 . N T S T=$P(MIXEDUP,U,2) S:'T T="Missing Link"
"RTN","MAGJLST1",95,0)
 . S REPLY="This exam is linked to Report entry #"_RARPT_", but some of its images may be linked to Report entry #"_T_".  This is a potentially serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJLST1",96,0)
 I +MIXEDUP=4 D  Q
"RTN","MAGJLST1",97,0)
 . N T S T=$P(MIXEDUP,U,2) S:'T T="Missing Reference"
"RTN","MAGJLST1",98,0)
 . S X=" ("_RARPT_" and "_T_" )"
"RTN","MAGJLST1",99,0)
 . S REPLY="This exam has problems in the Radiology Report file, with two different report entries referenced"_X_".  This is a potentially serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJLST1",100,0)
 I +MIXEDUP=5 D  Q
"RTN","MAGJLST1",101,0)
 . N T S X=$P(MIXEDUP,U,2) S:X="" X="Missing"
"RTN","MAGJLST1",102,0)
 . S T=$P(MIXEDUP,U,3) S:T="" T="Missing"
"RTN","MAGJLST1",103,0)
 . S X=" ("_X_" and "_T_") "
"RTN","MAGJLST1",104,0)
 . S REPLY="This exam has problems in the Radiology files, with two different Case Numbers referenced"_X_".  This is a potentially serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJLST1",105,0)
 Q
"RTN","MAGJLST1",106,0)
 ;
"RTN","MAGJLST1",107,0)
PTLSTALL(MAGGRY,DATA) ; List ALL exams for a patient
"RTN","MAGJLST1",108,0)
 ;  RPC is MAGJ PT ALL EXAMS
"RTN","MAGJLST1",109,0)
 D PTLIST(.MAGGRY,$P(DATA,U)_"^99^999")
"RTN","MAGJLST1",110,0)
 Q
"RTN","MAGJLST1",111,0)
 ;
"RTN","MAGJLST1",112,0)
PTLIST(MAGGRY,DATA) ; get list of exams for a patient
"RTN","MAGJLST1",113,0)
 ; 
"RTN","MAGJLST1",114,0)
 ; MAGGRY - indirect reference to return array of exams for a patient
"RTN","MAGJLST1",115,0)
 ; DATA   - DFN--Radiology Patient's DFN
"RTN","MAGJLST1",116,0)
 ;          LIMYRS--Restrict listed exams up to # Years back
"RTN","MAGJLST1",117,0)
 ;          LIMEXAMS--Restrict listed exams up to # of exams
"RTN","MAGJLST1",118,0)
 ; Returns data in ^TMP($J,"MAGRAEX",0:n)
"RTN","MAGJLST1",119,0)
 ; RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",120,0)
 ;
"RTN","MAGJLST1",121,0)
 N CNT,DFN,ISS,PATNAME,DIQUIET,MAGRACNT,MAGRET,REPLY,REMOTE,SNDREMOT
"RTN","MAGJLST1",122,0)
 N DAYCASE,DIV,EXCAT,MAGDT,XX,XX2,WHOLOCK,MODALITY,MYLOCK,PLACE
"RTN","MAGJLST1",123,0)
 N LIMYRS,LIMEXAMS,BEGDT,MORE,SHOWPLAC,RDRIST,PSSN
"RTN","MAGJLST1",124,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLST1"
"RTN","MAGJLST1",125,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLST1",126,0)
 S X=$G(^MAG(2006.69,1,0))
"RTN","MAGJLST1",127,0)
 S SNDREMOT=+$P(X,U,11) ; Site routes images remotely?
"RTN","MAGJLST1",128,0)
 S SHOWPLAC=$$SHOWPLAC^MAGJLS2B("")
"RTN","MAGJLST1",129,0)
 S LIMYRS=+$P(X,U,14),LIMEXAMS=+$P(X,U,15)
"RTN","MAGJLST1",130,0)
 S:'LIMYRS LIMYRS=99 S:'LIMEXAMS LIMEXAMS=999 ; default to show ALL Exams
"RTN","MAGJLST1",131,0)
 K MAGGRY S DFN=+DATA
"RTN","MAGJLST1",132,0)
 I $P(DATA,U,2) S LIMYRS=+$P(DATA,U,2)
"RTN","MAGJLST1",133,0)
 I $P(DATA,U,3) S LIMEXAMS=+$P(DATA,U,3)
"RTN","MAGJLST1",134,0)
 I LIMYRS>74 S LIMYRS=""
"RTN","MAGJLST1",135,0)
 I LIMYRS,LIMYRS<2 S LIMYRS=2
"RTN","MAGJLST1",136,0)
 I LIMEXAMS<15 S LIMEXAMS=15
"RTN","MAGJLST1",137,0)
 S MAGRACNT=1,CNT=0 K ^TMP($J,"MAGRAEX"),^("MAGRAEX2")
"RTN","MAGJLST1",138,0)
 S REPLY="0^4~Compiling list of Radiology Exams."
"RTN","MAGJLST1",139,0)
 I DFN,$D(^DPT(DFN,0)) S PATNAME=$P(^(0),U),PSSN=$P(^(0),U,9) D
"RTN","MAGJLST1",140,0)
 . S BEGDT=""
"RTN","MAGJLST1",141,0)
 . I LIMYRS S BEGDT=($E(DT,1,3)-LIMYRS)_$E(DT,4,7)
"RTN","MAGJLST1",142,0)
 . D GETEXAM3^MAGJUTL1(DFN,BEGDT,"",.MAGRACNT,.MAGRET,.MORE,LIMEXAMS)
"RTN","MAGJLST1",143,0)
 . S ISS=0
"RTN","MAGJLST1",144,0)
 . Q:'MAGRET      ;  No exams found
"RTN","MAGJLST1",145,0)
 . F  S ISS=$O(^TMP($J,"MAGRAEX",ISS)) Q:'ISS  S XX=^(ISS,1),XX2=^(2) D
"RTN","MAGJLST1",146,0)
 .. S CNT=CNT+1
"RTN","MAGJLST1",147,0)
 .. D IMGINFO^MAGJUTL2($P(XX,U,10),.Y)
"RTN","MAGJLST1",148,0)
 .. S IMGCNT=$P(Y,U),ONL=$P(Y,U,2),MAGDT=$P(Y,U,3),REMOTE=$P(Y,U,4),MODALITY=$P(Y,U,5),PLACE=$P(Y,U,6)
"RTN","MAGJLST1",149,0)
 .. S:PLACE PLACE=$P($G(^MAG(2006.1,PLACE,0)),U,9)
"RTN","MAGJLST1",150,0)
 .. I PLACE]"",SHOWPLAC D
"RTN","MAGJLST1",151,0)
 ... I SHOWPLAC'[(","_PLACE_",") S PLACE="" ; don't show user's logon pl
"RTN","MAGJLST1",152,0)
 .. I SNDREMOT,REMOTE D
"RTN","MAGJLST1",153,0)
 ... I $G(MAGJOB("REMOTE")) D  Q
"RTN","MAGJLST1",154,0)
 .... F I=1:1:$L(REMOTE,",") I $D(MAGJOB("LOC",$P(REMOTE,",",I))) S REMOTE=$P($G(^MAG(2005.2,$P(REMOTE,",",I),3)),U,5) Q
"RTN","MAGJLST1",155,0)
 ... E  S T="" D  Q
"RTN","MAGJLST1",156,0)
 .... F I=1:1:$L(REMOTE,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(REMOTE,",",I),3)),U,5)
"RTN","MAGJLST1",157,0)
 .... S REMOTE=T
"RTN","MAGJLST1",158,0)
 .. S DIV="",X=$P(XX2,U,5) I X'=DUZ(2) S DIV=$$STATN(X)
"RTN","MAGJLST1",159,0)
 .. I MAGDT="" S MAGDT=$P(XX,U,7)
"RTN","MAGJLST1",160,0)
 .. S MAGDT=$$FMTE^XLFDT(MAGDT,"5Z")
"RTN","MAGJLST1",161,0)
 .. S WHOLOCK=$P(XX,U,10),MYLOCK="",DAYCASE=$P(XX,U,12)
"RTN","MAGJLST1",162,0)
 .. I WHOLOCK]"" S T=$$CHKLOCK^MAGJLS2B(WHOLOCK),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLST1",163,0)
 .. S RDRIST=$P(XX2,U,3),PROCMOD=$P(XX2,U,8)
"RTN","MAGJLST1",164,0)
 .. S Y=U_DAYCASE_U_WHOLOCK_U_$E($P(XX,U,9),1,26)_U_PROCMOD_U_MAGDT_U_$E($P(XX,U,14),1,16)_U_IMGCNT_U_ONL
"RTN","MAGJLST1",165,0)
 .. I $G(SNDREMOT) S Y=Y_U_REMOTE
"RTN","MAGJLST1",166,0)
 .. S Y=Y_$S(SHOWPLAC:U_PLACE,1:"")_U_MODALITY_U_$E($P(XX,U,13),1,11)_U_RDRIST
"RTN","MAGJLST1",167,0)
 .. S EXCAT=$P(XX,U,11)
"RTN","MAGJLST1",168,0)
 .. I EXCAT]"" S EXCAT=$S($D(^RA(72,"AVC","E",EXCAT)):"E",1:"")
"RTN","MAGJLST1",169,0)
 .. S ^TMP($J,"MAGRAEX2",ISS)=Y_"^|"_$P(XX,U,1,3)_U_$P(XX,U,10)_"||"_EXCAT_U_WHOLOCK_U_MYLOCK_U_MODALITY
"RTN","MAGJLST1",170,0)
 E  S REPLY="0^4~Invalid Radiology Patient"
"RTN","MAGJLST1",171,0)
 I MAGRACNT<2 S:(REPLY["Compiling") REPLY="0^2~No Exams Found for "_PATNAME
"RTN","MAGJLST1",172,0)
 I CNT!(REPLY["No Exams Found") D
"RTN","MAGJLST1",173,0)
 . I 'MORE S MSG="ALL exams are listed."
"RTN","MAGJLST1",174,0)
 . E  S MORE=$$FMTE^XLFDT(MORE) S MSG="Patient has more exams on file."
"RTN","MAGJLST1",175,0)
 . ; show SSN only if the user is a radiologist
"RTN","MAGJLST1",176,0)
 . S X=+MAGJOB("USER",1) I '(X=12!(X=15)) S PSSN=""
"RTN","MAGJLST1",177,0)
 . E  S PSSN=" ("_$E(PSSN,1,3)_"-"_$E(PSSN,4,5)_"-"_$E(PSSN,6,9)_")"
"RTN","MAGJLST1",178,0)
 . I CNT S REPLY=CNT_"^1~Radiology Exams for: "_PATNAME_PSSN_" -- "_MSG
"RTN","MAGJLST1",179,0)
 . E  S REPLY=REPLY_" -- "_MSG
"RTN","MAGJLST1",180,0)
 . S ^TMP($J,"MAGRAEX2",1)="^Day/Case~S3^Lock^Procedure^Modifier^Image Date/Time~S1^Status^# Img~S2^Onl"_$S($G(SNDREMOT):"^RC",1:"")_$S(SHOWPLAC:"^Site",1:"")_"^Mod^Imaging Loc^Interp By"
"RTN","MAGJLST1",181,0)
 S ^TMP($J,"MAGRAEX2",0)=REPLY
"RTN","MAGJLST1",182,0)
 S MAGGRY=$NA(^TMP($J,"MAGRAEX2"))
"RTN","MAGJLST1",183,0)
 K ^TMP($J,"RAE1"),^("MAGRAEX")
"RTN","MAGJLST1",184,0)
 Q
"RTN","MAGJLST1",185,0)
 ;
"RTN","MAGJLST1",186,0)
STATN(X) ; get station #, else return input value
"RTN","MAGJLST1",187,0)
 N T
"RTN","MAGJLST1",188,0)
 I X]"" D GETS^DIQ(4,X,99,"E","T") S T=$G(T(4,X_",",99,"E")) I T]"" S X=T
"RTN","MAGJLST1",189,0)
 Q X
"RTN","MAGJLST1",190,0)
 ;
"RTN","MAGJLST1",191,0)
END Q  ;
"RTN","MAGJMN1")
0^11^B74584215
"RTN","MAGJMN1",1,0)
MAGJMN1 ;WIRMFO/JHC VRad Maint functions ; 29 Jul 2003  4:02 PM
"RTN","MAGJMN1",2,0)
 ;;3.0;IMAGING;**16,9,22**;Jul 29, 2003
"RTN","MAGJMN1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJMN1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJMN1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJMN1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJMN1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJMN1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJMN1",10,0)
 ;; |                                                               |
"RTN","MAGJMN1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJMN1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJMN1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJMN1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJMN1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJMN1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",17,0)
 ;;
"RTN","MAGJMN1",18,0)
 Q
"RTN","MAGJMN1",19,0)
 ;
"RTN","MAGJMN1",20,0)
SVRLIST ;
"RTN","MAGJMN1",21,0)
 W @IOF,!!?10,"Enter/Edit VistARad Exams List Definition",!!
"RTN","MAGJMN1",22,0)
 N MAGIEN
"RTN","MAGJMN1",23,0)
 K DIC S (DIC,DLAYGO)=2006.631,DIC(0)="ALMEQ"
"RTN","MAGJMN1",24,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",25,0)
 S X=$P(@(DIC_+Y_",0)"),U,2)
"RTN","MAGJMN1",26,0)
 I X>9000 W !!,$C(7),"You may not edit System-Supplied files!" H 3 G SVRLIST
"RTN","MAGJMN1",27,0)
 S DIE=2006.631,DA=+Y,DR="[MAGJ LIST EDIT]"
"RTN","MAGJMN1",28,0)
 S MAGIEN=DA
"RTN","MAGJMN1",29,0)
 D ^DIE I '$D(DA) G SVRLIST
"RTN","MAGJMN1",30,0)
 D ENSRCH
"RTN","MAGJMN1",31,0)
 D BLDDEF(MAGIEN)
"RTN","MAGJMN1",32,0)
 D NOW^%DTC S $P(^MAG(2006.631,MAGIEN,0),U,5)=%
"RTN","MAGJMN1",33,0)
 W !!,"List Definition complete!" R X:2
"RTN","MAGJMN1",34,0)
 G SVRLIST
"RTN","MAGJMN1",35,0)
 Q
"RTN","MAGJMN1",36,0)
ENSRCH ; Invoke Search for 2006.631 def'n
"RTN","MAGJMN1",37,0)
 N GREF,GLIN,GO,CT,DIARI,DIC,FNOD,TNOD,NCOND,NODE0
"RTN","MAGJMN1",38,0)
 ; GREF holds indirect ref to store search logic data:
"RTN","MAGJMN1",39,0)
 ; @GREF@(3, ff -- conditional elements (fields/logic)
"RTN","MAGJMN1",40,0)
 ; @GREF@(4, ff -- composite elements (ANDed conditions)
"RTN","MAGJMN1",41,0)
 ; @GREF@(5, ff -- Human-readable search text
"RTN","MAGJMN1",42,0)
 ; GLIN holds indirect ref to retrieve search logic data from ^DIBT
"RTN","MAGJMN1",43,0)
 ; @GLIN@("DC", ff -- conditional elements
"RTN","MAGJMN1",44,0)
 ; @GLIN@("DL", ff -- composite elements
"RTN","MAGJMN1",45,0)
 ; @GLIN@("O", ff -- readable text
"RTN","MAGJMN1",46,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",47,0)
 S GO=1 I $D(@GREF@(5,1)) D  ; show current logic
"RTN","MAGJMN1",48,0)
 . W ! D DISPSRCH(GREF)
"RTN","MAGJMN1",49,0)
 . S X=$$YN("Do you want to delete or re-enter the search logic?","NO")
"RTN","MAGJMN1",50,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",51,0)
 . W !!?7,"Re-entering the search logic requires first deleting the current",!?7,"definition, then entering the new definition from scratch."
"RTN","MAGJMN1",52,0)
 . S X=$$YN("Are you sure you want to continue?","NO")
"RTN","MAGJMN1",53,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",54,0)
 I 'GO Q
"RTN","MAGJMN1",55,0)
 W !!?7,"Now enter search logic for this List.  To do this, the program"
"RTN","MAGJMN1",56,0)
 W !?7,"will prompt you just as if you were going to run a Fileman Search."
"RTN","MAGJMN1",57,0)
 W !?7,"When prompted STORE RESULTS OF SEARCH IN TEMPLATE:, answer with 'TEMP'"
"RTN","MAGJMN1",58,0)
 W !?7,"If prompted ... OK TO PURGE? NO// answer 'YES'; don't bother specifying"
"RTN","MAGJMN1",59,0)
 W !?7,"output print fields, but just RETURN through all the prompts to"
"RTN","MAGJMN1",60,0)
 W !?7,"complete the process.  The search definition will be saved as part"
"RTN","MAGJMN1",61,0)
 W !?7,"of this List definition; you will test it out by running it from "
"RTN","MAGJMN1",62,0)
 W !?7,"the workstation.  If you need to modify the search logic, you will"
"RTN","MAGJMN1",63,0)
 W !?7,"have to re-enter it in its entirety."
"RTN","MAGJMN1",64,0)
 W !!?7,"NOTES: EXAM LOCK INDICATOR will not work for search logic;"
"RTN","MAGJMN1",65,0)
 W !?14,"REMOTE CACHE INDICATOR only works for Null/Not Null logic."
"RTN","MAGJMN1",66,0)
 S DIC=2006.634 D EN^DIS  ; call Fman Search Logic routine. It will store search logic in ^DIBT
"RTN","MAGJMN1",67,0)
 ; 2006.634 is intentional--don't change this!
"RTN","MAGJMN1",68,0)
 I '$G(DIARI) W !!," Search logic NOT updated" D  Q
"RTN","MAGJMN1",69,0)
 . Q:'$D(@GREF@(5,1))  ; if no logic had existed before, quit
"RTN","MAGJMN1",70,0)
 . S X=$$YN("Do you want to DELETE the search logic?","NO")
"RTN","MAGJMN1",71,0)
 . I X="Y" K @GREF@(3) K ^(4),^(5) W " -- Deleted!"
"RTN","MAGJMN1",72,0)
 K @GREF@(3) K ^(4),^(5)
"RTN","MAGJMN1",73,0)
 S GLIN=$NA(^DIBT(DIARI))  ; Copy logic to 2006.631 DEF nodes
"RTN","MAGJMN1",74,0)
 S FNOD="DC",TNOD=3,CT=0  ; "DC" data--straight copy
"RTN","MAGJMN1",75,0)
 S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T),CT=CT+1,@GREF@(TNOD,T)=X
"RTN","MAGJMN1",76,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",77,0)
 S FNOD="DL",TNOD=4,CT=0  ; "DL" data--copy depends on storage scheme in DIBT:
"RTN","MAGJMN1",78,0)
 ; Zero node null -- straight copy
"RTN","MAGJMN1",79,0)
 ;  Else 1) either only one condition is defined; 
"RTN","MAGJMN1",80,0)
 ;   or, 2) the zero-node condition is ANDed with all defined conditions
"RTN","MAGJMN1",81,0)
 ;     Case 2: Var A -- Pre-pend zero node, then dup zero node
"RTN","MAGJMN1",82,0)
 ;             Var B -- Pre-pend zero node
"RTN","MAGJMN1",83,0)
 S NCOND=+$G(@GLIN@(FNOD))
"RTN","MAGJMN1",84,0)
 I $G(@GLIN@(FNOD,0))]"" S NODE0=^(0) D
"RTN","MAGJMN1",85,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=NODE0_X
"RTN","MAGJMN1",86,0)
 . I CT'=NCOND S CT=CT+1,@GREF@(TNOD,CT)=NODE0_$S(CT=1:"",1:"^")
"RTN","MAGJMN1",87,0)
 E  D
"RTN","MAGJMN1",88,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=X
"RTN","MAGJMN1",89,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",90,0)
 ; Human-readable text--straight copy
"RTN","MAGJMN1",91,0)
 S TNOD=5,T=0 F  S T=$O(@GLIN@("O",T)) Q:T=""  S @GREF@(TNOD,T)=^(T,0)
"RTN","MAGJMN1",92,0)
 Q
"RTN","MAGJMN1",93,0)
 ;
"RTN","MAGJMN1",94,0)
BLDDEF(LSTID) ; build DEF nodes for Column/Sort defs
"RTN","MAGJMN1",95,0)
 N QX,SS,STR,LSTHDR,T,T0,T6,HASCASE S SS=0,HASCASE=0
"RTN","MAGJMN1",96,0)
 ; columns/hdrs: Order in T array by the Relative Column Order
"RTN","MAGJMN1",97,0)
 F  S SS=$O(^MAG(2006.631,LSTID,1,SS)) D  Q:'SS
"RTN","MAGJMN1",98,0)
 . I 'SS Q:HASCASE
"RTN","MAGJMN1",99,0)
 . I  S X=1  ; * FORCE list to always contain CASE # (Field #1)
"RTN","MAGJMN1",100,0)
 . E  S X=^MAG(2006.631,LSTID,1,SS,0)
"RTN","MAGJMN1",101,0)
 . S X=+X_$S($P(X,U,2):";"_+$P(X,U,2),1:"")
"RTN","MAGJMN1",102,0)
 . I 'HASCASE S HASCASE=(+X=1)
"RTN","MAGJMN1",103,0)
 . S T0=^MAG(2006.63,+X,0),T6=+$P(T0,U,6) S:'T6 T6=99
"RTN","MAGJMN1",104,0)
 . S T8=$P(T0,U,8) I T8]"" S T8="~"_T8
"RTN","MAGJMN1",105,0)
 . S T(T6,+X)=X_U_$S($P(T0,U,3)]"":$P(T0,U,3),1:$P(T0,U,2))_T8
"RTN","MAGJMN1",106,0)
 ; Now, go thru T to build ordered field sequence for output columns
"RTN","MAGJMN1",107,0)
 S QX="T",STR="",LSTHDR=""
"RTN","MAGJMN1",108,0)
 F  S QX=$Q(@QX) Q:QX=""  S X=@QX D
"RTN","MAGJMN1",109,0)
 . S STR=STR_$S(STR="":"",1:U)_$P(X,U)
"RTN","MAGJMN1",110,0)
 . S LSTHDR=LSTHDR_$S(LSTHDR="":"",1:U)_$P(X,U,2)
"RTN","MAGJMN1",111,0)
 S ^MAG(2006.631,LSTID,"DEF",.5)=LSTHDR,^(1)=STR
"RTN","MAGJMN1",112,0)
 ; Sort values:
"RTN","MAGJMN1",113,0)
 S SS=0,STR=""
"RTN","MAGJMN1",114,0)
 F  S SS=$O(^MAG(2006.631,LSTID,2,SS)) Q:'SS  S X=^(SS,0) D
"RTN","MAGJMN1",115,0)
 . S X=+X_$S($P(X,U,2):"-",1:"")
"RTN","MAGJMN1",116,0)
 . S STR=STR_$S(STR="":"",1:U)_X
"RTN","MAGJMN1",117,0)
 S ^MAG(2006.631,LSTID,"DEF",2)=STR
"RTN","MAGJMN1",118,0)
 D NOW^%DTC S $P(^MAG(2006.631,LSTID,"DEF",0),U)=%
"RTN","MAGJMN1",119,0)
 Q
"RTN","MAGJMN1",120,0)
 ;
"RTN","MAGJMN1",121,0)
PRE ; init 2006.63 prior to KIDS install
"RTN","MAGJMN1",122,0)
 N DIK,DA S DIK="^MAG(2006.63,",DA=0 F  S DA=$O(@(DIK_DA_")")) Q:'DA  D ^DIK
"RTN","MAGJMN1",123,0)
 Q
"RTN","MAGJMN1",124,0)
BLDALL ; Create "DEF" nodes, Button labels List Def'ns
"RTN","MAGJMN1",125,0)
 ; Updates all lists after s/w update list defs are installed
"RTN","MAGJMN1",126,0)
 N SS,LSTDAT,LSTNUM,BUTTON,LSTTYP
"RTN","MAGJMN1",127,0)
 S SS=0
"RTN","MAGJMN1",128,0)
 F  S SS=$O(^MAG(2006.631,SS)) Q:'SS  S LSTDAT=$G(^(SS,0)) I LSTDAT]"" D
"RTN","MAGJMN1",129,0)
 . S LSTNUM=$P(LSTDAT,U,2),BUTTON=$P(LSTDAT,U,7),LSTTYP=$P(LSTDAT,U,3)
"RTN","MAGJMN1",130,0)
 . I LSTNUM>9900!$P(LSTDAT,U,6) D BLDDEF(SS)  ; build DEF nodes for System Lists & any Enabled lists
"RTN","MAGJMN1",131,0)
 . I BUTTON="",(LSTTYP]"") D   ; Create Button Labels if needed
"RTN","MAGJMN1",132,0)
 . . S BUTTON=$S(LSTTYP="U":"Unread #",LSTTYP="R":"Recent #",LSTTYP="A":"All Active #",LSTTYP="P":"Pending #",1:"List #")_LSTNUM
"RTN","MAGJMN1",133,0)
 . . S $P(^MAG(2006.631,SS,0),U,7)=BUTTON
"RTN","MAGJMN1",134,0)
 . ; Next line deletes a defunct system entry from the file
"RTN","MAGJMN1",135,0)
 . I LSTNUM=9991 S LSTNAM=$P(LSTDAT,U) I LSTNAM="All Exams by Priority, Date/Time" D
"RTN","MAGJMN1",136,0)
 . . N DA,DIK S DIK="^MAG(2006.631,",DA=SS D ^DIK
"RTN","MAGJMN1",137,0)
 D POST
"RTN","MAGJMN1",138,0)
 Q
"RTN","MAGJMN1",139,0)
 ;
"RTN","MAGJMN1",140,0)
POST ; Install msg
"RTN","MAGJMN1",141,0)
 I $T(AHOPT^MAGQE5)'=""
"RTN","MAGJMN1",142,0)
 E  Q  ; Mag Ent Rtn not here
"RTN","MAGJMN1",143,0)
 N FIRST,LAST
"RTN","MAGJMN1",144,0)
 D REMTASK^MAGQE4
"RTN","MAGJMN1",145,0)
 D STTASK^MAGQE4
"RTN","MAGJMN1",146,0)
 D INS(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGJMN1",147,0)
 Q
"RTN","MAGJMN1",148,0)
INS(XP,DUZ,DATE,IDA) ;
"RTN","MAGJMN1",149,0)
 N CT,T,COM,DDATE,ST,T
"RTN","MAGJMN1",150,0)
 D GETENV^%ZOSV
"RTN","MAGJMN1",151,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGJMN1",152,0)
 S T=0
"RTN","MAGJMN1",153,0)
 S T=T+1,^TMP($J,"MAGQ",T)="PACKAGE INSTALL"
"RTN","MAGJMN1",154,0)
 S T=T+1,^TMP($J,"MAGQ",T)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGJMN1",155,0)
 S T=T+1,^TMP($J,"MAGQ",T)="PACKAGE: "_XP
"RTN","MAGJMN1",156,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Version: "_$$VER^XPDUTL(XP)
"RTN","MAGJMN1",157,0)
 S ST=$$GET1^DIQ(9.7,IDA,11,"I")
"RTN","MAGJMN1",158,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGJMN1",159,0)
 S CT=$$GET1^DIQ(9.7,IDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT
"RTN","MAGJMN1",160,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGJMN1",161,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGJMN1",162,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Environment: "_Y
"RTN","MAGJMN1",163,0)
 S COM=$$GET1^DIQ(9.7,IDA,6,"I")
"RTN","MAGJMN1",164,0)
 S T=T+1,^TMP($J,"MAGQ",T)="FILE COMMENT: "_COM
"RTN","MAGJMN1",165,0)
 S T=T+1,^TMP($J,"MAGQ",T)="DATE: "_DATE
"RTN","MAGJMN1",166,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Installed by: "_$$GET1^DIQ(9.7,IDA,9,"E")
"RTN","MAGJMN1",167,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Install Name: "_$$GET1^DIQ(9.7,IDA,.01,"E")
"RTN","MAGJMN1",168,0)
 S DDATE=$$GET1^DIQ(9.7,IDA,51,"I")
"RTN","MAGJMN1",169,0)
 S T=T+1,^TMP($J,"MAGQ",T)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGJMN1",170,0)
 S XMSUB=XP_" INSTALLATION"
"RTN","MAGJMN1",171,0)
 D MAILSHR^MAGQE2
"RTN","MAGJMN1",172,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGJMN1",173,0)
 Q
"RTN","MAGJMN1",174,0)
 ;
"RTN","MAGJMN1",175,0)
YN(MSG,DFLT) ; get Yes/No reply
"RTN","MAGJMN1",176,0)
 N X I $G(DFLT)="" S DFLT="N"
"RTN","MAGJMN1",177,0)
 W !
"RTN","MAGJMN1",178,0)
 S DFLT=$E(DFLT),DFLT=$S(DFLT="N":"NO",1:"YES")
"RTN","MAGJMN1",179,0)
YN1 W !,MSG_" "_DFLT_"// "
"RTN","MAGJMN1",180,0)
 R X:DTIME S:X="" X=DFLT S X=$E(X),X=$TR(X,"ynYN","YNYN")
"RTN","MAGJMN1",181,0)
 I "YN"'[X W "  ??? Enter YES or NO",! G YN1
"RTN","MAGJMN1",182,0)
 Q X
"RTN","MAGJMN1",183,0)
 ;
"RTN","MAGJMN1",184,0)
LSTINQ ; Inq/Disp list def'n
"RTN","MAGJMN1",185,0)
 N GREF,MAGIEN
"RTN","MAGJMN1",186,0)
 W !!?15,"Display VistARad Exams List Definition",!!
"RTN","MAGJMN1",187,0)
 N MAGIEN
"RTN","MAGJMN1",188,0)
 S DIC=2006.631,DIC(0)="AMEQ"
"RTN","MAGJMN1",189,0)
 D ^DIC I Y=-1 K DIC,DA,DR Q
"RTN","MAGJMN1",190,0)
 K DR S DA=+Y,MAGIEN=DA
"RTN","MAGJMN1",191,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",192,0)
 W ! D EN^DIQ
"RTN","MAGJMN1",193,0)
 R !,"Enter RETURN to display the Search Logic: ",X:DTIME W !
"RTN","MAGJMN1",194,0)
 D DISPSRCH(GREF)
"RTN","MAGJMN1",195,0)
 G LSTINQ
"RTN","MAGJMN1",196,0)
 Q
"RTN","MAGJMN1",197,0)
 ;
"RTN","MAGJMN1",198,0)
DISPSRCH(GREF) ; GREF holds indirect ref for global holding search logic data
"RTN","MAGJMN1",199,0)
 I $D(@GREF@(5,1)) W !,"List Exams where:",! D
"RTN","MAGJMN1",200,0)
 . F I=1:1 Q:'$D(@GREF@(5,I))  W !?3,^(I)
"RTN","MAGJMN1",201,0)
 E  W !?3,"NO Search Logic defined!"
"RTN","MAGJMN1",202,0)
 Q
"RTN","MAGJMN1",203,0)
 ;
"RTN","MAGJMN1",204,0)
VRSIT ;
"RTN","MAGJMN1",205,0)
 W @IOF,!!?10,"Enter/Edit VistARad Site Parameters",!!
"RTN","MAGJMN1",206,0)
 S DIC=2006.69,DIC(0)="ALMEQ"
"RTN","MAGJMN1",207,0)
 I '$D(^MAG(DIC,1)) S DLAYGO=DIC
"RTN","MAGJMN1",208,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",209,0)
 S DIE=2006.69,DA=+Y,DR=".01:3.99;4.1:20"
"RTN","MAGJMN1",210,0)
 D ^DIE
"RTN","MAGJMN1",211,0)
 K DIC,DA,DR,DIE,DLAYGO
"RTN","MAGJMN1",212,0)
 Q
"RTN","MAGJMN1",213,0)
 ;
"RTN","MAGJMN1",214,0)
EEPREF ;
"RTN","MAGJMN1",215,0)
 W @IOF,!!?10,"Enter/Edit VistARad Prefetch Logic",!!
"RTN","MAGJMN1",216,0)
 N MAGIEN
"RTN","MAGJMN1",217,0)
 K DIC S (DIC,DLAYGO)=2006.65,DIC(0)="ALMEQ"
"RTN","MAGJMN1",218,0)
 D ^DIC I Y=-1 K DIC,DIE,DR,DLAYGO Q
"RTN","MAGJMN1",219,0)
 S DIE=2006.65,DA=+Y,DR="[MAGJ PRIOR EDIT]"
"RTN","MAGJMN1",220,0)
 S MAGIEN=DA
"RTN","MAGJMN1",221,0)
 D ^DIE I '$D(DA) G EEPREF
"RTN","MAGJMN1",222,0)
 G EEPREF
"RTN","MAGJMN1",223,0)
 Q
"RTN","MAGJMN1",224,0)
INPREF ; Inquire VRad PreFetch
"RTN","MAGJMN1",225,0)
 W @IOF,!!?10,"Inquire VistARad Prefetch Logic",!!
"RTN","MAGJMN1",226,0)
 N MAGIEN
"RTN","MAGJMN1",227,0)
 S DIC=2006.65,DIC(0)="AMEQ"
"RTN","MAGJMN1",228,0)
 D ^DIC I Y=-1 K DIC Q
"RTN","MAGJMN1",229,0)
 S DA=+Y,(FR,TO)=$P(Y,U,2),MAGIEN=DA,L=0
"RTN","MAGJMN1",230,0)
 S BY="[MAGJ PRIOR SORT]",DIS(0)="I D0=MAGIEN"
"RTN","MAGJMN1",231,0)
 D EN^DIP
"RTN","MAGJMN1",232,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",233,0)
 G INPREF
"RTN","MAGJMN1",234,0)
 Q
"RTN","MAGJMN1",235,0)
PRPREF ;Print VRad Prefetch
"RTN","MAGJMN1",236,0)
 W !! S DIC=2006.65,L=0,BY="[MAGJ PRIOR SORT]"
"RTN","MAGJMN1",237,0)
 D EN1^DIP
"RTN","MAGJMN1",238,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",239,0)
 Q
"RTN","MAGJMN1",240,0)
 ;
"RTN","MAGJMN1",241,0)
END ;
"RTN","MAGJORD")
0^5^B15818939
"RTN","MAGJORD",1,0)
MAGJORD ;WIRMFO/JHC-Display Rad Exam Order info ; 29 Jul 2003  10:02 AM
"RTN","MAGJORD",2,0)
 ;;3.0;IMAGING;**16,22**;Jul 29, 2003
"RTN","MAGJORD",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJORD",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJORD",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJORD",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJORD",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJORD",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJORD",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJORD",10,0)
 ;; |                                                               |
"RTN","MAGJORD",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJORD",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJORD",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJORD",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJORD",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJORD",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJORD",17,0)
 ;;
"RTN","MAGJORD",18,0)
 Q
"RTN","MAGJORD",19,0)
ORD(MAGRPTY,DATA) ; Radiology Order Display
"RTN","MAGJORD",20,0)
 ; RPC Call: MAGJ RADORDERDISP
"RTN","MAGJORD",21,0)
 ; MAGRPTY holds indirect reference to returned data
"RTN","MAGJORD",22,0)
 ; 
"RTN","MAGJORD",23,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT")) K @MAGRPTY
"RTN","MAGJORD",24,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGJORD"
"RTN","MAGJORD",25,0)
 N RARPT,RADFN,RADTI,RACNI,RAPGE,RAX,RAOIFN
"RTN","MAGJORD",26,0)
 N REPLY,POP,DFN,COMPLIC,XX,HDR,MAGRET,REQONLY
"RTN","MAGJORD",27,0)
 S REPLY="0^4~Attempting to display order info"
"RTN","MAGJORD",28,0)
 D OPENDEV
"RTN","MAGJORD",29,0)
 I POP S REPLY="0^4~Unable to open device 'IMAGING WORKSTATION'" G ORDZ
"RTN","MAGJORD",30,0)
 S RADFN=$P(DATA,U),RADTI=$P(DATA,U,2),RACNI=$P(DATA,U,3)
"RTN","MAGJORD",31,0)
 S RARPT=+$P(DATA,U,4),REQONLY=+$P(DATA,U,1,5)
"RTN","MAGJORD",32,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJORD",33,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RADFN_" "_RADTI_" "_RACNI_" "_RARPT_")." G ORDZ
"RTN","MAGJORD",34,0)
 S RAOIFN=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,11)
"RTN","MAGJORD",35,0)
 I RAOIFN,$D(^RAO(75.1,RAOIFN,0))
"RTN","MAGJORD",36,0)
 E  S REPLY="0^2~Order Information is NOT Available for this exam." G ORDZ
"RTN","MAGJORD",37,0)
 ; Check for Database integrity problems ONLY if Req was explicitly
"RTN","MAGJORD",38,0)
 ; requested (No check for Auto_Display of Req, cuz Exam Open does ck)
"RTN","MAGJORD",39,0)
 D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,"",.MAGRET)
"RTN","MAGJORD",40,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1)),XX=$G(^(2)),HDR=""
"RTN","MAGJORD",41,0)
 S COMPLIC=$P(XX,U,4)      ;  Complications text
"RTN","MAGJORD",42,0)
 F I=4,12,9 S HDR=HDR_$P(RADATA,U,I)_"   " ; PtName, Case #, Procedure
"RTN","MAGJORD",43,0)
 I REQONLY D CKINTEG^MAGJLST1(.REPLY,RADFN,RADTI,RACNI,RARPT,RADATA) I REPLY]"" S REPLY="0^7~"_REPLY G ORDZ  ; Database integrity problems
"RTN","MAGJORD",44,0)
 S RAX="",RAPGE=0 D ^RAORD5
"RTN","MAGJORD",45,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGJORD",46,0)
 S @MAGRPTY@(1)="REQ: "_HDR
"RTN","MAGJORD",47,0)
 D COMMENTS(RADFN,RADTI,RACNI,MAGRPTY,2,COMPLIC)
"RTN","MAGJORD",48,0)
 S REPLY="1^OK"
"RTN","MAGJORD",49,0)
 K ^TMP($J,"MAGRAEX")
"RTN","MAGJORD",50,0)
ORDZ S @MAGRPTY@(0)=REPLY
"RTN","MAGJORD",51,0)
 Q
"RTN","MAGJORD",52,0)
 ;
"RTN","MAGJORD",53,0)
COMMENTS(RADFN,RADTI,RACNI,MAGRPTY,DNODE,COMPLIC) ; add Complications & Tech Comments to output report
"RTN","MAGJORD",54,0)
 ;  also called by Rad Report display (magjlst1)
"RTN","MAGJORD",55,0)
 ;  RADFN, RADTI, & RACNI identify exam
"RTN","MAGJORD",56,0)
 ;  MAGRPTY is indirect reference wher output lines are to be stored
"RTN","MAGJORD",57,0)
 ;  DNODE holds reference for starting node for lines of output
"RTN","MAGJORD",58,0)
 ;  COMPLIC passes in complications data reference
"RTN","MAGJORD",59,0)
 ;
"RTN","MAGJORD",60,0)
 I +MAGJOB("USER",1)  ; Radiologist
"RTN","MAGJORD",61,0)
 E  I $D(^VA(200,"ARC","T",+DUZ))  ; Rad Tech
"RTN","MAGJORD",62,0)
 E  Q  ; Don't display for any other user type
"RTN","MAGJORD",63,0)
 N QTMP,CT,XX S CT=0
"RTN","MAGJORD",64,0)
 S @MAGRPTY@(DNODE)=" ",CT=CT+.01,@MAGRPTY@(DNODE+CT)="Complications: "_$S(COMPLIC:$P($G(^RA(78.1,+COMPLIC,0)),U),1:"")
"RTN","MAGJORD",65,0)
 S X=$P(COMPLIC,"~",2)
"RTN","MAGJORD",66,0)
 I X S CT=CT+.01,@MAGRPTY@(DNODE+CT)="   "_$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"COMP")),U)
"RTN","MAGJORD",67,0)
 K ^TMP($J,"RAE2") D SVTCOM^RAUTL11(RADFN,RADTI,RACNI)
"RTN","MAGJORD",68,0)
 S QTMP="^TMP($J,""RAE2"")"
"RTN","MAGJORD",69,0)
 F  S QTMP=$Q(@QTMP) Q:QTMP=""  Q:QTMP'["RAE2"  I QTMP["TCOM" D
"RTN","MAGJORD",70,0)
 . S XX=@(QTMP) N HI,TXT,LINE1 S LINE1=0
"RTN","MAGJORD",71,0)
 . F  Q:XX=""  S HI=$L(XX) S:HI>63 HI=63 F I=HI:-1:0 S:'I XX="" I HI<63!($E(XX,I)=" ") D  Q
"RTN","MAGJORD",72,0)
 .. S TXT=$S('LINE1:"Tech Comments: ",1:"               ")_$E(XX,1,I),XX=$E(XX,I+1,999),LINE1=1
"RTN","MAGJORD",73,0)
 .. I XX]"" F I=1:1:999 I $E(XX,I)'=" " S XX=$E(XX,I,999) Q
"RTN","MAGJORD",74,0)
 .. S CT=CT+.01,@MAGRPTY@(DNODE+CT)=TXT
"RTN","MAGJORD",75,0)
 K ^TMP($J,"RAE2")
"RTN","MAGJORD",76,0)
 Q
"RTN","MAGJORD",77,0)
 ;
"RTN","MAGJORD",78,0)
OPENDEV ;
"RTN","MAGJORD",79,0)
 S IOP="IMAGING WORKSTATION",%ZIS=0 D ^%ZIS
"RTN","MAGJORD",80,0)
 I POP
"RTN","MAGJORD",81,0)
 E  U IO
"RTN","MAGJORD",82,0)
 Q
"RTN","MAGJORD",83,0)
ERRA ;
"RTN","MAGJORD",84,0)
 S @MAGRPTY@(0)="0^ERROR "_$$EC^%ZOSV
"RTN","MAGJORD",85,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJORD",86,0)
 Q:$Q 1  Q
"RTN","MAGJORD",87,0)
END ;
"RTN","MAGJRT")
0^13^B45304207
"RTN","MAGJRT",1,0)
MAGJRT ;WIRMFO/JHC VistaRad RPC calls for Demand Routing ; 29 Jul 2003  10:02 AM
"RTN","MAGJRT",2,0)
 ;;3.0;IMAGING;**9,22**;Jul 29, 2003
"RTN","MAGJRT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJRT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJRT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJRT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJRT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJRT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJRT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJRT",10,0)
 ;; |                                                               |
"RTN","MAGJRT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJRT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJRT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJRT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJRT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJRT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJRT",17,0)
 ;;
"RTN","MAGJRT",18,0)
 Q
"RTN","MAGJRT",19,0)
 ; Entry Points:
"RTN","MAGJRT",20,0)
 ;   RTENA -- Determine whether user has Security Key required to use Demand Routing
"RTN","MAGJRT",21,0)
 ;   RTREQ -- Build message to create Demand Routing Request form on the W/S
"RTN","MAGJRT",22,0)
 ;  RTEXAM -- Queue images to route according to input requests
"RTN","MAGJRT",23,0)
 ;
"RTN","MAGJRT",24,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR
"RTN","MAGJRT",25,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJRT",26,0)
 Q:$Q 1  Q
"RTN","MAGJRT",27,0)
 ;
"RTN","MAGJRT",28,0)
RTENA(MAGGRY,DATA) ; RPC: MAGJ ROUTE ENABLE
"RTN","MAGJRT",29,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJRT"
"RTN","MAGJRT",30,0)
 I '$D(MAGJOB("KEYS")) D USERKEYS^MAGJUTL3
"RTN","MAGJRT",31,0)
 S MAGGRY=$S($D(MAGJOB("KEYS","MAGJ DEMAND ROUTE")):"TRUE",1:"FALSE")
"RTN","MAGJRT",32,0)
 Q
"RTN","MAGJRT",33,0)
 ;
"RTN","MAGJRT",34,0)
RTREQ(MAGGRY,DATA) ; RPC: MAGJ ROUTE REQUEST
"RTN","MAGJRT",35,0)
 ; request to route exams;  info returned in MAGGRY
"RTN","MAGJRT",36,0)
 ; input in DATA(1:n): RADFN ^ RADTI ^ RACNI ^ RARPT
"RTN","MAGJRT",37,0)
 ;  - RADFN^RADTI^RACNI input to specify case of interest
"RTN","MAGJRT",38,0)
 ; Returns: Exam Info for routable exams in ^TMP($J,"MAGJROUTE",1:N)
"RTN","MAGJRT",39,0)
 ;          Followed by Prompts for Routing Locations & Priority
"RTN","MAGJRT",40,0)
 ;          Then error messages, if any
"RTN","MAGJRT",41,0)
 ;          
"RTN","MAGJRT",42,0)
 ; MAGGRY holds $NA reference to ^TMP where Broker return message is assembled;
"RTN","MAGJRT",43,0)
 ;   all references to MAGGRY use subscript indirection
"RTN","MAGJRT",44,0)
 ;
"RTN","MAGJRT",45,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJRT"
"RTN","MAGJRT",46,0)
 N RARPT,RADFN,RADTI,RACNI
"RTN","MAGJRT",47,0)
 N DAYCASE,REPLY,CT,MAGS,STARTNOD,DATAOUT,RADATA,MAGSTRT,MAGEND,NEXAM
"RTN","MAGJRT",48,0)
 N IDATA,NOGO
"RTN","MAGJRT",49,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJRT",50,0)
 S CT=0,NEXAM=0,DATAOUT="",DAYCASE=""
"RTN","MAGJRT",51,0)
 S NOGO(0)=0  ; array for reply for exams unable to process
"RTN","MAGJRT",52,0)
 S MAGLST="MAGJROUTE",STARTNOD=1
"RTN","MAGJRT",53,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY ; assign MAGGRY value
"RTN","MAGJRT",54,0)
 S IDATA=""
"RTN","MAGJRT",55,0)
 F  S IDATA=$O(DATA(IDATA)) Q:IDATA=""  S DATA=DATA(IDATA) D EXDAT("RTGET")
"RTN","MAGJRT",56,0)
 I NEXAM D  ; have some exams eligible to be routed
"RTN","MAGJRT",57,0)
 . S @MAGGRY@(STARTNOD)="^Case #^Patient^Procedure^Image Date/Time^Status^Modality"
"RTN","MAGJRT",58,0)
 . S CT=CT+1,@MAGGRY@(CT+STARTNOD)="*END"
"RTN","MAGJRT",59,0)
 . S REPLY="1~Route Exams to Selected Locations"
"RTN","MAGJRT",60,0)
 . D RTLOCS(.CT) D RTPRIOR(.CT)
"RTN","MAGJRT",61,0)
 E  D
"RTN","MAGJRT",62,0)
 . S REPLY="0~Unable to Route any Exams"
"RTN","MAGJRT",63,0)
RTREQZ I NOGO(0) D NOGO("Routed",.CT)
"RTN","MAGJRT",64,0)
 S @MAGGRY@(0)=NEXAM_U_REPLY
"RTN","MAGJRT",65,0)
 Q
"RTN","MAGJRT",66,0)
 ;
"RTN","MAGJRT",67,0)
 ;
"RTN","MAGJRT",68,0)
EXDAT(GET) ; Put routable exam info in output file, non-routable in NOGO(n)
"RTN","MAGJRT",69,0)
 S NOGO=0,RARPT=+$P(DATA,U,4)
"RTN","MAGJRT",70,0)
 S RADFN=$P(DATA,U),RADTI=$P(DATA,U,2),RACNI=$P(DATA,U,3),X=0
"RTN","MAGJRT",71,0)
 I RADFN,RADTI,RACNI D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,"",.X)
"RTN","MAGJRT",72,0)
 I 'X S NOGO="1~Request has Invalid Case Pointer ("_RADFN_U_RADTI_U_RACNI_U_RARPT_")." G EXDATZ
"RTN","MAGJRT",73,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1)) K ^TMP($J,"MAGRAEX")
"RTN","MAGJRT",74,0)
 S RARPT=$P(RADATA,U,10),DAYCASE=$P(RADATA,U,12)
"RTN","MAGJRT",75,0)
 S DATAOUT="" D @GET
"RTN","MAGJRT",76,0)
EXDATZ I NOGO D
"RTN","MAGJRT",77,0)
 . S NOGO(0)=NOGO(0)+1,NOGO(NOGO(0))=$P(NOGO,"~",2,99)
"RTN","MAGJRT",78,0)
 E  D
"RTN","MAGJRT",79,0)
 . S DATAOUT=U_DATAOUT_"|"_RADFN_U_RADTI_U_RACNI_U_RARPT_"||"
"RTN","MAGJRT",80,0)
 . S NEXAM=NEXAM+1,CT=CT+1,@MAGGRY@(CT+STARTNOD)=DATAOUT
"RTN","MAGJRT",81,0)
 Q
"RTN","MAGJRT",82,0)
 ;
"RTN","MAGJRT",83,0)
RTGET ;GET code for Demand Routing function
"RTN","MAGJRT",84,0)
 ; get data for exams (DATAOUT), or reason for error (NOGO)
"RTN","MAGJRT",85,0)
 N IMAG,MAGIEN,MDL,MAGS
"RTN","MAGJRT",86,0)
 S X=$$JBFETCH^MAGJUTL2(RARPT,.MAGS)  ; ? route only if NOT on Jukebox
"RTN","MAGJRT",87,0)
 I +X S NOGO="2~Case #"_DAYCASE_"--Images have been requested from Jukebox; try again later." Q
"RTN","MAGJRT",88,0)
 I '$P(X,U,2) S NOGO="3~Case #"_DAYCASE_"--No Images exist for exam." Q
"RTN","MAGJRT",89,0)
 F IMAG=1:1 S MAGIEN=$P($G(MAGS(IMAG)),U,4) Q:MAGIEN=""  D  Q:MDL]""
"RTN","MAGJRT",90,0)
 . S MDL=$P(MAGS(IMAG),U,3)
"RTN","MAGJRT",91,0)
 . I MDL="DR" S MDL="CR"  ; for now, hard code cx of non-standard code
"RTN","MAGJRT",92,0)
 ; Contents of DATAOUT=
"RTN","MAGJRT",93,0)
 ;  DAYCASE ^ Pt Name ^ Proc. Name ^ Exam Date/Time ^ Status ^ MDL
"RTN","MAGJRT",94,0)
 S DATAOUT=DAYCASE_U_$P(RADATA,U,4)_U_$P(RADATA,U,9)
"RTN","MAGJRT",95,0)
 S DATAOUT=DATAOUT_U_$$DTTIM($P(RADATA,U,6))_U_$P(RADATA,U,14)_U_MDL
"RTN","MAGJRT",96,0)
 Q
"RTN","MAGJRT",97,0)
 ;
"RTN","MAGJRT",98,0)
DTTIM(X) ; Format Image Date/Time
"RTN","MAGJRT",99,0)
 N T S T=$L(X,"  "),X=$P(X,"  ",1,T-1)_"@"_$P(X,"  ",T)
"RTN","MAGJRT",100,0)
 Q X
"RTN","MAGJRT",101,0)
 ;
"RTN","MAGJRT",102,0)
RTLOCS(CT) ; define prompts for Routing Locations
"RTN","MAGJRT",103,0)
 ;DROP-Down List, Default=[Do Not Route], Enable Auto-fill (if>1 exam)
"RTN","MAGJRT",104,0)
 N AUTOFILL,T,X
"RTN","MAGJRT",105,0)
 S AUTOFILL=$S($G(NEXAM)>1:"AUTOFILL",1:"")
"RTN","MAGJRT",106,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="*PROMPT"
"RTN","MAGJRT",107,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="DROP^Route To^"_AUTOFILL_"^[Do Not Route]"
"RTN","MAGJRT",108,0)
 S T=0
"RTN","MAGJRT",109,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="0^[Do Not Route]"
"RTN","MAGJRT",110,0)
 F  S T=$O(^MAG(2005.2,T)) Q:'T  S X=$G(^(T,0)) I X]"" D
"RTN","MAGJRT",111,0)
 . Q:'$P(X,U,9)  ; Not a routable location
"RTN","MAGJRT",112,0)
 . S X=$P(X,U)
"RTN","MAGJRT",113,0)
 . S CT=CT+1,@MAGGRY@(CT+STARTNOD)=T_U_X
"RTN","MAGJRT",114,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="*END"
"RTN","MAGJRT",115,0)
 Q
"RTN","MAGJRT",116,0)
 ;
"RTN","MAGJRT",117,0)
RTPRIOR(CT) ; define prompts for Routing Priorities
"RTN","MAGJRT",118,0)
 ;DROP-Down List, Default=Medium, Enable Auto-fill (if>1 exam)
"RTN","MAGJRT",119,0)
 N AUTOFILL
"RTN","MAGJRT",120,0)
 S AUTOFILL=$S($G(NEXAM)>1:"AUTOFILL",1:"")
"RTN","MAGJRT",121,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="*PROMPT"
"RTN","MAGJRT",122,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="DROP^Priority^"_AUTOFILL_"^Medium"
"RTN","MAGJRT",123,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="900^STAT"
"RTN","MAGJRT",124,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="750^High"
"RTN","MAGJRT",125,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="500^Medium"
"RTN","MAGJRT",126,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="250^Low"
"RTN","MAGJRT",127,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="*END"
"RTN","MAGJRT",128,0)
 Q
"RTN","MAGJRT",129,0)
 ;
"RTN","MAGJRT",130,0)
NOGO(HDR,CT) ; output error msgs for exams
"RTN","MAGJRT",131,0)
 Q:'NOGO(0)
"RTN","MAGJRT",132,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="*ERROR"
"RTN","MAGJRT",133,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)=NOGO(0)_" Exams Not Able to be "_HDR
"RTN","MAGJRT",134,0)
 F I=1:1:NOGO(0) S CT=CT+1,@MAGGRY@(CT+STARTNOD)=NOGO(I)
"RTN","MAGJRT",135,0)
 S CT=CT+1,@MAGGRY@(CT+STARTNOD)="*END"
"RTN","MAGJRT",136,0)
 Q
"RTN","MAGJRT",137,0)
 ;
"RTN","MAGJRT",138,0)
 ; 1  RADFN   RADTI    RACNI   RANME   RASSN    <-- from GETEXAM
"RTN","MAGJRT",139,0)
 ; 6  RADATE  RADTE    RACN    RAPRC   RARPT            (=RADATA)
"RTN","MAGJRT",140,0)
 ; 11 RAST    DAYCASE  RAELOC  RASTP   RASTORD
"RTN","MAGJRT",141,0)
 ; 16 RADTPRT RACPT
"RTN","MAGJRT",142,0)
 ;
"RTN","MAGJRT",143,0)
RTEXAM(MAGGRY,DATA) ; RPC: MAGJ ROUTE EXAMS
"RTN","MAGJRT",144,0)
 ; queue images to route according to input requests
"RTN","MAGJRT",145,0)
 ; input in DATA(1:n), list of exams to route: 
"RTN","MAGJRT",146,0)
 ;    Destination Network Loc'n ^ Priority | RADFN ^ RADTI ^ RACNI ^ RARPT
"RTN","MAGJRT",147,0)
 ; Returns: Reply status in ^TMP($J,"MAGJROUTE",1:N)
"RTN","MAGJRT",148,0)
 ;          Then error messages for each exam if applicable
"RTN","MAGJRT",149,0)
 ;          
"RTN","MAGJRT",150,0)
 ; MAGGRY holds $NA reference to ^TMP where Broker return message is assembled;
"RTN","MAGJRT",151,0)
 ;   all references to MAGGRY use subscript indirection
"RTN","MAGJRT",152,0)
 ;
"RTN","MAGJRT",153,0)
 ;        MAGS = # Images stored for the case
"RTN","MAGJRT",154,0)
 ;  MAGS(1:n) = 1/0 ^ FULL/BIG ^ Mod ^ ien ^ Series ^ Routed-to Locations
"RTN","MAGJRT",155,0)
 ;              (1=Image is on Magnetic Disk)
"RTN","MAGJRT",156,0)
 ;
"RTN","MAGJRT",157,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJRT"
"RTN","MAGJRT",158,0)
 N IEXAM,RTLOC,RTPRI,RARPT,IDATA,REPLY,CT,MAGS,STARTNOD,NEXAM,NOGO
"RTN","MAGJRT",159,0)
 N IMAG,MAGLST,MAGIEN
"RTN","MAGJRT",160,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJRT",161,0)
 K NOGO S NOGO(0)=0  ; array for reply for exams unable to process
"RTN","MAGJRT",162,0)
 S MAGLST="MAGJROUTE",CT=0,STARTNOD=0,NEXAM=0
"RTN","MAGJRT",163,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY ; assign MAGGRY value
"RTN","MAGJRT",164,0)
 S IDATA=""
"RTN","MAGJRT",165,0)
 F  S IDATA=$O(DATA(IDATA)) Q:IDATA=""  D
"RTN","MAGJRT",166,0)
 . S X=DATA(IDATA),DATA=$P(X,"|",2),X=$P(X,"|"),RTLOC=$P(X,U),RTPRI=$P(X,U,2)
"RTN","MAGJRT",167,0)
 . I 'RTLOC Q  ; routing cancelled for this exam
"RTN","MAGJRT",168,0)
 . S RARPT=$P(DATA,U,4)  I 'RARPT D  Q
"RTN","MAGJRT",169,0)
 . . S NOGO(0)=NOGO(0)+1,NOGO(NOGO(0))="Exam not queued: Missing exam pointer information for exam ("_DATA(IDATA)_")"
"RTN","MAGJRT",170,0)
 . S X=$$JBFETCH^MAGJUTL2(RARPT,.MAGS)
"RTN","MAGJRT",171,0)
 . F IMAG=1:1 S MAGIEN=$P($G(MAGS(IMAG)),U,4) Q:MAGIEN=""  D
"RTN","MAGJRT",172,0)
 . . D SEND^MAGBRTUT(MAGIEN,RTLOC,RTPRI,1) ; 1=dos file copy
"RTN","MAGJRT",173,0)
 . I IMAG>1 S NEXAM=NEXAM+1
"RTN","MAGJRT",174,0)
 . E  S NOGO(0)=NOGO(0)+1,NOGO(NOGO(0))="Exam not queued: No images found ("_DATA(IDATA)_")"
"RTN","MAGJRT",175,0)
 I NEXAM S REPLY=1_"~"_NEXAM_" Exam"_$S(NEXAM-1:"s",1:"")_" were queued to be routed."
"RTN","MAGJRT",176,0)
 E  S REPLY="0~Unable to queue any exams for routing."
"RTN","MAGJRT",177,0)
RTEXAMZ I NOGO(0) D NOGO("Queued",.CT)
"RTN","MAGJRT",178,0)
 S @MAGGRY@(0)=$S(NOGO(0):CT,1:0)_U_REPLY
"RTN","MAGJRT",179,0)
 Q
"RTN","MAGJRT",180,0)
 ;
"RTN","MAGJRT",181,0)
END Q
"RTN","MAGJRT",182,0)
 ;
"RTN","MAGJUPD1")
0^3^B55284332
"RTN","MAGJUPD1",1,0)
MAGJUPD1 ;WOIFO/JHC VistARad Update Exam Status ; 29 Jul 2003  10:02 AM
"RTN","MAGJUPD1",2,0)
 ;;3.0;IMAGING;**16,22**;Jul 29, 2003
"RTN","MAGJUPD1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUPD1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUPD1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUPD1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUPD1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUPD1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUPD1",10,0)
 ;; |                                                               |
"RTN","MAGJUPD1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUPD1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUPD1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUPD1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUPD1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUPD1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD1",17,0)
 ;;
"RTN","MAGJUPD1",18,0)
 Q
"RTN","MAGJUPD1",19,0)
 ; Subroutines for RPC's to update Exam Status to "Interpreted", and
"RTN","MAGJUPD1",20,0)
 ;   for "Closing" a case that is open on the DX Workstation
"RTN","MAGJUPD1",21,0)
 ;
"RTN","MAGJUPD1",22,0)
ERR N ERR S ERR=$$EC^%ZOSV S MAGGRY(0)="0^Server Program Error: "_ERR
"RTN","MAGJUPD1",23,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJUPD1",24,0)
 Q:$Q 1  Q
"RTN","MAGJUPD1",25,0)
STATUS(MAGGRY,DATA) ; Update Exam Status for case to "Interpreted" (or
"RTN","MAGJUPD1",26,0)
 ;   equivalent value); optionally update the Diagnostic Code, if passed;
"RTN","MAGJUPD1",27,0)
 ;   also, Close the case
"RTN","MAGJUPD1",28,0)
 ; Note: this subroutine will only update the Exam Status if the current
"RTN","MAGJUPD1",29,0)
 ;       Status value is "Examined"
"RTN","MAGJUPD1",30,0)
 ; This routine defines variables needed for calling the Radiology
"RTN","MAGJUPD1",31,0)
 ; package routine UP1^RAUTL1, for filing Exam Status updates
"RTN","MAGJUPD1",32,0)
 ; Adapted from the following program:
"RTN","MAGJUPD1",33,0)
 ;MAGKEXC ;WASH ISC/SRR - EXAMINATION COMPLETE ;11/4/93  08:07 [ 11/06/93 7:42 AM]
"RTN","MAGJUPD1",34,0)
 ;
"RTN","MAGJUPD1",35,0)
 ; DATA = UPDFLAG ^ RADFN ^ RADTI ^ RACNI ^ RARPT ^ DXCODE
"RTN","MAGJUPD1",36,0)
 ;   UPDFLAG = 1/0 -- 1 to perform update; else no update made
"RTN","MAGJUPD1",37,0)
 ;   RARPT = ptr to Rad Exam Report file
"RTN","MAGJUPD1",38,0)
 ;   RADFN,RADTI,RACNI = pointers to Rad Patient File for the exam
"RTN","MAGJUPD1",39,0)
 ;   DXCODE = Diagnostic Code 
"RTN","MAGJUPD1",40,0)
 ;   MAGGRY = return results in @MAGGRY
"RTN","MAGJUPD1",41,0)
 ;
"RTN","MAGJUPD1",42,0)
 ;
"RTN","MAGJUPD1",43,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJUPD1"
"RTN","MAGJUPD1",44,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUPD1",45,0)
 N RARPT,RADFN,RADTI,RACNI,RAEXT,RACNE,RADTE,RAINT,RAMDV
"RTN","MAGJUPD1",46,0)
 N RAONLINE,ZTQUEUED,RAOR,RASN,RASTI,RAPRTSET,LOCKDATA
"RTN","MAGJUPD1",47,0)
 N DXCODE,MAGRET,REPLY,UPDFLAG,RADATA,RIST,MAGPSET,RACNILST,ACNLST
"RTN","MAGJUPD1",48,0)
 S UPDFLAG=$P(DATA,U),RADFN=$P(DATA,U,2),RADTI=$P(DATA,U,3),RACNI=$P(DATA,U,4),RARPT=$P(DATA,U,5),DXCODE=$P(DATA,U,6)
"RTN","MAGJUPD1",49,0)
 S REPLY="0^4~Closing case with"_$S(UPDFLAG:"",1:" NO")_" Update"
"RTN","MAGJUPD1",50,0)
 S RAPRTSET=0
"RTN","MAGJUPD1",51,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJUPD1",52,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RARPT_")" G STATUSZ
"RTN","MAGJUPD1",53,0)
 D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJUPD1",54,0)
 I 'MAGRET S REPLY="0^4~Current Case Not Accessible for Updating" G STATUSZ
"RTN","MAGJUPD1",55,0)
   ; 1  RADFN   RADTI    RACNI   RANME   RASSN    <--Contents of RADATA,
"RTN","MAGJUPD1",56,0)
   ; 6  RADATE  RADTE    RACN    RAPRC   RARPT         from GETEXAM
"RTN","MAGJUPD1",57,0)
   ;11  RAST    DAYCASE  RAELOC  RASTP   RASTORD
"RTN","MAGJUPD1",58,0)
   ;16  RADTPRT
"RTN","MAGJUPD1",59,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1))
"RTN","MAGJUPD1",60,0)
 S RAEXT=$P(RADATA,U,12),RACNE=$P(RAEXT,"-",2),RADTE=$P(RADATA,U,7)
"RTN","MAGJUPD1",61,0)
 S RAINT=RADTI_"-"_RACNI
"RTN","MAGJUPD1",62,0)
 D CLOSE(.X,RADFN_U_RADTI_U_RACNI_U_U_1,.LOCKDATA) ; unlock the case
"RTN","MAGJUPD1",63,0)
 I 'X S REPLY=X G STATUSZ  ; proceed only if case was locked by this user
"RTN","MAGJUPD1",64,0)
 I 'UPDFLAG S REPLY="0^1~Case #"_RAEXT_" Closed; No Status Update performed" G STATUSZ
"RTN","MAGJUPD1",65,0)
 S RIST=$P(X,U,2) ; CLOSE reports back the type of radiologist
"RTN","MAGJUPD1",66,0)
 ; now we know this user had locked the case, & wants to do Status update
"RTN","MAGJUPD1",67,0)
 D EN2^RAUTL20(.MAGPSET)  ; get info re rad PrintSet
"RTN","MAGJUPD1",68,0)
 ;
"RTN","MAGJUPD1",69,0)
 ; IF exam is not "Examined", and not "Cancelled" and past "Waiting"
"RTN","MAGJUPD1",70,0)
 ;    then assume it has already been updated via another pathway,
"RTN","MAGJUPD1",71,0)
 ;    either as printset member (via code at tag PRTSET, below),
"RTN","MAGJUPD1",72,0)
 ;    or from a voice-dictation or terminal session by the radiologist
"RTN","MAGJUPD1",73,0)
 ;    For these cases, no warning msg is sent
"RTN","MAGJUPD1",74,0)
 ; Else, update not allowed, so give warning msg
"RTN","MAGJUPD1",75,0)
 ; Note that when the Exam was OPENed, it must have had status "Examined"
"RTN","MAGJUPD1",76,0)
 I '$D(^RA(72,"AVC","E",$P(RADATA,U,11))) D  G STATUSX:(+$P(REPLY,U,2)=1),STATUSZ  ; Current Status MUST be "Examined" Category
"RTN","MAGJUPD1",77,0)
 . I $P(RADATA,U,15)>2 D  ; assume update has otherwise been done
"RTN","MAGJUPD1",78,0)
 .. S RACNILST=RACNI,RASTI=$P(RADATA,U,11) ; need for code at tag statusx
"RTN","MAGJUPD1",79,0)
 .. I RAPRTSET S REPLY="0^1~Printset Exams with Case #"_RAEXT_" have been updated"
"RTN","MAGJUPD1",80,0)
 .. E  S REPLY="0^1~No Update done for Case #"_RAEXT_"--current status is "_$P(RADATA,U,14)
"RTN","MAGJUPD1",81,0)
 . E  S REPLY="0^3~No Update Allowed for Case #"_RAEXT_"--current status is "_$P(RADATA,U,14)
"RTN","MAGJUPD1",82,0)
 ;
"RTN","MAGJUPD1",83,0)
 ; now ready to update exam status
"RTN","MAGJUPD1",84,0)
 S RAMDV=$P(^RADPT(RADFN,"DT",RADTI,0),U,3)
"RTN","MAGJUPD1",85,0)
 S RAMDV=$TR(^RA(79,RAMDV,.1),"YyNn","1100")
"RTN","MAGJUPD1",86,0)
 ;
"RTN","MAGJUPD1",87,0)
 ; Update interpreting radiologist field in Rad file
"RTN","MAGJUPD1",88,0)
 I RIST D  I RACNILST="" G STATUSZ
"RTN","MAGJUPD1",89,0)
 . N SAVRACNI S RACNILST=""
"RTN","MAGJUPD1",90,0)
PRTSET . ;  if exam is part of Rad Print-Set, then update all exams of printset
"RTN","MAGJUPD1",91,0)
 . I RAPRTSET D
"RTN","MAGJUPD1",92,0)
 .. S ACNLST="",SAVRACNI=RACNI,X=0
"RTN","MAGJUPD1",93,0)
 .. F I=0:1 S X=$O(MAGPSET(X)) Q:'X  S RACNILST=RACNILST_$S(I:U,1:"")_X S:RACNE'=+MAGPSET(X) ACNLST=ACNLST_", "_"-"_+MAGPSET(X)
"RTN","MAGJUPD1",94,0)
 . E  S RACNILST=RACNI
"RTN","MAGJUPD1",95,0)
 . F I=1:1:$L(RACNILST,U) S RACNI=$P(RACNILST,U,I) I RACNI D  I RACNILST="" Q
"RTN","MAGJUPD1",96,0)
 .. S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","MAGJUPD1",97,0)
 .. D STUFPHY^RARIC1(DUZ,RIST,.RTN)
"RTN","MAGJUPD1",98,0)
 .. I 'RTN S REPLY="0^4~Unable to update Interpreting Radiologist: "_RTN_"." S RACNILST=""
"RTN","MAGJUPD1",99,0)
 . I RAPRTSET S RACNI=SAVRACNI
"RTN","MAGJUPD1",100,0)
 S RAONLINE=1,ZTQUEUED=1 D UP1^RAUTL1   ; Suppress msgs, do Status update
"RTN","MAGJUPD1",101,0)
 ;<*> K RAONLINE,ZTQUEUED D UP1^RAUTL1 ; <*> Testing Only: ENABLE msgs
"RTN","MAGJUPD1",102,0)
 I RAOR<0 S REPLY="0^3~Exam Status for Case #"_RAEXT_" CANNOT be updated; current status remains: "_$S($G(RASN)]"":RASN,1:"Unknown")
"RTN","MAGJUPD1",103,0)
 I  G STATUSZ
"RTN","MAGJUPD1",104,0)
 ;
"RTN","MAGJUPD1",105,0)
 S REPLY="0^1~For Case #"_$S($G(ACNLST)]"":"s ",1:"")_RAEXT_$S(RAPRTSET:ACNLST,1:"")_", Exam Status updated to "_RASN
"RTN","MAGJUPD1",106,0)
 ;
"RTN","MAGJUPD1",107,0)
STATUSX ; Newly Interpreted exam:
"RTN","MAGJUPD1",108,0)
 ; Log the Interpreted event
"RTN","MAGJUPD1",109,0)
 D LOG^MAGJUTL3("VR-INT",RADFN,$P(LOCKDATA,U,5),$P(LOCKDATA,U,6),$P(LOCKDATA,U,7))
"RTN","MAGJUPD1",110,0)
 ; Update Recent Exams List
"RTN","MAGJUPD1",111,0)
 G STATUSZ:'$P(^MAG(2006.69,1,0),U,8)  ; no bkgnd compile enabled
"RTN","MAGJUPD1",112,0)
 L +^XTMP("MAGJ2","RECENT"):10
"RTN","MAGJUPD1",113,0)
 E  G STATUSZ
"RTN","MAGJUPD1",114,0)
 N INDX F I=1:1:$L(RACNILST,U) S RACNI=$P(RACNILST,U,I) I RACNI D
"RTN","MAGJUPD1",115,0)
 . S INDX=+$G(^XTMP("MAGJ2","RECENT",0))+1,$P(^(0),U)=INDX,^(INDX)=RADFN_U_RADTI_U_RACNI_U_RASTI
"RTN","MAGJUPD1",116,0)
 L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJUPD1",117,0)
STATUSZ ;
"RTN","MAGJUPD1",118,0)
 S MAGGRY(0)=REPLY
"RTN","MAGJUPD1",119,0)
 K ^TMP($J,"MAGRAEX"),^("RAE1")
"RTN","MAGJUPD1",120,0)
 Q
"RTN","MAGJUPD1",121,0)
 ;
"RTN","MAGJUPD1",122,0)
CLOSE(MAGGRY,DATA,LOCKDATA) ; Close/unlock a case
"RTN","MAGJUPD1",123,0)
 ; DATA    = DFN ^ DTI ^ CNI ^ RPT ^ UPDFLAG
"RTN","MAGJUPD1",124,0)
 ;
"RTN","MAGJUPD1",125,0)
 ;       RPT = ptr to Rad Exam Report file
"RTN","MAGJUPD1",126,0)
 ;      DFN,DTI,CNI = pointers to Rad Patient File for the exam
"RTN","MAGJUPD1",127,0)
 ;   UPDFLAG = 1/0 -- 1 to indicate CLOSE was called from subroutine
"RTN","MAGJUPD1",128,0)
 ;                    STATUS, above (which has already called GETEXAM)
"RTN","MAGJUPD1",129,0)
 ;    MAGGRY = return results of the Close in @MAGGRY
"RTN","MAGJUPD1",130,0)
 ; This subroutine may be called directly (to close a case without
"RTN","MAGJUPD1",131,0)
 ; doing a status update), or is called from tag STATUS, above, when
"RTN","MAGJUPD1",132,0)
 ; also doing a status update
"RTN","MAGJUPD1",133,0)
 ;
"RTN","MAGJUPD1",134,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJUPD1"
"RTN","MAGJUPD1",135,0)
 N RPT,DFN,DTI,CNI,MAGRET,REPLY,RARPT,UPDFLAG,RIST,DAYCASE,NLOCKS
"RTN","MAGJUPD1",136,0)
 S DFN=$P(DATA,U),DTI=$P(DATA,U,2),CNI=$P(DATA,U,3),RPT=$P(DATA,U,4),UPDFLAG=$P(DATA,U,5)
"RTN","MAGJUPD1",137,0)
 S LOCKDATA=""
"RTN","MAGJUPD1",138,0)
 I $P($G(^MAG(2006.69,1,0)),U,4)
"RTN","MAGJUPD1",139,0)
 E  S REPLY=$S(UPDFLAG:"0^3~Updates not allowed at this site--no action taken",1:"") G CLOSEZ   ;   Status Update NOT Enabled
"RTN","MAGJUPD1",140,0)
 S RIST=+MAGJOB("USER",1) I RIST
"RTN","MAGJUPD1",141,0)
 E  S REPLY=$S(UPDFLAG:"0^3~Update allowed only by a radiologist--no action taken",1:"") G CLOSEZ  ; need only unlock a radiologist
"RTN","MAGJUPD1",142,0)
 I DFN,DTI,CNI
"RTN","MAGJUPD1",143,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RPT_")--no action taken" G CLOSEZ
"RTN","MAGJUPD1",144,0)
 ;
"RTN","MAGJUPD1",145,0)
 I 'UPDFLAG N RADATA D  I 'MAGRET G CLOSEZ
"RTN","MAGJUPD1",146,0)
 . D GETEXAM2^MAGJUTL1(DFN,DTI,CNI,0,.MAGRET)
"RTN","MAGJUPD1",147,0)
 . I 'MAGRET S REPLY="0^4~No Current Case accessible to close--no action taken"
"RTN","MAGJUPD1",148,0)
 . E  S RADATA=$G(^TMP($J,"MAGRAEX",1,1))
"RTN","MAGJUPD1",149,0)
 S RARPT=$P(RADATA,U,10),DAYCASE=$P(RADATA,U,12)
"RTN","MAGJUPD1",150,0)
 I RARPT,DAYCASE
"RTN","MAGJUPD1",151,0)
 E  S REPLY="0^4~Current Case not accessible to close--no action taken" G CLOSEZ
"RTN","MAGJUPD1",152,0)
 S LOCKDATA=$G(^XTMP("MAGJ","LOCK",RARPT))
"RTN","MAGJUPD1",153,0)
 I DUZ'=+LOCKDATA S X=+LOCKDATA D  S LOCKDATA="" G CLOSEZ
"RTN","MAGJUPD1",154,0)
 . I UPDFLAG S REPLY="0^3~Case #"_DAYCASE_$S(X:" locked by "_$$USERINF^MAGJUTL3(X,.01),1:" not locked by "_$P(MAGJOB("USER",1),U,2))_"--No Status update performed"
"RTN","MAGJUPD1",155,0)
 . E  S REPLY="0^1~ "  ; case wasn't opened by this R'ist; nothing to do
"RTN","MAGJUPD1",156,0)
 S NLOCKS=+$G(^XTMP("MAGJ","LOCK",RARPT,DAYCASE))
"RTN","MAGJUPD1",157,0)
 I NLOCKS D  ; w/ incremental lock, is possible to have >1 lock applied
"RTN","MAGJUPD1",158,0)
 . K ^XTMP("MAGJ","LOCK",RARPT,DAYCASE)
"RTN","MAGJUPD1",159,0)
 . I $D(^XTMP("MAGJ","LOCK",RARPT))=1 K ^XTMP("MAGJ","LOCK",RARPT)
"RTN","MAGJUPD1",160,0)
 . F I=1:1:NLOCKS L -^XTMP("MAGJ","LOCK",RARPT)
"RTN","MAGJUPD1",161,0)
 I UPDFLAG,NLOCKS S REPLY=1_U_RIST
"RTN","MAGJUPD1",162,0)
 E  S REPLY="0^1~Case #"_DAYCASE_" Unlocked--No Status Update performed."
"RTN","MAGJUPD1",163,0)
CLOSEZ S MAGGRY=REPLY
"RTN","MAGJUPD1",164,0)
 Q
"RTN","MAGJUPD1",165,0)
END Q  ;
"RTN","MAGJUTL1")
0^14^B37444535
"RTN","MAGJUTL1",1,0)
MAGJUTL1 ;WIRMFO/JHC VistARad subroutines for RPC calls ; 29 Jul 2003  10:03 AM
"RTN","MAGJUTL1",2,0)
 ;;3.0;IMAGING;**22**;Jul 29, 2003
"RTN","MAGJUTL1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL1",10,0)
 ;; |                                                               |
"RTN","MAGJUTL1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL1",17,0)
 ;;
"RTN","MAGJUTL1",18,0)
 Q
"RTN","MAGJUTL1",19,0)
 ;<*>Notes on possible changes to ^RAO7PC1/1A for fetching rad pkg data:
"RTN","MAGJUTL1",20,0)
 ; 1) Return also: Exam Status IEN, Order Request Urgency, & Pre-Op Date
"RTN","MAGJUTL1",21,0)
 ; 2) Allow to retrieve one specific exam; e.g. modify SETDATA^RAO7PC1A
"RTN","MAGJUTL1",22,0)
 ;    to act as a true subrtn, W/ params for RADFN, RADTI, & RACNI--if
"RTN","MAGJUTL1",23,0)
 ;    passed, then only the one exam would be returned
"RTN","MAGJUTL1",24,0)
 ;
"RTN","MAGJUTL1",25,0)
GETEXAM3(DFN,BEGDT,ENDT,MAGRACNT,MAGRET,MORE,LIMEXAMS) ; Get data for all exams for a
"RTN","MAGJUTL1",26,0)
 ; pt within a date range (default all dates); limit returned list to LIMEXAMS
"RTN","MAGJUTL1",27,0)
 ; Input:
"RTN","MAGJUTL1",28,0)
 ;      DFN -- Patient DFN
"RTN","MAGJUTL1",29,0)
 ;    BEGDT -- Opt, earliest date desired
"RTN","MAGJUTL1",30,0)
 ;     ENDT -- Opt, latest date desired
"RTN","MAGJUTL1",31,0)
 ; MAGRACNT -- Opt, pass by ref to init counter to ref return data in ^TMP (see GETEXSET)
"RTN","MAGJUTL1",32,0)
 ; LIMEXAMS -- Opt, limit # exams to return
"RTN","MAGJUTL1",33,0)
 ; Return:
"RTN","MAGJUTL1",34,0)
 ; MAGRACNT -- highest counter for return data
"RTN","MAGJUTL1",35,0)
 ;   MAGRET -- 1/0: exam was/not found
"RTN","MAGJUTL1",36,0)
 ;     MORE -- date before which more exams exist for pt
"RTN","MAGJUTL1",37,0)
 ;     ^TMP -- data returned (see GETEXSET)
"RTN","MAGJUTL1",38,0)
 ;
"RTN","MAGJUTL1",39,0)
 I '$D(DT) S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL1",40,0)
 N MORECHK
"RTN","MAGJUTL1",41,0)
 S LIMEXAMS=+$G(LIMEXAMS)
"RTN","MAGJUTL1",42,0)
 S MORECHK=BEGDT!LIMEXAMS
"RTN","MAGJUTL1",43,0)
 S:$G(BEGDT)="" BEGDT=2010101 S:$G(ENDT)="" ENDT=DT ; default all dates
"RTN","MAGJUTL1",44,0)
 S MAGRACNT=+$G(MAGRACNT),MAGRET=0,MORE=0  ; Init return data
"RTN","MAGJUTL1",45,0)
 I BEGDT>ENDT S X=ENDT,ENDT=BEGDT,BEGDT=X
"RTN","MAGJUTL1",46,0)
 I '(DFN&BEGDT&ENDT) Q
"RTN","MAGJUTL1",47,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEGDT,ENDT,LIMEXAMS)
"RTN","MAGJUTL1",48,0)
 N EXID S EXID=0
"RTN","MAGJUTL1",49,0)
 F MAGRET=0:1 S EXID=$O(^TMP($J,"RAE1",DFN,EXID)) Q:'EXID  D GETEXSET(DFN,EXID,"")
"RTN","MAGJUTL1",50,0)
 K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",51,0)
 I 'MORECHK Q  ; all done; else indicate if pt has more exams
"RTN","MAGJUTL1",52,0)
 N DTI,CNI,STS
"RTN","MAGJUTL1",53,0)
 I 'MAGRET S DTI=9999999.9999-DT,CNI=0 ; no exam found in orig dt range
"RTN","MAGJUTL1",54,0)
 E  S X=^TMP($J,"MAGRAEX",MAGRACNT,1),DTI=$P(X,U,2),CNI=$P(X,U,3) ; last exam processed
"RTN","MAGJUTL1",55,0)
 ; loop thru addl exams til find one that is NOT Cancelled
"RTN","MAGJUTL1",56,0)
MORE1 F  S CNI=$O(^RADPT(DFN,"DT",DTI,"P",CNI)) Q:'CNI  S STS=$P($G(^(CNI,0)),U,3) I STS]"" D  Q:MORE
"RTN","MAGJUTL1",57,0)
 . S MORE='($P($G(^RA(72,STS,0)),U,3)=0) ; True if sts is NOT Canc
"RTN","MAGJUTL1",58,0)
 I 'MORE S DTI=$O(^RADPT(DFN,"DT",DTI)),CNI=0 G MORE1:DTI
"RTN","MAGJUTL1",59,0)
 Q
"RTN","MAGJUTL1",60,0)
 ;
"RTN","MAGJUTL1",61,0)
GETEXAM2(DFN,DTI,CNI,MAGRACNT,MAGRET) ; Fetch data for one exam
"RTN","MAGJUTL1",62,0)
 ;Input:
"RTN","MAGJUTL1",63,0)
 ; DFN -- Pt DFN
"RTN","MAGJUTL1",64,0)
 ; DTI -- Internal Date pointer to Rad exam
"RTN","MAGJUTL1",65,0)
 ; CNI -- Case pointer to Rad exam
"RTN","MAGJUTL1",66,0)
 ; MAGRACNT -- Opt, pass by ref to init counter for return data in ^TMP (see GETEXSET)
"RTN","MAGJUTL1",67,0)
 ; Return:
"RTN","MAGJUTL1",68,0)
 ; MAGRACNT -- highest counter for return data
"RTN","MAGJUTL1",69,0)
 ;   MAGRET -- 1/0: exam was/not found
"RTN","MAGJUTL1",70,0)
 ;     ^TMP -- data returned (see GETEXSET)
"RTN","MAGJUTL1",71,0)
 ;
"RTN","MAGJUTL1",72,0)
 ; This subroutine calls RAO7PC1A directly to fetch exam data
"RTN","MAGJUTL1",73,0)
 ; which is returned in ^TMP($J,"RAE1",DFN,DTI_"-"_CNI).
"RTN","MAGJUTL1",74,0)
 ; RAO7PC1A currently returns ALL exams filed under one DTI,
"RTN","MAGJUTL1",75,0)
 ; but this subroutine returns the single exam for the input DTI, CNI
"RTN","MAGJUTL1",76,0)
 ;
"RTN","MAGJUTL1",77,0)
 N RADFN,RACNT,RAIBDT,RAEXN,RAXIT  ; Vars input to RAO7PC1A
"RTN","MAGJUTL1",78,0)
 S RADFN=DFN,RACNT=0,RAIBDT=DTI,RAEXN=0,RAXIT=0
"RTN","MAGJUTL1",79,0)
 ; other Vars set by RAO7PC1A:
"RTN","MAGJUTL1",80,0)
 N RABNOR,RACSE,RADIAG,RANO,RAPRC,RAREX,RARPT,RARPTST,RASTNM,RAXAM,RAXID
"RTN","MAGJUTL1",81,0)
 N RABNORMR,RACPT
"RTN","MAGJUTL1",82,0)
 S MAGRACNT=+$G(MAGRACNT)
"RTN","MAGJUTL1",83,0)
 K ^TMP($J,"RAE1") D SETDATA^RAO7PC1A
"RTN","MAGJUTL1",84,0)
 S MAGRET=RACNT Q:'RACNT     ; no exams found
"RTN","MAGJUTL1",85,0)
 D GETEXSET(DFN,DTI_"-"_CNI,.X)
"RTN","MAGJUTL1",86,0)
 I 'X S MAGRET=0   ; no exam for this CNI
"RTN","MAGJUTL1",87,0)
 K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",88,0)
 Q
"RTN","MAGJUTL1",89,0)
 ;
"RTN","MAGJUTL1",90,0)
GETEXSET(RADFN,EXID,MAGRET) ; 
"RTN","MAGJUTL1",91,0)
 ; Used by GETEXAM* subroutines above to set up rad data for vrad
"RTN","MAGJUTL1",92,0)
 ; Input:
"RTN","MAGJUTL1",93,0)
 ;  RADFN -- Pt DFN
"RTN","MAGJUTL1",94,0)
 ;  EXID --- RADTI_"-"_RACNI, pointers to Rad exam
"RTN","MAGJUTL1",95,0)
 ; Output:
"RTN","MAGJUTL1",96,0)
 ;  MAGRET- 1/0: an exam was/was not filed
"RTN","MAGJUTL1",97,0)
 ;  ^TMP($J,"MAGRAEX",MAGRACNT)=Data String (see code at end)
"RTN","MAGJUTL1",98,0)
 ;  MAGRACNT described in above subroutines
"RTN","MAGJUTL1",99,0)
 ;
"RTN","MAGJUTL1",100,0)
 N RACN,RACNI,RADATA,RADATE,RADTE,RADTI,RADTPRT,RAELOC,RANME
"RTN","MAGJUTL1",101,0)
 N RAPRC,RARPT,RASSN,RAST,RASTORD,RASTP,RASTNM,RACPT,IMTYPABB,PROCMOD
"RTN","MAGJUTL1",102,0)
 N DAYCASE,REQLOC,REQLOCN,REQLOCA,REQLOCT,RIST,RIST1,RIST2,COMPLIC,RADIV,RISTISME
"RTN","MAGJUTL1",103,0)
 S MAGRET=0,RADTI=$P(EXID,"-"),RACNI=$P(EXID,"-",2)
"RTN","MAGJUTL1",104,0)
 Q:'(RADTI&RACNI)
"RTN","MAGJUTL1",105,0)
 S RADIV=""
"RTN","MAGJUTL1",106,0)
 S RADATA=$G(^TMP($J,"RAE1",RADFN,EXID))
"RTN","MAGJUTL1",107,0)
 Q:RADATA=""        ;  no exam for this EXID
"RTN","MAGJUTL1",108,0)
 S RARPT=$P(RADATA,U,5)
"RTN","MAGJUTL1",109,0)
 S X=$P(RADATA,U,6),RASTORD=$P(X,"~"),RASTNM=$P(X,"~",2)
"RTN","MAGJUTL1",110,0)
 S X=^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),COMPLIC=$D(^("COMP")),PROCMOD=$D(^("M"))
"RTN","MAGJUTL1",111,0)
 S RAST=$P(X,U,3),REQLOC=$P(X,U,22),RIST1=$P(X,U,12),RIST2=$P(X,U,15),COMPLIC=$P(X,U,16)_"~"_COMPLIC
"RTN","MAGJUTL1",112,0)
 I 'PROCMOD S PROCMOD=""
"RTN","MAGJUTL1",113,0)
 E  D
"RTN","MAGJUTL1",114,0)
 . N IEN S IEN=0,PROCMOD=""
"RTN","MAGJUTL1",115,0)
 . F  S IEN=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",IEN)) Q:'IEN  S X=$P($G(^(IEN,0)),U) I X D
"RTN","MAGJUTL1",116,0)
 . . S X=$P($G(^RAMIS(71.2,X,0)),U) Q:X=""
"RTN","MAGJUTL1",117,0)
 . . S PROCMOD=PROCMOD_$S(PROCMOD="":"",1:";")_X
"RTN","MAGJUTL1",118,0)
 S RADIV=$P(^RADPT(RADFN,"DT",RADTI,0),U,3)
"RTN","MAGJUTL1",119,0)
 I 'REQLOC S (REQLOCN,REQLOCT,REQLOCA)=""
"RTN","MAGJUTL1",120,0)
 E  D
"RTN","MAGJUTL1",121,0)
 . S X=$G(^SC(REQLOC,0)),REQLOCN=$P(X,U),REQLOCA=$P(X,U,2)
"RTN","MAGJUTL1",122,0)
 . S:REQLOCA="" REQLOCA=REQLOCN
"RTN","MAGJUTL1",123,0)
 . S DIC="44",DR="2",DA=REQLOC,DIQ="REQLOCT" D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","MAGJUTL1",124,0)
 . S REQLOCT=REQLOCT(44,REQLOC,2)
"RTN","MAGJUTL1",125,0)
 S (RIST,RISTISME)="" I RIST1!RIST2 D  ; Interp Rist(s)
"RTN","MAGJUTL1",126,0)
 . I RIST1 S RISTISME=RIST1=DUZ S RIST=$$USERINF^MAGJUTL3(RIST1,1)
"RTN","MAGJUTL1",127,0)
 . I RIST2 S:'RISTISME RISTISME=RIST2=DUZ S RIST2=$$USERINF^MAGJUTL3(RIST2,1)
"RTN","MAGJUTL1",128,0)
 . I RIST]"" S RIST=RIST_$S(RIST2]"":"/"_RIST2,1:"")
"RTN","MAGJUTL1",129,0)
 . E  S RIST=RIST2
"RTN","MAGJUTL1",130,0)
 S RADTE=9999999.9999-RADTI,(RADTPRT,Y)=RADTE D D^RAUTL S RADATE=Y
"RTN","MAGJUTL1",131,0)
 S RADTPRT=$E(RADTPRT,4,5)_"/"_$E(RADTPRT,6,7)_"/"_$E(RADTPRT,2,3)
"RTN","MAGJUTL1",132,0)
 S RAPRC=$E($P(RADATA,U),1,40),RACN=$P(RADATA,U,2),RAELOC=$P(RADATA,U,7)
"RTN","MAGJUTL1",133,0)
 S IMTYPABB=$P($P(RADATA,U,8),"~"),RACPT=$P(RADATA,U,10)
"RTN","MAGJUTL1",134,0)
 S DAYCASE=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN
"RTN","MAGJUTL1",135,0)
 S RASTP=RASTNM
"RTN","MAGJUTL1",136,0)
 S RANME=$P(^DPT(RADFN,0),U)
"RTN","MAGJUTL1",137,0)
 S DFN=RADFN D PID^VADPT6 S RASSN=$S(VAERR:"Unknown",1:VA("PID"))
"RTN","MAGJUTL1",138,0)
 K VA("PID"),VA("BID"),VAERR
"RTN","MAGJUTL1",139,0)
 S MAGRACNT=$G(MAGRACNT)+1
"RTN","MAGJUTL1",140,0)
 I MAGRACNT=1 K ^TMP($J,"MAGRAEX")
"RTN","MAGJUTL1",141,0)
 ; Return Data:                              2               4                        6              8                     10             12              14               16                 18                    20
"RTN","MAGJUTL1",142,0)
 S ^TMP($J,"MAGRAEX",MAGRACNT,1)=RADFN_U_RADTI_U_RACNI_U_$E(RANME,1,30)_U_RASSN_U_RADATE_U_RADTE_U_RACN_U_$E(RAPRC,1,35)_U_RARPT_U_RAST_U_DAYCASE_U_RAELOC_U_RASTP_U_RASTORD_U_RADTPRT_U_RACPT_U_IMTYPABB
"RTN","MAGJUTL1",143,0)
 S ^TMP($J,"MAGRAEX",MAGRACNT,2)=REQLOCA_U_$E(REQLOCN,1,25)_U_RIST_U_COMPLIC_U_RADIV_U_$P($$IMGSIT(RADIV),U,2)_U_RISTISME_U_PROCMOD_U_REQLOCT
"RTN","MAGJUTL1",144,0)
 S MAGRET=1
"RTN","MAGJUTL1",145,0)
 Q
"RTN","MAGJUTL1",146,0)
 ;
"RTN","MAGJUTL1",147,0)
IMGSIT(X) ; Return Imaging Site code for input Division
"RTN","MAGJUTL1",148,0)
 ; From 2006.1:  IEN ^ Site Code
"RTN","MAGJUTL1",149,0)
 I X]"" D
"RTN","MAGJUTL1",150,0)
 . N IEN I $D(^MAG(2006.1,"B",X)) S IEN=$O(^(X,"")) I IEN
"RTN","MAGJUTL1",151,0)
 . E  S X="" Q
"RTN","MAGJUTL1",152,0)
 . S X=IEN_U_$P(^MAG(2006.1,IEN,0),U,9)
"RTN","MAGJUTL1",153,0)
 Q X
"RTN","MAGJUTL1",154,0)
 ;
"RTN","MAGJUTL1",155,0)
END Q  ;
"RTN","MAGJUTL3")
0^4^B36726723
"RTN","MAGJUTL3",1,0)
MAGJUTL3 ;WIRMFO/JHC VistRad subroutines for RPC calls ; 29 Jul 2003  10:03 AM
"RTN","MAGJUTL3",2,0)
 ;;3.0;IMAGING;**16,9,22**;Jul 29, 2003
"RTN","MAGJUTL3",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL3",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL3",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL3",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL3",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL3",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL3",10,0)
 ;; |                                                               |
"RTN","MAGJUTL3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",17,0)
 ;;
"RTN","MAGJUTL3",18,0)
 Q
"RTN","MAGJUTL3",19,0)
 ;Entry points:
"RTN","MAGJUTL3",20,0)
 ;  LISTINF -- send Custom Exam List data to Server
"RTN","MAGJUTL3",21,0)
 ;  LOGOFF -- update session file at logoff
"RTN","MAGJUTL3",22,0)
 ;  CACHEQ -- At logon, assorted initializations and sets up assorted data for the session
"RTN","MAGJUTL3",23,0)
 ;  PINF1 -- Patient info returned to W/S
"RTN","MAGJUTL3",24,0)
 ;  LOG -- Update image access logs
"RTN","MAGJUTL3",25,0)
 ;
"RTN","MAGJUTL3",26,0)
LISTINF(MAGGRY) ; RPC: MAGJ CUSTOM LISTS
"RTN","MAGJUTL3",27,0)
 ;  send Exam List data to Server
"RTN","MAGJUTL3",28,0)
 ; Return Info in ^TMP($J,"MAGJLSTINF",0:N) (@MAGGRY)
"RTN","MAGJUTL3",29,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",30,0)
 ;   1:n)= Button Label^List #^Button Hints text^List Type
"RTN","MAGJUTL3",31,0)
 ;
"RTN","MAGJUTL3",32,0)
 ; MAGGRY holds $NA reference to ^TMP where Broker return message is assembled;
"RTN","MAGJUTL3",33,0)
 ;   all references to MAGGRY use subscript indirection
"RTN","MAGJUTL3",34,0)
 ;
"RTN","MAGJUTL3",35,0)
 ; variable GLB holds $NA reference to ^MAG(2006.631), Custom List file
"RTN","MAGJUTL3",36,0)
 ;   all references to GLB use subscript indirection to fetch data from this file
"RTN","MAGJUTL3",37,0)
 ;
"RTN","MAGJUTL3",38,0)
 N D0,GLB,INF,MAGLST,NAM,T
"RTN","MAGJUTL3",39,0)
 S MAGLST="MAGJLSTINF"
"RTN","MAGJUTL3",40,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY S @MAGGRY@(0)=0
"RTN","MAGJUTL3",41,0)
 S GLB=$NA(^MAG(2006.631)),NAM=""
"RTN","MAGJUTL3",42,0)
 F  S NAM=$O(@GLB@("B",NAM)) Q:NAM=""  S D0="" D
"RTN","MAGJUTL3",43,0)
 . S D0=$O(@GLB@("B",NAM,D0)) Q:'D0  D
"RTN","MAGJUTL3",44,0)
 . . S X=$G(@GLB@(D0,0)) Q:($P(X,U,2)>9000)!'$P(X,U,6)  ; List Active & User-defined
"RTN","MAGJUTL3",45,0)
 . . S INF="" F I=1:1 S T=$P("7^2^1^3",U,I) Q:T=""  S Y=$P(X,U,T) Q:Y=""  S $P(INF,U,I)=Y
"RTN","MAGJUTL3",46,0)
 . . Q:T'=""  ; req'd fields not all there
"RTN","MAGJUTL3",47,0)
 . . S T=@MAGGRY@(0)+1,^(0)=T,^(T)=INF ; add this list entry to reply message
"RTN","MAGJUTL3",48,0)
 Q
"RTN","MAGJUTL3",49,0)
 ;
"RTN","MAGJUTL3",50,0)
LOG(ACTION,RADFN,MAGIEN,NIMGS,REMOTE) ; Log exam access
"RTN","MAGJUTL3",51,0)
 N PTCT,TXT
"RTN","MAGJUTL3",52,0)
 I ACTION="" S ACTION="UNKNOWN"  ; Should never happen
"RTN","MAGJUTL3",53,0)
 S PTCT=RADFN'=$G(MAGJOB("LASTPT",ACTION))
"RTN","MAGJUTL3",54,0)
 I PTCT S MAGJOB("LASTPT",ACTION)=RADFN
"RTN","MAGJUTL3",55,0)
 S TXT=ACTION_U_RADFN_U_MAGIEN_U_U_U_NIMGS
"RTN","MAGJUTL3",56,0)
 S TXT=TXT_U_PTCT_U_$S(+MAGJOB("USER",1):1,1:0)_U_REMOTE
"RTN","MAGJUTL3",57,0)
 ; Session Log
"RTN","MAGJUTL3",58,0)
 D ACTION^MAGGTAU(TXT,1)
"RTN","MAGJUTL3",59,0)
 ; Mag Log
"RTN","MAGJUTL3",60,0)
 I REMOTE S ACTION=ACTION_"/REM"
"RTN","MAGJUTL3",61,0)
 D ENTRY^MAGLOG(ACTION,+DUZ,MAGIEN,"VRAD:"_MAGJOB("VRVERSION"),RADFN,NIMGS)
"RTN","MAGJUTL3",62,0)
 Q
"RTN","MAGJUTL3",63,0)
 ;
"RTN","MAGJUTL3",64,0)
LOGOFF(MAGRY,DATA) ; RPC: MAGJ LOGOFF -- Call when session is over.
"RTN","MAGJUTL3",65,0)
 ; update session file with logoff time & mark the session entry closed
"RTN","MAGJUTL3",66,0)
 ;
"RTN","MAGJUTL3",67,0)
 D LOGOFF^MAGGTAU(.MAGRY)
"RTN","MAGJUTL3",68,0)
 Q
"RTN","MAGJUTL3",69,0)
 ;
"RTN","MAGJUTL3",70,0)
CACHEQ(MAGGRY,DATA) ; RPC: MAGJ CACHELOCATION
"RTN","MAGJUTL3",71,0)
 ; logon initializations for the session
"RTN","MAGJUTL3",72,0)
 ; Query host for Local Cache paths for Remote Reading
"RTN","MAGJUTL3",73,0)
 ; input in DATA: WSLOC
"RTN","MAGJUTL3",74,0)
 ;  - WSLOC   = Workstation Location
"RTN","MAGJUTL3",75,0)
 ;  - VRADVER = VistaRad Client Version
"RTN","MAGJUTL3",76,0)
 ;  - OSVER   = Client OS Version
"RTN","MAGJUTL3",77,0)
 ; Return Info in ^TMP($J,"MAGJCACHE",0:N) (@MAGGRY)
"RTN","MAGJUTL3",78,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",79,0)
 ;   1:n)= PhysName^Subdirectory^HashFlag^Username^Password
"RTN","MAGJUTL3",80,0)
 ;
"RTN","MAGJUTL3",81,0)
 ; MAGGRY holds $NA reference to ^TMP where Broker return message is assembled
"RTN","MAGJUTL3",82,0)
 ;   references to MAGGRY use subscript indirection
"RTN","MAGJUTL3",83,0)
 ;   
"RTN","MAGJUTL3",84,0)
 ; Also builds local array:
"RTN","MAGJUTL3",85,0)
 ;    MAGJOB("LOC",NetworkLocnIEN)=Site Abbreviation
"RTN","MAGJUTL3",86,0)
 ;    MAGJOB("REMOTE")=1/0  (T/F for "User is reading at Remote Loc'n")
"RTN","MAGJUTL3",87,0)
 ;    MAGJOB("WSLOC")=Workstation_Location String
"RTN","MAGJUTL3",88,0)
 ;    MAGJOB("WSLOCTYP")=Workstation_Location Type
"RTN","MAGJUTL3",89,0)
 ;    MAGJOB("WSNAME")=Workstation ID
"RTN","MAGJUTL3",90,0)
 ;    MAGJOB("VRVERSION")=VRAD Version
"RTN","MAGJUTL3",91,0)
 ;    MAGJOB("OSVER")=O/S Version
"RTN","MAGJUTL3",92,0)
 ;    MAGJOB("ALTPATH")=1/0 ^ 1/0 (T/F Alternate Paths are defined 
"RTN","MAGJUTL3",93,0)
 ;               ^ Alt Paths are Enabled/Disabled for most recent exam)
"RTN","MAGJUTL3",94,0)
 ;
"RTN","MAGJUTL3",95,0)
 S X="ERR^MAGJEX1",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",96,0)
 ;
"RTN","MAGJUTL3",97,0)
 N I,MAGLST,REPLY,TMP,WSLOC,XX,VRADVER,OSVER
"RTN","MAGJUTL3",98,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL3",99,0)
 S REPLY=0,MAGLST="MAGJCACHE"
"RTN","MAGJUTL3",100,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY
"RTN","MAGJUTL3",101,0)
 S WSLOC=$P(DATA,U),VRADVER=$P(DATA,U,2),OSVER=$P(DATA,U,3)
"RTN","MAGJUTL3",102,0)
 S MAGJOB("OSVER")=$S(OSVER]"":OSVER,1:"UNK")
"RTN","MAGJUTL3",103,0)
 S MAGJOB("VRVERSION")=$S(VRADVER]"":VRADVER,1:"UNK")
"RTN","MAGJUTL3",104,0)
 S X=$P($G(IO("CLNM")),".")
"RTN","MAGJUTL3",105,0)
 S MAGJOB("WSNAME")=$S(X]"":X,1:"VistaradWS")
"RTN","MAGJUTL3",106,0)
 ;
"RTN","MAGJUTL3",107,0)
 ; Since this function is executed at user Login, use the opportunity to
"RTN","MAGJUTL3",108,0)
 ; initialize various things
"RTN","MAGJUTL3",109,0)
 ;
"RTN","MAGJUTL3",110,0)
 D REMLOCK
"RTN","MAGJUTL3",111,0)
 D MAGJOB ; Inits magjob array
"RTN","MAGJUTL3",112,0)
 S MAGJOB("WSLOCTYP")=$S(+MAGJOB("USER",1):"RAD",1:"Non-Rad")
"RTN","MAGJUTL3",113,0)
 I '$D(MAGJOB("WRKSIEN")) D
"RTN","MAGJUTL3",114,0)
 . S X=MAGJOB("WSNAME")_"^^^"_MAGJOB("WSLOCTYP")_U_U_U_U_1_U_MAGJOB("OSVER")_U_MAGJOB("VRVERSION")
"RTN","MAGJUTL3",115,0)
 . D UPD^MAGGTAU(.Y,X)
"RTN","MAGJUTL3",116,0)
 ;
"RTN","MAGJUTL3",117,0)
 ; get cache location info
"RTN","MAGJUTL3",118,0)
 S MAGJOB("WSLOC")=WSLOC,MAGJOB("REMOTE")=0,MAGJOB("ALTPATH")="0^0"
"RTN","MAGJUTL3",119,0)
 I WSLOC]"" D
"RTN","MAGJUTL3",120,0)
 . S X=$P($G(^MAG(2006.1,+MAGJOB("SITEP"),0)),U,9)
"RTN","MAGJUTL3",121,0)
 . I X]"",(X'=WSLOC) S MAGJOB("REMOTE")=1
"RTN","MAGJUTL3",122,0)
 . E  Q
"RTN","MAGJUTL3",123,0)
 . D LIST^MAGBRTLD(WSLOC,.TMP)
"RTN","MAGJUTL3",124,0)
 . I TMP S REPLY=TMP,MAGJOB("ALTPATH")="1^1" F I=1:1:TMP D
"RTN","MAGJUTL3",125,0)
 . . S XX=$P(TMP(I),U,1,5),X=$P(XX,U,3),$P(XX,U,3)=$S(X="Y":1,1:0)
"RTN","MAGJUTL3",126,0)
 . . S X=$P(XX,U,4),$P(XX,U,4)=$P(XX,U,5),$P(XX,U,5)=X
"RTN","MAGJUTL3",127,0)
 . . S @MAGGRY@(I)=XX,MAGJOB("LOC",$P(TMP(I),U,7))=$P(TMP(I),U,6)
"RTN","MAGJUTL3",128,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL3",129,0)
CACHEQZ Q
"RTN","MAGJUTL3",130,0)
 ;
"RTN","MAGJUTL3",131,0)
REMLOCK ;  Remove dangling exam locks:
"RTN","MAGJUTL3",132,0)
 S RARPT=""
"RTN","MAGJUTL3",133,0)
 F  S RARPT=$O(^XTMP("MAGJ","LOCK",RARPT)) Q:'RARPT  D
"RTN","MAGJUTL3",134,0)
 . L +^XTMP("MAGJ","LOCK",RARPT):0 I  D  ; found one (maybe)
"RTN","MAGJUTL3",135,0)
 . . S X=$G(^XTMP("MAGJ","LOCK",RARPT))
"RTN","MAGJUTL3",136,0)
 . . I +X=DUZ,($P(X,U,2)=$J)         ; leave this job's locks alone
"RTN","MAGJUTL3",137,0)
 . . E  K ^XTMP("MAGJ","LOCK",RARPT) ; get rid of this one
"RTN","MAGJUTL3",138,0)
 . . L -^XTMP("MAGJ","LOCK",RARPT)
"RTN","MAGJUTL3",139,0)
 N TS S TS="" F I=2,0 S %H=$H+I D YMD^%DTC S TS=TS_$S(TS="":"",1:U)_X
"RTN","MAGJUTL3",140,0)
 S ^XTMP("MAGJ",0)=TS_U_"VistaRad Locks"
"RTN","MAGJUTL3",141,0)
 Q
"RTN","MAGJUTL3",142,0)
 ;
"RTN","MAGJUTL3",143,0)
MAGJOB ; Initialize general magjob array entries
"RTN","MAGJUTL3",144,0)
 ;    MAGJOB("SITEP")=IEN to active Site Parameter
"RTN","MAGJUTL3",145,0)
 ;    MAGJOB("CONSOLIDATED")=1/0
"RTN","MAGJUTL3",146,0)
 ;    MAGJOB( "KEYS", security_keys ) = ""
"RTN","MAGJUTL3",147,0)
 ;    MAGJOB( "USER", 1 ) = RIST_Type ^ NAME ^ INITIALS
"RTN","MAGJUTL3",148,0)
 N T,RIST
"RTN","MAGJUTL3",149,0)
 D USERKEYS
"RTN","MAGJUTL3",150,0)
 N MAGSPEC D FIELD^DID(2006.1,.01,"","SPECIFIER","MAGSPEC")
"RTN","MAGJUTL3",151,0)
 S MAGJOB("CONSOLIDATED")=MAGSPEC("SPECIFIER")["P"
"RTN","MAGJUTL3",152,0)
 S MAGJOB("SITEP")=$$IMGSIT^MAGJUTL1(DUZ(2))   ; Determine Site Param ien
"RTN","MAGJUTL3",153,0)
 I 'MAGJOB("SITEP") S X=$O(^MAG(2006.1,0)) S MAGJOB("SITEP")=X_U_$P(^(X,0),U,9)  ; Default to 1st
"RTN","MAGJUTL3",154,0)
 ;
"RTN","MAGJUTL3",155,0)
 S RIST="" F X="S","R" I $D(^VA(200,"ARC",X,DUZ)) S RIST=X Q
"RTN","MAGJUTL3",156,0)
 S RIST=$S(RIST="S":15,RIST="R":12,1:0) ; Staff/Resident/Non rist
"RTN","MAGJUTL3",157,0)
 S MAGJOB("USER",1)=RIST_U_$$USERINF(+DUZ,".01;1")
"RTN","MAGJUTL3",158,0)
 Q
"RTN","MAGJUTL3",159,0)
 ;
"RTN","MAGJUTL3",160,0)
USERINF(DUZ,FLDS) ; get data from user file; return ^-delimited result string
"RTN","MAGJUTL3",161,0)
 I FLDS=""!'DUZ Q ""
"RTN","MAGJUTL3",162,0)
 N I,RSL,T S RSL=""
"RTN","MAGJUTL3",163,0)
 D GETS^DIQ(200,+DUZ,FLDS,"E","T")
"RTN","MAGJUTL3",164,0)
 S T=+DUZ_","
"RTN","MAGJUTL3",165,0)
 F I=1:1:$L(FLDS,";") S RSL=RSL_$S(RSL="":"",1:U)_T(200,T,$P(FLDS,";",I),"E")
"RTN","MAGJUTL3",166,0)
 Q RSL
"RTN","MAGJUTL3",167,0)
 ;
"RTN","MAGJUTL3",168,0)
USERKEYS ; Store VistaRad Security Keys in MagJob array
"RTN","MAGJUTL3",169,0)
 ;
"RTN","MAGJUTL3",170,0)
 N I,X,Y
"RTN","MAGJUTL3",171,0)
 N MAGKS ; list of keys to send to XUS KEY CHECK
"RTN","MAGJUTL3",172,0)
 N MAGKG ; list returned from XUS KEY CHECK
"RTN","MAGJUTL3",173,0)
 K MAGJOB("KEYS")
"RTN","MAGJUTL3",174,0)
 S X="MAGJ",I=0
"RTN","MAGJUTL3",175,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,4)'="MAGJ"  D
"RTN","MAGJUTL3",176,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGJUTL3",177,0)
 I '$D(MAGKS) Q
"RTN","MAGJUTL3",178,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGJUTL3",179,0)
 S I=0 F  S I=$O(MAGKG(I)) Q:'I  I MAGKG(I) S MAGJOB("KEYS",MAGKS(I))=""
"RTN","MAGJUTL3",180,0)
 Q
"RTN","MAGJUTL3",181,0)
 ;
"RTN","MAGJUTL3",182,0)
 Q
"RTN","MAGJUTL3",183,0)
PINF1(MAGRY,MAGDFN) ;RPC Call MAGJ PT INFO -- Return patient info.
"RTN","MAGJUTL3",184,0)
 ; Code borrowed from MAGGTCP
"RTN","MAGJUTL3",185,0)
 D INFO^MAGGTPT1(.MAGRY,MAGDFN_"^1") ; 1=Don't log to session file
"RTN","MAGJUTL3",186,0)
 Q
"RTN","MAGJUTL3",187,0)
 ;
"RTN","MAGJUTL3",188,0)
END Q  ;
"SEC","^DIC",2006.63,2006.63,0,"AUDIT")
@
"SEC","^DIC",2006.63,2006.63,0,"DD")
@
"SEC","^DIC",2006.63,2006.63,0,"DEL")
@
"SEC","^DIC",2006.63,2006.63,0,"LAYGO")
@
"SEC","^DIC",2006.63,2006.63,0,"RD")
@
"SEC","^DIC",2006.63,2006.63,0,"WR")
@
"SEC","^DIC",2006.631,2006.631,0,"AUDIT")
@
"SEC","^DIC",2006.631,2006.631,0,"DD")
@
"SEC","^DIC",2006.631,2006.631,0,"LAYGO")
@
"SEC","^DIC",2006.634,2006.634,0,"AUDIT")
@
"SEC","^DIC",2006.634,2006.634,0,"DD")
@
"SEC","^DIC",2006.634,2006.634,0,"DEL")
@
"SEC","^DIC",2006.634,2006.634,0,"LAYGO")
@
"SEC","^DIC",2006.634,2006.634,0,"RD")
@
"SEC","^DIC",2006.634,2006.634,0,"WR")
@
"VER")
8.0^22.0
"^DD",2006.63,2006.63,0)
FIELD^^7^8
"^DD",2006.63,2006.63,0,"DDA")
N
"^DD",2006.63,2006.63,0,"DT")
3000107
"^DD",2006.63,2006.63,0,"IX","ASRTREV",2006.63,6)

"^DD",2006.63,2006.63,0,"IX","B",2006.63,.01)

"^DD",2006.63,2006.63,0,"NM","MAG RAD LIST DATA ELEMENTS")

"^DD",2006.63,2006.63,0,"PT",2006.6311,.01)

"^DD",2006.63,2006.63,0,"PT",2006.6312,.01)

"^DD",2006.63,2006.63,0,"VRPK")
IMAGING
"^DD",2006.63,2006.63,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.63,2006.63,.01,1,0)
^.1
"^DD",2006.63,2006.63,.01,1,1,0)
2006.63^B
"^DD",2006.63,2006.63,.01,1,1,1)
S ^MAG(2006.63,"B",$E(X,1,30),DA)=""
"^DD",2006.63,2006.63,.01,1,1,2)
K ^MAG(2006.63,"B",$E(X,1,30),DA)
"^DD",2006.63,2006.63,.01,3)
Answer must be 3-30 characters in length.
"^DD",2006.63,2006.63,.01,"DT")
3011106
"^DD",2006.63,2006.63,1,0)
ABBREVIATION^RFI^^0;2^K:$L(X)>15!($L(X)<1)!'('(X["~"!(X["|"))) X
"^DD",2006.63,2006.63,1,3)
Answer must be 1-15 characters in length; no tilde or pipe (~, |).
"^DD",2006.63,2006.63,1,"DT")
3000107
"^DD",2006.63,2006.63,2,0)
COLUMN HEADER^F^^0;3^K:$L(X)>15!($L(X)<1)!'('(X["~"!(X["|"))) X
"^DD",2006.63,2006.63,2,3)
Answer must be 1-15 characters in length; no tilde or pipe (~, |).
"^DD",2006.63,2006.63,2,"DT")
3000107
"^DD",2006.63,2006.63,3,0)
Sort Only?^SI^1:Yes;0:No;^0;4^Q
"^DD",2006.63,2006.63,3,3)
Enter YES only if this field should be used solely for sorting, vs displaying its value.
"^DD",2006.63,2006.63,3,"DT")
2990322
"^DD",2006.63,2006.63,4,0)
Internal Use Only?^SI^1:Yes;^0;5^Q
"^DD",2006.63,2006.63,4,"DT")
2990322
"^DD",2006.63,2006.63,5,0)
RELATIVE ORDER^RNJ4,1I^^0;6^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",2006.63,2006.63,5,1,0)
^.1^^0
"^DD",2006.63,2006.63,5,3)
Type a Number between 0 and 99, 1 Decimal Digit
"^DD",2006.63,2006.63,5,21,0)
^^2^2^2990304^
"^DD",2006.63,2006.63,5,21,1,0)
Output columns will always appear in a fixed relative order according to
"^DD",2006.63,2006.63,5,21,2,0)
the value of this field.
"^DD",2006.63,2006.63,5,"DT")
2990322
"^DD",2006.63,2006.63,6,0)
REVERSABLE SORT?^S^1:YES;^0;7^Q
"^DD",2006.63,2006.63,6,1,0)
^.1
"^DD",2006.63,2006.63,6,1,1,0)
2006.63^ASRTREV
"^DD",2006.63,2006.63,6,1,1,1)
S ^MAG(2006.63,"ASRTREV",$E(X,1,30),DA)=""
"^DD",2006.63,2006.63,6,1,1,2)
K ^MAG(2006.63,"ASRTREV",$E(X,1,30),DA)
"^DD",2006.63,2006.63,6,1,1,"DT")
2990507
"^DD",2006.63,2006.63,6,3)
To enable reverse sort by this field, enter YES (Date & Numeric valued fields only!)
"^DD",2006.63,2006.63,6,"DT")
2990507
"^DD",2006.63,2006.63,7,0)
COLUMN TYPE^S^S1:Date/Time;S2:Numeric;S3:Day/Case #;^0;8^Q
"^DD",2006.63,2006.63,7,3)
Answer this ONLY if the data for this field fits a defined Type.
"^DD",2006.63,2006.63,7,21,0)
^^5^5^3000107^
"^DD",2006.63,2006.63,7,21,1,0)
This indicates to the VistsRad Client that the data for this column
"^DD",2006.63,2006.63,7,21,2,0)
requires special handling for either the Sort, or other defined needs.  No
"^DD",2006.63,2006.63,7,21,3,0)
answer, by default, says treat column data as free-text data.  Defined
"^DD",2006.63,2006.63,7,21,4,0)
needs are: Indicate Sort requirements (for Date & Numeric values)
"^DD",2006.63,2006.63,7,21,5,0)
           Indicate Day/Case Number (used for key in Client App)
"^DD",2006.63,2006.63,7,"DT")
3000107
"^DD",2006.631,2006.631,0)
FIELD^^2^9
"^DD",2006.631,2006.631,0,"DDA")
N
"^DD",2006.631,2006.631,0,"DT")
3000331
"^DD",2006.631,2006.631,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",2006.631,2006.631,0,"IX","B",2006.631,.01)

"^DD",2006.631,2006.631,0,"IX","C",2006.631,.02)

"^DD",2006.631,2006.631,0,"NM","MAG RAD LISTS DEFINITION")

"^DD",2006.631,2006.631,0,"VRPK")
IMAGING
"^DD",2006.631,2006.631,.01,0)
NAME^RF^^0;1^K:$L(X)>75!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.631,2006.631,.01,1,0)
^.1
"^DD",2006.631,2006.631,.01,1,1,0)
2006.631^B
"^DD",2006.631,2006.631,.01,1,1,1)
S ^MAG(2006.631,"B",$E(X,1,30),DA)=""
"^DD",2006.631,2006.631,.01,1,1,2)
K ^MAG(2006.631,"B",$E(X,1,30),DA)
"^DD",2006.631,2006.631,.01,3)
Answer must be 3-75 characters in length.
"^DD",2006.631,2006.631,.01,"DT")
2990712
"^DD",2006.631,2006.631,.02,0)
LIST #^RNJ3,0XI^^0;2^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N)!($D(^MAG(2006.631,"C",X))) X
"^DD",2006.631,2006.631,.02,1,0)
^.1^^-1
"^DD",2006.631,2006.631,.02,1,1,0)
2006.631^C
"^DD",2006.631,2006.631,.02,1,1,1)
S ^MAG(2006.631,"C",$E(X,1,30),DA)=""
"^DD",2006.631,2006.631,.02,1,1,2)
K ^MAG(2006.631,"C",$E(X,1,30),DA)
"^DD",2006.631,2006.631,.02,1,1,"DT")
2990226
"^DD",2006.631,2006.631,.02,3)
Type an Integer between 1 and 999; the value must be unique.
"^DD",2006.631,2006.631,.02,4)
N T,L,C,Q S C=2,L(1)="Used values are:",(L(1,"F"),L(2,"F"))="?10",(L(2),T)="" F  S T=$O(^MAG(2006.631,"C",T)),Q=('T!(T>9990)) S:'Q&($L(L(C))>40) C=C+1,L(C)="",L(C,"F")="!?26" S:'Q L(C)=L(C)_"  "_T I Q D EN^DDIOL(.L) Q
"^DD",2006.631,2006.631,.02,21,0)
^^3^3^2990607^^^^
"^DD",2006.631,2006.631,.02,21,1,0)
Enter a number to be used to uniquely identify this list; this number will
"^DD",2006.631,2006.631,.02,21,2,0)
be passed as a parameter from the workstation to cause this list to be
"^DD",2006.631,2006.631,.02,21,3,0)
generated.
"^DD",2006.631,2006.631,.02,"DT")
2990607
"^DD",2006.631,2006.631,.03,0)
LIST TYPE^R*S^U:UNREAD;R:RECENT;A:ALL UNREAD & RECENT;P:PENDING;N:Newly Interpreted;^0;3^Q
"^DD",2006.631,2006.631,.03,3)
Enter the List Type for this list; enter ?? for more help.
"^DD",2006.631,2006.631,.03,12)
The "N" value is for internal use only for background compiles of the RECENT list; it has no use for defining lists.
"^DD",2006.631,2006.631,.03,12.1)
S DIC("S")="I Y'=""N"""
"^DD",2006.631,2006.631,.03,21,0)
^^9^9^3000331^
"^DD",2006.631,2006.631,.03,21,1,0)
This determints what subset of the exams to display, based on the Exam
"^DD",2006.631,2006.631,.03,21,2,0)
Status value.  Choices are:
"^DD",2006.631,2006.631,.03,21,3,0)
 
"^DD",2006.631,2006.631,.03,21,4,0)
  U  -- UNREAD Exams only; Exam Status Category= E(xamined)
"^DD",2006.631,2006.631,.03,21,5,0)
  R  -- RECENT Exams; Status Categories D(ictated) & T(ranscribed)
"^DD",2006.631,2006.631,.03,21,6,0)
  A  -- ALL Active Exams; Categories E, D, & T
"^DD",2006.631,2006.631,.03,21,7,0)
  P  -- PENDING Exams; Category= W(aiting for Exam)
"^DD",2006.631,2006.631,.03,21,8,0)
  N  -- Newly-Interpreted; NO Category -- this List Type is for Internal
"^DD",2006.631,2006.631,.03,21,9,0)
          use only, and is not available for defining reports.
"^DD",2006.631,2006.631,.03,"DT")
3000331
"^DD",2006.631,2006.631,.04,0)
IMAGING TYPES^RS^ALL:ALL;^0;4^Q
"^DD",2006.631,2006.631,.04,3)
Enter ALL; this field may have other values in the future.
"^DD",2006.631,2006.631,.04,"DT")
2990226
"^DD",2006.631,2006.631,.05,0)
LAST EDITED^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.631,2006.631,.05,3)
When finished all list definition changes, Enter "NOW" to log time of last edit.
"^DD",2006.631,2006.631,.05,21,0)
^^1^1^2990324^
"^DD",2006.631,2006.631,.05,21,1,0)
Log of last time this report was edited.
"^DD",2006.631,2006.631,.05,23,0)
^^3^3^2990324^
"^DD",2006.631,2006.631,.05,23,1,0)
Whenever the report definition is edited, the compile process must
"^DD",2006.631,2006.631,.05,23,2,0)
re-build some needed internal data structures that support the
"^DD",2006.631,2006.631,.05,23,3,0)
execution of the List compile routines.
"^DD",2006.631,2006.631,.05,"DT")
2990226
"^DD",2006.631,2006.631,.06,0)
ENABLE LIST?^S^1:Y;0:N;^0;6^Q
"^DD",2006.631,2006.631,.06,3)
Enable this LIST only when it is ready for live use.
"^DD",2006.631,2006.631,.06,21,0)
^^5^5^2990324^^
"^DD",2006.631,2006.631,.06,21,1,0)
Until the List definition is Enabled, it will not be available for
"^DD",2006.631,2006.631,.06,21,2,0)
use from the VistARad Workstation; this allows you time to develop and/or
"^DD",2006.631,2006.631,.06,21,3,0)
modify list definitions without worrying about end-users accessing a
"^DD",2006.631,2006.631,.06,21,4,0)
fully-defined list.  Also, you can retire a list that is no longer needed
"^DD",2006.631,2006.631,.06,21,5,0)
by deleting this field's answer.
"^DD",2006.631,2006.631,.06,"DT")
2990324
"^DD",2006.631,2006.631,.07,0)
BUTTON LABEL^RF^^0;7^K:$L(X)>15!($L(X)<3) X
"^DD",2006.631,2006.631,.07,3)
Answer must be 3-15 characters in length.
"^DD",2006.631,2006.631,.07,"DT")
2990630
"^DD",2006.631,2006.631,1,0)
COLUMNS^2006.6311PA^^1;0
"^DD",2006.631,2006.631,1,21,0)
^.001^1^1^3020313^^^
"^DD",2006.631,2006.631,1,21,1,0)
Specify output columns here.
"^DD",2006.631,2006.631,2,0)
SORT^2006.6312PA^^2;0
"^DD",2006.631,2006.631,2,21,0)
^^1^1^2990607^^^^
"^DD",2006.631,2006.631,2,21,1,0)
The sort sequence may be specified here.
"^DD",2006.631,2006.6311,0)
COLUMNS SUB-FIELD^^1^2
"^DD",2006.631,2006.6311,0,"DT")
2990324
"^DD",2006.631,2006.6311,0,"IX","B",2006.6311,.01)

"^DD",2006.631,2006.6311,0,"NM","COLUMNS")

"^DD",2006.631,2006.6311,0,"UP")
2006.631
"^DD",2006.631,2006.6311,.01,0)
COLUMN^MP2006.63'^MAG(2006.63,^0;1^Q
"^DD",2006.631,2006.6311,.01,1,0)
^.1
"^DD",2006.631,2006.6311,.01,1,1,0)
2006.6311^B
"^DD",2006.631,2006.6311,.01,1,1,1)
S ^MAG(2006.631,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",2006.631,2006.6311,.01,1,1,2)
K ^MAG(2006.631,DA(1),1,"B",$E(X,1,30),DA)
"^DD",2006.631,2006.6311,.01,3)
Enter output columns for the list.
"^DD",2006.631,2006.6311,.01,21,0)
^^2^2^3020313^
"^DD",2006.631,2006.6311,.01,21,1,0)
This field is a pointer to MAG RAD LIST DATA ELEMENTS and specifies the 
"^DD",2006.631,2006.6311,.01,21,2,0)
display column in the Exam Lists.
"^DD",2006.631,2006.6311,.01,"DT")
2990302
"^DD",2006.631,2006.6311,1,0)
WIDTH^NJ2,0^^0;2^K:+X'=X!(X>30)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.631,2006.6311,1,3)
Type a Number between 0 and 30, 0 Decimal Digits
"^DD",2006.631,2006.6311,1,21,0)
^^1^1^2990324^
"^DD",2006.631,2006.6311,1,21,1,0)
Output values may be truncated to the specified width, if desired.
"^DD",2006.631,2006.6311,1,"DT")
2990324
"^DD",2006.631,2006.6312,0)
SORT SUB-FIELD^^1^2
"^DD",2006.631,2006.6312,0,"DT")
2990607
"^DD",2006.631,2006.6312,0,"IX","B",2006.6312,.01)

"^DD",2006.631,2006.6312,0,"NM","SORT")

"^DD",2006.631,2006.6312,0,"UP")
2006.631
"^DD",2006.631,2006.6312,.01,0)
SORT^MP2006.63'^MAG(2006.63,^0;1^Q
"^DD",2006.631,2006.6312,.01,1,0)
^.1^^-1
"^DD",2006.631,2006.6312,.01,1,1,0)
2006.6312^B
"^DD",2006.631,2006.6312,.01,1,1,1)
S ^MAG(2006.631,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",2006.631,2006.6312,.01,1,1,2)
K ^MAG(2006.631,DA(1),2,"B",$E(X,1,30),DA)
"^DD",2006.631,2006.6312,.01,3)
Specify the sort values, in the desired sort order.
"^DD",2006.631,2006.6312,.01,21,0)
^^1^1^2990607^^
"^DD",2006.631,2006.6312,.01,21,1,0)
The order in which fields are entered here determines the sort order.
"^DD",2006.631,2006.6312,.01,"DT")
2990607
"^DD",2006.631,2006.6312,1,0)
REVERSE?^S^1:YES;0:NO;^0;2^Q
"^DD",2006.631,2006.6312,1,3)
If a reverse sort is desired, this should be answered "Y".
"^DD",2006.631,2006.6312,1,21,0)
^^2^2^2990607^^^^
"^DD",2006.631,2006.6312,1,21,1,0)
If a reverse sort is desired, this should be answered "Y"; reverse sort 
"^DD",2006.631,2006.6312,1,21,2,0)
is only valid for date/time and numeric-valued fields.
"^DD",2006.631,2006.6312,1,"DT")
2990607
"^DD",2006.634,2006.634,0)
FIELD^^26^26
"^DD",2006.634,2006.634,0,"DDA")
Y
"^DD",2006.634,2006.634,0,"DT")
3030501
"^DD",2006.634,2006.634,0,"IX","B",2006.634,.01)

"^DD",2006.634,2006.634,0,"NM","MAGJ ZLIST SEARCH")

"^DD",2006.634,2006.634,0,"VRPK")
IMAGING
"^DD",2006.634,2006.634,.01,0)
CASE NUMBER^RF^^0;1^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,.01,1,0)
^.1
"^DD",2006.634,2006.634,.01,1,1,0)
2006.634^B
"^DD",2006.634,2006.634,.01,1,1,1)
S ^MAG(2006.634,"B",$E(X,1,30),DA)=""
"^DD",2006.634,2006.634,.01,1,1,2)
K ^MAG(2006.634,"B",$E(X,1,30),DA)
"^DD",2006.634,2006.634,.01,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,.01,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,.01,21,1,0)
The search entry that corresponds to the Case Number.
"^DD",2006.634,2006.634,.01,"DT")
2990329
"^DD",2006.634,2006.634,2,0)
EXAM LOCK IND^RF^^0;2^K:$L(X)>4!($L(X)<1) X
"^DD",2006.634,2006.634,2,3)
Answer must be 1-4 characters in length.
"^DD",2006.634,2006.634,2,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,2,21,1,0)
The search entry that corresponds to the Exam Lock Indicator.
"^DD",2006.634,2006.634,2,"DT")
2990329
"^DD",2006.634,2006.634,3,0)
PATIENT NAME^RF^^0;3^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,3,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,3,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,3,21,1,0)
The search entry that corresponds to the Patient Name.
"^DD",2006.634,2006.634,3,"DT")
2990329
"^DD",2006.634,2006.634,4,0)
PATIENT ID^RF^^0;4^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,4,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,4,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,4,21,1,0)
The search entry that corresponds to the Patient Identification.
"^DD",2006.634,2006.634,4,"DT")
2990329
"^DD",2006.634,2006.634,5,0)
PRIORITY^RF^^0;5^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,5,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,5,21,0)
^.001^1^1^3020313^^
"^DD",2006.634,2006.634,5,21,1,0)
The search entry that corresponds to the Priority of the case.
"^DD",2006.634,2006.634,5,"DT")
2990329
"^DD",2006.634,2006.634,6,0)
PROCEDURE^RF^^0;6^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,6,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,6,21,0)
^.001^1^1^3020313^^^
"^DD",2006.634,2006.634,6,21,1,0)
The search entry that corresponds to Procedure.
"^DD",2006.634,2006.634,6,"DT")
2990329
"^DD",2006.634,2006.634,7,0)
IMAGE DATE/TIME^F^^0;7^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,7,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,7,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,7,21,1,0)
The search entry that corresponds to the Image Date and Time.
"^DD",2006.634,2006.634,7,"DT")
2990329
"^DD",2006.634,2006.634,8,0)
STATUS^RF^^0;8^K:$L(X)>4!($L(X)<1) X
"^DD",2006.634,2006.634,8,3)
Answer must be 1-4 characters in length.
"^DD",2006.634,2006.634,8,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,8,21,1,0)
The search entry that corresponds to the Status of the case.
"^DD",2006.634,2006.634,8,"DT")
2990329
"^DD",2006.634,2006.634,9,0)
NUMBER OF IMAGES^RF^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,9,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,9,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,9,21,1,0)
The search entry that corresponds to Number of Images for the case.
"^DD",2006.634,2006.634,9,"DT")
2990329
"^DD",2006.634,2006.634,10,0)
ONLINE STATUS^RF^^0;10^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,10,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,10,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,10,21,1,0)
The search entry that corresponds to Online Status of the images.
"^DD",2006.634,2006.634,10,"DT")
2990329
"^DD",2006.634,2006.634,11,0)
IMAGING LOCATION^RF^^0;11^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,11,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,11,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,11,21,1,0)
The search entry that corresponds to the Imaging Location of the images.
"^DD",2006.634,2006.634,11,"DT")
2990329
"^DD",2006.634,2006.634,12,0)
REMOTE CACHE INDICATOR^RF^^0;12^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,12,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,12,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,12,21,1,0)
The search entry that corresponds to Remote Cache Indicator for the images.
"^DD",2006.634,2006.634,12,"DT")
2990329
"^DD",2006.634,2006.634,13,0)
IMAGES EXIST INDICATOR^RF^^0;13^K:$L(X)>1!($L(X)<1) X
"^DD",2006.634,2006.634,13,3)
Answer must be 1 character in length.
"^DD",2006.634,2006.634,13,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,13,21,1,0)
The search entry that corresponds to Images Exist Indicator for the case.
"^DD",2006.634,2006.634,13,"DT")
2990329
"^DD",2006.634,2006.634,14,0)
IMAGE DATE/TIME-SORTABLE^RF^^0;14^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,14,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,14,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,14,21,1,0)
The search entry that corresponds to Image Date & Time Sortable.
"^DD",2006.634,2006.634,14,"DT")
2990329
"^DD",2006.634,2006.634,15,0)
MODALITY^RF^^0;15^K:$L(X)>2!($L(X)<1) X
"^DD",2006.634,2006.634,15,3)
Answer must be 1-2 characters in length.
"^DD",2006.634,2006.634,15,21,0)
^.001^1^1^3020313^^
"^DD",2006.634,2006.634,15,21,1,0)
The search entry that corresponds to Modality.
"^DD",2006.634,2006.634,15,"DT")
2990329
"^DD",2006.634,2006.634,16,0)
INTERNAL EXAM STATUS^RF^^0;16^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,16,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,16,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,16,21,1,0)
The search entry that corresponds to Internal Exam Status.
"^DD",2006.634,2006.634,16,"DT")
2990329
"^DD",2006.634,2006.634,17,0)
IMAGE TYPE ABBREVIATION^RF^^0;17^K:$L(X)>4!($L(X)<1) X
"^DD",2006.634,2006.634,17,3)
Answer must be 1-4 characters in length.
"^DD",2006.634,2006.634,17,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,17,21,1,0)
The search entry that corresponds to Image Type Abbreviation.
"^DD",2006.634,2006.634,17,"DT")
2990329
"^DD",2006.634,2006.634,18,0)
PATIENT LOCATION ABBREV^RF^^0;18^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,18,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,18,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,18,21,1,0)
The search entry that corresponds to Patient Location Abbreviation.
"^DD",2006.634,2006.634,18,"DT")
3010820
"^DD",2006.634,2006.634,19,0)
PATIENT LOCATION NAME^RF^^0;19^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,19,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,19,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,19,21,1,0)
The search entry that corresponds to the Patient Location Name. 
"^DD",2006.634,2006.634,19,"DT")
3010820
"^DD",2006.634,2006.634,20,0)
INTERPRETING RADIOLOGISTS^RF^^0;20^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,20,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,20,21,0)
^.001^1^1^3020313^^
"^DD",2006.634,2006.634,20,21,1,0)
The search entry that corresponds to the Interpreting Radiologist.
"^DD",2006.634,2006.634,20,"DT")
3010820
"^DD",2006.634,2006.634,21,0)
SSN LAST 4^RF^^0;21^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,21,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,21,21,0)
^^2^2^3020313^
"^DD",2006.634,2006.634,21,21,1,0)
The search entry that corresponds to the last 4 digits of the social 
"^DD",2006.634,2006.634,21,21,2,0)
security number for the patient..
"^DD",2006.634,2006.634,21,"DT")
3010820
"^DD",2006.634,2006.634,22,0)
RADIOLOGY DIVISION^RF^^0;22^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,22,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,22,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,22,21,1,0)
The search entry that corresponds to the Radiology division.
"^DD",2006.634,2006.634,22,"DT")
3010820
"^DD",2006.634,2006.634,23,0)
SITE CODE^RF^^0;23^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,23,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,23,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,23,21,1,0)
The search entry that corresponds to the Site code.
"^DD",2006.634,2006.634,23,"DT")
3010820
"^DD",2006.634,2006.634,24,0)
INTERP BY LOGON RADIOLOGIST?^S^Y:YES;N:NO;^0;24^Q
"^DD",2006.634,2006.634,24,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,24,21,1,0)
The search entry that corresponds to Interpreted By Login Radiologist.
"^DD",2006.634,2006.634,24,"DT")
3011106
"^DD",2006.634,2006.634,25,0)
PROCEDURE MODIFIER^F^^0;25^K:$L(X)>30!($L(X)<2) X
"^DD",2006.634,2006.634,25,3)
Answer must be 2-30 characters in length.
"^DD",2006.634,2006.634,25,21,0)
^^1^1^3030501^
"^DD",2006.634,2006.634,25,21,1,0)
The search entry that corresponds to Procedure Modifier.
"^DD",2006.634,2006.634,25,"DT")
3030501
"^DD",2006.634,2006.634,26,0)
PATIENT LOCATION TYPE^F^^0;26^K:$L(X)>10!($L(X)<1) X
"^DD",2006.634,2006.634,26,3)
Answer must be 1-10 characters in length.
"^DD",2006.634,2006.634,26,21,0)
^^1^1^3030501^
"^DD",2006.634,2006.634,26,21,1,0)
The search entry that corresponds to Patient Location Type.
"^DD",2006.634,2006.634,26,"DT")
3030501
"^DIC",2006.63,2006.63,0)
MAG RAD LIST DATA ELEMENTS^2006.63
"^DIC",2006.63,2006.63,0,"GL")
^MAG(2006.63,
"^DIC",2006.63,2006.63,"%D",0)
^1.001^19^19^3020313^^
"^DIC",2006.63,2006.63,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.63,2006.63,"%D",2,0)
 |                                                               |
"^DIC",2006.63,2006.63,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.63,2006.63,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.63,2006.63,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.63,2006.63,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.63,2006.63,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.63,2006.63,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.63,2006.63,"%D",9,0)
 |                                                               |
"^DIC",2006.63,2006.63,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.63,2006.63,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.63,2006.63,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.63,2006.63,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.63,2006.63,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.63,2006.63,"%D",15,0)
 |                                                               |
"^DIC",2006.63,2006.63,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.63,2006.63,"%D",17,0)
 
"^DIC",2006.63,2006.63,"%D",18,0)
This file contains a list of data elements made available for VistARad 
"^DIC",2006.63,2006.63,"%D",19,0)
Exam Lists.
"^DIC",2006.63,"B","MAG RAD LIST DATA ELEMENTS",2006.63)

"^DIC",2006.631,2006.631,0)
MAG RAD LISTS DEFINITION^2006.631
"^DIC",2006.631,2006.631,0,"GL")
^MAG(2006.631,
"^DIC",2006.631,2006.631,"%",0)
^1.005^^0
"^DIC",2006.631,2006.631,"%D",0)
^1.001^19^19^3030416^^^
"^DIC",2006.631,2006.631,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.631,2006.631,"%D",2,0)
 |                                                               |
"^DIC",2006.631,2006.631,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.631,2006.631,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.631,2006.631,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.631,2006.631,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.631,2006.631,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.631,2006.631,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.631,2006.631,"%D",9,0)
 |                                                               |
"^DIC",2006.631,2006.631,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.631,2006.631,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.631,2006.631,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.631,2006.631,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.631,2006.631,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.631,2006.631,"%D",15,0)
 |                                                               |
"^DIC",2006.631,2006.631,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.631,2006.631,"%D",17,0)
 
"^DIC",2006.631,2006.631,"%D",18,0)
All exam lists are defined in this file; defines the content and format
"^DIC",2006.631,2006.631,"%D",19,0)
of VistARad Exam Lists.
"^DIC",2006.631,"B","MAG RAD LISTS DEFINITION",2006.631)

"^DIC",2006.634,2006.634,0)
MAGJ ZLIST SEARCH^2006.634
"^DIC",2006.634,2006.634,0,"GL")
^MAG(2006.634,
"^DIC",2006.634,2006.634,"%",0)
^1.005^1^1
"^DIC",2006.634,2006.634,"%",1,0)
MAGJ
"^DIC",2006.634,2006.634,"%","B","MAGJ",1)

"^DIC",2006.634,2006.634,"%D",0)
^^21^21^3000510
"^DIC",2006.634,2006.634,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.634,2006.634,"%D",2,0)
 |                                                               |
"^DIC",2006.634,2006.634,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.634,2006.634,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.634,2006.634,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.634,2006.634,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.634,2006.634,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.634,2006.634,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.634,2006.634,"%D",9,0)
 |                                                               |
"^DIC",2006.634,2006.634,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.634,2006.634,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.634,2006.634,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.634,2006.634,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.634,2006.634,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.634,2006.634,"%D",15,0)
 |                                                               |
"^DIC",2006.634,2006.634,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.634,2006.634,"%D",17,0)
 
"^DIC",2006.634,2006.634,"%D",18,0)
This file is used by the  Imaging VistaRad system to define search logic
"^DIC",2006.634,2006.634,"%D",19,0)
in the MAG RAD LISTS DEFINITION file.  No entries exist in this file, as
"^DIC",2006.634,2006.634,"%D",20,0)
the file definition itself is what is used in the data-entry for defining
"^DIC",2006.634,2006.634,"%D",21,0)
the search logic.
"^DIC",2006.634,"B","MAGJ ZLIST SEARCH",2006.634)

**END**
**END**
