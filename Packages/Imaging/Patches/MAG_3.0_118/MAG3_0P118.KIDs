KIDS Distribution saved on May 01, 2013@16:33:18
VistA Imaging V3.0 - Patch 118 05/01/2013 16:33PM
**KIDS**:MAG*3.0*118^

**INSTALL NAME**
MAG*3.0*118
"BLD",3463,0)
MAG*3.0*118^IMAGING^0^3130501^y
"BLD",3463,1,0)
^^123^123^3130501^
"BLD",3463,1,1,0)
Version 3.0 Patch 118 - DICOM Importer II BuildNumber 4525
"BLD",3463,1,2,0)
 
"BLD",3463,1,3,0)
 
"BLD",3463,1,4,0)
Routines:
"BLD",3463,1,5,0)
MAGDCCS     new value = 66427733
"BLD",3463,1,6,0)
MAGDGMRC    new value = 36374245
"BLD",3463,1,7,0)
MAGDLB1     new value = 55692202
"BLD",3463,1,8,0)
MAGDLB6     new value = 5964230
"BLD",3463,1,9,0)
MAGDMEDJ    new value = 30422298
"BLD",3463,1,10,0)
MAGDQR00    new value = 4967195
"BLD",3463,1,11,0)
MAGDQR01    new value = 37721625
"BLD",3463,1,12,0)
MAGDQR02    new value = 63705354
"BLD",3463,1,13,0)
MAGDQR03    new value = 216009721
"BLD",3463,1,14,0)
MAGDQR04    new value = 138218574
"BLD",3463,1,15,0)
MAGDQR05    new value = 49847313
"BLD",3463,1,16,0)
MAGDQR06    new value = 59258858
"BLD",3463,1,17,0)
MAGDQR07    new value = 4766521
"BLD",3463,1,18,0)
MAGDQR08    new value = 58325682
"BLD",3463,1,19,0)
MAGDQR09    new value = 39831535
"BLD",3463,1,20,0)
MAGDQR10    new value = 9045803
"BLD",3463,1,21,0)
MAGDQR11    new value = 6241369
"BLD",3463,1,22,0)
MAGDQR12    new value = 11594014
"BLD",3463,1,23,0)
MAGDQR13    new value = 68282867
"BLD",3463,1,24,0)
MAGDQR22    new value = 9067474
"BLD",3463,1,25,0)
MAGDQR23    new value = 5722979
"BLD",3463,1,26,0)
MAGDQR31    new value = 8494742
"BLD",3463,1,27,0)
MAGDQR32    new value = 7433299
"BLD",3463,1,28,0)
MAGDQR71    new value = 5273821
"BLD",3463,1,29,0)
MAGDQR72    new value = 6230687
"BLD",3463,1,30,0)
MAGDQR73    new value = 6999469
"BLD",3463,1,31,0)
MAGDQR74    new value = 9439259
"BLD",3463,1,32,0)
MAGDQRUE    new value = 4782470
"BLD",3463,1,33,0)
MAGDQRUL    new value = 9509874
"BLD",3463,1,34,0)
MAGDRPC8    new value = 63429339
"BLD",3463,1,35,0)
MAGDRPC9    new value = 73201561
"BLD",3463,1,36,0)
MAGDRPCA    new value = 96716003
"BLD",3463,1,37,0)
MAGDRPCB    new value = 129973111
"BLD",3463,1,38,0)
MAGFXQRS    new value = 5583745
"BLD",3463,1,39,0)
MAGGTID     new value = 64976541
"BLD",3463,1,40,0)
MAGIP118    new value = 140430902
"BLD",3463,1,41,0)
MAGJUTL6    new value = 9257634
"BLD",3463,1,42,0)
MAGKIDS1    new value = 40122481
"BLD",3463,1,43,0)
MAGUAUD     new value = 5675527
"BLD",3463,1,44,0)
MAGUE001    new value = 10282269
"BLD",3463,1,45,0)
MAGUE002    new value = 6868694
"BLD",3463,1,46,0)
MAGUE004    new value = 3837996
"BLD",3463,1,47,0)
MAGUE005    new value = 3722038
"BLD",3463,1,48,0)
MAGUFFLA    new value = 8770819
"BLD",3463,1,49,0)
MAGUFFLL    new value = 6710816
"BLD",3463,1,50,0)
MAGUPSE     new value = 4463670
"BLD",3463,1,51,0)
MAGURQRS    new value = 5067518
"BLD",3463,1,52,0)
MAGVAC01    new value = 52937887
"BLD",3463,1,53,0)
MAGVAD01    new value = 4168174
"BLD",3463,1,54,0)
MAGVAD02    new value = 7021893
"BLD",3463,1,55,0)
MAGVAF01    new value = 96471020
"BLD",3463,1,56,0)
MAGVAF02    new value = 5352804
"BLD",3463,1,57,0)
MAGVAF03    new value = 133628281
"BLD",3463,1,58,0)
MAGVAF04    new value = 4868004
"BLD",3463,1,59,0)
MAGVAF05    new value = 7798795
"BLD",3463,1,60,0)
MAGVAG01    new value = 4532733
"BLD",3463,1,61,0)
MAGVAG02    new value = 77173020
"BLD",3463,1,62,0)
MAGVAG03    new value = 74285507
"BLD",3463,1,63,0)
MAGVAG04    new value = 66728252
"BLD",3463,1,64,0)
MAGVAKL1    new value = 31327671
"BLD",3463,1,65,0)
MAGVAQ01    new value = 87039259
"BLD",3463,1,66,0)
MAGVAQ02    new value = 45403991
"BLD",3463,1,67,0)
MAGVAU01    new value = 18289481
"BLD",3463,1,68,0)
MAGVD001    new value = 16780675
"BLD",3463,1,69,0)
MAGVD002    new value = 7446987
"BLD",3463,1,70,0)
MAGVD003    new value = 7699485
"BLD",3463,1,71,0)
MAGVD004    new value = 6940481
"BLD",3463,1,72,0)
MAGVD005    new value = 4474227
"BLD",3463,1,73,0)
MAGVD006    new value = 9747291
"BLD",3463,1,74,0)
MAGVD007    new value = 6560103
"BLD",3463,1,75,0)
MAGVD008    new value = 6497121
"BLD",3463,1,76,0)
MAGVD010    new value = 13079258
"BLD",3463,1,77,0)
MAGVDATE    new value = 5037019
"BLD",3463,1,78,0)
MAGVDGWP    new value = 137738696
"BLD",3463,1,79,0)
MAGVGUID    new value = 34342476
"BLD",3463,1,80,0)
MAGVIM01    new value = 189891368
"BLD",3463,1,81,0)
MAGVIM02    new value = 85608956
"BLD",3463,1,82,0)
MAGVIM03    new value = 41664423
"BLD",3463,1,83,0)
MAGVIM04    new value = 52513000
"BLD",3463,1,84,0)
MAGVIM05    new value = 120062662
"BLD",3463,1,85,0)
MAGVIM06    new value = 74879511
"BLD",3463,1,86,0)
MAGVIM07    new value = 57953558
"BLD",3463,1,87,0)
MAGVIM08    new value = 11155831
"BLD",3463,1,88,0)
MAGVIM09    new value = 12035756
"BLD",3463,1,89,0)
MAGVIM10    new value = 23098643
"BLD",3463,1,90,0)
MAGVORDR    new value = 20723443
"BLD",3463,1,91,0)
MAGVRS01    new value = 3699007
"BLD",3463,1,92,0)
MAGVRS04    new value = 4005478
"BLD",3463,1,93,0)
MAGVRS05    new value = 3883384
"BLD",3463,1,94,0)
MAGVRS06    new value = 4241857
"BLD",3463,1,95,0)
MAGVRS07    new value = 4131532
"BLD",3463,1,96,0)
MAGVRS08    new value = 33958165
"BLD",3463,1,97,0)
MAGVRS09    new value = 4813861
"BLD",3463,1,98,0)
MAGVRS11    new value = 3844243
"BLD",3463,1,99,0)
MAGVRS14    new value = 6147415
"BLD",3463,1,100,0)
MAGVRS15    new value = 5110681
"BLD",3463,1,101,0)
MAGVRS21    new value = 3838605
"BLD",3463,1,102,0)
MAGVRS24    new value = 6638693
"BLD",3463,1,103,0)
MAGVRS31    new value = 4232355
"BLD",3463,1,104,0)
MAGVRS41    new value = 182345011
"BLD",3463,1,105,0)
MAGVRS42    new value = 33489526
"BLD",3463,1,106,0)
MAGVRS43    new value = 12222384
"BLD",3463,1,107,0)
MAGVRS44    new value = 40208831
"BLD",3463,1,108,0)
MAGVRS45    new value = 10063504
"BLD",3463,1,109,0)
MAGVRS46    new value = 12606360
"BLD",3463,1,110,0)
MAGVRS51    new value = 82412262
"BLD",3463,1,111,0)
MAGVRS52    new value = 24276946
"BLD",3463,1,112,0)
MAGVRS61    new value = 94036467
"BLD",3463,1,113,0)
MAGVRS71    new value = 4464077
"BLD",3463,1,114,0)
MAGVRS81    new value = 20670020
"BLD",3463,1,115,0)
MAGVRS82    new value = 14108947
"BLD",3463,1,116,0)
MAGVSOPC    new value = 6655177
"BLD",3463,1,117,0)
MAGVSOPU    new value = 118959735
"BLD",3463,1,118,0)
MAGVSTDY    new value = 7218427
"BLD",3463,1,119,0)
MAGVUID     new value = 62918469
"BLD",3463,1,120,0)
MAGVUID1    new value = 4997448
"BLD",3463,1,121,0)
 
"BLD",3463,1,122,0)
Please note that routine MAGIP118 is deleted after the KIDS Build is
"BLD",3463,1,123,0)
installed.
"BLD",3463,4,0)
^9.64PA^2006.9422^40
"BLD",3463,6.3)
V3.0p118Build4525_T35
"BLD",3463,4,2005,0)
2005
"BLD",3463,4,2005,2,0)
^9.641^2005^1
"BLD",3463,4,2005,2,2005,0)
IMAGE  (File-top level)
"BLD",3463,4,2005,2,2005,1,0)
^9.6411^45^1
"BLD",3463,4,2005,2,2005,1,45,0)
ORIGIN INDEX
"BLD",3463,4,2005,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005,224)

"BLD",3463,4,2005.1,0)
2005.1
"BLD",3463,4,2005.1,2,0)
^9.641^2005.1^1
"BLD",3463,4,2005.1,2,2005.1,0)
IMAGE AUDIT  (File-top level)
"BLD",3463,4,2005.1,2,2005.1,1,0)
^9.6411^45^1
"BLD",3463,4,2005.1,2,2005.1,1,45,0)
ORIGIN INDEX
"BLD",3463,4,2005.1,222)
y^y^p^^^^n^^n
"BLD",3463,4,2005.1,224)

"BLD",3463,4,2005.6,0)
2005.6
"BLD",3463,4,2005.6,222)
y^y^f^^^^n
"BLD",3463,4,2005.61,0)
2005.61
"BLD",3463,4,2005.61,222)
y^y^f^^^^n
"BLD",3463,4,2005.62,0)
2005.62
"BLD",3463,4,2005.62,222)
y^y^f^^^^n^^n
"BLD",3463,4,2005.62,224)

"BLD",3463,4,2005.63,0)
2005.63
"BLD",3463,4,2005.63,222)
y^y^f^^^^n
"BLD",3463,4,2005.64,0)
2005.64
"BLD",3463,4,2005.64,222)
y^y^f^^^^n
"BLD",3463,4,2005.65,0)
2005.65
"BLD",3463,4,2005.65,222)
y^y^f^^^^n
"BLD",3463,4,2005.66,0)
2005.66
"BLD",3463,4,2005.66,222)
y^y^f^^^^n
"BLD",3463,4,2005.8,0)
2005.8
"BLD",3463,4,2005.8,222)
y^y^f^^^^n
"BLD",3463,4,2006.1,0)
2006.1
"BLD",3463,4,2006.1,222)
y^y^f^^^^n^^n
"BLD",3463,4,2006.1,224)

"BLD",3463,4,2006.539,0)
2006.539
"BLD",3463,4,2006.539,2,0)
^9.641^2006.539^1
"BLD",3463,4,2006.539,2,2006.539,0)
DICOM UID SPECIFIC ACTION  (File-top level)
"BLD",3463,4,2006.539,2,2006.539,1,0)
^9.6411^.01^1
"BLD",3463,4,2006.539,2,2006.539,1,.01,0)
UID
"BLD",3463,4,2006.539,222)
y^y^p^^^^n^^n
"BLD",3463,4,2006.539,224)

"BLD",3463,4,2006.575,0)
2006.575
"BLD",3463,4,2006.575,2,0)
^9.641^2006.575^1
"BLD",3463,4,2006.575,2,2006.575,0)
DICOM FAILED IMAGES  (File-top level)
"BLD",3463,4,2006.575,2,2006.575,1,0)
^9.6411^28^2
"BLD",3463,4,2006.575,2,2006.575,1,.01,0)
FILEPATH
"BLD",3463,4,2006.575,2,2006.575,1,28,0)
MACHINE ID
"BLD",3463,4,2006.575,222)
y^y^p^^^^n^^n
"BLD",3463,4,2006.575,224)

"BLD",3463,4,2006.911,0)
2006.911
"BLD",3463,4,2006.911,222)
y^y^f^^^^n
"BLD",3463,4,2006.912,0)
2006.912
"BLD",3463,4,2006.912,222)
y^y^f^^^^n
"BLD",3463,4,2006.913,0)
2006.913
"BLD",3463,4,2006.913,222)
y^y^f^^^^n
"BLD",3463,4,2006.914,0)
2006.914
"BLD",3463,4,2006.914,222)
y^y^f^^n^^y^m^n
"BLD",3463,4,2006.915,0)
2006.915
"BLD",3463,4,2006.915,222)
y^y^f^^^^n
"BLD",3463,4,2006.916,0)
2006.916
"BLD",3463,4,2006.916,222)
y^y^f^^^^n
"BLD",3463,4,2006.917,0)
2006.917
"BLD",3463,4,2006.917,222)
y^y^f^^^^n
"BLD",3463,4,2006.918,0)
2006.918
"BLD",3463,4,2006.918,222)
y^y^f^^^^n
"BLD",3463,4,2006.9191,0)
2006.9191
"BLD",3463,4,2006.9191,222)
y^y^f^^^^n
"BLD",3463,4,2006.9192,0)
2006.9192
"BLD",3463,4,2006.9192,222)
y^y^f^^^^n^^n
"BLD",3463,4,2006.9192,224)

"BLD",3463,4,2006.9193,0)
2006.9193
"BLD",3463,4,2006.9193,222)
y^y^f^^^^n
"BLD",3463,4,2006.921,0)
2006.921
"BLD",3463,4,2006.921,222)
y^y^f^^^^n
"BLD",3463,4,2006.922,0)
2006.922
"BLD",3463,4,2006.922,222)
y^y^f^^^^n
"BLD",3463,4,2006.923,0)
2006.923
"BLD",3463,4,2006.923,222)
y^y^f^^^^n
"BLD",3463,4,2006.924,0)
2006.924
"BLD",3463,4,2006.924,222)
y^y^f^^^^n
"BLD",3463,4,2006.925,0)
2006.925
"BLD",3463,4,2006.925,222)
y^y^f^^^^n
"BLD",3463,4,2006.926,0)
2006.926
"BLD",3463,4,2006.926,222)
y^y^f^^^^n
"BLD",3463,4,2006.927,0)
2006.927
"BLD",3463,4,2006.927,222)
y^y^f^^n^^y^m^n
"BLD",3463,4,2006.928,0)
2006.928
"BLD",3463,4,2006.928,222)
y^y^f^^^^n
"BLD",3463,4,2006.93,0)
2006.93
"BLD",3463,4,2006.93,222)
y^y^f^^^^n
"BLD",3463,4,2006.931,0)
2006.931
"BLD",3463,4,2006.931,222)
y^y^f^^^^y
"BLD",3463,4,2006.941,0)
2006.941
"BLD",3463,4,2006.941,222)
y^y^f^^^^n
"BLD",3463,4,2006.9412,0)
2006.9412
"BLD",3463,4,2006.9412,222)
y^y^f^^^^y
"BLD",3463,4,2006.9413,0)
2006.9413
"BLD",3463,4,2006.9413,222)
y^y^f^^n^^y^o^n
"BLD",3463,4,2006.9414,0)
2006.9414
"BLD",3463,4,2006.9414,222)
y^y^f^^n^^y^o^n
"BLD",3463,4,2006.9421,0)
2006.9421
"BLD",3463,4,2006.9421,222)
y^y^f^^^^n
"BLD",3463,4,2006.9422,0)
2006.9422
"BLD",3463,4,2006.9422,222)
y^y^f^^^^n
"BLD",3463,4,"APDD",2006.575,2006.575)

"BLD",3463,4,"APDD",2005,2005)

"BLD",3463,4,"APDD",2005,2005,45)

"BLD",3463,4,"APDD",2005.1,2005.1)

"BLD",3463,4,"APDD",2005.1,2005.1,45)

"BLD",3463,4,"APDD",2006.539,2006.539)

"BLD",3463,4,"APDD",2006.539,2006.539,.01)

"BLD",3463,4,"APDD",2006.575,2006.575)

"BLD",3463,4,"APDD",2006.575,2006.575,.01)

"BLD",3463,4,"APDD",2006.575,2006.575,28)

"BLD",3463,4,"B",2005,2005)

"BLD",3463,4,"B",2005.1,2005.1)

"BLD",3463,4,"B",2005.6,2005.6)

"BLD",3463,4,"B",2005.61,2005.61)

"BLD",3463,4,"B",2005.62,2005.62)

"BLD",3463,4,"B",2005.63,2005.63)

"BLD",3463,4,"B",2005.64,2005.64)

"BLD",3463,4,"B",2005.65,2005.65)

"BLD",3463,4,"B",2005.66,2005.66)

"BLD",3463,4,"B",2005.8,2005.8)

"BLD",3463,4,"B",2006.1,2006.1)

"BLD",3463,4,"B",2006.539,2006.539)

"BLD",3463,4,"B",2006.575,2006.575)

"BLD",3463,4,"B",2006.911,2006.911)

"BLD",3463,4,"B",2006.912,2006.912)

"BLD",3463,4,"B",2006.913,2006.913)

"BLD",3463,4,"B",2006.914,2006.914)

"BLD",3463,4,"B",2006.915,2006.915)

"BLD",3463,4,"B",2006.916,2006.916)

"BLD",3463,4,"B",2006.917,2006.917)

"BLD",3463,4,"B",2006.918,2006.918)

"BLD",3463,4,"B",2006.9191,2006.9191)

"BLD",3463,4,"B",2006.9192,2006.9192)

"BLD",3463,4,"B",2006.9193,2006.9193)

"BLD",3463,4,"B",2006.921,2006.921)

"BLD",3463,4,"B",2006.922,2006.922)

"BLD",3463,4,"B",2006.923,2006.923)

"BLD",3463,4,"B",2006.924,2006.924)

"BLD",3463,4,"B",2006.925,2006.925)

"BLD",3463,4,"B",2006.926,2006.926)

"BLD",3463,4,"B",2006.927,2006.927)

"BLD",3463,4,"B",2006.928,2006.928)

"BLD",3463,4,"B",2006.93,2006.93)

"BLD",3463,4,"B",2006.931,2006.931)

"BLD",3463,4,"B",2006.941,2006.941)

"BLD",3463,4,"B",2006.9412,2006.9412)

"BLD",3463,4,"B",2006.9413,2006.9413)

"BLD",3463,4,"B",2006.9414,2006.9414)

"BLD",3463,4,"B",2006.9421,2006.9421)

"BLD",3463,4,"B",2006.9422,2006.9422)

"BLD",3463,"ABNS",0)
^9.66A^^
"BLD",3463,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",3463,"INID")
y^y^n
"BLD",3463,"INIT")
POS^MAGIP118
"BLD",3463,"KRN",0)
^9.67PA^8994^19
"BLD",3463,"KRN",.4,0)
.4
"BLD",3463,"KRN",.4,"NM",0)
^9.68A^3^3
"BLD",3463,"KRN",.4,"NM",1,0)
MAGV-FILEREF-QUERY^^0
"BLD",3463,"KRN",.4,"NM",2,0)
MAGV-PAT-QUERY^^0
"BLD",3463,"KRN",.4,"NM",3,0)
MAGV-PROC-QUERY^^0
"BLD",3463,"KRN",.4,"NM","B","MAGV-FILEREF-QUERY",1)

"BLD",3463,"KRN",.4,"NM","B","MAGV-PAT-QUERY",2)

"BLD",3463,"KRN",.4,"NM","B","MAGV-PROC-QUERY",3)

"BLD",3463,"KRN",.401,0)
.401
"BLD",3463,"KRN",.401,"NM",0)
^9.68A^4^4
"BLD",3463,"KRN",.401,"NM",1,0)
MAGV-FILEREF-QUERY^^0
"BLD",3463,"KRN",.401,"NM",2,0)
MAGV-PAT-QUERY^^0
"BLD",3463,"KRN",.401,"NM",3,0)
MAGV-PROC-QUERY^^0
"BLD",3463,"KRN",.401,"NM",4,0)
MAGVA-ASYNC-STORAGE-ERRORS^^0
"BLD",3463,"KRN",.401,"NM","B","MAGV-FILEREF-QUERY",1)

"BLD",3463,"KRN",.401,"NM","B","MAGV-PAT-QUERY",2)

"BLD",3463,"KRN",.401,"NM","B","MAGV-PROC-QUERY",3)

"BLD",3463,"KRN",.401,"NM","B","MAGVA-ASYNC-STORAGE-ERRORS",4)

"BLD",3463,"KRN",.402,0)
.402
"BLD",3463,"KRN",.402,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.403,0)
.403
"BLD",3463,"KRN",.5,0)
.5
"BLD",3463,"KRN",.84,0)
.84
"BLD",3463,"KRN",.84,"NM",0)
^9.68A^^
"BLD",3463,"KRN",3.6,0)
3.6
"BLD",3463,"KRN",3.8,0)
3.8
"BLD",3463,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",3463,"KRN",9.2,0)
9.2
"BLD",3463,"KRN",9.8,0)
9.8
"BLD",3463,"KRN",9.8,"NM",0)
^9.68A^115^115
"BLD",3463,"KRN",9.8,"NM",1,0)
MAGDCCS^^0^B66427733
"BLD",3463,"KRN",9.8,"NM",2,0)
MAGDGMRC^^0^B36374245
"BLD",3463,"KRN",9.8,"NM",3,0)
MAGDLB1^^0^B55692202
"BLD",3463,"KRN",9.8,"NM",4,0)
MAGDLB6^^0^B5964230
"BLD",3463,"KRN",9.8,"NM",5,0)
MAGDMEDJ^^0^B30422298
"BLD",3463,"KRN",9.8,"NM",6,0)
MAGDQR00^^0^B4967195
"BLD",3463,"KRN",9.8,"NM",7,0)
MAGDQR01^^0^B37721625
"BLD",3463,"KRN",9.8,"NM",8,0)
MAGDQR02^^0^B63705354
"BLD",3463,"KRN",9.8,"NM",9,0)
MAGDQR03^^0^B216009721
"BLD",3463,"KRN",9.8,"NM",10,0)
MAGDQR04^^0^B138218574
"BLD",3463,"KRN",9.8,"NM",11,0)
MAGDQR05^^0^B49847313
"BLD",3463,"KRN",9.8,"NM",12,0)
MAGDQR06^^0^B59258858
"BLD",3463,"KRN",9.8,"NM",13,0)
MAGDQR07^^0^B4766521
"BLD",3463,"KRN",9.8,"NM",14,0)
MAGDQR08^^0^B58325682
"BLD",3463,"KRN",9.8,"NM",15,0)
MAGDQR09^^0^B39831535
"BLD",3463,"KRN",9.8,"NM",16,0)
MAGDQR10^^0^B9045803
"BLD",3463,"KRN",9.8,"NM",17,0)
MAGDQR11^^0^B6241369
"BLD",3463,"KRN",9.8,"NM",18,0)
MAGDQR12^^0^B11594014
"BLD",3463,"KRN",9.8,"NM",19,0)
MAGDQR13^^0^B68282867
"BLD",3463,"KRN",9.8,"NM",20,0)
MAGDQR22^^0^B9067474
"BLD",3463,"KRN",9.8,"NM",21,0)
MAGDQR23^^0^B5722979
"BLD",3463,"KRN",9.8,"NM",22,0)
MAGDQR31^^0^B8494742
"BLD",3463,"KRN",9.8,"NM",23,0)
MAGDQR32^^0^B7433299
"BLD",3463,"KRN",9.8,"NM",24,0)
MAGDQR71^^0^B5273821
"BLD",3463,"KRN",9.8,"NM",25,0)
MAGDQR72^^0^B6230687
"BLD",3463,"KRN",9.8,"NM",26,0)
MAGDQR73^^0^B6999469
"BLD",3463,"KRN",9.8,"NM",27,0)
MAGDQR74^^0^B9439259
"BLD",3463,"KRN",9.8,"NM",28,0)
MAGDQRUE^^0^B4782470
"BLD",3463,"KRN",9.8,"NM",29,0)
MAGDQRUL^^0^B9509874
"BLD",3463,"KRN",9.8,"NM",30,0)
MAGDRPC8^^0^B63429339
"BLD",3463,"KRN",9.8,"NM",31,0)
MAGDRPC9^^0^B73201561
"BLD",3463,"KRN",9.8,"NM",32,0)
MAGDRPCA^^0^B96716003
"BLD",3463,"KRN",9.8,"NM",33,0)
MAGDRPCB^^0^B129973111
"BLD",3463,"KRN",9.8,"NM",34,0)
MAGFXQRS^^0^B5583745
"BLD",3463,"KRN",9.8,"NM",35,0)
MAGGTID^^0^B64976541
"BLD",3463,"KRN",9.8,"NM",36,0)
MAGJUTL6^^0^B9257634
"BLD",3463,"KRN",9.8,"NM",37,0)
MAGKIDS1^^0^B40122481
"BLD",3463,"KRN",9.8,"NM",38,0)
MAGUAUD^^0^B5675527
"BLD",3463,"KRN",9.8,"NM",39,0)
MAGUE001^^0^B10282269
"BLD",3463,"KRN",9.8,"NM",40,0)
MAGUE002^^0^B6868694
"BLD",3463,"KRN",9.8,"NM",41,0)
MAGUE004^^0^B3837996
"BLD",3463,"KRN",9.8,"NM",42,0)
MAGUE005^^0^B3722038
"BLD",3463,"KRN",9.8,"NM",43,0)
MAGUFFLA^^0^B8770819
"BLD",3463,"KRN",9.8,"NM",44,0)
MAGUFFLL^^0^B6710816
"BLD",3463,"KRN",9.8,"NM",45,0)
MAGUPSE^^0^B4463670
"BLD",3463,"KRN",9.8,"NM",46,0)
MAGURQRS^^0^B5067518
"BLD",3463,"KRN",9.8,"NM",47,0)
MAGVAC01^^0^B52937887
"BLD",3463,"KRN",9.8,"NM",48,0)
MAGVAD01^^0^B4168174
"BLD",3463,"KRN",9.8,"NM",49,0)
MAGVAD02^^0^B7021893
"BLD",3463,"KRN",9.8,"NM",50,0)
MAGVAF01^^0^B96471020
"BLD",3463,"KRN",9.8,"NM",51,0)
MAGVAF02^^0^B5352804
"BLD",3463,"KRN",9.8,"NM",52,0)
MAGVAF03^^0^B133628281
"BLD",3463,"KRN",9.8,"NM",53,0)
MAGVAF04^^0^B4868004
"BLD",3463,"KRN",9.8,"NM",54,0)
MAGVAF05^^0^B7798795
"BLD",3463,"KRN",9.8,"NM",55,0)
MAGVAG01^^0^B4532733
"BLD",3463,"KRN",9.8,"NM",56,0)
MAGVAG02^^0^B77173020
"BLD",3463,"KRN",9.8,"NM",57,0)
MAGVAG03^^0^B74285507
"BLD",3463,"KRN",9.8,"NM",58,0)
MAGVAG04^^0^B66728252
"BLD",3463,"KRN",9.8,"NM",59,0)
MAGVAKL1^^0^B31327671
"BLD",3463,"KRN",9.8,"NM",60,0)
MAGVAQ01^^0^B87039259
"BLD",3463,"KRN",9.8,"NM",61,0)
MAGVAQ02^^0^B45403991
"BLD",3463,"KRN",9.8,"NM",62,0)
MAGVAU01^^0^B18289481
"BLD",3463,"KRN",9.8,"NM",63,0)
MAGVD001^^0^B16780675
"BLD",3463,"KRN",9.8,"NM",64,0)
MAGVD002^^0^B7446987
"BLD",3463,"KRN",9.8,"NM",65,0)
MAGVD003^^0^B7699485
"BLD",3463,"KRN",9.8,"NM",66,0)
MAGVD004^^0^B6940481
"BLD",3463,"KRN",9.8,"NM",67,0)
MAGVD005^^0^B4474227
"BLD",3463,"KRN",9.8,"NM",68,0)
MAGVD006^^0^B9747291
"BLD",3463,"KRN",9.8,"NM",69,0)
MAGVD007^^0^B6560103
"BLD",3463,"KRN",9.8,"NM",70,0)
MAGVD008^^0^B6497121
"BLD",3463,"KRN",9.8,"NM",71,0)
MAGVD010^^0^B13079258
"BLD",3463,"KRN",9.8,"NM",72,0)
MAGVDATE^^0^B5037019
"BLD",3463,"KRN",9.8,"NM",73,0)
MAGVDGWP^^0^B137738696
"BLD",3463,"KRN",9.8,"NM",74,0)
MAGVGUID^^0^B34342476
"BLD",3463,"KRN",9.8,"NM",75,0)
MAGVIM01^^0^B189891368
"BLD",3463,"KRN",9.8,"NM",76,0)
MAGVIM02^^0^B85608956
"BLD",3463,"KRN",9.8,"NM",77,0)
MAGVIM03^^0^B41664423
"BLD",3463,"KRN",9.8,"NM",78,0)
MAGVIM04^^0^B52513000
"BLD",3463,"KRN",9.8,"NM",79,0)
MAGVIM05^^0^B120062662
"BLD",3463,"KRN",9.8,"NM",80,0)
MAGVIM06^^0^B74879511
"BLD",3463,"KRN",9.8,"NM",81,0)
MAGVIM07^^0^B57953558
"BLD",3463,"KRN",9.8,"NM",82,0)
MAGVIM08^^0^B11155831
"BLD",3463,"KRN",9.8,"NM",83,0)
MAGVIM09^^0^B12035756
"BLD",3463,"KRN",9.8,"NM",84,0)
MAGVIM10^^0^B23098643
"BLD",3463,"KRN",9.8,"NM",85,0)
MAGVORDR^^0^B20723443
"BLD",3463,"KRN",9.8,"NM",86,0)
MAGVRS01^^0^B3699007
"BLD",3463,"KRN",9.8,"NM",87,0)
MAGVRS04^^0^B4005478
"BLD",3463,"KRN",9.8,"NM",88,0)
MAGVRS05^^0^B3883384
"BLD",3463,"KRN",9.8,"NM",89,0)
MAGVRS06^^0^B4241857
"BLD",3463,"KRN",9.8,"NM",90,0)
MAGVRS07^^0^B4131532
"BLD",3463,"KRN",9.8,"NM",91,0)
MAGVRS08^^0^B33958165
"BLD",3463,"KRN",9.8,"NM",92,0)
MAGVRS09^^0^B4813861
"BLD",3463,"KRN",9.8,"NM",93,0)
MAGVRS11^^0^B3844243
"BLD",3463,"KRN",9.8,"NM",94,0)
MAGVRS14^^0^B6147415
"BLD",3463,"KRN",9.8,"NM",95,0)
MAGVRS15^^0^B5110681
"BLD",3463,"KRN",9.8,"NM",96,0)
MAGVRS21^^0^B3838605
"BLD",3463,"KRN",9.8,"NM",97,0)
MAGVRS24^^0^B6638693
"BLD",3463,"KRN",9.8,"NM",98,0)
MAGVRS31^^0^B4232355
"BLD",3463,"KRN",9.8,"NM",99,0)
MAGVRS41^^0^B182345011
"BLD",3463,"KRN",9.8,"NM",100,0)
MAGVRS42^^0^B33489526
"BLD",3463,"KRN",9.8,"NM",101,0)
MAGVRS43^^0^B12222384
"BLD",3463,"KRN",9.8,"NM",102,0)
MAGVRS44^^0^B40208831
"BLD",3463,"KRN",9.8,"NM",103,0)
MAGVRS45^^0^B10063504
"BLD",3463,"KRN",9.8,"NM",104,0)
MAGVRS46^^0^B12606360
"BLD",3463,"KRN",9.8,"NM",105,0)
MAGVRS51^^0^B82412262
"BLD",3463,"KRN",9.8,"NM",106,0)
MAGVRS52^^0^B24276946
"BLD",3463,"KRN",9.8,"NM",107,0)
MAGVRS61^^0^B94036467
"BLD",3463,"KRN",9.8,"NM",108,0)
MAGVRS71^^0^B4464077
"BLD",3463,"KRN",9.8,"NM",109,0)
MAGVRS81^^0^B20670020
"BLD",3463,"KRN",9.8,"NM",110,0)
MAGVRS82^^0^B14108947
"BLD",3463,"KRN",9.8,"NM",111,0)
MAGVSOPC^^0^B6655177
"BLD",3463,"KRN",9.8,"NM",112,0)
MAGVSOPU^^0^B118959735
"BLD",3463,"KRN",9.8,"NM",113,0)
MAGVSTDY^^0^B7218427
"BLD",3463,"KRN",9.8,"NM",114,0)
MAGVUID^^0^B62918469
"BLD",3463,"KRN",9.8,"NM",115,0)
MAGVUID1^^0^B4997448
"BLD",3463,"KRN",9.8,"NM","B","MAGDCCS",1)

"BLD",3463,"KRN",9.8,"NM","B","MAGDGMRC",2)

"BLD",3463,"KRN",9.8,"NM","B","MAGDLB1",3)

"BLD",3463,"KRN",9.8,"NM","B","MAGDLB6",4)

"BLD",3463,"KRN",9.8,"NM","B","MAGDMEDJ",5)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR00",6)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR01",7)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR02",8)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR03",9)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR04",10)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR05",11)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR06",12)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR07",13)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR08",14)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR09",15)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR10",16)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR11",17)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR12",18)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR13",19)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR22",20)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR23",21)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR31",22)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR32",23)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR71",24)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR72",25)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR73",26)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQR74",27)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQRUE",28)

"BLD",3463,"KRN",9.8,"NM","B","MAGDQRUL",29)

"BLD",3463,"KRN",9.8,"NM","B","MAGDRPC8",30)

"BLD",3463,"KRN",9.8,"NM","B","MAGDRPC9",31)

"BLD",3463,"KRN",9.8,"NM","B","MAGDRPCA",32)

"BLD",3463,"KRN",9.8,"NM","B","MAGDRPCB",33)

"BLD",3463,"KRN",9.8,"NM","B","MAGFXQRS",34)

"BLD",3463,"KRN",9.8,"NM","B","MAGGTID",35)

"BLD",3463,"KRN",9.8,"NM","B","MAGJUTL6",36)

"BLD",3463,"KRN",9.8,"NM","B","MAGKIDS1",37)

"BLD",3463,"KRN",9.8,"NM","B","MAGUAUD",38)

"BLD",3463,"KRN",9.8,"NM","B","MAGUE001",39)

"BLD",3463,"KRN",9.8,"NM","B","MAGUE002",40)

"BLD",3463,"KRN",9.8,"NM","B","MAGUE004",41)

"BLD",3463,"KRN",9.8,"NM","B","MAGUE005",42)

"BLD",3463,"KRN",9.8,"NM","B","MAGUFFLA",43)

"BLD",3463,"KRN",9.8,"NM","B","MAGUFFLL",44)

"BLD",3463,"KRN",9.8,"NM","B","MAGUPSE",45)

"BLD",3463,"KRN",9.8,"NM","B","MAGURQRS",46)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAC01",47)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAD01",48)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAD02",49)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAF01",50)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAF02",51)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAF03",52)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAF04",53)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAF05",54)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAG01",55)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAG02",56)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAG03",57)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAG04",58)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAKL1",59)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAQ01",60)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAQ02",61)

"BLD",3463,"KRN",9.8,"NM","B","MAGVAU01",62)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD001",63)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD002",64)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD003",65)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD004",66)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD005",67)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD006",68)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD007",69)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD008",70)

"BLD",3463,"KRN",9.8,"NM","B","MAGVD010",71)

"BLD",3463,"KRN",9.8,"NM","B","MAGVDATE",72)

"BLD",3463,"KRN",9.8,"NM","B","MAGVDGWP",73)

"BLD",3463,"KRN",9.8,"NM","B","MAGVGUID",74)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM01",75)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM02",76)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM03",77)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM04",78)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM05",79)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM06",80)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM07",81)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM08",82)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM09",83)

"BLD",3463,"KRN",9.8,"NM","B","MAGVIM10",84)

"BLD",3463,"KRN",9.8,"NM","B","MAGVORDR",85)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS01",86)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS04",87)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS05",88)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS06",89)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS07",90)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS08",91)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS09",92)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS11",93)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS14",94)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS15",95)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS21",96)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS24",97)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS31",98)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS41",99)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS42",100)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS43",101)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS44",102)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS45",103)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS46",104)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS51",105)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS52",106)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS61",107)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS71",108)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS81",109)

"BLD",3463,"KRN",9.8,"NM","B","MAGVRS82",110)

"BLD",3463,"KRN",9.8,"NM","B","MAGVSOPC",111)

"BLD",3463,"KRN",9.8,"NM","B","MAGVSOPU",112)

"BLD",3463,"KRN",9.8,"NM","B","MAGVSTDY",113)

"BLD",3463,"KRN",9.8,"NM","B","MAGVUID",114)

"BLD",3463,"KRN",9.8,"NM","B","MAGVUID1",115)

"BLD",3463,"KRN",19,0)
19
"BLD",3463,"KRN",19,"NM",0)
^9.68A^7^7
"BLD",3463,"KRN",19,"NM",1,0)
MAG DICOM VISA^^0
"BLD",3463,"KRN",19,"NM",2,0)
MAG SYS-DELETE STUDY^^0
"BLD",3463,"KRN",19,"NM",3,0)
MAGV AE SEC MX SETTINGS^^0
"BLD",3463,"KRN",19,"NM",4,0)
MAGV HDIG MENU^^0
"BLD",3463,"KRN",19,"NM",5,0)
MAGVA ASYNC STORAGE ERR LIST^^0
"BLD",3463,"KRN",19,"NM",6,0)
MAGVA ASYNC STORAGE ERR QURY^^0
"BLD",3463,"KRN",19,"NM",7,0)
MAGVA ASYNC STORAGE ERR REQU^^0
"BLD",3463,"KRN",19,"NM","B","MAG DICOM VISA",1)

"BLD",3463,"KRN",19,"NM","B","MAG SYS-DELETE STUDY",2)

"BLD",3463,"KRN",19,"NM","B","MAGV AE SEC MX SETTINGS",3)

"BLD",3463,"KRN",19,"NM","B","MAGV HDIG MENU",4)

"BLD",3463,"KRN",19,"NM","B","MAGVA ASYNC STORAGE ERR LIST",5)

"BLD",3463,"KRN",19,"NM","B","MAGVA ASYNC STORAGE ERR QURY",6)

"BLD",3463,"KRN",19,"NM","B","MAGVA ASYNC STORAGE ERR REQU",7)

"BLD",3463,"KRN",19.1,0)
19.1
"BLD",3463,"KRN",19.1,"NM",0)
^9.68A^5^5
"BLD",3463,"KRN",19.1,"NM",1,0)
MAGV IMPORT MEDIA STAGER^^0
"BLD",3463,"KRN",19.1,"NM",2,0)
MAGV IMPORT RECON ARTIFACT^^0
"BLD",3463,"KRN",19.1,"NM",3,0)
MAGV IMPORT RECON CONTRACT^^0
"BLD",3463,"KRN",19.1,"NM",4,0)
MAGV IMPORT REPORTS^^0
"BLD",3463,"KRN",19.1,"NM",5,0)
MAGV IMPORT STAGE MEDIA ADV^^0
"BLD",3463,"KRN",19.1,"NM","B","MAGV IMPORT MEDIA STAGER",1)

"BLD",3463,"KRN",19.1,"NM","B","MAGV IMPORT RECON ARTIFACT",2)

"BLD",3463,"KRN",19.1,"NM","B","MAGV IMPORT RECON CONTRACT",3)

"BLD",3463,"KRN",19.1,"NM","B","MAGV IMPORT REPORTS",4)

"BLD",3463,"KRN",19.1,"NM","B","MAGV IMPORT STAGE MEDIA ADV",5)

"BLD",3463,"KRN",101,0)
101
"BLD",3463,"KRN",101,"NM",0)
^9.68A^^
"BLD",3463,"KRN",409.61,0)
409.61
"BLD",3463,"KRN",771,0)
771
"BLD",3463,"KRN",771,"NM",0)
^9.68A^^
"BLD",3463,"KRN",870,0)
870
"BLD",3463,"KRN",870,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.51,0)
8989.51
"BLD",3463,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.52,0)
8989.52
"BLD",3463,"KRN",8994,0)
8994
"BLD",3463,"KRN",8994,"NM",0)
^9.68A^130^130
"BLD",3463,"KRN",8994,"NM",1,0)
MAG CFIND QUERY^^0
"BLD",3463,"KRN",8994,"NM",2,0)
MAG DICOM CHECK AE TITLE^^0
"BLD",3463,"KRN",8994,"NM",3,0)
MAG DICOM RADIOLOGY PROCEDURES^^0
"BLD",3463,"KRN",8994,"NM",4,0)
MAG DICOM VISTA AE TITLE^^0
"BLD",3463,"KRN",8994,"NM",5,0)
MAG EVENT AUDIT^^0
"BLD",3463,"KRN",8994,"NM",6,0)
MAG FILEMAN FIELD ATTS^^0
"BLD",3463,"KRN",8994,"NM",7,0)
MAG FILEMAN FIELD LIST^^0
"BLD",3463,"KRN",8994,"NM",8,0)
MAG STUDY UID QUERY^^0
"BLD",3463,"KRN",8994,"NM",9,0)
MAGV ADD WORK ITEM TAGS^^0
"BLD",3463,"KRN",8994,"NM",10,0)
MAGV ATTACH IMAGE INSTANCE^^0
"BLD",3463,"KRN",8994,"NM",11,0)
MAGV ATTACH PAT PROC REF^^0
"BLD",3463,"KRN",8994,"NM",12,0)
MAGV ATTACH SERIES^^0
"BLD",3463,"KRN",8994,"NM",13,0)
MAGV ATTACH SOP^^0
"BLD",3463,"KRN",8994,"NM",14,0)
MAGV ATTACH STUDY^^0
"BLD",3463,"KRN",8994,"NM",15,0)
MAGV CONFIRM RAD ORDER^^0
"BLD",3463,"KRN",8994,"NM",16,0)
MAGV CREATE DICOM FAILED IMAGE^^0
"BLD",3463,"KRN",8994,"NM",17,0)
MAGV CREATE PAT REF^^0
"BLD",3463,"KRN",8994,"NM",18,0)
MAGV CREATE WORK ITEM^^0
"BLD",3463,"KRN",8994,"NM",19,0)
MAGV DELETE DICOM FAILED IMAGE^^0
"BLD",3463,"KRN",8994,"NM",20,0)
MAGV DELETE WORK ITEM^^0
"BLD",3463,"KRN",8994,"NM",21,0)
MAGV DGW ACTION UID LIST^^0
"BLD",3463,"KRN",8994,"NM",22,0)
MAGV DGW INSTRUMENT LIST^^0
"BLD",3463,"KRN",8994,"NM",23,0)
MAGV DGW MODALITY LIST^^0
"BLD",3463,"KRN",8994,"NM",24,0)
MAGV DICOM GET COUNT^^0
"BLD",3463,"KRN",8994,"NM",25,0)
MAGV DICOM SET INSTRUMENT LIST^^0
"BLD",3463,"KRN",8994,"NM",26,0)
MAGV DICOM SET MODALITY LIST^^0
"BLD",3463,"KRN",8994,"NM",27,0)
MAGV FIND PAT REF^^0
"BLD",3463,"KRN",8994,"NM",28,0)
MAGV FIND PROC REF^^0
"BLD",3463,"KRN",8994,"NM",29,0)
MAGV FIND SERIES BY REFERENCE^^0
"BLD",3463,"KRN",8994,"NM",30,0)
MAGV FIND SERIES BY UID^^0
"BLD",3463,"KRN",8994,"NM",31,0)
MAGV FIND SOP BY UID^^0
"BLD",3463,"KRN",8994,"NM",32,0)
MAGV FIND STUDY BY UID^^0
"BLD",3463,"KRN",8994,"NM",33,0)
MAGV FIND STUDY TIU^^0
"BLD",3463,"KRN",8994,"NM",34,0)
MAGV FIND WORK ITEM^^0
"BLD",3463,"KRN",8994,"NM",35,0)
MAGV GET ACCESSION NUM^^0
"BLD",3463,"KRN",8994,"NM",36,0)
MAGV GET DGW CONFIG^^0
"BLD",3463,"KRN",8994,"NM",37,0)
MAGV GET DICOM FAILED IMAGE^^0
"BLD",3463,"KRN",8994,"NM",38,0)
MAGV GET IMAGE FILE^^0
"BLD",3463,"KRN",8994,"NM",39,0)
MAGV GET NEXT WORK ITEM^^0
"BLD",3463,"KRN",8994,"NM",40,0)
MAGV GET ORIG IMAGE FILE^^0
"BLD",3463,"KRN",8994,"NM",41,0)
MAGV GET PAT INFO^^0
"BLD",3463,"KRN",8994,"NM",42,0)
MAGV GET PAT ORDERS^^0
"BLD",3463,"KRN",8994,"NM",43,0)
MAGV GET PAT REF ATTS^^0
"BLD",3463,"KRN",8994,"NM",44,0)
MAGV GET PROC REF ATTS^^0
"BLD",3463,"KRN",8994,"NM",45,0)
MAGV GET PROCEDURE INFO^^0
"BLD",3463,"KRN",8994,"NM",46,0)
MAGV GET RADIOLOGY PROCEDURES^^0
"BLD",3463,"KRN",8994,"NM",47,0)
MAGV GET REPORT^^0
"BLD",3463,"KRN",8994,"NM",48,0)
MAGV GET SERIES^^0
"BLD",3463,"KRN",8994,"NM",49,0)
MAGV GET SERVICE INST LIST^^0
"BLD",3463,"KRN",8994,"NM",50,0)
MAGV GET SOP DATA^^0
"BLD",3463,"KRN",8994,"NM",51,0)
MAGV GET STUDY^^0
"BLD",3463,"KRN",8994,"NM",52,0)
MAGV GET WORK ITEM^^0
"BLD",3463,"KRN",8994,"NM",53,0)
MAGV GET WORKLISTS^^0
"BLD",3463,"KRN",8994,"NM",54,0)
MAGV IMPORT MEDIA LOG STORE^^0
"BLD",3463,"KRN",8994,"NM",55,0)
MAGV IMPORT STATUS^^0
"BLD",3463,"KRN",8994,"NM",56,0)
MAGV IMPORT STUDY LOG REPORT^^0
"BLD",3463,"KRN",8994,"NM",57,0)
MAGV IMPORT STUDY LOG STORE^^0
"BLD",3463,"KRN",8994,"NM",58,0)
MAGV INACTIVATE INSTANCE FILE^^0
"BLD",3463,"KRN",8994,"NM",59,0)
MAGV INACTIVATE PAT REF^^0
"BLD",3463,"KRN",8994,"NM",60,0)
MAGV INACTIVATE PROC REF^^0
"BLD",3463,"KRN",8994,"NM",61,0)
MAGV INACTIVATE SERIES^^0
"BLD",3463,"KRN",8994,"NM",62,0)
MAGV INACTIVATE SOP^^0
"BLD",3463,"KRN",8994,"NM",63,0)
MAGV INACTIVATE STUDY^^0
"BLD",3463,"KRN",8994,"NM",64,0)
MAGV RAD EXAM ORDER^^0
"BLD",3463,"KRN",8994,"NM",65,0)
MAGV RAD EXAM REGISTER^^0
"BLD",3463,"KRN",8994,"NM",66,0)
MAGV RAD STAT COMPLETE^^0
"BLD",3463,"KRN",8994,"NM",67,0)
MAGV RAD STAT EXAMINED^^0
"BLD",3463,"KRN",8994,"NM",68,0)
MAGV SEARCH BY ATTRIBUTE^^0
"BLD",3463,"KRN",8994,"NM",69,0)
MAGV SERIES UID CHECK^^0
"BLD",3463,"KRN",8994,"NM",70,0)
MAGV SET DGW CONFIG^^0
"BLD",3463,"KRN",8994,"NM",71,0)
MAGV SET DICOM FAILED IMAGE^^0
"BLD",3463,"KRN",8994,"NM",72,0)
MAGV SOP UID CHECK^^0
"BLD",3463,"KRN",8994,"NM",73,0)
MAGV STUDY LOOKUP^^0
"BLD",3463,"KRN",8994,"NM",74,0)
MAGV STUDY UID CHECK^^0
"BLD",3463,"KRN",8994,"NM",75,0)
MAGV TRAVERSE IMAGE FILE^^0
"BLD",3463,"KRN",8994,"NM",76,0)
MAGV TRAVERSE PROC REF^^0
"BLD",3463,"KRN",8994,"NM",77,0)
MAGV TRAVERSE SERIES^^0
"BLD",3463,"KRN",8994,"NM",78,0)
MAGV TRAVERSE SOP^^0
"BLD",3463,"KRN",8994,"NM",79,0)
MAGV TRAVERSE STUDY^^0
"BLD",3463,"KRN",8994,"NM",80,0)
MAGV UPDATE IMAGE FILE^^0
"BLD",3463,"KRN",8994,"NM",81,0)
MAGV UPDATE PAT PROC REF^^0
"BLD",3463,"KRN",8994,"NM",82,0)
MAGV UPDATE PAT REF^^0
"BLD",3463,"KRN",8994,"NM",83,0)
MAGV UPDATE SERIES^^0
"BLD",3463,"KRN",8994,"NM",84,0)
MAGV UPDATE SOP^^0
"BLD",3463,"KRN",8994,"NM",85,0)
MAGV UPDATE STUDY^^0
"BLD",3463,"KRN",8994,"NM",86,0)
MAGV UPDATE WORK ITEM^^0
"BLD",3463,"KRN",8994,"NM",87,0)
MAGV WORK ITEMS COUNT^^0
"BLD",3463,"KRN",8994,"NM",88,0)
MAGVA CREATE AD^^0
"BLD",3463,"KRN",8994,"NM",89,0)
MAGVA CREATE AINSTANCE^^0
"BLD",3463,"KRN",8994,"NM",90,0)
MAGVA CREATE ARETPOL^^0
"BLD",3463,"KRN",8994,"NM",91,0)
MAGVA CREATE ARTIFACT W KL^^0
"BLD",3463,"KRN",8994,"NM",92,0)
MAGVA CREATE KEYLIST^^0
"BLD",3463,"KRN",8994,"NM",93,0)
MAGVA CREATE PROVAVAILTY^^0
"BLD",3463,"KRN",8994,"NM",94,0)
MAGVA CREATE PROVIDER^^0
"BLD",3463,"KRN",8994,"NM",95,0)
MAGVA CREATE QUEUE^^0
"BLD",3463,"KRN",8994,"NM",96,0)
MAGVA CREATE RETPOL^^0
"BLD",3463,"KRN",8994,"NM",97,0)
MAGVA CREATE RETPOL PROV MAP^^0
"BLD",3463,"KRN",8994,"NM",98,0)
MAGVA CREATE RETPOLFF^^0
"BLD",3463,"KRN",8994,"NM",99,0)
MAGVA CREATE STORAGE TA^^0
"BLD",3463,"KRN",8994,"NM",100,0)
MAGVA CREATE TRF STATS^^0
"BLD",3463,"KRN",8994,"NM",101,0)
MAGVA DELETE KEYLIST^^0
"BLD",3463,"KRN",8994,"NM",102,0)
MAGVA DELETE PROVAVAILTY^^0
"BLD",3463,"KRN",8994,"NM",103,0)
MAGVA DELETE RETPOL PROV MAP^^0
"BLD",3463,"KRN",8994,"NM",104,0)
MAGVA DEQUEUE Q MSG^^0
"BLD",3463,"KRN",8994,"NM",105,0)
MAGVA ENQUEUE Q MSG^^0
"BLD",3463,"KRN",8994,"NM",106,0)
MAGVA FIND KEYLIST^^0
"BLD",3463,"KRN",8994,"NM",107,0)
MAGVA GET A AIS ARPS AND RPFFS^^0
"BLD",3463,"KRN",8994,"NM",108,0)
MAGVA GET A W KL AND AIS^^0
"BLD",3463,"KRN",8994,"NM",109,0)
MAGVA GET A W KL AND AIS BY KL^^0
"BLD",3463,"KRN",8994,"NM",110,0)
MAGVA GET A W KL AND AIS BY PK^^0
"BLD",3463,"KRN",8994,"NM",111,0)
MAGVA GET ALL ADS^^0
"BLD",3463,"KRN",8994,"NM",112,0)
MAGVA GET ALL PROVAVAILS^^0
"BLD",3463,"KRN",8994,"NM",113,0)
MAGVA GET ALL PROVIDERS^^0
"BLD",3463,"KRN",8994,"NM",114,0)
MAGVA GET ALL QUEUES^^0
"BLD",3463,"KRN",8994,"NM",115,0)
MAGVA GET ALL RETPOL PROV MAPS^^0
"BLD",3463,"KRN",8994,"NM",116,0)
MAGVA GET ALL RETPOLS^^0
"BLD",3463,"KRN",8994,"NM",117,0)
MAGVA GET ALL SITE PARAM IDS^^0
"BLD",3463,"KRN",8994,"NM",118,0)
MAGVA GET ARTIFACT W KL^^0
"BLD",3463,"KRN",8994,"NM",119,0)
MAGVA GET CWL^^0
"BLD",3463,"KRN",8994,"NM",120,0)
MAGVA GET JUKEBOX WL^^0
"BLD",3463,"KRN",8994,"NM",121,0)
MAGVA GET KEYLIST^^0
"BLD",3463,"KRN",8994,"NM",122,0)
MAGVA GET NET LOC DETAILS^^0
"BLD",3463,"KRN",8994,"NM",123,0)
MAGVA PEEK Q MSG^^0
"BLD",3463,"KRN",8994,"NM",124,0)
MAGVA SET AD RETPOL^^0
"BLD",3463,"KRN",8994,"NM",125,0)
MAGVA UPDATE ARETPOL^^0
"BLD",3463,"KRN",8994,"NM",126,0)
MAGVA UPDATE ARTIFACT^^0
"BLD",3463,"KRN",8994,"NM",127,0)
MAGVA UPDATE LAST ACCESS DT^^0
"BLD",3463,"KRN",8994,"NM",128,0)
MAGVA UPDATE PROVAVAILTY^^0
"BLD",3463,"KRN",8994,"NM",129,0)
MAGVA UPDATE PROVIDER^^0
"BLD",3463,"KRN",8994,"NM",130,0)
MAGVA UPDATE RETPOL PROV MAP^^0
"BLD",3463,"KRN",8994,"NM","B","MAG CFIND QUERY",1)

"BLD",3463,"KRN",8994,"NM","B","MAG DICOM CHECK AE TITLE",2)

"BLD",3463,"KRN",8994,"NM","B","MAG DICOM RADIOLOGY PROCEDURES",3)

"BLD",3463,"KRN",8994,"NM","B","MAG DICOM VISTA AE TITLE",4)

"BLD",3463,"KRN",8994,"NM","B","MAG EVENT AUDIT",5)

"BLD",3463,"KRN",8994,"NM","B","MAG FILEMAN FIELD ATTS",6)

"BLD",3463,"KRN",8994,"NM","B","MAG FILEMAN FIELD LIST",7)

"BLD",3463,"KRN",8994,"NM","B","MAG STUDY UID QUERY",8)

"BLD",3463,"KRN",8994,"NM","B","MAGV ADD WORK ITEM TAGS",9)

"BLD",3463,"KRN",8994,"NM","B","MAGV ATTACH IMAGE INSTANCE",10)

"BLD",3463,"KRN",8994,"NM","B","MAGV ATTACH PAT PROC REF",11)

"BLD",3463,"KRN",8994,"NM","B","MAGV ATTACH SERIES",12)

"BLD",3463,"KRN",8994,"NM","B","MAGV ATTACH SOP",13)

"BLD",3463,"KRN",8994,"NM","B","MAGV ATTACH STUDY",14)

"BLD",3463,"KRN",8994,"NM","B","MAGV CONFIRM RAD ORDER",15)

"BLD",3463,"KRN",8994,"NM","B","MAGV CREATE DICOM FAILED IMAGE",16)

"BLD",3463,"KRN",8994,"NM","B","MAGV CREATE PAT REF",17)

"BLD",3463,"KRN",8994,"NM","B","MAGV CREATE WORK ITEM",18)

"BLD",3463,"KRN",8994,"NM","B","MAGV DELETE DICOM FAILED IMAGE",19)

"BLD",3463,"KRN",8994,"NM","B","MAGV DELETE WORK ITEM",20)

"BLD",3463,"KRN",8994,"NM","B","MAGV DGW ACTION UID LIST",21)

"BLD",3463,"KRN",8994,"NM","B","MAGV DGW INSTRUMENT LIST",22)

"BLD",3463,"KRN",8994,"NM","B","MAGV DGW MODALITY LIST",23)

"BLD",3463,"KRN",8994,"NM","B","MAGV DICOM GET COUNT",24)

"BLD",3463,"KRN",8994,"NM","B","MAGV DICOM SET INSTRUMENT LIST",25)

"BLD",3463,"KRN",8994,"NM","B","MAGV DICOM SET MODALITY LIST",26)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND PAT REF",27)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND PROC REF",28)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND SERIES BY REFERENCE",29)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND SERIES BY UID",30)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND SOP BY UID",31)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND STUDY BY UID",32)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND STUDY TIU",33)

"BLD",3463,"KRN",8994,"NM","B","MAGV FIND WORK ITEM",34)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET ACCESSION NUM",35)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET DGW CONFIG",36)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET DICOM FAILED IMAGE",37)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET IMAGE FILE",38)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET NEXT WORK ITEM",39)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET ORIG IMAGE FILE",40)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET PAT INFO",41)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET PAT ORDERS",42)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET PAT REF ATTS",43)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET PROC REF ATTS",44)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET PROCEDURE INFO",45)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET RADIOLOGY PROCEDURES",46)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET REPORT",47)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET SERIES",48)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET SERVICE INST LIST",49)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET SOP DATA",50)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET STUDY",51)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET WORK ITEM",52)

"BLD",3463,"KRN",8994,"NM","B","MAGV GET WORKLISTS",53)

"BLD",3463,"KRN",8994,"NM","B","MAGV IMPORT MEDIA LOG STORE",54)

"BLD",3463,"KRN",8994,"NM","B","MAGV IMPORT STATUS",55)

"BLD",3463,"KRN",8994,"NM","B","MAGV IMPORT STUDY LOG REPORT",56)

"BLD",3463,"KRN",8994,"NM","B","MAGV IMPORT STUDY LOG STORE",57)

"BLD",3463,"KRN",8994,"NM","B","MAGV INACTIVATE INSTANCE FILE",58)

"BLD",3463,"KRN",8994,"NM","B","MAGV INACTIVATE PAT REF",59)

"BLD",3463,"KRN",8994,"NM","B","MAGV INACTIVATE PROC REF",60)

"BLD",3463,"KRN",8994,"NM","B","MAGV INACTIVATE SERIES",61)

"BLD",3463,"KRN",8994,"NM","B","MAGV INACTIVATE SOP",62)

"BLD",3463,"KRN",8994,"NM","B","MAGV INACTIVATE STUDY",63)

"BLD",3463,"KRN",8994,"NM","B","MAGV RAD EXAM ORDER",64)

"BLD",3463,"KRN",8994,"NM","B","MAGV RAD EXAM REGISTER",65)

"BLD",3463,"KRN",8994,"NM","B","MAGV RAD STAT COMPLETE",66)

"BLD",3463,"KRN",8994,"NM","B","MAGV RAD STAT EXAMINED",67)

"BLD",3463,"KRN",8994,"NM","B","MAGV SEARCH BY ATTRIBUTE",68)

"BLD",3463,"KRN",8994,"NM","B","MAGV SERIES UID CHECK",69)

"BLD",3463,"KRN",8994,"NM","B","MAGV SET DGW CONFIG",70)

"BLD",3463,"KRN",8994,"NM","B","MAGV SET DICOM FAILED IMAGE",71)

"BLD",3463,"KRN",8994,"NM","B","MAGV SOP UID CHECK",72)

"BLD",3463,"KRN",8994,"NM","B","MAGV STUDY LOOKUP",73)

"BLD",3463,"KRN",8994,"NM","B","MAGV STUDY UID CHECK",74)

"BLD",3463,"KRN",8994,"NM","B","MAGV TRAVERSE IMAGE FILE",75)

"BLD",3463,"KRN",8994,"NM","B","MAGV TRAVERSE PROC REF",76)

"BLD",3463,"KRN",8994,"NM","B","MAGV TRAVERSE SERIES",77)

"BLD",3463,"KRN",8994,"NM","B","MAGV TRAVERSE SOP",78)

"BLD",3463,"KRN",8994,"NM","B","MAGV TRAVERSE STUDY",79)

"BLD",3463,"KRN",8994,"NM","B","MAGV UPDATE IMAGE FILE",80)

"BLD",3463,"KRN",8994,"NM","B","MAGV UPDATE PAT PROC REF",81)

"BLD",3463,"KRN",8994,"NM","B","MAGV UPDATE PAT REF",82)

"BLD",3463,"KRN",8994,"NM","B","MAGV UPDATE SERIES",83)

"BLD",3463,"KRN",8994,"NM","B","MAGV UPDATE SOP",84)

"BLD",3463,"KRN",8994,"NM","B","MAGV UPDATE STUDY",85)

"BLD",3463,"KRN",8994,"NM","B","MAGV UPDATE WORK ITEM",86)

"BLD",3463,"KRN",8994,"NM","B","MAGV WORK ITEMS COUNT",87)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE AD",88)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE AINSTANCE",89)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE ARETPOL",90)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE ARTIFACT W KL",91)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE KEYLIST",92)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE PROVAVAILTY",93)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE PROVIDER",94)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE QUEUE",95)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE RETPOL",96)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE RETPOL PROV MAP",97)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE RETPOLFF",98)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE STORAGE TA",99)

"BLD",3463,"KRN",8994,"NM","B","MAGVA CREATE TRF STATS",100)

"BLD",3463,"KRN",8994,"NM","B","MAGVA DELETE KEYLIST",101)

"BLD",3463,"KRN",8994,"NM","B","MAGVA DELETE PROVAVAILTY",102)

"BLD",3463,"KRN",8994,"NM","B","MAGVA DELETE RETPOL PROV MAP",103)

"BLD",3463,"KRN",8994,"NM","B","MAGVA DEQUEUE Q MSG",104)

"BLD",3463,"KRN",8994,"NM","B","MAGVA ENQUEUE Q MSG",105)

"BLD",3463,"KRN",8994,"NM","B","MAGVA FIND KEYLIST",106)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET A AIS ARPS AND RPFFS",107)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET A W KL AND AIS",108)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET A W KL AND AIS BY KL",109)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET A W KL AND AIS BY PK",110)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ALL ADS",111)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ALL PROVAVAILS",112)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ALL PROVIDERS",113)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ALL QUEUES",114)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ALL RETPOL PROV MAPS",115)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ALL RETPOLS",116)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ALL SITE PARAM IDS",117)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET ARTIFACT W KL",118)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET CWL",119)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET JUKEBOX WL",120)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET KEYLIST",121)

"BLD",3463,"KRN",8994,"NM","B","MAGVA GET NET LOC DETAILS",122)

"BLD",3463,"KRN",8994,"NM","B","MAGVA PEEK Q MSG",123)

"BLD",3463,"KRN",8994,"NM","B","MAGVA SET AD RETPOL",124)

"BLD",3463,"KRN",8994,"NM","B","MAGVA UPDATE ARETPOL",125)

"BLD",3463,"KRN",8994,"NM","B","MAGVA UPDATE ARTIFACT",126)

"BLD",3463,"KRN",8994,"NM","B","MAGVA UPDATE LAST ACCESS DT",127)

"BLD",3463,"KRN",8994,"NM","B","MAGVA UPDATE PROVAVAILTY",128)

"BLD",3463,"KRN",8994,"NM","B","MAGVA UPDATE PROVIDER",129)

"BLD",3463,"KRN",8994,"NM","B","MAGVA UPDATE RETPOL PROV MAP",130)

"BLD",3463,"KRN","B",.4,.4)

"BLD",3463,"KRN","B",.401,.401)

"BLD",3463,"KRN","B",.402,.402)

"BLD",3463,"KRN","B",.403,.403)

"BLD",3463,"KRN","B",.5,.5)

"BLD",3463,"KRN","B",.84,.84)

"BLD",3463,"KRN","B",3.6,3.6)

"BLD",3463,"KRN","B",3.8,3.8)

"BLD",3463,"KRN","B",9.2,9.2)

"BLD",3463,"KRN","B",9.8,9.8)

"BLD",3463,"KRN","B",19,19)

"BLD",3463,"KRN","B",19.1,19.1)

"BLD",3463,"KRN","B",101,101)

"BLD",3463,"KRN","B",409.61,409.61)

"BLD",3463,"KRN","B",771,771)

"BLD",3463,"KRN","B",870,870)

"BLD",3463,"KRN","B",8989.51,8989.51)

"BLD",3463,"KRN","B",8989.52,8989.52)

"BLD",3463,"KRN","B",8994,8994)

"BLD",3463,"PRE")
MAGIP118
"BLD",3463,"REQB",0)
^9.611^1^1
"BLD",3463,"REQB",1,0)
MAG*3.0*116^2
"BLD",3463,"REQB","B","MAG*3.0*116",1)

"DATA",2006.914,1,0)
Medical Information Retention Policy 75^75^DD^1^0^MedInfo^1
"DATA",2006.927,1,0)
Async Storage Request Queue^S^1^5^1200^1200
"DATA",2006.927,2,0)
Async Storage Request Error Queue^E^1^5^1200^1200
"DATA",2006.927,3,0)
ASYNC_ICON_QUEUE^I^1^3^30^30
"DATA",2006.927,4,0)
E-Mail Queue^M^1^5^1200^1200
"DATA",2006.931,1,0)
STARTUP
"DATA",2006.931,2,0)
SHUTDOWN
"DATA",2006.931,3,0)
DICOM QUERY
"DATA",2006.931,4,0)
DICOM RETRIEVE
"DATA",2006.931,5,0)
DICOM STORAGE
"DATA",2006.931,6,0)
DISABLE AUDIT
"DATA",2006.931,7,0)
ENABLE AUDIT
"DATA",2006.931,8,0)
AUTHENTICATION FAILURE
"DATA",2006.931,9,0)
CLIENT LOGIN
"DATA",2006.931,10,0)
IMPORTER AE SECURITY SUCCESS
"DATA",2006.931,11,0)
IMPORTER AE SECURITY FAILURE
"DATA",2006.9412,1,0)
IMPORTER^1
"DATA",2006.9413,1,0)
New
"DATA",2006.9413,2,0)
InStaging
"DATA",2006.9413,3,0)
FailedStaging
"DATA",2006.9413,4,0)
FailedDirectImportStaging
"DATA",2006.9413,5,0)
CancelledStaging
"DATA",2006.9413,6,0)
CancelledDirectImportStaging
"DATA",2006.9413,7,0)
Staged
"DATA",2006.9413,8,0)
InReconciliation
"DATA",2006.9413,9,0)
Reconciled
"DATA",2006.9413,10,0)
ReadyForImport
"DATA",2006.9413,11,0)
Importing
"DATA",2006.9413,12,0)
ImportComplete
"DATA",2006.9413,13,0)
FailedImport
"DATA",2006.9413,14,0)
Purging
"DATA",2006.9413,15,0)
Staging
"DATA",2006.9414,1,0)
DirectImport
"DATA",2006.9414,2,0)
StagedMedia
"DATA",2006.9414,3,0)
NetworkImport
"DATA",2006.9414,4,0)
DicomCorrect
"FIA",2005)
IMAGE
"FIA",2005,0)
^MAG(2005,
"FIA",2005,0,0)
2005I
"FIA",2005,0,1)
y^y^p^^^^n^^n
"FIA",2005,0,10)

"FIA",2005,0,11)

"FIA",2005,0,"RLRO")

"FIA",2005,0,"VR")
3.0^MAG
"FIA",2005,2005)
1
"FIA",2005,2005,45)

"FIA",2005.1)
IMAGE AUDIT
"FIA",2005.1,0)
^MAG(2005.1,
"FIA",2005.1,0,0)
2005.1I
"FIA",2005.1,0,1)
y^y^p^^^^n^^n
"FIA",2005.1,0,10)

"FIA",2005.1,0,11)

"FIA",2005.1,0,"RLRO")

"FIA",2005.1,0,"VR")
3.0^MAG
"FIA",2005.1,2005.1)
1
"FIA",2005.1,2005.1,45)

"FIA",2005.6)
IMAGING PATIENT REFERENCE
"FIA",2005.6,0)
^MAGV(2005.6,
"FIA",2005.6,0,0)
2005.6
"FIA",2005.6,0,1)
y^y^f^^^^n
"FIA",2005.6,0,10)

"FIA",2005.6,0,11)

"FIA",2005.6,0,"RLRO")

"FIA",2005.6,0,"VR")
3.0^MAG
"FIA",2005.6,2005.6)
0
"FIA",2005.61)
IMAGING PROCEDURE REFERENCE
"FIA",2005.61,0)
^MAGV(2005.61,
"FIA",2005.61,0,0)
2005.61
"FIA",2005.61,0,1)
y^y^f^^^^n
"FIA",2005.61,0,10)

"FIA",2005.61,0,11)

"FIA",2005.61,0,"RLRO")

"FIA",2005.61,0,"VR")
3.0^MAG
"FIA",2005.61,2005.61)
0
"FIA",2005.62)
IMAGE STUDY
"FIA",2005.62,0)
^MAGV(2005.62,
"FIA",2005.62,0,0)
2005.62
"FIA",2005.62,0,1)
y^y^f^^^^n^^n
"FIA",2005.62,0,10)

"FIA",2005.62,0,11)

"FIA",2005.62,0,"RLRO")

"FIA",2005.62,0,"VR")
3.0^MAG
"FIA",2005.62,2005.62)
0
"FIA",2005.63)
IMAGE SERIES
"FIA",2005.63,0)
^MAGV(2005.63,
"FIA",2005.63,0,0)
2005.63
"FIA",2005.63,0,1)
y^y^f^^^^n
"FIA",2005.63,0,10)

"FIA",2005.63,0,11)

"FIA",2005.63,0,"RLRO")

"FIA",2005.63,0,"VR")
3.0^MAG
"FIA",2005.63,2005.63)
0
"FIA",2005.64)
IMAGE SOP INSTANCE
"FIA",2005.64,0)
^MAGV(2005.64,
"FIA",2005.64,0,0)
2005.64
"FIA",2005.64,0,1)
y^y^f^^^^n
"FIA",2005.64,0,10)

"FIA",2005.64,0,11)

"FIA",2005.64,0,"RLRO")

"FIA",2005.64,0,"VR")
3.0^MAG
"FIA",2005.64,2005.64)
0
"FIA",2005.65)
IMAGE INSTANCE FILE
"FIA",2005.65,0)
^MAGV(2005.65,
"FIA",2005.65,0,0)
2005.65
"FIA",2005.65,0,1)
y^y^f^^^^n
"FIA",2005.65,0,10)

"FIA",2005.65,0,11)

"FIA",2005.65,0,"RLRO")

"FIA",2005.65,0,"VR")
3.0^MAG
"FIA",2005.65,2005.65)
0
"FIA",2005.66)
IMAGING DUPLICATE UID LOG
"FIA",2005.66,0)
^MAGV(2005.66,
"FIA",2005.66,0,0)
2005.66
"FIA",2005.66,0,1)
y^y^f^^^^n
"FIA",2005.66,0,10)

"FIA",2005.66,0,11)

"FIA",2005.66,0,"RLRO")

"FIA",2005.66,0,"VR")
3.0^MAG
"FIA",2005.66,2005.66)
0
"FIA",2005.8)
IMAGING SERVICE INSTITUTION
"FIA",2005.8,0)
^MAGV(2005.8,
"FIA",2005.8,0,0)
2005.8V
"FIA",2005.8,0,1)
y^y^f^^^^n
"FIA",2005.8,0,10)

"FIA",2005.8,0,11)

"FIA",2005.8,0,"RLRO")

"FIA",2005.8,0,"VR")
3.0^MAG
"FIA",2005.8,2005.8)
0
"FIA",2006.1)
IMAGING SITE PARAMETERS
"FIA",2006.1,0)
^MAG(2006.1,
"FIA",2006.1,0,0)
2006.1P
"FIA",2006.1,0,1)
y^y^f^^^^n^^n
"FIA",2006.1,0,10)

"FIA",2006.1,0,11)

"FIA",2006.1,0,"RLRO")

"FIA",2006.1,0,"VR")
3.0^MAG
"FIA",2006.1,2006.1)
0
"FIA",2006.1,2006.11)
0
"FIA",2006.1,2006.112)
0
"FIA",2006.1,2006.12)
0
"FIA",2006.1,2006.1201)
0
"FIA",2006.1,2006.12201)
0
"FIA",2006.1,2006.166)
0
"FIA",2006.1,2006.1662)
0
"FIA",2006.1,2006.1664)
0
"FIA",2006.1,2006.1665)
0
"FIA",2006.539)
DICOM UID SPECIFIC ACTION
"FIA",2006.539,0)
^MAGDICOM(2006.539,
"FIA",2006.539,0,0)
2006.539
"FIA",2006.539,0,1)
y^y^p^^^^n^^n
"FIA",2006.539,0,10)

"FIA",2006.539,0,11)

"FIA",2006.539,0,"RLRO")

"FIA",2006.539,0,"VR")
3.0^MAG
"FIA",2006.539,2006.539)
1
"FIA",2006.539,2006.539,.01)

"FIA",2006.575)
DICOM FAILED IMAGES
"FIA",2006.575,0)
^MAGD(2006.575,
"FIA",2006.575,0,0)
2006.575
"FIA",2006.575,0,1)
y^y^p^^^^n^^n
"FIA",2006.575,0,10)

"FIA",2006.575,0,11)

"FIA",2006.575,0,"RLRO")

"FIA",2006.575,0,"VR")
3.0^MAG
"FIA",2006.575,2006.575)
1
"FIA",2006.575,2006.575,.01)

"FIA",2006.575,2006.575,28)

"FIA",2006.911)
DICOM GATEWAY INSTRUMENT DICTIONARY
"FIA",2006.911,0)
^MAGDICOM(2006.911,
"FIA",2006.911,0,0)
2006.911
"FIA",2006.911,0,1)
y^y^f^^^^n
"FIA",2006.911,0,10)

"FIA",2006.911,0,11)

"FIA",2006.911,0,"RLRO")

"FIA",2006.911,0,"VR")
3.0^MAG
"FIA",2006.911,2006.911)
0
"FIA",2006.911,2006.9112)
0
"FIA",2006.912)
DICOM GATEWAY MODALITY DICTIONARY
"FIA",2006.912,0)
^MAGDICOM(2006.912,
"FIA",2006.912,0,0)
2006.912
"FIA",2006.912,0,1)
y^y^f^^^^n
"FIA",2006.912,0,10)

"FIA",2006.912,0,11)

"FIA",2006.912,0,"RLRO")

"FIA",2006.912,0,"VR")
3.0^MAG
"FIA",2006.912,2006.912)
0
"FIA",2006.912,2006.9122)
0
"FIA",2006.913)
ARTIFACT KEYLIST
"FIA",2006.913,0)
^MAGV(2006.913,
"FIA",2006.913,0,0)
2006.913
"FIA",2006.913,0,1)
y^y^f^^^^n
"FIA",2006.913,0,10)

"FIA",2006.913,0,11)

"FIA",2006.913,0,"RLRO")

"FIA",2006.913,0,"VR")
3.0^MAG
"FIA",2006.913,2006.913)
0
"FIA",2006.913,2006.9132)
0
"FIA",2006.914)
RETENTION POLICY
"FIA",2006.914,0)
^MAGV(2006.914,
"FIA",2006.914,0,0)
2006.914
"FIA",2006.914,0,1)
y^y^f^^n^^y^m^n
"FIA",2006.914,0,10)

"FIA",2006.914,0,11)

"FIA",2006.914,0,"RLRO")

"FIA",2006.914,0,"VR")
3.0^MAG
"FIA",2006.914,2006.914)
0
"FIA",2006.915)
ARTIFACT DESCRIPTOR
"FIA",2006.915,0)
^MAGV(2006.915,
"FIA",2006.915,0,0)
2006.915P
"FIA",2006.915,0,1)
y^y^f^^^^n
"FIA",2006.915,0,10)

"FIA",2006.915,0,11)

"FIA",2006.915,0,"RLRO")

"FIA",2006.915,0,"VR")
3.0^MAG
"FIA",2006.915,2006.915)
0
"FIA",2006.916)
ARTIFACT
"FIA",2006.916,0)
^MAGV(2006.916,
"FIA",2006.916,0,0)
2006.916
"FIA",2006.916,0,1)
y^y^f^^^^n
"FIA",2006.916,0,10)

"FIA",2006.916,0,11)

"FIA",2006.916,0,"RLRO")

"FIA",2006.916,0,"VR")
3.0^MAG
"FIA",2006.916,2006.916)
0
"FIA",2006.917)
STORAGE PROVIDER
"FIA",2006.917,0)
^MAGV(2006.917,
"FIA",2006.917,0,0)
2006.917P
"FIA",2006.917,0,1)
y^y^f^^^^n
"FIA",2006.917,0,10)

"FIA",2006.917,0,11)

"FIA",2006.917,0,"RLRO")

"FIA",2006.917,0,"VR")
3.0^MAG
"FIA",2006.917,2006.917)
0
"FIA",2006.918)
ARTIFACT INSTANCE
"FIA",2006.918,0)
^MAGV(2006.918,
"FIA",2006.918,0,0)
2006.918P
"FIA",2006.918,0,1)
y^y^f^^^^n
"FIA",2006.918,0,10)

"FIA",2006.918,0,11)

"FIA",2006.918,0,"RLRO")

"FIA",2006.918,0,"VR")
3.0^MAG
"FIA",2006.918,2006.918)
0
"FIA",2006.918,2006.9183)
0
"FIA",2006.9191)
MAGV GATEWAY CONFIGURATION
"FIA",2006.9191,0)
^MAGV(2006.9191,
"FIA",2006.9191,0,0)
2006.9191
"FIA",2006.9191,0,1)
y^y^f^^^^n
"FIA",2006.9191,0,10)

"FIA",2006.9191,0,11)

"FIA",2006.9191,0,"RLRO")

"FIA",2006.9191,0,"VR")
3.0^MAG
"FIA",2006.9191,2006.9191)
0
"FIA",2006.9192)
DICOM AE SECURITY MATRIX
"FIA",2006.9192,0)
^MAGV(2006.9192,
"FIA",2006.9192,0,0)
2006.9192
"FIA",2006.9192,0,1)
y^y^f^^^^n^^n
"FIA",2006.9192,0,10)

"FIA",2006.9192,0,11)

"FIA",2006.9192,0,"RLRO")

"FIA",2006.9192,0,"VR")
3.0^MAG
"FIA",2006.9192,2006.9192)
0
"FIA",2006.9192,2006.919212)
0
"FIA",2006.9193)
IMAGING APPLICATION SERVICE
"FIA",2006.9193,0)
^MAGV(2006.9193,
"FIA",2006.9193,0,0)
2006.9193
"FIA",2006.9193,0,1)
y^y^f^^^^n
"FIA",2006.9193,0,10)

"FIA",2006.9193,0,11)

"FIA",2006.9193,0,"RLRO")

"FIA",2006.9193,0,"VR")
3.0^MAG
"FIA",2006.9193,2006.9193)
0
"FIA",2006.921)
ARTIFACT RETENTION POLICY
"FIA",2006.921,0)
^MAGV(2006.921,
"FIA",2006.921,0,0)
2006.921P
"FIA",2006.921,0,1)
y^y^f^^^^n
"FIA",2006.921,0,10)

"FIA",2006.921,0,11)

"FIA",2006.921,0,"RLRO")

"FIA",2006.921,0,"VR")
3.0^MAG
"FIA",2006.921,2006.921)
0
"FIA",2006.922)
RETENTION POLICY FULFILLMENT
"FIA",2006.922,0)
^MAGV(2006.922,
"FIA",2006.922,0,0)
2006.922P
"FIA",2006.922,0,1)
y^y^f^^^^n
"FIA",2006.922,0,10)

"FIA",2006.922,0,11)

"FIA",2006.922,0,"RLRO")

"FIA",2006.922,0,"VR")
3.0^MAG
"FIA",2006.922,2006.922)
0
"FIA",2006.923)
RETENTION POLICY STORAGE PROVIDER MAP
"FIA",2006.923,0)
^MAGV(2006.923,
"FIA",2006.923,0,0)
2006.923P
"FIA",2006.923,0,1)
y^y^f^^^^n
"FIA",2006.923,0,10)

"FIA",2006.923,0,11)

"FIA",2006.923,0,"RLRO")

"FIA",2006.923,0,"VR")
3.0^MAG
"FIA",2006.923,2006.923)
0
"FIA",2006.924)
STORAGE PROVIDER AVAILABILITY
"FIA",2006.924,0)
^MAGV(2006.924,
"FIA",2006.924,0,0)
2006.924P
"FIA",2006.924,0,1)
y^y^f^^^^n
"FIA",2006.924,0,10)

"FIA",2006.924,0,11)

"FIA",2006.924,0,"RLRO")

"FIA",2006.924,0,"VR")
3.0^MAG
"FIA",2006.924,2006.924)
0
"FIA",2006.925)
TRANSFER STATISTICS
"FIA",2006.925,0)
^MAGV(2006.925,
"FIA",2006.925,0,0)
2006.925P
"FIA",2006.925,0,1)
y^y^f^^^^n
"FIA",2006.925,0,10)

"FIA",2006.925,0,11)

"FIA",2006.925,0,"RLRO")

"FIA",2006.925,0,"VR")
3.0^MAG
"FIA",2006.925,2006.925)
0
"FIA",2006.926)
STORAGE TRANSACTION
"FIA",2006.926,0)
^MAGV(2006.926,
"FIA",2006.926,0,0)
2006.926S
"FIA",2006.926,0,1)
y^y^f^^^^n
"FIA",2006.926,0,10)

"FIA",2006.926,0,11)

"FIA",2006.926,0,"RLRO")

"FIA",2006.926,0,"VR")
3.0^MAG
"FIA",2006.926,2006.926)
0
"FIA",2006.926,2006.9267)
0
"FIA",2006.927)
QUEUE
"FIA",2006.927,0)
^MAGV(2006.927,
"FIA",2006.927,0,0)
2006.927
"FIA",2006.927,0,1)
y^y^f^^n^^y^m^n
"FIA",2006.927,0,10)

"FIA",2006.927,0,11)

"FIA",2006.927,0,"RLRO")

"FIA",2006.927,0,"VR")
3.0^MAG
"FIA",2006.927,2006.927)
0
"FIA",2006.928)
QUEUE MESSAGE
"FIA",2006.928,0)
^MAGV(2006.928,
"FIA",2006.928,0,0)
2006.928P
"FIA",2006.928,0,1)
y^y^f^^^^n
"FIA",2006.928,0,10)

"FIA",2006.928,0,11)

"FIA",2006.928,0,"RLRO")

"FIA",2006.928,0,"VR")
3.0^MAG
"FIA",2006.928,2006.928)
0
"FIA",2006.928,2006.9286)
0
"FIA",2006.93)
IMAGING EVENT AUDIT LOG
"FIA",2006.93,0)
^MAGV(2006.93,
"FIA",2006.93,0,0)
2006.93D
"FIA",2006.93,0,1)
y^y^f^^^^n
"FIA",2006.93,0,10)

"FIA",2006.93,0,11)

"FIA",2006.93,0,"RLRO")

"FIA",2006.93,0,"VR")
3.0^MAG
"FIA",2006.93,2006.93)
0
"FIA",2006.93,2006.935)
0
"FIA",2006.931)
IMAGING EVENT AUDITABLE ACTION
"FIA",2006.931,0)
^MAGV(2006.931,
"FIA",2006.931,0,0)
2006.931
"FIA",2006.931,0,1)
y^y^f^^^^y
"FIA",2006.931,0,10)

"FIA",2006.931,0,11)

"FIA",2006.931,0,"RLRO")

"FIA",2006.931,0,"VR")
3.0^MAG
"FIA",2006.931,2006.931)
0
"FIA",2006.941)
MAG WORK ITEM
"FIA",2006.941,0)
^MAGV(2006.941,
"FIA",2006.941,0,0)
2006.941D
"FIA",2006.941,0,1)
y^y^f^^^^n
"FIA",2006.941,0,10)

"FIA",2006.941,0,11)

"FIA",2006.941,0,"RLRO")

"FIA",2006.941,0,"VR")
3.0^MAG
"FIA",2006.941,2006.941)
0
"FIA",2006.941,2006.94111)
0
"FIA",2006.941,2006.94113)
0
"FIA",2006.9412)
WORKLIST
"FIA",2006.9412,0)
^MAGV(2006.9412,
"FIA",2006.9412,0,0)
2006.9412
"FIA",2006.9412,0,1)
y^y^f^^^^y
"FIA",2006.9412,0,10)

"FIA",2006.9412,0,11)

"FIA",2006.9412,0,"RLRO")

"FIA",2006.9412,0,"VR")
3.0^MAG
"FIA",2006.9412,2006.9412)
0
"FIA",2006.9413)
MAG WORK ITEM STATUS
"FIA",2006.9413,0)
^MAGV(2006.9413,
"FIA",2006.9413,0,0)
2006.9413
"FIA",2006.9413,0,1)
y^y^f^^n^^y^o^n
"FIA",2006.9413,0,10)

"FIA",2006.9413,0,11)

"FIA",2006.9413,0,"RLRO")

"FIA",2006.9413,0,"VR")
3.0^MAG
"FIA",2006.9413,2006.9413)
0
"FIA",2006.9414)
MAG WORK ITEM SUBTYPE
"FIA",2006.9414,0)
^MAGV(2006.9414,
"FIA",2006.9414,0,0)
2006.9414
"FIA",2006.9414,0,1)
y^y^f^^n^^y^o^n
"FIA",2006.9414,0,10)

"FIA",2006.9414,0,11)

"FIA",2006.9414,0,"RLRO")

"FIA",2006.9414,0,"VR")
3.0^MAG
"FIA",2006.9414,2006.9414)
0
"FIA",2006.9421)
MAGV IMPORT STUDY LOG
"FIA",2006.9421,0)
^MAGV(2006.9421,
"FIA",2006.9421,0,0)
2006.9421D
"FIA",2006.9421,0,1)
y^y^f^^^^n
"FIA",2006.9421,0,10)

"FIA",2006.9421,0,11)

"FIA",2006.9421,0,"RLRO")

"FIA",2006.9421,0,"VR")
3.0^MAG
"FIA",2006.9421,2006.9421)
0
"FIA",2006.9421,2006.94211)
0
"FIA",2006.9422)
MAGV IMPORT MEDIA LOG
"FIA",2006.9422,0)
^MAGV(2006.9422,
"FIA",2006.9422,0,0)
2006.9422D
"FIA",2006.9422,0,1)
y^y^f^^^^n
"FIA",2006.9422,0,10)

"FIA",2006.9422,0,11)

"FIA",2006.9422,0,"RLRO")

"FIA",2006.9422,0,"VR")
3.0^MAG
"FIA",2006.9422,2006.9422)
0
"INIT")
POS^MAGIP118
"IX",2005,2005,"AUDIT40",0)
2005^AUDIT40^Tracks changes of image fields^MU^^R^I^I^2005^^^^^A
"IX",2005,2005,"AUDIT40",.1,0)
^^5^5^3080626^
"IX",2005,2005,"AUDIT40",.1,1,0)
When values of the referenced fields are updated,
"IX",2005,2005,"AUDIT40",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005,2005,"AUDIT40",.1,3,0)
multiple (99).
"IX",2005,2005,"AUDIT40",.1,4,0)
 
"IX",2005,2005,"AUDIT40",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"AUDIT40",1)
D AUDIT^MAGUXRF(2005,DA_",",";40;42;43;44;45",2005.099,.X1,.X2)
"IX",2005,2005,"AUDIT40",1.4)

"IX",2005,2005,"AUDIT40",2)
Q
"IX",2005,2005,"AUDIT40",11.1,0)
^.114IA^6^6
"IX",2005,2005,"AUDIT40",11.1,1,0)
1^F^2005^.01^^^
"IX",2005,2005,"AUDIT40",11.1,1,3)

"IX",2005,2005,"AUDIT40",11.1,2,0)
2^F^2005^40^^^
"IX",2005,2005,"AUDIT40",11.1,2,3)

"IX",2005,2005,"AUDIT40",11.1,3,0)
3^F^2005^42^^^
"IX",2005,2005,"AUDIT40",11.1,3,3)

"IX",2005,2005,"AUDIT40",11.1,4,0)
4^F^2005^43^^^
"IX",2005,2005,"AUDIT40",11.1,4,3)

"IX",2005,2005,"AUDIT40",11.1,5,0)
5^F^2005^44^^^
"IX",2005,2005,"AUDIT40",11.1,5,3)

"IX",2005,2005,"AUDIT40",11.1,6,0)
6^F^2005^45^^^
"IX",2005,2005,"AUDIT40",11.1,6,3)

"IX",2005.1,2005.1,"AUDIT40",0)
2005.1^AUDIT40^Tracks changes of image fields^MU^^R^I^I^2005.1^^^^^A
"IX",2005.1,2005.1,"AUDIT40",.1,0)
^^5^5^3080717^^
"IX",2005.1,2005.1,"AUDIT40",.1,1,0)
When values of the referenced fields are updated,
"IX",2005.1,2005.1,"AUDIT40",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005.1,2005.1,"AUDIT40",.1,3,0)
multiple (99).
"IX",2005.1,2005.1,"AUDIT40",.1,4,0)
 
"IX",2005.1,2005.1,"AUDIT40",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"AUDIT40",1)
D AUDIT^MAGUXRF(2005.1,DA_",",";40;42;43;44;45",2005.199,.X1,.X2)
"IX",2005.1,2005.1,"AUDIT40",1.4)

"IX",2005.1,2005.1,"AUDIT40",2)
Q
"IX",2005.1,2005.1,"AUDIT40",11.1,0)
^.114IA^6^6
"IX",2005.1,2005.1,"AUDIT40",11.1,1,0)
1^F^2005.1^.01^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,1,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,2,0)
2^F^2005.1^40^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,2,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,3,0)
3^F^2005.1^42^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,3,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,4,0)
4^F^2005.1^43^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,4,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,5,0)
5^F^2005.1^44^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,5,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,6,0)
6^F^2005.1^45^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,6,3)

"IX",2005.62,2005.62,"J",0)
2005.62^J^This is the date cross-reference from the STUDY DATE/TIME field (#2005.62,4).^R^^F^IR^I^2005.62^^^^^LS
"IX",2005.62,2005.62,"J",1)
S ^MAGV(2005.62,"J",X,DA)=""
"IX",2005.62,2005.62,"J",2)
K ^MAGV(2005.62,"J",X,DA)
"IX",2005.62,2005.62,"J",2.5)
K ^MAGV(2005.62,"J")
"IX",2005.62,2005.62,"J",11.1,0)
^.114IA^1^1
"IX",2005.62,2005.62,"J",11.1,1,0)
1^F^2005.62^4^^1^F
"IX",2005.62,2005.62,"J",11.1,1,2)
S X=$P(X,".",1)
"IX",2005.62,2005.62,"J",11.1,1,3)

"IX",2005.62,2005.62,"K",0)
2005.62^K^This is the time cross-reference from the STUDY DATE/TIME field (#2005.62,4).^R^^F^IR^I^2005.62^^^^^LS
"IX",2005.62,2005.62,"K",1)
S ^MAGV(2005.62,"K",X,DA)=""
"IX",2005.62,2005.62,"K",2)
K ^MAGV(2005.62,"K",X,DA)
"IX",2005.62,2005.62,"K",2.5)
K ^MAGV(2005.62,"K")
"IX",2005.62,2005.62,"K",11.1,0)
^.114IA^1^1
"IX",2005.62,2005.62,"K",11.1,1,0)
1^F^2005.62^4^^1^F
"IX",2005.62,2005.62,"K",11.1,1,2)
S X=$E($P(X,".",2)_"000000",1,6)
"IX",2005.66,2005.66,"D",0)
2005.66^D^Cross-reference of Original UID and Study UID.^R^^R^IR^I^2005.66^^^^^LS
"IX",2005.66,2005.66,"D",1)
S ^MAGV(2005.66,"D",$E(X(1),1,96),$E(X(2),1,96),DA)=""
"IX",2005.66,2005.66,"D",2)
K ^MAGV(2005.66,"D",$E(X(1),1,96),$E(X(2),1,96),DA)
"IX",2005.66,2005.66,"D",2.5)
K ^MAGV(2005.66,"D")
"IX",2005.66,2005.66,"D",11.1,0)
^.114IA^2^2
"IX",2005.66,2005.66,"D",11.1,1,0)
1^F^2005.66^.01^96^1^F
"IX",2005.66,2005.66,"D",11.1,2,0)
2^F^2005.66^6^96^2^F
"IX",2005.66,2005.66,"E",0)
2005.66^E^Cross-reference of Original UID, and Series UID.^R^^R^IR^I^2005.66^^^^^LS
"IX",2005.66,2005.66,"E",1)
S ^MAGV(2005.66,"E",$E(X(1),1,96),$E(X(2),1,96),DA)=""
"IX",2005.66,2005.66,"E",2)
K ^MAGV(2005.66,"E",$E(X(1),1,96),$E(X(2),1,96),DA)
"IX",2005.66,2005.66,"E",2.5)
K ^MAGV(2005.66,"E")
"IX",2005.66,2005.66,"E",11.1,0)
^.114IA^2^2
"IX",2005.66,2005.66,"E",11.1,1,0)
1^F^2005.66^.01^96^1^F
"IX",2005.66,2005.66,"E",11.1,2,0)
2^F^2005.66^7^96^2^F
"IX",2006.575,2006.575,"AFX",0)
2006.575^AFX^Location and Machine ID^MU^^F^IR^I^2006.575^^^^^S
"IX",2006.575,2006.575,"AFX",.1,0)
^^3^3^3041216^
"IX",2006.575,2006.575,"AFX",.1,1,0)
This cross-reference keeps track of
"IX",2006.575,2006.575,"AFX",.1,2,0)
which computers (Machine ID) belong to
"IX",2006.575,2006.575,"AFX",.1,3,0)
which location.
"IX",2006.575,2006.575,"AFX",1)
S ^MAGD(2006.575,"AFX",X(1),X(2),DA)=""
"IX",2006.575,2006.575,"AFX",1.4)
I $D(^MAGD(2006.575,"F",X(1),X(3),DA))
"IX",2006.575,2006.575,"AFX",2)
K ^MAGD(2006.575,"AFX",X(1),X(2),DA)
"IX",2006.575,2006.575,"AFX",2.5)
K ^MAGD(2006.575,"AFX")
"IX",2006.575,2006.575,"AFX",11.1,0)
^.114IA^3^3
"IX",2006.575,2006.575,"AFX",11.1,1,0)
1^F^2006.575^36^^1^F
"IX",2006.575,2006.575,"AFX",11.1,1,3)

"IX",2006.575,2006.575,"AFX",11.1,2,0)
2^F^2006.575^28^^2^F
"IX",2006.575,2006.575,"AFX",11.1,2,3)

"IX",2006.575,2006.575,"AFX",11.1,3,0)
3^F^2006.575^9^^^F
"IX",2006.575,2006.575,"AFX",11.1,3,3)

"IX",2006.912,2006.9122,"B",0)
2006.9122^B^Manufacturer, model and modality^R^^R^IR^I^2006.9122^^^^^LS
"IX",2006.912,2006.9122,"B",.1,0)
^^1^1^3090911^
"IX",2006.912,2006.9122,"B",.1,1,0)
Manufacturer, model and modality
"IX",2006.912,2006.9122,"B",1)
S ^MAGDICOM(2006.912,DA(1),1,"B",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",2006.912,2006.9122,"B",2)
K ^MAGDICOM(2006.912,DA(1),1,"B",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",2006.912,2006.9122,"B",2.5)
K ^MAGDICOM(2006.912,DA(1),1,"B")
"IX",2006.912,2006.9122,"B",11.1,0)
^.114IA^3^3
"IX",2006.912,2006.9122,"B",11.1,1,0)
1^F^2006.9122^.01^30^1^F
"IX",2006.912,2006.9122,"B",11.1,1,3)

"IX",2006.912,2006.9122,"B",11.1,2,0)
2^F^2006.9122^2^30^2^F
"IX",2006.912,2006.9122,"B",11.1,2,3)

"IX",2006.912,2006.9122,"B",11.1,3,0)
3^F^2006.9122^3^30^3^F
"IX",2006.912,2006.9122,"B",11.1,3,3)

"IX",2006.913,2006.913,"IDXKEYS",0)
2006.913^IDXKEYS^Index by key level and key value.^R^^R^IR^W^2006.9132^^^^^LS
"IX",2006.913,2006.913,"IDXKEYS",.1,0)
^^3^3^3100513^
"IX",2006.913,2006.913,"IDXKEYS",.1,1,0)
This index allows for quick reference of different levels of construct of 
"IX",2006.913,2006.913,"IDXKEYS",.1,2,0)
an image attributes.
"IX",2006.913,2006.913,"IDXKEYS",.1,3,0)
It can also accommodate different forms at the same time.
"IX",2006.913,2006.913,"IDXKEYS",1)
S ^MAGV(2006.913,"IDXKEYS",X(1),X(2),DA(1),DA)=""
"IX",2006.913,2006.913,"IDXKEYS",2)
K ^MAGV(2006.913,"IDXKEYS",X(1),X(2),DA(1),DA)
"IX",2006.913,2006.913,"IDXKEYS",2.5)
K ^MAGV(2006.913,"IDXKEYS")
"IX",2006.913,2006.913,"IDXKEYS",11.1,0)
^.114IA^2^2
"IX",2006.913,2006.913,"IDXKEYS",11.1,1,0)
1^F^2006.9132^2^^1^F
"IX",2006.913,2006.913,"IDXKEYS",11.1,2,0)
2^F^2006.9132^.01^^2^F
"IX",2006.914,2006.914,"BKEYACT",0)
2006.914^BKEYACT^To enforce the rule that only one business key could be active. ^R^^R^IR^I^2006.914^^^^^LS
"IX",2006.914,2006.914,"BKEYACT",1)
S ^MAGV(2006.914,"BKEYACT",X(1),DA)=""
"IX",2006.914,2006.914,"BKEYACT",1.4)
S X=(X(2)=1)
"IX",2006.914,2006.914,"BKEYACT",2)
K ^MAGV(2006.914,"BKEYACT",X(1),DA)
"IX",2006.914,2006.914,"BKEYACT",2.5)
K ^MAGV(2006.914,"BKEYACT")
"IX",2006.914,2006.914,"BKEYACT",11.1,0)
^.114IA^2^2
"IX",2006.914,2006.914,"BKEYACT",11.1,1,0)
1^F^2006.914^6^^1^F
"IX",2006.914,2006.914,"BKEYACT",11.1,1,3)

"IX",2006.914,2006.914,"BKEYACT",11.1,2,0)
2^F^2006.914^7^^^F
"IX",2006.914,2006.914,"BKEYACT",11.1,2,3)

"IX",2006.9192,2006.9192,"C",0)
2006.9192^C^Uniqueness Index for Key 'A' of File #2006.9192^R^^R^IR^I^2006.9192^^^^^LS
"IX",2006.9192,2006.9192,"C",1)
S ^MAGV(2006.9192,"C",X(1),X(2),DA)=""
"IX",2006.9192,2006.9192,"C",2)
K ^MAGV(2006.9192,"C",X(1),X(2),DA)
"IX",2006.9192,2006.9192,"C",2.5)
K ^MAGV(2006.9192,"C")
"IX",2006.9192,2006.9192,"C",11.1,0)
^.114IA^2^2
"IX",2006.9192,2006.9192,"C",11.1,1,0)
1^F^2006.9192^2^^1
"IX",2006.9192,2006.9192,"C",11.1,2,0)
2^F^2006.9192^1.1^^2
"IX",2006.926,2006.926,"C",0)
2006.926^C^Quick access to statistics by Transaction Type, Succeeded, and Date/Time.^R^^R^IR^I^2006.926^^^^^LS
"IX",2006.926,2006.926,"C",1)
S ^MAGV(2006.926,"C",X(1),X(2),X(3),DA)=""
"IX",2006.926,2006.926,"C",2)
K ^MAGV(2006.926,"C",X(1),X(2),X(3),DA)
"IX",2006.926,2006.926,"C",2.5)
K ^MAGV(2006.926,"C")
"IX",2006.926,2006.926,"C",11.1,0)
^.114IA^3^3
"IX",2006.926,2006.926,"C",11.1,1,0)
1^F^2006.926^.01^^1^F
"IX",2006.926,2006.926,"C",11.1,1,3)

"IX",2006.926,2006.926,"C",11.1,2,0)
2^F^2006.926^2^^2^F
"IX",2006.926,2006.926,"C",11.1,2,3)

"IX",2006.926,2006.926,"C",11.1,3,0)
3^F^2006.926^3^^3^F
"IX",2006.926,2006.926,"C",11.1,3,3)

"IX",2006.928,2006.928,"ENQBLDT",0)
2006.928^ENQBLDT^Index on queue ID and queued date/time and place is blank.^R^^R^IR^I^2006.928^^^^^LS
"IX",2006.928,2006.928,"ENQBLDT",1)
S ^MAGV(2006.928,"ENQBLDT",X(1),X(2),DA)=""
"IX",2006.928,2006.928,"ENQBLDT",1.4)
S X=(X(3)="")
"IX",2006.928,2006.928,"ENQBLDT",2)
K ^MAGV(2006.928,"ENQBLDT",X(1),X(2),DA)
"IX",2006.928,2006.928,"ENQBLDT",2.4)

"IX",2006.928,2006.928,"ENQBLDT",2.5)
K ^MAGV(2006.928,"ENQBLDT")
"IX",2006.928,2006.928,"ENQBLDT",11.1,0)
^.114IA^3^3
"IX",2006.928,2006.928,"ENQBLDT",11.1,1,0)
1^F^2006.928^.01^^1^F
"IX",2006.928,2006.928,"ENQBLDT",11.1,2,0)
2^F^2006.928^3^^2^F
"IX",2006.928,2006.928,"ENQBLDT",11.1,3,0)
3^F^2006.928^7^^^F
"IX",2006.928,2006.928,"ENQDT",0)
2006.928^ENQDT^We use to find messages by QUEUE IEN and oldest date^R^^R^IR^I^2006.928^^^^^LS
"IX",2006.928,2006.928,"ENQDT",1)
S ^MAGV(2006.928,"ENQDT",X(1),X(2),DA)=""
"IX",2006.928,2006.928,"ENQDT",2)
K ^MAGV(2006.928,"ENQDT",X(1),X(2),DA)
"IX",2006.928,2006.928,"ENQDT",2.5)
K ^MAGV(2006.928,"ENQDT")
"IX",2006.928,2006.928,"ENQDT",11.1,0)
^.114IA^2^2
"IX",2006.928,2006.928,"ENQDT",11.1,1,0)
1^F^2006.928^.01^^1^F
"IX",2006.928,2006.928,"ENQDT",11.1,1,3)

"IX",2006.928,2006.928,"ENQDT",11.1,2,0)
2^F^2006.928^3^^2^F
"IX",2006.928,2006.928,"ENQDT",11.1,2,3)

"IX",2006.928,2006.928,"ENQPLDT",0)
2006.928^ENQPLDT^This index is used to find entries by Queue, Place and Date^R^^R^IR^I^2006.928^^^^^LS
"IX",2006.928,2006.928,"ENQPLDT",1)
S ^MAGV(2006.928,"ENQPLDT",X(1),X(2),X(3),DA)=""
"IX",2006.928,2006.928,"ENQPLDT",1.4)

"IX",2006.928,2006.928,"ENQPLDT",2)
K ^MAGV(2006.928,"ENQPLDT",X(1),X(2),X(3),DA)
"IX",2006.928,2006.928,"ENQPLDT",2.4)

"IX",2006.928,2006.928,"ENQPLDT",2.5)
K ^MAGV(2006.928,"ENQPLDT")
"IX",2006.928,2006.928,"ENQPLDT",11.1,0)
^.114IA^3^3
"IX",2006.928,2006.928,"ENQPLDT",11.1,1,0)
1^F^2006.928^.01^^1^F
"IX",2006.928,2006.928,"ENQPLDT",11.1,2,0)
2^F^2006.928^7^^2^F
"IX",2006.928,2006.928,"ENQPLDT",11.1,3,0)
3^F^2006.928^3^^3^F
"KEY",2006.9192,2006.9192,"A",0)
2006.9192^A^P^986
"KEY",2006.9192,2006.9192,"A",2,0)
^.312IA^2^2
"KEY",2006.9192,2006.9192,"A",2,1,0)
2^2006.9192^1
"KEY",2006.9192,2006.9192,"A",2,2,0)
1.1^2006.9192^2
"KEYPTR",2006.9192,2006.9192,"A")
2006.9192^C
"KRN",.4,123457,-1)
0^1
"KRN",.4,123457,0)
MAGV-FILEREF-QUERY^3101118.1319^@^2006.918^^@^3101118
"KRN",.4,123457,"%D",0)
^^2^2^3101118^
"KRN",.4,123457,"%D",1,0)
This print template allows the user to retrieve patient, study and series 
"KRN",.4,123457,"%D",2,0)
information for a particular file name or range of file names.
"KRN",.4,123457,"DXS",1,9.2)
S I(100,0)=$G(D0),DIP(101)=$S($D(^MAGV(2006.916,D0,0)):^(0),1:"") S X=$P(DIP(101),U,1) K DIC S DIC="^MAGV(2005.65,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y
"KRN",.4,123457,"DXS",2,9.2)
S I(700,0)=$G(D0),DIP(701)=$S($D(^MAGV(2005.6,D0,0)):^(0),1:"") S X="`"_$P(DIP(701),U,1) K DIC S DIC="^DPT(",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y
"KRN",.4,123457,"F",1)
-2006.916,^MAGV(2006.916,^^S I(0,0)=D0 S DIP(1)=$S($D(^MAGV(2006.918,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;".01:"~
"KRN",.4,123457,"F",2)
-2006.916,-2005.65,^MAGV(2005.65,^^X DXS(1,9.2) S DIP(201)=$S($D(^MAGV(2005.65,D0,0)):^(0),1:"") S X=$P(DIP(201),U,1) S D0=I(100,0);Z;".01:2005.65:"~
"KRN",.4,123457,"F",3)
-2006.916,-2005.65,-2005.64,^MAGV(2005.64,^^S I(200,0)=D0 S DIP(201)=$S($D(^MAGV(2005.65,D0,6)):^(6),1:"") S X=$P(DIP(201),U,1),X=X S D(0)=+X;Z;"11:"~
"KRN",.4,123457,"F",4)
-2006.916,-2005.65,-2005.64,-2005.63,^MAGV(2005.63,^^S I(300,0)=D0 S DIP(301)=$S($D(^MAGV(2005.64,D0,6)):^(6),1:"") S X=$P(DIP(301),U,1),X=X S D(0)=+X;Z;"11:"~
"KRN",.4,123457,"F",5)
-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,^MAGV(2005.62,^^S I(400,0)=D0 S DIP(401)=$S($D(^MAGV(2005.63,D0,6)):^(6),1:"") S X=$P(DIP(401),U,1),X=X S D(0)=+X;Z;"11:"~
"KRN",.4,123457,"F",6)
-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,-2005.61,^MAGV(2005.61,^^S I(500,0)=D0 S DIP(501)=$S($D(^MAGV(2005.62,D0,6)):^(6),1:"") S X=$P(DIP(501),U,1),X=X S D(0)=+X;Z;"11:"~
"KRN",.4,123457,"F",7)
-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,-2005.61,-2005.6,^MAGV(2005.6,^^S I(600,0)=D0 S DIP(601)=$S($D(^MAGV(2005.61,D0,6)):^(6),1:"") S X=$P(DIP(601),U,1),X=X S D(0)=+X;Z;".99:"~
"KRN",.4,123457,"F",8)
-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,-2005.61,-2005.6,-2,^DPT(^^X DXS(2,9.2) S DIP(801)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(DIP(801),U,1) S D0=I(700,0);Z;""`"_.01:2:"~
"KRN",.4,123457,"F",9)
-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,-2005.61,-2005.6,-2,.09~-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,-2005.61,-2005.6,-2,.01~-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,-2005.61,-2005.6,-2,.02~
"KRN",.4,123457,"F",10)
-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,-2005.61,-2005.6,-2,.03~-2006.916,-2005.65,-2005.64,-2005.63,-2005.62,.01~-2006.916,-2005.65,-2005.64,-2005.63,.01~
"KRN",.4,123457,"H")
ARTIFACT INSTANCE LIST
"KRN",.4,123458,-1)
0^2
"KRN",.4,123458,0)
MAGV-PAT-QUERY^3101118.1113^@^2005.6^^@^3101118
"KRN",.4,123458,"%D",0)
^^2^2^3101118^
"KRN",.4,123458,"%D",1,0)
This print template allows the user to generate a report of study, 
"KRN",.4,123458,"%D",2,0)
series, image and file information arranged by patient.
"KRN",.4,123458,"DXS",1,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^MAGV(2005.6,D0,0)):^(0),1:"") S X="`"_$P(DIP(1),U,1) K DIC S DIC="^DPT(",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y S DIP(101)=$S($D(^DPT(D0,0)):^(0),1:"")
"KRN",.4,123458,"DXS",2,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2005.61,D,0)) S X=$P(^(0),U) S DIXX=DIXX(1) D M
"KRN",.4,123458,"DXS",2,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2005.61,"C",I(0,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(2,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123458,"DXS",3,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2005.62,D,0)) S X=$P(^(0),U) S DIXX=DIXX(2) D M
"KRN",.4,123458,"DXS",3,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2005.62,"C",I(100,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(3,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123458,"DXS",4,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2005.63,D,0)) S X=$P(^(0),U) S DIXX=DIXX(3) D M
"KRN",.4,123458,"DXS",4,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2005.63,"C",I(200,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(4,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123458,"DXS",5,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2005.64,D,0)) S X=$P(^(0),U) S DIXX=DIXX(4) D M
"KRN",.4,123458,"DXS",5,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2005.64,"C",I(300,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(5,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123458,"DXS",6,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2005.65,D,0)) S X=$P(^(0),U) S DIXX=DIXX(5) D M
"KRN",.4,123458,"DXS",6,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2005.65,"C",I(400,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(6,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123458,"DXS",7,9.2)
S I(500,0)=$G(D0),DIP(501)=$S($D(^MAGV(2005.65,D0,0)):^(0),1:"") S X=$P(DIP(501),U,1) K DIC S DIC="^MAGV(2006.916,",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y
"KRN",.4,123458,"DXS",8,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2006.918,D,0)) S X=$P(^(0),U) S:$D(^MAGV(2006.916,+X,0)) X=$P(^(0),U) S DIXX=DIXX(7) D M
"KRN",.4,123458,"DXS",8,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2006.918,"B",I(600,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(8,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123458,"F",1)
-2,^DPT(^^X DXS(1,9.2) S X=$P(DIP(101),U,1) S D0=I(0,0);Z;""`"_.01:2:"~-2,.01~-2,.09~
"KRN",.4,123458,"F",2)
-2005.61,^MAGV(2005.61,^1^S I(0,0)=$G(D0) X DXS(2,9.3) S X="" S D0=I(0,0);Z;"IMAGING PROCEDURE REFERENCE:"~-2005.61,.01~
"KRN",.4,123458,"F",3)
-2005.61,-2005.62,^MAGV(2005.62,^1^S I(100,0)=$G(D0) X DXS(3,9.3) S X="" S D0=I(100,0);Z;"IMAGE STUDY:"~-2005.61,-2005.62,.01~-2005.61,-2005.62,14~-2005.61,-2005.62,3~
"KRN",.4,123458,"F",4)
-2005.61,-2005.62,-2005.63,^MAGV(2005.63,^1^S I(200,0)=$G(D0) X DXS(4,9.3) S X="" S D0=I(200,0);Z;"IMAGE SERIES:"~-2005.61,-2005.62,-2005.63,.01~-2005.61,-2005.62,-2005.63,14~
"KRN",.4,123458,"F",5)
-2005.61,-2005.62,-2005.63,3~-2005.61,-2005.62,-2005.63,-2005.64,^MAGV(2005.64,^1^S I(300,0)=$G(D0) X DXS(5,9.3) S X="" S D0=I(300,0);Z;"IMAGE SOP INSTANCE:"~
"KRN",.4,123458,"F",6)
-2005.61,-2005.62,-2005.63,-2005.64,.01~-2005.61,-2005.62,-2005.63,-2005.64,13~
"KRN",.4,123458,"F",7)
-2005.61,-2005.62,-2005.63,-2005.64,-2005.65,^MAGV(2005.65,^1^S I(400,0)=$G(D0) X DXS(6,9.3) S X="" S D0=I(400,0);Z;"IMAGE INSTANCE FILE:"~
"KRN",.4,123458,"F",8)
-2005.61,-2005.62,-2005.63,-2005.64,-2005.65,-2006.916,^MAGV(2006.916,^^X DXS(7,9.2) S DIP(601)=$S($D(^MAGV(2006.916,D0,0)):^(0),1:"") S X=$P(DIP(601),U,1) S D0=I(500,0);Z;".01:2006.916:"~
"KRN",.4,123458,"F",9)
-2005.61,-2005.62,-2005.63,-2005.64,-2005.65,-2006.916,-2006.918,^MAGV(2006.918,^1^S I(600,0)=$G(D0) X DXS(8,9.3) S X="" S D0=I(600,0);Z;"ARTIFACT INSTANCE:"~
"KRN",.4,123458,"F",10)
-2005.61,-2005.62,-2005.63,-2005.64,-2005.65,-2006.916,-2006.918,6~
"KRN",.4,123458,"H")
STUDY / SERIES / IMAGE INFORMATION BY PATIENT
"KRN",.4,123459,-1)
0^3
"KRN",.4,123459,0)
MAGV-PROC-QUERY^3101118.1314^@^2005.61^^@^3101118
"KRN",.4,123459,"%D",0)
^.4001^2^2^3110126^^
"KRN",.4,123459,"%D",1,0)
This print template enables the user to generate a report of study and 
"KRN",.4,123459,"%D",2,0)
series information arranged by procedure ID.
"KRN",.4,123459,"DXS",1,9.2)
S I(100,0)=$G(D0),DIP(101)=$S($D(^MAGV(2005.6,D0,0)):^(0),1:"") S X="`"_$P(DIP(101),U,1) K DIC S DIC="^DPT(",DIC(0)="MF" D ^DIC S (D,D0,D(0))=+Y
"KRN",.4,123459,"DXS",2,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2005.62,D,0)) S X=$P(^(0),U) S DIXX=DIXX(1) D M
"KRN",.4,123459,"DXS",2,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2005.62,"C",I(0,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(2,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123459,"DXS",3,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^MAGV(2005.63,D,0)) S X=$P(^(0),U) S DIXX=DIXX(2) D M
"KRN",.4,123459,"DXS",3,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^MAGV(2005.63,"C",I(100,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DXS(3,9.2) Q:'$D(D)  S D=D0
"KRN",.4,123459,"F",1)
-2005.6,^MAGV(2005.6,^^S I(0,0)=D0 S DIP(1)=$S($D(^MAGV(2005.61,D0,6)):^(6),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;".99:"~
"KRN",.4,123459,"F",2)
-2005.6,-2,^DPT(^^X DXS(1,9.2) S DIP(201)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(DIP(201),U,1) S D0=I(100,0);Z;""`"_.01:2:"~-2005.6,-2,.09~-2005.6,-2,.01~
"KRN",.4,123459,"F",3)
-2005.6,-2,.03~-2005.62,^MAGV(2005.62,^1^S I(0,0)=$G(D0) X DXS(2,9.3) S X="" S D0=I(0,0);Z;"IMAGE STUDY:"~-2005.62,.01~
"KRN",.4,123459,"F",4)
-2005.62,-2005.63,^MAGV(2005.63,^1^S I(100,0)=$G(D0) X DXS(3,9.3) S X="" S D0=I(100,0);Z;"IMAGE SERIES:"~-2005.62,-2005.63,.01~
"KRN",.4,123459,"H")
IMAGING PROCEDURE REFERENCE LIST
"KRN",.401,123460,-1)
0^1
"KRN",.401,123460,0)
MAGV-FILEREF-QUERY^3101115.0931^@^2006.918^^@^3101118
"KRN",.401,123460,2,0)
^.4014^1^1
"KRN",.401,123460,2,1,0)
2006.918^6^FILEREF^^^^^^^4
"KRN",.401,123460,2,1,"ASK")
1
"KRN",.401,123460,2,1,"F")
660_00000000000322.dclz^660_00000000000322.dcm
"KRN",.401,123460,2,1,"GET")
S DISX(1)=$P($G(^MAGV(2006.918,D0,2)),U)
"KRN",.401,123460,2,1,"IX")
^MAGV(2006.918,"C",^MAGV(2006.918,^2
"KRN",.401,123460,2,1,"QCON")
I DISX(1)="660_00000000000322.dcm"
"KRN",.401,123460,2,1,"T")
660_00000000000322.dcm^660_00000000000322.dcm
"KRN",.401,123460,2,1,"TXT")
FILEREF equals 660_00000000000322.dcm
"KRN",.401,123460,2,"B",2006.918,1)

"KRN",.401,123460,"%D",0)
^^3^3^3101118^^
"KRN",.401,123460,"%D",1,0)
This sort template allows the user to select an entry or a range of 
"KRN",.401,123460,"%D",2,0)
entries from the ARTIFACT INSTANCE File (#2006.918) based on the value of 
"KRN",.401,123460,"%D",3,0)
the FILEREF Field (#6).
"KRN",.401,123461,-1)
0^2
"KRN",.401,123461,0)
MAGV-PAT-QUERY^3101109.1511^@^2005.6^^@^3101118
"KRN",.401,123461,2,0)
^.4014^1^1
"KRN",.401,123461,2,1,0)
2005.6^.01^ENTERPRISE PATIENT ID^^^^^^^4
"KRN",.401,123461,2,1,"ASK")
1
"KRN",.401,123461,2,1,"F")
20.999999^21
"KRN",.401,123461,2,1,"GET")
S DISX(1)=$P($G(^MAGV(2005.6,D0,0)),U)
"KRN",.401,123461,2,1,"IX")
^MAGV(2005.6,"B",^MAGV(2005.6,^2
"KRN",.401,123461,2,1,"QCON")
I DISX(1)=21
"KRN",.401,123461,2,1,"T")
21^21
"KRN",.401,123461,2,1,"TXT")
ENTERPRISE PATIENT ID equals 21
"KRN",.401,123461,2,"B",2005.6,1)

"KRN",.401,123461,"%D",0)
^.4012^3^3^3101118^^
"KRN",.401,123461,"%D",1,0)
This sort template allows the user to select one or more entries from the 
"KRN",.401,123461,"%D",2,0)
IMAGING PATIENT REFERENCE File (#2005.6) based on the value of the 
"KRN",.401,123461,"%D",3,0)
ENTERPRISE PATIENT ID Field (#.01).
"KRN",.401,123462,-1)
0^3
"KRN",.401,123462,0)
MAGV-PROC-QUERY^3101115.0926^@^2005.61^^@^3101118
"KRN",.401,123462,2,0)
^.4014^1^1
"KRN",.401,123462,2,1,0)
2005.61^.01^PROCEDURE ID^^^^^^^4
"KRN",.401,123462,2,1,"ASK")
1
"KRN",.401,123462,2,1,"F")
112309-328z^112309-329
"KRN",.401,123462,2,1,"GET")
S DISX(1)=$P($G(^MAGV(2005.61,D0,0)),U)
"KRN",.401,123462,2,1,"IX")
^MAGV(2005.61,"B",^MAGV(2005.61,^2
"KRN",.401,123462,2,1,"QCON")
I DISX(1)="112309-329"
"KRN",.401,123462,2,1,"T")
112309-329^112309-329
"KRN",.401,123462,2,1,"TXT")
PROCEDURE ID equals 112309-329
"KRN",.401,123462,2,"B",2005.61,1)

"KRN",.401,123462,"%D",0)
^.4012^3^3^3101118^^
"KRN",.401,123462,"%D",1,0)
This sort template allows the user to select one or more entries from the 
"KRN",.401,123462,"%D",2,0)
IMAGING PROCEDURE REFERENCE File (#2005.61) based on the value of the 
"KRN",.401,123462,"%D",3,0)
PROCEDURE ID Field (#.01).
"KRN",.401,123463,-1)
0^4
"KRN",.401,123463,0)
MAGVA-ASYNC-STORAGE-ERRORS^3120509.1324^@^2006.928^^@^3120509
"KRN",.401,123463,2,0)
^.4014
"KRN",.401,123463,"%D",0)
^.4012^2^2^3120510^^^^
"KRN",.401,123463,"%D",1,0)
Stores Asynchronous Storage Request Error Queue entries from
"KRN",.401,123463,"%D",2,0)
the QUEUE MESSAGE file. (MAG*3.0*116)
"KRN",.401,123463,"DIPT")
MAGVA-ASYNC-STORAGE-ERRORS
"KRN",.401,123463,"DIS",0)
I $P($G(^MAGV(2006.928,D0,0)),U,1)=2
"KRN",.401,123463,"O",0)
^.4011^1^1^3120510^
"KRN",.401,123463,"O",1,0)
QUEUE EQUALS 2^Async Storage Request Error Queue
"KRN",.401,123463,"QR")
3120622.14162^0
"KRN",19,123464,-1)
0^1
"KRN",19,123464,0)
MAG DICOM VISA^DICOM VISA^^B^^^^^^^^
"KRN",19,123464,1,0)
^19.06^1^1^3110321^^^^
"KRN",19,123464,1,1,0)
This menu option exists for the RPC Broker to establish an environment that grants a user access to the RPC subroutines that support DICOM VISA.
"KRN",19,123464,"RPC",0)
^19.05P^^0
"KRN",19,123464,"U")
DICOM VISA
"KRN",19,123465,-1)
0^2
"KRN",19,123465,0)
MAG SYS-DELETE STUDY^Delete Study by Accession Number^^R^^MAG DELETE^^^^^^IMAGING
"KRN",19,123465,1,0)
^19.06^2^2^3120130^^^^
"KRN",19,123465,1,1,0)
This option allows a user with the system manager key to delete study
"KRN",19,123465,1,2,0)
by Accession Number
"KRN",19,123465,25)
DELSTUDY^MAGVD001
"KRN",19,123465,"U")
DELETE STUDY BY ACCESSION NUMB
"KRN",19,123466,-1)
0^3
"KRN",19,123466,0)
MAGV AE SEC MX SETTINGS^Configure AE Security Matrix Settings^^R^^MAG SYSTEM^^^^^y^IMAGING
"KRN",19,123466,1,0)
^19.06^1^1^3120131^^^^
"KRN",19,123466,1,1,0)
User interface for setting the AE Security Matrix options.
"KRN",19,123466,10.1)
MAGV AE SEC MX
"KRN",19,123466,25)
INTRFACE^MAGVRS51
"KRN",19,123466,99)
61843,48052
"KRN",19,123466,"U")
CONFIGURE AE SECURITY MATRIX S
"KRN",19,123467,-1)
0^4
"KRN",19,123467,0)
MAGV HDIG MENU^Hybrid DICOM Gateway Menu^^M^^^^^^^^IMAGING
"KRN",19,123467,1,0)
^19.06^2^2^3120727^^^^
"KRN",19,123467,1,1,0)
Menu to allow viewing and requeuing of HDIG async storage request error queue
"KRN",19,123467,1,2,0)
entries in the QUEUE MESSAGE file (#2006.928).
"KRN",19,123467,10,0)
^19.01IP^3^3
"KRN",19,123467,10.1)

"KRN",19,123467,99)
62705,65230
"KRN",19,123467,"U")
HYBRID DICOM GATEWAY MENU
"KRN",19,123468,-1)
0^5
"KRN",19,123468,0)
MAGVA ASYNC STORAGE ERR LIST^List Async Storage Request Errors^^R^^^^^^^^IMAGING
"KRN",19,123468,1,0)
^19.06^2^2^3120510^^^^
"KRN",19,123468,1,1,0)
Displays QUEUE MESSAGE file (#2006.928) entries stored in search template
"KRN",19,123468,1,2,0)
MAGVA-ASYNC-STORAGE-ERRORS. (MAG*3.0*34)
"KRN",19,123468,10.1)

"KRN",19,123468,25)
QERRLIST^MAGVAQ02
"KRN",19,123468,200.9)
^y
"KRN",19,123468,"U")
LIST ASYNC STORAGE REQUEST ERR
"KRN",19,123469,-1)
0^6
"KRN",19,123469,0)
MAGVA ASYNC STORAGE ERR QURY^Find Async Storage Request Errors^^R^^^^^^^^IMAGING
"KRN",19,123469,1,0)
^19.06^3^3^3120510^^^^
"KRN",19,123469,1,1,0)
Queries the QUEUE MESSAGE file (#2006.928) for Async Storage Request Error
"KRN",19,123469,1,2,0)
Queue entries, saving them to a template for review or re-queuing to the
"KRN",19,123469,1,3,0)
Async Storage Request Queue. (MAG*3.0*34)
"KRN",19,123469,10.1)

"KRN",19,123469,25)
QERRQURY^MAGVAQ02
"KRN",19,123469,200.9)
^y
"KRN",19,123469,"U")
FIND ASYNC STORAGE REQUEST ERR
"KRN",19,123470,-1)
0^7
"KRN",19,123470,0)
MAGVA ASYNC STORAGE ERR REQU^Requeue Async Storage Request Errors^^R^^^^^^^^IMAGING
"KRN",19,123470,1,0)
^19.06^3^3^3120510^^^^
"KRN",19,123470,1,1,0)
This option requeues QUEUE MESSAGE file (#2006.928) Async Storage Request
"KRN",19,123470,1,2,0)
Error Queue entries stored in search template MAGVA-ASYNC-STORAGE-ERRORS
"KRN",19,123470,1,3,0)
to the Async Storage Request Queue for Archiver re-processing. (MAG*3.0*34)
"KRN",19,123470,25)
QERRREQ^MAGVAQ02
"KRN",19,123470,99)
62571,43640
"KRN",19,123470,200.9)
^y
"KRN",19,123470,"U")
REQUEUE ASYNC STORAGE REQUEST 
"KRN",19.1,123471,-1)
0^1
"KRN",19.1,123471,0)
MAGV IMPORT MEDIA STAGER^Allow Importer Media Staging^^n
"KRN",19.1,123471,1,0)
^19.11^2^2^3110503^^^
"KRN",19.1,123471,1,1,0)
Users holding this security key may use the DICOM Importer II application to stage (copy) from
"KRN",19.1,123471,1,2,0)
media to staging persistent storage, where it waits for reconciliation processing. (MAG*3.0*118).
"KRN",19.1,123472,-1)
0^2
"KRN",19.1,123472,0)
MAGV IMPORT RECON ARTIFACT^Import Reconciler^^n
"KRN",19.1,123472,1,0)
^19.11^3^3^3110503^^
"KRN",19.1,123472,1,1,0)
Users holding this security key may use the DICOM Importer II application to
"KRN",19.1,123472,1,2,0)
create new orders, and delete studies and artifacts. Extends security key
"KRN",19.1,123472,1,3,0)
MAGV IMPORT RECON CONTRACT. (MAG*3.0*118).
"KRN",19.1,123473,-1)
0^3
"KRN",19.1,123473,0)
MAGV IMPORT RECON CONTRACT^Import Reconciler (contracted)^^n
"KRN",19.1,123473,1,0)
^19.11^3^3^3110503^^
"KRN",19.1,123473,1,1,0)
Users holding this security key may use the DICOM Importer II application to ass-
"KRN",19.1,123473,1,2,0)
ociate study DICOM objects with the correct study for reconciliation. Extends
"KRN",19.1,123473,1,3,0)
security key MAGV IMPORT STAGE MEDIA ADV. (MAG*3.0*118).
"KRN",19.1,123474,-1)
0^4
"KRN",19.1,123474,0)
MAGV IMPORT REPORTS^Allow Retrieval of Reports
"KRN",19.1,123474,1,0)
^^3^3^3110516^
"KRN",19.1,123474,1,1,0)
Users holding the security key may use the DICOM Importer II application
"KRN",19.1,123474,1,2,0)
to view and print Importer reports, as well as save report contents
"KRN",19.1,123474,1,3,0)
to a text file. (MAG*3.0*118).
"KRN",19.1,123475,-1)
0^5
"KRN",19.1,123475,0)
MAGV IMPORT STAGE MEDIA ADV^Import stage media (advanced).^^n
"KRN",19.1,123475,1,0)
^19.11^3^3^3121009^^^^
"KRN",19.1,123475,1,1,0)
Users holding this security key may use the DICOM Importer II application to stage (copy)
"KRN",19.1,123475,1,2,0)
study level artifacts from media to staging persistent storage. Extends security key
"KRN",19.1,123475,1,3,0)
MAGV IMPORT MEDIA STAGER. (MAG*3.0*118).
"KRN",8994,123476,-1)
0^1
"KRN",8994,123476,0)
MAG CFIND QUERY^FIND^MAGDQR01^2^R^0^^0^3
"KRN",8994,123476,1,0)
^8994.01^24^24^3021002^^
"KRN",8994,123476,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123476,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123476,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123476,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123476,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123476,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123476,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123476,1,8,0)
 |                                                               |
"KRN",8994,123476,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123476,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123476,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123476,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123476,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123476,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123476,1,15,0)
 
"KRN",8994,123476,1,16,0)
This RPC performs a DICOM C-FIND request.
"KRN",8994,123476,1,17,0)
 
"KRN",8994,123476,1,18,0)
A request is executed through a TaskMan process,
"KRN",8994,123476,1,19,0)
which stores the results in temporary storage (^MAGDQR(2006.5732)).
"KRN",8994,123476,1,20,0)
 
"KRN",8994,123476,1,21,0)
Subsequent calls to this same RPC will retrieve the
"KRN",8994,123476,1,22,0)
results from the result-set to the client.
"KRN",8994,123476,1,23,0)
 
"KRN",8994,123476,1,24,0)
A final call to this RPC will clean up the temporary storage.
"KRN",8994,123476,2,0)
^8994.02A^5^5
"KRN",8994,123476,2,1,0)
TAGS^2^32000^1^1
"KRN",8994,123476,2,1,1,0)
^^9^9^3041201^
"KRN",8994,123476,2,1,1,1,0)
This parameter is an array. Each element in this array
"KRN",8994,123476,2,1,1,2,0)
has a value that looks like:
"KRN",8994,123476,2,1,1,3,0)
 tag | VR | flag | value
"KRN",8994,123476,2,1,1,4,0)
 
"KRN",8994,123476,2,1,1,5,0)
Each 'tag' is a DICOM tag (two groups of 4 hexadecimal
"KRN",8994,123476,2,1,1,6,0)
digits, separated by a comma).
"KRN",8994,123476,2,1,1,7,0)
 
"KRN",8994,123476,2,1,1,8,0)
When the value is non-empty, it will be used as a search
"KRN",8994,123476,2,1,1,9,0)
criterion in the actual C-Find processing.
"KRN",8994,123476,2,2,0)
RESULT^1^20^1^2
"KRN",8994,123476,2,2,1,0)
^^6^6^3041201^
"KRN",8994,123476,2,2,1,1,0)
The value of this parameter is an integer number that
"KRN",8994,123476,2,2,1,2,0)
identifies a Result-Set.
"KRN",8994,123476,2,2,1,3,0)
 
"KRN",8994,123476,2,2,1,4,0)
The value of this parameter is either 0 (when a new
"KRN",8994,123476,2,2,1,5,0)
result-set is to be created) or equal to the internal
"KRN",8994,123476,2,2,1,6,0)
entry number of an existing result-set.
"KRN",8994,123476,2,3,0)
OFFSET^1^20^1^3
"KRN",8994,123476,2,3,1,0)
^^14^14^3041201^
"KRN",8994,123476,2,3,1,1,0)
The value of this parameter is an integer number.
"KRN",8994,123476,2,3,1,2,0)
When the value of this number is equal to 0,
"KRN",8994,123476,2,3,1,3,0)
the RPC will either create a new result-set,
"KRN",8994,123476,2,3,1,4,0)
(when the value of RESULT is also equal to 0),
"KRN",8994,123476,2,3,1,5,0)
or else check whether TaskMan has finished building
"KRN",8994,123476,2,3,1,6,0)
the result-set, and if so, return the first batch of
"KRN",8994,123476,2,3,1,7,0)
results.
"KRN",8994,123476,2,3,1,8,0)
 
"KRN",8994,123476,2,3,1,9,0)
When the value of this number is greater than 0,
"KRN",8994,123476,2,3,1,10,0)
the RPC will return the next batch of results, starting
"KRN",8994,123476,2,3,1,11,0)
from the one indicated by the value of this parameter.
"KRN",8994,123476,2,3,1,12,0)
 
"KRN",8994,123476,2,3,1,13,0)
When the value of this number is less than 0,
"KRN",8994,123476,2,3,1,14,0)
the RPC will clean up the result-set.
"KRN",8994,123476,2,4,0)
MAX^1^10^1^4
"KRN",8994,123476,2,4,1,0)
^8994.021^3^3^3041201^^
"KRN",8994,123476,2,4,1,1,0)
The value of this parameter is an integer number.
"KRN",8994,123476,2,4,1,2,0)
This value indicates the number of results to be returned
"KRN",8994,123476,2,4,1,3,0)
in each call to this RPC.
"KRN",8994,123476,2,5,0)
AENAME^1^127^0^5
"KRN",8994,123476,2,5,1,0)
^^3^3^3111214^
"KRN",8994,123476,2,5,1,1,0)
This is the name of the DICOM Application Entity performing the query. It 
"KRN",8994,123476,2,5,1,2,0)
may be mapped to an entry on the DICOM AE SECURITY MATRIX file 
"KRN",8994,123476,2,5,1,3,0)
(#2006.9192).
"KRN",8994,123476,2,"B","AENAME",5)

"KRN",8994,123476,2,"B","MAX",4)

"KRN",8994,123476,2,"B","OFFSET",3)

"KRN",8994,123476,2,"B","RESULT",2)

"KRN",8994,123476,2,"B","TAGS",1)

"KRN",8994,123476,2,"PARAMSEQ",1,1)

"KRN",8994,123476,2,"PARAMSEQ",2,2)

"KRN",8994,123476,2,"PARAMSEQ",3,3)

"KRN",8994,123476,2,"PARAMSEQ",4,4)

"KRN",8994,123476,2,"PARAMSEQ",5,5)

"KRN",8994,123476,3,0)
^^11^11^3041201^
"KRN",8994,123476,3,1,0)
The return parameter of this RPC is an array.
"KRN",8994,123476,3,2,0)
 
"KRN",8994,123476,3,3,0)
The first element of this array indicates whether
"KRN",8994,123476,3,4,0)
or not the RPC completed successfully: a positive number
"KRN",8994,123476,3,5,0)
indicates success, a negative number indicates a failure.
"KRN",8994,123476,3,6,0)
A zero value indicates success, but with no further
"KRN",8994,123476,3,7,0)
data to be returned.
"KRN",8994,123476,3,8,0)
 
"KRN",8994,123476,3,9,0)
The rest of the elements in the array contain either
"KRN",8994,123476,3,10,0)
valid data elements (successful completion) or
"KRN",8994,123476,3,11,0)
error messages (failure).
"KRN",8994,123477,-1)
0^2
"KRN",8994,123477,0)
MAG DICOM CHECK AE TITLE^AETITLE^MAGVRS52^2^R^0^^0^4
"KRN",8994,123477,1,0)
^^17^17^3120208
"KRN",8994,123477,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123477,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123477,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123477,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123477,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123477,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123477,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123477,1,8,0)
 |                                                               |
"KRN",8994,123477,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123477,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123477,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123477,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123477,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123477,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123477,1,15,0)
 
"KRN",8994,123477,1,16,0)
This Remote Procedure checks whether an Application Entity
"KRN",8994,123477,1,17,0)
is specified on a DICOM Gateway that has the specified name.
"KRN",8994,123477,2,0)
^8994.02A^^-2
"KRN",8994,123477,2,1,0)
TITLE^1^16^1^1
"KRN",8994,123477,2,1,1,0)
^8994.021^4^4^3111010^^^^
"KRN",8994,123477,2,1,1,1,0)
The value of this parameter is a string. This string is
"KRN",8994,123477,2,1,1,2,0)
constrained by the definition in the DICOM Standard
"KRN",8994,123477,2,1,1,3,0)
for the "title" of an Application Entity, that is: non-empty
"KRN",8994,123477,2,1,1,4,0)
and at most 16 characters in length.
"KRN",8994,123477,2,4,0)
LOCATION^1^6^1^2
"KRN",8994,123477,2,4,1,0)
^8994.021^3^3^3120203^^^^
"KRN",8994,123477,2,4,1,1,0)
The value of this parameter is a string.
"KRN",8994,123477,2,4,1,2,0)
  This string should be equal to a value from the INSTITUTION File (#4).
"KRN",8994,123477,2,4,1,3,0)
  This is needed to return the appropriate AETitle.
"KRN",8994,123477,2,"B","LOCATION",4)

"KRN",8994,123477,2,"B","TITLE",1)

"KRN",8994,123477,2,"PARAMSEQ",1,1)

"KRN",8994,123477,2,"PARAMSEQ",2,4)

"KRN",8994,123477,3,0)
^8994.03^6^6^3120203^^^^
"KRN",8994,123477,3,1,0)
The return parameter is an array. When the supplied title is
"KRN",8994,123477,3,2,0)
valid, the first element of the return array will be a "0" followed by
"KRN",8994,123477,3,3,0)
the AE NAME, REMOTE AE TITLE, LOCAL AE TITLE, LOCATION, IP ADDRESS, PORT NUMBER, a list of the associated DICOM SERVICES and DICOM ROLES.
"KRN",8994,123477,3,4,0)
 
"KRN",8994,123477,3,5,0)
When the supplied title is not found or the inputs are invalid,
"KRN",8994,123477,3,6,0)
a negative integer error code and an error message will be returned in the first element of the array.
"KRN",8994,123477,3,7,0)
only one element, which can have the values:
"KRN",8994,123477,3,8,0)
   -1,No AE Title specified
"KRN",8994,123477,3,9,0)
   -2,No entry for AE Title "xxx".
"KRN",8994,123478,-1)
0^3
"KRN",8994,123478,0)
MAG DICOM RADIOLOGY PROCEDURES^PROC^MAGDRPCA^2^R^0^^^3
"KRN",8994,123478,1,0)
1^8994.01^4^4^3111122^^^^
"KRN",8994,123478,1,1,0)
This RPC returns a list of Radiology Procedures for 'no-credit' Imaging
"KRN",8994,123478,1,2,0)
locations within a given division.
"KRN",8994,123478,1,3,0)
If the division does not have any 'no-credit' Imaging locations defined,
"KRN",8994,123478,1,4,0)
the results will return an error message indicating the problem.
"KRN",8994,123478,2,0)
^8994.02A^2^2
"KRN",8994,123478,2,1,0)
DIV^1^30^1^1
"KRN",8994,123478,2,1,1,0)
^8994.021^1^1^3111122^^^
"KRN",8994,123478,2,1,1,1,0)
This is the division used during the lookup process.
"KRN",8994,123478,2,2,0)
FILTER^1^30^0^2
"KRN",8994,123478,2,2,1,0)
^^2^2^3111122^
"KRN",8994,123478,2,2,1,1,0)
If this parameter is set to "1" procedure types of "B"road and "P"arent 
"KRN",8994,123478,2,2,1,2,0)
will be filtered from the return array.
"KRN",8994,123478,2,"B","DIV",1)

"KRN",8994,123478,2,"B","FILTER",2)

"KRN",8994,123478,2,"PARAMSEQ",1,1)

"KRN",8994,123478,2,"PARAMSEQ",2,2)

"KRN",8994,123479,-1)
0^4
"KRN",8994,123479,0)
MAG DICOM VISTA AE TITLE^VATITLE^MAGVRS52^1^R^0^^0^3
"KRN",8994,123479,1,0)
^8994.01^3^3^3111102^^
"KRN",8994,123479,1,1,0)
This Remote Procedure returns a string that can be used
"KRN",8994,123479,1,2,0)
as a DICOM Application Entity title for the purpose
"KRN",8994,123479,1,3,0)
established by the parameters to this procedure.
"KRN",8994,123479,2,0)
^8994.02A^3^3
"KRN",8994,123479,2,1,0)
SERVICE^1^20^1^1
"KRN",8994,123479,2,1,1,0)
^^5^5^3051115^
"KRN",8994,123479,2,1,1,1,0)
The value of this parameter is a string. This string
"KRN",8994,123479,2,1,1,2,0)
identifies a DICOM DIMSE Service.
"KRN",8994,123479,2,1,1,3,0)
The procedure will validate that the specified Application
"KRN",8994,123479,2,1,1,4,0)
Entity is permitted to perform the service specified in
"KRN",8994,123479,2,1,1,5,0)
this parameter.
"KRN",8994,123479,2,2,0)
ROLE^1^3^1^2
"KRN",8994,123479,2,2,1,0)
^8994.021^5^5^3080327^^^
"KRN",8994,123479,2,2,1,1,0)
The value of this parameter is a string. This string should
"KRN",8994,123479,2,2,1,2,0)
be equal to either "SCU" (Service Class User) or
"KRN",8994,123479,2,2,1,3,0)
"SCP" (Service Class Provider).
"KRN",8994,123479,2,2,1,4,0)
The procedure will validate that the specified Application
"KRN",8994,123479,2,2,1,5,0)
Entity is permitted to operate in the specified role.
"KRN",8994,123479,2,3,0)
LOCATION^1^6^1^3
"KRN",8994,123479,2,3,1,0)
^8994.021^4^4^3111102^^
"KRN",8994,123479,2,3,1,1,0)
The value of this parameter is a string.  This string is compared to
"KRN",8994,123479,2,3,1,2,0)
the appropriate value in the INSTITUTION File (#4).
"KRN",8994,123479,2,3,1,3,0)
This is needed to return the appropriate AETitle that represents a
"KRN",8994,123479,2,3,1,4,0)
specific division.
"KRN",8994,123479,2,"B","LOCATION",3)

"KRN",8994,123479,2,"B","ROLE",2)

"KRN",8994,123479,2,"B","SERVICE",1)

"KRN",8994,123479,2,"PARAMSEQ",1,1)

"KRN",8994,123479,2,"PARAMSEQ",2,2)

"KRN",8994,123479,2,"PARAMSEQ",3,3)

"KRN",8994,123480,-1)
0^5
"KRN",8994,123480,0)
MAG EVENT AUDIT^EVENT^MAGUAUD^2^R^0
"KRN",8994,123480,1,0)
^^18^18^3120208
"KRN",8994,123480,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123480,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123480,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123480,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123480,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123480,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123480,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123480,1,8,0)
 |                                                               |
"KRN",8994,123480,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123480,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123480,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123480,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123480,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123480,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123480,1,15,0)
 
"KRN",8994,123480,1,16,0)
This RPC audits background events such as DICOM Queries.  When auditing 
"KRN",8994,123480,1,17,0)
events executed by other APIs, it may be invoked as a MUMPS API without 
"KRN",8994,123480,1,18,0)
making another call to the RPC Broker.
"KRN",8994,123480,2,0)
^8994.02A^6^4
"KRN",8994,123480,2,1,0)
EVENT^1^30^1^1
"KRN",8994,123480,2,1,1,0)
^8994.021^2^2^3110119^^
"KRN",8994,123480,2,1,1,1,0)
This is the event being audited.  It must be a valid entry on the IMAGING 
"KRN",8994,123480,2,1,1,2,0)
EVENT ACTION File (#2006.931).
"KRN",8994,123480,2,3,0)
HOSTNAME^1^64^^2
"KRN",8994,123480,2,3,1,0)
^8994.021^1^1^3120203^^^
"KRN",8994,123480,2,3,1,1,0)
This is the host name of the host machine whose event is being audited.
"KRN",8994,123480,2,4,0)
APPNAME^1^64^^3
"KRN",8994,123480,2,4,1,0)
^8994.021^1^1^3120203^^^
"KRN",8994,123480,2,4,1,1,0)
This is the application name of the application whose event is being audited.
"KRN",8994,123480,2,5,0)
MESSAGE^1^250^^4
"KRN",8994,123480,2,5,1,0)
^8994.021^1^1^3120203^^^
"KRN",8994,123480,2,5,1,1,0)
This is the message associated with the audit event.
"KRN",8994,123480,2,6,0)
DATA^2^129^^5
"KRN",8994,123480,2,6,1,0)
^8994.021^2^2^3120203^^^^
"KRN",8994,123480,2,6,1,1,0)
This is a list of data attribute names and associated values to be included
"KRN",8994,123480,2,6,1,2,0)
in the audit event log.
"KRN",8994,123480,2,"B","APPNAME",4)

"KRN",8994,123480,2,"B","DATA",6)

"KRN",8994,123480,2,"B","EVENT",1)

"KRN",8994,123480,2,"B","HOSTNAME",3)

"KRN",8994,123480,2,"B","MESSAGE",5)

"KRN",8994,123480,2,"PARAMSEQ",1,1)

"KRN",8994,123480,2,"PARAMSEQ",2,3)

"KRN",8994,123480,2,"PARAMSEQ",3,4)

"KRN",8994,123480,2,"PARAMSEQ",4,5)

"KRN",8994,123480,2,"PARAMSEQ",5,6)

"KRN",8994,123480,3,0)
^8994.03^3^3^3120203^^^^
"KRN",8994,123480,3,1,0)
This RPC returns an array.  If processing is successful, the array's 
"KRN",8994,123480,3,2,0)
single entry is 0 (false).  Otherwise, an exception has occurred and the 
"KRN",8994,123480,3,3,0)
array will contain an error code and description of the exception.
"KRN",8994,123481,-1)
0^6
"KRN",8994,123481,0)
MAG FILEMAN FIELD ATTS^FIELDATT^MAGUFFLA^2^P^0
"KRN",8994,123481,1,0)
^^2^2^3110924^
"KRN",8994,123481,1,1,0)
This remote procedure returns a list of attributes and attribute values 
"KRN",8994,123481,1,2,0)
for a field in a FileMan file.
"KRN",8994,123481,2,0)
^8994.02A^2^2
"KRN",8994,123481,2,1,0)
FILENO^1^20^1^1
"KRN",8994,123481,2,1,1,0)
^^1^1^3110924^
"KRN",8994,123481,2,1,1,1,0)
This is the number of a FileMan file or subfile.
"KRN",8994,123481,2,2,0)
FIELDNO^1^20^1^2
"KRN",8994,123481,2,2,1,0)
^^2^2^3110924^
"KRN",8994,123481,2,2,1,1,0)
This is the field within the specified FileMan file or subfile for which 
"KRN",8994,123481,2,2,1,2,0)
attributes are being requested.
"KRN",8994,123481,2,"B","FIELDNO",2)

"KRN",8994,123481,2,"B","FILENO",1)

"KRN",8994,123481,2,"PARAMSEQ",1,1)

"KRN",8994,123481,2,"PARAMSEQ",2,2)

"KRN",8994,123481,3,0)
^^8^8^3110924^
"KRN",8994,123481,3,1,0)
This RPC returns an array of values formatted as follows:
"KRN",8994,123481,3,2,0)
 
"KRN",8994,123481,3,3,0)
   If no input or processing error:
"KRN",8994,123481,3,4,0)
          OUT(1) = 0``n where n = number of entries on the OUT() array
"KRN",8994,123481,3,5,0)
          OUT(m) where 1 < m <= n
"KRN",8994,123481,3,6,0)
                 = attribute`value
"KRN",8994,123481,3,7,0)
   If an input or processing error:
"KRN",8994,123481,3,8,0)
          OUT(1) = n`error_message
"KRN",8994,123482,-1)
0^7
"KRN",8994,123482,0)
MAG FILEMAN FIELD LIST^FIELDLST^MAGUFFLL^2^P^0
"KRN",8994,123482,1,0)
^8994.01^2^2^3110924^^
"KRN",8994,123482,1,1,0)
This remote procedure returns a list of fields from a FileMan file or 
"KRN",8994,123482,1,2,0)
subfile in either alpha or numeric order.
"KRN",8994,123482,2,0)
^8994.02A^2^2
"KRN",8994,123482,2,1,0)
FILENO^1^20^1^1
"KRN",8994,123482,2,1,1,0)
^^1^1^3110924^
"KRN",8994,123482,2,1,1,1,0)
This is the number of a FileMan file or subfile.
"KRN",8994,123482,2,2,0)
ORDER^1^1^0^2
"KRN",8994,123482,2,2,1,0)
^8994.021^2^2^3110924^^^
"KRN",8994,123482,2,2,1,1,0)
This is the desired return order for the field list:  either A for alpha 
"KRN",8994,123482,2,2,1,2,0)
or N for numeric.
"KRN",8994,123482,2,"B","FILENO",1)

"KRN",8994,123482,2,"B","ORDER",2)

"KRN",8994,123482,2,"PARAMSEQ",1,1)

"KRN",8994,123482,2,"PARAMSEQ",2,2)

"KRN",8994,123482,3,0)
^8994.03^7^7^3110924^^
"KRN",8994,123482,3,1,0)
This RPC returns an array of values formatted as follows:
"KRN",8994,123482,3,2,0)
   If no input or processing error:
"KRN",8994,123482,3,3,0)
          OUT(1) = 0``n where n = number of entries on the OUT() array
"KRN",8994,123482,3,4,0)
          OUT(m) where 1 < m <= n
"KRN",8994,123482,3,5,0)
                 = field_number`field_name
"KRN",8994,123482,3,6,0)
   If an input or processing error:
"KRN",8994,123482,3,7,0)
          OUT(1) = n`error_message
"KRN",8994,123483,-1)
0^8
"KRN",8994,123483,0)
MAG STUDY UID QUERY^STUDY^MAGDQR04^2^R^0^^0^3
"KRN",8994,123483,1,0)
^8994.01^17^17^3121009^^^^
"KRN",8994,123483,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123483,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123483,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123483,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123483,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123483,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123483,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123483,1,8,0)
 |                                                               |
"KRN",8994,123483,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123483,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123483,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123483,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123483,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123483,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123483,1,15,0)
 
"KRN",8994,123483,1,16,0)
This RPC returns information about the images that were
"KRN",8994,123483,1,17,0)
acquired for a specific study.
"KRN",8994,123483,2,0)
^8994.02A^2^2
"KRN",8994,123483,2,1,0)
UID^1^64^1^1
"KRN",8994,123483,2,1,1,0)
^^6^6^3041202^
"KRN",8994,123483,2,1,1,1,0)
The value of this parameter is a string.
"KRN",8994,123483,2,1,1,2,0)
This string is a DICOM UID (unique identifier) that specifies
"KRN",8994,123483,2,1,1,3,0)
the study for which the image information is to be retrieved.
"KRN",8994,123483,2,1,1,4,0)
 
"KRN",8994,123483,2,1,1,5,0)
A DICOM UID is a string consisting of only digits and periods,
"KRN",8994,123483,2,1,1,6,0)
and may be up to 64 characters long.
"KRN",8994,123483,2,2,0)
PRMUID^1^1^0^2
"KRN",8994,123483,2,2,1,0)
^8994.021^23^23^3130321^^^^
"KRN",8994,123483,2,2,1,1,0)
The primary UID flag determines what type of error checks will be
"KRN",8994,123483,2,2,1,2,0)
performed on the UID provided.
"KRN",8994,123483,2,2,1,3,0)
 
"KRN",8994,123483,2,2,1,4,0)
There are two UID checks that may be performed depending on the value
"KRN",8994,123483,2,2,1,5,0)
of the primary UID flag.
"KRN",8994,123483,2,2,1,6,0)
 
"KRN",8994,123483,2,2,1,7,0)
A duplicate UID check can be performed which will check to see if 
"KRN",8994,123483,2,2,1,8,0)
the PACS UID is associated with multiple patients. If duplicate
"KRN",8994,123483,2,2,1,9,0)
UIDs are found a "-13" error message will be returned.
"KRN",8994,123483,2,2,1,10,0)
 
"KRN",8994,123483,2,2,1,11,0)
A multiple UID check can be performed which will check to see if
"KRN",8994,123483,2,2,1,12,0)
the PACS UID is associated with multiple entries in the IMAGE
"KRN",8994,123483,2,2,1,13,0)
(#2005) file. If multiple UIDs are found a "-14" error will
"KRN",8994,123483,2,2,1,14,0)
be returned.
"KRN",8994,123483,2,2,1,15,0)
 
"KRN",8994,123483,2,2,1,16,0)
A PRMUID value of 0 will perform a duplicate and multiple
"KRN",8994,123483,2,2,1,17,0)
UID check.
"KRN",8994,123483,2,2,1,18,0)
 
"KRN",8994,123483,2,2,1,19,0)
A PRMUID value of 1 will perform neither a duplicate nor multiple
"KRN",8994,123483,2,2,1,20,0)
UID check.
"KRN",8994,123483,2,2,1,21,0)
 
"KRN",8994,123483,2,2,1,22,0)
A PRMUID value of 2 will perform a duplicate UID check, but
"KRN",8994,123483,2,2,1,23,0)
will not perform a multiple UID check.
"KRN",8994,123483,2,"B","PRMUID",2)

"KRN",8994,123483,2,"B","UID",1)

"KRN",8994,123483,2,"PARAMSEQ",1,1)

"KRN",8994,123483,2,"PARAMSEQ",2,2)

"KRN",8994,123483,3,0)
^8994.03^9^9^3121009^^^
"KRN",8994,123483,3,1,0)
The return parameter of this RPC is an array.
"KRN",8994,123483,3,2,0)
The first element indicates success or failure:
"KRN",8994,123483,3,3,0)
a negative value indicates an error status,
"KRN",8994,123483,3,4,0)
a non-negative value indicates the number of images
"KRN",8994,123483,3,5,0)
found for the specified Study UID.
"KRN",8994,123483,3,6,0)
 
"KRN",8994,123483,3,7,0)
The other elements of the output array all have the
"KRN",8994,123483,3,8,0)
following format:
"KRN",8994,123483,3,9,0)
  image# ^ filename ^ username ^ password (encrypted)
"KRN",8994,123484,-1)
0^9
"KRN",8994,123484,0)
MAGV ADD WORK ITEM TAGS^ADDTAG^MAGVIM01^1^R
"KRN",8994,123484,1,0)
^8994.01^3^3^3120120^^^^
"KRN",8994,123484,1,1,0)
This RPC allows tags to be added to work items in the MAG WORK ITEM file (#2006.941).
"KRN",8994,123484,1,2,0)
 Tags consist of a tag name and a tag value.  Tags and values
"KRN",8994,123484,1,3,0)
may be used to look up entries in the MAG WORK ITEM file (#2006.941).
"KRN",8994,123484,2,0)
^8994.02A^7^5
"KRN",8994,123484,2,3,0)
TAG^2^^^5
"KRN",8994,123484,2,3,1,0)
^8994.021^2^2^3120120^^^^
"KRN",8994,123484,2,3,1,1,0)
This is the parameter containing the tag name and the tag value for the
"KRN",8994,123484,2,3,1,2,0)
work item.
"KRN",8994,123484,2,4,0)
ITEM ID^1^^^1
"KRN",8994,123484,2,4,1,0)
^8994.021^2^2^3111103^^^^
"KRN",8994,123484,2,4,1,1,0)
This is the item ID of the entry in the MAG WORK ITEM file (#2006.941) that
"KRN",8994,123484,2,4,1,2,0)
tags will be added to.
"KRN",8994,123484,2,5,0)
STATUS^1^^^2
"KRN",8994,123484,2,5,1,0)
^8994.021^3^3^3110524^^^
"KRN",8994,123484,2,5,1,1,0)
This is a list of expected statuses that the work item may have.  If
"KRN",8994,123484,2,5,1,2,0)
the work item does not have a status that matches one of the statuses
"KRN",8994,123484,2,5,1,3,0)
supplied the tag will not be added.
"KRN",8994,123484,2,6,0)
UPDUSR^1^^^3
"KRN",8994,123484,2,6,1,0)
^^1^1^3120120^
"KRN",8994,123484,2,6,1,1,0)
This is the user that updated the work item.
"KRN",8994,123484,2,7,0)
UPDAPP^1^^^4
"KRN",8994,123484,2,7,1,0)
^^1^1^3120120^
"KRN",8994,123484,2,7,1,1,0)
This is the application that updated the work item.
"KRN",8994,123484,2,"B","ITEM ID",4)

"KRN",8994,123484,2,"B","STATUS",5)

"KRN",8994,123484,2,"B","TAG",3)

"KRN",8994,123484,2,"B","UPDAPP",7)

"KRN",8994,123484,2,"B","UPDUSR",6)

"KRN",8994,123484,2,"PARAMSEQ",1,4)

"KRN",8994,123484,2,"PARAMSEQ",2,5)

"KRN",8994,123484,2,"PARAMSEQ",3,6)

"KRN",8994,123484,2,"PARAMSEQ",4,7)

"KRN",8994,123484,2,"PARAMSEQ",5,3)

"KRN",8994,123484,3,0)
^8994.03^1^1^3120120^^^^
"KRN",8994,123484,3,1,0)
The return parameter returns a "0" for success. n < 0 followed by an error message is returned if an error has occurred.
"KRN",8994,123485,-1)
0^10
"KRN",8994,123485,0)
MAGV ATTACH IMAGE INSTANCE^ATFILE^MAGVRS21^2^R
"KRN",8994,123485,1,0)
^8994.01^1^1^3100826^^^^
"KRN",8994,123485,1,1,0)
This RPC allows an image instance file to be attached to a SOP.
"KRN",8994,123485,2,0)
^8994.02A^1^1
"KRN",8994,123485,2,1,0)
FILEATTS^2
"KRN",8994,123485,2,1,1,0)
^8994.021^9^9^3100826^^^^
"KRN",8994,123485,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123485,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123485,2,1,1,3,0)
argument to entry point ATFILE^MAGVRS21.  The first argument will
"KRN",8994,123485,2,1,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123485,2,1,1,5,0)
reference.
"KRN",8994,123485,2,1,1,6,0)
 
"KRN",8994,123485,2,1,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123485,2,1,1,8,0)
<fname> is a field name in the IMAGE INSTANCE FILE (#2005.65) and <value>
"KRN",8994,123485,2,1,1,9,0)
is the value to which that field should be set.
"KRN",8994,123485,2,"B","FILEATTS",1)

"KRN",8994,123485,3,0)
^8994.03^4^4^3100826^^^^
"KRN",8994,123485,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123485,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123485,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN
"KRN",8994,123485,3,4,0)
will be assigned.
"KRN",8994,123486,-1)
0^11
"KRN",8994,123486,0)
MAGV ATTACH PAT PROC REF^ATPROC^MAGVRS06^2^R
"KRN",8994,123486,1,0)
^8994.01^1^1^3100805^^^^
"KRN",8994,123486,1,1,0)
This RPC allows a procedure to be created and attached to a patient.
"KRN",8994,123486,2,0)
^8994.02A^1^1
"KRN",8994,123486,2,1,0)
PROCATTS^2^32000^1^1
"KRN",8994,123486,2,1,1,0)
^^8^8^3100805^
"KRN",8994,123486,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer 
"KRN",8994,123486,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123486,2,1,1,3,0)
argument to entry point ATPROC^MAGVRS06.  The first argument contains the
"KRN",8994,123486,2,1,1,4,0)
returned value in an array that should also be passed by reference.
"KRN",8994,123486,2,1,1,5,0)
 
"KRN",8994,123486,2,1,1,6,0)
The values passed in should be in the format <fname>`<value>, where 
"KRN",8994,123486,2,1,1,7,0)
<fname> is a field name in the IMAGING PROCEDURE REFERENCE File 
"KRN",8994,123486,2,1,1,8,0)
(#2005.61) and <value> is the value to which that field should be set.
"KRN",8994,123486,2,"B","PROCATTS",1)

"KRN",8994,123486,2,"PARAMSEQ",1,1)

"KRN",8994,123486,3,0)
^8994.03^4^4^3100805^^^^
"KRN",8994,123486,3,1,0)
The first and only element of the return array will be formatted as 
"KRN",8994,123486,3,2,0)
[ERRORCODE]~[TEXT]~[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123486,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN
"KRN",8994,123486,3,4,0)
will be assigned.
"KRN",8994,123487,-1)
0^12
"KRN",8994,123487,0)
MAGV ATTACH SERIES^ATSERIES^MAGVRS01^2^R
"KRN",8994,123487,1,0)
^8994.01^1^1^3100429^^^^
"KRN",8994,123487,1,1,0)
This RPC allows a series to be attached to a study.
"KRN",8994,123487,2,0)
^8994.02A^1^1
"KRN",8994,123487,2,1,0)
SERIESATT^2
"KRN",8994,123487,2,1,1,0)
^8994.021^9^9^3100421^^
"KRN",8994,123487,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123487,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123487,2,1,1,3,0)
argument to entry point ATSERIES^MAGVRS01.  The first argument will
"KRN",8994,123487,2,1,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123487,2,1,1,5,0)
reference.
"KRN",8994,123487,2,1,1,6,0)
  
"KRN",8994,123487,2,1,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123487,2,1,1,8,0)
<fname> is a field name in the IMAGE SERIES File (#2005.63) and <value>
"KRN",8994,123487,2,1,1,9,0)
is the value to which that field should be set.
"KRN",8994,123487,2,"B","SERIESATT",1)

"KRN",8994,123487,3,0)
^8994.03^4^4^3100421^^
"KRN",8994,123487,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123487,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123487,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN
"KRN",8994,123487,3,4,0)
will be assigned.
"KRN",8994,123488,-1)
0^13
"KRN",8994,123488,0)
MAGV ATTACH SOP^ATSOP^MAGVRS11^2^R
"KRN",8994,123488,1,0)
^8994.01^1^1^3100826^^^^
"KRN",8994,123488,1,1,0)
This RPC allows a SOP to be attached to a series.
"KRN",8994,123488,2,0)
^8994.02A^2^2
"KRN",8994,123488,2,1,0)
SOPATT^2
"KRN",8994,123488,2,2,0)
MAGV ATT
"KRN",8994,123488,2,2,1,0)
^8994.021^9^9^3100826^^^^
"KRN",8994,123488,2,2,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123488,2,2,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123488,2,2,1,3,0)
argument to entry point ATSOP^MAGVRS11.  The first argument will
"KRN",8994,123488,2,2,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123488,2,2,1,5,0)
reference.
"KRN",8994,123488,2,2,1,6,0)
  
"KRN",8994,123488,2,2,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123488,2,2,1,8,0)
<fname> is a field name in the IMAGE SOP INSTANCE File (#2005.64) and <value>
"KRN",8994,123488,2,2,1,9,0)
is the value to which that field should be set.
"KRN",8994,123488,2,"B","MAGV ATT",2)

"KRN",8994,123488,2,"B","SOPATT",1)

"KRN",8994,123488,3,0)
^8994.03^4^4^3100826^^^^
"KRN",8994,123488,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123488,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123488,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN
"KRN",8994,123488,3,4,0)
will be assigned.
"KRN",8994,123489,-1)
0^14
"KRN",8994,123489,0)
MAGV ATTACH STUDY^ATSTUDY^MAGVRS05^2^R
"KRN",8994,123489,1,0)
^8994.01^2^2^3100421^^^^
"KRN",8994,123489,1,1,0)
This RPC allows a study to be attached to a patient and, optionally, a 
"KRN",8994,123489,1,2,0)
procedure.
"KRN",8994,123489,2,0)
^8994.02A^1^1
"KRN",8994,123489,2,1,0)
STUATTS^2^32000^1^1
"KRN",8994,123489,2,1,1,0)
^^8^8^3100805^
"KRN",8994,123489,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123489,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123489,2,1,1,3,0)
argument to entry point ATSTUDY^MAGVRS05.  The first argument will contain
"KRN",8994,123489,2,1,1,4,0)
the returned value in an array that should also be passed by reference.
"KRN",8994,123489,2,1,1,5,0)
 
"KRN",8994,123489,2,1,1,6,0)
The values passed in should be in the format <fname>`<value>, where 
"KRN",8994,123489,2,1,1,7,0)
<fname> is a field name in the IMAGE STUDY File (#2005.62) and <value> 
"KRN",8994,123489,2,1,1,8,0)
is the value to which that field should be set.
"KRN",8994,123489,2,"B","STUATTS",1)

"KRN",8994,123489,2,"PARAMSEQ",1,1)

"KRN",8994,123489,3,0)
^8994.03^4^4^3100421^^^^
"KRN",8994,123489,3,1,0)
The first and only element of the return array will be formatted as 
"KRN",8994,123489,3,2,0)
[ERRORCODE]~[TEXT]~[ASSIGNED IEN].  An ERRORCODE value of 0 indicates 
"KRN",8994,123489,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN 
"KRN",8994,123489,3,4,0)
will be assigned.
"KRN",8994,123490,-1)
0^15
"KRN",8994,123490,0)
MAGV CONFIRM RAD ORDER^CONFIRM^MAGVIM06^2^R
"KRN",8994,123490,1,0)
^8994.01^1^1^3110907^^
"KRN",8994,123490,1,1,0)
Returns a RAD/NUC MED ORDERS file (#75.1) IEN for a set of DICOM Unique Identifiers.
"KRN",8994,123490,2,0)
^8994.02A^1^1
"KRN",8994,123490,2,1,0)
UIDS^1^200^1^1
"KRN",8994,123490,2,1,1,0)
^8994.021^3^3^3110907^^
"KRN",8994,123490,2,1,1,1,0)
Study, Series, and SOP Instance UID, "`"-delimited. Used by the Importer II application
"KRN",8994,123490,2,1,1,2,0)
to verify the RAD/NUC MED ORDERS file (#75.1) IEN for an object which is determined to
"KRN",8994,123490,2,1,1,3,0)
be on file via a prior call to RPC: MAGV IMPORT STATUS.
"KRN",8994,123490,2,"B","UIDS",1)

"KRN",8994,123490,2,"PARAMSEQ",1,1)

"KRN",8994,123490,3,0)
^8994.03^2^2^3110907^^
"KRN",8994,123490,3,1,0)
"0`"_IEN of a RAD/NUC MED ORDERS file (#75.1) entry matching the provided UIDs, or 
"KRN",8994,123490,3,2,0)
"-1" followed by an error message.
"KRN",8994,123491,-1)
0^16
"KRN",8994,123491,0)
MAGV CREATE DICOM FAILED IMAGE^DCRCTSET^MAGVRS51^1^R
"KRN",8994,123491,1,0)
^8994.01^1^1^3100826^^^^
"KRN",8994,123491,1,1,0)
This RPC creates an entry in the DICOM FAILED IMAGES File (#2006.575).
"KRN",8994,123491,2,0)
^8994.02A^1^1
"KRN",8994,123491,2,1,0)
ATTS^2
"KRN",8994,123491,2,1,1,0)
^8994.021^9^9^3100826^^
"KRN",8994,123491,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123491,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123491,2,1,1,3,0)
argument to entry point DCRCTSET^MAGVRS51.  The first argument will
"KRN",8994,123491,2,1,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123491,2,1,1,5,0)
reference.
"KRN",8994,123491,2,1,1,6,0)
 
"KRN",8994,123491,2,1,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123491,2,1,1,8,0)
<fname> is a field name in the DICOM FAILED IMAGES File (#2006.575) 
"KRN",8994,123491,2,1,1,9,0)
and <value> is the value to which that field should be set.
"KRN",8994,123491,2,"B","ATTS",1)

"KRN",8994,123491,3,0)
^8994.03^4^4^3100826^^^
"KRN",8994,123491,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123491,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123491,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN
"KRN",8994,123491,3,4,0)
will be assigned.
"KRN",8994,123492,-1)
0^17
"KRN",8994,123492,0)
MAGV CREATE PAT REF^CREPAT^MAGVRS06^2^R
"KRN",8994,123492,1,0)
^8994.01^3^3^3100311^^^
"KRN",8994,123492,1,1,0)
This RPC allows for creation of an Imaging
"KRN",8994,123492,1,2,0)
patient reference to which procedures
"KRN",8994,123492,1,3,0)
and studies may be attached.
"KRN",8994,123492,2,0)
^8994.02A^1^1
"KRN",8994,123492,2,1,0)
PATIDATTS^2^32000^1^1
"KRN",8994,123492,2,1,1,0)
^^8^8^3100805^
"KRN",8994,123492,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer 
"KRN",8994,123492,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123492,2,1,1,3,0)
argument to entry point CREPAT^MAGVRS06.  The first argument contains the
"KRN",8994,123492,2,1,1,4,0)
returned value in an array that should also be passed by reference.
"KRN",8994,123492,2,1,1,5,0)
 
"KRN",8994,123492,2,1,1,6,0)
The values passed in should be in the format <fname>`<value>, where 
"KRN",8994,123492,2,1,1,7,0)
<fname> is a field name in the IMAGING PATIENT REFERENCE File (#2005.6) 
"KRN",8994,123492,2,1,1,8,0)
and <value> is the value to which that field should be set.
"KRN",8994,123492,2,"B","PATIDATTS",1)

"KRN",8994,123492,2,"PARAMSEQ",1,1)

"KRN",8994,123492,3,0)
^8994.03^3^3^3100311^^^
"KRN",8994,123492,3,1,0)
The first and only element of the return array will be formatted as 
"KRN",8994,123492,3,2,0)
[ERRORCODE]~[TEXT].  An ERRORCODE value of 0 indicates success; all 
"KRN",8994,123492,3,3,0)
others indicate failure, as described in TEXT.
"KRN",8994,123493,-1)
0^18
"KRN",8994,123493,0)
MAGV CREATE WORK ITEM^CRTITEM^MAGVIM01^1^R
"KRN",8994,123493,1,0)
^8994.01^1^1^3130228^^^^
"KRN",8994,123493,1,1,0)
This RPC creates work item entries in the MAG WORK ITEM file (#2006.941).
"KRN",8994,123493,2,0)
^8994.02A^10^8
"KRN",8994,123493,2,1,0)
TYPE^1^^^1
"KRN",8994,123493,2,1,1,0)
^8994.021^1^1^3110407^^
"KRN",8994,123493,2,1,1,1,0)
This is the type of WORK ITEM created (i.e. DICOM Correct).
"KRN",8994,123493,2,2,0)
SUBTYPE^1^^^2
"KRN",8994,123493,2,2,1,0)
^^1^1^3110407^
"KRN",8994,123493,2,2,1,1,0)
This is the subtype of a work item.
"KRN",8994,123493,2,3,0)
STATUS^1^^^3
"KRN",8994,123493,2,3,1,0)
^^1^1^3110407^
"KRN",8994,123493,2,3,1,1,0)
This is the initial status given to a work item.
"KRN",8994,123493,2,4,0)
PLACEID^1^^^4
"KRN",8994,123493,2,4,1,0)
^^1^1^3110407^
"KRN",8994,123493,2,4,1,1,0)
This is the place ID number of a work item.
"KRN",8994,123493,2,5,0)
PRIORITY^1^^^5
"KRN",8994,123493,2,5,1,0)
^^1^1^3110407^
"KRN",8994,123493,2,5,1,1,0)
This is the numeric priority given to a work item.
"KRN",8994,123493,2,7,0)
MSGTAGS^2^^^6
"KRN",8994,123493,2,7,1,0)
^8994.021^2^2^3110425^^^^
"KRN",8994,123493,2,7,1,1,0)
This is an array of tag names and values assigned to a work item. Tag
"KRN",8994,123493,2,7,1,2,0)
names and values may be used to look up a work item.
"KRN",8994,123493,2,9,0)
CRTUSER^1^^^7
"KRN",8994,123493,2,9,1,0)
^8994.021^1^1^3120117^^^
"KRN",8994,123493,2,9,1,1,0)
This is the user that created the work item.
"KRN",8994,123493,2,10,0)
CRTAPP^1^^^8
"KRN",8994,123493,2,10,1,0)
^8994.021^1^1^3120117^^^
"KRN",8994,123493,2,10,1,1,0)
This is the application that created the work item.
"KRN",8994,123493,2,"B","CRTAPP",10)

"KRN",8994,123493,2,"B","CRTUSER",9)

"KRN",8994,123493,2,"B","MSGTAGS",7)

"KRN",8994,123493,2,"B","PLACEID",4)

"KRN",8994,123493,2,"B","PRIORITY",5)

"KRN",8994,123493,2,"B","STATUS",3)

"KRN",8994,123493,2,"B","SUBTYPE",2)

"KRN",8994,123493,2,"B","TYPE",1)

"KRN",8994,123493,2,"PARAMSEQ",1,1)

"KRN",8994,123493,2,"PARAMSEQ",2,2)

"KRN",8994,123493,2,"PARAMSEQ",3,3)

"KRN",8994,123493,2,"PARAMSEQ",4,4)

"KRN",8994,123493,2,"PARAMSEQ",5,5)

"KRN",8994,123493,2,"PARAMSEQ",6,7)

"KRN",8994,123493,2,"PARAMSEQ",7,9)

"KRN",8994,123493,2,"PARAMSEQ",8,10)

"KRN",8994,123493,3,0)
^8994.03^1^1^3120117^^^^
"KRN",8994,123493,3,1,0)
The return parameter returns a "0" for success. n < 0 followed by an error message is returned if an error has occurred.
"KRN",8994,123494,-1)
0^19
"KRN",8994,123494,0)
MAGV DELETE DICOM FAILED IMAGE^DCRCTDEL^MAGVRS51^1^R
"KRN",8994,123494,1,0)
^8994.01^2^2^3100826^^
"KRN",8994,123494,1,1,0)
This routine will delete a single entry in the DICOM FAILED IMAGES File
"KRN",8994,123494,1,2,0)
(#2006.575).
"KRN",8994,123494,2,0)
^8994.02A^1^1
"KRN",8994,123494,2,1,0)
PATH^1
"KRN",8994,123494,2,1,1,0)
^8994.021^1^1^3100826^^
"KRN",8994,123494,2,1,1,1,0)
This parameter is the Filepath of the entry to be deleted.
"KRN",8994,123494,2,"B","PATH",1)

"KRN",8994,123494,3,0)
^8994.03^4^4^3100826^^
"KRN",8994,123494,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123494,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123494,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN
"KRN",8994,123494,3,4,0)
will be assigned.
"KRN",8994,123495,-1)
0^20
"KRN",8994,123495,0)
MAGV DELETE WORK ITEM^DELWITEM^MAGVIM01^1^R
"KRN",8994,123495,1,0)
^8994.01^1^1^3111103^^^^
"KRN",8994,123495,1,1,0)
This RPC deletes a single entry in the MAG WORK ITEM file (#2006.941).
"KRN",8994,123495,2,0)
^8994.02A^1^1
"KRN",8994,123495,2,1,0)
ITEMID^1^^^1
"KRN",8994,123495,2,1,1,0)
^8994.021^1^1^3110420^^^
"KRN",8994,123495,2,1,1,1,0)
This is the item ID that uniquely identifies the work item to be deleted.
"KRN",8994,123495,2,"B","ITEMID",1)

"KRN",8994,123495,2,"PARAMSEQ",1,1)

"KRN",8994,123495,3,0)
^8994.03^1^1^3110420^^^
"KRN",8994,123495,3,1,0)
The return parameter returns a "0" for success. "-1" followed by an error message is returned if an error has occurred.
"KRN",8994,123496,-1)
0^21
"KRN",8994,123496,0)
MAGV DGW ACTION UID LIST^ACTUIDS^MAGVDGWP^2^R
"KRN",8994,123496,1,0)
^8994.01^2^2^3091013^^^
"KRN",8994,123496,1,1,0)
Return list of UID
"KRN",8994,123496,1,2,0)
from DICOM UID SPECIFIC ACTION file (#2006.539)
"KRN",8994,123496,2,0)
^8994.02A^3^3
"KRN",8994,123496,2,1,0)
MAGTYPE^1^^1^1
"KRN",8994,123496,2,1,1,0)
^^1^1^3090914^
"KRN",8994,123496,2,1,1,1,0)
Type (e.g. "SOP Class")
"KRN",8994,123496,2,2,0)
MAGSUBT^1^^1^2
"KRN",8994,123496,2,2,1,0)
1
"KRN",8994,123496,2,2,1,1,0)
Subtype (e.g. "Storage")
"KRN",8994,123496,2,3,0)
MAGACT^1^^1^3
"KRN",8994,123496,2,3,1,0)
^8994.021^1^1^3091013^^
"KRN",8994,123496,2,3,1,1,0)
Action Type (e.g. "Storage SCP")
"KRN",8994,123496,2,"B","MAGACT",3)

"KRN",8994,123496,2,"B","MAGSUBT",2)

"KRN",8994,123496,2,"B","MAGTYPE",1)

"KRN",8994,123496,2,"PARAMSEQ",1,1)

"KRN",8994,123496,2,"PARAMSEQ",2,2)

"KRN",8994,123496,2,"PARAMSEQ",3,3)

"KRN",8994,123496,3,0)
^8994.03^1^1^3091013^^
"KRN",8994,123496,3,1,0)
UID^DESCRIPTION^ACTION CODE^ACTION COMMENT
"KRN",8994,123497,-1)
0^22
"KRN",8994,123497,0)
MAGV DGW INSTRUMENT LIST^INSTRMNT^MAGVDGWP^2^R
"KRN",8994,123497,1,0)
^8994.01^17^17^3120510^^^
"KRN",8994,123497,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123497,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123497,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123497,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123497,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123497,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123497,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123497,1,8,0)
 |                                                               |
"KRN",8994,123497,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123497,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123497,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123497,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123497,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123497,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123497,1,15,0)
 
"KRN",8994,123497,1,16,0)
Return list of Instruments in DGW
"KRN",8994,123497,1,17,0)
from DICOM GATEWAY INSTRUMENT DICTIONARY file (#2006.911)
"KRN",8994,123497,2,0)
^8994.02A^1^1
"KRN",8994,123497,2,1,0)
HOSTNAME^1^^^1
"KRN",8994,123497,2,1,1,0)
^8994.021^1^1^3120510^^^^
"KRN",8994,123497,2,1,1,1,0)
The HOSTNAME is the corresponding DICOM Gateway.  If HOSTNAME is blank all settings will be returned
"KRN",8994,123497,2,"B","HOSTNAME",1)

"KRN",8994,123497,2,"PARAMSEQ",1,1)

"KRN",8994,123497,3,0)
^8994.03^1^1^3120510^^^^
"KRN",8994,123497,3,1,0)
HOSTNAME^DATETIME^NICKNAME^DESCRIPTION^SERVICE^PORT^STATION NUMBER^SITE^MACHINE ID
"KRN",8994,123498,-1)
0^23
"KRN",8994,123498,0)
MAGV DGW MODALITY LIST^MODALITY^MAGVDGWP^2^R
"KRN",8994,123498,1,0)
^8994.01^2^2^3090915^^
"KRN",8994,123498,1,1,0)
Return list of Modalities in DGW
"KRN",8994,123498,1,2,0)
from MODALITY TYPE DICTIONARY file (#2006.582)
"KRN",8994,123498,2,0)
^8994.02A^1^1
"KRN",8994,123498,2,1,0)
HOSTNAME^1^^^1
"KRN",8994,123498,2,1,1,0)
^^1^1^3090915^
"KRN",8994,123498,2,1,1,1,0)
If HOSTNAME is blank all setting will be returned
"KRN",8994,123498,2,"B","HOSTNAME",1)

"KRN",8994,123498,2,"PARAMSEQ",1,1)

"KRN",8994,123498,3,0)
1
"KRN",8994,123498,3,1,0)
HOSTNAME^DATATIME^MANUFACTURER^MODEL^MODALITY^IMAGING SERVICE^ACTIVE
"KRN",8994,123499,-1)
0^24
"KRN",8994,123499,0)
MAGV DICOM GET COUNT^DCRCTCNT^MAGVRS51^1^R
"KRN",8994,123499,1,0)
^8994.01^3^3^3100826^^^^
"KRN",8994,123499,1,1,0)
This RPC returns the count of entries in the DICOM FAILED IMAGES
"KRN",8994,123499,1,2,0)
(#2006.575) file with machine IDs and service types provided to the
"KRN",8994,123499,1,3,0)
RPC.
"KRN",8994,123499,2,0)
^8994.02A^2^2
"KRN",8994,123499,2,1,0)
MACHID^1^24^^1
"KRN",8994,123499,2,1,1,0)
^^2^2^3100526^
"KRN",8994,123499,2,1,1,1,0)
The machine ID to be matched to the machine ID in the DICOM FAILED
"KRN",8994,123499,2,1,1,2,0)
IMAGES (#2006.575) file.
"KRN",8994,123499,2,2,0)
SERVTYPE^1^20^^2
"KRN",8994,123499,2,2,1,0)
^8994.021^2^2^3100826^^^^
"KRN",8994,123499,2,2,1,1,0)
The service type to be matched to the service type in the DICOM
"KRN",8994,123499,2,2,1,2,0)
FAILED IMAGES (#2006.575) file.
"KRN",8994,123499,2,"B","MACHID",1)

"KRN",8994,123499,2,"B","SERVTYPE",2)

"KRN",8994,123499,2,"PARAMSEQ",1,1)

"KRN",8994,123499,2,"PARAMSEQ",2,2)

"KRN",8994,123499,3,0)
^8994.03^3^3^3100826^^^^
"KRN",8994,123499,3,1,0)
Returns the integer count of entries in the DICOM FAILED IMAGES
"KRN",8994,123499,3,2,0)
(#2006.575) file with the machine IDs and service types provided to the
"KRN",8994,123499,3,3,0)
RPC.
"KRN",8994,123500,-1)
0^25
"KRN",8994,123500,0)
MAGV DICOM SET INSTRUMENT LIST^SETINSTR^MAGVDGWP^1^R
"KRN",8994,123500,1,0)
^8994.01^1^1^3100817^^^^
"KRN",8994,123500,1,1,0)
Update DICOM GATEWAY INSTRUMENT DICTIONARY file (#2006.911)
"KRN",8994,123500,2,0)
^8994.02A^3^3
"KRN",8994,123500,2,1,0)
HOSTNAME^1^^1^1
"KRN",8994,123500,2,1,1,0)
^8994.021^1^1^3100816^^^
"KRN",8994,123500,2,1,1,1,0)
DICOM Gateway host name
"KRN",8994,123500,2,2,0)
LOCATION^1^^1^2
"KRN",8994,123500,2,2,1,0)
^8994.021^1^1^3100816^^^
"KRN",8994,123500,2,2,1,1,0)
Identifies the institution where this DICOM Gateway computer resides
"KRN",8994,123500,2,3,0)
MAGDATA^2^^1^3
"KRN",8994,123500,2,3,1,0)
^8994.021^1^1^3100817^^^^
"KRN",8994,123500,2,3,1,1,0)
Data in DICOM GATEWAY INSTRUMENT DICTIONARY file (#2006.911)
"KRN",8994,123500,2,"B","HOSTNAME",1)

"KRN",8994,123500,2,"B","LOCATION",2)

"KRN",8994,123500,2,"B","MAGDATA",3)

"KRN",8994,123500,2,"PARAMSEQ",1,1)

"KRN",8994,123500,2,"PARAMSEQ",2,2)

"KRN",8994,123500,2,"PARAMSEQ",3,3)

"KRN",8994,123500,3,0)
^8994.03^1^1^3100817^^^^
"KRN",8994,123500,3,1,0)
"-1^Error updating list" or 0 = success.
"KRN",8994,123501,-1)
0^26
"KRN",8994,123501,0)
MAGV DICOM SET MODALITY LIST^SETMODAL^MAGVDGWP^1^R
"KRN",8994,123501,1,0)
^8994.01^2^2^3100916^^^^
"KRN",8994,123501,1,1,0)
Update DICOM GATEWAY MODALITY DICTIONARY file (#2006.912)
"KRN",8994,123501,1,2,0)
from MODALITY TYPE DICTIONARY FILE (#2006.582)
"KRN",8994,123501,2,0)
^8994.02A^3^3
"KRN",8994,123501,2,1,0)
HOSTNAME^1^^1^1
"KRN",8994,123501,2,1,1,0)
^^1^1^3090914^
"KRN",8994,123501,2,1,1,1,0)
DICOM Gateway host name
"KRN",8994,123501,2,2,0)
LOCATION^1^^1^2
"KRN",8994,123501,2,2,1,0)
^8994.021^1^1^3090914^^
"KRN",8994,123501,2,2,1,1,0)
Identifies the institution where this DICOM Gateway computer resides
"KRN",8994,123501,2,3,0)
MAGDATA^2^^1^3
"KRN",8994,123501,2,3,1,0)
^8994.021^1^1^3100817^^^^
"KRN",8994,123501,2,3,1,1,0)
Data in DICOM GATEWAY MODALITY DICTIONARY file (#2006.912)
"KRN",8994,123501,2,"B","HOSTNAME",1)

"KRN",8994,123501,2,"B","LOCATION",2)

"KRN",8994,123501,2,"B","MAGDATA",3)

"KRN",8994,123501,2,"PARAMSEQ",1,1)

"KRN",8994,123501,2,"PARAMSEQ",2,2)

"KRN",8994,123501,2,"PARAMSEQ",3,3)

"KRN",8994,123501,3,0)
^8994.03^1^1^3100817^^^^
"KRN",8994,123501,3,1,0)
"-1^Error updating list" or 0 = success.
"KRN",8994,123502,-1)
0^27
"KRN",8994,123502,0)
MAGV FIND PAT REF^FINDPAT^MAGVRS06^2^R
"KRN",8994,123502,1,0)
^8994.01^1^1^3100311^^
"KRN",8994,123502,1,1,0)
Finds a patient.
"KRN",8994,123502,2,0)
^8994.02A^1^1
"KRN",8994,123502,2,1,0)
PATIDATTS^2^32000^1^1
"KRN",8994,123502,2,1,1,0)
^^8^8^3100805^
"KRN",8994,123502,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123502,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123502,2,1,1,3,0)
argument to entry point FINDPAT^MAGVRS06.  The first argument contains the
"KRN",8994,123502,2,1,1,4,0)
returned value in an array that should also be passed by reference.
"KRN",8994,123502,2,1,1,5,0)
 
"KRN",8994,123502,2,1,1,6,0)
The values passed in should be in the format <fname>`<value>, where 
"KRN",8994,123502,2,1,1,7,0)
<fname> is a field name in the IMAGING PATIENT REFERENCE File (#2005.6)
"KRN",8994,123502,2,1,1,8,0)
and <value> is the value to which that field should be set.
"KRN",8994,123502,2,"B","PATIDATTS",1)

"KRN",8994,123502,2,"PARAMSEQ",1,1)

"KRN",8994,123502,3,0)
^8994.03^4^4^3100311^^
"KRN",8994,123502,3,1,0)
The first and only element of the return array will contain either the 
"KRN",8994,123502,3,2,0)
internal entry number of the associated entry on the IMAGING PATIENT 
"KRN",8994,123502,3,3,0)
REFERENCE File (#2005.6), or 0 if no entry matches the input parameters 
"KRN",8994,123502,3,4,0)
that were provided.
"KRN",8994,123503,-1)
0^28
"KRN",8994,123503,0)
MAGV FIND PROC REF^FINDPROC^MAGVRS07^2^R
"KRN",8994,123503,1,0)
^^2^2^3100805^
"KRN",8994,123503,1,1,0)
This remote procedure allows searching for a procedure reference based 
"KRN",8994,123503,1,2,0)
upon a fixed scalar value for one or more of its attributes.
"KRN",8994,123503,2,0)
^8994.02A^1^1
"KRN",8994,123503,2,1,0)
PROCATTS^2^300^1^1
"KRN",8994,123503,2,1,1,0)
^^9^9^3100805^
"KRN",8994,123503,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123503,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123503,2,1,1,3,0)
argument to entry point FINDPROC^MAGVRS07.  The first argument should be
"KRN",8994,123503,2,1,1,4,0)
an array name (passed by reference) that will contain the returned value.
"KRN",8994,123503,2,1,1,5,0)
 
"KRN",8994,123503,2,1,1,6,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123503,2,1,1,7,0)
<fname> is a field name in the IMAGING PROCEDURE REFERENCE File
"KRN",8994,123503,2,1,1,8,0)
(#2005.61) and <value> is the value to which the record's attribute
"KRN",8994,123503,2,1,1,9,0)
should be equal.  If multiple values are passed in, they will be ANDed.
"KRN",8994,123503,2,"B","PROCATTS",1)

"KRN",8994,123503,2,"PARAMSEQ",1,1)

"KRN",8994,123503,3,0)
^8994.03^7^7^3100417^^^
"KRN",8994,123503,3,1,0)
The first and only element of the return array will be structured as 
"KRN",8994,123503,3,2,0)
follows, delimited by ` (backtick):
"KRN",8994,123503,3,3,0)
 
"KRN",8994,123503,3,4,0)
P1  0 if no error, nonzero if error
"KRN",8994,123503,3,5,0)
P2  Empty if no error, text if error
"KRN",8994,123503,3,6,0)
P3  Internal entry number of procedure on the IMAGING PROCEDURE File 
"KRN",8994,123503,3,7,0)
(#2005.61) if no error
"KRN",8994,123504,-1)
0^29
"KRN",8994,123504,0)
MAGV FIND SERIES BY REFERENCE^FINDBYRF^MAGVRS14^2^R
"KRN",8994,123504,1,0)
^8994.01^1^1^3100826^^
"KRN",8994,123504,1,1,0)
This RPC looks up series by Reference UID.
"KRN",8994,123504,2,0)
^8994.02A^1^1
"KRN",8994,123504,2,1,0)
REFUID^1^^^1
"KRN",8994,123504,2,1,1,0)
^8994.021^1^1^3100826^^
"KRN",8994,123504,2,1,1,1,0)
The REFERENCE UID used to look up series.
"KRN",8994,123504,2,"B","REFUID",1)

"KRN",8994,123504,2,"PARAMSEQ",1,1)

"KRN",8994,123504,3,0)
^8994.03^1^1^3100826^^
"KRN",8994,123504,3,1,0)
Returns an array of series IENs or an error message.
"KRN",8994,123505,-1)
0^30
"KRN",8994,123505,0)
MAGV FIND SERIES BY UID^FINDSER^MAGVRS11^1^R
"KRN",8994,123505,1,0)
^8994.01^1^1^3100826^^
"KRN",8994,123505,1,1,0)
This RPC looks up series by series UID.
"KRN",8994,123505,2,0)
^8994.02A^1^1
"KRN",8994,123505,2,1,0)
SERUID^1
"KRN",8994,123505,2,1,1,0)
^8994.021^1^1^3100826^^
"KRN",8994,123505,2,1,1,1,0)
The SERIES UID used to look up the series.
"KRN",8994,123505,2,"B","SERUID",1)

"KRN",8994,123505,3,0)
^8994.03^1^1^3100826^^
"KRN",8994,123505,3,1,0)
Returns a single series IEN or an error message.
"KRN",8994,123506,-1)
0^31
"KRN",8994,123506,0)
MAGV FIND SOP BY UID^FINDSOP^MAGVRS21^1^R
"KRN",8994,123506,1,0)
^^1^1^3100805^
"KRN",8994,123506,1,1,0)
This RPC looks up SOPs by SOP UID.
"KRN",8994,123506,2,0)
^8994.02A^1^1
"KRN",8994,123506,2,1,0)
SOPUID^1^^^1
"KRN",8994,123506,2,1,1,0)
^^1^1^3100805^
"KRN",8994,123506,2,1,1,1,0)
The SOP UID used to look up the series.
"KRN",8994,123506,2,"B","SOPUID",1)

"KRN",8994,123506,2,"PARAMSEQ",1,1)

"KRN",8994,123506,3,0)
^^1^1^3100805^
"KRN",8994,123506,3,1,0)
Returns a single SOP IEN or an error message.
"KRN",8994,123507,-1)
0^32
"KRN",8994,123507,0)
MAGV FIND STUDY BY UID^FINDSTDY^MAGVRS05^1^R
"KRN",8994,123507,1,0)
^8994.01^12^12^3110126^^
"KRN",8994,123507,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123507,1,2,0)
subscripts in an array that should be passed in by reference as the
"KRN",8994,123507,1,3,0)
second argument to entry point FINDSTDY^MAGVRS05.  The first argument
"KRN",8994,123507,1,4,0)
to FINDSTDY^MAGVRS05 should be an array name (passed by reference)
"KRN",8994,123507,1,5,0)
that will contain the returned value.
"KRN",8994,123507,1,6,0)
 
"KRN",8994,123507,1,7,0)
The values that may be passed in are as follows.
"KRN",8994,123507,1,8,0)
PAT_IEN: internal entry number of the patient record on the IMAGING
"KRN",8994,123507,1,9,0)
PATIENT REFERENCE File (#2005.6)
"KRN",8994,123507,1,10,0)
PROC_IEN: internal entry number of the procedure on the IMAGING PROCEDURE 
"KRN",8994,123507,1,11,0)
File (#2005.61)
"KRN",8994,123507,1,12,0)
STUDY_INSTANCE_UID: external identifier of the study
"KRN",8994,123507,2,0)
^8994.02A^1^1
"KRN",8994,123507,2,1,0)
STUDYUID^1^64^1^1
"KRN",8994,123507,2,1,1,0)
^^1^1^3100408^
"KRN",8994,123507,2,1,1,1,0)
This is the ISO object identifier of the study.
"KRN",8994,123507,2,"B","STUDYUID",1)

"KRN",8994,123507,2,"PARAMSEQ",1,1)

"KRN",8994,123507,3,0)
^8994.03^6^6^3100408^^
"KRN",8994,123507,3,1,0)
The first and only element of the return array will be structured as
"KRN",8994,123507,3,2,0)
follows:
"KRN",8994,123507,3,3,0)
 P1  0 if no error, nonzero if error
"KRN",8994,123507,3,4,0)
 P2  Empty if no error, text if error
"KRN",8994,123507,3,5,0)
 P3  Internal entry number of procedure on the IMAGE STUDY File
"KRN",8994,123507,3,6,0)
(#2005.62) if no error
"KRN",8994,123508,-1)
0^33
"KRN",8994,123508,0)
MAGV FIND STUDY TIU^TIUCHK^MAGVRS43^2^R^0
"KRN",8994,123508,1,0)
^^3^3^3110905^
"KRN",8994,123508,1,1,0)
This RPC returns the TIU note with which an image study is associated
"KRN",8994,123508,1,2,0)
if the study is associated with a consult procedure and a TIU note
"KRN",8994,123508,1,3,0)
exists for the consult.
"KRN",8994,123508,2,0)
^8994.02A^1^1
"KRN",8994,123508,2,1,0)
STYIEN^1^15^1^1
"KRN",8994,123508,2,1,1,0)
^^1^1^3110905^
"KRN",8994,123508,2,1,1,1,0)
This is an internal entry number on the IMAGE STUDY File (#2005.63).
"KRN",8994,123508,2,"B","STYIEN",1)

"KRN",8994,123508,2,"PARAMSEQ",1,1)

"KRN",8994,123508,3,0)
^^10^10^3110905^
"KRN",8994,123508,3,1,0)
This RPC returns an array with a single entry in the form n`msg`tiuien
"KRN",8994,123508,3,2,0)
whose format is as follows:
"KRN",8994,123508,3,3,0)
   n = 0 if the study is associated with a consult procedure and a
"KRN",8994,123508,3,4,0)
         TIU note exists for the consult
"KRN",8994,123508,3,5,0)
      >0 if the study is not associated with a consult for a local VA
"KRN",8994,123508,3,6,0)
         patient, or no TIU note exists for the consult
"KRN",8994,123508,3,7,0)
      <0 if an error condition exists (e.g., invalid input)
"KRN",8994,123508,3,8,0)
   msg = error message text if n < 0
"KRN",8994,123508,3,9,0)
   tiuien = internal entry number of the TIU note on the TIU DOCUMENT
"KRN",8994,123508,3,10,0)
            File (#8925) if n = 0
"KRN",8994,123509,-1)
0^34
"KRN",8994,123509,0)
MAGV FIND WORK ITEM^FIND^MAGVIM01^2^R
"KRN",8994,123509,1,0)
^8994.01^17^17^3120618^^^^
"KRN",8994,123509,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123509,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123509,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123509,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123509,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123509,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123509,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123509,1,8,0)
 |                                                               |
"KRN",8994,123509,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123509,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123509,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123509,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123509,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123509,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123509,1,15,0)
 
"KRN",8994,123509,1,16,0)
This RPC returns an array of work items with values that match the
"KRN",8994,123509,1,17,0)
parameters provided.
"KRN",8994,123509,2,0)
^8994.02A^8^8
"KRN",8994,123509,2,1,0)
TYPE^1^^^1
"KRN",8994,123509,2,1,1,0)
^8994.021^2^2^3111103^^
"KRN",8994,123509,2,1,1,1,0)
This is the type of work item.  Work item types are stored in the
"KRN",8994,123509,2,1,1,2,0)
WORKLIST file (#2006.9412).
"KRN",8994,123509,2,2,0)
SUBTYPE^1^^^2
"KRN",8994,123509,2,2,1,0)
^^1^1^3110407^
"KRN",8994,123509,2,2,1,1,0)
This is the subtype of the work item.
"KRN",8994,123509,2,3,0)
STATUS^1^^^3
"KRN",8994,123509,2,3,1,0)
^^1^1^3110407^
"KRN",8994,123509,2,3,1,1,0)
This is the current status of the work item.
"KRN",8994,123509,2,4,0)
PLACEID^1^^^4
"KRN",8994,123509,2,4,1,0)
^^2^2^3110407^
"KRN",8994,123509,2,4,1,1,0)
This is a place ID of a work item.  The place ID is an entry in the
"KRN",8994,123509,2,4,1,2,0)
INSTITUTION file (#4).
"KRN",8994,123509,2,5,0)
PRIORITY^1^^^5
"KRN",8994,123509,2,5,1,0)
^^1^1^3110407^
"KRN",8994,123509,2,5,1,1,0)
This is the numeric priority given to a work item.
"KRN",8994,123509,2,6,0)
TAGS^2^^^8
"KRN",8994,123509,2,6,1,0)
^8994.021^1^1^3120618^^^^
"KRN",8994,123509,2,6,1,1,0)
This is an array of tag names and values.
"KRN",8994,123509,2,7,0)
STOPTAG^1^^^6
"KRN",8994,123509,2,7,1,0)
^8994.021^3^3^3120618^^^^
"KRN",8994,123509,2,7,1,1,0)
If this parameter is set then the tag list may be truncated. If a tag
"KRN",8994,123509,2,7,1,2,0)
value matching the parameter value is returned then no more tags will
"KRN",8994,123509,2,7,1,3,0)
be returned.
"KRN",8994,123509,2,8,0)
MAXROWS^1^^^7
"KRN",8994,123509,2,8,1,0)
^^3^3^3120618^
"KRN",8994,123509,2,8,1,1,0)
This parameter determines the number of work items to return.  If this
"KRN",8994,123509,2,8,1,2,0)
parameter is not set all matching work items will be sent.  If this parameter
"KRN",8994,123509,2,8,1,3,0)
is defined it will determine the maximum number of work items to return
"KRN",8994,123509,2,"B","MAXROWS",8)

"KRN",8994,123509,2,"B","PLACEID",4)

"KRN",8994,123509,2,"B","PRIORITY",5)

"KRN",8994,123509,2,"B","STATUS",3)

"KRN",8994,123509,2,"B","STOPTAG",7)

"KRN",8994,123509,2,"B","SUBTYPE",2)

"KRN",8994,123509,2,"B","TAGS",6)

"KRN",8994,123509,2,"B","TYPE",1)

"KRN",8994,123509,2,"PARAMSEQ",1,1)

"KRN",8994,123509,2,"PARAMSEQ",2,2)

"KRN",8994,123509,2,"PARAMSEQ",3,3)

"KRN",8994,123509,2,"PARAMSEQ",4,4)

"KRN",8994,123509,2,"PARAMSEQ",5,5)

"KRN",8994,123509,2,"PARAMSEQ",6,7)

"KRN",8994,123509,2,"PARAMSEQ",7,8)

"KRN",8994,123509,2,"PARAMSEQ",8,6)

"KRN",8994,123509,3,0)
^8994.03^2^2^3120618^^^^
"KRN",8994,123509,3,1,0)
The return parameter returns a "0" for success. "-1" followed by an error message is returned if an error has occurred.
"KRN",8994,123509,3,2,0)
Subsequently an array of all matching work items and field values are returned.
"KRN",8994,123510,-1)
0^35
"KRN",8994,123510,0)
MAGV GET ACCESSION NUM^GETACCNO^MAGVRS08^1^R^0
"KRN",8994,123510,1,0)
^8994.01^2^2^3100915^^
"KRN",8994,123510,1,1,0)
This RPC returns an accession number given a patient reference internal 
"KRN",8994,123510,1,2,0)
entry number and procedure reference internal entry number.
"KRN",8994,123510,2,0)
^8994.02A^3^3
"KRN",8994,123510,2,1,0)
PATREFIEN^1^10^1^1
"KRN",8994,123510,2,1,1,0)
^8994.021^2^2^3100915^^
"KRN",8994,123510,2,1,1,1,0)
This is the internal entry number of the entry on the IMAGING PATIENT 
"KRN",8994,123510,2,1,1,2,0)
REFERENCE File (#2005.6) with which the procedure reference is associated.
"KRN",8994,123510,2,2,0)
PROCREFIEN^1^10^1^2
"KRN",8994,123510,2,2,1,0)
^^2^2^3100915^
"KRN",8994,123510,2,2,1,1,0)
This is the procedure's internal entry number on the IMAGING PROCEDURE
"KRN",8994,123510,2,2,1,2,0)
REFERENCE File (#2005.61).
"KRN",8994,123510,2,3,0)
OVERRIDE^1^3^0^3
"KRN",8994,123510,2,3,1,0)
^^3^3^3100805^
"KRN",8994,123510,2,3,1,1,0)
This parameter should be used with EXTREME CAUTION.  If set TRUE
"KRN",8994,123510,2,3,1,2,0)
(nonzero), will suppress the validation of the procedure reference IEN
"KRN",8994,123510,2,3,1,3,0)
against the patient reference IEN.
"KRN",8994,123510,2,"B","OVERRIDE",3)

"KRN",8994,123510,2,"B","PATREFIEN",1)

"KRN",8994,123510,2,"B","PROCREFIEN",2)

"KRN",8994,123510,2,"PARAMSEQ",1,1)

"KRN",8994,123510,2,"PARAMSEQ",2,2)

"KRN",8994,123510,2,"PARAMSEQ",3,3)

"KRN",8994,123510,3,0)
^^2^2^3100805^
"KRN",8994,123510,3,1,0)
This is the accession number of the radiology procedure or 
"KRN",8994,123510,3,2,0)
consult/request reference, if available.  Defined for VA procedures only.
"KRN",8994,123511,-1)
0^36
"KRN",8994,123511,0)
MAGV GET DGW CONFIG^GETGWCFG^MAGVDGWP^1^R
"KRN",8994,123511,1,0)
^8994.01^2^2^3100816^^^
"KRN",8994,123511,1,1,0)
Get DICOM Gateway configuration settings from the MAGV GATEWAY
"KRN",8994,123511,1,2,0)
CONFIGURATION File (#2006.9191).
"KRN",8994,123511,2,0)
^8994.02A^1^1
"KRN",8994,123511,2,1,0)
HOSTNAME^1^30^^1
"KRN",8994,123511,2,1,1,0)
^8994.021^1^1^3100816^^^^
"KRN",8994,123511,2,1,1,1,0)
NAME OF DICOM GATEWAY COMPUTER
"KRN",8994,123511,2,"B","HOSTNAME",1)

"KRN",8994,123511,2,"PARAMSEQ",1,1)

"KRN",8994,123511,3,0)
^8994.03^12^12^3100816^^
"KRN",8994,123511,3,1,0)
DICOM Gateway Configuration settings returned as a ~ delimited string.
"KRN",8994,123511,3,2,0)
The return string contains the following parameters:
"KRN",8994,123511,3,3,0)
0~HOSTNAME~EMAIL ADDRESS~POSTOFFICE~PORT~IMPORTER~STATION NUMBER
"KRN",8994,123511,3,4,0)
 0 represents a successful operation
"KRN",8994,123511,3,5,0)
HOSTNAME is the name of the DICOM Gateway Computer
"KRN",8994,123511,3,6,0)
EMAIL ADDRESS is the email address for support personnel.
"KRN",8994,123511,3,7,0)
POSTOFFICE is the post office address name.]
"KRN",8994,123511,3,8,0)
PORT is the post office port number
"KRN",8994,123511,3,9,0)
IMPORTER indicates whether or not the Importer is in use (Yes or No)
"KRN",8994,123511,3,10,0)
STATION NUMBER is the site location code.
"KRN",8994,123511,3,11,0)
 
"KRN",8994,123511,3,12,0)
-1 is an error condition message.
"KRN",8994,123512,-1)
0^37
"KRN",8994,123512,0)
MAGV GET DICOM FAILED IMAGE^DCRCTGET^MAGVRS51^2^R
"KRN",8994,123512,1,0)
^8994.01^1^1^3100826^^^
"KRN",8994,123512,1,1,0)
Returns image attributes given the IEN of the DICOM FAILED IMAGES File (#2006.575).
"KRN",8994,123512,2,0)
^8994.02A^1^1
"KRN",8994,123512,2,1,0)
ATTS^2
"KRN",8994,123512,2,1,1,0)
^8994.021^1^1^3100826^^
"KRN",8994,123512,2,1,1,1,0)
This attribute identifies the Machine ID to use to look up entries.
"KRN",8994,123512,2,"B","ATTS",1)

"KRN",8994,123512,3,0)
^8994.03^2^2^3100826^^
"KRN",8994,123512,3,1,0)
This RPC returns an array of name-value pairs of failed image
"KRN",8994,123512,3,2,0)
attributes.
"KRN",8994,123513,-1)
0^38
"KRN",8994,123513,0)
MAGV GET IMAGE FILE^GETFILE^MAGVRS31^2^R
"KRN",8994,123513,1,0)
^8994.01^1^1^3120202^^^^
"KRN",8994,123513,1,1,0)
Returns image attributes given the IEN of the IMAGE INSTANCE FILE (#2005.65).
"KRN",8994,123513,2,0)
^8994.02A^3^3
"KRN",8994,123513,2,1,0)
FILEIEN^1^^^2
"KRN",8994,123513,2,1,1,0)
^8994.021^1^1^3100806^^
"KRN",8994,123513,2,1,1,1,0)
The IEN of the IMAGE INSTANCE FILE (#2005.65) entry to be retrieved.
"KRN",8994,123513,2,2,0)
SOPIEN^1^^^1
"KRN",8994,123513,2,2,1,0)
^8994.021^1^1^3100806^^
"KRN",8994,123513,2,2,1,1,0)
The IEN of the parent IMAGE SOP INSTANCE file (#2005.64) entry.
"KRN",8994,123513,2,3,0)
OVERRIDE^1^^^3
"KRN",8994,123513,2,3,1,0)
^8994.021^2^2^3120202^^^^
"KRN",8994,123513,2,3,1,1,0)
If the OVERRIDE flag is set to 1 the RPC will not check the validity of the
"KRN",8994,123513,2,3,1,2,0)
PARENT IEN.
"KRN",8994,123513,2,"B","FILEIEN",1)

"KRN",8994,123513,2,"B","OVERRIDE",3)

"KRN",8994,123513,2,"B","SOPIEN",2)

"KRN",8994,123513,2,"PARAMSEQ",1,2)

"KRN",8994,123513,2,"PARAMSEQ",2,1)

"KRN",8994,123513,2,"PARAMSEQ",3,3)

"KRN",8994,123513,3,0)
^8994.03^2^2^3120202^^^^
"KRN",8994,123513,3,1,0)
This RPC returns an array of name-value pairs of patient record
"KRN",8994,123513,3,2,0)
attributes.
"KRN",8994,123514,-1)
0^39
"KRN",8994,123514,0)
MAGV GET NEXT WORK ITEM^GETNEXT^MAGVIM01^2^R
"KRN",8994,123514,1,0)
^8994.01^17^17^3120412^^
"KRN",8994,123514,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123514,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123514,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123514,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123514,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123514,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123514,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123514,1,8,0)
 |                                                               |
"KRN",8994,123514,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123514,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123514,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123514,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123514,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123514,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123514,1,15,0)
 
"KRN",8994,123514,1,16,0)
This RPC returns the work item with the oldest LAST UPDATED date/time
"KRN",8994,123514,1,17,0)
with the specified expected status and work item type.
"KRN",8994,123514,2,0)
^8994.02A^6^6
"KRN",8994,123514,2,1,0)
TYPE^1^^1^1
"KRN",8994,123514,2,1,1,0)
^8994.021^1^1^3111103^^^^
"KRN",8994,123514,2,1,1,1,0)
This is the IEN of the related work list entry in the MAG WORK ITEM file (#2006.941).
"KRN",8994,123514,2,2,0)
EXPSTAT^1^^1^2
"KRN",8994,123514,2,2,1,0)
^8994.021^1^1^3110420^^
"KRN",8994,123514,2,2,1,1,0)
This is the expected status of the work item.  If the work item does not have the expected status the work item elements will not be  returned and the work item status will not be updated.
"KRN",8994,123514,2,3,0)
NEWSTAT^1^^1^3
"KRN",8994,123514,2,3,1,0)
^8994.021^1^1^3110420^^
"KRN",8994,123514,2,3,1,1,0)
This is the new status to be filed in the work item.
"KRN",8994,123514,2,4,0)
UPDUSR^1^^^4
"KRN",8994,123514,2,4,1,0)
^^1^1^3120119^
"KRN",8994,123514,2,4,1,1,0)
This is the user that has updated the work item entry.
"KRN",8994,123514,2,5,0)
UPDAPP^1^^^5
"KRN",8994,123514,2,5,1,0)
^8994.021^1^1^3120412^^
"KRN",8994,123514,2,5,1,1,0)
This is the application/service that has updated the work item entry.
"KRN",8994,123514,2,6,0)
PLACID^1^30^^6
"KRN",8994,123514,2,6,1,0)
^8994.021^1^1^3120412^^
"KRN",8994,123514,2,6,1,1,0)
The location name associated with the work item.
"KRN",8994,123514,2,"B","EXPSTAT",2)

"KRN",8994,123514,2,"B","NEWSTAT",3)

"KRN",8994,123514,2,"B","PLACID",6)

"KRN",8994,123514,2,"B","TYPE",1)

"KRN",8994,123514,2,"B","UPDAPP",5)

"KRN",8994,123514,2,"B","UPDUSR",4)

"KRN",8994,123514,2,"PARAMSEQ",1,1)

"KRN",8994,123514,2,"PARAMSEQ",2,2)

"KRN",8994,123514,2,"PARAMSEQ",3,3)

"KRN",8994,123514,2,"PARAMSEQ",4,4)

"KRN",8994,123514,2,"PARAMSEQ",5,5)

"KRN",8994,123514,2,"PARAMSEQ",6,6)

"KRN",8994,123514,3,0)
^8994.03^2^2^3120412^^^^
"KRN",8994,123514,3,1,0)
The return parameter returns a "0" for success. "-1" followed by an error message is returned if an error has occurred.
"KRN",8994,123514,3,2,0)
A successful look up will return all data elements filed for the entry.
"KRN",8994,123515,-1)
0^40
"KRN",8994,123515,0)
MAGV GET ORIG IMAGE FILE^GETORIG^MAGVRS24^2^R
"KRN",8994,123515,1,0)
^8994.01^2^2^3100915^^^^
"KRN",8994,123515,1,1,0)
This RPC returns an array of image file IENs associated with a
"KRN",8994,123515,1,2,0)
SOP instance.
"KRN",8994,123515,2,0)
^8994.02A^1^1
"KRN",8994,123515,2,1,0)
SOPIEN^1^^^1
"KRN",8994,123515,2,1,1,0)
^8994.021^1^1^3100915^^^^
"KRN",8994,123515,2,1,1,1,0)
The IEN of the IMAGE SOP INSTANCE file (#2005.64) to be used in the RPC function.
"KRN",8994,123515,2,"B","SOPIEN",1)

"KRN",8994,123515,2,"PARAMSEQ",1,1)

"KRN",8994,123515,3,0)
^8994.03^2^2^3100915^^^^
"KRN",8994,123515,3,1,0)
Returns an array of IMAGE INSTANCE FILE file (#2005.65) IENs that
"KRN",8994,123515,3,2,0)
are associated with the SOP instance.
"KRN",8994,123516,-1)
0^41
"KRN",8994,123516,0)
MAGV GET PAT INFO^GETPATI^MAGVRS08^2^R^0
"KRN",8994,123516,1,0)
^^2^2^3100805^
"KRN",8994,123516,1,1,0)
This RPC returns information for VA patients given an internal entry 
"KRN",8994,123516,1,2,0)
number on the IMAGING PATIENT REFERENCE File (#2005.6).
"KRN",8994,123516,2,0)
^8994.02A^1^1
"KRN",8994,123516,2,1,0)
PATREFIEN^1^10^1^1
"KRN",8994,123516,2,1,1,0)
^8994.021^2^2^3110125^^
"KRN",8994,123516,2,1,1,1,0)
This is the internal entry number of the patient reference on the IMAGING 
"KRN",8994,123516,2,1,1,2,0)
PATIENT REFERENCE File (#2005.6).
"KRN",8994,123516,2,"B","PATREFIEN",1)

"KRN",8994,123516,2,"PARAMSEQ",1,1)

"KRN",8994,123516,3,0)
^^10^10^3100805^
"KRN",8994,123516,3,1,0)
This RPC returns an array of patient information in successive name-value 
"KRN",8994,123516,3,2,0)
pairs formatted as <name>`<value>.  The following attributes are returned:
"KRN",8994,123516,3,3,0)
SSN
"KRN",8994,123516,3,4,0)
NAME
"KRN",8994,123516,3,5,0)
SEX
"KRN",8994,123516,3,6,0)
DOB
"KRN",8994,123516,3,7,0)
 
"KRN",8994,123516,3,8,0)
Values are returned only for valid VA patients for whom a DFN (internal 
"KRN",8994,123516,3,9,0)
entry number on the PATIENT File (#2)) is on file.  An exception is 
"KRN",8994,123516,3,10,0)
returned if the patient reference is not to a VA DFN.
"KRN",8994,123517,-1)
0^42
"KRN",8994,123517,0)
MAGV GET PAT ORDERS^GETORD^MAGVIM02^2^R^0^^0^.9
"KRN",8994,123517,1,0)
^8994.01^2^2^3111103^^^^
"KRN",8994,123517,1,1,0)
Returns an array of CONsult or RADiology orders for an input
"KRN",8994,123517,1,2,0)
ENTERPRISE PATIENT IDENTIFIER.
"KRN",8994,123517,2,0)
^8994.02A^8^6
"KRN",8994,123517,2,1,0)
ENTERPRISE PATIENT ID^1^999^1^1
"KRN",8994,123517,2,1,1,0)
^^1^1^3110415^
"KRN",8994,123517,2,1,1,1,0)
ENTERPRISE PATIENT ID.
"KRN",8994,123517,2,2,0)
PATIENT ID TYPE^1^1^1^2
"KRN",8994,123517,2,2,1,0)
^8994.021^2^2^3111103^^
"KRN",8994,123517,2,2,1,1,0)
Single character per ID TYPE field (#.03) of the
"KRN",8994,123517,2,2,1,2,0)
IMAGING PATIENT REFERENCE file (#2005.6).
"KRN",8994,123517,2,3,0)
PATIENT ID ASSIGNING AUTHORITY^1^1^1^3
"KRN",8994,123517,2,3,1,0)
^8994.021^2^2^3111103^^
"KRN",8994,123517,2,3,1,1,0)
Single character per ASSIGNING AUTHORITY field (#.02) of the
"KRN",8994,123517,2,3,1,2,0)
IMAGING PATIENT REFERENCE file (#2005.6).
"KRN",8994,123517,2,4,0)
PATIENT ID CREATING ENTITY^1^30^0^4
"KRN",8994,123517,2,4,1,0)
^8994.021^1^1^3111103^^
"KRN",8994,123517,2,4,1,1,0)
Free text per CREATING ENTITY field (#.04) of the IMAGING PATIENT REFERENCE file (#2005.6).
"KRN",8994,123517,2,5,0)
ORDER TYPE^1^3^1^5
"KRN",8994,123517,2,5,1,0)
^8994.021^1^1^3110418^^
"KRN",8994,123517,2,5,1,1,0)
Free text as "CON" for Consult Orders, "RAD" for Radiology Orders.
"KRN",8994,123517,2,7,0)
ORDER DATE FILTER START^1^8^1^6
"KRN",8994,123517,2,7,1,0)
^8994.021^1^1^3110503^^^
"KRN",8994,123517,2,7,1,1,0)
A date formatted as MMDDYYYY.
"KRN",8994,123517,2,8,0)
ORDER DATE FILTER END^1^8^1^7
"KRN",8994,123517,2,8,1,0)
^8994.021^1^1^3111103^^^^
"KRN",8994,123517,2,8,1,1,0)
A date formatted as MMDDYYYY.
"KRN",8994,123517,2,"B","ENTERPRISE PATIENT ID",1)

"KRN",8994,123517,2,"B","ORDER DATE FILTER END",8)

"KRN",8994,123517,2,"B","ORDER DATE FILTER START",7)

"KRN",8994,123517,2,"B","ORDER TYPE",5)

"KRN",8994,123517,2,"B","PATIENT ID ASSIGNING AUTHORITY",3)

"KRN",8994,123517,2,"B","PATIENT ID CREATING ENTITY",4)

"KRN",8994,123517,2,"B","PATIENT ID TYPE",2)

"KRN",8994,123517,2,"PARAMSEQ",1,1)

"KRN",8994,123517,2,"PARAMSEQ",2,2)

"KRN",8994,123517,2,"PARAMSEQ",3,3)

"KRN",8994,123517,2,"PARAMSEQ",4,4)

"KRN",8994,123517,2,"PARAMSEQ",5,5)

"KRN",8994,123517,2,"PARAMSEQ",6,7)

"KRN",8994,123517,2,"PARAMSEQ",7,7)

"KRN",8994,123517,2,"PARAMSEQ",7,8)

"KRN",8994,123517,2,"PARAMSEQ",8,8)

"KRN",8994,123517,3,0)
^8994.03^19^19^3111103^^^^
"KRN",8994,123517,3,1,0)
On error, returns "-1" followed by an error message. Else returns the number of orders returned, followed by arrayed exam data.
"KRN",8994,123517,3,2,0)
 
"KRN",8994,123517,3,3,0)
 "|"-01 Order_Type={"CON","RAD"}
"KRN",8994,123517,3,4,0)
    -02 Patient_DFN
"KRN",8994,123517,3,5,0)
    -03 Order_Date
"KRN",8994,123517,3,6,0)
    -04 Order_Reason
"KRN",8994,123517,3,7,0)
    -05 RAD/NUC_MED_PROCEDURE_LOCATION
"KRN",8994,123517,3,8,0)
    -06 Exam_Date
"KRN",8994,123517,3,9,0)
    -07 Exam_Accession_Number
"KRN",8994,123517,3,10,0)
    -08 Exam_Status
"KRN",8994,123517,3,11,0)
    -09 Procedure_ID (File #71 for "RAD", File #123 for "CON")
"KRN",8994,123517,3,12,0)
    -10 Procedure_Name
"KRN",8994,123517,3,13,0)
    -11 Exam Case Number
"KRN",8994,123517,3,14,0)
    -12 Exam IEN
"KRN",8994,123517,3,15,0)
    -13 Order IEN (RAD only)
"KRN",8994,123517,3,16,0)
    -14 Exam IEN(2) (RAD only)
"KRN",8994,123517,3,17,0)
    -15 Ordering Physician (RAD only)
"KRN",8994,123517,3,18,0)
    -16 Ordering Location IEN (RAD only)
"KRN",8994,123517,3,19,0)
    -17 Procedure Modifiers
"KRN",8994,123518,-1)
0^43
"KRN",8994,123518,0)
MAGV GET PAT REF ATTS^GETPATA^MAGVRS08^2^R
"KRN",8994,123518,1,0)
^8994.01^2^2^3100421^^^^
"KRN",8994,123518,1,1,0)
Returns patient attributes given the IEN on the IMAGING PATIENT REFERENCE 
"KRN",8994,123518,1,2,0)
File (#2005.6).
"KRN",8994,123518,2,0)
^8994.02A^1^1
"KRN",8994,123518,2,1,0)
PATIEN^1^128^1^1
"KRN",8994,123518,2,1,1,0)
^8994.021^2^2^3100421^^^^
"KRN",8994,123518,2,1,1,1,0)
The internal entry number of the patient on the IMAGING PATIENT REFERENCE 
"KRN",8994,123518,2,1,1,2,0)
File (#2005.6).
"KRN",8994,123518,2,"B","PATIEN",1)

"KRN",8994,123518,2,"PARAMSEQ",1,1)

"KRN",8994,123518,3,0)
^8994.03^7^7^3100421^^^
"KRN",8994,123518,3,1,0)
This RPC returns an array of name-value pairs of patient record 
"KRN",8994,123518,3,2,0)
attributes, including the following:
"KRN",8994,123518,3,3,0)
 AOF
"KRN",8994,123518,3,4,0)
 ASSIGNING ENTITY
"KRN",8994,123518,3,5,0)
 ENTERPRISE PATIENT ID
"KRN",8994,123518,3,6,0)
 ID TYPE
"KRN",8994,123518,3,7,0)
Names and values are separated by tilde (`).
"KRN",8994,123519,-1)
0^44
"KRN",8994,123519,0)
MAGV GET PROC REF ATTS^GETPROCA^MAGVRS08^2^R^0
"KRN",8994,123519,1,0)
^^3^3^3100805^
"KRN",8994,123519,1,1,0)
This RPC, given the internal entry number of an entry on the IMAGING 
"KRN",8994,123519,1,2,0)
PROCEDURE REFERENCE File (#2005.61), returns an array containing the 
"KRN",8994,123519,1,3,0)
field names and values that are defined for that entry.
"KRN",8994,123519,2,0)
^8994.02A^3^3
"KRN",8994,123519,2,1,0)
PATREFIEN^1^10^^1
"KRN",8994,123519,2,1,1,0)
^^2^2^3100805^
"KRN",8994,123519,2,1,1,1,0)
This is the internal entry number on the IMAGING PATIENT REFERENCE File 
"KRN",8994,123519,2,1,1,2,0)
(#2005.6) of the patient with whom this procedure reference is associated.
"KRN",8994,123519,2,2,0)
PROCREFIEN^1^10^1^2
"KRN",8994,123519,2,2,1,0)
^^2^2^3100805^
"KRN",8994,123519,2,2,1,1,0)
This is the internal entry number of the entry on the IMAGING PROCEDURE 
"KRN",8994,123519,2,2,1,2,0)
REFERENCE File (#2005.61) for which attribute values are to be returned.
"KRN",8994,123519,2,3,0)
OVERRIDE^1^3^^3
"KRN",8994,123519,2,3,1,0)
^^3^3^3100805^
"KRN",8994,123519,2,3,1,1,0)
This parameter should be used with EXTREME CAUTION.  It suppresses the 
"KRN",8994,123519,2,3,1,2,0)
check of the patient reference IEN against the value of the PARENT IEN 
"KRN",8994,123519,2,3,1,3,0)
Field (#.99) on the IMAGING PROCEDURE REFERENCE File (#2005.61).
"KRN",8994,123519,2,"B","OVERRIDE",3)

"KRN",8994,123519,2,"B","PATREFIEN",1)

"KRN",8994,123519,2,"B","PROCREFIEN",2)

"KRN",8994,123519,2,"PARAMSEQ",1,1)

"KRN",8994,123519,2,"PARAMSEQ",2,2)

"KRN",8994,123519,2,"PARAMSEQ",3,3)

"KRN",8994,123519,3,0)
^^4^4^3100805^
"KRN",8994,123519,3,1,0)
This RPC returns an array containing the field names and values 
"KRN",8994,123519,3,2,0)
associated with the requested entry on the IMAGING PROCEDURE REFERENCE 
"KRN",8994,123519,3,3,0)
File (#2005.61).  Each array entry is returned in the format 
"KRN",8994,123519,3,4,0)
<fname>`<value>.
"KRN",8994,123520,-1)
0^45
"KRN",8994,123520,0)
MAGV GET PROCEDURE INFO^GETPROCI^MAGVRS08^2^R^0
"KRN",8994,123520,1,0)
^^6^6^3100805^
"KRN",8994,123520,1,1,0)
This RPC, given the internal entry number of an entry on the IMAGING 
"KRN",8994,123520,1,2,0)
PROCEDURE REFERENCE File (#2005.61) that references a VA procedure,
"KRN",8994,123520,1,3,0)
returns an array containing the attributes of that procedure.
"KRN",8994,123520,1,4,0)
 
"KRN",8994,123520,1,5,0)
If the entry references a non-VA procedure, an appropriate exception 
"KRN",8994,123520,1,6,0)
message is returned.
"KRN",8994,123520,2,0)
^8994.02A^3^3
"KRN",8994,123520,2,1,0)
PATREFIEN^1^10^^1
"KRN",8994,123520,2,1,1,0)
^^2^2^3100805^
"KRN",8994,123520,2,1,1,1,0)
This is the internal entry number on the IMAGING PATIENT REFERENCE File
"KRN",8994,123520,2,1,1,2,0)
(#2005.6) of the patient with whom this procedure reference is associated.
"KRN",8994,123520,2,2,0)
PROCREFIEN^1^10^1^2
"KRN",8994,123520,2,2,1,0)
^^3^3^3100805^
"KRN",8994,123520,2,2,1,1,0)
This is the internal entry number of the entry on the IMAGING PROCEDURE
"KRN",8994,123520,2,2,1,2,0)
REFERENCE File (#2005.61) for which procedure information is to be
"KRN",8994,123520,2,2,1,3,0)
returned.
"KRN",8994,123520,2,3,0)
OVERRIDE^1^3^^3
"KRN",8994,123520,2,3,1,0)
^^4^4^3100805^
"KRN",8994,123520,2,3,1,1,0)
This parameter should be used with EXTREME CAUTION.  If valued TRUE 
"KRN",8994,123520,2,3,1,2,0)
(nonzero), it suppresses the check of the patient reference IEN against 
"KRN",8994,123520,2,3,1,3,0)
the value of the PARENT IEN Field (#.99) on the IMAGING PROCEDURE 
"KRN",8994,123520,2,3,1,4,0)
REFERENCE File (#2005.61).
"KRN",8994,123520,2,"B","OVERRIDE",3)

"KRN",8994,123520,2,"B","PATREFIEN",1)

"KRN",8994,123520,2,"B","PROCREFIEN",2)

"KRN",8994,123520,2,"PARAMSEQ",1,1)

"KRN",8994,123520,2,"PARAMSEQ",2,2)

"KRN",8994,123520,2,"PARAMSEQ",3,3)

"KRN",8994,123520,3,0)
^^15^15^3100805^
"KRN",8994,123520,3,1,0)
This RPC returns an array containing information about the VA procedure 
"KRN",8994,123520,3,2,0)
that is referenced by the requested entry on the IMAGING 
"KRN",8994,123520,3,3,0)
PROCEDURE REFERENCE File (#2005.61).  The entries of the array are 
"KRN",8994,123520,3,4,0)
formatted as <fname>`<value>.
"KRN",8994,123520,3,5,0)
 
"KRN",8994,123520,3,6,0)
If the entry does not point to a VA procedure, an appropriate exception 
"KRN",8994,123520,3,7,0)
is returned.
"KRN",8994,123520,3,8,0)
 
"KRN",8994,123520,3,9,0)
Otherwise, the following attributes are valued:
"KRN",8994,123520,3,10,0)
DESCRIPTION
"KRN",8994,123520,3,11,0)
DATE/TIME
"KRN",8994,123520,3,12,0)
PROCEDURE CODE
"KRN",8994,123520,3,13,0)
TERMINOLOGY
"KRN",8994,123520,3,14,0)
CODING AUTHORITY
"KRN",8994,123520,3,15,0)
REFERRING PHYSICIAN 
"KRN",8994,123521,-1)
0^46
"KRN",8994,123521,0)
MAGV GET RADIOLOGY PROCEDURES^GETPROCS^MAGVIM10^2^R^0^^^3
"KRN",8994,123521,1,0)
^8994.01^20^20^3121011^^^
"KRN",8994,123521,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123521,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123521,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123521,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123521,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123521,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123521,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123521,1,8,0)
 |                                                               |
"KRN",8994,123521,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123521,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123521,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123521,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123521,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123521,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123521,1,15,0)
 
"KRN",8994,123521,1,16,0)
This RPC returns a list of Radiology Procedures for 'no-credit' Imaging
"KRN",8994,123521,1,17,0)
locations for the INSTITUTION of the input STATION NUMBER.
"KRN",8994,123521,1,18,0)
If the INSTITUTION has no defined 'no-credit' Imaging locations,
"KRN",8994,123521,1,19,0)
the results will return an error message indicating the problem.
"KRN",8994,123521,1,20,0)
Updated from MAG DICOM RADIOLOGY PROCEDURES (MAG*3.0*118).
"KRN",8994,123521,2,0)
^8994.02A^2^2
"KRN",8994,123521,2,1,0)
STATIONUM^1^30^1^1
"KRN",8994,123521,2,1,1,0)
^8994.021^2^2^3121011^^^^
"KRN",8994,123521,2,1,1,1,0)
This is the STATION NUMBER (#99) of an INSTITUTION file (#4) entry
"KRN",8994,123521,2,1,1,2,0)
used for the query.
"KRN",8994,123521,2,2,0)
FILTER^1^30^0^2
"KRN",8994,123521,2,2,1,0)
^8994.021^2^2^3121011^^
"KRN",8994,123521,2,2,1,1,0)
If this parameter is set to "1" procedure types of "B"road and "P"arent 
"KRN",8994,123521,2,2,1,2,0)
will be filtered from the return array.
"KRN",8994,123521,2,"B","FILTER",2)

"KRN",8994,123521,2,"B","STATIONUM",1)

"KRN",8994,123521,2,"PARAMSEQ",1,1)

"KRN",8994,123521,2,"PARAMSEQ",2,2)

"KRN",8994,123522,-1)
0^47
"KRN",8994,123522,0)
MAGV GET REPORT^GETRPT^MAGVRS08^2^R^0
"KRN",8994,123522,1,0)
^8994.01^4^4^3100805^
"KRN",8994,123522,1,1,0)
This RPC, given the internal entry number of an entry on the IMAGING
"KRN",8994,123522,1,2,0)
PROCEDURE REFERENCE File (#2005.61) that references a VA procedure,
"KRN",8994,123522,1,3,0)
returns an array containing the report text for that procedure and 
"KRN",8994,123522,1,4,0)
associated attributes.
"KRN",8994,123522,2,0)
^8994.02A^3^3
"KRN",8994,123522,2,1,0)
PATREFIEN^1^10^0^1
"KRN",8994,123522,2,1,1,0)
^^3^3^3100805^
"KRN",8994,123522,2,1,1,1,0)
This is the internal entry number on the IMAGING PATIENT REFERENCE File
"KRN",8994,123522,2,1,1,2,0)
(#2005.6) of the patient with whom this procedure reference is
"KRN",8994,123522,2,1,1,3,0)
associated.
"KRN",8994,123522,2,2,0)
PROCREFIEN^1^10^1^2
"KRN",8994,123522,2,2,1,0)
^^2^2^3100805^
"KRN",8994,123522,2,2,1,1,0)
This is the internal entry number of the entry on the IMAGING PROCEDURE
"KRN",8994,123522,2,2,1,2,0)
REFERENCE File (#2005.61) for which report information is to be returned.
"KRN",8994,123522,2,3,0)
OVERRIDE^1^3^^3
"KRN",8994,123522,2,3,1,0)
^^4^4^3100805^
"KRN",8994,123522,2,3,1,1,0)
This parameter should be used with EXTREME CAUTION.  If valued TRUE
"KRN",8994,123522,2,3,1,2,0)
(nonzero), it suppresses the check of the patient reference IEN against
"KRN",8994,123522,2,3,1,3,0)
the value of the PARENT IEN Field (#.99) on the IMAGING PROCEDURE
"KRN",8994,123522,2,3,1,4,0)
REFERENCE File (#2005.61).
"KRN",8994,123522,2,"B","OVERRIDE",3)

"KRN",8994,123522,2,"B","PATREFIEN",1)

"KRN",8994,123522,2,"B","PROCREFIEN",2)

"KRN",8994,123522,2,"PARAMSEQ",1,1)

"KRN",8994,123522,2,"PARAMSEQ",2,2)

"KRN",8994,123522,2,"PARAMSEQ",3,3)

"KRN",8994,123522,3,0)
^^13^13^3100805^
"KRN",8994,123522,3,1,0)
This RPC returns an array containing report text and related information 
"KRN",8994,123522,3,2,0)
associated with the VA procedure that is referenced by the requested entry
"KRN",8994,123522,3,3,0)
on the IMAGING PROCEDURE REFERENCE File (#2005.61).  The entries of the
"KRN",8994,123522,3,4,0)
array are formatted as <fname>`<value>.
"KRN",8994,123522,3,5,0)
 
"KRN",8994,123522,3,6,0)
If the entry does not point to a VA procedure, an appropriate exception is
"KRN",8994,123522,3,7,0)
returned.
"KRN",8994,123522,3,8,0)
 
"KRN",8994,123522,3,9,0)
Otherwise, the following attributes are valued:
"KRN",8994,123522,3,10,0)
DOCUMENT TYPE
"KRN",8994,123522,3,11,0)
ENTRY DATE/TIME
"KRN",8994,123522,3,12,0)
EPISODE END DATE/TIME
"KRN",8994,123522,3,13,0)
REPORT TEXT
"KRN",8994,123523,-1)
0^48
"KRN",8994,123523,0)
MAGV GET SERIES^GETSER^MAGVRS14^2^R
"KRN",8994,123523,1,0)
^8994.01^2^2^3100826^^^^
"KRN",8994,123523,1,1,0)
Returns patient attributes given the IEN on the IMAGE SERIES
"KRN",8994,123523,1,2,0)
File (#2005.63).
"KRN",8994,123523,2,0)
^8994.02A^3^3
"KRN",8994,123523,2,1,0)
SERIEN^1^^^2
"KRN",8994,123523,2,1,1,0)
^8994.021^2^2^3100806^^^^
"KRN",8994,123523,2,1,1,1,0)
The internal entry number of the study in the IMAGE SERIES
"KRN",8994,123523,2,1,1,2,0)
File (#2005.63).
"KRN",8994,123523,2,2,0)
STUDYIEN^^^^1
"KRN",8994,123523,2,2,1,0)
^8994.021^2^2^3100428^^^
"KRN",8994,123523,2,2,1,1,0)
The internal entry number of the related STUDY in the IMAGE STUDY
"KRN",8994,123523,2,2,1,2,0)
file (#2005.62).
"KRN",8994,123523,2,3,0)
OVERRIDE^1^^^3
"KRN",8994,123523,2,3,1,0)
^8994.021^1^1^3100826^^^^
"KRN",8994,123523,2,3,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123523,2,"B","OVERRIDE",3)

"KRN",8994,123523,2,"B","SERIEN",1)

"KRN",8994,123523,2,"B","STUDYIEN",2)

"KRN",8994,123523,2,"PARAMSEQ",1,2)

"KRN",8994,123523,2,"PARAMSEQ",2,1)

"KRN",8994,123523,2,"PARAMSEQ",3,3)

"KRN",8994,123523,3,0)
^8994.03^2^2^3100826^^^^
"KRN",8994,123523,3,1,0)
This RPC returns an array of name-value pairs of patient record
"KRN",8994,123523,3,2,0)
attributes. Names and values are separated by backtick "`".
"KRN",8994,123524,-1)
0^49
"KRN",8994,123524,0)
MAGV GET SERVICE INST LIST^GETSILST^MAGVRS71^2^R^0
"KRN",8994,123524,1,0)
^^2^2^3111103^
"KRN",8994,123524,1,1,0)
This remote procedure returns a list of all entries in the IMAGING 
"KRN",8994,123524,1,2,0)
SERVICE INSTITUTION file (#2005.8). Introduced in Patch MAG*3.0*34.
"KRN",8994,123524,3,0)
^8994.03^6^6^3111103^^
"KRN",8994,123524,3,1,0)
The return array contains a list of service institution entries in the 
"KRN",8994,123524,3,2,0)
format
"KRN",8994,123524,3,3,0)
0``varptr|name
"KRN",8994,123524,3,4,0)
 
"KRN",8994,123524,3,5,0)
where 'varptr' is the variable pointer entry to the institution, and 
"KRN",8994,123524,3,6,0)
'name' is the institution name.
"KRN",8994,123525,-1)
0^50
"KRN",8994,123525,0)
MAGV GET SOP DATA^GETSOP^MAGVRS24^2^R
"KRN",8994,123525,1,0)
^8994.01^2^2^3100826^^^^
"KRN",8994,123525,1,1,0)
Returns SOP attributes given the IEN on the IMAGE SOP DATA
"KRN",8994,123525,1,2,0)
File (#2005.64).
"KRN",8994,123525,2,0)
^8994.02A^3^3
"KRN",8994,123525,2,1,0)
SOPIEN^1^^^2
"KRN",8994,123525,2,1,1,0)
^^2^2^3100806^
"KRN",8994,123525,2,1,1,1,0)
The internal entry number of the study in the IMAGE SOP INSTANCE
"KRN",8994,123525,2,1,1,2,0)
 File (#2005.64).
"KRN",8994,123525,2,2,0)
SERIEN^1^^^1
"KRN",8994,123525,2,2,1,0)
^^2^2^3100806^
"KRN",8994,123525,2,2,1,1,0)
The internal entry number of the study in the IMAGE SERIES
"KRN",8994,123525,2,2,1,2,0)
 File (#2005.63).
"KRN",8994,123525,2,3,0)
OVERRIDE^1^^^3
"KRN",8994,123525,2,3,1,0)
^8994.021^1^1^3100826^^^
"KRN",8994,123525,2,3,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123525,2,"B","OVERRIDE",3)

"KRN",8994,123525,2,"B","SERIEN",2)

"KRN",8994,123525,2,"B","SOPIEN",1)

"KRN",8994,123525,2,"PARAMSEQ",1,2)

"KRN",8994,123525,2,"PARAMSEQ",2,1)

"KRN",8994,123525,2,"PARAMSEQ",3,3)

"KRN",8994,123525,3,0)
^8994.03^2^2^3100826^^
"KRN",8994,123525,3,1,0)
This RPC returns an array of name-value pairs of patient record
"KRN",8994,123525,3,2,0)
attributes. Names and values are separated by backtick "`".
"KRN",8994,123526,-1)
0^51
"KRN",8994,123526,0)
MAGV GET STUDY^GETSTUDY^MAGVRS04^2^R
"KRN",8994,123526,1,0)
^8994.01^2^2^3101029^^^^
"KRN",8994,123526,1,1,0)
Returns study attributes given the IEN on the IMAGE STUDY
"KRN",8994,123526,1,2,0)
File (#2005.62).
"KRN",8994,123526,2,0)
^8994.02A^3^3
"KRN",8994,123526,2,1,0)
STUDYIEN^1^^^2
"KRN",8994,123526,2,1,1,0)
^8994.021^2^2^3100915^^
"KRN",8994,123526,2,1,1,1,0)
The internal entry number of the study in the IMAGE STUDY
"KRN",8994,123526,2,1,1,2,0)
File (#2005.62).
"KRN",8994,123526,2,2,0)
OVERRIDE^1^^^3
"KRN",8994,123526,2,2,1,0)
^^1^1^3100421^
"KRN",8994,123526,2,2,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123526,2,3,0)
PROCIEN^1^^^1
"KRN",8994,123526,2,3,1,0)
^8994.021^2^2^3101029^^^^
"KRN",8994,123526,2,3,1,1,0)
The internal entry number of the related procedure in the IMAGE PROCEDURE
"KRN",8994,123526,2,3,1,2,0)
REFERENCE file (#2005.61).
"KRN",8994,123526,2,"B","OVERRIDE",2)

"KRN",8994,123526,2,"B","PROCIEN",3)

"KRN",8994,123526,2,"B","STUDYIEN",1)

"KRN",8994,123526,2,"PARAMSEQ",1,3)

"KRN",8994,123526,2,"PARAMSEQ",2,1)

"KRN",8994,123526,2,"PARAMSEQ",3,2)

"KRN",8994,123526,3,0)
^8994.03^2^2^3101029^^^^
"KRN",8994,123526,3,1,0)
This RPC returns an array of name-value pairs of patient record
"KRN",8994,123526,3,2,0)
attributes. Names and values are separated by backtick "`".
"KRN",8994,123527,-1)
0^52
"KRN",8994,123527,0)
MAGV GET WORK ITEM^GETITEM^MAGVIM01^2^R
"KRN",8994,123527,1,0)
^8994.01^2^2^3120119^^^^
"KRN",8994,123527,1,1,0)
This RPC returns all of the data elements for a single entry in the
"KRN",8994,123527,1,2,0)
MAG WORK ITEM file (#2006.941).
"KRN",8994,123527,2,0)
^8994.02A^5^5
"KRN",8994,123527,2,1,0)
ITEMID^1^12^^1
"KRN",8994,123527,2,1,1,0)
^8994.021^1^1^3110407^^
"KRN",8994,123527,2,1,1,1,0)
This is the item ID used to uniquely identify a work item.
"KRN",8994,123527,2,2,0)
EXPSTAT^1^^^2
"KRN",8994,123527,2,2,1,0)
^8994.021^3^3^3110420^^^^
"KRN",8994,123527,2,2,1,1,0)
This is the expected status of the work item.  If the work item does
"KRN",8994,123527,2,2,1,2,0)
not have the expected status the work item elements will not be
"KRN",8994,123527,2,2,1,3,0)
returned and the work item status will not be updated.
"KRN",8994,123527,2,3,0)
NEWSTAT^1^^^3
"KRN",8994,123527,2,3,1,0)
^8994.021^1^1^3110420^^^^
"KRN",8994,123527,2,3,1,1,0)
This is the new status to be filed in the work item.
"KRN",8994,123527,2,4,0)
UPDUSR^1^^^4
"KRN",8994,123527,2,4,1,0)
^^1^1^3120119^
"KRN",8994,123527,2,4,1,1,0)
This is the user that has updated the work item entry.
"KRN",8994,123527,2,5,0)
UPDAPP^1^^^5
"KRN",8994,123527,2,5,1,0)
^^1^1^3120119^
"KRN",8994,123527,2,5,1,1,0)
This is the application/service that has updated the work item entry.
"KRN",8994,123527,2,"B","EXPSTAT",2)

"KRN",8994,123527,2,"B","ITEMID",1)

"KRN",8994,123527,2,"B","NEWSTAT",3)

"KRN",8994,123527,2,"B","UPDAPP",5)

"KRN",8994,123527,2,"B","UPDUSR",4)

"KRN",8994,123527,2,"PARAMSEQ",1,1)

"KRN",8994,123527,2,"PARAMSEQ",2,2)

"KRN",8994,123527,2,"PARAMSEQ",3,3)

"KRN",8994,123527,2,"PARAMSEQ",4,4)

"KRN",8994,123527,2,"PARAMSEQ",5,5)

"KRN",8994,123527,3,0)
^8994.03^2^2^3120119^^^^
"KRN",8994,123527,3,1,0)
The return parameter returns a "0" for success. "-1" followed by an error message is returned if an error has occurred.
"KRN",8994,123527,3,2,0)
A successful look up will return all data elements filed for the entry.
"KRN",8994,123528,-1)
0^53
"KRN",8994,123528,0)
MAGV GET WORKLISTS^GETLIST^MAGVIM01^2^R
"KRN",8994,123528,1,0)
^^17^17^3120208
"KRN",8994,123528,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123528,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123528,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123528,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123528,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123528,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123528,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123528,1,8,0)
 |                                                               |
"KRN",8994,123528,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123528,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123528,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123528,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123528,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123528,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123528,1,15,0)
 
"KRN",8994,123528,1,16,0)
This RPC returns a list of all worklist entries in the WORKLIST (#2006.9412)
"KRN",8994,123528,1,17,0)
file.  The worklists name and active status are returned in an array.
"KRN",8994,123528,3,0)
^8994.03^2^2^3130321^^^^
"KRN",8994,123528,3,1,0)
The return parameter returns a "0" for success. "-1" followed by an error message is returned if an error has occurred.
"KRN",8994,123528,3,2,0)
Subsequent lines return work list names and statuses.
"KRN",8994,123529,-1)
0^54
"KRN",8994,123529,0)
MAGV IMPORT MEDIA LOG STORE^IMPMEDIA^MAGVIM03^2^R^^^1
"KRN",8994,123529,1,0)
^^16^16^3120208
"KRN",8994,123529,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123529,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123529,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123529,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123529,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123529,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123529,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123529,1,8,0)
 |                                                               |
"KRN",8994,123529,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123529,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123529,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123529,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123529,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123529,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123529,1,15,0)
 
"KRN",8994,123529,1,16,0)
Files data from an Importer II media import event to the MAGV IMPORT MEDIA LOG file (#2006.9422)
"KRN",8994,123529,2,0)
^8994.02A^7^5
"KRN",8994,123529,2,3,0)
MAGVDUZ^1^16^1^1
"KRN",8994,123529,2,3,1,0)
^8994.021^1^1^3121016^^^
"KRN",8994,123529,2,3,1,1,0)
DUZ of the user importing the media.
"KRN",8994,123529,2,4,0)
MAGVWKST^1^30^0^2
"KRN",8994,123529,2,4,1,0)
^8994.021^1^1^3121016^^^
"KRN",8994,123529,2,4,1,1,0)
Computer name of the workstation used for the media import event.
"KRN",8994,123529,2,5,0)
MEDTYPE^1^16^0^3
"KRN",8994,123529,2,5,1,0)
^8994.021^3^3^3121016^^^
"KRN",8994,123529,2,5,1,1,0)
Media Type used to transport the objects:
"KRN",8994,123529,2,5,1,2,0)
 
"KRN",8994,123529,2,5,1,3,0)
 Direct Import,  Network Import, Staged Media, DICOM Correct.
"KRN",8994,123529,2,6,0)
MEDVALID^1^16^0^4
"KRN",8994,123529,2,6,1,0)
^8994.021^5^5^3121016^^^
"KRN",8994,123529,2,6,1,1,0)
Validation status of the media import event:
"KRN",8994,123529,2,6,1,2,0)
 
"KRN",8994,123529,2,6,1,3,0)
   0 = VALID MEDIA
"KRN",8994,123529,2,6,1,4,0)
 -1 = DICOMDIR MISSING
"KRN",8994,123529,2,6,1,5,0)
 -2 = DICOMDIR INVALID
"KRN",8994,123529,2,7,0)
MEDVMSG^1^220^0^5
"KRN",8994,123529,2,7,1,0)
^8994.021^1^1^3121016^^^^
"KRN",8994,123529,2,7,1,1,0)
Description of the validation status of the media import event.
"KRN",8994,123529,2,"B","MAGVDUZ",3)

"KRN",8994,123529,2,"B","MAGVWKST",4)

"KRN",8994,123529,2,"B","MEDTYPE",5)

"KRN",8994,123529,2,"B","MEDVALID",6)

"KRN",8994,123529,2,"B","MEDVMSG",7)

"KRN",8994,123529,2,"PARAMSEQ",1,3)

"KRN",8994,123529,2,"PARAMSEQ",2,4)

"KRN",8994,123529,2,"PARAMSEQ",3,5)

"KRN",8994,123529,2,"PARAMSEQ",4,6)

"KRN",8994,123529,2,"PARAMSEQ",5,7)

"KRN",8994,123529,3,0)
^8994.03^1^1^3110604^^
"KRN",8994,123529,3,1,0)
Returns 0'IEN if successful transaction post; -1`Error Message if not.
"KRN",8994,123530,-1)
0^55
"KRN",8994,123530,0)
MAGV IMPORT STATUS^IMSTATUS^MAGVIM01^2^R
"KRN",8994,123530,1,0)
^8994.01^16^16^3120405^
"KRN",8994,123530,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123530,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123530,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123530,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123530,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123530,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123530,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123530,1,8,0)
 |                                                               |
"KRN",8994,123530,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123530,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123530,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123530,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123530,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123530,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123530,1,15,0)
 
"KRN",8994,123530,1,16,0)
Given a set of UIDS, this RPC returns the import status of a matching item.
"KRN",8994,123530,2,0)
^8994.02A^2^1
"KRN",8994,123530,2,2,0)
UIDS^2^^^1
"KRN",8994,123530,2,2,1,0)
^8994.021^2^2^3120405^^^
"KRN",8994,123530,2,2,1,1,0)
This is a list of Study, Series, and SOP UIDs delimited by "`".  The
"KRN",8994,123530,2,2,1,2,0)
UIDs will be used to check if an instance has been filed.
"KRN",8994,123530,2,"B","UIDS",2)

"KRN",8994,123530,2,"PARAMSEQ",1,2)

"KRN",8994,123530,3,0)
^8994.03^3^3^3130321^^^^
"KRN",8994,123530,3,1,0)
The return parameter returns a "0" if an item has been imported. n < 0 followed by an error message is returned if an error has occurred.
"KRN",8994,123530,3,2,0)
A list of entries will be returned.  Each entry returns a success or error
"KRN",8994,123530,3,3,0)
code followed by the UIDs identifying the instance.
"KRN",8994,123531,-1)
0^56
"KRN",8994,123531,0)
MAGV IMPORT STUDY LOG REPORT^IMPLOGEX^MAGVIM03^4^R^^^1^.8
"KRN",8994,123531,1,0)
^8994.01^1^1^3110602^
"KRN",8994,123531,1,1,0)
Exports data from the MAGV IMPORT STUDY LOG file (#2006.9421) as formatted reports.
"KRN",8994,123531,2,0)
^8994.02A^3^3
"KRN",8994,123531,2,1,0)
REPORT^1^^1^1
"KRN",8994,123531,2,1,1,0)
^^1^1^3110602^
"KRN",8994,123531,2,1,1,1,0)
An index value for the report to be exported.
"KRN",8994,123531,2,2,0)
STARTDT^1^8^0^2
"KRN",8994,123531,2,2,1,0)
^8994.021^1^1^3110602^^
"KRN",8994,123531,2,2,1,1,0)
The date, as YYYYMMDD, from which to start the query. If null, defaults to date of the earliest record.
"KRN",8994,123531,2,3,0)
STOPDT^1^8^0^3
"KRN",8994,123531,2,3,1,0)
^^1^1^3110602^
"KRN",8994,123531,2,3,1,1,0)
The date, as YYYYMMDD, bracketing the end of the query. If null, defaults to TODAY.
"KRN",8994,123531,2,"B","REPORT",1)

"KRN",8994,123531,2,"B","STARTDT",2)

"KRN",8994,123531,2,"B","STOPDT",3)

"KRN",8994,123531,2,"PARAMSEQ",1,1)

"KRN",8994,123531,2,"PARAMSEQ",2,2)

"KRN",8994,123531,2,"PARAMSEQ",3,3)

"KRN",8994,123531,3,0)
^^2^2^3111103^
"KRN",8994,123531,3,1,0)
 0`##_[of report lines returned]
"KRN",8994,123531,3,2,0)
-1`Error message
"KRN",8994,123532,-1)
0^57
"KRN",8994,123532,0)
MAGV IMPORT STUDY LOG STORE^IMPLOGIN^MAGVIM03^2^R^^^^.9
"KRN",8994,123532,1,0)
^8994.01^1^1^3110513^
"KRN",8994,123532,1,1,0)
Collects study-level data for objects imported by Imaging Importer II application (MAG*3.0*118).
"KRN",8994,123532,2,0)
^8994.02A^12^11
"KRN",8994,123532,2,1,0)
USER^1^7^^1
"KRN",8994,123532,2,1,1,0)
^^1^1^3110513^
"KRN",8994,123532,2,1,1,1,0)
DUZ of Importer II user who reconciled artifacts to this study.
"KRN",8994,123532,2,2,0)
USER LOCATION^1^6^^2
"KRN",8994,123532,2,2,1,0)
^^1^1^3110513^
"KRN",8994,123532,2,2,1,1,0)
Logon site, location, or division of the user who reconciled artifacts to this study.
"KRN",8994,123532,2,3,0)
PATIENT DFN^1^9^^3
"KRN",8994,123532,2,3,1,0)
^8994.021^1^1^3111103^^
"KRN",8994,123532,2,3,1,1,0)
DFN of the Patient to whose study the imported artifacts were reconciled.
"KRN",8994,123532,2,4,0)
ACCESSION NUMBER^1^24^^4
"KRN",8994,123532,2,4,1,0)
^^1^1^3110513^
"KRN",8994,123532,2,4,1,1,0)
Accession Number of the study to which the imported artifacts were reconciled.
"KRN",8994,123532,2,5,0)
STUDY INSTANCE UID^1^64^^5
"KRN",8994,123532,2,5,1,0)
^8994.021^2^2^3111103^^
"KRN",8994,123532,2,5,1,1,0)
STUDY INSTANCE UID of the study to which the imported artifacts were reconciled.
"KRN",8994,123532,2,5,1,2,0)
DICOM STANDARD IDENTIFIER: (0020,000D)
"KRN",8994,123532,2,6,0)
STUDY ORIGINATING LOCATION^1^30^^6
"KRN",8994,123532,2,6,1,0)
^^1^1^3110513^
"KRN",8994,123532,2,6,1,1,0)
Location where the imported study was performed.
"KRN",8994,123532,2,7,0)
ASSOCIATED STUDY TYPE^1^12^^7
"KRN",8994,123532,2,7,1,0)
^^1^1^3110513^
"KRN",8994,123532,2,7,1,1,0)
RADiology, CONsult, LABoratory, etc. of the study to which the imported artifacts were reconciled.
"KRN",8994,123532,2,8,0)
STUDY SERIES COUNT^1^7^^8
"KRN",8994,123532,2,8,1,0)
^^1^1^3110513^
"KRN",8994,123532,2,8,1,1,0)
Number of series comprising this study.
"KRN",8994,123532,2,9,0)
STUDY MODALITY COUNTS^2^16^^9
"KRN",8994,123532,2,9,1,0)
^^1^1^3110513^
"KRN",8994,123532,2,9,1,1,0)
List of Name-Value pairs representing each modality and its count for the imported objects.
"KRN",8994,123532,2,10,0)
MEDIA LOG IEN^1^10^0^10
"KRN",8994,123532,2,10,1,0)
^8994.021^2^2^3110604^^
"KRN",8994,123532,2,10,1,1,0)
Unique identifier of an Importer II media import event. Used to cross-reference fields in
"KRN",8994,123532,2,10,1,2,0)
this file with specific source media in the MAGV IMPORT MEDIA LOG file (#2006.9422).
"KRN",8994,123532,2,12,0)
OBJFAIL^1^6^^11
"KRN",8994,123532,2,12,1,0)
^8994.021^1^1^3110604^^
"KRN",8994,123532,2,12,1,1,0)
Count of requested objects which failed to be imported for this study.
"KRN",8994,123532,2,"B","ACCESSION NUMBER",4)

"KRN",8994,123532,2,"B","ASSOCIATED STUDY TYPE",7)

"KRN",8994,123532,2,"B","MEDIA LOG IEN",10)

"KRN",8994,123532,2,"B","OBJFAIL",12)

"KRN",8994,123532,2,"B","PATIENT DFN",3)

"KRN",8994,123532,2,"B","STUDY INSTANCE UID",5)

"KRN",8994,123532,2,"B","STUDY MODALITY COUNTS",9)

"KRN",8994,123532,2,"B","STUDY ORIGINATING LOCATION",6)

"KRN",8994,123532,2,"B","STUDY SERIES COUNT",8)

"KRN",8994,123532,2,"B","USER",1)

"KRN",8994,123532,2,"B","USER LOCATION",2)

"KRN",8994,123532,2,"PARAMSEQ",1,1)

"KRN",8994,123532,2,"PARAMSEQ",2,2)

"KRN",8994,123532,2,"PARAMSEQ",3,3)

"KRN",8994,123532,2,"PARAMSEQ",4,4)

"KRN",8994,123532,2,"PARAMSEQ",5,5)

"KRN",8994,123532,2,"PARAMSEQ",6,6)

"KRN",8994,123532,2,"PARAMSEQ",7,7)

"KRN",8994,123532,2,"PARAMSEQ",8,8)

"KRN",8994,123532,2,"PARAMSEQ",9,9)

"KRN",8994,123532,2,"PARAMSEQ",10,10)

"KRN",8994,123532,2,"PARAMSEQ",11,12)

"KRN",8994,123532,3,0)
^^2^2^3110513^
"KRN",8994,123532,3,1,0)
 0`Text_Confirming_the_Data_was_Filed
"KRN",8994,123532,3,2,0)
-1`Error_Message
"KRN",8994,123533,-1)
0^58
"KRN",8994,123533,0)
MAGV INACTIVATE INSTANCE FILE^INFILE^MAGVRS31^2^R
"KRN",8994,123533,1,0)
^8994.01^1^1^3100429^^
"KRN",8994,123533,1,1,0)
This RPC inactivates an instance file entry.
"KRN",8994,123533,2,0)
^8994.02A^3^3
"KRN",8994,123533,2,1,0)
FILEIEN^1^^^1
"KRN",8994,123533,2,1,1,0)
^^1^1^3100429^
"KRN",8994,123533,2,1,1,1,0)
This is the IEN of the instance file entry to be inactivated.
"KRN",8994,123533,2,2,0)
SOPIEN^1^^^2
"KRN",8994,123533,2,2,1,0)
^^1^1^3100429^
"KRN",8994,123533,2,2,1,1,0)
This is the IEN of the related SOP entry.
"KRN",8994,123533,2,3,0)
OVERRIDE^1^^^3
"KRN",8994,123533,2,3,1,0)
^^2^2^3100429^
"KRN",8994,123533,2,3,1,1,0)
If set to 1 this flag prevents the checking of the parent procedure
"KRN",8994,123533,2,3,1,2,0)
reference prior to inactivation.
"KRN",8994,123533,2,"B","FILEIEN",1)

"KRN",8994,123533,2,"B","OVERRIDE",3)

"KRN",8994,123533,2,"B","SOPIEN",2)

"KRN",8994,123533,2,"PARAMSEQ",1,1)

"KRN",8994,123533,2,"PARAMSEQ",2,2)

"KRN",8994,123533,2,"PARAMSEQ",3,3)

"KRN",8994,123533,3,0)
^8994.03^2^2^3100429^^
"KRN",8994,123533,3,1,0)
This parameter returns a 0 for success or a negative value and an error
"KRN",8994,123533,3,2,0)
message.
"KRN",8994,123534,-1)
0^59
"KRN",8994,123534,0)
MAGV INACTIVATE PAT REF^INPAT^MAGVRS06^2^R^0
"KRN",8994,123534,1,0)
^^2^2^3100805^
"KRN",8994,123534,1,1,0)
This RPC inactivates an entry on the IMAGING PATIENT REFERENCE File 
"KRN",8994,123534,1,2,0)
(#2005.6)..
"KRN",8994,123534,2,0)
^8994.02A^1^1
"KRN",8994,123534,2,1,0)
PATIEN^1^10^1^1
"KRN",8994,123534,2,1,1,0)
^^2^2^3100805^
"KRN",8994,123534,2,1,1,1,0)
This is the internal entry number of the record to be inactivated on the 
"KRN",8994,123534,2,1,1,2,0)
IMAGING PATIENT REFERENCE File (#2005.6).
"KRN",8994,123534,2,"B","PATIEN",1)

"KRN",8994,123534,2,"PARAMSEQ",1,1)

"KRN",8994,123534,3,0)
^^3^3^3100805^
"KRN",8994,123534,3,1,0)
This RPC returns an exception flag that is valued either FALSE (0) to 
"KRN",8994,123534,3,2,0)
indicate that there are no exceptions, or nonzero concatenated with a 
"KRN",8994,123534,3,3,0)
description of the exception.
"KRN",8994,123535,-1)
0^60
"KRN",8994,123535,0)
MAGV INACTIVATE PROC REF^INPROC^MAGVRS07^2^R^0
"KRN",8994,123535,1,0)
^8994.01^2^2^3100805^^
"KRN",8994,123535,1,1,0)
This RPC inactivates an entry on the IMAGING PROCEDURE REFERENCE File
"KRN",8994,123535,1,2,0)
(#2005.61).
"KRN",8994,123535,2,0)
^8994.02A^3^3
"KRN",8994,123535,2,1,0)
PROCIEN^1^10^1^1
"KRN",8994,123535,2,1,1,0)
^^2^2^3100805^
"KRN",8994,123535,2,1,1,1,0)
This is the internal entry number of the requested procedure on the 
"KRN",8994,123535,2,1,1,2,0)
IMAGING PROCEDURE REFERENCE File (#2005.61).
"KRN",8994,123535,2,2,0)
PATIEN^1^10^0^2
"KRN",8994,123535,2,2,1,0)
^^3^3^3100805^
"KRN",8994,123535,2,2,1,1,0)
This is the internal entry number on the IMAGING PATIENT REFERENCE File 
"KRN",8994,123535,2,2,1,2,0)
(#2005.6) of the patient reference with which this procedure reference is 
"KRN",8994,123535,2,2,1,3,0)
associated.
"KRN",8994,123535,2,3,0)
OVERRIDE^1^3^^3
"KRN",8994,123535,2,3,1,0)
^^3^3^3100805^
"KRN",8994,123535,2,3,1,1,0)
This parameter should be used with EXTREME CAUTION.  It suppresses the 
"KRN",8994,123535,2,3,1,2,0)
validation of the patient reference against the procedure reference with 
"KRN",8994,123535,2,3,1,3,0)
which it is associated.
"KRN",8994,123535,2,"B","OVERRIDE",3)

"KRN",8994,123535,2,"B","PATIEN",2)

"KRN",8994,123535,2,"B","PROCIEN",1)

"KRN",8994,123535,2,"PARAMSEQ",1,1)

"KRN",8994,123535,2,"PARAMSEQ",2,2)

"KRN",8994,123535,2,"PARAMSEQ",3,3)

"KRN",8994,123535,3,0)
^^3^3^3100805^
"KRN",8994,123535,3,1,0)
This RPC returns an exception flag that is valued either FALSE (0) to
"KRN",8994,123535,3,2,0)
indicate that there are no exceptions, or nonzero concatenated with a
"KRN",8994,123535,3,3,0)
description of the exception.
"KRN",8994,123536,-1)
0^61
"KRN",8994,123536,0)
MAGV INACTIVATE SERIES^INSERIES^MAGVRS14^2^R
"KRN",8994,123536,1,0)
^8994.01^1^1^3100429^^^^
"KRN",8994,123536,1,1,0)
This RPC inactivates a series entry in the IMAGE SERIES file (#2005.63).
"KRN",8994,123536,2,0)
^8994.02A^3^3
"KRN",8994,123536,2,1,0)
SERIEN^1^^^1
"KRN",8994,123536,2,1,1,0)
^^2^2^3100429^
"KRN",8994,123536,2,1,1,1,0)
If set to 1 this flag prevents the checking of the parent procedure
"KRN",8994,123536,2,1,1,2,0)
reference prior to inactivation.
"KRN",8994,123536,2,2,0)
STUDYIEN^1^^^2
"KRN",8994,123536,2,2,1,0)
^^1^1^3100429^
"KRN",8994,123536,2,2,1,1,0)
The IEN of the related study entry.
"KRN",8994,123536,2,3,0)
OVERRIDE^1^^^3
"KRN",8994,123536,2,3,1,0)
^8994.021^2^2^3100429^^^^
"KRN",8994,123536,2,3,1,1,0)
If set to 1 this flag prevents the checking of the parent procedure
"KRN",8994,123536,2,3,1,2,0)
reference prior to inactivation.
"KRN",8994,123536,2,"B","OVERRIDE",3)

"KRN",8994,123536,2,"B","SERIEN",1)

"KRN",8994,123536,2,"B","STUDYIEN",2)

"KRN",8994,123536,2,"PARAMSEQ",1,1)

"KRN",8994,123536,2,"PARAMSEQ",2,2)

"KRN",8994,123536,2,"PARAMSEQ",3,3)

"KRN",8994,123536,3,0)
^^2^2^3100429^
"KRN",8994,123536,3,1,0)
This parameter returns a 0 for success or a negative value and an error
"KRN",8994,123536,3,2,0)
message.
"KRN",8994,123537,-1)
0^62
"KRN",8994,123537,0)
MAGV INACTIVATE SOP^INSOP^MAGVRS24^2^R
"KRN",8994,123537,1,0)
^8994.01^1^1^3100826^^^^
"KRN",8994,123537,1,1,0)
This RPC inactivates a SOP INSTANCE entry in the IMAGE SOP INSTANCE file (#2005.64).
"KRN",8994,123537,2,0)
^8994.02A^3^3
"KRN",8994,123537,2,1,0)
SOPIEN^1^^^1
"KRN",8994,123537,2,1,1,0)
^^1^1^3100429^
"KRN",8994,123537,2,1,1,1,0)
The IEN of the SOP entry to be inactivated.
"KRN",8994,123537,2,2,0)
SERIEN^1^^^2
"KRN",8994,123537,2,2,1,0)
^8994.021^1^1^3100429^^
"KRN",8994,123537,2,2,1,1,0)
The IEN of the related series IEN.
"KRN",8994,123537,2,3,0)
OVERRIDE^1^^^3
"KRN",8994,123537,2,3,1,0)
^8994.021^2^2^3100826^^^^
"KRN",8994,123537,2,3,1,1,0)
If set to 1 this flag prevents the checking of the parent procedure
"KRN",8994,123537,2,3,1,2,0)
reference prior to inactivation.
"KRN",8994,123537,2,"B","OVERRIDE",3)

"KRN",8994,123537,2,"B","SERIEN",2)

"KRN",8994,123537,2,"B","SOPIEN",1)

"KRN",8994,123537,2,"PARAMSEQ",1,1)

"KRN",8994,123537,2,"PARAMSEQ",2,2)

"KRN",8994,123537,2,"PARAMSEQ",3,3)

"KRN",8994,123537,3,0)
^8994.03^2^2^3100826^^^
"KRN",8994,123537,3,1,0)
This parameter returns a 0 for success or a negative value and an error
"KRN",8994,123537,3,2,0)
message.
"KRN",8994,123538,-1)
0^63
"KRN",8994,123538,0)
MAGV INACTIVATE STUDY^INSTUDY^MAGVRS04^2^R
"KRN",8994,123538,1,0)
^8994.01^1^1^3100429^^
"KRN",8994,123538,1,1,0)
This RPC inactivates a study entry in the IMAGE STUDY file (#2005.62).
"KRN",8994,123538,2,0)
^8994.02A^3^3
"KRN",8994,123538,2,1,0)
STUDYIEN^1^^^1
"KRN",8994,123538,2,1,1,0)
^^1^1^3100429^
"KRN",8994,123538,2,1,1,1,0)
The IEN of the study entry to be inactivated.
"KRN",8994,123538,2,2,0)
PROCIEN^1^^^2
"KRN",8994,123538,2,2,1,0)
^^1^1^3100429^
"KRN",8994,123538,2,2,1,1,0)
The IEN of the related procedure reference.
"KRN",8994,123538,2,3,0)
OVERRIDE^1^^^3
"KRN",8994,123538,2,3,1,0)
^8994.021^2^2^3100429^^
"KRN",8994,123538,2,3,1,1,0)
If set to 1 this flag prevents the checking of the parent procedure
"KRN",8994,123538,2,3,1,2,0)
reference prior to inactivation.
"KRN",8994,123538,2,"B","OVERRIDE",3)

"KRN",8994,123538,2,"B","PROCIEN",2)

"KRN",8994,123538,2,"B","STUDYIEN",1)

"KRN",8994,123538,2,"PARAMSEQ",1,1)

"KRN",8994,123538,2,"PARAMSEQ",2,2)

"KRN",8994,123538,2,"PARAMSEQ",3,3)

"KRN",8994,123538,3,0)
^8994.03^2^2^3100429^^
"KRN",8994,123538,3,1,0)
This parameter returns a 0 for success or a negative value and an error
"KRN",8994,123538,3,2,0)
message.
"KRN",8994,123539,-1)
0^64
"KRN",8994,123539,0)
MAGV RAD EXAM ORDER^XMORDER^MAGVIM05^2^R^^^1
"KRN",8994,123539,1,0)
^8994.01^4^4^3110519^^^^
"KRN",8994,123539,1,1,0)
Wraps a call to the RAMAG EXAM ORDER remote procedure, and re-formats
"KRN",8994,123539,1,2,0)
the output for the DICOM Importer II application. Returns the IEN of
"KRN",8994,123539,1,3,0)
the new order in the RAD/NUC MED ORDERS file (#75.1), or
"KRN",8994,123539,1,4,0)
an array of error messages.
"KRN",8994,123539,2,0)
^8994.02A^9^9
"KRN",8994,123539,2,1,0)
RADFN^1^^1^1
"KRN",8994,123539,2,1,1,0)
^8994.021^1^1^3070621^^
"KRN",8994,123539,2,1,1,1,0)
Patient IEN (DFN).
"KRN",8994,123539,2,2,0)
RAMLC^1^^1^2
"KRN",8994,123539,2,2,1,0)
^8994.021^1^1^3070621^^
"KRN",8994,123539,2,2,1,1,0)
IEN of the imaging location in the IMAGING LOCATIONS file (#79.1).
"KRN",8994,123539,2,3,0)
RAPROC^1^^1^3
"KRN",8994,123539,2,3,1,0)
^8994.021^5^5^3070621^^
"KRN",8994,123539,2,3,1,1,0)
Radiology procedure and optional modifiers
"KRN",8994,123539,2,3,1,2,0)
  ^01: Procedure IEN in the RAD/NUC MED PROCEDURES file (#71)
"KRN",8994,123539,2,3,1,3,0)
  ^02: Optional procedure modifiers (IENs in
"KRN",8994,123539,2,3,1,4,0)
  ...  the PROCEDURE MODIFIERS file (#71.2))
"KRN",8994,123539,2,3,1,5,0)
  ^nn:
"KRN",8994,123539,2,4,0)
REQDTE^1^^1^4
"KRN",8994,123539,2,4,1,0)
^^2^2^3080116^
"KRN",8994,123539,2,4,1,1,0)
Desired date for the exam in HL7 format (TS): YYYYMMDD. If time is 
"KRN",8994,123539,2,4,1,2,0)
provided, it is ignored. The date must be exact.
"KRN",8994,123539,2,5,0)
RACAT^1^^1^5
"KRN",8994,123539,2,5,1,0)
^^2^2^3080222^
"KRN",8994,123539,2,5,1,1,0)
Exam category: internal value of the CATEGORY OF EXAM field (4) of the 
"KRN",8994,123539,2,5,1,2,0)
RAD/NUC MED ORDERS file (#75.1).
"KRN",8994,123539,2,6,0)
REQLOC^1^^1^6
"KRN",8994,123539,2,6,1,0)
^^1^1^3070515^
"KRN",8994,123539,2,6,1,1,0)
IEN of the requesting location in the HOSPITAL LOCATION file (#44).
"KRN",8994,123539,2,7,0)
REQPHYS^1^^1^7
"KRN",8994,123539,2,7,1,0)
^^1^1^3070515^
"KRN",8994,123539,2,7,1,1,0)
IEN of the requesting physician in the NEW PERSON file (#200).
"KRN",8994,123539,2,8,0)
REASON^1^^1^8
"KRN",8994,123539,2,8,1,0)
^8994.021^2^2^3070621^^
"KRN",8994,123539,2,8,1,1,0)
Reason for study. See the REASON FOR STUDY field (1.1) of the RAD/NUC MED 
"KRN",8994,123539,2,8,1,2,0)
ORDERS file (#75.1) for details.
"KRN",8994,123539,2,9,0)
RAMSC^2^^^9
"KRN",8994,123539,2,9,1,0)
^8994.021^54^54^3110519^^
"KRN",8994,123539,2,9,1,1,0)
Items of this list define miscellaneous/optional order parameters. Each
"KRN",8994,123539,2,9,1,2,0)
record has 3 or more pieces separated by '^':
"KRN",8994,123539,2,9,1,3,0)
 
"KRN",8994,123539,2,9,1,4,0)
  ^01: Parameter name
"KRN",8994,123539,2,9,1,5,0)
  ^02: Index (for multiples and word-processing values)
"KRN",8994,123539,2,9,1,6,0)
  ^03: Value1
"KRN",8994,123539,2,9,1,7,0)
  ^04: Value2
"KRN",8994,123539,2,9,1,8,0)
  ...
"KRN",8994,123539,2,9,1,9,0)
 
"KRN",8994,123539,2,9,1,10,0)
The following parameters are supported by this remote procedure:
"KRN",8994,123539,2,9,1,11,0)
  
"KRN",8994,123539,2,9,1,12,0)
  CLINHIST^{Seq#}^{Line of clinical history}
"KRN",8994,123539,2,9,1,13,0)
    Text for the CLINICAL HISTORY FOR EXAM field (400)
"KRN",8994,123539,2,9,1,14,0)
    of the file #75.1
"KRN",8994,123539,2,9,1,15,0)
 
"KRN",8994,123539,2,9,1,16,0)
  ISOLPROC^^{n|y}
"KRN",8994,123539,2,9,1,17,0)
    Value for the ISOLATION PROCEDURES field (24)
"KRN",8994,123539,2,9,1,18,0)
    of the file #75.1
"KRN",8994,123539,2,9,1,19,0)
 
"KRN",8994,123539,2,9,1,20,0)
  PREGNANT^^{n|u|y}
"KRN",8994,123539,2,9,1,21,0)
    Value for the PREGNANT field (13) of the file #75.1
"KRN",8994,123539,2,9,1,22,0)
 
"KRN",8994,123539,2,9,1,23,0)
  PREOPDT^^{Internal date value}
"KRN",8994,123539,2,9,1,24,0)
    Date and time for the PRE-OP SCHEDULED DATE/TIME
"KRN",8994,123539,2,9,1,25,0)
    field (12) of the file #75.1 in HL7 format (TS):
"KRN",8994,123539,2,9,1,26,0)
    YYYYMMDD[HHMM[+/-ZZZZ]]. If seconds are provided,
"KRN",8994,123539,2,9,1,27,0)
    they are ignored. The date must be exact.
"KRN",8994,123539,2,9,1,28,0)
 
"KRN",8994,123539,2,9,1,29,0)
  REQNATURE^^{e|i|p|s|v|w}
"KRN",8994,123539,2,9,1,30,0)
    Value for the NATURE OF (NEW) ORDER ACTIVITY field (26)
"KRN",8994,123539,2,9,1,31,0)
    of the file #75.1
"KRN",8994,123539,2,9,1,32,0)
 
"KRN",8994,123539,2,9,1,33,0)
  REQURG^^{1|2|9}
"KRN",8994,123539,2,9,1,34,0)
    Value for the REQUEST URGENCY field (6)
"KRN",8994,123539,2,9,1,35,0)
    of the file #75.1
"KRN",8994,123539,2,9,1,36,0)
 
"KRN",8994,123539,2,9,1,37,0)
  TRANSPMODE^^{a|p|s|w}
"KRN",8994,123539,2,9,1,38,0)
    Value for the MODE OF TRANSPORT field (19)
"KRN",8994,123539,2,9,1,39,0)
    of the file #75.1
"KRN",8994,123539,2,9,1,40,0)
 
"KRN",8994,123539,2,9,1,41,0)
Records can be added to the list in any order. See the comments preceding
"KRN",8994,123539,2,9,1,42,0)
the $$ORDER^RAMAG02 for more details.
"KRN",8994,123539,2,9,1,43,0)
 
"KRN",8994,123539,2,9,1,44,0)
Example:
"KRN",8994,123539,2,9,1,45,0)
 
"KRN",8994,123539,2,9,1,46,0)
  with RPCBroker.Param[8] do
"KRN",8994,123539,2,9,1,47,0)
    begin
"KRN",8994,123539,2,9,1,48,0)
      PType := list;
"KRN",8994,123539,2,9,1,49,0)
      Mult[1] := 'PREGNANT^^y';
"KRN",8994,123539,2,9,1,50,0)
      Mult[2] := 'PREOPDT^^200001041400';
"KRN",8994,123539,2,9,1,51,0)
      Mult[3] := 'CLINHIST^1^Clinical history line #1';
"KRN",8994,123539,2,9,1,52,0)
      Mult[4] := 'CLINHIST^2^Clinical history line #2';
"KRN",8994,123539,2,9,1,53,0)
      Mult[5] := 'CLINHIST^3^Clinical history line #3';
"KRN",8994,123539,2,9,1,54,0)
    end;
"KRN",8994,123539,2,"B","RACAT",5)

"KRN",8994,123539,2,"B","RADFN",1)

"KRN",8994,123539,2,"B","RAMLC",2)

"KRN",8994,123539,2,"B","RAMSC",9)

"KRN",8994,123539,2,"B","RAPROC",3)

"KRN",8994,123539,2,"B","REASON",8)

"KRN",8994,123539,2,"B","REQDTE",4)

"KRN",8994,123539,2,"B","REQLOC",6)

"KRN",8994,123539,2,"B","REQPHYS",7)

"KRN",8994,123539,2,"PARAMSEQ",1,1)

"KRN",8994,123539,2,"PARAMSEQ",2,2)

"KRN",8994,123539,2,"PARAMSEQ",3,3)

"KRN",8994,123539,2,"PARAMSEQ",4,4)

"KRN",8994,123539,2,"PARAMSEQ",5,5)

"KRN",8994,123539,2,"PARAMSEQ",6,6)

"KRN",8994,123539,2,"PARAMSEQ",7,7)

"KRN",8994,123539,2,"PARAMSEQ",8,8)

"KRN",8994,123539,2,"PARAMSEQ",9,9)

"KRN",8994,123539,3,0)
^8994.03^24^24^3110519^^^
"KRN",8994,123539,3,1,0)
A negative value of the first '^'-piece of the Results[0] indicates that
"KRN",8994,123539,3,2,0)
an error occurred during the execution of the remote procedure. In this
"KRN",8994,123539,3,3,0)
case, the second piece of the Results[0] will contain number of the error
"KRN",8994,123539,3,4,0)
descriptors returned in the subsequent nodes of the Results array.
"KRN",8994,123539,3,5,0)
 
"KRN",8994,123539,3,6,0)
  Results[0]            Result descriptor
"KRN",8994,123539,3,7,0)
                          ^01: The last error code
"KRN",8994,123539,3,8,0)
                          ^02: Number of error descriptors
"KRN",8994,123539,3,9,0)
  
"KRN",8994,123539,3,10,0)
  Results[i]            Error descriptor
"KRN",8994,123539,3,11,0)
                          ^01: Error code
"KRN",8994,123539,3,12,0)
                          ^02: Message
"KRN",8994,123539,3,13,0)
                          ^03: Error location
"KRN",8994,123539,3,14,0)
                          ^04: Error type
"KRN",8994,123539,3,15,0)
  
"KRN",8994,123539,3,16,0)
  Results[j]            Line of the additional info
"KRN",8994,123539,3,17,0)
                          ^01: "" (empty)
"KRN",8994,123539,3,18,0)
                          ^02: Text
"KRN",8994,123539,3,19,0)
 
"KRN",8994,123539,3,20,0)
Error descriptors are returned in reverse chronological order (most recent
"KRN",8994,123539,3,21,0)
first).
"KRN",8994,123539,3,22,0)
 
"KRN",8994,123539,3,23,0)
Otherwise, the Results[0] contains IEN of the new order in the RAD/NUC MED
"KRN",8994,123539,3,24,0)
ORDERS file (#75.1).
"KRN",8994,123540,-1)
0^65
"KRN",8994,123540,0)
MAGV RAD EXAM REGISTER^XMREGSTR^MAGVIM05^2^R^^^1
"KRN",8994,123540,1,0)
^8994.01^4^4^3110519^^^^
"KRN",8994,123540,1,1,0)
Wraps a call to the RAMAG EXAM REGISTER remote procedure, and re-formats
"KRN",8994,123540,1,2,0)
the output for the DICOM Importer II application. Returns the IEN of
"KRN",8994,123540,1,3,0)
the new case in the RAD/NUC MED PATIENT file (#70), or an array
"KRN",8994,123540,1,4,0)
of error messages.
"KRN",8994,123540,2,0)
^8994.02A^3^3
"KRN",8994,123540,2,1,0)
RAOIFN^1^^1^1
"KRN",8994,123540,2,1,1,0)
^8994.021^1^1^3070621^^
"KRN",8994,123540,2,1,1,1,0)
IEN of the order in the RAD/NUC MED ORDERS file (#75.1).
"KRN",8994,123540,2,2,0)
EXMDTE^1^^1^2
"KRN",8994,123540,2,2,1,0)
^^3^3^3090224^
"KRN",8994,123540,2,2,1,1,0)
Date and time of the exam in HL7 format (TS): YYYYMMDDHHMM[+/-ZZZZ]. If 
"KRN",8994,123540,2,2,1,2,0)
seconds are provided, they are ignored. The date must be exact and the 
"KRN",8994,123540,2,2,1,3,0)
time is required.
"KRN",8994,123540,2,3,0)
RAMSC^2^^^3
"KRN",8994,123540,2,3,1,0)
^8994.021^83^83^3080606^^^
"KRN",8994,123540,2,3,1,1,0)
Items of this list define miscellaneous/optional exam parameters. Each
"KRN",8994,123540,2,3,1,2,0)
record has 3 or more pieces separated by '^':
"KRN",8994,123540,2,3,1,3,0)
 
"KRN",8994,123540,2,3,1,4,0)
  ^01: Parameter name
"KRN",8994,123540,2,3,1,5,0)
  ^02: Index (for multiples and word-processing values)
"KRN",8994,123540,2,3,1,6,0)
  ^03: Value1
"KRN",8994,123540,2,3,1,7,0)
  ^04: Value2
"KRN",8994,123540,2,3,1,8,0)
  ...
"KRN",8994,123540,2,3,1,9,0)
 
"KRN",8994,123540,2,3,1,10,0)
The following parameters are supported by this remote procedure:
"KRN",8994,123540,2,3,1,11,0)
 
"KRN",8994,123540,2,3,1,12,0)
  BEDSECT^^{IEN #42.4}
"KRN",8994,123540,2,3,1,13,0)
    Internal value for the BEDSECTION field (19) of
"KRN",8994,123540,2,3,1,14,0)
    the EXAMINATIONS multiple (sub-file #70.03).
"KRN",8994,123540,2,3,1,15,0)
 
"KRN",8994,123540,2,3,1,16,0)
  EXAMCAT^^{C|E|I|O|R|S}
"KRN",8994,123540,2,3,1,17,0)
    Value for the CATEGORY OF EXAM field (4) of the
"KRN",8994,123540,2,3,1,18,0)
    EXAMINATIONS multiple (sub-file #70.03).
"KRN",8994,123540,2,3,1,19,0)
 
"KRN",8994,123540,2,3,1,20,0)
  FLAGS^^{flags}
"KRN",8994,123540,2,3,1,21,0)
    Flags that control the execution (can be combined):
"KRN",8994,123540,2,3,1,22,0)
 
"KRN",8994,123540,2,3,1,23,0)
    A  If this flag is provided, then the registration 
"KRN",8994,123540,2,3,1,24,0)
       entry point adds the new case to the existing
"KRN",8994,123540,2,3,1,25,0)
       ones with the same date/time instead of 
"KRN",8994,123540,2,3,1,26,0)
       returning the error code -28.
"KRN",8994,123540,2,3,1,27,0)
 
"KRN",8994,123540,2,3,1,28,0)
       If the existing date/time record stores an exam 
"KRN",8994,123540,2,3,1,29,0)
       set and the "D" flag is not provided, then the
"KRN",8994,123540,2,3,1,30,0)
       error code -54 is returned.
"KRN",8994,123540,2,3,1,31,0)
 
"KRN",8994,123540,2,3,1,32,0)
    D  If there is an existing case with the same 
"KRN",8994,123540,2,3,1,33,0)
       date/time, then the time of the new case is
"KRN",8994,123540,2,3,1,34,0)
       incremented by 1 minute until an unused date/time
"KRN",8994,123540,2,3,1,35,0)
       is found.
"KRN",8994,123540,2,3,1,36,0)
 
"KRN",8994,123540,2,3,1,37,0)
       If the "A" flag is also provided, then time 
"KRN",8994,123540,2,3,1,38,0)
       increments also stop when a non-examset
"KRN",8994,123540,2,3,1,39,0)
       date/time record is found.
"KRN",8994,123540,2,3,1,40,0)
 
"KRN",8994,123540,2,3,1,41,0)
       If the date is also changed during the time 
"KRN",8994,123540,2,3,1,42,0)
       modification, then the case is not registered and
"KRN",8994,123540,2,3,1,43,0)
       the error code -29 is returned.
"KRN",8994,123540,2,3,1,44,0)
 
"KRN",8994,123540,2,3,1,45,0)
  PRINCLIN^^{IEN #44}
"KRN",8994,123540,2,3,1,46,0)
    Internal value for the PRINCIPAL CLINIC field (8) of
"KRN",8994,123540,2,3,1,47,0)
    the EXAMINATIONS multiple (sub-file #70.03).
"KRN",8994,123540,2,3,1,48,0)
 
"KRN",8994,123540,2,3,1,49,0)
  RAPROC^{Seq#}^{IEN #71}^{IEN #71.2}^{IEN #71.2}^...
"KRN",8994,123540,2,3,1,50,0)
    Radiology procedure and optional modifiers.
"KRN",8994,123540,2,3,1,51,0)
 
"KRN",8994,123540,2,3,1,52,0)
  SERVICE^^{IEN #49}
"KRN",8994,123540,2,3,1,53,0)
    Internal value for the SERVICE field (7) of
"KRN",8994,123540,2,3,1,54,0)
    the EXAMINATIONS multiple (sub-file #70.03).
"KRN",8994,123540,2,3,1,55,0)
 
"KRN",8994,123540,2,3,1,56,0)
  SINGLERPT^^{0|1}
"KRN",8994,123540,2,3,1,57,0)
    If this parameter is defined and not 0, then all
"KRN",8994,123540,2,3,1,58,0)
    cases should be associated with the same order
"KRN",8994,123540,2,3,1,59,0)
    and they will share the same report. See the
"KRN",8994,123540,2,3,1,60,0)
    MEMBER OF SET (25) and IMAGING ORDER (11) fields
"KRN",8994,123540,2,3,1,61,0)
    of the sub-file #70.03 for more details.
"KRN",8994,123540,2,3,1,62,0)
 
"KRN",8994,123540,2,3,1,63,0)
  TECHCOMM^^{text}
"KRN",8994,123540,2,3,1,64,0)
    Value for the TECHNOLOGIST COMMENT field (4) of the
"KRN",8994,123540,2,3,1,65,0)
    ACTIVITY LOG multiple (sub-file #70.07). 
"KRN",8994,123540,2,3,1,66,0)
 
"KRN",8994,123540,2,3,1,67,0)
  WARD^^{IEN #42}
"KRN",8994,123540,2,3,1,68,0)
    Internal value for the WARD field (6) of
"KRN",8994,123540,2,3,1,69,0)
    the EXAMINATIONS multiple (sub-file #70.03).
"KRN",8994,123540,2,3,1,70,0)
 
"KRN",8994,123540,2,3,1,71,0)
Records can be added to the list in any order. See the comments preceding
"KRN",8994,123540,2,3,1,72,0)
the $$REGISTER^RAMAG03 for more details.
"KRN",8994,123540,2,3,1,73,0)
 
"KRN",8994,123540,2,3,1,74,0)
Example:
"KRN",8994,123540,2,3,1,75,0)
 
"KRN",8994,123540,2,3,1,76,0)
  with RPCBroker.Param[2] do
"KRN",8994,123540,2,3,1,77,0)
    begin
"KRN",8994,123540,2,3,1,78,0)
      PType := list;
"KRN",8994,123540,2,3,1,79,0)
      Mult[1] := 'BEDSECT^^12';
"KRN",8994,123540,2,3,1,80,0)
      Mult[2] := 'SERVICE^^43';
"KRN",8994,123540,2,3,1,81,0)
      Mult[3] := 'WARD^^456';
"KRN",8994,123540,2,3,1,82,0)
      Mult[4] := 'EXAMCAT^^I';
"KRN",8994,123540,2,3,1,83,0)
    end;
"KRN",8994,123540,2,"B","EXMDTE",2)

"KRN",8994,123540,2,"B","RAMSC",3)

"KRN",8994,123540,2,"B","RAOIFN",1)

"KRN",8994,123540,2,"PARAMSEQ",1,1)

"KRN",8994,123540,2,"PARAMSEQ",2,2)

"KRN",8994,123540,2,"PARAMSEQ",3,3)

"KRN",8994,123540,3,0)
^8994.03^39^39^3090224^^
"KRN",8994,123540,3,1,0)
A negative value of the first '^'-piece of the Results[0] indicates that
"KRN",8994,123540,3,2,0)
an error occurred during the execution of the remote procedure. In this
"KRN",8994,123540,3,3,0)
case, the second piece of the Results[0] will contain number of the error
"KRN",8994,123540,3,4,0)
descriptors returned in the subsequent nodes of the Results array.
"KRN",8994,123540,3,5,0)
 
"KRN",8994,123540,3,6,0)
  Results[0]            Result descriptor
"KRN",8994,123540,3,7,0)
                          ^01: The last error code
"KRN",8994,123540,3,8,0)
                          ^02: Number of error descriptors
"KRN",8994,123540,3,9,0)
  
"KRN",8994,123540,3,10,0)
  Results[i]            Error descriptor
"KRN",8994,123540,3,11,0)
                          ^01: Error code
"KRN",8994,123540,3,12,0)
                          ^02: Message
"KRN",8994,123540,3,13,0)
                          ^03: Error location
"KRN",8994,123540,3,14,0)
                          ^04: Error type
"KRN",8994,123540,3,15,0)
  
"KRN",8994,123540,3,16,0)
  Results[j]            Line of the additional info
"KRN",8994,123540,3,17,0)
                          ^01: "" (empty)
"KRN",8994,123540,3,18,0)
                          ^02: Text
"KRN",8994,123540,3,19,0)
 
"KRN",8994,123540,3,20,0)
Error descriptors are returned in reverse chronological order (most recent
"KRN",8994,123540,3,21,0)
first).
"KRN",8994,123540,3,22,0)
 
"KRN",8994,123540,3,23,0)
Otherwise, number of registered examinations is returned in the Results[0]
"KRN",8994,123540,3,24,0)
and identifiers of the examinations are returned in the subsequent
"KRN",8994,123540,3,25,0)
elements of the array. 
"KRN",8994,123540,3,26,0)
 
"KRN",8994,123540,3,27,0)
  Results[0]            Number of registered examinations 
"KRN",8994,123540,3,28,0)
 
"KRN",8994,123540,3,29,0)
  Results[i]            Exam/case identifiers
"KRN",8994,123540,3,30,0)
                          ^01: IEN of the patient in the file #70
"KRN",8994,123540,3,31,0)
                          ^02: IEN in the REGISTERED EXAMS multiple
"KRN",8994,123540,3,32,0)
                          ^03: IEN in the EXAMINATIONS multiple
"KRN",8994,123540,3,33,0)
                          ^04: Case number
"KRN",8994,123540,3,34,0)
                          ^05: Accession number
"KRN",8994,123540,3,35,0)
                                SSS-MMDDYY-NNNNN  if RA*5*47 is installed;
"KRN",8994,123540,3,36,0)
                                    MMDDYY-NNNNN  otherwise.
"KRN",8994,123540,3,37,0)
                          ^06: Actual date and time of the case (value of
"KRN",8994,123540,3,38,0)
                               the EXAM DATE field) in HL7 format (TS):
"KRN",8994,123540,3,39,0)
                               YYYYMMDD[HHMM[+/-ZZZZ]]
"KRN",8994,123541,-1)
0^66
"KRN",8994,123541,0)
MAGV RAD STAT COMPLETE^XMCOMPLT^MAGVIM05^2^R
"KRN",8994,123541,1,0)
^8994.01^1^1^3110602^^^^
"KRN",8994,123541,1,1,0)
Wrap call to code underlying RPC: RAMAG EXAM COMPLETE.
"KRN",8994,123541,2,0)
^8994.02A^7^6
"KRN",8994,123541,2,1,0)
RADPT^1^^1^1
"KRN",8994,123541,2,1,1,0)
^^1^1^3110525^
"KRN",8994,123541,2,1,1,1,0)
IEN of the patient in the RAD/NUC MED PATIENT File (#70).
"KRN",8994,123541,2,2,0)
RAEXAM1^1^^1^2
"KRN",8994,123541,2,2,1,0)
^^1^1^3110525^
"KRN",8994,123541,2,2,1,1,0)
IEN in the REGISTERED EXAMS multiple (sub-file #70.02).
"KRN",8994,123541,2,3,0)
RAEXAM2^1^^1^3
"KRN",8994,123541,2,3,1,0)
^^1^1^3110525^
"KRN",8994,123541,2,3,1,1,0)
IEN in the EXAMINATIONS multiple (sub-file #70.03).
"KRN",8994,123541,2,5,0)
MAGVUSR^1^^^4
"KRN",8994,123541,2,5,1,0)
^8994.021^1^1^3110602^^
"KRN",8994,123541,2,5,1,1,0)
DUZ of the person logged into the Importer II application.
"KRN",8994,123541,2,6,0)
MAGVUSRDV^1^^1^5
"KRN",8994,123541,2,6,1,0)
^8994.021^1^1^3110602^^
"KRN",8994,123541,2,6,1,1,0)
User Logon Division of the person logged into the Importer II application.
"KRN",8994,123541,2,7,0)
RAIMTYP^1^^1^6
"KRN",8994,123541,2,7,1,0)
^8994.021^1^1^3110602^^
"KRN",8994,123541,2,7,1,1,0)
This is the radiology image type.
"KRN",8994,123541,2,"B","MAGVUSR",5)

"KRN",8994,123541,2,"B","MAGVUSRDV",6)

"KRN",8994,123541,2,"B","RADPT",1)

"KRN",8994,123541,2,"B","RAEXAM1",2)

"KRN",8994,123541,2,"B","RAEXAM2",3)

"KRN",8994,123541,2,"B","RAIMTYP",7)

"KRN",8994,123541,2,"PARAMSEQ",1,1)

"KRN",8994,123541,2,"PARAMSEQ",2,2)

"KRN",8994,123541,2,"PARAMSEQ",3,3)

"KRN",8994,123541,2,"PARAMSEQ",4,5)

"KRN",8994,123541,2,"PARAMSEQ",5,6)

"KRN",8994,123541,2,"PARAMSEQ",6,7)

"KRN",8994,123541,3,0)
^8994.03^1^1^3110602^^^
"KRN",8994,123541,3,1,0)
Returns <0 value followed by number of array error lines, or 0 if successful.
"KRN",8994,123542,-1)
0^67
"KRN",8994,123542,0)
MAGV RAD STAT EXAMINED^XMEXAMIN^MAGVIM05^2^R
"KRN",8994,123542,1,0)
^8994.01^1^1^3110601^^^^
"KRN",8994,123542,1,1,0)
Wraps calls to RAMAG EXAMINED RPC and re-formats output.
"KRN",8994,123542,2,0)
^8994.02A^7^6
"KRN",8994,123542,2,1,0)
RADPT^1^^1^1
"KRN",8994,123542,2,1,1,0)
^^1^1^3110524^
"KRN",8994,123542,2,1,1,1,0)
IEN of the Patient in the RAD/NUC MED PATIENT file (#70).
"KRN",8994,123542,2,2,0)
RAEXAM1^1^^1^2
"KRN",8994,123542,2,2,1,0)
^^1^1^3110524^
"KRN",8994,123542,2,2,1,1,0)
IEN of the REGISTERED EXAMS multiple (sub file #70.02).
"KRN",8994,123542,2,3,0)
RAEXAM2^1^^1^3
"KRN",8994,123542,2,3,1,0)
^^1^1^3110524^
"KRN",8994,123542,2,3,1,1,0)
IEN in the EXAMINATIONS multiple (sub-file #70.03).
"KRN",8994,123542,2,5,0)
MAGVUSRDV^1^^1^5
"KRN",8994,123542,2,5,1,0)
^8994.021^1^1^3110601^^^^
"KRN",8994,123542,2,5,1,1,0)
User Logon Division of the person logged into the Importer II application.
"KRN",8994,123542,2,6,0)
RAIMGTYP^1^^1^6
"KRN",8994,123542,2,6,1,0)
^8994.021^1^1^3110601^^^^
"KRN",8994,123542,2,6,1,1,0)
This is the radiology imaging type parameter
"KRN",8994,123542,2,7,0)
MAGVUSR^1^^1^4
"KRN",8994,123542,2,7,1,0)
^8994.021^1^1^3110601^^
"KRN",8994,123542,2,7,1,1,0)
DUZ of the person logged into the Importer II application.
"KRN",8994,123542,2,"B","MAGVUSR",7)

"KRN",8994,123542,2,"B","MAGVUSRDV",5)

"KRN",8994,123542,2,"B","MISC",4)

"KRN",8994,123542,2,"B","RADPT",1)

"KRN",8994,123542,2,"B","RAEXAM1",2)

"KRN",8994,123542,2,"B","RAEXAM2",3)

"KRN",8994,123542,2,"B","RAIMGTYP",6)

"KRN",8994,123542,2,"PARAMSEQ",1,1)

"KRN",8994,123542,2,"PARAMSEQ",2,2)

"KRN",8994,123542,2,"PARAMSEQ",3,3)

"KRN",8994,123542,2,"PARAMSEQ",4,7)

"KRN",8994,123542,2,"PARAMSEQ",5,5)

"KRN",8994,123542,2,"PARAMSEQ",6,6)

"KRN",8994,123542,3,0)
^8994.03^1^1^3110601^^^^
"KRN",8994,123542,3,1,0)
Returns a number <0 and a count of error lines, or 0 for success.
"KRN",8994,123543,-1)
0^68
"KRN",8994,123543,0)
MAGV SEARCH BY ATTRIBUTE^FINDBYAT^MAGVRS42^2^R^0
"KRN",8994,123543,1,0)
^^3^3^3110921^
"KRN",8994,123543,1,1,0)
This remote procedure accepts an array of one or more name-value pairs
"KRN",8994,123543,1,2,0)
of FileMan field names and exact match values, and returns a list of
"KRN",8994,123543,1,3,0)
internal entry numbers of matching entries.
"KRN",8994,123543,2,0)
^8994.02A^2^2
"KRN",8994,123543,2,1,0)
SEND^2^200^1^2
"KRN",8994,123543,2,1,1,0)
^8994.021^1^1^3110921^^
"KRN",8994,123543,2,1,1,1,0)
This is a list of name-value pairs of field names and exact match values.
"KRN",8994,123543,2,2,0)
FILE^1^15^1^1
"KRN",8994,123543,2,2,1,0)
^^2^2^3110921^
"KRN",8994,123543,2,2,1,1,0)
This is the number of the FileMan file to be searched (e.g., 2005.61 for
"KRN",8994,123543,2,2,1,2,0)
IMAGING PROCEDURE REFERENCE).
"KRN",8994,123543,2,"B","FILE",2)

"KRN",8994,123543,2,"B","SEND",1)

"KRN",8994,123543,2,"PARAMSEQ",1,2)

"KRN",8994,123543,2,"PARAMSEQ",2,1)

"KRN",8994,123543,3,0)
^^6^6^3110921^
"KRN",8994,123543,3,1,0)
An array is returned whose entries are delimited by backtick (`) and
"KRN",8994,123543,3,2,0)
formatted as follows:
"KRN",8994,123543,3,3,0)
p1: < 0 if an exception raised
"KRN",8994,123543,3,4,0)
    = 0 if processing completed successfully
"KRN",8994,123543,3,5,0)
p2: descriptive exception text
"KRN",8994,123543,3,6,0)
p3: internal entry number of matching entry
"KRN",8994,123544,-1)
0^69
"KRN",8994,123544,0)
MAGV SERIES UID CHECK^SERIES^MAGVUID^1^R^0^^^^^1
"KRN",8994,123544,1,0)
^8994.01^1^1^3100817^^^^
"KRN",8994,123544,1,1,0)
SERIES UID CHECKING
"KRN",8994,123544,2,0)
^8994.02A^6^6
"KRN",8994,123544,2,1,0)
DFN^1^10^1^1
"KRN",8994,123544,2,1,1,0)
^8994.021^2^2^3100817^^^
"KRN",8994,123544,2,1,1,1,0)
IEN of the patient's record in the NEW PERSON File (#200).
"KRN",8994,123544,2,1,1,2,0)
The IEN is obtained from the image's DICOM header.
"KRN",8994,123544,2,2,0)
ACNUMB^1^20^1^2
"KRN",8994,123544,2,2,1,0)
^8994.021^6^6^3100816^^
"KRN",8994,123544,2,2,1,1,0)
ACCESSION NUMBER (LONG FORM)
"KRN",8994,123544,2,2,1,2,0)
  DATE-SITE LOCATION
"KRN",8994,123544,2,2,1,3,0)
  The date is in VA format, and the site location code is the site number.
"KRN",8994,123544,2,2,1,4,0)
  The two components are concatenated with a hyphen (-).
"KRN",8994,123544,2,2,1,5,0)
  This component comes from image's DICOM header by way of the
"KRN",8994,123544,2,2,1,6,0)
  Modality Worklist entry for the associated study.
"KRN",8994,123544,2,3,0)
SITE^1^5^1^3
"KRN",8994,123544,2,3,1,0)
^8994.021^1^1^3091121^^
"KRN",8994,123544,2,3,1,1,0)
SITE CODE
"KRN",8994,123544,2,4,0)
INSTR^1^30^1^4
"KRN",8994,123544,2,4,1,0)
^8994.021^1^1^3100816^^
"KRN",8994,123544,2,4,1,1,0)
INSTRUMENT NAME
"KRN",8994,123544,2,5,0)
STUDYUID^1^64^1^5
"KRN",8994,123544,2,5,1,0)
^8994.021^1^1^3100816^^^
"KRN",8994,123544,2,5,1,1,0)
STUDY UID
"KRN",8994,123544,2,6,0)
SERIESUID^1^64^1^6
"KRN",8994,123544,2,6,1,0)
^8994.021^1^1^3100816^^^^
"KRN",8994,123544,2,6,1,1,0)
SERIES UID
"KRN",8994,123544,2,"B","ACNUMB",2)

"KRN",8994,123544,2,"B","DFN",1)

"KRN",8994,123544,2,"B","INSTR",4)

"KRN",8994,123544,2,"B","SERIESUID",6)

"KRN",8994,123544,2,"B","SITE",3)

"KRN",8994,123544,2,"B","STUDYUID",5)

"KRN",8994,123544,2,"PARAMSEQ",1,1)

"KRN",8994,123544,2,"PARAMSEQ",2,2)

"KRN",8994,123544,2,"PARAMSEQ",3,3)

"KRN",8994,123544,2,"PARAMSEQ",4,4)

"KRN",8994,123544,2,"PARAMSEQ",5,5)

"KRN",8994,123544,2,"PARAMSEQ",6,6)

"KRN",8994,123544,3,0)
^8994.03^6^6^3100817^^^^
"KRN",8994,123544,3,1,0)
REPLACEMENT UID OR CODE
"KRN",8994,123544,3,2,0)
  0~DATA OK = Success (Series UID is not a duplicate).
"KRN",8994,123544,3,3,0)
  1~LogUIDToUse~"_UID
"KRN",8994,123544,3,4,0)
  3~Illegal UID Replacement~NEWUID
"KRN",8994,123544,3,5,0)
  1~NewUIDToUse~NEWUID
"KRN",8994,123544,3,6,0)
  -1 (Error Condition)
"KRN",8994,123545,-1)
0^70
"KRN",8994,123545,0)
MAGV SET DGW CONFIG^SETGWCFG^MAGVDGWP^1^R
"KRN",8994,123545,1,0)
^8994.01^2^2^3100816^^^
"KRN",8994,123545,1,1,0)
Set DGW configuration settings in the MAGV GATEWAY CONFIGURATION
"KRN",8994,123545,1,2,0)
File (#2006.9191).
"KRN",8994,123545,2,0)
^8994.02A^6^6
"KRN",8994,123545,2,1,0)
HOSTNAME^1^30^^1
"KRN",8994,123545,2,1,1,0)
^8994.021^1^1^3100816^^^
"KRN",8994,123545,2,1,1,1,0)
NAME OF DICOM GATEWAY
"KRN",8994,123545,2,2,0)
MAILGROUP^1^^^2
"KRN",8994,123545,2,2,1,0)
^8994.021^1^1^3100816^^
"KRN",8994,123545,2,2,1,1,0)
EMAIL ADDRESSEE
"KRN",8994,123545,2,3,0)
POSTOFFICE^1^30^^3
"KRN",8994,123545,2,3,1,0)
^8994.021^1^1^3100816^^
"KRN",8994,123545,2,3,1,1,0)
POST OFFICE SERVER
"KRN",8994,123545,2,4,0)
POSTPORT^1^5^^4
"KRN",8994,123545,2,4,1,0)
^^1^1^3100403^
"KRN",8994,123545,2,4,1,1,0)
POST OFFICE EMAIL PORT
"KRN",8994,123545,2,5,0)
IMPORTER^1^3^^5
"KRN",8994,123545,2,5,1,0)
^8994.021^2^2^3100816^^^^
"KRN",8994,123545,2,5,1,1,0)
Indicator to determine if DGW is using the IMPORTER.
"KRN",8994,123545,2,5,1,2,0)
Contents are YES or NO.
"KRN",8994,123545,2,6,0)
LOCATION^1^8^^6
"KRN",8994,123545,2,6,1,0)
^8994.021^2^2^3100816^^^^
"KRN",8994,123545,2,6,1,1,0)
DICOM GATEWAY LOCATION CODE
"KRN",8994,123545,2,6,1,2,0)
(Site Location/Station number)
"KRN",8994,123545,2,"B","HOSTNAME",1)

"KRN",8994,123545,2,"B","IMPORTER",5)

"KRN",8994,123545,2,"B","LOCATION",6)

"KRN",8994,123545,2,"B","MAILGROUP",2)

"KRN",8994,123545,2,"B","POSTOFFICE",3)

"KRN",8994,123545,2,"B","POSTPORT",4)

"KRN",8994,123545,2,"PARAMSEQ",1,1)

"KRN",8994,123545,2,"PARAMSEQ",2,2)

"KRN",8994,123545,2,"PARAMSEQ",3,3)

"KRN",8994,123545,2,"PARAMSEQ",4,4)

"KRN",8994,123545,2,"PARAMSEQ",5,5)

"KRN",8994,123545,2,"PARAMSEQ",6,6)

"KRN",8994,123545,3,0)
^8994.03^3^3^3100816^^^^
"KRN",8994,123545,3,1,0)
SUCCESS OR ERROR CONDITION
"KRN",8994,123545,3,2,0)
  0 = Success
"KRN",8994,123545,3,3,0)
 -1 = Failure (error)
"KRN",8994,123546,-1)
0^71
"KRN",8994,123546,0)
MAGV SET DICOM FAILED IMAGE^DCRCTSET^MAGVRS51^2^R
"KRN",8994,123546,1,0)
^8994.01^1^1^3120203^^^^
"KRN",8994,123546,1,1,0)
This routine creates entries in the DICOM FAILED IMAGES file (#2006.575).
"KRN",8994,123546,2,0)
^8994.02A^1^1
"KRN",8994,123546,2,1,0)
ATTS^2^^^1
"KRN",8994,123546,2,1,1,0)
^8994.021^9^9^3120203^^^^
"KRN",8994,123546,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123546,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123546,2,1,1,3,0)
argument to entry point DCRCTSET^MAGVRS51.  The first argument will
"KRN",8994,123546,2,1,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123546,2,1,1,5,0)
reference.
"KRN",8994,123546,2,1,1,6,0)
 
"KRN",8994,123546,2,1,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123546,2,1,1,8,0)
<fname> is a field name in the DICOM FAILED IMAGES File (#2006.575) 
"KRN",8994,123546,2,1,1,9,0)
and <value> is the value to which that field should be set.
"KRN",8994,123546,2,"B","ATTS",1)

"KRN",8994,123546,2,"PARAMSEQ",1,1)

"KRN",8994,123546,3,0)
^8994.03^4^4^3120203^^^
"KRN",8994,123546,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123546,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123546,3,3,0)
success; all others indicate failure, as described in TEXT, and no IEN
"KRN",8994,123546,3,4,0)
will be assigned.
"KRN",8994,123547,-1)
0^72
"KRN",8994,123547,0)
MAGV SOP UID CHECK^SOP^MAGVUID^1^R^0^^^^^1
"KRN",8994,123547,1,0)
^8994.01^1^1^3100816^^^^
"KRN",8994,123547,1,1,0)
SOP UID CHECK
"KRN",8994,123547,2,0)
^8994.02A^7^7
"KRN",8994,123547,2,1,0)
DFN^1^10^1^1
"KRN",8994,123547,2,1,1,0)
^8994.021^2^2^3100816^^
"KRN",8994,123547,2,1,1,1,0)
 IEN of the patient's record in the NEW PERSON File (#200).
"KRN",8994,123547,2,1,1,2,0)
 It is obtained from the image's DICOM header.
"KRN",8994,123547,2,2,0)
ACNUMB^1^20^1^2
"KRN",8994,123547,2,2,1,0)
^8994.021^6^6^3100816^^
"KRN",8994,123547,2,2,1,1,0)
ACCESSION NUMBER (LONG FORM)
"KRN",8994,123547,2,2,1,2,0)
 DATE-SITE LOCATION
"KRN",8994,123547,2,2,1,3,0)
 The date is in VA format, and the site location code is the site number.
"KRN",8994,123547,2,2,1,4,0)
 The two components are concatenated with a hyphen (-).
"KRN",8994,123547,2,2,1,5,0)
 This component comes from image's DICOM header by way of the
"KRN",8994,123547,2,2,1,6,0)
 Modality Worklist entry for the associated study.
"KRN",8994,123547,2,3,0)
SITE^1^5^1^3
"KRN",8994,123547,2,3,1,0)
^^1^1^3091121^
"KRN",8994,123547,2,3,1,1,0)
SITE CODE (660)
"KRN",8994,123547,2,4,0)
INSTR^1^30^1^4
"KRN",8994,123547,2,4,1,0)
^^1^1^3091121^
"KRN",8994,123547,2,4,1,1,0)
INSTRUMENT NAME
"KRN",8994,123547,2,5,0)
STUDYUID^1^64^1^5
"KRN",8994,123547,2,5,1,0)
^8994.021^1^1^3100816^^
"KRN",8994,123547,2,5,1,1,0)
STUDY UID
"KRN",8994,123547,2,6,0)
SERIESUID^1^64^1^6
"KRN",8994,123547,2,6,1,0)
^8994.021^1^1^3100816^^
"KRN",8994,123547,2,6,1,1,0)
SERIES UID
"KRN",8994,123547,2,7,0)
SOPUID^1^64^1^7
"KRN",8994,123547,2,7,1,0)
^8994.021^1^1^3100816^^^^
"KRN",8994,123547,2,7,1,1,0)
SOP UID
"KRN",8994,123547,2,"B","ACNUMB",2)

"KRN",8994,123547,2,"B","DFN",1)

"KRN",8994,123547,2,"B","INSTR",4)

"KRN",8994,123547,2,"B","SERIESUID",6)

"KRN",8994,123547,2,"B","SITE",3)

"KRN",8994,123547,2,"B","SOPUID",7)

"KRN",8994,123547,2,"B","STUDYUID",5)

"KRN",8994,123547,2,"PARAMSEQ",1,1)

"KRN",8994,123547,2,"PARAMSEQ",2,2)

"KRN",8994,123547,2,"PARAMSEQ",3,3)

"KRN",8994,123547,2,"PARAMSEQ",4,4)

"KRN",8994,123547,2,"PARAMSEQ",5,5)

"KRN",8994,123547,2,"PARAMSEQ",6,6)

"KRN",8994,123547,2,"PARAMSEQ",7,7)

"KRN",8994,123547,3,0)
^8994.03^7^7^3100816^^^^
"KRN",8994,123547,3,1,0)
REPLACEMENT UID OR CODE
"KRN",8994,123547,3,2,0)
 0~DATA OK = Success (Series UID is not a duplicate).
"KRN",8994,123547,3,3,0)
 1~LogUIDToUse~"_UID
"KRN",8994,123547,3,4,0)
 3~Illegal UID Replacement~NEWUID
"KRN",8994,123547,3,5,0)
 1~NewUIDToUse~NEWUID
"KRN",8994,123547,3,6,0)
 2~RESEND
"KRN",8994,123547,3,7,0)
 -1 (Error Condition)
"KRN",8994,123548,-1)
0^73
"KRN",8994,123548,0)
MAGV STUDY LOOKUP^LOOKUP^MAGVSTDY^1^R^0^^^^^1
"KRN",8994,123548,1,0)
^8994.01^18^18^3130405^^
"KRN",8994,123548,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123548,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123548,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123548,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123548,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123548,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123548,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123548,1,8,0)
 |                                                               |
"KRN",8994,123548,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123548,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123548,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123548,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123548,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123548,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123548,1,15,0)
 
"KRN",8994,123548,1,16,0)
Looks up the imaging case using the accession number provided by the
"KRN",8994,123548,1,17,0)
calling application.   Obtains patient demographic data, and checks
"KRN",8994,123548,1,18,0)
the data for accuracy. (MAG*3.0*118)
"KRN",8994,123548,2,0)
^8994.02A^7^7
"KRN",8994,123548,2,1,0)
CASENUMB^1^16^1^1
"KRN",8994,123548,2,1,1,0)
^8994.021^1^1^3130405^^^^
"KRN",8994,123548,2,1,1,1,0)
CASENUMB = ACCESSION NUMBER PASSED FROM THE CLIENT.
"KRN",8994,123548,2,2,0)
IMGSVC^1^3^1^2
"KRN",8994,123548,2,2,1,0)
^8994.021^1^1^3090922^^^
"KRN",8994,123548,2,2,1,1,0)
RAD OR CON.  No other entries are allowed.
"KRN",8994,123548,2,3,0)
PNAMEDCM^1^64^1^3
"KRN",8994,123548,2,3,1,0)
^8994.021^1^1^3130405^^
"KRN",8994,123548,2,3,1,1,0)
Patient's Name from the DICOM header (0010,0010).
"KRN",8994,123548,2,4,0)
PIDDCM^1^64^1^4
"KRN",8994,123548,2,4,1,0)
^8994.021^1^1^3130405^^
"KRN",8994,123548,2,4,1,1,0)
Patient ID from DICOM header (0010,0020).
"KRN",8994,123548,2,5,0)
PDOBDCM^1^8^1^5
"KRN",8994,123548,2,5,1,0)
^8994.021^1^1^3130405^^
"KRN",8994,123548,2,5,1,1,0)
Patient's Birth Date from DICOM header (0010,0030).
"KRN",8994,123548,2,6,0)
PSEXDCM^1^1^1^6
"KRN",8994,123548,2,6,1,0)
^8994.021^1^1^3130405^^
"KRN",8994,123548,2,6,1,1,0)
Patient's Sex from DICOM header (0010,0040).
"KRN",8994,123548,2,7,0)
PICNDCM^1^16^0^7
"KRN",8994,123548,2,7,1,0)
^8994.021^1^1^3130405^^^^
"KRN",8994,123548,2,7,1,1,0)
Patient's VA Integration Control Number.
"KRN",8994,123548,2,"B","CASENUMB",1)

"KRN",8994,123548,2,"B","IMGSVC",2)

"KRN",8994,123548,2,"B","PDOBDCM",5)

"KRN",8994,123548,2,"B","PICNDCM",7)

"KRN",8994,123548,2,"B","PIDDCM",4)

"KRN",8994,123548,2,"B","PNAMEDCM",3)

"KRN",8994,123548,2,"B","PSEXDCM",6)

"KRN",8994,123548,2,"PARAMSEQ",1,1)

"KRN",8994,123548,2,"PARAMSEQ",2,2)

"KRN",8994,123548,2,"PARAMSEQ",3,3)

"KRN",8994,123548,2,"PARAMSEQ",4,4)

"KRN",8994,123548,2,"PARAMSEQ",5,5)

"KRN",8994,123548,2,"PARAMSEQ",6,6)

"KRN",8994,123548,2,"PARAMSEQ",7,7)

"KRN",8994,123548,3,0)
^8994.03^15^15^3130405^^^^
"KRN",8994,123548,3,1,0)
           ----From MAGVORDR----  --From PIDCHECK--
"KRN",8994,123548,3,2,0)
           Error     Success      Error    Success
"KRN",8994,123548,3,3,0)
    "~"-1 -1         0
"KRN",8994,123548,3,4,0)
       -2 Errmsg1    DFN
"KRN",8994,123548,3,5,0)
       -3  ---       SITE ID
"KRN",8994,123548,3,6,0)
       -4  ---       ---------->  n<1      0
"KRN",8994,123548,3,7,0)
       -5  ---       ---------->  Errmsg2  PID OK
"KRN",8994,123548,3,8,0)
 
"KRN",8994,123548,3,9,0)
    Errmsg1____   If_________
"KRN",8994,123548,3,10,0)
    BAD CASE #      RAD & Any RADPTx is null
"KRN",8994,123548,3,11,0)
                    RAD & null Exam Status Pointer
"KRN",8994,123548,3,12,0)
                    RAD & null Exam Status
"KRN",8994,123548,3,13,0)
    NO CASE #       RAD,CON & Exam Status = CANCELLED
"KRN",8994,123548,3,14,0)
                    RAD,CON & null patient demographic file pointer
"KRN",8994,123548,3,15,0)
                    CON     & incomplete consult study
"KRN",8994,123549,-1)
0^74
"KRN",8994,123549,0)
MAGV STUDY UID CHECK^STUDY^MAGVUID^1^R^0^^^^^1
"KRN",8994,123549,1,0)
^8994.01^1^1^3100816^^^
"KRN",8994,123549,1,1,0)
Performs check for duplicate Study UIDs
"KRN",8994,123549,2,0)
^8994.02A^5^5
"KRN",8994,123549,2,1,0)
DFN^1^10^1^1
"KRN",8994,123549,2,1,1,0)
^^1^1^3100816^
"KRN",8994,123549,2,1,1,1,0)
IEN of the patient's record in the NEW PERSON File (#200).
"KRN",8994,123549,2,2,0)
ACNUMB^1^20^1^2
"KRN",8994,123549,2,2,1,0)
^8994.021^6^6^3100816^^
"KRN",8994,123549,2,2,1,1,0)
ACCESSION NUMBER (LONG FORM)
"KRN",8994,123549,2,2,1,2,0)
 DATE-SITE LOCATION
"KRN",8994,123549,2,2,1,3,0)
 The date is in VA format, and the site location code is the site number.
"KRN",8994,123549,2,2,1,4,0)
 The two components are concatenated with a hyphen (-).
"KRN",8994,123549,2,2,1,5,0)
 This component comes from image's DICOM header by way of the
"KRN",8994,123549,2,2,1,6,0)
 Modality Worklist entry for the associated study.
"KRN",8994,123549,2,3,0)
SITE^1^5^1^3
"KRN",8994,123549,2,3,1,0)
^8994.021^1^1^3100816^^
"KRN",8994,123549,2,3,1,1,0)
SITE CODE (660)
"KRN",8994,123549,2,4,0)
INSTR^1^30^1^4
"KRN",8994,123549,2,4,1,0)
^8994.021^1^1^3100816^^
"KRN",8994,123549,2,4,1,1,0)
INSTRUMENT NAME
"KRN",8994,123549,2,5,0)
STUDYUID^1^64^1^5
"KRN",8994,123549,2,5,1,0)
^8994.021^1^1^3100816^^^^
"KRN",8994,123549,2,5,1,1,0)
STUDY UID
"KRN",8994,123549,2,"B","ACNUMB",2)

"KRN",8994,123549,2,"B","DFN",1)

"KRN",8994,123549,2,"B","INSTR",4)

"KRN",8994,123549,2,"B","SITE",3)

"KRN",8994,123549,2,"B","STUDYUID",5)

"KRN",8994,123549,2,"PARAMSEQ",1,1)

"KRN",8994,123549,2,"PARAMSEQ",2,2)

"KRN",8994,123549,2,"PARAMSEQ",3,3)

"KRN",8994,123549,2,"PARAMSEQ",4,4)

"KRN",8994,123549,2,"PARAMSEQ",5,5)

"KRN",8994,123549,3,0)
^8994.03^6^6^3100816^^^^
"KRN",8994,123549,3,1,0)
REPLACEMENT UID OR CODE
"KRN",8994,123549,3,2,0)
 0~DATA OK = Success (Series UID is not a duplicate).
"KRN",8994,123549,3,3,0)
 1~LogUIDToUse~"_UID
"KRN",8994,123549,3,4,0)
 3~Illegal UID Replacement~NEWUID
"KRN",8994,123549,3,5,0)
 1~NewUIDToUse~NEWUID
"KRN",8994,123549,3,6,0)
 -1 (Error condition)
"KRN",8994,123550,-1)
0^75
"KRN",8994,123550,0)
MAGV TRAVERSE IMAGE FILE^TRAVIMG^MAGVRS09^2^R^0
"KRN",8994,123550,1,0)
^8994.01^3^3^3100806^^
"KRN",8994,123550,1,1,0)
This RPC allows the user to traverse the entries on the IMAGE INSTANCE 
"KRN",8994,123550,1,2,0)
FILE File (#2005.65) that are indexed under an entry on the IMAGE SOP 
"KRN",8994,123550,1,3,0)
INSTANCE File (#2005.64).
"KRN",8994,123550,2,0)
^8994.02A^3^3
"KRN",8994,123550,2,1,0)
IEN^1^20^1^1
"KRN",8994,123550,2,1,1,0)
^^3^3^3100806^
"KRN",8994,123550,2,1,1,1,0)
This is the internal entry number of the entry on the IMAGE SOP INSTANCE 
"KRN",8994,123550,2,1,1,2,0)
File (#2005.64) whose child entries on the IMAGE INSTANCE FILE File 
"KRN",8994,123550,2,1,1,3,0)
(#2005.65) are to be traversed.
"KRN",8994,123550,2,2,0)
DIR^1^10^1^2
"KRN",8994,123550,2,2,1,0)
^8994.021^1^1^3100806^^
"KRN",8994,123550,2,2,1,1,0)
This is the direction of traversal:  FIRST, NEXT, PREV, or LAST.
"KRN",8994,123550,2,3,0)
CHILDIEN^1^10^^3
"KRN",8994,123550,2,3,1,0)
^^3^3^3100806^
"KRN",8994,123550,2,3,1,1,0)
This is the internal entry number of the instance on the IMAGE INSTANCE
"KRN",8994,123550,2,3,1,2,0)
FILE File (#2005.65) from which to proceed.  It should be specified only
"KRN",8994,123550,2,3,1,3,0)
for the NEXT and PREV traversal commands.
"KRN",8994,123550,2,"B","CHILDIEN",3)

"KRN",8994,123550,2,"B","DIR",2)

"KRN",8994,123550,2,"B","IEN",1)

"KRN",8994,123550,2,"PARAMSEQ",1,1)

"KRN",8994,123550,2,"PARAMSEQ",2,2)

"KRN",8994,123550,2,"PARAMSEQ",3,3)

"KRN",8994,123550,3,0)
^8994.03^5^5^3100806^^^
"KRN",8994,123550,3,1,0)
The RPC returns a string in three pieces delimited by backtick (`).
"KRN",8994,123550,3,2,0)
 Piece 1 is 0 (FALSE) if there was no error, nonzero otherwise.
"KRN",8994,123550,3,3,0)
 Piece 2 is the error message if piece 1 is not FALSE.
"KRN",8994,123550,3,4,0)
 Piece 3 is the requested child IEN, or TOP or BOTTOM.  It is defined only
"KRN",8994,123550,3,5,0)
 if there was no error.
"KRN",8994,123551,-1)
0^76
"KRN",8994,123551,0)
MAGV TRAVERSE PROC REF^TRAVPROC^MAGVRS09^2^R^0
"KRN",8994,123551,1,0)
^^3^3^3100806^
"KRN",8994,123551,1,1,0)
This RPC allows the user to traverse the entries on the IMAGING PROCEDURE 
"KRN",8994,123551,1,2,0)
REFERENCE File (#2005.61) that are indexed under an entry on the IMAGING 
"KRN",8994,123551,1,3,0)
PATIENT REFERENCE File (#2005.6).
"KRN",8994,123551,2,0)
^8994.02A^4^3
"KRN",8994,123551,2,2,0)
IEN^1^20^1^1
"KRN",8994,123551,2,2,1,0)
^^3^3^3100806^
"KRN",8994,123551,2,2,1,1,0)
This is the internal entry number of the entry on the IMAGING PATIENT 
"KRN",8994,123551,2,2,1,2,0)
REFERENCE File (#2005.6) whose child entries on the IMAGING PROCEDURE 
"KRN",8994,123551,2,2,1,3,0)
REFERENCE File (#2005.61) are to be traversed.
"KRN",8994,123551,2,3,0)
DIR^1^10^1^2
"KRN",8994,123551,2,3,1,0)
^8994.021^1^1^3100324^^
"KRN",8994,123551,2,3,1,1,0)
This is the direction of traversal:  FIRST, NEXT, PREV, or LAST.
"KRN",8994,123551,2,4,0)
CHILDIEN^1^10^^3
"KRN",8994,123551,2,4,1,0)
^^3^3^3100806^
"KRN",8994,123551,2,4,1,1,0)
This is the internal entry number of the entry on the IMAGING PROCEDURE
"KRN",8994,123551,2,4,1,2,0)
REFERENCE File (#2005.61) from which to proceed.  It should be specified
"KRN",8994,123551,2,4,1,3,0)
only for the NEXT and PREV traversal commands.
"KRN",8994,123551,2,"B","CHILDIEN",4)

"KRN",8994,123551,2,"B","DIR",3)

"KRN",8994,123551,2,"B","IEN",2)

"KRN",8994,123551,2,"PARAMSEQ",1,2)

"KRN",8994,123551,2,"PARAMSEQ",2,3)

"KRN",8994,123551,2,"PARAMSEQ",3,4)

"KRN",8994,123551,3,0)
^8994.03^5^5^3100806^^^^
"KRN",8994,123551,3,1,0)
The RPC returns a string in three pieces delimited by backtick (`).
"KRN",8994,123551,3,2,0)
Piece 1 is 0 (FALSE) if there was no error, nonzero otherwise.
"KRN",8994,123551,3,3,0)
Piece 2 is the error message if piece 1 is not FALSE.
"KRN",8994,123551,3,4,0)
Piece 3 is the requested child IEN, or TOP or BOTTOM.  It is defined only 
"KRN",8994,123551,3,5,0)
if there was no error.
"KRN",8994,123552,-1)
0^77
"KRN",8994,123552,0)
MAGV TRAVERSE SERIES^TRAVSERS^MAGVRS09^2^R^0
"KRN",8994,123552,1,0)
^8994.01^3^3^3100806^^
"KRN",8994,123552,1,1,0)
This RPC allows the user to traverse the entries on the IMAGE SERIES File
"KRN",8994,123552,1,2,0)
(#2005.63) that are indexed under an entry on the IMAGE STUDY File
"KRN",8994,123552,1,3,0)
(#2005.62).
"KRN",8994,123552,2,0)
^8994.02A^3^3
"KRN",8994,123552,2,1,0)
IEN^1^20^1^1
"KRN",8994,123552,2,1,1,0)
^^3^3^3100806^
"KRN",8994,123552,2,1,1,1,0)
This is the internal entry number of the entry on the IMAGE STUDY File 
"KRN",8994,123552,2,1,1,2,0)
(#2005.62) whose child entries on the IMAGE SERIES File (#2005.63) are 
"KRN",8994,123552,2,1,1,3,0)
to be traversed.IEN
"KRN",8994,123552,2,2,0)
DIR^1^10^1^2
"KRN",8994,123552,2,2,1,0)
^^1^1^3100324^
"KRN",8994,123552,2,2,1,1,0)
This is the direction of traversal:  FIRST, NEXT, PREV, or LAST.
"KRN",8994,123552,2,3,0)
CHILDIEN^1^10^1^3
"KRN",8994,123552,2,3,1,0)
^8994.021^3^3^3100806^^
"KRN",8994,123552,2,3,1,1,0)
This is the internal entry number of the entry on the IMAGE SERIES File 
"KRN",8994,123552,2,3,1,2,0)
(#2005.63) from which to proceed.  It should be specified only for the
"KRN",8994,123552,2,3,1,3,0)
NEXT or PREV traversal commands.
"KRN",8994,123552,2,"B","CHILDIEN",3)

"KRN",8994,123552,2,"B","DIR",2)

"KRN",8994,123552,2,"B","IEN",1)

"KRN",8994,123552,2,"PARAMSEQ",1,1)

"KRN",8994,123552,2,"PARAMSEQ",2,2)

"KRN",8994,123552,2,"PARAMSEQ",3,3)

"KRN",8994,123552,3,0)
^8994.03^5^5^3100806^^
"KRN",8994,123552,3,1,0)
 The RPC returns a string in three pieces delimited by backtick (`).
"KRN",8994,123552,3,2,0)
 Piece 1 is 0 (FALSE) if there was no error, nonzero otherwise.
"KRN",8994,123552,3,3,0)
 Piece 2 is the error message if piece 1 is not FALSE.
"KRN",8994,123552,3,4,0)
 Piece 3 is the requested child IEN, or TOP or BOTTOM.  It is defined only
"KRN",8994,123552,3,5,0)
 if there was no error.
"KRN",8994,123553,-1)
0^78
"KRN",8994,123553,0)
MAGV TRAVERSE SOP^TRAVSOP^MAGVRS09^2^R^0
"KRN",8994,123553,1,0)
^8994.01^3^3^3110125^^^^
"KRN",8994,123553,1,1,0)
This RPC allows the user to traverse the entries on the IMAGE SOP INSTANCE
"KRN",8994,123553,1,2,0)
File (#2005.64) that are indexed under an entry on the IMAGE SERIES File
"KRN",8994,123553,1,3,0)
(#2005.63).
"KRN",8994,123553,2,0)
^8994.02A^3^3
"KRN",8994,123553,2,1,0)
IEN^1^20^1^1
"KRN",8994,123553,2,1,1,0)
^^3^3^3100806^
"KRN",8994,123553,2,1,1,1,0)
This is the internal entry number of the entry on the IMAGE SERIES File 
"KRN",8994,123553,2,1,1,2,0)
(#2005.63) whose child entries on the IMAGE SOP INSTANCE File (#2005.64) 
"KRN",8994,123553,2,1,1,3,0)
are to be traversed.
"KRN",8994,123553,2,2,0)
DIR^1^10^1^2
"KRN",8994,123553,2,2,1,0)
^^1^1^3100324^
"KRN",8994,123553,2,2,1,1,0)
This is the direction of traversal:  FIRST, NEXT, PREV, or LAST.
"KRN",8994,123553,2,3,0)
CHILDIEN^1^10^^3
"KRN",8994,123553,2,3,1,0)
^8994.021^3^3^3110125^^
"KRN",8994,123553,2,3,1,1,0)
This is the internal entry number of the entry on the IMAGE SOP INSTANCE 
"KRN",8994,123553,2,3,1,2,0)
File (#2005.64) from which to proceed.  It should be specified only for
"KRN",8994,123553,2,3,1,3,0)
the NEXT and PREV traversal commands.
"KRN",8994,123553,2,"B","CHILDIEN",3)

"KRN",8994,123553,2,"B","DIR",2)

"KRN",8994,123553,2,"B","IEN",1)

"KRN",8994,123553,2,"PARAMSEQ",1,1)

"KRN",8994,123553,2,"PARAMSEQ",2,2)

"KRN",8994,123553,2,"PARAMSEQ",3,3)

"KRN",8994,123553,3,0)
^8994.03^5^5^3100806^^
"KRN",8994,123553,3,1,0)
The RPC returns a string in three pieces delimited by backtick (`).
"KRN",8994,123553,3,2,0)
 Piece 1 is 0 (FALSE) if there was no error, nonzero otherwise.
"KRN",8994,123553,3,3,0)
 Piece 2 is the error message if piece 1 is not FALSE.
"KRN",8994,123553,3,4,0)
 Piece 3 is the requested child IEN, or TOP or BOTTOM.  It is defined only
"KRN",8994,123553,3,5,0)
 if there was no error.
"KRN",8994,123554,-1)
0^79
"KRN",8994,123554,0)
MAGV TRAVERSE STUDY^TRAVSTDY^MAGVRS09^2^R^0
"KRN",8994,123554,1,0)
^^3^3^3100806^
"KRN",8994,123554,1,1,0)
This RPC allows the user to traverse the entries on the IMAGE STUDY File 
"KRN",8994,123554,1,2,0)
(#2005.62) that are indexed under an entry on the IMAGING PROCEDURE 
"KRN",8994,123554,1,3,0)
REFERENCE File (#2005.61).
"KRN",8994,123554,2,0)
^8994.02A^3^3
"KRN",8994,123554,2,1,0)
IEN^1^20^1^1
"KRN",8994,123554,2,1,1,0)
^^3^3^3100806^
"KRN",8994,123554,2,1,1,1,0)
This is the internal entry number of the entry on the IMAGING PROCEDURE 
"KRN",8994,123554,2,1,1,2,0)
REFERENCE File (#2005.61) whose child entries on the IMAGE STUDY File 
"KRN",8994,123554,2,1,1,3,0)
(#2005.62) are to be traversed.
"KRN",8994,123554,2,2,0)
DIR^1^10^1^2
"KRN",8994,123554,2,2,1,0)
^^1^1^3100324^
"KRN",8994,123554,2,2,1,1,0)
This is the direction of traversal:  FIRST, NEXT, PREV, or LAST.
"KRN",8994,123554,2,3,0)
CHILDIEN^1^10^^3
"KRN",8994,123554,2,3,1,0)
^^3^3^3100806^
"KRN",8994,123554,2,3,1,1,0)
This is the internal entry number of the entry on the IMAGE STUDY File 
"KRN",8994,123554,2,3,1,2,0)
(#2005.62) from which to proceed.  It should be specified only for the 
"KRN",8994,123554,2,3,1,3,0)
NEXT and PREV traversal commands.
"KRN",8994,123554,2,"B","CHILDIEN",3)

"KRN",8994,123554,2,"B","DIR",2)

"KRN",8994,123554,2,"B","IEN",1)

"KRN",8994,123554,2,"PARAMSEQ",1,1)

"KRN",8994,123554,2,"PARAMSEQ",2,2)

"KRN",8994,123554,2,"PARAMSEQ",3,3)

"KRN",8994,123554,3,0)
^8994.03^5^5^3100806^^
"KRN",8994,123554,3,1,0)
The RPC returns a string in three pieces delimited by backtick (`).
"KRN",8994,123554,3,2,0)
 Piece 1 is 0 (FALSE) if there was no error, nonzero otherwise.
"KRN",8994,123554,3,3,0)
 Piece 2 is the error message if piece 1 is not FALSE.
"KRN",8994,123554,3,4,0)
 Piece 3 is the requested child IEN, or TOP or BOTTOM.  It is defined only
"KRN",8994,123554,3,5,0)
 if there was no error.
"KRN",8994,123555,-1)
0^80
"KRN",8994,123555,0)
MAGV UPDATE IMAGE FILE^UPDFILE^MAGVRS31^2^R
"KRN",8994,123555,1,0)
^8994.01^1^1^3100826^^^^
"KRN",8994,123555,1,1,0)
This RPC allows an IMAGE INSTANCE FILE file (#2005.65) entry to be updated.
"KRN",8994,123555,2,0)
^8994.02A^2^2
"KRN",8994,123555,2,1,0)
FILEATTS^2^^^1
"KRN",8994,123555,2,1,1,0)
^8994.021^9^9^3100421^^
"KRN",8994,123555,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123555,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123555,2,1,1,3,0)
argument to entry point UPDFILE^MAGVRS31.  The first argument will
"KRN",8994,123555,2,1,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123555,2,1,1,5,0)
reference.
"KRN",8994,123555,2,1,1,6,0)
  
"KRN",8994,123555,2,1,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123555,2,1,1,8,0)
<fname> is a field name in the IMAGE INSTANCE FILE file (#2005.65) and <value>
"KRN",8994,123555,2,1,1,9,0)
is the value to which that field should be set.
"KRN",8994,123555,2,2,0)
OVERRIDE^1^^^2
"KRN",8994,123555,2,2,1,0)
^8994.021^1^1^3100826^^^
"KRN",8994,123555,2,2,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123555,2,"B","FILEATTS",1)

"KRN",8994,123555,2,"B","OVERRIDE",2)

"KRN",8994,123555,2,"PARAMSEQ",1,1)

"KRN",8994,123555,2,"PARAMSEQ",2,2)

"KRN",8994,123555,3,0)
^8994.03^3^3^3100826^^^^
"KRN",8994,123555,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123555,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123555,3,3,0)
success; all others indicate failure, as described in TEXT.
"KRN",8994,123556,-1)
0^81
"KRN",8994,123556,0)
MAGV UPDATE PAT PROC REF^UPDPROC^MAGVRS05^2^R
"KRN",8994,123556,1,0)
^8994.01^1^1^3120203^^^^
"KRN",8994,123556,1,1,0)
This RPC allows updating of a procedure that is attached to a patient.
"KRN",8994,123556,2,0)
^8994.02A^2^2
"KRN",8994,123556,2,1,0)
PROCATTS^2^32000^1^1
"KRN",8994,123556,2,1,1,0)
^8994.021^8^8^3120203^^
"KRN",8994,123556,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123556,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123556,2,1,1,3,0)
argument to entry point UPDPROC^MAGVRS05.  The first argument contains the
"KRN",8994,123556,2,1,1,4,0)
returned value in an array that should also be passed by reference.
"KRN",8994,123556,2,1,1,5,0)
 
"KRN",8994,123556,2,1,1,6,0)
The values passed in should be in the format <fname>`<value>, where 
"KRN",8994,123556,2,1,1,7,0)
<fname> is a field name in the IMAGING PROCEDURE REFERENCE File 
"KRN",8994,123556,2,1,1,8,0)
(#2005.61) and <value> is the value to which that field should be set.
"KRN",8994,123556,2,2,0)
OVERRIDE^1^^^2
"KRN",8994,123556,2,2,1,0)
^^1^1^3120203^
"KRN",8994,123556,2,2,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123556,2,"B","OVERRIDE",2)

"KRN",8994,123556,2,"B","PROCATTS",1)

"KRN",8994,123556,2,"PARAMSEQ",1,1)

"KRN",8994,123556,2,"PARAMSEQ",2,2)

"KRN",8994,123556,3,0)
^8994.03^3^3^3120203^^^
"KRN",8994,123556,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123556,3,2,0)
[ERRORCODE]~[TEXT].  An ERRORCODE value of 0 indicates success; all
"KRN",8994,123556,3,3,0)
others indicate failure, as described in TEXT.
"KRN",8994,123557,-1)
0^82
"KRN",8994,123557,0)
MAGV UPDATE PAT REF^UPDPAT^MAGVRS06^2^R
"KRN",8994,123557,1,0)
^8994.01^1^1^3120203^^^^
"KRN",8994,123557,1,1,0)
This RPC allows an Imaging patient reference to be updated.
"KRN",8994,123557,2,0)
^8994.02A^2^2
"KRN",8994,123557,2,1,0)
PATIDATTS^2^32000^1^1
"KRN",8994,123557,2,1,1,0)
^8994.021^11^11^3120203^^
"KRN",8994,123557,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123557,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123557,2,1,1,3,0)
argument to entry point UPDPAT^MAGVRS06.  The first argument contains the
"KRN",8994,123557,2,1,1,4,0)
returned value in an array that should also be passed by reference.
"KRN",8994,123557,2,1,1,5,0)
 
"KRN",8994,123557,2,1,1,6,0)
Input parameters used for update are the following:
"KRN",8994,123557,2,1,1,7,0)
 
"KRN",8994,123557,2,1,1,8,0)
 IEN (required): the internal entry number of the patient reference 
"KRN",8994,123557,2,1,1,9,0)
 ID_VALUE (required): the raw value of the ID
"KRN",8994,123557,2,1,1,10,0)
 ID_TYPE (required): the type of ID (M)RN or (I)CN or (D)FN
"KRN",8994,123557,2,1,1,11,0)
 ASSIGNING_ENTITY: (V)A, (D)oD, (I)HS
"KRN",8994,123557,2,2,0)
OVERRIDE^1^^^2
"KRN",8994,123557,2,2,1,0)
^^1^1^3120203^
"KRN",8994,123557,2,2,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123557,2,"B","OVERRIDE",2)

"KRN",8994,123557,2,"B","PATIDATTS",1)

"KRN",8994,123557,2,"PARAMSEQ",1,1)

"KRN",8994,123557,2,"PARAMSEQ",2,2)

"KRN",8994,123557,3,0)
^8994.03^3^3^3120203^^^^
"KRN",8994,123557,3,1,0)
 The first and only element of the return array will be formatted as
"KRN",8994,123557,3,2,0)
 [ERRORCODE]~[TEXT].  An ERRORCODE value of 0 indicates success; all
"KRN",8994,123557,3,3,0)
 others indicate failure, as described in TEXT.
"KRN",8994,123558,-1)
0^83
"KRN",8994,123558,0)
MAGV UPDATE SERIES^UPSERIES^MAGVRS11^2^R
"KRN",8994,123558,1,0)
^8994.01^1^1^3120203^^^^
"KRN",8994,123558,1,1,0)
This RPC allows an IMAGE SERIES File (#2005.63) to be updated.
"KRN",8994,123558,2,0)
^8994.02A^2^2
"KRN",8994,123558,2,1,0)
OVERRIDE^^^^2
"KRN",8994,123558,2,1,1,0)
^8994.021^1^1^3120203^^
"KRN",8994,123558,2,1,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123558,2,2,0)
SERATTS^2^^^1
"KRN",8994,123558,2,2,1,0)
^8994.021^9^9^3120203^^^
"KRN",8994,123558,2,2,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123558,2,2,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123558,2,2,1,3,0)
argument to entry point UPSERIES^MAGVRS11.  The first argument will
"KRN",8994,123558,2,2,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123558,2,2,1,5,0)
reference.
"KRN",8994,123558,2,2,1,6,0)
  
"KRN",8994,123558,2,2,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123558,2,2,1,8,0)
<fname> is a field name in the IMAGE SERIES File (#2005.63) and <value>
"KRN",8994,123558,2,2,1,9,0)
is the value to which that field should be set.
"KRN",8994,123558,2,"B","OVERRIDE",1)

"KRN",8994,123558,2,"B","SERATTS",2)

"KRN",8994,123558,2,"PARAMSEQ",1,2)

"KRN",8994,123558,2,"PARAMSEQ",2,1)

"KRN",8994,123558,3,0)
^8994.03^3^3^3120203^^^^
"KRN",8994,123558,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123558,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123558,3,3,0)
success; all others indicate failure, as described in TEXT.
"KRN",8994,123559,-1)
0^84
"KRN",8994,123559,0)
MAGV UPDATE SOP^UPDSOP^MAGVRS21^2^R
"KRN",8994,123559,1,0)
^8994.01^1^1^3100826^^^^
"KRN",8994,123559,1,1,0)
This RPC allows an IMAGE SOP INSTANCE File (#2005.64) entry to be updated.
"KRN",8994,123559,2,0)
^8994.02A^2^2
"KRN",8994,123559,2,1,0)
SOPATTS^2^^^1
"KRN",8994,123559,2,1,1,0)
^8994.021^9^9^3100826^^^
"KRN",8994,123559,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123559,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123559,2,1,1,3,0)
argument to entry point UPDSOP^MAGVRS21.  The first argument will
"KRN",8994,123559,2,1,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123559,2,1,1,5,0)
reference.
"KRN",8994,123559,2,1,1,6,0)
  
"KRN",8994,123559,2,1,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123559,2,1,1,8,0)
<fname> is a field name in the IMAGE SOP INSTANCE File (#2005.64) and <value>
"KRN",8994,123559,2,1,1,9,0)
is the value to which that field should be set.
"KRN",8994,123559,2,2,0)
OVERRIDE^1^^^2
"KRN",8994,123559,2,2,1,0)
^8994.021^1^1^3100826^^^^
"KRN",8994,123559,2,2,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123559,2,"B","OVERRIDE",2)

"KRN",8994,123559,2,"B","SOPATTS",1)

"KRN",8994,123559,2,"PARAMSEQ",1,1)

"KRN",8994,123559,2,"PARAMSEQ",2,2)

"KRN",8994,123559,3,0)
^8994.03^3^3^3100826^^^^
"KRN",8994,123559,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123559,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123559,3,3,0)
success; all others indicate failure, as described in TEXT.
"KRN",8994,123560,-1)
0^85
"KRN",8994,123560,0)
MAGV UPDATE STUDY^UPDSTUDY^MAGVRS01^2^R^0
"KRN",8994,123560,1,0)
^8994.01^1^1^3100826^^^^
"KRN",8994,123560,1,1,0)
This RPC allows an IMAGE STUDY File (#2005.62) entry to be updated.
"KRN",8994,123560,2,0)
^8994.02A^2^2
"KRN",8994,123560,2,1,0)
STUDYATTS^2^^^1
"KRN",8994,123560,2,1,1,0)
^8994.021^9^9^3100805^^^
"KRN",8994,123560,2,1,1,1,0)
Input parameters are name-value pairs sent as successive integer
"KRN",8994,123560,2,1,1,2,0)
subscripts in an array that should be passed in by reference as the second
"KRN",8994,123560,2,1,1,3,0)
argument to entry point UPDSTUDY^MAGVRS01.  The first argument will
"KRN",8994,123560,2,1,1,4,0)
contain the returned value in an array that should also be passed by
"KRN",8994,123560,2,1,1,5,0)
reference.
"KRN",8994,123560,2,1,1,6,0)
  
"KRN",8994,123560,2,1,1,7,0)
The values passed in should be in the format <fname>`<value>, where
"KRN",8994,123560,2,1,1,8,0)
<fname> is a field name in the IMAGE STUDY File (#2005.62) and <value>
"KRN",8994,123560,2,1,1,9,0)
is the value to which that field should be set.
"KRN",8994,123560,2,2,0)
OVERRIDE^1^^^2
"KRN",8994,123560,2,2,1,0)
^8994.021^1^1^3100826^^^^
"KRN",8994,123560,2,2,1,1,0)
This parameter overrides parent IEN checking.
"KRN",8994,123560,2,"B","OVERRIDE",2)

"KRN",8994,123560,2,"B","STUDYATTS",1)

"KRN",8994,123560,2,"PARAMSEQ",1,1)

"KRN",8994,123560,2,"PARAMSEQ",2,2)

"KRN",8994,123560,3,0)
^8994.03^3^3^3100826^^^^
"KRN",8994,123560,3,1,0)
The first and only element of the return array will be formatted as
"KRN",8994,123560,3,2,0)
[ERRORCODE]`[TEXT]`[ASSIGNED IEN].  An ERRORCODE value of 0 indicates
"KRN",8994,123560,3,3,0)
success; all others indicate failure, as described in TEXT.
"KRN",8994,123561,-1)
0^86
"KRN",8994,123561,0)
MAGV UPDATE WORK ITEM^UPDITEM^MAGVIM01^1^R
"KRN",8994,123561,1,0)
^8994.01^16^16^3130321^^
"KRN",8994,123561,1,1,0)
 +---------------------------------------------------------------+
"KRN",8994,123561,1,2,0)
 | Property of the US Government.                                |
"KRN",8994,123561,1,3,0)
 | No permission to copy or redistribute this software is given. |
"KRN",8994,123561,1,4,0)
 | Use of unreleased versions of this software requires the user |
"KRN",8994,123561,1,5,0)
 | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123561,1,6,0)
 | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123561,1,7,0)
 | telephone (301) 734-0100.                                     |
"KRN",8994,123561,1,8,0)
 |                                                               |
"KRN",8994,123561,1,9,0)
 | The Food and Drug Administration classifies this software as  |
"KRN",8994,123561,1,10,0)
 | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123561,1,11,0)
 | Modifications to this software may result in an adulterated   |
"KRN",8994,123561,1,12,0)
 | medical device under 21CFR820, the use of which is considered |
"KRN",8994,123561,1,13,0)
 | to be a violation of US Federal Statutes.                     |
"KRN",8994,123561,1,14,0)
 +---------------------------------------------------------------+
"KRN",8994,123561,1,15,0)
 
"KRN",8994,123561,1,16,0)
This RPC updates a work item in the MAG WORK ITEM file (#2006.941). 
"KRN",8994,123561,2,0)
^8994.02A^6^6
"KRN",8994,123561,2,1,0)
ITEMID^1^^1^1
"KRN",8994,123561,2,1,1,0)
^^1^1^3110407^
"KRN",8994,123561,2,1,1,1,0)
This is the item ID that uniquely identifies the work list item.
"KRN",8994,123561,2,2,0)
EXPSTAT^1^^1^2
"KRN",8994,123561,2,2,1,0)
^^3^3^3110407^
"KRN",8994,123561,2,2,1,1,0)
This is the expected status of the work item.  If the expected status
"KRN",8994,123561,2,2,1,2,0)
does not match the status of the work item then the item will not
"KRN",8994,123561,2,2,1,3,0)
be updated.
"KRN",8994,123561,2,3,0)
NEWSTAT^1^^^3
"KRN",8994,123561,2,3,1,0)
^^1^1^3110407^
"KRN",8994,123561,2,3,1,1,0)
This is the new status to be filed in the work item.
"KRN",8994,123561,2,4,0)
MESSAGE^1^^^4
"KRN",8994,123561,2,4,1,0)
^^1^1^3110407^
"KRN",8994,123561,2,4,1,1,0)
This is the message that is associated with the work item.
"KRN",8994,123561,2,5,0)
UPDUSR^1^^^5
"KRN",8994,123561,2,5,1,0)
^^1^1^3120119^
"KRN",8994,123561,2,5,1,1,0)
This is the user that has updated the work item.
"KRN",8994,123561,2,6,0)
UPDAPP^1^^^6
"KRN",8994,123561,2,6,1,0)
^^1^1^3120119^
"KRN",8994,123561,2,6,1,1,0)
This is the application/service that has updated the work item.
"KRN",8994,123561,2,"B","EXPSTAT",2)

"KRN",8994,123561,2,"B","ITEMID",1)

"KRN",8994,123561,2,"B","MESSAGE",4)

"KRN",8994,123561,2,"B","NEWSTAT",3)

"KRN",8994,123561,2,"B","UPDAPP",6)

"KRN",8994,123561,2,"B","UPDUSR",5)

"KRN",8994,123561,2,"PARAMSEQ",1,1)

"KRN",8994,123561,2,"PARAMSEQ",2,2)

"KRN",8994,123561,2,"PARAMSEQ",3,3)

"KRN",8994,123561,2,"PARAMSEQ",4,4)

"KRN",8994,123561,2,"PARAMSEQ",5,5)

"KRN",8994,123561,2,"PARAMSEQ",6,6)

"KRN",8994,123561,3,0)
^8994.03^1^1^3110420^^^
"KRN",8994,123561,3,1,0)
The return parameter returns a "0" for success. "-1" followed by an error message is returned if an error has occurred.
"KRN",8994,123562,-1)
0^87
"KRN",8994,123562,0)
MAGV WORK ITEMS COUNT^CNTWI^MAGVIM08^2^R
"KRN",8994,123562,1,0)
^8994.01^15^15^3120210^^
"KRN",8994,123562,1,1,0)
+---------------------------------------------------------------+
"KRN",8994,123562,1,2,0)
| Property of the US Government.                                |
"KRN",8994,123562,1,3,0)
| No permission to copy or redistribute this software is given. |
"KRN",8994,123562,1,4,0)
| Use of unreleased versions of this software requires the user |
"KRN",8994,123562,1,5,0)
| to execute a written test agreement with the VistA Imaging    |
"KRN",8994,123562,1,6,0)
| Development Office of the Department of Veterans Affairs,     |
"KRN",8994,123562,1,7,0)
| telephone (301) 734-0100.                                     |
"KRN",8994,123562,1,8,0)
| The Food and Drug Administration classifies this software as  |
"KRN",8994,123562,1,9,0)
| a medical device.  As such, it may not be changed in any way. |
"KRN",8994,123562,1,10,0)
| Modifications to this software may result in an adulterated   |
"KRN",8994,123562,1,11,0)
| medical device under 21CFR820, the use of which is considered |
"KRN",8994,123562,1,12,0)
| to be a violation of US Federal Statutes.                     |
"KRN",8994,123562,1,13,0)
+---------------------------------------------------------------+
"KRN",8994,123562,1,14,0)
 
"KRN",8994,123562,1,15,0)
Returns number of records in MAG WORK ITEM file (#2006.941) by TYPE, SUBTYPE, and STATUS.
"KRN",8994,123562,2,0)
^8994.02A^3^3
"KRN",8994,123562,2,1,0)
TYPE^1^^1^1
"KRN",8994,123562,2,1,1,0)
^^1^1^3120210^
"KRN",8994,123562,2,1,1,1,0)
External value of TYPE field (#2006.941,1)
"KRN",8994,123562,2,2,0)
SUBTYPE^1^^0^2
"KRN",8994,123562,2,2,1,0)
^^1^1^3120210^
"KRN",8994,123562,2,2,1,1,0)
External value of SUBTYPE field (#2006.941,2)
"KRN",8994,123562,2,3,0)
STATUS^1^^0^3
"KRN",8994,123562,2,3,1,0)
^^1^1^3120210^
"KRN",8994,123562,2,3,1,1,0)
External value of STATUS field (#2006.941,3)
"KRN",8994,123562,2,"B","STATUS",3)

"KRN",8994,123562,2,"B","SUBTYPE",2)

"KRN",8994,123562,2,"B","TYPE",1)

"KRN",8994,123562,2,"PARAMSEQ",1,1)

"KRN",8994,123562,2,"PARAMSEQ",2,2)

"KRN",8994,123562,2,"PARAMSEQ",3,3)

"KRN",8994,123562,3,0)
^^4^4^3120210^
"KRN",8994,123562,3,1,0)
if error MAGRY(0) = Error number `` Error message
"KRN",8994,123562,3,2,0)
if success MAGRY(0) = 0` Number of records
"KRN",8994,123562,3,3,0)
           MAGRY(1) = "SUBTYPE`STATUS`COUNT"   
"KRN",8994,123562,3,4,0)
           MAGRY(1..n) = SUBTYPE  ` STATUS ` COUNT
"KRN",8994,123563,-1)
0^88
"KRN",8994,123563,0)
MAGVA CREATE AD^ADDAD^MAGVAC01^1^R^0
"KRN",8994,123563,1,0)
^8994.01^1^1^3100322^
"KRN",8994,123563,1,1,0)
Add a record to ARTIFACT DESCRIPTOR file (#2006.915)
"KRN",8994,123563,2,0)
^8994.02A^1^1
"KRN",8994,123563,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123563,2,1,1,0)
^^5^5^3100322^
"KRN",8994,123563,2,1,1,1,0)
 MAGPARAM("ARTIFACT FORMAT")
"KRN",8994,123563,2,1,1,2,0)
 MAGPARAM("ARTIFACT TYPE")
"KRN",8994,123563,2,1,1,3,0)
 MAGPARAM("FILE EXTENSION")
"KRN",8994,123563,2,1,1,4,0)
 MAGPARAM("ACTIVE")
"KRN",8994,123563,2,1,1,5,0)
 MAGPARAM("RETENTION POLICY")
"KRN",8994,123563,2,"B","MAGPARAM",1)

"KRN",8994,123563,2,"PARAMSEQ",1,1)

"KRN",8994,123563,3,0)
^^2^2^3100322^
"KRN",8994,123563,3,1,0)
  if error MAGRY = Failure status ^ Error message
"KRN",8994,123563,3,2,0)
  if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123564,-1)
0^89
"KRN",8994,123564,0)
MAGVA CREATE AINSTANCE^ADDAINST^MAGVAC01^1^R^0
"KRN",8994,123564,1,0)
^^1^1^3100318^
"KRN",8994,123564,1,1,0)
Add a record to ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123564,2,0)
^8994.02A^2^2
"KRN",8994,123564,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123564,2,1,1,0)
^^5^5^3100318^
"KRN",8994,123564,2,1,1,1,0)
 MAGPARAM("ARTIFACT")
"KRN",8994,123564,2,1,1,2,0)
 MAGPARAM("STORAGE PROVIDER")
"KRN",8994,123564,2,1,1,3,0)
 MAGPARAM("FILEREF")
"KRN",8994,123564,2,1,1,4,0)
 MAGPARAM("DISK VOLUME")
"KRN",8994,123564,2,1,1,5,0)
 MAGPARAM("FILEPATH")
"KRN",8994,123564,2,2,0)
MAGURL^2^^1^2
"KRN",8994,123564,2,2,1,0)
^^2^2^3100318^
"KRN",8994,123564,2,2,1,1,0)
MAGURL(1..n) = URL value  
"KRN",8994,123564,2,2,1,2,0)
URL value is split in individual records in MAGURL
"KRN",8994,123564,2,"B","MAGPARAM",1)

"KRN",8994,123564,2,"B","MAGURL",2)

"KRN",8994,123564,2,"PARAMSEQ",1,1)

"KRN",8994,123564,2,"PARAMSEQ",2,2)

"KRN",8994,123564,3,0)
^^2^2^3100318^
"KRN",8994,123564,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123564,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123565,-1)
0^90
"KRN",8994,123565,0)
MAGVA CREATE ARETPOL^ADDARP^MAGVAC01^1^R^0
"KRN",8994,123565,1,0)
^8994.01^1^1^3100318^^
"KRN",8994,123565,1,1,0)
Create a new record in Artifact Retention Policy file (#2006.921).
"KRN",8994,123565,2,0)
^8994.02A^1^1
"KRN",8994,123565,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123565,2,1,1,0)
^8994.021^3^3^3100318^^
"KRN",8994,123565,2,1,1,1,0)
 MAGPARAM("ARTIFACT")           = A pointer to ARTIFACT file (#2006.916)
"KRN",8994,123565,2,1,1,2,0)
 MAGPARAM("RETENTION POLICY")   = A pointer to RETENTION POLICY file (#2006.914)
"KRN",8994,123565,2,1,1,3,0)
 MAGPARAM("SATISFIED DATE/TIME") = DateTime in IDF format (YYYYMMDD.HHMMSS)
"KRN",8994,123565,2,"B","MAGPARAM",1)

"KRN",8994,123565,2,"PARAMSEQ",1,1)

"KRN",8994,123565,3,0)
^8994.03^2^2^3100318^^
"KRN",8994,123565,3,1,0)
if error MAGRY =  Failure status ^ Error message
"KRN",8994,123565,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123566,-1)
0^91
"KRN",8994,123566,0)
MAGVA CREATE ARTIFACT W KL^ADDAFACT^MAGVAC01^1^R^0
"KRN",8994,123566,1,0)
^^1^1^3100319^
"KRN",8994,123566,1,1,0)
Add a record to ARTIFACT file (#2006.916)
"KRN",8994,123566,2,0)
^8994.02A^2^2
"KRN",8994,123566,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123566,2,1,1,0)
^8994.021^6^6^3100319^^
"KRN",8994,123566,2,1,1,1,0)
 MAGPARAM("ARTIFACT DESCRIPTOR")
"KRN",8994,123566,2,1,1,2,0)
 MAGPARAM("ARTIFACT TOKEN")
"KRN",8994,123566,2,1,1,3,0)
 MAGPARAM("CRC")
"KRN",8994,123566,2,1,1,4,0)
 MAGPARAM("CREATED BY")
"KRN",8994,123566,2,1,1,5,0)
 MAGPARAM("LAST ACCESS DATE/TIME")
"KRN",8994,123566,2,1,1,6,0)
 MAGPARAM("SIZE IN BYTES")
"KRN",8994,123566,2,2,0)
KLIST^2^^1^2
"KRN",8994,123566,2,2,1,0)
^^5^5^3100319^
"KRN",8994,123566,2,2,1,1,0)
 Artifact KEYLIST values
"KRN",8994,123566,2,2,1,2,0)
   KLIST(1) = First level Key
"KRN",8994,123566,2,2,1,3,0)
   KLIST(2) = Second level Key
"KRN",8994,123566,2,2,1,4,0)
   ...
"KRN",8994,123566,2,2,1,5,0)
   KLIST(N) = N-th level Key
"KRN",8994,123566,2,"B","KLIST",2)

"KRN",8994,123566,2,"B","MAGPARAM",1)

"KRN",8994,123566,2,"PARAMSEQ",1,1)

"KRN",8994,123566,2,"PARAMSEQ",2,2)

"KRN",8994,123566,3,0)
^^2^2^3100319^
"KRN",8994,123566,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123566,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record
"KRN",8994,123567,-1)
0^92
"KRN",8994,123567,0)
MAGVA CREATE KEYLIST^ADDKL^MAGVAKL1^1^R^0
"KRN",8994,123567,1,0)
^8994.01^1^1^3100318^^^
"KRN",8994,123567,1,1,0)
Add new key pairs to ARTIFACT KEYLIST file (#2006.913)
"KRN",8994,123567,1,2,0)
 
"KRN",8994,123567,2,0)
^8994.02A^1^1
"KRN",8994,123567,2,1,0)
KLIST^2^^1^1
"KRN",8994,123567,2,1,1,0)
^8994.021^4^4^3100318^^^
"KRN",8994,123567,2,1,1,1,0)
KLIST(1) = First Key 
"KRN",8994,123567,2,1,1,2,0)
 KLIST(2) = Second Key
"KRN",8994,123567,2,1,1,3,0)
 ...
"KRN",8994,123567,2,1,1,4,0)
 KLIST(N) = N-th Key
"KRN",8994,123567,2,"B","KLIST",1)

"KRN",8994,123567,2,"PARAMSEQ",1,1)

"KRN",8994,123567,3,0)
^8994.03^2^2^3100318^^^
"KRN",8994,123567,3,1,0)
if error MAGRY = Failure status ^ Error message
"KRN",8994,123567,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the added record
"KRN",8994,123568,-1)
0^93
"KRN",8994,123568,0)
MAGVA CREATE PROVAVAILTY^ADDPA^MAGVAC01^1^R^0
"KRN",8994,123568,1,0)
^8994.01^1^1^3100312^
"KRN",8994,123568,1,1,0)
Add a new record to PROVIDER AVAILABILITY file (#2006.924)
"KRN",8994,123568,2,0)
^8994.02A^1^1
"KRN",8994,123568,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123568,2,1,1,0)
^^4^4^3100312^
"KRN",8994,123568,2,1,1,1,0)
    MAGPARAM("STORAGE PROVIDER")      = A pointer to STORAGE PROVIDER file (#2006.917)
"KRN",8994,123568,2,1,1,2,0)
    MAGPARAM("SOURCE PLACE")  = A pointer to IMAGING SITE PARAMETERS file (#2006.1)
"KRN",8994,123568,2,1,1,3,0)
    MAGPARAM("START TIME")    =  DateTime in IDF format (YYYYMMDD.HHMMSS)
"KRN",8994,123568,2,1,1,4,0)
    MAGPARAM("END TIME")      = DateTime in IDF format (YYYYMMDD.HHMMSS)
"KRN",8994,123568,2,"B","MAGPARAM",1)

"KRN",8994,123568,2,"PARAMSEQ",1,1)

"KRN",8994,123568,3,0)
^^2^2^3100312^
"KRN",8994,123568,3,1,0)
  if error MAGRY =  Failure status ^ Error message
"KRN",8994,123568,3,2,0)
  if success MAGRY = Success status ^^ IEN - IEN of the new record 
"KRN",8994,123569,-1)
0^94
"KRN",8994,123569,0)
MAGVA CREATE PROVIDER^ADDPRV^MAGVAC01^1^R^0
"KRN",8994,123569,1,0)
^^1^1^3100316^
"KRN",8994,123569,1,1,0)
Add a Storage Provider record to file STORAGE PROVIDER (#2006.917)
"KRN",8994,123569,2,0)
^8994.02A^1^1
"KRN",8994,123569,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123569,2,1,1,0)
^^4^4^3100316^
"KRN",8994,123569,2,1,1,1,0)
   MAGPARAM("STORAGE PROVIDER TYPE")
"KRN",8994,123569,2,1,1,2,0)
   MAGPARAM("STORAGE PROVIDER PLACE")
"KRN",8994,123569,2,1,1,3,0)
   MAGPARAM("ARCHIVE")
"KRN",8994,123569,2,1,1,4,0)
   MAGPARAM("PRIMARY STORAGE")
"KRN",8994,123569,2,"B","MAGPARAM",1)

"KRN",8994,123569,2,"PARAMSEQ",1,1)

"KRN",8994,123569,3,0)
^^2^2^3100316^
"KRN",8994,123569,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123569,3,2,0)
  if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123570,-1)
0^95
"KRN",8994,123570,0)
MAGVA CREATE QUEUE^ADDQUEUE^MAGVAQ01^1^R^0
"KRN",8994,123570,1,0)
^^1^1^3100331^
"KRN",8994,123570,1,1,0)
 Add a record to QUEUE file (#2006.927)
"KRN",8994,123570,2,0)
^8994.02A^1^1
"KRN",8994,123570,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123570,2,1,1,0)
^^6^6^3100331^
"KRN",8994,123570,2,1,1,1,0)
 MAGPARAM("NAME")
"KRN",8994,123570,2,1,1,2,0)
 MAGPARAM("ACTIVE") = 0/1
"KRN",8994,123570,2,1,1,3,0)
 MAGPARAM("QUEUE TYPE")
"KRN",8994,123570,2,1,1,4,0)
 MAGPARAM("NUM RETRIES")
"KRN",8994,123570,2,1,1,5,0)
 MAGPARAM("RETRY DELAY IN SECONDS")
"KRN",8994,123570,2,1,1,6,0)
 MAGPARAM("TRIGGER DELAY IN SECONDS")
"KRN",8994,123570,2,"B","MAGPARAM",1)

"KRN",8994,123570,2,"PARAMSEQ",1,1)

"KRN",8994,123570,3,0)
^^2^2^3100331^
"KRN",8994,123570,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123570,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123571,-1)
0^96
"KRN",8994,123571,0)
MAGVA CREATE RETPOL^ADDRP^MAGVAC01^1^R^0
"KRN",8994,123571,1,0)
^^1^1^3100318^
"KRN",8994,123571,1,1,0)
Add a record to RETENTION POLICY file (#2006.914) 
"KRN",8994,123571,2,0)
^8994.02A^1^1
"KRN",8994,123571,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123571,2,1,1,0)
^^6^6^3100318^
"KRN",8994,123571,2,1,1,1,0)
 MAGPARAM("ARCHIVE DURATION TRIGGER")
"KRN",8994,123571,2,1,1,2,0)
 MAGPARAM("ARCHIVE DURATION YEARS")
"KRN",8994,123571,2,1,1,3,0)
 MAGPARAM("BUSINESS KEY")
"KRN",8994,123571,2,1,1,4,0)
 MAGPARAM("DISPLAY NAME")
"KRN",8994,123571,2,1,1,5,0)
 MAGPARAM("MINIMUM ARCHIVE COPIES")
"KRN",8994,123571,2,1,1,6,0)
 MAGPARAM("MINIMUM OFFSITE COPIES")
"KRN",8994,123571,2,"B","MAGPARAM",1)

"KRN",8994,123571,2,"PARAMSEQ",1,1)

"KRN",8994,123571,3,0)
^^2^2^3100318^
"KRN",8994,123571,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123571,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123572,-1)
0^97
"KRN",8994,123572,0)
MAGVA CREATE RETPOL PROV MAP^ADDRPPM^MAGVAC01^1^R^0
"KRN",8994,123572,1,0)
^^1^1^3100326^
"KRN",8994,123572,1,1,0)
Add a new record to RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"KRN",8994,123572,2,0)
^8994.02A^1^1
"KRN",8994,123572,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123572,2,1,1,0)
^^5^5^3100326^
"KRN",8994,123572,2,1,1,1,0)
 MAGPARAM("RETENTION POLICY") = Pointer to RETENTION POLICY file (#2006.914)
"KRN",8994,123572,2,1,1,2,0)
 MAGPARAM("STORAGE PROVIDER") = Pointer to STORAGE PROVIDER file (#2006.917)
"KRN",8994,123572,2,1,1,3,0)
 MAGPARAM("SOURCE PLACE") = Pointer to IMAGING SITE PARAMETERS file (#2006.1)
"KRN",8994,123572,2,1,1,4,0)
 MAGPARAM("SYNCHRONOUS") = 0/1
"KRN",8994,123572,2,1,1,5,0)
 MAGPARAM("OFFSITE") = 0/1
"KRN",8994,123572,2,"B","MAGPARAM",1)

"KRN",8994,123572,2,"PARAMSEQ",1,1)

"KRN",8994,123572,3,0)
^^2^2^3100326^
"KRN",8994,123572,3,1,0)
 if error MAGRY = Failure status^Error message^
"KRN",8994,123572,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record
"KRN",8994,123573,-1)
0^98
"KRN",8994,123573,0)
MAGVA CREATE RETPOLFF^ADDARPF^MAGVAC01^1^R^0
"KRN",8994,123573,1,0)
^^1^1^3100325^
"KRN",8994,123573,1,1,0)
Add a new record to RETENTION POLICY FULFILLMENT file (#2006.922)
"KRN",8994,123573,2,0)
^8994.02A^1^1
"KRN",8994,123573,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123573,2,1,1,0)
^^2^2^3100325^
"KRN",8994,123573,2,1,1,1,0)
 MAGPARAM("ARTIFACT RETENTION POLICY")  = A pointer to ARTIFACT RETENTION POLICY file (#2006.921)
"KRN",8994,123573,2,1,1,2,0)
 MAGPARAM("ARTIFACT INSTANCE")   = A pointer to ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123573,2,"B","MAGPARAM",1)

"KRN",8994,123573,2,"PARAMSEQ",1,1)

"KRN",8994,123573,3,0)
^^2^2^3100325^
"KRN",8994,123573,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123573,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123574,-1)
0^99
"KRN",8994,123574,0)
MAGVA CREATE STORAGE TA^ADDSTTA^MAGVAC01^1^R^0
"KRN",8994,123574,1,0)
^^1^1^3100326^
"KRN",8994,123574,1,1,0)
Add a new record to STORAGE TRANSACTION file (#2006.926)
"KRN",8994,123574,2,0)
^8994.02A^2^2
"KRN",8994,123574,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123574,2,1,1,0)
^^5^5^3100326^
"KRN",8994,123574,2,1,1,1,0)
 MAGPARAM("ARTIFACT") = Pointer to ARTIFACT file (#2006.916)
"KRN",8994,123574,2,1,1,2,0)
 MAGPARAM("STORAGE PROVIDER") = Pointer to STORAGE PROVIDER file (#2006.917)
"KRN",8994,123574,2,1,1,3,0)
 MAGPARAM("SUCCEEDED") = 0/1
"KRN",8994,123574,2,1,1,4,0)
 MAGPARAM("TRANSACTION TYPE") = 
"KRN",8994,123574,2,1,1,5,0)
 MAGPARAM("INITIATING APPLICATION") = 
"KRN",8994,123574,2,2,0)
MAGMSG^2^^0^2
"KRN",8994,123574,2,2,1,0)
^^1^1^3100326^
"KRN",8994,123574,2,2,1,1,0)
MAGMSG(1..n) = MESSAGE
"KRN",8994,123574,2,"B","MAGMSG",2)

"KRN",8994,123574,2,"B","MAGPARAM",1)

"KRN",8994,123574,2,"PARAMSEQ",1,1)

"KRN",8994,123574,2,"PARAMSEQ",2,2)

"KRN",8994,123574,3,0)
^^2^2^3100326^
"KRN",8994,123574,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123574,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123575,-1)
0^100
"KRN",8994,123575,0)
MAGVA CREATE TRF STATS^ADDTRFS^MAGVAC01^1^R^0
"KRN",8994,123575,1,0)
^^1^1^3100326^
"KRN",8994,123575,1,1,0)
Add a new record to TRANSFER STATISTICS file (#2006.925)
"KRN",8994,123575,2,0)
^8994.02A^1^1
"KRN",8994,123575,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123575,2,1,1,0)
^^5^5^3100326^
"KRN",8994,123575,2,1,1,1,0)
 MAGPARAM("DURATION IN MILLISECONDS") = 
"KRN",8994,123575,2,1,1,2,0)
 MAGPARAM("ENDPOINT PLACE") = Pointer to IMAGING SITE PARAMETERS file (#2006.1)
"KRN",8994,123575,2,1,1,3,0)
 MAGPARAM("STORAGE PROVIDER") = Pointer to STORAGE PROVIDER file (#2006.917)
"KRN",8994,123575,2,1,1,4,0)
 MAGPARAM("SIZE IN BYTES") = 
"KRN",8994,123575,2,1,1,5,0)
 MAGPARAM("START DATE/TIME") = 
"KRN",8994,123575,2,"B","MAGPARAM",1)

"KRN",8994,123575,2,"PARAMSEQ",1,1)

"KRN",8994,123575,3,0)
^^2^2^3100326^
"KRN",8994,123575,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123575,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123576,-1)
0^101
"KRN",8994,123576,0)
MAGVA DELETE KEYLIST^DELKL^MAGVAKL1^1^R^0
"KRN",8994,123576,1,0)
^8994.01^1^1^3100318^
"KRN",8994,123576,1,1,0)
Delete a record in KEYLIST file (#2006.913) by IEN
"KRN",8994,123576,2,0)
^8994.02A^1^1
"KRN",8994,123576,2,1,0)
MAGDA^1^^1^1
"KRN",8994,123576,2,1,1,0)
^8994.021^1^1^3100318^^
"KRN",8994,123576,2,1,1,1,0)
 MAGDA= IEN
"KRN",8994,123576,2,"B","MAGDA",1)

"KRN",8994,123576,2,"PARAMSEQ",1,1)

"KRN",8994,123576,3,0)
^^2^2^3100318^
"KRN",8994,123576,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123576,3,2,0)
 if success MAGRY = Success status 
"KRN",8994,123577,-1)
0^102
"KRN",8994,123577,0)
MAGVA DELETE PROVAVAILTY^DELPA^MAGVAD01^1^R^0
"KRN",8994,123577,1,0)
^^1^1^3100326^
"KRN",8994,123577,1,1,0)
 Delete a record in STORAGE PROVIDER AVAILABILITY file (#2006.924)
"KRN",8994,123577,2,0)
^8994.02A^1^1
"KRN",8994,123577,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123577,2,1,1,0)
^^1^1^3100326^
"KRN",8994,123577,2,1,1,1,0)
MAGPARAM(PK") = IEN in STORAGE PROVIDER AVAILABILITY file (#2006.924)
"KRN",8994,123577,2,"B","MAGPARAM",1)

"KRN",8994,123577,2,"PARAMSEQ",1,1)

"KRN",8994,123577,3,0)
^^2^2^3100326^
"KRN",8994,123577,3,1,0)
if error MAGRY = Failure status ^ Error message
"KRN",8994,123577,3,2,0)
 if success MAGRY = Success status 
"KRN",8994,123578,-1)
0^103
"KRN",8994,123578,0)
MAGVA DELETE RETPOL PROV MAP^DELRPPM^MAGVAD01^1^R^0
"KRN",8994,123578,1,0)
^^1^1^3100326^
"KRN",8994,123578,1,1,0)
Delete a record in RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"KRN",8994,123578,2,0)
^8994.02A^1^1
"KRN",8994,123578,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123578,2,1,1,0)
^^1^1^3100326^
"KRN",8994,123578,2,1,1,1,0)
MAGPARAM(PK")      = IEN in RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923) 
"KRN",8994,123578,2,"B","MAGPARAM",1)

"KRN",8994,123578,2,"PARAMSEQ",1,1)

"KRN",8994,123578,3,0)
^^2^2^3100326^
"KRN",8994,123578,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123578,3,2,0)
 if success MAGRY = Success status 
"KRN",8994,123579,-1)
0^104
"KRN",8994,123579,0)
MAGVA DEQUEUE Q MSG^DEQM^MAGVAQ01^2^R^0
"KRN",8994,123579,1,0)
^8994.01^6^6^3100402^^^
"KRN",8994,123579,1,1,0)
 Find, return and remove a message from the QUEUE MESSAGE file (#2006.928)
"KRN",8994,123579,1,2,0)
 by QUEUE FK - IEN of record in QUEUE file (#2006.927)
"KRN",8994,123579,1,3,0)
 and by MESSAGE GROUP ID.
"KRN",8994,123579,1,4,0)
 If "MESSAGE GROUP ID" equals "*" it ignores "MESSAGE GROUP ID".
"KRN",8994,123579,1,5,0)
 If "MESSAGE GROUP ID" equals "" it looks only at queue messages with blank "MESSAGE GROUP ID".
"KRN",8994,123579,1,6,0)
 Otherwise looks at queue messages with MESSAGE GROUP ID
"KRN",8994,123579,2,0)
^8994.02A^1^1
"KRN",8994,123579,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123579,2,1,1,0)
^^3^3^3100402^
"KRN",8994,123579,2,1,1,1,0)
MAGPARAM("QUEUE") = IEN in QUEUE file (#2006.927)
"KRN",8994,123579,2,1,1,2,0)
MAGPARAM("MESSAGE GROUP ID") = value of the field "MESSAGE GROUP ID"
"KRN",8994,123579,2,1,1,3,0)
                               in QUEUE file (#2006.927) or "*" or ""
"KRN",8994,123579,2,"B","MAGPARAM",1)

"KRN",8994,123579,2,"PARAMSEQ",1,1)

"KRN",8994,123579,3,0)
^8994.03^5^5^3100402^^
"KRN",8994,123579,3,1,0)
 if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123579,3,2,0)
 if success MAGRY(0) = Success status ^^IEN
"KRN",8994,123579,3,3,0)
            MAGRY(1..n) = The QUEUE MESSAGE
"KRN",8994,123579,3,4,0)
            
"KRN",8994,123579,3,5,0)
            if IEN equals 0 that means nothing was found
"KRN",8994,123580,-1)
0^105
"KRN",8994,123580,0)
MAGVA ENQUEUE Q MSG^ADDQM^MAGVAQ01^1^R^0
"KRN",8994,123580,1,0)
^8994.01^1^1^3100331^
"KRN",8994,123580,1,1,0)
Add a record to QUEUE MESSAGE file (#2006.928)
"KRN",8994,123580,2,0)
^8994.02A^2^2
"KRN",8994,123580,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123580,2,1,1,0)
^^6^6^3100331^
"KRN",8994,123580,2,1,1,1,0)
MAGPARAM("EXPIRATION DATETIME")
"KRN",8994,123580,2,1,1,2,0)
 MAGPARAM("EARLIEST DELIVERY DATE/TIME")
"KRN",8994,123580,2,1,1,3,0)
 MAGPARAM("PRIORITY") = 1..99
"KRN",8994,123580,2,1,1,4,0)
 MAGPARAM("QUEUE") = Pointer to QUEUE file (#2006.927)
"KRN",8994,123580,2,1,1,5,0)
 MAGPARAM("MESSAGE GROUP ID") = value of the field "MESSAGE GROUP ID"
"KRN",8994,123580,2,1,1,6,0)
                                 in QUEUE file (#2006.927) or "*" or ""
"KRN",8994,123580,2,2,0)
MAGMSG^2^^1^2
"KRN",8994,123580,2,2,1,0)
^^1^1^3100331^
"KRN",8994,123580,2,2,1,1,0)
MAGMSG(1..n)= MESSAGE
"KRN",8994,123580,2,"B","MAGMSG",2)

"KRN",8994,123580,2,"B","MAGPARAM",1)

"KRN",8994,123580,2,"PARAMSEQ",1,1)

"KRN",8994,123580,2,"PARAMSEQ",2,2)

"KRN",8994,123580,3,0)
^^2^2^3100331^
"KRN",8994,123580,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123580,3,2,0)
 if success MAGRY = Success status ^^IEN - IEN of the new record 
"KRN",8994,123581,-1)
0^106
"KRN",8994,123581,0)
MAGVA FIND KEYLIST^FINDKEYS^MAGVAKL1^2^R^0
"KRN",8994,123581,1,0)
^8994.01^1^1^3100308^
"KRN",8994,123581,1,1,0)
Return a list with all KEYS IENS that meet the keys provided
"KRN",8994,123581,2,0)
^8994.02A^1^1
"KRN",8994,123581,2,1,0)
KLIST^2^^1^1
"KRN",8994,123581,2,1,1,0)
^^4^4^3100308^
"KRN",8994,123581,2,1,1,1,0)
KLIST(1) = First Key
"KRN",8994,123581,2,1,1,2,0)
 KLIST(2) = Second Key
"KRN",8994,123581,2,1,1,3,0)
 ...
"KRN",8994,123581,2,1,1,4,0)
 KLIST(N) = N-th Key
"KRN",8994,123581,2,"B","KLIST",1)

"KRN",8994,123581,2,"PARAMSEQ",1,1)

"KRN",8994,123581,3,0)
^^4^4^3100308^
"KRN",8994,123581,3,1,0)
if error MAGRY(0) =  Failure status ^ Error message
"KRN",8994,123581,3,2,0)
 if success MAGRY(0) = Success status 
"KRN",8994,123581,3,3,0)
           MAGRY(1..n) = IEN of the record in ARTIFACT KEYLIST file (#2006.913) that matches the request
"KRN",8994,123581,3,4,0)
            
"KRN",8994,123582,-1)
0^107
"KRN",8994,123582,0)
MAGVA GET A AIS ARPS AND RPFFS^GAKISRPT^MAGVAG02^2^R^0
"KRN",8994,123582,1,0)
^^7^7^3100325^
"KRN",8994,123582,1,1,0)
 Get artifact values with key list and artifact instance and
"KRN",8994,123582,1,2,0)
 artifact retention policy and fulfillment
"KRN",8994,123582,1,3,0)
 from ARTIFACT file (#2006.916)
"KRN",8994,123582,1,4,0)
 & ARTIFACT KEYLIST file (#2006.913), ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123582,1,5,0)
 ARTIFACT RETENTION POLICY file (#2006.921)
"KRN",8994,123582,1,6,0)
 and RETENTION POLICY FULFILLMENT file (#2006.922)
"KRN",8994,123582,1,7,0)
 by artifact token
"KRN",8994,123582,2,0)
^8994.02A^1^1
"KRN",8994,123582,2,1,0)
TOKEN^1^^1^1
"KRN",8994,123582,2,1,1,0)
^^1^1^3100325^
"KRN",8994,123582,2,1,1,1,0)
TOKEN = Artifact token
"KRN",8994,123582,2,"B","TOKEN",1)

"KRN",8994,123582,2,"PARAMSEQ",1,1)

"KRN",8994,123582,3,0)
^^33^33^3100325^
"KRN",8994,123582,3,1,0)
 if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123582,3,2,0)
 if success MAGRY(0) =Success status 
"KRN",8994,123582,3,3,0)
            MAGRY(1..n) XML based result in format
"KRN",8994,123582,3,4,0)
            <?xml version="1.0" encoding="utf-8"?>
"KRN",8994,123582,3,5,0)
            <artifacts>
"KRN",8994,123582,3,6,0)
              <artifact
"KRN",8994,123582,3,7,0)
                id=""
"KRN",8994,123582,3,8,0)
                token=""
"KRN",8994,123582,3,9,0)
                size=""
"KRN",8994,123582,3,10,0)
                keyListFK=""
"KRN",8994,123582,3,11,0)
                createdDateTime=""
"KRN",8994,123582,3,12,0)
                lastAccessDateTime=""
"KRN",8994,123582,3,13,0)
                crc="">
"KRN",8994,123582,3,14,0)
                <keys>
"KRN",8994,123582,3,15,0)
                  <key kvalue="" klevel="" />
"KRN",8994,123582,3,16,0)
                   ...
"KRN",8994,123582,3,17,0)
                  <key kvalue="" klevel="" />
"KRN",8994,123582,3,18,0)
                </keys>
"KRN",8994,123582,3,19,0)
                <artifact Instances>
"KRN",8994,123582,3,20,0)
                 <artifact Instance>
"KRN",8994,123582,3,21,0)
                 ....
"KRN",8994,123582,3,22,0)
                 <artifact Instance>
"KRN",8994,123582,3,23,0)
                </artifact Instances>
"KRN",8994,123582,3,24,0)
                <artifact Retention policy>
"KRN",8994,123582,3,25,0)
                 <artifact Retention policy fulfillments>
"KRN",8994,123582,3,26,0)
                   <artifact Retention policy fulfillment>
"KRN",8994,123582,3,27,0)
                   ...
"KRN",8994,123582,3,28,0)
                   <artifact Retention policy fulfillment>
"KRN",8994,123582,3,29,0)
                   ...
"KRN",8994,123582,3,30,0)
                 </artifact Retention policy fulfillments>
"KRN",8994,123582,3,31,0)
                </artifact Retention policy>
"KRN",8994,123582,3,32,0)
              </artifact>
"KRN",8994,123582,3,33,0)
            </artifacts>
"KRN",8994,123583,-1)
0^108
"KRN",8994,123583,0)
MAGVA GET A W KL AND AIS^GAKLAIST^MAGVAG02^2^R^0
"KRN",8994,123583,1,0)
^8994.01^4^4^3100326^^
"KRN",8994,123583,1,1,0)
 Get artifact values with key list and artifact instance
"KRN",8994,123583,1,2,0)
 from ARTIFACT file (#2006.916)
"KRN",8994,123583,1,3,0)
 & ARTIFACT KEYLIST file (#2006.913) and ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123583,1,4,0)
 by artifact token
"KRN",8994,123583,2,0)
^8994.02A^1^1
"KRN",8994,123583,2,1,0)
TOKEN^1^^1^1
"KRN",8994,123583,2,1,1,0)
^8994.021^1^1^3100326^^
"KRN",8994,123583,2,1,1,1,0)
TOKEN = Artifact token
"KRN",8994,123583,2,"B","TOKEN",1)

"KRN",8994,123583,2,"PARAMSEQ",1,1)

"KRN",8994,123583,3,0)
^8994.03^25^25^3100326^^
"KRN",8994,123583,3,1,0)
  if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123583,3,2,0)
  if success MAGRY(0) = Success status 
"KRN",8994,123583,3,3,0)
            MAGRY(1..n) XML based result in format
"KRN",8994,123583,3,4,0)
             <?xml version="1.0" encoding="utf-8"?>
"KRN",8994,123583,3,5,0)
            <artifacts>
"KRN",8994,123583,3,6,0)
               <artifact
"KRN",8994,123583,3,7,0)
                 id=""
"KRN",8994,123583,3,8,0)
                token=""
"KRN",8994,123583,3,9,0)
                 size=""
"KRN",8994,123583,3,10,0)
                 keyListFK=""
"KRN",8994,123583,3,11,0)
                 createdDateTime=""
"KRN",8994,123583,3,12,0)
                 lastAccessDateTime=""
"KRN",8994,123583,3,13,0)
                 crc="">
"KRN",8994,123583,3,14,0)
                <keys>
"KRN",8994,123583,3,15,0)
                  <key kvalue="" klevel="" />
"KRN",8994,123583,3,16,0)
                    ...
"KRN",8994,123583,3,17,0)
                   <key kvalue="" klevel="" />
"KRN",8994,123583,3,18,0)
                 </keys>
"KRN",8994,123583,3,19,0)
                 <artifact Instances>
"KRN",8994,123583,3,20,0)
                  <artifact Instance>
"KRN",8994,123583,3,21,0)
                  ....
"KRN",8994,123583,3,22,0)
                <artifact Instance>
"KRN",8994,123583,3,23,0)
               </artifact Instances>
"KRN",8994,123583,3,24,0)
            </artifact>
"KRN",8994,123583,3,25,0)
             </artifacts>
"KRN",8994,123584,-1)
0^109
"KRN",8994,123584,0)
MAGVA GET A W KL AND AIS BY KL^GAKLAISK^MAGVAG02^2^R^0
"KRN",8994,123584,1,0)
^8994.01^4^4^3100325^^
"KRN",8994,123584,1,1,0)
 Get artifact values with key list and artifact instance
"KRN",8994,123584,1,2,0)
 from ARTIFACT file (#2006.916)
"KRN",8994,123584,1,3,0)
 & ARTIFACT KEYLIST file (#2006.913) and ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123584,1,4,0)
 by artifact KEYLIST
"KRN",8994,123584,2,0)
^8994.02A^1^1
"KRN",8994,123584,2,1,0)
KLIST^2^^1^1
"KRN",8994,123584,2,1,1,0)
^^5^5^3100325^
"KRN",8994,123584,2,1,1,1,0)
 KLIST(1) = First level Key
"KRN",8994,123584,2,1,1,2,0)
 KLIST(2) = Second level Key
"KRN",8994,123584,2,1,1,3,0)
   ...
"KRN",8994,123584,2,1,1,4,0)
 KLIST(N) = N-th level Key
"KRN",8994,123584,2,1,1,5,0)
 Any level is optional
"KRN",8994,123584,2,"B","KLIST",1)

"KRN",8994,123584,2,"PARAMSEQ",1,1)

"KRN",8994,123584,3,0)
^8994.03^26^26^3100325^^
"KRN",8994,123584,3,1,0)
 if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123584,3,2,0)
 if success MAGRY(0) = Success status 
"KRN",8994,123584,3,3,0)
            MAGRY(1..n) XML based result in format
"KRN",8994,123584,3,4,0)
            <?xml version="1.0" encoding="utf-8"?>
"KRN",8994,123584,3,5,0)
            <artifacts>
"KRN",8994,123584,3,6,0)
              <artifact
"KRN",8994,123584,3,7,0)
                id=""
"KRN",8994,123584,3,8,0)
                token=""
"KRN",8994,123584,3,9,0)
                size=""
"KRN",8994,123584,3,10,0)
                keyListFK=""
"KRN",8994,123584,3,11,0)
                createdDateTime=""
"KRN",8994,123584,3,12,0)
                lastAccessDateTime=""
"KRN",8994,123584,3,13,0)
                crc="">
"KRN",8994,123584,3,14,0)
                <keys>
"KRN",8994,123584,3,15,0)
                  <key kvalue="" klevel="" />
"KRN",8994,123584,3,16,0)
                   ...
"KRN",8994,123584,3,17,0)
                  <key kvalue="" klevel="" />
"KRN",8994,123584,3,18,0)
                </keys>
"KRN",8994,123584,3,19,0)
                <artifact Instances>
"KRN",8994,123584,3,20,0)
                 <artifact Instance>
"KRN",8994,123584,3,21,0)
                 ....
"KRN",8994,123584,3,22,0)
                 <artifact Instance>
"KRN",8994,123584,3,23,0)
                </artifact Instances>
"KRN",8994,123584,3,24,0)
              </artifact>
"KRN",8994,123584,3,25,0)
              ...
"KRN",8994,123584,3,26,0)
            </artifacts>
"KRN",8994,123585,-1)
0^110
"KRN",8994,123585,0)
MAGVA GET A W KL AND AIS BY PK^GAKLAISP^MAGVAG02^2^R^0
"KRN",8994,123585,1,0)
^^4^4^3100324^
"KRN",8994,123585,1,1,0)
 Get artifact values with key list and artifact instance
"KRN",8994,123585,1,2,0)
 from ARTIFACT file (#2006.916)
"KRN",8994,123585,1,3,0)
 & ARTIFACT KEYLIST file (#2006.913) and ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123585,1,4,0)
 by artifact PK (IEN)
"KRN",8994,123585,2,0)
^8994.02A^1^1
"KRN",8994,123585,2,1,0)
IEN^1^^1^1
"KRN",8994,123585,2,1,1,0)
^^1^1^3100324^
"KRN",8994,123585,2,1,1,1,0)
Artifact PK
"KRN",8994,123585,2,"B","IEN",1)

"KRN",8994,123585,2,"PARAMSEQ",1,1)

"KRN",8994,123585,3,0)
^^25^25^3100324^
"KRN",8994,123585,3,1,0)
  if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123585,3,2,0)
  if success MAGRY(0) = Success status 
"KRN",8994,123585,3,3,0)
             MAGRY(1..n) XML based result in format
"KRN",8994,123585,3,4,0)
             <?xml version="1.0" encoding="utf-8"?>
"KRN",8994,123585,3,5,0)
             <artifacts>
"KRN",8994,123585,3,6,0)
               <artifact
"KRN",8994,123585,3,7,0)
                 id=""
"KRN",8994,123585,3,8,0)
                 token=""
"KRN",8994,123585,3,9,0)
                 size=""
"KRN",8994,123585,3,10,0)
                 keyListFK=""
"KRN",8994,123585,3,11,0)
                 createdDateTime=""
"KRN",8994,123585,3,12,0)
                 lastAccessDateTime=""
"KRN",8994,123585,3,13,0)
                 crc="">
"KRN",8994,123585,3,14,0)
                 <keys>
"KRN",8994,123585,3,15,0)
                   <key kvalue="" klevel="" />
"KRN",8994,123585,3,16,0)
                    ...
"KRN",8994,123585,3,17,0)
                   <key kvalue="" klevel="" />
"KRN",8994,123585,3,18,0)
                 </keys>
"KRN",8994,123585,3,19,0)
                 <artifact Instances>
"KRN",8994,123585,3,20,0)
                  <artifact Instance>
"KRN",8994,123585,3,21,0)
                  ....
"KRN",8994,123585,3,22,0)
                  <artifact Instance>
"KRN",8994,123585,3,23,0)
                 </artifact Instances>
"KRN",8994,123585,3,24,0)
               </artifact>
"KRN",8994,123585,3,25,0)
             </artifacts>
"KRN",8994,123586,-1)
0^111
"KRN",8994,123586,0)
MAGVA GET ALL ADS^GETAD^MAGVAG01^2^R^0
"KRN",8994,123586,1,0)
^8994.01^1^1^3100318^^
"KRN",8994,123586,1,1,0)
Returns all records in ARTIFACT DESCRIPTOR file (#2006.915)
"KRN",8994,123586,3,0)
^^6^6^3100318^
"KRN",8994,123586,3,1,0)
 if error found during execution
"KRN",8994,123586,3,2,0)
    MAGRY(0) = Failure status ^ Error getting the list
"KRN",8994,123586,3,3,0)
 if success
"KRN",8994,123586,3,4,0)
    MAGRY(0)    = "1^^#CNT" - where #CNT is a number of records returned
"KRN",8994,123586,3,5,0)
    MAGRY(1)    = "^" delimited string with all field names in ARTIFACT DESCRIPTOR
"KRN",8994,123586,3,6,0)
    MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"KRN",8994,123587,-1)
0^112
"KRN",8994,123587,0)
MAGVA GET ALL PROVAVAILS^GETPA^MAGVAG01^2^R^0
"KRN",8994,123587,1,0)
^8994.01^1^1^3100312^
"KRN",8994,123587,1,1,0)
Returns all records in STORAGE PROVIDER AVAILABILITY file (#2006.924).
"KRN",8994,123587,3,0)
^^6^6^3100312^
"KRN",8994,123587,3,1,0)
  if error found during execution
"KRN",8994,123587,3,2,0)
    MAGRY(0) = Failure status ^ Error getting the list
"KRN",8994,123587,3,3,0)
  if success
"KRN",8994,123587,3,4,0)
    MAGRY(0)    = "1^#CNT" - where #CNT is a number of records returned
"KRN",8994,123587,3,5,0)
    MAGRY(1)    = "^" delimited string with all field names in STORAGE PROVIDER AVAILABILITY file (#2006.924)
"KRN",8994,123587,3,6,0)
    MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1)
"KRN",8994,123588,-1)
0^113
"KRN",8994,123588,0)
MAGVA GET ALL PROVIDERS^GETP^MAGVAG01^2^R^0
"KRN",8994,123588,1,0)
^8994.01^1^1^3100322^
"KRN",8994,123588,1,1,0)
Returns all records in STORAGE PPROVIDER file (#2006.917)
"KRN",8994,123588,3,0)
^^6^6^3100322^
"KRN",8994,123588,3,1,0)
 if error found during execution
"KRN",8994,123588,3,2,0)
    MAGRY(0) = Failure status ^ Error getting the list
"KRN",8994,123588,3,3,0)
  if success
"KRN",8994,123588,3,4,0)
    MAGRY(0)    = "1^^#CNT" - where #CNT is a number of records returned
"KRN",8994,123588,3,5,0)
    MAGRY(1)    = "^" delimited string with all field names in PROVIDER file 
"KRN",8994,123588,3,6,0)
    MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"KRN",8994,123589,-1)
0^114
"KRN",8994,123589,0)
MAGVA GET ALL QUEUES^GETQUEUE^MAGVAQ01^2^R^0
"KRN",8994,123589,1,0)
^^1^1^3100402^
"KRN",8994,123589,1,1,0)
Returns all records in QUEUE file (#2006.927)
"KRN",8994,123589,3,0)
^^6^6^3100402^
"KRN",8994,123589,3,1,0)
 if error found during execution
"KRN",8994,123589,3,2,0)
   MAGRY(0) = Failure status ^ Error getting the list
"KRN",8994,123589,3,3,0)
 if success
"KRN",8994,123589,3,4,0)
   MAGRY(0)    = Success status ^^#CNT - where #CNT is a number of records returned
"KRN",8994,123589,3,5,0)
   MAGRY(1)    = "^" delimited string with all field names in Queue 
"KRN",8994,123589,3,6,0)
   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"KRN",8994,123590,-1)
0^115
"KRN",8994,123590,0)
MAGVA GET ALL RETPOL PROV MAPS^GETRPPM^MAGVAG01^2^R^0
"KRN",8994,123590,1,0)
^^1^1^3100326^
"KRN",8994,123590,1,1,0)
Returns all records in RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"KRN",8994,123590,3,0)
^^6^6^3100326^
"KRN",8994,123590,3,1,0)
 if error found during execution
"KRN",8994,123590,3,2,0)
  MAGRY(0) = Failure status ^ Error getting the list
"KRN",8994,123590,3,3,0)
 if success
"KRN",8994,123590,3,4,0)
  MAGRY(0)    = Success status ^^#CNT - where #CNT is a number of records returned
"KRN",8994,123590,3,5,0)
  MAGRY(1)    = "^" delimited string with all field names in RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"KRN",8994,123590,3,6,0)
  MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"KRN",8994,123591,-1)
0^116
"KRN",8994,123591,0)
MAGVA GET ALL RETPOLS^GETRP^MAGVAG01^2^R^0
"KRN",8994,123591,1,0)
^8994.01^1^1^3100318^^
"KRN",8994,123591,1,1,0)
 Returns all records in RETENTION POLICY file (#2006.914)
"KRN",8994,123591,3,0)
^^6^6^3100318^
"KRN",8994,123591,3,1,0)
 if error found during execution
"KRN",8994,123591,3,2,0)
   MAGRY(0) = Failure status ^ Error getting the list
"KRN",8994,123591,3,3,0)
 if success
"KRN",8994,123591,3,4,0)
   MAGRY(0)    = "1^#CNT" - where #CNT is a number of records returned
"KRN",8994,123591,3,5,0)
   MAGRY(1)    = "^" delimited string with all field names in RETENTION POLICY file (#2006.914)
"KRN",8994,123591,3,6,0)
   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"KRN",8994,123592,-1)
0^117
"KRN",8994,123592,0)
MAGVA GET ALL SITE PARAM IDS^GALLISP^MAGVAG03^2^R^0
"KRN",8994,123592,1,0)
^^1^1^3100420^
"KRN",8994,123592,1,1,0)
Returns site information from IMAGING SITE PARAMETERS file (#2006.1)
"KRN",8994,123592,3,0)
^^6^6^3100420^
"KRN",8994,123592,3,1,0)
 if error found during execution
"KRN",8994,123592,3,2,0)
  MAGRY(0) = Failure status ^ Error message
"KRN",8994,123592,3,3,0)
 if success
"KRN",8994,123592,3,4,0)
  MAGRY(0) = Success status ^^#CNT" - where #CNT is a number of records returned
"KRN",8994,123592,3,5,0)
  MAGRY(1) = "PK^Site IEN^Site Number^Site Name^Net UserName^Net Password"
"KRN",8994,123592,3,6,0)
  MAGRY(2..n) = IEN ^ Site IEN ^ Site Number ^ Site Name ^ Net UserName ^ Net Password
"KRN",8994,123593,-1)
0^118
"KRN",8994,123593,0)
MAGVA GET ARTIFACT W KL^GAKLT^MAGVAG02^2^R^0
"KRN",8994,123593,1,0)
^8994.01^2^2^3100319^
"KRN",8994,123593,1,1,0)
 Get artifact values with key list from ARTIFACT file (#2006.916)
"KRN",8994,123593,1,2,0)
 & ARTIFACT KEYLIST file (#2006.913) by artifact token
"KRN",8994,123593,2,0)
^8994.02A^1^1
"KRN",8994,123593,2,1,0)
TOKEN^1^^1^1
"KRN",8994,123593,2,1,1,0)
^^1^1^3100319^
"KRN",8994,123593,2,1,1,1,0)
TOKEN = Artifact token
"KRN",8994,123593,2,"B","TOKEN",1)

"KRN",8994,123593,2,"PARAMSEQ",1,1)

"KRN",8994,123593,3,0)
^^20^20^3100319^
"KRN",8994,123593,3,1,0)
 if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123593,3,2,0)
 if success MAGRY(0) = Success status 
"KRN",8994,123593,3,3,0)
            MAGRY(1..n) XML based result in format
"KRN",8994,123593,3,4,0)
            <?xml version="1.0" encoding="utf-8"?>
"KRN",8994,123593,3,5,0)
             <artifacts>
"KRN",8994,123593,3,6,0)
               <artifact
"KRN",8994,123593,3,7,0)
                 id=""
"KRN",8994,123593,3,8,0)
                 token=""
"KRN",8994,123593,3,9,0)
                 size=""
"KRN",8994,123593,3,10,0)
                 keyListFK
"KRN",8994,123593,3,11,0)
                 createdDateTime=""
"KRN",8994,123593,3,12,0)
                 lastAccessDateTime=""
"KRN",8994,123593,3,13,0)
                 crc="">
"KRN",8994,123593,3,14,0)
                 <keys>
"KRN",8994,123593,3,15,0)
                   <key kvalue="" klevel="" />
"KRN",8994,123593,3,16,0)
                    ...
"KRN",8994,123593,3,17,0)
                   <key kvalue="" klevel />
"KRN",8994,123593,3,18,0)
                 </keys>
"KRN",8994,123593,3,19,0)
               </artifact>
"KRN",8994,123593,3,20,0)
             </artifacts>
"KRN",8994,123594,-1)
0^119
"KRN",8994,123594,0)
MAGVA GET CWL^GETCWL^MAGVAG03^2^R^0
"KRN",8994,123594,1,0)
^^1^1^3100414^
"KRN",8994,123594,1,1,0)
Returns Current Write Location by place
"KRN",8994,123594,2,0)
^8994.02A^1^1
"KRN",8994,123594,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123594,2,1,1,0)
^^3^3^3100414^
"KRN",8994,123594,2,1,1,1,0)
MAGPARAM("STATION NUMBER") = STATION NUMBER field (#4,99) in INSTITUTION file (#4)
"KRN",8994,123594,2,1,1,2,0)
 or
"KRN",8994,123594,2,1,1,3,0)
 MAGPARAM("INSTITUTION IEN") = IEN in INSTITUTION file (#4)
"KRN",8994,123594,2,"B","MAGPARAM",1)

"KRN",8994,123594,2,"PARAMSEQ",1,1)

"KRN",8994,123594,3,0)
^^7^7^3100414^
"KRN",8994,123594,3,1,0)
 if error found during execution
"KRN",8994,123594,3,2,0)
  MAGRY(0) = Failure status ^ Error message
"KRN",8994,123594,3,3,0)
 if success
"KRN",8994,123594,3,4,0)
  MAGRY(0) = Success status ^^1
"KRN",8994,123594,3,5,0)
  MAGRY(1) = NETWORK LOCATION IEN ^ PHYSICAL REFERENCE ^ USER NAME ^ PASSWORD ^ PLACE
"KRN",8994,123594,3,6,0)
  MAGRY(2) = IEN in NETWORK LOCATION file (#2005.2) ^ PHYSICAL REFERENCE (WRITE LOCATION) (#2005.2,1)
"KRN",8994,123594,3,7,0)
  MAGRY(2) = ^ USER NAME (#2005.2,15) ^ PASSWORD (#2005.2,16) ^ IEN in IMAGING SITE PARAMETERS file (#2006.1)
"KRN",8994,123595,-1)
0^120
"KRN",8994,123595,0)
MAGVA GET JUKEBOX WL^GETJBXWL^MAGVAG03^2^R^0
"KRN",8994,123595,1,0)
^^1^1^3100419^
"KRN",8994,123595,1,1,0)
Returns Jukebox Write Location by Station number or Institution IEN
"KRN",8994,123595,2,0)
^8994.02A^1^1
"KRN",8994,123595,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123595,2,1,1,0)
^^3^3^3100419^
"KRN",8994,123595,2,1,1,1,0)
 MAGPARAM("STATION NUMBER") = STATION NUMBER field (#4,99) in INSTITUTION file (#4)
"KRN",8994,123595,2,1,1,2,0)
 or
"KRN",8994,123595,2,1,1,3,0)
 MAGPARAM("INSTITUTION IEN") = IEN in INSTITUTION file (#4)
"KRN",8994,123595,2,"B","MAGPARAM",1)

"KRN",8994,123595,2,"PARAMSEQ",1,1)

"KRN",8994,123595,3,0)
^^7^7^3100419^
"KRN",8994,123595,3,1,0)
 if error found during execution
"KRN",8994,123595,3,2,0)
  MAGRY(0) = Failure status ^ Error message
"KRN",8994,123595,3,3,0)
 if success
"KRN",8994,123595,3,4,0)
  MAGRY(0) = Success status ^^1
"KRN",8994,123595,3,5,0)
  MAGRY(1) = NETWORK LOCATION IEN ^ PHYSICAL REFERENCE ^ USER NAME ^ PASSWORD ^ PLACE
"KRN",8994,123595,3,6,0)
 MAGRY(2) = IEN in NETWORK LOCATION file (#2005.2) ^ PHYSICAL REFERENCE (WRITE LOCATION) (#2005.2,1)
"KRN",8994,123595,3,7,0)
            ^ USER NAME (#2005.2,15) ^ PASSWORD (#2005.2,16) ^ IEN in IMAGING SITE PARAMETERS file (#2006.1)
"KRN",8994,123596,-1)
0^121
"KRN",8994,123596,0)
MAGVA GET KEYLIST^GETKL^MAGVAKL1^2^R^0
"KRN",8994,123596,1,0)
^^1^1^3100318^
"KRN",8994,123596,1,1,0)
 Returns a key list by IEN in ARTIFACT KEYLIST file (#2006.913)
"KRN",8994,123596,2,0)
^8994.02A^1^1
"KRN",8994,123596,2,1,0)
MAGDA^1^^1^1
"KRN",8994,123596,2,1,1,0)
^8994.021^1^1^3100318^^
"KRN",8994,123596,2,1,1,1,0)
MAGDA = IEN in ARTIFACT KEYLIST file (#2006.913)
"KRN",8994,123596,2,"B","MAGDA",1)

"KRN",8994,123596,2,"PARAMSEQ",1,1)

"KRN",8994,123596,3,0)
^^7^7^3100318^
"KRN",8994,123596,3,1,0)
 if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123596,3,2,0)
 if success
"KRN",8994,123596,3,3,0)
  MAGRY(0) = Success status ^^Number of KEYLIST depth       
"KRN",8994,123596,3,4,0)
  MAGRY(1) = Level one Key
"KRN",8994,123596,3,5,0)
  MAGRY(2) = Level two Key
"KRN",8994,123596,3,6,0)
   ...
"KRN",8994,123596,3,7,0)
  MAGRY(N) = Level N-th Key
"KRN",8994,123597,-1)
0^122
"KRN",8994,123597,0)
MAGVA GET NET LOC DETAILS^GETNLOCD^MAGVAG03^2^R^0
"KRN",8994,123597,1,0)
^^2^2^3100415^
"KRN",8994,123597,1,1,0)
 Returns PHYSICAL REFERENCE (WRITE LOCATION)
"KRN",8994,123597,1,2,0)
 by IEN in NETWORK LOCATION file (#2005.2)
"KRN",8994,123597,2,0)
^8994.02A^1^1
"KRN",8994,123597,2,1,0)
NLOCIEN^1^^1^1
"KRN",8994,123597,2,1,1,0)
^^1^1^3100415^
"KRN",8994,123597,2,1,1,1,0)
NLOCIEN = IEN in NETWORK LOCATION file (#2005.2) 
"KRN",8994,123597,2,"B","NLOCIEN",1)

"KRN",8994,123597,2,"PARAMSEQ",1,1)

"KRN",8994,123597,3,0)
^^6^6^3100415^
"KRN",8994,123597,3,1,0)
 if error found during execution
"KRN",8994,123597,3,2,0)
  MAGRY(0) = Failure status ^ Error message
"KRN",8994,123597,3,3,0)
 if success
"KRN",8994,123597,3,4,0)
  MAGRY(0) = Success status ^^1
"KRN",8994,123597,3,5,0)
  MAGRY(1) = PHYSICAL REFERENCE ^ USER NAME ^ PASSWORD ^ OPERATIONAL STATUS ^ PLACE
"KRN",8994,123597,3,6,0)
  MAGRY(2) = PHYSICAL REFERENCE (WRITE LOCATION) ^ USER NAME (15) ^ PASSWORD (16) ^ OPERATIONAL STATUS (5)^ PLACE(.04)
"KRN",8994,123598,-1)
0^123
"KRN",8994,123598,0)
MAGVA PEEK Q MSG^PEEKQM^MAGVAQ01^2^R^0
"KRN",8994,123598,1,0)
^^6^6^3100402^
"KRN",8994,123598,1,1,0)
 Get a queue message from the QUEUE MESSAGE file (#2006.928)
"KRN",8994,123598,1,2,0)
 by QUEUE - IEN of record in QUEUE file (#2006.927)
"KRN",8994,123598,1,3,0)
 and by MESSAGE GROUP ID.
"KRN",8994,123598,1,4,0)
 If "MESSAGE GROUP ID" equals "*" it ignores "MESSAGE GROUP ID".
"KRN",8994,123598,1,5,0)
 If "MESSAGE GROUP ID" equals "" it looks only at queue messages with blank "MESSAGE GROUP ID".
"KRN",8994,123598,1,6,0)
 Otherwise looks at queue messages with MESSAGE GROUP ID
"KRN",8994,123598,2,0)
^8994.02A^1^1
"KRN",8994,123598,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123598,2,1,1,0)
^^3^3^3100402^
"KRN",8994,123598,2,1,1,1,0)
MAGPARAM("QUEUE") = IEN in file (#2006.927)
"KRN",8994,123598,2,1,1,2,0)
MAGPARAM("MESSAGE GROUP ID") = value of the field "MESSAGE GROUP ID"
"KRN",8994,123598,2,1,1,3,0)
                                                                   in file (#2006.927) or "*" or ""
"KRN",8994,123598,2,"B","MAGPARAM",1)

"KRN",8994,123598,2,"PARAMSEQ",1,1)

"KRN",8994,123598,3,0)
^^5^5^3100402^
"KRN",8994,123598,3,1,0)
 if error MAGRY(0) = Failure status ^ Error message
"KRN",8994,123598,3,2,0)
 if success MAGRY(0) = Success status ^^IEN
"KRN",8994,123598,3,3,0)
            MAGRY(1..n) = The QUEUE MESSAGE
"KRN",8994,123598,3,4,0)
            
"KRN",8994,123598,3,5,0)
            if IEN equals 0 that means nothing was found
"KRN",8994,123599,-1)
0^124
"KRN",8994,123599,0)
MAGVA SET AD RETPOL^UPDAD^MAGVAU01^1^R^0
"KRN",8994,123599,1,0)
^^1^1^3100318^
"KRN",8994,123599,1,1,0)
Update ARTIFACT DESCRIPTOR file (#2006.915)
"KRN",8994,123599,2,0)
^8994.02A^1^1
"KRN",8994,123599,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123599,2,1,1,0)
^^2^2^3100318^
"KRN",8994,123599,2,1,1,1,0)
 MAGPARAM("PK") = IEN 
"KRN",8994,123599,2,1,1,2,0)
 MAGPARAM("RETENTION POLICY")
"KRN",8994,123599,2,"B","MAGPARAM",1)

"KRN",8994,123599,2,"PARAMSEQ",1,1)

"KRN",8994,123599,3,0)
^^2^2^3100318^
"KRN",8994,123599,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123599,3,2,0)
 if success MAGRY = Success status 
"KRN",8994,123600,-1)
0^125
"KRN",8994,123600,0)
MAGVA UPDATE ARETPOL^UPDARP^MAGVAU01^1^R^0
"KRN",8994,123600,1,0)
^^2^2^3100322^
"KRN",8994,123600,1,1,0)
Update ARTIFACT RETENTION POLICY file (#2006.921)
"KRN",8994,123600,1,2,0)
 If Is Satisfied is passed in as true (1), set SatisfiedDateTime to "NOW".
"KRN",8994,123600,2,0)
^8994.02A^1^1
"KRN",8994,123600,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123600,2,1,1,0)
^^2^2^3100322^
"KRN",8994,123600,2,1,1,1,0)
 MAGPARAM("PK") = IEN of record in  ARTIFACT RETENTION POLICY file (#2006.921)
"KRN",8994,123600,2,1,1,2,0)
 MAGPARAM("ACTIVE") = 0/1
"KRN",8994,123600,2,"B","MAGPARAM",1)

"KRN",8994,123600,2,"PARAMSEQ",1,1)

"KRN",8994,123600,3,0)
^^2^2^3100322^
"KRN",8994,123600,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123600,3,2,0)
 if success MAGRY = Success status 
"KRN",8994,123601,-1)
0^126
"KRN",8994,123601,0)
MAGVA UPDATE ARTIFACT^UPDAFACT^MAGVAU01^1^R^0
"KRN",8994,123601,1,0)
^^1^1^3100418^
"KRN",8994,123601,1,1,0)
Update ARTIFACT file (#2006.916)
"KRN",8994,123601,2,0)
^8994.02A^1^1
"KRN",8994,123601,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123601,2,1,1,0)
^^3^3^3100418^
"KRN",8994,123601,2,1,1,1,0)
 MAGPARAM("PK") = IEN 
"KRN",8994,123601,2,1,1,2,0)
 MAGPARAM("CRC")
"KRN",8994,123601,2,1,1,3,0)
 MAGPARAM("SIZE IN BYTES")
"KRN",8994,123601,2,"B","MAGPARAM",1)

"KRN",8994,123601,2,"PARAMSEQ",1,1)

"KRN",8994,123601,3,0)
^^2^2^3100418^
"KRN",8994,123601,3,1,0)
 if error MAGRY = Failure status ^ Error message^
"KRN",8994,123601,3,2,0)
 if success MAGRY = Success status
"KRN",8994,123602,-1)
0^127
"KRN",8994,123602,0)
MAGVA UPDATE LAST ACCESS DT^UPDLADT^MAGVAU01^1^R^0
"KRN",8994,123602,1,0)
^^3^3^3100322^
"KRN",8994,123602,1,1,0)
 Set the Last Access Date/Time to current date/time
"KRN",8994,123602,1,2,0)
 for artifact instance records in ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123602,1,3,0)
 and ARTIFACT file (#2006.916)
"KRN",8994,123602,2,0)
^8994.02A^1^1
"KRN",8994,123602,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123602,2,1,1,0)
^^1^1^3100322^
"KRN",8994,123602,2,1,1,1,0)
 MAGPARAM("PK") = PK (IEN) of the record in ARTIFACT INSTANCE file (#2006.918)
"KRN",8994,123602,2,"B","MAGPARAM",1)

"KRN",8994,123602,2,"PARAMSEQ",1,1)

"KRN",8994,123602,3,0)
^^2^2^3100322^
"KRN",8994,123602,3,1,0)
  if error MAGRY = Failure status ^ Error message
"KRN",8994,123602,3,2,0)
  if success MAGRY = Success status 
"KRN",8994,123603,-1)
0^128
"KRN",8994,123603,0)
MAGVA UPDATE PROVAVAILTY^UPDPA^MAGVAU01^1^R^0
"KRN",8994,123603,1,0)
^^1^1^3100326^
"KRN",8994,123603,1,1,0)
Update PROVIDER AVAILABILITY file (#2006.924)
"KRN",8994,123603,2,0)
^8994.02A^1^1
"KRN",8994,123603,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123603,2,1,1,0)
^^3^3^3100326^
"KRN",8994,123603,2,1,1,1,0)
 MAGPARAM("PK") = IEN 
"KRN",8994,123603,2,1,1,2,0)
 MAGPARAM("START TIME")
"KRN",8994,123603,2,1,1,3,0)
 MAGPARAM("END TIME")
"KRN",8994,123603,2,"B","MAGPARAM",1)

"KRN",8994,123603,2,"PARAMSEQ",1,1)

"KRN",8994,123603,3,0)
^^2^2^3100326^
"KRN",8994,123603,3,1,0)
  if error MAGRY = Failure status ^ Error message
"KRN",8994,123603,3,2,0)
 if success MAGRY = Success status 
"KRN",8994,123604,-1)
0^129
"KRN",8994,123604,0)
MAGVA UPDATE PROVIDER^UPDPRV^MAGVAU01^1^R^0
"KRN",8994,123604,1,0)
^^1^1^3100316^
"KRN",8994,123604,1,1,0)
Update STORAGE PROVIDER file (#2006.917)
"KRN",8994,123604,2,0)
^8994.02A^1^1
"KRN",8994,123604,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123604,2,1,1,0)
^^6^6^3100316^
"KRN",8994,123604,2,1,1,1,0)
   MAGPARAM("PK") = IEN 
"KRN",8994,123604,2,1,1,2,0)
   MAGPARAM("STORAGE PLACE")
"KRN",8994,123604,2,1,1,3,0)
   MAGPARAM("ARCHIVE")
"KRN",8994,123604,2,1,1,4,0)
   MAGPARAM("PRIMARY STORAGE")
"KRN",8994,123604,2,1,1,5,0)
   MAGPARAM("ACTIVE")
"KRN",8994,123604,2,1,1,6,0)
   MAGPARAM("WRITABLE")
"KRN",8994,123604,2,"B","MAGPARAM",1)

"KRN",8994,123604,2,"PARAMSEQ",1,1)

"KRN",8994,123604,3,0)
^^2^2^3100316^
"KRN",8994,123604,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123604,3,2,0)
  if success MAGRY = Success status 
"KRN",8994,123605,-1)
0^130
"KRN",8994,123605,0)
MAGVA UPDATE RETPOL PROV MAP^UPDRPPM^MAGVAU01^1^R^0
"KRN",8994,123605,1,0)
^^1^1^3100326^
"KRN",8994,123605,1,1,0)
Update RETENTION POLICY PROVIDER MAP file (#2006.923)
"KRN",8994,123605,2,0)
^8994.02A^1^1
"KRN",8994,123605,2,1,0)
MAGPARAM^2^^1^1
"KRN",8994,123605,2,1,1,0)
^^3^3^3100326^
"KRN",8994,123605,2,1,1,1,0)
 MAGPARAM("PK") = IEN 
"KRN",8994,123605,2,1,1,2,0)
 MAGPARAM("SYNCHRONOUS") = 0/1
"KRN",8994,123605,2,1,1,3,0)
 MAGPARAM("OFFSITE") = 0/1
"KRN",8994,123605,2,"B","MAGPARAM",1)

"KRN",8994,123605,2,"PARAMSEQ",1,1)

"KRN",8994,123605,3,0)
^^2^2^3100326^
"KRN",8994,123605,3,1,0)
 if error MAGRY = Failure status ^ Error message
"KRN",8994,123605,3,2,0)
 if success MAGRY = Success status 
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging Release History
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020328^3020328^.5
"PKG",454,22,1,"PAH",1,0)
118^3130501^.5
"PKG",454,22,1,"PAH",1,1,0)
^9.49011^122^122^3130501
"PKG",454,22,1,"PAH",1,1,1,0)
Routines for Patch 118, Test Build 35.
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
Routines:
"PKG",454,22,1,"PAH",1,1,4,0)
MAGDCCS     value = 14748319
"PKG",454,22,1,"PAH",1,1,5,0)
MAGDGMRC    value = 9330669
"PKG",454,22,1,"PAH",1,1,6,0)
MAGDLB1     value = 12761979
"PKG",454,22,1,"PAH",1,1,7,0)
MAGDLB6     value = 3631343
"PKG",454,22,1,"PAH",1,1,8,0)
MAGDMEDJ    value = 10380972
"PKG",454,22,1,"PAH",1,1,9,0)
MAGDQR00    value = 2610540
"PKG",454,22,1,"PAH",1,1,10,0)
MAGDQR01    value = 10215111
"PKG",454,22,1,"PAH",1,1,11,0)
MAGDQR02    value = 14623747
"PKG",454,22,1,"PAH",1,1,12,0)
MAGDQR03    value = 26241944
"PKG",454,22,1,"PAH",1,1,13,0)
MAGDQR04    value = 22474528
"PKG",454,22,1,"PAH",1,1,14,0)
MAGDQR05    value = 12458785
"PKG",454,22,1,"PAH",1,1,15,0)
MAGDQR06    value = 12808429
"PKG",454,22,1,"PAH",1,1,16,0)
MAGDQR07    value = 3462324
"PKG",454,22,1,"PAH",1,1,17,0)
MAGDQR08    value = 11135227
"PKG",454,22,1,"PAH",1,1,18,0)
MAGDQR09    value = 9701238
"PKG",454,22,1,"PAH",1,1,19,0)
MAGDQR10    value = 5838068
"PKG",454,22,1,"PAH",1,1,20,0)
MAGDQR11    value = 4093753
"PKG",454,22,1,"PAH",1,1,21,0)
MAGDQR12    value = 6766715
"PKG",454,22,1,"PAH",1,1,22,0)
MAGDQR13    value = 10738725
"PKG",454,22,1,"PAH",1,1,23,0)
MAGDQR22    value = 5932725
"PKG",454,22,1,"PAH",1,1,24,0)
MAGDQR23    value = 3787648
"PKG",454,22,1,"PAH",1,1,25,0)
MAGDQR31    value = 5530671
"PKG",454,22,1,"PAH",1,1,26,0)
MAGDQR32    value = 4894421
"PKG",454,22,1,"PAH",1,1,27,0)
MAGDQR71    value = 3683372
"PKG",454,22,1,"PAH",1,1,28,0)
MAGDQR72    value = 4232194
"PKG",454,22,1,"PAH",1,1,29,0)
MAGDQR73    value = 4336726
"PKG",454,22,1,"PAH",1,1,30,0)
MAGDQR74    value = 4916336
"PKG",454,22,1,"PAH",1,1,31,0)
MAGDQRUE    value = 3231286
"PKG",454,22,1,"PAH",1,1,32,0)
MAGDQRUL    value = 5075915
"PKG",454,22,1,"PAH",1,1,33,0)
MAGDRPC8    value = 12088901
"PKG",454,22,1,"PAH",1,1,34,0)
MAGDRPC9    value = 15300257
"PKG",454,22,1,"PAH",1,1,35,0)
MAGDRPCA    value = 18858560
"PKG",454,22,1,"PAH",1,1,36,0)
MAGDRPCB    value = 19610086
"PKG",454,22,1,"PAH",1,1,37,0)
MAGFXQRS    value = 3528617
"PKG",454,22,1,"PAH",1,1,38,0)
MAGGTID     value = 15318885
"PKG",454,22,1,"PAH",1,1,39,0)
MAGIP118    value = 16658406
"PKG",454,22,1,"PAH",1,1,40,0)
MAGJUTL6    value = 5235694
"PKG",454,22,1,"PAH",1,1,41,0)
MAGKIDS1    value = 8496976
"PKG",454,22,1,"PAH",1,1,42,0)
MAGUAUD     value = 3432831
"PKG",454,22,1,"PAH",1,1,43,0)
MAGUE001    value = 5265937
"PKG",454,22,1,"PAH",1,1,44,0)
MAGUE002    value = 4127699
"PKG",454,22,1,"PAH",1,1,45,0)
MAGUE004    value = 2837439
"PKG",454,22,1,"PAH",1,1,46,0)
MAGUE005    value = 2768991
"PKG",454,22,1,"PAH",1,1,47,0)
MAGUFFLA    value = 4780171
"PKG",454,22,1,"PAH",1,1,48,0)
MAGUFFLL    value = 3976859
"PKG",454,22,1,"PAH",1,1,49,0)
MAGUPSE     value = 3173130
"PKG",454,22,1,"PAH",1,1,50,0)
MAGURQRS    value = 3271458
"PKG",454,22,1,"PAH",1,1,51,0)
MAGVAC01    value = 9767703
"PKG",454,22,1,"PAH",1,1,52,0)
MAGVAD01    value = 2734865
"PKG",454,22,1,"PAH",1,1,53,0)
MAGVAD02    value = 4280272
"PKG",454,22,1,"PAH",1,1,54,0)
MAGVAF01    value = 13045577
"PKG",454,22,1,"PAH",1,1,55,0)
MAGVAF02    value = 3488127
"PKG",454,22,1,"PAH",1,1,56,0)
MAGVAF03    value = 19053073
"PKG",454,22,1,"PAH",1,1,57,0)
MAGVAF04    value = 2921702
"PKG",454,22,1,"PAH",1,1,58,0)
MAGVAF05    value = 4899077
"PKG",454,22,1,"PAH",1,1,59,0)
MAGVAG01    value = 2797051
"PKG",454,22,1,"PAH",1,1,60,0)
MAGVAG02    value = 12435913
"PKG",454,22,1,"PAH",1,1,61,0)
MAGVAG03    value = 15139645
"PKG",454,22,1,"PAH",1,1,62,0)
MAGVAG04    value = 14868843
"PKG",454,22,1,"PAH",1,1,63,0)
MAGVAKL1    value = 7388351
"PKG",454,22,1,"PAH",1,1,64,0)
MAGVAQ01    value = 16822050
"PKG",454,22,1,"PAH",1,1,65,0)
MAGVAQ02    value = 10394360
"PKG",454,22,1,"PAH",1,1,66,0)
MAGVAU01    value = 5159205
"PKG",454,22,1,"PAH",1,1,67,0)
MAGVD001    value = 7603789
"PKG",454,22,1,"PAH",1,1,68,0)
MAGVD002    value = 4124064
"PKG",454,22,1,"PAH",1,1,69,0)
MAGVD003    value = 4420661
"PKG",454,22,1,"PAH",1,1,70,0)
MAGVD004    value = 4488582
"PKG",454,22,1,"PAH",1,1,71,0)
MAGVD005    value = 3174483
"PKG",454,22,1,"PAH",1,1,72,0)
MAGVD006    value = 5561142
"PKG",454,22,1,"PAH",1,1,73,0)
MAGVD007    value = 3685164
"PKG",454,22,1,"PAH",1,1,74,0)
MAGVD008    value = 3954473
"PKG",454,22,1,"PAH",1,1,75,0)
MAGVD010    value = 5632336
"PKG",454,22,1,"PAH",1,1,76,0)
MAGVDATE    value = 3369336
"PKG",454,22,1,"PAH",1,1,77,0)
MAGVDGWP    value = 17603694
"PKG",454,22,1,"PAH",1,1,78,0)
MAGVGUID    value = 9565266
"PKG",454,22,1,"PAH",1,1,79,0)
MAGVIM01    value = 30059037
"PKG",454,22,1,"PAH",1,1,80,0)
MAGVIM02    value = 13662782
"PKG",454,22,1,"PAH",1,1,81,0)
MAGVIM03    value = 9162433
"PKG",454,22,1,"PAH",1,1,82,0)
MAGVIM04    value = 11718870
"PKG",454,22,1,"PAH",1,1,83,0)
MAGVIM05    value = 15242382
"PKG",454,22,1,"PAH",1,1,84,0)
MAGVIM06    value = 12862098
"PKG",454,22,1,"PAH",1,1,85,0)
MAGVIM07    value = 15335247
"PKG",454,22,1,"PAH",1,1,86,0)
MAGVIM08    value = 4973894
"PKG",454,22,1,"PAH",1,1,87,0)
MAGVIM09    value = 5293910
"PKG",454,22,1,"PAH",1,1,88,0)
MAGVIM10    value = 8365751
"PKG",454,22,1,"PAH",1,1,89,0)
MAGVORDR    value = 7090722
"PKG",454,22,1,"PAH",1,1,90,0)
MAGVRS01    value = 2771259
"PKG",454,22,1,"PAH",1,1,91,0)
MAGVRS04    value = 2988202
"PKG",454,22,1,"PAH",1,1,92,0)
MAGVRS05    value = 2843603
"PKG",454,22,1,"PAH",1,1,93,0)
MAGVRS06    value = 2963783
"PKG",454,22,1,"PAH",1,1,94,0)
MAGVRS07    value = 3017184
"PKG",454,22,1,"PAH",1,1,95,0)
MAGVRS08    value = 13251433
"PKG",454,22,1,"PAH",1,1,96,0)
MAGVRS09    value = 3304082
"PKG",454,22,1,"PAH",1,1,97,0)
MAGVRS11    value = 2822694
"PKG",454,22,1,"PAH",1,1,98,0)
MAGVRS14    value = 3873307
"PKG",454,22,1,"PAH",1,1,99,0)
MAGVRS15    value = 3427655
"PKG",454,22,1,"PAH",1,1,100,0)
MAGVRS21    value = 2823667
"PKG",454,22,1,"PAH",1,1,101,0)
MAGVRS24    value = 4410330
"PKG",454,22,1,"PAH",1,1,102,0)
MAGVRS31    value = 3079264
"PKG",454,22,1,"PAH",1,1,103,0)
MAGVRS41    value = 30228912
"PKG",454,22,1,"PAH",1,1,104,0)
MAGVRS42    value = 12201505
"PKG",454,22,1,"PAH",1,1,105,0)
MAGVRS43    value = 7578338
"PKG",454,22,1,"PAH",1,1,106,0)
MAGVRS44    value = 13926434
"PKG",454,22,1,"PAH",1,1,107,0)
MAGVRS45    value = 5247038
"PKG",454,22,1,"PAH",1,1,108,0)
MAGVRS46    value = 5857183
"PKG",454,22,1,"PAH",1,1,109,0)
MAGVRS51    value = 18061747
"PKG",454,22,1,"PAH",1,1,110,0)
MAGVRS52    value = 9106742
"PKG",454,22,1,"PAH",1,1,111,0)
MAGVRS61    value = 17820732
"PKG",454,22,1,"PAH",1,1,112,0)
MAGVRS71    value = 3184401
"PKG",454,22,1,"PAH",1,1,113,0)
MAGVRS81    value = 8694832
"PKG",454,22,1,"PAH",1,1,114,0)
MAGVRS82    value = 7085769
"PKG",454,22,1,"PAH",1,1,115,0)
MAGVSOPC    value = 4221335
"PKG",454,22,1,"PAH",1,1,116,0)
MAGVSOPU    value = 48817298
"PKG",454,22,1,"PAH",1,1,117,0)
MAGVSTDY    value = 3494166
"PKG",454,22,1,"PAH",1,1,118,0)
MAGVUID     value = 16416361
"PKG",454,22,1,"PAH",1,1,119,0)
MAGVUID1    value = 3192862
"PKG",454,22,1,"PAH",1,1,120,0)
 
"PKG",454,22,1,"PAH",1,1,121,0)
Please note that routine MAGIP118 is deleted after the KIDS Build is
"PKG",454,22,1,"PAH",1,1,122,0)
installed.
"PRE")
MAGIP118
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
116
"RTN","MAGDCCS")
0^1^B66427733
"RTN","MAGDCCS",1,0)
MAGDCCS ;WOIFO/MLH/JSL/SAF - DICOM Correct - Clinical Specialties ; 13 Feb 2012 1:13 PM
"RTN","MAGDCCS",2,0)
 ;;3.0;IMAGING;**10,11,85,54,123,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDCCS",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDCCS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDCCS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDCCS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDCCS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDCCS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDCCS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDCCS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDCCS",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDCCS",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDCCS",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDCCS",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDCCS",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDCCS",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDCCS",17,0)
 ;;
"RTN","MAGDCCS",18,0)
 Q
"RTN","MAGDCCS",19,0)
 ;
"RTN","MAGDCCS",20,0)
L ;Loop thru the entire file for entries that need processing
"RTN","MAGDCCS",21,0)
 ;The "F" xref is set for unique Study UIDs. The entry setting this xref
"RTN","MAGDCCS",22,0)
 ;will also have a "RLATE" node with all the Xray images associated with
"RTN","MAGDCCS",23,0)
 ;that unique Study UID.
"RTN","MAGDCCS",24,0)
 N ANS,ANSR,CASENO,COMNT1,DATA,DATA1,DATA2,DATE,FILE,FIRST,FIRSTS
"RTN","MAGDCCS",25,0)
 N MACHID,MAGDY,MAGDIEN,MAGIEN,MAGTYPE,MSG,START,STOP
"RTN","MAGDCCS",26,0)
 N MOD,MODEL,NEWCAS,NEWDFN,NEWDTI,NEWDTIM,NEWMUL,NEWNME,NEWPID,NEWPIEN,NEWPROC
"RTN","MAGDCCS",27,0)
 N OK,OOUT,OUT,PAT,PID,PP,PREV,PREVS,REASON,STUDYUID,WHY,MAGFIX
"RTN","MAGDCCS",28,0)
 N KFIXALL ; --- does user hold MAGDFIX ALL key
"RTN","MAGDCCS",29,0)
 N GWLOC ; -- gateway site
"RTN","MAGDCCS",30,0)
 ;
"RTN","MAGDCCS",31,0)
 S KFIXALL=$$SECKEY^MAGDLB12()
"RTN","MAGDCCS",32,0)
 I '$D(^MAGD(2006.575,"F")) W !,"Nothing to process!" Q
"RTN","MAGDCCS",33,0)
 S (OOUT,OUT,PREV,FIRST)=0
"RTN","MAGDCCS",34,0)
 S GWLOC=0
"RTN","MAGDCCS",35,0)
 F  S GWLOC=$O(^MAGD(2006.575,"F",GWLOC)) Q:'GWLOC  D
"RTN","MAGDCCS",36,0)
 . S SUID=""
"RTN","MAGDCCS",37,0)
 . F  S SUID=$O(^MAGD(2006.575,"F",GWLOC,SUID)) Q:SUID=""!(OOUT)  D
"RTN","MAGDCCS",38,0)
 . . S MAGIEN=$O(^MAGD(2006.575,"F",GWLOC,SUID,0)) Q:'MAGIEN
"RTN","MAGDCCS",39,0)
 . . ; if no main failed image rec, there's a xref prob, so bail
"RTN","MAGDCCS",40,0)
 . . I '$D(^MAGD(2006.575,MAGIEN,0)) D  Q  ; clean up xref
"RTN","MAGDCCS",41,0)
 . . . K ^MAGD(2006.575,"F",GWLOC,SUID,MAGIEN)
"RTN","MAGDCCS",42,0)
 . . . Q
"RTN","MAGDCCS",43,0)
 . . ;Only process clinical specialties images... radiology and medicine images done by other rtns.
"RTN","MAGDCCS",44,0)
 . . S MAGTYPE=$P($G(^MAGD(2006.575,MAGIEN,"TYPE")),"^") I MAGTYPE'="CON" Q
"RTN","MAGDCCS",45,0)
 . . I $D(^MAGD(2006.575,MAGIEN,"FIXD")),$P(^MAGD(2006.575,MAGIEN,"FIXD"),"^") Q
"RTN","MAGDCCS",46,0)
 . . I 'FIRST S PREV=MAGIEN,PREVS=SUID,FIRST=MAGIEN
"RTN","MAGDCCS",47,0)
 . . D SET
"RTN","MAGDCCS",48,0)
 . . Q
"RTN","MAGDCCS",49,0)
 . Q
"RTN","MAGDCCS",50,0)
 Q
"RTN","MAGDCCS",51,0)
 ;
"RTN","MAGDCCS",52,0)
DISPLAY ;
"RTN","MAGDCCS",53,0)
 S OUT=0
"RTN","MAGDCCS",54,0)
 W !,"**************Processing entry**********"
"RTN","MAGDCCS",55,0)
 W !!,?2,"PATIENT: ",PAT,?50,$$PIDLABEL^MAGSPID(),PID,!,"Request/Consultation #: ",CASENO
"RTN","MAGDCCS",56,0)
 W !,?2,"Equipment: ",MOD,?50,"Model: ",MODEL
"RTN","MAGDCCS",57,0)
 W !,?2,"Date Processed: ",DATE,?50,"Problem with: ",REASON
"RTN","MAGDCCS",58,0)
 W !,?2,"Comment: ",COMNT1
"RTN","MAGDCCS",59,0)
 W !,?2,"Correcting file on server ID: ",MACHID,!,?5,FILE
"RTN","MAGDCCS",60,0)
 S MSG="Do you want to Correct this entry? "
"RTN","MAGDCCS",61,0)
 Q
"RTN","MAGDCCS",62,0)
 ;
"RTN","MAGDCCS",63,0)
NEWCASE ;
"RTN","MAGDCCS",64,0)
 S NEWDFN=$P(MAGDY,"^"),NEWNME=$P(MAGDY,"^",2),NEWPID=$P(MAGDY,"^",3)
"RTN","MAGDCCS",65,0)
 S NEWCAS=$P(MAGDY,"^",4),NEWPROC=$P(MAGDY,"^",5),NEWDTI=$P(MAGDY,"^",6)
"RTN","MAGDCCS",66,0)
 S NEWMUL=$P(MAGDY,"^",7),NEWPIEN=$P(MAGDY,"^",8),PP=$P(MAGDY,"^",9)
"RTN","MAGDCCS",67,0)
 Q
"RTN","MAGDCCS",68,0)
 ;
"RTN","MAGDCCS",69,0)
ASK() ;
"RTN","MAGDCCS",70,0)
 N ANS,ASK
"RTN","MAGDCCS",71,0)
ASK1 S ASK="Y/N/D/Q"
"RTN","MAGDCCS",72,0)
 I $G(PREV)'=$G(MAGIEN),MAGTYPE="CON" S ASK=ASK_"/P"
"RTN","MAGDCCS",73,0)
 W !,$G(MSG),"("_ASK_")// " R ANS:600
"RTN","MAGDCCS",74,0)
 I '$T!(ANS["^") Q "^"
"RTN","MAGDCCS",75,0)
 I ANS="" Q "N"
"RTN","MAGDCCS",76,0)
 I "YNDPQyndpq"'[$E(ANS) D  G ASK1
"RTN","MAGDCCS",77,0)
 . W !,"Please respond with one of the following codes."
"RTN","MAGDCCS",78,0)
 . W !,"Legend: Y=yes, N=no, D=delete, P=Previous entry, and Q=quit",!
"RTN","MAGDCCS",79,0)
 . Q
"RTN","MAGDCCS",80,0)
 S ANS=$TR(ANS,"yndpq","YNDPQ")
"RTN","MAGDCCS",81,0)
 Q $E(ANS)
"RTN","MAGDCCS",82,0)
 ;
"RTN","MAGDCCS",83,0)
CHK ;remove any punctuation before doing comparison on SSN
"RTN","MAGDCCS",84,0)
 ;stop on 1st check.
"RTN","MAGDCCS",85,0)
 N OLD,I
"RTN","MAGDCCS",86,0)
 S OLD="" F I=1:1:$L(PID) I $E(PID,I)?1AN S OLD=OLD_$E(PID,I)
"RTN","MAGDCCS",87,0)
 I NEWPID'=OLD D  Q
"RTN","MAGDCCS",88,0)
 . S MSG=$$PIDLABEL^MAGSPID()_"s do not match. Update? "
"RTN","MAGDCCS",89,0)
 I NEWNME'=PAT D  Q
"RTN","MAGDCCS",90,0)
 . S MSG="Patient names do not match. Update? "
"RTN","MAGDCCS",91,0)
 ;Finally the problem is with the case number...either no longer in "C"
"RTN","MAGDCCS",92,0)
 ;xref or invalid number provided
"RTN","MAGDCCS",93,0)
 S MSG="Accession number different. Update? "
"RTN","MAGDCCS",94,0)
 Q
"RTN","MAGDCCS",95,0)
 ;
"RTN","MAGDCCS",96,0)
NEWDIS ;
"RTN","MAGDCCS",97,0)
 W !,?2,"****Please review the following: *****"
"RTN","MAGDCCS",98,0)
 W !,?2,"Previous name: ",PAT,!,?2,"     New name: ",NEWNME
"RTN","MAGDCCS",99,0)
 W !,?2,"Previous ",$$PIDLABEL^MAGSPID(),": ",PID,!,?2,"     New ",$$PIDLABEL^MAGSPID(),": ",NEWPID
"RTN","MAGDCCS",100,0)
 W !,?2,"Previous request/consultation #: ",CASENO,!,?2,"     New request/consultation #: ",NEWCAS
"RTN","MAGDCCS",101,0)
 ; Variable PP already has text message about being part of printset.
"RTN","MAGDCCS",102,0)
 Q
"RTN","MAGDCCS",103,0)
 ;
"RTN","MAGDCCS",104,0)
UPDT ;
"RTN","MAGDCCS",105,0)
 N GWLOC ; -- gateway location
"RTN","MAGDCCS",106,0)
 N % ; ------ var for FM utility call
"RTN","MAGDCCS",107,0)
 W !,"Will change the following: " D NEWDIS
"RTN","MAGDCCS",108,0)
 W !,"Are you sure you want to correct this entry? " S %=2 D YN^DICN
"RTN","MAGDCCS",109,0)
 I %=-1!(%=2) S OUT=1 Q
"RTN","MAGDCCS",110,0)
 W !,"Updating the file."
"RTN","MAGDCCS",111,0)
 S NEWDTIM=$TR(NEWDTI,"0123456789","9876543210")
"RTN","MAGDCCS",112,0)
 S ^MAGD(2006.575,MAGIEN,"FIXD")="1^"_NEWDFN_"^"_NEWNME_"^"_NEWPID_"^"_NEWCAS_"^"_NEWDTI_"^"_NEWMUL_"^"_NEWDTIM W "."
"RTN","MAGDCCS",113,0)
 S ^MAGD(2006.575,MAGIEN,"FIXPR")=NEWPIEN_"^"_NEWPROC W "."
"RTN","MAGDCCS",114,0)
 ;Same as ^radpt(newdfn,"DT",newdti,"P",newmul,0) & ^RAMIS(71,newpien,0)
"RTN","MAGDCCS",115,0)
 S GWLOC=$P($G(^MAGD(2006.575,MAGIEN,1)),"^",5)
"RTN","MAGDCCS",116,0)
 S MACHID=$S(MACHID="":"A",1:MACHID) ; server ID
"RTN","MAGDCCS",117,0)
 I GWLOC S ^MAGD(2006.575,"AFX",GWLOC,MACHID,MAGIEN)="" W "."
"RTN","MAGDCCS",118,0)
 E  W !,"Gateway place not defined on image entry "_MAGIEN_", continuing.."
"RTN","MAGDCCS",119,0)
 ;Xref to loop & process entries; processing will be minimal.
"RTN","MAGDCCS",120,0)
 S MAGFIX(MAGIEN)="F"
"RTN","MAGDCCS",121,0)
 Q
"RTN","MAGDCCS",122,0)
 ;
"RTN","MAGDCCS",123,0)
SETDEL ;Entry to be deleted
"RTN","MAGDCCS",124,0)
 N GWLOC ; -- gateway location
"RTN","MAGDCCS",125,0)
 D LOGERR I ANS="^" S OUT=1 Q
"RTN","MAGDCCS",126,0)
 S GWLOC=$P($G(^MAGD(2006.575,MAGIEN,1)),"^",5)
"RTN","MAGDCCS",127,0)
 I GWLOC S ^MAGD(2006.575,"AFX",GWLOC,MACHID,MAGIEN)="D" W "."
"RTN","MAGDCCS",128,0)
 E  W !,"Gateway place not defined on image entry "_MAGIEN_", continuing.."
"RTN","MAGDCCS",129,0)
 S $P(^MAGD(2006.575,MAGIEN,0),"^",6)="1"
"RTN","MAGDCCS",130,0)
 S ^MAGD(2006.575,MAGIEN,"FIXD")=1
"RTN","MAGDCCS",131,0)
 S MAGFIX(MAGIEN)="D"
"RTN","MAGDCCS",132,0)
 Q
"RTN","MAGDCCS",133,0)
 ;
"RTN","MAGDCCS",134,0)
LOGERR ;Need to record error
"RTN","MAGDCCS",135,0)
 N DIR,DIRUT,DTOUT,ENTRY,I,MAGERR,MAGOUT,NOW,WHY,WHO,X,Y
"RTN","MAGDCCS",136,0)
 W !! F I=1:1:80 W "*"
"RTN","MAGDCCS",137,0)
 W !,"*** Will log in error log (file 2006.599). ****"
"RTN","MAGDCCS",138,0)
 S NOW=$$NOW^XLFDT()
"RTN","MAGDCCS",139,0)
 S DIR(0)="F^3:30"
"RTN","MAGDCCS",140,0)
 S DIR("A")="Reason for deletion"
"RTN","MAGDCCS",141,0)
 S DIR("A",1)="Please enter a reason for deleting."
"RTN","MAGDCCS",142,0)
 S DIR("A",2)="For example: TEST PATIENT"
"RTN","MAGDCCS",143,0)
 D ^DIR
"RTN","MAGDCCS",144,0)
 I $D(DIRUT)!($D(DTOUT))!(Y="") D  S ANS="^" Q
"RTN","MAGDCCS",145,0)
 . W !,"Can not delete if a reason is not provided."
"RTN","MAGDCCS",146,0)
 . Q
"RTN","MAGDCCS",147,0)
 S WHY=Y,WHO=$G(DUZ)
"RTN","MAGDCCS",148,0)
 I WHO D 
"RTN","MAGDCCS",149,0)
 . D GETS^DIQ(200,DUZ,".01","E","MAGOUT","MAGERR")
"RTN","MAGDCCS",150,0)
 . Q:$D(MAGERR("DIERR"))
"RTN","MAGDCCS",151,0)
 . S WHO=$G(MAGOUT(200,DUZ_",",.01,"E"))
"RTN","MAGDCCS",152,0)
 I WHO="" S WHO="UNKNOWN"
"RTN","MAGDCCS",153,0)
 I '$D(^MAGD(2006.599,0)) D
"RTN","MAGDCCS",154,0)
 . S ^MAGD(2006.599,0)="Dicom Error Log^2006.599^^"
"RTN","MAGDCCS",155,0)
 . Q
"RTN","MAGDCCS",156,0)
 S ENTRY=$P(^MAGD(2006.599,0),"^",3)+1
"RTN","MAGDCCS",157,0)
 S $P(^MAGD(2006.599,0),"^",3)=ENTRY
"RTN","MAGDCCS",158,0)
 S $P(^MAGD(2006.599,0),"^",4)=$P(^MAGD(2006.599,0),"^",4)+1
"RTN","MAGDCCS",159,0)
 S ^MAGD(2006.599,ENTRY,0)=NOW_"^"_WHY_"^"_FILE_"^"_MODEL
"RTN","MAGDCCS",160,0)
 S ^MAGD(2006.599,ENTRY,1)=WHO_"^"_PAT_"^"_PID_"^"_CASENO_"^"_MACHID
"RTN","MAGDCCS",161,0)
 S ^MAGD(2006.599,"B",NOW,ENTRY)=""
"RTN","MAGDCCS",162,0)
 Q
"RTN","MAGDCCS",163,0)
 ;
"RTN","MAGDCCS",164,0)
SET ;
"RTN","MAGDCCS",165,0)
 S MAGTYPE=$P(^MAGD(2006.575,MAGIEN,"TYPE"),"^")
"RTN","MAGDCCS",166,0)
 Q:$P($G(^MAGD(2006.575,MAGIEN,"FIXD")),"^")    ;Already fixed.
"RTN","MAGDCCS",167,0)
 ;Only process Clinical Specialties images...radiology & medicine images done by other rtns.
"RTN","MAGDCCS",168,0)
 I $E(MAGTYPE,1,3)'="CON" Q
"RTN","MAGDCCS",169,0)
 S DATA=^MAGD(2006.575,MAGIEN,0)
"RTN","MAGDCCS",170,0)
 S FILE=$P(^MAGD(2006.575,MAGIEN,0),"^")
"RTN","MAGDCCS",171,0)
 S DATA1=^MAGD(2006.575,MAGIEN,1)    ;Case no. info
"RTN","MAGDCCS",172,0)
 S DATA2=$G(^MAGD(2006.575,MAGIEN,"AMFG"))    ;Modality info
"RTN","MAGDCCS",173,0)
 S PAT=$P(DATA,"^",4),PID=$P(DATA,"^",3),REASON=$P(DATA,"^",2)
"RTN","MAGDCCS",174,0)
 S MOD=$P(DATA2,"^"),MODEL=$P(DATA2,"^",6)
"RTN","MAGDCCS",175,0)
 S CASENO=$P(DATA1,"^",2),MACHID=$P(DATA1,"^",4)
"RTN","MAGDCCS",176,0)
 S Y=$P(DATA1,"^",3) X ^DD("DD") S DATE=Y
"RTN","MAGDCCS",177,0)
 S COMNT1=$G(^MAGD(2006.575,MAGIEN,"ACSTXT")) ;1st line comment.
"RTN","MAGDCCS",178,0)
 S MACHID=$P(DATA1,"^",4)
"RTN","MAGDCCS",179,0)
 S ANS="" D DISPLAY S ANS=$$ASK
"RTN","MAGDCCS",180,0)
 I ANS="Q"!(ANS["^") S (OOUT,OUT)=1 D SETPREV Q
"RTN","MAGDCCS",181,0)
 I ANS="N" S OUT=1 D SETPREV Q
"RTN","MAGDCCS",182,0)
 I ANS="P" D CHKPREV Q
"RTN","MAGDCCS",183,0)
 I ANS="D" D SETDEL,SETPREV Q
"RTN","MAGDCCS",184,0)
 Q:OUT
"RTN","MAGDCCS",185,0)
 K MAGDY W !," Lookup by case number or patient name"
"RTN","MAGDCCS",186,0)
 ;
"RTN","MAGDCCS",187,0)
LOOK ;
"RTN","MAGDCCS",188,0)
 D EN^MAGDCCS2 Q:'$D(MAGDY)  Q:MAGDY'[""
"RTN","MAGDCCS",189,0)
 D NEWCASE,CHK,NEWDIS S ANS=$$ASK
"RTN","MAGDCCS",190,0)
 I ANS="Q"!(ANS["^") S (OOUT,OUT)=1 D SETPREV Q
"RTN","MAGDCCS",191,0)
 I ANS="D" D SETDEL,SETPREV Q
"RTN","MAGDCCS",192,0)
 I ANS="P" D CHKPREV Q
"RTN","MAGDCCS",193,0)
 I ANS="N" S OUT=1 D SETPREV Q
"RTN","MAGDCCS",194,0)
 Q:OUT
"RTN","MAGDCCS",195,0)
 D UPDT
"RTN","MAGDCCS",196,0)
 I ANS="P" D CHKPREV Q
"RTN","MAGDCCS",197,0)
 D SETMAG
"RTN","MAGDCCS",198,0)
 Q
"RTN","MAGDCCS",199,0)
 ;
"RTN","MAGDCCS",200,0)
DATELOOP(START,STOP) ;Loop thru the "AD" cross reference
"RTN","MAGDCCS",201,0)
 N MAGIEN,SUID,THEDT,FIRST,OOUT,MAGFIX
"RTN","MAGDCCS",202,0)
 S THEDT=START-.1,(OOUT,FIRST)=0
"RTN","MAGDCCS",203,0)
 F  S THEDT=$O(^MAGD(2006.575,"AD",THEDT)) Q:'THEDT!(THEDT>STOP)!(OOUT)  D
"RTN","MAGDCCS",204,0)
 . S MAGIEN=0
"RTN","MAGDCCS",205,0)
 . F  S MAGIEN=$O(^MAGD(2006.575,"AD",THEDT,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGDCCS",206,0)
 . . I '$D(^MAGD(2006.575,MAGIEN,0)) K ^MAGD(2006.575,"AD",THEDT,MAGIEN)
"RTN","MAGDCCS",207,0)
 . . I $D(^MAGD(2006.575,MAGIEN,"TYPE")),$E($P(^MAGD(2006.575,MAGIEN,"TYPE"),"^"),1,3)'="CON" Q
"RTN","MAGDCCS",208,0)
 . . I 'FIRST S PREV=MAGIEN,FIRST=1
"RTN","MAGDCCS",209,0)
 . . D SET
"RTN","MAGDCCS",210,0)
 . . Q
"RTN","MAGDCCS",211,0)
 . Q
"RTN","MAGDCCS",212,0)
 Q
"RTN","MAGDCCS",213,0)
 ;
"RTN","MAGDCCS",214,0)
SETPREV ;
"RTN","MAGDCCS",215,0)
 S PREV=MAGIEN,PREVS=$G(SUID)
"RTN","MAGDCCS",216,0)
 Q
"RTN","MAGDCCS",217,0)
 ;
"RTN","MAGDCCS",218,0)
SETMAG ;
"RTN","MAGDCCS",219,0)
 S FIRST=MAGIEN,FIRSTS=$G(SUID),MAGIEN=PREV,SUID=$G(PREVS)
"RTN","MAGDCCS",220,0)
 S PREV=FIRST,PREVS=FIRSTS
"RTN","MAGDCCS",221,0)
 Q
"RTN","MAGDCCS",222,0)
 ;
"RTN","MAGDCCS",223,0)
CHKPREV ;
"RTN","MAGDCCS",224,0)
 S OUT=1 N STATUS
"RTN","MAGDCCS",225,0)
 I '$D(MAGFIX(PREV)) D SETMAG G SET
"RTN","MAGDCCS",226,0)
 S STATUS=$S($G(MAGFIX(PREV))="D":"deleted",1:"corrected")
"RTN","MAGDCCS",227,0)
 W !,"Previous entry has been "_STATUS_".",$C(7)
"RTN","MAGDCCS",228,0)
 G SET
"RTN","MAGDCCS",229,0)
 Q
"RTN","MAGDGMRC")
0^2^B36374245
"RTN","MAGDGMRC",1,0)
MAGDGMRC ;WOIFO/PMK,EdM,MLH - Read a DICOM image file ; 24-Dec-2010 13:50
"RTN","MAGDGMRC",2,0)
 ;;3.0;IMAGING;**10,51,50,85,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDGMRC",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDGMRC",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDGMRC",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDGMRC",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDGMRC",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDGMRC",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDGMRC",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDGMRC",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDGMRC",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDGMRC",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDGMRC",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDGMRC",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDGMRC",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDGMRC",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDGMRC",17,0)
 ;;
"RTN","MAGDGMRC",18,0)
 ; This is the set of GMRC APIs that are use by the VistA Imaging
"RTN","MAGDGMRC",19,0)
 ; DICOM Gateway
"RTN","MAGDGMRC",20,0)
 ;
"RTN","MAGDGMRC",21,0)
ANYREQ(DFN) ; check if any GMRC requests are present for the patient
"RTN","MAGDGMRC",22,0)
 N ADFN ; ---- array of DFNs to look up
"RTN","MAGDGMRC",23,0)
 N WRK ; ----- work array for our results
"RTN","MAGDGMRC",24,0)
 N IX ; ------ results lookup index
"RTN","MAGDGMRC",25,0)
 N FHIT ; ---- flag - any results for the pt?
"RTN","MAGDGMRC",26,0)
 ;
"RTN","MAGDGMRC",27,0)
 ; ask for requests for the patient
"RTN","MAGDGMRC",28,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",29,0)
 S ADFN(1)=DFN
"RTN","MAGDGMRC",30,0)
 D FIND^DIC(123,,"@;.02I","QX",.ADFN,,"F",,,WRK,WRK)
"RTN","MAGDGMRC",31,0)
 ;
"RTN","MAGDGMRC",32,0)
 ; check returns to see if any are actually for this patient (see note
"RTN","MAGDGMRC",33,0)
 ; on SEARCH below)
"RTN","MAGDGMRC",34,0)
 S IX=0
"RTN","MAGDGMRC",35,0)
 F  S IX=$O(@WRK@("DILIST","ID",IX)) Q:'IX  D  Q:$G(FHIT)
"RTN","MAGDGMRC",36,0)
 . I $G(@WRK@("DILIST","ID",IX,.02))=DFN S FHIT=1
"RTN","MAGDGMRC",37,0)
 . Q
"RTN","MAGDGMRC",38,0)
 K @WRK
"RTN","MAGDGMRC",39,0)
 Q +$G(FHIT)
"RTN","MAGDGMRC",40,0)
 ;
"RTN","MAGDGMRC",41,0)
TIULAST(GMRCIEN) ; find the ien of the most recent TIU note for this request
"RTN","MAGDGMRC",42,0)
 N TIUIEN
"RTN","MAGDGMRC",43,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",44,0)
 S TIUIEN=0
"RTN","MAGDGMRC",45,0)
 I GMRCIEN D  ; look for the most recent TIU note for this request
"RTN","MAGDGMRC",46,0)
 . ; set up the array to look through
"RTN","MAGDGMRC",47,0)
 . S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",48,0)
 . D LIST^DIC(123.03,","_GMRCIEN_",",".01I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",49,0)
 . ; traverse the array
"RTN","MAGDGMRC",50,0)
 . N TIUPTR
"RTN","MAGDGMRC",51,0)
 . S TIUPTR=" " ; setup for reverse $o from space (" ")
"RTN","MAGDGMRC",52,0)
 . F  S TIUPTR=$O(@WRK@("DILIST","ID",TIUPTR),-1) Q:'TIUPTR  D  Q:TIUIEN
"RTN","MAGDGMRC",53,0)
 . . S TIUIEN=$P($G(@WRK@("DILIST","ID",TIUPTR,.01)),"^",1)
"RTN","MAGDGMRC",54,0)
 . . I $P(TIUIEN,";",2)'="TIU(8925," S TIUIEN=0 ; not a TIU document
"RTN","MAGDGMRC",55,0)
 . . Q
"RTN","MAGDGMRC",56,0)
 . Q
"RTN","MAGDGMRC",57,0)
 K @WRK
"RTN","MAGDGMRC",58,0)
 Q +TIUIEN
"RTN","MAGDGMRC",59,0)
 ;
"RTN","MAGDGMRC",60,0)
TIUALL(GMRCIEN,RESULT) ; find all IENs for the TIU notes for this request
"RTN","MAGDGMRC",61,0)
 N MAGIEN,TIUIEN,TIUPTR,TIUXIEN,Y
"RTN","MAGDGMRC",62,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",63,0)
 K RESULT
"RTN","MAGDGMRC",64,0)
 ; set up the array to look through
"RTN","MAGDGMRC",65,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",66,0)
 D LIST^DIC(123.03,","_GMRCIEN_",",".01I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",67,0)
 ; traverse the array
"RTN","MAGDGMRC",68,0)
 S (RESULT,TIUPTR)=0
"RTN","MAGDGMRC",69,0)
 F  S TIUPTR=$O(@WRK@("DILIST","ID",TIUPTR)) Q:'TIUPTR  D
"RTN","MAGDGMRC",70,0)
 . S TIUIEN=$P($G(@WRK@("DILIST","ID",TIUPTR,.01)),"^",1)
"RTN","MAGDGMRC",71,0)
 . I $P(TIUIEN,";",2)'="TIU(8925," Q  ; not a TIU document
"RTN","MAGDGMRC",72,0)
 . S TIUIEN=+TIUIEN ; strip off variable pointer stuff
"RTN","MAGDGMRC",73,0)
 . S TIUXIEN=""
"RTN","MAGDGMRC",74,0)
 . F  S TIUXIEN=$O(^TIU(8925.91,"B",TIUIEN,TIUXIEN)) Q:'TIUXIEN  D
"RTN","MAGDGMRC",75,0)
 . . S Y=$G(^TIU(8925.91,TIUXIEN,0)) Q:'Y
"RTN","MAGDGMRC",76,0)
 . . S MAGIEN=$P(Y,"^",2)
"RTN","MAGDGMRC",77,0)
 . . S RESULT=RESULT+1
"RTN","MAGDGMRC",78,0)
 . . S RESULT(RESULT)=TIUIEN_"^GMRC-"_GMRCIEN_"^"_MAGIEN
"RTN","MAGDGMRC",79,0)
 . . Q
"RTN","MAGDGMRC",80,0)
 . ; new database structure
"RTN","MAGDGMRC",81,0)
 . S TIUXIEN=""
"RTN","MAGDGMRC",82,0)
 . F  S TIUXIEN=$O(^MAG(2005.61,"B",TIUIEN,TIUXIEN)) Q:'TIUXIEN  D
"RTN","MAGDGMRC",83,0)
 . . S Y=$G(^MAG(2005.61,TIUXIEN,0)) Q:$P(Y,"^",3)'="TIU"
"RTN","MAGDGMRC",84,0)
 . . S MAGIEN=""
"RTN","MAGDGMRC",85,0)
 . . F  S MAGIEN=$O(^MAG(2005.62,"C",TIUXIEN,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGDGMRC",86,0)
 . . . S RESULT=RESULT+1
"RTN","MAGDGMRC",87,0)
 . . . S RESULT(RESULT)=TIUIEN_"^GMRC-"_GMRCIEN_"^N"_MAGIEN
"RTN","MAGDGMRC",88,0)
 . . . Q
"RTN","MAGDGMRC",89,0)
 . . Q
"RTN","MAGDGMRC",90,0)
 . Q
"RTN","MAGDGMRC",91,0)
 K @WRK
"RTN","MAGDGMRC",92,0)
 Q
"RTN","MAGDGMRC",93,0)
 ;
"RTN","MAGDGMRC",94,0)
FWDFROM(GMRCIEN) ; for a forwarded request, determine the FORWARD FROM service
"RTN","MAGDGMRC",95,0)
 N FWDFROM,I
"RTN","MAGDGMRC",96,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",97,0)
 ; set up the array to look through
"RTN","MAGDGMRC",98,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",99,0)
 D LIST^DIC(123.02,","_GMRCIEN_",",".01I;6I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",100,0)
 ; traverse the array
"RTN","MAGDGMRC",101,0)
 S FWDFROM=0
"RTN","MAGDGMRC",102,0)
 I GMRCIEN D
"RTN","MAGDGMRC",103,0)
 . S I=$O(@WRK@("DILIST","ID"," "),-1)
"RTN","MAGDGMRC",104,0)
 . I I D  ; get the FORWARDED FROM service
"RTN","MAGDGMRC",105,0)
 . . S FWDFROM=$G(@WRK@("DILIST","ID",I,6))
"RTN","MAGDGMRC",106,0)
 . . Q
"RTN","MAGDGMRC",107,0)
 . Q
"RTN","MAGDGMRC",108,0)
 K @WRK
"RTN","MAGDGMRC",109,0)
 Q +FWDFROM
"RTN","MAGDGMRC",110,0)
 ;
"RTN","MAGDGMRC",111,0)
UNSIGNED(GMRCIEN) ; check if there are any unsigned TIU notes for the request
"RTN","MAGDGMRC",112,0)
 N TIUPTR,NRESULTS,TIUSTAT,UNSIGNED,X
"RTN","MAGDGMRC",113,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",114,0)
 ; set up the array to look through
"RTN","MAGDGMRC",115,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",116,0)
 D LIST^DIC(123.03,","_GMRCIEN_",",".01I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",117,0)
 S UNSIGNED=0,TIUPTR=""
"RTN","MAGDGMRC",118,0)
 ; traverse the array, check all associated results, bail if any unsigned
"RTN","MAGDGMRC",119,0)
 F  S TIUPTR=$O(@WRK@("DILIST","ID",TIUPTR)) Q:'TIUPTR  D  Q:UNSIGNED
"RTN","MAGDGMRC",120,0)
 . S X=$P($G(@WRK@("DILIST","ID",TIUPTR,.01)),"^",1)
"RTN","MAGDGMRC",121,0)
 . ; if TIU note, check if unsigned
"RTN","MAGDGMRC",122,0)
 . I X?.N1";TIU(8925," D  ; check status of TIU note for completion
"RTN","MAGDGMRC",123,0)
 . . ; status in ^TIU(8925.6) - use first 5 "UNs" per Margy McClenanhan
"RTN","MAGDGMRC",124,0)
 . . S TIUSTAT=$$GET1^DIQ(8925,+X,.05,"I")
"RTN","MAGDGMRC",125,0)
 . . I TIUSTAT,TIUSTAT<6 S UNSIGNED=1 ; got one!
"RTN","MAGDGMRC",126,0)
 . . Q
"RTN","MAGDGMRC",127,0)
 . Q
"RTN","MAGDGMRC",128,0)
 K @WRK
"RTN","MAGDGMRC",129,0)
 Q UNSIGNED
"RTN","MAGDGMRC",130,0)
 ;
"RTN","MAGDGMRC",131,0)
SEARCH(DFN,CUTOFF,CLINIC,REQUEST) ; search for requests for a given clinic
"RTN","MAGDGMRC",132,0)
 ;
"RTN","MAGDGMRC",133,0)
 ; It is a bit of a trick to determine if a given appointment is for
"RTN","MAGDGMRC",134,0)
 ; an existing GMRC request.  This determination is performed by using
"RTN","MAGDGMRC",135,0)
 ; an association between the SERVICE for the request and the CLINIC
"RTN","MAGDGMRC",136,0)
 ; where the request is to be performed.
"RTN","MAGDGMRC",137,0)
 ;
"RTN","MAGDGMRC",138,0)
 ; This subroutine passes all of the (recent) requests for a patient and
"RTN","MAGDGMRC",139,0)
 ; builds a list of those that can be performed in the designated clinic.
"RTN","MAGDGMRC",140,0)
 ;
"RTN","MAGDGMRC",141,0)
 ; Maybe the replacement for Appointment Management and future versions
"RTN","MAGDGMRC",142,0)
 ; of CPRS Order Entry and Consult Request Tracking will capable of
"RTN","MAGDGMRC",143,0)
 ; correctly maintaining this essential association.
"RTN","MAGDGMRC",144,0)
 ;
"RTN","MAGDGMRC",145,0)
 N GMRIDX,GMRC0,GMRCDATE,GMRCIEN,SERVICE,STATUS
"RTN","MAGDGMRC",146,0)
 N WRK ; --- root of results global
"RTN","MAGDGMRC",147,0)
 N ADFN ; -- array for DFNs to look up
"RTN","MAGDGMRC",148,0)
 K REQUEST S REQUEST=0
"RTN","MAGDGMRC",149,0)
 I 'DFN Q  ; no patient number provided
"RTN","MAGDGMRC",150,0)
 ; build the array of results
"RTN","MAGDGMRC",151,0)
 ; Note the use of the "Q[uick]" flag to allow lookup by *internal* DFN.
"RTN","MAGDGMRC",152,0)
 ; However, even though we define ADFN(1) to force lookup on the *first*
"RTN","MAGDGMRC",153,0)
 ; level subscript of the F index only, FileMan also looks up on the IEN
"RTN","MAGDGMRC",154,0)
 ; directly (because there is a .001 field defined in the DD of File
"RTN","MAGDGMRC",155,0)
 ; #123).  So we grab the DFN in the .02 field for later double-
"RTN","MAGDGMRC",156,0)
 ; checking.
"RTN","MAGDGMRC",157,0)
 ;
"RTN","MAGDGMRC",158,0)
 S ADFN(1)=DFN
"RTN","MAGDGMRC",159,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",160,0)
 D FIND^DIC(123,,"@;.02I;1I;3I;5I;8I","QX",.ADFN,,"F",,,WRK,WRK)
"RTN","MAGDGMRC",161,0)
 ; traverse the results
"RTN","MAGDGMRC",162,0)
 S GMRIDX=""
"RTN","MAGDGMRC",163,0)
 F  S GMRIDX=$O(@WRK@("DILIST","ID",GMRIDX)) Q:'GMRIDX  D
"RTN","MAGDGMRC",164,0)
 . S GMRCIEN=+$G(@WRK@("DILIST",2,GMRIDX))
"RTN","MAGDGMRC",165,0)
 . I $G(@WRK@("DILIST","ID",GMRIDX,.02))'=DFN Q  ; not for this patient!
"RTN","MAGDGMRC",166,0)
 . I $G(@WRK@("DILIST","ID",GMRIDX,3))<CUTOFF Q  ; too far back
"RTN","MAGDGMRC",167,0)
 . S SERVICE=$G(@WRK@("DILIST","ID",GMRIDX,1)) Q:SERVICE=""
"RTN","MAGDGMRC",168,0)
 . I '$$ISCLINIC^MAGDGMRC(SERVICE,CLINIC) Q  ; not a service or clinic
"RTN","MAGDGMRC",169,0)
 . S STATUS=$G(@WRK@("DILIST","ID",GMRIDX,8)) ; CPRS status
"RTN","MAGDGMRC",170,0)
 . I STATUS S STATUS=$$GET1^DIQ(100.01,STATUS,.1) ; CPRS status abbrev
"RTN","MAGDGMRC",171,0)
 . S REQUEST=$G(REQUEST)+1
"RTN","MAGDGMRC",172,0)
 . S REQUEST(REQUEST)=GMRCIEN_"^"_SERVICE_"^"_STATUS
"RTN","MAGDGMRC",173,0)
 . Q
"RTN","MAGDGMRC",174,0)
 K @WRK
"RTN","MAGDGMRC",175,0)
 Q
"RTN","MAGDGMRC",176,0)
 ;
"RTN","MAGDGMRC",177,0)
ISCLINIC(SERVICE,CLINIC) ; is a particular clinic defined for a given service?
"RTN","MAGDGMRC",178,0)
 ; this entry point is called by ^MAGDGMRC as well as below
"RTN","MAGDGMRC",179,0)
 N ISCLINIC
"RTN","MAGDGMRC",180,0)
 S ISCLINIC=0
"RTN","MAGDGMRC",181,0)
 I SERVICE,CLINIC,$D(^MAG(2006.5831,SERVICE,1,"B",CLINIC)) S ISCLINIC=1
"RTN","MAGDGMRC",182,0)
 Q ISCLINIC
"RTN","MAGDGMRC",183,0)
 ;
"RTN","MAGDLB1")
0^3^B55692202
"RTN","MAGDLB1",1,0)
MAGDLB1 ;WOIFO/LB/JSL/SAF/NST/DAC/MLH - Routine to fix failed DICOM entries ; 11 Apr 2012 1:09 PM
"RTN","MAGDLB1",2,0)
 ;;3.0;IMAGING;**11,30,54,123,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDLB1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDLB1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDLB1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDLB1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDLB1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDLB1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDLB1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDLB1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDLB1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDLB1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDLB1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDLB1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDLB1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDLB1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDLB1",17,0)
 ;;
"RTN","MAGDLB1",18,0)
 Q
"RTN","MAGDLB1",19,0)
 ;
"RTN","MAGDLB1",20,0)
DISPLAY ;
"RTN","MAGDLB1",21,0)
 S OUT=0
"RTN","MAGDLB1",22,0)
 W !,"**************Processing entry**********"
"RTN","MAGDLB1",23,0)
 W !!?2,"PATIENT: ",PAT,?50,$$PIDLABEL^MAGSPID(),": ",PID,!,"RADIOLOGY CASE #: ",CASENO  ;;P123
"RTN","MAGDLB1",24,0)
 W !?2,"Equipment: ",MOD,?50,"Model: ",MODEL
"RTN","MAGDLB1",25,0)
 W !?2,"Date Processed: ",DATE,?50,"Problem with: ",REASON
"RTN","MAGDLB1",26,0)
 W !?2,"Comment: ",COMNT1
"RTN","MAGDLB1",27,0)
 W !?2,"Correcting file on Image gateway server ID: ",MACHID,!?5,FILE
"RTN","MAGDLB1",28,0)
 S MSG="Do you want to Correct this entry? "
"RTN","MAGDLB1",29,0)
 Q
"RTN","MAGDLB1",30,0)
 ;
"RTN","MAGDLB1",31,0)
NEWCASE ;
"RTN","MAGDLB1",32,0)
 S NEWDFN=$P(MAGDY,"^"),NEWNME=$P(MAGDY,"^",2),NEWPID=$P(MAGDY,"^",3)
"RTN","MAGDLB1",33,0)
 S NEWCAS=$P(MAGDY,"^",4),NEWPROC=$P(MAGDY,"^",5),NEWDTI=$P(MAGDY,"^",6)
"RTN","MAGDLB1",34,0)
 S NEWMUL=$P(MAGDY,"^",7),NEWPIEN=$P(MAGDY,"^",8),PP=$P(MAGDY,"^",9)
"RTN","MAGDLB1",35,0)
 Q
"RTN","MAGDLB1",36,0)
 ;
"RTN","MAGDLB1",37,0)
ASK() ;
"RTN","MAGDLB1",38,0)
 N ANS,ASK
"RTN","MAGDLB1",39,0)
 ;
"RTN","MAGDLB1",40,0)
ASK1 S ASK="Y/N/D/Q"
"RTN","MAGDLB1",41,0)
 I $G(PREV)'=$G(MAGIEN),MAGTYPE="RAD" S ASK=ASK_"/P"
"RTN","MAGDLB1",42,0)
 W !,$G(MSG),"("_ASK_")// " R ANS:600
"RTN","MAGDLB1",43,0)
 I '$T!(ANS["^") Q "^"
"RTN","MAGDLB1",44,0)
 I ANS="" Q "N"
"RTN","MAGDLB1",45,0)
 I "YNDPQyndpq"'[$E(ANS) D  G ASK1
"RTN","MAGDLB1",46,0)
 . W !,"Please respond with one of the following codes."
"RTN","MAGDLB1",47,0)
 . W !,"Legend: Y=yes, N=no, D=delete, P=Previous entry, and Q=quit",!
"RTN","MAGDLB1",48,0)
 S ANS=$TR(ANS,"yndpq","YNDPQ")
"RTN","MAGDLB1",49,0)
 Q $E(ANS)
"RTN","MAGDLB1",50,0)
 ;
"RTN","MAGDLB1",51,0)
CHK ;remove any punctuation before doing comparison on SSN
"RTN","MAGDLB1",52,0)
 ;stop on 1st check.
"RTN","MAGDLB1",53,0)
 N OLD,I
"RTN","MAGDLB1",54,0)
 S OLD="" F I=1:1:$L(PID) I $E(PID,I)?1AN S OLD=OLD_$E(PID,I)
"RTN","MAGDLB1",55,0)
 I NEWPID'=OLD D  Q
"RTN","MAGDLB1",56,0)
 . I $$ISIHS^MAGSPID() S MSG="Patient ID numbers do not match. Update? " Q  ;P123
"RTN","MAGDLB1",57,0)
 . S MSG="Social Security numbers do not match. Update? "
"RTN","MAGDLB1",58,0)
 I NEWNME'=PAT D  Q
"RTN","MAGDLB1",59,0)
 . S MSG="Patient names do not match. Update? "
"RTN","MAGDLB1",60,0)
 ;Finally the problem is with the case number...either no longer in "C"
"RTN","MAGDLB1",61,0)
 ;xref or invalid number provided
"RTN","MAGDLB1",62,0)
 S MSG="Radiology case number different. Update? "
"RTN","MAGDLB1",63,0)
 Q
"RTN","MAGDLB1",64,0)
 ;
"RTN","MAGDLB1",65,0)
NEWDIS ;
"RTN","MAGDLB1",66,0)
 W !?2,"****Please review the following: *****"
"RTN","MAGDLB1",67,0)
 W !?2,"Previous name: ",PAT,!?2,"     New name: ",NEWNME
"RTN","MAGDLB1",68,0)
 W !?2,"Previous ",$$PIDLABEL^MAGSPID(),": ",PID,!?2,"     New ",$$PIDLABEL^MAGSPID(),": ",NEWPID  ;P123
"RTN","MAGDLB1",69,0)
 W !?2,"Previous case #: ",CASENO,!?2,"     New case #: ",NEWCAS
"RTN","MAGDLB1",70,0)
 I $L($G(PP)) W !?15,"Case number selected: ",PP
"RTN","MAGDLB1",71,0)
 ; Variable PP already has text message about being part of printset.
"RTN","MAGDLB1",72,0)
 Q
"RTN","MAGDLB1",73,0)
 ;
"RTN","MAGDLB1",74,0)
UPDT ;
"RTN","MAGDLB1",75,0)
 N GWLOC ; -- gateway location
"RTN","MAGDLB1",76,0)
 N % ; ------ utility variable for FM calls
"RTN","MAGDLB1",77,0)
 W !,"Will change the following: " D NEWDIS
"RTN","MAGDLB1",78,0)
 W !,"Are you sure you want to correct this entry? " S %=2 D YN^DICN
"RTN","MAGDLB1",79,0)
 I %=-1!(%=2) S OUT=1 Q
"RTN","MAGDLB1",80,0)
 W !,"Updating the file."
"RTN","MAGDLB1",81,0)
 S NEWDTIM=$TR(NEWDTI,"0123456789","9876543210")
"RTN","MAGDLB1",82,0)
 S ^MAGD(2006.575,MAGIEN,"FIXD")="1^"_NEWDFN_"^"_NEWNME_"^"_NEWPID_"^"_NEWCAS_"^"_NEWDTI_"^"_NEWMUL_"^"_NEWDTIM W "."
"RTN","MAGDLB1",83,0)
 S ^MAGD(2006.575,MAGIEN,"FIXPR")=NEWPIEN_"^"_NEWPROC W "."
"RTN","MAGDLB1",84,0)
 ;Same as ^radpt(newdfn,"DT",newdti,"P",newmul,0) & ^RAMIS(71,newpien,0)
"RTN","MAGDLB1",85,0)
 S MACHID=$S(MACHID="":"A",1:MACHID) ; server ID
"RTN","MAGDLB1",86,0)
 S GWLOC=$P($G(^MAGD(2006.575,MAGIEN,1)),"^",5)
"RTN","MAGDLB1",87,0)
 I GWLOC S ^MAGD(2006.575,"AFX",GWLOC,MACHID,MAGIEN)="" W "."
"RTN","MAGDLB1",88,0)
 E  W !,"Gateway place not defined on image entry "_MAGIEN_", continuing.."
"RTN","MAGDLB1",89,0)
 ;Xref to loop & process entries; processing will be minimal.
"RTN","MAGDLB1",90,0)
 S MAGFIX(MAGIEN)="F"
"RTN","MAGDLB1",91,0)
 Q
"RTN","MAGDLB1",92,0)
 ;
"RTN","MAGDLB1",93,0)
SETDEL ;Entry to be deleted
"RTN","MAGDLB1",94,0)
 N GWLOC ; -- gateway location
"RTN","MAGDLB1",95,0)
 D LOGERR I ANS="^" S OUT=1 Q
"RTN","MAGDLB1",96,0)
 S GWLOC=$P($G(^MAGD(2006.575,MAGIEN,1)),"^",5)
"RTN","MAGDLB1",97,0)
 I GWLOC S ^MAGD(2006.575,"AFX",GWLOC,MACHID,MAGIEN)="D" W "."
"RTN","MAGDLB1",98,0)
 E  W !,"Gateway place not defined on this image entry "_MAGIEN_", continuing.."
"RTN","MAGDLB1",99,0)
 S $P(^MAGD(2006.575,MAGIEN,0),"^",6)="1"
"RTN","MAGDLB1",100,0)
 S ^MAGD(2006.575,MAGIEN,"FIXD")=1
"RTN","MAGDLB1",101,0)
 S MAGFIX(MAGIEN)="D"
"RTN","MAGDLB1",102,0)
 Q
"RTN","MAGDLB1",103,0)
 ;
"RTN","MAGDLB1",104,0)
LOGERR ;Need to record error
"RTN","MAGDLB1",105,0)
 N DIR,DIRUT,DTOUT,ENTRY,I,MAGERR,MAGOUT,NOW,WHY,WHO,X,Y
"RTN","MAGDLB1",106,0)
 W !! F I=1:1:80 W "*"
"RTN","MAGDLB1",107,0)
 W !,"*** Will log in error log (file 2006.599). ****"
"RTN","MAGDLB1",108,0)
 S NOW=$$NOW^XLFDT()
"RTN","MAGDLB1",109,0)
 S DIR(0)="F^3:30"
"RTN","MAGDLB1",110,0)
 S DIR("A")="Reason for deletion"
"RTN","MAGDLB1",111,0)
 S DIR("A",1)="Please enter a reason for deleting."
"RTN","MAGDLB1",112,0)
 S DIR("A",2)="For example: TEST PATIENT"
"RTN","MAGDLB1",113,0)
 D ^DIR
"RTN","MAGDLB1",114,0)
 I $D(DIRUT)!($D(DTOUT))!(Y="") D  S ANS="^" Q
"RTN","MAGDLB1",115,0)
 . W !,"Cannot delete if a reason is not provided."
"RTN","MAGDLB1",116,0)
 . Q
"RTN","MAGDLB1",117,0)
 S WHY=Y,WHO=$G(DUZ)
"RTN","MAGDLB1",118,0)
 I WHO D 
"RTN","MAGDLB1",119,0)
 . D GETS^DIQ(200,DUZ,".01","E","MAGOUT","MAGERR")
"RTN","MAGDLB1",120,0)
 . Q:$D(MAGERR("DIERR"))
"RTN","MAGDLB1",121,0)
 . S WHO=$G(MAGOUT(200,DUZ_",",.01,"E"))
"RTN","MAGDLB1",122,0)
 I WHO="" S WHO="UNKNOWN"
"RTN","MAGDLB1",123,0)
 I '$D(^MAGD(2006.599,0)) D
"RTN","MAGDLB1",124,0)
 . S ^MAGD(2006.599,0)="Dicom Error Log^2006.599^^"
"RTN","MAGDLB1",125,0)
 . Q
"RTN","MAGDLB1",126,0)
 S ENTRY=$P(^MAGD(2006.599,0),"^",3)+1
"RTN","MAGDLB1",127,0)
 S $P(^MAGD(2006.599,0),"^",3)=ENTRY
"RTN","MAGDLB1",128,0)
 S $P(^MAGD(2006.599,0),"^",4)=$P(^MAGD(2006.599,0),"^",4)+1
"RTN","MAGDLB1",129,0)
 S ^MAGD(2006.599,ENTRY,0)=NOW_"^"_WHY_"^"_FILE_"^"_MODEL
"RTN","MAGDLB1",130,0)
 S ^MAGD(2006.599,ENTRY,1)=WHO_"^"_PAT_"^"_PID_"^"_CASENO_"^"_MACHID
"RTN","MAGDLB1",131,0)
 S ^MAGD(2006.599,"B",NOW,ENTRY)=""
"RTN","MAGDLB1",132,0)
 Q
"RTN","MAGDLB1",133,0)
 ;
"RTN","MAGDLB1",134,0)
SET ;
"RTN","MAGDLB1",135,0)
 S MAGTYPE=$P(^MAGD(2006.575,MAGIEN,"TYPE"),"^")
"RTN","MAGDLB1",136,0)
 Q:$P($G(^MAGD(2006.575,MAGIEN,"FIXD")),"^")  ; Already fixed.
"RTN","MAGDLB1",137,0)
 ; Only process Radiology images...medicine images done by other rtns.
"RTN","MAGDLB1",138,0)
 I MAGTYPE'["RAD" Q
"RTN","MAGDLB1",139,0)
 S DATA=^MAGD(2006.575,MAGIEN,0)
"RTN","MAGDLB1",140,0)
 S FILE=$P(^MAGD(2006.575,MAGIEN,0),"^")
"RTN","MAGDLB1",141,0)
 S DATA1=^MAGD(2006.575,MAGIEN,1) ; Case no. info
"RTN","MAGDLB1",142,0)
 S DATA2=$G(^MAGD(2006.575,MAGIEN,"AMFG")) ; Modality info
"RTN","MAGDLB1",143,0)
 S PAT=$P(DATA,"^",4),PID=$P(DATA,"^",3),REASON=$P(DATA,"^",2)
"RTN","MAGDLB1",144,0)
 S MOD=$P(DATA2,"^"),MODEL=$P(DATA2,"^",6)
"RTN","MAGDLB1",145,0)
 S CASENO=$P(DATA1,"^",2),MACHID=$P(DATA1,"^",4)
"RTN","MAGDLB1",146,0)
 S Y=$P(DATA1,"^",3) X ^DD("DD") S DATE=Y
"RTN","MAGDLB1",147,0)
 S COMNT1=$G(^MAGD(2006.575,MAGIEN,"ACSTXT")) ; 1st line comment.
"RTN","MAGDLB1",148,0)
 S MACHID=$P(DATA1,"^",4),GWLOC=$P(DATA2,"^",9)
"RTN","MAGDLB1",149,0)
 S ANS="" D DISPLAY S ANS=$$ASK
"RTN","MAGDLB1",150,0)
 I ANS="Q"!(ANS["^") S (OOUT,OUT)=1 D SETPREV Q
"RTN","MAGDLB1",151,0)
 I ANS="N" S OUT=1 D SETPREV Q
"RTN","MAGDLB1",152,0)
 I ANS="P" D CHKPREV Q
"RTN","MAGDLB1",153,0)
 I ANS="D" D SETDEL,SETPREV Q
"RTN","MAGDLB1",154,0)
 Q:OUT
"RTN","MAGDLB1",155,0)
 K MAGDY W !," Lookup by case number or patient name"
"RTN","MAGDLB1",156,0)
 ;
"RTN","MAGDLB1",157,0)
 ; Fall Through intended
"RTN","MAGDLB1",158,0)
LOOK ;
"RTN","MAGDLB1",159,0)
 ;D ^MAGDLB2 Q:'$D(MAGDY)  Q:MAGDY'[""
"RTN","MAGDLB1",160,0)
 D EN^MAGDRA2 Q:'$D(MAGDY)  Q:MAGDY'[""
"RTN","MAGDLB1",161,0)
 D NEWCASE,CHK,NEWDIS S ANS=$$ASK
"RTN","MAGDLB1",162,0)
 I ANS="Q"!(ANS["^") S (OOUT,OUT)=1 D SETPREV Q
"RTN","MAGDLB1",163,0)
 I ANS="D" D SETDEL,SETPREV Q
"RTN","MAGDLB1",164,0)
 I ANS="P" D CHKPREV Q
"RTN","MAGDLB1",165,0)
 I ANS="N" S OUT=1 D SETPREV Q
"RTN","MAGDLB1",166,0)
 Q:OUT
"RTN","MAGDLB1",167,0)
 D UPDT
"RTN","MAGDLB1",168,0)
 I ANS="P" D CHKPREV Q
"RTN","MAGDLB1",169,0)
 D SETMAG
"RTN","MAGDLB1",170,0)
 Q
"RTN","MAGDLB1",171,0)
 ;
"RTN","MAGDLB1",172,0)
DATELOOP(START,STOP) ;Loop thru the "AD" cross reference
"RTN","MAGDLB1",173,0)
 N MAGIEN,SUID,THEDT,FIRST,OOUT,MAGFIX,MDV
"RTN","MAGDLB1",174,0)
 S KFIXALL=$$SECKEY^MAGDLB12
"RTN","MAGDLB1",175,0)
 S THEDT=START-.1,(OOUT,FIRST)=0
"RTN","MAGDLB1",176,0)
 F  S THEDT=$O(^MAGD(2006.575,"AD",THEDT)) Q:'THEDT!(THEDT>STOP)!(OOUT)  D
"RTN","MAGDLB1",177,0)
 . S MAGIEN=0
"RTN","MAGDLB1",178,0)
 . F  S MAGIEN=$O(^MAGD(2006.575,"AD",THEDT,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGDLB1",179,0)
 . . I '$D(^MAGD(2006.575,MAGIEN,0)) D  Q
"RTN","MAGDLB1",180,0)
 . . . K ^MAGD(2006.575,"AD",THEDT,MAGIEN)
"RTN","MAGDLB1",181,0)
 . . . Q
"RTN","MAGDLB1",182,0)
 . . I $P($G(^MAGD(2006.575,MAGIEN,"TYPE")),U,1)'["RAD" Q
"RTN","MAGDLB1",183,0)
 . . ; No security key, or gateway site other than this site
"RTN","MAGDLB1",184,0)
 . . I 'KFIXALL,$P($G(^MAGD(2006.575,MAGIEN,1)),U,5)'=$G(DUZ(2)) Q
"RTN","MAGDLB1",185,0)
 . . I 'FIRST S PREV=MAGIEN,FIRST=1
"RTN","MAGDLB1",186,0)
 . . D SET
"RTN","MAGDLB1",187,0)
 . . Q
"RTN","MAGDLB1",188,0)
 . Q
"RTN","MAGDLB1",189,0)
 Q
"RTN","MAGDLB1",190,0)
 ;
"RTN","MAGDLB1",191,0)
SETPREV ;
"RTN","MAGDLB1",192,0)
 S PREV=MAGIEN,PREVS=$G(SUID)
"RTN","MAGDLB1",193,0)
 Q
"RTN","MAGDLB1",194,0)
 ;
"RTN","MAGDLB1",195,0)
SETMAG ;
"RTN","MAGDLB1",196,0)
 S FIRST=MAGIEN,FIRSTS=$G(SUID),MAGIEN=PREV,SUID=$G(PREVS)
"RTN","MAGDLB1",197,0)
 S PREV=FIRST,PREVS=FIRSTS
"RTN","MAGDLB1",198,0)
 Q
"RTN","MAGDLB1",199,0)
 ;
"RTN","MAGDLB1",200,0)
CHKPREV ;
"RTN","MAGDLB1",201,0)
 S OUT=1 N STATUS
"RTN","MAGDLB1",202,0)
 I '$D(MAGFIX(PREV)) D SETMAG G SET
"RTN","MAGDLB1",203,0)
 S STATUS=$S($G(MAGFIX(PREV))="D":"deleted",1:"corrected")
"RTN","MAGDLB1",204,0)
 W !,"Previous entry has been "_STATUS_".",$C(7)
"RTN","MAGDLB1",205,0)
 G SET
"RTN","MAGDLB1",206,0)
 Q
"RTN","MAGDLB1",207,0)
 ;
"RTN","MAGDLB1",208,0)
NAME(ENTRY) ;SITE NAME
"RTN","MAGDLB1",209,0)
 N NAME,MAGOUT,MAGERR
"RTN","MAGDLB1",210,0)
 I '$G(ENTRY) Q ""
"RTN","MAGDLB1",211,0)
 D GETS^DIQ(4,ENTRY,".01","E","MAGOUT","MAGERR")
"RTN","MAGDLB1",212,0)
 I $D(MAGERR("DIERR")) Q ""
"RTN","MAGDLB1",213,0)
 S NAME=$G(MAGOUT(4,ENTRY_",",.01,"E"))
"RTN","MAGDLB1",214,0)
 Q NAME
"RTN","MAGDLB1",215,0)
 ;
"RTN","MAGDLB6")
0^4^B5964230
"RTN","MAGDLB6",1,0)
MAGDLB6 ;WOIFO/LB,MLH - DICOM file utilities ; 08 Sep 2010 1:51 PM
"RTN","MAGDLB6",2,0)
 ;;3.0;IMAGING;**21,10,11,51,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDLB6",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDLB6",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDLB6",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDLB6",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDLB6",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDLB6",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDLB6",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDLB6",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDLB6",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDLB6",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDLB6",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDLB6",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDLB6",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDLB6",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDLB6",17,0)
 ;;
"RTN","MAGDLB6",18,0)
 Q
"RTN","MAGDLB6",19,0)
 ;
"RTN","MAGDLB6",20,0)
XREF ; Set "F" xref for fields 36 and 9 - Gateway Location and Study UID
"RTN","MAGDLB6",21,0)
 N GWLOC ; -- location number of DICOM Gateway
"RTN","MAGDLB6",22,0)
 N ORIG ; --- Entry number for original image for this study
"RTN","MAGDLB6",23,0)
 N PREDA ; -- original DA value
"RTN","MAGDLB6",24,0)
 S GWLOC=$P($G(^MAGD(2006.575,DA,1)),"^",5) Q:'GWLOC
"RTN","MAGDLB6",25,0)
 ;
"RTN","MAGDLB6",26,0)
 ; If this is the first one, create the "F" cross-reference
"RTN","MAGDLB6",27,0)
 ;
"RTN","MAGDLB6",28,0)
 I '$D(^MAGD(2006.575,"F",GWLOC,X)) D  Q
"RTN","MAGDLB6",29,0)
 . S ^MAGD(2006.575,"F",GWLOC,X,DA)=""
"RTN","MAGDLB6",30,0)
 . Q
"RTN","MAGDLB6",31,0)
 ;
"RTN","MAGDLB6",32,0)
 ; Otherwise, the image is "related" to the original one
"RTN","MAGDLB6",33,0)
 ; for this study.
"RTN","MAGDLB6",34,0)
 ;
"RTN","MAGDLB6",35,0)
 S ORIG=$O(^MAGD(2006.575,"F",GWLOC,X,0))
"RTN","MAGDLB6",36,0)
 Q:'$D(^MAGD(2006.575,ORIG,0))  ; No longer in database
"RTN","MAGDLB6",37,0)
 S PREDA=DA D
"RTN","MAGDLB6",38,0)
 . N D0,DA,DD,DIC,DIE,ERR,X,Y
"RTN","MAGDLB6",39,0)
 . S DIC="^MAGD(2006.575,"_ORIG_",""RLATE"","
"RTN","MAGDLB6",40,0)
 . S DIC(0)="L"
"RTN","MAGDLB6",41,0)
 . S DA(1)=ORIG,X=PREDA
"RTN","MAGDLB6",42,0)
 . S ERR="Related Image ("_X_") for image #"_ORIG_" not filed."
"RTN","MAGDLB6",43,0)
 . K DO D FILE^DICN K DO
"RTN","MAGDLB6",44,0)
 . I Y=-1 D EN^DDIOL(ERR,"","!")
"RTN","MAGDLB6",45,0)
 . Q
"RTN","MAGDLB6",46,0)
 Q
"RTN","MAGDLB6",47,0)
 ;
"RTN","MAGDLB6",48,0)
XREFK ; Kill "F" cross-reference
"RTN","MAGDLB6",49,0)
 N GWLOC
"RTN","MAGDLB6",50,0)
 Q:'DA
"RTN","MAGDLB6",51,0)
 S GWLOC=$P($G(^MAGD(2006.575,DA,1)),"^",5) Q:'GWLOC
"RTN","MAGDLB6",52,0)
 K ^MAGD(2006.575,"F",GWLOC,X,DA)
"RTN","MAGDLB6",53,0)
 Q
"RTN","MAGDLB6",54,0)
 ;
"RTN","MAGDMEDJ")
0^5^B30422298
"RTN","MAGDMEDJ",1,0)
MAGDMEDJ ;WOIFO/LB,RRB,MLH - Routine to fix failed DICOM entries ; 11 Apr 2012 1:01 PM
"RTN","MAGDMEDJ",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDMEDJ",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDMEDJ",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDMEDJ",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDMEDJ",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDMEDJ",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDMEDJ",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDMEDJ",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDMEDJ",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDMEDJ",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDMEDJ",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDMEDJ",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDMEDJ",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDMEDJ",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDMEDJ",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDMEDJ",17,0)
 ;;
"RTN","MAGDMEDJ",18,0)
 Q
"RTN","MAGDMEDJ",19,0)
L ;Loop thru the entire file for entries that need processing
"RTN","MAGDMEDJ",20,0)
 ;The "F" xref is set for unique Study UIDs. The entry setting this xref
"RTN","MAGDMEDJ",21,0)
 ;will also have a "RLATE" node with all the Xray images associated with
"RTN","MAGDMEDJ",22,0)
 ;that unique Study UID.
"RTN","MAGDMEDJ",23,0)
 N ANS,CASEDATE,CASENO,COMNT1,DATA,DATA1,DATA2,DATE,FILE,FOUND,MACHID,MAGDY,MAGIEN,MAGDIMG
"RTN","MAGDMEDJ",24,0)
 N MAGDIEN,MOD,MODEL,MSG,MAGPAT,MAGTYPE,MEDFILE
"RTN","MAGDMEDJ",25,0)
 N NEWCAS,NEWDFN,NEWDTI,NEWDTIM,NEWMUL,NEWNME,NEWPIEN,NEWPROC,NEWSSN
"RTN","MAGDMEDJ",26,0)
 N OOUT,OUT,PAT,PID,REASON,STUDYUID,JJ,ITEM
"RTN","MAGDMEDJ",27,0)
 I '$D(^MAGD(2006.575,"F")) W !,"Nothing to process!" Q
"RTN","MAGDMEDJ",28,0)
 S (MAGIEN,STUDYUID,OOUT,OUT)=0
"RTN","MAGDMEDJ",29,0)
 F  S STUDYUID=$O(^MAGD(2006.575,"F",STUDYUID)) Q:STUDYUID<1!(OOUT)  D
"RTN","MAGDMEDJ",30,0)
 . S MAGIEN=$O(^MAGD(2006.575,"F",STUDYUID,0)) Q:'MAGIEN
"RTN","MAGDMEDJ",31,0)
 . Q:'$D(^MAGD(2006.575,MAGIEN,0))
"RTN","MAGDMEDJ",32,0)
 . Q:$P($G(^MAGD(2006.575,MAGIEN,"FIXD")),"^")    ;Already fixed.
"RTN","MAGDMEDJ",33,0)
 . ; Only Medicine images
"RTN","MAGDMEDJ",34,0)
 . S MAGTYPE=$G(^MAGD(2006.575,MAGIEN,"TYPE"))
"RTN","MAGDMEDJ",35,0)
 . Q:MAGTYPE'["MED"
"RTN","MAGDMEDJ",36,0)
 . ; Only Medicine images need to be fixed thru this program.
"RTN","MAGDMEDJ",37,0)
 . S DATA=^MAGD(2006.575,MAGIEN,0),FILE=$P(^(0),"^")
"RTN","MAGDMEDJ",38,0)
 . S DATA1=^MAGD(2006.575,MAGIEN,1)    ;Case no. info
"RTN","MAGDMEDJ",39,0)
 . S DATA2=$G(^MAGD(2006.575,MAGIEN,"AMFG"))    ;Modality info
"RTN","MAGDMEDJ",40,0)
 . S PAT=$P(DATA,"^",4),PID=$P(DATA,"^",3),REASON=$P(DATA,"^",2)
"RTN","MAGDMEDJ",41,0)
 . S MOD=$P(DATA2,"^"),MODEL=$P(DATA2,"^",6)
"RTN","MAGDMEDJ",42,0)
 . S CASENO=$P(DATA1,"^",2),CASEDATE=$P(DATA1,"^",3)
"RTN","MAGDMEDJ",43,0)
 . S MACHID=$P(DATA1,"^",4),DATE=CASEDATE
"RTN","MAGDMEDJ",44,0)
 . S COMNT1=$G(^MAGD(2006.575,MAGIEN,"ACSTXT")) ;1st line comment.
"RTN","MAGDMEDJ",45,0)
 . ; Use patient information send via DICOM FILE
"RTN","MAGDMEDJ",46,0)
 . S MEDFILE=$$FILE^MAGDMEDI($P(CASENO,"-"))
"RTN","MAGDMEDJ",47,0)
 . D DISPLAY S ANS=$$ASK^MAGDLB1 I ANS="Q"!(ANS["^") S (OOUT,OUT)=1 Q
"RTN","MAGDMEDJ",48,0)
 . I ANS="N" S OUT=1 Q
"RTN","MAGDMEDJ",49,0)
 . I ANS="D" D SETDEL Q
"RTN","MAGDMEDJ",50,0)
 . Q:OUT
"RTN","MAGDMEDJ",51,0)
 . K MAGDY W !," Lookup patient name",!
"RTN","MAGDMEDJ",52,0)
 . S MAGPAT=$$PATLK^MCARUTL2
"RTN","MAGDMEDJ",53,0)
 . I 'MAGPAT D  Q
"RTN","MAGDMEDJ",54,0)
 . . W !,"Cannot update if patient cannot be identified.",$C(7)
"RTN","MAGDMEDJ",55,0)
 . ; If patient name could not be determined then we cannot correct.
"RTN","MAGDMEDJ",56,0)
 . D PATSUB^MAGDMEDK(.MAGSUB,MAGPAT)
"RTN","MAGDMEDJ",57,0)
 . Q:'$D(MAGSUB)#10   ;No subspecialties found
"RTN","MAGDMEDJ",58,0)
 . ; Select subspecialty
"RTN","MAGDMEDJ",59,0)
 . S SUB=$$DISPLAY^MAGDMEDL(.MAGSUB) I 'SUB D  Q
"RTN","MAGDMEDJ",60,0)
 . . W !,"No specialty selected"
"RTN","MAGDMEDJ",61,0)
 . S SUB=$P(MAGSUB(SUB),"^"),SUB=$P(SUB,"(",2),SUB=$P(SUB,")",1)
"RTN","MAGDMEDJ",62,0)
 . D SUB^MAGDMEDK(SUB,MAGPAT)
"RTN","MAGDMEDJ",63,0)
 . I '$D(MAGMC)#10 D  Q
"RTN","MAGDMEDJ",64,0)
 . . W !,"No entries were found for the selected specialty."
"RTN","MAGDMEDJ",65,0)
 . D LOOP^MAGDMEDL(.XX,MAGPAT,SUB,CASEDATE)
"RTN","MAGDMEDJ",66,0)
 . I $D(XX(0)),$P(XX(0),"^")=0 D  Q:MAGDOUT
"RTN","MAGDMEDJ",67,0)
 . . S MAGDOUT=0
"RTN","MAGDMEDJ",68,0)
 . . W !,"No Medicine file entries found for this patient"
"RTN","MAGDMEDJ",69,0)
 . . W !,"on the date/time the image was captured."
"RTN","MAGDMEDJ",70,0)
 . . S FOUND=$$ASKMORE^MAGDMEDL I 'FOUND S MAGDOUT=1
"RTN","MAGDMEDJ",71,0)
 . S ITEM=$$DISPLAY^MAGDMEDL(.XX) I 'ITEM D  Q
"RTN","MAGDMEDJ",72,0)
 . . W !,"Cannot update if Medicine file entry cannot be found.",$C(7)
"RTN","MAGDMEDJ",73,0)
 . D NEWCASE,CHK,NEWDIS S ANS=$$ASK^MAGDLB1 I ANS="D" D SETDEL Q
"RTN","MAGDMEDJ",74,0)
 . I ANS="Q"!(ANS["^") S (OOUT,OUT)=1 Q
"RTN","MAGDMEDJ",75,0)
 . I ANS="N" S OUT=1 Q
"RTN","MAGDMEDJ",76,0)
 . Q:OUT  D UPDT
"RTN","MAGDMEDJ",77,0)
 . Q
"RTN","MAGDMEDJ",78,0)
 K OUT,OOUT,ANS,MAGDOUT,MAGMC,MAGSUB,SUB,XX
"RTN","MAGDMEDJ",79,0)
 Q
"RTN","MAGDMEDJ",80,0)
DISPLAY ;
"RTN","MAGDMEDJ",81,0)
 D DISPLAY^MAGDLB1
"RTN","MAGDMEDJ",82,0)
 Q
"RTN","MAGDMEDJ",83,0)
NEWCASE ;
"RTN","MAGDMEDJ",84,0)
 Q:'$D(XX(0))
"RTN","MAGDMEDJ",85,0)
 Q:'$D(XX(ITEM,1))
"RTN","MAGDMEDJ",86,0)
 S MAGDY=$G(XX(ITEM,1))  ;W !,MAGDY
"RTN","MAGDMEDJ",87,0)
 I MAGDY="" Q
"RTN","MAGDMEDJ",88,0)
 S NEWDFN=MAGPAT,NEWNME=$P(MAGDY,"^",2),NEWSSN=$P(MAGDY,"^",3)
"RTN","MAGDMEDJ",89,0)
 S NEWCAS=$P(MAGDY,"^",1),NEWPROC=$P(MAGDY,"^",5),NEWDTI=$P(MAGDY,"^",4)
"RTN","MAGDMEDJ",90,0)
 S NEWPIEN=$P(MAGDY,"^",6),MAGDIMG=$P(MAGDY,"^",7),MEDFILE=$P(MAGDY,"^",8)
"RTN","MAGDMEDJ",91,0)
 Q
"RTN","MAGDMEDJ",92,0)
CHK ;remove any punctuation before doing comparison on SSN
"RTN","MAGDMEDJ",93,0)
 ;stop on 1st check.
"RTN","MAGDMEDJ",94,0)
 N OLD,I
"RTN","MAGDMEDJ",95,0)
 Q:MAGDY=""
"RTN","MAGDMEDJ",96,0)
 S OLD="" F I=1:1:$L(PID) I $E(PID,I)?1AN S OLD=OLD_$E(PID,I)
"RTN","MAGDMEDJ",97,0)
 I NEWSSN'=OLD D  Q
"RTN","MAGDMEDJ",98,0)
 . S MSG="Social Security numbers do not match. Update?"
"RTN","MAGDMEDJ",99,0)
 . Q
"RTN","MAGDMEDJ",100,0)
 I NEWNME'=PAT D
"RTN","MAGDMEDJ",101,0)
 . S MSG="Patient names do not match. Update?"
"RTN","MAGDMEDJ",102,0)
 . Q
"RTN","MAGDMEDJ",103,0)
 ;Finally the problem is with the case number/DICOM ID
"RTN","MAGDMEDJ",104,0)
 S MSG="DICOM ID number is different. Update?"
"RTN","MAGDMEDJ",105,0)
 Q
"RTN","MAGDMEDJ",106,0)
NEWDIS ;
"RTN","MAGDMEDJ",107,0)
 D NEWDIS^MAGDLB1
"RTN","MAGDMEDJ",108,0)
 Q
"RTN","MAGDMEDJ",109,0)
UPDT ;
"RTN","MAGDMEDJ",110,0)
 N %,RLATEIEN ; utility variable for FM calls
"RTN","MAGDMEDJ",111,0)
 W !,"Are you sure you want to CORRECT?" S %=2 D YN^DICN
"RTN","MAGDMEDJ",112,0)
 I %=-1!(%=2) S OUT=1 Q
"RTN","MAGDMEDJ",113,0)
 W !,"Updating the file."
"RTN","MAGDMEDJ",114,0)
 S ^MAGD(2006.575,MAGIEN,"FIXD")="1^"_NEWDFN_"^"_NEWNME_"^"_NEWSSN_"^"_NEWCAS_"^"_NEWDTI_"^^^"_NEWPIEN W "."
"RTN","MAGDMEDJ",115,0)
 S ^MAGD(2006.575,MAGIEN,"FIXPR")=NEWPIEN_"^"_NEWPROC_"^"_$G(MAGDIMG)_"^"_MEDFILE W "."
"RTN","MAGDMEDJ",116,0)
 S MACHID=$S(MACHID="":"A",1:MACHID)  ;Server ID
"RTN","MAGDMEDJ",117,0)
 S ^MAGD(2006.575,"AFX",MACHID,MAGIEN)="" W "."
"RTN","MAGDMEDJ",118,0)
 ; Update all related records with updated fields
"RTN","MAGDMEDJ",119,0)
 S RLATEIEN=""
"RTN","MAGDMEDJ",120,0)
 F  S RLATEIEN=$O(^MAGD(2006.575,MAGIEN,"RLATE","B",RLATEIEN)) Q:RLATEIEN=""  D
"RTN","MAGDMEDJ",121,0)
 . S ^MAGD(2006.575,RLATEIEN,"FIXD")="1^"_NEWDFN_"^"_NEWNME_"^"_NEWSSN_"^"_NEWCAS_"^"_NEWDTI_"^"_NEWMUL_"^"_NEWDTIM W "."
"RTN","MAGDMEDJ",122,0)
 . S ^MAGD(2006.575,RLATEIEN,"FIXPR")=NEWPIEN_"^"_NEWPROC W "."
"RTN","MAGDMEDJ",123,0)
 . S ^MAGD(2006.575,"AFX",MACHID,RLATEIEN)="" W "."
"RTN","MAGDMEDJ",124,0)
 . Q
"RTN","MAGDMEDJ",125,0)
 Q
"RTN","MAGDMEDJ",126,0)
SETDEL ;Entry to be deleted
"RTN","MAGDMEDJ",127,0)
 D SETDEL^MAGDLB1
"RTN","MAGDMEDJ",128,0)
 Q
"RTN","MAGDMEDJ",129,0)
ASKWHCH ;More than one patient found with same name
"RTN","MAGDMEDJ",130,0)
 S MAGPAT=""
"RTN","MAGDMEDJ",131,0)
 N ITEM
"RTN","MAGDMEDJ",132,0)
 Q:'$D(JJ(0))
"RTN","MAGDMEDJ",133,0)
 S ITEM=$$DISPLAY^MAGDMEDL(.JJ)
"RTN","MAGDMEDJ",134,0)
 I ITEM S MAGPAT=$P(JJ(+ITEM,1),"^",3)
"RTN","MAGDMEDJ",135,0)
 Q
"RTN","MAGDQR00")
0^6^B4967195
"RTN","MAGDQR00",1,0)
MAGDQR00 ;WOIFO/EdM,BT - Imaging RPCs for Query/Retrieve ; 04/05/2006 08:43
"RTN","MAGDQR00",2,0)
 ;;3.0;IMAGING;**51,54,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR00",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR00",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR00",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR00",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR00",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR00",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR00",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR00",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR00",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR00",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR00",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR00",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR00",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR00",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR00",17,0)
 ;;
"RTN","MAGDQR00",18,0)
 Q
"RTN","MAGDQR00",19,0)
 ;
"RTN","MAGDQR00",20,0)
 ; Query/Retrieve
"RTN","MAGDQR00",21,0)
 ;
"RTN","MAGDQR00",22,0)
 ; Step 1: The application (Java system) receives a C-FIND request
"RTN","MAGDQR00",23,0)
 ;
"RTN","MAGDQR00",24,0)
 ; Step 2: The application interprets the DICOM message and
"RTN","MAGDQR00",25,0)
 ;         calls an RPC on traditional VistA
"RTN","MAGDQR00",26,0)
 ;
"RTN","MAGDQR00",27,0)
 ;           RPC name: MAG CFIND QUERY
"RTN","MAGDQR00",28,0)
 ;             input:  array of:    tag | VR | flag | value
"RTN","MAGDQR00",29,0)
 ;             input:  scalar:      batch-identifier, see below
"RTN","MAGDQR00",30,0)
 ;             input:  scalar:      max # entities in response
"RTN","MAGDQR00",31,0)
 ;             output: array of:    header = # entities total | # in current batch
"RTN","MAGDQR00",32,0)
 ;                    followed by   tag | VR | flag | value
"RTN","MAGDQR00",33,0)
 ;                             or   <start sequence>
"RTN","MAGDQR00",34,0)
 ;                             or   <end sequence>
"RTN","MAGDQR00",35,0)
 ;
"RTN","MAGDQR00",36,0)
 ;          Batch-identifier:
"RTN","MAGDQR00",37,0)
 ;          There are four kinds of calls:
"RTN","MAGDQR00",38,0)
 ;           1. initial call
"RTN","MAGDQR00",39,0)
 ;              value of this parameter is "0"
"RTN","MAGDQR00",40,0)
 ;              RPC will create result-set and start a background process to
"RTN","MAGDQR00",41,0)
 ;              perform the query
"RTN","MAGDQR00",42,0)
 ;           2. "are you ready" call
"RTN","MAGDQR00",43,0)
 ;              value of this parameter is "n|0"
"RTN","MAGDQR00",44,0)
 ;              where 'n' identifies the result-set
"RTN","MAGDQR00",45,0)
 ;              RPC will check if the query is ready and, when available, will
"RTN","MAGDQR00",46,0)
 ;              return "initial batch" of responses
"RTN","MAGDQR00",47,0)
 ;           3. continuation call
"RTN","MAGDQR00",48,0)
 ;              value of this parameter is "n|m"
"RTN","MAGDQR00",49,0)
 ;              where 'n' identifies the result-set
"RTN","MAGDQR00",50,0)
 ;              where 'm' identifies the sequence
"RTN","MAGDQR00",51,0)
 ;              number of the first item to be returned RPC will return
"RTN","MAGDQR00",52,0)
 ;              next batch of responses
"RTN","MAGDQR00",53,0)
 ;           4. final call
"RTN","MAGDQR00",54,0)
 ;              value of this parameter is "n|-1"
"RTN","MAGDQR00",55,0)
 ;              where 'n' identifies the result-set
"RTN","MAGDQR00",56,0)
 ;              RPC will not return any responses but clean-up any storage used
"RTN","MAGDQR00",57,0)
 ;              for result-set
"RTN","MAGDQR00",58,0)
 ;
"RTN","MAGDQR00",59,0)
 ;          Suggested values for second parameter:
"RTN","MAGDQR00",60,0)
 ;            0 for initial call
"RTN","MAGDQR00",61,0)
 ;           -1 for final call
"RTN","MAGDQR00",62,0)
 ;           >0 (sequence number of first entity to be returned)
"RTN","MAGDQR00",63,0)
 ;              for continuation call
"RTN","MAGDQR00",64,0)
 ;          Result-set will also have a "time stamp of last access"
"RTN","MAGDQR00",65,0)
 ;          so that an overall clean-up process can get rid of
"RTN","MAGDQR00",66,0)
 ;          obsolete result-sets.
"RTN","MAGDQR00",67,0)
 ;
"RTN","MAGDQR00",68,0)
 ; Step 3: The application interprets the results from the RPC
"RTN","MAGDQR00",69,0)
 ;         and will ask VistA which images belong to a
"RTN","MAGDQR00",70,0)
 ;         study-UID:
"RTN","MAGDQR00",71,0)
 ;
"RTN","MAGDQR00",72,0)
 ;           RPC name: MAG STUDY UID QUERY
"RTN","MAGDQR00",73,0)
 ;             input:  scalar       study uid
"RTN","MAGDQR00",74,0)
 ;             input:  scalar       flag: include routed copies in result
"RTN","MAGDQR00",75,0)
 ;             input:  scalar       "my location" identifier
"RTN","MAGDQR00",76,0)
 ;             output: array of:    header = # of entities in response
"RTN","MAGDQR00",77,0)
 ;                                  image# | path+file name | username | password
"RTN","MAGDQR00",78,0)
 ;
"RTN","MAGDQR00",79,0)
 ;         Do we want to return the username and password in each
"RTN","MAGDQR00",80,0)
 ;         result, or do we want two separate RPC calls: one to
"RTN","MAGDQR00",81,0)
 ;         get path+filename for each file, and one that returns
"RTN","MAGDQR00",82,0)
 ;         the username and password given a path?
"RTN","MAGDQR00",83,0)
 ;
"RTN","MAGDQR00",84,0)
 ; Step 4: The application will create new DICOM entities to transmit
"RTN","MAGDQR00",85,0)
 ;         to its client. It has the information to access the
"RTN","MAGDQR00",86,0)
 ;         image files that exist on VistA (either .dcm files or
"RTN","MAGDQR00",87,0)
 ;         .txt + .tga pairs). It needs to ask VistA for the
"RTN","MAGDQR00",88,0)
 ;         current and correct information to place in the headers
"RTN","MAGDQR00",89,0)
 ;         of the DICOM entities to be transmitted:
"RTN","MAGDQR00",90,0)
 ;
"RTN","MAGDQR00",91,0)
 ;           RPC name: MAG IMAGE CURRENT INFO
"RTN","MAGDQR00",92,0)
 ;             input:  scalar       image #
"RTN","MAGDQR00",93,0)
 ;             output: array of:    header = # of entities in response
"RTN","MAGDQR00",94,0)
 ;                                  tag | VS | flag | value
"RTN","MAGDQR00",95,0)
 ;
"RTN","MAGDQR00",96,0)
 ;         Do we need an additional input array to specify the
"RTN","MAGDQR00",97,0)
 ;         list of data-fields to be returned?
"RTN","MAGDQR00",98,0)
 ;
"RTN","MAGDQR00",99,0)
 ; Non-supported tags for Query/Retrieve
"RTN","MAGDQR00",100,0)
 ; 0008,1110  O  Referenced Study Sequence
"RTN","MAGDQR00",101,0)
 ; 0008,1150  O  >Referenced SOP Class UID
"RTN","MAGDQR00",102,0)
 ; 0008,1155  O  >Referenced SOP Instance UID
"RTN","MAGDQR00",103,0)
 ; 0008,1120  O  Referenced Patient Sequence
"RTN","MAGDQR00",104,0)
 ; 0008,1150  O  >Referenced SOP Class UID
"RTN","MAGDQR00",105,0)
 ; 0008,1155  O  >Referenced SOP Instance UID
"RTN","MAGDQR00",106,0)
 ; 0010,1020  O  Patient's Size   [field not populated]
"RTN","MAGDQR00",107,0)
 ; 0010,1030  O  Patient's Weight [field not populated]
"RTN","MAGDQR00",108,0)
 ; 0020,1070  O  Other Study Numbers
"RTN","MAGDQR00",109,0)
 ; 0020,1200  O  Number of Patient Related Studies
"RTN","MAGDQR00",110,0)
 ; 0020,1202  O  Number of Patient Related Series
"RTN","MAGDQR00",111,0)
 ; 0020,1204  O  Number of Patient Related Instances
"RTN","MAGDQR00",112,0)
 ;
"RTN","MAGDQR00",113,0)
 ; Supported tags
"RTN","MAGDQR00",114,0)
 ; 0008,0020  R  Study Date
"RTN","MAGDQR00",115,0)
 ; 0008,0030  R  Study Time
"RTN","MAGDQR00",116,0)
 ; 0008,0050  R  Accession Number
"RTN","MAGDQR00",117,0)
 ; 0010,0010  R  Patient's Name
"RTN","MAGDQR00",118,0)
 ; 0010,0020  R  Patient ID
"RTN","MAGDQR00",119,0)
 ; 0020,0010  R  Study ID
"RTN","MAGDQR00",120,0)
 ; 0020,000D  U  Study Instance UID
"RTN","MAGDQR00",121,0)
 ; 0008,0018  U  Image Instance UID
"RTN","MAGDQR00",122,0)
 ; 0020,000E  U  Series Instance UID
"RTN","MAGDQR00",123,0)
 ;
"RTN","MAGDQR00",124,0)
 ; 0008,0061  O  Modalities in Study
"RTN","MAGDQR00",125,0)
 ; 0008,0090  O  Referring Physician's Name
"RTN","MAGDQR00",126,0)
 ; 0008,1030  O  Study Description
"RTN","MAGDQR00",127,0)
 ; 0008,1032  O  Procedure Code Sequence
"RTN","MAGDQR00",128,0)
 ; 0008,0100  O  >Code Value
"RTN","MAGDQR00",129,0)
 ; 0008,0102  O  >Coding Scheme Designator
"RTN","MAGDQR00",130,0)
 ; 0008,0103  O  >Coding Scheme Version
"RTN","MAGDQR00",131,0)
 ; 0008,0104  O  >Code Meaning
"RTN","MAGDQR00",132,0)
 ; 0008,1060  O  Name of Physician(s) Reading Study
"RTN","MAGDQR00",133,0)
 ; 0010,0030  O  Patient's Birth Date
"RTN","MAGDQR00",134,0)
 ; 0010,0032  O  Patient's Birth Time [probably always blank]
"RTN","MAGDQR00",135,0)
 ; 0010,0040  O  Patient's Sex
"RTN","MAGDQR00",136,0)
 ; 0010,1000  O  Other Patient IDs
"RTN","MAGDQR00",137,0)
 ; 0010,1001  O  Other Patient Names
"RTN","MAGDQR00",138,0)
 ; 0010,1010  O  Patient's Age
"RTN","MAGDQR00",139,0)
 ; 0010,2160  O  Ethnic Group
"RTN","MAGDQR00",140,0)
 ; 0010,2180  O  Occupation
"RTN","MAGDQR00",141,0)
 ; 0010,21B0  O  Additional Patient History
"RTN","MAGDQR00",142,0)
 ; 0020,1206  O  Number of Study Related Series
"RTN","MAGDQR00",143,0)
 ; 0020,1208  O  Number of Study Related Instances
"RTN","MAGDQR00",144,0)
 ; 4008,010C  O  Interpretation Author
"RTN","MAGDQR00",145,0)
 ;
"RTN","MAGDQR00",146,0)
 ; Problem cases left over:
"RTN","MAGDQR00",147,0)
 ; 0008,0062  O  SOP Classes in Study [supported?]
"RTN","MAGDQR00",148,0)
 ; 0008,1080  O  Admitting Diagnoses Description
"RTN","MAGDQR00",149,0)
 ; 0010,4000  O  Patient Comments
"RTN","MAGDQR00",150,0)
 ;
"RTN","MAGDQR00",151,0)
 ;
"RTN","MAGDQR00",152,0)
HDRTAG() ; Result Header
"RTN","MAGDQR00",153,0)
 Q "0000,0902"
"RTN","MAGDQR00",154,0)
 ;
"RTN","MAGDQR00",155,0)
STDESTAG() ; Study Description
"RTN","MAGDQR00",156,0)
 Q "0008,1030"
"RTN","MAGDQR00",157,0)
 ;
"RTN","MAGDQR00",158,0)
STUIDTAG() ; Study UID 
"RTN","MAGDQR00",159,0)
 Q "0020,000D"
"RTN","MAGDQR00",160,0)
 ;
"RTN","MAGDQR00",161,0)
ACCNTAG() ; Accession Number
"RTN","MAGDQR00",162,0)
 Q "0008,0050"
"RTN","MAGDQR00",163,0)
 ;
"RTN","MAGDQR00",164,0)
MODTAG() ; Modality
"RTN","MAGDQR00",165,0)
 Q "0008,0061"
"RTN","MAGDQR00",166,0)
 ;
"RTN","MAGDQR00",167,0)
NSRSTAG() ; Number of Study Related Series
"RTN","MAGDQR00",168,0)
 Q "0020,1206"
"RTN","MAGDQR00",169,0)
 ;
"RTN","MAGDQR00",170,0)
NSRITAG() ; Number of Study Related Instances
"RTN","MAGDQR00",171,0)
 Q "0020,1208"
"RTN","MAGDQR00",172,0)
 ;
"RTN","MAGDQR00",173,0)
PTNAMTAG() ; Patient Name
"RTN","MAGDQR00",174,0)
 Q "0010,0010"
"RTN","MAGDQR01")
0^7^B37721625
"RTN","MAGDQR01",1,0)
MAGDQR01 ;WOIFO/EdM,MLH,DAC - Imaging RPCs for Query/Retrieve ; 15 Feb 2013 10:12 PM
"RTN","MAGDQR01",2,0)
 ;;3.0;IMAGING;**51,54,66,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR01",17,0)
 ;;
"RTN","MAGDQR01",18,0)
 Q
"RTN","MAGDQR01",19,0)
 ;
"RTN","MAGDQR01",20,0)
FIND(OUT,TAGS,RESULT,OFFSET,MAX,AENAME) ; RPC = MAG CFIND QUERY
"RTN","MAGDQR01",21,0)
 N ERROR,I,L,MAGDUZ,N,P,REQ,T,V,X,ZTDESC,ZTDTH,ZTRTN,ZTSAVE,ZTSK
"RTN","MAGDQR01",22,0)
 K ^TMP("MAG",$J,"ERR") ; common error array (foreground)
"RTN","MAGDQR01",23,0)
 ;
"RTN","MAGDQR01",24,0)
 S RESULT=$G(RESULT),OFFSET=$G(OFFSET),AENAME=$G(AENAME)
"RTN","MAGDQR01",25,0)
 S ERROR=0
"RTN","MAGDQR01",26,0)
 ;
"RTN","MAGDQR01",27,0)
 ; The MAGDUZ identifier is now the DUZ of the logged in user
"RTN","MAGDQR01",28,0)
 S MAGDUZ=$G(DUZ)
"RTN","MAGDQR01",29,0)
 ;
"RTN","MAGDQR01",30,0)
 I 'RESULT D  Q
"RTN","MAGDQR01",31,0)
 . ; TAGS(i) = tag | VR | flag | value
"RTN","MAGDQR01",32,0)
 . S I="" F  S I=$O(TAGS(I)) Q:I=""  D
"RTN","MAGDQR01",33,0)
 . . S X=TAGS(I),T=$P(X,"|",1) Q:T=""
"RTN","MAGDQR01",34,0)
 . . S T=$TR(T,"abcdef","ABCDEF"),$P(TAGS(I),"|",1)=T
"RTN","MAGDQR01",35,0)
 . . S V=$P(X,"|",4,$L(X)+2) S:V="*" V=""
"RTN","MAGDQR01",36,0)
 . . S:$TR(V,"UNKOW","unkow")="<unknown>" V=""
"RTN","MAGDQR01",37,0)
 . . S L=$L(V,"\") S:V="" L=0
"RTN","MAGDQR01",38,0)
 . . S REQ(T)=L F P=1:1:L S REQ(T,P)=$P(V,"\",P)
"RTN","MAGDQR01",39,0)
 . . Q
"RTN","MAGDQR01",40,0)
 . S X=0,T="" F  S T=$O(REQ(T)) Q:T=""  D  Q:X
"RTN","MAGDQR01",41,0)
 . . S P="" F  S P=$O(REQ(T,P)) Q:P=""  S:REQ(T,P)'="" X=1
"RTN","MAGDQR01",42,0)
 . . Q
"RTN","MAGDQR01",43,0)
 . D:'X ERR("No permission to query whole database.")
"RTN","MAGDQR01",44,0)
 . S T="" F  S T=$O(REQ(T)) Q:T=""  D:REQ(T)<-1 ERR("Missing required tag """_T_""".")
"RTN","MAGDQR01",45,0)
 . I ERROR D ERRLOG Q
"RTN","MAGDQR01",46,0)
 . ;
"RTN","MAGDQR01",47,0)
 . ; Convert DICOM name to VA name
"RTN","MAGDQR01",48,0)
 . ;
"RTN","MAGDQR01",49,0)
 . S T="0010,0010"
"RTN","MAGDQR01",50,0)
 . S P="" F  S P=$O(REQ(T,P)) Q:P=""  S REQ(T,P)=$$DCM2VA(REQ(T,P))
"RTN","MAGDQR01",51,0)
 . ;
"RTN","MAGDQR01",52,0)
 . ; Initialize Result Set
"RTN","MAGDQR01",53,0)
 . ;
"RTN","MAGDQR01",54,0)
 . L +^MAGDQR(2006.5732,0):1E9 ; Background process MUST wait
"RTN","MAGDQR01",55,0)
 . S X=$G(^MAGDQR(2006.5732,0))
"RTN","MAGDQR01",56,0)
 . S $P(X,"^",1,2)="DICOM QUERY RETRIEVE RESULT^2006.5732"
"RTN","MAGDQR01",57,0)
 . S RESULT=$O(^MAGDQR(2006.5732," "),-1)+1
"RTN","MAGDQR01",58,0)
 . S $P(X,"^",3)=RESULT
"RTN","MAGDQR01",59,0)
 . S $P(X,"^",4)=$P(X,"^",4)+1
"RTN","MAGDQR01",60,0)
 . S ^MAGDQR(2006.5732,0)=X
"RTN","MAGDQR01",61,0)
 . S ^MAGDQR(2006.5732,RESULT,0)=RESULT_"^IP^"_$$NOW^XLFDT()
"RTN","MAGDQR01",62,0)
 . S ^MAGDQR(2006.5732,"B",RESULT,RESULT)=""
"RTN","MAGDQR01",63,0)
 . L -^MAGDQR(2006.5732,0)
"RTN","MAGDQR01",64,0)
 . ;
"RTN","MAGDQR01",65,0)
 . ; Queue up actual query
"RTN","MAGDQR01",66,0)
 . ;
"RTN","MAGDQR01",67,0)
 . S ZTRTN="QUERY^MAGDQR02"
"RTN","MAGDQR01",68,0)
 . S ZTDESC="Perform DICOM Query, result-set="_RESULT
"RTN","MAGDQR01",69,0)
 . S ZTDTH=$H
"RTN","MAGDQR01",70,0)
 . S ZTSAVE("RESULT")=RESULT
"RTN","MAGDQR01",71,0)
 . S ZTSAVE("MAGDUZ")=$G(MAGDUZ)
"RTN","MAGDQR01",72,0)
 . S T="" F  S T=$O(REQ(T)) Q:T=""  D
"RTN","MAGDQR01",73,0)
 . . S ZTSAVE("REQ("""_T_""")")=REQ(T)
"RTN","MAGDQR01",74,0)
 . . S P="" F  S P=$O(REQ(T,P)) Q:P=""  S ZTSAVE("REQ("""_T_""","_P_")")=REQ(T,P)
"RTN","MAGDQR01",75,0)
 . . Q
"RTN","MAGDQR01",76,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","MAGDQR01",77,0)
 . D:'$G(ZTSK) ERR("TaskMan did not Accept Request")
"RTN","MAGDQR01",78,0)
 . S:$G(ZTSK) $P(^MAGDQR(2006.5732,RESULT,0),"^",4)=ZTSK
"RTN","MAGDQR01",79,0)
 . I ERROR D ERRLOG Q
"RTN","MAGDQR01",80,0)
 . D LOG^MAGDQRUL("TaskMan","","0,"_RESULT_",Query Started through TaskMan")
"RTN","MAGDQR01",81,0)
 . Q
"RTN","MAGDQR01",82,0)
 ;
"RTN","MAGDQR01",83,0)
 I OFFSET<0 D  Q  ; All done, clean up result-set
"RTN","MAGDQR01",84,0)
 . D LOG^MAGDQRUL("CleanUp","","1,Result Set Cleaned Up")
"RTN","MAGDQR01",85,0)
 . Q:'$D(^MAGDQR(2006.5732,RESULT))
"RTN","MAGDQR01",86,0)
 . L +^MAGDQR(2006.5732,0):1E9 ; Background process MUST wait
"RTN","MAGDQR01",87,0)
 . S X=$G(^MAGDQR(2006.5732,0))
"RTN","MAGDQR01",88,0)
 . S $P(X,"^",1,2)="DICOM QUERY RETRIEVE RESULT^2006.5732"
"RTN","MAGDQR01",89,0)
 . S:$P(X,"^",4)>0 $P(X,"^",4)=$P(X,"^",4)-1
"RTN","MAGDQR01",90,0)
 . S ^MAGDQR(2006.5732,0)=X
"RTN","MAGDQR01",91,0)
 . K ^MAGDQR(2006.5732,RESULT)
"RTN","MAGDQR01",92,0)
 . K ^MAGDQR(2006.5732,"B",RESULT)
"RTN","MAGDQR01",93,0)
 . L -^MAGDQR(2006.5732,0)
"RTN","MAGDQR01",94,0)
 . Q
"RTN","MAGDQR01",95,0)
 ;
"RTN","MAGDQR01",96,0)
 I 'OFFSET D  Q:V'="OK"  ; Is the query done?
"RTN","MAGDQR01",97,0)
 . S X=$G(^MAGDQR(2006.5732,RESULT,0))
"RTN","MAGDQR01",98,0)
 . S V=$P(X,"^",2) Q:V="OK"
"RTN","MAGDQR01",99,0)
 . I V="X" D LOG^MAGDQRUL("NoResult","","-2,No result returned") S V="OK" Q
"RTN","MAGDQR01",100,0)
 . S ZTSK=$P(X,"^",4) D STAT^%ZTLOAD
"RTN","MAGDQR01",101,0)
 . I $G(ZTSK(2))'["Inactive" S OUT(1)="-1,TaskMan still active" Q
"RTN","MAGDQR01",102,0)
 . I ZTSK(2)["Finished" S V="OK" Q
"RTN","MAGDQR01",103,0)
 . D LOG^MAGDQRUL("TaskManAbort",ZTSK(2),"-13,TaskMan aborted: "_ZTSK(2))
"RTN","MAGDQR01",104,0)
 . Q
"RTN","MAGDQR01",105,0)
 ;
"RTN","MAGDQR01",106,0)
 S:'$G(MAX) MAX=100
"RTN","MAGDQR01",107,0)
 S I=OFFSET,N=1 F  S I=$O(^MAGDQR(2006.5732,RESULT,1,I)) Q:'I  D  Q:N>MAX
"RTN","MAGDQR01",108,0)
 . S OFFSET=I
"RTN","MAGDQR01",109,0)
 . S N=N+1,OUT(N)=$G(^MAGDQR(2006.5732,RESULT,1,I,0))
"RTN","MAGDQR01",110,0)
 . Q
"RTN","MAGDQR01",111,0)
 I N=1 D  Q
"RTN","MAGDQR01",112,0)
 . S N=0,I=" " F  S I=$O(^MAGDQR(2006.5732,RESULT,1,I),-1) Q:'I  D  Q:'I
"RTN","MAGDQR01",113,0)
 . . S X=$G(^MAGDQR(2006.5732,RESULT,1,I,0)) Q:X'["0000,0902^Result #"
"RTN","MAGDQR01",114,0)
 . . S N=$P(X," # ",2),I=0
"RTN","MAGDQR01",115,0)
 . . Q
"RTN","MAGDQR01",116,0)
 . D LOG^MAGDQRUL("Done",N,"0,No more results.")
"RTN","MAGDQR01",117,0)
 . Q
"RTN","MAGDQR01",118,0)
 I N=2,OFFSET=1 D LOG^MAGDQRUL("Error",$P(OUT(2),"^",2),"")
"RTN","MAGDQR01",119,0)
 S OUT(1)=(N-1)_","_OFFSET_",result(s)."
"RTN","MAGDQR01",120,0)
 Q
"RTN","MAGDQR01",121,0)
 ;
"RTN","MAGDQR01",122,0)
DCM2VA(NAME) N I,P
"RTN","MAGDQR01",123,0)
 ; P66T70: Normalize PN VR from legacy comma to current carat before processing
"RTN","MAGDQR01",124,0)
 D:NAME'=""
"RTN","MAGDQR01",125,0)
 . S NAME=$TR(NAME,"abcdefghijklmnopqrstuvwxyz,","ABCDEFGHIJKLMNOPQRSTUVWXYZ^")
"RTN","MAGDQR01",126,0)
 . ; Ignore prefixes and suffices
"RTN","MAGDQR01",127,0)
 . F I=1:1:3 D
"RTN","MAGDQR01",128,0)
 . . S P(I)=$P(NAME,"^",I)
"RTN","MAGDQR01",129,0)
 . . F  Q:$E(P(I),1)'=" "   S P(I)=$E(P(I),2,$L(P(I)))
"RTN","MAGDQR01",130,0)
 . . F  Q:$E(P(I),$L(P(I)))'=" "   S P(I)=$E(P(I),1,$L(P(I))-1)
"RTN","MAGDQR01",131,0)
 . . Q
"RTN","MAGDQR01",132,0)
 . S NAME=P(1)_","_P(2) S:P(3)'="" NAME=NAME_" "_P(3)
"RTN","MAGDQR01",133,0)
 . S:$E(NAME,$L(NAME))="," NAME=NAME_"*"
"RTN","MAGDQR01",134,0)
 . Q
"RTN","MAGDQR01",135,0)
 Q NAME
"RTN","MAGDQR01",136,0)
 ;
"RTN","MAGDQR01",137,0)
VA2DCM(NAME) N I,P
"RTN","MAGDQR01",138,0)
 ; P66T70: Prepare name for return to caller with consistent comma delimiter
"RTN","MAGDQR01",139,0)
 ; Also strip leading, trailing, interior spaces
"RTN","MAGDQR01",140,0)
 D:NAME'=""
"RTN","MAGDQR01",141,0)
 . S P(1)=$P(NAME,",",1),P(2)=$P(NAME,",",2)
"RTN","MAGDQR01",142,0)
 . F I=1,2 D
"RTN","MAGDQR01",143,0)
 . . F  Q:$E(P(I),1)'=" "  S P(I)=$E(P(I),2,$L(P(I)))
"RTN","MAGDQR01",144,0)
 . . F  Q:$E(P(I),$L(P(I)))'=" "  S P(I)=$E(P(I),1,$L(P(I))-1)
"RTN","MAGDQR01",145,0)
 . . Q
"RTN","MAGDQR01",146,0)
 . S:P(2)[" " P(3)=$P(P(2)," ",2,999),P(2)=$P(P(2)," ",1)
"RTN","MAGDQR01",147,0)
 . F I=1:1:3 D:$D(P(I))
"RTN","MAGDQR01",148,0)
 . . F  Q:$E(P(I),1)'=" "  S P(I)=$E(P(I),2,$L(P(I)))
"RTN","MAGDQR01",149,0)
 . . F  Q:P(I)'["  "  S P(I)=$P(P(I),"  ",1)_" "_$P(P(I),"  ",2,999)
"RTN","MAGDQR01",150,0)
 . . Q
"RTN","MAGDQR01",151,0)
 . S NAME=P(1)_","_P(2) S:$D(P(3)) NAME=NAME_","_P(3)
"RTN","MAGDQR01",152,0)
 . Q
"RTN","MAGDQR01",153,0)
 Q NAME
"RTN","MAGDQR01",154,0)
 ;
"RTN","MAGDQR01",155,0)
ERR(X) S ^TMP("MAG",$J,"ERR",$O(^TMP("MAG",$J,"ERR"," "),-1)+1)=X
"RTN","MAGDQR01",156,0)
 Q
"RTN","MAGDQR01",157,0)
 ;
"RTN","MAGDQR01",158,0)
ERRLOG N I,O,X
"RTN","MAGDQR01",159,0)
 S O=1,I=""
"RTN","MAGDQR01",160,0)
 F  S I=$O(^TMP("MAG",$J,"ERR",I)) Q:I=""  S X=$G(^(I)) D
"RTN","MAGDQR01",161,0)
 . S O=O+1,OUT(O)=X
"RTN","MAGDQR01",162,0)
 . Q
"RTN","MAGDQR01",163,0)
 D LOG^MAGDQRUL("Error","",(-O)_",Errors encountered")
"RTN","MAGDQR01",164,0)
 Q
"RTN","MAGDQR01",165,0)
 ;
"RTN","MAGDQR01",166,0)
ERRSAV N I,O,RESGBL,X
"RTN","MAGDQR01",167,0)
 Q:'$G(RESULT)  S RESGBL=$NA(^MAGDQR(2006.5732,RESULT))
"RTN","MAGDQR01",168,0)
 S $P(@RESGBL@(0),"^",2,3)="OK^"_$$NOW^XLFDT()
"RTN","MAGDQR01",169,0)
 K @RESGBL@(1)
"RTN","MAGDQR01",170,0)
 S O=0,I=""
"RTN","MAGDQR01",171,0)
 F  S I=$O(^TMP("MAG",$J,"ERR",I)) Q:I=""  S X=$G(^(I)) D
"RTN","MAGDQR01",172,0)
 . S O=O+1,@RESGBL@(1,O,0)="0000,0902^"_X
"RTN","MAGDQR01",173,0)
 . Q
"RTN","MAGDQR01",174,0)
 Q
"RTN","MAGDQR02")
0^8^B63705354
"RTN","MAGDQR02",1,0)
MAGDQR02 ;WOIFO/EdM,MLH,JSL,BT - Imaging RPCs for Query/Retrieve ; 28 Aug 2012 4:11 PM
"RTN","MAGDQR02",2,0)
 ;;3.0;IMAGING;**51,54,66,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR02",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR02",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR02",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR02",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR02",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR02",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR02",17,0)
 ;;
"RTN","MAGDQR02",18,0)
 Q
"RTN","MAGDQR02",19,0)
 ;
"RTN","MAGDQR02",20,0)
QUERY ; --- perform actual query --- Called by TaskMan
"RTN","MAGDQR02",21,0)
 ; The RESULT index, MAGDUZ, and REQ() array are passed into this routine's
"RTN","MAGDQR02",22,0)
 ; partition implicitly by the TaskMan invocation
"RTN","MAGDQR02",23,0)
 N ACC,ANY,ENT,FATAL,MAGD0,MAGD1,MAGD2,FD,FT,I,IMAGE,L,LD,LT,OFFSET,P,PAT,PRMUID,SDT,SID,SSN,T,TIM,UID,V,X
"RTN","MAGDQR02",24,0)
 ;
"RTN","MAGDQR02",25,0)
 K ^TMP("MAG",$J,"QR")
"RTN","MAGDQR02",26,0)
 S (PAT,SSN,ACC,UID,SID,SDT,TIM,FATAL)=0
"RTN","MAGDQR02",27,0)
 S FD=0,LD=9999999,FT=0,LT=240000
"RTN","MAGDQR02",28,0)
 ;
"RTN","MAGDQR02",29,0)
 S PRMUID=0 ; 0=error, 1=all, 2=oldest, 3=newest
"RTN","MAGDQR02",30,0)
 S T="0000,0902",I=0 ; Duplicate UID handling parameter
"RTN","MAGDQR02",31,0)
 S P="" F  S P=$O(REQ(T,P)) Q:P=""  D:REQ(T,P)'=""
"RTN","MAGDQR02",32,0)
 . S PRMUID=REQ(T,P)
"RTN","MAGDQR02",33,0)
 . Q
"RTN","MAGDQR02",34,0)
 K REQ(T)
"RTN","MAGDQR02",35,0)
 S:($L(PRMUID)'=1)!(123'[PRMUID) PRMUID=0
"RTN","MAGDQR02",36,0)
 ;
"RTN","MAGDQR02",37,0)
 S T="0008,0020",I=0 ; R  Study Date
"RTN","MAGDQR02",38,0)
 S P="" F  S P=$O(REQ(T,P)) Q:P=""  D:REQ(T,P)'=""
"RTN","MAGDQR02",39,0)
 . N FR,UT
"RTN","MAGDQR02",40,0)
 . S I=I+1 I I>1 D ERR^MAGDQRUE("More than one study date specified.") Q
"RTN","MAGDQR02",41,0)
 . S (X,FR,UT)=REQ(T,P) S:X["-" FR=$P(X,"-",1),UT=$P(X,"-",2)
"RTN","MAGDQR02",42,0)
 . I FR'="",FR'?8N D ERR^MAGDQRUE("Invalid 'from' date: """_FR_""".")
"RTN","MAGDQR02",43,0)
 . I UT'="",UT'?8N D ERR^MAGDQRUE("Invalid 'until' date: """_UT_""".")
"RTN","MAGDQR02",44,0)
 . S FD=+FR S:FD FD=FD-17000000
"RTN","MAGDQR02",45,0)
 . S LD=+UT S:LD LD=LD-17000000
"RTN","MAGDQR02",46,0)
 . S TIM=1
"RTN","MAGDQR02",47,0)
 . Q
"RTN","MAGDQR02",48,0)
 ;
"RTN","MAGDQR02",49,0)
 S T="0008,0030",I=0 ; R  Study Time
"RTN","MAGDQR02",50,0)
 S P="" F  S P=$O(REQ(T,P)) Q:P=""  D:REQ(T,P)'=""
"RTN","MAGDQR02",51,0)
 . N FR,UT
"RTN","MAGDQR02",52,0)
 . S I=I+1 I I>1 D ERR^MAGDQRUE("More than one study time specified.") Q
"RTN","MAGDQR02",53,0)
 . S (X,FR,UT)=REQ(T,P) S:X["-" FR=$P(X,"-",1),UT=$P(X,"-",2)
"RTN","MAGDQR02",54,0)
 . D CHKTIM(FR,"from")
"RTN","MAGDQR02",55,0)
 . D CHKTIM(UT,"until")
"RTN","MAGDQR02",56,0)
 . S FT=+$E(FR_"000000",1,6)
"RTN","MAGDQR02",57,0)
 . S LT=+$E(UT_"000000",1,6)
"RTN","MAGDQR02",58,0)
 . S TIM=1
"RTN","MAGDQR02",59,0)
 . Q
"RTN","MAGDQR02",60,0)
 I $D(^TMP("MAG",$J,"ERR")) D ERRSAV^MAGDQRUE Q
"RTN","MAGDQR02",61,0)
 ;
"RTN","MAGDQR02",62,0)
 S FD=FT/1E6+FD,LD=LT/1E6+LD
"RTN","MAGDQR02",63,0)
 ;
"RTN","MAGDQR02",64,0)
 S T="0010,0010",ANY=0 ; R  Patient's Name
"RTN","MAGDQR02",65,0)
 S P="" F  S P=$O(REQ(T,P)) Q:P=""  D:REQ(T,P)'=""
"RTN","MAGDQR02",66,0)
 . ; The references below to ^DPT are permitted according to the
"RTN","MAGDQR02",67,0)
 . ; explicit permission in Section II of the PIMS V5.3 technical manual
"RTN","MAGDQR02",68,0)
 . ; (dated 23 Nov 2004)
"RTN","MAGDQR02",69,0)
 . S ANY=1
"RTN","MAGDQR02",70,0)
 . S I=$$MATCHD^MAGDQR03(REQ(T,P),"^DPT(""B"",LOOP)","^TMP(""MAG"",$J,""QR"",1,LOOP)")
"RTN","MAGDQR02",71,0)
 . S V="" F  S V=$O(^TMP("MAG",$J,"QR",1,V)) Q:V=""  D
"RTN","MAGDQR02",72,0)
 . . S I="" F  S I=$O(^DPT("B",V,I)) Q:I=""  S ^TMP("MAG",$J,"QR",2,I)="",PAT=1
"RTN","MAGDQR02",73,0)
 . . Q
"RTN","MAGDQR02",74,0)
 . Q
"RTN","MAGDQR02",75,0)
 I ANY,'PAT D  Q
"RTN","MAGDQR02",76,0)
 . D ERR^MAGDQRUE("No matches for tag "_T)
"RTN","MAGDQR02",77,0)
 . D ERRSAV^MAGDQRUE
"RTN","MAGDQR02",78,0)
 . Q
"RTN","MAGDQR02",79,0)
 ;
"RTN","MAGDQR02",80,0)
 S T="0010,0020",ANY=0 ; R  Patient ID
"RTN","MAGDQR02",81,0)
 S P="" F  S P=$O(REQ(T,P)) Q:P=""  D:REQ(T,P)'=""
"RTN","MAGDQR02",82,0)
 . ; The references below to ^DPT are permitted according to the
"RTN","MAGDQR02",83,0)
 . ; explicit permission in Section II of the PIMS V5.3 technical manual
"RTN","MAGDQR02",84,0)
 . ; (dated 23 Nov 2004)
"RTN","MAGDQR02",85,0)
 . S ANY=1
"RTN","MAGDQR02",86,0)
 . S I=$$MATCHD^MAGDQR03($TR(REQ(T,P),"-"),"^DPT(""SSN"",LOOP)","^TMP(""MAG"",$J,""QR"",3,LOOP)")
"RTN","MAGDQR02",87,0)
 . S V="" F  S V=$O(^TMP("MAG",$J,"QR",3,V)) Q:V=""  D
"RTN","MAGDQR02",88,0)
 . . S I="" F  S I=$O(^DPT("SSN",V,I)) Q:I=""  S ^TMP("MAG",$J,"QR",4,I)="",SSN=1
"RTN","MAGDQR02",89,0)
 . . Q
"RTN","MAGDQR02",90,0)
 . I 'SSN,$$ISIHS^MAGSPID(),REQ(T,P)?1.6N D  Q  ;IHS Health Record No - patient lookup
"RTN","MAGDQR02",91,0)
 . . S V=$$FIND1^DIC(9000001,,"MX",REQ(T,P)) ;IA #447 
"RTN","MAGDQR02",92,0)
 . . S:V ^TMP("MAG",$J,"QR",4,V)="",SSN=1
"RTN","MAGDQR02",93,0)
 . . Q
"RTN","MAGDQR02",94,0)
 . Q
"RTN","MAGDQR02",95,0)
 I ANY,'SSN D  Q
"RTN","MAGDQR02",96,0)
 . D ERR^MAGDQRUE("No matches for tag "_T)
"RTN","MAGDQR02",97,0)
 . D ERRSAV^MAGDQRUE
"RTN","MAGDQR02",98,0)
 . Q
"RTN","MAGDQR02",99,0)
 ;
"RTN","MAGDQR02",100,0)
 S T="0008,0050",ANY=0 ; R  Accession Number
"RTN","MAGDQR02",101,0)
 D ACCNUM^MAGDQR07(.REQ,T,.ACC,.ANY)
"RTN","MAGDQR02",102,0)
 I ANY,'ACC D  Q
"RTN","MAGDQR02",103,0)
 . D ERR^MAGDQRUE("No matches for tag "_T)
"RTN","MAGDQR02",104,0)
 . D ERRSAV^MAGDQRUE
"RTN","MAGDQR02",105,0)
 . Q
"RTN","MAGDQR02",106,0)
 ;
"RTN","MAGDQR02",107,0)
 S T="0020,0010",ANY=0 ; R  Study ID
"RTN","MAGDQR02",108,0)
 D STUDYID^MAGDQR12(.REQ,T,.SID,.ANY)
"RTN","MAGDQR02",109,0)
 I ANY,'SID D  Q
"RTN","MAGDQR02",110,0)
 . D ERR^MAGDQRUE("No matches for tag "_T)
"RTN","MAGDQR02",111,0)
 . D ERRSAV^MAGDQRUE
"RTN","MAGDQR02",112,0)
 . Q
"RTN","MAGDQR02",113,0)
 ;
"RTN","MAGDQR02",114,0)
 D  I ANY,'UID Q
"RTN","MAGDQR02",115,0)
 . N OK,UIDS
"RTN","MAGDQR02",116,0)
 . D UIDS^MAGDQR08(.REQ,T,.UID,PRMUID,.ANY,.OK,.UIDS)
"RTN","MAGDQR02",117,0)
 . Q:'$G(ANY)  Q:$G(OK)
"RTN","MAGDQR02",118,0)
 . S UID=0
"RTN","MAGDQR02",119,0)
 . D ERR^MAGDQRUE("Conflicting UIDs: "_$G(UIDS))
"RTN","MAGDQR02",120,0)
 . D ERRSAV^MAGDQRUE
"RTN","MAGDQR02",121,0)
 . Q
"RTN","MAGDQR02",122,0)
 ;
"RTN","MAGDQR02",123,0)
 I TIM,'(PAT+SSN+SID+UID+ACC) D TIM^MAGDQR05(.REQ,FD,LD,.TIM,.ANY,.SID)
"RTN","MAGDQR02",124,0)
 ;
"RTN","MAGDQR02",125,0)
 I '(PAT+SSN+SID+UID+ACC) D  Q
"RTN","MAGDQR02",126,0)
 . D ERR^MAGDQRUE("No Selection Specified.")
"RTN","MAGDQR02",127,0)
 . D ERRSAV^MAGDQRUE
"RTN","MAGDQR02",128,0)
 . Q
"RTN","MAGDQR02",129,0)
 ;
"RTN","MAGDQR02",130,0)
 D ELIM(ACC,SID,6,10,"Accession and Study ID",0)
"RTN","MAGDQR02",131,0)
 M ^TMP("MAG",$J,"QR",12)=^TMP("MAG",$J,"QR",6)
"RTN","MAGDQR02",132,0)
 M ^TMP("MAG",$J,"QR",12)=^TMP("MAG",$J,"QR",10)
"RTN","MAGDQR02",133,0)
 ;
"RTN","MAGDQR02",134,0)
 D ELIM(PAT,SSN,2,4,"Patient Name and ID",0)
"RTN","MAGDQR02",135,0)
 M ^TMP("MAG",$J,"QR",11)=^TMP("MAG",$J,"QR",2)
"RTN","MAGDQR02",136,0)
 M ^TMP("MAG",$J,"QR",11)=^TMP("MAG",$J,"QR",4)
"RTN","MAGDQR02",137,0)
 ;
"RTN","MAGDQR02",138,0)
 D ELIMB(PAT+SSN,ACC+SID,11,12,"Patient and Study Info")
"RTN","MAGDQR02",139,0)
 I $D(^TMP("MAG",$J,"ERR")) D ERRSAV^MAGDQRUE Q
"RTN","MAGDQR02",140,0)
 ;
"RTN","MAGDQR02",141,0)
 K ^TMP("MAG",$J,"DICOMQR")
"RTN","MAGDQR02",142,0)
 S ^TMP("MAG",$J,"DICOMQR","RESULTSET")=0
"RTN","MAGDQR02",143,0)
 S ^TMP("MAG",$J,"DICOMQR","DUMMY SIUID")=0
"RTN","MAGDQR02",144,0)
 D  ; switch
"RTN","MAGDQR02",145,0)
 . ;return data on image / study entries from appropriate queue based on type of lookup
"RTN","MAGDQR02",146,0)
 . I UID D  Q  ; UID lookup case
"RTN","MAGDQR02",147,0)
 . . S IMAGE="" F  S IMAGE=$O(^TMP("MAG",$J,"QR",8,IMAGE)) Q:IMAGE=""  D
"RTN","MAGDQR02",148,0)
 . . . ; new or old database?
"RTN","MAGDQR02",149,0)
 . . . I $E(IMAGE,1)="N" D UIDNEW^MAGDQR31(IMAGE,.REQ,RESULT,MAGDUZ,PAT,SSN,UID,FD,LD) Q
"RTN","MAGDQR02",150,0)
 . . . D UIDOLD^MAGDQR32(IMAGE,.REQ,RESULT,MAGDUZ,PAT,SSN,ACC,SID,UID,FD,LD)
"RTN","MAGDQR02",151,0)
 . . . Q
"RTN","MAGDQR02",152,0)
 . . Q
"RTN","MAGDQR02",153,0)
 . I ACC+SID D  Q  ; accession no. / study ID lookup case
"RTN","MAGDQR02",154,0)
 . . S P="" F  S P=$O(^TMP("MAG",$J,"QR",12,P)) Q:P=""  D
"RTN","MAGDQR02",155,0)
 . . . D ACCSID^MAGDQR10(P,.REQ,RESULT,MAGDUZ,PAT,SSN,UID,FD,LD)
"RTN","MAGDQR02",156,0)
 . . . Q
"RTN","MAGDQR02",157,0)
 . . Q
"RTN","MAGDQR02",158,0)
 . I PAT+SSN D  Q  ; pt name / SSN lookup case
"RTN","MAGDQR02",159,0)
 . . S P="" F  S P=$O(^TMP("MAG",$J,"QR",11,P)) Q:P=""  D  Q:$G(FATAL)
"RTN","MAGDQR02",160,0)
 . . . ; new database
"RTN","MAGDQR02",161,0)
 . . . D:$D(^MAGV(2005.6,"B",P)) PATSSNNU^MAGDQR22(.P,.REQ,RESULT,MAGDUZ,PAT,SSN,UID,FD,LD,.ERROR,.FATAL)
"RTN","MAGDQR02",162,0)
 . . . ; old database
"RTN","MAGDQR02",163,0)
 . . . S IMAGE="" F  S IMAGE=$O(^MAG(2005,"AC",P,IMAGE)) Q:IMAGE=""  D  Q:$G(FATAL)
"RTN","MAGDQR02",164,0)
 . . . . D PATSSNOL^MAGDQR23(IMAGE,.REQ,RESULT,MAGDUZ,FD,LD,.ERROR,.FATAL)
"RTN","MAGDQR02",165,0)
 . . . . Q
"RTN","MAGDQR02",166,0)
 . . . Q
"RTN","MAGDQR02",167,0)
 . . Q
"RTN","MAGDQR02",168,0)
 . Q
"RTN","MAGDQR02",169,0)
 ;
"RTN","MAGDQR02",170,0)
 D:$O(PRMUID(""))'="" PRUNE^MAGDQR08(RESULT) ; There are duplicate UIDs
"RTN","MAGDQR02",171,0)
 S $P(^MAGDQR(2006.5732,RESULT,0),"^",2,3)="OK^"_$$NOW^XLFDT()
"RTN","MAGDQR02",172,0)
 K ^TMP("MAG",$J,"QR")
"RTN","MAGDQR02",173,0)
 K ^TMP("MAG",$J,"DICOMQR")
"RTN","MAGDQR02",174,0)
 Q
"RTN","MAGDQR02",175,0)
 ;
"RTN","MAGDQR02",176,0)
CHKTIM(V,L) ;
"RTN","MAGDQR02",177,0)
 Q:V=""
"RTN","MAGDQR02",178,0)
 I V'?1.6N D ERR^MAGDQRUE("Invalid '"_L_"' time: """_V_""".")
"RTN","MAGDQR02",179,0)
 I $E(V,1,2)>23 D ERR^MAGDQRUE("Invalid hours in '"_L_"' time: """_V_""".")
"RTN","MAGDQR02",180,0)
 I $E(V,3,4),$E(V,3,4)>59 D ERR^MAGDQRUE("Invalid minutes in '"_L_"' time: """_V_""".")
"RTN","MAGDQR02",181,0)
 I $E(V,5,6),$E(V,5,6)>59 D ERR^MAGDQRUE("Invalid seconds '"_L_"' time: """_V_""".")
"RTN","MAGDQR02",182,0)
 Q
"RTN","MAGDQR02",183,0)
 ;
"RTN","MAGDQR02",184,0)
ELIM(ONE,TWO,I1,I2,E,C) N ANY,I,O
"RTN","MAGDQR02",185,0)
 Q:'ONE  Q:'TWO
"RTN","MAGDQR02",186,0)
 S I="" F  S I=$O(^TMP("MAG",$J,"QR",I1,I)) Q:I=""  D
"RTN","MAGDQR02",187,0)
 . S O=I I C Q:I'["^"  S O=+I
"RTN","MAGDQR02",188,0)
 . I '$D(^TMP("MAG",$J,"QR",I2,O)) K ^TMP("MAG",$J,"QR",I1,I)
"RTN","MAGDQR02",189,0)
 . Q
"RTN","MAGDQR02",190,0)
 S I="" F  S I=$O(^TMP("MAG",$J,"QR",I2,I)) Q:I=""  D
"RTN","MAGDQR02",191,0)
 . S O=I I C Q:I'["^"  S O=+I
"RTN","MAGDQR02",192,0)
 . I '$D(^TMP("MAG",$J,"QR",I1,O)) K ^TMP("MAG",$J,"QR",I2,I)
"RTN","MAGDQR02",193,0)
 . Q
"RTN","MAGDQR02",194,0)
 S ANY=($D(^TMP("MAG",$J,"QR",I1))>9)*($D(^TMP("MAG",$J,"QR",I2))>9)
"RTN","MAGDQR02",195,0)
 D:'ANY ERR^MAGDQRUE("No matches left, conflict between "_E)
"RTN","MAGDQR02",196,0)
 Q
"RTN","MAGDQR02",197,0)
 ;
"RTN","MAGDQR02",198,0)
ELIMB(ONE,TWO,I1,I2,E) N ANY,I,O
"RTN","MAGDQR02",199,0)
 ; elimination logic between subtrees w/different data structures,
"RTN","MAGDQR02",200,0)
 ; e.g., 11 (I1) and 12 (I2)
"RTN","MAGDQR02",201,0)
 N HIT ; match flag
"RTN","MAGDQR02",202,0)
 Q:'ONE  Q:'TWO
"RTN","MAGDQR02",203,0)
 S I="" F  S I=$O(^TMP("MAG",$J,"QR",I1,I)) Q:I=""  D
"RTN","MAGDQR02",204,0)
 . S O="",HIT=0
"RTN","MAGDQR02",205,0)
 . ; match?
"RTN","MAGDQR02",206,0)
 . F  S O=$O(^TMP("MAG",$J,"QR",I2,O)) Q:O=""  I $P(O,"^",2)=I S HIT=1 Q  ; yes
"RTN","MAGDQR02",207,0)
 . K:'HIT ^TMP("MAG",$J,"QR",I1,I) ; no
"RTN","MAGDQR02",208,0)
 . Q
"RTN","MAGDQR02",209,0)
 S I="" F  S I=$O(^TMP("MAG",$J,"QR",I2,I)) Q:I=""  D
"RTN","MAGDQR02",210,0)
 . S O=$P(I,"^",2) I O,$D(^TMP("MAG",$J,"QR",I1,O)) Q  ; match
"RTN","MAGDQR02",211,0)
 . K ^TMP("MAG",$J,"QR",I2,I) ; no match
"RTN","MAGDQR02",212,0)
 . Q
"RTN","MAGDQR02",213,0)
 S ANY=($D(^TMP("MAG",$J,"QR",I1))>9)*($D(^TMP("MAG",$J,"QR",I2))>9)
"RTN","MAGDQR02",214,0)
 D:'ANY ERR^MAGDQRUE("No matches left, conflict between "_E)
"RTN","MAGDQR02",215,0)
 Q
"RTN","MAGDQR03")
0^9^B216009721
"RTN","MAGDQR03",1,0)
MAGDQR03 ;WOIFO/EdM,MLH,JSL,SAF,BT,DAC,NST - Imaging RPCs for Query/Retrieve ; 01 May 2013 2:40 PM
"RTN","MAGDQR03",2,0)
 ;;3.0;IMAGING;**51,54,66,123,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR03",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR03",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR03",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR03",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR03",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR03",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR03",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR03",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR03",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR03",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR03",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR03",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR03",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR03",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR03",17,0)
 ;;
"RTN","MAGDQR03",18,0)
 Q
"RTN","MAGDQR03",19,0)
 ;
"RTN","MAGDQR03",20,0)
 ; When RESULT^MAGDQR03 is called, the following input parameters
"RTN","MAGDQR03",21,0)
 ; should be properly defined:
"RTN","MAGDQR03",22,0)
 ;   TYPE   = R(adiology) or C(onsult)
"RTN","MAGDQR03",23,0)
 ;   REQ    = array of element tags being queried for
"RTN","MAGDQR03",24,0)
 ;   RESULT = pointer into results global (#2006.5732)
"RTN","MAGDQR03",25,0)
 ;   MAGIEN = pointer into the Image File (#2005)
"RTN","MAGDQR03",26,0)
 ;   MAGDFN = pointer into the Patient File (#2)
"RTN","MAGDQR03",27,0)
 ;   MAGRORD = second level pointer into the Rad/Nuc Med Patient File (#70)
"RTN","MAGDQR03",28,0)
 ;             (Radiology orders only)
"RTN","MAGDQR03",29,0)
 ;   MAGINTERP = third level pointer into the Rad/Nuc Med Patient File (#70)
"RTN","MAGDQR03",30,0)
 ;             (Radiology orders only) 
"RTN","MAGDQR03",31,0)
 ; 
"RTN","MAGDQR03",32,0)
 ; This routine contains code to calculate values for DICOM Tags
"RTN","MAGDQR03",33,0)
 ; that can be derived from those two pointers.
"RTN","MAGDQR03",34,0)
 ; All other DICOM Tags are computed in MAGDQR06.
"RTN","MAGDQR03",35,0)
 ; (This routine does the things that are the same for all images.
"RTN","MAGDQR03",36,0)
 ; MAGDQR06 differentiates between Radiology, Consults, and anything else.)
"RTN","MAGDQR03",37,0)
 ;
"RTN","MAGDQR03",38,0)
RESULT(TYPE,REQ,RESULT,MAGIEN,MAGDUZ,MAGDFN,MAGRORD,MAGINTERP,ERROR,FATAL) ;
"RTN","MAGDQR03",39,0)
 D  ; validate input parameters
"RTN","MAGDQR03",40,0)
 . I "^R^C^N^"'[("^"_TYPE_"^") D ERR^MAGDQRUE("Study type (radiology/consult/new DB) not defined") Q
"RTN","MAGDQR03",41,0)
 . I '$G(RESULT) D ERR^MAGDQRUE("Invalid query result set "_RESULT_" specified") Q
"RTN","MAGDQR03",42,0)
 . I $D(MAGIEN),($D(^MAG(2005,MAGIEN)))!($D(^MAGV(2005.64,MAGIEN)))
"RTN","MAGDQR03",43,0)
 . E  D ERR^MAGDQRUE("Invalid image ID "_MAGIEN_" specified for result") Q
"RTN","MAGDQR03",44,0)
 . I $D(MAGDFN),$D(^DPT(MAGDFN))
"RTN","MAGDQR03",45,0)
 . E  D ERR^MAGDQRUE("Invalid patient ID "_MAGDFN_" specified for result") Q
"RTN","MAGDQR03",46,0)
 . I TYPE="R",'$G(MAGRORD) D  Q
"RTN","MAGDQR03",47,0)
 . . D ERR^MAGDQRUE("Invalid Radiology order number "_MAGRORD_" specified")
"RTN","MAGDQR03",48,0)
 . . Q
"RTN","MAGDQR03",49,0)
 . I TYPE="R",'$G(MAGINTERP) D  Q
"RTN","MAGDQR03",50,0)
 . . D ERR^MAGDQRUE("Invalid Radiology interpretation "_MAGINTERP_" specified")
"RTN","MAGDQR03",51,0)
 . . Q
"RTN","MAGDQR03",52,0)
 . Q
"RTN","MAGDQR03",53,0)
 I $D(^TMP("MAG",$J,"ERR")) D ERRLOG^MAGDQRUE Q
"RTN","MAGDQR03",54,0)
 ;
"RTN","MAGDQR03",55,0)
 N E,L,OK,V,X,T
"RTN","MAGDQR03",56,0)
 N SENSEMP ; ----- sensitive/employee flag
"RTN","MAGDQR03",57,0)
 N ACCESSION ; --- accession number
"RTN","MAGDQR03",58,0)
 N SERIESIX ; ---- new series index
"RTN","MAGDQR03",59,0)
 N STUDYIX ; ----- new study index
"RTN","MAGDQR03",60,0)
 N PROCIX ; ------ new procedure index
"RTN","MAGDQR03",61,0)
 N PROCREC ; ----- new procedure record
"RTN","MAGDQR03",62,0)
 N PROCIDTYP ; --- procedure ID type in new DB
"RTN","MAGDQR03",63,0)
 N Y ; ----------- patient DFN
"RTN","MAGDQR03",64,0)
 N DG1 ; --------- inpatient/outpatient indicator
"RTN","MAGDQR03",65,0)
 N DGOPT ; ------- option Name
"RTN","MAGDQR03",66,0)
 N DIC ; --------- DIC variable for the SETLOG entry point
"RTN","MAGDQR03",67,0)
 S SENSEMP=0,OK=1
"RTN","MAGDQR03",68,0)
 ;
"RTN","MAGDQR03",69,0)
 ; new specs for sens/emp patients 3/20/09 - data will be picked up, but scrubbed
"RTN","MAGDQR03",70,0)
 ; 01/2010: suspend data suppression
"RTN","MAGDQR03",71,0)
 ; 05/2011: log access using supported PIMS entry point
"RTN","MAGDQR03",72,0)
 ;
"RTN","MAGDQR03",73,0)
 S SENSEMP=SENSEMP+($$EMPL^DGSEC4(MAGDFN)=1) ; IA #3646
"RTN","MAGDQR03",74,0)
 S SENSEMP=SENSEMP+($P($G(^DGSL(38.1,MAGDFN,0)),"^",2)=1) ; IA #767
"RTN","MAGDQR03",75,0)
 S Y=MAGDFN,DG1="",DGOPT="MAG DICOM QUERY RETRIEVE^MAG CFIND QUERY",DIC(0)=""
"RTN","MAGDQR03",76,0)
 I SENSEMP D SETLOG^DGSEC
"RTN","MAGDQR03",77,0)
 S SENSEMP=0 ; sensitive/employee data suppression to be suspended as of Jan 2010
"RTN","MAGDQR03",78,0)
 ; increment (static) dummy Study Instance UID if sensitive/employee
"RTN","MAGDQR03",79,0)
 S:SENSEMP ^("DUMMY SIUID")=^TMP("MAG",$J,"DICOMQR","DUMMY SIUID")+1
"RTN","MAGDQR03",80,0)
 ;
"RTN","MAGDQR03",81,0)
 ; calculate accession number here 2/17/10, moved from Q0080050^MAGDQR06
"RTN","MAGDQR03",82,0)
 ;
"RTN","MAGDQR03",83,0)
 D:TYPE="R"
"RTN","MAGDQR03",84,0)
 . S X=$P($G(^RADPT(MAGDFN,"DT",MAGRORD,"P",MAGINTERP,0)),"^",17) ; IA # 1172
"RTN","MAGDQR03",85,0)
 . S ^TMP("MAG",$J,"ACCESSION")=$P($G(^RARPT(+X,0)),"^",1) ; IA # 1171
"RTN","MAGDQR03",86,0)
 . Q
"RTN","MAGDQR03",87,0)
 D:TYPE="C"
"RTN","MAGDQR03",88,0)
 . N R2,TIUNUM,CONSIX
"RTN","MAGDQR03",89,0)
 . S R2=$G(^MAG(2005,MAGIEN,2)) Q:R2=""
"RTN","MAGDQR03",90,0)
 . I $P(R2,"^",6)=2006.5839 D  Q
"RTN","MAGDQR03",91,0)
 . . S CONSIX=$P(R2,"^",7)
"RTN","MAGDQR03",92,0)
 . . S ^TMP("MAG",$J,"ACCESSION")="GMRC-"_CONSIX
"RTN","MAGDQR03",93,0)
 . . Q
"RTN","MAGDQR03",94,0)
 . I $P(R2,"^",6)=8925 D  Q
"RTN","MAGDQR03",95,0)
 . . S TIUNUM=$P(R2,"^",7) Q:'TIUNUM
"RTN","MAGDQR03",96,0)
 . . S CONSIX=$P($G(^TIU(8925,TIUNUM,14)),"^",5)
"RTN","MAGDQR03",97,0)
 . . S:$P(CONSIX,";",2)="GMR(123," ^TMP("MAG",$J,"ACCESSION")="GMRC-"_$P(CONSIX,";",1)
"RTN","MAGDQR03",98,0)
 . . Q
"RTN","MAGDQR03",99,0)
 . Q
"RTN","MAGDQR03",100,0)
 D:TYPE="N"
"RTN","MAGDQR03",101,0)
 . S STUDYIX=$$STUDYIX^MAGUE004(MAGIEN) Q:'STUDYIX
"RTN","MAGDQR03",102,0)
 . S PROCIX=$P($G(^MAGV(2005.62,STUDYIX,6)),"^",1) Q:'PROCIX
"RTN","MAGDQR03",103,0)
 . S PROCREC=$G(^MAGV(2005.61,PROCIX,0)) Q:PROCREC=""
"RTN","MAGDQR03",104,0)
 . S PROCIDTYP=$P(PROCREC,"^",3)
"RTN","MAGDQR03",105,0)
 . S ^TMP("MAG",$J,"ACCESSION")=""
"RTN","MAGDQR03",106,0)
 . D:"^RAD^CON^"[("^"_PROCIDTYP_"^")
"RTN","MAGDQR03",107,0)
 . . S ^TMP("MAG",$J,"ACCESSION")=$P(PROCREC,"^",1)
"RTN","MAGDQR03",108,0)
 . . Q
"RTN","MAGDQR03",109,0)
 . Q
"RTN","MAGDQR03",110,0)
 ;
"RTN","MAGDQR03",111,0)
 ; retrieve element values, indicate unsupported elements
"RTN","MAGDQR03",112,0)
 S T="" F  S T=$O(REQ(T)) Q:T=""  D
"RTN","MAGDQR03",113,0)
 . S L=$TR(T,",")
"RTN","MAGDQR03",114,0)
 . S E=$TR($E(L,1),"0123456789abcdef","QRSTUVWXYZABCDEF")
"RTN","MAGDQR03",115,0)
 . S $E(L,1)=E S:L'?8UN L=""
"RTN","MAGDQR03",116,0)
 . I L'="",$T(@L)'="" D  Q
"RTN","MAGDQR03",117,0)
 . . S L=L_"(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)"
"RTN","MAGDQR03",118,0)
 . . D @L S V(T)=$G(V(T))
"RTN","MAGDQR03",119,0)
 . . Q
"RTN","MAGDQR03",120,0)
 . ; unsupported tag <> fatal error
"RTN","MAGDQR03",121,0)
 . D ERR^MAGDQRUE("Cannot calculate value for tag: """_T_""".") S ERROR=1
"RTN","MAGDQR03",122,0)
 . Q
"RTN","MAGDQR03",123,0)
 ;
"RTN","MAGDQR03",124,0)
 I $D(^TMP("MAG",$J,"ERR")) D ERRSAV^MAGDQRUE S FATAL=1 G RESULTX
"RTN","MAGDQR03",125,0)
 ;
"RTN","MAGDQR03",126,0)
 G RESULTX:'OK  ; don't return result on key mismatch
"RTN","MAGDQR03",127,0)
 ;
"RTN","MAGDQR03",128,0)
 D  G RESULTX:'OK  ; There must be a valid Study Instance UID
"RTN","MAGDQR03",129,0)
 . N V,T
"RTN","MAGDQR03",130,0)
 . S T="0020,000D" D Q020000D(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",131,0)
 . S OK=(V(T)'="")
"RTN","MAGDQR03",132,0)
 . Q
"RTN","MAGDQR03",133,0)
 ;
"RTN","MAGDQR03",134,0)
 D SAVRSLT^MAGDQR13(RESULT,MAGDFN,MAGIEN,.V)
"RTN","MAGDQR03",135,0)
 ;
"RTN","MAGDQR03",136,0)
RESULTX ; single exit point
"RTN","MAGDQR03",137,0)
 Q
"RTN","MAGDQR03",138,0)
 ;
"RTN","MAGDQR03",139,0)
COMPARE(TAG,ACTUAL) N LOC,TMP,WILD
"RTN","MAGDQR03",140,0)
 Q:'$G(REQ(TAG)) 1
"RTN","MAGDQR03",141,0)
 S WILD=$G(REQ(TAG,1)) Q:WILD="" 0
"RTN","MAGDQR03",142,0)
 Q:$G(ACTUAL)="" 0
"RTN","MAGDQR03",143,0)
 S LOC(ACTUAL)=""
"RTN","MAGDQR03",144,0)
 Q $$MATCHD(WILD,"LOC(LOOP)","TMP(LOOP)")
"RTN","MAGDQR03",145,0)
 ;
"RTN","MAGDQR03",146,0)
MATCH1(X,Y) N I,M
"RTN","MAGDQR03",147,0)
 F  Q:X=""  Q:Y=""  D
"RTN","MAGDQR03",148,0)
 . I $E(X,1)=$E(Y,1) S X=$E(X,2,$L(X)),Y=$E(Y,2,$L(Y)) Q
"RTN","MAGDQR03",149,0)
 . I $E(Y,1)="?" S X=$E(X,2,$L(X)),Y=$E(Y,2,$L(Y)) Q
"RTN","MAGDQR03",150,0)
 . I $E(Y,1)="*" D  Q:M
"RTN","MAGDQR03",151,0)
 . . I Y="*" S (X,Y)="",M=1 Q
"RTN","MAGDQR03",152,0)
 . . S Y=$E(Y,2,$L(Y)),M=0
"RTN","MAGDQR03",153,0)
 . . F I=1:1:$L(X) I $$MATCH1($E(X,I,$L(X)),Y) S M=1,X=$E(X,I,$L(X)) Q
"RTN","MAGDQR03",154,0)
 . . Q
"RTN","MAGDQR03",155,0)
 . S X="!",Y=""
"RTN","MAGDQR03",156,0)
 . Q
"RTN","MAGDQR03",157,0)
 S:$TR(Y,"*")="" Y="" Q:X'="" 0 Q:Y'="" 0
"RTN","MAGDQR03",158,0)
 Q 1
"RTN","MAGDQR03",159,0)
 ;
"RTN","MAGDQR03",160,0)
MATCHD(WILDCARD,STRUCTUR,FOUND) N C,LOOP,L1,L9,SEEK,X,Y
"RTN","MAGDQR03",161,0)
 ;  -- Scans a structure,
"RTN","MAGDQR03",162,0)
 ;     reports entries in @STRUCTUR that match WILDCARD;
"RTN","MAGDQR03",163,0)
 ;     the result is reported in local array @FOUND
"RTN","MAGDQR03",164,0)
 S C=0
"RTN","MAGDQR03",165,0)
 S L1=$P($P(WILDCARD,"?",1),"*",1),L9=L1_"~"
"RTN","MAGDQR03",166,0)
 I L1=WILDCARD D  Q C
"RTN","MAGDQR03",167,0)
 . S LOOP=L1
"RTN","MAGDQR03",168,0)
 . I $D(@STRUCTUR) S @FOUND="",C=C+1 Q
"RTN","MAGDQR03",169,0)
 . Q
"RTN","MAGDQR03",170,0)
 S LOOP=L1 F  D  S LOOP=$O(@STRUCTUR) Q:LOOP=""  Q:LOOP]]L9
"RTN","MAGDQR03",171,0)
 . Q:LOOP=""  Q:'$D(@STRUCTUR)
"RTN","MAGDQR03",172,0)
 . Q:'$$MATCH1(LOOP,WILDCARD)
"RTN","MAGDQR03",173,0)
 . S @FOUND="",C=C+1
"RTN","MAGDQR03",174,0)
 . Q
"RTN","MAGDQR03",175,0)
 Q C
"RTN","MAGDQR03",176,0)
 ;
"RTN","MAGDQR03",177,0)
Q0080018(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;U Image Instance UID
"RTN","MAGDQR03",178,0)
 ; sensitive/employee?
"RTN","MAGDQR03",179,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",180,0)
 . S V(T)="1.2.840.113754.2.1.3.1.1.1.1.66."_$G(^TMP("MAG",$J,"DICOMQR","DUMMY SIUID"))
"RTN","MAGDQR03",181,0)
 . Q
"RTN","MAGDQR03",182,0)
 ; no
"RTN","MAGDQR03",183,0)
 N SOPUID
"RTN","MAGDQR03",184,0)
 S V(T)=""
"RTN","MAGDQR03",185,0)
 D:MAGIEN'=""
"RTN","MAGDQR03",186,0)
 . I (TYPE="R")!(TYPE="C") D  Q
"RTN","MAGDQR03",187,0)
 . . S V(T)=$P($G(^MAG(2005,MAGIEN,"PACS")),"^",1)
"RTN","MAGDQR03",188,0)
 . . S SOPUID=$P($G(^MAG(2005,MAGIEN,"SOP")),"^",2)
"RTN","MAGDQR03",189,0)
 . . S:SOPUID'="" V(T)=SOPUID
"RTN","MAGDQR03",190,0)
 . . Q
"RTN","MAGDQR03",191,0)
 . I TYPE="N" D  Q
"RTN","MAGDQR03",192,0)
 . . S V(T)=$P($G(^MAGV(2005.64,MAGIEN,0)),"^",1)
"RTN","MAGDQR03",193,0)
 . . Q
"RTN","MAGDQR03",194,0)
 . Q
"RTN","MAGDQR03",195,0)
 Q
"RTN","MAGDQR03",196,0)
 ;
"RTN","MAGDQR03",197,0)
Q0080020(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R Study Date
"RTN","MAGDQR03",198,0)
 ; sensitive/employee?
"RTN","MAGDQR03",199,0)
 N STUDYIX
"RTN","MAGDQR03",200,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",201,0)
 . N I,REQDT S I=$O(REQ(T,"")) S:I REQDT=$TR($P($G(REQ(T,I)),"-",1),"*")
"RTN","MAGDQR03",202,0)
 . S V(T)=$S($G(REQDT)?8N:REQDT,1:$$DT^XLFDT+17000000)
"RTN","MAGDQR03",203,0)
 . Q
"RTN","MAGDQR03",204,0)
 ; no
"RTN","MAGDQR03",205,0)
 S V(T)=""
"RTN","MAGDQR03",206,0)
 D:MAGIEN
"RTN","MAGDQR03",207,0)
 . I (TYPE="R")!(TYPE="C") D  Q
"RTN","MAGDQR03",208,0)
 . . S V(T)=$P($G(^MAG(2005,MAGIEN,2)),"^",5)
"RTN","MAGDQR03",209,0)
 . . Q
"RTN","MAGDQR03",210,0)
 . I TYPE="N" D  Q
"RTN","MAGDQR03",211,0)
 . . S STUDYIX=$$STUDYIX^MAGUE004(MAGIEN) Q:'STUDYIX
"RTN","MAGDQR03",212,0)
 . . S V(T)=$P($G(^MAGV(2005.62,STUDYIX,2)),"^",1)
"RTN","MAGDQR03",213,0)
 . . Q
"RTN","MAGDQR03",214,0)
 . Q
"RTN","MAGDQR03",215,0)
 S:V(T) V(T)=V(T)\1+17000000
"RTN","MAGDQR03",216,0)
 Q
"RTN","MAGDQR03",217,0)
 ;
"RTN","MAGDQR03",218,0)
Q0080030(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R  Study Time
"RTN","MAGDQR03",219,0)
 ; sensitive/employee?
"RTN","MAGDQR03",220,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",221,0)
 . N I,REQTM S I=$O(REQ(T,"")) S:I REQTM=$TR($P($G(REQ(T,I)),"-",1),"*")
"RTN","MAGDQR03",222,0)
 . S V(T)=$S($G(REQTM)?6N:REQTM,1:$E($P($$NOW^XLFDT,".",2)_"000000",1,6))
"RTN","MAGDQR03",223,0)
 . Q
"RTN","MAGDQR03",224,0)
 ; no
"RTN","MAGDQR03",225,0)
 S V(T)=""
"RTN","MAGDQR03",226,0)
 D:MAGIEN
"RTN","MAGDQR03",227,0)
 . I (TYPE="R")!(TYPE="C") D  Q
"RTN","MAGDQR03",228,0)
 . . S V(T)=$P($G(^MAG(2005,MAGIEN,2)),"^",5)
"RTN","MAGDQR03",229,0)
 . . Q
"RTN","MAGDQR03",230,0)
 . I TYPE="N" D  Q
"RTN","MAGDQR03",231,0)
 . . S STUDYIX=$$STUDYIX^MAGUE004(MAGIEN) Q:'STUDYIX
"RTN","MAGDQR03",232,0)
 . . S V(T)=$P($G(^MAGV(2005.62,STUDYIX,2)),"^",1)
"RTN","MAGDQR03",233,0)
 . . Q
"RTN","MAGDQR03",234,0)
 . Q
"RTN","MAGDQR03",235,0)
 S:V(T) V(T)=$TR($J("."_$P(V(T),".",2)*1E6,6)," ",0)
"RTN","MAGDQR03",236,0)
 Q
"RTN","MAGDQR03",237,0)
 ;
"RTN","MAGDQR03",238,0)
Q0080050(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R  Accession Number
"RTN","MAGDQR03",239,0)
 D Q0080050^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",240,0)
 Q
"RTN","MAGDQR03",241,0)
 ;
"RTN","MAGDQR03",242,0)
Q0100010(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R  Patient's Name
"RTN","MAGDQR03",243,0)
 ; No IA needed, PIMS 5.3
"RTN","MAGDQR03",244,0)
 S V(T)=$S('SENSEMP:$P($G(^DPT(MAGDFN,0)),"^",1),1:"IMAGPATIENT,SENSITIVE")
"RTN","MAGDQR03",245,0)
 S V(T)=$$VA2DCM^MAGDQR01(V(T))
"RTN","MAGDQR03",246,0)
 Q
"RTN","MAGDQR03",247,0)
 ;
"RTN","MAGDQR03",248,0)
Q0100020(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R  Patient ID
"RTN","MAGDQR03",249,0)
 N DFN,VA
"RTN","MAGDQR03",250,0)
 S DFN=MAGDFN
"RTN","MAGDQR03",251,0)
 D PID^VADPT6 ; ICR supported #10062
"RTN","MAGDQR03",252,0)
 S V(T)=$TR(VA("PID"),"-")
"RTN","MAGDQR03",253,0)
 Q
"RTN","MAGDQR03",254,0)
 ;
"RTN","MAGDQR03",255,0)
Q0200010(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R  Study ID
"RTN","MAGDQR03",256,0)
 D Q0200010^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",257,0)
 Q
"RTN","MAGDQR03",258,0)
 ;
"RTN","MAGDQR03",259,0)
Q020000D(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;U  Study Instance UID
"RTN","MAGDQR03",260,0)
 D Q020000D^MAGDQR09(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK) ; overflow
"RTN","MAGDQR03",261,0)
 Q
"RTN","MAGDQR03",262,0)
 ;
"RTN","MAGDQR03",263,0)
Q020000E(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;U  Series Instance UID
"RTN","MAGDQR03",264,0)
 Q  ; not for study level query
"RTN","MAGDQR03",265,0)
 D Q020000E^MAGDQR09(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK) ; overflow
"RTN","MAGDQR03",266,0)
 Q
"RTN","MAGDQR03",267,0)
 ;
"RTN","MAGDQR03",268,0)
Q0080052(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Query Level
"RTN","MAGDQR03",269,0)
 N I
"RTN","MAGDQR03",270,0)
 S I=$O(REQ(T,"")),V(T)=""
"RTN","MAGDQR03",271,0)
 S:I'="" V(T)=$G(REQ(T,I))
"RTN","MAGDQR03",272,0)
 Q
"RTN","MAGDQR03",273,0)
 ;
"RTN","MAGDQR03",274,0)
Q0080061(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Modalities in Study
"RTN","MAGDQR03",275,0)
 D Q0080061^MAGDQR09(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK) ; overflow
"RTN","MAGDQR03",276,0)
 Q
"RTN","MAGDQR03",277,0)
 ;
"RTN","MAGDQR03",278,0)
Q0080062(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  SOP Classes in Study
"RTN","MAGDQR03",279,0)
 D Q0080062^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",280,0)
 Q
"RTN","MAGDQR03",281,0)
 ;
"RTN","MAGDQR03",282,0)
Q0080090(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Referring Physician's Name
"RTN","MAGDQR03",283,0)
 D Q0080090^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",284,0)
 Q
"RTN","MAGDQR03",285,0)
 ;
"RTN","MAGDQR03",286,0)
Q0081030(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Study Description
"RTN","MAGDQR03",287,0)
 D Q0081030^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",288,0)
 Q
"RTN","MAGDQR03",289,0)
 ;
"RTN","MAGDQR03",290,0)
Q0081032(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Procedure Code Sequence
"RTN","MAGDQR03",291,0)
 Q
"RTN","MAGDQR03",292,0)
 ;
"RTN","MAGDQR03",293,0)
Q0080100(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  >Code Value
"RTN","MAGDQR03",294,0)
 D Q0080100^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",295,0)
 Q
"RTN","MAGDQR03",296,0)
 ;
"RTN","MAGDQR03",297,0)
Q0080102(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  >Coding Scheme Designator
"RTN","MAGDQR03",298,0)
 S V("0008,1030",1,T)="C4"
"RTN","MAGDQR03",299,0)
 Q
"RTN","MAGDQR03",300,0)
 ;
"RTN","MAGDQR03",301,0)
Q0080103(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  >Coding Scheme Version
"RTN","MAGDQR03",302,0)
 S V("0008,1030",1,T)=4
"RTN","MAGDQR03",303,0)
 Q
"RTN","MAGDQR03",304,0)
 ;
"RTN","MAGDQR03",305,0)
Q0080104(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  >Code Meaning
"RTN","MAGDQR03",306,0)
 D Q0080104^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",307,0)
 Q
"RTN","MAGDQR03",308,0)
 ;
"RTN","MAGDQR03",309,0)
Q0081060(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Name of Physician(s) Reading Study
"RTN","MAGDQR03",310,0)
 D Q0081060^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",311,0)
 Q
"RTN","MAGDQR03",312,0)
 ;
"RTN","MAGDQR03",313,0)
Q0081080(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Admitting Diagnosis Description
"RTN","MAGDQR03",314,0)
 D Q0081080^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",315,0)
 Q
"RTN","MAGDQR03",316,0)
 ;
"RTN","MAGDQR03",317,0)
Q0100021(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Issuer of Patient ID
"RTN","MAGDQR03",318,0)
 S V(T)="USSSA"
"RTN","MAGDQR03",319,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",320,0)
 Q
"RTN","MAGDQR03",321,0)
 ;
"RTN","MAGDQR03",322,0)
Q0100030(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient's Birth Date
"RTN","MAGDQR03",323,0)
 ; sensitive/employee?
"RTN","MAGDQR03",324,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",325,0)
 . N I,REQDT S I=$O(REQ(T,"")) S:I REQDT=$TR($P($G(REQ(T,I)),"-",1),"*")
"RTN","MAGDQR03",326,0)
 . S V(T)=$S($G(REQDT)?8N:REQDT,1:$$DT^XLFDT+17000000)
"RTN","MAGDQR03",327,0)
 . Q
"RTN","MAGDQR03",328,0)
 ; no
"RTN","MAGDQR03",329,0)
 S V(T)=$P($G(^DPT(MAGDFN,0)),"^",3)\1+17000000
"RTN","MAGDQR03",330,0)
 I $E(V(T),5,6)="00" S V(T)="" ; invalid month for DICOM
"RTN","MAGDQR03",331,0)
 I $E(V(T),7,8)="00" S V(T)="" ; invalid year for DICOM
"RTN","MAGDQR03",332,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",333,0)
 Q
"RTN","MAGDQR03",334,0)
 ;
"RTN","MAGDQR03",335,0)
Q0100032(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient's Birth Time
"RTN","MAGDQR03",336,0)
 ; sensitive/employee?
"RTN","MAGDQR03",337,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",338,0)
 . N I,REQTM S I=$O(REQ(T,"")) S:I REQTM=$TR($P($G(REQ(T,I)),"-",1),"*")
"RTN","MAGDQR03",339,0)
 . S V(T)=$S($G(REQTM)?6N:REQTM,1:$E($P($$NOW^XLFDT,".",2)_"000000",1,6))
"RTN","MAGDQR03",340,0)
 . Q
"RTN","MAGDQR03",341,0)
 ; no
"RTN","MAGDQR03",342,0)
 S V(T)=$TR($J("."_$P($P($G(^DPT(MAGDFN,0)),"^",3),".",2)*1E6,6)," ",0)
"RTN","MAGDQR03",343,0)
 S:V(T)="000000" V(T)="" ; no time on file
"RTN","MAGDQR03",344,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",345,0)
 Q
"RTN","MAGDQR03",346,0)
 ;
"RTN","MAGDQR03",347,0)
Q0100040(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient's Sex
"RTN","MAGDQR03",348,0)
 ; sensitive/employee?
"RTN","MAGDQR03",349,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",350,0)
 . N I S I=$O(REQ(T,"")) S V(T)=$S(I:$S($G(REQ(T,I))]"":REQ(T,I),1:"O"),1:"O")
"RTN","MAGDQR03",351,0)
 . Q
"RTN","MAGDQR03",352,0)
 ; no
"RTN","MAGDQR03",353,0)
 S V(T)=$P($G(^DPT(MAGDFN,0)),"^",2)
"RTN","MAGDQR03",354,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",355,0)
 Q
"RTN","MAGDQR03",356,0)
 ;
"RTN","MAGDQR03",357,0)
Q0101000(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Other Patient IDs
"RTN","MAGDQR03",358,0)
 ; sensitive/employee?
"RTN","MAGDQR03",359,0)
 I SENSEMP S V(T)="000001234" Q  ; yes, scrub
"RTN","MAGDQR03",360,0)
 ; no
"RTN","MAGDQR03",361,0)
 N DFN,I,VA,VADPT
"RTN","MAGDQR03",362,0)
 S DFN=MAGDFN D DEM^VADPT ;  Supported IA (#10061)
"RTN","MAGDQR03",363,0)
 S X=$P(^DPT(DFN,0),"^",9) S:X'="" DFN(X)=""
"RTN","MAGDQR03",364,0)
 S:$G(VA("PID"))'="" DFN(VA("PID"))=""
"RTN","MAGDQR03",365,0)
 S:$G(VA("BID"))'="" DFN(VA("BID"))=""
"RTN","MAGDQR03",366,0)
 I $T(GETICN^MPIF001)'="" S X=$$GETICN^MPIF001(DFN) S:+X DFN(X)=""  ; Supported IA (#2701)
"RTN","MAGDQR03",367,0)
 S I=0,X="" F  S X=$O(DFN(X)) Q:X=""  S I=I+1,V(T,I)=X
"RTN","MAGDQR03",368,0)
 ;;;S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",369,0)
 Q
"RTN","MAGDQR03",370,0)
 ;
"RTN","MAGDQR03",371,0)
Q0101001(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Other Patient Names
"RTN","MAGDQR03",372,0)
 ; sensitive/employee?
"RTN","MAGDQR03",373,0)
 I SENSEMP S V(T)="IMAGPATIENT,SENSITIVE" Q  ; yes, scrub
"RTN","MAGDQR03",374,0)
 ; no
"RTN","MAGDQR03",375,0)
 N D1,I
"RTN","MAGDQR03",376,0)
 S (I,D1)=0 F  S D1=$O(^DPT(MAGDFN,0.01,D1)) Q:'D1  D
"RTN","MAGDQR03",377,0)
 . S X=$P($G(^DPT(MAGDFN,0.01,D1,0)),"^",1)
"RTN","MAGDQR03",378,0)
 . S:X'="" I=I+1,V(T,I)=X
"RTN","MAGDQR03",379,0)
 . Q
"RTN","MAGDQR03",380,0)
 ;;;S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",381,0)
 Q
"RTN","MAGDQR03",382,0)
 ;
"RTN","MAGDQR03",383,0)
Q0101010(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient's Age
"RTN","MAGDQR03",384,0)
 ; sensitive/employee?
"RTN","MAGDQR03",385,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",386,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR03",387,0)
 . Q
"RTN","MAGDQR03",388,0)
 ; no
"RTN","MAGDQR03",389,0)
 N DOB,FROM,YEARS
"RTN","MAGDQR03",390,0)
 S DOB=$P($G(^DPT(MAGDFN,0)),"^",3)
"RTN","MAGDQR03",391,0)
 S FROM=$P($G(^DPT(MAGDFN,.35)),"^",1) S:'FROM FROM=DT
"RTN","MAGDQR03",392,0)
 S YEARS=$E(FROM,1,3)-$E(DOB,1,3)
"RTN","MAGDQR03",393,0)
 S:$E(FROM,4,7)<$E(DOB,4,7) YEARS=YEARS-1
"RTN","MAGDQR03",394,0)
 S V(T)=($P($J(YEARS/1000,0,3),".",2))_"Y"
"RTN","MAGDQR03",395,0)
 ;;;S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",396,0)
 Q
"RTN","MAGDQR03",397,0)
 ;
"RTN","MAGDQR03",398,0)
Q0101020(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient's Size
"RTN","MAGDQR03",399,0)
 ; sensitive/employee?
"RTN","MAGDQR03",400,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",401,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR03",402,0)
 . Q
"RTN","MAGDQR03",403,0)
 ; no
"RTN","MAGDQR03",404,0)
 S V(T)=$P($G(^DPT(MAGDFN,57)),"^",1) ; height in cm - field not populated
"RTN","MAGDQR03",405,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",406,0)
 Q
"RTN","MAGDQR03",407,0)
 ;
"RTN","MAGDQR03",408,0)
Q0101030(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient's Weight
"RTN","MAGDQR03",409,0)
 ; sensitive/employee?
"RTN","MAGDQR03",410,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",411,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR03",412,0)
 . Q
"RTN","MAGDQR03",413,0)
 ; no
"RTN","MAGDQR03",414,0)
 S V(T)=$P($G(^DPT(MAGDFN,57)),"^",2) ; weight in kg - field not populated
"RTN","MAGDQR03",415,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",416,0)
 Q
"RTN","MAGDQR03",417,0)
 ;
"RTN","MAGDQR03",418,0)
Q0102160(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Ethnic Group
"RTN","MAGDQR03",419,0)
 ; sensitive/employee?
"RTN","MAGDQR03",420,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",421,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR03",422,0)
 . Q
"RTN","MAGDQR03",423,0)
 ; no
"RTN","MAGDQR03",424,0)
 S V(T)=$P($G(^DPT(MAGDFN,0)),"^",6)
"RTN","MAGDQR03",425,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",426,0)
 Q
"RTN","MAGDQR03",427,0)
 ;
"RTN","MAGDQR03",428,0)
Q0102180(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Occupation
"RTN","MAGDQR03",429,0)
 ; sensitive/employee?
"RTN","MAGDQR03",430,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR03",431,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR03",432,0)
 . Q
"RTN","MAGDQR03",433,0)
 ; no
"RTN","MAGDQR03",434,0)
 S V(T)=$P($G(^DPT(MAGDFN,0)),"^",7)
"RTN","MAGDQR03",435,0)
 S:'$$COMPARE(T,V(T)) OK=0
"RTN","MAGDQR03",436,0)
 Q
"RTN","MAGDQR03",437,0)
 ;
"RTN","MAGDQR03",438,0)
Q01021B0(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Additional Patient History
"RTN","MAGDQR03",439,0)
 D Q01021B0^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",440,0)
 Q
"RTN","MAGDQR03",441,0)
 ;
"RTN","MAGDQR03",442,0)
Q0104000(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient Comments
"RTN","MAGDQR03",443,0)
 D Q0104000^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",444,0)
 Q
"RTN","MAGDQR03",445,0)
 ;
"RTN","MAGDQR03",446,0)
Q0201206(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Number of Study Related Series
"RTN","MAGDQR03",447,0)
 D Q0201206^MAGDQR09(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK) ; overflow
"RTN","MAGDQR03",448,0)
 Q
"RTN","MAGDQR03",449,0)
 ;
"RTN","MAGDQR03",450,0)
Q0201208(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Number of Study Related Instances
"RTN","MAGDQR03",451,0)
 D Q0201208^MAGDQR09(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK) ; overflow
"RTN","MAGDQR03",452,0)
 Q
"RTN","MAGDQR03",453,0)
 ;
"RTN","MAGDQR03",454,0)
U008010C(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Interpretation Author
"RTN","MAGDQR03",455,0)
 D U008010C^MAGDQR06(TYPE,.REQ,.V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,.OK)
"RTN","MAGDQR03",456,0)
 Q
"RTN","MAGDQR04")
0^10^B138235933
"RTN","MAGDQR04",1,0)
MAGDQR04 ;WOIFO/EdM,MLH,JSL,SAF,DAC - Imaging RPCs for Query/Retrieve ; 12 Oct 2012 1:14 PM
"RTN","MAGDQR04",2,0)
 ;;3.0;IMAGING;**51,54,66,123,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR04",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR04",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR04",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR04",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR04",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR04",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR04",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR04",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR04",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR04",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR04",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR04",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR04",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR04",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR04",17,0)
 ;;
"RTN","MAGDQR04",18,0)
 Q
"RTN","MAGDQR04",19,0)
 ;
"RTN","MAGDQR04",20,0)
STUDY(OUT,UID,PRMUID) ; RPC = MAG STUDY UID QUERY
"RTN","MAGDQR04",21,0)
 N D1,F1,F2,F3,F4,F5,F6,IMAGE,N,NET,PASS,PAT,PAT0,SERIES,USER,X,IARRAY
"RTN","MAGDQR04",22,0)
 N PATIX,PROCIX,PATDTA,PATIDNT,STYIX,SERIX,SOPIX
"RTN","MAGDQR04",23,0)
 I $G(UID)="" S OUT(1)="-1,No UID specified." Q
"RTN","MAGDQR04",24,0)
 I UID'?1.64(1N,1".") S OUT(1)="-2,Invalid UID format: """_UID_"""." Q
"RTN","MAGDQR04",25,0)
 S PRMUID=$G(PRMUID) S:($L(PRMUID)'=1)!(123'[PRMUID) PRMUID=0
"RTN","MAGDQR04",26,0)
 S N=1,PAT=""
"RTN","MAGDQR04",27,0)
 ;
"RTN","MAGDQR04",28,0)
 ; search old DB
"RTN","MAGDQR04",29,0)
 ;
"RTN","MAGDQR04",30,0)
 S SERIES="" F  S SERIES=$O(^MAG(2005,"P",UID,SERIES)) Q:SERIES=""  D  Q:PAT<0
"RTN","MAGDQR04",31,0)
 . S X=$G(^MAG(2005,SERIES,0))
"RTN","MAGDQR04",32,0)
 . S PAT0=$P(X,"^",7) D:PAT0  Q:PAT<0
"RTN","MAGDQR04",33,0)
 . . I PAT="" S PAT=PAT0 Q
"RTN","MAGDQR04",34,0)
 . . Q:PRMUID=1
"RTN","MAGDQR04",35,0)
 . . S:PAT'=PAT0 PAT=-1
"RTN","MAGDQR04",36,0)
 . . Q
"RTN","MAGDQR04",37,0)
 . I $P(X,"^",10) S IARRAY(SERIES)="OLD" Q
"RTN","MAGDQR04",38,0)
 . S D1=0 F  S D1=$O(^MAG(2005,SERIES,1,D1)) Q:'D1  D
"RTN","MAGDQR04",39,0)
 . . S IMAGE=+$G(^MAG(2005,SERIES,1,D1,0)) S:IMAGE IARRAY(IMAGE)="OLD"
"RTN","MAGDQR04",40,0)
 . . Q
"RTN","MAGDQR04",41,0)
 . Q
"RTN","MAGDQR04",42,0)
 I PAT<0 S OUT(1)="-13,Duplicate Study UID" Q
"RTN","MAGDQR04",43,0)
 S SERIES="" F  S SERIES=$O(^MAG(2005,"SERIESUID",UID,SERIES)) Q:SERIES=""  D
"RTN","MAGDQR04",44,0)
 . I $P($G(^MAG(2005,SERIES,0)),"^",10) S IARRAY(SERIES)="OLD" Q
"RTN","MAGDQR04",45,0)
 . S D1=0 F  S D1=$O(^MAG(2005,SERIES,1,D1)) Q:'D1  D
"RTN","MAGDQR04",46,0)
 . . S IMAGE=+$G(^MAG(2005,SERIES,1,D1,0)) S:IMAGE IARRAY(IMAGE)="OLD"
"RTN","MAGDQR04",47,0)
 . . Q
"RTN","MAGDQR04",48,0)
 . Q
"RTN","MAGDQR04",49,0)
 ;
"RTN","MAGDQR04",50,0)
 ; search new DB
"RTN","MAGDQR04",51,0)
 ;
"RTN","MAGDQR04",52,0)
 D:$D(^MAGV(2005.62,"B",UID))
"RTN","MAGDQR04",53,0)
 . S STYIX="" F  S STYIX=$O(^MAGV(2005.62,"B",UID,STYIX)) Q:'STYIX  D  Q:PAT<0
"RTN","MAGDQR04",54,0)
 . . S PROCIX=$P($G(^MAGV(2005.62,STYIX,6)),"^",1) Q:'PROCIX
"RTN","MAGDQR04",55,0)
 . . S PATIX=$P($G(^MAGV(2005.61,PROCIX,6)),"^",1) Q:'PATIX
"RTN","MAGDQR04",56,0)
 . . S PATDTA=$G(^MAGV(2005.6,PATIX,0)) Q:PATDTA=""
"RTN","MAGDQR04",57,0)
 . . S PAT0=$P(PATDTA,"^",1) S:PAT="" PAT=PAT0
"RTN","MAGDQR04",58,0)
 . . I ($P(PATDTA,"^",3)'="D")!(PAT'=PAT0) S PAT=-1 Q
"RTN","MAGDQR04",59,0)
 . . ; process study for valid pt
"RTN","MAGDQR04",60,0)
 . . S SERIX="" F  S SERIX=$O(^MAGV(2005.63,"C",STYIX,SERIX)) Q:'SERIX  D
"RTN","MAGDQR04",61,0)
 . . . S SOPIX="" F  S SOPIX=$O(^MAGV(2005.64,"C",SERIX,SOPIX)) Q:'SOPIX  D
"RTN","MAGDQR04",62,0)
 . . . . N ACTVIMG
"RTN","MAGDQR04",63,0)
 . . . . S ACTVIMG=0
"RTN","MAGDQR04",64,0)
 . . . . S IMAGE="" F  S IMAGE=$O(^MAGV(2005.65,"C",SOPIX,IMAGE)) Q:'IMAGE  D  Q:ACTVIMG
"RTN","MAGDQR04",65,0)
 . . . . . I $P($G(^MAGV(2005.65,IMAGE,1)),"^",5)'="I" S IARRAY(IMAGE)="NEW",ACTVIMG=1
"RTN","MAGDQR04",66,0)
 . . . . . Q
"RTN","MAGDQR04",67,0)
 . . . . Q
"RTN","MAGDQR04",68,0)
 . . . Q
"RTN","MAGDQR04",69,0)
 . . Q
"RTN","MAGDQR04",70,0)
 . Q
"RTN","MAGDQR04",71,0)
 I PAT<0 S OUT(1)="-13,Duplicate Study UID" Q
"RTN","MAGDQR04",72,0)
 S OUT(1)=0
"RTN","MAGDQR04",73,0)
 S IMAGE="" F N=1:1 S IMAGE=$O(IARRAY(IMAGE)) Q:'IMAGE  D VALID(.OUT,IMAGE,IARRAY(IMAGE),PRMUID)
"RTN","MAGDQR04",74,0)
 S X=" image" S:N'=2 X=X_"s" S X=X_" found"
"RTN","MAGDQR04",75,0)
 S OUT(1)="0,"_(N-1)_X
"RTN","MAGDQR04",76,0)
 Q
"RTN","MAGDQR04",77,0)
 ;
"RTN","MAGDQR04",78,0)
VALID(OUT,IMAGE,DBTYPE,PRMUID) N T,UID,UNIQ
"RTN","MAGDQR04",79,0)
 N DATE,Q,F1,F2,F3,T1,T2,T3,X,NET,USER,PASS,RETURN,SOPCLIX
"RTN","MAGDQR04",80,0)
 I IMAGE,IMAGE?.N
"RTN","MAGDQR04",81,0)
 E  S OUT($O(OUT(""),-1)+1)=IMAGE_"^-21,Invalid Image IEN Format" Q
"RTN","MAGDQR04",82,0)
 D:DBTYPE="OLD"
"RTN","MAGDQR04",83,0)
 . D CHK^MAGGSQI(.X,IMAGE) I +$G(X(0))'=1 D  Q
"RTN","MAGDQR04",84,0)
 . . S OUT($O(OUT(""),-1)+1)=IMAGE_"^-13,Questionable Integrity"
"RTN","MAGDQR04",85,0)
 . . Q
"RTN","MAGDQR04",86,0)
 . S UNIQ=0,UID=$P($G(^MAG(2005,IMAGE,"PACS")),"^",1) D:UID'=""
"RTN","MAGDQR04",87,0)
 . . S T="" F  S T=$O(^MAG(2005,"P",UID,T)) Q:T=""  D
"RTN","MAGDQR04",88,0)
 . . . S UNIQ=UNIQ+1
"RTN","MAGDQR04",89,0)
 . . . S DATE($G(^MAG(2005,T,2))\1_" ",T)=""
"RTN","MAGDQR04",90,0)
 . . . Q
"RTN","MAGDQR04",91,0)
 . . Q
"RTN","MAGDQR04",92,0)
 . S Q=0 I UNIQ>1 D  Q:Q
"RTN","MAGDQR04",93,0)
 . . Q:PRMUID=1
"RTN","MAGDQR04",94,0)
 . . I PRMUID=0 S Q=1,OUT($O(OUT(""),-1)+1)=IMAGE_"^-14,Multiple images with UID="""_UID_"""." Q
"RTN","MAGDQR04",95,0)
 . . S DATE=$O(DATE(""),-PRMUID*2+5) S:DATE="" DATE="?"
"RTN","MAGDQR04",96,0)
 . . S:'$D(DATE(DATE,IMAGE)) Q=1
"RTN","MAGDQR04",97,0)
 . . Q
"RTN","MAGDQR04",98,0)
 . S NET=$P($G(^MAG(2005,IMAGE,0)),"^",3) S:NET="" NET=$P($G(^(0)),"^",5)
"RTN","MAGDQR04",99,0)
 . S (USER,PASS)=""
"RTN","MAGDQR04",100,0)
 . S:NET X=$G(^MAG(2005.2,NET,2)),USER=$P(X,"^",1),PASS=$$DECRYP^ROUTINE($P(X,"^",2))
"RTN","MAGDQR04",101,0)
 . S SOPIX=$P($G(^MAG(2005,IMAGE,"SOP")),"^",1)
"RTN","MAGDQR04",102,0)
 . D FILEFIND^MAGDFB(IMAGE,"FULL",0,0,.F1,.F2,.F3)
"RTN","MAGDQR04",103,0)
 . D FILEFIND^MAGDFB(IMAGE,"BIG",0,0,.T1,.T2,.T3)
"RTN","MAGDQR04",104,0)
 . S:T2'<0 F2=T2
"RTN","MAGDQR04",105,0)
 . D FILEFIND^MAGDFB(IMAGE,"TEXT",0,0,.F4,.F5,.F6)
"RTN","MAGDQR04",106,0)
 . S RETURN=IMAGE_"^DB=OLD|IMGLOC="_F2_"|NWLOCIEN="_NET
"RTN","MAGDQR04",107,0)
 . S RETURN=RETURN_"^"_USER_"^"_PASS_"|TXTLOC="_F5
"RTN","MAGDQR04",108,0)
 . S:SOPIX RETURN=RETURN_"|SOPCLASS="_$P($G(^MAG(2006.532,SOPIX,0)),"^",1)
"RTN","MAGDQR04",109,0)
 . Q
"RTN","MAGDQR04",110,0)
 D:DBTYPE="NEW"
"RTN","MAGDQR04",111,0)
 . S RETURN=IMAGE_"^DB=NEW|ARTKEY="_$P($G(^MAGV(2005.65,IMAGE,0)),"^",1)
"RTN","MAGDQR04",112,0)
 . S SOPIX=$P($G(^MAGV(2005.65,IMAGE,6)),"^",1)
"RTN","MAGDQR04",113,0)
 . S:$G(SOPIX) SOPCLIX=$P($G(^MAGV(2005.64,SOPIX,0)),"^",3)
"RTN","MAGDQR04",114,0)
 . S:$G(SOPCLIX) RETURN=RETURN_"|SOPCLASS="_$P($G(^MAG(2006.532,SOPCLIX,0)),"^",1)
"RTN","MAGDQR04",115,0)
 . Q
"RTN","MAGDQR04",116,0)
 S:$D(RETURN) OUT($O(OUT(""),-1)+1)=RETURN
"RTN","MAGDQR04",117,0)
 Q
"RTN","MAGDQR04",118,0)
 ;
"RTN","MAGDQR04",119,0)
INFO(OUT,IMAGE,DBTYPE) ; RPC = MAG IMAGE CURRENT INFO
"RTN","MAGDQR04",120,0)
 ;
"RTN","MAGDQR04",121,0)
 ; 0008,0018  SOP Instance UID (Create new one, if needed)
"RTN","MAGDQR04",122,0)
 ; 0008,0020  Study Date
"RTN","MAGDQR04",123,0)
 ; 0008,0050  Accession Number
"RTN","MAGDQR04",124,0)
 ; 0008,0060  Modality
"RTN","MAGDQR04",125,0)
 ; 0008,0090  Referring Physician's Name
"RTN","MAGDQR04",126,0)
 ; 0008,1030  Study Description (may be VA procedure name)
"RTN","MAGDQR04",127,0)
 ; 0008,1050  Performing (attending) Physician
"RTN","MAGDQR04",128,0)
 ; 0010,0010  Patient Name
"RTN","MAGDQR04",129,0)
 ; 0010,0020  Patient ID
"RTN","MAGDQR04",130,0)
 ; 0010,0030  Patient's Birth Date
"RTN","MAGDQR04",131,0)
 ; 0010,0040  Patient's Sex
"RTN","MAGDQR04",132,0)
 ; 0010,1000  Other Patient IDs (= ICN, Integration Control Number)
"RTN","MAGDQR04",133,0)
 ; 0010,1040  Address
"RTN","MAGDQR04",134,0)
 ; 0010,2160  Ethnic Group
"RTN","MAGDQR04",135,0)
 ; 0010,2000  Medical Alerts
"RTN","MAGDQR04",136,0)
 ; 0020,000D  Study Instance UID
"RTN","MAGDQR04",137,0)
 ; 0020,000E  Series Instance UID
"RTN","MAGDQR04",138,0)
 ; 0020,000D  Study Instance UID
"RTN","MAGDQR04",139,0)
 ; 0032,1032  Requesting Physician
"RTN","MAGDQR04",140,0)
 ; 0032,1033  Requesting Service
"RTN","MAGDQR04",141,0)
 ; 0032,1060  Requested Procedure Description (CPT name)
"RTN","MAGDQR04",142,0)
 ; 0032,1064  Requested Procedure Code Sequence
"RTN","MAGDQR04",143,0)
 ; 0008,0100  > Code Value (CPT code)
"RTN","MAGDQR04",144,0)
 ; 0008,0102  > Coding Scheme Designator ("C4")
"RTN","MAGDQR04",145,0)
 ; 0008,0104  > Code Meaning (CPT name)
"RTN","MAGDQR04",146,0)
 ; 0038,0300  Current Patient Location (ward)
"RTN","MAGDQR04",147,0)
 ; 0032,1020  Scheduled Study Location
"RTN","MAGDQR04",148,0)
 ;
"RTN","MAGDQR04",149,0)
 N ACN,ATP,CPT,D0,D1,D2,D3,DFN,ERR,I,IT,MO,N,P,PDT,PP,REQP,RFP,RQL,T,TAG,TYPE,UID,V,WRD,X
"RTN","MAGDQR04",150,0)
 N TYPE,SOPIX,SERIX,STYIX,PROCIX,PATIX,PATDTA,PROCDTA,ACCARY,ACCIX
"RTN","MAGDQR04",151,0)
 K OUT
"RTN","MAGDQR04",152,0)
 S DBTYPE=$G(DBTYPE,"OLD")
"RTN","MAGDQR04",153,0)
 D  Q:$D(OUT)  ; validate input parameters
"RTN","MAGDQR04",154,0)
 . I "^OLD^NEW^"'[("^"_DBTYPE_"^") S OUT(1)="-3,Database type not specified." Q
"RTN","MAGDQR04",155,0)
 . I '$G(IMAGE) S OUT(1)="-1,No Image Specified." Q
"RTN","MAGDQR04",156,0)
 . I DBTYPE="OLD",'$D(^MAG(2005,IMAGE)) S OUT(1)="-2,No Such Image ("_IMAGE_")." Q
"RTN","MAGDQR04",157,0)
 . I DBTYPE="NEW",'$D(^MAGV(2005.64,IMAGE)) S OUT(1)="-2,No Such Image ("_IMAGE_")." Q
"RTN","MAGDQR04",158,0)
 . Q
"RTN","MAGDQR04",159,0)
 ;
"RTN","MAGDQR04",160,0)
 S TYPE=$S(DBTYPE="OLD":"R",1:"N")
"RTN","MAGDQR04",161,0)
 S TAG("0008,1030")=$$STYDESC2^MAGUE001(TYPE,IMAGE,.ERR) ; Study Description
"RTN","MAGDQR04",162,0)
 D:DBTYPE="OLD"
"RTN","MAGDQR04",163,0)
 . S X=$G(^MAG(2005,IMAGE,0)),P=$P(X,"^",10)
"RTN","MAGDQR04",164,0)
 . S DFN=$P(X,"^",7)
"RTN","MAGDQR04",165,0)
 . Q
"RTN","MAGDQR04",166,0)
 D:DBTYPE="NEW"  Q:$D(OUT)
"RTN","MAGDQR04",167,0)
 . S P=1
"RTN","MAGDQR04",168,0)
 . S SOPIX=$P($G(^MAGV(2005.65,IMAGE,6)),"^",1)
"RTN","MAGDQR04",169,0)
 . I 'SOPIX S OUT(1)="-4,SOP instance not found for image IEN "_IMAGE_"." Q
"RTN","MAGDQR04",170,0)
 . S SERIX=$P($G(^MAGV(2005.64,SOPIX,6)),"^",1)
"RTN","MAGDQR04",171,0)
 . I 'SERIX S OUT(1)="-4,Series not found for image IEN "_IMAGE_"." Q
"RTN","MAGDQR04",172,0)
 . S STYIX=$P($G(^MAGV(2005.63,SERIX,6)),"^",1)
"RTN","MAGDQR04",173,0)
 . I 'STYIX S OUT(1)="-5,Study not found for image IEN "_IMAGE_"." Q
"RTN","MAGDQR04",174,0)
 . S PROCIX=$P($G(^MAGV(2005.62,STYIX,6)),"^",1)
"RTN","MAGDQR04",175,0)
 . I 'PROCIX S OUT(1)="-6,Procedure reference not found for image IEN "_IMAGE_"." Q
"RTN","MAGDQR04",176,0)
 . S PATIX=$P($G(^MAGV(2005.61,STYIX,6)),"^",1)
"RTN","MAGDQR04",177,0)
 . I 'PATIX S OUT(1)="-7,Patient not found for image IEN "_IMAGE_"." Q
"RTN","MAGDQR04",178,0)
 . S PATDTA=$G(^MAGV(2005.6,PATIX,0))
"RTN","MAGDQR04",179,0)
 . I $P(PATDTA,"^",3)'="D" S OUT(1)="-8,Patient ID is not a VA DFN for image IEN "_IMAGE_"." Q
"RTN","MAGDQR04",180,0)
 . S DFN=$P(PATDTA,"^",1)
"RTN","MAGDQR04",181,0)
 . I 'DFN S OUT(1)="-9,DFN not found for image IEN "_IMAGE_"." Q
"RTN","MAGDQR04",182,0)
 . Q
"RTN","MAGDQR04",183,0)
 D:DFN
"RTN","MAGDQR04",184,0)
 . N VA,VADM,VAPA,VAERR,DOB,TOB ; return arrays from VADPT
"RTN","MAGDQR04",185,0)
 . N I ; scratch loop array
"RTN","MAGDQR04",186,0)
 . D DEM^VADPT ; populate standard patient data array VADM() Supported IA (#10061)
"RTN","MAGDQR04",187,0)
 . S TAG("0010,0010")=$G(VADM(1)) ; Patient Name
"RTN","MAGDQR04",188,0)
 . S TAG("0010,0020")=$S($$ISIHS^MAGSPID():$G(VA("PID")),1:VADM(2)) ; Patient ID (HRN or SSN)
"RTN","MAGDQR04",189,0)
 . S DOB=$G(VADM(3))\1+17000000 ; Patient's Birth Date
"RTN","MAGDQR04",190,0)
 . ; make sure month and year are DICOM valid
"RTN","MAGDQR04",191,0)
 . S TAG("0010,0030")=$S($E(DOB,5,6)="00":"",$E(DOB,7,8)="00":"",1:DOB)
"RTN","MAGDQR04",192,0)
 . ; Patient's Birth Time [probably always blank]
"RTN","MAGDQR04",193,0)
 . S TAG("0010,0032")=$S(VADM(3)[".":$TR($J("."_$P($G(VADM(3)),".",2)*1E6,6)," ",0),1:"")
"RTN","MAGDQR04",194,0)
 . S TAG("0010,2160")=$G(VADM(8)) ; Patient's Race
"RTN","MAGDQR04",195,0)
 . S TAG("0010,0040")=$P($G(VADM(5)),"^",1) ; Patient's Sex
"RTN","MAGDQR04",196,0)
 . S X=$S($T(GETICN^MPIF001)'="":$$GETICN^MPIF001(DFN),1:"-1^NO MPI") ; Supported IA (#2701)
"RTN","MAGDQR04",197,0)
 . S TAG("0010,1000")=$S(X<0:$E(TAG("0010,0010"),1)_$E(TAG("0010,0020"),6,99),1:X) ; Other Patient ID
"RTN","MAGDQR04",198,0)
 . D ADD^VADPT ; populate patient address array
"RTN","MAGDQR04",199,0)
 . F I=1,2,3,4,6 S $P(TAG("0010,1040"),"^",I)=$G(VAPA(I))
"RTN","MAGDQR04",200,0)
 . S $P(TAG("0010,1040"),"^",5)=$P($G(VAPA(5)),"^",2)
"RTN","MAGDQR04",201,0)
 . Q
"RTN","MAGDQR04",202,0)
 ;
"RTN","MAGDQR04",203,0)
 S:P TAG("0008,0018")=$$QRNEWUID^MAGDRPC9(IMAGE,DBTYPE)
"RTN","MAGDQR04",204,0)
 ;
"RTN","MAGDQR04",205,0)
 D:DBTYPE="OLD"
"RTN","MAGDQR04",206,0)
 . S TAG("0020,000D")=$P($G(^MAG(2005,$S(P:+P,1:IMAGE),"PACS")),"^",1)
"RTN","MAGDQR04",207,0)
 . Q  ; no series UID on retrieve per WFP 5/6/11
"RTN","MAGDQR04",208,0)
 . S X=$P($G(^MAG(2005,IMAGE,"SERIESUID")),"^",1)
"RTN","MAGDQR04",209,0)
 . S:X'="" TAG("0020,000E")=X
"RTN","MAGDQR04",210,0)
 D:DBTYPE="NEW"
"RTN","MAGDQR04",211,0)
 . S TAG("0020,000D")=$P(^MAGV(2005.62,STYIX,0),"^",1)
"RTN","MAGDQR04",212,0)
 . Q  ; no series UID for study-level query
"RTN","MAGDQR04",213,0)
 . S TAG("0020,000E")=$P(^MAGV(2005.62,SERIX,0),"^",1)
"RTN","MAGDQR04",214,0)
 . Q
"RTN","MAGDQR04",215,0)
 ;
"RTN","MAGDQR04",216,0)
 ; The following references to ^RADPT are allowed according to IA # 1172
"RTN","MAGDQR04",217,0)
 S ACN=""
"RTN","MAGDQR04",218,0)
 I DBTYPE="OLD" D
"RTN","MAGDQR04",219,0)
 . S X=$G(^MAG(2005,IMAGE,2)) D:$P(X,"^",6)=74
"RTN","MAGDQR04",220,0)
 . . N P5,P7
"RTN","MAGDQR04",221,0)
 . . S P5=$P(X,"^",5),P7=$P(X,"^",7),X=$G(^RARPT(+P7,0))
"RTN","MAGDQR04",222,0)
 . . S D0=$P(X,"^",2),D1=9999999.9999=$P(X,"^",3),ACN=$P(X,"^",1)
"RTN","MAGDQR04",223,0)
 . . Q
"RTN","MAGDQR04",224,0)
 . Q
"RTN","MAGDQR04",225,0)
 I DBTYPE="NEW" D
"RTN","MAGDQR04",226,0)
 . S PROCDTA=$G(^MAGV(2005.61,PROCIX,0))
"RTN","MAGDQR04",227,0)
 . S:$P(PROCDTA,"^",3)="RAD" ACN=$P(PROCDTA,"^",1)
"RTN","MAGDQR04",228,0)
 . Q
"RTN","MAGDQR04",229,0)
 S IT=0
"RTN","MAGDQR04",230,0)
 S:ACN'="" I=$$ACCFIND^RAAPI(ACN,.ACCARY)
"RTN","MAGDQR04",231,0)
 S ACCIX="" F  S ACCIX=$O(ACCARY(ACCIX)) Q:'ACCIX  D
"RTN","MAGDQR04",232,0)
 . S D0=$P(ACCARY(ACCIX),"^",1),D1=$P(ACCARY(ACCIX),"^",2),D2=$P(ACCARY(ACCIX),"^",3)
"RTN","MAGDQR04",233,0)
 . N M1,VAIN,VAINDT
"RTN","MAGDQR04",234,0)
 . ; no study date on retrieve per WFP 5/6/11
"RTN","MAGDQR04",235,0)
 . ;S IT=IT+1,TAG("0008,0020",IT)=9999999.9999-D1\1+17000000 ; Study Date
"RTN","MAGDQR04",236,0)
 . S VAINDT=9999999.9999-D1 D INP^VADPT ; Supported reference
"RTN","MAGDQR04",237,0)
 . S:$G(VAIN(2))'="" RFP(VAIN(2))="" ; Referring Physician's Name
"RTN","MAGDQR04",238,0)
 . S:$G(VAIN(4))'="" RFP(VAIN(4))="" ; Current Ward
"RTN","MAGDQR04",239,0)
 . S:$G(VAIN(11))'="" ATP(VAIN(11))="" ; Performing (attending) Physician
"RTN","MAGDQR04",240,0)
 . S X=$G(^RADPT(D0,"DT",D1,"P",D2,0))
"RTN","MAGDQR04",241,0)
 . S P=$P(X,"^",2) D:P
"RTN","MAGDQR04",242,0)
 . . S M1=0 F  S M1=$O(^RAMIS(71,+P,"MDL",M1)) Q:'M1  D  ; IA # 1174
"RTN","MAGDQR04",243,0)
 . . . S V=$P($G(^RAMIS(71,+P,"MDL",M1,0)),"^",1) Q:'V  ; IA # 1174
"RTN","MAGDQR04",244,0)
 . . . S V=$P($G(^RAMIS(73.1,+V,0)),"^",1) S:V'="" MO(V)="" ; IA # 2933
"RTN","MAGDQR04",245,0)
 . . . Q
"RTN","MAGDQR04",246,0)
 . . S V=$P($G(^RAMIS(71,+P,0)),"^",9) S:V CPT(+V)="" ; IA # 1174
"RTN","MAGDQR04",247,0)
 . . Q
"RTN","MAGDQR04",248,0)
 . S P=$P(X,"^",14) D:P
"RTN","MAGDQR04",249,0)
 . . S V=$P($G(^VA(200,+P,0)),"^",1)
"RTN","MAGDQR04",250,0)
 . . S:V'="" REQP(V)=""
"RTN","MAGDQR04",251,0)
 . . Q
"RTN","MAGDQR04",252,0)
 . S P=$P(X,"^",17) D:P
"RTN","MAGDQR04",253,0)
 . . S X=$G(^RARPT(+P,0)) Q:X=""  ; IA # 1171
"RTN","MAGDQR04",254,0)
 . . S V=$P(X,"^",1) S:V'="" ACN(V)=""
"RTN","MAGDQR04",255,0)
 . . Q
"RTN","MAGDQR04",256,0)
 . S P=$P(X,"^",22) D:P
"RTN","MAGDQR04",257,0)
 . . S X=$G(^SC(+P,0)) Q:X=""  ; IA # 10040
"RTN","MAGDQR04",258,0)
 . . S V=$P(X,"^",1) S:V'="" RQL(V)=""
"RTN","MAGDQR04",259,0)
 . . Q
"RTN","MAGDQR04",260,0)
 . S P=0,D3=0 F  S D3=$O(^RADPT(D0,"P",D1,"DT",D2,"H",D3)) Q:'D3  D
"RTN","MAGDQR04",261,0)
 . . S X=$G(^RADPT(D0,"P",D1,"DT",D2,"H",D3,0)) Q:X=""
"RTN","MAGDQR04",262,0)
 . . S P=P+1,TAG("0010,2000  "_$J(P,5))=X
"RTN","MAGDQR04",263,0)
 . . Q
"RTN","MAGDQR04",264,0)
 . Q
"RTN","MAGDQR04",265,0)
 S V="" F  S V=$O(ACN(V)) Q:V=""  D
"RTN","MAGDQR04",266,0)
 . S IT=IT+1,TAG("0008,0050",IT)=V ; Accession Number
"RTN","MAGDQR04",267,0)
 . Q
"RTN","MAGDQR04",268,0)
 S V="" F  S V=$O(WRD(V)) Q:V=""  D
"RTN","MAGDQR04",269,0)
 . S IT=IT+1,TAG("0038,0300",IT)=$P(V,"^",2) ; Current Patient Location
"RTN","MAGDQR04",270,0)
 . Q
"RTN","MAGDQR04",271,0)
 S V="" F  S V=$O(RFP(V)) Q:V=""  D
"RTN","MAGDQR04",272,0)
 . S IT=IT+1,TAG("0008,0090",IT)=$P(V,"^",2) ; Referring Physician's Name
"RTN","MAGDQR04",273,0)
 . Q
"RTN","MAGDQR04",274,0)
 S V="" F  S V=$O(ATP(V)) Q:V=""  D
"RTN","MAGDQR04",275,0)
 . S IT=IT+1,TAG("0008,1050",IT)=$P(V,"^",2) ; Performing (attending) Physician
"RTN","MAGDQR04",276,0)
 . Q
"RTN","MAGDQR04",277,0)
 S V="" F  S V=$O(RQL(V)) Q:V=""  D
"RTN","MAGDQR04",278,0)
 . S IT=IT+1,TAG("0032,1033",IT)=V ; Requesting Service
"RTN","MAGDQR04",279,0)
 . Q
"RTN","MAGDQR04",280,0)
 ; no modality code on retrieve per WFP 5/6/11
"RTN","MAGDQR04",281,0)
 ;S V="" F  S V=$O(MO(V)) Q:V=""  D
"RTN","MAGDQR04",282,0)
 ;. S IT=IT+1,TAG("0008,0060",IT)=V ; Modality
"RTN","MAGDQR04",283,0)
 ;. Q
"RTN","MAGDQR04",284,0)
 S V="" F  S V=$O(REQP(V)) Q:V=""  D
"RTN","MAGDQR04",285,0)
 . S IT=IT+1,TAG("0032,1032",IT)=V ; Requesting Physician
"RTN","MAGDQR04",286,0)
 . Q
"RTN","MAGDQR04",287,0)
 S V="" F  S V=$O(CPT(V)) Q:V=""  D
"RTN","MAGDQR04",288,0)
 . S X=$$CPT^ICPTCOD(V) ; IA # 1995, supported reference
"RTN","MAGDQR04",289,0)
 . Q:$P(X,"^",2)=""
"RTN","MAGDQR04",290,0)
 . S IT=IT+1
"RTN","MAGDQR04",291,0)
 . S TAG("0032,1064 0008,0100",IT)=$P(X,"^",2) ; CPT Code
"RTN","MAGDQR04",292,0)
 . S TAG("0032,1064 0008,0104",IT)=$P(X,"^",3) ; Code Meaning
"RTN","MAGDQR04",293,0)
 . S TAG("0032,1060",IT)=$P(X,"^",3) ; Requested Procedure Description
"RTN","MAGDQR04",294,0)
 . S TAG("0032,1064 0008,0102",IT)="C4" ; Coding Scheme Designator
"RTN","MAGDQR04",295,0)
 . Q
"RTN","MAGDQR04",296,0)
 ; Acquisition Site
"RTN","MAGDQR04",297,0)
 D:DBTYPE="OLD"
"RTN","MAGDQR04",298,0)
 . S V=$P($G(^MAG(2005,IMAGE,100)),"^",3) D:V=""
"RTN","MAGDQR04",299,0)
 . . ; Find Acquisition site when not filled in in Image File
"RTN","MAGDQR04",300,0)
 . . N D0,LOC,N
"RTN","MAGDQR04",301,0)
 . . S (N,D0,LOC)=0 F  S D0=$O(^MAG(2006.1,D0)) Q:'D0  D
"RTN","MAGDQR04",302,0)
 . . . S N=N+1,LOC=$P($G(^MAG(2006.1,D0,0)),"^",1)
"RTN","MAGDQR04",303,0)
 . . . Q
"RTN","MAGDQR04",304,0)
 . . Q:N>2  ; Too many to choose from...
"RTN","MAGDQR04",305,0)
 . . S:LOC V=LOC
"RTN","MAGDQR04",306,0)
 . . Q
"RTN","MAGDQR04",307,0)
 . S:V'="" TAG("0032,1020")=V
"RTN","MAGDQR04",308,0)
 . Q
"RTN","MAGDQR04",309,0)
 D:DBTYPE="NEW"
"RTN","MAGDQR04",310,0)
 . S V=$P($G(^MAGV(2005.63,SERIX,2)),"^",4)
"RTN","MAGDQR04",311,0)
 . S:V'="" TAG("0032,1020")=V
"RTN","MAGDQR04",312,0)
 ;
"RTN","MAGDQR04",313,0)
 S N=1,T="" F  S T=$O(TAG(T)) Q:T=""  D
"RTN","MAGDQR04",314,0)
 . S V=""
"RTN","MAGDQR04",315,0)
 . S:$D(TAG(T))#2 V=TAG(T)
"RTN","MAGDQR04",316,0)
 . S I="" F  S I=$O(TAG(T,I)) Q:I=""  S:V'="" V=V_"\" S V=V_TAG(T,I)
"RTN","MAGDQR04",317,0)
 . S:V'="" N=N+1,OUT(N)=T_"^"_V
"RTN","MAGDQR04",318,0)
 . Q
"RTN","MAGDQR04",319,0)
 ;
"RTN","MAGDQR04",320,0)
 S OUT(1)=(N-1)_" data fields returned."
"RTN","MAGDQR04",321,0)
 Q
"RTN","MAGDQR04",322,0)
 ;
"RTN","MAGDQR04",323,0)
CLEAN(OUT) ; RPC = MAG DICOM QUERY CLEANUP
"RTN","MAGDQR04",324,0)
 N D0,H,N,STAMP
"RTN","MAGDQR04",325,0)
 L +^MAGDQR(2006.5732,0):1E6 ; Background task MUST wait
"RTN","MAGDQR04",326,0)
 S D0=0 F  S D0=$O(^MAGDQR(2006.5732,D0)) Q:'D0  D
"RTN","MAGDQR04",327,0)
 . S X=$G(^MAGDQR(2006.5732,D0,0)),STAMP=$P(X,"^",3)
"RTN","MAGDQR04",328,0)
 . Q:$$FMDIFF^XLFDT(DT,STAMP,1)<5
"RTN","MAGDQR04",329,0)
 . K ^MAGDQR(2006.5732,D0)
"RTN","MAGDQR04",330,0)
 . K ^MAGDQR(2006.5732,"B",D0)
"RTN","MAGDQR04",331,0)
 . Q
"RTN","MAGDQR04",332,0)
 S (D0,N,H)=0 F  S D0=$O(^MAGDQR(2006.5732,D0)) Q:'D0  S N=N+1,H=D0
"RTN","MAGDQR04",333,0)
 S X="DICOM QUERY RETRIEVE RESULT^2006.5732^"_H_"^"_N
"RTN","MAGDQR04",334,0)
 S ^MAGDQR(2006.5732,0)=X
"RTN","MAGDQR04",335,0)
 L -^MAGDQR(2006.5732,0)
"RTN","MAGDQR04",336,0)
 Q
"RTN","MAGDQR04",337,0)
 ;
"RTN","MAGDQR05")
0^11^B49847313
"RTN","MAGDQR05",1,0)
MAGDQR05 ;WOIFO/EdM,MLH,DAC - Imaging RPCs for Query/Retrieve ; 19 Jul 2012 1:30 PM
"RTN","MAGDQR05",2,0)
 ;;3.0;IMAGING;**54,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR05",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR05",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR05",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR05",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR05",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR05",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR05",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR05",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR05",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR05",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR05",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR05",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR05",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR05",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR05",17,0)
 ;;
"RTN","MAGDQR05",18,0)
 Q
"RTN","MAGDQR05",19,0)
 ;
"RTN","MAGDQR05",20,0)
TIM(REQ,FD,LD,TIM,ANY,SID) ; Overflow from MAGDQR02
"RTN","MAGDQR05",21,0)
 N D0,D1,D2,I,PAT,SDT,V,X,STDATE,STTIME,STUDYIX,STUTYP,STUDTA,DAT0,DATF,TIM0,TIMF,T,P
"RTN","MAGDQR05",22,0)
 N PROCIX,PATREFIX,PATREFDTA,SERIX,SOPIX
"RTN","MAGDQR05",23,0)
 D:$D(REQ("0008,0020"))>9
"RTN","MAGDQR05",24,0)
 . ; search old structure for studies by date and time
"RTN","MAGDQR05",25,0)
 . ; The references below to ^RADPT are permitted according to the
"RTN","MAGDQR05",26,0)
 . ; existing Integration Agreement # 1172
"RTN","MAGDQR05",27,0)
 . S V="" F  S V=$O(^RADPT("ADC",V)) Q:V=""  D
"RTN","MAGDQR05",28,0)
 . . S D0="" F  S D0=$O(^RADPT("ADC",V,D0)) Q:D0=""  D
"RTN","MAGDQR05",29,0)
 . . . S D1="" F  S D1=$O(^RADPT("ADC",V,D0,D1)) Q:D1=""  D
"RTN","MAGDQR05",30,0)
 . . . . S SDT=9999999.9999-D1 Q:SDT<FD  Q:SDT>LD
"RTN","MAGDQR05",31,0)
 . . . . S D2="" F  S D2=$O(^RADPT("ADC",V,D0,D1,D2)) Q:D2=""  D
"RTN","MAGDQR05",32,0)
 . . . . . Q:'$P($G(^RADPT(D0,"DT",D1,"P",D2,0)),"^",17)
"RTN","MAGDQR05",33,0)
 . . . . . S ^TMP("MAG",$J,"QR",10,"R^"_D0_"^"_D1_"^"_D2)="",TIM=2
"RTN","MAGDQR05",34,0)
 . . . . . S ANY=1,SID=1
"RTN","MAGDQR05",35,0)
 . . . . . Q
"RTN","MAGDQR05",36,0)
 . . . . Q
"RTN","MAGDQR05",37,0)
 . . . Q
"RTN","MAGDQR05",38,0)
 . . Q
"RTN","MAGDQR05",39,0)
 . S PAT="" F  S PAT=$O(^MAG(2005,"APDTPX",PAT)) Q:PAT=""  D
"RTN","MAGDQR05",40,0)
 . . S D1="" F  S D1=$O(^MAG(2005,"APDTPX",PAT,D1)) Q:D1=""  D
"RTN","MAGDQR05",41,0)
 . . . S SDT=9999999.9999-D1 Q:SDT<FD  Q:SDT>LD
"RTN","MAGDQR05",42,0)
 . . . S D0="" F  S D0=$O(^MAG(2005,"APDTPX",PAT,D1,"CON/PROC",D0)) Q:D0=""  D
"RTN","MAGDQR05",43,0)
 . . . . S X=$G(^MAG(2005,D0,2)),V=""
"RTN","MAGDQR05",44,0)
 . . . . D:$P(X,"^",6)=2006.5839
"RTN","MAGDQR05",45,0)
 . . . . . S V="123^"_$P(X,"^",7)_"^"_D0_"^"_$P(X,"^",7)
"RTN","MAGDQR05",46,0)
 . . . . . Q
"RTN","MAGDQR05",47,0)
 . . . . D:$P(X,"^",6)=8925
"RTN","MAGDQR05",48,0)
 . . . . . N T
"RTN","MAGDQR05",49,0)
 . . . . . S T=$P($G(^TIU(8925,+$P(X,"^",7),14)),"^",5) ; IA# 3268
"RTN","MAGDQR05",50,0)
 . . . . . S T=$S(T[";GMR(123,":"GMRC-"_(+T),1:"") ; Should use FileMan
"RTN","MAGDQR05",51,0)
 . . . . . S V="8925^"_$P(X,"^",7)_"^"_D0_"^"_T
"RTN","MAGDQR05",52,0)
 . . . . . Q
"RTN","MAGDQR05",53,0)
 . . . . S ^TMP("MAG",$J,"QR",10,"C^"_PAT_"^"_V)="",TIM=2
"RTN","MAGDQR05",54,0)
 . . . . S ANY=1,SID=1
"RTN","MAGDQR05",55,0)
 . . . . Q
"RTN","MAGDQR05",56,0)
 . . . Q
"RTN","MAGDQR05",57,0)
 . . Q
"RTN","MAGDQR05",58,0)
 . Q
"RTN","MAGDQR05",59,0)
 ; search new structure for studies by date and time
"RTN","MAGDQR05",60,0)
 S T="0008,0020" ; search by date and time
"RTN","MAGDQR05",61,0)
 D:$D(REQ(T))>9
"RTN","MAGDQR05",62,0)
 . S P=$O(REQ(T,"")) Q:P=""  S (DAT0,DATF)=$G(REQ(T,P)) Q:DAT0=""
"RTN","MAGDQR05",63,0)
 . S:DAT0["-" DATF=$P(DAT0,"-",2),DAT0=$P(DAT0,"-",1)
"RTN","MAGDQR05",64,0)
 . S DAT0=DAT0-17000000,DATF=DATF-17000000
"RTN","MAGDQR05",65,0)
 . S T="0008,0030" D:$D(REQ(T))>9
"RTN","MAGDQR05",66,0)
 . . S P=$O(REQ(T,"")),(TIM0,TIMF)=$G(REQ(T,P)) Q:TIM0=""
"RTN","MAGDQR05",67,0)
 . . S:TIM0["-" TIMF=$P(TIM0,"-",2),TIM0=$P(TIM0,"-",1)
"RTN","MAGDQR05",68,0)
 . . S TIM0=$E(TIM0_"000000",1,6),TIMF=$E(TIMF_"000000",1,6)
"RTN","MAGDQR05",69,0)
 . . Q
"RTN","MAGDQR05",70,0)
 . S STDATE=$O(^MAGV(2005.62,"J",DAT0),-1)
"RTN","MAGDQR05",71,0)
 . F  S STDATE=$O(^MAGV(2005.62,"J",STDATE)) Q:STDATE>DATF  Q:'STDATE  D
"RTN","MAGDQR05",72,0)
 . . S STUDYIX=""
"RTN","MAGDQR05",73,0)
 . . F  S STUDYIX=$O(^MAGV(2005.62,"J",STDATE,STUDYIX)) Q:STUDYIX=""  D
"RTN","MAGDQR05",74,0)
 . . . Q:$P($G(^MAGV(2005.62,STUDYIX,5)),"^",2)="I"  ; study marked inaccessible
"RTN","MAGDQR05",75,0)
 . . . N HIT
"RTN","MAGDQR05",76,0)
 . . . S HIT=1
"RTN","MAGDQR05",77,0)
 . . . D:$D(TIM0)
"RTN","MAGDQR05",78,0)
 . . . . S HIT=0
"RTN","MAGDQR05",79,0)
 . . . . S STTIME=$P($P($G(^MAGV(2005.62,STUDYIX,2)),"^",1),".",2) Q:STTIME=""
"RTN","MAGDQR05",80,0)
 . . . . S STTIME=$E((STTIME\1)_"000000",1,6)
"RTN","MAGDQR05",81,0)
 . . . . I STTIME'<TIM0,STTIME'>TIMF S HIT=1
"RTN","MAGDQR05",82,0)
 . . . . Q
"RTN","MAGDQR05",83,0)
 . . . S:HIT ^TMP("MAG",$J,"QR",30,STUDYIX)=""
"RTN","MAGDQR05",84,0)
 . . . Q
"RTN","MAGDQR05",85,0)
 . . Q
"RTN","MAGDQR05",86,0)
 . Q
"RTN","MAGDQR05",87,0)
 S T="0008,0030" ; search by time alone
"RTN","MAGDQR05",88,0)
 D:$D(REQ(T))>9
"RTN","MAGDQR05",89,0)
 . Q:$D(REQ("0008,0020"))>9  ; already did date & time search
"RTN","MAGDQR05",90,0)
 . S P=$O(REQ(T,"")) Q:P=""  S (TIM0,TIMF)=$G(REQ(T,P)) Q:TIM0=""
"RTN","MAGDQR05",91,0)
 . S:TIM0["-" TIMF=$P(TIM0,"-",2),TIM0=$P(TIM0,"-",1)
"RTN","MAGDQR05",92,0)
 . S TIM0=$E(TIM0_"000000",1,6),TIMF=$E(TIMF_"000000",1,6)
"RTN","MAGDQR05",93,0)
 . S STTIME=$O(^MAGV(2005.62,"K",TIM0),-1)
"RTN","MAGDQR05",94,0)
 . F  S STTIME=$O(^MAGV(2005.62,"K",STTIME)) Q:STTIME>TIMF  Q:'STTIME  D
"RTN","MAGDQR05",95,0)
 . . S STUDYIX=""
"RTN","MAGDQR05",96,0)
 . . F  S STUDYIX=$O(^MAGV(2005.62,"K",STTIME,STUDYIX)) Q:STUDYIX=""  D
"RTN","MAGDQR05",97,0)
 . . . Q:$P($G(^MAGV(2005.62,STUDYIX,5)),"^",2)="I"  ; study marked inaccessible
"RTN","MAGDQR05",98,0)
 . . . S ^TMP("MAG",$J,"QR",30,STUDYIX)=""
"RTN","MAGDQR05",99,0)
 . . . Q
"RTN","MAGDQR05",100,0)
 . . Q
"RTN","MAGDQR05",101,0)
 . Q
"RTN","MAGDQR05",102,0)
 D:$D(^TMP("MAG",$J,"QR",30))
"RTN","MAGDQR05",103,0)
 . S TIM=2,STUDYIX=""
"RTN","MAGDQR05",104,0)
 . F  S STUDYIX=$O(^TMP("MAG",$J,"QR",30,STUDYIX)) Q:'STUDYIX  D
"RTN","MAGDQR05",105,0)
 . . S PROCIX=$P($G(^MAGV(2005.62,STUDYIX,6)),"^",1) Q:'PROCIX
"RTN","MAGDQR05",106,0)
 . . S PATREFIX=$P($G(^MAGV(2005.61,PROCIX,6)),"^",1) Q:'PATREFIX
"RTN","MAGDQR05",107,0)
 . . S PATREFDTA=$G(^MAGV(2005.6,PATREFIX,0)) Q:$P(PATREFDTA,"^",3)'="D"
"RTN","MAGDQR05",108,0)
 . . S PAT=$P(PATREFDTA,"^",1) Q:PAT=""
"RTN","MAGDQR05",109,0)
 . . S ^TMP("MAG",$J,"QR",10,"N^"_PAT_"^"_STUDYIX)=""
"RTN","MAGDQR05",110,0)
 . . S ANY=1,SID=1
"RTN","MAGDQR05",111,0)
 . . Q
"RTN","MAGDQR05",112,0)
 . K ^TMP("MAG",$J,"QR",30)
"RTN","MAGDQR05",113,0)
 . Q
"RTN","MAGDQR05",114,0)
 I TIM=1 D  Q
"RTN","MAGDQR05",115,0)
 . D ERR^MAGDQRUE("No matches for tag 0008,0020 / 0008,0030")
"RTN","MAGDQR05",116,0)
 . D ERRSAV^MAGDQRUE
"RTN","MAGDQR05",117,0)
 . Q
"RTN","MAGDQR05",118,0)
 ;
"RTN","MAGDQR05",119,0)
 Q
"RTN","MAGDQR05",120,0)
 ;
"RTN","MAGDQR05",121,0)
GWINFO(OUT,HOSTNAME,LOCATION,FILES,VER) ; RPC = MAG DICOM STORE GATEWAY INFO
"RTN","MAGDQR05",122,0)
 N D0,X
"RTN","MAGDQR05",123,0)
 I $G(HOSTNAME)="" S OUT="-1,No HostName provided." Q
"RTN","MAGDQR05",124,0)
 I '$G(LOCATION) S OUT="-3,No location provided." Q
"RTN","MAGDQR05",125,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGDQR05",126,0)
 S D0=$O(^MAG(2006.87,"B",HOSTNAME,"")) D:'D0
"RTN","MAGDQR05",127,0)
 . L +^MAG(2006.87,0):1E9 ; Background process MUST wait
"RTN","MAGDQR05",128,0)
 . S X=$G(^MAG(2006.87,0))
"RTN","MAGDQR05",129,0)
 . S $P(X,"^",1,2)="DICOM GATEWAY INFORMATION^2006.87"
"RTN","MAGDQR05",130,0)
 . S D0=$O(^MAG(2006.87," "),-1)+1
"RTN","MAGDQR05",131,0)
 . S $P(X,"^",3)=D0
"RTN","MAGDQR05",132,0)
 . S $P(X,"^",4)=$P(X,"^",4)+1
"RTN","MAGDQR05",133,0)
 . S ^MAG(2006.87,0)=X
"RTN","MAGDQR05",134,0)
 . S ^MAG(2006.87,D0,0)=HOSTNAME
"RTN","MAGDQR05",135,0)
 . S ^MAG(2006.87,"B",HOSTNAME,D0)=""
"RTN","MAGDQR05",136,0)
 . L -^MAG(2006.87,0)
"RTN","MAGDQR05",137,0)
 . Q
"RTN","MAGDQR05",138,0)
 S ^MAG(2006.87,D0,0)=HOSTNAME_"^"_"^"_(+LOCATION)
"RTN","MAGDQR05",139,0)
 D GWLOG(.FILES,"INSTRUMENT",D0,1)
"RTN","MAGDQR05",140,0)
 D GWLOG(.FILES,"MODALITY",D0,2)
"RTN","MAGDQR05",141,0)
 D GWLOG(.FILES,"PORTLIST",D0,3)
"RTN","MAGDQR05",142,0)
 D GWLOG(.FILES,"SCU_LIST",D0,4)
"RTN","MAGDQR05",143,0)
 D GWLOG(.FILES,"WORKLIST",D0,5)
"RTN","MAGDQR05",144,0)
 D GWLOG(.FILES,"CT_PARAM",D0,6)
"RTN","MAGDQR05",145,0)
 D GWLOG(.VER,"GW",D0,100)
"RTN","MAGDQR05",146,0)
 D GWLOG(.VER,"MAG_DCMVIEW",D0,101)
"RTN","MAGDQR05",147,0)
 D GWLOG(.VER,"MAG_MAKEABS",D0,102)
"RTN","MAGDQR05",148,0)
 D GWLOG(.VER,"MAG_CSTORE",D0,103)
"RTN","MAGDQR05",149,0)
 D GWLOG(.VER,"MAG_RECON",D0,104)
"RTN","MAGDQR05",150,0)
 D GWLOG(.VER,"MAG_DCMTOTGA",D0,105)
"RTN","MAGDQR05",151,0)
 S OUT=0
"RTN","MAGDQR05",152,0)
 Q
"RTN","MAGDQR05",153,0)
 ;
"RTN","MAGDQR05",154,0)
GWLOG(ARRAY,NAME,D0,F) ;
"RTN","MAGDQR05",155,0)
 S:$D(ARRAY(NAME)) ^MAG(2006.87,D0,F)=ARRAY(NAME)
"RTN","MAGDQR05",156,0)
 Q
"RTN","MAGDQR05",157,0)
 ;
"RTN","MAGDQR05",158,0)
GETINFO(OUT,HOSTNAME) ; RPC = MAG DICOM GET GATEWAY INFO
"RTN","MAGDQR05",159,0)
 N D0,N,X
"RTN","MAGDQR05",160,0)
 I $G(HOSTNAME)="" S OUT="-1,No HostName provided." Q
"RTN","MAGDQR05",161,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGDQR05",162,0)
 S D0=$O(^MAG(2006.87,"B",HOSTNAME,""))
"RTN","MAGDQR05",163,0)
 I 'D0 S OUT(1)="-2,Cannot find info for """_HOSTNAME_"""." Q
"RTN","MAGDQR05",164,0)
 S N=1
"RTN","MAGDQR05",165,0)
 S X=$G(^MAG(2006.87,D0,0))
"RTN","MAGDQR05",166,0)
 S:$P(X,"^",3) N=N+1,OUT(N)="Loc="_$$STA^XUAF4($P(X,"^",3))
"RTN","MAGDQR05",167,0)
 D GWGET($G(^MAG(2006.87,D0,1)),"In")
"RTN","MAGDQR05",168,0)
 D GWGET($G(^MAG(2006.87,D0,2)),"Mo")
"RTN","MAGDQR05",169,0)
 D GWGET($G(^MAG(2006.87,D0,3)),"PL")
"RTN","MAGDQR05",170,0)
 D GWGET($G(^MAG(2006.87,D0,4)),"SL")
"RTN","MAGDQR05",171,0)
 D GWGET($G(^MAG(2006.87,D0,5)),"WL")
"RTN","MAGDQR05",172,0)
 D GWGET($G(^MAG(2006.87,D0,6)),"CP")
"RTN","MAGDQR05",173,0)
 S X=$G(^MAG(2006.87,D0,100)) S:X'="" N=N+1,OUT(N)="Ver="_X
"RTN","MAGDQR05",174,0)
 D GWGET($G(^MAG(2006.87,D0,101)),"Vw")
"RTN","MAGDQR05",175,0)
 D GWGET($G(^MAG(2006.87,D0,102)),"Ab")
"RTN","MAGDQR05",176,0)
 D GWGET($G(^MAG(2006.87,D0,103)),"CS")
"RTN","MAGDQR05",177,0)
 D GWGET($G(^MAG(2006.87,D0,104)),"Rc")
"RTN","MAGDQR05",178,0)
 D GWGET($G(^MAG(2006.87,D0,105)),"DT")
"RTN","MAGDQR05",179,0)
 S OUT(1)=N
"RTN","MAGDQR05",180,0)
 Q
"RTN","MAGDQR05",181,0)
 ;
"RTN","MAGDQR05",182,0)
GWGET(X,K) N T
"RTN","MAGDQR05",183,0)
 Q:X=""
"RTN","MAGDQR05",184,0)
 S:$P(X,"^",2)'="" N=N+1,OUT(N)=K_"_p="_$P(X,"^",2)
"RTN","MAGDQR05",185,0)
 S T=$P(X,"^",1) Q:'T
"RTN","MAGDQR05",186,0)
 S N=N+1,OUT(N)=K_"_s="_$$STAMP(T)
"RTN","MAGDQR05",187,0)
 Q
"RTN","MAGDQR05",188,0)
 ;
"RTN","MAGDQR05",189,0)
STAMP(T) N O,V
"RTN","MAGDQR05",190,0)
 S V=(T\1#100)_"-"_$P("JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"," ",T\100#100)_"-"_(T\10000+1700)
"RTN","MAGDQR05",191,0)
 S O=$E($P(T,".",2)_"000000",1,6),V=V_" "_$E(O,1,2)_":"_$E(O,3,4)_":"_$E(O,5,6)
"RTN","MAGDQR05",192,0)
 Q V
"RTN","MAGDQR05",193,0)
 ;
"RTN","MAGDQR06")
0^12^B59258858
"RTN","MAGDQR06",1,0)
MAGDQR06 ;WOIFO/EdM,MLH - Imaging RPCs for Query/Retrieve ; 24 Feb 2012 10:32 PM
"RTN","MAGDQR06",2,0)
 ;;3.0;IMAGING;**54,66,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR06",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR06",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR06",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR06",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR06",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR06",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR06",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR06",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR06",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR06",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR06",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR06",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR06",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR06",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR06",17,0)
 ;;
"RTN","MAGDQR06",18,0)
 Q
"RTN","MAGDQR06",19,0)
 ;
"RTN","MAGDQR06",20,0)
Q0080050(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R  Accession Number
"RTN","MAGDQR06",21,0)
 ; sensitive/employee?
"RTN","MAGDQR06",22,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR06",23,0)
 . N WRKDT
"RTN","MAGDQR06",24,0)
 . S WRKDT=$$DT^XLFDT
"RTN","MAGDQR06",25,0)
 . S V(T)=$E(WRKDT,4,7)_$E(WRKDT,2,3)_"-0000"
"RTN","MAGDQR06",26,0)
 . Q
"RTN","MAGDQR06",27,0)
 ; no
"RTN","MAGDQR06",28,0)
 S V(T)=$G(^TMP("MAG",$J,"ACCESSION"))
"RTN","MAGDQR06",29,0)
 Q
"RTN","MAGDQR06",30,0)
 ;
"RTN","MAGDQR06",31,0)
Q0200010(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;R  Study ID
"RTN","MAGDQR06",32,0)
 ; sensitive/employee?
"RTN","MAGDQR06",33,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR06",34,0)
 . N I S I=$O(REQ(T,"")) S V(T)=$S(I:$S($G(REQ(T,I))]"":REQ(T,I),1:"0"),1:"0")
"RTN","MAGDQR06",35,0)
 . Q
"RTN","MAGDQR06",36,0)
 ; no
"RTN","MAGDQR06",37,0)
 S V(T)=$G(^TMP("MAG",$J,"ACCESSION"))
"RTN","MAGDQR06",38,0)
 S V(T)=$P(V(T),"-",$L(V(T),"-")) ; case # or consult # only
"RTN","MAGDQR06",39,0)
 Q
"RTN","MAGDQR06",40,0)
 ;
"RTN","MAGDQR06",41,0)
Q0080062(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  SOP Classes in Study
"RTN","MAGDQR06",42,0)
 ; --- probably not supported --- ?
"RTN","MAGDQR06",43,0)
 ; ? ? ?
"RTN","MAGDQR06",44,0)
 ;;;S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",45,0)
 Q
"RTN","MAGDQR06",46,0)
 ;
"RTN","MAGDQR06",47,0)
Q0080090(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Referring Physician's Name
"RTN","MAGDQR06",48,0)
 N IMGTYPE
"RTN","MAGDQR06",49,0)
 ; sensitive/employee?
"RTN","MAGDQR06",50,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR06",51,0)
 . S V(T)="IMAGPROVIDER,SENSITIVE"
"RTN","MAGDQR06",52,0)
 . Q
"RTN","MAGDQR06",53,0)
 ; no
"RTN","MAGDQR06",54,0)
 S IMGTYPE=TYPE
"RTN","MAGDQR06",55,0)
 D:IMGTYPE="N" FINDTYP(.IMGTYPE,MAGDFN,MAGIEN,.MAGRORD,.MAGINTERP) ; will reset IMGTYPE if successful
"RTN","MAGDQR06",56,0)
 D:IMGTYPE="R"
"RTN","MAGDQR06",57,0)
 . S X=$P($G(^RADPT(MAGDFN,"DT",MAGRORD,"P",MAGINTERP,0)),"^",14) ; IA # 1172
"RTN","MAGDQR06",58,0)
 . S V(T)=$$GET1^DIQ(200,(+X)_",",.01)
"RTN","MAGDQR06",59,0)
 . Q
"RTN","MAGDQR06",60,0)
 D:IMGTYPE="C"
"RTN","MAGDQR06",61,0)
 . N G0
"RTN","MAGDQR06",62,0)
 . I MAGIEN="" S V(T)="" Q
"RTN","MAGDQR06",63,0)
 . S G0=$$GMRC($G(^TMP("MAG",$J,"ACCESSION")),MAGIEN) I 'G0 S V(T)="" Q
"RTN","MAGDQR06",64,0)
 . S V(T)=$$GET1^DIQ(123,G0,10,"E") ; IA # 4110
"RTN","MAGDQR06",65,0)
 . Q
"RTN","MAGDQR06",66,0)
 ; MLH: do not match per WP 3/25/09
"RTN","MAGDQR06",67,0)
 ;;;S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",68,0)
 Q
"RTN","MAGDQR06",69,0)
 ;
"RTN","MAGDQR06",70,0)
Q0081030(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Study Description
"RTN","MAGDQR06",71,0)
 ; sensitive/employee?
"RTN","MAGDQR06",72,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR06",73,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR06",74,0)
 . Q
"RTN","MAGDQR06",75,0)
 ; no
"RTN","MAGDQR06",76,0)
 S V(T)=$$STYDESC2^MAGUE001(TYPE,MAGIEN)
"RTN","MAGDQR06",77,0)
 S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",78,0)
 Q
"RTN","MAGDQR06",79,0)
 ;
"RTN","MAGDQR06",80,0)
Q0080100(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  >Code Value
"RTN","MAGDQR06",81,0)
 N IMGTYPE
"RTN","MAGDQR06",82,0)
 S IMGTYPE=TYPE
"RTN","MAGDQR06",83,0)
 D:IMGTYPE="N" FINDTYP(.IMGTYPE,MAGDFN,MAGIEN,.MAGRORD,.MAGINTERP) ; will reset IMGTYPE if successful
"RTN","MAGDQR06",84,0)
 D:IMGTYPE="R"
"RTN","MAGDQR06",85,0)
 . S X=$P($G(^RADPT(MAGDFN,"DT",MAGRORD,"P",MAGINTERP,0)),"^",2) ; IA # 1172
"RTN","MAGDQR06",86,0)
 . S X=$P($G(^RAMIS(71,+X,0)),"^",9) ; IA # 1174
"RTN","MAGDQR06",87,0)
 . S X=$$CPT^ICPTCOD(+X) ; IA # 1995, supported reference
"RTN","MAGDQR06",88,0)
 . S V("0008,1030",1,T)=$P(X,"^",2)
"RTN","MAGDQR06",89,0)
 . Q
"RTN","MAGDQR06",90,0)
 D:IMGTYPE="C"
"RTN","MAGDQR06",91,0)
 . N G0
"RTN","MAGDQR06",92,0)
 . I MAGIEN="" S V(T)="" Q
"RTN","MAGDQR06",93,0)
 . S G0=$$GMRC($G(^TMP("MAG",$J,"ACCESSION")),MAGIEN) I 'G0 S V(T)="" Q
"RTN","MAGDQR06",94,0)
 . S V(T)=$$GET1^DIQ(123,G0,4,"I") ; IA # 4110
"RTN","MAGDQR06",95,0)
 . Q
"RTN","MAGDQR06",96,0)
 Q
"RTN","MAGDQR06",97,0)
 ;
"RTN","MAGDQR06",98,0)
Q0080104(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  >Code Meaning
"RTN","MAGDQR06",99,0)
 N IMGTYPE
"RTN","MAGDQR06",100,0)
 S IMGTYPE=TYPE
"RTN","MAGDQR06",101,0)
 D:IMGTYPE="N" FINDTYP(.IMGTYPE,MAGDFN,MAGIEN,.MAGRORD,.MAGINTERP) ; will reset IMGTYPE if successful
"RTN","MAGDQR06",102,0)
 D:IMGTYPE="R"
"RTN","MAGDQR06",103,0)
 . N X
"RTN","MAGDQR06",104,0)
 . S X=$P($G(^RADPT(MAGDFN,"DT",MAGRORD,"P",MAGINTERP,0)),"^",2) ; IA # 1172
"RTN","MAGDQR06",105,0)
 . S X=$P($G(^RAMIS(71,+X,0)),"^",9) ; IA # 1174
"RTN","MAGDQR06",106,0)
 . S X=$$CPT^ICPTCOD(+X) ; IA # 1995, supported reference
"RTN","MAGDQR06",107,0)
 . S V("0008,1030",1,T)=$P(X,"^",3)
"RTN","MAGDQR06",108,0)
 . Q
"RTN","MAGDQR06",109,0)
 D:IMGTYPE="C"
"RTN","MAGDQR06",110,0)
 . N G0
"RTN","MAGDQR06",111,0)
 . I MAGIEN="" S V(T)="" Q
"RTN","MAGDQR06",112,0)
 . S G0=$$GMRC($G(^TMP("MAG",$J,"ACCESSION")),MAGIEN) I 'G0 S V(T)="" Q
"RTN","MAGDQR06",113,0)
 . S V(T)=$$GET1^DIQ(123,G0,4,"E") ; IA # 4110
"RTN","MAGDQR06",114,0)
 . Q
"RTN","MAGDQR06",115,0)
 Q
"RTN","MAGDQR06",116,0)
 ;
"RTN","MAGDQR06",117,0)
Q0081060(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Name of Physician(s) Reading Study
"RTN","MAGDQR06",118,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR06",119,0)
 . S V(T)="IMAGPROVIDER,SENSITIVE"
"RTN","MAGDQR06",120,0)
 . Q
"RTN","MAGDQR06",121,0)
 ; no
"RTN","MAGDQR06",122,0)
 N IMGTYPE
"RTN","MAGDQR06",123,0)
 S IMGTYPE=TYPE
"RTN","MAGDQR06",124,0)
 D:IMGTYPE="N" FINDTYP(.IMGTYPE,MAGDFN,MAGIEN,.MAGRORD,.MAGINTERP) ; will reset IMGTYPE if successful
"RTN","MAGDQR06",125,0)
 D:IMGTYPE="R"
"RTN","MAGDQR06",126,0)
 . N X
"RTN","MAGDQR06",127,0)
 . S X=$P($G(^RADPT(MAGDFN,"DT",MAGRORD,"P",MAGINTERP,0)),"^",17) ; IA # 1172
"RTN","MAGDQR06",128,0)
 . S X=$P($G(^RARPT(+X,0)),"^",9) ; IA # 1171
"RTN","MAGDQR06",129,0)
 . S V(T)=$$GET1^DIQ(200,(+X)_",",.01)
"RTN","MAGDQR06",130,0)
 . Q
"RTN","MAGDQR06",131,0)
 Q:IMGTYPE="C"
"RTN","MAGDQR06",132,0)
 ; MLH:  do not match per WP 3/25/09
"RTN","MAGDQR06",133,0)
 ;;;S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",134,0)
 Q
"RTN","MAGDQR06",135,0)
 ;
"RTN","MAGDQR06",136,0)
Q0081080(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Admitting Diagnosis Description
"RTN","MAGDQR06",137,0)
 ; ? ? ?
"RTN","MAGDQR06",138,0)
 ;;;S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",139,0)
 Q
"RTN","MAGDQR06",140,0)
 ;
"RTN","MAGDQR06",141,0)
Q01021B0(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Additional Patient History
"RTN","MAGDQR06",142,0)
 ; sensitive/employee?
"RTN","MAGDQR06",143,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR06",144,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR06",145,0)
 . Q
"RTN","MAGDQR06",146,0)
 ; no
"RTN","MAGDQR06",147,0)
 N D1,I,T0,X,IMGTYPE
"RTN","MAGDQR06",148,0)
 N IMGTYPE
"RTN","MAGDQR06",149,0)
 S IMGTYPE=TYPE
"RTN","MAGDQR06",150,0)
 D:IMGTYPE="N" FINDTYP(.IMGTYPE,MAGDFN,MAGIEN,.MAGRORD,.MAGINTERP) ; will reset IMGTYPE if successful
"RTN","MAGDQR06",151,0)
 Q:IMGTYPE="R"
"RTN","MAGDQR06",152,0)
 D:IMGTYPE="C"
"RTN","MAGDQR06",153,0)
 . S V(T)="",TIUIX=$$TIUIX(IMGTYPE,MAGIEN)
"RTN","MAGDQR06",154,0)
 . D:TIUIX
"RTN","MAGDQR06",155,0)
 . . S X=$P($G(^TIU(8925,TIUIX,15)),"^",2) ; Signed By field
"RTN","MAGDQR06",156,0)
 . . S:X X=$$GET1^DIQ(200,(+X)_",",.01)
"RTN","MAGDQR06",157,0)
 . . S V(T)=X
"RTN","MAGDQR06",158,0)
 . . Q
"RTN","MAGDQR06",159,0)
 . Q
"RTN","MAGDQR06",160,0)
 S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",161,0)
 Q
"RTN","MAGDQR06",162,0)
 ;
"RTN","MAGDQR06",163,0)
Q0104000(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Patient Comments
"RTN","MAGDQR06",164,0)
 ; ? ? ?
"RTN","MAGDQR06",165,0)
 ; (there is a modality that passes the accession number in this field)
"RTN","MAGDQR06",166,0)
 ;;;S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",167,0)
 Q
"RTN","MAGDQR06",168,0)
 ;
"RTN","MAGDQR06",169,0)
U008010C(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Interpretation Author
"RTN","MAGDQR06",170,0)
 N X,IMGTYPE
"RTN","MAGDQR06",171,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR06",172,0)
 . S V(T)="IMAGPROVIDER,SENSITIVE"
"RTN","MAGDQR06",173,0)
 . Q
"RTN","MAGDQR06",174,0)
 ; no
"RTN","MAGDQR06",175,0)
 N IMGTYPE
"RTN","MAGDQR06",176,0)
 S IMGTYPE=TYPE
"RTN","MAGDQR06",177,0)
 D:IMGTYPE="N" FINDTYP(.IMGTYPE,MAGDFN,MAGIEN,.MAGRORD,.MAGINTERP) ; will reset IMGTYPE if successful
"RTN","MAGDQR06",178,0)
 D:IMGTYPE="R"
"RTN","MAGDQR06",179,0)
 . S X=+$P($G(^RADPT(MAGDFN,"DT",MAGRORD,"P",MAGINTERP,0)),"^",12) ; IA # 1172
"RTN","MAGDQR06",180,0)
 . S V(T)=$$GET1^DIQ(200,(+X)_",",.01)
"RTN","MAGDQR06",181,0)
 . Q
"RTN","MAGDQR06",182,0)
 D:IMGTYPE="C"
"RTN","MAGDQR06",183,0)
 . N TIUIX
"RTN","MAGDQR06",184,0)
 . S V(T)="",TIUIX=$$TIUIX(IMGTYPE,MAGIEN)
"RTN","MAGDQR06",185,0)
 . D:TIUIX
"RTN","MAGDQR06",186,0)
 . . S X=$P($G(^TIU(8925,TIUIX,15)),"^",2) ; Signed By field
"RTN","MAGDQR06",187,0)
 . . S:X X=$$GET1^DIQ(200,(+X)_",",.01)
"RTN","MAGDQR06",188,0)
 . . S V(T)=X
"RTN","MAGDQR06",189,0)
 . . Q
"RTN","MAGDQR06",190,0)
 . Q
"RTN","MAGDQR06",191,0)
 ; MLH:  do not match per WP 3/25/09
"RTN","MAGDQR06",192,0)
 ;;;S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR06",193,0)
 Q
"RTN","MAGDQR06",194,0)
 ;
"RTN","MAGDQR06",195,0)
GMRC(ACCNUM,IMAGE) ; Return consult number for image
"RTN","MAGDQR06",196,0)
 N X
"RTN","MAGDQR06",197,0)
 D  ; perform appropriate lookup for old / new database structure
"RTN","MAGDQR06",198,0)
 . N G0,T0
"RTN","MAGDQR06",199,0)
 . S G0=+$TR($G(ACCNUM),"GMRCgmrc-") I G0 S X=G0 Q
"RTN","MAGDQR06",200,0)
 . S TIUIX=$$TIUIX(TYPE,IMAGE) I 'TIUIX S X=0 Q
"RTN","MAGDQR06",201,0)
 . S X=$P($G(^TIU(8925,TIUIX,14)),"^",5) I X'[";GMR(123," S X=0 Q
"RTN","MAGDQR06",202,0)
 . S X=0 ; unresolvable IEN
"RTN","MAGDQR06",203,0)
 . Q
"RTN","MAGDQR06",204,0)
 Q +X
"RTN","MAGDQR06",205,0)
 ;
"RTN","MAGDQR06",206,0)
TIUIX(TYPE,STUDYIX) ; FUNCTION - find the TIU note index corresponding to a study's procedure
"RTN","MAGDQR06",207,0)
 ; perform appropriate lookup for old / new database structure
"RTN","MAGDQR06",208,0)
 D:TYPE'="N"  ; old structure
"RTN","MAGDQR06",209,0)
 . N X
"RTN","MAGDQR06",210,0)
 . S X=$G(^MAG(2005,STUDYIX,2))
"RTN","MAGDQR06",211,0)
 . S:$P(X,"^",6)=8925 TIUIX=+$P(X,"^",7)
"RTN","MAGDQR06",212,0)
 . Q
"RTN","MAGDQR06",213,0)
 D:TYPE="N"  ; new structure
"RTN","MAGDQR06",214,0)
 . N PROCIX
"RTN","MAGDQR06",215,0)
 . S PROCIX=$P($G(^MAGV(2005.62,STUDYIX,6)),"^",1) Q:'PROCIX
"RTN","MAGDQR06",216,0)
 . S:$P($G(^MAGV(2005.61,PROCIX,0)),"^",3)="TIU" TIUIX=$P(^(0),"^",1)
"RTN","MAGDQR06",217,0)
 . Q
"RTN","MAGDQR06",218,0)
 Q $G(TIUIX)
"RTN","MAGDQR06",219,0)
 ;
"RTN","MAGDQR06",220,0)
FINDTYP(IMGTYPE,MAGDFN,MAGIEN,MAGRORD,MAGINTERP) ; find type of image on new DB
"RTN","MAGDQR06",221,0)
 ; if found, will reset IMGTYPE for further processing
"RTN","MAGDQR06",222,0)
 N PROCIX,PROCREC,PROCTYP,PROCIDNT
"RTN","MAGDQR06",223,0)
 S PROCIX=$$PROCIX^MAGUE005(MAGIEN) Q:'PROCIX
"RTN","MAGDQR06",224,0)
 S PROCREC=$G(^MAGV(2005.61,PROCIX,0)) Q:PROCREC=""
"RTN","MAGDQR06",225,0)
 S PROCTYP=$P(PROCREC,"^",3),PROCIDNT=$P(PROCREC,"^",1)
"RTN","MAGDQR06",226,0)
 I PROCTYP="RAD" D  Q
"RTN","MAGDQR06",227,0)
 . N ACCARY,I
"RTN","MAGDQR06",228,0)
 . S I=$$ACCFIND^RAAPI(PROCIDNT,.ACCARY)
"RTN","MAGDQR06",229,0)
 . S I=""
"RTN","MAGDQR06",230,0)
 . F  S I=$O(ACCARY(I)) Q:'I  I $P(ACCARY(I),"^",1)=MAGDFN Q
"RTN","MAGDQR06",231,0)
 . I I S MAGRORD=$P(ACCARY(I),"^",2),MAGINTERP=$P(ACCARY(I),"^",3)
"RTN","MAGDQR06",232,0)
 . S IMGTYPE="R"
"RTN","MAGDQR06",233,0)
 . Q
"RTN","MAGDQR06",234,0)
 I PROCTYP="CON" D  Q
"RTN","MAGDQR06",235,0)
 . S IMGTYPE="C"
"RTN","MAGDQR06",236,0)
 . Q
"RTN","MAGDQR06",237,0)
 Q
"RTN","MAGDQR07")
0^13^B4766521
"RTN","MAGDQR07",1,0)
MAGDQR07 ;WOIFO/EdM,MLH,BT - Imaging RPCs for Query/Retrieve ; 10 May 2012 11:55 AM
"RTN","MAGDQR07",2,0)
 ;;3.0;IMAGING;**54,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR07",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR07",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR07",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR07",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR07",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR07",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR07",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR07",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR07",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR07",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR07",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR07",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR07",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR07",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR07",17,0)
 ;;
"RTN","MAGDQR07",18,0)
 Q
"RTN","MAGDQR07",19,0)
 ; -- overflow from MAGDQR02
"RTN","MAGDQR07",20,0)
 ;
"RTN","MAGDQR07",21,0)
ACCNUM(REQ,T,ACC,ANY) ; TAG = 0008,0050  R  Accession Number
"RTN","MAGDQR07",22,0)
 N P
"RTN","MAGDQR07",23,0)
 S P="" F  S P=$O(REQ(T,P)) Q:(P="")  D:(REQ(T,P)'="")&((REQ(T,P))'="GMRC-")
"RTN","MAGDQR07",24,0)
 . S ANY=1
"RTN","MAGDQR07",25,0)
 . D ACCNEW^MAGDQR71(.REQ,T,P,.ACC) ; first look in the new database structure
"RTN","MAGDQR07",26,0)
 . D ACCRAD^MAGDQR72(.REQ,T,P,.ACC) ; then look for old radiology images
"RTN","MAGDQR07",27,0)
 . D ACCCON^MAGDQR73(.REQ,T,P,.ACC) ; finally look for old consult images
"RTN","MAGDQR07",28,0)
 . Q
"RTN","MAGDQR07",29,0)
 Q
"RTN","MAGDQR08")
0^14^B58325682
"RTN","MAGDQR08",1,0)
MAGDQR08 ;WOIFO/EdM,MLH,BT - Cross-References for Query/Retrieve ; 07 Aug 2012 4:07 PM
"RTN","MAGDQR08",2,0)
 ;;3.0;IMAGING;**54,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR08",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR08",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR08",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR08",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR08",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR08",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR08",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR08",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR08",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR08",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR08",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR08",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR08",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR08",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR08",17,0)
 ;;
"RTN","MAGDQR08",18,0)
 Q
"RTN","MAGDQR08",19,0)
 ;
"RTN","MAGDQR08",20,0)
UIDS(REQ,T,UID,PRMUID,ANY,OK,UIDS) ; Overflow from MAGDQR02
"RTN","MAGDQR08",21,0)
 N FATAL,I,P,V,IDX,PAT,PAT0
"RTN","MAGDQR08",22,0)
 S FATAL=0
"RTN","MAGDQR08",23,0)
 S PRMUID=$G(PRMUID)
"RTN","MAGDQR08",24,0)
 F I=20:1:23 K ^TMP("MAG",$J,"QR",I)
"RTN","MAGDQR08",25,0)
 S T=$$STUIDTAG^MAGDQR00,(ANY,PAT)=0
"RTN","MAGDQR08",26,0)
 ;
"RTN","MAGDQR08",27,0)
 S P=""
"RTN","MAGDQR08",28,0)
 F  S P=$O(REQ(T,P)) Q:P=""  D:REQ(T,P)'=""
"RTN","MAGDQR08",29,0)
 . S ANY=1 K ^TMP("MAG",$J,"QR",7)
"RTN","MAGDQR08",30,0)
 . ; old DB structure
"RTN","MAGDQR08",31,0)
 . S I=$$MATCHD^MAGDQR03(REQ(T,P),"^MAG(2005,""P"",LOOP)","^TMP(""MAG"",$J,""QR"",7,LOOP)")
"RTN","MAGDQR08",32,0)
 . S V=""
"RTN","MAGDQR08",33,0)
 . F  S V=$O(^TMP("MAG",$J,"QR",7,V)) Q:V=""  D
"RTN","MAGDQR08",34,0)
 . . S PAT=""
"RTN","MAGDQR08",35,0)
 . . S I=""
"RTN","MAGDQR08",36,0)
 . . F  S I=$O(^MAG(2005,"P",V,I)) Q:I=""  D
"RTN","MAGDQR08",37,0)
 . . . N C,X
"RTN","MAGDQR08",38,0)
 . . . ; If this image has a parent,
"RTN","MAGDQR08",39,0)
 . . . ; its UID is an image UID and not a study UID
"RTN","MAGDQR08",40,0)
 . . . S X=$G(^MAG(2005,I,0)),PAT0=$P(X,"^",7)
"RTN","MAGDQR08",41,0)
 . . . S IDX=$G(^MAG(2005,I,2))\2_" "_PAT0
"RTN","MAGDQR08",42,0)
 . . . D:PAT0
"RTN","MAGDQR08",43,0)
 . . . . I PAT="" S PAT=PAT0 Q
"RTN","MAGDQR08",44,0)
 . . . . Q:PRMUID=1
"RTN","MAGDQR08",45,0)
 . . . . S:PAT'=PAT0 PAT=-1 ; Duplicate UID if different patient...
"RTN","MAGDQR08",46,0)
 . . . . Q
"RTN","MAGDQR08",47,0)
 . . . Q:$P(X,"^",10)
"RTN","MAGDQR08",48,0)
 . . . S UID=1,^TMP("MAG",$J,"QR",20,I)=""
"RTN","MAGDQR08",49,0)
 . . . S C=0 F  S C=$O(^MAG(2005,I,1,C)) Q:'C  D
"RTN","MAGDQR08",50,0)
 . . . . S X=+$P($G(^MAG(2005,I,1,C,0)),"^",1)
"RTN","MAGDQR08",51,0)
 . . . . S:X ^TMP("MAG",$J,"QR",21,X)=""
"RTN","MAGDQR08",52,0)
 . . . . Q
"RTN","MAGDQR08",53,0)
 . . . Q
"RTN","MAGDQR08",54,0)
 . . Q
"RTN","MAGDQR08",55,0)
 . ; new DB structure
"RTN","MAGDQR08",56,0)
 . S I=$$MATCHD^MAGDQR03(REQ(T,P),"^MAGV(2005.62,""B"",LOOP)","^TMP(""MAG"",$J,""QR"",27,LOOP)")
"RTN","MAGDQR08",57,0)
 . S V=""
"RTN","MAGDQR08",58,0)
 . F  S V=$O(^TMP("MAG",$J,"QR",27,V)) Q:V=""  D  Q:PAT<0
"RTN","MAGDQR08",59,0)
 . . S PAT=""
"RTN","MAGDQR08",60,0)
 . . S I="" F  S I=$O(^MAGV(2005.62,"B",V,I)) Q:I=""  D  Q:PAT<0
"RTN","MAGDQR08",61,0)
 . . . Q:$P($G(^MAGV(2005.62,I,5)),"^",2)="I"  ; study marked inaccessible
"RTN","MAGDQR08",62,0)
 . . . N PROCIX,PATIX
"RTN","MAGDQR08",63,0)
 . . . S PROCIX=$P($G(^MAGV(2005.62,I,6)),"^",1) Q:'PROCIX
"RTN","MAGDQR08",64,0)
 . . . S PATIX=$P($G(^MAGV(2005.61,PROCIX,6)),"^",1) Q:'PATIX
"RTN","MAGDQR08",65,0)
 . . . S PAT0=$P($G(^MAGV(2005.6,PATIX,0)),"^",1) Q:PAT0=""
"RTN","MAGDQR08",66,0)
 . . . S:PAT="" PAT=PAT0
"RTN","MAGDQR08",67,0)
 . . . I PRMUID'=1,PAT'=PAT0 S PAT=-1 Q  ; duplicate UID if different patient...
"RTN","MAGDQR08",68,0)
 . . . S UID=1,^TMP("MAG",$J,"QR",20,"N"_I)=""
"RTN","MAGDQR08",69,0)
 . . . Q
"RTN","MAGDQR08",70,0)
 . . Q
"RTN","MAGDQR08",71,0)
 . Q
"RTN","MAGDQR08",72,0)
 ;
"RTN","MAGDQR08",73,0)
 D:PAT<0
"RTN","MAGDQR08",74,0)
 . I (PRMUID=2)!(PRMUID=3) S PRMUID(T)="" Q
"RTN","MAGDQR08",75,0)
 . D ERR^MAGDQRUE("Duplicate Study UID (tag 0020,000D)")
"RTN","MAGDQR08",76,0)
 . S FATAL=1
"RTN","MAGDQR08",77,0)
 . Q
"RTN","MAGDQR08",78,0)
 I FATAL D ERRSAV^MAGDQRUE Q
"RTN","MAGDQR08",79,0)
 ;
"RTN","MAGDQR08",80,0)
 S OK=1,X="Study Series Image",UIDS=""
"RTN","MAGDQR08",81,0)
 F T=23,22 S I="" F  S I=$O(^TMP("MAG",$J,"QR",T,I)) Q:I=""  D  Q:'OK
"RTN","MAGDQR08",82,0)
 . F P=22,21 D
"RTN","MAGDQR08",83,0)
 . . Q:P'<T  Q:'$D(^TMP("MAG",$J,"QR",P))  Q:$D(^TMP("MAG",$J,"QR",P,I))
"RTN","MAGDQR08",84,0)
 . . S OK=0 S:UIDS'="" UIDS=UIDS=UIDS_", "
"RTN","MAGDQR08",85,0)
 . . S UIDS=UIDS_$P(X," ",P)_"/"_$P(X," ",T)
"RTN","MAGDQR08",86,0)
 . . Q
"RTN","MAGDQR08",87,0)
 . Q
"RTN","MAGDQR08",88,0)
 ;
"RTN","MAGDQR08",89,0)
 S T=0 S:OK T=1
"RTN","MAGDQR08",90,0)
 F I=23,22,20 D:T
"RTN","MAGDQR08",91,0)
 . Q:'$D(^TMP("MAG",$J,"QR",I))
"RTN","MAGDQR08",92,0)
 . M ^TMP("MAG",$J,"QR",8)=^TMP("MAG",$J,"QR",I)
"RTN","MAGDQR08",93,0)
 . S T=0
"RTN","MAGDQR08",94,0)
 . Q
"RTN","MAGDQR08",95,0)
 ;
"RTN","MAGDQR08",96,0)
 F I=20:1:23,27 K ^TMP("MAG",$J,"QR",I)
"RTN","MAGDQR08",97,0)
 Q
"RTN","MAGDQR08",98,0)
 ;
"RTN","MAGDQR08",99,0)
PRUNE(RESULT) ; Remove duplicate UIDs based on PRMUID
"RTN","MAGDQR08",100,0)
 ; PRMUID must be defined before calling this procedure
"RTN","MAGDQR08",101,0)
 ; PRMUID : Duplicate UID Handling parameter
"RTN","MAGDQR08",102,0)
 ;    0   : Error if there is duplicate UID (Error Handled outside this procedure)
"RTN","MAGDQR08",103,0)
 ;    1   : All (Duplicate is not an error so this proc won't be called)
"RTN","MAGDQR08",104,0)
 ;    2   : Keep UID with the oldest image saved date, delete the rest (handled in this procedure)
"RTN","MAGDQR08",105,0)
 ;    3   : Keep UID with the latest image saved date, delete the rest (handled in this procedure)
"RTN","MAGDQR08",106,0)
 ;
"RTN","MAGDQR08",107,0)
 I PRMUID'=2,PRMUID'=3 Q
"RTN","MAGDQR08",108,0)
 ;
"RTN","MAGDQR08",109,0)
 ; Based on Study UID and PRMUID, generate KEEP array containing Header Records to keep
"RTN","MAGDQR08",110,0)
 N KEEP
"RTN","MAGDQR08",111,0)
 D KEEPHDR(.KEEP)
"RTN","MAGDQR08",112,0)
 ;
"RTN","MAGDQR08",113,0)
 ; Based on what records to keep, generate HDR containing all headers with remove/keep indicator
"RTN","MAGDQR08",114,0)
 N HDR
"RTN","MAGDQR08",115,0)
 D SAVHDR(.KEEP,.HDR)
"RTN","MAGDQR08",116,0)
 ;
"RTN","MAGDQR08",117,0)
 ; Based on HDR indicators, remove or keep Study UID, return number of records removed
"RTN","MAGDQR08",118,0)
 N KILLCNT
"RTN","MAGDQR08",119,0)
 S KILLCNT=$$REMDUP(.HDR)
"RTN","MAGDQR08",120,0)
 ;
"RTN","MAGDQR08",121,0)
 ; Update the Sub File 2006.57321 Header's highest IEN and # of entries
"RTN","MAGDQR08",122,0)
 D UPDSUBHD(RESULT,KILLCNT)
"RTN","MAGDQR08",123,0)
 Q
"RTN","MAGDQR08",124,0)
 ;
"RTN","MAGDQR08",125,0)
REMDUP(HDR) ; Based on HDR array, remove or keep Study UID records, return number of records removed
"RTN","MAGDQR08",126,0)
 N NEWCNT,KILLCNT
"RTN","MAGDQR08",127,0)
 S NEWCNT=0 ;Result # counter
"RTN","MAGDQR08",128,0)
 S KILLCNT=0 ;Number of killed records
"RTN","MAGDQR08",129,0)
 N HDRRECNO
"RTN","MAGDQR08",130,0)
 S HDRRECNO=0
"RTN","MAGDQR08",131,0)
 ;
"RTN","MAGDQR08",132,0)
 F  S HDRRECNO=$O(HDR(HDRRECNO)) Q:'HDRRECNO  D
"RTN","MAGDQR08",133,0)
 . ; if this header to delete, delete the rest of the group records
"RTN","MAGDQR08",134,0)
 . I HDR(HDRRECNO)=0 S KILLCNT=KILLCNT+$$DELSUB(RESULT,HDRRECNO) Q
"RTN","MAGDQR08",135,0)
 . ; if this header to keep, update the "Result # " with the new counter
"RTN","MAGDQR08",136,0)
 . D UPDHDREC(RESULT,HDRRECNO,.NEWCNT)
"RTN","MAGDQR08",137,0)
 ;
"RTN","MAGDQR08",138,0)
 Q KILLCNT
"RTN","MAGDQR08",139,0)
 ;
"RTN","MAGDQR08",140,0)
SAVHDR(KEEP,HDR) ; Based on what to keep, generate HDR array contains records to keep and to remove
"RTN","MAGDQR08",141,0)
 N STUIDTAG,HDRTAG
"RTN","MAGDQR08",142,0)
 S STUIDTAG=$$STUIDTAG^MAGDQR00
"RTN","MAGDQR08",143,0)
 S HDRTAG=$$HDRTAG^MAGDQR00
"RTN","MAGDQR08",144,0)
 ;
"RTN","MAGDQR08",145,0)
 N STUIDREC,STUDYUID,HDRRECNO
"RTN","MAGDQR08",146,0)
 S STUIDREC=0
"RTN","MAGDQR08",147,0)
 F  S STUIDREC=$O(^MAGDQR(2006.5732,RESULT,1,"B",STUIDTAG,STUIDREC)) Q:'STUIDREC  D
"RTN","MAGDQR08",148,0)
 . S STUDYUID=$P(^MAGDQR(2006.5732,RESULT,1,STUIDREC,0),U,2)
"RTN","MAGDQR08",149,0)
 . S HDRRECNO=$O(^MAGDQR(2006.5732,RESULT,1,"B",HDRTAG,STUIDREC),-1)
"RTN","MAGDQR08",150,0)
 . S HDR(HDRRECNO)=$D(KEEP(STUDYUID,HDRRECNO))
"RTN","MAGDQR08",151,0)
 Q
"RTN","MAGDQR08",152,0)
 ;
"RTN","MAGDQR08",153,0)
KEEPHDR(KEEP) ; Based on PRMUID, get "the oldest/latest date" records to keep
"RTN","MAGDQR08",154,0)
 N ORD
"RTN","MAGDQR08",155,0)
 S ORD=$S(PRMUID=2:1,1:-1)
"RTN","MAGDQR08",156,0)
 ;
"RTN","MAGDQR08",157,0)
 N STUDYUID,IMGSAVDT,HDRRECNO
"RTN","MAGDQR08",158,0)
 S STUDYUID=""
"RTN","MAGDQR08",159,0)
 F  S STUDYUID=$O(^TMP("MAG",$J,"QR",99,STUDYUID)) Q:STUDYUID=""  D
"RTN","MAGDQR08",160,0)
 . S IMGSAVDT=$O(^TMP("MAG",$J,"QR",99,STUDYUID,""),ORD) Q:IMGSAVDT=""
"RTN","MAGDQR08",161,0)
 . S HDRRECNO=$O(^TMP("MAG",$J,"QR",99,STUDYUID,IMGSAVDT,""))
"RTN","MAGDQR08",162,0)
 . S KEEP(STUDYUID,HDRRECNO)=""
"RTN","MAGDQR08",163,0)
 . Q
"RTN","MAGDQR08",164,0)
 Q
"RTN","MAGDQR08",165,0)
 ;
"RTN","MAGDQR08",166,0)
DELSUB(RESULT,HDRRECNO) ; Delete Sub File (2006.57321) record group including indices
"RTN","MAGDQR08",167,0)
 ; The Header Information such as Highest IEN and Counter will be updated at the end (UPDSUBHD)
"RTN","MAGDQR08",168,0)
 N HDRTAG
"RTN","MAGDQR08",169,0)
 S HDRTAG=$$HDRTAG^MAGDQR00
"RTN","MAGDQR08",170,0)
 N DELCNT,RECNO,TAG,QUIT
"RTN","MAGDQR08",171,0)
 S (QUIT,DELCNT)=0
"RTN","MAGDQR08",172,0)
 S RECNO=HDRRECNO-1
"RTN","MAGDQR08",173,0)
 ;
"RTN","MAGDQR08",174,0)
 F  S RECNO=$O(^MAGDQR(2006.5732,RESULT,1,RECNO)) Q:'RECNO  D  Q:QUIT
"RTN","MAGDQR08",175,0)
 . S TAG=$P(^MAGDQR(2006.5732,RESULT,1,RECNO,0),U)
"RTN","MAGDQR08",176,0)
 . I TAG=HDRTAG,RECNO'=HDRRECNO S QUIT=1 Q
"RTN","MAGDQR08",177,0)
 . K ^MAGDQR(2006.5732,RESULT,1,RECNO)
"RTN","MAGDQR08",178,0)
 . K ^MAGDQR(2006.5732,RESULT,1,"B",TAG,RECNO)
"RTN","MAGDQR08",179,0)
 . S DELCNT=DELCNT+1
"RTN","MAGDQR08",180,0)
 ;
"RTN","MAGDQR08",181,0)
 Q DELCNT
"RTN","MAGDQR08",182,0)
 ;
"RTN","MAGDQR08",183,0)
UPDHDREC(RESULT,R1,NEWCNT) ; Update Header Result # record with a new counter
"RTN","MAGDQR08",184,0)
 S NEWCNT=NEWCNT+1
"RTN","MAGDQR08",185,0)
 S TAGVAL="Result # "_NEWCNT
"RTN","MAGDQR08",186,0)
 S ^MAGDQR(2006.5732,RESULT,1,R1,0)=$$HDRTAG^MAGDQR00_U_TAGVAL
"RTN","MAGDQR08",187,0)
 Q
"RTN","MAGDQR08",188,0)
 ;
"RTN","MAGDQR08",189,0)
UPDSUBHD(RESULT,KILLCNT) ; Update the Sub File 2006.57321 Header
"RTN","MAGDQR08",190,0)
 N HDR,LSTIEN,LSTRECNO,CNT
"RTN","MAGDQR08",191,0)
 S HDR=$G(^MAGDQR(2006.5732,RESULT,1,0))
"RTN","MAGDQR08",192,0)
 S LSTIEN=$P(HDR,U,3)
"RTN","MAGDQR08",193,0)
 S LSTRECNO=$O(^MAGDQR(2006.5732,RESULT,1," "),-1)
"RTN","MAGDQR08",194,0)
 S:LSTRECNO<LSTIEN LSTIEN=$O(^MAGDQR(2006.5732,RESULT,1,LSTIEN),-1)
"RTN","MAGDQR08",195,0)
 S CNT=$P(HDR,U,4)-KILLCNT
"RTN","MAGDQR08",196,0)
 S ^MAGDQR(2006.5732,RESULT,1,0)="TAG"_U_"2006.57321"_U_LSTIEN_U_CNT
"RTN","MAGDQR08",197,0)
 Q
"RTN","MAGDQR08",198,0)
 ;
"RTN","MAGDQR08",199,0)
ACCNUM(IMAGE) ; Calculate Accession Number for Image
"RTN","MAGDQR08",200,0)
 N GMRCPTR,PARENT,TIUPTR,X
"RTN","MAGDQR08",201,0)
 S X=$G(^MAG(2005,IMAGE,2)),PARENT=+$P(X,"^",6),TIUPTR=$P(X,"^",7)
"RTN","MAGDQR08",202,0)
 I PARENT'=8925,PARENT'=2006.5839 Q ""
"RTN","MAGDQR08",203,0)
 Q:'TIUPTR ""
"RTN","MAGDQR08",204,0)
 S GMRCPTR=$$GET1^DIQ(8925,TIUPTR,1405,"I") Q:GMRCPTR'[";GMR(123" "" ; IA # 3268
"RTN","MAGDQR08",205,0)
 Q "GMRC-"_(+GMRCPTR)
"RTN","MAGDQR08",206,0)
 ;
"RTN","MAGDQR08",207,0)
PROCNAM(IMAGE) ; Calculate Procedure Name for Image
"RTN","MAGDQR08",208,0)
 N PROCPTR,X
"RTN","MAGDQR08",209,0)
 S X=$G(^MAG(2005,IMAGE,40)),PROCPTR=$P(X,"^",4) Q:'PROCPTR ""
"RTN","MAGDQR08",210,0)
 S X=$G(^MAG(2005.84,PROCPTR,0))
"RTN","MAGDQR08",211,0)
 Q $P(X,"^",1)
"RTN","MAGDQR08",212,0)
 ;
"RTN","MAGDQR08",213,0)
PROCNUM(IMAGE) ; Calculate Procedure Number for Image
"RTN","MAGDQR08",214,0)
 N X
"RTN","MAGDQR08",215,0)
 S X=$G(^MAG(2005,IMAGE,40))
"RTN","MAGDQR08",216,0)
 Q $P(X,"^",4)
"RTN","MAGDQR08",217,0)
 ;
"RTN","MAGDQR08",218,0)
 ;
"RTN","MAGDQR08",219,0)
 ; This routine takes care of two cross-references on the Image File
"RTN","MAGDQR08",220,0)
 ;
"RTN","MAGDQR08",221,0)
 ;    ^MAG(2005,"CONSULT1",accession,image)=""
"RTN","MAGDQR08",222,0)
 ;    ^MAG(2005,"CONSULT2",procedure,accession,image)=""
"RTN","MAGDQR08",223,0)
 ;
"RTN","MAGDQR08",224,0)
 ; DA ---- Image #
"RTN","MAGDQR08",225,0)
 ; KILL -- flag: 0=SET, 1=KILL
"RTN","MAGDQR08",226,0)
 ;
"RTN","MAGDQR08",227,0)
X1(DA,KILL) N GP,PA,T0,X
"RTN","MAGDQR08",228,0)
 S X=$G(^MAG(2005,IMAGE,2)),PA=+$P(X,"^",6),T0=$P(X,"^",7)
"RTN","MAGDQR08",229,0)
 I PA'=8925,PA'=2006.5839 Q
"RTN","MAGDQR08",230,0)
 Q:'T0
"RTN","MAGDQR08",231,0)
 S GP=$$GET1^DIQ(8925,T0,1405,"I") Q:GP'[";GMR(123"
"RTN","MAGDQR08",232,0)
 I KILL K ^MAG(2005,"CONSULT1","GMRC-"_(+GP),IMAGE) Q
"RTN","MAGDQR08",233,0)
 S ^MAG(2005,"CONSULT1","GMRC-"_(+GP),IMAGE)=""
"RTN","MAGDQR08",234,0)
 Q
"RTN","MAGDQR08",235,0)
 ;
"RTN","MAGDQR08",236,0)
X2(IMAGE,KILL) N CO,GP,PA,PR,T0,X
"RTN","MAGDQR08",237,0)
 S X=$G(^MAG(2005,IMAGE,2)),PA=+$P(X,"^",6),T0=$P(X,"^",7)
"RTN","MAGDQR08",238,0)
 I PA'=8925,PA'=2006.5839 Q
"RTN","MAGDQR08",239,0)
 Q:'T0
"RTN","MAGDQR08",240,0)
 S X=$G(^MAG(2005,IMAGE,40)),PR=$P(X,"^",4) Q:'PR
"RTN","MAGDQR08",241,0)
 S X=$G(^MAG(2005.84,PR,0)),CO=$P(X,"^",1) Q:CO=""
"RTN","MAGDQR08",242,0)
 S GP=$$GET1^DIQ(8925,T0,1405,"I") Q:GP'[";GMR(123"
"RTN","MAGDQR08",243,0)
 I KILL K ^MAG(2005,"CONSULT2",CO,"GMRC-"_(+GP),IMAGE) Q
"RTN","MAGDQR08",244,0)
 S ^MAG(2005,"CONSULT2",CO,"GMRC-"_(+GP),IMAGE)=""
"RTN","MAGDQR08",245,0)
 Q
"RTN","MAGDQR08",246,0)
 ;
"RTN","MAGDQR08",247,0)
 ; ============================================================
"RTN","MAGDQR08",248,0)
 ; To be included in post-init (through TaskMan?):
"RTN","MAGDQR08",249,0)
 ;
"RTN","MAGDQR08",250,0)
REDO F X="CONSULT1","CONSULT2" K ^MAG(2005,X)
"RTN","MAGDQR08",251,0)
 S DA=0 F  S DA=$O(^MAG(2005,DA)) Q:'DA  D
"RTN","MAGDQR08",252,0)
 . D X1(DA,0)
"RTN","MAGDQR08",253,0)
 . D X2(DA,0)
"RTN","MAGDQR08",254,0)
 . Q
"RTN","MAGDQR08",255,0)
 Q
"RTN","MAGDQR09")
0^15^B39831535
"RTN","MAGDQR09",1,0)
MAGDQR09 ;WOIFO/EdM,MLH,NST,BT - Imaging RPCs for Query/Retrieve ; 15 May 2012 10:46 AM
"RTN","MAGDQR09",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR09",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR09",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR09",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR09",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR09",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR09",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR09",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR09",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR09",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR09",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR09",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR09",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR09",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR09",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR09",17,0)
 ;;
"RTN","MAGDQR09",18,0)
 Q
"RTN","MAGDQR09",19,0)
 ; Overflows from MAGDQR03
"RTN","MAGDQR09",20,0)
Q020000D(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;U  Study Instance UID
"RTN","MAGDQR09",21,0)
 ; sensitive/employee?
"RTN","MAGDQR09",22,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR09",23,0)
 . S V(T)="1.2.840.113754.2.1.3.1.1.66."_$G(^TMP("MAG",$J,"DICOMQR","DUMMY SIUID"))
"RTN","MAGDQR09",24,0)
 . Q
"RTN","MAGDQR09",25,0)
 ; no
"RTN","MAGDQR09",26,0)
 S V(T)="" Q:'MAGIEN
"RTN","MAGDQR09",27,0)
 D  ; retrieve from old or new DB?
"RTN","MAGDQR09",28,0)
 . N PARENT
"RTN","MAGDQR09",29,0)
 . I TYPE'="N" D  Q
"RTN","MAGDQR09",30,0)
 . . N PARENT
"RTN","MAGDQR09",31,0)
 . . S PARENT=$P($G(^MAG(2005,MAGIEN,0)),"^",10)
"RTN","MAGDQR09",32,0)
 . . S:'PARENT PARENT=MAGIEN
"RTN","MAGDQR09",33,0)
 . . S V(T)=$P($G(^MAG(2005,PARENT,"PACS")),"^",1)
"RTN","MAGDQR09",34,0)
 . . Q
"RTN","MAGDQR09",35,0)
 . I TYPE="N" D  Q
"RTN","MAGDQR09",36,0)
 . . S PARENT=$P($G(^MAGV(2005.64,MAGIEN,6)),"^",1) I 'PARENT Q
"RTN","MAGDQR09",37,0)
 . . S PARENT=$P($G(^MAGV(2005.63,PARENT,6)),"^",1) I 'PARENT Q
"RTN","MAGDQR09",38,0)
 . . S V(T)=$P($G(^MAGV(2005.62,PARENT,0)),"^",1)
"RTN","MAGDQR09",39,0)
 . . Q
"RTN","MAGDQR09",40,0)
 . Q
"RTN","MAGDQR09",41,0)
 Q
"RTN","MAGDQR09",42,0)
 ;
"RTN","MAGDQR09",43,0)
Q020000E(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;U  Series Instance UID
"RTN","MAGDQR09",44,0)
 ; sensitive/employee?
"RTN","MAGDQR09",45,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR09",46,0)
 . S V(T)="1.2.840.113754.2.1.3.1.1.1.66."_$G(^TMP("MAG",$J,"DICOMQR","DUMMY SIUID"))
"RTN","MAGDQR09",47,0)
 . Q
"RTN","MAGDQR09",48,0)
 ; no
"RTN","MAGDQR09",49,0)
 D  ; retrieve from old or new DB?
"RTN","MAGDQR09",50,0)
 . N PARENT
"RTN","MAGDQR09",51,0)
 . I TYPE'="N" D  Q
"RTN","MAGDQR09",52,0)
 . . I MAGIEN="" S V(T)="" Q
"RTN","MAGDQR09",53,0)
 . . S V(T)=$P($G(^MAG(2005,MAGIEN,"SERIESUID")),"^",1)
"RTN","MAGDQR09",54,0)
 . . Q
"RTN","MAGDQR09",55,0)
 . I TYPE="N" D  Q
"RTN","MAGDQR09",56,0)
 . . S PARENT=$P($G(^MAGV(2005.64,MAGIEN,6)),"^",1) I 'PARENT Q
"RTN","MAGDQR09",57,0)
 . . S V(T)=$P($G(^MAGV(2005.63,PARENT,0)),"^",1)
"RTN","MAGDQR09",58,0)
 . . Q
"RTN","MAGDQR09",59,0)
 . Q
"RTN","MAGDQR09",60,0)
 Q
"RTN","MAGDQR09",61,0)
 ;
"RTN","MAGDQR09",62,0)
Q0080061(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Modalities in Study
"RTN","MAGDQR09",63,0)
 ; sensitive/employee?
"RTN","MAGDQR09",64,0)
 I SENSEMP D  Q  ; yes, scrub
"RTN","MAGDQR09",65,0)
 . N I
"RTN","MAGDQR09",66,0)
 . S I=$O(REQ(T,""))
"RTN","MAGDQR09",67,0)
 . S V(T)="OT" I I,$G(REQ(T,I))]"" S V(T)=REQ(T,I)
"RTN","MAGDQR09",68,0)
 . Q
"RTN","MAGDQR09",69,0)
 ; no
"RTN","MAGDQR09",70,0)
 N ANY,I1,I2,LIST,MOD,P1,P2,R,TMP,PARENT,I,X
"RTN","MAGDQR09",71,0)
 I MAGIEN="" S V(T)="" Q
"RTN","MAGDQR09",72,0)
 ;
"RTN","MAGDQR09",73,0)
 S I1="" F  S I1=$O(REQ(T,I1)) Q:I1=""  D
"RTN","MAGDQR09",74,0)
 . S R=$TR(REQ(T,I1),"/","\")
"RTN","MAGDQR09",75,0)
 . F I2=1:1:$L(R,"\") S X=$P(R,"\",I2) S:X'="" LIST(X)=1
"RTN","MAGDQR09",76,0)
 . Q
"RTN","MAGDQR09",77,0)
 ;
"RTN","MAGDQR09",78,0)
 ; select based on old/new DB
"RTN","MAGDQR09",79,0)
 I TYPE="N" D NSTYMOD(MAGIEN,.MOD)
"RTN","MAGDQR09",80,0)
 I (TYPE="C")!(TYPE="R") D STYMOD(MAGIEN,.MOD)
"RTN","MAGDQR09",81,0)
 ;
"RTN","MAGDQR09",82,0)
 ; return only the requested Modalities
"RTN","MAGDQR09",83,0)
 S R="",ANY=0,X=""
"RTN","MAGDQR09",84,0)
 F  S X=$O(MOD(X)) Q:X=""  D
"RTN","MAGDQR09",85,0)
 . D  ; filter out consult-related noise
"RTN","MAGDQR09",86,0)
 . . Q:$E(X,1,7)="CONSULT"  Q:X="CON/PROC"
"RTN","MAGDQR09",87,0)
 . . S:R'="" R=R_"," S R=R_X
"RTN","MAGDQR09",88,0)
 . . Q
"RTN","MAGDQR09",89,0)
 . I $O(LIST(""))="" S ANY=1 Q
"RTN","MAGDQR09",90,0)
 . S I1="" F  S I1=$O(LIST(I1)) Q:I1=""  D  Q:ANY
"RTN","MAGDQR09",91,0)
 . . S:$$MATCHD^MAGDQR03(X,"LIST(LOOP)","TMP(LOOP)") ANY=1
"RTN","MAGDQR09",92,0)
 . . Q
"RTN","MAGDQR09",93,0)
 . Q
"RTN","MAGDQR09",94,0)
 S V(T)=R
"RTN","MAGDQR09",95,0)
 I 'ANY,$D(LIST) S OK=0 ; no matches
"RTN","MAGDQR09",96,0)
 Q
"RTN","MAGDQR09",97,0)
 ;
"RTN","MAGDQR09",98,0)
 ;given MAGIEN, save all study's modalities (New DB) to MOD array
"RTN","MAGDQR09",99,0)
NSTYMOD(MAGIEN,MOD) ;
"RTN","MAGDQR09",100,0)
 N SERREF,STYREF,D0,MODS,I,MODITEM
"RTN","MAGDQR09",101,0)
 S SERREF=$P($G(^MAGV(2005.64,MAGIEN,6)),"^",1) I 'SERREF Q
"RTN","MAGDQR09",102,0)
 S STYREF=$P($G(^MAGV(2005.63,SERREF,6)),"^",1) I 'STYREF Q
"RTN","MAGDQR09",103,0)
 S D0=0
"RTN","MAGDQR09",104,0)
 F  S D0=$O(^MAGV(2005.63,"C",STYREF,D0)) Q:'D0  D
"RTN","MAGDQR09",105,0)
 . S MODS=$P($G(^MAGV(2005.63,D0,1)),"^",1)
"RTN","MAGDQR09",106,0)
 . F I=1:1:$L(MODS,"/") S MODITEM=$P(MODS,"/",I) S:$L(MODITEM) MOD(MODITEM)=""
"RTN","MAGDQR09",107,0)
 Q
"RTN","MAGDQR09",108,0)
 ;
"RTN","MAGDQR09",109,0)
 ;given MAGIEN, save all study's modalities (Old/legacy DB) to MOD array
"RTN","MAGDQR09",110,0)
STYMOD(MAGIEN,MOD) ;
"RTN","MAGDQR09",111,0)
 N STUDYUID,X,R,P1,P2
"RTN","MAGDQR09",112,0)
 S STUDYUID=$P($G(^MAG(2005,MAGIEN,"PACS")),"^",1) Q:STUDYUID=""
"RTN","MAGDQR09",113,0)
 S MAGIEN=0
"RTN","MAGDQR09",114,0)
 F  S MAGIEN=$O(^MAG(2005,"P",STUDYUID,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGDQR09",115,0)
 . S X=$P($G(^MAG(2005,MAGIEN,0)),"^",8)
"RTN","MAGDQR09",116,0)
 . S:$E(X,1,4)="RAD " X=$E(X,5,$L(X))
"RTN","MAGDQR09",117,0)
 . S:X'="" MOD(X)=""
"RTN","MAGDQR09",118,0)
 . S R="",P1=0
"RTN","MAGDQR09",119,0)
 . F  S P1=$O(^MAG(2005,MAGIEN,1,P1)) Q:'P1  D
"RTN","MAGDQR09",120,0)
 . . S P2=+$G(^MAG(2005,MAGIEN,1,P1,0)) Q:'P2
"RTN","MAGDQR09",121,0)
 . . S X=$P($G(^MAG(2005,P2,0)),"^",8)
"RTN","MAGDQR09",122,0)
 . . S:$E(X,1,4)="RAD " X=$E(X,5,$L(X))
"RTN","MAGDQR09",123,0)
 . . S:X'="" MOD(X)=""
"RTN","MAGDQR09",124,0)
 . . Q
"RTN","MAGDQR09",125,0)
 . Q
"RTN","MAGDQR09",126,0)
 Q
"RTN","MAGDQR09",127,0)
 ;
"RTN","MAGDQR09",128,0)
Q0201206(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Number of Study Related Series
"RTN","MAGDQR09",129,0)
 ; sensitive/employee?
"RTN","MAGDQR09",130,0)
 I $G(SENSEMP) D  Q  ; yes, scrub
"RTN","MAGDQR09",131,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR09",132,0)
 . Q
"RTN","MAGDQR09",133,0)
 ; no
"RTN","MAGDQR09",134,0)
 N N,S,UID
"RTN","MAGDQR09",135,0)
 S UID=$G(V("0020,000D")),N=0
"RTN","MAGDQR09",136,0)
 D:UID'=""  ; select based on old/new type
"RTN","MAGDQR09",137,0)
 . I TYPE="N" D  Q  ; new P34 DB
"RTN","MAGDQR09",138,0)
 . . N STYIX,SERIX
"RTN","MAGDQR09",139,0)
 . . S STYIX=0
"RTN","MAGDQR09",140,0)
 . . F  S STYIX=$O(^MAGV(2005.62,"B",UID,STYIX)) Q:STYIX=""  D
"RTN","MAGDQR09",141,0)
 . . . Q:$P($G(^MAGV(2005.62,STYIX,5)),"^",2)'="A"  ; inaccessible status
"RTN","MAGDQR09",142,0)
 . . . S SERIX=0
"RTN","MAGDQR09",143,0)
 . . . F  S SERIX=$O(^MAGV(2005.63,"C",STYIX,SERIX)) Q:'SERIX  D
"RTN","MAGDQR09",144,0)
 . . . . S:$P($G(^MAGV(2005.63,SERIX,9)),"^",1)="A" N=N+1  ; accessible status
"RTN","MAGDQR09",145,0)
 . . . . Q
"RTN","MAGDQR09",146,0)
 . . . Q
"RTN","MAGDQR09",147,0)
 . . Q
"RTN","MAGDQR09",148,0)
 . I (TYPE="R")!(TYPE="C") D  Q  ; legacy DB
"RTN","MAGDQR09",149,0)
 . . S S="" F  S S=$O(^MAG(2005,"P",UID,S)) Q:S=""  S N=N+1
"RTN","MAGDQR09",150,0)
 . . Q
"RTN","MAGDQR09",151,0)
 . Q
"RTN","MAGDQR09",152,0)
 S V(T)=N
"RTN","MAGDQR09",153,0)
 S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR09",154,0)
 Q
"RTN","MAGDQR09",155,0)
 ;
"RTN","MAGDQR09",156,0)
Q0201208(TYPE,REQ,V,T,MAGDFN,MAGIEN,MAGRORD,MAGINTERP,SENSEMP,OK) ;O  Number of Study Related Instances
"RTN","MAGDQR09",157,0)
 ; sensitive/employee?
"RTN","MAGDQR09",158,0)
 I $G(SENSEMP) D  Q  ; yes, scrub
"RTN","MAGDQR09",159,0)
 . N I S I=$O(REQ(T,"")) S:I V(T)=$S($G(REQ(T,I))]"":REQ(T,I),1:"")
"RTN","MAGDQR09",160,0)
 . Q
"RTN","MAGDQR09",161,0)
 ; no
"RTN","MAGDQR09",162,0)
 N N,P1,P2,S,UID
"RTN","MAGDQR09",163,0)
 S UID=$G(V("0020,000D")),N=0
"RTN","MAGDQR09",164,0)
 D:UID'=""  ; select based on old / new type
"RTN","MAGDQR09",165,0)
 . I TYPE="N" D  Q
"RTN","MAGDQR09",166,0)
 . . N STYIX,SERIX,SOPIX
"RTN","MAGDQR09",167,0)
 . . S STYIX=0
"RTN","MAGDQR09",168,0)
 . . F  S STYIX=$O(^MAGV(2005.62,"B",UID,STYIX)) Q:STYIX=""  D
"RTN","MAGDQR09",169,0)
 . . . Q:$P($G(^MAGV(2005.62,STYIX,5)),"^",2)'="A"  ; inaccessible status
"RTN","MAGDQR09",170,0)
 . . . S SERIX=0
"RTN","MAGDQR09",171,0)
 . . . F  S SERIX=$O(^MAGV(2005.63,"C",STYIX,SERIX)) Q:'SERIX  D
"RTN","MAGDQR09",172,0)
 . . . . Q:$P($G(^MAGV(2005.63,SERIX,9)),"^",1)'="A"  ; inaccessible status
"RTN","MAGDQR09",173,0)
 . . . . S SOPIX=0
"RTN","MAGDQR09",174,0)
 . . . . F  S SOPIX=$O(^MAGV(2005.64,"C",SERIX,SOPIX)) Q:'SOPIX  D
"RTN","MAGDQR09",175,0)
 . . . . . S:$P($G(^MAGV(2005.64,SOPIX,11)),"^",1)="A" N=N+1  ; accessible status
"RTN","MAGDQR09",176,0)
 . . . . . Q
"RTN","MAGDQR09",177,0)
 . . . . Q
"RTN","MAGDQR09",178,0)
 . . . Q
"RTN","MAGDQR09",179,0)
 . . Q
"RTN","MAGDQR09",180,0)
 . I (TYPE="R")!(TYPE="C") D  Q
"RTN","MAGDQR09",181,0)
 . . S S="" F  S S=$O(^MAG(2005,"P",UID,S)) Q:S=""  D
"RTN","MAGDQR09",182,0)
 . . . S P1=0 F  S P1=$O(^MAG(2005,S,1,P1)) Q:'P1  D
"RTN","MAGDQR09",183,0)
 . . . . S P2=+$G(^MAG(2005,S,1,P1,0)) Q:'P2
"RTN","MAGDQR09",184,0)
 . . . . S N=N+1
"RTN","MAGDQR09",185,0)
 . . . . Q
"RTN","MAGDQR09",186,0)
 . . . Q
"RTN","MAGDQR09",187,0)
 . . Q
"RTN","MAGDQR09",188,0)
 . Q
"RTN","MAGDQR09",189,0)
 S V(T)=N
"RTN","MAGDQR09",190,0)
 S:'$$COMPARE^MAGDQR03(T,V(T)) OK=0
"RTN","MAGDQR09",191,0)
 Q
"RTN","MAGDQR10")
0^16^B9045803
"RTN","MAGDQR10",1,0)
MAGDQR10 ;WOIFO/MLH - Accession # search logic for C-FIND ; 30 Dec 2011 04:32 PM
"RTN","MAGDQR10",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR10",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR10",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR10",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR10",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR10",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR10",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR10",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR10",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR10",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR10",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR10",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR10",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR10",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR10",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR10",17,0)
 ;;
"RTN","MAGDQR10",18,0)
 Q
"RTN","MAGDQR10",19,0)
 ;
"RTN","MAGDQR10",20,0)
ACCSID(P,REQ,RESULT,MAGDUZ,PAT,SSN,UID,FD,LD) ; Return from accession no. / study ID query - called from MAGDQR02
"RTN","MAGDQR10",21,0)
 N TYPE,IMAGE,IARRAY,MAGD0,MAGD1,MAGD2,ACCNUM,STUDYIX,SERIESIX,SOPIX
"RTN","MAGDQR10",22,0)
 S TYPE=$P(P,"^",1)
"RTN","MAGDQR10",23,0)
 D  ; switch - build image / group array for old Rad, old Consult or new DB?
"RTN","MAGDQR10",24,0)
 . I TYPE="R" D ACCSIDRA^MAGDQR11(.IARRAY,P,PAT,SSN,UID,.MAGD0,.MAGD1,.MAGD2) Q  ; Radiology Images (old DB structure) case
"RTN","MAGDQR10",25,0)
 . I TYPE="C" D  Q  ; Consult Images (old DB structure) case
"RTN","MAGDQR10",26,0)
 . . ; P = C ^ DFN ^ File# ^ IEN ^ Image# ^ Accession#
"RTN","MAGDQR10",27,0)
 . . S IMAGE=$P(P,"^",5) Q:'IMAGE  S IARRAY(IMAGE)=""
"RTN","MAGDQR10",28,0)
 . . S MAGD0=+$P($G(^MAG(2005,+IMAGE,0)),"^",7)
"RTN","MAGDQR10",29,0)
 . . S (MAGD1,MAGD2)=0 ; Not a radiology study...
"RTN","MAGDQR10",30,0)
 . . S ACCNUM=$P(P,"^",6)
"RTN","MAGDQR10",31,0)
 . . Q
"RTN","MAGDQR10",32,0)
 . I TYPE="N" D  Q  ; New database structure case
"RTN","MAGDQR10",33,0)
 . . S STUDYIX=$P(P,"^",3),MAGD0=$P(P,"^",2)
"RTN","MAGDQR10",34,0)
 . . S SERIESIX=""
"RTN","MAGDQR10",35,0)
 . . F  S SERIESIX=$O(^MAGV(2005.63,"C",STUDYIX,SERIESIX)) Q:'SERIESIX  D  Q:$D(IARRAY)  ; only study level for now
"RTN","MAGDQR10",36,0)
 . . . S SOPIX=""
"RTN","MAGDQR10",37,0)
 . . . F  S SOPIX=$O(^MAGV(2005.64,"C",SERIESIX,SOPIX)) Q:'SOPIX  S IARRAY(SOPIX)=STUDYIX Q  ; only study level for now
"RTN","MAGDQR10",38,0)
 . . . Q
"RTN","MAGDQR10",39,0)
 . . S (MAGD1,MAGD2)=0 ; Not a radiology study in the old structure...
"RTN","MAGDQR10",40,0)
 . . Q
"RTN","MAGDQR10",41,0)
 . Q
"RTN","MAGDQR10",42,0)
 S IMAGE=""
"RTN","MAGDQR10",43,0)
 F  S IMAGE=$O(IARRAY(IMAGE)) Q:'IMAGE  D
"RTN","MAGDQR10",44,0)
 . D RESULT^MAGDQR03(TYPE,.REQ,RESULT,IMAGE,MAGDUZ,MAGD0,MAGD1,MAGD2)
"RTN","MAGDQR10",45,0)
 . Q
"RTN","MAGDQR10",46,0)
 Q
"RTN","MAGDQR11")
0^17^B6241369
"RTN","MAGDQR11",1,0)
MAGDQR11 ;WOIFO/MLH - UID logic for C-FIND - process rad entries from old DB structure ; 25 Jan 2012 11:43 AM
"RTN","MAGDQR11",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR11",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR11",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR11",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR11",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR11",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR11",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR11",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR11",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR11",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR11",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR11",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR11",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR11",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR11",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR11",17,0)
 ;;
"RTN","MAGDQR11",18,0)
 Q
"RTN","MAGDQR11",19,0)
 ;
"RTN","MAGDQR11",20,0)
ACCSIDRA(IARRAY,P,PAT,SSN,UID,MAGD0,MAGD1,MAGD2) ; Radiology images (old DB structure) case - called from ACCSID^MAGDQR10
"RTN","MAGDQR11",21,0)
 N OK,V,P1,P2,P3,P4
"RTN","MAGDQR11",22,0)
 S MAGD0=$P(P,"^",2),MAGD1=$P(P,"^",3),MAGD2=$P(P,"^",4)
"RTN","MAGDQR11",23,0)
 I PAT+SSN,'$D(^TMP("MAG",$J,"QR",11,MAGD0)) Q
"RTN","MAGDQR11",24,0)
 S OK=0 D  Q:'OK
"RTN","MAGDQR11",25,0)
 . S V=$P($G(^RADPT(MAGD0,"DT",MAGD1,"P",MAGD2,0)),"^",17) Q:'V  ; IA # 1172
"RTN","MAGDQR11",26,0)
 . S P1=0 F  S P1=$O(^RARPT(V,2005,P1)) Q:'P1  D  Q:OK  ; IA # 1171
"RTN","MAGDQR11",27,0)
 . . S P2=+$G(^RARPT(V,2005,P1,0)) Q:'P2  ; IA # 1171
"RTN","MAGDQR11",28,0)
 . . I UID,$D(^TMP("MAG",$J,"QR",8,P2)) S OK=1,IARRAY(P2)="" Q
"RTN","MAGDQR11",29,0)
 . . ; don't set 'OK' flag next line, allow mult. studies per acc#
"RTN","MAGDQR11",30,0)
 . . I 'UID S IARRAY(P2)="" Q
"RTN","MAGDQR11",31,0)
 . . S P3=0 F  S P3=$O(^MAG(2005,P2,1,P3)) Q:'P3  D  Q:OK
"RTN","MAGDQR11",32,0)
 . . . S P4=$P($G(^MAG(2005,P2,1,P3,0)),"^",1) Q:'P4
"RTN","MAGDQR11",33,0)
 . . . I UID,$D(^TMP("MAG",$J,"QR",8,P4)) S OK=1,IARRAY(P4)="" Q
"RTN","MAGDQR11",34,0)
 . . . ; don't set 'OK' flag next line, allow mult. studies / acc# (?? - EdM comment)
"RTN","MAGDQR11",35,0)
 . . . I 'UID S OK=1,IARRAY(P4)="" Q
"RTN","MAGDQR11",36,0)
 . . . Q
"RTN","MAGDQR11",37,0)
 . . Q
"RTN","MAGDQR11",38,0)
 . Q
"RTN","MAGDQR11",39,0)
 Q
"RTN","MAGDQR12")
0^18^B11594014
"RTN","MAGDQR12",1,0)
MAGDQR12 ;WOIFO/EdM,MLH,NST - Imaging RPCs for Query/Retrieve ; 16 Apr 2013 1:12 PM
"RTN","MAGDQR12",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR12",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR12",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR12",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR12",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR12",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR12",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR12",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR12",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR12",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR12",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR12",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR12",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR12",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR12",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR12",17,0)
 ;;
"RTN","MAGDQR12",18,0)
 Q
"RTN","MAGDQR12",19,0)
 ; -- overflow from MAGDQR02
"RTN","MAGDQR12",20,0)
 ;
"RTN","MAGDQR12",21,0)
STUDYID(REQ,T,SID,ANY) ; TAG = 0020,0010  R  Study ID
"RTN","MAGDQR12",22,0)
 ; The references below to ^RADPT are permitted according to the
"RTN","MAGDQR12",23,0)
 ; existing Integration Agreement # 1172
"RTN","MAGDQR12",24,0)
 N D1,ID,PATREFDTA,MAGD0,MAGD1,I,ACCARY,P,TMPQ,V
"RTN","MAGDQR12",25,0)
 S TMPQ=$NA(^TMP("MAG",$J,"QR"))
"RTN","MAGDQR12",26,0)
 S P="" F  S P=$O(REQ(T,P)) Q:P=""  S ID=+REQ(T,P) D:ID
"RTN","MAGDQR12",27,0)
 . S ANY=1
"RTN","MAGDQR12",28,0)
 . ; First scan for images in the new structure
"RTN","MAGDQR12",29,0)
 . S I=$$MATCHD^MAGDQR03("*-"_ID,"^MAGV(2005.61,""B"",LOOP)","^TMP(""MAG"",$J,""QR"",19.1,LOOP)")
"RTN","MAGDQR12",30,0)
 . S I=$$MATCHD^MAGDQR03("*-"_ID,"^RADPT(""ADC"",LOOP)","^TMP(""MAG"",$J,""QR"",19.1,LOOP)")  ; Radiology lookup
"RTN","MAGDQR12",31,0)
 . S I=$$MATCHD^MAGDQR03("*-"_ID,"^RADPT(""ADC1"",LOOP)","^TMP(""MAG"",$J,""QR"",19.1,LOOP)") ; Radiology lookup
"RTN","MAGDQR12",32,0)
 . S V=""
"RTN","MAGDQR12",33,0)
 . F  S V=$O(^TMP("MAG",$J,"QR",19.1,V)) Q:V=""  D   ; V is an accession number
"RTN","MAGDQR12",34,0)
 . . S:$$ADDSTUDY^MAGDQR74(V,$NA(@TMPQ@(10)),$NA(@TMPQ@(19))) SID=1
"RTN","MAGDQR12",35,0)
 . . Q 
"RTN","MAGDQR12",36,0)
 . ; Then scan for legacy Radiology Related Images (including site specific accession numbers)
"RTN","MAGDQR12",37,0)
 . S I=$$MATCHD^MAGDQR03("*-"_ID,"^RADPT(""ADC"",LOOP)","^TMP(""MAG"",$J,""QR"",9,LOOP)")
"RTN","MAGDQR12",38,0)
 . S I=$$MATCHD^MAGDQR03("*-"_ID,"^RADPT(""ADC1"",LOOP)","^TMP(""MAG"",$J,""QR"",9,LOOP)")
"RTN","MAGDQR12",39,0)
 . S V="" F  S V=$O(^TMP("MAG",$J,"QR",9,V)) Q:V=""  D
"RTN","MAGDQR12",40,0)
 . . Q:$D(^TMP("MAG",$J,"QR",19,V))  ; already picked up from new structure
"RTN","MAGDQR12",41,0)
 . . D ACCFIND^RAAPI(V,.ACCARY) ; Radiology acc# lookup utility Private IA (#5020) 
"RTN","MAGDQR12",42,0)
 . . S I=0 F  S I=$O(ACCARY(I)) Q:'I  D
"RTN","MAGDQR12",43,0)
 . . . S ^TMP("MAG",$J,"QR",10,"R^"_ACCARY(I))="",SID=1
"RTN","MAGDQR12",44,0)
 . . . Q
"RTN","MAGDQR12",45,0)
 . . Q
"RTN","MAGDQR12",46,0)
 . ; Then scan for legacy Consult Related Images
"RTN","MAGDQR12",47,0)
 . S D1=0
"RTN","MAGDQR12",48,0)
 . I '$D(^TMP("MAG",$J,"QR",19,ID)) F  S D1=$O(^GMR(123,ID,50,D1)) Q:'D1  D
"RTN","MAGDQR12",49,0)
 . . N I,T,X
"RTN","MAGDQR12",50,0)
 . . S X=$P($G(^GMR(123,ID,50,D1,0)),"^",1) Q:X'[";TIU(8925,"
"RTN","MAGDQR12",51,0)
 . . S T=+X
"RTN","MAGDQR12",52,0)
 . . S MAGD1="" F  S MAGD1=$O(^TIU(8925.91,"B",T,MAGD1)) Q:MAGD1=""  D
"RTN","MAGDQR12",53,0)
 . . . S X=$G(^TIU(8925.91,MAGD1,0)),I=$P(X,"^",2) Q:'I
"RTN","MAGDQR12",54,0)
 . . . S ^TMP("MAG",$J,"QR",10,"C^"_MAGD0_"^8925^"_T_"^"_I_"^"_ID)="",SID=1
"RTN","MAGDQR12",55,0)
 . . . Q
"RTN","MAGDQR12",56,0)
 . . Q
"RTN","MAGDQR12",57,0)
 . Q
"RTN","MAGDQR12",58,0)
 Q
"RTN","MAGDQR13")
0^19^B68282867
"RTN","MAGDQR13",1,0)
MAGDQR13 ;WOIFO/EdM/MLH/JSL/SAF/BT - Imaging RPCs for Query/Retrieve - Overflow from MAGDQR03; 10 Apr 2012 2:05 PM ; 06 Aug 2012 2:42 PM
"RTN","MAGDQR13",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR13",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR13",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR13",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR13",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR13",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR13",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR13",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR13",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR13",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR13",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR13",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR13",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR13",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR13",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR13",17,0)
 ;;
"RTN","MAGDQR13",18,0)
 Q
"RTN","MAGDQR13",19,0)
 ;
"RTN","MAGDQR13",20,0)
 ; SAVRSLT^MAGDQR13 is called by MAGDQR03
"RTN","MAGDQR13",21,0)
 ;
"RTN","MAGDQR13",22,0)
 ; This procedure 
"RTN","MAGDQR13",23,0)
 ;    - saves compiled result (V) to the Query Retrieve Result File (#2006.5732)
"RTN","MAGDQR13",24,0)
 ;    - merges modalities with the same Study Instance UID
"RTN","MAGDQR13",25,0)
 ; 
"RTN","MAGDQR13",26,0)
 ; Input Parameters
"RTN","MAGDQR13",27,0)
 ; ================
"RTN","MAGDQR13",28,0)
 ;   RESULT = pointer into the Query Retrieve Result File (#2006.5732)
"RTN","MAGDQR13",29,0)
 ;   MAGDFN = pointer into the Patient File (#2)
"RTN","MAGDQR13",30,0)
 ;   MAGIEN = pointer into the Image File (#2005 or 2005.64)
"RTN","MAGDQR13",31,0)
 ;   V      = compiled result
"RTN","MAGDQR13",32,0)
 ; 
"RTN","MAGDQR13",33,0)
 ; V Structure
"RTN","MAGDQR13",34,0)
 ; ===========
"RTN","MAGDQR13",35,0)
 ; V(TAG) = VALUE
"RTN","MAGDQR13",36,0)
 ; V(TAG,SEQ) = VALUE
"RTN","MAGDQR13",37,0)
 ; V(TAG,SEQ,SEQ2) = VALUE
"RTN","MAGDQR13",38,0)
 ;
"RTN","MAGDQR13",39,0)
 ; Values of V(TAG) and V(TAG,SEQ) will be merged as one record using delimiter 
"RTN","MAGDQR13",40,0)
 ; Each value of V(TAG,SEQ,SEQ2) will be saved separately
"RTN","MAGDQR13",41,0)
 ; 
"RTN","MAGDQR13",42,0)
 ; TAG  = see MAGDQR00 for list of Supported tags
"RTN","MAGDQR13",43,0)
 ; 
"RTN","MAGDQR13",44,0)
SAVRSLT(RESULT,MAGDFN,MAGIEN,V) ;
"RTN","MAGDQR13",45,0)
 N PRVRSLT,STUDYUID,ACCN,PATNAME
"RTN","MAGDQR13",46,0)
 ;
"RTN","MAGDQR13",47,0)
 ; At this point V($$STUIDTAG) - STUDY INSTANCE UID will exist, caller validates the value before calling this proc
"RTN","MAGDQR13",48,0)
 S STUDYUID=V($$STUIDTAG^MAGDQR00)
"RTN","MAGDQR13",49,0)
 S ACCN=$G(V($$ACCNTAG^MAGDQR00)) ;Accession number
"RTN","MAGDQR13",50,0)
 S:ACCN="" ACCN="*" ;might not be requested in the result
"RTN","MAGDQR13",51,0)
 S PATNAM=$G(V($$PTNAMTAG^MAGDQR00)) ;patientname
"RTN","MAGDQR13",52,0)
 S:PATNAM="" PATNAM="*" ;might not be requested in the result
"RTN","MAGDQR13",53,0)
 ;
"RTN","MAGDQR13",54,0)
 ; if there are multiple modalities, replace comma delimiter with "\"
"RTN","MAGDQR13",55,0)
 N MODTAG
"RTN","MAGDQR13",56,0)
 S MODTAG=$$MODTAG^MAGDQR00
"RTN","MAGDQR13",57,0)
 S:$G(V(MODTAG))'="" V(MODTAG)=$TR(V(MODTAG),",","\")
"RTN","MAGDQR13",58,0)
 ;
"RTN","MAGDQR13",59,0)
 ; Get pointer (RESULT) for the given STUDYUID in file 2006.5732
"RTN","MAGDQR13",60,0)
 S PRVRSLT=$$GETPRSLT(MAGDFN,STUDYUID,ACCN,PATNAM)
"RTN","MAGDQR13",61,0)
 ; Merge record if there is previous record with the same STUDYUID
"RTN","MAGDQR13",62,0)
 I PRVRSLT>0 D MERGEREC(PRVRSLT,.V) Q
"RTN","MAGDQR13",63,0)
 ; otherwise, save record to file 
"RTN","MAGDQR13",64,0)
 I PRVRSLT=0 D SAVREC(RESULT,MAGDFN,MAGIEN,STUDYUID,ACCN,PATNAM,.V)
"RTN","MAGDQR13",65,0)
 ; PRVSLT=-1 Do not save Duplicate Study UID
"RTN","MAGDQR13",66,0)
 Q
"RTN","MAGDQR13",67,0)
 ;
"RTN","MAGDQR13",68,0)
GETPRSLT(MAGDFN,STUDYUID,ACCN,PATNAM) ; Get pointer (RESULT) for the given STUDYUID in file 2006.5732
"RTN","MAGDQR13",69,0)
 ; Return 0             -  Study UID not found
"RTN","MAGDQR13",70,0)
 ;        Record Number -  Study UID found
"RTN","MAGDQR13",71,0)
 ;        -1            -  Study UID found but has different patient id, patient name or accession number
"RTN","MAGDQR13",72,0)
 ;
"RTN","MAGDQR13",73,0)
 ;    ^TMP("MAG",$J,"DICOMQR","STUDYUID") and ^TMP("MAG",$J,"DICOMQR","STUDYUNIQUEFIELDS") below are
"RTN","MAGDQR13",74,0)
 ;    cross references of file 2006.5732 
"RTN","MAGDQR13",75,0)
 ;
"RTN","MAGDQR13",76,0)
 I '$D(^TMP("MAG",$J,"DICOMQR","STUDYUID",STUDYUID)) Q 0
"RTN","MAGDQR13",77,0)
 I '$D(^TMP("MAG",$J,"DICOMQR","STUDYUNIQUEFIELDS",MAGDFN,ACCN,PATNAM)) Q -1
"RTN","MAGDQR13",78,0)
 Q ^TMP("MAG",$J,"DICOMQR","STUDYUID",STUDYUID)
"RTN","MAGDQR13",79,0)
 ;
"RTN","MAGDQR13",80,0)
MERGEREC(PRVRSLT,V) ; Merge record to previous record with the same UID
"RTN","MAGDQR13",81,0)
 ; Merge Modalities
"RTN","MAGDQR13",82,0)
 D:$G(V($$MODTAG^MAGDQR00))'="" MRGONMOD(PRVRSLT,.V)
"RTN","MAGDQR13",83,0)
 ;
"RTN","MAGDQR13",84,0)
 ; Accumulate "Number of Study Related Series" and "Number of Study Related Instances"
"RTN","MAGDQR13",85,0)
 N NIMGTAG
"RTN","MAGDQR13",86,0)
 F NIMGTAG=$$NSRSTAG^MAGDQR00,$$NSRITAG^MAGDQR00 D:$G(V(NIMGTAG)) MRGONIMG(PRVRSLT,.V,NIMGTAG)
"RTN","MAGDQR13",87,0)
 ;
"RTN","MAGDQR13",88,0)
 ; Use non empty Study Description 
"RTN","MAGDQR13",89,0)
 D:$G(V($$STDESTAG^MAGDQR00))'="" UPDSTDES(PRVRSLT,.V)
"RTN","MAGDQR13",90,0)
 Q
"RTN","MAGDQR13",91,0)
 ;
"RTN","MAGDQR13",92,0)
MRGONMOD(PRVRSLT,V) ; Merge modalities from old and new db
"RTN","MAGDQR13",93,0)
 ; V(MODTAG) must have value before calling this procedure
"RTN","MAGDQR13",94,0)
 N MODTAG
"RTN","MAGDQR13",95,0)
 S MODTAG=$$MODTAG^MAGDQR00
"RTN","MAGDQR13",96,0)
 ;
"RTN","MAGDQR13",97,0)
 ; find record number for the Modalities of previous record with the same Study UID
"RTN","MAGDQR13",98,0)
 N STUDYUID,STUDYTA,MODRECNO
"RTN","MAGDQR13",99,0)
 S STUDYUID=V($$STUIDTAG^MAGDQR00)
"RTN","MAGDQR13",100,0)
 S MODRECNO=$$GTAGRECN(PRVRSLT,MODTAG,STUDYUID)
"RTN","MAGDQR13",101,0)
 ;
"RTN","MAGDQR13",102,0)
 ; if not found, add modalities to sub file (2006.57321)
"RTN","MAGDQR13",103,0)
 I 'MODRECNO D ADDTAGFL(PRVRSLT,MODTAG,V(MODTAG)) Q
"RTN","MAGDQR13",104,0)
 ;
"RTN","MAGDQR13",105,0)
 ; if found, merge current modalities to previous record with the same Study UID
"RTN","MAGDQR13",106,0)
 N PAIR,TAG,PREVMOD,MERGE
"RTN","MAGDQR13",107,0)
 S PAIR=$$GTAGPAIR(PRVRSLT,MODRECNO)
"RTN","MAGDQR13",108,0)
 S TAG=$P(PAIR,U)
"RTN","MAGDQR13",109,0)
 Q:MODTAG'=TAG  ;should not happen, corrupted data, no merge
"RTN","MAGDQR13",110,0)
 ;
"RTN","MAGDQR13",111,0)
 S PREVMOD=$P(PAIR,U,2) ;modalities from previous record
"RTN","MAGDQR13",112,0)
 S MERGE=$$MERGEMOD(.PREVMOD,V(MODTAG))
"RTN","MAGDQR13",113,0)
 D:MERGE UTAGPAIR(PRVRSLT,MODRECNO,MODTAG_U_PREVMOD)
"RTN","MAGDQR13",114,0)
 Q
"RTN","MAGDQR13",115,0)
 ;
"RTN","MAGDQR13",116,0)
MERGEMOD(PREVMOD,NEWMOD) ; return the merged modalities
"RTN","MAGDQR13",117,0)
 I PREVMOD="" S PREVMOD=NEWMOD Q 1
"RTN","MAGDQR13",118,0)
 ;
"RTN","MAGDQR13",119,0)
 N I,MOD,MERGE
"RTN","MAGDQR13",120,0)
 S MERGE=0
"RTN","MAGDQR13",121,0)
 ;
"RTN","MAGDQR13",122,0)
 F I=1:1:$L(NEWMOD,"\") D
"RTN","MAGDQR13",123,0)
 . S MOD=$P(NEWMOD,"\",I)
"RTN","MAGDQR13",124,0)
 . I '$F("\"_PREVMOD_"\","\"_MOD_"\") D
"RTN","MAGDQR13",125,0)
 . . S PREVMOD=PREVMOD_"\"_MOD
"RTN","MAGDQR13",126,0)
 . . S MERGE=1
"RTN","MAGDQR13",127,0)
 ;
"RTN","MAGDQR13",128,0)
 Q MERGE
"RTN","MAGDQR13",129,0)
 ;
"RTN","MAGDQR13",130,0)
MRGONIMG(PRVRSLT,V,NIMGTAG) ; Sum Number of NIMGTAG values from old and new db
"RTN","MAGDQR13",131,0)
 ; NIMGTAG is either 
"RTN","MAGDQR13",132,0)
 ;   $$NSRSTAG (Number of Study Related Series TAG) or
"RTN","MAGDQR13",133,0)
 ;   $$NSRITAG (Number of Study Related Instances TAG)
"RTN","MAGDQR13",134,0)
 ;
"RTN","MAGDQR13",135,0)
 ; find record number for the NIMGTAG of previous record with the same Study UID
"RTN","MAGDQR13",136,0)
 N STUDYUID,RECNO
"RTN","MAGDQR13",137,0)
 S STUDYUID=V($$STUIDTAG^MAGDQR00)
"RTN","MAGDQR13",138,0)
 S RECNO=$$GTAGRECN(PRVRSLT,NIMGTAG,STUDYUID)
"RTN","MAGDQR13",139,0)
 ;
"RTN","MAGDQR13",140,0)
 ; if not found, add NIMGTAG entry to sub file (2006.57321)
"RTN","MAGDQR13",141,0)
 I 'RECNO D ADDTAGFL(PRVRSLT,NIMGTAG,V(NIMGTAG)) Q
"RTN","MAGDQR13",142,0)
 ;
"RTN","MAGDQR13",143,0)
 ; if found, sum up the NIMGTAG value from old and new db
"RTN","MAGDQR13",144,0)
 N PAIR,TAG
"RTN","MAGDQR13",145,0)
 S PAIR=$$GTAGPAIR(PRVRSLT,RECNO)
"RTN","MAGDQR13",146,0)
 S TAG=$P(PAIR,U)
"RTN","MAGDQR13",147,0)
 Q:NIMGTAG'=TAG  ;should not happen, corrupted data, no merge
"RTN","MAGDQR13",148,0)
 ;
"RTN","MAGDQR13",149,0)
 S $P(PAIR,U,2)=$P(PAIR,U,2)+V(NIMGTAG) ;Sum current NIMGTAG with previous value
"RTN","MAGDQR13",150,0)
 D UTAGPAIR(PRVRSLT,RECNO,PAIR)
"RTN","MAGDQR13",151,0)
 Q
"RTN","MAGDQR13",152,0)
 ;
"RTN","MAGDQR13",153,0)
UPDSTDES(PRVRSLT,V) ; Update Study Description
"RTN","MAGDQR13",154,0)
 N STDESTAG
"RTN","MAGDQR13",155,0)
 S STDESTAG=$$STDESTAG^MAGDQR00 ; Study Description Tag
"RTN","MAGDQR13",156,0)
 ;
"RTN","MAGDQR13",157,0)
 ; find record number for Study Description of previous record with the same Study UID
"RTN","MAGDQR13",158,0)
 N STUDYUID,RECNO
"RTN","MAGDQR13",159,0)
 S STUDYUID=V($$STUIDTAG^MAGDQR00)
"RTN","MAGDQR13",160,0)
 S RECNO=$$GTAGRECN(PRVRSLT,STDESTAG,STUDYUID)
"RTN","MAGDQR13",161,0)
 ;
"RTN","MAGDQR13",162,0)
 ; if not found, add Study Description to sub file (2006.57321)
"RTN","MAGDQR13",163,0)
 I 'RECNO D ADDTAGFL(PRVRSLT,STDESTAG,V(STDESTAG)) Q
"RTN","MAGDQR13",164,0)
 ;
"RTN","MAGDQR13",165,0)
 ; if found, update empty Study Description with non empty description
"RTN","MAGDQR13",166,0)
 N PAIR,TAG
"RTN","MAGDQR13",167,0)
 S PAIR=$$GTAGPAIR(PRVRSLT,RECNO)
"RTN","MAGDQR13",168,0)
 S TAG=$P(PAIR,U)
"RTN","MAGDQR13",169,0)
 Q:STDESTAG'=TAG  ;should not happen, corrupted data, no merge
"RTN","MAGDQR13",170,0)
 ;
"RTN","MAGDQR13",171,0)
 I $P(PAIR,U,2)="" D
"RTN","MAGDQR13",172,0)
 . S $P(PAIR,U,2)=V(STDESTAG)
"RTN","MAGDQR13",173,0)
 . D UTAGPAIR(PRVRSLT,RECNO,PAIR)
"RTN","MAGDQR13",174,0)
 Q
"RTN","MAGDQR13",175,0)
 ;
"RTN","MAGDQR13",176,0)
SAVREC(RESULT,MAGDFN,MAGIEN,UID,ACCN,PATNAM,V) ; save record (V) to file 2006.5732
"RTN","MAGDQR13",177,0)
 ; save header
"RTN","MAGDQR13",178,0)
 D SAVHDR(RESULT)
"RTN","MAGDQR13",179,0)
 ; save Image saved date
"RTN","MAGDQR13",180,0)
 D SAVIMGDT(RESULT,MAGDFN,MAGIEN,UID)
"RTN","MAGDQR13",181,0)
 ; 
"RTN","MAGDQR13",182,0)
 ; save each tag/tag value pair to a separate record
"RTN","MAGDQR13",183,0)
 N TAG
"RTN","MAGDQR13",184,0)
 S TAG=""
"RTN","MAGDQR13",185,0)
 F  S TAG=$O(V(TAG)) Q:TAG=""  D
"RTN","MAGDQR13",186,0)
 . D SAVTAG(RESULT,.V,TAG)
"RTN","MAGDQR13",187,0)
 . Q
"RTN","MAGDQR13",188,0)
 ;
"RTN","MAGDQR13",189,0)
 ; The following TMPs used to identify whether a record need to be merged to previous
"RTN","MAGDQR13",190,0)
 ; record with the same identities (MAGDFN,ACCN,PATNAM)
"RTN","MAGDQR13",191,0)
 S ^TMP("MAG",$J,"DICOMQR","STUDYUID",UID)=RESULT
"RTN","MAGDQR13",192,0)
 S ^TMP("MAG",$J,"DICOMQR","STUDYUNIQUEFIELDS",MAGDFN,ACCN,PATNAM)=""
"RTN","MAGDQR13",193,0)
 Q 
"RTN","MAGDQR13",194,0)
 ;
"RTN","MAGDQR13",195,0)
SAVHDR(RESULT) ; Save header
"RTN","MAGDQR13",196,0)
 N TAGVAL
"RTN","MAGDQR13",197,0)
 S ^TMP("MAG",$J,"DICOMQR","RESULTSET")=$G(^TMP("MAG",$J,"DICOMQR","RESULTSET"))+1
"RTN","MAGDQR13",198,0)
 S TAGVAL="Result # "_^TMP("MAG",$J,"DICOMQR","RESULTSET")
"RTN","MAGDQR13",199,0)
 D ADDTAGFL(RESULT,$$HDRTAG^MAGDQR00,TAGVAL)
"RTN","MAGDQR13",200,0)
 Q
"RTN","MAGDQR13",201,0)
 ;
"RTN","MAGDQR13",202,0)
SAVIMGDT(RESULT,MAGDFN,MAGIEN,STUDYUID) ; Save Image Saved Date
"RTN","MAGDQR13",203,0)
 N IMGSAVDT,RECNO
"RTN","MAGDQR13",204,0)
 S IMGSAVDT=$$GETIMGDT(MAGIEN)
"RTN","MAGDQR13",205,0)
 S RECNO=$O(^MAGDQR(2006.5732,RESULT,1," "),-1)
"RTN","MAGDQR13",206,0)
 S ^TMP("MAG",$J,"QR",99,STUDYUID,IMGSAVDT_" "_MAGDFN,RECNO)=MAGIEN
"RTN","MAGDQR13",207,0)
 Q
"RTN","MAGDQR13",208,0)
 ;
"RTN","MAGDQR13",209,0)
GETIMGDT(MAGIEN) ; Return Image Saved date
"RTN","MAGDQR13",210,0)
 ; MAGIEN must exist. 
"RTN","MAGDQR13",211,0)
 ; Caller validates the existence of the image in either file 2005 or 2005.64
"RTN","MAGDQR13",212,0)
 I $D(^MAG(2005,MAGIEN)) Q $G(^MAG(2005,MAGIEN,2))\1 ;Date Image Saved
"RTN","MAGDQR13",213,0)
 I $D(^MAGV(2005.64,MAGIEN)) Q $G(^MAGV(2005.64,MAGIEN,15))\1 ;Last Update Date
"RTN","MAGDQR13",214,0)
 Q ""
"RTN","MAGDQR13",215,0)
 ;
"RTN","MAGDQR13",216,0)
SAVTAG(RESULT,V,TAG) ; Save TAG^TAG_VALUE pair
"RTN","MAGDQR13",217,0)
 N TAGVAL
"RTN","MAGDQR13",218,0)
 S TAGVAL=$$GTAGVAL(.V,TAG)
"RTN","MAGDQR13",219,0)
 D ADDTAGFL(RESULT,TAG,TAGVAL)
"RTN","MAGDQR13",220,0)
 ;
"RTN","MAGDQR13",221,0)
 Q:$D(V(TAG))<10  ;no multiple values
"RTN","MAGDQR13",222,0)
 ;
"RTN","MAGDQR13",223,0)
 ; save multiple values V(TAG,TAGRECNO,SEQ)
"RTN","MAGDQR13",224,0)
 N TAGRECNO,SEQ
"RTN","MAGDQR13",225,0)
 S (TAGRECNO,SEQ)=""
"RTN","MAGDQR13",226,0)
 ;
"RTN","MAGDQR13",227,0)
 F  S TAGRECNO=$O(V(TAG,TAGRECNO)) Q:TAGRECNO=""  D
"RTN","MAGDQR13",228,0)
 . F  S SEQ=$O(V(TAG,TAGRECNO,SEQ)) Q:SEQ=""  D
"RTN","MAGDQR13",229,0)
 . . S TAGVAL=$G(V(TAG,TAGRECNO,SEQ)) Q:TAGVAL=""
"RTN","MAGDQR13",230,0)
 . . D ADDTAGFL(RESULT,TAG,TAGVAL)
"RTN","MAGDQR13",231,0)
 . . Q
"RTN","MAGDQR13",232,0)
 . Q
"RTN","MAGDQR13",233,0)
 Q
"RTN","MAGDQR13",234,0)
 ;
"RTN","MAGDQR13",235,0)
GTAGVAL(V,TAG) ; Get Tag Value
"RTN","MAGDQR13",236,0)
 ; Values of V(TAG) and V(TAG,SEQ) will be saved as one record using delimiter "\"
"RTN","MAGDQR13",237,0)
 N TAGVAL,SEQ
"RTN","MAGDQR13",238,0)
 S TAGVAL=$G(V(TAG))
"RTN","MAGDQR13",239,0)
 S SEQ=""
"RTN","MAGDQR13",240,0)
 ;
"RTN","MAGDQR13",241,0)
 F  S SEQ=$O(V(TAG,SEQ)) Q:SEQ=""  D
"RTN","MAGDQR13",242,0)
 . Q:$G(V(TAG,SEQ))=""
"RTN","MAGDQR13",243,0)
 . S:TAGVAL'="" TAGVAL=TAGVAL_"\"
"RTN","MAGDQR13",244,0)
 . S TAGVAL=TAGVAL_V(TAG,SEQ)
"RTN","MAGDQR13",245,0)
 . Q
"RTN","MAGDQR13",246,0)
 Q TAGVAL
"RTN","MAGDQR13",247,0)
 ;
"RTN","MAGDQR13",248,0)
GTAGRECN(RESULT,TAG,STUDYUID) ; Return Sub Index for Sub File (2006.57321) for the TAG within RESULT records with STUDYUID
"RTN","MAGDQR13",249,0)
 N STUIDTAG,HDRTAG
"RTN","MAGDQR13",250,0)
 S STUIDTAG=$$STUIDTAG^MAGDQR00 ; Study UID Tag
"RTN","MAGDQR13",251,0)
 S HDRTAG=$$HDRTAG^MAGDQR00 ; Result Header Tag
"RTN","MAGDQR13",252,0)
 ;
"RTN","MAGDQR13",253,0)
 ; Find the Result Header Record # for StudyUID
"RTN","MAGDQR13",254,0)
 N HDRRECNO,FOUND
"RTN","MAGDQR13",255,0)
 S FOUND=0
"RTN","MAGDQR13",256,0)
 S HDRRECNO=""
"RTN","MAGDQR13",257,0)
 F  S HDRRECNO=$O(^MAGDQR(2006.5732,RESULT,1,"B",HDRTAG,HDRRECNO)) Q:HDRRECNO=""  D  Q:FOUND
"RTN","MAGDQR13",258,0)
 . N STUIDRCN
"RTN","MAGDQR13",259,0)
 . S STUIDRCN=$O(^MAGDQR(2006.5732,RESULT,1,"B",STUIDTAG,HDRRECNO))
"RTN","MAGDQR13",260,0)
 . Q:STUIDRCN=""
"RTN","MAGDQR13",261,0)
 . I STUDYUID=$P(^MAGDQR(2006.5732,RESULT,1,STUIDRCN,0),U,2) S FOUND=1
"RTN","MAGDQR13",262,0)
 . Q
"RTN","MAGDQR13",263,0)
 ;
"RTN","MAGDQR13",264,0)
 N RECNO
"RTN","MAGDQR13",265,0)
 S RECNO=0
"RTN","MAGDQR13",266,0)
 S:FOUND RECNO=$O(^MAGDQR(2006.5732,RESULT,1,"B",TAG,HDRRECNO))
"RTN","MAGDQR13",267,0)
 Q RECNO
"RTN","MAGDQR13",268,0)
 ;
"RTN","MAGDQR13",269,0)
ADDTAGFL(RESULT,TAG,TAGVAL) ; Add entry to Sub File (2006.57321)
"RTN","MAGDQR13",270,0)
 N LSTRECNO
"RTN","MAGDQR13",271,0)
 S LSTRECNO=$O(^MAGDQR(2006.5732,RESULT,1," "),-1)+1
"RTN","MAGDQR13",272,0)
 ;
"RTN","MAGDQR13",273,0)
 N HDR
"RTN","MAGDQR13",274,0)
 S HDR=$G(^MAGDQR(2006.5732,RESULT,1,0))
"RTN","MAGDQR13",275,0)
 S $P(HDR,U,1,2)="TAG^2006.57321"
"RTN","MAGDQR13",276,0)
 S $P(HDR,U,3)=LSTRECNO
"RTN","MAGDQR13",277,0)
 S $P(HDR,U,4)=$P(HDR,U,4)+1
"RTN","MAGDQR13",278,0)
 S ^MAGDQR(2006.5732,RESULT,1,0)=HDR
"RTN","MAGDQR13",279,0)
 ;
"RTN","MAGDQR13",280,0)
 S ^MAGDQR(2006.5732,RESULT,1,LSTRECNO,0)=TAG_U_TAGVAL
"RTN","MAGDQR13",281,0)
 S ^MAGDQR(2006.5732,RESULT,1,"B",TAG,LSTRECNO)=""
"RTN","MAGDQR13",282,0)
 Q
"RTN","MAGDQR13",283,0)
 ;
"RTN","MAGDQR13",284,0)
GTAGPAIR(RESULT,RECNO) ; Given Result and RecNo, Get Tag pair value from File 2006.5732
"RTN","MAGDQR13",285,0)
 N TAGPAIR
"RTN","MAGDQR13",286,0)
 S TAGPAIR=^MAGDQR(2006.5732,RESULT,1,RECNO,0)
"RTN","MAGDQR13",287,0)
 Q TAGPAIR
"RTN","MAGDQR13",288,0)
 ;
"RTN","MAGDQR13",289,0)
UTAGPAIR(RESULT,RECNO,TAGPAIR) ; Update Result, RecNo of File 2006.5732 with Tag Pair Value
"RTN","MAGDQR13",290,0)
 S ^MAGDQR(2006.5732,RESULT,1,RECNO,0)=TAGPAIR
"RTN","MAGDQR13",291,0)
 Q
"RTN","MAGDQR22")
0^20^B9067474
"RTN","MAGDQR22",1,0)
MAGDQR22 ;WOIFO/EdM,MLH - Pt ID / SSN logic for C-FIND - find matching rad studies in new DB structure ; 23 Dec 2011 12:55 AM
"RTN","MAGDQR22",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR22",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR22",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR22",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR22",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR22",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR22",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR22",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR22",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR22",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR22",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR22",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR22",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR22",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR22",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR22",17,0)
 ;;
"RTN","MAGDQR22",18,0)
 Q
"RTN","MAGDQR22",19,0)
 ;
"RTN","MAGDQR22",20,0)
PATSSNNU(P,REQ,RESULT,MAGDUZ,PAT,SSN,UID,FD,LD,ERROR,FATAL) ; Generate response data to pt ID / SSN query from new DB structure - called from PATSSN^MAGDQR20
"RTN","MAGDQR22",21,0)
 N PATIX,PATREC,PATDFN,PROCIX,STYIX,STYDATE,SERIX,SOPIX,SOPQUIT,SERQUIT
"RTN","MAGDQR22",22,0)
 S FD=$G(FD),LD=$G(LD)
"RTN","MAGDQR22",23,0)
 S PATIX="" F  S PATIX=$O(^MAGV(2005.6,"B",P,PATIX)) Q:'PATIX  D
"RTN","MAGDQR22",24,0)
 . S PATREC=$G(^MAGV(2005.6,PATIX,0)) Q:PATREC=""  Q:$P(PATREC,"^",3)'="D"
"RTN","MAGDQR22",25,0)
 . S PATDFN=$P(PATREC,"^",1)
"RTN","MAGDQR22",26,0)
 . S PROCIX="" F  S PROCIX=$O(^MAGV(2005.61,"C",PATIX,PROCIX)) Q:'PROCIX  D
"RTN","MAGDQR22",27,0)
 . . Q:$P($G(^MAGV(2005.61,PROCIX,0)),"^",5)'="A"  ; not active
"RTN","MAGDQR22",28,0)
 . . S STYIX="" F  S STYIX=$O(^MAGV(2005.62,"C",PROCIX,STYIX)) Q:'STYIX  D
"RTN","MAGDQR22",29,0)
 . . . S STYDATE=$P($G(^MAGV(2005.62,STYIX,2)),"^",1)
"RTN","MAGDQR22",30,0)
 . . . I STYDATE Q:FD&(STYDATE<FD)  Q:LD&(STYDATE>LD)  ; study out of date range (if specified)
"RTN","MAGDQR22",31,0)
 . . . Q:$P($G(^MAGV(2005.62,STYIX,5)),"^",2)="I"  ; study marked inaccessible
"RTN","MAGDQR22",32,0)
 . . . S SERIX="" F  S SERIX=$O(^MAGV(2005.63,"C",STYIX,SERIX)) Q:'SERIX  D  Q:$G(SERQUIT)
"RTN","MAGDQR22",33,0)
 . . . . S SOPIX="" F  S SOPIX=$O(^MAGV(2005.64,"C",SERIX,SOPIX)) Q:'SOPIX  D  Q:$G(SOPQUIT)
"RTN","MAGDQR22",34,0)
 . . . . . D RESULT^MAGDQR03("N",.REQ,RESULT,SOPIX,MAGDUZ,PATDFN,0,0,.ERROR,.FATAL)
"RTN","MAGDQR22",35,0)
 . . . . . S SOPQUIT=1 ; always true for study & series level query - adjust later for SOP level 
"RTN","MAGDQR22",36,0)
 . . . . . Q
"RTN","MAGDQR22",37,0)
 . . . . S SERQUIT=1 ; always true for study level query - adjust later for series, SOP level
"RTN","MAGDQR22",38,0)
 . . . . Q
"RTN","MAGDQR22",39,0)
 . . . Q
"RTN","MAGDQR22",40,0)
 . . Q
"RTN","MAGDQR22",41,0)
 . Q
"RTN","MAGDQR22",42,0)
 Q
"RTN","MAGDQR23")
0^21^B5722979
"RTN","MAGDQR23",1,0)
MAGDQR23 ;WOIFO/EdM,MLH - UID logic for C-FIND - return results for rad studies in old DB structure ; 25 Jan 2012 11:47 AM
"RTN","MAGDQR23",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR23",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR23",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR23",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR23",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR23",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR23",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR23",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR23",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR23",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR23",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR23",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR23",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR23",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR23",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR23",17,0)
 ;;
"RTN","MAGDQR23",18,0)
 Q
"RTN","MAGDQR23",19,0)
 ;
"RTN","MAGDQR23",20,0)
PATSSNOL(IMAGE,REQ,RESULT,MAGDUZ,FD,LD,ERROR,FATAL) ; Radiology images (old DB structure) case - called from PATSSN^MAGDQR02
"RTN","MAGDQR23",21,0)
 N X,V,MAGD0,MAGD1,MAGD2
"RTN","MAGDQR23",22,0)
 Q:$P($G(^MAG(2005,IMAGE,0)),"^",10)
"RTN","MAGDQR23",23,0)
 S X=$G(^MAG(2005,IMAGE,2))
"RTN","MAGDQR23",24,0)
 S V=$P(X,"^",5) I V,(V<FD)!(V>LD) Q  ; study out of date range
"RTN","MAGDQR23",25,0)
 S V=$P(X,"^",6)
"RTN","MAGDQR23",26,0)
 I V=74 D  Q  ; Radiology Image
"RTN","MAGDQR23",27,0)
 . S V=$P(X,"^",5) I V,(V<FD)!(V>LD) Q
"RTN","MAGDQR23",28,0)
 . S X=$G(^RARPT(+$P(X,"^",7),0)) ; IA # 1171
"RTN","MAGDQR23",29,0)
 . S MAGD0=$P(X,"^",2),MAGD1=9999999.9999-$P(X,"^",3),V=$P(X,"^",4)
"RTN","MAGDQR23",30,0)
 . S MAGD2=$O(^RADPT(MAGD0,"DT",MAGD1,"P","B",V,"")) ; IA # 1172
"RTN","MAGDQR23",31,0)
 . D RESULT^MAGDQR03("R",.REQ,RESULT,IMAGE,MAGDUZ,MAGD0,MAGD1,MAGD2,.ERROR,.FATAL)
"RTN","MAGDQR23",32,0)
 . Q
"RTN","MAGDQR23",33,0)
 I (V=8925)!(V=2006.5839) D  Q  ; Consult Image
"RTN","MAGDQR23",34,0)
 . S MAGD0=+$P($G(^MAG(2005,IMAGE,0)),"^",7)
"RTN","MAGDQR23",35,0)
 . D RESULT^MAGDQR03("C",.REQ,RESULT,IMAGE,MAGDUZ,MAGD0,0,0,.ERROR,.FATAL)
"RTN","MAGDQR23",36,0)
 . Q
"RTN","MAGDQR23",37,0)
 Q
"RTN","MAGDQR31")
0^22^B8494742
"RTN","MAGDQR31",1,0)
MAGDQR31 ;WOIFO/MLH - UID query return logic for C-FIND - new DB ; 25 Jan 2012 11:47 AM
"RTN","MAGDQR31",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR31",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR31",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR31",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR31",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR31",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR31",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR31",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR31",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR31",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR31",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR31",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR31",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR31",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR31",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR31",17,0)
 ;;
"RTN","MAGDQR31",18,0)
 Q
"RTN","MAGDQR31",19,0)
 ;
"RTN","MAGDQR31",20,0)
UIDNEW(P,REQ,RESULT,MAGDUZ,PAT,SSN,UID,FD,LD) ; Generate response data from new DB to pat name / SSN query - called from MAGDQR02
"RTN","MAGDQR31",21,0)
 N STYIX,PROCIX,PATIX,PATREC,PATDFN,SERIX,SOPIX,SERQUIT,SOPQUIT
"RTN","MAGDQR31",22,0)
 I $G(MAGDUZ)="" D ERR^MAGDQRUE("No Imaging user defined for this query"),ERRSAV^MAGDQRUE Q
"RTN","MAGDQR31",23,0)
 I $G(RESULT)="" D ERR^MAGDQRUE("No results set to save to"),ERRSAV^MAGDQRUE Q
"RTN","MAGDQR31",24,0)
 S P=$G(P),STYIX=$E(P,2,$L(P))
"RTN","MAGDQR31",25,0)
 I STYIX="" D ERR^MAGDQRUE("Null image pointer in results set"),ERRSAV^MAGDQRUE Q
"RTN","MAGDQR31",26,0)
 Q:$P($G(^MAGV(2005.62,STYIX,5)),"^",2)="I"  ; inaccessible
"RTN","MAGDQR31",27,0)
 S PROCIX=$P($G(^MAGV(2005.62,STYIX,6)),"^",1) Q:'PROCIX
"RTN","MAGDQR31",28,0)
 S PATIX=$P($G(^MAGV(2005.61,PROCIX,6)),"^",1) Q:'PATIX
"RTN","MAGDQR31",29,0)
 S PATREC=$G(^MAGV(2005.6,PATIX,0)) Q:PATREC=""
"RTN","MAGDQR31",30,0)
 S:$P(PATREC,"^",3)="D" PATDFN=$P(PATREC,"^",1) Q:$G(PATDFN)=""
"RTN","MAGDQR31",31,0)
 I $G(PAT)+$G(SSN),'$D(^TMP("MAG",$J,"QR",11,P)) Q
"RTN","MAGDQR31",32,0)
 S SERIX="" F  S SERIX=$O(^MAGV(2005.63,"C",STYIX,SERIX)) Q:'SERIX  D  Q:$G(SERQUIT)
"RTN","MAGDQR31",33,0)
 . S SOPIX="" F  S SOPIX=$O(^MAGV(2005.64,"C",SERIX,SOPIX)) Q:'SOPIX  D  Q:$G(SOPQUIT)
"RTN","MAGDQR31",34,0)
 . . D RESULT^MAGDQR03("N",.REQ,RESULT,SOPIX,MAGDUZ,PATDFN,0,0)
"RTN","MAGDQR31",35,0)
 . . S SOPQUIT=1 ; always true for study & series level query - adjust later for SOP level 
"RTN","MAGDQR31",36,0)
 . . Q
"RTN","MAGDQR31",37,0)
 . S SERQUIT=1 ; always true for study level query - adjust later for series, SOP level
"RTN","MAGDQR31",38,0)
 . Q
"RTN","MAGDQR31",39,0)
 Q
"RTN","MAGDQR32")
0^23^B7433299
"RTN","MAGDQR32",1,0)
MAGDQR32 ;WOIFO/MLH - UID query return logic for C-FIND ; 30 Dec 2011 4:09 PM
"RTN","MAGDQR32",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR32",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR32",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR32",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR32",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR32",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR32",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR32",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR32",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR32",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR32",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR32",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR32",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR32",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR32",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR32",17,0)
 ;;
"RTN","MAGDQR32",18,0)
 Q
"RTN","MAGDQR32",19,0)
 ;
"RTN","MAGDQR32",20,0)
UIDOLD(IMAGE,REQ,RESULT,MAGDUZ,PAT,SSN,ACC,SID,UID,FD,LD) ; Generate response data to pat name / SSN query - called from MAGDQR02
"RTN","MAGDQR32",21,0)
 N X,P,V,MAGD0,MAGD1,MAGD2
"RTN","MAGDQR32",22,0)
 I $G(MAGDUZ)="" D ERR^MAGDQRUE("No Imaging user defined for this query"),ERRSAV^MAGDQRUE Q
"RTN","MAGDQR32",23,0)
 I $G(RESULT)="" D ERR^MAGDQRUE("No results set to save to"),ERRSAV^MAGDQRUE Q
"RTN","MAGDQR32",24,0)
 I '$G(IMAGE) D ERR^MAGDQRUE("Invalid IMAGE file pointer: '"_$G(IMAGE)_"'"),ERRSAV^MAGDQRUE Q
"RTN","MAGDQR32",25,0)
 S X=$G(^MAG(2005,IMAGE,0)),P=+$P(X,"^",7)
"RTN","MAGDQR32",26,0)
 I $G(PAT)+$G(SSN),P,'$D(^TMP("MAG",$J,"QR",11,P)) Q
"RTN","MAGDQR32",27,0)
 S X=$G(^MAG(2005,IMAGE,2))
"RTN","MAGDQR32",28,0)
 S V=$P(X,"^",5),FD=$G(FD),LD=$G(LD) I V,(FD&(V<FD))!(LD&(V>LD)) Q  ; UNIT TEST!!
"RTN","MAGDQR32",29,0)
 S V=$P(X,"^",6)
"RTN","MAGDQR32",30,0)
 ; Radiology Image
"RTN","MAGDQR32",31,0)
 I V=74 D  Q  ; Radiology Image
"RTN","MAGDQR32",32,0)
 . S X=$G(^RARPT(+$P(X,"^",7),0)) ; IA # 1171
"RTN","MAGDQR32",33,0)
 . S MAGD0=$P(X,"^",2),MAGD1=9999999.9999-$P(X,"^",3),V=$P(X,"^",4)
"RTN","MAGDQR32",34,0)
 . S MAGD2=$O(^RADPT(MAGD0,"DT",MAGD1,"P","B",V,"")) ; IA # 1172
"RTN","MAGDQR32",35,0)
 . I $G(ACC)+$G(SID),'$D(^TMP("MAG",$J,"QR",12,"R^"_MAGD0_"^"_MAGD1_"^"_MAGD2)) Q  ; UNIT TEST!!
"RTN","MAGDQR32",36,0)
 . D RESULT^MAGDQR03("R",.REQ,RESULT,IMAGE,MAGDUZ,MAGD0,MAGD1,MAGD2)
"RTN","MAGDQR32",37,0)
 . Q
"RTN","MAGDQR32",38,0)
 ; Consult Image
"RTN","MAGDQR32",39,0)
 I (V=8925)!(V=2006.5839) D RESULT^MAGDQR03("C",.REQ,RESULT,IMAGE,MAGDUZ,P,0,0) Q
"RTN","MAGDQR32",40,0)
 Q
"RTN","MAGDQR71")
0^24^B5273821
"RTN","MAGDQR71",1,0)
MAGDQR71 ;WOIFO/MLH,NST - Imaging RPCs for Query/Retrieve - acc# scan (new); 16 Apr 2013 1:13 PM
"RTN","MAGDQR71",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR71",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR71",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR71",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR71",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR71",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR71",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR71",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR71",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR71",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR71",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR71",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR71",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR71",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR71",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR71",17,0)
 ;;
"RTN","MAGDQR71",18,0)
 Q
"RTN","MAGDQR71",19,0)
 ; called by MAGDQR07
"RTN","MAGDQR71",20,0)
 ;
"RTN","MAGDQR71",21,0)
ACCNEW(REQ,T,P,ACC) ;look in the new database structure
"RTN","MAGDQR71",22,0)
 ; Add patient DFN and Study IEN to ^TMP("MAG",$J,"QR",6) in format
"RTN","MAGDQR71",23,0)
 ; ^TMP("MAG",$J,"QR",6,"N^"_MAGD0_"^"_STUDYIX)
"RTN","MAGDQR71",24,0)
 ;              where MAGD0 is patient DFN
"RTN","MAGDQR71",25,0)
 ;                    STUDYIX is IEN in IMAGE STUDY file (#2005.62)
"RTN","MAGDQR71",26,0)
 ;
"RTN","MAGDQR71",27,0)
 N TMPQ,I,V
"RTN","MAGDQR71",28,0)
 S TMPQ=$NA(^TMP("MAG",$J,"QR")) K @TMPQ@(5)
"RTN","MAGDQR71",29,0)
 S I=$$MATCHD^MAGDQR03(REQ(T,P),"^RADPT(""ADC"",LOOP)","@TMPQ@(5,LOOP)")  ; Radiology lookup
"RTN","MAGDQR71",30,0)
 S I=$$MATCHD^MAGDQR03(REQ(T,P),"^RADPT(""ADC1"",LOOP)","@TMPQ@(5,LOOP)")  ; Radiology lookup
"RTN","MAGDQR71",31,0)
 S I=$$MATCHD^MAGDQR03(REQ(T,P),"^MAGV(2005.61,""B"",LOOP)","@TMPQ@(5,LOOP)")
"RTN","MAGDQR71",32,0)
 S V="" F  S V=$O(@TMPQ@(5,V)) Q:V=""  D  ; V is an accession number
"RTN","MAGDQR71",33,0)
 . S:$$ADDSTUDY^MAGDQR74(V,$NA(@TMPQ@(6)),"") ACC=1
"RTN","MAGDQR71",34,0)
 . Q
"RTN","MAGDQR71",35,0)
 Q
"RTN","MAGDQR72")
0^25^B6230687
"RTN","MAGDQR72",1,0)
MAGDQR72 ;WOIFO/MLH - Imaging RPCs for Query/Retrieve - acc# scan for rad recs (old DB) ; 13 Feb 2012 3:07 PM
"RTN","MAGDQR72",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR72",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR72",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR72",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR72",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR72",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR72",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR72",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR72",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR72",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR72",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR72",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR72",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR72",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR72",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR72",17,0)
 ;;
"RTN","MAGDQR72",18,0)
 Q
"RTN","MAGDQR72",19,0)
 ; called by MAGDQR07
"RTN","MAGDQR72",20,0)
 ;
"RTN","MAGDQR72",21,0)
ACCRAD(REQ,T,P,ACC) ; scan old structure for Radiology Related Images (including site-specific accession numbers)
"RTN","MAGDQR72",22,0)
 N TMPQ,I,V,MAGD0,MAGD1,MAGD2,RPTIX
"RTN","MAGDQR72",23,0)
 S TMPQ=$NA(^TMP("MAG",$J,"QR")) K @TMPQ@(5)
"RTN","MAGDQR72",24,0)
 S I=$$MATCHD^MAGDQR03(REQ(T,P),"^RADPT(""ADC"",LOOP)","@TMPQ@(5,LOOP)")
"RTN","MAGDQR72",25,0)
 S I=$$MATCHD^MAGDQR03(REQ(T,P),"^RADPT(""ADC1"",LOOP)","@TMPQ@(5,LOOP)")
"RTN","MAGDQR72",26,0)
 S V="" F  S V=$O(@TMPQ@(5,V)) Q:V=""  D
"RTN","MAGDQR72",27,0)
 . S MAGD0="" F  S MAGD0=$O(^RADPT("ADC",V,MAGD0)) Q:MAGD0=""  D
"RTN","MAGDQR72",28,0)
 . . S MAGD1="" F  S MAGD1=$O(^RADPT("ADC",V,MAGD0,MAGD1)) Q:MAGD1=""  D
"RTN","MAGDQR72",29,0)
 . . . S MAGD2="" F  S MAGD2=$O(^RADPT("ADC",V,MAGD0,MAGD1,MAGD2)) Q:MAGD2=""  D
"RTN","MAGDQR72",30,0)
 . . . . S RPTIX=$P($G(^RADPT(MAGD0,"DT",MAGD1,"P",MAGD2,0)),"^",17) Q:'RPTIX  ; no report on file
"RTN","MAGDQR72",31,0)
 . . . . Q:'$D(^RARPT(RPTIX,2005))  ; report doesn't have images in old structure
"RTN","MAGDQR72",32,0)
 . . . . S @TMPQ@(6,"R^"_MAGD0_"^"_MAGD1_"^"_MAGD2)="",ACC=1
"RTN","MAGDQR72",33,0)
 . . . . Q
"RTN","MAGDQR72",34,0)
 . . . Q
"RTN","MAGDQR72",35,0)
 . . Q
"RTN","MAGDQR72",36,0)
 . Q
"RTN","MAGDQR72",37,0)
 Q
"RTN","MAGDQR73")
0^26^B6999469
"RTN","MAGDQR73",1,0)
MAGDQR73 ;WOIFO/MLH - Imaging RPCs for Query/Retrieve - acc# scan for consult recs (old DB) ; 28 Feb 2012 7:43 PM
"RTN","MAGDQR73",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR73",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR73",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR73",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR73",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR73",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR73",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR73",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR73",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR73",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR73",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR73",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR73",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR73",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR73",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR73",17,0)
 ;;
"RTN","MAGDQR73",18,0)
 Q
"RTN","MAGDQR73",19,0)
 ; called from MAGDQR07
"RTN","MAGDQR73",20,0)
 ;
"RTN","MAGDQR73",21,0)
ACCCON(REQ,T,P,ACC) ; scan old structure for Consult Related Images
"RTN","MAGDQR73",22,0)
 N TMPQ,ACCNUM,I,D0,MAGDFN,IMAGE,X,RESULT
"RTN","MAGDQR73",23,0)
 S TMPQ=$NA(^TMP("MAG",$J,"QR")) K @TMPQ@(5)
"RTN","MAGDQR73",24,0)
 S ACCNUM=REQ(T,P) S:$E(ACCNUM,1,5)="GMRC-" ACCNUM=$E(ACCNUM,6,$L(ACCNUM))
"RTN","MAGDQR73",25,0)
 ; For the time being, we can only do this:
"RTN","MAGDQR73",26,0)
 S:ACCNUM @TMPQ@(5,ACCNUM)=""
"RTN","MAGDQR73",27,0)
 S I=$$MATCHD^MAGDQR03(ACCNUM,"^GMR(123,LOOP)","@TMPQ@(5,LOOP)")
"RTN","MAGDQR73",28,0)
 S D0="" F  S D0=$O(^TMP("MAG",$J,"QR",5,D0)) Q:D0=""  D
"RTN","MAGDQR73",29,0)
 . S MAGDFN=$$GET1^DIQ(123,D0,.02,"I") Q:'MAGDFN  ; No Patient IEN
"RTN","MAGDQR73",30,0)
 . Q:$$GET1^DIQ(123,D0,8)="CANCELLED"
"RTN","MAGDQR73",31,0)
 . I $O(^MAG(2006.5839,"C",123,D0,0)) D  Q  ; 1+ studies assoc w/consult
"RTN","MAGDQR73",32,0)
 . . S IMAGE=0
"RTN","MAGDQR73",33,0)
 . . F  S IMAGE=$O(^MAG(2006.5839,"C",123,D0,IMAGE)) Q:'IMAGE  D
"RTN","MAGDQR73",34,0)
 . . . S X=$G(^MAG(2006.5839,IMAGE,0)) Q:X=""
"RTN","MAGDQR73",35,0)
 . . . S X=MAGDFN_"^"_$P(X,"^",1)_"^"_$P(X,"^",2)_"^"_$P(X,"^",3)_"^"_ACCNUM
"RTN","MAGDQR73",36,0)
 . . . S @TMPQ@(6,"C^"_X)="",ACC=1
"RTN","MAGDQR73",37,0)
 . . . Q
"RTN","MAGDQR73",38,0)
 . . Q
"RTN","MAGDQR73",39,0)
 . D  ; Otherwise find images in ^TIU
"RTN","MAGDQR73",40,0)
 . . D TIUALL^MAGDGMRC(D0,.RESULT)
"RTN","MAGDQR73",41,0)
 . . S I="" F  S I=$O(RESULT(I)) Q:I=""  D
"RTN","MAGDQR73",42,0)
 . . . S X=MAGDFN_"^8925^"_$P(RESULT(I),"^",1)_"^"_$P(RESULT(I),"^",3)_"^"_$P(RESULT(I),"^",2)
"RTN","MAGDQR73",43,0)
 . . . S @TMPQ@(6,"C^"_X)="",ACC=1
"RTN","MAGDQR73",44,0)
 . . . Q
"RTN","MAGDQR73",45,0)
 . . Q
"RTN","MAGDQR73",46,0)
 . Q
"RTN","MAGDQR73",47,0)
 Q
"RTN","MAGDQR74")
0^27^B9439259
"RTN","MAGDQR74",1,0)
MAGDQR74 ;WOIFO/NST - Imaging Utilities for Query/Retrieve - acc# scan (new); 16 Apr 2013 1:08 PM
"RTN","MAGDQR74",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQR74",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR74",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR74",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR74",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR74",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR74",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR74",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR74",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR74",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR74",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR74",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR74",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR74",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR74",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR74",17,0)
 ;;
"RTN","MAGDQR74",18,0)
 Q
"RTN","MAGDQR74",19,0)
 ;
"RTN","MAGDQR74",20,0)
ADD1STD(ACCN,TMPQ)  ; Add one Study to temp global by accession number
"RTN","MAGDQR74",21,0)
 ; Input parameters
"RTN","MAGDQR74",22,0)
 ; ================
"RTN","MAGDQR74",23,0)
 ;
"RTN","MAGDQR74",24,0)
 ; ACCN - Accession Number
"RTN","MAGDQR74",25,0)
 ;
"RTN","MAGDQR74",26,0)
 ; Return 0 - nothing added
"RTN","MAGDQR74",27,0)
 ;        1 - a record was added
"RTN","MAGDQR74",28,0)
 ; 
"RTN","MAGDQR74",29,0)
 ;        TMPQ - reference to an array with studies in format
"RTN","MAGDQR74",30,0)
 ;        TMPQ("N^"_MAGD0_"^"_STUDYIX)=""
"RTN","MAGDQR74",31,0)
 ;              where MAGD0 is patient DFN
"RTN","MAGDQR74",32,0)
 ;                    STUDYIX is IEN in IMAGE STUDY file (#2005.62)
"RTN","MAGDQR74",33,0)
 ;
"RTN","MAGDQR74",34,0)
 N STUDYIX,MAGD0,PATREFIX,PATREFDTA,PROCIX,RESULT
"RTN","MAGDQR74",35,0)
 S RESULT=0
"RTN","MAGDQR74",36,0)
 S PROCIX=""
"RTN","MAGDQR74",37,0)
 F  S PROCIX=$O(^MAGV(2005.61,"B",ACCN,PROCIX)) Q:PROCIX=""  D
"RTN","MAGDQR74",38,0)
 . S PATREFIX=$P($G(^MAGV(2005.61,PROCIX,6)),"^",1) ; Patient Reference
"RTN","MAGDQR74",39,0)
 . Q:'PATREFIX  ; Quit if there is no Patient Reference
"RTN","MAGDQR74",40,0)
 . S PATREFDTA=$G(^MAGV(2005.6,PATREFIX,0))
"RTN","MAGDQR74",41,0)
 . Q:$P(PATREFDTA,"^",3)'="D"  ; Quit if it is not DFN
"RTN","MAGDQR74",42,0)
 . S MAGD0=$P(PATREFDTA,"^",1)  ; DFN
"RTN","MAGDQR74",43,0)
 . D:MAGD0'=""
"RTN","MAGDQR74",44,0)
 . . S STUDYIX="" F  S STUDYIX=$O(^MAGV(2005.62,"C",PROCIX,STUDYIX)) Q:'STUDYIX  D
"RTN","MAGDQR74",45,0)
 . . . Q:$P($G(^MAGV(2005.62,STUDYIX,5)),"^",2)="I"  ; study marked inaccessible
"RTN","MAGDQR74",46,0)
 . . . S @TMPQ@("N^"_MAGD0_"^"_STUDYIX)="",RESULT=1
"RTN","MAGDQR74",47,0)
 . . . Q
"RTN","MAGDQR74",48,0)
 . . Q
"RTN","MAGDQR74",49,0)
 . Q
"RTN","MAGDQR74",50,0)
 Q RESULT
"RTN","MAGDQR74",51,0)
 ;
"RTN","MAGDQR74",52,0)
ADDSTUDY(ACCN,TMPQ,TMPQACCN) ; Add all Studies to temp global by accession number
"RTN","MAGDQR74",53,0)
 ; Input parameters
"RTN","MAGDQR74",54,0)
 ; ================
"RTN","MAGDQR74",55,0)
 ;
"RTN","MAGDQR74",56,0)
 ; ACCN - Accession Number
"RTN","MAGDQR74",57,0)
 ;
"RTN","MAGDQR74",58,0)
 ; Return 0 - nothing added
"RTN","MAGDQR74",59,0)
 ;        1 - a record was added
"RTN","MAGDQR74",60,0)
 ; 
"RTN","MAGDQR74",61,0)
 ;        TMPQ - reference to array with studies in format
"RTN","MAGDQR74",62,0)
 ;          TMPQ("N^"_MAGD0_"^"_STUDYIX)=""
"RTN","MAGDQR74",63,0)
 ;              where MAGD0 is patient DFN
"RTN","MAGDQR74",64,0)
 ;                    STUDYIX is IEN in IMAGE STUDY file (#2005.62)
"RTN","MAGDQR74",65,0)
 ;        TMPQACCN - reference to array with accession numbers in format
"RTN","MAGDQR74",66,0)
 ;          TMPQACCN(V) where V is accession number
"RTN","MAGDQR74",67,0)
 ;
"RTN","MAGDQR74",68,0)
 N ACNLIST,I,RESULT,V
"RTN","MAGDQR74",69,0)
 S ACNLIST=$$DAYCASE2^MAGJUTL6(ACCN) ; Get Radiology accession numbers
"RTN","MAGDQR74",70,0)
 S:ACNLIST="" ACNLIST=ACCN  ; not a Radiology accession number
"RTN","MAGDQR74",71,0)
 S RESULT=0
"RTN","MAGDQR74",72,0)
 F I=1:1:$L(ACNLIST,U) D 
"RTN","MAGDQR74",73,0)
 . S V=$P(ACNLIST,U,I)  ; Accesion Number
"RTN","MAGDQR74",74,0)
 . S:TMPQACCN'="" @TMPQACCN@(V)=""  ; Add it to an accession numbers list
"RTN","MAGDQR74",75,0)
 . S:$$ADD1STD^MAGDQR74(V,TMPQ) RESULT=1
"RTN","MAGDQR74",76,0)
 . Q
"RTN","MAGDQR74",77,0)
 Q RESULT
"RTN","MAGDQRUE")
0^28^B4782470
"RTN","MAGDQRUE",1,0)
MAGDQRUE ;WOIFO/MLH - Imaging RPCs for Query/Retrieve - error utilities ; 30 Dec 2011 2:17 PM
"RTN","MAGDQRUE",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQRUE",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQRUE",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQRUE",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQRUE",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQRUE",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQRUE",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQRUE",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQRUE",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQRUE",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQRUE",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQRUE",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQRUE",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQRUE",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQRUE",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQRUE",17,0)
 ;;
"RTN","MAGDQRUE",18,0)
 Q
"RTN","MAGDQRUE",19,0)
 ;
"RTN","MAGDQRUE",20,0)
ERR(X) S ^TMP("MAG",$J,"ERR",$O(^TMP("MAG",$J,"ERR"," "),-1)+1)=X
"RTN","MAGDQRUE",21,0)
 Q
"RTN","MAGDQRUE",22,0)
 ;
"RTN","MAGDQRUE",23,0)
ERRLOG N I,O,X
"RTN","MAGDQRUE",24,0)
 S O=1,I=""
"RTN","MAGDQRUE",25,0)
 F  S I=$O(^TMP("MAG",$J,"ERR",I)) Q:I=""  S X=$G(^(I)) D
"RTN","MAGDQRUE",26,0)
 . S O=O+1,OUT(O)=X
"RTN","MAGDQRUE",27,0)
 . Q
"RTN","MAGDQRUE",28,0)
 D LOG^MAGDQRUL("Error","",(-O)_",Errors encountered")
"RTN","MAGDQRUE",29,0)
 Q
"RTN","MAGDQRUE",30,0)
 ;
"RTN","MAGDQRUE",31,0)
ERRSAV N I,O,RESGBL,X
"RTN","MAGDQRUE",32,0)
 Q:'$G(RESULT)  S RESGBL=$NA(^MAGDQR(2006.5732,RESULT))
"RTN","MAGDQRUE",33,0)
 S $P(@RESGBL@(0),"^",2,3)="OK^"_$$NOW^XLFDT()
"RTN","MAGDQRUE",34,0)
 K @RESGBL@(1)
"RTN","MAGDQRUE",35,0)
 S O=0,I=""
"RTN","MAGDQRUE",36,0)
 F  S I=$O(^TMP("MAG",$J,"ERR",I)) Q:I=""  S X=$G(^(I)) D
"RTN","MAGDQRUE",37,0)
 . S O=O+1,@RESGBL@(1,O,0)="0000,0902^"_X
"RTN","MAGDQRUE",38,0)
 . Q
"RTN","MAGDQRUE",39,0)
 Q
"RTN","MAGDQRUL")
0^29^B9509874
"RTN","MAGDQRUL",1,0)
MAGDQRUL ;WOIFO/EdM,MLH - Imaging RPCs for Query/Retrieve - logging utility ; 30 Dec 2011 2:20 PM
"RTN","MAGDQRUL",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDQRUL",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQRUL",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQRUL",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQRUL",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQRUL",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQRUL",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQRUL",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQRUL",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQRUL",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQRUL",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQRUL",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQRUL",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQRUL",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQRUL",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQRUL",17,0)
 ;;
"RTN","MAGDQRUL",18,0)
 Q
"RTN","MAGDQRUL",19,0)
 ;
"RTN","MAGDQRUL",20,0)
LOG(TYP,DETAIL,TXT) N D1,D2,D3,LOC,X
"RTN","MAGDQRUL",21,0)
 ; check usage
"RTN","MAGDQRUL",22,0)
 I $G(TYP)="" S OUT(1)="-1^Audit type not provided" Q
"RTN","MAGDQRUL",23,0)
 I '$D(DETAIL) S OUT(1)="-2^Audit detail must be defined" Q
"RTN","MAGDQRUL",24,0)
 ;
"RTN","MAGDQRUL",25,0)
 D:'$G(DT) DT^DICRW
"RTN","MAGDQRUL",26,0)
 S D1=$O(^MAGDAUDT(2006.5733,"B",DT,""))
"RTN","MAGDQRUL",27,0)
 S:'D1 D1=$$ADD($NA(^MAGDAUDT(2006.5733)),"QUERY/RETRIEVE STATISTICS",2006.5733,DT,1)
"RTN","MAGDQRUL",28,0)
 ;
"RTN","MAGDQRUL",29,0)
 S LOC=$G(DUZ(2)) S:'LOC LOC=$$KSP^XUPARAM("INST")
"RTN","MAGDQRUL",30,0)
 S D1=$O(^MAGDAUDT(2006.5733,DT,1,"B",LOC,""))
"RTN","MAGDQRUL",31,0)
 S:'D1 D1=$$ADD($NA(^MAGDAUDT(2006.5733,DT,1)),"",2006.57331,LOC,1)
"RTN","MAGDQRUL",32,0)
 ;
"RTN","MAGDQRUL",33,0)
 S D2=$O(^MAGDAUDT(2006.5733,DT,1,D1,1,"B",TYP,""))
"RTN","MAGDQRUL",34,0)
 S:'D2 D2=$$ADD($NA(^MAGDAUDT(2006.5733,DT,1,D1,1)),"",2006.57332,TYP,0)
"RTN","MAGDQRUL",35,0)
 L +^MAGDAUDT(2006.5733,DT,1,D1,1,D2):1E9 ; Background job MUST wait
"RTN","MAGDQRUL",36,0)
 S X=$G(^MAGDAUDT(2006.5733,DT,1,D1,1,D2,0))
"RTN","MAGDQRUL",37,0)
 S $P(X,"^",2)=$P(X,"^",2)+1
"RTN","MAGDQRUL",38,0)
 S ^MAGDAUDT(2006.5733,DT,1,D1,1,D2,0)=X
"RTN","MAGDQRUL",39,0)
 L -^MAGDAUDT(2006.5733,DT,1,D1,1,D2)
"RTN","MAGDQRUL",40,0)
 ;
"RTN","MAGDQRUL",41,0)
 D:DETAIL'=""
"RTN","MAGDQRUL",42,0)
 . S D3=$O(^MAGDAUDT(2006.5733,DT,1,D1,1,D2,1,"B",DETAIL,""))
"RTN","MAGDQRUL",43,0)
 . S:'D3 D3=$$ADD($NA(^MAGDAUDT(2006.5733,DT,1,D1,1,D2,1)),"",2006.57333,DETAIL,0)
"RTN","MAGDQRUL",44,0)
 . L +^MAGDAUDT(2006.5733,DT,1,D1,1,D2,1,D3):1E9 ; Background job MUST wait
"RTN","MAGDQRUL",45,0)
 . S X=$G(^MAGDAUDT(2006.5733,DT,1,D1,1,D2,1,D3,0))
"RTN","MAGDQRUL",46,0)
 . S $P(X,"^",2)=$P(X,"^",2)+1
"RTN","MAGDQRUL",47,0)
 . S ^MAGDAUDT(2006.5733,DT,1,D1,1,D2,1,D3,0)=X
"RTN","MAGDQRUL",48,0)
 . L -^MAGDAUDT(2006.5733,DT,1,D1,1,D2,1,D3)
"RTN","MAGDQRUL",49,0)
 . Q
"RTN","MAGDQRUL",50,0)
 ;
"RTN","MAGDQRUL",51,0)
 S OUT(1)=$G(TXT)
"RTN","MAGDQRUL",52,0)
 Q
"RTN","MAGDQRUL",53,0)
 ;
"RTN","MAGDQRUL",54,0)
ADD(ROOT,F1,F2,VAL,DINUM) N D0,NAM,O,X
"RTN","MAGDQRUL",55,0)
 S ROOT=$E(ROOT,1,$L(ROOT)-1)_",",NAM=ROOT_"0)",O=ROOT_""" "")"
"RTN","MAGDQRUL",56,0)
 L +@NAM:1E9 ; Background job MUST wait
"RTN","MAGDQRUL",57,0)
 S X=$G(@NAM)
"RTN","MAGDQRUL",58,0)
 S $P(X,"^",1,2)=F1_"^"_F2
"RTN","MAGDQRUL",59,0)
 S D0=$S(DINUM:+VAL,1:$O(@O,-1)+1),$P(X,"^",3)=D0
"RTN","MAGDQRUL",60,0)
 S $P(X,"^",4)=$P(X,"^",4)+1
"RTN","MAGDQRUL",61,0)
 S @NAM=X
"RTN","MAGDQRUL",62,0)
 S @(ROOT_D0_",0)")=VAL
"RTN","MAGDQRUL",63,0)
 S @(ROOT_"""B"",$P(VAL,""^"",1),D0)")=""
"RTN","MAGDQRUL",64,0)
 L -@NAM
"RTN","MAGDQRUL",65,0)
 Q D0
"RTN","MAGDRPC8")
0^30^B63429339
"RTN","MAGDRPC8",1,0)
MAGDRPC8 ;WOIFO/EdM/BT - RPCs for Master Files ; 29 Mar 2012 11:59 AM
"RTN","MAGDRPC8",2,0)
 ;;3.0;IMAGING;**11,30,51,54,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDRPC8",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDRPC8",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPC8",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDRPC8",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDRPC8",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDRPC8",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDRPC8",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDRPC8",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDRPC8",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDRPC8",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDRPC8",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDRPC8",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDRPC8",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDRPC8",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPC8",17,0)
 ;;
"RTN","MAGDRPC8",18,0)
 Q
"RTN","MAGDRPC8",19,0)
 ;
"RTN","MAGDRPC8",20,0)
UPDTAPP(OUT,APP) ; RPC = MAG DICOM UPDATE SCU LIST
"RTN","MAGDRPC8",21,0)
 N A,D0,D1,DIMSE,GWLOC,GWNAM,HDR,I,MIN,N,NOW,P5,P7,PLUS,SERVNAM,UP,X
"RTN","MAGDRPC8",22,0)
 S (GWNAM,GWLOC)="",N=0
"RTN","MAGDRPC8",23,0)
 S A="" F  S A=$O(APP(A)) Q:A=""  D
"RTN","MAGDRPC8",24,0)
 . Q:A["_"
"RTN","MAGDRPC8",25,0)
 . S X=APP(A) F I=1:1:7 S:$P(X,"^",I)="" N=N+1
"RTN","MAGDRPC8",26,0)
 . S:GWNAM="" GWNAM=$P(X,"^",5)
"RTN","MAGDRPC8",27,0)
 . S:GWLOC="" GWLOC=$P(X,"^",7)
"RTN","MAGDRPC8",28,0)
 . S:GWNAM'=$P(X,"^",5) N=N+1
"RTN","MAGDRPC8",29,0)
 . S:GWLOC'=$P(X,"^",7) N=N+1
"RTN","MAGDRPC8",30,0)
 . S:'N A($P(X,"^",1))=A ; ^MAGDMFBS guarantees unique names
"RTN","MAGDRPC8",31,0)
 . Q
"RTN","MAGDRPC8",32,0)
 I N S OUT="-1,Missing or Inconsistent Parameters." Q
"RTN","MAGDRPC8",33,0)
 ;
"RTN","MAGDRPC8",34,0)
 L +^MAG(2006.587,0):1E9 ; Background task MUST wait
"RTN","MAGDRPC8",35,0)
 S HDR=$G(^MAG(2006.587,0))
"RTN","MAGDRPC8",36,0)
 S $P(HDR,"^",1,2)="DICOM TRANSMIT DESTINATION^2006.587"
"RTN","MAGDRPC8",37,0)
 ;
"RTN","MAGDRPC8",38,0)
 S NOW=$$NOW^XLFDT(),(MIN,PLUS,UP)=0
"RTN","MAGDRPC8",39,0)
 ;
"RTN","MAGDRPC8",40,0)
 S D0="" F  S D0=$O(^MAG(2006.587,"D",GWNAM,GWLOC,D0)) Q:D0=""  D
"RTN","MAGDRPC8",41,0)
 . S X=$G(^MAG(2006.587,D0,0)),SERVNAM=$P(X,"^",1) Q:SERVNAM=""
"RTN","MAGDRPC8",42,0)
 . S P5=$P(X,"^",5),P7=$P(X,"^",7)
"RTN","MAGDRPC8",43,0)
 . I P5'="",P7'="" K ^MAG(2006.587,"C",SERVNAM,P7,P5,D0),^MAG(2006.587,"D",P5,P7,D0)
"RTN","MAGDRPC8",44,0)
 . I '$D(A(SERVNAM)) D  Q
"RTN","MAGDRPC8",45,0)
 . . K ^MAG(2006.587,D0),^MAG(2006.587,"B",SERVNAM,D0) S MIN=MIN+1
"RTN","MAGDRPC8",46,0)
 . . Q
"RTN","MAGDRPC8",47,0)
 . S X=APP(A(SERVNAM)),$P(X,"^",8)=NOW K APP(A(SERVNAM))
"RTN","MAGDRPC8",48,0)
 . S ^MAG(2006.587,D0,0)=$P(X,"^",1,8),UP=UP+1
"RTN","MAGDRPC8",49,0)
 . S ^MAG(2006.587,"C",SERVNAM,GWLOC,GWNAM,D0)=""
"RTN","MAGDRPC8",50,0)
 . S ^MAG(2006.587,"D",GWNAM,GWLOC,D0)=""
"RTN","MAGDRPC8",51,0)
 . K DIMSE S DIMSE=A(SERVNAM)_"_"
"RTN","MAGDRPC8",52,0)
 . S X=DIMSE F  S X=$O(APP(X)) Q:$E(X,1,$L(DIMSE))'=DIMSE  D
"RTN","MAGDRPC8",53,0)
 . . S N=$P(X,"_",2) Q:N=""
"RTN","MAGDRPC8",54,0)
 . . S DIMSE(N)=APP(X)
"RTN","MAGDRPC8",55,0)
 . . S DIMSE("C-ECHO")="1^1"
"RTN","MAGDRPC8",56,0)
 . . Q
"RTN","MAGDRPC8",57,0)
 . K ^MAG(2006.587,D0,1)
"RTN","MAGDRPC8",58,0)
 . S D1=0,X="" F  S X=$O(DIMSE(X)) Q:X=""  D
"RTN","MAGDRPC8",59,0)
 . . S D1=D1+1,^MAG(2006.587,D0,1,D1,0)=X_"^"_DIMSE(X)
"RTN","MAGDRPC8",60,0)
 . . S ^MAG(2006.587,D0,1,"B",X,D1)=""
"RTN","MAGDRPC8",61,0)
 . . Q
"RTN","MAGDRPC8",62,0)
 . S:D1 ^MAG(2006.587,D0,1,0)="^2006.5871SA^"_D1_"^"_D1
"RTN","MAGDRPC8",63,0)
 . Q
"RTN","MAGDRPC8",64,0)
 S $P(HDR,"^",4)=$P(HDR,"^",4)-MIN
"RTN","MAGDRPC8",65,0)
 ;
"RTN","MAGDRPC8",66,0)
 S A="" F  S A=$O(APP(A)) Q:A=""  D
"RTN","MAGDRPC8",67,0)
 . Q:A["_"
"RTN","MAGDRPC8",68,0)
 . S X=APP(A),$P(X,"^",8)=NOW
"RTN","MAGDRPC8",69,0)
 . S D0=$O(^MAG(2006.587," "),-1)+1,PLUS=PLUS+1,$P(HDR,"^",3)=D0
"RTN","MAGDRPC8",70,0)
 . S ^MAG(2006.587,D0,0)=$P(X,"^",1,8),SERVNAM=$P(X,"^",1)
"RTN","MAGDRPC8",71,0)
 . S ^MAG(2006.587,"B",SERVNAM,D0)=""
"RTN","MAGDRPC8",72,0)
 . S ^MAG(2006.587,"C",SERVNAM,GWLOC,GWNAM,D0)=""
"RTN","MAGDRPC8",73,0)
 . S ^MAG(2006.587,"D",GWNAM,GWLOC,D0)=""
"RTN","MAGDRPC8",74,0)
 . K DIMSE S DIMSE=A_"_"
"RTN","MAGDRPC8",75,0)
 . S X=DIMSE F  S X=$O(APP(X)) Q:$E(X,1,$L(DIMSE))'=DIMSE  D
"RTN","MAGDRPC8",76,0)
 . . S N=$P(X,"_",2) Q:N=""
"RTN","MAGDRPC8",77,0)
 . . S DIMSE(N)=APP(X)
"RTN","MAGDRPC8",78,0)
 . . S DIMSE("C-ECHO")="1^1"
"RTN","MAGDRPC8",79,0)
 . . Q
"RTN","MAGDRPC8",80,0)
 . K ^MAG(2006.587,D0,1)
"RTN","MAGDRPC8",81,0)
 . S D1=0,X="" F  S X=$O(DIMSE(X)) Q:X=""  D
"RTN","MAGDRPC8",82,0)
 . . S D1=D1+1,^MAG(2006.587,D0,1,D1,0)=X_"^"_DIMSE(X)
"RTN","MAGDRPC8",83,0)
 . . S ^MAG(2006.587,D0,1,"B",X,D1)=""
"RTN","MAGDRPC8",84,0)
 . . Q
"RTN","MAGDRPC8",85,0)
 . S:D1 ^MAG(2006.587,D0,1,0)="^2006.5871SA^"_D1_"^"_D1
"RTN","MAGDRPC8",86,0)
 . Q
"RTN","MAGDRPC8",87,0)
 S (N,D0)=0 F  S D0=$O(^MAG(2006.587,D0)) Q:'D0  S N=N+1
"RTN","MAGDRPC8",88,0)
 S $P(HDR,"^",4)=N
"RTN","MAGDRPC8",89,0)
 S ^MAG(2006.587,0)=HDR
"RTN","MAGDRPC8",90,0)
 L -^MAG(2006.587,0)
"RTN","MAGDRPC8",91,0)
 S OUT="1"
"RTN","MAGDRPC8",92,0)
 S:PLUS OUT=OUT_", "_PLUS_" added"
"RTN","MAGDRPC8",93,0)
 S:MIN OUT=OUT_", "_MIN_" removed"
"RTN","MAGDRPC8",94,0)
 S:UP OUT=OUT_", "_UP_" updated"
"RTN","MAGDRPC8",95,0)
 Q
"RTN","MAGDRPC8",96,0)
 ;
"RTN","MAGDRPC8",97,0)
UPDTGW(OUT,ONAM,NNAM,OLOC,NLOC) ; RPC = MAG DICOM UPDATE GATEWAY NAME
"RTN","MAGDRPC8",98,0)
 N D0,P1,P5,P7,N
"RTN","MAGDRPC8",99,0)
 I $G(NNAM)="" S OUT="-1,No Gateway Name specified" Q
"RTN","MAGDRPC8",100,0)
 I '$G(NLOC) S OUT="-2,No Gateway Location specified" Q
"RTN","MAGDRPC8",101,0)
 S OLOC=$G(OLOC),ONAM=$G(ONAM)
"RTN","MAGDRPC8",102,0)
 S (N,D0)=0 F  S D0=$O(^MAG(2006.587,D0)) Q:'D0  D
"RTN","MAGDRPC8",103,0)
 . S X=$G(^MAG(2006.587,D0,0)),P5=$P(X,"^",5) Q:P5'=ONAM
"RTN","MAGDRPC8",104,0)
 . S P1=$P(X,"^",1),P7=$P(X,"^",7)
"RTN","MAGDRPC8",105,0)
 . I OLOC'="",P5'="",P1'="" K ^MAG(2006.587,"C",P1,OLOC,P5,D0)
"RTN","MAGDRPC8",106,0)
 . I OLOC'="",P5'="" K ^MAG(2006.587,"D",P5,OLOC,D0)
"RTN","MAGDRPC8",107,0)
 . S $P(X,"^",5)=NNAM,$P(X,"^",7)=NLOC
"RTN","MAGDRPC8",108,0)
 . S ^MAG(2006.587,D0,0)=X
"RTN","MAGDRPC8",109,0)
 . S:P1'="" ^MAG(2006.587,"C",P1,NLOC,NNAM,D0)=""
"RTN","MAGDRPC8",110,0)
 . S ^MAG(2006.587,"D",NNAM,NLOC,D0)=""
"RTN","MAGDRPC8",111,0)
 . S N=N+1
"RTN","MAGDRPC8",112,0)
 . Q
"RTN","MAGDRPC8",113,0)
 S OUT=N
"RTN","MAGDRPC8",114,0)
 Q
"RTN","MAGDRPC8",115,0)
 ;
"RTN","MAGDRPC8",116,0)
SIBS(P0,T) N MAGLOC,P1,P2
"RTN","MAGDRPC8",117,0)
 S T(P0)=""
"RTN","MAGDRPC8",118,0)
 D SIBLING^XUAF4("MAGLOC",P0,"PARENT FACILITY") ; General API, IA #2171
"RTN","MAGDRPC8",119,0)
 S P1="" F  S P1=$O(MAGLOC("P",P1)) Q:P1=""  D
"RTN","MAGDRPC8",120,0)
 . S P2="" F  S P2=$O(MAGLOC("P",P1,"C",P2)) Q:P2=""  S T(P2)=""
"RTN","MAGDRPC8",121,0)
 . Q
"RTN","MAGDRPC8",122,0)
 Q
"RTN","MAGDRPC8",123,0)
 ;
"RTN","MAGDRPC8",124,0)
LOCS(OUT) ; RPC = MAG DICOM VALID LOCATIONS
"RTN","MAGDRPC8",125,0)
 N D0,I,MAGM,N,P1,MAGR,T
"RTN","MAGDRPC8",126,0)
 S N=1
"RTN","MAGDRPC8",127,0)
 S D0=0 F  S D0=$O(^MAG(2006.1,D0)) Q:'D0  D
"RTN","MAGDRPC8",128,0)
 . S X=$G(^MAG(2006.1,D0,0)),P1=$P(X,"^",1) Q:P1=""
"RTN","MAGDRPC8",129,0)
 . I +P1=P1 S T(P1)="" Q
"RTN","MAGDRPC8",130,0)
 . D FIND^DIC(4,"","","BX",P1,"*","","","","MAGR","MAGM") ; IA #4389
"RTN","MAGDRPC8",131,0)
 . S I=0 F  S I=$O(MAGR("DILIST",2,I)) Q:'I  D
"RTN","MAGDRPC8",132,0)
 . . S P1=MAGR("DILIST",2,I) I P1 K MAGR S T(P1)=""
"RTN","MAGDRPC8",133,0)
 . . Q
"RTN","MAGDRPC8",134,0)
 . Q
"RTN","MAGDRPC8",135,0)
 I $T(+1^XUPARAM)'="" S P1=$$KSP^XUPARAM("INST") D:P1 SIBS(P1,.T)
"RTN","MAGDRPC8",136,0)
 S P1=+$G(^DD("SITE",1)) D:P1 SIBS(P1,.T)
"RTN","MAGDRPC8",137,0)
 ;
"RTN","MAGDRPC8",138,0)
 S P1="" F  S P1=$O(T(P1)) Q:P1=""  D
"RTN","MAGDRPC8",139,0)
 . S N=N+1,OUT(N)=P1_"^"_$$GET1^DIQ(4,P1,.01)_"^"_$$GET1^DIQ(4,P1,99)
"RTN","MAGDRPC8",140,0)
 . Q
"RTN","MAGDRPC8",141,0)
 S OUT(1)=N-1
"RTN","MAGDRPC8",142,0)
 Q
"RTN","MAGDRPC8",143,0)
 ;
"RTN","MAGDRPC8",144,0)
GETPLACE(OUT,LOCATION) ; RPC = MAG DICOM GET PLACE
"RTN","MAGDRPC8",145,0)
 N D0,P1,MAGM,MAGR,X
"RTN","MAGDRPC8",146,0)
 S LOCATION=+$G(LOCATION)
"RTN","MAGDRPC8",147,0)
 S OUT="-1,Location """_LOCATION_""" not found."
"RTN","MAGDRPC8",148,0)
 S D0=0 F  S D0=$O(^MAG(2006.1,D0)) Q:'D0  D  Q:OUT>0
"RTN","MAGDRPC8",149,0)
 . S X=$G(^MAG(2006.1,D0,0)),P1=$P(X,"^",1) Q:P1=""
"RTN","MAGDRPC8",150,0)
 . I +P1=P1,LOCATION=P1 S OUT=D0 Q
"RTN","MAGDRPC8",151,0)
 . D FIND^DIC(4,"","","BX",P1,"*","","","","MAGR","MAGM")
"RTN","MAGDRPC8",152,0)
 . S I=0 F  S I=$O(MAGR("DILIST",2,I)) Q:'I  D
"RTN","MAGDRPC8",153,0)
 . . I LOCATION=MAGR("DILIST",2,I) S OUT=D0
"RTN","MAGDRPC8",154,0)
 . . Q
"RTN","MAGDRPC8",155,0)
 . Q
"RTN","MAGDRPC8",156,0)
 Q
"RTN","MAGDRPC8",157,0)
 ;
"RTN","MAGDRPC8",158,0)
SETPACS(OUT,D0) ; RPC = MAG DICOM SET PACS PARAMS
"RTN","MAGDRPC8",159,0)
 N X
"RTN","MAGDRPC8",160,0)
 I '$G(D0) S OUT="-1,No Place Specified." Q
"RTN","MAGDRPC8",161,0)
 I '$D(^MAG(2006.1,D0)) S OUT="-2,Invalid Place Specified." Q
"RTN","MAGDRPC8",162,0)
 ;
"RTN","MAGDRPC8",163,0)
 ; There is a PACS
"RTN","MAGDRPC8",164,0)
 S $P(^MAG(2006.1,D0,"PACS"),"^",1)=1
"RTN","MAGDRPC8",165,0)
 ;
"RTN","MAGDRPC8",166,0)
 ; Number of days to retain "PACS" images
"RTN","MAGDRPC8",167,0)
 S X=$P($G(^MAG(2006.1,D0,1)),"^",5)
"RTN","MAGDRPC8",168,0)
 S:'X $P(^MAG(2006.1,D0,1),"^",5)=30
"RTN","MAGDRPC8",169,0)
 ;
"RTN","MAGDRPC8",170,0)
 ; Set minimum % of free disk space to trigger automatic file delete
"RTN","MAGDRPC8",171,0)
 S X=$P($G(^MAG(2006.1,D0,3)),"^",6)
"RTN","MAGDRPC8",172,0)
 S:'X $P(^MAG(2006.1,D0,3),"^",6)=25
"RTN","MAGDRPC8",173,0)
 S OUT=1
"RTN","MAGDRPC8",174,0)
 Q
"RTN","MAGDRPC8",175,0)
 ;
"RTN","MAGDRPC8",176,0)
HIGHHL7(OUT) ; RPC = MAG DICOM GET HIGHEST HL7
"RTN","MAGDRPC8",177,0)
 S OUT=+$O(^MAGDHL7(2006.5," "),-1)
"RTN","MAGDRPC8",178,0)
 Q
"RTN","MAGDRPC8",179,0)
 ;
"RTN","MAGDRPC8",180,0)
FINDLOC(OUT,NAME) ; RPC = MAG DICOM FIND LOCATION
"RTN","MAGDRPC8",181,0)
 ; NAME is the location to find in either Institution Name or Station Number
"RTN","MAGDRPC8",182,0)
 ;         fields of the Institution File (#4)
"RTN","MAGDRPC8",183,0)
 ;
"RTN","MAGDRPC8",184,0)
 N MAGM,MAGR,I
"RTN","MAGDRPC8",185,0)
 S OUT="-1,Invalid location """_NAME_"""."
"RTN","MAGDRPC8",186,0)
 ;
"RTN","MAGDRPC8",187,0)
 ; Find NAME in either Institution Name or Station Number fields
"RTN","MAGDRPC8",188,0)
 D FIND^DIC(4,"",.01,"BXA",NAME,"*","B^D","","","MAGR","MAGM")
"RTN","MAGDRPC8",189,0)
 ;
"RTN","MAGDRPC8",190,0)
 I MAGR("DILIST",0) D
"RTN","MAGDRPC8",191,0)
 . S I=$O(MAGR("DILIST",2,"")) ; If multiple found, return the first IEN
"RTN","MAGDRPC8",192,0)
 . S OUT=MAGR("DILIST",2,I)
"RTN","MAGDRPC8",193,0)
 Q
"RTN","MAGDRPC8",194,0)
 ;
"RTN","MAGDRPC8",195,0)
VALIMGT(OUT) ; RPC = MAG DICOM GET IMAGING TYPES
"RTN","MAGDRPC8",196,0)
 N N,X
"RTN","MAGDRPC8",197,0)
 S N=1
"RTN","MAGDRPC8",198,0)
 ; Lists of valid imaging types
"RTN","MAGDRPC8",199,0)
 S X="" F  S X=$O(^RA(79.2,"C",X)) Q:X=""  S N=N+1,OUT(N)="RAD^"_X
"RTN","MAGDRPC8",200,0)
 S X="" F  S X=$O(^MAG(2005.84,"C",X)) Q:X=""  S N=N+1,OUT(N)="CON^"_X
"RTN","MAGDRPC8",201,0)
 S OUT(1)=N-1
"RTN","MAGDRPC8",202,0)
 Q
"RTN","MAGDRPC8",203,0)
 ;
"RTN","MAGDRPC8",204,0)
CORRECT(OUT,LOCATION,MACHID) ; RPC = MAG DICOM INCORRECT IMAGE CT
"RTN","MAGDRPC8",205,0)
 ; Check for images needing corrections
"RTN","MAGDRPC8",206,0)
 N CNT,D0,STUDY
"RTN","MAGDRPC8",207,0)
 I '$G(LOCATION) S OUT="-1,No Location Specified" Q
"RTN","MAGDRPC8",208,0)
 I $G(MACHID)="" S OUT="-2,No Gateway Specified" Q
"RTN","MAGDRPC8",209,0)
 S OUT=0
"RTN","MAGDRPC8",210,0)
 Q:'$O(^MAGD(2006.575,0))
"RTN","MAGDRPC8",211,0)
 Q:'$D(^MAGD(2006.575,"F",LOCATION))
"RTN","MAGDRPC8",212,0)
 S STUDY="" F  S STUDY=$O(^MAGD(2006.575,"F",LOCATION,STUDY)) Q:STUDY=""  D
"RTN","MAGDRPC8",213,0)
 . S D0=0 S D0=$O(^MAGD(2006.575,"F",LOCATION,STUDY,D0)) Q:'D0  D
"RTN","MAGDRPC8",214,0)
 . . Q:'$D(^MAGD(2006.575,D0,0))
"RTN","MAGDRPC8",215,0)
 . . S:MACHID=$P($G(^MAGD(2006.575,D0,1)),"^",4) OUT=OUT+1
"RTN","MAGDRPC8",216,0)
 . . Q
"RTN","MAGDRPC8",217,0)
 . Q
"RTN","MAGDRPC8",218,0)
 Q
"RTN","MAGDRPC8",219,0)
 ;
"RTN","MAGDRPC8",220,0)
HL7PTR(OUT,ACTION,VALUE) ; RPC = MAG DICOM HL7 POINTER ACTION
"RTN","MAGDRPC8",221,0)
 ; Manipulate HL7 Pointer
"RTN","MAGDRPC8",222,0)
 N D0,P1,P2,X,Y
"RTN","MAGDRPC8",223,0)
 S ACTION=$G(ACTION),VALUE=$G(VALUE)
"RTN","MAGDRPC8",224,0)
 S OUT="-2,Invalid Request: """_ACTION_"""."
"RTN","MAGDRPC8",225,0)
 I ACTION="GetDate" D  Q
"RTN","MAGDRPC8",226,0)
 . S X=$G(^MAGDHL7(2006.5,+VALUE,0))
"RTN","MAGDRPC8",227,0)
 . I X="" S OUT="-1,Invalid Pointer """_VALUE_"""." Q
"RTN","MAGDRPC8",228,0)
 . S OUT=$$FMTE^XLFDT($P(X,"^",3),1)
"RTN","MAGDRPC8",229,0)
 . Q
"RTN","MAGDRPC8",230,0)
 I ACTION="DatePtr" D  Q
"RTN","MAGDRPC8",231,0)
 . S Y=$O(^MAGDHL7(2006.5,"C",VALUE),-1)
"RTN","MAGDRPC8",232,0)
 . I 'Y D  ; before any date on file
"RTN","MAGDRPC8",233,0)
 . . ; if the requested date is before the first entry,
"RTN","MAGDRPC8",234,0)
 . . ; move the pointer to the first entry
"RTN","MAGDRPC8",235,0)
 . . S OUT=0
"RTN","MAGDRPC8",236,0)
 . . Q
"RTN","MAGDRPC8",237,0)
 . E  D  ; if the requested date is in the cross reference, use it.
"RTN","MAGDRPC8",238,0)
 . . S Y=$O(^MAGDHL7(2006.5,"C",Y,""))
"RTN","MAGDRPC8",239,0)
 . . I Y S OUT=Y ; found date
"RTN","MAGDRPC8",240,0)
 . . E  D
"RTN","MAGDRPC8",241,0)
 . . . ; otherwise, find the appropriate entry the hard way
"RTN","MAGDRPC8",242,0)
 . . . S D0=$O(^MAGDHL7(2006.5,0))
"RTN","MAGDRPC8",243,0)
 . . . S Y=$P($G(^MAGDHL7(2006.5,D0,0)),"^",3) I Y'<X S OUT=0 Q
"RTN","MAGDRPC8",244,0)
 . . . S D0=" " F  S D0=$O(^MAGDHL7(2006.5,D0),-1) Q:'D0  D  Q:OUT
"RTN","MAGDRPC8",245,0)
 . . . . S Y=$P($G(^MAGDHL7(2006.5,D0,0)),"^",3) S:Y<X OUT=D0
"RTN","MAGDRPC8",246,0)
 . . . . Q
"RTN","MAGDRPC8",247,0)
 . . . Q
"RTN","MAGDRPC8",248,0)
 . . Q
"RTN","MAGDRPC8",249,0)
 . Q
"RTN","MAGDRPC8",250,0)
 Q
"RTN","MAGDRPC8",251,0)
 ;
"RTN","MAGDRPC9")
0^31^B73201561
"RTN","MAGDRPC9",1,0)
MAGDRPC9 ;WOIFO/EdM/MLH/JSL/SAF/DAC - Imaging RPCs ; 11 Oct 2012 2:46 PM
"RTN","MAGDRPC9",2,0)
 ;;3.0;IMAGING;**50,54,53,49,123,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDRPC9",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDRPC9",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPC9",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDRPC9",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDRPC9",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDRPC9",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDRPC9",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDRPC9",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDRPC9",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDRPC9",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDRPC9",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDRPC9",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDRPC9",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDRPC9",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPC9",17,0)
 ;;
"RTN","MAGDRPC9",18,0)
 Q
"RTN","MAGDRPC9",19,0)
 ;
"RTN","MAGDRPC9",20,0)
UIDROOT(OUT) ; RPC = MAG DICOM GET UID ROOT
"RTN","MAGDRPC9",21,0)
 S OUT=$G(^MAGD(2006.15,1,"UID ROOT"))
"RTN","MAGDRPC9",22,0)
 Q
"RTN","MAGDRPC9",23,0)
 ;
"RTN","MAGDRPC9",24,0)
NEWUID(OUT,OLD,NEW,IMAGE,DBTYPE) ; RPC = MAG NEW SOP INSTANCE UID
"RTN","MAGDRPC9",25,0)
 N D0,L,X,SOPREC,ORIGSOP
"RTN","MAGDRPC9",26,0)
 S DBTYPE=$G(DBTYPE,"OLD")
"RTN","MAGDRPC9",27,0)
 S IMAGE=+$G(IMAGE),OLD=$G(OLD)
"RTN","MAGDRPC9",28,0)
 S:$G(NEW)="" NEW=OLD
"RTN","MAGDRPC9",29,0)
 D:DBTYPE="OLD"
"RTN","MAGDRPC9",30,0)
 . S D0=IMAGE
"RTN","MAGDRPC9",31,0)
 . I 'D0 S OUT="-2,Cannot find image with UID "_OLD Q
"RTN","MAGDRPC9",32,0)
 . S OUT=$P($G(^MAG(2005,D0,"SOP")),"^",2) Q:OUT'=""
"RTN","MAGDRPC9",33,0)
 . S L=$L(NEW,".")-1,X=$P(NEW,".",L+1),L=$P(NEW,".",1,L)_"."
"RTN","MAGDRPC9",34,0)
 . L +^MAG(2005,"P"):1E9 ; Background process MUST wait
"RTN","MAGDRPC9",35,0)
 . S OUT="" F  D  Q:OUT'=""
"RTN","MAGDRPC9",36,0)
 . . S OUT=L_X
"RTN","MAGDRPC9",37,0)
 . . I $L(OUT)>64 S OUT="-3,Cannot use "_NEW_" to create valid UID" Q
"RTN","MAGDRPC9",38,0)
 . . I $D(^MAG(2005,"P",OUT)) S OUT="",X=X+1 Q
"RTN","MAGDRPC9",39,0)
 . . S $P(^MAG(2005,D0,"SOP"),"^",2)=OUT
"RTN","MAGDRPC9",40,0)
 . . S ^MAG(2005,"P",OUT,D0)=1
"RTN","MAGDRPC9",41,0)
 . . Q
"RTN","MAGDRPC9",42,0)
 . L -^MAG(2005,"P")
"RTN","MAGDRPC9",43,0)
 . Q
"RTN","MAGDRPC9",44,0)
 D:DBTYPE="NEW"
"RTN","MAGDRPC9",45,0)
 . S D0=0 S:OLD'="" D0=$O(^MAGV(2005.64,"B",OLD,""))
"RTN","MAGDRPC9",46,0)
 . I IMAGE,D0,IMAGE'=D0 S OUT="-1,UID cannot belong to multiple images ("_IMAGE_"/"_D0_")" Q
"RTN","MAGDRPC9",47,0)
 . I IMAGE,'D0 S D0=IMAGE
"RTN","MAGDRPC9",48,0)
 . S SOPREC=$G(^MAGV(2005.64,D0,0))
"RTN","MAGDRPC9",49,0)
 . I SOPREC="" S OUT="-2,IMAGE SOP INSTANCE record not found ("_D0_")" Q
"RTN","MAGDRPC9",50,0)
 . S ORIGSOP=$P(SOPREC,"^",2)
"RTN","MAGDRPC9",51,0)
 . I ORIGSOP'="" D  Q
"RTN","MAGDRPC9",52,0)
 . . I OLD=ORIGSOP S OUT=$P(SOPREC,"^",1) Q
"RTN","MAGDRPC9",53,0)
 . . S OUT="-3,ORIGINAL SOP INSTANCE UID for image ("_ORIGSOP
"RTN","MAGDRPC9",54,0)
 . . S OUT=OUT_") does not match value sent ("_OLD
"RTN","MAGDRPC9",55,0)
 . . Q
"RTN","MAGDRPC9",56,0)
 . ; need to verify and store the new SOP
"RTN","MAGDRPC9",57,0)
 . S L=$L(NEW,".")-1,X=$P(NEW,".",L+1),L=$P(NEW,".",1,L)_"."
"RTN","MAGDRPC9",58,0)
 . L +^MAGV(2005.64,"B"):1E9 ; Background process MUST wait
"RTN","MAGDRPC9",59,0)
 . S OUT="" F  D  Q:OUT'=""
"RTN","MAGDRPC9",60,0)
 . . S OUT=L_X
"RTN","MAGDRPC9",61,0)
 . . I $L(OUT)>64 S OUT="-3,Cannot use "_NEW_" to create valid UID" Q
"RTN","MAGDRPC9",62,0)
 . . I $D(^MAGV(2005.64,"B",OUT)) S OUT="",X=X+1 Q
"RTN","MAGDRPC9",63,0)
 . . S $P(SOPREC,"^",2)=$P(SOPREC,"^",1) K ^MAGV(2005.64,"B",$P(SOPREC,"^",1),D0)
"RTN","MAGDRPC9",64,0)
 . . S $P(SOPREC,"^",1)=OUT,^MAGV(2005.64,"B",OUT,D0)=""
"RTN","MAGDRPC9",65,0)
 . . S ^MAGV(2005.64,D0,0)=SOPREC
"RTN","MAGDRPC9",66,0)
 . . Q
"RTN","MAGDRPC9",67,0)
 . L -^MAGV(2005.64,"B")
"RTN","MAGDRPC9",68,0)
 . Q
"RTN","MAGDRPC9",69,0)
 Q
"RTN","MAGDRPC9",70,0)
 ;
"RTN","MAGDRPC9",71,0)
QRNEWUID(IMAGE,DBTYPE) ; Get updated UID for Query/Retrieve
"RTN","MAGDRPC9",72,0)
 N DATE,DH,FAIL,I,OLD,OUT,NEW,LASTUID,NEXTUID,TIME,X,Y
"RTN","MAGDRPC9",73,0)
 S DBTYPE=$G(DBTYPE,"OLD")
"RTN","MAGDRPC9",74,0)
 S IMAGE=+$G(IMAGE)
"RTN","MAGDRPC9",75,0)
 D:DBTYPE="OLD"  ; find new UID, if any, in legacy DB
"RTN","MAGDRPC9",76,0)
 . S NEW=$P($G(^MAG(2005,IMAGE,"SOP")),"^",2)
"RTN","MAGDRPC9",77,0)
 . Q
"RTN","MAGDRPC9",78,0)
 D:DBTYPE="NEW"  ; find new UID, if any, in P34 DB
"RTN","MAGDRPC9",79,0)
 . S NEW="" S:$P($G(^MAGV(2005.64,IMAGE,0)),"^",2)'="" NEW=$P(^(0),"^",1)
"RTN","MAGDRPC9",80,0)
 . Q
"RTN","MAGDRPC9",81,0)
 Q:NEW'="" NEW
"RTN","MAGDRPC9",82,0)
 ; Generate the next UID using date/time and counter
"RTN","MAGDRPC9",83,0)
 L +^MAGDICOM(2006.563,1,"MACHINE ID"):1E9 ; Background process must wait
"RTN","MAGDRPC9",84,0)
 S LASTUID=$G(^MAGDICOM(2006.563,1,"LAST UID"))
"RTN","MAGDRPC9",85,0)
 ; Can't use D NOW^XLFDT to set DH because it is incorrect at midnight
"RTN","MAGDRPC9",86,0)
 S DH=$H,X=$$HTFM^XLFDT(DH,1),DATE=X+17000000
"RTN","MAGDRPC9",87,0)
 S X=$P(DH,",",2) D
"RTN","MAGDRPC9",88,0)
 . N H,M,S
"RTN","MAGDRPC9",89,0)
 . S H=X\3600,M=X\60#60,S=X#60
"RTN","MAGDRPC9",90,0)
 . S TIME=H*100+M*100+S
"RTN","MAGDRPC9",91,0)
 . Q
"RTN","MAGDRPC9",92,0)
 S NEXTUID=$G(^MAGD(2006.15,1,"UID ROOT"))
"RTN","MAGDRPC9",93,0)
 I NEXTUID="" S $EC=",13:No UID Root defined - Run INIT^MAGDRUID," ; Fatal Error
"RTN","MAGDRPC9",94,0)
 ; UID type = 7, Machine ID = 0
"RTN","MAGDRPC9",95,0)
 S NEXTUID=NEXTUID_".1.7."_(+$G(DUZ(2)))_".0."_DATE_"."_TIME_".0"
"RTN","MAGDRPC9",96,0)
 ; Remove leading 0s from UID components
"RTN","MAGDRPC9",97,0)
 F I=1:1:$L(NEXTUID,".") S $P(NEXTUID,".",I)=+$P(NEXTUID,".",I)
"RTN","MAGDRPC9",98,0)
 I $P(NEXTUID,".",1,10)=$P(LASTUID,".",1,10) D
"RTN","MAGDRPC9",99,0)
 . S NEXTUID=LASTUID
"RTN","MAGDRPC9",100,0)
 . S $P(NEXTUID,".",11)=$P(NEXTUID,".",11)+1
"RTN","MAGDRPC9",101,0)
 . Q
"RTN","MAGDRPC9",102,0)
 S ^MAGDICOM(2006.563,1,"LAST UID")=NEXTUID
"RTN","MAGDRPC9",103,0)
 L -^MAGDICOM(2006.563,1,"MACHINE ID")
"RTN","MAGDRPC9",104,0)
 S OLD=$S(DBTYPE="OLD":$P($G(^MAG(2005,IMAGE,"PACS")),"^",1),1:$P($G(^MAGV(2005.64,IMAGE,0)),"^",1))
"RTN","MAGDRPC9",105,0)
 D NEWUID(.OUT,OLD,NEXTUID,IMAGE,DBTYPE) ; Store the new UID with the image
"RTN","MAGDRPC9",106,0)
 Q OUT
"RTN","MAGDRPC9",107,0)
 ;
"RTN","MAGDRPC9",108,0)
NEXT(OUT,SEED,DIR) ; RPC = MAG RAD GET NEXT RPT BY DATE
"RTN","MAGDRPC9",109,0)
 N D2,DFN,EXAMDATE,NAME
"RTN","MAGDRPC9",110,0)
 ;
"RTN","MAGDRPC9",111,0)
 ; ^RADPT(DFN,"DT",D1,"P",D2,0) = Data, $P(17) = pointer to report
"RTN","MAGDRPC9",112,0)
 ; ^RADPT("AR",9999999.9999-D1,DFN,D1)="" ; IA # 65
"RTN","MAGDRPC9",113,0)
 ;
"RTN","MAGDRPC9",114,0)
 ; OUT = report_pointer ^ ExamDate ^ Patient ^ D2
"RTN","MAGDRPC9",115,0)
 ;
"RTN","MAGDRPC9",116,0)
 S SEED=$G(SEED),DIR=$S($G(DIR)<0:-1,1:1) ; default is ascending order
"RTN","MAGDRPC9",117,0)
 S EXAMDATE=$P(SEED,"^",1),DFN=$P(SEED,"^",2),D2=$P(SEED,"^",3)
"RTN","MAGDRPC9",118,0)
 S OUT=0 F  D  Q:OUT
"RTN","MAGDRPC9",119,0)
 . I EXAMDATE="" S EXAMDATE=$O(^RADPT("AR",""),DIR),DFN="" ; IA # 65
"RTN","MAGDRPC9",120,0)
 . I EXAMDATE="" S OUT=-1 Q
"RTN","MAGDRPC9",121,0)
 . I DFN="" S DFN=$O(^RADPT("AR",EXAMDATE,""),DIR) ; IA # 65
"RTN","MAGDRPC9",122,0)
 . I DFN="" S EXAMDATE=$O(^RADPT("AR",EXAMDATE),DIR),D2="" Q  ; IA # 65
"RTN","MAGDRPC9",123,0)
 . S:'D2 D2=$S(DIR>0:0,1:" ")
"RTN","MAGDRPC9",124,0)
 . S D2=$O(^RADPT(DFN,"DT",9999999.9999-EXAMDATE,"P",D2),DIR) ; IA # 1172
"RTN","MAGDRPC9",125,0)
 . I 'D2 D  Q
"RTN","MAGDRPC9",126,0)
 . . S DFN=$O(^RADPT("AR",EXAMDATE,DFN),DIR),D2="" ; IA # 65
"RTN","MAGDRPC9",127,0)
 . . I 'DFN D
"RTN","MAGDRPC9",128,0)
 . . . S EXAMDATE=$O(^RADPT("AR",EXAMDATE),DIR),DFN="" ; IA # 65
"RTN","MAGDRPC9",129,0)
 . . . I EXAMDATE="" S OUT=-1
"RTN","MAGDRPC9",130,0)
 . . . Q
"RTN","MAGDRPC9",131,0)
 . . Q
"RTN","MAGDRPC9",132,0)
 . S OUT=$P($G(^RADPT(DFN,"DT",9999999.9999-EXAMDATE,"P",D2,0)),"^",17) ; IA # 1172
"RTN","MAGDRPC9",133,0)
 . S:OUT OUT=OUT_"^"_EXAMDATE_"^"_DFN_"^"_D2
"RTN","MAGDRPC9",134,0)
 . Q
"RTN","MAGDRPC9",135,0)
 Q
"RTN","MAGDRPC9",136,0)
 ;
"RTN","MAGDRPC9",137,0)
NXTPTRPT(OUT,DFN,RARPT1,DIR) ; RPC = MAG RAD GET NEXT RPT BY PT
"RTN","MAGDRPC9",138,0)
 S DFN=$G(DFN)
"RTN","MAGDRPC9",139,0)
 I 'DFN S OUT="-1,Patient DFN not passed" Q
"RTN","MAGDRPC9",140,0)
 I '$D(^RARPT("C",DFN)) S OUT="-2,Patient does not have any radiology reports" Q  ; IA # 2442
"RTN","MAGDRPC9",141,0)
 S RARPT1=$G(RARPT1),DIR=$S($G(DIR)<0:-1,1:1) ; default is ascending order
"RTN","MAGDRPC9",142,0)
 S OUT=$O(^RARPT("C",DFN,RARPT1),DIR) ; IA # 2442
"RTN","MAGDRPC9",143,0)
 Q
"RTN","MAGDRPC9",144,0)
 ;
"RTN","MAGDRPC9",145,0)
GETICN(OUT,DFN) ; RPC = MAG DICOM GET ICN
"RTN","MAGDRPC9",146,0)
 S OUT=$S($T(GETICN^MPIF001)'="":$$GETICN^MPIF001(DFN),1:"-1^NO MPI")
"RTN","MAGDRPC9",147,0)
 Q
"RTN","MAGDRPC9",148,0)
 ;
"RTN","MAGDRPC9",149,0)
CLEAN ; Overflow from MAGDRPC4
"RTN","MAGDRPC9",150,0)
 N STUID,PRI,S0,S1,STS
"RTN","MAGDRPC9",151,0)
 S S0=$P(SENT(I),"^",1),S1=$P(SENT(I),"^",2)
"RTN","MAGDRPC9",152,0)
 Q:'$D(^MAGDOUTP(2006.574,S0,1,S1))
"RTN","MAGDRPC9",153,0)
 L +^MAGDOUTP(2006.574,S0,1,0):1E9 ; Background process MUST wait
"RTN","MAGDRPC9",154,0)
 S X=$G(^MAGDOUTP(2006.574,S0,0)),LOC=$P(X,"^",4),PRI=+$P(X,"^",5)
"RTN","MAGDRPC9",155,0)
 S STS=$P($G(^MAGDOUTP(2006.574,S0,1,S1,0)),"^",2)
"RTN","MAGDRPC9",156,0)
 K ^MAGDOUTP(2006.574,S0,1,S1)
"RTN","MAGDRPC9",157,0)
 I LOC'="",STS'="" K ^MAGDOUTP(2006.574,"STS",LOC,PRI,STS,S0,S1)
"RTN","MAGDRPC9",158,0)
 S X=$G(^MAGDOUTP(2006.574,S0,1,0))
"RTN","MAGDRPC9",159,0)
 S $P(X,"^",4)=$P(X,"^",4)-1
"RTN","MAGDRPC9",160,0)
 S ^MAGDOUTP(2006.574,S0,1,0)=X
"RTN","MAGDRPC9",161,0)
 L -^MAGDOUTP(2006.574,S0,1,0)
"RTN","MAGDRPC9",162,0)
 Q:$O(^MAGDOUTP(2006.574,S0,1,0))
"RTN","MAGDRPC9",163,0)
 L +^MAGDOUTP(2006.574,0):1E9 ; Background process MUST wait
"RTN","MAGDRPC9",164,0)
 S STUID=$G(^MAGDOUTP(2006.574,S0,2))
"RTN","MAGDRPC9",165,0)
 K ^MAGDOUTP(2006.574,S0)
"RTN","MAGDRPC9",166,0)
 K:STUID'="" ^MAGDOUTP(2006.574,"STUDY",STUID)
"RTN","MAGDRPC9",167,0)
 S X=$G(^MAGDOUTP(2006.574,0))
"RTN","MAGDRPC9",168,0)
 S $P(X,"^",4)=$P(X,"^",4)-1
"RTN","MAGDRPC9",169,0)
 S ^MAGDOUTP(2006.574,0)=X
"RTN","MAGDRPC9",170,0)
 L -^MAGDOUTP(2006.574,0)
"RTN","MAGDRPC9",171,0)
 Q
"RTN","MAGDRPC9",172,0)
 ;
"RTN","MAGDRPC9",173,0)
IENLOOK ; Overflow from MAGDRPC4
"RTN","MAGDRPC9",174,0)
 ; lookup image by the IEN
"RTN","MAGDRPC9",175,0)
 N ACNUMB,D0,DFN,GROUPIEN,MODIFIER,P,PROCNAME,STUDYDAT,X,Y
"RTN","MAGDRPC9",176,0)
 S NUMBER=+$P(NUMBER,"`",2)
"RTN","MAGDRPC9",177,0)
 ; patient safety checks
"RTN","MAGDRPC9",178,0)
 D CHK^MAGGSQI(.X,NUMBER) I +$G(X(0))'=1 D  Q
"RTN","MAGDRPC9",179,0)
 . S OUT(1)="-9,"_$P(X(0),"^",2,999)
"RTN","MAGDRPC9",180,0)
 . Q
"RTN","MAGDRPC9",181,0)
 S GROUPIEN=$P($G(^MAG(2005,NUMBER,0)),"^",10)
"RTN","MAGDRPC9",182,0)
 I GROUPIEN D CHK^MAGGSQI(.X,GROUPIEN) I +$G(X(0))'=1 D  Q
"RTN","MAGDRPC9",183,0)
 . S OUT(1)="-10,Group #"_GROUPIEN_": "_$P(X(0),"^",2,999)
"RTN","MAGDRPC9",184,0)
 . Q
"RTN","MAGDRPC9",185,0)
 ;
"RTN","MAGDRPC9",186,0)
 S X=$G(^MAG(2005,NUMBER,2)),P=$P(X,"^",6),D0=$P(X,"^",7)
"RTN","MAGDRPC9",187,0)
 I 'P!'D0 D  ; get parent from group
"RTN","MAGDRPC9",188,0)
 . S:GROUPIEN X=$G(^MAG(2005,GROUPIEN,2)),P=$P(X,"^",6),D0=$P(X,"^",7)
"RTN","MAGDRPC9",189,0)
 . Q
"RTN","MAGDRPC9",190,0)
 ;
"RTN","MAGDRPC9",191,0)
 S OUT(2)=P_"^"_D0_"^"_NUMBER_"^" ; result w/o Accession Number
"RTN","MAGDRPC9",192,0)
 I 'P!'D0 S OUT(1)="-6,Warning - Parent file entry is not present - no Accession Number."
"RTN","MAGDRPC9",193,0)
 E  I P=74 D
"RTN","MAGDRPC9",194,0)
 . N DATETIME,I,INFO,PROC,RADPT0,RADPT1,RADPT2,RADPT3,RARPT0
"RTN","MAGDRPC9",195,0)
 . S X=$$ACCRPT^RAAPI(D0,.INFO)
"RTN","MAGDRPC9",196,0)
 . I X<0 S OUT(1)="-11,Radiology Problem: "_X Q
"RTN","MAGDRPC9",197,0)
 . S ACNUMB=INFO(1)
"RTN","MAGDRPC9",198,0)
 . S RARPT0=$G(^RARPT(D0,0)) ; IA # 1171
"RTN","MAGDRPC9",199,0)
 . S RADPT1=$P(RARPT0,"^",2),DATETIME=$P(RARPT0,"^",3)
"RTN","MAGDRPC9",200,0)
 . S RADPT2=9999999.9999-DATETIME,RADPT3=1
"RTN","MAGDRPC9",201,0)
 . S RADPT0=$G(^RADPT(RADPT1,"DT",RADPT2,"P",RADPT3,0))
"RTN","MAGDRPC9",202,0)
 . S PROCNAME=$$GET1^DIQ(71,$P(RADPT0,"^",2),.01)
"RTN","MAGDRPC9",203,0)
 . S STUDYDAT=17000000+(DATETIME\1)
"RTN","MAGDRPC9",204,0)
 . S MODIFIER=""
"RTN","MAGDRPC9",205,0)
 . S I=0 F  S I=$O(^RADPT(RADPT1,"DT",RADPT2,"P",RADPT3,"M",I)) Q:'I  D
"RTN","MAGDRPC9",206,0)
 . . S X=^RADPT(RADPT1,"DT",RADPT2,"P",RADPT3,"M",I,0)
"RTN","MAGDRPC9",207,0)
 . . S:I>1 MODIFIER=MODIFIER_", " S MODIFIER=MODIFIER_$$GET1^DIQ(71.2,X,.01)
"RTN","MAGDRPC9",208,0)
 . . Q
"RTN","MAGDRPC9",209,0)
 . S X=P_"^"_D0_"^"_NUMBER_"^"_ACNUMB_"^"_STUDYDAT_"^"_PROCNAME_"^"_MODIFIER
"RTN","MAGDRPC9",210,0)
 . S OUT(1)=1,OUT(2)=X
"RTN","MAGDRPC9",211,0)
 . Q
"RTN","MAGDRPC9",212,0)
 E  I P=8925 D
"RTN","MAGDRPC9",213,0)
 . N GMRCIEN
"RTN","MAGDRPC9",214,0)
 . ; get pointer from TIU to consult request
"RTN","MAGDRPC9",215,0)
 . S X=$$GET1^DIQ(8925,D0,1405,"I") ; IA ???
"RTN","MAGDRPC9",216,0)
 . I $P(X,";",2)="GMR(123," D
"RTN","MAGDRPC9",217,0)
 . . S GMRCIEN=$P(X,";"),ACNUMB="GMRC-"_GMRCIEN
"RTN","MAGDRPC9",218,0)
 . . S STUDYDAT=17000000+($$GET1^DIQ(123,GMRCIEN,.01,"I")\1)
"RTN","MAGDRPC9",219,0)
 . . S PROCNAME=$$GET1^DIQ(123,GMRCIEN,1) ; TO SERVICE
"RTN","MAGDRPC9",220,0)
 . . S MODIFIER=$$GET1^DIQ(123,GMRCIEN,4) ; PROCEDURE
"RTN","MAGDRPC9",221,0)
 . . S X=P_"^"_D0_"^"_NUMBER_"^"_ACNUMB_"^"_STUDYDAT_"^"_PROCNAME_"^"_MODIFIER
"RTN","MAGDRPC9",222,0)
 . . S OUT(1)=1,OUT(2)=X
"RTN","MAGDRPC9",223,0)
 . . Q
"RTN","MAGDRPC9",224,0)
 . E  S OUT(1)="-8,Problem with parent file "_P_", internal entry number "_D0_" - no Accession Number."
"RTN","MAGDRPC9",225,0)
 . Q
"RTN","MAGDRPC9",226,0)
 E  S OUT(1)="-7,Parent file "_P_" not yet supported - no Accession Number."
"RTN","MAGDRPC9",227,0)
 Q
"RTN","MAGDRPCA")
0^32^B96716003
"RTN","MAGDRPCA",1,0)
MAGDRPCA ;WOIFO/PMK/MLS/SG/DAC/JSL - Imaging RPCs for Importer ; 28 Feb 2012 4:01 PM
"RTN","MAGDRPCA",2,0)
 ;;3.0;IMAGING;**53,123,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDRPCA",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDRPCA",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPCA",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDRPCA",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDRPCA",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDRPCA",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDRPCA",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDRPCA",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDRPCA",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDRPCA",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDRPCA",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDRPCA",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDRPCA",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDRPCA",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPCA",17,0)
 ;;
"RTN","MAGDRPCA",18,0)
 Q
"RTN","MAGDRPCA",19,0)
 ;
"RTN","MAGDRPCA",20,0)
CHECKUID(OUT,UIDLIST,LEVEL) ; RPC = MAG DICOM IMPORTER CHECK UIDS
"RTN","MAGDRPCA",21,0)
 N COUNT,DUPCOUNT,DUPUID,ERROR,I,MAG0,MAGIEN,OBJECT
"RTN","MAGDRPCA",22,0)
 I '$D(UIDLIST) S OUT(1)="-1,A list of UIDs must be supplied." Q
"RTN","MAGDRPCA",23,0)
 I '$D(LEVEL) S OUT(1)="-2,Study or SOP Instance level must be specified." Q
"RTN","MAGDRPCA",24,0)
 I LEVEL'="STUDY",LEVEL'="SOP" D  Q
"RTN","MAGDRPCA",25,0)
 . S OUT(1)="-3,Level must be either ""STUDY"" or ""SOP -- """
"RTN","MAGDRPCA",26,0)
 . S OUT(1)=OUT(1)_"the value """_LEVEL_""" was specified."
"RTN","MAGDRPCA",27,0)
 . Q
"RTN","MAGDRPCA",28,0)
 S COUNT=$G(UIDLIST(1)),ERROR=0
"RTN","MAGDRPCA",29,0)
 I COUNT'>0 S OUT(1)="-4,Count of UIDs in list must be greater than zero." Q
"RTN","MAGDRPCA",30,0)
 F I=2:1:COUNT+1 S UID=UIDLIST(I) D
"RTN","MAGDRPCA",31,0)
 . S MAGIEN=$O(^MAG(2005,"P",UID,""))
"RTN","MAGDRPCA",32,0)
 . I MAGIEN D
"RTN","MAGDRPCA",33,0)
 . . S MAG0=$G(^MAG(2005,MAGIEN,0)),OBJECT=$P(MAG0,"^",6),DFN=$P(MAG0,"^",7)
"RTN","MAGDRPCA",34,0)
 . . I LEVEL="STUDY" D  ; Study Instance UID
"RTN","MAGDRPCA",35,0)
 . . . I OBJECT'=11 D  Q
"RTN","MAGDRPCA",36,0)
 . . . . S OUT(I)="-5,Study Instance UID not pointing to an XRAY Group -- "
"RTN","MAGDRPCA",37,0)
 . . . . S OUT(I)=OUT(I)_"MAGIEN = "_MAGIEN,ERROR=ERROR+1
"RTN","MAGDRPCA",38,0)
 . . . . Q
"RTN","MAGDRPCA",39,0)
 . . . S OUT(I)=$$LOOKUP1(MAGIEN)_"^"_$$DUPUID(LEVEL,UID)
"RTN","MAGDRPCA",40,0)
 . . . Q
"RTN","MAGDRPCA",41,0)
 . . E  D  ; SOP Instance UID
"RTN","MAGDRPCA",42,0)
 . . . I OBJECT'=3,OBJECT'=100 D  Q
"RTN","MAGDRPCA",43,0)
 . . . . S OUT(I)="-6,SOP Instance UID not pointing to an XRAY or a DICOM object -- "
"RTN","MAGDRPCA",44,0)
 . . . . S OUT(I)=OUT(I)_"MAGIEN = "_MAGIEN,ERROR=ERROR+1
"RTN","MAGDRPCA",45,0)
 . . . . Q
"RTN","MAGDRPCA",46,0)
 . . . S OUT(I)=$$LOOKUP1(MAGIEN)_"^"_$$DUPUID(LEVEL,UID)
"RTN","MAGDRPCA",47,0)
 . . . Q
"RTN","MAGDRPCA",48,0)
 . . Q
"RTN","MAGDRPCA",49,0)
 . E  S OUT(I)=""
"RTN","MAGDRPCA",50,0)
 . Q
"RTN","MAGDRPCA",51,0)
 I ERROR>1 S OUT(1)="-100,There were "_ERROR_" database inconsistency errors detected.  Look at returned data."
"RTN","MAGDRPCA",52,0)
 E  I ERROR=1 S OUT(1)="-100,A database inconsistency error was detected. Look at returned data."
"RTN","MAGDRPCA",53,0)
 E  S OUT(1)=COUNT
"RTN","MAGDRPCA",54,0)
 Q
"RTN","MAGDRPCA",55,0)
 ;
"RTN","MAGDRPCA",56,0)
DUPUID(LEVEL,UID) ; return a list of ^MAG(2005) entries with dup uids
"RTN","MAGDRPCA",57,0)
 N COUNT,DFN,DUPUID,I,MAG0,MAG2,MAGIEN,PARENT,RETURN,XREF,XREFLIST
"RTN","MAGDRPCA",58,0)
 S MAGIEN=""
"RTN","MAGDRPCA",59,0)
 F  S MAGIEN=$O(^MAG(2005,"P",UID,MAGIEN)) Q:MAGIEN=""  D
"RTN","MAGDRPCA",60,0)
 . S MAG0=$G(^MAG(2005,MAGIEN,0)),DFN=$P(MAG0,"^",7)
"RTN","MAGDRPCA",61,0)
 . S MAG2=$G(^MAG(2005,MAGIEN,2))
"RTN","MAGDRPCA",62,0)
 . S PARENT="" F I=6,7,8,10 S PARENT=PARENT_"^"_$P(MAG2,"^",I)
"RTN","MAGDRPCA",63,0)
 . S DUPUID(MAGIEN)=DFN_PARENT
"RTN","MAGDRPCA",64,0)
 . S XREFLIST(DFN_PARENT,MAGIEN)=""
"RTN","MAGDRPCA",65,0)
 . Q
"RTN","MAGDRPCA",66,0)
 . ; remove duplicate Study UIDs for different groups for the same study
"RTN","MAGDRPCA",67,0)
 I LEVEL="STUDY" D
"RTN","MAGDRPCA",68,0)
 . S COUNT=0,XREF=""
"RTN","MAGDRPCA",69,0)
 . F  S XREF=$O(XREFLIST(XREF)) Q:XREF=""  S COUNT=COUNT+1
"RTN","MAGDRPCA",70,0)
 . I COUNT=1 K DUPUID
"RTN","MAGDRPCA",71,0)
 . Q
"RTN","MAGDRPCA",72,0)
 S COUNT=0,(MAGIEN,RETURN)=""
"RTN","MAGDRPCA",73,0)
 F  S MAGIEN=$O(DUPUID(MAGIEN)) Q:MAGIEN=""  D
"RTN","MAGDRPCA",74,0)
 . S RETURN=RETURN_"^"_MAGIEN,COUNT=COUNT+1
"RTN","MAGDRPCA",75,0)
 . Q
"RTN","MAGDRPCA",76,0)
 Q COUNT_RETURN
"RTN","MAGDRPCA",77,0)
 ;
"RTN","MAGDRPCA",78,0)
LOOKUP(OUT,MAGIEN) ; RPC = MAG DICOM IMPORTER LOOKUP
"RTN","MAGDRPCA",79,0)
 S OUT=$$LOOKUP1(MAGIEN)
"RTN","MAGDRPCA",80,0)
 Q
"RTN","MAGDRPCA",81,0)
 ;
"RTN","MAGDRPCA",82,0)
LOOKUP1(MAGIEN) ; patient and accession number lookup
"RTN","MAGDRPCA",83,0)
 N DFN,I,MAG0,MAG2,NUMBER,OUT,TMP,VADM,X
"RTN","MAGDRPCA",84,0)
 S MAG0=$G(^MAG(2005,MAGIEN,0)),MAG2=$G(^(2))
"RTN","MAGDRPCA",85,0)
 S DFN=+$P(MAG0,"^",7)
"RTN","MAGDRPCA",86,0)
 D  ; Protect variables that are referenced by the DEM^VADPT
"RTN","MAGDRPCA",87,0)
 . N A,I,J,K,K1,NC,NF,NQ,T,VAHOW,VAPTYP,VAROOT,X
"RTN","MAGDRPCA",88,0)
 . D DEM^VADPT  ; Supported IA (#10061)
"RTN","MAGDRPCA",89,0)
 . Q
"RTN","MAGDRPCA",90,0)
 S X="^"_DFN ; piece 1 is for an error message
"RTN","MAGDRPCA",91,0)
 S X=X_"^"_VADM(1) ; patient name
"RTN","MAGDRPCA",92,0)
 S X=X_"^"_VA("PID") ; patient id
"RTN","MAGDRPCA",93,0)
 S TMP=$S(VADM(3)>0:17000000+VADM(3),1:"-1,Invalid date of birth")
"RTN","MAGDRPCA",94,0)
 S X=X_"^"_TMP ; Patient DOB
"RTN","MAGDRPCA",95,0)
 S X=X_"^"_$P(VADM(5),"^",1) ; patient sex
"RTN","MAGDRPCA",96,0)
 ; $$GETICN^MPIF001 can return error code and message separated
"RTN","MAGDRPCA",97,0)
 ; by "^". If this happens, the "^" is replaced by comma.
"RTN","MAGDRPCA",98,0)
 S TMP=$S($T(GETICN^MPIF001)'="":$$GETICN^MPIF001(DFN),1:"-1^NO MPI") ; Supported IA (#2701)
"RTN","MAGDRPCA",99,0)
 S X=X_"^"_$TR(TMP,"^",",") ; ICN
"RTN","MAGDRPCA",100,0)
 I $P(MAG2,"^",6)=2006.5839 D  ; temporary consult association
"RTN","MAGDRPCA",101,0)
 . N ACNUMB,GMRCIEN,MODIFIER,PROCNAME,STUDYDAT
"RTN","MAGDRPCA",102,0)
 . S GMRCIEN=$P(MAG2,"^",7),ACNUMB="GMRC-"_GMRCIEN
"RTN","MAGDRPCA",103,0)
 . S TMP=$$GET1^DIQ(123,GMRCIEN,.01,"I")\1
"RTN","MAGDRPCA",104,0)
 . S STUDYDAT=$S(TMP>0:17000000+TMP,1:"-1,Invalid study date")
"RTN","MAGDRPCA",105,0)
 . S PROCNAME=$$GET1^DIQ(123,GMRCIEN,1) ; TO SERVICE
"RTN","MAGDRPCA",106,0)
 . S MODIFIER=$$GET1^DIQ(123,GMRCIEN,4) ; PROCEDURE
"RTN","MAGDRPCA",107,0)
 . S X=X_"^"_ACNUMB_"^"_STUDYDAT_"^"_PROCNAME_"^"_MODIFIER
"RTN","MAGDRPCA",108,0)
 . Q
"RTN","MAGDRPCA",109,0)
 E  D  ; regular association
"RTN","MAGDRPCA",110,0)
 . S NUMBER="`"_MAGIEN D IENLOOK^MAGDRPC9 ; lookup accession number
"RTN","MAGDRPCA",111,0)
 . I OUT(1)<0 S X=OUT(1)_" detected in IENLOOK^MAGDRPC9"
"RTN","MAGDRPCA",112,0)
 . E  S X=X_"^"_$P(OUT(2),"^",4,7) ; accession number, study date, procedure
"RTN","MAGDRPCA",113,0)
 . Q
"RTN","MAGDRPCA",114,0)
 Q X
"RTN","MAGDRPCA",115,0)
 ;
"RTN","MAGDRPCA",116,0)
 ;
"RTN","MAGDRPCA",117,0)
 ;
"RTN","MAGDRPCA",118,0)
GETDFN(OUT,ICN) ; RPC = MAG DICOM GET DFN
"RTN","MAGDRPCA",119,0)
 S OUT=$S($T(GETDFN^MPIF001)'="":$$GETDFN^MPIF001(ICN),1:"-1^NO MPI") ; Supported IA (#2701)
"RTN","MAGDRPCA",120,0)
 Q
"RTN","MAGDRPCA",121,0)
 ;
"RTN","MAGDRPCA",122,0)
 ;
"RTN","MAGDRPCA",123,0)
 ;
"RTN","MAGDRPCA",124,0)
ACNUMB(OUT,ACNUMB) ; RPC = MAG DICOM GET RAD INFO BY ACN
"RTN","MAGDRPCA",125,0)
 N RADFN,RADTI,LIST,STATUS
"RTN","MAGDRPCA",126,0)
 I $T(ACCFIND^RAAPI)'="" D  ; requires RA*5.0*47
"RTN","MAGDRPCA",127,0)
 . S STATUS=$$ACCFIND^RAAPI(ACNUMB,.LIST) ; Private IA (#5020) 
"RTN","MAGDRPCA",128,0)
 . Q
"RTN","MAGDRPCA",129,0)
 E  D  ; before RA*5.0*47
"RTN","MAGDRPCA",130,0)
 . S STATUS=$$ACCFIND(ACNUMB,.LIST)
"RTN","MAGDRPCA",131,0)
 . Q
"RTN","MAGDRPCA",132,0)
 I STATUS<0 S OUT=STATUS Q
"RTN","MAGDRPCA",133,0)
 S OUT=STATUS_"^"_LIST(1)
"RTN","MAGDRPCA",134,0)
 ; add the imaging location as 5th piece of the results
"RTN","MAGDRPCA",135,0)
 S RADFN=$P(LIST(1),"^",1),RADTI=$P(LIST(1),"^",2)
"RTN","MAGDRPCA",136,0)
 S OUT=OUT_"^"_$$GET1^DIQ(79.1,$P(^RADPT(RADFN,"DT",RADTI,0),"^",4),.01)
"RTN","MAGDRPCA",137,0)
 Q
"RTN","MAGDRPCA",138,0)
 ;
"RTN","MAGDRPCA",139,0)
ACCFIND(Y,RAA) ; borrowed from RA*5.0*47
"RTN","MAGDRPCA",140,0)
 ;
"RTN","MAGDRPCA",141,0)
 ;input : Y=the accession number in either a 'sss-mmddyy-xxxxx' or
"RTN","MAGDRPCA",142,0)
 ;          'mmddyy-xxxxx' format
"RTN","MAGDRPCA",143,0)
 ;      : RAA(n)=the array used to return the data in the following
"RTN","MAGDRPCA",144,0)
 ;               format RADFN_^_RADTI_^_RACNI
"RTN","MAGDRPCA",145,0)
 ;
"RTN","MAGDRPCA",146,0)
 ;return: n>0 successful, else n<0... 'n' is the number of array
"RTN","MAGDRPCA",147,0)
 ;        elements when successful. When unsuccessful (n<0) 'n' is
"RTN","MAGDRPCA",148,0)
 ;        a specific error dialog which is returned along with the
"RTN","MAGDRPCA",149,0)
 ;        invalid accession number.
"RTN","MAGDRPCA",150,0)
 ;
"RTN","MAGDRPCA",151,0)
 ;        Examples:
"RTN","MAGDRPCA",152,0)
 ;        -1^"invalid site accession number format"^accession #
"RTN","MAGDRPCA",153,0)
 ;        -2^"invalid accession number format"^accession #
"RTN","MAGDRPCA",154,0)
 ;        -3^"no data associated with this accession number"^accession #
"RTN","MAGDRPCA",155,0)
 ;
"RTN","MAGDRPCA",156,0)
 I $L(Y,"-")=3 Q:Y'?3N1"-"6N1"-"1.5N "-1^invalid site accession number format^"_Y
"RTN","MAGDRPCA",157,0)
 I $L(Y,"-")=2 Q:Y'?6N1"-"1.5N "-2^invalid accession number format^"_Y
"RTN","MAGDRPCA",158,0)
 N X S X=$S($L(Y,"-")=3:$NA(^RADPT("ADC1")),1:$NA(^RADPT("ADC"))) ; Private IA (#1172)
"RTN","MAGDRPCA",159,0)
 Q:$O(@X@(Y,0))'>0 "-3^no data associated with this accession number^"_Y
"RTN","MAGDRPCA",160,0)
 N RADFN,RADTI,RACNI,Z S:$D(U)#2=0 U="^"
"RTN","MAGDRPCA",161,0)
 S (RADFN,Z)=0 F  S RADFN=$O(@X@(Y,RADFN)) Q:'RADFN  D
"RTN","MAGDRPCA",162,0)
 . S RADTI=0 F  S RADTI=$O(@X@(Y,RADFN,RADTI)) Q:'RADTI  D
"RTN","MAGDRPCA",163,0)
 . . S RACNI=0 F  S RACNI=$O(@X@(Y,RADFN,RADTI,RACNI)) Q:'RACNI  D
"RTN","MAGDRPCA",164,0)
 . . . S Z=Z+1,RAA(Z)=RADFN_U_RADTI_U_RACNI
"RTN","MAGDRPCA",165,0)
 . . . Q
"RTN","MAGDRPCA",166,0)
 . . Q
"RTN","MAGDRPCA",167,0)
 . Q
"RTN","MAGDRPCA",168,0)
 Q Z ;success
"RTN","MAGDRPCA",169,0)
 ;
"RTN","MAGDRPCA",170,0)
 ;
"RTN","MAGDRPCA",171,0)
 ;
"RTN","MAGDRPCA",172,0)
DELETE(OUT,IMAGEUID,MACHID,FILEPATH) ; RPC = MAG DICOM IMPORTER DELETE
"RTN","MAGDRPCA",173,0)
 S OUT=$$DELETE^MAGDIR8R(IMAGEUID,MACHID,FILEPATH)
"RTN","MAGDRPCA",174,0)
 Q
"RTN","MAGDRPCA",175,0)
 ;
"RTN","MAGDRPCA",176,0)
 ;***** RETURNS THE LIST OF RADIOLOGY PROCEDURES
"RTN","MAGDRPCA",177,0)
 ; RPC: MAG DICOM RADIOLOGY PROCEDURES
"RTN","MAGDRPCA",178,0)
 ;
"RTN","MAGDRPCA",179,0)
 ; .ARRAY        Reference to a local variable where results
"RTN","MAGDRPCA",180,0)
 ;               are returned to.
"RTN","MAGDRPCA",181,0)
 ;
"RTN","MAGDRPCA",182,0)
 ; DIV           IEN of a record in the INSTITUTION file (#4)
"RTN","MAGDRPCA",183,0)
 ;
"RTN","MAGDRPCA",184,0)
PROC(ARRAY,DIV,FILTER) ;
"RTN","MAGDRPCA",185,0)
 N IMAGTYPE      ; IEN of the imaging type (file #79.2)
"RTN","MAGDRPCA",186,0)
 N INACTDAT      ; Inactivation date of the procedure
"RTN","MAGDRPCA",187,0)
 N OMLDAT        ; Outside imaging location data (file #2006.5759)
"RTN","MAGDRPCA",188,0)
 N OMLIEN        ; IEN in OUTSIDE IMAGING LOCATION file (#2006.5759)
"RTN","MAGDRPCA",189,0)
 N RADPROC       ; Radiology procedure data (file #71)
"RTN","MAGDRPCA",190,0)
 N TODAY         ; today's date in Fileman format
"RTN","MAGDRPCA",191,0)
 N PROCTYPE      ; Type of procedure
"RTN","MAGDRPCA",192,0)
 ;
"RTN","MAGDRPCA",193,0)
 N BUF,ERROR,IEN,Z
"RTN","MAGDRPCA",194,0)
 K ARRAY
"RTN","MAGDRPCA",195,0)
 ;
"RTN","MAGDRPCA",196,0)
 ;--- Validate parameters
"RTN","MAGDRPCA",197,0)
 S DIV=$G(DIV)
"RTN","MAGDRPCA",198,0)
 I (DIV'>0)!(DIV'=+DIV)  D  Q
"RTN","MAGDRPCA",199,0)
 . S ARRAY(1)="-1,Invalid Institution IEN: '"_DIV_"'."
"RTN","MAGDRPCA",200,0)
 . Q
"RTN","MAGDRPCA",201,0)
 I $D(^DIC(4,DIV))<10  D  Q
"RTN","MAGDRPCA",202,0)
 . S ARRAY(1)="-2,Institution with IEN="_DIV_" does not exist."
"RTN","MAGDRPCA",203,0)
 . Q
"RTN","MAGDRPCA",204,0)
 ;
"RTN","MAGDRPCA",205,0)
 S ERROR=$$DISPLAY^MAGDAIRG(0)
"RTN","MAGDRPCA",206,0)
 I ERROR=-1 D  Q
"RTN","MAGDRPCA",207,0)
 . S ARRAY(1)="-3,""No Credit"" entries must be added to the IMAGING LOCATIONS file (#79.1)"
"RTN","MAGDRPCA",208,0)
 . S ARRAY(2)=""
"RTN","MAGDRPCA",209,0)
 . S ARRAY(3)="Use the IMPORTER MENU option CHECK OUTSIDE IMAGING LOCATION FILE"
"RTN","MAGDRPCA",210,0)
 . S ARRAY(4)="on the VistA system to correct the problem."
"RTN","MAGDRPCA",211,0)
 . Q
"RTN","MAGDRPCA",212,0)
 I ERROR=-2 D  Q
"RTN","MAGDRPCA",213,0)
 . S ARRAY(1)="-4,Entries must be added to the OUTSIDE IMAGING LOCATIONS file (#2006.5759)"
"RTN","MAGDRPCA",214,0)
 . S ARRAY(2)=""
"RTN","MAGDRPCA",215,0)
 . S ARRAY(3)="Use the IMPORTER MENU option BUILD OUTSIDE IMAGING LOCATION FILE"
"RTN","MAGDRPCA",216,0)
 . S ARRAY(4)="on the VistA system to correct the problem."
"RTN","MAGDRPCA",217,0)
 . Q
"RTN","MAGDRPCA",218,0)
 I ERROR'=0 D  Q
"RTN","MAGDRPCA",219,0)
 . S ARRAY(1)="-5,Unexpected error #"_ERROR_" returned by $$DISPLAY^MAGDAIRG(0)"
"RTN","MAGDRPCA",220,0)
 . Q
"RTN","MAGDRPCA",221,0)
 ;
"RTN","MAGDRPCA",222,0)
 S (ARRAY(1),IEN)=0,TODAY=$$DT^XLFDT()
"RTN","MAGDRPCA",223,0)
 F  S IEN=$O(^RAMIS(71,IEN))  Q:'IEN  D  ; Private IA (#1174) 
"RTN","MAGDRPCA",224,0)
 . S RADPROC=^RAMIS(71,IEN,0),IMAGTYPE=+$P(RADPROC,U,12)
"RTN","MAGDRPCA",225,0)
 . ;--- Get outside imaging location associated
"RTN","MAGDRPCA",226,0)
 . ;--- with the imaging type of the procedure
"RTN","MAGDRPCA",227,0)
 . S OMLIEN=$O(^MAGD(2006.5759,"D",DIV,IMAGTYPE,""))  Q:'OMLIEN
"RTN","MAGDRPCA",228,0)
 . S OMLDAT=$G(^MAGD(2006.5759,OMLIEN,0))
"RTN","MAGDRPCA",229,0)
 . Q:$P(OMLDAT,U,4)'=DIV  ; Has to be in the same Division
"RTN","MAGDRPCA",230,0)
 . ;--- Prepare the procedure descriptor
"RTN","MAGDRPCA",231,0)
 . S BUF=$P(RADPROC,U)_U_IEN      ; Procedure Name and IEN
"RTN","MAGDRPCA",232,0)
 . S PROCTYPE=$P(RADPROC,U,6)     ; Type of Procedure
"RTN","MAGDRPCA",233,0)
 . I $G(FILTER)=1,(PROCTYPE="B")!(PROCTYPE="P") Q
"RTN","MAGDRPCA",234,0)
 . S $P(BUF,U,3)=PROCTYPE         ; Type of Procedure
"RTN","MAGDRPCA",235,0)
 . S $P(BUF,U,4)=$P(RADPROC,U,9)  ; CPT Code (file #81)
"RTN","MAGDRPCA",236,0)
 . S $P(BUF,U,5)=IMAGTYPE         ; Type of Imaging (file #79.2)
"RTN","MAGDRPCA",237,0)
 . S INACTDAT=$P($G(^RAMIS(71,IEN,"I")),U)
"RTN","MAGDRPCA",238,0)
 . I INACTDAT,INACTDAT<TODAY Q    ; ignore inactive procedures
"RTN","MAGDRPCA",239,0)
 . S $P(BUF,U,6)=INACTDAT         ; Inactivation Date
"RTN","MAGDRPCA",240,0)
 . S $P(BUF,U,7)=$P(OMLDAT,U)     ; Imaging Location (file #79.1)
"RTN","MAGDRPCA",241,0)
 . S Z=$P(OMLDAT,U,3)
"RTN","MAGDRPCA",242,0)
 . S $P(BUF,U,8)=Z                ; Hospital Location (file #44) - IEN
"RTN","MAGDRPCA",243,0)
 . S $P(BUF,U,9)=$$GET1^DIQ(44,Z,.01) ; Hospital Location (file #44) - NAME
"RTN","MAGDRPCA",244,0)
 . ;--- Add the descriptor to the result array
"RTN","MAGDRPCA",245,0)
 . S ARRAY(1)=ARRAY(1)+1,ARRAY(ARRAY(1)+1)=BUF
"RTN","MAGDRPCA",246,0)
 . Q
"RTN","MAGDRPCA",247,0)
 Q
"RTN","MAGDRPCA",248,0)
 ;
"RTN","MAGDRPCA",249,0)
 ;***** RETURNS THE LIST OF RADIOLOGY PROCEDURE MODIFIERS
"RTN","MAGDRPCA",250,0)
 ; RPC: MAG DICOM RADIOLOGY MODIFIERS
"RTN","MAGDRPCA",251,0)
 ;
"RTN","MAGDRPCA",252,0)
 ; .ARRAY        Reference to a local variable where results
"RTN","MAGDRPCA",253,0)
 ;               are returned to.
"RTN","MAGDRPCA",254,0)
 ;
"RTN","MAGDRPCA",255,0)
MOD(ARRAY) ;
"RTN","MAGDRPCA",256,0)
 N IEN           ; IEN in the PROCEDURE MODIFIERS file (#71.2)
"RTN","MAGDRPCA",257,0)
 N IEN2          ; IEN in the TYPE OF IMAGING subfile (#71.23)
"RTN","MAGDRPCA",258,0)
 N IMAGTYPE      ; Imaging type (#79.2)
"RTN","MAGDRPCA",259,0)
 N MODIFIER      ; Radiology procedure modifier name (71.2,.01)
"RTN","MAGDRPCA",260,0)
 N PROCMOD       ; Radiology procedure modifier data
"RTN","MAGDRPCA",261,0)
 ;
"RTN","MAGDRPCA",262,0)
 K ARRAY
"RTN","MAGDRPCA",263,0)
 ;
"RTN","MAGDRPCA",264,0)
 S (ARRAY(1),IEN)=0
"RTN","MAGDRPCA",265,0)
 F  S IEN=$O(^RAMIS(71.2,IEN))  Q:'IEN  D  ; Private IA (#4197) 
"RTN","MAGDRPCA",266,0)
 . S PROCMOD=^RAMIS(71.2,IEN,0),MODIFIER=$P(PROCMOD,U)
"RTN","MAGDRPCA",267,0)
 . S IEN2=0
"RTN","MAGDRPCA",268,0)
 . F  S IEN2=$O(^RAMIS(71.2,IEN,1,IEN2))  Q:'IEN2  D
"RTN","MAGDRPCA",269,0)
 . . S IMAGTYPE=+$G(^RAMIS(71.2,IEN,1,IEN2,0))  Q:'IMAGTYPE
"RTN","MAGDRPCA",270,0)
 . . S ARRAY(1)=ARRAY(1)+1
"RTN","MAGDRPCA",271,0)
 . . S ARRAY(ARRAY(1)+1)=MODIFIER_U_IEN_U_IMAGTYPE
"RTN","MAGDRPCA",272,0)
 . . Q
"RTN","MAGDRPCA",273,0)
 . Q
"RTN","MAGDRPCA",274,0)
 Q
"RTN","MAGDRPCB")
0^33^B129973111
"RTN","MAGDRPCB",1,0)
MAGDRPCB ;WOIFO/PMK/MLS/SG - Imaging RPCs for Importer ; 20 Feb 2012 3:58 PM
"RTN","MAGDRPCB",2,0)
 ;;3.0;IMAGING;**53,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGDRPCB",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDRPCB",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPCB",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDRPCB",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDRPCB",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDRPCB",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDRPCB",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDRPCB",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDRPCB",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDRPCB",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDRPCB",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDRPCB",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDRPCB",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDRPCB",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDRPCB",17,0)
 ;;
"RTN","MAGDRPCB",18,0)
 Q
"RTN","MAGDRPCB",19,0)
 ;
"RTN","MAGDRPCB",20,0)
FILM(RESULTS,FILM) ; RPC = MAG DICOM GET RAD FILM
"RTN","MAGDRPCB",21,0)
 D LOOKUP(.RESULTS,$G(FILM),78.4,"B",".01") ; ICR 5360
"RTN","MAGDRPCB",22,0)
 Q
"RTN","MAGDRPCB",23,0)
 ;
"RTN","MAGDRPCB",24,0)
DXCODE(RESULTS,DXCODE) ; RPC = MAG DICOM GET RAD DIAGNOSTIC CODE
"RTN","MAGDRPCB",25,0)
 D LOOKUP(.RESULTS,$G(DXCODE),78.3,"B",".01") ; ICR 4112
"RTN","MAGDRPCB",26,0)
 Q
"RTN","MAGDRPCB",27,0)
 ;
"RTN","MAGDRPCB",28,0)
CAMERA(RESULTS,CAMERA) ; RPC = MAG DICOM GET RAD CAMERA
"RTN","MAGDRPCB",29,0)
 D LOOKUP(.RESULTS,$G(CAMERA),78.6,"B",".01;2") ; ICR 5359
"RTN","MAGDRPCB",30,0)
 Q
"RTN","MAGDRPCB",31,0)
 ; 
"RTN","MAGDRPCB",32,0)
CPTMOD(RESULTS,CPTMOD,MAGDT) ; RPC = MAG DICOM GET RAD CPT MOD
"RTN","MAGDRPCB",33,0)
 ; CPTMOD = partial CPT modifier match
"RTN","MAGDRPCB",34,0)
 N I,SCR
"RTN","MAGDRPCB",35,0)
 S:$G(MAGDT)'>0 MAGDT=$$DT^XLFDT
"RTN","MAGDRPCB",36,0)
 S SCR="S D=$$MOD^ICPTMOD(Y,""I"",MAGDT) I D'<0,$P(D,U,7)"
"RTN","MAGDRPCB",37,0)
 D LOOKUP(.RESULTS,$G(CPTMOD),81.3,"C","",SCR) ; ICR 3026
"RTN","MAGDRPCB",38,0)
 F I=1:1:$G(RESULTS(1)) D
"RTN","MAGDRPCB",39,0)
 . S $P(RESULTS(I+1),"^",2)=$P($$MOD^ICPTMOD(RESULTS(I+1),"I"),"^",3)
"RTN","MAGDRPCB",40,0)
 . Q
"RTN","MAGDRPCB",41,0)
 Q
"RTN","MAGDRPCB",42,0)
 ;
"RTN","MAGDRPCB",43,0)
LOOKUP(RESULTS,SRCHVAL,FILE,XREF,FIELDS,SCREEN,MAX) ; search file
"RTN","MAGDRPCB",44,0)
 N CNT,I,MAGTMP,MAGMSG,MAXNR,X
"RTN","MAGDRPCB",45,0)
 S MAXNR=100
"RTN","MAGDRPCB",46,0)
 I $G(MAX)="1" S MAXNR=""  ; Remove 100 record maximum constraint if MAX = 1
"RTN","MAGDRPCB",47,0)
 S SRCHVAL=$$UP^XLFSTR($TR(SRCHVAL,"*?"))
"RTN","MAGDRPCB",48,0)
 S SRCHVAL=$E(SRCHVAL,1,30) ; limit of 30 characters for B or C cross reference
"RTN","MAGDRPCB",49,0)
 S MAGTMP=$NA(^TMP($T(+0),$J))
"RTN","MAGDRPCB",50,0)
 K @MAGTMP,RESULTS
"RTN","MAGDRPCB",51,0)
 ;
"RTN","MAGDRPCB",52,0)
 ;--- Perform the search
"RTN","MAGDRPCB",53,0)
 D LIST^DIC(FILE,,"@;"_FIELDS,"P",MAXNR,,SRCHVAL,XREF,$G(SCREEN),,MAGTMP,"MAGMSG")
"RTN","MAGDRPCB",54,0)
 S X=$G(@MAGTMP@("DILIST",0))
"RTN","MAGDRPCB",55,0)
 I X'>0  S RESULTS(1)="-1^No records match the input."  Q
"RTN","MAGDRPCB",56,0)
 I $P(X,U,3)  D  Q
"RTN","MAGDRPCB",57,0)
 . S RESULTS(1)="-2,More than "_MAXNR_" matches; please specify"
"RTN","MAGDRPCB",58,0)
 . S RESULTS(1)=RESULTS(1)_" more characters in the name."
"RTN","MAGDRPCB",59,0)
 . Q
"RTN","MAGDRPCB",60,0)
 ;
"RTN","MAGDRPCB",61,0)
 ;--- Copy the records to the result array
"RTN","MAGDRPCB",62,0)
 S (RESULTS(1),I)=0
"RTN","MAGDRPCB",63,0)
 F  S I=$O(@MAGTMP@("DILIST",I))  Q:'I  D
"RTN","MAGDRPCB",64,0)
 . S RESULTS(1)=RESULTS(1)+1
"RTN","MAGDRPCB",65,0)
 . S RESULTS(RESULTS(1)+1)=@MAGTMP@("DILIST",I,0)
"RTN","MAGDRPCB",66,0)
 . Q
"RTN","MAGDRPCB",67,0)
 ;
"RTN","MAGDRPCB",68,0)
 ;--- Cleanup
"RTN","MAGDRPCB",69,0)
 K @MAGTMP
"RTN","MAGDRPCB",70,0)
 Q
"RTN","MAGDRPCB",71,0)
 ;
"RTN","MAGDRPCB",72,0)
 ;***** RETURNS LIST OF USERS WITH PROVIDED RADIOLOGY CLASSIFICATION
"RTN","MAGDRPCB",73,0)
 ; RPC: MAG DICOM GET RAD PERSON
"RTN","MAGDRPCB",74,0)
 ;
"RTN","MAGDRPCB",75,0)
 ; .RESULTS      Reference to a local variable where results
"RTN","MAGDRPCB",76,0)
 ;               are returned to.
"RTN","MAGDRPCB",77,0)
 ;
"RTN","MAGDRPCB",78,0)
 ; MAGRADCLASS   Radiology classification codes (can be combined):
"RTN","MAGDRPCB",79,0)
 ;
"RTN","MAGDRPCB",80,0)
 ;                 C  Clerk    R  Resident
"RTN","MAGDRPCB",81,0)
 ;                 S  Staff    T  Technologist
"RTN","MAGDRPCB",82,0)
 ;
"RTN","MAGDRPCB",83,0)
 ; [NAME]        Partial name match.
"RTN","MAGDRPCB",84,0)
 ;
"RTN","MAGDRPCB",85,0)
RADLST(RESULTS,MAGRADCLASS,NAME) ;
"RTN","MAGDRPCB",86,0)
 N I,MAGMSG,MAGTMP,MAXNR,X
"RTN","MAGDRPCB",87,0)
 S MAXNR=100      ; Maximum number of records to return
"RTN","MAGDRPCB",88,0)
 S DT=$$DT^XLFDT  ; Make sure that the actual date is there
"RTN","MAGDRPCB",89,0)
 S MAGTMP=$NA(^TMP($T(+0),$J))
"RTN","MAGDRPCB",90,0)
 K @MAGTMP,RESULTS
"RTN","MAGDRPCB",91,0)
 ;
"RTN","MAGDRPCB",92,0)
 ;--- Validate parameters
"RTN","MAGDRPCB",93,0)
 I $G(MAGRADCLASS)=""  D  Q
"RTN","MAGDRPCB",94,0)
 . S RESULTS(1)="-1^No RAD/NUC classification provided."
"RTN","MAGDRPCB",95,0)
 . Q
"RTN","MAGDRPCB",96,0)
 S NAME=$$UP^XLFSTR($TR($G(NAME),"*?"))
"RTN","MAGDRPCB",97,0)
 S NAME=$E(NAME,1,30) ; limit of 30 characters for B cross reference
"RTN","MAGDRPCB",98,0)
 ;
"RTN","MAGDRPCB",99,0)
 ;--- Search for users
"RTN","MAGDRPCB",100,0)
 S X="I $$SCRUSR^"_$T(+0)_"(Y)"  ; Screening code
"RTN","MAGDRPCB",101,0)
 D LIST^DIC(200,,"@;.01","P",MAXNR,,NAME,"B",X,,MAGTMP,"MAGMSG") ; ICR # 10060
"RTN","MAGDRPCB",102,0)
 S X=$G(@MAGTMP@("DILIST",0))
"RTN","MAGDRPCB",103,0)
 I X'>0  S RESULTS(1)="-1^No provider matching input."  Q
"RTN","MAGDRPCB",104,0)
 I $P(X,U,3)  D  Q
"RTN","MAGDRPCB",105,0)
 . S RESULTS(1)="-2,More than "_MAXNR_" matches; please specify"
"RTN","MAGDRPCB",106,0)
 . S RESULTS(1)=RESULTS(1)_" more characters in the name."
"RTN","MAGDRPCB",107,0)
 . Q
"RTN","MAGDRPCB",108,0)
 ;
"RTN","MAGDRPCB",109,0)
 ;--- Copy the records to the result array
"RTN","MAGDRPCB",110,0)
 S (RESULTS(1),I)=0
"RTN","MAGDRPCB",111,0)
 F  S I=$O(@MAGTMP@("DILIST",I))  Q:'I  D
"RTN","MAGDRPCB",112,0)
 . S RESULTS(1)=RESULTS(1)+1
"RTN","MAGDRPCB",113,0)
 . S RESULTS(RESULTS(1)+1)=@MAGTMP@("DILIST",I,0)
"RTN","MAGDRPCB",114,0)
 . Q
"RTN","MAGDRPCB",115,0)
 ;
"RTN","MAGDRPCB",116,0)
 ;--- Cleanup
"RTN","MAGDRPCB",117,0)
 K @MAGTMP
"RTN","MAGDRPCB",118,0)
 Q
"RTN","MAGDRPCB",119,0)
 ;
"RTN","MAGDRPCB",120,0)
 ;***** SCREENING LOGIC FOR SEARCH FOR RADIOLOGY USERS
"RTN","MAGDRPCB",121,0)
 ;
"RTN","MAGDRPCB",122,0)
 ; IEN           IEN in the NEW PERSON file (#200)
"RTN","MAGDRPCB",123,0)
 ;
"RTN","MAGDRPCB",124,0)
 ; Input variables:
"RTN","MAGDRPCB",125,0)
 ;   MAGRADCLASS
"RTN","MAGDRPCB",126,0)
 ;
"RTN","MAGDRPCB",127,0)
 ; Return Values:
"RTN","MAGDRPCB",128,0)
 ;            0  Skip the record
"RTN","MAGDRPCB",129,0)
 ;            1  Get the record
"RTN","MAGDRPCB",130,0)
 ;
"RTN","MAGDRPCB",131,0)
SCRUSR(IEN) ;
"RTN","MAGDRPCB",132,0)
 N IEN1,MAGMSG,OK,TERMDT
"RTN","MAGDRPCB",133,0)
 ;--- Check the termination date
"RTN","MAGDRPCB",134,0)
 S TERMDT=$$GET1^DIQ(200,IEN_",",9.2,"I",,"MAGMSG") ; ICR # 10060
"RTN","MAGDRPCB",135,0)
 I TERMDT>0  Q:TERMDT'>DT 0
"RTN","MAGDRPCB",136,0)
 ;--- Check the radiology classification
"RTN","MAGDRPCB",137,0)
 S (IEN1,OK)=0
"RTN","MAGDRPCB",138,0)
 F  S IEN1=$O(^VA(200,IEN,"RAC",IEN1))  Q:'IEN1  D  Q:OK
"RTN","MAGDRPCB",139,0)
 . S:MAGRADCLASS[$P(^VA(200,IEN,"RAC",IEN1,0),U) OK=1
"RTN","MAGDRPCB",140,0)
 . Q
"RTN","MAGDRPCB",141,0)
 Q OK
"RTN","MAGDRPCB",142,0)
 ;
"RTN","MAGDRPCB",143,0)
GETLOC(RESULTS,LOCATION) ; RPC = MAG DICOM GET HOSP LOCATION
"RTN","MAGDRPCB",144,0)
 N I,INACTIVE,LIST,REACTIVE,TYPE
"RTN","MAGDRPCB",145,0)
 D LOOKUP(.LIST,$G(LOCATION),44,"B",".01;2I;2505I;2506I",,1) ; ICR 10040
"RTN","MAGDRPCB",146,0)
 K RESULTS
"RTN","MAGDRPCB",147,0)
  ;--- Copy the records to the result array
"RTN","MAGDRPCB",148,0)
 S (RESULTS(1),I)=0
"RTN","MAGDRPCB",149,0)
 F I=2:1:LIST(1)+1 D
"RTN","MAGDRPCB",150,0)
 . S TYPE=$P(LIST(I),"^",3)
"RTN","MAGDRPCB",151,0)
 . ;
"RTN","MAGDRPCB",152,0)
 . ; allow C=Clinic, M=Module, W=Ward, Z=Other Location
"RTN","MAGDRPCB",153,0)
 . ; allow N=Non-clinic stop, OR=Operating Room
"RTN","MAGDRPCB",154,0)
 . ; ignore F=File area and I=Imaging
"RTN","MAGDRPCB",155,0)
 . ;
"RTN","MAGDRPCB",156,0)
 . I "^C^M^W^Z^N^OR^"'[("^"_TYPE_"^") Q
"RTN","MAGDRPCB",157,0)
 . ;
"RTN","MAGDRPCB",158,0)
 . ; check inactivate date and reactivate date
"RTN","MAGDRPCB",159,0)
 . S INACTIVE=$P(LIST(I),"^",4),REACTIVE=$P(LIST(I),"^",5)
"RTN","MAGDRPCB",160,0)
 . I INACTIVE,DT>INACTIVE Q:'REACTIVE  Q:DT<REACTIVE
"RTN","MAGDRPCB",161,0)
 . ;
"RTN","MAGDRPCB",162,0)
 . S RESULTS(1)=RESULTS(1)+1
"RTN","MAGDRPCB",163,0)
 . S RESULTS(I)=$P(LIST(I),"^",1,2)
"RTN","MAGDRPCB",164,0)
 . Q
"RTN","MAGDRPCB",165,0)
 Q
"RTN","MAGDRPCB",166,0)
 ;
"RTN","MAGDRPCB",167,0)
USERNAME(RESULT) ; RPC = MAG DICOM GET USERNAME
"RTN","MAGDRPCB",168,0)
 S RESULT=$$GET1^DIQ(200,DUZ,.01) ; ICR # 10060
"RTN","MAGDRPCB",169,0)
 Q
"RTN","MAGDRPCB",170,0)
 ;
"RTN","MAGDRPCB",171,0)
ORDERS(ARRAY,DFN) ; RPC = MAG DICOM GET RAD ORDERS
"RTN","MAGDRPCB",172,0)
 ; look up radiology orders
"RTN","MAGDRPCB",173,0)
 N ACNUMB,CASENUMB,DIERR,EXAMDATA,EXAMDATE,ERROR,FIELDS,I,IENS,IMAGLOCN,INACTDAT
"RTN","MAGDRPCB",174,0)
 N ORDER,MAGEXAM,MAGMSG,MAGTMPEXAM,MAGTMPMOD,MODCOUNT,MODDATA
"RTN","MAGDRPCB",175,0)
 N MODIEN,MODIFIER,MSG,PROCIEN,RACNI,RADFN,RADTI,RAOIEN,RC,STATUS,STUDYDAT,TODAY,X,Z
"RTN","MAGDRPCB",176,0)
 K ARRAY
"RTN","MAGDRPCB",177,0)
 S DFN=$G(DFN),TODAY=$$DT^XLFDT()
"RTN","MAGDRPCB",178,0)
 I (DFN'>0)!(DFN'=+DFN) D  Q
"RTN","MAGDRPCB",179,0)
 . S ARRAY(1)="-1,Invalid or missing patient identifier: """_DFN_"""."
"RTN","MAGDRPCB",180,0)
 . Q
"RTN","MAGDRPCB",181,0)
 ;
"RTN","MAGDRPCB",182,0)
 ; Make sure that the patient is registered in the RAD/NUC MED PATIENT file (#70)
"RTN","MAGDRPCB",183,0)
 ;
"RTN","MAGDRPCB",184,0)
 S RC=$$RAPTREG^RAMAGU04(DFN) I RC<0 D  Q  ; ICR 5519
"RTN","MAGDRPCB",185,0)
 . S ARRAY(1)="-2,Patient with DFN #"_DFN_" is not defined in the RAD/NUC MED PATIENT file (#70)."
"RTN","MAGDRPCB",186,0)
 . S ARRAY(2)=RC
"RTN","MAGDRPCB",187,0)
 . Q
"RTN","MAGDRPCB",188,0)
 ;
"RTN","MAGDRPCB",189,0)
 ; Use MUMPS global reads to get data from ^RAO because of possible bad data
"RTN","MAGDRPCB",190,0)
 ; that would cause Fileman to throw an error and not return any results.
"RTN","MAGDRPCB",191,0)
 ;
"RTN","MAGDRPCB",192,0)
 S (ARRAY(1),ERROR,RAOIEN)=0
"RTN","MAGDRPCB",193,0)
 F  S RAOIEN=$O(^RAO(75.1,"B",DFN,RAOIEN)) Q:ERROR  Q:RAOIEN=""  D  ; ICR 3074
"RTN","MAGDRPCB",194,0)
 . S STATUS=$$GET1^DIQ(75.1,RAOIEN,5) ; request status
"RTN","MAGDRPCB",195,0)
 . I "^^COMPLETE^DISCONTINUED^UNRELEASED^"[("^"_STATUS_"^") Q  ; quit if status is null too
"RTN","MAGDRPCB",196,0)
 . S Z=$G(^RAO(75.1,RAOIEN,0))
"RTN","MAGDRPCB",197,0)
 . K ORDER S $P(ORDER,"^",11)="" ; initialize ORDER string
"RTN","MAGDRPCB",198,0)
 . S $P(ORDER,"^",1)=RAOIEN ; file 75.1 IEN
"RTN","MAGDRPCB",199,0)
 . S PROCIEN=$P(Z,"^",2) ; procedure
"RTN","MAGDRPCB",200,0)
 . Q:PROCIEN=""  Q:'$D(^RAMIS(71,PROCIEN,0))  ; null or bad PROCIEN
"RTN","MAGDRPCB",201,0)
 . S INACTDAT=$P($G(^RAMIS(71,PROCIEN,"I")),U)
"RTN","MAGDRPCB",202,0)
 . I INACTDAT,INACTDAT<TODAY Q  ; ignore inactive procedures
"RTN","MAGDRPCB",203,0)
 . S $P(ORDER,"^",2)=PROCIEN ; procedure
"RTN","MAGDRPCB",204,0)
 . ; piece 3 of ORDER is modifier(s)
"RTN","MAGDRPCB",205,0)
 . S $P(ORDER,"^",4)=STATUS ; request status
"RTN","MAGDRPCB",206,0)
 . S $P(ORDER,"^",5)=$P(Z,"^",16) ; request entered date
"RTN","MAGDRPCB",207,0)
 . S $P(ORDER,"^",6)=$$GET1^DIQ(75.1,RAOIEN,1.1) ; reason for study
"RTN","MAGDRPCB",208,0)
 . I $D(^RADPT("AO",RAOIEN)) D
"RTN","MAGDRPCB",209,0)
 . . S RADFN=$O(^RADPT("AO",RAOIEN,"")) ; ICR 1172
"RTN","MAGDRPCB",210,0)
 . . S RADTI=$O(^RADPT("AO",RAOIEN,RADFN,""))
"RTN","MAGDRPCB",211,0)
 . . S RACNI=$O(^RADPT("AO",RAOIEN,RADFN,RADTI,""))
"RTN","MAGDRPCB",212,0)
 . . S $P(ORDER,"^",7)=RADTI
"RTN","MAGDRPCB",213,0)
 . . S $P(ORDER,"^",8)=RACNI
"RTN","MAGDRPCB",214,0)
 . . S MAGTMPEXAM=$NA(^TMP($T(+0),$J,"EXAM"))
"RTN","MAGDRPCB",215,0)
 . . S IENS=RACNI_","_RADTI_","_RADFN_","
"RTN","MAGDRPCB",216,0)
 . . S EXAMDATA=$NA(@MAGTMPEXAM@(70.03,IENS))
"RTN","MAGDRPCB",217,0)
 . . I $T(ACCFIND^RAAPI)'="" S FIELDS=".01;31;" ; requires RA*5.0*47
"RTN","MAGDRPCB",218,0)
 . . E  S FIELDS=".01;" ; no accession number field (#31)
"RTN","MAGDRPCB",219,0)
 . . K @MAGTMPEXAM,MAGMSG
"RTN","MAGDRPCB",220,0)
 . . D GETS^DIQ(70.03,IENS,FIELDS,"EI",MAGTMPEXAM,"MAGMSG") ; ICR 1172
"RTN","MAGDRPCB",221,0)
 . . I $D(MAGMSG) D ORDERERR(.ARRAY,.MAGMSG,-3) S ERROR=-3 Q  ; fatal FileMan error
"RTN","MAGDRPCB",222,0)
 . . S EXAMDATE=$$GET1^DIQ(70.02,(RADTI_","_RADFN),.01,"I") ; ICR 1172
"RTN","MAGDRPCB",223,0)
 . . S ACNUMB=$G(@EXAMDATA@(31,"E"))
"RTN","MAGDRPCB",224,0)
 . . I ACNUMB="" D
"RTN","MAGDRPCB",225,0)
 . . . S CASENUMB=@EXAMDATA@(.01,"E")
"RTN","MAGDRPCB",226,0)
 . . . S ACNUMB=$E(EXAMDATE,4,7)_$E(EXAMDATE,2,3)_"-"_CASENUMB
"RTN","MAGDRPCB",227,0)
 . . . Q
"RTN","MAGDRPCB",228,0)
 . . S $P(ORDER,"^",9)=ACNUMB,$P(ORDER,"^",10)=EXAMDATE
"RTN","MAGDRPCB",229,0)
 . . S IMAGLOCN=$$GET1^DIQ(70.02,(RADTI_","_RADFN),4) ; ICR 1172
"RTN","MAGDRPCB",230,0)
 . . S $P(ORDER,"^",11)=IMAGLOCN
"RTN","MAGDRPCB",231,0)
 . . Q
"RTN","MAGDRPCB",232,0)
 . ;
"RTN","MAGDRPCB",233,0)
 . I ERROR Q  ; FileMan error encountered in exam lookup
"RTN","MAGDRPCB",234,0)
 . ;
"RTN","MAGDRPCB",235,0)
 . ; get procedure modifier(s)
"RTN","MAGDRPCB",236,0)
 . S MAGTMPMOD=$NA(^TMP($T(+0),$J,"MODIFIER")),MODDATA=$NA(@MAGTMPMOD@("DILIST"))
"RTN","MAGDRPCB",237,0)
 . K @MAGTMPMOD,MAGMSG
"RTN","MAGDRPCB",238,0)
 . D LIST^DIC(75.1125,","_RAOIEN_",","@;.01;.01I;IX","",,,,,,,MAGTMPMOD,"MAGMSG") ; ICR 3074
"RTN","MAGDRPCB",239,0)
 . I $D(MAGMSG) D ORDERERR(.ARRAY,.MAGMSG,-4) Q  ; fatal FileMan error
"RTN","MAGDRPCB",240,0)
 . S MODCOUNT=+@MODDATA@(0)
"RTN","MAGDRPCB",241,0)
 . S MODIFIER=""
"RTN","MAGDRPCB",242,0)
 . F I=1:1:MODCOUNT D
"RTN","MAGDRPCB",243,0)
 . . S:$L(MODIFIER) MODIFIER=MODIFIER_"~"
"RTN","MAGDRPCB",244,0)
 . . S MODIEN=@MODDATA@(2,I)
"RTN","MAGDRPCB",245,0)
 . . S MODIFIER=MODIFIER_@MODDATA@("ID",MODIEN,.01,"E")_"|"_^("I")
"RTN","MAGDRPCB",246,0)
 . . Q
"RTN","MAGDRPCB",247,0)
 . S $P(ORDER,"^",3)=MODIFIER
"RTN","MAGDRPCB",248,0)
 . ;
"RTN","MAGDRPCB",249,0)
 . S ARRAY(1)=ARRAY(1)+1,ARRAY(ARRAY(1)+1)=ORDER
"RTN","MAGDRPCB",250,0)
 . Q
"RTN","MAGDRPCB",251,0)
 K:$D(MAGTMPEXAM) @MAGTMPEXAM K:$D(MAGTMPMOD) @MAGTMPMOD ; cleanup
"RTN","MAGDRPCB",252,0)
 Q
"RTN","MAGDRPCB",253,0)
 ;
"RTN","MAGDRPCB",254,0)
ORDERERR(ARRAY,MSG,ERRNUMB) ; handle FilMan errors in ORDER subroutine
"RTN","MAGDRPCB",255,0)
 N I,NODE
"RTN","MAGDRPCB",256,0)
 K ARRAY
"RTN","MAGDRPCB",257,0)
 S I=1,NODE="MSG"
"RTN","MAGDRPCB",258,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  D
"RTN","MAGDRPCB",259,0)
 . S I=I+1,ARRAY(I)=NODE
"RTN","MAGDRPCB",260,0)
 . I $D(@NODE) S ARRAY(I)=ARRAY(I)_"="_@NODE
"RTN","MAGDRPCB",261,0)
 . Q
"RTN","MAGDRPCB",262,0)
 S ARRAY(1)="-100,Fatal FileMan error #"_ERRNUMB
"RTN","MAGDRPCB",263,0)
 Q
"RTN","MAGDRPCB",264,0)
 ;
"RTN","MAGDRPCB",265,0)
IMAGELOC(RESULT,RAOIEN,RAMLC) ; RPC = MAG DICOM SET IMAGING LOCATION
"RTN","MAGDRPCB",266,0)
 N DIERR,MAGFDA,MAGMSG
"RTN","MAGDRPCB",267,0)
 ;
"RTN","MAGDRPCB",268,0)
 K RESULT
"RTN","MAGDRPCB",269,0)
 S RAOIEN=$G(RAOIEN)
"RTN","MAGDRPCB",270,0)
 I (RAOIEN'>0)!(RAOIEN'=+RAOIEN) D  Q
"RTN","MAGDRPCB",271,0)
 . S RESULT="-1,Invalid or missing Radiology Order pointer: """_RAOIEN_"""."
"RTN","MAGDRPCB",272,0)
 . Q
"RTN","MAGDRPCB",273,0)
 ;
"RTN","MAGDRPCB",274,0)
 S RAMLC=$G(RAMLC)
"RTN","MAGDRPCB",275,0)
 I (RAMLC'>0)!(RAMLC'=+RAMLC) D  Q
"RTN","MAGDRPCB",276,0)
 . S RESULT="-2,Invalid or missing Radiology Image Location identifier: """_RAMLC_"""."
"RTN","MAGDRPCB",277,0)
 . Q
"RTN","MAGDRPCB",278,0)
 ;
"RTN","MAGDRPCB",279,0)
 I $$GET1^DIQ(75.1,RAOIEN,.01)="" D  Q  ; ICR 3074
"RTN","MAGDRPCB",280,0)
 . S RESULT="-3,Missing Radiology Order for pointer: """_RAOIEN_"""."
"RTN","MAGDRPCB",281,0)
 . Q
"RTN","MAGDRPCB",282,0)
 ;
"RTN","MAGDRPCB",283,0)
 I $$GET1^DIQ(79.1,RAMLC,.01)="" D  Q  ; ICR 5357
"RTN","MAGDRPCB",284,0)
 . S RESULT="-4,Missing Radiology Image Location for pointer: """_RAMLC_"""."
"RTN","MAGDRPCB",285,0)
 . Q
"RTN","MAGDRPCB",286,0)
 ;
"RTN","MAGDRPCB",287,0)
 I $$GET1^DIQ(75.1,RAOIEN,20)="" D  Q  ; ICR 3074
"RTN","MAGDRPCB",288,0)
 . S MAGFDA(75.1,RAOIEN_",",20)=RAMLC ; IMAGING LOCATION
"RTN","MAGDRPCB",289,0)
 . D FILE^DIE("","MAGFDA","MAGMSG") ; ICR 3074
"RTN","MAGDRPCB",290,0)
 . I $D(MAGMSG) S RESULT="-5,Error setting Radiology Image Location" Q
"RTN","MAGDRPCB",291,0)
 . S RESULT="1,Radiology Image Location set for pointer: """_RAOIEN_"""."
"RTN","MAGDRPCB",292,0)
 . Q
"RTN","MAGDRPCB",293,0)
 E  D
"RTN","MAGDRPCB",294,0)
 . S RESULT="2,Radiology Image Location already set for pointer: """_RAOIEN_""", operation ignored."
"RTN","MAGDRPCB",295,0)
 . Q
"RTN","MAGDRPCB",296,0)
 Q
"RTN","MAGDRPCB",297,0)
 ;
"RTN","MAGDRPCB",298,0)
ADDROOM(RETURN,RAEXAM) ; RPC = MAG DICOM ADD CAMERA EQUIP RM
"RTN","MAGDRPCB",299,0)
 N HIT,I,IENS,LOCNAME,OUTSIDESTUDY,MAGFDA,MAGMSG,RADIMGLOC,ROOMS
"RTN","MAGDRPCB",300,0)
 K RETURN
"RTN","MAGDRPCB",301,0)
 ;
"RTN","MAGDRPCB",302,0)
 I $L($G(RAEXAM),"^")<2 S RETURN(0)="-1,Invalid or missing Radiology Exam pointer: """_RAEXAM_"""." Q
"RTN","MAGDRPCB",303,0)
 ; 
"RTN","MAGDRPCB",304,0)
 ; get the Radiology IMAGING LOCATION
"RTN","MAGDRPCB",305,0)
 S IENS=$P(RAEXAM,"^",2)_","_$P(RAEXAM,"^",1)_","
"RTN","MAGDRPCB",306,0)
 S RADIMGLOC=$$GET1^DIQ(70.02,IENS,4,"I")  ; ICR 1172
"RTN","MAGDRPCB",307,0)
 I 'RADIMGLOC S RETURN(0)="-2,Invalid or missing Radiology IMAGING LOCATION for Exam pointer: """_RAEXAM_"""." Q
"RTN","MAGDRPCB",308,0)
 S LOCNAME=$$GET1^DIQ(79.1,RADIMGLOC,.01)
"RTN","MAGDRPCB",309,0)
 ;
"RTN","MAGDRPCB",310,0)
 ; check if the IMAGING LOCATION has the OUTSIDE STUDY Camera/Equipment/Room
"RTN","MAGDRPCB",311,0)
 S OUTSIDESTUDY="OUTSIDE STUDY" ; designated name
"RTN","MAGDRPCB",312,0)
 D LIST^DIC(79.12,","_RADIMGLOC_",","@;.01","",,,,,,,"ROOMS","MAGMSG")
"RTN","MAGDRPCB",313,0)
 I $D(MAGMSG) D ORDERERR(.RETURN,.MAGMSG,-3) Q  ; fatal FileMan error
"RTN","MAGDRPCB",314,0)
 S HIT=0 F I=1:1:ROOMS("DILIST",0) D  Q:HIT
"RTN","MAGDRPCB",315,0)
 . I ROOMS("DILIST","ID",I,".01")=OUTSIDESTUDY S HIT=1
"RTN","MAGDRPCB",316,0)
 . Q
"RTN","MAGDRPCB",317,0)
 I HIT S RETURN(0)="2,"_OUTSIDESTUDY_" is already defined for """_LOCNAME_"""." Q
"RTN","MAGDRPCB",318,0)
 ;
"RTN","MAGDRPCB",319,0)
 ; add the OUTSIDE STUDY Camera/Equipment/Room to the IMAGING LOCATION
"RTN","MAGDRPCB",320,0)
 S MAGFDA(79.12,"+1,"_RADIMGLOC_",",.01)=OUTSIDESTUDY
"RTN","MAGDRPCB",321,0)
 D UPDATE^DIE("E","MAGFDA","MAGIENS","MAGMSG") ; ICR 5357
"RTN","MAGDRPCB",322,0)
 I $D(MAGMSG) D ORDERERR(.RETURN,.MAGMSG,-4) Q  ; fatal FileMan error
"RTN","MAGDRPCB",323,0)
 S RETURN(0)="1,"_OUTSIDESTUDY_" has been added for """_LOCNAME_"""."
"RTN","MAGDRPCB",324,0)
 Q
"RTN","MAGFXQRS")
0^34^B5583745
"RTN","MAGFXQRS",1,0)
MAGFXQRS ;WOIFO/MLH - clean up headers in ^MAGDAUDT(2006.5733); 31-Jan-2012 19:27
"RTN","MAGFXQRS",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGFXQRS",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGFXQRS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGFXQRS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGFXQRS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGFXQRS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGFXQRS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGFXQRS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGFXQRS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGFXQRS",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGFXQRS",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGFXQRS",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGFXQRS",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGFXQRS",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGFXQRS",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGFXQRS",17,0)
 ;;
"RTN","MAGFXQRS",18,0)
 Q
"RTN","MAGFXQRS",19,0)
 ; This routine resolves issues in ^MAGDAUDT(2006.5733), whose header node
"RTN","MAGFXQRS",20,0)
 ; and subnodes all formerly contained incorrect values in the file number
"RTN","MAGFXQRS",21,0)
 ; portion of the header (e.g., '2006.57633' instead of '2006.5733').
"RTN","MAGFXQRS",22,0)
 ; 
"RTN","MAGFXQRS",23,0)
 Q
"RTN","MAGFXQRS",24,0)
 ;
"RTN","MAGFXQRS",25,0)
CLEANUP ;
"RTN","MAGFXQRS",26,0)
 N FIL,FMDT,MAGIEN,ACTIX
"RTN","MAGFXQRS",27,0)
 S FIL=$NA(^MAGDAUDT(2006.5733))
"RTN","MAGFXQRS",28,0)
 L +@FIL:5 E  D  Q
"RTN","MAGFXQRS",29,0)
 . W:$D(IO(0)) !,"ERROR: Could not lock statistics file!",!
"RTN","MAGFXQRS",30,0)
 . Q
"RTN","MAGFXQRS",31,0)
 W:$D(IO(0)) !,"Correcting headers on QUERY/RETRIEVE STATISTICS file (#2006.5733)..."
"RTN","MAGFXQRS",32,0)
 S $P(@FIL@(0),"^",2)=2006.5733
"RTN","MAGFXQRS",33,0)
 S FMDT=0
"RTN","MAGFXQRS",34,0)
 F  S FMDT=$O(@FIL@(FMDT)) Q:'FMDT  D
"RTN","MAGFXQRS",35,0)
 . S $P(@FIL@(FMDT,0),"^",2)=2006.57331
"RTN","MAGFXQRS",36,0)
 . S MAGIEN=0
"RTN","MAGFXQRS",37,0)
 . F  S MAGIEN=$O(@FIL@(FMDT,1,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGFXQRS",38,0)
 . . S $P(@FIL@(FMDT,1,MAGIEN,1,0),"^",2)=2006.57332
"RTN","MAGFXQRS",39,0)
 . . S ACTIX=0
"RTN","MAGFXQRS",40,0)
 . . F  S ACTIX=$O(@FIL@(FMDT,1,MAGIEN,1,ACTIX)) Q:'ACTIX  D
"RTN","MAGFXQRS",41,0)
 . . . S $P(@FIL@(FMDT,1,MAGIEN,1,ACTIX,1,0),"^",2)=2006.57333
"RTN","MAGFXQRS",42,0)
 . . . Q
"RTN","MAGFXQRS",43,0)
 . . Q
"RTN","MAGFXQRS",44,0)
 . Q
"RTN","MAGFXQRS",45,0)
 W:$D(IO(0)) "done!"
"RTN","MAGFXQRS",46,0)
 L -@FIL
"RTN","MAGFXQRS",47,0)
 Q
"RTN","MAGGTID")
0^35^B64976541
"RTN","MAGGTID",1,0)
MAGGTID ;WOIFO/SRR/RED/SAF/GEK/SG/JSL/NST - Deletion of Images and Pointers ; 14 Feb 2012 9:05 AM
"RTN","MAGGTID",2,0)
 ;;3.0;IMAGING;**8,59,93,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGGTID",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTID",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTID",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTID",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTID",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTID",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTID",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTID",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTID",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTID",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTID",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTID",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTID",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",17,0)
 ;;
"RTN","MAGGTID",18,0)
 Q
"RTN","MAGGTID",19,0)
 ;
"RTN","MAGGTID",20,0)
IMAGEDEL(MAGGRY,MAGIEN,MAGGRPDF,REASON) ;RPC [MAGG IMAGE DELETE]
"RTN","MAGGTID",21,0)
 ; Call to Delete Image entry from Image file ^MAG(2005
"RTN","MAGGTID",22,0)
 ; MAGIEN   Image IEN ^ SYSDEL flag
"RTN","MAGGTID",23,0)
 ; MAGGRPDF   group delete flag   1 = group delete allowed
"RTN","MAGGTID",24,0)
 ; SYSDEL    Flag that forces delete, even if no KEY
"RTN","MAGGTID",25,0)
 ; 
"RTN","MAGGTID",26,0)
 N IEN,Y,RY
"RTN","MAGGTID",27,0)
 ; 1 in 3rd piece means : DELETE the Image File Also.
"RTN","MAGGTID",28,0)
 S MAGGRPDF=+$G(MAGGRPDF),REASON=$G(REASON),IEN=+MAGIEN
"RTN","MAGGTID",29,0)
 L +^MAG(2005,IEN):4
"RTN","MAGGTID",30,0)
 E  S MAGGRY(0)="Image ID# "_IEN_" is Locked. Delete is Canceled" Q
"RTN","MAGGTID",31,0)
 D DELETE(.MAGGRY,MAGIEN,1,MAGGRPDF,REASON)
"RTN","MAGGTID",32,0)
 L -^MAG(2005,IEN)
"RTN","MAGGTID",33,0)
 Q
"RTN","MAGGTID",34,0)
DELETE(RY,MAGIEN,DF,GRPDF,REASON) ;RPC [MAGQ DIK] Entry point for silent call
"RTN","MAGGTID",35,0)
 ;RY=Return Array RY(0)="1^SUCCESS" 
"RTN","MAGGTID",36,0)
 ;                RY(0)="0^reason for failure"
"RTN","MAGGTID",37,0)
 ;                ;NOT RETURNING LIST AT THIS TIME
"RTN","MAGGTID",38,0)
 ;                ( RY(1)..RY(n)= IEN's of deleted images.)
"RTN","MAGGTID",39,0)
 ;MAGIEN=Image entry number to be deleted
"RTN","MAGGTID",40,0)
 ; if MAGIEN has a 2nd piece = 1 then we force delete, don't test 
"RTN","MAGGTID",41,0)
 ; for MAG DELETE KEY
"RTN","MAGGTID",42,0)
 ;DF=Delete file flag - 1=delete the Image file
"RTN","MAGGTID",43,0)
 ;                    - 0=don't delete the image file
"RTN","MAGGTID",44,0)
 ;
"RTN","MAGGTID",45,0)
 S REASON=$G(REASON) I REASON="" S REASON="Unknown reason"
"RTN","MAGGTID",46,0)
 S RY(0)="0^Image Delete Failed, reason unknown."
"RTN","MAGGTID",47,0)
 I '$D(MAGSYS) D
"RTN","MAGGTID",48,0)
 . N Y
"RTN","MAGGTID",49,0)
 . D GETENV^%ZOSV  ; IA # 10097 
"RTN","MAGGTID",50,0)
 . S MAGSYS=$P(Y,"^",2)
"RTN","MAGGTID",51,0)
 . Q
"RTN","MAGGTID",52,0)
 N MAGERR,SYSDEL,Z,GRPDEL,MAGACN
"RTN","MAGGTID",53,0)
 S SYSDEL=+$P(MAGIEN,U,2),MAGIEN=+MAGIEN
"RTN","MAGGTID",54,0)
 ; Check the business rules for deleting an image
"RTN","MAGGTID",55,0)
 D DELETE^MAGSIMBR(.RY,MAGIEN,SYSDEL) I +RY(0)=0 Q
"RTN","MAGGTID",56,0)
 ;  a couple tests of privilege and valid IEN
"RTN","MAGGTID",57,0)
 I '$D(^MAG(2005,MAGIEN,0)) D  Q
"RTN","MAGGTID",58,0)
 . S RY(0)="0^Image entry doesn't exist in image file"
"RTN","MAGGTID",59,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)=0 D  Q
"RTN","MAGGTID",60,0)
 . S RY(0)="0^Deleting a Group is not allowed."
"RTN","MAGGTID",61,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)'=0 D  Q
"RTN","MAGGTID",62,0)
 . N MAGGRP S MAGGRP=MAGIEN N MAGIEN,MAGX,MAGOK,MAGFAIL
"RTN","MAGGTID",63,0)
 . S MAGX=0,MAGOK=0,MAGFAIL=0
"RTN","MAGGTID",64,0)
 . S GRPDEL=1  ; we are deleting a group - used in DELGRP entry
"RTN","MAGGTID",65,0)
 . F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D
"RTN","MAGGTID",66,0)
 . . S MAGIEN=$P($G(^MAG(2005,MAGGRP,1,MAGX,0)),"^") D DEL1IMG
"RTN","MAGGTID",67,0)
 . . I +RY(0) S Z=+$O(RY(""),-1),RY(Z)=RY(Z)_"^"_RY(0),MAGOK=MAGOK+1
"RTN","MAGGTID",68,0)
 . . E  S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN_"^"_RY(0),MAGFAIL=MAGFAIL+1
"RTN","MAGGTID",69,0)
 . . Q
"RTN","MAGGTID",70,0)
 . I +MAGFAIL=0 S RY(0)="1^Deletion of Group #"_MAGGRP_" was successful.^"_MAGOK_"^0"
"RTN","MAGGTID",71,0)
 . E  S RY(0)="0^Error deleting child image(s). Group Not Deleted.^"_MAGOK_"^"_MAGFAIL
"RTN","MAGGTID",72,0)
 . I (+MAGFAIL=0),$G(MAGACN)'="" D  ; No errors and Accession number exists
"RTN","MAGGTID",73,0)
 . . N SSEP,OUT
"RTN","MAGGTID",74,0)
 . . S SSEP=$$STATSEP^MAGVRS41
"RTN","MAGGTID",75,0)
 . . D DELNEW^MAGVD008(.OUT,MAGACN,REASON)  ; Delete studies in P34 data structure by accession number
"RTN","MAGGTID",76,0)
 . . I OUT<0 S RY(0)="0^Deletion of Group #"_MAGGRP_" was successful but failed in New: "_$P(OUT,SSEP,2)
"RTN","MAGGTID",77,0)
 . . Q
"RTN","MAGGTID",78,0)
 . Q
"RTN","MAGGTID",79,0)
 ; Ok lets start
"RTN","MAGGTID",80,0)
 ; lets delete the parent pointers first.
"RTN","MAGGTID",81,0)
DEL1IMG ;
"RTN","MAGGTID",82,0)
 N DELMSG,Z,MAGDFN
"RTN","MAGGTID",83,0)
 D DELPAR^MAGSDEL2
"RTN","MAGGTID",84,0)
 I $G(MAGERR) S RY(0)="0^Error: Deleting Specialty Pointers. Image Not Deleted. "_DELMSG Q
"RTN","MAGGTID",85,0)
 ;
"RTN","MAGGTID",86,0)
 ; Now delete image record & xref's
"RTN","MAGGTID",87,0)
 ; if this Image is member of group DELGRP will delete those pointers
"RTN","MAGGTID",88,0)
 ; and delete the Group, if this is only image in it.
"RTN","MAGGTID",89,0)
 S MAGDFN=$P($G(^MAG(2005,MAGIEN,0)),"^",7) ; Moved here from below. DELGRP needs MAGDFN now.
"RTN","MAGGTID",90,0)
 D DELGRP
"RTN","MAGGTID",91,0)
 I $G(MAGERR) S RY(0)="0^Error deleting Group Pointers." Q
"RTN","MAGGTID",92,0)
 ;
"RTN","MAGGTID",93,0)
 ; write the deleted by, delete reason, and delete date to the file.
"RTN","MAGGTID",94,0)
 D SETDEL(MAGIEN,REASON)
"RTN","MAGGTID",95,0)
 ;
"RTN","MAGGTID",96,0)
 ; save the Image record to the archive before we delete it.
"RTN","MAGGTID",97,0)
 D ARCHIVE(MAGIEN)
"RTN","MAGGTID",98,0)
 ;
"RTN","MAGGTID",99,0)
 ; Now let's set the Queue to delete the Image File, if Flag is set
"RTN","MAGGTID",100,0)
 I $G(DF) D DELFILE
"RTN","MAGGTID",101,0)
 ; 
"RTN","MAGGTID",102,0)
 ; we're having "APPXDT" crossref left around, lets delete it first.
"RTN","MAGGTID",103,0)
 S X=MAGDFN,DA=MAGIEN D KILPPXD^MAGUXRF
"RTN","MAGGTID",104,0)
 ;
"RTN","MAGGTID",105,0)
 ; now lets delete the image.
"RTN","MAGGTID",106,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR S DIK="^MAG(2005,",DA=MAGIEN
"RTN","MAGGTID",107,0)
 D ^DIK
"RTN","MAGGTID",108,0)
 S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN
"RTN","MAGGTID",109,0)
 ; we were having problems with "AC" so lets check to make sure.
"RTN","MAGGTID",110,0)
 I $D(^MAG(2005,"AC",MAGDFN,MAGIEN)) K ^MAG(2005,"AC",MAGDFN,MAGIEN)
"RTN","MAGGTID",111,0)
 ; log it.
"RTN","MAGGTID",112,0)
 D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGIEN),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1)
"RTN","MAGGTID",113,0)
 S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGIEN)
"RTN","MAGGTID",114,0)
 D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",115,0)
 ;
"RTN","MAGGTID",116,0)
 I '$G(GRPDEL),$G(MAGACN)'="" D  ; If we delete a single image in a group and ACN is defined
"RTN","MAGGTID",117,0)
 . N SSEP,OUT
"RTN","MAGGTID",118,0)
 . S SSEP=$$STATSEP^MAGVRS41
"RTN","MAGGTID",119,0)
 . D DELNEW^MAGVD008(.OUT,MAGACN,REASON)  ; Delete studies in P34 data structure by accession number
"RTN","MAGGTID",120,0)
 . I OUT<0 S RY(0)="0^Deletion of Image in Legacy was Successful but failed in New: "_$P(OUT,SSEP,2)
"RTN","MAGGTID",121,0)
 . E  S RY(0)="1^Deletion of Image was Successful."
"RTN","MAGGTID",122,0)
 . Q
"RTN","MAGGTID",123,0)
 E  S RY(0)="1^Deletion of Image was Successful."
"RTN","MAGGTID",124,0)
 Q
"RTN","MAGGTID",125,0)
DELGRP ;del grp ptrs and check to see if this is the last image in the group
"RTN","MAGGTID",126,0)
 N MAGGRP,MAGX,MAGQUIT,MAGIFNS,Z
"RTN","MAGGTID",127,0)
 S MAGGRP=$P($G(^MAG(2005,MAGIEN,0)),"^",10)
"RTN","MAGGTID",128,0)
 Q:'$G(MAGGRP)
"RTN","MAGGTID",129,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR
"RTN","MAGGTID",130,0)
 S MAGX=0,MAGQUIT=0
"RTN","MAGGTID",131,0)
 F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D  Q:MAGQUIT
"RTN","MAGGTID",132,0)
 . I +^MAG(2005,MAGGRP,1,MAGX,0)=MAGIEN D
"RTN","MAGGTID",133,0)
 . . S DIK="^MAG(2005,MAGGRP,1,",DA(1)=MAGGRP,DA=MAGX D ^DIK S MAGQUIT=1
"RTN","MAGGTID",134,0)
 . . ;added DA(1) needed for xref deletion of dicom series 
"RTN","MAGGTID",135,0)
 . I $O(^MAG(2005,MAGGRP,1,0))="" D
"RTN","MAGGTID",136,0)
 . . I $P($G(^MAG(2005,MAGGRP,2)),"^",6) D
"RTN","MAGGTID",137,0)
 . . . ;report is on group - need to delete it
"RTN","MAGGTID",138,0)
 . . . S MAGIFNS=MAGIEN,MAGIEN=MAGGRP
"RTN","MAGGTID",139,0)
 . . . D DELPAR^MAGSDEL2
"RTN","MAGGTID",140,0)
 . . . S MAGIEN=MAGIFNS
"RTN","MAGGTID",141,0)
 . . I '$D(MAGERR) D
"RTN","MAGGTID",142,0)
 . . . I $T(^MAGVD003)'="" D  ; This check needs to be removed after release of patch 118
"RTN","MAGGTID",143,0)
 . . . . N OUT
"RTN","MAGGTID",144,0)
 . . . . D GETACN^MAGVD003(.OUT,MAGGRP)  ; Get accession number for this group first
"RTN","MAGGTID",145,0)
 . . . . S MAGACN=$S($$ISOK^MAGVAF02(OUT):$$GETVAL^MAGVAF02(OUT),1:"")
"RTN","MAGGTID",146,0)
 . . . . Q
"RTN","MAGGTID",147,0)
 . . . D SETDEL(MAGGRP,REASON),ARCHIVE(MAGGRP) S DIK="^MAG(2005,",DA=MAGGRP D ^DIK
"RTN","MAGGTID",148,0)
 . . . ; Log the Deletion of The Group Header to  ^MAG(2006.95, and ^MAG(2006.82 
"RTN","MAGGTID",149,0)
 . . . D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGGRP),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1,"Group Header deleted")
"RTN","MAGGTID",150,0)
 . . . S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGGRP)
"RTN","MAGGTID",151,0)
 . . . D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",152,0)
 . . . S Z=+$O(RY(""),-1)+1,RY(Z)=MAGGRP_"^1^Deletion of Group was Successful."
"RTN","MAGGTID",153,0)
 . . . Q
"RTN","MAGGTID",154,0)
 . . Q
"RTN","MAGGTID",155,0)
 . Q
"RTN","MAGGTID",156,0)
 Q
"RTN","MAGGTID",157,0)
SETDEL(MAGIEN,REASON) ; set deletion fields
"RTN","MAGGTID",158,0)
 N DA,DR,DIE,X
"RTN","MAGGTID",159,0)
 ;N %H
"RTN","MAGGTID",160,0)
 ;S %H=$H D YMD^%DTC
"RTN","MAGGTID",161,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTID",162,0)
 ;  gek - changed 3 slash to 4 slash. to stop FM question marks. ??
"RTN","MAGGTID",163,0)
 S DR="30////"_DUZ_";30.1////"_X_";30.2////"_REASON
"RTN","MAGGTID",164,0)
 S DIE="2005",DA=MAGIEN D ^DIE
"RTN","MAGGTID",165,0)
 Q
"RTN","MAGGTID",166,0)
 ;
"RTN","MAGGTID",167,0)
ARCHIVE(MAGARCIE) ;save image data before deletion
"RTN","MAGGTID",168,0)
 N DA,DIK,MAGCNT,MAGLAST,SUB,TMP,%X,%Y
"RTN","MAGGTID",169,0)
 S MAGCNT=$P(^MAG(2005.1,0),U,4)+1
"RTN","MAGGTID",170,0)
 S %X="^MAG(2005,"_MAGARCIE_",",%Y="^MAG(2005.1,"_MAGARCIE_","
"RTN","MAGGTID",171,0)
 D %XY^%RCR
"RTN","MAGGTID",172,0)
 ;--- GEK 9/29/00 Fix the 3rd piece to be last IEN in file.
"RTN","MAGGTID",173,0)
 S MAGLAST=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGTID",174,0)
 S $P(^MAG(2005.1,0),U,4)=MAGCNT
"RTN","MAGGTID",175,0)
 I '($P(^MAG(2005.1,0),U,3)=MAGLAST) S $P(^MAG(2005.1,0),U,3)=MAGLAST
"RTN","MAGGTID",176,0)
 ;
"RTN","MAGGTID",177,0)
 ;--- Fix subfile numbers in the headers of the multiples (MAG*3*93).
"RTN","MAGGTID",178,0)
 ;    IF DEFINITIONS OF MULTIPLES OF THE IMAGE AUDIT FILE (#2005.1)
"RTN","MAGGTID",179,0)
 ;    CHANGE OR NEW MULTIPLES ARE ADDED, THE FOLLOWING CODE MUST BE
"RTN","MAGGTID",180,0)
 ;--- CHECKED AND UPDATED IF NECESSARY!
"RTN","MAGGTID",181,0)
 ;
"RTN","MAGGTID",182,0)
 F SUB="1^2005.14P","4^2005.1106DA","5^2005.11PA","6^2005.1111A","99^2005.199D"  D
"RTN","MAGGTID",183,0)
 . S TMP=$P(SUB,U)  Q:'($D(^MAG(2005.1,MAGARCIE,TMP,0))#2)
"RTN","MAGGTID",184,0)
 . S $P(^MAG(2005.1,MAGARCIE,TMP,0),U,2)=$P(SUB,U,2)
"RTN","MAGGTID",185,0)
 . Q
"RTN","MAGGTID",186,0)
 ;
"RTN","MAGGTID",187,0)
 ;--- Create cross-reference entries for the entry
"RTN","MAGGTID",188,0)
 S DA=MAGARCIE
"RTN","MAGGTID",189,0)
 S DIK="^MAG(2005.1," D IX1^DIK
"RTN","MAGGTID",190,0)
 Q
"RTN","MAGGTID",191,0)
DELFILE ;Delete image file on server if exists 
"RTN","MAGGTID",192,0)
 ;gek 3/21/2003  Changed to stop using FullRes Path for Abs,Big
"RTN","MAGGTID",193,0)
 ;   and only Delete .TXT and Alternates if Full is being deleted.
"RTN","MAGGTID",194,0)
 N X0,X1,X2,ALTEXT,ALTPATH,MAGXX,XBIG,MAGFILE2
"RTN","MAGGTID",195,0)
 N MAGPLC ; DBI - SEB 9/20/2002
"RTN","MAGGTID",196,0)
 ; MAGIEN IS ASSUMED TO BE DEFINED.
"RTN","MAGGTID",197,0)
 ; MAGXX         - This is IEN in ^MAG(2005, MAGFILEB Expects this to be defined.
"RTN","MAGGTID",198,0)
 ; MAGPLC        - "Place" of Full Res Image.  
"RTN","MAGGTID",199,0)
 ; ALTEXT        - Extension of the Alternate image file.
"RTN","MAGGTID",200,0)
 ; ALTPATH       - Full path of Alternate image file.
"RTN","MAGGTID",201,0)
 S X0=^MAG(2005,MAGIEN,0)
"RTN","MAGGTID",202,0)
 ;delete Full Res if one exists on Magnetic
"RTN","MAGGTID",203,0)
 I $P(X0,U,3) D
"RTN","MAGGTID",204,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",205,0)
 . S MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"F")
"RTN","MAGGTID",206,0)
 . D VSTNOCP^MAGFILEB
"RTN","MAGGTID",207,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,MAGPLC)
"RTN","MAGGTID",208,0)
 . ;Delete any other ALTernate files. ( TXT) 
"RTN","MAGGTID",209,0)
 . ;gek 3/31/03  Since ALT files are (for now) always on same server as Full
"RTN","MAGGTID",210,0)
 . ;    We only attempt to delete them here  (If we have a path to FullRes on Magnetic)
"RTN","MAGGTID",211,0)
 . S X2=0
"RTN","MAGGTID",212,0)
 . F  S X2=$O(^MAG(2006.1,MAGPLC,2,X2)) Q:'X2  D
"RTN","MAGGTID",213,0)
 . . S ALTEXT=$P(^MAG(2006.1,MAGPLC,2,X2,0),"^",1)             ;CR1023
"RTN","MAGGTID",214,0)
 . . S ALTPATH=MAGFILE2,$P(ALTPATH,".",$L(ALTPATH,"."))=ALTEXT ;CR1023 for FQDN issue
"RTN","MAGGTID",215,0)
 . . S X=$$DELETE^MAGBAPI(ALTPATH,MAGPLC)
"RTN","MAGGTID",216,0)
 . Q
"RTN","MAGGTID",217,0)
 ;
"RTN","MAGGTID",218,0)
 ;delete image abstract if one exists on Magnetic
"RTN","MAGGTID",219,0)
 I $P(X0,U,4) D
"RTN","MAGGTID",220,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",221,0)
 . D ABSNOCP^MAGFILEB
"RTN","MAGGTID",222,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"A")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",223,0)
 ;
"RTN","MAGGTID",224,0)
 ;delete the big file if one exists on Magnetic
"RTN","MAGGTID",225,0)
 S XBIG=$G(^MAG(2005,MAGIEN,"FBIG"))
"RTN","MAGGTID",226,0)
 I $P(XBIG,U) D 
"RTN","MAGGTID",227,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",228,0)
 . D BIGNOCP^MAGFILEB
"RTN","MAGGTID",229,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"B")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",230,0)
 Q
"RTN","MAGIP118")
0^^B140430902
"RTN","MAGIP118",1,0)
MAGIP118 ;WOIFO/NST,DAC - Install code for MAG*3.0*118 ; 6 Mar 2013  4:35 PM
"RTN","MAGIP118",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGIP118",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIP118",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP118",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIP118",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIP118",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIP118",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIP118",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIP118",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIP118",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIP118",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIP118",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIP118",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIP118",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIP118",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP118",17,0)
 ;;
"RTN","MAGIP118",18,0)
 ;***** Environment Check
"RTN","MAGIP118",19,0)
 N IEN
"RTN","MAGIP118",20,0)
 S IEN=0
"RTN","MAGIP118",21,0)
 S IEN=$O(^MAGD(2006.575,IEN))
"RTN","MAGIP118",22,0)
 I +IEN'="0" S XPDQUIT=2 W !,"You must resolve all failed image entries via the Correct RAD-DICOM File option before installation.",!
"RTN","MAGIP118",23,0)
 S IEN=0
"RTN","MAGIP118",24,0)
 S IEN=$O(^MAGD(2006.5752,IEN))
"RTN","MAGIP118",25,0)
 I +IEN'="0" S XPDQUIT=2 W !,"You must resolve all IMPORTABLE DICOM OBJECTS (#2006.5752) file entries before installation.",!
"RTN","MAGIP118",26,0)
 I $G(XPDQUIT)=2 W !,"Installation aborted."
"RTN","MAGIP118",27,0)
 Q
"RTN","MAGIP118",28,0)
 ;
"RTN","MAGIP118",29,0)
 ;+++++ INSTALLATION ERROR HANDLING
"RTN","MAGIP118",30,0)
ERROR ;
"RTN","MAGIP118",31,0)
 S:$D(XPDNM) XPDABORT=1
"RTN","MAGIP118",32,0)
 ;--- Display the messages and store them to the INSTALL file
"RTN","MAGIP118",33,0)
 D DUMP^MAGUERR1(),ABTMSG^MAGKIDS()
"RTN","MAGIP118",34,0)
 Q
"RTN","MAGIP118",35,0)
 ;
"RTN","MAGIP118",36,0)
 ;***** POST-INSTALL CODE
"RTN","MAGIP118",37,0)
POS ;
"RTN","MAGIP118",38,0)
 N CALLBACK
"RTN","MAGIP118",39,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGIP118",40,0)
 ;
"RTN","MAGIP118",41,0)
 N MAGKIDS1,MENU
"RTN","MAGIP118",42,0)
 ;
"RTN","MAGIP118",43,0)
 ; Execute post install for patch 34
"RTN","MAGIP118",44,0)
 D ADDAD^MAGIP118 ; Update Artifact Descriptor file (#2006.915)
"RTN","MAGIP118",45,0)
 D STORAGE^MAGIP118
"RTN","MAGIP118",46,0)
 D CLEAN ; Clean up DDs and DICOM UID SPECIFIC ACTION file (#2006.539)
"RTN","MAGIP118",47,0)
 D UPDATE^MAGVSOPU ; Update DICOM UID SPECIFIC ACTION file (#2006.539)
"RTN","MAGIP118",48,0)
 D UPDATE^MAGVSOPC ; Update DICOM SOP CLASS file (#2006.532)
"RTN","MAGIP118",49,0)
 D CLEANUP^MAGFXQRS ; clean up headers on QUERY/RETRIEVE STATISTICS file (#2006.5733)
"RTN","MAGIP118",50,0)
 S MENU=$$ADD^XPDMENU("MAG SYS MENU","MAGV AE SEC MX SETTINGS") ; Add Edit AE Security Matrix option 
"RTN","MAGIP118",51,0)
 S MENU=$$ADD^XPDMENU("MAG SYS MENU","MAG SYS-DELETE STUDY") ; Delete study by Accession number
"RTN","MAGIP118",52,0)
 S MENU=$$ADD^XPDMENU("MAG SYS MENU","MAGD DICOM MENU")
"RTN","MAGIP118",53,0)
 S MENU=$$ADD^XPDMENU("MAG SYS MENU","MAGV HDIG MENU")
"RTN","MAGIP118",54,0)
 S MENU=$$ADD^XPDMENU("MAGV HDIG MENU","MAGVA ASYNC STORAGE ERR QURY")
"RTN","MAGIP118",55,0)
 S MENU=$$ADD^XPDMENU("MAGV HDIG MENU","MAGVA ASYNC STORAGE ERR LIST")
"RTN","MAGIP118",56,0)
 S MENU=$$ADD^XPDMENU("MAGV HDIG MENU","MAGVA ASYNC STORAGE ERR REQU")
"RTN","MAGIP118",57,0)
 ;
"RTN","MAGIP118",58,0)
 ;
"RTN","MAGIP118",59,0)
 ;--- Link new remote procedures to context option MAG DICOM VISA.
"RTN","MAGIP118",60,0)
 S CALLBACK="$$ADDRPCS^"_$NA(MAGKIDS1("RPCL34V^"_$T(+0),"MAG DICOM VISA"))
"RTN","MAGIP118",61,0)
 I $$CP^MAGKIDS("MAG ATTACH RPCS P34",CALLBACK)<0  D ERROR  Q
"RTN","MAGIP118",62,0)
 ;
"RTN","MAGIP118",63,0)
 S CALLBACK="$$ADDRPCS^"_$NA(MAGKIDS1("RPCL116V^"_$T(+0),"MAG DICOM VISA"))
"RTN","MAGIP118",64,0)
 I $$CP^MAGKIDS("MAG ATTACH RPCS P116",CALLBACK)<0  D ERROR  Q
"RTN","MAGIP118",65,0)
 ;
"RTN","MAGIP118",66,0)
 S CALLBACK="$$ADDRPCS^"_$NA(MAGKIDS1("RPCL118V^"_$T(+0),"MAG DICOM VISA"))
"RTN","MAGIP118",67,0)
 I $$CP^MAGKIDS("MAG ATTACH RPCS P118",CALLBACK)<0  D ERROR  Q
"RTN","MAGIP118",68,0)
 ;
"RTN","MAGIP118",69,0)
 ;--- Link new remote procedures to the Broker context option.
"RTN","MAGIP118",70,0)
 S CALLBACK="$$ADDRPCS^"_$NA(MAGKIDS1("RPCL118W^"_$T(+0),"MAG WINDOWS"))
"RTN","MAGIP118",71,0)
 I $$CP^MAGKIDS("MAG ATTACH RPCS P118 WIN",CALLBACK)<0  D ERROR  Q
"RTN","MAGIP118",72,0)
 ;
"RTN","MAGIP118",73,0)
 ;--- Add IMPORTER entry to DICOM AE Security Matrix
"RTN","MAGIP118",74,0)
 I $$CP^MAGKIDS("MAG IMPORTER AE ENTRY","$$ADDIMPAE^"_$T(+0))<0  D ERROR Q
"RTN","MAGIP118",75,0)
 ;
"RTN","MAGIP118",76,0)
 ;--- Add IMAGING EVENT ACTION file (#2006.931) entries
"RTN","MAGIP118",77,0)
 I $$CP^MAGKIDS("MAG EVENT ACTIONS","$$ADDEVENT^"_$T(+0))<0  D ERROR Q
"RTN","MAGIP118",78,0)
 ;
"RTN","MAGIP118",79,0)
 ;--- Send the notification e-mail
"RTN","MAGIP118",80,0)
 D BMES^XPDUTL("Post Install Mail Message: "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP118",81,0)
 D INS^MAGQBUT4(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGIP118",82,0)
 Q
"RTN","MAGIP118",83,0)
 ;
"RTN","MAGIP118",84,0)
 ;***** PRE-INSTALL CODE
"RTN","MAGIP118",85,0)
PRE ;
"RTN","MAGIP118",86,0)
 ;--- Delete the FORCE RECONCILIATION field (#1.3)
"RTN","MAGIP118",87,0)
 D DELFLDS^MAGKIDS(2006.9192,"1.3")
"RTN","MAGIP118",88,0)
 Q
"RTN","MAGIP118",89,0)
 ;+++++ LIST OF NEW REMOTE PROCEDURES
"RTN","MAGIP118",90,0)
 ; have a list in format ;;MAG4 IMAGE LIST
"RTN","MAGIP118",91,0)
RPCL34V ;
"RTN","MAGIP118",92,0)
 ;;MAGV ATTACH IMAGE INSTANCE
"RTN","MAGIP118",93,0)
 ;;MAGV ATTACH PAT PROC REF
"RTN","MAGIP118",94,0)
 ;;MAGV ATTACH SERIES
"RTN","MAGIP118",95,0)
 ;;MAGV ATTACH SOP
"RTN","MAGIP118",96,0)
 ;;MAGV ATTACH STUDY
"RTN","MAGIP118",97,0)
 ;;MAGV CREATE DICOM FAILED IMAGE
"RTN","MAGIP118",98,0)
 ;;MAGV CREATE PAT REF
"RTN","MAGIP118",99,0)
 ;;MAGV DELETE DICOM FAILED IMAGE
"RTN","MAGIP118",100,0)
 ;;MAGV DGW ACTION UID LIST
"RTN","MAGIP118",101,0)
 ;;MAGV DGW INSTRUMENT LIST
"RTN","MAGIP118",102,0)
 ;;MAGV DGW MODALITY LIST
"RTN","MAGIP118",103,0)
 ;;MAGV DICOM GET COUNT
"RTN","MAGIP118",104,0)
 ;;MAGV DICOM SET INSTRUMENT LIST
"RTN","MAGIP118",105,0)
 ;;MAGV DICOM SET MODALITY LIST
"RTN","MAGIP118",106,0)
 ;;MAGV FIND PAT REF
"RTN","MAGIP118",107,0)
 ;;MAGV FIND PROC REF
"RTN","MAGIP118",108,0)
 ;;MAGV FIND SERIES BY REFERENCE
"RTN","MAGIP118",109,0)
 ;;MAGV FIND SERIES BY UID
"RTN","MAGIP118",110,0)
 ;;MAGV FIND SOP BY UID
"RTN","MAGIP118",111,0)
 ;;MAGV FIND STUDY BY UID
"RTN","MAGIP118",112,0)
 ;;MAGV GET ACCESSION NUM
"RTN","MAGIP118",113,0)
 ;;MAGV GET DGW CONFIG
"RTN","MAGIP118",114,0)
 ;;MAGV GET DICOM FAILED IMAGE
"RTN","MAGIP118",115,0)
 ;;MAGV GET IMAGE FILE
"RTN","MAGIP118",116,0)
 ;;MAGV GET ORIG IMAGE FILE
"RTN","MAGIP118",117,0)
 ;;MAGV GET PAT INFO
"RTN","MAGIP118",118,0)
 ;;MAGV GET PAT REF ATTS
"RTN","MAGIP118",119,0)
 ;;MAGV GET PROC REF ATTS
"RTN","MAGIP118",120,0)
 ;;MAGV GET PROCEDURE INFO
"RTN","MAGIP118",121,0)
 ;;MAGV GET REPORT
"RTN","MAGIP118",122,0)
 ;;MAGV GET SERIES
"RTN","MAGIP118",123,0)
 ;;MAGV GET SOP DATA
"RTN","MAGIP118",124,0)
 ;;MAGV GET STUDY
"RTN","MAGIP118",125,0)
 ;;MAGV INACTIVATE INSTANCE FILE
"RTN","MAGIP118",126,0)
 ;;MAGV INACTIVATE PAT REF
"RTN","MAGIP118",127,0)
 ;;MAGV INACTIVATE PROC REF
"RTN","MAGIP118",128,0)
 ;;MAGV INACTIVATE SERIES
"RTN","MAGIP118",129,0)
 ;;MAGV INACTIVATE SOP
"RTN","MAGIP118",130,0)
 ;;MAGV INACTIVATE STUDY
"RTN","MAGIP118",131,0)
 ;;MAGV SERIES UID CHECK
"RTN","MAGIP118",132,0)
 ;;MAGV SET DGW CONFIG
"RTN","MAGIP118",133,0)
 ;;MAGV SET DICOM FAILED IMAGE
"RTN","MAGIP118",134,0)
 ;;MAGV SOP UID CHECK
"RTN","MAGIP118",135,0)
 ;;MAGV STUDY LOOKUP
"RTN","MAGIP118",136,0)
 ;;MAGV STUDY UID CHECK
"RTN","MAGIP118",137,0)
 ;;MAGV TRAVERSE IMAGE FILE
"RTN","MAGIP118",138,0)
 ;;MAGV TRAVERSE PROC REF
"RTN","MAGIP118",139,0)
 ;;MAGV TRAVERSE SERIES
"RTN","MAGIP118",140,0)
 ;;MAGV TRAVERSE SOP
"RTN","MAGIP118",141,0)
 ;;MAGV TRAVERSE STUDY
"RTN","MAGIP118",142,0)
 ;;MAGV UPDATE IMAGE FILE
"RTN","MAGIP118",143,0)
 ;;MAGV UPDATE PAT PROC REF
"RTN","MAGIP118",144,0)
 ;;MAGV UPDATE PAT REF
"RTN","MAGIP118",145,0)
 ;;MAGV UPDATE SERIES
"RTN","MAGIP118",146,0)
 ;;MAGV UPDATE SOP
"RTN","MAGIP118",147,0)
 ;;MAGV UPDATE STUDY
"RTN","MAGIP118",148,0)
 ;;MAGVA CREATE AD
"RTN","MAGIP118",149,0)
 ;;MAGVA CREATE AINSTANCE
"RTN","MAGIP118",150,0)
 ;;MAGVA CREATE ARETPOL
"RTN","MAGIP118",151,0)
 ;;MAGVA CREATE ARTIFACT W KL
"RTN","MAGIP118",152,0)
 ;;MAGVA CREATE KEYLIST
"RTN","MAGIP118",153,0)
 ;;MAGVA CREATE PROVAVAILTY
"RTN","MAGIP118",154,0)
 ;;MAGVA CREATE PROVIDER
"RTN","MAGIP118",155,0)
 ;;MAGVA CREATE QUEUE
"RTN","MAGIP118",156,0)
 ;;MAGVA CREATE RETPOL
"RTN","MAGIP118",157,0)
 ;;MAGVA CREATE RETPOL PROV MAP
"RTN","MAGIP118",158,0)
 ;;MAGVA CREATE RETPOLFF
"RTN","MAGIP118",159,0)
 ;;MAGVA CREATE STORAGE TA
"RTN","MAGIP118",160,0)
 ;;MAGVA CREATE TRF STATS
"RTN","MAGIP118",161,0)
 ;;MAGVA DELETE KEYLIST
"RTN","MAGIP118",162,0)
 ;;MAGVA DELETE PROVAVAILTY
"RTN","MAGIP118",163,0)
 ;;MAGVA DELETE RETPOL PROV MAP
"RTN","MAGIP118",164,0)
 ;;MAGVA DEQUEUE Q MSG
"RTN","MAGIP118",165,0)
 ;;MAGVA ENQUEUE Q MSG
"RTN","MAGIP118",166,0)
 ;;MAGVA FIND KEYLIST
"RTN","MAGIP118",167,0)
 ;;MAGVA GET A AIS ARPS AND RPFFS
"RTN","MAGIP118",168,0)
 ;;MAGVA GET A W KL AND AIS
"RTN","MAGIP118",169,0)
 ;;MAGVA GET A W KL AND AIS BY KL
"RTN","MAGIP118",170,0)
 ;;MAGVA GET A W KL AND AIS BY PK
"RTN","MAGIP118",171,0)
 ;;MAGVA GET ALL ADS
"RTN","MAGIP118",172,0)
 ;;MAGVA GET ALL PROVAVAILS
"RTN","MAGIP118",173,0)
 ;;MAGVA GET ALL PROVIDERS
"RTN","MAGIP118",174,0)
 ;;MAGVA GET ALL QUEUES
"RTN","MAGIP118",175,0)
 ;;MAGVA GET ALL RETPOL PROV MAPS
"RTN","MAGIP118",176,0)
 ;;MAGVA GET ALL RETPOLS
"RTN","MAGIP118",177,0)
 ;;MAGVA GET ALL SITE PARAM IDS
"RTN","MAGIP118",178,0)
 ;;MAGVA GET ARTIFACT W KL
"RTN","MAGIP118",179,0)
 ;;MAGVA GET CWL
"RTN","MAGIP118",180,0)
 ;;MAGVA GET JUKEBOX WL
"RTN","MAGIP118",181,0)
 ;;MAGVA GET KEYLIST
"RTN","MAGIP118",182,0)
 ;;MAGVA GET NET LOC DETAILS
"RTN","MAGIP118",183,0)
 ;;MAGVA PEEK Q MSG
"RTN","MAGIP118",184,0)
 ;;MAGVA SET AD RETPOL
"RTN","MAGIP118",185,0)
 ;;MAGVA UPDATE ARETPOL
"RTN","MAGIP118",186,0)
 ;;MAGVA UPDATE ARTIFACT
"RTN","MAGIP118",187,0)
 ;;MAGVA UPDATE LAST ACCESS DT
"RTN","MAGIP118",188,0)
 ;;MAGVA UPDATE PROVAVAILTY
"RTN","MAGIP118",189,0)
 ;;MAGVA UPDATE PROVIDER
"RTN","MAGIP118",190,0)
 ;;MAGVA UPDATE RETPOL PROV MAP
"RTN","MAGIP118",191,0)
 ;;MAG DICOM CHECK AE TITLE
"RTN","MAGIP118",192,0)
 ;;MAG DICOM VISTA AE TITLE
"RTN","MAGIP118",193,0)
 ;;MAG DICOM GET GATEWAY INFO
"RTN","MAGIP118",194,0)
 Q 0
"RTN","MAGIP118",195,0)
 ;
"RTN","MAGIP118",196,0)
RPCL116V ;
"RTN","MAGIP118",197,0)
 ;;MAG EVENT AUDIT
"RTN","MAGIP118",198,0)
 Q 0
"RTN","MAGIP118",199,0)
 ;
"RTN","MAGIP118",200,0)
RPCL118V ;
"RTN","MAGIP118",201,0)
 ;;MAG CFIND QUERY
"RTN","MAGIP118",202,0)
 ;;MAG DICOM GET HOSP LOCATION
"RTN","MAGIP118",203,0)
 ;;MAG DICOM RADIOLOGY MODIFIERS
"RTN","MAGIP118",204,0)
 ;;MAG DICOM RADIOLOGY PROCEDURES
"RTN","MAGIP118",205,0)
 ;;MAG EVENT AUDIT
"RTN","MAGIP118",206,0)
 ;;MAG IMAGE CURRENT INFO
"RTN","MAGIP118",207,0)
 ;;MAG STUDY UID QUERY
"RTN","MAGIP118",208,0)
 ;;MAG4 INDEX GET ORIGIN
"RTN","MAGIP118",209,0)
 ;;MAGG INSTALL
"RTN","MAGIP118",210,0)
 ;;MAGV ADD WORK ITEM TAGS
"RTN","MAGIP118",211,0)
 ;;MAGV CONFIRM RAD ORDER
"RTN","MAGIP118",212,0)
 ;;MAGV CREATE WORK ITEM
"RTN","MAGIP118",213,0)
 ;;MAGV DELETE WORK ITEM
"RTN","MAGIP118",214,0)
 ;;MAGV FIND WORK ITEM
"RTN","MAGIP118",215,0)
 ;;MAGV GET NEXT WORK ITEM
"RTN","MAGIP118",216,0)
 ;;MAGV GET PAT ORDERS
"RTN","MAGIP118",217,0)
 ;;MAGV GET RADIOLOGY PROCEDURES
"RTN","MAGIP118",218,0)
 ;;MAGV GET WORK ITEM
"RTN","MAGIP118",219,0)
 ;;MAGV GET WORKLISTS
"RTN","MAGIP118",220,0)
 ;;MAGV IMPORT STATUS
"RTN","MAGIP118",221,0)
 ;;MAGV UPDATE WORK ITEM
"RTN","MAGIP118",222,0)
 ;;MAGV IMPORT MEDIA LOG STORE
"RTN","MAGIP118",223,0)
 ;;MAGV IMPORT STUDY LOG REPORT
"RTN","MAGIP118",224,0)
 ;;MAGV IMPORT STUDY LOG STORE
"RTN","MAGIP118",225,0)
 ;;MAGV RAD EXAM ORDER
"RTN","MAGIP118",226,0)
 ;;MAGV RAD EXAM REGISTER
"RTN","MAGIP118",227,0)
 ;;MAGV RAD STAT COMPLETE
"RTN","MAGIP118",228,0)
 ;;MAGV RAD STAT EXAMINED
"RTN","MAGIP118",229,0)
 ;;MAGV WORK ITEMS COUNT
"RTN","MAGIP118",230,0)
 ;;PSB GETPROVIDER
"RTN","MAGIP118",231,0)
 Q 0
"RTN","MAGIP118",232,0)
 ;
"RTN","MAGIP118",233,0)
RPCL118W ;
"RTN","MAGIP118",234,0)
 ;;MAG FILEMAN FIELD ATTS
"RTN","MAGIP118",235,0)
 ;;MAG FILEMAN FIELD LIST
"RTN","MAGIP118",236,0)
 ;;MAGV SEARCH BY ATTRIBUTE
"RTN","MAGIP118",237,0)
 ;;XUS DIVISION GET
"RTN","MAGIP118",238,0)
 Q 0
"RTN","MAGIP118",239,0)
 ;
"RTN","MAGIP118",240,0)
 ;--- Add an import entry to the AE Security Matrix
"RTN","MAGIP118",241,0)
 ;
"RTN","MAGIP118",242,0)
ADDIMPAE() ;
"RTN","MAGIP118",243,0)
 N FDA1,FDA2,FDA3,SMIEN
"RTN","MAGIP118",244,0)
 I $D(^MAGV(2006.9192,"B","IMPORTER")) Q 0
"RTN","MAGIP118",245,0)
 S FDA1(2006.9192,"+1,",.01)="IMPORTER"
"RTN","MAGIP118",246,0)
 S FDA1(2006.9192,"+1,",1)="VISTA_STORAGE"
"RTN","MAGIP118",247,0)
 S FDA1(2006.9192,"+1,",1.1)="IMPORTER"
"RTN","MAGIP118",248,0)
 S FDA1(2006.9192,"+1,",1.3)=1
"RTN","MAGIP118",249,0)
 S FDA1(2006.9192,"+1,",2)=$G(DUZ(2))
"RTN","MAGIP118",250,0)
 S FDA1(2006.9192,"+1,",6)=1
"RTN","MAGIP118",251,0)
 S FDA1(2006.9192,"+1,",7)=1
"RTN","MAGIP118",252,0)
 S FDA1(2006.9192,"+1,",8)=1
"RTN","MAGIP118",253,0)
 S FDA1(2006.9192,"+1,",9)=1
"RTN","MAGIP118",254,0)
 S FDA1(2006.9192,"+1,",10)=1
"RTN","MAGIP118",255,0)
 S FDA1(2006.9192,"+1,",11)="RAD"
"RTN","MAGIP118",256,0)
 D UPDATE^DIE("","FDA1","SMIEN")
"RTN","MAGIP118",257,0)
 S FDA2(2006.919212,"+1,"_SMIEN(1)_",",.01)=1
"RTN","MAGIP118",258,0)
 S FDA2(2006.919212,"+1,"_SMIEN(1)_",",1)=1
"RTN","MAGIP118",259,0)
 D UPDATE^DIE("","FDA2")
"RTN","MAGIP118",260,0)
 Q 0
"RTN","MAGIP118",261,0)
 ;
"RTN","MAGIP118",262,0)
 ;--- Add new entries to the IMAGING EVENT ACTION file (#2006.931).
"RTN","MAGIP118",263,0)
 ;
"RTN","MAGIP118",264,0)
ADDEVENT() ;
"RTN","MAGIP118",265,0)
 N CT,FDA1,FILE,NAME S CT=0,FILE=2006.931
"RTN","MAGIP118",266,0)
 F NAME="CLIENT LOGIN","IMPORTER AE SECURITY SUCCESS","IMPORTER AE SECURITY FAILURE" D
"RTN","MAGIP118",267,0)
 . I '$D(^MAGV(FILE,"B",NAME)) S CT=CT+1,FDA1(FILE,"+"_CT_",",.01)=NAME
"RTN","MAGIP118",268,0)
 D:CT UPDATE^DIE("","FDA1")
"RTN","MAGIP118",269,0)
 Q 0
"RTN","MAGIP118",270,0)
 ;
"RTN","MAGIP118",271,0)
STORAGE ; Loop through IMAGE (#2006.1) file and update STORAGE PROVIDER (#2006.917) file
"RTN","MAGIP118",272,0)
 N IEN
"RTN","MAGIP118",273,0)
 S IEN=0
"RTN","MAGIP118",274,0)
 F  S IEN=$O(^MAG(2006.1,IEN)) Q:+IEN=0  D
"RTN","MAGIP118",275,0)
 . D ADDP(IEN)
"RTN","MAGIP118",276,0)
 . Q
"RTN","MAGIP118",277,0)
 Q 
"RTN","MAGIP118",278,0)
ADDP(IEN) ; Add STORAGE PROVIDER file (#2006.917)
"RTN","MAGIP118",279,0)
 I $D(^MAGV(2006.917,"B",IEN)) Q
"RTN","MAGIP118",280,0)
 N MAGPARAM,MAGRY,RESDEL,PIEN1,PIEN2
"RTN","MAGIP118",281,0)
 S RESDEL=$$RESDEL^MAGVAF02
"RTN","MAGIP118",282,0)
 S MAGPARAM("STORAGE PROVIDER TYPE")="RAID"
"RTN","MAGIP118",283,0)
 S MAGPARAM("STORAGE PLACE")=IEN
"RTN","MAGIP118",284,0)
 S MAGPARAM("ARCHIVE")=0
"RTN","MAGIP118",285,0)
 S MAGPARAM("PRIMARY STORAGE")=1
"RTN","MAGIP118",286,0)
 S MAGPARAM("WRITABLE")=1
"RTN","MAGIP118",287,0)
 D ADDPRV^MAGVAC01(.MAGRY,.MAGPARAM)
"RTN","MAGIP118",288,0)
 S PIEN1=$P(MAGRY,RESDEL,3)
"RTN","MAGIP118",289,0)
 K MAGRY,MAGPARAM
"RTN","MAGIP118",290,0)
 S MAGPARAM("STORAGE PROVIDER TYPE")="JUKEBOX"
"RTN","MAGIP118",291,0)
 S MAGPARAM("STORAGE PLACE")=IEN
"RTN","MAGIP118",292,0)
 S MAGPARAM("ARCHIVE")=1
"RTN","MAGIP118",293,0)
 S MAGPARAM("PRIMARY STORAGE")=0
"RTN","MAGIP118",294,0)
 S MAGPARAM("WRITABLE")=1
"RTN","MAGIP118",295,0)
 D ADDPRV^MAGVAC01(.MAGRY,.MAGPARAM)
"RTN","MAGIP118",296,0)
 S PIEN2=$P(MAGRY,RESDEL,3)
"RTN","MAGIP118",297,0)
 D ADDRE(IEN,PIEN1,1),ADDRE(IEN,PIEN2,0)
"RTN","MAGIP118",298,0)
 D ADDPA(IEN,PIEN1),ADDPA(IEN,PIEN2)
"RTN","MAGIP118",299,0)
 Q
"RTN","MAGIP118",300,0)
ADDRE(IEN,PIEN,RAID) ; Add Retention - 2006.923
"RTN","MAGIP118",301,0)
 N MAGPARAM,MAGRY
"RTN","MAGIP118",302,0)
 S MAGPARAM("RETENTION POLICY")=1
"RTN","MAGIP118",303,0)
 S MAGPARAM("STORAGE PROVIDER")=PIEN
"RTN","MAGIP118",304,0)
 S MAGPARAM("SOURCE PLACE")=IEN
"RTN","MAGIP118",305,0)
 S MAGPARAM("SYNCHRONOUS")=$S(RAID=1:1,1:0)
"RTN","MAGIP118",306,0)
 S MAGPARAM("OFFSITE")=$S(RAID=1:0,1:0)
"RTN","MAGIP118",307,0)
 D ADDRPPM^MAGVAC01(.MAGRY,.MAGPARAM)
"RTN","MAGIP118",308,0)
 Q
"RTN","MAGIP118",309,0)
ADDPA(IEN,PIEN) ; Add Storage Provider Availability file (#2006.924)
"RTN","MAGIP118",310,0)
 N MAGPARAM,MAGRY
"RTN","MAGIP118",311,0)
 S MAGPARAM("STORAGE PROVIDER")=PIEN
"RTN","MAGIP118",312,0)
 S MAGPARAM("SOURCE PLACE")=IEN
"RTN","MAGIP118",313,0)
 S MAGPARAM("START TIME")="20000101.0001"
"RTN","MAGIP118",314,0)
 S MAGPARAM("END TIME")="20000101.0001"
"RTN","MAGIP118",315,0)
 D ADDPA^MAGVAC01(.MAGRY,.MAGPARAM)
"RTN","MAGIP118",316,0)
 Q
"RTN","MAGIP118",317,0)
ADDAD ; Add Artifact Descriptor file (#2006.915)
"RTN","MAGIP118",318,0)
 N RES,MAGPARAM,I,J,DA,DIK
"RTN","MAGIP118",319,0)
 S DIK="^MAGV(2006.915,"
"RTN","MAGIP118",320,0)
 ; Delete the data first
"RTN","MAGIP118",321,0)
 S (I,J)=""
"RTN","MAGIP118",322,0)
 F  S I=$O(^MAGV(2006.915,"B",I)) Q:I=""  D
"RTN","MAGIP118",323,0)
 . F  S J=$O(^MAGV(2006.915,"B",I,J)) Q:J=""  D
"RTN","MAGIP118",324,0)
 . . S DA=J
"RTN","MAGIP118",325,0)
 . . D ^DIK
"RTN","MAGIP118",326,0)
 . . Q
"RTN","MAGIP118",327,0)
 . Q
"RTN","MAGIP118",328,0)
 ; Add new records
"RTN","MAGIP118",329,0)
 S MAGPARAM("ARTIFACT FORMAT")="DICOM"
"RTN","MAGIP118",330,0)
 S MAGPARAM("ARTIFACT TYPE")="MedicalImage"
"RTN","MAGIP118",331,0)
 S MAGPARAM("FILE EXTENSION")="dcm"
"RTN","MAGIP118",332,0)
 S MAGPARAM("ACTIVE")=1
"RTN","MAGIP118",333,0)
 S MAGPARAM("RETENTION POLICY")=1
"RTN","MAGIP118",334,0)
 D ADDAD^MAGVAC01(.RES,.MAGPARAM)
"RTN","MAGIP118",335,0)
 ;
"RTN","MAGIP118",336,0)
 K MAGPARAM
"RTN","MAGIP118",337,0)
 S MAGPARAM("ARTIFACT FORMAT")="JPEG"
"RTN","MAGIP118",338,0)
 S MAGPARAM("ARTIFACT TYPE")="MedicalImageAbstract"
"RTN","MAGIP118",339,0)
 S MAGPARAM("FILE EXTENSION")="jpg"
"RTN","MAGIP118",340,0)
 S MAGPARAM("ACTIVE")=1
"RTN","MAGIP118",341,0)
 S MAGPARAM("RETENTION POLICY")="1"
"RTN","MAGIP118",342,0)
 D ADDAD^MAGVAC01(.RES,.MAGPARAM)
"RTN","MAGIP118",343,0)
 Q
"RTN","MAGIP118",344,0)
CLEAN ; Clean up DDs
"RTN","MAGIP118",345,0)
 D CLEANAE
"RTN","MAGIP118",346,0)
 D CLEANISP
"RTN","MAGIP118",347,0)
 D UIDS
"RTN","MAGIP118",348,0)
 D CLEANDDS
"RTN","MAGIP118",349,0)
 D WHISTORY
"RTN","MAGIP118",350,0)
 D CLEANQ(4,"",$$FMADD^XLFDT($$NOW^XLFDT(),-30)) ; Clean up QUEUE MESSAGE file (#2006.928)
"RTN","MAGIP118",351,0)
 Q
"RTN","MAGIP118",352,0)
CLEANQ(QUEUEIEN,MAGBDT,MAGEDT) ; Clean up QUEUE MESSAGE file (#2006.928)
"RTN","MAGIP118",353,0)
 ; QUEUEIEN -- Queue IEN in QUEUE file (#2006.924) - e.g., 4 - Email Queue
"RTN","MAGIP118",354,0)
 ; MAGBDT -- From Date
"RTN","MAGIP118",355,0)
 ; MAGEDT -- Through Date
"RTN","MAGIP118",356,0)
 N FDA,IEN,MAGDT
"RTN","MAGIP118",357,0)
 S MAGDT=$O(^MAGV(2006.928,"ENQDT",QUEUEIEN,MAGBDT-1))
"RTN","MAGIP118",358,0)
 F  S MAGDT=$O(^MAGV(2006.928,"ENQDT",QUEUEIEN,MAGDT)) Q:MAGDT=""!(MAGDT>MAGEDT)  D
"RTN","MAGIP118",359,0)
 . S IEN=""
"RTN","MAGIP118",360,0)
 . F  S IEN=$O(^MAGV(2006.928,"ENQDT",QUEUEIEN,MAGDT,IEN)) Q:IEN=""  D
"RTN","MAGIP118",361,0)
 . . K FDA
"RTN","MAGIP118",362,0)
 . . S FDA(2006.928,IEN_",",.01)="@"
"RTN","MAGIP118",363,0)
 . . D FILE^DIE("","FDA")
"RTN","MAGIP118",364,0)
 . . Q
"RTN","MAGIP118",365,0)
 . Q
"RTN","MAGIP118",366,0)
 Q
"RTN","MAGIP118",367,0)
CLEANAE ; Remove user data from DICOM AE Security Matrix (#2006.9192) file  
"RTN","MAGIP118",368,0)
 N AEIEN,FDA
"RTN","MAGIP118",369,0)
 S AEIEN=0
"RTN","MAGIP118",370,0)
 F  S AEIEN=$O(^MAGV(2006.9192,AEIEN)) Q:+AEIEN=0  D
"RTN","MAGIP118",371,0)
 . I $P(^MAGV(2006.9192,AEIEN,0),U,7)'="" S FDA(2006.9192,AEIEN_",",2.1)="@"
"RTN","MAGIP118",372,0)
 . Q
"RTN","MAGIP118",373,0)
 I $D(FDA) D FILE^DIE("","FDA")
"RTN","MAGIP118",374,0)
 Q
"RTN","MAGIP118",375,0)
CLEANISP ; Remove user data from Imaging Site Paramaters (#2006.1) file
"RTN","MAGIP118",376,0)
 N ISPIEN,FDA
"RTN","MAGIP118",377,0)
 S ISPIEN=0
"RTN","MAGIP118",378,0)
 F  S ISPIEN=$O(^MAG(2006.1,ISPIEN)) Q:+ISPIEN=0  D
"RTN","MAGIP118",379,0)
 . I $P($G(^MAG(2006.1,ISPIEN,5)),U,1)'="" S FDA(2006.1,ISPIEN_",",104)="@"
"RTN","MAGIP118",380,0)
 . Q
"RTN","MAGIP118",381,0)
 I $D(FDA) D FILE^DIE("","FDA")
"RTN","MAGIP118",382,0)
 Q
"RTN","MAGIP118",383,0)
CLEANDDS ; Remove user fields from DD entries in file 2006.1 and 2006.9192
"RTN","MAGIP118",384,0)
 I $$GET1^DID(2006.1,104,,"LABEL")="DEFAULT DICOM AE USER" D DELFLDS^MAGKIDS(2006.1,"104")
"RTN","MAGIP118",385,0)
 I $$GET1^DID(2006.9192,2.1,,"LABEL")="USER" D DELFLDS^MAGKIDS(2006.9192,"2.1")
"RTN","MAGIP118",386,0)
 Q
"RTN","MAGIP118",387,0)
UIDS ; Clean up duplicate entries in the DICOM UID Specific Action (#2006.539) file
"RTN","MAGIP118",388,0)
 N FDA,FIRST,UID,UIDIEN
"RTN","MAGIP118",389,0)
 S UID=""
"RTN","MAGIP118",390,0)
 F  S UID=$O(^MAGDICOM(2006.539,"B",UID)) Q:UID=""  D 
"RTN","MAGIP118",391,0)
 . S FIRST=1
"RTN","MAGIP118",392,0)
 . S UIDIEN=""
"RTN","MAGIP118",393,0)
 . F  S UIDIEN=$O(^MAGDICOM(2006.539,"B",UID,UIDIEN)) Q:UIDIEN=""  D
"RTN","MAGIP118",394,0)
 . . I 'FIRST S FDA(2006.539,UIDIEN_",",.01)="@"
"RTN","MAGIP118",395,0)
 . . S FIRST=0
"RTN","MAGIP118",396,0)
 . . Q
"RTN","MAGIP118",397,0)
 . Q
"RTN","MAGIP118",398,0)
 I $D(FDA) D FILE^DIE("","FDA","ERR")
"RTN","MAGIP118",399,0)
 Q
"RTN","MAGIP118",400,0)
WHISTORY ; Remove Work Item History (#2006.9411) file and file entries
"RTN","MAGIP118",401,0)
 D DELFILE^MAGKIDS(2006.9411,"DE")
"RTN","MAGIP118",402,0)
 Q
"RTN","MAGJUTL6")
0^36^B9257634
"RTN","MAGJUTL6",1,0)
MAGJUTL6 ;WOIFO/JHC,NST - Imaging Utility for getting Radiology Printset; 14 Mar 2013 2:45 PM
"RTN","MAGJUTL6",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGJUTL6",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL6",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL6",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL6",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL6",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL6",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL6",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL6",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL6",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL6",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL6",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL6",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL6",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL6",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL6",17,0)
 ;;
"RTN","MAGJUTL6",18,0)
 Q
"RTN","MAGJUTL6",19,0)
DAYCASE(RADFN,RADTI,RACNI) ; return Acn # (or  "^" delimited list of for PRINTSET) for exam
"RTN","MAGJUTL6",20,0)
 ; RADFN,RADTI,RACNI -- Pointers to Rad Exam
"RTN","MAGJUTL6",21,0)
 N ACNLIST,DAYCASE,I,LONGACN,PSET,RACN,RACNE,RADTE,RAPRTSET,X
"RTN","MAGJUTL6",22,0)
 S DAYCASE=""
"RTN","MAGJUTL6",23,0)
 I $G(RADFN),$G(RADTI),$G(RACNI) D
"RTN","MAGJUTL6",24,0)
 . S X=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)) ; ICR 65
"RTN","MAGJUTL6",25,0)
 . Q:X=""
"RTN","MAGJUTL6",26,0)
 . S RACN=$P(X,U)  ; Case Number
"RTN","MAGJUTL6",27,0)
 . S LONGACN=$P(X,U,31)  ; Site Accesion Number
"RTN","MAGJUTL6",28,0)
 . S RADTE=9999999.9999-RADTI
"RTN","MAGJUTL6",29,0)
 . ; use site accesion number if it is defined or create the short one
"RTN","MAGJUTL6",30,0)
 . S DAYCASE=$S(LONGACN]"":LONGACN,1:$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN)
"RTN","MAGJUTL6",31,0)
 S ACNLIST=DAYCASE
"RTN","MAGJUTL6",32,0)
 I DAYCASE]"" D
"RTN","MAGJUTL6",33,0)
 . D EN2^RAUTL20(.PSET) ; get info re rad PrintSet
"RTN","MAGJUTL6",34,0)
 . Q:'RAPRTSET
"RTN","MAGJUTL6",35,0)
 . S RACNE=$S(LONGACN]"":DAYCASE,1:$P(DAYCASE,"-",2)) ; SSAN/OLDACN
"RTN","MAGJUTL6",36,0)
 . S X="",ACNLIST=""
"RTN","MAGJUTL6",37,0)
 . F  S X=$O(PSET(X)) Q:'X  S:RACNE'=$P(PSET(X),U) ACNLIST=ACNLIST_U_$P(PSET(X),U)
"RTN","MAGJUTL6",38,0)
 . I LONGACN="" F I=2:1:$L(ACNLIST,U) S X=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_$P(ACNLIST,U,I),$P(ACNLIST,U,I)=X
"RTN","MAGJUTL6",39,0)
 . S ACNLIST=DAYCASE_ACNLIST
"RTN","MAGJUTL6",40,0)
 Q ACNLIST
"RTN","MAGJUTL6",41,0)
 ;
"RTN","MAGJUTL6",42,0)
DAYCASE2(ACCN) ; return Acn # (or "^" delimited list of for PRINTSET) for exam
"RTN","MAGJUTL6",43,0)
 ; ACCN -- Radiology Accession Number
"RTN","MAGJUTL6",44,0)
 N ACNLIST,RAA,X,Y
"RTN","MAGJUTL6",45,0)
 N RADFN,RADTI,RACNI
"RTN","MAGJUTL6",46,0)
 ;
"RTN","MAGJUTL6",47,0)
 S ACNLIST=""
"RTN","MAGJUTL6",48,0)
 S X=$$ACCFIND^RAAPI(ACCN,.RAA) ; Private IA (#5020)
"RTN","MAGJUTL6",49,0)
 I X>0 D  ; accession number found
"RTN","MAGJUTL6",50,0)
 . ; For a given accession number, there will never be more than one set of values
"RTN","MAGJUTL6",51,0)
 . ; for RADFN/RADTI/RACNI in RAA array
"RTN","MAGJUTL6",52,0)
 . S Y=RAA(1)
"RTN","MAGJUTL6",53,0)
 . S RADFN=$P(Y,"^",1),RADTI=$P(Y,"^",2),RACNI=$P(Y,"^",3)
"RTN","MAGJUTL6",54,0)
 . S ACNLIST=$$DAYCASE^MAGJUTL6(RADFN,RADTI,RACNI)  ; get all accession numbers
"RTN","MAGJUTL6",55,0)
 . Q
"RTN","MAGJUTL6",56,0)
 Q ACNLIST
"RTN","MAGKIDS1")
0^37^B40122481
"RTN","MAGKIDS1",1,0)
MAGKIDS1 ;WOIFO/SG - INSTALLATION UTILITIES ; 21 Nov 2011  2:48pm
"RTN","MAGKIDS1",2,0)
 ;;3.0;IMAGING;**93,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGKIDS1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGKIDS1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGKIDS1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGKIDS1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGKIDS1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGKIDS1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGKIDS1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGKIDS1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGKIDS1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGKIDS1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGKIDS1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGKIDS1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGKIDS1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGKIDS1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGKIDS1",17,0)
 ;;
"RTN","MAGKIDS1",18,0)
 ; This routine uses the following ICRs:
"RTN","MAGKIDS1",19,0)
 ;
"RTN","MAGKIDS1",20,0)
 ; #3232         Read access to file #9.7 (private)
"RTN","MAGKIDS1",21,0)
 ; #4389         Read access to file #9.7 (private)
"RTN","MAGKIDS1",22,0)
 ; #10075        R/W access to subfile #19.05 (supported)
"RTN","MAGKIDS1",23,0)
 ; #4011         Read access to file #8994 (controlled)
"RTN","MAGKIDS1",24,0)
 ;
"RTN","MAGKIDS1",25,0)
 ; ??? - #4389 has to be updated to include fields 9, 11,
"RTN","MAGKIDS1",26,0)
 ;       and 17 of the file #9.7!
"RTN","MAGKIDS1",27,0)
 Q
"RTN","MAGKIDS1",28,0)
 ;
"RTN","MAGKIDS1",29,0)
 ;##### ADDS RPC NAME(S) TO THE RPC MULTIPLE OF THE OPTION
"RTN","MAGKIDS1",30,0)
 ;
"RTN","MAGKIDS1",31,0)
 ; [.]RPCNAMES   Names of the remote procedures:
"RTN","MAGKIDS1",32,0)
 ;
"RTN","MAGKIDS1",33,0)
 ;                 * Single name can be passed by value;
"RTN","MAGKIDS1",34,0)
 ;
"RTN","MAGKIDS1",35,0)
 ;                 * One or more names can be passed as subscripts of 
"RTN","MAGKIDS1",36,0)
 ;                   a local array passed by reference;
"RTN","MAGKIDS1",37,0)
 ;
"RTN","MAGKIDS1",38,0)
 ;                 * A reference to the list of RPC names in the
"RTN","MAGKIDS1",39,0)
 ;                   source code of an routine can be passed as
"RTN","MAGKIDS1",40,0)
 ;                   the TAG^ROUTINE value of the RPCNAMES. The
"RTN","MAGKIDS1",41,0)
 ;                   routine must be in the MAG namespace.
"RTN","MAGKIDS1",42,0)
 ;
"RTN","MAGKIDS1",43,0)
 ; OPTNAME       Name of the option (RPC Broker context)
"RTN","MAGKIDS1",44,0)
 ;
"RTN","MAGKIDS1",45,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGKIDS1",46,0)
 ;
"RTN","MAGKIDS1",47,0)
 ;                 S  If this flag is provided, the procedure will
"RTN","MAGKIDS1",48,0)
 ;                    work in "silent" mode. Nothing will be
"RTN","MAGKIDS1",49,0)
 ;                    displayed on the console or stored into the
"RTN","MAGKIDS1",50,0)
 ;                    INSTALLATION file (#9.7).
"RTN","MAGKIDS1",51,0)
 ;
"RTN","MAGKIDS1",52,0)
 ; Return Values
"RTN","MAGKIDS1",53,0)
 ; =============
"RTN","MAGKIDS1",54,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGKIDS1",55,0)
 ;            0  Success
"RTN","MAGKIDS1",56,0)
 ;
"RTN","MAGKIDS1",57,0)
ADDRPCS(RPCNAMES,OPTNAME,FLAGS) ;
"RTN","MAGKIDS1",58,0)
 N IENS,MAGFDA,MAGMSG,MAGRC,NAME,OPTIEN,RPCIEN,SILENT
"RTN","MAGKIDS1",59,0)
 ;
"RTN","MAGKIDS1",60,0)
 ;=== Validate and prepare parameters
"RTN","MAGKIDS1",61,0)
 S FLAGS=$G(FLAGS),SILENT=(FLAGS["S")
"RTN","MAGKIDS1",62,0)
 ;--- Single RPC name or a list?
"RTN","MAGKIDS1",63,0)
 I $D(RPCNAMES)<10  Q:$G(RPCNAMES)?." " $$IPVE^MAGUERR("RPCNAMES")  D
"RTN","MAGKIDS1",64,0)
 . N I,GET
"RTN","MAGKIDS1",65,0)
 . ;--- TAG^ROUTINE or single RPC name?
"RTN","MAGKIDS1",66,0)
 . I RPCNAMES'?1.8UN1"^MAG"1.5UN  S RPCNAMES(RPCNAMES)=""  Q
"RTN","MAGKIDS1",67,0)
 . ;--- Get the list from the source code
"RTN","MAGKIDS1",68,0)
 . S GET=$P(RPCNAMES,"^")_"+I^"_$P(RPCNAMES,"^",2)
"RTN","MAGKIDS1",69,0)
 . S GET="S NAME=$$TRIM^XLFSTR($P($T("_GET_"),"";;"",2))"
"RTN","MAGKIDS1",70,0)
 . F I=1:1  X GET  Q:NAME=""  S RPCNAMES(NAME)=""
"RTN","MAGKIDS1",71,0)
 . Q
"RTN","MAGKIDS1",72,0)
 ;--- Name of the menu option (RPC Broker context)
"RTN","MAGKIDS1",73,0)
 S OPTIEN=$$LKOPT^XPDMENU(OPTNAME)
"RTN","MAGKIDS1",74,0)
 Q:OPTIEN'>0 $$ERROR^MAGUERR(-44,,OPTNAME)
"RTN","MAGKIDS1",75,0)
 ;
"RTN","MAGKIDS1",76,0)
 ;=== Add the names to the multiple
"RTN","MAGKIDS1",77,0)
 D:'SILENT BMES^MAGKIDS("Attaching RPCs to the '"_OPTNAME_"' option...")
"RTN","MAGKIDS1",78,0)
 S NAME="",MAGRC=0
"RTN","MAGKIDS1",79,0)
 F  S NAME=$O(RPCNAMES(NAME))  Q:NAME=""  D  Q:MAGRC<0
"RTN","MAGKIDS1",80,0)
 . D:'SILENT MES^MAGKIDS(NAME)
"RTN","MAGKIDS1",81,0)
 . ;--- Check if the remote procedure exists
"RTN","MAGKIDS1",82,0)
 . S RPCIEN=$$FIND1^DIC(8994,,"X",NAME,"B",,"MAGMSG")
"RTN","MAGKIDS1",83,0)
 . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",8994)  Q
"RTN","MAGKIDS1",84,0)
 . I RPCIEN'>0  S MAGRC=$$ERROR^MAGUERR(-45,,NAME)  Q
"RTN","MAGKIDS1",85,0)
 . ;--- Add the remote procedure to the multiple
"RTN","MAGKIDS1",86,0)
 . S IENS="?+1,"_OPTIEN_","
"RTN","MAGKIDS1",87,0)
 . S MAGFDA(19.05,IENS,.01)=RPCIEN
"RTN","MAGKIDS1",88,0)
 . D UPDATE^DIE(,"MAGFDA",,"MAGMSG")
"RTN","MAGKIDS1",89,0)
 . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",19.05,IENS)  Q
"RTN","MAGKIDS1",90,0)
 . ;---
"RTN","MAGKIDS1",91,0)
 . Q
"RTN","MAGKIDS1",92,0)
 I MAGRC<0  D:'SILENT MES^MAGKIDS("ABORTED!")  Q MAGRC
"RTN","MAGKIDS1",93,0)
 ;
"RTN","MAGKIDS1",94,0)
 ;=== Success
"RTN","MAGKIDS1",95,0)
 D:'SILENT MES^MAGKIDS("RPCs have been successfully attached.")
"RTN","MAGKIDS1",96,0)
 Q 0
"RTN","MAGKIDS1",97,0)
 ;
"RTN","MAGKIDS1",98,0)
 ;##### SENDS THE PATCH INSTALLATION E-MAIL
"RTN","MAGKIDS1",99,0)
 ;
"RTN","MAGKIDS1",100,0)
 ; [MAGDUZ]      IEN of the user who will get the e-mail in
"RTN","MAGKIDS1",101,0)
 ;               addition to the G.MAG SERVER mail group.
"RTN","MAGKIDS1",102,0)
 ;
"RTN","MAGKIDS1",103,0)
 ; Input variables
"RTN","MAGKIDS1",104,0)
 ; ===============
"RTN","MAGKIDS1",105,0)
 ;  XPDA, XPDNM
"RTN","MAGKIDS1",106,0)
 ;
"RTN","MAGKIDS1",107,0)
 ; Return Values
"RTN","MAGKIDS1",108,0)
 ; =============
"RTN","MAGKIDS1",109,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGKIDS1",110,0)
 ;            0  Success
"RTN","MAGKIDS1",111,0)
 ; Notes
"RTN","MAGKIDS1",112,0)
 ; =====
"RTN","MAGKIDS1",113,0)
 ;
"RTN","MAGKIDS1",114,0)
 ; This entry point should be called ONLY from the KIDS post-install
"RTN","MAGKIDS1",115,0)
 ; code.
"RTN","MAGKIDS1",116,0)
 ;
"RTN","MAGKIDS1",117,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGKIDS1",118,0)
 ; D NOTIFY^MAGKIDS1() if you do not need its return value.
"RTN","MAGKIDS1",119,0)
 ;
"RTN","MAGKIDS1",120,0)
NOTIFY() ;
"RTN","MAGKIDS1",121,0)
 N CNT,CT,IENS,MAGBUF,MAGERR,MAGMSG,MAGRC,ST,Y
"RTN","MAGKIDS1",122,0)
 S MAGRC=0,IENS=XPDA_","
"RTN","MAGKIDS1",123,0)
 ;
"RTN","MAGKIDS1",124,0)
 ;--- Load the build properties from the BUILD file (#9.7)
"RTN","MAGKIDS1",125,0)
 D GETS^DIQ(9.7,IENS,".01;6;9;11;17;51","EI","MAGBUF","MAGERR")
"RTN","MAGKIDS1",126,0)
 D:$G(DIERR) DBS^MAGUERR("MAGERR",9.7,IENS)
"RTN","MAGKIDS1",127,0)
 ;
"RTN","MAGKIDS1",128,0)
 ;--- Compile the message text
"RTN","MAGKIDS1",129,0)
 S CNT=0
"RTN","MAGKIDS1",130,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGKIDS1",131,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGKIDS1",132,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XPDNM
"RTN","MAGKIDS1",133,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XPDNM)
"RTN","MAGKIDS1",134,0)
 S ST=$G(MAGBUF(9.7,IENS,11,"I"))
"RTN","MAGKIDS1",135,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGKIDS1",136,0)
 S CT=$G(MAGBUF(9.7,IENS,17,"I"))  S:+CT'=CT CT=$$NOW^XLFDT()
"RTN","MAGKIDS1",137,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGKIDS1",138,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGKIDS1",139,0)
 D GETENV^%ZOSV
"RTN","MAGKIDS1",140,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGKIDS1",141,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_$G(MAGBUF(9.7,IENS,6,"I"))
"RTN","MAGKIDS1",142,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_$$NOW^XLFDT()
"RTN","MAGKIDS1",143,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$G(MAGBUF(9.7,IENS,9,"E"))
"RTN","MAGKIDS1",144,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$G(MAGBUF(9.7,IENS,.01,"E"))
"RTN","MAGKIDS1",145,0)
 S Y=$G(MAGBUF(9.7,IENS,51,"E"))
"RTN","MAGKIDS1",146,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_Y
"RTN","MAGKIDS1",147,0)
 ;
"RTN","MAGKIDS1",148,0)
 ;--- Send the e-mail notification
"RTN","MAGKIDS1",149,0)
 D
"RTN","MAGKIDS1",150,0)
 . N DIFROM,XMERR,XMID,XMSUB,XMY,XMZ
"RTN","MAGKIDS1",151,0)
 . S XMSUB=$E(XPDNM_" INSTALLATION",1,63)
"RTN","MAGKIDS1",152,0)
 . S XMID=$G(DUZ)  S:XMID'>0 XMID=.5
"RTN","MAGKIDS1",153,0)
 . S (XMY(XMID),XMY("G.MAG SERVER"))=""
"RTN","MAGKIDS1",154,0)
 . D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ)
"RTN","MAGKIDS1",155,0)
 . Q:'$G(XMERR)
"RTN","MAGKIDS1",156,0)
 . K MAGERR  M MAGERR=^TMP("XMERR",$J)
"RTN","MAGKIDS1",157,0)
 . S MAGRC=$$ERROR^MAGUERR(-46,.MAGERR)
"RTN","MAGKIDS1",158,0)
 . Q
"RTN","MAGKIDS1",159,0)
 ;
"RTN","MAGKIDS1",160,0)
 ;---
"RTN","MAGKIDS1",161,0)
 Q:$QUIT MAGRC  Q
"RTN","MAGKIDS1",162,0)
 ;
"RTN","MAGKIDS1",163,0)
 ;##### TURNS THE VERSION CHECKING ON FOR CLINICAL CLIENTS
"RTN","MAGKIDS1",164,0)
 ;
"RTN","MAGKIDS1",165,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGKIDS1",166,0)
 ;
"RTN","MAGKIDS1",167,0)
 ;                 S  If this flag is provided, the procedure will
"RTN","MAGKIDS1",168,0)
 ;                    work in "silent" mode. Nothing will be
"RTN","MAGKIDS1",169,0)
 ;                    displayed on the console or stored into the
"RTN","MAGKIDS1",170,0)
 ;                    INSTALLATION file (#9.7).
"RTN","MAGKIDS1",171,0)
 ;
"RTN","MAGKIDS1",172,0)
 ; Return Values
"RTN","MAGKIDS1",173,0)
 ; =============
"RTN","MAGKIDS1",174,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGKIDS1",175,0)
 ;            0  Success
"RTN","MAGKIDS1",176,0)
 ; Notes
"RTN","MAGKIDS1",177,0)
 ; =====
"RTN","MAGKIDS1",178,0)
 ;
"RTN","MAGKIDS1",179,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGKIDS1",180,0)
 ; D VERCHKON^MAGKIDS1() if you do not need its return value.
"RTN","MAGKIDS1",181,0)
 ;
"RTN","MAGKIDS1",182,0)
VERCHKON(FLAGS) ;
"RTN","MAGKIDS1",183,0)
 N MAGIEN,MAGMSG,MAGRC,MSG1,MSG2,SILENT,TMP
"RTN","MAGKIDS1",184,0)
 S FLAGS=$G(FLAGS),SILENT=(FLAGS["S")
"RTN","MAGKIDS1",185,0)
 D:'SILENT
"RTN","MAGKIDS1",186,0)
 . S TMP=+$P($G(XPDNM),"*",3)  ; Patch number
"RTN","MAGKIDS1",187,0)
 . S MSG1=$S(TMP:"Patch "_TMP_" is turning",1:"Turning")
"RTN","MAGKIDS1",188,0)
 . S MSG1=MSG1_" Version Checking ON..."
"RTN","MAGKIDS1",189,0)
 . D MES^MAGKIDS("")
"RTN","MAGKIDS1",190,0)
 . Q
"RTN","MAGKIDS1",191,0)
 S MAGRC=0
"RTN","MAGKIDS1",192,0)
 ;===
"RTN","MAGKIDS1",193,0)
 S MAGIEN=0
"RTN","MAGKIDS1",194,0)
 F  S MAGIEN=$O(^MAG(2006.1,MAGIEN))  Q:'MAGIEN  D  Q:MAGRC<0
"RTN","MAGKIDS1",195,0)
 . S MSG2="is already ON, no action taken"
"RTN","MAGKIDS1",196,0)
 . ;--- Turn the version checking ON for the site
"RTN","MAGKIDS1",197,0)
 . I '$P($G(^MAG(2006.1,MAGIEN,"KEYS")),U,5)  D  Q:MAGRC<0
"RTN","MAGKIDS1",198,0)
 . . N MAGFDA
"RTN","MAGKIDS1",199,0)
 . . S MAGFDA(2006.1,MAGIEN_",",130)=1
"RTN","MAGKIDS1",200,0)
 . . D FILE^DIE(,"MAGFDA","MAGMSG")
"RTN","MAGKIDS1",201,0)
 . . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",2006.1,MAGIEN_",")  Q
"RTN","MAGKIDS1",202,0)
 . . S MSG2="has been turned ON"
"RTN","MAGKIDS1",203,0)
 . . Q
"RTN","MAGKIDS1",204,0)
 . Q:SILENT
"RTN","MAGKIDS1",205,0)
 . ;--- Display the status message
"RTN","MAGKIDS1",206,0)
 . S TMP=$P($G(^MAG(2006.1,MAGIEN,0)),U)  ; Institution IEN
"RTN","MAGKIDS1",207,0)
 . D MES^MAGKIDS(MSG1)
"RTN","MAGKIDS1",208,0)
 . D MES^MAGKIDS("Version Checking "_MSG2_" for Site: "_TMP)
"RTN","MAGKIDS1",209,0)
 . Q
"RTN","MAGKIDS1",210,0)
 ;===
"RTN","MAGKIDS1",211,0)
 Q:$QUIT MAGRC  Q
"RTN","MAGUAUD")
0^38^B5675527
"RTN","MAGUAUD",1,0)
MAGUAUD ;WOIFO/MLH/NST - Audit log RPC ; 31 Dec 2010 03:45 PM
"RTN","MAGUAUD",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUAUD",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUAUD",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUAUD",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUAUD",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUAUD",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUAUD",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUAUD",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUAUD",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUAUD",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUAUD",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUAUD",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUAUD",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUAUD",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUAUD",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUAUD",17,0)
 ;;
"RTN","MAGUAUD",18,0)
 Q
"RTN","MAGUAUD",19,0)
INPUTSEP() ; Name value separator for input data ie. NAME`TESTPATIENT   
"RTN","MAGUAUD",20,0)
 Q "`"
"RTN","MAGUAUD",21,0)
EVENT(OUT,EVENT,HOST,APP,MESSAGE,DATA) ; rpc MAG EVENT AUDIT
"RTN","MAGUAUD",22,0)
 N ERRIX,ERRMSG,FDA,IENS,I,J,ISEP,ATT,VALUE,APPIEN
"RTN","MAGUAUD",23,0)
 K OUT
"RTN","MAGUAUD",24,0)
 ; Get application. It will be added if it is not in the file.
"RTN","MAGUAUD",25,0)
 S:$G(APP)'="" APPIEN=$$GETIEN^MAGVAF05(2006.9193,APP,1)
"RTN","MAGUAUD",26,0)
 S FDA(2006.93,"+1,",.01)="N"
"RTN","MAGUAUD",27,0)
 S FDA(2006.93,"+1,",1)=$G(EVENT)
"RTN","MAGUAUD",28,0)
 S FDA(2006.93,"+1,",2)=$G(HOST)
"RTN","MAGUAUD",29,0)
 S FDA(2006.93,"+1,",3)=$G(APP)
"RTN","MAGUAUD",30,0)
 S FDA(2006.93,"+1,",4)=$G(MESSAGE)
"RTN","MAGUAUD",31,0)
 S I="",ISEP=$$INPUTSEP
"RTN","MAGUAUD",32,0)
 F  S I=$O(DATA(I)) Q:I=""  D
"RTN","MAGUAUD",33,0)
 . S ATT=$P(DATA(I),ISEP,1)
"RTN","MAGUAUD",34,0)
 . S VALUE=$P(DATA(I),ISEP,2)
"RTN","MAGUAUD",35,0)
 . S J=I+1,IENS="+"_J_",+1,"
"RTN","MAGUAUD",36,0)
 . S FDA(2006.935,IENS,.01)=ATT
"RTN","MAGUAUD",37,0)
 . S FDA(2006.935,IENS,1)=VALUE
"RTN","MAGUAUD",38,0)
 . Q
"RTN","MAGUAUD",39,0)
 D UPDATE^DIE("E","FDA")
"RTN","MAGUAUD",40,0)
 S ERRIX=0
"RTN","MAGUAUD",41,0)
 F  S ERRIX=$O(^TMP("DIERR",$J,ERRIX)) Q:'ERRIX  D
"RTN","MAGUAUD",42,0)
 . S ERRMSG=-$G(^TMP("DIERR",$J,ERRIX))_","
"RTN","MAGUAUD",43,0)
 . S ERRMSG=ERRMSG_$G(^TMP("DIERR",$J,ERRIX,"TEXT",1))
"RTN","MAGUAUD",44,0)
 . S OUT($O(OUT(""),-1)+1)=ERRMSG
"RTN","MAGUAUD",45,0)
 . Q
"RTN","MAGUAUD",46,0)
 I '$D(OUT) S OUT(1)=0 ; no error
"RTN","MAGUAUD",47,0)
 Q
"RTN","MAGUE001")
0^39^B10282269
"RTN","MAGUE001",1,0)
MAGUE001 ;WOIFO/MLH/BT - database encapsulation - study description for DICOM ; 01 Mar 2012 9:03 AM
"RTN","MAGUE001",2,0)
 ;;3.0;IMAGING;**54,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUE001",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUE001",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE001",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUE001",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUE001",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUE001",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUE001",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUE001",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUE001",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUE001",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUE001",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUE001",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUE001",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUE001",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE001",17,0)
 ;;
"RTN","MAGUE001",18,0)
 Q
"RTN","MAGUE001",19,0)
 ;
"RTN","MAGUE001",20,0)
STYDESC(IMAGE,ERR) ;FUNCTION - return study description for an image
"RTN","MAGUE001",21,0)
 ; input:    IMAGE     IEN of the image on ^MAG(2005)
"RTN","MAGUE001",22,0)
 ; function return:    p1   study description of the image
"RTN","MAGUE001",23,0)
 ;   (^-pieces)        p2   descriptive error message if any
"RTN","MAGUE001",24,0)
 ; 
"RTN","MAGUE001",25,0)
 N STYDESC ; -- study description
"RTN","MAGUE001",26,0)
 N MAGR2 ; ---- 2 node of the image on ^MAG(2005)
"RTN","MAGUE001",27,0)
 N MAGPKG ; --- name of package with which image is associated
"RTN","MAGUE001",28,0)
 S ERR=""
"RTN","MAGUE001",29,0)
 I '$D(^MAG(2005,IMAGE)) S ERR="13~Image record not defined" Q ""
"RTN","MAGUE001",30,0)
 S MAGR2=$G(^MAG(2005,IMAGE,2))
"RTN","MAGUE001",31,0)
 I MAGR2="" S ERR="11~2 node missing from image file" Q ""
"RTN","MAGUE001",32,0)
 S MAGPKG=$P(MAGR2,"^",6)
"RTN","MAGUE001",33,0)
 I MAGPKG="" S ERR="12~Image not associated with any known package" Q ""
"RTN","MAGUE001",34,0)
 S STYDESC=""
"RTN","MAGUE001",35,0)
 D  ; radiology or consult procedure?
"RTN","MAGUE001",36,0)
 . I MAGPKG=74 D  Q  ; radiology image
"RTN","MAGUE001",37,0)
 . . N MAGRRPTI ; -- radiology report index
"RTN","MAGUE001",38,0)
 . . N MAGRORDR ; -- radiology order record
"RTN","MAGUE001",39,0)
 . . N MAGRPROC ; -- radiology procedure code
"RTN","MAGUE001",40,0)
 . . S MAGRRPTI=$P(MAGR2,"^",7)
"RTN","MAGUE001",41,0)
 . . I MAGRRPTI="" S ERR="15~Radiology report index missing from image record" Q
"RTN","MAGUE001",42,0)
 . . S MAGRORDR=$$RORDRR^MAGUE002(MAGRRPTI,.ERR)
"RTN","MAGUE001",43,0)
 . . I ERR'="" Q
"RTN","MAGUE001",44,0)
 . . S MAGRPROC=$P(MAGRORDR,"^",2)
"RTN","MAGUE001",45,0)
 . . I 'MAGRPROC S ERR="13~Procedure code missing from radiology order" Q
"RTN","MAGUE001",46,0)
 . . S STYDESC=$$PROCDESC^MAGUE003(MAGRPROC,.ERR)
"RTN","MAGUE001",47,0)
 . . Q
"RTN","MAGUE001",48,0)
 . I (MAGPKG=8925)!(MAGPKG=2006.5839) D  Q  ; consult image
"RTN","MAGUE001",49,0)
 . . S STYDESC=$P(MAGR2,"^",4)
"RTN","MAGUE001",50,0)
 . . Q
"RTN","MAGUE001",51,0)
 . S ERR="14~Study description access method not defined"
"RTN","MAGUE001",52,0)
 . Q
"RTN","MAGUE001",53,0)
 Q STYDESC
"RTN","MAGUE001",54,0)
 ;
"RTN","MAGUE001",55,0)
STYDESC2(TYPE,IMAGE,ERR) ; UPDATED FUNCTION - return study description for an image
"RTN","MAGUE001",56,0)
 ; input:    TYPE      R or C (old database) or N (new database)
"RTN","MAGUE001",57,0)
 ;           IMAGE     IEN of the image on ^MAG(2005)
"RTN","MAGUE001",58,0)
 ; function return:    p1   study description of the image
"RTN","MAGUE001",59,0)
 ;   (^-pieces)        p2   descriptive error message if any
"RTN","MAGUE001",60,0)
 ; 
"RTN","MAGUE001",61,0)
 N STYDESC ; ------- study description
"RTN","MAGUE001",62,0)
 I TYPE="N" D
"RTN","MAGUE001",63,0)
 . N STUDYIX ; study index
"RTN","MAGUE001",64,0)
 . S STUDYIX=$$STUDYIX^MAGUE004(IMAGE) Q:'STUDYIX
"RTN","MAGUE001",65,0)
 . S STYDESC=$P($G(^MAGV(2005.62,STUDYIX,3)),"^",1)
"RTN","MAGUE001",66,0)
 . Q
"RTN","MAGUE001",67,0)
 I (TYPE="R")!(TYPE="C") D
"RTN","MAGUE001",68,0)
 . S STYDESC=$$STYDESC(IMAGE)
"RTN","MAGUE001",69,0)
 . Q
"RTN","MAGUE001",70,0)
 Q $G(STYDESC)
"RTN","MAGUE002")
0^40^B6868694
"RTN","MAGUE002",1,0)
MAGUE002 ;WOIFO/MLH - database encapsulation - radiology order record ; 29 Feb 2012 5:50 PM
"RTN","MAGUE002",2,0)
 ;;3.0;IMAGING;**54,118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUE002",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUE002",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE002",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUE002",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUE002",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUE002",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUE002",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUE002",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUE002",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUE002",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUE002",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUE002",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUE002",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUE002",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE002",17,0)
 ;;
"RTN","MAGUE002",18,0)
 Q
"RTN","MAGUE002",19,0)
 ;
"RTN","MAGUE002",20,0)
RORDRR(MAGRRPTI,ERR) ;FUNCTION - return a radiology order record
"RTN","MAGUE002",21,0)
 ; input:    MAGRRPTI  radiology report index from image record
"RTN","MAGUE002",22,0)
 ; output:   ERR       error message if couldn't get record
"RTN","MAGUE002",23,0)
 ; function return:    radiology order record
"RTN","MAGUE002",24,0)
 ; 
"RTN","MAGUE002",25,0)
 N MAGRRPTR ; -- radiology report record
"RTN","MAGUE002",26,0)
 N MAGD0 ; ----- Radiology patient file IEN
"RTN","MAGUE002",27,0)
 N MAGD1 ; ----- date index to order record in rad pt file
"RTN","MAGUE002",28,0)
 N MAGD2 ; ----- subdate index to order record in rad pt file
"RTN","MAGUE002",29,0)
 N V ; --------- scratch var
"RTN","MAGUE002",30,0)
 N MAGRORDR ; -- radiology order record
"RTN","MAGUE002",31,0)
 N MAGRPROC ; -- radiology procedure code
"RTN","MAGUE002",32,0)
 S ERR=""
"RTN","MAGUE002",33,0)
 I MAGRRPTI="" S ERR="5~Radiology report pointer required" Q
"RTN","MAGUE002",34,0)
 S MAGRRPTR=$G(^RARPT(MAGRRPTI,0))
"RTN","MAGUE002",35,0)
 S MAGD0=$P(MAGRRPTR,"^",2)
"RTN","MAGUE002",36,0)
 I 'MAGD0 S ERR="1~Radiology patient not found" Q ""
"RTN","MAGUE002",37,0)
 S MAGD1=9999999.9999-$P(MAGRRPTR,"^",3)
"RTN","MAGUE002",38,0)
 S V=$P(MAGRRPTR,"^",4)
"RTN","MAGUE002",39,0)
 S MAGD2=$O(^RADPT(MAGD0,"DT",MAGD1,"P","B",V,"")) ; IA # 1172
"RTN","MAGUE002",40,0)
 I 'MAGD2 S ERR="3~Order record pointer not found" Q ""
"RTN","MAGUE002",41,0)
 S MAGRORDR=$G(^RADPT(MAGD0,"DT",MAGD1,"P",MAGD2,0)) ; IA # 1172
"RTN","MAGUE002",42,0)
 I 'MAGRORDR S ERR="4~Radiology order record not found" Q ""
"RTN","MAGUE002",43,0)
 S ERR=""
"RTN","MAGUE002",44,0)
 Q MAGRORDR
"RTN","MAGUE004")
0^41^B3837996
"RTN","MAGUE004",1,0)
MAGUE004 ;WOIFO/MLH - database encapsulation - find study instance IEN for an image instance (new DB) ; 24 Feb 2012 10:10 PM
"RTN","MAGUE004",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUE004",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUE004",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE004",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUE004",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUE004",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUE004",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUE004",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUE004",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUE004",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUE004",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUE004",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUE004",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUE004",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUE004",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE004",17,0)
 ;;
"RTN","MAGUE004",18,0)
 Q
"RTN","MAGUE004",19,0)
 ;
"RTN","MAGUE004",20,0)
STUDYIX(MAGIEN) ; Find study instance IEN for an image instance (new DB)
"RTN","MAGUE004",21,0)
 N SERIESIX,STUDYIX
"RTN","MAGUE004",22,0)
 S STUDYIX=""
"RTN","MAGUE004",23,0)
 D:MAGIEN
"RTN","MAGUE004",24,0)
 . S SERIESIX=$P($G(^MAGV(2005.64,MAGIEN,6)),"^",1) Q:'SERIESIX
"RTN","MAGUE004",25,0)
 . S STUDYIX=$P($G(^MAGV(2005.63,SERIESIX,6)),"^",1) Q:'STUDYIX
"RTN","MAGUE004",26,0)
 . Q
"RTN","MAGUE004",27,0)
 Q $G(STUDYIX)
"RTN","MAGUE005")
0^42^B3722038
"RTN","MAGUE005",1,0)
MAGUE005 ;WOIFO/MLH - database encapsulation - find procedure IEN for an image instance (new DB) ; 24 Feb 2012 10:14 PM
"RTN","MAGUE005",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUE005",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUE005",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE005",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUE005",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUE005",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUE005",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUE005",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUE005",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUE005",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUE005",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUE005",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUE005",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUE005",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUE005",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE005",17,0)
 ;;
"RTN","MAGUE005",18,0)
 Q
"RTN","MAGUE005",19,0)
 ;
"RTN","MAGUE005",20,0)
PROCIX(MAGIEN) ; Find procedure IEN for an image instance (new DB)
"RTN","MAGUE005",21,0)
 N PROCIX
"RTN","MAGUE005",22,0)
 S PROCIX=""
"RTN","MAGUE005",23,0)
 D:MAGIEN
"RTN","MAGUE005",24,0)
 . S STUDYIX=$$STUDYIX^MAGUE004(MAGIEN)
"RTN","MAGUE005",25,0)
 . S:STUDYIX PROCIX=$P($G(^MAGV(2005.62,STUDYIX,6)),"^",1) Q:'PROCIX
"RTN","MAGUE005",26,0)
 . Q
"RTN","MAGUE005",27,0)
 Q PROCIX
"RTN","MAGUFFLA")
0^43^B8770819
"RTN","MAGUFFLA",1,0)
MAGUFFLA ;WOIFO/MLH - Imaging FileMan utility - return list of attributes for a field; 24 Sep 2011 01:49 PM
"RTN","MAGUFFLA",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUFFLA",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUFFLA",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUFFLA",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUFFLA",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUFFLA",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUFFLA",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUFFLA",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUFFLA",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUFFLA",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUFFLA",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUFFLA",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUFFLA",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUFFLA",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUFFLA",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUFFLA",17,0)
 ;;
"RTN","MAGUFFLA",18,0)
 Q
"RTN","MAGUFFLA",19,0)
 ;
"RTN","MAGUFFLA",20,0)
FIELDATT(OUT,FILENO,FIELDNO) ; rpc MAG FILEMAN FIELD ATTS
"RTN","MAGUFFLA",21,0)
 ; input:   FILENO   The number of a Fileman file or subfile
"RTN","MAGUFFLA",22,0)
 ;          FIELDNO  The number of a field within the file
"RTN","MAGUFFLA",23,0)
 ; 
"RTN","MAGUFFLA",24,0)
 ; output:  OUT()    Array of return values formatted as follows:
"RTN","MAGUFFLA",25,0)
 ;   If no input or processing error:
"RTN","MAGUFFLA",26,0)
 ;          OUT(1) = 0``n where n = number of entries on the OUT() array
"RTN","MAGUFFLA",27,0)
 ;          OUT(m) where 1 < m <= n
"RTN","MAGUFFLA",28,0)
 ;                 = attribute`value
"RTN","MAGUFFLA",29,0)
 ;   If an input or processing error:
"RTN","MAGUFFLA",30,0)
 ;          OUT(1) = n`error_message
"RTN","MAGUFFLA",31,0)
 ;
"RTN","MAGUFFLA",32,0)
 ; All ^DD references permitted under ICR #5551
"RTN","MAGUFFLA",33,0)
 ; 
"RTN","MAGUFFLA",34,0)
 K OUT
"RTN","MAGUFFLA",35,0)
 I FILENO=+FILENO,$D(^DD(FILENO)) ; valid input
"RTN","MAGUFFLA",36,0)
 E  S OUT(1)="-1`'"_FILENO_"' not a valid Fileman file or subfile number" Q
"RTN","MAGUFFLA",37,0)
 I FIELDNO=+FIELDNO,$D(^DD(FILENO,FIELDNO)) ; valid input
"RTN","MAGUFFLA",38,0)
 E  S OUT(1)="-2`'"_FIELDNO_"' not a valid field number" Q
"RTN","MAGUFFLA",39,0)
 N ATTSTR,ATTARY,ATT,WPIX,OUTIX
"RTN","MAGUFFLA",40,0)
 S ATTSTR="AUDIT;AUDIT CONDITION;COMPUTE ALGORITHM;COMPUTED FIELDS USED;"
"RTN","MAGUFFLA",41,0)
 S ATTSTR=ATTSTR_"DATE FIELD LAST EDITED;DECIMAL DEFAULT;DELETE ACCESS;"
"RTN","MAGUFFLA",42,0)
 S ATTSTR=ATTSTR_"DESCRIPTION;FIELD LENGTH;GLOBAL SUBSCRIPT LOCATION;"
"RTN","MAGUFFLA",43,0)
 S ATTSTR=ATTSTR_"HELP-PROMPT;INPUT TRANSFORM;LABEL,MULTIPLE-VALUED;"
"RTN","MAGUFFLA",44,0)
 S ATTSTR=ATTSTR_"OUTPUT TRANSFORM;POINTER;READ ACCESS;SOURCE;SPECIFIER;"
"RTN","MAGUFFLA",45,0)
 S ATTSTR=ATTSTR_"TECHNICAL DESCRIPTION;TITLE;TYPE;WRITE ACCESS;"
"RTN","MAGUFFLA",46,0)
 S ATTSTR=ATTSTR_"XECUTABLE HELP"
"RTN","MAGUFFLA",47,0)
 D FIELD^DID(FILENO,FIELDNO,"N",ATTSTR,"ATTARY")
"RTN","MAGUFFLA",48,0)
 S ATT="",OUTIX=1
"RTN","MAGUFFLA",49,0)
 F  S ATT=$O(ATTARY(ATT)) Q:ATT=""  D
"RTN","MAGUFFLA",50,0)
 . I $D(ATTARY(ATT))=1 D  Q
"RTN","MAGUFFLA",51,0)
 . . S OUTIX=OUTIX+1,OUT(OUTIX)=ATT_"`"_ATTARY(ATT)
"RTN","MAGUFFLA",52,0)
 . . Q
"RTN","MAGUFFLA",53,0)
 . S WPIX=""
"RTN","MAGUFFLA",54,0)
 . F  S WPIX=$O(ATTARY(ATT,WPIX)) Q:WPIX=""  D
"RTN","MAGUFFLA",55,0)
 . . S OUTIX=OUTIX+1,OUT(OUTIX)=ATT_"`"_ATTARY(ATT,WPIX)
"RTN","MAGUFFLA",56,0)
 . . Q
"RTN","MAGUFFLA",57,0)
 . Q
"RTN","MAGUFFLA",58,0)
 S OUT(1)="0``"_OUTIX ; count
"RTN","MAGUFFLA",59,0)
 Q
"RTN","MAGUFFLL")
0^44^B6710816
"RTN","MAGUFFLL",1,0)
MAGUFFLL ;WOIFO/MLH - Imaging FileMan utility - return list of fields in a file; 24 Sep 2011 11:52 AM
"RTN","MAGUFFLL",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUFFLL",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUFFLL",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUFFLL",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUFFLL",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUFFLL",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUFFLL",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUFFLL",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUFFLL",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUFFLL",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUFFLL",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUFFLL",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUFFLL",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUFFLL",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUFFLL",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUFFLL",17,0)
 ;;
"RTN","MAGUFFLL",18,0)
 Q
"RTN","MAGUFFLL",19,0)
 ;
"RTN","MAGUFFLL",20,0)
FIELDLST(OUT,FILENO,ORDER) ; rpc MAG FILEMAN FIELD LIST
"RTN","MAGUFFLL",21,0)
 ; input:   FILENO   The number of a Fileman file or subfile
"RTN","MAGUFFLL",22,0)
 ;          ORDER    Desired order of field list return:
"RTN","MAGUFFLL",23,0)
 ;                   A   alpha
"RTN","MAGUFFLL",24,0)
 ;                   N   numeric (default)
"RTN","MAGUFFLL",25,0)
 ; 
"RTN","MAGUFFLL",26,0)
 ; output:  OUT()    Array of return values formatted as follows:
"RTN","MAGUFFLL",27,0)
 ;   If no input or processing error:
"RTN","MAGUFFLL",28,0)
 ;          OUT(1) = 0``n where n = number of entries on the OUT() array
"RTN","MAGUFFLL",29,0)
 ;          OUT(m) where 1 < m <= n
"RTN","MAGUFFLL",30,0)
 ;                 = field_number`field_name
"RTN","MAGUFFLL",31,0)
 ;   If an input or processing error:
"RTN","MAGUFFLL",32,0)
 ;          OUT(1) = n`error_message
"RTN","MAGUFFLL",33,0)
 ;
"RTN","MAGUFFLL",34,0)
 ; All ^DD references permitted under ICR #5551
"RTN","MAGUFFLL",35,0)
 ; 
"RTN","MAGUFFLL",36,0)
 K OUT
"RTN","MAGUFFLL",37,0)
 I FILENO=+FILENO,$D(^DD(FILENO)) ; valid input
"RTN","MAGUFFLL",38,0)
 E  S OUT(1)="-1`'"_FILENO_"' not a valid Fileman file or subfile number" Q
"RTN","MAGUFFLL",39,0)
 S ORDER=$G(ORDER,"N")
"RTN","MAGUFFLL",40,0)
 I ".A.N."'[("."_ORDER_".") S OUT(1)="-2`invalid order (must be A or N)" Q
"RTN","MAGUFFLL",41,0)
 N FIELDNAME,FIELDNO,FIELDINFO,FIELDLIST,FIELDIX,OUTIX
"RTN","MAGUFFLL",42,0)
 S FIELDNAME=""
"RTN","MAGUFFLL",43,0)
 F  S FIELDNAME=$O(^DD(FILENO,"B",FIELDNAME))  Q:FIELDNAME=""  D
"RTN","MAGUFFLL",44,0)
 . S FIELDNO=0
"RTN","MAGUFFLL",45,0)
 . F  S FIELDNO=$O(^DD(FILENO,"B",FIELDNAME,FIELDNO)) Q:'FIELDNO  D
"RTN","MAGUFFLL",46,0)
 . . S FIELDLIST($S(ORDER="N":FIELDNO,1:$O(FIELDLIST(""),-1)+1))=FIELDNO_"`"_FIELDNAME
"RTN","MAGUFFLL",47,0)
 . . Q
"RTN","MAGUFFLL",48,0)
 . Q
"RTN","MAGUFFLL",49,0)
 S FIELDIX=0,OUTIX=1
"RTN","MAGUFFLL",50,0)
 F  S FIELDIX=$O(FIELDLIST(FIELDIX)) Q:'FIELDIX  D
"RTN","MAGUFFLL",51,0)
 . S OUTIX=OUTIX+1,OUT(OUTIX)=FIELDLIST(FIELDIX)
"RTN","MAGUFFLL",52,0)
 . Q
"RTN","MAGUFFLL",53,0)
 S OUT(1)="0``"_(OUTIX-1) ; count
"RTN","MAGUFFLL",54,0)
 Q
"RTN","MAGUPSE")
0^45^B4463670
"RTN","MAGUPSE",1,0)
MAGUPSE ;WOIFO/MLH - Imaging utility - return pt employee/sensitive status;  3 Feb 2012 06:00 AM
"RTN","MAGUPSE",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGUPSE",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUPSE",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUPSE",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUPSE",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUPSE",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUPSE",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUPSE",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUPSE",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUPSE",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUPSE",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUPSE",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUPSE",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUPSE",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUPSE",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUPSE",17,0)
 ;;
"RTN","MAGUPSE",18,0)
 Q
"RTN","MAGUPSE",19,0)
 ;
"RTN","MAGUPSE",20,0)
SENSEMP(MAGDFN) ;FUNCTION - return pt employee/sensitive status
"RTN","MAGUPSE",21,0)
 ;input:  MAGDFN       pt's internal entry no. on PATIENT File (#2)
"RTN","MAGUPSE",22,0)
 ;function return:     -1  if DFN is not a positive integer
"RTN","MAGUPSE",23,0)
 ;                      0  if patient not employee or sensitive, or patient not found
"RTN","MAGUPSE",24,0)
 ;                      1  if patient is employee
"RTN","MAGUPSE",25,0)
 ;                      2  if patient is sensitive
"RTN","MAGUPSE",26,0)
 ;                      3  if patient is both employee and sensitive
"RTN","MAGUPSE",27,0)
 N SENSEMP
"RTN","MAGUPSE",28,0)
 I (MAGDFN'>0)!(MAGDFN'?1.N) Q -2 ; improper format
"RTN","MAGUPSE",29,0)
 S SENSEMP=0 ; assume neither employee nor sensitive
"RTN","MAGUPSE",30,0)
 S SENSEMP=SENSEMP+($$EMPL^DGSEC4(MAGDFN)=1) ; employee (ICR #3646)
"RTN","MAGUPSE",31,0)
 S SENSEMP=SENSEMP+(2*($P($G(^DGSL(38.1,MAGDFN,0)),"^",2)=1)) ; sensitive (IA #767)
"RTN","MAGUPSE",32,0)
 Q SENSEMP
"RTN","MAGURQRS")
0^46^B5067518
"RTN","MAGURQRS",1,0)
MAGURQRS ;WOIFO/MLH - utility - repair headers in ^MAGDAUDT(2006.5733); 18-Jan-2012 08:17
"RTN","MAGURQRS",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGURQRS",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGURQRS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGURQRS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGURQRS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGURQRS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGURQRS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGURQRS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGURQRS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGURQRS",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGURQRS",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGURQRS",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGURQRS",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGURQRS",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGURQRS",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGURQRS",17,0)
 ;;
"RTN","MAGURQRS",18,0)
 Q
"RTN","MAGURQRS",19,0)
 ; This routine resolves issues in ^MAGDAUDT(2006.5733), whose header node
"RTN","MAGURQRS",20,0)
 ; and subnodes all formerly contained incorrect values in the file number
"RTN","MAGURQRS",21,0)
 ; portion of the header (e.g., '2006.57633' instead of '2006.5733').
"RTN","MAGURQRS",22,0)
 ; 
"RTN","MAGURQRS",23,0)
 Q
"RTN","MAGURQRS",24,0)
 ;
"RTN","MAGURQRS",25,0)
CLEANUP ;
"RTN","MAGURQRS",26,0)
 N FIL,FMDT,MAGIEN,ACTIX
"RTN","MAGURQRS",27,0)
 S FIL=$NA(^MAGDAUDT(2006.5733))
"RTN","MAGURQRS",28,0)
 L +@FIL:5 E  D  Q
"RTN","MAGURQRS",29,0)
 . W:$D(IO(0)) !,"ERROR: Could not lock statistics file!",!
"RTN","MAGURQRS",30,0)
 . Q
"RTN","MAGURQRS",31,0)
 S $P(@FIL@(0),"^",2)=2006.5733
"RTN","MAGURQRS",32,0)
 S FMDT=0
"RTN","MAGURQRS",33,0)
 F  S FMDT=$O(@FIL@(FMDT)) Q:'FMDT  D
"RTN","MAGURQRS",34,0)
 . S $P(@FIL@(FMDT,1,0),"^",2)=2006.57331
"RTN","MAGURQRS",35,0)
 . S MAGIEN=0
"RTN","MAGURQRS",36,0)
 . F  S MAGIEN=$O(@FIL@(FMDT,1,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGURQRS",37,0)
 . . S $P(@FIL@(FMDT,1,MAGIEN,1,0),"^",2)=2006.57332
"RTN","MAGURQRS",38,0)
 . . S ACTIX=0
"RTN","MAGURQRS",39,0)
 . . F  S ACTIX=$O(@FIL@(FMDT,1,MAGIEN,1,ACTIX)) Q:'ACTIX  D
"RTN","MAGURQRS",40,0)
 . . . S $P(@FIL@(FMDT,1,MAGIEN,1,ACTIX,1,0),"^",2)=2006.57333
"RTN","MAGURQRS",41,0)
 . . . Q
"RTN","MAGURQRS",42,0)
 . . Q
"RTN","MAGURQRS",43,0)
 . Q
"RTN","MAGURQRS",44,0)
 L -@FIL
"RTN","MAGURQRS",45,0)
 Q
"RTN","MAGVAC01")
0^47^B52937887
"RTN","MAGVAC01",1,0)
MAGVAC01 ;WOIFO/NST - Add records to storage files ; 22 Apr 2010 3:59 PM
"RTN","MAGVAC01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAC01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAC01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAC01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAC01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAC01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAC01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAC01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAC01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAC01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAC01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAC01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAC01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAC01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAC01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAC01",17,0)
 ;;
"RTN","MAGVAC01",18,0)
 Q
"RTN","MAGVAC01",19,0)
 ;
"RTN","MAGVAC01",20,0)
 ;*****  Add a new record to RETENTION POLICY file (#2006.914) 
"RTN","MAGVAC01",21,0)
 ;       
"RTN","MAGVAC01",22,0)
 ; RPC:MAGVA CREATE RETPOL
"RTN","MAGVAC01",23,0)
 ; 
"RTN","MAGVAC01",24,0)
 ; Input Parameters
"RTN","MAGVAC01",25,0)
 ; ================
"RTN","MAGVAC01",26,0)
 ; 
"RTN","MAGVAC01",27,0)
 ; MAGPARAM("ARCHIVE DURATION TRIGGER")
"RTN","MAGVAC01",28,0)
 ; MAGPARAM("ARCHIVE DURATION YEARS")
"RTN","MAGVAC01",29,0)
 ; MAGPARAM("BUSINESS KEY")
"RTN","MAGVAC01",30,0)
 ; MAGPARAM("DISPLAY NAME")
"RTN","MAGVAC01",31,0)
 ; MAGPARAM("MINIMUM ARCHIVE COPIES")
"RTN","MAGVAC01",32,0)
 ; MAGPARAM("MINIMUM OFFSITE COPIES")
"RTN","MAGVAC01",33,0)
 ; 
"RTN","MAGVAC01",34,0)
 ; Return Values
"RTN","MAGVAC01",35,0)
 ; =============
"RTN","MAGVAC01",36,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",37,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",38,0)
 ; 
"RTN","MAGVAC01",39,0)
ADDRP(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE RETPOL]
"RTN","MAGVAC01",40,0)
 N MAGWP
"RTN","MAGVAC01",41,0)
 K MAGRY
"RTN","MAGVAC01",42,0)
 ; Check for uniqueness of business key among active Retention Policies  
"RTN","MAGVAC01",43,0)
 I $G(MAGPARAM("BUSINESS KEY"))'="" D  Q:$G(MAGRY)'=""
"RTN","MAGVAC01",44,0)
 . I $O(^MAGV(2006.914,"BKEYACT",MAGPARAM("BUSINESS KEY"),""))'="" D
"RTN","MAGVAC01",45,0)
 . . S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Active business key """_MAGPARAM("BUSINESS KEY")_""" already exists."
"RTN","MAGVAC01",46,0)
 . Q
"RTN","MAGVAC01",47,0)
 ;
"RTN","MAGVAC01",48,0)
 S MAGPARAM("ACTIVE")=1
"RTN","MAGVAC01",49,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.914,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",50,0)
 Q
"RTN","MAGVAC01",51,0)
 ;
"RTN","MAGVAC01",52,0)
 ;*****  Add a new record to ARTIFACT file (#2006.916) 
"RTN","MAGVAC01",53,0)
 ;       
"RTN","MAGVAC01",54,0)
 ; RPC:MAGVA CREATE ARTIFACT W KL
"RTN","MAGVAC01",55,0)
 ; 
"RTN","MAGVAC01",56,0)
 ; Input Parameters
"RTN","MAGVAC01",57,0)
 ; ================
"RTN","MAGVAC01",58,0)
 ; 
"RTN","MAGVAC01",59,0)
 ; MAGPARAM("ARTIFACT DESCRIPTOR")
"RTN","MAGVAC01",60,0)
 ; MAGPARAM("ARTIFACT TOKEN")
"RTN","MAGVAC01",61,0)
 ; MAGPARAM("CRC")
"RTN","MAGVAC01",62,0)
 ; MAGPARAM("CREATING APPLICATION")
"RTN","MAGVAC01",63,0)
 ; MAGPARAM("LAST ACCESS DATE/TIME")
"RTN","MAGVAC01",64,0)
 ; MAGPARAM("SIZE IN BYTES")
"RTN","MAGVAC01",65,0)
 ; 
"RTN","MAGVAC01",66,0)
 ; Artifact KEYLIST values
"RTN","MAGVAC01",67,0)
 ;   KLIST(1) = First level Key
"RTN","MAGVAC01",68,0)
 ;   KLIST(2) = Second level Key
"RTN","MAGVAC01",69,0)
 ;   ...
"RTN","MAGVAC01",70,0)
 ;   KLIST(N) = N-th level Key
"RTN","MAGVAC01",71,0)
 ;
"RTN","MAGVAC01",72,0)
 ; Return Values
"RTN","MAGVAC01",73,0)
 ; =============
"RTN","MAGVAC01",74,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",75,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",76,0)
 ;  
"RTN","MAGVAC01",77,0)
ADDAFACT(MAGRY,MAGPARAM,KLIST) ;  RPC [MAGVA CREATE ARTIFACT W KL]
"RTN","MAGVAC01",78,0)
 ; build KLIST first - workaround for Old broker listener
"RTN","MAGVAC01",79,0)
 N L,LL
"RTN","MAGVAC01",80,0)
 S L="KLIST",LL=0
"RTN","MAGVAC01",81,0)
 K KLIST
"RTN","MAGVAC01",82,0)
 F  S L=$O(MAGPARAM(L)) Q:(L="")!($E(L,1,5)'="KLIST")  S LL=LL+1,KLIST(LL)=MAGPARAM(L) K MAGPARAM(L)
"RTN","MAGVAC01",83,0)
 ;
"RTN","MAGVAC01",84,0)
 N MAGWP,FILE,MAGAPP,PFILE
"RTN","MAGVAC01",85,0)
 K MAGRY
"RTN","MAGVAC01",86,0)
 ; Check ARTIFACT TOKEN presents
"RTN","MAGVAC01",87,0)
 S FILE=2006.916
"RTN","MAGVAC01",88,0)
 I $G(MAGPARAM("ARTIFACT TOKEN"))="" D  Q
"RTN","MAGVAC01",89,0)
 . S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"ARTIFACT TOKEN is required"
"RTN","MAGVAC01",90,0)
 . Q
"RTN","MAGVAC01",91,0)
 ; check for "ARTIFACT TOKEN" for uniqueness first
"RTN","MAGVAC01",92,0)
 I $D(^MAGV(FILE,"B",MAGPARAM("ARTIFACT TOKEN"))) D  Q
"RTN","MAGVAC01",93,0)
 . S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"ARTIFACT TOKEN is not unique"
"RTN","MAGVAC01",94,0)
 . Q
"RTN","MAGVAC01",95,0)
 ;
"RTN","MAGVAC01",96,0)
 ; Get creating application or create a new one
"RTN","MAGVAC01",97,0)
 S PFILE=$$GETFILEP^MAGVAF05(FILE,"CREATING APPLICATION")  ; the file that field points to
"RTN","MAGVAC01",98,0)
 S MAGRY=$$GETIEN^MAGVAF05(PFILE,MAGPARAM("CREATING APPLICATION"),1)
"RTN","MAGVAC01",99,0)
 I '$$ISOK^MAGVAF02(MAGRY) Q  ; Quit if error. MAGRY is already set   
"RTN","MAGVAC01",100,0)
 S MAGPARAM("CREATING APPLICATION")=$$GETVAL^MAGVAF02(MAGRY)  ; Set the internal value
"RTN","MAGVAC01",101,0)
 ;
"RTN","MAGVAC01",102,0)
 ; get the KEYLIST
"RTN","MAGVAC01",103,0)
 D GETKLFK^MAGVAKL1(.MAGRY,.KLIST)
"RTN","MAGVAC01",104,0)
 I '$$ISOK^MAGVAF02(MAGRY) Q  ; Quit if error. MAGRY is already set
"RTN","MAGVAC01",105,0)
 S MAGPARAM("KEYLIST")=$$GETVAL^MAGVAF02(MAGRY)  ; Set the FK
"RTN","MAGVAC01",106,0)
 S MAGPARAM("CREATED DATE/TIME")=$$NOW^XLFDT
"RTN","MAGVAC01",107,0)
 D ADDRCD^MAGVAF01(.MAGRY,FILE,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",108,0)
 Q
"RTN","MAGVAC01",109,0)
 ;
"RTN","MAGVAC01",110,0)
 ;*****  Add an Artifact Retention Policy (#2006.921) record 
"RTN","MAGVAC01",111,0)
 ;       
"RTN","MAGVAC01",112,0)
 ; RPC:MAGVA CREATE ARETPOL
"RTN","MAGVAC01",113,0)
 ; 
"RTN","MAGVAC01",114,0)
 ; Input Parameters
"RTN","MAGVAC01",115,0)
 ; 
"RTN","MAGVAC01",116,0)
 ;   MAGPARAM("ARTIFACT")           = A pointer to ARTIFACT file (#2006.916)
"RTN","MAGVAC01",117,0)
 ;   MAGPARAM("RETENTION POLICY")   = A pointer to RETENTION POLICY file (#2006.914)
"RTN","MAGVAC01",118,0)
 ;   MAGPARAM("SATISFIED DATE/TIME") = DateTime in IDF Format (YYYYMMDD.HHMMSS)
"RTN","MAGVAC01",119,0)
 ; 
"RTN","MAGVAC01",120,0)
 ; Return Values
"RTN","MAGVAC01",121,0)
 ; =============
"RTN","MAGVAC01",122,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",123,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",124,0)
 ; 
"RTN","MAGVAC01",125,0)
ADDARP(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE ARETPOL]
"RTN","MAGVAC01",126,0)
 N MAGWP
"RTN","MAGVAC01",127,0)
 K MAGRY
"RTN","MAGVAC01",128,0)
 S MAGPARAM("SATISFIED DATE/TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("SATISFIED DATE/TIME")))
"RTN","MAGVAC01",129,0)
 S MAGPARAM("ACTIVE")=1
"RTN","MAGVAC01",130,0)
 S MAGPARAM("CREATED DATE/TIME")=$$NOW^XLFDT
"RTN","MAGVAC01",131,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.921,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",132,0)
 Q
"RTN","MAGVAC01",133,0)
 ;
"RTN","MAGVAC01",134,0)
 ;*****  Add a new record to RETENTION POLICY FULFILLMENT file (#2006.922)
"RTN","MAGVAC01",135,0)
 ;       
"RTN","MAGVAC01",136,0)
 ; RPC:MAGVA CREATE RETPOLFF
"RTN","MAGVAC01",137,0)
 ; 
"RTN","MAGVAC01",138,0)
 ; Input Parameters
"RTN","MAGVAC01",139,0)
 ; ================
"RTN","MAGVAC01",140,0)
 ; 
"RTN","MAGVAC01",141,0)
 ;   MAGPARAM("ARTIFACT RETENTION POLICY")  = A pointer to ARTIFACT RETENTION POLICY file (#2006.921)
"RTN","MAGVAC01",142,0)
 ;   MAGPARAM("ARTIFACT INSTANCE")   = A pointer to ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAC01",143,0)
 ; 
"RTN","MAGVAC01",144,0)
 ; Return Values
"RTN","MAGVAC01",145,0)
 ; =============
"RTN","MAGVAC01",146,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",147,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",148,0)
 ; 
"RTN","MAGVAC01",149,0)
ADDARPF(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE RETPOLFF]
"RTN","MAGVAC01",150,0)
 N MAGWP
"RTN","MAGVAC01",151,0)
 K MAGRY
"RTN","MAGVAC01",152,0)
 S MAGPARAM("CREATED DATE/TIME")=$$NOW^XLFDT
"RTN","MAGVAC01",153,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.922,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",154,0)
 Q
"RTN","MAGVAC01",155,0)
 ;
"RTN","MAGVAC01",156,0)
 ;*****  Add a new record to STORAGE PROVIDER AVAILABILITY file (#2006.924)
"RTN","MAGVAC01",157,0)
 ;       
"RTN","MAGVAC01",158,0)
 ; RPC:MAGVA CREATE PROVAVAILTY
"RTN","MAGVAC01",159,0)
 ; 
"RTN","MAGVAC01",160,0)
 ; Input Parameters
"RTN","MAGVAC01",161,0)
 ; 
"RTN","MAGVAC01",162,0)
 ;   MAGPARAM("STORAGE PROVIDER") = A pointer to STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAC01",163,0)
 ;   MAGPARAM("SOURCE PLACE")  = A pointer to IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAC01",164,0)
 ;   MAGPARAM("START TIME")    = DateTime in IDF format (YYYYMMDD.HHMMSS)
"RTN","MAGVAC01",165,0)
 ;   MAGPARAM("END TIME")      = DateTime in IDF format (YYYYMMDD.HHMMSS)
"RTN","MAGVAC01",166,0)
 ; 
"RTN","MAGVAC01",167,0)
 ; Return Values
"RTN","MAGVAC01",168,0)
 ; =============
"RTN","MAGVAC01",169,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",170,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",171,0)
 ; 
"RTN","MAGVAC01",172,0)
ADDPA(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE PROVAVAILTY]
"RTN","MAGVAC01",173,0)
 N MAGWP
"RTN","MAGVAC01",174,0)
 K MAGRY
"RTN","MAGVAC01",175,0)
 ; convert date time fields to FileMan date/time format
"RTN","MAGVAC01",176,0)
 S MAGPARAM("START TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("START TIME")))
"RTN","MAGVAC01",177,0)
 S MAGPARAM("END TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("END TIME")))
"RTN","MAGVAC01",178,0)
 ; Add the record
"RTN","MAGVAC01",179,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.924,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",180,0)
 Q
"RTN","MAGVAC01",181,0)
 ;
"RTN","MAGVAC01",182,0)
 ;*****  Add a new record to STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAC01",183,0)
 ;       
"RTN","MAGVAC01",184,0)
 ; RPC: MAGVA CREATE PROVIDER
"RTN","MAGVAC01",185,0)
 ; 
"RTN","MAGVAC01",186,0)
 ; Input Parameters
"RTN","MAGVAC01",187,0)
 ; ================
"RTN","MAGVAC01",188,0)
 ; 
"RTN","MAGVAC01",189,0)
 ;   MAGPARAM("STORAGE PROVIDER TYPE")
"RTN","MAGVAC01",190,0)
 ;   MAGPARAM("STORAGE PLACE")
"RTN","MAGVAC01",191,0)
 ;   MAGPARAM("ARCHIVE")
"RTN","MAGVAC01",192,0)
 ;   MAGPARAM("PRIMARY STORAGE")
"RTN","MAGVAC01",193,0)
 ; 
"RTN","MAGVAC01",194,0)
 ; Return Values
"RTN","MAGVAC01",195,0)
 ; =============
"RTN","MAGVAC01",196,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",197,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",198,0)
 ;
"RTN","MAGVAC01",199,0)
ADDPRV(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE PROVIDER]
"RTN","MAGVAC01",200,0)
 N MAGWP
"RTN","MAGVAC01",201,0)
 K MAGRY
"RTN","MAGVAC01",202,0)
 S MAGPARAM("WRITABLE")=1
"RTN","MAGVAC01",203,0)
 S MAGPARAM("ACTIVE")=1
"RTN","MAGVAC01",204,0)
 ; Add the record
"RTN","MAGVAC01",205,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.917,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",206,0)
 Q
"RTN","MAGVAC01",207,0)
 ;
"RTN","MAGVAC01",208,0)
 ;*****  Add a new record to ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAC01",209,0)
 ;       
"RTN","MAGVAC01",210,0)
 ; RPC: MAGVA CREATE AINSTANCE
"RTN","MAGVAC01",211,0)
 ; 
"RTN","MAGVAC01",212,0)
 ; Input Parameters
"RTN","MAGVAC01",213,0)
 ; ================
"RTN","MAGVAC01",214,0)
 ; 
"RTN","MAGVAC01",215,0)
 ;   MAGPARAM("ARTIFACT")
"RTN","MAGVAC01",216,0)
 ;   MAGPARAM("STORAGE PROVIDER")
"RTN","MAGVAC01",217,0)
 ;   MAGPARAM("FILEREF")
"RTN","MAGVAC01",218,0)
 ;   MAGPARAM("DISK VOLUME")
"RTN","MAGVAC01",219,0)
 ;   MAGPARAM("FILEPATH")
"RTN","MAGVAC01",220,0)
 ;   MAGURL(1..n) = URL value
"RTN","MAGVAC01",221,0)
 ; 
"RTN","MAGVAC01",222,0)
 ; Return Values
"RTN","MAGVAC01",223,0)
 ; =============
"RTN","MAGVAC01",224,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",225,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",226,0)
 ; 
"RTN","MAGVAC01",227,0)
ADDAINST(MAGRY,MAGPARAM,MAGURL) ; RPC [MAGVA CREATE AINSTANCE]
"RTN","MAGVAC01",228,0)
 ; build MAGURL first - workaround for Old broker listener
"RTN","MAGVAC01",229,0)
 N L,LL
"RTN","MAGVAC01",230,0)
 S L="MAGURL",LL=0
"RTN","MAGVAC01",231,0)
 K KLIST
"RTN","MAGVAC01",232,0)
 F  S L=$O(MAGPARAM(L)) Q:(L="")!($E(L,1,6)'="MAGURL")  S LL=LL+1,MAGURL(LL)=MAGPARAM(L) K MAGPARAM(L)
"RTN","MAGVAC01",233,0)
 ;
"RTN","MAGVAC01",234,0)
 N FILE,MAGWP
"RTN","MAGVAC01",235,0)
 K MAGRY
"RTN","MAGVAC01",236,0)
 S FILE=2006.918
"RTN","MAGVAC01",237,0)
 S MAGPARAM("CREATED DATE/TIME")=$$NOW^XLFDT
"RTN","MAGVAC01",238,0)
 M MAGWP("URL")=MAGURL
"RTN","MAGVAC01",239,0)
 D ADDRCD^MAGVAF01(.MAGRY,FILE,.MAGPARAM,.MAGWP)  ; add the record
"RTN","MAGVAC01",240,0)
 Q
"RTN","MAGVAC01",241,0)
 ;
"RTN","MAGVAC01",242,0)
 ;*****  Add a new record to ARTIFACT DESCRIPTOR file (#2006.915)
"RTN","MAGVAC01",243,0)
 ;       
"RTN","MAGVAC01",244,0)
 ; RPC: MAGVA CREATE AD
"RTN","MAGVAC01",245,0)
 ; 
"RTN","MAGVAC01",246,0)
 ; Input Parameters
"RTN","MAGVAC01",247,0)
 ; ================
"RTN","MAGVAC01",248,0)
 ; 
"RTN","MAGVAC01",249,0)
 ; MAGPARAM("ARTIFACT FORMAT")
"RTN","MAGVAC01",250,0)
 ; MAGPARAM("ARTIFACT TYPE")
"RTN","MAGVAC01",251,0)
 ; MAGPARAM("FILE EXTENSION")
"RTN","MAGVAC01",252,0)
 ; MAGPARAM("ACTIVE")
"RTN","MAGVAC01",253,0)
 ; MAGPARAM("RETENTION POLICY")
"RTN","MAGVAC01",254,0)
 ; 
"RTN","MAGVAC01",255,0)
 ; Return Values
"RTN","MAGVAC01",256,0)
 ; =============
"RTN","MAGVAC01",257,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",258,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",259,0)
 ;
"RTN","MAGVAC01",260,0)
ADDAD(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE AD]
"RTN","MAGVAC01",261,0)
 N MAGWP
"RTN","MAGVAC01",262,0)
 K MAGRY
"RTN","MAGVAC01",263,0)
 ; Add the record
"RTN","MAGVAC01",264,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.915,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",265,0)
 Q
"RTN","MAGVAC01",266,0)
 ;
"RTN","MAGVAC01",267,0)
 ;*****  Add a new record to RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"RTN","MAGVAC01",268,0)
 ;       
"RTN","MAGVAC01",269,0)
 ; RPC: MAGVA CREATE RETPOL PROV MAP
"RTN","MAGVAC01",270,0)
 ; 
"RTN","MAGVAC01",271,0)
 ; Input Parameters
"RTN","MAGVAC01",272,0)
 ; ================
"RTN","MAGVAC01",273,0)
 ; 
"RTN","MAGVAC01",274,0)
 ;   MAGPARAM("RETENTION POLICY") = Pointer to RETENTION POLICY file (#2006.914)
"RTN","MAGVAC01",275,0)
 ;   MAGPARAM("STORAGE PROVIDER") = Pointer to STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAC01",276,0)
 ;   MAGPARAM("SOURCE PLACE") = Pointer to IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAC01",277,0)
 ;   MAGPARAM("SYNCHRONOUS") = 0/1
"RTN","MAGVAC01",278,0)
 ;   MAGPARAM("OFFSITE") = 0/1
"RTN","MAGVAC01",279,0)
 ; 
"RTN","MAGVAC01",280,0)
 ; Return Values
"RTN","MAGVAC01",281,0)
 ; =============
"RTN","MAGVAC01",282,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",283,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",284,0)
 ;
"RTN","MAGVAC01",285,0)
ADDRPPM(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE RETPOL PROV MAP]
"RTN","MAGVAC01",286,0)
 N MAGWP
"RTN","MAGVAC01",287,0)
 K MAGRY
"RTN","MAGVAC01",288,0)
 ; Add the record
"RTN","MAGVAC01",289,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.923,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",290,0)
 Q
"RTN","MAGVAC01",291,0)
 ;
"RTN","MAGVAC01",292,0)
 ;*****  Add a new record to TRANSFER STATISTICS file (#2006.925)
"RTN","MAGVAC01",293,0)
 ;       
"RTN","MAGVAC01",294,0)
 ; RPC: MAGVA CREATE TRF STATS
"RTN","MAGVAC01",295,0)
 ; 
"RTN","MAGVAC01",296,0)
 ; Input Parameters
"RTN","MAGVAC01",297,0)
 ; ================
"RTN","MAGVAC01",298,0)
 ; 
"RTN","MAGVAC01",299,0)
 ;   MAGPARAM("DURATION IN MILLISECONDS")
"RTN","MAGVAC01",300,0)
 ;   MAGPARAM("ENDPOINT PLACE") = Pointer to IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAC01",301,0)
 ;   MAGPARAM("STORAGE PROVIDER") = Pointer to STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAC01",302,0)
 ;   MAGPARAM("SIZE IN BYTES")
"RTN","MAGVAC01",303,0)
 ;   MAGPARAM("START DATE/TIME") = DateTime in IDF format  (YYYYMMDD.HHMMSS)
"RTN","MAGVAC01",304,0)
 ; 
"RTN","MAGVAC01",305,0)
 ; Return Values
"RTN","MAGVAC01",306,0)
 ; =============
"RTN","MAGVAC01",307,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",308,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",309,0)
 ;
"RTN","MAGVAC01",310,0)
ADDTRFS(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE TRF STATS]
"RTN","MAGVAC01",311,0)
 N MAGWP
"RTN","MAGVAC01",312,0)
 K MAGRY
"RTN","MAGVAC01",313,0)
 ; Add the record
"RTN","MAGVAC01",314,0)
 S MAGPARAM("START DATE/TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("START DATE/TIME")))
"RTN","MAGVAC01",315,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.925,.MAGPARAM,.MAGWP)
"RTN","MAGVAC01",316,0)
 Q
"RTN","MAGVAC01",317,0)
 ;
"RTN","MAGVAC01",318,0)
 ;*****  Add a new record to STORAGE TRANSACTION file (#2006.926)
"RTN","MAGVAC01",319,0)
 ;       
"RTN","MAGVAC01",320,0)
 ; RPC: MAGVA CREATE STORAGE TA
"RTN","MAGVAC01",321,0)
 ; 
"RTN","MAGVAC01",322,0)
 ; Input Parameters
"RTN","MAGVAC01",323,0)
 ; ================
"RTN","MAGVAC01",324,0)
 ; 
"RTN","MAGVAC01",325,0)
 ;   MAGPARAM("ARTIFACT") = Pointer to ARTIFACT file (#2006.916)
"RTN","MAGVAC01",326,0)
 ;   MAGPARAM("STORAGE PROVIDER") = Pointer to STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAC01",327,0)
 ;   MAGPARAM("SUCCEEDED") = 0/1
"RTN","MAGVAC01",328,0)
 ;   MAGPARAM("TRANSACTION TYPE") = 
"RTN","MAGVAC01",329,0)
 ;   MAGPARAM("INITIATING APPLICATION") = 
"RTN","MAGVAC01",330,0)
 ;   
"RTN","MAGVAC01",331,0)
 ;   MAGMSG(1..n) = MESSAGE - optional
"RTN","MAGVAC01",332,0)
 ;   
"RTN","MAGVAC01",333,0)
 ;   MAGMSG(1..n) = MESSAGE 
"RTN","MAGVAC01",334,0)
 ; Return Values
"RTN","MAGVAC01",335,0)
 ; =============
"RTN","MAGVAC01",336,0)
 ; 
"RTN","MAGVAC01",337,0)
 ; if error MAGRY = Failure status ^Error message^
"RTN","MAGVAC01",338,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAC01",339,0)
 ;
"RTN","MAGVAC01",340,0)
ADDSTTA(MAGRY,MAGPARAM,MAGMSG) ; RPC [MAGVA CREATE STORAGE TA]
"RTN","MAGVAC01",341,0)
 ; build MAGMSG first - workaround for Old broker listener
"RTN","MAGVAC01",342,0)
 N L,LL
"RTN","MAGVAC01",343,0)
 S L="MAGMSG",LL=0
"RTN","MAGVAC01",344,0)
 K MAGMSG
"RTN","MAGVAC01",345,0)
 F  S L=$O(MAGPARAM(L)) Q:(L="")!($E(L,1,6)'="MAGMSG")  S LL=LL+1,MAGMSG(LL)=MAGPARAM(L) K MAGPARAM(L)
"RTN","MAGVAC01",346,0)
 ;
"RTN","MAGVAC01",347,0)
 N FILE,MAGWP,PFILE
"RTN","MAGVAC01",348,0)
 K MAGRY
"RTN","MAGVAC01",349,0)
 S FILE=2006.926
"RTN","MAGVAC01",350,0)
 ;
"RTN","MAGVAC01",351,0)
 ; Get creating application or create a new one
"RTN","MAGVAC01",352,0)
 S PFILE=$$GETFILEP^MAGVAF05(FILE,"INITIATING APPLICATION")
"RTN","MAGVAC01",353,0)
 S MAGRY=$$GETIEN^MAGVAF05(PFILE,MAGPARAM("INITIATING APPLICATION"),1)
"RTN","MAGVAC01",354,0)
 I '$$ISOK^MAGVAF02(MAGRY) Q  ; Quit if error. MAGRY is already set   
"RTN","MAGVAC01",355,0)
 S MAGPARAM("INITIATING APPLICATION")=$$GETVAL^MAGVAF02(MAGRY)  ; Set the internal value
"RTN","MAGVAC01",356,0)
 ;
"RTN","MAGVAC01",357,0)
 S MAGPARAM("TRANSACTION DATE/TIME")=$$NOW^XLFDT
"RTN","MAGVAC01",358,0)
 M MAGWP("MESSAGE")=MAGMSG
"RTN","MAGVAC01",359,0)
 D ADDRCD^MAGVAF01(.MAGRY,FILE,.MAGPARAM,.MAGWP)  ; add the record
"RTN","MAGVAC01",360,0)
 Q
"RTN","MAGVAD01")
0^48^B4168174
"RTN","MAGVAD01",1,0)
MAGVAD01 ;WOIFO/NST - Delete records in storage files ; 11 Mar 2010 4:39 PM
"RTN","MAGVAD01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAD01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAD01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAD01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAD01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAD01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAD01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAD01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAD01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAD01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAD01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAD01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAD01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAD01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAD01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAD01",17,0)
 ;;
"RTN","MAGVAD01",18,0)
 Q
"RTN","MAGVAD01",19,0)
 ;*****  Delete a record in STORAGE PROVIDER AVAILABILITY file (#2006.924)
"RTN","MAGVAD01",20,0)
 ;       
"RTN","MAGVAD01",21,0)
 ; RPC:MAGVA DELETE PROVAVAILTY
"RTN","MAGVAD01",22,0)
 ; 
"RTN","MAGVAD01",23,0)
 ; Input Parameters
"RTN","MAGVAD01",24,0)
 ; ================
"RTN","MAGVAD01",25,0)
 ;   MAGPARAM("PK") = IEN in STORAGE PROVIDER AVAILABILITY file (#2006.924)
"RTN","MAGVAD01",26,0)
 ;   
"RTN","MAGVAD01",27,0)
 ; Return Values
"RTN","MAGVAD01",28,0)
 ; =============
"RTN","MAGVAD01",29,0)
 ; 
"RTN","MAGVAD01",30,0)
 ; if error MAGRY = Failure status ^ Error message ^
"RTN","MAGVAD01",31,0)
 ; if success MAGRY = Success Status
"RTN","MAGVAD01",32,0)
 ; 
"RTN","MAGVAD01",33,0)
DELPA(MAGRY,MAGPARAM) ; RPC [MAGVA DELETE PROVAVAILTY]
"RTN","MAGVAD01",34,0)
 N DA,DIK
"RTN","MAGVAD01",35,0)
 ;
"RTN","MAGVAD01",36,0)
 S DIK=$$GETFILGL^MAGVAF01(2006.924)
"RTN","MAGVAD01",37,0)
 S DA=MAGPARAM("PK")
"RTN","MAGVAD01",38,0)
 D ^DIK
"RTN","MAGVAD01",39,0)
 S MAGRY=$$OK^MAGVAF02()
"RTN","MAGVAD01",40,0)
 Q
"RTN","MAGVAD01",41,0)
 ;
"RTN","MAGVAD01",42,0)
 ;*****  Delete a record in RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"RTN","MAGVAD01",43,0)
 ;       
"RTN","MAGVAD01",44,0)
 ; RPC:MAGVA DELETE RETPOL PROV MAP
"RTN","MAGVAD01",45,0)
 ; 
"RTN","MAGVAD01",46,0)
 ; Input Parameters
"RTN","MAGVAD01",47,0)
 ; ================
"RTN","MAGVAD01",48,0)
 ; 
"RTN","MAGVAD01",49,0)
 ;   MAGPARAM("PK")      = IEN in RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"RTN","MAGVAD01",50,0)
 ;    
"RTN","MAGVAD01",51,0)
 ; Return Values
"RTN","MAGVAD01",52,0)
 ; =============
"RTN","MAGVAD01",53,0)
 ;  
"RTN","MAGVAD01",54,0)
 ; if error MAGRY = Failure status ^ Error message ^
"RTN","MAGVAD01",55,0)
 ; if success MAGRY = Success Status
"RTN","MAGVAD01",56,0)
 ; 
"RTN","MAGVAD01",57,0)
DELRPPM(MAGRY,MAGPARAM) ; RPC [MAGVA DELETE RETPOL PROV MAP]
"RTN","MAGVAD01",58,0)
 N DA,DIK
"RTN","MAGVAD01",59,0)
 ;
"RTN","MAGVAD01",60,0)
 S DIK=$$GETFILGL^MAGVAF01(2006.923)
"RTN","MAGVAD01",61,0)
 S DA=MAGPARAM("PK")
"RTN","MAGVAD01",62,0)
 D ^DIK
"RTN","MAGVAD01",63,0)
 S MAGRY=$$OK^MAGVAF02()
"RTN","MAGVAD01",64,0)
 Q 
"RTN","MAGVAD02")
0^49^B7021893
"RTN","MAGVAD02",1,0)
MAGVAD02 ;WOIFO/NST - Delete records in storage files ; 11 Mar 2010 4:39 PM
"RTN","MAGVAD02",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAD02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAD02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAD02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAD02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAD02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAD02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAD02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAD02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAD02",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAD02",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAD02",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAD02",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAD02",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAD02",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAD02",17,0)
 ;;
"RTN","MAGVAD02",18,0)
 Q
"RTN","MAGVAD02",19,0)
 ;
"RTN","MAGVAD02",20,0)
 ;*****  Mark an artifact as deleted in ARTIFACT file (#2006.916)
"RTN","MAGVAD02",21,0)
 ;       
"RTN","MAGVAD02",22,0)
 ; RPC: N/A
"RTN","MAGVAD02",23,0)
 ; 
"RTN","MAGVAD02",24,0)
 ; Input Parameters
"RTN","MAGVAD02",25,0)
 ; ================
"RTN","MAGVAD02",26,0)
 ;   TOKEN = ARTIFACT TOKEN field (#2006.916,01) 
"RTN","MAGVAD02",27,0)
 ;   DELAPP = DELETING APPLICATION field (#2006.916,9) 
"RTN","MAGVAD02",28,0)
 ; Return Values
"RTN","MAGVAD02",29,0)
 ; =============
"RTN","MAGVAD02",30,0)
 ; 
"RTN","MAGVAD02",31,0)
 ; if error MAGRY = Failure status ^ Error message ^
"RTN","MAGVAD02",32,0)
 ; if success MAGRY = Success Status
"RTN","MAGVAD02",33,0)
 ; 
"RTN","MAGVAD02",34,0)
DELAFACT(MAGRY,TOKEN,DELAPP) ; RPC [N/A]
"RTN","MAGVAD02",35,0)
 N IEN,RES,FILE,PFILE,MAGPARAM,ADELETED
"RTN","MAGVAD02",36,0)
 D GETAIENT^MAGVAG02(.RES,TOKEN,"") ; Get Artifact IEN by Token
"RTN","MAGVAD02",37,0)
 I '$$ISOK^MAGVAF02(RES) S MAGRY=RES Q
"RTN","MAGVAD02",38,0)
 S MAGPARAM("PK")=$$GETVAL^MAGVAF02(RES)  ; IEN of the record in ARTIFACT file (#2006.916)
"RTN","MAGVAD02",39,0)
 ;
"RTN","MAGVAD02",40,0)
 S FILE=2006.916  ; ARTIFACT file
"RTN","MAGVAD02",41,0)
 ;
"RTN","MAGVAD02",42,0)
 ; Get deleting application or create a new one
"RTN","MAGVAD02",43,0)
 S PFILE=$$GETFILEP^MAGVAF05(FILE,"DELETING APPLICATION")  ; the file that field points to
"RTN","MAGVAD02",44,0)
 S MAGRY=$$GETIEN^MAGVAF05(PFILE,DELAPP,1)
"RTN","MAGVAD02",45,0)
 I '$$ISOK^MAGVAF02(MAGRY) Q  ; Quit if error. MAGRY is already set
"RTN","MAGVAD02",46,0)
 S MAGPARAM("DELETING APPLICATION")=$$GETVAL^MAGVAF02(MAGRY)  ; Set the internal value
"RTN","MAGVAD02",47,0)
 S MAGPARAM("DELETED DATE/TIME")=$$NOW^XLFDT
"RTN","MAGVAD02",48,0)
 ;
"RTN","MAGVAD02",49,0)
 D UPDRCD^MAGVAF01(.MAGRY,FILE,.MAGPARAM) ; Mark artifact as deleted
"RTN","MAGVAD02",50,0)
 Q
"RTN","MAGVAF01")
0^50^B96471020
"RTN","MAGVAF01",1,0)
MAGVAF01 ;WOIFO/NST/DAC - Utilities for RPC calls ; 28 Feb 2013 9:58 AM
"RTN","MAGVAF01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAF01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAF01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAF01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAF01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAF01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAF01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAF01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAF01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAF01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAF01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAF01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAF01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAF01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF01",17,0)
 ;;
"RTN","MAGVAF01",18,0)
 Q
"RTN","MAGVAF01",19,0)
IDF2FM(IDFDT) ; converts date time in format YYYYMMDD.HHMMSS to FileMan format CYYMMDD.HHMMSS
"RTN","MAGVAF01",20,0)
 I IDFDT="" Q ""
"RTN","MAGVAF01",21,0)
 N MAGTIME
"RTN","MAGVAF01",22,0)
 S MAGTIME=$P(IDFDT,".",2)
"RTN","MAGVAF01",23,0)
 Q (IDFDT\1-17000000)_"."_MAGTIME
"RTN","MAGVAF01",24,0)
 ;
"RTN","MAGVAF01",25,0)
FM2IDF(FMDT) ; converts date time in FileMan format CYYMMDD.HHMMSS to YYYYMMDD.HHMMSS
"RTN","MAGVAF01",26,0)
 I FMDT="" Q ""
"RTN","MAGVAF01",27,0)
 N MAGTIME
"RTN","MAGVAF01",28,0)
 S MAGTIME=$P(FMDT,".",2)
"RTN","MAGVAF01",29,0)
 Q (FMDT\1+17000000)_"."_MAGTIME
"RTN","MAGVAF01",30,0)
 ;
"RTN","MAGVAF01",31,0)
 ;
"RTN","MAGVAF01",32,0)
 ; Input parameters
"RTN","MAGVAF01",33,0)
 ; ================
"RTN","MAGVAF01",34,0)
 ;   FILE = FileMan file number (e.g. 2006.917)
"RTN","MAGVAF01",35,0)
GETFILNM(FILE) ; Returns file name
"RTN","MAGVAF01",36,0)
 Q $$GET1^DID(FILE,"","","NAME")
"RTN","MAGVAF01",37,0)
 ;
"RTN","MAGVAF01",38,0)
 ; Input parameters
"RTN","MAGVAF01",39,0)
 ; ================
"RTN","MAGVAF01",40,0)
 ;  FILE  - FileMan file
"RTN","MAGVAF01",41,0)
GETFILGL(FILE) ; Get Global root of the file
"RTN","MAGVAF01",42,0)
 Q $$ROOT^DILFD(FILE)
"RTN","MAGVAF01",43,0)
 ; 
"RTN","MAGVAF01",44,0)
 ; Input parameters
"RTN","MAGVAF01",45,0)
 ; ================
"RTN","MAGVAF01",46,0)
 ;  FILE  - FileMan file
"RTN","MAGVAF01",47,0)
 ;  FNAME - Field name
"RTN","MAGVAF01",48,0)
GETFLDID(FILE,FNAME) ; Returns a field number
"RTN","MAGVAF01",49,0)
 Q $$FLDNUM^DILFD(FILE,FNAME)
"RTN","MAGVAF01",50,0)
 ;
"RTN","MAGVAF01",51,0)
 ; Input parameters
"RTN","MAGVAF01",52,0)
 ; ================
"RTN","MAGVAF01",53,0)
 ;  FILE  - FileMan file
"RTN","MAGVAF01",54,0)
 ;  FLDID - Field Number
"RTN","MAGVAF01",55,0)
GETFLDNM(FILE,FLDID) ; Returns a field name
"RTN","MAGVAF01",56,0)
 Q $$GET1^DID(FILE,FLDID,"","LABEL")
"RTN","MAGVAF01",57,0)
 ;
"RTN","MAGVAF01",58,0)
 ; Input parameters
"RTN","MAGVAF01",59,0)
 ; ================
"RTN","MAGVAF01",60,0)
 ;  FILE  - FileMan file
"RTN","MAGVAF01",61,0)
 ;  FLDID - Field Number
"RTN","MAGVAF01",62,0)
ISFLDDT(FILE,FLDID) ; Returns true(1) or false(0) if a field is from DATE/TIME type 
"RTN","MAGVAF01",63,0)
 Q $$GET1^DID(FILE,FLDID,"","TYPE")="DATE/TIME"
"RTN","MAGVAF01",64,0)
 ;
"RTN","MAGVAF01",65,0)
 ; Input parameters
"RTN","MAGVAF01",66,0)
 ; ================
"RTN","MAGVAF01",67,0)
 ;  FILE  - FileMan file
"RTN","MAGVAF01",68,0)
 ;  FLDID - Field Number
"RTN","MAGVAF01",69,0)
 ;  
"RTN","MAGVAF01",70,0)
 ;  Return Values
"RTN","MAGVAF01",71,0)
 ;  =============
"RTN","MAGVAF01",72,0)
 ; TYPEDEF = Type of Word-Processing field
"RTN","MAGVAF01",73,0)
ISFLDWP(TYPEDEF,FILE,FLDID) ; Returns true(1) or false(0) if a field is from Word-Processing type 
"RTN","MAGVAF01",74,0)
 N WPFILE
"RTN","MAGVAF01",75,0)
 S TYPEDEF=""
"RTN","MAGVAF01",76,0)
 Q:$$GET1^DID(FILE,FLDID,"","TYPE")'="WORD-PROCESSING" 0
"RTN","MAGVAF01",77,0)
 S WPFILE=$$GET1^DID(FILE,FLDID,"","SPECIFIER")
"RTN","MAGVAF01",78,0)
 S TYPEDEF=$$GET1^DID(WPFILE,.01,"","SPECIFIER")
"RTN","MAGVAF01",79,0)
 Q 1
"RTN","MAGVAF01",80,0)
 ;
"RTN","MAGVAF01",81,0)
 ;
"RTN","MAGVAF01",82,0)
 ; Input parameters
"RTN","MAGVAF01",83,0)
 ; ================
"RTN","MAGVAF01",84,0)
 ;  FILE  - FileMan file
"RTN","MAGVAF01",85,0)
 ;  FLDID - Field Number
"RTN","MAGVAF01",86,0)
 ;  
"RTN","MAGVAF01",87,0)
 ;  Return Values
"RTN","MAGVAF01",88,0)
 ;  =============
"RTN","MAGVAF01",89,0)
 ; TYPEDEF = Type of field
"RTN","MAGVAF01",90,0)
ISFLDSUB(TYPEDEF,FILE,FLDID) ; Returns true(1) or false(0) if a field is from Word-Processing type or Multiple
"RTN","MAGVAF01",91,0)
 N FILESUB
"RTN","MAGVAF01",92,0)
 S TYPEDEF=""
"RTN","MAGVAF01",93,0)
 Q:'$$GET1^DID(FILE,FLDID,"","MULTIPLE-VALUED") 0
"RTN","MAGVAF01",94,0)
 S FILESUB=$$GET1^DID(FILE,FLDID,"","SPECIFIER")
"RTN","MAGVAF01",95,0)
 S TYPEDEF=$$GET1^DID(FILESUB,.01,"","SPECIFIER")
"RTN","MAGVAF01",96,0)
 Q 1
"RTN","MAGVAF01",97,0)
 ;
"RTN","MAGVAF01",98,0)
GETFLDS(MAGRY,MAGRYW,FILE,FLAGS) ; Returns array with all fields in a file
"RTN","MAGVAF01",99,0)
 ; 
"RTN","MAGVAF01",100,0)
 ; Input Parameters
"RTN","MAGVAF01",101,0)
 ; ================
"RTN","MAGVAF01",102,0)
 ; FILE = FileMan file number
"RTN","MAGVAF01",103,0)
 ; FLAGS = I - add I(internal) to the field numbers in Result e.g .01I;2I;3I
"RTN","MAGVAF01",104,0)
 ; 
"RTN","MAGVAF01",105,0)
 ; Return Values
"RTN","MAGVAF01",106,0)
 ; =============
"RTN","MAGVAF01",107,0)
 ; 
"RTN","MAGVAF01",108,0)
 ; Result=n1;n2;n3 (e.g. .01;2;3) - no multiple or word-processing fields
"RTN","MAGVAF01",109,0)
 ; 
"RTN","MAGVAF01",110,0)
 ; MAGRY(n)=nth field name
"RTN","MAGVAF01",111,0)
 ; MAGRY(n,"TYPE")=type of the field (e.g. RP2006.916, 2006.9183, RD, RN, etc.)
"RTN","MAGVAF01",112,0)
 ; 
"RTN","MAGVAF01",113,0)
 ; MAGRYW(n)=nth Word-Processing field name
"RTN","MAGVAF01",114,0)
 ; MAGRY(n,"TYPE")=type of the field (e.g. RP2006.916, 2006.9183, RD, RN, etc.)
"RTN","MAGVAF01",115,0)
 ;
"RTN","MAGVAF01",116,0)
 N I,FLDID,FLDS,DEL
"RTN","MAGVAF01",117,0)
 N WPTYPE,IVAL
"RTN","MAGVAF01",118,0)
 K MAGRY,MAGRYW
"RTN","MAGVAF01",119,0)
 S IVAL=$S($G(FLAGS)["I":"I",1:"")
"RTN","MAGVAF01",120,0)
 S I=""
"RTN","MAGVAF01",121,0)
 S FLDS=""
"RTN","MAGVAF01",122,0)
 F  S I=$O(^DD(FILE,"B",I)) Q:I=""  D       ; IA #5551
"RTN","MAGVAF01",123,0)
 . S FLDID=$O(^DD(FILE,"B",I,""))
"RTN","MAGVAF01",124,0)
 . I $$ISFLDSUB^MAGVAF01(.WPTYPE,FILE,FLDID) D
"RTN","MAGVAF01",125,0)
 . . S MAGRYW(FLDID)=I
"RTN","MAGVAF01",126,0)
 . . S MAGRYW(FLDID,"TYPE")=WPTYPE
"RTN","MAGVAF01",127,0)
 . . Q
"RTN","MAGVAF01",128,0)
 . E  D
"RTN","MAGVAF01",129,0)
 . . S MAGRY(FLDID)=I
"RTN","MAGVAF01",130,0)
 . . S MAGRY(FLDID,"TYPE")=$$GET1^DID(FILE,FLDID,"","SPECIFIER")
"RTN","MAGVAF01",131,0)
 . . Q
"RTN","MAGVAF01",132,0)
 . Q
"RTN","MAGVAF01",133,0)
 S I="",DEL=""
"RTN","MAGVAF01",134,0)
 F  S I=$O(MAGRY(I)) Q:I=""  D
"RTN","MAGVAF01",135,0)
 . ; Skip multiple and word-processing fields GETS^DIQ cannot handle Word-Processing field
"RTN","MAGVAF01",136,0)
 . I $$ISFLDSUB^MAGVAF01(.WPTYPE,FILE,I) Q
"RTN","MAGVAF01",137,0)
 . S FLDS=FLDS_DEL_I_IVAL
"RTN","MAGVAF01",138,0)
 . S DEL=";"
"RTN","MAGVAF01",139,0)
 . Q
"RTN","MAGVAF01",140,0)
 Q FLDS
"RTN","MAGVAF01",141,0)
 ;
"RTN","MAGVAF01",142,0)
GETSUBFL(FILE,FIELD) ; Returns sub-file of a multiple field
"RTN","MAGVAF01",143,0)
 Q $$GET1^DID(FILE,FIELD,"","SPECIFIER")
"RTN","MAGVAF01",144,0)
 ;
"RTN","MAGVAF01",145,0)
VALIDFLD(FILE,FIELD,VALUE,MESSAGE) ; call to validate value for field in a FM file.
"RTN","MAGVAF01",146,0)
 ; Function is boolean.  Returns:
"RTN","MAGVAF01",147,0)
 ;        0   -  Invalid 
"RTN","MAGVAF01",148,0)
 ;        1   -  Valid 
"RTN","MAGVAF01",149,0)
 ; FILE  : File Number
"RTN","MAGVAF01",150,0)
 ; FIELD  : Field Number
"RTN","MAGVAF01",151,0)
 ; VALUE  : (sent by reference) data value of field
"RTN","MAGVAF01",152,0)
 ; MESSAGE (sent by reference) Result message
"RTN","MAGVAF01",153,0)
 ; 
"RTN","MAGVAF01",154,0)
 N MAGR,MAGMSG,MAGSP,MAGRESA,MAGPT
"RTN","MAGVAF01",155,0)
 ; Get the Field number
"RTN","MAGVAF01",156,0)
 I +FIELD'=FIELD S FIELD=$$GETFLDID^MAGVAF01(FILE,FIELD)
"RTN","MAGVAF01",157,0)
 ;if a BAD field number
"RTN","MAGVAF01",158,0)
 I '$$VFIELD^DILFD(FILE,FIELD) D  Q 0
"RTN","MAGVAF01",159,0)
 . S MESSAGE="The field number: "_FIELD_", in File: "_FILE_", is invalid."
"RTN","MAGVAF01",160,0)
 D FIELD^DID(FILE,FIELD,"","SPECIFIER","MAGSP")
"RTN","MAGVAF01",161,0)
 ; If it is a pointer field 
"RTN","MAGVAF01",162,0)
 ; If an  integer - We assume it is a pointer and validate that and Quit.
"RTN","MAGVAF01",163,0)
 ; If not integer - We assume it is external value, proceed to let CHK do validate
"RTN","MAGVAF01",164,0)
 I (MAGSP("SPECIFIER")["P"),(+VALUE=VALUE) D  Q MAGPT
"RTN","MAGVAF01",165,0)
 . I $$EXTERNAL^DILFD(FILE,FIELD,"",VALUE)'="" S MAGPT=1 Q
"RTN","MAGVAF01",166,0)
 . S MAGPT=0,MESSAGE="The value: "_VALUE_" for field: "_FIELD_" in File: "_FILE_" is an invalid Pointer."
"RTN","MAGVAF01",167,0)
 . Q
"RTN","MAGVAF01",168,0)
 ;
"RTN","MAGVAF01",169,0)
 D CHK^DIE(FILE,FIELD,"",VALUE,.MAGR,"MAGMSG")
"RTN","MAGVAF01",170,0)
 ; If success, Quit. We changed External to Internal. Internal is in MAGR
"RTN","MAGVAF01",171,0)
 I MAGR'="^" Q 1
"RTN","MAGVAF01",172,0)
 ;  If not success Get the error text and Quit 0
"RTN","MAGVAF01",173,0)
 D MSG^DIALOG("A",.MAGRESA,245,5,"MAGMSG")
"RTN","MAGVAF01",174,0)
 S MESSAGE=MAGRESA(1)
"RTN","MAGVAF01",175,0)
 Q 0
"RTN","MAGVAF01",176,0)
 ;
"RTN","MAGVAF01",177,0)
 ;+++++ Check if all required  fields are sent
"RTN","MAGVAF01",178,0)
 ; 
"RTN","MAGVAF01",179,0)
 ; 
"RTN","MAGVAF01",180,0)
 ; Input parameters
"RTN","MAGVAF01",181,0)
 ; ================
"RTN","MAGVAF01",182,0)
 ; 
"RTN","MAGVAF01",183,0)
 ;  FILE    = file number
"RTN","MAGVAF01",184,0)
 ;  FLDSVAL = array with fields values. Index of the array is fields names
"RTN","MAGVAF01",185,0)
 ;  FLDSARR = array with fields definition. Index is field's numbers
"RTN","MAGVAF01",186,0)
 ;  FLGWP   = this is Word-processing fields
"RTN","MAGVAF01",187,0)
 ;  
"RTN","MAGVAF01",188,0)
 ;  Result Values
"RTN","MAGVAF01",189,0)
 ;  =============
"RTN","MAGVAF01",190,0)
 ;  
"RTN","MAGVAF01",191,0)
 ; if failure MAGRY = Failure status ^ Error message
"RTN","MAGVAF01",192,0)
 ; if success MAGRY = Success status 
"RTN","MAGVAF01",193,0)
 ;  
"RTN","MAGVAF01",194,0)
REQFLDS(MAGRY,FILE,FLDSVAL,FLDSARR,FLGWP) ; 
"RTN","MAGVAF01",195,0)
 N FLDNAME,MSG,ERR
"RTN","MAGVAF01",196,0)
 N TFLDSARR
"RTN","MAGVAF01",197,0)
 N WP
"RTN","MAGVAF01",198,0)
 M TFLDSARR=FLDSARR
"RTN","MAGVAF01",199,0)
 S FLDNAME=""
"RTN","MAGVAF01",200,0)
 S ERR=0
"RTN","MAGVAF01",201,0)
 F  S FLDNAME=$O(FLDSVAL(FLDNAME)) Q:FLDNAME=""  D  Q:ERR
"RTN","MAGVAF01",202,0)
 . I 'FLGWP Q:FLDSVAL(FLDNAME)=""  ; value is empty, so get next one
"RTN","MAGVAF01",203,0)
 . I FLGWP M WP=FLDSVAL(FLDNAME) Q:$$WPEMPTY^MAGVAF01(.WP)  ; quit if WP field is blank
"RTN","MAGVAF01",204,0)
 . S FIELD=$$GETFLDID^MAGVAF01(FILE,FLDNAME)
"RTN","MAGVAF01",205,0)
 . I FIELD="" D  Q
"RTN","MAGVAF01",206,0)
 . . S MSG="Field """_FLDNAME_""" is not found in file #"_FILE
"RTN","MAGVAF01",207,0)
 . . S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_MSG
"RTN","MAGVAF01",208,0)
 . . S ERR=1
"RTN","MAGVAF01",209,0)
 . . Q
"RTN","MAGVAF01",210,0)
 . K TFLDSARR(FIELD)  ; delete the field from the list; will use it in the check for check required fields
"RTN","MAGVAF01",211,0)
 . Q
"RTN","MAGVAF01",212,0)
 I ERR Q
"RTN","MAGVAF01",213,0)
 ; Check if we set all required fields
"RTN","MAGVAF01",214,0)
 S FIELD=""
"RTN","MAGVAF01",215,0)
 F  S FIELD=$O(TFLDSARR(FIELD)) Q:FIELD=""  D  Q:ERR
"RTN","MAGVAF01",216,0)
 . I TFLDSARR(FIELD,"TYPE")["R" D  Q
"RTN","MAGVAF01",217,0)
 . . S MSG="Field """_TFLDSARR(FIELD)_""" is required in file #"_FILE
"RTN","MAGVAF01",218,0)
 . . S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_MSG
"RTN","MAGVAF01",219,0)
 . . S ERR=1
"RTN","MAGVAF01",220,0)
 . . Q
"RTN","MAGVAF01",221,0)
 . Q
"RTN","MAGVAF01",222,0)
 Q:ERR
"RTN","MAGVAF01",223,0)
 ;
"RTN","MAGVAF01",224,0)
 S MAGRY=$$OK^MAGVAF02()
"RTN","MAGVAF01",225,0)
 Q
"RTN","MAGVAF01",226,0)
 ;
"RTN","MAGVAF01",227,0)
 ; Return WP field value as a string
"RTN","MAGVAF01",228,0)
 ; WP = Word-Processing field values
"RTN","MAGVAF01",229,0)
 ; e.g. WP(1)=Line 1
"RTN","MAGVAF01",230,0)
 ;      WP(2)=Line 2
"RTN","MAGVAF01",231,0)
 ;      
"RTN","MAGVAF01",232,0)
STRWP(WP) ; Return WP field value as a string
"RTN","MAGVAF01",233,0)
 N I,RESULT
"RTN","MAGVAF01",234,0)
 S I=""
"RTN","MAGVAF01",235,0)
 S RESULT=""
"RTN","MAGVAF01",236,0)
 F  S I=$O(WP(I)) Q:I=""  D 
"RTN","MAGVAF01",237,0)
 . S RESULT=RESULT_WP(I)
"RTN","MAGVAF01",238,0)
 . Q
"RTN","MAGVAF01",239,0)
 Q RESULT
"RTN","MAGVAF01",240,0)
 ;
"RTN","MAGVAF01",241,0)
 ; WP field value is blank
"RTN","MAGVAF01",242,0)
 ; Return 1 - WP field value is blank
"RTN","MAGVAF01",243,0)
 ;        0
"RTN","MAGVAF01",244,0)
 ; WP = Word-Processing field values
"RTN","MAGVAF01",245,0)
 ; e.g. WP(1)=Line 1
"RTN","MAGVAF01",246,0)
 ;      WP(2)=Line 2
"RTN","MAGVAF01",247,0)
 ;      
"RTN","MAGVAF01",248,0)
WPEMPTY(WP) ; Return 1 when WP field value is blank
"RTN","MAGVAF01",249,0)
 N I,RESULT
"RTN","MAGVAF01",250,0)
 S I=""
"RTN","MAGVAF01",251,0)
 S RESULT=1
"RTN","MAGVAF01",252,0)
 F  S I=$O(WP(I)) Q:I=""!'RESULT  D 
"RTN","MAGVAF01",253,0)
 . S RESULT=$L(WP(I))=0
"RTN","MAGVAF01",254,0)
 . Q
"RTN","MAGVAF01",255,0)
 Q RESULT
"RTN","MAGVAF01",256,0)
 ;
"RTN","MAGVAF01",257,0)
 ; Add a new record 
"RTN","MAGVAF01",258,0)
 ; 
"RTN","MAGVAF01",259,0)
 ; Input parameters
"RTN","MAGVAF01",260,0)
 ; ================
"RTN","MAGVAF01",261,0)
 ; 
"RTN","MAGVAF01",262,0)
 ; FILE - file number
"RTN","MAGVAF01",263,0)
 ; FLDSVAL - array with index field name and value
"RTN","MAGVAF01",264,0)
 ; FLDSVALW - array with first index WP field name and the second values 
"RTN","MAGVAF01",265,0)
 ;  e.g FLDSVALW("URL",1)="Line1
"RTN","MAGVAF01",266,0)
 ;      FLDSVALW("URL",2)="Line 2"
"RTN","MAGVAF01",267,0)
 ; 
"RTN","MAGVAF01",268,0)
 ; Result values
"RTN","MAGVAF01",269,0)
 ; ===============
"RTN","MAGVAF01",270,0)
 ; if failed MAGRY = Failure status ^ Error message
"RTN","MAGVAF01",271,0)
 ; if success MAGRY = Success status ^  ^ IEN
"RTN","MAGVAF01",272,0)
 ; 
"RTN","MAGVAF01",273,0)
 ; 
"RTN","MAGVAF01",274,0)
ADDRCD(MAGRY,FILE,FLDSVAL,FLDSVALW) ; Add a new record to a file
"RTN","MAGVAF01",275,0)
 N IENS,FLDNAME,FIELD,WPFLD
"RTN","MAGVAF01",276,0)
 N MAGDA,MAGNFDA,MAGNIEN,MAGNXE
"RTN","MAGVAF01",277,0)
 N MESSAGE,ERR
"RTN","MAGVAF01",278,0)
 N X,FLDSARR,FLDSARRW
"RTN","MAGVAF01",279,0)
 ;
"RTN","MAGVAF01",280,0)
 S X=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,FILE,"")  ; Get all fields
"RTN","MAGVAF01",281,0)
 ; Check if we set all required fields
"RTN","MAGVAF01",282,0)
 D REQFLDS^MAGVAF01(.MAGRY,FILE,.FLDSVAL,.FLDSARR,0) ; 
"RTN","MAGVAF01",283,0)
 I '$$ISOK^MAGVAF02(MAGRY) Q
"RTN","MAGVAF01",284,0)
 ;
"RTN","MAGVAF01",285,0)
 ; Check for WP required fields
"RTN","MAGVAF01",286,0)
 D REQFLDS^MAGVAF01(.MAGRY,FILE,.FLDSVALW,.FLDSARRW,1) ; 
"RTN","MAGVAF01",287,0)
 I '$$ISOK^MAGVAF02(MAGRY) Q
"RTN","MAGVAF01",288,0)
 ;
"RTN","MAGVAF01",289,0)
 ; Set FDA array and check for valid values
"RTN","MAGVAF01",290,0)
 S IENS="+1,"
"RTN","MAGVAF01",291,0)
 S FLDNAME=""
"RTN","MAGVAF01",292,0)
 S ERR=0
"RTN","MAGVAF01",293,0)
 F  S FLDNAME=$O(FLDSVAL(FLDNAME)) Q:FLDNAME=""  D  Q:ERR
"RTN","MAGVAF01",294,0)
 . Q:FLDSVAL(FLDNAME)=""
"RTN","MAGVAF01",295,0)
 . S FIELD=$$GETFLDID^MAGVAF01(FILE,FLDNAME)
"RTN","MAGVAF01",296,0)
 . K FLDSARR(FIELD)  ; delete the field from the list; will use it in the check for check required fields
"RTN","MAGVAF01",297,0)
 . S MAGNFDA(FILE,IENS,FIELD)=FLDSVAL(FLDNAME)
"RTN","MAGVAF01",298,0)
 . S ERR='$$VALIDFLD^MAGVAF01(FILE,FIELD,FLDSVAL(FLDNAME),.MESSAGE)
"RTN","MAGVAF01",299,0)
 . Q
"RTN","MAGVAF01",300,0)
 I ERR S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_MESSAGE Q
"RTN","MAGVAF01",301,0)
 ;    
"RTN","MAGVAF01",302,0)
 ; Add the regular field first
"RTN","MAGVAF01",303,0)
 D UPDATE^DIE("S","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVAF01",304,0)
 ;
"RTN","MAGVAF01",305,0)
 I $D(MAGNXE("DIERR","E")) S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error adding a new record" Q
"RTN","MAGVAF01",306,0)
 S MAGDA=MAGNIEN(1)  ; IEN of the new record
"RTN","MAGVAF01",307,0)
 ;
"RTN","MAGVAF01",308,0)
 ; Now store the Word-Processing fields
"RTN","MAGVAF01",309,0)
 S IENS=MAGDA_","
"RTN","MAGVAF01",310,0)
 S FLDNAME=""
"RTN","MAGVAF01",311,0)
 F  S FLDNAME=$O(FLDSVALW(FLDNAME)) Q:FLDNAME=""  D  Q:ERR
"RTN","MAGVAF01",312,0)
 . K MAGNXE
"RTN","MAGVAF01",313,0)
 . S WPFLD=$$GETFLDID^MAGVAF01(FILE,FLDNAME) ; FileMan number of WP field
"RTN","MAGVAF01",314,0)
 . D WP^DIE(FILE,IENS,WPFLD,"A","FLDSVALW(FLDNAME)","MAGNXE")
"RTN","MAGVAF01",315,0)
 . I $D(MAGNXE("DIERR","E")) D  Q  ; clean up newly created record
"RTN","MAGVAF01",316,0)
 . . S ERR=1
"RTN","MAGVAF01",317,0)
 . . N DA,DIK
"RTN","MAGVAF01",318,0)
 . . S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error adding new """_FLDNAME_""" data."
"RTN","MAGVAF01",319,0)
 . . ; clean up data
"RTN","MAGVAF01",320,0)
 . . S DIK=$$GETFILGL^MAGVAF01(FILE)
"RTN","MAGVAF01",321,0)
 . . S DA=MAGDA
"RTN","MAGVAF01",322,0)
 . . D ^DIK
"RTN","MAGVAF01",323,0)
 . . Q
"RTN","MAGVAF01",324,0)
 . Q
"RTN","MAGVAF01",325,0)
 Q:ERR  ; MAGRY is already set
"RTN","MAGVAF01",326,0)
 ;
"RTN","MAGVAF01",327,0)
 S MAGRY=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_MAGDA
"RTN","MAGVAF01",328,0)
 Q
"RTN","MAGVAF01",329,0)
 ;
"RTN","MAGVAF01",330,0)
 ; Update a record 
"RTN","MAGVAF01",331,0)
 ; 
"RTN","MAGVAF01",332,0)
 ; Input parameters
"RTN","MAGVAF01",333,0)
 ; ================
"RTN","MAGVAF01",334,0)
 ; 
"RTN","MAGVAF01",335,0)
 ; FILE - file number
"RTN","MAGVAF01",336,0)
 ; FLDSVAL - FDA array
"RTN","MAGVAF01",337,0)
 ; 
"RTN","MAGVAF01",338,0)
 ; Output parameter
"RTN","MAGVAF01",339,0)
 ; ===============
"RTN","MAGVAF01",340,0)
 ; MAGRY
"RTN","MAGVAF01",341,0)
 ;
"RTN","MAGVAF01",342,0)
 ; if failed MAGRY = Failure status ^ Error message
"RTN","MAGVAF01",343,0)
 ; if success MAGRY = Success status 
"RTN","MAGVAF01",344,0)
 ; 
"RTN","MAGVAF01",345,0)
UPDRCD(MAGRY,FILE,FLDSVAL) ; Update a record to a file
"RTN","MAGVAF01",346,0)
 N IENS,FLDNAME,FIELD
"RTN","MAGVAF01",347,0)
 N MAGNFDA,MAGNIEN,MAGNXE
"RTN","MAGVAF01",348,0)
 N MESSAGE,ERR
"RTN","MAGVAF01",349,0)
 I '$G(FLDSVAL("PK")) S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Missing Primary Key (IEN)" Q
"RTN","MAGVAF01",350,0)
 S IENS=FLDSVAL("PK")_","
"RTN","MAGVAF01",351,0)
 S FLDNAME=""
"RTN","MAGVAF01",352,0)
 S ERR=0
"RTN","MAGVAF01",353,0)
 F  S FLDNAME=$O(FLDSVAL(FLDNAME)) Q:FLDNAME=""  D  Q:ERR
"RTN","MAGVAF01",354,0)
 . Q:FLDNAME="PK"   ; skip primary key record (IEN)
"RTN","MAGVAF01",355,0)
 . S FIELD=$$GETFLDID^MAGVAF01(FILE,FLDNAME)
"RTN","MAGVAF01",356,0)
 . S MAGNFDA(FILE,IENS,FIELD)=FLDSVAL(FLDNAME)
"RTN","MAGVAF01",357,0)
 . S ERR='$$VALIDFLD^MAGVAF01(FILE,FIELD,FLDSVAL(FLDNAME),.MESSAGE)
"RTN","MAGVAF01",358,0)
 . Q
"RTN","MAGVAF01",359,0)
 I ERR S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_MESSAGE Q
"RTN","MAGVAF01",360,0)
 ;
"RTN","MAGVAF01",361,0)
 D UPDATE^DIE("S","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVAF01",362,0)
 ;
"RTN","MAGVAF01",363,0)
 I $D(MAGNXE("DIERR","E")) S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error updating a record in file #"_FILE
"RTN","MAGVAF01",364,0)
 E  S MAGRY=$$OK^MAGVAF02()
"RTN","MAGVAF01",365,0)
 Q
"RTN","MAGVAF02")
0^51^B5352804
"RTN","MAGVAF02",1,0)
MAGVAF02 ;WOIFO/NST - Utilities for RPC calls ; 13 Feb 2012 4:16 PM
"RTN","MAGVAF02",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAF02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAF02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAF02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAF02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAF02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAF02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAF02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAF02",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAF02",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAF02",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAF02",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAF02",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAF02",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF02",17,0)
 ;;
"RTN","MAGVAF02",18,0)
 Q
"RTN","MAGVAF02",19,0)
 ;
"RTN","MAGVAF02",20,0)
OK() Q 0   ; Success status
"RTN","MAGVAF02",21,0)
 ;
"RTN","MAGVAF02",22,0)
FAILED() Q -1   ; Failure status
"RTN","MAGVAF02",23,0)
 ;
"RTN","MAGVAF02",24,0)
RESDEL() Q "^"  ; Result delimiter
"RTN","MAGVAF02",25,0)
 ;
"RTN","MAGVAF02",26,0)
RESDATA() Q 3  ; Returns the piece number where the result data value is stored in MAGRY
"RTN","MAGVAF02",27,0)
 ;
"RTN","MAGVAF02",28,0)
ISOK(MAGRY) ; Returns 0 (failed) or 1 (success): Checks if first piece of MAGRY is success
"RTN","MAGVAF02",29,0)
 Q +MAGRY=$$OK^MAGVAF02()
"RTN","MAGVAF02",30,0)
 ;
"RTN","MAGVAF02",31,0)
GETVAL(MAGRY) ; Returns data value in MAGRY
"RTN","MAGVAF02",32,0)
 Q $P(MAGRY,$$RESDEL^MAGVAF02(),$$RESDATA^MAGVAF02())
"RTN","MAGVAF02",33,0)
 ;
"RTN","MAGVAF02",34,0)
SETVAL(MAGRY,VAL) ; Set VAL in MAGRY data piece
"RTN","MAGVAF02",35,0)
 S $P(MAGRY,$$RESDEL^MAGVAF02(),$$RESDATA^MAGVAF02())=VAL
"RTN","MAGVAF02",36,0)
 Q
"RTN","MAGVAF02",37,0)
 ;
"RTN","MAGVAF02",38,0)
XML1LINE() ; Returns the first line in XML formatted RPCs output
"RTN","MAGVAF02",39,0)
 Q "<?xml version=""1.0"" encoding=""utf-8""?>"
"RTN","MAGVAF02",40,0)
 ;
"RTN","MAGVAF02",41,0)
SETOKVAL(MAGRY,VAL) ; Sets data value in MAGRY and set OK status
"RTN","MAGVAF02",42,0)
 S MAGRY=$$OK^MAGVAF02()
"RTN","MAGVAF02",43,0)
 S $P(MAGRY,$$RESDEL^MAGVAF02(),$$RESDATA^MAGVAF02())=VAL
"RTN","MAGVAF02",44,0)
 Q
"RTN","MAGVAF03")
0^52^B133628281
"RTN","MAGVAF03",1,0)
MAGVAF03 ;WOIFO/NST/BT - Utilities for RPC calls ; 15 May 2012 9:15 AM
"RTN","MAGVAF03",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAF03",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAF03",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF03",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAF03",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAF03",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAF03",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAF03",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAF03",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAF03",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAF03",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAF03",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAF03",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAF03",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAF03",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF03",17,0)
 ;;
"RTN","MAGVAF03",18,0)
 Q
"RTN","MAGVAF03",19,0)
 ;
"RTN","MAGVAF03",20,0)
 ;*****  Returns all records for a file in list format
"RTN","MAGVAF03",21,0)
 ; Input Parameters
"RTN","MAGVAF03",22,0)
 ; ================
"RTN","MAGVAF03",23,0)
 ;  
"RTN","MAGVAF03",24,0)
 ;   FILE - FileMan file number ( example 2006.917)
"RTN","MAGVAF03",25,0)
 ;   IENS - (Optional) Identify which records in a subfile to list. (example IENS = ",67,"
"RTN","MAGVAF03",26,0)
 ; 
"RTN","MAGVAF03",27,0)
 ; Return values
"RTN","MAGVAF03",28,0)
 ; =============
"RTN","MAGVAF03",29,0)
 ; 
"RTN","MAGVAF03",30,0)
 ; if error found during execution
"RTN","MAGVAF03",31,0)
 ;   MAGRY(0) = Failure status ^ Error getting the list
"RTN","MAGVAF03",32,0)
 ; if success
"RTN","MAGVAF03",33,0)
 ;   MAGRY(0)    = "Success status ^^#CNT" - where #CNT is a number of records returned
"RTN","MAGVAF03",34,0)
 ;   MAGRY(1)    = "^" delimited string with all field names in FILE
"RTN","MAGVAF03",35,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVAF03",36,0)
 ;
"RTN","MAGVAF03",37,0)
GALLLST(MAGRY,FILE,IENS) ;
"RTN","MAGVAF03",38,0)
 N OUT,ERR,MAGRESA
"RTN","MAGVAF03",39,0)
 N J,I,CNT,X,FIELDS,FLDSARR,FLDSARRW
"RTN","MAGVAF03",40,0)
 N RESDEL
"RTN","MAGVAF03",41,0)
 N IRECCNT ;Record count for internal values
"RTN","MAGVAF03",42,0)
 N ERECCNT ;Record count for external values
"RTN","MAGVAF03",43,0)
 K MAGRY
"RTN","MAGVAF03",44,0)
 S RESDEL=$$RESDEL^MAGVAF02()  ; Result delimiter
"RTN","MAGVAF03",45,0)
 S FIELDS=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,FILE,"")
"RTN","MAGVAF03",46,0)
 ;
"RTN","MAGVAF03",47,0)
 ; Retrieve all external values to check for valid pointer or referential integrity problems
"RTN","MAGVAF03",48,0)
 D LIST^DIC(FILE,IENS,"@;"_FIELDS,"","","","","","","","OUT","ERR")
"RTN","MAGVAF03",49,0)
 I $D(ERR("DIERR")) D  Q  ; Error getting the list with external values
"RTN","MAGVAF03",50,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAF03",51,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting the list: "_MAGRESA(1)
"RTN","MAGVAF03",52,0)
 . Q
"RTN","MAGVAF03",53,0)
 S ERECCNT=$P($G(OUT("DILIST","0")),"^",1)
"RTN","MAGVAF03",54,0)
 ;
"RTN","MAGVAF03",55,0)
 ; Retrieve all Internal values to return to the caller
"RTN","MAGVAF03",56,0)
 K OUT,ERR
"RTN","MAGVAF03",57,0)
 D LIST^DIC(FILE,IENS,"@;"_FIELDS,"I","","","","","","","OUT","ERR")
"RTN","MAGVAF03",58,0)
 I $D(ERR("DIERR")) D  Q  ; Error getting the list with internal values
"RTN","MAGVAF03",59,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAF03",60,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting the list: "_MAGRESA(1)
"RTN","MAGVAF03",61,0)
 . Q
"RTN","MAGVAF03",62,0)
 S IRECCNT=$P($G(OUT("DILIST","0")),"^",1)
"RTN","MAGVAF03",63,0)
 ;
"RTN","MAGVAF03",64,0)
 I IRECCNT'=ERECCNT D  Q
"RTN","MAGVAF03",65,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting the list: File #"_FILE_" has cross reference problem" Q
"RTN","MAGVAF03",66,0)
 ;
"RTN","MAGVAF03",67,0)
 S CNT=1
"RTN","MAGVAF03",68,0)
 S I=""
"RTN","MAGVAF03",69,0)
 F  S I=$O(OUT("DILIST","ID",I)) Q:I=""  D
"RTN","MAGVAF03",70,0)
 . S CNT=CNT+1
"RTN","MAGVAF03",71,0)
 . S $P(MAGRY(CNT),"^",1)=OUT("DILIST",2,I)
"RTN","MAGVAF03",72,0)
 . F J=1:1:$L(FIELDS,";") D
"RTN","MAGVAF03",73,0)
 . . S X=OUT("DILIST","ID",I,$P(FIELDS,";",J))
"RTN","MAGVAF03",74,0)
 . . I $$ISFLDDT^MAGVAF01(FILE,$P(FIELDS,";",J)) S X=$$FM2IDF^MAGVAF01(X)  ; the field is Date type - convert to IDF format
"RTN","MAGVAF03",75,0)
 . . S $P(MAGRY(CNT),RESDEL,J+1)=X
"RTN","MAGVAF03",76,0)
 . . Q
"RTN","MAGVAF03",77,0)
 . Q
"RTN","MAGVAF03",78,0)
 ;
"RTN","MAGVAF03",79,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_(CNT-1)
"RTN","MAGVAF03",80,0)
 S MAGRY(1)="IEN"
"RTN","MAGVAF03",81,0)
 S I=""
"RTN","MAGVAF03",82,0)
 F  S I=$O(FLDSARR(I)) Q:I=""  S MAGRY(1)=MAGRY(1)_RESDEL_FLDSARR(I)
"RTN","MAGVAF03",83,0)
 Q
"RTN","MAGVAF03",84,0)
 ;*****  Returns all records for a file in XML format
"RTN","MAGVAF03",85,0)
 ; Input Parameters
"RTN","MAGVAF03",86,0)
 ; ================
"RTN","MAGVAF03",87,0)
 ;  
"RTN","MAGVAF03",88,0)
 ;   FILE - FileMan file number ( example 2006.917)
"RTN","MAGVAF03",89,0)
 ;   IENS - (Optional) Identify which subfile to list. (example IENS = ",67,"
"RTN","MAGVAF03",90,0)
 ;   
"RTN","MAGVAF03",91,0)
 ; if error found during execution
"RTN","MAGVAF03",92,0)
 ;   MAGRY(0) = "Failure status ^Error getting the list"
"RTN","MAGVAF03",93,0)
 ; if success
"RTN","MAGVAF03",94,0)
 ;   MAGRY(0)    = Success status ^^Total of lines
"RTN","MAGVAF03",95,0)
 ;   MAGRY(1)    = <file name + "s">
"RTN","MAGVAF03",96,0)
 ;   MAGRY(2)    =   <file name>
"RTN","MAGVAF03",97,0)
 ;   MAGRY(2..m) =      <field name=value>
"RTN","MAGVAF03",98,0)
 ;   MAGRY(n+1)  =   </ file name >
"RTN","MAGVAF03",99,0)
 ;   ...
"RTN","MAGVAF03",100,0)
 ;   MAGRY(n+2)  = </ file name + "s">
"RTN","MAGVAF03",101,0)
 ;
"RTN","MAGVAF03",102,0)
GALLXML(MAGRY,FILE,IENS) ;
"RTN","MAGVAF03",103,0)
 N OUT,ERR,MAGRESA
"RTN","MAGVAF03",104,0)
 N I,J,L,CNT,X,Y,WP,WPTYPE,QT,RESDEL
"RTN","MAGVAF03",105,0)
 N FILENM,FIELDS,FLDSARR,FLDSARRW
"RTN","MAGVAF03",106,0)
 K MAGRY
"RTN","MAGVAF03",107,0)
 S QT=$C(34)
"RTN","MAGVAF03",108,0)
 S RESDEL=$$RESDEL^MAGVAF02()
"RTN","MAGVAF03",109,0)
 S FIELDS=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,FILE,"") ; Get fields
"RTN","MAGVAF03",110,0)
 D LIST^DIC(FILE,IENS,"@;"_FIELDS,"I","","","","","","","OUT","ERR")
"RTN","MAGVAF03",111,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAF03",112,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAF03",113,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting the list: "_MAGRESA(1) Q  ; Error getting the list
"RTN","MAGVAF03",114,0)
 S FILENM=$TR($$GETFILNM^MAGVAF01(FILE)," ") ; file name without blanks
"RTN","MAGVAF03",115,0)
 S CNT=0
"RTN","MAGVAF03",116,0)
 S CNT=CNT+1,MAGRY(1)="<"_FILENM_"S>"
"RTN","MAGVAF03",117,0)
 S I=""
"RTN","MAGVAF03",118,0)
 F  S I=$O(OUT("DILIST","ID",I)) Q:I=""  D
"RTN","MAGVAF03",119,0)
 . S CNT=CNT+1,MAGRY(CNT)="<"_FILENM
"RTN","MAGVAF03",120,0)
 . S CNT=CNT+1,MAGRY(CNT)="PK="_QT_OUT("DILIST",2,I)_QT
"RTN","MAGVAF03",121,0)
 . S J=""
"RTN","MAGVAF03",122,0)
 . F  S J=$O(OUT("DILIST","ID",I,J)) Q:J=""  D
"RTN","MAGVAF03",123,0)
 . . S X=OUT("DILIST","ID",I,J)
"RTN","MAGVAF03",124,0)
 . . I $$ISFLDDT^MAGVAF01(FILE,J) S X=$$FM2IDF^MAGVAF01(X)  ; the field is Date type - convert to IDF format
"RTN","MAGVAF03",125,0)
 . . S CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARR(J)," /\<>&%")_"="_QT_X_QT
"RTN","MAGVAF03",126,0)
 . ; Now get the Word-Processing fields
"RTN","MAGVAF03",127,0)
 . S J=""
"RTN","MAGVAF03",128,0)
 . K WP
"RTN","MAGVAF03",129,0)
 . F  S J=$O(FLDSARRW(J)) Q:J=""  D
"RTN","MAGVAF03",130,0)
 . . I $$ISFLDWP^MAGVAF01(.WPTYPE,FILE,J) D
"RTN","MAGVAF03",131,0)
 . . . S X=$$GET1^DIQ(FILE,OUT("DILIST",2,I),J,"","WP")
"RTN","MAGVAF03",132,0)
 . . . S:$D(WP) CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARRW(J)," /\<>&%")_"="_QT
"RTN","MAGVAF03",133,0)
 . . . S L=""
"RTN","MAGVAF03",134,0)
 . . . F  S L=$O(WP(L)) Q:L=""  D
"RTN","MAGVAF03",135,0)
 . . . . S CNT=CNT+1,MAGRY(CNT)=WP(L)
"RTN","MAGVAF03",136,0)
 . . . . Q
"RTN","MAGVAF03",137,0)
 . . . S MAGRY(CNT)=MAGRY(CNT)_QT
"RTN","MAGVAF03",138,0)
 . . . Q
"RTN","MAGVAF03",139,0)
 . . Q
"RTN","MAGVAF03",140,0)
 . S MAGRY(CNT)=MAGRY(CNT)_" >"
"RTN","MAGVAF03",141,0)
 . Q
"RTN","MAGVAF03",142,0)
 S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_">"
"RTN","MAGVAF03",143,0)
 S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_"S>"
"RTN","MAGVAF03",144,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_CNT
"RTN","MAGVAF03",145,0)
 Q
"RTN","MAGVAF03",146,0)
 ;
"RTN","MAGVAF03",147,0)
 ; ****  Get a multiple values for a field and return the result in XML format
"RTN","MAGVAF03",148,0)
 ; 
"RTN","MAGVAF03",149,0)
 ; Input parameters
"RTN","MAGVAF03",150,0)
 ; ================
"RTN","MAGVAF03",151,0)
 ; 
"RTN","MAGVAF03",152,0)
 ; FILE = FileMan number of the file (e.g. 2006.913)
"RTN","MAGVAF03",153,0)
 ; IENS = IEN of the record  (e.g. "1," where 1 is an IEN)
"RTN","MAGVAF03",154,0)
 ; MFIELDID = Field number of the multiple field (e.g. 2)
"RTN","MAGVAF03",155,0)
 ;
"RTN","MAGVAF03",156,0)
 ; Return Values
"RTN","MAGVAF03",157,0)
 ; =============
"RTN","MAGVAF03",158,0)
 ; if error found during execution
"RTN","MAGVAF03",159,0)
 ;   MAGRY(0) = "Failure status ^Error getting values"
"RTN","MAGVAF03",160,0)
 ; if success
"RTN","MAGVAF03",161,0)
 ;   MAGRY(0) = Success status ^^Total lines
"RTN","MAGVAF03",162,0)
 ;   MAGRY (1.n) = values in format
"RTN","MAGVAF03",163,0)
 ;   
"RTN","MAGVAF03",164,0)
 ;   e.g
"RTN","MAGVAF03",165,0)
 ;    <KEYS>
"RTN","MAGVAF03",166,0)
 ;    <KEY VALUE="" LEVEL=""/>
"RTN","MAGVAF03",167,0)
 ;     ...
"RTN","MAGVAF03",168,0)
 ;    <KEY VALUE="" LEVEL=""/>
"RTN","MAGVAF03",169,0)
 ;    </KEYS>
"RTN","MAGVAF03",170,0)
 ;    
"RTN","MAGVAF03",171,0)
 ;    where 
"RTN","MAGVAF03",172,0)
 ;      KEY    = the name of multiple field
"RTN","MAGVAF03",173,0)
 ;      VALUE and LEVEL = field names in sub-file
"RTN","MAGVAF03",174,0)
 ;       
"RTN","MAGVAF03",175,0)
GETMVAL(MAGRY,FILE,MFIELDID,IENS) ;
"RTN","MAGVAF03",176,0)
 N I,J,X
"RTN","MAGVAF03",177,0)
 N OUT,ERR,MAGRESA
"RTN","MAGVAF03",178,0)
 N FLDSARR,FLDSARRW,MFIELDNM,SUBFILE,FIELDS
"RTN","MAGVAF03",179,0)
 N CNT,QT,RESDEL
"RTN","MAGVAF03",180,0)
 S QT=$C(34)
"RTN","MAGVAF03",181,0)
 S RESDEL=$$RESDEL^MAGVAF02()
"RTN","MAGVAF03",182,0)
 S MFIELDNM=$$GETFLDNM^MAGVAF01(FILE,MFIELDID) ; name of multiple field
"RTN","MAGVAF03",183,0)
 S SUBFILE=$$GETSUBFL^MAGVAF01(FILE,MFIELDID)  ; sub-file for the multiple fields
"RTN","MAGVAF03",184,0)
 S FIELDS=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,SUBFILE,"I") ; sub-file fields names
"RTN","MAGVAF03",185,0)
 S FIELDS=MFIELDID_"*"
"RTN","MAGVAF03",186,0)
 I IENS'="" D  Q:$D(ERR("DIERR"))
"RTN","MAGVAF03",187,0)
 . D GETS^DIQ(FILE,IENS,FIELDS,"","OUT","ERR")
"RTN","MAGVAF03",188,0)
 . I $D(ERR("DIERR")) D
"RTN","MAGVAF03",189,0)
 . . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAF03",190,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the list
"RTN","MAGVAF03",191,0)
 . . Q
"RTN","MAGVAF03",192,0)
 . Q
"RTN","MAGVAF03",193,0)
 ; Output the data
"RTN","MAGVAF03",194,0)
 S I=""  ; IENs
"RTN","MAGVAF03",195,0)
 S J=""  ; Fields in the sub-file
"RTN","MAGVAF03",196,0)
 S CNT=0
"RTN","MAGVAF03",197,0)
 S CNT=CNT+1,MAGRY(CNT)="<"_MFIELDNM_"S>"
"RTN","MAGVAF03",198,0)
 F  S I=$O(OUT(SUBFILE,I)) Q:I=""  D
"RTN","MAGVAF03",199,0)
 . S CNT=CNT+1,MAGRY(CNT)="<"_MFIELDNM
"RTN","MAGVAF03",200,0)
 . F  S J=$O(OUT(SUBFILE,I,J)) Q:J=""  D
"RTN","MAGVAF03",201,0)
 . . I $$ISFLDDT^MAGVAF01(SUBFILE,J) S X=$$FM2IDF^MAGVAF01(OUT(SUBFILE,I,J))  ; the field is Date type - convert to IDF format
"RTN","MAGVAF03",202,0)
 . . E  S X=OUT(SUBFILE,I,J)
"RTN","MAGVAF03",203,0)
 . . S MAGRY(CNT)=MAGRY(CNT)_" "_$TR(FLDSARR(J)," /\<>&%")_"="_QT_X_QT
"RTN","MAGVAF03",204,0)
 . . Q
"RTN","MAGVAF03",205,0)
 . S MAGRY(CNT)=MAGRY(CNT)_" />"
"RTN","MAGVAF03",206,0)
 . Q
"RTN","MAGVAF03",207,0)
 . S CNT=CNT+1,MAGRY(CNT)="/>"
"RTN","MAGVAF03",208,0)
 S CNT=CNT+1,MAGRY(CNT)="</"_MFIELDNM_"S>"
"RTN","MAGVAF03",209,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_CNT
"RTN","MAGVAF03",210,0)
 Q
"RTN","MAGVAF03",211,0)
 ;
"RTN","MAGVAF03",212,0)
 ;
"RTN","MAGVAF03",213,0)
 ; ****  Get a record from a file by "B" index value 
"RTN","MAGVAF03",214,0)
 ;      (in most of the cases it is value of .01 field) and return the result in XML format
"RTN","MAGVAF03",215,0)
 ; 
"RTN","MAGVAF03",216,0)
 ; Input parameters
"RTN","MAGVAF03",217,0)
 ; ================
"RTN","MAGVAF03",218,0)
 ; 
"RTN","MAGVAF03",219,0)
 ; FILE = FileMan number of the file (e.g. 2006.913)
"RTN","MAGVAF03",220,0)
 ; IENS = IEN in sub-file  (e.g. "1," where 1 is an IEN)
"RTN","MAGVAF03",221,0)
 ; VAL = value in "B" index (in most of the cases it is value of .01 field)
"RTN","MAGVAF03",222,0)
 ; WPASLINE = 0 (WP value as it was stored) / 1 (WP value as a single line) 
"RTN","MAGVAF03",223,0)
 ;
"RTN","MAGVAF03",224,0)
 ; Return Values
"RTN","MAGVAF03",225,0)
 ; =============
"RTN","MAGVAF03",226,0)
 ; if error found during execution
"RTN","MAGVAF03",227,0)
 ;   MAGRY(0) = Failure status^Error getting values
"RTN","MAGVAF03",228,0)
 ; if success
"RTN","MAGVAF03",229,0)
 ;   MAGRY(0) =  Success status^^Total lines
"RTN","MAGVAF03",230,0)
 ;   MAGRY (1.n) = values in XML format
"RTN","MAGVAF03",231,0)
 ;   
"RTN","MAGVAF03",232,0)
GXMLBYID(MAGRY,FILE,IENS,VAL,WPASLINE) ;
"RTN","MAGVAF03",233,0)
 N FIELDS,FLDSARR,FLDSARRW,FILENM
"RTN","MAGVAF03",234,0)
 N OUT,ERR,MAGRESA,WP,WPTYPE
"RTN","MAGVAF03",235,0)
 N I,J,L,X,CNT
"RTN","MAGVAF03",236,0)
 N QT,RESDEL
"RTN","MAGVAF03",237,0)
 K MAGRY
"RTN","MAGVAF03",238,0)
 S RESDEL=$$RESDEL^MAGVAF02()
"RTN","MAGVAF03",239,0)
 S QT=$C(34)
"RTN","MAGVAF03",240,0)
 S FILENM=$TR($$GETFILNM^MAGVAF01(FILE)," ") ; File name without blank
"RTN","MAGVAF03",241,0)
 S FIELDS=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,FILE,"I") ; file fields names
"RTN","MAGVAF03",242,0)
 D FIND^DIC(FILE,IENS,"@;"_FIELDS,"BQX",VAL,"","","","","OUT","ERR")
"RTN","MAGVAF03",243,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAF03",244,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAF03",245,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the list
"RTN","MAGVAF03",246,0)
 . Q
"RTN","MAGVAF03",247,0)
 ; Output the data
"RTN","MAGVAF03",248,0)
 S CNT=0
"RTN","MAGVAF03",249,0)
 S CNT=CNT+1,MAGRY(CNT)="<"_FILENM_"S>"
"RTN","MAGVAF03",250,0)
 S I=""  ; IENs
"RTN","MAGVAF03",251,0)
 S J=""  ; Fields in the file
"RTN","MAGVAF03",252,0)
 F  S I=$O(OUT("DILIST","ID",I)) Q:I=""  D
"RTN","MAGVAF03",253,0)
 . S CNT=CNT+1,MAGRY(CNT)="<"_FILENM
"RTN","MAGVAF03",254,0)
 . S CNT=CNT+1,MAGRY(CNT)="PK="_QT_OUT("DILIST",2,I)_QT
"RTN","MAGVAF03",255,0)
 . S J=""
"RTN","MAGVAF03",256,0)
 . F  S J=$O(OUT("DILIST","ID",I,J)) Q:J=""  D
"RTN","MAGVAF03",257,0)
 . . S X=OUT("DILIST","ID",I,J)
"RTN","MAGVAF03",258,0)
 . . I $$ISFLDDT^MAGVAF01(FILE,J) S X=$$FM2IDF^MAGVAF01(X)  ; the field is Date type - convert to IDF format
"RTN","MAGVAF03",259,0)
 . . S CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARR(J)," /\<>&%")_"="_QT_X_QT
"RTN","MAGVAF03",260,0)
 . . Q
"RTN","MAGVAF03",261,0)
 . ; Now get the Word-Processing fields
"RTN","MAGVAF03",262,0)
 . S J=""
"RTN","MAGVAF03",263,0)
 . K WP
"RTN","MAGVAF03",264,0)
 . F  S J=$O(FLDSARRW(J)) Q:J=""  D
"RTN","MAGVAF03",265,0)
 . . I $$ISFLDWP^MAGVAF01(.WPTYPE,FILE,J) D  Q
"RTN","MAGVAF03",266,0)
 . . . S X=$$GET1^DIQ(FILE,OUT("DILIST",2,I),J,"","WP")
"RTN","MAGVAF03",267,0)
 . . . I $D(WP) D
"RTN","MAGVAF03",268,0)
 . . . . S CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARRW(J)," /\<>&%")_"="_QT
"RTN","MAGVAF03",269,0)
 . . . . I WPASLINE S MAGRY(CNT)=MAGRY(CNT)_$$TRHTML^MAGVAF04($$STRWP^MAGVAF01(.WP))  ; Get as a single line
"RTN","MAGVAF03",270,0)
 . . . . E  D  ; Get WP value as it was stored
"RTN","MAGVAF03",271,0)
 . . . . . S L=""
"RTN","MAGVAF03",272,0)
 . . . . . F  S L=$O(WP(L)) Q:L=""  D
"RTN","MAGVAF03",273,0)
 . . . . . . S CNT=CNT+1,MAGRY(CNT)=$$TRHTML^MAGVAF04(WP(L))
"RTN","MAGVAF03",274,0)
 . . . . . . Q
"RTN","MAGVAF03",275,0)
 . . . . . Q
"RTN","MAGVAF03",276,0)
 . . . . S MAGRY(CNT)=MAGRY(CNT)_QT
"RTN","MAGVAF03",277,0)
 . . . . Q
"RTN","MAGVAF03",278,0)
 . . . Q
"RTN","MAGVAF03",279,0)
 . . Q
"RTN","MAGVAF03",280,0)
 . S MAGRY(CNT)=MAGRY(CNT)_" >"
"RTN","MAGVAF03",281,0)
 . S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_" >"
"RTN","MAGVAF03",282,0)
 . Q
"RTN","MAGVAF03",283,0)
 S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_"S>"
"RTN","MAGVAF03",284,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_CNT
"RTN","MAGVAF03",285,0)
 Q
"RTN","MAGVAF03",286,0)
 ;
"RTN","MAGVAF03",287,0)
 ; Input Parameters
"RTN","MAGVAF03",288,0)
 ; ================ 
"RTN","MAGVAF03",289,0)
 ; MAGRY
"RTN","MAGVAF03",290,0)
 ;   MAGRY(0)=1^^CNT
"RTN","MAGVAF03",291,0)
 ;   MAGRY(3)=<FILENAME
"RTN","MAGVAF03",292,0)
 ;   ...
"RTN","MAGVAF03",293,0)
 ;   MAGRY(n)=</FILENAME>
"RTN","MAGVAF03",294,0)
 ;   
"RTN","MAGVAF03",295,0)
 ; Output Values
"RTN","MAGVAF03",296,0)
 ; =============
"RTN","MAGVAF03",297,0)
 ; 
"RTN","MAGVAF03",298,0)
 ; MAGRY(0)=1^^(CNT+1)
"RTN","MAGVAF03",299,0)
 ; MAGRY(1)="<?xml version=""1.0"" encoding=""utf-8""?>"
"RTN","MAGVAF03",300,0)
 ; MAGRY(2)=<FILENAMES>
"RTN","MAGVAF03",301,0)
 ; ....
"RTN","MAGVAF03",302,0)
 ; MAGRY(n+1)=</FILENAMES>
"RTN","MAGVAF03",303,0)
 ;
"RTN","MAGVAF03",304,0)
SETFTUCH(MAGRY) ; Set first two lines and the last one
"RTN","MAGVAF03",305,0)
 I '$$ISOK^MAGVAF02(MAGRY(0)) Q
"RTN","MAGVAF03",306,0)
 ; Add first lines
"RTN","MAGVAF03",307,0)
 N RES,I
"RTN","MAGVAF03",308,0)
 S MAGRY(1)=$$XML1LINE^MAGVAF02()
"RTN","MAGVAF03",309,0)
 S MAGRY(2)=MAGRY(3)_"S>"
"RTN","MAGVAF03",310,0)
 S I=$O(MAGRY(""),-1)+1
"RTN","MAGVAF03",311,0)
 S MAGRY(I)="</"_$P(MAGRY(3),"<",2,999)_"S>"
"RTN","MAGVAF03",312,0)
 S RES=MAGRY(0)
"RTN","MAGVAF03",313,0)
 D SETVAL^MAGVAF02(.RES,I)
"RTN","MAGVAF03",314,0)
 S MAGRY(0)=RES
"RTN","MAGVAF03",315,0)
 Q
"RTN","MAGVAF03",316,0)
 ;
"RTN","MAGVAF03",317,0)
 ;++++ Create an empty XML result by file number
"RTN","MAGVAF03",318,0)
 ; Input Parameters
"RTN","MAGVAF03",319,0)
 ; ================
"RTN","MAGVAF03",320,0)
 ; FILE - FileMan file number
"RTN","MAGVAF03",321,0)
 ; 
"RTN","MAGVAF03",322,0)
 ; Return Values
"RTN","MAGVAF03",323,0)
 ; ==============
"RTN","MAGVAF03",324,0)
 ; MAGRY(0)=1^^3
"RTN","MAGVAF03",325,0)
 ; MAGRY(1)="<?xml version=""1.0"" encoding=""utf-8""?>"
"RTN","MAGVAF03",326,0)
 ; MAGRY(2)=<FILENAMES>
"RTN","MAGVAF03",327,0)
 ; MAGRY(3)=</FILENAMES>
"RTN","MAGVAF03",328,0)
 ; 
"RTN","MAGVAF03",329,0)
 ; where FILENAME is the name of the file passed
"RTN","MAGVAF03",330,0)
 ; 
"RTN","MAGVAF03",331,0)
EMPTYXML(MAGRY,FILE) ; Create an empty XML result by file number
"RTN","MAGVAF03",332,0)
 N FILENM
"RTN","MAGVAF03",333,0)
 S FILENM=$TR($$GETFILNM^MAGVAF01(FILE)," ") ; File name without blank
"RTN","MAGVAF03",334,0)
 S CNT=0
"RTN","MAGVAF03",335,0)
 S MAGRY(0)=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_3
"RTN","MAGVAF03",336,0)
 S MAGRY(1)=$$XML1LINE^MAGVAF02()
"RTN","MAGVAF03",337,0)
 S MAGRY(2)="<"_FILENM_"S>"
"RTN","MAGVAF03",338,0)
 S MAGRY(3)="</"_FILENM_"S>"
"RTN","MAGVAF03",339,0)
 Q
"RTN","MAGVAF03",340,0)
 ;
"RTN","MAGVAF03",341,0)
 ; ****  Get a record from a file by IEN 
"RTN","MAGVAF03",342,0)
 ;       and return the result in XML format
"RTN","MAGVAF03",343,0)
 ; 
"RTN","MAGVAF03",344,0)
 ; Input parameters
"RTN","MAGVAF03",345,0)
 ; ================
"RTN","MAGVAF03",346,0)
 ; 
"RTN","MAGVAF03",347,0)
 ; FILE = FileMan number of the file (e.g. 2006.913)
"RTN","MAGVAF03",348,0)
 ; PK = IEN in the file
"RTN","MAGVAF03",349,0)
 ; WPASLINE = 0 (WP value as it was stored) / 1 (WP value as a single line) 
"RTN","MAGVAF03",350,0)
 ;
"RTN","MAGVAF03",351,0)
 ; Return Values
"RTN","MAGVAF03",352,0)
 ; =============
"RTN","MAGVAF03",353,0)
 ; if error found during execution
"RTN","MAGVAF03",354,0)
 ;   MAGRY(0) = Failure status^Error getting values
"RTN","MAGVAF03",355,0)
 ; if success
"RTN","MAGVAF03",356,0)
 ;   MAGRY(0) =  Success status^^Total lines
"RTN","MAGVAF03",357,0)
 ;   MAGRY (1.n) = values in XML format
"RTN","MAGVAF03",358,0)
 ;   
"RTN","MAGVAF03",359,0)
GXMLBYPK(MAGRY,FILE,PK,WPASLINE) ;
"RTN","MAGVAF03",360,0)
 N FIELDS,FLDSARR,FLDSARRW,FILENM
"RTN","MAGVAF03",361,0)
 N OUT,ERR,MAGRESA,WP,IENS
"RTN","MAGVAF03",362,0)
 N J,L,X,CNT,WPTYPE
"RTN","MAGVAF03",363,0)
 N QT,RESDEL
"RTN","MAGVAF03",364,0)
 K MAGRY
"RTN","MAGVAF03",365,0)
 S RESDEL=$$RESDEL^MAGVAF02()
"RTN","MAGVAF03",366,0)
 S QT=$C(34)
"RTN","MAGVAF03",367,0)
 S FILENM=$TR($$GETFILNM^MAGVAF01(FILE)," ") ; File name without blank
"RTN","MAGVAF03",368,0)
 S FIELDS=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,FILE,"") ; file fields names
"RTN","MAGVAF03",369,0)
 S IENS=PK_","
"RTN","MAGVAF03",370,0)
 D GETS^DIQ(FILE,PK_",",FIELDS,"I","OUT","ERR")
"RTN","MAGVAF03",371,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAF03",372,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAF03",373,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the list
"RTN","MAGVAF03",374,0)
 . Q
"RTN","MAGVAF03",375,0)
 ; Output the data
"RTN","MAGVAF03",376,0)
 S CNT=0
"RTN","MAGVAF03",377,0)
 S J=""  ; Fields in the file
"RTN","MAGVAF03",378,0)
 S CNT=CNT+1,MAGRY(CNT)="<"_FILENM
"RTN","MAGVAF03",379,0)
 S CNT=CNT+1,MAGRY(CNT)="PK="_QT_PK_QT
"RTN","MAGVAF03",380,0)
 S J=""
"RTN","MAGVAF03",381,0)
 F  S J=$O(OUT(FILE,IENS,J)) Q:J=""  D
"RTN","MAGVAF03",382,0)
 . S X=OUT(FILE,IENS,J,"I")
"RTN","MAGVAF03",383,0)
 . I $$ISFLDDT^MAGVAF01(FILE,J) S X=$$FM2IDF^MAGVAF01(X)  ; the field is Date type - convert to IDF format
"RTN","MAGVAF03",384,0)
 . S CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARR(J)," /\<>&%")_"="_QT_X_QT
"RTN","MAGVAF03",385,0)
 . Q
"RTN","MAGVAF03",386,0)
 ; Now get the Word-Processing fields
"RTN","MAGVAF03",387,0)
 S J=""
"RTN","MAGVAF03",388,0)
 K WP
"RTN","MAGVAF03",389,0)
 F  S J=$O(FLDSARRW(J)) Q:J=""  D
"RTN","MAGVAF03",390,0)
 . I $$ISFLDWP^MAGVAF01(.WPTYPE,FILE,J) D  Q
"RTN","MAGVAF03",391,0)
 . . S X=$$GET1^DIQ(FILE,IENS,J,"","WP")
"RTN","MAGVAF03",392,0)
 . . I $D(WP) D
"RTN","MAGVAF03",393,0)
 . . . S CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARRW(J)," /\<>&%")_"="_QT
"RTN","MAGVAF03",394,0)
 . . . I WPASLINE S MAGRY(CNT)=MAGRY(CNT)_$$TRHTML^MAGVAF04($$STRWP^MAGVAF01(.WP))  ; Get as a single line
"RTN","MAGVAF03",395,0)
 . . . E  D  ; Get WP value as it was stored
"RTN","MAGVAF03",396,0)
 . . . . S L=""
"RTN","MAGVAF03",397,0)
 . . . . F  S L=$O(WP(L)) Q:L=""  D
"RTN","MAGVAF03",398,0)
 . . . . . S CNT=CNT+1,MAGRY(CNT)=$$TRHTML^MAGVAF04(WP(L))
"RTN","MAGVAF03",399,0)
 . . . . . Q
"RTN","MAGVAF03",400,0)
 . . . . Q
"RTN","MAGVAF03",401,0)
 . . . S MAGRY(CNT)=MAGRY(CNT)_QT
"RTN","MAGVAF03",402,0)
 . . . Q
"RTN","MAGVAF03",403,0)
 . . Q
"RTN","MAGVAF03",404,0)
 . Q
"RTN","MAGVAF03",405,0)
 S MAGRY(CNT)=MAGRY(CNT)_" >"
"RTN","MAGVAF03",406,0)
 S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_" >"
"RTN","MAGVAF03",407,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_CNT
"RTN","MAGVAF03",408,0)
 Q
"RTN","MAGVAF04")
0^53^B4868004
"RTN","MAGVAF04",1,0)
MAGVAF04 ;WOIFO/NST - Utilities for RPC calls ; 11 Mar 2010 4:39 PM
"RTN","MAGVAF04",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAF04",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAF04",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF04",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAF04",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAF04",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAF04",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAF04",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAF04",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAF04",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAF04",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAF04",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAF04",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAF04",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAF04",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF04",17,0)
 ;;
"RTN","MAGVAF04",18,0)
 Q
"RTN","MAGVAF04",19,0)
 ;
"RTN","MAGVAF04",20,0)
 ; ++++ Append data from array FROMARR to array TOARR 
"RTN","MAGVAF04",21,0)
 ;      and returns the last node (counter) in TOARR
"RTN","MAGVAF04",22,0)
 ;      e.g FROMARR(1)="Line 3"
"RTN","MAGVAF04",23,0)
 ;       FROMARR(2)="Line 4"
"RTN","MAGVAF04",24,0)
 ;     
"RTN","MAGVAF04",25,0)
 ;       TOARR(1)="Line 1"
"RTN","MAGVAF04",26,0)
 ;      
"RTN","MAGVAF04",27,0)
 ;      Result is
"RTN","MAGVAF04",28,0)
 ;       TOARR(1)="Line 1"
"RTN","MAGVAF04",29,0)
 ;       TOARR(2)="Line 3"
"RTN","MAGVAF04",30,0)
 ;       TOARR(3)="Line 4"
"RTN","MAGVAF04",31,0)
APP2ARR(TOARR,FROMARR) ; Append data from array FROMARR to array TOARR 
"RTN","MAGVAF04",32,0)
 N I,CNT
"RTN","MAGVAF04",33,0)
 S CNT=$O(TOARR(""),-1)
"RTN","MAGVAF04",34,0)
 S I=""
"RTN","MAGVAF04",35,0)
 F  S I=$O(FROMARR(I)) Q:I=""  D
"RTN","MAGVAF04",36,0)
 . S CNT=CNT+1,TOARR(CNT)=FROMARR(I)
"RTN","MAGVAF04",37,0)
 . Q
"RTN","MAGVAF04",38,0)
 Q CNT
"RTN","MAGVAF04",39,0)
 ;
"RTN","MAGVAF04",40,0)
 ; ++++ Returns string with translated special XML characters
"RTN","MAGVAF04",41,0)
 ; 
"RTN","MAGVAF04",42,0)
 ; e.g. IN="< KVALUE="123" />"
"RTN","MAGVAF04",43,0)
 ; 
"RTN","MAGVAF04",44,0)
 ; "&" to "&amp"
"RTN","MAGVAF04",45,0)
 ; "<" to "&lt"
"RTN","MAGVAF04",46,0)
 ; ">" to "&gt"
"RTN","MAGVAF04",47,0)
 ; """ to "&quot" 
"RTN","MAGVAF04",48,0)
 ;  
"RTN","MAGVAF04",49,0)
TRHTML(IN) ; Returns string with translated special XML characters
"RTN","MAGVAF04",50,0)
 N A,I,OUT
"RTN","MAGVAF04",51,0)
 S OUT=""
"RTN","MAGVAF04",52,0)
 F I=1:1:$L(IN) D
"RTN","MAGVAF04",53,0)
 . S A=$A(IN,I)
"RTN","MAGVAF04",54,0)
 . I $C(A)="""" S OUT=OUT_"&quot;" Q
"RTN","MAGVAF04",55,0)
 . I $C(A)="&" S OUT=OUT_"&amp;" Q
"RTN","MAGVAF04",56,0)
 . I $C(A)="<" S OUT=OUT_"&lt;" Q
"RTN","MAGVAF04",57,0)
 . I $C(A)=">" S OUT=OUT_"&gt;" Q
"RTN","MAGVAF04",58,0)
 . I A<31 S OUT=OUT_"&#"_A_";" Q
"RTN","MAGVAF04",59,0)
 . I A>126 S OUT=OUT_"&#"_A_";" Q
"RTN","MAGVAF04",60,0)
 . S OUT=OUT_$C(A)
"RTN","MAGVAF04",61,0)
 . Q
"RTN","MAGVAF04",62,0)
 Q OUT
"RTN","MAGVAF05")
0^54^B7798795
"RTN","MAGVAF05",1,0)
MAGVAF05 ;WOIFO/NST - Utilities for RPC calls ; 14 Sep 2011 1:55 PM
"RTN","MAGVAF05",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAF05",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAF05",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF05",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAF05",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAF05",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAF05",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAF05",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAF05",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAF05",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAF05",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAF05",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAF05",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAF05",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAF05",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAF05",17,0)
 ;;
"RTN","MAGVAF05",18,0)
 Q
"RTN","MAGVAF05",19,0)
 ; +++++ Return IEN of the record with .01 field equals VALUE
"RTN","MAGVAF05",20,0)
 ;       If record is not found a new record will be added if a add flag is set to true
"RTN","MAGVAF05",21,0)
 ; 
"RTN","MAGVAF05",22,0)
 ; Input parameters
"RTN","MAGVAF05",23,0)
 ; ================
"RTN","MAGVAF05",24,0)
 ;   FILE  = FileMan file number (e.g. 2006.9193)
"RTN","MAGVAF05",25,0)
 ;   VALUE = External or internal value of .01 field
"RTN","MAGVAF05",26,0)
 ;   ADD   = Add a new record if the VALUE is not found (e.g. 0/1)
"RTN","MAGVAF05",27,0)
GETIEN(FILE,VALUE,ADD) ; Return IEN of the record with .01 field equals VALUE
"RTN","MAGVAF05",28,0)
 N MAGNFDA,MAGNIEN,MAGNXE,IEN,MAGRY
"RTN","MAGVAF05",29,0)
 I (VALUE=0)!(VALUE<0) Q $$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Unexpected value of #"_FILE_".01 :"_VALUE ; Error
"RTN","MAGVAF05",30,0)
 ; Do we have IEN?
"RTN","MAGVAF05",31,0)
 I +VALUE=VALUE D SETOKVAL^MAGVAF02(.MAGRY,VALUE) Q MAGRY
"RTN","MAGVAF05",32,0)
 ; Find the IEN by VALUE
"RTN","MAGVAF05",33,0)
 S IEN=$$FIND1^DIC(FILE,"","BX",VALUE,"","","MAGNXE") ; Find the IEN for VALUE
"RTN","MAGVAF05",34,0)
 I $D(MAGNXE("DIERR")) Q $$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_$G(MAGNXE("DIERR",1,"TEXT",1))
"RTN","MAGVAF05",35,0)
 I IEN>0 D SETOKVAL^MAGVAF02(.MAGRY,IEN) Q MAGRY
"RTN","MAGVAF05",36,0)
 ; Return error if we don't need to add a new record
"RTN","MAGVAF05",37,0)
 I 'ADD Q $$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Record "_VALUE_" is not found in file #"_FILE
"RTN","MAGVAF05",38,0)
 ; Add a new record to FILE and return IEN of the new record
"RTN","MAGVAF05",39,0)
 S MAGNFDA(FILE,"+1,",.01)=VALUE
"RTN","MAGVAF05",40,0)
 D UPDATE^DIE("S","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVAF05",41,0)
 I $D(MAGNXE("DIERR","E")) Q $$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_$G(MAGNXE("DIERR",1,"TEXT",1))
"RTN","MAGVAF05",42,0)
 D SETOKVAL^MAGVAF02(.MAGRY,MAGNIEN(1))
"RTN","MAGVAF05",43,0)
 Q MAGRY
"RTN","MAGVAF05",44,0)
 ;
"RTN","MAGVAF05",45,0)
 ; Input parameters
"RTN","MAGVAF05",46,0)
 ; ================
"RTN","MAGVAF05",47,0)
 ;   FILE = FileMan file number (e.g. 2006.916)
"RTN","MAGVAF05",48,0)
 ;   FIELD = Field number or name (e.g. "CREATING APPLICATION" or 6)
"RTN","MAGVAF05",49,0)
 ;   
"RTN","MAGVAF05",50,0)
GETFILEP(FILE,FIELD)  ; Returns the file that a FIELD in file FILE points to
"RTN","MAGVAF05",51,0)
 Q $P($$GET1^DID(FILE,FIELD,"","SPECIFIER"),"P",2)
"RTN","MAGVAG01")
0^55^B4532733
"RTN","MAGVAG01",1,0)
MAGVAG01 ;WOIFO/NST - Utilities for RPC calls ; 13 Feb 2012 4:18 PM
"RTN","MAGVAG01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAG01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAG01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAG01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAG01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAG01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAG01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAG01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAG01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAG01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAG01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAG01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAG01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAG01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG01",17,0)
 ;;
"RTN","MAGVAG01",18,0)
 Q
"RTN","MAGVAG01",19,0)
 ;
"RTN","MAGVAG01",20,0)
 ;*****  Returns all records in RETENTION POLICY file (#2006.914)
"RTN","MAGVAG01",21,0)
 ;       
"RTN","MAGVAG01",22,0)
 ; RPC: MAGVA GET ALL RETPOLS
"RTN","MAGVAG01",23,0)
 ; 
"RTN","MAGVAG01",24,0)
 ; if error found during execution
"RTN","MAGVAG01",25,0)
 ;   MAGRY(0) = Failure status ^ "Error getting the list"
"RTN","MAGVAG01",26,0)
 ; if success
"RTN","MAGVAG01",27,0)
 ;   MAGRY(0)    = Success status ^^#CNT" - where #CNT is a number of records returned
"RTN","MAGVAG01",28,0)
 ;   MAGRY(1)    = "^" delimited string with all field names in RETENTION POLICY file (#2006.914)
"RTN","MAGVAG01",29,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVAG01",30,0)
 ;
"RTN","MAGVAG01",31,0)
GETRP(MAGRY) ; RPC [MAGVA GET ALL RETPOLS]
"RTN","MAGVAG01",32,0)
 D GALLLST^MAGVAF03(.MAGRY,2006.914,"")
"RTN","MAGVAG01",33,0)
 Q
"RTN","MAGVAG01",34,0)
 ;
"RTN","MAGVAG01",35,0)
 ;*****  Returns all records in ARTIFACT DESCRIPTOR file (#2006.915)
"RTN","MAGVAG01",36,0)
 ;       
"RTN","MAGVAG01",37,0)
 ; RPC: MAGVA GET ALL ADS
"RTN","MAGVAG01",38,0)
 ; 
"RTN","MAGVAG01",39,0)
 ; if error found during execution
"RTN","MAGVAG01",40,0)
 ;   MAGRY(0) = "0^Error getting the list"
"RTN","MAGVAG01",41,0)
 ; if success
"RTN","MAGVAG01",42,0)
 ;   MAGRY(0)    = "1^^#CNT" - where #CNT is a number of records returned
"RTN","MAGVAG01",43,0)
 ;   MAGRY(1)    = "^" delimited string with all field names in ARTIFACT DESCRIPTOR file (#2006.915)
"RTN","MAGVAG01",44,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVAG01",45,0)
 ;
"RTN","MAGVAG01",46,0)
GETAD(MAGRY) ; RPC [MAGVA GET ALL ADS]
"RTN","MAGVAG01",47,0)
 D GALLLST^MAGVAF03(.MAGRY,2006.915,"")
"RTN","MAGVAG01",48,0)
 Q
"RTN","MAGVAG01",49,0)
 ;
"RTN","MAGVAG01",50,0)
 ;*****  Returns all records in STORAGE PROVIDER AVAILABILITY file (#2006.924)
"RTN","MAGVAG01",51,0)
 ;       
"RTN","MAGVAG01",52,0)
 ; RPC: MAGVA GET ALL PROVAVAILS
"RTN","MAGVAG01",53,0)
 ; 
"RTN","MAGVAG01",54,0)
 ; if error found during execution
"RTN","MAGVAG01",55,0)
 ;   MAGRY(0) = Failure status ^ "Error getting the list"
"RTN","MAGVAG01",56,0)
 ; if success
"RTN","MAGVAG01",57,0)
 ;   MAGRY(0)    = Success status ^^ #CNT - where #CNT is a number of records returned
"RTN","MAGVAG01",58,0)
 ;   MAGRY(1)    = "^" delimited string with all field names in STORAGE PROVIDER AVAILABILITY file (#2006.924)
"RTN","MAGVAG01",59,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVAG01",60,0)
 ;
"RTN","MAGVAG01",61,0)
GETPA(MAGRY) ; RPC [MAGVA GET ALL PROVAVAILS]
"RTN","MAGVAG01",62,0)
 D GALLLST^MAGVAF03(.MAGRY,2006.924,"")
"RTN","MAGVAG01",63,0)
 Q
"RTN","MAGVAG01",64,0)
 ;
"RTN","MAGVAG01",65,0)
 ;*****  Returns all records in STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAG01",66,0)
 ;       
"RTN","MAGVAG01",67,0)
 ; RPC: MAGVA GET ALL PROVIDERS
"RTN","MAGVAG01",68,0)
 ; 
"RTN","MAGVAG01",69,0)
 ; if error found during execution
"RTN","MAGVAG01",70,0)
 ;   MAGRY(0) = Failure status ^ "Error getting the list"
"RTN","MAGVAG01",71,0)
 ; if success
"RTN","MAGVAG01",72,0)
 ;   MAGRY(0)    = Success status^^#CNT - where #CNT is a number of records returned
"RTN","MAGVAG01",73,0)
 ;   MAGRY(1)    = "^" delimited string with all field names in STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAG01",74,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVAG01",75,0)
 ;
"RTN","MAGVAG01",76,0)
GETP(MAGRY) ; RPC [MAGVA GET ALL PROVIDERS]
"RTN","MAGVAG01",77,0)
 D GALLLST^MAGVAF03(.MAGRY,2006.917,"")
"RTN","MAGVAG01",78,0)
 Q
"RTN","MAGVAG01",79,0)
 ;
"RTN","MAGVAG01",80,0)
 ;*****  Returns all records in RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"RTN","MAGVAG01",81,0)
 ;       
"RTN","MAGVAG01",82,0)
 ; RPC: MAGVA GET ALL RETPOL PROV MAPS
"RTN","MAGVAG01",83,0)
 ; 
"RTN","MAGVAG01",84,0)
 ; if error found during execution
"RTN","MAGVAG01",85,0)
 ;   MAGRY(0) = Failure status ^ "Error getting the list"
"RTN","MAGVAG01",86,0)
 ; if success
"RTN","MAGVAG01",87,0)
 ;   MAGRY(0)    = Success status ^^#CNT" - where #CNT is a number of records returned
"RTN","MAGVAG01",88,0)
 ;   MAGRY(1)    = "^" delimited string with all field names in 
"RTN","MAGVAG01",89,0)
 ;                     RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923) 
"RTN","MAGVAG01",90,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVAG01",91,0)
 ;
"RTN","MAGVAG01",92,0)
GETRPPM(MAGRY) ; RPC [MAGVA GET ALL RETPOL PROV MAPS]
"RTN","MAGVAG01",93,0)
 D GALLLST^MAGVAF03(.MAGRY,2006.923,"")
"RTN","MAGVAG01",94,0)
 Q
"RTN","MAGVAG02")
0^56^B77173020
"RTN","MAGVAG02",1,0)
MAGVAG02 ;WOIFO/NST - Utilities for RPC calls ; 11 Mar 2010 4:39 PM
"RTN","MAGVAG02",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAG02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAG02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAG02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAG02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAG02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAG02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAG02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAG02",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAG02",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAG02",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAG02",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAG02",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAG02",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG02",17,0)
 ;;
"RTN","MAGVAG02",18,0)
 Q
"RTN","MAGVAG02",19,0)
 ;
"RTN","MAGVAG02",20,0)
 ;*****  Get artifact values with key list from ARTIFACT file (#2006.916)
"RTN","MAGVAG02",21,0)
 ;       & ARTIFACT KEYLIST file (#2006.913) by artifact token
"RTN","MAGVAG02",22,0)
 ;       
"RTN","MAGVAG02",23,0)
 ; RPC:MAGVA GET ARTIFACT W KL
"RTN","MAGVAG02",24,0)
 ; 
"RTN","MAGVAG02",25,0)
 ; Input Parameters
"RTN","MAGVAG02",26,0)
 ; ================
"RTN","MAGVAG02",27,0)
 ; TOKEN = Artifact token
"RTN","MAGVAG02",28,0)
 ; 
"RTN","MAGVAG02",29,0)
 ; Return Values
"RTN","MAGVAG02",30,0)
 ; =============
"RTN","MAGVAG02",31,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG02",32,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG02",33,0)
 ;            MAGRY(1..n) XML based result in format
"RTN","MAGVAG02",34,0)
 ;            <?xml version="1.0" encoding="utf-8"?>
"RTN","MAGVAG02",35,0)
 ;            <artifacts>
"RTN","MAGVAG02",36,0)
 ;              <artifact
"RTN","MAGVAG02",37,0)
 ;                id=""
"RTN","MAGVAG02",38,0)
 ;                token=""
"RTN","MAGVAG02",39,0)
 ;                size=""
"RTN","MAGVAG02",40,0)
 ;                keyListFK=""
"RTN","MAGVAG02",41,0)
 ;                createdDateTime=""
"RTN","MAGVAG02",42,0)
 ;                lastAccessDateTime=""
"RTN","MAGVAG02",43,0)
 ;                crc="">
"RTN","MAGVAG02",44,0)
 ;                <keys>
"RTN","MAGVAG02",45,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",46,0)
 ;                   ...
"RTN","MAGVAG02",47,0)
 ;                  <key kvalue="" klevel=""/>
"RTN","MAGVAG02",48,0)
 ;                </keys>
"RTN","MAGVAG02",49,0)
 ;              </artifact>
"RTN","MAGVAG02",50,0)
 ;            </artifacts>
"RTN","MAGVAG02",51,0)
 ;  
"RTN","MAGVAG02",52,0)
GAKLT(MAGRY,TOKEN) ;  RPC [MAGVA GET ARTIFACT W KL]
"RTN","MAGVAG02",53,0)
 K MAGRY
"RTN","MAGVAG02",54,0)
 N RES,START
"RTN","MAGVAG02",55,0)
 D GETAIENT^MAGVAG02(.RES,TOKEN,"") ; Get not deleted Artifact IEN by Token
"RTN","MAGVAG02",56,0)
 I '$$ISOK^MAGVAF02(RES) S MAGRY(0)=RES Q
"RTN","MAGVAG02",57,0)
 S IEN=$$GETVAL^MAGVAF02(RES)
"RTN","MAGVAG02",58,0)
 S START=2 ; populate MAGRY starting with node 2
"RTN","MAGVAG02",59,0)
 D GAFTBYID^MAGVAG04(.MAGRY,IEN,START,"K")  ; Get the artifact with KeyList;
"RTN","MAGVAG02",60,0)
 D SETFTUCH^MAGVAF03(.MAGRY) ; set line 1 and two and the last one
"RTN","MAGVAG02",61,0)
 Q
"RTN","MAGVAG02",62,0)
 ;
"RTN","MAGVAG02",63,0)
 ;*****  Get artifact values with key list and artifact instance
"RTN","MAGVAG02",64,0)
 ;       from ARTIFACT file (#2006.916)
"RTN","MAGVAG02",65,0)
 ;       & ARTIFACT KEYLIST file (#2006.913) and ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAG02",66,0)
 ;       by artifact token
"RTN","MAGVAG02",67,0)
 ;       
"RTN","MAGVAG02",68,0)
 ; RPC:MAGVA GET A W KL AND AIS
"RTN","MAGVAG02",69,0)
 ; 
"RTN","MAGVAG02",70,0)
 ; Input Parameters
"RTN","MAGVAG02",71,0)
 ; ================
"RTN","MAGVAG02",72,0)
 ; TOKEN = Artifact token
"RTN","MAGVAG02",73,0)
 ; 
"RTN","MAGVAG02",74,0)
 ; Return Values
"RTN","MAGVAG02",75,0)
 ; =============
"RTN","MAGVAG02",76,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG02",77,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG02",78,0)
 ;            MAGRY(1..n) XML based result in format
"RTN","MAGVAG02",79,0)
 ;            <?xml version="1.0" encoding="utf-8"?>
"RTN","MAGVAG02",80,0)
 ;            <artifacts>
"RTN","MAGVAG02",81,0)
 ;              <artifact
"RTN","MAGVAG02",82,0)
 ;                id=""
"RTN","MAGVAG02",83,0)
 ;                token=""
"RTN","MAGVAG02",84,0)
 ;                size=""
"RTN","MAGVAG02",85,0)
 ;                keyListFK=""
"RTN","MAGVAG02",86,0)
 ;                createdDateTime=""
"RTN","MAGVAG02",87,0)
 ;                lastAccessDateTime=""
"RTN","MAGVAG02",88,0)
 ;                crc="">
"RTN","MAGVAG02",89,0)
 ;                <keys>
"RTN","MAGVAG02",90,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",91,0)
 ;                   ...
"RTN","MAGVAG02",92,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",93,0)
 ;                </keys>
"RTN","MAGVAG02",94,0)
 ;                <artifact Instances>
"RTN","MAGVAG02",95,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",96,0)
 ;                 ....
"RTN","MAGVAG02",97,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",98,0)
 ;                </artifact Instances>
"RTN","MAGVAG02",99,0)
 ;              </artifact>
"RTN","MAGVAG02",100,0)
 ;            </artifacts>
"RTN","MAGVAG02",101,0)
 ;  
"RTN","MAGVAG02",102,0)
GAKLAIST(MAGRY,TOKEN) ;  RPC [MAGVA GET A W KL AND AIS]
"RTN","MAGVAG02",103,0)
 K MAGRY
"RTN","MAGVAG02",104,0)
 N RES,START
"RTN","MAGVAG02",105,0)
 D GETAIENT^MAGVAG02(.RES,TOKEN,"") ; Get not deleted Artifact IEN by Token
"RTN","MAGVAG02",106,0)
 I '$$ISOK^MAGVAF02(RES) S MAGRY(0)=RES Q
"RTN","MAGVAG02",107,0)
 S IEN=$$GETVAL^MAGVAF02(RES)
"RTN","MAGVAG02",108,0)
 S START=2 ; populate MAGRY starting with node 2
"RTN","MAGVAG02",109,0)
 D GAFTBYID^MAGVAG04(.MAGRY,IEN,START,"KI")  ; Get the artifact with KeyList & Artifact Instance
"RTN","MAGVAG02",110,0)
 D SETFTUCH^MAGVAF03(.MAGRY) ; set line 1 and two and the last one
"RTN","MAGVAG02",111,0)
 Q
"RTN","MAGVAG02",112,0)
 ;
"RTN","MAGVAG02",113,0)
 ;*****  Get artifact values with key list and artifact instance
"RTN","MAGVAG02",114,0)
 ;       from ARTIFACT file (#2006.916)
"RTN","MAGVAG02",115,0)
 ;       & ARTIFACT KEYLIST file (#2006.913) and ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAG02",116,0)
 ;       by artifact PK (IEN)
"RTN","MAGVAG02",117,0)
 ;       
"RTN","MAGVAG02",118,0)
 ; RPC:MAGVA GET A W KL AND AIS BY PK
"RTN","MAGVAG02",119,0)
 ; 
"RTN","MAGVAG02",120,0)
 ; Input Parameters
"RTN","MAGVAG02",121,0)
 ; ================
"RTN","MAGVAG02",122,0)
 ; IEN = Artifact PK
"RTN","MAGVAG02",123,0)
 ; 
"RTN","MAGVAG02",124,0)
 ; Return Values
"RTN","MAGVAG02",125,0)
 ; =============
"RTN","MAGVAG02",126,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG02",127,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG02",128,0)
 ;            MAGRY(1..n) XML based result in format
"RTN","MAGVAG02",129,0)
 ;            <?xml version="1.0" encoding="utf-8"?>
"RTN","MAGVAG02",130,0)
 ;            <artifacts>
"RTN","MAGVAG02",131,0)
 ;              <artifact
"RTN","MAGVAG02",132,0)
 ;                id=""
"RTN","MAGVAG02",133,0)
 ;                token=""
"RTN","MAGVAG02",134,0)
 ;                size=""
"RTN","MAGVAG02",135,0)
 ;                keyListFK=""
"RTN","MAGVAG02",136,0)
 ;                createdDateTime=""
"RTN","MAGVAG02",137,0)
 ;                lastAccessDateTime=""
"RTN","MAGVAG02",138,0)
 ;                crc="">
"RTN","MAGVAG02",139,0)
 ;                <keys>
"RTN","MAGVAG02",140,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",141,0)
 ;                   ...
"RTN","MAGVAG02",142,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",143,0)
 ;                </keys>
"RTN","MAGVAG02",144,0)
 ;                <artifact Instances>
"RTN","MAGVAG02",145,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",146,0)
 ;                 ....
"RTN","MAGVAG02",147,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",148,0)
 ;                </artifact Instances>
"RTN","MAGVAG02",149,0)
 ;              </artifact>
"RTN","MAGVAG02",150,0)
 ;            </artifacts>
"RTN","MAGVAG02",151,0)
 ;  
"RTN","MAGVAG02",152,0)
GAKLAISP(MAGRY,IEN) ;  RPC [MAGVA GET A W KL AND AIS BY PK]
"RTN","MAGVAG02",153,0)
 N START
"RTN","MAGVAG02",154,0)
 K MAGRY
"RTN","MAGVAG02",155,0)
 ; Check whether artifact is deleted
"RTN","MAGVAG02",156,0)
 I $$ISAFTDEL^MAGVAG02(IEN) S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Artifact "_IEN_" is deleted" Q  ; skip deleted artifact
"RTN","MAGVAG02",157,0)
 S START=2 ; populate MAGRY starting with node 2
"RTN","MAGVAG02",158,0)
 D GAFTBYID^MAGVAG04(.MAGRY,IEN,START,"KI")  ; Get the artifact with KeyList and Artifact Instance
"RTN","MAGVAG02",159,0)
 D SETFTUCH^MAGVAF03(.MAGRY) ; set lines 0,1, and 2 and the last one
"RTN","MAGVAG02",160,0)
 Q
"RTN","MAGVAG02",161,0)
 ;
"RTN","MAGVAG02",162,0)
 ;*****  Get artifact values with keylist and artifact instance and
"RTN","MAGVAG02",163,0)
 ;       artifact retention policy and fulfillment
"RTN","MAGVAG02",164,0)
 ;       from ARTIFACT file (#2006.916)
"RTN","MAGVAG02",165,0)
 ;       & ARTIFACT KEYLIST file (#2006.913), ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAG02",166,0)
 ;       ARTIFACT RETENTION POLICY file (#2006.921)
"RTN","MAGVAG02",167,0)
 ;       and RETENTION POLICY FULFILLMENT file (#2006.922)
"RTN","MAGVAG02",168,0)
 ;       by artifact token
"RTN","MAGVAG02",169,0)
 ;       
"RTN","MAGVAG02",170,0)
 ; RPC:MAGVA GET A AIS ARPS AND RPFFS
"RTN","MAGVAG02",171,0)
 ; 
"RTN","MAGVAG02",172,0)
 ; Input Parameters
"RTN","MAGVAG02",173,0)
 ; ================
"RTN","MAGVAG02",174,0)
 ; TOKEN = Artifact token
"RTN","MAGVAG02",175,0)
 ; 
"RTN","MAGVAG02",176,0)
 ; Return Values
"RTN","MAGVAG02",177,0)
 ; =============
"RTN","MAGVAG02",178,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG02",179,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG02",180,0)
 ;            MAGRY(1..n) XML based result in format
"RTN","MAGVAG02",181,0)
 ;            <?xml version="1.0" encoding="utf-8"?>
"RTN","MAGVAG02",182,0)
 ;            <artifacts>
"RTN","MAGVAG02",183,0)
 ;              <artifact
"RTN","MAGVAG02",184,0)
 ;                id=""
"RTN","MAGVAG02",185,0)
 ;                token=""
"RTN","MAGVAG02",186,0)
 ;                size=""
"RTN","MAGVAG02",187,0)
 ;                keyListFK=""
"RTN","MAGVAG02",188,0)
 ;                createdDateTime=""
"RTN","MAGVAG02",189,0)
 ;                lastAccessDateTime=""
"RTN","MAGVAG02",190,0)
 ;                crc="">
"RTN","MAGVAG02",191,0)
 ;                <keys>
"RTN","MAGVAG02",192,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",193,0)
 ;                   ...
"RTN","MAGVAG02",194,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",195,0)
 ;                </keys>
"RTN","MAGVAG02",196,0)
 ;                <artifact Instances>
"RTN","MAGVAG02",197,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",198,0)
 ;                 ....
"RTN","MAGVAG02",199,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",200,0)
 ;                </artifact Instances>
"RTN","MAGVAG02",201,0)
 ;                <artifact Retention policy>
"RTN","MAGVAG02",202,0)
 ;                 <artifact Retention policy fulfillments>
"RTN","MAGVAG02",203,0)
 ;                   <artifact Retention policy fulfillment>
"RTN","MAGVAG02",204,0)
 ;                   ...
"RTN","MAGVAG02",205,0)
 ;                   <artifact Retention policy fulfillment>
"RTN","MAGVAG02",206,0)
 ;                   ...
"RTN","MAGVAG02",207,0)
 ;                 </artifact Retention policy fulfillments>
"RTN","MAGVAG02",208,0)
 ;                </artifact Retention policy>
"RTN","MAGVAG02",209,0)
 ;              </artifact>
"RTN","MAGVAG02",210,0)
 ;            </artifacts>
"RTN","MAGVAG02",211,0)
 ;  
"RTN","MAGVAG02",212,0)
GAKISRPT(MAGRY,TOKEN) ;  RPC [MAGVA GET A AIS ARPS AND RPFFS]
"RTN","MAGVAG02",213,0)
 K MAGRY
"RTN","MAGVAG02",214,0)
 N RES,START,IEN
"RTN","MAGVAG02",215,0)
 D GETAIENT^MAGVAG02(.RES,TOKEN,"") ; Get note deleted Artifact IEN by Token
"RTN","MAGVAG02",216,0)
 I '$$ISOK^MAGVAF02(RES) S MAGRY(0)=RES Q
"RTN","MAGVAG02",217,0)
 S IEN=$$GETVAL^MAGVAF02(RES)
"RTN","MAGVAG02",218,0)
 S START=2 ; populate MAGRY starting with node 2
"RTN","MAGVAG02",219,0)
 ; Get the artifact with KeyList, Artifact Instance & Retention Policy and Fulfillment
"RTN","MAGVAG02",220,0)
 D GAFTBYID^MAGVAG04(.MAGRY,IEN,START,"KIR")
"RTN","MAGVAG02",221,0)
 D SETFTUCH^MAGVAF03(.MAGRY) ; set line 1 and two and the last one
"RTN","MAGVAG02",222,0)
 Q
"RTN","MAGVAG02",223,0)
 ;
"RTN","MAGVAG02",224,0)
 ; -- Get Artifact IEN by TOKEN
"RTN","MAGVAG02",225,0)
 ;
"RTN","MAGVAG02",226,0)
 ; Input parameters
"RTN","MAGVAG02",227,0)
 ; ================
"RTN","MAGVAG02",228,0)
 ; TOKEN = Artifact token
"RTN","MAGVAG02",229,0)
 ; FLAGS =
"RTN","MAGVAG02",230,0)
 ;        [D]  - Include deleted artifact
"RTN","MAGVAG02",231,0)
 ;   
"RTN","MAGVAG02",232,0)
 ; Return Values
"RTN","MAGVAG02",233,0)
 ; =============
"RTN","MAGVAG02",234,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAG02",235,0)
 ; if success MAGRY = Success status^^IEN - IEN of the Artifact
"RTN","MAGVAG02",236,0)
 ; 
"RTN","MAGVAG02",237,0)
GETAIENT(MAGRY,TOKEN,FLAGS) ;
"RTN","MAGVAG02",238,0)
 I $G(TOKEN)="" S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Token is empty." Q
"RTN","MAGVAG02",239,0)
 N FILE,IEN,DELAPP
"RTN","MAGVAG02",240,0)
 S FILE=2006.916
"RTN","MAGVAG02",241,0)
 ; Get TOKEN IEN 
"RTN","MAGVAG02",242,0)
 S IEN=$O(^MAGV(FILE,"B",TOKEN,""))
"RTN","MAGVAG02",243,0)
 I IEN="" S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Token not found." Q
"RTN","MAGVAG02",244,0)
 I FLAGS["D" S MAGRY=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_IEN Q
"RTN","MAGVAG02",245,0)
 ;
"RTN","MAGVAG02",246,0)
 ; Check whether Artifact is deleted
"RTN","MAGVAG02",247,0)
 S DELAPP=$$GET1^DIQ(FILE,IEN_",","DELETING APPLICATION","I")
"RTN","MAGVAG02",248,0)
 I $$ISAFTDEL^MAGVAG02(IEN) S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"ARTIFACT TOKEN "_TOKEN_" is deleted" Q
"RTN","MAGVAG02",249,0)
 S MAGRY=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_IEN Q
"RTN","MAGVAG02",250,0)
 Q
"RTN","MAGVAG02",251,0)
 ; -- Is Artifact deleted
"RTN","MAGVAG02",252,0)
 ;
"RTN","MAGVAG02",253,0)
 ; Input parameters
"RTN","MAGVAG02",254,0)
 ; ================
"RTN","MAGVAG02",255,0)
 ; IEN = IEN in ARTIFACT file (#2006.916)
"RTN","MAGVAG02",256,0)
 ;   
"RTN","MAGVAG02",257,0)
 ; Return Values
"RTN","MAGVAG02",258,0)
 ; =============
"RTN","MAGVAG02",259,0)
 ; 1 - artifact is deleted
"RTN","MAGVAG02",260,0)
 ; 0 - artifact is not deleted
"RTN","MAGVAG02",261,0)
 ; 
"RTN","MAGVAG02",262,0)
ISAFTDEL(IEN) ; Is Artifact deleted
"RTN","MAGVAG02",263,0)
 N DELAPP
"RTN","MAGVAG02",264,0)
 ; Check whether Artifact is deleted
"RTN","MAGVAG02",265,0)
 S DELAPP=$$GET1^DIQ(2006.916,IEN_",","DELETING APPLICATION","I")
"RTN","MAGVAG02",266,0)
 Q DELAPP'=""
"RTN","MAGVAG02",267,0)
 ;
"RTN","MAGVAG02",268,0)
 ;*****  Get artifact values with key list and artifact instance
"RTN","MAGVAG02",269,0)
 ;       from ARTIFACT file (#2006.916)
"RTN","MAGVAG02",270,0)
 ;       & ARTIFACT KEYLIST file (#2006.913) and ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAG02",271,0)
 ;       by artifact KEYLIST
"RTN","MAGVAG02",272,0)
 ;       
"RTN","MAGVAG02",273,0)
 ; RPC:MAGVA GET A W KL AND AIS BY KL
"RTN","MAGVAG02",274,0)
 ; 
"RTN","MAGVAG02",275,0)
 ; Input Parameters
"RTN","MAGVAG02",276,0)
 ; ================
"RTN","MAGVAG02",277,0)
 ; KLIST(1) = First level Key
"RTN","MAGVAG02",278,0)
 ; KLIST(2) = Second level Key
"RTN","MAGVAG02",279,0)
 ;   ...
"RTN","MAGVAG02",280,0)
 ; KLIST(N) = N-th level Key
"RTN","MAGVAG02",281,0)
 ;
"RTN","MAGVAG02",282,0)
 ; Any level is optional
"RTN","MAGVAG02",283,0)
 ;  
"RTN","MAGVAG02",284,0)
 ; Return Values
"RTN","MAGVAG02",285,0)
 ; =============
"RTN","MAGVAG02",286,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG02",287,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG02",288,0)
 ;            MAGRY(1..n) XML based result in format
"RTN","MAGVAG02",289,0)
 ;            <?xml version="1.0" encoding="utf-8"?>
"RTN","MAGVAG02",290,0)
 ;            <artifacts>
"RTN","MAGVAG02",291,0)
 ;              <artifact
"RTN","MAGVAG02",292,0)
 ;                id=""
"RTN","MAGVAG02",293,0)
 ;                token=""
"RTN","MAGVAG02",294,0)
 ;                size=""
"RTN","MAGVAG02",295,0)
 ;                keyListFK=""
"RTN","MAGVAG02",296,0)
 ;                createdDateTime=""
"RTN","MAGVAG02",297,0)
 ;                lastAccessDateTime=""
"RTN","MAGVAG02",298,0)
 ;                crc="">
"RTN","MAGVAG02",299,0)
 ;                <keys>
"RTN","MAGVAG02",300,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",301,0)
 ;                   ...
"RTN","MAGVAG02",302,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG02",303,0)
 ;                </keys>
"RTN","MAGVAG02",304,0)
 ;                <artifact Instances>
"RTN","MAGVAG02",305,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",306,0)
 ;                 ....
"RTN","MAGVAG02",307,0)
 ;                 <artifact Instance>
"RTN","MAGVAG02",308,0)
 ;                </artifact Instances>
"RTN","MAGVAG02",309,0)
 ;              </artifact>
"RTN","MAGVAG02",310,0)
 ;              ...
"RTN","MAGVAG02",311,0)
 ;            </artifacts>
"RTN","MAGVAG02",312,0)
 ;  
"RTN","MAGVAG02",313,0)
GAKLAISK(MAGRY,KLIST) ;  RPC [MAGVA GET A W KL AND AIS BY KL]
"RTN","MAGVAG02",314,0)
 K MAGRY
"RTN","MAGVAG02",315,0)
 N KLIENS,ARTIFACT
"RTN","MAGVAG02",316,0)
 N FILE,IEN,AIEN,J,CNT,START,OUT,ERR,ERR2,MAGRESA
"RTN","MAGVAG02",317,0)
 S FILE=2006.916  ; ARTIFACT file
"RTN","MAGVAG02",318,0)
 D FINDKEYS^MAGVAKL1(.KLIENS,.KLIST)  ; Get a list with IENs that meets the KLIST values
"RTN","MAGVAG02",319,0)
 I '$$ISOK^MAGVAF02(KLIENS(0)) S MAGRY(0)=KLIENS(0) Q  ; Error found
"RTN","MAGVAG02",320,0)
 K KLIENS(0)  ; Delete result internal info
"RTN","MAGVAG02",321,0)
 S START=2 ; populate MAGRY starting with node 2
"RTN","MAGVAG02",322,0)
 S IEN=""
"RTN","MAGVAG02",323,0)
 S ERR2=0
"RTN","MAGVAG02",324,0)
 S CNT=0
"RTN","MAGVAG02",325,0)
 S (MAGRY(1),MAGRY(2))=""  ; place holders
"RTN","MAGVAG02",326,0)
 F  Q:ERR2  S IEN=$O(KLIENS(IEN)) Q:IEN=""  D
"RTN","MAGVAG02",327,0)
 . K OUT,ERR
"RTN","MAGVAG02",328,0)
 . D FIND^DIC(FILE,"","@","QX",IEN,"","KL","","","OUT","ERR")  ; 
"RTN","MAGVAG02",329,0)
 . I $D(ERR("DIERR")) D  Q
"RTN","MAGVAG02",330,0)
 . . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAG02",331,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting token IEN: "_MAGRESA(1) Q  ; Error getting the IEN
"RTN","MAGVAG02",332,0)
 . . S ERR2=1
"RTN","MAGVAG02",333,0)
 . . Q
"RTN","MAGVAG02",334,0)
 . K ARTIFACT
"RTN","MAGVAG02",335,0)
 . S J=""
"RTN","MAGVAG02",336,0)
 . F  S J=$O(OUT("DILIST","2",J)) Q:J=""  D
"RTN","MAGVAG02",337,0)
 . . S AIEN=OUT("DILIST","2",J)
"RTN","MAGVAG02",338,0)
 . . Q:$$ISAFTDEL^MAGVAG02(AIEN)  ; skip deleted artifact
"RTN","MAGVAG02",339,0)
 . . D GAFTBYID^MAGVAG04(.ARTIFACT,AIEN,START,"KI")  ; Get the artifact with KeyList & Artifact Instance
"RTN","MAGVAG02",340,0)
 . . I '$$ISOK^MAGVAF02(ARTIFACT(0)) D  Q  ; error found - quit 
"RTN","MAGVAG02",341,0)
 . . . K MAGRY
"RTN","MAGVAG02",342,0)
 . . . S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting artifact " Q  ; Error getting the values
"RTN","MAGVAG02",343,0)
 . . . S ERR2=1
"RTN","MAGVAG02",344,0)
 . . . Q
"RTN","MAGVAG02",345,0)
 . . K ARTIFACT(0)  ; delete zero node record - it is for information only
"RTN","MAGVAG02",346,0)
 . . S CNT=$$APP2ARR^MAGVAF04(.MAGRY,.ARTIFACT)  ; Append ARTIFACT to result
"RTN","MAGVAG02",347,0)
 . . Q
"RTN","MAGVAG02",348,0)
 . Q
"RTN","MAGVAG02",349,0)
 I 'CNT D  Q  ; No records found. Make an empty result and quit
"RTN","MAGVAG02",350,0)
 . D EMPTYXML^MAGVAF03(.MAGRY,FILE)
"RTN","MAGVAG02",351,0)
 . Q
"RTN","MAGVAG02",352,0)
 ;
"RTN","MAGVAG02",353,0)
 S MAGRY(0)=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_CNT
"RTN","MAGVAG02",354,0)
 D SETFTUCH^MAGVAF03(.MAGRY) ; set line 1 and two and the last one
"RTN","MAGVAG02",355,0)
 Q
"RTN","MAGVAG03")
0^57^B74285507
"RTN","MAGVAG03",1,0)
MAGVAG03 ;WOIFO/NST - Write Location calls ; 13 Feb 2012 4:23 PM
"RTN","MAGVAG03",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAG03",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAG03",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG03",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAG03",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAG03",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAG03",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAG03",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAG03",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAG03",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAG03",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAG03",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAG03",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAG03",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAG03",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG03",17,0)
 ;;
"RTN","MAGVAG03",18,0)
 Q
"RTN","MAGVAG03",19,0)
 ;*****  Returns Current Write Location by Station number or Institution IEN
"RTN","MAGVAG03",20,0)
 ;       
"RTN","MAGVAG03",21,0)
 ; RPC: MAGVA GET CWL
"RTN","MAGVAG03",22,0)
 ; 
"RTN","MAGVAG03",23,0)
 ; Input Parameters
"RTN","MAGVAG03",24,0)
 ; ================
"RTN","MAGVAG03",25,0)
 ; 
"RTN","MAGVAG03",26,0)
 ; MAGPARAM("STATION NUMBER") = STATION NUMBER field (#4,99) in INSTITUTION file (#4)
"RTN","MAGVAG03",27,0)
 ; or
"RTN","MAGVAG03",28,0)
 ; MAGPARAM("INSTITUTION IEN") = IEN in INSTITUTION file (#4)
"RTN","MAGVAG03",29,0)
 ; 
"RTN","MAGVAG03",30,0)
 ; Return Values
"RTN","MAGVAG03",31,0)
 ; =============
"RTN","MAGVAG03",32,0)
 ; 
"RTN","MAGVAG03",33,0)
 ; if error found during execution
"RTN","MAGVAG03",34,0)
 ;   MAGRY(0) = Failure status ^ Error message
"RTN","MAGVAG03",35,0)
 ; if success
"RTN","MAGVAG03",36,0)
 ;   MAGRY(0) = Success status ^^1
"RTN","MAGVAG03",37,0)
 ;   MAGRY(1) = NETWORK LOCATION IEN ^ PHYSICAL REFERENCE ^ USER NAME ^ PASSWORD ^ PLACE
"RTN","MAGVAG03",38,0)
 ;   MAGRY(2) = IEN in NETWORK LOCATION file (#2005.2) ^ PHYSICAL REFERENCE (WRITE LOCATION) (#2005.2,1)
"RTN","MAGVAG03",39,0)
 ;              ^ USER NAME (#2005.2,15) ^ PASSWORD (#2005.2,16) ^ IEN in IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAG03",40,0)
 ;
"RTN","MAGVAG03",41,0)
GETCWL(MAGRY,MAGPARAM) ; RPC [MAGVA GET CWL]
"RTN","MAGVAG03",42,0)
 N PLACE ; IEN in INSTITUTION FILE (#4)
"RTN","MAGVAG03",43,0)
 N MAGREF,IENS,FILE,OUT,ERR
"RTN","MAGVAG03",44,0)
 N RESDEL
"RTN","MAGVAG03",45,0)
 N MAGPLC
"RTN","MAGVAG03",46,0)
 K MAGRY
"RTN","MAGVAG03",47,0)
 S RESDEL=$$RESDEL^MAGVAF02()  ; Result delimiter
"RTN","MAGVAG03",48,0)
 S PLACE=0
"RTN","MAGVAG03",49,0)
 I $G(MAGPARAM("INSTITUTION IEN"))'="" D  Q:'PLACE  ; Error - MAGRY(0) is already set
"RTN","MAGVAG03",50,0)
 . S PLACE=+MAGPARAM("INSTITUTION IEN")
"RTN","MAGVAG03",51,0)
 . I 'PLACE D
"RTN","MAGVAG03",52,0)
 . . N MSG
"RTN","MAGVAG03",53,0)
 . . S MSG="Invalid INSTITUTION IEN"
"RTN","MAGVAG03",54,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",55,0)
 . . Q
"RTN","MAGVAG03",56,0)
 . Q
"RTN","MAGVAG03",57,0)
 I $G(MAGPARAM("STATION NUMBER"))'="" D  Q:'PLACE  ; Error - MAGRY(0) is already set
"RTN","MAGVAG03",58,0)
 . S PLACE=$$IEN^XUAF4(MAGPARAM("STATION NUMBER")) ; IA # 2171 find the Institution IEN
"RTN","MAGVAG03",59,0)
 . I 'PLACE  D
"RTN","MAGVAG03",60,0)
 . . N MSG
"RTN","MAGVAG03",61,0)
 . . S MSG="Invalid STATION NUMBER: "_MAGPARAM("STATION NUMBER")
"RTN","MAGVAG03",62,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",63,0)
 . . Q
"RTN","MAGVAG03",64,0)
 . Q
"RTN","MAGVAG03",65,0)
 I 'PLACE D  Q  ; Error - MAGRY(0) is already set
"RTN","MAGVAG03",66,0)
 . N MSG
"RTN","MAGVAG03",67,0)
 . S MSG="STATION NUMBER or INSTITUTION IEN is required"
"RTN","MAGVAG03",68,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",69,0)
 . Q
"RTN","MAGVAG03",70,0)
 ;
"RTN","MAGVAG03",71,0)
 S MAGPLC=$$PLACE^MAGBAPI(PLACE)  ; Get IEN of a record in IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAG03",72,0)
 S MAGREF=$$GET1^DIQ(2006.1,MAGPLC,.03,"I") ; IMAGE NETWORK WRITE LOCATION 
"RTN","MAGVAG03",73,0)
 I 'MAGREF D  Q
"RTN","MAGVAG03",74,0)
 . N MSG
"RTN","MAGVAG03",75,0)
 . S MSG="Need WRITE LOCATION in IMAGING SITE PARAMETERS file (#2006.1). Call IRM."
"RTN","MAGVAG03",76,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",77,0)
 . Q
"RTN","MAGVAG03",78,0)
 ;
"RTN","MAGVAG03",79,0)
 I '$$GET1^DIQ(2005.2,MAGREF,5,"I") D  Q  ; Operational status
"RTN","MAGVAG03",80,0)
 . N MSG
"RTN","MAGVAG03",81,0)
 . S MSG="The Server that you are writing to is off-line.  Call IRM"
"RTN","MAGVAG03",82,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",83,0)
 . Q
"RTN","MAGVAG03",84,0)
 ;
"RTN","MAGVAG03",85,0)
 S IENS=MAGREF_","
"RTN","MAGVAG03",86,0)
 S FILE=2005.2
"RTN","MAGVAG03",87,0)
 D GETS^DIQ(FILE,IENS,"1;15;16","I","OUT","ERR")
"RTN","MAGVAG03",88,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAG03",89,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAG03",90,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the values
"RTN","MAGVAG03",91,0)
 . Q
"RTN","MAGVAG03",92,0)
 ;
"RTN","MAGVAG03",93,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_1
"RTN","MAGVAG03",94,0)
 S MAGRY(1)="NETWORK LOCATION IEN"_RESDEL_"PHYSICAL REFERENCE"
"RTN","MAGVAG03",95,0)
 S MAGRY(1)=MAGRY(1)_RESDEL_"USER NAME"_RESDEL_"PASSWORD"_RESDEL_"PLACE"
"RTN","MAGVAG03",96,0)
 S MAGRY(2)=MAGREF_RESDEL_OUT(FILE,IENS,1,"I")
"RTN","MAGVAG03",97,0)
 S MAGRY(2)=MAGRY(2)_RESDEL_OUT(FILE,IENS,15,"I")_RESDEL_OUT(FILE,IENS,16,"I")_RESDEL_MAGPLC
"RTN","MAGVAG03",98,0)
 Q
"RTN","MAGVAG03",99,0)
 ;
"RTN","MAGVAG03",100,0)
 ;*****  Returns Jukebox Write Location by Station number or Institution IEN
"RTN","MAGVAG03",101,0)
 ;       
"RTN","MAGVAG03",102,0)
 ; RPC: MAGVA GET JUKEBOX WL
"RTN","MAGVAG03",103,0)
 ; 
"RTN","MAGVAG03",104,0)
 ; Input Parameters
"RTN","MAGVAG03",105,0)
 ; ================
"RTN","MAGVAG03",106,0)
 ; 
"RTN","MAGVAG03",107,0)
 ; MAGPARAM("STATION NUMBER") = STATION NUMBER field (#4,99) in INSTITUTION file (#4)
"RTN","MAGVAG03",108,0)
 ; or
"RTN","MAGVAG03",109,0)
 ; MAGPARAM("INSTITUTION IEN") = IEN in INSTITUTION file (#4)
"RTN","MAGVAG03",110,0)
 ; 
"RTN","MAGVAG03",111,0)
 ; Return Values
"RTN","MAGVAG03",112,0)
 ; =============
"RTN","MAGVAG03",113,0)
 ; 
"RTN","MAGVAG03",114,0)
 ; if error found during execution
"RTN","MAGVAG03",115,0)
 ;   MAGRY(0) = Failure status ^ Error message
"RTN","MAGVAG03",116,0)
 ; if success
"RTN","MAGVAG03",117,0)
 ;   MAGRY(0) = Success status ^^1
"RTN","MAGVAG03",118,0)
 ;   MAGRY(1) = NETWORK LOCATION IEN ^ PHYSICAL REFERENCE ^ USER NAME ^ PASSWORD ^ PLACE
"RTN","MAGVAG03",119,0)
 ;   MAGRY(2) = IEN in NETWORK LOCATION file (#2005.2) ^ PHYSICAL REFERENCE (WRITE LOCATION) (#2005.2,1)
"RTN","MAGVAG03",120,0)
 ;              ^ USER NAME (#2005.2,15) ^ PASSWORD (#2005.2,16) ^ IEN in IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAG03",121,0)
 ;
"RTN","MAGVAG03",122,0)
GETJBXWL(MAGRY,MAGPARAM) ; RPC [MAGVA GET JUKEBOX WL]
"RTN","MAGVAG03",123,0)
 N PLACE ; IEN in INSTITUTION FILE (#4)
"RTN","MAGVAG03",124,0)
 N MAGREF,IENS,FILE,OUT,ERR
"RTN","MAGVAG03",125,0)
 N RESDEL
"RTN","MAGVAG03",126,0)
 N MAGPLC
"RTN","MAGVAG03",127,0)
 K MAGRY
"RTN","MAGVAG03",128,0)
 S RESDEL=$$RESDEL^MAGVAF02()  ; Result delimiter
"RTN","MAGVAG03",129,0)
 S PLACE=0
"RTN","MAGVAG03",130,0)
 I $G(MAGPARAM("INSTITUTION IEN"))'="" D  Q:'PLACE  ; Error - MAGRY(0) is already set
"RTN","MAGVAG03",131,0)
 . S PLACE=+MAGPARAM("INSTITUTION IEN")
"RTN","MAGVAG03",132,0)
 . I 'PLACE D
"RTN","MAGVAG03",133,0)
 . . N MSG
"RTN","MAGVAG03",134,0)
 . . S MSG="Invalid INSTITUTION IEN"
"RTN","MAGVAG03",135,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",136,0)
 . . Q
"RTN","MAGVAG03",137,0)
 . Q
"RTN","MAGVAG03",138,0)
 I $G(MAGPARAM("STATION NUMBER"))'="" D  Q:'PLACE  ; Error - MAGRY(0) is already set
"RTN","MAGVAG03",139,0)
 . S PLACE=$$IEN^XUAF4(MAGPARAM("STATION NUMBER")) ; IA # 2171 find the Institution IEN
"RTN","MAGVAG03",140,0)
 . I 'PLACE  D
"RTN","MAGVAG03",141,0)
 . . N MSG
"RTN","MAGVAG03",142,0)
 . . S MSG="Invalid STATION NUMBER: "_MAGPARAM("STATION NUMBER")
"RTN","MAGVAG03",143,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",144,0)
 . . Q
"RTN","MAGVAG03",145,0)
 . Q
"RTN","MAGVAG03",146,0)
 I 'PLACE D  Q  ; Error - MAGRY(0) is already set
"RTN","MAGVAG03",147,0)
 . N MSG
"RTN","MAGVAG03",148,0)
 . S MSG="STATION NUMBER or INSTITUTION IEN is required"
"RTN","MAGVAG03",149,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",150,0)
 . Q
"RTN","MAGVAG03",151,0)
 ;
"RTN","MAGVAG03",152,0)
 S MAGPLC=$$PLACE^MAGBAPI(PLACE) ; Get IEN in IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAG03",153,0)
 S MAGREF=$$GET1^DIQ(2006.1,MAGPLC,2.01,"I") ; JUKEBOX WRITE LOCATION
"RTN","MAGVAG03",154,0)
 I 'MAGREF D  Q
"RTN","MAGVAG03",155,0)
 . N MSG
"RTN","MAGVAG03",156,0)
 . S MSG="Need WRITE LOCATION in IMAGING SITE PARAMETERS file (#2006.1). Call IRM."
"RTN","MAGVAG03",157,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",158,0)
 . Q
"RTN","MAGVAG03",159,0)
 ;
"RTN","MAGVAG03",160,0)
 I '$$GET1^DIQ(2005.2,MAGREF,5,"I") D  Q  ; Operational status
"RTN","MAGVAG03",161,0)
 . N MSG
"RTN","MAGVAG03",162,0)
 . S MSG="The Server that you are writing to is off-line.  Call IRM"
"RTN","MAGVAG03",163,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",164,0)
 . Q
"RTN","MAGVAG03",165,0)
 ;
"RTN","MAGVAG03",166,0)
 S IENS=MAGREF_","
"RTN","MAGVAG03",167,0)
 S FILE=2005.2
"RTN","MAGVAG03",168,0)
 D GETS^DIQ(FILE,IENS,"1;15;16","I","OUT","ERR") I $D(ERR("DIERR")) D  Q
"RTN","MAGVAG03",169,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAG03",170,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the values
"RTN","MAGVAG03",171,0)
 . Q
"RTN","MAGVAG03",172,0)
 ;
"RTN","MAGVAG03",173,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_1
"RTN","MAGVAG03",174,0)
 S MAGRY(1)="NETWORK LOCATION IEN"_RESDEL_"PHYSICAL REFERENCE"
"RTN","MAGVAG03",175,0)
 S MAGRY(1)=MAGRY(1)_RESDEL_"USER NAME"_RESDEL_"PASSWORD"_RESDEL_"PLACE"
"RTN","MAGVAG03",176,0)
 S MAGRY(2)=MAGREF_RESDEL_OUT(FILE,IENS,1,"I")
"RTN","MAGVAG03",177,0)
 S MAGRY(2)=MAGRY(2)_RESDEL_OUT(FILE,IENS,15,"I")_RESDEL_OUT(FILE,IENS,16,"I")_RESDEL_MAGPLC
"RTN","MAGVAG03",178,0)
 Q
"RTN","MAGVAG03",179,0)
 ;
"RTN","MAGVAG03",180,0)
 ;*****  Returns PHYSICAL REFERENCE (WRITE LOCATION)
"RTN","MAGVAG03",181,0)
 ;               USER NAME, PASSWORD, OPERATIONAL STATUS and PLACE
"RTN","MAGVAG03",182,0)
 ;       by IEN in NETWORK LOCATION file (#2005.2)
"RTN","MAGVAG03",183,0)
 ;       
"RTN","MAGVAG03",184,0)
 ; RPC: MAGVA GET NET LOC DETAILS
"RTN","MAGVAG03",185,0)
 ; 
"RTN","MAGVAG03",186,0)
 ; Input Parameters
"RTN","MAGVAG03",187,0)
 ; ================
"RTN","MAGVAG03",188,0)
 ; 
"RTN","MAGVAG03",189,0)
 ; NLOCIEN = IEN in NETWORK LOCATION file (#2005.2) 
"RTN","MAGVAG03",190,0)
 ; 
"RTN","MAGVAG03",191,0)
 ; Return Values
"RTN","MAGVAG03",192,0)
 ; =============
"RTN","MAGVAG03",193,0)
 ; 
"RTN","MAGVAG03",194,0)
 ; if error found during execution
"RTN","MAGVAG03",195,0)
 ;   MAGRY(0) = Failure status ^ Error message
"RTN","MAGVAG03",196,0)
 ; if success
"RTN","MAGVAG03",197,0)
 ;   MAGRY(0) = Success status ^^1
"RTN","MAGVAG03",198,0)
 ;   MAGRY(1) = PHYSICAL REFERENCE ^ USER NAME ^ PASSWORD ^ OPERATIONAL STATUS ^ PLACE
"RTN","MAGVAG03",199,0)
 ;   MAGRY(2) = PHYSICAL REFERENCE (WRITE LOCATION) (#2005.2,1)
"RTN","MAGVAG03",200,0)
 ;              ^ USER NAME (#2005.2,15) ^ PASSWORD (#2005.2,16)
"RTN","MAGVAG03",201,0)
 ;              ^ OPERATIONAL STATUS (#2005.2,5) ^ PLACE (#2005.2,.04)
"RTN","MAGVAG03",202,0)
 ;
"RTN","MAGVAG03",203,0)
GETNLOCD(MAGRY,NLOCIEN) ; RPC [MAGVA GET NET LOC DETAILS]
"RTN","MAGVAG03",204,0)
 N RESDEL
"RTN","MAGVAG03",205,0)
 N IENS,FILE,OUT,ERR,MAGRESA
"RTN","MAGVAG03",206,0)
 K MAGRY
"RTN","MAGVAG03",207,0)
 S RESDEL=$$RESDEL^MAGVAF02()  ; Result delimiter
"RTN","MAGVAG03",208,0)
 I 'NLOCIEN D  Q
"RTN","MAGVAG03",209,0)
 . N MSG
"RTN","MAGVAG03",210,0)
 . S MSG="NETWORK LOCATION IEN is required."
"RTN","MAGVAG03",211,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_MSG
"RTN","MAGVAG03",212,0)
 . Q
"RTN","MAGVAG03",213,0)
 ; 
"RTN","MAGVAG03",214,0)
 S IENS=NLOCIEN_","
"RTN","MAGVAG03",215,0)
 S FILE=2005.2
"RTN","MAGVAG03",216,0)
 D GETS^DIQ(FILE,IENS,"1;15;16;5;.04","I","OUT","ERR")
"RTN","MAGVAG03",217,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAG03",218,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAG03",219,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the values
"RTN","MAGVAG03",220,0)
 . Q
"RTN","MAGVAG03",221,0)
 ;
"RTN","MAGVAG03",222,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_1
"RTN","MAGVAG03",223,0)
 S MAGRY(1)="PHYSICAL REFERENCE"_RESDEL_"USER NAME"_RESDEL_"PASSWORD"_RESDEL_"OPERATIONAL STATUS"_RESDEL_"PLACE"
"RTN","MAGVAG03",224,0)
 S MAGRY(2)=OUT(FILE,IENS,1,"I")_RESDEL_OUT(FILE,IENS,15,"I")_RESDEL_OUT(FILE,IENS,16,"I")
"RTN","MAGVAG03",225,0)
 S MAGRY(2)=MAGRY(2)_RESDEL_OUT(FILE,IENS,5,"I")_RESDEL_OUT(FILE,IENS,.04,"I")
"RTN","MAGVAG03",226,0)
 Q
"RTN","MAGVAG03",227,0)
 ;
"RTN","MAGVAG03",228,0)
 ;*****  Returns information from IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGVAG03",229,0)
 ;       
"RTN","MAGVAG03",230,0)
 ; RPC: MAGVA GET ALL SITE PARAM IDS
"RTN","MAGVAG03",231,0)
 ; 
"RTN","MAGVAG03",232,0)
 ; Return Values
"RTN","MAGVAG03",233,0)
 ; =============
"RTN","MAGVAG03",234,0)
 ; 
"RTN","MAGVAG03",235,0)
 ; if error found during execution
"RTN","MAGVAG03",236,0)
 ;   MAGRY(0) = Failure status ^ Error message
"RTN","MAGVAG03",237,0)
 ; if success
"RTN","MAGVAG03",238,0)
 ;   MAGRY(0) = Success status ^^#CNT - where #CNT is a number of records returned
"RTN","MAGVAG03",239,0)
 ;   MAGRY(1) = PK^Site IEN^Site Number^Site Name^Net UserName^Net Password
"RTN","MAGVAG03",240,0)
 ;   MAGRY(2) = IEN ^ Site IEN ^ Site Number ^ Site Name ^ Net UserName ^ Net Password
"RTN","MAGVAG03",241,0)
 ;
"RTN","MAGVAG03",242,0)
GALLISP(MAGRY) ; RPC [MAGVA GET ALL SITE PARAM IDS]
"RTN","MAGVAG03",243,0)
 N X,CNT,I,FILE,IENS,FIELDS,INSTIEN
"RTN","MAGVAG03",244,0)
 N OUT,ERR,MAGRESA
"RTN","MAGVAG03",245,0)
 N RESDEL
"RTN","MAGVAG03",246,0)
 K MAGRY
"RTN","MAGVAG03",247,0)
 S RESDEL=$$RESDEL^MAGVAF02()  ; Result delimiter
"RTN","MAGVAG03",248,0)
 S FILE=2006.1
"RTN","MAGVAG03",249,0)
 S FIELDS=".01;50;51" ; INSTITUTION NAME; NET USER; NET PASSWORD  
"RTN","MAGVAG03",250,0)
 S IENS=""
"RTN","MAGVAG03",251,0)
 ; Index "B" is mixed with index "C" - get data from global
"RTN","MAGVAG03",252,0)
 S I=0
"RTN","MAGVAG03",253,0)
 S CNT=1
"RTN","MAGVAG03",254,0)
 F  S I=$O(^MAG(FILE,I)) Q:(+I)'>0  D
"RTN","MAGVAG03",255,0)
 . S IENS=I_","
"RTN","MAGVAG03",256,0)
 . K OUT,ERR
"RTN","MAGVAG03",257,0)
 . D GETS^DIQ(FILE,IENS,FIELDS,"I","OUT","ERR")
"RTN","MAGVAG03",258,0)
 . I $D(ERR("DIERR")) D  Q
"RTN","MAGVAG03",259,0)
 . . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAG03",260,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the values
"RTN","MAGVAG03",261,0)
 . . Q
"RTN","MAGVAG03",262,0)
 . S INSTIEN=OUT(FILE,IENS,.01,"I")
"RTN","MAGVAG03",263,0)
 . S X=$$NS^XUAF4(INSTIEN) ; IA # 2171 Institution Name and Station Number
"RTN","MAGVAG03",264,0)
 . S CNT=CNT+1
"RTN","MAGVAG03",265,0)
 . S MAGRY(CNT)=I_RESDEL_INSTIEN_RESDEL_$P(X,U,2)_RESDEL_$P(X,U,1)
"RTN","MAGVAG03",266,0)
 . S MAGRY(CNT)=MAGRY(CNT)_RESDEL_OUT(FILE,IENS,50,"I")_RESDEL_OUT(FILE,IENS,51,"I")
"RTN","MAGVAG03",267,0)
 . Q
"RTN","MAGVAG03",268,0)
 ;
"RTN","MAGVAG03",269,0)
 S X="IEN^Site IEN^Site Number^Site Name^Net UserName^Net Password"
"RTN","MAGVAG03",270,0)
 F I=1:1:$L(X,"^") S $P(MAGRY(1),RESDEL,I)=$P(X,"^",I)
"RTN","MAGVAG03",271,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_(CNT-1)
"RTN","MAGVAG03",272,0)
 Q
"RTN","MAGVAG04")
0^58^B66728252
"RTN","MAGVAG04",1,0)
MAGVAG04 ;WOIFO/NST - Utilities for RPC calls ; 13 Feb 2012 4:21 PM
"RTN","MAGVAG04",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAG04",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAG04",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG04",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAG04",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAG04",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAG04",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAG04",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAG04",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAG04",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAG04",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAG04",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAG04",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAG04",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAG04",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAG04",17,0)
 ;;
"RTN","MAGVAG04",18,0)
 Q
"RTN","MAGVAG04",19,0)
 ;
"RTN","MAGVAG04",20,0)
 ;*****  Get artifact values with key list from ARTIFACT file (#2006.916)
"RTN","MAGVAG04",21,0)
 ;       ARTIFACT KEYLIST file (#2006.913) and ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAG04",22,0)
 ;       and Artifact Retention Policies (#2006.921)
"RTN","MAGVAG04",23,0)
 ;       and Artifact Retention Policies Fulfillment (#2006.922)
"RTN","MAGVAG04",24,0)
 ;       by IEN
"RTN","MAGVAG04",25,0)
 ;       
"RTN","MAGVAG04",26,0)
 ; Input Parameters
"RTN","MAGVAG04",27,0)
 ; ================
"RTN","MAGVAG04",28,0)
 ; 
"RTN","MAGVAG04",29,0)
 ; IEN = Artifact IEN
"RTN","MAGVAG04",30,0)
 ; CNT = populate MAGRY starting with node CNT 
"RTN","MAGVAG04",31,0)
 ; FLAGS = To identify the type of detail to return
"RTN","MAGVAG04",32,0)
 ; 
"RTN","MAGVAG04",33,0)
 ;        I = Include Artifact Instance records
"RTN","MAGVAG04",34,0)
 ;        R = Include Artifact Retention Policies 
"RTN","MAGVAG04",35,0)
 ;            and Artifact Retention Policies Fulfillment
"RTN","MAGVAG04",36,0)
 ;  
"RTN","MAGVAG04",37,0)
 ; Return Values
"RTN","MAGVAG04",38,0)
 ; =============
"RTN","MAGVAG04",39,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG04",40,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG04",41,0)
 ;            MAGRY(1..n) XML based result in format
"RTN","MAGVAG04",42,0)
 ;              <artifact
"RTN","MAGVAG04",43,0)
 ;                id=""
"RTN","MAGVAG04",44,0)
 ;                token=""
"RTN","MAGVAG04",45,0)
 ;                size=""
"RTN","MAGVAG04",46,0)
 ;                keyListFK=""
"RTN","MAGVAG04",47,0)
 ;                createdDateTime=""
"RTN","MAGVAG04",48,0)
 ;                lastAccessDateTime=""
"RTN","MAGVAG04",49,0)
 ;                crc="">
"RTN","MAGVAG04",50,0)
 ;                <keys>
"RTN","MAGVAG04",51,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG04",52,0)
 ;                   ...
"RTN","MAGVAG04",53,0)
 ;                  <key kvalue="" klevel="" />
"RTN","MAGVAG04",54,0)
 ;                </keys>
"RTN","MAGVAG04",55,0)
 ;               <artifact Instances>
"RTN","MAGVAG04",56,0)
 ;                <artifact Instance>
"RTN","MAGVAG04",57,0)
 ;                ....
"RTN","MAGVAG04",58,0)
 ;                <artifact Instance>
"RTN","MAGVAG04",59,0)
 ;                </artifact Instances>
"RTN","MAGVAG04",60,0)
 ;                <artifact Retention policy>
"RTN","MAGVAG04",61,0)
 ;                 <artifact Retention policy fulfillments>
"RTN","MAGVAG04",62,0)
 ;                   <artifact Retention policy fulfillment>
"RTN","MAGVAG04",63,0)
 ;                   ...
"RTN","MAGVAG04",64,0)
 ;                   <artifact Retention policy fulfillment>
"RTN","MAGVAG04",65,0)
 ;                   ...
"RTN","MAGVAG04",66,0)
 ;                 </artifact Retention policy fulfillments>
"RTN","MAGVAG04",67,0)
 ;                </artifact Retention policy>                
"RTN","MAGVAG04",68,0)
 ;              </artifact>              
"RTN","MAGVAG04",69,0)
 ;  
"RTN","MAGVAG04",70,0)
GAFTBYID(MAGRY,IEN,CNT,FLAGS) ; 
"RTN","MAGVAG04",71,0)
 K MAGRY
"RTN","MAGVAG04",72,0)
 I IEN="" S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"IEN is required." Q
"RTN","MAGVAG04",73,0)
 ; 
"RTN","MAGVAG04",74,0)
 N I,X,OUT,ERR,MAGRESA
"RTN","MAGVAG04",75,0)
 N FILE,FILENM,FLDFKID
"RTN","MAGVAG04",76,0)
 N IENS
"RTN","MAGVAG04",77,0)
 N FLDSARR,FLDSARRW,FIELDS
"RTN","MAGVAG04",78,0)
 N KLFILE,KLFKID,KEYS,KLFLDID,KLIEN
"RTN","MAGVAG04",79,0)
 N TMPARR
"RTN","MAGVAG04",80,0)
 N QT
"RTN","MAGVAG04",81,0)
 S QT=$C(34) ; "
"RTN","MAGVAG04",82,0)
 S FILE=2006.916     ; ARTIFACT file number
"RTN","MAGVAG04",83,0)
 S FILENM=$TR($$GETFILNM^MAGVAF01(FILE)," ")  ; File name without blanks
"RTN","MAGVAG04",84,0)
 S FIELDS=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,FILE) ; ARTIFACT file fields names
"RTN","MAGVAG04",85,0)
 S FLDFKID=$$GETFLDID^MAGVAF01(FILE,"KEYLIST")  ; KEYLIST field number 
"RTN","MAGVAG04",86,0)
 ;
"RTN","MAGVAG04",87,0)
 S IENS=IEN_","
"RTN","MAGVAG04",88,0)
 D GETS^DIQ(FILE,IENS,FIELDS,"I","OUT","ERR")  ; get ARTIFACT record values
"RTN","MAGVAG04",89,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAG04",90,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAG04",91,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting values: "_MAGRESA(1) Q  ; Error getting the values
"RTN","MAGVAG04",92,0)
 . Q
"RTN","MAGVAG04",93,0)
 ;
"RTN","MAGVAG04",94,0)
 S CNT=CNT+1,MAGRY(CNT)="<"_FILENM
"RTN","MAGVAG04",95,0)
 S CNT=CNT+1,MAGRY(CNT)="PK="_QT_IEN_QT
"RTN","MAGVAG04",96,0)
 S I=""
"RTN","MAGVAG04",97,0)
 F  S I=$O(OUT(FILE,IENS,I)) Q:I=""  D
"RTN","MAGVAG04",98,0)
 . I $$ISFLDDT^MAGVAF01(FILE,I) S X=$$FM2IDF^MAGVAF01(OUT(FILE,IENS,I,"I"))  ; the field is Date type - convert to IDF format
"RTN","MAGVAG04",99,0)
 . E  S X=OUT(FILE,IENS,I,"I")
"RTN","MAGVAG04",100,0)
 . S CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARR(I)," /\<>&%")_"="_QT_X_QT  ; need to check for date format
"RTN","MAGVAG04",101,0)
 . Q
"RTN","MAGVAG04",102,0)
 S MAGRY(CNT)=MAGRY(CNT)_" >"
"RTN","MAGVAG04",103,0)
 ;
"RTN","MAGVAG04",104,0)
 ; Get the KEYLIST values
"RTN","MAGVAG04",105,0)
 S KLFILE=2006.913   ; KEYLIST file number
"RTN","MAGVAG04",106,0)
 S KLFLDID=$$GETFLDID^MAGVAF01(KLFILE,"KEY")  ; KEYLIST field number 
"RTN","MAGVAG04",107,0)
 ; KEYLIST is optional in ARTIFACT file (#2006.916) so check for blank
"RTN","MAGVAG04",108,0)
 S KLIEN=$S(OUT(FILE,IENS,FLDFKID,"I")="":"",1:OUT(FILE,IENS,FLDFKID,"I")_",")
"RTN","MAGVAG04",109,0)
 D GETMVAL^MAGVAF03(.KEYS,KLFILE,KLFLDID,OUT(FILE,IENS,FLDFKID,"I")_",") ; KEY LIST file KLFILE, field KEY KLFKID
"RTN","MAGVAG04",110,0)
 I '$$ISOK^MAGVAF02(KEYS(0)) D  Q  ; error found - quit 
"RTN","MAGVAG04",111,0)
 . K MAGRY
"RTN","MAGVAG04",112,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting artifact " Q  ; Error getting the values
"RTN","MAGVAG04",113,0)
 . Q
"RTN","MAGVAG04",114,0)
 K KEYS(0)  ; delete zero node record - it is for information only
"RTN","MAGVAG04",115,0)
 S CNT=$$APP2ARR^MAGVAF04(.MAGRY,.KEYS)  ; Append KEYLIST to result
"RTN","MAGVAG04",116,0)
 ;
"RTN","MAGVAG04",117,0)
 K ERR,TMPARR
"RTN","MAGVAG04",118,0)
 S ERR=0
"RTN","MAGVAG04",119,0)
 I FLAGS["I" D  ; Get Artifact Instance 
"RTN","MAGVAG04",120,0)
 . D GETAINST^MAGVAG04(.TMPARR,IEN)
"RTN","MAGVAG04",121,0)
 . I '$$ISOK^MAGVAF02(TMPARR(0)) D
"RTN","MAGVAG04",122,0)
 . . K MAGRY
"RTN","MAGVAG04",123,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting artifact instance " ; Error getting the values
"RTN","MAGVAG04",124,0)
 . . S ERR=1
"RTN","MAGVAG04",125,0)
 . . Q
"RTN","MAGVAG04",126,0)
 . I ERR Q  ; error found - quit 
"RTN","MAGVAG04",127,0)
 . K TMPARR(0)  ; delete zero node record - it is for information only
"RTN","MAGVAG04",128,0)
 . S CNT=$$APP2ARR^MAGVAF04(.MAGRY,.TMPARR) ; Append Artifact instances to result
"RTN","MAGVAG04",129,0)
 . Q
"RTN","MAGVAG04",130,0)
 I ERR Q
"RTN","MAGVAG04",131,0)
 ;
"RTN","MAGVAG04",132,0)
 K ERR,TMPARR
"RTN","MAGVAG04",133,0)
 S ERR=0
"RTN","MAGVAG04",134,0)
 I FLAGS["R" D  ; Get Artifact Retention Policies & Artifact Retention Policies Fulfillment 
"RTN","MAGVAG04",135,0)
 . D GETARP^MAGVAG04(.TMPARR,IEN)
"RTN","MAGVAG04",136,0)
 . I '$$ISOK^MAGVAF02(TMPARR(0)) D
"RTN","MAGVAG04",137,0)
 . . K MAGRY
"RTN","MAGVAG04",138,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting artifact instance " ; Error getting the values
"RTN","MAGVAG04",139,0)
 . . S ERR=1
"RTN","MAGVAG04",140,0)
 . . Q
"RTN","MAGVAG04",141,0)
 . I ERR Q  ; error found - quit 
"RTN","MAGVAG04",142,0)
 . K TMPARR(0)  ; delete zero node record - it is for information only
"RTN","MAGVAG04",143,0)
 . S CNT=$$APP2ARR^MAGVAF04(.MAGRY,.TMPARR) ; Append Artifact Retention Policies  to result
"RTN","MAGVAG04",144,0)
 . Q
"RTN","MAGVAG04",145,0)
 I ERR Q
"RTN","MAGVAG04",146,0)
 ;
"RTN","MAGVAG04",147,0)
 S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_">"
"RTN","MAGVAG04",148,0)
 S MAGRY(0)=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_CNT
"RTN","MAGVAG04",149,0)
 Q FILENM
"RTN","MAGVAG04",150,0)
 ;
"RTN","MAGVAG04",151,0)
 ; ----- Get Artifact Instance from ARTIFACT INSTANCE  file (#2006.918)
"RTN","MAGVAG04",152,0)
 ;       by Artifact IEN in XML based format
"RTN","MAGVAG04",153,0)
 ;       
"RTN","MAGVAG04",154,0)
 ; Input Parameters
"RTN","MAGVAG04",155,0)
 ; ================
"RTN","MAGVAG04",156,0)
 ; IEN = Artifact IEN
"RTN","MAGVAG04",157,0)
 ; 
"RTN","MAGVAG04",158,0)
 ; Return Values
"RTN","MAGVAG04",159,0)
 ; =============
"RTN","MAGVAG04",160,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG04",161,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG04",162,0)
 ; MAGRY(1..n) XML based result in format
"RTN","MAGVAG04",163,0)
 ;   <artifact Instances>
"RTN","MAGVAG04",164,0)
 ;     <artifact Instance>
"RTN","MAGVAG04",165,0)
 ;     ...
"RTN","MAGVAG04",166,0)
 ;     <artifact Instance>
"RTN","MAGVAG04",167,0)
 ;   </artifact Instances>
"RTN","MAGVAG04",168,0)
 ;
"RTN","MAGVAG04",169,0)
GETAINST(MAGRY,IEN) ;
"RTN","MAGVAG04",170,0)
 N FILE,IENS
"RTN","MAGVAG04",171,0)
 S FILE=2006.918
"RTN","MAGVAG04",172,0)
 S IENS=""
"RTN","MAGVAG04",173,0)
 D GXMLBYID^MAGVAF03(.MAGRY,FILE,IENS,IEN,1)
"RTN","MAGVAG04",174,0)
 Q
"RTN","MAGVAG04",175,0)
 ;
"RTN","MAGVAG04",176,0)
 ; ----- Get Artifact Retention Policy file (#2006.921)
"RTN","MAGVAG04",177,0)
 ;       & Artifact Retention Policy Fulfillment file (#2006.922)
"RTN","MAGVAG04",178,0)
 ;       by Artifact IEN in XML based format
"RTN","MAGVAG04",179,0)
 ;
"RTN","MAGVAG04",180,0)
 ; Input Parameters
"RTN","MAGVAG04",181,0)
 ; ================
"RTN","MAGVAG04",182,0)
 ; VAL = Artifact IEN
"RTN","MAGVAG04",183,0)
 ; 
"RTN","MAGVAG04",184,0)
 ; Return Values
"RTN","MAGVAG04",185,0)
 ; =============
"RTN","MAGVAG04",186,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAG04",187,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAG04",188,0)
 ;            MAGRY(1..n) XML based result in format
"RTN","MAGVAG04",189,0)
 ;            <artifactRetentionpolicys>
"RTN","MAGVAG04",190,0)
 ;             <artifactRetentionpolicy>
"RTN","MAGVAG04",191,0)
 ;              <artifactRetention policyfulfillments>
"RTN","MAGVAG04",192,0)
 ;                <artifactRetentionpolicyfulfillment>
"RTN","MAGVAG04",193,0)
 ;                   ...
"RTN","MAGVAG04",194,0)
 ;                <artifactRetentionpolicyfulfillment>
"RTN","MAGVAG04",195,0)
 ;                 ...
"RTN","MAGVAG04",196,0)
 ;               </artifactRetention policy fulfillments>
"RTN","MAGVAG04",197,0)
 ;             </artifactRetentionpolicy>
"RTN","MAGVAG04",198,0)
 ;             ...
"RTN","MAGVAG04",199,0)
 ;            <artifactRetentionpolicys>
"RTN","MAGVAG04",200,0)
 ; 
"RTN","MAGVAG04",201,0)
GETARP(MAGRY,VAL) ;
"RTN","MAGVAG04",202,0)
 N FILE,FIELDS,FLDSARR,FLDSARRW,FILENM
"RTN","MAGVAG04",203,0)
 N TMPARR,OUT,ERR,MAGRESA
"RTN","MAGVAG04",204,0)
 N I,J,X,IENS,ERRFLG,CNT
"RTN","MAGVAG04",205,0)
 N QT,RESDEL
"RTN","MAGVAG04",206,0)
 K MAGRY
"RTN","MAGVAG04",207,0)
 S RESDEL=$$RESDEL^MAGVAF02()
"RTN","MAGVAG04",208,0)
 S QT=$C(34) ; "
"RTN","MAGVAG04",209,0)
 S FILE=2006.921  ; Artifact Retention Policy
"RTN","MAGVAG04",210,0)
 S FILENM=$TR($$GETFILNM^MAGVAF01(FILE)," ") ; File name without blank
"RTN","MAGVAG04",211,0)
 S FIELDS=$$GETFLDS^MAGVAF01(.FLDSARR,.FLDSARRW,FILE,"I") ; file fields names
"RTN","MAGVAG04",212,0)
 S IENS=""
"RTN","MAGVAG04",213,0)
 D FIND^DIC(FILE,IENS,"@;"_FIELDS,"BQX",VAL,"","","","","OUT","ERR")
"RTN","MAGVAG04",214,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAG04",215,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAG04",216,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting values: "_MAGRESA(1) Q  ; Error getting the list
"RTN","MAGVAG04",217,0)
 . Q
"RTN","MAGVAG04",218,0)
 ; Output the data
"RTN","MAGVAG04",219,0)
 S CNT=0
"RTN","MAGVAG04",220,0)
 S CNT=CNT+1,MAGRY(CNT)="<"_FILENM_"S>"
"RTN","MAGVAG04",221,0)
 S I=""  ; IENs
"RTN","MAGVAG04",222,0)
 S J=""  ; Fields in the file
"RTN","MAGVAG04",223,0)
 S ERRFLG=0
"RTN","MAGVAG04",224,0)
 F  Q:ERRFLG  S I=$O(OUT("DILIST","ID",I)) Q:I=""  D
"RTN","MAGVAG04",225,0)
 . S CNT=CNT+1,MAGRY(CNT)="<"_FILENM
"RTN","MAGVAG04",226,0)
 . S CNT=CNT+1,MAGRY(CNT)="PK="_QT_OUT("DILIST",2,I)_QT
"RTN","MAGVAG04",227,0)
 . S J=""
"RTN","MAGVAG04",228,0)
 . F  S J=$O(OUT("DILIST","ID",I,J)) Q:J=""  D
"RTN","MAGVAG04",229,0)
 . . S X=OUT("DILIST","ID",I,J)
"RTN","MAGVAG04",230,0)
 . . I $$ISFLDDT^MAGVAF01(FILE,J) S X=$$FM2IDF^MAGVAF01(X)  ; the field is Date type - convert to IDF format
"RTN","MAGVAG04",231,0)
 . . S CNT=CNT+1,MAGRY(CNT)=$TR(FLDSARR(J)," /\<>&%")_"="_QT_X_QT
"RTN","MAGVAG04",232,0)
 . . Q
"RTN","MAGVAG04",233,0)
 . S MAGRY(CNT)=MAGRY(CNT)_" >"
"RTN","MAGVAG04",234,0)
 . ; Get Retention Policy Fulfillment
"RTN","MAGVAG04",235,0)
 . K TMPARR
"RTN","MAGVAG04",236,0)
 . D GXMLBYID^MAGVAF03(.TMPARR,2006.922,"",OUT("DILIST",2,I),1)
"RTN","MAGVAG04",237,0)
 . I '$$ISOK^MAGVAF02(TMPARR(0)) D  Q  ; error found - quit 
"RTN","MAGVAG04",238,0)
 . . K MAGRY
"RTN","MAGVAG04",239,0)
 . . S MAGRY(0)=$$FAILED^MAGVAF02()_RESDEL_"Error getting artifact " Q  ; Error getting the values
"RTN","MAGVAG04",240,0)
 . . S ERRFLG=1
"RTN","MAGVAG04",241,0)
 . . Q
"RTN","MAGVAG04",242,0)
 . K TMPARR(0)  ; delete zero node record - it is for information only
"RTN","MAGVAG04",243,0)
 . S CNT=$$APP2ARR^MAGVAF04(.MAGRY,.TMPARR)  ; Append Retention Policy Fulfillment to result
"RTN","MAGVAG04",244,0)
 . S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_" >"
"RTN","MAGVAG04",245,0)
 . Q
"RTN","MAGVAG04",246,0)
 S CNT=CNT+1,MAGRY(CNT)="</"_FILENM_"S>"
"RTN","MAGVAG04",247,0)
 S MAGRY(0)=$$OK^MAGVAF02()_RESDEL_RESDEL_CNT
"RTN","MAGVAG04",248,0)
 Q
"RTN","MAGVAKL1")
0^59^B31327671
"RTN","MAGVAKL1",1,0)
MAGVAKL1 ;WOIFO/NST - Key List File Utilities  ; 20 Feb 2012 3:56 PM
"RTN","MAGVAKL1",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAKL1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAKL1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAKL1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAKL1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAKL1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAKL1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAKL1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAKL1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAKL1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAKL1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAKL1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAKL1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAKL1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAKL1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAKL1",17,0)
 ;;
"RTN","MAGVAKL1",18,0)
 Q
"RTN","MAGVAKL1",19,0)
 ;
"RTN","MAGVAKL1",20,0)
 ;***** Return a KEY IEN that meets the keys provided
"RTN","MAGVAKL1",21,0)
 ;
"RTN","MAGVAKL1",22,0)
 ; Input parameters
"RTN","MAGVAKL1",23,0)
 ; ================
"RTN","MAGVAKL1",24,0)
 ; KLIST(1) = First level Key
"RTN","MAGVAKL1",25,0)
 ; KLIST(2) = Second level Key
"RTN","MAGVAKL1",26,0)
 ;   ...
"RTN","MAGVAKL1",27,0)
 ; KLIST(N) = N-th level Key
"RTN","MAGVAKL1",28,0)
 ; The assumption is that we will get the full keys list
"RTN","MAGVAKL1",29,0)
 ; so we should find only one KEY IEN or we will not find any
"RTN","MAGVAKL1",30,0)
 ; 
"RTN","MAGVAKL1",31,0)
 ; Return Value
"RTN","MAGVAKL1",32,0)
 ; ============ 
"RTN","MAGVAKL1",33,0)
 ;
"RTN","MAGVAKL1",34,0)
 ; if no key list IEN found returns 0
"RTN","MAGVAKL1",35,0)
 ; if key list found returns IEN of the ARTIFACT KEYLIST file (#2006.913) record
"RTN","MAGVAKL1",36,0)
 ;        
"RTN","MAGVAKL1",37,0)
GETKLIEN(KLIST) ;
"RTN","MAGVAKL1",38,0)
 N RES
"RTN","MAGVAKL1",39,0)
 D FINDKEYS^MAGVAKL1(.RES,.KLIST)
"RTN","MAGVAKL1",40,0)
 I '$$ISOK^MAGVAF02(RES(0)) Q 0  ; Error found
"RTN","MAGVAKL1",41,0)
 Q $O(RES(0))  ; get the IEN. It should be only one IEN
"RTN","MAGVAKL1",42,0)
 ;
"RTN","MAGVAKL1",43,0)
 ;***** Return a key list IEN that meet the keys provided
"RTN","MAGVAKL1",44,0)
 ;      It creates a new record in ARTIFACT KEYLIST file (#2006.913) if the key list is not found
"RTN","MAGVAKL1",45,0)
 ;
"RTN","MAGVAKL1",46,0)
 ; Input parameters
"RTN","MAGVAKL1",47,0)
 ; ================
"RTN","MAGVAKL1",48,0)
 ; KLIST(1) = First level Key
"RTN","MAGVAKL1",49,0)
 ; KLIST(2) = Second level Key
"RTN","MAGVAKL1",50,0)
 ;   ...
"RTN","MAGVAKL1",51,0)
 ; KLIST(N) = N-th level Key
"RTN","MAGVAKL1",52,0)
 ; The assumption is that we will get the full keys list
"RTN","MAGVAKL1",53,0)
 ; so we should find only one KEY IEN or we will not find any
"RTN","MAGVAKL1",54,0)
 ; 
"RTN","MAGVAKL1",55,0)
 ; Return Values
"RTN","MAGVAKL1",56,0)
 ; ============= 
"RTN","MAGVAKL1",57,0)
 ;
"RTN","MAGVAKL1",58,0)
 ; if error MAGRY = Failure status^Error message
"RTN","MAGVAKL1",59,0)
 ; if success MAGRY = Success status^^IEN of the record in ARTIFACT KEYLIST file (#2006.913)
"RTN","MAGVAKL1",60,0)
 ;     
"RTN","MAGVAKL1",61,0)
GETKLFK(MAGRY,KLIST) ;
"RTN","MAGVAKL1",62,0)
 ; if KLIST is empty just return success and set the IEN to ""
"RTN","MAGVAKL1",63,0)
 ; Key list is optional in ARTIFACT file (#2006.916) that's why empty key list is OK
"RTN","MAGVAKL1",64,0)
 ; ADDKL^MAGVAKL1 reports error if KLIST is empty
"RTN","MAGVAKL1",65,0)
 K MAGRY
"RTN","MAGVAKL1",66,0)
 I $O(KLIST(""))="" S MAGRY=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_"" Q
"RTN","MAGVAKL1",67,0)
 ; try to find or create a new key list record
"RTN","MAGVAKL1",68,0)
 D ADDKL^MAGVAKL1(.MAGRY,.KLIST)
"RTN","MAGVAKL1",69,0)
 Q
"RTN","MAGVAKL1",70,0)
 ;
"RTN","MAGVAKL1",71,0)
 ;***** Return a list with all keys IENS in ARTIFACT KEYLIST file (#2006.913)
"RTN","MAGVAKL1",72,0)
 ;      that meet the keys provided
"RTN","MAGVAKL1",73,0)
 ;      
"RTN","MAGVAKL1",74,0)
 ; RPC: MAGVA FIND KEYLIST
"RTN","MAGVAKL1",75,0)
 ;
"RTN","MAGVAKL1",76,0)
 ; Input Parameters
"RTN","MAGVAKL1",77,0)
 ; ===============
"RTN","MAGVAKL1",78,0)
 ; KLIST(1) = First Key
"RTN","MAGVAKL1",79,0)
 ; KLIST(2) = Second Key
"RTN","MAGVAKL1",80,0)
 ;   ...
"RTN","MAGVAKL1",81,0)
 ; KLIST(N) = N-th Key
"RTN","MAGVAKL1",82,0)
 ;
"RTN","MAGVAKL1",83,0)
 ; Return Values
"RTN","MAGVAKL1",84,0)
 ; =============
"RTN","MAGVAKL1",85,0)
 ; if error MAGRY(0) = Failure status ^ Error message^
"RTN","MAGVAKL1",86,0)
 ; if success MAGRY(0) = Success status
"RTN","MAGVAKL1",87,0)
 ;            MAGRY(n) = IEN of the record in ARTIFACT KEYLIST file (#2006.913) that matches the request
"RTN","MAGVAKL1",88,0)
 ;                  n same as IEN
"RTN","MAGVAKL1",89,0)
 ;            
"RTN","MAGVAKL1",90,0)
FINDKEYS(MAGRY,KLIST) ; RPC [MAGVA FIND KEYLIST]
"RTN","MAGVAKL1",91,0)
 N KEY,KEYSIEN,COUNT,LEVEL,FOUND
"RTN","MAGVAKL1",92,0)
 K MAGRY
"RTN","MAGVAKL1",93,0)
 ; Search for keys using IDXKEYS index by DEPTH and KEY.
"RTN","MAGVAKL1",94,0)
 ; Store the KEYIEN into array and count the number
"RTN","MAGVAKL1",95,0)
 ; of hits by KEYSIEN
"RTN","MAGVAKL1",96,0)
 S COUNT=0  ; How many individual KEYS are requested
"RTN","MAGVAKL1",97,0)
 S LEVEL=""
"RTN","MAGVAKL1",98,0)
 F  S LEVEL=$O(KLIST(LEVEL)) Q:LEVEL=""  D
"RTN","MAGVAKL1",99,0)
 . S KEY=KLIST(LEVEL)
"RTN","MAGVAKL1",100,0)
 . S COUNT=COUNT+1
"RTN","MAGVAKL1",101,0)
 . S KEYSIEN=""
"RTN","MAGVAKL1",102,0)
 . F  S KEYSIEN=$O(^MAGV(2006.913,"IDXKEYS",LEVEL,KEY,KEYSIEN)) Q:KEYSIEN=""  D
"RTN","MAGVAKL1",103,0)
 . . S FOUND(KEYSIEN)=$G(FOUND(KEYSIEN))+1
"RTN","MAGVAKL1",104,0)
 . . Q
"RTN","MAGVAKL1",105,0)
 . Q
"RTN","MAGVAKL1",106,0)
 ; Check for any KEYSIEN that has as many hits as requested number of keys
"RTN","MAGVAKL1",107,0)
 S KEYSIEN=""
"RTN","MAGVAKL1",108,0)
 F  S KEYSIEN=$O(FOUND(KEYSIEN)) Q:KEYSIEN=""  D
"RTN","MAGVAKL1",109,0)
 . I FOUND(KEYSIEN)=COUNT S MAGRY(KEYSIEN)=KEYSIEN
"RTN","MAGVAKL1",110,0)
 . Q
"RTN","MAGVAKL1",111,0)
 S MAGRY(0)=$$OK^MAGVAF02()
"RTN","MAGVAKL1",112,0)
 Q
"RTN","MAGVAKL1",113,0)
 ;
"RTN","MAGVAKL1",114,0)
 ;***** Add new KEY PAIRS to ARTIFACT KEYLIST file (#2006.913)
"RTN","MAGVAKL1",115,0)
 ; RPC: MAGVA ADD KEYLIST
"RTN","MAGVAKL1",116,0)
 ;
"RTN","MAGVAKL1",117,0)
 ; Input Parameters
"RTN","MAGVAKL1",118,0)
 ; ================
"RTN","MAGVAKL1",119,0)
 ;  KLIST(1) = First level Key
"RTN","MAGVAKL1",120,0)
 ;  KLIST(2) = Second level Key
"RTN","MAGVAKL1",121,0)
 ;   ...
"RTN","MAGVAKL1",122,0)
 ;  KLIST(N) = N-th level Key
"RTN","MAGVAKL1",123,0)
 ; 
"RTN","MAGVAKL1",124,0)
 ; Return Values
"RTN","MAGVAKL1",125,0)
 ; =============
"RTN","MAGVAKL1",126,0)
 ; if error MAGRY = Failure status^Error
"RTN","MAGVAKL1",127,0)
 ; if success MAGRY = Success status^^IEN - IEN of the added record
"RTN","MAGVAKL1",128,0)
 ;
"RTN","MAGVAKL1",129,0)
ADDKL(MAGRY,KLIST) ; RPC [MAGVA ADD KEYLIST]
"RTN","MAGVAKL1",130,0)
 ;
"RTN","MAGVAKL1",131,0)
 K MAGRY
"RTN","MAGVAKL1",132,0)
 ; Quit error if key list is empty
"RTN","MAGVAKL1",133,0)
 I $O(KLIST(""))="" S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"KEYLIST is empty" Q
"RTN","MAGVAKL1",134,0)
 ;
"RTN","MAGVAKL1",135,0)
 N DEPTH,I,IENS,IEN,MAGDA,MAGNFDA,MAGNIEN,MAGNXE,ERR
"RTN","MAGVAKL1",136,0)
 S IEN=+$$GETKLIEN^MAGVAKL1(.KLIST)
"RTN","MAGVAKL1",137,0)
 I IEN S MAGRY=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_IEN  Q  ; The Key list is already on file
"RTN","MAGVAKL1",138,0)
 ; The Key List is not found. Add a new record to save all values
"RTN","MAGVAKL1",139,0)
 S I=""
"RTN","MAGVAKL1",140,0)
 S DEPTH=0
"RTN","MAGVAKL1",141,0)
 F  S I=$O(KLIST(I)) Q:I=""  S DEPTH=DEPTH+1
"RTN","MAGVAKL1",142,0)
 ;
"RTN","MAGVAKL1",143,0)
 S MAGNFDA(2006.913,"+1,",.01)=DEPTH
"RTN","MAGVAKL1",144,0)
 D UPDATE^DIE("","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVAKL1",145,0)
 I $D(MAGNXE("DIERR","E")) S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error adding a key list" Q
"RTN","MAGVAKL1",146,0)
 ;
"RTN","MAGVAKL1",147,0)
 S MAGDA=MAGNIEN(1)
"RTN","MAGVAKL1",148,0)
 S IENS="+1,"_MAGDA_","
"RTN","MAGVAKL1",149,0)
 S ERR=0
"RTN","MAGVAKL1",150,0)
 S I=""
"RTN","MAGVAKL1",151,0)
 F  S I=$O(KLIST(I)) Q:I=""  D  Q:ERR
"RTN","MAGVAKL1",152,0)
 . K MAGNFDA,MAGNIEN,MAGNXE
"RTN","MAGVAKL1",153,0)
 . S MAGNFDA(2006.9132,IENS,.01)=KLIST(I)
"RTN","MAGVAKL1",154,0)
 . S MAGNFDA(2006.9132,IENS,2)=I
"RTN","MAGVAKL1",155,0)
 . D UPDATE^DIE("","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVAKL1",156,0)
 . I $D(MAGNXE("DIERR","E")) D
"RTN","MAGVAKL1",157,0)
 . . N DIK,DA
"RTN","MAGVAKL1",158,0)
 . . S ERR=1
"RTN","MAGVAKL1",159,0)
 . . S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error adding a new key pair."
"RTN","MAGVAKL1",160,0)
 . . ; clean up data
"RTN","MAGVAKL1",161,0)
 . . S DA=MAGDA
"RTN","MAGVAKL1",162,0)
 . . S DIK=$$GETFILGL^MAGVAF01(2006.913)
"RTN","MAGVAKL1",163,0)
 . . D ^DIK
"RTN","MAGVAKL1",164,0)
 . . Q
"RTN","MAGVAKL1",165,0)
 . Q
"RTN","MAGVAKL1",166,0)
 I ERR Q  ; Exit the routine. MAGRY is set already
"RTN","MAGVAKL1",167,0)
 S MAGRY=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_MAGDA
"RTN","MAGVAKL1",168,0)
 Q
"RTN","MAGVAKL1",169,0)
 ;
"RTN","MAGVAKL1",170,0)
 ;***** Returns a key list by IEN in ARTIFACT KEYLIST file (#2006.913)
"RTN","MAGVAKL1",171,0)
 ; RPC: MAGVA GET KEYLIST
"RTN","MAGVAKL1",172,0)
 ;
"RTN","MAGVAKL1",173,0)
 ; Input Parameters
"RTN","MAGVAKL1",174,0)
 ; ================
"RTN","MAGVAKL1",175,0)
 ;  MAGDA = IEN in ARTIFACT KEYLIST file (#2006.913)
"RTN","MAGVAKL1",176,0)
 ; 
"RTN","MAGVAKL1",177,0)
 ; Return Values
"RTN","MAGVAKL1",178,0)
 ; =============
"RTN","MAGVAKL1",179,0)
 ; if error MAGRY(0) = Failure status^Error message
"RTN","MAGVAKL1",180,0)
 ; if success
"RTN","MAGVAKL1",181,0)
 ;  MAGRY(0) = Success status^^Number of key list depth       
"RTN","MAGVAKL1",182,0)
 ;  MAGRY(1) = Level one Key
"RTN","MAGVAKL1",183,0)
 ;  MAGRY(2) = Level two Key
"RTN","MAGVAKL1",184,0)
 ;   ...
"RTN","MAGVAKL1",185,0)
 ;  MAGRY(N) = Level N-th Key
"RTN","MAGVAKL1",186,0)
 ;        
"RTN","MAGVAKL1",187,0)
GETKL(MAGRY,MAGDA) ; RPC [MAGVA GET KEYLIST]
"RTN","MAGVAKL1",188,0)
 N OUT,ERR,MAGRESA
"RTN","MAGVAKL1",189,0)
 N I,CNT,X
"RTN","MAGVAKL1",190,0)
 K MAGRY
"RTN","MAGVAKL1",191,0)
 ; --- .01 KLEVEL; 2 KVALUE  
"RTN","MAGVAKL1",192,0)
 D LIST^DIC(2006.9132,","_MAGDA_",","@;.01;2","P","","","","","","","OUT","ERR")
"RTN","MAGVAKL1",193,0)
 I $D(ERR("DIERR")) D  Q
"RTN","MAGVAKL1",194,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAKL1",195,0)
 . S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting the list: "_MAGRESA(1) Q  ; Error getting the list
"RTN","MAGVAKL1",196,0)
 S I=0
"RTN","MAGVAKL1",197,0)
 S CNT=0
"RTN","MAGVAKL1",198,0)
 F  S I=$O(OUT("DILIST",I)) Q:'+I  D
"RTN","MAGVAKL1",199,0)
 . S X=OUT("DILIST",I,0)
"RTN","MAGVAKL1",200,0)
 . S CNT=CNT+1
"RTN","MAGVAKL1",201,0)
 . S MAGRY($P(X,"^",3))=$P(X,"^",2)
"RTN","MAGVAKL1",202,0)
 . Q
"RTN","MAGVAKL1",203,0)
 S MAGRY(0)=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_CNT
"RTN","MAGVAKL1",204,0)
 Q
"RTN","MAGVAKL1",205,0)
 ;
"RTN","MAGVAKL1",206,0)
 ;***** Delete a record in ARTIFACT KEYLIST file (#2006.913) by IEN
"RTN","MAGVAKL1",207,0)
 ; RPC: MAGVA DELETE KEYLIST
"RTN","MAGVAKL1",208,0)
 ;
"RTN","MAGVAKL1",209,0)
 ; Input Parameters
"RTN","MAGVAKL1",210,0)
 ; ================
"RTN","MAGVAKL1",211,0)
 ;  MAGDA = IEN in ARTIFACT KEYLIST file (#2006.913)
"RTN","MAGVAKL1",212,0)
 ; 
"RTN","MAGVAKL1",213,0)
 ; Return Values
"RTN","MAGVAKL1",214,0)
 ; =============
"RTN","MAGVAKL1",215,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAKL1",216,0)
 ; if success MAGRY = Success status
"RTN","MAGVAKL1",217,0)
 ;
"RTN","MAGVAKL1",218,0)
DELKL(MAGRY,MAGDA) ; RPC [MAGVA DELETE KEYLIST]
"RTN","MAGVAKL1",219,0)
 N DIK,DA
"RTN","MAGVAKL1",220,0)
 S DA=MAGDA
"RTN","MAGVAKL1",221,0)
 S DIK=$$GETFILGL^MAGVAF01(2006.913)
"RTN","MAGVAKL1",222,0)
 D ^DIK
"RTN","MAGVAKL1",223,0)
 S MAGRY=$$OK^MAGVAF02()
"RTN","MAGVAKL1",224,0)
 Q
"RTN","MAGVAQ01")
0^60^B87039259
"RTN","MAGVAQ01",1,0)
MAGVAQ01 ;WOIFO/NST - Utilities for RPC calls ; 28 Feb 2013 9:58 AM
"RTN","MAGVAQ01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAQ01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAQ01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAQ01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAQ01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAQ01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAQ01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAQ01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAQ01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAQ01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAQ01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAQ01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAQ01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAQ01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAQ01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAQ01",17,0)
 ;;
"RTN","MAGVAQ01",18,0)
 Q
"RTN","MAGVAQ01",19,0)
 ;*****  Add a record to QUEUE file (#2006.927)
"RTN","MAGVAQ01",20,0)
 ;       
"RTN","MAGVAQ01",21,0)
 ; RPC: MAGVA CREATE QUEUE
"RTN","MAGVAQ01",22,0)
 ; 
"RTN","MAGVAQ01",23,0)
 ; Input Parameters
"RTN","MAGVAQ01",24,0)
 ; ================
"RTN","MAGVAQ01",25,0)
 ; 
"RTN","MAGVAQ01",26,0)
 ;   MAGPARAM("NAME")
"RTN","MAGVAQ01",27,0)
 ;   MAGPARAM("ACTIVE") = 0/1
"RTN","MAGVAQ01",28,0)
 ;   MAGPARAM("QUEUE TYPE")
"RTN","MAGVAQ01",29,0)
 ;   MAGPARAM("NUM RETRIES")
"RTN","MAGVAQ01",30,0)
 ;   MAGPARAM("RETRY DELAY IN SECONDS")
"RTN","MAGVAQ01",31,0)
 ;   MAGPARAM("TRIGGER DELAY IN SECONDS")
"RTN","MAGVAQ01",32,0)
 ; 
"RTN","MAGVAQ01",33,0)
 ; Return Values
"RTN","MAGVAQ01",34,0)
 ; =============
"RTN","MAGVAQ01",35,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAQ01",36,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAQ01",37,0)
 ;
"RTN","MAGVAQ01",38,0)
ADDQUEUE(MAGRY,MAGPARAM) ; RPC [MAGVA CREATE QUEUE]
"RTN","MAGVAQ01",39,0)
 N MAGWP
"RTN","MAGVAQ01",40,0)
 K MAGRY
"RTN","MAGVAQ01",41,0)
 ; Add the record
"RTN","MAGVAQ01",42,0)
 D ADDRCD^MAGVAF01(.MAGRY,2006.927,.MAGPARAM,.MAGWP)
"RTN","MAGVAQ01",43,0)
 Q
"RTN","MAGVAQ01",44,0)
 ;
"RTN","MAGVAQ01",45,0)
 ;*****  Returns all records in QUEUE file (#2006.927)
"RTN","MAGVAQ01",46,0)
 ;       
"RTN","MAGVAQ01",47,0)
 ; RPC: MAGVA GET ALL QUEUES
"RTN","MAGVAQ01",48,0)
 ; 
"RTN","MAGVAQ01",49,0)
 ; if error found during execution
"RTN","MAGVAQ01",50,0)
 ;   MAGRY(0) = Failure status ^ "Error getting the list"
"RTN","MAGVAQ01",51,0)
 ; if success
"RTN","MAGVAQ01",52,0)
 ;   MAGRY(0)    = Success status ^^#CNT - where #CNT is a number of records returned
"RTN","MAGVAQ01",53,0)
 ;   MAGRY(1)    = "^" delimited string with all field names in Queue 
"RTN","MAGVAQ01",54,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVAQ01",55,0)
 ;
"RTN","MAGVAQ01",56,0)
GETQUEUE(MAGRY) ; RPC [MAGVA GET ALL QUEUES]
"RTN","MAGVAQ01",57,0)
 D GALLLST^MAGVAF03(.MAGRY,2006.927,"")
"RTN","MAGVAQ01",58,0)
 ;
"RTN","MAGVAQ01",59,0)
 ;*****  Add a record to QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",60,0)
 ;       
"RTN","MAGVAQ01",61,0)
 ; RPC:MAGVA ENQUEUE Q MSG
"RTN","MAGVAQ01",62,0)
 ; 
"RTN","MAGVAQ01",63,0)
 ; Input Parameters
"RTN","MAGVAQ01",64,0)
 ; ================
"RTN","MAGVAQ01",65,0)
 ;  
"RTN","MAGVAQ01",66,0)
 ; MAGPARAM("EXPIRATION DATE/TIME")
"RTN","MAGVAQ01",67,0)
 ; MAGPARAM("EARLIEST DELIVERY DATE/TIME")
"RTN","MAGVAQ01",68,0)
 ; MAGPARAM("PRIORITY")
"RTN","MAGVAQ01",69,0)
 ; MAGPARAM("QUEUE") = Pointer to QUEUE file (#2006.927)
"RTN","MAGVAQ01",70,0)
 ; MAGPARAM("MESSAGE GROUP ID") =  value of the field "MESSAGE GROUP ID"
"RTN","MAGVAQ01",71,0)
 ;                                  in QUEUE file (#2006.927) or "*" or ""
"RTN","MAGVAQ01",72,0)
 ; MAGMSG(1..n)= MESSAGE
"RTN","MAGVAQ01",73,0)
 ; 
"RTN","MAGVAQ01",74,0)
 ; Return Values
"RTN","MAGVAQ01",75,0)
 ; =============
"RTN","MAGVAQ01",76,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAQ01",77,0)
 ; if success MAGRY = Success status ^^IEN - IEN of the new record 
"RTN","MAGVAQ01",78,0)
 ; 
"RTN","MAGVAQ01",79,0)
ADDQM(MAGRY,MAGPARAM,MAGMSG) ; RPC [MAGVA ENQUEUE Q MSG]
"RTN","MAGVAQ01",80,0)
 ; build MAGMSG first - workaround for Old broker listener
"RTN","MAGVAQ01",81,0)
 N L,LL
"RTN","MAGVAQ01",82,0)
 S L="MAGMSG",LL=0
"RTN","MAGVAQ01",83,0)
 K MAGMSG
"RTN","MAGVAQ01",84,0)
 F  S L=$O(MAGPARAM(L)) Q:(L="")!($E(L,1,6)'="MAGMSG")  S LL=LL+1,MAGMSG(LL)=MAGPARAM(L) K MAGPARAM(L)
"RTN","MAGVAQ01",85,0)
 ;
"RTN","MAGVAQ01",86,0)
 N FILE,FILEQM,IENS,FLD,ISACTIVE
"RTN","MAGVAQ01",87,0)
 N MAGWP
"RTN","MAGVAQ01",88,0)
 K MAGRY
"RTN","MAGVAQ01",89,0)
 ; Check if the queue exist and it is active
"RTN","MAGVAQ01",90,0)
 S IEN=$G(MAGPARAM("QUEUE"))
"RTN","MAGVAQ01",91,0)
 ; Check for QUEUE
"RTN","MAGVAQ01",92,0)
 I IEN="" S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Input parameter QUEUE is required." Q  ; Error getting the IEN
"RTN","MAGVAQ01",93,0)
 ; Check if queue is active
"RTN","MAGVAQ01",94,0)
 S FILE=2006.927  ; Queue file
"RTN","MAGVAQ01",95,0)
 S IENS=IEN_","
"RTN","MAGVAQ01",96,0)
 S FLD=$$GETFLDID^MAGVAF01(FILE,"ACTIVE")
"RTN","MAGVAQ01",97,0)
 S ISACTIVE=$$GET1^DIQ(FILE,IENS,FLD,"I")  ; get ACTIVE value
"RTN","MAGVAQ01",98,0)
 I 'ISACTIVE S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"The queue is inactive" Q
"RTN","MAGVAQ01",99,0)
 ; 
"RTN","MAGVAQ01",100,0)
 S MAGPARAM("EXPIRATION DATE/TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("EXPIRATION DATE/TIME")))
"RTN","MAGVAQ01",101,0)
 S MAGPARAM("EARLIEST DELIVERY DATE/TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("EARLIEST DELIVERY DATE/TIME")))
"RTN","MAGVAQ01",102,0)
 S MAGPARAM("ENQUEUED DATE/TIME")=$$NOW^XLFDT
"RTN","MAGVAQ01",103,0)
 M MAGWP("MESSAGE")=MAGMSG
"RTN","MAGVAQ01",104,0)
 S FILEQM=2006.928
"RTN","MAGVAQ01",105,0)
 D ADDRCD^MAGVAF01(.MAGRY,FILEQM,.MAGPARAM,.MAGWP)  ; add the record
"RTN","MAGVAQ01",106,0)
 Q
"RTN","MAGVAQ01",107,0)
 ;
"RTN","MAGVAQ01",108,0)
 ;*****  Find, return and remove a queue message from the QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",109,0)
 ;       by QUEUE - IEN of record in QUEUE file (#2006.927)
"RTN","MAGVAQ01",110,0)
 ;       and by MESSAGE GROUP ID.
"RTN","MAGVAQ01",111,0)
 ;       If "MESSAGE GROUP ID" equals "*" it ignores "MESSAGE GROUP ID". 
"RTN","MAGVAQ01",112,0)
 ;       If "MESSAGE GROUP ID" equals "" it looks only at queue messages with blank "MESSAGE GROUP ID".
"RTN","MAGVAQ01",113,0)
 ;       Otherwise looks at queue messages with MESSAGE GROUP ID
"RTN","MAGVAQ01",114,0)
 ;       
"RTN","MAGVAQ01",115,0)
 ; RPC:MAGVA DEQUEUE Q MSG
"RTN","MAGVAQ01",116,0)
 ; 
"RTN","MAGVAQ01",117,0)
 ; Input Parameters
"RTN","MAGVAQ01",118,0)
 ; 
"RTN","MAGVAQ01",119,0)
 ;   MAGPARAM("QUEUE") = IEN in QUEUE file (#2006.927)
"RTN","MAGVAQ01",120,0)
 ;   MAGPARAM("MESSAGE GROUP ID") = value of the field "MESSAGE GROUP ID"
"RTN","MAGVAQ01",121,0)
 ;                                  in QUEUE file (#2006.927) or "*" or ""
"RTN","MAGVAQ01",122,0)
 ;   
"RTN","MAGVAQ01",123,0)
 ;   if MAGPARAM("MESSAGE GROUP ID") = "*" return oldest 
"RTN","MAGVAQ01",124,0)
 ;   
"RTN","MAGVAQ01",125,0)
 ; Return Values
"RTN","MAGVAQ01",126,0)
 ; =============
"RTN","MAGVAQ01",127,0)
 ; if error MAGRY(0) = Failure status ^ Error message
"RTN","MAGVAQ01",128,0)
 ; if success MAGRY(0) = Success status ^^IEN
"RTN","MAGVAQ01",129,0)
 ;            MAGRY(1..n) = The QUEUE MESSAGE
"RTN","MAGVAQ01",130,0)
 ;            
"RTN","MAGVAQ01",131,0)
 ;            if IEN equals 0 that means nothing was found
"RTN","MAGVAQ01",132,0)
 ;            ;
"RTN","MAGVAQ01",133,0)
DEQM(MAGRY,MAGPARAM) ; RPC [MAGVA DEQUEUE Q MSG]
"RTN","MAGVAQ01",134,0)
 K MAGRY
"RTN","MAGVAQ01",135,0)
 D FINDQM^MAGVAQ01(.MAGRY,.MAGPARAM,"D")
"RTN","MAGVAQ01",136,0)
 Q
"RTN","MAGVAQ01",137,0)
 ;
"RTN","MAGVAQ01",138,0)
 ;*****  Get a queue message from the QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",139,0)
 ;       by QUEUE - IEN of record in QUEUE file (#2006.927)
"RTN","MAGVAQ01",140,0)
 ;       and by MESSAGE GROUP ID.
"RTN","MAGVAQ01",141,0)
 ;       If "MESSAGE GROUP ID" equals "*" it ignores "MESSAGE GROUP ID". 
"RTN","MAGVAQ01",142,0)
 ;       If "MESSAGE GROUP ID" equals "" it looks only at queue messages with blank "MESSAGE GROUP ID".
"RTN","MAGVAQ01",143,0)
 ;       Otherwise looks at queue messages with MESSAGE GROUP ID
"RTN","MAGVAQ01",144,0)
 ;    
"RTN","MAGVAQ01",145,0)
 ; RPC:MAGVA PEEK Q MSG
"RTN","MAGVAQ01",146,0)
 ; 
"RTN","MAGVAQ01",147,0)
 ; Input Parameters
"RTN","MAGVAQ01",148,0)
 ; 
"RTN","MAGVAQ01",149,0)
 ;   MAGPARAM("QUEUE") = IEN in QUEUE file (#2006.927)
"RTN","MAGVAQ01",150,0)
 ;   MAGPARAM("MESSAGE GROUP ID") = value of the field "MESSAGE GROUP ID"
"RTN","MAGVAQ01",151,0)
 ;                                  in QUEUE file (#2006.927) or "*" or ""
"RTN","MAGVAQ01",152,0)
 ;
"RTN","MAGVAQ01",153,0)
 ; Return Values
"RTN","MAGVAQ01",154,0)
 ; =============
"RTN","MAGVAQ01",155,0)
 ; if error MAGRY(0) = Failure status ^ Error message
"RTN","MAGVAQ01",156,0)
 ; if success MAGRY(0) = Success status ^^IEN
"RTN","MAGVAQ01",157,0)
 ;            MAGRY(1..n) = The QUEUE MESSAGE
"RTN","MAGVAQ01",158,0)
 ;            
"RTN","MAGVAQ01",159,0)
 ;            if IEN equals 0 that means nothing was found
"RTN","MAGVAQ01",160,0)
 ;
"RTN","MAGVAQ01",161,0)
PEEKQM(MAGRY,MAGPARAM) ; RPC [MAGVA PEEK Q MSG]
"RTN","MAGVAQ01",162,0)
 K MAGRY
"RTN","MAGVAQ01",163,0)
 D FINDQM^MAGVAQ01(.MAGRY,.MAGPARAM,"")
"RTN","MAGVAQ01",164,0)
 Q
"RTN","MAGVAQ01",165,0)
 ;
"RTN","MAGVAQ01",166,0)
 ;+++++  Find, return and remove a queue message from the QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",167,0)
 ;       by QUEUE - IEN of record in QUEUE file (#2006.927)
"RTN","MAGVAQ01",168,0)
 ;       The message will have the EARLIEST DELIVERY DATE/TIME equals NULL or the EARLIEST DELIVERY DATE/TIME less than 
"RTN","MAGVAQ01",169,0)
 ;       current date/time 
"RTN","MAGVAQ01",170,0)
 ;       and the EXPIRATION DATE/TIME equals NULL or the EXPIRATION DATE/TIME greater than current date/time.
"RTN","MAGVAQ01",171,0)
 ;       
"RTN","MAGVAQ01",172,0)
 ;       Delete the message if the flag is set 
"RTN","MAGVAQ01",173,0)
 ; 
"RTN","MAGVAQ01",174,0)
 ; Input Parameters
"RTN","MAGVAQ01",175,0)
 ; ================
"RTN","MAGVAQ01",176,0)
 ;  
"RTN","MAGVAQ01",177,0)
 ;  MAGPARAM("QUEUE") = IEN in QUEUE file (#2006.927)
"RTN","MAGVAQ01",178,0)
 ;  MAGPARAM("MESSAGE GROUP ID") = value of the field "MESSAGE GROUP ID"
"RTN","MAGVAQ01",179,0)
 ;                                  in QUEUE file (#2006.927) or "*" or ""
"RTN","MAGVAQ01",180,0)
 ;  FLAGS    =  [D] delete the message from QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",181,0)
 ;
"RTN","MAGVAQ01",182,0)
 ; Return Values
"RTN","MAGVAQ01",183,0)
 ; =============
"RTN","MAGVAQ01",184,0)
 ; if error MAGRY(0) = Failure status ^ Error message
"RTN","MAGVAQ01",185,0)
 ; if success MAGRY(0) = Success status ^^IEN
"RTN","MAGVAQ01",186,0)
 ;            MAGRY(1..n) = The QUEUE MESSAGE
"RTN","MAGVAQ01",187,0)
 ;            
"RTN","MAGVAQ01",188,0)
 ;            if IEN equals 0 that means nothing was found
"RTN","MAGVAQ01",189,0)
 ;
"RTN","MAGVAQ01",190,0)
FINDQM(MAGRY,MAGPARAM,FLAGS) ;
"RTN","MAGVAQ01",191,0)
 N MAGDT,IEN,FILE,FLDMINDT,FLDEXPDT
"RTN","MAGVAQ01",192,0)
 N ERRMSG,FOUND
"RTN","MAGVAQ01",193,0)
 N QUEUEIEN,MSGGRPID
"RTN","MAGVAQ01",194,0)
 S QUEUEIEN=$G(MAGPARAM("QUEUE"))
"RTN","MAGVAQ01",195,0)
 S MSGGRPID=$G(MAGPARAM("MESSAGE GROUP ID"))
"RTN","MAGVAQ01",196,0)
 S FILE=2006.928  ; Queue Message file
"RTN","MAGVAQ01",197,0)
 S FLDMINDT=$$GETFLDID^MAGVAF01(FILE,"EARLIEST DELIVERY DATE/TIME")
"RTN","MAGVAQ01",198,0)
 S FLDEXPDT=$$GETFLDID^MAGVAF01(FILE,"EXPIRATION DATE/TIME")
"RTN","MAGVAQ01",199,0)
 ; Check for QUEUE
"RTN","MAGVAQ01",200,0)
 I QUEUEIEN="" S MAGRY(0)=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Input parameter QUEUE is required." Q  ; Error getting the IEN
"RTN","MAGVAQ01",201,0)
 S FOUND=0
"RTN","MAGVAQ01",202,0)
 S ERRMSG=""
"RTN","MAGVAQ01",203,0)
 I MSGGRPID="*" D
"RTN","MAGVAQ01",204,0)
 . ; Use ENQDT index to loop through the queue and enqueued dates
"RTN","MAGVAQ01",205,0)
 . ; For each IEN found check if the EARLIEST DELIVERY DATE/TIME is NULL OR the EARLIEST DELIVERY DATE/TIME < NOW) 
"RTN","MAGVAQ01",206,0)
 . ; and (the EXPIRATION DATE/TIME is NULL OR the EXPIRATION DATE/TIME > NOW) then quit and return the IEN
"RTN","MAGVAQ01",207,0)
 . S MAGDT=""
"RTN","MAGVAQ01",208,0)
 . S FOUND=0  ; If an eligible Queue message was found. IEN will be set to this record
"RTN","MAGVAQ01",209,0)
 . F  Q:(ERRMSG'="")!FOUND  S MAGDT=$O(^MAGV(FILE,"ENQDT",QUEUEIEN,MAGDT)) Q:MAGDT=""  D
"RTN","MAGVAQ01",210,0)
 . . S IEN=""
"RTN","MAGVAQ01",211,0)
 . . F  Q:(ERRMSG'="")!FOUND  S IEN=$O(^MAGV(FILE,"ENQDT",QUEUEIEN,MAGDT,IEN)) Q:IEN=""  D
"RTN","MAGVAQ01",212,0)
 . . . S FOUND=$$CHECKQM^MAGVAQ01(.ERRMSG,FILE,IEN,FLDMINDT,FLDEXPDT) ; see if we meet the criteria
"RTN","MAGVAQ01",213,0)
 . . . I ERRMSG'="" S MAGRY(0)=ERRMSG
"RTN","MAGVAQ01",214,0)
 . . . Q
"RTN","MAGVAQ01",215,0)
 . . Q
"RTN","MAGVAQ01",216,0)
 . Q
"RTN","MAGVAQ01",217,0)
 ;
"RTN","MAGVAQ01",218,0)
 I MSGGRPID="" D
"RTN","MAGVAQ01",219,0)
 . ; Use ENQBLDT index to loop through the queue and enqueued dates
"RTN","MAGVAQ01",220,0)
 . ; For each IEN found check if the EARLIEST DELIVERY DATE/TIME is NULL OR the EARLIEST DELIVERY DATE/TIME < NOW) 
"RTN","MAGVAQ01",221,0)
 . ; and (the EXPIRATION DATE/TIME is NULL OR the EXPIRATION DATE/TIME > NOW) then quit and return the IEN
"RTN","MAGVAQ01",222,0)
 . S MAGDT=""
"RTN","MAGVAQ01",223,0)
 . S FOUND=0  ; If an eligible Queue message was found. IEN will be set to this record
"RTN","MAGVAQ01",224,0)
 . F  Q:(ERRMSG'="")!FOUND  S MAGDT=$O(^MAGV(FILE,"ENQBLDT",QUEUEIEN,MAGDT)) Q:MAGDT=""  D
"RTN","MAGVAQ01",225,0)
 . . S IEN=""
"RTN","MAGVAQ01",226,0)
 . . F  Q:(ERRMSG'="")!FOUND  S IEN=$O(^MAGV(FILE,"ENQBLDT",QUEUEIEN,MAGDT,IEN)) Q:IEN=""  D
"RTN","MAGVAQ01",227,0)
 . . . S FOUND=$$CHECKQM^MAGVAQ01(.ERRMSG,FILE,IEN,FLDMINDT,FLDEXPDT) ; see if we meet the criteria
"RTN","MAGVAQ01",228,0)
 . . . I ERRMSG'="" S MAGRY(0)=ERRMSG
"RTN","MAGVAQ01",229,0)
 . . . Q
"RTN","MAGVAQ01",230,0)
 . . Q
"RTN","MAGVAQ01",231,0)
 . Q
"RTN","MAGVAQ01",232,0)
 ;
"RTN","MAGVAQ01",233,0)
 I (MSGGRPID'=""),(MSGGRPID'="*") D
"RTN","MAGVAQ01",234,0)
 . ; Use ENQPLDT index to loop through the queue, place and enqueued dates
"RTN","MAGVAQ01",235,0)
 . ; For each IEN found check if the EARLIEST DELIVERY DATE/TIME is NULL OR the EARLIEST DELIVERY DATE/TIME < NOW) 
"RTN","MAGVAQ01",236,0)
 . ; and (the EXPIRATION DATE/TIME is NULL OR the EXPIRATION DATE/TIME > NOW) then quit and return the IEN
"RTN","MAGVAQ01",237,0)
 . S MAGDT=""
"RTN","MAGVAQ01",238,0)
 . S FOUND=0  ; If an eligible Queue message was found. IEN will be set to this record
"RTN","MAGVAQ01",239,0)
 . F  Q:(ERRMSG'="")!FOUND  S MAGDT=$O(^MAGV(FILE,"ENQPLDT",QUEUEIEN,MSGGRPID,MAGDT)) Q:MAGDT=""  D
"RTN","MAGVAQ01",240,0)
 . . S IEN=""
"RTN","MAGVAQ01",241,0)
 . . F  Q:(ERRMSG'="")!FOUND  S IEN=$O(^MAGV(FILE,"ENQPLDT",QUEUEIEN,MSGGRPID,MAGDT,IEN)) Q:IEN=""  D
"RTN","MAGVAQ01",242,0)
 . . . S FOUND=$$CHECKQM^MAGVAQ01(.ERRMSG,FILE,IEN,FLDMINDT,FLDEXPDT) ; see if we meet the criteria
"RTN","MAGVAQ01",243,0)
 . . . I ERRMSG'="" S MAGRY(0)=ERRMSG
"RTN","MAGVAQ01",244,0)
 . . . Q
"RTN","MAGVAQ01",245,0)
 . . Q
"RTN","MAGVAQ01",246,0)
 . Q
"RTN","MAGVAQ01",247,0)
 I ERRMSG'="" Q  ; Quit - Found error getting values
"RTN","MAGVAQ01",248,0)
 ;
"RTN","MAGVAQ01",249,0)
 I 'FOUND S MAGRY(0)=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_0 Q
"RTN","MAGVAQ01",250,0)
 ; 
"RTN","MAGVAQ01",251,0)
 ; Get the message and delete it from the queue if the flag is set
"RTN","MAGVAQ01",252,0)
 ;
"RTN","MAGVAQ01",253,0)
 D GXMLBYPK^MAGVAF03(.MAGRY,FILE,IEN,0)
"RTN","MAGVAQ01",254,0)
 I '$$ISOK^MAGVAF02(MAGRY(0)) Q  ; Check for error and quit if we have one
"RTN","MAGVAQ01",255,0)
 ;
"RTN","MAGVAQ01",256,0)
 ; Delete the message from QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",257,0)
 I FLAGS["D" D
"RTN","MAGVAQ01",258,0)
 . N DA,DIK
"RTN","MAGVAQ01",259,0)
 . S DIK=$$GETFILGL^MAGVAF01(FILE)
"RTN","MAGVAQ01",260,0)
 . S DA=IEN
"RTN","MAGVAQ01",261,0)
 . D ^DIK
"RTN","MAGVAQ01",262,0)
 . Q
"RTN","MAGVAQ01",263,0)
 S MAGRY(0)=$$OK^MAGVAF02()_$$RESDEL^MAGVAF02()_$$RESDEL^MAGVAF02()_IEN
"RTN","MAGVAQ01",264,0)
 Q
"RTN","MAGVAQ01",265,0)
 ;
"RTN","MAGVAQ01",266,0)
 ; ++++  Returns 1 if it meets the criteria, if not returns 0
"RTN","MAGVAQ01",267,0)
 ; Check if (the EARLIEST DELIVERY DATE/TIME is NULL or the EARLIEST DELIVERY DATE/TIME < NOW) 
"RTN","MAGVAQ01",268,0)
 ;  and (the EXPIRATION DATE/TIME is NULL OR the EXPIRATION DATE/TIME > NOW)
"RTN","MAGVAQ01",269,0)
 ;  
"RTN","MAGVAQ01",270,0)
 ; Input Parameters
"RTN","MAGVAQ01",271,0)
 ; ================
"RTN","MAGVAQ01",272,0)
 ; FILE = QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",273,0)
 ; IEN = IEN in QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",274,0)
 ; FLDMINDT = EARLIEST DELIVERY DATE/TIME field number in QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",275,0)
 ; FLDEXPDT = EXPIRATION DATE/TIME field number in QUEUE MESSAGE file (#2006.928)
"RTN","MAGVAQ01",276,0)
 ; 
"RTN","MAGVAQ01",277,0)
 ; Return Values
"RTN","MAGVAQ01",278,0)
 ; =============
"RTN","MAGVAQ01",279,0)
 ; if error ERRMSG = Failure status ^ Error message^
"RTN","MAGVAQ01",280,0)
 ;  
"RTN","MAGVAQ01",281,0)
CHECKQM(ERRMSG,FILE,IEN,FLDMINDT,FLDEXPDT) ; Returns 1 if it meets the criteria, if not returns 0 
"RTN","MAGVAQ01",282,0)
 N ERR,FIELDS,OUT,IENS,MAGRESA,FOUND
"RTN","MAGVAQ01",283,0)
 N NOW
"RTN","MAGVAQ01",284,0)
 S FOUND=0
"RTN","MAGVAQ01",285,0)
 S FIELDS=FLDMINDT_";"_FLDEXPDT
"RTN","MAGVAQ01",286,0)
 S IENS=IEN_","
"RTN","MAGVAQ01",287,0)
 D GETS^DIQ(FILE,IENS,FIELDS,"I","OUT","ERR") ; get EARLIEST DELIVERY DATE/TIME and EXPIRATION DATE/TIME values
"RTN","MAGVAQ01",288,0)
 I $D(ERR("DIERR")) D  Q 0
"RTN","MAGVAQ01",289,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"ERR")
"RTN","MAGVAQ01",290,0)
 . S ERRMSG=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Error getting values: "_MAGRESA(1) Q  ; Error getting the values
"RTN","MAGVAQ01",291,0)
 . Q
"RTN","MAGVAQ01",292,0)
 ;
"RTN","MAGVAQ01",293,0)
 ; Get the oldest QUEUE MESSAGE where
"RTN","MAGVAQ01",294,0)
 ;      (the EARLIEST DELIVERY DATE/TIME is NULL OR the EARLIEST DELIVERY DATE/TIME < NOW) 
"RTN","MAGVAQ01",295,0)
 ;  AND (the EXPIRATION DATE/TIME is NULL OR the EXPIRATION DATE/TIME > NOW)
"RTN","MAGVAQ01",296,0)
 ;  
"RTN","MAGVAQ01",297,0)
 S NOW=$$NOW^XLFDT
"RTN","MAGVAQ01",298,0)
 I ((OUT(FILE,IENS,FLDMINDT,"I")="")!(OUT(FILE,IENS,FLDMINDT,"I")<NOW))&((OUT(FILE,IENS,FLDEXPDT,"I")="")!(OUT(FILE,IENS,FLDEXPDT,"I")>NOW)) S FOUND=1
"RTN","MAGVAQ01",299,0)
 Q FOUND
"RTN","MAGVAQ02")
0^61^B45403991
"RTN","MAGVAQ02",1,0)
MAGVAQ02 ;WOIFO/MAT - Archiver Options for Queues ; 29 Aug 2012 10:35 PM
"RTN","MAGVAQ02",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAQ02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAQ02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAQ02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAQ02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAQ02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAQ02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAQ02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAQ02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAQ02",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAQ02",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAQ02",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAQ02",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAQ02",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAQ02",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAQ02",17,0)
 ;;
"RTN","MAGVAQ02",18,0)
 Q
"RTN","MAGVAQ02",19,0)
 ;
"RTN","MAGVAQ02",20,0)
 ; OPTIONS for the MAGV HDIG MENU.
"RTN","MAGVAQ02",21,0)
 ; SORT template is MAGVA-ASYNC-STORAGE-ERRORS.
"RTN","MAGVAQ02",22,0)
 ;
"RTN","MAGVAQ02",23,0)
 ;+++++ OPTION: MAGVA ASYNC STORAGE ERR LIST
"RTN","MAGVAQ02",24,0)
 ;
"RTN","MAGVAQ02",25,0)
QERRLIST ;
"RTN","MAGVAQ02",26,0)
 ;
"RTN","MAGVAQ02",27,0)
 ;--- Quit if SEARCH template not found.
"RTN","MAGVAQ02",28,0)
 N MAGTEMPL S MAGTEMPL=$$ZCONST01()
"RTN","MAGVAQ02",29,0)
 N TMPLIEN S TMPLIEN=$$YNDIBT(MAGTEMPL) I TMPLIEN<0 D  Q
"RTN","MAGVAQ02",30,0)
 . W !!,?2,"Search template ",MAGTEMPL," not found."
"RTN","MAGVAQ02",31,0)
 . Q
"RTN","MAGVAQ02",32,0)
 ;--- Quit if SEARCH template empty.
"RTN","MAGVAQ02",33,0)
 I $D(^DIBT(TMPLIEN,1))'=10 W !!,?2,"Search template has no entries." Q
"RTN","MAGVAQ02",34,0)
 ;
"RTN","MAGVAQ02",35,0)
 ;--- Output.
"RTN","MAGVAQ02",36,0)
 N TMPLDATA S TMPLDATA=$G(^DIBT(TMPLIEN,"QR"))
"RTN","MAGVAQ02",37,0)
 N CTITEM,TMPLDTTM S (CTITEM,TMPLDTTM)=""
"RTN","MAGVAQ02",38,0)
 S:$P(TMPLDATA,U)'="" TMPLDTTM=$$FMTE^XLFDT($P(TMPLDATA,U))
"RTN","MAGVAQ02",39,0)
 S:$P(TMPLDATA,U,2)'="" CTITEM=$P(TMPLDATA,U,2)
"RTN","MAGVAQ02",40,0)
 W !!,"Detail of ",CTITEM," item(s)" W:TMPLDTTM'="" " selected on "_TMPLDTTM
"RTN","MAGVAQ02",41,0)
 W ":",!!
"RTN","MAGVAQ02",42,0)
 ;
"RTN","MAGVAQ02",43,0)
 N MAGIEN S MAGIEN=0
"RTN","MAGVAQ02",44,0)
 F  S MAGIEN=$O(^DIBT(TMPLIEN,1,MAGIEN)) Q:MAGIEN=""  D
"RTN","MAGVAQ02",45,0)
 . ;
"RTN","MAGVAQ02",46,0)
 . W "Number ",$J(MAGIEN,8)," queued on: ",$$GET1^DIQ(2006.928,MAGIEN,3),!
"RTN","MAGVAQ02",47,0)
 . D QERRLISU(MAGIEN)
"RTN","MAGVAQ02",48,0)
 . W !
"RTN","MAGVAQ02",49,0)
 . Q
"RTN","MAGVAQ02",50,0)
 D YNEXIT
"RTN","MAGVAQ02",51,0)
 Q
"RTN","MAGVAQ02",52,0)
 ;+++++ Output for tag QERRLIST.
"RTN","MAGVAQ02",53,0)
QERRLISU(MAGQIEN) ;
"RTN","MAGVAQ02",54,0)
 ;
"RTN","MAGVAQ02",55,0)
 ;--- Validate parameter or quit.
"RTN","MAGVAQ02",56,0)
 I $G(MAGQIEN)="" W !,"Undefined QUEUE MESSAGE file entry." Q
"RTN","MAGVAQ02",57,0)
 N MAGARY S MAGARY=$NA(^TMP("MAGVAQ02",$J))
"RTN","MAGVAQ02",58,0)
 K @MAGARY
"RTN","MAGVAQ02",59,0)
 ;
"RTN","MAGVAQ02",60,0)
 ;--- Load WP field data to temp global array; quit if empty.
"RTN","MAGVAQ02",61,0)
 N MAGWP S MAGWP=$$GET1^DIQ(2006.928,MAGQIEN,6,,MAGARY)
"RTN","MAGVAQ02",62,0)
 I MAGWP="" W !,?18,"MESSAGE field is empty." Q
"RTN","MAGVAQ02",63,0)
 ;
"RTN","MAGVAQ02",64,0)
 ;--- Initialize the MXMLDOM or quit. (All calls: Supported IA #3561)
"RTN","MAGVAQ02",65,0)
 N MAGNDX S MAGNDX=$$EN^MXMLDOM(MAGARY)
"RTN","MAGVAQ02",66,0)
 I MAGNDX=0 W !,?18,"Error processing MESSAGE field data." Q
"RTN","MAGVAQ02",67,0)
 ;
"RTN","MAGVAQ02",68,0)
 ;--- Traverse child(ren) node(s) for element(s).
"RTN","MAGVAQ02",69,0)
 N CT S CT=1 F  S CT=$$CHILD^MXMLDOM(MAGNDX,1,CT) Q:CT=0  D
"RTN","MAGVAQ02",70,0)
 . ;
"RTN","MAGVAQ02",71,0)
 . N MAGNAME S MAGNAME=$$NAME^MXMLDOM(MAGNDX,CT)
"RTN","MAGVAQ02",72,0)
 . ;--- Process element lastError.
"RTN","MAGVAQ02",73,0)
 . D:MAGNAME="lastError"
"RTN","MAGVAQ02",74,0)
 . . N OUT S OUT=""
"RTN","MAGVAQ02",75,0)
 . . N TXT S:$$TEXT^MXMLDOM(MAGNDX,CT,"TXT") OUT=TXT(1)
"RTN","MAGVAQ02",76,0)
 . . W !,?36,MAGNAME_": "_OUT
"RTN","MAGVAQ02",77,0)
 . . Q
"RTN","MAGVAQ02",78,0)
 . ;--- Process element artifactToken.
"RTN","MAGVAQ02",79,0)
 . D:MAGNAME="artifactToken"
"RTN","MAGVAQ02",80,0)
 . . ;
"RTN","MAGVAQ02",81,0)
 . . ;--- Quit if no artifactToken value.
"RTN","MAGVAQ02",82,0)
 . . N ARTTKN S ARTTKN=$$QERRXML2(MAGNDX,CT) I +ARTTKN<0 W !,?18,$P(ARTTKN,"`",2) Q
"RTN","MAGVAQ02",83,0)
 . . W !,?32,MAGNAME,": ",ARTTKN
"RTN","MAGVAQ02",84,0)
 . . ;
"RTN","MAGVAQ02",85,0)
 . . ;--- Quit if no IEN in ARTIFACT file (#2006.919).
"RTN","MAGVAQ02",86,0)
 . . N ARTIEN,MAGERR S ARTIEN=$$FIND1^DIC(2006.916,,"X",ARTTKN,,,"MAGERR")
"RTN","MAGVAQ02",87,0)
 . . I $D(MAGERR) W !,?18,$G(MAGERR("DIERR",1,"TEXT",1)) Q
"RTN","MAGVAQ02",88,0)
 . . W !,?26,"ARTIFACT File entry: ",$S(ARTIEN=0:"Record not found.",1:ARTIEN)
"RTN","MAGVAQ02",89,0)
 . . ;
"RTN","MAGVAQ02",90,0)
 . . ;--- Get [SUCCESS=0] STORAGE TRANSACTION entries for ARTIFACT IEN.
"RTN","MAGVAQ02",91,0)
 . . W !,?18,"STORAGE TRANSACTION MESSAGE: "
"RTN","MAGVAQ02",92,0)
 . . K MAGERR
"RTN","MAGVAQ02",93,0)
 . . N MAGMSG
"RTN","MAGVAQ02",94,0)
 . . N MAGX S MAGX=$$GET1^DIQ(2006.926,ARTIEN,7,,"MAGMSG","MAGERR")
"RTN","MAGVAQ02",95,0)
 . . I $D(MAGERR) W "FileMan error: ",MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGVAQ02",96,0)
 . . ;
"RTN","MAGVAQ02",97,0)
 . . ;--- Output entry's MESSAGE field.
"RTN","MAGVAQ02",98,0)
 . . W $S(MAGMSG(1)="":"[null]",1:MAGMSG(1))
"RTN","MAGVAQ02",99,0)
 . . Q
"RTN","MAGVAQ02",100,0)
 . Q
"RTN","MAGVAQ02",101,0)
 W !
"RTN","MAGVAQ02",102,0)
 ;--- Cleanup.
"RTN","MAGVAQ02",103,0)
 D DELETE^MXMLDOM(MAGNDX)
"RTN","MAGVAQ02",104,0)
 K @MAGARY
"RTN","MAGVAQ02",105,0)
 Q
"RTN","MAGVAQ02",106,0)
 ;
"RTN","MAGVAQ02",107,0)
QERRXML2(MAGNDX,CT) ;
"RTN","MAGVAQ02",108,0)
 N OUT,TXT S OUT=-1_"`Element value not found."
"RTN","MAGVAQ02",109,0)
 S:$$TEXT^MXMLDOM(MAGNDX,CT,"TXT") OUT=TXT(1)
"RTN","MAGVAQ02",110,0)
 Q OUT
"RTN","MAGVAQ02",111,0)
 ;+++++ OPTION: MAGVA ASYNC STORAGE ERR REQU
"RTN","MAGVAQ02",112,0)
 ;
"RTN","MAGVAQ02",113,0)
 ;--- Re-queue QUEUE MESSAGE (#2006.928) async storage request error queue
"RTN","MAGVAQ02",114,0)
 ;      entries as async storage request queue entries.
"RTN","MAGVAQ02",115,0)
 ;
"RTN","MAGVAQ02",116,0)
 ;    Changes: #.01 QUEUE value to 'Async Storage Request Queue'.
"RTN","MAGVAQ02",117,0)
 ;             #3 ENQUEUED DATE/TIME
"RTN","MAGVAQ02",118,0)
 ;             #4 EARLIEST DELIVERY DATE/TIME
"RTN","MAGVAQ02",119,0)
 ;
"RTN","MAGVAQ02",120,0)
 ;    Remaining fields are unchanaged.
"RTN","MAGVAQ02",121,0)
 ;
"RTN","MAGVAQ02",122,0)
QERRREQ ;
"RTN","MAGVAQ02",123,0)
 ;
"RTN","MAGVAQ02",124,0)
 ;--- Initialize.
"RTN","MAGVAQ02",125,0)
 N NOW S NOW=$$NOW^XLFDT
"RTN","MAGVAQ02",126,0)
 N FILE S FILE=2006.927
"RTN","MAGVAQ02",127,0)
 N MAGQUEUE S MAGQUEUE=$$ZCONST02()
"RTN","MAGVAQ02",128,0)
 ;--- Quit if target QUEUE not found.
"RTN","MAGVAQ02",129,0)
 N MAGQIEN S MAGQIEN=$$YNQUEUE(FILE,MAGQUEUE)
"RTN","MAGVAQ02",130,0)
 I MAGQIEN<0 W !,"QUEUE: '"_MAGQUEUE_"' not found." Q
"RTN","MAGVAQ02",131,0)
 ;--- Get target QUEUE's TRIGGER DELAY IN SECONDS.
"RTN","MAGVAQ02",132,0)
 N MAGDELAY S MAGDELAY=$$GET1^DIQ(FILE,MAGQIEN,"TRIGGER DELAY IN SECONDS","I")
"RTN","MAGVAQ02",133,0)
 ;--- Set EARLIEST DELIVERY DATE/TIME. IA #10103 (Supported).
"RTN","MAGVAQ02",134,0)
 N MAGDLVRY S MAGDLVRY=$$FMADD^XLFDT(NOW,0,0,0,MAGDELAY)
"RTN","MAGVAQ02",135,0)
 ;
"RTN","MAGVAQ02",136,0)
 ;--- Quit if SEARCH template not found.
"RTN","MAGVAQ02",137,0)
 N MAGTEMPL S MAGTEMPL=$$ZCONST01()
"RTN","MAGVAQ02",138,0)
 N TMPLIEN S TMPLIEN=$$YNDIBT(MAGTEMPL)
"RTN","MAGVAQ02",139,0)
 I TMPLIEN<0 W !,?2,"Search template ",MAGTEMPL," not found." Q
"RTN","MAGVAQ02",140,0)
 ;--- Quit if SEARCH template empty.
"RTN","MAGVAQ02",141,0)
 I $D(^DIBT(TMPLIEN,1))'=10 W !!,?2,"Search template has no entries." Q
"RTN","MAGVAQ02",142,0)
 ;
"RTN","MAGVAQ02",143,0)
 ;--- Initialize.
"RTN","MAGVAQ02",144,0)
 N FILE1 S FILE1=2006.928
"RTN","MAGVAQ02",145,0)
 N DIE S DIE="^MAGV("_FILE1_","
"RTN","MAGVAQ02",146,0)
 N DA,DR S DR=".01////^S X=MAGQIEN;3////^S X=NOW;4////^S X=MAGDLVRY;"
"RTN","MAGVAQ02",147,0)
 ;
"RTN","MAGVAQ02",148,0)
 ;--- Requeue each IEN in the sort template.
"RTN","MAGVAQ02",149,0)
 W !,?3,"Requeuing entry ... Result",!
"RTN","MAGVAQ02",150,0)
 N CTREQUE,QMSGIEN S (CTREQUE,QMSGIEN)=0
"RTN","MAGVAQ02",151,0)
 F  S QMSGIEN=$O(^DIBT(TMPLIEN,1,QMSGIEN)) Q:QMSGIEN=""  D
"RTN","MAGVAQ02",152,0)
 . ;
"RTN","MAGVAQ02",153,0)
 . ;--- Quit if not found.
"RTN","MAGVAQ02",154,0)
 . W !,?10,$J(QMSGIEN,8) I '$D(^MAGV(FILE1,QMSGIEN)) W " ... not found." Q
"RTN","MAGVAQ02",155,0)
 . ;
"RTN","MAGVAQ02",156,0)
 . ;--- Quit if already requeued.
"RTN","MAGVAQ02",157,0)
 . I MAGQIEN=$$GET1^DIQ(FILE1,QMSGIEN,"QUEUE","I") W " ... already requeued." Q
"RTN","MAGVAQ02",158,0)
 . ;
"RTN","MAGVAQ02",159,0)
 . ;--- Requeue.
"RTN","MAGVAQ02",160,0)
 . N DA S DA=QMSGIEN D ^DIE W " ... requeued." S CTREQUE=CTREQUE+1
"RTN","MAGVAQ02",161,0)
 . Q
"RTN","MAGVAQ02",162,0)
 ;--- Output total requeue count.
"RTN","MAGVAQ02",163,0)
 W !!,$J(CTREQUE,8)," Async Storage Request Errors requeued."
"RTN","MAGVAQ02",164,0)
 ;--- Prompt to exit.
"RTN","MAGVAQ02",165,0)
 D YNEXIT
"RTN","MAGVAQ02",166,0)
 Q
"RTN","MAGVAQ02",167,0)
 ;+++++ OPTION: MAGVA ASYNC STORAGE ERR QURY
"RTN","MAGVAQ02",168,0)
 ;
"RTN","MAGVAQ02",169,0)
 ;--- Find QUEUE MESSAGE (#2006.928) async error request queue entries and
"RTN","MAGVAQ02",170,0)
 ;      store in template.
"RTN","MAGVAQ02",171,0)
 ;
"RTN","MAGVAQ02",172,0)
QERRQURY ;
"RTN","MAGVAQ02",173,0)
 ;--- Quit if SEARCH template not found.
"RTN","MAGVAQ02",174,0)
 N MAGTEMPL S MAGTEMPL=$$ZCONST01()
"RTN","MAGVAQ02",175,0)
 N MAGQUEUE S MAGQUEUE=$$ZCONST03()
"RTN","MAGVAQ02",176,0)
 N TMPLIEN S TMPLIEN=$$YNDIBT(MAGTEMPL)
"RTN","MAGVAQ02",177,0)
 I TMPLIEN<0 W !,?3,"Search template not found." Q
"RTN","MAGVAQ02",178,0)
 ;--- Quit if target QUEUE not found.
"RTN","MAGVAQ02",179,0)
 N MAGQIEN S MAGQIEN=$$YNQUEUE(2006.927,MAGQUEUE)
"RTN","MAGVAQ02",180,0)
 I MAGQIEN<0 W !,"QUEUE: '"_MAGQUEUE_"' not found." Q
"RTN","MAGVAQ02",181,0)
 ;--- Lock template and re-initialize matching entries matching QUEUE.
"RTN","MAGVAQ02",182,0)
 L +^DIBT(TMPLIEN):3 I $T D
"RTN","MAGVAQ02",183,0)
 . K ^DIBT(TMPLIEN,1)
"RTN","MAGVAQ02",184,0)
 . M ^DIBT(TMPLIEN,1)=^MAGV(2006.928,"B",MAGQIEN)
"RTN","MAGVAQ02",185,0)
 . N CT,ND S (CT,ND)=0 F  S ND=$O(^DIBT(TMPLIEN,1,ND)) Q:ND=""  S CT=CT+1
"RTN","MAGVAQ02",186,0)
 . S $P(^DIBT(TMPLIEN,"QR"),U)=$$NOW^XLFDT,$P(^DIBT(TMPLIEN,"QR"),U,2)=CT
"RTN","MAGVAQ02",187,0)
 . W !!,?3,$J(CT,5)," entries selected."
"RTN","MAGVAQ02",188,0)
 . L -^DIBT(TMPLIEN)
"RTN","MAGVAQ02",189,0)
 . Q
"RTN","MAGVAQ02",190,0)
 E  D
"RTN","MAGVAQ02",191,0)
 . W !!,"Template is locked."
"RTN","MAGVAQ02",192,0)
 . Q
"RTN","MAGVAQ02",193,0)
 D YNEXIT
"RTN","MAGVAQ02",194,0)
 Q
"RTN","MAGVAQ02",195,0)
 ;--- Internal Utility: Return IEN of input SORT template X.
"RTN","MAGVAQ02",196,0)
YNDIBT(X) ;
"RTN","MAGVAQ02",197,0)
 N DIC,Y S DIC="^DIBT(",DIC(0)="BX" D ^DIC
"RTN","MAGVAQ02",198,0)
 Q +Y
"RTN","MAGVAQ02",199,0)
 ;--- Internal Utility: Call ^DIR for exit prompt.
"RTN","MAGVAQ02",200,0)
YNEXIT ;
"RTN","MAGVAQ02",201,0)
 W !
"RTN","MAGVAQ02",202,0)
 N DIR S DIR("A")="Enter or '^' to exit"
"RTN","MAGVAQ02",203,0)
 S DIR(0)="E"
"RTN","MAGVAQ02",204,0)
 D ^DIR
"RTN","MAGVAQ02",205,0)
 Q
"RTN","MAGVAQ02",206,0)
 ;--- Internal Utility: Return IEN of input FILE entry X.
"RTN","MAGVAQ02",207,0)
YNQUEUE(FILE,X) ;
"RTN","MAGVAQ02",208,0)
 N DIC,Y S DIC="^MAGV("_FILE_",",DIC(0)="BX" D ^DIC
"RTN","MAGVAQ02",209,0)
 Q +Y
"RTN","MAGVAQ02",210,0)
 ;--- Template Name
"RTN","MAGVAQ02",211,0)
ZCONST01() ;
"RTN","MAGVAQ02",212,0)
 Q "MAGVA-ASYNC-STORAGE-ERRORS"
"RTN","MAGVAQ02",213,0)
 ;--- QUEUE file (#2006.927) entry name for requests.
"RTN","MAGVAQ02",214,0)
ZCONST02() ;
"RTN","MAGVAQ02",215,0)
 Q "Async Storage Request Queue"
"RTN","MAGVAQ02",216,0)
 ;--- QUEUE file entry name for errors.
"RTN","MAGVAQ02",217,0)
ZCONST03() ;
"RTN","MAGVAQ02",218,0)
 Q "Async Storage Request Error Queue"
"RTN","MAGVAQ02",219,0)
 ;
"RTN","MAGVAQ02",220,0)
 ; MAGVAQ02
"RTN","MAGVAU01")
0^62^B18289481
"RTN","MAGVAU01",1,0)
MAGVAU01 ;WOIFO/NST/DAC - Update records in storage files ; 14 Sep 2011 1:53 PM
"RTN","MAGVAU01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVAU01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVAU01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAU01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVAU01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVAU01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVAU01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVAU01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVAU01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVAU01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVAU01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVAU01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVAU01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVAU01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVAU01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVAU01",17,0)
 ;;
"RTN","MAGVAU01",18,0)
 Q
"RTN","MAGVAU01",19,0)
 ;
"RTN","MAGVAU01",20,0)
 ;*****  Update ARTIFACT DESCRIPTOR file (#2006.915)
"RTN","MAGVAU01",21,0)
 ;       
"RTN","MAGVAU01",22,0)
 ; RPC: MAGVA SET AD RETPOL
"RTN","MAGVAU01",23,0)
 ; 
"RTN","MAGVAU01",24,0)
 ; Input Parameters
"RTN","MAGVAU01",25,0)
 ; ================
"RTN","MAGVAU01",26,0)
 ; 
"RTN","MAGVAU01",27,0)
 ;   MAGPARAM("PK") = IEN 
"RTN","MAGVAU01",28,0)
 ;   MAGPARAM("RETENTION POLICY")
"RTN","MAGVAU01",29,0)
 ; 
"RTN","MAGVAU01",30,0)
 ; Return Values
"RTN","MAGVAU01",31,0)
 ; =============
"RTN","MAGVAU01",32,0)
 ; if error MAGRY = Failure status ^ Error message
"RTN","MAGVAU01",33,0)
 ; if success MAGRY = Success status
"RTN","MAGVAU01",34,0)
 ; 
"RTN","MAGVAU01",35,0)
UPDAD(MAGRY,MAGPARAM) ; RPC [MAGVA SET AD RETPOL]
"RTN","MAGVAU01",36,0)
 K MAGRY
"RTN","MAGVAU01",37,0)
 ; Update the record
"RTN","MAGVAU01",38,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.915,.MAGPARAM)
"RTN","MAGVAU01",39,0)
 Q
"RTN","MAGVAU01",40,0)
 ;
"RTN","MAGVAU01",41,0)
 ;*****  Update STORAGE PROVIDER file (#2006.917)
"RTN","MAGVAU01",42,0)
 ;       
"RTN","MAGVAU01",43,0)
 ; RPC: MAGVA UPDATE PROVIDER
"RTN","MAGVAU01",44,0)
 ; 
"RTN","MAGVAU01",45,0)
 ; Input Parameters
"RTN","MAGVAU01",46,0)
 ; ================
"RTN","MAGVAU01",47,0)
 ; 
"RTN","MAGVAU01",48,0)
 ;   MAGPARAM("PK") = IEN 
"RTN","MAGVAU01",49,0)
 ;   MAGPARAM("STORAGE PLACE")
"RTN","MAGVAU01",50,0)
 ;   MAGPARAM("ARCHIVE")
"RTN","MAGVAU01",51,0)
 ;   MAGPARAM("PRIMARY STORAGE")
"RTN","MAGVAU01",52,0)
 ;   MAGPARAM("ACTIVE")
"RTN","MAGVAU01",53,0)
 ;   MAGPARAM("WRITABLE")
"RTN","MAGVAU01",54,0)
 ; 
"RTN","MAGVAU01",55,0)
 ; Return Values
"RTN","MAGVAU01",56,0)
 ; =============
"RTN","MAGVAU01",57,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAU01",58,0)
 ; if success MAGRY = Success status
"RTN","MAGVAU01",59,0)
 ;
"RTN","MAGVAU01",60,0)
UPDPRV(MAGRY,MAGPARAM) ; RPC [MAGVA UPDATE PROVIDER]
"RTN","MAGVAU01",61,0)
 K MAGRY
"RTN","MAGVAU01",62,0)
 ; Update the record
"RTN","MAGVAU01",63,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.917,.MAGPARAM)
"RTN","MAGVAU01",64,0)
 Q
"RTN","MAGVAU01",65,0)
 ;*****  Update STORAGE PROVIDER AVAILABILITY file (#2006.924)
"RTN","MAGVAU01",66,0)
 ;       
"RTN","MAGVAU01",67,0)
 ; RPC: MAGVA UPDATE PROVAVAILTY
"RTN","MAGVAU01",68,0)
 ; 
"RTN","MAGVAU01",69,0)
 ; Input Parameters
"RTN","MAGVAU01",70,0)
 ; ================
"RTN","MAGVAU01",71,0)
 ; 
"RTN","MAGVAU01",72,0)
 ;   MAGPARAM("PK") = IEN 
"RTN","MAGVAU01",73,0)
 ;   MAGPARAM("START TIME") = DateTime in IDF format (YYYYMMDD.HHMMSS)
"RTN","MAGVAU01",74,0)
 ;   MAGPARAM("END TIME") = DateTime in IDF format (YYYYMMDD.HHMMSS)
"RTN","MAGVAU01",75,0)
 ;   MAGPARAM("ACTIVE")= 0/1
"RTN","MAGVAU01",76,0)
 ;   
"RTN","MAGVAU01",77,0)
 ; Return Values
"RTN","MAGVAU01",78,0)
 ; =============
"RTN","MAGVAU01",79,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAU01",80,0)
 ; if success MAGRY = Success status
"RTN","MAGVAU01",81,0)
 ;
"RTN","MAGVAU01",82,0)
UPDPA(MAGRY,MAGPARAM) ; RPC [MAGVA UPDATE PROVAVAILTY]
"RTN","MAGVAU01",83,0)
 K MAGRY
"RTN","MAGVAU01",84,0)
 ; Update the record
"RTN","MAGVAU01",85,0)
 S MAGPARAM("START TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("START TIME")))
"RTN","MAGVAU01",86,0)
 S MAGPARAM("END TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("END TIME")))
"RTN","MAGVAU01",87,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.924,.MAGPARAM)
"RTN","MAGVAU01",88,0)
 Q
"RTN","MAGVAU01",89,0)
 ;
"RTN","MAGVAU01",90,0)
 ;***** Set the Last Access Date/Time to current date/time
"RTN","MAGVAU01",91,0)
 ;      for artifact instance records in ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAU01",92,0)
 ;      and ARTIFACT file (#2006.916)
"RTN","MAGVAU01",93,0)
 ;       
"RTN","MAGVAU01",94,0)
 ; RPC: MAGVA UPDATE LAST ACCESS DT
"RTN","MAGVAU01",95,0)
 ; 
"RTN","MAGVAU01",96,0)
 ; Input Parameters
"RTN","MAGVAU01",97,0)
 ; ================
"RTN","MAGVAU01",98,0)
 ; 
"RTN","MAGVAU01",99,0)
 ;   MAGPARAM("PK") = PK (IEN) of the record in ARTIFACT INSTANCE file (#2006.918)
"RTN","MAGVAU01",100,0)
 ;   
"RTN","MAGVAU01",101,0)
 ; Return Values
"RTN","MAGVAU01",102,0)
 ; =============
"RTN","MAGVAU01",103,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAU01",104,0)
 ; if success MAGRY = Success status
"RTN","MAGVAU01",105,0)
 ;
"RTN","MAGVAU01",106,0)
UPDLADT(MAGRY,MAGAPARAM) ; RPC [MAGVA UPDATE LAST ACCESS DT]
"RTN","MAGVAU01",107,0)
 K MAGRY
"RTN","MAGVAU01",108,0)
 N NOW,PARAM
"RTN","MAGVAU01",109,0)
 N FILE,FLDAFK,IENS
"RTN","MAGVAU01",110,0)
 N OUT,ERR,MAGRESA
"RTN","MAGVAU01",111,0)
 N VALAFK
"RTN","MAGVAU01",112,0)
 N IEN ; PK in Artifact Instance file (#2006.918)
"RTN","MAGVAU01",113,0)
 S IEN=$G(MAGAPARAM("PK"))
"RTN","MAGVAU01",114,0)
 ; Check for PK
"RTN","MAGVAU01",115,0)
 I IEN="" S MAGRY=$$FAILED^MAGVAF02()_$$RESDEL^MAGVAF02()_"Input parameter PK is required." Q  ; Error getting the IEN
"RTN","MAGVAU01",116,0)
 ; Get Artifact Value
"RTN","MAGVAU01",117,0)
 S FILE=2006.918
"RTN","MAGVAU01",118,0)
 S IENS=IEN_","
"RTN","MAGVAU01",119,0)
 S FLDAFK=$$GETFLDID^MAGVAF01(FILE,"ARTIFACT")
"RTN","MAGVAU01",120,0)
 S VALAFK=$$GET1^DIQ(FILE,IENS,FLDAFK,"I")  ; get ARTIFACT value
"RTN","MAGVAU01",121,0)
 ;
"RTN","MAGVAU01",122,0)
 ; Update files
"RTN","MAGVAU01",123,0)
 S NOW=$$NOW^XLFDT  ; Get current datetime
"RTN","MAGVAU01",124,0)
 K PARAM
"RTN","MAGVAU01",125,0)
 S PARAM("PK")=IEN
"RTN","MAGVAU01",126,0)
 S PARAM("LAST ACCESS DATE/TIME")=NOW
"RTN","MAGVAU01",127,0)
 ; Update the last access datetime field in Artifact Instance file (#2006.918)
"RTN","MAGVAU01",128,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.918,.PARAM)
"RTN","MAGVAU01",129,0)
 I '$$ISOK^MAGVAF02(MAGRY) Q  ; Quit if error. MAGRY is already set
"RTN","MAGVAU01",130,0)
 ; Update Artifact file
"RTN","MAGVAU01",131,0)
 K PARAM,MAGRY
"RTN","MAGVAU01",132,0)
 S PARAM("PK")=VALAFK
"RTN","MAGVAU01",133,0)
 S PARAM("LAST ACCESS DATE/TIME")=NOW
"RTN","MAGVAU01",134,0)
 ; Update the last access datetime field in Artifact file (#2006.916)
"RTN","MAGVAU01",135,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.916,.PARAM)
"RTN","MAGVAU01",136,0)
 Q
"RTN","MAGVAU01",137,0)
 ;
"RTN","MAGVAU01",138,0)
 ;*****  Update ARTIFACT RETENTION POLICY file (#2006.921)
"RTN","MAGVAU01",139,0)
 ;       If "SATISFIED" is sent and the value equals true (1) then
"RTN","MAGVAU01",140,0)
 ;       set SATISFIED DATE/TIME to current date/time
"RTN","MAGVAU01",141,0)
 ;       
"RTN","MAGVAU01",142,0)
 ; RPC: MAGVA UPDATE ARETPOL
"RTN","MAGVAU01",143,0)
 ; 
"RTN","MAGVAU01",144,0)
 ; Input Parameters
"RTN","MAGVAU01",145,0)
 ; ================
"RTN","MAGVAU01",146,0)
 ; 
"RTN","MAGVAU01",147,0)
 ;   MAGPARAM("PK") = IEN of record in  ARTIFACT RETENTION POLICY file (#2006.921)
"RTN","MAGVAU01",148,0)
 ;   MAGPARAM("ACTIVE") = 0/1
"RTN","MAGVAU01",149,0)
 ; 
"RTN","MAGVAU01",150,0)
 ; Return Values
"RTN","MAGVAU01",151,0)
 ; =============
"RTN","MAGVAU01",152,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAU01",153,0)
 ; if success MAGRY = Success status
"RTN","MAGVAU01",154,0)
 ;
"RTN","MAGVAU01",155,0)
UPDARP(MAGRY,MAGPARAM) ; RPC [MAGVA UPDATE ARETPOL]
"RTN","MAGVAU01",156,0)
 K MAGRY
"RTN","MAGVAU01",157,0)
 S MAGPARAM("SATISFIED DATE/TIME")=$$IDF2FM^MAGVAF01($G(MAGPARAM("SATISFIED DATE/TIME")))
"RTN","MAGVAU01",158,0)
 ; Update the record
"RTN","MAGVAU01",159,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.921,.MAGPARAM)
"RTN","MAGVAU01",160,0)
 Q
"RTN","MAGVAU01",161,0)
 ;
"RTN","MAGVAU01",162,0)
 ;*****  Update RETENTION POLICY STORAGE PROVIDER MAP file (#2006.923)
"RTN","MAGVAU01",163,0)
 ;       
"RTN","MAGVAU01",164,0)
 ; RPC: MAGVA UPDATE RETPOL PROV MAP
"RTN","MAGVAU01",165,0)
 ; 
"RTN","MAGVAU01",166,0)
 ; Input Parameters
"RTN","MAGVAU01",167,0)
 ; ================
"RTN","MAGVAU01",168,0)
 ; 
"RTN","MAGVAU01",169,0)
 ;   MAGPARAM("PK") = IEN 
"RTN","MAGVAU01",170,0)
 ;   MAGPARAM("SYNCHRONOUS") = 0/1
"RTN","MAGVAU01",171,0)
 ;   MAGPARAM("OFFSITE") = 0/1
"RTN","MAGVAU01",172,0)
 ; 
"RTN","MAGVAU01",173,0)
 ; Return Values
"RTN","MAGVAU01",174,0)
 ; =============
"RTN","MAGVAU01",175,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAU01",176,0)
 ; if success MAGRY = Success status 
"RTN","MAGVAU01",177,0)
 ; 
"RTN","MAGVAU01",178,0)
UPDRPPM(MAGRY,MAGPARAM) ; RPC [MAGVA UPDATE RETPOL PROV MAP]
"RTN","MAGVAU01",179,0)
 K MAGRY
"RTN","MAGVAU01",180,0)
 ; Update the record
"RTN","MAGVAU01",181,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.923,.MAGPARAM)
"RTN","MAGVAU01",182,0)
 Q
"RTN","MAGVAU01",183,0)
 ;
"RTN","MAGVAU01",184,0)
 ;*****  Update ARTIFACT file (#2006.916)
"RTN","MAGVAU01",185,0)
 ;       
"RTN","MAGVAU01",186,0)
 ; RPC: MAGVA UPDATE ARTIFACT
"RTN","MAGVAU01",187,0)
 ; 
"RTN","MAGVAU01",188,0)
 ; Input Parameters
"RTN","MAGVAU01",189,0)
 ; ================
"RTN","MAGVAU01",190,0)
 ; 
"RTN","MAGVAU01",191,0)
 ;   MAGPARAM("PK") = IEN 
"RTN","MAGVAU01",192,0)
 ;   MAGPARAM("CRC")
"RTN","MAGVAU01",193,0)
 ;   MAGPARAM("SIZE IN BYTES")
"RTN","MAGVAU01",194,0)
 ; 
"RTN","MAGVAU01",195,0)
 ; Return Values
"RTN","MAGVAU01",196,0)
 ; =============
"RTN","MAGVAU01",197,0)
 ; if error MAGRY = Failure status ^ Error message^
"RTN","MAGVAU01",198,0)
 ; if success MAGRY = Success status
"RTN","MAGVAU01",199,0)
 ;
"RTN","MAGVAU01",200,0)
UPDAFACT(MAGRY,MAGPARAM) ; RPC [MAGVA UPDATE ARTIFACT]
"RTN","MAGVAU01",201,0)
 K MAGRY
"RTN","MAGVAU01",202,0)
 ; Make sure CREATING APPLICATION and CREATED DATE/TIME are not altered
"RTN","MAGVAU01",203,0)
 K MAGPARAM("CREATING APPLICATION")
"RTN","MAGVAU01",204,0)
 K MAGPARAM("CREATED DATE/TIME")
"RTN","MAGVAU01",205,0)
 ; Update the record
"RTN","MAGVAU01",206,0)
 D UPDRCD^MAGVAF01(.MAGRY,2006.916,.MAGPARAM)
"RTN","MAGVAU01",207,0)
 Q
"RTN","MAGVD001")
0^63^B16780675
"RTN","MAGVD001",1,0)
MAGVD001 ;WOIFO/BT,NST,DAC - Delete Study By Accession Number ; 18 Jul 2012 4:32 PM
"RTN","MAGVD001",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD001",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD001",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD001",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD001",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD001",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD001",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD001",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD001",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD001",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD001",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD001",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD001",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD001",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD001",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD001",17,0)
 ;;
"RTN","MAGVD001",18,0)
 Q
"RTN","MAGVD001",19,0)
 ;
"RTN","MAGVD001",20,0)
DELSTUDY ; Delete Study by Accession Number (option MAG SYS-DELETE STUDY)
"RTN","MAGVD001",21,0)
 N ACCNUM,SENSEMP,ERR,MAGDFN,REASON
"RTN","MAGVD001",22,0)
 N OUT,MAGARR,SSEP,RES,Y,DG1,DGOPT
"RTN","MAGVD001",23,0)
 S SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVD001",24,0)
 ;
"RTN","MAGVD001",25,0)
 F  S ACCNUM=$$GETACC^MAGVD001() Q:ACCNUM=""  D
"RTN","MAGVD001",26,0)
 . D GIBYACC^MAGVD007(.OUT,ACCNUM,.MAGARR)  ; Get Images to be deleted
"RTN","MAGVD001",27,0)
 . I OUT<0 D EN^DDIOL($P(OUT,SSEP,2),"","!!") Q 
"RTN","MAGVD001",28,0)
 . I '$D(MAGARR) D EN^DDIOL("No image found for this accession number","","!!") Q 
"RTN","MAGVD001",29,0)
 . S MAGDFN=MAGARR(1,"MAGDFN")  ; get the patient
"RTN","MAGVD001",30,0)
 . S SENSEMP=$$ISPATSEN^MAGVD001(MAGDFN) ;is sensitive patient?
"RTN","MAGVD001",31,0)
 . I SENSEMP,'$$CONFSENS^MAGVD001() D EN^DDIOL("Deletion Canceled. Study was not deleted.","","!!") Q
"RTN","MAGVD001",32,0)
 . S Y=MAGDFN,DG1="",DGOPT="MAG SYS-DELETE STUDY",DIC(0)=""
"RTN","MAGVD001",33,0)
 . D:SENSEMP SETLOG^DGSEC ; IA #2242 - Log sensitive patient access
"RTN","MAGVD001",34,0)
 . D SHOWINFO^MAGVD004(ACCNUM,.MAGARR)
"RTN","MAGVD001",35,0)
 . S REASON=$$GETRSN^MAGVD001()
"RTN","MAGVD001",36,0)
 . I REASON="" D EN^DDIOL("Deletion Canceled. Study was not deleted.","","!!") Q
"RTN","MAGVD001",37,0)
 . I '$$CONFIRM^MAGVD001(ACCNUM) D EN^DDIOL("Deletion Canceled. Study was not deleted.","","!!") Q
"RTN","MAGVD001",38,0)
 . D DELACC^MAGVD002(.OUT,.MAGARR,REASON)  ; delete images provided
"RTN","MAGVD001",39,0)
 . S RES=$P(OUT,SSEP)
"RTN","MAGVD001",40,0)
 . S ERR=$P(OUT,SSEP,2)
"RTN","MAGVD001",41,0)
 . I RES=0 D EN^DDIOL("Deletion successfully completed!","","!!") Q
"RTN","MAGVD001",42,0)
 . D EN^DDIOL(ERR,"","!!")
"RTN","MAGVD001",43,0)
 . Q
"RTN","MAGVD001",44,0)
 Q
"RTN","MAGVD001",45,0)
 ;
"RTN","MAGVD001",46,0)
GETACC() ; Get Accession Number
"RTN","MAGVD001",47,0)
 N DIR,X,Y
"RTN","MAGVD001",48,0)
 S DIR(0)="FO^^K:'$$ISMSKOK^MAGVD001(X) X"
"RTN","MAGVD001",49,0)
 S DIR("A")="Enter an Accession Number"
"RTN","MAGVD001",50,0)
 S DIR("A",1)=""
"RTN","MAGVD001",51,0)
 S DIR("??",1)="By Entering Accession Number, all Studies with this Accession Number"
"RTN","MAGVD001",52,0)
 S DIR("??",2)="will be deleted."
"RTN","MAGVD001",53,0)
 S DIR("?")="Enter Accession Number, e.g. GMRC-123, 111231-345, 660-111231-345, or ""^"" to exit."
"RTN","MAGVD001",54,0)
 D ^DIR
"RTN","MAGVD001",55,0)
 S:Y="^" Y=""
"RTN","MAGVD001",56,0)
 Q Y
"RTN","MAGVD001",57,0)
 ;
"RTN","MAGVD001",58,0)
ISMSKOK(Y) ; Verify accession number format - 0 invalid; 1 - valid
"RTN","MAGVD001",59,0)
 N OK
"RTN","MAGVD001",60,0)
 S OK=0
"RTN","MAGVD001",61,0)
 I $L(Y,"-")=3 S:Y?3N.N1"-"6N1"-"1.N OK=1
"RTN","MAGVD001",62,0)
 I $L(Y,"-")=2 D
"RTN","MAGVD001",63,0)
 . I Y?6N1"-"1.N S OK=1
"RTN","MAGVD001",64,0)
 . I Y?1"GMRC-"1.N S OK=1
"RTN","MAGVD001",65,0)
 . Q
"RTN","MAGVD001",66,0)
 Q OK
"RTN","MAGVD001",67,0)
 ;
"RTN","MAGVD001",68,0)
ISPATSEN(MAGDFN) ; Return 1 if patient for the study is a sensitive, 0 otherwise
"RTN","MAGVD001",69,0)
 N SENSEMP
"RTN","MAGVD001",70,0)
 S SENSEMP=$$SENSEMP^MAGUPSE(MAGDFN)
"RTN","MAGVD001",71,0)
 Q (SENSEMP>0)
"RTN","MAGVD001",72,0)
 ;
"RTN","MAGVD001",73,0)
CONFSENS() ; Continue processing confirmation for sensitive patient
"RTN","MAGVD001",74,0)
 N DIR,X,Y
"RTN","MAGVD001",75,0)
 S DIR(0)="FO",DIR("A")="Sensitive Patient. Enter 'OK' to continue"
"RTN","MAGVD001",76,0)
 S DIR("?")="Enter 'OK' to continue or '^' to skip"
"RTN","MAGVD001",77,0)
 D ^DIR
"RTN","MAGVD001",78,0)
 Q ($$UC^MAGVD001(Y)="OK")
"RTN","MAGVD001",79,0)
 ;
"RTN","MAGVD001",80,0)
GETRSN() ; Select reason for deletion
"RTN","MAGVD001",81,0)
 N DIC,DTOUT,DUOUT,TODAY,X,Y
"RTN","MAGVD001",82,0)
 S TODAY=+$$NOW^XLFDT
"RTN","MAGVD001",83,0)
 W !
"RTN","MAGVD001",84,0)
 S DIC="^MAG(2005.88,",DIC(0)="AEQVZN",DIC("S")="I ($P(^(0),U,2)[""D""&(($P(^(0),U,3)="""")!(TODAY<($P(^(0),U,3)))))",DIC("W")=""
"RTN","MAGVD001",85,0)
 S DIC("A")="Select a reason for deletion: "
"RTN","MAGVD001",86,0)
 D ^DIC
"RTN","MAGVD001",87,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","MAGVD001",88,0)
 I (Y="")!(Y="^") Q ""
"RTN","MAGVD001",89,0)
 Q $P(Y,U,2) ; Return reason for deletion
"RTN","MAGVD001",90,0)
CONFIRM(ACCNUM) ; Confirmation - last chance to cancel
"RTN","MAGVD001",91,0)
 N DIR,X,Y
"RTN","MAGVD001",92,0)
 S DIR(0)="Y",DIR("A")="ARE YOU SURE YOU WANT TO DELETE STUDIES FOR ACCESSION #: "_ACCNUM
"RTN","MAGVD001",93,0)
 S DIR("B")="NO"
"RTN","MAGVD001",94,0)
 D ^DIR
"RTN","MAGVD001",95,0)
 Q Y
"RTN","MAGVD001",96,0)
 ;
"RTN","MAGVD001",97,0)
UC(STR) ;Convert to upper case
"RTN","MAGVD001",98,0)
 N X,Y
"RTN","MAGVD001",99,0)
 S X=STR X ^%ZOSF("UPPERCASE")
"RTN","MAGVD001",100,0)
 Q Y
"RTN","MAGVD001",101,0)
 ;
"RTN","MAGVD002")
0^64^B7446987
"RTN","MAGVD002",1,0)
MAGVD002 ;WOIFO/DAC,MLH - Delete old and new studies ;  3 Feb 2012 01:19 PM
"RTN","MAGVD002",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD002",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD002",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD002",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD002",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD002",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD002",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD002",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD002",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD002",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD002",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD002",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD002",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD002",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD002",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD002",17,0)
 ;;
"RTN","MAGVD002",18,0)
 Q
"RTN","MAGVD002",19,0)
 ; Input Variables:
"RTN","MAGVD002",20,0)
 ; MAGARR(1..n,"IMAGES")
"RTN","MAGVD002",21,0)
 ; MAGARR(1..n,"MAGDFN")  - Patient DFN
"RTN","MAGVD002",22,0)
 ; MAGARR(1..n,"MAGD1")   - Radiology DT
"RTN","MAGVD002",23,0)
 ; MAGARR(1..n,"MAGD2")   - Radiology P
"RTN","MAGVD002",24,0)
 ; REASON - Reason for deletion
"RTN","MAGVD002",25,0)
 ; 
"RTN","MAGVD002",26,0)
 ; Output Variable:
"RTN","MAGVD002",27,0)
 ; OUT - status`status message
"RTN","MAGVD002",28,0)
 ;       0 indicates success, a negative integer indicates an error occurred 
"RTN","MAGVD002",29,0)
 ; 
"RTN","MAGVD002",30,0)
DELACC(OUT,MAGARR,REASON) ; Delete old and new studies using MAGARR info - called from option MAG SYS-DELETE STUDY
"RTN","MAGVD002",31,0)
 N SSEP,ISEP,IMAGEIEN,OUTAUD,EVENT,HOST,APP,MESSAGE,DATA,I,STUDIEN
"RTN","MAGVD002",32,0)
 N RESULT
"RTN","MAGVD002",33,0)
 S SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVD002",34,0)
 S ISEP=$$INPUTSEP^MAGVRS41
"RTN","MAGVD002",35,0)
 I $G(REASON)="" S OUT=-8_SSEP_"No reason provided" Q
"RTN","MAGVD002",36,0)
 I '$D(MAGARR(1,"IMAGES")) S OUT=-9_SSEP_"No image IENs provided" Q 
"RTN","MAGVD002",37,0)
 S IMAGEIEN="",OUT=""
"RTN","MAGVD002",38,0)
 F I=1:1 Q:'$D(MAGARR(I,"IMAGES"))!(OUT'="")  D
"RTN","MAGVD002",39,0)
 . F  S IMAGEIEN=$O(MAGARR(I,"IMAGES",IMAGEIEN)) Q:IMAGEIEN=""  D
"RTN","MAGVD002",40,0)
 . . I MAGARR(I,"IMAGES",IMAGEIEN)="" D
"RTN","MAGVD002",41,0)
 . . . D IMAGEDEL^MAGGTID(.RESULT,IMAGEIEN,1,REASON)
"RTN","MAGVD002",42,0)
 . . . I $P($G(RESULT(0)),"^")=0 S OUT=-10_SSEP_$P($G(RESULT(0)),"^",2) Q
"RTN","MAGVD002",43,0)
 . . . Q
"RTN","MAGVD002",44,0)
 . . I MAGARR(I,"IMAGES",IMAGEIEN)'="" D
"RTN","MAGVD002",45,0)
 . . . S STUDIEN=MAGARR(I,"IMAGES",IMAGEIEN)
"RTN","MAGVD002",46,0)
 . . . D INACTIVT^MAGVRS41(.RESULT,2005.62,STUDIEN,"",1,REASON)
"RTN","MAGVD002",47,0)
 . . . I +$G(RESULT(1))<0 S OUT=RESULT(1) Q
"RTN","MAGVD002",48,0)
 . . . Q
"RTN","MAGVD002",49,0)
 . . Q
"RTN","MAGVD002",50,0)
 . Q
"RTN","MAGVD002",51,0)
 I OUT="" S OUT=0  ; set success value
"RTN","MAGVD002",52,0)
 S EVENT="DELETE"
"RTN","MAGVD002",53,0)
 S HOST=""
"RTN","MAGVD002",54,0)
 S APP="MAG SYS-DELETE STUDY"
"RTN","MAGVD002",55,0)
 S MESSAGE=""
"RTN","MAGVD002",56,0)
 S DATA(1)="DUZ"_ISEP_DUZ
"RTN","MAGVD002",57,0)
 D EVENT^MAGUAUD(.OUTAUD,EVENT,HOST,APP,MESSAGE,.DATA)
"RTN","MAGVD002",58,0)
 Q
"RTN","MAGVD003")
0^65^B7699485
"RTN","MAGVD003",1,0)
MAGVD003 ;WOIFO/NST - Utilities for RPC calls for deletion ; 30 Jan 2012 04:12 PM
"RTN","MAGVD003",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD003",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD003",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD003",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD003",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD003",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD003",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD003",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD003",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD003",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD003",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD003",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD003",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD003",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD003",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD003",17,0)
 ;;
"RTN","MAGVD003",18,0)
 Q
"RTN","MAGVD003",19,0)
 ;+++++  Get Accession number by IEN in IMAGE file (#2005)
"RTN","MAGVD003",20,0)
 ; 
"RTN","MAGVD003",21,0)
 ; Input Parameters
"RTN","MAGVD003",22,0)
 ; ================
"RTN","MAGVD003",23,0)
 ; MAGDA - IEN in IMAGE file (#2005)
"RTN","MAGVD003",24,0)
 ; 
"RTN","MAGVD003",25,0)
 ; Return Values
"RTN","MAGVD003",26,0)
 ; =============
"RTN","MAGVD003",27,0)
 ; if error OUT = Failed Status^Error message
"RTN","MAGVD003",28,0)
 ; if success OUT = Success status^^Accession number
"RTN","MAGVD003",29,0)
 ; 
"RTN","MAGVD003",30,0)
GETACN(OUT,MAGDA) ; get accession number
"RTN","MAGVD003",31,0)
 N PARENTFN,PARENTD0,MAGD2,CONSIX,ERR,ACN
"RTN","MAGVD003",32,0)
 N RESDEL
"RTN","MAGVD003",33,0)
 S RESDEL=$$RESDEL^MAGVAF02()  ; Result delimiter
"RTN","MAGVD003",34,0)
 I '$$ISGRP^MAGGI11(MAGDA,.ERR) D  Q
"RTN","MAGVD003",35,0)
 . S:$G(ERR)'="" OUT=$$FAILED^MAGVAF02()_RESDEL_$P(ERR,"^",2)
"RTN","MAGVD003",36,0)
 . S:$G(ERR)="" OUT=$$FAILED^MAGVAF02()_RESDEL_"Image "_MAGDA_" is not a group image"
"RTN","MAGVD003",37,0)
 . Q
"RTN","MAGVD003",38,0)
 S MAGD2=$G(^MAG(2005,MAGDA,2))
"RTN","MAGVD003",39,0)
 S PARENTFN=$P(MAGD2,"^",6)  ; Parent Data File
"RTN","MAGVD003",40,0)
 S PARENTD0=+$P(MAGD2,"^",7)  ; Parent Global Root D0
"RTN","MAGVD003",41,0)
 S ACN=""
"RTN","MAGVD003",42,0)
 I (PARENTFN=74),PARENTD0 D  ; Radiology Image
"RTN","MAGVD003",43,0)
 . S ACN=$P($G(^RARPT(PARENTD0,0)),"^") ; IA # 1171    ; Get Accession number
"RTN","MAGVD003",44,0)
 . Q
"RTN","MAGVD003",45,0)
 I (PARENTFN=8925),PARENTD0 D
"RTN","MAGVD003",46,0)
 . S CONSIX=$$GET1^DIQ(8925,PARENTD0,1405,"I")  ; #1405 REQUESTING PACKAGE REFERENCE
"RTN","MAGVD003",47,0)
 . S:$P(CONSIX,";",2)="GMR(123," ACN="GMRC-"_$P(CONSIX,";",1)
"RTN","MAGVD003",48,0)
 . Q
"RTN","MAGVD003",49,0)
 I (PARENTFN=2006.5839),PARENTD0 D  ; Consult Image
"RTN","MAGVD003",50,0)
 . S ACN="GMRC-"_PARENTD0
"RTN","MAGVD003",51,0)
 . Q
"RTN","MAGVD003",52,0)
 S:ACN="" OUT=$$FAILED^MAGVAF02()_RESDEL_"Accession number not found"
"RTN","MAGVD003",53,0)
 D:ACN'="" SETOKVAL^MAGVAF02(.OUT,ACN)
"RTN","MAGVD003",54,0)
 Q
"RTN","MAGVD004")
0^66^B6940481
"RTN","MAGVD004",1,0)
MAGVD004 ;WOIFO/BT,NST,MLH - Delete Study By Accession Number - display outputs; [ 02/03/2012 10:50 ]
"RTN","MAGVD004",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD004",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD004",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD004",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD004",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD004",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD004",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD004",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD004",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD004",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD004",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD004",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD004",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD004",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD004",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD004",17,0)
 ;;
"RTN","MAGVD004",18,0)
 Q
"RTN","MAGVD004",19,0)
 ;
"RTN","MAGVD004",20,0)
SHOWINFO(ACCNUM,MAGARR) ; show patient name, procedures, studies, series, #of images/series
"RTN","MAGVD004",21,0)
 N MAGARRIX,MAGARRKT
"RTN","MAGVD004",22,0)
 D EN^DDIOL("Information on Study(ies) to be deleted for accession number "_ACCNUM_":","","!!")
"RTN","MAGVD004",23,0)
 D EN^DDIOL("------------------------------------------------------------------------","","!")
"RTN","MAGVD004",24,0)
 S MAGARRIX=0 F MAGARRKT=0:1 S MAGARRIX=$O(MAGARR(MAGARRIX)) Q:'MAGARRIX
"RTN","MAGVD004",25,0)
 S MAGARRIX=0
"RTN","MAGVD004",26,0)
 F  S MAGARRIX=$O(MAGARR(MAGARRIX)) Q:'MAGARRIX  D
"RTN","MAGVD004",27,0)
 . N DFN,VADM,STYSERKT,I
"RTN","MAGVD004",28,0)
 . D:MAGARRKT>1 EN^DDIOL("GROUP "_MAGARRIX_":","","!!")
"RTN","MAGVD004",29,0)
 . S DFN=$G(MAGARR(MAGARRIX,"MAGDFN")) D DEM^VADPT
"RTN","MAGVD004",30,0)
 . D EN^DDIOL("PATIENT: "_$G(VADM(1)),"","!")
"RTN","MAGVD004",31,0)
 . D EN^DDIOL(" SSN: "_$P($G(VADM(2)),"^",2),"","?30")
"RTN","MAGVD004",32,0)
 . D EN^DDIOL(" DOB: "_$P($G(VADM(3)),"^",2),"","?55")
"RTN","MAGVD004",33,0)
 . D EN^DDIOL("PROCEDURE: "_$G(MAGARR(MAGARRIX,"PROC")),"","!")
"RTN","MAGVD004",34,0)
 . D STYSERKT^MAGVD010(.STYSERKT,$NA(MAGARR(MAGARRIX,"IMAGES"))) ; count studies & series
"RTN","MAGVD004",35,0)
 . D EN^DDIOL("STUDIES: "_$G(STYSERKT("STUDY")))
"RTN","MAGVD004",36,0)
 . D EN^DDIOL(" SERIES: "_$G(STYSERKT("SERIES")),"","?15")
"RTN","MAGVD004",37,0)
 . D EN^DDIOL(" IMAGES: "_$G(STYSERKT("IMAGE")),"","?30")
"RTN","MAGVD004",38,0)
 . Q
"RTN","MAGVD004",39,0)
 Q
"RTN","MAGVD005")
0^67^B4474227
"RTN","MAGVD005",1,0)
MAGVD005 ;WOIFO/MLH - Delete study by accession number - collect study summary info ; 03-Feb-12 04:39 PM
"RTN","MAGVD005",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD005",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD005",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD005",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD005",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD005",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD005",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD005",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD005",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD005",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD005",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD005",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD005",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD005",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD005",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD005",17,0)
 ;;
"RTN","MAGVD005",18,0)
 Q
"RTN","MAGVD005",19,0)
 ;
"RTN","MAGVD005",20,0)
GETSTDY(IARRAY,P,MAGD0,MAGD1,MAGD2,PROC) ; Get summary data for Radiology images (old DB structure)
"RTN","MAGVD005",21,0)
 N V,P1,MAGIEN
"RTN","MAGVD005",22,0)
 S MAGD0=$P(P,"^",2),MAGD1=$P(P,"^",3),MAGD2=$P(P,"^",4)
"RTN","MAGVD005",23,0)
 I MAGD0'="",MAGD1'="",MAGD2'="" D
"RTN","MAGVD005",24,0)
 . S V=$P($G(^RADPT(MAGD0,"DT",MAGD1,"P",MAGD2,0)),"^",17) Q:'V  ; IA # 1172
"RTN","MAGVD005",25,0)
 . S P1=0 F  S P1=$O(^RARPT(V,2005,P1)) Q:'P1  D  ; IA # 1171
"RTN","MAGVD005",26,0)
 . . S MAGIEN=+$G(^RARPT(V,2005,P1,0)) ; IA # 1171
"RTN","MAGVD005",27,0)
 . . S:MAGIEN IARRAY(MAGIEN)=""
"RTN","MAGVD005",28,0)
 . . Q
"RTN","MAGVD005",29,0)
 . S PROC=$$GET1^DIQ(70.03,MAGD2_","_MAGD1_","_MAGD0,2)
"RTN","MAGVD005",30,0)
 . Q
"RTN","MAGVD005",31,0)
 Q
"RTN","MAGVD006")
0^68^B9747291
"RTN","MAGVD006",1,0)
MAGVD006 ;WOIFO/NST,MLH - Imaging functions for Query/Retrieve ; 03 Feb 2012 9:14 AM
"RTN","MAGVD006",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD006",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD006",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD006",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD006",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD006",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD006",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD006",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD006",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD006",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD006",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD006",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD006",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD006",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD006",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD006",17,0)
 ;;
"RTN","MAGVD006",18,0)
 Q
"RTN","MAGVD006",19,0)
 ;
"RTN","MAGVD006",20,0)
ACCIEN(P,REQ,IARRAY,MAGD0,MAGD1,MAGD2,PROC)  ; Function to get IEN & procedure description of all images for an accession #
"RTN","MAGVD006",21,0)
 ; Uses entries from "6" queue built by ACCNUM^MAGDQR07
"RTN","MAGVD006",22,0)
 N TYPE
"RTN","MAGVD006",23,0)
 S TYPE=$P(P,"^",1) Q:"^R^C^N^"'[("^"_TYPE_"^")  ; entry from "6" queue
"RTN","MAGVD006",24,0)
 ; switch - build image / group array for old Rad, old Consult or new DB?
"RTN","MAGVD006",25,0)
 D @($S(TYPE="R":"ACCOLD",TYPE="C":"ACCOLD",1:"ACCNEW")_"(.IARRAY,P,.MAGD0,.MAGD1,.MAGD2,.PROC)")
"RTN","MAGVD006",26,0)
 Q
"RTN","MAGVD006",27,0)
ACCOLD(IARRAY,P,MAGD0,MAGD1,MAGD2,PROC) ; old Rad or old Consult
"RTN","MAGVD006",28,0)
 N TYPE,IMAGE
"RTN","MAGVD006",29,0)
 S TYPE=$P(P,"^",1) I TYPE'="R",TYPE'="C" Q
"RTN","MAGVD006",30,0)
 D  ; switch - Radiology or Consult?
"RTN","MAGVD006",31,0)
 . I TYPE="R" D  Q  ; Radiology Images (old DB structure) case
"RTN","MAGVD006",32,0)
 . . D GETSTDY^MAGVD005(.IARRAY,P,.MAGD0,.MAGD1,.MAGD2,.PROC)
"RTN","MAGVD006",33,0)
 . . S IMAGE=$O(IARRAY(""))
"RTN","MAGVD006",34,0)
 . . Q
"RTN","MAGVD006",35,0)
 . I TYPE="C" D  Q  ; Consult Images (old DB structure) case
"RTN","MAGVD006",36,0)
 . . ; P = C ^ DFN ^ File# ^ IEN ^ Image# ^ Accession#
"RTN","MAGVD006",37,0)
 . . S IMAGE=$P(P,"^",5) Q:'IMAGE  S IARRAY(IMAGE)=""
"RTN","MAGVD006",38,0)
 . . S MAGD0=+$P($G(^MAG(2005,+IMAGE,0)),"^",7)  ; Patient
"RTN","MAGVD006",39,0)
 . . S (MAGD1,MAGD2)=0 ; Not a radiology study...
"RTN","MAGVD006",40,0)
 . . Q
"RTN","MAGVD006",41,0)
 . Q
"RTN","MAGVD006",42,0)
 S:$G(IMAGE) PROC=$P($G(^MAG(2005,IMAGE,2)),"^",4)
"RTN","MAGVD006",43,0)
 Q
"RTN","MAGVD006",44,0)
ACCNEW(IARRAY,P,MAGD0,MAGD1,MAGD2,PROC) ; new DB structure case
"RTN","MAGVD006",45,0)
 N TYPE,STUDYIX,SERIESIX,SOPIX
"RTN","MAGVD006",46,0)
 S TYPE=$P(P,"^",1)
"RTN","MAGVD006",47,0)
 Q:TYPE'="N"
"RTN","MAGVD006",48,0)
 S STUDYIX=$P(P,"^",3) Q:STUDYIX=""
"RTN","MAGVD006",49,0)
 S MAGD0=$P(P,"^",2)  ; Patient
"RTN","MAGVD006",50,0)
 S SERIESIX=""
"RTN","MAGVD006",51,0)
 F  S SERIESIX=$O(^MAGV(2005.63,"C",STUDYIX,SERIESIX)) Q:'SERIESIX  D
"RTN","MAGVD006",52,0)
 . S SOPIX=""
"RTN","MAGVD006",53,0)
 . F  S SOPIX=$O(^MAGV(2005.64,"C",SERIESIX,SOPIX)) Q:'SOPIX  D
"RTN","MAGVD006",54,0)
 . . S IARRAY(SOPIX)=STUDYIX
"RTN","MAGVD006",55,0)
 . . Q
"RTN","MAGVD006",56,0)
 . Q
"RTN","MAGVD006",57,0)
 S (MAGD1,MAGD2)=0 ; Not a radiology study in the old structure...
"RTN","MAGVD006",58,0)
 S PROC=$P($G(^MAGV(2005.62,STUDYIX,3)),"^",1)
"RTN","MAGVD006",59,0)
 Q
"RTN","MAGVD007")
0^69^B6560103
"RTN","MAGVD007",1,0)
MAGVD007 ;WOIFO/DAC,MLH - Get images by accession number ; 30 Jan 2012 04:04 PM
"RTN","MAGVD007",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD007",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD007",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD007",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD007",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD007",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD007",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD007",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD007",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD007",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD007",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD007",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD007",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD007",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD007",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD007",17,0)
 ;;
"RTN","MAGVD007",18,0)
 Q
"RTN","MAGVD007",19,0)
 ;
"RTN","MAGVD007",20,0)
 ;+++++  Get Images by Accession Number
"RTN","MAGVD007",21,0)
 ; 
"RTN","MAGVD007",22,0)
 ; Input Parameters
"RTN","MAGVD007",23,0)
 ; ================
"RTN","MAGVD007",24,0)
 ; ACCNUM - Accession Number
"RTN","MAGVD007",25,0)
 ;
"RTN","MAGVD007",26,0)
 ; Return Values
"RTN","MAGVD007",27,0)
 ; =============
"RTN","MAGVD007",28,0)
 ; OUT - status`status message
"RTN","MAGVD007",29,0)
 ;       a status of 0 indicates success, a negative integer indicates an error occurred 
"RTN","MAGVD007",30,0)
 ; 
"RTN","MAGVD007",31,0)
 ; MAGARR(1..n,"IMAGES")
"RTN","MAGVD007",32,0)
 ; MAGARR(1..n,"MAGDFN")  - Patient DFN
"RTN","MAGVD007",33,0)
 ; MAGARR(1..n,"MAGD1")   - Radiology DT
"RTN","MAGVD007",34,0)
 ; MAGARR(1..n,"MAGD2")   - Radiology P
"RTN","MAGVD007",35,0)
 ;
"RTN","MAGVD007",36,0)
GIBYACC(OUT,ACCNUM,MAGARR)  ; Get Images by Accession Number
"RTN","MAGVD007",37,0)
 N SSEP,ANY,I
"RTN","MAGVD007",38,0)
 N P,REQ,IARRAY,MAGD0,MAGD1,MAGD2,PROC ; Needed for function call ACCIEN^MAGVD006
"RTN","MAGVD007",39,0)
 S SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVD007",40,0)
 I $G(ACCNUM)="" S OUT=-1_SSEP_"No accession number provided" Q
"RTN","MAGVD007",41,0)
 S OUT=0
"RTN","MAGVD007",42,0)
 K ^TMP("MAG",$J,"QR")
"RTN","MAGVD007",43,0)
 K MAGARR
"RTN","MAGVD007",44,0)
 S REQ("0008,0050",ACCNUM)=ACCNUM
"RTN","MAGVD007",45,0)
 D ACCNUM^MAGDQR07(.REQ,"0008,0050",ACCNUM,.ANY)
"RTN","MAGVD007",46,0)
 S P=""
"RTN","MAGVD007",47,0)
 S I=0
"RTN","MAGVD007",48,0)
 F  S P=$O(^TMP("MAG",$J,"QR",6,P)) Q:P=""  D
"RTN","MAGVD007",49,0)
 . K IARRAY
"RTN","MAGVD007",50,0)
 . S (MAGD0,MAGD1,MAGD2)=0
"RTN","MAGVD007",51,0)
 . D ACCIEN^MAGVD006(P,.REQ,.IARRAY,.MAGD0,.MAGD1,.MAGD2,.PROC)
"RTN","MAGVD007",52,0)
 . I $O(IARRAY(""))="" Q
"RTN","MAGVD007",53,0)
 . S I=I+1
"RTN","MAGVD007",54,0)
 . M MAGARR(I,"IMAGES")=IARRAY
"RTN","MAGVD007",55,0)
 . S MAGARR(I,"MAGDFN")=$G(MAGD0)
"RTN","MAGVD007",56,0)
 . S MAGARR(I,"MAGD1")=$G(MAGD1)
"RTN","MAGVD007",57,0)
 . S MAGARR(I,"MAGD2")=$G(MAGD2)
"RTN","MAGVD007",58,0)
 . S MAGARR(I,"PROC")=$G(PROC)
"RTN","MAGVD007",59,0)
 . Q
"RTN","MAGVD007",60,0)
 K ^TMP("MAG",$J,"QR")
"RTN","MAGVD007",61,0)
 Q
"RTN","MAGVD008")
0^70^B6497121
"RTN","MAGVD008",1,0)
MAGVD008 ;WOIFO/DAC - Delete an image by accession number ; 3 Feb 2012 01:17 PM
"RTN","MAGVD008",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD008",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD008",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD008",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD008",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD008",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD008",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD008",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD008",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD008",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD008",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD008",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD008",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD008",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD008",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD008",17,0)
 ;;
"RTN","MAGVD008",18,0)
 Q
"RTN","MAGVD008",19,0)
 ;
"RTN","MAGVD008",20,0)
 ;Called by legacy delete function
"RTN","MAGVD008",21,0)
 ;
"RTN","MAGVD008",22,0)
 ;Input Variables:
"RTN","MAGVD008",23,0)
 ;      ACC - Accession number
"RTN","MAGVD008",24,0)
 ;      REASON - The reason for deletion
"RTN","MAGVD008",25,0)
 ;      
"RTN","MAGVD008",26,0)
 ;Output Variable:
"RTN","MAGVD008",27,0)
 ;OUT - status`status message
"RTN","MAGVD008",28,0)
 ;      a status of 0 indicates success, a negative integer indicates an error occurred 
"RTN","MAGVD008",29,0)
 ; 
"RTN","MAGVD008",30,0)
DELNEW(OUT,ACC,REASON) ; Given an accession number delete entries for the 2005.6x structure
"RTN","MAGVD008",31,0)
 N OUT20056,PROCIEN,STUDIEN,ISEP,SSEP,OUTAUD,EVENT,HOST,APP,MESSAGE,DATA,OUTAUD
"RTN","MAGVD008",32,0)
 S ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVD008",33,0)
 I $G(ACC)="" S OUT=-8_SSEP_"No accession number provided" Q
"RTN","MAGVD008",34,0)
 I $G(REASON)="" S OUT=-9_SSEP_"No reason provided" Q
"RTN","MAGVD008",35,0)
 I '$D(^MAGV(2005.61,"B",ACC)) S OUT=1_SSEP_"Accession number not found" Q
"RTN","MAGVD008",36,0)
 S OUT=0
"RTN","MAGVD008",37,0)
 S PROCIEN=$O(^MAGV(2005.61,"B",ACC,""))
"RTN","MAGVD008",38,0)
 S STUDIEN=""
"RTN","MAGVD008",39,0)
 F  S STUDIEN=$O(^MAGV(2005.62,"C",PROCIEN,STUDIEN)) Q:STUDIEN=""  D
"RTN","MAGVD008",40,0)
 . D INACTIVT^MAGVRS41(.OUT20056,2005.62,STUDIEN,"",1,REASON)
"RTN","MAGVD008",41,0)
 . I OUT20056(1)<0 S OUT=OUT20056(1)
"RTN","MAGVD008",42,0)
 . Q
"RTN","MAGVD008",43,0)
 S EVENT="DELETE"
"RTN","MAGVD008",44,0)
 S HOST=""
"RTN","MAGVD008",45,0)
 S APP="MAG SYS-DELETE IMAGEGROUP"
"RTN","MAGVD008",46,0)
 S MESSAGE=""
"RTN","MAGVD008",47,0)
 S DATA(1)="DUZ"_ISEP_DUZ
"RTN","MAGVD008",48,0)
 I OUT'<0 D EVENT^MAGUAUD(.OUTAUD,EVENT,HOST,APP,MESSAGE,.DATA)
"RTN","MAGVD008",49,0)
 Q
"RTN","MAGVD010")
0^71^B13079258
"RTN","MAGVD010",1,0)
MAGVD010 ;WOIFO/BT,NST,MLH - Delete Study By Accession Number - display outputs ; 11 Apr 2012 4:27 PM
"RTN","MAGVD010",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVD010",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVD010",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD010",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVD010",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVD010",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVD010",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVD010",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVD010",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVD010",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVD010",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVD010",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVD010",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVD010",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVD010",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVD010",17,0)
 ;;
"RTN","MAGVD010",18,0)
 Q
"RTN","MAGVD010",19,0)
 ;
"RTN","MAGVD010",20,0)
STYSERKT(KT,SUBARY) ; count all the studies & series referenced by a subarray node
"RTN","MAGVD010",21,0)
 Q:SUBARY=""
"RTN","MAGVD010",22,0)
 N STYARY
"RTN","MAGVD010",23,0)
 D  ; process matching image indices
"RTN","MAGVD010",24,0)
 . N MAGIX,STYIX
"RTN","MAGVD010",25,0)
 . S MAGIX=0 F  S MAGIX=$O(@SUBARY@(MAGIX)) Q:'MAGIX  D
"RTN","MAGVD010",26,0)
 . . S STYIX=@SUBARY@(MAGIX)
"RTN","MAGVD010",27,0)
 . . ; old or new structure?
"RTN","MAGVD010",28,0)
 . . I STYIX="" D OLD(MAGIX,.KT) Q  ; old
"RTN","MAGVD010",29,0)
 . . I STYIX'="" S STYARY(STYIX)="" Q  ; new
"RTN","MAGVD010",30,0)
 . . Q
"RTN","MAGVD010",31,0)
 . Q
"RTN","MAGVD010",32,0)
 D  ; do counts from new structure
"RTN","MAGVD010",33,0)
 . S STYIX="" F  S STYIX=$O(STYARY(STYIX)) Q:'STYIX  D NEW(STYIX,.KT)
"RTN","MAGVD010",34,0)
 . Q
"RTN","MAGVD010",35,0)
 D  ; do counts from old structure
"RTN","MAGVD010",36,0)
 . N STYUID,SERUID,MAGIX
"RTN","MAGVD010",37,0)
 . S STYUID="" F KT=0:1 S STYUID=$O(KT("STUDY",STYUID)) Q:STYUID=""
"RTN","MAGVD010",38,0)
 . S KT("STUDY")=$G(KT("STUDY"))+KT
"RTN","MAGVD010",39,0)
 . S SERUID="" F KT=0:1 S SERUID=$O(KT("SERIES",SERUID)) Q:SERUID=""
"RTN","MAGVD010",40,0)
 . S KT("SERIES")=$G(KT("SERIES"))+KT
"RTN","MAGVD010",41,0)
 . S MAGIX="" F KT=0:1 S MAGIX=$O(KT("IMAGE",MAGIX)) Q:MAGIX=""
"RTN","MAGVD010",42,0)
 . S KT("IMAGE")=$G(KT("IMAGE"))+KT
"RTN","MAGVD010",43,0)
 . Q
"RTN","MAGVD010",44,0)
 Q
"RTN","MAGVD010",45,0)
NEW(STYIX,KT) ; new structure - can build counts directly from structure
"RTN","MAGVD010",46,0)
 Q:'STYIX
"RTN","MAGVD010",47,0)
 N SERIX
"RTN","MAGVD010",48,0)
 S KT("STUDY")=$G(KT("STUDY"))+1
"RTN","MAGVD010",49,0)
 S SERIX=""
"RTN","MAGVD010",50,0)
 F  S SERIX=$O(^MAGV(2005.63,"C",STYIX,SERIX)) Q:'SERIX  D
"RTN","MAGVD010",51,0)
 . N SOPIX
"RTN","MAGVD010",52,0)
 . ; If Series deleted don't count - quit
"RTN","MAGVD010",53,0)
 . Q:$G(^MAGV(2005.63,SERIX,9))'="A"
"RTN","MAGVD010",54,0)
 . S KT("SERIES")=$G(KT("SERIES"))+1
"RTN","MAGVD010",55,0)
 . S SOPIX=""
"RTN","MAGVD010",56,0)
 . F  S SOPIX=$O(^MAGV(2005.64,"C",SERIX,SOPIX)) Q:'SOPIX  D
"RTN","MAGVD010",57,0)
 . . ; If SOP deleted don't count - quit
"RTN","MAGVD010",58,0)
 . . Q:$G(^MAGV(2005.64,SOPIX,11))'="A"
"RTN","MAGVD010",59,0)
 . . S KT("IMAGE")=$G(KT("IMAGE"))+1
"RTN","MAGVD010",60,0)
 . . Q
"RTN","MAGVD010",61,0)
 . Q
"RTN","MAGVD010",62,0)
 Q
"RTN","MAGVD010",63,0)
OLD(MAGIX,KT) ; old structure - must build counts from instances
"RTN","MAGVD010",64,0)
 Q:'$G(MAGIX)
"RTN","MAGVD010",65,0)
 N PARENT,UID,CHILD,CHILDIX
"RTN","MAGVD010",66,0)
 I '$D(^MAG(2005,MAGIX,1)) D  Q  ; child
"RTN","MAGVD010",67,0)
 . S KT("IMAGE",MAGIX)=""
"RTN","MAGVD010",68,0)
 . S UID=$P($G(^MAG(2005,MAGIX,"SERIESUID")),"^",1) ; series instance UID
"RTN","MAGVD010",69,0)
 . S:UID'="" KT("SERIES",UID)=""
"RTN","MAGVD010",70,0)
 . S PARENT=$P($G(^MAG(2005,MAGIX,0)),"^",10)
"RTN","MAGVD010",71,0)
 . S UID=$P($G(^MAG(2005,PARENT,"PACS")),"^",1) ; study instance UID
"RTN","MAGVD010",72,0)
 . S:UID'="" KT("STUDY",UID)=""
"RTN","MAGVD010",73,0)
 . Q
"RTN","MAGVD010",74,0)
 I $D(^MAG(2005,MAGIX,1)) D  Q  ; parent
"RTN","MAGVD010",75,0)
 . S UID=$P($G(^MAG(2005,MAGIX,"PACS")),"^",1)
"RTN","MAGVD010",76,0)
 . S:UID'="" KT("STUDY",UID)="" ; study instance UID
"RTN","MAGVD010",77,0)
 . S CHILD=0
"RTN","MAGVD010",78,0)
 . F  S CHILD=$O(^MAG(2005,MAGIX,1,CHILD)) Q:'CHILD  D
"RTN","MAGVD010",79,0)
 . . S CHILDIX=$P($G(^MAG(2005,MAGIX,1,CHILD,0)),"^",1)
"RTN","MAGVD010",80,0)
 . . S KT("IMAGE",CHILDIX)=""
"RTN","MAGVD010",81,0)
 . . S UID=$P($G(^MAG(2005,CHILDIX,"SERIESUID")),"^",1) ; series instance UID
"RTN","MAGVD010",82,0)
 . . S:UID'="" KT("SERIES",UID)=""
"RTN","MAGVD010",83,0)
 . . Q
"RTN","MAGVD010",84,0)
 . Q
"RTN","MAGVD010",85,0)
 Q
"RTN","MAGVDATE")
0^72^B5037019
"RTN","MAGVDATE",1,0)
MAGVDATE ;WOIFO/RRB - Convert DICOM date to VistA ; 06 Apr 2010 9:58 AM
"RTN","MAGVDATE",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVDATE",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVDATE",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVDATE",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVDATE",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVDATE",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVDATE",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVDATE",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVDATE",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVDATE",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVDATE",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVDATE",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVDATE",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVDATE",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVDATE",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVDATE",17,0)
 ;;
"RTN","MAGVDATE",18,0)
 ;
"RTN","MAGVDATE",19,0)
 ;
"RTN","MAGVDATE",20,0)
 ; Date conversion from DICOM format to VA
"RTN","MAGVDATE",21,0)
 ;
"RTN","MAGVDATE",22,0)
 Q
"RTN","MAGVDATE",23,0)
 ;
"RTN","MAGVDATE",24,0)
 ;
"RTN","MAGVDATE",25,0)
DATE(YYYYMMDD,FORMAT) ; convert date from DICOM format to displayable one
"RTN","MAGVDATE",26,0)
 ; FORMAT: B for birthday mm/dd/yyyy, S for short mm/dd/yy, L for long
"RTN","MAGVDATE",27,0)
 N M
"RTN","MAGVDATE",28,0)
 S FORMAT=$G(FORMAT)
"RTN","MAGVDATE",29,0)
 I FORMAT'="B",FORMAT'="S",FORMAT'="L" Q "Wrong format: "_FORMAT
"RTN","MAGVDATE",30,0)
 I YYYYMMDD="" Q ""
"RTN","MAGVDATE",31,0)
 I YYYYMMDD="<unknown>" Q YYYYMMDD
"RTN","MAGVDATE",32,0)
 I FORMAT="B" Q $E(YYYYMMDD,5,6)_"/"_$E(YYYYMMDD,7,8)_"/"_$E(YYYYMMDD,1,4)
"RTN","MAGVDATE",33,0)
 I FORMAT="S" Q $E(YYYYMMDD,5,6)_"/"_$E(YYYYMMDD,7,8)_"/"_$E(YYYYMMDD,3,4)
"RTN","MAGVDATE",34,0)
 ; long format: Mmm [D]D, YYYY
"RTN","MAGVDATE",35,0)
 S M=+$E(YYYYMMDD,5,6),M=(3*(M-1))+1
"RTN","MAGVDATE",36,0)
 S M=$E("JanFebMarAprMayJunJulAugSepOctNovDec",M,M+2)
"RTN","MAGVDATE",37,0)
 Q M_" "_(+$E(YYYYMMDD,7,8))_", "_$E(YYYYMMDD,1,4)
"RTN","MAGVDATE",38,0)
 ;
"RTN","MAGVDATE",39,0)
 Q
"RTN","MAGVDGWP")
0^73^B137738696
"RTN","MAGVDGWP",1,0)
MAGVDGWP ;WOIFO/NST/RRB - Retrieve DGW settings ; 09 Jul 2012 2:53 PM
"RTN","MAGVDGWP",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVDGWP",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVDGWP",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVDGWP",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVDGWP",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVDGWP",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVDGWP",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVDGWP",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVDGWP",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVDGWP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVDGWP",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVDGWP",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVDGWP",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVDGWP",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVDGWP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVDGWP",17,0)
 ;;
"RTN","MAGVDGWP",18,0)
 Q
"RTN","MAGVDGWP",19,0)
 ;
"RTN","MAGVDGWP",20,0)
 ;***** Return list of Instruments in DGW from DICOM GATEWAY INSTRUMENT DICTIONARY file (#2006.911)
"RTN","MAGVDGWP",21,0)
 ; RPC: MAGV DGW INSTRUMENT LIST
"RTN","MAGVDGWP",22,0)
 ;
"RTN","MAGVDGWP",23,0)
 ; Input Parameters
"RTN","MAGVDGWP",24,0)
 ; ================
"RTN","MAGVDGWP",25,0)
 ; HOSTNAME - Host name;
"RTN","MAGVDGWP",26,0)
 ;           If HOSTNAME is blank all setting will be returned
"RTN","MAGVDGWP",27,0)
 ;  
"RTN","MAGVDGWP",28,0)
 ; Return Values
"RTN","MAGVDGWP",29,0)
 ; =============
"RTN","MAGVDGWP",30,0)
 ; if error found during execution
"RTN","MAGVDGWP",31,0)
 ;   MAGRY(0) = "-1^Error getting instrument list"
"RTN","MAGVDGWP",32,0)
 ; if success
"RTN","MAGVDGWP",33,0)
 ;   MAGRY(0)    = "0^#CNT" - where #CNT is a number of records returned
"RTN","MAGVDGWP",34,0)
 ;   MAGRY(1)    = "HOSTNAME^DATETIME^NICKNAME^DESCRIPTION^SERVICE^PORT^SITE ID^SITE^MACHINE ID"
"RTN","MAGVDGWP",35,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVDGWP",36,0)
 ;
"RTN","MAGVDGWP",37,0)
 Q
"RTN","MAGVDGWP",38,0)
 ; 
"RTN","MAGVDGWP",39,0)
INSTRMNT(MAGRY,HOSTNAME) ;RPC [MAGV DGW INSTRUMENT LIST]
"RTN","MAGVDGWP",40,0)
 N OUT,I,CNT,MAGNIEN,MAGNHOST,MAGNDATE
"RTN","MAGVDGWP",41,0)
 N X
"RTN","MAGVDGWP",42,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGVDGWP",43,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGVDGWP",44,0)
 S MAGRY(0)="-1^Error getting instrument list"
"RTN","MAGVDGWP",45,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGVDGWP",46,0)
 D LIST^DIC(2006.911,"","@;.01;2","PI","","","","","","","OUT")
"RTN","MAGVDGWP",47,0)
 I $D(OUT("DIERR")) Q  ; Error getting the list
"RTN","MAGVDGWP",48,0)
 S I=0
"RTN","MAGVDGWP",49,0)
 S CNT=1
"RTN","MAGVDGWP",50,0)
 F  S I=$O(OUT("DILIST",I)) Q:'+I  D
"RTN","MAGVDGWP",51,0)
 . S X=OUT("DILIST",I,0)
"RTN","MAGVDGWP",52,0)
 . S MAGNIEN=$P(X,"^",1)
"RTN","MAGVDGWP",53,0)
 . S MAGNHOST=$P(X,"^",2)
"RTN","MAGVDGWP",54,0)
 . S MAGNDATE=$P(X,"^",3)
"RTN","MAGVDGWP",55,0)
 . I HOSTNAME'="" Q:HOSTNAME'=MAGNHOST  ; Check if HOSTNAME parameter 
"RTN","MAGVDGWP",56,0)
 . D GETINSTR(.MAGRY,.CNT,MAGNIEN,MAGNHOST,MAGNDATE)
"RTN","MAGVDGWP",57,0)
 . Q
"RTN","MAGVDGWP",58,0)
 S MAGRY(0)="0^"_(CNT-1)
"RTN","MAGVDGWP",59,0)
 S MAGRY(1)="HOSTNAME^DATETIME^NICKNAME^DESCRIPTION^SERVICE^PORT^SITE ID^SITE^MACHINE ID"
"RTN","MAGVDGWP",60,0)
 Q
"RTN","MAGVDGWP",61,0)
 ;
"RTN","MAGVDGWP",62,0)
GETINSTR(MAGRY,CNT,MAGNIEN,MAGNHOST,MAGNDATE) ; Get list of instruments for a hostname
"RTN","MAGVDGWP",63,0)
 ;
"RTN","MAGVDGWP",64,0)
 N OUT,MSG,I,STATION,SITEIEN
"RTN","MAGVDGWP",65,0)
 D LIST^DIC(2006.9112,","_MAGNIEN_",","@;.01;2;3I;4;5I;5;6","P","","","","","","","OUT","MSG")
"RTN","MAGVDGWP",66,0)
 I $D(MSG("DIERR")) Q  ; Error getting the list
"RTN","MAGVDGWP",67,0)
 S I=0
"RTN","MAGVDGWP",68,0)
 F  S I=$O(OUT("DILIST",I)) Q:'+I  D
"RTN","MAGVDGWP",69,0)
 . S CNT=CNT+1
"RTN","MAGVDGWP",70,0)
 . ; Get site IEN
"RTN","MAGVDGWP",71,0)
 . S SITEIEN=$P(OUT("DILIST",I,0),"^",6)
"RTN","MAGVDGWP",72,0)
 . ; Get station based on site IEN 
"RTN","MAGVDGWP",73,0)
 . S STATION=$$STA^XUAF4(SITEIEN) ; IA #2171 Get Station Number
"RTN","MAGVDGWP",74,0)
 . ; Set station into return array
"RTN","MAGVDGWP",75,0)
 . S $P(OUT("DILIST",I,0),"^",6)=STATION
"RTN","MAGVDGWP",76,0)
 . S MAGRY(CNT)=MAGNHOST_"^"_MAGNDATE_"^"_$P(OUT("DILIST",I,0),"^",2,8)
"RTN","MAGVDGWP",77,0)
 . Q 
"RTN","MAGVDGWP",78,0)
 Q
"RTN","MAGVDGWP",79,0)
 ;
"RTN","MAGVDGWP",80,0)
 ;***** Return list of Modalities in DGW from DICOM GATEWAY MODALITY DICTIONARY file (#2006.912)
"RTN","MAGVDGWP",81,0)
 ; RPC: MAGV DGW MODALITY LIST
"RTN","MAGVDGWP",82,0)
 ;
"RTN","MAGVDGWP",83,0)
 ; Input Parameters
"RTN","MAGVDGWP",84,0)
 ; ================
"RTN","MAGVDGWP",85,0)
 ; HOSTNAME - Host name;
"RTN","MAGVDGWP",86,0)
 ;            If HOSTNAME is blank all setting will be returned
"RTN","MAGVDGWP",87,0)
 ;  
"RTN","MAGVDGWP",88,0)
 ; Return Values
"RTN","MAGVDGWP",89,0)
 ; =============
"RTN","MAGVDGWP",90,0)
 ; if error found during execution
"RTN","MAGVDGWP",91,0)
 ;   MAGRY(0) = "-1^Error getting modality list"
"RTN","MAGVDGWP",92,0)
 ; if success
"RTN","MAGVDGWP",93,0)
 ;   MAGRY(0)    = "0^#CNT" - where #CNT is a number of records returned
"RTN","MAGVDGWP",94,0)
 ;   MAGRY(1)    = "HOSTNAME^DATETIME^MANUFACTURER^MODEL^MODALITY^IMAGING SERVICE^ACTIVE"
"RTN","MAGVDGWP",95,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVDGWP",96,0)
 ;
"RTN","MAGVDGWP",97,0)
MODALITY(MAGRY,HOSTNAME) ;RPC [MAGV DGW MODALITY LIST]
"RTN","MAGVDGWP",98,0)
 N OUT,I,CNT,MAGNIEN,MAGNHOST,MAGNDATE
"RTN","MAGVDGWP",99,0)
 N X
"RTN","MAGVDGWP",100,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGVDGWP",101,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGVDGWP",102,0)
 S MAGRY(0)="-1^Error getting modality list"
"RTN","MAGVDGWP",103,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGVDGWP",104,0)
 D LIST^DIC(2006.912,"","@;.01;2","PI","","","","","","","OUT")
"RTN","MAGVDGWP",105,0)
 I $D(OUT("DIERR")) Q  ; Error getting the list
"RTN","MAGVDGWP",106,0)
 S I=0
"RTN","MAGVDGWP",107,0)
 S CNT=1
"RTN","MAGVDGWP",108,0)
 F  S I=$O(OUT("DILIST",I)) Q:'+I  D
"RTN","MAGVDGWP",109,0)
 . S X=OUT("DILIST",I,0)
"RTN","MAGVDGWP",110,0)
 . S MAGNIEN=$P(X,"^",1)
"RTN","MAGVDGWP",111,0)
 . S MAGNHOST=$P(X,"^",2)
"RTN","MAGVDGWP",112,0)
 . S MAGNDATE=$P(X,"^",3)
"RTN","MAGVDGWP",113,0)
 . I HOSTNAME'="" Q:HOSTNAME'=MAGNHOST  ; Check if HOSTNAME parameter 
"RTN","MAGVDGWP",114,0)
 . D GETMODAL(.MAGRY,.CNT,MAGNIEN,MAGNHOST,MAGNDATE)
"RTN","MAGVDGWP",115,0)
 . Q
"RTN","MAGVDGWP",116,0)
 S MAGRY(0)="0^"_(CNT-1)
"RTN","MAGVDGWP",117,0)
 S MAGRY(1)="HOSTNAME^DATETIME^MANUFACTURER^MODEL^MODALITY^IMAGING SERVICE^ACTIVE"
"RTN","MAGVDGWP",118,0)
 Q
"RTN","MAGVDGWP",119,0)
 ;
"RTN","MAGVDGWP",120,0)
GETMODAL(MAGRY,CNT,MAGNIEN,MAGNHOST,MAGNDATE) ; Get list of modalities for a hostname
"RTN","MAGVDGWP",121,0)
 ;
"RTN","MAGVDGWP",122,0)
 N OUT,MSG,I
"RTN","MAGVDGWP",123,0)
 D LIST^DIC(2006.9122,","_MAGNIEN_",","@;.01;2;3;8;9","PI","","","","","","","OUT","MSG")
"RTN","MAGVDGWP",124,0)
 I $D(MSG("DIERR")) Q  ; Error getting the list
"RTN","MAGVDGWP",125,0)
 S I=0
"RTN","MAGVDGWP",126,0)
 F  S I=$O(OUT("DILIST",I)) Q:'+I  D
"RTN","MAGVDGWP",127,0)
 . S CNT=CNT+1
"RTN","MAGVDGWP",128,0)
 . S MAGRY(CNT)=MAGNHOST_"^"_MAGNDATE_"^"_$P(OUT("DILIST",I,0),"^",2,7)
"RTN","MAGVDGWP",129,0)
 . Q 
"RTN","MAGVDGWP",130,0)
 Q
"RTN","MAGVDGWP",131,0)
 ;
"RTN","MAGVDGWP",132,0)
 ;***** Return list of UID
"RTN","MAGVDGWP",133,0)
 ;      from DICOM UID SPECIFIC ACTION file (#2006.539)
"RTN","MAGVDGWP",134,0)
 ; RPC: MAGV DGW ACTION UID LIST
"RTN","MAGVDGWP",135,0)
 ;
"RTN","MAGVDGWP",136,0)
 ; Input Parameters
"RTN","MAGVDGWP",137,0)
 ; ================
"RTN","MAGVDGWP",138,0)
 ; MAGTYPE - Type (e.g. "SOP Class")
"RTN","MAGVDGWP",139,0)
 ; MAGSUBT - Subtype (e.g. "Storage")
"RTN","MAGVDGWP",140,0)
 ; MAGACT  - Action Type (e.g. "Storage SCP")
"RTN","MAGVDGWP",141,0)
 ;  
"RTN","MAGVDGWP",142,0)
 ; Return Values
"RTN","MAGVDGWP",143,0)
 ; =============
"RTN","MAGVDGWP",144,0)
 ; if error found during execution
"RTN","MAGVDGWP",145,0)
 ;   MAGRY(0) = "-1^Error getting actions list"
"RTN","MAGVDGWP",146,0)
 ; if success
"RTN","MAGVDGWP",147,0)
 ;   MAGRY(0)    = "0^#CNT" - where #CNT is a number of records returned
"RTN","MAGVDGWP",148,0)
 ;   MAGRY(1)    = "UID^DESCRIPTION^ACTION CODE^ACTION COMMENT"
"RTN","MAGVDGWP",149,0)
 ;   MAGRY(2..n) = "^" delimited string with values of fields listed in MAGRY(1) 
"RTN","MAGVDGWP",150,0)
 ;
"RTN","MAGVDGWP",151,0)
ACTUIDS(MAGRY,MAGTYPE,MAGSUBT,MAGACT) ;RPC [MAGV DGW ACTION UID LIST]
"RTN","MAGVDGWP",152,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGVDGWP",153,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGVDGWP",154,0)
 N OUT,OUT2,MAGA,IEN,MAGX,CNT
"RTN","MAGVDGWP",155,0)
 I (MAGTYPE="")!(MAGSUBT="")!(MAGACT="") S MAGRY(0)="-1^Blank parameters" Q 
"RTN","MAGVDGWP",156,0)
 ;
"RTN","MAGVDGWP",157,0)
 S MAGRY(0)="-1^Error getting action UID list"
"RTN","MAGVDGWP",158,0)
 ;
"RTN","MAGVDGWP",159,0)
 S MAGA(1)=MAGTYPE  ;"SOP Class"
"RTN","MAGVDGWP",160,0)
 S MAGA(2)=MAGSUBT   ;"Storage"
"RTN","MAGVDGWP",161,0)
 D FIND^DIC(2006.539,"","@;.01;2;","PQX",.MAGA,"*","D","","","OUT")
"RTN","MAGVDGWP",162,0)
 I $D(OUT("DIERR")) Q  ; Error getting the list
"RTN","MAGVDGWP",163,0)
 S I=0
"RTN","MAGVDGWP",164,0)
 S CNT=1
"RTN","MAGVDGWP",165,0)
 F  S I=$O(OUT("DILIST",I)) Q:'+I  D
"RTN","MAGVDGWP",166,0)
 . S MAGX=OUT("DILIST",I,0)
"RTN","MAGVDGWP",167,0)
 . S IEN=$P(MAGX,"^",1)
"RTN","MAGVDGWP",168,0)
 . D FIND^DIC(2006.5391,","_IEN_",","@;2;3","PQX",MAGACT,"*","B","","","OUT2")
"RTN","MAGVDGWP",169,0)
 . I '$D(OUT2("DILIST","1",0)) Q
"RTN","MAGVDGWP",170,0)
 . S CNT=CNT+1
"RTN","MAGVDGWP",171,0)
 . S MAGRY(CNT)=$P(MAGX,"^",2,3)_"^"_$P(OUT2("DILIST","1",0),"^",2,3)
"RTN","MAGVDGWP",172,0)
 . Q
"RTN","MAGVDGWP",173,0)
 S MAGRY(0)="0^"_(CNT-1)
"RTN","MAGVDGWP",174,0)
 S MAGRY(1)="UID^DESCRIPTION^ACTION CODE^ACTION COMMENT"
"RTN","MAGVDGWP",175,0)
 Q
"RTN","MAGVDGWP",176,0)
 ;
"RTN","MAGVDGWP",177,0)
 ;***** Update DICOM GATEWAY INSTRUMENT DICTIONARY file (#2006.911)
"RTN","MAGVDGWP",178,0)
 ;      from DICOM Gateway file (#2006.581)
"RTN","MAGVDGWP",179,0)
 ; RPC: MAGV DICOM SET INSTRUMENT LIST
"RTN","MAGVDGWP",180,0)
 ;
"RTN","MAGVDGWP",181,0)
 ; Input Parameters
"RTN","MAGVDGWP",182,0)
 ; ================
"RTN","MAGVDGWP",183,0)
 ; HOSTNAME - DICOM Gateway host name
"RTN","MAGVDGWP",184,0)
 ; LOCATION - Identifies the institution where this DICOM Gateway computer resides
"RTN","MAGVDGWP",185,0)
 ; MAGDATA  - Data in DICOM Gateway file (#2006.581)
"RTN","MAGVDGWP",186,0)
 ; 
"RTN","MAGVDGWP",187,0)
 ; Return Values
"RTN","MAGVDGWP",188,0)
 ; =============
"RTN","MAGVDGWP",189,0)
 ; if error found during execution
"RTN","MAGVDGWP",190,0)
 ;   MAGRY = "-1^Error updating list"
"RTN","MAGVDGWP",191,0)
 ; if success
"RTN","MAGVDGWP",192,0)
 ;   MAGRY = 0
"RTN","MAGVDGWP",193,0)
 ;
"RTN","MAGVDGWP",194,0)
SETINSTR(MAGRY,HOSTNAME,LOCATION,MAGDATA) ; RPC [MAGV DICOM SET INSTRUMENT LIST]
"RTN","MAGVDGWP",195,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGVDGWP",196,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGVDGWP",197,0)
 N NOW,DA,DIK,D0,IENS,X,MAGNFDA,MAGNIEN,MAGNXE,ERR
"RTN","MAGVDGWP",198,0)
 S MAGRY="-1^Error updating file (#2006.911)"
"RTN","MAGVDGWP",199,0)
 I $G(HOSTNAME)="" S MAGRY="-1^No HostName provided." Q
"RTN","MAGVDGWP",200,0)
 I '$G(LOCATION) S MAGRY="-1^No location provided." Q
"RTN","MAGVDGWP",201,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGVDGWP",202,0)
 S NOW=$$HTFM^XLFDT($H)
"RTN","MAGVDGWP",203,0)
 D FIND^DIC(2006.911,"","@;IX","PQX",HOSTNAME,"1","","","","X")
"RTN","MAGVDGWP",204,0)
 I $D(X("DILIST","1",0)) D
"RTN","MAGVDGWP",205,0)
 . S D0=$P(X("DILIST","1",0),"^",1)
"RTN","MAGVDGWP",206,0)
 . S DIK="^MAGDICOM(2006.911,"
"RTN","MAGVDGWP",207,0)
 . S DA=D0
"RTN","MAGVDGWP",208,0)
 . D ^DIK
"RTN","MAGVDGWP",209,0)
 . S MAGNIEN(1)=D0
"RTN","MAGVDGWP",210,0)
 . Q
"RTN","MAGVDGWP",211,0)
 S IENS="?+1,"
"RTN","MAGVDGWP",212,0)
 S MAGNFDA(2006.911,IENS,.01)=HOSTNAME
"RTN","MAGVDGWP",213,0)
 S MAGNFDA(2006.911,IENS,1)=LOCATION
"RTN","MAGVDGWP",214,0)
 S MAGNFDA(2006.911,IENS,2)=NOW
"RTN","MAGVDGWP",215,0)
 D UPDATE^DIE("SK","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVDGWP",216,0)
 I $D(MAGNXE("DIERR","E")) Q  ; MAGRY is set at the beginning
"RTN","MAGVDGWP",217,0)
 S D0=MAGNIEN(1)
"RTN","MAGVDGWP",218,0)
 S IENS="+1,"_D0_","
"RTN","MAGVDGWP",219,0)
 S I=""
"RTN","MAGVDGWP",220,0)
 S ERR=0
"RTN","MAGVDGWP",221,0)
 F  S I=$O(MAGDATA(I)) Q:(I="")!ERR  D
"RTN","MAGVDGWP",222,0)
 . K MAGNFDA,MAGNIEN,MAGNXE
"RTN","MAGVDGWP",223,0)
 . S X=MAGDATA(I)
"RTN","MAGVDGWP",224,0)
 . S MAGNFDA("2006.9112",IENS,".01")=$P(X,"^",1) ; "CR1"
"RTN","MAGVDGWP",225,0)
 . S MAGNFDA("2006.9112",IENS,"2")=$P(X,"^",2) ; "Test CR"
"RTN","MAGVDGWP",226,0)
 . S MAGNFDA("2006.9112",IENS,"3")=$P(X,"^",3) ;"RAD"
"RTN","MAGVDGWP",227,0)
 . S MAGNFDA("2006.9112",IENS,"4")=$P(X,"^",4) ;"60100"
"RTN","MAGVDGWP",228,0)
 . S MAGNFDA("2006.9112",IENS,"5")=$P(X,"^",5) ;"660"
"RTN","MAGVDGWP",229,0)
 . S MAGNFDA("2006.9112",IENS,"6")=$P(X,"^",6) ;""
"RTN","MAGVDGWP",230,0)
 . D UPDATE^DIE("SK","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVDGWP",231,0)
 . I $D(MAGNXE("DIERR","E")) S ERR=1
"RTN","MAGVDGWP",232,0)
 . Q
"RTN","MAGVDGWP",233,0)
 I ERR Q  ; MAGRY is set at the beginning
"RTN","MAGVDGWP",234,0)
 ; 
"RTN","MAGVDGWP",235,0)
 S MAGRY=0
"RTN","MAGVDGWP",236,0)
 Q
"RTN","MAGVDGWP",237,0)
 ;
"RTN","MAGVDGWP",238,0)
 ;***** Update DICOM GATEWAY MODALITY DICTIONARY file (#2006.912)
"RTN","MAGVDGWP",239,0)
 ;      from DICOM Gateway file (#2006.582)
"RTN","MAGVDGWP",240,0)
 ; RPC: MAGV DICOM SET MODALITY LIST
"RTN","MAGVDGWP",241,0)
 ;
"RTN","MAGVDGWP",242,0)
 ; Input Parameters
"RTN","MAGVDGWP",243,0)
 ; ================
"RTN","MAGVDGWP",244,0)
 ; HOSTNAME - DICOM Gateway host name
"RTN","MAGVDGWP",245,0)
 ; LOCATION - Identifies the institution where this DICOM Gateway computer resides
"RTN","MAGVDGWP",246,0)
 ; MAGDATA  - Data in DICOM Gateway file (#2006.582)
"RTN","MAGVDGWP",247,0)
 ; 
"RTN","MAGVDGWP",248,0)
 ; Return Values
"RTN","MAGVDGWP",249,0)
 ; =============
"RTN","MAGVDGWP",250,0)
 ; if error found during execution
"RTN","MAGVDGWP",251,0)
 ;   MAGRY = "-1^Error updating list"
"RTN","MAGVDGWP",252,0)
 ; if success
"RTN","MAGVDGWP",253,0)
 ;   MAGRY = "0"
"RTN","MAGVDGWP",254,0)
 ;
"RTN","MAGVDGWP",255,0)
SETMODAL(MAGRY,HOSTNAME,LOCATION,MAGDATA) ; RPC [MAGV DICOM SET MODALITY LIST]
"RTN","MAGVDGWP",256,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGVDGWP",257,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGVDGWP",258,0)
 N NOW,DA,DIK,D0,IENS,X,MAGNFDA,MAGNIEN,MAGNXE,ERR
"RTN","MAGVDGWP",259,0)
 S MAGRY="-1^Error updating file (#2006.912)"
"RTN","MAGVDGWP",260,0)
 I $G(HOSTNAME)="" S MAGRY="-1^No HostName provided." Q
"RTN","MAGVDGWP",261,0)
 I '$G(LOCATION) S MAGRY="-1^No location provided." Q
"RTN","MAGVDGWP",262,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGVDGWP",263,0)
 S NOW=$$HTFM^XLFDT($H)
"RTN","MAGVDGWP",264,0)
 D FIND^DIC(2006.912,"","@;IX","PQX",HOSTNAME,"1","","","","X")
"RTN","MAGVDGWP",265,0)
 I $D(X("DILIST","1",0)) D
"RTN","MAGVDGWP",266,0)
 . S D0=$P(X("DILIST","1",0),"^",1)
"RTN","MAGVDGWP",267,0)
 . S DIK="^MAGDICOM(2006.912,"
"RTN","MAGVDGWP",268,0)
 . S DA=D0
"RTN","MAGVDGWP",269,0)
 . D ^DIK
"RTN","MAGVDGWP",270,0)
 . S MAGNIEN(1)=D0
"RTN","MAGVDGWP",271,0)
 . Q
"RTN","MAGVDGWP",272,0)
 S IENS="?+1,"
"RTN","MAGVDGWP",273,0)
 S MAGNFDA(2006.912,IENS,.01)=HOSTNAME
"RTN","MAGVDGWP",274,0)
 S MAGNFDA(2006.912,IENS,1)=LOCATION
"RTN","MAGVDGWP",275,0)
 S MAGNFDA(2006.912,IENS,2)=NOW
"RTN","MAGVDGWP",276,0)
 D UPDATE^DIE("SK","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVDGWP",277,0)
 I $D(MAGNXE("DIERR","E")) Q  ; MAGRY is set at the beginning
"RTN","MAGVDGWP",278,0)
 S D0=MAGNIEN(1)
"RTN","MAGVDGWP",279,0)
 S IENS="+1,"_D0_","
"RTN","MAGVDGWP",280,0)
 S I=""
"RTN","MAGVDGWP",281,0)
 S ERR=0
"RTN","MAGVDGWP",282,0)
 F  S I=$O(MAGDATA(I)) Q:(I="")!ERR  D
"RTN","MAGVDGWP",283,0)
 . K MAGNFDA,MAGNIEN,MAGNXE
"RTN","MAGVDGWP",284,0)
 . S X=MAGDATA(I)
"RTN","MAGVDGWP",285,0)
 . S MAGNFDA("2006.9122",IENS,".01")=$P(X,"^",1)
"RTN","MAGVDGWP",286,0)
 . S MAGNFDA("2006.9122",IENS,"2")=$P(X,"^",2)
"RTN","MAGVDGWP",287,0)
 . S MAGNFDA("2006.9122",IENS,"3")=$P(X,"^",3)
"RTN","MAGVDGWP",288,0)
 . S MAGNFDA("2006.9122",IENS,"4")=$P(X,"^",4)
"RTN","MAGVDGWP",289,0)
 . S MAGNFDA("2006.9122",IENS,"5")=$P(X,"^",5)
"RTN","MAGVDGWP",290,0)
 . S MAGNFDA("2006.9122",IENS,"6")=$P(X,"^",6)
"RTN","MAGVDGWP",291,0)
 . S MAGNFDA("2006.9122",IENS,"7")=$P(X,"^",7)
"RTN","MAGVDGWP",292,0)
 . S MAGNFDA("2006.9122",IENS,"8")=$P(X,"^",8)
"RTN","MAGVDGWP",293,0)
 . S MAGNFDA("2006.9122",IENS,"9")=$P(X,"^",9)
"RTN","MAGVDGWP",294,0)
 . D UPDATE^DIE("SK","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVDGWP",295,0)
 . I $D(MAGNXE("DIERR","E")) S ERR=1
"RTN","MAGVDGWP",296,0)
 . Q
"RTN","MAGVDGWP",297,0)
 I ERR Q  ; MAGRY is set at the beginning
"RTN","MAGVDGWP",298,0)
 ; 
"RTN","MAGVDGWP",299,0)
 S MAGRY=0
"RTN","MAGVDGWP",300,0)
 Q
"RTN","MAGVDGWP",301,0)
 ;
"RTN","MAGVDGWP",302,0)
 ;***** Return DGW email configuration entries from DICOM Gateway Mail (#2006.9191)
"RTN","MAGVDGWP",303,0)
 ; RPC: MAGV GET DGW CONFIG
"RTN","MAGVDGWP",304,0)
 ; 
"RTN","MAGVDGWP",305,0)
 ; Input Parameters
"RTN","MAGVDGWP",306,0)
 ; ================
"RTN","MAGVDGWP",307,0)
 ; HOSTNAME - Host name;
"RTN","MAGVDGWP",308,0)
 ;           If HOSTNAME error message will be returned
"RTN","MAGVDGWP",309,0)
 ;  
"RTN","MAGVDGWP",310,0)
 ; Return Values
"RTN","MAGVDGWP",311,0)
 ; =============
"RTN","MAGVDGWP",312,0)
 ; if error found during execution
"RTN","MAGVDGWP",313,0)
 ;   MAGRY = "-1^Error message"
"RTN","MAGVDGWP",314,0)
 ; if success
"RTN","MAGVDGWP",315,0)
 ;   MAGRY = HOSTNAME~MAILGROUP~POSTOFFICE~POSTPORT~IMPORTER~STATION NUMBER
"RTN","MAGVDGWP",316,0)
 ; 
"RTN","MAGVDGWP",317,0)
GETGWCFG(MAGRY,HOSTNAME) ;RPC [MAGV GET DGW CONFIG]
"RTN","MAGVDGWP",318,0)
 N OUT,I,CNT,MAGNIEN,MAGNHOST,MAILGROUP,POSTOFFICE,POSTPORT,IMPORTER,SITEIEN,STATION
"RTN","MAGVDGWP",319,0)
 N X
"RTN","MAGVDGWP",320,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGVDGWP",321,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGVDGWP",322,0)
 S MAGRY="-1~Error getting DGW Config info"
"RTN","MAGVDGWP",323,0)
 I $G(HOSTNAME)="" S MAGRY="-1~No HostName provided" Q
"RTN","MAGVDGWP",324,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGVDGWP",325,0)
 D LIST^DIC(2006.9191,"","@;.01;1;2;3;4;5","PI","","","","","","","OUT")
"RTN","MAGVDGWP",326,0)
 I $D(OUT("DIERR")) Q  ; Error getting the list
"RTN","MAGVDGWP",327,0)
 S I=0
"RTN","MAGVDGWP",328,0)
 F  S I=$O(OUT("DILIST",I)) Q:'+I  D  Q:HOSTNAME=MAGNHOST
"RTN","MAGVDGWP",329,0)
 . S X=OUT("DILIST",I,0)
"RTN","MAGVDGWP",330,0)
 . S MAGNIEN=$P(X,"^",1)
"RTN","MAGVDGWP",331,0)
 . S MAGNHOST=$P(X,"^",2)
"RTN","MAGVDGWP",332,0)
 . S MAILGROUP=$P(X,"^",3)
"RTN","MAGVDGWP",333,0)
 . S POSTOFFICE=$P(X,"^",4)
"RTN","MAGVDGWP",334,0)
 . S POSTPORT=$P(X,"^",5)
"RTN","MAGVDGWP",335,0)
 . S IMPORTER=$P(X,"^",6)
"RTN","MAGVDGWP",336,0)
 . S SITEIEN=$P(X,"^",7)
"RTN","MAGVDGWP",337,0)
 . S STATION=$$STA^XUAF4(SITEIEN) ; IA #2171 Get Station Number
"RTN","MAGVDGWP",338,0)
 . Q
"RTN","MAGVDGWP",339,0)
 I HOSTNAME'=MAGNHOST D  Q  ; Check if HOSTNAME parameter matches return
"RTN","MAGVDGWP",340,0)
 . S MAGRY="-1~HostName returned from DB,"_MAGNHOST_", doesn't match request."
"RTN","MAGVDGWP",341,0)
 . Q 
"RTN","MAGVDGWP",342,0)
 ;
"RTN","MAGVDGWP",343,0)
 S MAGRY="0~"_HOSTNAME_"~"_MAILGROUP_"~"_POSTOFFICE_"~"_POSTPORT_"~"_IMPORTER_"~"_STATION
"RTN","MAGVDGWP",344,0)
 Q
"RTN","MAGVDGWP",345,0)
 ;
"RTN","MAGVDGWP",346,0)
 ;
"RTN","MAGVDGWP",347,0)
 ;***** Set DGW email configuration entries into DICOM Gateway Mail (#2006.9191)
"RTN","MAGVDGWP",348,0)
 ; RPC: MAGV SET DGW CONFIG
"RTN","MAGVDGWP",349,0)
 ; 
"RTN","MAGVDGWP",350,0)
 ; Input Parameters
"RTN","MAGVDGWP",351,0)
 ; ================
"RTN","MAGVDGWP",352,0)
 ; HOSTNAME 
"RTN","MAGVDGWP",353,0)
 ; MAILGROUP
"RTN","MAGVDGWP",354,0)
 ; POSTOFFICE
"RTN","MAGVDGWP",355,0)
 ; POSTPORT
"RTN","MAGVDGWP",356,0)
 ; [IMPORTER]
"RTN","MAGVDGWP",357,0)
 ; LOCATION
"RTN","MAGVDGWP",358,0)
 ; If any of the input parameters are missing an error message will be returned.
"RTN","MAGVDGWP",359,0)
 ;  
"RTN","MAGVDGWP",360,0)
 ; Return Values
"RTN","MAGVDGWP",361,0)
 ; =============
"RTN","MAGVDGWP",362,0)
 ;  0 - Success
"RTN","MAGVDGWP",363,0)
 ; -1 - Error
"RTN","MAGVDGWP",364,0)
 ; 
"RTN","MAGVDGWP",365,0)
SETGWCFG(MAGRY,HOSTNAME,MAILGROUP,POSTOFFICE,POSTPORT,IMPORTER,LOCATION) ; RPC [MAGV SET DGW CONFIG]
"RTN","MAGVDGWP",366,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGVDGWP",367,0)
 E  S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGVDGWP",368,0)
 N NOW,IENS,X,MAGNFDA,MAGNXE
"RTN","MAGVDGWP",369,0)
 S MAGRY="-1~Error updating file (#2006.9191)"
"RTN","MAGVDGWP",370,0)
 I $G(HOSTNAME)="" S MAGRY="-1~No HostName provided." Q
"RTN","MAGVDGWP",371,0)
 I $G(MAILGROUP)="" S MAGRY="-1~No MailGroup provided." Q
"RTN","MAGVDGWP",372,0)
 I $G(POSTOFFICE)="" S MAGRY="-1~No PostOffice provided." Q
"RTN","MAGVDGWP",373,0)
 I $G(POSTPORT)="" S MAGRY="-1~No PostPort provided." Q
"RTN","MAGVDGWP",374,0)
 I $G(LOCATION)="" S MAGRY="-1~No Location provided." Q
"RTN","MAGVDGWP",375,0)
 S HOSTNAME=$TR(HOSTNAME,"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","MAGVDGWP",376,0)
 S NOW=$$HTFM^XLFDT($H)
"RTN","MAGVDGWP",377,0)
 S IENS="?+1,"
"RTN","MAGVDGWP",378,0)
 S MAGNFDA(2006.9191,IENS,.01)=HOSTNAME
"RTN","MAGVDGWP",379,0)
 S MAGNFDA(2006.9191,IENS,1)=MAILGROUP
"RTN","MAGVDGWP",380,0)
 S MAGNFDA(2006.9191,IENS,2)=POSTOFFICE
"RTN","MAGVDGWP",381,0)
 S MAGNFDA(2006.9191,IENS,3)=POSTPORT
"RTN","MAGVDGWP",382,0)
 S MAGNFDA(2006.9191,IENS,4)=$G(IMPORTER)
"RTN","MAGVDGWP",383,0)
 S MAGNFDA(2006.9191,IENS,5)=LOCATION
"RTN","MAGVDGWP",384,0)
 D UPDATE^DIE("SK","MAGNFDA","","MAGNXE")
"RTN","MAGVDGWP",385,0)
 I $D(MAGNXE("DIERR","E")) Q  ; MAGRY set at the beginning
"RTN","MAGVDGWP",386,0)
 S MAGRY="0~DGW Config info update ok"
"RTN","MAGVDGWP",387,0)
 Q
"RTN","MAGVGUID")
0^74^B34342476
"RTN","MAGVGUID",1,0)
MAGVGUID ;WOIFO/RRB,DAC - Duplicate DICOM Study, Series, & SOP Instance UID Checks ; 11 Apr 2012 12:55 PM
"RTN","MAGVGUID",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVGUID",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVGUID",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVGUID",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVGUID",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVGUID",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVGUID",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVGUID",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVGUID",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVGUID",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVGUID",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVGUID",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVGUID",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVGUID",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVGUID",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVGUID",17,0)
 ;;
"RTN","MAGVGUID",18,0)
 Q
"RTN","MAGVGUID",19,0)
 ;
"RTN","MAGVGUID",20,0)
 ; check for duplicate SOP Instance UID
"RTN","MAGVGUID",21,0)
SOP(DFN,ACNUMB,STUDYUID,SERIESUID,SOPUID) ;
"RTN","MAGVGUID",22,0)
 N MAGIEN ;--- ien of 2005 DICOM object
"RTN","MAGVGUID",23,0)
 N DUPSOP ;--- -1 = Error, 1 = Duplicate UID, 2 = RESEND 
"RTN","MAGVGUID",24,0)
 ; 
"RTN","MAGVGUID",25,0)
 ; is there a DICOM object on file with this SOP Instance UID?
"RTN","MAGVGUID",26,0)
 I '$O(^MAG(2005,"P",SOPUID,0)) Q 0 ; nope
"RTN","MAGVGUID",27,0)
 ;
"RTN","MAGVGUID",28,0)
 ; is the same DICOM object already on file?
"RTN","MAGVGUID",29,0)
 ; there might be multiples and we have to check each one
"RTN","MAGVGUID",30,0)
 S MAGIEN=0,DUPSOP=0
"RTN","MAGVGUID",31,0)
 F  S MAGIEN=$O(^MAG(2005,"P",SOPUID,MAGIEN)) Q:MAGIEN=""  D  Q:DUPSOP
"RTN","MAGVGUID",32,0)
 . S DUPSOP=$$SAMEIMG(MAGIEN,DFN,STUDYUID,SERIESUID)
"RTN","MAGVGUID",33,0)
 . Q
"RTN","MAGVGUID",34,0)
 S DUPSOP=$S(DUPSOP=0:2,1:DUPSOP)
"RTN","MAGVGUID",35,0)
 Q DUPSOP
"RTN","MAGVGUID",36,0)
 ;
"RTN","MAGVGUID",37,0)
SAMEIMG(MAGIEN,DFN,STUDYUID,SERIESUID) ; check DFN and study & series UIDs
"RTN","MAGVGUID",38,0)
 N MAG0 ;----- 0-node of file 2005
"RTN","MAGVGUID",39,0)
 N MAGDFN ;--- DFN of designated image
"RTN","MAGVGUID",40,0)
 N MAGGROUP ;- pointer to the image group
"RTN","MAGVGUID",41,0)
 N MAGPTR,MAGACN
"RTN","MAGVGUID",42,0)
 N OLDSTUDY,OLDSERIES ; UIDs of the original series or study
"RTN","MAGVGUID",43,0)
 ; check for defined arguments
"RTN","MAGVGUID",44,0)
 Q:$G(MAGIEN)="" -1
"RTN","MAGVGUID",45,0)
 Q:$G(DFN)="" -1
"RTN","MAGVGUID",46,0)
 Q:$G(STUDYUID)="" -1
"RTN","MAGVGUID",47,0)
 Q:$G(SERIESUID)="" -1
"RTN","MAGVGUID",48,0)
 S MAG0=$G(^MAG(2005,MAGIEN,0)) Q:MAG0="" -1 ; no 0-node
"RTN","MAGVGUID",49,0)
 S MAGDFN=$P(MAG0,"^",7) Q:DFN'=MAGDFN 1 ; different patient
"RTN","MAGVGUID",50,0)
 S MAGGROUP=$P(MAG0,"^",10)
"RTN","MAGVGUID",51,0)
 I ACNUMB'=$$GETACN(MAGIEN) Q 1
"RTN","MAGVGUID",52,0)
 S OLDSTUDY=$S(MAGGROUP:$P($G(^MAG(2005,MAGGROUP,"PACS")),"^",1),1:"")
"RTN","MAGVGUID",53,0)
 I $L(OLDSTUDY),OLDSTUDY'=STUDYUID Q 1  ; different study instance UIDs
"RTN","MAGVGUID",54,0)
 S OLDSERIES=$G(^MAG(2005,MAGIEN,"SERIESUID"))
"RTN","MAGVGUID",55,0)
 I $L(OLDSERIES),OLDSERIES'=SERIESUID Q 1  ; different series instance UIDs
"RTN","MAGVGUID",56,0)
 Q 0
"RTN","MAGVGUID",57,0)
 ;
"RTN","MAGVGUID",58,0)
 ; check for duplicate Series Instance UID
"RTN","MAGVGUID",59,0)
SERIES(DFN,ACNUMB,STUDYUID,SERIESUID) ;
"RTN","MAGVGUID",60,0)
 N MAG0 ;----- 0-node of file 2005
"RTN","MAGVGUID",61,0)
 N MAGACN ;--- accession number of 2005 DICOM object
"RTN","MAGVGUID",62,0)
 N MAGIEN ;--- ien of 2005 DICOM object
"RTN","MAGVGUID",63,0)
 N MAGIENG ;-- ien of 2005 DICOM object in group file (2005.04)
"RTN","MAGVGUID",64,0)
 N MAGDFN ;--- DFN of designated image
"RTN","MAGVGUID",65,0)
 N MAGGROUP ;- pointer to the image group
"RTN","MAGVGUID",66,0)
 N MAGSTUID ;- study instance uid of 2005 DICOM object
"RTN","MAGVGUID",67,0)
 N DUPSERIES
"RTN","MAGVGUID",68,0)
 N I,X
"RTN","MAGVGUID",69,0)
 ;
"RTN","MAGVGUID",70,0)
 ; is there a DICOM object on file with this Series Instance UID?
"RTN","MAGVGUID",71,0)
 I '$O(^MAG(2005,"SERIESUID",SERIESUID,0)) Q 0 ; nope
"RTN","MAGVGUID",72,0)
 ;
"RTN","MAGVGUID",73,0)
 K ^TMP("MAG",$J,"SERIES UID")
"RTN","MAGVGUID",74,0)
 ;
"RTN","MAGVGUID",75,0)
 ; First pass - get the list of DICOM objects for this series
"RTN","MAGVGUID",76,0)
 ; 
"RTN","MAGVGUID",77,0)
 S MAGIEN=0
"RTN","MAGVGUID",78,0)
 F  S MAGIEN=$O(^MAG(2005,"SERIESUID",SERIESUID,MAGIEN)) Q:MAGIEN=""  D
"RTN","MAGVGUID",79,0)
 . S ^TMP("MAG",$J,"SERIES UID",MAGIEN)=""
"RTN","MAGVGUID",80,0)
 . Q
"RTN","MAGVGUID",81,0)
 ;
"RTN","MAGVGUID",82,0)
 ; Second pass - for each DICOM object on file, do the following steps
"RTN","MAGVGUID",83,0)
 ; 1) look up the group and get DFN, ACNUMB, Study Instance UID
"RTN","MAGVGUID",84,0)
 ; 2) record this information for the first DICOM object in each group
"RTN","MAGVGUID",85,0)
 ; 3) skip other DICOM objects in same group - redundant information
"RTN","MAGVGUID",86,0)
 ; 
"RTN","MAGVGUID",87,0)
 S MAGIEN=0
"RTN","MAGVGUID",88,0)
 F  S MAGIEN=$O(^TMP("MAG",$J,"SERIES UID",MAGIEN)) Q:'MAGIEN  S X=^(MAGIEN) D
"RTN","MAGVGUID",89,0)
 . Q:X?1"SKIP".E  ; skip DICOM objects in groups that were already processed
"RTN","MAGVGUID",90,0)
 . S MAG0=$G(^MAG(2005,MAGIEN,0)) Q:MAG0=""
"RTN","MAGVGUID",91,0)
 . S MAGDFN=$P(MAG0,"^",7),MAGGROUP=$P(MAG0,"^",10)
"RTN","MAGVGUID",92,0)
 . S MAGSTUID=$P($G(^MAG(2005,MAGGROUP,"PACS")),"^",1)
"RTN","MAGVGUID",93,0)
 . S MAGACN=$$GETACN(MAGIEN)
"RTN","MAGVGUID",94,0)
 . S X=MAGDFN_"^"_MAGACN_"^"_MAGSTUID
"RTN","MAGVGUID",95,0)
 . S ^TMP("MAG",$J,"SERIES UID",MAGIEN)=X
"RTN","MAGVGUID",96,0)
 . ; go through the object group file (2005.04) and remove redundancies
"RTN","MAGVGUID",97,0)
 . S I=0 F  S I=$O(^MAG(2005,MAGGROUP,1,I)) Q:'I  S X=^(I,0) D
"RTN","MAGVGUID",98,0)
 . . S MAGIENG=$P(X,"^",1) Q:MAGIENG=MAGIEN  ; keep first object 
"RTN","MAGVGUID",99,0)
 . . I $D(^TMP("MAG",$J,"SERIES UID",MAGIENG)) S ^(MAGIENG)="SKIP-"_MAGIEN
"RTN","MAGVGUID",100,0)
 . . Q
"RTN","MAGVGUID",101,0)
 . Q
"RTN","MAGVGUID",102,0)
 ;
"RTN","MAGVGUID",103,0)
 ; Third pass - check remaining entries in ^TMP for duplicates
"RTN","MAGVGUID",104,0)
 ; 
"RTN","MAGVGUID",105,0)
 S MAGIEN="",DUPSERIES=0
"RTN","MAGVGUID",106,0)
 F  S MAGIEN=$O(^TMP("MAG",$J,"SERIES UID",MAGIEN)) Q:MAGIEN=""  D  Q:DUPSERIES
"RTN","MAGVGUID",107,0)
 . S X=^TMP("MAG",$J,"SERIES UID",MAGIEN)
"RTN","MAGVGUID",108,0)
 . Q:X["SKIP"
"RTN","MAGVGUID",109,0)
 . S MAGDFN=$P(X,"^",1),MAGACN=$P(X,"^",2),MAGSTUID=$P(X,"^",3)
"RTN","MAGVGUID",110,0)
 . S DUPSERIES=1
"RTN","MAGVGUID",111,0)
 . I DFN=MAGDFN,ACNUMB=MAGACN,STUDYUID=MAGSTUID S DUPSERIES=0
"RTN","MAGVGUID",112,0)
 . Q
"RTN","MAGVGUID",113,0)
 ;
"RTN","MAGVGUID",114,0)
 Q DUPSERIES
"RTN","MAGVGUID",115,0)
 ;
"RTN","MAGVGUID",116,0)
 ; check for duplicate Study Instance UID
"RTN","MAGVGUID",117,0)
STUDY(DFN,ACNUMB,STUDYUID) ;
"RTN","MAGVGUID",118,0)
 N HIT ;------ switch
"RTN","MAGVGUID",119,0)
 N MAGIEN ;--- ien of 2005 DICOM object
"RTN","MAGVGUID",120,0)
 ;
"RTN","MAGVGUID",121,0)
 ; is there a DICOM object on file with this Study Instance UID?
"RTN","MAGVGUID",122,0)
 I '$O(^MAG(2005,"P",STUDYUID,0)) Q 0 ; nope
"RTN","MAGVGUID",123,0)
 ;
"RTN","MAGVGUID",124,0)
 ; is the same DICOM object already on file?
"RTN","MAGVGUID",125,0)
 ; there might be multiples and we have to check each one
"RTN","MAGVGUID",126,0)
 S (HIT,MAGIEN)=0
"RTN","MAGVGUID",127,0)
 F  S MAGIEN=$O(^MAG(2005,"P",STUDYUID,MAGIEN)) Q:MAGIEN=""  D  Q:HIT
"RTN","MAGVGUID",128,0)
 . S HIT=$$SAMESTDY(MAGIEN,DFN,ACNUMB)
"RTN","MAGVGUID",129,0)
 . Q
"RTN","MAGVGUID",130,0)
 ;
"RTN","MAGVGUID",131,0)
 Q HIT
"RTN","MAGVGUID",132,0)
 ;
"RTN","MAGVGUID",133,0)
SAMESTDY(MAGIEN,DFN,ACNUMB) ;
"RTN","MAGVGUID",134,0)
 N MAG0 ; 0-node and 2-node of file 2005
"RTN","MAGVGUID",135,0)
 N MAGDFN ; DFN of designated image
"RTN","MAGVGUID",136,0)
 S MAG0=$G(^MAG(2005,MAGIEN,0)) Q:MAG0="" -1 ; no 0-node
"RTN","MAGVGUID",137,0)
 S MAGDFN=$P(MAG0,"^",7) Q:DFN'=MAGDFN 1 ; different patient
"RTN","MAGVGUID",138,0)
 I ACNUMB'=$$GETACN(MAGIEN) Q 1  ; different accession
"RTN","MAGVGUID",139,0)
 Q 0
"RTN","MAGVGUID",140,0)
 ;
"RTN","MAGVGUID",141,0)
GETACN(MAGIEN) ; return the accession number of a study
"RTN","MAGVGUID",142,0)
 N ACNUMBVAH ; VA HIS accession number
"RTN","MAGVGUID",143,0)
 N DATETIME ; Accession DateTime
"RTN","MAGVGUID",144,0)
 N MAG2 ; 2-node of file 2005
"RTN","MAGVGUID",145,0)
 N RARPT0 ; 0-node of ^RARPT
"RTN","MAGVGUID",146,0)
 N RADPT0 ; 0-node of ^RADPT
"RTN","MAGVGUID",147,0)
 N REVDT ;
"RTN","MAGVGUID",148,0)
 N ROOT,POINTER ; parent data file root and pointer
"RTN","MAGVGUID",149,0)
 S MAG2=$G(^MAG(2005,MAGIEN,2)) Q:MAG2="" "" ; no 2-node
"RTN","MAGVGUID",150,0)
 S ROOT=$P(MAG2,"^",6),POINTER=$P(MAG2,"^",7)
"RTN","MAGVGUID",151,0)
 I ROOT=74 D
"RTN","MAGVGUID",152,0)
 . S RARPT0=$G(^RARPT(POINTER,0)),DATETIME=$P(RARPT0,"^",3)
"RTN","MAGVGUID",153,0)
 . S REVDT=9999999.9999-DATETIME
"RTN","MAGVGUID",154,0)
 . S RADPT0=$G(^RADPT(DFN,"DT",REVDT,"P",1,0))
"RTN","MAGVGUID",155,0)
 . S ACNUMBVAH=$P(RADPT0,"^",31)
"RTN","MAGVGUID",156,0)
 . I ACNUMBVAH="" S ACNUMBVAH=$P(RARPT0,"^",1)
"RTN","MAGVGUID",157,0)
 . Q
"RTN","MAGVGUID",158,0)
 E  I ROOT=8925 S ACNUMBVAH="GMRC-"_+$$GET1^DIQ(8925,POINTER,1405,"I")
"RTN","MAGVGUID",159,0)
 E  I ROOT=2006.5839 S ACNUMBVAH="GMRC-"_POINTER
"RTN","MAGVGUID",160,0)
 E  S ACNUMBVAH=""
"RTN","MAGVGUID",161,0)
 Q ACNUMBVAH
"RTN","MAGVGUID",162,0)
 ;
"RTN","MAGVIM01")
0^75^B189891368
"RTN","MAGVIM01",1,0)
MAGVIM01 ;WOIFO/DAC/NST/BT - Utilities for RPC calls for DICOM file processing ; 28 Aug 2012 9:54 AM
"RTN","MAGVIM01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM01",17,0)
 ;;
"RTN","MAGVIM01",18,0)
 Q
"RTN","MAGVIM01",19,0)
OUTSEP() ; Name value separator for output data ie. NAME|TESTPATIENT
"RTN","MAGVIM01",20,0)
 Q "|"
"RTN","MAGVIM01",21,0)
STATSEP() ; Status and result separator ie. -3``No record IEN
"RTN","MAGVIM01",22,0)
 Q "`"
"RTN","MAGVIM01",23,0)
INPUTSEP() ; Name value separator for input data ie. NAME`TESTPATIENT
"RTN","MAGVIM01",24,0)
 Q "`"
"RTN","MAGVIM01",25,0)
 ; RPC: MAGV GET WORKLISTS
"RTN","MAGVIM01",26,0)
GETLIST(OUT) ; Returns all worklist names and statuses
"RTN","MAGVIM01",27,0)
 N IEN,OSEP,SSEP,FILE,WORKLIST,I
"RTN","MAGVIM01",28,0)
 S IEN=0,I=0,OSEP=$$OUTSEP,SSEP=$$STATSEP,FILE=2006.9412
"RTN","MAGVIM01",29,0)
 F  S IEN=$O(^MAGV(FILE,IEN)) Q:+IEN=0  D
"RTN","MAGVIM01",30,0)
 . S I=I+1
"RTN","MAGVIM01",31,0)
 . S WORKLIST=$G(^MAGV(FILE,IEN,0))
"RTN","MAGVIM01",32,0)
 . S OUT(I+1)=$P(WORKLIST,U,1)_OSEP_$P(WORKLIST,U,2)
"RTN","MAGVIM01",33,0)
 I I>0 S OUT(1)=0_SSEP_I
"RTN","MAGVIM01",34,0)
 Q
"RTN","MAGVIM01",35,0)
 ; RPC: MAGV CREATE WORK ITEM
"RTN","MAGVIM01",36,0)
CRTITEM(OUT,TYPE,SUBTYPE,STATUS,PLACEID,PRIORITY,MSGTAGS,CRTUSR,CRTAPP) ; Creates an entry in the work item file and the work history file
"RTN","MAGVIM01",37,0)
 N FDA,ERR,SMIEN,ISEP,SSEP,MSG,APPIEN
"RTN","MAGVIM01",38,0)
 N I,CRTDAT
"RTN","MAGVIM01",39,0)
 S SSEP=$$STATSEP,ISEP=$$INPUTSEP
"RTN","MAGVIM01",40,0)
 S CRTDAT=$$NOW^XLFDT ; CREATED DATE/TIME
"RTN","MAGVIM01",41,0)
 K OUT
"RTN","MAGVIM01",42,0)
 I $G(TYPE)="" S OUT=-6_SSEP_"No work item TYPE provided" Q
"RTN","MAGVIM01",43,0)
 I $G(SUBTYPE)="" S OUT=-7_SSEP_"No work item SUBTYPE provided" Q
"RTN","MAGVIM01",44,0)
 I $G(STATUS)="" S OUT=-8_SSEP_"No work item STATUS provided" Q
"RTN","MAGVIM01",45,0)
 I $G(PLACEID)="" S OUT=-9_SSEP_"No work item LOCATION provided" Q
"RTN","MAGVIM01",46,0)
 I $G(PRIORITY)="" S OUT=-10_SSEP_"No work item PRIORITY provided" Q
"RTN","MAGVIM01",47,0)
 I ($G(CRTUSR)="")&($G(CRTAPP)="") S OUT=-11_SSEP_"No work item USER/APPLICATION provided" Q
"RTN","MAGVIM01",48,0)
 S FDA(2006.941,"+1,",.01)=CRTDAT
"RTN","MAGVIM01",49,0)
 S FDA(2006.941,"+1,",1)=TYPE
"RTN","MAGVIM01",50,0)
 S FDA(2006.941,"+1,",2)=SUBTYPE
"RTN","MAGVIM01",51,0)
 S FDA(2006.941,"+1,",3)=STATUS
"RTN","MAGVIM01",52,0)
 S FDA(2006.941,"+1,",4)=PLACEID
"RTN","MAGVIM01",53,0)
 S FDA(2006.941,"+1,",5)=PRIORITY
"RTN","MAGVIM01",54,0)
 S FDA(2006.941,"+1,",9)=CRTDAT
"RTN","MAGVIM01",55,0)
 S:CRTUSR'="" (FDA(2006.941,"+1,",8),FDA(2006.941,"+1,",10))="`"_CRTUSR  ; user DUZ is passed
"RTN","MAGVIM01",56,0)
 I $G(CRTAPP)'="" D
"RTN","MAGVIM01",57,0)
 . S APPIEN=$$GETIEN^MAGVAF05(2006.9193,CRTAPP,1)  ; Get application IEN
"RTN","MAGVIM01",58,0)
 . S (FDA(2006.941,"+1,",14),FDA(2006.941,"+1,",15))=CRTAPP
"RTN","MAGVIM01",59,0)
 . Q
"RTN","MAGVIM01",60,0)
 ; Add message text and tag names and values
"RTN","MAGVIM01",61,0)
 F I=1:1 Q:'$D(MSGTAGS(I))  D
"RTN","MAGVIM01",62,0)
 . I $E($P(MSGTAGS(I),ISEP,1),1,3)="MSG" S MSG(I+1)=$P(MSGTAGS(I),ISEP,2) Q
"RTN","MAGVIM01",63,0)
 . S FDA(2006.94111,"+"_(I+1)_",+1,",.01)=$P(MSGTAGS(I),ISEP,1)  ; TAG NAME
"RTN","MAGVIM01",64,0)
 . S FDA(2006.94111,"+"_(I+1)_",+1,",1)=$P(MSGTAGS(I),ISEP,2)    ; TAG VALUE
"RTN","MAGVIM01",65,0)
 . Q
"RTN","MAGVIM01",66,0)
 K ERR
"RTN","MAGVIM01",67,0)
 D VALIDATE^MAGVIM06(.FDA,.ERR)
"RTN","MAGVIM01",68,0)
 ; Quit on validation error
"RTN","MAGVIM01",69,0)
 I $D(ERR) S OUT="-4"_SSEP_$G(ERR) Q
"RTN","MAGVIM01",70,0)
 ; Set Work Item
"RTN","MAGVIM01",71,0)
 K ERR
"RTN","MAGVIM01",72,0)
 ;
"RTN","MAGVIM01",73,0)
 L +^MAGV(2006.941,0):5 I $T D
"RTN","MAGVIM01",74,0)
 . D UPDATE^DIE("E","FDA","SMIEN","ERR")
"RTN","MAGVIM01",75,0)
 . D
"RTN","MAGVIM01",76,0)
 . . ; Quit if error during saving
"RTN","MAGVIM01",77,0)
 . . I $D(ERR("DIERR",1,"TEXT",1)) S OUT="-1"_SSEP_$G(ERR("DIERR",1,"TEXT",1)) Q
"RTN","MAGVIM01",78,0)
 . . ; File message as word processing field
"RTN","MAGVIM01",79,0)
 . . K ERR
"RTN","MAGVIM01",80,0)
 . . ; Quit if error during saving
"RTN","MAGVIM01",81,0)
 . . I $D(MSG) D  Q:$D(ERR)
"RTN","MAGVIM01",82,0)
 . . . D WP^DIE(2006.941,SMIEN(1)_",",13,"K","MSG","ERR")
"RTN","MAGVIM01",83,0)
 . . . I $D(ERR) S OUT="-3"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVIM01",84,0)
 . . . Q
"RTN","MAGVIM01",85,0)
 . . ; Return ID of new entry
"RTN","MAGVIM01",86,0)
 . . S OUT=0_SSEP_SMIEN(1)
"RTN","MAGVIM01",87,0)
 . . Q
"RTN","MAGVIM01",88,0)
 . L -^MAGV(2006.941,0)
"RTN","MAGVIM01",89,0)
 E  D
"RTN","MAGVIM01",90,0)
 . S OUT=-5_SSEP_"Unable to lock MAG WORK ITEM file."
"RTN","MAGVIM01",91,0)
 . Q
"RTN","MAGVIM01",92,0)
 Q
"RTN","MAGVIM01",93,0)
 ;
"RTN","MAGVIM01",94,0)
 ; RPC: MAGV UPDATE WORK ITEM
"RTN","MAGVIM01",95,0)
UPDITEM(OUT,ID,EXPSTAT,NEWSTAT,MESSAGE,UPDUSR,UPDAPP) ; Update work item status and create an entry in the work history file
"RTN","MAGVIM01",96,0)
 N FDA,SSEP,ISEP,MSGUPD,APPIEN
"RTN","MAGVIM01",97,0)
 S SSEP=$$STATSEP,ISEP=$$INPUTSEP
"RTN","MAGVIM01",98,0)
 I '$D(^MAGV(2006.941,ID)) S OUT="-6"_SSEP_"Work item "_ID_" not found" Q
"RTN","MAGVIM01",99,0)
 I $G(EXPSTAT)="" S OUT=-7_SSEP_"No work item expected status provided" Q
"RTN","MAGVIM01",100,0)
 I ($G(UPDUSR)="")&($G(UPDAPP)="") S OUT=-8_SSEP_"No updated by user/application provided" Q
"RTN","MAGVIM01",101,0)
 L +^MAGV(2006.941,ID):1E9
"RTN","MAGVIM01",102,0)
 S RSTAT=$$GET1^DIQ(2006.941,ID,"STATUS")
"RTN","MAGVIM01",103,0)
 I EXPSTAT'=RSTAT S OUT=-9_SSEP_"Work item "_ID_" has a status of "_RSTAT_", not the expected status of "_EXPSTAT L -^MAGV(2006.941,ID) Q
"RTN","MAGVIM01",104,0)
 I NEWSTAT'="" S FDA(2006.941,ID_",",3)=NEWSTAT
"RTN","MAGVIM01",105,0)
 ;
"RTN","MAGVIM01",106,0)
 F I=1:1 Q:'$D(MESSAGE(I))  D
"RTN","MAGVIM01",107,0)
 . I $E($P(MESSAGE(I),ISEP,1),1,3)="MSG" S MSGUPD(I+1)=$P(MESSAGE(I),ISEP,2)
"RTN","MAGVIM01",108,0)
 . Q
"RTN","MAGVIM01",109,0)
 ;
"RTN","MAGVIM01",110,0)
 S FDA(2006.941,ID_",",9)=$$NOW^XLFDT  ; LAST UPDATED DATE/TIME
"RTN","MAGVIM01",111,0)
 S:$G(UPDUSR)'="" FDA(2006.941,ID_",",10)="`"_UPDUSR  ; LAST UPDATING USER - User DUZ is passed
"RTN","MAGVIM01",112,0)
 I $G(UPDAPP)'="" D
"RTN","MAGVIM01",113,0)
 . S APPIEN=$$GETIEN^MAGVAF05(2006.9193,UPDAPP,1)  ; Get application IEN or create a new one first
"RTN","MAGVIM01",114,0)
 . S FDA(2006.941,ID_",",15)=UPDAPP      ; LAST UPDATING APPLICATION
"RTN","MAGVIM01",115,0)
 . Q
"RTN","MAGVIM01",116,0)
 ;
"RTN","MAGVIM01",117,0)
 S OUT=$$UPDWI^MAGVIM01(ID,.FDA,.MSGUPD)  ; Update Work Item ID with FDA data and MSGUPD message
"RTN","MAGVIM01",118,0)
 L -^MAGV(2006.941,ID)
"RTN","MAGVIM01",119,0)
 Q
"RTN","MAGVIM01",120,0)
 ;
"RTN","MAGVIM01",121,0)
UPDWI(ID,FDA,MSGUPD) ; Update work item
"RTN","MAGVIM01",122,0)
 ; Return 0|Error`Message error
"RTN","MAGVIM01",123,0)
 ; 
"RTN","MAGVIM01",124,0)
 ; ID - IEN of Work Item
"RTN","MAGVIM01",125,0)
 ; FDA - VA FileMan FDA array
"RTN","MAGVIM01",126,0)
 ; MSGUPD - Message array
"RTN","MAGVIM01",127,0)
 N ERR,SSEP
"RTN","MAGVIM01",128,0)
 S SSEP=$$STATSEP
"RTN","MAGVIM01",129,0)
 ;
"RTN","MAGVIM01",130,0)
 D VALIDATE^MAGVIM06(.FDA,.ERR)
"RTN","MAGVIM01",131,0)
 I $D(ERR("DIERR",1,"TEXT",1)) Q -4_SSEP_$G(ERR("DIERR",1,"TEXT",1))  ;Quit on error
"RTN","MAGVIM01",132,0)
 ;
"RTN","MAGVIM01",133,0)
 K ERR
"RTN","MAGVIM01",134,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","MAGVIM01",135,0)
 I $D(ERR("DIERR",1,"TEXT",1)) Q -3_SSEP_$G(ERR("DIERR",1,"TEXT",1))  ;Quit on error
"RTN","MAGVIM01",136,0)
 ;
"RTN","MAGVIM01",137,0)
 ; Update Message field
"RTN","MAGVIM01",138,0)
 K ERR
"RTN","MAGVIM01",139,0)
 I $D(MSGUPD) D WP^DIE(2006.941,ID_",",13,"K","MSGUPD","ERR")
"RTN","MAGVIM01",140,0)
 I $D(ERR("DIERR",1,"TEXT",1)) Q -5_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVIM01",141,0)
 ;
"RTN","MAGVIM01",142,0)
 Q 0_SSEP_"Work item "_ID_" updated"
"RTN","MAGVIM01",143,0)
 ;
"RTN","MAGVIM01",144,0)
 ; RPC: MAGV FIND WORK ITEM
"RTN","MAGVIM01",145,0)
FIND(OUT,TYPE,SUBTYPE,STATUS,PLACEID,PRIORITY,STOPTAG,MAXROWS,TAGS) ; Find records with given attributes - return ID
"RTN","MAGVIM01",146,0)
 ;PLACEID is FILE #4's STATION NUMBER
"RTN","MAGVIM01",147,0)
 N IEN,IEN2,J,TAGMATCH,SSEP,ISEP,TAG,WICOUNT,FLD
"RTN","MAGVIM01",148,0)
 N VALUE,FLDS,AFLD,NOMATCH,IENS,MAGOUT,LOCIEN
"RTN","MAGVIM01",149,0)
 S SSEP=$$STATSEP,ISEP=$$INPUTSEP
"RTN","MAGVIM01",150,0)
 ;
"RTN","MAGVIM01",151,0)
 I $G(MAXROWS)'="",'(MAXROWS?1N.N) S OUT=-2_SSEP_"Invalid MAXROWS parameter provided" Q
"RTN","MAGVIM01",152,0)
 ;
"RTN","MAGVIM01",153,0)
 I $G(PLACEID)'="" D  Q:$G(OUT)<0
"RTN","MAGVIM01",154,0)
 . S LOCIEN=$$IEN^XUAF4(PLACEID) ;IA #2171 Get Institution IEN for a station number
"RTN","MAGVIM01",155,0)
 . I LOCIEN="" S OUT=-2_SSEP_"Invalid PLACEID parameter provided"
"RTN","MAGVIM01",156,0)
 . Q
"RTN","MAGVIM01",157,0)
 ;
"RTN","MAGVIM01",158,0)
 S OUT(0)=0
"RTN","MAGVIM01",159,0)
 ; AFLD(FLD,"IE") = compare the external or internal value of the field
"RTN","MAGVIM01",160,0)
 S FLDS=""
"RTN","MAGVIM01",161,0)
 I $G(TYPE)'="" S FLDS=FLDS_"1;",AFLD(1)=TYPE,AFLD(1,"IE")="E"
"RTN","MAGVIM01",162,0)
 I $G(SUBTYPE)'="" S FLDS=FLDS_"2;",AFLD(2)=SUBTYPE,AFLD(2,"IE")="E"
"RTN","MAGVIM01",163,0)
 I $G(STATUS)'="" S FLDS=FLDS_"3;",AFLD(3)=STATUS,AFLD(3,"IE")="E"
"RTN","MAGVIM01",164,0)
 I $G(LOCIEN)'="" S FLDS=FLDS_"4;",AFLD(4)=LOCIEN,AFLD(4,"IE")="I"
"RTN","MAGVIM01",165,0)
 I $G(PRIORITY)'="" S FLDS=FLDS_"5;",AFLD(5)=PRIORITY,AFLD(5,"IE")="E"
"RTN","MAGVIM01",166,0)
 ;
"RTN","MAGVIM01",167,0)
 K ERR
"RTN","MAGVIM01",168,0)
 S IEN=0,WICOUNT=0
"RTN","MAGVIM01",169,0)
 F  S IEN=$O(^MAGV(2006.941,IEN)) Q:(+IEN=0)!($D(ERR))!((($G(MAXROWS)'="")&($G(MAXROWS)<=WICOUNT)))  D
"RTN","MAGVIM01",170,0)
 . S IENS=IEN_","
"RTN","MAGVIM01",171,0)
 . K ERR
"RTN","MAGVIM01",172,0)
 . D GETS^DIQ(2006.941,IENS,FLDS,"IE","MAGOUT","ERR")
"RTN","MAGVIM01",173,0)
 . I $D(ERR) K OUT S OUT(0)=-1_SSEP_$G(ERR("DIERR",1,"TEXT",1)) Q  ; Set Error and quit
"RTN","MAGVIM01",174,0)
 . S FLD=""
"RTN","MAGVIM01",175,0)
 . S NOMATCH=0
"RTN","MAGVIM01",176,0)
 . F  S FLD=$O(AFLD(FLD)) Q:FLD=""!NOMATCH  D
"RTN","MAGVIM01",177,0)
 . . S:AFLD(FLD)'=MAGOUT("2006.941",IENS,FLD,AFLD(FLD,"IE")) NOMATCH=1
"RTN","MAGVIM01",178,0)
 . . Q
"RTN","MAGVIM01",179,0)
 . Q:NOMATCH  ; get next one if no match
"RTN","MAGVIM01",180,0)
 . ; Tag matching
"RTN","MAGVIM01",181,0)
 . S J=0,TAGMATCH=1
"RTN","MAGVIM01",182,0)
 . F  S J=$O(TAGS(J)) Q:J=""  D
"RTN","MAGVIM01",183,0)
 . . S TAG=$P(TAGS(J),ISEP,1),VALUE=$P(TAGS(J),ISEP,2)
"RTN","MAGVIM01",184,0)
 . . I '$D(^MAGV(2006.941,"H",TAG,IEN)) S TAGMATCH=0 Q
"RTN","MAGVIM01",185,0)
 . . S IEN2=$O(^MAGV(2006.941,"H",TAG,IEN,""))
"RTN","MAGVIM01",186,0)
 . . I $P($G(^MAGV(2006.941,IEN,4,IEN2,0)),U,2)'=VALUE S TAGMATCH=0
"RTN","MAGVIM01",187,0)
 . . Q
"RTN","MAGVIM01",188,0)
 . I 'TAGMATCH Q
"RTN","MAGVIM01",189,0)
 . ; Add work item header to output array
"RTN","MAGVIM01",190,0)
 . D GETWI^MAGVIM09(.OUT,IEN,$G(STOPTAG))  ; Get Work Item Record
"RTN","MAGVIM01",191,0)
 . I +OUT(0)<0 S ERR=""  ; Check for error and set ERR to quit from the loop
"RTN","MAGVIM01",192,0)
 . S WICOUNT=WICOUNT+1
"RTN","MAGVIM01",193,0)
 . Q
"RTN","MAGVIM01",194,0)
 Q
"RTN","MAGVIM01",195,0)
 ;
"RTN","MAGVIM01",196,0)
 ; RPC: MAGV GET WORK ITEM
"RTN","MAGVIM01",197,0)
GETITEM(OUT,ID,EXPSTAT,NEWSTAT,UPDUSR,UPDAPP) ; Find work item with matching ID and return tags - Get and transition
"RTN","MAGVIM01",198,0)
 N I,J,SSEP,RSTAT,FDA,APPIEN
"RTN","MAGVIM01",199,0)
 S SSEP=$$STATSEP
"RTN","MAGVIM01",200,0)
 K OUT
"RTN","MAGVIM01",201,0)
 I $G(ID)="" S OUT(0)=-1_SSEP_"No work item ID provided" Q
"RTN","MAGVIM01",202,0)
 I $G(EXPSTAT)="" S OUT(0)=-2_SSEP_"No expected status provided" Q
"RTN","MAGVIM01",203,0)
 I $G(NEWSTAT)="" S OUT(0)=-3_SSEP_"No new status provided" Q
"RTN","MAGVIM01",204,0)
 I ($G(UPDUSR)="")&($G(UPDAPP)="") S OUT(0)=-4_SSEP_"No updated by user/application provided" Q
"RTN","MAGVIM01",205,0)
 I '$D(^MAGV(2006.941,ID)) S OUT(0)=-5_SSEP_"No work item with matching ID provided" Q
"RTN","MAGVIM01",206,0)
 S RSTAT=$$GET1^DIQ(2006.941,ID,"STATUS")
"RTN","MAGVIM01",207,0)
 I EXPSTAT'=RSTAT S OUT(0)=-6_SSEP_"Work item "_ID_" has a status of "_RSTAT_", not the expected status of "_EXPSTAT L -^MAGV(2006.941,ID) Q
"RTN","MAGVIM01",208,0)
 L +^MAGV(2006.941,ID):1E9
"RTN","MAGVIM01",209,0)
 S OUT(0)=0
"RTN","MAGVIM01",210,0)
 I NEWSTAT'=EXPSTAT D UPUSRAPP(.OUT,ID,NEWSTAT,UPDUSR,UPDAPP) ; Update user, app, updated time fields
"RTN","MAGVIM01",211,0)
 I +OUT(0)=0 D
"RTN","MAGVIM01",212,0)
 . S OUT(0)=0
"RTN","MAGVIM01",213,0)
 . D GETWI^MAGVIM09(.OUT,ID)  ; Get Work Item Record
"RTN","MAGVIM01",214,0)
 . Q 
"RTN","MAGVIM01",215,0)
 L -^MAGV(2006.941,ID)
"RTN","MAGVIM01",216,0)
 Q
"RTN","MAGVIM01",217,0)
 ; RPC: MAGV DELETE WORK ITEM
"RTN","MAGVIM01",218,0)
DELWITEM(OUT,ID) ; Delete Work Item
"RTN","MAGVIM01",219,0)
 N FDA,SSEP
"RTN","MAGVIM01",220,0)
 S SSEP=$$STATSEP
"RTN","MAGVIM01",221,0)
 I '$D(^MAGV(2006.941,ID)) S OUT=-1_SSEP_"Work item "_ID_" not found." Q
"RTN","MAGVIM01",222,0)
 S FDA(2006.941,ID_",",.01)="@"
"RTN","MAGVIM01",223,0)
 L +^MAGV(2006.941,0):5 I $T D
"RTN","MAGVIM01",224,0)
 . ;
"RTN","MAGVIM01",225,0)
 . ;--- Do not decrement FileMan highest entry value during delete.
"RTN","MAGVIM01",226,0)
 . N MAXIEN S MAXIEN=$P(^MAGV(2006.941,0),U,3)
"RTN","MAGVIM01",227,0)
 . D FILE^DIE("","FDA")
"RTN","MAGVIM01",228,0)
 . S:$P(^MAGV(2006.941,0),U,3)<MAXIEN $P(^MAGV(2006.941,0),U,3)=MAXIEN
"RTN","MAGVIM01",229,0)
 . S OUT=0_SSEP_"Work item "_ID_" deleted."
"RTN","MAGVIM01",230,0)
 . L -^MAGV(2006.941,0)
"RTN","MAGVIM01",231,0)
 . Q
"RTN","MAGVIM01",232,0)
 E  D
"RTN","MAGVIM01",233,0)
 . S OUT=-2_SSEP_"Work item "_ID_" is locked."
"RTN","MAGVIM01",234,0)
 . Q
"RTN","MAGVIM01",235,0)
 Q
"RTN","MAGVIM01",236,0)
 ; RPC: MAGV ADD WORK ITEM TAGS
"RTN","MAGVIM01",237,0)
ADDTAG(OUT,ID,EXPSTAT,UPDUSR,UPDAPP,TAG) ; Add tags to work item
"RTN","MAGVIM01",238,0)
 ; List of statuses
"RTN","MAGVIM01",239,0)
 N FDA1,FDA2,ERR1,ERR4,STATMATCH,STATUS,SSEP,ISEP,I,APPIEN,MSGUPD
"RTN","MAGVIM01",240,0)
 S SSEP=$$STATSEP,ISEP=$$INPUTSEP
"RTN","MAGVIM01",241,0)
 I $G(ID)="" S OUT=-9_SSEP_"No work item ID provided" Q
"RTN","MAGVIM01",242,0)
 I '$D(^MAGV(2006.941,ID)) S OUT=-5_SSEP_"No work item with matching ID provided" Q
"RTN","MAGVIM01",243,0)
 I '$D(EXPSTAT) S OUT=-6_SSEP_"No status provided" Q
"RTN","MAGVIM01",244,0)
 I ($G(UPDUSR)="")&($G(UPDAPP)="") S OUT=-7_SSEP_"No updated by user/application provided" Q
"RTN","MAGVIM01",245,0)
 I $G(TAG(1))="" S OUT=-8_SSEP_"No tag provided" Q
"RTN","MAGVIM01",246,0)
 S STATUS=$$GET1^DIQ(2006.941,ID,"STATUS")
"RTN","MAGVIM01",247,0)
 S STATMATCH=0
"RTN","MAGVIM01",248,0)
 F I=1:1  Q:$P(EXPSTAT,ISEP,I)=""  Q:STATMATCH  D
"RTN","MAGVIM01",249,0)
 . I $P(EXPSTAT,ISEP,I)=STATUS S STATMATCH=1
"RTN","MAGVIM01",250,0)
 . Q
"RTN","MAGVIM01",251,0)
 I STATMATCH=0 S OUT=-9_SSEP_"work item does not have expected status" Q
"RTN","MAGVIM01",252,0)
 L +^MAGV(2006.941,ID):1E9
"RTN","MAGVIM01",253,0)
 F I=1:1  Q:'$D(TAG(I))  D
"RTN","MAGVIM01",254,0)
 . S FDA1(2006.94111,"+"_I_","_ID_",",.01)=$P(TAG(I),ISEP,1)  ; TAG NAME
"RTN","MAGVIM01",255,0)
 . S FDA1(2006.94111,"+"_I_","_ID_",",1)=$P(TAG(I),ISEP,2)    ; TAG VALUE
"RTN","MAGVIM01",256,0)
 . Q
"RTN","MAGVIM01",257,0)
 D VALIDATE^MAGVIM06(.FDA1,.ERR4)
"RTN","MAGVIM01",258,0)
 I $D(ERR4) S OUT="-11"_SSEP_$G(ERR4) L -^MAGV(2006.941,ID) Q  ; Unlock and quit
"RTN","MAGVIM01",259,0)
 D UPDATE^DIE("","FDA1","","ERR1")
"RTN","MAGVIM01",260,0)
 I $D(ERR1("DIERR",1,"TEXT",1)) S OUT="-10"_SSEP_$G(ERR1("DIERR",1,"TEXT",1)) L -^MAGV(2006.941,ID) Q  ; Unlock and quit
"RTN","MAGVIM01",261,0)
 ;
"RTN","MAGVIM01",262,0)
 ; Set Work Item
"RTN","MAGVIM01",263,0)
 S FDA2(2006.941,ID_",",9)=$$NOW^XLFDT
"RTN","MAGVIM01",264,0)
 S:$G(UPDUSR)'="" FDA2(2006.941,ID_",",10)="`"_UPDUSR  ; LAST UPDATING USER - User DUZ is passed
"RTN","MAGVIM01",265,0)
 I $G(UPDAPP)'="" D
"RTN","MAGVIM01",266,0)
 . S APPIEN=$$GETIEN^MAGVAF05(2006.9193,UPDAPP,1)  ; Get application IEN or create a new one first
"RTN","MAGVIM01",267,0)
 . S FDA2(2006.941,ID_",",15)=UPDAPP      ; LAST UPDATING APPLICATION
"RTN","MAGVIM01",268,0)
 . Q
"RTN","MAGVIM01",269,0)
 ;
"RTN","MAGVIM01",270,0)
 S OUT=$$UPDWI^MAGVIM01(ID,.FDA2,.MSGUPD)  ; Update Work Item ID with FDA data and MSGUPD message
"RTN","MAGVIM01",271,0)
 L -^MAGV(2006.941,ID)
"RTN","MAGVIM01",272,0)
 Q
"RTN","MAGVIM01",273,0)
 ; RPC: MAGV GET NEXT WORK ITEM
"RTN","MAGVIM01",274,0)
GETNEXT(OUT,ETYPE,EXPSTAT,NEWSTAT,UPDUSR,UPDAPP,LOCATION) ; Find last update work item on worklist type provided
"RTN","MAGVIM01",275,0)
 N SSEP,FDA,ID,TYPE,STATUS,MATCH,APPIEN,LOCATIN2,LOCIEN
"RTN","MAGVIM01",276,0)
 N UPDATEDT
"RTN","MAGVIM01",277,0)
 K OUT
"RTN","MAGVIM01",278,0)
 S SSEP=$$STATSEP
"RTN","MAGVIM01",279,0)
 I $G(ETYPE)="" S OUT(0)=-1_SSEP_"Work Item type not specified" Q
"RTN","MAGVIM01",280,0)
 I $G(EXPSTAT)="" S OUT(0)=-2_SSEP_"Work Item expected status not specified" Q
"RTN","MAGVIM01",281,0)
 I $G(NEWSTAT)="" S OUT(0)=-3_SSEP_"Work Item new status not specified" Q
"RTN","MAGVIM01",282,0)
 I ($G(UPDUSR)="")&($G(UPDAPP)="") S OUT(0)=-4_SSEP_"No updated by user/application provided" Q
"RTN","MAGVIM01",283,0)
 I $G(LOCATION)="" S OUT(0)=-5_SSEP_"Work Item Place ID not specified" Q
"RTN","MAGVIM01",284,0)
 ; Loop thru worklist type find last updated record with matching parameters
"RTN","MAGVIM01",285,0)
 S UPDATEDT="",MATCH=0
"RTN","MAGVIM01",286,0)
 F  S UPDATEDT=$O(^MAGV(2006.941,"I",UPDATEDT)) Q:UPDATEDT=""  D  Q:MATCH=1
"RTN","MAGVIM01",287,0)
 . S ID=""
"RTN","MAGVIM01",288,0)
 . F  S ID=$O(^MAGV(2006.941,"I",UPDATEDT,ID)) Q:ID=""  D  Q:MATCH=1
"RTN","MAGVIM01",289,0)
 . . S TYPE=$$GET1^DIQ(2006.941,ID,"TYPE"),STATUS=$$GET1^DIQ(2006.941,ID,"STATUS")
"RTN","MAGVIM01",290,0)
 . . S LOCIEN=$P($G(^MAGV(2006.941,ID,1)),U,1),LOCATIN2=$$STA^XUAF4(LOCIEN) ; IA # 2171
"RTN","MAGVIM01",291,0)
 . . I EXPSTAT=STATUS,ETYPE=TYPE,LOCATION=LOCATIN2 S MATCH=1 L +^MAGV(2006.941,ID):1E9
"RTN","MAGVIM01",292,0)
 . . Q
"RTN","MAGVIM01",293,0)
 . Q
"RTN","MAGVIM01",294,0)
 I 'MATCH S OUT(0)=0_SSEP_"No matching work item found" Q
"RTN","MAGVIM01",295,0)
 S OUT(0)=0
"RTN","MAGVIM01",296,0)
 I NEWSTAT'=EXPSTAT D UPUSRAPP(.OUT,ID,NEWSTAT,UPDUSR,UPDAPP) ; Update user, app, updated time fields
"RTN","MAGVIM01",297,0)
 I +OUT(0)=0 D
"RTN","MAGVIM01",298,0)
 . S OUT(0)=0
"RTN","MAGVIM01",299,0)
 . D GETWI^MAGVIM09(.OUT,ID)  ; Get Work Item Record
"RTN","MAGVIM01",300,0)
 . Q 
"RTN","MAGVIM01",301,0)
 L -^MAGV(2006.941,ID)
"RTN","MAGVIM01",302,0)
 Q
"RTN","MAGVIM01",303,0)
 ; RPC: MAGV IMPORT STATUS
"RTN","MAGVIM01",304,0)
IMSTATUS(OUT,UIDS) ; Get import status
"RTN","MAGVIM01",305,0)
 N SSEP,STUDYLIST,SOPLIST,STUDYOUT,SOPOUT,I,CNT,STUDYUID,SERUID,SOPUID,ISEP,SOPIEN,SERIEN,STUDIEN
"RTN","MAGVIM01",306,0)
 S SSEP=$$OUTSEP,ISEP=$$INPUTSEP,I=0,CNT=0
"RTN","MAGVIM01",307,0)
 I '$D(UIDS) S OUT(1)=-6_SSEP_"No UIDs provided" Q
"RTN","MAGVIM01",308,0)
 F  S I=$O(UIDS(I)) Q:I=""  D
"RTN","MAGVIM01",309,0)
 . S CNT=I
"RTN","MAGVIM01",310,0)
 . S STUDYUID=$P(UIDS(I),ISEP,1),SERUID=$P(UIDS(I),ISEP,2),SOPUID=$P(UIDS(I),ISEP,3)
"RTN","MAGVIM01",311,0)
 . I $G(STUDYUID)="" S OUT(I+1)=-1_SSEP_"No study UID provided" Q
"RTN","MAGVIM01",312,0)
 . I $G(SERUID)="" S OUT(I+1)=-2_SSEP_"No series UID provided" Q
"RTN","MAGVIM01",313,0)
 . I $G(SOPUID)="" S OUT(I+1)=-3_SSEP_"No SOP UID provided" Q
"RTN","MAGVIM01",314,0)
 . S OUT(I+1)=-1_SSEP_UIDS(I)_SSEP_"not on file"
"RTN","MAGVIM01",315,0)
 . S STUDYLIST(1)=1,STUDYLIST(2)=STUDYUID
"RTN","MAGVIM01",316,0)
 . S SOPLIST(1)=1,SOPLIST(2)=SOPUID
"RTN","MAGVIM01",317,0)
 . ; Check ^MAG(2005) for import study status 
"RTN","MAGVIM01",318,0)
 . D CHECKUID^MAGDRPCA(.STUDYOUT,.STUDYLIST,"STUDY")
"RTN","MAGVIM01",319,0)
 . I STUDYOUT(2)'="",(+STUDYOUT(2))'<0 D
"RTN","MAGVIM01",320,0)
 . . D CHECKUID^MAGDRPCA(.SOPOUT,.SOPLIST,"SOP")
"RTN","MAGVIM01",321,0)
 . . I SOPOUT(2)'="",(+SOPOUT(2))'<0 D  S CNT=I
"RTN","MAGVIM01",322,0)
 . . . S OUT(I+1)="0"_SSEP_UIDS(I)_SSEP_"on file"
"RTN","MAGVIM01",323,0)
 . . . Q
"RTN","MAGVIM01",324,0)
 . . Q
"RTN","MAGVIM01",325,0)
 . S SOPOUT=""
"RTN","MAGVIM01",326,0)
 . ; Check SOP original and UID
"RTN","MAGVIM01",327,0)
 . I ('$D(^MAGV(2005.64,"B",SOPUID)))&('$D(^MAGV(2005.66,"B",SOPUID))) Q
"RTN","MAGVIM01",328,0)
 . S SOPIEN=$O(^MAGV(2005.64,"B",SOPUID,""),-1)
"RTN","MAGVIM01",329,0)
 . Q:SOPIEN=""
"RTN","MAGVIM01",330,0)
 . I $G(^MAGV(2005.64,SOPIEN,11))'="A" Q
"RTN","MAGVIM01",331,0)
 . ; Check Series original and UID
"RTN","MAGVIM01",332,0)
 . I ('$D(^MAGV(2005.63,"B",SERUID)))&('$D(^MAGV(2005.66,"B",SERUID))) Q
"RTN","MAGVIM01",333,0)
 . S SERIEN=$O(^MAGV(2005.63,"B",SERUID,""),-1)
"RTN","MAGVIM01",334,0)
 . Q:SERIEN=""
"RTN","MAGVIM01",335,0)
 . I $G(^MAGV(2005.63,SERIEN,9))'="A" Q
"RTN","MAGVIM01",336,0)
 . ; Check Study original and UID
"RTN","MAGVIM01",337,0)
 . I ('$D(^MAGV(2005.62,"B",STUDYUID)))&('$D(^MAGV(2005.66,"B",STUDYUID))) Q
"RTN","MAGVIM01",338,0)
 . S STUDIEN=$O(^MAGV(2005.62,"B",STUDYUID,""),-1)
"RTN","MAGVIM01",339,0)
 . Q:STUDIEN=""
"RTN","MAGVIM01",340,0)
 . I $P($G(^MAGV(2005.62,STUDIEN,5)),U,2)'="A" Q
"RTN","MAGVIM01",341,0)
 . S OUT(I+1)="0"_SSEP_UIDS(I)_SSEP_"on file"
"RTN","MAGVIM01",342,0)
 . Q
"RTN","MAGVIM01",343,0)
 ;
"RTN","MAGVIM01",344,0)
 S OUT(1)=0_SSEP_CNT
"RTN","MAGVIM01",345,0)
 Q
"RTN","MAGVIM01",346,0)
UPUSRAPP(OUT,ID,NEWSTAT,UPDUSR,UPDAPP) ; Update user, app, updated time fields
"RTN","MAGVIM01",347,0)
 N FDA,APPIEN
"RTN","MAGVIM01",348,0)
 S FDA(2006.941,ID_",",3)=NEWSTAT
"RTN","MAGVIM01",349,0)
 S FDA(2006.941,ID_",",9)=$$NOW^XLFDT
"RTN","MAGVIM01",350,0)
 S:$G(UPDUSR)'="" FDA(2006.941,ID_",",10)="`"_UPDUSR  ; LAST UPDATING USER - User DUZ is passed
"RTN","MAGVIM01",351,0)
 I $G(UPDAPP)'="" D
"RTN","MAGVIM01",352,0)
 . S APPIEN=$$GETIEN^MAGVAF05(2006.9193,UPDAPP,1)  ; Get application IEN or create a new one first
"RTN","MAGVIM01",353,0)
 . S FDA(2006.941,ID_",",15)=UPDAPP      ; LAST UPDATING APPLICATION
"RTN","MAGVIM01",354,0)
 . Q
"RTN","MAGVIM01",355,0)
 S OUT(0)=$$UPDWI^MAGVIM01(ID,.FDA)  ; Update Work Item ID with FDA data and MSGUPD message
"RTN","MAGVIM01",356,0)
 Q
"RTN","MAGVIM02")
0^76^B85608956
"RTN","MAGVIM02",1,0)
MAGVIM02 ;WOIFO/MAT - Utilities for RPC calls for DICOM file processing ; 16 Mar 2012 3:19 PM
"RTN","MAGVIM02",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM02",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM02",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM02",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM02",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM02",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM02",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM02",17,0)
 ;;
"RTN","MAGVIM02",18,0)
 Q
"RTN","MAGVIM02",19,0)
 ;
"RTN","MAGVIM02",20,0)
 ; +++++ Wrap calls to___    To retrieve____________
"RTN","MAGVIM02",21,0)
 ; 
"RTN","MAGVIM02",22,0)
 ;        OER^GMRCSLM1 ..... consult/procedure list (IA #2740).
"RTN","MAGVIM02",23,0)
 ;        ORDERS^MAGDRPCB .. Radiology Exam List.
"RTN","MAGVIM02",24,0)
 ;
"RTN","MAGVIM02",25,0)
 ;  RPC: MAGV GET PAT ORDERS
"RTN","MAGVIM02",26,0)
 ;
"RTN","MAGVIM02",27,0)
 ; INPUTS
"RTN","MAGVIM02",28,0)
 ; ======
"RTN","MAGVIM02",29,0)
 ;
"RTN","MAGVIM02",30,0)
 ;  MAGVRY ........... Name of output array, passed by reference.
"RTN","MAGVIM02",31,0)
 ;  PIDENT ........... EnterprisePatientID
"RTN","MAGVIM02",32,0)
 ;  PIDTYPE .......... EnterprisePatientIDType
"RTN","MAGVIM02",33,0)
 ;  PIDAUTHN ......... AssigningAuthority
"RTN","MAGVIM02",34,0)
 ;  PIDCR8OR ......... CreatingEntity
"RTN","MAGVIM02",35,0)
 ;  ORDRTYPE ......... OrderType
"RTN","MAGVIM02",36,0)
 ;  ORDTSTRT ......... DateStart
"RTN","MAGVIM02",37,0)
 ;  ORDTSTOP ......... DateEnd
"RTN","MAGVIM02",38,0)
 ;
"RTN","MAGVIM02",39,0)
 ; OUTPUTS
"RTN","MAGVIM02",40,0)
 ; =======
"RTN","MAGVIM02",41,0)
 ;
"RTN","MAGVIM02",42,0)
 ;  Array of radiology or consult orders as f(OrderType). Descriptions of each
"RTN","MAGVIM02",43,0)
 ;  appear before their respective tags, GETORCON & GETORAD.
"RTN","MAGVIM02",44,0)
 ;
"RTN","MAGVIM02",45,0)
 ;  NOTES
"RTN","MAGVIM02",46,0)
 ;  =====
"RTN","MAGVIM02",47,0)
 ;
"RTN","MAGVIM02",48,0)
GETORD(MAGVRY,PIDENT,PIDTYPE,PIDAUTHN,PIDCR8OR,ORDRTYPE,ORDTSTRT,ORDTSTOP) ;
"RTN","MAGVIM02",49,0)
 ;
"RTN","MAGVIM02",50,0)
 ;--- Initialize.
"RTN","MAGVIM02",51,0)
 K RETURN
"RTN","MAGVIM02",52,0)
 ;
"RTN","MAGVIM02",53,0)
 ;--- Set output array separators per MAG*3.0*34 convention.
"RTN","MAGVIM02",54,0)
 N SEPOUTP,SEPSTAT D ZRUSEPIN
"RTN","MAGVIM02",55,0)
 ;
"RTN","MAGVIM02",56,0)
 ;--- Validate inputs exist. External calls validate further.
"RTN","MAGVIM02",57,0)
 N MAGVERR S MAGVERR=0
"RTN","MAGVIM02",58,0)
 D
"RTN","MAGVIM02",59,0)
 . I '$D(ORDRTYPE)!(ORDRTYPE'?3U) S MAGVERR="Undefined or mis-formatted Order Type." Q
"RTN","MAGVIM02",60,0)
 . I "CON/RAD"'[ORDRTYPE S MAGVERR="Unsupported Order Type "_ORDRTYPE_"." Q
"RTN","MAGVIM02",61,0)
 . I '$D(ORDTSTRT) S MAGVERR="Undefined Order Start Date." Q
"RTN","MAGVIM02",62,0)
 . I '$D(ORDTSTOP) S MAGVERR="Undefined Order Stop Date." Q
"RTN","MAGVIM02",63,0)
 . I ORDTSTRT'?8N S MAGVERR="Unexpected Order Start Date format." Q
"RTN","MAGVIM02",64,0)
 . I ORDTSTOP'?8N S MAGVERR="Unexpected Order Stop Date format." Q
"RTN","MAGVIM02",65,0)
 . Q
"RTN","MAGVIM02",66,0)
 ;
"RTN","MAGVIM02",67,0)
 I MAGVERR'=0 S MAGVRY(0)="-1"_SEPSTAT_MAGVERR Q
"RTN","MAGVIM02",68,0)
 ;
"RTN","MAGVIM02",69,0)
 ;--- Convert incoming MMDDYYYY dates to FileMan format.
"RTN","MAGVIM02",70,0)
 D DT^DILF(,ORDTSTRT,.ORDTSTRT)
"RTN","MAGVIM02",71,0)
 D DT^DILF(,ORDTSTOP,.ORDTSTOP)
"RTN","MAGVIM02",72,0)
 ;
"RTN","MAGVIM02",73,0)
 ;--- Set defaults for incoming undefined.
"RTN","MAGVIM02",74,0)
 S:PIDTYPE="" PIDTYPE="D"
"RTN","MAGVIM02",75,0)
 S:PIDAUTHN="" PIDAUTHN="V"
"RTN","MAGVIM02",76,0)
 S:PIDCR8OR="" PIDCR8OR="Unknown." ;???_Lookup_in_^MAGV(2005.62,_Field_#.03
"RTN","MAGVIM02",77,0)
 ;
"RTN","MAGVIM02",78,0)
 ;--- Filter consults by ORDER STATUS file (#100.01) IEN's.
"RTN","MAGVIM02",79,0)
 N ORDRSTAT S ORDRSTAT="3,4,5,6,8,9,10,15,16"
"RTN","MAGVIM02",80,0)
 ;
"RTN","MAGVIM02",81,0)
 ;--- Branch to processor.
"RTN","MAGVIM02",82,0)
 D:ORDRTYPE["CON" GETORCON(PIDENT,"",ORDTSTRT,ORDTSTOP,ORDRSTAT,ORDRTYPE)
"RTN","MAGVIM02",83,0)
 D:ORDRTYPE["RAD" GETORRAD(PIDENT,ORDRTYPE)
"RTN","MAGVIM02",84,0)
 M MAGVRY=RETURN K RETURN
"RTN","MAGVIM02",85,0)
 Q
"RTN","MAGVIM02",86,0)
 ;
"RTN","MAGVIM02",87,0)
 ;+++++ Wrap call to OER^GMRCSLM1 (IA #2740).
"RTN","MAGVIM02",88,0)
 ;
"RTN","MAGVIM02",89,0)
 ;
"RTN","MAGVIM02",90,0)
GETORCON(MAGVPDFN,MAGVNULL,STARTDT,STOPDT,STATUS,OTYPE) ;
"RTN","MAGVIM02",91,0)
 ;
"RTN","MAGVIM02",92,0)
 S MAGVNULL=""
"RTN","MAGVIM02",93,0)
 ;
"RTN","MAGVIM02",94,0)
 ;--- IA #2740.
"RTN","MAGVIM02",95,0)
 D OER^GMRCSLM1(MAGVPDFN,MAGVNULL,STARTDT,STOPDT,STATUS,1)
"RTN","MAGVIM02",96,0)
 ;
"RTN","MAGVIM02",97,0)
 ;--- Re-format output w/o trailing "0" subscript.
"RTN","MAGVIM02",98,0)
 N MAGVGBL S MAGVGBL=$NA(^TMP("GMRCR",$J,"CS",1,0))
"RTN","MAGVIM02",99,0)
 ;
"RTN","MAGVIM02",100,0)
 ;--- Process if none found, or error, & QUIT.
"RTN","MAGVIM02",101,0)
 I $E($G(@MAGVGBL))="<" D  Q
"RTN","MAGVIM02",102,0)
 . ;
"RTN","MAGVIM02",103,0)
 . I $G(@MAGVGBL)["PATIENT DOES NOT HAVE ANY" D  Q
"RTN","MAGVIM02",104,0)
 . . S RETURN(0)="0"_SEPSTAT_"0"
"RTN","MAGVIM02",105,0)
 . S RETURN(0)="-1"_SEPSTAT_$G(@MAGVGBL)
"RTN","MAGVIM02",106,0)
 . Q
"RTN","MAGVIM02",107,0)
 ;
"RTN","MAGVIM02",108,0)
 S MAGVGBL=$NA(^TMP("GMRCR",$J,"CS",0))
"RTN","MAGVIM02",109,0)
 ;
"RTN","MAGVIM02",110,0)
 ;--- Process expected output.
"RTN","MAGVIM02",111,0)
 E  D
"RTN","MAGVIM02",112,0)
 . N LINETOT S LINETOT=$P($G(@MAGVGBL),U,4)
"RTN","MAGVIM02",113,0)
 . S RETURN(0)="0"_SEPSTAT_LINETOT
"RTN","MAGVIM02",114,0)
 . N CT F CT=1:1:LINETOT S MAGVGBL=$Q(@MAGVGBL) D
"RTN","MAGVIM02",115,0)
 . . N DATA S DATA=$G(@MAGVGBL)
"RTN","MAGVIM02",116,0)
 . . K MAGV
"RTN","MAGVIM02",117,0)
 . . ;
"RTN","MAGVIM02",118,0)
 . . ;--- Parse incoming data.
"RTN","MAGVIM02",119,0)
 . . S MAGV("GMRCDFN")=$P(DATA,U,1)
"RTN","MAGVIM02",120,0)
 . . S MAGV("REQSTDT")=$$FMTE^XLFDT($P(DATA,U,2),1)
"RTN","MAGVIM02",121,0)
 . . S MAGV("ORDRSTAT")=$P(DATA,U,3)
"RTN","MAGVIM02",122,0)
 . . S MAGV("SERVTO")=$P(DATA,U,4)
"RTN","MAGVIM02",123,0)
 . . S MAGV("NMPROCON")=$P(DATA,U,5)
"RTN","MAGVIM02",124,0)
 . . S MAGV("SERVFROM")=$P(DATA,U,6)
"RTN","MAGVIM02",125,0)
 . . S MAGV("CONTITLE")=$P(DATA,U,7)
"RTN","MAGVIM02",126,0)
 . . S MAGV("OERRDFN")=$P(DATA,U,8)
"RTN","MAGVIM02",127,0)
 . . ;
"RTN","MAGVIM02",128,0)
 . . ;--- record type for proper GUI icon
"RTN","MAGVIM02",129,0)
 . . ;--- "C"=reg cons, "P"=reg proc, "M"=clin proc, "I"=IF cons, "R"=IF proc
"RTN","MAGVIM02",130,0)
 . . S MAGV("CONTYPE")=$P(DATA,U,9)
"RTN","MAGVIM02",131,0)
 . . ;
"RTN","MAGVIM02",132,0)
 . . ;--- First line of Reason for Request (#123.01,.01).
"RTN","MAGVIM02",133,0)
 . . S MAGV("ORDREASN")=$$GET1^DIQ(123.01,"1,"_MAGV("GMRCDFN")_",",.01)
"RTN","MAGVIM02",134,0)
 . . ;
"RTN","MAGVIM02",135,0)
 . . S MAGV("CLINPROC")=$$GET1^DIQ(123,MAGV("GMRCDFN"),1.01)
"RTN","MAGVIM02",136,0)
 . . ;
"RTN","MAGVIM02",137,0)
 . . ;--- Re-format output.
"RTN","MAGVIM02",138,0)
 . . N LINEOUT S LINEOUT=$QS(MAGVGBL,4)
"RTN","MAGVIM02",139,0)
 . . S $P(RETURN(LINEOUT),U,1)=OTYPE
"RTN","MAGVIM02",140,0)
 . . S $P(RETURN(LINEOUT),U,2)=MAGVPDFN
"RTN","MAGVIM02",141,0)
 . . S $P(RETURN(LINEOUT),U,3)=MAGV("REQSTDT")
"RTN","MAGVIM02",142,0)
 . . S $P(RETURN(LINEOUT),U,4)=MAGV("ORDREASN")
"RTN","MAGVIM02",143,0)
 . . S $P(RETURN(LINEOUT),U,5)=MAGV("SERVTO")
"RTN","MAGVIM02",144,0)
 . . S $P(RETURN(LINEOUT),U,7)="GMRC-"_MAGV("GMRCDFN")
"RTN","MAGVIM02",145,0)
 . . S $P(RETURN(LINEOUT),U,8)=MAGV("ORDRSTAT")
"RTN","MAGVIM02",146,0)
 . . S $P(RETURN(LINEOUT),U,9)=MAGV("GMRCDFN")
"RTN","MAGVIM02",147,0)
 . . S $P(RETURN(LINEOUT),U,10)=MAGV("CONTITLE")
"RTN","MAGVIM02",148,0)
 . . S $P(RETURN(LINEOUT),U,11)=$G(MAGV("CLINPROC"))
"RTN","MAGVIM02",149,0)
 . . S $P(RETURN(LINEOUT),U,12)=$G(MAGV("EXAMIEN"))
"RTN","MAGVIM02",150,0)
 . . S $P(RETURN(LINEOUT),U,13)=$G(MAGV("RAOIEN"))
"RTN","MAGVIM02",151,0)
 . . S $P(RETURN(LINEOUT),U,14)=$G(MAGV("EXAMIEN2"))
"RTN","MAGVIM02",152,0)
 . . S $P(RETURN(LINEOUT),U,15)=$G(MAGV("ORDRPHYS"))
"RTN","MAGVIM02",153,0)
 . . S $P(RETURN(LINEOUT),U,16)=$G(MAGV("ORDRLOCIEN"))
"RTN","MAGVIM02",154,0)
 . . S $P(RETURN(LINEOUT),U,17)=$G(MAGV("PROCMOD"))
"RTN","MAGVIM02",155,0)
 . . ;
"RTN","MAGVIM02",156,0)
 . . S RETURN($QS(MAGVGBL,4))=$TR(RETURN(LINEOUT),U,SEPOUTP)
"RTN","MAGVIM02",157,0)
 . . Q
"RTN","MAGVIM02",158,0)
 . K MAGV
"RTN","MAGVIM02",159,0)
 . Q
"RTN","MAGVIM02",160,0)
 Q
"RTN","MAGVIM02",161,0)
 ;
"RTN","MAGVIM02",162,0)
 ;+++++ Wrap call to modified code from ORDERS^MAGDRPCB (RPC: MAG DICOM GET RAD ORDERS)
"RTN","MAGVIM02",163,0)
 ;
"RTN","MAGVIM02",164,0)
 ; NOTES
"RTN","MAGVIM02",165,0)
 ; =====
"RTN","MAGVIM02",166,0)
 ; Filters on REQUEST STATUS field (#5) of the RAD/NUC MED ORDERS file (#75.1)
"RTN","MAGVIM02",167,0)
 ; ,QUITting if status is DISCONTINUED, UNRELEASED or is null.
"RTN","MAGVIM02",168,0)
 ;
"RTN","MAGVIM02",169,0)
 ; Procedure Modifiers are multiple, concatenated as "Name1|1~Name2|2~...",
"RTN","MAGVIM02",170,0)
 ;   and get re-formatted as "NAME1~NAME2~..."
"RTN","MAGVIM02",171,0)
 ;
"RTN","MAGVIM02",172,0)
 ; Possible errors:
"RTN","MAGVIM02",173,0)
 ;
"RTN","MAGVIM02",174,0)
 ; . S ARRAY(1)="-1,Invalid or missing patient identifier: """_DFN_"""."
"RTN","MAGVIM02",175,0)
 ; . S ARRAY(1)="-2,DFN_" undefined in the RAD/NUC MED PATIENT file (#70).
"RTN","MAGVIM02",176,0)
 ;
"RTN","MAGVIM02",177,0)
GETORRAD(PATDFN,OTYPE) ;
"RTN","MAGVIM02",178,0)
 ;
"RTN","MAGVIM02",179,0)
 K RETURN
"RTN","MAGVIM02",180,0)
 D ORDERS^MAGVIM07(.RETURN,PATDFN)            ;MAGDRPCB(.RETURN,PATDFN)
"RTN","MAGVIM02",181,0)
 ;
"RTN","MAGVIM02",182,0)
 ;--- Process error output & QUIT.
"RTN","MAGVIM02",183,0)
 I $P(RETURN(1),",")<0 D  Q
"RTN","MAGVIM02",184,0)
 . S $P(MAGTMP(0),SEPSTAT,2)=$P(RETURN(1),",",2)
"RTN","MAGVIM02",185,0)
 . K RETURN S RETURN(0)="-1"_MAGTMP(0)
"RTN","MAGVIM02",186,0)
 . K MAGTMP
"RTN","MAGVIM02",187,0)
 . Q
"RTN","MAGVIM02",188,0)
 ;
"RTN","MAGVIM02",189,0)
 ;--- Re-subscript.
"RTN","MAGVIM02",190,0)
 N CTIN S CTIN=0
"RTN","MAGVIM02",191,0)
 F  S CTIN=$O(RETURN(CTIN)) Q:CTIN=""  S RETURN(CTIN-1)=RETURN(CTIN)
"RTN","MAGVIM02",192,0)
 S CTIN=$O(RETURN(""),-1) K RETURN(CTIN)
"RTN","MAGVIM02",193,0)
 ;
"RTN","MAGVIM02",194,0)
 N LINECUR S LINECUR=0
"RTN","MAGVIM02",195,0)
 N LINETOT S LINETOT=RETURN(0)
"RTN","MAGVIM02",196,0)
 N LINEOUT S LINEOUT=0
"RTN","MAGVIM02",197,0)
 ;
"RTN","MAGVIM02",198,0)
 F LINECUR=1:1:LINETOT D
"RTN","MAGVIM02",199,0)
 . ;
"RTN","MAGVIM02",200,0)
 . K MAGV
"RTN","MAGVIM02",201,0)
 . ;
"RTN","MAGVIM02",202,0)
 . ;--- Array "^" pieces & re-write line.
"RTN","MAGVIM02",203,0)
 . S MAGV("RAOIEN")=$P(RETURN(LINECUR),U,1)
"RTN","MAGVIM02",204,0)
 . S MAGV("PROCIEN")=$P(RETURN(LINECUR),U,2)
"RTN","MAGVIM02",205,0)
 . S MAGV("PROCMOD")=$P(RETURN(LINECUR),U,3)
"RTN","MAGVIM02",206,0)
 . ;--- Re-format Procedure Modifiers
"RTN","MAGVIM02",207,0)
 . I $G(MAGV("PROCMOD"))'="" N PCES S PCES="" D  S MAGV("PROCMOD")=PCES
"RTN","MAGVIM02",208,0)
 . . N CT F CT=1:1:$L(MAGV("PROCMOD"),"~") D
"RTN","MAGVIM02",209,0)
 . . . N PCE S PCE=$P($P(MAGV("PROCMOD"),"~",CT),"|",1),$P(PCES,"~",CT)=PCE
"RTN","MAGVIM02",210,0)
 . . . Q
"RTN","MAGVIM02",211,0)
 . . Q
"RTN","MAGVIM02",212,0)
 . . ;
"RTN","MAGVIM02",213,0)
 . ; S MAGV("ORDRSTAT")=$P(RETURN(LINECUR),U,4)
"RTN","MAGVIM02",214,0)
 . S MAGV("ORDERDT")=$$FMTE^XLFDT($P(RETURN(LINECUR),U,5),1)
"RTN","MAGVIM02",215,0)
 . S MAGV("ORDREASN")=$P(RETURN(LINECUR),U,6)
"RTN","MAGVIM02",216,0)
 . S MAGV("EXAMACN")=$P(RETURN(LINECUR),U,9)
"RTN","MAGVIM02",217,0)
 . N SS F SS="EXAMADC","EXAMCASE","EXAMIEN","EXAMIEN2","EXAMSTAT" S MAGV(SS)=""
"RTN","MAGVIM02",218,0)
 . D:MAGV("EXAMACN")'=""
"RTN","MAGVIM02",219,0)
 . . ;
"RTN","MAGVIM02",220,0)
 . . ;--- Resolve DAY-CASE, CASE from (Site-)Access'n Number [###-]MMDDYY-#####
"RTN","MAGVIM02",221,0)
 . . N ACNL S ACNL=$L(MAGV("EXAMACN"),"-")
"RTN","MAGVIM02",222,0)
 . . I ACNL>1 D
"RTN","MAGVIM02",223,0)
 . . . S MAGV("EXAMADC")=$P(MAGV("EXAMACN"),"-",ACNL-1,ACNL)
"RTN","MAGVIM02",224,0)
 . . E  D
"RTN","MAGVIM02",225,0)
 . . . S MAGV("EXAMADC")=MAGV("EXAMACN")
"RTN","MAGVIM02",226,0)
 . . S MAGV("EXAMCASE")=$P(MAGV("EXAMACN"),"-",ACNL)
"RTN","MAGVIM02",227,0)
 . . ;
"RTN","MAGVIM02",228,0)
 . . ;--- Resolve examination IEN from DAY-CASE/ACN.
"RTN","MAGVIM02",229,0)
 . . N ROOT S ROOT=$NA(^RADPT("ADC",MAGV("EXAMADC"),PATDFN)),ROOT=$Q(@ROOT)
"RTN","MAGVIM02",230,0)
 . . Q:$QS(ROOT,1)'="ADC"
"RTN","MAGVIM02",231,0)
 . . S MAGV("EXAMIEN")=$QS(ROOT,4)
"RTN","MAGVIM02",232,0)
 . . S MAGV("EXAMIEN2")=$QS(ROOT,5)
"RTN","MAGVIM02",233,0)
 . . ;
"RTN","MAGVIM02",234,0)
 . . N EXSTP
"RTN","MAGVIM02",235,0)
 . . S EXSTP=$P($G(^RADPT(PATDFN,"DT",MAGV("EXAMIEN"),"P",MAGV("EXAMIEN2"),0)),U,3)
"RTN","MAGVIM02",236,0)
 . . S MAGV("EXAMSTAT")=$P($G(^RA(72,EXSTP,0)),U,1)
"RTN","MAGVIM02",237,0)
 . . Q
"RTN","MAGVIM02",238,0)
 . ;--- IA #10103 (Supported).
"RTN","MAGVIM02",239,0)
 . S MAGV("EXAMDATE")=$$FMTE^XLFDT($P(RETURN(LINECUR),U,10),1)
"RTN","MAGVIM02",240,0)
 . ;--- IA #2056 (Supported).
"RTN","MAGVIM02",241,0)
 . S MAGV("PROCNAME")=$$GET1^DIQ(71,MAGV("PROCIEN"),.01) ; procedure name
"RTN","MAGVIM02",242,0)
 . S MAGV("ORDRLOCN")=$$GET1^DIQ(75.1,MAGV("RAOIEN"),22) D
"RTN","MAGVIM02",243,0)
 . . ;
"RTN","MAGVIM02",244,0)
 . . I MAGV("ORDRLOCN")="" S MAGV("ORDRLOCIEN")="" Q
"RTN","MAGVIM02",245,0)
 . . S MAGV("ORDRLOCIEN")=$$GET1^DIQ(75.1,MAGV("RAOIEN"),22,"I")
"RTN","MAGVIM02",246,0)
 . . Q
"RTN","MAGVIM02",247,0)
 . S LINEOUT=LINEOUT+1
"RTN","MAGVIM02",248,0)
 . ;
"RTN","MAGVIM02",249,0)
 . S MAGV("ORDRPHYS")=$$GET1^DIQ(75.1,MAGV("RAOIEN"),14,"I") ; Requesting Phys.
"RTN","MAGVIM02",250,0)
 . ;
"RTN","MAGVIM02",251,0)
 . ;--- Re-order for output.
"RTN","MAGVIM02",252,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,1)=OTYPE
"RTN","MAGVIM02",253,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,2)=PATDFN
"RTN","MAGVIM02",254,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,3)=MAGV("ORDERDT")
"RTN","MAGVIM02",255,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,4)=MAGV("ORDREASN")
"RTN","MAGVIM02",256,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,5)=MAGV("ORDRLOCN")
"RTN","MAGVIM02",257,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,6)=MAGV("EXAMDATE")
"RTN","MAGVIM02",258,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,7)=MAGV("EXAMACN")
"RTN","MAGVIM02",259,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,8)=MAGV("EXAMSTAT")
"RTN","MAGVIM02",260,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,9)=MAGV("PROCIEN")
"RTN","MAGVIM02",261,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,10)=MAGV("PROCNAME")
"RTN","MAGVIM02",262,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,11)=MAGV("EXAMCASE")
"RTN","MAGVIM02",263,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,12)=MAGV("EXAMIEN")
"RTN","MAGVIM02",264,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,13)=MAGV("RAOIEN")
"RTN","MAGVIM02",265,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,14)=MAGV("EXAMIEN2")
"RTN","MAGVIM02",266,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,15)=MAGV("ORDRPHYS")
"RTN","MAGVIM02",267,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,16)=MAGV("ORDRLOCIEN")
"RTN","MAGVIM02",268,0)
 . S $P(RETURN(LINEOUT),SEPOUTP,17)=MAGV("PROCMOD")
"RTN","MAGVIM02",269,0)
 . Q
"RTN","MAGVIM02",270,0)
 . ;
"RTN","MAGVIM02",271,0)
 S RETURN(0)="0"_SEPSTAT_LINEOUT
"RTN","MAGVIM02",272,0)
 Q
"RTN","MAGVIM02",273,0)
 ;
"RTN","MAGVIM02",274,0)
 ;+++ Routine Utility: Initialize Separators
"RTN","MAGVIM02",275,0)
ZRUSEPIN ;
"RTN","MAGVIM02",276,0)
 S SEPOUTP=$$OUTSEP^MAGVIM01
"RTN","MAGVIM02",277,0)
 S SEPSTAT=$$STATSEP^MAGVIM01
"RTN","MAGVIM02",278,0)
 Q
"RTN","MAGVIM02",279,0)
 ;
"RTN","MAGVIM02",280,0)
 ; MAGVIM02
"RTN","MAGVIM03")
0^77^B41664423
"RTN","MAGVIM03",1,0)
MAGVIM03 ;WOIFO/MAT,MLH,BT - RPCs for DICOM Importer II ; 3-Feb-2012 10:50 AM
"RTN","MAGVIM03",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM03",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM03",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM03",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM03",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM03",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM03",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM03",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM03",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM03",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM03",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM03",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM03",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM03",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM03",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM03",17,0)
 ;;
"RTN","MAGVIM03",18,0)
 Q
"RTN","MAGVIM03",19,0)
 ;
"RTN","MAGVIM03",20,0)
 ;+++ Importer II Log Reports: Populate MAGV IMPORT STUDY LOG File (#2006.9421)
"RTN","MAGVIM03",21,0)
 ;
"RTN","MAGVIM03",22,0)
 ;  RPC: MAGV IMPORT STUDY LOG STORE
"RTN","MAGVIM03",23,0)
 ;
"RTN","MAGVIM03",24,0)
 ; Inputs:
"RTN","MAGVIM03",25,0)
 ; =======
"RTN","MAGVIM03",26,0)
 ;
"RTN","MAGVIM03",27,0)
 ;  MAGVRET .... Variable for returned message.
"RTN","MAGVIM03",28,0)
 ;  MAGVDUZ .... User DUZ.
"RTN","MAGVIM03",29,0)
 ;  MAGVDUZ2 ... User Login Division.
"RTN","MAGVIM03",30,0)
 ;  MAGVPDFN ... Associated Patient DFN.
"RTN","MAGVIM03",31,0)
 ;  MAGVSACN ... Associated Study Accession Number.
"RTN","MAGVIM03",32,0)
 ;  MAGVSUID ... Study Instance UID.
"RTN","MAGVIM03",33,0)
 ;  MAGVSLOC ... Study performed location.
"RTN","MAGVIM03",34,0)
 ;  MAGVSTYP ... Associated Study Type.
"RTN","MAGVIM03",35,0)
 ;  MAGVSCNT ... Imported Series Count.
"RTN","MAGVIM03",36,0)
 ;  MODLST ..... Array of NAME|VALUE PAIRS for MODALITY|COUNT.
"RTN","MAGVIM03",37,0)
 ;  MEDGIEN .... IEN in the MAGV IMPORT MEDIA LOG file (#2006.9422)
"RTN","MAGVIM03",38,0)
 ;  OBJFAIL .... Count of requested objects which failed to be imported.
"RTN","MAGVIM03",39,0)
 ; 
"RTN","MAGVIM03",40,0)
 ; Outputs:
"RTN","MAGVIM03",41,0)
 ; ========
"RTN","MAGVIM03",42,0)
 ; 
"RTN","MAGVIM03",43,0)
 ;     0`"IMPORT STUDY LOG UPDATED."
"RTN","MAGVIM03",44,0)
 ;    -1`"Unable to lock MAGV IMPORT STUDY LOG File (#2006.9421)."
"RTN","MAGVIM03",45,0)
 ;    -1`##_"Validator error message lines returned."
"RTN","MAGVIM03",46,0)
 ; 
"RTN","MAGVIM03",47,0)
 ; Notes
"RTN","MAGVIM03",48,0)
 ; =====
"RTN","MAGVIM03",49,0)
 ;
"RTN","MAGVIM03",50,0)
 ;
"RTN","MAGVIM03",51,0)
IMPLOGIN(MAGVRET,MAGVDUZ,MAGVDUZ2,MAGVPDFN,MAGVSACN,MAGVSUID,MAGVSLOC,MAGVSTYP,MAGVSCNT,MODLIST,MEDGIEN,OBJFAIL) ;
"RTN","MAGVIM03",52,0)
 ;
"RTN","MAGVIM03",53,0)
 ;--- Initialize. Set output separators per p34 convention.
"RTN","MAGVIM03",54,0)
 K FDA,FDAIEN,MAGVRET
"RTN","MAGVIM03",55,0)
 N SEPOUTP,SEPSTAT D ZRUSEPIN
"RTN","MAGVIM03",56,0)
 N MAGVERR,MAGVMSG S MAGVERR=0
"RTN","MAGVIM03",57,0)
 N FILE S FILE=2006.9421
"RTN","MAGVIM03",58,0)
 N SUBFILE S SUBFILE=2006.94211
"RTN","MAGVIM03",59,0)
 N SFIEN
"RTN","MAGVIM03",60,0)
 ;
"RTN","MAGVIM03",61,0)
 ;--- Set FDA entries for literal parameters.
"RTN","MAGVIM03",62,0)
 S FDA(0,FILE,"+1,",3)=MAGVPDFN ;PAT_DFN
"RTN","MAGVIM03",63,0)
 S:MAGVSACN'="" FDA(0,FILE,"+1,",4)=MAGVSACN ;Associated_Study_Accession_Number
"RTN","MAGVIM03",64,0)
 S:MAGVSUID'="" FDA(0,FILE,"+1,",5)=MAGVSUID ;Study_Instance_UID
"RTN","MAGVIM03",65,0)
 S:MAGVSLOC'="" FDA(0,FILE,"+1,",6)=MAGVSLOC ;Study_Performed_Location
"RTN","MAGVIM03",66,0)
 S FDA(0,FILE,"+1,",7)=MAGVSTYP ;Associated_Study_Type
"RTN","MAGVIM03",67,0)
 S FDA(0,FILE,"+1,",8)=MAGVSCNT ;Series_Count
"RTN","MAGVIM03",68,0)
 S FDA(0,FILE,"+1,",11)=OBJFAIL ;Object_Failed_Count
"RTN","MAGVIM03",69,0)
 S FDA(0,FILE,"+1,",12)=MEDGIEN ;IEN in the MAGV IMPORT MEDIA LOG file (#2006.9422)
"RTN","MAGVIM03",70,0)
 ;
"RTN","MAGVIM03",71,0)
 ;--- Lock MAGV IMPORT STUDY LOG file (#2006.9421)
"RTN","MAGVIM03",72,0)
 L +^MAGV(FILE):5 I $T D
"RTN","MAGVIM03",73,0)
 . ;
"RTN","MAGVIM03",74,0)
 . ;--- Set internal FDA entries for .01 field. IA #10103
"RTN","MAGVIM03",75,0)
 . S FDA(0,FILE,"+1,",.01)=$$NOW^XLFDT
"RTN","MAGVIM03",76,0)
 . S FDA(0,FILE,"+1,",1)=MAGVDUZ  ;USER_DUZ
"RTN","MAGVIM03",77,0)
 . S FDA(0,FILE,"+1,",2)=MAGVDUZ2 ;USER_DUZ(2)
"RTN","MAGVIM03",78,0)
 . ;
"RTN","MAGVIM03",79,0)
 . ;--- Post top-level transaction data. IA# 2053.
"RTN","MAGVIM03",80,0)
 . D UPDATE^DIE("","FDA(0)","SFIEN")
"RTN","MAGVIM03",81,0)
 . ;
"RTN","MAGVIM03",82,0)
 . ;--- Set FDA entries for array parameter MODLST.
"RTN","MAGVIM03",83,0)
 . N CT,CTMOD S CT="",CTMOD=0 F  S CT=$O(MODLIST(CT)) Q:CT=""  D
"RTN","MAGVIM03",84,0)
 . . N MODLTY S MODLTY=$P(MODLIST(CT),"|",1)
"RTN","MAGVIM03",85,0)
 . . N VALUE S VALUE=$P(MODLIST(CT),"|",2)
"RTN","MAGVIM03",86,0)
 . . S FDA(1,SUBFILE,"+"_CT_","_SFIEN(1)_",",.01)=MODLTY
"RTN","MAGVIM03",87,0)
 . . S FDA(1,SUBFILE,"+"_CT_","_SFIEN(1)_",",.02)=VALUE
"RTN","MAGVIM03",88,0)
 . . S CTMOD=CTMOD+VALUE
"RTN","MAGVIM03",89,0)
 . . Q
"RTN","MAGVIM03",90,0)
 . ;
"RTN","MAGVIM03",91,0)
 . D:(CTMOD*SFIEN(1))>0
"RTN","MAGVIM03",92,0)
 . . ;--- Set FDA entry for total modality object count.
"RTN","MAGVIM03",93,0)
 . . S FDA(1,FILE,SFIEN(1)_",",9)=$G(CTMOD)
"RTN","MAGVIM03",94,0)
 . . ;--- Post sub-file transaction data. IA# 2053.
"RTN","MAGVIM03",95,0)
 . . D UPDATE^DIE("","FDA(1)")
"RTN","MAGVIM03",96,0)
 . L -^MAGV(FILE)
"RTN","MAGVIM03",97,0)
 . Q
"RTN","MAGVIM03",98,0)
 ;
"RTN","MAGVIM03",99,0)
 E  D
"RTN","MAGVIM03",100,0)
 . ;
"RTN","MAGVIM03",101,0)
 . S MAGVERR=1,MAGVMSG="Could not lock MAGV IMPORT STUDY LOG File."
"RTN","MAGVIM03",102,0)
 . Q
"RTN","MAGVIM03",103,0)
 ;
"RTN","MAGVIM03",104,0)
 ;--- Return.
"RTN","MAGVIM03",105,0)
 I MAGVERR S MAGVRET(0)="-1"_SEPSTAT_MAGVMSG Q
"RTN","MAGVIM03",106,0)
 S MAGVRET(0)="0"_SEPSTAT_"IMPORT STUDY LOG UPDATED."
"RTN","MAGVIM03",107,0)
 Q
"RTN","MAGVIM03",108,0)
 ;+++ Importer II Log Reports from MAGV IMPORT STUDY LOG file (#2006.9421)
"RTN","MAGVIM03",109,0)
 ;
"RTN","MAGVIM03",110,0)
 ;  RPC: MAGV IMPORT STUDY LOG REPORT
"RTN","MAGVIM03",111,0)
 ;
"RTN","MAGVIM03",112,0)
 ; Inputs:
"RTN","MAGVIM03",113,0)
 ; =======
"RTN","MAGVIM03",114,0)
 ;
"RTN","MAGVIM03",115,0)
 ;  MAGVARY .... Variable for returned message.
"RTN","MAGVIM03",116,0)
 ;  REPORT ..... Report identifier as:
"RTN","MAGVIM03",117,0)
 ;  
"RTN","MAGVIM03",118,0)
 ;    0 ... Initialization Request
"RTN","MAGVIM03",119,0)
 ;    1 ... Report Data for Each Date in Range
"RTN","MAGVIM03",120,0)
 ;    2 ... Report Data for Each Study Location
"RTN","MAGVIM03",121,0)
 ;    3 ... Report Data for Modality Counts
"RTN","MAGVIM03",122,0)
 ;  
"RTN","MAGVIM03",123,0)
 ;  STARTDT .... Inclusive lower  bound of date range as YYYYMMDD.
"RTN","MAGVIM03",124,0)
 ;  STOPDT ..... Inclusive upper bound of date range.
"RTN","MAGVIM03",125,0)
 ; 
"RTN","MAGVIM03",126,0)
 ; Outputs:
"RTN","MAGVIM03",127,0)
 ; ========
"RTN","MAGVIM03",128,0)
 ; 
"RTN","MAGVIM03",129,0)
 ;     0`## [report lines returned]
"RTN","MAGVIM03",130,0)
 ;    -1`Error message.
"RTN","MAGVIM03",131,0)
 ; 
"RTN","MAGVIM03",132,0)
 ; Notes
"RTN","MAGVIM03",133,0)
 ; =====
"RTN","MAGVIM03",134,0)
 ;
"RTN","MAGVIM03",135,0)
 ;  Calls MAGVIM04 for processing.
"RTN","MAGVIM03",136,0)
 ;
"RTN","MAGVIM03",137,0)
IMPLOGEX(MAGVARY,REPORT,STARTDT,STOPDT) ;
"RTN","MAGVIM03",138,0)
 ;
"RTN","MAGVIM03",139,0)
 N SEPOUTP,SEPSTAT D ZRUSEPIN
"RTN","MAGVIM03",140,0)
 N MAGVERR S MAGVERR=0
"RTN","MAGVIM03",141,0)
 N FILE S FILE=2006.9421
"RTN","MAGVIM03",142,0)
 ;
"RTN","MAGVIM03",143,0)
 ;--- Convert incoming HL7 dates to FileMan. IA #
"RTN","MAGVIM03",144,0)
 S STARTDT=$$HL7TFM^XLFDT(STARTDT)
"RTN","MAGVIM03",145,0)
 S STOPDT=$$HL7TFM^XLFDT(STOPDT)
"RTN","MAGVIM03",146,0)
 ;
"RTN","MAGVIM03",147,0)
 S MAGVARY=$NA(^TMP("MAGVIM",$J))
"RTN","MAGVIM03",148,0)
 K @MAGVARY
"RTN","MAGVIM03",149,0)
 D  I MAGVERR S @MAGVARY@(0)="-1"_SEPSTAT_MAGVERR Q
"RTN","MAGVIM03",150,0)
 . ;
"RTN","MAGVIM03",151,0)
 . I '$D(REPORT) S MAGVERR="REPORT TYPE NOT SPECIFIED." Q
"RTN","MAGVIM03",152,0)
 . ;
"RTN","MAGVIM03",153,0)
 . ;--- Set report types validator string.
"RTN","MAGVIM03",154,0)
 . I "0,1,2,3,"'[REPORT_"," S MAGVERR="REPORT TYPE"_""_REPORT_""_"UNDEFINED." Q
"RTN","MAGVIM03",155,0)
 ;
"RTN","MAGVIM03",156,0)
 ;--- Report window initialization request.
"RTN","MAGVIM03",157,0)
 I REPORT=0 D  Q
"RTN","MAGVIM03",158,0)
 . ;
"RTN","MAGVIM03",159,0)
 . ;--- Detect file contains no data & return -1
"RTN","MAGVIM03",160,0)
 . I '$D(^MAGV(FILE,"B")) S @MAGVARY@(0)="-1" Q
"RTN","MAGVIM03",161,0)
 . ;
"RTN","MAGVIM03",162,0)
 . ;--- Return "0'STARTDT" for earliest date in file.
"RTN","MAGVIM03",163,0)
 . N FIRSTDT S FIRSTDT=+$P($O(^MAGV(FILE,"B","")),".")
"RTN","MAGVIM03",164,0)
 . S @MAGVARY@(0)="0"_"`"_$$FMTHL7^XLFDT(FIRSTDT)
"RTN","MAGVIM03",165,0)
 ;
"RTN","MAGVIM03",166,0)
 ;--- Call the processor.
"RTN","MAGVIM03",167,0)
 D MAGVQRY^MAGVIM04(MAGVARY,FILE,REPORT,STARTDT,STOPDT)
"RTN","MAGVIM03",168,0)
 ;
"RTN","MAGVIM03",169,0)
 ;--- Return.
"RTN","MAGVIM03",170,0)
 N LNTOT S LNTOT=$O(@MAGVARY@("Z"),-1)
"RTN","MAGVIM03",171,0)
 S @MAGVARY@(0)=0_SEPSTAT_LNTOT
"RTN","MAGVIM03",172,0)
 Q
"RTN","MAGVIM03",173,0)
 ;
"RTN","MAGVIM03",174,0)
 ; +++++ Importer II Log Reports: Populate MAGV IMPORT MEDIA LOG (#2006.9422)
"RTN","MAGVIM03",175,0)
 ;
"RTN","MAGVIM03",176,0)
 ;  RPC: MAGV IMPORT MEDIA LOG STORE
"RTN","MAGVIM03",177,0)
 ;
"RTN","MAGVIM03",178,0)
 ; Inputs:
"RTN","MAGVIM03",179,0)
 ; =======
"RTN","MAGVIM03",180,0)
 ;
"RTN","MAGVIM03",181,0)
 ;  MAGVRET .... Variable for returned message.
"RTN","MAGVIM03",182,0)
 ;  MAGVDUZ .... User DUZ.
"RTN","MAGVIM03",183,0)
 ;  MAGVWKST ... Workstation running the Importer II application.
"RTN","MAGVIM03",184,0)
 ;  MEDTYPE .... Import event media type (DIRect, STaGed,NETwork, DiCoM correct).
"RTN","MAGVIM03",185,0)
 ;  MEDVALID ... Media Validation Status (0=valid; 1=invalid).
"RTN","MAGVIM03",186,0)
 ;  MEDVMSG .... Media Validation Message extending MEDVALID.
"RTN","MAGVIM03",187,0)
 ; 
"RTN","MAGVIM03",188,0)
 ; Outputs:
"RTN","MAGVIM03",189,0)
 ; ========
"RTN","MAGVIM03",190,0)
 ; 
"RTN","MAGVIM03",191,0)
 ;     0`"IMPORT MEDIA LOG UPDATED."
"RTN","MAGVIM03",192,0)
 ;    -1`"Unable to lock MAGV IMPORT MEDIA LOG File."
"RTN","MAGVIM03",193,0)
 ;    -1`##_"Validator error message lines returned."
"RTN","MAGVIM03",194,0)
 ;
"RTN","MAGVIM03",195,0)
IMPMEDIA(MAGVRET,MAGVDUZ,MAGVWKST,MEDTYPE,MEDVALID,MEDVMSG) ;
"RTN","MAGVIM03",196,0)
 ;
"RTN","MAGVIM03",197,0)
 K MAGVRET
"RTN","MAGVIM03",198,0)
 N SEPOUTP,SEPSTAT D ZRUSEPIN
"RTN","MAGVIM03",199,0)
 N MAGVERR,MAGVMSG S MAGVERR=0
"RTN","MAGVIM03",200,0)
 ;
"RTN","MAGVIM03",201,0)
 N FILE S FILE=2006.9422
"RTN","MAGVIM03",202,0)
 D
"RTN","MAGVIM03",203,0)
 . K FDA
"RTN","MAGVIM03",204,0)
 . ;--- Set FDA entries for literal parameters.
"RTN","MAGVIM03",205,0)
 . S FDA(1,FILE,"+1,",.01)=$$NOW^XLFDT ;Media Import Timestamp
"RTN","MAGVIM03",206,0)
 . S FDA(1,FILE,"+1,",2)=MAGVDUZ    ;Import II User DUZ
"RTN","MAGVIM03",207,0)
 . S FDA(1,FILE,"+1,",3)=MAGVWKST   ;Import II Workstation ID
"RTN","MAGVIM03",208,0)
 . S FDA(1,FILE,"+1,",4)=MEDTYPE    ;Media Type
"RTN","MAGVIM03",209,0)
 . S FDA(1,FILE,"+1,",100)=MEDVALID ;Media Validation Status
"RTN","MAGVIM03",210,0)
 . S FDA(1,FILE,"+1,",101)=$G(MEDVMSG)  ;Media Validation Status Message
"RTN","MAGVIM03",211,0)
 . Q
"RTN","MAGVIM03",212,0)
 ;
"RTN","MAGVIM03",213,0)
 ;--- Lock MAGV IMPORT MEDIA LOG file (#2006.9422)
"RTN","MAGVIM03",214,0)
 L +^MAGV(FILE):5 I $T D
"RTN","MAGVIM03",215,0)
 . ;
"RTN","MAGVIM03",216,0)
 . K MAGVIEN
"RTN","MAGVIM03",217,0)
 . ;--- Post the transaction. IA# 2053.
"RTN","MAGVIM03",218,0)
 . D UPDATE^DIE("","FDA(1)","MAGVIEN")
"RTN","MAGVIM03",219,0)
 . L -^MAGV(FILE)
"RTN","MAGVIM03",220,0)
 . Q
"RTN","MAGVIM03",221,0)
 ;
"RTN","MAGVIM03",222,0)
 E  D
"RTN","MAGVIM03",223,0)
 . ;
"RTN","MAGVIM03",224,0)
 . S MAGVERR=1,MAGVMSG="Could not lock MAGV IMPORT MEDIA LOG File."
"RTN","MAGVIM03",225,0)
 . Q
"RTN","MAGVIM03",226,0)
 ;
"RTN","MAGVIM03",227,0)
 ;--- Return.
"RTN","MAGVIM03",228,0)
 I MAGVERR S MAGVRET(0)="-1"_SEPSTAT_MAGVMSG Q
"RTN","MAGVIM03",229,0)
 S MAGVRET(0)="0"_SEPSTAT_MAGVIEN(1)
"RTN","MAGVIM03",230,0)
 Q
"RTN","MAGVIM03",231,0)
 ;
"RTN","MAGVIM03",232,0)
 ;+++ Routine Utility: Initialize Separators
"RTN","MAGVIM03",233,0)
ZRUSEPIN ;
"RTN","MAGVIM03",234,0)
 S SEPOUTP=$$OUTSEP^MAGVIM01
"RTN","MAGVIM03",235,0)
 S SEPSTAT=$$STATSEP^MAGVIM01
"RTN","MAGVIM03",236,0)
 Q
"RTN","MAGVIM03",237,0)
 ;
"RTN","MAGVIM03",238,0)
 ; MAGVIM03
"RTN","MAGVIM04")
0^78^B52513000
"RTN","MAGVIM04",1,0)
MAGVIM04 ;WOIFO/MAT - Utilities for RPC calls for DICOM file processing ; 3 Feb 2012 4:35 AM
"RTN","MAGVIM04",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM04",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM04",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM04",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM04",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM04",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM04",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM04",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM04",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM04",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM04",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM04",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM04",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM04",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM04",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM04",17,0)
 ;;
"RTN","MAGVIM04",18,0)
 Q
"RTN","MAGVIM04",19,0)
 ;+++ Importer II Log Reports: Data Delivery
"RTN","MAGVIM04",20,0)
 ;
"RTN","MAGVIM04",21,0)
 ; Internal processing routine for RPC: MAGV IMPORT STUDY LOG REPORT
"RTN","MAGVIM04",22,0)
 ;
"RTN","MAGVIM04",23,0)
 ; Output report data from MAGV IMPORTER LOG File (#2006.9421).
"RTN","MAGVIM04",24,0)
 ;
"RTN","MAGVIM04",25,0)
 ; Inputs:
"RTN","MAGVIM04",26,0)
 ; =======
"RTN","MAGVIM04",27,0)
 ;
"RTN","MAGVIM04",28,0)
 ;  MAGVARY .... Variable for returned data.
"RTN","MAGVIM04",29,0)
 ;  FILE ....... Data source file number.
"RTN","MAGVIM04",30,0)
 ;  REPORT ..... Report selector = {1, 2, 3}
"RTN","MAGVIM04",31,0)
 ;  STARTDT .... Inclusive lower bound of query date range.
"RTN","MAGVIM04",32,0)
 ;  STOPDT ..... Inclusive upper "".
"RTN","MAGVIM04",33,0)
 ;  
"RTN","MAGVIM04",34,0)
 ; Outputs:
"RTN","MAGVIM04",35,0)
 ; ========
"RTN","MAGVIM04",36,0)
 ; 
"RTN","MAGVIM04",37,0)
 ;  Expected: ^(0) 0`Count of lines returned.
"RTN","MAGVIM04",38,0)
 ;             (n) Global array of report data.
"RTN","MAGVIM04",39,0)
 ;             
"RTN","MAGVIM04",40,0)
 ;  On Error: ^(0) <0`Error message.
"RTN","MAGVIM04",41,0)
 ; 
"RTN","MAGVIM04",42,0)
 ; Notes
"RTN","MAGVIM04",43,0)
 ; =====
"RTN","MAGVIM04",44,0)
 ;
"RTN","MAGVIM04",45,0)
 ;  Called by IMPLOGEX^MAGVIM03.
"RTN","MAGVIM04",46,0)
 ;
"RTN","MAGVIM04",47,0)
MAGVQRY(MAGVARY,FILE,REPORT,STARTDT,STOPDT) ;
"RTN","MAGVIM04",48,0)
 ;
"RTN","MAGVIM04",49,0)
 ;--- Initialize counter arrays.
"RTN","MAGVIM04",50,0)
 K MAGVCT,MAGVDT,MAGVLC,MAGVMC,MAGVTP
"RTN","MAGVIM04",51,0)
 S MAGVCT("TOTALDT")=0 ;Hits within date range.
"RTN","MAGVIM04",52,0)
 S MAGVCT("RSELTOT")=0 ;Total ... total what?
"RTN","MAGVIM04",53,0)
 ;--- Initialize overhead counters for SERIES, OBJECTs imported, OBjects FAILED
"RTN","MAGVIM04",54,0)
 N SS F SS="SERIES","OBJECT","OBFAIL" S MAGVCT(SS)=0
"RTN","MAGVIM04",55,0)
 N MAGVNOD S MAGVNOD=$NA(^MAGV(FILE,"B",STARTDT))
"RTN","MAGVIM04",56,0)
 N STOPDT0
"RTN","MAGVIM04",57,0)
 D
"RTN","MAGVIM04",58,0)
 . ;--- Compensate STOPDT for $QS logic. IA #10000
"RTN","MAGVIM04",59,0)
 . N X,X1,X2 S X1=STOPDT,X2=1 D C^%DTC S STOPDT0=X
"RTN","MAGVIM04",60,0)
 F  S MAGVNOD=$Q(@MAGVNOD) Q:+$QS(MAGVNOD,3)]STOPDT0  Q:$QS(MAGVNOD,2)'="B"  D
"RTN","MAGVIM04",61,0)
 . ;
"RTN","MAGVIM04",62,0)
 . S MAGVCT("TOTALDT")=MAGVCT("TOTALDT")+1
"RTN","MAGVIM04",63,0)
 . ;--- Count of imported studies per date.
"RTN","MAGVIM04",64,0)
 . N RECDT S RECDT=$QS(MAGVNOD,3)\1
"RTN","MAGVIM04",65,0)
 . S:'$D(MAGVDT(RECDT)) MAGVDT(RECDT)=0
"RTN","MAGVIM04",66,0)
 . S MAGVDT(RECDT)=MAGVDT(RECDT)+1
"RTN","MAGVIM04",67,0)
 . N MAGVIEN S MAGVIEN=$QS(MAGVNOD,4)
"RTN","MAGVIM04",68,0)
 . ;--- Set working node.
"RTN","MAGVIM04",69,0)
 . N MAGVNOD0 S MAGVNOD0=$G(^MAGV(FILE,MAGVIEN,0))
"RTN","MAGVIM04",70,0)
 . ;
"RTN","MAGVIM04",71,0)
 . ;--- Get counts for this MAGVIEN.
"RTN","MAGVIM04",72,0)
 . ;--- Counts per "Study Performed Location"
"RTN","MAGVIM04",73,0)
 . N MAGVSLOC S MAGVSLOC=$P(MAGVNOD0,U,7)
"RTN","MAGVIM04",74,0)
 . S:MAGVSLOC="" MAGVSLOC="UNSPECIFIED"
"RTN","MAGVIM04",75,0)
 . S:MAGVSLOC?1N.N MAGVSLOC="UNSPECIFIED"
"RTN","MAGVIM04",76,0)
 . S:'$D(MAGVLC(MAGVSLOC)) MAGVLC(MAGVSLOC)=0,MAGVLC(0)=0
"RTN","MAGVIM04",77,0)
 . S MAGVLC(MAGVSLOC)=MAGVLC(MAGVSLOC)+1,MAGVLC(0)=MAGVLC(0)+1
"RTN","MAGVIM04",78,0)
 . ;--- Count of imported studies per study type.
"RTN","MAGVIM04",79,0)
 . N MAGVSTYP S MAGVSTYP=$P(MAGVNOD0,U,8) S:MAGVSTYP="" MAGVSTYP="UNSPECIFIED"
"RTN","MAGVIM04",80,0)
 . S:'$D(MAGVTP(MAGVSTYP)) MAGVTP(MAGVSTYP)=0
"RTN","MAGVIM04",81,0)
 . S MAGVTP(MAGVSTYP)=MAGVTP(MAGVSTYP)+1
"RTN","MAGVIM04",82,0)
 . ;
"RTN","MAGVIM04",83,0)
 . N CTSERIES S CTSERIES=$P(MAGVNOD0,U,9)
"RTN","MAGVIM04",84,0)
 . N CTOBJECT S CTOBJECT=$P(MAGVNOD0,U,10)
"RTN","MAGVIM04",85,0)
 . N CTOBFAIL S CTOBFAIL=$P(MAGVNOD0,U,12)
"RTN","MAGVIM04",86,0)
 . ;
"RTN","MAGVIM04",87,0)
 . F SS="SERIES","OBJECT","OBFAIL" D
"RTN","MAGVIM04",88,0)
 . . ;--- Add each to its overhead counter.
"RTN","MAGVIM04",89,0)
 . . S MAGVCT(SS)=MAGVCT(SS)+@("CT"_SS)
"RTN","MAGVIM04",90,0)
 . . ;
"RTN","MAGVIM04",91,0)
 . . ;--- Add each to its per-date counter.
"RTN","MAGVIM04",92,0)
 . . S:'$D(MAGVDT(RECDT,SS)) MAGVDT(RECDT,SS)=0
"RTN","MAGVIM04",93,0)
 . . S MAGVDT(RECDT,SS)=MAGVDT(RECDT,SS)+@("CT"_SS)
"RTN","MAGVIM04",94,0)
 . . ;
"RTN","MAGVIM04",95,0)
 . . ;--- Add each to its per-location counter.
"RTN","MAGVIM04",96,0)
 . . S:'$D(MAGVLC(MAGVSLOC,SS)) MAGVLC(MAGVSLOC,SS)=0
"RTN","MAGVIM04",97,0)
 . . S MAGVLC(MAGVSLOC,SS)=MAGVLC(MAGVSLOC,SS)+@("CT"_SS)
"RTN","MAGVIM04",98,0)
 . . ;
"RTN","MAGVIM04",99,0)
 . . ;--- Add each to its per-studyType counter.
"RTN","MAGVIM04",100,0)
 . . S:'$D(MAGVTP(MAGVSTYP,SS)) MAGVTP(MAGVSTYP,SS)=0
"RTN","MAGVIM04",101,0)
 . . S MAGVTP(MAGVSTYP,SS)=MAGVTP(MAGVSTYP,SS)+@("CT"_SS)
"RTN","MAGVIM04",102,0)
 . . Q
"RTN","MAGVIM04",103,0)
 . ;--- Count of modalities (only for REPORT=3 right now).
"RTN","MAGVIM04",104,0)
 . I REPORT=3 D  K MAGVA
"RTN","MAGVIM04",105,0)
 . . ;
"RTN","MAGVIM04",106,0)
 . . N CTNDX,SFNDX,SUBFILE
"RTN","MAGVIM04",107,0)
 . . S SUBFILE=2006.94211
"RTN","MAGVIM04",108,0)
 . . ;
"RTN","MAGVIM04",109,0)
 . . ;--- Get number of modality counter subfile entries.
"RTN","MAGVIM04",110,0)
 . . S CTNDX=$P($G(^MAGV(FILE,MAGVIEN,100,0)),U,3)
"RTN","MAGVIM04",111,0)
 . . Q:CTNDX<1
"RTN","MAGVIM04",112,0)
 . . ;
"RTN","MAGVIM04",113,0)
 . . ;--- Grand Total counter ... no filter.
"RTN","MAGVIM04",114,0)
 . . F SFNDX=1:1:CTNDX D
"RTN","MAGVIM04",115,0)
 . . . ;
"RTN","MAGVIM04",116,0)
 . . . N MAGVLB S MAGVLB=$$GET1^DIQ(SUBFILE,SFNDX_","_MAGVIEN_",",.01)
"RTN","MAGVIM04",117,0)
 . . . N MAGVMCT S MAGVMCT=+$$GET1^DIQ(SUBFILE,SFNDX_","_MAGVIEN_",",.02)
"RTN","MAGVIM04",118,0)
 . . . S:'$D(MAGVMC(MAGVLB)) MAGVMC(MAGVLB)=0
"RTN","MAGVIM04",119,0)
 . . . S MAGVMC(MAGVLB)=MAGVMC(MAGVLB)+MAGVMCT
"RTN","MAGVIM04",120,0)
 . . . Q
"RTN","MAGVIM04",121,0)
 . . Q
"RTN","MAGVIM04",122,0)
 . Q
"RTN","MAGVIM04",123,0)
 D MAGVOUTP
"RTN","MAGVIM04",124,0)
 Q
"RTN","MAGVIM04",125,0)
 ;
"RTN","MAGVIM04",126,0)
 ;+++ Internal entry point: Assemble report output.
"RTN","MAGVIM04",127,0)
 ;
"RTN","MAGVIM04",128,0)
MAGVOUTP ;
"RTN","MAGVIM04",129,0)
 ;
"RTN","MAGVIM04",130,0)
 N CT S CT=0
"RTN","MAGVIM04",131,0)
 ;
"RTN","MAGVIM04",132,0)
 N TIME S TIME=$$NOW^XLFDT,TIME=$$FMTE^XLFDT(TIME)
"RTN","MAGVIM04",133,0)
 N LNA S LNA="" S $P(LNA,"*",81)=""
"RTN","MAGVIM04",134,0)
 N LNH S LNH="" S $P(LNH,"-",81)=""
"RTN","MAGVIM04",135,0)
 N LNS S LNS="" S $P(LNS," ",81)=""
"RTN","MAGVIM04",136,0)
 N LNU S LNU="" S $P(LNU,"_",81)=""
"RTN","MAGVIM04",137,0)
 ;--- Output general header.
"RTN","MAGVIM04",138,0)
 S CT=CT+1,@MAGVARY@(CT)="Imaging Importer II Report: "_TIME
"RTN","MAGVIM04",139,0)
 ;
"RTN","MAGVIM04",140,0)
 D ZRUCR(2)
"RTN","MAGVIM04",141,0)
 D
"RTN","MAGVIM04",142,0)
 . S CT=CT+1
"RTN","MAGVIM04",143,0)
 . I STARTDT=STOPDT D  Q
"RTN","MAGVIM04",144,0)
 . . S @MAGVARY@(CT)="  Imported on "_$$FMTE^XLFDT(STARTDT,5)_":"
"RTN","MAGVIM04",145,0)
 . S @MAGVARY@(CT)="  Imported between "_$$FMTE^XLFDT(STARTDT,5)_" and "_$$FMTE^XLFDT(STOPDT,5)_":"
"RTN","MAGVIM04",146,0)
 D ZRUCR(2)
"RTN","MAGVIM04",147,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,23)_$J(MAGVCT("TOTALDT"),10)_"  Studies"
"RTN","MAGVIM04",148,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,23)_$J(MAGVCT("SERIES"),10)_"  Series"
"RTN","MAGVIM04",149,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,23)_$J(MAGVCT("OBJECT"),10)_"  Objects"
"RTN","MAGVIM04",150,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,23)_$J(MAGVCT("OBFAIL"),10)_"  Objects Failed"
"RTN","MAGVIM04",151,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNU,1,56)
"RTN","MAGVIM04",152,0)
 D ZRUCR(1)
"RTN","MAGVIM04",153,0)
 ;--- Branch to specific report.
"RTN","MAGVIM04",154,0)
 D
"RTN","MAGVIM04",155,0)
 . I REPORT=1 D REPDAT Q
"RTN","MAGVIM04",156,0)
 . I REPORT=2 D REPLCN Q
"RTN","MAGVIM04",157,0)
 . I REPORT=3 D REPMOD Q
"RTN","MAGVIM04",158,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNA,1,6)_" END OF REPORT "_$E(LNA,1,6)
"RTN","MAGVIM04",159,0)
 Q
"RTN","MAGVIM04",160,0)
 ;
"RTN","MAGVIM04",161,0)
REPDAT ;
"RTN","MAGVIM04",162,0)
 ;--- Output date specific column headers.
"RTN","MAGVIM04",163,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,45)_"Failed"
"RTN","MAGVIM04",164,0)
 S CT=CT+1,@MAGVARY@(CT)="DATE______"_"     Studies"_"   Series"_"   Objects"_"   Objects"
"RTN","MAGVIM04",165,0)
 D ZRUCR(1)
"RTN","MAGVIM04",166,0)
 ;
"RTN","MAGVIM04",167,0)
 ;--- Tabular output by date.
"RTN","MAGVIM04",168,0)
 N DATE S DATE=""
"RTN","MAGVIM04",169,0)
 F  S DATE=$O(MAGVDT(DATE)) Q:DATE=""  D
"RTN","MAGVIM04",170,0)
 . ;
"RTN","MAGVIM04",171,0)
 . S CT=CT+1
"RTN","MAGVIM04",172,0)
 . N OUTDATE S OUTDATE=$$FMTE^XLFDT(DATE,5)
"RTN","MAGVIM04",173,0)
 . S @MAGVARY@(CT)=$J(OUTDATE,10)_"    "_$J(MAGVDT(DATE),8)_" "_$J(MAGVDT(DATE,"SERIES"),8)
"RTN","MAGVIM04",174,0)
 . S @MAGVARY@(CT)=@MAGVARY@(CT)_"  "_$J(MAGVDT(DATE,"OBJECT"),8)_"  "_$J(MAGVDT(DATE,"OBFAIL"),8)
"RTN","MAGVIM04",175,0)
 . Q
"RTN","MAGVIM04",176,0)
 D ZRUCR(1)
"RTN","MAGVIM04",177,0)
 Q
"RTN","MAGVIM04",178,0)
 ;
"RTN","MAGVIM04",179,0)
REPLCN ;
"RTN","MAGVIM04",180,0)
 ;--- Output location specific column headers.
"RTN","MAGVIM04",181,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,50)_"Failed"
"RTN","MAGVIM04",182,0)
 S CT=CT+1,@MAGVARY@(CT)="LOCATION_______"_"     Studies"_"   Series"_"   Objects"_"   Objects"
"RTN","MAGVIM04",183,0)
 D ZRUCR(2)
"RTN","MAGVIM04",184,0)
 ;
"RTN","MAGVIM04",185,0)
 ;--- Tabular output by location.
"RTN","MAGVIM04",186,0)
 N LOCN S LOCN=$O(MAGVLC(""))
"RTN","MAGVIM04",187,0)
 F  S LOCN=$O(MAGVLC(LOCN)) Q:LOCN=""  D
"RTN","MAGVIM04",188,0)
 . ;
"RTN","MAGVIM04",189,0)
 . ;--- Pad a location under 15 characters.
"RTN","MAGVIM04",190,0)
 . N LLOCN S LLOCN=$L($E(LOCN,1,15))
"RTN","MAGVIM04",191,0)
 . N SPAD S SPAD=3+(15-LLOCN)
"RTN","MAGVIM04",192,0)
 . ;
"RTN","MAGVIM04",193,0)
 . S CT=CT+1
"RTN","MAGVIM04",194,0)
 . S @MAGVARY@(CT)=$E(LOCN,1,15)_":"_$E(LNS,1,SPAD)_$J(MAGVLC(LOCN),8)_" "_$J(MAGVLC(LOCN,"SERIES"),8)
"RTN","MAGVIM04",195,0)
 . S @MAGVARY@(CT)=@MAGVARY@(CT)_"  "_$J(MAGVLC(LOCN,"OBJECT"),8)_"  "_$J(MAGVLC(LOCN,"OBFAIL"),8)
"RTN","MAGVIM04",196,0)
 . ;
"RTN","MAGVIM04",197,0)
 . D ZRUCR(1)
"RTN","MAGVIM04",198,0)
 . S CT=CT+1,@MAGVARY@(CT)=$E(LNH,1,56)
"RTN","MAGVIM04",199,0)
 . D ZRUCR(2)
"RTN","MAGVIM04",200,0)
 D ZRUCR(1)
"RTN","MAGVIM04",201,0)
 Q
"RTN","MAGVIM04",202,0)
 ;
"RTN","MAGVIM04",203,0)
REPMOD ;
"RTN","MAGVIM04",204,0)
 S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,27)_"COUNT ... MODALITY"
"RTN","MAGVIM04",205,0)
 D ZRUCR(1)
"RTN","MAGVIM04",206,0)
 S SS="" F  S SS=$O(MAGVMC(SS)) Q:SS=""  D
"RTN","MAGVIM04",207,0)
 . S CT=CT+1,@MAGVARY@(CT)=$E(LNS,1,22)_$J(MAGVMC(SS),10)_" ... "_SS
"RTN","MAGVIM04",208,0)
 D ZRUCR(1)
"RTN","MAGVIM04",209,0)
 Q
"RTN","MAGVIM04",210,0)
 ;+++ Routine utility: Output 'Carriage Return'
"RTN","MAGVIM04",211,0)
ZRUCR(REP) ;
"RTN","MAGVIM04",212,0)
 N X F X=1:1:REP S CT=CT+1,@MAGVARY@(CT)=""
"RTN","MAGVIM04",213,0)
 Q
"RTN","MAGVIM04",214,0)
 ;
"RTN","MAGVIM04",215,0)
 ; MAGVIM04
"RTN","MAGVIM05")
0^79^B120062662
"RTN","MAGVIM05",1,0)
MAGVIM05 ;WOIFO/MAT/BT - Utilities for RPC calls for DICOM file processing ; 31 Oct 2012 11:59 AM
"RTN","MAGVIM05",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM05",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM05",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM05",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM05",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM05",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM05",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM05",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM05",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM05",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM05",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM05",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM05",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM05",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM05",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM05",17,0)
 ;;
"RTN","MAGVIM05",18,0)
 ;
"RTN","MAGVIM05",19,0)
 Q
"RTN","MAGVIM05",20,0)
 ;
"RTN","MAGVIM05",21,0)
 ;+++++ Wrap call to code underlying RPC: RAMAG EXAM COMPLETE & re-format output
"RTN","MAGVIM05",22,0)
 ;
"RTN","MAGVIM05",23,0)
 ; RPC: MAGV RAD STAT COMPLETE   Private IA #5072
"RTN","MAGVIM05",24,0)
 ;
"RTN","MAGVIM05",25,0)
 ; Inputs:
"RTN","MAGVIM05",26,0)
 ; =======
"RTN","MAGVIM05",27,0)
 ;
"RTN","MAGVIM05",28,0)
 ;  RETURN ...... variable to hold the results
"RTN","MAGVIM05",29,0)
 ;  RADPT ....... IEN of the RAD/NUC MED PATIENT file (#70)
"RTN","MAGVIM05",30,0)
 ;  RAEXAM1 ..... EXAM DATE (#.01) of the REGISTERED EXAMS sub-file (#70.02)
"RTN","MAGVIM05",31,0)
 ;  RAEXAM2 ..... IEN of the EXAMINATIONS sub-file (#70.03)
"RTN","MAGVIM05",32,0)
 ;  MAGVUSR ..... DUZ of the Importer 2 application user.
"RTN","MAGVIM05",33,0)
 ;  MAGVUSRDV ... DUZ(2) of the Importer 2 user.
"RTN","MAGVIM05",34,0)
 ;  RAIMGTYP .... TYPE OF IMAGING (#2) of the REGISTERED EXAMS sub-file (#70.02)
"RTN","MAGVIM05",35,0)
 ;  
"RTN","MAGVIM05",36,0)
 ; Outputs:
"RTN","MAGVIM05",37,0)
 ; ========
"RTN","MAGVIM05",38,0)
 ; 
"RTN","MAGVIM05",39,0)
 ; Notes:
"RTN","MAGVIM05",40,0)
 ; ======
"RTN","MAGVIM05",41,0)
 ; 
"RTN","MAGVIM05",42,0)
 ; The parameters mirror those of the underlying call.
"RTN","MAGVIM05",43,0)
 ;
"RTN","MAGVIM05",44,0)
XMCOMPLT(RETURN,RADPT,RAEXAM1,RAEXAM2,MAGVUSR,MAGVUSRDV,RAIMGTYP) ;
"RTN","MAGVIM05",45,0)
 ;
"RTN","MAGVIM05",46,0)
 ;--- Initialize
"RTN","MAGVIM05",47,0)
 K RETURN
"RTN","MAGVIM05",48,0)
 N MSG,RARESULT,SEPSTAT,SEPOUTP D ZRUSEPIN
"RTN","MAGVIM05",49,0)
 ;
"RTN","MAGVIM05",50,0)
 ;--- Validate incoming parameters.
"RTN","MAGVIM05",51,0)
 N MAGERR,PARAM S MAGERR=0
"RTN","MAGVIM05",52,0)
 D
"RTN","MAGVIM05",53,0)
 . F PARAM="RADPT","RAEXAM1","RAEXAM2","MAGVUSR","MAGVUSRDV","RAIMGTYP" D  Q:MAGERR
"RTN","MAGVIM05",54,0)
 . . S:@PARAM="" MAGERR=1
"RTN","MAGVIM05",55,0)
 . . Q
"RTN","MAGVIM05",56,0)
 . Q
"RTN","MAGVIM05",57,0)
 ;
"RTN","MAGVIM05",58,0)
 I MAGERR D  Q
"RTN","MAGVIM05",59,0)
 . S RETURN(0)="-1"_SEPSTAT_"Required parameter "_PARAM_" missing or invalid."
"RTN","MAGVIM05",60,0)
 . Q
"RTN","MAGVIM05",61,0)
 ;
"RTN","MAGVIM05",62,0)
 ;--- Format incoming RAD Exam Identifiers.
"RTN","MAGVIM05",63,0)
 S RAEXAM=RADPT_U_RAEXAM1_U_RAEXAM2
"RTN","MAGVIM05",64,0)
 ;
"RTN","MAGVIM05",65,0)
 ;--- Set IMAGING SITE PARAMETERS file (#2006.1) IEN from DUZ(2).
"RTN","MAGVIM05",66,0)
 N MAGSITEP
"RTN","MAGVIM05",67,0)
 D
"RTN","MAGVIM05",68,0)
 . S MAGSITEP=$O(^MAG(2006.1,"B",MAGVUSRDV,""))
"RTN","MAGVIM05",69,0)
 . I MAGSITEP="" S MAGERR=1,MSG="Unable to resolve Imaging Site Parameters entry."
"RTN","MAGVIM05",70,0)
 . Q
"RTN","MAGVIM05",71,0)
 ;
"RTN","MAGVIM05",72,0)
 I MAGERR D  Q
"RTN","MAGVIM05",73,0)
 . S RETURN(0)="-1"_SEPSTAT_MSG
"RTN","MAGVIM05",74,0)
 . Q
"RTN","MAGVIM05",75,0)
 ; 
"RTN","MAGVIM05",76,0)
 ;--- Set additional RAD Order/Exam parameters.
"RTN","MAGVIM05",77,0)
 S MAGERR=$$MAKELIST("C",RAIMGTYP,.RAMSC,MAGVUSR,MAGSITEP)
"RTN","MAGVIM05",78,0)
 I MAGERR D  Q
"RTN","MAGVIM05",79,0)
 . S RETURN(0)="-1"_SEPSTAT_$P(MAGERR,U,2)
"RTN","MAGVIM05",80,0)
 . Q
"RTN","MAGVIM05",81,0)
 ;
"RTN","MAGVIM05",82,0)
 ;--- Set flag to suppress HL7 message to dictation systems.
"RTN","MAGVIM05",83,0)
 D OUTPUT("FLAGS^^FS",.RAMSC)
"RTN","MAGVIM05",84,0)
 ;--- Call code underlying RPC: RAMAG EXAM COMPLETE (Private IA #5072)
"RTN","MAGVIM05",85,0)
 D COMPLETE^RAMAGRP1(.RARESULT,RAEXAM,.RAMSC)
"RTN","MAGVIM05",86,0)
 I $G(RARESULT(1))="-11^2" D  ; add the OUTSIDE STUDY and try the RPC again 
"RTN","MAGVIM05",87,0)
 . N INFO
"RTN","MAGVIM05",88,0)
 . D ADDROOM(.INFO,RAEXAM)
"RTN","MAGVIM05",89,0)
 . K RARESULT
"RTN","MAGVIM05",90,0)
 . I INFO(1)<0 M RARESULT=INFO Q
"RTN","MAGVIM05",91,0)
 . D COMPLETE^RAMAGRP1(.RARESULT,RAEXAM,.RAMSC)
"RTN","MAGVIM05",92,0)
 . Q
"RTN","MAGVIM05",93,0)
 ;
"RTN","MAGVIM05",94,0)
 ;--- Re-format error output or return 0.
"RTN","MAGVIM05",95,0)
 I RARESULT(0)<0 D
"RTN","MAGVIM05",96,0)
 . ;
"RTN","MAGVIM05",97,0)
 . S RETURN(0)=-1_SEPSTAT_$O(RARESULT("A"),-1)_" error lines returned."
"RTN","MAGVIM05",98,0)
 . N X S X=0
"RTN","MAGVIM05",99,0)
 . F  S X=$O(RARESULT(X)) Q:X=""  D
"RTN","MAGVIM05",100,0)
 . . S RETURN(X)=$P(RARESULT(X),U,1)_SEPSTAT_$P(RARESULT(X),U,2,999)
"RTN","MAGVIM05",101,0)
 . . Q
"RTN","MAGVIM05",102,0)
 E  D
"RTN","MAGVIM05",103,0)
 . S RETURN(0)=0_SEPSTAT_RARESULT(0)
"RTN","MAGVIM05",104,0)
 . N X S X=0
"RTN","MAGVIM05",105,0)
 . F  S X=$O(RARESULT(X)) Q:X=""  D
"RTN","MAGVIM05",106,0)
 . . S RETURN(X)=$TR(RARESULT(X),U,SEPOUTP)
"RTN","MAGVIM05",107,0)
 . . Q
"RTN","MAGVIM05",108,0)
 . Q
"RTN","MAGVIM05",109,0)
 Q
"RTN","MAGVIM05",110,0)
 ;
"RTN","MAGVIM05",111,0)
 ;+++++ Wrap call to code underlying RPC: RAMAG EXAMINED & re-format output
"RTN","MAGVIM05",112,0)
 ;
"RTN","MAGVIM05",113,0)
 ; RPC: MAGV RAD STAT EXAMINED  Private IA #5071
"RTN","MAGVIM05",114,0)
 ;
"RTN","MAGVIM05",115,0)
 ; Inputs:
"RTN","MAGVIM05",116,0)
 ; =======
"RTN","MAGVIM05",117,0)
 ;
"RTN","MAGVIM05",118,0)
 ;  See input parameter descriptions above tag XMCOMPLT (above).
"RTN","MAGVIM05",119,0)
 ;
"RTN","MAGVIM05",120,0)
XMEXAMIN(RETURN,RADFN,RAEXAM1,RAEXAM2,MAGVUSR,MAGVUSRDV,RAIMGTYP) ;
"RTN","MAGVIM05",121,0)
 ;
"RTN","MAGVIM05",122,0)
 ;--- Initialize.
"RTN","MAGVIM05",123,0)
 K RETURN
"RTN","MAGVIM05",124,0)
 N MSG,RARESULT,SEPSTAT,SEPOUTP D ZRUSEPIN
"RTN","MAGVIM05",125,0)
 ;--- Validate incoming parameters.
"RTN","MAGVIM05",126,0)
 N MAGERR,PARAM S MAGERR=0
"RTN","MAGVIM05",127,0)
 D
"RTN","MAGVIM05",128,0)
 . F PARAM="RADFN","RAEXAM1","RAEXAM2","MAGVUSR","MAGVUSRDV","RAIMGTYP" D  Q:MAGERR
"RTN","MAGVIM05",129,0)
 . . S:@PARAM="" MAGERR=1
"RTN","MAGVIM05",130,0)
 . . Q
"RTN","MAGVIM05",131,0)
 . Q
"RTN","MAGVIM05",132,0)
 ;
"RTN","MAGVIM05",133,0)
 I MAGERR D  Q
"RTN","MAGVIM05",134,0)
 . S RETURN(0)="-1"_SEPSTAT_"Required parameter "_PARAM_" missing or invalid."
"RTN","MAGVIM05",135,0)
 . Q
"RTN","MAGVIM05",136,0)
 ;
"RTN","MAGVIM05",137,0)
 ;--- Format incoming RAD Exam Identifiers
"RTN","MAGVIM05",138,0)
 N RAEXAM S RAEXAM=RADFN_U_RAEXAM1_U_RAEXAM2
"RTN","MAGVIM05",139,0)
 ;
"RTN","MAGVIM05",140,0)
 ;--- Set IMAGING SITE PARAMETERS file (#2006.1) IEN from DUZ(2).
"RTN","MAGVIM05",141,0)
 N MAGSITEP
"RTN","MAGVIM05",142,0)
 D
"RTN","MAGVIM05",143,0)
 . S MAGSITEP=$O(^MAG(2006.1,"B",MAGVUSRDV,""))
"RTN","MAGVIM05",144,0)
 . I MAGSITEP="" S MAGERR=1,MSG="Unable to resolve Imaging Site Parameters entry."
"RTN","MAGVIM05",145,0)
 . Q
"RTN","MAGVIM05",146,0)
 ;
"RTN","MAGVIM05",147,0)
 I MAGERR D  Q
"RTN","MAGVIM05",148,0)
 . S RETURN(0)="-1"_SEPSTAT_MSG
"RTN","MAGVIM05",149,0)
 . Q
"RTN","MAGVIM05",150,0)
 ;
"RTN","MAGVIM05",151,0)
 ;--- Set required parameters
"RTN","MAGVIM05",152,0)
 S MAGERR=$$MAKELIST("E",RAIMGTYP,.RAMSC,MAGVUSR,MAGSITEP)
"RTN","MAGVIM05",153,0)
 I MAGERR D  Q
"RTN","MAGVIM05",154,0)
 . S RETURN(0)="-1"_SEPSTAT_$P(MAGERR,U,2)
"RTN","MAGVIM05",155,0)
 . Q
"RTN","MAGVIM05",156,0)
 ;
"RTN","MAGVIM05",157,0)
 ;--- Set flag to suppress HL7 message to dictation systems.
"RTN","MAGVIM05",158,0)
 D OUTPUT("FLAGS^^FS",.RAMSC)
"RTN","MAGVIM05",159,0)
 ;--- Call code underlying RPC: RAMAG EXAMINED (Private IA #5071).
"RTN","MAGVIM05",160,0)
 D EXAMINED^RAMAGRP2(.RARESULT,RAEXAM,.RAMSC)
"RTN","MAGVIM05",161,0)
 I $G(RARESULT(1))="-11^2" D  ; add the OUTSIDE STUDY and try the RPC again 
"RTN","MAGVIM05",162,0)
 . N INFO
"RTN","MAGVIM05",163,0)
 . D ADDROOM(.INFO,RAEXAM)
"RTN","MAGVIM05",164,0)
 . K RARESULT
"RTN","MAGVIM05",165,0)
 . I INFO(1)<0 M RARESULT=INFO Q
"RTN","MAGVIM05",166,0)
 . D EXAMINED^RAMAGRP2(.RARESULT,RAEXAM,.RAMSC)
"RTN","MAGVIM05",167,0)
 . Q
"RTN","MAGVIM05",168,0)
 ;
"RTN","MAGVIM05",169,0)
 ;--- Re-format error output or return 0.
"RTN","MAGVIM05",170,0)
 I RARESULT(0)<0 D
"RTN","MAGVIM05",171,0)
 . ;
"RTN","MAGVIM05",172,0)
 . S RETURN(0)=-1_SEPSTAT_$O(RARESULT("A"),-1)_" error lines returned."
"RTN","MAGVIM05",173,0)
 . N X S X=0
"RTN","MAGVIM05",174,0)
 . F  S X=$O(RARESULT(X)) Q:X=""  D
"RTN","MAGVIM05",175,0)
 . . S RETURN(X)=$P(RARESULT(X),U,1)_SEPSTAT_$P(RARESULT(X),U,2,999)
"RTN","MAGVIM05",176,0)
 . . Q
"RTN","MAGVIM05",177,0)
 E  D
"RTN","MAGVIM05",178,0)
 . S RETURN(0)=0_SEPSTAT_RARESULT(0)
"RTN","MAGVIM05",179,0)
 . N X S X=0
"RTN","MAGVIM05",180,0)
 . F  S X=$O(RARESULT(X)) Q:X=""  D
"RTN","MAGVIM05",181,0)
 . . S RETURN(X)=$TR(RARESULT(X),U,SEPOUTP)
"RTN","MAGVIM05",182,0)
 . . Q
"RTN","MAGVIM05",183,0)
 . Q
"RTN","MAGVIM05",184,0)
 Q
"RTN","MAGVIM05",185,0)
 ;+++++ Wrap calls to RPC: RAMAG EXAM ORDER & re-format output.
"RTN","MAGVIM05",186,0)
 ;
"RTN","MAGVIM05",187,0)
 ; RPC: MAGV RAD EXAM ORDER  Private IA #5068
"RTN","MAGVIM05",188,0)
 ;
"RTN","MAGVIM05",189,0)
 ; Inputs:
"RTN","MAGVIM05",190,0)
 ; =======
"RTN","MAGVIM05",191,0)
 ;
"RTN","MAGVIM05",192,0)
 ;  RETURN
"RTN","MAGVIM05",193,0)
 ;  DFN
"RTN","MAGVIM05",194,0)
 ;  RAMLC
"RTN","MAGVIM05",195,0)
 ;  RADPROC
"RTN","MAGVIM05",196,0)
 ;  STUDYDAT
"RTN","MAGVIM05",197,0)
 ;  RACAT
"RTN","MAGVIM05",198,0)
 ;  REQLOC
"RTN","MAGVIM05",199,0)
 ;  REQPHYS
"RTN","MAGVIM05",200,0)
 ;  REASON
"RTN","MAGVIM05",201,0)
 ;  MISC
"RTN","MAGVIM05",202,0)
 ;
"RTN","MAGVIM05",203,0)
 ; Notes:
"RTN","MAGVIM05",204,0)
 ; ======
"RTN","MAGVIM05",205,0)
 ; 
"RTN","MAGVIM05",206,0)
 ; The parameters are the same as those of the underlying call.
"RTN","MAGVIM05",207,0)
 ;
"RTN","MAGVIM05",208,0)
XMORDER(RETURN,DFN,RAMLC,RADPROC,STUDYDAT,RACAT,REQLOC,REQPHYS,REASON,MISC) ;
"RTN","MAGVIM05",209,0)
 ;
"RTN","MAGVIM05",210,0)
 K RETURN
"RTN","MAGVIM05",211,0)
 N SEPSTAT,SEPOUTP D ZRUSEPIN
"RTN","MAGVIM05",212,0)
 ;
"RTN","MAGVIM05",213,0)
 ;--- Private IA #5068.
"RTN","MAGVIM05",214,0)
 D ORDER^RAMAGRP1(.ORDINFO,DFN,RAMLC,RADPROC,STUDYDAT,RACAT,REQLOC,REQPHYS,REASON,.MISC)
"RTN","MAGVIM05",215,0)
 ;
"RTN","MAGVIM05",216,0)
 ;--- Re-format error output or return new IEN in RAD/NUC MED ORDERS File (#75.1)
"RTN","MAGVIM05",217,0)
 I ORDINFO(0)<0 D  K ORDINFO
"RTN","MAGVIM05",218,0)
 . ;
"RTN","MAGVIM05",219,0)
 . S RETURN(0)=-1_SEPSTAT_$O(ORDINFO("A"),-1)_" error lines returned."
"RTN","MAGVIM05",220,0)
 . N X S X=0 F  S X=$O(ORDINFO(X)) Q:X=""  D
"RTN","MAGVIM05",221,0)
 . . ;
"RTN","MAGVIM05",222,0)
 . . S RETURN(X)=$P(ORDINFO(X),U,1)_SEPSTAT_$P(ORDINFO(X),U,2,999)
"RTN","MAGVIM05",223,0)
 . . Q
"RTN","MAGVIM05",224,0)
 . Q
"RTN","MAGVIM05",225,0)
 E  S RETURN(0)=ORDINFO(0)
"RTN","MAGVIM05",226,0)
 K ORDINFO
"RTN","MAGVIM05",227,0)
 Q
"RTN","MAGVIM05",228,0)
 ;
"RTN","MAGVIM05",229,0)
 ;+++++ Wrap calls to RPC: RAMAG EXAM REGISTER & re-format output.
"RTN","MAGVIM05",230,0)
 ;
"RTN","MAGVIM05",231,0)
 ; RPC: MAGV RAD EXAM REGISTER  Private IA #5069.
"RTN","MAGVIM05",232,0)
 ; 
"RTN","MAGVIM05",233,0)
 ; Inputs:
"RTN","MAGVIM05",234,0)
 ; =======
"RTN","MAGVIM05",235,0)
 ; 
"RTN","MAGVIM05",236,0)
 ;  RETURN
"RTN","MAGVIM05",237,0)
 ;  RAOIFN
"RTN","MAGVIM05",238,0)
 ;  EXMDTE
"RTN","MAGVIM05",239,0)
 ;  RAMSC
"RTN","MAGVIM05",240,0)
 ;
"RTN","MAGVIM05",241,0)
 ; Notes:
"RTN","MAGVIM05",242,0)
 ; ======
"RTN","MAGVIM05",243,0)
 ; 
"RTN","MAGVIM05",244,0)
 ;  The parameters are the same as those of the underlying call.
"RTN","MAGVIM05",245,0)
 ;
"RTN","MAGVIM05",246,0)
XMREGSTR(RETURN,RAOIFN,EXMDTE,RAMSC) ;
"RTN","MAGVIM05",247,0)
 ;
"RTN","MAGVIM05",248,0)
 K RETURN
"RTN","MAGVIM05",249,0)
 N SEPSTAT,SEPOUTP,IMAGLOC D ZRUSEPIN
"RTN","MAGVIM05",250,0)
 ;
"RTN","MAGVIM05",251,0)
 ; Check if imaging location is present - if not find outside imaging location for procedure and division
"RTN","MAGVIM05",252,0)
 N RODATA S RODATA=$G(^RAO(75.1,RAOIFN,0))
"RTN","MAGVIM05",253,0)
 D:$P(RODATA,U,20)=""
"RTN","MAGVIM05",254,0)
 . N LOCINFO,PROCIEN,RAMLC S PROCIEN=$P(RODATA,U,2)
"RTN","MAGVIM05",255,0)
 . D IMAGELOC(.RAMLC,PROCIEN,DUZ(2))
"RTN","MAGVIM05",256,0)
 . S:$P(RAMLC,SEPSTAT)<0 RETURN(0)=RAMLC
"RTN","MAGVIM05",257,0)
 . Q:$G(RETURN(0))
"RTN","MAGVIM05",258,0)
 . S RAMLC=$P(RAMLC,SEPSTAT,2)
"RTN","MAGVIM05",259,0)
 . ; call the RPC to update the radiology imaging location in the radiology order file (#75.1).
"RTN","MAGVIM05",260,0)
 . D IMAGELOC^MAGDRPCB(.LOCINFO,RAOIFN,RAMLC)
"RTN","MAGVIM05",261,0)
 . I $G(LOCINFO)<0 S RETURN(0)=LOCINFO ;"-1"_SEPSTAT_"Error in rpc MAG DICOM SET IMAGING LOCATION"
"RTN","MAGVIM05",262,0)
 . Q
"RTN","MAGVIM05",263,0)
 ;
"RTN","MAGVIM05",264,0)
 ;Get imaging location IEN (#79.1)
"RTN","MAGVIM05",265,0)
 K RAMLC,PROCIEN
"RTN","MAGVIM05",266,0)
 S PROCIEN=$P(RODATA,U,2)
"RTN","MAGVIM05",267,0)
 D IMAGELOC(.RAMLC,PROCIEN,DUZ(2))
"RTN","MAGVIM05",268,0)
 S:$P(RAMLC,SEPSTAT)<0 RETURN(0)=RAMLC
"RTN","MAGVIM05",269,0)
 Q:$G(RETURN(0))
"RTN","MAGVIM05",270,0)
 S RAMLC=$P(RAMLC,SEPSTAT,2)
"RTN","MAGVIM05",271,0)
 ;Get corresponding hospital location IEN (#44)
"RTN","MAGVIM05",272,0)
 S IMAGLOC=$$GET1^DIQ(79.1,.RAMLC,.01,"I")
"RTN","MAGVIM05",273,0)
 K RAMSC
"RTN","MAGVIM05",274,0)
 S RAMSC(1)="PRINCLIN^^"_$G(IMAGLOC)
"RTN","MAGVIM05",275,0)
 S RAMSC(2)="FLAGS^^D"
"RTN","MAGVIM05",276,0)
 ;
"RTN","MAGVIM05",277,0)
 Q:$G(RETURN(0))
"RTN","MAGVIM05",278,0)
 ;--- Private IA #5069.
"RTN","MAGVIM05",279,0)
 D REGISTER^RAMAGRP1(.RARESULT,RAOIFN,EXMDTE,.RAMSC)
"RTN","MAGVIM05",280,0)
 ;
"RTN","MAGVIM05",281,0)
 I RARESULT(0)<0 D
"RTN","MAGVIM05",282,0)
 . ;
"RTN","MAGVIM05",283,0)
 . S RETURN(0)=-1_SEPSTAT_$O(RARESULT("A"),-1)_" error lines returned."
"RTN","MAGVIM05",284,0)
 . N X S X=0 F  S X=$O(RARESULT(X)) Q:X=""  D
"RTN","MAGVIM05",285,0)
 . . ;
"RTN","MAGVIM05",286,0)
 . . S RETURN(X)=$P(RARESULT(X),U,1)_SEPSTAT_$P(RARESULT(X),U,2,999)
"RTN","MAGVIM05",287,0)
 . . Q
"RTN","MAGVIM05",288,0)
 E  D
"RTN","MAGVIM05",289,0)
 . S RETURN(0)=0_SEPSTAT_RARESULT(0)
"RTN","MAGVIM05",290,0)
 . N X S X=0 F  S X=$O(RARESULT(X)) Q:X=""  D
"RTN","MAGVIM05",291,0)
 . . ;
"RTN","MAGVIM05",292,0)
 . . S RETURN(X)=$TR(RARESULT(X),U,SEPOUTP)
"RTN","MAGVIM05",293,0)
 . . Q
"RTN","MAGVIM05",294,0)
 . Q
"RTN","MAGVIM05",295,0)
 Q
"RTN","MAGVIM05",296,0)
 ;+++ Routine Utility: Initialize Separators
"RTN","MAGVIM05",297,0)
ZRUSEPIN ;
"RTN","MAGVIM05",298,0)
 S SEPOUTP=$$OUTSEP^MAGVIM01
"RTN","MAGVIM05",299,0)
 S SEPSTAT=$$STATSEP^MAGVIM01
"RTN","MAGVIM05",300,0)
 Q
"RTN","MAGVIM05",301,0)
 ;
"RTN","MAGVIM05",302,0)
MAKELIST(RACTION,RAIMGTYP,RAMSC,MAGVUSR,MAGSITEP) ; output required fields
"RTN","MAGVIM05",303,0)
 ; Load required flags 
"RTN","MAGVIM05",304,0)
 N INFO
"RTN","MAGVIM05",305,0)
 D EXMSTREQ^RAMAGRP2(.INFO,RACTION,RAIMGTYP)
"RTN","MAGVIM05",306,0)
 I INFO(0)<0 Q INFO(1)
"RTN","MAGVIM05",307,0)
 ;
"RTN","MAGVIM05",308,0)
 N TODAYHL7
"RTN","MAGVIM05",309,0)
 S TODAYHL7=$$NOW^XLFDT()\1,$E(TODAYHL7)=$E(TODAYHL7)+17
"RTN","MAGVIM05",310,0)
 ;
"RTN","MAGVIM05",311,0)
 N REQ,RADPVAL
"RTN","MAGVIM05",312,0)
 ;REQ001 - technologist
"RTN","MAGVIM05",313,0)
 S REQ(1)="TECH^1^"_MAGVUSR
"RTN","MAGVIM05",314,0)
 ;
"RTN","MAGVIM05",315,0)
 ;REQ002 - resident or staff
"RTN","MAGVIM05",316,0)
 ;REQ003 - detailed procedure - taken care of already
"RTN","MAGVIM05",317,0)
 ;
"RTN","MAGVIM05",318,0)
 ;REQ004 - film entry
"RTN","MAGVIM05",319,0)
 S RADPVAL=$$GET1^DIQ(2006.1,MAGSITEP,"RAD FILM SIZE","I")
"RTN","MAGVIM05",320,0)
 S REQ(4)="FILMSIZE^1^"_RADPVAL_U_"0"
"RTN","MAGVIM05",321,0)
 ;
"RTN","MAGVIM05",322,0)
 ;REQ005 - diagnostic code
"RTN","MAGVIM05",323,0)
 S RADPVAL=$$GET1^DIQ(2006.1,MAGSITEP,"RAD PRIMARY DIAGNOSTIC CODE","I")
"RTN","MAGVIM05",324,0)
 S REQ(5)="PRIMDXCODE^^"_RADPVAL
"RTN","MAGVIM05",325,0)
 ;
"RTN","MAGVIM05",326,0)
 ;REQ006 - camera / equipment / room
"RTN","MAGVIM05",327,0)
 S RADPVAL=$$GET1^DIQ(2006.1,MAGSITEP,"RAD PRIMARY CAMERA/EQUIP/RM","I")
"RTN","MAGVIM05",328,0)
 S REQ(6)="PRIMCAM^^"_RADPVAL
"RTN","MAGVIM05",329,0)
 ;
"RTN","MAGVIM05",330,0)
 ;REQ007 - reserved
"RTN","MAGVIM05",331,0)
 ;REQ008 - reserved
"RTN","MAGVIM05",332,0)
 ;REQ009 - reserved
"RTN","MAGVIM05",333,0)
 ;REQ010 - reserved
"RTN","MAGVIM05",334,0)
 ;
"RTN","MAGVIM05",335,0)
 ;REQ011 - report entered
"RTN","MAGVIM05",336,0)
 S REQ(11)="REPORT^1^Electronically generated report for outside study."
"RTN","MAGVIM05",337,0)
 S REQ(11,1)="RPTDTE^^"_TODAYHL7
"RTN","MAGVIM05",338,0)
 ;
"RTN","MAGVIM05",339,0)
 ;REQ012 - verified report
"RTN","MAGVIM05",340,0)
 S REQ(12)="VERDTE^^"_TODAYHL7
"RTN","MAGVIM05",341,0)
 S REQ(12,1)="RPTSTATUS^^EF"
"RTN","MAGVIM05",342,0)
 ;
"RTN","MAGVIM05",343,0)
 ;REQ013 - procedure modifiers required - previously done
"RTN","MAGVIM05",344,0)
 ;
"RTN","MAGVIM05",345,0)
 ;REQ014 - cpt modifiers
"RTN","MAGVIM05",346,0)
 S RADPVAL=$$GET1^DIQ(2006.1,MAGSITEP,"RAD CPT MODIFIERS","I")
"RTN","MAGVIM05",347,0)
 S:RADPVAL REQ(14)="CPTMODS^1^"_RADPVAL
"RTN","MAGVIM05",348,0)
 ;
"RTN","MAGVIM05",349,0)
 ;REQ015 - reserved
"RTN","MAGVIM05",350,0)
 ;
"RTN","MAGVIM05",351,0)
 ;REQ016 - impression
"RTN","MAGVIM05",352,0)
 S REQ(16)="IMPRESSION^1^Electronically generated report for outside study."
"RTN","MAGVIM05",353,0)
 ;
"RTN","MAGVIM05",354,0)
 N INDEX
"RTN","MAGVIM05",355,0)
 F INDEX=1:1:16 I $P(INFO(0),"^",INDEX) D
"RTN","MAGVIM05",356,0)
 . D:$D(REQ(INDEX)) OUTPUT(REQ(INDEX),.RAMSC)
"RTN","MAGVIM05",357,0)
 . D:$D(REQ(INDEX,1)) OUTPUT(REQ(INDEX,1),.RAMSC)
"RTN","MAGVIM05",358,0)
 . Q
"RTN","MAGVIM05",359,0)
 ;
"RTN","MAGVIM05",360,0)
 Q 0
"RTN","MAGVIM05",361,0)
 ;
"RTN","MAGVIM05",362,0)
OUTPUT(TEXT,ARRAY) ;
"RTN","MAGVIM05",363,0)
 N I
"RTN","MAGVIM05",364,0)
 S I=$O(ARRAY(""),-1)+1
"RTN","MAGVIM05",365,0)
 S ARRAY(I)=TEXT
"RTN","MAGVIM05",366,0)
 Q
"RTN","MAGVIM05",367,0)
 ;
"RTN","MAGVIM05",368,0)
 ; MAGV OUTSIDE IMAGE LOCATION
"RTN","MAGVIM05",369,0)
 ;
"RTN","MAGVIM05",370,0)
 ; Inputs:
"RTN","MAGVIM05",371,0)
 ; =======
"RTN","MAGVIM05",372,0)
 ;
"RTN","MAGVIM05",373,0)
 ; PROCIEN -- IEN of procedure in RAD/NUC MED PROCEDURES (file #71)
"RTN","MAGVIM05",374,0)
 ; DIVISION - IEN of division in INSTITUTION (file #4)
"RTN","MAGVIM05",375,0)
 ;  
"RTN","MAGVIM05",376,0)
 ; Output:
"RTN","MAGVIM05",377,0)
 ; ========
"RTN","MAGVIM05",378,0)
 ; 
"RTN","MAGVIM05",379,0)
 ;     <0 Error message
"RTN","MAGVIM05",380,0)
 ;      0 IEN of the Outside Image Location in the IMAGE LOCATIONS (file #79.1)
"RTN","MAGVIM05",381,0)
 ;
"RTN","MAGVIM05",382,0)
IMAGELOC(RESULT,PROCIEN,DIVISION) ;
"RTN","MAGVIM05",383,0)
 ; return the outside imaging location for a given radiology procedure and division
"RTN","MAGVIM05",384,0)
 N IEN,IMAGETYPE,SEPSTAT,SEPOUTP D ZRUSEPIN
"RTN","MAGVIM05",385,0)
 K RESULT
"RTN","MAGVIM05",386,0)
 S PROCIEN=$G(PROCIEN)
"RTN","MAGVIM05",387,0)
 I (PROCIEN'>0)!(PROCIEN'=+PROCIEN) D  Q
"RTN","MAGVIM05",388,0)
 . S RESULT="-1"_SEPSTAT_"Invalid or missing Radiology Procedure pointer: """_PROCIEN_"""."
"RTN","MAGVIM05",389,0)
 . Q
"RTN","MAGVIM05",390,0)
 ;
"RTN","MAGVIM05",391,0)
 S DIVISION=$G(DIVISION)
"RTN","MAGVIM05",392,0)
 I (DIVISION'>0)!(DIVISION'=+DIVISION) D  Q
"RTN","MAGVIM05",393,0)
 . S RESULT="-2"_SEPSTAT_"Invalid or missing Division pointer:"""_DIVISION_"""."
"RTN","MAGVIM05",394,0)
 . Q
"RTN","MAGVIM05",395,0)
 ;
"RTN","MAGVIM05",396,0)
 S IMAGETYPE=$$GET1^DIQ(71,PROCIEN,12,"I")
"RTN","MAGVIM05",397,0)
 I 'IMAGETYPE D  Q
"RTN","MAGVIM05",398,0)
 . S RESULT="-3"_SEPSTAT_"Image Type could not be determined for Radiology Procedure pointer: """_PROCIEN_"""."
"RTN","MAGVIM05",399,0)
 . Q
"RTN","MAGVIM05",400,0)
 ;
"RTN","MAGVIM05",401,0)
 I $$GET1^DIQ(4,DIVISION,.01)="" D  Q
"RTN","MAGVIM05",402,0)
 . S RESULT="-4"_SEPSTAT_"Invalid Division (Institution) pointer:"""_DIVISION_"""."
"RTN","MAGVIM05",403,0)
 . Q
"RTN","MAGVIM05",404,0)
 S IEN=$O(^MAGD(2006.5759,"D",DIVISION,IMAGETYPE,""))
"RTN","MAGVIM05",405,0)
 I IEN="" D  Q
"RTN","MAGVIM05",406,0)
 . S RESULT="-5"_SEPSTAT_"Outside Imaging Location could not be determined for Division: "_DIVISION_" & Procedure: """_PROCIEN_"""."
"RTN","MAGVIM05",407,0)
 . Q
"RTN","MAGVIM05",408,0)
 S RESULT=0_SEPSTAT_$$GET1^DIQ(2006.5759,IEN,.01,"I")
"RTN","MAGVIM05",409,0)
 Q
"RTN","MAGVIM05",410,0)
ADDROOM(INFO,RAEXAM) ; add the OUTSIDE STUDY camera equipment room to the IMAGING LOCATION
"RTN","MAGVIM05",411,0)
 ;S RPCERR=$$CALLRPC^MAGM2VCU("MAG DICOM ADD CAMERA EQUIP RM","M",.INFO,RAEXAM)
"RTN","MAGVIM05",412,0)
 D ADDROOM^MAGDRPCB(.INFO,RAEXAM)
"RTN","MAGVIM05",413,0)
 Q 
"RTN","MAGVIM06")
0^80^B74879511
"RTN","MAGVIM06",1,0)
MAGVIM06 ;WOIFO/DAC/MAT/NST/BT - Utilities for RPC calls for DICOM file processing ; 16 Mar 2012 4:13 PM
"RTN","MAGVIM06",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM06",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM06",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM06",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM06",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM06",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM06",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM06",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM06",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM06",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM06",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM06",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM06",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM06",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM06",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM06",17,0)
 ;;
"RTN","MAGVIM06",18,0)
 Q
"RTN","MAGVIM06",19,0)
 ;
"RTN","MAGVIM06",20,0)
 ;+++ The first tag is carryover code from MAGVIM01, and is called from
"RTN","MAGVIM06",21,0)
 ;      several points in that routine.
"RTN","MAGVIM06",22,0)
 ;
"RTN","MAGVIM06",23,0)
VALIDATE(FDA,ERR) ; Validate data - delete invalid data - report warnings
"RTN","MAGVIM06",24,0)
 N FILE,IENS,FNUM,VALID,VALUE
"RTN","MAGVIM06",25,0)
 S FILE=""
"RTN","MAGVIM06",26,0)
 F  S FILE=$O(FDA(FILE)) Q:($G(ERR)'="")!(FILE="")  D
"RTN","MAGVIM06",27,0)
 . S IENS=""
"RTN","MAGVIM06",28,0)
 . F  S IENS=$O(FDA(FILE,IENS)) Q:($G(ERR)'="")!(IENS="")  D
"RTN","MAGVIM06",29,0)
 . . S FNUM=""
"RTN","MAGVIM06",30,0)
 . . F  S FNUM=$O(FDA(FILE,IENS,FNUM)) Q:($G(ERR)'="")!(FNUM="")  D
"RTN","MAGVIM06",31,0)
 . . . S VALUE=FDA(FILE,IENS,FNUM)
"RTN","MAGVIM06",32,0)
 . . . ; Check if data is valid for file and field number provided
"RTN","MAGVIM06",33,0)
 . . . D CHK^DIE(FILE,FNUM,"E",VALUE,.VALID)
"RTN","MAGVIM06",34,0)
 . . . I VALID="^" D
"RTN","MAGVIM06",35,0)
 . . . . K FDA(FILE,IENS,FNUM)
"RTN","MAGVIM06",36,0)
 . . . . I $G(ERR)="" S ERR="Invalid data:"_VALUE_" Field: #"_FILE_","_FNUM
"RTN","MAGVIM06",37,0)
 . . . . Q
"RTN","MAGVIM06",38,0)
 . . . Q
"RTN","MAGVIM06",39,0)
 . . Q
"RTN","MAGVIM06",40,0)
 . Q
"RTN","MAGVIM06",41,0)
 Q
"RTN","MAGVIM06",42,0)
 ; RPC: MAGV CONFIRM RAD ORDER
"RTN","MAGVIM06",43,0)
 ;
"RTN","MAGVIM06",44,0)
 ;  Inputs
"RTN","MAGVIM06",45,0)
 ;  ======
"RTN","MAGVIM06",46,0)
 ;
"RTN","MAGVIM06",47,0)
 ;  OUT   Target array to hold output.
"RTN","MAGVIM06",48,0)
 ;  UIDS  `(1) Study Instance UID
"RTN","MAGVIM06",49,0)
 ;         (2) Series Instance UID
"RTN","MAGVIM06",50,0)
 ;         (3) SOP Instance UID
"RTN","MAGVIM06",51,0)
 ;  
"RTN","MAGVIM06",52,0)
 ;  Output
"RTN","MAGVIM06",53,0)
 ;  ======
"RTN","MAGVIM06",54,0)
 ;
"RTN","MAGVIM06",55,0)
 ; S OUT="1011|PATIENT,ONEZEROONEONE|000-00-1011|19450610|M|1006170647V052871|121798-29|19981217|"
"RTN","MAGVIM06",56,0)
 ; S OUT=OUT_"|CT HEAD W/O CONT|"
"RTN","MAGVIM06",57,0)
 ; 
"RTN","MAGVIM06",58,0)
 ; (0)
"RTN","MAGVIM06",59,0)
 ;    `(01) 0          or <0 if error
"RTN","MAGVIM06",60,0)
 ;     (02) line count or Error message
"RTN","MAGVIM06",61,0)
 ; (1)
"RTN","MAGVIM06",62,0)
 ;    |(01) Patient IEN in RAD/NUC MED PATIENT file (#70)
"RTN","MAGVIM06",63,0)
 ;     (02) Patient Name
"RTN","MAGVIM06",64,0)
 ;     (03) Patient SSN (?3N1"-"2N1"-"4N)
"RTN","MAGVIM06",65,0)
 ;     (04) Patient DOB (YYYYMMDD)
"RTN","MAGVIM06",66,0)
 ;     (05) Patient Sex
"RTN","MAGVIM06",67,0)
 ;     (06) Patient ICN
"RTN","MAGVIM06",68,0)
 ;     (07) Accession Number
"RTN","MAGVIM06",69,0)
 ;     (08) Study Date
"RTN","MAGVIM06",70,0)
 ;     (09) Procedure
"RTN","MAGVIM06",71,0)
 ;     (10) Procedure Modifiers
"RTN","MAGVIM06",72,0)
 ;         ~(1..n)
"RTN","MAGVIM06",73,0)
 ;     (11) Order IEN of RAD/NUC MED ORDERS file (#75.1)
"RTN","MAGVIM06",74,0)
 ;     (12) Order Date
"RTN","MAGVIM06",75,0)
 ;     (13) Order Location
"RTN","MAGVIM06",76,0)
 ;     (14) Exam Status
"RTN","MAGVIM06",77,0)
 ;     (15) Order Reason
"RTN","MAGVIM06",78,0)
 ;
"RTN","MAGVIM06",79,0)
 ;  Notes
"RTN","MAGVIM06",80,0)
 ;  =====
"RTN","MAGVIM06",81,0)
 ;
"RTN","MAGVIM06",82,0)
 ;    Output type is ARRAY only to support interface conventions. The RPC
"RTN","MAGVIM06",83,0)
 ;      output is at most one line of patient-study data.
"RTN","MAGVIM06",84,0)
 ;
"RTN","MAGVIM06",85,0)
CONFIRM(OUT,UIDS) ;
"RTN","MAGVIM06",86,0)
 ;
"RTN","MAGVIM06",87,0)
 ;--- Initialize.
"RTN","MAGVIM06",88,0)
 N IENSTUDY
"RTN","MAGVIM06",89,0)
 K MAGV,UID
"RTN","MAGVIM06",90,0)
 N SSEP S SSEP=$$STATSEP^MAGVIM01
"RTN","MAGVIM06",91,0)
 N ISEP S ISEP=$$INPUTSEP^MAGVIM01
"RTN","MAGVIM06",92,0)
 N OSEP S OSEP=$$OUTSEP^MAGVIM01
"RTN","MAGVIM06",93,0)
 ;--- Validate input.
"RTN","MAGVIM06",94,0)
 I '$D(UIDS) S OUT(0)=-6_SSEP_"No UIDs provided" Q
"RTN","MAGVIM06",95,0)
 S UID("STUDY")=$P(UIDS,ISEP,1)
"RTN","MAGVIM06",96,0)
 I $G(UID("STUDY"))="" S OUT(0)=-1_SSEP_"No study UID provided" Q
"RTN","MAGVIM06",97,0)
 S UID("SERIES")=$P(UIDS,ISEP,2)
"RTN","MAGVIM06",98,0)
 I $G(UID("SERIES"))="" S OUT(0)=-2_SSEP_"No series UID provided" Q
"RTN","MAGVIM06",99,0)
 S UID("SOP")=$P(UIDS,ISEP,3)
"RTN","MAGVIM06",100,0)
 I $G(UID("SOP"))="" S OUT(0)=-3_SSEP_"No SOP UID provided" Q
"RTN","MAGVIM06",101,0)
 ;--- Process an object in legacy structure (<MAG*3.0*34).
"RTN","MAGVIM06",102,0)
 I $D(^MAG(2005,"P",UID("SOP"))) D
"RTN","MAGVIM06",103,0)
 . ;--- Lookup by IMAGE file (#2005) IEN. Quit if error.
"RTN","MAGVIM06",104,0)
 . N MAGIEN S MAGIEN=$O(^MAG(2005,"P",UID("SOP"),""))
"RTN","MAGVIM06",105,0)
 . I MAGIEN="" S OUT(0)=-1_SSEP_"Null IMAGE file IEN." Q
"RTN","MAGVIM06",106,0)
 . D LOOKUP^MAGDRPCA(.RETURN,MAGIEN)
"RTN","MAGVIM06",107,0)
 . I +RETURN<0 S OUT(0)=-1_SSEP_$P(RETURN,",",2) Q
"RTN","MAGVIM06",108,0)
 . ;--- Shift to compensate for first piece reserved for error flag.
"RTN","MAGVIM06",109,0)
 . S OUT=$P(RETURN,U,2,999) K RETURN
"RTN","MAGVIM06",110,0)
 . ;
"RTN","MAGVIM06",111,0)
 . N ACN S ACN=$P(OUT,U,7)
"RTN","MAGVIM06",112,0)
 . I ACN="" S OUT(0)=-1_SSEP_"Null Accession Number." Q
"RTN","MAGVIM06",113,0)
 . I ACN["GMRC" D PATHCON,PATHOUT Q  ; Process through CONsult pathway.
"RTN","MAGVIM06",114,0)
 . ;
"RTN","MAGVIM06",115,0)
 . ;
"RTN","MAGVIM06",116,0)
 . D PATHRAD,PATHOUT
"RTN","MAGVIM06",117,0)
 . Q
"RTN","MAGVIM06",118,0)
 ;--- Process an object in new structure (>=MAG*3.0*34).
"RTN","MAGVIM06",119,0)
 E  D
"RTN","MAGVIM06",120,0)
 . ;
"RTN","MAGVIM06",121,0)
 . ;--- Lookup via IMAGE STUDY file (#2005.62) entry.
"RTN","MAGVIM06",122,0)
 . I '$P($G(^MAGV(2005.62,0)),U,4) D  Q
"RTN","MAGVIM06",123,0)
 . . S OUT(0)=0_SSEP_"No data in IMAGE STUDY file." Q
"RTN","MAGVIM06",124,0)
 . I '$D(^MAGV(2005.62,"B",UID("STUDY"))) D  Q
"RTN","MAGVIM06",125,0)
 . . S OUT(0)=-1_SSEP_"Study Instance UID not found in IMAGE STUDY file."
"RTN","MAGVIM06",126,0)
 . S IENSTUDY=$O(^MAGV(2005.62,"B",UID("STUDY"),""))
"RTN","MAGVIM06",127,0)
 . ;
"RTN","MAGVIM06",128,0)
 . ;--- Get IMAGING PATIENT REFERENCE file (#2005.62) pointer.
"RTN","MAGVIM06",129,0)
 . N IENPTREF S IENPTREF=$$GET1^DIQ(2005.62,IENSTUDY,13,"I")
"RTN","MAGVIM06",130,0)
 . N IENPCREF S IENPCREF=$$GET1^DIQ(2005.62,IENSTUDY,11,"I") ; IMAGING PROCEDURE REFERENCE
"RTN","MAGVIM06",131,0)
 . N STUDYDTM S STUDYDTM=$$GET1^DIQ(2005.62,IENSTUDY,4)
"RTN","MAGVIM06",132,0)
 . N ENTPATID S ENTPATID=$$GET1^DIQ(2005.6,IENPTREF,.01)
"RTN","MAGVIM06",133,0)
 . N ENTIDTYP S ENTIDTYP=$$GET1^DIQ(2005.6,IENPTREF,.03)
"RTN","MAGVIM06",134,0)
 . N PROCEDUR S PROCEDUR=$$GET1^DIQ(2005.61,IENPCREF,43)
"RTN","MAGVIM06",135,0)
 . ;D
"RTN","MAGVIM06",136,0)
 . ;. I ENTIDTYPE="D" Q ; A  DFN: Query PATIENT file (#2).
"RTN","MAGVIM06",137,0)
 . ;. I ENTIDTYPE="I" Q ; An ICN: Lookup DFN and goto ("D").
"RTN","MAGVIM06",138,0)
 . ;. I ENTIDTYPE="M" Q ; An MRN: ???
"RTN","MAGVIM06",139,0)
 . ;
"RTN","MAGVIM06",140,0)
 . ;--- Procedure ID TYPE ('RAD', 'CON', 'LAB')
"RTN","MAGVIM06",141,0)
 . N IDPROC S IDPROC=$$GET1^DIQ(2005.61,IENPCREF,.03,"I")
"RTN","MAGVIM06",142,0)
 . ;
"RTN","MAGVIM06",143,0)
 . ;--- Get ACCESSION NUMBER.
"RTN","MAGVIM06",144,0)
 . N ACN S ACN=$$GET1^DIQ(2005.61,IENPCREF,.01)
"RTN","MAGVIM06",145,0)
 . I ACN="" S OUT(0)=-1_SSEP_"Null Accession Number." Q
"RTN","MAGVIM06",146,0)
 . S RETURN=$$LOOKUP1(ENTPATID)
"RTN","MAGVIM06",147,0)
 . I +RETURN<0 S OUT(0)=-1_SSEP_$P(RETURN,",",2) Q
"RTN","MAGVIM06",148,0)
 . ;
"RTN","MAGVIM06",149,0)
 . S OUT=$P(RETURN,U,2,999) K RETURN
"RTN","MAGVIM06",150,0)
 . S $P(OUT,U,7)=ACN
"RTN","MAGVIM06",151,0)
 . S $P(OUT,U,8)=STUDYDTM
"RTN","MAGVIM06",152,0)
 . S $P(OUT,U,9)=PROCEDUR
"RTN","MAGVIM06",153,0)
 . ;
"RTN","MAGVIM06",154,0)
 . ;--- Pathway for PROCEDURE ??? TYPE="RAD"
"RTN","MAGVIM06",155,0)
 . D:IDPROC="RAD" PATHRAD
"RTN","MAGVIM06",156,0)
 . ;--- Pathway for PROCEDURE ID TYPE="CON"
"RTN","MAGVIM06",157,0)
 . D:IDPROC="CON" PATHCON
"RTN","MAGVIM06",158,0)
 . ;--- Pathway for PROCEDURE TYPE="LAB" (Future Use)
"RTN","MAGVIM06",159,0)
 . S:IDPROC="LAB" OUT(0)=-1_SSEP_"Procedure Type 'LAB' Currently Unsupported."
"RTN","MAGVIM06",160,0)
 . ;--- Quit if subroutine returns error output.
"RTN","MAGVIM06",161,0)
 . Q:+$G(OUT(0))<0
"RTN","MAGVIM06",162,0)
 . D PATHOUT
"RTN","MAGVIM06",163,0)
 . Q
"RTN","MAGVIM06",164,0)
 ;
"RTN","MAGVIM06",165,0)
 K MAGV,UID
"RTN","MAGVIM06",166,0)
 Q
"RTN","MAGVIM06",167,0)
 ;--- Get RAD/NUC MED ORDERS Procedure Modifiers (adapted from MAGDRPCB).
"RTN","MAGVIM06",168,0)
PROCMODS(MAGRAOIEN) ;
"RTN","MAGVIM06",169,0)
 N MAGMSG,MAGTMPMOD,MAGVMOD,MODDATA
"RTN","MAGVIM06",170,0)
 S MAGTMPMOD=$NA(MAGVMOD(0)),MODDATA=$NA(@MAGTMPMOD@("DILIST"))
"RTN","MAGVIM06",171,0)
 K @MAGTMPMOD
"RTN","MAGVIM06",172,0)
 N MODIFIERS S MODIFIERS=""
"RTN","MAGVIM06",173,0)
 ;--- Get modifiers via FileMan list. IA #3074
"RTN","MAGVIM06",174,0)
 D LIST^DIC(75.1125,","_MAGRAOIEN_",","@;.01;.01I;IX","",,,,,,,MAGTMPMOD,"MAGMSG")
"RTN","MAGVIM06",175,0)
 I $D(MAGMSG) D
"RTN","MAGVIM06",176,0)
 . S MODIFIERS="Unavailable" ; fatal FileMan error
"RTN","MAGVIM06",177,0)
 E  D
"RTN","MAGVIM06",178,0)
 . N I,MODCOUNT S MODCOUNT=+@MODDATA@(0)
"RTN","MAGVIM06",179,0)
 . F I=1:1:MODCOUNT D
"RTN","MAGVIM06",180,0)
 . . N MODIEN S MODIEN=@MODDATA@(2,I)
"RTN","MAGVIM06",181,0)
 . . N THIS S THIS=@MODDATA@("ID",MODIEN,.01,"E") ;_"|"_@MODDATA@("ID",MODIEN,.01,"I")
"RTN","MAGVIM06",182,0)
 . . I $L(MODIFIERS) S MODIFIERS=MODIFIERS_"~"_THIS Q
"RTN","MAGVIM06",183,0)
 . . S MODIFIERS=THIS
"RTN","MAGVIM06",184,0)
 . . Q
"RTN","MAGVIM06",185,0)
 . Q
"RTN","MAGVIM06",186,0)
 K:$D(MAGTMPMOD) @MAGTMPMOD ; cleanup
"RTN","MAGVIM06",187,0)
 Q MODIFIERS
"RTN","MAGVIM06",188,0)
 ;
"RTN","MAGVIM06",189,0)
 ;--- Patient Demographic Lookup (Adapted from MAGDRPCA).
"RTN","MAGVIM06",190,0)
 ;
"RTN","MAGVIM06",191,0)
LOOKUP1(PATDFN) ; patient and accession number lookup
"RTN","MAGVIM06",192,0)
 N DFN,I,NUMBER,OUT,TMP,VA,VADM,X
"RTN","MAGVIM06",193,0)
 S DFN=PATDFN
"RTN","MAGVIM06",194,0)
 D  ; Protect variables that are referenced by the DEM^VADPT
"RTN","MAGVIM06",195,0)
 . N A,I,J,K,K1,NC,NF,NQ,T,VAHOW,VAPTYP,VAROOT,X
"RTN","MAGVIM06",196,0)
 . D DEM^VADPT ; Supported IA (#10061)
"RTN","MAGVIM06",197,0)
 . Q
"RTN","MAGVIM06",198,0)
 S X="^"_DFN ; piece 1 is for an error message
"RTN","MAGVIM06",199,0)
 S X=X_"^"_VADM(1) ; patient name
"RTN","MAGVIM06",200,0)
 S X=X_"^"_VA("PID") ; patient id (ssn)
"RTN","MAGVIM06",201,0)
 S TMP=$S(VADM(3)>0:17000000+VADM(3),1:"-1,Invalid date of birth")
"RTN","MAGVIM06",202,0)
 S X=X_"^"_TMP ; Patient DOB
"RTN","MAGVIM06",203,0)
 S X=X_"^"_$P(VADM(5),"^",1) ; patient sex
"RTN","MAGVIM06",204,0)
 ; $$GETICN^MPIF001 can return error code and message separated
"RTN","MAGVIM06",205,0)
 ; by "^". If this happens, the "^" is replaced by comma.
"RTN","MAGVIM06",206,0)
 S TMP=$S($T(GETICN^MPIF001)'="":$$GETICN^MPIF001(DFN),1:"-1^NO MPI") ; Supported IA (#2701)
"RTN","MAGVIM06",207,0)
 S X=X_"^"_$TR(TMP,"^",",")  ; ICN
"RTN","MAGVIM06",208,0)
 Q X
"RTN","MAGVIM06",209,0)
 ;
"RTN","MAGVIM06",210,0)
PATHCON ;--- Next 6 lines adapted from MAGDRPCA.
"RTN","MAGVIM06",211,0)
 N GMRCIEN,MODIFIER,PROCNAME,STUDYDAT,TMP
"RTN","MAGVIM06",212,0)
 S GMRCIEN=$P(ACN,"GMRC-",2)
"RTN","MAGVIM06",213,0)
 S TMP=$$GET1^DIQ(123,GMRCIEN,.01,"I")\1
"RTN","MAGVIM06",214,0)
 S STUDYDAT=$S(TMP>0:17000000+TMP,1:"-1,Invalid study date")
"RTN","MAGVIM06",215,0)
 S PROCNAME=$$GET1^DIQ(123,GMRCIEN,1) ; TO SERVICE
"RTN","MAGVIM06",216,0)
 S MODIFIER=$$GET1^DIQ(123,GMRCIEN,4) ; PROCEDURE
"RTN","MAGVIM06",217,0)
 S MAGV("OERRIEN")=$$GET1^DIQ(123,GMRCIEN,.03)
"RTN","MAGVIM06",218,0)
 S MAGV("PATLCN")=$$GET1^DIQ(123,GMRCIEN,.04)
"RTN","MAGVIM06",219,0)
 S MAGV("CPRSSTAT")=$$GET1^DIQ(123,GMRCIEN,8)
"RTN","MAGVIM06",220,0)
 ;
"RTN","MAGVIM06",221,0)
 ;--- Assemble remaining output.
"RTN","MAGVIM06",222,0)
 S $P(OUT,U,9)=PROCNAME
"RTN","MAGVIM06",223,0)
 S $P(OUT,U,10)=MODIFIER
"RTN","MAGVIM06",224,0)
 S $P(OUT,U,11)=MAGV("OERRIEN")
"RTN","MAGVIM06",225,0)
 S $P(OUT,U,12)=STUDYDAT
"RTN","MAGVIM06",226,0)
 S $P(OUT,U,13)=MAGV("PATLCN")
"RTN","MAGVIM06",227,0)
 S $P(OUT,U,14)=MAGV("CPRSSTAT")
"RTN","MAGVIM06",228,0)
 N STUDYRSN S STUDYRSN=$$GET1^DIQ(123.01,"1,"_GMRCIEN_",",.01) ;Reason for study
"RTN","MAGVIM06",229,0)
 S $P(OUT,U,15)=STUDYRSN
"RTN","MAGVIM06",230,0)
 Q
"RTN","MAGVIM06",231,0)
PATHOUT ;--- Translate output separator.
"RTN","MAGVIM06",232,0)
 S OUT(0)=0_SSEP_1
"RTN","MAGVIM06",233,0)
 S OUT(1)=$TR(OUT,U,OSEP)
"RTN","MAGVIM06",234,0)
 Q
"RTN","MAGVIM06",235,0)
PATHRAD ;--- Assemble remaining RAD output.
"RTN","MAGVIM06",236,0)
 ;--- Get RAD/NUC MED ORDER file (#75.1) IEN from RAD/NUC MED PATIENT file (#70).
"RTN","MAGVIM06",237,0)
 D ACNUMB^MAGDRPCA(.RETURN,ACN)
"RTN","MAGVIM06",238,0)
 I +RETURN<0 S OUT(0)=-1_SSEP_$P(RETURN,U,2) Q
"RTN","MAGVIM06",239,0)
 ;
"RTN","MAGVIM06",240,0)
 ;--- Set RAD/NUC MED PATIENT var's.
"RTN","MAGVIM06",241,0)
 N RACNI,RADFN,RADPT
"RTN","MAGVIM06",242,0)
 S RACNI=$P(RETURN,U,1),RADPT=$P(RETURN,U,2),RADFN=$P(RETURN,U,3)
"RTN","MAGVIM06",243,0)
 ;--- Set RAD/NUC MED ORDER var's.
"RTN","MAGVIM06",244,0)
 S MAGV("RAOIEN")=$$GET1^DIQ(70.03,RACNI_","_RADFN_","_RADPT_",",11,"I",,"MAGERR")
"RTN","MAGVIM06",245,0)
 S MAGV("RAODAT")=$$GET1^DIQ(75.1,MAGV("RAOIEN"),16)
"RTN","MAGVIM06",246,0)
 S MAGV("RAOLCN")=$$GET1^DIQ(75.1,MAGV("RAOIEN"),22)
"RTN","MAGVIM06",247,0)
 S MAGV("RAORSN")=$$GET1^DIQ(75.1,MAGV("RAOIEN"),1.1)
"RTN","MAGVIM06",248,0)
 ;--- Set Exam Status.
"RTN","MAGVIM06",249,0)
 N EXSTP
"RTN","MAGVIM06",250,0)
 S EXSTP=$$GET1^DIQ(70.03,RACNI_","_RADFN_","_RADPT_",",3,"I",,"MAGERR")
"RTN","MAGVIM06",251,0)
 S MAGV("EXAMSTAT")=$$GET1^DIQ(72,EXSTP,.01)
"RTN","MAGVIM06",252,0)
 ;
"RTN","MAGVIM06",253,0)
 S $P(OUT,U,10)=$$PROCMODS(MAGV("RAOIEN"))
"RTN","MAGVIM06",254,0)
 S $P(OUT,U,11)=MAGV("RAOIEN")
"RTN","MAGVIM06",255,0)
 S $P(OUT,U,12)=MAGV("RAODAT")
"RTN","MAGVIM06",256,0)
 S $P(OUT,U,13)=MAGV("RAOLCN")
"RTN","MAGVIM06",257,0)
 S $P(OUT,U,14)=MAGV("EXAMSTAT")
"RTN","MAGVIM06",258,0)
 S $P(OUT,U,15)=MAGV("RAORSN")
"RTN","MAGVIM06",259,0)
 Q
"RTN","MAGVIM06",260,0)
 ;
"RTN","MAGVIM06",261,0)
 ; MAGVIM06
"RTN","MAGVIM07")
0^81^B57953558
"RTN","MAGVIM07",1,0)
MAGVIM07 ;;WOIFO/PMK/MLS/SG/DAC/MAT/BT - Imaging RPCs for Importer II; 29 Nov 2011 4:28 PM ; 12 Apr 2012 6:02 PM
"RTN","MAGVIM07",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM07",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM07",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM07",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM07",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM07",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM07",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM07",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM07",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM07",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM07",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM07",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM07",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM07",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM07",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM07",17,0)
 ;;
"RTN","MAGVIM07",18,0)
 Q
"RTN","MAGVIM07",19,0)
 ;
"RTN","MAGVIM07",20,0)
 ;--- Copied from MAGDRPCB. Changed REQUEST STATUS filter at ORDERS+24.
"RTN","MAGVIM07",21,0)
 ;
"RTN","MAGVIM07",22,0)
 ;
"RTN","MAGVIM07",23,0)
 ; Notes
"RTN","MAGVIM07",24,0)
 ; =====
"RTN","MAGVIM07",25,0)
 ; 
"RTN","MAGVIM07",26,0)
 ; Modification is for MAG*3.0*118 only. The original RPC name appears for
"RTN","MAGVIM07",27,0)
 ;  reference only.
"RTN","MAGVIM07",28,0)
 ;
"RTN","MAGVIM07",29,0)
ORDERS(ARRAY,DFN) ; RPC = MAG DICOM GET RAD ORDERS ** Modified for MAG*3.0*118 only.
"RTN","MAGVIM07",30,0)
 ; look up radiology orders
"RTN","MAGVIM07",31,0)
 N ACNUMB,CASENUMB,DIERR,EXAMDATA,EXAMDATE,EXAMSTAT,ERROR,SKIP,FIELDS,I,IENS,IMAGLOCN,INACTDAT
"RTN","MAGVIM07",32,0)
 N ORDER,MAGEXAM,MAGMSG,MAGTMPEXAM,MAGTMPMOD,MODCOUNT,MODDATA
"RTN","MAGVIM07",33,0)
 N MODIEN,MODIFIER,MSG,PROCIEN,RACNI,RADFN,RADTI,RAOIEN,RC,STATUS,STUDYDAT,TODAY,X,Z
"RTN","MAGVIM07",34,0)
 K ARRAY
"RTN","MAGVIM07",35,0)
 S DFN=$G(DFN),TODAY=$$DT^XLFDT()
"RTN","MAGVIM07",36,0)
 I (DFN'>0)!(DFN'=+DFN) D  Q
"RTN","MAGVIM07",37,0)
 . S ARRAY(1)="-1,Invalid or missing patient identifier: """_DFN_"""."
"RTN","MAGVIM07",38,0)
 . Q
"RTN","MAGVIM07",39,0)
 ;
"RTN","MAGVIM07",40,0)
 ; Make sure that the patient is registered in the RAD/NUC MED PATIENT file (#70)
"RTN","MAGVIM07",41,0)
 ;
"RTN","MAGVIM07",42,0)
 S RC=$$RAPTREG^RAMAGU04(DFN) I RC<0 D  Q  ; ICR 5519
"RTN","MAGVIM07",43,0)
 . S ARRAY(1)="-2,Patient with DFN #"_DFN_" is not defined in the RAD/NUC MED PATIENT file (#70)."
"RTN","MAGVIM07",44,0)
 . S ARRAY(2)=RC
"RTN","MAGVIM07",45,0)
 . Q
"RTN","MAGVIM07",46,0)
 ;
"RTN","MAGVIM07",47,0)
 ; Use MUMPS global reads to get data from ^RAO because of possible bad data
"RTN","MAGVIM07",48,0)
 ; that would cause FileMan to throw an error and not return any results.
"RTN","MAGVIM07",49,0)
 ;
"RTN","MAGVIM07",50,0)
 S (ARRAY(1),ERROR,RAOIEN)=0
"RTN","MAGVIM07",51,0)
 F  S RAOIEN=$O(^RAO(75.1,"B",DFN,RAOIEN)) Q:ERROR  Q:RAOIEN=""  D  ; ICR 3074
"RTN","MAGVIM07",52,0)
 . S STATUS=$$GET1^DIQ(75.1,RAOIEN,5) ; request status
"RTN","MAGVIM07",53,0)
 . ;--- MAG*3.0*118 -- Removed "^COMPLETE^" from the list of statuses to filter.
"RTN","MAGVIM07",54,0)
 . I "^^DISCONTINUED^UNRELEASED^"[("^"_STATUS_"^") Q  ; quit if status is null too
"RTN","MAGVIM07",55,0)
 . S Z=$G(^RAO(75.1,RAOIEN,0))
"RTN","MAGVIM07",56,0)
 . K ORDER S $P(ORDER,"^",11)="" ; initialize ORDER string
"RTN","MAGVIM07",57,0)
 . S $P(ORDER,"^",1)=RAOIEN ; file 75.1 IEN
"RTN","MAGVIM07",58,0)
 . S PROCIEN=$P(Z,"^",2) ; procedure
"RTN","MAGVIM07",59,0)
 . Q:PROCIEN=""  Q:'$D(^RAMIS(71,PROCIEN,0))  ; null or bad PROCIEN
"RTN","MAGVIM07",60,0)
 . S INACTDAT=$P($G(^RAMIS(71,PROCIEN,"I")),U)
"RTN","MAGVIM07",61,0)
 . I INACTDAT,INACTDAT<TODAY Q  ; ignore inactive procedures
"RTN","MAGVIM07",62,0)
 . S $P(ORDER,"^",2)=PROCIEN ; procedure
"RTN","MAGVIM07",63,0)
 . ; piece 3 of ORDER is modifier(s)
"RTN","MAGVIM07",64,0)
 . S $P(ORDER,"^",4)=STATUS ; request status
"RTN","MAGVIM07",65,0)
 . S $P(ORDER,"^",5)=$P(Z,"^",16) ; request entered date
"RTN","MAGVIM07",66,0)
 . S $P(ORDER,"^",6)=$$GET1^DIQ(75.1,RAOIEN,1.1) ; reason for study
"RTN","MAGVIM07",67,0)
 . S SKIP=0
"RTN","MAGVIM07",68,0)
 . I $D(^RADPT("AO",RAOIEN)) D
"RTN","MAGVIM07",69,0)
 . . S RADFN=$O(^RADPT("AO",RAOIEN,"")) ; ICR 1172
"RTN","MAGVIM07",70,0)
 . . S RADTI=$O(^RADPT("AO",RAOIEN,RADFN,""))
"RTN","MAGVIM07",71,0)
 . . S RACNI=$O(^RADPT("AO",RAOIEN,RADFN,RADTI,""))
"RTN","MAGVIM07",72,0)
 . . S $P(ORDER,"^",7)=RADTI
"RTN","MAGVIM07",73,0)
 . . S $P(ORDER,"^",8)=RACNI
"RTN","MAGVIM07",74,0)
 . . S MAGTMPEXAM=$NA(^TMP($T(+0),$J,"EXAM"))
"RTN","MAGVIM07",75,0)
 . . S IENS=RACNI_","_RADTI_","_RADFN_","
"RTN","MAGVIM07",76,0)
 . . S EXAMDATA=$NA(@MAGTMPEXAM@(70.03,IENS))
"RTN","MAGVIM07",77,0)
 . . I $T(ACCFIND^RAAPI)'="" S FIELDS=".01;31;3;" ; requires RA*5.0*47
"RTN","MAGVIM07",78,0)
 . . E  S FIELDS=".01;3;" ; no accession number field (#31)
"RTN","MAGVIM07",79,0)
 . . K @MAGTMPEXAM,MAGMSG
"RTN","MAGVIM07",80,0)
 . . D GETS^DIQ(70.03,IENS,FIELDS,"EI",MAGTMPEXAM,"MAGMSG") ; ICR 1172
"RTN","MAGVIM07",81,0)
 . . I $D(MAGMSG) D ORDERERR(.ARRAY,.MAGMSG,-3) S ERROR=-3 Q  ; fatal FileMan error
"RTN","MAGVIM07",82,0)
 . . S EXAMSTAT=$G(@EXAMDATA@(3,"E"))
"RTN","MAGVIM07",83,0)
 . . I EXAMSTAT="CANCELLED" S SKIP=1 Q  ; do not include cancelled exam
"RTN","MAGVIM07",84,0)
 . . S EXAMDATE=$$GET1^DIQ(70.02,(RADTI_","_RADFN),.01,"I") ; ICR 1172
"RTN","MAGVIM07",85,0)
 . . S ACNUMB=$G(@EXAMDATA@(31,"E"))
"RTN","MAGVIM07",86,0)
 . . I ACNUMB="" D
"RTN","MAGVIM07",87,0)
 . . . S CASENUMB=@EXAMDATA@(.01,"E")
"RTN","MAGVIM07",88,0)
 . . . S ACNUMB=$E(EXAMDATE,4,7)_$E(EXAMDATE,2,3)_"-"_CASENUMB
"RTN","MAGVIM07",89,0)
 . . . Q
"RTN","MAGVIM07",90,0)
 . . S $P(ORDER,"^",9)=ACNUMB,$P(ORDER,"^",10)=EXAMDATE
"RTN","MAGVIM07",91,0)
 . . S IMAGLOCN=$$GET1^DIQ(70.02,(RADTI_","_RADFN),4) ; ICR 1172
"RTN","MAGVIM07",92,0)
 . . S $P(ORDER,"^",11)=IMAGLOCN
"RTN","MAGVIM07",93,0)
 . . Q
"RTN","MAGVIM07",94,0)
 . ;
"RTN","MAGVIM07",95,0)
 . I ERROR Q  ; FileMan error encountered in exam lookup
"RTN","MAGVIM07",96,0)
 . I SKIP Q  ; do not include this record
"RTN","MAGVIM07",97,0)
 . ;
"RTN","MAGVIM07",98,0)
 . ; get procedure modifier(s)
"RTN","MAGVIM07",99,0)
 . S MAGTMPMOD=$NA(^TMP($T(+0),$J,"MODIFIER")),MODDATA=$NA(@MAGTMPMOD@("DILIST"))
"RTN","MAGVIM07",100,0)
 . K @MAGTMPMOD,MAGMSG
"RTN","MAGVIM07",101,0)
 . D LIST^DIC(75.1125,","_RAOIEN_",","@;.01;.01I;IX","",,,,,,,MAGTMPMOD,"MAGMSG") ; ICR 3074
"RTN","MAGVIM07",102,0)
 . I $D(MAGMSG) D ORDERERR(.ARRAY,.MAGMSG,-4) Q  ; fatal FileMan error
"RTN","MAGVIM07",103,0)
 . S MODCOUNT=+@MODDATA@(0)
"RTN","MAGVIM07",104,0)
 . S MODIFIER=""
"RTN","MAGVIM07",105,0)
 . F I=1:1:MODCOUNT D
"RTN","MAGVIM07",106,0)
 . . S:$L(MODIFIER) MODIFIER=MODIFIER_"~"
"RTN","MAGVIM07",107,0)
 . . S MODIEN=@MODDATA@(2,I)
"RTN","MAGVIM07",108,0)
 . . S MODIFIER=MODIFIER_@MODDATA@("ID",MODIEN,.01,"E")_"|"_^("I")
"RTN","MAGVIM07",109,0)
 . . Q
"RTN","MAGVIM07",110,0)
 . S $P(ORDER,"^",3)=MODIFIER
"RTN","MAGVIM07",111,0)
 . ;
"RTN","MAGVIM07",112,0)
 . S ARRAY(1)=ARRAY(1)+1,ARRAY(ARRAY(1)+1)=ORDER
"RTN","MAGVIM07",113,0)
 . Q
"RTN","MAGVIM07",114,0)
 K:$D(MAGTMPEXAM) @MAGTMPEXAM K:$D(MAGTMPMOD) @MAGTMPMOD ; cleanup
"RTN","MAGVIM07",115,0)
 Q
"RTN","MAGVIM07",116,0)
 ;
"RTN","MAGVIM07",117,0)
ORDERERR(ARRAY,MSG,ERRNUMB) ; handle FileMan errors in ORDER subroutine
"RTN","MAGVIM07",118,0)
 N I,NODE
"RTN","MAGVIM07",119,0)
 K ARRAY
"RTN","MAGVIM07",120,0)
 S I=1,NODE="MSG"
"RTN","MAGVIM07",121,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  D
"RTN","MAGVIM07",122,0)
 . S I=I+1,ARRAY(I)=NODE
"RTN","MAGVIM07",123,0)
 . I $D(@NODE) S ARRAY(I)=ARRAY(I)_"="_@NODE
"RTN","MAGVIM07",124,0)
 . Q
"RTN","MAGVIM07",125,0)
 S ARRAY(1)="-100,Fatal FileMan error #"_ERRNUMB
"RTN","MAGVIM07",126,0)
 Q
"RTN","MAGVIM07",127,0)
 ;
"RTN","MAGVIM07",128,0)
IMAGELOC(RESULT,RAOIEN,RAMLC) ; RPC = MAG DICOM SET IMAGING LOCATION
"RTN","MAGVIM07",129,0)
 N DIERR,MAGFDA,MAGMSG
"RTN","MAGVIM07",130,0)
 ;
"RTN","MAGVIM07",131,0)
 K RESULT
"RTN","MAGVIM07",132,0)
 S RAOIEN=$G(RAOIEN)
"RTN","MAGVIM07",133,0)
 I (RAOIEN'>0)!(RAOIEN'=+RAOIEN) D  Q
"RTN","MAGVIM07",134,0)
 . S RESULT="-1,Invalid or missing Radiology Order pointer: """_RAOIEN_"""."
"RTN","MAGVIM07",135,0)
 . Q
"RTN","MAGVIM07",136,0)
 ;
"RTN","MAGVIM07",137,0)
 S RAMLC=$G(RAMLC)
"RTN","MAGVIM07",138,0)
 I (RAMLC'>0)!(RAMLC'=+RAMLC) D  Q
"RTN","MAGVIM07",139,0)
 . S RESULT="-2,Invalid or missing Radiology Image Location identifier: """_RAMLC_"""."
"RTN","MAGVIM07",140,0)
 . Q
"RTN","MAGVIM07",141,0)
 ;
"RTN","MAGVIM07",142,0)
 I $$GET1^DIQ(75.1,RAOIEN,.01)="" D  Q  ; ICR 3074
"RTN","MAGVIM07",143,0)
 . S RESULT="-3,Missing Radiology Order for pointer: """_RAOIEN_"""."
"RTN","MAGVIM07",144,0)
 . Q
"RTN","MAGVIM07",145,0)
 ;
"RTN","MAGVIM07",146,0)
 I $$GET1^DIQ(79.1,RAMLC,.01)="" D  Q  ; ICR 5357
"RTN","MAGVIM07",147,0)
 . S RESULT="-4,Missing Radiology Image Location for pointer: """_RAMLC_"""."
"RTN","MAGVIM07",148,0)
 . Q
"RTN","MAGVIM07",149,0)
 ;
"RTN","MAGVIM07",150,0)
 I $$GET1^DIQ(75.1,RAOIEN,20)="" D  Q  ; ICR 3074
"RTN","MAGVIM07",151,0)
 . S MAGFDA(75.1,RAOIEN_",",20)=RAMLC ; IMAGING LOCATION
"RTN","MAGVIM07",152,0)
 . D FILE^DIE("","MAGFDA","MAGMSG") ; ICR 3074
"RTN","MAGVIM07",153,0)
 . I $D(MAGMSG) S RESULT="-5,Error setting Radiology Image Location" Q
"RTN","MAGVIM07",154,0)
 . S RESULT="1,Radiology Image Location set for pointer: """_RAOIEN_"""."
"RTN","MAGVIM07",155,0)
 . Q
"RTN","MAGVIM07",156,0)
 E  D
"RTN","MAGVIM07",157,0)
 . S RESULT="2,Radiology Image Location already set for pointer: """_RAOIEN_""", operation ignored."
"RTN","MAGVIM07",158,0)
 . Q
"RTN","MAGVIM07",159,0)
 Q
"RTN","MAGVIM07",160,0)
 ;
"RTN","MAGVIM07",161,0)
ADDROOM(RETURN,RAEXAM) ; RPC = MAG DICOM ADD CAMERA EQUIP RM
"RTN","MAGVIM07",162,0)
 N HIT,I,IENS,LOCNAME,OUTSIDESTUDY,MAGFDA,MAGMSG,RADIMGLOC,ROOMS
"RTN","MAGVIM07",163,0)
 K RETURN
"RTN","MAGVIM07",164,0)
 ;
"RTN","MAGVIM07",165,0)
 I $L($G(RAEXAM),"^")<2 S RETURN(0)="-1,Invalid or missing Radiology Exam pointer: """_RAEXAM_"""." Q
"RTN","MAGVIM07",166,0)
 ; 
"RTN","MAGVIM07",167,0)
 ; get the Radiology IMAGING LOCATION
"RTN","MAGVIM07",168,0)
 S IENS=$P(RAEXAM,"^",2)_","_$P(RAEXAM,"^",1)_","
"RTN","MAGVIM07",169,0)
 S RADIMGLOC=$$GET1^DIQ(70.02,IENS,4,"I")  ; ICR 1172
"RTN","MAGVIM07",170,0)
 I 'RADIMGLOC S RETURN(0)="-2,Invalid or missing Radiology IMAGING LOCATION for Exam pointer: """_RAEXAM_"""." Q
"RTN","MAGVIM07",171,0)
 S LOCNAME=$$GET1^DIQ(79.1,RADIMGLOC,.01)
"RTN","MAGVIM07",172,0)
 ;
"RTN","MAGVIM07",173,0)
 ; check if the IMAGING LOCATION has the OUTSIDE STUDY Camera/Equipment/Room
"RTN","MAGVIM07",174,0)
 S OUTSIDESTUDY="OUTSIDE STUDY" ; designated name
"RTN","MAGVIM07",175,0)
 D LIST^DIC(79.12,","_RADIMGLOC_",","@;.01","",,,,,,,"ROOMS","MAGMSG")
"RTN","MAGVIM07",176,0)
 I $D(MAGMSG) D ORDERERR(.RETURN,.MAGMSG,-3) Q  ; fatal FileMan error
"RTN","MAGVIM07",177,0)
 S HIT=0 F I=1:1:ROOMS("DILIST",0) D  Q:HIT
"RTN","MAGVIM07",178,0)
 . I ROOMS("DILIST","ID",I,".01")=OUTSIDESTUDY S HIT=1
"RTN","MAGVIM07",179,0)
 . Q
"RTN","MAGVIM07",180,0)
 I HIT S RETURN(0)="2,"_OUTSIDESTUDY_" is already defined for """_LOCNAME_"""." Q
"RTN","MAGVIM07",181,0)
 ;
"RTN","MAGVIM07",182,0)
 ; add the OUTSIDE STUDY Camera/Equipment/Room to the IMAGING LOCATION
"RTN","MAGVIM07",183,0)
 S MAGFDA(79.12,"+1,"_RADIMGLOC_",",.01)=OUTSIDESTUDY
"RTN","MAGVIM07",184,0)
 D UPDATE^DIE("E","MAGFDA","MAGIENS","MAGMSG") ; ICR 5357
"RTN","MAGVIM07",185,0)
 I $D(MAGMSG) D ORDERERR(.RETURN,.MAGMSG,-4) Q  ; fatal FileMan error
"RTN","MAGVIM07",186,0)
 S RETURN(0)="1,"_OUTSIDESTUDY_" has been added for """_LOCNAME_"""."
"RTN","MAGVIM07",187,0)
 Q
"RTN","MAGVIM07",188,0)
 ;
"RTN","MAGVIM07",189,0)
 ;+++ FileMan Screen code for the RAD TECHNOLOGIST field (#300) of the
"RTN","MAGVIM07",190,0)
 ;      IMAGING SITE PARAMETERS file (#2006.1).
"RTN","MAGVIM07",191,0)
 ;      
"RTN","MAGVIM07",192,0)
 ;      The direct "ARC" cross-reference read is supported by IA #3544.
"RTN","MAGVIM07",193,0)
 ;      
"RTN","MAGVIM07",194,0)
YNRADIST(DUZ,RADCLASS) ;
"RTN","MAGVIM07",195,0)
 ;
"RTN","MAGVIM07",196,0)
 N YN S YN=0
"RTN","MAGVIM07",197,0)
 N X F X=1:1:$L(RADCLASS) I $D(^VA(200,"ARC",$E(RADCLASS,X),DUZ)) S YN=1 Q
"RTN","MAGVIM07",198,0)
 Q YN
"RTN","MAGVIM07",199,0)
 ;
"RTN","MAGVIM07",200,0)
 ; MAGVIM07
"RTN","MAGVIM08")
0^82^B11155831
"RTN","MAGVIM08",1,0)
MAGVIM08 ;;WOIFO/NST - Imaging RPCs for Importer II ; 16 Feb 2012 12:51 PM
"RTN","MAGVIM08",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM08",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM08",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM08",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM08",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM08",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM08",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM08",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM08",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM08",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM08",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM08",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM08",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM08",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM08",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM08",17,0)
 ;;
"RTN","MAGVIM08",18,0)
 Q
"RTN","MAGVIM08",19,0)
 ;
"RTN","MAGVIM08",20,0)
 ;*****  Return number of records in MAG WORK ITEM file (#2006.941)
"RTN","MAGVIM08",21,0)
 ;       by TYPE, SUBTYPE, and STATUS
"RTN","MAGVIM08",22,0)
 ;    
"RTN","MAGVIM08",23,0)
 ; RPC:MAGV WORK ITEMS COUNT
"RTN","MAGVIM08",24,0)
 ; 
"RTN","MAGVIM08",25,0)
 ; Input Parameters
"RTN","MAGVIM08",26,0)
 ; ================
"RTN","MAGVIM08",27,0)
 ;   TYPE    = External value of TYPE field (#2006.941,1)
"RTN","MAGVIM08",28,0)
 ;   [SUBTYPE] = External value of SUBTYPE field (#2006.941,2)
"RTN","MAGVIM08",29,0)
 ;   [STATUS]  = External value of STATUS field (#2006.941,3) 
"RTN","MAGVIM08",30,0)
 ;
"RTN","MAGVIM08",31,0)
 ; Return Values
"RTN","MAGVIM08",32,0)
 ; =============
"RTN","MAGVIM08",33,0)
 ; if error MAGRY(0) = Error number `` Error message
"RTN","MAGVIM08",34,0)
 ; if success MAGRY(0) = 0` Number of records
"RTN","MAGVIM08",35,0)
 ;            MAGRY(1) = "SUBTYPE`STATUS`COUNT"   
"RTN","MAGVIM08",36,0)
 ;            MAGRY(1..n) = SUBTYPE  ` STATUS ` COUNT
"RTN","MAGVIM08",37,0)
 ;
"RTN","MAGVIM08",38,0)
CNTWI(MAGRY,TYPE,SUBTYPE,STATUS) ; RPC [MAGV WORK ITEMS COUNT]
"RTN","MAGVIM08",39,0)
 N SSEP,MAGRESA,MAGNXE,I,OUT,TOTAL,TYPEIEN,VSUB,VSTAT
"RTN","MAGVIM08",40,0)
 S SSEP=$$STATSEP^MAGVIM01
"RTN","MAGVIM08",41,0)
 I $G(TYPE)="" S MAGRY(0)=-1_SSEP_"No type provided" Q
"RTN","MAGVIM08",42,0)
 S SUBTYPE=$G(SUBTYPE)
"RTN","MAGVIM08",43,0)
 S STATUS=$G(STATUS)
"RTN","MAGVIM08",44,0)
 ;
"RTN","MAGVIM08",45,0)
 S TYPEIEN=$$FIND1^DIC(2006.9412,"","BX",TYPE,"","","MAGNXE") ; Find the IEN for TYPE
"RTN","MAGVIM08",46,0)
 I $D(MAGNXE("DIERR")) D  Q
"RTN","MAGVIM08",47,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"MAGNXE")
"RTN","MAGVIM08",48,0)
 . S MAGRY(0)=-1_SSEP_MAGRESA(1)
"RTN","MAGVIM08",49,0)
 . Q
"RTN","MAGVIM08",50,0)
 ;
"RTN","MAGVIM08",51,0)
 I TYPEIEN'>0 S MAGRY(0)=-2_SSEP_"Type is not found" Q
"RTN","MAGVIM08",52,0)
 ; 
"RTN","MAGVIM08",53,0)
 D FIND^DIC(2006.941,"","@;2;3","QX",TYPEIEN,"","T","","","OUT","MAGNXE")
"RTN","MAGVIM08",54,0)
 I $D(MAGNXE("DIERR")) D  Q
"RTN","MAGVIM08",55,0)
 . D MSG^DIALOG("A",.MAGRESA,245,5,"MAGNXE")
"RTN","MAGVIM08",56,0)
 . S MAGRY(0)=-3_SSEP_MAGRESA(1) Q  ; Error getting the list
"RTN","MAGVIM08",57,0)
 . Q
"RTN","MAGVIM08",58,0)
 ; Output the result
"RTN","MAGVIM08",59,0)
 ; 
"RTN","MAGVIM08",60,0)
 S I=0
"RTN","MAGVIM08",61,0)
 F  S I=$O(OUT("DILIST","ID",I)) Q:I'>0  D
"RTN","MAGVIM08",62,0)
 . S VSUB=OUT("DILIST","ID",I,2)
"RTN","MAGVIM08",63,0)
 . I (SUBTYPE'=""),(VSUB'=SUBTYPE) Q
"RTN","MAGVIM08",64,0)
 . S VSTAT=OUT("DILIST","ID",I,3)
"RTN","MAGVIM08",65,0)
 . I (STATUS'=""),(VSTAT'=STATUS) Q
"RTN","MAGVIM08",66,0)
 . S TOTAL(VSUB,VSTAT)=$G(TOTAL(VSUB,VSTAT))+1
"RTN","MAGVIM08",67,0)
 . Q
"RTN","MAGVIM08",68,0)
 ;
"RTN","MAGVIM08",69,0)
 D OUTRES(.MAGRY,.TOTAL)  ; Output the totals
"RTN","MAGVIM08",70,0)
 Q
"RTN","MAGVIM08",71,0)
 ;
"RTN","MAGVIM08",72,0)
OUTRES(MAGRY,TOTAL)  ; Output the final result by SUBTYPE and STATUS
"RTN","MAGVIM08",73,0)
 ; TOTAL - Input totals
"RTN","MAGVIM08",74,0)
 ;     TOTAL("DirectImport","New")=3
"RTN","MAGVIM08",75,0)
 ;     .....
"RTN","MAGVIM08",76,0)
 ; MAGRY - Output array
"RTN","MAGVIM08",77,0)
 ;   MAGRY(0)=0`Total pairs (SUBTYPE,STATUS)
"RTN","MAGVIM08",78,0)
 ;   MAGRY(1)="SUBTYPE`STATUS`COUNT"
"RTN","MAGVIM08",79,0)
 N SSEP,CNT,SUBVAL,STATVAL
"RTN","MAGVIM08",80,0)
 S SSEP=$$STATSEP^MAGVIM01
"RTN","MAGVIM08",81,0)
 K MAGRY
"RTN","MAGVIM08",82,0)
 S MAGRY(1)="SUBTYPE`STATUS`COUNT"
"RTN","MAGVIM08",83,0)
 S CNT=1
"RTN","MAGVIM08",84,0)
 S (SUBVAL,STATVAL)=""
"RTN","MAGVIM08",85,0)
 F  S SUBVAL=$O(TOTAL(SUBVAL)) Q:SUBVAL=""  D
"RTN","MAGVIM08",86,0)
 . F  S STATVAL=$O(TOTAL(SUBVAL,STATVAL)) Q:STATVAL=""  D
"RTN","MAGVIM08",87,0)
 . . S CNT=CNT+1,MAGRY(CNT)=SUBVAL_SSEP_STATVAL_SSEP_TOTAL(SUBVAL,STATVAL)
"RTN","MAGVIM08",88,0)
 . . Q
"RTN","MAGVIM08",89,0)
 . Q
"RTN","MAGVIM08",90,0)
 S MAGRY(0)=0_SSEP_(CNT-1)
"RTN","MAGVIM08",91,0)
 Q
"RTN","MAGVIM09")
0^83^B12035756
"RTN","MAGVIM09",1,0)
MAGVIM09 ;WOIFO/DAC/BT - Utilities for RPC calls for DICOM file processing ; 21 Jun 2012 1:36 PM
"RTN","MAGVIM09",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM09",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM09",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM09",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM09",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM09",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM09",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM09",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM09",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM09",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM09",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM09",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM09",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM09",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM09",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM09",17,0)
 ;;
"RTN","MAGVIM09",18,0)
 Q
"RTN","MAGVIM09",19,0)
 ;
"RTN","MAGVIM09",20,0)
 ; +++++  Get a record from a WORK ITEM file (#2006.941) by IEN 
"RTN","MAGVIM09",21,0)
 ; 
"RTN","MAGVIM09",22,0)
 ; Input parameters
"RTN","MAGVIM09",23,0)
 ; ================
"RTN","MAGVIM09",24,0)
 ; ID = IEN in the file
"RTN","MAGVIM09",25,0)
 ; STARTCNT = starting line in OUT array
"RTN","MAGVIM09",26,0)
 ; 
"RTN","MAGVIM09",27,0)
 ; Return Values
"RTN","MAGVIM09",28,0)
 ; =============
"RTN","MAGVIM09",29,0)
 ;   OUT(STARTCNT)="WorkItemHeader"_delimited "`" fields values
"RTN","MAGVIM09",30,0)
 ;   OUT(STARTCNT+1..n)=Message
"RTN","MAGVIM09",31,0)
 ;   OUT(n+1..m)=Tags`TagName`TagValue
"RTN","MAGVIM09",32,0)
 ;
"RTN","MAGVIM09",33,0)
GETWI(OUT,ID,STOPTAG) ; Return Work Item record in OUT array
"RTN","MAGVIM09",34,0)
 ; OUT      - array that holds the result
"RTN","MAGVIM09",35,0)
 ; ID       - IEN of the Work Item 
"RTN","MAGVIM09",36,0)
 ; STOPTAG  - The last tag of a record to be returned (optional)
"RTN","MAGVIM09",37,0)
 N FILE,IENS,MAGOUT,ERR,FLD,CNT,TAGS,I,AFLD,DATA
"RTN","MAGVIM09",38,0)
 N SSEP,OSEP,STOP,TAGNAME,TAGVALUE
"RTN","MAGVIM09",39,0)
 S SSEP=$$STATSEP^MAGVIM01,OSEP=$$OUTSEP^MAGVIM01
"RTN","MAGVIM09",40,0)
 S FILE=2006.941
"RTN","MAGVIM09",41,0)
 S IENS=ID_","
"RTN","MAGVIM09",42,0)
 D GETS^DIQ(FILE,ID_",","*","IE","MAGOUT","ERR")
"RTN","MAGVIM09",43,0)
 I $D(ERR) S OUT="-1"_SSEP_$G(ERR("DIERR",1,"TEXT",1)) Q 
"RTN","MAGVIM09",44,0)
 ; Type of the return field values - internal, external, date
"RTN","MAGVIM09",45,0)
 S AFLD(.01)="D"  ; CREATED DATE/TIME
"RTN","MAGVIM09",46,0)
 S AFLD(1)="E"    ; TYPE
"RTN","MAGVIM09",47,0)
 S AFLD(2)="E"    ; SUBTYPE
"RTN","MAGVIM09",48,0)
 S AFLD(3)="E"    ; STATUS
"RTN","MAGVIM09",49,0)
 S AFLD(4)="I"    ; LOCATION
"RTN","MAGVIM09",50,0)
 S AFLD(5)="E"    ; PRIORITY
"RTN","MAGVIM09",51,0)
 S AFLD(8)="IE"   ; CREATING USER
"RTN","MAGVIM09",52,0)
 S AFLD(9)="D"    ; LAST UPDATED DATE/TIME
"RTN","MAGVIM09",53,0)
 S AFLD(10)="IE"  ; LAST UPDATING USER
"RTN","MAGVIM09",54,0)
 S AFLD(14)="E"   ; CREATING APPLICATION
"RTN","MAGVIM09",55,0)
 S AFLD(15)="E"   ; LAST UPDATING APPLICATION
"RTN","MAGVIM09",56,0)
 ;
"RTN","MAGVIM09",57,0)
 ;Convert Institution IEN to Station Number
"RTN","MAGVIM09",58,0)
 I $G(MAGOUT(FILE,IENS,4,"I")) D
"RTN","MAGVIM09",59,0)
 . S MAGOUT(FILE,IENS,4,"I")=$$STA^XUAF4(MAGOUT(FILE,IENS,4,"I")) ;IA #2171 Get station number for an IEN
"RTN","MAGVIM09",60,0)
 . Q
"RTN","MAGVIM09",61,0)
 ;
"RTN","MAGVIM09",62,0)
 S CNT=OUT(0)+1
"RTN","MAGVIM09",63,0)
 S FLD=0
"RTN","MAGVIM09",64,0)
 S OUT(CNT)="WorkItemHeader"_SSEP_ID
"RTN","MAGVIM09",65,0)
 F  S FLD=$O(MAGOUT(FILE,IENS,FLD)) Q:FLD=""  D
"RTN","MAGVIM09",66,0)
 . Q:FLD=13  ; Word-processing field
"RTN","MAGVIM09",67,0)
 . I AFLD(FLD)["D" S OUT(CNT)=OUT(CNT)_OSEP_$$FMTE^XLFDT(MAGOUT(FILE,IENS,FLD,"I"),5)  ; Date fields
"RTN","MAGVIM09",68,0)
 . I AFLD(FLD)["I" S OUT(CNT)=OUT(CNT)_OSEP_MAGOUT(FILE,IENS,FLD,"I")
"RTN","MAGVIM09",69,0)
 . I AFLD(FLD)["E" S OUT(CNT)=OUT(CNT)_OSEP_MAGOUT(FILE,IENS,FLD,"E")
"RTN","MAGVIM09",70,0)
 . Q
"RTN","MAGVIM09",71,0)
 ; Get Message
"RTN","MAGVIM09",72,0)
 S I=0 F  S I=$O(MAGOUT(FILE,IENS,13,I)) Q:I'>0  D
"RTN","MAGVIM09",73,0)
 . S CNT=CNT+1,OUT(CNT)="Message"_SSEP_MAGOUT(FILE,IENS,13,I)
"RTN","MAGVIM09",74,0)
 . Q
"RTN","MAGVIM09",75,0)
 ; Get Tags
"RTN","MAGVIM09",76,0)
 S TAGS=2006.94111,I="",STOP=0
"RTN","MAGVIM09",77,0)
 S I=0
"RTN","MAGVIM09",78,0)
 F  S I=$O(^MAGV(2006.941,ID,4,I)) Q:I=""  D  Q:STOP=1
"RTN","MAGVIM09",79,0)
 . S DATA=$G(^MAGV(2006.941,ID,4,I,0))
"RTN","MAGVIM09",80,0)
 . S TAGNAME=$P(DATA,U,1),TAGVALUE=$P(DATA,U,2)
"RTN","MAGVIM09",81,0)
 . S CNT=CNT+1,OUT(CNT)="Tag"_SSEP_TAGNAME_OSEP_TAGVALUE
"RTN","MAGVIM09",82,0)
 . I $G(STOPTAG)'="",STOPTAG=TAGNAME S STOP=1
"RTN","MAGVIM09",83,0)
 S OUT(0)=CNT
"RTN","MAGVIM09",84,0)
 Q
"RTN","MAGVIM10")
0^84^B23098643
"RTN","MAGVIM10",1,0)
MAGVIM10 ;WOIFO/PMK/MLS/SG/DAC/JSL/MAT - Imaging RPCs for Importer ; 11 Oct 2012 3:13 PM
"RTN","MAGVIM10",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVIM10",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVIM10",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM10",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVIM10",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVIM10",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVIM10",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVIM10",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVIM10",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVIM10",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVIM10",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVIM10",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVIM10",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVIM10",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVIM10",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVIM10",17,0)
 ;;
"RTN","MAGVIM10",18,0)
 Q
"RTN","MAGVIM10",19,0)
 ;
"RTN","MAGVIM10",20,0)
 ;***** RETURNS THE LIST OF RADIOLOGY PROCEDURES
"RTN","MAGVIM10",21,0)
 ; RPC: MAGV GET RADIOLOGY PROCEDURES
"RTN","MAGVIM10",22,0)
 ;
"RTN","MAGVIM10",23,0)
 ;      Modified from PROC^MAGDRPCA (RPC: MAG DICOM RADIOLOGY PROCEDURES)
"RTN","MAGVIM10",24,0)
 ;        for MAG*3.0*118.
"RTN","MAGVIM10",25,0)
 ;
"RTN","MAGVIM10",26,0)
 ; .ARRAY        Reference to a local variable where results
"RTN","MAGVIM10",27,0)
 ;               are returned to.
"RTN","MAGVIM10",28,0)
 ;
"RTN","MAGVIM10",29,0)
 ; STATIONUM     STATION NUMBER (#99) of an INSTITUTION file (#4) entry.
"RTN","MAGVIM10",30,0)
 ;
"RTN","MAGVIM10",31,0)
 ; [FILTER]      If 1, does not return procedure types of "B"road or "P"arent.
"RTN","MAGVIM10",32,0)
 ; 
"RTN","MAGVIM10",33,0)
 ; NOTE
"RTN","MAGVIM10",34,0)
 ; ====
"RTN","MAGVIM10",35,0)
 ; 
"RTN","MAGVIM10",36,0)
 ; The call to $$IEN^XUAF4() is Supported IA#1271
"RTN","MAGVIM10",37,0)
 ;
"RTN","MAGVIM10",38,0)
GETPROCS(ARRAY,STATIONUM,FILTER) ;
"RTN","MAGVIM10",39,0)
 N IMAGTYPE      ; IEN of the imaging type (file #79.2)
"RTN","MAGVIM10",40,0)
 N INACTDAT      ; Inactivation date of the procedure
"RTN","MAGVIM10",41,0)
 N OMLDAT        ; Outside imaging location data (file #2006.5759)
"RTN","MAGVIM10",42,0)
 N OMLIEN        ; IEN in OUTSIDE IMAGING LOCATION file (#2006.5759)
"RTN","MAGVIM10",43,0)
 N RADPROC       ; Radiology procedure data (file #71)
"RTN","MAGVIM10",44,0)
 N TODAY         ; today's date in Fileman format
"RTN","MAGVIM10",45,0)
 N PROCTYPE      ; Type of procedure
"RTN","MAGVIM10",46,0)
 ;
"RTN","MAGVIM10",47,0)
 N BUF,ERROR,IEN,Z
"RTN","MAGVIM10",48,0)
 K ARRAY
"RTN","MAGVIM10",49,0)
 ;
"RTN","MAGVIM10",50,0)
 ;--- Validate parameters
"RTN","MAGVIM10",51,0)
 S STATIONUM=$G(STATIONUM)
"RTN","MAGVIM10",52,0)
 I (STATIONUM'>0)!(STATIONUM'=+STATIONUM)  D  Q
"RTN","MAGVIM10",53,0)
 . S ARRAY(1)="-1,Invalid STATION NUMBER: '"_STATIONUM_"'."
"RTN","MAGVIM10",54,0)
 . Q
"RTN","MAGVIM10",55,0)
 ;
"RTN","MAGVIM10",56,0)
 ;--- Get IEN of INSTITUTION file (#4) from STATION NUMBER (Supported IA# 2171)
"RTN","MAGVIM10",57,0)
 N IENINST ; IEN of INSTITUTION file (#4).
"RTN","MAGVIM10",58,0)
 S IENINST=$$IEN^XUAF4(STATIONUM)
"RTN","MAGVIM10",59,0)
 ;
"RTN","MAGVIM10",60,0)
 I IENINST=""  D  Q
"RTN","MAGVIM10",61,0)
 . S ARRAY(1)="-2,Could not resolve Institution from STATION NUMBER '"_STATIONUM_"'."
"RTN","MAGVIM10",62,0)
 . Q
"RTN","MAGVIM10",63,0)
 ;
"RTN","MAGVIM10",64,0)
 S ERROR=$$DISPLAY^MAGDAIRG(0)
"RTN","MAGVIM10",65,0)
 I ERROR=-1 D  Q
"RTN","MAGVIM10",66,0)
 . S ARRAY(1)="-3,""No Credit"" entries must be added to the IMAGING LOCATIONS file (#79.1)"
"RTN","MAGVIM10",67,0)
 . S ARRAY(2)=""
"RTN","MAGVIM10",68,0)
 . S ARRAY(3)="Use the IMPORTER MENU option CHECK OUTSIDE IMAGING LOCATION FILE"
"RTN","MAGVIM10",69,0)
 . S ARRAY(4)="on the VistA system to correct the problem."
"RTN","MAGVIM10",70,0)
 . Q
"RTN","MAGVIM10",71,0)
 I ERROR=-2 D  Q
"RTN","MAGVIM10",72,0)
 . S ARRAY(1)="-4,Entries must be added to the OUTSIDE IMAGING LOCATIONS file (#2006.5759)"
"RTN","MAGVIM10",73,0)
 . S ARRAY(2)=""
"RTN","MAGVIM10",74,0)
 . S ARRAY(3)="Use the IMPORTER MENU option BUILD OUTSIDE IMAGING LOCATION FILE"
"RTN","MAGVIM10",75,0)
 . S ARRAY(4)="on the VistA system to correct the problem."
"RTN","MAGVIM10",76,0)
 . Q
"RTN","MAGVIM10",77,0)
 I ERROR'=0 D  Q
"RTN","MAGVIM10",78,0)
 . S ARRAY(1)="-5,Unexpected error #"_ERROR_" returned by $$DISPLAY^MAGDAIRG(0)"
"RTN","MAGVIM10",79,0)
 . Q
"RTN","MAGVIM10",80,0)
 ;
"RTN","MAGVIM10",81,0)
 S (ARRAY(1),IEN)=0,TODAY=$$DT^XLFDT()
"RTN","MAGVIM10",82,0)
 F  S IEN=$O(^RAMIS(71,IEN))  Q:'IEN  D  ; Private IA (#1174) 
"RTN","MAGVIM10",83,0)
 . S RADPROC=^RAMIS(71,IEN,0),IMAGTYPE=+$P(RADPROC,U,12)
"RTN","MAGVIM10",84,0)
 . ;--- Get outside imaging location associated
"RTN","MAGVIM10",85,0)
 . ;--- with the imaging type of the procedure
"RTN","MAGVIM10",86,0)
 . S OMLIEN=$O(^MAGD(2006.5759,"D",IENINST,IMAGTYPE,""))  Q:'OMLIEN
"RTN","MAGVIM10",87,0)
 . S OMLDAT=$G(^MAGD(2006.5759,OMLIEN,0))
"RTN","MAGVIM10",88,0)
 . Q:$P(OMLDAT,U,4)'=IENINST  ; Has to be in the same INSTITUTION.
"RTN","MAGVIM10",89,0)
 . ;--- Prepare the procedure descriptor
"RTN","MAGVIM10",90,0)
 . S BUF=$P(RADPROC,U)_U_IEN      ; Procedure Name and IEN
"RTN","MAGVIM10",91,0)
 . S PROCTYPE=$P(RADPROC,U,6)     ; Type of Procedure
"RTN","MAGVIM10",92,0)
 . I $G(FILTER)=1,(PROCTYPE="B")!(PROCTYPE="P") Q
"RTN","MAGVIM10",93,0)
 . S $P(BUF,U,3)=PROCTYPE         ; Type of Procedure
"RTN","MAGVIM10",94,0)
 . S $P(BUF,U,4)=$P(RADPROC,U,9)  ; CPT Code (file #81)
"RTN","MAGVIM10",95,0)
 . S $P(BUF,U,5)=IMAGTYPE         ; Type of Imaging (file #79.2)
"RTN","MAGVIM10",96,0)
 . S INACTDAT=$P($G(^RAMIS(71,IEN,"I")),U)
"RTN","MAGVIM10",97,0)
 . I INACTDAT,INACTDAT<TODAY Q    ; ignore inactive procedures
"RTN","MAGVIM10",98,0)
 . S $P(BUF,U,6)=INACTDAT         ; Inactivation Date
"RTN","MAGVIM10",99,0)
 . S $P(BUF,U,7)=$P(OMLDAT,U)     ; Imaging Location (file #79.1)
"RTN","MAGVIM10",100,0)
 . S Z=$P(OMLDAT,U,3)
"RTN","MAGVIM10",101,0)
 . S $P(BUF,U,8)=Z                ; Hospital Location (file #44) - IEN
"RTN","MAGVIM10",102,0)
 . S $P(BUF,U,9)=$$GET1^DIQ(44,Z,.01) ; Hospital Location (file #44) - NAME
"RTN","MAGVIM10",103,0)
 . ;--- Add the descriptor to the result array
"RTN","MAGVIM10",104,0)
 . S ARRAY(1)=ARRAY(1)+1,ARRAY(ARRAY(1)+1)=BUF
"RTN","MAGVIM10",105,0)
 . Q
"RTN","MAGVIM10",106,0)
 Q
"RTN","MAGVIM10",107,0)
 ;
"RTN","MAGVIM10",108,0)
 ; MAGVIM10
"RTN","MAGVORDR")
0^85^B20723443
"RTN","MAGVORDR",1,0)
MAGVORDR ;WOIFO/RRB/BT - MAGV Order Lookup ; 11 Jul 2012 3:13 PM
"RTN","MAGVORDR",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVORDR",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVORDR",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVORDR",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVORDR",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVORDR",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVORDR",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVORDR",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVORDR",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVORDR",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVORDR",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVORDR",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVORDR",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVORDR",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVORDR",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVORDR",17,0)
 ;;
"RTN","MAGVORDR",18,0)
 ;
"RTN","MAGVORDR",19,0)
 ;
"RTN","MAGVORDR",20,0)
 ; Lookup the patient/study in the imaging service's database
"RTN","MAGVORDR",21,0)
 ; The imaging service, IMGSVC (RAD or CON), and case number, CASENUMB(accession)
"RTN","MAGVORDR",22,0)
 ; are required variables that must be passed to the LOOKUP subroutine.
"RTN","MAGVORDR",23,0)
 ; 
"RTN","MAGVORDR",24,0)
 ; 
"RTN","MAGVORDR",25,0)
 ; Output will be in the form of a string:
"RTN","MAGVORDR",26,0)
 ; 
"RTN","MAGVORDR",27,0)
 ;     Happy case example: 0~DFN~SITE (0~12345~660
"RTN","MAGVORDR",28,0)
 ;     
"RTN","MAGVORDR",29,0)
 ;     Incorrect accession # format or not present: -1~BAD CASE #
"RTN","MAGVORDR",30,0)
 ;     
"RTN","MAGVORDR",31,0)
 ;     No case on file: -1~NO CASE #
"RTN","MAGVORDR",32,0)
 ;     
"RTN","MAGVORDR",33,0)
 ;
"RTN","MAGVORDR",34,0)
 Q
"RTN","MAGVORDR",35,0)
 ;
"RTN","MAGVORDR",36,0)
LOOKUP(CASENUMB,IMGSVC) ; MAGV Order Lookup
"RTN","MAGVORDR",37,0)
 ;
"RTN","MAGVORDR",38,0)
 N RADATA
"RTN","MAGVORDR",39,0)
 ;
"RTN","MAGVORDR",40,0)
 I IMGSVC'="RAD",IMGSVC'="CON" Q "-1,INVALID IMAGE SERVICE"
"RTN","MAGVORDR",41,0)
 I $G(CASENUMB)="" Q "-1~BAD CASE #"
"RTN","MAGVORDR",42,0)
 ; 
"RTN","MAGVORDR",43,0)
 I IMGSVC="RAD" D
"RTN","MAGVORDR",44,0)
 . S RADATA=$$RADLKUP(CASENUMB)
"RTN","MAGVORDR",45,0)
 . Q
"RTN","MAGVORDR",46,0)
 I IMGSVC="CON" D
"RTN","MAGVORDR",47,0)
 . I CASENUMB'?1"GMRC-".1N.N S RADATA="-1~BAD CASE #" Q
"RTN","MAGVORDR",48,0)
 . S RADATA=$$CONLKUP(CASENUMB)
"RTN","MAGVORDR",49,0)
 . Q
"RTN","MAGVORDR",50,0)
 ;
"RTN","MAGVORDR",51,0)
 Q RADATA
"RTN","MAGVORDR",52,0)
 ;
"RTN","MAGVORDR",53,0)
RADLKUP(CASENUMB) ; Radiology patient/study lookup
"RTN","MAGVORDR",54,0)
 ;
"RTN","MAGVORDR",55,0)
 ; returns RADATA array DFN, DATETIME, and PROCDESC
"RTN","MAGVORDR",56,0)
 ;
"RTN","MAGVORDR",57,0)
 N CPTCODE ;-- CPT code for the procedure
"RTN","MAGVORDR",58,0)
 N CPTNAME ;-- CPT name for the procedure
"RTN","MAGVORDR",59,0)
 N DFN
"RTN","MAGVORDR",60,0)
 N EXAMSTS ;-- Exam status (don't post images to CANCELLED exams)
"RTN","MAGVORDR",61,0)
 N PROCIEN ;-- radiology procedure ien in ^RAMIS(71)
"RTN","MAGVORDR",62,0)
 N RAIX ;----- cross reference subscript for case number lookup
"RTN","MAGVORDR",63,0)
 N RADPT1 ;--- first level subscript in ^RADPT
"RTN","MAGVORDR",64,0)
 N RADPT2 ;--- second level subscript in ^RADPT (after "DT")
"RTN","MAGVORDR",65,0)
 N RADPT3 ;--- third level subscript in ^RADPT (after "P")
"RTN","MAGVORDR",66,0)
 N SITE
"RTN","MAGVORDR",67,0)
 N I,LIST,VARIABLE,X,Z
"RTN","MAGVORDR",68,0)
 ;
"RTN","MAGVORDR",69,0)
 ; find the patient/study in ^RARPT using the Radiology Case Number
"RTN","MAGVORDR",70,0)
 ; 
"RTN","MAGVORDR",71,0)
 S X=$S(CASENUMB'["-"!($L($T(ACCFIND^RAAPI))=0):$$OLDCASE(CASENUMB,.LIST),1:$$ACCFIND^RAAPI(CASENUMB,.LIST))
"RTN","MAGVORDR",72,0)
 I X'=1 Q "-1~NO CASE #"  ; No Case
"RTN","MAGVORDR",73,0)
 ;
"RTN","MAGVORDR",74,0)
 S X=LIST(1) ; two conditions, no accession number & duplicate
"RTN","MAGVORDR",75,0)
 S RADPT1=$P(X,"^",1),RADPT2=$P(X,"^",2),RADPT3=$P(X,"^",3)
"RTN","MAGVORDR",76,0)
 I RADPT1=""!(RADPT2="")!(RADPT3="") Q "-1~BAD CASE #"
"RTN","MAGVORDR",77,0)
 ;
"RTN","MAGVORDR",78,0)
 I '$D(^RADPT(RADPT1,0)) Q "-1~NO CASE #"  ; no patient demographics file pointer
"RTN","MAGVORDR",79,0)
 ;
"RTN","MAGVORDR",80,0)
 ; get patient demographics file pointer
"RTN","MAGVORDR",81,0)
 S X=^RADPT(RADPT1,0),DFN=$P(X,"^")
"RTN","MAGVORDR",82,0)
 S SITE=$P($G(^RADPT(RADPT1,"DT",RADPT2,0)),"^",3)
"RTN","MAGVORDR",83,0)
 ;
"RTN","MAGVORDR",84,0)
 ; do not include cancelled exam
"RTN","MAGVORDR",85,0)
 S EXAMSTS=$P(^RADPT(RADPT1,"DT",RADPT2,"P",RADPT3,0),"^",3)
"RTN","MAGVORDR",86,0)
 I EXAMSTS="" Q "-1~BAD CASE #"
"RTN","MAGVORDR",87,0)
 S EXAMSTS=$$GET1^DIQ(72,EXAMSTS,.01)
"RTN","MAGVORDR",88,0)
 I EXAMSTS="" Q "-1~BAD CASE #"
"RTN","MAGVORDR",89,0)
 I EXAMSTS="CANCELLED" Q "-1~NO CASE #"
"RTN","MAGVORDR",90,0)
 ;
"RTN","MAGVORDR",91,0)
 Q "0~"_DFN_"~"_SITE
"RTN","MAGVORDR",92,0)
 ;
"RTN","MAGVORDR",93,0)
CONLKUP(CASENUMB) ; CPRS Consult/Procedure patient/study lookup
"RTN","MAGVORDR",94,0)
 ;
"RTN","MAGVORDR",95,0)
 N DFN
"RTN","MAGVORDR",96,0)
 N EXAMSTS ;-- Exam status (don't post images to CANCELLED exams)
"RTN","MAGVORDR",97,0)
 N GMRCIEN
"RTN","MAGVORDR",98,0)
 N SITE
"RTN","MAGVORDR",99,0)
 ;
"RTN","MAGVORDR",100,0)
 S GMRCIEN=$P(CASENUMB,"-",2)
"RTN","MAGVORDR",101,0)
 S DFN=$$GET1^DIQ(123,GMRCIEN,.02,"I")
"RTN","MAGVORDR",102,0)
 I DFN="" Q "-1~NO CASE #" ; no patient demographics file pointer
"RTN","MAGVORDR",103,0)
 S SITE=$$GET1^DIQ(123,GMRCIEN,.05,"I")
"RTN","MAGVORDR",104,0)
 I SITE="" Q "-1~NO CASE #"  ; incomplete consult study
"RTN","MAGVORDR",105,0)
 ;
"RTN","MAGVORDR",106,0)
 S EXAMSTS=$$GET1^DIQ(123,GMRCIEN,8) ; check for cancelled exam
"RTN","MAGVORDR",107,0)
 I EXAMSTS="CANCELLED" Q "-1~NO CASE #"
"RTN","MAGVORDR",108,0)
 ;
"RTN","MAGVORDR",109,0)
 Q "0~"_DFN_"~"_SITE
"RTN","MAGVORDR",110,0)
 ;
"RTN","MAGVORDR",111,0)
OLDCASE(CASENUMB,LIST)  ; Lookup case numbers using old method
"RTN","MAGVORDR",112,0)
 ;
"RTN","MAGVORDR",113,0)
 S RAIX=$S($D(^RADPT("C")):"C",CASENUMB["-":"ADC",1:"AE") ; for Radiology Patch RA*5*7
"RTN","MAGVORDR",114,0)
 S RADPT1=$O(^RADPT(RAIX,CASENUMB,"")) I 'RADPT1 Q 0
"RTN","MAGVORDR",115,0)
 S RADPT2=$O(^RADPT(RAIX,CASENUMB,RADPT1,"")) I 'RADPT2 Q 0
"RTN","MAGVORDR",116,0)
 S RADPT3=$O(^RADPT(RAIX,CASENUMB,RADPT1,RADPT2,"")) I 'RADPT3 Q 0
"RTN","MAGVORDR",117,0)
 S LIST(1)=RADPT1_"^"_RADPT2_"^"_RADPT3
"RTN","MAGVORDR",118,0)
 Q 1  ; Success
"RTN","MAGVRS01")
0^86^B3699007
"RTN","MAGVRS01",1,0)
MAGVRS01 ;WOIFO/DAC - RPC calls for DICOM file processing ; 12 Apr 2010 1:22 PM
"RTN","MAGVRS01",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS01",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS01",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS01",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS01",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS01",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS01",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS01",17,0)
 ;;
"RTN","MAGVRS01",18,0)
 Q
"RTN","MAGVRS01",19,0)
ATSERIES(OUT,SERIESATTS) ;RPC - MAGV ATTACH SERIES
"RTN","MAGVRS01",20,0)
 D ATTACH^MAGVRS41(.OUT,2005.63,.SERIESATTS)
"RTN","MAGVRS01",21,0)
 Q
"RTN","MAGVRS01",22,0)
UPDSTUDY(OUT,STUDATTS,OVERRIDE) ;RPC - MAGV UPDATE STUDY
"RTN","MAGVRS01",23,0)
 D UPDATE^MAGVRS41(.OUT,2005.62,.STUDATTS,$G(OVERRIDE))
"RTN","MAGVRS01",24,0)
 Q
"RTN","MAGVRS04")
0^87^B4005478
"RTN","MAGVRS04",1,0)
MAGVRS04 ;WOIFO/DAC,MLH - RPC calls for DICOM file processing ; 11 Jan 2012 9:28 AM
"RTN","MAGVRS04",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS04",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS04",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS04",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS04",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS04",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS04",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS04",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS04",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS04",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS04",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS04",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS04",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS04",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS04",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS04",17,0)
 ;;
"RTN","MAGVRS04",18,0)
 Q
"RTN","MAGVRS04",19,0)
GETSTUDY(OUT,PROCIEN,STUDYIEN,OVERRIDE) ;RPC - MAGV GET STUDY
"RTN","MAGVRS04",20,0)
 D REFRESH^MAGVRS41(.OUT,2005.62,$G(STUDYIEN),$G(PROCIEN),$G(OVERRIDE))
"RTN","MAGVRS04",21,0)
 Q
"RTN","MAGVRS04",22,0)
INSTUDY(OUT,STUDYIEN,PROCIEN,OVERRIDE) ;RPC - MAGV INACTIVATE STUDY
"RTN","MAGVRS04",23,0)
 D INACTIVT^MAGVRS41(.OUT,2005.62,$G(STUDYIEN),$G(PROCIEN),$G(OVERRIDE))
"RTN","MAGVRS04",24,0)
 Q
"RTN","MAGVRS05")
0^88^B3883384
"RTN","MAGVRS05",1,0)
MAGVRS05 ;WOIFO/MLH,DAC - RPC calls for DICOM file processing ; 12 Apr 2010 5:11 PM
"RTN","MAGVRS05",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS05",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS05",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS05",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS05",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS05",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS05",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS05",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS05",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS05",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS05",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS05",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS05",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS05",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS05",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS05",17,0)
 ;;
"RTN","MAGVRS05",18,0)
 Q
"RTN","MAGVRS05",19,0)
ATSTUDY(OUT,STUDYATTS) ;RPC - create a new study
"RTN","MAGVRS05",20,0)
 D ATTACH^MAGVRS41(.OUT,2005.62,.STUDYATTS)
"RTN","MAGVRS05",21,0)
 Q
"RTN","MAGVRS05",22,0)
UPDPROC(OUT,PROCATTS,OVERRIDE) ;RPC - update procedure
"RTN","MAGVRS05",23,0)
 D UPDATE^MAGVRS41(.OUT,2005.61,.PROCATTS,$G(OVERRIDE))
"RTN","MAGVRS05",24,0)
 Q
"RTN","MAGVRS05",25,0)
FINDSTDY(OUT,STUDYUID) ; RPC - find study by UID
"RTN","MAGVRS05",26,0)
 D FINDBUID^MAGVRS41(.OUT,2005.62,STUDYUID)
"RTN","MAGVRS05",27,0)
 Q 
"RTN","MAGVRS06")
0^89^B4241857
"RTN","MAGVRS06",1,0)
MAGVRS06 ;WOIFO/MLH,DAC - RPC calls for DICOM file processing ; 13 Apr 2010 5:23 PM
"RTN","MAGVRS06",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS06",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS06",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS06",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS06",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS06",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS06",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS06",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS06",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS06",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS06",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS06",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS06",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS06",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS06",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS06",17,0)
 ;;
"RTN","MAGVRS06",18,0)
 Q
"RTN","MAGVRS06",19,0)
ATPROC(OUT,PROCATTS) ;RPC - create a new procedure reference
"RTN","MAGVRS06",20,0)
 D ATTACH^MAGVRS41(.OUT,2005.61,.PROCATTS)
"RTN","MAGVRS06",21,0)
 Q
"RTN","MAGVRS06",22,0)
CREPAT(OUT,PATATTS) ;RPC - create a new patient reference
"RTN","MAGVRS06",23,0)
 D ATTACH^MAGVRS41(.OUT,2005.6,.PATATTS)
"RTN","MAGVRS06",24,0)
 Q
"RTN","MAGVRS06",25,0)
UPDPAT(OUT,PATATTS,OVERRIDE) ;RPC - update patient
"RTN","MAGVRS06",26,0)
 D UPDATE^MAGVRS41(.OUT,2005.6,.PATATTS,$G(OVERRIDE))
"RTN","MAGVRS06",27,0)
 Q
"RTN","MAGVRS06",28,0)
FINDPAT(OUT,PATATTS) ; RPC - find patient by attributes
"RTN","MAGVRS06",29,0)
 D FINDBYAT^MAGVRS42(.OUT,2005.6,.PATATTS)
"RTN","MAGVRS06",30,0)
 Q
"RTN","MAGVRS06",31,0)
INPAT(OUT,PATIEN) ; RPC - inactivate patient
"RTN","MAGVRS06",32,0)
 D INACTIVT^MAGVRS41(.OUT,2005.6,$G(PATIEN),0,0)
"RTN","MAGVRS06",33,0)
 Q
"RTN","MAGVRS07")
0^90^B4131532
"RTN","MAGVRS07",1,0)
MAGVRS07 ;WOIFO/MLH - RPC calls for DICOM file processing ; 15 Apr 2010 4:05 PM
"RTN","MAGVRS07",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS07",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS07",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS07",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS07",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS07",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS07",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS07",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS07",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS07",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS07",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS07",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS07",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS07",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS07",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS07",17,0)
 ;;
"RTN","MAGVRS07",18,0)
 Q
"RTN","MAGVRS07",19,0)
GETPROC(OUT,PROCIEN,STUDYIEN,OVERRIDE) ;RPC - get study data
"RTN","MAGVRS07",20,0)
 D REFRESH^MAGVRS41(.OUT,2005.62,STUDYIEN,$G(PROCIEN),$G(OVERRIDE))
"RTN","MAGVRS07",21,0)
 Q
"RTN","MAGVRS07",22,0)
INPROC(OUT,PROCIEN,PATIEN,OVERRIDE) ;RPC - inactivate a procedure
"RTN","MAGVRS07",23,0)
 D INACTIVT^MAGVRS41(.OUT,2005.61,PROCIEN,$G(PATIEN),$G(OVERRIDE))
"RTN","MAGVRS07",24,0)
 Q
"RTN","MAGVRS07",25,0)
FINDPROC(OUT,PROCATTS) ;RPC - find a procedure given attributes
"RTN","MAGVRS07",26,0)
 D FINDBYAT^MAGVRS42(.OUT,2005.61,.PROCATTS)
"RTN","MAGVRS07",27,0)
 Q
"RTN","MAGVRS08")
0^91^B33958165
"RTN","MAGVRS08",1,0)
MAGVRS08 ;WOIFO/MLH,NST - RPC calls for DICOM file processing ; 28 Feb 2012 3:51 PM
"RTN","MAGVRS08",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS08",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS08",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS08",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS08",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS08",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS08",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS08",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS08",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS08",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS08",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS08",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS08",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS08",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS08",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS08",17,0)
 ;;
"RTN","MAGVRS08",18,0)
 Q
"RTN","MAGVRS08",19,0)
GETPATA(OUT,PATREFIEN) ; RPC - MAGV GET PAT REF ATTS
"RTN","MAGVRS08",20,0)
 D REFRESH^MAGVRS41(.OUT,2005.6,PATREFIEN,0,1)
"RTN","MAGVRS08",21,0)
 Q
"RTN","MAGVRS08",22,0)
GETPROCA(OUT,PATREFIEN,PROCREFIEN,OVERRIDE) ; RPC - MAGV GET PROC REF ATTS
"RTN","MAGVRS08",23,0)
 D REFRESH^MAGVRS41(.OUT,2005.61,PROCREFIEN,$G(PATREFIEN),$G(OVERRIDE))
"RTN","MAGVRS08",24,0)
 Q
"RTN","MAGVRS08",25,0)
GETPATI(OUT,PATREFIEN) ; RPC - MAGV GET PAT INFO
"RTN","MAGVRS08",26,0)
 ; Currently works for VA patients only
"RTN","MAGVRS08",27,0)
 N OSEP,ISEP,SSEP,PATREFATTS,I,PATREFATTNAM
"RTN","MAGVRS08",28,0)
 N NAMEVAL,FMPREF,PATATTS,ERROR,OUTIX,DOB,PTSENS
"RTN","MAGVRS08",29,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS08",30,0)
 I $D(PATREFIEN)#10=0 S OUT(1)="-1"_SSEP_SSEP_"PATIENT REFERENCE IEN NOT RECEIVED" Q
"RTN","MAGVRS08",31,0)
 I +PATREFIEN'=PATREFIEN S OUT(1)="-2"_SSEP_SSEP_"INVALID PATIENT REFERENCE IEN FORMAT" Q
"RTN","MAGVRS08",32,0)
 I '$D(^MAGV(2005.6,PATREFIEN)) S OUT(1)="-3"_SSEP_SSEP_"PATIENT REFERENCE NOT FOUND" Q
"RTN","MAGVRS08",33,0)
 D REFRESH^MAGVRS41(.PATREFATTS,2005.6,PATREFIEN,0,1)
"RTN","MAGVRS08",34,0)
 I $G(PATREFATTS(1)) S OUT(1)=PATREFATTS(1) Q  ; error in pt attribute fetch
"RTN","MAGVRS08",35,0)
 S I=1
"RTN","MAGVRS08",36,0)
 F  S I=$O(PATREFATTS(I)) Q:'I  D
"RTN","MAGVRS08",37,0)
 . S NAMEVAL=$P(PATREFATTS(I),SSEP,1)
"RTN","MAGVRS08",38,0)
 . S PATREFATTNAM($P(NAMEVAL,OSEP,1))=$P(NAMEVAL,OSEP,2)
"RTN","MAGVRS08",39,0)
 . Q
"RTN","MAGVRS08",40,0)
 I $G(PATREFATTNAM("ID TYPE"))'="D" S OUT(1)="-4"_SSEP_SSEP_"VA DFNs ONLY" Q
"RTN","MAGVRS08",41,0)
 I '$G(PATREFATTNAM("ENTERPRISE PATIENT ID")) S OUT(1)="-5"_SSEP_SSEP_"MISSING ENTERPRISE PATIENT ID" Q
"RTN","MAGVRS08",42,0)
 S FMPREF=PATREFATTNAM("ENTERPRISE PATIENT ID")
"RTN","MAGVRS08",43,0)
 N DFN,VA,VADM,VAERR,TMP
"RTN","MAGVRS08",44,0)
 S DFN=FMPREF
"RTN","MAGVRS08",45,0)
 D DEM^VADPT  ; Supported IA (#10061)
"RTN","MAGVRS08",46,0)
 I +$G(VAERR) S OUT(1)=(-$G(VAERR))_SSEP_SSEP_"NO PATIENT INFO("_DFN_")" Q
"RTN","MAGVRS08",47,0)
 ; VADM(1)=Patient's name
"RTN","MAGVRS08",48,0)
 ; VADM(5)=Patient's sex (M^MALE)
"RTN","MAGVRS08",49,0)
 ; VADM(3)=Patient's DOB (internal^external)
"RTN","MAGVRS08",50,0)
 S TMP=$S($T(GETICN^MPIF001)'="":$$GETICN^MPIF001(DFN),1:"-1^NO MPI") ; Supported IA (#2701)
"RTN","MAGVRS08",51,0)
 S OUTIX=1,OUT(OUTIX)=0_SSEP
"RTN","MAGVRS08",52,0)
 S OUTIX=OUTIX+1,OUT(OUTIX)="ICN"_OSEP_TMP_SSEP
"RTN","MAGVRS08",53,0)
 S:$D(VA("PID")) OUTIX=OUTIX+1,OUT(OUTIX)="PID"_OSEP_$TR(VA("PID"),"-","")_SSEP
"RTN","MAGVRS08",54,0)
 S:$D(VADM(1)) OUTIX=OUTIX+1,OUT(OUTIX)="NAME"_OSEP_VADM(1)_SSEP
"RTN","MAGVRS08",55,0)
 S:$D(VADM(5)) OUTIX=OUTIX+1,OUT(OUTIX)="SEX"_OSEP_$P(VADM(5),"^")_SSEP
"RTN","MAGVRS08",56,0)
 S:$G(VADM(3)) OUTIX=OUTIX+1,OUT(OUTIX)="DOB"_OSEP_(17000000+VADM(3))_SSEP
"RTN","MAGVRS08",57,0)
 ; pt sensitivity
"RTN","MAGVRS08",58,0)
 K PTSENS S:'$G(DUZ) DUZ=.5 D PTSEC^DGSEC4(.PTSENS,FMPREF) ; ICR 3027
"RTN","MAGVRS08",59,0)
 S:$D(PTSENS(1))#10 OUTIX=OUTIX+1,OUT(OUTIX)="PATIENT SENSITIVITY"_OSEP_PTSENS(1)_SSEP
"RTN","MAGVRS08",60,0)
 Q
"RTN","MAGVRS08",61,0)
GETACCNO(OUT,PATREFIEN,PROCREFIEN,OVERRIDE) ; RPC - MAGV GET ACCESSION NUM
"RTN","MAGVRS08",62,0)
 N OSEP,ISEP,SSEP,ATTARY,ATTIX,ATTDTA,ACCNUM
"RTN","MAGVRS08",63,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS08",64,0)
 D REFRESH^MAGVRS41(.ATTARY,2005.61,PROCREFIEN,$G(PATREFIEN),$G(OVERRIDE))
"RTN","MAGVRS08",65,0)
 I ATTARY(1) S OUT(1)=ATTARY(1) Q  ; an exception was found
"RTN","MAGVRS08",66,0)
 S ATTIX=1
"RTN","MAGVRS08",67,0)
 F  S ATTIX=$O(ATTARY(ATTIX)) Q:'ATTIX  D  Q:$D(ACCNUM)
"RTN","MAGVRS08",68,0)
 . S ATTDTA=ATTARY(ATTIX)
"RTN","MAGVRS08",69,0)
 . S:$P(ATTDTA,OSEP,1)="ACCESSION NUMBER" ACCNUM=$P(ATTDTA,OSEP,2)
"RTN","MAGVRS08",70,0)
 . Q
"RTN","MAGVRS08",71,0)
 S OUT=$S($G(ACCNUM)'="":0_SSEP_ACCNUM,1:-99_SSEP_SSEP_"Accession number not defined")
"RTN","MAGVRS08",72,0)
 Q
"RTN","MAGVRS08",73,0)
GETPROCI(OUT,PATREFIEN,PROCREFIEN,OVERRIDE) ; RPC - MAGV GET PROCEDURE INFO
"RTN","MAGVRS08",74,0)
 N OSEP,ISEP,SSEP,PROCARY,ACCRETURN,ACCNUM,PROCARYIX,NAMVAL,SPCLTY,ACCNUM
"RTN","MAGVRS08",75,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS08",76,0)
 D GETPROCA(.PROCARY,$G(PATREFIEN),$G(PROCREFIEN),$G(OVERRIDE))
"RTN","MAGVRS08",77,0)
 I $G(PROCARY(1)) S OUT(1)=PROCARY(1) Q  ; an exception was found
"RTN","MAGVRS08",78,0)
 S PROCARYIX=1
"RTN","MAGVRS08",79,0)
 F  S PROCARYIX=$O(PROCARY(PROCARYIX)) Q:'PROCARYIX  D
"RTN","MAGVRS08",80,0)
 . S NAMVAL=$P(PROCARY(PROCARYIX),SSEP,1)
"RTN","MAGVRS08",81,0)
 . I $P(NAMVAL,OSEP,1)="PROCEDURE TYPE" S SPCLTY=$P(NAMVAL,OSEP,2) Q
"RTN","MAGVRS08",82,0)
 . I $P(NAMVAL,OSEP,1)="ACCESSION NUMBER" S ACCNUM=$P(NAMVAL,OSEP,2) Q
"RTN","MAGVRS08",83,0)
 . Q
"RTN","MAGVRS08",84,0)
 I $G(SPCLTY)="" S OUT(1)="-21"_SSEP_SSEP_"No specialty associated with procedure reference" Q
"RTN","MAGVRS08",85,0)
 I $G(ACCNUM)="" S OUT(1)="-22"_SSEP_SSEP_"No accession number associated with procedure reference" Q
"RTN","MAGVRS08",86,0)
 I SPCLTY="RAD" D GETRPROC^MAGVRS81(.OUT,ACCNUM) Q
"RTN","MAGVRS08",87,0)
 I SPCLTY="CON" D GETCPROC^MAGVRS82(.OUT,ACCNUM) Q
"RTN","MAGVRS08",88,0)
 S OUT(1)="-199"_SSEP_SSEP_"Specialty "_SPCLTY_" not processed at this time" Q
"RTN","MAGVRS08",89,0)
 Q
"RTN","MAGVRS08",90,0)
 ;
"RTN","MAGVRS08",91,0)
GETRPT(OUT,PATREFIEN,PROCREFIEN,OVERRIDE) ; RPC - MAGV GET REPORT
"RTN","MAGVRS08",92,0)
 N OSEP,ISEP,SSEP,ACCRETURN,ACCNUM,PROCARYIX,NAMVAL,SPCLTY,ACCNUM
"RTN","MAGVRS08",93,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS08",94,0)
 D GETPROCA(.PROCARY,$G(PATREFIEN),$G(PROCREFIEN),$G(OVERRIDE))
"RTN","MAGVRS08",95,0)
 I $G(PROCARY(1)) S OUT(1)=PROCARY(1) Q  ; an exception was found
"RTN","MAGVRS08",96,0)
 S PROCARYIX=1
"RTN","MAGVRS08",97,0)
 F  S PROCARYIX=$O(PROCARY(PROCARYIX)) Q:'PROCARYIX  D
"RTN","MAGVRS08",98,0)
 . S NAMVAL=$P(PROCARY(PROCARYIX),SSEP,1)
"RTN","MAGVRS08",99,0)
 . I $P(NAMVAL,OSEP,1)="PROCEDURE TYPE" S SPCLTY=$P(NAMVAL,OSEP,2) Q
"RTN","MAGVRS08",100,0)
 . I $P(NAMVAL,OSEP,1)="ACCESSION NUMBER" S ACCNUM=$P(NAMVAL,OSEP,2) Q
"RTN","MAGVRS08",101,0)
 . Q
"RTN","MAGVRS08",102,0)
 I $G(SPCLTY)="" S OUT(1)="-21"_SSEP_SSEP_"No specialty associated with procedure reference" Q
"RTN","MAGVRS08",103,0)
 I $G(ACCNUM)="" S OUT(1)="-22"_SSEP_SSEP_"No accession number associated with procedure reference" Q
"RTN","MAGVRS08",104,0)
 I SPCLTY="RAD" D GETRRPT^MAGVRS81(.OUT,ACCNUM) Q
"RTN","MAGVRS08",105,0)
 I SPCLTY="CON" D GETCRPT^MAGVRS82(.OUT,ACCNUM) Q
"RTN","MAGVRS08",106,0)
 S OUT(1)="-199"_SSEP_SSEP_"Specialty "_SPCLTY_" not processed at this time" Q
"RTN","MAGVRS08",107,0)
 Q
"RTN","MAGVRS08",108,0)
POP(ARY,NAME,VALUE) ; populate an array with a name value pair
"RTN","MAGVRS08",109,0)
 S ARY($O(ARY(" "),-1)+1)=NAME_OSEP_VALUE_SSEP
"RTN","MAGVRS08",110,0)
 Q
"RTN","MAGVRS09")
0^92^B4813861
"RTN","MAGVRS09",1,0)
MAGVRS09 ;WOIFO/MLH - RPC calls for DICOM file processing ; 12 Jan 2012 5:14 PM
"RTN","MAGVRS09",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS09",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS09",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS09",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS09",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS09",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS09",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS09",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS09",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS09",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS09",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS09",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS09",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS09",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS09",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS09",17,0)
 ;;
"RTN","MAGVRS09",18,0)
 Q
"RTN","MAGVRS09",19,0)
 ;
"RTN","MAGVRS09",20,0)
TRAVPROC(OUT,IEN,DIR,CHILDIEN) ; RPC - MAGV TRAVERSE PROC REF
"RTN","MAGVRS09",21,0)
 D TRAVERSE^MAGVRS45(.OUT,2005.6,$G(IEN),$G(DIR),$G(CHILDIEN))
"RTN","MAGVRS09",22,0)
 Q
"RTN","MAGVRS09",23,0)
TRAVSTDY(OUT,IEN,DIR,CHILDIEN) ; RPC - MAGV TRAVERSE STUDY
"RTN","MAGVRS09",24,0)
 D TRAVERSE^MAGVRS45(.OUT,2005.61,$G(IEN),$G(DIR),$G(CHILDIEN))
"RTN","MAGVRS09",25,0)
 Q
"RTN","MAGVRS09",26,0)
TRAVSERS(OUT,IEN,DIR,CHILDIEN) ; RPC - MAGV TRAVERSE SERIES
"RTN","MAGVRS09",27,0)
 D TRAVERSE^MAGVRS45(.OUT,2005.62,$G(IEN),$G(DIR),$G(CHILDIEN))
"RTN","MAGVRS09",28,0)
 Q
"RTN","MAGVRS09",29,0)
TRAVSOP(OUT,IEN,DIR,CHILDIEN) ; RPC - MAGV TRAVERSE SOP
"RTN","MAGVRS09",30,0)
 D TRAVERSE^MAGVRS45(.OUT,2005.63,$G(IEN),$G(DIR),$G(CHILDIEN))
"RTN","MAGVRS09",31,0)
 Q
"RTN","MAGVRS09",32,0)
TRAVIMG(OUT,IEN,DIR,CHILDIEN) ; RPC - MAGV TRAVERSE IMAGE FILE
"RTN","MAGVRS09",33,0)
 D TRAVERSE^MAGVRS45(.OUT,2005.64,$G(IEN),$G(DIR),$G(CHILDIEN))
"RTN","MAGVRS09",34,0)
 Q
"RTN","MAGVRS11")
0^93^B3844243
"RTN","MAGVRS11",1,0)
MAGVRS11 ;WOIFO/DAC,MLH - RPC calls for DICOM file processing ; 10 Jan 2012 01:20 PM
"RTN","MAGVRS11",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS11",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS11",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS11",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS11",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS11",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS11",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS11",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS11",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS11",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS11",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS11",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS11",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS11",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS11",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS11",17,0)
 ;;
"RTN","MAGVRS11",18,0)
 Q
"RTN","MAGVRS11",19,0)
ATSOP(OUT,SOPATTS) ;RPC - create a new sop
"RTN","MAGVRS11",20,0)
 D ATTACH^MAGVRS41(.OUT,2005.64,.SOPATTS)
"RTN","MAGVRS11",21,0)
 Q
"RTN","MAGVRS11",22,0)
UPSERIES(OUT,SERATTS,OVERRIDE) ;RPC - update series
"RTN","MAGVRS11",23,0)
 D UPDATE^MAGVRS41(.OUT,2005.63,.SERATTS,$G(OVERRIDE))
"RTN","MAGVRS11",24,0)
 Q
"RTN","MAGVRS11",25,0)
FINDSER(OUT,SERUID) ; RPC - find series by UID
"RTN","MAGVRS11",26,0)
 D FINDBUID^MAGVRS41(.OUT,2005.63,$G(SERUID))
"RTN","MAGVRS11",27,0)
 Q
"RTN","MAGVRS14")
0^94^B6147415
"RTN","MAGVRS14",1,0)
MAGVRS14 ;WOIFO/DAC,MLH - RPC calls for DICOM file processing ; 26 Jan 2012 11:01 PM
"RTN","MAGVRS14",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS14",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS14",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS14",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS14",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS14",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS14",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS14",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS14",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS14",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS14",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS14",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS14",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS14",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS14",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS14",17,0)
 ;;
"RTN","MAGVRS14",18,0)
 Q
"RTN","MAGVRS14",19,0)
GETSER(OUT,STUDYIEN,SERIEN,OVERRIDE) ;RPC - MAGV GET SERIES
"RTN","MAGVRS14",20,0)
 D REFRESH^MAGVRS41(.OUT,2005.63,$G(SERIEN),$G(STUDYIEN),$G(OVERRIDE))
"RTN","MAGVRS14",21,0)
 Q
"RTN","MAGVRS14",22,0)
INSERIES(OUT,SERIEN,STUDYIEN,OVERRIDE) ; RPC - MAGV INACTIVATE SERIES
"RTN","MAGVRS14",23,0)
 D INACTIVT^MAGVRS41(.OUT,2005.63,$G(SERIEN),$G(STUDYIEN),$G(OVERRIDE))
"RTN","MAGVRS14",24,0)
 Q
"RTN","MAGVRS14",25,0)
FINDBYRF(OUT,REFUID) ; RPC - MAGV FIND SERIES BY UID
"RTN","MAGVRS14",26,0)
 ; Looks up for Series by Reference UID only.
"RTN","MAGVRS14",27,0)
 ; Returns null if no such Series found, else returns one or a list of Series Handles. Note: one Reference UID can point to multiple series.
"RTN","MAGVRS14",28,0)
 ; Generates exception on invalid input.
"RTN","MAGVRS14",29,0)
 ;
"RTN","MAGVRS14",30,0)
 ; Find reference IEN based on UID
"RTN","MAGVRS14",31,0)
 ; Look for IEN in Series
"RTN","MAGVRS14",32,0)
 N FILENO,I,IEN,STATUS,FIELD,OSEP,ISEP,SSEP
"RTN","MAGVRS14",33,0)
 S FILENO=2005.63
"RTN","MAGVRS14",34,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS14",35,0)
 I $G(REFUID)="" S OUT(1)="-2"_SSEP_"UID has no value" Q
"RTN","MAGVRS14",36,0)
 S I=1,IEN=""
"RTN","MAGVRS14",37,0)
 F  D  Q:IEN=""  S I=I+1
"RTN","MAGVRS14",38,0)
 . S IEN=$O(^MAGV(FILENO,"B",REFUID,IEN))
"RTN","MAGVRS14",39,0)
 . Q:'IEN
"RTN","MAGVRS14",40,0)
 . S FIELD=$$GETFIELD^MAGVRS41(FILENO,"STATUS")
"RTN","MAGVRS14",41,0)
 . S STATUS=$$GET1^DIQ(FILENO,IEN,FIELD,"I")
"RTN","MAGVRS14",42,0)
 . I IEN'="",STATUS'="I" S OUT(I)="0"_SSEP_SSEP_IEN
"RTN","MAGVRS14",43,0)
 . Q
"RTN","MAGVRS14",44,0)
 I $G(OUT(1))="" S OUT(1)="-1"_SSEP_"Series reference UID not found"
"RTN","MAGVRS14",45,0)
 Q
"RTN","MAGVRS15")
0^95^B5110681
"RTN","MAGVRS15",1,0)
MAGVRS15 ;WOIFO/MLH - RPC calls for DICOM file processing ; 31 Aug 2011 3:28 PM
"RTN","MAGVRS15",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS15",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS15",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS15",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS15",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS15",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS15",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS15",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS15",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS15",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS15",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS15",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS15",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS15",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS15",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS15",17,0)
 ;;
"RTN","MAGVRS15",18,0)
 Q
"RTN","MAGVRS15",19,0)
FNDBYTIU(OUT,TIUREF) ; RPC - MAGV FIND SERIES BY TIU REFERENCE
"RTN","MAGVRS15",20,0)
 ; Looks up for Series by TIU Note Reference.
"RTN","MAGVRS15",21,0)
 ; Returns null if no Series found corresponding to a TIU Note, else
"RTN","MAGVRS15",22,0)
 ;  returns one or a list of Series Handles.
"RTN","MAGVRS15",23,0)
 ;  Note: one TIU Note can point to multiple Series.
"RTN","MAGVRS15",24,0)
 ; Generates exception on invalid input.
"RTN","MAGVRS15",25,0)
 ;
"RTN","MAGVRS15",26,0)
 ; Find reference IEN based on UID
"RTN","MAGVRS15",27,0)
 ; Look for IEN in Series
"RTN","MAGVRS15",28,0)
 N I,IEN,STATUS,FIELD,OSEP,ISEP,SSEP
"RTN","MAGVRS15",29,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS15",30,0)
 I TIUREF="" S OUT(1)="-2"_SSEP_"UID has no value" Q
"RTN","MAGVRS15",31,0)
 S FIELD=$$GETFIELD^MAGVRS41(2005.63,"STATUS")
"RTN","MAGVRS15",32,0)
 S I=1,IEN=""
"RTN","MAGVRS15",33,0)
 F  S IEN=$O(^MAGV(2005.63,"ATIU",TIUREF,IEN))  Q:IEN=""  D
"RTN","MAGVRS15",34,0)
 . S STATUS=$$GET1^DIQ(2005.63,IEN,FIELD)
"RTN","MAGVRS15",35,0)
 . I STATUS'="INACTIVE" S OUT(I)="0"_SSEP_SSEP_IEN,I=I+1
"RTN","MAGVRS15",36,0)
 . Q
"RTN","MAGVRS15",37,0)
 I $G(OUT(1))="" S OUT(1)="-1"_SSEP_"TIU note reference not found"
"RTN","MAGVRS15",38,0)
 Q
"RTN","MAGVRS21")
0^96^B3838605
"RTN","MAGVRS21",1,0)
MAGVRS21 ;WOIFO/DAC,MLH - RPC calls for DICOM file processing ; 10 Jan 2012 5:30 PM
"RTN","MAGVRS21",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS21",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS21",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS21",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS21",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS21",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS21",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS21",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS21",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS21",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS21",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS21",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS21",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS21",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS21",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS21",17,0)
 ;;
"RTN","MAGVRS21",18,0)
 Q
"RTN","MAGVRS21",19,0)
ATFILE(OUT,FILEATTS) ;RPC - MAGV ATTACH FILE
"RTN","MAGVRS21",20,0)
 D ATTACH^MAGVRS41(.OUT,2005.65,.FILEATTS)
"RTN","MAGVRS21",21,0)
 Q
"RTN","MAGVRS21",22,0)
UPDSOP(OUT,SOPATTS,OVERRIDE) ;RPC - MAGV UPDATE SOP
"RTN","MAGVRS21",23,0)
 D UPDATE^MAGVRS41(.OUT,2005.64,.SOPATTS,$G(OVERRIDE))
"RTN","MAGVRS21",24,0)
FINDSOP(OUT,SOPUID) ; RPC - MAGV FIND SERIES BY UID
"RTN","MAGVRS21",25,0)
 D FINDBUID^MAGVRS41(.OUT,2005.64,$G(SOPUID))
"RTN","MAGVRS21",26,0)
 Q
"RTN","MAGVRS24")
0^97^B6638693
"RTN","MAGVRS24",1,0)
MAGVRS24 ;WOIFO/DAC - RPC calls for DICOM file processing ; 09 Feb 2012 12:53 PM
"RTN","MAGVRS24",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS24",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS24",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS24",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS24",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS24",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS24",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS24",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS24",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS24",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS24",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS24",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS24",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS24",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS24",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS24",17,0)
 ;;
"RTN","MAGVRS24",18,0)
 Q
"RTN","MAGVRS24",19,0)
GETSOP(OUT,SERIEN,SOPIEN,OVERRIDE) ;RPC - MAGV GET SOP
"RTN","MAGVRS24",20,0)
 D REFRESH^MAGVRS41(.OUT,2005.64,$G(SOPIEN),$G(SERIEN),$G(OVERRIDE))
"RTN","MAGVRS24",21,0)
 Q
"RTN","MAGVRS24",22,0)
INSOP(OUT,SOPIEN,SERIEN,OVERRIDE) ; RPC - MAGV INACTIVATE SOP
"RTN","MAGVRS24",23,0)
 D INACTIVT^MAGVRS41(.OUT,2005.64,$G(SOPIEN),$G(SERIEN),$G(OVERRIDE))
"RTN","MAGVRS24",24,0)
 Q
"RTN","MAGVRS24",25,0)
GETORIG(OUT,SOPIEN) ; Get the original file(s) associated with a SOP instance
"RTN","MAGVRS24",26,0)
 ; IIFIEN - Image file IEN   ORIG - Is Original
"RTN","MAGVRS24",27,0)
 N IIFIEN,ORIG,I,SSEP,STATUS
"RTN","MAGVRS24",28,0)
 S IIFIEN="",SSEP=$$STATSEP^MAGVRS41,I=2
"RTN","MAGVRS24",29,0)
 I $G(SOPIEN)="" S OUT(1)="-3"_SSEP_"no IEN provided" Q
"RTN","MAGVRS24",30,0)
 I '$D(^MAGV(2005.64,SOPIEN)) S OUT(1)="-1"_SSEP_"IEN does not exist" Q
"RTN","MAGVRS24",31,0)
 F  S IIFIEN=$O(^MAGV(2005.65,"C",SOPIEN,IIFIEN)) Q:IIFIEN=""  D
"RTN","MAGVRS24",32,0)
 . S ORIG=$P($G(^MAGV(2005.65,IIFIEN,1)),U,2)
"RTN","MAGVRS24",33,0)
 . S STATUS=$P($G(^MAGV(2005.65,IIFIEN,1)),U,5)
"RTN","MAGVRS24",34,0)
 . I $G(ORIG)="1",STATUS'="I" S OUT(I)=IIFIEN,I=I+1  ; Add original Image Instance IEN to output array
"RTN","MAGVRS24",35,0)
 . Q
"RTN","MAGVRS24",36,0)
 S OUT(1)=$S($D(OUT(2)):"0"_SSEP_SSEP,1:"-2"_SSEP_"No associated original file instances found")
"RTN","MAGVRS24",37,0)
 Q
"RTN","MAGVRS31")
0^98^B4232355
"RTN","MAGVRS31",1,0)
MAGVRS31 ;WOIFO/DAC - RPC calls for DICOM file processing ; 12 Jan 2012 1:39 AM
"RTN","MAGVRS31",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS31",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS31",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS31",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS31",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS31",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS31",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS31",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS31",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS31",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS31",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS31",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS31",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS31",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS31",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS31",17,0)
 ;;
"RTN","MAGVRS31",18,0)
 Q
"RTN","MAGVRS31",19,0)
UPDFILE(OUT,FILEATTS,OVERRIDE) ;RPC - MAGV UPDATE IMAGE FILE
"RTN","MAGVRS31",20,0)
 D UPDATE^MAGVRS41(.OUT,2005.65,.FILEATTS,$G(OVERRIDE))
"RTN","MAGVRS31",21,0)
 Q
"RTN","MAGVRS31",22,0)
GETFILE(OUT,SOPIEN,FILEIEN,OVERRIDE) ;RPC - MAGV GET IMAGE FILE
"RTN","MAGVRS31",23,0)
 D REFRESH^MAGVRS41(.OUT,2005.65,$G(FILEIEN),$G(SOPIEN),$G(OVERRIDE))
"RTN","MAGVRS31",24,0)
 Q
"RTN","MAGVRS31",25,0)
INFILE(OUT,FILEIEN,SOPIEN,OVERRIDE) ; RPC - MAGV INACTIVATE INSTANCE FILE
"RTN","MAGVRS31",26,0)
 D INACTIVT^MAGVRS41(.OUT,2005.65,$G(FILEIEN),$G(SOPIEN),$G(OVERRIDE))
"RTN","MAGVRS31",27,0)
 Q
"RTN","MAGVRS41")
0^99^B182345011
"RTN","MAGVRS41",1,0)
MAGVRS41 ;WOIFO/DAC,MLH,NST - Utilities for RPC calls for DICOM file processing ; 29 Feb 2012 10:41 AM
"RTN","MAGVRS41",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS41",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS41",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS41",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS41",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS41",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS41",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS41",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS41",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS41",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS41",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS41",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS41",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS41",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS41",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS41",17,0)
 ;;
"RTN","MAGVRS41",18,0)
 Q
"RTN","MAGVRS41",19,0)
INPUTSEP() ; Name value separator for input data  ie. NAME`TESTPATIENT
"RTN","MAGVRS41",20,0)
 Q "`"
"RTN","MAGVRS41",21,0)
OUTSEP() ; Name value separator for output data ie. NAME|TESTPATIENT
"RTN","MAGVRS41",22,0)
 Q "|"
"RTN","MAGVRS41",23,0)
STATSEP() ; Status and Result separator ie. -3``No record IEN  
"RTN","MAGVRS41",24,0)
 Q "`"
"RTN","MAGVRS41",25,0)
UPDATE(OUT,FILE,ATTS,OVERRIDE) ; Update Attributes
"RTN","MAGVRS41",26,0)
 N FDA,IEN,DATETIME,UIEN,UFILE,FIELDERR
"RTN","MAGVRS41",27,0)
 ; If File is out of range quit with error
"RTN","MAGVRS41",28,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP
"RTN","MAGVRS41",29,0)
 I (FILE<2005.6)!(FILE>2005.65) S OUT(1)="-1"_SSEP_"File is not in the 2005.6 to 2005.65 range" Q
"RTN","MAGVRS41",30,0)
 ; If first attribute is not the update record's IEN quit with error
"RTN","MAGVRS41",31,0)
 I $P($G(ATTS(1)),ISEP,1)'["IEN" S OUT(1)="-2"_SSEP_"No record IEN" Q
"RTN","MAGVRS41",32,0)
 S IEN=$P(ATTS(1),ISEP,2) K ATTS(1)
"RTN","MAGVRS41",33,0)
 I (IEN<1)!(IEN>($O(^MAGV(FILE," "),-1))) S OUT(1)="-6"_SSEP_"Invalid IEN" Q
"RTN","MAGVRS41",34,0)
 I FILE'=2005.6 D  Q:$D(OUT(1))  ; logic for files with parents only!
"RTN","MAGVRS41",35,0)
 . I '$G(OVERRIDE) D  Q:$D(OUT(1))
"RTN","MAGVRS41",36,0)
 . . I $P($G(ATTS(2)),ISEP,1)'["REFERENCE" S OUT(1)="-2"_SSEP_"No record IEN" Q
"RTN","MAGVRS41",37,0)
 . . S PIEN=$P(ATTS(2),ISEP,2)
"RTN","MAGVRS41",38,0)
 . . Q
"RTN","MAGVRS41",39,0)
 . I '$G(IEN) S OUT(1)="-1"_SSEP_"No IEN" Q
"RTN","MAGVRS41",40,0)
 . I '$G(OVERRIDE),'$$PARENT(FILE,IEN,PIEN) S OUT(1)="-9"_SSEP_"Parent Record not verified" Q
"RTN","MAGVRS41",41,0)
 . ; Check for STATUS INACCESSIBLE 
"RTN","MAGVRS41",42,0)
 . I $G(PIEN),((FILE=2005.63)!(FILE=2005.64)) D  Q:$D(OUT(1))
"RTN","MAGVRS41",43,0)
 . . N PFILE,STATUS
"RTN","MAGVRS41",44,0)
 . . I FILE=2005.63 S PFILE=2005.62
"RTN","MAGVRS41",45,0)
 . . I FILE=2005.64 S PFILE=2005.63
"RTN","MAGVRS41",46,0)
 . . S STATUS=$$GET1^DIQ(PFILE,PIEN,"STATUS","I")
"RTN","MAGVRS41",47,0)
 . . I STATUS="I" S OUT(1)="-100"_SSEP_"Parent status is Inaccessible."
"RTN","MAGVRS41",48,0)
 . . Q
"RTN","MAGVRS41",49,0)
 . Q
"RTN","MAGVRS41",50,0)
 S ATTS($O(ATTS(" "),-1)+1)="STATUS"_ISEP_"A" ; update always (re)activates
"RTN","MAGVRS41",51,0)
 D SETFDA^MAGVRS44(FILE,.ATTS,IEN_",",.FDA,.FIELDERR,1)
"RTN","MAGVRS41",52,0)
 D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS41",53,0)
 I $D(ERR("DIERR")) S OUT(1)="-6"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS41",54,0)
 I $D(ERR("DIERR")) Q
"RTN","MAGVRS41",55,0)
 K FDA,ERR
"RTN","MAGVRS41",56,0)
 I FILE=2005.65,$G(PIEN)'="" D AOFSET(PIEN)
"RTN","MAGVRS41",57,0)
 ;Update last update for record and parents
"RTN","MAGVRS41",58,0)
 S DATETIME=$$NOW^XLFDT
"RTN","MAGVRS41",59,0)
 S UIEN=IEN,UFILE=FILE
"RTN","MAGVRS41",60,0)
 F UFILE=UFILE:-.01:2005.62 Q:'UIEN  D
"RTN","MAGVRS41",61,0)
 . I FILE'=2005.65 D
"RTN","MAGVRS41",62,0)
 . . S FDA(UFILE,UIEN_",",$$GETFIELD(UFILE,"LAST UPDATE DATE/TIME"))=DATETIME
"RTN","MAGVRS41",63,0)
 . . D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS41",64,0)
 . . I $D(ERR("DIERR")) S OUT(1)="-3"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS41",65,0)
 . . I $D(ERR("DIERR")) Q
"RTN","MAGVRS41",66,0)
 . . K FDA,ERR
"RTN","MAGVRS41",67,0)
 . . Q
"RTN","MAGVRS41",68,0)
 . I UIEN S PIEN=+$G(^MAGV(UFILE,UIEN,6))
"RTN","MAGVRS41",69,0)
 . Q
"RTN","MAGVRS41",70,0)
 S OUT(1)="0"_SSEP_$G(FIELDERR)_SSEP_IEN
"RTN","MAGVRS41",71,0)
 Q
"RTN","MAGVRS41",72,0)
ATTACH(OUT,FILE,ATTS) ; Create record; attach to parent record if applicable
"RTN","MAGVRS41",73,0)
 ; Input Variables: 
"RTN","MAGVRS41",74,0)
 ;                 FILE - File number of record
"RTN","MAGVRS41",75,0)
 ;                 ATTS - Array of name value pairs separated by an input separator
"RTN","MAGVRS41",76,0)
 ; Output Variables:
"RTN","MAGVRS41",77,0)
 ;                 OUT  - Returns success and new record IEN or error and error message 
"RTN","MAGVRS41",78,0)
 N FDA,OSEP,ISEP,SSEP,NAM,VAL,ATTNAMS,KEYFLD,UATT,IEN,STATUS,NEWATTS,I
"RTN","MAGVRS41",79,0)
 N PIEN,PPIEN,PFILE,ERR,CIEN,UID,UIEN,DATETIME,KEYNAM,FIELDERR,DFN,DEVFDA,DEVICE
"RTN","MAGVRS41",80,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP
"RTN","MAGVRS41",81,0)
 ; If file out of range quit with error
"RTN","MAGVRS41",82,0)
 I (FILE<2005.6)!(FILE>2005.65) S OUT(1)="-4"_SSEP_"File is not in the 2005.6 to 2005.65 range" Q 
"RTN","MAGVRS41",83,0)
 ; If atts not defined quit with error
"RTN","MAGVRS41",84,0)
 S I=0
"RTN","MAGVRS41",85,0)
 F  S I=$O(ATTS(I)) Q:'I  D  Q:$D(OUT(1))
"RTN","MAGVRS41",86,0)
 . S NAM=$P(ATTS(I),ISEP,1),VAL=$P(ATTS(I),ISEP,2)
"RTN","MAGVRS41",87,0)
 . I NAM="" S OUT(1)="-64"_SSEP_"Attribute name(s) missing from attribute array" Q
"RTN","MAGVRS41",88,0)
 . S ATTNAMS(NAM)=VAL
"RTN","MAGVRS41",89,0)
 . Q
"RTN","MAGVRS41",90,0)
 Q:$D(OUT(1))
"RTN","MAGVRS41",91,0)
 S KEYNAM=$$GET1^DID(FILE,.01,,"LABEL"),(UATT,KEYFLD(.01))=$G(ATTNAMS(KEYNAM))
"RTN","MAGVRS41",92,0)
 S KEYFLD(.01,"GSL")=$$GET1^DID(FILE,.01,,"GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGVRS41",93,0)
 ; Set PIEN (parent IEN)
"RTN","MAGVRS41",94,0)
 I FILE=2005.61 S PIEN=$G(ATTNAMS("PATIENT REFERENCE")),PFILE=2005.6
"RTN","MAGVRS41",95,0)
 I FILE=2005.62 S PIEN=$G(ATTNAMS("PROCEDURE REFERENCE")),PFILE=2005.61
"RTN","MAGVRS41",96,0)
 I FILE=2005.63 S PIEN=$G(ATTNAMS("STUDY REFERENCE")),PFILE=2005.62
"RTN","MAGVRS41",97,0)
 I FILE=2005.64 S PIEN=$G(ATTNAMS("SERIES REFERENCE")),PFILE=2005.63
"RTN","MAGVRS41",98,0)
 I FILE=2005.65 S PIEN=$G(ATTNAMS("SOP INSTANCE REFERENCE")),PFILE=2005.64
"RTN","MAGVRS41",99,0)
 ; Check for STATUS INACCESSIBLE 
"RTN","MAGVRS41",100,0)
 I (FILE=2005.63)!(FILE=2005.64) D  Q:$D(OUT(1))
"RTN","MAGVRS41",101,0)
 . S STATUS=$$GET1^DIQ(PFILE,PIEN,"STATUS","I")
"RTN","MAGVRS41",102,0)
 . I STATUS="I" S OUT(1)="-100"_SSEP_"Parent status is Inaccessible."
"RTN","MAGVRS41",103,0)
 . Q
"RTN","MAGVRS41",104,0)
 ; File DEVICE MANUFACTURER and DEVICE MODEL as ACQUISITION DEVICE in file 2005.63
"RTN","MAGVRS41",105,0)
 I FILE=2005.63 D
"RTN","MAGVRS41",106,0)
 . ; Remove parentheses from DEVICE MANUFACTOR and DEVICE MODEL and concatenate DEVICE and place model in parentheses
"RTN","MAGVRS41",107,0)
 . S DEVMAN=$G(ATTNAMS("DEVICE MANUFACTURER"))
"RTN","MAGVRS41",108,0)
 . S DEVMODEL=$G(ATTNAMS("DEVICE MODEL"))
"RTN","MAGVRS41",109,0)
 . S DEVICE=DEVMAN_" ("_DEVMODEL_")"
"RTN","MAGVRS41",110,0)
 . ; If the device is not in 2006.04 add device
"RTN","MAGVRS41",111,0)
 . I '$D(^MAG(2006.04,"B",DEVICE)) D
"RTN","MAGVRS41",112,0)
 . . S DEVFDA(2006.04,"+1,",.01)=DEVICE
"RTN","MAGVRS41",113,0)
 . . D UPDATE^DIE("","DEVFDA","","DEVERR")
"RTN","MAGVRS41",114,0)
 . . Q
"RTN","MAGVRS41",115,0)
 . ; If the device is in 2006.04 get IEN of entry
"RTN","MAGVRS41",116,0)
 . S DEVIEN=$O(^MAG(2006.04,"B",DEVICE,""))
"RTN","MAGVRS41",117,0)
 . S ATTS($O(ATTS(" "),-1)+1)="DEVICE"_ISEP_DEVIEN
"RTN","MAGVRS41",118,0)
 . K ATTNAMS("DEVICE MANUFACTURER"),ATTNAMS("DEVICE MODEL")
"RTN","MAGVRS41",119,0)
 . Q
"RTN","MAGVRS41",120,0)
 D:('$D(ATTNAMS("ARTIFACT ON FILE")))&(FILE'=2005.65)
"RTN","MAGVRS41",121,0)
 . S ATTNAMS("ARTIFACT ON FILE")=0
"RTN","MAGVRS41",122,0)
 . S ATTS($O(ATTS(" "),-1)+1)="ARTIFACT ON FILE"_ISEP_0
"RTN","MAGVRS41",123,0)
 . Q
"RTN","MAGVRS41",124,0)
 I $G(UATT)="" S OUT(1)="-5"_SSEP_"Unique identifier not provided" Q
"RTN","MAGVRS41",125,0)
 ; If a patient ID is assigned by the VA set the PATIENT pointer
"RTN","MAGVRS41",126,0)
 I FILE=2005.6,$G(ATTNAMS("ASSIGNING AUTHORITY"))="V" D
"RTN","MAGVRS41",127,0)
 . S DFN=$G(ATTNAMS("ENTERPRISE PATIENT ID"))
"RTN","MAGVRS41",128,0)
 . I DFN'="" S ATTS($O(ATTS(" "),-1)+1)="PATIENT FILE REFERENCE"_ISEP_DFN
"RTN","MAGVRS41",129,0)
 . Q
"RTN","MAGVRS41",130,0)
 ;
"RTN","MAGVRS41",131,0)
 ; Quit with error if no assigning authority provided for a Procedure Reference
"RTN","MAGVRS41",132,0)
 I FILE=2005.61,$G(ATTNAMS("ASSIGNING AUTHORITY"))="" S OUT(1)="-5"_SSEP_"No ASSIGNING AUTHORITY provided." Q
"RTN","MAGVRS41",133,0)
 ;
"RTN","MAGVRS41",134,0)
 ; If entry exists for Patient or Procedure then it is an update
"RTN","MAGVRS41",135,0)
 D  Q:$G(IEN)  Q:$D(OUT(1))  ; Patient or procedure update?
"RTN","MAGVRS41",136,0)
 . ; Add multi-key (already checked .01)
"RTN","MAGVRS41",137,0)
 . I (FILE=2005.6)!(FILE=2005.61) D ADDMKEYS^MAGVRS46(.OUT,FILE,.ATTNAMS,.KEYFLD) Q:$D(OUT(1))
"RTN","MAGVRS41",138,0)
 . ;
"RTN","MAGVRS41",139,0)
 . S IEN=$$MATCH^MAGVRS46(FILE,UATT,$G(PIEN),.KEYFLD) ; Find match by keys
"RTN","MAGVRS41",140,0)
 . Q:'IEN  ; no exact match, create new
"RTN","MAGVRS41",141,0)
 . ;
"RTN","MAGVRS41",142,0)
 . S STATUS=$$GET1^DIQ(FILE,IEN,"STATUS","I")
"RTN","MAGVRS41",143,0)
 . I (FILE>2005.6),(PIEN'=+$G(^MAGV(FILE,IEN,6))) D  Q
"RTN","MAGVRS41",144,0)
 . . I STATUS="A" S OUT(1)="-66"_SSEP_"Parent IEN does not match parent IEN of record on file"
"RTN","MAGVRS41",145,0)
 . . E  S IEN=""   ; STATUS="I"  INACCESSIBLE
"RTN","MAGVRS41",146,0)
 . . Q
"RTN","MAGVRS41",147,0)
 . I STATUS'="I" S OUT(1)="-63"_SSEP_"Active reference with same unique ID already exists" Q
"RTN","MAGVRS41",148,0)
 . S NEWATTS(1)="IEN"_ISEP_IEN
"RTN","MAGVRS41",149,0)
 . F I=1:1 Q:'$D(ATTS(I))  S NEWATTS(I+1)=ATTS(I)
"RTN","MAGVRS41",150,0)
 . S NEWATTS($O(NEWATTS(" "),-1)+1)="STATUS"_ISEP_"A"
"RTN","MAGVRS41",151,0)
 . D UPDATE(.OUT,FILE,.NEWATTS,1)
"RTN","MAGVRS41",152,0)
 . Q
"RTN","MAGVRS41",153,0)
 Q:$D(OUT(1))
"RTN","MAGVRS41",154,0)
 I FILE>2005.6 D  Q:$G(OUT(1))'=""  ; verify that parent IEN is set
"RTN","MAGVRS41",155,0)
 . I PIEN="" S OUT(1)="-1"_SSEP_"No parent record IEN" Q
"RTN","MAGVRS41",156,0)
 . I (PIEN<1)!(PIEN>($O(^MAGV(FILE-.01," "),-1))) S OUT(1)="-6"_SSEP_"Invalid parent IEN" Q
"RTN","MAGVRS41",157,0)
 . Q
"RTN","MAGVRS41",158,0)
 ; If a series and a consult, get the current TIU note for the study (parent IEN)
"RTN","MAGVRS41",159,0)
 I FILE=2005.63 D  Q:$G(OUT(1))<0
"RTN","MAGVRS41",160,0)
 . D TIUCHK^MAGVRS43(.OUT,PIEN) Q:$G(OUT(1))<0  ; bail out if fatal exception raised
"RTN","MAGVRS41",161,0)
 . I $P(OUT(1),SSEP,1)=0 S ATTS($O(ATTS(" "),-1)+1)="TIU NOTE REFERENCE"_ISEP_$P(OUT(1),SSEP,3)
"RTN","MAGVRS41",162,0)
 . K OUT
"RTN","MAGVRS41",163,0)
 . Q
"RTN","MAGVRS41",164,0)
 S ATTS($O(ATTS(" "),-1)+1)="STATUS"_ISEP_"A"
"RTN","MAGVRS41",165,0)
 D SETFDA^MAGVRS44(FILE,.ATTS,"+1,",.FDA,.FIELDERR)
"RTN","MAGVRS41",166,0)
 S UID=$G(FDA(FILE,"+1,",.01))
"RTN","MAGVRS41",167,0)
 I UID="" S OUT(1)="-2"_SSEP_"No UID" Q
"RTN","MAGVRS41",168,0)
 ; Attach record
"RTN","MAGVRS41",169,0)
 D UPDATE^DIE("","FDA","","ERR")
"RTN","MAGVRS41",170,0)
 K FDA
"RTN","MAGVRS41",171,0)
 S CIEN=$O(^MAGV(FILE,"B",UID,""),-1) ; New Record IEN
"RTN","MAGVRS41",172,0)
 S OUT(1)="0"_SSEP_$G(FIELDERR)_SSEP_CIEN ; Set return output to IEN of new record
"RTN","MAGVRS41",173,0)
 I $D(ERR("DIERR")) S OUT(1)="-3"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS41",174,0)
 I $D(ERR("DIERR")) Q
"RTN","MAGVRS41",175,0)
 K ERR
"RTN","MAGVRS41",176,0)
 ; Update Number of SOP and SERIES Number fields in the Study and Series files
"RTN","MAGVRS41",177,0)
 I (FILE=2005.63)!(FILE=2005.64) S PFILE=FILE-.01,FDA(PFILE,PIEN_",",7)=+$G(^MAGV(PFILE,PIEN,4))+1
"RTN","MAGVRS41",178,0)
 I FILE=2005.64 S PFILE=2005.62 S PPIEN=+$G(^MAGV(2005.63,PIEN,6)),FDA(2005.62,PPIEN_",",20)=$P($G(^MAGV(2005.62,PPIEN,4)),U,2)+1
"RTN","MAGVRS41",179,0)
 D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS41",180,0)
 K FDA
"RTN","MAGVRS41",181,0)
 I FILE=2005.65 D AOFSET(PIEN)
"RTN","MAGVRS41",182,0)
 I FILE>2005.6 D  Q:$G(OUT(1))'=""  ;Update last update for record and parents
"RTN","MAGVRS41",183,0)
 . S DATETIME=$$NOW^XLFDT
"RTN","MAGVRS41",184,0)
 . S UIEN=CIEN
"RTN","MAGVRS41",185,0)
 . F UFILE=FILE:-.01:2005.62 Q:'UIEN  D
"RTN","MAGVRS41",186,0)
 . . I UFILE'=2005.65 D
"RTN","MAGVRS41",187,0)
 . . . S FDA(UFILE,UIEN_",",$$GETFIELD(UFILE,"LAST UPDATE DATE/TIME"))=DATETIME
"RTN","MAGVRS41",188,0)
 . . . S:$G(ERR)'="" OUT(1)=ERR
"RTN","MAGVRS41",189,0)
 . . . K ERR
"RTN","MAGVRS41",190,0)
 . . . D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS41",191,0)
 . . . I $D(ERR("DIERR")) S OUT(1)="-5"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS41",192,0)
 . . . K FDA,ERR
"RTN","MAGVRS41",193,0)
 . . . Q
"RTN","MAGVRS41",194,0)
 . . I UIEN S UIEN=+$G(^MAGV(UFILE,UIEN,6))
"RTN","MAGVRS41",195,0)
 . . Q
"RTN","MAGVRS41",196,0)
 . Q
"RTN","MAGVRS41",197,0)
 Q
"RTN","MAGVRS41",198,0)
REFRESH(OUT,FILE,IEN,PIEN,OVERRIDE) ; Retrieve specified file data attributes
"RTN","MAGVRS41",199,0)
 N OUTI,FIELD,MULTOUT,FDA,ERR,OSEP,ISEP,SSEP,MULTIPLE,DATETIME,UIEN,UFILE,FORMAT,SUBFILE,SUBIEN,FILEMULT,DD
"RTN","MAGVRS41",200,0)
 N DEVIEN,DEVNAME,DEVMAN,DEVMODEL,VALUE
"RTN","MAGVRS41",201,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP K OUT
"RTN","MAGVRS41",202,0)
 I $G(FILE)="" S OUT(1)="-9"_SSEP_"Missing file specification" Q
"RTN","MAGVRS41",203,0)
 I '$D(^MAGV(FILE)),'$D(^MAGD(FILE)) S OUT(1)="-10"_SSEP_"Invalid file specification ("_$G(FILE)_")" Q
"RTN","MAGVRS41",204,0)
 I '$G(IEN) S OUT(1)="-1"_SSEP_"No record IEN" Q
"RTN","MAGVRS41",205,0)
 I '$G(OVERRIDE),'$G(PIEN) S OUT(1)="-2"_SSEP_"No parent record IEN" Q
"RTN","MAGVRS41",206,0)
 I FILE'=2005.61,'$G(OVERRIDE),'$$PARENT(FILE,IEN,PIEN) S OUT(1)="-3"_SSEP_"Parent Record not verified" Q
"RTN","MAGVRS41",207,0)
 I FILE'=2006.575,'$D(^MAGV(FILE,IEN)) S OUT(1)="-4"_SSEP_"IEN does not exist in "_FILE Q
"RTN","MAGVRS41",208,0)
 I FILE=2006.575,'$D(^MAGD(FILE,IEN)) S OUT(1)="-5"_SSEP_"IEN does not exist in "_FILE Q
"RTN","MAGVRS41",209,0)
 S FIELD=$$GETFIELD(FILE,"STATUS") I FIELD D  Q:$D(OUT)
"RTN","MAGVRS41",210,0)
 . S STATUS=$$GET1^DIQ(FILE,IEN,FIELD,"I")
"RTN","MAGVRS41",211,0)
 . S:STATUS="I" OUT(1)="-11"_SSEP_"No accessible entry for UID found in file "_FILE
"RTN","MAGVRS41",212,0)
 . Q
"RTN","MAGVRS41",213,0)
 S FIELD="",OUTI=2,FNUM=""
"RTN","MAGVRS41",214,0)
 D GETS^DIQ(FILE,IEN_",","**","I","DD")
"RTN","MAGVRS41",215,0)
 ; Process all non-multiple fields
"RTN","MAGVRS41",216,0)
 F  D  Q:FNUM="" 
"RTN","MAGVRS41",217,0)
 . S FNUM=$O(DD(FILE,IEN_",",FNUM)) Q:FNUM=""
"RTN","MAGVRS41",218,0)
 . I FILE=2005.63,FNUM=18 D  Q  ; DEVICE returns DEVICE MANUFACTURER and DEVICE MODEL from the ACQUISITION DEVICE file NAME (.01) field
"RTN","MAGVRS41",219,0)
 . . S DEVIEN=$G(DD("2005.63",IEN_",","18","I"))
"RTN","MAGVRS41",220,0)
 . . Q:$G(DEVIEN)=""
"RTN","MAGVRS41",221,0)
 . . S DEVNAME=$P($G(^MAG(2006.04,DEVIEN,0)),U,1)
"RTN","MAGVRS41",222,0)
 . . S DEVMAN=$P(DEVNAME," (",1)
"RTN","MAGVRS41",223,0)
 . . S DEVMODEL=$TR($P(DEVNAME," (",2),")")
"RTN","MAGVRS41",224,0)
 . . S OUT(OUTI)="DEVICE MANUFACTURER"_OSEP_DEVMAN_SSEP
"RTN","MAGVRS41",225,0)
 . . S OUT(OUTI+1)="DEVICE MODEL"_OSEP_DEVMODEL_SSEP
"RTN","MAGVRS41",226,0)
 . . S OUTI=OUTI+2
"RTN","MAGVRS41",227,0)
 . . Q
"RTN","MAGVRS41",228,0)
 . S FIELD=$$GET1^DID(FILE,FNUM,,"LABEL")
"RTN","MAGVRS41",229,0)
 . S FORMAT=$S((FIELD["INDEX")!(FIELD="SOP CLASS UID")!(FIELD="PHOTOMETRIC INTERPRETATION"):"E",1:"I") ; return internal formats except for index terms and SOP CLASS UID
"RTN","MAGVRS41",230,0)
 . I (FIELD["REFERENCE") S FORMAT="I" ; If the field is an IEN pointer return the internal format rather than the UID string 
"RTN","MAGVRS41",231,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN,FIELD,$G(FORMAT))
"RTN","MAGVRS41",232,0)
 . I $$DATETIME(FILE,FIELD) S VALUE=$$FM2IDF^MAGVAF01(VALUE)
"RTN","MAGVRS41",233,0)
 . I FILE=2005.63,FIELD="ACQUISITION LOCATION",VALUE'="" S VALUE=$$GETSINST(VALUE)
"RTN","MAGVRS41",234,0)
 . I ((FILE=2005.6)!(FILE=2005.61))&(FIELD="SERVICE INSTITUTION REFERENCE"),VALUE'="" S VALUE=$$GETSINST(VALUE),FIELD="CREATING ENTITY"
"RTN","MAGVRS41",235,0)
 . S OUT(OUTI)=FIELD_OSEP_VALUE_SSEP
"RTN","MAGVRS41",236,0)
 . S OUTI=OUTI+1
"RTN","MAGVRS41",237,0)
 . Q
"RTN","MAGVRS41",238,0)
 ; Process multiple fields
"RTN","MAGVRS41",239,0)
 S FILEMULT=FILE
"RTN","MAGVRS41",240,0)
 F  D  Q:FILEMULT=""
"RTN","MAGVRS41",241,0)
 . S FILEMULT=$O(DD(FILEMULT)) Q:FILEMULT=""
"RTN","MAGVRS41",242,0)
 . S FNUM=$E(FILEMULT,$L(FILE)+1,$L(FILEMULT))
"RTN","MAGVRS41",243,0)
 . D GETS^DIQ(FILE,IEN_",",FNUM_"*","","MULTOUT")
"RTN","MAGVRS41",244,0)
 . I '$D(MULTOUT) Q 
"RTN","MAGVRS41",245,0)
 . S FIELD=$$GET1^DID(FILE,FNUM,,"LABEL")
"RTN","MAGVRS41",246,0)
 . S SUBFILE=$O(MULTOUT("")),SUBIEN=""
"RTN","MAGVRS41",247,0)
 . F  D  Q:$O(MULTOUT(SUBFILE,SUBIEN))=""
"RTN","MAGVRS41",248,0)
 . . S SUBIEN=$O(MULTOUT(SUBFILE,SUBIEN))
"RTN","MAGVRS41",249,0)
 . . S OUT(OUTI)=FIELD_OSEP_MULTOUT(SUBFILE,SUBIEN,.01)_SSEP
"RTN","MAGVRS41",250,0)
 . . S OUTI=OUTI+1
"RTN","MAGVRS41",251,0)
 . . Q
"RTN","MAGVRS41",252,0)
 . Q
"RTN","MAGVRS41",253,0)
 S OUT(1)="0"_SSEP ; Look up successful
"RTN","MAGVRS41",254,0)
 ; Update last access date time for study
"RTN","MAGVRS41",255,0)
 S DATETIME=$$NOW^XLFDT
"RTN","MAGVRS41",256,0)
 S UIEN=IEN
"RTN","MAGVRS41",257,0)
 F UFILE=FILE:-.01:2005.62 Q:'UIEN  D
"RTN","MAGVRS41",258,0)
 . I UFILE=2005.62 D
"RTN","MAGVRS41",259,0)
 . . S FDA(UFILE,UIEN_",",$$GETFIELD(UFILE,"LAST ACCESS DATE/TIME"))=DATETIME
"RTN","MAGVRS41",260,0)
 . . K ERR
"RTN","MAGVRS41",261,0)
 . . D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS41",262,0)
 . . S:$G(ERR("DIERR"))'="" OUT(1)="-7"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS41",263,0)
 . . K FDA,ERR
"RTN","MAGVRS41",264,0)
 . . Q
"RTN","MAGVRS41",265,0)
 . I UIEN S UIEN=+$G(^MAGV(UFILE,UIEN,6))
"RTN","MAGVRS41",266,0)
 . Q
"RTN","MAGVRS41",267,0)
 Q
"RTN","MAGVRS41",268,0)
MULTIPLE(FILE,FIELD) ; Process multiple DB entries
"RTN","MAGVRS41",269,0)
 N DATATYPE,MULTIPLE,FNUM
"RTN","MAGVRS41",270,0)
 S MULTIPLE=$$GET1^DID(FILE,FIELD,,"MULTIPLE-VALUED")
"RTN","MAGVRS41",271,0)
 Q +MULTIPLE
"RTN","MAGVRS41",272,0)
NUMERIC(FILE,FIELD) ; Determine if field is numeric
"RTN","MAGVRS41",273,0)
 N DATATYPE,NUMERIC
"RTN","MAGVRS41",274,0)
 S NUMERIC=0
"RTN","MAGVRS41",275,0)
 I $$GET1^DID(FILE,FIELD,"","TYPE")="NUMERIC" S NUMERIC=1
"RTN","MAGVRS41",276,0)
 Q NUMERIC
"RTN","MAGVRS41",277,0)
DATETIME(FILE,FIELD) ; Determine if field is date time
"RTN","MAGVRS41",278,0)
 N DATATYPE,DATETIME
"RTN","MAGVRS41",279,0)
 S DATETIME=0
"RTN","MAGVRS41",280,0)
 I $$GET1^DID(FILE,FIELD,"","TYPE")="DATE/TIME" S DATETIME=1
"RTN","MAGVRS41",281,0)
 Q DATETIME
"RTN","MAGVRS41",282,0)
GETFIELD(FILE,FNAME) ; Returns a field number given a field name
"RTN","MAGVRS41",283,0)
 Q $$FLDNUM^DILFD(FILE,FNAME)
"RTN","MAGVRS41",284,0)
PARENT(FILE,IEN,PIEN) ; Check if provided parent IEN is linked to current record
"RTN","MAGVRS41",285,0)
 I PIEN'=+$G(^MAGV(FILE,IEN,6)) Q 0
"RTN","MAGVRS41",286,0)
 Q 1
"RTN","MAGVRS41",287,0)
AOFSET(PIEN) ; Set artifact on file to 1 for all parent nodes of file instance
"RTN","MAGVRS41",288,0)
 N AOFFILE,FIELD,FDA,ERR
"RTN","MAGVRS41",289,0)
 F AOFFILE=2005.64,2005.63,2005.62,2005.61,2005.6 D
"RTN","MAGVRS41",290,0)
 . S FIELD=$$GETFIELD(AOFFILE,"ARTIFACT ON FILE")
"RTN","MAGVRS41",291,0)
 . I $G(FIELD)="" Q
"RTN","MAGVRS41",292,0)
 . S FDA(AOFFILE,PIEN_",",FIELD)=1
"RTN","MAGVRS41",293,0)
 . D FILE^DIE("","FDA")
"RTN","MAGVRS41",294,0)
 . K FDA,ERR
"RTN","MAGVRS41",295,0)
 . I AOFFILE>2005.6 S PIEN=+$G(^MAGV(AOFFILE,PIEN,6))
"RTN","MAGVRS41",296,0)
 Q
"RTN","MAGVRS41",297,0)
INACTIVT(OUT,FILE,IEN,PIEN,OVERRIDE,REASON) ; Marks the entry indicated by file # and IEN as deleted
"RTN","MAGVRS41",298,0)
 N OSEP,ISEP,SSEP,STATUS,PFILE,ERR,FDA,AOF,FIELD,AOFIEN
"RTN","MAGVRS41",299,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP
"RTN","MAGVRS41",300,0)
 I $G(FILE)="" S OUT(1)="-23"_SSEP_"No file number provided" Q
"RTN","MAGVRS41",301,0)
 I $G(IEN)="" S OUT(1)="-20"_SSEP_"No IEN provided" Q
"RTN","MAGVRS41",302,0)
 I '$G(PIEN)="" S OUT(1)="-21"_SSEP_"No parent IEN provided" Q
"RTN","MAGVRS41",303,0)
 I '$D(OVERRIDE) S OUT(1)="-22"_SSEP_"No OVERRIDE flag provided" Q
"RTN","MAGVRS41",304,0)
 I '$D(^MAGV(FILE,IEN,0)) S OUT(1)="-1"_SSEP_"Record IEN not found in file" Q
"RTN","MAGVRS41",305,0)
 I '$D(REASON) S OUT(1)="-4"_SSEP_"No deletion reason provided" Q
"RTN","MAGVRS41",306,0)
 ; If record status is already INACCESIBLE quit with error
"RTN","MAGVRS41",307,0)
 S FIELD=$$GETFIELD(FILE,"STATUS")
"RTN","MAGVRS41",308,0)
 S STATUS=$$GET1^DIQ(FILE,IEN,FIELD,"E")
"RTN","MAGVRS41",309,0)
 I STATUS="INACCESSIBLE" S OUT(1)="2"_SSEP_"Record is already inaccessible" Q
"RTN","MAGVRS41",310,0)
 ; Call INACT to delete identified record and all children
"RTN","MAGVRS41",311,0)
 D INACT^MAGVRS44(.OUT,FILE,IEN,$G(PIEN),$G(OVERRIDE),$G(REASON))
"RTN","MAGVRS41",312,0)
 I $D(OUT(1)) Q
"RTN","MAGVRS41",313,0)
 ; Set parent records artifact on file to false if no active child records
"RTN","MAGVRS41",314,0)
 S AOFIEN=IEN,AOF=""
"RTN","MAGVRS41",315,0)
 F FILE=FILE:2005.61:-.01 Q:AOF'=""  D
"RTN","MAGVRS41",316,0)
 . F  S AOFIEN=+$G(^MAGV(FILE,"C",PIEN,AOFIEN)) Q:(AOF'="")!(AOFIEN="")  D 
"RTN","MAGVRS41",317,0)
 . . S FIELD=$$GETFIELD(FILE,"ARTIFACT ON FILE")
"RTN","MAGVRS41",318,0)
 . . S AOF=$$GET1^DIQ(FILE,AOFIEN,FIELD)
"RTN","MAGVRS41",319,0)
 . Q
"RTN","MAGVRS41",320,0)
 . ;If no child records are on file then set parent to artifact not on file
"RTN","MAGVRS41",321,0)
 . I AOF="" D
"RTN","MAGVRS41",322,0)
 . . S PFILE=FILE-.01
"RTN","MAGVRS41",323,0)
 . . S FIELD=$$GETFIELD(FILE,"ARTIFACT ON FILE")
"RTN","MAGVRS41",324,0)
 . . S FDA(PFILE,PIEN_",",FIELD)=""
"RTN","MAGVRS41",325,0)
 . . D FILE^DIE("","FDA")
"RTN","MAGVRS41",326,0)
 . . K FDA,ERR
"RTN","MAGVRS41",327,0)
 . . Q
"RTN","MAGVRS41",328,0)
 . Q 
"RTN","MAGVRS41",329,0)
 I '$D(OUT(1)) S OUT(1)="0"_SSEP_SSEP_IEN
"RTN","MAGVRS41",330,0)
 Q 
"RTN","MAGVRS41",331,0)
FINDBUID(OUT,FILE,UID) ;Find SOP or series by UID
"RTN","MAGVRS41",332,0)
 N STATUS,IEN,OSEP,ISEP,SSEP
"RTN","MAGVRS41",333,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP
"RTN","MAGVRS41",334,0)
 I $G(FILE)="" S OUT="-3"_SSEP_"No file specified" Q
"RTN","MAGVRS41",335,0)
 I "^2005.62^2005.63^2005.64^"'[("^"_FILE_"^") S OUT="-4"_SSEP_"Invalid file specified ("_FILE_")" Q
"RTN","MAGVRS41",336,0)
 I $G(UID)="" S OUT="-5"_SSEP_"No UID specified" Q
"RTN","MAGVRS41",337,0)
 S IEN=$O(^MAGV(FILE,"B",UID,""))
"RTN","MAGVRS41",338,0)
 S FIELD=$$GETFIELD(FILE,"STATUS")
"RTN","MAGVRS41",339,0)
 S STATUS=$$GET1^DIQ(FILE,IEN,FIELD,"I")
"RTN","MAGVRS41",340,0)
 I IEN'="",STATUS'="I" S OUT="0"_SSEP_SSEP_IEN Q
"RTN","MAGVRS41",341,0)
 I IEN="" S OUT="-1"_SSEP_"UID not found in file "_FILE Q
"RTN","MAGVRS41",342,0)
 I STATUS="I" S OUT="-2"_SSEP_"No active entry for UID found in file "_FILE Q
"RTN","MAGVRS41",343,0)
 Q
"RTN","MAGVRS41",344,0)
GETSINST(VALUE) ; Get the service institution value
"RTN","MAGVRS41",345,0)
 N IEN,FILE,SITE,X
"RTN","MAGVRS41",346,0)
 S SITE="Error - unknown service institution"
"RTN","MAGVRS41",347,0)
 S X=$G(^MAGV(2005.8,$G(VALUE),0))
"RTN","MAGVRS41",348,0)
 S IEN=$P(X,";",1),FILE=$P(X,";",2)
"RTN","MAGVRS41",349,0)
 I FILE="DIC(4," S SITE=$P($$NS^XUAF4(IEN),U,2) ; IA #2171 Get Station Number
"RTN","MAGVRS41",350,0)
 Q SITE
"RTN","MAGVRS42")
0^100^B33489526
"RTN","MAGVRS42",1,0)
MAGVRS42 ;WOIFO/MLH/NST - Utility for file lookup by name/value pairs ; 06 Feb 2012 07:10 PM
"RTN","MAGVRS42",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS42",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS42",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS42",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS42",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS42",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS42",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS42",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS42",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS42",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS42",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS42",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS42",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS42",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS42",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS42",17,0)
 ;;
"RTN","MAGVRS42",18,0)
 Q
"RTN","MAGVRS42",19,0)
FINDBYAT(OUT,FILE,ATTSARY) ; Find by name/value pairs
"RTN","MAGVRS42",20,0)
 ; inputs:    FILE    a FileMan file number (must be a parent file)
"RTN","MAGVRS42",21,0)
 ;            ATTSARY array of name/value pairs - names must be those
"RTN","MAGVRS42",22,0)
 ;                    of main-level fields (not multiples or children)
"RTN","MAGVRS42",23,0)
 ;
"RTN","MAGVRS42",24,0)
 ; Performs a name/value pair lookup on a flat FileMan file.
"RTN","MAGVRS42",25,0)
 ; 
"RTN","MAGVRS42",26,0)
 N OSEP,ISEP,SSEP ; separators
"RTN","MAGVRS42",27,0)
 N ATTIX ; attribute array index
"RTN","MAGVRS42",28,0)
 N ATTNAME,ATTVAL ; attribute name and value
"RTN","MAGVRS42",29,0)
 N SRCHFLD ; search field number
"RTN","MAGVRS42",30,0)
 N SRCHARY ; search fields array
"RTN","MAGVRS42",31,0)
 N SCREEN ; screening logic string
"RTN","MAGVRS42",32,0)
 N SCRLOGIC ; single piece of screening logic
"RTN","MAGVRS42",33,0)
 N XREFINFO ; cross-reference information from data dictionary
"RTN","MAGVRS42",34,0)
 N XREFNAME ; index to pass to the FileMan search function
"RTN","MAGVRS42",35,0)
 N XREFIX ; index of cross references for a field
"RTN","MAGVRS42",36,0)
 N XREFVAL ; value to be looked up on the cross reference
"RTN","MAGVRS42",37,0)
 N DIC ; file reference of the global node
"RTN","MAGVRS42",38,0)
 N DLAYGO ; FileMan parameter enabling LAYGO for referenced file.
"RTN","MAGVRS42",39,0)
 N OUTIX ; output index
"RTN","MAGVRS42",40,0)
 ;
"RTN","MAGVRS42",41,0)
 K OUT
"RTN","MAGVRS42",42,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS42",43,0)
 ; validate input parameters
"RTN","MAGVRS42",44,0)
 I 'FILE S OUT(1)="-1"_SSEP_"No file specified" Q
"RTN","MAGVRS42",45,0)
 I ($E(FILE,1,4)'=2005),($E(FILE,1,4)'=2006) S OUT(1)="-12"_SSEP_"File not in valid search range" Q
"RTN","MAGVRS42",46,0)
 D  Q:$D(OUT)  ; does the file exist?
"RTN","MAGVRS42",47,0)
 . N MAGATTS
"RTN","MAGVRS42",48,0)
 . D FILE^DID(FILE,"N","NAME","MAGATTS")
"RTN","MAGVRS42",49,0)
 . I '$D(MAGATTS("NAME")) S OUT(1)="-2"_SSEP_"Invalid file number ("_FILE_")" Q
"RTN","MAGVRS42",50,0)
 . Q
"RTN","MAGVRS42",51,0)
 I $D(ATTSARY)<10 S OUT(1)="-3"_SSEP_"No search attributes specified" Q
"RTN","MAGVRS42",52,0)
 ;
"RTN","MAGVRS42",53,0)
 S ATTIX=0
"RTN","MAGVRS42",54,0)
 ; Parse the attributes.  Find a cross-reference to look up on, and build a
"RTN","MAGVRS42",55,0)
 ; screen if there are multiple search criteria.  At least one of the
"RTN","MAGVRS42",56,0)
 ; search fields must be cross-referenced.
"RTN","MAGVRS42",57,0)
 F  S ATTIX=$O(ATTSARY(ATTIX)) Q:'ATTIX  D  Q:$D(OUT)
"RTN","MAGVRS42",58,0)
 . S ATTNAME=$P(ATTSARY(ATTIX),ISEP,1),ATTVAL=$P(ATTSARY(ATTIX),ISEP,2)
"RTN","MAGVRS42",59,0)
 . I ATTNAME="" D  Q
"RTN","MAGVRS42",60,0)
 . . S OUT(1)="-4"_SSEP_"Field name missing"
"RTN","MAGVRS42",61,0)
 . . Q
"RTN","MAGVRS42",62,0)
 . ; Set SERVICE INSTITUTION based on value sent for CREATING ENTITY
"RTN","MAGVRS42",63,0)
 . ;;;;
"RTN","MAGVRS42",64,0)
 . I "^2005.6^2005.61^"[("^"_FILE_"^"),ATTNAME="CREATING ENTITY" D  Q:$D(OUT)
"RTN","MAGVRS42",65,0)
 . . N SIFLD,SIVAL,Y,X
"RTN","MAGVRS42",66,0)
 . . ; Note: This must be refined (preferably recast as a service)
"RTN","MAGVRS42",67,0)
 . . ;       if external (non-VA) institution files are introduced in future
"RTN","MAGVRS42",68,0)
 . . S SIFLD="SERVICE INSTITUTION REFERENCE"
"RTN","MAGVRS42",69,0)
 . . S DIC=2005.8,DIC(0)="X",X=ATTVAL D ^DIC S SIVAL=$P(Y,"^",1)
"RTN","MAGVRS42",70,0)
 . . I SIVAL<0 S OUT(1)=-101_SSEP_"CREATING ENTITY ("_ATTVAL_") not found in IMAGING SERVICE INSTITUTION File" Q
"RTN","MAGVRS42",71,0)
 . . S ATTVAL=SIVAL,ATTNAME=SIFLD
"RTN","MAGVRS42",72,0)
 . . Q
"RTN","MAGVRS42",73,0)
 . ;;;
"RTN","MAGVRS42",74,0)
 . S SRCHFLD=$S(ATTNAME?.N.1".".N:ATTNAME,1:$$GETFIELD^MAGVRS41(FILE,ATTNAME))  ; Field Name has at least one Alpha character
"RTN","MAGVRS42",75,0)
 . I SRCHFLD="" D  Q
"RTN","MAGVRS42",76,0)
 . . S OUT(1)="-5"_SSEP_"Unknown field name"
"RTN","MAGVRS42",77,0)
 . . Q
"RTN","MAGVRS42",78,0)
 . D  ; select an index and build a search string
"RTN","MAGVRS42",79,0)
 . . N GBLINFO ; DD information about a field
"RTN","MAGVRS42",80,0)
 . . N GBLLOC ; global location of the field on the file
"RTN","MAGVRS42",81,0)
 . . N GBLNODE ; global node of the field on the file
"RTN","MAGVRS42",82,0)
 . . N GBLPIECE ; piece of the field on the global node
"RTN","MAGVRS42",83,0)
 . . ; already got a cross reference name and value?  if not, try to find one;
"RTN","MAGVRS42",84,0)
 . . ; otherwise, add this field to the screen
"RTN","MAGVRS42",85,0)
 . . I $D(^DD(FILE,"IX",SRCHFLD)),'$D(XREFNAME) D  Q:XREFNAME'=""  ; ICR 5550
"RTN","MAGVRS42",86,0)
 . . . S XREFIX=0
"RTN","MAGVRS42",87,0)
 . . . F  S XREFIX=$O(^DD(FILE,SRCHFLD,1,XREFIX)) Q:'XREFIX  D  Q:$G(XREFNAME)'=""
"RTN","MAGVRS42",88,0)
 . . . . ; select only regular xrefs; not MUMPS / trigger xrefs, etc.
"RTN","MAGVRS42",89,0)
 . . . . S XREFINFO=$G(^DD(FILE,SRCHFLD,1,XREFIX,0)) Q:XREFINFO=""
"RTN","MAGVRS42",90,0)
 . . . . S:$P(XREFINFO,"^",3)="" XREFNAME=$P(XREFINFO,"^",2)
"RTN","MAGVRS42",91,0)
 . . . . S:XREFNAME'="" XREFVAL=ATTVAL
"RTN","MAGVRS42",92,0)
 . . . . Q
"RTN","MAGVRS42",93,0)
 . . . Q
"RTN","MAGVRS42",94,0)
 . . ; add this field to the screen
"RTN","MAGVRS42",95,0)
 . . D FIELD^DID(FILE,SRCHFLD,,"GLOBAL SUBSCRIPT LOCATION","GBLINFO")
"RTN","MAGVRS42",96,0)
 . . I $D(^TMP("DIERR",$J)) D  Q
"RTN","MAGVRS42",97,0)
 . . . S OUT(1)="-13"_SSEP_$G(^TMP("DIERR",$J,1))_"FM "_$G(^(1,"TEXT",1))
"RTN","MAGVRS42",98,0)
 . . . Q
"RTN","MAGVRS42",99,0)
 . . S GBLLOC=$G(GBLINFO("GLOBAL SUBSCRIPT LOCATION"))
"RTN","MAGVRS42",100,0)
 . . I GBLLOC="" S OUT(1)="-11"_SSEP_"DD information not available for attribute "_ATTNAME Q
"RTN","MAGVRS42",101,0)
 . . S GBLNODE=$P(GBLLOC,";",1),GBLPIECE=+$P(GBLLOC,";",2)
"RTN","MAGVRS42",102,0)
 . . I 'GBLPIECE D  Q
"RTN","MAGVRS42",103,0)
 . . . S OUT(1)="-6"_SSEP_"Not a top-level field name"
"RTN","MAGVRS42",104,0)
 . . . Q
"RTN","MAGVRS42",105,0)
 . . I GBLNODE="" D  Q
"RTN","MAGVRS42",106,0)
 . . . S OUT(1)="-7"_SSEP_"Corrupt field definition in DD"
"RTN","MAGVRS42",107,0)
 . . . Q
"RTN","MAGVRS42",108,0)
 . . I GBLNODE'=+GBLNODE S GBLNODE=""""""_GBLNODE_""""""
"RTN","MAGVRS42",109,0)
 . . S SCRLOGIC="$P(@(DIC_Y_"","_GBLNODE_")""),""^"","_GBLPIECE_")="""_ATTVAL_""""
"RTN","MAGVRS42",110,0)
 . . S SCREEN=$S('$D(SCREEN):"I "_SCRLOGIC,1:SCREEN_","_SCRLOGIC)
"RTN","MAGVRS42",111,0)
 . . Q
"RTN","MAGVRS42",112,0)
 . Q
"RTN","MAGVRS42",113,0)
 Q:$D(OUT)
"RTN","MAGVRS42",114,0)
 I ('$D(XREFVAL))!('$D(XREFNAME)) S OUT(1)="-9"_SSEP_"No cross reference found to search on" Q
"RTN","MAGVRS42",115,0)
 D FIND^DIC(FILE,,"@","QX",XREFVAL,,XREFNAME,$G(SCREEN))
"RTN","MAGVRS42",116,0)
 ; retrieve search results and massage into expected format
"RTN","MAGVRS42",117,0)
 I '$D(^TMP("DILIST",$J,2)) S OUT(1)="-10"_SSEP_"NO MATCH FOUND" Q
"RTN","MAGVRS42",118,0)
 M OUT=^TMP("DILIST",$J,2)
"RTN","MAGVRS42",119,0)
 S OUTIX=0
"RTN","MAGVRS42",120,0)
 F  S OUTIX=$O(OUT(OUTIX)) Q:'OUTIX  S OUT(OUTIX)="0"_SSEP_SSEP_OUT(OUTIX)
"RTN","MAGVRS42",121,0)
 ;
"RTN","MAGVRS42",122,0)
 Q
"RTN","MAGVRS43")
0^101^B12222384
"RTN","MAGVRS43",1,0)
MAGVRS43 ;WOIFO/MLH - RPC calls for DICOM file processing ; 31 Jan 2012 05:41 PM
"RTN","MAGVRS43",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS43",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS43",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS43",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS43",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS43",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS43",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS43",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS43",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS43",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS43",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS43",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS43",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS43",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS43",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS43",17,0)
 ;;
"RTN","MAGVRS43",18,0)
 Q
"RTN","MAGVRS43",19,0)
TIUCHK(OUT,STYIEN) ; is this image study attached to a consult with a TIU note?
"RTN","MAGVRS43",20,0)
 N TIUIEN,PROCIEN,CONIEN,TIUPATIEN,DFN,PATIEN,PATID,PATREFDTA,STYDFN,TIUDFN
"RTN","MAGVRS43",21,0)
 S STYIEN=$G(STYIEN)
"RTN","MAGVRS43",22,0)
 I STYIEN'?1N.E S OUT(1)="-1`Study IEN must be numeric" Q
"RTN","MAGVRS43",23,0)
 I STYIEN'>0 S OUT(1)="-2`Study IEN must be a positive integer" Q
"RTN","MAGVRS43",24,0)
 I '$D(^MAGV(2005.62,STYIEN)) S OUT(1)="-3`No entry on file for Study IEN "_STYIEN Q
"RTN","MAGVRS43",25,0)
 I $P($G(^MAGV(2005.62,STYIEN,5)),"^",2)="I" S OUT(1)="4`Study is inaccessible" Q
"RTN","MAGVRS43",26,0)
 S PROCIEN=$P($G(^MAGV(2005.62,STYIEN,6)),"^",1)
"RTN","MAGVRS43",27,0)
 I PROCIEN="" S OUT(1)="-4`No associated Procedure Reference IEN" Q
"RTN","MAGVRS43",28,0)
 I '$D(^MAGV(2005.61,PROCIEN)) S OUT(1)="-5`No entry on file for associated Procedure Reference IEN "_PROCIEN Q
"RTN","MAGVRS43",29,0)
 I $P($G(^MAGV(2005.61,PROCIEN,0)),"^",3)'="CON" S OUT(1)="1`Associated procedure is not a consult" Q
"RTN","MAGVRS43",30,0)
 ; find DFN of patient associated with procedure
"RTN","MAGVRS43",31,0)
 S PATIEN=$P($G(^MAGV(2005.61,PROCIEN,6)),"^",1)
"RTN","MAGVRS43",32,0)
 I PATIEN="" S OUT(1)="-6`Missing Patient Reference IEN" Q
"RTN","MAGVRS43",33,0)
 I '$D(^MAGV(2005.6,PATIEN)) S OUT(1)="-7`No entry on file for associated Patient Reference IEN" Q
"RTN","MAGVRS43",34,0)
 S PATREFDTA=$G(^MAGV(2005.6,PATIEN,0))
"RTN","MAGVRS43",35,0)
 I $P(PATREFDTA,"^",2)'="V" S OUT(1)="2`Study is not associated with a VA patient" Q
"RTN","MAGVRS43",36,0)
 I $P(PATREFDTA,"^",3)'="D" S OUT(1)="3`Study is not associated with a local DFN" Q
"RTN","MAGVRS43",37,0)
 S STYDFN=$P(PATREFDTA,"^",1)
"RTN","MAGVRS43",38,0)
 ; find DFN of patient associated with consult
"RTN","MAGVRS43",39,0)
 S CONIEN=$P($G(^MAGV(2005.61,PROCIEN,0)),"^",1)
"RTN","MAGVRS43",40,0)
 S:$P(CONIEN,"-",1)="GMRC" CONIEN=$P(CONIEN,"-",2)
"RTN","MAGVRS43",41,0)
 S TIUIEN=$$TIULAST^MAGDGMRC(CONIEN)
"RTN","MAGVRS43",42,0)
 I "0"[TIUIEN S OUT(1)="5`No associated TIU note for associated consult "_CONIEN Q
"RTN","MAGVRS43",43,0)
 S TIUDFN=$$GET1^DIQ(8925,TIUIEN,.02,"I") ; entry on VA patient file
"RTN","MAGVRS43",44,0)
 I "0"[TIUDFN S OUT(1)="-8`No DFN on file for TIU note "_TIUIEN Q
"RTN","MAGVRS43",45,0)
 ; compare the two DFNs
"RTN","MAGVRS43",46,0)
 I TIUDFN'=STYDFN S OUT(1)="-9`VA Patient IEN associated with TIU Document does not match Patient IEN associated with Study" Q
"RTN","MAGVRS43",47,0)
 S OUT(1)="0``"_TIUIEN
"RTN","MAGVRS43",48,0)
 Q
"RTN","MAGVRS44")
0^102^B40208831
"RTN","MAGVRS44",1,0)
MAGVRS44 ;WOIFO/DAC,MLH - Utilities for RPC calls for DICOM file processing ; 17 Jul 2012 1:59 PM
"RTN","MAGVRS44",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS44",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS44",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS44",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS44",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS44",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS44",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS44",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS44",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS44",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS44",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS44",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS44",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS44",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS44",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS44",17,0)
 ;;
"RTN","MAGVRS44",18,0)
 Q
"RTN","MAGVRS44",19,0)
INACT(OUT,FILE,IEN,PIEN,OVERRIDE,REASON) ; Marks the entry indicated by file # and IEN as deleted
"RTN","MAGVRS44",20,0)
 N FDA,ERR,DELAPP,DIEN,UID,AOFUNSET,PPIEN,PFILE,RESULT,STATUS,SSEP,OSEP,ISEP,TOKEN,MAGRY
"RTN","MAGVRS44",21,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS44",22,0)
 S OUT(1)=0
"RTN","MAGVRS44",23,0)
 I $G(IEN)="" S OUT(1)="-1"_SSEP_"No IEN" Q
"RTN","MAGVRS44",24,0)
 I $G(FILE)="" S OUT(1)="-2"_SSEP_"No FILE number provided" Q
"RTN","MAGVRS44",25,0)
 I '$D(OVERRIDE) S OUT(1)="-7"_SSEP_"Override flag not passed" Q
"RTN","MAGVRS44",26,0)
 I $G(REASON)="" S REASON="Not provided"
"RTN","MAGVRS44",27,0)
 I IEN'=+IEN S OUT(1)="-6"_SSEP_"Invalid IEN format" Q
"RTN","MAGVRS44",28,0)
 I FILE'=2005.6,'OVERRIDE,'$$PARENT^MAGVRS41(FILE,IEN,PIEN) S OUT(1)="-2"_SSEP_"Parent Record not verified" Q
"RTN","MAGVRS44",29,0)
 ; can only invalidate PATIENT REF and PROCEDURE REF entries w/o children
"RTN","MAGVRS44",30,0)
 I ((FILE=2005.6)!(FILE=2005.61)),$D(^MAGV(FILE+.01,"C",IEN)) D  Q
"RTN","MAGVRS44",31,0)
 . S OUT(1)="-6"_SSEP_"Cannot inactivate "
"RTN","MAGVRS44",32,0)
 . S:FILE=2005.6 OUT(1)=OUT(1)_"PATIENT REF"
"RTN","MAGVRS44",33,0)
 . S:FILE=2005.61 OUT(1)=OUT(1)_"PROCEDURE REF"
"RTN","MAGVRS44",34,0)
 . S OUT(1)=OUT(1)_" entry with children"
"RTN","MAGVRS44",35,0)
 . Q
"RTN","MAGVRS44",36,0)
 I '$D(^MAGV(FILE,IEN,0)) S OUT(1)="-3"_SSEP_"No record for file # and IEN provided." Q
"RTN","MAGVRS44",37,0)
 ; Delete main record and then delete all related child records
"RTN","MAGVRS44",38,0)
 S FIELD=$$GETFIELD^MAGVRS41(FILE,"STATUS")
"RTN","MAGVRS44",39,0)
 ; If record is already INACTIVE quit
"RTN","MAGVRS44",40,0)
 S STATUS=$$GET1^DIQ(FILE,IEN,FIELD,"I")
"RTN","MAGVRS44",41,0)
 I STATUS="I" Q 
"RTN","MAGVRS44",42,0)
 S FDA(FILE,IEN_",",FIELD)="I" ; Set Status to Inactive
"RTN","MAGVRS44",43,0)
 I FILE=2005.65 D
"RTN","MAGVRS44",44,0)
 . S FDA(2005.65,IEN_",",9)=$$NOW^XLFDT
"RTN","MAGVRS44",45,0)
 . S FDA(2005.65,IEN_",",10)=DUZ
"RTN","MAGVRS44",46,0)
 . S FDA(2005.65,IEN_",",12)=REASON
"RTN","MAGVRS44",47,0)
 . S TOKEN=$P(^MAGV(2005.65,IEN,0),U,1)
"RTN","MAGVRS44",48,0)
 . S DELAPP="MAG SYS DELETE"
"RTN","MAGVRS44",49,0)
 . D DELAFACT^MAGVAD02(.MAGRY,TOKEN,DELAPP)
"RTN","MAGVRS44",50,0)
 . S MAGRY=$TR(MAGRY,$$RESDEL^MAGVAF02,ISEP)
"RTN","MAGVRS44",51,0)
 . I MAGRY'=0 S OUT(1)=MAGRY
"RTN","MAGVRS44",52,0)
 . Q
"RTN","MAGVRS44",53,0)
 I FILE'=2005.65 D
"RTN","MAGVRS44",54,0)
 . S FIELD=$$GETFIELD^MAGVRS41(FILE,"ARTIFACT ON FILE")
"RTN","MAGVRS44",55,0)
 . I FIELD'="" S FDA(FILE,IEN_",",FIELD)=0 ; Set Artifact on File to false
"RTN","MAGVRS44",56,0)
 . Q
"RTN","MAGVRS44",57,0)
 D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS44",58,0)
 I FILE'=2005.65 D DELLOG^MAGVRS61(.RESULT,IEN,FILE) I +RESULT<0 S OUT(1)=RESULT
"RTN","MAGVRS44",59,0)
 I $D(ERR("DIERR")) S OUT(1)="-3"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS44",60,0)
 K ERR,FDA
"RTN","MAGVRS44",61,0)
 ; 
"RTN","MAGVRS44",62,0)
 ; Update Number of SOP and SERIES Number fields in the Study and Series files
"RTN","MAGVRS44",63,0)
 I (FILE=2005.63)!(FILE=2005.64) S PFILE=FILE-.01,FDA(PFILE,PIEN_",",7)=+$G(^MAGV(PFILE,PIEN,4))-1
"RTN","MAGVRS44",64,0)
 I FILE=2005.64 S PFILE=2005.62 S PPIEN=+$G(^MAGV(2005.63,PIEN,4)),FDA(2005.62,PPIEN_",",20)=$P($G(^MAGV(2005.62,PPIEN,4)),U,2)-1
"RTN","MAGVRS44",65,0)
 I (FILE=2005.63)!(FILE=2005.64) D FILE^DIE("","FDA","ERR") K FDA
"RTN","MAGVRS44",66,0)
 S DIEN=""
"RTN","MAGVRS44",67,0)
 F  S DIEN=$O(^MAGV(FILE+.01,"C",IEN,DIEN)) Q:DIEN=""  D
"RTN","MAGVRS44",68,0)
 . D INACT(.OUT,FILE+.01,DIEN,IEN,1,REASON)
"RTN","MAGVRS44",69,0)
 . Q
"RTN","MAGVRS44",70,0)
 Q
"RTN","MAGVRS44",71,0)
SETFDA(FILE,ATTS,IENS,FDA,FIELDERR,UPDATE,FDB) ; Set the FDA array for updates and new attachments
"RTN","MAGVRS44",72,0)
 N FIELDVAL,VALUE,FIELD,I,IX,J,MIEN,MFILE,MSFILE,MULT,MVALUE,VALID,VALUE,DIC,ISEP,OSEP,TYPEFDA,TYPEIEN,SOPIEN,SOPFDA,X,Y,FNUM
"RTN","MAGVRS44",73,0)
 N SIVAL,SIFLD,ERROR
"RTN","MAGVRS44",74,0)
 S FIELDVAL="",IX="",MIEN=2,ISEP=$$INPUTSEP^MAGVRS41
"RTN","MAGVRS44",75,0)
 F  D  Q:IX=""  Q:$D(ERROR)
"RTN","MAGVRS44",76,0)
 . S IX=$O(ATTS(IX)) Q:IX=""
"RTN","MAGVRS44",77,0)
 . S FIELDVAL=ATTS(IX)
"RTN","MAGVRS44",78,0)
 . S FIELD=$P(FIELDVAL,ISEP,1)
"RTN","MAGVRS44",79,0)
 . ; Kill DEVICE MANUFACTURER and DEVICE MODEL
"RTN","MAGVRS44",80,0)
 . I (FIELD="DEVICE MANUFACTURER")!(FIELD="DEVICE MODEL") K ATTS(IX) Q
"RTN","MAGVRS44",81,0)
 . I FIELD["OVERRIDE" Q
"RTN","MAGVRS44",82,0)
 . S VALUE=$P(FIELDVAL,ISEP,2)
"RTN","MAGVRS44",83,0)
 . S VALUE=$TR(VALUE,"^","~")
"RTN","MAGVRS44",84,0)
 . ; Set ACQUISITION LOCATION and SERVICE INSTITUTION REFERENCE
"RTN","MAGVRS44",85,0)
 . I (FIELD="CREATING ENTITY")!(FIELD="ACQUISITION LOCATION") D  Q:$D(FIELDERR)
"RTN","MAGVRS44",86,0)
 . . D SERVINST(VALUE,.SIVAL)
"RTN","MAGVRS44",87,0)
 . . I ($G(SIVAL)<0) D SERVERR(.FIELDERR,FIELD,VALUE) S:FIELDERR["Error" ERROR=1 Q
"RTN","MAGVRS44",88,0)
 . . S FIELD=$S(FIELD="CREATING ENTITY":"SERVICE INSTITUTION REFERENCE",1:FIELD)
"RTN","MAGVRS44",89,0)
 . . S VALUE=SIVAL
"RTN","MAGVRS44",90,0)
 . . Q
"RTN","MAGVRS44",91,0)
 . ; Handle SOP CLASS UID
"RTN","MAGVRS44",92,0)
 . I FIELD="SOP CLASS UID",$G(VALUE)'="" D
"RTN","MAGVRS44",93,0)
 . . I '$D(^MAG(2006.532,"B",VALUE)) D
"RTN","MAGVRS44",94,0)
 . . . S SOPFDA(2006.532,"+1,",.01)=VALUE
"RTN","MAGVRS44",95,0)
 . . . D UPDATE^DIE("","SOPFDA","","SOPERR")
"RTN","MAGVRS44",96,0)
 . . . Q
"RTN","MAGVRS44",97,0)
 . . ; If the device is in 2006.04 get IEN of entry
"RTN","MAGVRS44",98,0)
 . . S SOPIEN=$O(^MAG(2006.532,"B",VALUE,""))
"RTN","MAGVRS44",99,0)
 . . S VALUE=SOPIEN
"RTN","MAGVRS44",100,0)
 . . Q
"RTN","MAGVRS44",101,0)
 . I FIELD="TYPE INDEX",$G(VALUE)'="" D
"RTN","MAGVRS44",102,0)
 . . I '$D(^MAG(2005.83,"B",VALUE)) D
"RTN","MAGVRS44",103,0)
 . . . S TYPEFDA(2005.83,"+1,",.01)=VALUE
"RTN","MAGVRS44",104,0)
 . . . D UPDATE^DIE("","TYPEFDA","","TYPEERR")
"RTN","MAGVRS44",105,0)
 . . . Q
"RTN","MAGVRS44",106,0)
 . . ; If the device is in 2005.83 get IEN of entry
"RTN","MAGVRS44",107,0)
 . . S TYPEIEN=$O(^MAG(2005.83,"B",VALUE,""))
"RTN","MAGVRS44",108,0)
 . . S VALUE=TYPEIEN
"RTN","MAGVRS44",109,0)
 . . Q
"RTN","MAGVRS44",110,0)
 . I FIELD="PHOTOMETRIC INTERPRETATION",$G(VALUE)'="" D
"RTN","MAGVRS44",111,0)
 . . S VALUE=$$PHOTOIN(VALUE)
"RTN","MAGVRS44",112,0)
 . . I VALUE="" S FIELDERR="Warning - Invalid field: "_FIELD Q
"RTN","MAGVRS44",113,0)
 . . Q
"RTN","MAGVRS44",114,0)
 . I ((FIELD="TYPE INDEX")!(FIELD="SOP CLASS UID"))&(VALUE="") Q
"RTN","MAGVRS44",115,0)
 . S FNUM=$$GETFIELD^MAGVRS41(FILE,FIELD)
"RTN","MAGVRS44",116,0)
 . I FNUM=0 S FIELDERR="Warning - Invalid field: "_FIELD Q
"RTN","MAGVRS44",117,0)
 . I $$NUMERIC^MAGVRS41(FILE,FIELD) S VALUE=$TR(VALUE,"")
"RTN","MAGVRS44",118,0)
 . I $$DATETIME^MAGVRS41(FILE,FIELD) S VALUE=$$IDF2FM^MAGVAF01(VALUE)
"RTN","MAGVRS44",119,0)
 . ; Do not validate for internal values or LAYGO fields
"RTN","MAGVRS44",120,0)
 . I (VALUE'=""),$$GET1^DID(FILE,FNUM,"","TYPE")'="POINTER" D CHK^DIE(FILE,FNUM,"E",VALUE,.VALID) I VALID="^" S FIELDERR="Warning - Invalid data:"_VALUE_" Field:"_FIELD Q
"RTN","MAGVRS44",121,0)
 . S FDA(FILE,IENS,FNUM)=VALUE
"RTN","MAGVRS44",122,0)
 . Q
"RTN","MAGVRS44",123,0)
 Q
"RTN","MAGVRS44",124,0)
PHOTOIN(VALUE) ; Return the enumerated code for a photometric interpretation
"RTN","MAGVRS44",125,0)
 N CODE,CODEVAL,I,RES
"RTN","MAGVRS44",126,0)
 S CODE=""
"RTN","MAGVRS44",127,0)
 D FIELD^DID(2005.64,21,"","POINTER","RES")
"RTN","MAGVRS44",128,0)
 F I=1:1:$L(RES("POINTER"),";") S CODEVAL=$P(RES("POINTER"),";",I) Q:CODE'=""  D
"RTN","MAGVRS44",129,0)
 . I $P(CODEVAL,":",2)=$G(VALUE) S CODE=$P(CODEVAL,":",1)
"RTN","MAGVRS44",130,0)
 . Q
"RTN","MAGVRS44",131,0)
 Q CODE
"RTN","MAGVRS44",132,0)
 ; 
"RTN","MAGVRS44",133,0)
 ;***** Returns and stores Service Institution 
"RTN","MAGVRS44",134,0)
 ;
"RTN","MAGVRS44",135,0)
 ; Input Parameters
"RTN","MAGVRS44",136,0)
 ; ================
"RTN","MAGVRS44",137,0)
 ; VALUE=Site IEN
"RTN","MAGVRS44",138,0)
 ; 
"RTN","MAGVRS44",139,0)
 ; Return Values
"RTN","MAGVRS44",140,0)
 ; =============
"RTN","MAGVRS44",141,0)
 ; SIVAL=IEN of entry in the Imaging Service Institution file (#2005.8)
"RTN","MAGVRS44",142,0)
 ; 
"RTN","MAGVRS44",143,0)
SERVINST(VALUE,SIVAL) ;
"RTN","MAGVRS44",144,0)
 N DIC,DLAYGO,X,Y
"RTN","MAGVRS44",145,0)
 S (DIC,DLAYGO)=2005.8,DIC(0)="LX",X=$G(VALUE) D ^DIC S SIVAL=$P(Y,"^",1)
"RTN","MAGVRS44",146,0)
 Q
"RTN","MAGVRS44",147,0)
SERVERR(FIELDERR,FIELD,VALUE) ; Sets field error with field and value
"RTN","MAGVRS44",148,0)
 I FIELD="ACQUISITION LOCATION" S FIELDERR="Warning - "_$G(FIELD)_" ("_$G(VALUE)_") "_" not found in IMAGING SERVICE INSTITUTION file (#2005.8)."
"RTN","MAGVRS44",149,0)
 I FIELD="CREATING ENTITY" S FIELDERR="Error - "_$G(FIELD)_" ("_$G(VALUE)_") "_" not found in IMAGING SERVICE INSTITUTION file (#2005.8)."
"RTN","MAGVRS44",150,0)
 Q
"RTN","MAGVRS45")
0^103^B10063504
"RTN","MAGVRS45",1,0)
MAGVRS45 ;WOIFO/DAC,MLH - Utilities for RPC calls for DICOM file processing ; 19 Jan 2012 04:41 PM
"RTN","MAGVRS45",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS45",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS45",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS45",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS45",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS45",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS45",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS45",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS45",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS45",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS45",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS45",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS45",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS45",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS45",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS45",17,0)
 ;;
"RTN","MAGVRS45",18,0)
 Q
"RTN","MAGVRS45",19,0)
INPUTSEP() ; Name value separator for input data  ie. NAME`TESTPATIENT
"RTN","MAGVRS45",20,0)
 Q "`"
"RTN","MAGVRS45",21,0)
OUTSEP() ; Name value separator for output data ie. NAME|TESTPATIENT
"RTN","MAGVRS45",22,0)
 Q "|"
"RTN","MAGVRS45",23,0)
STATSEP() ; Status and Result separator ie. -3``No record IEN  
"RTN","MAGVRS45",24,0)
 Q "`"
"RTN","MAGVRS45",25,0)
TRAVERSE(OUT,PFILENUM,IEN,DIR,CHILDIEN) ;utility - traverse a file
"RTN","MAGVRS45",26,0)
 N OSEP,ISEP,SSEP,RETIEN,FILE,STATFIELD,ACTIVE
"RTN","MAGVRS45",27,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP
"RTN","MAGVRS45",28,0)
 I "^0^1^2^3^4^"'[("^"_(PFILENUM-2005.6*100)_"^") D  Q
"RTN","MAGVRS45",29,0)
 . S OUT(1)="-1"_SSEP_"Invalid file"
"RTN","MAGVRS45",30,0)
 . Q
"RTN","MAGVRS45",31,0)
 I ($G(IEN)'=+$G(IEN))!'IEN D  Q
"RTN","MAGVRS45",32,0)
 . S OUT(1)="-2"_SSEP_"Invalid root IEN"
"RTN","MAGVRS45",33,0)
 . Q
"RTN","MAGVRS45",34,0)
 I '$D(^MAGV(PFILENUM,IEN)) D  Q
"RTN","MAGVRS45",35,0)
 . S OUT(1)="-7"_SSEP_"IEN "_IEN_" not found in file "_PFILENUM
"RTN","MAGVRS45",36,0)
 . Q
"RTN","MAGVRS45",37,0)
 I ".FIRST.PREV.NEXT.LAST."'[("."_$TR(DIR,".")_".") D  Q
"RTN","MAGVRS45",38,0)
 . S OUT(1)="-3"_SSEP_"Invalid direction"
"RTN","MAGVRS45",39,0)
 . Q
"RTN","MAGVRS45",40,0)
 I DIR'="PREV",DIR'="NEXT",$G(CHILDIEN) D  Q
"RTN","MAGVRS45",41,0)
 . S OUT(1)="-4"_SSEP_"Child IEN not to be specified in command "_DIR
"RTN","MAGVRS45",42,0)
 . Q
"RTN","MAGVRS45",43,0)
 I DIR'="FIRST",DIR'="LAST",($G(CHILDIEN)'=+$G(CHILDIEN))!'$G(CHILDIEN) D  Q
"RTN","MAGVRS45",44,0)
 . S OUT(1)="-5"_SSEP_"Invalid child IEN in command "_DIR
"RTN","MAGVRS45",45,0)
 . Q
"RTN","MAGVRS45",46,0)
 I $$GET1^DIQ(PFILENUM,IEN,$$GETFIELD^MAGVRS41(PFILENUM,"STATUS"),"I")'="A" D  Q
"RTN","MAGVRS45",47,0)
 . S OUT(1)="-6"_SSEP_"Can't traverse children of inaccessible parent IEN "_IEN
"RTN","MAGVRS45",48,0)
 . Q
"RTN","MAGVRS45",49,0)
 S FILE=PFILENUM+.01
"RTN","MAGVRS45",50,0)
 I DIR'="FIRST",DIR'="LAST",'$D(^MAGV(FILE,"C",IEN,CHILDIEN)) D  Q
"RTN","MAGVRS45",51,0)
 . S OUT(1)="-8"_SSEP_"Invalid child IEN in command "_DIR
"RTN","MAGVRS45",52,0)
 . Q
"RTN","MAGVRS45",53,0)
 S:DIR="FIRST" DIR="NEXT",CHILDIEN=""
"RTN","MAGVRS45",54,0)
 S:DIR="LAST" DIR="PREV",CHILDIEN=""
"RTN","MAGVRS45",55,0)
 S STATFIELD=$$GETFIELD^MAGVRS41(FILE,"STATUS")
"RTN","MAGVRS45",56,0)
 S RETIEN=CHILDIEN,ACTIVE=0
"RTN","MAGVRS45",57,0)
 F  S RETIEN=$O(^MAGV(FILE,"C",IEN,RETIEN),$S(DIR="PREV":-1,1:1)) Q:'RETIEN  D  Q:ACTIVE
"RTN","MAGVRS45",58,0)
 . S ACTIVE=($$GET1^DIQ(FILE,RETIEN,STATFIELD,"I")="A")
"RTN","MAGVRS45",59,0)
 . Q
"RTN","MAGVRS45",60,0)
 S:RETIEN="" RETIEN=0
"RTN","MAGVRS45",61,0)
 S OUT(1)="0"_SSEP_SSEP_RETIEN
"RTN","MAGVRS45",62,0)
 Q
"RTN","MAGVRS46")
0^104^B12606360
"RTN","MAGVRS46",1,0)
MAGVRS46 ;WOIFO/DAC,MLH,NST - Utilities for RPC calls for DICOM file processing ; 29 Feb 2012 5:21 PM
"RTN","MAGVRS46",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS46",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS46",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS46",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS46",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS46",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS46",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS46",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS46",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS46",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS46",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS46",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS46",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS46",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS46",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS46",17,0)
 ;;
"RTN","MAGVRS46",18,0)
 Q
"RTN","MAGVRS46",19,0)
 ;  Called by MAGVRS41
"RTN","MAGVRS46",20,0)
 ;
"RTN","MAGVRS46",21,0)
 ;+++++  Add multi-keys to KEYFLD array
"RTN","MAGVRS46",22,0)
 ; Input Parameters
"RTN","MAGVRS46",23,0)
 ; ================
"RTN","MAGVRS46",24,0)
 ;  
"RTN","MAGVRS46",25,0)
 ;   FILE    - VA FileMan file number ( e.g. 2005.6)
"RTN","MAGVRS46",26,0)
 ;  .ATTNAMS - Array with field names and values
"RTN","MAGVRS46",27,0)
 ;  .KEYFLD  - Array with key field and values 
"RTN","MAGVRS46",28,0)
 ; 
"RTN","MAGVRS46",29,0)
 ; Return values
"RTN","MAGVRS46",30,0)
 ; =============
"RTN","MAGVRS46",31,0)
 ; 
"RTN","MAGVRS46",32,0)
 ; if error found during execution
"RTN","MAGVRS46",33,0)
 ;   OUT(1) = Negative number ` Error message
"RTN","MAGVRS46",34,0)
 ; if success
"RTN","MAGVRS46",35,0)
 ;    OUT(1)  is not set
"RTN","MAGVRS46",36,0)
 ;
"RTN","MAGVRS46",37,0)
ADDMKEYS(OUT,FILE,ATTNAMS,KEYFLD)  ; Set multi-keys
"RTN","MAGVRS46",38,0)
 N FIELD,NAM,VAL
"RTN","MAGVRS46",39,0)
 N SSEP
"RTN","MAGVRS46",40,0)
 S SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS46",41,0)
 ; Add multi-keys for Patient and Procedure reference
"RTN","MAGVRS46",42,0)
 I (FILE=2005.6)!(FILE=2005.61) D
"RTN","MAGVRS46",43,0)
 . S FIELD=.01
"RTN","MAGVRS46",44,0)
 . F  S FIELD=$O(^DD(FILE,FIELD)) Q:(FIELD'>0)!(FIELD'<.05)  D  Q:$D(OUT(1))  ; Private IA (#5551)
"RTN","MAGVRS46",45,0)
 . . S NAM=$$GET1^DID(FILE,FIELD,,"LABEL")
"RTN","MAGVRS46",46,0)
 . . I '$D(ATTNAMS(NAM)) S OUT(1)="-61"_SSEP_"Expected attribute "_NAM_" not found" Q
"RTN","MAGVRS46",47,0)
 . . S KEYFLD(FIELD)=ATTNAMS(NAM)
"RTN","MAGVRS46",48,0)
 . . S KEYFLD(FIELD,"GSL")=$$GET1^DID(FILE,FIELD,,"GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGVRS46",49,0)
 . . Q
"RTN","MAGVRS46",50,0)
 . Q:$D(OUT(1))
"RTN","MAGVRS46",51,0)
 . ; Resolve Creating Entity value
"RTN","MAGVRS46",52,0)
 . I '$D(ATTNAMS("CREATING ENTITY")) S OUT(1)="-62"_SSEP_"Expected attribute CREATING ENTITY not found" Q 
"RTN","MAGVRS46",53,0)
 . D SERVINST^MAGVRS44(ATTNAMS("CREATING ENTITY"),.VAL)
"RTN","MAGVRS46",54,0)
 . I VAL'>0 S OUT(1)="-65"_SSEP_"Cannot resolve Creating Entity value: "_ATTNAMS("CREATING ENTITY") Q
"RTN","MAGVRS46",55,0)
 . S KEYFLD(.05)=VAL
"RTN","MAGVRS46",56,0)
 . S KEYFLD(.05,"GSL")=$$GET1^DID(FILE,.05,,"GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGVRS46",57,0)
 . Q
"RTN","MAGVRS46",58,0)
 Q
"RTN","MAGVRS46",59,0)
 ;
"RTN","MAGVRS46",60,0)
 ;+++++  Find a record by .01 field and key fields
"RTN","MAGVRS46",61,0)
 ; Input Parameters
"RTN","MAGVRS46",62,0)
 ; ================
"RTN","MAGVRS46",63,0)
 ;  
"RTN","MAGVRS46",64,0)
 ;   FILE - VA FileMan file number ( e.g. 2005.6)
"RTN","MAGVRS46",65,0)
 ;   UATT - Value to be found in "B" cross-reference
"RTN","MAGVRS46",66,0)
 ;   PIEN - Parent IEN (.e.g. Patient reference is a parent of Procedure reference)
"RTN","MAGVRS46",67,0)
 ;  .KEYFLD  - Array with key field and values 
"RTN","MAGVRS46",68,0)
 ; 
"RTN","MAGVRS46",69,0)
 ; Return values
"RTN","MAGVRS46",70,0)
 ; =============
"RTN","MAGVRS46",71,0)
 ;  If a record is not found it returns zero (0),
"RTN","MAGVRS46",72,0)
 ;  If a record is found it returns IEN of the record
"RTN","MAGVRS46",73,0)
 ;   
"RTN","MAGVRS46",74,0)
MATCH(FILE,UATT,PIEN,KEYFLD) ; Find match by keys
"RTN","MAGVRS46",75,0)
 N POS,HIT,IEN,R,I
"RTN","MAGVRS46",76,0)
 ;
"RTN","MAGVRS46",77,0)
 S FILE=+$G(FILE)
"RTN","MAGVRS46",78,0)
 S UATT=$G(UATT)
"RTN","MAGVRS46",79,0)
 S PIEN=$G(PIEN)
"RTN","MAGVRS46",80,0)
 ;
"RTN","MAGVRS46",81,0)
 I UATT="" Q 0  ; no record found
"RTN","MAGVRS46",82,0)
 ;
"RTN","MAGVRS46",83,0)
 S HIT=0
"RTN","MAGVRS46",84,0)
 S IEN=0
"RTN","MAGVRS46",85,0)
 F  S IEN=$O(^MAGV(FILE,"B",UATT,IEN)) Q:'IEN  D  Q:HIT
"RTN","MAGVRS46",86,0)
 . S R=$G(^MAGV(FILE,IEN,0))  ; The assumption is that all key fields are on "0" subscript
"RTN","MAGVRS46",87,0)
 . D:R'=""
"RTN","MAGVRS46",88,0)
 . . S HIT=1,I=0
"RTN","MAGVRS46",89,0)
 . . F  S I=$O(KEYFLD(I)) Q:'I  S POS=$P(KEYFLD(I,"GSL"),";",2) I $P(R,"^",POS)'=KEYFLD(I) S HIT=0 Q
"RTN","MAGVRS46",90,0)
 . . ; Check the parent for study and series
"RTN","MAGVRS46",91,0)
 . . I ((FILE=2005.62)!(FILE=2005.63)) D
"RTN","MAGVRS46",92,0)
 . . . I PIEN'=+$G(^MAGV(FILE,IEN,6)) S HIT=0
"RTN","MAGVRS46",93,0)
 . . . Q
"RTN","MAGVRS46",94,0)
 . . Q
"RTN","MAGVRS46",95,0)
 . Q
"RTN","MAGVRS46",96,0)
 Q IEN
"RTN","MAGVRS51")
0^105^B82412262
"RTN","MAGVRS51",1,0)
MAGVRS51 ;WOIFO/DAC/JSL/NST - Utilities for RPC calls for DICOM file processing ; 16 Jul 2012 1:07 PM
"RTN","MAGVRS51",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS51",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS51",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS51",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS51",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS51",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS51",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS51",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS51",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS51",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS51",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS51",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS51",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS51",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS51",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS51",17,0)
 ;;
"RTN","MAGVRS51",18,0)
 Q
"RTN","MAGVRS51",19,0)
OUTSEP() ; Name value separator for output data ie. NAME|TESTPATIENT
"RTN","MAGVRS51",20,0)
 Q "|"
"RTN","MAGVRS51",21,0)
MULTISEP() ; Name value separator for multiple option values ie. READ|1`WRITE|1`DELETE|0
"RTN","MAGVRS51",22,0)
 Q "="
"RTN","MAGVRS51",23,0)
STATSEP() ; Status and Result separator ie. -3``No record IEN  
"RTN","MAGVRS51",24,0)
 Q "`"
"RTN","MAGVRS51",25,0)
INPUTSEP() ; Name value separator for input data ie. NAME`TESTPATIENT   
"RTN","MAGVRS51",26,0)
 Q "`"
"RTN","MAGVRS51",27,0)
DCRCTSET(OUT,ATTS) ; Set DICOM Correct data into file 2006.575
"RTN","MAGVRS51",28,0)
 N FDA,ERR,IENS,STUDYUID,IEN,FIELDERR
"RTN","MAGVRS51",29,0)
 S IENS="+1,"
"RTN","MAGVRS51",30,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP
"RTN","MAGVRS51",31,0)
 D SETFDA^MAGVRS44(2006.575,.ATTS,IENS,.FDA,.FIELDERR)
"RTN","MAGVRS51",32,0)
 S FILEPATH=$G(FDA(2006.575,"+1,",.01))
"RTN","MAGVRS51",33,0)
 I FILEPATH="" S OUT="-1"_SSEP_"No FILEPATH identified" Q
"RTN","MAGVRS51",34,0)
 I $D(^MAGD(2006.575,"B",FILEPATH)) S OUT="-4"_SSEP_"Non-unique FILEPATH" Q
"RTN","MAGVRS51",35,0)
 S STUDYUID=$G(FDA(2006.575,"+1,",9)) S LOCATION=$G(FDA(2006.575,"+1,",36))
"RTN","MAGVRS51",36,0)
 K FDA(2006.575,"+1,",9),FDA(2006.575,"+1,",36)
"RTN","MAGVRS51",37,0)
 D UPDATE^DIE("","FDA","","ERR")
"RTN","MAGVRS51",38,0)
 S IEN=$O(^MAGD(2006.575,"B",FILEPATH,"")) ; New Record IEN
"RTN","MAGVRS51",39,0)
 S OUT="0"_SSEP_$G(FIELDERR)_SSEP_IEN ; Set return ouput to IEN of new record
"RTN","MAGVRS51",40,0)
 K FDA
"RTN","MAGVRS51",41,0)
 I $D(ERR("DIERR",1,"TEXT",1)) S OUT="-2"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS51",42,0)
 K ERR
"RTN","MAGVRS51",43,0)
 ;Must re-file with Study UID after location has been set to create "F" (location & Study UID) x-ref
"RTN","MAGVRS51",44,0)
 S FDA(2006.575,IEN_",",9)=1
"RTN","MAGVRS51",45,0)
 D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS51",46,0)
 K FDA,ERR
"RTN","MAGVRS51",47,0)
 I $D(ERR("DIERR",1,"TEXT",1)) S OUT="-3"_SSEP_"Related record:"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS51",48,0)
 ;
"RTN","MAGVRS51",49,0)
 ;Must re-file with Study UID after location has been set to create "F" (location & Study UID) x-ref
"RTN","MAGVRS51",50,0)
 S FDA(2006.575,IEN_",",36)=LOCATION
"RTN","MAGVRS51",51,0)
 D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS51",52,0)
 I $D(ERR("DIERR",1,"TEXT",1)) S OUT="-3"_SSEP_"Related record:"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS51",53,0)
 K FDA,ERR
"RTN","MAGVRS51",54,0)
 ;
"RTN","MAGVRS51",55,0)
 ;Must re-file with Study UID after location has been set to create "F" (location & Study UID) x-ref
"RTN","MAGVRS51",56,0)
 S FDA(2006.575,IEN_",",9)=STUDYUID
"RTN","MAGVRS51",57,0)
 D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS51",58,0)
 K FDA,ERR
"RTN","MAGVRS51",59,0)
 I $D(ERR("DIERR",1,"TEXT",1)) S OUT="-3"_SSEP_"Related record:"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS51",60,0)
 ; 
"RTN","MAGVRS51",61,0)
 Q
"RTN","MAGVRS51",62,0)
DCRCTGET(OUT,MACHID) ; Get DICOM Correct data from file 2006.575 
"RTN","MAGVRS51",63,0)
 ; Return record data for all fixed and deleted images of machine ID provided
"RTN","MAGVRS51",64,0)
 N IEN,J,RIEN,DOB,DFN,ICN,SEX,VADM,PATLOOK,SERVTYPE,CASENUMB,NEWCASE
"RTN","MAGVRS51",65,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP,J=2,IEN=0,OUT(1)="0"_SSEP_SSEP
"RTN","MAGVRS51",66,0)
 F  S IEN=$O(^MAGD(2006.575,IEN)) Q:+IEN=0  D
"RTN","MAGVRS51",67,0)
 . ; Return deleted records
"RTN","MAGVRS51",68,0)
 . I ($P($G(^MAGD(2006.575,IEN,0)),U,6)=1)&(MACHID=$P($G(^MAGD(2006.575,IEN,1)),U,4)) D  Q
"RTN","MAGVRS51",69,0)
 . . S OUT(J)="FILEPATH"_OSEP_$P($G(^MAGD(2006.575,IEN,0)),U,1)_SSEP,J=J+1
"RTN","MAGVRS51",70,0)
 . . S OUT(J)="DELETE FLAG"_OSEP_1_SSEP,J=J+1
"RTN","MAGVRS51",71,0)
 . . Q
"RTN","MAGVRS51",72,0)
 . I (+$G(^MAGD(2006.575,IEN,"FIXD"))'=1)!(MACHID'=$P($G(^MAGD(2006.575,IEN,1)),U,4)) Q  ; Loop through all DICOM failed images
"RTN","MAGVRS51",73,0)
 . D REFRESH(.OUT,IEN,.J)
"RTN","MAGVRS51",74,0)
 . D REFRESHF(.OUT,IEN,.J)
"RTN","MAGVRS51",75,0)
 . S RIEN=""
"RTN","MAGVRS51",76,0)
 . I $D(^MAGD(2006.575,IEN,"RLATE")) D  ; RLATE - Related images loop
"RTN","MAGVRS51",77,0)
 . . F  S RIEN=$O(^MAGD(2006.575,IEN,"RLATE","B",RIEN)) Q:RIEN=""  D
"RTN","MAGVRS51",78,0)
 . . . D REFRESH(.OUT,RIEN,.J)
"RTN","MAGVRS51",79,0)
 . . . D REFRESHF(.OUT,IEN,.J)
"RTN","MAGVRS51",80,0)
 . . . Q
"RTN","MAGVRS51",81,0)
 . . Q
"RTN","MAGVRS51",82,0)
 . ; Look up patient DFN and retrieve DOB, Sex, ICN.
"RTN","MAGVRS51",83,0)
 . S SERVTYPE=$$GET1^DIQ(2006.575,IEN,"SERVICE TYPE","E"),CASENUMB=$$GET1^DIQ(2006.575,IEN,"CASE NUMB","E"),NEWCASE=$$GET1^DIQ(2006.575,IEN,"NEWCASE NO","E")
"RTN","MAGVRS51",84,0)
 . I NEWCASE'="" S CASENUMB=NEWCASE
"RTN","MAGVRS51",85,0)
 . I (SERVTYPE="")!(CASENUMB="") Q
"RTN","MAGVRS51",86,0)
 . S PATLOOK=$$LOOKUP^MAGVORDR(CASENUMB,SERVTYPE)
"RTN","MAGVRS51",87,0)
 . I +PATLOOK=-1 Q
"RTN","MAGVRS51",88,0)
 . S DFN=$P(PATLOOK,"~",2)
"RTN","MAGVRS51",89,0)
 . D DEM^VADPT ; Supported IA (#10061)
"RTN","MAGVRS51",90,0)
 . S OUT(J)="DFN"_OSEP_DFN_SSEP,J=J+1
"RTN","MAGVRS51",91,0)
 . S DOB=+$$FM2IDF^MAGVAF01(+($G(VADM(3))))
"RTN","MAGVRS51",92,0)
 . S SEX=$E($G(VADM(5)))
"RTN","MAGVRS51",93,0)
 . S ICN=$S($T(GETICN^MPIF001)'="":$$GETICN^MPIF001(DFN),1:"-1^NO MPI") ; Supported IA (#2701)
"RTN","MAGVRS51",94,0)
 . S OUT(J)="DATE OF BIRTH"_OSEP_DOB_SSEP,J=J+1
"RTN","MAGVRS51",95,0)
 . S OUT(J)="SEX"_OSEP_SEX_SSEP,J=J+1
"RTN","MAGVRS51",96,0)
 . S OUT(J)="INTEGRATION CONTROL NUMBER"_OSEP_ICN_SSEP,J=J+1
"RTN","MAGVRS51",97,0)
 . Q
"RTN","MAGVRS51",98,0)
 Q
"RTN","MAGVRS51",99,0)
DCRCTCNT(OUT,MACHID,SERVTYPE) ; Get count of entries with provided machine id and service type from file 2006.575 
"RTN","MAGVRS51",100,0)
 N IEN,J,ISEP,SSEP
"RTN","MAGVRS51",101,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP,J=0,IEN=0
"RTN","MAGVRS51",102,0)
 I MACHID="" S OUT="-1"_SSEP_"No machine ID provided" Q
"RTN","MAGVRS51",103,0)
 I SERVTYPE="" S OUT="-1"_SSEP_"No service type provided" Q
"RTN","MAGVRS51",104,0)
 F  S IEN=$O(^MAGD(2006.575,IEN)) Q:+IEN=0  D
"RTN","MAGVRS51",105,0)
 . I (MACHID=$P($G(^MAGD(2006.575,IEN,1)),U,4))&(SERVTYPE=$$GET1^DIQ(2006.575,IEN,"SERVICE TYPE","E")) S J=J+1  ; Loop through all unfixed images
"RTN","MAGVRS51",106,0)
 S OUT="0"_SSEP_SSEP_J
"RTN","MAGVRS51",107,0)
 Q
"RTN","MAGVRS51",108,0)
DCRCTDEL(OUT,FILEPATH) ;  DICOM Correct delete entry
"RTN","MAGVRS51",109,0)
 N IEN,LOCATION,OSEP
"RTN","MAGVRS51",110,0)
 S OSEP=$$OUTSEP,ISEP=$$INPUTSEP,SSEP=$$STATSEP
"RTN","MAGVRS51",111,0)
 I $G(FILEPATH)="" S OUT="-1"_SSEP_"No Filepath provided" Q
"RTN","MAGVRS51",112,0)
 S IEN=$O(^MAGD(2006.575,"B",FILEPATH,""))
"RTN","MAGVRS51",113,0)
 I IEN="" Q
"RTN","MAGVRS51",114,0)
 S FDA(2006.575,IEN_",",.01)="@"
"RTN","MAGVRS51",115,0)
 D UPDATE^DIE("","FDA",IEN,"ERR")
"RTN","MAGVRS51",116,0)
 I $D(ERR("DIERR")) S OUT="-2"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS51",117,0)
 I $G(OUT)="" S OUT="0"_SSEP_SSEP
"RTN","MAGVRS51",118,0)
 Q 
"RTN","MAGVRS51",119,0)
REFRESH(OUT,IEN,OUTI) ; Retrieve specified file data attributes
"RTN","MAGVRS51",120,0)
 N FIELD,MULTOUT,FDA,ERR,OSEP,ISEP,SSEP,MULTIPLE,DATETIME,UIEN,UFILE,FORMAT,FILE
"RTN","MAGVRS51",121,0)
 N MULTOUT,FDA,VALUE
"RTN","MAGVRS51",122,0)
 S OSEP=$$OUTSEP,SSEP=$$STATSEP,FILE=2006.575,FIELD=""
"RTN","MAGVRS51",123,0)
 F FIELD="FILEPATH","GATEWAY LOCATION","IMAGE UID","STUDY UID","SERVICE TYPE" D
"RTN","MAGVRS51",124,0)
 . I FIELD["IEN" S FORMAT="I" ; If the field is an IEN pointer return the internal format rather than the UID string
"RTN","MAGVRS51",125,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN,FIELD,"E")
"RTN","MAGVRS51",126,0)
 . S OUT(OUTI)=FIELD_OSEP_VALUE_SSEP
"RTN","MAGVRS51",127,0)
 . S OUTI=OUTI+1
"RTN","MAGVRS51",128,0)
 . Q
"RTN","MAGVRS51",129,0)
 Q
"RTN","MAGVRS51",130,0)
REFRESHF(OUT,IEN,OUTI) ; Retrieve specified file data attributes - Fixed Information
"RTN","MAGVRS51",131,0)
 N FIELD,MULTOUT,FDA,ERR,OSEP,ISEP,SSEP,MULTIPLE,DATETIME,UIEN,UFILE,FORMAT,FILE
"RTN","MAGVRS51",132,0)
 N MULTOUT,FDA,VALUE
"RTN","MAGVRS51",133,0)
 S OUT(OUTI)=""
"RTN","MAGVRS51",134,0)
 S OSEP=$$OUTSEP,SSEP=$$STATSEP,FILE=2006.575,FIELD=""
"RTN","MAGVRS51",135,0)
 F FIELD="INSTRUMENT NAME","MACHINE ID","NEWNME","NEWSSN","NEWCASE NO","NEW PROC IEN","NEW PROCEDURE" D
"RTN","MAGVRS51",136,0)
 . I FIELD["IEN" S FORMAT="I" ; If the field is an IEN pointer return the internal format rather than the UID string
"RTN","MAGVRS51",137,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN,FIELD,"E")
"RTN","MAGVRS51",138,0)
 . S OUT(OUTI)=FIELD_OSEP_VALUE_SSEP
"RTN","MAGVRS51",139,0)
 . S OUTI=OUTI+1
"RTN","MAGVRS51",140,0)
 . Q
"RTN","MAGVRS51",141,0)
 Q
"RTN","MAGVRS51",142,0)
REFRESHP(OUT,DFN,OUTI) ; Retrieve specified file data attributes - Patient Information
"RTN","MAGVRS51",143,0)
 N FIELD,MULTOUT,FDA,ERR,OSEP,ISEP,SSEP,MULTIPLE,DATETIME,UIEN,UFILE,FORMAT,FILE
"RTN","MAGVRS51",144,0)
 N MULTOUT,FDA,VALUE
"RTN","MAGVRS51",145,0)
 S OSEP=$$OUTSEP,SSEP=$$STATSEP,FILE=2,FIELD=""
"RTN","MAGVRS51",146,0)
 F FIELD="DATE OF BIRTH","SEX","INTEGRATION CONTROL NUMBER" D
"RTN","MAGVRS51",147,0)
 . I FIELD["IEN" S FORMAT="I" ; If the field is an IEN pointer return the internal format rather than the UID string
"RTN","MAGVRS51",148,0)
 . S VALUE=$$GET1^DIQ(FILE,IEN,FIELD,"E")
"RTN","MAGVRS51",149,0)
 . S OUT(OUTI)=FIELD_OSEP_VALUE_SSEP
"RTN","MAGVRS51",150,0)
 . S OUTI=OUTI+1
"RTN","MAGVRS51",151,0)
 . Q
"RTN","MAGVRS51",152,0)
 Q
"RTN","MAGVRS51",153,0)
MULTIPLE(FILE,FIELD) ; Process multiple DB entries
"RTN","MAGVRS51",154,0)
 N MULTIPLE,FNUM
"RTN","MAGVRS51",155,0)
 S FNUM=$$FLDNUM^DILFD(FILE,FIELD)
"RTN","MAGVRS51",156,0)
 Q:FNUM="" 0
"RTN","MAGVRS51",157,0)
 S MULTIPLE=$$GET1^DID(FILE,FNUM,,"MULTIPLE-VALUED")
"RTN","MAGVRS51",158,0)
 Q MULTIPLE
"RTN","MAGVRS51",159,0)
INTRFACE ; Entry for AE INSTANCE and SECURITY MATRIX interface
"RTN","MAGVRS51",160,0)
 N Y
"RTN","MAGVRS51",161,0)
 S Y=""
"RTN","MAGVRS51",162,0)
 W !,"DICOM AE SECURITY MATRIX APPLICATION EDIT"
"RTN","MAGVRS51",163,0)
 F  Q:$G(Y)=-1  D AEINTR2(.Y)
"RTN","MAGVRS51",164,0)
 Q
"RTN","MAGVRS51",165,0)
AEINTR2(Y) ;  Edit/Add AE Instance
"RTN","MAGVRS51",166,0)
 ; Select AE Instance
"RTN","MAGVRS51",167,0)
 N NEW,I,D,IEN,DLAYGO,DIE,D0,DA,DIC,DIR,IENS,S,X,DO
"RTN","MAGVRS51",168,0)
 S DLAYGO=2006.9192
"RTN","MAGVRS51",169,0)
 S DIC="^MAGV(2006.9192,"
"RTN","MAGVRS51",170,0)
 S DIC(0)="QEALN"
"RTN","MAGVRS51",171,0)
 S DIC("W")="D OUTLINE^MAGVRS51(Y)"  ; write a line in the lookup
"RTN","MAGVRS51",172,0)
 D ^DIC
"RTN","MAGVRS51",173,0)
 I Y=-1 Q
"RTN","MAGVRS51",174,0)
 S IEN=$P(Y,U,1) S NEW=$P(Y,U,3)
"RTN","MAGVRS51",175,0)
 I NEW=1 D AEINTR3(IEN,NEW)
"RTN","MAGVRS51",176,0)
 ; If entry was deleted quit
"RTN","MAGVRS51",177,0)
 I NEW'=1 D
"RTN","MAGVRS51",178,0)
 . S DIC="^MAGV(2006.9192,"
"RTN","MAGVRS51",179,0)
 . S DA=IEN
"RTN","MAGVRS51",180,0)
 . D EN^DIQ
"RTN","MAGVRS51",181,0)
 . K DIC,IENS,S,X
"RTN","MAGVRS51",182,0)
 . D AEINTR3(IEN,NEW)
"RTN","MAGVRS51",183,0)
 . Q
"RTN","MAGVRS51",184,0)
 ; Quit if entry was just deleted by user
"RTN","MAGVRS51",185,0)
 I '$D(^MAGV(2006.9192,IEN)) K DA Q
"RTN","MAGVRS51",186,0)
 S DIE=2006.9192
"RTN","MAGVRS51",187,0)
 K DIC
"RTN","MAGVRS51",188,0)
 S DA=IEN
"RTN","MAGVRS51",189,0)
 S DIC="^MAGV(2006.9192,",DIC(0)="QEAL"
"RTN","MAGVRS51",190,0)
 I NEW=1 S DR="12" D ^DIE
"RTN","MAGVRS51",191,0)
 I NEW'=1 D
"RTN","MAGVRS51",192,0)
 . ;List Services and Roles
"RTN","MAGVRS51",193,0)
 . D AEINTR6(IEN,.I)
"RTN","MAGVRS51",194,0)
 . S DIR(0)="Y",DIR("B")="NO",DIR("A")="Add/Modify/Delete Services and Roles for this entry"
"RTN","MAGVRS51",195,0)
 . D ^DIR K DIR
"RTN","MAGVRS51",196,0)
 . W !
"RTN","MAGVRS51",197,0)
 . I Y=1 S DR="12" D ^DIE
"RTN","MAGVRS51",198,0)
 K DA
"RTN","MAGVRS51",199,0)
 Q
"RTN","MAGVRS51",200,0)
AEINTR3(IEN,NEW) ; DICOM AE SECURITY MATRIX User Interface - Allows user to add and edit AE entries
"RTN","MAGVRS51",201,0)
 N DIE,DR,DA,FDA,ERR,DIC,FLAGNAME,FLAGVALU,DIR,DLAYGO,D0,SMIEN
"RTN","MAGVRS51",202,0)
 S DIE=2006.9192
"RTN","MAGVRS51",203,0)
 I Y=-1 Q
"RTN","MAGVRS51",204,0)
 I NEW'=1 S DR=".01;1;1.1;1.3;1.4;2;3;4;6;7;8;9;10;11"
"RTN","MAGVRS51",205,0)
 I NEW=1 S DR="1//VISTA_STORAGE;1.3//NO;1.4//V;3;4"
"RTN","MAGVRS51",206,0)
 S DA=IEN
"RTN","MAGVRS51",207,0)
 D ^DIE
"RTN","MAGVRS51",208,0)
 K DIC,IENS,S,X
"RTN","MAGVRS51",209,0)
 ; Quit if entry was just deleted by user
"RTN","MAGVRS51",210,0)
 I '$D(DA) Q
"RTN","MAGVRS51",211,0)
 I NEW=1 D
"RTN","MAGVRS51",212,0)
 . S FDA(2006.9192,DA_",",6)=1
"RTN","MAGVRS51",213,0)
 . S FDA(2006.9192,DA_",",7)=1
"RTN","MAGVRS51",214,0)
 . S FDA(2006.9192,DA_",",8)=1
"RTN","MAGVRS51",215,0)
 . S FDA(2006.9192,DA_",",9)=1
"RTN","MAGVRS51",216,0)
 . S FDA(2006.9192,DA_",",10)=1
"RTN","MAGVRS51",217,0)
 . S FDA(2006.9192,DA_",",11)="RAD"
"RTN","MAGVRS51",218,0)
 . D FILE^DIE("","FDA","SMIEN")
"RTN","MAGVRS51",219,0)
 . Q
"RTN","MAGVRS51",220,0)
 ; Display default flags and default flag values for C-STORE entries
"RTN","MAGVRS51",221,0)
 I NEW=1 D
"RTN","MAGVRS51",222,0)
 . W !!,"Flag Names",?20,"Flag Values",!
"RTN","MAGVRS51",223,0)
 . W "-------------------------------",!
"RTN","MAGVRS51",224,0)
 . F J=6:1:11 D
"RTN","MAGVRS51",225,0)
 . . S FLAGNAME=$$GET1^DID(2006.9192,J,"","LABEL")
"RTN","MAGVRS51",226,0)
 . . S FLAGVALU=$$GET1^DIQ(2006.9192,DA_",",J)
"RTN","MAGVRS51",227,0)
 . . W FLAGNAME,?20,FLAGVALU,!
"RTN","MAGVRS51",228,0)
 . . Q
"RTN","MAGVRS51",229,0)
 . ;Ask the user if they accept the field defaults for the flags names and flag values
"RTN","MAGVRS51",230,0)
 . S DIR(0)="Y",DIR("B")="YES",DIR("A")="Accept these defaults"
"RTN","MAGVRS51",231,0)
 . D ^DIR K DIR
"RTN","MAGVRS51",232,0)
 . I Y'=1 S DR="6;7;8;9;10;11" D ^DIE K DIC,IENS,S,X
"RTN","MAGVRS51",233,0)
 K DA
"RTN","MAGVRS51",234,0)
 Q
"RTN","MAGVRS51",235,0)
AEINTR6(SMIEN,I) ; Display DICOM AE SECURITY MATRIX entries for a given AE Instance
"RTN","MAGVRS51",236,0)
 N DSRIEN,DSERVICE,DROLE,I
"RTN","MAGVRS51",237,0)
 S I=0,DSRIEN=0
"RTN","MAGVRS51",238,0)
 W !!
"RTN","MAGVRS51",239,0)
 F  S DSRIEN=$O(^MAGV(2006.9192,SMIEN,3,DSRIEN)) Q:(DSRIEN="")!(+DSRIEN=0)  D
"RTN","MAGVRS51",240,0)
 . S I=I+1
"RTN","MAGVRS51",241,0)
 . S IENS=DSRIEN_","_SMIEN_","
"RTN","MAGVRS51",242,0)
 . S DSERVICE=$$GET1^DIQ(2006.919212,IENS,.01)
"RTN","MAGVRS51",243,0)
 . S DROLE=$$GET1^DIQ(2006.919212,IENS,1)
"RTN","MAGVRS51",244,0)
 . W $P(I,U,1)_") "_DSERVICE_" "_DROLE,!
"RTN","MAGVRS51",245,0)
 . Q
"RTN","MAGVRS51",246,0)
 I I=0 W "No DICOM AE SECURITY MATRIX entries for this AE INSTANCE",!
"RTN","MAGVRS51",247,0)
 Q
"RTN","MAGVRS51",248,0)
 ;
"RTN","MAGVRS51",249,0)
OUTLINE(Y)  ; Form the output line in the DICOM AE SECURITY MATRIX Lookup
"RTN","MAGVRS51",250,0)
 N OUT,I,SUBFILE
"RTN","MAGVRS51",251,0)
 I '$D(Y) Q
"RTN","MAGVRS51",252,0)
 D GETS^DIQ(2006.9192,Y_",","12*","","OUT")
"RTN","MAGVRS51",253,0)
 ; Output the data
"RTN","MAGVRS51",254,0)
 S I=""  ; IENs
"RTN","MAGVRS51",255,0)
 S SUBFILE="2006.919212"
"RTN","MAGVRS51",256,0)
 F  S I=$O(OUT(SUBFILE,I)) Q:I=""  D
"RTN","MAGVRS51",257,0)
 . W !,?18,$G(OUT(SUBFILE,I,.01)),?28,$G(OUT(SUBFILE,I,1))
"RTN","MAGVRS51",258,0)
 . Q
"RTN","MAGVRS51",259,0)
 Q
"RTN","MAGVRS52")
0^106^B24276946
"RTN","MAGVRS52",1,0)
MAGVRS52 ;WOIFO/EdM/DAC/NST - Imaging RPCs for Query/Retrieve ; 11 Mar 2013  3:05 PM
"RTN","MAGVRS52",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS52",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS52",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS52",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS52",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS52",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS52",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS52",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS52",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS52",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS52",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS52",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS52",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS52",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS52",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS52",17,0)
 ;;
"RTN","MAGVRS52",18,0)
 Q
"RTN","MAGVRS52",19,0)
 ;
"RTN","MAGVRS52",20,0)
OUTSEP() ; Separator for output data ie. NAME`DOB
"RTN","MAGVRS52",21,0)
 Q "`"
"RTN","MAGVRS52",22,0)
MULTISEP() ; Name value separator for multiple values ie. REJECT=1|WARNING=1 
"RTN","MAGVRS52",23,0)
 Q "|"
"RTN","MAGVRS52",24,0)
SRSEP() ; Service and Role Separator ie. C-Store^SCU^C-Move^SCP
"RTN","MAGVRS52",25,0)
 Q "^"
"RTN","MAGVRS52",26,0)
 ;
"RTN","MAGVRS52",27,0)
AETITLE(OUT,RTITLE,LOCATION) ; MAG DICOM CHECK AE TITLE RPC
"RTN","MAGVRS52",28,0)
 ; Returns AE Title and Security Matrix information for a given AE Title and Location
"RTN","MAGVRS52",29,0)
 N AEIEN,AEINST,MATCH,MSEP,I,LOCIEN,OSEP,STATION,SERVTYPE
"RTN","MAGVRS52",30,0)
 I $G(RTITLE)="" S OUT(1)="-1,No AE Title specified" Q
"RTN","MAGVRS52",31,0)
 I $G(LOCATION)="" S OUT(1)="-3,No Location specified" Q
"RTN","MAGVRS52",32,0)
 S AEIEN=0,MATCH=0,I=1,OSEP="`",MSEP="|",SERVTYPE="^"
"RTN","MAGVRS52",33,0)
 ; Loop through all entries - match on AE Instance name and Location 
"RTN","MAGVRS52",34,0)
 F  S AEIEN=$O(^MAGV(2006.9192,AEIEN)) Q:(AEIEN="")!(+AEIEN=0)  D
"RTN","MAGVRS52",35,0)
 . S AEINST=$G(^MAGV(2006.9192,AEIEN,0))
"RTN","MAGVRS52",36,0)
 . S LOCIEN=$P(AEINST,U,3)
"RTN","MAGVRS52",37,0)
 . Q:LOCIEN=""
"RTN","MAGVRS52",38,0)
 . ; Perform case-insensitive DICOM AE Title check
"RTN","MAGVRS52",39,0)
 . S AEINST=$$UP^XLFSTR(AEINST) ; IA #10104
"RTN","MAGVRS52",40,0)
 . S RTITLE=$$UP^XLFSTR(RTITLE) ; IA #10104
"RTN","MAGVRS52",41,0)
 . I $P(AEINST,U,6)=RTITLE D
"RTN","MAGVRS52",42,0)
 . . ; If 1st match write all AE Instance info and Service Role
"RTN","MAGVRS52",43,0)
 . . I MATCH=0 D AEINST(.OUT,AEIEN,AEINST,LOCATION) S OUT(1)=OUT(1)_"SERVICE MESSAGE="
"RTN","MAGVRS52",44,0)
 . . S I=I+1
"RTN","MAGVRS52",45,0)
 . . S MATCH=MATCH+1
"RTN","MAGVRS52",46,0)
 . . ; Add Services and Roles to output
"RTN","MAGVRS52",47,0)
 . . D AESECMX(.OUT,AEIEN)
"RTN","MAGVRS52",48,0)
 . Q
"RTN","MAGVRS52",49,0)
 I MATCH=0 S OUT(1)="-2,No entry for AE Title """_RTITLE_""" at location """_LOCATION_"""."
"RTN","MAGVRS52",50,0)
 Q
"RTN","MAGVRS52",51,0)
AEINST(OUT,AEIEN,AEINST,LOCATION) ; Retrieve AE Instance information
"RTN","MAGVRS52",52,0)
 N AENAME,AETITLE,FLAGDATA,IP,LABEL,PORT,OSEP,MSEP,MULTOUT,SUBIEN,SUBFILE,FIELD,FLAG,FORCER,ORIGIX,VALUE
"RTN","MAGVRS52",53,0)
 I $G(AEIEN)="" S OUT(1)="-4,DICOM AE Security Matrix IEN not defined" Q
"RTN","MAGVRS52",54,0)
 I $G(AEINST)="" S OUT(1)="-5,AE Instance data not defined" Q
"RTN","MAGVRS52",55,0)
 I $G(LOCATION)="" S OUT(1)="-6,LOCATION not defined" Q
"RTN","MAGVRS52",56,0)
 I $G(^MAGV(2006.9192,AEIEN,0))="" S OUT(1)="-7,DICOM AE Security Matrix entry not found" Q
"RTN","MAGVRS52",57,0)
 S OSEP=$$OUTSEP,MSEP=$$MULTISEP
"RTN","MAGVRS52",58,0)
 S AENAME=$P(AEINST,U,1)
"RTN","MAGVRS52",59,0)
 S AETITLE=$P(AEINST,U,2)
"RTN","MAGVRS52",60,0)
 S RTITLE=$P(AEINST,U,6)
"RTN","MAGVRS52",61,0)
 S IP=$P(AEINST,U,4)
"RTN","MAGVRS52",62,0)
 S PORT=$P(AEINST,U,5)
"RTN","MAGVRS52",63,0)
 S FORCER=$P(AEINST,U,8)
"RTN","MAGVRS52",64,0)
 S ORIGIX=$P(AEINST,U,9)
"RTN","MAGVRS52",65,0)
 S OUT(1)="0,"_AENAME_OSEP_RTITLE_OSEP_AETITLE_OSEP_LOCATION_OSEP_IP_OSEP_PORT_OSEP_FORCER_OSEP_ORIGIX_OSEP
"RTN","MAGVRS52",66,0)
 S FLAGDATA=$G(^MAGV(2006.9192,AEIEN,2))
"RTN","MAGVRS52",67,0)
 S FLAG=""
"RTN","MAGVRS52",68,0)
 F FIELD=6:1:11 D
"RTN","MAGVRS52",69,0)
 . S LABEL=$$GET1^DID(2006.9192,FIELD,,"LABEL")
"RTN","MAGVRS52",70,0)
 . S VALUE=$$GET1^DIQ(2006.9192,AEIEN,FIELD,"I")
"RTN","MAGVRS52",71,0)
 . I VALUE'="",FLAG'="" S FLAG=FLAG_MSEP
"RTN","MAGVRS52",72,0)
 . I VALUE'="" S FLAG=FLAG_LABEL_"="_VALUE
"RTN","MAGVRS52",73,0)
 . Q
"RTN","MAGVRS52",74,0)
 I FLAG'="" S OUT(1)=OUT(1)_FLAG
"RTN","MAGVRS52",75,0)
 S OUT(1)=OUT(1)_OSEP
"RTN","MAGVRS52",76,0)
 Q
"RTN","MAGVRS52",77,0)
AESECMX(OUT,AEIEN) ; Retrieve Security Matrix information  
"RTN","MAGVRS52",78,0)
 N SERVICE,ROLE,SRSEP,SRIEN,SRDATA,IENS
"RTN","MAGVRS52",79,0)
 S SRSEP=$$SRSEP
"RTN","MAGVRS52",80,0)
 I $G(AEIEN)="" S OUT(1)="-4,DICOM AE Security Matrix IEN not defined" Q
"RTN","MAGVRS52",81,0)
 I $G(^MAGV(2006.9192,AEIEN,0))="" S OUT(1)="-7,DICOM AE Security Matrix entry not found" Q
"RTN","MAGVRS52",82,0)
 S SRIEN=0
"RTN","MAGVRS52",83,0)
 F  S SRIEN=$O(^MAGV(2006.9192,AEIEN,3,SRIEN)) Q:(SRIEN="")!(+SRIEN=0)  D 
"RTN","MAGVRS52",84,0)
 . S IENS=SRIEN_","_AEIEN_","
"RTN","MAGVRS52",85,0)
 . S SERVICE=$$GET1^DIQ(2006.919212,IENS,.01)
"RTN","MAGVRS52",86,0)
 . S ROLE=$$GET1^DIQ(2006.919212,IENS,1)
"RTN","MAGVRS52",87,0)
 . S SRDATA=$G(SRDATA)_SERVICE_SRSEP_ROLE_SRSEP
"RTN","MAGVRS52",88,0)
 . Q
"RTN","MAGVRS52",89,0)
 S OUT(1)=OUT(1)_$G(SRDATA)
"RTN","MAGVRS52",90,0)
 Q
"RTN","MAGVRS52",91,0)
VATITLE(OUT,SERVICE,ROLE,LOCATION) ; RPC = MAG DICOM VISTA AE TITLE
"RTN","MAGVRS52",92,0)
 ; The RPC will return the first AE Title with matching provided service, role, and location fields 
"RTN","MAGVRS52",93,0)
 N DROLE,DSERVICE,IEN,DSRIEN,DSR,AEDATA,OSEP
"RTN","MAGVRS52",94,0)
 S OSEP=$$OUTSEP,IEN=0,OUT=""
"RTN","MAGVRS52",95,0)
 I $G(LOCATION)="" S OUT="-2"_OSEP_"No LOCATION provided." Q
"RTN","MAGVRS52",96,0)
 I $G(SERVICE)="" S OUT="-2"_OSEP_"No SERVICE provided." Q
"RTN","MAGVRS52",97,0)
 I $G(ROLE)="" S OUT="-2"_OSEP_"No ROLE provided." Q
"RTN","MAGVRS52",98,0)
 F  S IEN=$O(^MAGV(2006.9192,IEN)) Q:(+IEN=0)!(IEN="")!(OUT'="")  D
"RTN","MAGVRS52",99,0)
 . S AEDATA=$G(^MAGV(2006.9192,IEN,0))
"RTN","MAGVRS52",100,0)
 . I LOCATION'=$P(AEDATA,U,3) Q
"RTN","MAGVRS52",101,0)
 . S DSRIEN=0
"RTN","MAGVRS52",102,0)
 . F  S DSRIEN=$O(^MAGV(2006.9192,IEN,3,DSRIEN)) Q:(+DSRIEN=0)!(DSRIEN="")!(OUT'="")  D
"RTN","MAGVRS52",103,0)
 . . S IENS=DSRIEN_","_IEN_","
"RTN","MAGVRS52",104,0)
 . . S DSERVICE=$$GET1^DIQ(2006.919212,IENS,.01)
"RTN","MAGVRS52",105,0)
 . . S DROLE=$$GET1^DIQ(2006.919212,IENS,1)
"RTN","MAGVRS52",106,0)
 . . I (SERVICE=DSERVICE)&(ROLE=DROLE) S OUT=0_OSEP_$P(AEDATA,U,6)
"RTN","MAGVRS52",107,0)
 . . Q
"RTN","MAGVRS52",108,0)
 . Q
"RTN","MAGVRS52",109,0)
 S:OUT="" OUT="-1"_OSEP_"No title for """_SERVICE_""", """_ROLE_""" at location """_LOCATION_"""."
"RTN","MAGVRS52",110,0)
 Q
"RTN","MAGVRS52",111,0)
 ;
"RTN","MAGVRS61")
0^107^B94036467
"RTN","MAGVRS61",1,0)
MAGVRS61 ;WOIFO/DAC - RPC calls for DICOM file processing ; 15 Sep 2011 11:20 AM
"RTN","MAGVRS61",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS61",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS61",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS61",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS61",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS61",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS61",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS61",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS61",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS61",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS61",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS61",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS61",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS61",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS61",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS61",17,0)
 ;;
"RTN","MAGVRS61",18,0)
 Q
"RTN","MAGVRS61",19,0)
DUPUID(OUT,ACCESSION,DFN,TYPE,UID,STUDUID,SERUID) ; Check for duplicate UIDs in the new structure
"RTN","MAGVRS61",20,0)
 ; OUT - Duplicate message output
"RTN","MAGVRS61",21,0)
 ; ACCESSION - Accession #  ; DFN - Patient DFN
"RTN","MAGVRS61",22,0)
 ; TYPE - Type of UID check - "STUDY", "SERIES", or "SOP"
"RTN","MAGVRS61",23,0)
 ; UID - Unique Identifier
"RTN","MAGVRS61",24,0)
 ; if accession number does not match then it's a duplicate UID
"RTN","MAGVRS61",25,0)
 ; OUT:
"RTN","MAGVRS61",26,0)
 ;
"RTN","MAGVRS61",27,0)
 ; -1 - Exception with error message
"RTN","MAGVRS61",28,0)
 ; 
"RTN","MAGVRS61",29,0)
 ; 0 - Not a duplicate UID - Non duplicates are either have no entries in the 2005.6x files
"RTN","MAGVRS61",30,0)
 ;                           or they match on UID, DFN, Accession, and parent UIDs
"RTN","MAGVRS61",31,0)
 ; 1 - Duplicate UID       - Duplicates have an entry in a 2005.6x file, but does not match
"RTN","MAGVRS61",32,0)
 ;                           on UID, DFN, Accession, and/or parent UID
"RTN","MAGVRS61",33,0)
 ; 2 - Record exist        - A record exists with a matching DFN, Accession, Study UID, Series UID,
"RTN","MAGVRS61",34,0)
 ;                           and SOP UID already
"RTN","MAGVRS61",35,0)
 N SOPOUT,SOPLINK
"RTN","MAGVRS61",36,0)
 I TYPE'="STUDY",TYPE'="SERIES",TYPE'="SOP" S OUT="-1~TYPE is not Study, Series, or SOP" Q
"RTN","MAGVRS61",37,0)
 S OUT=0
"RTN","MAGVRS61",38,0)
 ; If the UID and the accession are already being used and the UID is not linked to the
"RTN","MAGVRS61",39,0)
 ; procedure REF with the same accession then the UID is a duplicate
"RTN","MAGVRS61",40,0)
 I TYPE="STUDY",$D(^MAGV(2005.62,"B",UID)) D
"RTN","MAGVRS61",41,0)
 . I $$LINKED(ACCESSION,DFN,UID,"STUDY") Q
"RTN","MAGVRS61",42,0)
 . S OUT=1
"RTN","MAGVRS61",43,0)
 . Q
"RTN","MAGVRS61",44,0)
 I TYPE="SERIES",$D(^MAGV(2005.63,"B",UID)) D
"RTN","MAGVRS61",45,0)
 . I $$LINKED(ACCESSION,DFN,UID,"SERIES",STUDUID) Q
"RTN","MAGVRS61",46,0)
 . S OUT=1
"RTN","MAGVRS61",47,0)
 . Q
"RTN","MAGVRS61",48,0)
 I TYPE="SOP",$D(^MAGV(2005.64,"B",UID)) D
"RTN","MAGVRS61",49,0)
 . S SOPLINK=$$LINKED(ACCESSION,DFN,UID,"SOP",STUDUID,SERUID)
"RTN","MAGVRS61",50,0)
 . I SOPLINK=2 S OUT=0 Q
"RTN","MAGVRS61",51,0)
 . I SOPLINK="NOT AOF" S OUT=0 Q
"RTN","MAGVRS61",52,0)
 . I SOPLINK=1 S OUT=2 Q
"RTN","MAGVRS61",53,0)
 . S OUT=1
"RTN","MAGVRS61",54,0)
 . Q
"RTN","MAGVRS61",55,0)
 Q OUT
"RTN","MAGVRS61",56,0)
DUPSTUD(DFN,ACCESSION,UID)  ; Check for duplicate Study UID
"RTN","MAGVRS61",57,0)
 S TYPE="STUDY"
"RTN","MAGVRS61",58,0)
 I $G(ACCESSION)="" Q "-1~No accession number provided"
"RTN","MAGVRS61",59,0)
 I $G(DFN)="" Q "-1~No patient DFN provided"
"RTN","MAGVRS61",60,0)
 D DUPUID(.OUT,ACCESSION,DFN,TYPE,UID)
"RTN","MAGVRS61",61,0)
 Q OUT
"RTN","MAGVRS61",62,0)
DUPSER(DFN,ACCESSION,STUDUID,UID)  ; Check for duplicate Series UID
"RTN","MAGVRS61",63,0)
 S TYPE="SERIES"
"RTN","MAGVRS61",64,0)
 I $G(ACCESSION)="" Q "-1~No accession number provided"
"RTN","MAGVRS61",65,0)
 I $G(DFN)="" Q "-1~No patient DFN provided"
"RTN","MAGVRS61",66,0)
 D DUPUID(.OUT,ACCESSION,DFN,TYPE,UID,STUDUID)
"RTN","MAGVRS61",67,0)
 Q OUT
"RTN","MAGVRS61",68,0)
DUPSOP(DFN,ACCESSION,STUDUID,SERUID,UID)  ; Check for duplicate SOP UID
"RTN","MAGVRS61",69,0)
 S TYPE="SOP"
"RTN","MAGVRS61",70,0)
 I $G(ACCESSION)="" Q "-1~No accession number provided"
"RTN","MAGVRS61",71,0)
 I $G(DFN)="" Q "-1~No patient DFN provided"
"RTN","MAGVRS61",72,0)
 D DUPUID(.OUT,ACCESSION,DFN,TYPE,UID,STUDUID,SERUID)
"RTN","MAGVRS61",73,0)
 Q OUT
"RTN","MAGVRS61",74,0)
LINKED(ACCESSION,DFN,UID,UIDTYPE,STUDUIDA,SERUIDA) ; Check if duplicate UID is linked to the same procedure, patient, and parent Study, Series, SOP IENS
"RTN","MAGVRS61",75,0)
 N LINK,IEN,PROCIEN,STUDYIEN,SERIESIEN,SOPIEN,PROCCASE,PRIEN,PRDFN,STATUS,STUDUIDB,SOPUIDB,PATPROC,SERUIDB,AOF
"RTN","MAGVRS61",76,0)
 S LINK=0
"RTN","MAGVRS61",77,0)
 I UIDTYPE="STUDY" D
"RTN","MAGVRS61",78,0)
 . ; Check if the Study IEN is linked to the procedure IEN with the Accession #
"RTN","MAGVRS61",79,0)
 . S STUDYIEN=""
"RTN","MAGVRS61",80,0)
 . F  S STUDYIEN=$O(^MAGV(2005.62,"B",UID,STUDYIEN)) Q:STUDYIEN=""  D  Q:STATUS="A"
"RTN","MAGVRS61",81,0)
 . . S STATUS=$P($G(^MAGV(2005.62,STUDYIEN,5)),U,2)
"RTN","MAGVRS61",82,0)
 . . Q:STATUS="I"
"RTN","MAGVRS61",83,0)
 . . S PATPROC=$G(^MAGV(2005.62,STUDYIEN,6))
"RTN","MAGVRS61",84,0)
 . . S PROCIEN=$P(PATPROC,U,1)
"RTN","MAGVRS61",85,0)
 . . S PRIEN=$P(PATPROC,U,3)
"RTN","MAGVRS61",86,0)
 . . Q
"RTN","MAGVRS61",87,0)
 . Q
"RTN","MAGVRS61",88,0)
 I UIDTYPE="SERIES" D
"RTN","MAGVRS61",89,0)
 . ; Check if the Series IEN is linked to the procedure IEN with the Accession # 
"RTN","MAGVRS61",90,0)
 . S SERIESIEN=""
"RTN","MAGVRS61",91,0)
 . F  S SERIESIEN=$O(^MAGV(2005.63,"B",UID,SERIESIEN)) Q:SERIESIEN=""  D  Q:STATUS="A"
"RTN","MAGVRS61",92,0)
 . . S STATUS=$G(^MAGV(2005.63,SERIESIEN,9))
"RTN","MAGVRS61",93,0)
 . . Q:STATUS="I"
"RTN","MAGVRS61",94,0)
 . . S STUDYIEN=$P($G(^MAGV(2005.63,SERIESIEN,6)),U,1)
"RTN","MAGVRS61",95,0)
 . . S STUDUIDB=$P($G(^MAGV(2005.62,STUDYIEN,0)),U,1)
"RTN","MAGVRS61",96,0)
 . . S PATPROC=$G(^MAGV(2005.62,STUDYIEN,6))
"RTN","MAGVRS61",97,0)
 . . S PROCIEN=$P(PATPROC,U,1)
"RTN","MAGVRS61",98,0)
 . . S PRIEN=$P(PATPROC,U,3)
"RTN","MAGVRS61",99,0)
 . . Q
"RTN","MAGVRS61",100,0)
 . Q
"RTN","MAGVRS61",101,0)
 I UIDTYPE="SOP" D
"RTN","MAGVRS61",102,0)
 . ; Check if the SOP IEN is linked to the procedure IEN with the Accession #
"RTN","MAGVRS61",103,0)
 . S SOPIEN=""
"RTN","MAGVRS61",104,0)
 . F  S SOPIEN=$O(^MAGV(2005.64,"B",UID,SOPIEN)) Q:SOPIEN=""  D  Q:STATUS="A"
"RTN","MAGVRS61",105,0)
 . . S STATUS=$G(^MAGV(2005.64,SOPIEN,11))
"RTN","MAGVRS61",106,0)
 . . Q:STATUS="I"
"RTN","MAGVRS61",107,0)
 . . S AOF=$P($G(^MAGV(2005.64,SOPIEN,6)),U,2)
"RTN","MAGVRS61",108,0)
 . . S SERIESIEN=$P($G(^MAGV(2005.64,SOPIEN,6)),U,1)
"RTN","MAGVRS61",109,0)
 . . S SERUIDB=$P($G(^MAGV(2005.63,SERIESIEN,0)),U,1)
"RTN","MAGVRS61",110,0)
 . . S STUDYIEN=$P($G(^MAGV(2005.63,SERIESIEN,6)),U,1)
"RTN","MAGVRS61",111,0)
 . . S STUDUIDB=$P($G(^MAGV(2005.62,STUDYIEN,0)),U,1)
"RTN","MAGVRS61",112,0)
 . . S PATPROC=$G(^MAGV(2005.62,STUDYIEN,6))
"RTN","MAGVRS61",113,0)
 . . S PROCIEN=$P(PATPROC,U,1)
"RTN","MAGVRS61",114,0)
 . . S PRIEN=$P(PATPROC,U,3)
"RTN","MAGVRS61",115,0)
 . . Q
"RTN","MAGVRS61",116,0)
 . Q
"RTN","MAGVRS61",117,0)
 I $G(STATUS)="I" Q 2  ; No accessible record found
"RTN","MAGVRS61",118,0)
 I $G(PROCIEN)="" Q LINK  ; Not linked to a procedure ref
"RTN","MAGVRS61",119,0)
 I $G(PRIEN)="" Q LINK  ; Not linked to a procedure ref
"RTN","MAGVRS61",120,0)
 S PROCCASE=$P(^MAGV(2005.61,PROCIEN,0),U,1)
"RTN","MAGVRS61",121,0)
 S PRDFN=$P($G(^MAGV(2005.6,PRIEN,0)),U,1)
"RTN","MAGVRS61",122,0)
 I PRDFN=DFN,ACCESSION=PROCCASE S LINK=1
"RTN","MAGVRS61",123,0)
 I TYPE="SERIES",LINK,STUDUIDA'=STUDUIDB S LINK=0
"RTN","MAGVRS61",124,0)
 I TYPE="SOP",LINK,((STUDUIDA'=STUDUIDB)!(SERUIDA'=SERUIDB)) S LINK=0
"RTN","MAGVRS61",125,0)
 I LINK=1,TYPE="SOP",AOF'=1 S LINK="NOT AOF"
"RTN","MAGVRS61",126,0)
 Q LINK
"RTN","MAGVRS61",127,0)
LOGDUP(ORIGUID,NEWUID,ACCESSION,DFN,TYPE,STUDYUID,SERUID)  ; Log duplicate UIDs
"RTN","MAGVRS61",128,0)
 N FDA,FILE,ONEWUID,SOCTYPE
"RTN","MAGVRS61",129,0)
 S ONEWUID=NEWUID ; Store original generated NEWUID with postfix 
"RTN","MAGVRS61",130,0)
 I TYPE="SERIES",STUDYUID="" S NEWUID="-1~No Study UID provided" Q
"RTN","MAGVRS61",131,0)
 I TYPE="SOP",STUDYUID="" S NEWUID="-1~No Study UID provided" Q
"RTN","MAGVRS61",132,0)
 I TYPE="SOP",SERUID="" S NEWUID="-1~No Series UID provided" Q
"RTN","MAGVRS61",133,0)
 L +^MAGV(2005.66,"C",ONEWUID):1E9 ; Lock generated UID
"RTN","MAGVRS61",134,0)
 I TYPE="STUDY" S SOCTYPE=1
"RTN","MAGVRS61",135,0)
 I TYPE="SERIES" S SOCTYPE=2
"RTN","MAGVRS61",136,0)
 I TYPE="SOP" S SOCTYPE=3
"RTN","MAGVRS61",137,0)
 S FILE=2005.66
"RTN","MAGVRS61",138,0)
 D LOGLOOK(.NEWUID)
"RTN","MAGVRS61",139,0)
 S FDA(FILE,"+1,",.01)=ORIGUID
"RTN","MAGVRS61",140,0)
 S FDA(FILE,"+1,",2)=NEWUID
"RTN","MAGVRS61",141,0)
 S FDA(FILE,"+1,",3)=ACCESSION
"RTN","MAGVRS61",142,0)
 S FDA(FILE,"+1,",4)=DFN
"RTN","MAGVRS61",143,0)
 S FDA(FILE,"+1,",5)=SOCTYPE
"RTN","MAGVRS61",144,0)
 I $G(STUDYUID)'="" S FDA(FILE,"+1,",6)=STUDYUID
"RTN","MAGVRS61",145,0)
 I $G(SERUID)'="" S FDA(FILE,"+1,",7)=SERUID
"RTN","MAGVRS61",146,0)
 D UPDATE^DIE("","FDA")
"RTN","MAGVRS61",147,0)
 L -^MAGV(2005.66,"C",ONEWUID) ; Unlock original generated UID
"RTN","MAGVRS61",148,0)
 I NEWUID'=ONEWUID L -^MAGV(2005.66,"C",NEWUID) ; Unlock new generated UID with postfix
"RTN","MAGVRS61",149,0)
 K FDA
"RTN","MAGVRS61",150,0)
 Q
"RTN","MAGVRS61",151,0)
LOGLOOK(NEWUID) ; Look for UID in duplicate log and generate a new UID if there is a duplicate
"RTN","MAGVRS61",152,0)
 N POSTFIX
"RTN","MAGVRS61",153,0)
 I '$$UIDCHECK(NEWUID) F POSTFIX=1:1 Q:$$UIDCHECK(NEWUID_"."_POSTFIX)
"RTN","MAGVRS61",154,0)
 I $G(POSTFIX)'="" D
"RTN","MAGVRS61",155,0)
 . S NEWUID=NEWUID_"."_POSTFIX
"RTN","MAGVRS61",156,0)
 . L +^MAGV(2005.66,"C",NEWUID):1E9
"RTN","MAGVRS61",157,0)
 . Q
"RTN","MAGVRS61",158,0)
 Q
"RTN","MAGVRS61",159,0)
UIDCHECK(POSTUID) ; Check if newly generated UID exists in UID database indexes
"RTN","MAGVRS61",160,0)
 ; If UID is found return 0, if UID is not found return 1
"RTN","MAGVRS61",161,0)
 N UNIQUE
"RTN","MAGVRS61",162,0)
 S UNIQUE=1
"RTN","MAGVRS61",163,0)
 D  ; Check file indexes for UID 
"RTN","MAGVRS61",164,0)
 . ; Check for duplicate in new UID log
"RTN","MAGVRS61",165,0)
 . I $D(^MAGV(2005.66,"C",POSTUID)) S UNIQUE=0 Q
"RTN","MAGVRS61",166,0)
 . ; Check for duplicate Study and SOP in 2005
"RTN","MAGVRS61",167,0)
 . I $D(^MAG(2005,"P",POSTUID)) S UNIQUE=0 Q
"RTN","MAGVRS61",168,0)
 . ; Check for duplicate Series in 2005
"RTN","MAGVRS61",169,0)
 . I $D(^MAG(2005,"SERIESUID",POSTUID)) S UNIQUE=0 Q
"RTN","MAGVRS61",170,0)
 . ; Check for duplicate Study in 2005.62
"RTN","MAGVRS61",171,0)
 . I $D(^MAGV(2005.62,"B",POSTUID)) S UNIQUE=0 Q
"RTN","MAGVRS61",172,0)
 . ; Check for duplicate Series in 2005.63
"RTN","MAGVRS61",173,0)
 . I $D(^MAGV(2005.63,"B",POSTUID)) S UNIQUE=0 Q
"RTN","MAGVRS61",174,0)
 . ; Check for duplicate SOP in 2005.64
"RTN","MAGVRS61",175,0)
 . I $D(^MAGV(2005.64,"B",POSTUID)) S UNIQUE=0 Q
"RTN","MAGVRS61",176,0)
 . Q
"RTN","MAGVRS61",177,0)
 Q UNIQUE
"RTN","MAGVRS61",178,0)
UIDLOOK(UID,DFN,ACC,TYPE,STUDYUID,SERUID) ; Look to see if Original UID exists and if entry matches DFN and ACC provided. If so, return New UID. Otherwise, 0.
"RTN","MAGVRS61",179,0)
 N OUT,IEN,ENTRY,ENTRY2,STYPE
"RTN","MAGVRS61",180,0)
 S OUT=0
"RTN","MAGVRS61",181,0)
 I (UID="")!($G(DFN)="")!($G(ACC)="")!($G(TYPE)="") Q OUT
"RTN","MAGVRS61",182,0)
 I '$D(^MAGV(2005.66,"B",UID)) Q OUT
"RTN","MAGVRS61",183,0)
 I TYPE="SERIES",$G(STUDYUID)="" Q OUT
"RTN","MAGVRS61",184,0)
 I TYPE="SOP",($G(SERUID)="")!($G(STUDYUID)="") Q OUT
"RTN","MAGVRS61",185,0)
 I TYPE="SERIES" I '$D(^MAGV(2005.66,"D",UID,$G(STUDYUID))) Q OUT
"RTN","MAGVRS61",186,0)
 I TYPE="SOP" I '$D(^MAGV(2005.66,"E",UID,$G(SERUID))) Q OUT
"RTN","MAGVRS61",187,0)
 S IEN=""
"RTN","MAGVRS61",188,0)
 F  S IEN=$O(^MAGV(2005.66,"B",UID,IEN)) Q:(IEN="")!(OUT'=0)  D
"RTN","MAGVRS61",189,0)
 . S ENTRY=$G(^MAGV(2005.66,IEN,0))
"RTN","MAGVRS61",190,0)
 . S ENTRY2=$G(^MAGV(2005.66,IEN,1))
"RTN","MAGVRS61",191,0)
 . S STYPE=$P($$GET1^DIQ(2005.66,IEN,5)," ",1)
"RTN","MAGVRS61",192,0)
 . I DFN=$P(ENTRY,U,4),ACC=$P(ENTRY,U,3),TYPE=STYPE D
"RTN","MAGVRS61",193,0)
 . . I TYPE="STUDY",$G(UID)=$P(ENTRY,U,1) S OUT=$P(ENTRY,U,2) Q
"RTN","MAGVRS61",194,0)
 . . I TYPE="SERIES",$G(STUDYUID)=$P(ENTRY2,U,1),$G(UID)=$P(ENTRY,U,1) S OUT=$P(ENTRY,U,2) Q
"RTN","MAGVRS61",195,0)
 . . I TYPE="SOP",$G(STUDYUID)=$P(ENTRY2,U,1),$G(SERUID)=$P(ENTRY2,U,2),$G(UID)=$P(ENTRY,U,1) S OUT=$P(ENTRY,U,2) Q
"RTN","MAGVRS61",196,0)
 Q OUT
"RTN","MAGVRS61",197,0)
DELLOG(OUT,IEN,FILE) ; Remove inactivated entries from the duplicate log
"RTN","MAGVRS61",198,0)
 N DUPIEN,PIEN,ACC,DFN,SOPUID,SERUID,STUDUID,TYPE,ERR,UID,PATIEN,SSEP,PROCIEN,PATID,DUPDATA1,DUPDATA2
"RTN","MAGVRS61",199,0)
 N DUPACC,DUPPATID,DSERUID,IENS,FDA,DSTDUID,STUDDATA,DELETE
"RTN","MAGVRS61",200,0)
 ;
"RTN","MAGVRS61",201,0)
 S OUT="0"
"RTN","MAGVRS61",202,0)
 S SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS61",203,0)
 I (FILE'=2005.64)&(FILE'=2005.63)&(FILE'=2005.62) S OUT="-1"_SSEP_"Invalid file number" Q
"RTN","MAGVRS61",204,0)
 I IEN="" S OUT="-7"_SSEP_"No IEN provided" Q
"RTN","MAGVRS61",205,0)
 I FILE=2005.64 D 
"RTN","MAGVRS61",206,0)
 . S (SOPUID,UID)=$P($G(^MAGV(2005.64,IEN,0)),U,1)
"RTN","MAGVRS61",207,0)
 . S IEN=$P($G(^MAGV(2005.64,IEN,6)),U,1)
"RTN","MAGVRS61",208,0)
 . Q 
"RTN","MAGVRS61",209,0)
 I IEN="" S OUT="-8"_SSEP_"No Parent Record" Q
"RTN","MAGVRS61",210,0)
 I FILE>=2005.63 D
"RTN","MAGVRS61",211,0)
 . I FILE=2005.64 S SERUID=$P($G(^MAGV(2005.63,IEN,0)),U,2)
"RTN","MAGVRS61",212,0)
 . I FILE=2005.63 S SERUID=$P($G(^MAGV(2005.63,IEN,0)),U,1)
"RTN","MAGVRS61",213,0)
 . I '$D(UID) S UID=SERUID
"RTN","MAGVRS61",214,0)
 . S IEN=$P($G(^MAGV(2005.63,IEN,6)),U,1)
"RTN","MAGVRS61",215,0)
 . Q
"RTN","MAGVRS61",216,0)
 I IEN="" S OUT="-8"_SSEP_"No Parent Record" Q
"RTN","MAGVRS61",217,0)
 I FILE>=2005.62 D
"RTN","MAGVRS61",218,0)
 . I FILE=2005.62 S STUDUID=$P($G(^MAGV(2005.62,IEN,0)),U,1)
"RTN","MAGVRS61",219,0)
 . I FILE'=2005.62 S STUDUID=$P($G(^MAGV(2005.62,IEN,0)),U,2)
"RTN","MAGVRS61",220,0)
 . I '$D(UID) S UID=STUDUID
"RTN","MAGVRS61",221,0)
 . S STUDDATA=$G(^MAGV(2005.62,IEN,6))
"RTN","MAGVRS61",222,0)
 . S PATIEN=$P(STUDDATA,U,3)
"RTN","MAGVRS61",223,0)
 . S PROCIEN=$P(STUDDATA,U,1)
"RTN","MAGVRS61",224,0)
 . I (PROCIEN="")!(PATIEN="") Q
"RTN","MAGVRS61",225,0)
 . S ACC=$P($G(^MAGV(2005.61,PROCIEN,0)),U,1)
"RTN","MAGVRS61",226,0)
 . S PATID=$P($G(^MAGV(2005.6,PATIEN,0)),U,1)
"RTN","MAGVRS61",227,0)
 . Q
"RTN","MAGVRS61",228,0)
 I PATIEN="" S OUT="-9"_SSEP_"No Patient Record" Q
"RTN","MAGVRS61",229,0)
 I PROCIEN="" S OUT="-10"_SSEP_"No Procedure Record" Q
"RTN","MAGVRS61",230,0)
 S DUPIEN=""
"RTN","MAGVRS61",231,0)
 F DUPIEN=$O(^MAGV(2005.66,"C",UID,DUPIEN)) Q:DUPIEN=""  D
"RTN","MAGVRS61",232,0)
 . S DUPDATA1=$G(^MAGV(2005.66,DUPIEN,0))
"RTN","MAGVRS61",233,0)
 . S DUPDATA2=$G(^MAGV(2005.66,DUPIEN,1))
"RTN","MAGVRS61",234,0)
 . S DUPACC=$P(DUPDATA1,U,3),DUPPATID=$P(DUPDATA1,U,4)
"RTN","MAGVRS61",235,0)
 . S DSTDUID=$P(DUPDATA2,U,1),DSERUID=$P(DUPDATA2,U,2)
"RTN","MAGVRS61",236,0)
 . S DELETE=0
"RTN","MAGVRS61",237,0)
 . I FILE=2005.64,ACC=DUPACC,PATID=DUPPATID,((STUDUID=DSTDUID)!('DSTDUID)),(($G(SERUID)=DSERUID)!('DSERUID)) S DELETE=1 ; SOP Check
"RTN","MAGVRS61",238,0)
 . I FILE=2005.63,ACC=DUPACC,PATID=DUPPATID,((STUDUID=DSTDUID)!('DSTDUID)) S DELETE=1 ; Series Check
"RTN","MAGVRS61",239,0)
 . I FILE=2005.62,ACC=DUPACC,PATID=DUPPATID S DELETE=1 ; Study Check
"RTN","MAGVRS61",240,0)
 . I DELETE D
"RTN","MAGVRS61",241,0)
 . . ; Delete matching duplicate entries
"RTN","MAGVRS61",242,0)
 . . S IENS=DUPIEN_","
"RTN","MAGVRS61",243,0)
 . . S FDA(2005.66,IENS,.01)="@"
"RTN","MAGVRS61",244,0)
 . . D FILE^DIE("","FDA","ERR")
"RTN","MAGVRS61",245,0)
 . . S OUT="0"
"RTN","MAGVRS61",246,0)
 . . I $D(ERR("DIERR")) S OUT="-11"_SSEP_$G(ERR("DIERR",1,"TEXT",1))
"RTN","MAGVRS61",247,0)
 . . Q
"RTN","MAGVRS61",248,0)
 . Q
"RTN","MAGVRS61",249,0)
 Q
"RTN","MAGVRS61",250,0)
 ;
"RTN","MAGVRS71")
0^108^B4464077
"RTN","MAGVRS71",1,0)
MAGVRS71 ;WOIFO/MLH - RPC calls for DICOM file processing ; 20 Oct 2011 5:44 PM
"RTN","MAGVRS71",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS71",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS71",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS71",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS71",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS71",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS71",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS71",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS71",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS71",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS71",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS71",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS71",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS71",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS71",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS71",17,0)
 ;;
"RTN","MAGVRS71",18,0)
 Q
"RTN","MAGVRS71",19,0)
GETSILST(OUT) ; RPC - MAGV GET SERVICE INST LIST
"RTN","MAGVRS71",20,0)
 ; 
"RTN","MAGVRS71",21,0)
 N OSEP,ISEP,SSEP,FILE,SIIX,SIDTA
"RTN","MAGVRS71",22,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS71",23,0)
 S FILE=2005.8 ; IMAGING SERVICE INSTITUTION file
"RTN","MAGVRS71",24,0)
 S OUT(1)="",SIIX=0
"RTN","MAGVRS71",25,0)
 F  S SIIX=$O(^MAGV(FILE,SIIX)) Q:'SIIX  D
"RTN","MAGVRS71",26,0)
 . S SIDTA=$$GET1^DIQ(FILE,SIIX,.01,"I")_OSEP_$$GET1^DIQ(FILE,SIIX,.01)
"RTN","MAGVRS71",27,0)
 . S OUT($O(OUT(""),-1)+1)=0_SSEP_SIDTA
"RTN","MAGVRS71",28,0)
 . Q
"RTN","MAGVRS71",29,0)
 S OUT(1)=$O(OUT(""),-1)-1
"RTN","MAGVRS71",30,0)
 Q
"RTN","MAGVRS81")
0^109^B20670020
"RTN","MAGVRS81",1,0)
MAGVRS81 ;WOIFO/MLH - RPC calls for DICOM file processing ; 12 Apr 2010 5:45 PM
"RTN","MAGVRS81",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS81",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS81",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS81",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS81",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS81",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS81",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS81",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS81",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS81",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS81",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS81",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS81",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS81",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS81",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS81",17,0)
 ;;
"RTN","MAGVRS81",18,0)
 Q
"RTN","MAGVRS81",19,0)
GETRPROC(OUT,ACCNUM) ; Call from GETPINFO^MAGVRS08 - get radiology procedure information
"RTN","MAGVRS81",20,0)
 N RPTIX,RPTREC,EXAMDT,MAGD0,MAGD1,V,MAGD2,EXAMREC,OUTIX
"RTN","MAGVRS81",21,0)
 N EXAMCODE,EXAMCODEREC,EXAMDESC,EXAMCODECPT,CPTREC,CPTCODE,CPTDESC,REFPHY,TERMGY
"RTN","MAGVRS81",22,0)
 S RPTIX=$O(^RARPT("B",ACCNUM,"")) ; ICR 3323
"RTN","MAGVRS81",23,0)
 I RPTIX="" S OUT(1)="-21"_SSEP_SSEP_"Accession number doesn't point to Radiology report" Q
"RTN","MAGVRS81",24,0)
 S RPTREC=$G(^RARPT(RPTIX,0))
"RTN","MAGVRS81",25,0)
 I RPTREC="" S OUT(1)="-22"_SSEP_SSEP_"Radiology report record not found" Q
"RTN","MAGVRS81",26,0)
 S EXAMDT=$P(RPTREC,"^",3)
"RTN","MAGVRS81",27,0)
 S MAGD0=$P(RPTREC,"^",2)
"RTN","MAGVRS81",28,0)
 S MAGD1=9999999.9999-EXAMDT
"RTN","MAGVRS81",29,0)
 S V=$P(RPTREC,"^",4)
"RTN","MAGVRS81",30,0)
 I $L(MAGD0)*$L(MAGD1)*$L(V)=0 D  Q
"RTN","MAGVRS81",31,0)
 . S OUT(1)="-23"_SSEP_SSEP_"Radiology exam reference pointers not found" Q
"RTN","MAGVRS81",32,0)
 . Q
"RTN","MAGVRS81",33,0)
 S MAGD2=$O(^RADPT(MAGD0,"DT",MAGD1,"P","B",V,"")) ; ICR 65
"RTN","MAGVRS81",34,0)
 I MAGD2="" S OUT(1)="-24"_SSEP_SSEP_"Radiology exam record pointer not found" Q
"RTN","MAGVRS81",35,0)
 S EXAMREC=$G(^RADPT(MAGD0,"DT",MAGD1,"P",MAGD2,0))
"RTN","MAGVRS81",36,0)
 I EXAMREC="" S OUT(1)="-25"_SSEP_SSEP_"Radiology exam record not found" Q
"RTN","MAGVRS81",37,0)
 ;
"RTN","MAGVRS81",38,0)
 ; EXAM FOUND - populate attributes to return
"RTN","MAGVRS81",39,0)
 S EXAMCODE=$P(EXAMREC,"^",2),TERMGY="LOCAL"
"RTN","MAGVRS81",40,0)
 D:EXAMCODE
"RTN","MAGVRS81",41,0)
 . S EXAMCODEREC=$G(^RAMIS(71,EXAMCODE,0))
"RTN","MAGVRS81",42,0)
 . S EXAMDESC=$P(EXAMCODEREC,"^",1)
"RTN","MAGVRS81",43,0)
 . S EXAMCODECPT=$P(EXAMCODEREC,"^",9)
"RTN","MAGVRS81",44,0)
 . D:EXAMCODECPT'=""
"RTN","MAGVRS81",45,0)
 . . S CPTREC=$$CPT^ICPTCOD(EXAMCODECPT,EXAMDT) ; ICR 1995
"RTN","MAGVRS81",46,0)
 . . S CPTCODE=$P(CPTREC,"^",2)
"RTN","MAGVRS81",47,0)
 . . S CPTDESC=$P(CPTREC,"^",3)
"RTN","MAGVRS81",48,0)
 . . D:$L(CPTCODE)*$L(CPTDESC)
"RTN","MAGVRS81",49,0)
 . . . S EXAMCODE=CPTCODE
"RTN","MAGVRS81",50,0)
 . . . S EXAMDESC=CPTDESC
"RTN","MAGVRS81",51,0)
 . . . S TERMGY=$P(CPTREC,"^",5)
"RTN","MAGVRS81",52,0)
 . . . S TERMGY=$S(TERMGY="C":"CPT",TERMGY="H":"HCPCS",TERMGY="L":"LOCAL",1:"")
"RTN","MAGVRS81",53,0)
 . . . Q
"RTN","MAGVRS81",54,0)
 . . Q
"RTN","MAGVRS81",55,0)
 . Q
"RTN","MAGVRS81",56,0)
 S REFPHY=$$GET1^DIQ(200,(+$P(EXAMREC,"^",14))_",",.01)
"RTN","MAGVRS81",57,0)
 S OUTIX=0
"RTN","MAGVRS81",58,0)
 D:$G(EXAMDESC)'="" POP(.OUT,"DESCRIPTION",EXAMDESC)
"RTN","MAGVRS81",59,0)
 D:$G(EXAMDT)'="" POP(.OUT,"DATE/TIME",$$CVTDT(EXAMDT))
"RTN","MAGVRS81",60,0)
 D:$G(EXAMCODE)'="" POP(.OUT,"PROCEDURE CODE",EXAMCODE)
"RTN","MAGVRS81",61,0)
 D:$G(TERMGY)'="" POP(.OUT,"TERMINOLOGY",TERMGY)
"RTN","MAGVRS81",62,0)
 D POP(.OUT,"CODING AUTHORITY","USDVA")
"RTN","MAGVRS81",63,0)
 D:$G(REFPHY)'="" POP(.OUT,"REFERRING PHYSICIAN",REFPHY)
"RTN","MAGVRS81",64,0)
 Q
"RTN","MAGVRS81",65,0)
GETRRPT(OUT,ACCNUM) ; Call from GETPINFO^MAGVRS08 - get a radiology report
"RTN","MAGVRS81",66,0)
 N RPTIX,RPTIEN,TEXT,RET,ERR,TXTIX,OSEP,ISEP,SSEP
"RTN","MAGVRS81",67,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS81",68,0)
 I ACCNUM="" S OUT(1)="-51"_SSEP_SSEP_"No accession number provided" Q
"RTN","MAGVRS81",69,0)
 ; look up reports for this accession number - ICR 2479
"RTN","MAGVRS81",70,0)
 K ^TMP("DILIST",$J)
"RTN","MAGVRS81",71,0)
 D LIST^DIC(74,,"6I;7I",,,,ACCNUM,"B")
"RTN","MAGVRS81",72,0)
 ; did Lister encounter an exception?
"RTN","MAGVRS81",73,0)
 I $D(^TMP("DIERR",$J)) D  Q  ; yes, exception encountered; report and terminate
"RTN","MAGVRS81",74,0)
 . S OUT(1)="-53"_SSEP_SSEP_$G(^TMP("DIERR",$J,1,"TEXT",1))
"RTN","MAGVRS81",75,0)
 . Q
"RTN","MAGVRS81",76,0)
 I '$D(^TMP("DILIST",$J,1)) D  Q  ; no, but no report on file; bail
"RTN","MAGVRS81",77,0)
 . S OUT(1)="-52"_SSEP_SSEP_"No report on file for this exam"
"RTN","MAGVRS81",78,0)
 . Q
"RTN","MAGVRS81",79,0)
 ; no exception encountered, report results
"RTN","MAGVRS81",80,0)
 S RPTIX=0
"RTN","MAGVRS81",81,0)
 F  S RPTIX=$O(^TMP("DILIST",$J,2,RPTIX)) Q:'RPTIX  D
"RTN","MAGVRS81",82,0)
 . S RPTIEN=^TMP("DILIST",$J,2,RPTIX) Q:'RPTIEN
"RTN","MAGVRS81",83,0)
 . S RET=$$GET1^DIQ(74,RPTIEN_",",200,,"TEXT") Q:'$D(TEXT)  ; no report text, plow on
"RTN","MAGVRS81",84,0)
 . D POP(.OUT,"REPORT INDEX",RPTIEN)
"RTN","MAGVRS81",85,0)
 . D POP(.OUT,"DATE REPORT ENTERED",$$CVTDT($G(^TMP("DILIST",$J,"ID",RPTIX,6))))
"RTN","MAGVRS81",86,0)
 . D POP(.OUT,"VERIFIED DATE",$$CVTDT($G(^TMP("DILIST",$J,"ID",RPTIX,7))))
"RTN","MAGVRS81",87,0)
 . D POP(.OUT,"REPORT TEXT",.TEXT)
"RTN","MAGVRS81",88,0)
 . Q
"RTN","MAGVRS81",89,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","MAGVRS81",90,0)
 Q
"RTN","MAGVRS81",91,0)
 ;
"RTN","MAGVRS81",92,0)
POP(ARY,NAME,VALUE) ; populate an array with a name value pair
"RTN","MAGVRS81",93,0)
 N IX
"RTN","MAGVRS81",94,0)
 S:$D(VALUE)#10 ARY($O(ARY(" "),-1)+1)=NAME_OSEP_VALUE_SSEP
"RTN","MAGVRS81",95,0)
 S IX=0
"RTN","MAGVRS81",96,0)
 F  S IX=$O(VALUE(IX)) Q:'IX  S ARY($O(ARY(" "),-1)+1)=NAME_OSEP_VALUE(IX)_SSEP
"RTN","MAGVRS81",97,0)
 Q
"RTN","MAGVRS81",98,0)
CVTDT(FMDT) ; convert from FM to ISO date
"RTN","MAGVRS81",99,0)
 Q $S(FMDT:(17000000+$P(FMDT,".",1))_"."_$P($J(FMDT#1,0,6),".",2),1:"")
"RTN","MAGVRS82")
0^110^B14108947
"RTN","MAGVRS82",1,0)
MAGVRS82 ;WOIFO/MLH - RPC calls for DICOM file processing ; 12 Apr 2010 5:48 PM
"RTN","MAGVRS82",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVRS82",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVRS82",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS82",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVRS82",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVRS82",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVRS82",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVRS82",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVRS82",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVRS82",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVRS82",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVRS82",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVRS82",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVRS82",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVRS82",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVRS82",17,0)
 ;;
"RTN","MAGVRS82",18,0)
 Q
"RTN","MAGVRS82",19,0)
GETCPROC(OUT,CONNUM) ; Call from GETPROCI^MAGVRS08 - get consult procedure information
"RTN","MAGVRS82",20,0)
 N CONIX,CONREC,CONSCODPTR,CONSCODFIL,CONSCOD,TERMGY,CONSDESC,TIUPTR,OUTIX,CONSDT,REFPHY
"RTN","MAGVRS82",21,0)
 I CONNUM="" S OUT(1)="-41"_SSEP_SSEP_"No consult number provided" Q
"RTN","MAGVRS82",22,0)
 ;
"RTN","MAGVRS82",23,0)
 S CONSCODPTR=$$GET1^DIQ(123,CONNUM,4,"I") ; IA #4110
"RTN","MAGVRS82",24,0)
 D:CONSCODPTR[";"  ; variable pointer populated?
"RTN","MAGVRS82",25,0)
 . ; yes
"RTN","MAGVRS82",26,0)
 . S CONSCODFIL=+$P($P(CONSCODPTR,";",2),"(",2)
"RTN","MAGVRS82",27,0)
 . S CONSCOD=$P(CONSCODPTR,";",1)
"RTN","MAGVRS82",28,0)
 . Q
"RTN","MAGVRS82",29,0)
 S CONSDESC=$$GET1^DIQ(123,CONNUM,4,"E") ; IA #4110
"RTN","MAGVRS82",30,0)
 S TERMGY=$G(CONSCODFIL)
"RTN","MAGVRS82",31,0)
 S REFPHY=$$GET1^DIQ(123,CONNUM,10,"E")
"RTN","MAGVRS82",32,0)
 S:REFPHY="" REFPHY=$$GET1^DIQ(123,CONNUM,.126,"E")
"RTN","MAGVRS82",33,0)
 S TIUPTR=$$GET1^DIQ(123,CONNUM,16,"I")
"RTN","MAGVRS82",34,0)
 S:TIUPTR CONSDT=$$GET1^DIQ(8925,TIUPTR,1201,"I")
"RTN","MAGVRS82",35,0)
 ;
"RTN","MAGVRS82",36,0)
 S OUTIX=0
"RTN","MAGVRS82",37,0)
 D:$G(CONSDESC)'="" POP(.OUT,"DESCRIPTION",CONSDESC)
"RTN","MAGVRS82",38,0)
 D:$G(CONSDT)'="" POP(.OUT,"DATE/TIME",(17000000+$P(CONSDT,".",1))_"."_$P($J(CONSDT#1,0,6),".",2))
"RTN","MAGVRS82",39,0)
 D:$G(CONSCOD)'="" POP(.OUT,"PROCEDURE CODE",CONSCOD)
"RTN","MAGVRS82",40,0)
 D:$G(TERMGY)'="" POP(.OUT,"TERMINOLOGY",TERMGY)
"RTN","MAGVRS82",41,0)
 D POP(.OUT,"CODING AUTHORITY","USDVA")
"RTN","MAGVRS82",42,0)
 D:$G(REFPHY)'="" POP(.OUT,"REFERRING PHYSICIAN",REFPHY)
"RTN","MAGVRS82",43,0)
 Q
"RTN","MAGVRS82",44,0)
GETCRPT(OUT,CONNUM) ; Call from GETPROCI^MAGVRS08 - get a consult report (TIU note)
"RTN","MAGVRS82",45,0)
 N RPTIX,TIUIX,DOCTYPE,EDAT,XDAT,TEXT,RET,ERR,OSEP,ISEP,SSEP
"RTN","MAGVRS82",46,0)
 S OSEP=$$OUTSEP^MAGVRS41,ISEP=$$INPUTSEP^MAGVRS41,SSEP=$$STATSEP^MAGVRS41
"RTN","MAGVRS82",47,0)
 I CONNUM="" S OUT(1)="-61"_SSEP_SSEP_"No consult number provided" Q
"RTN","MAGVRS82",48,0)
 I '$D(^GMR(123,CONNUM)) S OUT(1)="-62"_SSEP_SSEP_"No record on file for this consult" Q
"RTN","MAGVRS82",49,0)
 S TIUIX=$$GET1^DIQ(123,CONNUM_",",16,"I") ; ICR 4110
"RTN","MAGVRS82",50,0)
 I 'TIUIX S OUT(1)="-63"_SSEP_SSEP_"No TIU note on file for this consult" Q
"RTN","MAGVRS82",51,0)
 S DOCTYPE=$$GET1^DIQ(8925,TIUIX_",",".01","E")
"RTN","MAGVRS82",52,0)
 I DOCTYPE="" S OUT(1)="-64"_SSEP_SSEP_"No TIU note on file for this consult" Q
"RTN","MAGVRS82",53,0)
 D POP(.OUT,"DOCUMENT TYPE",DOCTYPE)
"RTN","MAGVRS82",54,0)
 S RET=$$GET1^DIQ(8925,TIUIX_",","2",,"TEXT")
"RTN","MAGVRS82",55,0)
 I '$D(TEXT) S OUT(1)="-65"_SSEP_SSEP_"No report text on file for this consult's TIU note" Q
"RTN","MAGVRS82",56,0)
 S EDAT=$$GET1^DIQ(8925,TIUIX_",","1201","I")
"RTN","MAGVRS82",57,0)
 D:EDAT POP(.OUT,"ENTRY DATE/TIME",$$CVTDT(EDAT))
"RTN","MAGVRS82",58,0)
 S XDAT=$$GET1^DIQ(8925,TIUIX_",",".08","I")
"RTN","MAGVRS82",59,0)
 D:XDAT POP(.OUT,"EPISODE END DATE/TIME",$$CVTDT(EDAT))
"RTN","MAGVRS82",60,0)
 D POP(.OUT,"REPORT TEXT",.TEXT)
"RTN","MAGVRS82",61,0)
 Q
"RTN","MAGVRS82",62,0)
CVTDT(FMDT) ; convert from FM to ISO date
"RTN","MAGVRS82",63,0)
 Q (17000000+$P(FMDT,".",1))_"."_$P($J(FMDT#1,0,6),".",2)
"RTN","MAGVRS82",64,0)
POP(ARY,NAME,VALUE) ; populate an array with a name value pair
"RTN","MAGVRS82",65,0)
 N IX
"RTN","MAGVRS82",66,0)
 S:$D(VALUE)#10 ARY($O(ARY(" "),-1)+1)=NAME_OSEP_VALUE_SSEP
"RTN","MAGVRS82",67,0)
 S IX=0
"RTN","MAGVRS82",68,0)
 F  S IX=$O(VALUE(IX)) Q:'IX  S ARY($O(ARY(" "),-1)+1)=NAME_OSEP_VALUE(IX)_SSEP
"RTN","MAGVRS82",69,0)
 Q
"RTN","MAGVSOPC")
0^111^B6655177
"RTN","MAGVSOPC",1,0)
MAGVSOPC ;WOIFO/DAC - Update file (#2006.532)  ; 5 Nov 2012 12:12 PM
"RTN","MAGVSOPC",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVSOPC",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVSOPC",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVSOPC",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVSOPC",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVSOPC",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVSOPC",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVSOPC",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVSOPC",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVSOPC",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVSOPC",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVSOPC",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVSOPC",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVSOPC",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVSOPC",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVSOPC",17,0)
 ;;
"RTN","MAGVSOPC",18,0)
 Q
"RTN","MAGVSOPC",19,0)
UPDATE ; Update DICOM SOP CLASS file (#2006.532)
"RTN","MAGVSOPC",20,0)
 N MAGN
"RTN","MAGVSOPC",21,0)
 ;
"RTN","MAGVSOPC",22,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.5.4^Ophthalmic Tomography Image Storage")=""
"RTN","MAGVSOPC",23,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.104.1^Encapsulated PDF Storage")=""
"RTN","MAGVSOPC",24,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.104.2^Encapsulated CDA Storage")=""
"RTN","MAGVSOPC",25,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.131^Basic Structured Display Storage")=""
"RTN","MAGVSOPC",26,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.8^RT Ion Plan Storage")=""
"RTN","MAGVSOPC",27,0)
 ;
"RTN","MAGVSOPC",28,0)
 N MAGNFDA,MAGNIEN,MAGNXE,I
"RTN","MAGVSOPC",29,0)
 N UID,SOPNAME,ACTIVE
"RTN","MAGVSOPC",30,0)
 S I=""
"RTN","MAGVSOPC",31,0)
 S ACTIVE="A"
"RTN","MAGVSOPC",32,0)
 F  S I=$O(MAGN(I)) Q:I=""  D
"RTN","MAGVSOPC",33,0)
 . K MAGNFDA,MAGNIEN,MAGNXE
"RTN","MAGVSOPC",34,0)
 . S UID=$P(I,"^",1)
"RTN","MAGVSOPC",35,0)
 . Q:$D(^MAG(2006.532,"B",UID))
"RTN","MAGVSOPC",36,0)
 . S SOPNAME=$P(I,"^",2)
"RTN","MAGVSOPC",37,0)
 . S MAGNFDA(2006.532,"?+1,",.01)=UID
"RTN","MAGVSOPC",38,0)
 . S MAGNFDA(2006.532,"?+1,",2)=SOPNAME
"RTN","MAGVSOPC",39,0)
 . S MAGNFDA(2006.532,"?+1,",4)=ACTIVE
"RTN","MAGVSOPC",40,0)
 . D UPDATE^DIE("S","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVSOPC",41,0)
 . I $D(MAGNXE("DIERR","E")) W !,"Error updating DICOM SOP CLASS file (#2006.532): ",I
"RTN","MAGVSOPC",42,0)
 . Q
"RTN","MAGVSOPC",43,0)
 W !,"Update of DICOM SOP CLASS file (#2006.532) is done"
"RTN","MAGVSOPC",44,0)
 Q
"RTN","MAGVSOPU")
0^112^B118959735
"RTN","MAGVSOPU",1,0)
MAGVSOPU ;WOIFO/NST,DAC - Update file (#2006.539)  ; 31 Oct 2012 12:12 PM
"RTN","MAGVSOPU",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVSOPU",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVSOPU",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVSOPU",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVSOPU",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVSOPU",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVSOPU",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVSOPU",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVSOPU",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVSOPU",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVSOPU",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVSOPU",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVSOPU",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVSOPU",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVSOPU",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVSOPU",17,0)
 ;;
"RTN","MAGVSOPU",18,0)
 Q
"RTN","MAGVSOPU",19,0)
UPDATE ; Update DICOM UID SPECIFIC ACTION file (#2006.539)
"RTN","MAGVSOPU",20,0)
 N MAGN
"RTN","MAGVSOPU",21,0)
 ;
"RTN","MAGVSOPU",22,0)
 S MAGN("1.2.840.10008.1.1^Verification SOP Class^0^Echo")=""
"RTN","MAGVSOPU",23,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.1^Computed Radiography Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",24,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.1.1^Digital X-Ray Image Storage - For Presentation^1^Known|createIcon")=""
"RTN","MAGVSOPU",25,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.1.1.1^Digital X-Ray Image Storage - For Processing^1^Known|createIcon")=""
"RTN","MAGVSOPU",26,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.1.2^Digital Mammography X-Ray Image Storage - For Presentation^1^Known|createIcon")=""
"RTN","MAGVSOPU",27,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.1.2.1^Digital Mammography X-Ray Image Storage - For Processing^1^Known|createIcon")=""
"RTN","MAGVSOPU",28,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.1.3^Digital Intra-oral X-Ray Image Storage - For Presentation^1^Known|createIcon")=""
"RTN","MAGVSOPU",29,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.1.3.1^Digital Intra-oral X-Ray Image Storage - For Processing^1^Known|createIcon")=""
"RTN","MAGVSOPU",30,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.2^CT Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",31,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.2.1^Enhanced CT Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",32,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.3^Ultrasound Multi-frame Image Storage (Retired)^1^Known|createIcon")=""
"RTN","MAGVSOPU",33,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.3.1^Ultrasound Multi-frame Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",34,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.4^MR Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",35,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.4.1^Enhanced MR Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",36,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.4.2^MR Spectroscopy Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",37,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.4.3^Enhanced MR Color Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",38,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.5^Nuclear Medicine Image Storage (Retired)^1^Known|createIcon")=""
"RTN","MAGVSOPU",39,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.6^Ultrasound Image Storage (Retired)^1^Known|createIcon")=""
"RTN","MAGVSOPU",40,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.6.1^Ultrasound Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",41,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.6.2^Enhanced US Volume Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",42,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.7^Secondary Capture Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",43,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.7.1^Multi-frame Single Bit Secondary Capture Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",44,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.7.2^Multi-frame Grayscale Byte Secondary Capture Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",45,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.7.3^Multi-frame Grayscale Word Secondary Capture Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",46,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.7.4^Multi-frame True Color Secondary Capture Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",47,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.8^Standalone Overlay Storage^3^Unknown|iconovl.JPG")=""
"RTN","MAGVSOPU",48,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9^Standalone Curve Storage^3^Unknown|iconcurve.JPG")=""
"RTN","MAGVSOPU",49,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.1^Waveform Storage - Trial (Retired)^3^Unknown|absekg.JPG")=""
"RTN","MAGVSOPU",50,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.1.1^12-lead ECG Waveform Storage^3^Unknown|absekg.JPG")=""
"RTN","MAGVSOPU",51,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.1.2^General ECG Waveform Storage^3^Unknown|absekg.JPG")=""
"RTN","MAGVSOPU",52,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.1.3^Ambulatory ECG Waveform Storage^3^Unknown|absekg.JPG")=""
"RTN","MAGVSOPU",53,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.2.1^Hemodynamic Waveform Storage^3^Unknown|absekg.JPG")=""
"RTN","MAGVSOPU",54,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.3.1^Cardiac Electrophysiology Waveform Storage^3^Unknown|absekg.JPG")=""
"RTN","MAGVSOPU",55,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.4.1^Basic Voice Audio Waveform Storage^3^Unknown|magwav.JPG")=""
"RTN","MAGVSOPU",56,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.4.2^General Audio Waveform Storage^3^Unknown|magwav.JPG")=""
"RTN","MAGVSOPU",57,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.5.1^Arterial Pulse Waveform Storage^3^Unknown|magwav.JPG")=""
"RTN","MAGVSOPU",58,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.9.6.1^Respiratory Waveform Storage^3^Unknown|magwav.JPG")=""
"RTN","MAGVSOPU",59,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.10^Standalone Modality LUT Storage^3^Unknown|iconlut.JPG")=""
"RTN","MAGVSOPU",60,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.11^Standalone VOI LUT Storage^3^Unknown|iconlut.JPG")=""
"RTN","MAGVSOPU",61,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.11.1^Grayscale Softcopy Presentation State Storage SOP Class^3^Unknown|iconpstate.JPG")=""
"RTN","MAGVSOPU",62,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.11.2^Color Softcopy Presentation State Storage SOP Class^3^Unknown|iconpstate.JPG")=""
"RTN","MAGVSOPU",63,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.11.3^Pseudo-Color Softcopy Presentation State Storage SOP Class^3^Unknown|iconpstate.JPG")=""
"RTN","MAGVSOPU",64,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.11.4^Blending Softcopy Presentation State Storage SOP Class^3^Unknown|iconpstate.JPG")=""
"RTN","MAGVSOPU",65,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.11.5^XA/XRF Grayscale Softcopy Presentation State Storage^3^Unknown|iconpstate.JPG")=""
"RTN","MAGVSOPU",66,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.12.1^X-Ray Angiographic Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",67,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.12.1.1^Enhanced XA Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",68,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.12.2^X-Ray Radiofluoroscopic Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",69,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.12.2.1^Enhanced XRF Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",70,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.12.3^X-Ray Angiographic Bi-Plane Image Storage (Retired)^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",71,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.13.1.1^X-Ray 3D Angiographic Image Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",72,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.13.1.2^X-Ray 3D Craniofacial Image Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",73,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.13.1.3^Breast Tomosynthesis Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",74,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.20^Nuclear Medicine Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",75,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.66^Raw Data Storage^3^Unknown|iconraw.JPG")=""
"RTN","MAGVSOPU",76,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.66.1^Spatial Registration Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",77,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.66.2^Spatial Fiducials Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",78,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.66.3^Deformable Spatial Registration Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",79,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.66.4^Segmentation Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",80,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.66.5^Surface Segmentation Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",81,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.67^Real World Value Mapping Storage^3^Unknown|icon3d.JPG")=""
"RTN","MAGVSOPU",82,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1^VL Image Storage - Trial (Retired)^1^Known|createIcon")=""
"RTN","MAGVSOPU",83,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.2^VL Multi-frame Image Storage - Trial (Retired)^1^Known|createIcon")=""
"RTN","MAGVSOPU",84,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.1^VL Endoscopic Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",85,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.1.1^Video Endoscopic Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",86,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.2^VL Microscopic Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",87,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.2.1^Video Microscopic Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",88,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.3^VL Slide-Coordinates Microscopic Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",89,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.4^VL Photographic Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",90,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.4.1^Video Photographic Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",91,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.5.1^Ophthalmic Photography 8 Bit Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",92,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.5.2^Ophthalmic Photography 16 Bit Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",93,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.5.3^Stereometric Relationship Storage^3^Unknown|iconeyes.JPG")=""
"RTN","MAGVSOPU",94,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.5.4^Ophthalmic Tomography Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",95,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.78.1^Lensometry Measurements Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",96,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.78.2^Autorefraction Measurements Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",97,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.78.3^Keratometry Measurements Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",98,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.78.4^Subjective Refraction Measurements Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",99,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.78.5^Visual Acuity Measurements^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",100,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.78.6^Spectacle Prescription Reports Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",101,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.79.1^Macular Grid Thickness and Volume Report Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",102,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.1^Text SR Storage - Trial (Retired)^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",103,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.2^Audio SR Storage - Trial (Retired)^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",104,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.3^Detail SR Storage - Trial (Retired)^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",105,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.4^Comprehensive SR Storage - Trial (Retired)^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",106,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.11^Basic Text SR Storage^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",107,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.22^Enhanced SR Storage^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",108,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.33^Comprehensive SR Storage^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",109,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.40^Procedure Log Storage^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",110,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.50^Mammography CAD SR^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",111,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.59^Key Object Selection Document^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",112,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.65^Chest CAD SR^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",113,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.67^X-Ray Radiation Dose SR Storage^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",114,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.88.69^Colon CAD SR Storage^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",115,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.104.1^Encapsulated PDF Storage^1^Known|magpdf.JPG")=""
"RTN","MAGVSOPU",116,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.104.2^Encapsulated CDA Storage^3^Unknown|iconcda.JPG")=""
"RTN","MAGVSOPU",117,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.128^Positron Emission Tomography Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",118,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.129^Standalone PET Curve Storage^1^Known|iconcurve.JPG")=""
"RTN","MAGVSOPU",119,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.130^Enhanced PET Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",120,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.131^Basic Structured Display Storage^3^Unknown|iconsr.JPG")=""
"RTN","MAGVSOPU",121,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.1^RT Image Storage^1^Known|createIcon")=""
"RTN","MAGVSOPU",122,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.2^RT Dose Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",123,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.3^RT Structure Set Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",124,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.4^RT Beams Treatment Record Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",125,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.5^RT Plan Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",126,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.6^RT Brachy Treatment Record Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",127,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.7^RT Treatment Summary Record Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",128,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.8^RT Ion Plan Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",129,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.481.9^RT Ion Beams Treatment Record Storage^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",130,0)
 S MAGN("1.2.840.10008.5.1.4.34.1^RT Beams Delivery Instruction Storage (Supplement 74 Frozen Draft)^3^Unknown|iconrt.JPG")=""
"RTN","MAGVSOPU",131,0)
 S MAGN("1.2.840.10008.5.1.4.38.1^Hanging Protocol Storage^3^Unknown|iconpstate.JPG")=""
"RTN","MAGVSOPU",132,0)
 S MAGN("1.2.840.10008.5.1.4.1.1.77.1.6^VL Whole Slide Microscopic Image Storage^3^Unknown|createIcon")=""
"RTN","MAGVSOPU",133,0)
 ;
"RTN","MAGVSOPU",134,0)
 N MAGNFDA,MAGNIEN,MAGNXE,I
"RTN","MAGVSOPU",135,0)
 N PURPOSE,TYPE,SUBTYPE
"RTN","MAGVSOPU",136,0)
 N UID,UIDDESCR,ACTION,COMMENT
"RTN","MAGVSOPU",137,0)
 S I=""
"RTN","MAGVSOPU",138,0)
 S PURPOSE="Storage SCP"
"RTN","MAGVSOPU",139,0)
 S TYPE="SOP Class"
"RTN","MAGVSOPU",140,0)
 S SUBTYPE="Storage"
"RTN","MAGVSOPU",141,0)
 F  S I=$O(MAGN(I)) Q:I=""  D
"RTN","MAGVSOPU",142,0)
 . K MAGNFDA,MAGNIEN,MAGNXE
"RTN","MAGVSOPU",143,0)
 . S UID=$P(I,"^",1)
"RTN","MAGVSOPU",144,0)
 . S UIDDESCR=$P(I,"^",2)
"RTN","MAGVSOPU",145,0)
 . S ACTION=$P(I,"^",3)
"RTN","MAGVSOPU",146,0)
 . S COMMENT=$P(I,"^",4)
"RTN","MAGVSOPU",147,0)
 . S MAGNFDA(2006.539,"?+1,",.01)=UID
"RTN","MAGVSOPU",148,0)
 . S MAGNFDA(2006.539,"?+1,",2)=UIDDESCR
"RTN","MAGVSOPU",149,0)
 . S MAGNFDA(2006.539,"?+1,",3)=TYPE
"RTN","MAGVSOPU",150,0)
 . S MAGNFDA(2006.539,"?+1,",4)=SUBTYPE
"RTN","MAGVSOPU",151,0)
 . S MAGNFDA(2006.5391,"?+2,?+1,",.01)=PURPOSE
"RTN","MAGVSOPU",152,0)
 . S MAGNFDA(2006.5391,"?+2,?+1,",2)=ACTION
"RTN","MAGVSOPU",153,0)
 . S MAGNFDA(2006.5391,"?+2,?+1,",3)=COMMENT
"RTN","MAGVSOPU",154,0)
 . D UPDATE^DIE("S","MAGNFDA","MAGNIEN","MAGNXE")
"RTN","MAGVSOPU",155,0)
 . I $D(MAGNXE("DIERR","E")) W !,"Error updating DICOM UID SPECIFIC ACTION file (#2006.539): ",I
"RTN","MAGVSOPU",156,0)
 . Q
"RTN","MAGVSOPU",157,0)
 W !,"Update of DICOM UID SPECIFIC ACTION file (#2006.539) is done"
"RTN","MAGVSOPU",158,0)
 Q
"RTN","MAGVSTDY")
0^113^B7218427
"RTN","MAGVSTDY",1,0)
MAGVSTDY ;WOIFO/RRB,MAT - Read a DICOM image file ;  5 Apr 2013 12:55 PM
"RTN","MAGVSTDY",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVSTDY",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVSTDY",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVSTDY",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVSTDY",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVSTDY",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVSTDY",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVSTDY",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVSTDY",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVSTDY",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVSTDY",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVSTDY",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVSTDY",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVSTDY",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVSTDY",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVSTDY",17,0)
 ;;
"RTN","MAGVSTDY",18,0)
 ;
"RTN","MAGVSTDY",19,0)
 Q
"RTN","MAGVSTDY",20,0)
 ;+++++ Lookup the patient/study for an imaging service.
"RTN","MAGVSTDY",21,0)
 ;
"RTN","MAGVSTDY",22,0)
 ;   [RPC: MAGV STUDY LOOKUP]
"RTN","MAGVSTDY",23,0)
 ;   
"RTN","MAGVSTDY",24,0)
 ;   Calls LOOKUP^MAGVORDR
"RTN","MAGVSTDY",25,0)
 ;
"RTN","MAGVSTDY",26,0)
 ; Inputs
"RTN","MAGVSTDY",27,0)
 ; ======
"RTN","MAGVSTDY",28,0)
 ;
"RTN","MAGVSTDY",29,0)
 ;   RADATA     Variable to contain the string to return.
"RTN","MAGVSTDY",30,0)
 ;   CASENUMB   Day-Case/Accession Number (RAD package)
"RTN","MAGVSTDY",31,0)
 ;   IMGSVC     Imaging Service (RAD, CON)
"RTN","MAGVSTDY",32,0)
 ;   PNAMEDCM   DICOM Header (0010,0010) Patient Name
"RTN","MAGVSTDY",33,0)
 ;   PIDDCM      "     "     (0010,0020)  "      ID
"RTN","MAGVSTDY",34,0)
 ;   PDOBDCM     "     "     (0010,0030)  "      Date of Birth
"RTN","MAGVSTDY",35,0)
 ;   PSEXDCM     "     "     (0010,0040)  "      Sex
"RTN","MAGVSTDY",36,0)
 ;   [PICNDCM]   "     "        ????      "      Integration Control Number
"RTN","MAGVSTDY",37,0)
 ; 
"RTN","MAGVSTDY",38,0)
 ; Output
"RTN","MAGVSTDY",39,0)
 ; ======
"RTN","MAGVSTDY",40,0)
 ;           ----From MAGVORDR----  --From PIDCHECK--
"RTN","MAGVSTDY",41,0)
 ;           Error     Success      Error    Success
"RTN","MAGVSTDY",42,0)
 ;    "~"-1  -1        0
"RTN","MAGVSTDY",43,0)
 ;       -2  Errmsg1   DFN
"RTN","MAGVSTDY",44,0)
 ;       -3   ---      Site ID
"RTN","MAGVSTDY",45,0)
 ;       -4   ---      ---------->  n<1      0
"RTN","MAGVSTDY",46,0)
 ;       -5   ---      ---------->  Errmsg2  PID OK
"RTN","MAGVSTDY",47,0)
 ;
"RTN","MAGVSTDY",48,0)
 ;    Errmsg1______   If_____________
"RTN","MAGVSTDY",49,0)
 ;  
"RTN","MAGVSTDY",50,0)
 ;    -1~BAD CASE #     RAD and Null RADPTx
"RTN","MAGVSTDY",51,0)
 ;                      RAD - Null Exam Status pointer
"RTN","MAGVSTDY",52,0)
 ;                      RAD - Null Exam Status
"RTN","MAGVSTDY",53,0)
 ;    -1~NO CASE #      RAD,CON - Exam Status = CANCELLED
"RTN","MAGVSTDY",54,0)
 ;                      RAD,CON - no patient demographic file pointer
"RTN","MAGVSTDY",55,0)
 ;                      CON - incomplete consult study
"RTN","MAGVSTDY",56,0)
 ;
"RTN","MAGVSTDY",57,0)
LOOKUP(RADATA,CASENUMB,IMGSVC,PNAMEDCM,PIDDCM,PDOBDCM,PSEXDCM,PICNDCM) ;
"RTN","MAGVSTDY",58,0)
 ;
"RTN","MAGVSTDY",59,0)
 S PICNDCM=$G(PICNDCM)
"RTN","MAGVSTDY",60,0)
 ;
"RTN","MAGVSTDY",61,0)
 ;--- Lookup DFN, SITE. Quit if -1, Else RADATA="0~"_DFN_"~"_SITE.
"RTN","MAGVSTDY",62,0)
 S RADATA=$$LOOKUP^MAGVORDR(CASENUMB,IMGSVC)
"RTN","MAGVSTDY",63,0)
 Q:+RADATA=-1
"RTN","MAGVSTDY",64,0)
 ;
"RTN","MAGVSTDY",65,0)
 ; Look up and compare Patient Data associated with the CASENUM
"RTN","MAGVSTDY",66,0)
 N DFN S DFN=$P(RADATA,"~",2)
"RTN","MAGVSTDY",67,0)
 S RADATA=RADATA_"~"_$$PIDCHECK(DFN,PNAMEDCM,PIDDCM,PDOBDCM,PSEXDCM,PICNDCM)
"RTN","MAGVSTDY",68,0)
 Q
"RTN","MAGVSTDY",69,0)
 ;+++++  Wrap call to PIDCHECK^MAGDIR8A() and change delimiter.
"RTN","MAGVSTDY",70,0)
 ;   
"RTN","MAGVSTDY",71,0)
 ;   Internal entry point called by tag LOOKUP.
"RTN","MAGVSTDY",72,0)
 ;   Lookup patient demographics by DFN to validate DICOM header values.
"RTN","MAGVSTDY",73,0)
 ;
"RTN","MAGVSTDY",74,0)
 ; Inputs
"RTN","MAGVSTDY",75,0)
 ; ======
"RTN","MAGVSTDY",76,0)
 ; 
"RTN","MAGVSTDY",77,0)
 ;   DFN     IEN in the RAD/NUC MED PATIENT File (#70)
"RTN","MAGVSTDY",78,0)
 ;
"RTN","MAGVSTDY",79,0)
 ;   Other parameters as described at tag LOOKUP.
"RTN","MAGVSTDY",80,0)
 ;
"RTN","MAGVSTDY",81,0)
 ; Output
"RTN","MAGVSTDY",82,0)
 ; ======
"RTN","MAGVSTDY",83,0)
 ; 
"RTN","MAGVSTDY",84,0)
 ;   If found & match:  0~PID OK
"RTN","MAGVSTDY",85,0)
 ;   On error:          n<0~ERRMSG
"RTN","MAGVSTDY",86,0)
 ; 
"RTN","MAGVSTDY",87,0)
 ; Notes
"RTN","MAGVSTDY",88,0)
 ; =====
"RTN","MAGVSTDY",89,0)
 ;
"RTN","MAGVSTDY",90,0)
 ;   PIDCHECK^MAGDIR8A expects:
"RTN","MAGVSTDY",91,0)
 ; 
"RTN","MAGVSTDY",92,0)
 ;     PID        As passed to MAGDIR8 by the gateway. Here it is
"RTN","MAGVSTDY",93,0)
 ;                  set to PIDDCM.
"RTN","MAGVSTDY",94,0)
 ;     CASENUMB
"RTN","MAGVSTDY",95,0)
 ;     [INSTLOC]  Instrument Location: A Site ID from the gateway's
"RTN","MAGVSTDY",96,0)
 ;                  INSTRUMENT DICTIONARY: ^MAGDICOM(2006.581,IEN, "^"-5
"RTN","MAGVSTDY",97,0)
 ;                  used by DEM^MAGSPID.
"RTN","MAGVSTDY",98,0)
 ;
"RTN","MAGVSTDY",99,0)
PIDCHECK(DFN,PNAMEDCM,PIDDCM,PDOBDCM,PSEXDCM,PICNDCM) ;
"RTN","MAGVSTDY",100,0)
 ;
"RTN","MAGVSTDY",101,0)
 ;--- Initialize additional expected variables.
"RTN","MAGVSTDY",102,0)
 N FIRSTDCM,LASTDCM,MIDCM,PNAMEVAH
"RTN","MAGVSTDY",103,0)
 N PID S PID=PIDDCM
"RTN","MAGVSTDY",104,0)
 ;--- Next line check & transform copied from READFILE+27^MAGDIR6B.
"RTN","MAGVSTDY",105,0)
 I $$ISIHS^MAGSPID() S PID=+PID ; P123 strip off leading zero(s)
"RTN","MAGVSTDY",106,0)
 N RETURN
"RTN","MAGVSTDY",107,0)
 S RETURN=$$PIDCHECK^MAGDIR8A()
"RTN","MAGVSTDY",108,0)
 S RETURN=$S(RETURN=0:"0~PID OK",1:$TR(RETURN,",","~"))
"RTN","MAGVSTDY",109,0)
 Q RETURN
"RTN","MAGVSTDY",110,0)
 ;
"RTN","MAGVSTDY",111,0)
 ; MAGVSTDY
"RTN","MAGVUID")
0^114^B62918469
"RTN","MAGVUID",1,0)
MAGVUID ;WOIFO/RRB - MAGV Duplicate UID Utilities and RPCs ; 19 Sep 2011 6:09 PM
"RTN","MAGVUID",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVUID",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVUID",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVUID",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVUID",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVUID",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVUID",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVUID",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVUID",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVUID",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVUID",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVUID",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVUID",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVUID",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVUID",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVUID",17,0)
 ;;
"RTN","MAGVUID",18,0)
 Q
"RTN","MAGVUID",19,0)
 ; 
"RTN","MAGVUID",20,0)
 ;
"RTN","MAGVUID",21,0)
STUDY(RESULT,DFN,ACNUMB,SITE,INSTR,STUDYUID)  ; RPC - MAGV STUDY UID CHECK
"RTN","MAGVUID",22,0)
 ;
"RTN","MAGVUID",23,0)
 N NEWUID,TYPE,UID
"RTN","MAGVUID",24,0)
 S TYPE="STUDY"
"RTN","MAGVUID",25,0)
 ;
"RTN","MAGVUID",26,0)
 ; Check length of incoming UID and reject with fatal error message if >96 characters.
"RTN","MAGVUID",27,0)
 ; 
"RTN","MAGVUID",28,0)
 I $L(STUDYUID)>96 S RESULT="-1~Fatal UID > 96 Characters" Q
"RTN","MAGVUID",29,0)
 ;
"RTN","MAGVUID",30,0)
 ; Check IMAGING DUPLICATE UID LOG (#2005.66) to determine if the Study UID has been replaced.  
"RTN","MAGVUID",31,0)
 ; If it has return the replacement UID and quit.  Otherwise, continue with UID checking.
"RTN","MAGVUID",32,0)
 ;
"RTN","MAGVUID",33,0)
 S UID=$$UIDLOOK^MAGVRS61(STUDYUID,DFN,ACNUMB,TYPE,STUDYUID)
"RTN","MAGVUID",34,0)
 I UID'=0 S RESULT="1~LogUIDToUse~"_UID Q
"RTN","MAGVUID",35,0)
 ;
"RTN","MAGVUID",36,0)
 ;
"RTN","MAGVUID",37,0)
 ; Check and replace illegal Study UID
"RTN","MAGVUID",38,0)
 ; 
"RTN","MAGVUID",39,0)
 I $L(STUDYUID)>64 D  Q RESULT ; Replace UID having Illegal Length
"RTN","MAGVUID",40,0)
 . S RESULT="3~Illegal UID Replacement~"
"RTN","MAGVUID",41,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,STUDYUID,TYPE)
"RTN","MAGVUID",42,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_NEWUID)
"RTN","MAGVUID",43,0)
 . Q
"RTN","MAGVUID",44,0)
 ;
"RTN","MAGVUID",45,0)
 S RESULT=$$UIDCHECK(STUDYUID,TYPE)  ; Check for illegal UID format and characters
"RTN","MAGVUID",46,0)
 ;
"RTN","MAGVUID",47,0)
 I RESULT=1 D  Q RESULT ; Replace UID having Illegal format or characters
"RTN","MAGVUID",48,0)
 . S RESULT="3~Illegal UID Replacement~"
"RTN","MAGVUID",49,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,STUDYUID,TYPE)
"RTN","MAGVUID",50,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_NEWUID)
"RTN","MAGVUID",51,0)
 ;
"RTN","MAGVUID",52,0)
 I RESULT'=0 Q
"RTN","MAGVUID",53,0)
 ;
"RTN","MAGVUID",54,0)
 ; Proceed with checking Study UID
"RTN","MAGVUID",55,0)
 ;
"RTN","MAGVUID",56,0)
 S RESULT=$$STUDY^MAGVGUID(DFN,ACNUMB,STUDYUID)  ; Check Study UID in ^MAG(2005)
"RTN","MAGVUID",57,0)
 ;
"RTN","MAGVUID",58,0)
 I RESULT=1 D  Q  ; Create New Study UID and Quit if duplicate is found in #2005
"RTN","MAGVUID",59,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,STUDYUID,TYPE)
"RTN","MAGVUID",60,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_"~NewUIDToUse~"_NEWUID)
"RTN","MAGVUID",61,0)
 . Q
"RTN","MAGVUID",62,0)
 ;
"RTN","MAGVUID",63,0)
 S RESULT=$$DUPSTUD^MAGVRS61(DFN,ACNUMB,STUDYUID)  ; Check Study UID in ^MAGV(2005.62)
"RTN","MAGVUID",64,0)
 ;
"RTN","MAGVUID",65,0)
 I RESULT=1 D  ; Create New Study UID if duplicate is found in #2005.62
"RTN","MAGVUID",66,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,STUDYUID,TYPE)
"RTN","MAGVUID",67,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_"~NewUIDToUse~"_NEWUID)
"RTN","MAGVUID",68,0)
 . Q
"RTN","MAGVUID",69,0)
 ;
"RTN","MAGVUID",70,0)
 Q
"RTN","MAGVUID",71,0)
 ;
"RTN","MAGVUID",72,0)
SERIES(RESULT,DFN,ACNUMB,SITE,INSTR,STUDYUID,SERIESUID)  ; RPC - MAGV SERIES UID CHECK
"RTN","MAGVUID",73,0)
 ;
"RTN","MAGVUID",74,0)
 N NEWUID,TYPE,UID
"RTN","MAGVUID",75,0)
 S TYPE="SERIES"
"RTN","MAGVUID",76,0)
 ;
"RTN","MAGVUID",77,0)
 ; Check length of incoming UID and reject with fatal error message if >96 characters.
"RTN","MAGVUID",78,0)
 ; 
"RTN","MAGVUID",79,0)
 I $L(SERIESUID)>96 S RESULT="-1~Fatal UID > 96 Characters" Q
"RTN","MAGVUID",80,0)
 ;
"RTN","MAGVUID",81,0)
 ; Check IMAGING DUPLICATE UID LOG (#2005.66) to determine if the Series UID has been replaced.  
"RTN","MAGVUID",82,0)
 ; If it has return the replacement UID and quit.  Otherwise, continue with UID checking.
"RTN","MAGVUID",83,0)
 ;
"RTN","MAGVUID",84,0)
 S UID=$$UIDLOOK^MAGVRS61(SERIESUID,DFN,ACNUMB,TYPE,STUDYUID)
"RTN","MAGVUID",85,0)
 I UID'=0 S RESULT="1~LogUIDToUse~"_UID Q
"RTN","MAGVUID",86,0)
 ;
"RTN","MAGVUID",87,0)
 ; Check and replace illegal Series UID
"RTN","MAGVUID",88,0)
 ; 
"RTN","MAGVUID",89,0)
 I $L(SERIESUID)>64 D  Q RESULT ; Replace UID having Illegal Length
"RTN","MAGVUID",90,0)
 . S RESULT="3~Illegal UID Replacement~"
"RTN","MAGVUID",91,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SERIESUID,TYPE,STUDYUID)
"RTN","MAGVUID",92,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_NEWUID)
"RTN","MAGVUID",93,0)
 . Q
"RTN","MAGVUID",94,0)
 ;
"RTN","MAGVUID",95,0)
 S RESULT=$$UIDCHECK(SERIESUID,TYPE)  ; Check for illegal UID format and characters
"RTN","MAGVUID",96,0)
 ;
"RTN","MAGVUID",97,0)
 I RESULT=1 D  Q RESULT ; Replace UID having Illegal format or characters
"RTN","MAGVUID",98,0)
 . S RESULT="3~Illegal UID Replacement~"
"RTN","MAGVUID",99,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SERIESUID,TYPE,STUDYUID)
"RTN","MAGVUID",100,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_NEWUID)
"RTN","MAGVUID",101,0)
 ;
"RTN","MAGVUID",102,0)
 I RESULT'=0 Q
"RTN","MAGVUID",103,0)
 ;
"RTN","MAGVUID",104,0)
 ; Proceed with checking Series UID
"RTN","MAGVUID",105,0)
 ; 
"RTN","MAGVUID",106,0)
 S RESULT=$$SERIES^MAGVGUID(DFN,ACNUMB,STUDYUID,SERIESUID)  ; Check Series UID in ^MAG(2005)
"RTN","MAGVUID",107,0)
 ;
"RTN","MAGVUID",108,0)
 I RESULT=1 D  Q  ; Create New Series UID and Quit if duplicate is found in #2005
"RTN","MAGVUID",109,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SERIESUID,TYPE,STUDYUID)
"RTN","MAGVUID",110,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_"~NewUIDToUse~"_NEWUID)
"RTN","MAGVUID",111,0)
 . Q
"RTN","MAGVUID",112,0)
 ;
"RTN","MAGVUID",113,0)
 S RESULT=$$DUPSER^MAGVRS61(DFN,ACNUMB,STUDYUID,SERIESUID)  ; Check Series UID in ^MAGV(2005.63)
"RTN","MAGVUID",114,0)
 ;
"RTN","MAGVUID",115,0)
 I RESULT=1 D  ; Create New Series UID if duplicate is found in #2005.63
"RTN","MAGVUID",116,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SERIESUID,TYPE,STUDYUID)
"RTN","MAGVUID",117,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_"~NewUIDToUse~"_NEWUID)
"RTN","MAGVUID",118,0)
 . Q
"RTN","MAGVUID",119,0)
 ;
"RTN","MAGVUID",120,0)
 Q
"RTN","MAGVUID",121,0)
 ;
"RTN","MAGVUID",122,0)
SOP(RESULT,DFN,ACNUMB,SITE,INSTR,STUDYUID,SERIESUID,SOPUID)  ; RPC - MAGV SOP UID CHECK
"RTN","MAGVUID",123,0)
 ;
"RTN","MAGVUID",124,0)
 N NEWUID,TYPE,UID
"RTN","MAGVUID",125,0)
 S TYPE="SOP"
"RTN","MAGVUID",126,0)
 ;
"RTN","MAGVUID",127,0)
 ; Check length of incoming UID and reject with fatal error message if >96 characters.
"RTN","MAGVUID",128,0)
 ; 
"RTN","MAGVUID",129,0)
 I $L(SOPUID)>96 S RESULT="-1~Fatal UID > 96 Characters" Q
"RTN","MAGVUID",130,0)
 ;
"RTN","MAGVUID",131,0)
 ;
"RTN","MAGVUID",132,0)
 ; Check IMAGING DUPLICATE UID LOG (#2005.66) to determine if the Series UID has been replaced.  
"RTN","MAGVUID",133,0)
 ; If it has return the replacement UID and quit.  Otherwise, continue with UID checking.
"RTN","MAGVUID",134,0)
 ;
"RTN","MAGVUID",135,0)
 S UID=$$UIDLOOK^MAGVRS61(SOPUID,DFN,ACNUMB,TYPE,STUDYUID,SERIESUID)
"RTN","MAGVUID",136,0)
 I UID'=0 S RESULT="2~RERUNLog~" Q
"RTN","MAGVUID",137,0)
 ;
"RTN","MAGVUID",138,0)
 ; Check and replace illegal SOP UID
"RTN","MAGVUID",139,0)
 ; 
"RTN","MAGVUID",140,0)
 I $L(SOPUID)>64 D  Q RESULT ; Replace UID having Illegal Length
"RTN","MAGVUID",141,0)
 . S RESULT="3~Illegal UID Replacement~"
"RTN","MAGVUID",142,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SOPUID,TYPE,STUDYUID,SERIESUID)
"RTN","MAGVUID",143,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_NEWUID)
"RTN","MAGVUID",144,0)
 . Q
"RTN","MAGVUID",145,0)
 ;
"RTN","MAGVUID",146,0)
 S RESULT=$$UIDCHECK(SOPUID,TYPE)  ; Check for illegal UID format and characters
"RTN","MAGVUID",147,0)
 ;
"RTN","MAGVUID",148,0)
 I RESULT=1 D  Q RESULT ; Replace UID having Illegal format or characters
"RTN","MAGVUID",149,0)
 . S RESULT="3~Illegal UID Replacement~"
"RTN","MAGVUID",150,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SOPUID,TYPE,STUDYUID,SERIESUID)
"RTN","MAGVUID",151,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_NEWUID)
"RTN","MAGVUID",152,0)
 ;
"RTN","MAGVUID",153,0)
 I RESULT'=0 Q
"RTN","MAGVUID",154,0)
 ;
"RTN","MAGVUID",155,0)
 ; Proceed with checking SOP UID
"RTN","MAGVUID",156,0)
 ; 
"RTN","MAGVUID",157,0)
 S RESULT=$$SOP^MAGVGUID(DFN,ACNUMB,STUDYUID,SERIESUID,SOPUID)  ; Check SOP UID in ^MAG(2005)
"RTN","MAGVUID",158,0)
 ;
"RTN","MAGVUID",159,0)
 I RESULT=1 D  Q  ; Create New SOP UID and Quit if duplicate is found in #2005
"RTN","MAGVUID",160,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SOPUID,TYPE,STUDYUID,SERIESUID)
"RTN","MAGVUID",161,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_"~NewUIDToUse~"_NEWUID)
"RTN","MAGVUID",162,0)
 . Q
"RTN","MAGVUID",163,0)
 ;
"RTN","MAGVUID",164,0)
 I RESULT=2 S RESULT=RESULT_"~RERUN" Q  ; Quit with RERUN message if on file and not duplicate UID
"RTN","MAGVUID",165,0)
 ;
"RTN","MAGVUID",166,0)
 S RESULT=$$DUPSOP^MAGVRS61(DFN,ACNUMB,STUDYUID,SERIESUID,SOPUID)  ; Check Series UID in ^MAGV(2005.64)
"RTN","MAGVUID",167,0)
 ;
"RTN","MAGVUID",168,0)
 I RESULT=1 D  ; Create New SOP UID if duplicate is found in #2005.64
"RTN","MAGVUID",169,0)
 . S NEWUID=$$NEWUID(DFN,ACNUMB,SITE,INSTR,SOPUID,TYPE,STUDYUID,SERIESUID)
"RTN","MAGVUID",170,0)
 . S RESULT=$S(+NEWUID=-1:NEWUID,1:RESULT_"~NewUIDToUse~"_NEWUID)
"RTN","MAGVUID",171,0)
 . Q
"RTN","MAGVUID",172,0)
 ;
"RTN","MAGVUID",173,0)
 I RESULT=2 S RESULT=RESULT_"~RERUN"  ; Return RERUN message if on file and not duplicate UId
"RTN","MAGVUID",174,0)
 ;
"RTN","MAGVUID",175,0)
 Q
"RTN","MAGVUID",176,0)
 ;
"RTN","MAGVUID",177,0)
UIDCHECK(UIDCHK,TYPE)  ; Check UID for invalid UIDs
"RTN","MAGVUID",178,0)
 ;
"RTN","MAGVUID",179,0)
 N I,X
"RTN","MAGVUID",180,0)
 S RESULT=0
"RTN","MAGVUID",181,0)
 ;
"RTN","MAGVUID",182,0)
 ; Check for Illegal Characters
"RTN","MAGVUID",183,0)
 ; 
"RTN","MAGVUID",184,0)
 F I=1:1:$L(UIDCHK,".") S X=$P(UIDCHK,".",I) D  I RESULT'=0 Q 
"RTN","MAGVUID",185,0)
 . I $L(X)>1,$E(X,1)=0 S RESULT=1 Q
"RTN","MAGVUID",186,0)
 . I X'?1.N S RESULT=1 Q
"RTN","MAGVUID",187,0)
 . Q
"RTN","MAGVUID",188,0)
 ;
"RTN","MAGVUID",189,0)
 Q RESULT
"RTN","MAGVUID",190,0)
 ;
"RTN","MAGVUID",191,0)
NEWUID(DFN,ACNUMB,SITE,INSTR,OUID,TYPE,STUDYUID,SERIESUID)  ; Utility to Generate new UID for TYPE
"RTN","MAGVUID",192,0)
 ;
"RTN","MAGVUID",193,0)
 Q:SITE="" "-1~Invalid Site Number"
"RTN","MAGVUID",194,0)
 ;
"RTN","MAGVUID",195,0)
 N I,ID,STAMP,UID,UINST,PGM,LOGCHK
"RTN","MAGVUID",196,0)
 ;
"RTN","MAGVUID",197,0)
 ; Remove alpha characters from SITE/STATION number
"RTN","MAGVUID",198,0)
 ; 
"RTN","MAGVUID",199,0)
 S SITE=$E(SITE,1,3)
"RTN","MAGVUID",200,0)
 ;
"RTN","MAGVUID",201,0)
 S (UID,UINST)=""
"RTN","MAGVUID",202,0)
 S STUDYUID=$G(STUDYUID),SERIESUID=$G(SERIESUID)
"RTN","MAGVUID",203,0)
 S ID=$S($E($P(ACNUMB,"-"),1)'?1N:$TR($H,",","")_$P(ACNUMB,"-",2),1:$TR(ACNUMB,"-",""))
"RTN","MAGVUID",204,0)
 F I=1:1:$L(INSTR) S UINST=UINST+$A($E(INSTR,I))
"RTN","MAGVUID",205,0)
 S SITE=SITE_"."_UINST
"RTN","MAGVUID",206,0)
 S STAMP=$$NOW^XLFDT
"RTN","MAGVUID",207,0)
 S STAMP=$TR($TR(STAMP,".","")," ","")
"RTN","MAGVUID",208,0)
 S ID=+ID_+STAMP
"RTN","MAGVUID",209,0)
 S PGM=TYPE_"^MAGVUID1(.UID,SITE,ID)"
"RTN","MAGVUID",210,0)
 D @PGM
"RTN","MAGVUID",211,0)
 ;
"RTN","MAGVUID",212,0)
 ; Log duplicate UID error
"RTN","MAGVUID",213,0)
 ; 
"RTN","MAGVUID",214,0)
 ;
"RTN","MAGVUID",215,0)
 D LOGDUP^MAGVRS61(OUID,.UID,ACNUMB,DFN,TYPE,STUDYUID,SERIESUID)  ; Log duplicate UID and adjust new UID to be unique if already logged
"RTN","MAGVUID",216,0)
 ;
"RTN","MAGVUID",217,0)
 Q UID  ; Return new UID to use
"RTN","MAGVUID",218,0)
 ; 
"RTN","MAGVUID1")
0^115^B4997448
"RTN","MAGVUID1",1,0)
MAGVUID1 ;WOIFO/RRB - DICOM UID Generator ; 19 Sep 2011 6:10 PM
"RTN","MAGVUID1",2,0)
 ;;3.0;IMAGING;**118**;Mar 19, 2002;Build 4525;May 01, 2013
"RTN","MAGVUID1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGVUID1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVUID1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGVUID1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGVUID1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGVUID1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGVUID1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGVUID1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGVUID1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGVUID1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGVUID1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGVUID1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGVUID1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGVUID1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGVUID1",17,0)
 ;;
"RTN","MAGVUID1",18,0)
 Q
"RTN","MAGVUID1",19,0)
 ;
"RTN","MAGVUID1",20,0)
 ;
"RTN","MAGVUID1",21,0)
STUDY(UID,SITE,ID) ; generate a Study uid
"RTN","MAGVUID1",22,0)
 N TYPE
"RTN","MAGVUID1",23,0)
 S UID=$$UID(4,SITE,ID)
"RTN","MAGVUID1",24,0)
 Q
"RTN","MAGVUID1",25,0)
 ;
"RTN","MAGVUID1",26,0)
SERIES(UID,SITE,ID) ; generate a Series uid
"RTN","MAGVUID1",27,0)
 N TYPE
"RTN","MAGVUID1",28,0)
 S UID=$$UID(7,SITE,ID)
"RTN","MAGVUID1",29,0)
 Q
"RTN","MAGVUID1",30,0)
 ;
"RTN","MAGVUID1",31,0)
SOP(UID,SITE,ID) ; generate a SOP uid
"RTN","MAGVUID1",32,0)
 N TYPE
"RTN","MAGVUID1",33,0)
 S UID=$$UID(8,SITE,ID)
"RTN","MAGVUID1",34,0)
 Q
"RTN","MAGVUID1",35,0)
 ;
"RTN","MAGVUID1",36,0)
 ;
"RTN","MAGVUID1",37,0)
UID(TYPE,SITE,NUMBER) ; generate a UID
"RTN","MAGVUID1",38,0)
 N X,I,UID
"RTN","MAGVUID1",39,0)
 S X=""
"RTN","MAGVUID1",40,0)
 F I=1:1:$L(SITE) S X=X_$S($E(SITE,I)?1N:$E(SITE,I),1:$A(SITE,I))
"RTN","MAGVUID1",41,0)
 S UID=$G(^MAGD(2006.15,1,"UID ROOT"))_".1."_TYPE_"."_X
"RTN","MAGVUID1",42,0)
 I $D(NUMBER) S UID=UID_"."_NUMBER
"RTN","MAGVUID1",43,0)
 ; Remove leading 0s from UID components
"RTN","MAGVUID1",44,0)
 F I=1:1:$L(UID,".") S $P(UID,".",I)=+$P(UID,".",I)
"RTN","MAGVUID1",45,0)
 I $L(UID)>64 S UID="-3~Generated UID > 64 Characters"  ; fatal error
"RTN","MAGVUID1",46,0)
 ;
"RTN","MAGVUID1",47,0)
 Q UID
"RTN","MAGVUID1",48,0)
 ;
"SEC","^DD",2006.912,2006.9122,5,8)
@
"SEC","^DD",2006.912,2006.9122,6,8)
@
"SEC","^DD",2006.912,2006.9122,8,8)
@
"SEC","^DIC",2005.6,2005.6,0,"AUDIT")
@
"SEC","^DIC",2005.6,2005.6,0,"DD")
@
"SEC","^DIC",2005.6,2005.6,0,"DEL")
@
"SEC","^DIC",2005.6,2005.6,0,"LAYGO")
@
"SEC","^DIC",2005.6,2005.6,0,"RD")
@
"SEC","^DIC",2005.6,2005.6,0,"WR")
@
"SEC","^DIC",2005.61,2005.61,0,"AUDIT")
@
"SEC","^DIC",2005.61,2005.61,0,"DD")
@
"SEC","^DIC",2005.61,2005.61,0,"DEL")
@
"SEC","^DIC",2005.61,2005.61,0,"LAYGO")
@
"SEC","^DIC",2005.61,2005.61,0,"RD")
@
"SEC","^DIC",2005.61,2005.61,0,"WR")
@
"SEC","^DIC",2005.62,2005.62,0,"AUDIT")
@
"SEC","^DIC",2005.62,2005.62,0,"DD")
@
"SEC","^DIC",2005.62,2005.62,0,"DEL")
@
"SEC","^DIC",2005.62,2005.62,0,"LAYGO")
@
"SEC","^DIC",2005.62,2005.62,0,"RD")
@
"SEC","^DIC",2005.62,2005.62,0,"WR")
@
"SEC","^DIC",2005.63,2005.63,0,"AUDIT")
@
"SEC","^DIC",2005.63,2005.63,0,"DD")
@
"SEC","^DIC",2005.63,2005.63,0,"DEL")
@
"SEC","^DIC",2005.63,2005.63,0,"LAYGO")
@
"SEC","^DIC",2005.63,2005.63,0,"RD")
@
"SEC","^DIC",2005.63,2005.63,0,"WR")
@
"SEC","^DIC",2005.64,2005.64,0,"AUDIT")
@
"SEC","^DIC",2005.64,2005.64,0,"DD")
@
"SEC","^DIC",2005.64,2005.64,0,"DEL")
@
"SEC","^DIC",2005.64,2005.64,0,"LAYGO")
@
"SEC","^DIC",2005.64,2005.64,0,"RD")
@
"SEC","^DIC",2005.64,2005.64,0,"WR")
@
"SEC","^DIC",2005.65,2005.65,0,"AUDIT")
@
"SEC","^DIC",2005.65,2005.65,0,"DD")
@
"SEC","^DIC",2005.65,2005.65,0,"DEL")
@
"SEC","^DIC",2005.65,2005.65,0,"LAYGO")
@
"SEC","^DIC",2005.65,2005.65,0,"RD")
@
"SEC","^DIC",2005.65,2005.65,0,"WR")
@
"SEC","^DIC",2005.66,2005.66,0,"AUDIT")
@
"SEC","^DIC",2005.66,2005.66,0,"DD")
@
"SEC","^DIC",2005.66,2005.66,0,"DEL")
@
"SEC","^DIC",2005.66,2005.66,0,"LAYGO")
@
"SEC","^DIC",2005.66,2005.66,0,"RD")
@
"SEC","^DIC",2005.66,2005.66,0,"WR")
@
"SEC","^DIC",2005.8,2005.8,0,"AUDIT")
@
"SEC","^DIC",2005.8,2005.8,0,"DD")
@
"SEC","^DIC",2005.8,2005.8,0,"DEL")
@
"SEC","^DIC",2005.8,2005.8,0,"LAYGO")
@
"SEC","^DIC",2005.8,2005.8,0,"RD")
@
"SEC","^DIC",2005.8,2005.8,0,"WR")
@
"SEC","^DIC",2006.1,2006.1,0,"AUDIT")

"SEC","^DIC",2006.1,2006.1,0,"DD")
@
"SEC","^DIC",2006.1,2006.1,0,"DEL")
@
"SEC","^DIC",2006.1,2006.1,0,"LAYGO")
@
"SEC","^DIC",2006.1,2006.1,0,"RD")
@
"SEC","^DIC",2006.1,2006.1,0,"WR")
@
"SEC","^DIC",2006.911,2006.911,0,"AUDIT")
@
"SEC","^DIC",2006.911,2006.911,0,"DD")
@
"SEC","^DIC",2006.911,2006.911,0,"DEL")
@
"SEC","^DIC",2006.911,2006.911,0,"LAYGO")
@
"SEC","^DIC",2006.911,2006.911,0,"RD")
@
"SEC","^DIC",2006.911,2006.911,0,"WR")
@
"SEC","^DIC",2006.912,2006.912,0,"AUDIT")
@
"SEC","^DIC",2006.912,2006.912,0,"DD")
@
"SEC","^DIC",2006.912,2006.912,0,"DEL")
@
"SEC","^DIC",2006.912,2006.912,0,"LAYGO")
@
"SEC","^DIC",2006.912,2006.912,0,"RD")
@
"SEC","^DIC",2006.912,2006.912,0,"WR")
@
"SEC","^DIC",2006.913,2006.913,0,"AUDIT")
@
"SEC","^DIC",2006.913,2006.913,0,"DD")
@
"SEC","^DIC",2006.913,2006.913,0,"DEL")
@
"SEC","^DIC",2006.913,2006.913,0,"LAYGO")
@
"SEC","^DIC",2006.913,2006.913,0,"RD")
@
"SEC","^DIC",2006.913,2006.913,0,"WR")
@
"SEC","^DIC",2006.914,2006.914,0,"AUDIT")
@
"SEC","^DIC",2006.914,2006.914,0,"DD")
@
"SEC","^DIC",2006.914,2006.914,0,"DEL")
@
"SEC","^DIC",2006.914,2006.914,0,"LAYGO")
@
"SEC","^DIC",2006.914,2006.914,0,"RD")
@
"SEC","^DIC",2006.914,2006.914,0,"WR")
@
"SEC","^DIC",2006.915,2006.915,0,"AUDIT")
@
"SEC","^DIC",2006.915,2006.915,0,"DD")
@
"SEC","^DIC",2006.915,2006.915,0,"DEL")
@
"SEC","^DIC",2006.915,2006.915,0,"LAYGO")
@
"SEC","^DIC",2006.915,2006.915,0,"RD")
@
"SEC","^DIC",2006.915,2006.915,0,"WR")
@
"SEC","^DIC",2006.916,2006.916,0,"AUDIT")
@
"SEC","^DIC",2006.916,2006.916,0,"DD")
@
"SEC","^DIC",2006.916,2006.916,0,"DEL")
@
"SEC","^DIC",2006.916,2006.916,0,"LAYGO")
@
"SEC","^DIC",2006.916,2006.916,0,"RD")
@
"SEC","^DIC",2006.916,2006.916,0,"WR")
@
"SEC","^DIC",2006.917,2006.917,0,"AUDIT")
@
"SEC","^DIC",2006.917,2006.917,0,"DD")
@
"SEC","^DIC",2006.917,2006.917,0,"DEL")
@
"SEC","^DIC",2006.917,2006.917,0,"LAYGO")
@
"SEC","^DIC",2006.917,2006.917,0,"RD")
@
"SEC","^DIC",2006.917,2006.917,0,"WR")
@
"SEC","^DIC",2006.918,2006.918,0,"AUDIT")
@
"SEC","^DIC",2006.918,2006.918,0,"DD")
@
"SEC","^DIC",2006.918,2006.918,0,"DEL")
@
"SEC","^DIC",2006.918,2006.918,0,"LAYGO")
@
"SEC","^DIC",2006.918,2006.918,0,"RD")
@
"SEC","^DIC",2006.918,2006.918,0,"WR")
@
"SEC","^DIC",2006.9191,2006.9191,0,"AUDIT")
@
"SEC","^DIC",2006.9191,2006.9191,0,"DD")
@
"SEC","^DIC",2006.9191,2006.9191,0,"DEL")
@
"SEC","^DIC",2006.9191,2006.9191,0,"LAYGO")
@
"SEC","^DIC",2006.9191,2006.9191,0,"RD")
@
"SEC","^DIC",2006.9191,2006.9191,0,"WR")
@
"SEC","^DIC",2006.9192,2006.9192,0,"AUDIT")
@
"SEC","^DIC",2006.9192,2006.9192,0,"DD")
@
"SEC","^DIC",2006.9192,2006.9192,0,"DEL")
@
"SEC","^DIC",2006.9192,2006.9192,0,"LAYGO")
@
"SEC","^DIC",2006.9192,2006.9192,0,"RD")
@
"SEC","^DIC",2006.9192,2006.9192,0,"WR")
@
"SEC","^DIC",2006.9193,2006.9193,0,"AUDIT")
@
"SEC","^DIC",2006.9193,2006.9193,0,"DD")
@
"SEC","^DIC",2006.9193,2006.9193,0,"DEL")
@
"SEC","^DIC",2006.9193,2006.9193,0,"LAYGO")
@
"SEC","^DIC",2006.9193,2006.9193,0,"RD")
@
"SEC","^DIC",2006.9193,2006.9193,0,"WR")
@
"SEC","^DIC",2006.921,2006.921,0,"AUDIT")
@
"SEC","^DIC",2006.921,2006.921,0,"DD")
@
"SEC","^DIC",2006.921,2006.921,0,"DEL")
@
"SEC","^DIC",2006.921,2006.921,0,"LAYGO")
@
"SEC","^DIC",2006.921,2006.921,0,"RD")
@
"SEC","^DIC",2006.921,2006.921,0,"WR")
@
"SEC","^DIC",2006.922,2006.922,0,"AUDIT")
@
"SEC","^DIC",2006.922,2006.922,0,"DD")
@
"SEC","^DIC",2006.922,2006.922,0,"DEL")
@
"SEC","^DIC",2006.922,2006.922,0,"LAYGO")
@
"SEC","^DIC",2006.922,2006.922,0,"RD")
@
"SEC","^DIC",2006.922,2006.922,0,"WR")
@
"SEC","^DIC",2006.923,2006.923,0,"AUDIT")
@
"SEC","^DIC",2006.923,2006.923,0,"DD")
@
"SEC","^DIC",2006.923,2006.923,0,"DEL")
@
"SEC","^DIC",2006.923,2006.923,0,"LAYGO")
@
"SEC","^DIC",2006.923,2006.923,0,"RD")
@
"SEC","^DIC",2006.923,2006.923,0,"WR")
@
"SEC","^DIC",2006.924,2006.924,0,"AUDIT")
@
"SEC","^DIC",2006.924,2006.924,0,"DD")
@
"SEC","^DIC",2006.924,2006.924,0,"DEL")
@
"SEC","^DIC",2006.924,2006.924,0,"LAYGO")
@
"SEC","^DIC",2006.924,2006.924,0,"RD")
@
"SEC","^DIC",2006.924,2006.924,0,"WR")
@
"SEC","^DIC",2006.925,2006.925,0,"AUDIT")
@
"SEC","^DIC",2006.925,2006.925,0,"DD")
@
"SEC","^DIC",2006.925,2006.925,0,"DEL")
@
"SEC","^DIC",2006.925,2006.925,0,"LAYGO")
@
"SEC","^DIC",2006.925,2006.925,0,"RD")
@
"SEC","^DIC",2006.925,2006.925,0,"WR")
@
"SEC","^DIC",2006.926,2006.926,0,"AUDIT")
@
"SEC","^DIC",2006.926,2006.926,0,"DD")
@
"SEC","^DIC",2006.926,2006.926,0,"DEL")
@
"SEC","^DIC",2006.926,2006.926,0,"LAYGO")
@
"SEC","^DIC",2006.926,2006.926,0,"RD")
@
"SEC","^DIC",2006.926,2006.926,0,"WR")
@
"SEC","^DIC",2006.927,2006.927,0,"AUDIT")
@
"SEC","^DIC",2006.927,2006.927,0,"DD")
@
"SEC","^DIC",2006.927,2006.927,0,"DEL")
@
"SEC","^DIC",2006.927,2006.927,0,"LAYGO")
@
"SEC","^DIC",2006.927,2006.927,0,"RD")
@
"SEC","^DIC",2006.927,2006.927,0,"WR")
@
"SEC","^DIC",2006.928,2006.928,0,"AUDIT")
@
"SEC","^DIC",2006.928,2006.928,0,"DD")
@
"SEC","^DIC",2006.928,2006.928,0,"DEL")
@
"SEC","^DIC",2006.928,2006.928,0,"LAYGO")
@
"SEC","^DIC",2006.928,2006.928,0,"RD")
@
"SEC","^DIC",2006.928,2006.928,0,"WR")
@
"SEC","^DIC",2006.93,2006.93,0,"AUDIT")
@
"SEC","^DIC",2006.93,2006.93,0,"DD")
@
"SEC","^DIC",2006.93,2006.93,0,"DEL")
@
"SEC","^DIC",2006.93,2006.93,0,"LAYGO")
@
"SEC","^DIC",2006.93,2006.93,0,"RD")
@
"SEC","^DIC",2006.93,2006.93,0,"WR")
@
"SEC","^DIC",2006.931,2006.931,0,"AUDIT")
@
"SEC","^DIC",2006.931,2006.931,0,"DD")
@
"SEC","^DIC",2006.931,2006.931,0,"DEL")
@
"SEC","^DIC",2006.931,2006.931,0,"LAYGO")
@
"SEC","^DIC",2006.931,2006.931,0,"RD")
@
"SEC","^DIC",2006.931,2006.931,0,"WR")
@
"SEC","^DIC",2006.941,2006.941,0,"AUDIT")
@
"SEC","^DIC",2006.941,2006.941,0,"DD")
@
"SEC","^DIC",2006.941,2006.941,0,"DEL")
@
"SEC","^DIC",2006.941,2006.941,0,"LAYGO")
@
"SEC","^DIC",2006.941,2006.941,0,"RD")
@
"SEC","^DIC",2006.941,2006.941,0,"WR")
@
"SEC","^DIC",2006.9412,2006.9412,0,"AUDIT")
@
"SEC","^DIC",2006.9412,2006.9412,0,"DD")
@
"SEC","^DIC",2006.9412,2006.9412,0,"DEL")
@
"SEC","^DIC",2006.9412,2006.9412,0,"LAYGO")
@
"SEC","^DIC",2006.9412,2006.9412,0,"RD")
@
"SEC","^DIC",2006.9412,2006.9412,0,"WR")
@
"SEC","^DIC",2006.9413,2006.9413,0,"AUDIT")
@
"SEC","^DIC",2006.9413,2006.9413,0,"DD")
@
"SEC","^DIC",2006.9413,2006.9413,0,"DEL")
@
"SEC","^DIC",2006.9413,2006.9413,0,"LAYGO")
@
"SEC","^DIC",2006.9413,2006.9413,0,"RD")
@
"SEC","^DIC",2006.9413,2006.9413,0,"WR")
@
"SEC","^DIC",2006.9414,2006.9414,0,"AUDIT")
@
"SEC","^DIC",2006.9414,2006.9414,0,"DD")
@
"SEC","^DIC",2006.9414,2006.9414,0,"DEL")
@
"SEC","^DIC",2006.9414,2006.9414,0,"LAYGO")
@
"SEC","^DIC",2006.9414,2006.9414,0,"RD")
@
"SEC","^DIC",2006.9414,2006.9414,0,"WR")
@
"SEC","^DIC",2006.9421,2006.9421,0,"AUDIT")
@
"SEC","^DIC",2006.9421,2006.9421,0,"DD")
@
"SEC","^DIC",2006.9421,2006.9421,0,"DEL")
@
"SEC","^DIC",2006.9421,2006.9421,0,"LAYGO")
@
"SEC","^DIC",2006.9421,2006.9421,0,"RD")
@
"SEC","^DIC",2006.9421,2006.9421,0,"WR")
@
"SEC","^DIC",2006.9422,2006.9422,0,"AUDIT")
@
"SEC","^DIC",2006.9422,2006.9422,0,"DD")
@
"SEC","^DIC",2006.9422,2006.9422,0,"DEL")
@
"SEC","^DIC",2006.9422,2006.9422,0,"LAYGO")
@
"SEC","^DIC",2006.9422,2006.9422,0,"RD")
@
"SEC","^DIC",2006.9422,2006.9422,0,"WR")
@
"VER")
8.0^22.0
"^DD",2005,2005,45,0)
ORIGIN INDEX^S^V:VA;N:NON-VA;D:DOD;F:FEE;I:IHS;^40;6^Q
"^DD",2005,2005,45,3)
Select Origin Index.
"^DD",2005,2005,45,21,0)
^.001^2^2^3111115^^^^
"^DD",2005,2005,45,21,1,0)
This field indicates whether this image originated inside or outside of 
"^DD",2005,2005,45,21,2,0)
VA.
"^DD",2005,2005,45,"DT")
3111115
"^DD",2005.1,2005.1,45,0)
ORIGIN INDEX^S^V:VA;N:NON-VA;D:DOD;F:FEE;I:IHS;^40;6^Q
"^DD",2005.1,2005.1,45,3)
Select Origin Index.
"^DD",2005.1,2005.1,45,21,0)
^^1^1^3040519^
"^DD",2005.1,2005.1,45,21,1,0)
This field indicates whether this image originated inside or outside of the VA.
"^DD",2005.1,2005.1,45,"DT")
3120111
"^DD",2005.6,2005.6,0)
FIELD^^.05^7
"^DD",2005.6,2005.6,0,"DDA")
N
"^DD",2005.6,2005.6,0,"DT")
3111019
"^DD",2005.6,2005.6,0,"IX","B",2005.6,.01)

"^DD",2005.6,2005.6,0,"IX","C",2005.6,3)

"^DD",2005.6,2005.6,0,"NM","IMAGING PATIENT REFERENCE")

"^DD",2005.6,2005.6,0,"PT",2005.61,.99)

"^DD",2005.6,2005.6,0,"PT",2005.62,13)

"^DD",2005.6,2005.6,0,"VRPK")
MAG
"^DD",2005.6,2005.6,.01,0)
ENTERPRISE PATIENT ID^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?.E1C.E) X
"^DD",2005.6,2005.6,.01,1,0)
^.1
"^DD",2005.6,2005.6,.01,1,1,0)
2005.6^B
"^DD",2005.6,2005.6,.01,1,1,1)
S ^MAGV(2005.6,"B",$E(X,1,30),DA)=""
"^DD",2005.6,2005.6,.01,1,1,2)
K ^MAGV(2005.6,"B",$E(X,1,30),DA)
"^DD",2005.6,2005.6,.01,1,1,"%D",0)
^.101^1^1^3100421^^^
"^DD",2005.6,2005.6,.01,1,1,"%D",1,0)
Index on Patient Reference.
"^DD",2005.6,2005.6,.01,3)
Answer must be 1-30 characters in length.
"^DD",2005.6,2005.6,.01,21,0)
^.001^3^3^3110728^^^^
"^DD",2005.6,2005.6,.01,21,1,0)
This is the patient's unique internal identifier
"^DD",2005.6,2005.6,.01,21,2,0)
designated by the issuer, as identified by the ASSIGNING ENTITY (#2) field.
"^DD",2005.6,2005.6,.01,21,3,0)
If that field is blank, this is the patient's DFN.
"^DD",2005.6,2005.6,.01,"DT")
3090821
"^DD",2005.6,2005.6,.02,0)
ASSIGNING AUTHORITY^S^V:DEPT OF VETERANS AFFAIRS;I:INDIAN HEALTH SERVICE;D:DEPT OF DEFENSE;^0;2^Q
"^DD",2005.6,2005.6,.02,3)
Enter a code corresponding to the issuer of the identifier in the ENTERPRISE PATIENT ID Field (#.01).
"^DD",2005.6,2005.6,.02,21,0)
^.001^2^2^3111130^^^^
"^DD",2005.6,2005.6,.02,21,1,0)
This field indicates who issued the identifier in field #.01 (ENTERPRISE 
"^DD",2005.6,2005.6,.02,21,2,0)
PATIENT ID).  If this field is blank, it is assumed to be the VA.
"^DD",2005.6,2005.6,.02,"DT")
3110928
"^DD",2005.6,2005.6,.03,0)
ID TYPE^S^M:MEDICAL RECORD NUMBER;I:INTEGRATION CONTROL NUMBER;D:DFN;^0;3^Q
"^DD",2005.6,2005.6,.03,3)
Enter a code corresponding to the kind of patient identifier that is contained in the ENTERPRISE PATIENT ID Field (#.01).
"^DD",2005.6,2005.6,.03,21,0)
^.001^2^2^3100419^^^
"^DD",2005.6,2005.6,.03,21,1,0)
This field indicates what kind of patient identifier is represented by 
"^DD",2005.6,2005.6,.03,21,2,0)
the value in field #.01.
"^DD",2005.6,2005.6,.03,"DT")
3090918
"^DD",2005.6,2005.6,.05,0)
SERVICE INSTITUTION REFERENCE^P2005.8^MAGV(2005.8,^0;8^Q
"^DD",2005.6,2005.6,.05,3)
Enter the identifier of the institution at which the patient imaging service record was created.
"^DD",2005.6,2005.6,.05,21,0)
^.001^2^2^3111022^^^
"^DD",2005.6,2005.6,.05,21,1,0)
This is the institution within VA, MHS or elsewhere at which the
"^DD",2005.6,2005.6,.05,21,2,0)
patient imaging service record was created.
"^DD",2005.6,2005.6,.05,"DT")
3111022
"^DD",2005.6,2005.6,1,0)
ARTIFACT ON FILE^S^0:NOT ON FILE;1:AOF;^0;4^Q
"^DD",2005.6,2005.6,1,3)
Enter a code indicating whether an artifact is on file (AOF).
"^DD",2005.6,2005.6,1,21,0)
^.001^3^3^3100505^^^^
"^DD",2005.6,2005.6,1,21,1,0)
This field is a flag that records if an artifact is on file or not.
"^DD",2005.6,2005.6,1,21,2,0)
Artifact On File means that at least one Object is already stored
"^DD",2005.6,2005.6,1,21,3,0)
on disk. An Object can be an image, an abstract or a text file.
"^DD",2005.6,2005.6,1,"DT")
3100505
"^DD",2005.6,2005.6,2,0)
STATUS^S^A:ACCESSIBLE;I:INACCESSIBLE;^0;5^Q
"^DD",2005.6,2005.6,2,3)
Enter status of patient reference.
"^DD",2005.6,2005.6,2,21,0)
^.001^8^8^3111101^^^^
"^DD",2005.6,2005.6,2,21,1,0)
This field indicates whether the patient reference is ACCESSIBLE or INACCESSIBLE.
"^DD",2005.6,2005.6,2,21,2,0)
 
"^DD",2005.6,2005.6,2,21,3,0)
ACCESSIBLE means that the patient reference can be retrieved by imaging
"^DD",2005.6,2005.6,2,21,4,0)
database methods and may have "child" procedure references that are
"^DD",2005.6,2005.6,2,21,5,0)
cross referenced to this patient reference.
"^DD",2005.6,2005.6,2,21,6,0)
 
"^DD",2005.6,2005.6,2,21,7,0)
INACCESSIBLE means that the patient reference will not be retrieved by imaging
"^DD",2005.6,2005.6,2,21,8,0)
database methods and will not have "child" procedure references.
"^DD",2005.6,2005.6,2,"DT")
3111101
"^DD",2005.6,2005.6,3,0)
PATIENT FILE REFERENCE^P2'^DPT(^0;7^Q
"^DD",2005.6,2005.6,3,1,0)
^.1
"^DD",2005.6,2005.6,3,1,1,0)
2005.6^C
"^DD",2005.6,2005.6,3,1,1,1)
S ^MAGV(2005.6,"C",$E(X,1,30),DA)=""
"^DD",2005.6,2005.6,3,1,1,2)
K ^MAGV(2005.6,"C",$E(X,1,30),DA)
"^DD",2005.6,2005.6,3,1,1,"%D",0)
^^1^1^3110903^
"^DD",2005.6,2005.6,3,1,1,"%D",1,0)
This is a cross-reference on the PATIENT FILE REFERENCE field.
"^DD",2005.6,2005.6,3,1,1,"DT")
3110903
"^DD",2005.6,2005.6,3,3)
Select a VistA patient.
"^DD",2005.6,2005.6,3,21,0)
^.001^2^2^3111101^^^^
"^DD",2005.6,2005.6,3,21,1,0)
If the ENTERPRISE PATIENT ID (#.01) field is a DFN then this field will point to the
"^DD",2005.6,2005.6,3,21,2,0)
same patient entry in the PATIENT (#2) file.
"^DD",2005.6,2005.6,3,"DT")
3110903
"^DD",2005.61,2005.61,0)
FIELD^^.05^9
"^DD",2005.61,2005.61,0,"DDA")
N
"^DD",2005.61,2005.61,0,"DT")
3111019
"^DD",2005.61,2005.61,0,"IX","B",2005.61,.01)

"^DD",2005.61,2005.61,0,"IX","C",2005.61,.99)

"^DD",2005.61,2005.61,0,"NM","IMAGING PROCEDURE REFERENCE")

"^DD",2005.61,2005.61,0,"PT",2005.62,11)

"^DD",2005.61,2005.61,0,"VRPK")
MAG
"^DD",2005.61,2005.61,.01,0)
ACCESSION NUMBER^RF^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",2005.61,2005.61,.01,1,0)
^.1
"^DD",2005.61,2005.61,.01,1,1,0)
2005.61^B
"^DD",2005.61,2005.61,.01,1,1,1)
S ^MAGV(2005.61,"B",$E(X,1,64),DA)=""
"^DD",2005.61,2005.61,.01,1,1,2)
K ^MAGV(2005.61,"B",$E(X,1,64),DA)
"^DD",2005.61,2005.61,.01,1,1,"%D",0)
^.101^1^1^3100421^^
"^DD",2005.61,2005.61,.01,1,1,"%D",1,0)
Index of Procedure references.
"^DD",2005.61,2005.61,.01,3)
Answer must be 1-64 characters in length.
"^DD",2005.61,2005.61,.01,21,0)
^.001^1^1^3111101^^^^
"^DD",2005.61,2005.61,.01,21,1,0)
The ACCESSION NUMBER is the identifier assigned to the procedure instance.  The identifier is usually the procedure accession number.
"^DD",2005.61,2005.61,.01,"DT")
3110914
"^DD",2005.61,2005.61,.03,0)
PROCEDURE TYPE^S^RAD:Radiology;CON:Consult;LAB:Laboratory;^0;3^Q
"^DD",2005.61,2005.61,.03,3)
Enter a code that identifies the department with which the procedure is associated.
"^DD",2005.61,2005.61,.03,21,0)
^.001^1^1^3111101^^^^
"^DD",2005.61,2005.61,.03,21,1,0)
This field indicates what department the procedure is associated with.
"^DD",2005.61,2005.61,.03,"DT")
3111101
"^DD",2005.61,2005.61,.04,0)
ASSIGNING AUTHORITY^S^V:US DEPT OF VETERAN AFFAIRS;I:US INDIAN HEALTH SERVICE;D:US DEPT OF DEFENSE;^0;7^Q
"^DD",2005.61,2005.61,.04,3)
Enter the authority that assigned the Accession Number.
"^DD",2005.61,2005.61,.04,21,0)
^.001^2^2^3111101^^^^
"^DD",2005.61,2005.61,.04,21,1,0)
This field indicates who issued the identifier in field #.01 (ACCESSION
"^DD",2005.61,2005.61,.04,21,2,0)
NUMBER).
"^DD",2005.61,2005.61,.04,"DT")
3100716
"^DD",2005.61,2005.61,.05,0)
SERVICE INSTITUTION REFERENCE^P2005.8^MAGV(2005.8,^0;8^Q
"^DD",2005.61,2005.61,.05,3)
Enter the institution at which the imaging procedure record was created.
"^DD",2005.61,2005.61,.05,21,0)
^.001^2^2^3111022^^
"^DD",2005.61,2005.61,.05,21,1,0)
This is the institution within VA, MHS or elsewhere at which the imaging 
"^DD",2005.61,2005.61,.05,21,2,0)
procedure record was created.
"^DD",2005.61,2005.61,.05,"DT")
3111022
"^DD",2005.61,2005.61,.99,0)
PATIENT REFERENCE^P2005.6^MAGV(2005.6,^6;1^Q
"^DD",2005.61,2005.61,.99,.1)
PATIENT
"^DD",2005.61,2005.61,.99,1,0)
^.1
"^DD",2005.61,2005.61,.99,1,1,0)
2005.61^C
"^DD",2005.61,2005.61,.99,1,1,1)
S ^MAGV(2005.61,"C",$E(X,1,30),DA)=""
"^DD",2005.61,2005.61,.99,1,1,2)
K ^MAGV(2005.61,"C",$E(X,1,30),DA)
"^DD",2005.61,2005.61,.99,1,1,"%D",0)
^.101^1^1^3100421^^
"^DD",2005.61,2005.61,.99,1,1,"%D",1,0)
This cross-reference indexes the procedure reference by patient reference.
"^DD",2005.61,2005.61,.99,1,1,"DT")
3100315
"^DD",2005.61,2005.61,.99,3)
Enter the patient with whom this procedure reference is associated.
"^DD",2005.61,2005.61,.99,21,0)
^^4^4^3100428^^
"^DD",2005.61,2005.61,.99,21,1,0)
This is the patient to whose record the procedure is to be attached.
"^DD",2005.61,2005.61,.99,21,2,0)
Parent IEN is used on all levels of the hierarchy 
"^DD",2005.61,2005.61,.99,21,3,0)
(Patient/Procedure/Study/Series/SOP Instance) to indicate the 
"^DD",2005.61,2005.61,.99,21,4,0)
immediate higher level in the hierarchy.
"^DD",2005.61,2005.61,.99,"DT")
3110823
"^DD",2005.61,2005.61,1,0)
PROCEDURE DATE/TIME^D^^0;4^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2005.61,2005.61,1,3)
Enter the date and time when the procedure being referenced was executed.
"^DD",2005.61,2005.61,1,21,0)
^.001^6^6^3110904^^^^
"^DD",2005.61,2005.61,1,21,1,0)
This field stores the Imaging Service Request Issue Date/Time if present.
"^DD",2005.61,2005.61,1,21,2,0)
Otherwise, this field stores the Study Date/Time if present.
"^DD",2005.61,2005.61,1,21,3,0)
 
"^DD",2005.61,2005.61,1,21,4,0)
DICOM elements: 
"^DD",2005.61,2005.61,1,21,5,0)
Imaging Service Request Issue Date/Time (0040,2004/0040,2005) 
"^DD",2005.61,2005.61,1,21,6,0)
Study Date/Time (0008,0020/0008,0030)
"^DD",2005.61,2005.61,1,"DT")
3100428
"^DD",2005.61,2005.61,2,0)
ARTIFACT ON FILE^S^0:NOT ON FILE;1:AOF;^0;6^Q
"^DD",2005.61,2005.61,2,3)
Enter a code indicating whether the artifact is on file (AOF).
"^DD",2005.61,2005.61,2,21,0)
^.001^3^3^3111101^^
"^DD",2005.61,2005.61,2,21,1,0)
This field is a flag that records if an artifact is on file or not.
"^DD",2005.61,2005.61,2,21,2,0)
Artifact On File means that at least one Object is already stored
"^DD",2005.61,2005.61,2,21,3,0)
on disk. An Object can be an image, an abstract or a text file.
"^DD",2005.61,2005.61,2,"DT")
3100428
"^DD",2005.61,2005.61,3,0)
STATUS^S^A:ACCESSIBLE;I:INACCESSIBLE;^0;5^Q
"^DD",2005.61,2005.61,3,3)
Enter status of procedure reference.
"^DD",2005.61,2005.61,3,21,0)
^.001^10^10^3111101^^^^
"^DD",2005.61,2005.61,3,21,1,0)
This field indicates whether the procedure reference is ACCESSIBLE or 
"^DD",2005.61,2005.61,3,21,2,0)
INACCESSIBLE.
"^DD",2005.61,2005.61,3,21,3,0)
 
"^DD",2005.61,2005.61,3,21,4,0)
ACCESSIBLE means that the procedure reference can be retrieved by imaging 
"^DD",2005.61,2005.61,3,21,5,0)
database methods and may have "child" study references that are cross 
"^DD",2005.61,2005.61,3,21,6,0)
referenced to this procedure reference.
"^DD",2005.61,2005.61,3,21,7,0)
 
"^DD",2005.61,2005.61,3,21,8,0)
INACCESSIBLE means that the procedure reference will not be retrieved by 
"^DD",2005.61,2005.61,3,21,9,0)
imaging database methods and will not have ACCESSIBLE "child"
"^DD",2005.61,2005.61,3,21,10,0)
procedure references.
"^DD",2005.61,2005.61,3,"DT")
3110831
"^DD",2005.61,2005.61,40,0)
PACKAGE INDEX^S^RAD:RADIOLOGY;LAB:LABORATORY;MED:MEDICINE;NOTE:TIU NOTE;CP:CLINICAL PROCEDURES;SUR:SURGERY;PHOTOID:PHOTO ID;NONE:NONE;CONS:CONSULTS;^40;1^Q
"^DD",2005.61,2005.61,40,3)
Enter a code identifying the VistA package with which this procedure reference is associated.
"^DD",2005.61,2005.61,40,21,0)
^.001^1^1^3100419^^^
"^DD",2005.61,2005.61,40,21,1,0)
This is the VistA package with which the procedure is associated.
"^DD",2005.61,2005.61,40,"DT")
3090917
"^DD",2005.62,2005.62,0)
FIELD^^.02^19
"^DD",2005.62,2005.62,0,"DDA")
N
"^DD",2005.62,2005.62,0,"DT")
3111115
"^DD",2005.62,2005.62,0,"IX","B",2005.62,.01)

"^DD",2005.62,2005.62,0,"IX","C",2005.62,11)

"^DD",2005.62,2005.62,0,"IX","D",2005.62,.02)

"^DD",2005.62,2005.62,0,"IX","E",2005.62,4)

"^DD",2005.62,2005.62,0,"IX","G",2005.62,1)

"^DD",2005.62,2005.62,0,"IX","L",2005.62,13)

"^DD",2005.62,2005.62,0,"NM","IMAGE STUDY")

"^DD",2005.62,2005.62,0,"PT",2005.63,11)

"^DD",2005.62,2005.62,0,"VRPK")
MAG
"^DD",2005.62,2005.62,.01,0)
STUDY INSTANCE UID^RF^^0;1^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",2005.62,2005.62,.01,1,0)
^.1
"^DD",2005.62,2005.62,.01,1,1,0)
2005.62^B
"^DD",2005.62,2005.62,.01,1,1,1)
S ^MAGV(2005.62,"B",$E(X,1,64),DA)=""
"^DD",2005.62,2005.62,.01,1,1,2)
K ^MAGV(2005.62,"B",$E(X,1,64),DA)
"^DD",2005.62,2005.62,.01,3)
Answer must be 1-64 characters in length.
"^DD",2005.62,2005.62,.01,21,0)
^.001^2^2^3110903^^^^
"^DD",2005.62,2005.62,.01,21,1,0)
This is the Study Record ID - Primary Identifier.
"^DD",2005.62,2005.62,.01,21,2,0)
DICOM Tag: Study Instance UID  (0020,000D).
"^DD",2005.62,2005.62,.01,"DT")
3090910
"^DD",2005.62,2005.62,.02,0)
ACCESSION NUMBER^F^^0;4^K:$L(X)>16!($L(X)<1) X
"^DD",2005.62,2005.62,.02,1,0)
^.1
"^DD",2005.62,2005.62,.02,1,1,0)
2005.62^D
"^DD",2005.62,2005.62,.02,1,1,1)
S ^MAGV(2005.62,"D",$E(X,1,30),DA)=""
"^DD",2005.62,2005.62,.02,1,1,2)
K ^MAGV(2005.62,"D",$E(X,1,30),DA)
"^DD",2005.62,2005.62,.02,3)
Answer must be 1-16 characters in length.
"^DD",2005.62,2005.62,.02,21,0)
^^1^1^3110914^
"^DD",2005.62,2005.62,.02,21,1,0)
This is the accession number related to the study.
"^DD",2005.62,2005.62,.02,"DT")
3110914
"^DD",2005.62,2005.62,1,0)
ORIGINAL STUDY INSTANCE UID^F^^0;2^K:$L(X)>96!($L(X)<1) X
"^DD",2005.62,2005.62,1,1,0)
^.1
"^DD",2005.62,2005.62,1,1,1,0)
2005.62^G
"^DD",2005.62,2005.62,1,1,1,1)
S ^MAGV(2005.62,"G",$E(X,1,96),DA)=""
"^DD",2005.62,2005.62,1,1,1,2)
K ^MAGV(2005.62,"G",$E(X,1,96),DA)
"^DD",2005.62,2005.62,1,3)
Answer must be 1-96 characters in length.
"^DD",2005.62,2005.62,1,21,0)
^.001^1^1^3110903^^^^
"^DD",2005.62,2005.62,1,21,1,0)
This is the old study record ID. DICOM Tag: (0020,000D).
"^DD",2005.62,2005.62,1,"DT")
3110808
"^DD",2005.62,2005.62,2,0)
STUDY ID^F^^0;3^K:$L(X)>16!($L(X)<1) X
"^DD",2005.62,2005.62,2,1,0)
^.1^^0
"^DD",2005.62,2005.62,2,3)
Answer must be 1-16 characters in length.
"^DD",2005.62,2005.62,2,21,0)
^.001^2^2^3110903^^^^
"^DD",2005.62,2005.62,2,21,1,0)
This is the short case number Study ID given by the ordering application. 
"^DD",2005.62,2005.62,2,21,2,0)
DICOM Tag: Study ID  (0020,0010).
"^DD",2005.62,2005.62,2,"DT")
3111117
"^DD",2005.62,2005.62,3,0)
MODALITIES IN STUDY^F^^1;1^K:$L(X)>50!($L(X)<1) X
"^DD",2005.62,2005.62,3,1,0)
^.1^^0
"^DD",2005.62,2005.62,3,3)
Answer must be 1-50 characters in length.
"^DD",2005.62,2005.62,3,21,0)
^.001^3^3^3101115^^^^
"^DD",2005.62,2005.62,3,21,1,0)
This is the list of modalities within a Study separated by "\".
"^DD",2005.62,2005.62,3,21,2,0)
e.g. CR\RF = Computed Radiography and Radio Fluoroscopy.
"^DD",2005.62,2005.62,3,21,3,0)
DICOM Tag: Modalities in Study   (0008,0061).
"^DD",2005.62,2005.62,3,"DT")
3110830
"^DD",2005.62,2005.62,4,0)
STUDY DATE/TIME^D^^2;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",2005.62,2005.62,4,1,0)
^.1
"^DD",2005.62,2005.62,4,1,1,0)
2005.62^E
"^DD",2005.62,2005.62,4,1,1,1)
S ^MAGV(2005.62,"E",$E(X,1,30),DA)=""
"^DD",2005.62,2005.62,4,1,1,2)
K ^MAGV(2005.62,"E",$E(X,1,30),DA)
"^DD",2005.62,2005.62,4,1,1,"%D",0)
^^1^1^3120116^
"^DD",2005.62,2005.62,4,1,1,"%D",1,0)
This is the date/time cross-reference from the STUDY DATE/TIME field (#2005.62,4).
"^DD",2005.62,2005.62,4,1,1,"DT")
3120116
"^DD",2005.62,2005.62,4,3)
Enter date/time of study.
"^DD",2005.62,2005.62,4,21,0)
^.001^2^2^3110926^^^^
"^DD",2005.62,2005.62,4,21,1,0)
This is the date/time when a study acquisition was started by a modality device.
"^DD",2005.62,2005.62,4,21,2,0)
DICOM Tag: Study Date-Time   (0008,0020) + (0008,0030).
"^DD",2005.62,2005.62,4,"DT")
3120116
"^DD",2005.62,2005.62,5,0)
LAST UPDATE DATE/TIME^RD^^2;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2005.62,2005.62,5,3)
Enter date and time.
"^DD",2005.62,2005.62,5,21,0)
^.001^1^1^3100922^^^^
"^DD",2005.62,2005.62,5,21,1,0)
This is the date/time of the last record update.
"^DD",2005.62,2005.62,5,"DT")
3110829
"^DD",2005.62,2005.62,6,0)
ORIGIN INDEX^RS^V:VA;D:DOD;F:FEE;N:NON-VA;I:IHS;^3;2^Q
"^DD",2005.62,2005.62,6,1,0)
^.1^^0
"^DD",2005.62,2005.62,6,3)
Enter a code identifying where the image came from.
"^DD",2005.62,2005.62,6,21,0)
^.001^1^1^3100922^^^^
"^DD",2005.62,2005.62,6,21,1,0)
This field indicates where the image originated from.
"^DD",2005.62,2005.62,6,"DT")
3111115
"^DD",2005.62,2005.62,7,0)
NUMBER OF SERIES^NJ5,0^^4;1^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2005.62,2005.62,7,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2005.62,2005.62,7,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.62,2005.62,7,21,1,0)
This is the number of Series attached to the Study.
"^DD",2005.62,2005.62,7,21,2,0)
DICOM Tag: Number of Study related Series   (0020,1206).
"^DD",2005.62,2005.62,7,"DT")
3100428
"^DD",2005.62,2005.62,11,0)
PROCEDURE REFERENCE^P2005.61'^MAGV(2005.61,^6;1^Q
"^DD",2005.62,2005.62,11,.1)
PROCEDURE
"^DD",2005.62,2005.62,11,1,0)
^.1
"^DD",2005.62,2005.62,11,1,1,0)
2005.62^C
"^DD",2005.62,2005.62,11,1,1,1)
S ^MAGV(2005.62,"C",$E(X,1,30),DA)=""
"^DD",2005.62,2005.62,11,1,1,2)
K ^MAGV(2005.62,"C",$E(X,1,30),DA)
"^DD",2005.62,2005.62,11,3)
Enter the PROCEDURE with which the study is associated.
"^DD",2005.62,2005.62,11,21,0)
^^4^4^3100504^
"^DD",2005.62,2005.62,11,21,1,0)
This field points to the parent node in the Procedure Reference file.
"^DD",2005.62,2005.62,11,21,2,0)
Parent IEN is used on all levels of the hierarchy 
"^DD",2005.62,2005.62,11,21,3,0)
(Patient/Procedure/Study/Series/SOP Instance) to indicate the 
"^DD",2005.62,2005.62,11,21,4,0)
immediate higher level in the hierarchy.
"^DD",2005.62,2005.62,11,"DT")
3110823
"^DD",2005.62,2005.62,12,0)
ARTIFACT ON FILE^S^0:NOT ON FILE;1:AOF;^6;2^Q
"^DD",2005.62,2005.62,12,3)
Enter a code indicating whether or not an artifact is on file for this study.
"^DD",2005.62,2005.62,12,21,0)
^^3^3^3100428^^
"^DD",2005.62,2005.62,12,21,1,0)
This field is a flag that records whether an artifact is on file or not.
"^DD",2005.62,2005.62,12,21,2,0)
Artifact On File (AOF) means that at least one Object is already stored
"^DD",2005.62,2005.62,12,21,3,0)
on disk. An Object can be an image, an abstract or a text file.
"^DD",2005.62,2005.62,12,"DT")
3100428
"^DD",2005.62,2005.62,13,0)
PATIENT REFERENCE^P2005.6^MAGV(2005.6,^6;3^Q
"^DD",2005.62,2005.62,13,1,0)
^.1
"^DD",2005.62,2005.62,13,1,1,0)
2005.62^L
"^DD",2005.62,2005.62,13,1,1,1)
S ^MAGV(2005.62,"L",$E(X,1,30),DA)=""
"^DD",2005.62,2005.62,13,1,1,2)
K ^MAGV(2005.62,"L",$E(X,1,30),DA)
"^DD",2005.62,2005.62,13,3)
Select the patient associated with the study.
"^DD",2005.62,2005.62,13,21,0)
^^1^1^3100427^^
"^DD",2005.62,2005.62,13,21,1,0)
This is the patient associated with the study.
"^DD",2005.62,2005.62,13,"DT")
3101116
"^DD",2005.62,2005.62,14,0)
DESCRIPTION^F^^3;1^K:$L(X)>64!($L(X)<1) X
"^DD",2005.62,2005.62,14,3)
Answer must be 1-64 characters in length.
"^DD",2005.62,2005.62,14,21,0)
^.001^2^2^3101117^^^^
"^DD",2005.62,2005.62,14,21,1,0)
This field contains the description of the study. 
"^DD",2005.62,2005.62,14,21,2,0)
DICOM Tag: Study Description  (0008,1030).
"^DD",2005.62,2005.62,14,"DT")
3091223
"^DD",2005.62,2005.62,15,0)
REASON FOR STUDY^F^^3;3^K:$L(X)>64!($L(X)<1) X
"^DD",2005.62,2005.62,15,3)
Answer must be 1-64 characters in length.
"^DD",2005.62,2005.62,15,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.62,2005.62,15,21,1,0)
This field contains the reason for the requested study.
"^DD",2005.62,2005.62,15,21,2,0)
DICOM Tag: Reason for the Requested Procedure    (0040,1002).
"^DD",2005.62,2005.62,15,"DT")
3091223
"^DD",2005.62,2005.62,16,0)
ACQUISITION STATUS^S^A:ACQUIRING;C:COMPLETE;^5;1^Q
"^DD",2005.62,2005.62,16,3)
Enter acquisition status.
"^DD",2005.62,2005.62,16,21,0)
^.001^3^3^3110907^^
"^DD",2005.62,2005.62,16,21,1,0)
This field denotes the event of study acquisition completion.
"^DD",2005.62,2005.62,16,21,2,0)
  Acquiring means Still in the Process of active acquiring.
"^DD",2005.62,2005.62,16,21,3,0)
  Complete means complete acquisition of a complete study.
"^DD",2005.62,2005.62,16,"DT")
3110907
"^DD",2005.62,2005.62,17,0)
STATUS^S^A:ACCESSIBLE;I:INACCESSIBLE;^5;2^Q
"^DD",2005.62,2005.62,17,1,0)
^.1^^0
"^DD",2005.62,2005.62,17,3)
Enter study status.
"^DD",2005.62,2005.62,17,21,0)
^.001^6^6^3110909^^^^
"^DD",2005.62,2005.62,17,21,1,0)
This field indicates whether the study is ACCESSIBLE or INACCESSIBLE.
"^DD",2005.62,2005.62,17,21,2,0)
 
"^DD",2005.62,2005.62,17,21,3,0)
ACCESSIBLE means that the study can be retrieved by Imaging database methods.
"^DD",2005.62,2005.62,17,21,4,0)
 
"^DD",2005.62,2005.62,17,21,5,0)
INACCESSIBLE means that the study will not be retrieved by Imaging database
"^DD",2005.62,2005.62,17,21,6,0)
methods.
"^DD",2005.62,2005.62,17,"DT")
3120120
"^DD",2005.62,2005.62,19,0)
LAST ACCESS DATE/TIME^D^^2;3^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",2005.62,2005.62,19,1,0)
^.1^^0
"^DD",2005.62,2005.62,19,3)
Enter date and time of last access.
"^DD",2005.62,2005.62,19,21,0)
^.001^1^1^3100922^^
"^DD",2005.62,2005.62,19,21,1,0)
This field indicates when a Study was last accessed.
"^DD",2005.62,2005.62,19,"DT")
3110903
"^DD",2005.62,2005.62,20,0)
NUMBER OF SOP INSTANCES^NJ5,0^^4;2^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2005.62,2005.62,20,3)
Type a Number between 0 and 99999, 0 Decimal Digits.
"^DD",2005.62,2005.62,20,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.62,2005.62,20,21,1,0)
This field indicates the number of associated SOP Instances.
"^DD",2005.62,2005.62,20,21,2,0)
DICOM Tag: Number of Study related  Instances   (0020,1208).
"^DD",2005.62,2005.62,20,"DT")
3100527
"^DD",2005.62,2005.62,21,0)
PRIORITY^S^S:STAT;H:HIGH;R:ROUTINE;L:LOW;^6;4^Q
"^DD",2005.62,2005.62,21,3)
Enter a code corresponding to the priority of the study.
"^DD",2005.62,2005.62,21,21,0)
^.001^4^4^3100922^^^^
"^DD",2005.62,2005.62,21,21,1,0)
This field denotes the requested procedure priority.
"^DD",2005.62,2005.62,21,21,2,0)
  STAT means Life Threatening condition; Do immediately even if one has to
"^DD",2005.62,2005.62,21,21,3,0)
drop others with High Priority. 
"^DD",2005.62,2005.62,21,21,4,0)
DICOM Tag: Requested Procedure Priority  (0040,1003).
"^DD",2005.62,2005.62,21,"DT")
3100504
"^DD",2005.63,2005.63,0)
FIELD^^31^25
"^DD",2005.63,2005.63,0,"DDA")
N
"^DD",2005.63,2005.63,0,"DT")
3120208
"^DD",2005.63,2005.63,0,"IX","ATIU",2005.63,27)

"^DD",2005.63,2005.63,0,"IX","B",2005.63,.01)

"^DD",2005.63,2005.63,0,"IX","C",2005.63,11)

"^DD",2005.63,2005.63,0,"IX","D",2005.63,13)

"^DD",2005.63,2005.63,0,"IX","F",2005.63,15)

"^DD",2005.63,2005.63,0,"IX","G",2005.63,1)

"^DD",2005.63,2005.63,0,"NM","IMAGE SERIES")

"^DD",2005.63,2005.63,0,"PT",2005.64,11)

"^DD",2005.63,2005.63,0,"VRPK")
MAG
"^DD",2005.63,2005.63,.01,0)
SERIES INSTANCE UID^RF^^0;1^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",2005.63,2005.63,.01,1,0)
^.1
"^DD",2005.63,2005.63,.01,1,1,0)
2005.63^B
"^DD",2005.63,2005.63,.01,1,1,1)
S ^MAGV(2005.63,"B",$E(X,1,64),DA)=""
"^DD",2005.63,2005.63,.01,1,1,2)
K ^MAGV(2005.63,"B",$E(X,1,64),DA)
"^DD",2005.63,2005.63,.01,3)
Answer must be 1-64 characters in length.
"^DD",2005.63,2005.63,.01,21,0)
^.001^2^2^3110904^^^^
"^DD",2005.63,2005.63,.01,21,1,0)
This is the series record ID. 
"^DD",2005.63,2005.63,.01,21,2,0)
DICOM Tag: Series Instance UID (0020,000E).
"^DD",2005.63,2005.63,.01,"DT")
3090909
"^DD",2005.63,2005.63,1,0)
ORIGINAL SERIES UID^F^^0;2^K:$L(X)>96!($L(X)<1) X
"^DD",2005.63,2005.63,1,1,0)
^.1
"^DD",2005.63,2005.63,1,1,1,0)
2005.63^G
"^DD",2005.63,2005.63,1,1,1,1)
S ^MAGV(2005.63,"G",$E(X,1,96),DA)=""
"^DD",2005.63,2005.63,1,1,1,2)
K ^MAGV(2005.63,"G",$E(X,1,96),DA)
"^DD",2005.63,2005.63,1,1,1,"%D",0)
^.101^1^1^3110808^^^
"^DD",2005.63,2005.63,1,1,1,"%D",1,0)
This is a cross reference on the ORIGINAL SERIES UID field (#1).
"^DD",2005.63,2005.63,1,1,1,"DT")
3101116
"^DD",2005.63,2005.63,1,3)
Answer must be 1-96 characters in length.
"^DD",2005.63,2005.63,1,21,0)
^.001^1^1^3110728^^^^
"^DD",2005.63,2005.63,1,21,1,0)
This is the old series record ID.
"^DD",2005.63,2005.63,1,"DT")
3110126
"^DD",2005.63,2005.63,2,0)
SERIES NUMBER^NJ12,0^^0;3^K:+X'=X!(X>999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2005.63,2005.63,2,1,0)
^.1^^0
"^DD",2005.63,2005.63,2,3)
Type a number between 0 and 999999999999, 0 decimal digits.
"^DD",2005.63,2005.63,2,21,0)
^.001^2^2^3110902^^^^
"^DD",2005.63,2005.63,2,21,1,0)
This is the series number. 
"^DD",2005.63,2005.63,2,21,2,0)
DICOM Tag: Series Number  (0020,0011).
"^DD",2005.63,2005.63,2,"DT")
3110802
"^DD",2005.63,2005.63,3,0)
MODALITY^F^^1;1^K:$L(X)>12!($L(X)<1) X
"^DD",2005.63,2005.63,3,3)
Answer must be 1-12 characters in length.
"^DD",2005.63,2005.63,3,21,0)
^.001^2^2^3101115^^^^
"^DD",2005.63,2005.63,3,21,1,0)
This is the acquisition device's DICOM modality code.
"^DD",2005.63,2005.63,3,21,2,0)
DICOM Tag: Modality   (0008,0060).
"^DD",2005.63,2005.63,3,"DT")
3101115
"^DD",2005.63,2005.63,4,0)
CALLING AE TITLE^F^^2;1^K:$L(X)>16!($L(X)<1) X
"^DD",2005.63,2005.63,4,3)
Answer must be 1-16 characters in length.
"^DD",2005.63,2005.63,4,21,0)
^.001^1^1^3100922^^^^
"^DD",2005.63,2005.63,4,21,1,0)
This is the sender's C-store SCU DICOM AE title.
"^DD",2005.63,2005.63,4,"DT")
3110802
"^DD",2005.63,2005.63,5,0)
LAST UPDATE DATE/TIME^D^^3;1^S %DT="ET" D ^%DT S X=Y K:X<1 X
"^DD",2005.63,2005.63,5,3)
Enter date and time of last update.
"^DD",2005.63,2005.63,5,21,0)
^.001^1^1^3100511^^^^
"^DD",2005.63,2005.63,5,21,1,0)
This is the date/time of the last update of this record.
"^DD",2005.63,2005.63,5,"DT")
3110829
"^DD",2005.63,2005.63,6,0)
RETRIEVE AE TITLE^F^^2;2^K:$L(X)>16!($L(X)<1) X
"^DD",2005.63,2005.63,6,3)
Answer must be 1-16 characters in length.
"^DD",2005.63,2005.63,6,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.63,2005.63,6,21,1,0)
This indicates the AE this series can be retrieved from.
"^DD",2005.63,2005.63,6,21,2,0)
DICOM Tag: Retrieve AE Title   (0008,0054).
"^DD",2005.63,2005.63,6,"DT")
3090909
"^DD",2005.63,2005.63,7,0)
NUMBER OF SOP INSTANCES^NJ5,0^^4;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2005.63,2005.63,7,3)
Type a Number between 1 and 99999, 0 Decimal Digits.
"^DD",2005.63,2005.63,7,21,0)
^.001^2^2^3110902^^
"^DD",2005.63,2005.63,7,21,1,0)
This field indicates the number of SOP Instances attached to this Series.
"^DD",2005.63,2005.63,7,21,2,0)
DICOM Tag: Number of Series Related Instances   (0020,1209).
"^DD",2005.63,2005.63,7,"DT")
3110802
"^DD",2005.63,2005.63,11,0)
STUDY REFERENCE^P2005.62'^MAGV(2005.62,^6;1^Q
"^DD",2005.63,2005.63,11,.1)
STUDY
"^DD",2005.63,2005.63,11,1,0)
^.1
"^DD",2005.63,2005.63,11,1,1,0)
2005.63^C
"^DD",2005.63,2005.63,11,1,1,1)
S ^MAGV(2005.63,"C",$E(X,1,30),DA)=""
"^DD",2005.63,2005.63,11,1,1,2)
K ^MAGV(2005.63,"C",$E(X,1,30),DA)
"^DD",2005.63,2005.63,11,1,1,"%D",0)
^^1^1^3100421^
"^DD",2005.63,2005.63,11,1,1,"%D",1,0)
This is an Image Series file cross-reference based on Parent Image Study.
"^DD",2005.63,2005.63,11,1,1,"DT")
3091118
"^DD",2005.63,2005.63,11,3)
Enter image study.
"^DD",2005.63,2005.63,11,21,0)
^.001^1^1^3101013^^^^
"^DD",2005.63,2005.63,11,21,1,0)
This field holds the image study associated with this series.
"^DD",2005.63,2005.63,11,"DT")
3110823
"^DD",2005.63,2005.63,12,0)
ARTIFACT ON FILE^S^0:NOT ON FILE;1:AOF;^6;2^Q
"^DD",2005.63,2005.63,12,3)
Enter a code indicating whether or not there is an artifact on file corresponding to this series.
"^DD",2005.63,2005.63,12,21,0)
^^3^3^3100428^
"^DD",2005.63,2005.63,12,21,1,0)
This field is a flag that records whether  an artifact is on file or not.
"^DD",2005.63,2005.63,12,21,2,0)
Artifact On File (AOF) means that at least one Object is already stored
"^DD",2005.63,2005.63,12,21,3,0)
on disk. An Object can be an image, an abstract or a text file.
"^DD",2005.63,2005.63,12,"DT")
3100428
"^DD",2005.63,2005.63,13,0)
FRAME OF REFERENCE UID^F^^7;1^K:$L(X)>64!($L(X)<1) X
"^DD",2005.63,2005.63,13,1,0)
^.1
"^DD",2005.63,2005.63,13,1,1,0)
2005.63^D
"^DD",2005.63,2005.63,13,1,1,1)
S ^MAGV(2005.63,"D",$E(X,1,64),DA)=""
"^DD",2005.63,2005.63,13,1,1,2)
K ^MAGV(2005.63,"D",$E(X,1,64),DA)
"^DD",2005.63,2005.63,13,1,1,"%D",0)
^^1^1^3100421^
"^DD",2005.63,2005.63,13,1,1,"%D",1,0)
This is an Image Series file cross-reference based on Reference UID.
"^DD",2005.63,2005.63,13,1,1,"DT")
3100310
"^DD",2005.63,2005.63,13,3)
Answer must be 1-64 characters in length.
"^DD",2005.63,2005.63,13,21,0)
^.001^3^3^3110902^^
"^DD",2005.63,2005.63,13,21,1,0)
This field contains the Frame of Reference UID.  Each series may
"^DD",2005.63,2005.63,13,21,2,0)
have a single Frame of Reference UID.
"^DD",2005.63,2005.63,13,21,3,0)
DICOM Tag: Frame of Reference UID   (0020,0052).
"^DD",2005.63,2005.63,13,"DT")
3110802
"^DD",2005.63,2005.63,14,0)
DESCRIPTION^F^^2;3^K:$L(X)>64!($L(X)<1) X
"^DD",2005.63,2005.63,14,3)
Answer must be 1-64 characters in length.
"^DD",2005.63,2005.63,14,21,0)
^.001^2^2^3101117^^^^
"^DD",2005.63,2005.63,14,21,1,0)
This field contains the Series Instance description.
"^DD",2005.63,2005.63,14,21,2,0)
DICOM Tag: Series Description   (0008,103E).
"^DD",2005.63,2005.63,14,"DT")
3091223
"^DD",2005.63,2005.63,15,0)
BODY PART^F^^8;1^K:$L(X)>16!($L(X)<2) X
"^DD",2005.63,2005.63,15,1,0)
^.1
"^DD",2005.63,2005.63,15,1,1,0)
2005.63^F
"^DD",2005.63,2005.63,15,1,1,1)
S ^MAGV(2005.63,"F",$E(X,1,30),DA)=""
"^DD",2005.63,2005.63,15,1,1,2)
K ^MAGV(2005.63,"F",$E(X,1,30),DA)
"^DD",2005.63,2005.63,15,1,1,"%D",0)
^^1^1^3100104^
"^DD",2005.63,2005.63,15,1,1,"%D",1,0)
This is an Image Series file cross-reference based on BODY PART.
"^DD",2005.63,2005.63,15,1,1,"DT")
3100104
"^DD",2005.63,2005.63,15,3)
Answer must be 2-16 characters in length.
"^DD",2005.63,2005.63,15,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.63,2005.63,15,21,1,0)
This field contains the body part examined.
"^DD",2005.63,2005.63,15,21,2,0)
DICOM Tag: Body Part Examined   (0018,0015).
"^DD",2005.63,2005.63,15,"DT")
3100104
"^DD",2005.63,2005.63,17,0)
SERIES DATE/TIME^D^^3;2^S %DT="ET" D ^%DT S X=Y K:X<1 X
"^DD",2005.63,2005.63,17,3)
Enter date and time of acquisition of the Series.
"^DD",2005.63,2005.63,17,21,0)
^.001^3^3^3100922^^^^
"^DD",2005.63,2005.63,17,21,1,0)
This field contains the date and time that the series acquisition was
"^DD",2005.63,2005.63,17,21,2,0)
 started by the modality. 
"^DD",2005.63,2005.63,17,21,3,0)
DICOM Tag: Series Date + Series Time (0008,0021) + (0008,0031).
"^DD",2005.63,2005.63,17,"DT")
3110829
"^DD",2005.63,2005.63,18,0)
DEVICE^P2006.04^MAG(2006.04,^3;3^Q
"^DD",2005.63,2005.63,18,3)
Select a device manufacturer and model.
"^DD",2005.63,2005.63,18,21,0)
^.001^3^3^3111018^^^^
"^DD",2005.63,2005.63,18,21,1,0)
This field contains the device manufacturer and model used to acquire the series.
"^DD",2005.63,2005.63,18,21,2,0)
DICOM Tag: Manufacturer   (0008,0070),
"^DD",2005.63,2005.63,18,21,3,0)
               Manufacturer's Model Name   (0008,1090).
"^DD",2005.63,2005.63,18,"DT")
3111018
"^DD",2005.63,2005.63,20,0)
LATERALITY^S^R:RIGHT;L:LEFT;^5;1^Q
"^DD",2005.63,2005.63,20,3)
Enter laterality.
"^DD",2005.63,2005.63,20,21,0)
^.001^3^3^3110830^^^^
"^DD",2005.63,2005.63,20,21,1,0)
This field denotes 'L'eft or 'R'ight.
"^DD",2005.63,2005.63,20,21,2,0)
This is the laterality of the images taken, e.g. Image of the Right Knee.
"^DD",2005.63,2005.63,20,21,3,0)
DICOM Tag: Laterality   (0020,0060).
"^DD",2005.63,2005.63,20,"DT")
3100601
"^DD",2005.63,2005.63,21,0)
SPATIAL POSITION^F^^5;2^K:$L(X)>5!($L(X)<1) X
"^DD",2005.63,2005.63,21,3)
Answer must be 1-5 characters in length.
"^DD",2005.63,2005.63,21,21,0)
^.001^3^3^3100922^^^^
"^DD",2005.63,2005.63,21,21,1,0)
This field contains the spatial positioning of the series.
"^DD",2005.63,2005.63,21,21,2,0)
It is letter combinations derived from the DICOM standard.
"^DD",2005.63,2005.63,21,21,3,0)
DICOM Tag: Patient Position   (0018,5100).
"^DD",2005.63,2005.63,21,"DT")
3100512
"^DD",2005.63,2005.63,24,0)
VI ACQ ENTRY POINT^S^1:DICOM STORAGE;2:CLINICAL CAPTURE;3:IMPORT API;4:IMPORT RECONCILIATION;^2;5^Q
"^DD",2005.63,2005.63,24,3)
Select VistA Imaging application.
"^DD",2005.63,2005.63,24,21,0)
^.001^1^1^3110829^^^^
"^DD",2005.63,2005.63,24,21,1,0)
This field identifies the VistA Imaging application that acquired the SOP instance.
"^DD",2005.63,2005.63,24,"DT")
3110829
"^DD",2005.63,2005.63,25,0)
STATUS^S^A:ACCESSIBLE;I:INACCESSIBLE;^9;1^Q
"^DD",2005.63,2005.63,25,1,0)
^.1^^0
"^DD",2005.63,2005.63,25,3)
Enter series status.
"^DD",2005.63,2005.63,25,21,0)
^.001^6^6^3110912^^^^
"^DD",2005.63,2005.63,25,21,1,0)
This field indicates whether the series is ACCESSIBLE or INACCESSIBLE.
"^DD",2005.63,2005.63,25,21,2,0)
 
"^DD",2005.63,2005.63,25,21,3,0)
ACCESSIBLE means that the series in this file 
"^DD",2005.63,2005.63,25,21,4,0)
can be retrieved by Imaging database methods.
"^DD",2005.63,2005.63,25,21,5,0)
INACCESSIBLE means that the series will not be retrieved by Imaging database 
"^DD",2005.63,2005.63,25,21,6,0)
methods and that no Accessible children exist in the IMAGE SOP INSTANCE file (#2005.64).
"^DD",2005.63,2005.63,25,"DT")
3110831
"^DD",2005.63,2005.63,26,0)
IOD VIOLATION DETECTED^S^0:IOD VALID;1:IOD NOT VALID;2:IOD NOT CHECKED;3:IOD UNKNOWN;^6;3^Q
"^DD",2005.63,2005.63,26,3)
Select the IOD validation status.
"^DD",2005.63,2005.63,26,21,0)
^.001^9^9^3120306^^^^
"^DD",2005.63,2005.63,26,21,1,0)
This is the IOD validation status.
"^DD",2005.63,2005.63,26,21,2,0)
 
"^DD",2005.63,2005.63,26,21,3,0)
 IOD VALID - The entry passed IOD validation.
"^DD",2005.63,2005.63,26,21,4,0)
 IOD NOT VALID - The entry failed IOD validation.
"^DD",2005.63,2005.63,26,21,5,0)
 IOD NOT CHECKED - Relaxed validation was selected.
"^DD",2005.63,2005.63,26,21,6,0)
  Only select fields were validated.
"^DD",2005.63,2005.63,26,21,7,0)
 IOD UNKNOWN - The IOD type for this SOP class was not found. 
"^DD",2005.63,2005.63,26,21,8,0)
  The IOD type is not in the DICOM UID SPECIFIC ACTION table. 
"^DD",2005.63,2005.63,26,21,9,0)
  The entry was processed without validation.
"^DD",2005.63,2005.63,26,"DT")
3101020
"^DD",2005.63,2005.63,27,0)
TIU NOTE REFERENCE^P8925'^TIU(8925,^6;4^Q
"^DD",2005.63,2005.63,27,1,0)
^.1
"^DD",2005.63,2005.63,27,1,1,0)
2005.63^ATIU
"^DD",2005.63,2005.63,27,1,1,1)
S ^MAGV(2005.63,"ATIU",$E(X,1,30),DA)=""
"^DD",2005.63,2005.63,27,1,1,2)
K ^MAGV(2005.63,"ATIU",$E(X,1,30),DA)
"^DD",2005.63,2005.63,27,1,1,"%D",0)
^^2^2^3110905^
"^DD",2005.63,2005.63,27,1,1,"%D",1,0)
This cross-reference indexes each series by the entry on the TIU DOCUMENT 
"^DD",2005.63,2005.63,27,1,1,"%D",2,0)
file (#8925) with which it is associated.
"^DD",2005.63,2005.63,27,1,1,"DT")
3110905
"^DD",2005.63,2005.63,27,3)
Enter TIU Note.
"^DD",2005.63,2005.63,27,21,0)
^^1^1^3111118^
"^DD",2005.63,2005.63,27,21,1,0)
This is the TIU note associated with this image series.
"^DD",2005.63,2005.63,27,"DT")
3111118
"^DD",2005.63,2005.63,28,0)
CLASS INDEX^P2005.82'^MAG(2005.82,^10;1^Q
"^DD",2005.63,2005.63,28,3)
Enter class index.
"^DD",2005.63,2005.63,28,21,0)
^^2^2^3111128^^
"^DD",2005.63,2005.63,28,21,1,0)
The Classification of the Image.  
"^DD",2005.63,2005.63,28,21,2,0)
CLASS is an index field used for sorting and searching.
"^DD",2005.63,2005.63,28,"DT")
3111128
"^DD",2005.63,2005.63,29,0)
PROC/EVENT INDEX^P2005.85'^MAG(2005.85,^10;2^Q
"^DD",2005.63,2005.63,29,3)
Enter procedure/event index.
"^DD",2005.63,2005.63,29,21,0)
^.001^2^2^3110831^^^
"^DD",2005.63,2005.63,29,21,1,0)
This field indicates the kind of clinical procedure or patient-care event
"^DD",2005.63,2005.63,29,21,2,0)
that was associated with this series.
"^DD",2005.63,2005.63,29,"DT")
3110831
"^DD",2005.63,2005.63,30,0)
SPEC/SUBSPEC INDEX^P2005.84'^MAG(2005.84,^10;3^Q
"^DD",2005.63,2005.63,30,3)
Enter specialty/subspecialty index.
"^DD",2005.63,2005.63,30,21,0)
^^2^2^3111118^
"^DD",2005.63,2005.63,30,21,1,0)
This field indicates the clinical specialty or subspecialty with which
"^DD",2005.63,2005.63,30,21,2,0)
this series is associated.
"^DD",2005.63,2005.63,30,"DT")
3111118
"^DD",2005.63,2005.63,31,0)
ACQUISITION LOCATION^P2005.8^MAGV(2005.8,^1;2^Q
"^DD",2005.63,2005.63,31,3)
Enter the location where the series was created.
"^DD",2005.63,2005.63,31,21,0)
^.001^1^1^3120214^^^
"^DD",2005.63,2005.63,31,21,1,0)
This field indicates where the series was created.
"^DD",2005.63,2005.63,31,"DT")
3120208
"^DD",2005.64,2005.64,0)
FIELD^^51^47
"^DD",2005.64,2005.64,0,"DDA")
N
"^DD",2005.64,2005.64,0,"DT")
3120112
"^DD",2005.64,2005.64,0,"IX","B",2005.64,.01)

"^DD",2005.64,2005.64,0,"IX","C",2005.64,11)

"^DD",2005.64,2005.64,0,"IX","E",2005.64,1)

"^DD",2005.64,2005.64,0,"IX","I",2005.64,16)

"^DD",2005.64,2005.64,0,"NM","IMAGE SOP INSTANCE")

"^DD",2005.64,2005.64,0,"PT",2005.65,11)

"^DD",2005.64,2005.64,0,"VRPK")
MAG
"^DD",2005.64,2005.64,.01,0)
SOP INSTANCE UID^RF^^0;1^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",2005.64,2005.64,.01,1,0)
^.1
"^DD",2005.64,2005.64,.01,1,1,0)
2005.64^B
"^DD",2005.64,2005.64,.01,1,1,1)
S ^MAGV(2005.64,"B",$E(X,1,64),DA)=""
"^DD",2005.64,2005.64,.01,1,1,2)
K ^MAGV(2005.64,"B",$E(X,1,64),DA)
"^DD",2005.64,2005.64,.01,1,1,"%D",0)
^.101^1^1^3100421^^
"^DD",2005.64,2005.64,.01,1,1,"%D",1,0)
Index based on SOP Instance UID.
"^DD",2005.64,2005.64,.01,3)
Answer must be 1-64 characters in length.
"^DD",2005.64,2005.64,.01,21,0)
^.001^2^2^3110805^^^^
"^DD",2005.64,2005.64,.01,21,1,0)
This is the SOP Record ID - Primary identifier.
"^DD",2005.64,2005.64,.01,21,2,0)
DICOM Tag: SOP Instance UID   (0008,0018).
"^DD",2005.64,2005.64,.01,"DT")
3090909
"^DD",2005.64,2005.64,1,0)
ORIGINAL SOP INSTANCE UID^F^^0;2^K:$L(X)>96!($L(X)<1) X
"^DD",2005.64,2005.64,1,1,0)
^.1
"^DD",2005.64,2005.64,1,1,1,0)
2005.64^E
"^DD",2005.64,2005.64,1,1,1,1)
S ^MAGV(2005.64,"E",$E(X,1,96),DA)=""
"^DD",2005.64,2005.64,1,1,1,2)
K ^MAGV(2005.64,"E",$E(X,1,96),DA)
"^DD",2005.64,2005.64,1,1,1,"%D",0)
^.101^1^1^3110126^^
"^DD",2005.64,2005.64,1,1,1,"%D",1,0)
This is a cross reference on the ORIGINAL SOP INSTANCE UID field (#1).
"^DD",2005.64,2005.64,1,1,1,"DT")
3101116
"^DD",2005.64,2005.64,1,3)
Answer must be 1-96 characters in length.
"^DD",2005.64,2005.64,1,21,0)
^.001^1^1^3110728^^^^
"^DD",2005.64,2005.64,1,21,1,0)
This is the old SOP Instance record ID.
"^DD",2005.64,2005.64,1,"DT")
3101116
"^DD",2005.64,2005.64,2,0)
ACQUISITION DATE/TIME^D^^1;1^S %DT="ET" D ^%DT S X=Y K:X<1 X
"^DD",2005.64,2005.64,2,3)
Enter Acquisition date and time.
"^DD",2005.64,2005.64,2,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,2,21,1,0)
This is the creation date/time of the original instance.
"^DD",2005.64,2005.64,2,21,2,0)
DICOM Tag: Content Date + Content Time (0008,0023) + (0008,0033).
"^DD",2005.64,2005.64,2,"DT")
3110829
"^DD",2005.64,2005.64,3,0)
ACQUISITION NUMBER^NJ5,0^^1;2^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2005.64,2005.64,3,3)
Type a Number between 0 and 99999, 0 Decimal Digits.
"^DD",2005.64,2005.64,3,21,0)
^.001^3^3^3110805^^^^
"^DD",2005.64,2005.64,3,21,1,0)
A number identifying the single continuous gathering of data of a period
"^DD",2005.64,2005.64,3,21,2,0)
of time that resulted in this image.  It does not have to be unique within the series.
"^DD",2005.64,2005.64,3,21,3,0)
DICOM Tag: Acquisition Number  (0020, 0012).
"^DD",2005.64,2005.64,3,"DT")
3101115
"^DD",2005.64,2005.64,4,0)
INSTANCE NUMBER^NJ5,0^^2;1^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2005.64,2005.64,4,1,0)
^.1^^0
"^DD",2005.64,2005.64,4,3)
Type a Number between 0 and 99999, 0 Decimal Digits.
"^DD",2005.64,2005.64,4,21,0)
^.001^2^2^3110805^^^^
"^DD",2005.64,2005.64,4,21,1,0)
A number that identifies the image.
"^DD",2005.64,2005.64,4,21,2,0)
DICOM Tag: Instance Number  (0020,0013).
"^DD",2005.64,2005.64,4,"DT")
3110802
"^DD",2005.64,2005.64,5,0)
WINDOW CENTER^F^^3;1^K:$L(X)>64!($L(X)<1) X
"^DD",2005.64,2005.64,5,3)
Answer must be 1-64 characters in length.
"^DD",2005.64,2005.64,5,21,0)
^.001^2^2^3110902^^^^
"^DD",2005.64,2005.64,5,21,1,0)
This contains the value that is the center of the window.  Window center is used to specify a linear conversion from stored pixel values to values to be displayed.
"^DD",2005.64,2005.64,5,21,2,0)
DICOM Tag: Window Center  (0028,1050).
"^DD",2005.64,2005.64,5,"DT")
3110802
"^DD",2005.64,2005.64,6,0)
WINDOW WIDTH^F^^3;2^K:$L(X)>64!($L(X)<1) X
"^DD",2005.64,2005.64,6,3)
Answer must be 1-64 characters in length.
"^DD",2005.64,2005.64,6,21,0)
^.001^4^4^3110902^^^^
"^DD",2005.64,2005.64,6,21,1,0)
This contains the value that is the width of the window.  Window center is
"^DD",2005.64,2005.64,6,21,2,0)
used with window width to specify a linear conversion from stored pixel 
"^DD",2005.64,2005.64,6,21,3,0)
values to values to be displayed.
"^DD",2005.64,2005.64,6,21,4,0)
DICOM Tag: Window Width (0028,1051).
"^DD",2005.64,2005.64,6,"DT")
3110802
"^DD",2005.64,2005.64,7,0)
NUMBER OF FRAMES^NJ5,0^^4;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2005.64,2005.64,7,1,0)
^.1^^0
"^DD",2005.64,2005.64,7,3)
Type a Number between 1 and 99999, 0 Decimal Digits.
"^DD",2005.64,2005.64,7,21,0)
^.001^3^3^3110126^^^^
"^DD",2005.64,2005.64,7,21,1,0)
This is the number of frames in a multiframe SOP Instance.
"^DD",2005.64,2005.64,7,21,2,0)
 Null or no value means 1 frame.
"^DD",2005.64,2005.64,7,21,3,0)
DICOM Tag: Number of Frames (0028,0008).
"^DD",2005.64,2005.64,7,"DT")
3110127
"^DD",2005.64,2005.64,11,0)
SERIES REFERENCE^P2005.63'^MAGV(2005.63,^6;1^Q
"^DD",2005.64,2005.64,11,.1)
SERIES
"^DD",2005.64,2005.64,11,1,0)
^.1
"^DD",2005.64,2005.64,11,1,1,0)
2005.64^C
"^DD",2005.64,2005.64,11,1,1,1)
S ^MAGV(2005.64,"C",$E(X,1,30),DA)=""
"^DD",2005.64,2005.64,11,1,1,2)
K ^MAGV(2005.64,"C",$E(X,1,30),DA)
"^DD",2005.64,2005.64,11,1,1,"DT")
3091118
"^DD",2005.64,2005.64,11,3)
Enter image series.
"^DD",2005.64,2005.64,11,21,0)
^.001^1^1^3110823^^^^
"^DD",2005.64,2005.64,11,21,1,0)
This is the image series associated with this image SOP instance.
"^DD",2005.64,2005.64,11,"DT")
3110823
"^DD",2005.64,2005.64,12,0)
ARTIFACT ON FILE^S^0:NOT ON FILE;1:AOF;^6;2^Q
"^DD",2005.64,2005.64,12,3)
Enter a code indicating whether or not an artifact is on file for this SOP instance.
"^DD",2005.64,2005.64,12,21,0)
^^3^3^3100428^
"^DD",2005.64,2005.64,12,21,1,0)
This field is a flag that records whether an artifact is on file or not.
"^DD",2005.64,2005.64,12,21,2,0)
Artifact On File (AOF) means that at least one Object is already stored
"^DD",2005.64,2005.64,12,21,3,0)
on disk. An Object can be an image, an abstract or a text file.
"^DD",2005.64,2005.64,12,"DT")
3100428
"^DD",2005.64,2005.64,13,0)
SOP CLASS UID^P2006.532'^MAG(2006.532,^0;3^Q
"^DD",2005.64,2005.64,13,1,0)
^.1^^0
"^DD",2005.64,2005.64,13,3)
Select the SOP CLASS UID.
"^DD",2005.64,2005.64,13,21,0)
^.001^2^2^3111116^^^^
"^DD",2005.64,2005.64,13,21,1,0)
This field contains the SOP Class UID for the object stored.
"^DD",2005.64,2005.64,13,21,2,0)
DICOM Tag: SOP Class UID (0008,0016).
"^DD",2005.64,2005.64,13,"DT")
3111025
"^DD",2005.64,2005.64,14,0)
TYPE INDEX^P2005.83^MAG(2005.83,^5;1^Q
"^DD",2005.64,2005.64,14,1,0)
^.1^^0
"^DD",2005.64,2005.64,14,3)
Select the imaging type.
"^DD",2005.64,2005.64,14,21,0)
^.001^1^1^3111019^^^^
"^DD",2005.64,2005.64,14,21,1,0)
This field contains the type of image by content or use (ex. image, video).
"^DD",2005.64,2005.64,14,"DT")
3111018
"^DD",2005.64,2005.64,15,0)
DESCRIPTION^F^^5;2^K:$L(X)>60!($L(X)<1) X
"^DD",2005.64,2005.64,15,3)
Answer must be 1-60 characters in length.
"^DD",2005.64,2005.64,15,21,0)
^.001^1^1^3111017^^^
"^DD",2005.64,2005.64,15,21,1,0)
This field contains a brief description of the image.
"^DD",2005.64,2005.64,15,"DT")
3091223
"^DD",2005.64,2005.64,16,0)
KEY OBJECT^S^1:YES;0:NO;^7;1^Q
"^DD",2005.64,2005.64,16,1,0)
^.1^^-1
"^DD",2005.64,2005.64,16,1,1,0)
2005.64^I
"^DD",2005.64,2005.64,16,1,1,1)
S ^MAGV(2005.64,"I",$E(X,1,30),DA)=""
"^DD",2005.64,2005.64,16,1,1,2)
K ^MAGV(2005.64,"I",$E(X,1,30),DA)
"^DD",2005.64,2005.64,16,1,1,"%D",0)
^^1^1^3101116^
"^DD",2005.64,2005.64,16,1,1,"%D",1,0)
This is a cross reference on the Key Image field (#16).
"^DD",2005.64,2005.64,16,1,1,"DT")
3101116
"^DD",2005.64,2005.64,16,3)
Select whether the image is a key image.
"^DD",2005.64,2005.64,16,21,0)
^.001^2^2^3111206^^^^
"^DD",2005.64,2005.64,16,21,1,0)
This field denotes if an image is identified as a Key Image.
"^DD",2005.64,2005.64,16,21,2,0)
 A key image has a value of "YES".
"^DD",2005.64,2005.64,16,"DT")
3111206
"^DD",2005.64,2005.64,17,0)
QUESTIONABLE IMAGE^S^1:YES;0:NO;^7;2^Q
"^DD",2005.64,2005.64,17,3)
Select image questionable status.
"^DD",2005.64,2005.64,17,21,0)
^^2^2^3111206^^^
"^DD",2005.64,2005.64,17,21,1,0)
This field indicates the image questionable integrity. 
"^DD",2005.64,2005.64,17,21,2,0)
'1' means that the image has questionable integrity.
"^DD",2005.64,2005.64,17,"DT")
3111206
"^DD",2005.64,2005.64,18,0)
CONTRAST OR BOLUS AGENT^F^^7;3^K:$L(X)>64!($L(X)<1) X
"^DD",2005.64,2005.64,18,3)
Answer must be 1-64 characters in length.
"^DD",2005.64,2005.64,18,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,18,21,1,0)
This field contains the contrast or bolus agent used.
"^DD",2005.64,2005.64,18,21,2,0)
DICOM Tag: Contrast/Bolus Agent   (0018,0010).
"^DD",2005.64,2005.64,18,"DT")
3091223
"^DD",2005.64,2005.64,19,0)
ROWS^NJ5,0^^7;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2005.64,2005.64,19,1,0)
^.1^^0
"^DD",2005.64,2005.64,19,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2005.64,2005.64,19,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,19,21,1,0)
This field contains the image pixel matrix's number of rows.
"^DD",2005.64,2005.64,19,21,2,0)
DICOM Tag: Rows   (0028,0010) .
"^DD",2005.64,2005.64,19,"DT")
3110728
"^DD",2005.64,2005.64,20,0)
COLUMNS^NJ5,0^^7;5^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2005.64,2005.64,20,1,0)
^.1^^0
"^DD",2005.64,2005.64,20,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2005.64,2005.64,20,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,20,21,1,0)
This field contains the image pixel matrix's number of columns.
"^DD",2005.64,2005.64,20,21,2,0)
DICOM Tag: Columns  (0028,0011).
"^DD",2005.64,2005.64,20,"DT")
3110728
"^DD",2005.64,2005.64,21,0)
PHOTOMETRIC INTERPRETATION^S^1:MONOCHROME1;2:MONOCHROME2;3:PALETTE COLOR;4:RGB;5:YBR_FULL;6:YBR_FULL_422;7:YBR_PARTIAL_422;8:YBR_RCT;9:YBR_ICT;10:YBR_PARTIAL_420;^7;6^Q
"^DD",2005.64,2005.64,21,3)
Select a photometric interpretation.
"^DD",2005.64,2005.64,21,21,0)
^.001^2^2^3111214^^^^
"^DD",2005.64,2005.64,21,21,1,0)
This field contains the photometric interpretation for a series.
"^DD",2005.64,2005.64,21,21,2,0)
DICOM Tag: Photometric Interpretation (0028,0004).
"^DD",2005.64,2005.64,21,"DT")
3110831
"^DD",2005.64,2005.64,22,0)
PIXEL SPACING^F^^8;1^K:$L(X)>33!($L(X)<1) X
"^DD",2005.64,2005.64,22,.1)

"^DD",2005.64,2005.64,22,3)
Answer must be 1-33 characters in length.
"^DD",2005.64,2005.64,22,21,0)
^.001^5^5^3100922^^^^
"^DD",2005.64,2005.64,22,21,1,0)
This is the pixel spacing for image matrix.
"^DD",2005.64,2005.64,22,21,2,0)
According to the DICOM standard, it is formatted as row pixel spacing and
"^DD",2005.64,2005.64,22,21,3,0)
column pixel spacing separated by "\".
"^DD",2005.64,2005.64,22,21,4,0)
Pixel spacing is in millimetres, using scientific notation.
"^DD",2005.64,2005.64,22,21,5,0)
DICOM Tag: Pixel Spacing (0028,0030).
"^DD",2005.64,2005.64,22,"DT")
3100520
"^DD",2005.64,2005.64,23,0)
SAMPLES PER PIXEL^NJ5,0^^8;2^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2005.64,2005.64,23,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2005.64,2005.64,23,21,0)
^.001^2^2^3110126^^^^
"^DD",2005.64,2005.64,23,21,1,0)
This is the number of separate planes in this image.
"^DD",2005.64,2005.64,23,21,2,0)
DICOM Tag: Samples Per Pixel (0028,0002).
"^DD",2005.64,2005.64,23,"DT")
3100511
"^DD",2005.64,2005.64,24,0)
BITS ALLOCATED^NJ5,0^^8;3^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2005.64,2005.64,24,1,0)
^.1^^0
"^DD",2005.64,2005.64,24,3)
Type a Number between 0 and 99999, 0 Decimal Digits.
"^DD",2005.64,2005.64,24,21,0)
^.001^2^2^3110126^^^^
"^DD",2005.64,2005.64,24,21,1,0)
This is the number of bits allocated for 1 pixel.
"^DD",2005.64,2005.64,24,21,2,0)
DICOM Tag: Bits Allocated (0028,0100).
"^DD",2005.64,2005.64,24,"DT")
3110728
"^DD",2005.64,2005.64,25,0)
BITS STORED^NJ5,0^^8;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2005.64,2005.64,25,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2005.64,2005.64,25,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,25,21,1,0)
This is the number of bits used to store image information.
"^DD",2005.64,2005.64,25,21,2,0)
DICOM Tag: Bits Stored (0028,0101).
"^DD",2005.64,2005.64,25,"DT")
3100511
"^DD",2005.64,2005.64,26,0)
HIGH BIT^NJ5,0^^8;5^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2005.64,2005.64,26,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2005.64,2005.64,26,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,26,21,1,0)
This is the high bit number.  
"^DD",2005.64,2005.64,26,21,2,0)
DICOM Tag: High Bit (0028,0102).
"^DD",2005.64,2005.64,26,"DT")
3100511
"^DD",2005.64,2005.64,27,0)
PIXEL REPRESENTATION^S^0:Unsigned Integer;1:Signed Integer (2's Complement);^8;6^Q
"^DD",2005.64,2005.64,27,3)
Select pixel representation.
"^DD",2005.64,2005.64,27,21,0)
^.001^2^2^3130125^^^^
"^DD",2005.64,2005.64,27,21,1,0)
This is the DICOM pixel representation.
"^DD",2005.64,2005.64,27,21,2,0)
DICOM Tag: Pixel Representation  (0028,0103).
"^DD",2005.64,2005.64,27,"DT")
3130125
"^DD",2005.64,2005.64,28,0)
RESCALE INTERCEPT^F^^8;7^K:$L(X)>12!($L(X)<1) X
"^DD",2005.64,2005.64,28,3)
Answer must be 1-12 characters in length.
"^DD",2005.64,2005.64,28,21,0)
^.001^3^3^3110902^^^^
"^DD",2005.64,2005.64,28,21,1,0)
This is the rescale intercept.  It is the value b in the equation
"^DD",2005.64,2005.64,28,21,2,0)
output units = m*SV + b.
"^DD",2005.64,2005.64,28,21,3,0)
DICOM Tag: Rescale Intercept (0028,1052).
"^DD",2005.64,2005.64,28,"DT")
3110802
"^DD",2005.64,2005.64,29,0)
RESCALE SLOPE^F^^8;8^K:$L(X)>12!($L(X)<1) X
"^DD",2005.64,2005.64,29,3)
Answer must be 1-12 characters in length.
"^DD",2005.64,2005.64,29,21,0)
^.001^3^3^3110902^^^^
"^DD",2005.64,2005.64,29,21,1,0)
This is the rescale slope.  It is the value m in the equation
"^DD",2005.64,2005.64,29,21,2,0)
output units = m*SV +b.
"^DD",2005.64,2005.64,29,21,3,0)
DICOM Tag: Rescale Slope (0028,1053).
"^DD",2005.64,2005.64,29,"DT")
3110802
"^DD",2005.64,2005.64,30,0)
PLATE ID^F^^9;1^K:$L(X)>64!($L(X)<1) X
"^DD",2005.64,2005.64,30,3)
Answer must be 1-64 characters in length.
"^DD",2005.64,2005.64,30,21,0)
^.001^3^3^3100922^^^^
"^DD",2005.64,2005.64,30,21,1,0)
This is the ID or serial number of the (CR) sensing plate upon which the
"^DD",2005.64,2005.64,30,21,2,0)
image was acquired (if applicable).
"^DD",2005.64,2005.64,30,21,3,0)
DICOM Tag: Plate ID (0018,1004).
"^DD",2005.64,2005.64,30,"DT")
3091223
"^DD",2005.64,2005.64,31,0)
SLICE THICKNESS^F^^9;2^K:$L(X)>12!($L(X)<1) X
"^DD",2005.64,2005.64,31,3)
Answer must be 1-12 characters in length.
"^DD",2005.64,2005.64,31,21,0)
^^3^3^3130125^
"^DD",2005.64,2005.64,31,21,1,0)
This is the Nominal (CT) slice thickness, in millimeters (if applicable).
"^DD",2005.64,2005.64,31,21,2,0)
Numbers are in millimeters in scientific notation.
"^DD",2005.64,2005.64,31,21,3,0)
DICOM Tag: Slice Thickness  (0018,0050).
"^DD",2005.64,2005.64,31,"DT")
3130125
"^DD",2005.64,2005.64,32,0)
RECONSTRUCTION DIAMETER^F^^9;3^K:$L(X)>12!($L(X)<1) X
"^DD",2005.64,2005.64,32,3)
Answer must be 1-12 characters in length.
"^DD",2005.64,2005.64,32,21,0)
^^5^5^3130125^^
"^DD",2005.64,2005.64,32,21,1,0)
This is the diameter in millimeters of the region from within which data
"^DD",2005.64,2005.64,32,21,2,0)
was used in creating the reconstruction of the image.  Data may exist
"^DD",2005.64,2005.64,32,21,3,0)
outside of this region.
"^DD",2005.64,2005.64,32,21,4,0)
Numbers are in millimeters in scientific notation.
"^DD",2005.64,2005.64,32,21,5,0)
DICOM Tag: Reconstruction Diameter (0018,1100).
"^DD",2005.64,2005.64,32,"DT")
3130125
"^DD",2005.64,2005.64,33,0)
SCANNING SEQUENCE^F^^12;1^K:$L(X)>250!($L(X)<1) X
"^DD",2005.64,2005.64,33,3)
Answer must be 1-250 characters in length.
"^DD",2005.64,2005.64,33,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,33,21,1,0)
This is the Magnetic Resonance (MR) scanning sequence.
"^DD",2005.64,2005.64,33,21,2,0)
DICOM Tag: Scanning Sequence (0018,0020).
"^DD",2005.64,2005.64,33,"DT")
3091223
"^DD",2005.64,2005.64,34,0)
SCANNING VARIANT^F^^13;1^K:$L(X)>250!($L(X)<1) X
"^DD",2005.64,2005.64,34,3)
Answer must be 1-250 characters in length.
"^DD",2005.64,2005.64,34,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,34,21,1,0)
This is the scanning variant of the scanning sequence.
"^DD",2005.64,2005.64,34,21,2,0)
DICOM Tag: Scanning Variant (0018,0021).
"^DD",2005.64,2005.64,34,"DT")
3091223
"^DD",2005.64,2005.64,35,0)
MR ACQUISITION TYPE^F^^10;1^K:$L(X)>16!($L(X)<1) X
"^DD",2005.64,2005.64,35,3)
Answer must be 1-16 characters in length.
"^DD",2005.64,2005.64,35,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,35,21,1,0)
This is the MR Acquisition data encoding scheme identifier.
"^DD",2005.64,2005.64,35,21,2,0)
DICOM Tag: MR Acquisition Type (0018,0023).
"^DD",2005.64,2005.64,35,"DT")
3100426
"^DD",2005.64,2005.64,36,0)
ACQUISITION CONTEXT DESC^F^^10;2^K:$L(X)>64!($L(X)<1) X
"^DD",2005.64,2005.64,36,.1)
ACQUISITION CONTEXT DESCRIPTION
"^DD",2005.64,2005.64,36,3)
Answer must be 1-64 characters in length.
"^DD",2005.64,2005.64,36,21,0)
2^.001^2^2^3101118^^^
"^DD",2005.64,2005.64,36,21,1,0)
This is the Acquisition Context Description.
"^DD",2005.64,2005.64,36,21,2,0)
DICOM Tag: Acquisition Context Description  (0040,0556).
"^DD",2005.64,2005.64,36,"DT")
3101118
"^DD",2005.64,2005.64,37,0)
REPETITION TIME^F^^10;3^K:$L(X)>16!($L(X)<1) X
"^DD",2005.64,2005.64,37,3)
Answer must be 1-16 characters in length.
"^DD",2005.64,2005.64,37,21,0)
^.001^4^4^3100922^^^^
"^DD",2005.64,2005.64,37,21,1,0)
This is the period of time in milliseconds between the beginning of a pulse
"^DD",2005.64,2005.64,37,21,2,0)
sequence and the beginning of the succeeding pulse sequence.
"^DD",2005.64,2005.64,37,21,3,0)
Numbers are in milliseconds in scientific notation.
"^DD",2005.64,2005.64,37,21,4,0)
DICOM Tag: Repetition Time  (0018,0080).
"^DD",2005.64,2005.64,37,"DT")
3100520
"^DD",2005.64,2005.64,38,0)
ECHO TIME^F^^10;4^K:$L(X)>16!($L(X)<1) X
"^DD",2005.64,2005.64,38,3)
Answer must be 1-16 characters in length.
"^DD",2005.64,2005.64,38,21,0)
^.001^4^4^3100922^^^^
"^DD",2005.64,2005.64,38,21,1,0)
This is the time in milliseconds between the middle of the excitation pulse and the
"^DD",2005.64,2005.64,38,21,2,0)
peak of the echo produced.
"^DD",2005.64,2005.64,38,21,3,0)
Numbers are in milliseconds in scientific notation.
"^DD",2005.64,2005.64,38,21,4,0)
DICOM Tag: Echo Time (0018,0081).
"^DD",2005.64,2005.64,38,"DT")
3100520
"^DD",2005.64,2005.64,39,0)
MICROSCOPIC OBJECTIVE^F^^10;5^K:$L(X)>10!($L(X)<1) X
"^DD",2005.64,2005.64,39,3)
Answer must be 1-10 characters in length.
"^DD",2005.64,2005.64,39,21,0)
^.001^3^3^3111123^^^^
"^DD",2005.64,2005.64,39,21,1,0)
This is the description of the Microscopic Objective selected by the
"^DD",2005.64,2005.64,39,21,2,0)
pathologist.  It identifies the power of the microscope objective
"^DD",2005.64,2005.64,39,21,3,0)
used when capturing the image of the slide.
"^DD",2005.64,2005.64,39,23,0)
^^2^2^3111123^
"^DD",2005.64,2005.64,39,23,1,0)
This field is kept for backward capability with MICROSCOPIC 
"^DD",2005.64,2005.64,39,23,2,0)
OBJECTIVE field (#2005,54).
"^DD",2005.64,2005.64,39,"DT")
3111123
"^DD",2005.64,2005.64,40,0)
STATUS^S^A:ACCESSIBLE;I:INACCESSIBLE;^11;1^Q
"^DD",2005.64,2005.64,40,1,0)
^.1^^0
"^DD",2005.64,2005.64,40,3)
Select series status.
"^DD",2005.64,2005.64,40,21,0)
^.001^6^6^3110909^^^^
"^DD",2005.64,2005.64,40,21,1,0)
This field indicates whether the SOP Instance is ACCESSIBLE or INACCESSIBLE.
"^DD",2005.64,2005.64,40,21,2,0)
 
"^DD",2005.64,2005.64,40,21,3,0)
ACCESSIBLE means that the SOP Instance can be retrieved by Imaging database 
"^DD",2005.64,2005.64,40,21,4,0)
methods.
"^DD",2005.64,2005.64,40,21,5,0)
INACCESSIBLE means that the study will not be retrieved by Imaging database 
"^DD",2005.64,2005.64,40,21,6,0)
methods and that no Active children exist in the IMAGE INSTANCE file (#2005.65).
"^DD",2005.64,2005.64,40,"DT")
3120203
"^DD",2005.64,2005.64,43,0)
LAST UPDATE DATE/TIME^D^^15;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2005.64,2005.64,43,3)
Enter last update date and time.
"^DD",2005.64,2005.64,43,21,0)
^.001^1^1^3110829^^^^
"^DD",2005.64,2005.64,43,21,1,0)
This field indicates the date/time of the last record update.
"^DD",2005.64,2005.64,43,"DT")
3110829
"^DD",2005.64,2005.64,44,0)
SOURCE OF REFERENCE INSTANCE^F^^15;2^K:$L(X)>19!($L(X)<1) X
"^DD",2005.64,2005.64,44,3)
Answer must be 1-19 characters in length.
"^DD",2005.64,2005.64,44,21,0)
^.001^2^2^3100922^^^
"^DD",2005.64,2005.64,44,21,1,0)
This is the DICOM tag number where the Frame of Reference instance(s)
"^DD",2005.64,2005.64,44,21,2,0)
are extracted from.
"^DD",2005.64,2005.64,44,"DT")
3120112
"^DD",2005.64,2005.64,45,0)
HISTOLOGICAL STAIN^F^^15;3^K:$L(X)>30!($L(X)<1) X
"^DD",2005.64,2005.64,45,3)
Answer must be 1-30 characters in length.
"^DD",2005.64,2005.64,45,21,0)
^.001^1^1^3111123^^^^
"^DD",2005.64,2005.64,45,21,1,0)
This field contains the description of the histological stain.
"^DD",2005.64,2005.64,45,23,0)
^^1^1^3111123^
"^DD",2005.64,2005.64,45,23,1,0)
This field is kept for backward capability with STAIN field (#2005,53).
"^DD",2005.64,2005.64,45,"DT")
3111123
"^DD",2005.64,2005.64,46,0)
LAB SLIDE ID^F^^15;4^K:$L(X)>64!($L(X)<1) X
"^DD",2005.64,2005.64,46,3)
Answer must be 1-64 characters in length.
"^DD",2005.64,2005.64,46,21,0)
^.001^1^1^3111123^^^^
"^DD",2005.64,2005.64,46,21,1,0)
This field contains the specimen number for a given slide.
"^DD",2005.64,2005.64,46,23,0)
^^2^2^3111123^
"^DD",2005.64,2005.64,46,23,1,0)
This field is kept for backward capability with SPECIMEN# field 
"^DD",2005.64,2005.64,46,23,2,0)
(#2005,52).
"^DD",2005.64,2005.64,46,"DT")
3111123
"^DD",2005.64,2005.64,47,0)
REFERENCED SOP INSTANCES^F^^16;1^K:$L(X)>129!($L(X)<1) X
"^DD",2005.64,2005.64,47,3)
Answer must be 1-129 characters in length.
"^DD",2005.64,2005.64,47,21,0)
^.001^3^3^3111201^^^^
"^DD",2005.64,2005.64,47,21,1,0)
This field uniquely identifies the referenced SOP Class and SOP Instance.
"^DD",2005.64,2005.64,47,21,2,0)
If not in header this field is Null.
"^DD",2005.64,2005.64,47,21,3,0)
DICOM Tag: Referenced SOP Instances (0008,1150)"\"(0008,1155).
"^DD",2005.64,2005.64,47,"DT")
3111201
"^DD",2005.64,2005.64,48,0)
PATIENT ORIENTATION^F^^15;5^K:$L(X)>7!($L(X)<1) X
"^DD",2005.64,2005.64,48,3)
Answer must be 1-7 characters in length.
"^DD",2005.64,2005.64,48,21,0)
^.001^2^2^3100922^^^^
"^DD",2005.64,2005.64,48,21,1,0)
This is the patient's orientation relative to the image plane.
"^DD",2005.64,2005.64,48,21,2,0)
DICOM Tag: Patient Orientation (0020,0020).
"^DD",2005.64,2005.64,48,"DT")
3100527
"^DD",2005.64,2005.64,49,0)
IMAGE ORIENTATION^F^^17;1^K:$L(X)>101!($L(X)<1) X
"^DD",2005.64,2005.64,49,3)
Answer must be 1-101 characters in length.
"^DD",2005.64,2005.64,49,21,0)
^.001^3^3^3110902^^^^
"^DD",2005.64,2005.64,49,21,1,0)
This is the separated directions cosines of the first row and first column
"^DD",2005.64,2005.64,49,21,2,0)
with respect to the patient.
"^DD",2005.64,2005.64,49,21,3,0)
DICOM Tag: Image Orientation (0020,0037).
"^DD",2005.64,2005.64,49,"DT")
3110823
"^DD",2005.64,2005.64,50,0)
IMAGE POSITION^F^^14;1^K:$L(X)>50!($L(X)<1) X
"^DD",2005.64,2005.64,50,3)
Answer must be 1-50 characters in length.
"^DD",2005.64,2005.64,50,21,0)
^.001^3^3^3110907^^
"^DD",2005.64,2005.64,50,21,1,0)
This field indicates the x,y, and z coordinates of the upper left
"^DD",2005.64,2005.64,50,21,2,0)
hand corner of the image in millimeters (separated by "/").
"^DD",2005.64,2005.64,50,21,3,0)
DICOM Tag: Image Position (0020,0032).
"^DD",2005.64,2005.64,50,"DT")
3110823
"^DD",2005.64,2005.64,51,0)
IMAGE LATERALITY^S^R:RIGHT;L:LEFT;U:UNPAIRED;B:BOTH;^17;2^Q
"^DD",2005.64,2005.64,51,3)
Select image laterality.
"^DD",2005.64,2005.64,51,21,0)
^.001^3^3^3111206^^^
"^DD",2005.64,2005.64,51,21,1,0)
This is the laterality of the images taken, e.g. Image of the Right Knee.
"^DD",2005.64,2005.64,51,21,2,0)
DICOM Tag: Laterality   (0020,0062).
"^DD",2005.64,2005.64,51,"DT")
3111206
"^DD",2005.65,2005.65,0)
FIELD^^.02^13
"^DD",2005.65,2005.65,0,"DDA")
N
"^DD",2005.65,2005.65,0,"DT")
3111104
"^DD",2005.65,2005.65,0,"IX","B",2005.65,.01)

"^DD",2005.65,2005.65,0,"IX","C",2005.65,11)

"^DD",2005.65,2005.65,0,"NM","IMAGE INSTANCE FILE")

"^DD",2005.65,2005.65,0,"VRPK")
MAG
"^DD",2005.65,2005.65,.01,0)
ARTIFACT TOKEN^RF^^0;1^K:$L(X)>128!($L(X)<3)!'(X'?1P.E) X
"^DD",2005.65,2005.65,.01,1,0)
^.1
"^DD",2005.65,2005.65,.01,1,1,0)
2005.65^B
"^DD",2005.65,2005.65,.01,1,1,1)
S ^MAGV(2005.65,"B",$E(X,1,128),DA)=""
"^DD",2005.65,2005.65,.01,1,1,2)
K ^MAGV(2005.65,"B",$E(X,1,128),DA)
"^DD",2005.65,2005.65,.01,3)
Answer must be 3-128 characters in length.
"^DD",2005.65,2005.65,.01,21,0)
^.001^1^1^3111104^^^^
"^DD",2005.65,2005.65,.01,21,1,0)
Holds the token that is used to reference a stored artifact.
"^DD",2005.65,2005.65,.01,"DT")
3111104
"^DD",2005.65,2005.65,.02,0)
ARTIFACT REFERENCE^P2006.916'^MAGV(2006.916,^0;2^Q
"^DD",2005.65,2005.65,.02,3)
Select the artifact associated with this entry.
"^DD",2005.65,2005.65,.02,21,0)
^.001^1^1^3110913^^
"^DD",2005.65,2005.65,.02,21,1,0)
This identifies the storage artifact associated with this image instance.
"^DD",2005.65,2005.65,.02,"DT")
3110913
"^DD",2005.65,2005.65,2,0)
ORIGINAL SOP INSTANCE^S^1:YES;0:NO;^1;2^Q
"^DD",2005.65,2005.65,2,1,0)
^.1^^0
"^DD",2005.65,2005.65,2,3)
Select original SOP Instance flag.
"^DD",2005.65,2005.65,2,21,0)
^.001^2^2^3101118^^^
"^DD",2005.65,2005.65,2,21,1,0)
This field denotes if this image file is the original representation of the 
"^DD",2005.65,2005.65,2,21,2,0)
SOP Instance. For original SOP Instance select "YES".
"^DD",2005.65,2005.65,2,"DT")
3110802
"^DD",2005.65,2005.65,5,0)
DERIVATION DESCRIPTION^F^^2;1^K:$L(X)>250!($L(X)<1) X
"^DD",2005.65,2005.65,5,3)
Answer must be 1-250 characters in length.
"^DD",2005.65,2005.65,5,21,0)
^.001^3^3^3101117^^^^
"^DD",2005.65,2005.65,5,21,1,0)
This is an implementation specific text description of the way
"^DD",2005.65,2005.65,5,21,2,0)
the image was derived from an original image.
"^DD",2005.65,2005.65,5,21,3,0)
DICOM Tag: DERIVATION DESCRIPTION (0008,2111).
"^DD",2005.65,2005.65,5,"DT")
3091208
"^DD",2005.65,2005.65,9,0)
DELETION DATE/TIME^D^^4;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2005.65,2005.65,9,3)
Enter date and time when Image instance was deleted. 
"^DD",2005.65,2005.65,9,21,0)
^.001^1^1^3110907^^^
"^DD",2005.65,2005.65,9,21,1,0)
This is the date and time when the image instance was deleted.
"^DD",2005.65,2005.65,9,"DT")
3110907
"^DD",2005.65,2005.65,10,0)
DELETION BY^P200^VA(200,^4;2^Q
"^DD",2005.65,2005.65,10,3)
Select the user that deleted the image instance.
"^DD",2005.65,2005.65,10,21,0)
^.001^1^1^3110907^^^^
"^DD",2005.65,2005.65,10,21,1,0)
The user that deleted the image instance.
"^DD",2005.65,2005.65,10,"DT")
3110907
"^DD",2005.65,2005.65,11,0)
SOP INSTANCE REFERENCE^P2005.64'^MAGV(2005.64,^6;1^Q
"^DD",2005.65,2005.65,11,.1)
SOP INSTANCE
"^DD",2005.65,2005.65,11,1,0)
^.1
"^DD",2005.65,2005.65,11,1,1,0)
2005.65^C
"^DD",2005.65,2005.65,11,1,1,1)
S ^MAGV(2005.65,"C",$E(X,1,30),DA)=""
"^DD",2005.65,2005.65,11,1,1,2)
K ^MAGV(2005.65,"C",$E(X,1,30),DA)
"^DD",2005.65,2005.65,11,1,1,"DT")
3100322
"^DD",2005.65,2005.65,11,3)
Enter SOP Instance Reference.
"^DD",2005.65,2005.65,11,21,0)
^.001^2^2^3110823^^^
"^DD",2005.65,2005.65,11,21,1,0)
This is the image SOP Instance associated with 
"^DD",2005.65,2005.65,11,21,2,0)
this file instance.
"^DD",2005.65,2005.65,11,"DT")
3111206
"^DD",2005.65,2005.65,12,0)
DELETION REASON^F^^4;3^K:$L(X)>60!($L(X)<10) X
"^DD",2005.65,2005.65,12,3)
Answer must be 10-60 characters in length.
"^DD",2005.65,2005.65,12,21,0)
^.001^1^1^3110907^^
"^DD",2005.65,2005.65,12,21,1,0)
This is the reason why this image file instance was deleted.
"^DD",2005.65,2005.65,12,"DT")
3091223
"^DD",2005.65,2005.65,13,0)
COMPRESSION RATIO^F^^1;3^K:$L(X)>68!($L(X)<1) X
"^DD",2005.65,2005.65,13,3)
Answer must be 1-68 characters in length.
"^DD",2005.65,2005.65,13,21,0)
^.001^3^3^3100922^^^^
"^DD",2005.65,2005.65,13,21,1,0)
This is the compression ratio of this image file instance.
"^DD",2005.65,2005.65,13,21,2,0)
Optionally a "\" separated string of multiple values of 17 characters.
"^DD",2005.65,2005.65,13,21,3,0)
DICOM Tag: COMPRESSION RATIO (0028,2112).
"^DD",2005.65,2005.65,13,"DT")
3100514
"^DD",2005.65,2005.65,14,0)
COMPRESSION METHOD^F^^1;4^K:$L(X)>80!($L(X)<1) X
"^DD",2005.65,2005.65,14,3)
Answer must be 1-80 characters in length.
"^DD",2005.65,2005.65,14,21,0)
^.001^4^4^3110928^^^^
"^DD",2005.65,2005.65,14,21,1,0)
This is the compression method of this image file instance.
"^DD",2005.65,2005.65,14,21,2,0)
According to DICOM standard, optionally a '\' separated string of 
"^DD",2005.65,2005.65,14,21,3,0)
multiple values of 17 characters.
"^DD",2005.65,2005.65,14,21,4,0)
DICOM Tag: COMPRESSION METHOD (0028,2114).
"^DD",2005.65,2005.65,14,"DT")
3111114
"^DD",2005.65,2005.65,15,0)
STATUS^S^A:ACCESSIBLE;I:INACCESSIBLE;^1;5^Q
"^DD",2005.65,2005.65,15,3)
Select Status.
"^DD",2005.65,2005.65,15,21,0)
^.001^7^7^3110909^^^
"^DD",2005.65,2005.65,15,21,1,0)
This is a code indicating whether the image file instance is ACCESSIBLE or 
"^DD",2005.65,2005.65,15,21,2,0)
INACCESSIBLE.
"^DD",2005.65,2005.65,15,21,3,0)
 
"^DD",2005.65,2005.65,15,21,4,0)
ACCESSIBLE means that the image file instance can be retrieved by Imaging 
"^DD",2005.65,2005.65,15,21,5,0)
database methods.
"^DD",2005.65,2005.65,15,21,6,0)
INACCESSIBLE means that the image file instance will not be retrieved by
"^DD",2005.65,2005.65,15,21,7,0)
Imaging database methods.
"^DD",2005.65,2005.65,15,"DT")
3110831
"^DD",2005.65,2005.65,17,0)
IMAGE TYPE^F^^6;2^K:$L(X)>120!($L(X)<1) X
"^DD",2005.65,2005.65,17,3)
Answer must be 1-120 characters in length.
"^DD",2005.65,2005.65,17,21,0)
^.001^8^8^3110913^^^^
"^DD",2005.65,2005.65,17,21,1,0)
This is the image type of this image file instance.
"^DD",2005.65,2005.65,17,21,2,0)
Identifies image identification characteristics as multiple enumerated 
"^DD",2005.65,2005.65,17,21,3,0)
values (like Value1 \ Value2 \ Value3) for:
"^DD",2005.65,2005.65,17,21,4,0)
       Value1 - Pixel data: ORIGINAL or DERIVED
"^DD",2005.65,2005.65,17,21,5,0)
       Value2 - Patient Examination: PRIMARY or SECONDARY
"^DD",2005.65,2005.65,17,21,6,0)
       Value3 - shall identify any IOD specific realization
"^DD",2005.65,2005.65,17,21,7,0)
       Other values are implementation specific 
"^DD",2005.65,2005.65,17,21,8,0)
DICOM Tag: IMAGE TYPE (0008,0008).
"^DD",2005.65,2005.65,17,"DT")
3100514
"^DD",2005.65,2005.65,18,0)
CONFIDENTIAL^S^1:YES;0:NO;^1;1^Q
"^DD",2005.65,2005.65,18,3)
Select if the image is confidential.
"^DD",2005.65,2005.65,18,21,0)
^.001^1^1^3111209^^^
"^DD",2005.65,2005.65,18,21,1,0)
This field indicates if restrictions must apply during image display.
"^DD",2005.65,2005.65,18,"DT")
3110901
"^DD",2005.66,2005.66,0)
FIELD^^7^7
"^DD",2005.66,2005.66,0,"DDA")
N
"^DD",2005.66,2005.66,0,"DT")
3111206
"^DD",2005.66,2005.66,0,"IX","B",2005.66,.01)

"^DD",2005.66,2005.66,0,"IX","C",2005.66,2)

"^DD",2005.66,2005.66,0,"NM","IMAGING DUPLICATE UID LOG")

"^DD",2005.66,2005.66,0,"VRPK")
MAG
"^DD",2005.66,2005.66,.01,0)
ORIGINAL UID^RF^^0;1^K:$L(X)>96!($L(X)<1)!'(X'?1P.E) X
"^DD",2005.66,2005.66,.01,1,0)
^.1
"^DD",2005.66,2005.66,.01,1,1,0)
2005.66^B
"^DD",2005.66,2005.66,.01,1,1,1)
S ^MAGV(2005.66,"B",$E(X,1,96),DA)=""
"^DD",2005.66,2005.66,.01,1,1,2)
K ^MAGV(2005.66,"B",$E(X,1,96),DA)
"^DD",2005.66,2005.66,.01,1,1,"%D",0)
^^1^1^3100421^
"^DD",2005.66,2005.66,.01,1,1,"%D",1,0)
Cross-reference on Original UID.
"^DD",2005.66,2005.66,.01,3)
Answer must be 1-96 characters in length.
"^DD",2005.66,2005.66,.01,21,0)
^.001^6^6^3110904^^^^
"^DD",2005.66,2005.66,.01,21,1,0)
This field stores the duplicate original UID.
"^DD",2005.66,2005.66,.01,21,2,0)
 
"^DD",2005.66,2005.66,.01,21,3,0)
DICOM Tag: 
"^DD",2005.66,2005.66,.01,21,4,0)
Study Instance UID (0020,000D),
"^DD",2005.66,2005.66,.01,21,5,0)
Series Instance UID (0020,000E),
"^DD",2005.66,2005.66,.01,21,6,0)
SOP Instance UID (0008,0018).
"^DD",2005.66,2005.66,.01,"DT")
3100512
"^DD",2005.66,2005.66,2,0)
NEW UID^F^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",2005.66,2005.66,2,1,0)
^.1
"^DD",2005.66,2005.66,2,1,1,0)
2005.66^C
"^DD",2005.66,2005.66,2,1,1,1)
S ^MAGV(2005.66,"C",$E(X,1,64),DA)=""
"^DD",2005.66,2005.66,2,1,1,2)
K ^MAGV(2005.66,"C",$E(X,1,64),DA)
"^DD",2005.66,2005.66,2,1,1,"%D",0)
^.101^1^1^3100421^^
"^DD",2005.66,2005.66,2,1,1,"%D",1,0)
This is the NEW UID cross-reference.
"^DD",2005.66,2005.66,2,1,1,"DT")
3091124
"^DD",2005.66,2005.66,2,3)
Answer must be 1-64 characters in length.
"^DD",2005.66,2005.66,2,21,0)
^.001^6^6^3110902^^^
"^DD",2005.66,2005.66,2,21,1,0)
This field stores the new assigned UID.
"^DD",2005.66,2005.66,2,21,2,0)
 
"^DD",2005.66,2005.66,2,21,3,0)
DICOM Tag: 
"^DD",2005.66,2005.66,2,21,4,0)
Study Instance UID (0020,000D),
"^DD",2005.66,2005.66,2,21,5,0)
Series Instance UID (0020,000E),
"^DD",2005.66,2005.66,2,21,6,0)
SOP Instance UID (0008,0018).
"^DD",2005.66,2005.66,2,"DT")
3091124
"^DD",2005.66,2005.66,3,0)
ACCESSION NUMBER^F^^0;3^K:$L(X)>16!($L(X)<1) X
"^DD",2005.66,2005.66,3,3)
Answer must be 1-16 characters in length.
"^DD",2005.66,2005.66,3,21,0)
^.001^1^1^3110903^^^
"^DD",2005.66,2005.66,3,21,1,0)
This field stores the accession number associated with the UID.
"^DD",2005.66,2005.66,3,"DT")
3110903
"^DD",2005.66,2005.66,4,0)
PATIENT^P2'^DPT(^0;4^Q
"^DD",2005.66,2005.66,4,3)
Enter a patient.
"^DD",2005.66,2005.66,4,21,0)
^^1^1^3111206^
"^DD",2005.66,2005.66,4,21,1,0)
This is the patient associated with the UID.
"^DD",2005.66,2005.66,4,"DT")
3111206
"^DD",2005.66,2005.66,5,0)
TYPE^S^1:STUDY INSTANCE UID;2:SERIES INSTANCE UID;3:SOP INSTANCE UID;^0;5^Q
"^DD",2005.66,2005.66,5,3)

"^DD",2005.66,2005.66,5,21,0)
^.001^1^1^3110901^^^^
"^DD",2005.66,2005.66,5,21,1,0)
This field contains the original UID type (ex. SOP).
"^DD",2005.66,2005.66,5,"DT")
3110805
"^DD",2005.66,2005.66,6,0)
STUDY UID^F^^1;1^K:$L(X)>96!($L(X)<1) X
"^DD",2005.66,2005.66,6,3)
Answer must be 1-96 characters in length.
"^DD",2005.66,2005.66,6,21,0)
^.001^3^3^3110805^^^^
"^DD",2005.66,2005.66,6,21,1,0)
This field will store the STUDY UID related to this record.
"^DD",2005.66,2005.66,6,21,2,0)
 
"^DD",2005.66,2005.66,6,21,3,0)
DICOM Tag: Study Instance UID (0020,000D).
"^DD",2005.66,2005.66,6,"DT")
3100512
"^DD",2005.66,2005.66,7,0)
SERIES UID^F^^1;2^K:$L(X)>96!($L(X)<1) X
"^DD",2005.66,2005.66,7,3)
Answer must be 1-96 characters in length.
"^DD",2005.66,2005.66,7,21,0)
^.001^3^3^3110805^^^^
"^DD",2005.66,2005.66,7,21,1,0)
This field will store the SERIES UID related to this record.
"^DD",2005.66,2005.66,7,21,2,0)
 
"^DD",2005.66,2005.66,7,21,3,0)
DICOM Tag: Series Instance UID (0020,000E).
"^DD",2005.66,2005.66,7,"DT")
3100512
"^DD",2005.8,2005.8,0)
FIELD^^.01^1
"^DD",2005.8,2005.8,0,"DDA")
N
"^DD",2005.8,2005.8,0,"DT")
3111018
"^DD",2005.8,2005.8,0,"IX","B",2005.8,.01)

"^DD",2005.8,2005.8,0,"NM","IMAGING SERVICE INSTITUTION")

"^DD",2005.8,2005.8,0,"PT",2005.6,.05)

"^DD",2005.8,2005.8,0,"PT",2005.61,.05)

"^DD",2005.8,2005.8,0,"PT",2005.63,31)

"^DD",2005.8,2005.8,0,"VRPK")
MAG
"^DD",2005.8,2005.8,.01,0)
INSTITUTION^V^^0;1^Q
"^DD",2005.8,2005.8,.01,1,0)
^.1
"^DD",2005.8,2005.8,.01,1,1,0)
2005.8^B
"^DD",2005.8,2005.8,.01,1,1,1)
S ^MAGV(2005.8,"B",$E(X,1,30),DA)=""
"^DD",2005.8,2005.8,.01,1,1,2)
K ^MAGV(2005.8,"B",$E(X,1,30),DA)
"^DD",2005.8,2005.8,.01,3)
Select an Imaging service institution.
"^DD",2005.8,2005.8,.01,21,0)
^.001^1^1^3111031^^^^
"^DD",2005.8,2005.8,.01,21,1,0)
This is the institution associated with an action performed on an Imaging file.
"^DD",2005.8,2005.8,.01,"DT")
3111018
"^DD",2005.8,2005.8,.01,"V",0)
^.12P^1^1
"^DD",2005.8,2005.8,.01,"V",1,0)
4^VA institution entry.^1^VA^^n
"^DD",2006.1,2006.1,0)
FIELD^^201^80
"^DD",2006.1,2006.1,0,"DDA")
N
"^DD",2006.1,2006.1,0,"DT")
3051116
"^DD",2006.1,2006.1,0,"IX","AC",2006.1,124)

"^DD",2006.1,2006.1,0,"IX","AD",2006.1,125)

"^DD",2006.1,2006.1,0,"IX","AE",2006.1,10)

"^DD",2006.1,2006.1,0,"IX","B",2006.1,.01)

"^DD",2006.1,2006.1,0,"IX","C",2006.12,.01)

"^DD",2006.1,2006.1,0,"NM","IMAGING SITE PARAMETERS")

"^DD",2006.1,2006.1,0,"PT",2005.2,.04)

"^DD",2006.1,2006.1,0,"PT",2006.03,.04)

"^DD",2006.1,2006.1,0,"PT",2006.031,.04)

"^DD",2006.1,2006.1,0,"PT",2006.8,.04)

"^DD",2006.1,2006.1,0,"PT",2006.81,.04)

"^DD",2006.1,2006.1,0,"PT",2006.82,.04)

"^DD",2006.1,2006.1,0,"PT",2006.917,.01)

"^DD",2006.1,2006.1,0,"PT",2006.923,3)

"^DD",2006.1,2006.1,0,"PT",2006.924,2)

"^DD",2006.1,2006.1,0,"PT",2006.925,2)

"^DD",2006.1,2006.1,0,"VRPK")
MAG
"^DD",2006.1,2006.1,.01,0)
INSTITUTION NAME^RP4X^DIC(4,^0;1^I $D(^MAG(2006.1,"B",X)) K X
"^DD",2006.1,2006.1,.01,.1)
INSTITUTION NAME
"^DD",2006.1,2006.1,.01,1,0)
^.1
"^DD",2006.1,2006.1,.01,1,1,0)
2006.1^B
"^DD",2006.1,2006.1,.01,1,1,1)
S ^MAG(2006.1,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.1,.01,1,1,2)
K ^MAG(2006.1,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.1,.01,3)
Answer must be 3-30 characters in length
"^DD",2006.1,2006.1,.01,22)

"^DD",2006.1,2006.1,.01,"DT")
3050603
"^DD",2006.1,2006.1,.02,0)
CURRENT NAMESPACE^RFX^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>45!($L(X)<1) X
"^DD",2006.1,2006.1,.02,3)
Answer must be 1-45 characters in length.
"^DD",2006.1,2006.1,.02,21,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1,.02,21,1,0)
The Image file is 14 characters. Each facility has its own
"^DD",2006.1,2006.1,.02,21,2,0)
unique namespace (e.g., Washington is WAS, Baltimore is BAL).
"^DD",2006.1,2006.1,.02,"DT")
3020411
"^DD",2006.1,2006.1,.03,0)
IMAGE NETWORK WRITE LOCATION^P2005.2^MAG(2005.2,^0;3^Q
"^DD",2006.1,2006.1,.03,3)
Current Network Write Location for Image Storage
"^DD",2006.1,2006.1,.03,21,0)
^.001^3^3^3100308^^^
"^DD",2006.1,2006.1,.03,21,1,0)
This field identifies the current network share for image file
"^DD",2006.1,2006.1,.03,21,2,0)
captures and archive retrieval.  This field will need to be 
"^DD",2006.1,2006.1,.03,21,3,0)
manually changed when a share reaches low water mark.
"^DD",2006.1,2006.1,.03,"DT")
2930909
"^DD",2006.1,2006.1,.031,0)
CURRENT RAID GROUP^*P2005.2'X^MAG(2005.2,^0;10^S DIC("S")="I $P(^(0),U,7)=""GRP""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,.031,12)
This selection should be restricted to the 'GRP' storage type.
"^DD",2006.1,2006.1,.031,12.1)
I $P(^(0),U,7)="GRP"
"^DD",2006.1,2006.1,.031,21,0)
^^3^3^3100308^
"^DD",2006.1,2006.1,.031,21,1,0)
This field indicates the RAID group of shares that the system is
"^DD",2006.1,2006.1,.031,21,2,0)
currently writing to.  This group is an entry in the NETWORK 
"^DD",2006.1,2006.1,.031,21,3,0)
LOCATION file and has a GRP storage type.
"^DD",2006.1,2006.1,.031,"DT")
3090318
"^DD",2006.1,2006.1,.04,0)
ASSOCIATED INSTITUTIONS^2006.12P^^INSTS;0
"^DD",2006.1,2006.1,.04,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1,.04,21,1,0)
Through the use of the subfield's whole file cross-reference 
"^DD",2006.1,2006.1,.04,21,2,0)
this set of values will allow a site to make use of the imaging 
"^DD",2006.1,2006.1,.04,21,3,0)
network of a second institution to store and support images.
"^DD",2006.1,2006.1,.07,0)
GCC EXPORT LOC^*P2005.2'X^MAG(2005.2,^0;7^S DIC("S")="I $P(^(0),U,6,7)=""1^GCC""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,.07,3)
Enter the GCC EXPORT network share.
"^DD",2006.1,2006.1,.07,12)
Select GCC Network locations only.
"^DD",2006.1,2006.1,.07,12.1)
S DIC("S")="I $P(^(0),U,6,7)=""1^GCC"""
"^DD",2006.1,2006.1,.07,21,0)
^.001^2^2^3100308^^^^
"^DD",2006.1,2006.1,.07,21,1,0)
This field identifies the external network share for Generic 
"^DD",2006.1,2006.1,.07,21,2,0)
Carbon Copy (GCC) where image files are copied to.
"^DD",2006.1,2006.1,.07,"DT")
3041102
"^DD",2006.1,2006.1,.08,0)
IMAGE NETWORK IMPORT LOCATION^P2005.2^MAG(2005.2,^0;8^Q
"^DD",2006.1,2006.1,.08,3)
Enter the Network Location to which Images are imported.
"^DD",2006.1,2006.1,.08,21,0)
^.001^2^2^3100308^^^^
"^DD",2006.1,2006.1,.08,21,1,0)
This field identifies the IMPORT network share where the IMPORT 
"^DD",2006.1,2006.1,.08,21,2,0)
queues are copied to. This share is within the local Imaging Network.
"^DD",2006.1,2006.1,.08,"DT")
2940412
"^DD",2006.1,2006.1,.09,0)
SITE CODE^F^^0;9^K:$L(X)>3!($L(X)<3)!'(X?3UN) X
"^DD",2006.1,2006.1,.09,3)
The three-letter network abbreviation for the site.
"^DD",2006.1,2006.1,.09,21,0)
^^4^4^2981223^^
"^DD",2006.1,2006.1,.09,21,1,0)
This is a unique identifying string for the site where the Imaging Server
"^DD",2006.1,2006.1,.09,21,2,0)
is installed.  By convention, the abbreviation should correspond to the
"^DD",2006.1,2006.1,.09,21,3,0)
3-character string used for the site in naming the file servers.  E.g.,
"^DD",2006.1,2006.1,.09,21,4,0)
for Washington, D.C., the code is "WAS", corresponding to vhaWASimm1.
"^DD",2006.1,2006.1,.09,"DT")
2981223
"^DD",2006.1,2006.1,1.01,0)
PACS INTERFACE SWITCH^S^0:OFF PACS INTERFACE;1:ON PACS INTERFACE;^PACS;1^Q
"^DD",2006.1,2006.1,1.01,3)
DICOM Gateway INTERFACE SWITCH - Set ON/OFF
"^DD",2006.1,2006.1,1.01,21,0)
^^4^4^3001006^^
"^DD",2006.1,2006.1,1.01,21,1,0)
This field is "NULL" if there is no DICOM Gateway interface. If there is a
"^DD",2006.1,2006.1,1.01,21,2,0)
DICOM Gateway, this field serves as a switch to turn the interface ON or
"^DD",2006.1,2006.1,1.01,21,3,0)
OFF. If it is OFF no messages will be transmitted from VistA to the DICOM
"^DD",2006.1,2006.1,1.01,21,4,0)
Gateway; if ON, then the messages will be transmitted.
"^DD",2006.1,2006.1,1.01,23,0)
^.001^2^2^3001005^^
"^DD",2006.1,2006.1,1.01,23,1,0)
The routines to generate/move HL7 messages to the PACS MESSAGE file will
"^DD",2006.1,2006.1,1.01,23,2,0)
check the existence of this entry before processing. 
"^DD",2006.1,2006.1,1.01,"DT")
3001006
"^DD",2006.1,2006.1,1.02,0)
PACS DIRECTORY^P2005.2^MAG(2005.2,^PACS;2^Q
"^DD",2006.1,2006.1,1.02,3)
Enter Network Location where PACS images are written.
"^DD",2006.1,2006.1,1.02,21,0)
^.001^3^3^3100908^^^^
"^DD",2006.1,2006.1,1.02,21,1,0)
This field identifies the DICOM Gateway network location share 
"^DD",2006.1,2006.1,1.02,21,2,0)
where PACS images are written by the Commercial PACS SYSTEM, 
"^DD",2006.1,2006.1,1.02,21,3,0)
and where VistA first reads them.
"^DD",2006.1,2006.1,1.02,23,0)
^.001^6^6^3100908^^^^
"^DD",2006.1,2006.1,1.02,23,1,0)
The PACS SYSTEM, to which VistA is interfaced, will write images
"^DD",2006.1,2006.1,1.02,23,2,0)
to a designated network location, as defined by this field which 
"^DD",2006.1,2006.1,1.02,23,3,0)
can be changed if necessary. VistA will read from the directory 
"^DD",2006.1,2006.1,1.02,23,4,0)
specified by this field. It points to the Network location file -
"^DD",2006.1,2006.1,1.02,23,5,0)
so the full network location must be defined in that file for this
"^DD",2006.1,2006.1,1.02,23,6,0)
to work.
"^DD",2006.1,2006.1,1.02,"DT")
2940411
"^DD",2006.1,2006.1,1.03,0)
PACS IMAGE WRITE LOCATION^P2005.2^MAG(2005.2,^PACS;3^Q
"^DD",2006.1,2006.1,1.03,3)
Enter Network location where converted DICOM IMAGES are written.
"^DD",2006.1,2006.1,1.03,21,0)
^.001^4^4^3100308^^^^
"^DD",2006.1,2006.1,1.03,21,1,0)
This field identifies the current write network share for the 
"^DD",2006.1,2006.1,1.03,21,2,0)
DICOM Image Gateways. DICOM images are first read from the
"^DD",2006.1,2006.1,1.03,21,3,0)
DICOM directory and later converted and copied to the network
"^DD",2006.1,2006.1,1.03,21,4,0)
location specified by this field.
"^DD",2006.1,2006.1,1.03,"DT")
3001006
"^DD",2006.1,2006.1,2.01,0)
JUKEBOX WRITE LOCATION^*P2005.2'X^MAG(2005.2,^1;6^S DIC("S")="I $P(^(0),U,6,7)[""1^WORM"""  D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,2.01,12)
This Network Location selection must be an archival type so designated by the term "WORM" and have an 'On Line' OPERATIONAL STATUS.
"^DD",2006.1,2006.1,2.01,12.1)
S DIC("S")="I $P(^(0),U,6,7)[""1^WORM"""
"^DD",2006.1,2006.1,2.01,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1,2.01,21,1,0)
This field identifies the JUKEBOX 'current write' network
"^DD",2006.1,2006.1,2.01,21,2,0)
share that will receive the Background Processor JUKEBOX
"^DD",2006.1,2006.1,2.01,21,3,0)
queues for newly acquired Image files. 
"^DD",2006.1,2006.1,2.01,"DT")
3071227
"^DD",2006.1,2006.1,3.01,0)
IHE PACS HL7 INTERFACE ACTIVE^S^Y:YES;N:NO;^IHE;1^Q
"^DD",2006.1,2006.1,3.01,3)
Enter 'Y' to activate IHE-based HL7 messaging, or 'N' to retain legacy (HL7 V2.1) messaging.
"^DD",2006.1,2006.1,3.01,21,0)
^.001^3^3^3100209^^
"^DD",2006.1,2006.1,3.01,21,1,0)
This field contains a flag that indicates whether HL7 ADT messages should 
"^DD",2006.1,2006.1,3.01,21,2,0)
be sent using the IHE-based interface developed in Imaging Patch 
"^DD",2006.1,2006.1,3.01,21,3,0)
MAG*3.0*49.
"^DD",2006.1,2006.1,3.01,"DT")
3060120
"^DD",2006.1,2006.1,6,0)
TRACK ABSTRACT ACCESSES^S^1:YES;0:NO;^1;3^Q
"^DD",2006.1,2006.1,6,3)
Enter YES to use abstract accesses in determining archive times
"^DD",2006.1,2006.1,6,21,0)
^.001^5^5^3100308^^^^
"^DD",2006.1,2006.1,6,21,1,0)
This field controls whether user access to image abstracts will
"^DD",2006.1,2006.1,6,21,2,0)
cause the LAST ACCESS DATE field in the Image file to be updated.
"^DD",2006.1,2006.1,6,21,3,0)
The LAST ACCESS DATE field is used to determine when full and
"^DD",2006.1,2006.1,6,21,4,0)
abstract images are removed from magnetic disks and become
"^DD",2006.1,2006.1,6,21,5,0)
available only from optical disk.
"^DD",2006.1,2006.1,6,"DT")
3001006
"^DD",2006.1,2006.1,8,0)
PURGE-RETENTION DAYS FULL FILE^RNJ5,0^^1;2^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.1,2006.1,8,3)
Type a number between 0 and 99999, 0 Decimal Digits
"^DD",2006.1,2006.1,8,21,0)
^.001^5^5^3100308^^^^
"^DD",2006.1,2006.1,8,21,1,0)
This field is used by the Background Processor Purge to
"^DD",2006.1,2006.1,8,21,2,0)
determine the number of days to retain full image files. All
"^DD",2006.1,2006.1,8,21,3,0)
FULL images that have not been accessed in this many days
"^DD",2006.1,2006.1,8,21,4,0)
will be removed from magnetic storage by the Background
"^DD",2006.1,2006.1,8,21,5,0)
Processor Purge.
"^DD",2006.1,2006.1,8,"DT")
3060614
"^DD",2006.1,2006.1,9,0)
RETENTION DAYS HL7 & DICOM^RNJ6,0X^^1;5^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1.N) X
"^DD",2006.1,2006.1,9,3)
Type a number between 1 and 999999, 0 Decimal Digits
"^DD",2006.1,2006.1,9,21,0)
^^17^17^3110208^
"^DD",2006.1,2006.1,9,21,1,0)
This field is used as the default value, in days, by the
"^DD",2006.1,2006.1,9,21,2,0)
DICOM Text Gateway for three different user menu driven purges.
"^DD",2006.1,2006.1,9,21,3,0)
 
"^DD",2006.1,2006.1,9,21,4,0)
1) This field is used by the Purge Old Modality Worklist Entries
"^DD",2006.1,2006.1,9,21,5,0)
menu option to determine the number of retention days from the date
"^DD",2006.1,2006.1,9,21,6,0)
of creation of the Modality Worklist Entries.
"^DD",2006.1,2006.1,9,21,7,0)
 
"^DD",2006.1,2006.1,9,21,8,0)
2) This field is used by the Purge Old DICOM Message Files menu
"^DD",2006.1,2006.1,9,21,9,0)
option to determine the number of retention days from the date
"^DD",2006.1,2006.1,9,21,10,0)
of creation of the DICOM messages that were sent to commercial PACS.
"^DD",2006.1,2006.1,9,21,11,0)
 
"^DD",2006.1,2006.1,9,21,12,0)
3) This field is used by the Purge Old HL7 Transaction Global Nodes
"^DD",2006.1,2006.1,9,21,13,0)
menu option to determine the number of retention days from the date
"^DD",2006.1,2006.1,9,21,14,0)
of creation of the HL7 messages sent from VistA to the DICOM Text Gateway.
"^DD",2006.1,2006.1,9,21,15,0)
                                
"^DD",2006.1,2006.1,9,21,16,0)
This value may be overridden by the user when executing any of these 
"^DD",2006.1,2006.1,9,21,17,0)
menu options.
"^DD",2006.1,2006.1,9,"DT")
3110208
"^DD",2006.1,2006.1,10,0)
SERVER TASK^NJ10,0^^1;7^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,10,1,0)
^.1
"^DD",2006.1,2006.1,10,1,1,0)
2006.1^AE^MUMPS
"^DD",2006.1,2006.1,10,1,1,1)
D SAME^MAGDRPC2(1,DA,1,7,X)
"^DD",2006.1,2006.1,10,1,1,2)
D SAME^MAGDRPC2(0,DA,1,7,X)
"^DD",2006.1,2006.1,10,1,1,"%D",0)
^^3^3^3051025^
"^DD",2006.1,2006.1,10,1,1,"%D",1,0)
This MUMPS cross reference is really a trigger that causes
"^DD",2006.1,2006.1,10,1,1,"%D",2,0)
the values for this field to be the same for all entries
"^DD",2006.1,2006.1,10,1,1,"%D",3,0)
in the Imaging Site Parameter file.
"^DD",2006.1,2006.1,10,1,1,"DT")
3051025
"^DD",2006.1,2006.1,10,3)
Enter the task number for the monthly site report, type a number between 0 and 9999999999, 0 Decimal Digits
"^DD",2006.1,2006.1,10,21,0)
^.001^9^9^3100308^^^
"^DD",2006.1,2006.1,10,21,1,0)
This field identifies the Kernel scheduled task number for the
"^DD",2006.1,2006.1,10,21,2,0)
monthly site report.  The Background Processor Monitor utility
"^DD",2006.1,2006.1,10,21,3,0)
(menu option [MAGQ BPMONITOR]) reads and updates this field 
"^DD",2006.1,2006.1,10,21,4,0)
when verifying the monthly site report has been tasked or 
"^DD",2006.1,2006.1,10,21,5,0)
re-tasked by this utility.
"^DD",2006.1,2006.1,10,21,6,0)
 
"^DD",2006.1,2006.1,10,21,7,0)
This automated process reports version and Imaging system 
"^DD",2006.1,2006.1,10,21,8,0)
statusback to the development site in order to serve the site 
"^DD",2006.1,2006.1,10,21,9,0)
better.
"^DD",2006.1,2006.1,10,"DT")
3051025
"^DD",2006.1,2006.1,11,0)
PERCENT SERVER RESERVE^NJ2,0X^^1;8^K:+X'=X!(X>50)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,11,3)
Enter the free space percentage, type a number between 1 and 50, 0 Decimal Digits
"^DD",2006.1,2006.1,11,21,0)
^.001^7^7^3100308^^^
"^DD",2006.1,2006.1,11,21,1,0)
This field allows sites to increase the amount of space that 
"^DD",2006.1,2006.1,11,21,2,0)
is maintained in reserve for each individual Image server share.  
"^DD",2006.1,2006.1,11,21,3,0)
The minimum value is 1. The default value is 5.  
"^DD",2006.1,2006.1,11,21,4,0)
The RPC, MAGQ FS CHNGE, uses this value to determine the RAID 
"^DD",2006.1,2006.1,11,21,5,0)
Group advance and is part of the automatic Purge algorithm.  
"^DD",2006.1,2006.1,11,21,6,0)
When this value cannot be maintained, a CRITICAL LOW MESSAGE 
"^DD",2006.1,2006.1,11,21,7,0)
is triggered. 
"^DD",2006.1,2006.1,11,"DT")
3050608
"^DD",2006.1,2006.1,11.9,0)
DATE OF LAST CRITICAL MESSAGE^DO^^3;11^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,11.9,2)
S Y(0)=Y S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,11.9,2.1)
S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,11.9,3)
This date/time field is automatically set each time a critical message is sent.
"^DD",2006.1,2006.1,11.9,21,0)
^.001^4^4^3100308^^^^
"^DD",2006.1,2006.1,11.9,21,1,0)
It is a parameter used in combination with the CRITICAL LOW MESSAGE
"^DD",2006.1,2006.1,11.9,21,2,0)
INTERVAL to determine if it is appropriate to send a new message 
"^DD",2006.1,2006.1,11.9,21,3,0)
when the VistA cache space falls below the PERCENT SERVER RESERVE
"^DD",2006.1,2006.1,11.9,21,4,0)
value. This field should not be edited directly by a user.
"^DD",2006.1,2006.1,11.9,"DT")
3080814
"^DD",2006.1,2006.1,12,0)
FILE TYPES^2006.112^^2;0
"^DD",2006.1,2006.1,12,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1,12,21,1,0)
This field identifies acceptable file types on image captures and is read 
"^DD",2006.1,2006.1,12,21,2,0)
by the Background Processor to migrate files across the network shares 
"^DD",2006.1,2006.1,12,21,3,0)
and jukeboxes.
"^DD",2006.1,2006.1,12.5,0)
MULTI NAMESPACE^2006.11^^4;0
"^DD",2006.1,2006.1,12.5,21,0)
^.001^3^3^3100325^^^^
"^DD",2006.1,2006.1,12.5,21,1,0)
This multiple field is used to store all previously used image
"^DD",2006.1,2006.1,12.5,21,2,0)
prefixes from the CURRENT NAMESPACE field. Any time the CURRENT NAMESPACE
"^DD",2006.1,2006.1,12.5,21,3,0)
field is changed, enter the previous name in this multiple field.
"^DD",2006.1,2006.1,12.5,23,0)
^.001^3^3^3100325^^^^
"^DD",2006.1,2006.1,12.5,23,1,0)
This multiple field is used to store all previously used image
"^DD",2006.1,2006.1,12.5,23,2,0)
prefixes from the CURRENT NAMESPACE field. Any time the CURRENT NAMESPACE
"^DD",2006.1,2006.1,12.5,23,3,0)
field is changed, enter the previous name in this multiple field.
"^DD",2006.1,2006.1,20,0)
NO AUTOWRITE UPDATE^S^0:AUTOWRITE UPDATE OK;1:NO AUTOWRITE UPDATE;^1;10^Q
"^DD",2006.1,2006.1,20,21,0)
^.001^7^7^3100308^^^^
"^DD",2006.1,2006.1,20,21,1,0)
This field enables or disables the Background Processor function
"^DD",2006.1,2006.1,20,21,2,0)
which evaluates the space availability on each of the online magnetic
"^DD",2006.1,2006.1,20,21,3,0)
shares and assigns the current write location to the share with the 
"^DD",2006.1,2006.1,20,21,4,0)
greatest space available both for PACS and regular image capture.
"^DD",2006.1,2006.1,20,21,5,0)
 
"^DD",2006.1,2006.1,20,21,6,0)
RPC, MAGQ FS CHNGE, utilizes this field when evaluating the current
"^DD",2006.1,2006.1,20,21,7,0)
write location.
"^DD",2006.1,2006.1,20,"DT")
2980512
"^DD",2006.1,2006.1,22,0)
PURGE-RETENTION DAYS BIG FILE^NJ5,0X^^3;2^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,22,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",2006.1,2006.1,22,21,0)
^.001^4^4^3100308^^^
"^DD",2006.1,2006.1,22,21,1,0)
This field is used by the Background Processor purge to determine
"^DD",2006.1,2006.1,22,21,2,0)
the number of days to retain BIG files. All BIG images that have 
"^DD",2006.1,2006.1,22,21,3,0)
not been accessed in this many days will be removed from magnetic
"^DD",2006.1,2006.1,22,21,4,0)
storage by the Background Processor purge.
"^DD",2006.1,2006.1,22,"DT")
3090211
"^DD",2006.1,2006.1,23,0)
PURGE-RETENTION DAYS ABS FILE^NJ5,0^^3;3^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.1,2006.1,23,3)
Type a number between 0 and 99999, 0 Decimal Digits
"^DD",2006.1,2006.1,23,21,0)
^.001^4^4^3100308^^^
"^DD",2006.1,2006.1,23,21,1,0)
This field is used by the Background Processor purge to determine
"^DD",2006.1,2006.1,23,21,2,0)
the number of days to retain ABS files. All ABS images that have
"^DD",2006.1,2006.1,23,21,3,0)
not been accessed in this many days will be removed from magnetic
"^DD",2006.1,2006.1,23,21,4,0)
storage by the Background Processor purge.
"^DD",2006.1,2006.1,23,"DT")
3060614
"^DD",2006.1,2006.1,24,0)
PURGE-RETENTION DAYS PHOTOID^NJ5,0^^3;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.1,2006.1,24,3)
Type a number between 0 and 99999, 0 Decimal Digits
"^DD",2006.1,2006.1,24,21,0)
^.001^5^5^3100308^^
"^DD",2006.1,2006.1,24,21,1,0)
This field is used by the Background Processor purge to determine
"^DD",2006.1,2006.1,24,21,2,0)
the number of days to retain images designate as PHOTO IDs by the
"^DD",2006.1,2006.1,24,21,3,0)
Image file. All PhotoID images that have not been accessed  in this
"^DD",2006.1,2006.1,24,21,4,0)
many days will be removed from magnetic storage by the Background 
"^DD",2006.1,2006.1,24,21,5,0)
Processor purge.
"^DD",2006.1,2006.1,24,"DT")
3090521
"^DD",2006.1,2006.1,25,0)
IMPORT QUEUE SECURITY^S^0:OFF;1:ON;^3;12^Q
"^DD",2006.1,2006.1,25,21,0)
^^1^1^3050608^
"^DD",2006.1,2006.1,25,21,1,0)
This field enables network security for the Import Queue.
"^DD",2006.1,2006.1,25,"DT")
3050608
"^DD",2006.1,2006.1,50,0)
NET USERNAME^F^^NET;1^K:$L(X)>30!($L(X)<3) X
"^DD",2006.1,2006.1,50,3)
Answer must be 3-30 characters in length.
"^DD",2006.1,2006.1,50,21,0)
^.001^1^1^3000922^^^
"^DD",2006.1,2006.1,50,21,1,0)
This field contains the NT username that the Imaging application uses to access images from the Image shares.
"^DD",2006.1,2006.1,50,"DT")
2961119
"^DD",2006.1,2006.1,51,0)
NET PASSWORD^FXO^^NET;2^K:$L(X)>30!($L(X)<3) X S MAGPAS=X S X=$$ENCRYP^ROUTINE(MAGPAS)
"^DD",2006.1,2006.1,51,2)
S Y(0)=Y S Y="<Hidden>"
"^DD",2006.1,2006.1,51,2.1)
S Y="<Hidden>"
"^DD",2006.1,2006.1,51,3)
The encrypted network password (between 3 and 30 characters in length) for the NET USERNAME entity.
"^DD",2006.1,2006.1,51,21,0)
^.001^2^2^3000922^^^
"^DD",2006.1,2006.1,51,21,1,0)
This field contains the network password for the NET USERNAME entity.  The
"^DD",2006.1,2006.1,51,21,2,0)
password is encrypted.
"^DD",2006.1,2006.1,51,23,0)
^.001^2^2^3000922^^
"^DD",2006.1,2006.1,51,23,1,0)
This field must be set to the NT password for the IU account.
"^DD",2006.1,2006.1,51,23,2,0)
It will be encrypted before it is stored in the system.
"^DD",2006.1,2006.1,51,"DT")
2991130
"^DD",2006.1,2006.1,52,0)
NET UPDATE DIRECTORY^P2005.2'^MAG(2005.2,^NET;3^Q
"^DD",2006.1,2006.1,52,21,0)
^^8^8^2970722^
"^DD",2006.1,2006.1,52,21,1,0)
This is the directory where Imaging releases, to be tested, are copied.
"^DD",2006.1,2006.1,52,21,2,0)
Workstations with the "WRKS RUNS TEST UPDATES" field set to True will
"^DD",2006.1,2006.1,52,21,3,0)
check the directory, defined in this field, for the latest Imaging
"^DD",2006.1,2006.1,52,21,4,0)
software to test.  A site can limit the number of workstations that will
"^DD",2006.1,2006.1,52,21,5,0)
use this procedure to test new versions of the software.  When a site is
"^DD",2006.1,2006.1,52,21,6,0)
satisfied with the new version, it copies MAGSETUP.EXE to the NETUPDATE
"^DD",2006.1,2006.1,52,21,7,0)
DIRECTORY where all workstations will be updated. This field points to the
"^DD",2006.1,2006.1,52,21,8,0)
Network Location file (2005.2).
"^DD",2006.1,2006.1,52,"DT")
2970421
"^DD",2006.1,2006.1,53,0)
NET UPDATE TEST DIRECTORY^P2005.2'^MAG(2005.2,^NET;4^Q
"^DD",2006.1,2006.1,53,21,0)
^^9^9^2970421^
"^DD",2006.1,2006.1,53,21,1,0)
This is the directory where Imaging releases to be tested are
"^DD",2006.1,2006.1,53,21,2,0)
copied.  Workstations with NET UPDATE TEST DIRECTORY
"^DD",2006.1,2006.1,53,21,3,0)
Field of the IMAGING WORKSTATIONS file = TRUE
"^DD",2006.1,2006.1,53,21,4,0)
will check this directory for new versions of
"^DD",2006.1,2006.1,53,21,5,0)
Imaging (MAGSETUP.EXE)
"^DD",2006.1,2006.1,53,21,6,0)
A site can limit the number of workstations that will test new
"^DD",2006.1,2006.1,53,21,7,0)
versions of imaging this way.  When a site is satisfied with the
"^DD",2006.1,2006.1,53,21,8,0)
new version, they copy MAGSETUP.EXE to the NET UPDATE DIRECTORY where
"^DD",2006.1,2006.1,53,21,9,0)
all workstations will update from.
"^DD",2006.1,2006.1,53,"DT")
2970421
"^DD",2006.1,2006.1,55,0)
NET SITE SERVICE^P2005.2'^MAG(2005.2,^NET;5^Q
"^DD",2006.1,2006.1,55,3)
This network location is used to access the VistA Site Service.  The VistA Site Service is used by Remote Image Views to gain access to remote sites.
"^DD",2006.1,2006.1,55,21,0)
^.001^2^2^3050722^^
"^DD",2006.1,2006.1,55,21,1,0)
The VistA Site Service is used by Remote Image Views to gain access
"^DD",2006.1,2006.1,55,21,2,0)
to remote sites.
"^DD",2006.1,2006.1,55,"DT")
3050722
"^DD",2006.1,2006.1,60,0)
AUTOPURGE^S^0:OFF;1:ON;^BPPURGE;1^Q
"^DD",2006.1,2006.1,60,3)
This value is used by the Background processor to determine whether to start a purge process when the Vista Cache low water mark has been reached.
"^DD",2006.1,2006.1,60,23,0)
^.001^7^7^3100308^^^
"^DD",2006.1,2006.1,60,23,1,0)
This enables the Background Processor the ability to launch the
"^DD",2006.1,2006.1,60,23,2,0)
Purge when the VistA RAID low water mark has been reached. This 
"^DD",2006.1,2006.1,60,23,3,0)
field is also required for the Scheduled Purge. 
"^DD",2006.1,2006.1,60,23,4,0)
 
"^DD",2006.1,2006.1,60,23,5,0)
The RPC, MAGQ FS CHNGE, evaluates this field when setting the
"^DD",2006.1,2006.1,60,23,6,0)
current write location, and is part of the automatic Purge
"^DD",2006.1,2006.1,60,23,7,0)
algorithm.
"^DD",2006.1,2006.1,60,"DT")
3081215
"^DD",2006.1,2006.1,60.1,0)
PURGE BY^S^DA:DATE ACCESSED;DC:DATE CREATED;DM:DATE MODIFIED;^BPPURGE;2^Q
"^DD",2006.1,2006.1,60.1,3)
This will determine the criteria applied to the purge logic.
"^DD",2006.1,2006.1,60.1,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1,60.1,21,1,0)
This parameter is used by the Purge application. These date
"^DD",2006.1,2006.1,60.1,21,2,0)
criteria apply to the dates within the Master File Table of
"^DD",2006.1,2006.1,60.1,21,3,0)
the network share being purged. 
"^DD",2006.1,2006.1,60.1,"DT")
3081215
"^DD",2006.1,2006.1,60.2,0)
EXPRESS PURGE^S^0:OFF;1:ON;^BPPURGE;3^Q
"^DD",2006.1,2006.1,60.2,3)
This field enables and disables the Express purge method.
"^DD",2006.1,2006.1,60.2,21,0)
^.001^3^3^3100308^^^
"^DD",2006.1,2006.1,60.2,21,1,0)
This enables the Purge application to expedite the purge on
"^DD",2006.1,2006.1,60.2,21,2,0)
a given share if no files are actively being purged.  This works
"^DD",2006.1,2006.1,60.2,21,3,0)
with field EXPRESS PURGE RATE (#60.3).
"^DD",2006.1,2006.1,60.2,"DT")
3081215
"^DD",2006.1,2006.1,60.3,0)
EXPRESS PURGE RATE^NJ7,0^^BPPURGE;4^K:+X'=X!(X>9000000)!(X<10000)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,60.3,3)
Enter the number of idle Image file entries to be evaluated, type a number between 10000 and 9000000.
"^DD",2006.1,2006.1,60.3,21,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1,60.3,21,1,0)
This value determines if there is enough idle purge activity
"^DD",2006.1,2006.1,60.3,21,2,0)
on a share to cease processing on the share.  
"^DD",2006.1,2006.1,60.3,"DT")
3090218
"^DD",2006.1,2006.1,60.4,0)
LAST PURGE BPWS^P2006.8'^MAG(2006.8,^BPPURGE;5^Q
"^DD",2006.1,2006.1,60.4,3)
This is the last BP Server to run a purge.
"^DD",2006.1,2006.1,60.4,23,0)
^^8^8^3100308^
"^DD",2006.1,2006.1,60.4,23,1,0)
This field references the BP Server that executed the Purge
"^DD",2006.1,2006.1,60.4,23,2,0)
process and therefore has the log files that document that 
"^DD",2006.1,2006.1,60.4,23,3,0)
activity.  The intention of this field is to assist the support
"^DD",2006.1,2006.1,60.4,23,4,0)
staff in locating the BP Purge activity log files for the 
"^DD",2006.1,2006.1,60.4,23,5,0)
last purge.
"^DD",2006.1,2006.1,60.4,23,6,0)
 
"^DD",2006.1,2006.1,60.4,23,7,0)
This field is updated by the BP Purge application when it 
"^DD",2006.1,2006.1,60.4,23,8,0)
completes the purge activity.
"^DD",2006.1,2006.1,60.4,"DT")
3081215
"^DD",2006.1,2006.1,60.5,0)
RAID PURGE FACTOR^NJ3,0^^BPPURGE;8^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.1,2006.1,60.5,3)
Type a number between 0 and 100, 0 Decimal Digits
"^DD",2006.1,2006.1,60.5,21,0)
^.001^6^6^3100308^^^
"^DD",2006.1,2006.1,60.5,21,1,0)
This factor (a number between 0 and 100), when multiplied by 
"^DD",2006.1,2006.1,60.5,21,2,0)
the Percent Server Reserve (#11), determines the automatic 
"^DD",2006.1,2006.1,60.5,21,3,0)
purge event triggered by the BP Queue Processor.
"^DD",2006.1,2006.1,60.5,21,4,0)
 
"^DD",2006.1,2006.1,60.5,21,5,0)
The RPC, MAGQ FS CHNGE, uses this value and is part of the
"^DD",2006.1,2006.1,60.5,21,6,0)
automatic Purge algorithm.
"^DD",2006.1,2006.1,60.5,"DT")
3090218
"^DD",2006.1,2006.1,61,0)
SCHEDULED PURGE^S^0:OFF;1:ON;^BPPURGE;6^Q
"^DD",2006.1,2006.1,61,3)
This value is used to determine whether the BP Queue Processor will trigger a purge process on a scheduled frequency.
"^DD",2006.1,2006.1,61,21,0)
^.001^5^5^3100308^^^^
"^DD",2006.1,2006.1,61,21,1,0)
This field is used to determine whether the BP Queue Processor
"^DD",2006.1,2006.1,61,21,2,0)
enables a scheduled purge process. The frequency is determined
"^DD",2006.1,2006.1,61,21,3,0)
by the frequency days and the date of the last purge. A default
"^DD",2006.1,2006.1,61,21,4,0)
value of 28 days is used if the frequency value is null.  A 
"^DD",2006.1,2006.1,61,21,5,0)
default value of 2400 hours is used if the PURGE TIME is not set.
"^DD",2006.1,2006.1,61,"DT")
3081215
"^DD",2006.1,2006.1,61.1,0)
DATE OF LAST PURGE^DXO^^BPPURGE;7^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,61.1,2)
S Y(0)=Y S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,61.1,2.1)
S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,61.1,3)
Last scheduled purge date. (This is not a user editable field.)
"^DD",2006.1,2006.1,61.1,21,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1,61.1,21,1,0)
This is the date of a last scheduled purge process was executed
"^DD",2006.1,2006.1,61.1,21,2,0)
and is automatically set at the beginning of a scheduled purge.
"^DD",2006.1,2006.1,61.1,23,0)
^^2^2^3100308^
"^DD",2006.1,2006.1,61.1,23,1,0)
This parameter is used by RPC, MAGQ FS CHNGE,when evaluating
"^DD",2006.1,2006.1,61.1,23,2,0)
Scheduled Purge.
"^DD",2006.1,2006.1,61.1,"DT")
3081219
"^DD",2006.1,2006.1,61.2,0)
SCHEDULED PURGE FREQUENCY^NJ3,0^^BPPURGE;9^K:+X'=X!(X>365)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,61.2,3)
Type a number between 1 and 365 days. 
"^DD",2006.1,2006.1,61.2,21,0)
^.001^3^3^3100308^^^
"^DD",2006.1,2006.1,61.2,21,1,0)
When the Scheduled Purge process is enabled, this value in days 
"^DD",2006.1,2006.1,61.2,21,2,0)
(between 1 and 365) is added to the date of the last purge for 
"^DD",2006.1,2006.1,61.2,21,3,0)
the BP Queue Processor to evaluate for launching a purge process.
"^DD",2006.1,2006.1,61.2,"DT")
3081215
"^DD",2006.1,2006.1,61.3,0)
DATE OF SCHEDULED PURGE^DXO^^BPPURGE;10^S %DT="E" D ^%DT S X=Y K:Y<1 X Q:'$P($G(^MAG(2006.1,DA,"BPPURGE")),U,6)  K:(Y<$P($$NOW^XLFDT,".")) X
"^DD",2006.1,2006.1,61.3,2)
S Y(0)=Y S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,61.3,2.1)
S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,61.3,3)
The date may not be to earlier than today.
"^DD",2006.1,2006.1,61.3,21,0)
^.001^4^4^3100308^^^
"^DD",2006.1,2006.1,61.3,21,1,0)
This is the scheduled date of the next scheduled purge.  It is
"^DD",2006.1,2006.1,61.3,21,2,0)
set at the end of an automated purge by adding the SCHEDULE PURGE
"^DD",2006.1,2006.1,61.3,21,3,0)
FREQUENCY (#61.2) parameter to the date of the last purge.  It may
"^DD",2006.1,2006.1,61.3,21,4,0)
be set by the user to establish a new schedule.
"^DD",2006.1,2006.1,61.3,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,61.3,23,1,0)
This parameter is used by RPC MAGQ FS CHNGE when evaluating
"^DD",2006.1,2006.1,61.3,23,2,0)
a scheduled purge. 
"^DD",2006.1,2006.1,61.3,"DT")
3090106
"^DD",2006.1,2006.1,61.4,0)
SCHEDULED PURGE TIME^NJ4,0X^^BPPURGE;11^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>2359)!(X<0) X
"^DD",2006.1,2006.1,61.4,3)
Type a Number between 0 and 2359 (military time).
"^DD",2006.1,2006.1,61.4,21,0)
^.001^5^5^3100308^^^
"^DD",2006.1,2006.1,61.4,21,1,0)
This number (between 0 and 2359) for military time determines
"^DD",2006.1,2006.1,61.4,21,2,0)
the time of day to trigger the Scheduled Purge.  If this number
"^DD",2006.1,2006.1,61.4,21,3,0)
is undefined, the BP Queue Processor uses the default value of 0
"^DD",2006.1,2006.1,61.4,21,4,0)
if the Scheduled Purge option is enabled and the frequency days
"^DD",2006.1,2006.1,61.4,21,5,0)
plus date of last purge threshold are reached.
"^DD",2006.1,2006.1,61.4,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,61.4,23,1,0)
This time is used by RPC, MAGQ FS CHNGE, when evaluating
"^DD",2006.1,2006.1,61.4,23,2,0)
scheduled purge. 
"^DD",2006.1,2006.1,61.4,"DT")
3081215
"^DD",2006.1,2006.1,62,0)
SCHEDULED VERIFIER^S^0:OFF;1:ON;^BPVERIFIER;1^Q
"^DD",2006.1,2006.1,62,3)
This value is monitored by the BP Queue processor to determine if scheduled BP Verifier. 
"^DD",2006.1,2006.1,62,21,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1,62,21,1,0)
This field is used to determine whether the BP Queue Processor
"^DD",2006.1,2006.1,62,21,2,0)
enables a scheduled verifier process.
"^DD",2006.1,2006.1,62,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,62,23,1,0)
This parameter is used by RPC, MAGQ FS CHNGE, when evaluating
"^DD",2006.1,2006.1,62,23,2,0)
scheduled verifier process logic.
"^DD",2006.1,2006.1,62,"DT")
3081219
"^DD",2006.1,2006.1,62.1,0)
DATE OF LAST VERIFY^DO^^BPVERIFIER;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,62.1,2)
S Y(0)=Y S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,62.1,2.1)
S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,62.1,3)
Last scheduled verifier date.  (This is not a user editable field.)
"^DD",2006.1,2006.1,62.1,21,0)
^.001^3^3^3100308^^^
"^DD",2006.1,2006.1,62.1,21,1,0)
This is the date of a last scheduled verifier application and
"^DD",2006.1,2006.1,62.1,21,2,0)
is automatically set at the beginning of a scheduled verifier
"^DD",2006.1,2006.1,62.1,21,3,0)
execution. 
"^DD",2006.1,2006.1,62.1,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,62.1,23,1,0)
This parameter is used by RPC, MAGQ FS CHNGE, when evaluating
"^DD",2006.1,2006.1,62.1,23,2,0)
scheduled verifier.
"^DD",2006.1,2006.1,62.1,"DT")
3081219
"^DD",2006.1,2006.1,62.2,0)
SCHEDULED VERIFIER FREQUENCY^NJ3,0^^BPVERIFIER;3^K:+X'=X!(X>365)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,62.2,3)
Type a number between 1 and 365 days.
"^DD",2006.1,2006.1,62.2,21,0)
^.001^4^4^3100308^^^
"^DD",2006.1,2006.1,62.2,21,1,0)
When the Scheduled Verifier process is enabled, this number
"^DD",2006.1,2006.1,62.2,21,2,0)
in days (between 1 and 365) is added to the date of the last
"^DD",2006.1,2006.1,62.2,21,3,0)
verify for the BP Queue Processor to evaluate in launching
"^DD",2006.1,2006.1,62.2,21,4,0)
a verify process.
"^DD",2006.1,2006.1,62.2,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,62.2,23,1,0)
This parameter is used by RPC, MAGQ FS CHNGE, when evaluating
"^DD",2006.1,2006.1,62.2,23,2,0)
scheduled verifier process logic.
"^DD",2006.1,2006.1,62.2,"DT")
3081219
"^DD",2006.1,2006.1,62.3,0)
DATE OF SCHEDULED VERIFIER^DXO^^BPVERIFIER;4^S %DT="E" D ^%DT S X=Y K:Y<1 X Q:'$P($G(^MAG(2006.1,DA,"BPVERIFIER")),U,1)  K:(Y<$P($$NOW^XLFDT,".")) X
"^DD",2006.1,2006.1,62.3,2)
S Y(0)=Y S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,62.3,2.1)
S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,62.3,3)
This should be date in the future to run your next Verifier process.
"^DD",2006.1,2006.1,62.3,21,0)
^.001^4^4^3100308^^
"^DD",2006.1,2006.1,62.3,21,1,0)
This is evaluated by active BP Processors to trigger a BP
"^DD",2006.1,2006.1,62.3,21,2,0)
Verifier process at the date and time designated by the user.
"^DD",2006.1,2006.1,62.3,21,3,0)
In conjunction with the SCHEDULED VERIFER time, this field 
"^DD",2006.1,2006.1,62.3,21,4,0)
co-defines the timing of this process.
"^DD",2006.1,2006.1,62.3,"DT")
3090106
"^DD",2006.1,2006.1,62.4,0)
SCHEDULED VERIFIER TIME^NJ4,0X^^BPVERIFIER;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>2359)!(X<0) X
"^DD",2006.1,2006.1,62.4,3)
Type a Number between 0 and 2359 (military time).
"^DD",2006.1,2006.1,62.4,21,0)
^.001^5^5^3100308^^^
"^DD",2006.1,2006.1,62.4,21,1,0)
This number (between 0 and 2359) for military time is used to
"^DD",2006.1,2006.1,62.4,21,2,0)
determine the time of the day to trigger the Scheduled Verifier. 
"^DD",2006.1,2006.1,62.4,21,3,0)
If this number is undefined, the BP Verifier uses the default 
"^DD",2006.1,2006.1,62.4,21,4,0)
value of 0 if the Scheduled Verify option is enabled and the 
"^DD",2006.1,2006.1,62.4,21,5,0)
frequency days plus date of last verify threshold are reached.
"^DD",2006.1,2006.1,62.4,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,62.4,23,1,0)
This parameter is used by RPC, MAGQ FS CHNGE, when evaluating
"^DD",2006.1,2006.1,62.4,23,2,0)
scheduled verifier.
"^DD",2006.1,2006.1,62.4,"DT")
3081219
"^DD",2006.1,2006.1,62.5,0)
LAST VERIFY BP WS^P2006.8'^MAG(2006.8,^BPVERIFIER;6^Q
"^DD",2006.1,2006.1,62.5,3)
Last BP Server that exected the Verifier process.
"^DD",2006.1,2006.1,62.5,21,0)
^.001^5^5^3100308^^^
"^DD",2006.1,2006.1,62.5,21,1,0)
This field references the BP Server that executed the Verifier
"^DD",2006.1,2006.1,62.5,21,2,0)
process and therefore has the log files that document that 
"^DD",2006.1,2006.1,62.5,21,3,0)
activity.  The intention of this field is to assist the support
"^DD",2006.1,2006.1,62.5,21,4,0)
staff in locating the BP Verifier activity log files for the 
"^DD",2006.1,2006.1,62.5,21,5,0)
last purge.
"^DD",2006.1,2006.1,62.5,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,62.5,23,1,0)
This field is updated by the BP Purge application when
"^DD",2006.1,2006.1,62.5,23,2,0)
it completes the purge activity.
"^DD",2006.1,2006.1,62.5,"DT")
3081219
"^DD",2006.1,2006.1,62.6,0)
SCHEDULED VERIFY TEXT CHECK^S^0:NO;1:YES;^BPVERIFIER;7^Q
"^DD",2006.1,2006.1,62.6,3)
This value controls whether the scheduled Verifier will check the RAID TXT files.
"^DD",2006.1,2006.1,62.6,21,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1,62.6,21,1,0)
This field enables the BP Verifier to validate the RAID text files
"^DD",2006.1,2006.1,62.6,21,2,0)
for patient identification consistencies.
"^DD",2006.1,2006.1,62.6,"DT")
3090407
"^DD",2006.1,2006.1,63,0)
SCHEDULED RG ADVANCE^S^0:OFF;1:ON;^RGADVANCE;1^Q
"^DD",2006.1,2006.1,63,3)
This switch enables the schedule RAID group advance.
"^DD",2006.1,2006.1,63,21,0)
^.001^4^4^3100308^^^^
"^DD",2006.1,2006.1,63,21,1,0)
This field enables the automatic RAID Group Advance.  It is
"^DD",2006.1,2006.1,63,21,2,0)
necessary to set the date of the next RG ADVANCE DATE (63.3)
"^DD",2006.1,2006.1,63,21,3,0)
and the RG ADVANCE TIME (63.4).  If the RG ADVANCE TIME is 
"^DD",2006.1,2006.1,63,21,4,0)
null, the default is 0.
"^DD",2006.1,2006.1,63,23,0)
^.001^8^8^3100308^^^
"^DD",2006.1,2006.1,63,23,1,0)
The BP Queue Processor advances the current RAID Group during 
"^DD",2006.1,2006.1,63,23,2,0)
the RPC MAGQ FS CHNGE execution. 
"^DD",2006.1,2006.1,63,23,3,0)
The RAID Group advance feature will change the Current RAID 
"^DD",2006.1,2006.1,63,23,4,0)
group (#.031) under the following conditions:
"^DD",2006.1,2006.1,63,23,5,0)
A)  AutoWrite (#20)) is enabled.
"^DD",2006.1,2006.1,63,23,6,0)
B)  The current RAID Group has reached the watermark (#11).
"^DD",2006.1,2006.1,63,23,7,0)
C)  There is enough space in an alternative RAID Group.
"^DD",2006.1,2006.1,63,23,8,0)
D)  The event can be schedule to occur (#63).
"^DD",2006.1,2006.1,63,"DT")
3081219
"^DD",2006.1,2006.1,63.1,0)
RG ADVANCE FREQUENCY^NJ3,0^^RGADVANCE;2^K:+X'=X!(X>365)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,63.1,3)
Type a Number between 1 and 365 days.
"^DD",2006.1,2006.1,63.1,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1,63.1,21,1,0)
This number in days (between 1 and 365) and the RG ADVANCE
"^DD",2006.1,2006.1,63.1,21,2,0)
TIME determine the date and time of the next scheduled RAID
"^DD",2006.1,2006.1,63.1,21,3,0)
Group Advance. 
"^DD",2006.1,2006.1,63.1,"DT")
3081219
"^DD",2006.1,2006.1,63.2,0)
DATE OF LAST RG ADVANCE^DO^^RGADVANCE;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,63.2,2)
S Y(0)=Y S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,63.2,2.1)
S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,63.2,3)
Last scheduled RAID Group Advance execution date. (This is not a user editable field.)
"^DD",2006.1,2006.1,63.2,21,0)
^.001^3^3^3100308^^^
"^DD",2006.1,2006.1,63.2,21,1,0)
This is the date of the last scheduled RAID Group Advance was
"^DD",2006.1,2006.1,63.2,21,2,0)
executed and is automatically set at the beginning of a RAID
"^DD",2006.1,2006.1,63.2,21,3,0)
Group Advance execution. 
"^DD",2006.1,2006.1,63.2,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,63.2,23,1,0)
This parameter is used by RPC, MAGQ FS CHNGE, when evaluating
"^DD",2006.1,2006.1,63.2,23,2,0)
scheduled RAID Group Advance.
"^DD",2006.1,2006.1,63.2,"DT")
3081219
"^DD",2006.1,2006.1,63.3,0)
RG ADVANCE DATE^DXO^^RGADVANCE;4^S %DT="E" D ^%DT S X=Y K:Y<1 X Q:'$P($G(^MAG(2006.1,DA,"RGADVANCE")),U,1)  K:(Y<$P($$NOW^XLFDT,".")) X K:Y<1 X
"^DD",2006.1,2006.1,63.3,2)
S Y(0)=Y S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,63.3,2.1)
S Y=$$FMTE^XLFDT(Y,"5D")
"^DD",2006.1,2006.1,63.3,3)
The date may not be to earlier than today.
"^DD",2006.1,2006.1,63.3,21,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1,63.3,21,1,0)
This is the scheduled date (today or later) of the next
"^DD",2006.1,2006.1,63.3,21,2,0)
RAID GROUP advance.  
"^DD",2006.1,2006.1,63.3,23,0)
^.001^2^2^3100308^^
"^DD",2006.1,2006.1,63.3,23,1,0)
This parameter is used by the RPC MAGQ FS CHNGE procedure
"^DD",2006.1,2006.1,63.3,23,2,0)
during the evaluation for scheduling the RG Advance process. 
"^DD",2006.1,2006.1,63.3,"DT")
3090106
"^DD",2006.1,2006.1,63.4,0)
RG ADVANCE TIME^NJ4,0^^RGADVANCE;5^K:+X'=X!(X>2359)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,63.4,3)
Type a number between 0 and 2359 (military time).
"^DD",2006.1,2006.1,63.4,21,0)
^.001^6^6^3100308^^^^
"^DD",2006.1,2006.1,63.4,21,1,0)
This number (between 0 and 2359) for military time is the
"^DD",2006.1,2006.1,63.4,21,2,0)
time of day of the RAID Group advance function. If this number
"^DD",2006.1,2006.1,63.4,21,3,0)
is undefined, the BP Queue Processor uses the default value 
"^DD",2006.1,2006.1,63.4,21,4,0)
of 0 if the Scheduled RAID Group Advance option is enabled 
"^DD",2006.1,2006.1,63.4,21,5,0)
and the frequency days plus date of last RAID Group Advance
"^DD",2006.1,2006.1,63.4,21,6,0)
threshold are reached.
"^DD",2006.1,2006.1,63.4,23,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1,63.4,23,1,0)
This field is used by the RPC MAGQ FS CHNGE procedure
"^DD",2006.1,2006.1,63.4,23,2,0)
during the evaluation for scheduling the RG Advance process.
"^DD",2006.1,2006.1,63.4,"DT")
3100223
"^DD",2006.1,2006.1,66,0)
BP MAIL MESSAGE^2006.166A^^6;0
"^DD",2006.1,2006.1,66,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1,66,21,1,0)
This table allows each Imaging site to manage the local distribution
"^DD",2006.1,2006.1,66,21,2,0)
of all BP Queue Processor messages as well as the monthly and ad
"^DD",2006.1,2006.1,66,21,3,0)
hoc site usage reports.
"^DD",2006.1,2006.1,70,0)
CT PRESETS^F^^CT;1^K:$L(X)>245!($L(X)<3) X
"^DD",2006.1,2006.1,70,3)
These are used by the Imaging Display Radiology Viewer
"^DD",2006.1,2006.1,70,21,0)
^^5^5^3040407^
"^DD",2006.1,2006.1,70,21,1,0)
 A Series of CT Presets delimited by '~'.  Defined at the site.
"^DD",2006.1,2006.1,70,21,2,0)
 These are used by the Imaging Display Radiology Viewer.
"^DD",2006.1,2006.1,70,21,3,0)
 They are presented to the user on the CT Presets Menu Option.
"^DD",2006.1,2006.1,70,21,4,0)
 example of two :
"^DD",2006.1,2006.1,70,21,5,0)
 Abdomen|350|1041~Bone|500|1274
"^DD",2006.1,2006.1,70,"DT")
3040407
"^DD",2006.1,2006.1,71,0)
CT PRESETS 2^F^^CT2;1^K:$L(X)>245!($L(X)<3) X
"^DD",2006.1,2006.1,71,3)
Enter a series of presets, delimited by '~'.  Example 'Abdomen|350|1041~Bone|500|1274  (1-245 chars)
"^DD",2006.1,2006.1,71,21,0)
^.001^6^6^3080814^^^^
"^DD",2006.1,2006.1,71,21,1,0)
A Series of CT Presets delimited by '~'.  Defined at the site.
"^DD",2006.1,2006.1,71,21,2,0)
These are used by the Imaging Display Radiology Viewer on Clients
"^DD",2006.1,2006.1,71,21,3,0)
running Patch 72 or later.
"^DD",2006.1,2006.1,71,21,4,0)
They are presented to the user on the CT Presets Menu Option.
"^DD",2006.1,2006.1,71,21,5,0)
example of two :
"^DD",2006.1,2006.1,71,21,6,0)
Abdomen|350|1041~Bone|500|1274
"^DD",2006.1,2006.1,71,"DT")
3070803
"^DD",2006.1,2006.1,100,0)
DEFAULT USER PREFERENCE^P2006.18'^MAG(2006.18,^USERPREF;1^Q
"^DD",2006.1,2006.1,100,3)
This is the default window setting for all new Imaging users.
"^DD",2006.1,2006.1,100,21,0)
^.001^4^4^3001025^^^^
"^DD",2006.1,2006.1,100,21,1,0)
This field contains the user preference setting for first time users of
"^DD",2006.1,2006.1,100,21,2,0)
the Imaging System.  This field points to the Imaging User Preference file
"^DD",2006.1,2006.1,100,21,3,0)
(2005.18).  If this field is empty, the default user preferences 
"^DD",2006.1,2006.1,100,21,4,0)
are created by the imaging routines.
"^DD",2006.1,2006.1,100,"DT")
2961114
"^DD",2006.1,2006.1,101,0)
DEFAULT MUSE SITE #^NJ2,0^^USERPREF;2^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1.N) X
"^DD",2006.1,2006.1,101,3)
Type a number between 1 and 20, 0 Decimal Digits
"^DD",2006.1,2006.1,101,21,0)
^.001^14^14^3001002^^^
"^DD",2006.1,2006.1,101,21,1,0)
 
"^DD",2006.1,2006.1,101,21,2,0)
Enter the default MUSE
"^DD",2006.1,2006.1,101,21,3,0)
site that the Imaging Display application will connect to.
"^DD",2006.1,2006.1,101,21,4,0)
Site numbers are usually 1,2,3... etc.
"^DD",2006.1,2006.1,101,21,5,0)
If this field is empty, the application will default to 1.
"^DD",2006.1,2006.1,101,21,6,0)
 
"^DD",2006.1,2006.1,101,21,7,0)
Most sites that have a MUSE server that serves EKG data to a 
"^DD",2006.1,2006.1,101,21,8,0)
single Medical Center would
"^DD",2006.1,2006.1,101,21,9,0)
have the MUSE site number set to 1.  If multiple sites 
"^DD",2006.1,2006.1,101,21,10,0)
are sharing a single MUSE server, each site could be assigned 
"^DD",2006.1,2006.1,101,21,11,0)
a unique MUSE site number by Marquette.  In some cases a single 
"^DD",2006.1,2006.1,101,21,12,0)
shared MUSE database has been created to serve multiple Medical
"^DD",2006.1,2006.1,101,21,13,0)
Centers.  In this case all sites would most likely have the
"^DD",2006.1,2006.1,101,21,14,0)
MUSE site number set to 1.
"^DD",2006.1,2006.1,101,"DT")
3001002
"^DD",2006.1,2006.1,102,0)
PCT FREE SPACE DICOM MSGS^NJ3,0^^3;5^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,102,.1)
Percentage of free disk space for DICOM messages
"^DD",2006.1,2006.1,102,3)
Enter the minimum percentage (0 to 100) of free space for a DICOM server
"^DD",2006.1,2006.1,102,21,0)
^^2^2^2990618^^
"^DD",2006.1,2006.1,102,21,1,0)
The value of this field is the minimum percentage of free space
"^DD",2006.1,2006.1,102,21,2,0)
for a DICOM server.
"^DD",2006.1,2006.1,102,"DT")
2991130
"^DD",2006.1,2006.1,103,0)
RETENTION DAYS DICOM MSGS^NJ5,0^^3;6^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,103,.1)
Number of days to retain DICOM messages
"^DD",2006.1,2006.1,103,3)
Enter the number of days (between 0 and 99999) that DICOM messages are to be retained on the DICOM Gateway(s). 
"^DD",2006.1,2006.1,103,21,0)
^.001^4^4^3100308^^^^
"^DD",2006.1,2006.1,103,21,1,0)
The value of this parameter is the number of days that DICOM
"^DD",2006.1,2006.1,103,21,2,0)
messages are to be retained.
"^DD",2006.1,2006.1,103,21,3,0)
The subroutine that purges old DICOM messages will only remove
"^DD",2006.1,2006.1,103,21,4,0)
messages that are older than this number of days.
"^DD",2006.1,2006.1,103,"DT")
2991130
"^DD",2006.1,2006.1,120,0)
USE CAPTURE KEYS^S^1:TRUE;0:FALSE;^KEYS;1^Q
"^DD",2006.1,2006.1,120,3)
True - Check users Imaging keys for permission to capture.
"^DD",2006.1,2006.1,120,21,0)
^.001^7^7^3001025^^^^
"^DD",2006.1,2006.1,120,21,1,0)
This field controls whether the Image capture security keys will be
"^DD",2006.1,2006.1,120,21,2,0)
used. If set to true, the appropriate keys must be given for the
"^DD",2006.1,2006.1,120,21,3,0)
appropriate Image capture.  'Capture' functionality and Procedure lookup
"^DD",2006.1,2006.1,120,21,4,0)
functionality will not be allowed from the capture window if the user does
"^DD",2006.1,2006.1,120,21,5,0)
not have the proper security key allocated.  The Medicine procedure
"^DD",2006.1,2006.1,120,21,6,0)
selection window will only display the types of procedures that the user
"^DD",2006.1,2006.1,120,21,7,0)
has keys for.
"^DD",2006.1,2006.1,120,"DT")
2970417
"^DD",2006.1,2006.1,121,0)
TIMEOUT WINDOWS DISPLAY^NJ3,0^^KEYS;2^K:+X'=X!(X>600)!(X<5)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,121,3)
Enter the number of Minutes (between 6 and 600) until the Imaging Display Application will close due to inactivity.
"^DD",2006.1,2006.1,121,21,0)
^^4^4^2990504^^
"^DD",2006.1,2006.1,121,21,1,0)
  This is the number of Minutes used as the Time Out for the Imaging Display
"^DD",2006.1,2006.1,121,21,2,0)
  Application.  If no activity occurs for this number of minutes, the user
"^DD",2006.1,2006.1,121,21,3,0)
  will be prompted with a dialog window and given 30 seconds to
"^DD",2006.1,2006.1,121,21,4,0)
  'Click' on the 'Stay Connected' button or the application will be closed.
"^DD",2006.1,2006.1,121,"DT")
2991130
"^DD",2006.1,2006.1,122,0)
TIMEOUT WINDOWS CAPTURE^NJ3,0^^KEYS;3^K:+X'=X!(X>600)!(X<5)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,122,3)
Enter the number of Minutes (between 6 and 600) until the Imaging Capture Application will close due to inactivity.
"^DD",2006.1,2006.1,122,21,0)
^^4^4^2990504^^^
"^DD",2006.1,2006.1,122,21,1,0)
This is the number of Minutes used as the Time Out for the Imaging Capture
"^DD",2006.1,2006.1,122,21,2,0)
Application.  If no activity occurs for this number of minutes, the user 
"^DD",2006.1,2006.1,122,21,3,0)
will be prompted with a dialog window and given 30 seconds to 
"^DD",2006.1,2006.1,122,21,4,0)
'Click' on the 'Stay Connected' button or the application will be closed.
"^DD",2006.1,2006.1,122,"DT")
2991130
"^DD",2006.1,2006.1,123,0)
TIMEOUT WINDOWS VISTARAD^NJ3,0^^KEYS;4^K:+X'=X!(X>600)!(X<5)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,123,3)
Enter the number of Minutes(between 6 and 600) until the Imaging VISTARad Application will close due to inactivity.
"^DD",2006.1,2006.1,123,21,0)
^^4^4^2990504^^
"^DD",2006.1,2006.1,123,21,1,0)
  This is the number of Minutes used as Time Out for the Imaging VISTARad
"^DD",2006.1,2006.1,123,21,2,0)
  Application.  If no activity occurs for this number of minutes, the user
"^DD",2006.1,2006.1,123,21,3,0)
  will be prompted with a dialog window and given 30 seconds to
"^DD",2006.1,2006.1,123,21,4,0)
  'Click' on the 'Stay Connected' button or the application will be closed.
"^DD",2006.1,2006.1,123,"DT")
2991130
"^DD",2006.1,2006.1,124,0)
DICOM GATEWAY ACCESS CODE^FXO^^GW;1^K:$L(X)>30!($L(X)<3) X Q:'$D(X)  S X=$$ENCRYP^ROUTINE(X)
"^DD",2006.1,2006.1,124,1,0)
^.1
"^DD",2006.1,2006.1,124,1,1,0)
2006.1^AC^MUMPS
"^DD",2006.1,2006.1,124,1,1,1)
D SAME^MAGDRPC2(1,DA,"GW",1,X)
"^DD",2006.1,2006.1,124,1,1,2)
D SAME^MAGDRPC2(0,DA,"GW",1,X)
"^DD",2006.1,2006.1,124,1,1,"%D",0)
^.101^3^3^3051025^^^
"^DD",2006.1,2006.1,124,1,1,"%D",1,0)
This MUMPS cross reference is really a trigger that causes
"^DD",2006.1,2006.1,124,1,1,"%D",2,0)
the values for this field to be the same for all entries
"^DD",2006.1,2006.1,124,1,1,"%D",3,0)
in the Imaging Site Parameter file.
"^DD",2006.1,2006.1,124,1,1,"DT")
3031120
"^DD",2006.1,2006.1,124,2)
S Y(0)=Y S Y="<hidden>"
"^DD",2006.1,2006.1,124,2.1)
S Y="<hidden>"
"^DD",2006.1,2006.1,124,3)
Enter the access code that DICOM Gateways may use.
"^DD",2006.1,2006.1,124,21,0)
^.001^7^7^3100308^^
"^DD",2006.1,2006.1,124,21,1,0)
The value of this field is a string that may be used by a
"^DD",2006.1,2006.1,124,21,2,0)
DICOM Gateway when it needs to provide an ACCESS CODE to the
"^DD",2006.1,2006.1,124,21,3,0)
VistA system.
"^DD",2006.1,2006.1,124,21,4,0)
 
"^DD",2006.1,2006.1,124,21,5,0)
This field is also used for auto-login for the BP Queue 
"^DD",2006.1,2006.1,124,21,6,0)
Processor, Purge and Verifier applications. This value is 
"^DD",2006.1,2006.1,124,21,7,0)
stored encrypted.
"^DD",2006.1,2006.1,124,"DT")
3031120
"^DD",2006.1,2006.1,125,0)
DICOM GATEWAY VERIFY CODE^FXO^^GW;2^K:$L(X)>30!($L(X)<3) X Q:'$D(X)  S X=$$ENCRYP^ROUTINE(X)
"^DD",2006.1,2006.1,125,1,0)
^.1
"^DD",2006.1,2006.1,125,1,1,0)
2006.1^AD^MUMPS
"^DD",2006.1,2006.1,125,1,1,1)
D SAME^MAGDRPC2(1,DA,"GW",2,X)
"^DD",2006.1,2006.1,125,1,1,2)
D SAME^MAGDRPC2(0,DA,"GW",2,X)
"^DD",2006.1,2006.1,125,1,1,"%D",0)
^^3^3^3031120^
"^DD",2006.1,2006.1,125,1,1,"%D",1,0)
This MUMPS cross reference is really a trigger that causes
"^DD",2006.1,2006.1,125,1,1,"%D",2,0)
the values for this field to be the same for all entries
"^DD",2006.1,2006.1,125,1,1,"%D",3,0)
in the Imaging Site Parameter file.
"^DD",2006.1,2006.1,125,1,1,"DT")
3031120
"^DD",2006.1,2006.1,125,2)
S Y(0)=Y S Y="<hidden>"
"^DD",2006.1,2006.1,125,2.1)
S Y="<hidden>"
"^DD",2006.1,2006.1,125,3)
Enter the verify code that DICOM Gateways may use.
"^DD",2006.1,2006.1,125,21,0)
^.001^7^7^3100308^^^^
"^DD",2006.1,2006.1,125,21,1,0)
The value of this field is a string that may be used by a
"^DD",2006.1,2006.1,125,21,2,0)
DICOM Gateway when it needs to provide a VERIFY CODE to a
"^DD",2006.1,2006.1,125,21,3,0)
VistA system.
"^DD",2006.1,2006.1,125,21,4,0)
 
"^DD",2006.1,2006.1,125,21,5,0)
This field is also used for auto-login for the BP Queue 
"^DD",2006.1,2006.1,125,21,6,0)
Processor, Purge and Verifier applications. This value is
"^DD",2006.1,2006.1,125,21,7,0)
stored encrypted.
"^DD",2006.1,2006.1,125,"DT")
3031120
"^DD",2006.1,2006.1,126,0)
LAST ROUTING ACTIVITY^D^^LASTROUTE;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,126,3)
Enter the date when routing was last active.
"^DD",2006.1,2006.1,126,21,0)
^^5^5^3050110^
"^DD",2006.1,2006.1,126,21,1,0)
The value of this field is a date (FileMan format, date only,
"^DD",2006.1,2006.1,126,21,2,0)
no time). This value indicates the most recent date
"^DD",2006.1,2006.1,126,21,3,0)
on which any routing activity took place at the current site.
"^DD",2006.1,2006.1,126,21,4,0)
  
"^DD",2006.1,2006.1,126,21,5,0)
Routing activity can be either Rule Evaluation or Image Transmission.
"^DD",2006.1,2006.1,126,"DT")
3050110
"^DD",2006.1,2006.1,127,0)
LAST ROUTING CHECK^D^^LASTROUTE;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,127,3)
Enter the date when routing activity was most recently checked.
"^DD",2006.1,2006.1,127,21,0)
^^4^4^3040603^
"^DD",2006.1,2006.1,127,21,1,0)
The value of this field is a date (FileMan format, date only,
"^DD",2006.1,2006.1,127,21,2,0)
no time part). This value indicates the most recent date
"^DD",2006.1,2006.1,127,21,3,0)
on which a check was performed whether or not Routing is
"^DD",2006.1,2006.1,127,21,4,0)
still active at the current site.
"^DD",2006.1,2006.1,127,"DT")
3040603
"^DD",2006.1,2006.1,130,0)
*VERSION CHECKING^S^0:NO;1:YES;^KEYS;5^Q
"^DD",2006.1,2006.1,130,3)
No longer supported field.
"^DD",2006.1,2006.1,130,21,0)
^^3^3^3091221^
"^DD",2006.1,2006.1,130,21,1,0)
This field is obsolete.
"^DD",2006.1,2006.1,130,21,2,0)
The value of the field does not control which Imaging Clients are 
"^DD",2006.1,2006.1,130,21,3,0)
supported.
"^DD",2006.1,2006.1,130,23,0)
^^1^1^3091221^
"^DD",2006.1,2006.1,130,23,1,0)
The field was made obsolete by patch MAG*3.0*94.
"^DD",2006.1,2006.1,130,"DT")
3091221
"^DD",2006.1,2006.1,131,0)
TELEREADER TIMEOUT (MINUTES)^NJ6,0^^KEYS;6^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,131,3)
Type a Number between 1 and 999999, 0 Decimal Digits
"^DD",2006.1,2006.1,131,21,0)
^^4^4^3100301^
"^DD",2006.1,2006.1,131,21,1,0)
The number of minutes that the TeleReader application 
"^DD",2006.1,2006.1,131,21,2,0)
will remain active before closing due to inactivity. 
"^DD",2006.1,2006.1,131,21,3,0)
If this field is undefined, the application will not timeout.
"^DD",2006.1,2006.1,131,21,4,0)
Max value is 999999, no decimals allowed.
"^DD",2006.1,2006.1,131,"DT")
3100301
"^DD",2006.1,2006.1,132,0)
VERSION NAG MESSAGE^S^0:NO;1:YES;^KEYS;7^Q
"^DD",2006.1,2006.1,132,3)
Enter Yes to display a message to users of supported clients that are not the released version.
"^DD",2006.1,2006.1,132,21,0)
^.001^6^6^3100426^^
"^DD",2006.1,2006.1,132,21,1,0)
 Enter Yes to display a message to clients that are supported, but
"^DD",2006.1,2006.1,132,21,2,0)
 are not the released version.   This message will inform the user
"^DD",2006.1,2006.1,132,21,3,0)
 that they should update their version of Imaging Client
"^DD",2006.1,2006.1,132,21,4,0)
 to the released version.
"^DD",2006.1,2006.1,132,21,5,0)
 
"^DD",2006.1,2006.1,132,21,6,0)
 Enter No to suppress the message.  No message will display.
"^DD",2006.1,2006.1,132,23,0)
^.001^1^1^3100426^^
"^DD",2006.1,2006.1,132,23,1,0)
Added in patch MAG*3.0*94
"^DD",2006.1,2006.1,132,"DT")
3100426
"^DD",2006.1,2006.1,201,0)
VISTARAD GROUPING^2006.1201P^^201;0
"^DD",2006.1,2006.1,201,21,0)
^^3^3^3060125^
"^DD",2006.1,2006.1,201,21,1,0)
This field allows multiple Institutions and/or Associated Institutions
"^DD",2006.1,2006.1,201,21,2,0)
to be grouped together within VistARad for purposes of Exam Locking
"^DD",2006.1,2006.1,201,21,3,0)
and Unread Exams lists display.
"^DD",2006.1,2006.1,201,"DT")
3060125
"^DD",2006.1,2006.1,202,0)
DEFAULT VISTARAD USERPREF RAD^*P2006.68'^MAG(2006.68,^5;7^S DIC("S")="I $P(^(0),U,2)>.5" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,202,1,0)
^.1^^0
"^DD",2006.1,2006.1,202,3)
Enter the VistARad user whose settings you want to use for the Default Radiologist user settings.
"^DD",2006.1,2006.1,202,12)
(The System's User Entry is Not Selectable.)
"^DD",2006.1,2006.1,202,12.1)
S DIC("S")="I $P(^(0),U,2)>.5"
"^DD",2006.1,2006.1,202,21,0)
^.001^1^1^3100713^^^^
"^DD",2006.1,2006.1,202,21,1,0)
Points to a reference MAGJ USER DATA file entry which will serve as the default for initializing new radiologist's profiles.
"^DD",2006.1,2006.1,202,"DT")
3100713
"^DD",2006.1,2006.1,203,0)
DEFAULT VISTARAD USERPREF NON^*P2006.68'^MAG(2006.68,^5;8^S DIC("S")="I $P(^(0),U,2)>.5" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,203,1,0)
^.1^^0
"^DD",2006.1,2006.1,203,3)
Enter the VistARad user whose settings you want to use for the Default Non-Radiologist user settings.
"^DD",2006.1,2006.1,203,12)
(The System's User Entry is Not Selectable.)
"^DD",2006.1,2006.1,203,12.1)
S DIC("S")="I $P(^(0),U,2)>.5"
"^DD",2006.1,2006.1,203,21,0)
^.001^1^1^3100713^^^^
"^DD",2006.1,2006.1,203,21,1,0)
Points to a reference MAGJ USER DATA file entry which will serve as the default for initializing new NON-radiologist's profiles.
"^DD",2006.1,2006.1,203,"DT")
3100713
"^DD",2006.1,2006.1,300,0)
RAD TECHNOLOGIST^*P200'^VA(200,^IMPORTER;1^S DIC("S")="I $$YNRADIST^MAGVIM07(Y,""RST"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,300,3)
Enter Radiology Technologist to be associated with Importer II Radiology orders/exams.
"^DD",2006.1,2006.1,300,12)
Restrict choices to Resident, Staff, or Technologist.
"^DD",2006.1,2006.1,300,12.1)
S DIC("S")="I $$YNRADIST^MAGVIM07(Y,""RST"")"
"^DD",2006.1,2006.1,300,21,0)
^.001^2^2^3120124^^^
"^DD",2006.1,2006.1,300,21,1,0)
This is the Radiology Technologist who will be responsible for 
"^DD",2006.1,2006.1,300,21,2,0)
the importing of the exam.
"^DD",2006.1,2006.1,300,23,0)
^.001^4^4^3120116^^^^
"^DD",2006.1,2006.1,300,23,1,0)
This field holds the 'TECH' miscellaneous parameter of the Radiology
"^DD",2006.1,2006.1,300,23,2,0)
Orders/Exams API. It is required by the Importer II application to
"^DD",2006.1,2006.1,300,23,3,0)
manage Radiology exams automatically. See MSCPRMS^RAMAGU01 for the
"^DD",2006.1,2006.1,300,23,4,0)
complete miscellaneous parameter documentation. (MAG*3.0*118)
"^DD",2006.1,2006.1,300,"DT")
3120124
"^DD",2006.1,2006.1,301,0)
RAD FILM SIZE^*P78.4'^RA(78.4,^IMPORTER;2^S DIC("S")="I $P(^(0),U,1)=""NO FILMS""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,301,3)
Enter a film size to be associated with Importer II generated Radiology exams.
"^DD",2006.1,2006.1,301,12)
Restrict entry to the value 'NO FILMS' for imported studies.
"^DD",2006.1,2006.1,301,12.1)
S DIC("S")="I $P(^(0),U,1)=""NO FILMS"""
"^DD",2006.1,2006.1,301,21,0)
^.001^1^1^3120116^^^^
"^DD",2006.1,2006.1,301,21,1,0)
This is the Film Size to be associated with imported exams.
"^DD",2006.1,2006.1,301,23,0)
^.001^4^4^3120116^^^^
"^DD",2006.1,2006.1,301,23,1,0)
This field holds the 'FILMSIZE' miscellaneous parameter of the Radiology
"^DD",2006.1,2006.1,301,23,2,0)
Orders/Exams API. It is required by the Importer II application to
"^DD",2006.1,2006.1,301,23,3,0)
manage Radiology exams automatically. See MSCPRMS^RAMAGU01 for the
"^DD",2006.1,2006.1,301,23,4,0)
complete miscellaneous parameter documentation. (MAG*3.0*118)
"^DD",2006.1,2006.1,301,"DT")
3120116
"^DD",2006.1,2006.1,302,0)
RAD PRIMARY DIAGNOSTIC CODE^*P78.3'^RA(78.3,^IMPORTER;3^S DIC("S")="I $P(^(0),U,1)=""NO ALERT REQUIRED""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,302,3)
Enter the primary diagnostic code to be associated with Importer II generated Radiology exams.
"^DD",2006.1,2006.1,302,12)
Restrict entry to the value 'NO ALERT REQUIRED' for imported studies.
"^DD",2006.1,2006.1,302,12.1)
S DIC("S")="I $P(^(0),U,1)=""NO ALERT REQUIRED"""
"^DD",2006.1,2006.1,302,21,0)
^.001^1^1^3120116^^^^
"^DD",2006.1,2006.1,302,21,1,0)
This is the primary diagnostic code to be associated with imported exams.
"^DD",2006.1,2006.1,302,23,0)
^.001^4^4^3120116^^^
"^DD",2006.1,2006.1,302,23,1,0)
This field holds the 'PRIMDXCODE' miscellaneous parameter of the Radiology
"^DD",2006.1,2006.1,302,23,2,0)
Orders/Exams API. It is required by the Importer II application to manage
"^DD",2006.1,2006.1,302,23,3,0)
Radiology exams automatically. See MSCPRMS^RAMAGU01 for the complete
"^DD",2006.1,2006.1,302,23,4,0)
miscellaneous parameter documentation. (MAG*3.0*118)
"^DD",2006.1,2006.1,302,"DT")
3120116
"^DD",2006.1,2006.1,303,0)
RAD PRIMARY CAMERA/EQUIP/RM^*P78.6'^RA(78.6,^IMPORTER;4^S DIC("S")="I $P(^(0),U,1)=""OUTSIDE STUDY""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,303,3)
Enter the camera/equip/room to be associated with Importer II generated Radiology exams.
"^DD",2006.1,2006.1,303,12)
Restrict input to the value 'OUTSIDE STUDY' for imported exams.
"^DD",2006.1,2006.1,303,12.1)
S DIC("S")="I $P(^(0),U,1)=""OUTSIDE STUDY"""
"^DD",2006.1,2006.1,303,21,0)
^.001^1^1^3120312^^^^
"^DD",2006.1,2006.1,303,21,1,0)
This is the primary camera/equip/room to be associated with imported exams.
"^DD",2006.1,2006.1,303,23,0)
^.001^4^4^3120312^^^^
"^DD",2006.1,2006.1,303,23,1,0)
This field holds the 'PRIMCAM' miscellaneous parameter of the Radiology
"^DD",2006.1,2006.1,303,23,2,0)
Orders/Exams API. It is required by the Importer II application to manage
"^DD",2006.1,2006.1,303,23,3,0)
Radiology exams automatically. See MSCPRMS^RAMAGU01 for the complete
"^DD",2006.1,2006.1,303,23,4,0)
miscellaneous parameter documentation. (MAG*3.0*118)
"^DD",2006.1,2006.1,303,"DT")
3120116
"^DD",2006.1,2006.1,304,0)
RAD CPT MODIFIERS^P81.3'^DIC(81.3,^IMPORTER;5^Q
"^DD",2006.1,2006.1,304,3)
Enter the CPT modifier to be associated with Importer II generated Radiology exams.
"^DD",2006.1,2006.1,304,21,0)
^.001^1^1^3120116^^^^
"^DD",2006.1,2006.1,304,21,1,0)
This is the CPT modifier to be associated with imported exams.
"^DD",2006.1,2006.1,304,23,0)
^.001^4^4^3120116^^^
"^DD",2006.1,2006.1,304,23,1,0)
This field holds the 'CPTMODS' miscellaneous parameter of the Radiology
"^DD",2006.1,2006.1,304,23,2,0)
Orders/Exams API. It is required by the Importer II application to manage
"^DD",2006.1,2006.1,304,23,3,0)
Radiology exams automatically. See MSCPRMS^RAMAGU01 for the complete
"^DD",2006.1,2006.1,304,23,4,0)
miscellaneous parameter documentation. (MAG*3.0*118)
"^DD",2006.1,2006.1,304,"DT")
3110726
"^DD",2006.1,2006.11,0)
MULTI NAMESPACE SUB-FIELD^^.01^1
"^DD",2006.1,2006.11,0,"DT")
3100325
"^DD",2006.1,2006.11,0,"IX","B",2006.11,.01)

"^DD",2006.1,2006.11,0,"NM","MULTI NAMESPACE")

"^DD",2006.1,2006.11,0,"UP")
2006.1
"^DD",2006.1,2006.11,.01,0)
MULTI NAMESPACE^MF^^0;1^S X=$$UPPER^MAGQE4(X) K:($L(X)>45)!($L(X)<1)!($D(^MAG(2006.1,DA(1),4,"B",X))) X
"^DD",2006.1,2006.11,.01,1,0)
^.1
"^DD",2006.1,2006.11,.01,1,1,0)
2006.11^B
"^DD",2006.1,2006.11,.01,1,1,1)
S ^MAG(2006.1,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.11,.01,1,1,2)
K ^MAG(2006.1,DA(1),4,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.11,.01,3)
Answer must be 1-45 characters in length
"^DD",2006.1,2006.11,.01,21,0)
^.001^4^4^3100325^^^
"^DD",2006.1,2006.11,.01,21,1,0)
This multiple field is used to store all previously used image 
"^DD",2006.1,2006.11,.01,21,2,0)
prefixes from the CURRENT NAMESPACE field. Any time the 
"^DD",2006.1,2006.11,.01,21,3,0)
CURRENT NAMESPACE field is changed, enter the previous name 
"^DD",2006.1,2006.11,.01,21,4,0)
in this multiple field.
"^DD",2006.1,2006.11,.01,23,0)
^.001^3^3^3100325^^^^
"^DD",2006.1,2006.11,.01,23,1,0)
This multiple field is used to store all previously used image
"^DD",2006.1,2006.11,.01,23,2,0)
prefixes from the CURRENT NAMESPACE field. Any time the CURRENT NAMESPACE
"^DD",2006.1,2006.11,.01,23,3,0)
field is changed, enter the previous name in this multiple field.
"^DD",2006.1,2006.11,.01,"DT")
3100325
"^DD",2006.1,2006.112,0)
FILE TYPES SUB-FIELD^^.01^1
"^DD",2006.1,2006.112,0,"DT")
2980227
"^DD",2006.1,2006.112,0,"IX","B",2006.112,.01)

"^DD",2006.1,2006.112,0,"NM","FILE TYPES")

"^DD",2006.1,2006.112,0,"UP")
2006.1
"^DD",2006.1,2006.112,.01,0)
FILE TYPES^MFX^^0;1^S X=$$UPPER^MAGQE4(X) K:($L(X)>3)!($L(X)<3)!($D(^MAG(2006.1,DA(1),2,"B",X))) X
"^DD",2006.1,2006.112,.01,1,0)
^.1
"^DD",2006.1,2006.112,.01,1,1,0)
2006.112^B
"^DD",2006.1,2006.112,.01,1,1,1)
S ^MAG(2006.1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.112,.01,1,1,2)
K ^MAG(2006.1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.112,.01,3)
File extensions for background copies.
"^DD",2006.1,2006.112,.01,21,0)
^.001^3^3^3100308^^
"^DD",2006.1,2006.112,.01,21,1,0)
This field identifies the acceptable file types on image captures
"^DD",2006.1,2006.112,.01,21,2,0)
and is read by the Background Processor to migrate files across
"^DD",2006.1,2006.112,.01,21,3,0)
the network share and jukeboxes.
"^DD",2006.1,2006.112,.01,"DT")
3100126
"^DD",2006.1,2006.12,0)
ASSOCIATED INSTITUTIONS SUB-FIELD^^201^2
"^DD",2006.1,2006.12,0,"DT")
3050520
"^DD",2006.1,2006.12,0,"IX","B",2006.12,.01)

"^DD",2006.1,2006.12,0,"NM","ASSOCIATED INSTITUTIONS")

"^DD",2006.1,2006.12,0,"UP")
2006.1
"^DD",2006.1,2006.12,.01,0)
ASSOCIATED INSTITUTIONS^P4'X^DIC(4,^0;1^Q
"^DD",2006.1,2006.12,.01,1,0)
^.1
"^DD",2006.1,2006.12,.01,1,1,0)
2006.12^B
"^DD",2006.1,2006.12,.01,1,1,1)
S ^MAG(2006.1,DA(1),"INSTS","B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.12,.01,1,1,2)
K ^MAG(2006.1,DA(1),"INSTS","B",$E(X,1,30),DA)
"^DD",2006.1,2006.12,.01,1,2,0)
2006.1^C^MUMPS
"^DD",2006.1,2006.12,.01,1,2,1)
S ^MAG(2006.1,"B",$E(X,1,30),DA(1))=""
"^DD",2006.1,2006.12,.01,1,2,2)
K ^MAG(2006.1,"B",$E(X,1,30),DA(1))
"^DD",2006.1,2006.12,.01,1,2,"%D",0)
^.101^1^1^3060127^^
"^DD",2006.1,2006.12,.01,1,2,"%D",1,0)
This associates the institution with a set of site parameters.
"^DD",2006.1,2006.12,.01,1,2,"DT")
3050520
"^DD",2006.1,2006.12,.01,3)
Select an Institution that is a member of the Medical Division file.
"^DD",2006.1,2006.12,.01,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.12,.01,21,1,0)
This field allows users to associate this institution's logon
"^DD",2006.1,2006.12,.01,21,2,0)
to an imaging site platform.  Only institutions in the Medical 
"^DD",2006.1,2006.12,.01,21,3,0)
Division file are listed.
"^DD",2006.1,2006.12,.01,"DT")
3060127
"^DD",2006.1,2006.12,201,0)
VISTARAD GROUPING^2006.12201P^^201;0
"^DD",2006.1,2006.12,201,21,0)
^^3^3^3060125^
"^DD",2006.1,2006.12,201,21,1,0)
This field allows multiple Institutions and/or Associated Institutions
"^DD",2006.1,2006.12,201,21,2,0)
to be grouped together within VistARad for purposes of Exam Locking
"^DD",2006.1,2006.12,201,21,3,0)
and Unread Exams lists display.
"^DD",2006.1,2006.12,201,"DT")
3060125
"^DD",2006.1,2006.1201,0)
VISTARAD GROUPING SUB-FIELD^^.01^1
"^DD",2006.1,2006.1201,0,"DT")
3060124
"^DD",2006.1,2006.1201,0,"IX","B",2006.1201,.01)

"^DD",2006.1,2006.1201,0,"NM","VISTARAD GROUPING")

"^DD",2006.1,2006.1201,0,"UP")
2006.1
"^DD",2006.1,2006.1201,.01,0)
VISTARAD GROUP^MP4'X^DIC(4,^0;1^Q
"^DD",2006.1,2006.1201,.01,1,0)
^.1
"^DD",2006.1,2006.1201,.01,1,1,0)
2006.1201^B
"^DD",2006.1,2006.1201,.01,1,1,1)
S ^MAG(2006.1,DA(1),201,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.1201,.01,1,1,2)
K ^MAG(2006.1,DA(1),201,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.1201,.01,3)
To allow reading for other institutions, enter them here.
"^DD",2006.1,2006.1201,.01,21,0)
^.001^9^9^3060125^^^^
"^DD",2006.1,2006.1201,.01,21,1,0)
A radiologist logged in to this Institution (Division) can lock
"^DD",2006.1,2006.1201,.01,21,2,0)
and interpret exams for the logon division.  When logged in to
"^DD",2006.1,2006.1201,.01,21,3,0)
this Institution, IF you want the radiologist to be able to
"^DD",2006.1,2006.1201,.01,21,4,0)
lock/interpret exams for other divisions (including Associated
"^DD",2006.1,2006.1201,.01,21,5,0)
Institutions), enter those divisions here.  Note that this setting
"^DD",2006.1,2006.1201,.01,21,6,0)
controls exam locking and updating, as well as filtering of the
"^DD",2006.1,2006.1201,.01,21,7,0)
UNREAD Exams lists to show only the Institutions that are
"^DD",2006.1,2006.1201,.01,21,8,0)
defined here.  Normally, only Associated Institutions should be
"^DD",2006.1,2006.1201,.01,21,9,0)
entered here.
"^DD",2006.1,2006.1201,.01,"DT")
3060127
"^DD",2006.1,2006.12201,0)
VISTARAD GROUPING SUB-FIELD^^.01^1
"^DD",2006.1,2006.12201,0,"DT")
3060124
"^DD",2006.1,2006.12201,0,"IX","B",2006.12201,.01)

"^DD",2006.1,2006.12201,0,"NM","VISTARAD GROUPING")

"^DD",2006.1,2006.12201,0,"UP")
2006.12
"^DD",2006.1,2006.12201,.01,0)
VISTARAD GROUP^MP4'X^DIC(4,^0;1^Q
"^DD",2006.1,2006.12201,.01,1,0)
^.1
"^DD",2006.1,2006.12201,.01,1,1,0)
2006.12201^B
"^DD",2006.1,2006.12201,.01,1,1,1)
S ^MAG(2006.1,DA(2),"INSTS",DA(1),201,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.12201,.01,1,1,2)
K ^MAG(2006.1,DA(2),"INSTS",DA(1),201,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.12201,.01,3)
To allow reading for other institutions, enter them here.
"^DD",2006.1,2006.12201,.01,21,0)
^.001^8^8^3060125^^^^
"^DD",2006.1,2006.12201,.01,21,1,0)
A radiologist logged in to this Associated Institution (Division)
"^DD",2006.1,2006.12201,.01,21,2,0)
can lock and interpret exams for the logon division.  When logged
"^DD",2006.1,2006.12201,.01,21,3,0)
in to this Institution, IF you want the radiologist to be able to
"^DD",2006.1,2006.12201,.01,21,4,0)
lock/interpret exams for other divisions (including the Parent
"^DD",2006.1,2006.12201,.01,21,5,0)
Institution or other Associated Institutions), enter those
"^DD",2006.1,2006.12201,.01,21,6,0)
divisions here.  Note that this setting controls exam locking and
"^DD",2006.1,2006.12201,.01,21,7,0)
updating, as well as filtering of the UNREAD Exams lists to show
"^DD",2006.1,2006.12201,.01,21,8,0)
only the Institutions that are defined here.
"^DD",2006.1,2006.12201,.01,"DT")
3060127
"^DD",2006.1,2006.166,0)
BP MAIL MESSAGE SUB-FIELD^^5^6
"^DD",2006.1,2006.166,0,"DT")
3100223
"^DD",2006.1,2006.166,0,"IX","B",2006.166,.01)

"^DD",2006.1,2006.166,0,"NM","BP MAIL MESSAGE")

"^DD",2006.1,2006.166,0,"UP")
2006.1
"^DD",2006.1,2006.166,.01,0)
BP MAIL MESSAGE^F^^0;1^K:$L(X)>40!($L(X)<8) X
"^DD",2006.1,2006.166,.01,1,0)
^.1
"^DD",2006.1,2006.166,.01,1,1,0)
2006.166^B
"^DD",2006.1,2006.166,.01,1,1,1)
S ^MAG(2006.1,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.166,.01,1,1,2)
K ^MAG(2006.1,DA(1),6,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.166,.01,3)
Enter the Imaging Mail message subject, answer must be 8-30 characters in length.
"^DD",2006.1,2006.166,.01,21,0)
^.001^5^5^3100308^^^^
"^DD",2006.1,2006.166,.01,21,1,0)
This field is for message subject text (8-30 characters) intended
"^DD",2006.1,2006.166,.01,21,2,0)
for all Imaging applications.  The entries in this sub-file 
"^DD",2006.1,2006.166,.01,21,3,0)
namespaced by MAGxxx (where xxx is the site code) followed by the
"^DD",2006.1,2006.166,.01,21,4,0)
subject index text.  The site code facilitates sorting for 
"^DD",2006.1,2006.166,.01,21,5,0)
multi-divisional platforms.
"^DD",2006.1,2006.166,.01,"DT")
3060619
"^DD",2006.1,2006.166,1,0)
Message Interval^NJ3,0^^0;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.166,1,3)
Type a number between 0 and 999 hours.
"^DD",2006.1,2006.166,1,21,0)
^.001^4^4^3100308^^^^
"^DD",2006.1,2006.166,1,21,1,0)
The Imaging mail processing method uses this number of hours
"^DD",2006.1,2006.166,1,21,2,0)
(between 0 and 999) for the message interval.  Subsequent 
"^DD",2006.1,2006.166,1,21,3,0)
messages sent within the time framed of the current time and
"^DD",2006.1,2006.166,1,21,4,0)
this parameter will not be sent.
"^DD",2006.1,2006.166,1,"DT")
3070905
"^DD",2006.1,2006.166,2,0)
Mail Group^2006.1662PA^^1;0
"^DD",2006.1,2006.166,2,21,0)
^.001^2^2^3100308^^^^
"^DD",2006.1,2006.166,2,21,1,0)
This sub-file identifies the Kernel mail group recipients
"^DD",2006.1,2006.166,2,21,2,0)
for the Imaging mail message. 
"^DD",2006.1,2006.166,3,0)
DATE OF LAST MESSAGE^D^^2;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.166,3,3)
(No range limit on date)
"^DD",2006.1,2006.166,3,21,0)
^.001^3^3^3100308^^^
"^DD",2006.1,2006.166,3,21,1,0)
This field is set by the Imaging mail processing method and 
"^DD",2006.1,2006.166,3,21,2,0)
contains the date of the last message sent for this Subject Text.
"^DD",2006.1,2006.166,3,21,3,0)
This field is not editable.
"^DD",2006.1,2006.166,3,"DT")
3100223
"^DD",2006.1,2006.166,4,0)
MESSAGE RECIPIENTS^2006.1664P^^3;0
"^DD",2006.1,2006.166,4,21,0)
^.001^2^2^3100308^^^^
"^DD",2006.1,2006.166,4,21,1,0)
This is the list of active Mail users to add to the recipient
"^DD",2006.1,2006.166,4,21,2,0)
list of Imaging mail messages.
"^DD",2006.1,2006.166,5,0)
SECURITY KEYS^2006.1665P^^4;0
"^DD",2006.1,2006.166,5,21,0)
^.001^3^3^3100308^^
"^DD",2006.1,2006.166,5,21,1,0)
This is a list of SECURITY KEYS whose members will be recipients
"^DD",2006.1,2006.166,5,21,2,0)
of Imaging
"^DD",2006.1,2006.166,5,21,3,0)
mail messages.
"^DD",2006.1,2006.1662,0)
Mail Group SUB-FIELD^^.01^1
"^DD",2006.1,2006.1662,0,"DT")
3100223
"^DD",2006.1,2006.1662,0,"IX","B",2006.1662,.01)

"^DD",2006.1,2006.1662,0,"NM","Mail Group")

"^DD",2006.1,2006.1662,0,"UP")
2006.166
"^DD",2006.1,2006.1662,.01,0)
Mail Group^M*P3.8^XMB(3.8,^0;1^S DIC("S")="I $E($P(^(0),U,1),1,3)[""MAG""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1662,.01,1,0)
^.1
"^DD",2006.1,2006.1662,.01,1,1,0)
2006.1662^B
"^DD",2006.1,2006.1662,.01,1,1,1)
S ^MAG(2006.1,DA(2),6,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.1662,.01,1,1,2)
K ^MAG(2006.1,DA(2),6,DA(1),1,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.1662,.01,12)
This is intended to support the Imaging "MAG" namespace.
"^DD",2006.1,2006.1662,.01,12.1)
S DIC("S")="I $E($P(^(0),U,1),1,3)[""MAG"""
"^DD",2006.1,2006.1662,.01,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1662,.01,21,1,0)
Select the Imaging mail group to receive the mail message.
"^DD",2006.1,2006.1662,.01,21,2,0)
The Imaging MAG namespace should be used to maintain
"^DD",2006.1,2006.1662,.01,21,3,0)
database standards.  
"^DD",2006.1,2006.1662,.01,"DT")
3100223
"^DD",2006.1,2006.1664,0)
MESSAGE RECIPIENTS SUB-FIELD^^.01^1
"^DD",2006.1,2006.1664,0,"DT")
3071204
"^DD",2006.1,2006.1664,0,"IX","B",2006.1664,.01)

"^DD",2006.1,2006.1664,0,"NM","MESSAGE RECIPIENTS")

"^DD",2006.1,2006.1664,0,"UP")
2006.166
"^DD",2006.1,2006.1664,.01,0)
MESSAGE RECIPIENTS^P200'^VA(200,^0;1^Q
"^DD",2006.1,2006.1664,.01,1,0)
^.1
"^DD",2006.1,2006.1664,.01,1,1,0)
2006.1664^B
"^DD",2006.1,2006.1664,.01,1,1,1)
S ^MAG(2006.1,DA(2),6,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.1664,.01,1,1,2)
K ^MAG(2006.1,DA(2),6,DA(1),3,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.1664,.01,3)
This should be an active Mail user from the New Person file.
"^DD",2006.1,2006.1664,.01,21,0)
^.001^2^2^3100308^^^
"^DD",2006.1,2006.1664,.01,21,1,0)
This field identifies individual recipients for this
"^DD",2006.1,2006.1664,.01,21,2,0)
Imaging mail message.
"^DD",2006.1,2006.1664,.01,"DT")
3090407
"^DD",2006.1,2006.1665,0)
SECURITY KEYS SUB-FIELD^^.01^1
"^DD",2006.1,2006.1665,0,"DT")
3080422
"^DD",2006.1,2006.1665,0,"IX","B",2006.1665,.01)

"^DD",2006.1,2006.1665,0,"NM","SECURITY KEYS")

"^DD",2006.1,2006.1665,0,"UP")
2006.166
"^DD",2006.1,2006.1665,.01,0)
SECURITY KEYS^P19.1'^DIC(19.1,^0;1^Q
"^DD",2006.1,2006.1665,.01,1,0)
^.1
"^DD",2006.1,2006.1665,.01,1,1,0)
2006.1665^B
"^DD",2006.1,2006.1665,.01,1,1,1)
S ^MAG(2006.1,DA(2),6,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",2006.1,2006.1665,.01,1,1,2)
K ^MAG(2006.1,DA(2),6,DA(1),4,"B",$E(X,1,30),DA)
"^DD",2006.1,2006.1665,.01,3)
Select a security key that you would have holders receive this message type.
"^DD",2006.1,2006.1665,.01,21,0)
^.001^3^3^3100308^^^^
"^DD",2006.1,2006.1665,.01,21,1,0)
This is a VistA Imaging namespace security key.  All holders
"^DD",2006.1,2006.1665,.01,21,2,0)
of this key are added to the mail message recipient list of 
"^DD",2006.1,2006.1665,.01,21,3,0)
automated VistA Imaging mail messages.
"^DD",2006.1,2006.1665,.01,"DT")
3090407
"^DD",2006.539,2006.539,.01,0)
UID^RF^^0;1^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",2006.539,2006.539,.01,1,0)
^.1
"^DD",2006.539,2006.539,.01,1,1,0)
2006.539^B
"^DD",2006.539,2006.539,.01,1,1,1)
S ^MAGDICOM(2006.539,"B",$E(X,1,64),DA)=""
"^DD",2006.539,2006.539,.01,1,1,2)
K ^MAGDICOM(2006.539,"B",$E(X,1,64),DA)
"^DD",2006.539,2006.539,.01,3)
Enter the UID for this entry.
"^DD",2006.539,2006.539,.01,21,0)
^.001^8^8^3120712^^
"^DD",2006.539,2006.539,.01,21,1,0)
The value of this field is a string that conforms to the format
"^DD",2006.539,2006.539,.01,21,2,0)
of a DICOM UID (Unique Object Identifier).
"^DD",2006.539,2006.539,.01,21,3,0)
A UID is a string that consists of only digits and periods.
"^DD",2006.539,2006.539,.01,21,4,0)
The first and the last characters must be digits, and none of
"^DD",2006.539,2006.539,.01,21,5,0)
the integer numbers in the string (that are separated by periods)
"^DD",2006.539,2006.539,.01,21,6,0)
may have leading or trailing zeroes.
"^DD",2006.539,2006.539,.01,21,7,0)
 
"^DD",2006.539,2006.539,.01,21,8,0)
The meanings of UIDs are defined in the DICOM standard.
"^DD",2006.539,2006.539,.01,"DT")
3071102
"^DD",2006.575,2006.575,.01,0)
FILEPATH^RF^^0;1^K:$L(X)>150!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.575,2006.575,.01,.1)
File Path
"^DD",2006.575,2006.575,.01,1,0)
^.1
"^DD",2006.575,2006.575,.01,1,1,0)
2006.575^B
"^DD",2006.575,2006.575,.01,1,1,1)
S ^MAGD(2006.575,"B",X,DA)=""
"^DD",2006.575,2006.575,.01,1,1,2)
K ^MAGD(2006.575,"B",X,DA)
"^DD",2006.575,2006.575,.01,3)
Answer must be 3-150 characters in length.
"^DD",2006.575,2006.575,.01,21,0)
^.001^3^3^3111207^^^^
"^DD",2006.575,2006.575,.01,21,1,0)
This is the full name, including the directory path, of the image file
"^DD",2006.575,2006.575,.01,21,2,0)
that failed the matching process on 
"^DD",2006.575,2006.575,.01,21,3,0)
the local DICOM Image gateway processing the image.
"^DD",2006.575,2006.575,.01,"DT")
3111207
"^DD",2006.575,2006.575,28,0)
MACHINE ID^F^^1;4^K:$L(X)>24!($L(X)<1) X
"^DD",2006.575,2006.575,28,.1)
Machine ID
"^DD",2006.575,2006.575,28,3)
Answer must be 1-24 characters in length.
"^DD",2006.575,2006.575,28,21,0)
^.001^2^2^3120216^^^^
"^DD",2006.575,2006.575,28,21,1,0)
This is the name of the VistA DICOM Image Gateway 
"^DD",2006.575,2006.575,28,21,2,0)
computer that received the image file.
"^DD",2006.575,2006.575,28,"DT")
3120216
"^DD",2006.911,2006.911,0)
FIELD^^3^4
"^DD",2006.911,2006.911,0,"DDA")
N
"^DD",2006.911,2006.911,0,"DT")
3110903
"^DD",2006.911,2006.911,0,"IX","B",2006.911,.01)

"^DD",2006.911,2006.911,0,"NM","DICOM GATEWAY INSTRUMENT DICTIONARY")

"^DD",2006.911,2006.911,0,"VRPK")
MAG
"^DD",2006.911,2006.911,.01,0)
HOSTNAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",2006.911,2006.911,.01,1,0)
^.1
"^DD",2006.911,2006.911,.01,1,1,0)
2006.911^B
"^DD",2006.911,2006.911,.01,1,1,1)
S ^MAGDICOM(2006.911,"B",$E(X,1,30),DA)=""
"^DD",2006.911,2006.911,.01,1,1,2)
K ^MAGDICOM(2006.911,"B",$E(X,1,30),DA)
"^DD",2006.911,2006.911,.01,3)
Answer must be 1-30 characters in length.
"^DD",2006.911,2006.911,.01,21,0)
^^2^2^3100517^^
"^DD",2006.911,2006.911,.01,21,1,0)
This is the hostname of the computer
"^DD",2006.911,2006.911,.01,21,2,0)
used for the DICOM Gateway.
"^DD",2006.911,2006.911,.01,"DT")
3111129
"^DD",2006.911,2006.911,1,0)
LOCATION^P4'^DIC(4,^0;2^Q
"^DD",2006.911,2006.911,1,3)
Select DICOM Gateway  location.
"^DD",2006.911,2006.911,1,21,0)
^^1^1^3100517^^
"^DD",2006.911,2006.911,1,21,1,0)
This field identifies the location for which the DICOM Gateway operates.
"^DD",2006.911,2006.911,1,"DT")
3100517
"^DD",2006.911,2006.911,2,0)
DATE/TIME UPDATED^RD^^0;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2006.911,2006.911,2,3)
Enter date/time of last update.
"^DD",2006.911,2006.911,2,21,0)
^^1^1^3111201^
"^DD",2006.911,2006.911,2,21,1,0)
This is the date and time when the INSTRUMENT field multiple (#3) was last updated.
"^DD",2006.911,2006.911,2,"DT")
3111201
"^DD",2006.911,2006.911,3,0)
INSTRUMENT^2006.9112A^^1;0
"^DD",2006.911,2006.911,3,21,0)
^.001^1^1^3110903^^^^
"^DD",2006.911,2006.911,3,21,1,0)
Subfile to hold instruments information.
"^DD",2006.911,2006.9112,0)
INSTRUMENT SUB-FIELD^^2^6
"^DD",2006.911,2006.9112,0,"DT")
3110903
"^DD",2006.911,2006.9112,0,"IX","B",2006.9112,.01)

"^DD",2006.911,2006.9112,0,"NM","INSTRUMENT")

"^DD",2006.911,2006.9112,0,"UP")
2006.911
"^DD",2006.911,2006.9112,.01,0)
ABBREVIATION^F^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",2006.911,2006.9112,.01,1,0)
^.1
"^DD",2006.911,2006.9112,.01,1,1,0)
2006.9112^B
"^DD",2006.911,2006.9112,.01,1,1,1)
S ^MAGDICOM(2006.911,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",2006.911,2006.9112,.01,1,1,2)
K ^MAGDICOM(2006.911,DA(1),1,"B",$E(X,1,30),DA)
"^DD",2006.911,2006.9112,.01,3)
Answer must be 3-30 characters in length.
"^DD",2006.911,2006.9112,.01,21,0)
^.001^1^1^3110903^^
"^DD",2006.911,2006.9112,.01,21,1,0)
This field is an abbreviation that identifies the instrument.
"^DD",2006.911,2006.9112,.01,"DT")
3111129
"^DD",2006.911,2006.9112,2,0)
DESCRIPTION^F^^0;2^K:$L(X)>25!($L(X)<1) X
"^DD",2006.911,2006.9112,2,3)
Enter some descriptive text (1-25 characters) for this instrument.
"^DD",2006.911,2006.9112,2,21,0)
^^3^3^3111129^
"^DD",2006.911,2006.9112,2,21,1,0)
This field describes the instrument. 
"^DD",2006.911,2006.9112,2,21,2,0)
Such a description typically includes the name of a building
"^DD",2006.911,2006.9112,2,21,3,0)
or the number of a room where the instrument resides.
"^DD",2006.911,2006.9112,2,"DT")
3111129
"^DD",2006.911,2006.9112,3,0)
SERVICE^S^CON:Consults;RAD:Radiology;^0;3^Q
"^DD",2006.911,2006.9112,3,3)
Indicate the type of studies for this instrument.
"^DD",2006.911,2006.9112,3,21,0)
^.001^2^2^3110803^^^
"^DD",2006.911,2006.9112,3,21,1,0)
This field identifies the system for the treating service, either the Radiology 
"^DD",2006.911,2006.9112,3,21,2,0)
Package or CPRS Consult Request Tracking.
"^DD",2006.911,2006.9112,3,"DT")
3110803
"^DD",2006.911,2006.9112,4,0)
PORT^NJ5,0^^0;4^K:+X'=X!(X>65535)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.911,2006.9112,4,3)
Enter the TCP/IP port number to which this instrument connects.
"^DD",2006.911,2006.9112,4,21,0)
^.001^2^2^3110804^^^^
"^DD",2006.911,2006.9112,4,21,1,0)
This field identifies the DICOM Storage Class Provider listening TCP/IP port number on the DICOM Image Gateway for the instrument.
"^DD",2006.911,2006.9112,4,21,2,0)
TCP/IP port numbers are integers between 1 and 65535.
"^DD",2006.911,2006.9112,4,"DT")
3090911
"^DD",2006.911,2006.9112,5,0)
SITE^P4'^DIC(4,^0;5^Q
"^DD",2006.911,2006.9112,5,3)
Enter a site.
"^DD",2006.911,2006.9112,5,21,0)
^.001^1^1^3110804^^^^
"^DD",2006.911,2006.9112,5,21,1,0)
This field identifies the site where the instrument is located.
"^DD",2006.911,2006.9112,5,"DT")
3090911
"^DD",2006.911,2006.9112,6,0)
MACHINE ID^F^^0;6^K:$L(X)>30!($L(X)<1) X
"^DD",2006.911,2006.9112,6,.1)
Machine ID
"^DD",2006.911,2006.9112,6,3)
Answer must be 1-30 characters in length.
"^DD",2006.911,2006.9112,6,21,0)
^^2^2^3100517^^
"^DD",2006.911,2006.9112,6,21,1,0)
This is the ID of the computer on which the image files for this
"^DD",2006.911,2006.9112,6,21,2,0)
instrument are stored.
"^DD",2006.911,2006.9112,6,"DT")
3100517
"^DD",2006.912,2006.912,0)
FIELD^^3^4
"^DD",2006.912,2006.912,0,"DDA")
N
"^DD",2006.912,2006.912,0,"DT")
3110907
"^DD",2006.912,2006.912,0,"IX","B",2006.912,.01)

"^DD",2006.912,2006.912,0,"NM","DICOM GATEWAY MODALITY DICTIONARY")

"^DD",2006.912,2006.912,0,"VRPK")
MAG
"^DD",2006.912,2006.912,.01,0)
HOSTNAME^RF^^0;1^K:$L(X)>12!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.912,2006.912,.01,1,0)
^.1
"^DD",2006.912,2006.912,.01,1,1,0)
2006.912^B
"^DD",2006.912,2006.912,.01,1,1,1)
S ^MAGDICOM(2006.912,"B",$E(X,1,30),DA)=""
"^DD",2006.912,2006.912,.01,1,1,2)
K ^MAGDICOM(2006.912,"B",$E(X,1,30),DA)
"^DD",2006.912,2006.912,.01,3)
Answer must be 3-12 characters in length.
"^DD",2006.912,2006.912,.01,21,0)
^^4^4^3111201^
"^DD",2006.912,2006.912,.01,21,1,0)
This is the hostname of the computer used for the DICOM Gateway.
"^DD",2006.912,2006.912,.01,21,2,0)
Names of computers typically look like
"^DD",2006.912,2006.912,.01,21,3,0)
xxx-yyyzzzzz where xxx is the three-letter abbreviation for the name of the institution,
"^DD",2006.912,2006.912,.01,21,4,0)
yyy is the abbreviation for the name of the department, and zzzzz is the identifier assigned to the computer.
"^DD",2006.912,2006.912,.01,"DT")
3111201
"^DD",2006.912,2006.912,1,0)
LOCATION^P4'^DIC(4,^0;2^Q
"^DD",2006.912,2006.912,1,3)
Select DICOM Gateway location.
"^DD",2006.912,2006.912,1,21,0)
^^1^1^3090910^
"^DD",2006.912,2006.912,1,21,1,0)
This field identifies the location for which the DICOM Gateway operates.
"^DD",2006.912,2006.912,1,"DT")
3100514
"^DD",2006.912,2006.912,2,0)
DATE/TIME^RD^^0;3^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2006.912,2006.912,2,3)
Enter date/time of last update.
"^DD",2006.912,2006.912,2,21,0)
^.001^1^1^3111201^^^^
"^DD",2006.912,2006.912,2,21,1,0)
This is the date and time when the MODALITY field multiple (#3) was last updated.
"^DD",2006.912,2006.912,2,"DT")
3111201
"^DD",2006.912,2006.912,3,0)
MODALITY^2006.9122A^^1;0
"^DD",2006.912,2006.912,3,21,0)
^.001^1^1^3121112^^^^
"^DD",2006.912,2006.912,3,21,1,0)
Subfile to hold modalities information.
"^DD",2006.912,2006.9122,0)
MODALITY SUB-FIELD^^8^9
"^DD",2006.912,2006.9122,0,"DT")
3090911
"^DD",2006.912,2006.9122,0,"NM","MODALITY")

"^DD",2006.912,2006.9122,0,"UP")
2006.912
"^DD",2006.912,2006.9122,.01,0)
MANUFACTURER^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",2006.912,2006.9122,.01,1,0)
^.1^^0
"^DD",2006.912,2006.9122,.01,3)
Enter the name of the manufacturer of this equipment, 1-30 characters.
"^DD",2006.912,2006.9122,.01,21,0)
^.001^7^7^3111201^^^^
"^DD",2006.912,2006.9122,.01,21,1,0)
This is the manufacturer of the modality.
"^DD",2006.912,2006.9122,.01,21,2,0)
 
"^DD",2006.912,2006.9122,.01,21,3,0)
This name must be spelled exactly as it is presented
"^DD",2006.912,2006.9122,.01,21,4,0)
in the headers of the image files that are produced
"^DD",2006.912,2006.9122,.01,21,5,0)
by modalities of this type.
"^DD",2006.912,2006.9122,.01,21,6,0)
 
"^DD",2006.912,2006.9122,.01,21,7,0)
The field can also be set to <DEFAULT>, in which case it applies to any DICOM object whose manufacturer is not in the file for this DICOM Gateway.
"^DD",2006.912,2006.9122,.01,"DT")
3111201
"^DD",2006.912,2006.9122,2,0)
MODEL^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",2006.912,2006.9122,2,3)
Enter the name of the model of this equipment, 1-20 characters.
"^DD",2006.912,2006.9122,2,21,0)
^.001^7^7^3111201^^^
"^DD",2006.912,2006.9122,2,21,1,0)
This is the model of the modality.
"^DD",2006.912,2006.9122,2,21,2,0)
 
"^DD",2006.912,2006.9122,2,21,3,0)
It must be spelled exactly as it is presented
"^DD",2006.912,2006.9122,2,21,4,0)
in the headers of the image files that are produced
"^DD",2006.912,2006.9122,2,21,5,0)
by modalities of this type.
"^DD",2006.912,2006.9122,2,21,6,0)
 
"^DD",2006.912,2006.9122,2,21,7,0)
The field can also be set to <DEFAULT>, in which case it applies to any DICOM object whose model is not in the file for this DICOM Gateway.
"^DD",2006.912,2006.9122,2,"DT")
3111201
"^DD",2006.912,2006.9122,3,0)
MODALITY^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",2006.912,2006.9122,3,3)
Enter the code for the modality type, 1-20 characters.
"^DD",2006.912,2006.9122,3,21,0)
^.001^5^5^3111201^^^
"^DD",2006.912,2006.9122,3,21,1,0)
This is modality type.
"^DD",2006.912,2006.9122,3,21,2,0)
 
"^DD",2006.912,2006.9122,3,21,3,0)
The possible values for this two-letter code are defined in the DICOM standard.
"^DD",2006.912,2006.9122,3,21,4,0)
 
"^DD",2006.912,2006.9122,3,21,5,0)
The field can also be set to <DEFAULT>, in which case it applies to any DICOM object whose modality type is not in the file for this DICOM Gateway.
"^DD",2006.912,2006.9122,3,"DT")
3111201
"^DD",2006.912,2006.9122,4,0)
DICOM TO TARGA PARAMETERS^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",2006.912,2006.9122,4,.1)
DICOM To Targa Parameters
"^DD",2006.912,2006.9122,4,3)
Enter the parameter list for the program dcmtotga.exe, 1-40 characters .
"^DD",2006.912,2006.9122,4,21,0)
^^14^14^^3111201^^
"^DD",2006.912,2006.9122,4,21,1,0)
This is a list of parameters that are to be specified when the program
"^DD",2006.912,2006.9122,4,21,2,0)
is called that converts an image in DICOM format to
"^DD",2006.912,2006.9122,4,21,3,0)
Targa(TM) format.
"^DD",2006.912,2006.9122,4,21,4,0)
 
"^DD",2006.912,2006.9122,4,21,5,0)
These parameters will apply to files that originate from
"^DD",2006.912,2006.9122,4,21,6,0)
the type of modality that is described in the current entry.
"^DD",2006.912,2006.9122,4,21,7,0)
 
"^DD",2006.912,2006.9122,4,21,8,0)
When the parameters are different for the conversion
"^DD",2006.912,2006.9122,4,21,9,0)
to a 'clinical resolution' image than they are
"^DD",2006.912,2006.9122,4,21,10,0)
for a 'full resolution' image, the value of this field consists
"^DD",2006.912,2006.9122,4,21,11,0)
of two parts, separated by a slash ("/").
"^DD",2006.912,2006.9122,4,21,12,0)
In that case, the first part specifies the parameters
"^DD",2006.912,2006.9122,4,21,13,0)
for clinical images, and the second part specifies the
"^DD",2006.912,2006.9122,4,21,14,0)
parameters for the full images.
"^DD",2006.912,2006.9122,4,"DT")
3130125
"^DD",2006.912,2006.9122,5,0)
CASE LOOKUP^F^^0;5^K:$L(X)>17!($L(X)<1) X
"^DD",2006.912,2006.9122,5,.1)
Accession Number Lookup
"^DD",2006.912,2006.9122,5,3)
Enter the entry point for the Accession Number lookup code, 1-17 characters.
"^DD",2006.912,2006.9122,5,8.5)
@
"^DD",2006.912,2006.9122,5,9)
@
"^DD",2006.912,2006.9122,5,21,0)
^^8^8^3111201^
"^DD",2006.912,2006.9122,5,21,1,0)
This is the entry point that is called as a subroutine when
"^DD",2006.912,2006.9122,5,21,2,0)
the DICOM Image Gateway needs to look up the Accession Number
"^DD",2006.912,2006.9122,5,21,3,0)
 given the information provided by the modality
"^DD",2006.912,2006.9122,5,21,4,0)
that is described in this entry.
"^DD",2006.912,2006.9122,5,21,5,0)
 
"^DD",2006.912,2006.9122,5,21,6,0)
In the name of this entry point, the caret that separates
"^DD",2006.912,2006.9122,5,21,7,0)
the name of the label from the name of the routine
"^DD",2006.912,2006.9122,5,21,8,0)
is replaced by a period.
"^DD",2006.912,2006.9122,5,"DT")
3111213
"^DD",2006.912,2006.9122,6,0)
DATA EXTRACTION^F^^0;6^K:$L(X)>17!($L(X)<1) X
"^DD",2006.912,2006.9122,6,3)
Enter the entry point for the data extraction code, 1-17 characters.
"^DD",2006.912,2006.9122,6,8.5)
@
"^DD",2006.912,2006.9122,6,9)
@
"^DD",2006.912,2006.9122,6,21,0)
^^8^8^3111201^^
"^DD",2006.912,2006.9122,6,21,1,0)
This is the entry point that is called as a subroutine when
"^DD",2006.912,2006.9122,6,21,2,0)
the DICOM Image Gateway needs to extract data,
"^DD",2006.912,2006.9122,6,21,3,0)
given the information provided by the modality
"^DD",2006.912,2006.9122,6,21,4,0)
that is described in this entry.
"^DD",2006.912,2006.9122,6,21,5,0)
 
"^DD",2006.912,2006.9122,6,21,6,0)
In the name of this entry point, the caret that separates
"^DD",2006.912,2006.9122,6,21,7,0)
the name of the label from the name of the routine
"^DD",2006.912,2006.9122,6,21,8,0)
is replaced by a period.
"^DD",2006.912,2006.9122,6,"DT")
3111201
"^DD",2006.912,2006.9122,7,0)
EXTRACTION FILE^F^^0;7^K:$L(X)>16!($L(X)<1) X
"^DD",2006.912,2006.9122,7,3)
Enter the name of the file that describes the extraction parameters, 1-17 characters.
"^DD",2006.912,2006.9122,7,21,0)
^^9^9^3111201^^
"^DD",2006.912,2006.9122,7,21,1,0)
This is the name of a file that
"^DD",2006.912,2006.9122,7,21,2,0)
contains a list of additional fields to be displayed
"^DD",2006.912,2006.9122,7,21,3,0)
on a diagnostic workstation for images that are produced
"^DD",2006.912,2006.9122,7,21,4,0)
by a modality of the type that is described in the current entry.
"^DD",2006.912,2006.9122,7,21,5,0)
 
"^DD",2006.912,2006.9122,7,21,6,0)
Currently, three such files exist:
"^DD",2006.912,2006.9122,7,21,7,0)
   datamisc.dic
"^DD",2006.912,2006.9122,7,21,8,0)
   data_cr.dic
"^DD",2006.912,2006.9122,7,21,9,0)
   datagect.dic
"^DD",2006.912,2006.9122,7,"DT")
3111201
"^DD",2006.912,2006.9122,8,0)
IMAGING SERVICE^S^RAD:Radiology;CON:Consults;^0;8^Q
"^DD",2006.912,2006.9122,8,3)
Select the Imaging Service.
"^DD",2006.912,2006.9122,8,8.5)
@
"^DD",2006.912,2006.9122,8,9)
@
"^DD",2006.912,2006.9122,8,21,0)
^^2^2^3111201^^
"^DD",2006.912,2006.9122,8,21,1,0)
This is the Imaging Service
"^DD",2006.912,2006.9122,8,21,2,0)
for this type of instrument.
"^DD",2006.912,2006.9122,8,"DT")
3111201
"^DD",2006.912,2006.9122,9,0)
ACTIVE^S^1:YES;0:NO;^0;9^Q
"^DD",2006.912,2006.9122,9,3)
Indicate whether this entry is active.
"^DD",2006.912,2006.9122,9,21,0)
^^1^1^3111201^
"^DD",2006.912,2006.9122,9,21,1,0)
The is the active status of the modality.
"^DD",2006.912,2006.9122,9,"DT")
3111213
"^DD",2006.913,2006.913,0)
FIELD^^2^2
"^DD",2006.913,2006.913,0,"DDA")
N
"^DD",2006.913,2006.913,0,"DT")
3110915
"^DD",2006.913,2006.913,0,"NM","ARTIFACT KEYLIST")

"^DD",2006.913,2006.913,0,"PT",2006.916,3)

"^DD",2006.913,2006.913,0,"VRPK")
MAG
"^DD",2006.913,2006.913,.01,0)
DEPTH^RNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.913,2006.913,.01,1,0)
^.1^^0
"^DD",2006.913,2006.913,.01,3)
Type a Number between 1 and 99, 0 Decimal Digits.
"^DD",2006.913,2006.913,.01,21,0)
^.001^1^1^3110915^^^
"^DD",2006.913,2006.913,.01,21,1,0)
Number of levels in the Key List.
"^DD",2006.913,2006.913,.01,23,0)
^.001^1^1^3110915^^^
"^DD",2006.913,2006.913,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.913,2006.913,.01,"DT")
3100308
"^DD",2006.913,2006.913,2,0)
KEY^2006.9132^^1;0
"^DD",2006.913,2006.913,2,21,0)
^.001^1^1^3110915^^^^
"^DD",2006.913,2006.913,2,21,1,0)
This field holds the Key List by storing pairs - key value and key level.
"^DD",2006.913,2006.913,2,23,0)
^.001^1^1^3110915^^^^
"^DD",2006.913,2006.913,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.913,2006.913,2,"DT")
3100319
"^DD",2006.913,2006.9132,0)
KEY SUB-FIELD^^2^2
"^DD",2006.913,2006.9132,0,"DT")
3110915
"^DD",2006.913,2006.9132,0,"NM","KEY")

"^DD",2006.913,2006.9132,0,"UP")
2006.913
"^DD",2006.913,2006.9132,.01,0)
KVALUE^MRF^^0;1^K:$L(X)>240!($L(X)<1) X
"^DD",2006.913,2006.9132,.01,1,0)
^.1^^0
"^DD",2006.913,2006.9132,.01,3)
Answer must be 1-240 characters in length.
"^DD",2006.913,2006.9132,.01,21,0)
^.001^11^11^3110915^^^^
"^DD",2006.913,2006.9132,.01,21,1,0)
This is the key value in the Key List.
"^DD",2006.913,2006.9132,.01,21,2,0)
The hierarchy of the artifact storage can be defined by a Key List
"^DD",2006.913,2006.9132,.01,21,3,0)
that has values on each level.
"^DD",2006.913,2006.9132,.01,21,4,0)
 
"^DD",2006.913,2006.9132,.01,21,5,0)
For the VistA Imaging database the following keys are used: 
"^DD",2006.913,2006.9132,.01,21,6,0)
 
"^DD",2006.913,2006.9132,.01,21,7,0)
On the patient level (1) the value is the SiteDFN (Site #-DFN). 
"^DD",2006.913,2006.9132,.01,21,8,0)
On the procedure level (2) the value is SiteAcc (Site #-accession #).
"^DD",2006.913,2006.9132,.01,21,9,0)
On the study level (3) the value is the StudyId (Study UID).  
"^DD",2006.913,2006.9132,.01,21,10,0)
On the series level (4) the value is the SeriesId (Series UID).
"^DD",2006.913,2006.9132,.01,21,11,0)
On the SOP level (5) the value is the SOPId (SOP UID).
"^DD",2006.913,2006.9132,.01,"DT")
3100603
"^DD",2006.913,2006.9132,2,0)
KLEVEL^NJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.913,2006.9132,2,3)
Type a number between 1 and 99, 0 Decimal Digits.
"^DD",2006.913,2006.9132,2,21,0)
^.001^1^1^3110915^^^
"^DD",2006.913,2006.9132,2,21,1,0)
This is the key level in the Key List.
"^DD",2006.913,2006.9132,2,23,0)
^.001^1^1^3110915^^^
"^DD",2006.913,2006.9132,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.913,2006.9132,2,"DT")
3110915
"^DD",2006.914,2006.914,0)
FIELD^^6^7
"^DD",2006.914,2006.914,0,"DDA")
N
"^DD",2006.914,2006.914,0,"DT")
3100514
"^DD",2006.914,2006.914,0,"IX","B",2006.914,.01)

"^DD",2006.914,2006.914,0,"NM","RETENTION POLICY")

"^DD",2006.914,2006.914,0,"PT",2006.915,.01)

"^DD",2006.914,2006.914,0,"PT",2006.921,2)

"^DD",2006.914,2006.914,0,"PT",2006.923,.01)

"^DD",2006.914,2006.914,0,"VRPK")
MAG
"^DD",2006.914,2006.914,.01,0)
DISPLAY NAME^RF^^0;1^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",2006.914,2006.914,.01,1,0)
^.1
"^DD",2006.914,2006.914,.01,1,1,0)
2006.914^B
"^DD",2006.914,2006.914,.01,1,1,1)
S ^MAGV(2006.914,"B",$E(X,1,64),DA)=""
"^DD",2006.914,2006.914,.01,1,1,2)
K ^MAGV(2006.914,"B",$E(X,1,64),DA)
"^DD",2006.914,2006.914,.01,3)
Answer must be 1-64 characters in length.
"^DD",2006.914,2006.914,.01,21,0)
^.001^1^1^3101115^^^^
"^DD",2006.914,2006.914,.01,21,1,0)
A text description of the policy for display by configuration user interface.
"^DD",2006.914,2006.914,.01,23,0)
^.001^1^1^3101115^^^^
"^DD",2006.914,2006.914,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.914,2006.914,.01,"DT")
3100308
"^DD",2006.914,2006.914,2,0)
ARCHIVE DURATION YEARS^RNJ3,0^^0;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.914,2006.914,2,3)
Type a Number between 0 and 999, 0 Decimal Digits.
"^DD",2006.914,2006.914,2,21,0)
^.001^1^1^3100408^^^
"^DD",2006.914,2006.914,2,21,1,0)
The number of years from the duration trigger date that an artifact must be available.
"^DD",2006.914,2006.914,2,23,0)
^.001^1^1^3100408^^
"^DD",2006.914,2006.914,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.914,2006.914,2,"DT")
3100408
"^DD",2006.914,2006.914,3,0)
ARCHIVE DURATION TRIGGER^RS^CD:Create Date;LAD:Last Accessed Date;DD:Deceased Date;^0;3^Q
"^DD",2006.914,2006.914,3,3)
Enter Archive Duration Trigger.
"^DD",2006.914,2006.914,3,21,0)
^.001^2^2^3100408^^
"^DD",2006.914,2006.914,3,21,1,0)
The trigger event for initiating the countdown for archive 
"^DD",2006.914,2006.914,3,21,2,0)
duration.
"^DD",2006.914,2006.914,3,23,0)
^.001^1^1^3100408^^
"^DD",2006.914,2006.914,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.914,2006.914,3,"DT")
3100312
"^DD",2006.914,2006.914,4,0)
MINIMUM ARCHIVE COPIES^RNJ2,0^^0;4^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.914,2006.914,4,3)
Type a number between 0 and 99, 0 Decimal Digits.
"^DD",2006.914,2006.914,4,21,0)
^^1^1^3100512^
"^DD",2006.914,2006.914,4,21,1,0)
Number of archive copies required by this retention policy.  
"^DD",2006.914,2006.914,4,23,0)
^^1^1^3100308^
"^DD",2006.914,2006.914,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.914,2006.914,4,"DT")
3100512
"^DD",2006.914,2006.914,5,0)
MINIMUM OFFSITE COPIES^RNJ2,0^^0;5^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.914,2006.914,5,3)
Type a number between 0 and 99, 0 Decimal Digits.
"^DD",2006.914,2006.914,5,21,0)
^^1^1^3100512^
"^DD",2006.914,2006.914,5,21,1,0)
Number of offsite copies required by this retention policy.
"^DD",2006.914,2006.914,5,23,0)
^^1^1^3100308^
"^DD",2006.914,2006.914,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.914,2006.914,5,"DT")
3100512
"^DD",2006.914,2006.914,6,0)
BUSINESS KEY^F^^0;6^K:$L(X)>64!($L(X)<1) X
"^DD",2006.914,2006.914,6,3)
Answer must be 1-64 characters in length.
"^DD",2006.914,2006.914,6,21,0)
^.001^8^8^3100309^^
"^DD",2006.914,2006.914,6,21,1,0)
Holds a key that can be used by clients to look up retention 
"^DD",2006.914,2006.914,6,21,2,0)
policies for specific business scenarios, e.g. Agent Orange cases, 
"^DD",2006.914,2006.914,6,21,3,0)
employees, etc.
"^DD",2006.914,2006.914,6,21,4,0)
 Business Key is not unique across all records, but must be unique 
"^DD",2006.914,2006.914,6,21,5,0)
among active records. In other words, you could have deactivated 
"^DD",2006.914,2006.914,6,21,6,0)
versions of old business keys (if already-captured artifacts are 
"^DD",2006.914,2006.914,6,21,7,0)
grandfathered in on the old policy), and a new, active record with the 
"^DD",2006.914,2006.914,6,21,8,0)
same key, so that newly acquired records follow the new policy. 
"^DD",2006.914,2006.914,6,23,0)
^.001^1^1^3100309^^
"^DD",2006.914,2006.914,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.914,2006.914,6,"DT")
3100513
"^DD",2006.914,2006.914,7,0)
ACTIVE^RS^0:Inactive;1:Active;^0;7^Q
"^DD",2006.914,2006.914,7,3)
Select retention policy status.
"^DD",2006.914,2006.914,7,21,0)
^.001^4^4^3100512^^^^
"^DD",2006.914,2006.914,7,21,1,0)
Since many artifacts may be linked to a retention policy, it is not safe 
"^DD",2006.914,2006.914,7,21,2,0)
to delete records. However, the policy can be deactivated by setting 
"^DD",2006.914,2006.914,7,21,3,0)
this flag to false ("0"), so that it won't be assigned to newly acquired 
"^DD",2006.914,2006.914,7,21,4,0)
artifacts.
"^DD",2006.914,2006.914,7,23,0)
^.001^1^1^3100309^^
"^DD",2006.914,2006.914,7,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.914,2006.914,7,"DT")
3110804
"^DD",2006.915,2006.915,0)
FIELD^^5^5
"^DD",2006.915,2006.915,0,"DDA")
N
"^DD",2006.915,2006.915,0,"DT")
3100309
"^DD",2006.915,2006.915,0,"IX","B",2006.915,.01)

"^DD",2006.915,2006.915,0,"NM","ARTIFACT DESCRIPTOR")

"^DD",2006.915,2006.915,0,"PT",2006.916,2)

"^DD",2006.915,2006.915,0,"VRPK")
MAG
"^DD",2006.915,2006.915,.01,0)
RETENTION POLICY^RP2006.914^MAGV(2006.914,^0;1^Q
"^DD",2006.915,2006.915,.01,1,0)
^.1
"^DD",2006.915,2006.915,.01,1,1,0)
2006.915^B
"^DD",2006.915,2006.915,.01,1,1,1)
S ^MAGV(2006.915,"B",X,DA)=""
"^DD",2006.915,2006.915,.01,1,1,2)
K ^MAGV(2006.915,"B",X,DA)
"^DD",2006.915,2006.915,.01,3)
Select Artifact Retention Policy.
"^DD",2006.915,2006.915,.01,21,0)
^.001^1^1^3110908^^
"^DD",2006.915,2006.915,.01,21,1,0)
This is Artifact Retention Policy.
"^DD",2006.915,2006.915,.01,23,0)
^.001^1^1^3110908^^^^
"^DD",2006.915,2006.915,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.915,2006.915,.01,"DT")
3110804
"^DD",2006.915,2006.915,2,0)
ARTIFACT TYPE^RF^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",2006.915,2006.915,2,3)
Enter category of artifact, 1-64 characters in length.
"^DD",2006.915,2006.915,2,21,0)
^.001^1^1^3100408^^
"^DD",2006.915,2006.915,2,21,1,0)
The category that the artifact belongs to. 
"^DD",2006.915,2006.915,2,23,0)
^.001^1^1^3100408^^
"^DD",2006.915,2006.915,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.915,2006.915,2,"DT")
3100309
"^DD",2006.915,2006.915,3,0)
ARTIFACT FORMAT^RF^^0;3^K:$L(X)>64!($L(X)<1) X
"^DD",2006.915,2006.915,3,3)
Enter Artifact format, 1-64 characters in length.
"^DD",2006.915,2006.915,3,21,0)
^.001^2^2^3100408^^
"^DD",2006.915,2006.915,3,21,1,0)
This field, in combination with ArtifactType
"^DD",2006.915,2006.915,3,21,2,0)
 define an artifact descriptor, and are used for looking up appropriate file extension, retention policy, etc.
"^DD",2006.915,2006.915,3,23,0)
^.001^1^1^3100408^^
"^DD",2006.915,2006.915,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.915,2006.915,3,"DT")
3100309
"^DD",2006.915,2006.915,4,0)
FILE EXTENSION^RF^^0;4^K:$L(X)>4!($L(X)<3) X
"^DD",2006.915,2006.915,4,3)
Answer must be 3-4 characters in length.
"^DD",2006.915,2006.915,4,21,0)
^.001^1^1^3110804^^^
"^DD",2006.915,2006.915,4,21,1,0)
The file extension to use for filesystem-based storage providers when storing an artifact.
"^DD",2006.915,2006.915,4,23,0)
^.001^1^1^3110804^^^
"^DD",2006.915,2006.915,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.915,2006.915,4,"DT")
3110804
"^DD",2006.915,2006.915,5,0)
ACTIVE^RS^0:No;1:Yes;^0;5^Q
"^DD",2006.915,2006.915,5,3)
Select active status.
"^DD",2006.915,2006.915,5,21,0)
^^1^1^3100426^^
"^DD",2006.915,2006.915,5,21,1,0)
This field indicates whether the Artifact Descriptor is active or not: "0" means inactive, "1" means active. 
"^DD",2006.915,2006.915,5,23,0)
^.001^1^1^3100408^^
"^DD",2006.915,2006.915,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.915,2006.915,5,"DT")
3110804
"^DD",2006.916,2006.916,0)
FIELD^^10^10
"^DD",2006.916,2006.916,0,"DDA")
N
"^DD",2006.916,2006.916,0,"DT")
3120120
"^DD",2006.916,2006.916,0,"IX","B",2006.916,.01)

"^DD",2006.916,2006.916,0,"IX","KL",2006.916,3)

"^DD",2006.916,2006.916,0,"NM","ARTIFACT")

"^DD",2006.916,2006.916,0,"PT",2005.65,.02)

"^DD",2006.916,2006.916,0,"PT",2006.918,.01)

"^DD",2006.916,2006.916,0,"PT",2006.921,.01)

"^DD",2006.916,2006.916,0,"PT",2006.926,5)

"^DD",2006.916,2006.916,0,"VRPK")
MAG
"^DD",2006.916,2006.916,.01,0)
ARTIFACT TOKEN^RF^^0;1^K:$L(X)>128!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.916,2006.916,.01,1,0)
^.1
"^DD",2006.916,2006.916,.01,1,1,0)
2006.916^B
"^DD",2006.916,2006.916,.01,1,1,1)
S ^MAGV(2006.916,"B",$E(X,1,128),DA)=""
"^DD",2006.916,2006.916,.01,1,1,2)
K ^MAGV(2006.916,"B",$E(X,1,128),DA)
"^DD",2006.916,2006.916,.01,1,1,"%D",0)
^^1^1^3100421^
"^DD",2006.916,2006.916,.01,1,1,"%D",1,0)
Index of Artifact Token.
"^DD",2006.916,2006.916,.01,3)
Enter Artifact Token, 3-128 characters in length.
"^DD",2006.916,2006.916,.01,21,0)
^.001^1^1^3110822^^^^
"^DD",2006.916,2006.916,.01,21,1,0)
Holds the token that external clients will use to request a stream or the metadata for an artifact.
"^DD",2006.916,2006.916,.01,23,0)
^.001^1^1^3100409^^^
"^DD",2006.916,2006.916,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,.01,"DT")
3100309
"^DD",2006.916,2006.916,2,0)
ARTIFACT DESCRIPTOR^RP2006.915'^MAGV(2006.915,^0;2^Q
"^DD",2006.916,2006.916,2,3)
Select Artifact Descriptor.
"^DD",2006.916,2006.916,2,21,0)
^.001^2^2^3100409^^^
"^DD",2006.916,2006.916,2,21,1,0)
This is the Artifact Descriptor. 
"^DD",2006.916,2006.916,2,21,2,0)
 Tracks the type the artifact was originally stored as, provides file extension, etc.
"^DD",2006.916,2006.916,2,23,0)
^.001^1^1^3100409^^^
"^DD",2006.916,2006.916,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,2,"DT")
3110804
"^DD",2006.916,2006.916,3,0)
KEYLIST^P2006.913'^MAGV(2006.913,^0;3^Q
"^DD",2006.916,2006.916,3,1,0)
^.1
"^DD",2006.916,2006.916,3,1,1,0)
2006.916^KL
"^DD",2006.916,2006.916,3,1,1,1)
S ^MAGV(2006.916,"KL",$E(X,1,30),DA)=""
"^DD",2006.916,2006.916,3,1,1,2)
K ^MAGV(2006.916,"KL",$E(X,1,30),DA)
"^DD",2006.916,2006.916,3,1,1,"%D",0)
^^1^1^3100324^
"^DD",2006.916,2006.916,3,1,1,"%D",1,0)
This index will be used to find all artifacts by KEYLIST IEN
"^DD",2006.916,2006.916,3,1,1,"DT")
3100324
"^DD",2006.916,2006.916,3,3)
Select Keylist.
"^DD",2006.916,2006.916,3,21,0)
^.001^2^2^3110804^^^
"^DD",2006.916,2006.916,3,21,1,0)
This is an ordered list of strings that have meaning for the client software. 
"^DD",2006.916,2006.916,3,21,2,0)
 Allows the client to retrieve artifacts in potentially nested groups defined by the client.
"^DD",2006.916,2006.916,3,23,0)
^.001^1^1^3110804^^^
"^DD",2006.916,2006.916,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,3,"DT")
3110804
"^DD",2006.916,2006.916,4,0)
SIZE IN BYTES^NJ10,0^^0;4^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.916,2006.916,4,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits.
"^DD",2006.916,2006.916,4,21,0)
^.001^1^1^3100409^^
"^DD",2006.916,2006.916,4,21,1,0)
The size of the artifact in bytes.
"^DD",2006.916,2006.916,4,23,0)
^.001^1^1^3100409^^
"^DD",2006.916,2006.916,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,4,"DT")
3100418
"^DD",2006.916,2006.916,5,0)
CRC^F^^1;1^K:$L(X)>128!($L(X)<1) X
"^DD",2006.916,2006.916,5,3)
Answer must be 1-128 characters in length.
"^DD",2006.916,2006.916,5,21,0)
^.001^1^1^3100409^^
"^DD",2006.916,2006.916,5,21,1,0)
The CRC value for the artifact.
"^DD",2006.916,2006.916,5,23,0)
^.001^1^1^3100409^^
"^DD",2006.916,2006.916,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,5,"DT")
3100418
"^DD",2006.916,2006.916,6,0)
CREATING APPLICATION^RP2006.9193^MAGV(2006.9193,^1;2^Q
"^DD",2006.916,2006.916,6,3)
Enter creating application.
"^DD",2006.916,2006.916,6,21,0)
^^1^1^3111215^^
"^DD",2006.916,2006.916,6,21,1,0)
This is the application that initially created the artifact.
"^DD",2006.916,2006.916,6,23,0)
^.001^1^1^3110914^^^
"^DD",2006.916,2006.916,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,6,"DT")
3111215
"^DD",2006.916,2006.916,7,0)
CREATED DATE/TIME^RD^^1;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.916,2006.916,7,3)
Enter date and time when the artifact was created.
"^DD",2006.916,2006.916,7,21,0)
^.001^1^1^3110907^^^^
"^DD",2006.916,2006.916,7,21,1,0)
The date and time at which the artifact was created.
"^DD",2006.916,2006.916,7,23,0)
^.001^1^1^3110907^^^^
"^DD",2006.916,2006.916,7,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,7,"DT")
3110914
"^DD",2006.916,2006.916,8,0)
LAST ACCESS DATE/TIME^D^^1;4^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.916,2006.916,8,3)
Enter date and time the artifact was last retrieved.
"^DD",2006.916,2006.916,8,21,0)
^.001^1^1^3110914^^^^
"^DD",2006.916,2006.916,8,21,1,0)
The date and time at which the artifact was most recently retrieved.
"^DD",2006.916,2006.916,8,23,0)
^.001^1^1^3110914^^^^
"^DD",2006.916,2006.916,8,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.916,2006.916,8,"DT")
3110914
"^DD",2006.916,2006.916,9,0)
DELETING APPLICATION^P2006.9193^MAGV(2006.9193,^1;5^Q
"^DD",2006.916,2006.916,9,3)
Select application.
"^DD",2006.916,2006.916,9,21,0)
^^1^1^3120120^
"^DD",2006.916,2006.916,9,21,1,0)
This is the application that deleted the artifact.
"^DD",2006.916,2006.916,9,23,0)
^^1^1^3120120^
"^DD",2006.916,2006.916,9,23,1,0)
Added in patch MAG*3.0*116
"^DD",2006.916,2006.916,9,"DT")
3120120
"^DD",2006.916,2006.916,10,0)
DELETED DATE/TIME^D^^1;6^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.916,2006.916,10,3)
Enter date and time when the artifact was deleted.
"^DD",2006.916,2006.916,10,21,0)
^^1^1^3120120^
"^DD",2006.916,2006.916,10,21,1,0)
This is the date and time that the atrifact was deleted.
"^DD",2006.916,2006.916,10,23,0)
^^1^1^3120120^
"^DD",2006.916,2006.916,10,23,1,0)
Added in patch MAG*3.0*116
"^DD",2006.916,2006.916,10,"DT")
3120120
"^DD",2006.917,2006.917,0)
FIELD^^6^6
"^DD",2006.917,2006.917,0,"DDA")
N
"^DD",2006.917,2006.917,0,"DT")
3100413
"^DD",2006.917,2006.917,0,"IX","B",2006.917,.01)

"^DD",2006.917,2006.917,0,"NM","STORAGE PROVIDER")

"^DD",2006.917,2006.917,0,"PT",2006.918,2)

"^DD",2006.917,2006.917,0,"PT",2006.923,2)

"^DD",2006.917,2006.917,0,"PT",2006.924,.01)

"^DD",2006.917,2006.917,0,"PT",2006.925,.01)

"^DD",2006.917,2006.917,0,"PT",2006.926,6)

"^DD",2006.917,2006.917,0,"VRPK")
MAG
"^DD",2006.917,2006.917,.01,0)
STORAGE PLACE^RP2006.1'^MAG(2006.1,^0;1^Q
"^DD",2006.917,2006.917,.01,1,0)
^.1
"^DD",2006.917,2006.917,.01,1,1,0)
2006.917^B
"^DD",2006.917,2006.917,.01,1,1,1)
S ^MAGV(2006.917,"B",X,DA)=""
"^DD",2006.917,2006.917,.01,1,1,2)
K ^MAGV(2006.917,"B",X,DA)
"^DD",2006.917,2006.917,.01,3)
Select storage provider home place.
"^DD",2006.917,2006.917,.01,21,0)
^.001^4^4^3110908^^^^
"^DD",2006.917,2006.917,.01,21,1,0)
This is a Place.
"^DD",2006.917,2006.917,.01,21,2,0)
Links the storage provider to its home place.
"^DD",2006.917,2006.917,.01,21,3,0)
The Storage Place value is used to look up the current write location for the 
"^DD",2006.917,2006.917,.01,21,4,0)
device in the IMAGING SITE PARAMETER file (#2006.1).
"^DD",2006.917,2006.917,.01,23,0)
^.001^1^1^3110908^^^^
"^DD",2006.917,2006.917,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.917,2006.917,.01,"DT")
3110908
"^DD",2006.917,2006.917,2,0)
STORAGE PROVIDER TYPE^RF^^0;2^K:$L(X)>32!($L(X)<1) X
"^DD",2006.917,2006.917,2,3)
Enter provider type, 1-32 characters in length.
"^DD",2006.917,2006.917,2,21,0)
^.001^6^6^3110903^^^^
"^DD",2006.917,2006.917,2,21,1,0)
Type of storage provider. Examples of types could include:
"^DD",2006.917,2006.917,2,21,2,0)
 RAID
"^DD",2006.917,2006.917,2,21,3,0)
 Jukebox
"^DD",2006.917,2006.917,2,21,4,0)
 Centera
"^DD",2006.917,2006.917,2,21,5,0)
 Bycast
"^DD",2006.917,2006.917,2,21,6,0)
 Etc.
"^DD",2006.917,2006.917,2,23,0)
^.001^1^1^3110903^^^^
"^DD",2006.917,2006.917,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.917,2006.917,2,"DT")
3110903
"^DD",2006.917,2006.917,3,0)
ACTIVE^RS^0:No;1:Yes;^0;3^Q
"^DD",2006.917,2006.917,3,3)
Enter Active status.
"^DD",2006.917,2006.917,3,21,0)
^.001^3^3^3110912^^^^
"^DD",2006.917,2006.917,3,21,1,0)
Since many data records may be linked to a storage provider,
"^DD",2006.917,2006.917,3,21,2,0)
it is not safe to delete them. However, the storage provider 
"^DD",2006.917,2006.917,3,21,3,0)
can be deactivated (logically deleted) by setting this flag to false ("0"), so that it won't be available to map to retention policies, etc.
"^DD",2006.917,2006.917,3,23,0)
^.001^1^1^3110912^^^^
"^DD",2006.917,2006.917,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.917,2006.917,3,"DT")
3110804
"^DD",2006.917,2006.917,4,0)
ARCHIVE^RS^0:No;1:Yes;^0;4^Q
"^DD",2006.917,2006.917,4,3)
Enter archive flag.
"^DD",2006.917,2006.917,4,21,0)
^.001^4^4^3110912^^^^
"^DD",2006.917,2006.917,4,21,1,0)
This field indicates whether the storage provider can act as an archive (true: "1").
"^DD",2006.917,2006.917,4,21,2,0)
 This flag is NOT mutually exclusive with PRIMARY STORAGE field (#2006.917,5). A 
"^DD",2006.917,2006.917,4,21,3,0)
 single storage provider (such as a grid system) could act as both a RAID-like 
"^DD",2006.917,2006.917,4,21,4,0)
 primary storage provider and an archive.
"^DD",2006.917,2006.917,4,23,0)
^.001^1^1^3110912^^^^
"^DD",2006.917,2006.917,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.917,2006.917,4,"DT")
3111116
"^DD",2006.917,2006.917,5,0)
PRIMARY STORAGE^RS^0:No;1:Yes;^0;5^Q
"^DD",2006.917,2006.917,5,3)
Enter primary storage flag.
"^DD",2006.917,2006.917,5,21,0)
^.001^4^4^3110912^^^^
"^DD",2006.917,2006.917,5,21,1,0)
This field indicates whether the storage provider can act as RAID-like primary storage (true: "1").
"^DD",2006.917,2006.917,5,21,2,0)
 This flag is NOT mutually exclusive with ARCHIVE field (#2006.917,4). A single 
"^DD",2006.917,2006.917,5,21,3,0)
 storage provider (such as a grid system) could act as both a RAID-like primary 
"^DD",2006.917,2006.917,5,21,4,0)
 storage provider and an archive.
"^DD",2006.917,2006.917,5,23,0)
^.001^1^1^3110912^^^^
"^DD",2006.917,2006.917,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.917,2006.917,5,"DT")
3110804
"^DD",2006.917,2006.917,6,0)
WRITABLE^RS^0:No;1:Yes;^0;6^Q
"^DD",2006.917,2006.917,6,3)
Enter writable flag.
"^DD",2006.917,2006.917,6,21,0)
^.001^5^5^3110912^^^^
"^DD",2006.917,2006.917,6,21,1,0)
If a storage provider is still available for read operations, but should 
"^DD",2006.917,2006.917,6,21,2,0)
not be written to, this flag can be set to false ("0").
"^DD",2006.917,2006.917,6,21,3,0)
Note that this sits at a level higher than a specific share. 
"^DD",2006.917,2006.917,6,21,4,0)
Existing mechanisms to take a particular share offline, while leaving the 
"^DD",2006.917,2006.917,6,21,5,0)
others available for write, will still work.
"^DD",2006.917,2006.917,6,23,0)
^.001^1^1^3110912^^^
"^DD",2006.917,2006.917,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.917,2006.917,6,"DT")
3110912
"^DD",2006.918,2006.918,0)
FIELD^^8^8
"^DD",2006.918,2006.918,0,"DDA")
N
"^DD",2006.918,2006.918,0,"DT")
3101111
"^DD",2006.918,2006.918,0,"IX","B",2006.918,.01)

"^DD",2006.918,2006.918,0,"IX","C",2006.918,6)

"^DD",2006.918,2006.918,0,"NM","ARTIFACT INSTANCE")

"^DD",2006.918,2006.918,0,"PT",2006.922,2)

"^DD",2006.918,2006.918,0,"VRPK")
MAG
"^DD",2006.918,2006.918,.01,0)
ARTIFACT^RP2006.916'^MAGV(2006.916,^0;1^Q
"^DD",2006.918,2006.918,.01,1,0)
^.1
"^DD",2006.918,2006.918,.01,1,1,0)
2006.918^B
"^DD",2006.918,2006.918,.01,1,1,1)
S ^MAGV(2006.918,"B",X,DA)=""
"^DD",2006.918,2006.918,.01,1,1,2)
K ^MAGV(2006.918,"B",X,DA)
"^DD",2006.918,2006.918,.01,3)
Select Artifact.
"^DD",2006.918,2006.918,.01,21,0)
^.001^1^1^3100411^^^
"^DD",2006.918,2006.918,.01,21,1,0)
This is the Artifact.
"^DD",2006.918,2006.918,.01,23,0)
^.001^1^1^3100411^^
"^DD",2006.918,2006.918,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,.01,"DT")
3110804
"^DD",2006.918,2006.918,2,0)
STORAGE PROVIDER^RP2006.917'^MAGV(2006.917,^0;2^Q
"^DD",2006.918,2006.918,2,3)
Select Storage Provider.
"^DD",2006.918,2006.918,2,21,0)
^.001^2^2^3110903^^^^
"^DD",2006.918,2006.918,2,21,1,0)
This is the storage provider that created 
"^DD",2006.918,2006.918,2,21,2,0)
the artifact instance.
"^DD",2006.918,2006.918,2,23,0)
^.001^1^1^3110903^^^^
"^DD",2006.918,2006.918,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,2,"DT")
3110804
"^DD",2006.918,2006.918,3,0)
URL^2006.9183^^1;0
"^DD",2006.918,2006.918,3,21,0)
^.001^2^2^3110914^^^^
"^DD",2006.918,2006.918,3,21,1,0)
 A field used by storage provider subclasses to retrieve an artifact. The 
"^DD",2006.918,2006.918,3,21,2,0)
URL needs to have meaning only to the storage provider that created the artifact.
"^DD",2006.918,2006.918,3,23,0)
^.001^1^1^3110914^^^^
"^DD",2006.918,2006.918,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,4,0)
CREATED DATE/TIME^RD^^0;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.918,2006.918,4,3)
Enter date and time when the artifact was created.
"^DD",2006.918,2006.918,4,21,0)
^.001^1^1^3110914^^^^
"^DD",2006.918,2006.918,4,21,1,0)
The date and time at which the artifact was created.
"^DD",2006.918,2006.918,4,23,0)
^.001^1^1^3110914^^^^
"^DD",2006.918,2006.918,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,4,"DT")
3110914
"^DD",2006.918,2006.918,5,0)
LAST ACCESS DATE/TIME^D^^0;4^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2006.918,2006.918,5,3)
Enter date and time when the artifact was most recently retrieved.
"^DD",2006.918,2006.918,5,21,0)
^.001^1^1^3110914^^^^
"^DD",2006.918,2006.918,5,21,1,0)
The date and time at which the artifact was most recently retrieved.
"^DD",2006.918,2006.918,5,23,0)
^.001^1^1^3110914^^^^
"^DD",2006.918,2006.918,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,5,"DT")
3110914
"^DD",2006.918,2006.918,6,0)
FILEREF^F^^2;1^K:$L(X)>30!($L(X)<1) X
"^DD",2006.918,2006.918,6,1,0)
^.1
"^DD",2006.918,2006.918,6,1,1,0)
2006.918^C
"^DD",2006.918,2006.918,6,1,1,1)
S ^MAGV(2006.918,"C",$E(X,1,30),DA)=""
"^DD",2006.918,2006.918,6,1,1,2)
K ^MAGV(2006.918,"C",$E(X,1,30),DA)
"^DD",2006.918,2006.918,6,1,1,"%D",0)
^^1^1^3101111^
"^DD",2006.918,2006.918,6,1,1,"%D",1,0)
This cross-reference is used for locating the artifact information by artifact filename.
"^DD",2006.918,2006.918,6,1,1,"DT")
3101111
"^DD",2006.918,2006.918,6,3)
Answer must be 1-30 characters in length.
"^DD",2006.918,2006.918,6,21,0)
^^2^2^3101111^
"^DD",2006.918,2006.918,6,21,1,0)
This field contains the artifact filename of the artifact stored on the 
"^DD",2006.918,2006.918,6,21,2,0)
VistA Imaging file servers.
"^DD",2006.918,2006.918,6,23,0)
^^1^1^3101111^
"^DD",2006.918,2006.918,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,6,"DT")
3101111
"^DD",2006.918,2006.918,7,0)
DISK VOLUME^P2005.2'^MAG(2005.2,^2;2^Q
"^DD",2006.918,2006.918,7,3)
Enter the disk name and volume set name where the artifact will be stored.
"^DD",2006.918,2006.918,7,21,0)
^^2^2^3101118^^
"^DD",2006.918,2006.918,7,21,1,0)
This field gives the path for the network location of the stored artifact 
"^DD",2006.918,2006.918,7,21,2,0)
(i.e. on which server it resides).
"^DD",2006.918,2006.918,7,23,0)
^^1^1^3101111^
"^DD",2006.918,2006.918,7,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,7,"DT")
3110804
"^DD",2006.918,2006.918,8,0)
FILEPATH^F^^3;1^K:$L(X)>240!($L(X)<1) X
"^DD",2006.918,2006.918,8,3)
Answer must be 1-240 characters in length.
"^DD",2006.918,2006.918,8,21,0)
^^2^2^3101111^
"^DD",2006.918,2006.918,8,21,1,0)
This field contains the artifact filepath of the artifact stored on the 
"^DD",2006.918,2006.918,8,21,2,0)
VistA Imaging file servers.
"^DD",2006.918,2006.918,8,23,0)
^^1^1^3101111^
"^DD",2006.918,2006.918,8,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.918,8,"DT")
3101111
"^DD",2006.918,2006.9183,0)
URL SUB-FIELD^^.01^1
"^DD",2006.918,2006.9183,0,"DT")
3100411
"^DD",2006.918,2006.9183,0,"NM","URL")

"^DD",2006.918,2006.9183,0,"UP")
2006.918
"^DD",2006.918,2006.9183,.01,0)
URL^Wx^^0;1^Q
"^DD",2006.918,2006.9183,.01,3)
Enter the URL where the artifact could be retrieved.
"^DD",2006.918,2006.9183,.01,21,0)
^.001^2^2^3110914^^^^
"^DD",2006.918,2006.9183,.01,21,1,0)
A field used by storage provider subclasses to retrieve an artifact. The 
"^DD",2006.918,2006.9183,.01,21,2,0)
URL needs to have meaning only to the storage provider that created the artifact.
"^DD",2006.918,2006.9183,.01,23,0)
^.001^1^1^3110914^^^^
"^DD",2006.918,2006.9183,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.918,2006.9183,.01,"DT")
3100411
"^DD",2006.9191,2006.9191,0)
FIELD^^5^6
"^DD",2006.9191,2006.9191,0,"DDA")
N
"^DD",2006.9191,2006.9191,0,"DT")
3111207
"^DD",2006.9191,2006.9191,0,"IX","B",2006.9191,.01)

"^DD",2006.9191,2006.9191,0,"NM","MAGV GATEWAY CONFIGURATION")

"^DD",2006.9191,2006.9191,0,"VRPK")
MAG
"^DD",2006.9191,2006.9191,.01,0)
HOSTNAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.9191,2006.9191,.01,1,0)
^.1
"^DD",2006.9191,2006.9191,.01,1,1,0)
2006.9191^B
"^DD",2006.9191,2006.9191,.01,1,1,1)
S ^MAGV(2006.9191,"B",$E(X,1,30),DA)=""
"^DD",2006.9191,2006.9191,.01,1,1,2)
K ^MAGV(2006.9191,"B",$E(X,1,30),DA)
"^DD",2006.9191,2006.9191,.01,3)
Enter hostname, 3-30 characters in length.
"^DD",2006.9191,2006.9191,.01,21,0)
^.001^1^1^3100401^^
"^DD",2006.9191,2006.9191,.01,21,1,0)
Name of the DICOM Gateway.
"^DD",2006.9191,2006.9191,.01,"DT")
3100401
"^DD",2006.9191,2006.9191,1,0)
MAILGROUP^F^^1;1^K:$L(X)>240!($L(X)<5) X
"^DD",2006.9191,2006.9191,1,3)
Answer must be 5-240 characters in length.
"^DD",2006.9191,2006.9191,1,21,0)
^.001^1^1^3100405^^^^
"^DD",2006.9191,2006.9191,1,21,1,0)
Name of the mail group where DICOM Gateway mail is sent.
"^DD",2006.9191,2006.9191,1,"DT")
3100405
"^DD",2006.9191,2006.9191,2,0)
POSTOFFICE^F^^2;1^K:$L(X)>64!($L(X)<1) X
"^DD",2006.9191,2006.9191,2,3)
Answer must be 1-64 characters in length.
"^DD",2006.9191,2006.9191,2,21,0)
^^1^1^3100401^
"^DD",2006.9191,2006.9191,2,21,1,0)
Name of the post office where DICOM Gateway mail is sent.
"^DD",2006.9191,2006.9191,2,"DT")
3100401
"^DD",2006.9191,2006.9191,3,0)
POSTPORT^NJ5,0^^2;2^K:+X'=X!(X>65535)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.9191,2006.9191,3,3)
Type a Number between 1 and 65535, 0 Decimal Digits.
"^DD",2006.9191,2006.9191,3,21,0)
^^1^1^3100401^
"^DD",2006.9191,2006.9191,3,21,1,0)
The port where the DICOM Gateway mail is sent.
"^DD",2006.9191,2006.9191,3,"DT")
3100401
"^DD",2006.9191,2006.9191,4,0)
IMPORTER^S^YES:YES;NO:NO;^2;3^Q
"^DD",2006.9191,2006.9191,4,3)
Should Importer be used on the DICOM Image Gateway?
"^DD",2006.9191,2006.9191,4,21,0)
^^1^1^3100415^
"^DD",2006.9191,2006.9191,4,21,1,0)
Indicates whether or not the Importer is to be used on the DICOM Image Gateway.
"^DD",2006.9191,2006.9191,4,"DT")
3111207
"^DD",2006.9191,2006.9191,5,0)
DGW LOCATION^P4'^DIC(4,^2;4^Q
"^DD",2006.9191,2006.9191,5,3)
Enter DICOM Gateway location.
"^DD",2006.9191,2006.9191,5,21,0)
^^1^1^3100719^
"^DD",2006.9191,2006.9191,5,21,1,0)
This is the institution where the DICOM Gateway computer resides.
"^DD",2006.9191,2006.9191,5,"DT")
3100719
"^DD",2006.9192,2006.9192,0)
FIELD^^12^15
"^DD",2006.9192,2006.9192,0,"DDA")
N
"^DD",2006.9192,2006.9192,0,"DT")
3111206
"^DD",2006.9192,2006.9192,0,"IX","B",2006.9192,.01)

"^DD",2006.9192,2006.9192,0,"NM","DICOM AE SECURITY MATRIX")

"^DD",2006.9192,2006.9192,0,"VRPK")
MAG
"^DD",2006.9192,2006.9192,.01,0)
AE NAME^RFX^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E)!$D(^MAGV(2006.9192,"B",$$UP^XLFSTR(X))) X
"^DD",2006.9192,2006.9192,.01,1,0)
^.1
"^DD",2006.9192,2006.9192,.01,1,1,0)
2006.9192^B
"^DD",2006.9192,2006.9192,.01,1,1,1)
S ^MAGV(2006.9192,"B",$E($$UP^XLFSTR(X),1,30),DA)=""
"^DD",2006.9192,2006.9192,.01,1,1,2)
K ^MAGV(2006.9192,"B",$E($$UP^XLFSTR(X),1,30),DA)
"^DD",2006.9192,2006.9192,.01,3)
Answer must be 1-30 characters in length.
"^DD",2006.9192,2006.9192,.01,21,0)
^.001^1^1^3120223^^
"^DD",2006.9192,2006.9192,.01,21,1,0)
This is the unique name, case-insensitive, associated with an AE Title.
"^DD",2006.9192,2006.9192,.01,"DT")
3120223
"^DD",2006.9192,2006.9192,1,0)
LOCAL AE TITLE^F^^0;2^K:$L(X)>16!($L(X)<1) X
"^DD",2006.9192,2006.9192,1,.1)

"^DD",2006.9192,2006.9192,1,3)
Answer must be 1-16 characters in length.
"^DD",2006.9192,2006.9192,1,21,0)
^.001^1^1^3110903^^^^
"^DD",2006.9192,2006.9192,1,21,1,0)
This is the Local Application Entity Title.
"^DD",2006.9192,2006.9192,1,"DT")
3110203
"^DD",2006.9192,2006.9192,1.1,0)
REMOTE AE TITLE^RF^^0;6^K:$L(X)>16!($L(X)<1)!(X[$C(32)) X
"^DD",2006.9192,2006.9192,1.1,3)
Answer must be 1-16 characters in length and may not contain spaces.
"^DD",2006.9192,2006.9192,1.1,21,0)
^.001^1^1^3111206^^^^
"^DD",2006.9192,2006.9192,1.1,21,1,0)
This is the Remote Application Entity Title.
"^DD",2006.9192,2006.9192,1.1,"DT")
3120228
"^DD",2006.9192,2006.9192,1.3,0)
FORCE RECONCILIATION^S^0:NO;1:YES;^0;8^Q
"^DD",2006.9192,2006.9192,1.3,3)
Select force reconciliation status.
"^DD",2006.9192,2006.9192,1.3,21,0)
^^2^2^3120111^^^
"^DD",2006.9192,2006.9192,1.3,21,1,0)
If the AE Instance is used to import images that have to be reconciled
"^DD",2006.9192,2006.9192,1.3,21,2,0)
then this field should be set to YES.  The default value for this field is NO.
"^DD",2006.9192,2006.9192,1.3,23,0)
^^1^1^3120111^
"^DD",2006.9192,2006.9192,1.3,23,1,0)
Added in patch MAG*3.0*118
"^DD",2006.9192,2006.9192,1.3,"DT")
3120111
"^DD",2006.9192,2006.9192,1.4,0)
ORIGIN INDEX^S^V:VA;D:DOD;F:FEE;N:NON-VA;I:IHS;^0;9^Q
"^DD",2006.9192,2006.9192,1.4,3)
Enter a code identifying where the image came from.
"^DD",2006.9192,2006.9192,1.4,21,0)
^^1^1^3111115^
"^DD",2006.9192,2006.9192,1.4,21,1,0)
This field indicates where the image originated from.
"^DD",2006.9192,2006.9192,1.4,23,0)
^^1^1^3111115^
"^DD",2006.9192,2006.9192,1.4,23,1,0)
Added in patch MAG*3.0*118
"^DD",2006.9192,2006.9192,1.4,"DT")
3111115
"^DD",2006.9192,2006.9192,2,0)
SITE^P4^DIC(4,^0;3^Q
"^DD",2006.9192,2006.9192,2,3)
Select a Site.
"^DD",2006.9192,2006.9192,2,21,0)
^^1^1^3110202^
"^DD",2006.9192,2006.9192,2,21,1,0)
This is the site associated with an AE title.
"^DD",2006.9192,2006.9192,2,"DT")
3120228
"^DD",2006.9192,2006.9192,3,0)
IP ADDRESS^F^^0;4^K:$L(X)>30!($L(X)<1) X
"^DD",2006.9192,2006.9192,3,3)
Answer must be 1-30 characters in length.
"^DD",2006.9192,2006.9192,3,21,0)
^^1^1^3110202^
"^DD",2006.9192,2006.9192,3,21,1,0)
This is the IP address associated with an AE Title.
"^DD",2006.9192,2006.9192,3,"DT")
3110202
"^DD",2006.9192,2006.9192,4,0)
PORT NUMBER^NJ5,0^^0;5^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.9192,2006.9192,4,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",2006.9192,2006.9192,4,21,0)
^^1^1^3110202^
"^DD",2006.9192,2006.9192,4,21,1,0)
This is the port number associated with an AE title.
"^DD",2006.9192,2006.9192,4,"DT")
3110202
"^DD",2006.9192,2006.9192,6,0)
REJECT^S^0:NO;1:YES;^2;1^Q
"^DD",2006.9192,2006.9192,6,3)
Enter reject.
"^DD",2006.9192,2006.9192,6,21,0)
^.001^1^1^3110903^^
"^DD",2006.9192,2006.9192,6,21,1,0)
Indicates that the HDIG listener should return a DICOM reject message if the received DICOM object is unacceptable.
"^DD",2006.9192,2006.9192,6,"DT")
3110824
"^DD",2006.9192,2006.9192,7,0)
WARNING^S^0:NO;1:YES;^2;2^Q
"^DD",2006.9192,2006.9192,7,3)
Select warning.
"^DD",2006.9192,2006.9192,7,21,0)
^.001^1^1^3110903^^
"^DD",2006.9192,2006.9192,7,21,1,0)
Indicates that the HDIG listener should return a DICOM warning message for duplicate or illegal UIDs.
"^DD",2006.9192,2006.9192,7,"DT")
3110824
"^DD",2006.9192,2006.9192,8,0)
RESERR^S^0:NO;1:YES;^2;3^Q
"^DD",2006.9192,2006.9192,8,3)
Select resource error message flag.
"^DD",2006.9192,2006.9192,8,21,0)
^.001^1^1^3110903^^
"^DD",2006.9192,2006.9192,8,21,1,0)
Indicates that the HDIG listener should return a DICOM resource error message to sender if a resource (VistA DB, RAID, etc.) is unavailable.
"^DD",2006.9192,2006.9192,8,"DT")
3110824
"^DD",2006.9192,2006.9192,9,0)
VALIDATE^S^0:NO;1:YES;^2;4^Q
"^DD",2006.9192,2006.9192,9,3)
Select validate.
"^DD",2006.9192,2006.9192,9,21,0)
^.001^1^1^3110903^^
"^DD",2006.9192,2006.9192,9,21,1,0)
Indicates that detailed DICOM validation should be applied on incoming object (a minimum validation for key elements is always performed).
"^DD",2006.9192,2006.9192,9,"DT")
3110824
"^DD",2006.9192,2006.9192,10,0)
RELAX VALIDATION^S^0:NO;1:YES;^2;5^Q
"^DD",2006.9192,2006.9192,10,3)
Select relax validation.
"^DD",2006.9192,2006.9192,10,21,0)
^.001^1^1^3110903^^
"^DD",2006.9192,2006.9192,10,21,1,0)
Enter "1" if relaxed validation should be applied to incoming objects instead of detailed validation.
"^DD",2006.9192,2006.9192,10,"DT")
3110824
"^DD",2006.9192,2006.9192,11,0)
SERVICE TYPE^S^RAD:RADIOLOGY;CON:CONSULT;^2;6^Q
"^DD",2006.9192,2006.9192,11,3)
Select service type.
"^DD",2006.9192,2006.9192,11,21,0)
^.001^1^1^3111201^^
"^DD",2006.9192,2006.9192,11,21,1,0)
Defines the type of service, Radiology or Consult, the selected remote AE does.
"^DD",2006.9192,2006.9192,11,"DT")
3111201
"^DD",2006.9192,2006.9192,12,0)
DICOM SERVICE AND ROLE^2006.919212S^^3;0
"^DD",2006.9192,2006.9192,12,21,0)
^.001^2^2^3111010^^^^
"^DD",2006.9192,2006.9192,12,21,1,0)
These are the DICOM services and roles associated with
"^DD",2006.9192,2006.9192,12,21,2,0)
this entry.
"^DD",2006.9192,2006.919212,0)
DICOM SERVICE AND ROLE SUB-FIELD^^1^2
"^DD",2006.9192,2006.919212,0,"DT")
3110913
"^DD",2006.9192,2006.919212,0,"IX","B",2006.919212,.01)

"^DD",2006.9192,2006.919212,0,"NM","DICOM SERVICE AND ROLE")

"^DD",2006.9192,2006.919212,0,"UP")
2006.9192
"^DD",2006.9192,2006.919212,.01,0)
DICOM SERVICE^MS^1:C-STORE;2:C-FIND;3:C-MOVE;4:C-GET;5:N-ACTION;6:N-CREATE;7:N-EVENT-REPORT;8:N-GET;9:N-SET;10:N-DELETE;11:C-ECHO;^0;1^Q
"^DD",2006.9192,2006.919212,.01,1,0)
^.1
"^DD",2006.9192,2006.919212,.01,1,1,0)
2006.919212^B
"^DD",2006.9192,2006.919212,.01,1,1,1)
S ^MAGV(2006.9192,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",2006.9192,2006.919212,.01,1,1,2)
K ^MAGV(2006.9192,DA(1),3,"B",$E(X,1,30),DA)
"^DD",2006.9192,2006.919212,.01,3)
Select a DICOM Service.
"^DD",2006.9192,2006.919212,.01,21,0)
^.001^1^1^3111010^^^^
"^DD",2006.9192,2006.919212,.01,21,1,0)
This is the DICOM service associated with this entry.
"^DD",2006.9192,2006.919212,.01,"DT")
3110913
"^DD",2006.9192,2006.919212,1,0)
DICOM ROLE^S^1:SCU;2:SCP;^0;2^Q
"^DD",2006.9192,2006.919212,1,3)
Select a DICOM Role.
"^DD",2006.9192,2006.919212,1,21,0)
^.001^1^1^3111206^^^^
"^DD",2006.9192,2006.919212,1,21,1,0)
This is the DICOM role, Service Class User (SCU) or Service Class Provider ( SCP), associated with the entry. 
"^DD",2006.9192,2006.919212,1,"DT")
3111206
"^DD",2006.9193,2006.9193,0)
FIELD^^.01^1
"^DD",2006.9193,2006.9193,0,"DDA")
N
"^DD",2006.9193,2006.9193,0,"IX","B",2006.9193,.01)

"^DD",2006.9193,2006.9193,0,"NM","IMAGING APPLICATION SERVICE")

"^DD",2006.9193,2006.9193,0,"PT",2006.916,6)

"^DD",2006.9193,2006.9193,0,"PT",2006.916,9)

"^DD",2006.9193,2006.9193,0,"PT",2006.926,4)

"^DD",2006.9193,2006.9193,0,"PT",2006.93,3)

"^DD",2006.9193,2006.9193,0,"PT",2006.941,14)

"^DD",2006.9193,2006.9193,0,"PT",2006.941,15)

"^DD",2006.9193,2006.9193,0,"PT",2006.9411,14)

"^DD",2006.9193,2006.9193,0,"PT",2006.9411,15)

"^DD",2006.9193,2006.9193,0,"VRPK")
MAG
"^DD",2006.9193,2006.9193,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.9193,2006.9193,.01,1,0)
^.1
"^DD",2006.9193,2006.9193,.01,1,1,0)
2006.9193^B
"^DD",2006.9193,2006.9193,.01,1,1,1)
S ^MAGV(2006.9193,"B",$E(X,1,30),DA)=""
"^DD",2006.9193,2006.9193,.01,1,1,2)
K ^MAGV(2006.9193,"B",$E(X,1,30),DA)
"^DD",2006.9193,2006.9193,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation.
"^DD",2006.9193,2006.9193,.01,21,0)
^^1^1^3111216^
"^DD",2006.9193,2006.9193,.01,21,1,0)
This is the name of VistA Imaging application or service. 
"^DD",2006.9193,2006.9193,.01,23,0)
^^1^1^3111216^
"^DD",2006.9193,2006.9193,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.9193,2006.9193,.01,"DT")
3111216
"^DD",2006.921,2006.921,0)
FIELD^^7^5
"^DD",2006.921,2006.921,0,"DDA")
N
"^DD",2006.921,2006.921,0,"DT")
3100412
"^DD",2006.921,2006.921,0,"IX","B",2006.921,.01)

"^DD",2006.921,2006.921,0,"NM","ARTIFACT RETENTION POLICY")

"^DD",2006.921,2006.921,0,"PT",2006.922,.01)

"^DD",2006.921,2006.921,0,"VRPK")
MAG
"^DD",2006.921,2006.921,.01,0)
ARTIFACT^RP2006.916'^MAGV(2006.916,^0;1^Q
"^DD",2006.921,2006.921,.01,1,0)
^.1
"^DD",2006.921,2006.921,.01,1,1,0)
2006.921^B
"^DD",2006.921,2006.921,.01,1,1,1)
S ^MAGV(2006.921,"B",$E(X,1,30),DA)=""
"^DD",2006.921,2006.921,.01,1,1,2)
K ^MAGV(2006.921,"B",$E(X,1,30),DA)
"^DD",2006.921,2006.921,.01,3)
Select Artifact.
"^DD",2006.921,2006.921,.01,21,0)
^.001^1^1^3100412^^
"^DD",2006.921,2006.921,.01,21,1,0)
This is the related Artifact.
"^DD",2006.921,2006.921,.01,23,0)
^.001^1^1^3100412^^
"^DD",2006.921,2006.921,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.921,2006.921,.01,"DT")
3110804
"^DD",2006.921,2006.921,2,0)
RETENTION POLICY^RP2006.914'^MAGV(2006.914,^0;2^Q
"^DD",2006.921,2006.921,2,3)
Select Retention Policy.
"^DD",2006.921,2006.921,2,21,0)
^.001^1^1^3100412^^
"^DD",2006.921,2006.921,2,21,1,0)
This is the related Retention Policy.
"^DD",2006.921,2006.921,2,23,0)
^.001^1^1^3100412^^
"^DD",2006.921,2006.921,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.921,2006.921,2,"DT")
3110804
"^DD",2006.921,2006.921,3,0)
CREATED DATE/TIME^RD^^0;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.921,2006.921,3,3)
Enter date and time when the record was created.
"^DD",2006.921,2006.921,3,21,0)
^.001^1^1^3110907^^^
"^DD",2006.921,2006.921,3,21,1,0)
Date and time that the record was created.
"^DD",2006.921,2006.921,3,23,0)
^.001^1^1^3110907^^^
"^DD",2006.921,2006.921,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.921,2006.921,3,"DT")
3110914
"^DD",2006.921,2006.921,4,0)
ACTIVE^RS^0:No;1:Yes;^0;4^Q
"^DD",2006.921,2006.921,4,3)
Enter status of artifact retention policy, "0" equals inactive, "1" equals active.
"^DD",2006.921,2006.921,4,21,0)
^.001^2^2^3100412^^
"^DD",2006.921,2006.921,4,21,1,0)
This field indicates whether or not the artifact retention policy record is 
"^DD",2006.921,2006.921,4,21,2,0)
still active.
"^DD",2006.921,2006.921,4,23,0)
^.001^1^1^3100412^^
"^DD",2006.921,2006.921,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.921,2006.921,4,"DT")
3110804
"^DD",2006.921,2006.921,6,0)
SATISFIED DATE/TIME^D^^0;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2006.921,2006.921,6,3)
Enter date and time that the artifact retention policy was satisfied.
"^DD",2006.921,2006.921,6,21,0)
^.001^2^2^3110914^^^^
"^DD",2006.921,2006.921,6,21,1,0)
Date and time that the artifact retention policy was satisfied.
"^DD",2006.921,2006.921,6,21,2,0)
If this field is not set the artifact retention policy has not been satisfied.
"^DD",2006.921,2006.921,6,23,0)
^.001^1^1^3110914^^^^
"^DD",2006.921,2006.921,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.921,2006.921,6,"DT")
3110914
"^DD",2006.922,2006.922,0)
FIELD^^3^3
"^DD",2006.922,2006.922,0,"DDA")
N
"^DD",2006.922,2006.922,0,"DT")
3100412
"^DD",2006.922,2006.922,0,"IX","B",2006.922,.01)

"^DD",2006.922,2006.922,0,"NM","RETENTION POLICY FULFILLMENT")

"^DD",2006.922,2006.922,0,"VRPK")
MAG
"^DD",2006.922,2006.922,.01,0)
ARTIFACT RETENTION POLICY^RP2006.921'^MAGV(2006.921,^0;1^Q
"^DD",2006.922,2006.922,.01,1,0)
^.1
"^DD",2006.922,2006.922,.01,1,1,0)
2006.922^B
"^DD",2006.922,2006.922,.01,1,1,1)
S ^MAGV(2006.922,"B",$E(X,1,30),DA)=""
"^DD",2006.922,2006.922,.01,1,1,2)
K ^MAGV(2006.922,"B",$E(X,1,30),DA)
"^DD",2006.922,2006.922,.01,3)
Select artifact retention policy.
"^DD",2006.922,2006.922,.01,21,0)
^.001^1^1^3100412^^
"^DD",2006.922,2006.922,.01,21,1,0)
This is the associated artifact retention policy record.
"^DD",2006.922,2006.922,.01,23,0)
^.001^1^1^3100412^^
"^DD",2006.922,2006.922,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.922,2006.922,.01,"DT")
3110804
"^DD",2006.922,2006.922,2,0)
ARTIFACT INSTANCE^RP2006.918'^MAGV(2006.918,^0;2^Q
"^DD",2006.922,2006.922,2,3)
Select artifact instance.
"^DD",2006.922,2006.922,2,21,0)
^.001^1^1^3100412^^
"^DD",2006.922,2006.922,2,21,1,0)
This is the associated artifact instance record.
"^DD",2006.922,2006.922,2,23,0)
^.001^1^1^3100412^^
"^DD",2006.922,2006.922,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.922,2006.922,2,"DT")
3110804
"^DD",2006.922,2006.922,3,0)
CREATED DATE/TIME^RD^^0;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.922,2006.922,3,3)
Enter date and time the record was created.
"^DD",2006.922,2006.922,3,21,0)
^.001^1^1^3110914^^^^
"^DD",2006.922,2006.922,3,21,1,0)
Date and time that this record was created.
"^DD",2006.922,2006.922,3,23,0)
^.001^1^1^3110914^^^^
"^DD",2006.922,2006.922,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.922,2006.922,3,"DT")
3110914
"^DD",2006.923,2006.923,0)
FIELD^^5^5
"^DD",2006.923,2006.923,0,"DDA")
N
"^DD",2006.923,2006.923,0,"DT")
3100413
"^DD",2006.923,2006.923,0,"IX","B",2006.923,.01)

"^DD",2006.923,2006.923,0,"NM","RETENTION POLICY STORAGE PROVIDER MAP")

"^DD",2006.923,2006.923,0,"VRPK")
MAG
"^DD",2006.923,2006.923,.01,0)
RETENTION POLICY^RP2006.914'^MAGV(2006.914,^0;1^Q
"^DD",2006.923,2006.923,.01,1,0)
^.1
"^DD",2006.923,2006.923,.01,1,1,0)
2006.923^B
"^DD",2006.923,2006.923,.01,1,1,1)
S ^MAGV(2006.923,"B",$E(X,1,30),DA)=""
"^DD",2006.923,2006.923,.01,1,1,2)
K ^MAGV(2006.923,"B",$E(X,1,30),DA)
"^DD",2006.923,2006.923,.01,3)
Select a Retention Policy.
"^DD",2006.923,2006.923,.01,21,0)
^.001^1^1^3100412^^^
"^DD",2006.923,2006.923,.01,21,1,0)
This is a Retention Policy.
"^DD",2006.923,2006.923,.01,23,0)
^.001^1^1^3100412^^^
"^DD",2006.923,2006.923,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.923,2006.923,.01,"DT")
3110804
"^DD",2006.923,2006.923,2,0)
STORAGE PROVIDER^RP2006.917'^MAGV(2006.917,^0;2^Q
"^DD",2006.923,2006.923,2,3)
Select a Storage Provider.
"^DD",2006.923,2006.923,2,21,0)
^.001^1^1^3110904^^^^
"^DD",2006.923,2006.923,2,21,1,0)
This is a Storage Provider.
"^DD",2006.923,2006.923,2,23,0)
^.001^1^1^3110904^^^^
"^DD",2006.923,2006.923,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.923,2006.923,2,"DT")
3110804
"^DD",2006.923,2006.923,3,0)
SOURCE PLACE^RP2006.1'^MAG(2006.1,^0;3^Q
"^DD",2006.923,2006.923,3,3)
Select Place.
"^DD",2006.923,2006.923,3,21,0)
^.001^2^2^3110908^^^^
"^DD",2006.923,2006.923,3,21,1,0)
This is a Place.
"^DD",2006.923,2006.923,3,21,2,0)
Represents the "place" of the client.
"^DD",2006.923,2006.923,3,23,0)
^.001^1^1^3110908^^^^
"^DD",2006.923,2006.923,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.923,2006.923,3,"DT")
3110905
"^DD",2006.923,2006.923,4,0)
SYNCHRONOUS^RS^0:No;1:Yes;^0;4^Q
"^DD",2006.923,2006.923,4,3)
Enter synchronous or asynchronous status.
"^DD",2006.923,2006.923,4,21,0)
^.001^4^4^3100412^^
"^DD",2006.923,2006.923,4,21,1,0)
This field indicates whether the storage provider should be written to synchronously 
"^DD",2006.923,2006.923,4,21,2,0)
for the specified retention policy on initial acquisition. Enter "Yes" for synchronous, "No" for asynchronous.
"^DD",2006.923,2006.923,4,21,3,0)
Note that this flag is ignored when processing asynchronous 
"^DD",2006.923,2006.923,4,21,4,0)
queued requests.
"^DD",2006.923,2006.923,4,23,0)
^.001^1^1^3100412^^
"^DD",2006.923,2006.923,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.923,2006.923,4,"DT")
3110804
"^DD",2006.923,2006.923,5,0)
OFFSITE^RS^0:No;1:Yes;^0;5^Q
"^DD",2006.923,2006.923,5,3)
Enter if the storage provider is remote.
"^DD",2006.923,2006.923,5,21,0)
^.001^1^1^3100412^^
"^DD",2006.923,2006.923,5,21,1,0)
Indicates whether the storage provider is remote  (true: "1") or local (false: "0"). 
"^DD",2006.923,2006.923,5,23,0)
^.001^1^1^3100412^^
"^DD",2006.923,2006.923,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.923,2006.923,5,"DT")
3110804
"^DD",2006.924,2006.924,0)
FIELD^^4^4
"^DD",2006.924,2006.924,0,"DDA")
N
"^DD",2006.924,2006.924,0,"DT")
3100413
"^DD",2006.924,2006.924,0,"IX","B",2006.924,.01)

"^DD",2006.924,2006.924,0,"NM","STORAGE PROVIDER AVAILABILITY")

"^DD",2006.924,2006.924,0,"VRPK")
MAG
"^DD",2006.924,2006.924,.01,0)
STORAGE PROVIDER^RP2006.917'^MAGV(2006.917,^0;1^Q
"^DD",2006.924,2006.924,.01,1,0)
^.1
"^DD",2006.924,2006.924,.01,1,1,0)
2006.924^B
"^DD",2006.924,2006.924,.01,1,1,1)
S ^MAGV(2006.924,"B",$E(X,1,30),DA)=""
"^DD",2006.924,2006.924,.01,1,1,2)
K ^MAGV(2006.924,"B",$E(X,1,30),DA)
"^DD",2006.924,2006.924,.01,3)
Select a Storage Provider.
"^DD",2006.924,2006.924,.01,21,0)
^.001^1^1^3110903^^^^
"^DD",2006.924,2006.924,.01,21,1,0)
This is a Storage Provider.
"^DD",2006.924,2006.924,.01,23,0)
^.001^1^1^3110903^^^^
"^DD",2006.924,2006.924,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.924,2006.924,.01,"DT")
3110804
"^DD",2006.924,2006.924,2,0)
SOURCE PLACE^P2006.1'^MAG(2006.1,^0;2^Q
"^DD",2006.924,2006.924,2,3)
Select place.
"^DD",2006.924,2006.924,2,21,0)
^.001^5^5^3100412^^
"^DD",2006.924,2006.924,2,21,1,0)
This is a Place.
"^DD",2006.924,2006.924,2,21,2,0)
This maps the storage provider (with its Place) to a specific client 
"^DD",2006.924,2006.924,2,21,3,0)
Place. It essentially defines a logical network path.
"^DD",2006.924,2006.924,2,21,4,0)
Allows us to say, for example, that from Place A, you can only 
"^DD",2006.924,2006.924,2,21,5,0)
write to the Archive storage provider in Place B between certain hours.
"^DD",2006.924,2006.924,2,23,0)
^.001^1^1^3100412^^^^
"^DD",2006.924,2006.924,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.924,2006.924,2,"DT")
3110804
"^DD",2006.924,2006.924,3,0)
START TIME^RD^^0;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.924,2006.924,3,3)
Enter date and time of the availability window.
"^DD",2006.924,2006.924,3,21,0)
^.001^1^1^3100412^^
"^DD",2006.924,2006.924,3,21,1,0)
The start time for the availability window.
"^DD",2006.924,2006.924,3,23,0)
^.001^1^1^3100412^^^
"^DD",2006.924,2006.924,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.924,2006.924,3,"DT")
3100412
"^DD",2006.924,2006.924,4,0)
END TIME^RD^^0;4^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.924,2006.924,4,3)
Enter date and time of end availability window.
"^DD",2006.924,2006.924,4,21,0)
^.001^12^12^3111110^^^
"^DD",2006.924,2006.924,4,21,1,0)
The end time for the availability window.
"^DD",2006.924,2006.924,4,21,2,0)
If the end time is greater than the start time, it is taken to be 
"^DD",2006.924,2006.924,4,21,3,0)
a window in a single day. 
"^DD",2006.924,2006.924,4,21,4,0)
Example: Start time of 8PM, End time of 10 PM
"^DD",2006.924,2006.924,4,21,5,0)
results in a two hour window each day between 8PM and 10PM.
"^DD",2006.924,2006.924,4,21,6,0)
If the end time is less than the start time, it is taken to be a 
"^DD",2006.924,2006.924,4,21,7,0)
window that spans across midnight, encompassing two days.
"^DD",2006.924,2006.924,4,21,8,0)
Example: Start time of 10PM, End time of 2AM
"^DD",2006.924,2006.924,4,21,9,0)
results in a four hour window, starting at 10PM on the first day, 
"^DD",2006.924,2006.924,4,21,10,0)
and ending at 2AM on the next day.
"^DD",2006.924,2006.924,4,21,11,0)

"^DD",2006.924,2006.924,4,21,12,0)
The date component of this field is ignored. VA FileMan doesn't support Time only data type.
"^DD",2006.924,2006.924,4,23,0)
^.001^1^1^3100412^^^
"^DD",2006.924,2006.924,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.924,2006.924,4,"DT")
3111110
"^DD",2006.925,2006.925,0)
FIELD^^5^5
"^DD",2006.925,2006.925,0,"DDA")
N
"^DD",2006.925,2006.925,0,"DT")
3110914
"^DD",2006.925,2006.925,0,"IX","B",2006.925,.01)

"^DD",2006.925,2006.925,0,"NM","TRANSFER STATISTICS")

"^DD",2006.925,2006.925,0,"VRPK")
MAG
"^DD",2006.925,2006.925,.01,0)
STORAGE PROVIDER^RP2006.917'^MAGV(2006.917,^0;1^Q
"^DD",2006.925,2006.925,.01,1,0)
^.1
"^DD",2006.925,2006.925,.01,1,1,0)
2006.925^B
"^DD",2006.925,2006.925,.01,1,1,1)
S ^MAGV(2006.925,"B",$E(X,1,30),DA)=""
"^DD",2006.925,2006.925,.01,1,1,2)
K ^MAGV(2006.925,"B",$E(X,1,30),DA)
"^DD",2006.925,2006.925,.01,3)
Select a Storage Provider.
"^DD",2006.925,2006.925,.01,21,0)
^.001^2^2^3111109^^^
"^DD",2006.925,2006.925,.01,21,1,0)
This is the storage provider that provided the storage or retrieval 
"^DD",2006.925,2006.925,.01,21,2,0)
service for the transaction.
"^DD",2006.925,2006.925,.01,23,0)
^.001^1^1^3111109^^
"^DD",2006.925,2006.925,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.925,2006.925,.01,"DT")
3111110
"^DD",2006.925,2006.925,2,0)
ENDPOINT PLACE^RP2006.1'^MAG(2006.1,^0;2^Q
"^DD",2006.925,2006.925,2,3)
Select Place of the client.
"^DD",2006.925,2006.925,2,21,0)
^^1^1^3111109^^^
"^DD",2006.925,2006.925,2,21,1,0)
This is the place of the client.
"^DD",2006.925,2006.925,2,23,0)
^^1^1^3100311^
"^DD",2006.925,2006.925,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.925,2006.925,2,"DT")
3111109
"^DD",2006.925,2006.925,3,0)
START DATE/TIME^RD^^0;3^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",2006.925,2006.925,3,3)
(No range limit on date)
"^DD",2006.925,2006.925,3,21,0)
^.001^1^1^3110907^^^^
"^DD",2006.925,2006.925,3,21,1,0)
The date and time at which the transaction began.
"^DD",2006.925,2006.925,3,23,0)
^.001^1^1^3110907^^^
"^DD",2006.925,2006.925,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.925,2006.925,3,"DT")
3110914
"^DD",2006.925,2006.925,4,0)
DURATION IN MILLISECONDS^RNJ12,0^^0;4^K:+X'=X!(X>999999999999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.925,2006.925,4,3)
Enter duration in milliseconds, number between 0 and 999999999999, 0 Decimal Digits.
"^DD",2006.925,2006.925,4,21,0)
^^1^1^3100426^^
"^DD",2006.925,2006.925,4,21,1,0)
The duration in milliseconds for the transfer.
"^DD",2006.925,2006.925,4,23,0)
^^1^1^3100426^
"^DD",2006.925,2006.925,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.925,2006.925,4,"DT")
3100426
"^DD",2006.925,2006.925,5,0)
SIZE IN BYTES^RNJ14,0^^0;5^K:+X'=X!(X>99999999999999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.925,2006.925,5,3)
Enter size in bytes, number between 0 and 99999999999999, 0 Decimal Digits.
"^DD",2006.925,2006.925,5,21,0)
^^1^1^3100412^^^
"^DD",2006.925,2006.925,5,21,1,0)
The size of the transfer in bytes.
"^DD",2006.925,2006.925,5,23,0)
^^1^1^3100311^^
"^DD",2006.925,2006.925,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.925,2006.925,5,"DT")
3100412
"^DD",2006.926,2006.926,0)
FIELD^^7^7
"^DD",2006.926,2006.926,0,"DDA")
N
"^DD",2006.926,2006.926,0,"DT")
3111216
"^DD",2006.926,2006.926,0,"IX","B",2006.926,.01)

"^DD",2006.926,2006.926,0,"NM","STORAGE TRANSACTION")

"^DD",2006.926,2006.926,0,"VRPK")
MAG
"^DD",2006.926,2006.926,.01,0)
TRANSACTION TYPE^RS^R:Read;W:Write;C:Configuration;^0;1^Q
"^DD",2006.926,2006.926,.01,1,0)
^.1
"^DD",2006.926,2006.926,.01,1,1,0)
2006.926^B
"^DD",2006.926,2006.926,.01,1,1,1)
S ^MAGV(2006.926,"B",$E(X,1,30),DA)=""
"^DD",2006.926,2006.926,.01,1,1,2)
K ^MAGV(2006.926,"B",$E(X,1,30),DA)
"^DD",2006.926,2006.926,.01,3)
Select transaction type.
"^DD",2006.926,2006.926,.01,21,0)
^^1^1^3111216^
"^DD",2006.926,2006.926,.01,21,1,0)
This is the type of transaction.
"^DD",2006.926,2006.926,.01,23,0)
^^1^1^3100311^
"^DD",2006.926,2006.926,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.926,2006.926,.01,"DT")
3111216
"^DD",2006.926,2006.926,2,0)
SUCCEEDED^RS^0:NO;1:YES;^0;2^Q
"^DD",2006.926,2006.926,2,3)
Did the transaction succeed?
"^DD",2006.926,2006.926,2,21,0)
^^1^1^3111219^
"^DD",2006.926,2006.926,2,21,1,0)
This field indicates whether or not the transaction was successful.
"^DD",2006.926,2006.926,2,23,0)
^^1^1^3111216^^
"^DD",2006.926,2006.926,2,23,1,0)
Added in path MAG*3.0*34
"^DD",2006.926,2006.926,2,"DT")
3111219
"^DD",2006.926,2006.926,3,0)
TRANSACTION DATE/TIME^RD^^0;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.926,2006.926,3,3)
Enter date and time of transaction.
"^DD",2006.926,2006.926,3,21,0)
^.001^1^1^3110907^^^^
"^DD",2006.926,2006.926,3,21,1,0)
The date and time at which the transaction entry was recorded.
"^DD",2006.926,2006.926,3,23,0)
^.001^1^1^3110907^^^^
"^DD",2006.926,2006.926,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.926,2006.926,3,"DT")
3110914
"^DD",2006.926,2006.926,4,0)
INITIATING APPLICATION^RP2006.9193^MAGV(2006.9193,^0;4^Q
"^DD",2006.926,2006.926,4,3)
Enter initiating application.
"^DD",2006.926,2006.926,4,21,0)
^^3^3^3111215^^
"^DD",2006.926,2006.926,4,21,1,0)
This is the application that initiated the transaction.
"^DD",2006.926,2006.926,4,23,0)
^^1^1^3100311^
"^DD",2006.926,2006.926,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.926,2006.926,4,"DT")
3111215
"^DD",2006.926,2006.926,5,0)
ARTIFACT^RP2006.916'^MAGV(2006.916,^0;5^Q
"^DD",2006.926,2006.926,5,3)
Select artifact.
"^DD",2006.926,2006.926,5,21,0)
^^1^1^3111216^
"^DD",2006.926,2006.926,5,21,1,0)
This is the Artifact related to the transaction.
"^DD",2006.926,2006.926,5,23,0)
^^1^1^3100311^
"^DD",2006.926,2006.926,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.926,2006.926,5,"DT")
3111216
"^DD",2006.926,2006.926,6,0)
STORAGE PROVIDER^RP2006.917'^MAGV(2006.917,^0;6^Q
"^DD",2006.926,2006.926,6,3)
Select a storage provider.
"^DD",2006.926,2006.926,6,21,0)
^.001^1^1^3110906^^^
"^DD",2006.926,2006.926,6,21,1,0)
This is the Storage Provider related to the transaction.
"^DD",2006.926,2006.926,6,23,0)
^.001^1^1^3110906^^
"^DD",2006.926,2006.926,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.926,2006.926,6,"DT")
3110906
"^DD",2006.926,2006.926,7,0)
MESSAGE^2006.9267^^1;0
"^DD",2006.926,2006.926,7,21,0)
^.001^2^2^3111219^^^
"^DD",2006.926,2006.926,7,21,1,0)
An optional field containing additional information related to the
"^DD",2006.926,2006.926,7,21,2,0)
transaction (stack trace, error codes, etc).
"^DD",2006.926,2006.9267,0)
MESSAGE SUB-FIELD^^.01^1
"^DD",2006.926,2006.9267,0,"DT")
3100719
"^DD",2006.926,2006.9267,0,"NM","MESSAGE")

"^DD",2006.926,2006.9267,0,"UP")
2006.926
"^DD",2006.926,2006.9267,.01,0)
MESSAGE^Wx^^0;1^Q
"^DD",2006.926,2006.9267,.01,3)
Enter additional information about the transaction.
"^DD",2006.926,2006.9267,.01,21,0)
^.001^2^2^3110914^^^^
"^DD",2006.926,2006.9267,.01,21,1,0)
An optional field containing addition information related to the 
"^DD",2006.926,2006.9267,.01,21,2,0)
transaction (stack trace, error codes, etc).
"^DD",2006.926,2006.9267,.01,"DT")
3100719
"^DD",2006.927,2006.927,0)
FIELD^^3^6
"^DD",2006.927,2006.927,0,"DDA")
N
"^DD",2006.927,2006.927,0,"DT")
3110902
"^DD",2006.927,2006.927,0,"IX","B",2006.927,.01)

"^DD",2006.927,2006.927,0,"NM","QUEUE")

"^DD",2006.927,2006.927,0,"PT",2006.928,.01)

"^DD",2006.927,2006.927,0,"VRPK")
MAG
"^DD",2006.927,2006.927,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.927,2006.927,.01,1,0)
^.1
"^DD",2006.927,2006.927,.01,1,1,0)
2006.927^B
"^DD",2006.927,2006.927,.01,1,1,1)
S ^MAGV(2006.927,"B",$E(X,1,64),DA)=""
"^DD",2006.927,2006.927,.01,1,1,2)
K ^MAGV(2006.927,"B",$E(X,1,64),DA)
"^DD",2006.927,2006.927,.01,3)
Enter Queue name, 3-64 characters in length.
"^DD",2006.927,2006.927,.01,21,0)
^^1^1^3111024^^^
"^DD",2006.927,2006.927,.01,21,1,0)
The queue name.
"^DD",2006.927,2006.927,.01,23,0)
^^1^1^3111024^
"^DD",2006.927,2006.927,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.927,2006.927,.01,"DT")
3111024
"^DD",2006.927,2006.927,2,0)
QUEUE TYPE^RS^E:ERROR;I:ICON;S:STORAGE;M:E-MAIL;^0;2^Q
"^DD",2006.927,2006.927,2,3)
Enter the queue type.
"^DD",2006.927,2006.927,2,21,0)
^^8^8^3111027^^
"^DD",2006.927,2006.927,2,21,1,0)
The queue type.
"^DD",2006.927,2006.927,2,21,2,0)
ERROR indicates that the messages in this queue are ERROR messages.
"^DD",2006.927,2006.927,2,21,3,0)
ICON indicates that the messages in this queue are requests for 
"^DD",2006.927,2006.927,2,21,4,0)
icons (abstracts) to be made.
"^DD",2006.927,2006.927,2,21,5,0)
STORAGE indicates that the messages in this queue are requests 
"^DD",2006.927,2006.927,2,21,6,0)
for async storage operations to be completed.
"^DD",2006.927,2006.927,2,21,7,0)
E-MAIL indicates that the messages in this queue are messages that need 
"^DD",2006.927,2006.927,2,21,8,0)
to be sent to system administrators.
"^DD",2006.927,2006.927,2,23,0)
^.001^1^1^3100528^^^
"^DD",2006.927,2006.927,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.927,2006.927,2,"DT")
3111027
"^DD",2006.927,2006.927,3,0)
ACTIVE^RS^0:Inactive;1:Active;^0;3^Q
"^DD",2006.927,2006.927,3,3)
Enter queue status.
"^DD",2006.927,2006.927,3,21,0)
^^1^1^3111027^
"^DD",2006.927,2006.927,3,21,1,0)
Whether or not the queue is active.
"^DD",2006.927,2006.927,3,23,0)
^.001^1^1^3110903^^^^
"^DD",2006.927,2006.927,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.927,2006.927,3,"DT")
3111027
"^DD",2006.927,2006.927,4,0)
NUM RETRIES^NJ3,0^^0;4^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.927,2006.927,4,3)
Type a number between 0 and 999, 0 Decimal Digits.
"^DD",2006.927,2006.927,4,21,0)
^^2^2^3100517^
"^DD",2006.927,2006.927,4,21,1,0)
The number of times the system should attempt to process a queue message 
"^DD",2006.927,2006.927,4,21,2,0)
before it considers the message a failure. Default value is 5. 
"^DD",2006.927,2006.927,4,23,0)
^^1^1^3100517^^
"^DD",2006.927,2006.927,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.927,2006.927,4,"DT")
3100517
"^DD",2006.927,2006.927,5,0)
RETRY DELAY IN SECONDS^NJ5,0^^0;5^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.927,2006.927,5,3)
Type a number between 0 and 99999, 0 Decimal Digits.
"^DD",2006.927,2006.927,5,21,0)
^^2^2^3100517^
"^DD",2006.927,2006.927,5,21,1,0)
The number of seconds the system should wait before re-attempting to 
"^DD",2006.927,2006.927,5,21,2,0)
process a message if the previous attempt failed. Default value is 1200.
"^DD",2006.927,2006.927,5,23,0)
^^1^1^3100517^
"^DD",2006.927,2006.927,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.927,2006.927,5,"DT")
3100517
"^DD",2006.927,2006.927,6,0)
TRIGGER DELAY IN SECONDS^NJ5,0^^0;6^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1.N) X
"^DD",2006.927,2006.927,6,3)
Type a number between 0 and 99999, 0 Decimal Digits.
"^DD",2006.927,2006.927,6,21,0)
^^2^2^3100517^
"^DD",2006.927,2006.927,6,21,1,0)
The number of seconds the system should wait before checking for another 
"^DD",2006.927,2006.927,6,21,2,0)
queue message after the queue is empty. Default value is 60.
"^DD",2006.927,2006.927,6,23,0)
^^1^1^3100517^
"^DD",2006.927,2006.927,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.927,2006.927,6,"DT")
3100517
"^DD",2006.928,2006.928,0)
FIELD^^7^7
"^DD",2006.928,2006.928,0,"DDA")
N
"^DD",2006.928,2006.928,0,"DT")
3110907
"^DD",2006.928,2006.928,0,"IX","B",2006.928,.01)

"^DD",2006.928,2006.928,0,"NM","QUEUE MESSAGE")

"^DD",2006.928,2006.928,0,"VRPK")
MAG
"^DD",2006.928,2006.928,.01,0)
QUEUE^RP2006.927'^MAGV(2006.927,^0;1^Q
"^DD",2006.928,2006.928,.01,1,0)
^.1
"^DD",2006.928,2006.928,.01,1,1,0)
2006.928^B
"^DD",2006.928,2006.928,.01,1,1,1)
S ^MAGV(2006.928,"B",$E(X,1,30),DA)=""
"^DD",2006.928,2006.928,.01,1,1,2)
K ^MAGV(2006.928,"B",$E(X,1,30),DA)
"^DD",2006.928,2006.928,.01,3)
Select Queue.
"^DD",2006.928,2006.928,.01,21,0)
^.001^1^1^3111025^^^
"^DD",2006.928,2006.928,.01,21,1,0)
This is the queue in which the message is placed.
"^DD",2006.928,2006.928,.01,23,0)
^^1^1^3111024^
"^DD",2006.928,2006.928,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.928,.01,"DT")
3111024
"^DD",2006.928,2006.928,2,0)
PRIORITY^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1.N) X
"^DD",2006.928,2006.928,2,3)
Type a number between 1 and 99, 0 decimal digits.
"^DD",2006.928,2006.928,2,21,0)
^^4^4^3111026^
"^DD",2006.928,2006.928,2,21,1,0)
An ordinal number indicating the priority of this message. Higher 
"^DD",2006.928,2006.928,2,21,2,0)
priority messages will be fetched from the queue and processed ahead of 
"^DD",2006.928,2006.928,2,21,3,0)
lower priority messages. 1 indicates highest priority and 99 the lowest 
"^DD",2006.928,2006.928,2,21,4,0)
priority.
"^DD",2006.928,2006.928,2,23,0)
^.001^1^1^3100413^^
"^DD",2006.928,2006.928,2,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.928,2,"DT")
3111026
"^DD",2006.928,2006.928,3,0)
ENQUEUED DATE/TIME^RD^^0;3^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.928,2006.928,3,1,0)
^.1^^0
"^DD",2006.928,2006.928,3,3)
Date and time the message was placed on queue.
"^DD",2006.928,2006.928,3,21,0)
^.001^1^1^3100719^^^^
"^DD",2006.928,2006.928,3,21,1,0)
Date and time at which the message was placed in the queue.
"^DD",2006.928,2006.928,3,23,0)
^.001^1^1^3100719^^
"^DD",2006.928,2006.928,3,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.928,3,"DT")
3110914
"^DD",2006.928,2006.928,4,0)
EARLIEST DELIVERY DATE/TIME^D^^0;4^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",2006.928,2006.928,4,3)
Enter date and time of earliest delivery.
"^DD",2006.928,2006.928,4,21,0)
^^2^2^3111026^^^^
"^DD",2006.928,2006.928,4,21,1,0)
Date and time that must be reached before the message is eligible 
"^DD",2006.928,2006.928,4,21,2,0)
to be retrieved from the queue for processing.
"^DD",2006.928,2006.928,4,23,0)
^^1^1^3100311^
"^DD",2006.928,2006.928,4,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.928,4,"DT")
3111101
"^DD",2006.928,2006.928,5,0)
EXPIRATION DATE/TIME^D^^0;5^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.928,2006.928,5,3)
Enter date and time of expiration. Blank means never expires. 
"^DD",2006.928,2006.928,5,21,0)
^^3^3^3100413^^^
"^DD",2006.928,2006.928,5,21,1,0)
Date and time after which the message is no longer valid or 
"^DD",2006.928,2006.928,5,21,2,0)
eligible for processing. An empty value here implies that the message 
"^DD",2006.928,2006.928,5,21,3,0)
never expires.
"^DD",2006.928,2006.928,5,23,0)
^^1^1^3100311^
"^DD",2006.928,2006.928,5,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.928,5,"DT")
3110914
"^DD",2006.928,2006.928,6,0)
MESSAGE^2006.9286^^1;0
"^DD",2006.928,2006.928,6,21,0)
^^1^1^3111101^
"^DD",2006.928,2006.928,6,21,1,0)
The content of the queue message.
"^DD",2006.928,2006.928,6,23,0)
^^1^1^3111101^
"^DD",2006.928,2006.928,6,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.928,7,0)
MESSAGE GROUP ID^F^^0;7^K:$L(X)>30!($L(X)<1) X
"^DD",2006.928,2006.928,7,3)
Answer must be 1-30 characters in length.
"^DD",2006.928,2006.928,7,21,0)
^^6^6^3111026^^
"^DD",2006.928,2006.928,7,21,1,0)
The value in the field MESSAGE GROUP ID indicates a subgroup within a
"^DD",2006.928,2006.928,7,21,2,0)
queue. For example, the hostname of a DICOM Gateway. The field allows 
"^DD",2006.928,2006.928,7,21,3,0)
messages to be filtered by QUEUE and MESSAGE GROUP ID. This is useful when
"^DD",2006.928,2006.928,7,21,4,0)
messages from a queue with the same MESSAGE GROUP ID must be processed 
"^DD",2006.928,2006.928,7,21,5,0)
together by the same processing agent. For example, messages in the email 
"^DD",2006.928,2006.928,7,21,6,0)
queue originating from the same DICOM Gateway host.
"^DD",2006.928,2006.928,7,23,0)
^.001^1^1^3100527^^^
"^DD",2006.928,2006.928,7,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.928,7,"DT")
3111026
"^DD",2006.928,2006.9286,0)
MESSAGE SUB-FIELD^^.01^1
"^DD",2006.928,2006.9286,0,"DT")
3100413
"^DD",2006.928,2006.9286,0,"NM","MESSAGE")

"^DD",2006.928,2006.9286,0,"UP")
2006.928
"^DD",2006.928,2006.9286,.01,0)
MESSAGE^Wx^^0;1^Q
"^DD",2006.928,2006.9286,.01,3)
Enter queue message.
"^DD",2006.928,2006.9286,.01,21,0)
^.001^1^1^3111101^^^
"^DD",2006.928,2006.9286,.01,21,1,0)
The content of the queue message.
"^DD",2006.928,2006.9286,.01,23,0)
^.001^1^1^3111101^^^
"^DD",2006.928,2006.9286,.01,23,1,0)
Added in patch MAG*3.0*34
"^DD",2006.928,2006.9286,.01,"DT")
3111101
"^DD",2006.93,2006.93,0)
FIELD^^5^6
"^DD",2006.93,2006.93,0,"DDA")
N
"^DD",2006.93,2006.93,0,"DT")
3120110
"^DD",2006.93,2006.93,0,"IX","B",2006.93,.01)

"^DD",2006.93,2006.93,0,"NM","IMAGING EVENT AUDIT LOG")

"^DD",2006.93,2006.93,0,"VRPK")
MAG
"^DD",2006.93,2006.93,.01,0)
EVENT DATE/TIME^RD^^0;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2006.93,2006.93,.01,1,0)
^.1
"^DD",2006.93,2006.93,.01,1,1,0)
2006.93^B
"^DD",2006.93,2006.93,.01,1,1,1)
S ^MAGV(2006.93,"B",$E(X,1,30),DA)=""
"^DD",2006.93,2006.93,.01,1,1,2)
K ^MAGV(2006.93,"B",$E(X,1,30),DA)
"^DD",2006.93,2006.93,.01,3)
Enter date and time of the event.
"^DD",2006.93,2006.93,.01,21,0)
^^1^1^3120110^^
"^DD",2006.93,2006.93,.01,21,1,0)
This is the date and time the event was recorded.
"^DD",2006.93,2006.93,.01,"DT")
3120110
"^DD",2006.93,2006.93,1,0)
ACTION^P2006.931'^MAGV(2006.931,^0;2^Q
"^DD",2006.93,2006.93,1,3)
Enter event action.
"^DD",2006.93,2006.93,1,21,0)
^^1^1^3120110^
"^DD",2006.93,2006.93,1,21,1,0)
This is the action performed by the application.
"^DD",2006.93,2006.93,1,"DT")
3120110
"^DD",2006.93,2006.93,2,0)
HOSTNAME^F^^0;3^K:$L(X)>64!($L(X)<1) X
"^DD",2006.93,2006.93,2,3)
Answer must be 1-64 characters in length.
"^DD",2006.93,2006.93,2,21,0)
^^1^1^3110131^
"^DD",2006.93,2006.93,2,21,1,0)
This is the hostname of the host related to the audit event.
"^DD",2006.93,2006.93,2,"DT")
3120110
"^DD",2006.93,2006.93,3,0)
APPLICATION^P2006.9193^MAGV(2006.9193,^0;4^Q
"^DD",2006.93,2006.93,3,3)
Enter Application.
"^DD",2006.93,2006.93,3,21,0)
^^1^1^3120109^
"^DD",2006.93,2006.93,3,21,1,0)
This is the application related to the audit event.
"^DD",2006.93,2006.93,3,"DT")
3120110
"^DD",2006.93,2006.93,4,0)
MESSAGE^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",2006.93,2006.93,4,3)
Answer must be 1-250 characters in length.
"^DD",2006.93,2006.93,4,21,0)
^^1^1^3110131^
"^DD",2006.93,2006.93,4,21,1,0)
This is the message related to the audit event.
"^DD",2006.93,2006.93,4,"DT")
3110131
"^DD",2006.93,2006.93,5,0)
ATTRIBUTE^2006.935A^^2;0
"^DD",2006.93,2006.93,5,21,0)
^^1^1^3120110^^
"^DD",2006.93,2006.93,5,21,1,0)
This stores attributes associated with the audit event.
"^DD",2006.93,2006.935,0)
ATTRIBUTE SUB-FIELD^^1^2
"^DD",2006.93,2006.935,0,"DT")
3110131
"^DD",2006.93,2006.935,0,"IX","B",2006.935,.01)

"^DD",2006.93,2006.935,0,"NM","ATTRIBUTE")

"^DD",2006.93,2006.935,0,"UP")
2006.93
"^DD",2006.93,2006.935,.01,0)
ATTRIBUTE^F^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",2006.93,2006.935,.01,1,0)
^.1
"^DD",2006.93,2006.935,.01,1,1,0)
2006.935^B
"^DD",2006.93,2006.935,.01,1,1,1)
S ^MAGV(2006.93,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",2006.93,2006.935,.01,1,1,2)
K ^MAGV(2006.93,DA(1),2,"B",$E(X,1,30),DA)
"^DD",2006.93,2006.935,.01,3)
Answer must be 1-64 characters in length.
"^DD",2006.93,2006.935,.01,21,0)
^^1^1^3120110^
"^DD",2006.93,2006.935,.01,21,1,0)
This is the attribute name associated with an audit event.
"^DD",2006.93,2006.935,.01,"DT")
3120110
"^DD",2006.93,2006.935,1,0)
DATA^F^^0;2^K:$L(X)>64!($L(X)<1) X
"^DD",2006.93,2006.935,1,3)
Answer must be 1-64 characters in length.
"^DD",2006.93,2006.935,1,21,0)
^^1^1^3110131^
"^DD",2006.93,2006.935,1,21,1,0)
This is the data associated with an attribute.
"^DD",2006.93,2006.935,1,"DT")
3110131
"^DD",2006.931,2006.931,0)
FIELD^^.01^1
"^DD",2006.931,2006.931,0,"DDA")
N
"^DD",2006.931,2006.931,0,"DT")
3110131
"^DD",2006.931,2006.931,0,"IX","B",2006.931,.01)

"^DD",2006.931,2006.931,0,"NM","IMAGING EVENT AUDITABLE ACTION")

"^DD",2006.931,2006.931,0,"PT",2006.93,1)

"^DD",2006.931,2006.931,0,"VRPK")
MAG
"^DD",2006.931,2006.931,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.931,2006.931,.01,1,0)
^.1
"^DD",2006.931,2006.931,.01,1,1,0)
2006.931^B
"^DD",2006.931,2006.931,.01,1,1,1)
S ^MAGV(2006.931,"B",$E(X,1,30),DA)=""
"^DD",2006.931,2006.931,.01,1,1,2)
K ^MAGV(2006.931,"B",$E(X,1,30),DA)
"^DD",2006.931,2006.931,.01,3)
Answer must be 3-30 characters in length.
"^DD",2006.931,2006.931,.01,21,0)
^^1^1^3110131^
"^DD",2006.931,2006.931,.01,21,1,0)
This is the name of an action to be audited.
"^DD",2006.931,2006.931,.01,"DT")
3110131
"^DD",2006.941,2006.941,0)
FIELD^^15^13
"^DD",2006.941,2006.941,0,"DDA")
N
"^DD",2006.941,2006.941,0,"DT")
3120127
"^DD",2006.941,2006.941,0,"IX","B",2006.941,.01)

"^DD",2006.941,2006.941,0,"IX","H",2006.94111,.01)

"^DD",2006.941,2006.941,0,"IX","I",2006.941,9)

"^DD",2006.941,2006.941,0,"IX","T",2006.941,1)

"^DD",2006.941,2006.941,0,"NM","MAG WORK ITEM")

"^DD",2006.941,2006.941,0,"VRPK")
MAG
"^DD",2006.941,2006.941,.01,0)
CREATED DATE/TIME^RD^^0;1^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",2006.941,2006.941,.01,.1)

"^DD",2006.941,2006.941,.01,1,0)
^.1
"^DD",2006.941,2006.941,.01,1,1,0)
2006.941^B
"^DD",2006.941,2006.941,.01,1,1,1)
S ^MAGV(2006.941,"B",$E(X,1,30),DA)=""
"^DD",2006.941,2006.941,.01,1,1,2)
K ^MAGV(2006.941,"B",$E(X,1,30),DA)
"^DD",2006.941,2006.941,.01,3)
Enter created date and time.
"^DD",2006.941,2006.941,.01,21,0)
^^1^1^3120127^
"^DD",2006.941,2006.941,.01,21,1,0)
This is the date and time that the work item was created.
"^DD",2006.941,2006.941,.01,"DT")
3120127
"^DD",2006.941,2006.941,1,0)
TYPE^P2006.9412'^MAGV(2006.9412,^0;2^Q
"^DD",2006.941,2006.941,1,1,0)
^.1
"^DD",2006.941,2006.941,1,1,1,0)
2006.941^T
"^DD",2006.941,2006.941,1,1,1,1)
S ^MAGV(2006.941,"T",$E(X,1,30),DA)=""
"^DD",2006.941,2006.941,1,1,1,2)
K ^MAGV(2006.941,"T",$E(X,1,30),DA)
"^DD",2006.941,2006.941,1,1,1,"%D",0)
^^1^1^3120210^
"^DD",2006.941,2006.941,1,1,1,"%D",1,0)
This is a cross-reference on TYPE field (#1). 
"^DD",2006.941,2006.941,1,1,1,"DT")
3120210
"^DD",2006.941,2006.941,1,3)
Select type.
"^DD",2006.941,2006.941,1,21,0)
^.001^1^1^3110808^^^^
"^DD",2006.941,2006.941,1,21,1,0)
This is the type of the work item (e.g. Importer).
"^DD",2006.941,2006.941,1,"DT")
3120210
"^DD",2006.941,2006.941,2,0)
SUBTYPE^P2006.9414'^MAGV(2006.9414,^0;3^Q
"^DD",2006.941,2006.941,2,1,0)
^.1^^0
"^DD",2006.941,2006.941,2,3)
Select subtype.
"^DD",2006.941,2006.941,2,21,0)
^^1^1^3120117^^
"^DD",2006.941,2006.941,2,21,1,0)
This is the subtype of the work item.
"^DD",2006.941,2006.941,2,"DT")
3120125
"^DD",2006.941,2006.941,3,0)
STATUS^P2006.9413'^MAGV(2006.9413,^0;4^Q
"^DD",2006.941,2006.941,3,1,0)
^.1^^0
"^DD",2006.941,2006.941,3,3)
Select status.
"^DD",2006.941,2006.941,3,21,0)
^^1^1^3120117^
"^DD",2006.941,2006.941,3,21,1,0)
This is the current status of the work item.
"^DD",2006.941,2006.941,3,"DT")
3120125
"^DD",2006.941,2006.941,4,0)
LOCATION^P4'^DIC(4,^1;1^Q
"^DD",2006.941,2006.941,4,1,0)
^.1^^0
"^DD",2006.941,2006.941,4,3)
Select the location where the work item was created.
"^DD",2006.941,2006.941,4,21,0)
^^1^1^3110727^
"^DD",2006.941,2006.941,4,21,1,0)
This is the location that created the work item.
"^DD",2006.941,2006.941,4,"DT")
3110630
"^DD",2006.941,2006.941,5,0)
PRIORITY^NJ2,0^^1;2^K:+X'=X!(X>10)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.941,2006.941,5,1,0)
^.1^^0
"^DD",2006.941,2006.941,5,3)
Type a number between 0 and 10, 0 decimal digits.
"^DD",2006.941,2006.941,5,21,0)
^.001^2^2^3110726^^^^
"^DD",2006.941,2006.941,5,21,1,0)
This is the numeric priority of the work item. The default value is zero. 10 is
"^DD",2006.941,2006.941,5,21,2,0)
the highest priority work item.
"^DD",2006.941,2006.941,5,"DT")
3110527
"^DD",2006.941,2006.941,8,0)
CREATING USER^P200'^VA(200,^3;2^Q
"^DD",2006.941,2006.941,8,3)
Select user.
"^DD",2006.941,2006.941,8,21,0)
^.001^1^1^3110726^^^^
"^DD",2006.941,2006.941,8,21,1,0)
This is the user that created the work item.
"^DD",2006.941,2006.941,8,"DT")
3120125
"^DD",2006.941,2006.941,9,0)
LAST UPDATED DATE/TIME^D^^3;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2006.941,2006.941,9,1,0)
^.1
"^DD",2006.941,2006.941,9,1,1,0)
2006.941^I
"^DD",2006.941,2006.941,9,1,1,1)
S ^MAGV(2006.941,"I",$E(X,1,30),DA)=""
"^DD",2006.941,2006.941,9,1,1,2)
K ^MAGV(2006.941,"I",$E(X,1,30),DA)
"^DD",2006.941,2006.941,9,1,1,"DT")
3110330
"^DD",2006.941,2006.941,9,3)
Enter date and time of last update.
"^DD",2006.941,2006.941,9,21,0)
^.001^1^1^3120117^^^^
"^DD",2006.941,2006.941,9,21,1,0)
This is the date and time that the work item was last updated.
"^DD",2006.941,2006.941,9,"DT")
3120117
"^DD",2006.941,2006.941,10,0)
LAST UPDATING USER^P200'^VA(200,^3;4^Q
"^DD",2006.941,2006.941,10,3)
Select user.
"^DD",2006.941,2006.941,10,21,0)
^.001^1^1^3110630^^^^
"^DD",2006.941,2006.941,10,21,1,0)
This is the user that last updated the work item.
"^DD",2006.941,2006.941,10,"DT")
3120125
"^DD",2006.941,2006.941,11,0)
TAGS^2006.94111^^4;0
"^DD",2006.941,2006.941,11,21,0)
^.001^3^3^3110808^^^
"^DD",2006.941,2006.941,11,21,1,0)
This multiple stores tag names and values associated with the
"^DD",2006.941,2006.941,11,21,2,0)
work item. Tags may be used for work item look ups. (These are not
"^DD",2006.941,2006.941,11,21,3,0)
DICOM tags.)
"^DD",2006.941,2006.941,13,0)
MESSAGE^2006.94113^^2;0
"^DD",2006.941,2006.941,13,21,0)
^^1^1^3120125^
"^DD",2006.941,2006.941,13,21,1,0)
This is an XML message that is stored with the work item.
"^DD",2006.941,2006.941,14,0)
CREATING APPLICATION^P2006.9193^MAGV(2006.9193,^3;5^Q
"^DD",2006.941,2006.941,14,3)
Select application.
"^DD",2006.941,2006.941,14,21,0)
^^1^1^3120117^
"^DD",2006.941,2006.941,14,21,1,0)
This is the application that created the work item.
"^DD",2006.941,2006.941,14,"DT")
3120125
"^DD",2006.941,2006.941,15,0)
LAST UPDATING APPLICATION^P2006.9193^MAGV(2006.9193,^3;6^Q
"^DD",2006.941,2006.941,15,3)
Select application.
"^DD",2006.941,2006.941,15,21,0)
^^1^1^3120117^
"^DD",2006.941,2006.941,15,21,1,0)
This is the application that last updated the work item.
"^DD",2006.941,2006.941,15,"DT")
3120125
"^DD",2006.941,2006.94111,0)
TAGS SUB-FIELD^^1^2
"^DD",2006.941,2006.94111,0,"DT")
3110517
"^DD",2006.941,2006.94111,0,"NM","TAGS")

"^DD",2006.941,2006.94111,0,"UP")
2006.941
"^DD",2006.941,2006.94111,.01,0)
TAG^MF^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",2006.941,2006.94111,.01,1,0)
^.1^^-1
"^DD",2006.941,2006.94111,.01,1,2,0)
2006.941^H
"^DD",2006.941,2006.94111,.01,1,2,1)
S ^MAGV(2006.941,"H",$E(X,1,30),DA(1),DA)=""
"^DD",2006.941,2006.94111,.01,1,2,2)
K ^MAGV(2006.941,"H",$E(X,1,30),DA(1),DA)
"^DD",2006.941,2006.94111,.01,1,2,"%D",0)
^^1^1^3110407^
"^DD",2006.941,2006.94111,.01,1,2,"%D",1,0)
This is the TAG name cross reference.
"^DD",2006.941,2006.94111,.01,1,2,"DT")
3110322
"^DD",2006.941,2006.94111,.01,3)
Answer must be 1-20 characters in length.
"^DD",2006.941,2006.94111,.01,21,0)
^.001^2^2^3110808^^
"^DD",2006.941,2006.94111,.01,21,1,0)
This is the name of the tag associated with the work item.
"^DD",2006.941,2006.94111,.01,21,2,0)
Tags may be used for work item look ups. (This is not a DICOM tag.)
"^DD",2006.941,2006.94111,.01,"DT")
3110725
"^DD",2006.941,2006.94111,1,0)
VALUE^F^^0;2^K:$L(X)>230!($L(X)<1) X
"^DD",2006.941,2006.94111,1,3)
Answer must be 1-230 characters in length.
"^DD",2006.941,2006.94111,1,21,0)
^.001^1^1^3120125^^^
"^DD",2006.941,2006.94111,1,21,1,0)
This is the value of the tag associated with the work item.
"^DD",2006.941,2006.94111,1,"DT")
3120125
"^DD",2006.941,2006.94113,0)
MESSAGE SUB-FIELD^^.01^1
"^DD",2006.941,2006.94113,0,"DT")
3110726
"^DD",2006.941,2006.94113,0,"NM","MESSAGE")

"^DD",2006.941,2006.94113,0,"UP")
2006.941
"^DD",2006.941,2006.94113,.01,0)
MESSAGE^Wx^^0;1^Q
"^DD",2006.941,2006.94113,.01,3)
Enter work item message.
"^DD",2006.941,2006.94113,.01,"DT")
3120125
"^DD",2006.9412,2006.9412,0)
FIELD^^1^2
"^DD",2006.9412,2006.9412,0,"DDA")
N
"^DD",2006.9412,2006.9412,0,"DT")
3110329
"^DD",2006.9412,2006.9412,0,"IX","B",2006.9412,.01)

"^DD",2006.9412,2006.9412,0,"NM","WORKLIST")

"^DD",2006.9412,2006.9412,0,"PT",2006.941,1)

"^DD",2006.9412,2006.9412,0,"PT",2006.9411,1)

"^DD",2006.9412,2006.9412,0,"VRPK")
MAG
"^DD",2006.9412,2006.9412,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",2006.9412,2006.9412,.01,1,0)
^.1
"^DD",2006.9412,2006.9412,.01,1,1,0)
2006.9412^B
"^DD",2006.9412,2006.9412,.01,1,1,1)
S ^MAGV(2006.9412,"B",$E(X,1,30),DA)=""
"^DD",2006.9412,2006.9412,.01,1,1,2)
K ^MAGV(2006.9412,"B",$E(X,1,30),DA)
"^DD",2006.9412,2006.9412,.01,3)
Answer must be 1-30 characters in length.
"^DD",2006.9412,2006.9412,.01,21,0)
^^1^1^3120113^
"^DD",2006.9412,2006.9412,.01,21,1,0)
This is the name of a worklist.
"^DD",2006.9412,2006.9412,.01,"DT")
3120113
"^DD",2006.9412,2006.9412,1,0)
ACTIVE^S^0:NO;1:YES;^0;2^Q
"^DD",2006.9412,2006.9412,1,3)
Is the worklist active?
"^DD",2006.9412,2006.9412,1,21,0)
^^2^2^3120112^
"^DD",2006.9412,2006.9412,1,21,1,0)
This is the activity status of the worklist. A worklist may be
"^DD",2006.9412,2006.9412,1,21,2,0)
either active or inactive.
"^DD",2006.9412,2006.9412,1,"DT")
3120113
"^DD",2006.9413,2006.9413,0)
FIELD^^.01^1
"^DD",2006.9413,2006.9413,0,"DDA")
N
"^DD",2006.9413,2006.9413,0,"IX","B",2006.9413,.01)

"^DD",2006.9413,2006.9413,0,"NM","MAG WORK ITEM STATUS")

"^DD",2006.9413,2006.9413,0,"PT",2006.941,3)

"^DD",2006.9413,2006.9413,0,"PT",2006.9411,3)

"^DD",2006.9413,2006.9413,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.9413,2006.9413,.01,1,0)
^.1
"^DD",2006.9413,2006.9413,.01,1,1,0)
2006.9413^B
"^DD",2006.9413,2006.9413,.01,1,1,1)
S ^MAGV(2006.9413,"B",$E(X,1,30),DA)=""
"^DD",2006.9413,2006.9413,.01,1,1,2)
K ^MAGV(2006.9413,"B",$E(X,1,30),DA)
"^DD",2006.9413,2006.9413,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation.
"^DD",2006.9413,2006.9413,.01,21,0)
^^1^1^3120117^^
"^DD",2006.9413,2006.9413,.01,21,1,0)
This is the name of a status.
"^DD",2006.9413,2006.9413,.01,23,0)
^^1^1^3120117^
"^DD",2006.9413,2006.9413,.01,23,1,0)
Added in patch MAG*3.0*118
"^DD",2006.9413,2006.9413,.01,"DT")
3120117
"^DD",2006.9414,2006.9414,0)
FIELD^^.01^1
"^DD",2006.9414,2006.9414,0,"DDA")
N
"^DD",2006.9414,2006.9414,0,"IX","B",2006.9414,.01)

"^DD",2006.9414,2006.9414,0,"NM","MAG WORK ITEM SUBTYPE")

"^DD",2006.9414,2006.9414,0,"PT",2006.941,2)

"^DD",2006.9414,2006.9414,0,"PT",2006.9411,2)

"^DD",2006.9414,2006.9414,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.9414,2006.9414,.01,1,0)
^.1
"^DD",2006.9414,2006.9414,.01,1,1,0)
2006.9414^B
"^DD",2006.9414,2006.9414,.01,1,1,1)
S ^MAGV(2006.9414,"B",$E(X,1,30),DA)=""
"^DD",2006.9414,2006.9414,.01,1,1,2)
K ^MAGV(2006.9414,"B",$E(X,1,30),DA)
"^DD",2006.9414,2006.9414,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation.
"^DD",2006.9414,2006.9414,.01,21,0)
^^1^1^3120117^
"^DD",2006.9414,2006.9414,.01,21,1,0)
This is the name of a subtype.
"^DD",2006.9414,2006.9414,.01,23,0)
^^1^1^3120117^
"^DD",2006.9414,2006.9414,.01,23,1,0)
Added in patch MAG*3.0*118
"^DD",2006.9414,2006.9414,.01,"DT")
3120117
"^DD",2006.9421,2006.9421,0)
FIELD^^100^14
"^DD",2006.9421,2006.9421,0,"DT")
3120126
"^DD",2006.9421,2006.9421,0,"IX","B",2006.9421,.01)

"^DD",2006.9421,2006.9421,0,"IX","C",2006.9421,12)

"^DD",2006.9421,2006.9421,0,"NM","MAGV IMPORT STUDY LOG")

"^DD",2006.9421,2006.9421,0,"VRPK")
MAG
"^DD",2006.9421,2006.9421,.01,0)
IMPORT DATE/TIME^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.9421,2006.9421,.01,1,0)
^.1
"^DD",2006.9421,2006.9421,.01,1,1,0)
2006.9421^B
"^DD",2006.9421,2006.9421,.01,1,1,1)
S ^MAGV(2006.9421,"B",$E(X,1,30),DA)=""
"^DD",2006.9421,2006.9421,.01,1,1,2)
K ^MAGV(2006.9421,"B",$E(X,1,30),DA)
"^DD",2006.9421,2006.9421,.01,3)
Enter date and time of the study import event.
"^DD",2006.9421,2006.9421,.01,21,0)
^^1^1^3120113^
"^DD",2006.9421,2006.9421,.01,21,1,0)
The date and time of the study import event.
"^DD",2006.9421,2006.9421,.01,23,0)
^.001^1^1^3110802^^^^
"^DD",2006.9421,2006.9421,.01,23,1,0)
Filled by routine MAGVIM03 with data provided by the Importer II client.
"^DD",2006.9421,2006.9421,.01,"DT")
3120113
"^DD",2006.9421,2006.9421,1,0)
IMPORT USER^RP200'^VA(200,^0;2^Q
"^DD",2006.9421,2006.9421,1,3)
Enter the user who performed the study import.
"^DD",2006.9421,2006.9421,1,21,0)
^.001^1^1^3110802^^^^
"^DD",2006.9421,2006.9421,1,21,1,0)
User who performed the study import.
"^DD",2006.9421,2006.9421,1,23,0)
^.001^1^1^3110802^^^
"^DD",2006.9421,2006.9421,1,23,1,0)
Filled by routine MAGVIM03 with data provided by the Importer II client.
"^DD",2006.9421,2006.9421,1,"DT")
3110429
"^DD",2006.9421,2006.9421,2,0)
LOCATION^P4'^DIC(4,^0;3^Q
"^DD",2006.9421,2006.9421,2,3)
Enter the location of the user who reconciled this study.
"^DD",2006.9421,2006.9421,2,21,0)
^.001^1^1^3110801^^
"^DD",2006.9421,2006.9421,2,21,1,0)
Logon location of the user who reconciled this study.
"^DD",2006.9421,2006.9421,2,"DT")
3110801
"^DD",2006.9421,2006.9421,3,0)
PATIENT^P2'^DPT(^0;4^Q
"^DD",2006.9421,2006.9421,3,3)
Enter patient associated with this imported study.
"^DD",2006.9421,2006.9421,3,21,0)
^^1^1^3120113^
"^DD",2006.9421,2006.9421,3,21,1,0)
This is the patient to which the imported study is associated.
"^DD",2006.9421,2006.9421,3,23,0)
^^1^1^3110801^
"^DD",2006.9421,2006.9421,3,23,1,0)
Filled by routine MAGVIM03 with data provided by the Importer II application.
"^DD",2006.9421,2006.9421,3,"DT")
3120113
"^DD",2006.9421,2006.9421,4,0)
STUDY ACCESSION NUMBER^F^^0;5^K:$L(X)>16!($L(X)<3) X
"^DD",2006.9421,2006.9421,4,3)
Answer must be 3-16 characters in length.
"^DD",2006.9421,2006.9421,4,21,0)
^.001^4^4^3120126^^^^
"^DD",2006.9421,2006.9421,4,21,1,0)
This is the VistA accession number assigned to the study
"^DD",2006.9421,2006.9421,4,21,2,0)
during the import reconciliation process. During this process,
"^DD",2006.9421,2006.9421,4,21,3,0)
this value is also coerced into the Accession Number data
"^DD",2006.9421,2006.9421,4,21,4,0)
tag (0008,0050) of the DICOM header.
"^DD",2006.9421,2006.9421,4,23,0)
^.001^1^1^3120126^^
"^DD",2006.9421,2006.9421,4,23,1,0)
Filled by routine MAGVIM03 with data provided by the Importer II application.
"^DD",2006.9421,2006.9421,4,"DT")
3110801
"^DD",2006.9421,2006.9421,5,0)
STUDY INSTANCE UID^F^^0;6^K:$L(X)>64!($L(X)<1)!'(X'?1P.E) X
"^DD",2006.9421,2006.9421,5,3)
Answer must be 1-64 characters in length.
"^DD",2006.9421,2006.9421,5,21,0)
^^1^1^3110516^
"^DD",2006.9421,2006.9421,5,21,1,0)
Study Record ID - Primary Identifier DICOM tag: Study Instance UID (0020,000D).
"^DD",2006.9421,2006.9421,5,"DT")
3110516
"^DD",2006.9421,2006.9421,6,0)
STUDY PERFORMED LOCATION^F^^0;7^K:$L(X)>64!($L(X)<1) X
"^DD",2006.9421,2006.9421,6,3)
Answer must be 1-64 characters in length.
"^DD",2006.9421,2006.9421,6,21,0)
^^2^2^3120126^^
"^DD",2006.9421,2006.9421,6,21,1,0)
Location where the study was performed. DICOM tag: 
"^DD",2006.9421,2006.9421,6,21,2,0)
Institution Name (0008,0080).
"^DD",2006.9421,2006.9421,6,"DT")
3120126
"^DD",2006.9421,2006.9421,7,0)
STUDY TYPE^S^RAD:RADIOLOGY;CON:CONSULT;^0;8^Q
"^DD",2006.9421,2006.9421,7,3)
Select study type.
"^DD",2006.9421,2006.9421,7,21,0)
^^1^1^3120113^
"^DD",2006.9421,2006.9421,7,21,1,0)
Study type indicator for the aggregated child series.
"^DD",2006.9421,2006.9421,7,"DT")
3120113
"^DD",2006.9421,2006.9421,8,0)
SERIES COUNT^NJ5,0^^0;9^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.9421,2006.9421,8,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2006.9421,2006.9421,8,21,0)
^.001^1^1^3110801^^
"^DD",2006.9421,2006.9421,8,21,1,0)
The number of series imported for this study.
"^DD",2006.9421,2006.9421,8,"DT")
3110516
"^DD",2006.9421,2006.9421,9,0)
OBJECT COUNT^NJ6,0^^0;10^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.9421,2006.9421,9,3)
Type a number between 0 and 999999, 0 decimal digits.
"^DD",2006.9421,2006.9421,9,21,0)
^.001^1^1^3110801^^
"^DD",2006.9421,2006.9421,9,21,1,0)
The number of objects imported for this study.
"^DD",2006.9421,2006.9421,9,"DT")
3110516
"^DD",2006.9421,2006.9421,10,0)
OBJECT REQUEST COUNT^NJ5,0^^0;11^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.9421,2006.9421,10,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2006.9421,2006.9421,10,21,0)
^.001^1^1^3110801^^
"^DD",2006.9421,2006.9421,10,21,1,0)
The number of study objects requested to be imported.
"^DD",2006.9421,2006.9421,10,"DT")
3110604
"^DD",2006.9421,2006.9421,11,0)
OBJECT FAIL COUNT^NJ5,0^^0;12^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.9421,2006.9421,11,3)
Type a number between 0 and 99999, 0 decimal digits.
"^DD",2006.9421,2006.9421,11,21,0)
^.001^1^1^3110801^^
"^DD",2006.9421,2006.9421,11,21,1,0)
The number of requested study objects which failed to be imported.
"^DD",2006.9421,2006.9421,11,"DT")
3110604
"^DD",2006.9421,2006.9421,12,0)
MEDIA LOG^P2006.9422'^MAGV(2006.9422,^0;13^Q
"^DD",2006.9421,2006.9421,12,1,0)
^.1
"^DD",2006.9421,2006.9421,12,1,1,0)
2006.9421^C
"^DD",2006.9421,2006.9421,12,1,1,1)
S ^MAGV(2006.9421,"C",$E(X,1,30),DA)=""
"^DD",2006.9421,2006.9421,12,1,1,2)
K ^MAGV(2006.9421,"C",$E(X,1,30),DA)
"^DD",2006.9421,2006.9421,12,1,1,"%D",0)
^^1^1^3120126^
"^DD",2006.9421,2006.9421,12,1,1,"%D",1,0)
The MEDIA LOG cross-reference allows indexing of studies imported from the same media bundle.
"^DD",2006.9421,2006.9421,12,1,1,"DT")
3120126
"^DD",2006.9421,2006.9421,12,3)
Select media log.
"^DD",2006.9421,2006.9421,12,21,0)
^^4^4^3120126^
"^DD",2006.9421,2006.9421,12,21,1,0)
This is the media bundle from which the study was imported. A media 
"^DD",2006.9421,2006.9421,12,21,2,0)
bundle is a group of studies under a single Importer II work item. A 
"^DD",2006.9421,2006.9421,12,21,3,0)
media bundle may or may not represent a single piece of media or a single 
"^DD",2006.9421,2006.9421,12,21,4,0)
network transaction.
"^DD",2006.9421,2006.9421,12,23,0)
^^1^1^3110802^
"^DD",2006.9421,2006.9421,12,23,1,0)
Filled in by routine MAGVIM03 with data provided by the Importer II application.
"^DD",2006.9421,2006.9421,12,"DT")
3120126
"^DD",2006.9421,2006.9421,100,0)
MODALITY COUNTERS^2006.94211A^^100;0
"^DD",2006.9421,2006.9421,100,21,0)
^^1^1^3120113^
"^DD",2006.9421,2006.9421,100,21,1,0)
Subfile to hold the number of imported objects per modality.
"^DD",2006.9421,2006.94211,0)
MODALITY COUNTERS SUB-FIELD^^.02^2
"^DD",2006.9421,2006.94211,0,"DT")
3120126
"^DD",2006.9421,2006.94211,0,"IX","B",2006.94211,.01)

"^DD",2006.9421,2006.94211,0,"NM","MODALITY COUNTERS")

"^DD",2006.9421,2006.94211,0,"UP")
2006.9421
"^DD",2006.9421,2006.94211,.01,0)
MODALITY^F^^0;1^K:$L(X)>16!($L(X)<1)!'(X?1U.U) X
"^DD",2006.9421,2006.94211,.01,1,0)
^.1
"^DD",2006.9421,2006.94211,.01,1,1,0)
2006.94211^B
"^DD",2006.9421,2006.94211,.01,1,1,1)
S ^MAGV(2006.9421,DA(1),100,"B",$E(X,1,30),DA)=""
"^DD",2006.9421,2006.94211,.01,1,1,2)
K ^MAGV(2006.9421,DA(1),100,"B",$E(X,1,30),DA)
"^DD",2006.9421,2006.94211,.01,3)
Answer must be 1-16 characters in length.
"^DD",2006.9421,2006.94211,.01,21,0)
^^1^1^3120113^
"^DD",2006.9421,2006.94211,.01,21,1,0)
This is the modality associated with the imported object.
"^DD",2006.9421,2006.94211,.01,"DT")
3120126
"^DD",2006.9421,2006.94211,.02,0)
COUNT^NJ5,0^^0;2^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.9421,2006.94211,.02,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",2006.9421,2006.94211,.02,21,0)
^^1^1^3120113^
"^DD",2006.9421,2006.94211,.02,21,1,0)
This is the number of imported objects for the modality.
"^DD",2006.9421,2006.94211,.02,"DT")
3120113
"^DD",2006.9422,2006.9422,0)
FIELD^^101^6
"^DD",2006.9422,2006.9422,0,"DDA")
N
"^DD",2006.9422,2006.9422,0,"DT")
3120126
"^DD",2006.9422,2006.9422,0,"IX","B",2006.9422,.01)

"^DD",2006.9422,2006.9422,0,"NM","MAGV IMPORT MEDIA LOG")

"^DD",2006.9422,2006.9422,0,"PT",2006.9421,12)

"^DD",2006.9422,2006.9422,0,"VRPK")
MAG
"^DD",2006.9422,2006.9422,.01,0)
IMPORT TIMESTAMP^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.9422,2006.9422,.01,1,0)
^.1
"^DD",2006.9422,2006.9422,.01,1,1,0)
2006.9422^B
"^DD",2006.9422,2006.9422,.01,1,1,1)
S ^MAGV(2006.9422,"B",$E(X,1,30),DA)=""
"^DD",2006.9422,2006.9422,.01,1,1,2)
K ^MAGV(2006.9422,"B",$E(X,1,30),DA)
"^DD",2006.9422,2006.9422,.01,3)
Enter the timestamp for this media import event.
"^DD",2006.9422,2006.9422,.01,21,0)
^^2^2^3120126^
"^DD",2006.9422,2006.9422,.01,21,1,0)
Date and time the media import event was logged by the Importer II 
"^DD",2006.9422,2006.9422,.01,21,2,0)
application.
"^DD",2006.9422,2006.9422,.01,23,0)
^.001^1^1^3110801^^
"^DD",2006.9422,2006.9422,.01,23,1,0)
Filled in by the Importer II application.
"^DD",2006.9422,2006.9422,.01,"DT")
3120126
"^DD",2006.9422,2006.9422,2,0)
MEDIA IMPORTER^P200'^VA(200,^0;2^Q
"^DD",2006.9422,2006.9422,2,3)
Enter the Importer II user responsible for this media import event.
"^DD",2006.9422,2006.9422,2,21,0)
^.001^1^1^3110801^^^^
"^DD",2006.9422,2006.9422,2,21,1,0)
User of the Importer II application during this media import event.
"^DD",2006.9422,2006.9422,2,23,0)
^.001^1^1^3110801^^
"^DD",2006.9422,2006.9422,2,23,1,0)
Filled in by the Importer II application.
"^DD",2006.9422,2006.9422,2,"DT")
3110604
"^DD",2006.9422,2006.9422,3,0)
WORKSTATION^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",2006.9422,2006.9422,3,3)
Answer must be 1-30 characters in length. 
"^DD",2006.9422,2006.9422,3,21,0)
^.001^1^1^3110801^^
"^DD",2006.9422,2006.9422,3,21,1,0)
Computer name of the workstation used for importing data from this media.
"^DD",2006.9422,2006.9422,3,23,0)
^^1^1^3110801^
"^DD",2006.9422,2006.9422,3,23,1,0)
Filled in by the Importer II application.
"^DD",2006.9422,2006.9422,3,"DT")
3110604
"^DD",2006.9422,2006.9422,4,0)
MEDIA TYPE^S^DIR:DIRECT IMPORT;STG:STAGED MEDIA;NET:NETWORK IMPORT;DCM:DICOM CORRECT;^0;4^Q
"^DD",2006.9422,2006.9422,4,3)
Enter the type of media used for this import event.
"^DD",2006.9422,2006.9422,4,21,0)
^.001^1^1^3110801^^
"^DD",2006.9422,2006.9422,4,21,1,0)
Type of media used for this import event.
"^DD",2006.9422,2006.9422,4,23,0)
^^1^1^3110801^
"^DD",2006.9422,2006.9422,4,23,1,0)
Filled in by the Importer II application.
"^DD",2006.9422,2006.9422,4,"DT")
3110604
"^DD",2006.9422,2006.9422,100,0)
VALIDATION STATUS^S^0:VALID MEDIA;1:INVALID MEDIA;^VALID8;1^Q
"^DD",2006.9422,2006.9422,100,3)
Enter the result of the Importer II DICOMDIR integrity check for this media.
"^DD",2006.9422,2006.9422,100,21,0)
^.001^3^3^3110801^^^^
"^DD",2006.9422,2006.9422,100,21,1,0)
Importer II DICOM directory validation status (valid or invalid).
"^DD",2006.9422,2006.9422,100,21,2,0)
The DICOMDIR files on the media index the available DICOM objects. This
"^DD",2006.9422,2006.9422,100,21,3,0)
field records the integrity of the DICOMDIR as valid or invalid.
"^DD",2006.9422,2006.9422,100,23,0)
^.001^1^1^3110801^^
"^DD",2006.9422,2006.9422,100,23,1,0)
Filled in by the Importer II application. (MAG*3.0*118)
"^DD",2006.9422,2006.9422,100,"DT")
3110801
"^DD",2006.9422,2006.9422,101,0)
VALIDATION MESSAGE^F^^VALID8;2^K:$L(X)>220!($L(X)<1) X
"^DD",2006.9422,2006.9422,101,3)
Answer must be 1-220 characters in length.
"^DD",2006.9422,2006.9422,101,21,0)
^.001^1^1^3110801^^
"^DD",2006.9422,2006.9422,101,21,1,0)
Details of the validation status of this media import event.
"^DD",2006.9422,2006.9422,101,23,0)
^^1^1^3110801^
"^DD",2006.9422,2006.9422,101,23,1,0)
Filled in by the Importer II application. (MAG*3.0*118)
"^DD",2006.9422,2006.9422,101,"DT")
3110801
"^DIC",2005.61,2005.61,0)
IMAGING PROCEDURE REFERENCE^2005.61
"^DIC",2005.61,2005.61,0,"GL")
^MAGV(2005.61,
"^DIC",2005.61,2005.61,"%",0)
^1.005^^0
"^DIC",2005.61,2005.61,"%D",0)
^1.001^19^19^3111101^^^^
"^DIC",2005.61,2005.61,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.61,2005.61,"%D",2,0)
 |                                                               |
"^DIC",2005.61,2005.61,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.61,2005.61,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.61,2005.61,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.61,2005.61,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.61,2005.61,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.61,2005.61,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.61,2005.61,"%D",9,0)
 |                                                               |
"^DIC",2005.61,2005.61,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.61,2005.61,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.61,2005.61,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.61,2005.61,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.61,2005.61,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.61,2005.61,"%D",15,0)
 |                                                               |
"^DIC",2005.61,2005.61,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.61,2005.61,"%D",17,0)
 
"^DIC",2005.61,2005.61,"%D",18,0)
This file contains information about each procedure corresponding to a 
"^DIC",2005.61,2005.61,"%D",19,0)
patient in the IMAGING PATIENT REFERENCE File (#2005.6).
"^DIC",2005.61,"B","IMAGING PROCEDURE REFERENCE",2005.61)

"^DIC",2005.6,2005.6,0)
IMAGING PATIENT REFERENCE^2005.6
"^DIC",2005.6,2005.6,0,"GL")
^MAGV(2005.6,
"^DIC",2005.6,2005.6,"%",0)
^1.005^^0
"^DIC",2005.6,2005.6,"%D",0)
^1.001^19^19^3111101^^^
"^DIC",2005.6,2005.6,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.6,2005.6,"%D",2,0)
 |                                                               |
"^DIC",2005.6,2005.6,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.6,2005.6,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.6,2005.6,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.6,2005.6,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.6,2005.6,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.6,2005.6,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.6,2005.6,"%D",9,0)
 |                                                               |
"^DIC",2005.6,2005.6,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.6,2005.6,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.6,2005.6,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.6,2005.6,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.6,2005.6,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.6,2005.6,"%D",15,0)
 |                                                               |
"^DIC",2005.6,2005.6,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.6,2005.6,"%D",17,0)
 
"^DIC",2005.6,2005.6,"%D",18,0)
This file contains information about each patient with whom Imaging 
"^DIC",2005.6,2005.6,"%D",19,0)
procedures and studies are associated within VistA.
"^DIC",2005.62,2005.62,0)
IMAGE STUDY^2005.62
"^DIC",2005.62,2005.62,0,"GL")
^MAGV(2005.62,
"^DIC",2005.62,2005.62,"%",0)
^1.005^^0
"^DIC",2005.62,2005.62,"%D",0)
^1.001^19^19^3110103^^^
"^DIC",2005.62,2005.62,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.62,2005.62,"%D",2,0)
 |                                                               |
"^DIC",2005.62,2005.62,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.62,2005.62,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.62,2005.62,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.62,2005.62,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.62,2005.62,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.62,2005.62,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.62,2005.62,"%D",9,0)
 |                                                               |
"^DIC",2005.62,2005.62,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.62,2005.62,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.62,2005.62,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.62,2005.62,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.62,2005.62,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.62,2005.62,"%D",15,0)
 |                                                               |
"^DIC",2005.62,2005.62,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.62,2005.62,"%D",17,0)
 
"^DIC",2005.62,2005.62,"%D",18,0)
This file contains information about each study corresponding to an entry 
"^DIC",2005.62,2005.62,"%D",19,0)
on the IMAGING PROCEDURE REFERENCE file (#2005.61).
"^DIC",2005.62,"B","IMAGE STUDY",2005.62)

"^DIC",2005.63,2005.63,0)
IMAGE SERIES^2005.63
"^DIC",2005.63,2005.63,0,"GL")
^MAGV(2005.63,
"^DIC",2005.63,2005.63,"%",0)
^1.005^^0
"^DIC",2005.63,2005.63,"%D",0)
^^19^19^3100426^^
"^DIC",2005.63,2005.63,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.63,2005.63,"%D",2,0)
 |                                                               |
"^DIC",2005.63,2005.63,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.63,2005.63,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.63,2005.63,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.63,2005.63,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.63,2005.63,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.63,2005.63,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.63,2005.63,"%D",9,0)
 |                                                               |
"^DIC",2005.63,2005.63,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.63,2005.63,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.63,2005.63,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.63,2005.63,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.63,2005.63,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.63,2005.63,"%D",15,0)
 |                                                               |
"^DIC",2005.63,2005.63,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.63,2005.63,"%D",17,0)
 
"^DIC",2005.63,2005.63,"%D",18,0)
This file contains information about each series corresponding to an 
"^DIC",2005.63,2005.63,"%D",19,0)
entry on the IMAGE STUDY file (#2005.62).
"^DIC",2005.63,"B","IMAGE SERIES",2005.63)

"^DIC",2005.64,2005.64,0)
IMAGE SOP INSTANCE^2005.64
"^DIC",2005.64,2005.64,0,"GL")
^MAGV(2005.64,
"^DIC",2005.64,2005.64,"%",0)
^1.005^^0
"^DIC",2005.64,2005.64,"%D",0)
^1.001^19^19^3121112^^^^
"^DIC",2005.64,2005.64,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.64,2005.64,"%D",2,0)
 |                                                               |
"^DIC",2005.64,2005.64,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.64,2005.64,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.64,2005.64,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.64,2005.64,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.64,2005.64,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.64,2005.64,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.64,2005.64,"%D",9,0)
 |                                                               |
"^DIC",2005.64,2005.64,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.64,2005.64,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.64,2005.64,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.64,2005.64,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.64,2005.64,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.64,2005.64,"%D",15,0)
 |                                                               |
"^DIC",2005.64,2005.64,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.64,2005.64,"%D",17,0)
 
"^DIC",2005.64,2005.64,"%D",18,0)
This file contains information about each SOP instance corresponding to an
"^DIC",2005.64,2005.64,"%D",19,0)
entry on the IMAGE SERIES file (#2005.63).
"^DIC",2005.64,"B","IMAGE SOP INSTANCE",2005.64)

"^DIC",2005.65,2005.65,0)
IMAGE INSTANCE FILE^2005.65
"^DIC",2005.65,2005.65,0,"GL")
^MAGV(2005.65,
"^DIC",2005.65,2005.65,"%",0)
^1.005^^0
"^DIC",2005.65,2005.65,"%D",0)
^1.001^19^19^3111209^^
"^DIC",2005.65,2005.65,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.65,2005.65,"%D",2,0)
 |                                                               |
"^DIC",2005.65,2005.65,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.65,2005.65,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.65,2005.65,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.65,2005.65,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.65,2005.65,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.65,2005.65,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.65,2005.65,"%D",9,0)
 |                                                               |
"^DIC",2005.65,2005.65,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.65,2005.65,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.65,2005.65,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.65,2005.65,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.65,2005.65,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.65,2005.65,"%D",15,0)
 |                                                               |
"^DIC",2005.65,2005.65,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.65,2005.65,"%D",17,0)
 
"^DIC",2005.65,2005.65,"%D",18,0)
This file contains information about each physical file instance
"^DIC",2005.65,2005.65,"%D",19,0)
corresponding to an entry on the IMAGE SOP INSTANCE file (#2005.64).
"^DIC",2005.65,"B","IMAGE INSTANCE FILE",2005.65)

"^DIC",2005.66,2005.66,0)
IMAGING DUPLICATE UID LOG^2005.66
"^DIC",2005.66,2005.66,0,"GL")
^MAGV(2005.66,
"^DIC",2005.66,2005.66,"%",0)
^1.005^^0
"^DIC",2005.66,2005.66,"%D",0)
^1.001^18^18^3100512^^
"^DIC",2005.66,2005.66,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.66,2005.66,"%D",2,0)
 |                                                               |
"^DIC",2005.66,2005.66,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.66,2005.66,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.66,2005.66,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.66,2005.66,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.66,2005.66,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.66,2005.66,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.66,2005.66,"%D",9,0)
 |                                                               |
"^DIC",2005.66,2005.66,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.66,2005.66,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.66,2005.66,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.66,2005.66,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.66,2005.66,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.66,2005.66,"%D",15,0)
 |                                                               |
"^DIC",2005.66,2005.66,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.66,2005.66,"%D",17,0)
 
"^DIC",2005.66,2005.66,"%D",18,0)
This file contains information about duplicate UIDs.
"^DIC",2005.66,"B","IMAGING DUPLICATE UID LOG",2005.66)

"^DIC",2005.6,"B","IMAGING PATIENT REFERENCE",2005.6)

"^DIC",2005.8,2005.8,0)
IMAGING SERVICE INSTITUTION^2005.8
"^DIC",2005.8,2005.8,0,"GL")
^MAGV(2005.8,
"^DIC",2005.8,2005.8,"%",0)
^1.005^^0
"^DIC",2005.8,2005.8,"%D",0)
^1.001^19^19^3111101^^^^
"^DIC",2005.8,2005.8,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.8,2005.8,"%D",2,0)
 |                                                               |
"^DIC",2005.8,2005.8,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.8,2005.8,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.8,2005.8,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.8,2005.8,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.8,2005.8,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.8,2005.8,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.8,2005.8,"%D",9,0)
 |                                                               |
"^DIC",2005.8,2005.8,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.8,2005.8,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.8,2005.8,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.8,2005.8,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.8,2005.8,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.8,2005.8,"%D",15,0)
 |                                                               |
"^DIC",2005.8,2005.8,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.8,2005.8,"%D",17,0)
 
"^DIC",2005.8,2005.8,"%D",18,0)
This file contains entries indicating the Imaging institution associated
"^DIC",2005.8,2005.8,"%D",19,0)
with an action performed on an Imaging file entry.
"^DIC",2005.8,"B","IMAGING SERVICE INSTITUTION",2005.8)

"^DIC",2006.1,2006.1,0)
IMAGING SITE PARAMETERS^2006.1I
"^DIC",2006.1,2006.1,0,"GL")
^MAG(2006.1,
"^DIC",2006.1,2006.1,"%",0)
^1.005^1^1
"^DIC",2006.1,2006.1,"%",1,0)
MAG
"^DIC",2006.1,2006.1,"%","B","MAG",1)

"^DIC",2006.1,2006.1,"%D",0)
^^28^28^3130131^^
"^DIC",2006.1,2006.1,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.1,2006.1,"%D",2,0)
 |                                                               |
"^DIC",2006.1,2006.1,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.1,2006.1,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.1,2006.1,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.1,2006.1,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.1,2006.1,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.1,2006.1,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.1,2006.1,"%D",9,0)
 |                                                               |
"^DIC",2006.1,2006.1,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.1,2006.1,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.1,2006.1,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.1,2006.1,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.1,2006.1,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.1,2006.1,"%D",15,0)
 |                                                               |
"^DIC",2006.1,2006.1,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.1,2006.1,"%D",17,0)
 
"^DIC",2006.1,2006.1,"%D",18,0)
The Imaging Site Parameter file contains those variables which are site
"^DIC",2006.1,2006.1,"%D",19,0)
specific, and which are necessary for the Imaging Software to perform
"^DIC",2006.1,2006.1,"%D",20,0)
properly. Most of the fields have MUMPs cross-references with which they
"^DIC",2006.1,2006.1,"%D",21,0)
are associated that are used by the software for quick access to the
"^DIC",2006.1,2006.1,"%D",22,0)
specific data. Some of the fields defined may not be in use presently, but
"^DIC",2006.1,2006.1,"%D",23,0)
are reserved for future development.  Review the Imaging Installation
"^DIC",2006.1,2006.1,"%D",24,0)
Manual for instructions on making entries into this file.
"^DIC",2006.1,2006.1,"%D",25,0)
 
"^DIC",2006.1,2006.1,"%D",26,0)
Non-integrated sites and Integrated sites that have one shared image 
"^DIC",2006.1,2006.1,"%D",27,0)
storage location have one record.  Integrated sites where each site has
"^DIC",2006.1,2006.1,"%D",28,0)
their own image storage have one record for each of the associated sites.
"^DIC",2006.1,"B","IMAGING SITE PARAMETERS",2006.1)

"^DIC",2006.911,2006.911,0)
DICOM GATEWAY INSTRUMENT DICTIONARY^2006.911
"^DIC",2006.911,2006.911,0,"GL")
^MAGDICOM(2006.911,
"^DIC",2006.911,2006.911,"%",0)
^1.005^^0
"^DIC",2006.911,2006.911,"%D",0)
^^20^20^3111129^
"^DIC",2006.911,2006.911,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.911,2006.911,"%D",2,0)
 |                                                               |
"^DIC",2006.911,2006.911,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.911,2006.911,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.911,2006.911,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.911,2006.911,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.911,2006.911,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.911,2006.911,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.911,2006.911,"%D",9,0)
 |                                                               |
"^DIC",2006.911,2006.911,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.911,2006.911,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.911,2006.911,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.911,2006.911,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.911,2006.911,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.911,2006.911,"%D",15,0)
 |                                                               |
"^DIC",2006.911,2006.911,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.911,2006.911,"%D",17,0)
 
"^DIC",2006.911,2006.911,"%D",18,0)
This file contains information about the instruments that communicate 
"^DIC",2006.911,2006.911,"%D",19,0)
with the DICOM Gateway. Each DICOM Gateway uniquely serves
"^DIC",2006.911,2006.911,"%D",20,0)
one or more instruments.
"^DIC",2006.911,"B","DICOM GATEWAY INSTRUMENT DICTIONARY",2006.911)

"^DIC",2006.912,2006.912,0)
DICOM GATEWAY MODALITY DICTIONARY^2006.912
"^DIC",2006.912,2006.912,0,"GL")
^MAGDICOM(2006.912,
"^DIC",2006.912,2006.912,"%",0)
^1.005^^0
"^DIC",2006.912,2006.912,"%D",0)
^^21^21^3100426^
"^DIC",2006.912,2006.912,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.912,2006.912,"%D",2,0)
 |                                                               |
"^DIC",2006.912,2006.912,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.912,2006.912,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.912,2006.912,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.912,2006.912,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.912,2006.912,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.912,2006.912,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.912,2006.912,"%D",9,0)
 |                                                               |
"^DIC",2006.912,2006.912,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.912,2006.912,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.912,2006.912,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.912,2006.912,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.912,2006.912,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.912,2006.912,"%D",15,0)
 |                                                               |
"^DIC",2006.912,2006.912,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.912,2006.912,"%D",17,0)
 
"^DIC",2006.912,2006.912,"%D",18,0)
This file contains the various types of image
"^DIC",2006.912,2006.912,"%D",19,0)
acquisition device modalities. For each DICOM Gateway that is present at a site.
"^DIC",2006.912,2006.912,"%D",20,0)
Note: a "modality" is a class of devices, an "instrument" is a
"^DIC",2006.912,2006.912,"%D",21,0)
specific device, or an instance of such a class.
"^DIC",2006.912,"B","DICOM GATEWAY MODALITY DICTIONARY",2006.912)

"^DIC",2006.913,2006.913,0)
ARTIFACT KEYLIST^2006.913
"^DIC",2006.913,2006.913,0,"GL")
^MAGV(2006.913,
"^DIC",2006.913,2006.913,"%",0)
^1.005^^0
"^DIC",2006.913,2006.913,"%D",0)
^^25^25^3100426^
"^DIC",2006.913,2006.913,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.913,2006.913,"%D",2,0)
 |                                                               |
"^DIC",2006.913,2006.913,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.913,2006.913,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.913,2006.913,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.913,2006.913,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.913,2006.913,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.913,2006.913,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.913,2006.913,"%D",9,0)
 |                                                               |
"^DIC",2006.913,2006.913,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.913,2006.913,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.913,2006.913,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.913,2006.913,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.913,2006.913,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.913,2006.913,"%D",15,0)
 |                                                               |
"^DIC",2006.913,2006.913,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.913,2006.913,"%D",17,0)
 
"^DIC",2006.913,2006.913,"%D",18,0)
An ordered list of strings that have meaning for the client software. 
"^DIC",2006.913,2006.913,"%D",19,0)
Allows the client to retrieve artifacts in potentially nested groups 
"^DIC",2006.913,2006.913,"%D",20,0)
defined by the client. Key List is only connected to the Artifact file (#2006.916) in 
"^DIC",2006.913,2006.913,"%D",21,0)
a 0..1-to-many fashion. This approach allows the user of the Storage 
"^DIC",2006.913,2006.913,"%D",22,0)
Service to store relational context of data hierarchies in the subsystem 
"^DIC",2006.913,2006.913,"%D",23,0)
to enable intelligent searches by the user for groups of artifacts 
"^DIC",2006.913,2006.913,"%D",24,0)
without hard coding the relationships between the affected artifacts in 
"^DIC",2006.913,2006.913,"%D",25,0)
the Storage Service.
"^DIC",2006.913,"B","ARTIFACT KEYLIST",2006.913)

"^DIC",2006.914,2006.914,0)
RETENTION POLICY^2006.914
"^DIC",2006.914,2006.914,0,"GL")
^MAGV(2006.914,
"^DIC",2006.914,2006.914,"%",0)
^1.005^^0
"^DIC",2006.914,2006.914,"%D",0)
^^34^34^3130130^
"^DIC",2006.914,2006.914,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.914,2006.914,"%D",2,0)
 |                                                               |
"^DIC",2006.914,2006.914,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.914,2006.914,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.914,2006.914,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.914,2006.914,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.914,2006.914,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.914,2006.914,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.914,2006.914,"%D",9,0)
 |                                                               |
"^DIC",2006.914,2006.914,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.914,2006.914,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.914,2006.914,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.914,2006.914,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.914,2006.914,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.914,2006.914,"%D",15,0)
 |                                                               |
"^DIC",2006.914,2006.914,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.914,2006.914,"%D",17,0)
 
"^DIC",2006.914,2006.914,"%D",18,0)
This file holds the various retention policies available 
"^DIC",2006.914,2006.914,"%D",19,0)
to the storage subsystem. They come in two varieties: user-definable, and 
"^DIC",2006.914,2006.914,"%D",20,0)
business.
"^DIC",2006.914,2006.914,"%D",21,0)
 
"^DIC",2006.914,2006.914,"%D",22,0)
User-definable retention policies can be created and mapped to artifact 
"^DIC",2006.914,2006.914,"%D",23,0)
descriptors, to serve as intrinsic retention policies. They can be 
"^DIC",2006.914,2006.914,"%D",24,0)
inactivated, or "logically deleted", but only if no artifact descriptors 
"^DIC",2006.914,2006.914,"%D",25,0)
are pointing to them. They can never be physically deleted, since there 
"^DIC",2006.914,2006.914,"%D",26,0)
are artifacts that still point to the old retention policies, and we need 
"^DIC",2006.914,2006.914,"%D",27,0)
to keep the historical record of retention policies that have been 
"^DIC",2006.914,2006.914,"%D",28,0)
applied to this artifact over time.
"^DIC",2006.914,2006.914,"%D",29,0)
 
"^DIC",2006.914,2006.914,"%D",30,0)
Business retention policies are designed to be called by business code 
"^DIC",2006.914,2006.914,"%D",31,0)
for certain patients (e.g., Agent Orange retention policy, Employee 
"^DIC",2006.914,2006.914,"%D",32,0)
retention policy, etc.). These retention policies will be installed with 
"^DIC",2006.914,2006.914,"%D",33,0)
the patch and can be "replaced" with updated versions, but not deleted, 
"^DIC",2006.914,2006.914,"%D",34,0)
since business logic will presumably expect to find them.
"^DIC",2006.914,"B","RETENTION POLICY",2006.914)

"^DIC",2006.915,2006.915,0)
ARTIFACT DESCRIPTOR^2006.915
"^DIC",2006.915,2006.915,0,"GL")
^MAGV(2006.915,
"^DIC",2006.915,2006.915,"%",0)
^1.005^^0
"^DIC",2006.915,2006.915,"%D",0)
^^27^27^3130130^
"^DIC",2006.915,2006.915,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.915,2006.915,"%D",2,0)
 |                                                               |
"^DIC",2006.915,2006.915,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.915,2006.915,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.915,2006.915,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.915,2006.915,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.915,2006.915,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.915,2006.915,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.915,2006.915,"%D",9,0)
 |                                                               |
"^DIC",2006.915,2006.915,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.915,2006.915,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.915,2006.915,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.915,2006.915,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.915,2006.915,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.915,2006.915,"%D",15,0)
 |                                                               |
"^DIC",2006.915,2006.915,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.915,2006.915,"%D",17,0)
 
"^DIC",2006.915,2006.915,"%D",18,0)
This file acts as the entry point into storage. It holds information 
"^DIC",2006.915,2006.915,"%D",19,0)
about a particular type of artifact (i.e. medical image in DICOM format), 
"^DIC",2006.915,2006.915,"%D",20,0)
and maps this type of document to its intrinsic retention policy. It also 
"^DIC",2006.915,2006.915,"%D",21,0)
stores the file extension to be used for files of the given type.
"^DIC",2006.915,2006.915,"%D",22,0)
 
"^DIC",2006.915,2006.915,"%D",23,0)
Artifact descriptor records will be inserted during patch installation 
"^DIC",2006.915,2006.915,"%D",24,0)
time, and are not available for creation or deletion by users. In the 
"^DIC",2006.915,2006.915,"%D",25,0)
first release, we plan to make them not modifiable as well. In future 
"^DIC",2006.915,2006.915,"%D",26,0)
releases, we will probably add the ability to change the intrinsic 
"^DIC",2006.915,2006.915,"%D",27,0)
retention policy for the given artifact descriptor.
"^DIC",2006.915,"B","ARTIFACT DESCRIPTOR",2006.915)

"^DIC",2006.916,2006.916,0)
ARTIFACT^2006.916
"^DIC",2006.916,2006.916,0,"GL")
^MAGV(2006.916,
"^DIC",2006.916,2006.916,"%",0)
^1.005^^0
"^DIC",2006.916,2006.916,"%D",0)
^^25^25^3100420
"^DIC",2006.916,2006.916,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.916,2006.916,"%D",2,0)
 |                                                               |
"^DIC",2006.916,2006.916,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.916,2006.916,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.916,2006.916,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.916,2006.916,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.916,2006.916,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.916,2006.916,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.916,2006.916,"%D",9,0)
 |                                                               |
"^DIC",2006.916,2006.916,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.916,2006.916,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.916,2006.916,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.916,2006.916,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.916,2006.916,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.916,2006.916,"%D",15,0)
 |                                                               |
"^DIC",2006.916,2006.916,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.916,2006.916,"%D",17,0)
 
"^DIC",2006.916,2006.916,"%D",18,0)
This file holds records containing the invariable information 
"^DIC",2006.916,2006.916,"%D",19,0)
about the artifact, regardless of the physical storage location: CRC, 
"^DIC",2006.916,2006.916,"%D",20,0)
FileSize, who the artifact was created by, a link back to the artifact 
"^DIC",2006.916,2006.916,"%D",21,0)
descriptor, etc.
"^DIC",2006.916,2006.916,"%D",22,0)
 
"^DIC",2006.916,2006.916,"%D",23,0)
It acts as the parent for one or more ArtifactInstance records, and holds 
"^DIC",2006.916,2006.916,"%D",24,0)
the token that external clients will use to get a stream representing the 
"^DIC",2006.916,2006.916,"%D",25,0)
artifact.
"^DIC",2006.916,"B","ARTIFACT",2006.916)

"^DIC",2006.917,2006.917,0)
STORAGE PROVIDER^2006.917
"^DIC",2006.917,2006.917,0,"GL")
^MAGV(2006.917,
"^DIC",2006.917,2006.917,"%",0)
^1.005^^0
"^DIC",2006.917,2006.917,"%D",0)
^^25^25^3100420
"^DIC",2006.917,2006.917,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.917,2006.917,"%D",2,0)
 |                                                               |
"^DIC",2006.917,2006.917,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.917,2006.917,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.917,2006.917,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.917,2006.917,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.917,2006.917,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.917,2006.917,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.917,2006.917,"%D",9,0)
 |                                                               |
"^DIC",2006.917,2006.917,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.917,2006.917,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.917,2006.917,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.917,2006.917,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.917,2006.917,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.917,2006.917,"%D",15,0)
 |                                                               |
"^DIC",2006.917,2006.917,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.917,2006.917,"%D",17,0)
 
"^DIC",2006.917,2006.917,"%D",18,0)
This file holds one record for each "device" in use. For 
"^DIC",2006.917,2006.917,"%D",19,0)
example, if there is a consolidated site with a RAID in place A, a RAID 
"^DIC",2006.917,2006.917,"%D",20,0)
in place B, and an archive in place B, there would be 3 entries in the 
"^DIC",2006.917,2006.917,"%D",21,0)
table.
"^DIC",2006.917,2006.917,"%D",22,0)
 
"^DIC",2006.917,2006.917,"%D",23,0)
Each storage provider has a type, as well as fields such as Archive, Primary 
"^DIC",2006.917,2006.917,"%D",24,0)
(i.e. "RAID"), etc. These will be used to determine whether a particular 
"^DIC",2006.917,2006.917,"%D",25,0)
configuration is valid at configuration and runtime.
"^DIC",2006.917,"B","STORAGE PROVIDER",2006.917)

"^DIC",2006.918,2006.918,0)
ARTIFACT INSTANCE^2006.918
"^DIC",2006.918,2006.918,0,"GL")
^MAGV(2006.918,
"^DIC",2006.918,2006.918,"%",0)
^1.005^^0
"^DIC",2006.918,2006.918,"%D",0)
^^25^25^3100420
"^DIC",2006.918,2006.918,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.918,2006.918,"%D",2,0)
 |                                                               |
"^DIC",2006.918,2006.918,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.918,2006.918,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.918,2006.918,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.918,2006.918,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.918,2006.918,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.918,2006.918,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.918,2006.918,"%D",9,0)
 |                                                               |
"^DIC",2006.918,2006.918,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.918,2006.918,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.918,2006.918,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.918,2006.918,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.918,2006.918,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.918,2006.918,"%D",15,0)
 |                                                               |
"^DIC",2006.918,2006.918,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.918,2006.918,"%D",17,0)
 
"^DIC",2006.918,2006.918,"%D",18,0)
This file holds the details of a particular instance of the binary data 
"^DIC",2006.918,2006.918,"%D",19,0)
for an artifact. Each record is owned by a specific storage provider, and has a 
"^DIC",2006.918,2006.918,"%D",20,0)
reference to its parent Artifact record, as well as a URL understandable 
"^DIC",2006.918,2006.918,"%D",21,0)
by the given provider that can be used to return a stream for the 
"^DIC",2006.918,2006.918,"%D",22,0)
artifact.
"^DIC",2006.918,2006.918,"%D",23,0)
 
"^DIC",2006.918,2006.918,"%D",24,0)
It also holds properties related to when the file was created, when it 
"^DIC",2006.918,2006.918,"%D",25,0)
was last accessed, etc.
"^DIC",2006.918,"B","ARTIFACT INSTANCE",2006.918)

"^DIC",2006.9191,2006.9191,0)
MAGV GATEWAY CONFIGURATION^2006.9191
"^DIC",2006.9191,2006.9191,0,"GL")
^MAGV(2006.9191,
"^DIC",2006.9191,2006.9191,"%",0)
^1.005^^0
"^DIC",2006.9191,2006.9191,"%D",0)
^^18^18^3100426^
"^DIC",2006.9191,2006.9191,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9191,2006.9191,"%D",2,0)
 |                                                               |
"^DIC",2006.9191,2006.9191,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9191,2006.9191,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9191,2006.9191,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9191,2006.9191,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9191,2006.9191,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9191,2006.9191,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9191,2006.9191,"%D",9,0)
 |                                                               |
"^DIC",2006.9191,2006.9191,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9191,2006.9191,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9191,2006.9191,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9191,2006.9191,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9191,2006.9191,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9191,2006.9191,"%D",15,0)
 |                                                               |
"^DIC",2006.9191,2006.9191,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9191,2006.9191,"%D",17,0)
 
"^DIC",2006.9191,2006.9191,"%D",18,0)
This file holds information on various parameters of each DICOM Gateway, e.g., mail group, post office, post port.
"^DIC",2006.9191,"B","MAGV GATEWAY CONFIGURATION",2006.9191)

"^DIC",2006.9192,2006.9192,0)
DICOM AE SECURITY MATRIX^2006.9192
"^DIC",2006.9192,2006.9192,0,"GL")
^MAGV(2006.9192,
"^DIC",2006.9192,2006.9192,"%",0)
^1.005^^0
"^DIC",2006.9192,2006.9192,"%D",0)
^1.001^18^18^3110824^^^^
"^DIC",2006.9192,2006.9192,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9192,2006.9192,"%D",2,0)
 |                                                               |
"^DIC",2006.9192,2006.9192,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9192,2006.9192,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9192,2006.9192,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9192,2006.9192,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9192,2006.9192,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9192,2006.9192,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9192,2006.9192,"%D",9,0)
 |                                                               |
"^DIC",2006.9192,2006.9192,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9192,2006.9192,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9192,2006.9192,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9192,2006.9192,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9192,2006.9192,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9192,2006.9192,"%D",15,0)
 |                                                               |
"^DIC",2006.9192,2006.9192,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9192,2006.9192,"%D",17,0)
 
"^DIC",2006.9192,2006.9192,"%D",18,0)
This file stores the application entity names and parameters.
"^DIC",2006.9192,"B","DICOM AE SECURITY MATRIX",2006.9192)

"^DIC",2006.9193,2006.9193,0)
IMAGING APPLICATION SERVICE^2006.9193
"^DIC",2006.9193,2006.9193,0,"GL")
^MAGV(2006.9193,
"^DIC",2006.9193,2006.9193,"%",0)
^1.005^^0
"^DIC",2006.9193,2006.9193,"%D",0)
^1.001^19^19^3120109^^
"^DIC",2006.9193,2006.9193,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9193,2006.9193,"%D",2,0)
 |                                                               |
"^DIC",2006.9193,2006.9193,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9193,2006.9193,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9193,2006.9193,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9193,2006.9193,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9193,2006.9193,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9193,2006.9193,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9193,2006.9193,"%D",9,0)
 |                                                               |
"^DIC",2006.9193,2006.9193,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9193,2006.9193,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9193,2006.9193,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9193,2006.9193,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9193,2006.9193,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9193,2006.9193,"%D",15,0)
 |                                                               |
"^DIC",2006.9193,2006.9193,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9193,2006.9193,"%D",17,0)
 
"^DIC",2006.9193,2006.9193,"%D",18,0)
This file contains VistA Imaging applications or services, e.g VI DICOM 
"^DIC",2006.9193,2006.9193,"%D",19,0)
Storage SCP, Asynchronous Icon Service.
"^DIC",2006.9193,"B","IMAGING APPLICATION SERVICE",2006.9193)

"^DIC",2006.921,2006.921,0)
ARTIFACT RETENTION POLICY^2006.921
"^DIC",2006.921,2006.921,0,"GL")
^MAGV(2006.921,
"^DIC",2006.921,2006.921,"%",0)
^1.005^^0
"^DIC",2006.921,2006.921,"%D",0)
^^19^19^3100420
"^DIC",2006.921,2006.921,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.921,2006.921,"%D",2,0)
 |                                                               |
"^DIC",2006.921,2006.921,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.921,2006.921,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.921,2006.921,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.921,2006.921,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.921,2006.921,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.921,2006.921,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.921,2006.921,"%D",9,0)
 |                                                               |
"^DIC",2006.921,2006.921,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.921,2006.921,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.921,2006.921,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.921,2006.921,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.921,2006.921,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.921,2006.921,"%D",15,0)
 |                                                               |
"^DIC",2006.921,2006.921,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.921,2006.921,"%D",17,0)
 
"^DIC",2006.921,2006.921,"%D",18,0)
This file maps an artifact to the set of retention policies currently and also 
"^DIC",2006.921,2006.921,"%D",19,0)
historically in effect for that artifact. 
"^DIC",2006.921,"B","ARTIFACT RETENTION POLICY",2006.921)

"^DIC",2006.922,2006.922,0)
RETENTION POLICY FULFILLMENT^2006.922
"^DIC",2006.922,2006.922,0,"GL")
^MAGV(2006.922,
"^DIC",2006.922,2006.922,"%",0)
^1.005^^0
"^DIC",2006.922,2006.922,"%D",0)
^^23^23^3100420
"^DIC",2006.922,2006.922,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.922,2006.922,"%D",2,0)
 |                                                               |
"^DIC",2006.922,2006.922,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.922,2006.922,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.922,2006.922,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.922,2006.922,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.922,2006.922,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.922,2006.922,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.922,2006.922,"%D",9,0)
 |                                                               |
"^DIC",2006.922,2006.922,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.922,2006.922,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.922,2006.922,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.922,2006.922,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.922,2006.922,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.922,2006.922,"%D",15,0)
 |                                                               |
"^DIC",2006.922,2006.922,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.922,2006.922,"%D",17,0)
 
"^DIC",2006.922,2006.922,"%D",18,0)
This file maps a running history of how particular retention policies 
"^DIC",2006.922,2006.922,"%D",19,0)
caused artifacts to be written to specific storage providers.
"^DIC",2006.922,2006.922,"%D",20,0)
 
"^DIC",2006.922,2006.922,"%D",21,0)
It is also used by asynchronous archiving to determine which retention 
"^DIC",2006.922,2006.922,"%D",22,0)
policies have not yet been satisfied, and which providers still need to 
"^DIC",2006.922,2006.922,"%D",23,0)
be written to. 
"^DIC",2006.922,"B","RETENTION POLICY FULFILLMENT",2006.922)

"^DIC",2006.923,2006.923,0)
RETENTION POLICY STORAGE PROVIDER MAP^2006.923
"^DIC",2006.923,2006.923,0,"GL")
^MAGV(2006.923,
"^DIC",2006.923,2006.923,"%",0)
^1.005^^0
"^DIC",2006.923,2006.923,"%D",0)
^1.001^27^27^3110804^
"^DIC",2006.923,2006.923,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.923,2006.923,"%D",2,0)
 |                                                               |
"^DIC",2006.923,2006.923,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.923,2006.923,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.923,2006.923,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.923,2006.923,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.923,2006.923,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.923,2006.923,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.923,2006.923,"%D",9,0)
 |                                                               |
"^DIC",2006.923,2006.923,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.923,2006.923,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.923,2006.923,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.923,2006.923,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.923,2006.923,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.923,2006.923,"%D",15,0)
 |                                                               |
"^DIC",2006.923,2006.923,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.923,2006.923,"%D",17,0)
 
"^DIC",2006.923,2006.923,"%D",18,0)
This file maps retention policies, via an acquisition location, to the 
"^DIC",2006.923,2006.923,"%D",19,0)
storage providers that should be used to satisfy that retention policy.
"^DIC",2006.923,2006.923,"%D",20,0)
 
"^DIC",2006.923,2006.923,"%D",21,0)
In a valid configuration, the attributes on the retention policy (i.e 
"^DIC",2006.923,2006.923,"%D",22,0)
Minimum Archive Copies, etc) can be matched to the corresponding attributes 
"^DIC",2006.923,2006.923,"%D",23,0)
of the mapped storage provider (i.e. Archive), to see whether the configuration 
"^DIC",2006.923,2006.923,"%D",24,0)
is valid.
"^DIC",2006.923,2006.923,"%D",25,0)
 
"^DIC",2006.923,2006.923,"%D",26,0)
This file also holds a flag indicating whether a particular provider 
"^DIC",2006.923,2006.923,"%D",27,0)
should be called synchronously or asynchronously.
"^DIC",2006.923,"B","RETENTION POLICY STORAGE PROVIDER MAP",2006.923)

"^DIC",2006.924,2006.924,0)
STORAGE PROVIDER AVAILABILITY^2006.924
"^DIC",2006.924,2006.924,0,"GL")
^MAGV(2006.924,
"^DIC",2006.924,2006.924,"%",0)
^1.005^^0
"^DIC",2006.924,2006.924,"%D",0)
^1.001^22^22^3110804^
"^DIC",2006.924,2006.924,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.924,2006.924,"%D",2,0)
 |                                                               |
"^DIC",2006.924,2006.924,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.924,2006.924,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.924,2006.924,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.924,2006.924,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.924,2006.924,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.924,2006.924,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.924,2006.924,"%D",9,0)
 |                                                               |
"^DIC",2006.924,2006.924,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.924,2006.924,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.924,2006.924,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.924,2006.924,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.924,2006.924,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.924,2006.924,"%D",15,0)
 |                                                               |
"^DIC",2006.924,2006.924,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.924,2006.924,"%D",17,0)
 
"^DIC",2006.924,2006.924,"%D",18,0)
This file holds information related to availability of the link between 
"^DIC",2006.924,2006.924,"%D",19,0)
an acquisition place and a particular storage provider. If a record is present 
"^DIC",2006.924,2006.924,"%D",20,0)
for a particular storage provider/acquisition location combination, the link is 
"^DIC",2006.924,2006.924,"%D",21,0)
only available between the start and end times provided. If no record 
"^DIC",2006.924,2006.924,"%D",22,0)
exists, the link is available at any time. 
"^DIC",2006.924,"B","STORAGE PROVIDER AVAILABILITY",2006.924)

"^DIC",2006.925,2006.925,0)
TRANSFER STATISTICS^2006.925
"^DIC",2006.925,2006.925,0,"GL")
^MAGV(2006.925,
"^DIC",2006.925,2006.925,"%",0)
^1.005^^0
"^DIC",2006.925,2006.925,"%D",0)
^^22^22^3100426^
"^DIC",2006.925,2006.925,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.925,2006.925,"%D",2,0)
 |                                                               |
"^DIC",2006.925,2006.925,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.925,2006.925,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.925,2006.925,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.925,2006.925,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.925,2006.925,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.925,2006.925,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.925,2006.925,"%D",9,0)
 |                                                               |
"^DIC",2006.925,2006.925,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.925,2006.925,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.925,2006.925,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.925,2006.925,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.925,2006.925,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.925,2006.925,"%D",15,0)
 |                                                               |
"^DIC",2006.925,2006.925,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.925,2006.925,"%D",17,0)
 
"^DIC",2006.925,2006.925,"%D",18,0)
This file gathers statistics about network transfers, for use in reports 
"^DIC",2006.925,2006.925,"%D",19,0)
as well as real time estimates of how long a requested transfer may take. 
"^DIC",2006.925,2006.925,"%D",20,0)
It stores details of a transfer between a provider and a client endpoint, 
"^DIC",2006.925,2006.925,"%D",21,0)
including the time of day the transfer occurred, the duration of the 
"^DIC",2006.925,2006.925,"%D",22,0)
transfer, and the size of the artifact.
"^DIC",2006.925,"B","TRANSFER STATISTICS",2006.925)

"^DIC",2006.926,2006.926,0)
STORAGE TRANSACTION^2006.926
"^DIC",2006.926,2006.926,0,"GL")
^MAGV(2006.926,
"^DIC",2006.926,2006.926,"%",0)
^1.005^^0
"^DIC",2006.926,2006.926,"%D",0)
^^23^23^3100420
"^DIC",2006.926,2006.926,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.926,2006.926,"%D",2,0)
 |                                                               |
"^DIC",2006.926,2006.926,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.926,2006.926,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.926,2006.926,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.926,2006.926,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.926,2006.926,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.926,2006.926,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.926,2006.926,"%D",9,0)
 |                                                               |
"^DIC",2006.926,2006.926,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.926,2006.926,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.926,2006.926,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.926,2006.926,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.926,2006.926,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.926,2006.926,"%D",15,0)
 |                                                               |
"^DIC",2006.926,2006.926,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.926,2006.926,"%D",17,0)
 
"^DIC",2006.926,2006.926,"%D",18,0)
This file tracks the history of actions attempted for a particular 
"^DIC",2006.926,2006.926,"%D",19,0)
artifact. For example:
"^DIC",2006.926,2006.926,"%D",20,0)
  Successful storage to a particular provider
"^DIC",2006.926,2006.926,"%D",21,0)
  Failed storage attempts to a provider
"^DIC",2006.926,2006.926,"%D",22,0)
  Successful retrieval from a particular provider
"^DIC",2006.926,2006.926,"%D",23,0)
  Failed retrieval attempts from a provider.
"^DIC",2006.926,"B","STORAGE TRANSACTION",2006.926)

"^DIC",2006.927,2006.927,0)
QUEUE^2006.927
"^DIC",2006.927,2006.927,0,"GL")
^MAGV(2006.927,
"^DIC",2006.927,2006.927,"%",0)
^1.005^^0
"^DIC",2006.927,2006.927,"%D",0)
^^19^19^3130125^^
"^DIC",2006.927,2006.927,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.927,2006.927,"%D",2,0)
 |                                                               |
"^DIC",2006.927,2006.927,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.927,2006.927,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.927,2006.927,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.927,2006.927,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.927,2006.927,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.927,2006.927,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.927,2006.927,"%D",9,0)
 |                                                               |
"^DIC",2006.927,2006.927,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.927,2006.927,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.927,2006.927,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.927,2006.927,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.927,2006.927,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.927,2006.927,"%D",15,0)
 |                                                               |
"^DIC",2006.927,2006.927,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.927,2006.927,"%D",17,0)
 
"^DIC",2006.927,2006.927,"%D",18,0)
This file is a list of Queues.  It will contain queues for async storage
"^DIC",2006.927,2006.927,"%D",19,0)
requests and failed async storage requests.
"^DIC",2006.927,"B","QUEUE",2006.927)

"^DIC",2006.928,2006.928,0)
QUEUE MESSAGE^2006.928
"^DIC",2006.928,2006.928,0,"GL")
^MAGV(2006.928,
"^DIC",2006.928,2006.928,"%",0)
^1.005^^0
"^DIC",2006.928,2006.928,"%D",0)
^^20^20^3130125^
"^DIC",2006.928,2006.928,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.928,2006.928,"%D",2,0)
 |                                                               |
"^DIC",2006.928,2006.928,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.928,2006.928,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.928,2006.928,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.928,2006.928,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.928,2006.928,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.928,2006.928,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.928,2006.928,"%D",9,0)
 |                                                               |
"^DIC",2006.928,2006.928,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.928,2006.928,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.928,2006.928,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.928,2006.928,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.928,2006.928,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.928,2006.928,"%D",15,0)
 |                                                               |
"^DIC",2006.928,2006.928,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.928,2006.928,"%D",17,0)
 
"^DIC",2006.928,2006.928,"%D",18,0)
This file stores individual queue messages for a queue.  It contains the 
"^DIC",2006.928,2006.928,"%D",19,0)
message, earliest delivery date/time and expiration date/time of a 
"^DIC",2006.928,2006.928,"%D",20,0)
message.  This will be used to queue asynchronous storage requests.
"^DIC",2006.928,"B","QUEUE MESSAGE",2006.928)

"^DIC",2006.931,2006.931,0)
IMAGING EVENT AUDITABLE ACTION^2006.931
"^DIC",2006.931,2006.931,0,"GL")
^MAGV(2006.931,
"^DIC",2006.931,2006.931,"%",0)
^1.005^^0
"^DIC",2006.931,2006.931,"%D",0)
^^18^18^3110216^
"^DIC",2006.931,2006.931,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.931,2006.931,"%D",2,0)
 |                                                               |
"^DIC",2006.931,2006.931,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.931,2006.931,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.931,2006.931,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.931,2006.931,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.931,2006.931,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.931,2006.931,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.931,2006.931,"%D",9,0)
 |                                                               |
"^DIC",2006.931,2006.931,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.931,2006.931,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.931,2006.931,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.931,2006.931,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.931,2006.931,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.931,2006.931,"%D",15,0)
 |                                                               |
"^DIC",2006.931,2006.931,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.931,2006.931,"%D",17,0)
 
"^DIC",2006.931,2006.931,"%D",18,0)
This file contains VistA Imaging auditable events.
"^DIC",2006.931,"B","IMAGING EVENT AUDITABLE ACTION",2006.931)

"^DIC",2006.93,2006.93,0)
IMAGING EVENT AUDIT LOG^2006.93
"^DIC",2006.93,2006.93,0,"GL")
^MAGV(2006.93,
"^DIC",2006.93,2006.93,"%",0)
^1.005^^0
"^DIC",2006.93,2006.93,"%D",0)
^^18^18^3110216^
"^DIC",2006.93,2006.93,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.93,2006.93,"%D",2,0)
 |                                                               |
"^DIC",2006.93,2006.93,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.93,2006.93,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.93,2006.93,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.93,2006.93,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.93,2006.93,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.93,2006.93,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.93,2006.93,"%D",9,0)
 |                                                               |
"^DIC",2006.93,2006.93,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.93,2006.93,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.93,2006.93,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.93,2006.93,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.93,2006.93,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.93,2006.93,"%D",15,0)
 |                                                               |
"^DIC",2006.93,2006.93,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.93,2006.93,"%D",17,0)
 
"^DIC",2006.93,2006.93,"%D",18,0)
This file contains information about audit events.
"^DIC",2006.93,"B","IMAGING EVENT AUDIT LOG",2006.93)

"^DIC",2006.941,2006.941,0)
MAG WORK ITEM^2006.941
"^DIC",2006.941,2006.941,0,"GL")
^MAGV(2006.941,
"^DIC",2006.941,2006.941,"%",0)
^1.005^^
"^DIC",2006.941,2006.941,"%D",0)
^^18^18^3110328^
"^DIC",2006.941,2006.941,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.941,2006.941,"%D",2,0)
 |                                                               |
"^DIC",2006.941,2006.941,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.941,2006.941,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.941,2006.941,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.941,2006.941,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.941,2006.941,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.941,2006.941,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.941,2006.941,"%D",9,0)
 |                                                               |
"^DIC",2006.941,2006.941,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.941,2006.941,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.941,2006.941,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.941,2006.941,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.941,2006.941,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.941,2006.941,"%D",15,0)
 |                                                               |
"^DIC",2006.941,2006.941,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.941,2006.941,"%D",17,0)
 
"^DIC",2006.941,2006.941,"%D",18,0)
This file contains a queue of work items for worklists in the WORKLIST file (#2006.9412).
"^DIC",2006.9412,2006.9412,0)
WORKLIST^2006.9412
"^DIC",2006.9412,2006.9412,0,"GL")
^MAGV(2006.9412,
"^DIC",2006.9412,2006.9412,"%",0)
^1.005^^0
"^DIC",2006.9412,2006.9412,"%D",0)
^^18^18^3110328^
"^DIC",2006.9412,2006.9412,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9412,2006.9412,"%D",2,0)
 |                                                               |
"^DIC",2006.9412,2006.9412,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9412,2006.9412,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9412,2006.9412,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9412,2006.9412,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9412,2006.9412,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9412,2006.9412,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9412,2006.9412,"%D",9,0)
 |                                                               |
"^DIC",2006.9412,2006.9412,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9412,2006.9412,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9412,2006.9412,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9412,2006.9412,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9412,2006.9412,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9412,2006.9412,"%D",15,0)
 |                                                               |
"^DIC",2006.9412,2006.9412,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9412,2006.9412,"%D",17,0)
 
"^DIC",2006.9412,2006.9412,"%D",18,0)
This file contains entries for worklists and their current activity status.
"^DIC",2006.9412,"B","WORKLIST",2006.9412)

"^DIC",2006.9413,2006.9413,0)
MAG WORK ITEM STATUS^2006.9413
"^DIC",2006.9413,2006.9413,0,"GL")
^MAGV(2006.9413,
"^DIC",2006.9413,2006.9413,"%",0)
^1.005^^
"^DIC",2006.9413,2006.9413,"%D",0)
^^18^18^3120116^
"^DIC",2006.9413,2006.9413,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9413,2006.9413,"%D",2,0)
 |                                                               |
"^DIC",2006.9413,2006.9413,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9413,2006.9413,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9413,2006.9413,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9413,2006.9413,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9413,2006.9413,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9413,2006.9413,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9413,2006.9413,"%D",9,0)
 |                                                               |
"^DIC",2006.9413,2006.9413,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9413,2006.9413,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9413,2006.9413,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9413,2006.9413,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9413,2006.9413,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9413,2006.9413,"%D",15,0)
 |                                                               |
"^DIC",2006.9413,2006.9413,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9413,2006.9413,"%D",17,0)
 
"^DIC",2006.9413,2006.9413,"%D",18,0)
This file contains work item statuses.
"^DIC",2006.9413,"B","MAG WORK ITEM STATUS",2006.9413)

"^DIC",2006.9414,2006.9414,0)
MAG WORK ITEM SUBTYPE^2006.9414
"^DIC",2006.9414,2006.9414,0,"GL")
^MAGV(2006.9414,
"^DIC",2006.9414,2006.9414,"%",0)
^1.005^^
"^DIC",2006.9414,2006.9414,"%D",0)
^^18^18^3120116^
"^DIC",2006.9414,2006.9414,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9414,2006.9414,"%D",2,0)
 |                                                               |
"^DIC",2006.9414,2006.9414,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9414,2006.9414,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9414,2006.9414,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9414,2006.9414,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9414,2006.9414,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9414,2006.9414,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9414,2006.9414,"%D",9,0)
 |                                                               |
"^DIC",2006.9414,2006.9414,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9414,2006.9414,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9414,2006.9414,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9414,2006.9414,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9414,2006.9414,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9414,2006.9414,"%D",15,0)
 |                                                               |
"^DIC",2006.9414,2006.9414,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9414,2006.9414,"%D",17,0)
 
"^DIC",2006.9414,2006.9414,"%D",18,0)
This file contains work item subtypes.
"^DIC",2006.9414,"B","MAG WORK ITEM SUBTYPE",2006.9414)

"^DIC",2006.941,"B","MAG WORK ITEM",2006.941)

"^DIC",2006.9421,2006.9421,0)
MAGV IMPORT STUDY LOG^2006.9421
"^DIC",2006.9421,2006.9421,0,"GL")
^MAGV(2006.9421,
"^DIC",2006.9421,2006.9421,"%D",0)
^^18^18^3110328^
"^DIC",2006.9421,2006.9421,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9421,2006.9421,"%D",2,0)
 |                                                               |
"^DIC",2006.9421,2006.9421,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9421,2006.9421,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9421,2006.9421,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9421,2006.9421,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9421,2006.9421,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9421,2006.9421,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9421,2006.9421,"%D",9,0)
 |                                                               |
"^DIC",2006.9421,2006.9421,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9421,2006.9421,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9421,2006.9421,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9421,2006.9421,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9421,2006.9421,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9421,2006.9421,"%D",15,0)
 |                                                               |
"^DIC",2006.9421,2006.9421,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9421,2006.9421,"%D",17,0)
 
"^DIC",2006.9421,2006.9421,"%D",18,0)
This file contains a log of studies imported with the Importer II application. (MAG*3.0*118)
"^DIC",2006.9421,"B","MAGV IMPORT STUDY LOG",2006.9421)

"^DIC",2006.9422,2006.9422,0)
MAGV IMPORT MEDIA LOG^2006.9422
"^DIC",2006.9422,2006.9422,0,"GL")
^MAGV(2006.9422,
"^DIC",2006.9422,2006.9422,"%",0)
^1.005^^
"^DIC",2006.9422,2006.9422,"%D",0)
^^25^25^3120126^
"^DIC",2006.9422,2006.9422,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.9422,2006.9422,"%D",2,0)
 |                                                               |
"^DIC",2006.9422,2006.9422,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.9422,2006.9422,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.9422,2006.9422,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.9422,2006.9422,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.9422,2006.9422,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.9422,2006.9422,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.9422,2006.9422,"%D",9,0)
 |                                                               |
"^DIC",2006.9422,2006.9422,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.9422,2006.9422,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.9422,2006.9422,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.9422,2006.9422,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.9422,2006.9422,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.9422,2006.9422,"%D",15,0)
 |                                                               |
"^DIC",2006.9422,2006.9422,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.9422,2006.9422,"%D",17,0)
 
"^DIC",2006.9422,2006.9422,"%D",18,0)
 
"^DIC",2006.9422,2006.9422,"%D",19,0)
This file contains a log of media bundles from which study data were 
"^DIC",2006.9422,2006.9422,"%D",20,0)
imported by the Importer II application.  A media bundle is a group of 
"^DIC",2006.9422,2006.9422,"%D",21,0)
studies under a single Importer II work item. A media bundle may or may 
"^DIC",2006.9422,2006.9422,"%D",22,0)
not represent a single piece of media or a single network transaction. 
"^DIC",2006.9422,2006.9422,"%D",23,0)
This file includes information about media validity, the user who 
"^DIC",2006.9422,2006.9422,"%D",24,0)
reconciled the associated studies, etc.
"^DIC",2006.9422,2006.9422,"%D",25,0)
(MAG*3.0*118)
"^DIC",2006.9422,"B","MAGV IMPORT MEDIA LOG",2006.9422)

**END**
**END**


****
****
