KIDS Distribution saved on Jun 09, 2010@16:24:32
VistA Imaging V3.0 - Patch 90 -06/09/2010 16:24PM
**KIDS**:MAG*3.0*90^

**INSTALL NAME**
MAG*3.0*90
"BLD",3463,0)
MAG*3.0*90^IMAGING^0^3100609^y
"BLD",3463,1,0)
^^26^26^3100609^
"BLD",3463,1,1,0)
Version 3.0 Patch 090 - VistARad Enhancements (User Survey)
"BLD",3463,1,2,0)
 
"BLD",3463,1,3,0)
 
"BLD",3463,1,4,0)
SECURITY KEY FOR MAG*3.0*90 T8.
"BLD",3463,1,5,0)
 
"BLD",3463,1,6,0)
OPTION: MAGJ VISTARAD WINDOWS
"BLD",3463,1,7,0)
 
"BLD",3463,1,8,0)
RPC: MAGJ GET TREATING LIST
"BLD",3463,1,9,0)
 
"BLD",3463,1,10,0)
RPC: MAGJ VIX LOG REMOTE IMG ACCESS
"BLD",3463,1,11,0)
 
"BLD",3463,1,12,0)
RPC: MAG BROKER GET VISITOR
"BLD",3463,1,13,0)
 
"BLD",3463,1,14,0)
Routines:
"BLD",3463,1,15,0)
MAGGTU41    new value = 22196181
"BLD",3463,1,16,0)
MAGJLS2     new value = 105609021
"BLD",3463,1,17,0)
MAGJLS2B    new value = 81043388
"BLD",3463,1,18,0)
MAGJLS3     new value = 73090068
"BLD",3463,1,19,0)
MAGJLST1    new value = 54042932
"BLD",3463,1,20,0)
MAGJMN1     new value = 92377689
"BLD",3463,1,21,0)
MAGJTU4V    new value = 4996119
"BLD",3463,1,22,0)
MAGJUTL3    new value = 113857123
"BLD",3463,1,23,0)
MAGJUTL4    new value = 148832735
"BLD",3463,1,24,0)
MAGJUTL5    new value = 33141001
"BLD",3463,1,25,0)
MAGJVAPI    new value = 13867025
"BLD",3463,1,26,0)
MAGS2BSE    new value = 3911053
"BLD",3463,4,0)
^9.64PA^^0
"BLD",3463,6.3)
V3.0p90Build1764_T9
"BLD",3463,"ABNS",0)
^9.66A^^
"BLD",3463,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",3463,"INID")
n^n^n
"BLD",3463,"INIT")
POSTINST^MAGJMN1
"BLD",3463,"KRN",0)
^9.67PA^8994^19
"BLD",3463,"KRN",.4,0)
.4
"BLD",3463,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.401,0)
.401
"BLD",3463,"KRN",.401,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.402,0)
.402
"BLD",3463,"KRN",.402,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.403,0)
.403
"BLD",3463,"KRN",.5,0)
.5
"BLD",3463,"KRN",.84,0)
.84
"BLD",3463,"KRN",.84,"NM",0)
^9.68A^^
"BLD",3463,"KRN",3.6,0)
3.6
"BLD",3463,"KRN",3.8,0)
3.8
"BLD",3463,"KRN",9.2,0)
9.2
"BLD",3463,"KRN",9.8,0)
9.8
"BLD",3463,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",3463,"KRN",9.8,"NM",1,0)
MAGGTU41^^0^B22196181
"BLD",3463,"KRN",9.8,"NM",2,0)
MAGJLS2^^0^B105609021
"BLD",3463,"KRN",9.8,"NM",3,0)
MAGJLS2B^^0^B81043388
"BLD",3463,"KRN",9.8,"NM",4,0)
MAGJLS3^^0^B73090068
"BLD",3463,"KRN",9.8,"NM",5,0)
MAGJLST1^^0^B54042932
"BLD",3463,"KRN",9.8,"NM",6,0)
MAGJMN1^^0^B92377689
"BLD",3463,"KRN",9.8,"NM",7,0)
MAGJTU4V^^0^B4996119
"BLD",3463,"KRN",9.8,"NM",8,0)
MAGJUTL3^^0^B113857123
"BLD",3463,"KRN",9.8,"NM",9,0)
MAGJUTL4^^0^B148832735
"BLD",3463,"KRN",9.8,"NM",10,0)
MAGJUTL5^^0^B33141001
"BLD",3463,"KRN",9.8,"NM",11,0)
MAGJVAPI^^0^B13867025
"BLD",3463,"KRN",9.8,"NM",12,0)
MAGS2BSE^^0^B3911053
"BLD",3463,"KRN",9.8,"NM","B","MAGGTU41",1)

"BLD",3463,"KRN",9.8,"NM","B","MAGJLS2",2)

"BLD",3463,"KRN",9.8,"NM","B","MAGJLS2B",3)

"BLD",3463,"KRN",9.8,"NM","B","MAGJLS3",4)

"BLD",3463,"KRN",9.8,"NM","B","MAGJLST1",5)

"BLD",3463,"KRN",9.8,"NM","B","MAGJMN1",6)

"BLD",3463,"KRN",9.8,"NM","B","MAGJTU4V",7)

"BLD",3463,"KRN",9.8,"NM","B","MAGJUTL3",8)

"BLD",3463,"KRN",9.8,"NM","B","MAGJUTL4",9)

"BLD",3463,"KRN",9.8,"NM","B","MAGJUTL5",10)

"BLD",3463,"KRN",9.8,"NM","B","MAGJVAPI",11)

"BLD",3463,"KRN",9.8,"NM","B","MAGS2BSE",12)

"BLD",3463,"KRN",19,0)
19
"BLD",3463,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",3463,"KRN",19,"NM",1,0)
MAGJ VISTARAD WINDOWS^^0
"BLD",3463,"KRN",19,"NM","B","MAGJ VISTARAD WINDOWS",1)

"BLD",3463,"KRN",19.1,0)
19.1
"BLD",3463,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",3463,"KRN",19.1,"NM",1,0)
MAGJ REMOTE ACCESS CONTROL^^0
"BLD",3463,"KRN",19.1,"NM","B","MAGJ REMOTE ACCESS CONTROL",1)

"BLD",3463,"KRN",101,0)
101
"BLD",3463,"KRN",101,"NM",0)
^9.68A^^
"BLD",3463,"KRN",409.61,0)
409.61
"BLD",3463,"KRN",771,0)
771
"BLD",3463,"KRN",771,"NM",0)
^9.68A^^
"BLD",3463,"KRN",870,0)
870
"BLD",3463,"KRN",870,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.51,0)
8989.51
"BLD",3463,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.52,0)
8989.52
"BLD",3463,"KRN",8994,0)
8994
"BLD",3463,"KRN",8994,"NM",0)
^9.68A^3^3
"BLD",3463,"KRN",8994,"NM",1,0)
MAG BROKER GET VISITOR^^0
"BLD",3463,"KRN",8994,"NM",2,0)
MAGJ GET TREATING LIST^^0
"BLD",3463,"KRN",8994,"NM",3,0)
MAGJ VIX LOG REMOTE IMG ACCESS^^0
"BLD",3463,"KRN",8994,"NM","B","MAG BROKER GET VISITOR",1)

"BLD",3463,"KRN",8994,"NM","B","MAGJ GET TREATING LIST",2)

"BLD",3463,"KRN",8994,"NM","B","MAGJ VIX LOG REMOTE IMG ACCESS",3)

"BLD",3463,"KRN","B",.4,.4)

"BLD",3463,"KRN","B",.401,.401)

"BLD",3463,"KRN","B",.402,.402)

"BLD",3463,"KRN","B",.403,.403)

"BLD",3463,"KRN","B",.5,.5)

"BLD",3463,"KRN","B",.84,.84)

"BLD",3463,"KRN","B",3.6,3.6)

"BLD",3463,"KRN","B",3.8,3.8)

"BLD",3463,"KRN","B",9.2,9.2)

"BLD",3463,"KRN","B",9.8,9.8)

"BLD",3463,"KRN","B",19,19)

"BLD",3463,"KRN","B",19.1,19.1)

"BLD",3463,"KRN","B",101,101)

"BLD",3463,"KRN","B",409.61,409.61)

"BLD",3463,"KRN","B",771,771)

"BLD",3463,"KRN","B",870,870)

"BLD",3463,"KRN","B",8989.51,8989.51)

"BLD",3463,"KRN","B",8989.52,8989.52)

"BLD",3463,"KRN","B",8994,8994)

"BLD",3463,"PRE")
MAGJMN1
"BLD",3463,"REQB",0)
^9.611^2^2
"BLD",3463,"REQB",1,0)
MAG*3.0*101^2
"BLD",3463,"REQB",2,0)
MAG*3.0*111^2
"BLD",3463,"REQB","B","MAG*3.0*101",1)

"BLD",3463,"REQB","B","MAG*3.0*111",2)

"INIT")
POSTINST^MAGJMN1
"KRN",19,123457,-1)
0^1
"KRN",19,123457,0)
MAGJ VISTARAD WINDOWS^MAGJ VISTARAD RPC'S^^B^^^^^^^^
"KRN",19,123457,1,0)
^19.06^1^1^3091026^^^^
"KRN",19,123457,1,1,0)
This option is the Broker entry for holding the Imaging VistaRad RPC's.
"KRN",19,123457,99.1)
58510,33726
"KRN",19,123457,"RPC",0)
^19.05P^52^52
"KRN",19,123457,"RPC",1,0)
MAGJ CACHELOCATION
"KRN",19,123457,"RPC",3,0)
MAGJ PTRADEXAMS
"KRN",19,123457,"RPC",4,0)
MAGJ RADACTIVEEXAMS
"KRN",19,123457,"RPC",5,0)
MAGJ RADCASEIMAGES
"KRN",19,123457,"RPC",6,0)
MAGJ RADSTATUSUPDATE
"KRN",19,123457,"RPC",7,0)
MAGJ CUSTOM LISTS
"KRN",19,123457,"RPC",8,0)
MAGGUSER2
"KRN",19,123457,"RPC",11,0)
MAGGRADREPORT
"KRN",19,123457,"RPC",12,0)
MAGGDGRPD
"KRN",19,123457,"RPC",13,0)
MAGGHSLIST
"KRN",19,123457,"RPC",14,0)
MAGGHS
"KRN",19,123457,"RPC",15,0)
MAGJ RADORDERDISP
"KRN",19,123457,"RPC",16,0)
MAGG PAT FIND
"KRN",19,123457,"RPC",17,0)
MAGG PAT INFO
"KRN",19,123457,"RPC",18,0)
MAGG PAT BS5 CHECK
"KRN",19,123457,"RPC",19,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,123457,"RPC",20,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,123457,"RPC",21,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,123457,"RPC",22,0)
MAGJ PT ALL EXAMS
"KRN",19,123457,"RPC",23,0)
MAGJ EXAM REPORT
"KRN",19,123457,"RPC",25,0)
MAGJ ROUTE ENABLE
"KRN",19,123457,"RPC",26,0)
MAGJ ROUTE EXAMS
"KRN",19,123457,"RPC",27,0)
MAGJ ROUTE REQUEST
"KRN",19,123457,"RPC",28,0)
MAGJ LOGOFF
"KRN",19,123457,"RPC",29,0)
MAGJ PT INFO
"KRN",19,123457,"RPC",30,0)
MAGJ USER DATA
"KRN",19,123457,"RPC",31,0)
MAGJ USER2
"KRN",19,123457,"RPC",32,0)
MAGJ STUDY_DATA
"KRN",19,123457,"RPC",33,0)
MAGJ HISTORYLIST
"KRN",19,123457,"RPC",34,0)
MAGJ CPTMATCH
"KRN",19,123457,"RPC",35,0)
MAGJ RADCASELOCKS
"KRN",19,123457,"RPC",36,0)
MAGJ RADSTATUSCHECK
"KRN",19,123457,"RPC",37,0)
MAGJ PRIOREXAMS
"KRN",19,123457,"RPC",38,0)
MAGJ REMOTESCREEN
"KRN",19,123457,"RPC",39,0)
MAGG GET TIMEOUT
"KRN",19,123457,"RPC",40,0)
MAGD CT PARAMS
"KRN",19,123457,"RPC",41,0)
MAGD CR PARAMS
"KRN",19,123457,"RPC",42,0)
MAGJ MAGDATADUMP
"KRN",19,123457,"RPC",44,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,123457,"RPC",45,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,123457,"RPC",46,0)
VAFCTFU GET TREATING LIST
"KRN",19,123457,"RPC",47,0)
MAGJ VIX LOG REMOTE IMG ACCESS
"KRN",19,123457,"RPC",48,0)
MAGJ GET TREATING LIST
"KRN",19,123457,"RPC",49,0)
MAG BROKER SECURITY
"KRN",19,123457,"RPC",50,0)
MAG IMAGE CURRENT INFO
"KRN",19,123457,"RPC",51,0)
MAG NEW SOP INSTANCE UID
"KRN",19,123457,"RPC",52,0)
MAG BROKER GET VISITOR
"KRN",19,123457,"U")
MAGJ VISTARAD RPC'S
"KRN",19.1,123458,-1)
0^1
"KRN",19.1,123458,0)
MAGJ REMOTE ACCESS CONTROL^Control remote access per user^l^y^0
"KRN",19.1,123458,1,0)
^^1^1^3100526^
"KRN",19.1,123458,1,1,0)
This key allows a VistARad user to access the Monitored Sites configuration subset of the VIX Configuration settings tab, and to view exam list data in the Monitored Sites tab of the Manager.
"KRN",8994,123459,-1)
0^1
"KRN",8994,123459,0)
MAG BROKER GET VISITOR^BSEXP^MAGS2BSE^1^R^0^^0^^^0
"KRN",8994,123459,1,0)
^8994.01^1^1^3100325^^
"KRN",8994,123459,1,1,0)
Wraps code underlying RPC: XUS GET VISITOR to check for expired authentication token.
"KRN",8994,123459,2,0)
^8994.02A^1^1
"KRN",8994,123459,2,1,0)
MAGTKN^1^256^0
"KRN",8994,123459,2,1,1,0)
^^1^1^3100325^
"KRN",8994,123459,2,1,1,1,0)
The Broker Security Enhancement (BSE) token to validate.
"KRN",8994,123459,2,"B","MAGTKN",1)

"KRN",8994,123459,3,0)
^^2^2^3100325^
"KRN",8994,123459,3,1,0)
Returns '0' if input invalid or token expired. Otherwise returns
"KRN",8994,123459,3,2,0)
caret-delimited string of the token holder's demographic data.
"KRN",8994,123460,-1)
0^2
"KRN",8994,123460,0)
MAGJ GET TREATING LIST^FACLIST^MAGJLST1^2^R^^^1
"KRN",8994,123460,1,0)
^8994.01^2^2^3091021^^
"KRN",8994,123460,1,1,0)
Get Treating Facility List for a patient.  This RPC merely calls
"KRN",8994,123460,1,2,0)
the subroutine used for the VAFCTFU GET TREATING LIST rpc.
"KRN",8994,123460,2,0)
^8994.02A^1^1
"KRN",8994,123460,2,1,0)
DFN^1^30^1^1
"KRN",8994,123460,2,1,1,0)
^8994.021^1^1^3091021^^
"KRN",8994,123460,2,1,1,1,0)
Patient DFN
"KRN",8994,123460,2,"B","DFN",1)

"KRN",8994,123460,2,"PARAMSEQ",1,1)

"KRN",8994,123460,3,0)
^8994.03^9^9^3091021^^
"KRN",8994,123460,3,1,0)
Array; first entry contains result header with # lines to follow
"KRN",8994,123460,3,2,0)
and reply message description.
"KRN",8994,123460,3,3,0)
Entries 2:N (if any exist) contain data for each Treating facility,
"KRN",8994,123460,3,4,0)
up-caret delimited : A ^ B ^ C ^ D ^ E
"KRN",8994,123460,3,5,0)
   A: Institution IEN of the Facility
"KRN",8994,123460,3,6,0)
   B: Institution Name
"KRN",8994,123460,3,7,0)
   C: Current date on record for that institution
"KRN",8994,123460,3,8,0)
   D: ADT/HL7 event reason 
"KRN",8994,123460,3,9,0)
   E: FACILITY TYPE
"KRN",8994,123461,-1)
0^3
"KRN",8994,123461,0)
MAGJ VIX LOG REMOTE IMG ACCESS^LOGRIA^MAGJVAPI^1^R^0^^1^.1^^0
"KRN",8994,123461,1,0)
^8994.01^1^1^3100402^^^^
"KRN",8994,123461,1,1,0)
Log ViX-enabled Remote Image Access Events.
"KRN",8994,123461,2,0)
^8994.02A^1^1
"KRN",8994,123461,2,1,0)
DATA^1^256^1^1
"KRN",8994,123461,2,1,1,0)
^8994.021^8^8^3100402^^^^
"KRN",8994,123461,2,1,1,1,0)
CARET DELIMITED AS FOLLOWS:
"KRN",8994,123461,2,1,1,2,0)
  ^01: ACTION ... "VR-RV"_ subset member from ACTION+1^MAGGTAU
"KRN",8994,123461,2,1,1,3,0)
  ^02: RADFN .... IEN of PATIENT file (#2)
"KRN",8994,123461,2,1,1,4,0)
  ^03: MAGIEN ... IEN of IMAGE file (#2005)
"KRN",8994,123461,2,1,1,5,0)
  ^04: NIMGS .... VRad Image Count
"KRN",8994,123461,2,1,1,6,0)
  ^05: REMOTE ... VRad Remote Read Flag
"KRN",8994,123461,2,1,1,7,0)
  ^06: MAGJVRV .. VRad Version
"KRN",8994,123461,2,1,1,8,0)
  ^07: USERCLS .. VRad User Class
"KRN",8994,123461,2,"B","DATA",1)

"KRN",8994,123461,2,"PARAMSEQ",1,1)

"KRN",8994,123461,3,0)
^8994.03^5^5^3100401^^^^
"KRN",8994,123461,3,1,0)
CARET-DELIMITED (IF NECESSARY):
"KRN",8994,123461,3,2,0)
 
"KRN",8994,123461,3,3,0)
       __EXPECTED__  ______ON_ERROR______
"KRN",8994,123461,3,4,0)
  ^01: 1             0
"KRN",8994,123461,3,5,0)
  ^02:               Error msg. (optional)
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging Release History
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020328^3020328^.5
"PKG",454,22,1,"PAH",1,0)
90^3100609^.5
"PKG",454,22,1,"PAH",1,1,0)
^9.49011^15^15^3100609
"PKG",454,22,1,"PAH",1,1,1,0)
Routines for Patch 90, Test Build 9.
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
Routines:
"PKG",454,22,1,"PAH",1,1,4,0)
MAGGTU41    value = 5443844
"PKG",454,22,1,"PAH",1,1,5,0)
MAGJLS2     value = 25461554
"PKG",454,22,1,"PAH",1,1,6,0)
MAGJLS2B    value = 20391246
"PKG",454,22,1,"PAH",1,1,7,0)
MAGJLS3     value = 18365062
"PKG",454,22,1,"PAH",1,1,8,0)
MAGJLST1    value = 16179057
"PKG",454,22,1,"PAH",1,1,9,0)
MAGJMN1     value = 18586606
"PKG",454,22,1,"PAH",1,1,10,0)
MAGJTU4V    value = 3478059
"PKG",454,22,1,"PAH",1,1,11,0)
MAGJUTL3    value = 19746308
"PKG",454,22,1,"PAH",1,1,12,0)
MAGJUTL4    value = 21177891
"PKG",454,22,1,"PAH",1,1,13,0)
MAGJUTL5    value = 15130172
"PKG",454,22,1,"PAH",1,1,14,0)
MAGJVAPI    value = 5546355
"PKG",454,22,1,"PAH",1,1,15,0)
MAGS2BSE    value = 2835335
"PRE")
MAGJMN1
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","MAGGTU41")
0^1^B22196181
"RTN","MAGGTU41",1,0)
MAGGTU41 ;WOIFO/GEK/SG - VERSION CONTROL UTILITIES  ; 3/04/10 4:25pm
"RTN","MAGGTU41",2,0)
 ;;3.0;IMAGING;**46,59,93,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGGTU41",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU41",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU41",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU41",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU41",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU41",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU41",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU41",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU41",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU41",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU41",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU41",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU41",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU41",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU41",17,0)
 ;;
"RTN","MAGGTU41",18,0)
 Q
"RTN","MAGGTU41",19,0)
 ;
"RTN","MAGGTU41",20,0)
 ;+++++ CHECKS THE CLIENT VERSION AGIANST THE LIST OF SUPPORTED ONES
"RTN","MAGGTU41",21,0)
 ;
"RTN","MAGGTU41",22,0)
 ; .VCD          Reference to a local variable where the version
"RTN","MAGGTU41",23,0)
 ;               control data is cached (see the $$GETVCD^MAGGTU41
"RTN","MAGGTU41",24,0)
 ;               for details).
"RTN","MAGGTU41",25,0)
 ;
"RTN","MAGGTU41",26,0)
 ; CLNAME        Client name ("CAPTURE", "CLUTILS", "DISPLAY",
"RTN","MAGGTU41",27,0)
 ;               "TELEREADER", or "VISTARAD")
"RTN","MAGGTU41",28,0)
 ;
"RTN","MAGGTU41",29,0)
 ; .CLVER        Reference to a local variable that stores the client
"RTN","MAGGTU41",30,0)
 ;               application version (Major.Minor.Patch.Build).
"RTN","MAGGTU41",31,0)
 ;
"RTN","MAGGTU41",32,0)
 ; Return Values
"RTN","MAGGTU41",33,0)
 ; =============
"RTN","MAGGTU41",34,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",35,0)
 ;            0  Latest version of the client
"RTN","MAGGTU41",36,0)
 ;            1  Latest version but old build (T-version)
"RTN","MAGGTU41",37,0)
 ;            2  Supported version of the client
"RTN","MAGGTU41",38,0)
 ;            3  Supported version but old build (T-version)
"RTN","MAGGTU41",39,0)
 ;            4  Client is not supported
"RTN","MAGGTU41",40,0)
 ;
"RTN","MAGGTU41",41,0)
CHKVER1(VCD,CLNAME,CLVER) ;
"RTN","MAGGTU41",42,0)
 N CT,CV,RC
"RTN","MAGGTU41",43,0)
 ;--- Bug in patch 42: the version comes in as 30.5.42.x
"RTN","MAGGTU41",44,0)
 ;--- (patch 42 was not released)
"RTN","MAGGTU41",45,0)
 S:$P(CLVER,".")="30" CLVER="3.0."_$P(CLVER,".",3,99)
"RTN","MAGGTU41",46,0)
 ;--- Parse the client version
"RTN","MAGGTU41",47,0)
 S CV=$P(CLVER,".",1,3),CT=$P(CLVER,".",4)
"RTN","MAGGTU41",48,0)
 S:CT="" $P(CLVER,".",4)=0,CT=0
"RTN","MAGGTU41",49,0)
 ;--- Get the version control data (if not cached already)
"RTN","MAGGTU41",50,0)
 I $D(VCD(CLNAME))<10  S RC=$$GETVCD(.VCD,CLNAME)  Q:RC<0 RC
"RTN","MAGGTU41",51,0)
 ;--- Client and server versions are different
"RTN","MAGGTU41",52,0)
 I CV'=VCD(CLNAME,"SV")  D  Q RC
"RTN","MAGGTU41",53,0)
 . S RC=$S('$D(VCD(CLNAME,"ST",CV)):4,CT<VCD(CLNAME,"ST",CV):3,1:2)
"RTN","MAGGTU41",54,0)
 . Q
"RTN","MAGGTU41",55,0)
 ;--- The versions are the same
"RTN","MAGGTU41",56,0)
 Q $S(CT&(CT'=VCD(CLNAME,"ST")):1,1:0)
"RTN","MAGGTU41",57,0)
 ;
"RTN","MAGGTU41",58,0)
 ;##### RETURNS THE CLIENT APPLICATION DESCRIPTOR
"RTN","MAGGTU41",59,0)
 ;
"RTN","MAGGTU41",60,0)
 ; CLNAME        Client application name
"RTN","MAGGTU41",61,0)
 ;
"RTN","MAGGTU41",62,0)
 ;               If this parameter is not defined or empty, then the
"RTN","MAGGTU41",63,0)
 ;               function returns the list of supported client names
"RTN","MAGGTU41",64,0)
 ;               separated by commas.
"RTN","MAGGTU41",65,0)
 ;
"RTN","MAGGTU41",66,0)
 ; Return Values
"RTN","MAGGTU41",67,0)
 ; =============
"RTN","MAGGTU41",68,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",69,0)
 ;          ...  Client descriptor
"RTN","MAGGTU41",70,0)
 ;                 ^01: Name of the version control routine
"RTN","MAGGTU41",71,0)
 ;                 ^02: Number of the version field in the IMAGING
"RTN","MAGGTU41",72,0)
 ;                      WINDOWS WORKSTATIONS  file (2006.81)
"RTN","MAGGTU41",73,0)
 ;                 ^03: Number of the date/time field in the IMAGING
"RTN","MAGGTU41",74,0)
 ;                      WINDOWS WORKSTATIONS  file (2006.81)
"RTN","MAGGTU41",75,0)
 ;
"RTN","MAGGTU41",76,0)
CLADESC(CLNAME) ;
"RTN","MAGGTU41",77,0)
 Q:$G(CLNAME)="" "CAPTURE,CLUTILS,DISPLAY,TELEREADER,VISTARAD"
"RTN","MAGGTU41",78,0)
 N DSC
"RTN","MAGGTU41",79,0)
 D
"RTN","MAGGTU41",80,0)
 . I CLNAME="CAPTURE"     S DSC="MAGGTU4C^9.5^5.5"  Q
"RTN","MAGGTU41",81,0)
 . I CLNAME="CLUTILS"     S DSC="MAGGTU4L^9.9^5.9"  Q
"RTN","MAGGTU41",82,0)
 . I CLNAME="DISPLAY"     S DSC="MAGGTU4D^9^5"      Q
"RTN","MAGGTU41",83,0)
 . I CLNAME="TELEREADER"  S DSC="MAGGTU4T^9.3^5.3"  Q
"RTN","MAGGTU41",84,0)
 . I CLNAME="VISTARAD"    S DSC="MAGJTU4V^9.7^5.7"  Q
"RTN","MAGGTU41",85,0)
 . Q
"RTN","MAGGTU41",86,0)
 ;
"RTN","MAGGTU41",87,0)
 Q $S($G(DSC)'="":DSC,1:$$ERROR^MAGUERR(-24,,CLNAME))
"RTN","MAGGTU41",88,0)
 ;
"RTN","MAGGTU41",89,0)
 ;+++++ BUILDS THE GENERAL ERROR MESSAGE IN THE RESULT ARRAY
"RTN","MAGGTU41",90,0)
 ;
"RTN","MAGGTU41",91,0)
 ; .MAGRES       Reference to the RPC result array where
"RTN","MAGGTU41",92,0)
 ;               the error message is returned to.
"RTN","MAGGTU41",93,0)
 ;
"RTN","MAGGTU41",94,0)
 ; ERR           Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",95,0)
 ;
"RTN","MAGGTU41",96,0)
ERROR(MAGRES,ERR) ;
"RTN","MAGGTU41",97,0)
 Q:ERR'<0
"RTN","MAGGTU41",98,0)
 N MAGPRMS  K MAGRES
"RTN","MAGGTU41",99,0)
 S MAGPRMS("ERRMSG")=$P(ERR,U,2)  ; Message text
"RTN","MAGGTU41",100,0)
 S MAGPRMS("ERRLOC")=$P(ERR,U,3)  ; Location
"RTN","MAGGTU41",101,0)
 D BLD^DIALOG(20050005.002,.MAGPRMS,,"MAGRES")
"RTN","MAGGTU41",102,0)
 S MAGRES(0)="2^"_$G(MAGRES(1))  K MAGRES(1)
"RTN","MAGGTU41",103,0)
 Q
"RTN","MAGGTU41",104,0)
 ;
"RTN","MAGGTU41",105,0)
 ;+++++ RETURNS THE ROW OF THE CLIENT VERSION CONTROL TABLE
"RTN","MAGGTU41",106,0)
 ;
"RTN","MAGGTU41",107,0)
 ; ROW           Sequential number of the row (starting from 1)
"RTN","MAGGTU41",108,0)
 ;
"RTN","MAGGTU41",109,0)
 ; Input Variables
"RTN","MAGGTU41",110,0)
 ; ===============
"RTN","MAGGTU41",111,0)
 ;   MAGRTN
"RTN","MAGGTU41",112,0)
 ;
"RTN","MAGGTU41",113,0)
GETVCL(ROW) ;
"RTN","MAGGTU41",114,0)
 Q $P($T(@("CLVERCT+"_(ROW+3)_"^"_MAGRTN)),";;",2)
"RTN","MAGGTU41",115,0)
 ;
"RTN","MAGGTU41",116,0)
 ;##### RETURNS THE SERVER VERSION AND THE LIST OF SUPPORTED CLIENTS
"RTN","MAGGTU41",117,0)
 ;
"RTN","MAGGTU41",118,0)
 ; .VCD(         Reference to a local variable where the version
"RTN","MAGGTU41",119,0)
 ;               control data is returned to.
"RTN","MAGGTU41",120,0)
 ;   CLNAME,
"RTN","MAGGTU41",121,0)
 ;     "SV")     Server version (Major.Minor.Patch.Build)
"RTN","MAGGTU41",122,0)
 ;     "ST",     Server build number (T-version)
"RTN","MAGGTU41",123,0)
 ;       Ver)    Build number of the version Ver release.
"RTN","MAGGTU41",124,0)
 ;               Ver is in the Major.Minor.Patch format.
"RTN","MAGGTU41",125,0)
 ;
"RTN","MAGGTU41",126,0)
 ; CLNAME        Client name ("CAPTURE", "CLUTILS", "DISPLAY",
"RTN","MAGGTU41",127,0)
 ;               "TELEREADER", or "VISTARAD")
"RTN","MAGGTU41",128,0)
 ;
"RTN","MAGGTU41",129,0)
 ;               See also the CLVERCT^MAGGTU4C, CLVERCT^MAGGTU4D,
"RTN","MAGGTU41",130,0)
 ;               CLVERCT^MAGGTU4L, and CLVERCT^MAGGTU4T for client
"RTN","MAGGTU41",131,0)
 ;               specific version tables.
"RTN","MAGGTU41",132,0)
 ;
"RTN","MAGGTU41",133,0)
 ; Return Values
"RTN","MAGGTU41",134,0)
 ; =============
"RTN","MAGGTU41",135,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",136,0)
 ;            0  Success
"RTN","MAGGTU41",137,0)
 ;
"RTN","MAGGTU41",138,0)
GETVCD(VCD,CLNAME) ;
"RTN","MAGGTU41",139,0)
 N MAGRTN        ; Name of the routine with the version control table
"RTN","MAGGTU41",140,0)
 ;
"RTN","MAGGTU41",141,0)
 N BUF,I,SV,TMP,VER   K VCD(CLNAME)
"RTN","MAGGTU41",142,0)
 F I="ST","SV"  S VCD(CLNAME,I)=""
"RTN","MAGGTU41",143,0)
 ;
"RTN","MAGGTU41",144,0)
 ;=== Get the name of the routine that contains the
"RTN","MAGGTU41",145,0)
 ;=== version control table for the client
"RTN","MAGGTU41",146,0)
 S MAGRTN=$P($$CLADESC(CLNAME),U)  Q:MAGRTN<0 MAGRTN
"RTN","MAGGTU41",147,0)
 ;
"RTN","MAGGTU41",148,0)
 ;=== Get the server version from the second line of the
"RTN","MAGGTU41",149,0)
 ;=== routine that contains the version control table
"RTN","MAGGTU41",150,0)
 S BUF=$P($T(@("+2^"_MAGRTN)),";;",2,999)
"RTN","MAGGTU41",151,0)
 Q:BUF="" $$ERROR^MAGUERR(-25,,MAGRTN)
"RTN","MAGGTU41",152,0)
 ;--- Get the package version
"RTN","MAGGTU41",153,0)
 S SV=$TR($P(BUF,";")," ")
"RTN","MAGGTU41",154,0)
 ;--- Get the patch number (the last one) from the list
"RTN","MAGGTU41",155,0)
 S TMP=$TR($P($P(BUF,";",3),"**",2)," ")
"RTN","MAGGTU41",156,0)
 S SV=SV_"."_(+$P(TMP,",",$L(TMP,",")))
"RTN","MAGGTU41",157,0)
 ;
"RTN","MAGGTU41",158,0)
 ;=== Load the version control table
"RTN","MAGGTU41",159,0)
 F I=1:1  S BUF=$$GETVCL(I)  Q:BUF=""  D
"RTN","MAGGTU41",160,0)
 . S BUF=$TR(BUF,"| ",U),VER=$P(BUF,U,2)
"RTN","MAGGTU41",161,0)
 . S:VER>0 VCD(CLNAME,"ST",VER)=+$P(BUF,U,3)
"RTN","MAGGTU41",162,0)
 . Q
"RTN","MAGGTU41",163,0)
 ;
"RTN","MAGGTU41",164,0)
 ;=== Get the build number and remove the server version from the list
"RTN","MAGGTU41",165,0)
 S VCD(CLNAME,"SV")=SV
"RTN","MAGGTU41",166,0)
 S VCD(CLNAME,"ST")=+$G(VCD(CLNAME,"ST",SV))
"RTN","MAGGTU41",167,0)
 K VCD(CLNAME,"ST",SV)
"RTN","MAGGTU41",168,0)
 Q 0
"RTN","MAGGTU41",169,0)
 ;
"RTN","MAGGTU41",170,0)
 ;+++++ APPENDS THE CLIENT-SPECIFIC WARNING TO THE ARRAY
"RTN","MAGGTU41",171,0)
 ;
"RTN","MAGGTU41",172,0)
 ; .MAGRES       Reference to the RPC result array that
"RTN","MAGGTU41",173,0)
 ;               the warning is apppended to.
"RTN","MAGGTU41",174,0)
 ;
"RTN","MAGGTU41",175,0)
 ; CLNAME        Client name
"RTN","MAGGTU41",176,0)
 ;
"RTN","MAGGTU41",177,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGGTU41",178,0)
 ;
"RTN","MAGGTU41",179,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGGTU41",180,0)
 ;
"RTN","MAGGTU41",181,0)
WARNING(MAGRES,CLNAME,CLVER,CVRC) ;
"RTN","MAGGTU41",182,0)
 ;--- Do not append the warning if the RPC result array already
"RTN","MAGGTU41",183,0)
 ;--- contains an error message that will terminate the client.
"RTN","MAGGTU41",184,0)
 Q:+$G(MAGRES(0),1)=2
"RTN","MAGGTU41",185,0)
 ;
"RTN","MAGGTU41",186,0)
 N EP,MAGBUF,RI,SPI
"RTN","MAGGTU41",187,0)
 S:$P(CLVER,".",4)="" $P(CLVER,".",4)=0
"RTN","MAGGTU41",188,0)
 ;--- Get the name of the client's version control routine
"RTN","MAGGTU41",189,0)
 S EP=$P($$CLADESC(CLNAME),U)  Q:EP<0
"RTN","MAGGTU41",190,0)
 S EP="WARNING^"_EP  Q:$T(@EP)=""
"RTN","MAGGTU41",191,0)
 ;--- Get the client-specific warning
"RTN","MAGGTU41",192,0)
 X "D "_EP_"(.MAGBUF,CLVER,CVRC)"
"RTN","MAGGTU41",193,0)
 S SPI=$Q(MAGBUF)  Q:SPI=""
"RTN","MAGGTU41",194,0)
 ;--- Append the 1st line of the warning text to the result array
"RTN","MAGGTU41",195,0)
 ;--- and make sure that the client will diplay the warning
"RTN","MAGGTU41",196,0)
 S RI=$O(MAGRES(""),-1)
"RTN","MAGGTU41",197,0)
 I RI'=""  D  S:+$G(MAGRES(0),1)=1 $P(MAGRES(0),U)=0
"RTN","MAGGTU41",198,0)
 . S RI=RI+1,MAGRES(RI)=" "
"RTN","MAGGTU41",199,0)
 . S RI=RI+1,MAGRES(RI)=@SPI
"RTN","MAGGTU41",200,0)
 . Q
"RTN","MAGGTU41",201,0)
 E  S MAGRES(0)="1^"_@SPI
"RTN","MAGGTU41",202,0)
 ;--- Append the remaining lines
"RTN","MAGGTU41",203,0)
 F  S SPI=$Q(@SPI)  Q:SPI=""  S RI=RI+1,MAGRES(RI)=@SPI
"RTN","MAGGTU41",204,0)
 Q
"RTN","MAGJLS2")
0^2^B105609021
"RTN","MAGJLS2",1,0)
MAGJLS2 ;WIRMFO/JHC Rad. Workstation RPC calls ; 24-Mar-2010  1:26pm
"RTN","MAGJLS2",2,0)
 ;;3.0;IMAGING;**22,18,76,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJLS2",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",17,0)
 ;;
"RTN","MAGJLS2",18,0)
 Q
"RTN","MAGJLS2",19,0)
 ;  ACTIVE -- list exams (Unread, Recent, &/or Pending) for input Imaging Type(s)
"RTN","MAGJLS2",20,0)
 ;    RPC Call: MAGJ RADACTIVEEXAMS
"RTN","MAGJLS2",21,0)
 ;  BKGND -- EP for Bkgnd Compile of UNREAD list
"RTN","MAGJLS2",22,0)
 ;  BKGND2 -- EP for Bkgnd Compile of RECENT list
"RTN","MAGJLS2",23,0)
 Q
"RTN","MAGJLS2",24,0)
BKGERR S ERRCOUNT=$G(ERRCOUNT)+1 H 3 I ERRCOUNT>2 K ZTQUEUED G ^XUSCLEAN ; prevent bkgnd loop
"RTN","MAGJLS2",25,0)
ERR1 I $G(LSTNAM)]"" L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",26,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",27,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLS2",28,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2",29,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLS2",30,0)
 Q:$Q 1  Q
"RTN","MAGJLS2",31,0)
 ;
"RTN","MAGJLS2",32,0)
ACTIVE(MAGGRY,DATA) ; EP--get Active (Unread/Recent/Pend) Exam Lists
"RTN","MAGJLS2",33,0)
 ; MAGGRY holds $NA ref to ^TMP where return msg is assembled
"RTN","MAGJLS2",34,0)
 ;   all refs to MAGGRY use SS indirection
"RTN","MAGJLS2",35,0)
 ; If not use bkgnd, compile in foregnd
"RTN","MAGJLS2",36,0)
 ;
"RTN","MAGJLS2",37,0)
 N BKGND,COMPFAIL,DATA01,LSTID,LSTNAM,LSTNUM,LSTPARAM,LSTREQ,MAGLST
"RTN","MAGJLS2",38,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLS2"
"RTN","MAGJLS2",39,0)
 S DATA01=$P(DATA,U) D PARAMS^MAGJLS2B(DATA01)
"RTN","MAGJLS2",40,0)
 I 'LSTID S MAGGRY=$NA(^TMP($J,"RET")) D  Q
"RTN","MAGJLS2",41,0)
 . ;
"RTN","MAGJLS2",42,0)
 . ; Initialize to the error condition.
"RTN","MAGJLS2",43,0)
 . S @MAGGRY@(0)="0^4~Problem with Exams List Compile--"_DATA_"."
"RTN","MAGJLS2",44,0)
 . ;
"RTN","MAGJLS2",45,0)
 . ;--- next line--hard-coded 99999 value from client and here for logon initial Manager screen (MAG*3.0*101).
"RTN","MAGJLS2",46,0)
 . D:DATA01=99999
"RTN","MAGJLS2",47,0)
 . . S @MAGGRY@(0)="0^1~           * * *  Use PATIENT LOOKUP button, or select Exam List tab of interest.  * * *"
"RTN","MAGJLS2",48,0)
 . ;
"RTN","MAGJLS2",49,0)
 . ;--- next line--hard-coded 99998 value from client and here for VIX EXAMID LOOKUP (MAG*3.0*90).
"RTN","MAGJLS2",50,0)
 . D:DATA01=99998
"RTN","MAGJLS2",51,0)
 . . ;
"RTN","MAGJLS2",52,0)
 . . ;--- Validate additional DATA pieces for this context.
"RTN","MAGJLS2",53,0)
 . . N V,X,XX S V=-1
"RTN","MAGJLS2",54,0)
 . . ;
"RTN","MAGJLS2",55,0)
 . . ;--- Are RADPT, RACNI, and RDFN numbers?
"RTN","MAGJLS2",56,0)
 . . F X=2,4,5 Q:'V  S XX=$P(DATA,U,X) S:XX=""!(XX'?1N.N) V=0
"RTN","MAGJLS2",57,0)
 . . ;
"RTN","MAGJLS2",58,0)
 . . ;--- Is RADTM in FileMan format?
"RTN","MAGJLS2",59,0)
 . . I V<0 S XX=$P(DATA,U,3) S:XX=""!(XX'?7N1"."1.6N) V=0
"RTN","MAGJLS2",60,0)
 . . ;
"RTN","MAGJLS2",61,0)
 . . ;--- Set return array for VIX.
"RTN","MAGJLS2",62,0)
 . . D:V<0
"RTN","MAGJLS2",63,0)
 . . . S @MAGGRY@(0)="1^1~FOR VIX EXAMID LOOKUP"
"RTN","MAGJLS2",64,0)
 . . . S @MAGGRY@(1)="^VIX LOOKUP"
"RTN","MAGJLS2",65,0)
 . . . S @MAGGRY@(2)="^EXAMID^|"_$P(DATA,U,2,5)_"||"
"RTN","MAGJLS2",66,0)
 I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~VistARad Patch 32 is no longer supported.  Contact Imaging support for the current version of the VistARad client software." Q  ; <*>
"RTN","MAGJLS2",67,0)
 I BKGND,LSTREQ="U" D BKREQU Q  ; UNREAD in bkgnd
"RTN","MAGJLS2",68,0)
 I BKGND,LSTREQ="R" D BKREQR Q  ; RECENT in bkgnd
"RTN","MAGJLS2",69,0)
 I BKGND,LSTREQ="A" D BKREQA(DATA) Q  ; ALL Active Exams
"RTN","MAGJLS2",70,0)
 ;
"RTN","MAGJLS2",71,0)
 ;--- Process other list types, or bkgnd compile not enabled.
"RTN","MAGJLS2",72,0)
 D FOREGND
"RTN","MAGJLS2",73,0)
ACTIVEZ Q
"RTN","MAGJLS2",74,0)
 ;
"RTN","MAGJLS2",75,0)
FOREGND ; compile in foregnd
"RTN","MAGJLS2",76,0)
 I LSTREQ="H" G HISTORY
"RTN","MAGJLS2",77,0)
 D BLDACTV^MAGJLS3(.MAGLST,LSTPARAM)
"RTN","MAGJLS2",78,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST) K @MAGLST
"RTN","MAGJLS2",79,0)
 Q
"RTN","MAGJLS2",80,0)
 ;
"RTN","MAGJLS2",81,0)
HISTORY ; compile History list
"RTN","MAGJLS2",82,0)
 D BLDACTV^MAGJLS3(.MAGLST,LSTPARAM)
"RTN","MAGJLS2",83,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST)
"RTN","MAGJLS2",84,0)
 ; copy data from above compile into History file
"RTN","MAGJLS2",85,0)
 N EXID,HISTIEN,IEN,REC1,REC2,CDAT,TMP,PC
"RTN","MAGJLS2",86,0)
 I +$G(@MAGLST@(0,1)) D
"RTN","MAGJLS2",87,0)
 . S IEN="" F  S IEN=$O(@MAGLST@(IEN)) Q:(IEN="")  S REC1=^(IEN,1),REC2=^(2) D
"RTN","MAGJLS2",88,0)
 . . I IEN=0 S ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),IEN,1)=REC1,^(2)=REC2 Q  ; header string
"RTN","MAGJLS2",89,0)
 . . S HISTIEN=+$P(REC2,"|",3) Q:'HISTIEN  S EXID=$P(REC2,"|",2)
"RTN","MAGJLS2",90,0)
 . . S X=$G(^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),0,"ADD",HISTIEN))
"RTN","MAGJLS2",91,0)
 . . I X]"" D
"RTN","MAGJLS2",92,0)
 . . . I EXID'=$P(X,"|",2) Q
"RTN","MAGJLS2",93,0)
 . . . ; copy Client data into list column fields 12-15 in node 2
"RTN","MAGJLS2",94,0)
 . . . S CDAT=$P(REC2,"|",3),TMP=$P(REC2,"|")
"RTN","MAGJLS2",95,0)
 . . . F I=1:1:4 S PC=11+I,$P(TMP,U,PC)=$P(CDAT,U,I)
"RTN","MAGJLS2",96,0)
 . . . S TMP=TMP_U ; pad extra nil piece
"RTN","MAGJLS2",97,0)
 . . . S $P(REC2,"|")=TMP,$P(REC2,"|",3)=HISTIEN ; preserve IEN in PP3
"RTN","MAGJLS2",98,0)
 . . . S ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),HISTIEN,1)=REC1,^(2)=REC2
"RTN","MAGJLS2",99,0)
 . . . K ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),0,"ADD",HISTIEN) ; Kill input node
"RTN","MAGJLS2",100,0)
 K @MAGLST
"RTN","MAGJLS2",101,0)
 Q
"RTN","MAGJLS2",102,0)
 ;
"RTN","MAGJLS2",103,0)
BKREQU ; UNREAD exams from bkgnd
"RTN","MAGJLS2",104,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):0
"RTN","MAGJLS2",105,0)
 E  D BKOUT("UNREAD") Q  ; bkgnd process IS running
"RTN","MAGJLS2",106,0)
 ; NOT running, so start it!
"RTN","MAGJLS2",107,0)
 ; 2nd errtrap is to deal with locks if error occurs
"RTN","MAGJLS2",108,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR1^MAGJLS2"
"RTN","MAGJLS2",109,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","MAGJLS2",110,0)
 S ZTRTN="BKGND^MAGJLS2",ZTDESC="IMAGING VistARad UNREAD List Compile"
"RTN","MAGJLS2",111,0)
 S ZTDTH=$H,ZTIO="" D ^%ZTLOAD
"RTN","MAGJLS2",112,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=$S(+X:+X,1:+$P(X,U,3))
"RTN","MAGJLS2",113,0)
 ; CURLIST sub's check for excessive time n/a here
"RTN","MAGJLS2",114,0)
 I LSTAGE>(DELTA+300)  S BKGPROC=2 D  ; Foregnd compile if need fresh list
"RTN","MAGJLS2",115,0)
 . D LSTCOMP(.COMPFAIL) K BKGPROC
"RTN","MAGJLS2",116,0)
 . S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",117,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",118,0)
 I +$G(COMPFAIL)!'LSTNUM S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Unable to Compile Unread Exams list ("_$S(+LSTNUM:"COMPFAIL",1:"LSTNUM")_" in MAGJLS2)."
"RTN","MAGJLS2",119,0)
 E  D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE)
"RTN","MAGJLS2",120,0)
 K LSTAGE
"RTN","MAGJLS2",121,0)
 Q
"RTN","MAGJLS2",122,0)
 ;
"RTN","MAGJLS2",123,0)
BKREQR ; Recent Exams from bkgnd
"RTN","MAGJLS2",124,0)
 D BKOUT("RECENT")
"RTN","MAGJLS2",125,0)
 Q
"RTN","MAGJLS2",126,0)
 ;
"RTN","MAGJLS2",127,0)
BKOUT(LSTNM) ; output list from the bkgnd process
"RTN","MAGJLS2",128,0)
 N MSG S MSG=""
"RTN","MAGJLS2",129,0)
 ; if CURLIST returns a value in Piece 3, then the Compile is probably not current
"RTN","MAGJLS2",130,0)
 ; so get a message out with the list
"RTN","MAGJLS2",131,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",132,0)
 I 'LSTNUM D
"RTN","MAGJLS2",133,0)
 . I +$P(X,U,3) S LSTNUM=+$P(X,U,3) S MSG="Compile program for "_LSTNM_" may not be current (age="_LSTAGE_" for "_LSTNAM_")"_$S(LSTNAM["9992":"--May need to Schedule RECENT List Compile in TaskMan.",1:"")
"RTN","MAGJLS2",134,0)
 I LSTNUM D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE,MSG)
"RTN","MAGJLS2",135,0)
 E  I 'LSTNUM S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with "_LSTNM_" List Compile program (age="_LSTAGE_" for "_LSTNAM_")"_$S(LSTNAM["9992":"--May need to Schedule RECENT List Compile in TaskMan.",1:"")
"RTN","MAGJLS2",136,0)
 K LSTAGE
"RTN","MAGJLS2",137,0)
 Q
"RTN","MAGJLS2",138,0)
 ;
"RTN","MAGJLS2",139,0)
BKREQA(DATA) ; ALL Active from Bkgnd
"RTN","MAGJLS2",140,0)
 ; Copy compiles of Unread & Recent to a scratch global, & call lstout
"RTN","MAGJLS2",141,0)
 N ALLGO,CNT,GETLST,ICNT,REPLY,MSG
"RTN","MAGJLS2",142,0)
 S ALLGO=1,CNT=0,MSG=""
"RTN","MAGJLS2",143,0)
 F GETLST=9991,9992 D  I 'ALLGO S REPLY="Component List "_GETLST_ALLGO Q
"RTN","MAGJLS2",144,0)
 . D PARAMS^MAGJLS2B(GETLST) I 'LSTID S ALLGO=" not properly defined."  Q
"RTN","MAGJLS2",145,0)
 . S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",146,0)
 . I 'LSTNUM D
"RTN","MAGJLS2",147,0)
 . . I +$P(X,U,3) S LSTNUM=+$P(X,U,3)
"RTN","MAGJLS2",148,0)
 . . I LSTNUM S MSG=MSG_$S(MSG="":"Compile program for ",1:"; ")_"component "_LSTNAM_" may not be current (age="_LSTAGE_" for "_GETLST_")"
"RTN","MAGJLS2",149,0)
 . I 'LSTNUM S ALLGO=" needs more time to compile." Q
"RTN","MAGJLS2",150,0)
 . F ICNT=1:1:$G(^XTMP("MAGJ2",LSTNAM,LSTNUM,0,1)) S X=^XTMP("MAGJ2",LSTNAM,LSTNUM,ICNT,1),Y=^(2),CNT=CNT+1,^TMP($J,"MAGJ",CNT,1)=X,^(2)=Y
"RTN","MAGJLS2",151,0)
 I ALLGO D
"RTN","MAGJLS2",152,0)
 . S ^TMP($J,"MAGJ",0,1)=CNT_U_"1~ALL Active Exams",^(2)=""
"RTN","MAGJLS2",153,0)
 . D PARAMS^MAGJLS2B($P(DATA,U))
"RTN","MAGJLS2",154,0)
 . D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^TMP($J,"MAGJ")),,MSG)
"RTN","MAGJLS2",155,0)
 I 'ALLGO S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with ALL Exams List Compile "_DATA_". "_REPLY
"RTN","MAGJLS2",156,0)
 K LSTAGE
"RTN","MAGJLS2",157,0)
 Q
"RTN","MAGJLS2",158,0)
 ;
"RTN","MAGJLS2",159,0)
BKGND ; EP for background compile of UNREAD exams
"RTN","MAGJLS2",160,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):1200 ; allow fgnd job to finish compile
"RTN","MAGJLS2",161,0)
 E  Q  ; I must already be running!
"RTN","MAGJLS2",162,0)
 N BKGLSTID S BKGLSTID=9991 G BKGNDA
"RTN","MAGJLS2",163,0)
 Q
"RTN","MAGJLS2",164,0)
BKGND2 ; EP--bkgnd compile RECENT
"RTN","MAGJLS2",165,0)
 N BKGLSTID S BKGLSTID=9992 G BKGNDA
"RTN","MAGJLS2",166,0)
 Q
"RTN","MAGJLS2",167,0)
BKGNDA S BKGPROC=1,U="^"
"RTN","MAGJLS2",168,0)
 N $ETRAP,$ESTACK S $ETRAP="D BKGERR^MAGJLS2"
"RTN","MAGJLS2",169,0)
 D MAGJOBNC^MAGJUTL3
"RTN","MAGJLS2",170,0)
 D PARAMS^MAGJLS2B(BKGLSTID)
"RTN","MAGJLS2",171,0)
BKLOOP ; Loop & compile "master" UNREAD List only
"RTN","MAGJLS2",172,0)
 S BKLOOP=$G(BKLOOP)+1
"RTN","MAGJLS2",173,0)
 I BKLOOP>1 D PARAMS^MAGJLS2B(9991)
"RTN","MAGJLS2",174,0)
 I 'LSTID D  G BKGNDZ
"RTN","MAGJLS2",175,0)
 . S X="0^4~Problem with BACKGROUND Compile of Exams List"
"RTN","MAGJLS2",176,0)
 . F I=1,2 K ^XTMP("MAGJ2",LSTNAM,I)
"RTN","MAGJLS2",177,0)
 . F I=1,2 S ^XTMP("MAGJ2",LSTNAM,I,0,1)=X,^(2)=""  ; get msg to WS user
"RTN","MAGJLS2",178,0)
 I 'BKGND G BKGNDZ  ; need this to cover for excessive time to compile
"RTN","MAGJLS2",179,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",180,0)
 I 'LSTNUM,+$P(X,U,3) S LSTNUM=+$P(X,U,3)
"RTN","MAGJLS2",181,0)
 ; above prevents compiling over top of the active list LSTNUM=1 if compiles are excessively long
"RTN","MAGJLS2",182,0)
 I LSTREQ="U",(LSTAGE<DELTA) D  I 'BKGND G BKGNDZ ;bkgnd compile off?
"RTN","MAGJLS2",183,0)
 . N ITEST,TEST
"RTN","MAGJLS2",184,0)
 . S TEST=(DELTA-LSTAGE)\5
"RTN","MAGJLS2",185,0)
 . ; while waiting, periodic chk for stop conditions
"RTN","MAGJLS2",186,0)
 . F ITEST=1:1:TEST H 5 D  Q:'BKGND
"RTN","MAGJLS2",187,0)
 .. S BKGND=+$P($G(^MAG(2006.69,1,0)),U,8) Q:'BKGND
"RTN","MAGJLS2",188,0)
 .. I $D(ZTQUEUED),$$S^%ZTLOAD S BKGND=0 ; Exit bkgnd via TaskMan Req
"RTN","MAGJLS2",189,0)
 . H 3
"RTN","MAGJLS2",190,0)
 D LSTCOMP()
"RTN","MAGJLS2",191,0)
 I LSTREQ="R" D NEWINT
"RTN","MAGJLS2",192,0)
 I LSTREQ="U" D UPDR^MAGJLS2B G BKLOOP  ;UNREAD loops; RECENT uses TaskMan
"RTN","MAGJLS2",193,0)
BKGNDZ I LSTREQ="U" L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",194,0)
 N ZTREQ S ZTREQ="@"  ;  clean up task entry
"RTN","MAGJLS2",195,0)
 K BKLOOP,DELTA,LSTAGE
"RTN","MAGJLS2",196,0)
 Q  ; Exit bkgnd
"RTN","MAGJLS2",197,0)
 ;
"RTN","MAGJLS2",198,0)
NEWINT ; Add exams newly Interp since Recent Compile started to Recent List
"RTN","MAGJLS2",199,0)
 ; 1st, get list of candidates:
"RTN","MAGJLS2",200,0)
 N INDX L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",201,0)
 E  Q
"RTN","MAGJLS2",202,0)
 S INDX=+$G(^TMP($J,"NEWINT")) ; counter when Recent Compile started
"RTN","MAGJLS2",203,0)
 I INDX S INDX=INDX-1 F  S INDX=$O(^XTMP("MAGJ2","RECENT",INDX)) Q:'INDX  S X=^(INDX) I X S ^TMP($J,"NEWINT",0,INDX)=X
"RTN","MAGJLS2",204,0)
 K ^XTMP("MAGJ2","RECENT") S ^("RECENT",0)=0
"RTN","MAGJLS2",205,0)
 L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",206,0)
 ;if not in Recent Compile, add to index
"RTN","MAGJLS2",207,0)
 S INDX=""
"RTN","MAGJLS2",208,0)
 F  S INDX=$O(^TMP($J,"NEWINT",0,INDX)) Q:'INDX  S X=^(INDX) D
"RTN","MAGJLS2",209,0)
 . I $D(^TMP($J,"NEWINT",$P(X,U,1,3))) Q  ; already there
"RTN","MAGJLS2",210,0)
 . L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",211,0)
 . E  Q
"RTN","MAGJLS2",212,0)
 . S I=+$G(^XTMP("MAGJ2","RECENT",0))+1,$P(^(0),U)=I,^(I)=X ;add 
"RTN","MAGJLS2",213,0)
 . L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",214,0)
 K ^TMP($J,"NEWINT")
"RTN","MAGJLS2",215,0)
 Q
"RTN","MAGJLS2",216,0)
 ;
"RTN","MAGJLS2",217,0)
LSTCOMP(COMPFAIL) ; Compile new list; subrtn used by Active and Bkgnd tags
"RTN","MAGJLS2",218,0)
 S COMPFAIL=0 ; Return T/F for "Executed a List Compile?"
"RTN","MAGJLS2",219,0)
 L +^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE"):60
"RTN","MAGJLS2",220,0)
 E  S COMPFAIL=1 G LSTCOMZ
"RTN","MAGJLS2",221,0)
 ;
"RTN","MAGJLS2",222,0)
 N COMTIM,NEWLIST,TS
"RTN","MAGJLS2",223,0)
 S NEWLIST=$S(LSTNUM=1:2,1:1) ; toggle node to use
"RTN","MAGJLS2",224,0)
 S TS="" F I=2,0 S TS=TS_$S(TS="":"",1:U)_$$HTFM^XLFDT($H+I,0)
"RTN","MAGJLS2",225,0)
 S ^XTMP("MAGJ2",0)=TS_U_"VistARad List Compile"
"RTN","MAGJLS2",226,0)
 S ^XTMP("MAGJ2",0,LSTNAM,NEWLIST)=$H
"RTN","MAGJLS2",227,0)
 D BLDACTV^MAGJLS3(.MAGGRY,LSTPARAM,$NA(^XTMP("MAGJ2",LSTNAM,NEWLIST)))
"RTN","MAGJLS2",228,0)
 S COMTIM=$$DELTA($P(^XTMP("MAGJ2",0,LSTNAM,NEWLIST),U))
"RTN","MAGJLS2",229,0)
 S ^XTMP("MAGJ2",LSTNAM,NEWLIST)=$H_U_$J_U_COMTIM
"RTN","MAGJLS2",230,0)
 S ^XTMP("MAGJ2","BKGND",LSTNAM,0)=NEWLIST_U_$H
"RTN","MAGJLS2",231,0)
 I $G(^XTMP("MAGJ2",0,"TIME")) D
"RTN","MAGJLS2",232,0)
 . S T1=$P($H,",",2)/3600,T2=$E(100+(T1\1),2,3),T=T2_":"_$E(100+(T1-T2*60),2,3)
"RTN","MAGJLS2",233,0)
 . S ^XTMP("MAGJ2",0,"TIME",LSTNAM,+$H,T)=COMTIM K T,T1,T2
"RTN","MAGJLS2",234,0)
LSTCOMZ L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",235,0)
 Q  ;
"RTN","MAGJLS2",236,0)
CURLIST(LSTNAM,WAIT) ; return cur. list & age in secs
"RTN","MAGJLS2",237,0)
 ;  RET = Current_List_Num ^ age ^ Problem_Current_List_Num
"RTN","MAGJLS2",238,0)
 ;    Current_List_Num -- Nil means brand new; value means this is most current
"RTN","MAGJLS2",239,0)
 ;      piece 3 populated if excessive time has elapsed, indicating potential problem
"RTN","MAGJLS2",240,0)
 S WAIT=+$G(WAIT)
"RTN","MAGJLS2",241,0)
 N X,RET,AGE,TRY,START,EXTRATIM
"RTN","MAGJLS2",242,0)
 S TRY=0,START=$H,EXTRATIM=$S(LSTREQ="U":600,1:1800)
"RTN","MAGJLS2",243,0)
 S X=$G(^XTMP("MAGJ2","BKGND",LSTNAM,0))  ; Cur # ^ $H created
"RTN","MAGJLS2",244,0)
 I X="" S RET="^86400^0" G CURLISZ  ; this lstnam not yet compiled!
"RTN","MAGJLS2",245,0)
 S AGE=$$DELTA($P(X,U,2)),RET=$P(X,U)_U_AGE
"RTN","MAGJLS2",246,0)
 I AGE>(DELTA+EXTRATIM) S X=$P(RET,U),$P(RET,U,3)=X,$P(RET,U)=""  ; last compile was "long" ago; return indicator of this
"RTN","MAGJLS2",247,0)
CURLISZ Q RET
"RTN","MAGJLS2",248,0)
 ;
"RTN","MAGJLS2",249,0)
DELTA(X,Y) ; calc # secs bet 2 $h values; dflt 2nd value = now
"RTN","MAGJLS2",250,0)
 ; useful limit is one day
"RTN","MAGJLS2",251,0)
 I $G(Y)="" S Y=$H
"RTN","MAGJLS2",252,0)
 I +Y=+X
"RTN","MAGJLS2",253,0)
 E  D
"RTN","MAGJLS2",254,0)
 . I Y-X=1 S $P(Y,",",2)=86400+$P(Y,",",2)  ; midnight boundary
"RTN","MAGJLS2",255,0)
 . E  S $P(X,",",2)=0,$P(Y,",",2)=86400  ; > one day
"RTN","MAGJLS2",256,0)
 Q ($P(Y,",",2)-$P(X,",",2))
"RTN","MAGJLS2",257,0)
 ;
"RTN","MAGJLS2",258,0)
END ;
"RTN","MAGJLS2B")
0^3^B81043388
"RTN","MAGJLS2B",1,0)
MAGJLS2B ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  9:59 AM
"RTN","MAGJLS2B",2,0)
 ;;3.0;IMAGING;**16,22,18,76,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJLS2B",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS2B",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2B",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2B",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2B",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2B",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2B",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2B",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2B",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2B",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2B",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2B",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2B",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",17,0)
 ;;
"RTN","MAGJLS2B",18,0)
 Q
"RTN","MAGJLS2B",19,0)
 ;
"RTN","MAGJLS2B",20,0)
PARAMS(X) ; Init some vars used for Exam Lists
"RTN","MAGJLS2B",21,0)
 N LASTEDIT
"RTN","MAGJLS2B",22,0)
 S LSTID=+$O(^MAG(2006.631,"C",X,""))
"RTN","MAGJLS2B",23,0)
 I 'LSTID S LSTID="Invalid List ID" Q  ;
"RTN","MAGJLS2B",24,0)
 S X=^MAG(2006.631,LSTID,0)
"RTN","MAGJLS2B",25,0)
 I '$P(X,U,6) S LSTID="LIST NOT ENABLED" Q  ;
"RTN","MAGJLS2B",26,0)
 S LSTTL=$P(X,U),LSTREQ=$P(X,U,3),LSTPARAM=LSTREQ_U_$P(X,U,4),LASTEDIT=$P(X,U,5)
"RTN","MAGJLS2B",27,0)
 S LSTTL=$S(LSTREQ="U":"UNREAD",LSTREQ="R":"RECENT",LSTREQ="A":"ACTIVE",LSTREQ="P":"PENDING",LSTREQ="N":"NEWLY INTERP",LSTREQ="H":"HISTORY",1:"")_" EXAMS: "_LSTTL
"RTN","MAGJLS2B",28,0)
 I $P(LSTPARAM,U,2)="" S $P(LSTPARAM,U,2)="ALL" ; dflt All ImagingTypes
"RTN","MAGJLS2B",29,0)
 S X=$G(^MAG(2006.69,1,0)),BKGND=+$P(X,U,8),DELTA=+$P(X,U,$S(LSTREQ="U":9,1:13))*60
"RTN","MAGJLS2B",30,0)
 I BKGND,'DELTA S DELTA=360 ;dflt Unread List compile cycle time secs
"RTN","MAGJLS2B",31,0)
 S LSTNAM="LS"_LSTID
"RTN","MAGJLS2B",32,0)
 I BKGND S LSTNAM=$S(LSTREQ="U":"LS9991",LSTREQ="R":"LS9992",LSTREQ="N":"LS9995",LSTREQ="H":"LS9996",1:LSTNAM) ; hard-code for "Master" list Bkgnd compile
"RTN","MAGJLS2B",33,0)
 Q
"RTN","MAGJLS2B",34,0)
 ;
"RTN","MAGJLS2B",35,0)
SETVARS(LSTID) ;output control variables
"RTN","MAGJLS2B",36,0)
 D LSTVAR(LSTID),SRTVAR(LSTID),SELVAR(LSTID)
"RTN","MAGJLS2B",37,0)
 Q
"RTN","MAGJLS2B",38,0)
 ;
"RTN","MAGJLS2B",39,0)
LSTVAR(LSTID) ; build output columns string
"RTN","MAGJLS2B",40,0)
 S MDLVAR=^MAG(2006.631,LSTID,"DEF",1),LSTHDR=^(.5)
"RTN","MAGJLS2B",41,0)
 N I,XX,SC,XOUT,XOUT2
"RTN","MAGJLS2B",42,0)
 S SC=";",XOUT="",XOUT2=""
"RTN","MAGJLS2B",43,0)
 F I=1:1:$L(MDLVAR,U) S XX=$P(MDLVAR,U,I) D
"RTN","MAGJLS2B",44,0)
 . I +XX=12 I '$G(SNDREMOT) Q  ; exclude RC ind
"RTN","MAGJLS2B",45,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",46,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",47,0)
 . S XOUT2=XOUT2_$S(XOUT2="":"",1:U)_$P(LSTHDR,U,I)
"RTN","MAGJLS2B",48,0)
 S MDLVAR=XOUT,LSTHDR=XOUT2
"RTN","MAGJLS2B",49,0)
 Q
"RTN","MAGJLS2B",50,0)
SRTVAR(LSTID) ; build sort-vars string in SORTSS
"RTN","MAGJLS2B",51,0)
 ; indirection used to ref string at list output (see LSTOUT)
"RTN","MAGJLS2B",52,0)
 S MDSVAR=^MAG(2006.631,LSTID,"DEF",2)
"RTN","MAGJLS2B",53,0)
 N I,XX,XOUT,HAVEONE
"RTN","MAGJLS2B",54,0)
 S SORTSS="",XOUT="",HAVEONE=0
"RTN","MAGJLS2B",55,0)
 F I=1:1:$L(MDSVAR,U) S XX=$P(MDSVAR,U,I) D
"RTN","MAGJLS2B",56,0)
 . I +XX=12 Q:'$G(SNDREMOT)   ; exclude RC ind
"RTN","MAGJLS2B",57,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",58,0)
 . I 'HAVEONE S HAVEONE=(+XX=1)  ; 1 = Case #
"RTN","MAGJLS2B",59,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",60,0)
 . S XX=$S(XX?1N.N1"-":"-",1:"")_"MD("_+XX_")"
"RTN","MAGJLS2B",61,0)
 . S SORTSS=SORTSS_","_XX
"RTN","MAGJLS2B",62,0)
 I 'HAVEONE S SORTSS=SORTSS_",MD(1)",XOUT=XOUT_U_1  ; force unique entry each exam
"RTN","MAGJLS2B",63,0)
 I $E(SORTSS)="," S SORTSS=$E(SORTSS,2,999)
"RTN","MAGJLS2B",64,0)
 S MDSVAR=XOUT
"RTN","MAGJLS2B",65,0)
 Q
"RTN","MAGJLS2B",66,0)
 ;
"RTN","MAGJLS2B",67,0)
SELVAR(LSTID) ; build selection logic executes in DIS array
"RTN","MAGJLS2B",68,0)
 N CX,DC,DCX,DL,DLX,EXP,I,IDL,SELVAR,SELVAR2,SS
"RTN","MAGJLS2B",69,0)
 S SS=0 F  S SS=$O(^MAG(2006.631,LSTID,"DEF",3,SS)) Q:'SS  S DC(SS)=^(SS)
"RTN","MAGJLS2B",70,0)
 S SS=0 F I=1:1 S SS=$O(^MAG(2006.631,LSTID,"DEF",4,SS)) Q:'SS  S DL(I)=^(SS)
"RTN","MAGJLS2B",71,0)
 ;  DL(5)="^2^3'^" <DLX     CX=3'    DC(2)="1^>44" <DCX
"RTN","MAGJLS2B",72,0)
 K DIS,MDCVAR S DIS(0)=0
"RTN","MAGJLS2B",73,0)
 F IDL=1:1 S DLX=$G(DL(IDL)) Q:DLX=""  S DIS(0)=DIS(0)+1,DIS(DIS(0))="" D
"RTN","MAGJLS2B",74,0)
 . F I=2:1:$L(DLX,U)-1 S CX=$P(DLX,U,I) S DCX=DC(+CX) D
"RTN","MAGJLS2B",75,0)
 . . S EXP="(MD("_+DCX_")"_$P(DCX,U,2)_")"
"RTN","MAGJLS2B",76,0)
 . . S EXP="I "_$S(CX["'":"'",1:"")_EXP
"RTN","MAGJLS2B",77,0)
 . . S DIS(DIS(0))=DIS(DIS(0))_" "_EXP
"RTN","MAGJLS2B",78,0)
 . . S MDCVAR(+DCX)=""
"RTN","MAGJLS2B",79,0)
 Q
"RTN","MAGJLS2B",80,0)
 ;
"RTN","MAGJLS2B",81,0)
CHKLOCK(RARPT,DAYCASE) ; return ini of locking user & truth flag for locking user = logon user
"RTN","MAGJLS2B",82,0)
 N RESULT,WHO,MYLOCK,X,XX
"RTN","MAGJLS2B",83,0)
 S (MYLOCK,WHO)=""
"RTN","MAGJLS2B",84,0)
 I RARPT,(DAYCASE]"") D
"RTN","MAGJLS2B",85,0)
 . I $D(^XTMP("MAGJ","LOCK",RARPT)) D
"RTN","MAGJLS2B",86,0)
 . . D LOCKACT^MAGJEX1A(RARPT,DAYCASE,100,.RESULT)
"RTN","MAGJLS2B",87,0)
 . . I $D(RESULT)>1 D
"RTN","MAGJLS2B",88,0)
 . . . S X=RESULT(1),WHO=$P(X,U,5)
"RTN","MAGJLS2B",89,0)
 . . . I WHO]"" S MYLOCK=+X
"RTN","MAGJLS2B",90,0)
 . . . E  D
"RTN","MAGJLS2B",91,0)
 . . . . S X=RESULT(2),WHO=$P(X,U,5)
"RTN","MAGJLS2B",92,0)
 . . . . I WHO]"" S WHO=WHO_":R",MYLOCK=+X I MYLOCK S MYLOCK=2
"RTN","MAGJLS2B",93,0)
 S XX=WHO_U_MYLOCK
"RTN","MAGJLS2B",94,0)
 Q:$Q XX Q
"RTN","MAGJLS2B",95,0)
 ;
"RTN","MAGJLS2B",96,0)
SHOWPLAC(X) ; return list of places to show: all defined places NOT equal to user's logon place
"RTN","MAGJLS2B",97,0)
 N IEN,SHOWPLAC S SHOWPLAC=""
"RTN","MAGJLS2B",98,0)
 S IEN=0 F  S IEN=$O(^MAG(2006.1,IEN)) Q:'IEN  I IEN'=+MAGJOB("SITEP") S X=$P(^(IEN,0),U,9) I X]"" S SHOWPLAC=SHOWPLAC_","_X
"RTN","MAGJLS2B",99,0)
 I SHOWPLAC]"" S SHOWPLAC=1_U_SHOWPLAC_"," ; 1 for true
"RTN","MAGJLS2B",100,0)
 Q SHOWPLAC
"RTN","MAGJLS2B",101,0)
 ;
"RTN","MAGJLS2B",102,0)
LSTOUT(MAGGRY,LSTID,MAGLST,LSTAGE,WRNMSG) ; Build output list, w/ sort & selection
"RTN","MAGJLS2B",103,0)
 ;  Input: LSTID=List def'n
"RTN","MAGJLS2B",104,0)
 ;         MAGLST=Indirect global ref for input records; all reads use subscript indirection
"RTN","MAGJLS2B",105,0)
 ;       the nodes in @MAGLST contain:
"RTN","MAGJLS2B",106,0)
 ;  
"RTN","MAGJLS2B",107,0)
 ;  Node 1 corresponds to IENs 1:17 from Data Elements dic:
"RTN","MAGJLS2B",108,0)
 ;     Acn# ^ Ex LOCK ^ PtName ^ Pt_ID ^ Priority ^ Proc ^ Img Date/Time ^ Status ^ # Images ^ Online?
"RTN","MAGJLS2B",109,0)
 ;     Img Loc'n ^ Remote Ind. ^ Images Exist? ^ Img Date/Time-sortable ^ Mdl ^ Status/Internal ^ ImgTypABB
"RTN","MAGJLS2B",110,0)
 ;  Node 2-- IEN's 18:28 from Data Elements dic:
"RTN","MAGJLS2B",111,0)
 ;     REQLOCAbb ^ REQLOCNm ^ Interp Rad'ists ^ Last4 SSN ^ Division ^ Site ^ Rist Is Me? ^  ProcMod ^ REQLOCTyp ^ CPT
"RTN","MAGJLS2B",112,0)
 ;     WARD
"RTN","MAGJLS2B",113,0)
 ;   Node 2 then appends 3 pipe-delim pieces that are passed through from list compiler (See svmag2a^magjls3)
"RTN","MAGJLS2B",114,0)
 ;
"RTN","MAGJLS2B",115,0)
 ;    LSTAGE=optional List age from last compile, in seconds
"RTN","MAGJLS2B",116,0)
 ;    WRNMSG=optional message to append to list title, to warn of possible compile problems
"RTN","MAGJLS2B",117,0)
 ; Output: MAGGRY=Indirect ref to output file
"RTN","MAGJLS2B",118,0)
 ; 
"RTN","MAGJLS2B",119,0)
 N DIS,MDCVAR,SNDREMOT,ILST,IMD,MAGRACNT
"RTN","MAGJLS2B",120,0)
 N RARPT,RAST,RADFN,RACNI,RADTI,T,WHOLOCK,XX,MYLOCK,DAYCASE,MODALITY
"RTN","MAGJLS2B",121,0)
 N OUT,QX,SORT,SORTSS,LSTHDR,MD,MDLVAR,MDSVAR,REMONLY,REMOTCAS
"RTN","MAGJLS2B",122,0)
 N SHOWPLAC,SORTLEN,STATPRIORITY
"RTN","MAGJLS2B",123,0)
 S LSTAGE=$G(LSTAGE),WRNMSG=$G(WRNMSG)
"RTN","MAGJLS2B",124,0)
 S SHOWPLAC=$$SHOWPLAC("") ; Show any Place (Site Code) that is NOT the Login Place
"RTN","MAGJLS2B",125,0)
 S REMONLY=0
"RTN","MAGJLS2B",126,0)
 S XX=$G(^MAG(2006.69,1,0)),SNDREMOT=+$P(XX,U,11)
"RTN","MAGJLS2B",127,0)
 I $G(MAGJOB("REMOTE")) D  ; show remote cache only?
"RTN","MAGJLS2B",128,0)
 . I MAGJOB("P32") S REMONLY=+$P(XX,U,10)
"RTN","MAGJLS2B",129,0)
 . E  Q:(LSTREQ="H")  S REMONLY=+$G(MAGJOB("REMOTESCREEN"))  ; Hist list
"RTN","MAGJLS2B",130,0)
 D SETVARS(LSTID)
"RTN","MAGJLS2B",131,0)
 S MAGRACNT=0
"RTN","MAGJLS2B",132,0)
 S SORT="^TMP("_$J_",""MAGJSORT""",SORTLEN=$L(SORT) K ^TMP($J,"MAGJSORT")
"RTN","MAGJLS2B",133,0)
 K ^TMP($J,"RET") S ^TMP($J,"RET",0)="0^4~Getting Exam List"
"RTN","MAGJLS2B",134,0)
 S X=$G(@MAGLST@(0,1)) I +X<1 D  G LSTOUTZ  ; No exams to list!
"RTN","MAGJLS2B",135,0)
 . I X="" S ^TMP($J,"RET",0)="0^4~Problem with Exams List Compile"
"RTN","MAGJLS2B",136,0)
 . E  S ^TMP($J,"RET",0)=X
"RTN","MAGJLS2B",137,0)
 S ILST=0
"RTN","MAGJLS2B",138,0)
 F  S ILST=$O(@MAGLST@(ILST)) Q:'ILST  S XX=^(ILST,1),XX2=^(2) K MD D  ; contents described above
"RTN","MAGJLS2B",139,0)
 . S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")=""
"RTN","MAGJLS2B",140,0)
 . S $P(XX,U,24)=$$RISTISME($P(XX,U,24)) ; calculate value @ list output time
"RTN","MAGJLS2B",141,0)
 . ; Execute Selection logic
"RTN","MAGJLS2B",142,0)
 . S X=0 F  S X=$O(MDCVAR(X)) Q:'X  S MD(X)=$P(XX,U,X) ; load needed data
"RTN","MAGJLS2B",143,0)
 . I 1 F I=1:1:$G(DIS(0)) X DIS(I) I  Q  ; quit if search logic True
"RTN","MAGJLS2B",144,0)
 . E  Q  ; failed selection criteria--skip
"RTN","MAGJLS2B",145,0)
 . S RAST=$P(XX,U,16)
"RTN","MAGJLS2B",146,0)
 . S T=$P(XX2,"|",2),RADFN=$P(T,U),RADTI=$P(T,U,2),RACNI=$P(T,U,3),RARPT=$P(T,U,4)
"RTN","MAGJLS2B",147,0)
 . I LSTREQ="U",'$D(^RADPT("AS",RAST,RADFN,RADTI,RACNI)) Q  ; No longer Unread!
"RTN","MAGJLS2B",148,0)
 . I LSTREQ="U",$G(MAGJOB("CONSOLIDATED")) S RADIV=$P(XX,U,22) I RADIV]"",'$D(MAGJOB("DIVSCRN",RADIV)) Q  ; Screen Unread exams for DIVision
"RTN","MAGJLS2B",149,0)
 . S REMOTCAS=$P(XX,U,12)
"RTN","MAGJLS2B",150,0)
 . I REMONLY,'REMOTCAS Q  ; don't show if not routed
"RTN","MAGJLS2B",151,0)
 . I REMONLY,REMOTCAS D  I 'T Q  ; don't show if not the remote reading site
"RTN","MAGJLS2B",152,0)
 . . F I=1:1:$L(REMOTCAS,",")+1 S T=$P(REMOTCAS,",",I) I T,$D(MAGJOB("LOC",T)) Q
"RTN","MAGJLS2B",153,0)
 . ; set up sort values, creating sort index w/ indirect reference to sort global
"RTN","MAGJLS2B",154,0)
 . F I=1:1:$L(MDSVAR,U) S X=+$P(MDSVAR,U,I) S MD(X)=$P(XX,U,X) I MD(X)="" S MD(X)="~"
"RTN","MAGJLS2B",155,0)
 . I LSTREQ="H" S @(SORT_",ILST,"_SORTSS_")")=ILST_U_RARPT ; P18 adds ILST so History List can allow mult entries of same exam, in fifo order
"RTN","MAGJLS2B",156,0)
 . E  S @(SORT_","_SORTSS_")")=ILST_U_RARPT
"RTN","MAGJLS2B",157,0)
 . S MAGRACNT=MAGRACNT+1
"RTN","MAGJLS2B",158,0)
 I 'MAGRACNT S ^TMP($J,"RET",0)="0^2~No Exams Found"
"RTN","MAGJLS2B",159,0)
 E  D  ; generate output file
"RTN","MAGJLS2B",160,0)
 . S @(SORT_","_-9999999999_")")=0,QX=SORT_")" ; define $Query var.; init beginning w/ dummy entry
"RTN","MAGJLS2B",161,0)
 . ; proceed thru sort index until the string contained in SORT is not present
"RTN","MAGJLS2B",162,0)
 . ; get data w/ indirect refs to the stored data
"RTN","MAGJLS2B",163,0)
 . F ILST=0:1 S QX=$Q(@QX) Q:($E(QX,1,SORTLEN))'=SORT  S XX=@MAGLST@(+(@QX),1),XX2=^(2),OUT="" D
"RTN","MAGJLS2B",164,0)
 . . I 'ILST D  Q       ; Header string
"RTN","MAGJLS2B",165,0)
 . . . S T="" I LSTAGE?1N.N S T=LSTAGE\60 S T=" (List age: "_$S(T:T_" min, ",1:"")_(LSTAGE#60)_" sec)"
"RTN","MAGJLS2B",166,0)
 . . . I WRNMSG]"" S T=T_"  **  "_WRNMSG_"  **"
"RTN","MAGJLS2B",167,0)
 . . . I +$P(XX,U,2)=1 S $P(XX,"~",2)=LSTTL_T  ; List Title
"RTN","MAGJLS2B",168,0)
 . . . S ^TMP($J,"RET",0)=XX
"RTN","MAGJLS2B",169,0)
 . . S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")=""
"RTN","MAGJLS2B",170,0)
 . . S $P(XX,U,24)=$$RISTISME($P(XX,U,24)) ; calculate value @ list output time
"RTN","MAGJLS2B",171,0)
 . . S RARPT=$P(@QX,U,2),DAYCASE=$P(XX,U)
"RTN","MAGJLS2B",172,0)
 . . S T=$$CHKLOCK(RARPT,DAYCASE),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLS2B",173,0)
 . . S $P(XX,U,2)=WHOLOCK
"RTN","MAGJLS2B",174,0)
 . . S MODALITY=$P(XX,U,15),STATPRIORITY=0
"RTN","MAGJLS2B",175,0)
 . . F IMD=1:1:$L(MDLVAR,U) S X=$P(MDLVAR,U,IMD),MD=$P(XX,U,+X) D
"RTN","MAGJLS2B",176,0)
 . . . I +X=12,(MD]""),SNDREMOT D
"RTN","MAGJLS2B",177,0)
 . . . . ; if site routes images, disp Remote Cache ind.
"RTN","MAGJLS2B",178,0)
 . . . . N I,T S T="" F I=1:1:$L(MD,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(MD,",",I),3)),U,5)
"RTN","MAGJLS2B",179,0)
 . . . . S MD=T
"RTN","MAGJLS2B",180,0)
 . . . I +X=23,(MD]""),SHOWPLAC D
"RTN","MAGJLS2B",181,0)
 . . . . I SHOWPLAC'[(","_MD_",") S MD=""  ; Don't show user's local place
"RTN","MAGJLS2B",182,0)
 . . . I +X=22,(MD]""),$G(MAGJOB("CONSOLIDATED")) D
"RTN","MAGJLS2B",183,0)
 . . . . I '$D(MAGJOB("DIVSCRN",MD)) S MD=""  ; Don't show user's local Div
"RTN","MAGJLS2B",184,0)
 . . . I +X=5,(LSTREQ="U"),(MD]""),("1-Stat^2-Urg"[MD) S STATPRIORITY=1 ; Stat or Urgent Unread exam
"RTN","MAGJLS2B",185,0)
 . . . I X[";" S T=+$P(X,";",2) I T S MD=$E(MD,1,T)  ; truncate output col
"RTN","MAGJLS2B",186,0)
 . . . S $P(OUT,U,IMD)=MD
"RTN","MAGJLS2B",187,0)
 . . S $P(OUT,U,IMD+1)="",OUT=U_OUT,OUT=OUT_"|"_$P(XX2,"|",2,9)
"RTN","MAGJLS2B",188,0)
 . . S T=$P(OUT,"|",4) D  S $P(OUT,"|",4)=T
"RTN","MAGJLS2B",189,0)
 . . . I WHOLOCK]"" S $P(T,U,2)=WHOLOCK,$P(T,U,3)=MYLOCK ; pass lock info to Client
"RTN","MAGJLS2B",190,0)
 . . . S $P(T,U,11)=STATPRIORITY
"RTN","MAGJLS2B",191,0)
 . . ; * Note: Keep Pipe piece 4, above, in sync with svmag2a^magjls3 *
"RTN","MAGJLS2B",192,0)
 . . S ^TMP($J,"RET",ILST+1)=OUT
"RTN","MAGJLS2B",193,0)
 . S ^TMP($J,"RET",1)=U_LSTHDR
"RTN","MAGJLS2B",194,0)
 . S $P(^TMP($J,"RET",0),U)=MAGRACNT
"RTN","MAGJLS2B",195,0)
LSTOUTZ K MAGGRY,^TMP($J,"MAGJSORT") S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2B",196,0)
 Q
"RTN","MAGJLS2B",197,0)
 ;
"RTN","MAGJLS2B",198,0)
RISTISME(X) ; calculate truth value for Interpreting Rist = Logon Rist
"RTN","MAGJLS2B",199,0)
 ; input zero to 2 DUZ values Rist1~Rist2
"RTN","MAGJLS2B",200,0)
 ; output Y or N for truth value
"RTN","MAGJLS2B",201,0)
 N Y S Y="N"
"RTN","MAGJLS2B",202,0)
 I X]"" D
"RTN","MAGJLS2B",203,0)
 . N I F I=1,2 I +$P(X,"~",I)=DUZ S Y="Y" Q
"RTN","MAGJLS2B",204,0)
 Q:$Q Y  Q
"RTN","MAGJLS2B",205,0)
 ;
"RTN","MAGJLS2B",206,0)
UPDR ; Add Newly Interp exams to Recent; called from magjls2
"RTN","MAGJLS2B",207,0)
 D PARAMS(9995)
"RTN","MAGJLS2B",208,0)
 I LSTID D
"RTN","MAGJLS2B",209,0)
 . S X=$$CURLIST^MAGJLS2(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2B",210,0)
 . D LSTCOMP^MAGJLS2()
"RTN","MAGJLS2B",211,0)
UPDRZ Q
"RTN","MAGJLS2B",212,0)
 ;
"RTN","MAGJLS2B",213,0)
END ;
"RTN","MAGJLS3")
0^4^B73090068
"RTN","MAGJLS3",1,0)
MAGJLS3 ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  10:00 AM
"RTN","MAGJLS3",2,0)
 ;;3.0;IMAGING;**16,22,18,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJLS3",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS3",17,0)
 ;;
"RTN","MAGJLS3",18,0)
 Q
"RTN","MAGJLS3",19,0)
 ; EPs:
"RTN","MAGJLS3",20,0)
 ; BLDACTV
"RTN","MAGJLS3",21,0)
 ;
"RTN","MAGJLS3",22,0)
BLDACTV(MAGGRY,DATA,MAGLST) ; get subset of Active Exams; called from MAGJLS2
"RTN","MAGJLS3",23,0)
 ;MAGGRY - Indirect Global ref of return array
"RTN","MAGJLS3",24,0)
 ;DATA: Listyp ^ Imaging Types
"RTN","MAGJLS3",25,0)
 ;Listyp = U  -- UNREAD Exams (Status Category=E)
"RTN","MAGJLS3",26,0)
 ;   = R  -- RECENT (Sts Cat's D & T)
"RTN","MAGJLS3",27,0)
 ;   = A  -- ALL Active (Cat's E, D, & T)
"RTN","MAGJLS3",28,0)
 ;   = P  -- PENDING (Cat W)
"RTN","MAGJLS3",29,0)
 ;   = N  -- Newly Interpreted Exams (No Cat.-Internal use only)
"RTN","MAGJLS3",30,0)
 ;ImgTypes = List of Imaging Types to process, or "ALL" for all
"RTN","MAGJLS3",31,0)
 ; MAGLST = $NA ref to return global; references to it use subscript indirection
"RTN","MAGJLS3",32,0)
 ; MAGLST optional: input to specify return global to use
"RTN","MAGJLS3",33,0)
 ; 
"RTN","MAGJLS3",34,0)
 ;* This subrtn can receive U/R/A/P/N (LSTREQ)-- ^_delim list of ImgTypes (IMTYPS)
"RTN","MAGJLS3",35,0)
 N RADFN,RADTI,RACNI,REMX
"RTN","MAGJLS3",36,0)
 N HDR,HDRLST,MAGIMGTY,MAGRACNT,MAGRET,LSTREQ,LISTYP,LISCAT,IMTYPS
"RTN","MAGJLS3",37,0)
 N REPLY,STAT,TYP,SORTMAG,DIQUIET,STATCHK,LASTDT,IMGSONLY,URGORD,REMONLY
"RTN","MAGJLS3",38,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLS3",39,0)
 I $G(MAGLST)="" S MAGLST=$NA(^TMP($J,"MAGJACTIVE")) ; default loc'n if not passed in
"RTN","MAGJLS3",40,0)
 K ^TMP($J,"MAGRAEX"),@MAGLST
"RTN","MAGJLS3",41,0)
 S LSTREQ=$P(DATA,U),IMTYPS=$P(DATA,U,2,99)
"RTN","MAGJLS3",42,0)
 I LSTREQ="U"!(LSTREQ="R")!(LSTREQ="A")!(LSTREQ="P")!(LSTREQ="N")!(LSTREQ="H")
"RTN","MAGJLS3",43,0)
 E  S REPLY="0^4~Invalid Request (List Type="_LSTREQ_")" G BLDACTVZ
"RTN","MAGJLS3",44,0)
 S MAGRACNT=0
"RTN","MAGJLS3",45,0)
 S X=$G(^MAG(2006.69,1,0)),IMGSONLY=+$P(X,U,7),REMX=+$P(X,U,10) ; show only exams w/ images?
"RTN","MAGJLS3",46,0)
 S REMONLY=0
"RTN","MAGJLS3",47,0)
 I $G(MAGJOB("REMOTE")) D  ; ;show remote cache only?
"RTN","MAGJLS3",48,0)
 . Q:(LSTREQ="H")  S REMONLY=+$G(MAGJOB("REMOTESCREEN"))
"RTN","MAGJLS3",49,0)
 S X=$G(^MAG(2006.69,1,1)),URGORD=$P(X,U)
"RTN","MAGJLS3",50,0)
 S:URGORD="" URGORD="S,U,P,R" S URGORD=$TR(URGORD,",") ; "Priority" sort
"RTN","MAGJLS3",51,0)
 S HDR=$S(LSTREQ="U":"UNREAD",LSTREQ="R":"RECENT",LSTREQ="P":"PENDING",LSTREQ="A":"UNREAD and RECENT",LSTREQ="N":"NEWLY INTERP",LSTREQ="H":"HISTORY",1:"")_" Exams"_" for IMAGING TYPES: "
"RTN","MAGJLS3",52,0)
 S LISTYP=$S(LSTREQ="U":"E",LSTREQ="R":"D^T",LSTREQ="A":"E^D^T",LSTREQ="P":"W",LSTREQ="N":"",LSTREQ="H":"",1:"E")
"RTN","MAGJLS3",53,0)
 S REPLY="0^4~Compiling list of Radiology Exams (ACTIVE)."
"RTN","MAGJLS3",54,0)
 I $G(BKGPROC),(LSTREQ="R") K ^TMP($J,"NEWINT") S ^TMP($J,"NEWINT")=+$G(^XTMP("MAGJ2","RECENT",0))
"RTN","MAGJLS3",55,0)
 I LSTREQ="N" D BLDACT2 G BLDACTVZ
"RTN","MAGJLS3",56,0)
 I LSTREQ="H" D HISTBLD^MAGJLS3A G BLDACTVZ
"RTN","MAGJLS3",57,0)
 D BLDACT1
"RTN","MAGJLS3",58,0)
BLDACTVZ ;
"RTN","MAGJLS3",59,0)
 I 'MAGRACNT S:(REPLY["Compiling") REPLY="0^2~No Exams Found"
"RTN","MAGJLS3",60,0)
 E  D
"RTN","MAGJLS3",61,0)
 . I IMTYPS="ALL" S HDR=HDR_" ALL"
"RTN","MAGJLS3",62,0)
 . E  S Y="" F I=0:1 S Y=$O(HDRLST(Y)) Q:Y=""  S HDR=HDR_$S('I:"",1:", ")_Y
"RTN","MAGJLS3",63,0)
 . S REPLY=MAGRACNT_U_"1~"_HDR
"RTN","MAGJLS3",64,0)
 S @MAGLST@(0,1)=REPLY,^(2)=""
"RTN","MAGJLS3",65,0)
 K ^TMP($J,"MAGRAEX"),^("RAE1")
"RTN","MAGJLS3",66,0)
 S MAGGRY=MAGLST
"RTN","MAGJLS3",67,0)
 Q
"RTN","MAGJLS3",68,0)
BLDACT1 ; Compile exams by Status codes
"RTN","MAGJLS3",69,0)
 D BLDSTAT^MAGJLS3A
"RTN","MAGJLS3",70,0)
 F  S LISCAT=$P(LISTYP,U),LISTYP=$P(LISTYP,U,2,9) Q:LISCAT=""  D
"RTN","MAGJLS3",71,0)
 . I IMTYPS="ALL" S TYP="" D  Q
"RTN","MAGJLS3",72,0)
 . . F  S TYP=$O(STAT(LISCAT,TYP)) Q:TYP=""  D IMGTYP(LISCAT,TYP)
"RTN","MAGJLS3",73,0)
 . E  I +IMTYPS D IMGTYLST(LISCAT,IMTYPS) Q
"RTN","MAGJLS3",74,0)
 . E  S REPLY="0^4~Invalid Imaging Type"
"RTN","MAGJLS3",75,0)
 Q
"RTN","MAGJLS3",76,0)
BLDACT2 ; Add recently interpreted exams to the "Recent" compile data
"RTN","MAGJLS3",77,0)
 ; 1st, compile these into their own list
"RTN","MAGJLS3",78,0)
 N CNT,INDX,RAST,STATCHK,RECLIST,REC,X1,X2
"RTN","MAGJLS3",79,0)
 S X=$G(^XTMP("MAGJ2","RECENT",0)),INDX=+$P(X,U,2)
"RTN","MAGJLS3",80,0)
 F  S INDX=$O(^XTMP("MAGJ2","RECENT",INDX)) Q:'INDX  S X=^(INDX) D
"RTN","MAGJLS3",81,0)
 . S RADFN=$P(X,U),RADTI=$P(X,U,2),RACNI=$P(X,U,3),(RAST,STATCHK)=$P(X,U,4)
"RTN","MAGJLS3",82,0)
 . D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJLS3",83,0)
 . I MAGRET D SVMAG2A()
"RTN","MAGJLS3",84,0)
 . S $P(^XTMP("MAGJ2","RECENT",0),U,2)=INDX
"RTN","MAGJLS3",85,0)
 ; copy the above records to the "RECENT" curlist
"RTN","MAGJLS3",86,0)
 S RECLIST=+$$CURLIST^MAGJLS2("LS9992")
"RTN","MAGJLS3",87,0)
 I 'RECLIST S RECLIST=+$G(^XTMP("MAGJ2","BKGND","LS9992",0))
"RTN","MAGJLS3",88,0)
 I 'RECLIST Q  ; Recent list not being compiled--skip it!
"RTN","MAGJLS3",89,0)
 F CNT=1:1:MAGRACNT S X1=@MAGLST@(CNT,1),X2=^(2) D  ; MAGLST described at BLDACTV
"RTN","MAGJLS3",90,0)
 . S REC=^XTMP("MAGJ2","LS9992",RECLIST,0,1)+1
"RTN","MAGJLS3",91,0)
 . S ^XTMP("MAGJ2","LS9992",RECLIST,REC,1)=X1,^(2)=X2
"RTN","MAGJLS3",92,0)
 . S $P(^XTMP("MAGJ2","LS9992",RECLIST,0,1),U)=REC
"RTN","MAGJLS3",93,0)
 Q
"RTN","MAGJLS3",94,0)
 ;
"RTN","MAGJLS3",95,0)
SVMAG2A(PIPE3) ;used by subroutine at tag BLDACTV
"RTN","MAGJLS3",96,0)
 ; load return array @MAGLST@(n, ...
"RTN","MAGJLS3",97,0)
 ; Note: ^TMP("MAGRAEX" is set by the subroutine Getexam2^Magjutl1
"RTN","MAGJLS3",98,0)
 ; PIPE3 optional; contains data that is passed through the system; e.g.
"RTN","MAGJLS3",99,0)
 ;   the HISTORY List receives data from the client which is augmented
"RTN","MAGJLS3",100,0)
 ;   and passed back to the client
"RTN","MAGJLS3",101,0)
 ;Set outside this subrtn:STATCHK,RAST,LSTREQ,REMONLY,BKGPROC,MAGRACNT,MAGLST
"RTN","MAGJLS3",102,0)
 ;
"RTN","MAGJLS3",103,0)
 N MAGDT,SORTDT,IMGCNT,ONL,XX,XX2,Y,RARPT,KEY,RASTCAT,Y2
"RTN","MAGJLS3",104,0)
 N REMOTE,MODALITY,DAYCASE,EXCAT,ORD,URG,URG1,PREOP,LASTSSN,CURPRIO,STATUS
"RTN","MAGJLS3",105,0)
 N REMOTE2,LRFLAG,TECH,REGDT,REGDTSRT,PTID,STATPRIORITY
"RTN","MAGJLS3",106,0)
 S PIPE3=$G(PIPE3,"")
"RTN","MAGJLS3",107,0)
 S URG="",PREOP=""   ; <*> Need below until RAO7PC1A returns URG
"RTN","MAGJLS3",108,0)
 S X=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJLS3",109,0)
 S ORD=$P(X,U,11)
"RTN","MAGJLS3",110,0)
 I ORD S Y=$G(^RAO(75.1,ORD,0)),URG=$P(Y,U,6),PREOP=$P(Y,U,12)
"RTN","MAGJLS3",111,0)
 S XX=$G(^TMP($J,"MAGRAEX",1,1)),XX2=$G(^(2))
"RTN","MAGJLS3",112,0)
 I $G(STATCHK),(STATCHK=$P(XX,U,11))
"RTN","MAGJLS3",113,0)
 E  I LSTREQ="H" S RAST=$P(XX,U,11)
"RTN","MAGJLS3",114,0)
 E  Q       ;  index '= stored status
"RTN","MAGJLS3",115,0)
 S RARPT=$P(XX,U,10),STATPRIORITY="" ; STATPRIORITY always null from the compiler (place-holder only)
"RTN","MAGJLS3",116,0)
 D IMGINFO^MAGJUTL2(RARPT,.Y)
"RTN","MAGJLS3",117,0)
 S IMGCNT=$P(Y,U),ONL=$P(Y,U,2),MAGDT=$P(Y,U,3),REMOTE=$P(Y,U,4),MODALITY=$P(Y,U,5),PLACE=$P(Y,U,6),KEY=$P(Y,U,7)
"RTN","MAGJLS3",118,0)
 S REMOTE2=REMOTE
"RTN","MAGJLS3",119,0)
 I IMGSONLY,'IMGCNT Q  ;only list exams w/ imgs
"RTN","MAGJLS3",120,0)
 I REMONLY,'REMOTE,'$G(BKGPROC) Q  ; only list remote exams
"RTN","MAGJLS3",121,0)
 S:PLACE PLACE=$P($G(^MAG(2006.1,PLACE,0)),U,9)
"RTN","MAGJLS3",122,0)
 I MAGDT="" S MAGDT=$P(XX,U,7)
"RTN","MAGJLS3",123,0)
 S SORTDT=MAGDT
"RTN","MAGJLS3",124,0)
 S MAGDT=$$FMTE^XLFDT(MAGDT,"5Z")
"RTN","MAGJLS3",125,0)
 S REGDTSRT=$P(XX,U,7),REGDT=$$FMTE^XLFDT(REGDTSRT,"5Z")
"RTN","MAGJLS3",126,0)
 ; XX 1 RADFN   RADTI    RACNI   RANME    RASSN  <-- from GETEXAM
"RTN","MAGJLS3",127,0)
 ;    6 RADATE  RADTE    RACN    RAPRC     RARPT
"RTN","MAGJLS3",128,0)
 ;   11 RAST    DAYCASE  RAELOC   RASTP     RASTORD
"RTN","MAGJLS3",129,0)
 ;   16 RADTPRT RACPT    IMTYPABB
"RTN","MAGJLS3",130,0)
 ;XX2 1 REQLOCABB  REQLOCNM  RdRIST  COMPLIC  RAD_DIV
"RTN","MAGJLS3",131,0)
 ;    6 SITE_CODE  RISTISME  PROCMOD  REQLOCT  REQWARD
"RTN","MAGJLS3",132,0)
 ;   11 RASTCAT   LRFLAG   TECH
"RTN","MAGJLS3",133,0)
 S:'URG URG=9  ;  request urgency default to Routine
"RTN","MAGJLS3",134,0)
 I URG=9,(PREOP]"") S URG=8  ; dummy val for Pre-Op
"RTN","MAGJLS3",135,0)
 S URG1=$S(URG=1:"Stat",URG=2:"Urg",URG=8:"PreOp",1:"Rout"),X=$E(URG1),URG1=$F(URGORD,X)-1_"-"_URG1
"RTN","MAGJLS3",136,0)
 I PREOP]"",(URG'=8) S URG1=URG1_"/Pre" ; show PreOp & another priority
"RTN","MAGJLS3",137,0)
 S SORTMAG=$S(+IMGCNT:"A",1:"B") ; sort index: has/not images
"RTN","MAGJLS3",138,0)
 S DAYCASE=$P(XX,U,12),RASTORD=$P(XX,U,15),STATUS=$P(XX,U,11),RASTCAT=$P(XX2,U,11),LRFLAG=$P(XX2,U,12),TECH=$P(XX2,U,13)
"RTN","MAGJLS3",139,0)
 S EXCAT="",CURPRIO=0
"RTN","MAGJLS3",140,0)
 I STATUS]"" D
"RTN","MAGJLS3",141,0)
 . S EXCAT=RASTCAT
"RTN","MAGJLS3",142,0)
 . I RASTORD<2!(EXCAT="W")!('IMGCNT) S CURPRIO=0 ; Cancelled/Waiting/No images: Ignore exam
"RTN","MAGJLS3",143,0)
 . E  I EXCAT="E" S CURPRIO=1  ; Examined="Current" exam
"RTN","MAGJLS3",144,0)
 . E  S CURPRIO=2  ; must be a "prior" exam
"RTN","MAGJLS3",145,0)
 . I CURPRIO,'(ONL="Y") S CURPRIO=3 ; images on jukebox
"RTN","MAGJLS3",146,0)
 . I RASTORD=9 S EXCAT="C" ; Complete
"RTN","MAGJLS3",147,0)
 . E  I EXCAT="D"!(EXCAT="T") S EXCAT="I" ; just display one value meaning Interpreted
"RTN","MAGJLS3",148,0)
 ; PTID is Initial w/ last 4 of SSN for VA (Z9999), or MRN for IHS (1.N number)
"RTN","MAGJLS3",149,0)
 ; LASTSSN is either last 4 digits of SSN, or last 4 of whatever number came in, or nil
"RTN","MAGJLS3",150,0)
 S X=$P(XX,U,5) ; SSN in VA, MRN in IHS
"RTN","MAGJLS3",151,0)
 I X?3N1"-"2N1"-"4N S LASTSSN=$P(X,"-",3),PTID=$E($P(XX,U,4))_LASTSSN
"RTN","MAGJLS3",152,0)
 E  S PTID=X D
"RTN","MAGJLS3",153,0)
 . I X?1N.N S X=10000+X,T=$L(X),LASTSSN=$E(X,T-3,T)
"RTN","MAGJLS3",154,0)
 . E  S LASTSSN=""
"RTN","MAGJLS3",155,0)
 ; build output string in Y & Y2
"RTN","MAGJLS3",156,0)
 S Y=DAYCASE_U_U_$P(XX,U,4)_U_PTID
"RTN","MAGJLS3",157,0)
 S Y=Y_U_URG1_U_$E($P(XX,U,9),1,30)_U_MAGDT_U_$E($P(XX,U,14),1,10)_U_IMGCNT
"RTN","MAGJLS3",158,0)
 S Y=Y_U_ONL_U_$E($P(XX,U,13),1,15)_U_REMOTE
"RTN","MAGJLS3",159,0)
 S Y=Y_U_SORTMAG_U_SORTDT_U_MODALITY_U_RAST_U_$$RAIMTYP(RAST)
"RTN","MAGJLS3",160,0)
 S RISTISME=$P(XX2,U,7)
"RTN","MAGJLS3",161,0)
 S Y2=$P(XX2,U,1,3)_U_LASTSSN_U_$P(XX2,U,5)_U_PLACE_U_RISTISME_U_$P(XX2,U,8,9)_U_$P(XX,U,17)_U_$P(XX2,U,10)
"RTN","MAGJLS3",162,0)
 ; add 4 "place holders" for fields that are only in the History list
"RTN","MAGJLS3",163,0)
 S Y2=Y2_U_U_U_U
"RTN","MAGJLS3",164,0)
 S Y2=Y2_U_TECH_U_REGDT_U_REGDTSRT ; p101 adds 3 new fields
"RTN","MAGJLS3",165,0)
 S Y2=Y2_U_"|"_$P(XX,U,1,3)_U_RARPT
"RTN","MAGJLS3",166,0)
 S Y2=Y2_"|"_PIPE3_"|"_EXCAT_"^^^"_MODALITY_U_$P(XX,U,17)_U_CURPRIO_U_RARPT_U_KEY_U_REMOTE2_U_LRFLAG_U_STATPRIORITY
"RTN","MAGJLS3",167,0)
 ; * Note: Keep Pipe piece 4, above, in sync with lstout^magjls2b & magjlst1 *
"RTN","MAGJLS3",168,0)
 S MAGRACNT=MAGRACNT+1
"RTN","MAGJLS3",169,0)
 S @MAGLST@(MAGRACNT,1)=Y,^(2)=Y2  ; save output for one exam
"RTN","MAGJLS3",170,0)
 I $G(BKGPROC),(LSTREQ="R") S ^TMP($J,"NEWINT",$P(XX,U,1,3))=""
"RTN","MAGJLS3",171,0)
 Q
"RTN","MAGJLS3",172,0)
 ;
"RTN","MAGJLS3",173,0)
RAIMTYP(RAST) ; return Imaging Type Abbrev for Status Code
"RTN","MAGJLS3",174,0)
 N X S X="" I RAST]"" D
"RTN","MAGJLS3",175,0)
 . S X=$G(RAIMTYP(RAST)) Q:X]""
"RTN","MAGJLS3",176,0)
 . S X=$P($G(^RA(72,RAST,0)),U,7)
"RTN","MAGJLS3",177,0)
 . I X S X=$P($G(^RA(79.2,X,0)),U,3)_"~"_X  ; abb~ien
"RTN","MAGJLS3",178,0)
 . S RAIMTYP(RAST)=X   ; save for future use
"RTN","MAGJLS3",179,0)
 Q X
"RTN","MAGJLS3",180,0)
 ;
"RTN","MAGJLS3",181,0)
IMGTYLST(LISCAT,LST) ; get exams for list of image types for input LISCAT
"RTN","MAGJLS3",182,0)
 N TYP
"RTN","MAGJLS3",183,0)
 F  Q:'(LST?1.N.E)  S TYP=+$P(LST,U),LST=$P(LST,U,2,99) D:TYP IMGTYP(LISCAT,TYP)
"RTN","MAGJLS3",184,0)
 Q
"RTN","MAGJLS3",185,0)
 ;
"RTN","MAGJLS3",186,0)
IMGTYP(LISCAT,IMGTY) ; process statuses for one Image Type for LISCAT
"RTN","MAGJLS3",187,0)
 I '$D(^RA(79.2,IMGTY,0)) S REPLY="0^4~Invalid Imaging Type" Q
"RTN","MAGJLS3",188,0)
 N LST
"RTN","MAGJLS3",189,0)
 I $D(STAT)<10 D BLDSTAT^MAGJLS3A
"RTN","MAGJLS3",190,0)
 S (STAT,LST)=""
"RTN","MAGJLS3",191,0)
 S LASTDT=$P(STAT(LISCAT),U)
"RTN","MAGJLS3",192,0)
 F  S STAT=$O(STAT(LISCAT,IMGTY,STAT)) Q:STAT=""  S LST=LST_$S(LST="":"",1:U)_STAT,HDRLST(STAT(LISCAT,IMGTY))=""
"RTN","MAGJLS3",193,0)
 I LST]"" D STATLST(LST)
"RTN","MAGJLS3",194,0)
 Q
"RTN","MAGJLS3",195,0)
 ;
"RTN","MAGJLS3",196,0)
STATLST(LST) ; get exams for a list of status codes
"RTN","MAGJLS3",197,0)
 F  Q:'(LST?1.N.E)  S STAT=+$P(LST,U),LST=$P(LST,U,2,99) D:STAT STAT(STAT)
"RTN","MAGJLS3",198,0)
 Q
"RTN","MAGJLS3",199,0)
 ;
"RTN","MAGJLS3",200,0)
STAT(RAST) ; get exams for one status code
"RTN","MAGJLS3",201,0)
 ; uses File #70) "AS" index of active exams
"RTN","MAGJLS3",202,0)
 ;
"RTN","MAGJLS3",203,0)
 N RASTP
"RTN","MAGJLS3",204,0)
 I $D(^RA(72,RAST)) S RASTP=$P(^(RAST,0),U)
"RTN","MAGJLS3",205,0)
 E  S REPLY="0^4~Invalid Exam Status" Q
"RTN","MAGJLS3",206,0)
 I '$D(^RADPT("AS",RAST)) S REPLY="0^2~No exams on file with Exam Status "_RASTP Q
"RTN","MAGJLS3",207,0)
 S RADFN=0,STATCHK=RAST
"RTN","MAGJLS3",208,0)
 F  S RADFN=$O(^RADPT("AS",RAST,RADFN)) Q:RADFN'>0  S RADTI=0 D
"RTN","MAGJLS3",209,0)
 . F  S RADTI=$O(^RADPT("AS",RAST,RADFN,RADTI)) Q:RADTI'>0!(RADTI>LASTDT)  S RACNI=0 D
"RTN","MAGJLS3",210,0)
 . . F  S RACNI=$O(^RADPT("AS",RAST,RADFN,RADTI,RACNI)) Q:RACNI'>0  D
"RTN","MAGJLS3",211,0)
 . . . D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJLS3",212,0)
 . . . Q:'MAGRET  ; no exam returned
"RTN","MAGJLS3",213,0)
 . . . D SVMAG2A()
"RTN","MAGJLS3",214,0)
 Q
"RTN","MAGJLS3",215,0)
 ;
"RTN","MAGJLS3",216,0)
END Q  ; 
"RTN","MAGJLST1")
0^5^B54042932
"RTN","MAGJLST1",1,0)
MAGJLST1 ;WIRMFO/JHC VistARad RPC calls ; 23 Apr 2010  15:55 PM
"RTN","MAGJLST1",2,0)
 ;;3.0;IMAGING;**16,22,18,65,76,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJLST1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLST1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLST1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLST1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLST1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLST1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLST1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLST1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLST1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLST1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLST1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLST1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLST1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",17,0)
 ;;
"RTN","MAGJLST1",18,0)
 Q
"RTN","MAGJLST1",19,0)
 ;
"RTN","MAGJLST1",20,0)
 ; Subroutines for fetching Exam Info for Radiology Workstation
"RTN","MAGJLST1",21,0)
 ; Exam listings:
"RTN","MAGJLST1",22,0)
 ;     PTLIST -- list subset of all exams for a patient
"RTN","MAGJLST1",23,0)
 ;        RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",24,0)
 ;   PTLSTALL -- list ALL exams for a patient
"RTN","MAGJLST1",25,0)
 ;       RPC Call: MAGJ PT ALL EXAMS
"RTN","MAGJLST1",26,0)
 ;
"RTN","MAGJLST1",27,0)
 Q
"RTN","MAGJLST1",28,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLST1",29,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLST1",30,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLST1",31,0)
 Q:$Q 1  Q
"RTN","MAGJLST1",32,0)
 ;
"RTN","MAGJLST1",33,0)
PTLSTALL(MAGGRY,DATA) ; List ALL exams for a patient
"RTN","MAGJLST1",34,0)
 ;  RPC is MAGJ PT ALL EXAMS
"RTN","MAGJLST1",35,0)
 N PARAM
"RTN","MAGJLST1",36,0)
 S PARAM="^^^"_$P(DATA,U,2,3)
"RTN","MAGJLST1",37,0)
 D PTLIST(.MAGGRY,$P(DATA,U)_PARAM)
"RTN","MAGJLST1",38,0)
 Q
"RTN","MAGJLST1",39,0)
 ;
"RTN","MAGJLST1",40,0)
PTLIST(MAGGRY,DATA) ; get list of exams for a patient
"RTN","MAGJLST1",41,0)
 ; 
"RTN","MAGJLST1",42,0)
 ; MAGGRY - indirect reference to return array of exams for a patient
"RTN","MAGJLST1",43,0)
 ; DATA   - DFN ^ LIMYEARS ^ LIMEXAMS ^ BEGDT ^ ONESHOT
"RTN","MAGJLST1",44,0)
 ;   DFN--Patient's DFN
"RTN","MAGJLST1",45,0)
 ;   LIMYRS--Restrict exams up to # Years back (defunct)
"RTN","MAGJLST1",46,0)
 ;   LIMEXAMS--Restrict exams up to # of exams
"RTN","MAGJLST1",47,0)
 ;   BEGDT--Begin date for exam fetch (Patch 18 addition--see below)
"RTN","MAGJLST1",48,0)
 ;   ONESHOT--Number days back to search, in one fell swoop
"RTN","MAGJLST1",49,0)
 ; Returns data in ^TMP($J,"MAGRAEX",0:n)
"RTN","MAGJLST1",50,0)
 ; RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",51,0)
 ;
"RTN","MAGJLST1",52,0)
 ; Patch 18 eliminates "Patient Exams" / "All Patient Exams" distinction.
"RTN","MAGJLST1",53,0)
 ; It always retrieves ALL exams, but uses multiple RPC calls, so the client
"RTN","MAGJLST1",54,0)
 ; incrementally builds the list; this is to provide all the data, but without
"RTN","MAGJLST1",55,0)
 ; incurring any long pauses to provide the info to the user.
"RTN","MAGJLST1",56,0)
 ; Below, the P18 code fetches RAD data in one-year chunks, and repeats
"RTN","MAGJLST1",57,0)
 ;   until over 20 exams have been processed, at which point the RPC reply
"RTN","MAGJLST1",58,0)
 ;   is posted, along with the last date processed; this value is then used for
"RTN","MAGJLST1",59,0)
 ;   a subsequent RPC call to get the next chunk of the record; etc. till all done.
"RTN","MAGJLST1",60,0)
 ;   
"RTN","MAGJLST1",61,0)
 N CNT,DFN,ISS,PATNAME,DIQUIET,MAGRACNT,MAGRET,REPLY,REMOTE
"RTN","MAGJLST1",62,0)
 N DAYCASE,DIV,EXCAT,MAGDT,XX,XX2,WHOLOCK,MODALITY,MYLOCK,PLACE,ENDLOOP
"RTN","MAGJLST1",63,0)
 N LIMEXAMS,BEGDT,SAVBEGDT,ENDDT,MORE,RDRIST,PSSN,CPT,PARAM
"RTN","MAGJLST1",64,0)
 N CURPRIO,STATUS,RARPT,KEY,X2,REMOTE2,ONESHOT,LIMDAYS
"RTN","MAGJLST1",65,0)
 N IMGCNT,LRFLAG,MSG,ONL,PROCMOD,RASTCAT,RASTORD,STATPRIORITY
"RTN","MAGJLST1",66,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLST1"
"RTN","MAGJLST1",67,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLST1",68,0)
 S PARAM=$G(^MAG(2006.69,1,0))
"RTN","MAGJLST1",69,0)
 S BEGDT=$P(DATA,U,4),ONESHOT=$P(DATA,U,5)
"RTN","MAGJLST1",70,0)
 K MAGGRY S DFN=+DATA
"RTN","MAGJLST1",71,0)
 S MAGRACNT=1,CNT=0 K ^TMP($J,"MAGRAEX"),^("MAGRAEX2")
"RTN","MAGJLST1",72,0)
 S REPLY="0^4~Compiling list of Radiology Exams."
"RTN","MAGJLST1",73,0)
 I DFN,$D(^DPT(DFN,0)) S PATNAME=$P(^(0),U) D
"RTN","MAGJLST1",74,0)
 . D PID^VADPT6 S PSSN=$S(VAERR:"Unknown",1:VA("PID"))
"RTN","MAGJLST1",75,0)
 . K VA("PID"),VA("BID"),VAERR
"RTN","MAGJLST1",76,0)
 . S ENDLOOP=0,BEGDT=$S(+BEGDT:BEGDT,1:"")
"RTN","MAGJLST1",77,0)
 . I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S REPLY="0^4~VistARad Patch 32 is no longer supported; contact Imaging Support for the current version of the VistARad client software." Q  ; <*>
"RTN","MAGJLST1",78,0)
 . F  D  Q:'MORE  Q:ENDLOOP  S BEGDT=MORE+1
"RTN","MAGJLST1",79,0)
 . . I 'BEGDT S BEGDT=DT,X2=0
"RTN","MAGJLST1",80,0)
 . . E  S X2=-1
"RTN","MAGJLST1",81,0)
 . . S LIMDAYS=365,MORE=1
"RTN","MAGJLST1",82,0)
 . . I ONESHOT,(ONESHOT>0) S LIMDAYS=+ONESHOT
"RTN","MAGJLST1",83,0)
 . . S ENDDT=$$FMADD^XLFDT(BEGDT,X2)
"RTN","MAGJLST1",84,0)
 . . S BEGDT=$$FMADD^XLFDT(ENDDT,-LIMDAYS)
"RTN","MAGJLST1",85,0)
 . . D GETEXAM3^MAGJUTL1(DFN,BEGDT,ENDDT,.MAGRACNT,.MAGRET,.MORE)
"RTN","MAGJLST1",86,0)
 . . S ENDLOOP=(MAGRACNT>20)!+ONESHOT ; For testing only, use >8
"RTN","MAGJLST1",87,0)
 . I 'MORE S SAVBEGDT=0
"RTN","MAGJLST1",88,0)
 . E  S SAVBEGDT=MORE+1 ; adding 1 correctly inits value for subseqent call
"RTN","MAGJLST1",89,0)
 . I MAGRACNT>1 D PTLOOP
"RTN","MAGJLST1",90,0)
 E  S REPLY="0^4~Invalid Radiology Patient"
"RTN","MAGJLST1",91,0)
 I MAGRACNT<2 S:(REPLY["Compiling") REPLY="0^2~Radiology Exams for: "_PATNAME
"RTN","MAGJLST1",92,0)
 I CNT!(REPLY["2~Radiology Exams") D
"RTN","MAGJLST1",93,0)
 . I 'MORE S MSG=""
"RTN","MAGJLST1",94,0)
 . E  S MORE=$$FMTE^XLFDT(MORE) S MSG="Patient has more exams on file."
"RTN","MAGJLST1",95,0)
 . ; show SSN only if the user is a radiologist
"RTN","MAGJLST1",96,0)
 . S X=+MAGJOB("USER",1)
"RTN","MAGJLST1",97,0)
 . I '(X=12!(X=15)),(PSSN?3N1"-"2N1"-"4N) S PSSN=$E(PATNAME)_$P(PSSN,"-",3)
"RTN","MAGJLST1",98,0)
 . S PSSN=" ("_PSSN_")"
"RTN","MAGJLST1",99,0)
 . I CNT S REPLY=CNT_"^1~Radiology Exams for: "_PATNAME_PSSN_$S(MSG="":"",1:" -- "_MSG)
"RTN","MAGJLST1",100,0)
 . E  S REPLY=REPLY_$S(MSG="":"",1:" -- "_MSG)
"RTN","MAGJLST1",101,0)
 . S ^TMP($J,"MAGRAEX2",1)="^Day/Case~S3~1^Lock~~2^Procedure~~6^Modifier~~25^Image Date/Time~S1~7^Status~~8^# Img~S2~9^Onl~~10^RC~~12^Site~~23^Mod~~15^Interp By~~20^Imaging Loc~~11^CPT~~27"
"RTN","MAGJLST1",102,0)
 I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S ^TMP($J,"MAGRAEX2",1)="^^"
"RTN","MAGJLST1",103,0)
 I 'MAGJOB("P32") S $P(REPLY,"|",2)=SAVBEGDT
"RTN","MAGJLST1",104,0)
 S ^TMP($J,"MAGRAEX2",0)=REPLY
"RTN","MAGJLST1",105,0)
 S MAGGRY=$NA(^TMP($J,"MAGRAEX2"))
"RTN","MAGJLST1",106,0)
 K ^TMP($J,"RAE1"),^("MAGRAEX")
"RTN","MAGJLST1",107,0)
 Q
"RTN","MAGJLST1",108,0)
 ;
"RTN","MAGJLST1",109,0)
PTLOOP ; loop through exam data & package it for VRAD use
"RTN","MAGJLST1",110,0)
 S ISS=0
"RTN","MAGJLST1",111,0)
 F  S ISS=$O(^TMP($J,"MAGRAEX",ISS)) Q:'ISS  S XX=^(ISS,1),XX2=^(2) D
"RTN","MAGJLST1",112,0)
 . S CNT=CNT+1,RARPT=$P(XX,U,10)
"RTN","MAGJLST1",113,0)
 . D IMGINFO^MAGJUTL2(RARPT,.Y)
"RTN","MAGJLST1",114,0)
 . S IMGCNT=$P(Y,U),ONL=$P(Y,U,2),MAGDT=$P(Y,U,3),REMOTE=$P(Y,U,4),MODALITY=$P(Y,U,5),PLACE=$P(Y,U,6),KEY=$P(Y,U,7)
"RTN","MAGJLST1",115,0)
 . S REMOTE2=REMOTE
"RTN","MAGJLST1",116,0)
 . S:PLACE PLACE=$P($G(^MAG(2006.1,PLACE,0)),U,9)
"RTN","MAGJLST1",117,0)
 . I REMOTE D
"RTN","MAGJLST1",118,0)
 . . S T="" F I=1:1:$L(REMOTE,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(REMOTE,",",I),3)),U,5)
"RTN","MAGJLST1",119,0)
 . . S REMOTE=T
"RTN","MAGJLST1",120,0)
 . S DIV="",X=$P(XX2,U,5) I X'=DUZ(2) S DIV=$$STATN(X)
"RTN","MAGJLST1",121,0)
 . I MAGDT="" S MAGDT=$P(XX,U,7)
"RTN","MAGJLST1",122,0)
 . S MAGDT=$$FMTE^XLFDT(MAGDT,"5Z")
"RTN","MAGJLST1",123,0)
 . S WHOLOCK=RARPT,MYLOCK="",DAYCASE=$P(XX,U,12)
"RTN","MAGJLST1",124,0)
 . I WHOLOCK]"" S T=$$CHKLOCK^MAGJLS2B(WHOLOCK,DAYCASE),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLST1",125,0)
 . S RDRIST=$P(XX2,U,3),PROCMOD=$P(XX2,U,8),CPT=$P(XX,U,17),RASTORD=$P(XX,U,15)
"RTN","MAGJLST1",126,0)
 . S Y=U_DAYCASE_U_WHOLOCK_U_$E($P(XX,U,9),1,26)_U_PROCMOD_U_MAGDT_U_$E($P(XX,U,14),1,16)_U_IMGCNT_U_ONL
"RTN","MAGJLST1",127,0)
 . S Y=Y_U_REMOTE
"RTN","MAGJLST1",128,0)
 . S Y=Y_U_PLACE_U_MODALITY_U_RDRIST_U_$E($P(XX,U,13),1,11)_U_CPT
"RTN","MAGJLST1",129,0)
 . S STATUS=$P(XX,U,11),EXCAT="",CURPRIO=0,RASTCAT=$P(XX2,U,11),LRFLAG=$P(XX2,U,12)
"RTN","MAGJLST1",130,0)
 . I STATUS]"" D
"RTN","MAGJLST1",131,0)
 . . S EXCAT=RASTCAT
"RTN","MAGJLST1",132,0)
 . . I RASTORD<2!(EXCAT="W")!('IMGCNT) S CURPRIO=0 ; Cancelled/Waiting/No images: Ignore exam
"RTN","MAGJLST1",133,0)
 . . E  I EXCAT="E" S CURPRIO=1  ; Examined="Current" exam
"RTN","MAGJLST1",134,0)
 . . E  S CURPRIO=2  ; must be a "prior" exam
"RTN","MAGJLST1",135,0)
 . . I CURPRIO,'(ONL="Y") S CURPRIO=3 ; images on jukebox
"RTN","MAGJLST1",136,0)
 . . I RASTORD=9 S EXCAT="C" ; Complete
"RTN","MAGJLST1",137,0)
 . . E  I EXCAT="D"!(EXCAT="T") S EXCAT="I" ; just display one value meaning Interpreted
"RTN","MAGJLST1",138,0)
 . S STATPRIORITY=0 ; in the Pt list, this is only a placeholder in next line, to sync with svmag2a, etc.
"RTN","MAGJLST1",139,0)
 . S ^TMP($J,"MAGRAEX2",ISS)=Y_"^|"_$P(XX,U,1,3)_U_RARPT_"||"_EXCAT_U_WHOLOCK_U_MYLOCK_U_MODALITY_U_CPT_U_CURPRIO_U_RARPT_U_KEY_U_REMOTE2_U_LRFLAG_U_STATPRIORITY
"RTN","MAGJLST1",140,0)
 . ; * Note: Keep Pipe-pieces in sync with svmag2a^magjls3 & lstout^magjls2b *
"RTN","MAGJLST1",141,0)
 Q
"RTN","MAGJLST1",142,0)
 ;
"RTN","MAGJLST1",143,0)
STATN(X) ; get station #, else return input value
"RTN","MAGJLST1",144,0)
 N T
"RTN","MAGJLST1",145,0)
 I X]"" D GETS^DIQ(4,X,99,"E","T") S T=$G(T(4,X_",",99,"E")) I T]"" S X=T
"RTN","MAGJLST1",146,0)
 Q X
"RTN","MAGJLST1",147,0)
 ;
"RTN","MAGJLST1",148,0)
FACLIST(MAGGRY,DATA) ; get Treating Facility List for a patient
"RTN","MAGJLST1",149,0)
 ; RPC Call: MAGJ GET TREATING LIST
"RTN","MAGJLST1",150,0)
 ; MAGGRY -- return array--supplied by TFL^VAFCTFU1
"RTN","MAGJLST1",151,0)
 ; Input: DATA -- Patient DFN
"RTN","MAGJLST1",152,0)
 ; Returns:
"RTN","MAGJLST1",153,0)
 ; Array; first entry contains result header with # lines to follow
"RTN","MAGJLST1",154,0)
 ; and reply message description.
"RTN","MAGJLST1",155,0)
 ; Entries 2:N (if any exist) contain data for each Treating facility
"RTN","MAGJLST1",156,0)
 ; up-caret delimited : A ^ B ^ C ^ D ^ E
"RTN","MAGJLST1",157,0)
 ;    A: Institution IEN of the Facility
"RTN","MAGJLST1",158,0)
 ;    B: Institution Name
"RTN","MAGJLST1",159,0)
 ;    C: Current date on record for that institution
"RTN","MAGJLST1",160,0)
 ;    D: ADT/HL7 event reason 
"RTN","MAGJLST1",161,0)
 ;    E: FACILITY TYPE
"RTN","MAGJLST1",162,0)
 ; Note--see TFL^VAFCTFU1 for further details
"RTN","MAGJLST1",163,0)
 ; 
"RTN","MAGJLST1",164,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLST1"
"RTN","MAGJLST1",165,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLST1",166,0)
 N DFN
"RTN","MAGJLST1",167,0)
 K MAGGRY S DFN=+$G(DATA)
"RTN","MAGJLST1",168,0)
 S REPLY="0^4~Compiling list of Treating Facilities."
"RTN","MAGJLST1",169,0)
 I DFN
"RTN","MAGJLST1",170,0)
 E  S REPLY="0^4~Invalid Radiology Patient" G FACLISTZ
"RTN","MAGJLST1",171,0)
 D TFL^VAFCTFU1(.MAGGRY,DFN)  ; ICR 2990
"RTN","MAGJLST1",172,0)
 I $D(MAGGRY)<10 S REPLY="0^4~No results available." G FACLISTZ
"RTN","MAGJLST1",173,0)
 E  I +MAGGRY(1)=-1 S REPLY="0^2~"_$P(MAGGRY(1),U,2) K MAGGRY(1) G FACLISTZ
"RTN","MAGJLST1",174,0)
 S REPLY=$O(MAGGRY(""),-1)_U_"1~Treating facilities returned"
"RTN","MAGJLST1",175,0)
FACLISTZ S MAGGRY(0)=REPLY
"RTN","MAGJLST1",176,0)
 Q
"RTN","MAGJLST1",177,0)
 ;
"RTN","MAGJLST1",178,0)
END Q  ;
"RTN","MAGJMN1")
0^6^B92377689
"RTN","MAGJMN1",1,0)
MAGJMN1 ;WIRMFO/JHC VRad Maint functions ; 25-Mar-2010 1:40 PM
"RTN","MAGJMN1",2,0)
 ;;3.0;IMAGING;**16,9,22,18,65,76,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJMN1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJMN1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJMN1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJMN1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJMN1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJMN1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJMN1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJMN1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJMN1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJMN1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJMN1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJMN1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJMN1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",17,0)
 ;;
"RTN","MAGJMN1",18,0)
ENVCHK ; "Environment Check" for KIDS Install
"RTN","MAGJMN1",19,0)
 N MAGJKIDS S MAGJKIDS=1
"RTN","MAGJMN1",20,0)
 D BGCSTOP
"RTN","MAGJMN1",21,0)
 Q
"RTN","MAGJMN1",22,0)
 ;
"RTN","MAGJMN1",23,0)
SVRLIST ;
"RTN","MAGJMN1",24,0)
 W @IOF,!!?10,"Enter/Edit VistARad Exams List Definition",!!
"RTN","MAGJMN1",25,0)
 N MAGIEN
"RTN","MAGJMN1",26,0)
 K DIC S (DIC,DLAYGO)=2006.631,DIC(0)="ALMEQ"
"RTN","MAGJMN1",27,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",28,0)
 S X=$P(@(DIC_+Y_",0)"),U,2)
"RTN","MAGJMN1",29,0)
 I X>9000 W !!,$C(7),"You may not edit System-Supplied files!" H 3 G SVRLIST
"RTN","MAGJMN1",30,0)
 S DIE=2006.631,DA=+Y,DR="[MAGJ LIST EDIT]"
"RTN","MAGJMN1",31,0)
 S MAGIEN=DA
"RTN","MAGJMN1",32,0)
 D ^DIE I '$D(DA) G SVRLIST
"RTN","MAGJMN1",33,0)
 D ENSRCH
"RTN","MAGJMN1",34,0)
 D BLDDEF(MAGIEN)
"RTN","MAGJMN1",35,0)
 S $P(^MAG(2006.631,MAGIEN,0),U,5)=$$NOW^XLFDT()
"RTN","MAGJMN1",36,0)
 W !!,"List Definition complete!" R X:2
"RTN","MAGJMN1",37,0)
 G SVRLIST
"RTN","MAGJMN1",38,0)
 Q
"RTN","MAGJMN1",39,0)
ENSRCH ; Invoke Search for 2006.631 def'n
"RTN","MAGJMN1",40,0)
 N GREF,GLIN,GO,CT,DIARI,DIC,FNOD,TNOD,NCOND,NODE0
"RTN","MAGJMN1",41,0)
 ; GREF holds indirect ref to store search logic data:
"RTN","MAGJMN1",42,0)
 ; @GREF@(3, ff -- conditional elements (fields/logic)
"RTN","MAGJMN1",43,0)
 ; @GREF@(4, ff -- composite elements (ANDed conditions)
"RTN","MAGJMN1",44,0)
 ; @GREF@(5, ff -- Human-readable search text
"RTN","MAGJMN1",45,0)
 ; GLIN holds indirect ref to retrieve search logic data from ^DIBT
"RTN","MAGJMN1",46,0)
 ; @GLIN@("DC", ff -- conditional elements
"RTN","MAGJMN1",47,0)
 ; @GLIN@("DL", ff -- composite elements
"RTN","MAGJMN1",48,0)
 ; @GLIN@("O", ff -- readable text
"RTN","MAGJMN1",49,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",50,0)
 S GO=1 I $D(@GREF@(5,1)) D  ; show current logic
"RTN","MAGJMN1",51,0)
 . W ! D DISPSRCH(GREF)
"RTN","MAGJMN1",52,0)
 . S X=$$YN("Do you want to delete or re-enter the search logic?","NO")
"RTN","MAGJMN1",53,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",54,0)
 . W !!?7,"Re-entering the search logic requires first deleting the current",!?7,"definition, then entering the new definition from scratch."
"RTN","MAGJMN1",55,0)
 . S X=$$YN("Are you sure you want to continue?","NO")
"RTN","MAGJMN1",56,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",57,0)
 I 'GO Q
"RTN","MAGJMN1",58,0)
 W !!?7,"Now enter search logic for this List.  To do this, the program"
"RTN","MAGJMN1",59,0)
 W !?7,"will prompt you just as if you were going to run a Fileman Search."
"RTN","MAGJMN1",60,0)
 W !?7,"When prompted STORE RESULTS OF SEARCH IN TEMPLATE:, answer with 'TEMP'"
"RTN","MAGJMN1",61,0)
 W !?7,"If prompted ... OK TO PURGE? NO// answer 'YES'; don't bother specifying"
"RTN","MAGJMN1",62,0)
 W !?7,"output print fields, but just RETURN through all the prompts to"
"RTN","MAGJMN1",63,0)
 W !?7,"complete the process.  The search definition will be saved as part"
"RTN","MAGJMN1",64,0)
 W !?7,"of this List definition; you will test it out by running it from "
"RTN","MAGJMN1",65,0)
 W !?7,"the workstation.  If you need to modify the search logic, you will"
"RTN","MAGJMN1",66,0)
 W !?7,"have to re-enter it in its entirety."
"RTN","MAGJMN1",67,0)
 W !!?7,"NOTES: EXAM LOCK INDICATOR will not work for search logic;"
"RTN","MAGJMN1",68,0)
 W !?14,"REMOTE CACHE INDICATOR only works for Null/Not Null logic."
"RTN","MAGJMN1",69,0)
 S DIC=2006.634 D EN^DIS  ; call Fman Search Logic routine. It will store search logic in ^DIBT
"RTN","MAGJMN1",70,0)
 ; 2006.634 is intentional--don't change this!
"RTN","MAGJMN1",71,0)
 I '$G(DIARI) W !!," Search logic NOT updated" D  Q
"RTN","MAGJMN1",72,0)
 . Q:'$D(@GREF@(5,1))  ; if no logic had existed, quit
"RTN","MAGJMN1",73,0)
 . S X=$$YN("Do you want to DELETE the search logic?","NO")
"RTN","MAGJMN1",74,0)
 . I X="Y" K @GREF@(3) K ^(4),^(5) W " -- Deleted!"
"RTN","MAGJMN1",75,0)
 K @GREF@(3) K ^(4),^(5)
"RTN","MAGJMN1",76,0)
 S GLIN=$NA(^DIBT(DIARI))  ; Copy logic to 2006.631 DEF nodes
"RTN","MAGJMN1",77,0)
 S FNOD="DC",TNOD=3,CT=0  ; "DC" data--straight copy
"RTN","MAGJMN1",78,0)
 S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T),CT=CT+1,@GREF@(TNOD,T)=X
"RTN","MAGJMN1",79,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",80,0)
 S FNOD="DL",TNOD=4,CT=0  ; "DL" data--copy depends on storage scheme in DIBT:
"RTN","MAGJMN1",81,0)
 ;Zero node null -- straight copy
"RTN","MAGJMN1",82,0)
 ; Else 1) either only one condition is defined;
"RTN","MAGJMN1",83,0)
 ; or, 2) the zero-node condition is ANDed with all defined conditions
"RTN","MAGJMN1",84,0)
 ;  Case 2: Var A -- Pre-pend zero node, then dup zero node
"RTN","MAGJMN1",85,0)
 ;            Var B -- Pre-pend zero node
"RTN","MAGJMN1",86,0)
 S NCOND=+$G(@GLIN@(FNOD))
"RTN","MAGJMN1",87,0)
 I $G(@GLIN@(FNOD,0))]"" S NODE0=^(0) D
"RTN","MAGJMN1",88,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=NODE0_X
"RTN","MAGJMN1",89,0)
 . I CT'=NCOND S CT=CT+1,@GREF@(TNOD,CT)=NODE0_$S(CT=1:"",1:"^")
"RTN","MAGJMN1",90,0)
 E  D
"RTN","MAGJMN1",91,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=X
"RTN","MAGJMN1",92,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",93,0)
 ; readable text--straight copy
"RTN","MAGJMN1",94,0)
 S TNOD=5,T=0 F  S T=$O(@GLIN@("O",T)) Q:T=""  S @GREF@(TNOD,T)=^(T,0)
"RTN","MAGJMN1",95,0)
 Q
"RTN","MAGJMN1",96,0)
 ;
"RTN","MAGJMN1",97,0)
BLDDEF(LSTID) ; build DEF nodes for Column/Sort defs
"RTN","MAGJMN1",98,0)
 N X,QX,SS,STR,LSTHDR,T,T0,T8,T6,HASCASE,XT,HASDATE,HASNIMG,HASPRIO,HASLOCK,LISTYPE
"RTN","MAGJMN1",99,0)
 S SS=0,HASCASE=0,HASDATE=0,HASNIMG=0,HASPRIO=0,HASLOCK=0
"RTN","MAGJMN1",100,0)
 S LISTYPE=$P($G(^MAG(2006.631,LSTID,0)),U,3)
"RTN","MAGJMN1",101,0)
 ; columns/hdrs: Order in T array by the Relative Column Order
"RTN","MAGJMN1",102,0)
 F  S SS=$O(^MAG(2006.631,LSTID,1,SS)) D  Q:'SS
"RTN","MAGJMN1",103,0)
 . I 'SS D  Q
"RTN","MAGJMN1",104,0)
 . . I 'HASCASE S X=1 D BLDDEF2(X)  ; Force CASE#
"RTN","MAGJMN1",105,0)
 . . I 'HASDATE S X=7 D BLDDEF2(X)  ; DATE/TIME
"RTN","MAGJMN1",106,0)
 . . I 'HASNIMG S X=9 D BLDDEF2(X)  ; NUMBER IMAGES
"RTN","MAGJMN1",107,0)
 . . Q:LISTYPE'="U"  ; force below only if for an Unread list
"RTN","MAGJMN1",108,0)
 . . I 'HASLOCK S X=2 D BLDDEF2(X)  ; EXAM LOCK IND.
"RTN","MAGJMN1",109,0)
 . . I 'HASPRIO S X=5 D BLDDEF2(X)  ; PRIORITY
"RTN","MAGJMN1",110,0)
 . E  S X=^MAG(2006.631,LSTID,1,SS,0)
"RTN","MAGJMN1",111,0)
 . D BLDDEF2(X)
"RTN","MAGJMN1",112,0)
 ; go thru T to build ordered field sequence for output columns
"RTN","MAGJMN1",113,0)
 S QX="T",STR="",LSTHDR=""
"RTN","MAGJMN1",114,0)
 F  S QX=$Q(@QX) Q:QX=""  S X=@QX D
"RTN","MAGJMN1",115,0)
 . S STR=STR_$S(STR="":"",1:U)_$P(X,U)
"RTN","MAGJMN1",116,0)
 . S LSTHDR=LSTHDR_$S(LSTHDR="":"",1:U)_$P(X,U,2)
"RTN","MAGJMN1",117,0)
 S ^MAG(2006.631,LSTID,"DEF",.5)=LSTHDR,^(1)=STR
"RTN","MAGJMN1",118,0)
 ; Sort values:
"RTN","MAGJMN1",119,0)
 S SS=0,STR=""
"RTN","MAGJMN1",120,0)
 F  S SS=$O(^MAG(2006.631,LSTID,2,SS)) Q:'SS  S X=^(SS,0) D
"RTN","MAGJMN1",121,0)
 . S X=+X_$S($P(X,U,2):"-",1:"")
"RTN","MAGJMN1",122,0)
 . S STR=STR_$S(STR="":"",1:U)_X
"RTN","MAGJMN1",123,0)
 S ^MAG(2006.631,LSTID,"DEF",2)=STR
"RTN","MAGJMN1",124,0)
 S $P(^MAG(2006.631,LSTID,"DEF",0),U)=$$NOW^XLFDT()
"RTN","MAGJMN1",125,0)
 Q
"RTN","MAGJMN1",126,0)
 ;
"RTN","MAGJMN1",127,0)
BLDDEF2(X) ;
"RTN","MAGJMN1",128,0)
 S X=+X_$S($P(X,U,2):";"_+$P(X,U,2),1:"")
"RTN","MAGJMN1",129,0)
 I 'HASCASE S HASCASE=(+X=1)
"RTN","MAGJMN1",130,0)
 I 'HASDATE S HASDATE=(+X=7)
"RTN","MAGJMN1",131,0)
 I 'HASNIMG S HASNIMG=(+X=9)
"RTN","MAGJMN1",132,0)
 I 'HASLOCK S HASLOCK=(+X=2)
"RTN","MAGJMN1",133,0)
 I 'HASPRIO S HASPRIO=(+X=5)
"RTN","MAGJMN1",134,0)
 S T0=^MAG(2006.63,+X,0),T6=+$P(T0,U,6) S:'T6 T6=99
"RTN","MAGJMN1",135,0)
 S T8=$P(T0,U,8) I T8]"" S T8="~"_T8
"RTN","MAGJMN1",136,0)
 S XT=$S($P(T0,U,3)]"":$P(T0,U,3),1:$P(T0,U,2))_T8
"RTN","MAGJMN1",137,0)
 S $P(XT,"~",3)=+X
"RTN","MAGJMN1",138,0)
 S T(T6,+X)=X_U_XT
"RTN","MAGJMN1",139,0)
 Q
"RTN","MAGJMN1",140,0)
 ;
"RTN","MAGJMN1",141,0)
PRE ; init 2006.63 prior to KIDS install
"RTN","MAGJMN1",142,0)
 N DIK,DA S DIK="^MAG(2006.63,",DA=0 F  S DA=$O(@(DIK_DA_")")) Q:'DA  D ^DIK
"RTN","MAGJMN1",143,0)
 Q
"RTN","MAGJMN1",144,0)
 ;
"RTN","MAGJMN1",145,0)
POSTINST ; Patch installation inits, etc.
"RTN","MAGJMN1",146,0)
 D BLDALL ; update list definitions
"RTN","MAGJMN1",147,0)
 D BGCSTRT ; re-start background compile
"RTN","MAGJMN1",148,0)
 D POST ; install message, etc.
"RTN","MAGJMN1",149,0)
 Q
"RTN","MAGJMN1",150,0)
 ;
"RTN","MAGJMN1",151,0)
BLDALL ; Create "DEF" nodes, Button labels List Def'ns
"RTN","MAGJMN1",152,0)
 ; Updates all lists after s/w update list defs are installed
"RTN","MAGJMN1",153,0)
 N SS,LSTDAT,LSTNUM,BUTTON,LSTTYP
"RTN","MAGJMN1",154,0)
 S SS=0
"RTN","MAGJMN1",155,0)
 F  S SS=$O(^MAG(2006.631,SS)) Q:'SS  S LSTDAT=$G(^(SS,0)) I LSTDAT]"" D
"RTN","MAGJMN1",156,0)
 . S LSTNUM=$P(LSTDAT,U,2),BUTTON=$P(LSTDAT,U,7),LSTTYP=$P(LSTDAT,U,3)
"RTN","MAGJMN1",157,0)
 . I LSTNUM>9900!$P(LSTDAT,U,6) D BLDDEF(SS)  ; build DEF nodes for System Lists & any Enabled lists
"RTN","MAGJMN1",158,0)
 . I BUTTON="",(LSTTYP]"") D   ; Create Button Labels if needed
"RTN","MAGJMN1",159,0)
 . . S BUTTON=$S(LSTTYP="U":"Unread #",LSTTYP="R":"Recent #",LSTTYP="A":"All Active #",LSTTYP="P":"Pending #",1:"List #")_LSTNUM
"RTN","MAGJMN1",160,0)
 . . S $P(^MAG(2006.631,SS,0),U,7)=BUTTON
"RTN","MAGJMN1",161,0)
 Q
"RTN","MAGJMN1",162,0)
 ;
"RTN","MAGJMN1",163,0)
POST ; Install msg
"RTN","MAGJMN1",164,0)
 D INS^MAGQBUT4(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGJMN1",165,0)
 Q
"RTN","MAGJMN1",166,0)
 ;
"RTN","MAGJMN1",167,0)
YN(MSG,DFLT) ; get Yes/No reply
"RTN","MAGJMN1",168,0)
 N X I $G(DFLT)="" S DFLT="N"
"RTN","MAGJMN1",169,0)
 W !
"RTN","MAGJMN1",170,0)
 S DFLT=$E(DFLT),DFLT=$S(DFLT="N":"NO",1:"YES")
"RTN","MAGJMN1",171,0)
YN1 W !,MSG_" "_DFLT_"// "
"RTN","MAGJMN1",172,0)
 R X:DTIME S:X="" X=DFLT S X=$E(X),X=$TR(X,"ynYN","YNYN")
"RTN","MAGJMN1",173,0)
 I "YN"'[X W "  ??? Enter YES or NO",! G YN1
"RTN","MAGJMN1",174,0)
 Q X
"RTN","MAGJMN1",175,0)
 ;
"RTN","MAGJMN1",176,0)
LSTINQ ; Inq/Disp list def'n
"RTN","MAGJMN1",177,0)
 N GREF,MAGIEN
"RTN","MAGJMN1",178,0)
 W !!?15,"Display VistARad Exams List Definition",!!
"RTN","MAGJMN1",179,0)
 N MAGIEN
"RTN","MAGJMN1",180,0)
 S DIC=2006.631,DIC(0)="AMEQ"
"RTN","MAGJMN1",181,0)
 D ^DIC I Y=-1 K DIC,DA,DR Q
"RTN","MAGJMN1",182,0)
 K DR S DA=+Y,MAGIEN=DA
"RTN","MAGJMN1",183,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",184,0)
 W ! D EN^DIQ
"RTN","MAGJMN1",185,0)
 R !,"Enter RETURN to display the Search Logic: ",X:DTIME W !
"RTN","MAGJMN1",186,0)
 D DISPSRCH(GREF)
"RTN","MAGJMN1",187,0)
 G LSTINQ
"RTN","MAGJMN1",188,0)
 Q
"RTN","MAGJMN1",189,0)
 ;
"RTN","MAGJMN1",190,0)
DISPSRCH(GREF) ; GREF holds indirect ref for global holding search logic data
"RTN","MAGJMN1",191,0)
 I $D(@GREF@(5,1)) W !,"List Exams where:",! D
"RTN","MAGJMN1",192,0)
 . F I=1:1 Q:'$D(@GREF@(5,I))  W !?3,^(I)
"RTN","MAGJMN1",193,0)
 E  W !?3,"NO Search Logic defined!"
"RTN","MAGJMN1",194,0)
 Q
"RTN","MAGJMN1",195,0)
 ;
"RTN","MAGJMN1",196,0)
VRSIT ;
"RTN","MAGJMN1",197,0)
 W @IOF,!!?10,"Enter/Edit VistARad Site Parameters",!!
"RTN","MAGJMN1",198,0)
 S DIC=2006.69,DIC(0)="ALMEQ"
"RTN","MAGJMN1",199,0)
 I '$D(^MAG(DIC,1)) S DLAYGO=DIC
"RTN","MAGJMN1",200,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",201,0)
 S DIE=2006.69,DA=+Y,DR=".01:3.99;4.1:20"
"RTN","MAGJMN1",202,0)
 D ^DIE
"RTN","MAGJMN1",203,0)
 K DIC,DA,DR,DIE,DLAYGO
"RTN","MAGJMN1",204,0)
 N PLACE S DA=""
"RTN","MAGJMN1",205,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGJMN1",206,0)
 S:PLACE DA=PLACE
"RTN","MAGJMN1",207,0)
 I DA D
"RTN","MAGJMN1",208,0)
 . W !!,"Editing VistARad Timeout for division #",DUZ(2),!
"RTN","MAGJMN1",209,0)
 . S DIE=2006.1,DR="123" D ^DIE
"RTN","MAGJMN1",210,0)
 K DA,DR,DIE
"RTN","MAGJMN1",211,0)
 Q
"RTN","MAGJMN1",212,0)
 ;
"RTN","MAGJMN1",213,0)
EEPREF ;
"RTN","MAGJMN1",214,0)
 W @IOF,!!?10,"Enter/Edit VistARad Prefetch Logic",!!
"RTN","MAGJMN1",215,0)
 N MAGIEN
"RTN","MAGJMN1",216,0)
 K DIC S (DIC,DLAYGO)=2006.65,DIC(0)="ALMEQ"
"RTN","MAGJMN1",217,0)
 D ^DIC I Y=-1 K DIC,DIE,DR,DLAYGO Q
"RTN","MAGJMN1",218,0)
 S DIE=2006.65,DA=+Y,DR="[MAGJ PRIOR EDIT]"
"RTN","MAGJMN1",219,0)
 S MAGIEN=DA
"RTN","MAGJMN1",220,0)
 D ^DIE I '$D(DA) G EEPREF
"RTN","MAGJMN1",221,0)
 G EEPREF
"RTN","MAGJMN1",222,0)
 Q
"RTN","MAGJMN1",223,0)
INPREF ; Inquire VRad PreFetch
"RTN","MAGJMN1",224,0)
 W @IOF,!!?10,"Inquire VistARad Prefetch Logic",!!
"RTN","MAGJMN1",225,0)
 N MAGIEN,BY,FR,TO
"RTN","MAGJMN1",226,0)
 S DIC=2006.65,DIC(0)="AMEQ"
"RTN","MAGJMN1",227,0)
 D ^DIC I Y=-1 K DIC Q
"RTN","MAGJMN1",228,0)
 S DA=+Y,(FR,TO)=$P(Y,U,2),MAGIEN=DA,L=0
"RTN","MAGJMN1",229,0)
 S BY="[MAGJ PRIOR SORT]",DIS(0)="I D0=MAGIEN"
"RTN","MAGJMN1",230,0)
 D EN^DIP
"RTN","MAGJMN1",231,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",232,0)
 G INPREF
"RTN","MAGJMN1",233,0)
 Q
"RTN","MAGJMN1",234,0)
PRPREF ;Print VRad Prefetch
"RTN","MAGJMN1",235,0)
 N BY
"RTN","MAGJMN1",236,0)
 W !! S DIC=2006.65,L=0,BY="[MAGJ PRIOR SORT]"
"RTN","MAGJMN1",237,0)
 D EN1^DIP
"RTN","MAGJMN1",238,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",239,0)
 Q
"RTN","MAGJMN1",240,0)
 ;
"RTN","MAGJMN1",241,0)
BGCSTOP ; Stop Background Compile program
"RTN","MAGJMN1",242,0)
 N MAGCSTRT,GO,NTRY,RETRY,X
"RTN","MAGJMN1",243,0)
 S MAGCSTRT=0,GO=1
"RTN","MAGJMN1",244,0)
 S X=$G(^MAG(2006.69,1,0))
"RTN","MAGJMN1",245,0)
 I X]"",+$P(X,U,8) D  ; Background compile switch; skip if already false
"RTN","MAGJMN1",246,0)
 . S ^MAG(2006.69,"BGSTOP")=X ; save current settings for restore later
"RTN","MAGJMN1",247,0)
 . S MAGCSTRT=1
"RTN","MAGJMN1",248,0)
 . S $P(X,U,8)=0
"RTN","MAGJMN1",249,0)
 . S ^MAG(2006.69,1,0)=X  ; disable compile
"RTN","MAGJMN1",250,0)
 . W !!,*7,"Wait for Background Compile program to stop;"
"RTN","MAGJMN1",251,0)
 . W !,"     this might take up to a few minutes."
"RTN","MAGJMN1",252,0)
 . S NTRY=60
"RTN","MAGJMN1",253,0)
 . F I=1:1:NTRY W "." L +^XTMP("MAGJ2","BKGND2","RUN"):3 I  Q  ; process maintains lock while running
"RTN","MAGJMN1",254,0)
 . I  D
"RTN","MAGJMN1",255,0)
 . . L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJMN1",256,0)
 . . W !!,"Background Compile Stopped"
"RTN","MAGJMN1",257,0)
 . . I +$G(MAGJKIDS) W "; proceeding with install.",! H 2
"RTN","MAGJMN1",258,0)
 . E  D
"RTN","MAGJMN1",259,0)
 . . S X=$$YN("Background Compile NOT Stopped -- Try again?","Y")
"RTN","MAGJMN1",260,0)
 . . S RETRY=("Y"[X),GO=0
"RTN","MAGJMN1",261,0)
 . . S ^MAG(2006.69,1,0)=^MAG(2006.69,"BGSTOP") K ^MAG(2006.69,"BGSTOP")
"RTN","MAGJMN1",262,0)
 I 'GO G BGCSTOP:RETRY
"RTN","MAGJMN1",263,0)
 I 'GO,+$G(MAGJKIDS) W !!,*7," * * * Exiting out of patch installation * * * ",! H 3 S XPDQUIT=1
"RTN","MAGJMN1",264,0)
 Q
"RTN","MAGJMN1",265,0)
BGCSTRT ; re-enable Background Compile
"RTN","MAGJMN1",266,0)
 I $D(^MAG(2006.69,"BGSTOP")) S X=^("BGSTOP") W " ... Enabling background compile ."
"RTN","MAGJMN1",267,0)
 E  Q
"RTN","MAGJMN1",268,0)
 S ^MAG(2006.69,1,0)=X
"RTN","MAGJMN1",269,0)
 K ^MAG(2006.69,"BGSTOP")
"RTN","MAGJMN1",270,0)
 W !!,"Background Compile Enabled.",! H 3
"RTN","MAGJMN1",271,0)
 Q
"RTN","MAGJMN1",272,0)
 ;
"RTN","MAGJMN1",273,0)
END ;
"RTN","MAGJTU4V")
0^7^B4996119
"RTN","MAGJTU4V",1,0)
MAGJTU4V ;WOIFO/MAT - VERSION CONTROL (VISTARAD) ; 8-JUN-2010 3:18pm
"RTN","MAGJTU4V",2,0)
 ;;3.0;IMAGING;**90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJTU4V",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJTU4V",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJTU4V",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJTU4V",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJTU4V",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJTU4V",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJTU4V",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJTU4V",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJTU4V",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJTU4V",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJTU4V",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJTU4V",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJTU4V",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJTU4V",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJTU4V",17,0)
 ;;
"RTN","MAGJTU4V",18,0)
 ; This routine contains the version control code and data specific
"RTN","MAGJTU4V",19,0)
 ; to the VistARad application. DO NOT ADD ANYTHING ELSE!
"RTN","MAGJTU4V",20,0)
 Q
"RTN","MAGJTU4V",21,0)
 ;
"RTN","MAGJTU4V",22,0)
CLVERCT ;***** VERSION CONTROL TABLE FOR THE VistARad CLIENTS
"RTN","MAGJTU4V",23,0)
 ;;==================================================================
"RTN","MAGJTU4V",24,0)
 ;;| Version |Build|Seq #|                Comment                   |
"RTN","MAGJTU4V",25,0)
 ;;|---------+-----+------------------------------------------------|
"RTN","MAGJTU4V",26,0)
 ;;| 3.0.90  |   9 |  66 | Jul 2010 *Projected Seq # & Release      |
"RTN","MAGJTU4V",27,0)
 ;;| 3.0.101 |  10 |  61 | Feb 2010                                 |
"RTN","MAGJTU4V",28,0)
 ;;| 3.0.76  |  14 |  52 | Jan 2008                                 |
"RTN","MAGJTU4V",29,0)
 ;;==================================================================
"RTN","MAGJTU4V",30,0)
 ;
"RTN","MAGJTU4V",31,0)
 ; Each row of the version control table contains the version and
"RTN","MAGJTU4V",32,0)
 ; build number of a supported client. Released patches must also
"RTN","MAGJTU4V",33,0)
 ; indicate the sequential numbers.
"RTN","MAGJTU4V",34,0)
 ;
"RTN","MAGJTU4V",35,0)
 ; Sort order of the rows does not matter. However, the reversed
"RTN","MAGJTU4V",36,0)
 ; order of patch sequential numbers is recommended.
"RTN","MAGJTU4V",37,0)
 ;
"RTN","MAGJTU4V",38,0)
 Q
"RTN","MAGJTU4V",39,0)
 ;
"RTN","MAGJTU4V",40,0)
 ;***** ADDS A CLIENT-SPECIFIC WARNING (IF NECESSARY)
"RTN","MAGJTU4V",41,0)
 ;
"RTN","MAGJTU4V",42,0)
 ; .MAGBUF       Reference to a local array that the warning text
"RTN","MAGJTU4V",43,0)
 ;               is returned to. It is appended to the RPC result
"RTN","MAGJTU4V",44,0)
 ;               array by the caller (WARNING^MAGGTU41).
"RTN","MAGJTU4V",45,0)
 ;
"RTN","MAGJTU4V",46,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGJTU4V",47,0)
 ;
"RTN","MAGJTU4V",48,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGJTU4V",49,0)
 ;
"RTN","MAGJTU4V",50,0)
 ; Notes
"RTN","MAGJTU4V",51,0)
 ; =====
"RTN","MAGJTU4V",52,0)
 ;
"RTN","MAGJTU4V",53,0)
 ; If the RPC result array already contains an error message that
"RTN","MAGJTU4V",54,0)
 ; will terminate the client, application, this procedure is not
"RTN","MAGJTU4V",55,0)
 ; called.
"RTN","MAGJTU4V",56,0)
 ;
"RTN","MAGJTU4V",57,0)
WARNING(MAGBUF,CLVER,CVRC) ;
"RTN","MAGJTU4V",58,0)
 Q
"RTN","MAGJUTL3")
0^8^B113857123
"RTN","MAGJUTL3",1,0)
MAGJUTL3 ;WIRMFO/JHC VistARad subrtns & RPCs ; 24-Mar-2010 2:15 PM
"RTN","MAGJUTL3",2,0)
 ;;3.0;IMAGING;**16,9,22,18,65,76,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJUTL3",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",17,0)
 ;;
"RTN","MAGJUTL3",18,0)
 Q
"RTN","MAGJUTL3",19,0)
 ;RPC Entry points:
"RTN","MAGJUTL3",20,0)
 ; LISTINF--Custom list info
"RTN","MAGJUTL3",21,0)
 ; LOGOFF--update session file
"RTN","MAGJUTL3",22,0)
 ; CACHEQ--init session data
"RTN","MAGJUTL3",23,0)
 ; PINF1--Patient info
"RTN","MAGJUTL3",24,0)
 ; USERINF2--P18 inits for the session
"RTN","MAGJUTL3",25,0)
 ;Subrtn EPs:
"RTN","MAGJUTL3",26,0)
 ; LOG--Upd image access log
"RTN","MAGJUTL3",27,0)
 ; MAGJOBNC--inits for non-client sessions
"RTN","MAGJUTL3",28,0)
 ; USERKEYS--user key info
"RTN","MAGJUTL3",29,0)
 ; USERINF--user info
"RTN","MAGJUTL3",30,0)
 ;
"RTN","MAGJUTL3",31,0)
LISTINF(MAGGRY) ; RPC: MAGJ CUSTOM LISTS
"RTN","MAGJUTL3",32,0)
 ;  get Exam List data
"RTN","MAGJUTL3",33,0)
 ; Return in ^TMP($J,"MAGJLSTINF",0:N)
"RTN","MAGJUTL3",34,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",35,0)
 ;   1:n)= Button Label^List #^Button Hints^List Type
"RTN","MAGJUTL3",36,0)
 ;
"RTN","MAGJUTL3",37,0)
 ; MAGGRY holds $NA ref to ^TMP for return message
"RTN","MAGJUTL3",38,0)
 ;   all refs to MAGGRY use SS indirection
"RTN","MAGJUTL3",39,0)
 ;
"RTN","MAGJUTL3",40,0)
 ; GLB has $NA ref to ^MAG(2006.631), Custom Lists
"RTN","MAGJUTL3",41,0)
 ;   refs to GLB use SS indirection to get data from this file
"RTN","MAGJUTL3",42,0)
 ;
"RTN","MAGJUTL3",43,0)
 S X="ERR1^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",44,0)
 N D0,GLB,INF,MAGLST,NAM,T
"RTN","MAGJUTL3",45,0)
 S MAGLST="MAGJLSTINF"
"RTN","MAGJUTL3",46,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY S @MAGGRY@(0)=0
"RTN","MAGJUTL3",47,0)
 S GLB=$NA(^MAG(2006.631)),NAM=""
"RTN","MAGJUTL3",48,0)
 F  S NAM=$O(@GLB@("B",NAM)) Q:NAM=""  S D0="" D
"RTN","MAGJUTL3",49,0)
 . S D0=$O(@GLB@("B",NAM,D0)) Q:'D0  D
"RTN","MAGJUTL3",50,0)
 . . S X=$G(@GLB@(D0,0)) Q:($P(X,U,2)>9000)!'$P(X,U,6)  ; List Active & User-defined
"RTN","MAGJUTL3",51,0)
 . . S INF="" F I=1:1 S T=$P("7^2^1^3",U,I) Q:T=""  S Y=$P(X,U,T) Q:Y=""  S $P(INF,U,I)=Y
"RTN","MAGJUTL3",52,0)
 . . Q:T'=""  ; req'd fields not all there
"RTN","MAGJUTL3",53,0)
 . . S T=@MAGGRY@(0)+1,^(0)=T,^(T)=INF ; add entry to reply
"RTN","MAGJUTL3",54,0)
 Q
"RTN","MAGJUTL3",55,0)
 ;
"RTN","MAGJUTL3",56,0)
LOG(ACTION,LOGDATA) ; Log exam access
"RTN","MAGJUTL3",57,0)
 N PTCT,TXT,RADFN,MAGIEN,NIMGS,REMOTE
"RTN","MAGJUTL3",58,0)
 S RADFN=$P(LOGDATA,U),MAGIEN=$P(LOGDATA,U,2),NIMGS=$P(LOGDATA,U,3),REMOTE=$P(LOGDATA,U,4)
"RTN","MAGJUTL3",59,0)
 I ACTION="" S ACTION="UNKNOWN"  ; Should never happen
"RTN","MAGJUTL3",60,0)
 S PTCT=RADFN'=$G(MAGJOB("LASTPT",ACTION))
"RTN","MAGJUTL3",61,0)
 I PTCT S MAGJOB("LASTPT",ACTION)=RADFN
"RTN","MAGJUTL3",62,0)
 S TXT=ACTION_U_RADFN_U_MAGIEN_U_U_U_NIMGS
"RTN","MAGJUTL3",63,0)
 S TXT=TXT_U_PTCT_U_$S(+MAGJOB("USER",1):1,1:0)_U_REMOTE
"RTN","MAGJUTL3",64,0)
 ;
"RTN","MAGJUTL3",65,0)
 ;=== Log to Imaging Windows Sessions file (#2006.82).
"RTN","MAGJUTL3",66,0)
 D ACTION^MAGGTAU(TXT,1)
"RTN","MAGJUTL3",67,0)
 ;
"RTN","MAGJUTL3",68,0)
 ;=== Log to Mag Log
"RTN","MAGJUTL3",69,0)
 I REMOTE S ACTION=ACTION_"/REM"
"RTN","MAGJUTL3",70,0)
 D ENTRY^MAGLOG(ACTION,+DUZ,MAGIEN,"VRAD:"_MAGJOB("VRVERSION"),RADFN,NIMGS)
"RTN","MAGJUTL3",71,0)
 Q
"RTN","MAGJUTL3",72,0)
 ;
"RTN","MAGJUTL3",73,0)
LOGOFF(MAGGRY,DATA) ; RPC: MAGJ LOGOFF
"RTN","MAGJUTL3",74,0)
 ;
"RTN","MAGJUTL3",75,0)
 ;=== Update Imaging Windows Sessions file: logoff time & session entry closed.
"RTN","MAGJUTL3",76,0)
 D LOGOFF^MAGGTAU(.MAGGRY)
"RTN","MAGJUTL3",77,0)
 Q
"RTN","MAGJUTL3",78,0)
 ;
"RTN","MAGJUTL3",79,0)
CACHEQ(MAGGRY,DATA) ; RPC: MAGJ CACHELOCATION
"RTN","MAGJUTL3",80,0)
 ; some logon inits & get alternate paths for Remote Reading
"RTN","MAGJUTL3",81,0)
 ; input in DATA:
"RTN","MAGJUTL3",82,0)
 ;  - WSLOC   = WS Loc'n
"RTN","MAGJUTL3",83,0)
 ;  - VRADVER = Client Vs -- p32 ONLY
"RTN","MAGJUTL3",84,0)
 ;  - OSVER   = Client OS Vs -- p32 ONLY
"RTN","MAGJUTL3",85,0)
 ; Return in ^TMP($J,"MAGJCACHE",0:N) (@MAGGRY)
"RTN","MAGJUTL3",86,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",87,0)
 ;   1:n)= PhysName^Subdirectory^HashFlag^Username^Password^AltPath_IEN
"RTN","MAGJUTL3",88,0)
 ;
"RTN","MAGJUTL3",89,0)
 ; MAGGRY holds $NA reference to ^TMP for return message
"RTN","MAGJUTL3",90,0)
 ;   refs to MAGGRY use SS indirection
"RTN","MAGJUTL3",91,0)
 ;
"RTN","MAGJUTL3",92,0)
 ; Also builds local array:  p32/p18 compatibility: Some of this is moved to userinf2 below
"RTN","MAGJUTL3",93,0)
 ;  MAGJOB("LOC",NetworkLocnIEN)=Site Abbrev
"RTN","MAGJUTL3",94,0)
 ;     ("REMOTE")=1/0  (T/F for "User is Remote")
"RTN","MAGJUTL3",95,0)
 ;     ("REMOTESCREEN")=0/1  (init User-switchable Remote Screening--P18 use only)
"RTN","MAGJUTL3",96,0)
 ;     ("WSLOC")=WS Loc'n String
"RTN","MAGJUTL3",97,0)
 ;     ("WSLOCTYP")=WS Loc'n Type
"RTN","MAGJUTL3",98,0)
 ;     ("WSNAME")=WS ID
"RTN","MAGJUTL3",99,0)
 ;     ("VRVERSION")=VRAD Vs
"RTN","MAGJUTL3",100,0)
 ;     ("OSVER")=O/S Vs
"RTN","MAGJUTL3",101,0)
 ;     ("ALTPATH")=1/0 ^ 1/0 (T/F Alt Paths are defined 
"RTN","MAGJUTL3",102,0)
 ;               ^ Alt Paths Enabled/Disabled for most recent exam)
"RTN","MAGJUTL3",103,0)
 ;
"RTN","MAGJUTL3",104,0)
 S X="ERR1^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",105,0)
 ;
"RTN","MAGJUTL3",106,0)
 N I,MAGLST,REPLY,TMP,WSLOC,XX,VRADVER,OSVER,DIQUIET,ALTIEN
"RTN","MAGJUTL3",107,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL3",108,0)
 S REPLY=0,MAGLST="MAGJCACHE"
"RTN","MAGJUTL3",109,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY
"RTN","MAGJUTL3",110,0)
 S WSLOC=$$UPCASE($P(DATA,U)),VRADVER=$P(DATA,U,2),OSVER=$P(DATA,U,3)
"RTN","MAGJUTL3",111,0)
 I '$D(MAGJOB("OSVER")) D  ; ID p32 initialization
"RTN","MAGJUTL3",112,0)
 . S MAGJOB("OSVER")=$S(OSVER]"":OSVER,1:"UNK")
"RTN","MAGJUTL3",113,0)
 . S MAGJOB("VRVERSION")=$S(VRADVER]"":VRADVER,1:"UNK")
"RTN","MAGJUTL3",114,0)
 . D MAGJOB ; p32 init of VRAD
"RTN","MAGJUTL3",115,0)
 ; get alt paths location info
"RTN","MAGJUTL3",116,0)
 S MAGJOB("WSLOC")=WSLOC,MAGJOB("REMOTE")=0
"RTN","MAGJUTL3",117,0)
 S MAGJOB("REMOTESCREEN")=+$P($G(^MAG(2006.69,1,0)),U,10)
"RTN","MAGJUTL3",118,0)
 I WSLOC]"" D
"RTN","MAGJUTL3",119,0)
 . S X=$P($G(^MAG(2006.1,+MAGJOB("SITEP"),0)),U,9)
"RTN","MAGJUTL3",120,0)
 . I X]"",(X'=WSLOC) S MAGJOB("REMOTE")=1
"RTN","MAGJUTL3",121,0)
 . E  Q
"RTN","MAGJUTL3",122,0)
 . D LIST^MAGBRTLD(WSLOC,.TMP)
"RTN","MAGJUTL3",123,0)
 . I TMP S REPLY=TMP,MAGJOB("ALTPATH")=$G(MAGJOB("ALTPATH"),"1^1") F I=1:1:TMP D
"RTN","MAGJUTL3",124,0)
 . . S ALTIEN=$P(TMP(I),U,7)
"RTN","MAGJUTL3",125,0)
 . . S XX=$P(TMP(I),U,1,5),X=$P(XX,U,3),$P(XX,U,3)=$S(X="Y":1,1:0)
"RTN","MAGJUTL3",126,0)
 . . S X=$P(XX,U,4),$P(XX,U,4)=$P(XX,U,5),$P(XX,U,5)=X,$P(XX,U,6)=ALTIEN
"RTN","MAGJUTL3",127,0)
 . . S @MAGGRY@(I)=XX,MAGJOB("LOC",ALTIEN)=$P(TMP(I),U,6)
"RTN","MAGJUTL3",128,0)
 I '$D(MAGJOB("ALTPATH")) S MAGJOB("ALTPATH")="0^0"
"RTN","MAGJUTL3",129,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL3",130,0)
CACHEQZ Q
"RTN","MAGJUTL3",131,0)
 ;
"RTN","MAGJUTL3",132,0)
MAGJOBNC ; EP for Prefetch/Bkgnd calls (NOT a Vrad Client)
"RTN","MAGJUTL3",133,0)
 N NOTCLIEN S NOTCLIEN=1
"RTN","MAGJUTL3",134,0)
 D MAGJOB
"RTN","MAGJUTL3",135,0)
 Q
"RTN","MAGJUTL3",136,0)
 ;
"RTN","MAGJUTL3",137,0)
MAGJOB ; Init magjob array
"RTN","MAGJUTL3",138,0)
 N T,RIST
"RTN","MAGJUTL3",139,0)
 I $G(MAGJOB("VRVERSION")) S X=MAGJOB("VRVERSION")
"RTN","MAGJUTL3",140,0)
 E  S X="" ; non-client processes assume post-P32 logic
"RTN","MAGJUTL3",141,0)
 S MAGJOB("P32")=(X="3.0.41.17") ; P32 Client?
"RTN","MAGJUTL3",142,0)
 I MAGJOB("P32") D P32STOP^MAGJUTL5(.X) S MAGJOB("P32STOP")=X  ; STOP support when P76 releases
"RTN","MAGJUTL3",143,0)
 D USERKEYS
"RTN","MAGJUTL3",144,0)
 S MAGJOB("CONSOLIDATED")=($G(^MAG(2006.1,"CONSOLIDATED"))="YES")
"RTN","MAGJUTL3",145,0)
 S MAGJOB("SITEP")=$$IMGSIT^MAGJUTL1(DUZ(2),1)  ; Site Param ien
"RTN","MAGJUTL3",146,0)
 S RIST="" F X="S","R" I $D(^VA(200,"ARC",X,DUZ)) S RIST=X Q
"RTN","MAGJUTL3",147,0)
 S RIST=$S(RIST="S":15,RIST="R":12,1:0) ; Staff/Resident/Non rist
"RTN","MAGJUTL3",148,0)
 S MAGJOB("USER",1)=RIST_U_$$USERINF(+DUZ,".01;1") ; RIST_Type^NAME^INI
"RTN","MAGJUTL3",149,0)
 S X=$P($G(IO("CLNM")),"."),MAGJOB("WSNAME")=$S(X]"":X,1:"VistaradWS")
"RTN","MAGJUTL3",150,0)
 K MAGJOB("DIVSCRN") I MAGJOB("CONSOLIDATED") D
"RTN","MAGJUTL3",151,0)
 . ; include logon DIV, other DIVs to screen Unread Lists & Locking
"RTN","MAGJUTL3",152,0)
 . I $G(DUZ(2))]"" S MAGJOB("DIVSCRN",DUZ(2))=""
"RTN","MAGJUTL3",153,0)
 . S DIV=""
"RTN","MAGJUTL3",154,0)
 . I DUZ(2)'=$P(MAGJOB("SITEP"),U,3) D  ; Assoc DIV
"RTN","MAGJUTL3",155,0)
 . . S IEN=$O(^MAG(2006.1,+MAGJOB("SITEP"),"INSTS","B",DUZ(2),0))
"RTN","MAGJUTL3",156,0)
 . . I IEN F  S DIV=$O(^MAG(2006.1,+MAGJOB("SITEP"),"INSTS",IEN,201,"B",DIV)) Q:'DIV  S MAGJOB("DIVSCRN",DIV)=""
"RTN","MAGJUTL3",157,0)
 . E  D  ; Parent DIV
"RTN","MAGJUTL3",158,0)
 . . F  S DIV=$O(^MAG(2006.1,+MAGJOB("SITEP"),201,"B",DIV)) Q:'DIV  S MAGJOB("DIVSCRN",DIV)=""
"RTN","MAGJUTL3",159,0)
 S MAGJOB("WSLOCTYP")=$S(+MAGJOB("USER",1):"RAD",1:"Non-Rad") ; USer is Rist/Not
"RTN","MAGJUTL3",160,0)
 I '$D(MAGJOB("WRKSIEN")) D
"RTN","MAGJUTL3",161,0)
 . Q:+$G(NOTCLIEN)  ; proceed only if Vrad Client is attached
"RTN","MAGJUTL3",162,0)
 . S X=MAGJOB("WSNAME")
"RTN","MAGJUTL3",163,0)
 . S $P(X,U,4)=MAGJOB("WSLOCTYP")
"RTN","MAGJUTL3",164,0)
 . S $P(X,U,8)=1                     ; StartupMode=Normal.
"RTN","MAGJUTL3",165,0)
 . S $P(X,U,9)=MAGJOB("OSVER")
"RTN","MAGJUTL3",166,0)
 . S $P(X,U,10)=MAGJOB("VRVERSION")
"RTN","MAGJUTL3",167,0)
 . S $P(X,U,17)=MAGJOB("VRBLDDTTM")
"RTN","MAGJUTL3",168,0)
 . D UPD^MAGGTAU(.Y,X)
"RTN","MAGJUTL3",169,0)
 . D REMLOCK^MAGJEX1B ; put here to only run 1x/ login
"RTN","MAGJUTL3",170,0)
 Q
"RTN","MAGJUTL3",171,0)
 ;
"RTN","MAGJUTL3",172,0)
USERINF(DUZ,FLDS) ; get data from user file
"RTN","MAGJUTL3",173,0)
 I FLDS=""!'DUZ Q ""
"RTN","MAGJUTL3",174,0)
 N I,RSL,T S RSL=""
"RTN","MAGJUTL3",175,0)
 D GETS^DIQ(200,+DUZ,FLDS,"E","T")
"RTN","MAGJUTL3",176,0)
 S T=+DUZ_","
"RTN","MAGJUTL3",177,0)
 F I=1:1:$L(FLDS,";") S RSL=RSL_$S(RSL="":"",1:U)_T(200,T,$P(FLDS,";",I),"E")
"RTN","MAGJUTL3",178,0)
 Q RSL
"RTN","MAGJUTL3",179,0)
 ;
"RTN","MAGJUTL3",180,0)
USERKEYS ; Store Security Keys in MagJob
"RTN","MAGJUTL3",181,0)
 N I,X,Y
"RTN","MAGJUTL3",182,0)
 N MAGKS ; keys to send to XUS KEY CHECK
"RTN","MAGJUTL3",183,0)
 N MAGKG ; returned
"RTN","MAGJUTL3",184,0)
 K MAGJOB("KEYS")
"RTN","MAGJUTL3",185,0)
 S X="MAGJ",I=0
"RTN","MAGJUTL3",186,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,4)'="MAGJ"  D
"RTN","MAGJUTL3",187,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGJUTL3",188,0)
 I '$D(MAGKS) Q
"RTN","MAGJUTL3",189,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGJUTL3",190,0)
 S I=0 F  S I=$O(MAGKG(I)) Q:'I  I MAGKG(I) S MAGJOB("KEYS",MAGKS(I))=""
"RTN","MAGJUTL3",191,0)
 Q
"RTN","MAGJUTL3",192,0)
 ;
"RTN","MAGJUTL3",193,0)
PINF1(MAGGRY,MAGDFN) ;RPC Call MAGJ PT INFO -- Get pt info
"RTN","MAGJUTL3",194,0)
 S X="ERR3^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",195,0)
 D INFO^MAGGTPT1(.MAGGRY,MAGDFN_"^1") ; 1=Don't log to session file
"RTN","MAGJUTL3",196,0)
 Q
"RTN","MAGJUTL3",197,0)
 ; 
"RTN","MAGJUTL3",198,0)
 ;+++++ INITIALIZE SESSION (VERSION CHK, DISPLAY RES CHK, COLLECT USER INFO).
"RTN","MAGJUTL3",199,0)
 ; RPC: MAGJ USER2
"RTN","MAGJUTL3",200,0)
 ; 
"RTN","MAGJUTL3",201,0)
 ; MAGGRY      Reference to a variable naming the global to store returned data
"RTN","MAGJUTL3",202,0)
 ; 
"RTN","MAGJUTL3",203,0)
 ; DATA        Information about the client and its workstation.
"RTN","MAGJUTL3",204,0)
 ;               ^01: MAMMORES -- Screen resolution of main viewer display:
"RTN","MAGJUTL3",205,0)
 ; 
"RTN","MAGJUTL3",206,0)
 ;                       format is X_"x"_Y_","_ColorType (e.g., 2048x2580,GRAY)
"RTN","MAGJUTL3",207,0)
 ;                       where X,Y are resolutions & ColorType={GRAY, COLOR}.
"RTN","MAGJUTL3",208,0)
 ;                
"RTN","MAGJUTL3",209,0)
 ;               ^02: Client Vs ....... Client software version for checking.
"RTN","MAGJUTL3",210,0)
 ;               ^03: Client O/S Vs ... Client OS version for logging.
"RTN","MAGJUTL3",211,0)
 ;               ^04: ClientBuildDayTime ..... for logging.
"RTN","MAGJUTL3",212,0)
 ;
"RTN","MAGJUTL3",213,0)
 ; Return Values
"RTN","MAGJUTL3",214,0)
 ; =============
"RTN","MAGJUTL3",215,0)
 ; 
"RTN","MAGJUTL3",216,0)
 ; ^(0)
"RTN","MAGJUTL3",217,0)
 ;     |01
"RTN","MAGJUTL3",218,0)
 ;        ^01: 1/0 -- Success/Fail flag for version check.
"RTN","MAGJUTL3",219,0)
 ;        ^02: 
"RTN","MAGJUTL3",220,0)
 ;            ~01: code ... 4=fail.
"RTN","MAGJUTL3",221,0)
 ;            ~02: Msg .... Message to display if fail.
"RTN","MAGJUTL3",222,0)
 ;     |02
"RTN","MAGJUTL3",223,0)
 ;        ^01: DUZ
"RTN","MAGJUTL3",224,0)
 ;        ^02: NAME
"RTN","MAGJUTL3",225,0)
 ;        ^03: INITIALS
"RTN","MAGJUTL3",226,0)
 ;        ^04: REQFLAG .... 1/0 Enable/Disable Requisition for non-rad staff
"RTN","MAGJUTL3",227,0)
 ;        ^05: SVERSION ... VistARad Server Version
"RTN","MAGJUTL3",228,0)
 ;        ---- Patch MAG*3*101 ----
"RTN","MAGJUTL3",229,0)
 ;        ^06: DICTPREF ... 1/0 ENA DICT PREF-YES ALL LOCKED (File 2006.69,13)
"RTN","MAGJUTL3",230,0)
 ;        ---- Patch MAG*3*90 ----
"RTN","MAGJUTL3",231,0)
 ;        ^07: SSN
"RTN","MAGJUTL3",232,0)
 ;        ^08: UserLocalStationNumber
"RTN","MAGJUTL3",233,0)
 ;        ^09: LocalPrimaryDivision
"RTN","MAGJUTL3",234,0)
 ;        ^10: PrimarySiteStationNumber
"RTN","MAGJUTL3",235,0)
 ;        ^11: SiteServiceURL
"RTN","MAGJUTL3",236,0)
 ;        ^12: SiteCode       
"RTN","MAGJUTL3",237,0)
 ; ^(1)
"RTN","MAGJUTL3",238,0)
 ;     ^01: UserName ... Network UserName
"RTN","MAGJUTL3",239,0)
 ;     ^02: PSW ........ Network Password
"RTN","MAGJUTL3",240,0)
 ;     ^03: UserType ... 3=Staff R'ist, 2=Resident R'ist, 1=Rad Tech, 0=Non-Rad
"RTN","MAGJUTL3",241,0)
 ;     ^04: SYSADMIN ... 1/0 1=user has System User privileges
"RTN","MAGJUTL3",242,0)
 ;
"RTN","MAGJUTL3",243,0)
 ; ^(2:N)   Security Keys
"RTN","MAGJUTL3",244,0)
 ; ^(N+1:M) Mammography display message data
"RTN","MAGJUTL3",245,0)
 ;
"RTN","MAGJUTL3",246,0)
USERINF2(MAGGRY,DATA) ; RPC: MAGJ USER2--get user info
"RTN","MAGJUTL3",247,0)
 S X="ERR2^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",248,0)
 K MAGGRY S MAGGRY(0)="",MAGGRY(1)=""
"RTN","MAGJUTL3",249,0)
 I +$G(DUZ)=0 S MAGGRY(0)="0^4~DUZ Undefined, Null or Zero|" Q
"RTN","MAGJUTL3",250,0)
 N I,J,K,Y,REQFLAG,VRADVER,OSVER,RADTECH,PLACE,REPLY,DICTPREF,MAMMORES,ICNT,MSG
"RTN","MAGJUTL3",251,0)
 S MAMMORES=$P(DATA,U),VRADVER=$P(DATA,U,2),OSVER=$P(DATA,U,3)
"RTN","MAGJUTL3",252,0)
 D CHKVER^MAGJUTL5(.REPLY,VRADVER,.PLACE,.SVERSION)
"RTN","MAGJUTL3",253,0)
 I 'REPLY S MAGGRY(0)=REPLY_"|^^^^",MAGGRY(1)="^^^" G USERIN2Z ; Version check or PLACE failed
"RTN","MAGJUTL3",254,0)
 S RADTECH=""
"RTN","MAGJUTL3",255,0)
 S MAGJOB("OSVER")=$S(OSVER]"":OSVER,1:"UNK")   ; IDs P18 initialization; cf cacheq ep above
"RTN","MAGJUTL3",256,0)
 S MAGJOB("VRVERSION")=$S(VRADVER]"":VRADVER,1:"UNK")
"RTN","MAGJUTL3",257,0)
 S MAGJOB("VRBLDDTTM")=$P(DATA,U,4)
"RTN","MAGJUTL3",258,0)
 S MAGJOB("VSVERSION")=SVERSION
"RTN","MAGJUTL3",259,0)
 D MAGJOB
"RTN","MAGJUTL3",260,0)
 ;
"RTN","MAGJUTL3",261,0)
 ;=== Enable/Disable Requisition if not a radiology user
"RTN","MAGJUTL3",262,0)
 S REQFLAG=1
"RTN","MAGJUTL3",263,0)
 I 'MAGJOB("USER",1) D  ; not a rist
"RTN","MAGJUTL3",264,0)
 . I $D(^VA(200,"ARC","T",+DUZ)) S RADTECH=1 Q  ; Rad Tech OK
"RTN","MAGJUTL3",265,0)
 . S X=+$P($G(^MAG(2006.69,1,0)),U,16)
"RTN","MAGJUTL3",266,0)
 . I X S REQFLAG=0 ; Disable Req
"RTN","MAGJUTL3",267,0)
 S DICTPREF=+$P($G(^MAG(2006.69,1,0)),U,17)
"RTN","MAGJUTL3",268,0)
 S MAGGRY(0)=REPLY_"|"_DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)_U_REQFLAG_U_SVERSION_U_DICTPREF
"RTN","MAGJUTL3",269,0)
 ;
"RTN","MAGJUTL3",270,0)
 ;=== Add "^"-pieces 7:12 for ViX (MAG*3*90).
"RTN","MAGJUTL3",271,0)
 S MAGGRY(0)=MAGGRY(0)_U_$$GET1^DIQ(200,DUZ_",",9) ;...SSN
"RTN","MAGJUTL3",272,0)
 S MAGGRY(0)=MAGGRY(0)_U_$$GET1^DIQ(4,DUZ(2),99,"E") ;.UserLocalStationNumber
"RTN","MAGJUTL3",273,0)
 S MAGGRY(0)=MAGGRY(0)_U_$P($$SITE^VASITE(),U) ;.......LocalPrimaryDivision
"RTN","MAGJUTL3",274,0)
 S MAGGRY(0)=MAGGRY(0)_U_$P($$SITE^VASITE(),U,3) ;.....PrimarySiteStationNumber
"RTN","MAGJUTL3",275,0)
 ;
"RTN","MAGJUTL3",276,0)
 ;=== Lookup SiteServiceURL.
"RTN","MAGJUTL3",277,0)
 N SSUNC,VIXPTR
"RTN","MAGJUTL3",278,0)
 S VIXPTR=$P($G(^MAG(2006.1,+MAGJOB("SITEP"),"NET")),"^",5)
"RTN","MAGJUTL3",279,0)
 ;
"RTN","MAGJUTL3",280,0)
 ;=== Return UNC only if OpStatus is 'online'.
"RTN","MAGJUTL3",281,0)
 I VIXPTR,+$P($G(^MAG(2005.2,VIXPTR,0)),"^",6) D
"RTN","MAGJUTL3",282,0)
 . S SSUNC=$P($G(^MAG(2005.2,VIXPTR,0)),"^",2)
"RTN","MAGJUTL3",283,0)
 S MAGGRY(0)=MAGGRY(0)_U_$G(SSUNC) ;...................SiteServiceURL
"RTN","MAGJUTL3",284,0)
 S MAGGRY(0)=MAGGRY(0)_U_$P(MAGJOB("SITEP"),U,2) ;.....SiteCode
"RTN","MAGJUTL3",285,0)
 ;
"RTN","MAGJUTL3",286,0)
 ;=== Network UserName and PSW
"RTN","MAGJUTL3",287,0)
 S MAGGRY(1)=$P($G(^MAG(2006.1,PLACE,"NET")),U,1,2)
"RTN","MAGJUTL3",288,0)
 S X=+MAGJOB("USER",1),X=$S(X=15:3,X=12:2,+RADTECH:1,1:0)
"RTN","MAGJUTL3",289,0)
 S MAGGRY(1)=MAGGRY(1)_U_X_U_$D(MAGJOB("KEYS","MAGJ SYSTEM USER"))
"RTN","MAGJUTL3",290,0)
 S MAGGRY(2)="*KEYS",X="" F ICNT=3:1 S X=$O(MAGJOB("KEYS",X)) Q:X=""  S MAGGRY(ICNT)=X
"RTN","MAGJUTL3",291,0)
 S MAGGRY(ICNT)="*END"
"RTN","MAGJUTL3",292,0)
 S ICNT=ICNT+1,MAGGRY(ICNT)="*MAMMO"
"RTN","MAGJUTL3",293,0)
 S MSG=$$MAMMOCHK(MAMMORES)
"RTN","MAGJUTL3",294,0)
 I MSG]"" S ICNT=ICNT+1,MAGGRY(ICNT)=MSG
"RTN","MAGJUTL3",295,0)
 S ICNT=ICNT+1,MAGGRY(ICNT)="*END"
"RTN","MAGJUTL3",296,0)
USERIN2Z Q
"RTN","MAGJUTL3",297,0)
 ;
"RTN","MAGJUTL3",298,0)
MAMMOCHK(X) ; return true if the screen resolution is 5 megapixels, and grayscale
"RTN","MAGJUTL3",299,0)
 ; note--as of 4/09 there is only one size display for mammo interpretation
"RTN","MAGJUTL3",300,0)
 ; and the resolution is 2048x2560, or 5,242,880 pixels; the algorithm allows 
"RTN","MAGJUTL3",301,0)
 ; a little wiggle room, but excludes a 6MP display.  Can update when real life changes
"RTN","MAGJUTL3",302,0)
 N T,XX,YY,RES,MSG
"RTN","MAGJUTL3",303,0)
 S X=$$UPCASE(X)
"RTN","MAGJUTL3",304,0)
 S T=0
"RTN","MAGJUTL3",305,0)
 I X?4N1"X"4N1","4.5A D
"RTN","MAGJUTL3",306,0)
 . S XX=+X,YY=+$P(X,"X",2),C=$P(X,",",2)
"RTN","MAGJUTL3",307,0)
 . S RES=XX*YY I RES>5000000,(RES<5314800) S T=1 ; resolution OK
"RTN","MAGJUTL3",308,0)
 . I T S T=(C="GRAY") ; and, is grayscale
"RTN","MAGJUTL3",309,0)
 I T S MSG="Primary diagnostic interpretation of mammography images may only be performed on medical devices that are cleared for that intended use, and that use display hardware conforming to technical specifications set by the FDA."
"RTN","MAGJUTL3",310,0)
 E  S MSG="This device does not conform to technical specifications set by the FDA for primary diagnostic interpretation of mammography images."
"RTN","MAGJUTL3",311,0)
 Q:$Q MSG Q
"RTN","MAGJUTL3",312,0)
 ;
"RTN","MAGJUTL3",313,0)
UPCASE(X) ; strip spaces, and cx to uppercase
"RTN","MAGJUTL3",314,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz ","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MAGJUTL3",315,0)
 ;
"RTN","MAGJUTL3",316,0)
ERR1 N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL3",317,0)
ERR2 N ERR S ERR=$$EC^%ZOSV S MAGGRY(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL3",318,0)
ERR3 N ERR S ERR=$$EC^%ZOSV S MAGGRY="0^4~"_ERR
"RTN","MAGJUTL3",319,0)
ERR D @^%ZOSF("ERRTN")
"RTN","MAGJUTL3",320,0)
 Q:$Q 1  Q
"RTN","MAGJUTL3",321,0)
 ;
"RTN","MAGJUTL3",322,0)
END Q  ; 
"RTN","MAGJUTL4")
0^9^B148832735
"RTN","MAGJUTL4",1,0)
MAGJUTL4 ;WIRMFO/JHC VistARad subroutines for RPC calls ; 5-Mar-2010 4:18 PM
"RTN","MAGJUTL4",2,0)
 ;;3.0;IMAGING;**18,76,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJUTL4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL4",17,0)
 ;;
"RTN","MAGJUTL4",18,0)
 Q
"RTN","MAGJUTL4",19,0)
 ;
"RTN","MAGJUTL4",20,0)
 ;***** Return matching CPT's based on grouping criteria.
"RTN","MAGJUTL4",21,0)
 ; RPC: MAGJ CPTMATCH
"RTN","MAGJUTL4",22,0)
 ;
"RTN","MAGJUTL4",23,0)
CPTGRP(MAGGRY,DATA) ;
"RTN","MAGJUTL4",24,0)
 ; FOR INPUT cpt code, return matching cpt's based on grouping criteria:
"RTN","MAGJUTL4",25,0)
 ; INPUT in DATA: CPT Code ^ Criteria
"RTN","MAGJUTL4",26,0)
 ; Criteria:
"RTN","MAGJUTL4",27,0)
 ;   1=Matching cpt
"RTN","MAGJUTL4",28,0)
 ;   2=Body Part
"RTN","MAGJUTL4",29,0)
 ;   3=Body Part & Modality
"RTN","MAGJUTL4",30,0)
 ;  10=Same CPT (used to return short description only)
"RTN","MAGJUTL4",31,0)
 ; Return: List of CPTs with Short Name:  CPT ^ Short Name
"RTN","MAGJUTL4",32,0)
 ; MAGGRY holds $NA reference to ^TMP for rpc return
"RTN","MAGJUTL4",33,0)
 ;   all ref's to MAGGRY use subscript indirection
"RTN","MAGJUTL4",34,0)
 ;
"RTN","MAGJUTL4",35,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR1^MAGJUTL4"
"RTN","MAGJUTL4",36,0)
 N REPLY,DIQUIET,CPT,CRIT,CT,MAGLST,NOD,NODLST
"RTN","MAGJUTL4",37,0)
 N MATCHGRP,INDXLST,AND,RET,CPTGLB,CPTIN,CPTIEN,TCPT,CPTFILIEN,CPTFILDAT,IEN
"RTN","MAGJUTL4",38,0)
 ;
"RTN","MAGJUTL4",39,0)
 ; <*> Issue: Unable get specific body part for some non-specific CPTs (e.g., 75774-ANGIO SELECT EA ADD VESSEL-S)
"RTN","MAGJUTL4",40,0)
 ;         --> For these, could just return matching CPTs (or equivalent CPT?)
"RTN","MAGJUTL4",41,0)
 ;
"RTN","MAGJUTL4",42,0)
 ; Produce List of cptiens for each INDX of interest
"RTN","MAGJUTL4",43,0)
 ; AND with next list of cptiens; repeat until no more INDXs
"RTN","MAGJUTL4",44,0)
 ; build output list of CPT codes (w/ short names [optional])
"RTN","MAGJUTL4",45,0)
 ; 
"RTN","MAGJUTL4",46,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",47,0)
 S CT=0,MAGLST="MAGJCPT"
"RTN","MAGJUTL4",48,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY  ; assign MAGGRY value
"RTN","MAGJUTL4",49,0)
 S CPTIN=$P(DATA,U),CRIT=$P(DATA,U,2),CPTIEN=""
"RTN","MAGJUTL4",50,0)
 S REPLY="0^Getting matching CPT info."
"RTN","MAGJUTL4",51,0)
 S:'CRIT CRIT=1 ; default equivalent
"RTN","MAGJUTL4",52,0)
 I '(CRIT=1!(CRIT=2)!(CRIT=3)!(CRIT=10)) S REPLY="0^Invalid cpt lookup criteria ("_DATA_")." G CPTGRPZ
"RTN","MAGJUTL4",53,0)
 I CPTIN="" S REPLY="0^Invalid CPT code ("_DATA_")." G CPTGRPZ
"RTN","MAGJUTL4",54,0)
 S CPTFILDAT=$$CPT^ICPTCOD(CPTIN)
"RTN","MAGJUTL4",55,0)
 I +CPTFILDAT=-1 S CPTFILDAT=""
"RTN","MAGJUTL4",56,0)
 S CPTFILIEN=$P(CPTFILDAT,U)
"RTN","MAGJUTL4",57,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",58,0)
 I CPTFILIEN S CPTIEN=$O(@CPTGLB@("B",CPTFILIEN,""))
"RTN","MAGJUTL4",59,0)
 I 'CPTIEN D  G CPTGRPZ
"RTN","MAGJUTL4",60,0)
 . ; if no entry in CPTGLB, return same CPT
"RTN","MAGJUTL4",61,0)
 . S CT=CT+1,@MAGGRY@(CT)=CPTIN_U_$P(CPTFILDAT,U,3)
"RTN","MAGJUTL4",62,0)
 . I CPTFILIEN S REPLY=CT_U_"1~ "_CT_" CPT name returned for "_CPTIN
"RTN","MAGJUTL4",63,0)
 . E  S REPLY=CT_U_"1~ "_CT_" record returned--no value found for "_CPTIN
"RTN","MAGJUTL4",64,0)
 S X=@CPTGLB@(CPTIEN,0),MATCHGRP=+$P(X,U,4)
"RTN","MAGJUTL4",65,0)
 ;CPTMATCH^BODYPART^MDL
"RTN","MAGJUTL4",66,0)
 I CRIT=2!(CRIT=3) D
"RTN","MAGJUTL4",67,0)
 . S X=0 F  S X=$O(@CPTGLB@(CPTIEN,1,"B",X)) Q:'X  D GETCPTS("BODYPART",X,"",.RET)
"RTN","MAGJUTL4",68,0)
 . I CRIT=3 D
"RTN","MAGJUTL4",69,0)
 . . M AND=RET K RET S X=0
"RTN","MAGJUTL4",70,0)
 . . F  S X=$O(@CPTGLB@(CPTIEN,2,"B",X)) Q:'X  D GETCPTS("MDL",X,.AND,.RET)
"RTN","MAGJUTL4",71,0)
 I CRIT=1 D
"RTN","MAGJUTL4",72,0)
 . I MATCHGRP,(MATCHGRP'=CPTIEN) S RET(MATCHGRP)="" D GETCPTS("CPTMATCH",MATCHGRP,"",.RET)
"RTN","MAGJUTL4",73,0)
 . D GETCPTS("CPTMATCH",CPTIEN,"",.RET)
"RTN","MAGJUTL4",74,0)
 I CRIT=10 ; fall through answers this!
"RTN","MAGJUTL4",75,0)
 I '$D(RET(CPTIEN)) S RET(CPTIEN)="" ; always report back input cpt
"RTN","MAGJUTL4",76,0)
 S IEN=0 F  S IEN=$O(RET(IEN)) Q:'IEN  D
"RTN","MAGJUTL4",77,0)
 . N LIN S X=$G(@CPTGLB@(IEN,0))
"RTN","MAGJUTL4",78,0)
 . Q:'(X]"")  S TCPT=$P(X,U),LIN=$P($$CPT^ICPTCOD(TCPT),U,2,3)
"RTN","MAGJUTL4",79,0)
 . S CT=CT+1,@MAGGRY@(CT)=LIN
"RTN","MAGJUTL4",80,0)
 S REPLY=CT_U_"1~ "_CT_" CPT Matches returned for "_CPTIN
"RTN","MAGJUTL4",81,0)
CPTGRPZ ;
"RTN","MAGJUTL4",82,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL4",83,0)
 Q
"RTN","MAGJUTL4",84,0)
 ;
"RTN","MAGJUTL4",85,0)
GETCPTS(INDEX,VALUE,AND,OUT) ; return a list of CPTIENS in OUT
"RTN","MAGJUTL4",86,0)
 ; if array AND is defined, reply only values contained in AND &  the index
"RTN","MAGJUTL4",87,0)
 N X,GLBREF,CPTIEN
"RTN","MAGJUTL4",88,0)
 S GLBREF=$NA(@CPTGLB@(INDEX,VALUE))
"RTN","MAGJUTL4",89,0)
 S CPTIEN=0
"RTN","MAGJUTL4",90,0)
 I $D(AND)>9 D
"RTN","MAGJUTL4",91,0)
 . F  S CPTIEN=$O(AND(CPTIEN)) Q:CPTIEN=""  I $D(@GLBREF@(CPTIEN)) S OUT(CPTIEN)=""
"RTN","MAGJUTL4",92,0)
 E  F  S CPTIEN=$O(@GLBREF@(CPTIEN)) Q:'CPTIEN  D
"RTN","MAGJUTL4",93,0)
 . S OUT(CPTIEN)=""
"RTN","MAGJUTL4",94,0)
 Q
"RTN","MAGJUTL4",95,0)
 ;
"RTN","MAGJUTL4",96,0)
BODPART(CPTIEN,DLM) ; return DLM-delimited list of body part values for this CPT
"RTN","MAGJUTL4",97,0)
 I +$G(CPTIEN)
"RTN","MAGJUTL4",98,0)
 E  Q ""
"RTN","MAGJUTL4",99,0)
 N LIST,CPTGLB S LIST=""
"RTN","MAGJUTL4",100,0)
 S DLM=$E($G(DLM))
"RTN","MAGJUTL4",101,0)
 I DLM="" S DLM="^"
"RTN","MAGJUTL4",102,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",103,0)
 S NOD=0
"RTN","MAGJUTL4",104,0)
 F  S NOD=$O(@CPTGLB@(CPTIEN,1,NOD)) Q:'NOD  S X=$P(^(NOD,0),U) I X]"" S LIST=LIST_DLM_X
"RTN","MAGJUTL4",105,0)
 Q:$Q $E(LIST,2,999)  Q
"RTN","MAGJUTL4",106,0)
 ;
"RTN","MAGJUTL4",107,0)
MDLLST(CPTIEN,DLM) ; return DLM-delimited list of modality values for this CPT
"RTN","MAGJUTL4",108,0)
 I +$G(CPTIEN)
"RTN","MAGJUTL4",109,0)
 E  Q ""
"RTN","MAGJUTL4",110,0)
 N LIST,CPTGLB S LIST=""
"RTN","MAGJUTL4",111,0)
 S DLM=$E($G(DLM))
"RTN","MAGJUTL4",112,0)
 I DLM="" S DLM="^"
"RTN","MAGJUTL4",113,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",114,0)
 S NOD=0
"RTN","MAGJUTL4",115,0)
 F  S NOD=$O(@CPTGLB@(CPTIEN,2,NOD)) Q:'NOD  S X=$P(^(NOD,0),U) I X]"" S LIST=LIST_DLM_X
"RTN","MAGJUTL4",116,0)
 Q:$Q $E(LIST,2,999)  Q
"RTN","MAGJUTL4",117,0)
 ;
"RTN","MAGJUTL4",118,0)
 ;***** Returns server data to display in new "Image Display" window (P101.31).
"RTN","MAGJUTL4",119,0)
 ; RPC: MAGJ MAGDATADUMP
"RTN","MAGJUTL4",120,0)
 ;
"RTN","MAGJUTL4",121,0)
 ;  DATA         REQUEST ^ PARAM1 | PARAM2
"RTN","MAGJUTL4",122,0)
 ;
"RTN","MAGJUTL4",123,0)
 ;  ..... REQUEST determines format:
"RTN","MAGJUTL4",124,0)
 ;
"RTN","MAGJUTL4",125,0)
 ;  ^01:  REQUEST           Literal string: [ CPT, FLDS, GLB ]
"RTN","MAGJUTL4",126,0)
 ;
"RTN","MAGJUTL4",127,0)
 ;  ^02:  if REQUEST="CPT":
"RTN","MAGJUTL4",128,0)
 ;
"RTN","MAGJUTL4",129,0)
 ;        |01:  PARAM1      CPT Code
"RTN","MAGJUTL4",130,0)
 ;        |02:  [PARAM2]    ""
"RTN","MAGJUTL4",131,0)
 ;
"RTN","MAGJUTL4",132,0)
 ;  ^02:  if REQUEST="FLDS" or "GLB":
"RTN","MAGJUTL4",133,0)
 ;
"RTN","MAGJUTL4",134,0)
 ;        |01:  [PARAM1]    FileMan GETS^DIQ Flags (only if REQUEST="FLDS") *OR*
"RTN","MAGJUTL4",135,0)
 ;        |02:  PARAM2      ImageIEN or Case_ID_String
"RTN","MAGJUTL4",136,0)
 ;
"RTN","MAGJUTL4",137,0)
 ;  Return Values:
"RTN","MAGJUTL4",138,0)
 ;        0:N lines to display (Internal Imaging or CPT Match data).
"RTN","MAGJUTL4",139,0)
 ;
"RTN","MAGJUTL4",140,0)
DATADUMP(MAGGRY,DATA) ;
"RTN","MAGJUTL4",141,0)
 ;
"RTN","MAGJUTL4",142,0)
 ; Initialize. <*> Do NOT change name of EP.
"RTN","MAGJUTL4",143,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR1^MAGJUTL4"
"RTN","MAGJUTL4",144,0)
 N CT,DIQUIET,IMGIEN,INVALID,PARAM1,PARAM2,REQUEST
"RTN","MAGJUTL4",145,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",146,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,"MAGJDATA")) K @MAGGRY
"RTN","MAGJUTL4",147,0)
 ;
"RTN","MAGJUTL4",148,0)
 ; Validate input.
"RTN","MAGJUTL4",149,0)
 S INVALID=$$DDMPVLD8()
"RTN","MAGJUTL4",150,0)
 ;
"RTN","MAGJUTL4",151,0)
 ; Process then Exit, REPLYing with data or error code.
"RTN","MAGJUTL4",152,0)
 I 'INVALID D
"RTN","MAGJUTL4",153,0)
 . D DDMPROCS S REPLY=CT_U_"1~ "_CT_" lines of text returned for "_DATA
"RTN","MAGJUTL4",154,0)
 . M @MAGGRY=XMM K XMM
"RTN","MAGJUTL4",155,0)
 E  S REPLY="0^Invalid image data request: "_""""_DATA_""""_" (ck"_INVALID_")."
"RTN","MAGJUTL4",156,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL4",157,0)
 Q
"RTN","MAGJUTL4",158,0)
 ;
"RTN","MAGJUTL4",159,0)
 ;+++++ Process according to REQUEST. Called by DATADUMP.
"RTN","MAGJUTL4",160,0)
 ; 
"RTN","MAGJUTL4",161,0)
 ; Calls: GETS^MAGGTSYS, MAG^MAGGTSY1.
"RTN","MAGJUTL4",162,0)
 ;
"RTN","MAGJUTL4",163,0)
 ; Local array MM structures multiple calls' output for centralized processing.
"RTN","MAGJUTL4",164,0)
 ; The array is re-subscripted by converting "," to "." allowing a single MERGE
"RTN","MAGJUTL4",165,0)
 ; to the broker output global.
"RTN","MAGJUTL4",166,0)
 ;   
"RTN","MAGJUTL4",167,0)
 ;   MM(.1:.99) ... Header information.
"RTN","MAGJUTL4",168,0)
 ;   MM(1) ........ CPT (similar) match(es).
"RTN","MAGJUTL4",169,0)
 ;   MM(2) ........ CPT (BodyPart and Modality) match(es).
"RTN","MAGJUTL4",170,0)
 ;   MM(3) ........ FLDS output data.
"RTN","MAGJUTL4",171,0)
 ;   MM(4) ........ GLB output data.
"RTN","MAGJUTL4",172,0)
 ;
"RTN","MAGJUTL4",173,0)
DDMPROCS ;
"RTN","MAGJUTL4",174,0)
 ;
"RTN","MAGJUTL4",175,0)
 ; Initialize.
"RTN","MAGJUTL4",176,0)
 S REPLY="0^Retrieving imaging internal data ..."
"RTN","MAGJUTL4",177,0)
 ;
"RTN","MAGJUTL4",178,0)
 ; Process. CPT request via MAG RAD CPT MATCHING File (#2006.67).
"RTN","MAGJUTL4",179,0)
 I REQUEST="CPT" D DDMPRCPT(PARAM1)
"RTN","MAGJUTL4",180,0)
 I REQUEST="FLDS" D GETS^MAGGTSYS(.M,IMGIEN,PARAM1) M MM(3)=@M K M
"RTN","MAGJUTL4",181,0)
 I REQUEST="GLB" D MAG^MAGGTSY2(.M,IMGIEN) M MM(4)=@M K M
"RTN","MAGJUTL4",182,0)
 ;
"RTN","MAGJUTL4",183,0)
 ; Re-subscript array MM to simplify MERGE to broker output global.
"RTN","MAGJUTL4",184,0)
 S CT=0,MMX=$NA(MM(.999)) F  S MMX=$Q(@MMX) Q:MMX=""  D  S CT=CT+1
"RTN","MAGJUTL4",185,0)
 . S MXX="XMM("_$QS(MMX,1)_"."_(1000+$QS(MMX,2))_")" S @MXX=@MMX
"RTN","MAGJUTL4",186,0)
 K MM,MMX,MXX
"RTN","MAGJUTL4",187,0)
 Q
"RTN","MAGJUTL4",188,0)
 ;
"RTN","MAGJUTL4",189,0)
 ;+++++ Process a CPT request. Called by DDMPROCS.
"RTN","MAGJUTL4",190,0)
 ;
"RTN","MAGJUTL4",191,0)
 ; Calls CPT^ICPTCOD for CPT Description.
"RTN","MAGJUTL4",192,0)
 ;
"RTN","MAGJUTL4",193,0)
DDMPRCPT(CPT) ;
"RTN","MAGJUTL4",194,0)
 ;
"RTN","MAGJUTL4",195,0)
 ; Initialize.
"RTN","MAGJUTL4",196,0)
 N FN,FN1,NDX,NOD,SS
"RTN","MAGJUTL4",197,0)
 ;
"RTN","MAGJUTL4",198,0)
 ; Set section headers.
"RTN","MAGJUTL4",199,0)
 S MM(.1)="Input CPT Code ........... "_CPT_"  ("_$P($$CPT^ICPTCOD(CPT),U,3)_")."
"RTN","MAGJUTL4",200,0)
 S MM(.2)="          Body Part(s) ... "
"RTN","MAGJUTL4",201,0)
 S MM(.3)="          Modality(s) .... "
"RTN","MAGJUTL4",202,0)
 ;
"RTN","MAGJUTL4",203,0)
 ; Set primary CPT bodyPart & modality.
"RTN","MAGJUTL4",204,0)
 S FN=2006.67,FN1=2006.671,NDX=$O(^MAG(FN,"B",CPT,""))
"RTN","MAGJUTL4",205,0)
 S NOD=$NA(^MAG(FN,NDX,0)) F  S NOD=$Q(@NOD) Q:$QS(NOD,2)>NDX  I $QS(NOD,4)="B" D
"RTN","MAGJUTL4",206,0)
 . I $QS(NOD,3)=1 S MM(.2)=MM(.2)_$G(^MAG(FN1,$QS(NOD,5),0))_"; "
"RTN","MAGJUTL4",207,0)
 . I $QS(NOD,3)=2 S MM(.3)=MM(.3)_$P($G(^RAMIS(73.1,$QS(NOD,5),0)),U)_"; "
"RTN","MAGJUTL4",208,0)
 . Q
"RTN","MAGJUTL4",209,0)
 ;
"RTN","MAGJUTL4",210,0)
 ; Strip dangling concatenators.
"RTN","MAGJUTL4",211,0)
 F SS=.2,.3 S MM(SS)=$$ZRUPUNCT(MM(SS),"; ",".")
"RTN","MAGJUTL4",212,0)
 ;
"RTN","MAGJUTL4",213,0)
 ; Fetch CPTs matching on CPT.
"RTN","MAGJUTL4",214,0)
 D CPTGRP(.M,CPT_"^1") M MM(1)=@M K M
"RTN","MAGJUTL4",215,0)
 S MM(1,0)=$P(MM(1,0),"~ ",2)
"RTN","MAGJUTL4",216,0)
 S MM(1,0)=$J(+$P(MM(1,0)," "),3)_" matching CPT(s) via similar CPT:"
"RTN","MAGJUTL4",217,0)
 ;
"RTN","MAGJUTL4",218,0)
 ; Fetch CPTs matching on BodyPart & Modality.
"RTN","MAGJUTL4",219,0)
 D CPTGRP(.M,CPT_"^3") M MM(2)=@M K M
"RTN","MAGJUTL4",220,0)
 S MM(2,0)=$P(MM(2,0),"~ ",2)
"RTN","MAGJUTL4",221,0)
 S MM(2,0)=$J(+$P(MM(2,0)," "),3)_" matching CPT(s) via BODY PART and MODALITY:"
"RTN","MAGJUTL4",222,0)
 ;
"RTN","MAGJUTL4",223,0)
 ; Re-format. [Not modular -- should provide for leaving as-is.]
"RTN","MAGJUTL4",224,0)
 S MMX=$NA(MM(.99)) F  S MMX=$Q(@MMX) Q:MMX=""  I @MMX["^" S @MMX="     "_$TR(@MMX,"^"," ")
"RTN","MAGJUTL4",225,0)
 Q
"RTN","MAGJUTL4",226,0)
 ;
"RTN","MAGJUTL4",227,0)
 ;+++++ Validate. Called by DATADUMP.
"RTN","MAGJUTL4",228,0)
 ;
"RTN","MAGJUTL4",229,0)
DDMPVLD8() ;
"RTN","MAGJUTL4",230,0)
 ;
"RTN","MAGJUTL4",231,0)
 ; ... DATA string format or exit invalid (code 1).
"RTN","MAGJUTL4",232,0)
 Q:'$D(DATA) 1
"RTN","MAGJUTL4",233,0)
 Q:DATA="" 1
"RTN","MAGJUTL4",234,0)
 Q:DATA'["^"!(DATA'["|") 1
"RTN","MAGJUTL4",235,0)
 ;
"RTN","MAGJUTL4",236,0)
 ; Initialize.
"RTN","MAGJUTL4",237,0)
 N RACNI,RADFN,RADTI,RARPT S REPLY="0^Validating input parameters ..."
"RTN","MAGJUTL4",238,0)
 S REQUEST=$P(DATA,U),PARAM1=$P($P(DATA,U,2),"|"),PARAM2=$P(DATA,"|",2)
"RTN","MAGJUTL4",239,0)
 ;
"RTN","MAGJUTL4",240,0)
 ; ... DATA string's REQUEST piece or exit (invalid: code 2).
"RTN","MAGJUTL4",241,0)
 Q:"^CPT^FLDS^GLB^"'[(U_REQUEST_U) 2
"RTN","MAGJUTL4",242,0)
 ;
"RTN","MAGJUTL4",243,0)
 ; ... PARAM1 if REQUEST="CPT" or exit (invalid: code 3).
"RTN","MAGJUTL4",244,0)
 I REQUEST="CPT" Q:'$D(^MAG(2006.67,"B",PARAM1)) 3
"RTN","MAGJUTL4",245,0)
 ;
"RTN","MAGJUTL4",246,0)
 ; ... PARAM1 if REQUEST="FLDS" or re-set to null. External call will set defaults.
"RTN","MAGJUTL4",247,0)
 ; .......... only validate format of FileMan flags.
"RTN","MAGJUTL4",248,0)
 I REQUEST="FLDS"&(PARAM1'?1U.U) S PARAM1=""
"RTN","MAGJUTL4",249,0)
 ; 
"RTN","MAGJUTL4",250,0)
 ; ... PARAM2 if REQUEST=("FLDS" or "GLB") or exit (invalid: code 4).
"RTN","MAGJUTL4",251,0)
 I REQUEST="FLDS"!(REQUEST="GLB") S IMGIEN="" D  Q:IMGIEN="" 4
"RTN","MAGJUTL4",252,0)
 . ;
"RTN","MAGJUTL4",253,0)
 . ; Case 1: PARAM2 holds IMGIEN.
"RTN","MAGJUTL4",254,0)
 . I PARAM2?1N.N,$D(^MAG(2005,PARAM2)) S IMGIEN=PARAM2 Q
"RTN","MAGJUTL4",255,0)
 . ;
"RTN","MAGJUTL4",256,0)
 . ; Case 2: PARAM2 holds RARPT in piece 4, set IMGIEN via back-pointer in File #74.
"RTN","MAGJUTL4",257,0)
 . I $L(PARAM2,U)=4 S RARPT=$P(PARAM2,U,4),IMGIEN=$O(^RARPT(RARPT,2005,"B",""))
"RTN","MAGJUTL4",258,0)
 . I IMGIEN'="",$D(^MAG(2005,IMGIEN)) Q
"RTN","MAGJUTL4",259,0)
 . ;
"RTN","MAGJUTL4",260,0)
 . ; Case 3: PARAM2 holds RADFN^RADTI^RACNI in pieces 1:3.
"RTN","MAGJUTL4",261,0)
 . S RADFN=+PARAM2,RADTI=$P(PARAM2,U,2),RACNI=$P(PARAM2,U,3)
"RTN","MAGJUTL4",262,0)
 . I RADFN,RADTI,RACNI D
"RTN","MAGJUTL4",263,0)
 . . S RARPT=$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,17)
"RTN","MAGJUTL4",264,0)
 . . I RARPT'="",$D(^RARPT(RARPT,2005,"B"))>1 S IMGIEN=$O(^RARPT(RARPT,2005,"B",""))
"RTN","MAGJUTL4",265,0)
 Q 0
"RTN","MAGJUTL4",266,0)
 ;
"RTN","MAGJUTL4",267,0)
 ;***** Check Exam Status.
"RTN","MAGJUTL4",268,0)
 ; RPC: MAGJ RADSTATUSCHECK
"RTN","MAGJUTL4",269,0)
 ;
"RTN","MAGJUTL4",270,0)
STATCHK(MAGGRY,DATA) ;
"RTN","MAGJUTL4",271,0)
 ; This may also be accessed by subroutine call. <*> do not change name of EP
"RTN","MAGJUTL4",272,0)
 ; Exam Status check RPC and subroutine: determine if the exam has been Tech-Verified (at least).
"RTN","MAGJUTL4",273,0)
 ; Images are assumed to be verified if Exam Status is Examined, or higher status.
"RTN","MAGJUTL4",274,0)
 ;       ; Input in DATA: RADFN^RADTI^RACNI^RARPT
"RTN","MAGJUTL4",275,0)
 ;   Input is either RADFN, RADTI, and RACNI; or, RARPT only may be input in piece 4
"RTN","MAGJUTL4",276,0)
 ;   Return: Code^Text
"RTN","MAGJUTL4",277,0)
 ;    0 = Problem, or exam was cancelled
"RTN","MAGJUTL4",278,0)
 ;    1 = Not yet verified
"RTN","MAGJUTL4",279,0)
 ;    2 = Tech Verified
"RTN","MAGJUTL4",280,0)
 ;    3 = Radiologist Verified
"RTN","MAGJUTL4",281,0)
 ;    4 = User is a Radiology professional--always allow access
"RTN","MAGJUTL4",282,0)
 ;
"RTN","MAGJUTL4",283,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR3^MAGJUTL4"
"RTN","MAGJUTL4",284,0)
 N REPLY,STATUS,ORDER,VCAT,STOUT
"RTN","MAGJUTL4",285,0)
 N DIQUIET,RARPT,RADFN,RADTI,RACNI
"RTN","MAGJUTL4",286,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",287,0)
 S RADFN=$P(DATA,U),RADTI=$P(DATA,U,2),RACNI=$P(DATA,U,3),RARPT=$P(DATA,U,4)
"RTN","MAGJUTL4",288,0)
 S STOUT="",REPLY="0^Getting image verification status."
"RTN","MAGJUTL4",289,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJUTL4",290,0)
 E  I RARPT D RPT2DPT(RARPT,.X) I X S RADFN=+X,RADTI=$P(X,U,2),RACNI=$P(X,U,3) I RADFN,RADTI,RACNI
"RTN","MAGJUTL4",291,0)
 E  S REPLY="0^Image Verification Status request contains invalid case pointer ("_DATA_")" G STATCHKZ
"RTN","MAGJUTL4",292,0)
 S STATUS=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,3)
"RTN","MAGJUTL4",293,0)
 I STATUS="" S REPLY="0^Image Verification Status request error--no Exam Status is defined for ("_DATA_")" G STATCHKZ
"RTN","MAGJUTL4",294,0)
 S VCAT=$P(^RA(72,STATUS,0),U,9),ORDER=$P(^(0),U,3)
"RTN","MAGJUTL4",295,0)
 I VCAT]"" D  G STATCHK2:STOUT
"RTN","MAGJUTL4",296,0)
 . I "EDT"[VCAT S STOUT=$S(VCAT="E":2,1:3) ; Examined or Interpreted
"RTN","MAGJUTL4",297,0)
 . E  I VCAT="W" S STOUT=1 ; Not yet Verified
"RTN","MAGJUTL4",298,0)
 I ORDER=9 S STOUT=3  ; Completed exam
"RTN","MAGJUTL4",299,0)
 E  I ORDER=0 S REPLY="0^Exam Cancelled"
"RTN","MAGJUTL4",300,0)
 E  I ORDER=1 S STOUT=1  ; Waiting for exam
"RTN","MAGJUTL4",301,0)
STATCHK2 ;
"RTN","MAGJUTL4",302,0)
 I STOUT<2 D
"RTN","MAGJUTL4",303,0)
 . F X="S","R","T" I $D(^VA(200,"ARC",X,DUZ)) S STOUT=4 Q  ; Radiologist or Tech -- OK to access
"RTN","MAGJUTL4",304,0)
STATCHKZ ;
"RTN","MAGJUTL4",305,0)
 I STOUT S REPLY=STOUT_U_$S(STOUT=1:"Images not yet verified",STOUT=2:"Images verified by Technologist",STOUT=3:"Images interpreted by Radiologist",STOUT=4:"Radiology professional--OK to view images.",1:"")
"RTN","MAGJUTL4",306,0)
 S MAGGRY=REPLY
"RTN","MAGJUTL4",307,0)
 Q
"RTN","MAGJUTL4",308,0)
 ;
"RTN","MAGJUTL4",309,0)
 ;***** User set/clear flag to show/not show remote exams only.
"RTN","MAGJUTL4",310,0)
 ; RPC: MAGJ REMOTESCREEN
"RTN","MAGJUTL4",311,0)
 ;
"RTN","MAGJUTL4",312,0)
REMSCRN(MAGGRY,DATA) ;
"RTN","MAGJUTL4",313,0)
 ; Input in DATA: 1/0 1=show remote only; 0=show all exams
"RTN","MAGJUTL4",314,0)
 ; Return: Reply^Code~msg
"RTN","MAGJUTL4",315,0)
 ;    Reply -- 0=Problem; 1=Success
"RTN","MAGJUTL4",316,0)
 ;    Code -- 4=Error; 1=ok
"RTN","MAGJUTL4",317,0)
 ;    msg -- display text if error
"RTN","MAGJUTL4",318,0)
 ;
"RTN","MAGJUTL4",319,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR3^MAGJUTL4"
"RTN","MAGJUTL4",320,0)
 N REPLY
"RTN","MAGJUTL4",321,0)
 N DIQUIET S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",322,0)
 I $D(DATA),(DATA=0!(DATA=1))
"RTN","MAGJUTL4",323,0)
 E  S REPLY="0^4~REMOTESCREEN request has invalid parameter ("_$G(DATA)_")" G REMSCRNZ
"RTN","MAGJUTL4",324,0)
 S MAGJOB("REMOTESCREEN")=DATA,REPLY="1^1~"_DATA
"RTN","MAGJUTL4",325,0)
REMSCRNZ ;
"RTN","MAGJUTL4",326,0)
 S MAGGRY=REPLY
"RTN","MAGJUTL4",327,0)
 Q
"RTN","MAGJUTL4",328,0)
 ;
"RTN","MAGJUTL4",329,0)
RPT2DPT(RARPT,RET) ; Input RARPT. Return RET containing exam ss values for ^RADPT
"RTN","MAGJUTL4",330,0)
 ;
"RTN","MAGJUTL4",331,0)
 N DFN,DTI,CNI S (DFN,DTI,CNI)=""
"RTN","MAGJUTL4",332,0)
 I RARPT?1N.N,$D(^RARPT(RARPT)) S X=$G(^(RARPT,0)) I X]"" D
"RTN","MAGJUTL4",333,0)
 . S X=$P(X,U)
"RTN","MAGJUTL4",334,0)
 . S X=$O(^RADPT("ADC",X,0)) I X S DFN=X,DTI=$O(^(X,0)),CNI=$O(^(DTI,0))
"RTN","MAGJUTL4",335,0)
 . S RET=DFN_U_DTI_U_CNI
"RTN","MAGJUTL4",336,0)
 E  S RET=""
"RTN","MAGJUTL4",337,0)
 Q
"RTN","MAGJUTL4",338,0)
 ;
"RTN","MAGJUTL4",339,0)
ERR1 N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL4",340,0)
ERR3 N ERR S ERR=$$EC^%ZOSV S MAGGRY="0^4~"_ERR
"RTN","MAGJUTL4",341,0)
ERR D @^%ZOSF("ERRTN")
"RTN","MAGJUTL4",342,0)
 Q:$Q 1  Q
"RTN","MAGJUTL4",343,0)
 ;
"RTN","MAGJUTL4",344,0)
END Q  ;
"RTN","MAGJUTL4",345,0)
 ;
"RTN","MAGJUTL4",346,0)
 ;***** Identify if mammogram via CPT Code. Called by OPENCASE^MAGJEX1.
"RTN","MAGJUTL4",347,0)
 ;
"RTN","MAGJUTL4",348,0)
 ; Calls ZRUMDLST, $$CPT^ICPTCOD (which may return "-1^NO SUCH ENTRY").
"RTN","MAGJUTL4",349,0)
 ;
"RTN","MAGJUTL4",350,0)
 ; CPT     CPT Code
"RTN","MAGJUTL4",351,0)
 ;
"RTN","MAGJUTL4",352,0)
 ; Return Value:
"RTN","MAGJUTL4",353,0)
 ;      0  NOT a mammogram.
"RTN","MAGJUTL4",354,0)
 ;      1  IS  a mammogram.
"RTN","MAGJUTL4",355,0)
 ;
"RTN","MAGJUTL4",356,0)
ZRUMAMMO(CPT) ;
"RTN","MAGJUTL4",357,0)
 N CPTCATIEN,YN S YN=0
"RTN","MAGJUTL4",358,0)
 S CPTCATIEN=$P($$CPT^ICPTCOD(CPT),U,4) Q:CPTCATIEN="" YN Q:+CPTCATIEN<0 YN
"RTN","MAGJUTL4",359,0)
 ;
"RTN","MAGJUTL4",360,0)
 ; Criterion (1A): CPT Category (cf., ^DIC(81.1,240,0)=BREAST MAMMOGRAPHY^s^4^77051^77059^C).
"RTN","MAGJUTL4",361,0)
 I $P(^DIC(81.1,CPTCATIEN,0),U)="BREAST MAMMOGRAPHY" S YN=1 D
"RTN","MAGJUTL4",362,0)
 . ;
"RTN","MAGJUTL4",363,0)
 . ; Criterion (1B): CPT "Modality" (using MAGS array's modalities via ZRUMDLST).
"RTN","MAGJUTL4",364,0)
 . N MODALITY
"RTN","MAGJUTL4",365,0)
 . D ZRUMDLST(.MAGS) I '$D(MAGMDLST) S YN=1 Q
"RTN","MAGJUTL4",366,0)
 . F MODALITY="MR","OCT","US" S:$D(MAGMDLST(MODALITY)) YN=0
"RTN","MAGJUTL4",367,0)
 ;
"RTN","MAGJUTL4",368,0)
 ; Criterion (2) -- Deprecated mammography CPTs.
"RTN","MAGJUTL4",369,0)
 E  D
"RTN","MAGJUTL4",370,0)
 . N CPTMAM F CPTMAM=76082,76083,76085:1:76092 I CPT=CPTMAM S YN=1 Q
"RTN","MAGJUTL4",371,0)
 Q YN
"RTN","MAGJUTL4",372,0)
 ;
"RTN","MAGJUTL4",373,0)
 ;+++++ Array any unique MAGS' piece 3 modalities. Called by ZRUMAMMO.
"RTN","MAGJUTL4",374,0)
 ;
"RTN","MAGJUTL4",375,0)
 ; .MAGS      Array of individual image data (cf. JBFETCH^MAGJUTL2).
"RTN","MAGJUTL4",376,0)
 ; 
"RTN","MAGJUTL4",377,0)
 ; Sets array MAGMDLST(modality).
"RTN","MAGJUTL4",378,0)
 ; 
"RTN","MAGJUTL4",379,0)
ZRUMDLST(MAGS) ;
"RTN","MAGJUTL4",380,0)
 K MAGMDLST
"RTN","MAGJUTL4",381,0)
 I $D(MAGS),MAGS N MD0,X F X=1:1:MAGS D
"RTN","MAGJUTL4",382,0)
 . S MD0=$P(MAGS(X),U,3) I MD0'="",'$D(MAGMDLST(MD0)) S MAGMDLST(MD0)=""
"RTN","MAGJUTL4",383,0)
 Q
"RTN","MAGJUTL4",384,0)
 ;
"RTN","MAGJUTL4",385,0)
 ;+++++ Strip IN's trailing elements & append REPL.
"RTN","MAGJUTL4",386,0)
 ;
"RTN","MAGJUTL4",387,0)
 ; IN       String to operate on.
"RTN","MAGJUTL4",388,0)
 ; REPL     String to place at right end.
"RTN","MAGJUTL4",389,0)
 ; STRIP    String to remove from right end.
"RTN","MAGJUTL4",390,0)
 ;
"RTN","MAGJUTL4",391,0)
 ; Returns:
"RTN","MAGJUTL4",392,0)
 ;      IN_REPL
"RTN","MAGJUTL4",393,0)
 ;
"RTN","MAGJUTL4",394,0)
ZRUPUNCT(IN,STRIP,REPL) ;
"RTN","MAGJUTL4",395,0)
 Q:'$D(IN)!('$D(STRIP))!('$D(REPL))  F  Q:STRIP'[$E(IN,$L(IN))  S IN=$E(IN,1,$L(IN)-1)
"RTN","MAGJUTL4",396,0)
 Q IN_REPL
"RTN","MAGJUTL4",397,0)
 ;
"RTN","MAGJUTL4",398,0)
 ; ***** Query to modify existing annotations. Called by OPENCASE^MAGJEX1
"RTN","MAGJUTL4",399,0)
 ; 
"RTN","MAGJUTL4",400,0)
 ; DUZ      Kernel internal user identifier.
"RTN","MAGJUTL4",401,0)
 ; RACNI    RAD/NUC Med Patient File (#70) Case Number Index
"RTN","MAGJUTL4",402,0)
 ; RADFN    "                              Patient DFN
"RTN","MAGJUTL4",403,0)
 ; RADTI    "                              Study Internal Date
"RTN","MAGJUTL4",404,0)
 ; 
"RTN","MAGJUTL4",405,0)
 ; Return Value:
"RTN","MAGJUTL4",406,0)
 ;      0   NOT authorized to annotate.
"RTN","MAGJUTL4",407,0)
 ;      1   AUTHORIZED     "".
"RTN","MAGJUTL4",408,0)
 ; 
"RTN","MAGJUTL4",409,0)
ZRUREVAN(RADFN,RADTI,RACNI) ;
"RTN","MAGJUTL4",410,0)
 ;
"RTN","MAGJUTL4",411,0)
 ; Initialize. Exit if RAxxx pointers fail.
"RTN","MAGJUTL4",412,0)
 N EXAMSTAT,EXMSTSPT,RADNOD,RIST1,RIST2,YN
"RTN","MAGJUTL4",413,0)
 S YN=0,RADNOD=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJUTL4",414,0)
 Q:RADNOD="" YN
"RTN","MAGJUTL4",415,0)
 ;
"RTN","MAGJUTL4",416,0)
 ; Collect data about ...
"RTN","MAGJUTL4",417,0)
 S RIST1=$P(RADNOD,U,12) ; .. PRIMARY INTERPRETING RESIDENT [12P:200]
"RTN","MAGJUTL4",418,0)
 S RIST2=$P(RADNOD,U,15) ; .. PRIMARY INTERPRETING STAFF [15P:200]
"RTN","MAGJUTL4",419,0)
 S EXMSTSPT=$P(RADNOD,U,3) ;. EXAM STATUS [3P:72]
"RTN","MAGJUTL4",420,0)
 S EXAMSTAT=$P($G(^RA(72,EXMSTSPT,0)),U,9) ; VISTARAD CATEGORY (#9)
"RTN","MAGJUTL4",421,0)
 ;
"RTN","MAGJUTL4",422,0)
 I EXAMSTAT="D"!(EXAMSTAT="T") D
"RTN","MAGJUTL4",423,0)
 . ;
"RTN","MAGJUTL4",424,0)
 . ; 'Yes' if CurrentUser=Primary Interpreting Radiologist.
"RTN","MAGJUTL4",425,0)
 . I DUZ=RIST1!(DUZ=RIST2) S YN=1
"RTN","MAGJUTL4",426,0)
 . E  I RIST1'="",$D(^VA(200,"ARC","S",+DUZ)) S YN=1 ; 'Yes' if (Primary Interpreting Radiologist is Resident) & (CurrentUser is Staff)
"RTN","MAGJUTL4",427,0)
 . Q
"RTN","MAGJUTL4",428,0)
 Q YN
"RTN","MAGJUTL5")
0^10^B33141001
"RTN","MAGJUTL5",1,0)
MAGJUTL5 ;WOIFO/JHC - VistARad RPCs ; 8-Jun-2010 3:20 PM
"RTN","MAGJUTL5",2,0)
 ;;3.0;IMAGING;**65,76,101,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJUTL5",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL5",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL5",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL5",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL5",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL5",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL5",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL5",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL5",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL5",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL5",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL5",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL5",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL5",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL5",17,0)
 ;;
"RTN","MAGJUTL5",18,0)
 Q
"RTN","MAGJUTL5",19,0)
 ; adapted from MAGGTU4
"RTN","MAGJUTL5",20,0)
GETVER(SVRVER,SVRTVER,ALLOWCL) ;
"RTN","MAGJUTL5",21,0)
 ; The Server Version SVRVER is hardcoded to match the Client
"RTN","MAGJUTL5",22,0)
 ; so this Routine must be edited/distributed with a new Client
"RTN","MAGJUTL5",23,0)
 ; released Client will have the T version that the server expects
"RTN","MAGJUTL5",24,0)
 ;
"RTN","MAGJUTL5",25,0)
 ;--- Synchronize the below information with that in MAGJTU4V.
"RTN","MAGJUTL5",26,0)
 ;
"RTN","MAGJUTL5",27,0)
 S SVRVER="3.0.90",SVRTVER=9  ; <*> Edit this line for each patch/T-version
"RTN","MAGJUTL5",28,0)
 ;
"RTN","MAGJUTL5",29,0)
 S ALLOWCL="|3.0.76|3.0.101|"  ; back-compatible with P76 & P101 client
"RTN","MAGJUTL5",30,0)
 Q
"RTN","MAGJUTL5",31,0)
 ;
"RTN","MAGJUTL5",32,0)
CHKVER(MAGRY,CLVER,PLC,SVERSION) ;
"RTN","MAGJUTL5",33,0)
 ; Input CLVER is the version of the Client
"RTN","MAGJUTL5",34,0)
 ;    format: Major.Minor.Patch.Build# (Build #=T-ver) eg 3.0.18.132
"RTN","MAGJUTL5",35,0)
 ; 3 possible return codes in MAGRY:
"RTN","MAGJUTL5",36,0)
 ;   2^n~msg : Client displays a message and continues
"RTN","MAGJUTL5",37,0)
 ;   1^1~msg : Client continues without displaying a message
"RTN","MAGJUTL5",38,0)
 ;   0^n~msg : Client displays a message then Aborts
"RTN","MAGJUTL5",39,0)
 ; PLC returns 2006.1 pointer
"RTN","MAGJUTL5",40,0)
 ;
"RTN","MAGJUTL5",41,0)
 S CLVER=$G(CLVER),PLC="",MAGRY=""
"RTN","MAGJUTL5",42,0)
 N SV,ST,CV,CT,CP,ALLOWV,TESTFLAG,SVSTAT
"RTN","MAGJUTL5",43,0)
 ; SVERSION = Full Server Version -> (3.0.18.132 or 3.0.18); test has 4, release has 3 parts
"RTN","MAGJUTL5",44,0)
 ; SV = Server Version -> (3.0.18); only 1st 3 parts
"RTN","MAGJUTL5",45,0)
 ; ST = Server T Version -> defined to always match client part-4
"RTN","MAGJUTL5",46,0)
 ; CV = Client Version, w/out build #
"RTN","MAGJUTL5",47,0)
 ; CT = Client T Version alone
"RTN","MAGJUTL5",48,0)
 ; CP = Client Patch alone
"RTN","MAGJUTL5",49,0)
 ; ALLOWV = Hard coded string of allowed clients for this KIDS.
"RTN","MAGJUTL5",50,0)
 ; TESTFLAG = 1/0  -- 1=Test vs of server code; 0=Release vs
"RTN","MAGJUTL5",51,0)
 ;Below is placeholder for future enhancement:
"RTN","MAGJUTL5",52,0)
 ;I $P(CLVER,"|",2)="RIV" D  Q
"RTN","MAGJUTL5",53,0)
 ;. S MAGJOB("RIV")=1
"RTN","MAGJUTL5",54,0)
 ;. ; Allowing |RIV clients always
"RTN","MAGJUTL5",55,0)
 ;. S MAGRY="1^1~Allowing Remote Image Connection"
"RTN","MAGJUTL5",56,0)
 ;
"RTN","MAGJUTL5",57,0)
 I $G(DUZ(2)) S PLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGJUTL5",58,0)
 ;  Quit if we don't have a valid DUZ(2) or valid PLACE: ^MAG(2006.1,PLC)
"RTN","MAGJUTL5",59,0)
 I 'PLC S MAGRY="0^4~Error verifying Imaging Site (Place) -- Contact Imaging support." Q
"RTN","MAGJUTL5",60,0)
 ;
"RTN","MAGJUTL5",61,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGJUTL5",62,0)
 S CLVER=$P(CLVER,"|")
"RTN","MAGJUTL5",63,0)
 S CV=$P(CLVER,".",1,3),CT=+$P(CLVER,".",4),CP=+$P(CLVER,".",3)
"RTN","MAGJUTL5",64,0)
 ;
"RTN","MAGJUTL5",65,0)
 D VERSTAT(.SVSTAT,SV)
"RTN","MAGJUTL5",66,0)
 I 'SVSTAT S MAGRY(0)=SVSTAT Q  ; KIDS status for this version indeterminate
"RTN","MAGJUTL5",67,0)
 S TESTFLAG=(+SVSTAT=1)
"RTN","MAGJUTL5",68,0)
 S SVERSION=SV
"RTN","MAGJUTL5",69,0)
 I TESTFLAG S SVERSION=SV_"."_ST
"RTN","MAGJUTL5",70,0)
 ; Check Version differences:
"RTN","MAGJUTL5",71,0)
 I (CV'=SV) D  Q
"RTN","MAGJUTL5",72,0)
 . I '(ALLOWV[("|"_CV_"|")) D  Q
"RTN","MAGJUTL5",73,0)
 . . S MAGRY="0^4~VistARad Workstation software version "_CLVER_" is not compatible with the VistA server version "_SVERSION_".  Contact Imaging support. (CNA)"
"RTN","MAGJUTL5",74,0)
 . ; Warn the Client, allow to continue
"RTN","MAGJUTL5",75,0)
 . I TESTFLAG S MAGRY="2^3~VistARad Workstation software version "_CLVER_" is running with VistA server TEST Version "_SVERSION_" --  VistARad will Continue, but contact Imaging Support if problems occur. (Pdif)"
"RTN","MAGJUTL5",76,0)
 . E  S MAGRY="2^3~VistARad Workstation software version "_CLVER_" is running with VistA server Version "_SVERSION_" --  VistARad will Continue, but contact Imaging Support to install Released Version. (RPdif)"
"RTN","MAGJUTL5",77,0)
 . Q
"RTN","MAGJUTL5",78,0)
 ; Versions are the Same: If T versions are not, warn the Client if needed.
"RTN","MAGJUTL5",79,0)
 ; Released Client (of any version) will have the T version that the server
"RTN","MAGJUTL5",80,0)
 ; expects, and no warning will be displayed.
"RTN","MAGJUTL5",81,0)
 I CT,(CT'=ST) D  Q
"RTN","MAGJUTL5",82,0)
 . I TESTFLAG S MAGRY="2^3~VistARad Workstation software vs. "_CLVER_" is running with VistA server TEST vs. "_SVERSION_" --  VistARad will Continue, but contact Imaging Support " D
"RTN","MAGJUTL5",83,0)
 . . I CT<ST S MAGRY=MAGRY_"to install updated client software.  (Tdif-1)"
"RTN","MAGJUTL5",84,0)
 . . E  S MAGRY=MAGRY_"to update the Server software.  (Tdif-2)"
"RTN","MAGJUTL5",85,0)
 . E  S MAGRY="2^3~VistARad Workstation software vs. "_CLVER_" is running with VistA server vs. "_SVERSION_" --  VistARad will Continue, but contact Imaging Support to install Released Version. (RVdif)"
"RTN","MAGJUTL5",86,0)
 . Q
"RTN","MAGJUTL5",87,0)
 ; Client and Server Versions are the same
"RTN","MAGJUTL5",88,0)
 S MAGRY="1^1~Version Check OK. Server: "_SVERSION_" Client: "_CLVER Q
"RTN","MAGJUTL5",89,0)
 Q
"RTN","MAGJUTL5",90,0)
 ;
"RTN","MAGJUTL5",91,0)
P32STOP(RET) ; logic to indicate P32 should no longer function, once the RELEASED P76 is installed
"RTN","MAGJUTL5",92,0)
 ; This is invoked from magjutl3, P76 version, if a P32 client is launched
"RTN","MAGJUTL5",93,0)
 ; RET=1/0 ^ text -- 0 = OK to run P32; 1 = Not OK
"RTN","MAGJUTL5",94,0)
 N SV,ST,ALLOWV,SVSTAT,RELEASED
"RTN","MAGJUTL5",95,0)
 S RET="0^P32 supported" ; init return to allow p32 to function
"RTN","MAGJUTL5",96,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGJUTL5",97,0)
 D VERSTAT(.SVSTAT,SV)
"RTN","MAGJUTL5",98,0)
 I 'SVSTAT S RET="0^Error, but on side of caution, allow running." Q  ; KIDS status for this version indeterminate
"RTN","MAGJUTL5",99,0)
 S RELEASED=(+SVSTAT=2)
"RTN","MAGJUTL5",100,0)
 I RELEASED!(SV'="3.0.76") S RET="1^P32 support over"  ; don't allow P32 to function
"RTN","MAGJUTL5",101,0)
 Q
"RTN","MAGJUTL5",102,0)
 ;
"RTN","MAGJUTL5",103,0)
VERSTAT(MAGRY,MAGVER) ;
"RTN","MAGJUTL5",104,0)
 ; Returns the status of an Imaging Version
"RTN","MAGJUTL5",105,0)
 ; Input:
"RTN","MAGJUTL5",106,0)
 ;   MAGVER - Version number in format  MAG*3.0*59 or 3.0.59
"RTN","MAGJUTL5",107,0)
 ; Return: MAGRY = 0/1/2 -- see below; 0: abort; else, OK to proceed
"RTN","MAGJUTL5",108,0)
 ;
"RTN","MAGJUTL5",109,0)
 N VERI,TVER,MAGERR
"RTN","MAGJUTL5",110,0)
 I +MAGVER S MAGVER="MAG*"_$P(MAGVER,".",1,2)_"*"_$P(MAGVER,".",3)
"RTN","MAGJUTL5",111,0)
 S VERI=$$FIND1^DIC(9.6,"","O",MAGVER,"","","MAGERR")
"RTN","MAGJUTL5",112,0)
 I 'VERI S MAGRY="0^4~There is No KIDs Install record."
"RTN","MAGJUTL5",113,0)
 E  D
"RTN","MAGJUTL5",114,0)
 . S TVER=$$GET1^DIQ(9.6,VERI_",","ALPHA/BETA TESTING")
"RTN","MAGJUTL5",115,0)
 . I TVER="YES" S MAGRY="1^Alpha/Beta Version"
"RTN","MAGJUTL5",116,0)
 . E  I TVER="NO" S MAGRY="2^Released Version"
"RTN","MAGJUTL5",117,0)
 . E  S MAGRY="0^4~KIDs Install Status is unknown--contact Customer Support."
"RTN","MAGJUTL5",118,0)
 Q       ;
"RTN","MAGJUTL5",119,0)
END ;
"RTN","MAGJVAPI")
0^11^B13867025
"RTN","MAGJVAPI",1,0)
MAGJVAPI ;WOIFO/MAT VistARad RPCs for ViX ; 2-Apr-2010 6:01pm
"RTN","MAGJVAPI",2,0)
 ;;3.0;IMAGING;**90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGJVAPI",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJVAPI",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJVAPI",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJVAPI",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJVAPI",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJVAPI",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJVAPI",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJVAPI",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJVAPI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJVAPI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJVAPI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJVAPI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJVAPI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJVAPI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJVAPI",17,0)
 ;;
"RTN","MAGJVAPI",18,0)
 Q
"RTN","MAGJVAPI",19,0)
 ;
"RTN","MAGJVAPI",20,0)
 ;***** Log ViX-enabled Remote Image Access Events 
"RTN","MAGJVAPI",21,0)
 ; RPC: MAGJ VIX LOG REMOTE IMG ACCESS
"RTN","MAGJVAPI",22,0)
 ; 
"RTN","MAGJVAPI",23,0)
 ;   External Calls: ENTRY^MAGLOG()   ; Upd8 IMAGE ACCESS LOG (#2006.95).
"RTN","MAGJVAPI",24,0)
 ;                   ACTION^MAGGTAU() ; Upd8 IMAGING WINDOWS SESS'NS (#2006.82)
"RTN","MAGJVAPI",25,0)
 ;             
"RTN","MAGJVAPI",26,0)
 ;   Internal Calls: LOGRIA01()       ; Validate input, process, return error.
"RTN","MAGJVAPI",27,0)
 ; 
"RTN","MAGJVAPI",28,0)
 ; .MAGJRY -- Reference to a local variable name for the return value.
"RTN","MAGJVAPI",29,0)
 ;
"RTN","MAGJVAPI",30,0)
 ;    DATA -- ^01: ACTION ... "VR-RV"_ subset member from ACTION+1^MAGGTAU.
"RTN","MAGJVAPI",31,0)
 ;            ^02: RADFN .... IEN of PATIENT file (#2)
"RTN","MAGJVAPI",32,0)
 ;            ^03: MAGIEN ... IEN of IMAGE file (#2005)
"RTN","MAGJVAPI",33,0)
 ;            ^04: NIMGS .... VRad Image Count
"RTN","MAGJVAPI",34,0)
 ;            ^05: REMOTE ... VRad Remote Read Flag
"RTN","MAGJVAPI",35,0)
 ;            ^06: MAGJVRV .. VRad Version
"RTN","MAGJVAPI",36,0)
 ;            ^07: USERCLS .. VRad User Class
"RTN","MAGJVAPI",37,0)
 ; Returns ...
"RTN","MAGJVAPI",38,0)
 ; ===========
"RTN","MAGJVAPI",39,0)
 ;                ______ON_ERROR_______    ___EXPECTED___
"RTN","MAGJVAPI",40,0)
 ; MAGJRY    ^01: 0                        1
"RTN","MAGJVAPI",41,0)
 ;           ^02: Error message
"RTN","MAGJVAPI",42,0)
 ;
"RTN","MAGJVAPI",43,0)
 ; Notes
"RTN","MAGJVAPI",44,0)
 ; =====
"RTN","MAGJVAPI",45,0)
 ; 
"RTN","MAGJVAPI",46,0)
 ; DUZ on the remote VistA is initialized during ViX authentication.
"RTN","MAGJVAPI",47,0)
 ; "VRad Patient Count" is static at 1 in this context.
"RTN","MAGJVAPI",48,0)
 ;
"RTN","MAGJVAPI",49,0)
LOGRIA(MAGJRY,DATA) ;
"RTN","MAGJVAPI",50,0)
 ;
"RTN","MAGJVAPI",51,0)
 ;--- Main.
"RTN","MAGJVAPI",52,0)
 N MAGJVERR S MAGJRY="1"
"RTN","MAGJVAPI",53,0)
 S MAGJVERR=$$LOGRIA01() I +MAGJVERR S MAGJRY="0^"_$P(MAGJVERR,"^",2)
"RTN","MAGJVAPI",54,0)
 Q MAGJRY
"RTN","MAGJVAPI",55,0)
 ;
"RTN","MAGJVAPI",56,0)
 ;
"RTN","MAGJVAPI",57,0)
LOGRIA01() ;
"RTN","MAGJVAPI",58,0)
 N TAGG S TAGG="LOGRIA01"
"RTN","MAGJVAPI",59,0)
 N MAGIEN,RADFN
"RTN","MAGJVAPI",60,0)
 ;
"RTN","MAGJVAPI",61,0)
 ;--- Validate RADFN, MAGIEN. On error, set MAGJVERR="1^"_errmsg.
"RTN","MAGJVAPI",62,0)
 S MAGJVERR=0 D
"RTN","MAGJVAPI",63,0)
 . S RADFN=$P(DATA,U,2) I RADFN="" S MAGJVERR="1^"_TAGG_": NULL (RADFN)." Q
"RTN","MAGJVAPI",64,0)
 . S MAGIEN=$P(DATA,U,3) I MAGIEN="" S MAGJVERR="1^"_TAGG_": NULL (MAGIEN)." Q
"RTN","MAGJVAPI",65,0)
 . I '$D(^MAG(2005,MAGIEN)) S MAGJVERR="1^"_TAGG_": UNDEFINED SUBSCRIPT ^MAG(2005,"_MAGIEN_"," Q
"RTN","MAGJVAPI",66,0)
 . I RADFN'=$P($G(^MAG(2005,MAGIEN,0)),U,7) S MAGJVERR="1^"_TAGG_": INPUT POINTERS UNRELATED ON SYSTEM." Q
"RTN","MAGJVAPI",67,0)
 ;
"RTN","MAGJVAPI",68,0)
 ;--- Proceed iff no error.
"RTN","MAGJVAPI",69,0)
 I MAGJVERR=0 D
"RTN","MAGJVAPI",70,0)
 . N ACTION,NIMGS,PTCT,REMOTE,VRADVER,USERCLS,YNRIST
"RTN","MAGJVAPI",71,0)
 . S ACTION=$P(DATA,U,1) S:ACTION="" ACTION="Unspecified"
"RTN","MAGJVAPI",72,0)
 . S REMOTE=$P(DATA,U,5) S:REMOTE="" REMOTE="Unspecified"
"RTN","MAGJVAPI",73,0)
 . S NIMGS=$P(DATA,U,4),VRADVER=$P(DATA,U,6),USERCLS=$P(DATA,U,7)
"RTN","MAGJVAPI",74,0)
 . S YNRIST=$S(+USERCLS:1,1:0)
"RTN","MAGJVAPI",75,0)
 . ;
"RTN","MAGJVAPI",76,0)
 . ;--- Initialize PatientCount.
"RTN","MAGJVAPI",77,0)
 . S PTCT=RADFN'=$G(MAGJOB("LASTPT",ACTION))
"RTN","MAGJVAPI",78,0)
 . I PTCT S MAGJOB("LASTPT",ACTION)=RADFN
"RTN","MAGJVAPI",79,0)
 . S $P(MAGJTXT,U,1)=ACTION ; "VR-RVDODVA" or "VR-RVVAVA"
"RTN","MAGJVAPI",80,0)
 . S $P(MAGJTXT,U,2)=RADFN  ; IEN of PATIENT file (#2)
"RTN","MAGJVAPI",81,0)
 . S $P(MAGJTXT,U,3)=MAGIEN ; IEN of ^MAG(2005,
"RTN","MAGJVAPI",82,0)
 . S $P(MAGJTXT,U,6)=NIMGS  ; Image Count
"RTN","MAGJVAPI",83,0)
 . S $P(MAGJTXT,U,7)=PTCT   ; Patient Count
"RTN","MAGJVAPI",84,0)
 . S $P(MAGJTXT,U,8)=YNRIST ; Radiologist? (0/1)
"RTN","MAGJVAPI",85,0)
 . S $P(MAGJTXT,U,9)=REMOTE ; Remote Read? (0/1)
"RTN","MAGJVAPI",86,0)
 . ;
"RTN","MAGJVAPI",87,0)
 . ;--- Update the IMAGING WINDOWS SESSIONS file (#2006.82).
"RTN","MAGJVAPI",88,0)
 . D ACTION^MAGGTAU(MAGJTXT,1)
"RTN","MAGJVAPI",89,0)
 . ;
"RTN","MAGJVAPI",90,0)
 . N MAGPACK S MAGPACK="VRAD:"_VRADVER
"RTN","MAGJVAPI",91,0)
 . S:REMOTE ACTION=ACTION_"/REM"
"RTN","MAGJVAPI",92,0)
 . ;
"RTN","MAGJVAPI",93,0)
 . ;--- Update the IMAGE ACCESS LOG file (#2006.95).
"RTN","MAGJVAPI",94,0)
 . D ENTRY^MAGLOG(ACTION,DUZ,MAGIEN,MAGPACK,RADFN,NIMGS)
"RTN","MAGJVAPI",95,0)
 Q MAGJVERR
"RTN","MAGJVAPI",96,0)
 ;
"RTN","MAGJVAPI",97,0)
 ; MAGJVAPI
"RTN","MAGS2BSE")
0^12^B3911053
"RTN","MAGS2BSE",1,0)
MAGS2BSE ;WOIFO/JSL - IMAGING BROKER SECURITY PROGRAM ; 9-JUN-2010 2:45 PM
"RTN","MAGS2BSE",2,0)
 ;;3.0;IMAGING;**111,90**;Mar 19, 2002;Build 1764;Jun 09, 2010
"RTN","MAGS2BSE",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGS2BSE",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGS2BSE",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGS2BSE",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGS2BSE",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGS2BSE",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGS2BSE",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGS2BSE",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGS2BSE",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGS2BSE",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGS2BSE",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGS2BSE",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGS2BSE",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGS2BSE",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGS2BSE",17,0)
 ;;
"RTN","MAGS2BSE",18,0)
 Q
"RTN","MAGS2BSE",19,0)
 ;
"RTN","MAGS2BSE",20,0)
BSE(RES) ;RETURN A BROKER SECURITY TOKEN
"RTN","MAGS2BSE",21,0)
 D SETVISIT^XUSBSE1(.RES)  ;XUS SET VISITOR - RPC return a token RES
"RTN","MAGS2BSE",22,0)
 Q
"RTN","MAGS2BSE",23,0)
 ;
"RTN","MAGS2BSE",24,0)
 ;+++++ RPC: MAG BROKER GET VISITOR
"RTN","MAGS2BSE",25,0)
 ; 
"RTN","MAGS2BSE",26,0)
 ;   External Call: GETVISIT^XUSBSE1()  ; Check for expired token.
"RTN","MAGS2BSE",27,0)
 ; 
"RTN","MAGS2BSE",28,0)
 ; MAGREF1 -- Local variable name for the return value.
"RTN","MAGS2BSE",29,0)
 ; MAGTKN  -- The token to be checked.
"RTN","MAGS2BSE",30,0)
 ; 
"RTN","MAGS2BSE",31,0)
 ; Returns ...
"RTN","MAGS2BSE",32,0)
 ; ===========
"RTN","MAGS2BSE",33,0)
 ;                ______ON_ERROR_______    ___EXPECTED___
"RTN","MAGS2BSE",34,0)
 ; MAGREF1      : 0                        "^"-delimited demographic data
"RTN","MAGS2BSE",35,0)
 ;
"RTN","MAGS2BSE",36,0)
 ; Notes:
"RTN","MAGS2BSE",37,0)
 ; ======
"RTN","MAGS2BSE",38,0)
 ; 
"RTN","MAGS2BSE",39,0)
 ; See the description for RPC: XUS GET VISITOR.
"RTN","MAGS2BSE",40,0)
BSEXP(MAGREF1,MAGTKN) ;
"RTN","MAGS2BSE",41,0)
 D GETVISIT^XUSBSE1(.MAGREF2,MAGTKN)
"RTN","MAGS2BSE",42,0)
 S MAGREF1=$S(MAGREF2="":0,1:MAGREF2)
"RTN","MAGS2BSE",43,0)
 Q
"RTN","MAGS2BSE",44,0)
 ;
"RTN","MAGS2BSE",45,0)
 ; MAGS2BSE
"VER")
8.0^22.0
**END**
**END**


****
****
