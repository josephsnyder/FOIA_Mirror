KIDS Distribution saved on Nov 06, 2007@16:46:23
Vistarad Patch 76
**KIDS**:MAG*3.0*76^

**INSTALL NAME**
MAG*3.0*76
"BLD",5404,0)
MAG*3.0*76^IMAGING^0^3071106^y
"BLD",5404,1,0)
^^1^1^3071018^^^^
"BLD",5404,1,1,0)
VistARad patch 76
"BLD",5404,4,0)
^9.64PA^^
"BLD",5404,6.3)
19
"BLD",5404,"ABNS",0)
^9.66A^^
"BLD",5404,"ABPKG")
n^n
"BLD",5404,"INIT")
POST^MAGJMN1
"BLD",5404,"KRN",0)
^9.67PA^8989.52^19
"BLD",5404,"KRN",.4,0)
.4
"BLD",5404,"KRN",.401,0)
.401
"BLD",5404,"KRN",.402,0)
.402
"BLD",5404,"KRN",.403,0)
.403
"BLD",5404,"KRN",.5,0)
.5
"BLD",5404,"KRN",.84,0)
.84
"BLD",5404,"KRN",3.6,0)
3.6
"BLD",5404,"KRN",3.8,0)
3.8
"BLD",5404,"KRN",9.2,0)
9.2
"BLD",5404,"KRN",9.8,0)
9.8
"BLD",5404,"KRN",9.8,"NM",0)
^9.68A^14^14
"BLD",5404,"KRN",9.8,"NM",1,0)
MAGJEX1B^^0^B30045444
"BLD",5404,"KRN",9.8,"NM",2,0)
MAGJEX2^^0^B46758312
"BLD",5404,"KRN",9.8,"NM",3,0)
MAGJLS2^^0^B76760621
"BLD",5404,"KRN",9.8,"NM",4,0)
MAGJLS4^^0^B50894093
"BLD",5404,"KRN",9.8,"NM",5,0)
MAGJLST1^^0^B53406353
"BLD",5404,"KRN",9.8,"NM",6,0)
MAGJMN1^^0^B62146052
"BLD",5404,"KRN",9.8,"NM",7,0)
MAGJUPD1^^0^B56235053
"BLD",5404,"KRN",9.8,"NM",8,0)
MAGJUPD2^^0^B50382379
"BLD",5404,"KRN",9.8,"NM",9,0)
MAGJUTL1^^0^B64551081
"BLD",5404,"KRN",9.8,"NM",10,0)
MAGJUTL2^^0^B48913977
"BLD",5404,"KRN",9.8,"NM",11,0)
MAGJUTL4^^0^B43697097
"BLD",5404,"KRN",9.8,"NM",12,0)
MAGJUTL5^^0^B32992416
"BLD",5404,"KRN",9.8,"NM",13,0)
MAGJUTL3^^0^B68048803
"BLD",5404,"KRN",9.8,"NM",14,0)
MAGJLS2B^^0^B73366259
"BLD",5404,"KRN",9.8,"NM","B","MAGJEX1B",1)

"BLD",5404,"KRN",9.8,"NM","B","MAGJEX2",2)

"BLD",5404,"KRN",9.8,"NM","B","MAGJLS2",3)

"BLD",5404,"KRN",9.8,"NM","B","MAGJLS2B",14)

"BLD",5404,"KRN",9.8,"NM","B","MAGJLS4",4)

"BLD",5404,"KRN",9.8,"NM","B","MAGJLST1",5)

"BLD",5404,"KRN",9.8,"NM","B","MAGJMN1",6)

"BLD",5404,"KRN",9.8,"NM","B","MAGJUPD1",7)

"BLD",5404,"KRN",9.8,"NM","B","MAGJUPD2",8)

"BLD",5404,"KRN",9.8,"NM","B","MAGJUTL1",9)

"BLD",5404,"KRN",9.8,"NM","B","MAGJUTL2",10)

"BLD",5404,"KRN",9.8,"NM","B","MAGJUTL3",13)

"BLD",5404,"KRN",9.8,"NM","B","MAGJUTL4",11)

"BLD",5404,"KRN",9.8,"NM","B","MAGJUTL5",12)

"BLD",5404,"KRN",19,0)
19
"BLD",5404,"KRN",19.1,0)
19.1
"BLD",5404,"KRN",19.1,"NM",0)
^9.68A^5^5
"BLD",5404,"KRN",19.1,"NM",1,0)
MAGJ SYSTEM MANAGER^^0
"BLD",5404,"KRN",19.1,"NM",2,0)
MAGJ STORE IMAGES^^0
"BLD",5404,"KRN",19.1,"NM",3,0)
MAGJ VOXAR COPYIMAGE^^0
"BLD",5404,"KRN",19.1,"NM",4,0)
MAGJ VOXAR EXPORTCAPTURE^^0
"BLD",5404,"KRN",19.1,"NM",5,0)
MAGJ VOXAR PRINTCOMPOSER^^0
"BLD",5404,"KRN",19.1,"NM","B","MAGJ STORE IMAGES",2)

"BLD",5404,"KRN",19.1,"NM","B","MAGJ SYSTEM MANAGER",1)

"BLD",5404,"KRN",19.1,"NM","B","MAGJ VOXAR COPYIMAGE",3)

"BLD",5404,"KRN",19.1,"NM","B","MAGJ VOXAR EXPORTCAPTURE",4)

"BLD",5404,"KRN",19.1,"NM","B","MAGJ VOXAR PRINTCOMPOSER",5)

"BLD",5404,"KRN",101,0)
101
"BLD",5404,"KRN",409.61,0)
409.61
"BLD",5404,"KRN",771,0)
771
"BLD",5404,"KRN",870,0)
870
"BLD",5404,"KRN",8989.51,0)
8989.51
"BLD",5404,"KRN",8989.52,0)
8989.52
"BLD",5404,"KRN",8994,0)
8994
"BLD",5404,"KRN","B",.4,.4)

"BLD",5404,"KRN","B",.401,.401)

"BLD",5404,"KRN","B",.402,.402)

"BLD",5404,"KRN","B",.403,.403)

"BLD",5404,"KRN","B",.5,.5)

"BLD",5404,"KRN","B",.84,.84)

"BLD",5404,"KRN","B",3.6,3.6)

"BLD",5404,"KRN","B",3.8,3.8)

"BLD",5404,"KRN","B",9.2,9.2)

"BLD",5404,"KRN","B",9.8,9.8)

"BLD",5404,"KRN","B",19,19)

"BLD",5404,"KRN","B",19.1,19.1)

"BLD",5404,"KRN","B",101,101)

"BLD",5404,"KRN","B",409.61,409.61)

"BLD",5404,"KRN","B",771,771)

"BLD",5404,"KRN","B",870,870)

"BLD",5404,"KRN","B",8989.51,8989.51)

"BLD",5404,"KRN","B",8989.52,8989.52)

"BLD",5404,"KRN","B",8994,8994)

"BLD",5404,"QUES",0)
^9.62^^
"BLD",5404,"REQB",0)
^9.611^1^1
"BLD",5404,"REQB",1,0)
MAG*3.0*65^1
"BLD",5404,"REQB","B","MAG*3.0*65",1)

"INIT")
POST^MAGJMN1
"KRN",19.1,844,-1)
0^1
"KRN",19.1,844,0)
MAGJ SYSTEM MANAGER^Allow configuration edits
"KRN",19.1,844,1,0)
^19.11^3^3^3071017^
"KRN",19.1,844,1,1,0)
Allow the user to make edits to certain VistARad configuration
"KRN",19.1,844,1,2,0)
settings; initial use is to restrict access to edits on the client
"KRN",19.1,844,1,3,0)
for the "Voxar 3D" Settings tab.
"KRN",19.1,845,-1)
0^2
"KRN",19.1,845,0)
MAGJ STORE IMAGES^Allow storing images
"KRN",19.1,845,1,0)
^^3^3^3071017^
"KRN",19.1,845,1,1,0)
Allow image storage from certain integrated applications that 
"KRN",19.1,845,1,2,0)
render secondary capture images.  First use of this is to allow
"KRN",19.1,845,1,3,0)
storing images generated on the Voxar 3D application.
"KRN",19.1,846,-1)
0^4
"KRN",19.1,846,0)
MAGJ VOXAR EXPORTCAPTURE^Allow VOXAR exportcapture
"KRN",19.1,846,1,0)
^^3^3^3071017^
"KRN",19.1,846,1,1,0)
In the Voxar integration, allow user to use the Voxar options for
"KRN",19.1,846,1,2,0)
exporting images (Export Dicom, and Export non-Dicom); see Voxar
"KRN",19.1,846,1,3,0)
documentation for details.
"KRN",19.1,847,-1)
0^3
"KRN",19.1,847,0)
MAGJ VOXAR COPYIMAGE^Allow VOXAR copyimage
"KRN",19.1,847,1,0)
^^2^2^3071017^
"KRN",19.1,847,1,1,0)
In the Voxar integration, allow user to use the Voxar option for
"KRN",19.1,847,1,2,0)
copying images to the clipboard; see Voxar documentation for details.
"KRN",19.1,848,-1)
0^5
"KRN",19.1,848,0)
MAGJ VOXAR PRINTCOMPOSER^Allow VOXAR printcomposer
"KRN",19.1,848,1,0)
^^3^3^3071017^
"KRN",19.1,848,1,1,0)
In the Voxar integration, allow user to use the Voxar option for
"KRN",19.1,848,1,2,0)
outputting images to a defined printer; see Voxar documentation
"KRN",19.1,848,1,3,0)
for details.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020517^126
"PKG",454,22,1,"PAH",1,0)
76^3071106^133
"PKG",454,22,1,"PAH",1,1,0)
^^1^1^3071106
"PKG",454,22,1,"PAH",1,1,1,0)
VistARad patch 76
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","MAGJEX1B")
0^1^B30045444
"RTN","MAGJEX1B",1,0)
MAGJEX1B ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  9:58 AM
"RTN","MAGJEX1B",2,0)
 ;;3.0;IMAGING;**16,22,18,65,76**;Jun 22, 2007;Build 19
"RTN","MAGJEX1B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJEX1B",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1B",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJEX1B",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJEX1B",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJEX1B",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJEX1B",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJEX1B",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJEX1B",11,0)
 ;; |                                                               |
"RTN","MAGJEX1B",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJEX1B",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJEX1B",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJEX1B",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJEX1B",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJEX1B",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1B",18,0)
 ;;
"RTN","MAGJEX1B",19,0)
 Q
"RTN","MAGJEX1B",20,0)
 ; Subroutines for fetch exam images, exam lock/reserve, remove dangling locks
"RTN","MAGJEX1B",21,0)
 ;
"RTN","MAGJEX1B",22,0)
IMGLOOP ; get data for all the images
"RTN","MAGJEX1B",23,0)
 ; This subroutine is called from MAGJEX1
"RTN","MAGJEX1B",24,0)
 ;       MAGGRY holds $NA reference to ^TMP where Broker return message is assembled;
"RTN","MAGJEX1B",25,0)
 ;   all references to MAGGRY use subscript indirection  
"RTN","MAGJEX1B",26,0)
 N DFN,IMGREC,P18ALTP
"RTN","MAGJEX1B",27,0)
 I '$D(MAGJOB("ALTPATH")) S MAGJOB("ALTPATH")=0 ; facilitates testing
"RTN","MAGJEX1B",28,0)
 F IMAG=MAGSTRT:1:MAGEND S MAGIEN=$P(MAGS(IMAG),U,4) D
"RTN","MAGJEX1B",29,0)
 . S DFN=$P(MAGS(IMAG),U,8)
"RTN","MAGJEX1B",30,0)
 . I DFN=RADFN S MIXEDUP(RADFN)=""  ;ok
"RTN","MAGJEX1B",31,0)
 . E  S:'DFN DFN=0 S MIXEDUP=MIXEDUP+2,MIXEDUP(DFN)="" ; database corruption
"RTN","MAGJEX1B",32,0)
 . S MDL=$P(MAGS(IMAG),U,3)
"RTN","MAGJEX1B",33,0)
 . I MDL="DR" S MDL="CR"  ; for now, hard code cx of non-standard code
"RTN","MAGJEX1B",34,0)
 . I $G(SERBRK),(SERLBL]"") D    ; mark Begin of series
"RTN","MAGJEX1B",35,0)
 . . S CT=CT+1,@MAGGRY@(CT+STARTNOD)=SERLBL,SERLBL=""
"RTN","MAGJEX1B",36,0)
 . S MAGXX=MAGIEN D
"RTN","MAGJEX1B",37,0)
 . . I 'USETGA,($P(MAGS(IMAG),U,2)["BIG") D BIG^MAGFILEB Q
"RTN","MAGJEX1B",38,0)
 . . E  D VST^MAGFILEB
"RTN","MAGJEX1B",39,0)
 . I MAGJOB("ALTPATH") S X=$P(MAGS(IMAG),U,6),P18ALTP="" I X]"" D
"RTN","MAGJEX1B",40,0)
 . . F I=1:1:$L(X,",") S T=$P(X,",",I) I T S CURPATHS(T)="" I 'MAGJOB("P32"),$D(MAGJOB("LOC",T)) S P18ALTP=P18ALTP_$S(P18ALTP="":"",1:",")_T
"RTN","MAGJEX1B",41,0)
 . S IMGREC="B2^"_MAGIEN_U_MAGFILE2
"RTN","MAGJEX1B",42,0)
 . I 'MAGJOB("P32") D
"RTN","MAGJEX1B",43,0)
 . . S T="",X=$P(MAGS(IMAG),U,11) I X]"" F I="K","I","U" I X[I,$D(PSIND(I)) S T=T_$S(T="":"",1:",")_I ; PS_Indicators
"RTN","MAGJEX1B",44,0)
 . . S IMGREC=IMGREC_U_T_U_$S(MAGJOB("ALTPATH"):P18ALTP,1:"") ; AltPaths for this img
"RTN","MAGJEX1B",45,0)
 . . I '(PROCDT]"") D  ; Img Process Date
"RTN","MAGJEX1B",46,0)
 . . . S X=$P(MAGS(IMAG),U,12) I X]"" S T=$S($E(X)=3:20,$E(X)=2:19,1:"") I T S PROCDT=T_$E(X,2,7)
"RTN","MAGJEX1B",47,0)
 . . I '(ACQSITE]"") D  ; Acq Site
"RTN","MAGJEX1B",48,0)
 . . . S X=$P(MAGS(IMAG),U,13) I X]"" S ACQSITE=X
"RTN","MAGJEX1B",49,0)
 . S CT=CT+1,@MAGGRY@(CT+STARTNOD)=IMGREC
"RTN","MAGJEX1B",50,0)
 . I MODALITY="" D
"RTN","MAGJEX1B",51,0)
 . . I 'MAGJOB("P32") S MODALITY=MDL Q
"RTN","MAGJEX1B",52,0)
 . . N T S T=$P("1dummy1^CT^CR^MR^US^AS^CD^CS^DG^EC^FA^LP^MA^PT^ST^XA^NM^OT^BI^CP^DD^DM^ES^FS^LS^MS^RG^TG^RF^RTIMAGE^RTSTRUCT^HC^RTDOSE^RTPLAN^RTRECORD^DX^MG^IO^PX",U_MDL_U,1)
"RTN","MAGJEX1B",53,0)
 . . S MODALITY=$L(T,U)
"RTN","MAGJEX1B",54,0)
 . . I MODALITY>38 S MODALITY=9999  ; 38=TOTAL # modalities defined; else 9999
"RTN","MAGJEX1B",55,0)
 . . I STKLAY S OPENCNT=0 ; no limit on WS for # of exams open in StackVwr
"RTN","MAGJEX1B",56,0)
 ;
"RTN","MAGJEX1B",57,0)
 I 'MAGJOB("ALTPATH") S ALTPATH=-1
"RTN","MAGJEX1B",58,0)
 E  D
"RTN","MAGJEX1B",59,0)
 . S T=0 F  S T=$O(CURPATHS(T)) Q:'T  I $D(MAGJOB("LOC",T)) Q
"RTN","MAGJEX1B",60,0)
 . S ALTPATH=$S('T:0,1:1)
"RTN","MAGJEX1B",61,0)
 . I ALTPATH=$P(MAGJOB("ALTPATH"),U,2) S ALTPATH=-1
"RTN","MAGJEX1B",62,0)
 . E  S $P(MAGJOB("ALTPATH"),U,2)=ALTPATH
"RTN","MAGJEX1B",63,0)
IMGLOOPZ Q
"RTN","MAGJEX1B",64,0)
 ;
"RTN","MAGJEX1B",65,0)
 ;
"RTN","MAGJEX1B",66,0)
LOCKIN(RARPT,LOCKLEV,MYLOCK,LOCKCHK) ; init lock-related info B4 do any lock actions
"RTN","MAGJEX1B",67,0)
 ; called from UTL3 & EX1A
"RTN","MAGJEX1B",68,0)
 ; if LOCKCHK="STATUS", only return current status
"RTN","MAGJEX1B",69,0)
 ; Input RARPT (required) and LOCKCHK (opt)
"RTN","MAGJEX1B",70,0)
 ; Output: LOCKLEV & MYLOCK array; successful LOCKS left intact, unless LOCKCHK="STATUS"
"RTN","MAGJEX1B",71,0)
 ; M LOCKS det. what Actions are possible by calling program modules
"RTN","MAGJEX1B",72,0)
 ; MYLOCK(1/2)= Lock_is_Mine ^ DUZ ^ $J ^ User Name ^ User Init ^ Case #
"RTN","MAGJEX1B",73,0)
 ; LOCKLEV=0:3--is/not 1-Lockable/2-Reservable/3-Both to user
"RTN","MAGJEX1B",74,0)
 ; MYLOCK=0:3--is/not already 1-Locked/2-Reserved/3-Both by user
"RTN","MAGJEX1B",75,0)
 ;
"RTN","MAGJEX1B",76,0)
 N CKMINE,CASENO,XX,XY,ILOCK
"RTN","MAGJEX1B",77,0)
 S LOCKCHK=$G(LOCKCHK)="STATUS"
"RTN","MAGJEX1B",78,0)
 S LOCKLEV=0 K MYLOCK S MYLOCK=0
"RTN","MAGJEX1B",79,0)
 L +^XTMP("MAGJ","LOCK",RARPT):0
"RTN","MAGJEX1B",80,0)
 I  S LOCKLEV=3
"RTN","MAGJEX1B",81,0)
 L +^XTMP("MAGJ","LOCK",RARPT,1):0 ; "1" for Exam "LOCK"
"RTN","MAGJEX1B",82,0)
 I  S:'LOCKLEV LOCKLEV=1
"RTN","MAGJEX1B",83,0)
 L +^XTMP("MAGJ","LOCK",RARPT,2):0 ; "2" for Exam "RESERVE"
"RTN","MAGJEX1B",84,0)
 I  S LOCKLEV=$S('LOCKLEV:2,1:3)
"RTN","MAGJEX1B",85,0)
 L -^XTMP("MAGJ","LOCK",RARPT)
"RTN","MAGJEX1B",86,0)
 S CKMINE=DUZ_U_$J
"RTN","MAGJEX1B",87,0)
 F ILOCK=1,2 D
"RTN","MAGJEX1B",88,0)
 . S XX="",XY="",CASENO=$G(^XTMP("MAGJ","LOCK",RARPT,ILOCK))
"RTN","MAGJEX1B",89,0)
 . I CASENO]"" S XX=$G(^XTMP("MAGJ","LOCK",RARPT,ILOCK,CASENO)),XY=$P(XX,"|",2),XX=$P(XX,"|")
"RTN","MAGJEX1B",90,0)
 . S X=$P(XX,U,1,2),MYLOCK(ILOCK)=(X=CKMINE)
"RTN","MAGJEX1B",91,0)
 . S X=$P(XX,U)_U_$P(XX,U,2)_U_$P(XX,U,4)_U_$P(XX,U,5)_U_CASENO_U_"|"_XY
"RTN","MAGJEX1B",92,0)
 . S MYLOCK(ILOCK)=MYLOCK(ILOCK)_U_X
"RTN","MAGJEX1B",93,0)
 . I MYLOCK(ILOCK) S MYLOCK=MYLOCK+ILOCK
"RTN","MAGJEX1B",94,0)
 I LOCKCHK,LOCKLEV D  ; reset locks for Lock check
"RTN","MAGJEX1B",95,0)
 . I LOCKLEV=1!(LOCKLEV=3) L -^XTMP("MAGJ","LOCK",RARPT,1)
"RTN","MAGJEX1B",96,0)
 . I LOCKLEV=2!(LOCKLEV=3) L -^XTMP("MAGJ","LOCK",RARPT,2)
"RTN","MAGJEX1B",97,0)
 Q
"RTN","MAGJEX1B",98,0)
 ;
"RTN","MAGJEX1B",99,0)
REMLOCK ;  Remove dangling exam locks; this is run only at Logon
"RTN","MAGJEX1B",100,0)
 ; If a recorded lock is found that a new job (logon) can M-Lock
"RTN","MAGJEX1B",101,0)
 ; then that is a dangling lock that must be removed
"RTN","MAGJEX1B",102,0)
 N RARPT,TS,LOCKLEV,MYLOCK,ACTION,DAYCASE,ILOCK,RESULT
"RTN","MAGJEX1B",103,0)
 S RARPT=""
"RTN","MAGJEX1B",104,0)
 F  S RARPT=$O(^XTMP("MAGJ","LOCK",RARPT)) Q:'RARPT  D  ; loop thru recorded locks
"RTN","MAGJEX1B",105,0)
 . D LOCKIN(RARPT,.LOCKLEV,.MYLOCK)
"RTN","MAGJEX1B",106,0)
 . I 'LOCKLEV Q  ;unable to lock--is ok
"RTN","MAGJEX1B",107,0)
 . S ACTION="",DAYCASE=""
"RTN","MAGJEX1B",108,0)
 . F ILOCK=1,2 I $D(^XTMP("MAGJ","LOCK",RARPT,ILOCK)) S XX=^(ILOCK) D
"RTN","MAGJEX1B",109,0)
 . . I DAYCASE="" S DAYCASE=$P(XX,U)
"RTN","MAGJEX1B",110,0)
 . . I ILOCK=1,(LOCKLEV=1!(LOCKLEV=3)) S $P(ACTION,U,1)=1
"RTN","MAGJEX1B",111,0)
 . . I ILOCK=2,(LOCKLEV=2!(LOCKLEV=3)) S $P(ACTION,U,2)=1
"RTN","MAGJEX1B",112,0)
 . I 'ACTION,'+$P(ACTION,U,2),(DAYCASE="") D  Q  ; should never occur, but 
"RTN","MAGJEX1B",113,0)
 . . I LOCKLEV=1!(LOCKLEV=3) L -^XTMP("MAGJ","LOCK",RARPT,1)
"RTN","MAGJEX1B",114,0)
 . . I LOCKLEV=2!(LOCKLEV=3) L -^XTMP("MAGJ","LOCK",RARPT,2)
"RTN","MAGJEX1B",115,0)
 . D LOCKOUT^MAGJEX1A(RARPT,DAYCASE,.LOCKLEV,.MYLOCK,ACTION,.RESULT) ; 1st, lock to me
"RTN","MAGJEX1B",116,0)
 . K LOCKLEV,MYLOCK D LOCKACT^MAGJEX1A(RARPT,DAYCASE,101,.RESULT) ;    then, clear the lock
"RTN","MAGJEX1B",117,0)
 S TS="" F I=2,0 S TS=TS_$S(TS="":"",1:U)_$$HTFM^XLFDT($H+I,0)
"RTN","MAGJEX1B",118,0)
 S ^XTMP("MAGJ",0)=TS_U_"VistaRad Locks"
"RTN","MAGJEX1B",119,0)
 Q
"RTN","MAGJEX1B",120,0)
 ;
"RTN","MAGJEX1B",121,0)
 ;
"RTN","MAGJEX1B",122,0)
END ;
"RTN","MAGJEX2")
0^2^B46758312
"RTN","MAGJEX2",1,0)
MAGJEX2 ;;WIRMFO/JHC Rad. Workstation RPC calls;[ 02/25/2000  4:40 PM ] ; 09 Jun 2003  2:58 PM
"RTN","MAGJEX2",2,0)
 ;;3.0;IMAGING;**51,18,76**;Jun 22, 2007;Build 19
"RTN","MAGJEX2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJEX2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJEX2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJEX2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJEX2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJEX2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJEX2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJEX2",11,0)
 ;; |                                                               |
"RTN","MAGJEX2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJEX2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJEX2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJEX2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJEX2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJEX2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX2",18,0)
 ;;
"RTN","MAGJEX2",19,0)
 Q
"RTN","MAGJEX2",20,0)
 ; Subroutines for pre-fetch/ auto-display prior exams' images
"RTN","MAGJEX2",21,0)
 ; Entry Points:
"RTN","MAGJEX2",22,0)
 ;   PRIOR1  -- Pre-Fetch/Auto-Display images for other related cases;
"RTN","MAGJEX2",23,0)
 ;    RPC Call: MAGJ PRIOREXAMS
"RTN","MAGJEX2",24,0)
 ;   PREFETCH -- Pre-Fetch initiated from 
"RTN","MAGJEX2",25,0)
 ;
"RTN","MAGJEX2",26,0)
 Q
"RTN","MAGJEX2",27,0)
ERR N ERR S ERR=$$EC^%ZOSV S MAGGRY(0)="0^Server Program Error: "_ERR
"RTN","MAGJEX2",28,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJEX2",29,0)
 Q:$Q 1  Q
"RTN","MAGJEX2",30,0)
PREFETCH ; Entry point from HL7 processing, to initiate prefetch at
"RTN","MAGJEX2",31,0)
 ; time of radiology "Register Patient for Exam" function
"RTN","MAGJEX2",32,0)
 ; Do not process if the exam is being Canceled (RACANC true)
"RTN","MAGJEX2",33,0)
 ;
"RTN","MAGJEX2",34,0)
 N RET S RET=""
"RTN","MAGJEX2",35,0)
 I '$P($G(^MAG(2006.69,1,0)),U,5) G PREFQ          ; Prefetch disabled
"RTN","MAGJEX2",36,0)
 I '($G(RADFN)&$G(RADTI)&$G(RACNI)&'$G(RACANC)) G PREFQ ; Required vars
"RTN","MAGJEX2",37,0)
 D PRIOR1(.RET,"P"_U_RADFN_U_RADTI_U_RACNI)
"RTN","MAGJEX2",38,0)
PREFQ ; W !,"End PRE-FETCH RET=" N JHC R JHC ZW RET
"RTN","MAGJEX2",39,0)
 Q
"RTN","MAGJEX2",40,0)
 ;
"RTN","MAGJEX2",41,0)
PRIOR1(MAGGRY,DATA) ; review all exams for a patient to find "related" exams
"RTN","MAGJEX2",42,0)
 ; This ep also called as subroutine from routing software (P51)
"RTN","MAGJEX2",43,0)
 ; MAGGRY - return array of exams to PreFetch, or Auto-send to RAD W/S
"RTN","MAGJEX2",44,0)
 ; DATA:  - input params for the Current Exam
"RTN","MAGJEX2",45,0)
 ;   1) ACTION = P -- Pre-fetch Exams (from Jukebox to Magnetic Disk)
"RTN","MAGJEX2",46,0)
 ;             = A -- Auto-route priors
"RTN","MAGJEX2",47,0)
 ;   2) RADFN  = Case pointers to Rad/Nuc Med Patient file 
"RTN","MAGJEX2",48,0)
 ;   3) RADTI  =  ""        ""         ""          ""
"RTN","MAGJEX2",49,0)
 ;   4) RACNI  =  ""        ""         ""          ""
"RTN","MAGJEX2",50,0)
 ;   5) RARPT  - Case pointer to ^RARPT global
"RTN","MAGJEX2",51,0)
 ;
"RTN","MAGJEX2",52,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJEX2"
"RTN","MAGJEX2",53,0)
 K MAGGRY
"RTN","MAGJEX2",54,0)
 N RADFN,RADTI,RACNI,RARPT,RADATA
"RTN","MAGJEX2",55,0)
 N DAYCASE,DIQUIET,ACTION,CPT,HDR,MAGDFN,MAGDTI,MAGCNI,MAGRET,MAGRACNT
"RTN","MAGJEX2",56,0)
 S ACTION=$P(DATA,U)
"RTN","MAGJEX2",57,0)
 I ACTION="P"!(ACTION="A")
"RTN","MAGJEX2",58,0)
 E  S MAGGRY(0)="0^Invalid Request (Action code="_ACTION_")" G PRIOR1Z
"RTN","MAGJEX2",59,0)
 S MAGDFN=$P(DATA,U,2),MAGDTI=$P(DATA,U,3),MAGCNI=$P(DATA,U,4)
"RTN","MAGJEX2",60,0)
 I MAGDFN,MAGDTI,MAGCNI
"RTN","MAGJEX2",61,0)
 E  S MAGGRY(0)="0^Request Contains Invalid Case Pointer ("_DATA_")" G PRIOR1Z
"RTN","MAGJEX2",62,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJEX2",63,0)
 N MAGJOB D MAGJOBNC^MAGJUTL3
"RTN","MAGJEX2",64,0)
 S HDR=$S(ACTION="P":"Pre-fetch",ACTION="A":"Auto-Display",1:"???")_" Prior Exams for CASE: "
"RTN","MAGJEX2",65,0)
 I '$D(^DPT(MAGDFN,0)) S MAGGRY(0)="0^Request Contains Invalid Patient Pointer ("_MAGDFN_")" G PRIOR1Z
"RTN","MAGJEX2",66,0)
 I $D(^RADPT(MAGDFN,"DT",MAGDTI,"P",MAGCNI))
"RTN","MAGJEX2",67,0)
 E  S MAGGRY(0)="0^Request Contains Invalid Case Pointer ("_MAGCNI_")" G PRIOR1Z
"RTN","MAGJEX2",68,0)
 S MAGRACNT=0
"RTN","MAGJEX2",69,0)
 S MAGGRY(0)="0^Compiling Prior Radiology Exams"
"RTN","MAGJEX2",70,0)
 D GETEXAM2^MAGJUTL1(MAGDFN,MAGDTI,MAGCNI,"",.MAGRET) ; Current Exam only
"RTN","MAGJEX2",71,0)
 S RADFN=MAGDFN,RADTI=MAGDTI,RACNI=MAGCNI
"RTN","MAGJEX2",72,0)
 I 'MAGRET S MAGGRY(0)="0^Current Case is Not Accessible" G PRIOR1Z
"RTN","MAGJEX2",73,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1)) S DAYCASE=$P(RADATA,U,12) D SVMAG2A
"RTN","MAGJEX2",74,0)
 I 'MAGGRY(0) S MAGGRY(0)="0^Current Case either has no CPT code, or has no rules defined for its CPT code." G PRIOR1Z
"RTN","MAGJEX2",75,0)
 S HDR=HDR_DAYCASE
"RTN","MAGJEX2",76,0)
 D SRCH(MAGDFN)  ;  Search prior exams for this patient
"RTN","MAGJEX2",77,0)
PRIOR1Z ;
"RTN","MAGJEX2",78,0)
 I 'MAGGRY(0) S:(MAGGRY(0)["Compiling") MAGGRY(0)="0^No Exams Found"
"RTN","MAGJEX2",79,0)
 E  I +MAGGRY(0)=1 S MAGGRY(0)="0^No Prior Exams Found" K MAGGRY(1)
"RTN","MAGJEX2",80,0)
 E  D SVMAG2B
"RTN","MAGJEX2",81,0)
 K ^TMP($J,"MAGRAEX"),^("RAE1")
"RTN","MAGJEX2",82,0)
 Q
"RTN","MAGJEX2",83,0)
 ;
"RTN","MAGJEX2",84,0)
SRCH(RADFN) ; Traverse all exams for a patient, up to limits of age & total
"RTN","MAGJEX2",85,0)
 ; numbers of exams to consider
"RTN","MAGJEX2",86,0)
 N BEGDT,LIMYRS,LIMEXAMS,X
"RTN","MAGJEX2",87,0)
 S X=$G(^MAG(2006.69,1,0))
"RTN","MAGJEX2",88,0)
 S LIMYRS=+$P(X,U,14),LIMEXAMS=+$P(X,U,15)
"RTN","MAGJEX2",89,0)
 S:'LIMYRS LIMYRS=7 S:'LIMEXAMS LIMEXAMS=50 ; default limit # Exams
"RTN","MAGJEX2",90,0)
 S BEGDT=($E(DT,1,3)-LIMYRS)_$E(DT,4,7)
"RTN","MAGJEX2",91,0)
 I BEGDT<2950101 S BEGDT=2950101 ; 2 yrs prior to earliest VistaPACS
"RTN","MAGJEX2",92,0)
 S MAGRACNT=1 D GETEXAM3^MAGJUTL1(RADFN,BEGDT,"",.MAGRACNT,.MAGRET,"",LIMEXAMS)
"RTN","MAGJEX2",93,0)
 I MAGRET N IDAT S IDAT=1 D
"RTN","MAGJEX2",94,0)
 . F  S IDAT=$O(^TMP($J,"MAGRAEX",IDAT)) Q:'IDAT  S RADATA=^(IDAT,1) D
"RTN","MAGJEX2",95,0)
 .. S RADTI=$P(RADATA,U,2),RACNI=$P(RADATA,U,3)
"RTN","MAGJEX2",96,0)
 .. I RADTI=MAGDTI&(RACNI=MAGCNI) Q  ; skip current case
"RTN","MAGJEX2",97,0)
 .. D SVMAG2A
"RTN","MAGJEX2",98,0)
 Q
"RTN","MAGJEX2",99,0)
 ;
"RTN","MAGJEX2",100,0)
SVMAG2A ; 2A and 2B used by subroutine at tag PRIOR1
"RTN","MAGJEX2",101,0)
 ; Find all the patient's exams whose CPT codes are related to the
"RTN","MAGJEX2",102,0)
 ; Current exam's CPT code, according to dictionary 2006.65
"RTN","MAGJEX2",103,0)
 N RAIMGTYP
"RTN","MAGJEX2",104,0)
 N CPT,CPT3,CPT4,CPT5,CURCPTX,CURCPTS,HIT,MAGMATCH,MAGDTH
"RTN","MAGJEX2",105,0)
 S RARPT=+$P(RADATA,U,10)
"RTN","MAGJEX2",106,0)
 I MAGGRY(0) Q:'$P(MAGGRY(1),U)           ;  Cur Case CPT not in map file
"RTN","MAGJEX2",107,0)
 I  Q:(ACTION="P")&'$D(^RARPT(RARPT,2005))  ; nothing to pre-fetch
"RTN","MAGJEX2",108,0)
 I  Q:$P(RADATA,U,15)<2          ; Cancel or Waiting
"RTN","MAGJEX2",109,0)
 ;   Note: if no images, may still want to do Auto-Disp to get Report;
"RTN","MAGJEX2",110,0)
 ;      also, Current Case should still proceed
"RTN","MAGJEX2",111,0)
 S CPT=$P(RADATA,U,17)
"RTN","MAGJEX2",112,0)
 Q:'CPT  ;  algorithm REQUIRES CPT codes be used
"RTN","MAGJEX2",113,0)
 S CPT5=CPT,CPT4=$E(CPT,1,4),CPT3=$E(CPT,1,3)
"RTN","MAGJEX2",114,0)
 S MAGMATCH="^^"
"RTN","MAGJEX2",115,0)
 I 'MAGGRY(0) D  Q:'MAGMATCH  ; No rules defined for Cur. Case's CPT
"RTN","MAGJEX2",116,0)
 . S Y=""
"RTN","MAGJEX2",117,0)
 .  ;  Order of CPT5/4/3 is important for the algorithm, which
"RTN","MAGJEX2",118,0)
 .  ;  uses the 1st rule found at the LOWEST level of detail defined
"RTN","MAGJEX2",119,0)
 . F X=CPT5,CPT4,CPT3 I $D(^MAG(2006.65,"B",X)) S Y=Y_$S(Y:",",1:"")_X S $P(MAGMATCH,U)=Y
"RTN","MAGJEX2",120,0)
 I CPT,MAGGRY(0) D
"RTN","MAGJEX2",121,0)
 .  ; curcpts has the cpt5/4/3 list generated above for Cur. Case CPT's
"RTN","MAGJEX2",122,0)
 . S HIT=0,CURCPTS=$P(MAGGRY(1),U)
"RTN","MAGJEX2",123,0)
 . F  Q:CURCPTS=""  S CURCPTX=$O(^MAG(2006.65,"B",$P(CURCPTS,","),"")) S CURCPTS=$P(CURCPTS,",",2,9) I CURCPTX]"" D  Q:HIT  ; 1st hit only
"RTN","MAGJEX2",124,0)
 .. ;  This algorithm checks from lowest detail to most general, and acts
"RTN","MAGJEX2",125,0)
 .. ;  on the information found at the FIRST Hit only
"RTN","MAGJEX2",126,0)
 .. F CPT="CPT5","CPT4","CPT3" S CPT=@CPT I CPT]"",$D(^MAG(2006.65,CURCPTX,1,"B",CPT)) S X=$O(^(CPT,"")) D  S HIT=1 Q  ;1st hit only
"RTN","MAGJEX2",127,0)
 ... S X=^MAG(2006.65,CURCPTX,1,X,0) S Y=$S(ACTION="A":2,1:5),X=$P(X,U,Y,Y+2)
"RTN","MAGJEX2",128,0)
 ... I +X S MAGMATCH=CPT F I=2,3 S $P(MAGMATCH,U,I)=$P(X,U,I)
"RTN","MAGJEX2",129,0)
 ;         sample of logic file:
"RTN","MAGJEX2",130,0)
 ; ^MAG(2006.65,1,0) = 730
"RTN","MAGJEX2",131,0)
 ; ^MAG(2006.65,1,1,0) = ^12000011.01^2^2
"RTN","MAGJEX2",132,0)
 ; ^MAG(2006.65,1,1,1,0) = 730^1^40^6^1^120^10
"RTN","MAGJEX2",133,0)
 ; ^MAG(2006.65,1,1,2,0) = 732^1^40^2^1^120^4
"RTN","MAGJEX2",134,0)
 ; ^MAG(2006.65,1,1,"B",730,1) =
"RTN","MAGJEX2",135,0)
 ; ^MAG(2006.65,1,1,"B",732,2) =
"RTN","MAGJEX2",136,0)
 ; ^MAG(2006.65,"B",730,1) =
"RTN","MAGJEX2",137,0)
 ;
"RTN","MAGJEX2",138,0)
 Q:'MAGMATCH
"RTN","MAGJEX2",139,0)
 ; 1  RADFN   RADTI    RACNI   RANME   RASSN    <-- from GETEXAM
"RTN","MAGJEX2",140,0)
 ; 6  RADATE  RADTE    RACN    RAPRC   RARPT
"RTN","MAGJEX2",141,0)
 ; 11 RAST    DAYCASE  RAELOC  RASTP   RASTORD
"RTN","MAGJEX2",142,0)
 ; 16 RADTPRT RACPT    RAIMGTYP
"RTN","MAGJEX2",143,0)
 S MAGDTH=$$FMTH^XLFDT($P(RADATA,U,7),1)
"RTN","MAGJEX2",144,0)
 S X=$P(RADATA,U,18)
"RTN","MAGJEX2",145,0)
 S RAIMGTYP=$S(X]"":$O(^RA(79.2,"C",X,"")),1:X)
"RTN","MAGJEX2",146,0)
 S Y=MAGGRY(0)+1,$P(MAGGRY(0),U)=Y,MAGGRY(Y)=MAGMATCH_U_MAGDTH_U_U_$P(RADATA,U,9)_U_RAIMGTYP_U_RADFN_U_RADTI_U_RACNI_U_RARPT_U_$P(RADATA,U,12)_U_$P(RADATA,U,11)
"RTN","MAGJEX2",147,0)
 Q
"RTN","MAGJEX2",148,0)
 ;
"RTN","MAGJEX2",149,0)
SVMAG2B ; For exams whose CPTs match, select a subset that are within defined
"RTN","MAGJEX2",150,0)
 ; limits with respect to time interval & maximum # exams to retrieve
"RTN","MAGJEX2",151,0)
 ; Return MAGGRY(0) =  count ^ message
"RTN","MAGJEX2",152,0)
 ;        MAGGRY(1:N) = "M08" | RADFN ^ RADTI ^ RACNI ^ RARPT
"RTN","MAGJEX2",153,0)
 N CPT,CT,CURDAT,ICPT,IREC,GO
"RTN","MAGJEX2",154,0)
 S CURDAT=$P(MAGGRY(1),U,4)
"RTN","MAGJEX2",155,0)
 F IREC=2:1:MAGGRY(0) S X=MAGGRY(IREC),CPT=+X D  K MAGGRY(IREC)
"RTN","MAGJEX2",156,0)
 . I $P(X,U,2) S Y=CURDAT-$P(X,U,4) S:Y<0 Y=-Y I Y>$P(X,U,2) Q  ;too old
"RTN","MAGJEX2",157,0)
 . S Y=$G(GO(CPT))+1 I CPT,(Y>$P(X,U,3)) Q  ; already have enough cases
"RTN","MAGJEX2",158,0)
 . S GO(CPT)=Y,GO(CPT,Y)=X
"RTN","MAGJEX2",159,0)
 K MAGGRY
"RTN","MAGJEX2",160,0)
 I $D(GO) S CT=0,CPT="" D
"RTN","MAGJEX2",161,0)
 . F  S CPT=$O(GO(CPT)) Q:CPT=""  F ICPT=1:1:GO(CPT) D
"RTN","MAGJEX2",162,0)
 .. S CT=CT+1,X=GO(CPT,ICPT),RARPT=$P(X,U,11)
"RTN","MAGJEX2",163,0)
 .. S MAGGRY(CT)="M08^"_CPT_"|"_$P(X,U,8,11)
"RTN","MAGJEX2",164,0)
 .. I ACTION="P"!(ACTION="A") S Y=$$JBFETCH^MAGJUTL2(RARPT)  ; fetch from jukebox
"RTN","MAGJEX2",165,0)
 . S MAGGRY(0)=CT_"^"_HDR
"RTN","MAGJEX2",166,0)
 E  S MAGGRY(0)="0^No Exams Found for "_HDR
"RTN","MAGJEX2",167,0)
 Q
"RTN","MAGJEX2",168,0)
 ;
"RTN","MAGJEX2",169,0)
END ;
"RTN","MAGJLS2")
0^3^B76760621
"RTN","MAGJLS2",1,0)
MAGJLS2 ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  9:58 AM
"RTN","MAGJLS2",2,0)
 ;;3.0;IMAGING;**22,18,76**;Jun 22, 2007;Build 19
"RTN","MAGJLS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2",11,0)
 ;; |                                                               |
"RTN","MAGJLS2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",18,0)
 ;;
"RTN","MAGJLS2",19,0)
 Q
"RTN","MAGJLS2",20,0)
 ;  ACTIVE -- list exams (Unread, Recent, &/or Pending) for input Imaging Type(s)
"RTN","MAGJLS2",21,0)
 ;    RPC Call: MAGJ RADACTIVEEXAMS
"RTN","MAGJLS2",22,0)
 ;  BKGND -- EP for Bkgnd Compile of UNREAD list
"RTN","MAGJLS2",23,0)
 ;  BKGND2 -- EP for Bkgnd Compile of RECENT list
"RTN","MAGJLS2",24,0)
 Q
"RTN","MAGJLS2",25,0)
BKGERR S ERRCOUNT=$G(ERRCOUNT)+1 H 3 I ERRCOUNT>2 K ZTQUEUED G ^XUSCLEAN ; prevent bkgnd loop
"RTN","MAGJLS2",26,0)
ERR1 I $G(LSTNAM)]"" L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",27,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",28,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLS2",29,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2",30,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLS2",31,0)
 Q:$Q 1  Q
"RTN","MAGJLS2",32,0)
ACTIVE(MAGGRY,DATA) ; EP--get Active (Unread/Recent/Pend) Exam Lists
"RTN","MAGJLS2",33,0)
 ; MAGGRY holds $NA ref to ^TMP where return msg is assembled
"RTN","MAGJLS2",34,0)
 ;   all refs to MAGGRY use SS indirection
"RTN","MAGJLS2",35,0)
 ; If not use bkgnd, compile in foregnd
"RTN","MAGJLS2",36,0)
 ;
"RTN","MAGJLS2",37,0)
 N BKGND,COMPFAIL,MAGLST,LSTPARAM,LSTREQ,LSTID,LSTNUM,LSTNAM,NEWLIST
"RTN","MAGJLS2",38,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLS2"
"RTN","MAGJLS2",39,0)
 S X=$P(DATA,U) D PARAMS^MAGJLS2B(X)
"RTN","MAGJLS2",40,0)
 I 'LSTID S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with Exams List Compile--"_DATA_"." Q
"RTN","MAGJLS2",41,0)
 I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~VistARad Patch 32 is no longer supported.  Contact Imaging support for the current version of the VistARad client software." Q  ; <*>
"RTN","MAGJLS2",42,0)
 I BKGND,LSTREQ="U" D BKREQU Q  ; UNREAD in bkgnd
"RTN","MAGJLS2",43,0)
 I BKGND,LSTREQ="R" D BKREQR Q  ; RECENT in bkgnd
"RTN","MAGJLS2",44,0)
 I BKGND,LSTREQ="A" D BKREQA(DATA) Q  ; ALL Active Exams
"RTN","MAGJLS2",45,0)
 D FOREGND  ; other list types, or bkgnd compile not enabled
"RTN","MAGJLS2",46,0)
ACTIVEZ Q
"RTN","MAGJLS2",47,0)
 ;
"RTN","MAGJLS2",48,0)
FOREGND ; compile in foregnd
"RTN","MAGJLS2",49,0)
 I LSTREQ="H" G HISTORY
"RTN","MAGJLS2",50,0)
 D BLDACTV^MAGJLS3(.MAGLST,LSTPARAM)
"RTN","MAGJLS2",51,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST) K @MAGLST
"RTN","MAGJLS2",52,0)
 Q
"RTN","MAGJLS2",53,0)
 ;
"RTN","MAGJLS2",54,0)
HISTORY ; compile History list
"RTN","MAGJLS2",55,0)
 D BLDACTV^MAGJLS3(.MAGLST,LSTPARAM)
"RTN","MAGJLS2",56,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST)
"RTN","MAGJLS2",57,0)
 ; copy data from above compile into History file
"RTN","MAGJLS2",58,0)
 N EXID,HISTIEN,IEN,REC1,REC2,CDAT,TMP,PC
"RTN","MAGJLS2",59,0)
 I +$G(@MAGLST@(0,1)) D
"RTN","MAGJLS2",60,0)
 . S IEN="" F  S IEN=$O(@MAGLST@(IEN)) Q:(IEN="")  S REC1=^(IEN,1),REC2=^(2) D
"RTN","MAGJLS2",61,0)
 . . I IEN=0 S ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),IEN,1)=REC1,^(2)=REC2 Q  ; header string
"RTN","MAGJLS2",62,0)
 . . S HISTIEN=+$P(REC2,"|",3) Q:'HISTIEN  S EXID=$P(REC2,"|",2)
"RTN","MAGJLS2",63,0)
 . . S X=$G(^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),0,"ADD",HISTIEN))
"RTN","MAGJLS2",64,0)
 . . I X]"" D
"RTN","MAGJLS2",65,0)
 . . . I EXID'=$P(X,"|",2) Q
"RTN","MAGJLS2",66,0)
 . . . ; copy Client data into list column fields 12-15 in node 2
"RTN","MAGJLS2",67,0)
 . . . S CDAT=$P(REC2,"|",3),TMP=$P(REC2,"|")
"RTN","MAGJLS2",68,0)
 . . . F I=1:1:4 S PC=11+I,$P(TMP,U,PC)=$P(CDAT,U,I)
"RTN","MAGJLS2",69,0)
 . . . S TMP=TMP_U ; pad extra nil piece
"RTN","MAGJLS2",70,0)
 . . . S $P(REC2,"|")=TMP,$P(REC2,"|",3)=HISTIEN ; preserve IEN in PP3
"RTN","MAGJLS2",71,0)
 . . . S ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),HISTIEN,1)=REC1,^(2)=REC2
"RTN","MAGJLS2",72,0)
 . . . K ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),0,"ADD",HISTIEN) ; Kill input node
"RTN","MAGJLS2",73,0)
 K @MAGLST
"RTN","MAGJLS2",74,0)
 Q
"RTN","MAGJLS2",75,0)
 ;
"RTN","MAGJLS2",76,0)
BKREQU ; UNREAD exams from bkgnd
"RTN","MAGJLS2",77,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):0
"RTN","MAGJLS2",78,0)
 E  D BKOUT("UNREAD") Q  ; bkgnd process IS running
"RTN","MAGJLS2",79,0)
 ; NOT running, so start it!
"RTN","MAGJLS2",80,0)
 ; 2nd errtrap is to deal with locks if error occurs
"RTN","MAGJLS2",81,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR1^MAGJLS2"
"RTN","MAGJLS2",82,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","MAGJLS2",83,0)
 S ZTRTN="BKGND^MAGJLS2",ZTDESC="IMAGING VistaRad UNREAD List Compile"
"RTN","MAGJLS2",84,0)
 S ZTDTH=$H,ZTIO="" D ^%ZTLOAD
"RTN","MAGJLS2",85,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",86,0)
 I LSTAGE>(DELTA+300)  S BKGPROC=2 D  ; Foregnd compile if need fresh list
"RTN","MAGJLS2",87,0)
 . D LSTCOMP(.COMPFAIL) K BKGPROC S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",88,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",89,0)
 I +$G(COMPFAIL) S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Unable to Compile Unread Exams list"
"RTN","MAGJLS2",90,0)
 E  D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE)
"RTN","MAGJLS2",91,0)
 K LSTAGE
"RTN","MAGJLS2",92,0)
 Q
"RTN","MAGJLS2",93,0)
 ;
"RTN","MAGJLS2",94,0)
BKREQR ; Recent Exams from bkgnd
"RTN","MAGJLS2",95,0)
 D BKOUT("RECENT")
"RTN","MAGJLS2",96,0)
 Q
"RTN","MAGJLS2",97,0)
 ;
"RTN","MAGJLS2",98,0)
BKOUT(LSTNM) ; output list from the bkgnd process
"RTN","MAGJLS2",99,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",100,0)
 I 'LSTNUM S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with "_LSTNM_" List Compile program (age="_LSTAGE_" for "_LSTNAM_")"_$S(LSTNAM["9992":"--May need to Schedule RECENT List Compile in TaskMan.",1:"")
"RTN","MAGJLS2",101,0)
 E  D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE)
"RTN","MAGJLS2",102,0)
 K LSTAGE
"RTN","MAGJLS2",103,0)
 Q
"RTN","MAGJLS2",104,0)
 ;
"RTN","MAGJLS2",105,0)
BKREQA(DATA) ; ALL Active from Bkgnd
"RTN","MAGJLS2",106,0)
 ; Copy compiles of Unread & Recent to a scratch global, & call lstout
"RTN","MAGJLS2",107,0)
 N ALLGO,CNT,GETLST,ICNT,REPLY
"RTN","MAGJLS2",108,0)
 S ALLGO=1,CNT=0
"RTN","MAGJLS2",109,0)
 F GETLST=9991,9992 D  I 'ALLGO S REPLY="Component List "_GETLST_ALLGO Q
"RTN","MAGJLS2",110,0)
 . D PARAMS^MAGJLS2B(GETLST) I 'LSTID S ALLGO=" not properly defined."  Q
"RTN","MAGJLS2",111,0)
 . S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",112,0)
 . I 'LSTNUM S ALLGO=" needs more time to compile." Q
"RTN","MAGJLS2",113,0)
 . F ICNT=1:1:$G(^XTMP("MAGJ2",LSTNAM,LSTNUM,0,1)) S X=^XTMP("MAGJ2",LSTNAM,LSTNUM,ICNT,1),Y=^(2),CNT=CNT+1,^TMP($J,"MAGJ",CNT,1)=X,^(2)=Y
"RTN","MAGJLS2",114,0)
 I ALLGO D
"RTN","MAGJLS2",115,0)
 . S ^TMP($J,"MAGJ",0,1)=CNT_U_"1~ALL Active Exams",^(2)=""
"RTN","MAGJLS2",116,0)
 . D PARAMS^MAGJLS2B($P(DATA,U))
"RTN","MAGJLS2",117,0)
 . D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^TMP($J,"MAGJ")))
"RTN","MAGJLS2",118,0)
 I 'ALLGO S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with ALL Exams List Compile "_DATA_". "_REPLY
"RTN","MAGJLS2",119,0)
 K LSTAGE
"RTN","MAGJLS2",120,0)
 Q
"RTN","MAGJLS2",121,0)
 ;
"RTN","MAGJLS2",122,0)
BKGND ; EP for background compile of UNREAD exams
"RTN","MAGJLS2",123,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):600 ; allow fgnd job to finish compile
"RTN","MAGJLS2",124,0)
 E  Q  ; I must already be running!
"RTN","MAGJLS2",125,0)
 N BKGLSTID S BKGLSTID=9991 G BKGNDA
"RTN","MAGJLS2",126,0)
 Q
"RTN","MAGJLS2",127,0)
BKGND2 ; EP--bkgnd compile RECENT
"RTN","MAGJLS2",128,0)
 N BKGLSTID S BKGLSTID=9992 G BKGNDA
"RTN","MAGJLS2",129,0)
 Q
"RTN","MAGJLS2",130,0)
BKGNDA S BKGPROC=1,U="^"
"RTN","MAGJLS2",131,0)
 N $ETRAP,$ESTACK S $ETRAP="D BKGERR^MAGJLS2"
"RTN","MAGJLS2",132,0)
 D MAGJOBNC^MAGJUTL3
"RTN","MAGJLS2",133,0)
 D PARAMS^MAGJLS2B(BKGLSTID)
"RTN","MAGJLS2",134,0)
BKLOOP ; Loop & compile "master" UNREAD List only
"RTN","MAGJLS2",135,0)
 S BKLOOP=$G(BKLOOP)+1
"RTN","MAGJLS2",136,0)
 I BKLOOP>1 D PARAMS^MAGJLS2B(9991)
"RTN","MAGJLS2",137,0)
 I 'LSTID D  G BKGNDZ
"RTN","MAGJLS2",138,0)
 . S X="0^4~Problem with BACKGROUND Compile of Exams List"
"RTN","MAGJLS2",139,0)
 . F I=1,2 K ^XTMP("MAGJ2",LSTNAM,I)
"RTN","MAGJLS2",140,0)
 . F I=1,2 S ^XTMP("MAGJ2",LSTNAM,I,0,1)=X,^(2)=""  ; get msg to WS user
"RTN","MAGJLS2",141,0)
 I 'BKGND G BKGNDZ  ; need this to cover for excessive time to compile
"RTN","MAGJLS2",142,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",143,0)
 I LSTREQ="U",(LSTAGE<DELTA) D  I 'BKGND G BKGNDZ ;bkgnd compile off?
"RTN","MAGJLS2",144,0)
 . N ITEST,TEST,MORE
"RTN","MAGJLS2",145,0)
 . S TEST=(DELTA-LSTAGE)\5,MORE=(DELTA-LSTAGE)-(5*TEST)
"RTN","MAGJLS2",146,0)
 . ; while waiting, periodic chk for stop conditions
"RTN","MAGJLS2",147,0)
 . F ITEST=1:1:TEST H 5 D  Q:'BKGND
"RTN","MAGJLS2",148,0)
 .. S BKGND=+$P($G(^MAG(2006.69,1,0)),U,8) Q:'BKGND
"RTN","MAGJLS2",149,0)
 .. I $D(ZTQUEUED),$$S^%ZTLOAD S BKGND=0 ; Exit bkgnd via TaskMan Req
"RTN","MAGJLS2",150,0)
 . H MORE
"RTN","MAGJLS2",151,0)
 D LSTCOMP()
"RTN","MAGJLS2",152,0)
 I LSTREQ="R" D NEWINT
"RTN","MAGJLS2",153,0)
 I LSTREQ="U" D UPDR^MAGJLS2B G BKLOOP  ;UNREAD loops; RECENT uses TaskMan
"RTN","MAGJLS2",154,0)
BKGNDZ I LSTREQ="U" L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",155,0)
 N ZTREQ S ZTREQ="@"  ;  clean up task entry
"RTN","MAGJLS2",156,0)
 K BKLOOP,DELTA,LSTAGE
"RTN","MAGJLS2",157,0)
 Q  ; Exit bkgnd
"RTN","MAGJLS2",158,0)
 ;
"RTN","MAGJLS2",159,0)
NEWINT ; Add exams newly Interp since Recent Compile started to Recent List
"RTN","MAGJLS2",160,0)
 ; 1st, get list of candidates:
"RTN","MAGJLS2",161,0)
 N INDX L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",162,0)
 E  Q
"RTN","MAGJLS2",163,0)
 S INDX=+$G(^TMP($J,"NEWINT")) ; counter when Recent Compile started
"RTN","MAGJLS2",164,0)
 I INDX S INDX=INDX-1 F  S INDX=$O(^XTMP("MAGJ2","RECENT",INDX)) Q:'INDX  S X=^(INDX) I X S ^TMP($J,"NEWINT",0,INDX)=X
"RTN","MAGJLS2",165,0)
 K ^XTMP("MAGJ2","RECENT") S ^("RECENT",0)=0
"RTN","MAGJLS2",166,0)
 L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",167,0)
 ;if not in Recent Compile, add to index
"RTN","MAGJLS2",168,0)
 S INDX=""
"RTN","MAGJLS2",169,0)
 F  S INDX=$O(^TMP($J,"NEWINT",0,INDX)) Q:'INDX  S X=^(INDX) D
"RTN","MAGJLS2",170,0)
 . I $D(^TMP($J,"NEWINT",$P(X,U,1,3))) Q  ; already there
"RTN","MAGJLS2",171,0)
 . L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",172,0)
 . E  Q
"RTN","MAGJLS2",173,0)
 . S I=+$G(^XTMP("MAGJ2","RECENT",0))+1,$P(^(0),U)=I,^(I)=X ;add 
"RTN","MAGJLS2",174,0)
 . L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",175,0)
 K ^TMP($J,"NEWINT")
"RTN","MAGJLS2",176,0)
 Q
"RTN","MAGJLS2",177,0)
 ;
"RTN","MAGJLS2",178,0)
LSTCOMP(COMPFAIL) ; Compile new list; subrtn used by Active and Bkgnd tags
"RTN","MAGJLS2",179,0)
 S COMPFAIL=0 ; Return T/F for "Executed a List Compile?"
"RTN","MAGJLS2",180,0)
 L +^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE"):60
"RTN","MAGJLS2",181,0)
 E  S COMPFAIL=1 G LSTCOMZ
"RTN","MAGJLS2",182,0)
 S NEWLIST=$S(LSTNUM=1:2,1:1) ; toggle node to use
"RTN","MAGJLS2",183,0)
 N TS,COMTIM
"RTN","MAGJLS2",184,0)
 S TS="" F I=2,0 S TS=TS_$S(TS="":"",1:U)_$$HTFM^XLFDT($H+I,0)
"RTN","MAGJLS2",185,0)
 S ^XTMP("MAGJ2",0)=TS_U_"VistaRad List Compile"
"RTN","MAGJLS2",186,0)
 S ^XTMP("MAGJ2",0,LSTNAM,NEWLIST)=$H
"RTN","MAGJLS2",187,0)
 D BLDACTV^MAGJLS3(.MAGGRY,LSTPARAM,$NA(^XTMP("MAGJ2",LSTNAM,NEWLIST)))
"RTN","MAGJLS2",188,0)
 S COMTIM=$$DELTA($P(^XTMP("MAGJ2",0,LSTNAM,NEWLIST),U))
"RTN","MAGJLS2",189,0)
 S ^XTMP("MAGJ2",LSTNAM,NEWLIST)=$H_U_$J_U_COMTIM
"RTN","MAGJLS2",190,0)
 S ^XTMP("MAGJ2","BKGND",LSTNAM,0)=NEWLIST_U_$H
"RTN","MAGJLS2",191,0)
 I $G(^XTMP("MAGJ2",0,"TIME")) D
"RTN","MAGJLS2",192,0)
 . S T1=$P($H,",",2)/3600,T2=$E(100+(T1\1),2,3),T=T2_":"_$E(100+(T1-T2*60),2,3)
"RTN","MAGJLS2",193,0)
 . S ^XTMP("MAGJ2",0,"TIME",LSTNAM,+$H,T)=COMTIM K T,T1,T2
"RTN","MAGJLS2",194,0)
LSTCOMZ L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",195,0)
 Q  ;
"RTN","MAGJLS2",196,0)
CURLIST(LSTNAM,WAIT) ; return cur. list & age in secs
"RTN","MAGJLS2",197,0)
 S WAIT=+$G(WAIT)
"RTN","MAGJLS2",198,0)
 N X,RET,AGE,TRY,START,EXTRATIM
"RTN","MAGJLS2",199,0)
 S TRY=0,START=$H,EXTRATIM=$S(LSTREQ="U":600,1:1800)
"RTN","MAGJLS2",200,0)
 S X=$G(^XTMP("MAGJ2","BKGND",LSTNAM,0))  ; Cur # ^ $H created
"RTN","MAGJLS2",201,0)
 I X="" S RET="^86400" G CURLISZ  ; this lstnam not yet compiled!
"RTN","MAGJLS2",202,0)
 S AGE=$$DELTA($P(X,U,2)),RET=$P(X,U)_U_AGE
"RTN","MAGJLS2",203,0)
 I AGE>(DELTA+EXTRATIM) S $P(RET,U)=""  ; Something's wrong w/ compile; force error message
"RTN","MAGJLS2",204,0)
CURLISZ Q RET
"RTN","MAGJLS2",205,0)
 ;
"RTN","MAGJLS2",206,0)
DELTA(X,Y) ; calc # secs bet 2 $h values; dflt 2nd value = now
"RTN","MAGJLS2",207,0)
 ; useful limit is one day
"RTN","MAGJLS2",208,0)
 I $G(Y)="" S Y=$H
"RTN","MAGJLS2",209,0)
 I +Y=+X
"RTN","MAGJLS2",210,0)
 E  D
"RTN","MAGJLS2",211,0)
 . I Y-X=1 S $P(Y,",",2)=86400+$P(Y,",",2)  ; midnight boundary
"RTN","MAGJLS2",212,0)
 . E  S $P(X,",",2)=0,$P(Y,",",2)=86400  ; > one day
"RTN","MAGJLS2",213,0)
 Q ($P(Y,",",2)-$P(X,",",2))
"RTN","MAGJLS2",214,0)
 ;
"RTN","MAGJLS2",215,0)
END ;
"RTN","MAGJLS2B")
0^14^B73366259
"RTN","MAGJLS2B",1,0)
MAGJLS2B ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  9:59 AM
"RTN","MAGJLS2B",2,0)
 ;;3.0;IMAGING;**16,22,18,76**;Jun 22, 2007;Build 19
"RTN","MAGJLS2B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS2B",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2B",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2B",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2B",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2B",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2B",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2B",11,0)
 ;; |                                                               |
"RTN","MAGJLS2B",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2B",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2B",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2B",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2B",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2B",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",18,0)
 ;;
"RTN","MAGJLS2B",19,0)
 Q
"RTN","MAGJLS2B",20,0)
 ;
"RTN","MAGJLS2B",21,0)
PARAMS(X) ; Init some vars used for Exam Lists
"RTN","MAGJLS2B",22,0)
 N LASTEDIT
"RTN","MAGJLS2B",23,0)
 S LSTID=+$O(^MAG(2006.631,"C",X,""))
"RTN","MAGJLS2B",24,0)
 I 'LSTID S LSTID="Invalid List ID" Q  ;
"RTN","MAGJLS2B",25,0)
 S X=^MAG(2006.631,LSTID,0)
"RTN","MAGJLS2B",26,0)
 I '$P(X,U,6) S LSTID="LIST NOT ENABLED" Q  ;
"RTN","MAGJLS2B",27,0)
 S LSTTL=$P(X,U),LSTREQ=$P(X,U,3),LSTPARAM=LSTREQ_U_$P(X,U,4),LASTEDIT=$P(X,U,5)
"RTN","MAGJLS2B",28,0)
 S LSTTL=$S(LSTREQ="U":"UNREAD",LSTREQ="R":"RECENT",LSTREQ="A":"ACTIVE",LSTREQ="P":"PENDING",LSTREQ="N":"NEWLY INTERP",LSTREQ="H":"HISTORY",1:"")_" EXAMS: "_LSTTL
"RTN","MAGJLS2B",29,0)
 I $P(LSTPARAM,U,2)="" S $P(LSTPARAM,U,2)="ALL" ; dflt All ImagingTypes
"RTN","MAGJLS2B",30,0)
 S X=$G(^MAG(2006.69,1,0)),BKGND=+$P(X,U,8),DELTA=+$P(X,U,$S(LSTREQ="U":9,1:13))*60
"RTN","MAGJLS2B",31,0)
 I BKGND,'DELTA S DELTA=360 ;dflt Unread List compile cycle time secs
"RTN","MAGJLS2B",32,0)
 S LSTNAM="LS"_LSTID
"RTN","MAGJLS2B",33,0)
 I BKGND S LSTNAM=$S(LSTREQ="U":"LS9991",LSTREQ="R":"LS9992",LSTREQ="N":"LS9995",LSTREQ="H":"LS9996",1:LSTNAM) ; hard-code for "Master" list Bkgnd compile
"RTN","MAGJLS2B",34,0)
 Q
"RTN","MAGJLS2B",35,0)
 ;
"RTN","MAGJLS2B",36,0)
SETVARS(LSTID) ;output control variables
"RTN","MAGJLS2B",37,0)
 D LSTVAR(LSTID),SRTVAR(LSTID),SELVAR(LSTID)
"RTN","MAGJLS2B",38,0)
 Q
"RTN","MAGJLS2B",39,0)
 ;
"RTN","MAGJLS2B",40,0)
LSTVAR(LSTID) ; build output columns string
"RTN","MAGJLS2B",41,0)
 S MDLVAR=^MAG(2006.631,LSTID,"DEF",1),LSTHDR=^(.5)
"RTN","MAGJLS2B",42,0)
 N I,XX,SC,XOUT,XOUT2
"RTN","MAGJLS2B",43,0)
 S SC=";",XOUT="",XOUT2=""
"RTN","MAGJLS2B",44,0)
 F I=1:1:$L(MDLVAR,U) S XX=$P(MDLVAR,U,I) D
"RTN","MAGJLS2B",45,0)
 . I +XX=12 I '$G(SNDREMOT) Q  ; exclude RC ind
"RTN","MAGJLS2B",46,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",47,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",48,0)
 . S XOUT2=XOUT2_$S(XOUT2="":"",1:U)_$P(LSTHDR,U,I)
"RTN","MAGJLS2B",49,0)
 S MDLVAR=XOUT,LSTHDR=XOUT2
"RTN","MAGJLS2B",50,0)
 Q
"RTN","MAGJLS2B",51,0)
SRTVAR(LSTID) ; build sort-vars string in SORTSS
"RTN","MAGJLS2B",52,0)
 ; indirection used to ref string at list output (see LSTOUT)
"RTN","MAGJLS2B",53,0)
 S MDSVAR=^MAG(2006.631,LSTID,"DEF",2)
"RTN","MAGJLS2B",54,0)
 N I,XX,XOUT,HAVEONE
"RTN","MAGJLS2B",55,0)
 S SORTSS="",XOUT="",HAVEONE=0
"RTN","MAGJLS2B",56,0)
 F I=1:1:$L(MDSVAR,U) S XX=$P(MDSVAR,U,I) D
"RTN","MAGJLS2B",57,0)
 . I +XX=12 Q:'$G(SNDREMOT)   ; exclude RC ind
"RTN","MAGJLS2B",58,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",59,0)
 . I 'HAVEONE S HAVEONE=(+XX=1)  ; 1 = Case #
"RTN","MAGJLS2B",60,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",61,0)
 . S XX=$S(XX?1N.N1"-":"-",1:"")_"MD("_+XX_")"
"RTN","MAGJLS2B",62,0)
 . S SORTSS=SORTSS_","_XX
"RTN","MAGJLS2B",63,0)
 I 'HAVEONE S SORTSS=SORTSS_",MD(1)",XOUT=XOUT_U_1  ; force unique entry each exam
"RTN","MAGJLS2B",64,0)
 I $E(SORTSS)="," S SORTSS=$E(SORTSS,2,999)
"RTN","MAGJLS2B",65,0)
 S MDSVAR=XOUT
"RTN","MAGJLS2B",66,0)
 Q
"RTN","MAGJLS2B",67,0)
 ;
"RTN","MAGJLS2B",68,0)
SELVAR(LSTID) ; build selection logic executes in DIS array
"RTN","MAGJLS2B",69,0)
 N CX,DC,DCX,DL,DLX,EXP,I,IDL,SELVAR,SELVAR2,SS
"RTN","MAGJLS2B",70,0)
 S SS=0 F  S SS=$O(^MAG(2006.631,LSTID,"DEF",3,SS)) Q:'SS  S DC(SS)=^(SS)
"RTN","MAGJLS2B",71,0)
 S SS=0 F I=1:1 S SS=$O(^MAG(2006.631,LSTID,"DEF",4,SS)) Q:'SS  S DL(I)=^(SS)
"RTN","MAGJLS2B",72,0)
 ;  DL(5)="^2^3'^" <DLX     CX=3'    DC(2)="1^>44" <DCX
"RTN","MAGJLS2B",73,0)
 K DIS,MDCVAR S DIS(0)=0
"RTN","MAGJLS2B",74,0)
 F IDL=1:1 S DLX=$G(DL(IDL)) Q:DLX=""  S DIS(0)=DIS(0)+1,DIS(DIS(0))="" D
"RTN","MAGJLS2B",75,0)
 . F I=2:1:$L(DLX,U)-1 S CX=$P(DLX,U,I) S DCX=DC(+CX) D
"RTN","MAGJLS2B",76,0)
 .. S EXP="(MD("_+DCX_")"_$P(DCX,U,2)_")"
"RTN","MAGJLS2B",77,0)
 .. S EXP="I "_$S(CX["'":"'",1:"")_EXP
"RTN","MAGJLS2B",78,0)
 .. S DIS(DIS(0))=DIS(DIS(0))_" "_EXP
"RTN","MAGJLS2B",79,0)
 .. S MDCVAR(+DCX)=""
"RTN","MAGJLS2B",80,0)
 Q
"RTN","MAGJLS2B",81,0)
 ;
"RTN","MAGJLS2B",82,0)
CHKLOCK(RARPT,DAYCASE) ; return ini of locking user & truth flag for locking user = logon user
"RTN","MAGJLS2B",83,0)
 N RESULT,WHO,MYLOCK,X,XX
"RTN","MAGJLS2B",84,0)
 S (MYLOCK,WHO)=""
"RTN","MAGJLS2B",85,0)
 I RARPT,(DAYCASE]"") D
"RTN","MAGJLS2B",86,0)
 . I $D(^XTMP("MAGJ","LOCK",RARPT)) D
"RTN","MAGJLS2B",87,0)
 . . D LOCKACT^MAGJEX1A(RARPT,DAYCASE,100,.RESULT)
"RTN","MAGJLS2B",88,0)
 . . I $D(RESULT)>1 D
"RTN","MAGJLS2B",89,0)
 . . . S X=RESULT(1),WHO=$P(X,U,5)
"RTN","MAGJLS2B",90,0)
 . . . I WHO]"" S MYLOCK=+X
"RTN","MAGJLS2B",91,0)
 . . . E  D
"RTN","MAGJLS2B",92,0)
 . . . . S X=RESULT(2),WHO=$P(X,U,5)
"RTN","MAGJLS2B",93,0)
 . . . . I WHO]"" S WHO=WHO_":R",MYLOCK=+X I MYLOCK S MYLOCK=2
"RTN","MAGJLS2B",94,0)
 S XX=WHO_U_MYLOCK
"RTN","MAGJLS2B",95,0)
 Q:$Q XX Q
"RTN","MAGJLS2B",96,0)
 ;
"RTN","MAGJLS2B",97,0)
SHOWPLAC(X) ; return list of places to show: all defined places NOT equal to user's logon place
"RTN","MAGJLS2B",98,0)
 N IEN,SHOWPLAC S SHOWPLAC=""
"RTN","MAGJLS2B",99,0)
 S IEN=0 F  S IEN=$O(^MAG(2006.1,IEN)) Q:'IEN  I IEN'=+MAGJOB("SITEP") S X=$P(^(IEN,0),U,9) I X]"" S SHOWPLAC=SHOWPLAC_","_X
"RTN","MAGJLS2B",100,0)
 I SHOWPLAC]"" S SHOWPLAC=1_U_SHOWPLAC_"," ; 1 for true
"RTN","MAGJLS2B",101,0)
 Q SHOWPLAC
"RTN","MAGJLS2B",102,0)
 ;
"RTN","MAGJLS2B",103,0)
LSTOUT(MAGGRY,LSTID,MAGLST,LSTAGE) ; Build output list, w/ sort & selection
"RTN","MAGJLS2B",104,0)
 ;  Input: LSTID=List def'n
"RTN","MAGJLS2B",105,0)
 ;         MAGLST=Indirect global ref for input records; all reads use subscript indirection
"RTN","MAGJLS2B",106,0)
 ;       the nodes in @MAGLST contain:
"RTN","MAGJLS2B",107,0)
 ;  
"RTN","MAGJLS2B",108,0)
 ;  Node 1 corresponds to IENs 1:17 from Data Elements dic:
"RTN","MAGJLS2B",109,0)
 ;     Acn# ^ Ex LOCK ^ PtName ^ Pt_ID ^ Priority ^ Proc ^ Img Date/Time ^ Status ^ # Images ^ Online?
"RTN","MAGJLS2B",110,0)
 ;     Img Loc'n ^ Remote Ind. ^ Images Exist? ^ Img Date/Time-sortable ^ Mdl ^ Status/Internal ^ ImgTypABB
"RTN","MAGJLS2B",111,0)
 ;  Node 2-- IEN's 18:28 from Data Elements dic:
"RTN","MAGJLS2B",112,0)
 ;     REQLOCAbb ^ REQLOCNm ^ Interp Rad'ists ^ Last4 SSN ^ Division ^ Site ^ Rist Is Me? ^  ProcMod ^ REQLOCTyp ^ CPT
"RTN","MAGJLS2B",113,0)
 ;     WARD
"RTN","MAGJLS2B",114,0)
 ;   Node 2 then appends 3 pipe-delim pieces that are passed through from list compiler (See svmag2a^magjls3)
"RTN","MAGJLS2B",115,0)
 ;
"RTN","MAGJLS2B",116,0)
 ; Output: MAGGRY=Indirect ref to output file
"RTN","MAGJLS2B",117,0)
 ; 
"RTN","MAGJLS2B",118,0)
 N DIS,MDCVAR,SNDREMOT,ILST,IMD,MAGRACNT
"RTN","MAGJLS2B",119,0)
 N RARPT,RAST,RADFN,RACNI,RADTI,T,WHOLOCK,XX,MYLOCK,DAYCASE,MODALITY
"RTN","MAGJLS2B",120,0)
 N OUT,QX,SORT,SORTSS,LSTHDR,MD,MDLVAR,MDSVAR,REMONLY,REMOTCAS,SHOWPLAC,SORTLEN
"RTN","MAGJLS2B",121,0)
 S LSTAGE=$G(LSTAGE)
"RTN","MAGJLS2B",122,0)
 S SHOWPLAC=$$SHOWPLAC("") ; Show any Place (Site Code) that is NOT the Login Place
"RTN","MAGJLS2B",123,0)
 S REMONLY=0
"RTN","MAGJLS2B",124,0)
 S XX=$G(^MAG(2006.69,1,0)),SNDREMOT=+$P(XX,U,11)
"RTN","MAGJLS2B",125,0)
 I $G(MAGJOB("REMOTE")) D  ; show remote cache only?
"RTN","MAGJLS2B",126,0)
 . I MAGJOB("P32") S REMONLY=+$P(XX,U,10)
"RTN","MAGJLS2B",127,0)
 . E  Q:(LSTREQ="H")  S REMONLY=+$G(MAGJOB("REMOTESCREEN"))  ; Hist list
"RTN","MAGJLS2B",128,0)
 D SETVARS(LSTID)
"RTN","MAGJLS2B",129,0)
 S MAGRACNT=0
"RTN","MAGJLS2B",130,0)
 S SORT="^TMP("_$J_",""MAGJSORT""",SORTLEN=$L(SORT) K ^TMP($J,"MAGJSORT")
"RTN","MAGJLS2B",131,0)
 K ^TMP($J,"RET") S ^TMP($J,"RET",0)="0^4~Getting Exam List"
"RTN","MAGJLS2B",132,0)
 S X=$G(@MAGLST@(0,1)) I +X<1 D  G LSTOUTZ  ; No exams to list!
"RTN","MAGJLS2B",133,0)
 . I X="" S ^TMP($J,"RET",0)="0^4~Problem with Exams List Compile"
"RTN","MAGJLS2B",134,0)
 . E  S ^TMP($J,"RET",0)=X
"RTN","MAGJLS2B",135,0)
 S ILST=0
"RTN","MAGJLS2B",136,0)
 F  S ILST=$O(@MAGLST@(ILST)) Q:'ILST  S XX=^(ILST,1),XX2=^(2) K MD D  ; contents described above
"RTN","MAGJLS2B",137,0)
 . S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")=""
"RTN","MAGJLS2B",138,0)
 . ; Execute Selection logic
"RTN","MAGJLS2B",139,0)
 . S X=0 F  S X=$O(MDCVAR(X)) Q:'X  S MD(X)=$P(XX,U,X) ; load needed data
"RTN","MAGJLS2B",140,0)
 . I 1 F I=1:1:$G(DIS(0)) X DIS(I) I  Q  ; quit if search logic True
"RTN","MAGJLS2B",141,0)
 . E  Q  ; failed selection criteria--skip
"RTN","MAGJLS2B",142,0)
 . S RAST=$P(XX,U,16)
"RTN","MAGJLS2B",143,0)
 . S T=$P(XX2,"|",2),RADFN=$P(T,U),RADTI=$P(T,U,2),RACNI=$P(T,U,3),RARPT=$P(T,U,4)
"RTN","MAGJLS2B",144,0)
 . I LSTREQ="U",'$D(^RADPT("AS",RAST,RADFN,RADTI,RACNI)) Q  ; No longer Unread!
"RTN","MAGJLS2B",145,0)
 . I LSTREQ="U",$G(MAGJOB("CONSOLIDATED")) S RADIV=$P(XX,U,22) I RADIV]"",'$D(MAGJOB("DIVSCRN",RADIV)) Q  ; Screen Unread exams for DIVision
"RTN","MAGJLS2B",146,0)
 . S REMOTCAS=$P(XX,U,12)
"RTN","MAGJLS2B",147,0)
 . I REMONLY,'REMOTCAS Q  ; don't show if not routed
"RTN","MAGJLS2B",148,0)
 . I REMONLY,REMOTCAS D  I 'T Q  ; don't show if not the remote reading site
"RTN","MAGJLS2B",149,0)
 . . F I=1:1:$L(REMOTCAS,",")+1 S T=$P(REMOTCAS,",",I) I T,$D(MAGJOB("LOC",T)) Q
"RTN","MAGJLS2B",150,0)
 . ; set up sort values, creating sort index w/ indirect reference to sort global
"RTN","MAGJLS2B",151,0)
 . F I=1:1:$L(MDSVAR,U) S X=+$P(MDSVAR,U,I) S MD(X)=$P(XX,U,X) I MD(X)="" S MD(X)="~"
"RTN","MAGJLS2B",152,0)
 . I LSTREQ="H" S @(SORT_",ILST,"_SORTSS_")")=ILST_U_RARPT ; P18 adds ILST so History List can allow mult entries of same exam, in fifo order
"RTN","MAGJLS2B",153,0)
 . E  S @(SORT_","_SORTSS_")")=ILST_U_RARPT
"RTN","MAGJLS2B",154,0)
 . S MAGRACNT=MAGRACNT+1
"RTN","MAGJLS2B",155,0)
 I 'MAGRACNT S ^TMP($J,"RET",0)="0^2~No Exams Found"
"RTN","MAGJLS2B",156,0)
 E  D  ; generate output file
"RTN","MAGJLS2B",157,0)
 . S @(SORT_","_-9999999999_")")=0,QX=SORT_")" ; define $Query var.; init beginning w/ dummy entry
"RTN","MAGJLS2B",158,0)
 . ; proceed thru sort index until the string contained in SORT is not present
"RTN","MAGJLS2B",159,0)
 . ; get data w/ indirect refs to the stored data
"RTN","MAGJLS2B",160,0)
 . F ILST=0:1 S QX=$Q(@QX) Q:($E(QX,1,SORTLEN))'=SORT  S XX=@MAGLST@(+(@QX),1),XX2=^(2),OUT="" D
"RTN","MAGJLS2B",161,0)
 .. I 'ILST D  Q       ; Header string
"RTN","MAGJLS2B",162,0)
 ... S T="" I LSTAGE?1N.N S T=LSTAGE\60 S T=" (List age: "_$S(T:T_" min, ",1:"")_(LSTAGE#60)_" sec)"
"RTN","MAGJLS2B",163,0)
 ... I +$P(XX,U,2)=1 S $P(XX,"~",2)=LSTTL_T  ; List Title
"RTN","MAGJLS2B",164,0)
 ... S ^TMP($J,"RET",0)=XX
"RTN","MAGJLS2B",165,0)
 .. S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")=""
"RTN","MAGJLS2B",166,0)
 .. S RARPT=$P(@QX,U,2),DAYCASE=$P(XX,U)
"RTN","MAGJLS2B",167,0)
 .. S T=$$CHKLOCK(RARPT,DAYCASE),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLS2B",168,0)
 .. S $P(XX,U,2)=WHOLOCK
"RTN","MAGJLS2B",169,0)
 .. S MODALITY=$P(XX,U,15)
"RTN","MAGJLS2B",170,0)
 .. F IMD=1:1:$L(MDLVAR,U) S X=$P(MDLVAR,U,IMD),MD=$P(XX,U,+X) D
"RTN","MAGJLS2B",171,0)
 ... I +X=12,(MD]""),SNDREMOT D
"RTN","MAGJLS2B",172,0)
 .... ; if site routes images, disp Remote Cache ind.
"RTN","MAGJLS2B",173,0)
 .... N I,T S T="" F I=1:1:$L(MD,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(MD,",",I),3)),U,5)
"RTN","MAGJLS2B",174,0)
 .... S MD=T
"RTN","MAGJLS2B",175,0)
 ... I +X=23,(MD]""),SHOWPLAC D
"RTN","MAGJLS2B",176,0)
 .... I SHOWPLAC'[(","_MD_",") S MD=""  ; Don't show user's local place
"RTN","MAGJLS2B",177,0)
 ... I +X=22,(MD]""),$G(MAGJOB("CONSOLIDATED")) D
"RTN","MAGJLS2B",178,0)
 .... I '$D(MAGJOB("DIVSCRN",MD)) S MD=""  ; Don't show user's local Div
"RTN","MAGJLS2B",179,0)
 ... I X[";" S T=+$P(X,";",2) I T S MD=$E(MD,1,T)  ; truncate output col
"RTN","MAGJLS2B",180,0)
 ... S $P(OUT,U,IMD)=MD
"RTN","MAGJLS2B",181,0)
 .. S $P(OUT,U,IMD+1)="",OUT=U_OUT,OUT=OUT_"|"_$P(XX2,"|",2,9)
"RTN","MAGJLS2B",182,0)
 .. I WHOLOCK]"" S T=$P(OUT,"|",4),$P(T,U,2)=WHOLOCK,$P(T,U,3)=MYLOCK,$P(OUT,"|",4)=T ; pass lock info to Client
"RTN","MAGJLS2B",183,0)
 .. ; * Note: Keep Pipe piece 4, above, in sync with svmag2a^magjls3 *
"RTN","MAGJLS2B",184,0)
 .. S ^TMP($J,"RET",ILST+1)=OUT
"RTN","MAGJLS2B",185,0)
 . S ^TMP($J,"RET",1)=U_LSTHDR
"RTN","MAGJLS2B",186,0)
 . S $P(^TMP($J,"RET",0),U)=MAGRACNT
"RTN","MAGJLS2B",187,0)
LSTOUTZ K MAGGRY,^TMP($J,"MAGJSORT") S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2B",188,0)
 Q
"RTN","MAGJLS2B",189,0)
 ;
"RTN","MAGJLS2B",190,0)
UPDR ; Add Newly Interp exams to Recent; called from magjls2
"RTN","MAGJLS2B",191,0)
 D PARAMS(9995)
"RTN","MAGJLS2B",192,0)
 I LSTID D
"RTN","MAGJLS2B",193,0)
 . S X=$$CURLIST^MAGJLS2(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2B",194,0)
 . D LSTCOMP^MAGJLS2()
"RTN","MAGJLS2B",195,0)
UPDRZ Q
"RTN","MAGJLS2B",196,0)
 ;
"RTN","MAGJLS2B",197,0)
END ;
"RTN","MAGJLS4")
0^4^B50894093
"RTN","MAGJLS4",1,0)
MAGJLS4 ;WIRMFO/JHC VistARad RPCs--History List ; 29 Jul 2003  10:00 AM
"RTN","MAGJLS4",2,0)
 ;;3.0;IMAGING;**18,76**;Jun 22, 2007;Build 19
"RTN","MAGJLS4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS4",11,0)
 ;; |                                                               |
"RTN","MAGJLS4",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS4",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS4",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS4",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS4",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS4",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS4",18,0)
 ;;
"RTN","MAGJLS4",19,0)
 Q
"RTN","MAGJLS4",20,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLS4",21,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS4",22,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLS4",23,0)
 Q:$Q 1  Q
"RTN","MAGJLS4",24,0)
 ;
"RTN","MAGJLS4",25,0)
 ; Subroutines for Vistarad History List functions
"RTN","MAGJLS4",26,0)
 ; Entry Points:
"RTN","MAGJLS4",27,0)
 ;   HIST -- All History List rpcs go here
"RTN","MAGJLS4",28,0)
 ;
"RTN","MAGJLS4",29,0)
HIST(MAGGRY,PARAMS,DATA) ; History List RPC: MAGJ HISTORYLIST
"RTN","MAGJLS4",30,0)
 ; PARAMS--TXID ^ TXDUZ ^ TXDIV
"RTN","MAGJLS4",31,0)
 ; TXID: Required; designates action to take; see below
"RTN","MAGJLS4",32,0)
 ; TXDUZ: Optional; if supplied, get data for another user (Read Only)
"RTN","MAGJLS4",33,0)
 ; TXDIV: Optional; if supplied, get data for another division (Read Only)
"RTN","MAGJLS4",34,0)
 ;   Note: for now, TXDIV is forced to the Logon Division
"RTN","MAGJLS4",35,0)
 ; DATA--(optional) array of input data; depends on TXID; see subroutines by TXID
"RTN","MAGJLS4",36,0)
 ;
"RTN","MAGJLS4",37,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLS4"
"RTN","MAGJLS4",38,0)
 N TXID,TXDUZ,TXDIV,UPDATEOK,DIQUIET,REPLY
"RTN","MAGJLS4",39,0)
 K ^TMP($J,"RET")
"RTN","MAGJLS4",40,0)
 S TXID=+PARAMS,TXDUZ=+$P(PARAMS,U,2),TXDIV=+$P(PARAMS,U,3)
"RTN","MAGJLS4",41,0)
 I 'TXDUZ S TXDUZ=DUZ
"RTN","MAGJLS4",42,0)
 S UPDATEOK=TXDUZ=DUZ
"RTN","MAGJLS4",43,0)
 S TXDIV=DUZ(2) ; Force to Logon Division for now
"RTN","MAGJLS4",44,0)
 S REPLY="0^1~Performing History List operation."
"RTN","MAGJLS4",45,0)
 I 'TXID!'("1,2,3"[TXID) S REPLY="0^4~Invalid History List operation requested." G HISTZ
"RTN","MAGJLS4",46,0)
 I '$D(DATA)&(TXID=1!TXID=3) S REPLY="0^4~No data supplied for History List update/delete." G HISTZ
"RTN","MAGJLS4",47,0)
 I 'UPDATEOK&("1,3"[TXID) S REPLY="0^4~The current History List may not be updated by the current user." G HISTZ
"RTN","MAGJLS4",48,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLS4",49,0)
 I TXID=1 D HISTADD(.DATA,TXDUZ,TXDIV) G HISTZ
"RTN","MAGJLS4",50,0)
 I TXID=2 D HISTUPD(TXDUZ,TXDIV) D HISTGET(TXDUZ,TXDIV) G HISTZ
"RTN","MAGJLS4",51,0)
 I TXID=3 D HISTDEL(.DATA,TXDUZ,TXDIV) G HISTZ
"RTN","MAGJLS4",52,0)
 ; I TXID=4 D HISTUPD(TXDUZ,TXDIV) G HISTZ ; for now, do this function with txid 2
"RTN","MAGJLS4",53,0)
HISTZ ;
"RTN","MAGJLS4",54,0)
 I 'REPLY S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)=REPLY
"RTN","MAGJLS4",55,0)
 E  ; maggry otherwise has been set by called subroutine
"RTN","MAGJLS4",56,0)
 Q
"RTN","MAGJLS4",57,0)
 ;
"RTN","MAGJLS4",58,0)
HISTADD(DATA,TXDUZ,TXDIV) ; add records
"RTN","MAGJLS4",59,0)
 N IDATA,ILOOP,CT,NOGO,EXID,HISDAT,HISTIEN,MAGRACNT,TS
"RTN","MAGJLS4",60,0)
 S IDATA="",CT=0,NOGO=0
"RTN","MAGJLS4",61,0)
 F ILOOP=0:1 S IDATA=$O(DATA(IDATA)) Q:IDATA=""  D
"RTN","MAGJLS4",62,0)
 . S EXID=$P(DATA(IDATA),"|"),HISDAT=$P(DATA(IDATA),"|",2)
"RTN","MAGJLS4",63,0)
 . F I=1:1:4 I '+$P(EXID,U,I) S NOGO=1 Q
"RTN","MAGJLS4",64,0)
 . I NOGO Q
"RTN","MAGJLS4",65,0)
 . L +^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV):2
"RTN","MAGJLS4",66,0)
 . E  Q
"RTN","MAGJLS4",67,0)
 . S X=$G(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0)),HISTIEN=+$P(X,U)+1,$P(^(0),U)=HISTIEN
"RTN","MAGJLS4",68,0)
 . L -^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV)
"RTN","MAGJLS4",69,0)
 . S ^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0,"ADD",HISTIEN)="|"_EXID_"|"_HISTIEN_U_HISDAT_"|"
"RTN","MAGJLS4",70,0)
 . S CT=CT+1
"RTN","MAGJLS4",71,0)
 I 'CT S REPLY="0^3~"_$S(ILOOP:"Unable to add records",1:"No records to add")_" to History List." Q
"RTN","MAGJLS4",72,0)
 S MAGRACNT=0 D ACTIVE^MAGJLS2(.MAGGRY,9996)
"RTN","MAGJLS4",73,0)
 S X=@MAGGRY@(0),X=+X_U_"1~"_$$HISTTL(TXDUZ,TXDIV),@MAGGRY@(0)=X
"RTN","MAGJLS4",74,0)
 S TS="" F I=2,0 S TS=TS_$S(TS="":"",1:U)_$$HTFM^XLFDT($H+I,0)
"RTN","MAGJLS4",75,0)
 S ^XTMP("MAGJ2",0)=TS_U_"VistaRad List Compile"
"RTN","MAGJLS4",76,0)
 S REPLY=1
"RTN","MAGJLS4",77,0)
 Q
"RTN","MAGJLS4",78,0)
 ;
"RTN","MAGJLS4",79,0)
HISTTL(TXDUZ,TXDIV) ;  Build list title string
"RTN","MAGJLS4",80,0)
 N LSTTL
"RTN","MAGJLS4",81,0)
 S LSTTL="HISTORY LIST for "_$$USERINF^MAGJUTL3(TXDUZ,.01)_" at "_"Station #"_$$STATN^MAGJEX1(TXDIV)
"RTN","MAGJLS4",82,0)
 S LSTTL=LSTTL_"|"_TXDUZ ; provide report's DUZ to client
"RTN","MAGJLS4",83,0)
 Q LSTTL
"RTN","MAGJLS4",84,0)
 ;
"RTN","MAGJLS4",85,0)
HISTGET(TXDUZ,TXDIV) ; Get full History List for input user for division txdiv
"RTN","MAGJLS4",86,0)
 N MAGLST,LSTTL,LSTID,MAGLST
"RTN","MAGJLS4",87,0)
 S TXDUZ=$G(TXDUZ,DUZ)
"RTN","MAGJLS4",88,0)
 S TXDIV=$G(TXDIV,DUZ(2))
"RTN","MAGJLS4",89,0)
 D PARAMS^MAGJLS2B(9996)
"RTN","MAGJLS4",90,0)
 I 'LSTID S REPLY="0^4~Problem with History List Compile." Q
"RTN","MAGJLS4",91,0)
 S LSTTL=$$HISTTL(TXDUZ,DUZ(2))
"RTN","MAGJLS4",92,0)
 S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0))
"RTN","MAGJLS4",93,0)
 I 'X S REPLY="0^1~No exams found for: "_LSTTL Q
"RTN","MAGJLS4",94,0)
 S MAGLST=$NA(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV))
"RTN","MAGJLS4",95,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST)
"RTN","MAGJLS4",96,0)
 S REPLY=1
"RTN","MAGJLS4",97,0)
 Q
"RTN","MAGJLS4",98,0)
 ;
"RTN","MAGJLS4",99,0)
HISTDEL(DATA,TXDUZ,TXDIV) ; delete records
"RTN","MAGJLS4",100,0)
 N IDATA,CT,HISTIEN,ALLDONE,LAST
"RTN","MAGJLS4",101,0)
 S IDATA="",CT=0,ALLDONE=0
"RTN","MAGJLS4",102,0)
 L +^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV):2
"RTN","MAGJLS4",103,0)
 E  S REPLY="0^2~Unable to access HISTORY File for deleting records; try again later." Q
"RTN","MAGJLS4",104,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS4",105,0)
 F  S IDATA=$O(DATA(IDATA)) Q:IDATA=""!ALLDONE  D
"RTN","MAGJLS4",106,0)
 . S HISTIEN=$P(DATA(IDATA),U)
"RTN","MAGJLS4",107,0)
 . I HISTIEN,$D(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN)) K ^(HISTIEN) S CT=CT+1,@MAGGRY@(CT)=HISTIEN Q
"RTN","MAGJLS4",108,0)
 . E  I HISTIEN="ALL" S HISTIEN=0 D  S ALLDONE=1
"RTN","MAGJLS4",109,0)
 . . F  S HISTIEN=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN)) Q:'HISTIEN  K ^(HISTIEN) S CT=CT+1,@MAGGRY@(CT)=HISTIEN
"RTN","MAGJLS4",110,0)
 I '$D(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0,"ADD")) S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,""),-1),^(0)=X_U_X
"RTN","MAGJLS4",111,0)
 L -^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV)
"RTN","MAGJLS4",112,0)
 I 'CT S REPLY="0^3~No HISTORY List records found to delete."
"RTN","MAGJLS4",113,0)
 E  S REPLY=CT_"^1~"_CT_" HISTORY List records deleted."
"RTN","MAGJLS4",114,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJLS4",115,0)
 S REPLY=1
"RTN","MAGJLS4",116,0)
 Q
"RTN","MAGJLS4",117,0)
 ;
"RTN","MAGJLS4",118,0)
HISTUPD(TXDUZ,TXDIV) ; Update selected fields in History List
"RTN","MAGJLS4",119,0)
 N LSTTL,CT,NOHIT,RAST,STATUS,REMOTE,RIST1,RIST2,RIST,RISTISME
"RTN","MAGJLS4",120,0)
 N EXID,HISTIEN,RARPT,RADFN,RADTI,RACNI,XX1,XX2,T,X,DELETED,HDATE
"RTN","MAGJLS4",121,0)
 S CT=0,NOHIT=0
"RTN","MAGJLS4",122,0)
 S TXDUZ=$G(TXDUZ,DUZ)
"RTN","MAGJLS4",123,0)
 S TXDIV=$G(TXDIV,DUZ(2))
"RTN","MAGJLS4",124,0)
 S LSTTL=$$HISTTL(TXDUZ,DUZ(2))
"RTN","MAGJLS4",125,0)
 S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0))
"RTN","MAGJLS4",126,0)
 I 'X S REPLY="0^1~No exams found for: "_LSTTL Q
"RTN","MAGJLS4",127,0)
 L +^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV):2
"RTN","MAGJLS4",128,0)
 E  S REPLY="0^2~Unable to access HISTORY File for updating records; try again later." Q
"RTN","MAGJLS4",129,0)
 S HISTIEN=0
"RTN","MAGJLS4",130,0)
 F  S HISTIEN=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN)) Q:'HISTIEN  S XX1=$G(^(HISTIEN,1)),XX2=$G(^(2)) D
"RTN","MAGJLS4",131,0)
 . S EXID=$P(XX2,"|",2),RARPT=+$P(EXID,U,4),RADFN=+$P(EXID,U),RADTI=+$P(EXID,U,2),RACNI=+$P(EXID,U,3)
"RTN","MAGJLS4",132,0)
 . ; <*> Below is for phase 1 Alpha, til have final user setting for this <*> to be removed
"RTN","MAGJLS4",133,0)
 . ; Age limit parameter to be passed in with txid 2 rpc call; setting is on client <*>
"RTN","MAGJLS4",134,0)
 . S HDATE=$P(XX2,U,13) D  Q:DELETED
"RTN","MAGJLS4",135,0)
 . . S DELETED=0,HDATE=$P(HDATE,"@")
"RTN","MAGJLS4",136,0)
 . . S X=HDATE,%DT="" D ^%DT K %DT
"RTN","MAGJLS4",137,0)
 . . I $$FMTH^XLFDT(Y,1)<($H-3) K ^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN) S DELETED=1 Q
"RTN","MAGJLS4",138,0)
 . ; <*> End of temp change
"RTN","MAGJLS4",139,0)
 . I RARPT,RADFN,RADTI,RACNI
"RTN","MAGJLS4",140,0)
 . E  S NOHIT=NOHIT+1 Q
"RTN","MAGJLS4",141,0)
 . D IMGINFO^MAGJUTL2(RARPT,.X) S REMOTE=$P(X,U,4)
"RTN","MAGJLS4",142,0)
 . S X=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJLS4",143,0)
 . I X="" Q  ; rad exam deleted
"RTN","MAGJLS4",144,0)
 . S RAST=$P(X,U,3),RIST1=$P(X,U,12),RIST2=$P(X,U,15)
"RTN","MAGJLS4",145,0)
 . S STATUS=$S(RAST:$P(^RA(72,RAST,0),U),1:"")
"RTN","MAGJLS4",146,0)
 . S (RIST,RISTISME)=""
"RTN","MAGJLS4",147,0)
 . I RIST1!RIST2 S X=$$RIST^MAGJUTL1(RIST1,RIST2),RIST=$P(X,U),RISTISME=$P(X,U,2)
"RTN","MAGJLS4",148,0)
 . S RISTISME=$S(RISTISME:"Y",1:"N")
"RTN","MAGJLS4",149,0)
 . S $P(XX1,U,16)=RAST,$P(XX1,U,8)=STATUS,$P(XX1,U,12)=REMOTE
"RTN","MAGJLS4",150,0)
 . S T=$P(XX2,"|"),$P(T,U,3)=RIST,$P(T,U,7)=RISTISME,$P(XX2,"|")=T
"RTN","MAGJLS4",151,0)
 . S ^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN,1)=XX1,^(2)=XX2
"RTN","MAGJLS4",152,0)
 . S CT=CT+1
"RTN","MAGJLS4",153,0)
 S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,""),-1),^(0)=X_U_X ; <*> for phase 1 alpha only?
"RTN","MAGJLS4",154,0)
 L -^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV)
"RTN","MAGJLS4",155,0)
 S REPLY="0^1~HISTORY File records updated." Q
"RTN","MAGJLS4",156,0)
 Q
"RTN","MAGJLS4",157,0)
 ;
"RTN","MAGJLS4",158,0)
END Q  ; 
"RTN","MAGJLST1")
0^5^B53406353
"RTN","MAGJLST1",1,0)
MAGJLST1 ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  10:01 AM
"RTN","MAGJLST1",2,0)
 ;;3.0;IMAGING;**16,22,18,65,76**;Jun 22, 2007;Build 19
"RTN","MAGJLST1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLST1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLST1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLST1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLST1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLST1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLST1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLST1",11,0)
 ;; |                                                               |
"RTN","MAGJLST1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLST1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLST1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLST1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLST1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLST1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",18,0)
 ;;
"RTN","MAGJLST1",19,0)
 Q
"RTN","MAGJLST1",20,0)
 ;
"RTN","MAGJLST1",21,0)
 ; Subroutines for fetching Exam Info for Radiology Workstation
"RTN","MAGJLST1",22,0)
 ; Exam listings:
"RTN","MAGJLST1",23,0)
 ;     PTLIST -- list subset of all exams for a patient
"RTN","MAGJLST1",24,0)
 ;        RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",25,0)
 ;   PTLSTALL -- list ALL exams for a patient
"RTN","MAGJLST1",26,0)
 ;       RPC Call: MAGJ PT ALL EXAMS
"RTN","MAGJLST1",27,0)
 ;
"RTN","MAGJLST1",28,0)
 Q
"RTN","MAGJLST1",29,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLST1",30,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLST1",31,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLST1",32,0)
 Q:$Q 1  Q
"RTN","MAGJLST1",33,0)
 ;
"RTN","MAGJLST1",34,0)
PTLSTALL(MAGGRY,DATA) ; List ALL exams for a patient
"RTN","MAGJLST1",35,0)
 ;  RPC is MAGJ PT ALL EXAMS
"RTN","MAGJLST1",36,0)
 N PARAM
"RTN","MAGJLST1",37,0)
 I MAGJOB("P32") S PARAM="^99^999"
"RTN","MAGJLST1",38,0)
 E  S PARAM="^^^"_$P(DATA,U,2,3)
"RTN","MAGJLST1",39,0)
 D PTLIST(.MAGGRY,$P(DATA,U)_PARAM)
"RTN","MAGJLST1",40,0)
 Q
"RTN","MAGJLST1",41,0)
 ;
"RTN","MAGJLST1",42,0)
PTLIST(MAGGRY,DATA) ; get list of exams for a patient
"RTN","MAGJLST1",43,0)
 ; 
"RTN","MAGJLST1",44,0)
 ; MAGGRY - indirect reference to return array of exams for a patient
"RTN","MAGJLST1",45,0)
 ; DATA   - DFN ^ LIMYEARS ^ LIMEXAMS ^ BEGDT ^ ONESHOT
"RTN","MAGJLST1",46,0)
 ;   DFN--Patient's DFN
"RTN","MAGJLST1",47,0)
 ;   LIMYRS--Restrict exams up to # Years back (defunct)
"RTN","MAGJLST1",48,0)
 ;   LIMEXAMS--Restrict exams up to # of exams
"RTN","MAGJLST1",49,0)
 ;   BEGDT--Begin date for exam fetch (Patch 18 addition--see below)
"RTN","MAGJLST1",50,0)
 ;   ONESHOT--Number days back to search, in one fell swoop
"RTN","MAGJLST1",51,0)
 ; Returns data in ^TMP($J,"MAGRAEX",0:n)
"RTN","MAGJLST1",52,0)
 ; RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",53,0)
 ;
"RTN","MAGJLST1",54,0)
 ; Patch 18 eliminates "Patient Exams" / "All Patient Exams" distinction.
"RTN","MAGJLST1",55,0)
 ; It always retrieves ALL exams, but uses multiple RPC calls, so the client
"RTN","MAGJLST1",56,0)
 ; incrementally builds the list; this is to provide all the data, but without
"RTN","MAGJLST1",57,0)
 ; incurring any long pauses to provide the info to the user.
"RTN","MAGJLST1",58,0)
 ; Below, the P18 code fetches RAD data in one-year chunks, and repeats
"RTN","MAGJLST1",59,0)
 ;   until over 20 exams have been processed, at which point the RPC reply
"RTN","MAGJLST1",60,0)
 ;   is posted, along with the last date processed; this value is then used for
"RTN","MAGJLST1",61,0)
 ;   a subsequent RPC call to get the next chunk of the record; etc. till all done.
"RTN","MAGJLST1",62,0)
 ;   The P32 code is re-organized, and now exits only for LIMEXAMS (ignore LimYears)
"RTN","MAGJLST1",63,0)
 ;   
"RTN","MAGJLST1",64,0)
 N CNT,DFN,ISS,PATNAME,DIQUIET,MAGRACNT,MAGRET,REPLY,REMOTE,SNDREMOT
"RTN","MAGJLST1",65,0)
 N DAYCASE,DIV,EXCAT,MAGDT,XX,XX2,WHOLOCK,MODALITY,MYLOCK,PLACE,ENDLOOP
"RTN","MAGJLST1",66,0)
 N LIMEXAMS,BEGDT,SAVBEGDT,ENDDT,MORE,SHOWPLAC,RDRIST,PSSN,CPT,PARAM
"RTN","MAGJLST1",67,0)
 N CURPRIO,STATUS,RARPT,KEY,X2,REMOTE2,ONESHOT,LIMDAYS
"RTN","MAGJLST1",68,0)
 N IMGCNT,LRFLAG,MSG,ONL,PROCMOD,RASTCAT,RASTORD
"RTN","MAGJLST1",69,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLST1"
"RTN","MAGJLST1",70,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLST1",71,0)
 S PARAM=$G(^MAG(2006.69,1,0))
"RTN","MAGJLST1",72,0)
 S SNDREMOT=+$P(PARAM,U,11) ; Site routes images remotely?
"RTN","MAGJLST1",73,0)
 I MAGJOB("P32") D
"RTN","MAGJLST1",74,0)
 . S LIMEXAMS=+$P(PARAM,U,15)
"RTN","MAGJLST1",75,0)
 . S:'LIMEXAMS LIMEXAMS=999 ; default to show ALL Exams
"RTN","MAGJLST1",76,0)
 . I $P(DATA,U,3) S LIMEXAMS=+$P(DATA,U,3)
"RTN","MAGJLST1",77,0)
 . I LIMEXAMS<20 S LIMEXAMS=20
"RTN","MAGJLST1",78,0)
 . S BEGDT=""
"RTN","MAGJLST1",79,0)
 E  S BEGDT=$P(DATA,U,4),ONESHOT=$P(DATA,U,5)  ; P65 chg
"RTN","MAGJLST1",80,0)
 K MAGGRY S DFN=+DATA
"RTN","MAGJLST1",81,0)
 S SHOWPLAC=$$SHOWPLAC^MAGJLS2B("")
"RTN","MAGJLST1",82,0)
 S MAGRACNT=1,CNT=0 K ^TMP($J,"MAGRAEX"),^("MAGRAEX2")
"RTN","MAGJLST1",83,0)
 S REPLY="0^4~Compiling list of Radiology Exams."
"RTN","MAGJLST1",84,0)
 I DFN,$D(^DPT(DFN,0)) S PATNAME=$P(^(0),U),PSSN=$P(^(0),U,9) D
"RTN","MAGJLST1",85,0)
 . S ENDLOOP=0,BEGDT=$S(+BEGDT:BEGDT,1:"")
"RTN","MAGJLST1",86,0)
 . I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S REPLY="0^4~VistARad Patch 32 is no longer supported; contact Imaging Support for the current version of the VistARad client software." Q  ; <*>
"RTN","MAGJLST1",87,0)
 . F  D  Q:'MORE  Q:ENDLOOP  S BEGDT=MORE+1
"RTN","MAGJLST1",88,0)
 . . I 'BEGDT S BEGDT=DT,X2=0
"RTN","MAGJLST1",89,0)
 . . E  S X2=-1
"RTN","MAGJLST1",90,0)
 . . S LIMDAYS=365,MORE=1
"RTN","MAGJLST1",91,0)
 . . I 'MAGJOB("P32") I ONESHOT,(ONESHOT>0) S LIMDAYS=+ONESHOT
"RTN","MAGJLST1",92,0)
 . . S ENDDT=$$FMADD^XLFDT(BEGDT,X2)
"RTN","MAGJLST1",93,0)
 . . S BEGDT=$$FMADD^XLFDT(ENDDT,-LIMDAYS)
"RTN","MAGJLST1",94,0)
 . . D GETEXAM3^MAGJUTL1(DFN,BEGDT,ENDDT,.MAGRACNT,.MAGRET,.MORE)
"RTN","MAGJLST1",95,0)
 . . I MAGJOB("P32") S ENDLOOP=(MAGRACNT>LIMEXAMS)
"RTN","MAGJLST1",96,0)
 . . E  S ENDLOOP=(MAGRACNT>20)!+ONESHOT ; For testing only, use >8
"RTN","MAGJLST1",97,0)
 . I 'MORE S SAVBEGDT=0
"RTN","MAGJLST1",98,0)
 . E  S SAVBEGDT=MORE+1 ; adding 1 correctly inits value for subseqent call
"RTN","MAGJLST1",99,0)
 . I MAGRACNT>1 D PTLOOP
"RTN","MAGJLST1",100,0)
 E  S REPLY="0^4~Invalid Radiology Patient"
"RTN","MAGJLST1",101,0)
 I MAGRACNT<2 S:(REPLY["Compiling") REPLY="0^2~No Exams Found for "_PATNAME
"RTN","MAGJLST1",102,0)
 I CNT!(REPLY["No Exams Found") D
"RTN","MAGJLST1",103,0)
 . I 'MORE S MSG="ALL exams are listed."
"RTN","MAGJLST1",104,0)
 . E  S MORE=$$FMTE^XLFDT(MORE) S MSG="Patient has more exams on file."
"RTN","MAGJLST1",105,0)
 . ; show SSN only if the user is a radiologist
"RTN","MAGJLST1",106,0)
 . S X=+MAGJOB("USER",1) I '(X=12!(X=15)) S PSSN=""
"RTN","MAGJLST1",107,0)
 . E  S PSSN=" ("_$E(PSSN,1,3)_"-"_$E(PSSN,4,5)_"-"_$E(PSSN,6,9)_")"
"RTN","MAGJLST1",108,0)
 . I CNT S REPLY=CNT_"^1~Radiology Exams for: "_PATNAME_PSSN_" -- "_MSG
"RTN","MAGJLST1",109,0)
 . E  S REPLY=REPLY_" -- "_MSG
"RTN","MAGJLST1",110,0)
 . S ^TMP($J,"MAGRAEX2",1)="^Day/Case~S3~1^Lock~~2^Procedure~~6^Modifier~~25^Image Date/Time~S1~7^Status~~8^# Img~S2~9^Onl~~10"_$S($G(SNDREMOT):"^RC~~12",1:"")_$S(SHOWPLAC:"^Site~~23",1:"")_"^Mod~~15^Interp By~~20^Imaging Loc~~11^CPT~~27"
"RTN","MAGJLST1",111,0)
 I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S ^TMP($J,"MAGRAEX2",1)="^^"
"RTN","MAGJLST1",112,0)
 I 'MAGJOB("P32") S $P(REPLY,"|",2)=SAVBEGDT
"RTN","MAGJLST1",113,0)
 S ^TMP($J,"MAGRAEX2",0)=REPLY
"RTN","MAGJLST1",114,0)
 S MAGGRY=$NA(^TMP($J,"MAGRAEX2"))
"RTN","MAGJLST1",115,0)
 K ^TMP($J,"RAE1"),^("MAGRAEX")
"RTN","MAGJLST1",116,0)
 Q
"RTN","MAGJLST1",117,0)
 ;
"RTN","MAGJLST1",118,0)
PTLOOP ; loop through exam data & package it for VRAD use
"RTN","MAGJLST1",119,0)
 S ISS=0
"RTN","MAGJLST1",120,0)
 F  S ISS=$O(^TMP($J,"MAGRAEX",ISS)) Q:'ISS  S XX=^(ISS,1),XX2=^(2) D
"RTN","MAGJLST1",121,0)
 . S CNT=CNT+1,RARPT=$P(XX,U,10)
"RTN","MAGJLST1",122,0)
 . D IMGINFO^MAGJUTL2(RARPT,.Y)
"RTN","MAGJLST1",123,0)
 . S IMGCNT=$P(Y,U),ONL=$P(Y,U,2),MAGDT=$P(Y,U,3),REMOTE=$P(Y,U,4),MODALITY=$P(Y,U,5),PLACE=$P(Y,U,6),KEY=$P(Y,U,7)
"RTN","MAGJLST1",124,0)
 . S REMOTE2=REMOTE
"RTN","MAGJLST1",125,0)
 . S:PLACE PLACE=$P($G(^MAG(2006.1,PLACE,0)),U,9)
"RTN","MAGJLST1",126,0)
 . I PLACE]"",SHOWPLAC D
"RTN","MAGJLST1",127,0)
 .. I SHOWPLAC'[(","_PLACE_",") S PLACE="" ; don't show user's logon pl ; <*> chg for p18?
"RTN","MAGJLST1",128,0)
 . I SNDREMOT,REMOTE D
"RTN","MAGJLST1",129,0)
 .. S T="" F I=1:1:$L(REMOTE,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(REMOTE,",",I),3)),U,5)
"RTN","MAGJLST1",130,0)
 .. S REMOTE=T
"RTN","MAGJLST1",131,0)
 . S DIV="",X=$P(XX2,U,5) I X'=DUZ(2) S DIV=$$STATN(X)
"RTN","MAGJLST1",132,0)
 . I MAGDT="" S MAGDT=$P(XX,U,7)
"RTN","MAGJLST1",133,0)
 . S MAGDT=$$FMTE^XLFDT(MAGDT,"5Z")
"RTN","MAGJLST1",134,0)
 . S WHOLOCK=RARPT,MYLOCK="",DAYCASE=$P(XX,U,12)
"RTN","MAGJLST1",135,0)
 . I WHOLOCK]"" S T=$$CHKLOCK^MAGJLS2B(WHOLOCK,DAYCASE),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLST1",136,0)
 . S RDRIST=$P(XX2,U,3),PROCMOD=$P(XX2,U,8),CPT=$P(XX,U,17),RASTORD=$P(XX,U,15)
"RTN","MAGJLST1",137,0)
 . S Y=U_DAYCASE_U_WHOLOCK_U_$E($P(XX,U,9),1,26)_U_PROCMOD_U_MAGDT_U_$E($P(XX,U,14),1,16)_U_IMGCNT_U_ONL
"RTN","MAGJLST1",138,0)
 . I $G(SNDREMOT) S Y=Y_U_REMOTE
"RTN","MAGJLST1",139,0)
 . S Y=Y_$S(SHOWPLAC:U_PLACE,1:"")_U_MODALITY_U_RDRIST_U_$E($P(XX,U,13),1,11)_U_CPT
"RTN","MAGJLST1",140,0)
 . S STATUS=$P(XX,U,11),EXCAT="",CURPRIO=0,RASTCAT=$P(XX2,U,11),LRFLAG=$P(XX2,U,12)
"RTN","MAGJLST1",141,0)
 . I STATUS]"" D
"RTN","MAGJLST1",142,0)
 . . S EXCAT=RASTCAT
"RTN","MAGJLST1",143,0)
 . . I RASTORD<2!(EXCAT="W")!('IMGCNT) S CURPRIO=0 ; Cancelled/Waiting/No images: Ignore exam
"RTN","MAGJLST1",144,0)
 . . E  I EXCAT="E" S CURPRIO=1  ; Examined="Current" exam
"RTN","MAGJLST1",145,0)
 . . E  S CURPRIO=2  ; must be a "prior" exam
"RTN","MAGJLST1",146,0)
 . . I CURPRIO,'(ONL="Y") S CURPRIO=3 ; images on jukebox
"RTN","MAGJLST1",147,0)
 . . I MAGJOB("P32"),'(EXCAT="E") S EXCAT="" Q  ; P32 compat.
"RTN","MAGJLST1",148,0)
 . . I RASTORD=9 S EXCAT="C" ; Complete
"RTN","MAGJLST1",149,0)
 . . E  I EXCAT="D"!(EXCAT="T") S EXCAT="I" ; just display one value meaning Interpreted
"RTN","MAGJLST1",150,0)
 . S ^TMP($J,"MAGRAEX2",ISS)=Y_"^|"_$P(XX,U,1,3)_U_RARPT_"||"_EXCAT_U_WHOLOCK_U_MYLOCK_U_MODALITY_U_CPT_U_CURPRIO_U_RARPT_U_KEY_U_REMOTE2_U_LRFLAG
"RTN","MAGJLST1",151,0)
 . ; * Note: Keep Pipe-pieces in sync with svmag2a^magjls3 & lstout^magjls2b *
"RTN","MAGJLST1",152,0)
 Q
"RTN","MAGJLST1",153,0)
 ;
"RTN","MAGJLST1",154,0)
STATN(X) ; get station #, else return input value
"RTN","MAGJLST1",155,0)
 N T
"RTN","MAGJLST1",156,0)
 I X]"" D GETS^DIQ(4,X,99,"E","T") S T=$G(T(4,X_",",99,"E")) I T]"" S X=T
"RTN","MAGJLST1",157,0)
 Q X
"RTN","MAGJLST1",158,0)
 ;
"RTN","MAGJLST1",159,0)
END Q  ;
"RTN","MAGJMN1")
0^6^B62146052
"RTN","MAGJMN1",1,0)
MAGJMN1 ;WIRMFO/JHC VRad Maint functions ; 29 Jul 2003  4:02 PM
"RTN","MAGJMN1",2,0)
 ;;3.0;IMAGING;**16,9,22,18,65,76**;Jun 22, 2007;Build 19
"RTN","MAGJMN1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJMN1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJMN1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJMN1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJMN1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJMN1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJMN1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJMN1",11,0)
 ;; |                                                               |
"RTN","MAGJMN1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJMN1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJMN1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJMN1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJMN1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJMN1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",18,0)
 ;;
"RTN","MAGJMN1",19,0)
 Q
"RTN","MAGJMN1",20,0)
 ;
"RTN","MAGJMN1",21,0)
SVRLIST ;
"RTN","MAGJMN1",22,0)
 W @IOF,!!?10,"Enter/Edit VistARad Exams List Definition",!!
"RTN","MAGJMN1",23,0)
 N MAGIEN
"RTN","MAGJMN1",24,0)
 K DIC S (DIC,DLAYGO)=2006.631,DIC(0)="ALMEQ"
"RTN","MAGJMN1",25,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",26,0)
 S X=$P(@(DIC_+Y_",0)"),U,2)
"RTN","MAGJMN1",27,0)
 I X>9000 W !!,$C(7),"You may not edit System-Supplied files!" H 3 G SVRLIST
"RTN","MAGJMN1",28,0)
 S DIE=2006.631,DA=+Y,DR="[MAGJ LIST EDIT]"
"RTN","MAGJMN1",29,0)
 S MAGIEN=DA
"RTN","MAGJMN1",30,0)
 D ^DIE I '$D(DA) G SVRLIST
"RTN","MAGJMN1",31,0)
 D ENSRCH
"RTN","MAGJMN1",32,0)
 D BLDDEF(MAGIEN)
"RTN","MAGJMN1",33,0)
 S $P(^MAG(2006.631,MAGIEN,0),U,5)=$$NOW^XLFDT()
"RTN","MAGJMN1",34,0)
 W !!,"List Definition complete!" R X:2
"RTN","MAGJMN1",35,0)
 G SVRLIST
"RTN","MAGJMN1",36,0)
 Q
"RTN","MAGJMN1",37,0)
ENSRCH ; Invoke Search for 2006.631 def'n
"RTN","MAGJMN1",38,0)
 N GREF,GLIN,GO,CT,DIARI,DIC,FNOD,TNOD,NCOND,NODE0
"RTN","MAGJMN1",39,0)
 ; GREF holds indirect ref to store search logic data:
"RTN","MAGJMN1",40,0)
 ; @GREF@(3, ff -- conditional elements (fields/logic)
"RTN","MAGJMN1",41,0)
 ; @GREF@(4, ff -- composite elements (ANDed conditions)
"RTN","MAGJMN1",42,0)
 ; @GREF@(5, ff -- Human-readable search text
"RTN","MAGJMN1",43,0)
 ; GLIN holds indirect ref to retrieve search logic data from ^DIBT
"RTN","MAGJMN1",44,0)
 ; @GLIN@("DC", ff -- conditional elements
"RTN","MAGJMN1",45,0)
 ; @GLIN@("DL", ff -- composite elements
"RTN","MAGJMN1",46,0)
 ; @GLIN@("O", ff -- readable text
"RTN","MAGJMN1",47,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",48,0)
 S GO=1 I $D(@GREF@(5,1)) D  ; show current logic
"RTN","MAGJMN1",49,0)
 . W ! D DISPSRCH(GREF)
"RTN","MAGJMN1",50,0)
 . S X=$$YN("Do you want to delete or re-enter the search logic?","NO")
"RTN","MAGJMN1",51,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",52,0)
 . W !!?7,"Re-entering the search logic requires first deleting the current",!?7,"definition, then entering the new definition from scratch."
"RTN","MAGJMN1",53,0)
 . S X=$$YN("Are you sure you want to continue?","NO")
"RTN","MAGJMN1",54,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",55,0)
 I 'GO Q
"RTN","MAGJMN1",56,0)
 W !!?7,"Now enter search logic for this List.  To do this, the program"
"RTN","MAGJMN1",57,0)
 W !?7,"will prompt you just as if you were going to run a Fileman Search."
"RTN","MAGJMN1",58,0)
 W !?7,"When prompted STORE RESULTS OF SEARCH IN TEMPLATE:, answer with 'TEMP'"
"RTN","MAGJMN1",59,0)
 W !?7,"If prompted ... OK TO PURGE? NO// answer 'YES'; don't bother specifying"
"RTN","MAGJMN1",60,0)
 W !?7,"output print fields, but just RETURN through all the prompts to"
"RTN","MAGJMN1",61,0)
 W !?7,"complete the process.  The search definition will be saved as part"
"RTN","MAGJMN1",62,0)
 W !?7,"of this List definition; you will test it out by running it from "
"RTN","MAGJMN1",63,0)
 W !?7,"the workstation.  If you need to modify the search logic, you will"
"RTN","MAGJMN1",64,0)
 W !?7,"have to re-enter it in its entirety."
"RTN","MAGJMN1",65,0)
 W !!?7,"NOTES: EXAM LOCK INDICATOR will not work for search logic;"
"RTN","MAGJMN1",66,0)
 W !?14,"REMOTE CACHE INDICATOR only works for Null/Not Null logic."
"RTN","MAGJMN1",67,0)
 S DIC=2006.634 D EN^DIS  ; call Fman Search Logic routine. It will store search logic in ^DIBT
"RTN","MAGJMN1",68,0)
 ; 2006.634 is intentional--don't change this!
"RTN","MAGJMN1",69,0)
 I '$G(DIARI) W !!," Search logic NOT updated" D  Q
"RTN","MAGJMN1",70,0)
 . Q:'$D(@GREF@(5,1))  ; if no logic had existed, quit
"RTN","MAGJMN1",71,0)
 . S X=$$YN("Do you want to DELETE the search logic?","NO")
"RTN","MAGJMN1",72,0)
 . I X="Y" K @GREF@(3) K ^(4),^(5) W " -- Deleted!"
"RTN","MAGJMN1",73,0)
 K @GREF@(3) K ^(4),^(5)
"RTN","MAGJMN1",74,0)
 S GLIN=$NA(^DIBT(DIARI))  ; Copy logic to 2006.631 DEF nodes
"RTN","MAGJMN1",75,0)
 S FNOD="DC",TNOD=3,CT=0  ; "DC" data--straight copy
"RTN","MAGJMN1",76,0)
 S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T),CT=CT+1,@GREF@(TNOD,T)=X
"RTN","MAGJMN1",77,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",78,0)
 S FNOD="DL",TNOD=4,CT=0  ; "DL" data--copy depends on storage scheme in DIBT:
"RTN","MAGJMN1",79,0)
 ;Zero node null -- straight copy
"RTN","MAGJMN1",80,0)
 ; Else 1) either only one condition is defined;
"RTN","MAGJMN1",81,0)
 ; or, 2) the zero-node condition is ANDed with all defined conditions
"RTN","MAGJMN1",82,0)
 ;  Case 2: Var A -- Pre-pend zero node, then dup zero node
"RTN","MAGJMN1",83,0)
 ;            Var B -- Pre-pend zero node
"RTN","MAGJMN1",84,0)
 S NCOND=+$G(@GLIN@(FNOD))
"RTN","MAGJMN1",85,0)
 I $G(@GLIN@(FNOD,0))]"" S NODE0=^(0) D
"RTN","MAGJMN1",86,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=NODE0_X
"RTN","MAGJMN1",87,0)
 . I CT'=NCOND S CT=CT+1,@GREF@(TNOD,CT)=NODE0_$S(CT=1:"",1:"^")
"RTN","MAGJMN1",88,0)
 E  D
"RTN","MAGJMN1",89,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=X
"RTN","MAGJMN1",90,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",91,0)
 ; readable text--straight copy
"RTN","MAGJMN1",92,0)
 S TNOD=5,T=0 F  S T=$O(@GLIN@("O",T)) Q:T=""  S @GREF@(TNOD,T)=^(T,0)
"RTN","MAGJMN1",93,0)
 Q
"RTN","MAGJMN1",94,0)
 ;
"RTN","MAGJMN1",95,0)
BLDDEF(LSTID) ; build DEF nodes for Column/Sort defs
"RTN","MAGJMN1",96,0)
 N QX,SS,STR,LSTHDR,T,T0,T8,T6,HASCASE,XT,HASDATE
"RTN","MAGJMN1",97,0)
 S SS=0,HASCASE=0,HASDATE=0
"RTN","MAGJMN1",98,0)
 ; columns/hdrs: Order in T array by the Relative Column Order
"RTN","MAGJMN1",99,0)
 F  S SS=$O(^MAG(2006.631,LSTID,1,SS)) D  Q:'SS
"RTN","MAGJMN1",100,0)
 . I 'SS D  Q
"RTN","MAGJMN1",101,0)
 . . I 'HASCASE S X=1 D BLDDEF2(X)  ; FORCE CASE#
"RTN","MAGJMN1",102,0)
 . . I 'HASDATE S X=7 D BLDDEF2(X)  ; DATE/TIME
"RTN","MAGJMN1",103,0)
 . E  S X=^MAG(2006.631,LSTID,1,SS,0)
"RTN","MAGJMN1",104,0)
 . D BLDDEF2(X)
"RTN","MAGJMN1",105,0)
 ; go thru T to build ordered field sequence for output columns
"RTN","MAGJMN1",106,0)
 S QX="T",STR="",LSTHDR=""
"RTN","MAGJMN1",107,0)
 F  S QX=$Q(@QX) Q:QX=""  S X=@QX D
"RTN","MAGJMN1",108,0)
 . S STR=STR_$S(STR="":"",1:U)_$P(X,U)
"RTN","MAGJMN1",109,0)
 . S LSTHDR=LSTHDR_$S(LSTHDR="":"",1:U)_$P(X,U,2)
"RTN","MAGJMN1",110,0)
 S ^MAG(2006.631,LSTID,"DEF",.5)=LSTHDR,^(1)=STR
"RTN","MAGJMN1",111,0)
 ; Sort values:
"RTN","MAGJMN1",112,0)
 S SS=0,STR=""
"RTN","MAGJMN1",113,0)
 F  S SS=$O(^MAG(2006.631,LSTID,2,SS)) Q:'SS  S X=^(SS,0) D
"RTN","MAGJMN1",114,0)
 . S X=+X_$S($P(X,U,2):"-",1:"")
"RTN","MAGJMN1",115,0)
 . S STR=STR_$S(STR="":"",1:U)_X
"RTN","MAGJMN1",116,0)
 S ^MAG(2006.631,LSTID,"DEF",2)=STR
"RTN","MAGJMN1",117,0)
 S $P(^MAG(2006.631,LSTID,"DEF",0),U)=$$NOW^XLFDT()
"RTN","MAGJMN1",118,0)
 Q
"RTN","MAGJMN1",119,0)
 ;
"RTN","MAGJMN1",120,0)
BLDDEF2(X) ;
"RTN","MAGJMN1",121,0)
 S X=+X_$S($P(X,U,2):";"_+$P(X,U,2),1:"")
"RTN","MAGJMN1",122,0)
 I 'HASCASE S HASCASE=(+X=1)
"RTN","MAGJMN1",123,0)
 I 'HASDATE S HASDATE=(+X=7)
"RTN","MAGJMN1",124,0)
 S T0=^MAG(2006.63,+X,0),T6=+$P(T0,U,6) S:'T6 T6=99
"RTN","MAGJMN1",125,0)
 S T8=$P(T0,U,8) I T8]"" S T8="~"_T8
"RTN","MAGJMN1",126,0)
 S XT=$S($P(T0,U,3)]"":$P(T0,U,3),1:$P(T0,U,2))_T8
"RTN","MAGJMN1",127,0)
 S $P(XT,"~",3)=+X
"RTN","MAGJMN1",128,0)
 S T(T6,+X)=X_U_XT
"RTN","MAGJMN1",129,0)
 Q
"RTN","MAGJMN1",130,0)
 ;
"RTN","MAGJMN1",131,0)
PRE ; init 2006.63 prior to KIDS install
"RTN","MAGJMN1",132,0)
 N DIK,DA S DIK="^MAG(2006.63,",DA=0 F  S DA=$O(@(DIK_DA_")")) Q:'DA  D ^DIK
"RTN","MAGJMN1",133,0)
 Q
"RTN","MAGJMN1",134,0)
 ;
"RTN","MAGJMN1",135,0)
P18 ; Patch 18 inits
"RTN","MAGJMN1",136,0)
 D BLDALL
"RTN","MAGJMN1",137,0)
 D POST
"RTN","MAGJMN1",138,0)
 Q
"RTN","MAGJMN1",139,0)
 ;
"RTN","MAGJMN1",140,0)
BLDALL ; Create "DEF" nodes, Button labels List Def'ns
"RTN","MAGJMN1",141,0)
 ; Updates all lists after s/w update list defs are installed
"RTN","MAGJMN1",142,0)
 N SS,LSTDAT,LSTNUM,BUTTON,LSTTYP
"RTN","MAGJMN1",143,0)
 S SS=0
"RTN","MAGJMN1",144,0)
 F  S SS=$O(^MAG(2006.631,SS)) Q:'SS  S LSTDAT=$G(^(SS,0)) I LSTDAT]"" D
"RTN","MAGJMN1",145,0)
 . S LSTNUM=$P(LSTDAT,U,2),BUTTON=$P(LSTDAT,U,7),LSTTYP=$P(LSTDAT,U,3)
"RTN","MAGJMN1",146,0)
 . I LSTNUM>9900!$P(LSTDAT,U,6) D BLDDEF(SS)  ; build DEF nodes for System Lists & any Enabled lists
"RTN","MAGJMN1",147,0)
 . I BUTTON="",(LSTTYP]"") D   ; Create Button Labels if needed
"RTN","MAGJMN1",148,0)
 . . S BUTTON=$S(LSTTYP="U":"Unread #",LSTTYP="R":"Recent #",LSTTYP="A":"All Active #",LSTTYP="P":"Pending #",1:"List #")_LSTNUM
"RTN","MAGJMN1",149,0)
 . . S $P(^MAG(2006.631,SS,0),U,7)=BUTTON
"RTN","MAGJMN1",150,0)
 Q
"RTN","MAGJMN1",151,0)
 ;
"RTN","MAGJMN1",152,0)
POST ; Install msg
"RTN","MAGJMN1",153,0)
 D INS^MAGQBUT4(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGJMN1",154,0)
 Q
"RTN","MAGJMN1",155,0)
 ;
"RTN","MAGJMN1",156,0)
YN(MSG,DFLT) ; get Yes/No reply
"RTN","MAGJMN1",157,0)
 N X I $G(DFLT)="" S DFLT="N"
"RTN","MAGJMN1",158,0)
 W !
"RTN","MAGJMN1",159,0)
 S DFLT=$E(DFLT),DFLT=$S(DFLT="N":"NO",1:"YES")
"RTN","MAGJMN1",160,0)
YN1 W !,MSG_" "_DFLT_"// "
"RTN","MAGJMN1",161,0)
 R X:DTIME S:X="" X=DFLT S X=$E(X),X=$TR(X,"ynYN","YNYN")
"RTN","MAGJMN1",162,0)
 I "YN"'[X W "  ??? Enter YES or NO",! G YN1
"RTN","MAGJMN1",163,0)
 Q X
"RTN","MAGJMN1",164,0)
 ;
"RTN","MAGJMN1",165,0)
LSTINQ ; Inq/Disp list def'n
"RTN","MAGJMN1",166,0)
 N GREF,MAGIEN
"RTN","MAGJMN1",167,0)
 W !!?15,"Display VistARad Exams List Definition",!!
"RTN","MAGJMN1",168,0)
 N MAGIEN
"RTN","MAGJMN1",169,0)
 S DIC=2006.631,DIC(0)="AMEQ"
"RTN","MAGJMN1",170,0)
 D ^DIC I Y=-1 K DIC,DA,DR Q
"RTN","MAGJMN1",171,0)
 K DR S DA=+Y,MAGIEN=DA
"RTN","MAGJMN1",172,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",173,0)
 W ! D EN^DIQ
"RTN","MAGJMN1",174,0)
 R !,"Enter RETURN to display the Search Logic: ",X:DTIME W !
"RTN","MAGJMN1",175,0)
 D DISPSRCH(GREF)
"RTN","MAGJMN1",176,0)
 G LSTINQ
"RTN","MAGJMN1",177,0)
 Q
"RTN","MAGJMN1",178,0)
 ;
"RTN","MAGJMN1",179,0)
DISPSRCH(GREF) ; GREF holds indirect ref for global holding search logic data
"RTN","MAGJMN1",180,0)
 I $D(@GREF@(5,1)) W !,"List Exams where:",! D
"RTN","MAGJMN1",181,0)
 . F I=1:1 Q:'$D(@GREF@(5,I))  W !?3,^(I)
"RTN","MAGJMN1",182,0)
 E  W !?3,"NO Search Logic defined!"
"RTN","MAGJMN1",183,0)
 Q
"RTN","MAGJMN1",184,0)
 ;
"RTN","MAGJMN1",185,0)
VRSIT ;
"RTN","MAGJMN1",186,0)
 W @IOF,!!?10,"Enter/Edit VistARad Site Parameters",!!
"RTN","MAGJMN1",187,0)
 S DIC=2006.69,DIC(0)="ALMEQ"
"RTN","MAGJMN1",188,0)
 I '$D(^MAG(DIC,1)) S DLAYGO=DIC
"RTN","MAGJMN1",189,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",190,0)
 S DIE=2006.69,DA=+Y,DR=".01:3.99;4.1:20"
"RTN","MAGJMN1",191,0)
 D ^DIE
"RTN","MAGJMN1",192,0)
 K DIC,DA,DR,DIE,DLAYGO
"RTN","MAGJMN1",193,0)
 N PLACE S DA=""
"RTN","MAGJMN1",194,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGJMN1",195,0)
 S:PLACE DA=PLACE
"RTN","MAGJMN1",196,0)
 I DA D
"RTN","MAGJMN1",197,0)
 . W !!,"Editing VistARad Timeout for division #",DUZ(2),!
"RTN","MAGJMN1",198,0)
 . S DIE=2006.1,DR="123" D ^DIE
"RTN","MAGJMN1",199,0)
 K DA,DR,DIE
"RTN","MAGJMN1",200,0)
 Q
"RTN","MAGJMN1",201,0)
 ;
"RTN","MAGJMN1",202,0)
EEPREF ;
"RTN","MAGJMN1",203,0)
 W @IOF,!!?10,"Enter/Edit VistARad Prefetch Logic",!!
"RTN","MAGJMN1",204,0)
 N MAGIEN
"RTN","MAGJMN1",205,0)
 K DIC S (DIC,DLAYGO)=2006.65,DIC(0)="ALMEQ"
"RTN","MAGJMN1",206,0)
 D ^DIC I Y=-1 K DIC,DIE,DR,DLAYGO Q
"RTN","MAGJMN1",207,0)
 S DIE=2006.65,DA=+Y,DR="[MAGJ PRIOR EDIT]"
"RTN","MAGJMN1",208,0)
 S MAGIEN=DA
"RTN","MAGJMN1",209,0)
 D ^DIE I '$D(DA) G EEPREF
"RTN","MAGJMN1",210,0)
 G EEPREF
"RTN","MAGJMN1",211,0)
 Q
"RTN","MAGJMN1",212,0)
INPREF ; Inquire VRad PreFetch
"RTN","MAGJMN1",213,0)
 W @IOF,!!?10,"Inquire VistARad Prefetch Logic",!!
"RTN","MAGJMN1",214,0)
 N MAGIEN,BY,FR,TO
"RTN","MAGJMN1",215,0)
 S DIC=2006.65,DIC(0)="AMEQ"
"RTN","MAGJMN1",216,0)
 D ^DIC I Y=-1 K DIC Q
"RTN","MAGJMN1",217,0)
 S DA=+Y,(FR,TO)=$P(Y,U,2),MAGIEN=DA,L=0
"RTN","MAGJMN1",218,0)
 S BY="[MAGJ PRIOR SORT]",DIS(0)="I D0=MAGIEN"
"RTN","MAGJMN1",219,0)
 D EN^DIP
"RTN","MAGJMN1",220,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",221,0)
 G INPREF
"RTN","MAGJMN1",222,0)
 Q
"RTN","MAGJMN1",223,0)
PRPREF ;Print VRad Prefetch
"RTN","MAGJMN1",224,0)
 N BY
"RTN","MAGJMN1",225,0)
 W !! S DIC=2006.65,L=0,BY="[MAGJ PRIOR SORT]"
"RTN","MAGJMN1",226,0)
 D EN1^DIP
"RTN","MAGJMN1",227,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",228,0)
 Q
"RTN","MAGJMN1",229,0)
 ;
"RTN","MAGJMN1",230,0)
END ;
"RTN","MAGJUPD1")
0^7^B56235053
"RTN","MAGJUPD1",1,0)
MAGJUPD1 ;WOIFO/JHC VistARad Update Exam Status ; 29 Jul 2003  10:02 AM
"RTN","MAGJUPD1",2,0)
 ;;3.0;IMAGING;**16,22,18,76**;Jun 22, 2007;Build 19
"RTN","MAGJUPD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUPD1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUPD1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUPD1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUPD1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUPD1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUPD1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUPD1",11,0)
 ;; |                                                               |
"RTN","MAGJUPD1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUPD1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUPD1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUPD1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUPD1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUPD1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD1",18,0)
 ;;
"RTN","MAGJUPD1",19,0)
 Q
"RTN","MAGJUPD1",20,0)
 ; Subroutines for RPC's to update Exam Status to "Interpreted", and
"RTN","MAGJUPD1",21,0)
 ;   for "Closing" a case that is open on the DX Workstation
"RTN","MAGJUPD1",22,0)
 ;
"RTN","MAGJUPD1",23,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^Server Program Error: "_ERR
"RTN","MAGJUPD1",24,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJUPD1",25,0)
 Q:$Q 1  Q
"RTN","MAGJUPD1",26,0)
 ;
"RTN","MAGJUPD1",27,0)
STATUS(MAGGRY,PARAMS,DATA) ; rpc: MAGJ RADSTATUSUPDATE
"RTN","MAGJUPD1",28,0)
 ; Update Exam Status to "Interpreted" and/or Close the exam
"RTN","MAGJUPD1",29,0)
 ; Only updates the Status if the current value is "Examined"
"RTN","MAGJUPD1",30,0)
 ; This routine defines variables needed for calling the Radiology
"RTN","MAGJUPD1",31,0)
 ; package routine UP1^RAUTL1, for filing Status updates
"RTN","MAGJUPD1",32,0)
 ;
"RTN","MAGJUPD1",33,0)
 ; PARAMS = UPDFLAG ^ RADFN ^ RADTI ^ RACNI ^ RARPT ^ UPDPSKEY
"RTN","MAGJUPD1",34,0)
 ;   UPDFLAG = 1/0 -- 1 to perform update; else no update made
"RTN","MAGJUPD1",35,0)
 ;   RARPT = ptr to Rad Exam Report file
"RTN","MAGJUPD1",36,0)
 ;   RADFN,RADTI,RACNI = pointers to Rad Patient File for the exam
"RTN","MAGJUPD1",37,0)
 ;   UPDPSKEY = 1/0 -- 1 to update Presentation State &/or Key Image data
"RTN","MAGJUPD1",38,0)
 ;   MAGGRY = return results in @MAGGRY
"RTN","MAGJUPD1",39,0)
 ;
"RTN","MAGJUPD1",40,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJUPD1"
"RTN","MAGJUPD1",41,0)
 N RARPT,RADFN,RADTI,RACNI,RAEXT,RACNE,RADTE,RAINT,RAMDV,DIQUIET
"RTN","MAGJUPD1",42,0)
 N RAONLINE,ZTQUEUED,RAOR,RASN,RASTI,RAPRTSET,LOGDATA,RSL,TIMESTMP
"RTN","MAGJUPD1",43,0)
 N UPDPSKEY,MAGRET,MAGLST,REPLY,UPDFLAG,RADATA,RIST,MAGPSET,RACNILST,ACNLST
"RTN","MAGJUPD1",44,0)
 S MAGLST="MAGJUPDATE"
"RTN","MAGJUPD1",45,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY  ; assign MAGGRY value
"RTN","MAGJUPD1",46,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUPD1",47,0)
 S TIMESTMP=$$NOW^XLFDT()
"RTN","MAGJUPD1",48,0)
 S UPDFLAG=$P(PARAMS,U),RADFN=$P(PARAMS,U,2),RADTI=$P(PARAMS,U,3),RACNI=$P(PARAMS,U,4),RARPT=$P(PARAMS,U,5),UPDPSKEY=+$P(PARAMS,U,6)
"RTN","MAGJUPD1",49,0)
 S REPLY="0^4~Closing case with"_$S(UPDFLAG:"",1:" NO")_" Status Update"
"RTN","MAGJUPD1",50,0)
 S RAPRTSET=0
"RTN","MAGJUPD1",51,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJUPD1",52,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RARPT_")" G STATUSZ
"RTN","MAGJUPD1",53,0)
 D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJUPD1",54,0)
 I 'MAGRET S REPLY="0^4~Current Case Not Accessible for Updating" G STATUSZ
"RTN","MAGJUPD1",55,0)
   ; 1  RADFN   RADTI    RACNI   RANME   RASSN    <--Contents of RADATA,
"RTN","MAGJUPD1",56,0)
   ; 6  RADATE  RADTE    RACN    RAPRC   RARPT         from GETEXAM
"RTN","MAGJUPD1",57,0)
   ;11  RAST    DAYCASE  RAELOC  RASTP   RASTORD
"RTN","MAGJUPD1",58,0)
   ;16  RADTPRT
"RTN","MAGJUPD1",59,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1))
"RTN","MAGJUPD1",60,0)
 S RAEXT=$P(RADATA,U,12),RACNE=$P(RAEXT,"-",2),RADTE=$P(RADATA,U,7)
"RTN","MAGJUPD1",61,0)
 S RAINT=RADTI_"-"_RACNI
"RTN","MAGJUPD1",62,0)
 D CLOSE(.RSL,RADFN_U_RADTI_U_RACNI_U_U_1,.LOGDATA) ; unlock the case
"RTN","MAGJUPD1",63,0)
 ; proceed only if case was locked by this user
"RTN","MAGJUPD1",64,0)
 ;   if it was not Locked, then do NOT update PS, Key Images
"RTN","MAGJUPD1",65,0)
 I 'RSL S REPLY=RSL,UPDPSKEY=0 G STATUSZ
"RTN","MAGJUPD1",66,0)
 I 'UPDFLAG S REPLY="0^1~Case #"_RAEXT_" Closed; No Status Update performed" G STATUSZ
"RTN","MAGJUPD1",67,0)
 S RIST=$P(RSL,U,2) ; CLOSE reports back the type of radiologist
"RTN","MAGJUPD1",68,0)
 ; now we know this user had locked the case, & wants to do Status update
"RTN","MAGJUPD1",69,0)
 D EN2^RAUTL20(.MAGPSET)  ; get info re rad PrintSet
"RTN","MAGJUPD1",70,0)
 ;
"RTN","MAGJUPD1",71,0)
 ; IF exam is not "Examined", and not "Cancelled" and past "Waiting"
"RTN","MAGJUPD1",72,0)
 ;    then assume it has already been updated via another pathway,
"RTN","MAGJUPD1",73,0)
 ;    either as printset member (via code at tag PRTSET, below),
"RTN","MAGJUPD1",74,0)
 ;    or from a voice-dictation or terminal session by the radiologist
"RTN","MAGJUPD1",75,0)
 ;    For these cases, no warning msg is sent
"RTN","MAGJUPD1",76,0)
 ; Else, update not allowed, so give warning msg
"RTN","MAGJUPD1",77,0)
 ; Note that when the Exam was OPENed, it must have had status "Examined"
"RTN","MAGJUPD1",78,0)
 I '$D(^RA(72,"AVC","E",$P(RADATA,U,11))) D  G STATUSX:(+$P(REPLY,U,2)=1),STATUSZ  ; Current Status MUST be "Examined" Category
"RTN","MAGJUPD1",79,0)
 . I $P(RADATA,U,15)>2 D  ; assume update has otherwise been done, eg voice dictation or manual entry in Vista
"RTN","MAGJUPD1",80,0)
 .. S RACNILST=RACNI,RASTI=$P(RADATA,U,11) ; need for code at tag statusx
"RTN","MAGJUPD1",81,0)
 .. I RAPRTSET S REPLY="0^1~Printset Exams with Case #"_RAEXT_" have been updated"
"RTN","MAGJUPD1",82,0)
 .. E  S REPLY="0^1~No Update done for Case #"_RAEXT_"--current status is "_$P(RADATA,U,14)
"RTN","MAGJUPD1",83,0)
 . E  S REPLY="0^3~No Update Allowed for Case #"_RAEXT_"--current status is "_$P(RADATA,U,14)
"RTN","MAGJUPD1",84,0)
 ;
"RTN","MAGJUPD1",85,0)
 ; now ready to update exam status
"RTN","MAGJUPD1",86,0)
 S RAMDV=$P(^RADPT(RADFN,"DT",RADTI,0),U,3)
"RTN","MAGJUPD1",87,0)
 S RAMDV=$TR(^RA(79,RAMDV,.1),"YyNn","1100")
"RTN","MAGJUPD1",88,0)
 ;
"RTN","MAGJUPD1",89,0)
 ; Update interpreting radiologist field in Rad file
"RTN","MAGJUPD1",90,0)
 I RIST D  I RACNILST="" G STATUSZ
"RTN","MAGJUPD1",91,0)
 . N SAVRACNI,RTN S RACNILST=""
"RTN","MAGJUPD1",92,0)
PRTSET . ;  if exam is part of Rad Print-Set, then update all exams of printset
"RTN","MAGJUPD1",93,0)
 . I RAPRTSET D
"RTN","MAGJUPD1",94,0)
 .. S ACNLST="",SAVRACNI=RACNI,X=0
"RTN","MAGJUPD1",95,0)
 .. F I=0:1 S X=$O(MAGPSET(X)) Q:'X  S RACNILST=RACNILST_$S(I:U,1:"")_X S:RACNE'=+MAGPSET(X) ACNLST=ACNLST_", "_"-"_+MAGPSET(X)
"RTN","MAGJUPD1",96,0)
 . E  S RACNILST=RACNI
"RTN","MAGJUPD1",97,0)
 . F I=1:1:$L(RACNILST,U) S RACNI=$P(RACNILST,U,I) I RACNI D  I RACNILST="" Q
"RTN","MAGJUPD1",98,0)
 .. S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","MAGJUPD1",99,0)
 .. D STUFPHY^RARIC1(DUZ,RIST,.RTN)
"RTN","MAGJUPD1",100,0)
 .. I 'RTN S REPLY="0^4~Unable to update Interpreting Radiologist: "_RTN_"." S RACNILST=""
"RTN","MAGJUPD1",101,0)
 . I RAPRTSET S RACNI=SAVRACNI
"RTN","MAGJUPD1",102,0)
 S RAONLINE=1,ZTQUEUED=1 D UP1^RAUTL1   ; Suppress msgs, do Status update
"RTN","MAGJUPD1",103,0)
 ;<*> K RAONLINE,ZTQUEUED D UP1^RAUTL1 ; <*> Testing Only: ENABLE msgs
"RTN","MAGJUPD1",104,0)
 I RAOR<0 S REPLY="0^3~Exam Status for Case #"_RAEXT_" CANNOT be updated; current status remains: "_$S($G(RASN)]"":RASN,1:"Unknown")
"RTN","MAGJUPD1",105,0)
 I  G STATUSZ
"RTN","MAGJUPD1",106,0)
 ;
"RTN","MAGJUPD1",107,0)
 S REPLY="0^1~For Case #"_$S($G(ACNLST)]"":"s ",1:"")_RAEXT_$S(RAPRTSET:ACNLST,1:"")_", Exam Status updated to "_RASN
"RTN","MAGJUPD1",108,0)
 ;
"RTN","MAGJUPD1",109,0)
STATUSX ; Newly Interpreted exam:
"RTN","MAGJUPD1",110,0)
 ; Log the Interpreted event
"RTN","MAGJUPD1",111,0)
 D LOG^MAGJUTL3("VR-INT",LOGDATA)
"RTN","MAGJUPD1",112,0)
 ; Update Recent Exams List
"RTN","MAGJUPD1",113,0)
 G STATUSZ:'$P(^MAG(2006.69,1,0),U,8)  ; no bkgnd compile enabled
"RTN","MAGJUPD1",114,0)
 L +^XTMP("MAGJ2","RECENT"):5
"RTN","MAGJUPD1",115,0)
 E  G STATUSZ
"RTN","MAGJUPD1",116,0)
 N INDX F I=1:1:$L(RACNILST,U) S RACNI=$P(RACNILST,U,I) I RACNI D
"RTN","MAGJUPD1",117,0)
 . S INDX=+$G(^XTMP("MAGJ2","RECENT",0))+1,$P(^(0),U)=INDX,^(INDX)=RADFN_U_RADTI_U_RACNI_U_RASTI
"RTN","MAGJUPD1",118,0)
 L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJUPD1",119,0)
STATUSZ ;
"RTN","MAGJUPD1",120,0)
 ; store PS, Key Image data
"RTN","MAGJUPD1",121,0)
 I UPDPSKEY,($D(DATA)>9) D
"RTN","MAGJUPD1",122,0)
 . D SAVKPS^MAGJUPD2(RARPT,UPDPSKEY,.DATA,.X)
"RTN","MAGJUPD1",123,0)
 . S REPLY=REPLY_$P(X,"~",2,99)
"RTN","MAGJUPD1",124,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUPD1",125,0)
 K ^TMP($J,"MAGRAEX"),^("RAE1")
"RTN","MAGJUPD1",126,0)
 Q
"RTN","MAGJUPD1",127,0)
 ;
"RTN","MAGJUPD1",128,0)
CLOSE(RSL,PARAMS,LOGDATA) ; Close/unlock a case
"RTN","MAGJUPD1",129,0)
 ; Input: PARAMS = DFN ^ DTI ^ CNI ^ RPT ^ UPDFLAG
"RTN","MAGJUPD1",130,0)
 ;
"RTN","MAGJUPD1",131,0)
 ;  DFN,DTI,CNI,RPT = pointers to Rad File for the exam
"RTN","MAGJUPD1",132,0)
 ;   UPDFLAG = 1/0 -- 1 indicates CLOSE was called from subroutine
"RTN","MAGJUPD1",133,0)
 ;                    STATUS, above (which has already called GETEXAM)
"RTN","MAGJUPD1",134,0)
 ;    RSL = return result of the Close
"RTN","MAGJUPD1",135,0)
 ; This subroutine may be called directly (to close a case without
"RTN","MAGJUPD1",136,0)
 ; doing a status update), or is called from tag STATUS, above, when
"RTN","MAGJUPD1",137,0)
 ; also doing a status update
"RTN","MAGJUPD1",138,0)
 ;
"RTN","MAGJUPD1",139,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJUPD1"
"RTN","MAGJUPD1",140,0)
 N RPT,DFN,DTI,CNI,MAGRET,REPLY,RARPT,UPDFLAG,RIST,DAYCASE,NLOCKS,MYLOCK
"RTN","MAGJUPD1",141,0)
 S DFN=$P(PARAMS,U),DTI=$P(PARAMS,U,2),CNI=$P(PARAMS,U,3),RPT=$P(PARAMS,U,4),UPDFLAG=$P(PARAMS,U,5)
"RTN","MAGJUPD1",142,0)
 S LOGDATA=""
"RTN","MAGJUPD1",143,0)
 I $P($G(^MAG(2006.69,1,0)),U,4)
"RTN","MAGJUPD1",144,0)
 E  S REPLY=$S(UPDFLAG:"0^3~Updates not allowed at this site--no action taken",1:"") G CLOSEZ   ;   Status Update NOT Enabled
"RTN","MAGJUPD1",145,0)
 S RIST=+MAGJOB("USER",1) I RIST
"RTN","MAGJUPD1",146,0)
 E  S REPLY=$S(UPDFLAG:"0^3~Update allowed only by a radiologist--no action taken",1:"") G CLOSEZ  ; need only unlock a radiologist
"RTN","MAGJUPD1",147,0)
 I DFN,DTI,CNI
"RTN","MAGJUPD1",148,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RPT_")--no action taken" G CLOSEZ
"RTN","MAGJUPD1",149,0)
 ;
"RTN","MAGJUPD1",150,0)
 I 'UPDFLAG N RADATA D  I 'MAGRET G CLOSEZ
"RTN","MAGJUPD1",151,0)
 . D GETEXAM2^MAGJUTL1(DFN,DTI,CNI,0,.MAGRET)
"RTN","MAGJUPD1",152,0)
 . I 'MAGRET S REPLY="0^4~No Current Case accessible to close--no action taken"
"RTN","MAGJUPD1",153,0)
 . E  S RADATA=$G(^TMP($J,"MAGRAEX",1,1))
"RTN","MAGJUPD1",154,0)
 S RARPT=$P(RADATA,U,10),DAYCASE=$P(RADATA,U,12)
"RTN","MAGJUPD1",155,0)
 I RARPT,DAYCASE
"RTN","MAGJUPD1",156,0)
 E  S REPLY="0^4~Current Case not accessible to close--no action taken" G CLOSEZ
"RTN","MAGJUPD1",157,0)
 ;
"RTN","MAGJUPD1",158,0)
 D LOCKACT^MAGJEX1A(RARPT,DAYCASE,101,,.MYLOCK)
"RTN","MAGJUPD1",159,0)
 S LOGDATA=$P(MYLOCK(1),"|",2)
"RTN","MAGJUPD1",160,0)
 I 'MYLOCK(1) S X=$P(MYLOCK(1),U,4) D  S LOGDATA="" G CLOSEZ
"RTN","MAGJUPD1",161,0)
 . I UPDFLAG S REPLY="0^1~Case #"_DAYCASE_$S(X]"":" locked by "_X,1:" not locked by "_$P(MAGJOB("USER",1),U,2))_"--No Status update performed"
"RTN","MAGJUPD1",162,0)
 . E  S REPLY="0^1~ "  ; case wasn't opened by this R'ist; nothing to do
"RTN","MAGJUPD1",163,0)
 ;
"RTN","MAGJUPD1",164,0)
 I UPDFLAG S REPLY=1_U_RIST
"RTN","MAGJUPD1",165,0)
 E  S REPLY="0^1~Case #"_DAYCASE_$S(+MYLOCK(1):" unlocked",+MYLOCK(2):" reserve cancelled",1:" closed")_"--No Status Update performed."
"RTN","MAGJUPD1",166,0)
CLOSEZ S RSL=REPLY
"RTN","MAGJUPD1",167,0)
 Q
"RTN","MAGJUPD1",168,0)
 ;
"RTN","MAGJUPD1",169,0)
END Q  ;
"RTN","MAGJUPD2")
0^8^B50382379
"RTN","MAGJUPD2",1,0)
MAGJUPD2 ;WIRMFO/JHC VistaRad RPCs-Update PS & KEY Img ; 14 July 2004  10:05 AM
"RTN","MAGJUPD2",2,0)
 ;;3.0;IMAGING;**18,76**;Jun 22, 2007;Build 19
"RTN","MAGJUPD2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUPD2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUPD2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUPD2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUPD2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUPD2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUPD2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUPD2",11,0)
 ;; |                                                               |
"RTN","MAGJUPD2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUPD2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUPD2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUPD2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUPD2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUPD2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD2",18,0)
 ;;
"RTN","MAGJUPD2",19,0)
 Q
"RTN","MAGJUPD2",20,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR
"RTN","MAGJUPD2",21,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJUPD2",22,0)
 Q:$Q 1  Q
"RTN","MAGJUPD2",23,0)
 ;
"RTN","MAGJUPD2",24,0)
SAVKPS(RARPT,INTERPFL,DATA,REPLY) ;  Save study data: Key/Interpretation Images & Pres. State
"RTN","MAGJUPD2",25,0)
 ; RARPT--exam pointer
"RTN","MAGJUPD2",26,0)
 ; INTERPFL--1/0; 1=This is associated with a Rad Interpretation; Optional
"RTN","MAGJUPD2",27,0)
 ; DATA--array of input data; see structure at end of routine
"RTN","MAGJUPD2",28,0)
 ; REPLY--return string
"RTN","MAGJUPD2",29,0)
 N PSTRAK,IDATA,IMGCT,PSTOT,PSLINCT,PSKILCT,KEYCT,INTCT,STUDY,LINE,NEWIMG,NEWPS
"RTN","MAGJUPD2",30,0)
 N IMGREF,IMGIEN,PSIEN,SAVOP,STIEN,TYPE,IMG,ICT,NEWIMG,INITSTDY,SEQNUM
"RTN","MAGJUPD2",31,0)
 S INTERPFL=+$G(INTERPFL)
"RTN","MAGJUPD2",32,0)
 S NEWIMG=0,NEWPS=0,IMGIEN="",PSIEN="",SEQNUM=0
"RTN","MAGJUPD2",33,0)
 S (IMGCT,PSTOT,PSLINCT,KEYCT,INTCT,PSKILCT)=0
"RTN","MAGJUPD2",34,0)
 S IMGREF="",SAVOP="NOOP"
"RTN","MAGJUPD2",35,0)
 I '$D(TIMESTMP) N TIMESTMP S TIMESTMP=$$NOW^XLFDT()
"RTN","MAGJUPD2",36,0)
 ; 1st, process input in DATA
"RTN","MAGJUPD2",37,0)
 S IDATA=""
"RTN","MAGJUPD2",38,0)
 F  S IDATA=$O(DATA(IDATA)) Q:IDATA=""  S LINE=DATA(IDATA) I LINE]"" D
"RTN","MAGJUPD2",39,0)
 . I LINE="*IMAGE" S NEWIMG=1 Q
"RTN","MAGJUPD2",40,0)
 . I LINE="*PS" S NEWPS=1 Q
"RTN","MAGJUPD2",41,0)
 . I $E(LINE,1,4)="*END" S (NEWIMG,NEWPS)=0 Q
"RTN","MAGJUPD2",42,0)
 . I NEWIMG D IMGINIT(LINE) S NEWIMG=0 Q  ; Init storage for this Image
"RTN","MAGJUPD2",43,0)
 . I NEWPS D PSINIT(LINE) S NEWPS=0 Q  ; Init storage for a PS
"RTN","MAGJUPD2",44,0)
 . D @(SAVOP_"(LINE)")
"RTN","MAGJUPD2",45,0)
 ; Now update the Study node info
"RTN","MAGJUPD2",46,0)
 S INITSTDY=$S(INTERPFL:"INIT_STUDY",1:"")
"RTN","MAGJUPD2",47,0)
 S STIEN=$$STUDYID("",RARPT,1,INITSTDY)
"RTN","MAGJUPD2",48,0)
 I $D(PSTRAK) S IMG="" D  ; Update key imgs in Study node
"RTN","MAGJUPD2",49,0)
 . F  S IMG=$O(PSTRAK(IMG)) Q:'IMG  S NEWIMG=1,TYPE="" D
"RTN","MAGJUPD2",50,0)
 . . F  S TYPE=$O(PSTRAK(IMG,TYPE)) Q:TYPE=""  D
"RTN","MAGJUPD2",51,0)
 . . . F ICT=1:1:PSTRAK(IMG,TYPE,0) D SAVKIMG(IMG,PSTRAK(IMG,TYPE,ICT),TYPE,NEWIMG) S NEWIMG=0
"RTN","MAGJUPD2",52,0)
SAVKPSZ ;
"RTN","MAGJUPD2",53,0)
 I IMGCT!PSTOT!PSLINCT!KEYCT!INTCT S REPLY="1~Saved: "_KEYCT_" Key Image"_$S(KEYCT-1:"s",1:"")_"; "_INTCT_" Interp Image"_$S(INTCT-1:"s",1:"")_"; "
"RTN","MAGJUPD2",54,0)
 I  S REPLY=REPLY_PSLINCT_" PS line"_$S(PSLINCT-1:"s",1:"")_" for "_PSTOT_" PS"_$S(PSTOT-1:"s",1:"")_" for "_IMGCT_" Image"_$S(IMGCT-1:"s.",1:".")
"RTN","MAGJUPD2",55,0)
 I  S:PSKILCT REPLY=REPLY_"  Deleted: "_PSKILCT_" PS record"_$S(PSKILCT-1:"s",1:"")_"."
"RTN","MAGJUPD2",56,0)
 E  I PSKILCT S REPLY="1~Deleted: "_PSKILCT_" PS record"_$S(PSKILCT-1:"s",1:"")_"."
"RTN","MAGJUPD2",57,0)
 E  S REPLY="0~No Key Image/PS data was stored or deleted."
"RTN","MAGJUPD2",58,0)
 Q
"RTN","MAGJUPD2",59,0)
 ;
"RTN","MAGJUPD2",60,0)
NOOP(X) Q  ; do nothing/ skip erroneous input
"RTN","MAGJUPD2",61,0)
 ;
"RTN","MAGJUPD2",62,0)
IMGINIT(LINE) ; Init storage space for an image ; inits some vars for the SAVE loop
"RTN","MAGJUPD2",63,0)
 N IEN
"RTN","MAGJUPD2",64,0)
 S IMGIEN="",IMGREF=""
"RTN","MAGJUPD2",65,0)
 S IEN=$P(LINE,U)
"RTN","MAGJUPD2",66,0)
 I IEN,$D(^MAG(2005,IEN,0)),'$D(^(1))
"RTN","MAGJUPD2",67,0)
 E  G IMGINITZ
"RTN","MAGJUPD2",68,0)
 S IMGIEN=IEN
"RTN","MAGJUPD2",69,0)
 S IMGREF=$NA(^MAG(2005,IMGIEN)) ; indirect ref used in psinit & savps
"RTN","MAGJUPD2",70,0)
 S IMGCT=IMGCT+1
"RTN","MAGJUPD2",71,0)
IMGINITZ Q
"RTN","MAGJUPD2",72,0)
 ;
"RTN","MAGJUPD2",73,0)
PSINIT(LINE) ; Init storage space for a Presentation State ; inits some vars for SAVE loop
"RTN","MAGJUPD2",74,0)
 ; input = PS_UID ^ UID Type (KEY, INT) ^ "DELETE"
"RTN","MAGJUPD2",75,0)
 ; if peice 3 ="DELETE" then the PS data is deleted
"RTN","MAGJUPD2",76,0)
 N IEN,UID,TYPE,DELETE
"RTN","MAGJUPD2",77,0)
 S UID=$P(LINE,U),X=$P(LINE,U,2),DELETE=($P(LINE,U,3)="DELETE"),TYPE=$S(X="KEY":"K",X="INTERP":"I",1:"")
"RTN","MAGJUPD2",78,0)
 I UID="" G PSINITZ
"RTN","MAGJUPD2",79,0)
 I INTERPFL,(TYPE'="K"),(TYPE'="U") S TYPE="I" ; just in case...
"RTN","MAGJUPD2",80,0)
 S IEN=$O(@IMGREF@(210,"B",UID,""))
"RTN","MAGJUPD2",81,0)
 L +@IMGREF@(210,0):5
"RTN","MAGJUPD2",82,0)
 E  Q
"RTN","MAGJUPD2",83,0)
 I 'IEN D  ; Allocate node
"RTN","MAGJUPD2",84,0)
 . S X=$G(@IMGREF@(210,0)) I X="" S X="^2005.05A^^",^(0)=X
"RTN","MAGJUPD2",85,0)
 . S IEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=IEN,$P(X,U,4)=T
"RTN","MAGJUPD2",86,0)
 . S @IMGREF@(210,0)=X,@IMGREF@(210,"B",UID,IEN)=""
"RTN","MAGJUPD2",87,0)
 S PSIEN=IEN
"RTN","MAGJUPD2",88,0)
 I DELETE,PSIEN D  ; delete this PS
"RTN","MAGJUPD2",89,0)
 . S PSKILCT=PSKILCT+1
"RTN","MAGJUPD2",90,0)
 . K @IMGREF@(210,PSIEN),@IMGREF@(210,"B",UID,PSIEN)
"RTN","MAGJUPD2",91,0)
 . S T=$O(@IMGREF@(210,9999),-1)
"RTN","MAGJUPD2",92,0)
 . I 'T K @IMGREF@(210) Q  ; no more PSs!
"RTN","MAGJUPD2",93,0)
 . N XD S XD=$G(@IMGREF@(210,0))
"RTN","MAGJUPD2",94,0)
 . S $P(XD,U,3)=T,T=$P(XD,U,4) S:T T=T-1 S $P(XD,U,4)=T
"RTN","MAGJUPD2",95,0)
 . S @IMGREF@(210,0)=XD
"RTN","MAGJUPD2",96,0)
 E  D  ; init PS node for storage; PSTRAK keeps data for later update to STUDY file
"RTN","MAGJUPD2",97,0)
 . S @IMGREF@(210,PSIEN,0)=UID_U_TYPE_U_DUZ_U_TIMESTMP
"RTN","MAGJUPD2",98,0)
 . I "KI"[TYPE S SEQNUM=SEQNUM+1,T=$G(PSTRAK(IMGIEN,TYPE,0))+1,PSTRAK(IMGIEN,TYPE,0)=T,PSTRAK(IMGIEN,TYPE,T)=UID_U_SEQNUM
"RTN","MAGJUPD2",99,0)
 . K @IMGREF@(210,PSIEN,1) ; init Data & Keys
"RTN","MAGJUPD2",100,0)
 . S @IMGREF@(210,PSIEN,1,0)="^2005.51^0_U_0"
"RTN","MAGJUPD2",101,0)
 L -@IMGREF@(210,0)
"RTN","MAGJUPD2",102,0)
 S SAVOP="SAVPS" ; indirect label reference for use in SAVE loop
"RTN","MAGJUPD2",103,0)
 I DELETE S SAVOP="NOOP"
"RTN","MAGJUPD2",104,0)
 S PSTOT=PSTOT+1-DELETE
"RTN","MAGJUPD2",105,0)
PSINITZ Q
"RTN","MAGJUPD2",106,0)
 ;
"RTN","MAGJUPD2",107,0)
SAVPS(LINE) ; Save a line of PS data
"RTN","MAGJUPD2",108,0)
 ; input = line of free-text data
"RTN","MAGJUPD2",109,0)
 N PSCT,PSCTRL
"RTN","MAGJUPD2",110,0)
 L +(@IMGREF@(210,PSIEN))
"RTN","MAGJUPD2",111,0)
 S PSCTRL=$G(@IMGREF@(210,PSIEN,1,0))
"RTN","MAGJUPD2",112,0)
 S PSCT=+$P(PSCTRL,U,4)+1
"RTN","MAGJUPD2",113,0)
 S @IMGREF@(210,PSIEN,1,PSCT,0)=LINE
"RTN","MAGJUPD2",114,0)
 S $P(PSCTRL,U,3,4)=PSCT_U_PSCT
"RTN","MAGJUPD2",115,0)
 S @IMGREF@(210,PSIEN,1,0)=PSCTRL
"RTN","MAGJUPD2",116,0)
 L -(@IMGREF@(210,PSIEN))
"RTN","MAGJUPD2",117,0)
 S PSLINCT=PSLINCT+1
"RTN","MAGJUPD2",118,0)
 Q
"RTN","MAGJUPD2",119,0)
 ;
"RTN","MAGJUPD2",120,0)
SAVKIMG(IMGIEN,UIDSEQ,TYPE,NEWIMG) ; store a Key image & Interp images w/ PS refs in study node
"RTN","MAGJUPD2",121,0)
 ;
"RTN","MAGJUPD2",122,0)
 N STIEN,KIEN,STUDYREF,UID,SEQNUM
"RTN","MAGJUPD2",123,0)
 I 'IMGIEN G SAVKIMGZ
"RTN","MAGJUPD2",124,0)
 S STIEN=$$STUDYID(IMGIEN,"",0)
"RTN","MAGJUPD2",125,0)
 I 'STIEN G SAVKIMGZ ; should never happen
"RTN","MAGJUPD2",126,0)
 S STUDYREF=$NA(^MAG(2005.001,STIEN))
"RTN","MAGJUPD2",127,0)
 S UID=$P(UIDSEQ,U),SEQNUM=$P(UIDSEQ,U,2)
"RTN","MAGJUPD2",128,0)
 S KIEN=$O(@STUDYREF@(1,"B",IMGIEN,""))
"RTN","MAGJUPD2",129,0)
 I 'KIEN D
"RTN","MAGJUPD2",130,0)
 . L +@STUDYREF@(1,0)
"RTN","MAGJUPD2",131,0)
 . S X=$G(@STUDYREF@(1,0)) I X="" S X="^2005.031P^^",^(0)=X
"RTN","MAGJUPD2",132,0)
 . S KIEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=KIEN,$P(X,U,4)=T
"RTN","MAGJUPD2",133,0)
 . S @STUDYREF@(1,0)=X,@STUDYREF@(1,"B",IMGIEN,KIEN)=""
"RTN","MAGJUPD2",134,0)
 . L -@STUDYREF@(1,0)
"RTN","MAGJUPD2",135,0)
 E  D
"RTN","MAGJUPD2",136,0)
 . I 'NEWIMG Q
"RTN","MAGJUPD2",137,0)
 . K @STUDYREF@(1,KIEN,1) ; init ps data if updating existing img
"RTN","MAGJUPD2",138,0)
 . S @STUDYREF@(1,KIEN,1,0)="^2005.311^0_U_0"
"RTN","MAGJUPD2",139,0)
 S $P(@STUDYREF@(1,KIEN,0),U)=IMGIEN
"RTN","MAGJUPD2",140,0)
 ; store the PS UID
"RTN","MAGJUPD2",141,0)
 I UID]"" D
"RTN","MAGJUPD2",142,0)
 . N IEN S IEN=$O(@STUDYREF@(1,KIEN,1,"B",UID,""))
"RTN","MAGJUPD2",143,0)
 . I 'IEN D
"RTN","MAGJUPD2",144,0)
 . . L +@STUDYREF@(1,KIEN,1,0)
"RTN","MAGJUPD2",145,0)
 . . S X=$G(@STUDYREF@(1,KIEN,1,0)) I X="" S X="^2005.311^^",^(0)=X
"RTN","MAGJUPD2",146,0)
 . . S IEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=IEN,$P(X,U,4)=T
"RTN","MAGJUPD2",147,0)
 . . S @STUDYREF@(1,KIEN,1,0)=X,@STUDYREF@(1,KIEN,1,"B",UID,IEN)=""
"RTN","MAGJUPD2",148,0)
 . . L -@STUDYREF@(1,KIEN,1,0)
"RTN","MAGJUPD2",149,0)
 . S @STUDYREF@(1,KIEN,1,IEN,0)=UID_U_TYPE_U_SEQNUM
"RTN","MAGJUPD2",150,0)
 S KEYCT=KEYCT+(TYPE="K"),INTCT=INTCT+(TYPE="I")
"RTN","MAGJUPD2",151,0)
SAVKIMGZ Q
"RTN","MAGJUPD2",152,0)
 ;
"RTN","MAGJUPD2",153,0)
STUDYID(IEN,RARPT,READONLY,INITSTDY) ; return Study_IEN for input ImgIEN or RARPT
"RTN","MAGJUPD2",154,0)
 ; initialize Study node if INITSTDY is indicated (optional)
"RTN","MAGJUPD2",155,0)
 ; Either IEN or RARPT must be supplied; if both supplied, only RARPT is used
"RTN","MAGJUPD2",156,0)
 ; if READONLY is false, then create "STUDY" node if undefined
"RTN","MAGJUPD2",157,0)
 ; <*> Note: this routine is hard-coded for RADIOLOGY image data only (Parent file=74)
"RTN","MAGJUPD2",158,0)
 N STIEN,X,T,STDYINIT
"RTN","MAGJUPD2",159,0)
 S STIEN=""  ; init return value
"RTN","MAGJUPD2",160,0)
 S IEN=$G(IEN),RARPT=$G(RARPT)
"RTN","MAGJUPD2",161,0)
 S:'$D(READONLY) READONLY=1
"RTN","MAGJUPD2",162,0)
 S INITSTDY=$G(INITSTDY)
"RTN","MAGJUPD2",163,0)
 I IEN,'RARPT S RARPT=$$GETRPT(IEN)
"RTN","MAGJUPD2",164,0)
 I 'RARPT G STUDYIDZ
"RTN","MAGJUPD2",165,0)
 I $D(^MAG(2005.001,"ASTUDY",74,RARPT)) S STIEN=$O(^(RARPT,"")) D
"RTN","MAGJUPD2",166,0)
 . I INITSTDY="INIT_STUDY" K ^MAG(2005.001,STIEN,1) ; init for Key/Interp PS updates (full replacement)
"RTN","MAGJUPD2",167,0)
 E  D:'READONLY  ; create Study structure
"RTN","MAGJUPD2",168,0)
 . L +^MAG(2005.001,0)
"RTN","MAGJUPD2",169,0)
 . S X=^MAG(2005.001,0),STIEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=STIEN,$P(X,U,4)=T,^(0)=X
"RTN","MAGJUPD2",170,0)
 . L -^MAG(2005.001,0)
"RTN","MAGJUPD2",171,0)
 . S ^MAG(2005.001,STIEN,0)=RARPT_U_74,^MAG(2005.001,"ASTUDY",74,RARPT,STIEN)="",^MAG(2005.001,"B",RARPT,STIEN)=""
"RTN","MAGJUPD2",172,0)
 ;
"RTN","MAGJUPD2",173,0)
STUDYIDZ Q:$Q STIEN Q
"RTN","MAGJUPD2",174,0)
 ;
"RTN","MAGJUPD2",175,0)
GETRPT(IEN) ; return rarpt for input imgien
"RTN","MAGJUPD2",176,0)
 N IENGRP,X,RARPT
"RTN","MAGJUPD2",177,0)
 S RARPT=""
"RTN","MAGJUPD2",178,0)
 I IEN D
"RTN","MAGJUPD2",179,0)
 . I $D(^MAG(2005,IEN,1)) S IENGRP=IEN
"RTN","MAGJUPD2",180,0)
 . E  S IENGRP=$P(^MAG(2005,IEN,0),U,10)
"RTN","MAGJUPD2",181,0)
 . I IENGRP S X=$G(^MAG(2005,IENGRP,2)) I $P(X,U,6)=74 S RARPT=$P(X,U,7)
"RTN","MAGJUPD2",182,0)
 . I RARPT,$D(^RARPT(RARPT,2005))
"RTN","MAGJUPD2",183,0)
 . E  S RARPT=""  ; no Rad report node!
"RTN","MAGJUPD2",184,0)
 Q:$Q RARPT Q
"RTN","MAGJUPD2",185,0)
 ;
"RTN","MAGJUPD2",186,0)
 ;Structure of PS/PSTRAK data In:
"RTN","MAGJUPD2",187,0)
 ; *IMAGE
"RTN","MAGJUPD2",188,0)
 ; IEN^
"RTN","MAGJUPD2",189,0)
 ; *PS
"RTN","MAGJUPD2",190,0)
 ; UID^[KEY/INTERP/USER]
"RTN","MAGJUPD2",191,0)
 ; 1: N Lines of PS data follow
"RTN","MAGJUPD2",192,0)
 ; *END_PS
"RTN","MAGJUPD2",193,0)
 ; *PS
"RTN","MAGJUPD2",194,0)
 ; UID^[KEY/INTERP/USER]
"RTN","MAGJUPD2",195,0)
 ; 1: N Lines of PS data follow
"RTN","MAGJUPD2",196,0)
 ; *END_PS
"RTN","MAGJUPD2",197,0)
 ; *END_IMAGE
"RTN","MAGJUPD2",198,0)
 ; *IMAGE
"RTN","MAGJUPD2",199,0)
 ;  ... etc.
"RTN","MAGJUPD2",200,0)
 ; *END_IMAGE
"RTN","MAGJUPD2",201,0)
 ; *END
"RTN","MAGJUPD2",202,0)
END ;    
"RTN","MAGJUTL1")
0^9^B64551081
"RTN","MAGJUTL1",1,0)
MAGJUTL1 ;WIRMFO/JHC VistARad subroutines for RPC calls ; 29 Jul 2003  10:03 AM
"RTN","MAGJUTL1",2,0)
 ;;3.0;IMAGING;**22,18,65,76**;Jun 22, 2007;Build 19
"RTN","MAGJUTL1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL1",11,0)
 ;; |                                                               |
"RTN","MAGJUTL1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL1",18,0)
 ;;
"RTN","MAGJUTL1",19,0)
 Q
"RTN","MAGJUTL1",20,0)
 ;<*>Notes on possible changes to ^RAO7PC1/1A for fetching rad pkg data:
"RTN","MAGJUTL1",21,0)
 ; 1) Return also: Exam Status IEN, Order Request Urgency, & Pre-Op Date
"RTN","MAGJUTL1",22,0)
 ; 2) Allow to retrieve one specific exam; e.g. modify SETDATA^RAO7PC1A
"RTN","MAGJUTL1",23,0)
 ;    to act as a true subrtn, W/ params for RADFN, RADTI, & RACNI--if
"RTN","MAGJUTL1",24,0)
 ;    passed, then only the one exam would be returned
"RTN","MAGJUTL1",25,0)
 ;
"RTN","MAGJUTL1",26,0)
GETEXAM3(DFN,BEGDT,ENDT,MAGRACNT,MAGRET,MORE,LIMEXAMS) ; Get data for all exams for a
"RTN","MAGJUTL1",27,0)
 ; pt within a date range
"RTN","MAGJUTL1",28,0)
 ; limit to LIMEXAMS entries--note, only PREFETCH & Auto-route Priors use this
"RTN","MAGJUTL1",29,0)
 ; Input:
"RTN","MAGJUTL1",30,0)
 ;      DFN -- Patient DFN
"RTN","MAGJUTL1",31,0)
 ;    BEGDT -- Opt, earliest date desired
"RTN","MAGJUTL1",32,0)
 ;     ENDT -- Opt, latest date desired
"RTN","MAGJUTL1",33,0)
 ; MAGRACNT -- Opt, pass by ref to init counter to ref return data in ^TMP (see GETEXSET)
"RTN","MAGJUTL1",34,0)
 ;    MORE -- Opt, If True, check for additional exams for pt
"RTN","MAGJUTL1",35,0)
 ; LIMEXAMS -- Opt, limit # exams to return
"RTN","MAGJUTL1",36,0)
 ; Return:
"RTN","MAGJUTL1",37,0)
 ; MAGRACNT -- highest counter for return data
"RTN","MAGJUTL1",38,0)
 ;   MAGRET -- 1/0: exam was/not found
"RTN","MAGJUTL1",39,0)
 ;     MORE -- more exams exist for pt on & B4 this date
"RTN","MAGJUTL1",40,0)
 ;     ^TMP -- data returned (see GETEXSET)
"RTN","MAGJUTL1",41,0)
 ;
"RTN","MAGJUTL1",42,0)
 I '$D(DT) N DIQUIET S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL1",43,0)
 S LIMEXAMS=+$G(LIMEXAMS)
"RTN","MAGJUTL1",44,0)
 S:$G(BEGDT)="" BEGDT=2010101 S:$G(ENDT)="" ENDT=DT ; default all dates
"RTN","MAGJUTL1",45,0)
 N MORECHK S MORECHK=+$G(MORE)
"RTN","MAGJUTL1",46,0)
 S MAGRACNT=+$G(MAGRACNT),MAGRET=0,MORE=0  ; Init return data
"RTN","MAGJUTL1",47,0)
 I BEGDT>ENDT S X=ENDT,ENDT=BEGDT,BEGDT=X
"RTN","MAGJUTL1",48,0)
 I '(DFN&BEGDT&ENDT) Q
"RTN","MAGJUTL1",49,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEGDT,ENDT,LIMEXAMS)
"RTN","MAGJUTL1",50,0)
 N EXID,TMP,EX1,EX2 S EXID=0
"RTN","MAGJUTL1",51,0)
 F MAGRET=0:1 S EXID=$O(^TMP($J,"RAE1",DFN,EXID)) Q:'EXID  S TMP($P(EXID,"-"),$P(EXID,"-",2))=EXID
"RTN","MAGJUTL1",52,0)
 S (EX1,EX2)=""
"RTN","MAGJUTL1",53,0)
 F  S EX1=$O(TMP(EX1)) Q:'EX1  F  S EX2=$O(TMP(EX1,EX2)) Q:'EX2  D GETEXSET(DFN,TMP(EX1,EX2),"")
"RTN","MAGJUTL1",54,0)
 K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",55,0)
 I 'MORECHK Q  ; all done; else indicate if pt has more exams
"RTN","MAGJUTL1",56,0)
 N DTI,CNI,STS,DTCHK
"RTN","MAGJUTL1",57,0)
 I 'MAGRET S DTI=9999999.9999-BEGDT,CNI=0 ; no exam found in orig dt range
"RTN","MAGJUTL1",58,0)
 E  S X=^TMP($J,"MAGRAEX",MAGRACNT,1),DTI=$P(X,U,2),CNI=$P(X,U,3) ; last exam processed
"RTN","MAGJUTL1",59,0)
 ; loop thru addl exams til find one that is NOT Cancelled
"RTN","MAGJUTL1",60,0)
MORE1 F  S CNI=$O(^RADPT(DFN,"DT",DTI,"P",CNI)) Q:'CNI  S STS=$P($G(^(CNI,0)),U,3) I STS]"" D  Q:MORE
"RTN","MAGJUTL1",61,0)
 . Q:($P($G(^RA(72,STS,0)),U,3)=0)  ; Canceled--keep looking
"RTN","MAGJUTL1",62,0)
 . S DTCHK=9999999.9999-DTI D EN1^RAO7PC1(DFN,DTCHK,DTCHK,1)  ; verify there is at least one "good" exam for this date (Remedy #200480)
"RTN","MAGJUTL1",63,0)
 . I +$O(^TMP($J,"RAE1",DFN,0)) S MORE=1
"RTN","MAGJUTL1",64,0)
 . K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",65,0)
 I 'MORE S DTI=$O(^RADPT(DFN,"DT",DTI)),CNI=0 G MORE1:DTI
"RTN","MAGJUTL1",66,0)
 I MORE S MORE=9999999.9999-DTI\1
"RTN","MAGJUTL1",67,0)
 Q
"RTN","MAGJUTL1",68,0)
 ;
"RTN","MAGJUTL1",69,0)
GETEXAM2(DFN,DTI,CNI,MAGRACNT,MAGRET) ; Fetch data for one exam
"RTN","MAGJUTL1",70,0)
 ;Input:
"RTN","MAGJUTL1",71,0)
 ; DFN -- Pt DFN
"RTN","MAGJUTL1",72,0)
 ; DTI -- Internal Date pointer to Rad exam
"RTN","MAGJUTL1",73,0)
 ; CNI -- Case pointer to Rad exam
"RTN","MAGJUTL1",74,0)
 ; MAGRACNT -- Opt, pass by ref to init counter for return data in ^TMP (see GETEXSET)
"RTN","MAGJUTL1",75,0)
 ; Return:
"RTN","MAGJUTL1",76,0)
 ; MAGRACNT -- highest counter for return data
"RTN","MAGJUTL1",77,0)
 ;   MAGRET -- 1/0: exam was/not found
"RTN","MAGJUTL1",78,0)
 ;     ^TMP -- data returned (see GETEXSET)
"RTN","MAGJUTL1",79,0)
 ;
"RTN","MAGJUTL1",80,0)
 ; This subroutine calls RAO7PC1A directly to fetch exam data
"RTN","MAGJUTL1",81,0)
 ; which is returned in ^TMP($J,"RAE1",DFN,DTI_"-"_CNI).
"RTN","MAGJUTL1",82,0)
 ; RAO7PC1A currently returns ALL exams filed under one DTI,
"RTN","MAGJUTL1",83,0)
 ; but this subroutine returns the single exam for the input DTI, CNI
"RTN","MAGJUTL1",84,0)
 ;
"RTN","MAGJUTL1",85,0)
 N RADFN,RACNT,RAIBDT,RAEXN,RAXIT  ; Vars input to RAO7PC1A
"RTN","MAGJUTL1",86,0)
 S RADFN=DFN,RACNT=0,RAIBDT=DTI,RAEXN=0,RAXIT=0
"RTN","MAGJUTL1",87,0)
 ; other Vars set by RAO7PC1A:
"RTN","MAGJUTL1",88,0)
 N RABNOR,RACSE,RADIAG,RANO,RAPRC,RAREX,RARPT,RARPTST,RASTNM,RAXAM,RAXID
"RTN","MAGJUTL1",89,0)
 N RABNORMR,RACPT
"RTN","MAGJUTL1",90,0)
 S MAGRACNT=+$G(MAGRACNT)
"RTN","MAGJUTL1",91,0)
 K ^TMP($J,"RAE1") D SETDATA^RAO7PC1A
"RTN","MAGJUTL1",92,0)
 S MAGRET=RACNT Q:'RACNT     ; no exams found
"RTN","MAGJUTL1",93,0)
 D GETEXSET(DFN,DTI_"-"_CNI,.X)
"RTN","MAGJUTL1",94,0)
 I 'X S MAGRET=0   ; no exam for this CNI
"RTN","MAGJUTL1",95,0)
 K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",96,0)
 Q
"RTN","MAGJUTL1",97,0)
 ;
"RTN","MAGJUTL1",98,0)
GETEXSET(RADFN,EXID,MAGRET) ; 
"RTN","MAGJUTL1",99,0)
 ; Used by GETEXAM* subroutines above to set up rad data for vrad
"RTN","MAGJUTL1",100,0)
 ; Input:
"RTN","MAGJUTL1",101,0)
 ;  RADFN -- Pt DFN
"RTN","MAGJUTL1",102,0)
 ;  EXID --- RADTI_"-"_RACNI, pointers to Rad exam
"RTN","MAGJUTL1",103,0)
 ; Output:
"RTN","MAGJUTL1",104,0)
 ;  MAGRET- 1/0: an exam was/was not filed
"RTN","MAGJUTL1",105,0)
 ;  ^TMP($J,"MAGRAEX",MAGRACNT)=Data String (see code at end)
"RTN","MAGJUTL1",106,0)
 ;  MAGRACNT described in above subroutines
"RTN","MAGJUTL1",107,0)
 ;
"RTN","MAGJUTL1",108,0)
 N RACN,RACNI,RADATA,RADATE,RADTE,RADTI,RADTPRT,RAELOC,RANME
"RTN","MAGJUTL1",109,0)
 N RAPRC,RARPT,RASSN,RAST,RASTORD,RASTP,RASTNM,RACPT,IMTYPABB,PROCMOD
"RTN","MAGJUTL1",110,0)
 N DAYCASE,REQLOC,REQLOCN,REQLOCA,REQLOCT,RIST,RIST1,RIST2,COMPLIC
"RTN","MAGJUTL1",111,0)
 N RADIV,RISTISME,REQWARD,RASTCAT,CPTMOD,LRFLAG,MODTXT
"RTN","MAGJUTL1",112,0)
 S MAGRET=0,RADTI=$P(EXID,"-"),RACNI=$P(EXID,"-",2)
"RTN","MAGJUTL1",113,0)
 Q:'(RADTI&RACNI)
"RTN","MAGJUTL1",114,0)
 S RADIV=""
"RTN","MAGJUTL1",115,0)
 S RADATA=$G(^TMP($J,"RAE1",RADFN,EXID))
"RTN","MAGJUTL1",116,0)
 Q:RADATA=""        ;  no exam for this EXID
"RTN","MAGJUTL1",117,0)
 S RARPT=$P(RADATA,U,5)
"RTN","MAGJUTL1",118,0)
 S X=$P(RADATA,U,6),RASTORD=$P(X,"~"),RASTNM=$P(X,"~",2)
"RTN","MAGJUTL1",119,0)
 S X=^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),COMPLIC=$D(^("COMP")),PROCMOD=$D(^("M")),CPTMOD=$D(^("CMOD"))
"RTN","MAGJUTL1",120,0)
 S RAST=$P(X,U,3),REQLOC=$P(X,U,22),RIST1=$P(X,U,12),RIST2=$P(X,U,15),COMPLIC=$P(X,U,16)_"~"_COMPLIC
"RTN","MAGJUTL1",121,0)
 S REQWARD=$P(X,U,6)
"RTN","MAGJUTL1",122,0)
 N CT,MODS,IEN,TT  ; Process Proc/CPT Modifier info
"RTN","MAGJUTL1",123,0)
 S CT=0
"RTN","MAGJUTL1",124,0)
 I PROCMOD D
"RTN","MAGJUTL1",125,0)
 . S IEN=0
"RTN","MAGJUTL1",126,0)
 . F  S IEN=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",IEN)) Q:'IEN  S X=$P($G(^(IEN,0)),U) I X D
"RTN","MAGJUTL1",127,0)
 . . S X=$P($G(^RAMIS(71.2,X,0)),U) Q:X=""  S X=$$TRIM(X)
"RTN","MAGJUTL1",128,0)
 . . S X=$S(X="BILATERAL EXAM":"BILAT",1:X)
"RTN","MAGJUTL1",129,0)
 . . S CT=CT+1,MODS(CT)=X
"RTN","MAGJUTL1",130,0)
 I CPTMOD D
"RTN","MAGJUTL1",131,0)
 . S IEN=0
"RTN","MAGJUTL1",132,0)
 . F  S IEN=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",IEN)) Q:'IEN  S X=$P($G(^(IEN,0)),U) I X D
"RTN","MAGJUTL1",133,0)
 . . S X=$P($$MOD^ICPTMOD(X,"I"),U,3) Q:X=""  S X=$$TRIM(X)
"RTN","MAGJUTL1",134,0)
 . . S X=$S(X="LEFT SIDE":"LEFT",X="RIGHT SIDE":"RIGHT",X="BILATERAL PROCEDURE":"BILAT",1:X)
"RTN","MAGJUTL1",135,0)
 . . S CT=CT+1,MODS(CT)=X
"RTN","MAGJUTL1",136,0)
 S MODTXT="",LRFLAG=0 K TT
"RTN","MAGJUTL1",137,0)
 I CT F I=1:1:CT S X=MODS(I) D
"RTN","MAGJUTL1",138,0)
 . ; eliminate redundant values for L/R/Bilat (TT), & track L/R for prior matching (LRFLAG)
"RTN","MAGJUTL1",139,0)
 . S T=(X="LEFT") I T,$D(TT(1)) Q  ; already got it
"RTN","MAGJUTL1",140,0)
 . I 'T S T=(X="RIGHT") I T S T=2 I T,$D(TT(2)) Q   ; ditto
"RTN","MAGJUTL1",141,0)
 . I 'T S T=(X="BILAT") I T S T=3 I T,$D(TT(3)) Q   ; ditto
"RTN","MAGJUTL1",142,0)
 . I T S TT(T)="",MODTXT=X_$S(MODTXT="":"",1:";")_MODTXT ; force L/R/Bilat to left end of string ..
"RTN","MAGJUTL1",143,0)
 . E  S MODTXT=MODTXT_$S(MODTXT="":"",1:";")_X  ; .. so is easier to spot in displayed column
"RTN","MAGJUTL1",144,0)
 . I 'LRFLAG S:T LRFLAG=T
"RTN","MAGJUTL1",145,0)
 . E  I T  S:(LRFLAG'=T) LRFLAG=3 ; L&R or Bilat--ignore result
"RTN","MAGJUTL1",146,0)
 S LRFLAG=$S(LRFLAG=1:"L",LRFLAG=2:"R",1:"") ; Left/Right indicator
"RTN","MAGJUTL1",147,0)
 S RADIV=$P(^RADPT(RADFN,"DT",RADTI,0),U,3)
"RTN","MAGJUTL1",148,0)
 K DIC,DR,DA,DIQ
"RTN","MAGJUTL1",149,0)
 I 'REQLOC S (REQLOCN,REQLOCT,REQLOCA)=""
"RTN","MAGJUTL1",150,0)
 E  D
"RTN","MAGJUTL1",151,0)
 . S X=$G(^SC(REQLOC,0)),REQLOCN=$P(X,U),REQLOCA=$P(X,U,2)
"RTN","MAGJUTL1",152,0)
 . S:REQLOCA="" REQLOCA=REQLOCN
"RTN","MAGJUTL1",153,0)
 . S DIC="44",DR="2",DA=REQLOC,DIQ="REQLOCT" D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","MAGJUTL1",154,0)
 . S REQLOCT=REQLOCT(44,REQLOC,2)
"RTN","MAGJUTL1",155,0)
 I REQWARD]"" S DIC="42",DR=".01",DA=REQWARD,DIQ="REQWARD" D EN^DIQ1 K DIC,DR,DA,DIQ S REQWARD=REQWARD(42,REQWARD,.01)
"RTN","MAGJUTL1",156,0)
 S X=$$RIST(RIST1,RIST2),RIST=$P(X,U),RISTISME=$P(X,U,2)
"RTN","MAGJUTL1",157,0)
 S RADTE=9999999.9999-RADTI,(RADTPRT,Y)=RADTE D D^RAUTL S RADATE=Y
"RTN","MAGJUTL1",158,0)
 S RADTPRT=$E(RADTPRT,4,5)_"/"_$E(RADTPRT,6,7)_"/"_$E(RADTPRT,2,3)
"RTN","MAGJUTL1",159,0)
 S RAPRC=$E($P(RADATA,U),1,40),RACN=$P(RADATA,U,2),RAELOC=$P(RADATA,U,7)
"RTN","MAGJUTL1",160,0)
 S IMTYPABB=$P($P(RADATA,U,8),"~"),RACPT=$P(RADATA,U,10)
"RTN","MAGJUTL1",161,0)
 S DAYCASE=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN
"RTN","MAGJUTL1",162,0)
 S RASTP=RASTNM,RASTCAT=""
"RTN","MAGJUTL1",163,0)
 I RAST S RASTCAT=$P($G(^RA(72,RAST,0)),U,9)
"RTN","MAGJUTL1",164,0)
 S RANME=$P(^DPT(RADFN,0),U)
"RTN","MAGJUTL1",165,0)
 S DFN=RADFN D PID^VADPT6 S RASSN=$S(VAERR:"Unknown",1:VA("PID"))
"RTN","MAGJUTL1",166,0)
 K VA("PID"),VA("BID"),VAERR
"RTN","MAGJUTL1",167,0)
 S MAGRACNT=$G(MAGRACNT)+1
"RTN","MAGJUTL1",168,0)
 I MAGRACNT=1 K ^TMP($J,"MAGRAEX")
"RTN","MAGJUTL1",169,0)
 S ^TMP($J,"MAGRAEX",MAGRACNT,1)=RADFN_U_RADTI_U_RACNI_U_$E(RANME,1,30)_U_RASSN_U_RADATE_U_RADTE_U_RACN_U_$E(RAPRC,1,35)_U_RARPT_U_RAST_U_DAYCASE_U_RAELOC_U_RASTP_U_RASTORD_U_RADTPRT_U_RACPT_U_IMTYPABB
"RTN","MAGJUTL1",170,0)
 S ^TMP($J,"MAGRAEX",MAGRACNT,2)=REQLOCA_U_$E(REQLOCN,1,25)_U_RIST_U_COMPLIC_U_RADIV_U_$P($$IMGSIT(RADIV),U,2)_U_RISTISME_U_MODTXT_U_REQLOCT_U_REQWARD_U_RASTCAT_U_LRFLAG
"RTN","MAGJUTL1",171,0)
 S MAGRET=1
"RTN","MAGJUTL1",172,0)
 Q
"RTN","MAGJUTL1",173,0)
 ;
"RTN","MAGJUTL1",174,0)
RIST(RIST1,RIST2) ; return Interp Radiologist info
"RTN","MAGJUTL1",175,0)
 S RIST1=$G(RIST1),RIST2=$G(RIST2)
"RTN","MAGJUTL1",176,0)
 N RIST,RISTISME
"RTN","MAGJUTL1",177,0)
 S (RIST,RISTISME)=""
"RTN","MAGJUTL1",178,0)
 I RIST1!RIST2 D
"RTN","MAGJUTL1",179,0)
 . I RIST1 S RISTISME=RIST1=DUZ S RIST=$$USERINF^MAGJUTL3(RIST1,1)
"RTN","MAGJUTL1",180,0)
 . I RIST2 S:'RISTISME RISTISME=RIST2=DUZ S RIST2=$$USERINF^MAGJUTL3(RIST2,1)
"RTN","MAGJUTL1",181,0)
 . I RIST]"" S RIST=RIST_$S(RIST2]"":"/"_RIST2,1:"")
"RTN","MAGJUTL1",182,0)
 . E  S RIST=RIST2
"RTN","MAGJUTL1",183,0)
 Q RIST_U_RISTISME
"RTN","MAGJUTL1",184,0)
 ;
"RTN","MAGJUTL1",185,0)
IMGSIT(DIV,DFLT) ; Return Imaging Site code for input Division
"RTN","MAGJUTL1",186,0)
 ; From 2006.1:  IEN ^ Site Code ^ Parent_DIV
"RTN","MAGJUTL1",187,0)
 I DIV]"" D
"RTN","MAGJUTL1",188,0)
 . N IEN I $D(^MAG(2006.1,"B",DIV)) S IEN=$O(^(DIV,"")) I IEN
"RTN","MAGJUTL1",189,0)
 . E  I $G(DFLT) S IEN=$O(^MAG(2006.1,0)) ; Dflt to 1st if requested
"RTN","MAGJUTL1",190,0)
 . E  S X="" Q
"RTN","MAGJUTL1",191,0)
 . S X=^MAG(2006.1,IEN,0),X=IEN_U_$P(X,U,9)_U_$P(X,U)
"RTN","MAGJUTL1",192,0)
 Q X
"RTN","MAGJUTL1",193,0)
 ;
"RTN","MAGJUTL1",194,0)
TRIM(X) ; Trim trailing spaces from X
"RTN","MAGJUTL1",195,0)
 I $G(X)]"" D
"RTN","MAGJUTL1",196,0)
 . F I=$L(X):-1:0 I $E(X,I)'=" " Q
"RTN","MAGJUTL1",197,0)
 . I I S X=$E(X,1,I)
"RTN","MAGJUTL1",198,0)
 . E  S X=""
"RTN","MAGJUTL1",199,0)
 Q:$Q X  Q
"RTN","MAGJUTL1",200,0)
 ;
"RTN","MAGJUTL1",201,0)
END Q  ;
"RTN","MAGJUTL2")
0^10^B48913977
"RTN","MAGJUTL2",1,0)
MAGJUTL2 ;WIRMFO/JHC VistRad subroutines for RPC calls[ 2/21/97  10:53 AM ] ; 22 Mar 2001  2:24 PM
"RTN","MAGJUTL2",2,0)
 ;;3.0;IMAGING;**18,65,76**;Jun 22, 2007;Build 19
"RTN","MAGJUTL2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL2",11,0)
 ;; |                                                               |
"RTN","MAGJUTL2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL2",18,0)
 ;;
"RTN","MAGJUTL2",19,0)
 Q
"RTN","MAGJUTL2",20,0)
IMGINFO(RARPT,RET) ; Fetch info from Image File for input RARPT:
"RTN","MAGJUTL2",21,0)
 ; Input: RARPT: Rad Report pointer
"RTN","MAGJUTL2",22,0)
 ;        RET: see below
"RTN","MAGJUTL2",23,0)
 ; RET contents delimited by ^:
"RTN","MAGJUTL2",24,0)
 ;       CT = # of images for case
"RTN","MAGJUTL2",25,0)
 ;      ONL = Image Storage status (Y=On Magnetic disk, N=Jukebox
"RTN","MAGJUTL2",26,0)
 ;             "n/a"  for not available, e.g., film only)
"RTN","MAGJUTL2",27,0)
 ;        note -- if last image in group is Online, considers ALL online
"RTN","MAGJUTL2",28,0)
 ;    MAGDT = Date/Time of Image Capture
"RTN","MAGJUTL2",29,0)
 ;   REMOTE = 1/0 to Indicate images were remotely cached
"RTN","MAGJUTL2",30,0)
 ;  MODALITY= Modality abbrev
"RTN","MAGJUTL2",31,0)
 ;    PLACE = Image storage PLace (ptr to 2006.1 entry)
"RTN","MAGJUTL2",32,0)
 ;    KEY = 1/0 ind. Key Images exist for this exam
"RTN","MAGJUTL2",33,0)
 ; 
"RTN","MAGJUTL2",34,0)
 N IRPT,MAGIEN,MAGIEN2,ONLCHK,NETLOC,STIEN
"RTN","MAGJUTL2",35,0)
 N CT,ONL,MAGDT,REMOTE,MODALITY,PLACE,REMCHK,KEY
"RTN","MAGJUTL2",36,0)
 S CT="",ONL="",MAGDT="",RET="",REMOTE="",MODALITY="",PLACE="",KEY=0 ; init return vars
"RTN","MAGJUTL2",37,0)
 G IMGINFQ:'RARPT G IMGINFQ:'$D(^RARPT(RARPT,2005,0))
"RTN","MAGJUTL2",38,0)
 I 'MAGJOB("P32") D
"RTN","MAGJUTL2",39,0)
 . S STIEN=$$STUDYID^MAGJUPD2("",RARPT,1)
"RTN","MAGJUTL2",40,0)
 . I STIEN S T=$O(^MAG(2005,STIEN,205,0)) I T S KEY=1
"RTN","MAGJUTL2",41,0)
 S IRPT=0 F  S IRPT=$O(^RARPT(RARPT,2005,IRPT)) Q:'IRPT  S MAGIEN=$P(^(IRPT,0),U) D
"RTN","MAGJUTL2",42,0)
 . Q:'$D(^MAG(2005,MAGIEN,0))
"RTN","MAGJUTL2",43,0)
 . I MAGDT="" S MAGDT=$P($G(^MAG(2005,MAGIEN,100)),U,6) S:MAGDT="" MAGDT=$P($G(^(2)),U)
"RTN","MAGJUTL2",44,0)
 . I $O(^MAG(2005,MAGIEN,1,0)) S CT=CT+$P(^(0),U,4),Y=$P(^(0),U,3),MAGIEN2=$P($G(^(Y,0)),U) S:(MAGIEN2]"") ONLCHK=$$ONLCHK(MAGIEN2),REMCHK=$$REMOTE(MAGIEN2) ; last image in group
"RTN","MAGJUTL2",45,0)
 . E  S CT=CT+1,ONLCHK=$$ONLCHK(MAGIEN),REMCHK=$$REMOTE(MAGIEN)
"RTN","MAGJUTL2",46,0)
 . S ONL=$S(ONL="":+ONLCHK,+ONL:+ONLCHK,1:0) ; NOT Online if ANY img is 0
"RTN","MAGJUTL2",47,0)
 . S REMOTE=$S(REMOTE="":REMCHK,+REMOTE:REMCHK,1:0) ; NOT Remote if ANY img is 0
"RTN","MAGJUTL2",48,0)
 . S X=$P(ONLCHK,U,3)
"RTN","MAGJUTL2",49,0)
 . I MODALITY="" S MODALITY=X
"RTN","MAGJUTL2",50,0)
 . E  I MODALITY'[X S MODALITY=MODALITY_","_X
"RTN","MAGJUTL2",51,0)
 . I PLACE="" S PLACE=$P(ONLCHK,U,4)
"RTN","MAGJUTL2",52,0)
IMGINFQ S ONL=$S(+ONL:"Y",ONL="":"n/a",1:"N")
"RTN","MAGJUTL2",53,0)
 S RET=CT_U_ONL_U_MAGDT_U_REMOTE_U_MODALITY_U_PLACE_U_KEY
"RTN","MAGJUTL2",54,0)
 Q
"RTN","MAGJUTL2",55,0)
 ;
"RTN","MAGJUTL2",56,0)
ONLCHK(MAGIEN,USETGA) ;
"RTN","MAGJUTL2",57,0)
 ; Input: MAGIEN: Image pointer
"RTN","MAGJUTL2",58,0)
 ;        USETGA: 1/0 -- if 1, forces return of TGA (not .big) file
"RTN","MAGJUTL2",59,0)
 ;Return:
"RTN","MAGJUTL2",60,0)
 ;   - T/F for Full-Res image on Mag. Disk that is Online
"RTN","MAGJUTL2",61,0)
 ;   - File type (BIG/FULL)
"RTN","MAGJUTL2",62,0)
 ;   - Modality
"RTN","MAGJUTL2",63,0)
 ;   - Place
"RTN","MAGJUTL2",64,0)
 ;   - DFN
"RTN","MAGJUTL2",65,0)
 ;   - File Name IFF this image is stored Off-Line (else null)
"RTN","MAGJUTL2",66,0)
 ;   - USETGA as calculated in the logic below
"RTN","MAGJUTL2",67,0)
 ;   - PROCDT = Img Processing DtTime
"RTN","MAGJUTL2",68,0)
 ;   - ACQSITE = Acquisition site code
"RTN","MAGJUTL2",69,0)
 ;   USETGA is set to False (0) if a low-resolution image (TGA) is
"RTN","MAGJUTL2",70,0)
 ;     requested, but none exists; calling routine would call by ref.
"RTN","MAGJUTL2",71,0)
 ;
"RTN","MAGJUTL2",72,0)
 N BIG,X,NOD,MAG0,MODALITY,RET,PLACE,DFN,FILNAM,MAG2,PROCDT,ACQSITE,MAG100
"RTN","MAGJUTL2",73,0)
 S USETGA=+$G(USETGA) ; Defaults to Full-Resolution image if not defined
"RTN","MAGJUTL2",74,0)
 S RET="",MODALITY="",PLACE="",ACQSITE=""
"RTN","MAGJUTL2",75,0)
 S MAG0=^MAG(2005,MAGIEN,0),BIG=$D(^("FBIG")),NOD=$S(BIG:^("FBIG"),1:MAG0)
"RTN","MAGJUTL2",76,0)
 S MAG2=^MAG(2005,MAGIEN,2),PROCDT=$P(MAG2,U)
"RTN","MAGJUTL2",77,0)
 S MAG100=$G(^MAG(2005,MAGIEN,100)),ACQSITE=$P(MAG100,U,3)
"RTN","MAGJUTL2",78,0)
 I USETGA D
"RTN","MAGJUTL2",79,0)
 . I 'BIG S USETGA=0 ; reply no low-res image available
"RTN","MAGJUTL2",80,0)
 . I BIG S NOD=MAG0,BIG=0 ; enable correct logic inside this subroutine
"RTN","MAGJUTL2",81,0)
 S MODALITY=$P(MAG0,U,8),DFN=$P(MAG0,U,7)
"RTN","MAGJUTL2",82,0)
 I BIG S X=+$P(NOD,U)  ; $p 1 is Magnetic Disk/Volume (.big)   <*> DCM--add to end: S:'X X=+$P(NOD,U,3)
"RTN","MAGJUTL2",83,0)
 E  S X=+$P(NOD,U,3)   ; $p 3 is Magnetic Disk/Volume (.tga)
"RTN","MAGJUTL2",84,0)
 I X D
"RTN","MAGJUTL2",85,0)
 . I '$D(NETLOC(X)) S NETLOC(X)=+$P(^MAG(2005.2,X,0),U,6)_U_$P(^(0),U,10)
"RTN","MAGJUTL2",86,0)
 . S RET=+NETLOC(X),PLACE=$P(NETLOC(X),U,2) ; NETLOC is global to this subrtn
"RTN","MAGJUTL2",87,0)
 . S FILNAM=""
"RTN","MAGJUTL2",88,0)
 E  D
"RTN","MAGJUTL2",89,0)
 . S RET=0,FILNAM=$P(MAG0,U,2)
"RTN","MAGJUTL2",90,0)
 . S T=$S(BIG:$P(NOD,U,2),1:$P(NOD,U,5))
"RTN","MAGJUTL2",91,0)
 . I T S PLACE=$P(^MAG(2005.2,T,0),U,10) ; <*>DCM--add anything?
"RTN","MAGJUTL2",92,0)
 S RET=RET_U_$S(BIG:"BIG",1:"FULL")_U_MODALITY_U_PLACE_U_DFN_U_FILNAM_U_USETGA_U_PROCDT_U_ACQSITE
"RTN","MAGJUTL2",93,0)
 Q RET
"RTN","MAGJUTL2",94,0)
 ;
"RTN","MAGJUTL2",95,0)
REMOTE(MAGIEN) ;Return list of remote  Cache Locations
"RTN","MAGJUTL2",96,0)
 ;  else, return "" if none
"RTN","MAGJUTL2",97,0)
 N RET,LOC
"RTN","MAGJUTL2",98,0)
 S RET=""
"RTN","MAGJUTL2",99,0)
 I $D(^MAG(2005,MAGIEN,4,"LOC")) S LOC=0 D
"RTN","MAGJUTL2",100,0)
 . F  S LOC=$O(^MAG(2005,MAGIEN,4,"LOC",LOC)) Q:'LOC  S RET=RET_$S(RET="":"",1:",")_LOC
"RTN","MAGJUTL2",101,0)
 Q RET
"RTN","MAGJUTL2",102,0)
 ;
"RTN","MAGJUTL2",103,0)
IMGINF2(RARPT,RET,USETGA) ; Fetch info from Image File for input RARPT:
"RTN","MAGJUTL2",104,0)
 ; Input: RARPT: Rad Report pointer
"RTN","MAGJUTL2",105,0)
 ;        RET: see below
"RTN","MAGJUTL2",106,0)
 ;        USETGA: 1/0 -- if 1, forces return of TGA (not .big) file
"RTN","MAGJUTL2",107,0)
 ; RET holds array of return values:
"RTN","MAGJUTL2",108,0)
 ;   RET = # Images stored for the case
"RTN","MAGJUTL2",109,0)
 ;   RET(1:n) = 1/0 ^ FULL/BIG ^ Mod ^ ien ^ Series ^ Routed-to Locations ^ PLACE ^ DFN ^ FileName (if OffLine) ^ PS_Indicator
"RTN","MAGJUTL2",110,0)
 ;             (1=Image is on Magnetic Disk)
"RTN","MAGJUTL2",111,0)
 ; * This subroutine may be called by other VistARad routines
"RTN","MAGJUTL2",112,0)
 ;
"RTN","MAGJUTL2",113,0)
 N BIG,IMG,MAGIEN,MAGIEN2,MAGPTR,MAGINDX,MAGREF,NETLOC,SERIES,SERCT,SERPREV
"RTN","MAGJUTL2",114,0)
 K RET S RET=0,SERCT=0,SERPREV=""
"RTN","MAGJUTL2",115,0)
 S USETGA=+$G(USETGA) ; Defaults to Full-Resolution image if not defined
"RTN","MAGJUTL2",116,0)
 G IMGINF2Q:'RARPT S IMG=0
"RTN","MAGJUTL2",117,0)
 S MAGINDX="ADCM"  ; maybe others will exist in the future
"RTN","MAGJUTL2",118,0)
 ; *P18--this index is defunct for P18 & beyond
"RTN","MAGJUTL2",119,0)
 ; however, keep for bkwds-compat P18 to P32; remove later
"RTN","MAGJUTL2",120,0)
 F  S IMG=$O(^RARPT(RARPT,2005,IMG)) Q:'IMG  S MAGIEN=$P(^(IMG,0),U) D
"RTN","MAGJUTL2",121,0)
 . S MAGREF=$NA(^MAG(2005,MAGIEN,1,MAGINDX))
"RTN","MAGJUTL2",122,0)
 . I 'MAGJOB("P32")!'$D(@MAGREF) D  ; use group multiple structure
"RTN","MAGJUTL2",123,0)
 .. Q:'$D(^MAG(2005,MAGIEN,0))  S MAGPTR=0
"RTN","MAGJUTL2",124,0)
 .. I '$O(^MAG(2005,MAGIEN,1,MAGPTR)) D  Q
"RTN","MAGJUTL2",125,0)
 ... S T=$$ONLCHK(MAGIEN,USETGA)
"RTN","MAGJUTL2",126,0)
 ... S RET=RET+1,RET(RET)=$P(T,U,1,3)_U_MAGIEN_U_U_$$REMOTE(MAGIEN)_U_$P(T,U,4,7)_U_$$PSIND(MAGIEN)_U_$P(T,U,8)_U_$P(T,U,9)
"RTN","MAGJUTL2",127,0)
 .. E  F  S MAGPTR=$O(^MAG(2005,MAGIEN,1,MAGPTR)) Q:'MAGPTR  S MAGIEN2=$P(^(MAGPTR,0),U) D
"RTN","MAGJUTL2",128,0)
 ... S T=$$ONLCHK(MAGIEN2,USETGA)
"RTN","MAGJUTL2",129,0)
 ... S RET=RET+1,RET(RET)=$P(T,U,1,3)_U_MAGIEN2_U_U_$$REMOTE(MAGIEN2)_U_$P(T,U,4,7)_U_$$PSIND(MAGIEN2)_U_$P(T,U,8)_U_$P(T,U,9)
"RTN","MAGJUTL2",130,0)
 . E  I $D(@MAGREF) D   ; use exam index, e.g., "ADCM"
"RTN","MAGJUTL2",131,0)
 .. F  S MAGREF=$Q(@MAGREF) Q:($P(MAGREF,",",4)'=(""""_MAGINDX_""""))  D
"RTN","MAGJUTL2",132,0)
 ... S X=$L(MAGREF,","),MAGIEN2=$P(MAGREF,",",X-1),SERIES=$P(MAGREF,",",5)
"RTN","MAGJUTL2",133,0)
 ... S T=$$ONLCHK(MAGIEN2,USETGA)
"RTN","MAGJUTL2",134,0)
 ... S RET=RET+1,RET(RET)=$P(T,U,1,3)_U_MAGIEN2_U_SERIES_U_$$REMOTE(MAGIEN2)_U_$P(T,U,4,7)
"RTN","MAGJUTL2",135,0)
 ... I SERIES'=SERPREV S SERCT=SERCT+1,$P(RET("SER",SERCT),U,2)=SERIES,SERPREV=SERIES,RET("SER",0)=SERCT
"RTN","MAGJUTL2",136,0)
 ... S $P(RET("SER",SERCT),U)=RET("SER",SERCT)+1
"RTN","MAGJUTL2",137,0)
IMGINF2Q ;
"RTN","MAGJUTL2",138,0)
 Q
"RTN","MAGJUTL2",139,0)
 ;
"RTN","MAGJUTL2",140,0)
PSIND(MAGIEN) ; return Presentation State Indicator(s) for image
"RTN","MAGJUTL2",141,0)
 ; K=Key Image PStype; I=Interpretation PStyp; U=User PStyp
"RTN","MAGJUTL2",142,0)
 N RSL,IEN,X
"RTN","MAGJUTL2",143,0)
 S RSL="",IEN=0
"RTN","MAGJUTL2",144,0)
 I $D(^MAG(2005,MAGIEN,210,IEN)) F  S IEN=$O(^MAG(2005,MAGIEN,210,IEN)) Q:'IEN  S X=$P(^(IEN,0),U,2) Q:RSL[X  S RSL=RSL_$S(RSL="":"",1:",")_X
"RTN","MAGJUTL2",145,0)
 Q:$Q RSL Q
"RTN","MAGJUTL2",146,0)
 ;
"RTN","MAGJUTL2",147,0)
JBFETCH(RARPT,MAGS,USETGA) ; fetch this case's images from Jukebox, if necessary
"RTN","MAGJUTL2",148,0)
 ; Input: RARPT: Rad Report pointer
"RTN","MAGJUTL2",149,0)
 ;        MAGS: see below
"RTN","MAGJUTL2",150,0)
 ;        USETGA: 1/0 -- if 1, forces return of TGA (not .big) file
"RTN","MAGJUTL2",151,0)
 ; This is a function that returns a string containing:
"RTN","MAGJUTL2",152,0)
 ;   # Images fetched from JB ^ Total # Images for Case ^ # Low Res Imgs
"RTN","MAGJUTL2",153,0)
 ; The MAGS array will be returned to the calling
"RTN","MAGJUTL2",154,0)
 ; routine if MAGS is provided as an input parameter
"RTN","MAGJUTL2",155,0)
 ;   MAGS is populated by call to IMGINF2.
"RTN","MAGJUTL2",156,0)
 ;   IF any images are stored OffLine, then this node is set here:
"RTN","MAGJUTL2",157,0)
 ;     MAGS("OFFLN",JBOFFLN)=""  JBOFFLN = Platter ID from file 2006.033
"RTN","MAGJUTL2",158,0)
 ;
"RTN","MAGJUTL2",159,0)
 ; * This function may be called by other VistARad routines
"RTN","MAGJUTL2",160,0)
 ;
"RTN","MAGJUTL2",161,0)
 N MAGIEN,FETCH,IMAG,FILNAM,JBOFFLN,LORESCT
"RTN","MAGJUTL2",162,0)
 S USETGA=+$G(USETGA) ; Defaults to Full-Resolution image if not defined
"RTN","MAGJUTL2",163,0)
 S FETCH=0,LORESCT=0
"RTN","MAGJUTL2",164,0)
 D IMGINF2(RARPT,.MAGS,USETGA)
"RTN","MAGJUTL2",165,0)
 I MAGS F IMAG=1:1:MAGS S X=MAGS(IMAG) D
"RTN","MAGJUTL2",166,0)
 . I USETGA S LORESCT=LORESCT+$P(X,U,10)
"RTN","MAGJUTL2",167,0)
 . I '+X D  ; Call params below depend on Consolidated Site status
"RTN","MAGJUTL2",168,0)
 .. S FILNAM=$P(X,U,9)
"RTN","MAGJUTL2",169,0)
 .. I FILNAM]"",$D(^MAGQUEUE(2006.033,"B",FILNAM)) S T=$O(^(FILNAM,"")) S JBOFFLN=$P($G(^MAGQUEUE(2006.033,T,0)),U,2) S FETCH=FETCH+1,MAGS("OFFLN",JBOFFLN)="" Q  ; OffLine Image
"RTN","MAGJUTL2",170,0)
 .. I '$G(MAGJOB("CONSOLIDATED")) S X=$$JBTOHD^MAGBAPI($P(X,U,4)_"^"_$P(X,U,2)),FETCH=FETCH+1 ; pre-consolidation vs
"RTN","MAGJUTL2",171,0)
 .. E  S X=$$JBTOHD^MAGBAPI($P(X,U,4)_"^"_$P(X,U,2),$P(X,U,7)),FETCH=FETCH+1
"RTN","MAGJUTL2",172,0)
 Q FETCH_U_MAGS_U_LORESCT
"RTN","MAGJUTL2",173,0)
 ;
"RTN","MAGJUTL2",174,0)
END Q  ;
"RTN","MAGJUTL3")
0^13^B68048803
"RTN","MAGJUTL3",1,0)
MAGJUTL3 ;WIRMFO/JHC VistARad subrtns & RPCs ; 29 Jul 2003  10:03 AM
"RTN","MAGJUTL3",2,0)
 ;;3.0;IMAGING;**16,9,22,18,65,76**;Jun 22, 2007;Build 19
"RTN","MAGJUTL3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL3",11,0)
 ;; |                                                               |
"RTN","MAGJUTL3",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL3",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL3",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL3",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL3",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL3",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",18,0)
 ;;
"RTN","MAGJUTL3",19,0)
 Q
"RTN","MAGJUTL3",20,0)
 ;RPC Entry points:
"RTN","MAGJUTL3",21,0)
 ; LISTINF--Custom list info
"RTN","MAGJUTL3",22,0)
 ; LOGOFF--update session file
"RTN","MAGJUTL3",23,0)
 ; CACHEQ--init session data
"RTN","MAGJUTL3",24,0)
 ; PINF1--Patient info
"RTN","MAGJUTL3",25,0)
 ; USERINF2--P18 inits for the session
"RTN","MAGJUTL3",26,0)
 ;Subrtn EPs:
"RTN","MAGJUTL3",27,0)
 ; LOG--Upd image access log
"RTN","MAGJUTL3",28,0)
 ; MAGJOBNC--inits for non-client sessions
"RTN","MAGJUTL3",29,0)
 ; USERKEYS--user key info
"RTN","MAGJUTL3",30,0)
 ; USERINF--user info
"RTN","MAGJUTL3",31,0)
 ;
"RTN","MAGJUTL3",32,0)
LISTINF(MAGGRY) ; RPC: MAGJ CUSTOM LISTS
"RTN","MAGJUTL3",33,0)
 ;  get Exam List data
"RTN","MAGJUTL3",34,0)
 ; Return in ^TMP($J,"MAGJLSTINF",0:N)
"RTN","MAGJUTL3",35,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",36,0)
 ;   1:n)= Button Label^List #^Button Hints^List Type
"RTN","MAGJUTL3",37,0)
 ;
"RTN","MAGJUTL3",38,0)
 ; MAGGRY holds $NA ref to ^TMP for return message
"RTN","MAGJUTL3",39,0)
 ;   all refs to MAGGRY use SS indirection
"RTN","MAGJUTL3",40,0)
 ;
"RTN","MAGJUTL3",41,0)
 ; GLB has $NA ref to ^MAG(2006.631), Custom Lists
"RTN","MAGJUTL3",42,0)
 ;   refs to GLB use SS indirection to get data from this file
"RTN","MAGJUTL3",43,0)
 ;
"RTN","MAGJUTL3",44,0)
 S X="ERR1^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",45,0)
 N D0,GLB,INF,MAGLST,NAM,T
"RTN","MAGJUTL3",46,0)
 S MAGLST="MAGJLSTINF"
"RTN","MAGJUTL3",47,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY S @MAGGRY@(0)=0
"RTN","MAGJUTL3",48,0)
 S GLB=$NA(^MAG(2006.631)),NAM=""
"RTN","MAGJUTL3",49,0)
 F  S NAM=$O(@GLB@("B",NAM)) Q:NAM=""  S D0="" D
"RTN","MAGJUTL3",50,0)
 . S D0=$O(@GLB@("B",NAM,D0)) Q:'D0  D
"RTN","MAGJUTL3",51,0)
 . . S X=$G(@GLB@(D0,0)) Q:($P(X,U,2)>9000)!'$P(X,U,6)  ; List Active & User-defined
"RTN","MAGJUTL3",52,0)
 . . S INF="" F I=1:1 S T=$P("7^2^1^3",U,I) Q:T=""  S Y=$P(X,U,T) Q:Y=""  S $P(INF,U,I)=Y
"RTN","MAGJUTL3",53,0)
 . . Q:T'=""  ; req'd fields not all there
"RTN","MAGJUTL3",54,0)
 . . S T=@MAGGRY@(0)+1,^(0)=T,^(T)=INF ; add entry to reply
"RTN","MAGJUTL3",55,0)
 Q
"RTN","MAGJUTL3",56,0)
 ;
"RTN","MAGJUTL3",57,0)
LOG(ACTION,LOGDATA) ; Log exam access
"RTN","MAGJUTL3",58,0)
 N PTCT,TXT,RADFN,MAGIEN,NIMGS,REMOTE
"RTN","MAGJUTL3",59,0)
 S RADFN=$P(LOGDATA,U),MAGIEN=$P(LOGDATA,U,2),NIMGS=$P(LOGDATA,U,3),REMOTE=$P(LOGDATA,U,4)
"RTN","MAGJUTL3",60,0)
 I ACTION="" S ACTION="UNKNOWN"  ; Should never happen
"RTN","MAGJUTL3",61,0)
 S PTCT=RADFN'=$G(MAGJOB("LASTPT",ACTION))
"RTN","MAGJUTL3",62,0)
 I PTCT S MAGJOB("LASTPT",ACTION)=RADFN
"RTN","MAGJUTL3",63,0)
 S TXT=ACTION_U_RADFN_U_MAGIEN_U_U_U_NIMGS
"RTN","MAGJUTL3",64,0)
 S TXT=TXT_U_PTCT_U_$S(+MAGJOB("USER",1):1,1:0)_U_REMOTE
"RTN","MAGJUTL3",65,0)
 ; Session Log
"RTN","MAGJUTL3",66,0)
 D ACTION^MAGGTAU(TXT,1)
"RTN","MAGJUTL3",67,0)
 ; Mag Log
"RTN","MAGJUTL3",68,0)
 I REMOTE S ACTION=ACTION_"/REM"
"RTN","MAGJUTL3",69,0)
 D ENTRY^MAGLOG(ACTION,+DUZ,MAGIEN,"VRAD:"_MAGJOB("VRVERSION"),RADFN,NIMGS)
"RTN","MAGJUTL3",70,0)
 Q
"RTN","MAGJUTL3",71,0)
 ;
"RTN","MAGJUTL3",72,0)
LOGOFF(MAGGRY,DATA) ; RPC: MAGJ LOGOFF
"RTN","MAGJUTL3",73,0)
 ; update session file: logoff time & session entry closed
"RTN","MAGJUTL3",74,0)
 D LOGOFF^MAGGTAU(.MAGGRY)
"RTN","MAGJUTL3",75,0)
 Q
"RTN","MAGJUTL3",76,0)
 ;
"RTN","MAGJUTL3",77,0)
CACHEQ(MAGGRY,DATA) ; RPC: MAGJ CACHELOCATION
"RTN","MAGJUTL3",78,0)
 ; some logon inits & get alternate paths for Remote Reading
"RTN","MAGJUTL3",79,0)
 ; input in DATA:
"RTN","MAGJUTL3",80,0)
 ;  - WSLOC   = WS Loc'n
"RTN","MAGJUTL3",81,0)
 ;  - VRADVER = Client Vs -- p32 ONLY
"RTN","MAGJUTL3",82,0)
 ;  - OSVER   = Client OS Vs -- p32 ONLY
"RTN","MAGJUTL3",83,0)
 ; Return in ^TMP($J,"MAGJCACHE",0:N) (@MAGGRY)
"RTN","MAGJUTL3",84,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",85,0)
 ;   1:n)= PhysName^Subdirectory^HashFlag^Username^Password^AltPath_IEN
"RTN","MAGJUTL3",86,0)
 ;
"RTN","MAGJUTL3",87,0)
 ; MAGGRY holds $NA reference to ^TMP for return message
"RTN","MAGJUTL3",88,0)
 ;   refs to MAGGRY use SS indirection
"RTN","MAGJUTL3",89,0)
 ;
"RTN","MAGJUTL3",90,0)
 ; Also builds local array:  p32/p18 compatibility: Some of this is moved to userinf2 below
"RTN","MAGJUTL3",91,0)
 ;  MAGJOB("LOC",NetworkLocnIEN)=Site Abbrev
"RTN","MAGJUTL3",92,0)
 ;     ("REMOTE")=1/0  (T/F for "User is Remote")
"RTN","MAGJUTL3",93,0)
 ;     ("REMOTESCREEN")=0/1  (init User-switchable Remote Screening--P18 use only)
"RTN","MAGJUTL3",94,0)
 ;     ("WSLOC")=WS Loc'n String
"RTN","MAGJUTL3",95,0)
 ;     ("WSLOCTYP")=WS Loc'n Type
"RTN","MAGJUTL3",96,0)
 ;     ("WSNAME")=WS ID
"RTN","MAGJUTL3",97,0)
 ;     ("VRVERSION")=VRAD Vs
"RTN","MAGJUTL3",98,0)
 ;     ("OSVER")=O/S Vs
"RTN","MAGJUTL3",99,0)
 ;     ("ALTPATH")=1/0 ^ 1/0 (T/F Alt Paths are defined 
"RTN","MAGJUTL3",100,0)
 ;               ^ Alt Paths Enabled/Disabled for most recent exam)
"RTN","MAGJUTL3",101,0)
 ;
"RTN","MAGJUTL3",102,0)
 S X="ERR1^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",103,0)
 ;
"RTN","MAGJUTL3",104,0)
 N I,MAGLST,REPLY,TMP,WSLOC,XX,VRADVER,OSVER,DIQUIET,ALTIEN
"RTN","MAGJUTL3",105,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL3",106,0)
 S REPLY=0,MAGLST="MAGJCACHE"
"RTN","MAGJUTL3",107,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY
"RTN","MAGJUTL3",108,0)
 S WSLOC=$P(DATA,U),VRADVER=$P(DATA,U,2),OSVER=$P(DATA,U,3)
"RTN","MAGJUTL3",109,0)
 I '$D(MAGJOB("OSVER")) D  ; ID p32 initialization
"RTN","MAGJUTL3",110,0)
 . S MAGJOB("OSVER")=$S(OSVER]"":OSVER,1:"UNK")
"RTN","MAGJUTL3",111,0)
 . S MAGJOB("VRVERSION")=$S(VRADVER]"":VRADVER,1:"UNK")
"RTN","MAGJUTL3",112,0)
 . D MAGJOB ; p32 init of VRAD
"RTN","MAGJUTL3",113,0)
 ; get alt paths location info
"RTN","MAGJUTL3",114,0)
 S MAGJOB("WSLOC")=WSLOC,MAGJOB("REMOTE")=0
"RTN","MAGJUTL3",115,0)
 S MAGJOB("REMOTESCREEN")=+$P($G(^MAG(2006.69,1,0)),U,10)
"RTN","MAGJUTL3",116,0)
 I WSLOC]"" D
"RTN","MAGJUTL3",117,0)
 . S X=$P($G(^MAG(2006.1,+MAGJOB("SITEP"),0)),U,9)
"RTN","MAGJUTL3",118,0)
 . I X]"",(X'=WSLOC) S MAGJOB("REMOTE")=1
"RTN","MAGJUTL3",119,0)
 . E  Q
"RTN","MAGJUTL3",120,0)
 . D LIST^MAGBRTLD(WSLOC,.TMP)
"RTN","MAGJUTL3",121,0)
 . I TMP S REPLY=TMP,MAGJOB("ALTPATH")=$G(MAGJOB("ALTPATH"),"1^1") F I=1:1:TMP D
"RTN","MAGJUTL3",122,0)
 . . S ALTIEN=$P(TMP(I),U,7)
"RTN","MAGJUTL3",123,0)
 . . S XX=$P(TMP(I),U,1,5),X=$P(XX,U,3),$P(XX,U,3)=$S(X="Y":1,1:0)
"RTN","MAGJUTL3",124,0)
 . . S X=$P(XX,U,4),$P(XX,U,4)=$P(XX,U,5),$P(XX,U,5)=X,$P(XX,U,6)=ALTIEN
"RTN","MAGJUTL3",125,0)
 . . S @MAGGRY@(I)=XX,MAGJOB("LOC",ALTIEN)=$P(TMP(I),U,6)
"RTN","MAGJUTL3",126,0)
 I '$D(MAGJOB("ALTPATH")) S MAGJOB("ALTPATH")="0^0"
"RTN","MAGJUTL3",127,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL3",128,0)
CACHEQZ Q
"RTN","MAGJUTL3",129,0)
 ;
"RTN","MAGJUTL3",130,0)
MAGJOBNC ; EP for Prefetch/Bkgnd calls (NOT a Vrad Client)
"RTN","MAGJUTL3",131,0)
 N NOTCLIEN S NOTCLIEN=1
"RTN","MAGJUTL3",132,0)
 D MAGJOB
"RTN","MAGJUTL3",133,0)
 Q
"RTN","MAGJUTL3",134,0)
 ;
"RTN","MAGJUTL3",135,0)
MAGJOB ; Init magjob array
"RTN","MAGJUTL3",136,0)
 N T,RIST
"RTN","MAGJUTL3",137,0)
 I $G(MAGJOB("VRVERSION")) S X=MAGJOB("VRVERSION")
"RTN","MAGJUTL3",138,0)
 E  S X="" ; non-client processes assume post-P32 logic
"RTN","MAGJUTL3",139,0)
 S MAGJOB("P32")=(X="3.0.41.17") ; P32 Client?
"RTN","MAGJUTL3",140,0)
 I MAGJOB("P32") D P32STOP^MAGJUTL5(.X) S MAGJOB("P32STOP")=X  ; STOP support when P76 releases
"RTN","MAGJUTL3",141,0)
 D USERKEYS
"RTN","MAGJUTL3",142,0)
 S MAGJOB("CONSOLIDATED")=($G(^MAG(2006.1,"CONSOLIDATED"))="YES")
"RTN","MAGJUTL3",143,0)
 S MAGJOB("SITEP")=$$IMGSIT^MAGJUTL1(DUZ(2),1)  ; Site Param ien
"RTN","MAGJUTL3",144,0)
 S RIST="" F X="S","R" I $D(^VA(200,"ARC",X,DUZ)) S RIST=X Q
"RTN","MAGJUTL3",145,0)
 S RIST=$S(RIST="S":15,RIST="R":12,1:0) ; Staff/Resident/Non rist
"RTN","MAGJUTL3",146,0)
 S MAGJOB("USER",1)=RIST_U_$$USERINF(+DUZ,".01;1") ; RIST_Type^NAME^INI
"RTN","MAGJUTL3",147,0)
 S X=$P($G(IO("CLNM")),"."),MAGJOB("WSNAME")=$S(X]"":X,1:"VistaradWS")
"RTN","MAGJUTL3",148,0)
 K MAGJOB("DIVSCRN") I MAGJOB("CONSOLIDATED") D
"RTN","MAGJUTL3",149,0)
 . ; include logon DIV, other DIVs to screen Unread Lists & Locking
"RTN","MAGJUTL3",150,0)
 . I $G(DUZ(2))]"" S MAGJOB("DIVSCRN",DUZ(2))=""
"RTN","MAGJUTL3",151,0)
 . S DIV=""
"RTN","MAGJUTL3",152,0)
 . I DUZ(2)'=$P(MAGJOB("SITEP"),U,3) D  ; Assoc DIV
"RTN","MAGJUTL3",153,0)
 . . S IEN=$O(^MAG(2006.1,+MAGJOB("SITEP"),"INSTS","B",DUZ(2),0))
"RTN","MAGJUTL3",154,0)
 . . I IEN F  S DIV=$O(^MAG(2006.1,+MAGJOB("SITEP"),"INSTS",IEN,201,"B",DIV)) Q:'DIV  S MAGJOB("DIVSCRN",DIV)=""
"RTN","MAGJUTL3",155,0)
 . E  D  ; Parent DIV
"RTN","MAGJUTL3",156,0)
 . . F  S DIV=$O(^MAG(2006.1,+MAGJOB("SITEP"),201,"B",DIV)) Q:'DIV  S MAGJOB("DIVSCRN",DIV)=""
"RTN","MAGJUTL3",157,0)
 S MAGJOB("WSLOCTYP")=$S(+MAGJOB("USER",1):"RAD",1:"Non-Rad") ; USer is Rist/Not
"RTN","MAGJUTL3",158,0)
 I '$D(MAGJOB("WRKSIEN")) D
"RTN","MAGJUTL3",159,0)
 . Q:+$G(NOTCLIEN)  ; proceed only if Vrad Client is attached
"RTN","MAGJUTL3",160,0)
 . S X=MAGJOB("WSNAME")_"^^^"_MAGJOB("WSLOCTYP")_U_U_U_U_1_U_MAGJOB("OSVER")_U_MAGJOB("VRVERSION")
"RTN","MAGJUTL3",161,0)
 . D UPD^MAGGTAU(.Y,X)
"RTN","MAGJUTL3",162,0)
 . D REMLOCK^MAGJEX1B ; put here to only run 1x/ login
"RTN","MAGJUTL3",163,0)
 Q
"RTN","MAGJUTL3",164,0)
 ;
"RTN","MAGJUTL3",165,0)
USERINF(DUZ,FLDS) ; get data from user file
"RTN","MAGJUTL3",166,0)
 I FLDS=""!'DUZ Q ""
"RTN","MAGJUTL3",167,0)
 N I,RSL,T S RSL=""
"RTN","MAGJUTL3",168,0)
 D GETS^DIQ(200,+DUZ,FLDS,"E","T")
"RTN","MAGJUTL3",169,0)
 S T=+DUZ_","
"RTN","MAGJUTL3",170,0)
 F I=1:1:$L(FLDS,";") S RSL=RSL_$S(RSL="":"",1:U)_T(200,T,$P(FLDS,";",I),"E")
"RTN","MAGJUTL3",171,0)
 Q RSL
"RTN","MAGJUTL3",172,0)
 ;
"RTN","MAGJUTL3",173,0)
USERKEYS ; Store Security Keys in MagJob
"RTN","MAGJUTL3",174,0)
 N I,X,Y
"RTN","MAGJUTL3",175,0)
 N MAGKS ; keys to send to XUS KEY CHECK
"RTN","MAGJUTL3",176,0)
 N MAGKG ; returned
"RTN","MAGJUTL3",177,0)
 K MAGJOB("KEYS")
"RTN","MAGJUTL3",178,0)
 S X="MAGJ",I=0
"RTN","MAGJUTL3",179,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,4)'="MAGJ"  D
"RTN","MAGJUTL3",180,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGJUTL3",181,0)
 I '$D(MAGKS) Q
"RTN","MAGJUTL3",182,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGJUTL3",183,0)
 S I=0 F  S I=$O(MAGKG(I)) Q:'I  I MAGKG(I) S MAGJOB("KEYS",MAGKS(I))=""
"RTN","MAGJUTL3",184,0)
 Q
"RTN","MAGJUTL3",185,0)
 ;
"RTN","MAGJUTL3",186,0)
PINF1(MAGGRY,MAGDFN) ;RPC Call MAGJ PT INFO -- Get pt info
"RTN","MAGJUTL3",187,0)
 S X="ERR3^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",188,0)
 D INFO^MAGGTPT1(.MAGGRY,MAGDFN_"^1") ; 1=Don't log to session file
"RTN","MAGJUTL3",189,0)
 Q
"RTN","MAGJUTL3",190,0)
 ;
"RTN","MAGJUTL3",191,0)
USERINF2(MAGGRY,DATA) ; rpc: MAGJ USER2--get user info
"RTN","MAGJUTL3",192,0)
 ; Input= unused ^ Client Vs ^ Client O/S Vs
"RTN","MAGJUTL3",193,0)
 ; Reply=
"RTN","MAGJUTL3",194,0)
 ; 0) = 1/0^code~Msg |  DUZ ^ NAME ^ INITIALS ^ REQFLAG
"RTN","MAGJUTL3",195,0)
 ; 1)= Net UserName ^ PSW ^ UserType ^ SYSADMIN
"RTN","MAGJUTL3",196,0)
 ;     1/0=Success/Fail flag for vs chk
"RTN","MAGJUTL3",197,0)
 ;     code=4 if fail
"RTN","MAGJUTL3",198,0)
 ;     Msg=Disp msg if fail
"RTN","MAGJUTL3",199,0)
 ;     REQFLAG = 1/0 (Ena/Disa Requisition for non-rad staff)
"RTN","MAGJUTL3",200,0)
 ;     UserType = 3: Staff R'ist; 2: Resident R'ist; 1: Rad Tech; 0: Non-Rad
"RTN","MAGJUTL3",201,0)
 ;     SYSADMIN = 1/0 1=user has System User privileges
"RTN","MAGJUTL3",202,0)
 ; 2:N)=Sec Keys
"RTN","MAGJUTL3",203,0)
 ;  
"RTN","MAGJUTL3",204,0)
 S X="ERR2^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",205,0)
 K MAGGRY S MAGGRY(0)="",MAGGRY(1)=""
"RTN","MAGJUTL3",206,0)
 I +$G(DUZ)=0 S MAGGRY(0)="0^4~DUZ Undefined, Null or Zero|" Q
"RTN","MAGJUTL3",207,0)
 N I,J,K,Y,REQ,VRADVER,OSVER,RADTECH,PLACE,REPLY
"RTN","MAGJUTL3",208,0)
 S VRADVER=$P(DATA,U,2),OSVER=$P(DATA,U,3)
"RTN","MAGJUTL3",209,0)
 D CHKVER^MAGJUTL5(.REPLY,VRADVER,.PLACE,.SVERSION)
"RTN","MAGJUTL3",210,0)
 I 'REPLY S MAGGRY(0)=REPLY_"|^^^^",MAGGRY(1)="^^^" G USERIN2Z ; Version check or PLACE failed
"RTN","MAGJUTL3",211,0)
 S RADTECH=""
"RTN","MAGJUTL3",212,0)
 S MAGJOB("OSVER")=$S(OSVER]"":OSVER,1:"UNK")   ; IDs P18 initialization; cf cacheq ep above
"RTN","MAGJUTL3",213,0)
 S MAGJOB("VRVERSION")=$S(VRADVER]"":VRADVER,1:"UNK")
"RTN","MAGJUTL3",214,0)
 S MAGJOB("VSVERSION")=SVERSION
"RTN","MAGJUTL3",215,0)
 D MAGJOB
"RTN","MAGJUTL3",216,0)
 ; Enable/Disable Requisition if not a radiology user
"RTN","MAGJUTL3",217,0)
 S REQ=1
"RTN","MAGJUTL3",218,0)
 I 'MAGJOB("USER",1) D  ; not a rist
"RTN","MAGJUTL3",219,0)
 . I $D(^VA(200,"ARC","T",+DUZ)) S RADTECH=1 Q  ; Rad Tech OK
"RTN","MAGJUTL3",220,0)
 . S X=+$P($G(^MAG(2006.69,1,0)),U,16)
"RTN","MAGJUTL3",221,0)
 . I X S REQ=0 ; Disable Req
"RTN","MAGJUTL3",222,0)
 S MAGGRY(0)=REPLY_"|"_DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)_U_REQ_U_SVERSION
"RTN","MAGJUTL3",223,0)
 ; Network UserName and PSW
"RTN","MAGJUTL3",224,0)
 S MAGGRY(1)=$P($G(^MAG(2006.1,PLACE,"NET")),U,1,2)
"RTN","MAGJUTL3",225,0)
 S X=+MAGJOB("USER",1),X=$S(X=15:3,X=12:2,+RADTECH:1,1:0)
"RTN","MAGJUTL3",226,0)
 S MAGGRY(1)=MAGGRY(1)_U_X_U_$D(MAGJOB("KEYS","MAGJ SYSTEM USER"))
"RTN","MAGJUTL3",227,0)
 S MAGGRY(2)="*KEYS",X="" F I=3:1 S X=$O(MAGJOB("KEYS",X)) Q:X=""  S MAGGRY(I)=X
"RTN","MAGJUTL3",228,0)
 S MAGGRY(I)="*END"
"RTN","MAGJUTL3",229,0)
USERIN2Z Q
"RTN","MAGJUTL3",230,0)
 ;
"RTN","MAGJUTL3",231,0)
ERR1 N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL3",232,0)
ERR2 N ERR S ERR=$$EC^%ZOSV S MAGGRY(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL3",233,0)
ERR3 N ERR S ERR=$$EC^%ZOSV S MAGGRY="0^4~"_ERR
"RTN","MAGJUTL3",234,0)
ERR D @^%ZOSF("ERRTN")
"RTN","MAGJUTL3",235,0)
 Q:$Q 1  Q
"RTN","MAGJUTL3",236,0)
 ;
"RTN","MAGJUTL3",237,0)
END Q  ; 
"RTN","MAGJUTL4")
0^11^B43697097
"RTN","MAGJUTL4",1,0)
MAGJUTL4 ;WIRMFO/JHC VistARad subroutines for RPC calls ; 15 Jul 2004  4:34 PM
"RTN","MAGJUTL4",2,0)
 ;;3.0;IMAGING;**18,76**;Jun 22, 2007;Build 19
"RTN","MAGJUTL4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL4",11,0)
 ;; |                                                               |
"RTN","MAGJUTL4",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL4",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL4",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL4",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL4",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL4",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL4",18,0)
 ;;
"RTN","MAGJUTL4",19,0)
 Q
"RTN","MAGJUTL4",20,0)
 ;
"RTN","MAGJUTL4",21,0)
CPTGRP(MAGGRY,DATA) ; RPC: MAGJ CPTMATCH
"RTN","MAGJUTL4",22,0)
 ; FOR INPUT cpt code, return matching cpt's based on grouping criteria:
"RTN","MAGJUTL4",23,0)
 ; INPUT in DATA: CPT Code ^ Criteria
"RTN","MAGJUTL4",24,0)
 ; Criteria:
"RTN","MAGJUTL4",25,0)
 ;   1=Matching cpt
"RTN","MAGJUTL4",26,0)
 ;   2=Body Part
"RTN","MAGJUTL4",27,0)
 ;   3=Body Part & Modality
"RTN","MAGJUTL4",28,0)
 ;  10=Same CPT (used to return short description only)
"RTN","MAGJUTL4",29,0)
 ; Return: List of CPTs with Short Name:  CPT ^ Short Name
"RTN","MAGJUTL4",30,0)
 ; MAGGRY holds $NA reference to ^TMP for rpc return
"RTN","MAGJUTL4",31,0)
 ;   all ref's to MAGGRY use subscript indirection
"RTN","MAGJUTL4",32,0)
 ;
"RTN","MAGJUTL4",33,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR1^MAGJUTL4"
"RTN","MAGJUTL4",34,0)
 N REPLY,DIQUIET,CPT,CRIT,CT,MAGLST,NOD,NODLST
"RTN","MAGJUTL4",35,0)
 N MATCHGRP,INDXLST,AND,RET,CPTGLB,CPTIN,CPTIEN,TCPT
"RTN","MAGJUTL4",36,0)
 ;
"RTN","MAGJUTL4",37,0)
 ; <*> Issue: Unable get specific body part for some non-specific CPTs (e.g., 75774-ANGIO SELECT EA ADD VESSEL-S)
"RTN","MAGJUTL4",38,0)
 ;         --> For these, could just return matching CPTs (or equivalent CPT?)
"RTN","MAGJUTL4",39,0)
 ; 
"RTN","MAGJUTL4",40,0)
 ; Produce List of cptiens for each INDX of interest
"RTN","MAGJUTL4",41,0)
 ; AND with next list of cptiens; repeat until no more INDXs
"RTN","MAGJUTL4",42,0)
 ; build output list of CPT codes (w/ short names [optional])
"RTN","MAGJUTL4",43,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",44,0)
 S CT=0,MAGLST="MAGJCPT"
"RTN","MAGJUTL4",45,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY  ; assign MAGGRY value
"RTN","MAGJUTL4",46,0)
 S CPTIN=$P(DATA,U),CRIT=$P(DATA,U,2)
"RTN","MAGJUTL4",47,0)
 S REPLY="0^Getting matching CPT info."
"RTN","MAGJUTL4",48,0)
 S:'CRIT CRIT=1 ; default equivalent
"RTN","MAGJUTL4",49,0)
 I CPTIN="" S REPLY="0^Invalid CPT code ("_DATA_")." G CPTGRPZ
"RTN","MAGJUTL4",50,0)
 I '(CRIT=1!(CRIT=2)!(CRIT=3)!(CRIT=10)) S REPLY="0^Invalid criteria ("_DATA_")." G CPTGRPZ
"RTN","MAGJUTL4",51,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",52,0)
 S CPTIEN=$O(@CPTGLB@("B",CPTIN,""))
"RTN","MAGJUTL4",53,0)
 I 'CPTIEN S REPLY="0^Input CPT code ("_CPTIN_") not defined in CPT Match table." G CPTGRPZ
"RTN","MAGJUTL4",54,0)
 S X=@CPTGLB@(CPTIEN,0),MATCHGRP=+$P(X,U,4)
"RTN","MAGJUTL4",55,0)
 ;CPTMATCH^BODYPART^MDL
"RTN","MAGJUTL4",56,0)
 I CRIT=2!(CRIT=3) D
"RTN","MAGJUTL4",57,0)
 . S X=0 F  S X=$O(@CPTGLB@(CPTIEN,1,"B",X)) Q:'X  D GETCPTS("BODYPART",X,"",.RET)
"RTN","MAGJUTL4",58,0)
 . I CRIT=3 D
"RTN","MAGJUTL4",59,0)
 . . M AND=RET K RET S X=0
"RTN","MAGJUTL4",60,0)
 . . F  S X=$O(@CPTGLB@(CPTIEN,2,"B",X)) Q:'X  D GETCPTS("MDL",X,.AND,.RET)
"RTN","MAGJUTL4",61,0)
 I CRIT=1 D
"RTN","MAGJUTL4",62,0)
 . I MATCHGRP,(MATCHGRP'=CPTIEN) S RET(MATCHGRP)="" D GETCPTS("CPTMATCH",MATCHGRP,"",.RET)
"RTN","MAGJUTL4",63,0)
 . D GETCPTS("CPTMATCH",CPTIEN,"",.RET)
"RTN","MAGJUTL4",64,0)
 I CRIT=10 ; fall through answers this!
"RTN","MAGJUTL4",65,0)
 I '$D(RET(CPTIEN)) S RET(CPTIEN)="" ; always report back input cpt
"RTN","MAGJUTL4",66,0)
 S IEN=0 F  S IEN=$O(RET(IEN)) Q:'IEN  D
"RTN","MAGJUTL4",67,0)
 . N LIN S X=$G(@CPTGLB@(IEN,0))
"RTN","MAGJUTL4",68,0)
 . Q:'(X]"")  S TCPT=$P(X,U),LIN=TCPT_U_$P($$CPT^ICPTCOD(TCPT),U,3) ; _U_$$BODPART(IEN,"~")_U_$$MDLLST(IEN,"~")
"RTN","MAGJUTL4",69,0)
 . S CT=CT+1,@MAGGRY@(CT)=LIN
"RTN","MAGJUTL4",70,0)
 S REPLY=CT_U_"1~ "_CT_" CPT Matches returned for "_CPTIN
"RTN","MAGJUTL4",71,0)
CPTGRPZ ;
"RTN","MAGJUTL4",72,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL4",73,0)
 Q
"RTN","MAGJUTL4",74,0)
 ;
"RTN","MAGJUTL4",75,0)
GETCPTS(INDEX,VALUE,AND,OUT) ; return a list of CPTIENS in OUT
"RTN","MAGJUTL4",76,0)
 ; if array AND is defined, reply only values contained in AND &  the index
"RTN","MAGJUTL4",77,0)
 N X,GLBREF,CPTIEN
"RTN","MAGJUTL4",78,0)
 S GLBREF=$NA(@CPTGLB@(INDEX,VALUE))
"RTN","MAGJUTL4",79,0)
 S CPTIEN=0
"RTN","MAGJUTL4",80,0)
 I $D(AND)>9 D
"RTN","MAGJUTL4",81,0)
 . F  S CPTIEN=$O(AND(CPTIEN)) Q:CPTIEN=""  I $D(@GLBREF@(CPTIEN)) S OUT(CPTIEN)=""
"RTN","MAGJUTL4",82,0)
 E  F  S CPTIEN=$O(@GLBREF@(CPTIEN)) Q:'CPTIEN  D
"RTN","MAGJUTL4",83,0)
 . S OUT(CPTIEN)=""
"RTN","MAGJUTL4",84,0)
 Q
"RTN","MAGJUTL4",85,0)
 ;
"RTN","MAGJUTL4",86,0)
BODPART(CPTIEN,DLM) ; return DLM-delimited list of body part values for this CPT
"RTN","MAGJUTL4",87,0)
 I +$G(CPTIEN)
"RTN","MAGJUTL4",88,0)
 E  Q ""
"RTN","MAGJUTL4",89,0)
 N LIST,CPTGLB S LIST=""
"RTN","MAGJUTL4",90,0)
 S DLM=$E($G(DLM))
"RTN","MAGJUTL4",91,0)
 I DLM="" S DLM="^"
"RTN","MAGJUTL4",92,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",93,0)
 S NOD=0
"RTN","MAGJUTL4",94,0)
 F  S NOD=$O(@CPTGLB@(CPTIEN,1,NOD)) Q:'NOD  S X=$P(^(NOD,0),U) I X]"" S LIST=LIST_DLM_X
"RTN","MAGJUTL4",95,0)
 Q:$Q $E(LIST,2,999)  Q
"RTN","MAGJUTL4",96,0)
 ;
"RTN","MAGJUTL4",97,0)
MDLLST(CPTIEN,DLM) ; return DLM-delimited list of modality values for this CPT
"RTN","MAGJUTL4",98,0)
 I +$G(CPTIEN)
"RTN","MAGJUTL4",99,0)
 E  Q ""
"RTN","MAGJUTL4",100,0)
 N LIST,CPTGLB S LIST=""
"RTN","MAGJUTL4",101,0)
 S DLM=$E($G(DLM))
"RTN","MAGJUTL4",102,0)
 I DLM="" S DLM="^"
"RTN","MAGJUTL4",103,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",104,0)
 S NOD=0
"RTN","MAGJUTL4",105,0)
 F  S NOD=$O(@CPTGLB@(CPTIEN,2,NOD)) Q:'NOD  S X=$P(^(NOD,0),U) I X]"" S LIST=LIST_DLM_X
"RTN","MAGJUTL4",106,0)
 Q:$Q $E(LIST,2,999)  Q
"RTN","MAGJUTL4",107,0)
 ;
"RTN","MAGJUTL4",108,0)
STATCHK(MAGGRY,DATA) ;
"RTN","MAGJUTL4",109,0)
 ; RPC: MAGJ RADSTATUSCHECK
"RTN","MAGJUTL4",110,0)
 ; This may also be accessed by subroutine call. <*> do not change name of EP
"RTN","MAGJUTL4",111,0)
 ; Exam Status check RPC and subroutine: determine if the exam has been Tech-Verified (at least).
"RTN","MAGJUTL4",112,0)
 ; Images are assumed to be verified if Exam Status is Examined, or higher status.
"RTN","MAGJUTL4",113,0)
 ;       ; Input in DATA: RADFN^RADTI^RACNI^RARPT
"RTN","MAGJUTL4",114,0)
 ;   Input is either RADFN, RADTI, and RACNI; or, RARPT only may be input in piece 4
"RTN","MAGJUTL4",115,0)
 ;   Return: Code^Text
"RTN","MAGJUTL4",116,0)
 ;    0 = Problem, or exam was cancelled
"RTN","MAGJUTL4",117,0)
 ;    1 = Not yet verified
"RTN","MAGJUTL4",118,0)
 ;    2 = Tech Verified
"RTN","MAGJUTL4",119,0)
 ;    3 = Radiologist Verified
"RTN","MAGJUTL4",120,0)
 ;    4 = User is a Radiology professional--always allow access
"RTN","MAGJUTL4",121,0)
 ;
"RTN","MAGJUTL4",122,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR3^MAGJUTL4"
"RTN","MAGJUTL4",123,0)
 N REPLY,STATUS,ORDER,VCAT,STOUT
"RTN","MAGJUTL4",124,0)
 N DIQUIET,RARPT,RADFN,RADTI,RACNI
"RTN","MAGJUTL4",125,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",126,0)
 S RADFN=$P(DATA,U),RADTI=$P(DATA,U,2),RACNI=$P(DATA,U,3),RARPT=$P(DATA,U,4)
"RTN","MAGJUTL4",127,0)
 S STOUT="",REPLY="0^Getting image verification status."
"RTN","MAGJUTL4",128,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJUTL4",129,0)
 E  I RARPT D RPT2DPT(RARPT,.X) I X S RADFN=+X,RADTI=$P(X,U,2),RACNI=$P(X,U,3) I RADFN,RADTI,RACNI
"RTN","MAGJUTL4",130,0)
 E  S REPLY="0^Image Verification Status request contains invalid case pointer ("_DATA_")" G STATCHKZ
"RTN","MAGJUTL4",131,0)
 S STATUS=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,3)
"RTN","MAGJUTL4",132,0)
 I STATUS="" S REPLY="0^Image Verification Status request error--no Exam Status is defined for ("_DATA_")" G STATCHKZ
"RTN","MAGJUTL4",133,0)
 S VCAT=$P(^RA(72,STATUS,0),U,9),ORDER=$P(^(0),U,3)
"RTN","MAGJUTL4",134,0)
 I VCAT]"" D  G STATCHK2:STOUT
"RTN","MAGJUTL4",135,0)
 . I "EDT"[VCAT S STOUT=$S(VCAT="E":2,1:3) ; Examined or Interpreted
"RTN","MAGJUTL4",136,0)
 . E  I VCAT="W" S STOUT=1 ; Not yet Verified
"RTN","MAGJUTL4",137,0)
 I ORDER=9 S STOUT=3  ; Completed exam
"RTN","MAGJUTL4",138,0)
 E  I ORDER=0 S REPLY="0^Exam Cancelled"
"RTN","MAGJUTL4",139,0)
 E  I ORDER=1 S STOUT=1  ; Waiting for exam
"RTN","MAGJUTL4",140,0)
STATCHK2 ;
"RTN","MAGJUTL4",141,0)
 I STOUT<2 D
"RTN","MAGJUTL4",142,0)
 . F X="S","R","T" I $D(^VA(200,"ARC",X,DUZ)) S STOUT=4 Q  ; Radiologist or Tech -- OK to access
"RTN","MAGJUTL4",143,0)
STATCHKZ ;
"RTN","MAGJUTL4",144,0)
 I STOUT S REPLY=STOUT_U_$S(STOUT=1:"Images not yet verified",STOUT=2:"Images verified by Technologist",STOUT=3:"Images interpreted by Radiologist",STOUT=4:"Radiology professional--OK to view images.",1:"")
"RTN","MAGJUTL4",145,0)
 S MAGGRY=REPLY
"RTN","MAGJUTL4",146,0)
 Q
"RTN","MAGJUTL4",147,0)
 ;
"RTN","MAGJUTL4",148,0)
REMSCRN(MAGGRY,DATA) ; User set/clear flag to show/not show remote exams only
"RTN","MAGJUTL4",149,0)
 ; RPC: MAGJ REMOTESCREEN
"RTN","MAGJUTL4",150,0)
 ;       ; Input in DATA: 1/0 1=show remote only; 0=show all exams
"RTN","MAGJUTL4",151,0)
 ;   Return: Reply^Code~msg
"RTN","MAGJUTL4",152,0)
 ;    Reply -- 0=Problem; 1=Success
"RTN","MAGJUTL4",153,0)
 ;    Code -- 4=Error; 1=ok
"RTN","MAGJUTL4",154,0)
 ;    msg -- display text if error
"RTN","MAGJUTL4",155,0)
 ;
"RTN","MAGJUTL4",156,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR3^MAGJUTL4"
"RTN","MAGJUTL4",157,0)
 N REPLY
"RTN","MAGJUTL4",158,0)
 N DIQUIET S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",159,0)
 I $D(DATA),(DATA=0!(DATA=1))
"RTN","MAGJUTL4",160,0)
 E  S REPLY="0^4~REMOTESCREEN request has invalid parameter ("_$G(DATA)_")" G REMSCRNZ
"RTN","MAGJUTL4",161,0)
 S MAGJOB("REMOTESCREEN")=DATA,REPLY="1^1~"_DATA
"RTN","MAGJUTL4",162,0)
REMSCRNZ ;
"RTN","MAGJUTL4",163,0)
 S MAGGRY=REPLY
"RTN","MAGJUTL4",164,0)
 Q
"RTN","MAGJUTL4",165,0)
 ;
"RTN","MAGJUTL4",166,0)
RPT2DPT(RARPT,RET) ; Input RARPT. Return RET containing exam ss values for ^RADPT
"RTN","MAGJUTL4",167,0)
 ;
"RTN","MAGJUTL4",168,0)
 N DFN,DTI,CNI S (DFN,DTI,CNI)=""
"RTN","MAGJUTL4",169,0)
 I RARPT?1N.N,$D(^RARPT(RARPT)) S X=$G(^(RARPT,0)) I X]"" D
"RTN","MAGJUTL4",170,0)
 . S X=$P(X,U)
"RTN","MAGJUTL4",171,0)
 . S X=$O(^RADPT("ADC",X,0)) I X S DFN=X,DTI=$O(^(X,0)),CNI=$O(^(DTI,0))
"RTN","MAGJUTL4",172,0)
 . S RET=DFN_U_DTI_U_CNI
"RTN","MAGJUTL4",173,0)
 E  S RET=""
"RTN","MAGJUTL4",174,0)
 Q
"RTN","MAGJUTL4",175,0)
 ;
"RTN","MAGJUTL4",176,0)
ERR1 N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL4",177,0)
ERR3 N ERR S ERR=$$EC^%ZOSV S MAGGRY="0^4~"_ERR
"RTN","MAGJUTL4",178,0)
ERR D @^%ZOSF("ERRTN")
"RTN","MAGJUTL4",179,0)
 Q:$Q 1  Q
"RTN","MAGJUTL4",180,0)
 ;
"RTN","MAGJUTL4",181,0)
END Q  ; 
"RTN","MAGJUTL5")
0^12^B32992416
"RTN","MAGJUTL5",1,0)
MAGJUTL5 ;WOIFO/JHC - VistARad RPCs ; [ 07/3/2006 17:17 ]
"RTN","MAGJUTL5",2,0)
 ;;3.0;IMAGING;**65,76**;Jun 22, 2007;Build 19
"RTN","MAGJUTL5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL5",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL5",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL5",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL5",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL5",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL5",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL5",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL5",11,0)
 ;; |                                                               |
"RTN","MAGJUTL5",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL5",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL5",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL5",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL5",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL5",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL5",18,0)
 ;;
"RTN","MAGJUTL5",19,0)
 Q
"RTN","MAGJUTL5",20,0)
 ; adapted from MAGGTU4
"RTN","MAGJUTL5",21,0)
GETVER(SVRVER,SVRTVER,ALLOWCL) ;
"RTN","MAGJUTL5",22,0)
 ; The Server Version SVRVER is hardcoded to match the Client
"RTN","MAGJUTL5",23,0)
 ; so this Routine must be edited/distributed with a new Client
"RTN","MAGJUTL5",24,0)
 ; released Client will have the T version that the server expects
"RTN","MAGJUTL5",25,0)
 ;
"RTN","MAGJUTL5",26,0)
 S SVRVER="3.0.76",SVRTVER=14  ; <*> Edit this line for each patch/T-version
"RTN","MAGJUTL5",27,0)
 ;
"RTN","MAGJUTL5",28,0)
 S ALLOWCL="|3.0.65|"  ;
"RTN","MAGJUTL5",29,0)
 Q
"RTN","MAGJUTL5",30,0)
 ;
"RTN","MAGJUTL5",31,0)
CHKVER(MAGRY,CLVER,PLC,SVERSION) ;
"RTN","MAGJUTL5",32,0)
 ; Input CLVER is the version of the Client
"RTN","MAGJUTL5",33,0)
 ;    format: Major.Minor.Patch.Build# (Build #=T-ver) eg 3.0.18.132
"RTN","MAGJUTL5",34,0)
 ; Ver 3.0.65.n is first client Ver that makes this call
"RTN","MAGJUTL5",35,0)
 ; 3 possible return codes in MAGRY:
"RTN","MAGJUTL5",36,0)
 ;   2^n~msg : Client displays a message and continues
"RTN","MAGJUTL5",37,0)
 ;   1^1~msg : Client continues without displaying a message
"RTN","MAGJUTL5",38,0)
 ;   0^n~msg : Client displays a message then Aborts
"RTN","MAGJUTL5",39,0)
 ; PLC returns 2006.1 pointer
"RTN","MAGJUTL5",40,0)
 ;
"RTN","MAGJUTL5",41,0)
 S CLVER=$G(CLVER),PLC="",MAGRY=""
"RTN","MAGJUTL5",42,0)
 N SV,ST,CV,CT,CP,ALLOWV,TESTFLAG,SVSTAT
"RTN","MAGJUTL5",43,0)
 ; SVERSION = Full Server Version -> (3.0.18.132 or 3.0.18); test has 4, release has 3 parts
"RTN","MAGJUTL5",44,0)
 ; SV = Server Version -> (3.0.18); only 1st 3 parts
"RTN","MAGJUTL5",45,0)
 ; ST = Server T Version -> defined to always match client part-4
"RTN","MAGJUTL5",46,0)
 ; CV = Client Version, w/out build #
"RTN","MAGJUTL5",47,0)
 ; CT = Client T Version alone
"RTN","MAGJUTL5",48,0)
 ; CP = Client Patch alone
"RTN","MAGJUTL5",49,0)
 ; ALLOWV = Hard coded string of allowed clients for this KIDS.
"RTN","MAGJUTL5",50,0)
 ; TESTFLAG = 1/0  -- 1=Test vs of server code; 0=Release vs
"RTN","MAGJUTL5",51,0)
 ;Below is placeholder for future enhancement:
"RTN","MAGJUTL5",52,0)
 ;I $P(CLVER,"|",2)="RIV" D  Q
"RTN","MAGJUTL5",53,0)
 ;. S MAGJOB("RIV")=1
"RTN","MAGJUTL5",54,0)
 ;. ; Allowing |RIV clients always
"RTN","MAGJUTL5",55,0)
 ;. S MAGRY="1^1~Allowing Remote Image Connection"
"RTN","MAGJUTL5",56,0)
 ;
"RTN","MAGJUTL5",57,0)
 I $G(DUZ(2)) S PLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGJUTL5",58,0)
 ;  Quit if we don't have a valid DUZ(2) or valid PLACE: ^MAG(2006.1,PLC)
"RTN","MAGJUTL5",59,0)
 I 'PLC S MAGRY="0^4~Error verifying Imaging Site (Place) -- Contact Imaging support." Q
"RTN","MAGJUTL5",60,0)
 ;
"RTN","MAGJUTL5",61,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGJUTL5",62,0)
 S CLVER=$P(CLVER,"|")
"RTN","MAGJUTL5",63,0)
 S CV=$P(CLVER,".",1,3),CT=+$P(CLVER,".",4),CP=+$P(CLVER,".",3)
"RTN","MAGJUTL5",64,0)
 ;
"RTN","MAGJUTL5",65,0)
 D VERSTAT(.SVSTAT,SV)
"RTN","MAGJUTL5",66,0)
 I 'SVSTAT S MAGRY(0)=SVSTAT Q  ; KIDS status for this version indeterminate
"RTN","MAGJUTL5",67,0)
 S TESTFLAG=(+SVSTAT=1)
"RTN","MAGJUTL5",68,0)
 S SVERSION=SV
"RTN","MAGJUTL5",69,0)
 I TESTFLAG S SVERSION=SV_"."_ST
"RTN","MAGJUTL5",70,0)
 ; Check Version differences:
"RTN","MAGJUTL5",71,0)
 I (CV'=SV) D  Q
"RTN","MAGJUTL5",72,0)
 . I '(ALLOWV[("|"_CV_"|")) D  Q
"RTN","MAGJUTL5",73,0)
 . . S MAGRY="0^4~VistARad Workstation software version "_CLVER_" is not compatible with the VistA server version "_SVERSION_".  Contact Imaging support. (CNA)"
"RTN","MAGJUTL5",74,0)
 . ; Warn the Client, allow to continue
"RTN","MAGJUTL5",75,0)
 . I TESTFLAG S MAGRY="2^3~VistARad Workstation software version "_CLVER_" is running with VistA server TEST Version "_SVERSION_" --  VistARad will Continue, but contact Imaging Support if problems occur. (Pdif)"
"RTN","MAGJUTL5",76,0)
 . E  S MAGRY="2^3~VistARad Workstation software version "_CLVER_" is running with VistA server Version "_SVERSION_" --  VistARad will Continue, but contact Imaging Support to install Released Version. (RPdif)"
"RTN","MAGJUTL5",77,0)
 . Q
"RTN","MAGJUTL5",78,0)
 ; Versions are the Same: If T versions are not, warn the Client if needed.
"RTN","MAGJUTL5",79,0)
 ; Released Client (of any version) will have the T version that the server
"RTN","MAGJUTL5",80,0)
 ; expects, and no warning will be displayed.
"RTN","MAGJUTL5",81,0)
 I CT,(CT'=ST) D  Q
"RTN","MAGJUTL5",82,0)
 . I TESTFLAG S MAGRY="2^3~VistARad Workstation software vs. "_CLVER_" is running with VistA server TEST vs. "_SVERSION_" --  VistARad will Continue, but contact Imaging Support " D
"RTN","MAGJUTL5",83,0)
 . . I CT<ST S MAGRY=MAGRY_"to install updated client software.  (Tdif-1)"
"RTN","MAGJUTL5",84,0)
 . . E  S MAGRY=MAGRY_"to update the Server software.  (Tdif-2)"
"RTN","MAGJUTL5",85,0)
 . E  S MAGRY="2^3~VistARad Workstation software vs. "_CLVER_" is running with VistA server vs. "_SVERSION_" --  VistARad will Continue, but contact Imaging Support to install Released Version. (RVdif)"
"RTN","MAGJUTL5",86,0)
 . Q
"RTN","MAGJUTL5",87,0)
 ; Client and Server Versions are the same
"RTN","MAGJUTL5",88,0)
 S MAGRY="1^1~Version Check OK. Server: "_SVERSION_" Client: "_CLVER Q
"RTN","MAGJUTL5",89,0)
 Q
"RTN","MAGJUTL5",90,0)
 ;
"RTN","MAGJUTL5",91,0)
P32STOP(RET) ; logic to indicate P32 should no longer function, once the RELEASED P76 is installed
"RTN","MAGJUTL5",92,0)
 ; This is invoked from magjutl3, P76 version, if a P32 client is launched
"RTN","MAGJUTL5",93,0)
 ; RET=1/0 ^ text -- 0 = OK to run P32; 1 = Not OK
"RTN","MAGJUTL5",94,0)
 N SV,ST,ALLOWV,SVSTAT,RELEASED
"RTN","MAGJUTL5",95,0)
 S RET="0^P32 supported" ; init return to allow p32 to function
"RTN","MAGJUTL5",96,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGJUTL5",97,0)
 D VERSTAT(.SVSTAT,SV)
"RTN","MAGJUTL5",98,0)
 I 'SVSTAT S RET="0^Error, but on side of caution, allow running." Q  ; KIDS status for this version indeterminate
"RTN","MAGJUTL5",99,0)
 S RELEASED=(+SVSTAT=2)
"RTN","MAGJUTL5",100,0)
 I RELEASED!(SV'="3.0.76") S RET="1^P32 support over"  ; don't allow P32 to function
"RTN","MAGJUTL5",101,0)
 Q
"RTN","MAGJUTL5",102,0)
 ;
"RTN","MAGJUTL5",103,0)
VERSTAT(MAGRY,MAGVER) ;
"RTN","MAGJUTL5",104,0)
 ; Returns the status of an Imaging Version
"RTN","MAGJUTL5",105,0)
 ; Input:
"RTN","MAGJUTL5",106,0)
 ;   MAGVER - Version number in format  MAG*3.0*59 or 3.0.59
"RTN","MAGJUTL5",107,0)
 ; Return: MAGRY = 0/1/2 -- see below; 0: abort; else, OK to proceed
"RTN","MAGJUTL5",108,0)
 ;
"RTN","MAGJUTL5",109,0)
 N VERI,TVER,MAGERR
"RTN","MAGJUTL5",110,0)
 I +MAGVER S MAGVER="MAG*"_$P(MAGVER,".",1,2)_"*"_$P(MAGVER,".",3)
"RTN","MAGJUTL5",111,0)
 S VERI=$$FIND1^DIC(9.6,"","O",MAGVER,"","","MAGERR")
"RTN","MAGJUTL5",112,0)
 I 'VERI S MAGRY="0^4~There is No KIDs Install record."
"RTN","MAGJUTL5",113,0)
 E  D
"RTN","MAGJUTL5",114,0)
 . S TVER=$$GET1^DIQ(9.6,VERI_",","ALPHA/BETA TESTING")
"RTN","MAGJUTL5",115,0)
 . I TVER="YES" S MAGRY="1^Alpha/Beta Version"
"RTN","MAGJUTL5",116,0)
 . E  I TVER="NO" S MAGRY="2^Released Version"
"RTN","MAGJUTL5",117,0)
 . E  S MAGRY="0^4~KIDs Install Status is unknown--contact Customer Support."
"RTN","MAGJUTL5",118,0)
 Q       ;
"RTN","MAGJUTL5",119,0)
END ;
"VER")
8.0^22.0
**END**
**END**
