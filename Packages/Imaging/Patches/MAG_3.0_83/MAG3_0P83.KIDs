KIDS Distribution saved on Mar 29, 2010@10:57:10
VistA Imaging V3.0 - Patch 83 - 03/29/2010 10:57AM
**KIDS**:MAG*3.0*83^

**INSTALL NAME**
MAG*3.0*83
"BLD",3463,0)
MAG*3.0*83^IMAGING^0^3100329^y
"BLD",3463,1,0)
^^36^36^3100329^
"BLD",3463,1,1,0)
Version 3.0 Patch 083 - Display Enhancements VA-DOD Image Exchange
"BLD",3463,1,2,0)
 
"BLD",3463,1,3,0)
 
"BLD",3463,1,4,0)
This package contains a KIDS component
"BLD",3463,1,5,0)
for patch 83.
"BLD",3463,1,6,0)
 
"BLD",3463,1,7,0)
This package transports the remote procedure call named MAG DOD GET 
"BLD",3463,1,8,0)
STUDIES IEN.
"BLD",3463,1,9,0)
 
"BLD",3463,1,10,0)
This package contains a KIDS component
"BLD",3463,1,11,0)
for patch 83.
"BLD",3463,1,12,0)
 
"BLD",3463,1,13,0)
This package transports the remote procedure call named MAG DOD GET 
"BLD",3463,1,14,0)
STUDIES UID.
"BLD",3463,1,15,0)
 
"BLD",3463,1,16,0)
This package contains a KIDS component
"BLD",3463,1,17,0)
for patch 83.
"BLD",3463,1,18,0)
 
"BLD",3463,1,19,0)
This package transports the remote procedure call named MAG IMAGE CURRENT 
"BLD",3463,1,20,0)
INFO.
"BLD",3463,1,21,0)
 
"BLD",3463,1,22,0)
Version 3.0 Patch 083 - Display Enhancements VA-DOD Image Exchange
"BLD",3463,1,23,0)
 
"BLD",3463,1,24,0)
This package contains a KIDS component
"BLD",3463,1,25,0)
for patch 83.
"BLD",3463,1,26,0)
 
"BLD",3463,1,27,0)
This package transports the FileMan data dictionary named 2006.95;100.
"BLD",3463,1,28,0)
 
"BLD",3463,1,29,0)
Routines:
"BLD",3463,1,30,0)
MAGDQR21    new value = 147169782
"BLD",3463,1,31,0)
MAGGTII     new value = 44233729
"BLD",3463,1,32,0)
MAGIPS83    new value = 17244243
"BLD",3463,1,33,0)
MAGLOG      new value = 8117581
"BLD",3463,1,34,0)
 
"BLD",3463,1,35,0)
Please note that routine MAGIPS83 is deleted after the KIDS Build is
"BLD",3463,1,36,0)
installed.
"BLD",3463,4,0)
^9.64PA^2006.95^1
"BLD",3463,6.3)
V3.0p83Build1690_T34
"BLD",3463,4,2006.95,0)
2006.95
"BLD",3463,4,2006.95,2,0)
^9.641^2006.95^1
"BLD",3463,4,2006.95,2,2006.95,0)
IMAGE ACCESS LOG  (File-top level)
"BLD",3463,4,2006.95,2,2006.95,1,0)
^9.6411^100^1
"BLD",3463,4,2006.95,2,2006.95,1,100,0)
ADDITIONAL DATA
"BLD",3463,4,2006.95,222)
y^y^p^^^^n^^n
"BLD",3463,4,2006.95,224)

"BLD",3463,4,"APDD",2006.95,2006.95)

"BLD",3463,4,"APDD",2006.95,2006.95)

"BLD",3463,4,"APDD",2006.95,2006.95,100)

"BLD",3463,4,"B",2006.95,2006.95)

"BLD",3463,"ABNS",0)
^9.66A^^
"BLD",3463,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",3463,"INID")
n^y^n
"BLD",3463,"INIT")
POST^MAGIPS83
"BLD",3463,"KRN",0)
^9.67PA^8994^19
"BLD",3463,"KRN",.4,0)
.4
"BLD",3463,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.401,0)
.401
"BLD",3463,"KRN",.401,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.402,0)
.402
"BLD",3463,"KRN",.402,"NM",0)
^9.68A^^
"BLD",3463,"KRN",.403,0)
.403
"BLD",3463,"KRN",.5,0)
.5
"BLD",3463,"KRN",.84,0)
.84
"BLD",3463,"KRN",.84,"NM",0)
^9.68A^^
"BLD",3463,"KRN",3.6,0)
3.6
"BLD",3463,"KRN",3.8,0)
3.8
"BLD",3463,"KRN",9.2,0)
9.2
"BLD",3463,"KRN",9.8,0)
9.8
"BLD",3463,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",3463,"KRN",9.8,"NM",1,0)
MAGDQR21^^0^B147169782
"BLD",3463,"KRN",9.8,"NM",2,0)
MAGGTII^^0^B44233729
"BLD",3463,"KRN",9.8,"NM",3,0)
MAGLOG^^0^B8117581
"BLD",3463,"KRN",9.8,"NM","B","MAGDQR21",1)

"BLD",3463,"KRN",9.8,"NM","B","MAGGTII",2)

"BLD",3463,"KRN",9.8,"NM","B","MAGIPS83",3)

"BLD",3463,"KRN",9.8,"NM","B","MAGLOG",4)

"BLD",3463,"KRN",19,0)
19
"BLD",3463,"KRN",19,"NM",0)
^9.68A^^
"BLD",3463,"KRN",19.1,0)
19.1
"BLD",3463,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",3463,"KRN",19.1,"NM",1,0)
MAG VIX ADMIN^^0
"BLD",3463,"KRN",19.1,"NM","B","MAG VIX ADMIN",1)

"BLD",3463,"KRN",101,0)
101
"BLD",3463,"KRN",101,"NM",0)
^9.68A^^
"BLD",3463,"KRN",409.61,0)
409.61
"BLD",3463,"KRN",771,0)
771
"BLD",3463,"KRN",771,"NM",0)
^9.68A^^
"BLD",3463,"KRN",870,0)
870
"BLD",3463,"KRN",870,"NM",0)
^9.68A^^
"BLD",3463,"KRN",8989.51,0)
8989.51
"BLD",3463,"KRN",8989.52,0)
8989.52
"BLD",3463,"KRN",8994,0)
8994
"BLD",3463,"KRN",8994,"NM",0)
^9.68A^3^3
"BLD",3463,"KRN",8994,"NM",1,0)
MAG DOD GET STUDIES IEN^^0
"BLD",3463,"KRN",8994,"NM",2,0)
MAG DOD GET STUDIES UID^^0
"BLD",3463,"KRN",8994,"NM",3,0)
MAG IMAGE CURRENT INFO^^0
"BLD",3463,"KRN",8994,"NM","B","MAG DOD GET STUDIES IEN",1)

"BLD",3463,"KRN",8994,"NM","B","MAG DOD GET STUDIES UID",2)

"BLD",3463,"KRN",8994,"NM","B","MAG IMAGE CURRENT INFO",3)

"BLD",3463,"KRN","B",.4,.4)

"BLD",3463,"KRN","B",.401,.401)

"BLD",3463,"KRN","B",.402,.402)

"BLD",3463,"KRN","B",.403,.403)

"BLD",3463,"KRN","B",.5,.5)

"BLD",3463,"KRN","B",.84,.84)

"BLD",3463,"KRN","B",3.6,3.6)

"BLD",3463,"KRN","B",3.8,3.8)

"BLD",3463,"KRN","B",9.2,9.2)

"BLD",3463,"KRN","B",9.8,9.8)

"BLD",3463,"KRN","B",19,19)

"BLD",3463,"KRN","B",19.1,19.1)

"BLD",3463,"KRN","B",101,101)

"BLD",3463,"KRN","B",409.61,409.61)

"BLD",3463,"KRN","B",771,771)

"BLD",3463,"KRN","B",870,870)

"BLD",3463,"KRN","B",8989.51,8989.51)

"BLD",3463,"KRN","B",8989.52,8989.52)

"BLD",3463,"KRN","B",8994,8994)

"FIA",2006.95)
IMAGE ACCESS LOG
"FIA",2006.95,0)
^MAG(2006.95,
"FIA",2006.95,0,0)
2006.95I
"FIA",2006.95,0,1)
y^y^p^^^^n^^n
"FIA",2006.95,0,10)

"FIA",2006.95,0,11)

"FIA",2006.95,0,"RLRO")

"FIA",2006.95,2006.95)
1
"FIA",2006.95,2006.95,100)

"INIT")
POST^MAGIPS83
"KRN",19.1,123457,-1)
0^1
"KRN",19.1,123457,0)
MAG VIX ADMIN^VIX Administrator^l^n^1
"KRN",19.1,123457,1,0)
^^3^3^3070215^
"KRN",19.1,123457,1,1,0)
This key gives the holder permission to perform
"KRN",19.1,123457,1,2,0)
Administrator-related activities
"KRN",19.1,123457,1,3,0)
on the ViX (VistA/DOD Exchange) system.
"KRN",8994,123458,-1)
0^1
"KRN",8994,123458,0)
MAG DOD GET STUDIES IEN^STUDY2^MAGDQR21^2^R^0^^0^3
"KRN",8994,123458,1,0)
^^2^2^3061107^
"KRN",8994,123458,1,1,0)
This Remote Procedure returns information about studies,
"KRN",8994,123458,1,2,0)
based upon the IEN (File #2005) of the image group that is provided as a parameter.
"KRN",8994,123458,2,0)
^8994.02A^1^1
"KRN",8994,123458,2,1,0)
GROUPS^2^1000^1^1
"KRN",8994,123458,2,1,1,0)
^^6^6^3061107^
"KRN",8994,123458,2,1,1,1,0)
This parameter can either be provided as a single value or as an array.
"KRN",8994,123458,2,1,1,2,0)
Each value found (either GROUPS or GROUPS(i)) will be evaluated by the Remote Procedure.
"KRN",8994,123458,2,1,1,3,0)
Each value found must be the IEN in file #2005 of a group of images.
"KRN",8994,123458,2,1,1,4,0)
For each group specified, the Remote Procedure will find the study to which
"KRN",8994,123458,2,1,1,5,0)
that group belongs, and then return
"KRN",8994,123458,2,1,1,6,0)
a hierarchical list of all series and images in that study.
"KRN",8994,123458,2,"B","GROUPS",1)

"KRN",8994,123458,2,"PARAMSEQ",1,1)

"KRN",8994,123458,3,0)
^^28^28^3061107^
"KRN",8994,123458,3,1,0)
This Remote Procedure returns an array with information.
"KRN",8994,123458,3,2,0)
If there is an error in the execution of the Remote Procedure,
"KRN",8994,123458,3,3,0)
the first element of this array with start with a negative number,
"KRN",8994,123458,3,4,0)
and the rest of the value in that array element will describe the error.
"KRN",8994,123458,3,5,0)
 
"KRN",8994,123458,3,6,0)
Otherwise, the value of the first element is the number of valid further elements
"KRN",8994,123458,3,7,0)
and each further element of the output array will follow the
"KRN",8994,123458,3,8,0)
general format of a keyword, then a vertical bar, and then one or more
"KRN",8994,123458,3,9,0)
values associated with that keyword.
"KRN",8994,123458,3,10,0)
For example:
"KRN",8994,123458,3,11,0)
    OUT(1)=17
"KRN",8994,123458,3,12,0)
    OUT(2)="STUDY_UID|1.2.840.113754.1.4.660.1.108"
"KRN",8994,123458,3,13,0)
    OUT(3)="STUDY_PAT|35|9865827312V582731|IMAGPATIENT35,35"
"KRN",8994,123458,3,14,0)
    OUT(4)="SERIES_UID|"
"KRN",8994,123458,3,15,0)
    OUT(5)="SERIES_IEN|6196"
"KRN",8994,123458,3,16,0)
    OUT(6)="SERIES_NUMBER|1"
"KRN",8994,123458,3,17,0)
    OUT(7)="IMAGE_UID|1.2.840.113754.1.4.660.1.108.59498.43402.0"
"KRN",8994,123458,3,18,0)
    OUT(8)="IMAGE_IEN|6197"
"KRN",8994,123458,3,19,0)
    OUT(9)="IMAGE_NUMBER|1"
"KRN",8994,123458,3,20,0)
   OUT(10)="IMAGE_ABSTRACT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.ABS"
"KRN",8994,123458,3,21,0)
   OUT(11)="IMAGE_FULL|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.DCM"
"KRN",8994,123458,3,22,0)
   OUT(12)="IMAGE_TEXT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.TXT"
"KRN",8994,123458,3,23,0)
   OUT(13)="IMAGE_UID|1.2.840.113754.1.4.660.1.108.59498.43402.1"
"KRN",8994,123458,3,24,0)
   OUT(14)="IMAGE_IEN|6198"
"KRN",8994,123458,3,25,0)
   OUT(15)="IMAGE_NUMBER|1"
"KRN",8994,123458,3,26,0)
   OUT(16)="IMAGE_ABSTRACT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.ABS"
"KRN",8994,123458,3,27,0)
   OUT(17)="IMAGE_FULL|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.DCM"
"KRN",8994,123458,3,28,0)
   OUT(18)="IMAGE_TEXT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.TXT"
"KRN",8994,123459,-1)
0^2
"KRN",8994,123459,0)
MAG DOD GET STUDIES UID^STUDY1^MAGDQR21^2^R^0^^0^3
"KRN",8994,123459,1,0)
^8994.01^2^2^3061107^^
"KRN",8994,123459,1,1,0)
This Remote Procedure returns information about studies,
"KRN",8994,123459,1,2,0)
based upon the Study UID that is provided as a parameter.
"KRN",8994,123459,2,0)
^8994.02A^1^1
"KRN",8994,123459,2,1,0)
STUDIES^2^1000^1^1
"KRN",8994,123459,2,1,1,0)
^8994.021^5^5^3061107^^^
"KRN",8994,123459,2,1,1,1,0)
This parameter can either be provided as a single value or as an array.
"KRN",8994,123459,2,1,1,2,0)
Each value found (either STUDIES or STUDIES(i)) will be evaluated by the Remote Procedure.
"KRN",8994,123459,2,1,1,3,0)
Each value found must be the UID of a study.
"KRN",8994,123459,2,1,1,4,0)
For each study specified, the Remote Procedure will return
"KRN",8994,123459,2,1,1,5,0)
a hierarchical list of all series and images in that study.
"KRN",8994,123459,2,"B","STUDIES",1)

"KRN",8994,123459,2,"PARAMSEQ",1,1)

"KRN",8994,123459,3,0)
^8994.03^28^28^3061107^^
"KRN",8994,123459,3,1,0)
This Remote Procedure returns an array with information.
"KRN",8994,123459,3,2,0)
If there is an error in the execution of the Remote Procedure,
"KRN",8994,123459,3,3,0)
the first element of this array with start with a negative number,
"KRN",8994,123459,3,4,0)
and the rest of the value in that array element will describe the error.
"KRN",8994,123459,3,5,0)
 
"KRN",8994,123459,3,6,0)
Otherwise, the value of the first element is the number of valid further elements
"KRN",8994,123459,3,7,0)
and each further element of the output array will follow the
"KRN",8994,123459,3,8,0)
general format of a keyword, then a vertical bar, and then one or more
"KRN",8994,123459,3,9,0)
values associated with that keyword.
"KRN",8994,123459,3,10,0)
For example:
"KRN",8994,123459,3,11,0)
    OUT(1)=17
"KRN",8994,123459,3,12,0)
    OUT(2)="STUDY_UID|1.2.840.113754.1.4.660.1.108"
"KRN",8994,123459,3,13,0)
    OUT(3)="STUDY_PAT|35|9865827312V582731|IMAGPATIENT35,35"
"KRN",8994,123459,3,14,0)
    OUT(4)="SERIES_UID|"
"KRN",8994,123459,3,15,0)
    OUT(5)="SERIES_IEN|6196"
"KRN",8994,123459,3,16,0)
    OUT(6)="SERIES_NUMBER|1"
"KRN",8994,123459,3,17,0)
    OUT(7)="IMAGE_UID|1.2.840.113754.1.4.660.1.108.59498.43402.0"
"KRN",8994,123459,3,18,0)
    OUT(8)="IMAGE_IEN|6197"
"KRN",8994,123459,3,19,0)
    OUT(9)="IMAGE_NUMBER|1"
"KRN",8994,123459,3,20,0)
   OUT(10)="IMAGE_ABSTRACT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.ABS"
"KRN",8994,123459,3,21,0)
   OUT(11)="IMAGE_FULL|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.DCM"
"KRN",8994,123459,3,22,0)
   OUT(12)="IMAGE_TEXT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006197.TXT"
"KRN",8994,123459,3,23,0)
   OUT(13)="IMAGE_UID|1.2.840.113754.1.4.660.1.108.59498.43402.1"
"KRN",8994,123459,3,24,0)
   OUT(14)="IMAGE_IEN|6198"
"KRN",8994,123459,3,25,0)
   OUT(15)="IMAGE_NUMBER|1"
"KRN",8994,123459,3,26,0)
   OUT(16)="IMAGE_ABSTRACT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.ABS"
"KRN",8994,123459,3,27,0)
   OUT(17)="IMAGE_FULL|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.DCM"
"KRN",8994,123459,3,28,0)
   OUT(18)="IMAGE_TEXT|\\vhaiswclu4\User1$\EdD\Image_Gold\DM\00\61\DM006198.TXT"
"KRN",8994,123460,-1)
0^3
"KRN",8994,123460,0)
MAG IMAGE CURRENT INFO^INFO^MAGDQR04^2^R^0^^0^3
"KRN",8994,123460,1,0)
^^3^3^3050713^
"KRN",8994,123460,1,1,0)
This Remote Procedure returns current values for the various
"KRN",8994,123460,1,2,0)
DICOM tags that are to be included in the header of an exported
"KRN",8994,123460,1,3,0)
image.
"KRN",8994,123460,2,0)
^8994.02A^1^1
"KRN",8994,123460,2,1,0)
IMAGE^1^20^1^1
"KRN",8994,123460,2,1,1,0)
^^4^4^3050713^
"KRN",8994,123460,2,1,1,1,0)
The value of this parameter is a number. This number is a pointer
"KRN",8994,123460,2,1,1,2,0)
into the Image File (#2005).
"KRN",8994,123460,2,1,1,3,0)
This RPC will return information for the image that is identified
"KRN",8994,123460,2,1,1,4,0)
by this pointer-value.
"KRN",8994,123460,2,"B","IMAGE",1)

"KRN",8994,123460,2,"PARAMSEQ",1,1)

"KRN",8994,123460,3,0)
^^7^7^3050713^
"KRN",8994,123460,3,1,0)
The return parameter for this Remote Procedure is an array.
"KRN",8994,123460,3,2,0)
The first element contains a status for the execution of
"KRN",8994,123460,3,3,0)
the request. A negative value indicates a problem,
"KRN",8994,123460,3,4,0)
a positive value represents the number of DICOM tags returned.
"KRN",8994,123460,3,5,0)
 
"KRN",8994,123460,3,6,0)
The other array elements contain the relevant return-values
"KRN",8994,123460,3,7,0)
in the format tag, caret, value.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging Release History
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020328^3020328^.5
"PKG",454,22,1,"PAH",1,0)
83^3100329^.5
"PKG",454,22,1,"PAH",1,1,0)
^9.49011^10^10^3100329
"PKG",454,22,1,"PAH",1,1,1,0)
Routines for Patch 83, Test Build 34.
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
Routines:
"PKG",454,22,1,"PAH",1,1,4,0)
MAGDQR21    value = 20769614
"PKG",454,22,1,"PAH",1,1,5,0)
MAGGTII     value = 9489602
"PKG",454,22,1,"PAH",1,1,6,0)
MAGIPS83    value = 6840204
"PKG",454,22,1,"PAH",1,1,7,0)
MAGLOG      value = 5040605
"PKG",454,22,1,"PAH",1,1,8,0)
 
"PKG",454,22,1,"PAH",1,1,9,0)
Please note that routine MAGIPS83 is deleted after the KIDS Build is
"PKG",454,22,1,"PAH",1,1,10,0)
installed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","MAGDQR21")
0^1^B147169782
"RTN","MAGDQR21",1,0)
MAGDQR21 ;WOIFO/EdM - RPCs for Query/Retrieve SetUp ; 01 Feb 2010 2:26 PM
"RTN","MAGDQR21",2,0)
 ;;3.0;IMAGING;**83**;Mar 19, 2002;Build 1690;Mar 29, 2010
"RTN","MAGDQR21",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDQR21",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR21",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDQR21",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDQR21",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDQR21",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDQR21",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDQR21",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDQR21",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDQR21",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDQR21",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDQR21",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDQR21",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDQR21",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDQR21",17,0)
 ;;
"RTN","MAGDQR21",18,0)
 Q
"RTN","MAGDQR21",19,0)
 ;
"RTN","MAGDQR21",20,0)
GET(OUT,DEST,GATEWAY) ; RPC = MAG GET DICOM DEST
"RTN","MAGDQR21",21,0)
 N D0,D1,N,OK,X
"RTN","MAGDQR21",22,0)
 I $G(DEST)="" D  Q
"RTN","MAGDQR21",23,0)
 . S N=1
"RTN","MAGDQR21",24,0)
 . S X="" F  S X=$O(^MAG(2006.587,"B",X)) Q:X=""  S N=N+1,OUT(N)="B^"_X
"RTN","MAGDQR21",25,0)
 . S X="" F  S X=$O(^MAG(2006.587,"D",X)) Q:X=""  S N=N+1,OUT(N)="D^"_X
"RTN","MAGDQR21",26,0)
 . S OUT(1)=N
"RTN","MAGDQR21",27,0)
 . Q
"RTN","MAGDQR21",28,0)
 ;
"RTN","MAGDQR21",29,0)
 S GATEWAY=$G(GATEWAY) S:GATEWAY="--All DICOM Gateways--" GATEWAY=""
"RTN","MAGDQR21",30,0)
 S D0=0,OK=0 F  S D0=$O(^MAG(2006.587,D0)) Q:'D0  D  Q:OK
"RTN","MAGDQR21",31,0)
 . S X=$G(^MAG(2006.587,D0,0))
"RTN","MAGDQR21",32,0)
 . Q:$P(X,"^",1)'=DEST
"RTN","MAGDQR21",33,0)
 . I GATEWAY'="",$P(X,"^",5)'=GATEWAY Q
"RTN","MAGDQR21",34,0)
 . S OK=1,N=6
"RTN","MAGDQR21",35,0)
 . S OUT(2)="2^"_$P(X,"^",2)
"RTN","MAGDQR21",36,0)
 . S OUT(3)="3^"_$P(X,"^",3)
"RTN","MAGDQR21",37,0)
 . S OUT(4)="4^"_$P(X,"^",4)
"RTN","MAGDQR21",38,0)
 . S OUT(5)="5^"_$P(X,"^",6)
"RTN","MAGDQR21",39,0)
 . S OUT(6)="6^"_$P(X,"^",7)
"RTN","MAGDQR21",40,0)
 . S D1=0 F  S D1=$O(^MAG(2006.587,D0,1,D1)) Q:'D1  D
"RTN","MAGDQR21",41,0)
 . . S X=$G(^MAG(2006.587,D0,1,D1,0)) Q:$P(X,"^",1)=""
"RTN","MAGDQR21",42,0)
 . . S N=N+1,OUT(N)=X
"RTN","MAGDQR21",43,0)
 . . Q
"RTN","MAGDQR21",44,0)
 . Q
"RTN","MAGDQR21",45,0)
 S OUT(1)=N
"RTN","MAGDQR21",46,0)
 Q
"RTN","MAGDQR21",47,0)
 ;
"RTN","MAGDQR21",48,0)
SET(OUT,DATA,DEST,GATEWAY) ; RPC = MAG SET DICOM DEST
"RTN","MAGDQR21",49,0)
 N D0,D1,I,N,P,Q,O1,O5,O7,OK,T,X
"RTN","MAGDQR21",50,0)
 I $G(DEST)="" S OUT="-1,No Destination Specified." Q
"RTN","MAGDQR21",51,0)
 ;
"RTN","MAGDQR21",52,0)
 S I="" F  S I=$O(DATA(I)) Q:I=""  D
"RTN","MAGDQR21",53,0)
 . S T=DATA(I) Q:T'["^"
"RTN","MAGDQR21",54,0)
 . I +T=2 S P(2)=$P(T,"^",2) Q
"RTN","MAGDQR21",55,0)
 . I +T=3 S P(3)=$P(T,"^",2) Q
"RTN","MAGDQR21",56,0)
 . I +T=4 S P(4)=$P(T,"^",2) Q
"RTN","MAGDQR21",57,0)
 . I +T=5 S P(6)=$P(T,"^",2) Q
"RTN","MAGDQR21",58,0)
 . I +T=6 S P(7)=$P(T,"^",2) Q
"RTN","MAGDQR21",59,0)
 . S Q($P(T,"^",1))=(+$P(T,"^",2))_"^"_(+$P(T,"^",3))
"RTN","MAGDQR21",60,0)
 . Q
"RTN","MAGDQR21",61,0)
 ;
"RTN","MAGDQR21",62,0)
 S OUT=0
"RTN","MAGDQR21",63,0)
 S GATEWAY=$G(GATEWAY) S:GATEWAY="--All DICOM Gateways--" GATEWAY=""
"RTN","MAGDQR21",64,0)
 S D0=0,OK=0 F  S D0=$O(^MAG(2006.587,D0)) Q:'D0  D  Q:OK
"RTN","MAGDQR21",65,0)
 . S X=$G(^MAG(2006.587,D0,0)),O1=$P(X,"^",1),O5=$P(X,"^",5),O7=$P(X,"^",7)
"RTN","MAGDQR21",66,0)
 . Q:O1'=DEST
"RTN","MAGDQR21",67,0)
 . I GATEWAY'="",O5'=GATEWAY Q
"RTN","MAGDQR21",68,0)
 . S:GATEWAY'="" OK=1 S OUT=OUT+1
"RTN","MAGDQR21",69,0)
 . I O1'="",O5'="",O7'="" K ^MAG(2006.576,"C",O1,O7,O5,D0)
"RTN","MAGDQR21",70,0)
 . I O5'="",O7'="" K ^MAG(2006.587,"D",O5,O7,D0)
"RTN","MAGDQR21",71,0)
 . S I="" F  S I=$O(P(I)) Q:I=""  S:P(I)'="" $P(X,"^",I)=P(I)
"RTN","MAGDQR21",72,0)
 . S:$G(P(7))'="" O7=P(7)
"RTN","MAGDQR21",73,0)
 . S ^MAG(2006.587,D0,0)=X
"RTN","MAGDQR21",74,0)
 . I O1'="",O5'="",O7'="" S ^MAG(2006.576,"C",O1,O7,O5,D0)=""
"RTN","MAGDQR21",75,0)
 . I O5'="",O7'="" S ^MAG(2006.587,"D",O5,O7,D0)=""
"RTN","MAGDQR21",76,0)
 . K ^MAG(2006.587,D0,1)
"RTN","MAGDQR21",77,0)
 . S D1=0,I="" F  S I=$O(Q(I)) Q:I=""  D
"RTN","MAGDQR21",78,0)
 . . S D1=D1+1,^MAG(2006.587,D0,1,D1,0)=I_"^"_Q(I)
"RTN","MAGDQR21",79,0)
 . . S ^MAG(2006.587,D0,1,"B",I,D1)=""
"RTN","MAGDQR21",80,0)
 . . Q
"RTN","MAGDQR21",81,0)
 . S:D1 ^MAG(2006.587,D0,1,0)="^2006.5871SA^"_D1_"^"_D1
"RTN","MAGDQR21",82,0)
 . Q
"RTN","MAGDQR21",83,0)
 Q
"RTN","MAGDQR21",84,0)
 ;
"RTN","MAGDQR21",85,0)
TMPOUT(NAME) N X
"RTN","MAGDQR21",86,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGDQR21",87,0)
 S X=$NA(^TMP("MAG",$J,NAME))
"RTN","MAGDQR21",88,0)
 K @X
"RTN","MAGDQR21",89,0)
 Q X
"RTN","MAGDQR21",90,0)
 ;
"RTN","MAGDQR21",91,0)
STUDY1(OUT,STUDIES) ; RPC = MAG DOD GET STUDIES UID
"RTN","MAGDQR21",92,0)
 N I,N,STUDY,UID
"RTN","MAGDQR21",93,0)
 S N=1 S OUT=$$TMPOUT("STUDY")
"RTN","MAGDQR21",94,0)
 S UID=$G(STUDIES) S:UID'="" STUDY(UID)=""
"RTN","MAGDQR21",95,0)
 S I="" F  S I=$O(STUDIES(I)) Q:I=""  S UID=$G(STUDIES(I)) S:UID'="" STUDY(UID)=""
"RTN","MAGDQR21",96,0)
 S UID="" F  S UID=$O(STUDY(UID)) Q:UID=""  D STUDY(UID)
"RTN","MAGDQR21",97,0)
 S @OUT@(1)=N-1
"RTN","MAGDQR21",98,0)
 Q
"RTN","MAGDQR21",99,0)
 ;
"RTN","MAGDQR21",100,0)
STUDY2(OUT,GROUPS,REQDFN,IMGLESS) ; RPC = MAG DOD GET STUDIES IEN
"RTN","MAGDQR21",101,0)
 ; CR, 5-28-09
"RTN","MAGDQR21",102,0)
 ; IMGLESS is a new flag to speed up queries: if=1 (true), just get study-level 
"RTN","MAGDQR21",103,0)
 ; data, if null or zero get everything. This new flag is optional.
"RTN","MAGDQR21",104,0)
 N I0,I,N,P0,STUDY,UID
"RTN","MAGDQR21",105,0)
 S N=1 S OUT=$$TMPOUT("STUDY")
"RTN","MAGDQR21",106,0)
 S I0=$G(GROUPS) D  S I="" F  S I=$O(GROUPS(I)) Q:I=""  S I0=$G(GROUPS(I)) D
"RTN","MAGDQR21",107,0)
 . Q:'I0
"RTN","MAGDQR21",108,0)
 . F  S P0=$P($G(^MAG(2005,+I0,0)),"^",10) Q:'P0  S I0=P0
"RTN","MAGDQR21",109,0)
 . S UID=$P($G(^MAG(2005,+I0,"PACS")),"^",1) S:UID="" UID="?"
"RTN","MAGDQR21",110,0)
 . S STUDY(UID,I0)=""
"RTN","MAGDQR21",111,0)
 . Q
"RTN","MAGDQR21",112,0)
 S UID="" F  S UID=$O(STUDY(UID)) Q:UID=""  D
"RTN","MAGDQR21",113,0)
 . I UID="?" D  Q
"RTN","MAGDQR21",114,0)
 . . S I0=""
"RTN","MAGDQR21",115,0)
 . . F  S I0=$O(STUDY(UID,I0)) Q:I0=""  D STUDY("",I0,$G(REQDFN),$G(IMGLESS))
"RTN","MAGDQR21",116,0)
 . . Q
"RTN","MAGDQR21",117,0)
 . I UID'="?" D
"RTN","MAGDQR21",118,0)
 . . ; Keep track of the groups, CR, 12-23-09 
"RTN","MAGDQR21",119,0)
 . . ; MLH 1-30-10: First group only (will report all groups with known UID)
"RTN","MAGDQR21",120,0)
 . . S I0=$O(STUDY(UID,"")) Q:I0=""  D STUDY(UID,I0,$G(REQDFN),$G(IMGLESS))
"RTN","MAGDQR21",121,0)
 . Q
"RTN","MAGDQR21",122,0)
 S @OUT@(1)=N-1
"RTN","MAGDQR21",123,0)
 Q
"RTN","MAGDQR21",124,0)
 ;
"RTN","MAGDQR21",125,0)
STUDY(UID,IEN,REQDFN,IMGLESS) ;
"RTN","MAGDQR21",126,0)
 N D0,D1,DFN,F1,F2,F3,I0,IMGCNT,IMGINFO,MAGR0,OBJGRP,OVRDDFN,PAT,QINTEG,STUDY,STUMO,X
"RTN","MAGDQR21",127,0)
 N SERIESARRAY ; array of series numbers for this study
"RTN","MAGDQR21",128,0)
 N TOTIMAGES ; total number of images for all series in this study
"RTN","MAGDQR21",129,0)
 N PATCOUNT ; array of patients having studies with the requested study instance UID
"RTN","MAGDQR21",130,0)
 ;
"RTN","MAGDQR21",131,0)
 ; allow selection of DFN for QI check overrides (VA internal only!)
"RTN","MAGDQR21",132,0)
 S REQDFN=$G(REQDFN)
"RTN","MAGDQR21",133,0)
 S N=N+1,@OUT@(N)="NEXT_STUDY|"_$G(UID)_"|"_$G(IEN)
"RTN","MAGDQR21",134,0)
 I UID'="" S D0="" F  S D0=$O(^MAG(2005,"P",UID,D0)) Q:D0=""  D
"RTN","MAGDQR21",135,0)
 . S:'$P($G(^MAG(2005,D0,0)),"^",10) STUDY(D0)=""
"RTN","MAGDQR21",136,0)
 . Q
"RTN","MAGDQR21",137,0)
 D:$G(IEN)
"RTN","MAGDQR21",138,0)
 . S:'$P($G(^MAG(2005,IEN,0)),"^",10) STUDY(IEN)=""
"RTN","MAGDQR21",139,0)
 . Q
"RTN","MAGDQR21",140,0)
 Q:'$O(STUDY(""))
"RTN","MAGDQR21",141,0)
 S TOTIMAGES=0
"RTN","MAGDQR21",142,0)
 S D0="" F  S D0=$O(STUDY(D0)) Q:D0=""  D
"RTN","MAGDQR21",143,0)
 . S DFN=+$P($G(^MAG(2005,D0,0)),"^",7),PATCOUNT(DFN)=""
"RTN","MAGDQR21",144,0)
 . D  ; add to patient array unless single pt was requested and this isn't that pt
"RTN","MAGDQR21",145,0)
 . . I $G(REQDFN),REQDFN'=DFN Q
"RTN","MAGDQR21",146,0)
 . . S PAT(DFN)=""
"RTN","MAGDQR21",147,0)
 . . Q
"RTN","MAGDQR21",148,0)
 . S D1=0 F  S D1=$O(^MAG(2005,D0,1,D1)) Q:'D1  D
"RTN","MAGDQR21",149,0)
 . . D  ; increment image count unless single pt was requested and this isn't that pt
"RTN","MAGDQR21",150,0)
 . . . I $G(REQDFN),REQDFN'=DFN Q
"RTN","MAGDQR21",151,0)
 . . . S TOTIMAGES=TOTIMAGES+1
"RTN","MAGDQR21",152,0)
 . . . Q
"RTN","MAGDQR21",153,0)
 . . S I0=+$G(^MAG(2005,D0,1,D1,0)) Q:'I0
"RTN","MAGDQR21",154,0)
 . . S DFN=+$P($G(^MAG(2005,I0,0)),"^",7),PATCOUNT(DFN)=""
"RTN","MAGDQR21",155,0)
 . . Q
"RTN","MAGDQR21",156,0)
 . Q
"RTN","MAGDQR21",157,0)
 ;
"RTN","MAGDQR21",158,0)
 S PAT=0,DFN="" F  S DFN=$O(PATCOUNT(DFN)) Q:DFN=""  S PATCOUNT=$G(PATCOUNT)+1
"RTN","MAGDQR21",159,0)
 I PATCOUNT>1 D  Q:'REQDFN  Q:'$D(PAT(REQDFN))
"RTN","MAGDQR21",160,0)
 . ; duplicate study instance UID?
"RTN","MAGDQR21",161,0)
 . S OVRDDFN=$S('REQDFN:0,'$D(PAT(REQDFN)):0,1:1)
"RTN","MAGDQR21",162,0)
 . S N=N+1,@OUT@(N)="STUDY_ERR|"_UID_"|"_PATCOUNT_" different patients"
"RTN","MAGDQR21",163,0)
 . Q
"RTN","MAGDQR21",164,0)
 ;
"RTN","MAGDQR21",165,0)
 S:UID'="" N=N+1,@OUT@(N)="STUDY_UID|"_UID
"RTN","MAGDQR21",166,0)
 D:$G(REQDFN)
"RTN","MAGDQR21",167,0)
 . S I0=""
"RTN","MAGDQR21",168,0)
 . F  S I0=$O(STUDY(I0)) Q:I0=""  Q:$P($G(^MAG(2005,I0,0)),"^",7)=REQDFN
"RTN","MAGDQR21",169,0)
 . Q
"RTN","MAGDQR21",170,0)
 I 'I0 S N=N+1,@OUT@(N)="STUDY_ERR|"_UID_"|Matching study not found for patient "_REQDFN Q
"RTN","MAGDQR21",171,0)
 S:I0 N=N+1,@OUT@(N)="STUDY_IEN|"_I0_"|"_$P($G(^MAG(2005,I0,1,0)),"^",4)
"RTN","MAGDQR21",172,0)
 ; study info for shallow / thin return
"RTN","MAGDQR21",173,0)
 D:$G(IMGLESS)
"RTN","MAGDQR21",174,0)
 . I $G(REQDFN) Q:$P($G(^MAG(2005,I0,0)),"^",7)'=REQDFN
"RTN","MAGDQR21",175,0)
 . Q:'$D(^MAG(2005,I0,1))  ; a single image (e.g., photo ID), not a group
"RTN","MAGDQR21",176,0)
 . D ONEGROUP(I0)
"RTN","MAGDQR21",177,0)
 . S @OUT@(N)="STUDY_IEN|"_I0_"|"_TOTIMAGES_"|"_$G(OBJGRP)
"RTN","MAGDQR21",178,0)
 . Q
"RTN","MAGDQR21",179,0)
 ; check integrity of study record, bail out unless DFN is specified
"RTN","MAGDQR21",180,0)
 ; and matches study DFN (VA internal use only!)
"RTN","MAGDQR21",181,0)
 D CHK^MAGGSQI(.X,I0) S QINTEG='$G(X(0)) D:QINTEG
"RTN","MAGDQR21",182,0)
 . S @OUT@(N)=@OUT@(N)_"|"_$P($G(X(0)),"^",2)
"RTN","MAGDQR21",183,0)
 . Q
"RTN","MAGDQR21",184,0)
 ; override QI check only if image DFN = DFN specified in call
"RTN","MAGDQR21",185,0)
 ; (VA internal only!)
"RTN","MAGDQR21",186,0)
 I QINTEG Q:'REQDFN  Q:$P($G(^MAG(2005,I0,0)),"^",7)'=REQDFN
"RTN","MAGDQR21",187,0)
 ;
"RTN","MAGDQR21",188,0)
 D  ; report patient IEN 
"RTN","MAGDQR21",189,0)
 . ; allow override - internal VA use only!
"RTN","MAGDQR21",190,0)
 . I REQDFN,$D(PAT(REQDFN)) S DFN=REQDFN Q
"RTN","MAGDQR21",191,0)
 . S DFN=$O(PAT(""))
"RTN","MAGDQR21",192,0)
 . Q
"RTN","MAGDQR21",193,0)
 S N=N+1,@OUT@(N)="STUDY_PAT|"_DFN_"|"_$$GETICN^MPIF001(DFN)_"|"_$P($G(^DPT(DFN,0)),"^",1)
"RTN","MAGDQR21",194,0)
 ;
"RTN","MAGDQR21",195,0)
 ; CR, 5-28-09
"RTN","MAGDQR21",196,0)
 ; For study-level data stop here without additional checks 
"RTN","MAGDQR21",197,0)
 Q:$G(IMGLESS)=1
"RTN","MAGDQR21",198,0)
 ;end of check above
"RTN","MAGDQR21",199,0)
 ;
"RTN","MAGDQR21",200,0)
 S D0="" F  S D0=$O(STUDY(D0)) Q:D0=""  D
"RTN","MAGDQR21",201,0)
 . N ANY,I,INUM,SERID,SERIES,SNUM,STS,TMP,U1
"RTN","MAGDQR21",202,0)
 . K ^TMP("MAG",$J,"S")
"RTN","MAGDQR21",203,0)
 . K ^TMP("MAG",$J,"M")
"RTN","MAGDQR21",204,0)
 . D  ; retrieve info for either single or group image
"RTN","MAGDQR21",205,0)
 . . I $D(^MAG(2005,D0,1)) D  Q  ; image is part of a group
"RTN","MAGDQR21",206,0)
 . . . ; allow return of info if DFN defined
"RTN","MAGDQR21",207,0)
 . . . D GROUP^MAGGTIG(.TMP,D0,REQDFN)
"RTN","MAGDQR21",208,0)
 . . . Q
"RTN","MAGDQR21",209,0)
 . . D  ; DEFAULT - image is a single
"RTN","MAGDQR21",210,0)
 . . . N X
"RTN","MAGDQR21",211,0)
 . . . D IMAGEINF^MAGGTU3(.X,D0,REQDFN)
"RTN","MAGDQR21",212,0)
 . . . S TMP=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGDQR21",213,0)
 . . . K @TMP S @TMP@(0)="1^1",@TMP@(1)=X(0)
"RTN","MAGDQR21",214,0)
 . . . Q
"RTN","MAGDQR21",215,0)
 . . Q
"RTN","MAGDQR21",216,0)
 . D:$E($G(TMP),1,5)="^TMP("
"RTN","MAGDQR21",217,0)
 . . N D,G,M,P,X
"RTN","MAGDQR21",218,0)
 . . K @TMP@(0)
"RTN","MAGDQR21",219,0)
 . . S I="" F  S I=$O(@TMP@(I)) Q:I=""  D
"RTN","MAGDQR21",220,0)
 . . . S X=$G(@TMP@(I)),D=$P(X,"^",2) Q:'D
"RTN","MAGDQR21",221,0)
 . . . ; Only if those two pieces really aren't used:
"RTN","MAGDQR21",222,0)
 . . . ;;S $P(X,"^",3)=""
"RTN","MAGDQR21",223,0)
 . . . ;;S $P(X,"^",4)=""
"RTN","MAGDQR21",224,0)
 . . . S ^TMP("MAG",$J,"S",D)=X
"RTN","MAGDQR21",225,0)
 . . . S X=$G(^MAG(2005,D,0)),G=+$P(X,"^",10)
"RTN","MAGDQR21",226,0)
 . . . S M=$P(X,"^",8) S:$E(M,1,4)="RAD " M=$E(M,5,$L(M)) Q:M=""
"RTN","MAGDQR21",227,0)
 . . . S G=$P($G(^MAG(2005,G,2)),"^",6),P=$P($G(^MAG(2005,D,2)),"^",6)
"RTN","MAGDQR21",228,0)
 . . . I P'=74,G'=74 Q
"RTN","MAGDQR21",229,0)
 . . . S ^TMP("MAG",$J,"M",1,D)=M,STUMO(M)=""
"RTN","MAGDQR21",230,0)
 . . . S G=$G(^MAG(2005,D,"SERIESUID"))
"RTN","MAGDQR21",231,0)
 . . . S:G'="" ^TMP("MAG",$J,"M",2,G,M)=""
"RTN","MAGDQR21",232,0)
 . . . Q
"RTN","MAGDQR21",233,0)
 . . Q
"RTN","MAGDQR21",234,0)
 . S (ANY,D1)=0 F  S D1=$O(^MAG(2005,D0,1,D1)) Q:'D1  D
"RTN","MAGDQR21",235,0)
 . . S X=$G(^MAG(2005,D0,1,D1,0)),I0=+X Q:'I0
"RTN","MAGDQR21",236,0)
 . . S ANY=1,I0=+X,SNUM=$P(X,"^",2),INUM=$P(X,"^",3)
"RTN","MAGDQR21",237,0)
 . . S U1=$G(^MAG(2005,I0,"SERIESUID"))
"RTN","MAGDQR21",238,0)
 . . S:SNUM="" SNUM="?" S:INUM="" INUM="?" S:U1="" U1="?"
"RTN","MAGDQR21",239,0)
 . . S SERIES(U1_"_"_SNUM,INUM,I0)="",SERID(U1_"_"_SNUM,U1)=""
"RTN","MAGDQR21",240,0)
 . . Q
"RTN","MAGDQR21",241,0)
 . D:'ANY
"RTN","MAGDQR21",242,0)
 . . S U1=$G(^MAG(2005,D0,"SERIESUID")) S:U1="" U1="?"
"RTN","MAGDQR21",243,0)
 . . S SERIES(U1_"_1",1,D0)="",SERID(U1_"_1",U1)=""
"RTN","MAGDQR21",244,0)
 . . Q
"RTN","MAGDQR21",245,0)
 . S SNUM="" F  S SNUM=$O(SERIES(SNUM)) Q:SNUM=""  D
"RTN","MAGDQR21",246,0)
 . . ; refresh temp image index
"RTN","MAGDQR21",247,0)
 . . N MAGTI S MAGTI=0 ; temp image index
"RTN","MAGDQR21",248,0)
 . . K ^TMP("MAG",$J,"TI")
"RTN","MAGDQR21",249,0)
 . . ;
"RTN","MAGDQR21",250,0)
 . . ; seek qualifying images (no QI or matching known DFN)
"RTN","MAGDQR21",251,0)
 . . S INUM="" F  S INUM=$O(SERIES(SNUM,INUM)) Q:INUM=""  D
"RTN","MAGDQR21",252,0)
 . . . S I0="" F  S I0=$O(SERIES(SNUM,INUM,I0)) Q:I0=""  D
"RTN","MAGDQR21",253,0)
 . . . . ; if dup study instance UID, purge image info and bail out
"RTN","MAGDQR21",254,0)
 . . . . ; unless pt is specified and this image is for that pt
"RTN","MAGDQR21",255,0)
 . . . . S MAGR0=$G(^MAG(2005,I0,0))
"RTN","MAGDQR21",256,0)
 . . . . I REQDFN,$P(MAGR0,"^",7)'=REQDFN K ^TMP("MAG",$J,"S",I0) Q
"RTN","MAGDQR21",257,0)
 . . . . ;
"RTN","MAGDQR21",258,0)
 . . . . S X=$P($G(^MAG(2005,I0,"PACS")),"^",1)
"RTN","MAGDQR21",259,0)
 . . . . S MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="NEXT_IMAGE"
"RTN","MAGDQR21",260,0)
 . . . . S:X'="" MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_UID|"_X
"RTN","MAGDQR21",261,0)
 . . . . S MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_IEN|"_I0
"RTN","MAGDQR21",262,0)
 . . . . S X=$P(MAGR0,"^",10)
"RTN","MAGDQR21",263,0)
 . . . . S:X MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="GROUP_IEN|"_X
"RTN","MAGDQR21",264,0)
 . . . . ; QI check - override only if DFN specified in call
"RTN","MAGDQR21",265,0)
 . . . . ; (VA internal only!)
"RTN","MAGDQR21",266,0)
 . . . . D CHK^MAGGSQI(.X,I0) I '$G(X(0)) D  Q:'REQDFN
"RTN","MAGDQR21",267,0)
 . . . . . S MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_ERR|"_$P($G(X(0)),"^",2)
"RTN","MAGDQR21",268,0)
 . . . . . Q
"RTN","MAGDQR21",269,0)
 . . . . ;
"RTN","MAGDQR21",270,0)
 . . . . D  ; Check on/off line status
"RTN","MAGDQR21",271,0)
 . . . . . N MAGFILE,MAGJOB,MAGXX
"RTN","MAGDQR21",272,0)
 . . . . . S MAGXX=I0 D INFO^MAGGTII
"RTN","MAGDQR21",273,0)
 . . . . . S STS=$P(MAGFILE,"^",11)
"RTN","MAGDQR21",274,0)
 . . . . . Q
"RTN","MAGDQR21",275,0)
 . . . . S:INUM'="?" MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_NUMBER|"_INUM
"RTN","MAGDQR21",276,0)
 . . . . S IMGINFO=$G(^TMP("MAG",$J,"S",I0)) K ^TMP("MAG",$J,"S",I0)
"RTN","MAGDQR21",277,0)
 . . . . S:IMGINFO'="" MAGTI=MAGTI+1,^TMP("MAG",$J,"TI",MAGTI)="IMAGE_INFO|"_IMGINFO
"RTN","MAGDQR21",278,0)
 . . . . Q
"RTN","MAGDQR21",279,0)
 . . . Q
"RTN","MAGDQR21",280,0)
 . . D:$D(^TMP("MAG",$J,"TI"))  ; qualifying images were found
"RTN","MAGDQR21",281,0)
 . . . S U1="" F  S U1=$O(SERID(SNUM,U1)) Q:U1=""  D
"RTN","MAGDQR21",282,0)
 . . . . N M,X
"RTN","MAGDQR21",283,0)
 . . . . S N=N+1,@OUT@(N)="NEXT_SERIES"
"RTN","MAGDQR21",284,0)
 . . . . S:U1'="?" N=N+1,@OUT@(N)="SERIES_UID|"_U1
"RTN","MAGDQR21",285,0)
 . . . . S N=N+1,@OUT@(N)="SERIES_IEN|"_D0
"RTN","MAGDQR21",286,0)
 . . . . ; Officially, there can be only one modality per series,
"RTN","MAGDQR21",287,0)
 . . . . ; so stop when the first modality is found...
"RTN","MAGDQR21",288,0)
 . . . . S X="",M="" F  S M=$O(^TMP("MAG",$J,"M",2,U1,M)) Q:M=""  D  Q:X'=""
"RTN","MAGDQR21",289,0)
 . . . . . S X=$S(X'="":"\",1:"")_M
"RTN","MAGDQR21",290,0)
 . . . . . Q
"RTN","MAGDQR21",291,0)
 . . . . S:X'="" N=N+1,@OUT@(N)="SERIES_MODALITY|"_X
"RTN","MAGDQR21",292,0)
 . . . . Q
"RTN","MAGDQR21",293,0)
 . . . D:SNUM'="?"  ; assign the series number
"RTN","MAGDQR21",294,0)
 . . . . N SERIESNUM
"RTN","MAGDQR21",295,0)
 . . . . D  ; - get series no from study itself if possible, else generate
"RTN","MAGDQR21",296,0)
 . . . . . N SERIESTEST,SGN
"RTN","MAGDQR21",297,0)
 . . . . . S SERIESTEST=$P(SNUM,"_",2)
"RTN","MAGDQR21",298,0)
 . . . . . Q:"+-1234567890"'[$E(SERIESTEST,1)  ; invalid number
"RTN","MAGDQR21",299,0)
 . . . . . S:"+-"[$E(SERIESTEST,1) SGN=$E(SERIESTEST,1)
"RTN","MAGDQR21",300,0)
 . . . . . S:$D(SGN) SERIESTEST=$E(SERIESTEST,2,$L(SERIESTEST))
"RTN","MAGDQR21",301,0)
 . . . . . Q:SERIESTEST'?1.12N
"RTN","MAGDQR21",302,0)
 . . . . . S SERIESTEST=$G(SGN)_SERIESTEST
"RTN","MAGDQR21",303,0)
 . . . . . Q:$D(SERIESARRAY(SERIESTEST))
"RTN","MAGDQR21",304,0)
 . . . . . S SERIESNUM=SERIESTEST
"RTN","MAGDQR21",305,0)
 . . . . . Q
"RTN","MAGDQR21",306,0)
 . . . . D:'$D(SERIESNUM)  ; still need to generate
"RTN","MAGDQR21",307,0)
 . . . . . F SERIESNUM=1:1 Q:'$D(SERIESARRAY(SERIESNUM))
"RTN","MAGDQR21",308,0)
 . . . . . Q
"RTN","MAGDQR21",309,0)
 . . . . S N=N+1,@OUT@(N)="SERIES_NUMBER|"_SERIESNUM
"RTN","MAGDQR21",310,0)
 . . . . S SERIESARRAY(SERIESNUM)=""
"RTN","MAGDQR21",311,0)
 . . . . Q
"RTN","MAGDQR21",312,0)
 . . . S MAGTI=""
"RTN","MAGDQR21",313,0)
 . . . F  S MAGTI=$O(^TMP("MAG",$J,"TI",MAGTI)) Q:'MAGTI  D
"RTN","MAGDQR21",314,0)
 . . . . S N=N+1,@OUT@(N)=^TMP("MAG",$J,"TI",MAGTI)
"RTN","MAGDQR21",315,0)
 . . . . Q
"RTN","MAGDQR21",316,0)
 . . . K ^TMP("MAG",$J,"TI")
"RTN","MAGDQR21",317,0)
 . . . Q
"RTN","MAGDQR21",318,0)
 . . Q
"RTN","MAGDQR21",319,0)
 . S I="" F  S I=$O(^TMP("MAG",$J,"S",I)) Q:I=""  D
"RTN","MAGDQR21",320,0)
 . . S N=N+1,@OUT@(N)="UNUSED_GROUP_INFO|"_^TMP("MAG",$J,"S",I)
"RTN","MAGDQR21",321,0)
 . . Q
"RTN","MAGDQR21",322,0)
 . K ^TMP("MAG",$J,"S")
"RTN","MAGDQR21",323,0)
 . K ^TMP("MAG",$J,"M")
"RTN","MAGDQR21",324,0)
 . Q
"RTN","MAGDQR21",325,0)
 D  ; list all modalities
"RTN","MAGDQR21",326,0)
 . N M,X
"RTN","MAGDQR21",327,0)
 . S X="",M="" F  S M=$O(STUMO(M)) Q:M=""  S X=X_$S(X'="":",",1:"")_M
"RTN","MAGDQR21",328,0)
 . S:X'="" N=N+1,@OUT@(N)="STUDY_MODALITY|"_X
"RTN","MAGDQR21",329,0)
 . Q
"RTN","MAGDQR21",330,0)
 Q
"RTN","MAGDQR21",331,0)
 ;
"RTN","MAGDQR21",332,0)
ONEGROUP(GROUP) ; Get the first IMAGE_IEN for this group
"RTN","MAGDQR21",333,0)
 N IMGIEN,D1,D2,LINE,CNT
"RTN","MAGDQR21",334,0)
 S GROUP=+GROUP
"RTN","MAGDQR21",335,0)
 S IMGIEN="",D1=0
"RTN","MAGDQR21",336,0)
 F  S D1=$O(^MAG(2005,GROUP,D1)) Q:'D1  D
"RTN","MAGDQR21",337,0)
 . S D2=0 F  S D2=$O(^MAG(2005,GROUP,D1,D2)) Q:'D2  D  Q:CNT=1 
"RTN","MAGDQR21",338,0)
 . . I D1,D2>0 D
"RTN","MAGDQR21",339,0)
 . . . S CNT=1
"RTN","MAGDQR21",340,0)
 . . . S LINE=$G(^MAG(2005,GROUP,D1,D2,0))
"RTN","MAGDQR21",341,0)
 . . . S:+LINE>0 IMGIEN=+$P(LINE,"^",1)
"RTN","MAGDQR21",342,0)
 . . Q
"RTN","MAGDQR21",343,0)
 . Q
"RTN","MAGDQR21",344,0)
 I $G(IMGIEN)="" S IMGIEN="0^Error 1 - First Image not available"
"RTN","MAGDQR21",345,0)
 S OBJGRP=IMGIEN
"RTN","MAGDQR21",346,0)
 Q
"RTN","MAGGTII")
0^2^B44233729
"RTN","MAGGTII",1,0)
MAGGTII ;WOIFO/GEK - RETURN IMAGE INFO ; 08 Jan 2010 2:28 PM
"RTN","MAGGTII",2,0)
 ;;3.0;IMAGING;**8,48,63,59,83**;Mar 19, 2002;Build 1690;Mar 29, 2010
"RTN","MAGGTII",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTII",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTII",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTII",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTII",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTII",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTII",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTII",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTII",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTII",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTII",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTII",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTII",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",17,0)
 ;;
"RTN","MAGGTII",18,0)
 ; CALL WITH MAGXX=IEN of IMAGE FILE (2005)
"RTN","MAGGTII",19,0)
 ; RETURNS MAGFILE='^' delimited string of Image information.
"RTN","MAGGTII",20,0)
 ; 
"RTN","MAGGTII",21,0)
 ; 
"RTN","MAGGTII",22,0)
INFO ;Get info for an Image File entry
"RTN","MAGGTII",23,0)
 ; We assume that MAGXX exists and is the Image File entry
"RTN","MAGGTII",24,0)
 ; We return a '^' delimited string for the Image entry.
"RTN","MAGGTII",25,0)
 ; $P(1^2^3)   IEN^Image FullPath and name^Abstract FullPath and Name
"RTN","MAGGTII",26,0)
 ; $P(4)       SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",27,0)
 ; $P(5)       PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",28,0)
 ; $P(6)       OBJECT TYPE
"RTN","MAGGTII",29,0)
 ; $P(7)       PROCEDURE field
"RTN","MAGGTII",30,0)
 ; $P(8)       display date
"RTN","MAGGTII",31,0)
 ; $P(9)       to return the PARENT DATA FILE image pointer
"RTN","MAGGTII",32,0)
 ; $p(10)      return the ABSTYPE  'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",33,0)
 ; change $p(11) from A or O to 'M' 'W' or 'O'.  Same as Abs
"RTN","MAGGTII",34,0)
 ; $p(11)      is 'M' magnetic 'W' worm  'O' offline for FullType
"RTN","MAGGTII",35,0)
 ; $p(12^13)   Dicom Series Number  $p(12) and   Image Number  $p(13)
"RTN","MAGGTII",36,0)
 ; $p(14)      is count of images in group, 1 if single image.
"RTN","MAGGTII",37,0)
 ; VISN15
"RTN","MAGGTII",38,0)
 ; $p(15^16)   SiteParameter IEN ^ SiteParameter CODE
"RTN","MAGGTII",39,0)
 ; $P(17)      is err description of Integrity Check
"RTN","MAGGTII",40,0)
 ; $P(18)      Image BIGPath and name             //Patch 5
"RTN","MAGGTII",41,0)
 ; $P(19^20)   Patient DFN  ^ Patient Name; // Patch 3.8
"RTN","MAGGTII",42,0)
 ; $P(21)          Image Class: Clin,Admin,Clin/Admin,Admin/Clin
"RTN","MAGGTII",43,0)
 ; $p(22)      Date Time Image Saved(FLD 7)
"RTN","MAGGTII",44,0)
 ; $p(23)      Document Date    (FLD 110)
"RTN","MAGGTII",45,0)
 ;
"RTN","MAGGTII",46,0)
 N FILETYPE,MAGPREF,MAGJBCP,GRPTYPE,GRPIEN,ABSTYPE,MAGTYPE,MAGJBOL
"RTN","MAGGTII",47,0)
 N MAGOFFLN,FULLTYPE,MAGOBJT,MAGQI,X
"RTN","MAGGTII",48,0)
 N ABSFILE,FULLFILE,BIGFILE,PATCH,MDFN,FNL,PLC,PLCODE
"RTN","MAGGTII",49,0)
 N MAGN0,MAGN2,MAGN40,MAGN100
"RTN","MAGGTII",50,0)
 ;    set the Variables for the Global Nodes of the Image Entry
"RTN","MAGGTII",51,0)
 S MAGN0=$G(^MAG(2005,MAGXX,0))
"RTN","MAGGTII",52,0)
 S MDFN=$P(MAGN0,"^",7)
"RTN","MAGGTII",53,0)
 S MAGN2=$G(^MAG(2005,MAGXX,2))
"RTN","MAGGTII",54,0)
 S MAGN40=$G(^MAG(2005,MAGXX,40))
"RTN","MAGGTII",55,0)
 S MAGN100=$G(^MAG(2005,MAGXX,100))
"RTN","MAGGTII",56,0)
 ; Set Name in Variable, Call $$GET 1 time not 2000
"RTN","MAGGTII",57,0)
 I MDFN I '$D(MAGJOB("PTNM",MDFN)) S MAGJOB("PTNM",MDFN)=$$GET1^DIQ(2,MDFN_",",.01)
"RTN","MAGGTII",58,0)
 I '$D(MAGJOB("NETPLC")) D NETPLCS^MAGGTU6
"RTN","MAGGTII",59,0)
 ;  Object Type
"RTN","MAGGTII",60,0)
 S MAGOBJT=$P(MAGN0,"^",6)
"RTN","MAGGTII",61,0)
 ; if this is a group, change MAGXX to first image in group to get
"RTN","MAGGTII",62,0)
 ;  that abstract to use for the group abstract
"RTN","MAGGTII",63,0)
 I MAGOBJT=11!(MAGOBJT=16) S GRPTYPE=MAGOBJT D
"RTN","MAGGTII",64,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",65,0)
 . ; next line to account for group of NO images for whatever reason.
"RTN","MAGGTII",66,0)
 . ;  we change Object Type to XRAY (3)  or STILL IMAGE (1)
"RTN","MAGGTII",67,0)
 . I 'X S MAGOBJT=$S(MAGOBJT=11:3,MAGOBJT=16:1,1:1) K GRPTYPE Q
"RTN","MAGGTII",68,0)
 . S X=^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",69,0)
 . ;  keep the Real IEN, so we can change back later
"RTN","MAGGTII",70,0)
 . S GRPIEN=MAGXX,MAGXX=+X
"RTN","MAGGTII",71,0)
 . Q
"RTN","MAGGTII",72,0)
 S MAGJBCP=0 ; Don't Queue a copy from JukeBox.
"RTN","MAGGTII",73,0)
 ;  The call to FINDFILE returns:
"RTN","MAGGTII",74,0)
 ; MAGFILE1=LA100066.ABS   filename
"RTN","MAGGTII",75,0)
 ;          if no Network Location pointer or INVALID Pointer
"RTN","MAGGTII",76,0)
 ;          then MAGFILE1=-1~NO NETWORK LOCATION POINTER  
"RTN","MAGGTII",77,0)
 ;          or -1~INVALID NETWORK LOCATION POINTER
"RTN","MAGGTII",78,0)
 ; MAGFILE1(.01)=ONE,PATIENT   111223333 image desc
"RTN","MAGGTII",79,0)
 ; MAGJBOL=    desc of Offline server
"RTN","MAGGTII",80,0)
 ; MAGOFFLN=    if JB is offline
"RTN","MAGGTII",81,0)
 ; MAGPREF=C:\TEMP\LA\10\00\  path
"RTN","MAGGTII",82,0)
 ; MAGTYPE=MAG    MAG or WORM
"RTN","MAGGTII",83,0)
 ;
"RTN","MAGGTII",84,0)
 ;   first get Full Path and File Name of the Abstract
"RTN","MAGGTII",85,0)
 S FILETYPE="ABSTRACT" K MAGFILE1("ERROR")
"RTN","MAGGTII",86,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",87,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",88,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",89,0)
 S ABSTYPE=$E(MAGTYPE,1) I MAGOFFLN S ABSTYPE="O"
"RTN","MAGGTII",90,0)
 ;   Here we must test for +MAGFILE1 = -1  which means we don't have
"RTN","MAGGTII",91,0)
 ;   any entry in the Image File for the Abstract Network Location 
"RTN","MAGGTII",92,0)
 ;   pointer.
"RTN","MAGGTII",93,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",94,0)
 S ABSFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",95,0)
 ;
"RTN","MAGGTII",96,0)
 ;    now lets get the Full Path and file name FULL RES image.
"RTN","MAGGTII",97,0)
 ;p83 S FULLTYPE="A" ; Accessible
"RTN","MAGGTII",98,0)
 S FILETYPE="FULL" K MAGFILE1("ERROR")
"RTN","MAGGTII",99,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",100,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",101,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",102,0)
 ;p83 MAGTYPE is "MAG... " or "WORM...", use instead of 'A'
"RTN","MAGGTII",103,0)
 S FULLTYPE=$E(MAGTYPE,1) I MAGOFFLN S FULLTYPE="O"
"RTN","MAGGTII",104,0)
 ;  here we have to do the same test as above. for bad data.
"RTN","MAGGTII",105,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",106,0)
 S FULLFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",107,0)
 ;
"RTN","MAGGTII",108,0)
 ;    now lets get the Full Path and file name for BIG image.
"RTN","MAGGTII",109,0)
 S FILETYPE="BIG" K MAGFILE1("ERROR")
"RTN","MAGGTII",110,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",111,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",112,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",113,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",114,0)
 S BIGFILE=$S($E(MAGFILE1,1,2)="-1":"",1:MAGPREF_MAGFILE1)
"RTN","MAGGTII",115,0)
 ;
"RTN","MAGGTII",116,0)
 K MAGFILE1 ; Cleanup
"RTN","MAGGTII",117,0)
 ; Site and Site Code are in Entry of first Image in Group
"RTN","MAGGTII",118,0)
 ; so we need to set here, before MAGXX is changed back.
"RTN","MAGGTII",119,0)
 S X=$G(^MAG(2005,MAGXX,0))
"RTN","MAGGTII",120,0)
 S FNL=$S(+$P(X,"^",3):$P(X,"^",3),1:+$P(X,"^",5))
"RTN","MAGGTII",121,0)
 S PLC=$P($G(MAGJOB("NETPLC",FNL)),"^",1)
"RTN","MAGGTII",122,0)
 S PLCODE=$P($G(MAGJOB("NETPLC",FNL)),"^",2)
"RTN","MAGGTII",123,0)
 I PLC="" S PLC=$G(MAGJOB("PLC")),PLCODE=$G(MAGJOB("PLCODE")) ; Group of 0 need this.
"RTN","MAGGTII",124,0)
 ;   if we were using first image of a group, reset the Real IEN 
"RTN","MAGGTII",125,0)
 I $G(GRPIEN) S MAGXX=GRPIEN
"RTN","MAGGTII",126,0)
 ;
"RTN","MAGGTII",127,0)
 ;   we have to change the OBJECT TYPE variable back to real value
"RTN","MAGGTII",128,0)
 ;   MAGOBJT might have been changed if we had Group of no images.
"RTN","MAGGTII",129,0)
 ;   but we need to keep it changed, because Delphi window checks this
"RTN","MAGGTII",130,0)
 ;   entry to determine which window to open.
"RTN","MAGGTII",131,0)
 ;   i.e. Group window, Single image window, 
"RTN","MAGGTII",132,0)
 S MAGOBJT=$P(MAGN0,U,6)
"RTN","MAGGTII",133,0)
 ;
"RTN","MAGGTII",134,0)
 ; now start building the return string
"RTN","MAGGTII",135,0)
 ;
"RTN","MAGGTII",136,0)
 S PATCH=$P($G(MAGJOB("VERSION")),".",3) ; //'="3.0.8")
"RTN","MAGGTII",137,0)
 K MAGFILE
"RTN","MAGGTII",138,0)
 S $P(MAGFILE,U,25)="" ; We put extra '^^^' on end of String to stop error in Delphi.
"RTN","MAGGTII",139,0)
 ; Pieces 26 BrokerServer and 27 Broker Port are set if this is P59 Client.
"RTN","MAGGTII",140,0)
 ; Clients Prior to Patch 59, the String must only be 25 pieces. - Patch 45 snafu
"RTN","MAGGTII",141,0)
 ; 
"RTN","MAGGTII",142,0)
 ; $P(1^2^3) IEN^Image FullPath and name^Abstract FullPath and Name 
"RTN","MAGGTII",143,0)
 S $P(MAGFILE,U,1,3)=MAGXX_U_FULLFILE_U_ABSFILE
"RTN","MAGGTII",144,0)
 ;
"RTN","MAGGTII",145,0)
 ; now set $P(4) SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",146,0)
 S $P(MAGFILE,U,4)=$P(MAGN2,U,4)_$G(MAGJBOL)
"RTN","MAGGTII",147,0)
 ;
"RTN","MAGGTII",148,0)
 ; now set $P(5)PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",149,0)
 S $P(MAGFILE,U,5)=$P(MAGN2,U,5)
"RTN","MAGGTII",150,0)
 ;
"RTN","MAGGTII",151,0)
 ; now set $P(6) OBJECT TYPE
"RTN","MAGGTII",152,0)
 S $P(MAGFILE,U,6)=MAGOBJT
"RTN","MAGGTII",153,0)
 ;
"RTN","MAGGTII",154,0)
 ; now set $P(7) PROCEDURE field
"RTN","MAGGTII",155,0)
 S $P(MAGFILE,U,7)=$P(MAGN0,U,8)
"RTN","MAGGTII",156,0)
 ;
"RTN","MAGGTII",157,0)
 ; now we're making a DATE to display and will use it for a sort in  
"RTN","MAGGTII",158,0)
 ;  the delphi TStringGrid so we display mm/dd/yyyy
"RTN","MAGGTII",159,0)
 ; now set $P(8) display date
"RTN","MAGGTII",160,0)
 S X=$$FMTE^XLFDT($P(MAGN2,U,5),"5Z")
"RTN","MAGGTII",161,0)
 S X=$TR(X,"@"," ")
"RTN","MAGGTII",162,0)
 S $P(MAGFILE,U,8)=X
"RTN","MAGGTII",163,0)
 ;
"RTN","MAGGTII",164,0)
 ; now return the PARENT DATA FILE image pointer
"RTN","MAGGTII",165,0)
 S $P(MAGFILE,U,9)=$P(MAGN2,U,8)
"RTN","MAGGTII",166,0)
 ;
"RTN","MAGGTII",167,0)
 ; now return the ABSTYPE ( this is 'M' or 'W' or 'O' )
"RTN","MAGGTII",168,0)
 ; 'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",169,0)
 S $P(MAGFILE,U,10)=ABSTYPE
"RTN","MAGGTII",170,0)
 ;
"RTN","MAGGTII",171,0)
 ; now return the code to show if full res image is offline 'A' or 'O'
"RTN","MAGGTII",172,0)
 ; 'A' accessible   'O' offline
"RTN","MAGGTII",173,0)
 S $P(MAGFILE,U,11)=FULLTYPE
"RTN","MAGGTII",174,0)
 ;
"RTN","MAGGTII",175,0)
 ;  2/1/99 Dicom Series number and Dicom Image Number  
"RTN","MAGGTII",176,0)
 ;    $p(12) and $p(13)
"RTN","MAGGTII",177,0)
 ;
"RTN","MAGGTII",178,0)
 ; 14 - count of images , if this is a group
"RTN","MAGGTII",179,0)
 S X=+$P($G(^MAG(2005,MAGXX,1,0)),U,4),$P(MAGFILE,U,14)=$S(X:X,1:1)
"RTN","MAGGTII",180,0)
 ;
"RTN","MAGGTII",181,0)
 ; $p(15^16 ) are SiteIEN and SiteCode Consolidation - DBI
"RTN","MAGGTII",182,0)
 ; We use SiteIEN and SiteCODE from above 
"RTN","MAGGTII",183,0)
 S $P(MAGFILE,"^",15)=PLC
"RTN","MAGGTII",184,0)
 S $P(MAGFILE,"^",16)=PLCODE
"RTN","MAGGTII",185,0)
 ;
"RTN","MAGGTII",186,0)
 ; $p(17)           8/22/01 GEK Mod for integrity check.
"RTN","MAGGTII",187,0)
 I '$G(MAGNOCHK) D CHK^MAGGSQI(.MAGQI,MAGXX) I 'MAGQI(0) D
"RTN","MAGGTII",188,0)
 . ; remove the Abstract and Image File Names ; 2/14/03 remove c:\program files... with .\bmp\
"RTN","MAGGTII",189,0)
 . S $P(MAGFILE,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGTII",190,0)
 . ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGTII",191,0)
 . S $P(MAGFILE,U,6)=$S(($P(MAGFILE,U,6)'=11):"99",1:11)
"RTN","MAGGTII",192,0)
 . S $P(MAGFILE,U,10)="M"
"RTN","MAGGTII",193,0)
 . ;Send the error message
"RTN","MAGGTII",194,0)
 . S $P(MAGFILE,U,17)=$P(MAGQI(0),U,2)
"RTN","MAGGTII",195,0)
 ; $p(18) is BIGFile Full name and path.
"RTN","MAGGTII",196,0)
 S $P(MAGFILE,U,18)=BIGFILE
"RTN","MAGGTII",197,0)
 ; DFN
"RTN","MAGGTII",198,0)
 S $P(MAGFILE,U,19)=$P(MAGN0,U,7)
"RTN","MAGGTII",199,0)
 ; Patient Name
"RTN","MAGGTII",200,0)
 S $P(MAGFILE,U,20)=$S(MDFN:MAGJOB("PTNM",MDFN),1:MDFN)
"RTN","MAGGTII",201,0)
 S $P(MAGFILE,U,21)=$S(+$P(MAGN40,U,2):$P(^MAG(2005.82,$P(MAGN40,U,2),0),U),1:"")
"RTN","MAGGTII",202,0)
 S X=$$FMTE^XLFDT($P(MAGN2,U,1),"5Z") ; Date/Time Image Saved  #7
"RTN","MAGGTII",203,0)
 S X=$TR(X,"@"," ")
"RTN","MAGGTII",204,0)
 S $P(MAGFILE,U,22)=X
"RTN","MAGGTII",205,0)
 S X=$$FMTE^XLFDT($P(MAGN100,U,6),"5Z")   ; DocumentDate #110
"RTN","MAGGTII",206,0)
 S X=$TR(X,"@"," ")
"RTN","MAGGTII",207,0)
 S $P(MAGFILE,U,23)=X
"RTN","MAGGTII",208,0)
 ; If Patch 59 Client - we can set beyond 25 pieces.
"RTN","MAGGTII",209,0)
 I $D(MAGJOB("RPCSERVER"))&$D(MAGJOB("RPCPORT")) D
"RTN","MAGGTII",210,0)
 . S $P(MAGFILE,U,26)=MAGJOB("RPCSERVER")
"RTN","MAGGTII",211,0)
 . S $P(MAGFILE,U,27)=MAGJOB("RPCPORT")
"RTN","MAGGTII",212,0)
 . S $P(MAGFILE,U,28)="" ; "^" at end, stops problems in delphi
"RTN","MAGGTII",213,0)
 . Q
"RTN","MAGGTII",214,0)
 ; Stop displaying a Group of 1 as a Group, so here we'll change Object type
"RTN","MAGGTII",215,0)
 ;  to that of the '1ST' image in the group of 1.
"RTN","MAGGTII",216,0)
 I $P($G(^MAG(2005,MAGXX,1,0)),U,4)=1 D
"RTN","MAGGTII",217,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",218,0)
 . S X=+^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",219,0)
 . S $P(MAGFILE,U,6)=$P(^MAG(2005,X,0),U,6) ; OBJECT TYPE OF 1ST IMAGE IN GROUP
"RTN","MAGGTII",220,0)
 . S $P(MAGFILE,U,1)=X
"RTN","MAGGTII",221,0)
 . Q
"RTN","MAGGTII",222,0)
 Q
"RTN","MAGIPS83")
0^^B17244243
"RTN","MAGIPS83",1,0)
MAGIPS83 ;WOIFO/EdM,MLH - Post init routine to queue site activity at install. ; 11 Jan 2010 8:41 AM
"RTN","MAGIPS83",2,0)
 ;;3.0;IMAGING;**83**;Mar 19, 2002;Build 1690;Mar 29, 2010
"RTN","MAGIPS83",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIPS83",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPS83",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIPS83",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIPS83",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIPS83",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIPS83",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIPS83",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIPS83",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIPS83",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIPS83",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIPS83",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIPS83",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIPS83",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPS83",17,0)
 ;;
"RTN","MAGIPS83",18,0)
 Q
"RTN","MAGIPS83",19,0)
 ;
"RTN","MAGIPS83",20,0)
 ;
"RTN","MAGIPS83",21,0)
POST ;
"RTN","MAGIPS83",22,0)
 ;  1. Add RPCs to Secondary menu(s)
"RTN","MAGIPS83",23,0)
 ; last. Send confirmation message
"RTN","MAGIPS83",24,0)
 ;
"RTN","MAGIPS83",25,0)
 F OPT="MAG WINDOWS","MAG DICOM GATEWAY FULL","MAG DICOM GATEWAY VIEW" D
"RTN","MAGIPS83",26,0)
 . D ADDRPC("MAG NEW SOP INSTANCE UID",OPT)
"RTN","MAGIPS83",27,0)
 . D ADDRPC("MAG DICOM CHECK AE TITLE",OPT)
"RTN","MAGIPS83",28,0)
 . D ADDRPC("MAG DICOM GET GATEWAY INFO",OPT)
"RTN","MAGIPS83",29,0)
 . D ADDRPC("MAG DICOM STORE GATEWAY INFO",OPT)
"RTN","MAGIPS83",30,0)
 . D ADDRPC("MAG DICOM VISTA AE TITLE",OPT)
"RTN","MAGIPS83",31,0)
 . D ADDRPC("MAG DOD GET STUDIES IEN",OPT)
"RTN","MAGIPS83",32,0)
 . D ADDRPC("MAG DOD GET STUDIES UID",OPT)
"RTN","MAGIPS83",33,0)
 . D ADDRPC("MAG GET NETLOC",OPT)
"RTN","MAGIPS83",34,0)
 . D ADDRPC("MAG IMAGE CURRENT INFO",OPT)
"RTN","MAGIPS83",35,0)
 . D ADDRPC("MAG SCAN IMAGE TEXT FILES",OPT)
"RTN","MAGIPS83",36,0)
 . D ADDRPC("MAG STORE TEXT FILE DETAILS",OPT)
"RTN","MAGIPS83",37,0)
 . Q
"RTN","MAGIPS83",38,0)
 ;
"RTN","MAGIPS83",39,0)
 F OPT="MAGJ VISTARAD WINDOWS" D
"RTN","MAGIPS83",40,0)
 . D ADDRPC("MAG IMAGE CURRENT INFO",OPT)
"RTN","MAGIPS83",41,0)
 . D ADDRPC("MAG NEW SOP INSTANCE UID",OPT)
"RTN","MAGIPS83",42,0)
 . Q
"RTN","MAGIPS83",43,0)
 ;
"RTN","MAGIPS83",44,0)
 D ADDRPC("MAGGUSER2","MAG DICOM GATEWAY FULL")
"RTN","MAGIPS83",45,0)
 D ADDRPC("MAGG LOGOFF","MAG DICOM GATEWAY FULL")
"RTN","MAGIPS83",46,0)
 ;
"RTN","MAGIPS83",47,0)
 ; Send confirmation message
"RTN","MAGIPS83",48,0)
 ;
"RTN","MAGIPS83",49,0)
 D  ; Confirmation message
"RTN","MAGIPS83",50,0)
 . N CT,CNT,D,D0,D1,D2,DDATE,DG,DIC,DICR,DIW,MAGMSG,ST,XMID,XMY
"RTN","MAGIPS83",51,0)
 . ;
"RTN","MAGIPS83",52,0)
 . D GETENV^%ZOSV
"RTN","MAGIPS83",53,0)
 . S CNT=0
"RTN","MAGIPS83",54,0)
 . S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGIPS83",55,0)
 . S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGIPS83",56,0)
 . S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XPDNM
"RTN","MAGIPS83",57,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XPDNM)
"RTN","MAGIPS83",58,0)
 . S ST=$$GET1^DIQ(9.7,XPDA,11,"I")
"RTN","MAGIPS83",59,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGIPS83",60,0)
 . S CT=$$GET1^DIQ(9.7,XPDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT()
"RTN","MAGIPS83",61,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGIPS83",62,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGIPS83",63,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGIPS83",64,0)
 . S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_$$GET1^DIQ(9.7,XPDA,6,"I")
"RTN","MAGIPS83",65,0)
 . S CNT=CNT+1,MAGMSG(CNT)="DATE: "_$$NOW^XLFDT()
"RTN","MAGIPS83",66,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$$GET1^DIQ(9.7,XPDA,9,"E")
"RTN","MAGIPS83",67,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$$GET1^DIQ(9.7,XPDA,.01,"E")
"RTN","MAGIPS83",68,0)
 . S DDATE=$$GET1^DIQ(9.7,XPDA,51,"I")
"RTN","MAGIPS83",69,0)
 . S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGIPS83",70,0)
 . S:$G(CVT)'="" CNT=CNT+1,MAGMSG(CNT)="Conversion time: "_CVT
"RTN","MAGIPS83",71,0)
 . S XMSUB=XPDNM_" INSTALLATION"
"RTN","MAGIPS83",72,0)
 . S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGIPS83",73,0)
 . S XMY(XMID)=""
"RTN","MAGIPS83",74,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGIPS83",75,0)
 . S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGIPS83",76,0)
 . S XMSUB=$E(XMSUB,1,63)
"RTN","MAGIPS83",77,0)
 . D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ,)
"RTN","MAGIPS83",78,0)
 . I $G(XMERR) M XMERR=^TMP("XMERR",$J) S $EC=",U13-Cannot send MailMan message,"
"RTN","MAGIPS83",79,0)
 . Q
"RTN","MAGIPS83",80,0)
 Q
"RTN","MAGIPS83",81,0)
 ;
"RTN","MAGIPS83",82,0)
ADDRPC(RPCNAME,OPTNAME) N DA,DIC
"RTN","MAGIPS83",83,0)
 S DIC="^DIC(19,",DIC(0)="",X=OPTNAME D ^DIC
"RTN","MAGIPS83",84,0)
 I Y<0 D  Q
"RTN","MAGIPS83",85,0)
 . W !,"Cannot add """_RPCNAME_""" to """_OPTNAME_"""."
"RTN","MAGIPS83",86,0)
 . W !,"Cannot find """_OPTNAME_"""."
"RTN","MAGIPS83",87,0)
 . Q
"RTN","MAGIPS83",88,0)
 S DA(1)=+Y
"RTN","MAGIPS83",89,0)
 S DIC=DIC_DA(1)_",""RPC"","
"RTN","MAGIPS83",90,0)
 S DIC(0)="L" ; LAYGO should be allowed here
"RTN","MAGIPS83",91,0)
 S X=RPCNAME
"RTN","MAGIPS83",92,0)
 D ^DIC
"RTN","MAGIPS83",93,0)
 I Y<0 D  Q
"RTN","MAGIPS83",94,0)
 . W !,"Cannot add """_RPCNAME_""" to """_OPTNAME_"""."
"RTN","MAGIPS83",95,0)
 . W !,"Cannot find """_RPCNAME_"""."
"RTN","MAGIPS83",96,0)
 . Q
"RTN","MAGIPS83",97,0)
 Q
"RTN","MAGIPS83",98,0)
 ;
"RTN","MAGLOG")
0^3^B8117581
"RTN","MAGLOG",1,0)
MAGLOG ;WOIFO/RED,SRR,MLH - Log image access ; 08 Jan 2010 2:29 PM
"RTN","MAGLOG",2,0)
 ;;3.0;IMAGING;**17,8,20,59,83**;Mar 19, 2002;Build 1690;Mar 29, 2010
"RTN","MAGLOG",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGLOG",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGLOG",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGLOG",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGLOG",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGLOG",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGLOG",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGLOG",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGLOG",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGLOG",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGLOG",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGLOG",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGLOG",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGLOG",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGLOG",17,0)
 ;;
"RTN","MAGLOG",18,0)
 Q
"RTN","MAGLOG",19,0)
 ; CALL WITH:
"RTN","MAGLOG",20,0)
 ; MAGIMT = TYPE OF ACCESS
"RTN","MAGLOG",21,0)
 ; DUZ = USER NO.
"RTN","MAGLOG",22,0)
 ; MAGO = IMAGE SUBSCRIPT NO.
"RTN","MAGLOG",23,0)
 ; MAGPACK = USER INTERFACE PACKAGE
"RTN","MAGLOG",24,0)
 ; MAGDFN = PATIENT NO.
"RTN","MAGLOG",25,0)
 ; MAGCT = TOTAL IMAGE COUNT
"RTN","MAGLOG",26,0)
 ; MAGAD = ADDITIONAL DATA
"RTN","MAGLOG",27,0)
 ;
"RTN","MAGLOG",28,0)
ENTRY(MAGIMT,MAGDUZ,MAGO,MAGPACK,MAGDFN,MAGCT,MAGAD) ;
"RTN","MAGLOG",29,0)
 I '$D(MAGSYS) S MAGSYS=^%ZOSF("VOL")
"RTN","MAGLOG",30,0)
 N MAGC,MSYS
"RTN","MAGLOG",31,0)
 S MSYS=$$UP^XLFSTR(MAGSYS)
"RTN","MAGLOG",32,0)
 I (MSYS["UNKNOWN"),($D(MAGJOB("WRKSIEN"))) S MSYS=$P(^MAG(2006.81,MAGJOB("WRKSIEN"),0),"^",1)
"RTN","MAGLOG",33,0)
 L +^MAG(2006.95,0):10 E  Q  ;entries were being overwritten.
"RTN","MAGLOG",34,0)
 S MAGC=$P(^MAG(2006.95,0),"^",3)+1
"RTN","MAGLOG",35,0)
 S $P(^MAG(2006.95,0),"^",3,4)=MAGC_"^"_MAGC
"RTN","MAGLOG",36,0)
 L -^MAG(2006.95,0)
"RTN","MAGLOG",37,0)
 ;   FLD #'s            .01         1                2          3          4             5         6       7          8               9  
"RTN","MAGLOG",38,0)
 S ^MAG(2006.95,MAGC,0)=MAGC_"^"_$G(MAGIMT)_"^"_$G(MAGDUZ)_"^"_MAGO_"^"_MAGPACK_"^"_MSYS_"^"_$$NOW^XLFDT()_"^"_MAGDFN_"^"_MAGCT_"^"_+$G(MAGJOB("SESSION"))
"RTN","MAGLOG",39,0)
 S:$G(MAGAD)'="" ^MAG(2006.95,MAGC,100)=MAGAD
"RTN","MAGLOG",40,0)
 S ^MAG(2006.95,"B",MAGC,MAGC)=""
"RTN","MAGLOG",41,0)
 D ACCESS(MAGO) ; This should be here.  Can now search 2006.95 from "Last Access Date" to "Capture Date" to
"RTN","MAGLOG",42,0)
 ; get all Actions logged. We Don't have to search entire Image File.
"RTN","MAGLOG",43,0)
 I $G(MAGJOB("SESSION")) S ^MAG(2006.95,"AS",+$G(MAGJOB("SESSION")),MAGC)=""
"RTN","MAGLOG",44,0)
 Q
"RTN","MAGLOG",45,0)
 ;
"RTN","MAGLOG",46,0)
ACCESS(MAGO) ; Update Field "Last Access Date" in Image File.
"RTN","MAGLOG",47,0)
 Q:'$G(MAGO)
"RTN","MAGLOG",48,0)
 I '$D(^MAG(2005,MAGO,0)) D  Q
"RTN","MAGLOG",49,0)
 . I $D(^MAG(2005.1,MAGO,0)) S $P(^MAG(2005.1,MAGO,0),"^",9)=$$NOW^XLFDT
"RTN","MAGLOG",50,0)
 . Q
"RTN","MAGLOG",51,0)
 S $P(^MAG(2005,MAGO,0),"^",9)=$$NOW^XLFDT
"RTN","MAGLOG",52,0)
 Q
"RTN","MAGLOG",53,0)
 ;
"VER")
8.0^22.0
"^DD",2006.95,2006.95,100,0)
ADDITIONAL DATA^F^^100;1^K:$L(X)>250!($L(X)<1) X
"^DD",2006.95,2006.95,100,3)
Enter additional text for this log-entry.
"^DD",2006.95,2006.95,100,21,0)
^.001^4^4^3070515^^^
"^DD",2006.95,2006.95,100,21,1,0)
This field contains audit-specific information that cannot be fully 
"^DD",2006.95,2006.95,100,21,2,0)
recorded in other fields in the IMAGE ACCESS LOG File.  The specific 
"^DD",2006.95,2006.95,100,21,3,0)
information contained is based on the value of the USER INTERFACE 
"^DD",2006.95,2006.95,100,21,4,0)
SOFTWARE Field (#4).
"^DD",2006.95,2006.95,100,"DT")
3070413
**END**
**END**


****
****
