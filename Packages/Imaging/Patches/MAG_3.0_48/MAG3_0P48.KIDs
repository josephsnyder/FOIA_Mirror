KIDS Distribution saved on Jan 13, 2005@13:01:42
VistA Imaging V3 - Patch 48 - Display,Capture Maintenance
**KIDS**:MAG*3.0*48^

**INSTALL NAME**
MAG*3.0*48
"BLD",4383,0)
MAG*3.0*48^IMAGING^0^3050113^y
"BLD",4383,1,0)
^^27^27^3050111^^^^
"BLD",4383,1,1,0)
Patch 48 is a maintanence patch for 
"BLD",4383,1,2,0)
Imaging Display, Imaging Capture, Annotation editor and BP.
"BLD",4383,1,3,0)
It deals with issues encountered in Alpha testing of Patch 8.
"BLD",4383,1,4,0)
  
"BLD",4383,1,5,0)
This will check the routines from a BUILD file.
"BLD",4383,1,6,0)
Select BUILD NAME:    MAG*3.0*48     IMAGING
"BLD",4383,1,7,0)
MAGFILEB  value = 11713219
"BLD",4383,1,8,0)
MAGGSIU3  value = 8945343
"BLD",4383,1,9,0)
MAGGSIUI  value = 14792968
"BLD",4383,1,10,0)
MAGGSPP   value = 5796302
"BLD",4383,1,11,0)
MAGGTIA   value = 11492904
"BLD",4383,1,12,0)
MAGGTIG   value = 10449383
"BLD",4383,1,13,0)
MAGGTII   value = 8845764
"BLD",4383,1,14,0)
MAGGTLB   value = 13369489
"BLD",4383,1,15,0)
MAGGTRPT  value = 11950157
"BLD",4383,1,16,0)
MAGGTU3   value = 11723273
"BLD",4383,1,17,0)
MAGGTU4   value = 8466131
"BLD",4383,1,18,0)
MAGGTU5   value = 4744682
"BLD",4383,1,19,0)
MAGGTU6   value = 10108948
"BLD",4383,1,20,0)
MAGGTUP   value = 6957380
"BLD",4383,1,21,0)
MAGIPO48  value = 7416703
"BLD",4383,1,22,0)
MAGQBGCC  value = 5552170
"BLD",4383,1,23,0)
MAGQBUT   value = 14796199
"BLD",4383,1,24,0)
MAGQBUT4  value = 4347014
"BLD",4383,1,25,0)
MAGSIXG1  value = 12432475
"BLD",4383,1,26,0)
MAGSIXGT  value = 10585881
"BLD",4383,1,27,0)
done
"BLD",4383,4,0)
^9.64PA^2006.1^3
"BLD",4383,4,2005,0)
2005
"BLD",4383,4,2005,2,0)
^9.641^2005^1
"BLD",4383,4,2005,2,2005,0)
IMAGE  (File-top level)
"BLD",4383,4,2005,2,2005,1,0)
^9.6411^45^1
"BLD",4383,4,2005,2,2005,1,45,0)
ORIGIN INDEX
"BLD",4383,4,2005,222)
y^y^p^^^^n^^n
"BLD",4383,4,2005,224)

"BLD",4383,4,2005.87,0)
2005.87
"BLD",4383,4,2005.87,2,0)
^9.641^2005.87^1
"BLD",4383,4,2005.87,2,2005.87,0)
IMAGE LIST FILTERS  (File-top level)
"BLD",4383,4,2005.87,2,2005.87,1,0)
^9.6411^1^1
"BLD",4383,4,2005.87,2,2005.87,1,1,0)
PACKAGE
"BLD",4383,4,2005.87,222)
y^y^p^^^^n^^n
"BLD",4383,4,2005.87,224)

"BLD",4383,4,2006.1,0)
2006.1
"BLD",4383,4,2006.1,2,0)
^9.641^2006.1^1
"BLD",4383,4,2006.1,2,2006.1,0)
IMAGING SITE PARAMETERS  (File-top level)
"BLD",4383,4,2006.1,2,2006.1,1,0)
^9.6411^130^5
"BLD",4383,4,2006.1,2,2006.1,1,.07,0)
GCC EXPORT LOC
"BLD",4383,4,2006.1,2,2006.1,1,8,0)
PURGE-RETENTION DAYS FULL FILE
"BLD",4383,4,2006.1,2,2006.1,1,64,0)
SCHEDULED PURGE TIME
"BLD",4383,4,2006.1,2,2006.1,1,126,0)
LAST ROUTING ACTIVITY
"BLD",4383,4,2006.1,2,2006.1,1,130,0)
VERSION CHECKING
"BLD",4383,4,2006.1,222)
y^y^p^^^^n^^n
"BLD",4383,4,2006.1,224)

"BLD",4383,4,"APDD",2005,2005)

"BLD",4383,4,"APDD",2005,2005,45)

"BLD",4383,4,"APDD",2005.87,2005.87)

"BLD",4383,4,"APDD",2005.87,2005.87,1)

"BLD",4383,4,"APDD",2006.1,2006.1)

"BLD",4383,4,"APDD",2006.1,2006.1,.07)

"BLD",4383,4,"APDD",2006.1,2006.1,8)

"BLD",4383,4,"APDD",2006.1,2006.1,64)

"BLD",4383,4,"APDD",2006.1,2006.1,126)

"BLD",4383,4,"APDD",2006.1,2006.1,130)

"BLD",4383,4,"B",2005,2005)

"BLD",4383,4,"B",2005.87,2005.87)

"BLD",4383,4,"B",2006.1,2006.1)

"BLD",4383,"ABNS",0)
^9.66A^^
"BLD",4383,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",4383,"INI")
PRE^MAGIPO48
"BLD",4383,"INID")
^y
"BLD",4383,"INIT")
POST^MAGIPO48
"BLD",4383,"KRN",0)
^9.67PA^8989.52^19
"BLD",4383,"KRN",.4,0)
.4
"BLD",4383,"KRN",.401,0)
.401
"BLD",4383,"KRN",.402,0)
.402
"BLD",4383,"KRN",.403,0)
.403
"BLD",4383,"KRN",.5,0)
.5
"BLD",4383,"KRN",.84,0)
.84
"BLD",4383,"KRN",3.6,0)
3.6
"BLD",4383,"KRN",3.8,0)
3.8
"BLD",4383,"KRN",9.2,0)
9.2
"BLD",4383,"KRN",9.8,0)
9.8
"BLD",4383,"KRN",9.8,"NM",0)
^9.68A^20^20
"BLD",4383,"KRN",9.8,"NM",1,0)
MAGGSIU3^^0^B23176198
"BLD",4383,"KRN",9.8,"NM",2,0)
MAGGSIUI^^0^B55407934
"BLD",4383,"KRN",9.8,"NM",3,0)
MAGGTIA^^0^B42431443
"BLD",4383,"KRN",9.8,"NM",4,0)
MAGGTII^^0^B37947869
"BLD",4383,"KRN",9.8,"NM",5,0)
MAGSIXG1^^0^B37320846
"BLD",4383,"KRN",9.8,"NM",6,0)
MAGSIXGT^^0^B37400681
"BLD",4383,"KRN",9.8,"NM",7,0)
MAGIPO48^^0^B26793440
"BLD",4383,"KRN",9.8,"NM",8,0)
MAGQBUT4^^0^B10763650
"BLD",4383,"KRN",9.8,"NM",9,0)
MAGGTU6^^0^B39147814
"BLD",4383,"KRN",9.8,"NM",10,0)
MAGQBUT^^0^B68034219
"BLD",4383,"KRN",9.8,"NM",11,0)
MAGGTIG^^0^B53305477
"BLD",4383,"KRN",9.8,"NM",12,0)
MAGGTRPT^^0^B42324178
"BLD",4383,"KRN",9.8,"NM",13,0)
MAGGTU3^^0^B59193150
"BLD",4383,"KRN",9.8,"NM",14,0)
MAGGTU4^^0^B25344092
"BLD",4383,"KRN",9.8,"NM",15,0)
MAGGSPP^^0^B10835385
"BLD",4383,"KRN",9.8,"NM",16,0)
MAGQBGCC^^0^B10749767
"BLD",4383,"KRN",9.8,"NM",17,0)
MAGFILEB^^0^B48518635
"BLD",4383,"KRN",9.8,"NM",18,0)
MAGGTUP^^0^B20209628
"BLD",4383,"KRN",9.8,"NM",19,0)
MAGGTU5^^0^B8684988
"BLD",4383,"KRN",9.8,"NM",20,0)
MAGGTLB^^0^B51674302
"BLD",4383,"KRN",9.8,"NM","B","MAGFILEB",17)

"BLD",4383,"KRN",9.8,"NM","B","MAGGSIU3",1)

"BLD",4383,"KRN",9.8,"NM","B","MAGGSIUI",2)

"BLD",4383,"KRN",9.8,"NM","B","MAGGSPP",15)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTIA",3)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTIG",11)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTII",4)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTLB",20)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTRPT",12)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTU3",13)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTU4",14)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTU5",19)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTU6",9)

"BLD",4383,"KRN",9.8,"NM","B","MAGGTUP",18)

"BLD",4383,"KRN",9.8,"NM","B","MAGIPO48",7)

"BLD",4383,"KRN",9.8,"NM","B","MAGQBGCC",16)

"BLD",4383,"KRN",9.8,"NM","B","MAGQBUT",10)

"BLD",4383,"KRN",9.8,"NM","B","MAGQBUT4",8)

"BLD",4383,"KRN",9.8,"NM","B","MAGSIXG1",5)

"BLD",4383,"KRN",9.8,"NM","B","MAGSIXGT",6)

"BLD",4383,"KRN",19,0)
19
"BLD",4383,"KRN",19,"NM",0)
^9.68A^^0
"BLD",4383,"KRN",19.1,0)
19.1
"BLD",4383,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",4383,"KRN",19.1,"NM",1,0)
MAG ROI^^0
"BLD",4383,"KRN",19.1,"NM","B","MAG ROI",1)

"BLD",4383,"KRN",101,0)
101
"BLD",4383,"KRN",101,"NM",0)
^9.68A^^
"BLD",4383,"KRN",409.61,0)
409.61
"BLD",4383,"KRN",771,0)
771
"BLD",4383,"KRN",870,0)
870
"BLD",4383,"KRN",8989.51,0)
8989.51
"BLD",4383,"KRN",8989.52,0)
8989.52
"BLD",4383,"KRN",8994,0)
8994
"BLD",4383,"KRN",8994,"NM",0)
^9.68A^5^5
"BLD",4383,"KRN",8994,"NM",1,0)
MAGG IMAGE INFO^^0
"BLD",4383,"KRN",8994,"NM",2,0)
MAGGRPT^^0
"BLD",4383,"KRN",8994,"NM",3,0)
MAGG GROUP IMAGES^^0
"BLD",4383,"KRN",8994,"NM",4,0)
MAGG IMAGE DELETE^^0
"BLD",4383,"KRN",8994,"NM",5,0)
MAGG DTTM^^0
"BLD",4383,"KRN",8994,"NM","B","MAGG DTTM",5)

"BLD",4383,"KRN",8994,"NM","B","MAGG GROUP IMAGES",3)

"BLD",4383,"KRN",8994,"NM","B","MAGG IMAGE DELETE",4)

"BLD",4383,"KRN",8994,"NM","B","MAGG IMAGE INFO",1)

"BLD",4383,"KRN",8994,"NM","B","MAGGRPT",2)

"BLD",4383,"KRN","B",.4,.4)

"BLD",4383,"KRN","B",.401,.401)

"BLD",4383,"KRN","B",.402,.402)

"BLD",4383,"KRN","B",.403,.403)

"BLD",4383,"KRN","B",.5,.5)

"BLD",4383,"KRN","B",.84,.84)

"BLD",4383,"KRN","B",3.6,3.6)

"BLD",4383,"KRN","B",3.8,3.8)

"BLD",4383,"KRN","B",9.2,9.2)

"BLD",4383,"KRN","B",9.8,9.8)

"BLD",4383,"KRN","B",19,19)

"BLD",4383,"KRN","B",19.1,19.1)

"BLD",4383,"KRN","B",101,101)

"BLD",4383,"KRN","B",409.61,409.61)

"BLD",4383,"KRN","B",771,771)

"BLD",4383,"KRN","B",870,870)

"BLD",4383,"KRN","B",8989.51,8989.51)

"BLD",4383,"KRN","B",8989.52,8989.52)

"BLD",4383,"KRN","B",8994,8994)

"BLD",4383,"QUES",0)
^9.62^^
"BLD",4383,"REQB",0)
^9.611^1^1
"BLD",4383,"REQB",1,0)
MAG*3.0*8^2
"BLD",4383,"REQB","B","MAG*3.0*8",1)

"FIA",2005)
IMAGE
"FIA",2005,0)
^MAG(2005,
"FIA",2005,0,0)
2005I
"FIA",2005,0,1)
y^y^p^^^^n^^n
"FIA",2005,0,10)

"FIA",2005,0,11)

"FIA",2005,0,"RLRO")

"FIA",2005,0,"VR")
3.0^MAG
"FIA",2005,2005)
1
"FIA",2005,2005,45)

"FIA",2005.87)
IMAGE LIST FILTERS
"FIA",2005.87,0)
^MAG(2005.87,
"FIA",2005.87,0,0)
2005.87I
"FIA",2005.87,0,1)
y^y^p^^^^n^^n
"FIA",2005.87,0,10)

"FIA",2005.87,0,11)

"FIA",2005.87,0,"RLRO")

"FIA",2005.87,0,"VR")
3.0^MAG
"FIA",2005.87,2005.87)
1
"FIA",2005.87,2005.87,1)

"FIA",2006.1)
IMAGING SITE PARAMETERS
"FIA",2006.1,0)
^MAG(2006.1,
"FIA",2006.1,0,0)
2006.1I
"FIA",2006.1,0,1)
y^y^p^^^^n^^n
"FIA",2006.1,0,10)

"FIA",2006.1,0,11)

"FIA",2006.1,0,"RLRO")

"FIA",2006.1,0,"VR")
3.0^MAG
"FIA",2006.1,2006.1)
1
"FIA",2006.1,2006.1,.07)

"FIA",2006.1,2006.1,8)

"FIA",2006.1,2006.1,64)

"FIA",2006.1,2006.1,126)

"FIA",2006.1,2006.1,130)

"INI")
PRE^MAGIPO48
"INIT")
POST^MAGIPO48
"KRN",19.1,828,-1)
0^1
"KRN",19.1,828,0)
MAG ROI^Imaging Release of Information
"KRN",19.1,828,1,0)
^^2^2^3041216^
"KRN",19.1,828,1,1,0)
Key for ROI printing etc. Electronic signature will not be 
"KRN",19.1,828,1,2,0)
required of users that have this key.
"KRN",8994,405,-1)
0^2
"KRN",8994,405,0)
MAGGRPT^BRK^MAGGTRPT^4^R^^^1
"KRN",8994,405,1,0)
^8994.01^1^1^3041025^^^^
"KRN",8994,405,1,1,0)
Returns associated report for Image IEN.
"KRN",8994,405,2,0)
^8994.02A^2^2
"KRN",8994,405,2,1,0)
MAGGIEN^1^30^1^1
"KRN",8994,405,2,1,1,0)
^8994.021^1^1^3041025^^^^
"KRN",8994,405,2,1,1,1,0)
Internal entry number in file ^MAG(2005.
"KRN",8994,405,2,2,0)
NOCHK^1^4^0^2
"KRN",8994,405,2,2,1,0)
^8994.021^6^6^3041025^^^^
"KRN",8994,405,2,2,1,1,0)
If this flag is sent with a value of 1, then the QA check will
"KRN",8994,405,2,2,1,2,0)
not be run.  Image report will be returned even if it is an
"KRN",8994,405,2,2,1,3,0)
image of Questionable Integrity.
"KRN",8994,405,2,2,1,4,0)
This is used when deleting an Image, but the user needs to see
"KRN",8994,405,2,2,1,5,0)
the report that may have been blocked otherwise.
"KRN",8994,405,2,2,1,6,0)
Defaults to 0 (false) 
"KRN",8994,405,2,"B","MAGGIEN",1)

"KRN",8994,405,2,"B","NOCHK",2)

"KRN",8994,405,2,"PARAMSEQ",1,1)

"KRN",8994,405,2,"PARAMSEQ",2,2)

"KRN",8994,405,3,0)
^8994.03^3^3^3041025^^^^
"KRN",8994,405,3,1,0)
Report returned is the Long Description of the image entry from the image
"KRN",8994,405,3,2,0)
file. Followed by the associated report; either Radiology, Surgery,
"KRN",8994,405,3,3,0)
Medicine, Lab or Progress note.
"KRN",8994,405,3,4,0)
or Lab.
"KRN",8994,432,-1)
0^5
"KRN",8994,432,0)
MAGG DTTM^DTTM^MAGGTU5^1^R
"KRN",8994,432,1,0)
^8994.01^1^1^3041215^^^^
"KRN",8994,432,1,1,0)
Does a FileMan conversion using %DT="T" D ^%DT,$$FMTE^XLFDT(Y,"8")
"KRN",8994,432,2,0)
^8994.02A^3^3
"KRN",8994,432,2,1,0)
  X^1^30^1^1
"KRN",8994,432,2,1,1,0)
^8994.021^1^1^3000515^^
"KRN",8994,432,2,1,1,1,0)
User input to date/time field 
"KRN",8994,432,2,2,0)
INDT^1^30^1^1
"KRN",8994,432,2,2,1,0)
^^1^1^3041215^
"KRN",8994,432,2,2,1,1,0)
This is the Date to be converted in External or Internal Format.
"KRN",8994,432,2,3,0)
NOFDT^1^1^0^2
"KRN",8994,432,2,3,1,0)
^^3^3^3041215^
"KRN",8994,432,2,3,1,1,0)
This is a Flag to tell if Future Dates are allowed.
"KRN",8994,432,2,3,1,2,0)
The defaults is 0, so Future Dates Are Allowed.
"KRN",8994,432,2,3,1,3,0)
If 1, then NOFDT is true and NO Future Dates are Allowed.
"KRN",8994,432,2,"B","  X",1)

"KRN",8994,432,2,"B","INDT",2)

"KRN",8994,432,2,"B","NOFDT",3)

"KRN",8994,432,2,"PARAMSEQ",1,1)

"KRN",8994,432,2,"PARAMSEQ",1,2)

"KRN",8994,432,2,"PARAMSEQ",2,3)

"KRN",8994,432,3,0)
^8994.03^2^2^3041215^^^^
"KRN",8994,432,3,1,0)
Returns date/time in format  Month DD, YYYY@HH:MM
"KRN",8994,432,3,2,0)
i.e. Jan 04, 1999@11:55
"KRN",8994,441,-1)
0^1
"KRN",8994,441,0)
MAGG IMAGE INFO^IMAGEINF^MAGGTU3^2^R
"KRN",8994,441,1,0)
^8994.01^1^1^3041024^^^^
"KRN",8994,441,1,1,0)
Returns information on 1 Image
"KRN",8994,441,2,0)
^8994.02A^2^2
"KRN",8994,441,2,1,0)
IEN^1^30^1^1
"KRN",8994,441,2,1,1,0)
^8994.021^1^1^3000515^^^^
"KRN",8994,441,2,1,1,1,0)
internal entry number in IMAGE file  ^MAG(2005,IEN
"KRN",8994,441,2,2,0)
NOQACHK^1^4^0^2
"KRN",8994,441,2,2,1,0)
^8994.021^5^5^3041024^^
"KRN",8994,441,2,2,1,1,0)
If this flag is sent with a value of 1, then the QA check will
"KRN",8994,441,2,2,1,2,0)
not be run.  Image information will be returned even if it is an
"KRN",8994,441,2,2,1,3,0)
image of Questionable Integrity.
"KRN",8994,441,2,2,1,4,0)
This is used when deleting an Image, but the user needs to see
"KRN",8994,441,2,2,1,5,0)
information that may have been blocked otherwise.
"KRN",8994,441,2,"B","IEN",1)

"KRN",8994,441,2,"B","NOQACHK",2)

"KRN",8994,441,2,"PARAMSEQ",1,1)

"KRN",8994,441,2,"PARAMSEQ",2,2)

"KRN",8994,441,3,0)
^8994.03^17^17^3041024^^^^
"KRN",8994,441,3,1,0)
Returns '^' delimited string of image info
"KRN",8994,441,3,2,0)
$P(1^2^3)     IEN^Image FullPath and name^Abstract FullPath and Name
"KRN",8994,441,3,3,0)
$P(4)           SHORT DESCRIPTION field and desc of offline JukeBox
"KRN",8994,441,3,4,0)
$P(5)           PROCEDURE/ EXAM DATE/TIME field
"KRN",8994,441,3,5,0)
$P(6)           OBJECT TYPE
"KRN",8994,441,3,6,0)
$P(7)           PROCEDURE field
"KRN",8994,441,3,7,0)
$P(8)          display date
"KRN",8994,441,3,8,0)
$P(9)          to return the PARENT DATA FILE image pointer
"KRN",8994,441,3,9,0)
$p(10)        return the ABSTYPE  'M' magnetic 'W' worm  'O' offline
"KRN",8994,441,3,10,0)
$p(11)        is  'A' accessable   'O' offline
"KRN",8994,441,3,11,0)
$p(12^13)  Dicom Series Number  $p(12) and   Image Number  $p(13)
"KRN",8994,441,3,12,0)
$p(14        is count of images in group, 1 if single image.
"KRN",8994,441,3,13,0)
$p(15^16)   SiteParameter IEN ^ SiteParameter CODE
"KRN",8994,441,3,14,0)
$P(17)      is err description of Integrity Check
"KRN",8994,441,3,15,0)
$P(18)      Image BIGPath and name             //Patch 5
"KRN",8994,441,3,16,0)
$P(19^20)   Patient DFN  ^ Patient Name; // Patch 3.8
"KRN",8994,441,3,17,0)
$P(21)          Image Class: Clin,Admin,Clin/Admin,Admin/Clin
"KRN",8994,442,-1)
0^4
"KRN",8994,442,0)
MAGG IMAGE DELETE^IMAGEDEL^MAGGTID^2^R
"KRN",8994,442,1,0)
^8994.01^1^1^3041025^^^^
"KRN",8994,442,1,1,0)
Deletes Image entry from Image file, ^MAG(2005 and Image File from disk.
"KRN",8994,442,2,0)
^8994.02A^3^3
"KRN",8994,442,2,1,0)
MAGIEN^1^30^1^1
"KRN",8994,442,2,1,1,0)
^8994.021^1^1^3041025^^^^
"KRN",8994,442,2,1,1,1,0)
Internal entry number in the IMAGE FM File.  ^MAG(2005
"KRN",8994,442,2,2,0)
MAGGRPDF^1^1^0^2
"KRN",8994,442,2,2,1,0)
^^4^4^3041025^
"KRN",8994,442,2,2,1,1,0)
This is a Group Delete Flag
"KRN",8994,442,2,2,1,2,0)
1 or 0
"KRN",8994,442,2,2,1,3,0)
     1  =  Allow Group Delete
"KRN",8994,442,2,2,1,4,0)
     0  =  Do not Allow Group Deletes.
"KRN",8994,442,2,3,0)
REASON^1^60^0^3
"KRN",8994,442,2,3,1,0)
^^1^1^3041025^
"KRN",8994,442,2,3,1,1,0)
This is a free text description of the Reason for Deleting the Image.
"KRN",8994,442,2,"B","IEN",1)

"KRN",8994,442,2,"B","MAGGRPDF",2)

"KRN",8994,442,2,"B","MAGIEN",1)

"KRN",8994,442,2,"B","REASON",3)

"KRN",8994,442,2,"PARAMSEQ",1,1)

"KRN",8994,442,2,"PARAMSEQ",2,2)

"KRN",8994,442,2,"PARAMSEQ",3,3)

"KRN",8994,442,3,0)
^8994.03^2^2^3041025^^^^
"KRN",8994,442,3,1,0)
  1^Image deleted
"KRN",8994,442,3,2,0)
  0^<reason image wasn't deleted>
"KRN",8994,663,-1)
0^3
"KRN",8994,663,0)
MAGG GROUP IMAGES^GROUP^MAGGTIG^2^R
"KRN",8994,663,1,0)
^8994.01^1^1^3041025^^^^
"KRN",8994,663,1,1,0)
Returns array of images for an Image entry.
"KRN",8994,663,2,0)
^8994.02A^2^2
"KRN",8994,663,2,1,0)
MAGIEN^1^30^1^1
"KRN",8994,663,2,1,1,0)
^8994.021^1^1^3041025^^
"KRN",8994,663,2,1,1,1,0)
Internal entry of Image entry in Image File ^MAG(2005,
"KRN",8994,663,2,2,0)
NOCHK^1^4^0^2
"KRN",8994,663,2,2,1,0)
^8994.021^6^6^3041025^^^^
"KRN",8994,663,2,2,1,1,0)
If this flag is sent with a value of 1, then the QA check will
"KRN",8994,663,2,2,1,2,0)
not be run.  Image Group Abs will be returned even if it is an
"KRN",8994,663,2,2,1,3,0)
Image Group of Questionable Integrity.
"KRN",8994,663,2,2,1,4,0)
This is used when deleting an Image, but the user needs to see
"KRN",8994,663,2,2,1,5,0)
the abstracts that may have been blocked otherwise.
"KRN",8994,663,2,2,1,6,0)
Defaults to 0 (false)
"KRN",8994,663,2,"B","MAGIEN",1)

"KRN",8994,663,2,"B","NOCHK",2)

"KRN",8994,663,2,"PARAMSEQ",1,1)

"KRN",8994,663,2,"PARAMSEQ",2,2)

"KRN",8994,663,3,0)
^8994.03^1^1^3041025^^^^
"KRN",8994,663,3,1,0)
Array of Image information for each entry in the Image Group.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020517^126
"PKG",454,22,1,"PAH",1,0)
48^3050113^1216
"PKG",454,22,1,"PAH",1,1,0)
^^27^27^3050113
"PKG",454,22,1,"PAH",1,1,1,0)
Patch 48 is a maintanence patch for 
"PKG",454,22,1,"PAH",1,1,2,0)
Imaging Display, Imaging Capture, Annotation editor and BP.
"PKG",454,22,1,"PAH",1,1,3,0)
It deals with issues encountered in Alpha testing of Patch 8.
"PKG",454,22,1,"PAH",1,1,4,0)
  
"PKG",454,22,1,"PAH",1,1,5,0)
This will check the routines from a BUILD file.
"PKG",454,22,1,"PAH",1,1,6,0)
Select BUILD NAME:    MAG*3.0*48     IMAGING
"PKG",454,22,1,"PAH",1,1,7,0)
MAGFILEB  value = 11713219
"PKG",454,22,1,"PAH",1,1,8,0)
MAGGSIU3  value = 8945343
"PKG",454,22,1,"PAH",1,1,9,0)
MAGGSIUI  value = 14792968
"PKG",454,22,1,"PAH",1,1,10,0)
MAGGSPP   value = 5796302
"PKG",454,22,1,"PAH",1,1,11,0)
MAGGTIA   value = 11492904
"PKG",454,22,1,"PAH",1,1,12,0)
MAGGTIG   value = 10449383
"PKG",454,22,1,"PAH",1,1,13,0)
MAGGTII   value = 8845764
"PKG",454,22,1,"PAH",1,1,14,0)
MAGGTLB   value = 13369489
"PKG",454,22,1,"PAH",1,1,15,0)
MAGGTRPT  value = 11950157
"PKG",454,22,1,"PAH",1,1,16,0)
MAGGTU3   value = 11723273
"PKG",454,22,1,"PAH",1,1,17,0)
MAGGTU4   value = 8466131
"PKG",454,22,1,"PAH",1,1,18,0)
MAGGTU5   value = 4744682
"PKG",454,22,1,"PAH",1,1,19,0)
MAGGTU6   value = 10108948
"PKG",454,22,1,"PAH",1,1,20,0)
MAGGTUP   value = 6957380
"PKG",454,22,1,"PAH",1,1,21,0)
MAGIPO48  value = 7416703
"PKG",454,22,1,"PAH",1,1,22,0)
MAGQBGCC  value = 5552170
"PKG",454,22,1,"PAH",1,1,23,0)
MAGQBUT   value = 14796199
"PKG",454,22,1,"PAH",1,1,24,0)
MAGQBUT4  value = 4347014
"PKG",454,22,1,"PAH",1,1,25,0)
MAGSIXG1  value = 12432475
"PKG",454,22,1,"PAH",1,1,26,0)
MAGSIXGT  value = 10585881
"PKG",454,22,1,"PAH",1,1,27,0)
done
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
20
"RTN","MAGFILEB")
0^17^B48518635
"RTN","MAGFILEB",1,0)
MAGFILEB ;WOIFO/RED - CREATE FILE REFERENCE FROM ^MAG(2005) ; 10/22/2002  06:39
"RTN","MAGFILEB",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGFILEB",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGFILEB",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGFILEB",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGFILEB",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGFILEB",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGFILEB",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGFILEB",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGFILEB",10,0)
 ;; |                                                               |
"RTN","MAGFILEB",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGFILEB",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGFILEB",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGFILEB",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGFILEB",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGFILEB",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGFILEB",17,0)
 ;;
"RTN","MAGFILEB",18,0)
 ; CALL WITH MAGXX=IEN NUMBER IN IMAGE FILE (2005)
"RTN","MAGFILEB",19,0)
 ;Calling FINDFILE requires FILETYPE to be defined ["FULL"|"ABSTRACT"|"BIG"|"TEXT"]
"RTN","MAGFILEB",20,0)
 ;   returns : 
"RTN","MAGFILEB",21,0)
 ; ..MAGFILE1 =          FILENAME ONLY
"RTN","MAGFILEB",22,0)
 ; ..MAGFILE1(.01)=      .01 FIELD OF FILE (2005)
"RTN","MAGFILEB",23,0)
 ; ..MAGFILE1("ERROR") = Message if NetWork device is offline and Image Not On JB
"RTN","MAGFILEB",24,0)
 ; ..MAGINST =                   Pointer to Institution File (Consolidated)
"RTN","MAGFILEB",25,0)
 ; ..                      OR  IEN of Imaging Site Parameters only entry (Non-Consolidated)
"RTN","MAGFILEB",26,0)
 ; ..MAGJBOL =                   NULL("")  OR " ** "_Name of Platter that is Offline"_" ** "
"RTN","MAGFILEB",27,0)
 ; ..MAGOFFLN =                  NULL("")  OR "1"   "1" means image is on platter that is offline.
"RTN","MAGFILEB",28,0)
 ; ..MAGPLACE =                  PLACE of Image. (IEN of IMAGING SITE PARAMETERS FILE)
"RTN","MAGFILEB",29,0)
 ; ..                                      Determined from Network Location file                 
"RTN","MAGFILEB",30,0)
 ; ..MAGPREF  =          Full Path of Image Network (or Jukebox) Directory 
"RTN","MAGFILEB",31,0)
 ;
"RTN","MAGFILEB",32,0)
 ;Calling other TAGS (VST,VSTNOCP,ABS,ABSNOCP,BIG,BIGNOCP,FULL,ABSTRACT,BIGFILE)      
"RTN","MAGFILEB",33,0)
 ;   return all of above and : 
"RTN","MAGFILEB",34,0)
 ; ..MAGFILE  =          FILE NAME WITH FULL PATH FOLLOWED BY $C(0)
"RTN","MAGFILEB",35,0)
 ; ..MAGFILE2 =          FILE NAME WITH FULL PATH W/O $C(0)
"RTN","MAGFILEB",36,0)
 ; .. Deletes MAGXX
"RTN","MAGFILEB",37,0)
 ; .. Does not Return MAGPREF
"RTN","MAGFILEB",38,0)
 ; Modified to handle hierarchical directory hash 4/23/98 -- PMK
"RTN","MAGFILEB",39,0)
 ;
"RTN","MAGFILEB",40,0)
 Q
"RTN","MAGFILEB",41,0)
VST ; Entry point to get a full size image with copying from JB to MAG DISK
"RTN","MAGFILEB",42,0)
 N MAGPREF,MAGJBCP S MAGJBCP=1 G FULL
"RTN","MAGFILEB",43,0)
 ;
"RTN","MAGFILEB",44,0)
VSTNOCP ; Entry point to get a full size image without copying it from the JB
"RTN","MAGFILEB",45,0)
 N MAGPREF,MAGJBCP S MAGJBCP=0 G FULL
"RTN","MAGFILEB",46,0)
 ;
"RTN","MAGFILEB",47,0)
ABS ; Entry point to get an image abstract with copying from JB to MAG DISK
"RTN","MAGFILEB",48,0)
 N MAGPREF,MAGJBCP S MAGJBCP=1 G ABSTRACT
"RTN","MAGFILEB",49,0)
 ;
"RTN","MAGFILEB",50,0)
ABSNOCP ; Entry point to get an image abstract without copying it from the JB
"RTN","MAGFILEB",51,0)
 N MAGPREF,MAGJBCP S MAGJBCP=0 G ABSTRACT
"RTN","MAGFILEB",52,0)
 ;
"RTN","MAGFILEB",53,0)
BIG ; Entry point to get a big file with copying from JB to MAG DISK
"RTN","MAGFILEB",54,0)
 N MAGPREF,MAGJBCP S MAGJBCP=1 G BIGFILE
"RTN","MAGFILEB",55,0)
 ;
"RTN","MAGFILEB",56,0)
BIGNOCP ; Entry point to get a big without copying it from the JB
"RTN","MAGFILEB",57,0)
 N MAGPREF,MAGJBCP S MAGJBCP=0 G BIGFILE
"RTN","MAGFILEB",58,0)
 ;
"RTN","MAGFILEB",59,0)
FULL N FILETYPE,MAGTYPE S FILETYPE="FULL" D FINDFILE G EXIT
"RTN","MAGFILEB",60,0)
 ;
"RTN","MAGFILEB",61,0)
ABSTRACT N FILETYPE,MAGTYPE S FILETYPE="ABSTRACT" D FINDFILE G EXIT
"RTN","MAGFILEB",62,0)
 ;
"RTN","MAGFILEB",63,0)
BIGFILE N FILETYPE,MAGTYPE S FILETYPE="BIG" D FINDFILE G EXIT
"RTN","MAGFILEB",64,0)
 ;
"RTN","MAGFILEB",65,0)
EXIT S MAGPREF=$G(MAGPREF)
"RTN","MAGFILEB",66,0)
 S MAGFILE2=MAGPREF_MAGFILE1,MAGFILE=MAGFILE2_$C(0)
"RTN","MAGFILEB",67,0)
 K MAGXX Q
"RTN","MAGFILEB",68,0)
 ;
"RTN","MAGFILEB",69,0)
FINDFILE ;
"RTN","MAGFILEB",70,0)
 N MAG0,MAGERR,MAGREF,MAGSTORE,CNDBMP
"RTN","MAGFILEB",71,0)
 K MAGPREF,MAGFILE1("ERROR") S (MAGJBOL,MAGERR,MAGTYPE,MAGOFFLN,MAGREF)=""
"RTN","MAGFILEB",72,0)
 I '$D(^MAG(2005,+MAGXX,0)) S MAGFILE1="-13,Image "_MAGXX_" is deleted",MAGERR=1 Q
"RTN","MAGFILEB",73,0)
 S MAG0=^MAG(2005,+MAGXX,0),MAGFILE1=$P(MAG0,"^",2)
"RTN","MAGFILEB",74,0)
 S MAGFILE1(.01)=$P(MAG0,"^") ; for MAILMAN interface
"RTN","MAGFILEB",75,0)
 S MAGFILE1=$P(MAGFILE1,"\",$L(MAGFILE1,"\"))
"RTN","MAGFILEB",76,0)
 ; 
"RTN","MAGFILEB",77,0)
 I FILETYPE="TEXT" S FILETYPE="FULL" S $P(MAGFILE1,".",2)="TXT"
"RTN","MAGFILEB",78,0)
 ;
"RTN","MAGFILEB",79,0)
 I FILETYPE="FULL" D  ; code for full size image
"RTN","MAGFILEB",80,0)
 . S MAGREF=$P(MAG0,"^",3)
"RTN","MAGFILEB",81,0)
 . I MAGREF="" S MAGJB=1,MAGREF=$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGFILEB",82,0)
 . Q
"RTN","MAGFILEB",83,0)
 ;
"RTN","MAGFILEB",84,0)
 I FILETYPE="ABSTRACT" D  Q:MAGERR  ; code for abstract
"RTN","MAGFILEB",85,0)
 . ;  gek 8/26/02 not sending full as the abstract for Documents.
"RTN","MAGFILEB",86,0)
 . ;  If Abs doesn't exist for Document (TIF) we'll Queue it. (don't know if it's on JB)
"RTN","MAGFILEB",87,0)
 . S MAGREF=$P(MAG0,"^",4)
"RTN","MAGFILEB",88,0)
 . I (MAGREF="") D  Q:MAGERR
"RTN","MAGFILEB",89,0)
 . . D RSLVABS^MAGGTU3(MAGXX,.CNDBMP)
"RTN","MAGFILEB",90,0)
 . . I $L(CNDBMP) S MAGFILE1=CNDBMP,MAGERR=1 Q
"RTN","MAGFILEB",91,0)
 . . S MAGJB=1,MAGREF=$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGFILEB",92,0)
 . . ;Patch 48 stop queing abstracts.
"RTN","MAGFILEB",93,0)
 . . ;I $P(MAG0,"^",6)=15 S X=$$ABSTRACT^MAGBAPI(+MAGXX)
"RTN","MAGFILEB",94,0)
 . . Q
"RTN","MAGFILEB",95,0)
 . S $P(MAGFILE1,".",2)="ABS"
"RTN","MAGFILEB",96,0)
 . Q
"RTN","MAGFILEB",97,0)
 ;
"RTN","MAGFILEB",98,0)
 I FILETYPE="BIG" D  Q:MAGERR  ; code for big file
"RTN","MAGFILEB",99,0)
 . N FBIG
"RTN","MAGFILEB",100,0)
 . S FBIG=$G(^MAG(2005,MAGXX,"FBIG"))
"RTN","MAGFILEB",101,0)
 . I FBIG="" D  Q  ; no big file exists
"RTN","MAGFILEB",102,0)
 . . S MAGPREF="",MAGFILE1="-1~BIG File Does NOT Exist",MAGERR=1
"RTN","MAGFILEB",103,0)
 . S $P(MAGFILE1,".",2)="BIG"
"RTN","MAGFILEB",104,0)
 . S MAGREF=$P(FBIG,"^") ; get file from magnetic disk, if possible
"RTN","MAGFILEB",105,0)
 . I MAGREF="" S MAGREF=$P(FBIG,"^",2) ; get file from jukebox
"RTN","MAGFILEB",106,0)
 . Q
"RTN","MAGFILEB",107,0)
 ;
"RTN","MAGFILEB",108,0)
 I MAGREF="" D  Q  ;NO NETWORK LOCATION
"RTN","MAGFILEB",109,0)
 . S MAGFILE1="-1~NO NETWORK OR JUKEBOX LOCATION DEFINED"
"RTN","MAGFILEB",110,0)
 ;
"RTN","MAGFILEB",111,0)
 I '$D(^MAG(2005.2,MAGREF,0)) D  Q  ; BAD POINTER
"RTN","MAGFILEB",112,0)
 . S MAGFILE1="-1~INVALID NETWORK LOCATION POINTER ->"_MAGREF
"RTN","MAGFILEB",113,0)
 ;
"RTN","MAGFILEB",114,0)
 S MAGSTORE=^MAG(2005.2,MAGREF,0),MAGTYPE=$P(MAGSTORE,"^",7)
"RTN","MAGFILEB",115,0)
 I MAGTYPE="" S MAGTYPE=$E(MAGSTORE,1,4) ; in case the type is null
"RTN","MAGFILEB",116,0)
 ;
"RTN","MAGFILEB",117,0)
 S MAGERR=""
"RTN","MAGFILEB",118,0)
 I '$P(MAGSTORE,"^",6) D  Q:MAGERR  ; the network device is off-line
"RTN","MAGFILEB",119,0)
 . I MAGTYPE["MAG" D  Q:MAGERR  ; get the jukebox device
"RTN","MAGFILEB",120,0)
 . . S MAGSTORE=$P(MAG0,"^",5)
"RTN","MAGFILEB",121,0)
 . . I 'MAGSTORE D NOWHERE S MAGERR=1 Q  ;big trouble:nowhere on jbox
"RTN","MAGFILEB",122,0)
 . . S MAGSTORE=^MAG(2005.2,MAGSTORE,0) ; get the file from the jbox
"RTN","MAGFILEB",123,0)
 . . Q
"RTN","MAGFILEB",124,0)
 . I '$P(MAGSTORE,"^",6) D OFFLINE S MAGERR=1 Q  ;jbox cartridge offline
"RTN","MAGFILEB",125,0)
 . S MAGREF=$P(MAG0,"^",5)
"RTN","MAGFILEB",126,0)
 . Q
"RTN","MAGFILEB",127,0)
 ;
"RTN","MAGFILEB",128,0)
 S MAGPREF=""
"RTN","MAGFILEB",129,0)
 I MAGTYPE["MAG" S MAGPREF=$P(MAGSTORE,"^",2)
"RTN","MAGFILEB",130,0)
 ;
"RTN","MAGFILEB",131,0)
 I MAGTYPE?1"WORM".E D  ; code for Jukeboxes
"RTN","MAGFILEB",132,0)
 . I MAGTYPE=("WORM-OTG") S MAGPREF=$P(MAGSTORE,"^",2)
"RTN","MAGFILEB",133,0)
 . E  I MAGTYPE="WORM-PDT" S MAGPREF=$P(MAGSTORE,"^",2)
"RTN","MAGFILEB",134,0)
 . E  I MAGTYPE["WORM-DG" D  ; this code is for DG/SONY jukebox
"RTN","MAGFILEB",135,0)
 . . N SUBDIR ; the subdirectory is the last two digits of the file name
"RTN","MAGFILEB",136,0)
 . . S SUBDIR=$P(MAGFILE1,".")
"RTN","MAGFILEB",137,0)
 . . S SUBDIR=$E(100+$E(SUBDIR,$L(SUBDIR)-1,999),2,3)_"\"
"RTN","MAGFILEB",138,0)
 . . S MAGPREF=$P(MAGSTORE,"^",2)_SUBDIR
"RTN","MAGFILEB",139,0)
 . . Q
"RTN","MAGFILEB",140,0)
 . ; The following is for tracking offline images
"RTN","MAGFILEB",141,0)
 . I $$IMOFFLN(MAGFILE1) S MAGOFFLN=1
"RTN","MAGFILEB",142,0)
 . I MAGJBCP D  ; add the image to the JukeBox TO Hard Disk copy queue
"RTN","MAGFILEB",143,0)
 . . S X=$$JBTOHD^MAGBAPI(MAGXX_"^"_FILETYPE,$$GET1^DIQ(2005.2,MAGREF,.04,"I")) ; DBI - SEB Patch 4
"RTN","MAGFILEB",144,0)
 . . Q
"RTN","MAGFILEB",145,0)
 . Q
"RTN","MAGFILEB",146,0)
 ;
"RTN","MAGFILEB",147,0)
 S MAGPREF=MAGPREF_$$DIRHASH^MAGFILEB(MAGFILE1,MAGREF)
"RTN","MAGFILEB",148,0)
 ;
"RTN","MAGFILEB",149,0)
 Q
"RTN","MAGFILEB",150,0)
 ;
"RTN","MAGFILEB",151,0)
DIRHASH(FILENAME,NETLOCN) ; determine the hierarchical file directory hash 
"RTN","MAGFILEB",152,0)
 ;
"RTN","MAGFILEB",153,0)
 ; Input Variables:
"RTN","MAGFILEB",154,0)
 ; FILENAME -- the name of the file, with or without the extension
"RTN","MAGFILEB",155,0)
 ; NETLOCN --- the network location file internal entry number
"RTN","MAGFILEB",156,0)
 ; Return Value: the hierarchical file directory hash
"RTN","MAGFILEB",157,0)
 ;
"RTN","MAGFILEB",158,0)
 N FN,HASHFLAG,HASH,I
"RTN","MAGFILEB",159,0)
 S HASHFLAG=$P(^MAG(2005.2,NETLOCN,0),"^",8)
"RTN","MAGFILEB",160,0)
 I HASHFLAG="Y" D  ; calculate the hierarchical directory hash
"RTN","MAGFILEB",161,0)
 . ; for an 8.3 filename AB123456.XYZ, the directory hash is AB\12\34
"RTN","MAGFILEB",162,0)
 . ; for a 14.3 filename BALT1234567890.XYZ, its BALT\12\34\56\78
"RTN","MAGFILEB",163,0)
 . S FN=$P(FILENAME,".") ; strip off the extension
"RTN","MAGFILEB",164,0)
 . I $L(FN)=8 S HASH=$E(FN,1,2)_"\"_$E(FN,3,4)_"\"_$E(FN,5,6)
"RTN","MAGFILEB",165,0)
 . E  S HASH=$E(FN,1,4) F I=5,7,9,11 S HASH=HASH_"\"_$E(FN,I,I+1)
"RTN","MAGFILEB",166,0)
 . S HASH=HASH_"\" ; add the trailing directory separator
"RTN","MAGFILEB",167,0)
 . Q
"RTN","MAGFILEB",168,0)
 E  S HASH="" ; flat directory structure, no hierarchical hashing 
"RTN","MAGFILEB",169,0)
 Q HASH
"RTN","MAGFILEB",170,0)
 ; 
"RTN","MAGFILEB",171,0)
NOWHERE ; File is not anywhere on the jukebox -- output error message
"RTN","MAGFILEB",172,0)
 ; Requested image file is not on the Jukebox
"RTN","MAGFILEB",173,0)
 S MAGPREF="",MAGFILE1="-1^"_MAGXX_"^^NOWHERE"
"RTN","MAGFILEB",174,0)
 S MAGFILE1("ERROR")="-1~Network device Off-Line and Image not on JukeBox"
"RTN","MAGFILEB",175,0)
 Q
"RTN","MAGFILEB",176,0)
 ;
"RTN","MAGFILEB",177,0)
OFFLINE ; Jukebox Cartridge is off-line -- output error message
"RTN","MAGFILEB",178,0)
 ; Jukebox Cartridge with image file is off-line."
"RTN","MAGFILEB",179,0)
 S MAGPREF="",MAGFILE1="-1^"_MAGXX_"^"_$P(MAG0,"^",5)_"^OFFLINE"
"RTN","MAGFILEB",180,0)
 Q
"RTN","MAGFILEB",181,0)
IMOFFLN(FILE) ;Check to see if image is offline (jb platter removed)
"RTN","MAGFILEB",182,0)
 N XX,X
"RTN","MAGFILEB",183,0)
 I '$L(FILE) Q 0
"RTN","MAGFILEB",184,0)
 S X=FILE X ^%ZOSF("UPPERCASE") S FILE=Y
"RTN","MAGFILEB",185,0)
 I $D(^MAGQUEUE(2006.033,"B",FILE)) D   Q 1
"RTN","MAGFILEB",186,0)
 . S XX="",XX=$O(^MAGQUEUE(2006.033,"B",FILE,XX))
"RTN","MAGFILEB",187,0)
 . S MAGJBOL=" ** "_$P(^MAGQUEUE(2006.033,XX,0),"^",2)_" **"
"RTN","MAGFILEB",188,0)
 Q 0
"RTN","MAGGSIU3")
0^1^B23176198
"RTN","MAGGSIU3",1,0)
MAGGSIU3 ;WOIFO/GEK - Utilities 
"RTN","MAGGSIU3",2,0)
 ;;3.0;IMAGING;**7,8,48**;Jan 11, 2005
"RTN","MAGGSIU3",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU3",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU3",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU3",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU3",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU3",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU3",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU3",10,0)
 ;; |                                                               |
"RTN","MAGGSIU3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU3",17,0)
 ;;
"RTN","MAGGSIU3",18,0)
 Q
"RTN","MAGGSIU3",19,0)
LOG(MAGRY,MAGIX,IMAGES,PAT,WRKS,TRKID) ;Utilities for Import API, logging data for tracking and debugging 
"RTN","MAGGSIU3",20,0)
 ; into Imaging Windows Session and Imaging Windows Workstation files.
"RTN","MAGGSIU3",21,0)
 N WRKSIEN,WRKSN0,USERSRV,MAGSTART,I,SESSIEN,X,Z,DIERR
"RTN","MAGGSIU3",22,0)
 I '$L($G(WRKS)) S WRKS="NULL WORKSTATION NAME"
"RTN","MAGGSIU3",23,0)
 S WRKSIEN=0
"RTN","MAGGSIU3",24,0)
 S SESSIEN=0
"RTN","MAGGSIU3",25,0)
 S WRKSIEN=$O(^MAG(2006.81,"B",WRKS,""))
"RTN","MAGGSIU3",26,0)
 I 'WRKSIEN D NEWWRKS^MAGGTAU(WRKS,"",.WRKSIEN) I WRKSIEN<1 S MAGRY="0^Error Creating Workstation Entry." Q 0
"RTN","MAGGSIU3",27,0)
 ;
"RTN","MAGGSIU3",28,0)
 S WRKSN0=^MAG(2006.81,WRKSIEN,0) ; '0' node for use later.
"RTN","MAGGSIU3",29,0)
 S WRKSIEN=+WRKSIEN_","
"RTN","MAGGSIU3",30,0)
 S MAGGFDA(2006.81,WRKSIEN,.01)=WRKS ; Computer Name
"RTN","MAGGSIU3",31,0)
 S MAGGFDA(2006.81,WRKSIEN,8)=0 ; Active or not.
"RTN","MAGGSIU3",32,0)
 S MAGGFDA(2006.81,WRKSIEN,3)="@" ; delete logoff time for this job.
"RTN","MAGGSIU3",33,0)
 S MAGGFDA(2006.81,WRKSIEN,10)="@" ; delete session pointer
"RTN","MAGGSIU3",34,0)
 S MAGGFDA(2006.81,WRKSIEN,11)="@" ; reset the session error count.
"RTN","MAGGSIU3",35,0)
 ;
"RTN","MAGGSIU3",36,0)
 ;
"RTN","MAGGSIU3",37,0)
 S MAGGFDA(2006.81,WRKSIEN,12.5)=$P(WRKSN0,U,14)+1 ; total Import Sessions for workstation
"RTN","MAGGSIU3",38,0)
 ;
"RTN","MAGGSIU3",39,0)
 S X=$$NOW^XLFDT
"RTN","MAGGSIU3",40,0)
 S MAGSTART=$E(X,1,12)
"RTN","MAGGSIU3",41,0)
 I $G(DUZ) D 
"RTN","MAGGSIU3",42,0)
 . S MAGGFDA(2006.81,WRKSIEN,1)=DUZ
"RTN","MAGGSIU3",43,0)
 . S MAGGFDA(2006.81,WRKSIEN,2)=MAGSTART
"RTN","MAGGSIU3",44,0)
 ;
"RTN","MAGGSIU3",45,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGSIU3",46,0)
 I $D(DIERR) D RTRNERR^MAGGTAU(.MAGRY) Q 0
"RTN","MAGGSIU3",47,0)
 ; 
"RTN","MAGGSIU3",48,0)
 S MAGRY="1^"
"RTN","MAGGSIU3",49,0)
 ;
"RTN","MAGGSIU3",50,0)
 ; SESSION : Now here we have to create a new session entry;
"RTN","MAGGSIU3",51,0)
 ; //TODO, make a generic call to create a Session entry, this is 
"RTN","MAGGSIU3",52,0)
 ;   a duplicate of code in MAGGTAU
"RTN","MAGGSIU3",53,0)
 D GETS^DIQ(200,DUZ_",","29","I","Z","") ; service/section
"RTN","MAGGSIU3",54,0)
 S USERSRV=$G(Z(200,DUZ_",",29,"I"))
"RTN","MAGGSIU3",55,0)
 ;
"RTN","MAGGSIU3",56,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGSIU3",57,0)
 S MAGGFDA(2006.82,"+1,",.01)=$P(^VA(200,DUZ,0),U,1) ; User
"RTN","MAGGSIU3",58,0)
 S MAGGFDA(2006.82,"+1,",1)=DUZ ; USER
"RTN","MAGGSIU3",59,0)
 S MAGGFDA(2006.82,"+1,",2)=MAGSTART ; Session Start Time
"RTN","MAGGSIU3",60,0)
 S MAGGFDA(2006.82,"+1,",4)=+WRKSIEN ; Workstation 
"RTN","MAGGSIU3",61,0)
 I $D(^DPT(+PAT,0)) S MAGGFDA(2006.82,"+1,",5)=+PAT ; Patient 
"RTN","MAGGSIU3",62,0)
 S MAGGFDA(2006.82,"+1,",7)=+USERSRV ; User's Service/Section pointer
"RTN","MAGGSIU3",63,0)
 S MAGGFDA(2006.82,"+1,",13)=3 ; 1=normal 2= started by CPRS 3= Import API session.
"RTN","MAGGSIU3",64,0)
 S MAGGFDA(2006.82,"+1,",8)=$G(TRKID) ; Tracking ID
"RTN","MAGGSIU3",65,0)
 ;
"RTN","MAGGSIU3",66,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGSIU3",67,0)
 I $D(DIERR) D RTRNERR^MAGGTAU(.MAGRY) Q 0
"RTN","MAGGSIU3",68,0)
 S MAGRY="1^"
"RTN","MAGGSIU3",69,0)
 I '+MAGXIEN(1) S MAGRY="0^" Q 0
"RTN","MAGGSIU3",70,0)
 S SESSIEN=+MAGXIEN(1)
"RTN","MAGGSIU3",71,0)
 S MAGRY=SESSIEN_"^Session # "_SESSIEN_" Started."
"RTN","MAGGSIU3",72,0)
 S MAGGFDA(2006.81,+WRKSIEN_",",10)=SESSIEN
"RTN","MAGGSIU3",73,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGSIU3",74,0)
 D ACTION^MAGGTAU("IMPORT^",0,SESSIEN)       ;
"RTN","MAGGSIU3",75,0)
 S I="" F  S I=$O(MAGIX(I)) Q:I=""  D ACTION^MAGGTAU("Data:|"_"("_I_"): "_$TR(MAGIX(I),"^","~"),0,SESSIEN)
"RTN","MAGGSIU3",76,0)
 S I="" F  S I=$O(IMAGES(I)) Q:I=""  D ACTION^MAGGTAU("Image:|"_"("_I_"): "_$TR(IMAGES(I),"^","~"),0,SESSIEN)
"RTN","MAGGSIU3",77,0)
 Q SESSIEN
"RTN","MAGGSIU3",78,0)
LOGRES(RES,LOGTM,MAGSESS) ;
"RTN","MAGGSIU3",79,0)
 N I
"RTN","MAGGSIU3",80,0)
 S LOGTM=+$G(LOGTM)
"RTN","MAGGSIU3",81,0)
 I '$G(MAGSESS) Q
"RTN","MAGGSIU3",82,0)
 D ACTION^MAGGTAU("RESULTS^",1,MAGSESS)       ;
"RTN","MAGGSIU3",83,0)
 S I="" F  S I=$O(RES(I)) Q:I=""  D ACTION^MAGGTAU("Result:|"_"("_I_"): "_$TR(RES(I),"^","~"),LOGTM,MAGSESS)
"RTN","MAGGSIU3",84,0)
 Q
"RTN","MAGGSIU3",85,0)
INPRC(RET,ARR) ; gek/Duplicate Import check
"RTN","MAGGSIU3",86,0)
 ; gek/stop duplicates. Import now has a status in the Session File.
"RTN","MAGGSIU3",87,0)
 ; ^MAG(2006.82,"STATUS",TRKID,SESSION IEN)= status
"RTN","MAGGSIU3",88,0)
 ; INPRC tells if the Session (by Tracking ID) is in process  or not.
"RTN","MAGGSIU3",89,0)
 ; if In Process, we won't return the data.
"RTN","MAGGSIU3",90,0)
 ; INPRC will set the status to In Process if not currently in process.
"RTN","MAGGSIU3",91,0)
 ; P48T1  This function is not called in P48.
"RTN","MAGGSIU3",92,0)
 ;   Possible use in future.
"RTN","MAGGSIU3",93,0)
 N I,SESS,STAT,TRKID
"RTN","MAGGSIU3",94,0)
 S TRKID=0
"RTN","MAGGSIU3",95,0)
 S I="" F  S I=$O(ARR(I)) Q:I=""  D
"RTN","MAGGSIU3",96,0)
 . S FLD=$P(ARR(I),"^",1) I (FLD=108)!(FLD="TRKID") D
"RTN","MAGGSIU3",97,0)
 . . S TRKID=$P(ARR(I),"^",2)
"RTN","MAGGSIU3",98,0)
 . . Q
"RTN","MAGGSIU3",99,0)
 . Q
"RTN","MAGGSIU3",100,0)
 I TRKID="" S RET="0^Null value for Tracking ID." Q 0
"RTN","MAGGSIU3",101,0)
 S RET="0^This tracking ID: "_TRKID_" isn't being processed"
"RTN","MAGGSIU3",102,0)
 I '$D(^MAG(2006.82,"E",TRKID)) Q 0
"RTN","MAGGSIU3",103,0)
 S SESS=$$SES4TRK(TRKID) Q:'SESS 0  ; This tracking ID isn't being processed yet.
"RTN","MAGGSIU3",104,0)
 S STAT=$$GETSTAT(TRKID,SESS)
"RTN","MAGGSIU3",105,0)
 I 'STAT D SETSTAT(TRKID,SESS,"-5") Q 0  ; -5 means In Process
"RTN","MAGGSIU3",106,0)
 ; If in process we return 1
"RTN","MAGGSIU3",107,0)
 I (+STAT=-5) D  Q 1
"RTN","MAGGSIU3",108,0)
 . S RET="0^Import for Tracking ID: "_TRKID_" has been processed."
"RTN","MAGGSIU3",109,0)
 Q 0
"RTN","MAGGSIU3",110,0)
SES4TRK(TRKID) ; Returns the Session ID for a Tracking ID
"RTN","MAGGSIU3",111,0)
 Q +$O(^MAG(2006.82,"E",TRKID,""),-1)
"RTN","MAGGSIU3",112,0)
 ;
"RTN","MAGGSIU3",113,0)
GETSTAT(TRKID,SESS) ; Get Status for given Tracking ID and Session ID
"RTN","MAGGSIU3",114,0)
 Q $G(^MAG(2006.82,"STATUS",TRKID,SESS))
"RTN","MAGGSIU3",115,0)
 ;
"RTN","MAGGSIU3",116,0)
SETSTAT(TRKID,SESS,STAT) ; Set Status for given Tracking ID and Session ID
"RTN","MAGGSIU3",117,0)
 S ^MAG(2006.82,"STATUS",TRKID,SESS)=STAT
"RTN","MAGGSIU3",118,0)
 Q
"RTN","MAGGSIUI")
0^2^B55407934
"RTN","MAGGSIUI",1,0)
MAGGSIUI ;WOIFO/GEK - Utilities for Image Import API
"RTN","MAGGSIUI",2,0)
 ;;3.0;IMAGING;**7,8,48**;Jan 11, 2005
"RTN","MAGGSIUI",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIUI",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIUI",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIUI",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIUI",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIUI",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIUI",10,0)
 ;; |                                                               |
"RTN","MAGGSIUI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIUI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIUI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIUI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIUI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIUI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIUI",17,0)
 ;;
"RTN","MAGGSIUI",18,0)
 Q
"RTN","MAGGSIUI",19,0)
REMOTE(MAGRY,MAGDATA) ;RPC [MAG4 REMOTE IMPORT]
"RTN","MAGGSIUI",20,0)
 ; To Import Images into VistA from a Windows App, by sending an array.
"RTN","MAGGSIUI",21,0)
 I ($D(MAGDATA)<10) S MAGRY(0)="0^Missing Data Array !." Q
"RTN","MAGGSIUI",22,0)
 N I,J,ICT,DCT,MAGIX,IMAGES,ERR,X,Z
"RTN","MAGGSIUI",23,0)
 S (ERR,ICT,DCT)=0
"RTN","MAGGSIUI",24,0)
 S I="" F  S I=$O(MAGDATA(I)) Q:I=""  S X=MAGDATA(I) D  Q:ERR
"RTN","MAGGSIUI",25,0)
 . S Z=$P(X,U)
"RTN","MAGGSIUI",26,0)
 . I (X="")!(Z="") S MAGRY(0)="0^INVALID Data in Input Array: Node "_I_"="""_X_"",ERR=1 Q
"RTN","MAGGSIUI",27,0)
 . I Z="IMAGE" S ICT=ICT+1,IMAGES(ICT)=$P(X,U,2,99) Q
"RTN","MAGGSIUI",28,0)
 . S DCT=DCT+1,MAGIX(Z)=$P(X,U,2,99)
"RTN","MAGGSIUI",29,0)
 I 'ERR D IMPORT(.MAGRY,.IMAGES,.MAGIX)
"RTN","MAGGSIUI",30,0)
 Q
"RTN","MAGGSIUI",31,0)
 ;
"RTN","MAGGSIUI",32,0)
IMPORT(MAGRY,IMAGES,MAGIX) ;
"RTN","MAGGSIUI",33,0)
 ; "IDFN","PXPKG","PXIEN","PXDT","TRKID","ACQD","ACQS","ACQL","STSCB","ITYPE",
"RTN","MAGGSIUI",34,0)
 ;        "CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT",
"RTN","MAGGSIUI",35,0)
 ;        "IXTYPE","IXSPEC","IXPROC","IXORIGIN    ;Patch 8: Added Index fields
"RTN","MAGGSIUI",36,0)
 ;
"RTN","MAGGSIUI",37,0)
 ;   Index fields Package and Class ("IXPKG" and "IXCLS") aren't accepted.  The values for those
"RTN","MAGGSIUI",38,0)
 ;     fields are computed.
"RTN","MAGGSIUI",39,0)
 ;We'll convert the parameters into the Image Data Array,
"RTN","MAGGSIUI",40,0)
 ;   validate it, then set the Import Queue
"RTN","MAGGSIUI",41,0)
 ;
"RTN","MAGGSIUI",42,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGSIUI"
"RTN","MAGGSIUI",43,0)
 K MAGRY S MAGRY(0)="0^Importing data..."
"RTN","MAGGSIUI",44,0)
 N APISESS
"RTN","MAGGSIUI",45,0)
 N PRM,CT,MAGA,MAGY,MAGTN,TNODE
"RTN","MAGGSIUI",46,0)
 N IDFN,PXPKG,PXIEN,PXDT,TRKID,ACQD,ACQS,ACQL,STSCB,ITYPE,CMTH,CDUZ,USERNAME,PASSWORD,GDESC,DFLG,TRTYPE,DOCCTG,DOCDT,IXPKG,IXCLS,IXTYPE,IXSPEC,IXPROC,IXORIGIN
"RTN","MAGGSIUI",47,0)
 N MAGTM,QTIME,MAGIXZ
"RTN","MAGGSIUI",48,0)
 S CT=0
"RTN","MAGGSIUI",49,0)
 M MAGIXZ=MAGIX
"RTN","MAGGSIUI",50,0)
 F PRM="IDFN","PXPKG","PXIEN","PXDT","TRKID","ACQD","ACQS","ACQL","STSCB","ITYPE","CMTH","CDUZ","USERNAME","PASSWORD","GDESC","DFLG","TRTYPE","DOCCTG","DOCDT","IXTYPE","IXSPEC","IXPROC","IXORIGIN" D
"RTN","MAGGSIUI",51,0)
 . S @PRM=$G(MAGIX(PRM)) K MAGIX(PRM) ; P8T14 added K.. and next line to account for field numbers later.
"RTN","MAGGSIUI",52,0)
 . Q
"RTN","MAGGSIUI",53,0)
 S PRM="" F  S PRM=$O(MAGIX(PRM)) Q:PRM=""  D SA(PRM,$G(MAGIX(PRM)))
"RTN","MAGGSIUI",54,0)
 ;
"RTN","MAGGSIUI",55,0)
 S MAGTM=$$NOW^XLFDT
"RTN","MAGGSIUI",56,0)
 I '$G(DUZ) S MAGRY(0)="0^DUZ is undefined." Q  ;D ERRTRK Q
"RTN","MAGGSIUI",57,0)
 ; DATATRK sets the Global Variable APISESS  = Internal entry number for Session File.
"RTN","MAGGSIUI",58,0)
 D DATATRK
"RTN","MAGGSIUI",59,0)
 I '$$REQPARAM() D ERRTRK Q
"RTN","MAGGSIUI",60,0)
 ;
"RTN","MAGGSIUI",61,0)
 ; Set the image data array
"RTN","MAGGSIUI",62,0)
 ;S CT=0
"RTN","MAGGSIUI",63,0)
 D SA(5,IDFN)    ;PATIENT
"RTN","MAGGSIUI",64,0)
 D SA(16,PXPKG)   ;PARENT DATA FILE
"RTN","MAGGSIUI",65,0)
 D SA(17,PXIEN) ;PARENT GLOBAL ROOT
"RTN","MAGGSIUI",66,0)
 D SA(15,PXDT)   ; PROCEDURE/EXAM DATE/TIME
"RTN","MAGGSIUI",67,0)
 D SA(108,TRKID) ; TRACKING ID (new)
"RTN","MAGGSIUI",68,0)
 D SA("ACQD",ACQD)  ; ACQUISTION DEVICE ( new )
"RTN","MAGGSIUI",69,0)
 ; Acquisition site is a 2 ';' piece param of INSTITUTION ';' HOSPITAL LOCATION  
"RTN","MAGGSIUI",70,0)
 ;//  ACQS had Location in it, doesn't now.
"RTN","MAGGSIUI",71,0)
 D SA(.05,ACQS) ; this used to be fld 105
"RTN","MAGGSIUI",72,0)
 D SA(101,ACQL)
"RTN","MAGGSIUI",73,0)
 ;// 5/7/03 Patch 8 : fix bug with ACQS and ACQL this ';' was old way of sending info.
"RTN","MAGGSIUI",74,0)
 ;//D SA("ACQS",ACQS_";"_$G(ACQL)) ;Fields of ACQUISITION DEVICE file: #1 INSTITUTION ';' #2 HOSPITAL LOCATION
"RTN","MAGGSIUI",75,0)
 D SA("STATUSCB",STSCB)  ; STATUS CALLBACK  (was referred to as ExceptionHandler)
"RTN","MAGGSIUI",76,0)
 D SA(3,ITYPE)   ; OBJECT TYPE
"RTN","MAGGSIUI",77,0)
 D SA("CALLMTH",CMTH)     ; CALL METHOD
"RTN","MAGGSIUI",78,0)
 D SA(8,CDUZ)    ; IMAGE SAVE BY
"RTN","MAGGSIUI",79,0)
 ; // It was USERPASS = USERNAME_";"_(encrypted)PASSWORD
"RTN","MAGGSIUI",80,0)
 D SA("USERNAME",USERNAME)
"RTN","MAGGSIUI",81,0)
 D SA("PASSWORD",PASSWORD)
"RTN","MAGGSIUI",82,0)
 D SA(10,GDESC)  ; SHORT DESCRIPTION
"RTN","MAGGSIUI",83,0)
 D SA("DELFLAG",DFLG)    ; DELETE FLAG
"RTN","MAGGSIUI",84,0)
 D SA("TRNSTYP",TRTYPE)  ; TRANSACTION TYPE
"RTN","MAGGSIUI",85,0)
 D SA(100,DOCCTG) ;  document Main category
"RTN","MAGGSIUI",86,0)
 ;D SA("DOCCTG2",DOCCTG2) ;  document Sub category
"RTN","MAGGSIUI",87,0)
 ;D SA("DOCCTG3",DOCCTG3) ;  document Sub Sub category
"RTN","MAGGSIUI",88,0)
 D SA(110,DOCDT)     ;  document date
"RTN","MAGGSIUI",89,0)
 ; Patch 8 allows Index fields to be imported.
"RTN","MAGGSIUI",90,0)
 ;"IXTYPE","IXSPEC","IXPROC","IXORIGIN"
"RTN","MAGGSIUI",91,0)
 D SA(42,IXTYPE)     ;  Index Type
"RTN","MAGGSIUI",92,0)
 D SA(43,IXPROC)     ;  Index Proc/Event
"RTN","MAGGSIUI",93,0)
 D SA(44,IXSPEC)     ;  Index Spec/SubSpec
"RTN","MAGGSIUI",94,0)
 D SA(45,IXORIGIN)         ;  Index Origin
"RTN","MAGGSIUI",95,0)
 ;
"RTN","MAGGSIUI",96,0)
 ;
"RTN","MAGGSIUI",97,0)
 D VAL^MAGGSIV(.MAGRY,.MAGA,1)
"RTN","MAGGSIUI",98,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",99,0)
 D SI("IMAGES",.IMAGES)  ; ARRAY OF IMAGES TO IMPORT
"RTN","MAGGSIUI",100,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",101,0)
 K MAGRY
"RTN","MAGGSIUI",102,0)
 ;
"RTN","MAGGSIUI",103,0)
 I TRTYPE="NOQUEUE" M MAGRY=MAGA S MAGRY(0)="1^" Q
"RTN","MAGGSIUI",104,0)
 ; Testing without BackGround Processor.
"RTN","MAGGSIUI",105,0)
 ;
"RTN","MAGGSIUI",106,0)
 ; This call is for BP
"RTN","MAGGSIUI",107,0)
 S QTIME=$$NOW^XLFDT
"RTN","MAGGSIUI",108,0)
 S MAGY=$$IMPORT^MAGBAPI(.MAGA,STSCB,TRKID,$$PLACE^MAGBAPI(DUZ(2))) ; DBI - SEB 10/11/2002
"RTN","MAGGSIUI",109,0)
 ; RETURN THE QUEUE NUMBER
"RTN","MAGGSIUI",110,0)
 I 'MAGY S MAGRY(0)="0^Error Setting Queue: "_$P(MAGY,U,2),MAGY=TRKID
"RTN","MAGGSIUI",111,0)
 E  S MAGRY(0)=MAGY_"^Data has been Queued.",MAGY=+MAGY
"RTN","MAGGSIUI",112,0)
 ; for Testing, we'll track input array, and results array by Queue number.
"RTN","MAGGSIUI",113,0)
 I 'MAGRY(0) D ERRTRK Q
"RTN","MAGGSIUI",114,0)
 D LOGRES^MAGGSIU3(.MAGRY,0,APISESS)
"RTN","MAGGSIUI",115,0)
 ;
"RTN","MAGGSIUI",116,0)
 Q
"RTN","MAGGSIUI",117,0)
REQPARAM() ;Check that the required parameters have values.
"RTN","MAGGSIUI",118,0)
 N CT
"RTN","MAGGSIUI",119,0)
 S CT=0
"RTN","MAGGSIUI",120,0)
 S MAGRY(0)="1^Checking for Required parameter values..."
"RTN","MAGGSIUI",121,0)
 I IDFN="" S CT=CT+1,MAGRY(CT)="DFN is Required. !"
"RTN","MAGGSIUI",122,0)
 I '$D(IMAGES),'CMTH S CT=CT+1,MAGRY(CT)="List of Images is Required. !"
"RTN","MAGGSIUI",123,0)
 ;
"RTN","MAGGSIUI",124,0)
 I (PXPKG=""),(DOCCTG=""),(IXTYPE="") S CT=CT+1,MAGRY(CT)="Procedure or Category or Index Type is Required. !"
"RTN","MAGGSIUI",125,0)
 I (PXPKG'=""),(DOCCTG'="") S CT=CT+1,MAGRY(CT)="Procedure OR Document Category. Not BOTH. !"
"RTN","MAGGSIUI",126,0)
 ;
"RTN","MAGGSIUI",127,0)
 I (PXPKG'=""),(PXIEN="") S CT=CT+1,MAGRY(CT)="Procedure IEN is Required. !"
"RTN","MAGGSIUI",128,0)
 I (PXPKG=""),(PXIEN'="") S CT=CT+1,MAGRY(CT)="Procedure Package is Required. !"
"RTN","MAGGSIUI",129,0)
 I (PXPKG'=""),(PXDT="") S CT=CT+1,MAGRY(CT)="Procedure Date is Required. !"
"RTN","MAGGSIUI",130,0)
 ;
"RTN","MAGGSIUI",131,0)
 ;Patch 8 index field check... could be using Patch 7 or Patch 8.
"RTN","MAGGSIUI",132,0)
 ;  We're this far, so either PXIEN or DOCCTG is defined
"RTN","MAGGSIUI",133,0)
 I (IXTYPE'=""),(DOCCTG'="") S CT=CT+1,MAGRY(CT)="Image Type OR Document Category. Not BOTH. !"
"RTN","MAGGSIUI",134,0)
 ; MAGGSIA computes PACKAGE #40 and CLASS #41 when adding an Image (2005) entry.
"RTN","MAGGSIUI",135,0)
 ;
"RTN","MAGGSIUI",136,0)
 I TRKID="" S CT=CT+1,MAGRY(CT)="Tracking ID is Required. !"
"RTN","MAGGSIUI",137,0)
 I ACQD="" S CT=CT+1,MAGRY(CT)="Acquisition Device is Required. !"
"RTN","MAGGSIUI",138,0)
 ;   ACQS ( could ? ) default to users institution i.e. DUZ(2)
"RTN","MAGGSIUI",139,0)
 I ACQS="" S CT=CT+1,MAGRY(CT)="Acquisition Site is Required. !"
"RTN","MAGGSIUI",140,0)
 ;
"RTN","MAGGSIUI",141,0)
 I STSCB="" S CT=CT+1,MAGRY(CT)="Status Handler (TAG^ROUTINE) is Required. !"
"RTN","MAGGSIUI",142,0)
 ;
"RTN","MAGGSIUI",143,0)
 I (DOCCTG'=""),(DOCDT="") S CT=CT+1,MAGRY(CT)="Document Date is Required. !"
"RTN","MAGGSIUI",144,0)
 ;
"RTN","MAGGSIUI",145,0)
 I (CT>0) S MAGRY(0)="0^Required parameter is null" Q MAGRY(0)
"RTN","MAGGSIUI",146,0)
 ; More Checks here to stop Duplicate or incorrect Tracking ID's from being Queued
"RTN","MAGGSIUI",147,0)
 ;  //TODO: Need to check the Queue File, to see if this Tracking ID is already Queued.
"RTN","MAGGSIUI",148,0)
 I (TRKID'="") I $D(^MAG(2005,"ATRKID",TRKID)) S MAGRY(0)="0^Tracking ID Must be Unique !"
"RTN","MAGGSIUI",149,0)
 I (TRKID'="") I ($L(TRKID,";")<2) S MAGRY(0)="0^Tracking ID Must have "";"" Delimiter"
"RTN","MAGGSIUI",150,0)
 ;
"RTN","MAGGSIUI",151,0)
 Q MAGRY(0)
"RTN","MAGGSIUI",152,0)
 ;
"RTN","MAGGSIUI",153,0)
SA(FLD,VAL) ;Set the data array with Fld,Value
"RTN","MAGGSIUI",154,0)
 Q:VAL=""
"RTN","MAGGSIUI",155,0)
 S CT=CT+1,MAGA(CT)=FLD_U_VAL
"RTN","MAGGSIUI",156,0)
 Q
"RTN","MAGGSIUI",157,0)
SI(FLD,ARR) ;Set the images into the data array
"RTN","MAGGSIUI",158,0)
 ; Don't New 'CT' it is a global variable.
"RTN","MAGGSIUI",159,0)
 ; P48T1 changes to account for more than 1 '.' in filename.
"RTN","MAGGSIUI",160,0)
 S MAGRY(0)="1^Valid Image file Extensions."
"RTN","MAGGSIUI",161,0)
 N I,MAGEXT,MAGFN
"RTN","MAGGSIUI",162,0)
 S I="" F  S I=$O(ARR(I)) Q:I=""  D  Q:'MAGRY(0)
"RTN","MAGGSIUI",163,0)
 . S CT=CT+1
"RTN","MAGGSIUI",164,0)
 . I ($L($P(ARR(I),U),".")<2) S MAGRY(0)="0^Invalid file name: "_ARR(I) Q
"RTN","MAGGSIUI",165,0)
 . S MAGFN=$P(ARR(I),"^")
"RTN","MAGGSIUI",166,0)
 . S MAGEXT=$$UP^XLFSTR($P(MAGFN,".",$L(MAGFN,".")))
"RTN","MAGGSIUI",167,0)
 . I '$D(^MAG(2005.021,"B",MAGEXT)) S MAGRY(0)="0^Unsupported File Type:'."_MAGEXT Q
"RTN","MAGGSIUI",168,0)
 . S MAGA(CT)="IMAGE"_U_ARR(I)
"RTN","MAGGSIUI",169,0)
 Q
"RTN","MAGGSIUI",170,0)
GETARR(ARR,QNUM) ;RPC [MAG4 DATA FROM IMPORT QUEUE]
"RTN","MAGGSIUI",171,0)
 ; Get the Input Array from Queue Number
"RTN","MAGGSIUI",172,0)
 ; P48T1 Take out changes that Stopped Duplicates.
"RTN","MAGGSIUI",173,0)
 ;    BP changes will handle it now.
"RTN","MAGGSIUI",174,0)
 I '$G(QNUM) S ARR(0)="0^INVALID QUEUE Number: "_$G(QNUM) Q
"RTN","MAGGSIUI",175,0)
 D IMPAR^MAGQBUT2(.ARR,QNUM)
"RTN","MAGGSIUI",176,0)
 Q
"RTN","MAGGSIUI",177,0)
STATUSCB(MAGRY,STAT,TAGRTN,DOCB) ;RPC [MAG4 STATUS CALLBACK]
"RTN","MAGGSIUI",178,0)
 ; Report Status to calling application
"RTN","MAGGSIUI",179,0)
 ; Now the IAPI and OCX make this call.  Not BP
"RTN","MAGGSIUI",180,0)
 ; STAT(0)= "0^message" or "1^message"
"RTN","MAGGSIUI",181,0)
 ; STAT(1)=TRKID,
"RTN","MAGGSIUI",182,0)
 ;        (2)=QNUM
"RTN","MAGGSIUI",183,0)
 ;        (3..N)=warnings
"RTN","MAGGSIUI",184,0)
 ;TAGRTN                 : The TAG^RTN to call with Status Array
"RTN","MAGGSIUI",185,0)
 ;DOCB                   : (1|0) to suppress execution of Status Callback
"RTN","MAGGSIUI",186,0)
 ; 
"RTN","MAGGSIUI",187,0)
 N APISESS,TRKID,CBMSG
"RTN","MAGGSIUI",188,0)
 S DOCB=$S($G(DOCB)="":1,1:+$G(DOCB)) ;  Default to TRUE
"RTN","MAGGSIUI",189,0)
 ; Old Import API and BP that made this call, will work : DOCB defaults to 1
"RTN","MAGGSIUI",190,0)
 S CBMSG=$S(DOCB:"Status Callback was called",1:"Status Callback was NOT called")
"RTN","MAGGSIUI",191,0)
 I DOCB D @(TAGRTN_"(.STAT)")
"RTN","MAGGSIUI",192,0)
 S MAGRY="1^"_CBMSG
"RTN","MAGGSIUI",193,0)
 S STAT($O(STAT(""),-1)+1)=MAGRY
"RTN","MAGGSIUI",194,0)
 S TRKID=$G(STAT(1))
"RTN","MAGGSIUI",195,0)
 ; Log Results if Status Callback was made or not.
"RTN","MAGGSIUI",196,0)
 I $L(TRKID) D
"RTN","MAGGSIUI",197,0)
 . S APISESS=$$SES4TRK^MAGGSIU3(TRKID) ;
"RTN","MAGGSIUI",198,0)
 . I APISESS D LOGRES^MAGGSIU3(.STAT,0,APISESS) ;gek/send Tracking ID to log status
"RTN","MAGGSIUI",199,0)
 Q
"RTN","MAGGSIUI",200,0)
TESTCB(STATARR) ;TESTING.  This is used as the Status Callback for testing purposes
"RTN","MAGGSIUI",201,0)
 ; a Valid "M" TAG^ROUTINE must be sent as a value for the import property STATUSCB
"RTN","MAGGSIUI",202,0)
 ; This TAG is here so that the STATUSCB value validates successfully
"RTN","MAGGSIUI",203,0)
 Q
"RTN","MAGGSIUI",204,0)
ERRTRK ;Track bad data and Quit
"RTN","MAGGSIUI",205,0)
 N I
"RTN","MAGGSIUI",206,0)
 D LOGERR^MAGGSERR("---- New Error ----",APISESS)
"RTN","MAGGSIUI",207,0)
 S I="" F  S I=$O(MAGRY(I)) Q:I=""  D LOGERR^MAGGSERR(MAGRY(I),APISESS)
"RTN","MAGGSIUI",208,0)
 Q
"RTN","MAGGSIUI",209,0)
DATATRK ; Track the raw data being sent to the Import API.
"RTN","MAGGSIUI",210,0)
 ; This is called to log the data being imported.  
"RTN","MAGGSIUI",211,0)
 ; Later the Results (or error messages) will be logged
"RTN","MAGGSIUI",212,0)
 N XY
"RTN","MAGGSIUI",213,0)
 S APISESS=$$LOG^MAGGSIU3(.XY,.MAGIXZ,.IMAGES,IDFN,ACQD,TRKID)
"RTN","MAGGSIUI",214,0)
 Q
"RTN","MAGGSIUI",215,0)
ERR ; ERROR TRAP FOR Import API
"RTN","MAGGSIUI",216,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGSIUI",217,0)
 S MAGRY(0)="0^ETRAP: "_ERR
"RTN","MAGGSIUI",218,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSIUI",219,0)
 I $G(APISESS) D ERRTRK
"RTN","MAGGSIUI",220,0)
 Q
"RTN","MAGGSPP")
0^15^B10835385
"RTN","MAGGSPP",1,0)
MAGGSPP ;WOIFO/GEK - Utilities for Post Processing of a new Image Entry
"RTN","MAGGSPP",2,0)
 ;;3.0;IMAGING;**7,8,48**;Jan 11, 2005
"RTN","MAGGSPP",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSPP",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSPP",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSPP",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSPP",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSPP",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSPP",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSPP",10,0)
 ;; |                                                               |
"RTN","MAGGSPP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSPP",12,0)
 ;; | a medical device.  As such, it may not be changed             |
"RTN","MAGGSPP",13,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGGSPP",14,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGGSPP",15,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGGSPP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSPP",17,0)
 ;;
"RTN","MAGGSPP",18,0)
 Q
"RTN","MAGGSPP",19,0)
ACTION(MAGRY,MAGIEN) ;RPC [MAG4 POST PROCESSING]
"RTN","MAGGSPP",20,0)
 ; Post processing when Image is sucessfully created in Image
"RTN","MAGGSPP",21,0)
 ;  This is Pre 3.0.8
"RTN","MAGGSPP",22,0)
 ; file and copied to Network.
"RTN","MAGGSPP",23,0)
 ;       MAGRY : is the Return Array
"RTN","MAGGSPP",24,0)
 ;       MAGRY(0)  = 1^SUCCESS
"RTN","MAGGSPP",25,0)
 ;                OR 0^ERROR MESSAGE
"RTN","MAGGSPP",26,0)
 ;       MAGIEN : is the Internal Entry Number in the Image File.
"RTN","MAGGSPP",27,0)
 ;  This call is Post Processing depending on the Type of MAG DESCRIPTIVE CATEGORY
"RTN","MAGGSPP",28,0)
 ;  Does the Image Point to a MagDescriptive Category.
"RTN","MAGGSPP",29,0)
 ;  
"RTN","MAGGSPP",30,0)
 I '+$G(^MAG(2005,MAGIEN,100)) S MAGRY(0)="1^No Post Processing required for Image ID: "_MAGIEN Q
"RTN","MAGGSPP",31,0)
 N MAGCTG S MAGCTG=+^MAG(2005,MAGIEN,100)
"RTN","MAGGSPP",32,0)
 I '+$G(^MAG(2005.81,MAGCTG,1)) S MAGRY(0)="1^No Post Processing required for Image ID: "_MAGIEN Q
"RTN","MAGGSPP",33,0)
 ; SO here we know an action is in play for this Image Category
"RTN","MAGGSPP",34,0)
 N MAGACT
"RTN","MAGGSPP",35,0)
 S MAGACT=$P(^MAG(2005.81,MAGCTG,1),U,3,4)
"RTN","MAGGSPP",36,0)
 ;        D @(TAGRTN_"(.STAT)")
"RTN","MAGGSPP",37,0)
 D @(MAGACT_"(.MAGRY,"_MAGIEN_")")
"RTN","MAGGSPP",38,0)
 ;;
"RTN","MAGGSPP",39,0)
 Q
"RTN","MAGGSPP",40,0)
POSTACT(MAGRY,MAGIEN) ;RPC [MAG4 POST PROCESS ACTIONS]
"RTN","MAGGSPP",41,0)
 ; Post processing when Image is sucessfully created in Image
"RTN","MAGGSPP",42,0)
 ; file and copied to Network. Patch 3.0.8  
"RTN","MAGGSPP",43,0)
 ;       MAGRY : is the Return Array
"RTN","MAGGSPP",44,0)
 ;       MAGRY(0)  = 1^SUCCESS
"RTN","MAGGSPP",45,0)
 ;                OR 0^ERROR MESSAGE
"RTN","MAGGSPP",46,0)
 ; Post Processing Action: depends on Image Type (fld #42 )
"RTN","MAGGSPP",47,0)
 N TYPE,AIEN
"RTN","MAGGSPP",48,0)
 S TYPE=+$P($G(^MAG(2005,MAGIEN,40)),"^",3) I 'TYPE D  Q
"RTN","MAGGSPP",49,0)
 . ; comment out, for backward compatibility
"RTN","MAGGSPP",50,0)
 . ;S MAGRY(0)="1^No Post Processing required for Image ID: "_MAGIEN Q
"RTN","MAGGSPP",51,0)
 . ;This is here so that the new code is backward compatible. If no value for TYPE INDEX, we have to 
"RTN","MAGGSPP",52,0)
 . ;check the MAG DESC CTG field.
"RTN","MAGGSPP",53,0)
 . D ACTION(.MAGRY,MAGIEN)
"RTN","MAGGSPP",54,0)
 . Q
"RTN","MAGGSPP",55,0)
 I '$D(^MAG(2005.86,"ATYPE",TYPE)) S MAGRY(0)="1^No Post Processing required for "_$P(^MAG(2005.83,TYPE,0),U) Q
"RTN","MAGGSPP",56,0)
 S AIEN=$O(^MAG(2005.86,"ATYPE",TYPE,""))
"RTN","MAGGSPP",57,0)
 I '$P(^MAG(2005.86,AIEN,0),"^",2) S MAGRY(0)="1^Action: "_$P(^MAG(2005.86,AIEN,0),"^")_" is Not Active." Q
"RTN","MAGGSPP",58,0)
 ; SO here we know an action is in play for this TYPE INDEX
"RTN","MAGGSPP",59,0)
 N MAGACT
"RTN","MAGGSPP",60,0)
 S MAGACT=$P(^MAG(2005.86,AIEN,0),"^",3,4)
"RTN","MAGGSPP",61,0)
 D @(MAGACT_"(.MAGRY,"_MAGIEN_")")
"RTN","MAGGSPP",62,0)
 Q
"RTN","MAGGSPP",63,0)
HEC(MAGRY,MAGIEN) ;  QUEING OF HEC IMAGES
"RTN","MAGGSPP",64,0)
 S MAGRY(0)=$$GCC^MAGBAPI(MAGIEN,$$DA2PLC^MAGBAPIP(MAGIEN,"F")) ; DBI - SEB 9/23/2002
"RTN","MAGGSPP",65,0)
 S MAGRY(1)=MAGIEN_" "_$$NOW^XLFDT
"RTN","MAGGSPP",66,0)
 D ACTION^MAGGTAU("PPACT^"_$P(^MAG(2005,MAGIEN,0),"^",7)_"^"_MAGIEN_"|HEC-COPY using GCC^MAGBAPI",1)
"RTN","MAGGSPP",67,0)
 ;ACTION(TXT,LOGTM,MAGSESS) ;Call to log actions for Imaging Session.
"RTN","MAGGSPP",68,0)
 ; TXT is "^" delimited string
"RTN","MAGGSPP",69,0)
 ; $P(1) is code   $P(2) is DFN   $P(3) is Image IEN
"RTN","MAGGSPP",70,0)
 ; LOGTM   - [1|0] Flag to indicate whether or not to log the time of the Action.  Default = 0
"RTN","MAGGSPP",71,0)
 ; MAGSESS - Session IEN where the action should be logged.  Default to MAGJOB("SESSION")
"RTN","MAGGSPP",72,0)
 ;
"RTN","MAGGSPP",73,0)
 Q
"RTN","MAGGTIA")
0^3^B42431443
"RTN","MAGGTIA",1,0)
MAGGTIA ;WOIFO/GEK/RMP - Imaging RPC Broker calls. Add/Modify Image entry ; [ 11/08/2001 17:18 ]
"RTN","MAGGTIA",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGGTIA",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIA",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIA",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIA",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIA",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIA",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIA",10,0)
 ;; |                                                               |
"RTN","MAGGTIA",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIA",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIA",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIA",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIA",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIA",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA",17,0)
 ;;
"RTN","MAGGTIA",18,0)
 Q
"RTN","MAGGTIA",19,0)
 ;
"RTN","MAGGTIA",20,0)
 ;**** CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE
"RTN","MAGGTIA",21,0)
 ;**** on DISK TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGTIA",22,0)
 ;
"RTN","MAGGTIA",23,0)
ADD(MAGRY,MAGGZ) ; RPC [MAGGADDIMAGE] 
"RTN","MAGGTIA",24,0)
 ; Call to UPDATE^DIE to Add an Image File entry
"RTN","MAGGTIA",25,0)
 ; MAGGZ is an array of fields and their entries
"RTN","MAGGTIA",26,0)
 ;  i.e. MAGGZ(1)=".5^38"  Image File,  field .5   data is 38
"RTN","MAGGTIA",27,0)
 ; If Long Description is included in fields, we create a new
"RTN","MAGGTIA",28,0)
 ;  array to hold the text, and pass that to UPDATE^DIE
"RTN","MAGGTIA",29,0)
 ; If this entry is an object group
"RTN","MAGGTIA",30,0)
 ;  i.e. MAGGZ(n)="2005.04^344"
"RTN","MAGGTIA",31,0)
 ;   (the field 2005.04 is the OBJECT GROUP MULTIPLE)
"RTN","MAGGTIA",32,0)
 ;
"RTN","MAGGTIA",33,0)
 ; MAGRY - Ret variable (Single Variable)
"RTN","MAGGTIA",34,0)
 ;  
"RTN","MAGGTIA",35,0)
 ;   Changed to include hierarchical directory hash  - PMK 04/23/98
"RTN","MAGGTIA",36,0)
 ;   If successful   MAGRY = IEN^FILE NAME (with full path)
"RTN","MAGGTIA",37,0)
 ;        IEN is Internal Entry Number of ^MAG(2005
"RTN","MAGGTIA",38,0)
 ;   If UNsuccessful MAGRY = 0^Error desc
"RTN","MAGGTIA",39,0)
 ;
"RTN","MAGGTIA",40,0)
 ; CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE on DISK
"RTN","MAGGTIA",41,0)
 ;   TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGTIA",42,0)
 ;----------------------------------------------------------------
"RTN","MAGGTIA",43,0)
 N MAGGXE,MAGGFDA,MAGGIEN,MAGGDRV,MAGGR,MAGGRC,MAGGDA,MAGGFNM
"RTN","MAGGTIA",44,0)
 N MAGGWP,MAGGWPC,MAGGFLD,MAGGDAT,MAGERR,MAGGEXT,MAGGJB
"RTN","MAGGTIA",45,0)
 N MAGADD,MAGMOD,MAGWRITE,MAGREF,MAGDHASH,MAGDCMSN,MAGDCMIN
"RTN","MAGGTIA",46,0)
 N MAGBIG,MAGGABS,MAGQY,MAGRET,MAGETXT
"RTN","MAGGTIA",47,0)
 N MAGFSPEC,MAGFNM
"RTN","MAGGTIA",48,0)
 N I,J,X,Y,Z,ZZ
"RTN","MAGGTIA",49,0)
 ;
"RTN","MAGGTIA",50,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTIA",51,0)
 ;
"RTN","MAGGTIA",52,0)
 S MAGADD=1 ;Flag says we are adding an entry.
"RTN","MAGGTIA",53,0)
 S MAGRY="0^Starting Add Image Entry"
"RTN","MAGGTIA",54,0)
 S MAGERR="",MAGGR=0,MAGGRC=1,MAGGWPC=0
"RTN","MAGGTIA",55,0)
 I ($D(MAGGZ)<10) S MAGRY="0^No input data, Operation CANCELED" Q
"RTN","MAGGTIA",56,0)
 ;
"RTN","MAGGTIA",57,0)
 S Z="" F  S Z=$O(MAGGZ(Z)) Q:Z=""  D  I $L(MAGERR) Q
"RTN","MAGGTIA",58,0)
 . S MAGGFLD=$P(MAGGZ(Z),U,1),MAGGDAT=$P(MAGGZ(Z),U,2,99)
"RTN","MAGGTIA",59,0)
 . I MAGGFLD=""!(MAGGDAT="") S MAGRY="0^Field and Value are Required" Q
"RTN","MAGGTIA",60,0)
 . I MAGGFLD=5 S MAGGDAT=+MAGGDAT ; MOD RED 10/5/95
"RTN","MAGGTIA",61,0)
 . I MAGGFLD=2005.04 S MAGGDAT=+MAGGDAT ; MOD RED 10/18/95
"RTN","MAGGTIA",62,0)
 . I MAGGFLD="IEN" S MAGMOD=+MAGGDAT Q
"RTN","MAGGTIA",63,0)
 . I MAGGFLD="EXT" S MAGGEXT=MAGGDAT Q
"RTN","MAGGTIA",64,0)
 . I MAGGFLD="ABS" S MAGGABS=MAGGDAT Q
"RTN","MAGGTIA",65,0)
 . I MAGGFLD="JB" S MAGGJB=MAGGDAT Q
"RTN","MAGGTIA",66,0)
 . I MAGGFLD="WRITE" S MAGWRITE=MAGGDAT Q
"RTN","MAGGTIA",67,0)
 . I MAGGFLD="BIG" S MAGBIG=MAGGDAT Q
"RTN","MAGGTIA",68,0)
 . I MAGGFLD="DICOMSN" S MAGDCMSN=MAGGDAT Q
"RTN","MAGGTIA",69,0)
 . I MAGGFLD="DICOMIN" S MAGDCMIN=MAGGDAT Q
"RTN","MAGGTIA",70,0)
 . ;
"RTN","MAGGTIA",71,0)
 . ; if this is a group object.
"RTN","MAGGTIA",72,0)
 . I MAGGFLD=2005.04 D  Q
"RTN","MAGGTIA",73,0)
 . . S MAGGR=1
"RTN","MAGGTIA",74,0)
 . . I '+MAGGDAT Q  ; making a group entry, with no group entries.
"RTN","MAGGTIA",75,0)
 . . S MAGGR(MAGGDAT)=""
"RTN","MAGGTIA",76,0)
 . . S MAGGRC=MAGGRC+1
"RTN","MAGGTIA",77,0)
 . . I '$D(^MAG(2005,MAGGDAT,0)) S MAGERR="0^Group Object "_MAGGDAT_" doesn't exist"
"RTN","MAGGTIA",78,0)
 . . S MAGGFDA(2005.04,"+"_MAGGRC_",+1,",.01)=MAGGDAT
"RTN","MAGGTIA",79,0)
 . ;
"RTN","MAGGTIA",80,0)
 . ; if we are getting a WP for Long Desc, set array to pass.
"RTN","MAGGTIA",81,0)
 . I MAGGFLD=11 D  ; this is a line of the WP Long Desc field.
"RTN","MAGGTIA",82,0)
 . . S MAGGWPC=MAGGWPC+1,MAGGWP(MAGGWPC)=MAGGDAT
"RTN","MAGGTIA",83,0)
 . ;
"RTN","MAGGTIA",84,0)
 . ;if a BAD field number
"RTN","MAGGTIA",85,0)
 . I '$$VFIELD^DILFD(2005,MAGGFLD) S MAGERR="0^Field Number "_MAGGFLD_" doesn't exist" Q
"RTN","MAGGTIA",86,0)
 . ;
"RTN","MAGGTIA",87,0)
 . ; Get Field Specifiers
"RTN","MAGGTIA",88,0)
 . D FIELD^DID(2005,MAGGFLD,"","LABEL;SPECIFIER","MAGFSPEC")
"RTN","MAGGTIA",89,0)
 . ; if a Date field, we'll convert it here.
"RTN","MAGGTIA",90,0)
 . I (MAGFSPEC("SPECIFIER")["D") D  Q:$L(MAGERR)
"RTN","MAGGTIA",91,0)
 . . S %DT="T",X=MAGGDAT D ^%DT
"RTN","MAGGTIA",92,0)
 . . I Y=-1 S MAGERR="0^Invalid Date: "_MAGGDAT_" Field: "_MAGFSPEC("LABEL") Q
"RTN","MAGGTIA",93,0)
 . . S MAGGDAT=Y
"RTN","MAGGTIA",94,0)
 . ;
"RTN","MAGGTIA",95,0)
 . ;  if a pointer field, we'll assure the pointed to entry exists.
"RTN","MAGGTIA",96,0)
 . I (MAGFSPEC("SPECIFIER")["P") D  Q:$L(MAGERR)
"RTN","MAGGTIA",97,0)
 . . I ($$EXTERNAL^DILFD(2005,MAGGFLD,"",MAGGDAT)="") S MAGERR="0^Invalid Value for Field "_MAGFSPEC("LABEL") Q
"RTN","MAGGTIA",98,0)
 . ;
"RTN","MAGGTIA",99,0)
 . I (MAGFSPEC("SPECIFIER")["S") D  Q:$L(MAGERR)
"RTN","MAGGTIA",100,0)
 . . D VAL^DIE(2005,"",MAGGFLD,"",MAGGDAT,.MAGRET,"","MAGETXT") I MAGRET="^" D  Q
"RTN","MAGGTIA",101,0)
 . . . S MAGERR="0^"_MAGETXT("DIERR",1,"TEXT",1)
"RTN","MAGGTIA",102,0)
 . . ;P48T1 This assures we are filing the Internal code for a set.
"RTN","MAGGTIA",103,0)
 . . S MAGGDAT=MAGRET
"RTN","MAGGTIA",104,0)
 . ;
"RTN","MAGGTIA",105,0)
 . ; made it here, so set the Node for the UPDATE^DIC Call.
"RTN","MAGGTIA",106,0)
 . S MAGGFDA(2005,"+1,",MAGGFLD)=MAGGDAT
"RTN","MAGGTIA",107,0)
 ;
"RTN","MAGGTIA",108,0)
 ; if there was an Error in data we'll quit now.
"RTN","MAGGTIA",109,0)
 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",110,0)
 I $D(MAGMOD) D
"RTN","MAGGTIA",111,0)
 . I $D(MAGGWP) S MAGGFDA(2005,"+1,",11)="MAGGWP"
"RTN","MAGGTIA",112,0)
 . S MAGMOD=MAGMOD_","
"RTN","MAGGTIA",113,0)
 . M MAGXXX(2005,MAGMOD)=MAGGFDA(2005,"+1,") K MAGGFDA
"RTN","MAGGTIA",114,0)
 . M MAGGFDA=MAGXXX K MAGXXX
"RTN","MAGGTIA",115,0)
 I $D(MAGMOD) D ADD^MAGGTIA1 Q
"RTN","MAGGTIA",116,0)
 ;
"RTN","MAGGTIA",117,0)
 ;  some possible problems, we'll check for now.
"RTN","MAGGTIA",118,0)
 I '$D(MAGGFDA(2005,"+1,")) S MAGRY="0^No data to file  Operation CANCELED " Q
"RTN","MAGGTIA",119,0)
 ;
"RTN","MAGGTIA",120,0)
 ;  We're making Object Type and either Patient, or short Desc Required.
"RTN","MAGGTIA",121,0)
 I '$D(MAGGFDA(2005,"+1,",3)) S MAGRY="0^Need an Object Type " Q
"RTN","MAGGTIA",122,0)
 ; Change to require patient. not patient or short desc.
"RTN","MAGGTIA",123,0)
 I '$D(MAGGFDA(2005,"+1,",5)) D  Q
"RTN","MAGGTIA",124,0)
 . S MAGRY="0^Need Patient.  Operation CANCELED "
"RTN","MAGGTIA",125,0)
 ; MAGQA check.
"RTN","MAGGTIA",126,0)
 D QACHK^MAGGTIA2(.MAGQY,MAGGFDA(2005,"+1,",5),$G(MAGGFDA(2005,"+1,",16)),$G(MAGGFDA(2005,"+1,",17)))
"RTN","MAGGTIA",127,0)
 I 'MAGQY S MAGRY=MAGQY Q
"RTN","MAGGTIA",128,0)
 ;-Checking for a missing TYPE value, and generating a value if needed
"RTN","MAGGTIA",129,0)
 ;- are being deferred to a later patch.
"RTN","MAGGTIA",130,0)
 ; Check for Image TYPE #42
"RTN","MAGGTIA",131,0)
 ;-I '$D(MAGGFDA(2005,"+1,",42)) D MAKETYPE^MAGGSIA1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",132,0)
 ; Check for Image Class, #41
"RTN","MAGGTIA",133,0)
 I '$D(MAGGFDA(2005,"+1,",41)) D MAKECLAS^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",134,0)
 ; IF no Procedure text we'll give it some so crossref will set.
"RTN","MAGGTIA",135,0)
 I '$D(MAGGFDA(2005,"+1,",6)) S MAGGFDA(2005,"+1,",6)="NO TEXT"
"RTN","MAGGTIA",136,0)
 ; If no Procedure/Exam Date/Time we'll give it NOW
"RTN","MAGGTIA",137,0)
 I '$D(MAGGFDA(2005,"+1,",15)) S MAGGFDA(2005,"+1,",15)=$$NOW^XLFDT
"RTN","MAGGTIA",138,0)
 ; DateTime image saved.
"RTN","MAGGTIA",139,0)
 I '$D(MAGGFDA(2005,"+1,",7)) S MAGGFDA(2005,"+1,",7)=$$NOW^XLFDT
"RTN","MAGGTIA",140,0)
 ; If no INSTITUTION pointer then default to the DUZ(2) or the Kernel Site parameter file institution
"RTN","MAGGTIA",141,0)
 I '$D(MAGGFDA(2005,"+1,",.05)) D
"RTN","MAGGTIA",142,0)
 . I $D(DUZ(2)) S MAGGFDA(2005,"+1,",.05)=DUZ(2) Q
"RTN","MAGGTIA",143,0)
 . ;Q:$T(KSP^XUPARAM)=""  //GEK 4/15/2004 Not needed on Gateway anymore
"RTN","MAGGTIA",144,0)
 . S MAGGFDA(2005,"+1,",.05)=$$KSP^XUPARAM("INST")
"RTN","MAGGTIA",145,0)
 . Q
"RTN","MAGGTIA",146,0)
 ;
"RTN","MAGGTIA",147,0)
 I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$$MAKENAME^MAGGTIA1()
"RTN","MAGGTIA",148,0)
 ; Only get drive:dir if not a group
"RTN","MAGGTIA",149,0)
 I 'MAGGR D  I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGTIA",150,0)
 . S X=$S($D(MAGGFDA(2005,"+1,",2)):MAGGFDA(2005,"+1,",2),1:"")
"RTN","MAGGTIA",151,0)
 . S Z=$$DRIVE^MAGGTU1(X)                     ;Drv:Dir to Write
"RTN","MAGGTIA",152,0)
 . I 'Z S MAGERR=Z Q
"RTN","MAGGTIA",153,0)
 . S MAGGDRV=$P(Z,U,2)
"RTN","MAGGTIA",154,0)
 . S MAGGFDA(2005,"+1,",2)=+Z               ;Disk & Vol magnetic
"RTN","MAGGTIA",155,0)
 . ; if a big file is being made on workstation, put NetWork Location
"RTN","MAGGTIA",156,0)
 . ; pointer in the BIG NETWORK LOCATION field.
"RTN","MAGGTIA",157,0)
 . ; (BIG files default to same Network Location as FullRes (or PACS))
"RTN","MAGGTIA",158,0)
 . I $G(MAGBIG)=1 S MAGGFDA(2005,"+1,",102)=+Z
"RTN","MAGGTIA",159,0)
 . S MAGREF=+Z ; save network location ien for $$DIRHASH in ^MAGGTIA1
"RTN","MAGGTIA",160,0)
 . I $G(MAGGABS)="STUFFONLY" S MAGGFDA(2005,"+1,",2.1)=+Z
"RTN","MAGGTIA",161,0)
 ;
"RTN","MAGGTIA",162,0)
 ; If a Name (.01) wasn't sent, we'll make one
"RTN","MAGGTIA",163,0)
 ; We know that either Patient or Short Desc, and Object Type exist
"RTN","MAGGTIA",164,0)
 I '$D(MAGGFDA(2005,"+1,",.01)) S MAGGFDA(2005,"+1,",.01)=$$MAKENAME^MAGGTIA1()
"RTN","MAGGTIA",165,0)
 ;
"RTN","MAGGTIA",166,0)
 ; If a long description was sent.
"RTN","MAGGTIA",167,0)
 I $D(MAGGWP) S MAGGFDA(2005,"+1,",11)="MAGGWP"
"RTN","MAGGTIA",168,0)
 ;
"RTN","MAGGTIA",169,0)
 D ADD^MAGGTIA1 ; continued
"RTN","MAGGTIA",170,0)
 Q
"RTN","MAGGTIG")
0^11^B53305477
"RTN","MAGGTIG",1,0)
MAGGTIG ;WOIFO/GEK - MAGGT Image Get. Callbacks to Get Image lists ; [ 11/08/2001 17:18 ]
"RTN","MAGGTIG",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGGTIG",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIG",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIG",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIG",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIG",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIG",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIG",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIG",10,0)
 ;; |                                                               |
"RTN","MAGGTIG",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIG",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIG",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIG",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIG",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIG",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIG",17,0)
 ;;
"RTN","MAGGTIG",18,0)
 Q
"RTN","MAGGTIG",19,0)
GRPCOUNT(MAGRY,MAGIEN) ;
"RTN","MAGGTIG",20,0)
 S MAGRY=+$P($G(^MAG(2005,MAGIEN,1,0)),U,4)
"RTN","MAGGTIG",21,0)
 Q
"RTN","MAGGTIG",22,0)
IMAGES(MAGRY,MAGDFN) ;RPC [MAGG PAT IMAGES]
"RTN","MAGGTIG",23,0)
 ;  Call to return a list of images for a patient.
"RTN","MAGGTIG",24,0)
 ;   We are returning all images for a patient, Groups are returned
"RTN","MAGGTIG",25,0)
 ;   as one Image.
"RTN","MAGGTIG",26,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",27,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",28,0)
 ;   User can reorder at the workstation level.
"RTN","MAGGTIG",29,0)
 K MAGRY
"RTN","MAGGTIG",30,0)
 N Y,RDT,PRX,CT,IEN,GBLRET
"RTN","MAGGTIG",31,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",32,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",33,0)
 ;  if no Images for the patient, then quit.
"RTN","MAGGTIG",34,0)
 I '$D(^MAG(2005,"APDTPX",MAGDFN)) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",35,0)
 ;   the "APDTPX" cross reference is :
"RTN","MAGGTIG",36,0)
 ;     "APDTPX",DFN,Rev Date,Procedure,MAGIEN )
"RTN","MAGGTIG",37,0)
 ;
"RTN","MAGGTIG",38,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",39,0)
 S GBLRET=0
"RTN","MAGGTIG",40,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",41,0)
 S CT=0,RDT=""
"RTN","MAGGTIG",42,0)
 F  S RDT=$O(^MAG(2005,"APDTPX",MAGDFN,RDT)) Q:'RDT  D
"RTN","MAGGTIG",43,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",MAGDFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGGTIG",44,0)
 . . S IEN=""
"RTN","MAGGTIG",45,0)
 . . F  S IEN=$O(^MAG(2005,"APDTPX",MAGDFN,RDT,PRX,IEN)) Q:'IEN  D
"RTN","MAGGTIG",46,0)
 . . . Q:$P($G(^MAG(2005,IEN,0)),"^",10)  ; CHILD OF GROUP
"RTN","MAGGTIG",47,0)
 . . . S CT=CT+1
"RTN","MAGGTIG",48,0)
 . . . I (CT>100),'GBLRET D ARY2GLB
"RTN","MAGGTIG",49,0)
 . . . S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",50,0)
 . . . S @MAGRY@(CT)="B2^"_MAGFILE
"RTN","MAGGTIG",51,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",52,0)
 Q
"RTN","MAGGTIG",53,0)
PHOTOS(MAGRY,MAGDFN) ;RPC [MAGG PAT PHOTOS]
"RTN","MAGGTIG",54,0)
 ; Call to return list of all Photo ID's on file for a patient.
"RTN","MAGGTIG",55,0)
 ;   We are returning all Photo ID images for a patient.
"RTN","MAGGTIG",56,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",57,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",58,0)
 K MAGRY
"RTN","MAGGTIG",59,0)
 N Y,RDT,PRX,CT,IEN,IENS,GBLRET,MAGXX
"RTN","MAGGTIG",60,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",61,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",62,0)
 ;  if no Photo ID Images for the patient, then quit.
"RTN","MAGGTIG",63,0)
 I '$D(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID")) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",64,0)
 ;   the "APPXDT" cross reference is :
"RTN","MAGGTIG",65,0)
 ;     "APPXDT",DFN,Procedure,Rev Date,MAGIEN )
"RTN","MAGGTIG",66,0)
 ;
"RTN","MAGGTIG",67,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",68,0)
 S GBLRET=0
"RTN","MAGGTIG",69,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",70,0)
 S CT=0
"RTN","MAGGTIG",71,0)
 S RDT="" F  S RDT=$O(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID",RDT)) Q:RDT=""  D
"RTN","MAGGTIG",72,0)
 . S IEN=""
"RTN","MAGGTIG",73,0)
 . F  S IEN=$O(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID",RDT,IEN)) Q:'IEN  D
"RTN","MAGGTIG",74,0)
 . . ;Q:$P($G(^MAG(2005,IEN,0)),"^",10)  ; CHILD OF GROUP
"RTN","MAGGTIG",75,0)
 . . S IENS(IEN)=""
"RTN","MAGGTIG",76,0)
 . . Q
"RTN","MAGGTIG",77,0)
 . Q
"RTN","MAGGTIG",78,0)
 S IEN="" F  S IEN=$O(IENS(IEN),-1) Q:'IEN  D
"RTN","MAGGTIG",79,0)
 . S CT=CT+1
"RTN","MAGGTIG",80,0)
 . S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",81,0)
 . S @MAGRY@(CT)="B2^"_MAGFILE
"RTN","MAGGTIG",82,0)
 . Q
"RTN","MAGGTIG",83,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",84,0)
 Q
"RTN","MAGGTIG",85,0)
EACHIMG(MAGRY,MAGDFN,MAX) ;RPC [MAGG PAT EACH IMAGE]
"RTN","MAGGTIG",86,0)
 ; Call Returns list of recent Patient images.
"RTN","MAGGTIG",87,0)
 ;   MAX = maximum number of images to return
"RTN","MAGGTIG",88,0)
 ;   MAGDFN = patient DFN
"RTN","MAGGTIG",89,0)
 ;   We are returning all images for a patient, and listing each image.
"RTN","MAGGTIG",90,0)
 ;   This is called from Capture Window where groups aren't listed.
"RTN","MAGGTIG",91,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",92,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",93,0)
 ;   User can decide how many of the most recent they want to list.
"RTN","MAGGTIG",94,0)
 K MAGRY
"RTN","MAGGTIG",95,0)
 N Y,RDT,PRX,CT,IEN,GBLRET
"RTN","MAGGTIG",96,0)
 S MAX=$S($G(MAX)>0:MAX,1:50) ; 50 IS DEFAULT
"RTN","MAGGTIG",97,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRG^MAGGTERR"
"RTN","MAGGTIG",98,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",99,0)
 ;  if no Images for the patient, then quit.
"RTN","MAGGTIG",100,0)
 I '$D(^MAG(2005,"AC",MAGDFN)) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",101,0)
 ;   the "AC" cross reference is :
"RTN","MAGGTIG",102,0)
 ;     "AC",DFN,IEN )
"RTN","MAGGTIG",103,0)
 ;
"RTN","MAGGTIG",104,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",105,0)
 S GBLRET=0
"RTN","MAGGTIG",106,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",107,0)
 S CT=0,IEN=""
"RTN","MAGGTIG",108,0)
 F  S IEN=$O(^MAG(2005,"AC",MAGDFN,IEN),-1) Q:'IEN  D  Q:(CT>MAX)
"RTN","MAGGTIG",109,0)
 . Q:$P($G(^MAG(2005,IEN,0)),U,6)=11  ; NOT LISTING GROUP ENTRIES
"RTN","MAGGTIG",110,0)
 . S CT=CT+1
"RTN","MAGGTIG",111,0)
 . I (CT>100),'GBLRET D ARY2GLB
"RTN","MAGGTIG",112,0)
 . S @MAGRY@(CT)=$$CAPINFO(IEN)
"RTN","MAGGTIG",113,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",114,0)
 Q
"RTN","MAGGTIG",115,0)
CAPINFO(IEN) ; RETURN A STRING OF INFORMATION ABOUT THE IMAGE
"RTN","MAGGTIG",116,0)
 ; This is for Capture App
"RTN","MAGGTIG",117,0)
 N RETY,N2
"RTN","MAGGTIG",118,0)
 S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",119,0)
 S RETY=$P(MAGFILE,U,1,7)_U
"RTN","MAGGTIG",120,0)
 S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGGTIG",121,0)
 S RETY=RETY_$$FMTE^XLFDT($P(N2,U,1),"5P")_U
"RTN","MAGGTIG",122,0)
 S X=$P(RETY,U,5),X=$$FMTE^XLFDT(X,"5"),X=$P(X,"@")
"RTN","MAGGTIG",123,0)
 S $P(RETY,U,5)=X
"RTN","MAGGTIG",124,0)
 Q RETY
"RTN","MAGGTIG",125,0)
 Q
"RTN","MAGGTIG",126,0)
ARY2GLB ; Image count is getting big, switch from array to Global return type
"RTN","MAGGTIG",127,0)
 S GBLRET=1
"RTN","MAGGTIG",128,0)
 K ^TMP("MAGGTIG",$J)
"RTN","MAGGTIG",129,0)
 S MAGRY=""
"RTN","MAGGTIG",130,0)
 M ^TMP("MAGGTIG",$J)=MAGRY
"RTN","MAGGTIG",131,0)
 K MAGRY
"RTN","MAGGTIG",132,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTIG",133,0)
 S MAGRY=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGGTIG",134,0)
 Q
"RTN","MAGGTIG",135,0)
GROUP(MAGRY,MAGIEN,NOCHK) ;RPC [MAGG GROUP IMAGES]
"RTN","MAGGTIG",136,0)
 ; CalL to Return image list of a Group.
"RTN","MAGGTIG",137,0)
 ; MAGIEN        =  the entry in MAG(2005 we assume it is a group.
"RTN","MAGGTIG",138,0)
 ; NOCHK         =  flag - Do (or) Not Do QI Check.
"RTN","MAGGTIG",139,0)
 N Y,MAGDFN,I,MAGCHILD,MAGCT,MAGTMPAR,MSGX,MAGQI,MAGY
"RTN","MAGGTIG",140,0)
 N MAGNOCHK
"RTN","MAGGTIG",141,0)
 ;
"RTN","MAGGTIG",142,0)
 ;Test BigGroup S BKG=+$G(BKG)
"RTN","MAGGTIG",143,0)
 ;Test BigGroup K ^TMP("MAGBGRP")
"RTN","MAGGTIG",144,0)
 S MAGIEN=+MAGIEN,MSGX=""
"RTN","MAGGTIG",145,0)
 S NOCHK=+$G(NOCHK)
"RTN","MAGGTIG",146,0)
 I '$D(^MAG(2005,MAGIEN,0)) S MAGRY(0)="0^ERROR: Image entry "_MAGIEN_" Doesn't exist" Q
"RTN","MAGGTIG",147,0)
 I $O(^MAG(2005,MAGIEN,1,0))="" S MAGRY(0)="0^ERROR: There are NO Images defined for this Group" Q
"RTN","MAGGTIG",148,0)
 ;
"RTN","MAGGTIG",149,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is being returned
"RTN","MAGGTIG",150,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",151,0)
 ;
"RTN","MAGGTIG",152,0)
 ;  if we are switching to a Global Array because too many images, 
"RTN","MAGGTIG",153,0)
 ;  then set MAGRY and clean it up first
"RTN","MAGGTIG",154,0)
 ;I +$P($G(^MAG(2005,MAGIEN,1,0)),U,4)>100
"RTN","MAGGTIG",155,0)
 D
"RTN","MAGGTIG",156,0)
 . S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTIG",157,0)
 . S MAGRY=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGGTIG",158,0)
 . K @MAGRY
"RTN","MAGGTIG",159,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",160,0)
 ;
"RTN","MAGGTIG",161,0)
 ;Test BigGroup I $D(^TMP("MAGBGRP",MAGIEN)) D  Q
"RTN","MAGGTIG",162,0)
 ;Test BigGroup . M ^TMP("MAGGTIG",$J)=^TMP("MAGBGRP",MAGIEN)
"RTN","MAGGTIG",163,0)
 ;Test BigGroup . Q
"RTN","MAGGTIG",164,0)
 ; integrity check, stop if group entry is questionable
"RTN","MAGGTIG",165,0)
 ;  NOCHK is sent from Image Delete window (so user with DELETE and SYSTEM keys)
"RTN","MAGGTIG",166,0)
 ;    can see group abstracts before the group is deleted.
"RTN","MAGGTIG",167,0)
 I 'NOCHK D CHK^MAGGSQI(.MAGQI,MAGIEN) I 'MAGQI(0) D  Q
"RTN","MAGGTIG",168,0)
 . S @MAGRY@(0)=MAGQI(0)
"RTN","MAGGTIG",169,0)
 ;
"RTN","MAGGTIG",170,0)
 S MAGNOCHK=1
"RTN","MAGGTIG",171,0)
 S I=0,MAGCT=0,MAGDFN=$P(^MAG(2005,MAGIEN,0),"^",7)
"RTN","MAGGTIG",172,0)
 I $D(^MAG(2005,MAGIEN,1,"ADCM")) D
"RTN","MAGGTIG",173,0)
 . N INUM,SNUM
"RTN","MAGGTIG",174,0)
 . S INUM="" ; GEK 4/3/00  changed Q:'INUM  to  Q:INUM="" below
"RTN","MAGGTIG",175,0)
 . F  S INUM=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM)) Q:INUM=""  D
"RTN","MAGGTIG",176,0)
 . . S SNUM=""
"RTN","MAGGTIG",177,0)
 . . F  S SNUM=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM,SNUM)) Q:SNUM=""  D
"RTN","MAGGTIG",178,0)
 . . . S MAGCHILD=""
"RTN","MAGGTIG",179,0)
 . . . F  S MAGCHILD=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM,SNUM,MAGCHILD)) Q:'MAGCHILD  D
"RTN","MAGGTIG",180,0)
 . . . . S MAGCT=MAGCT+1
"RTN","MAGGTIG",181,0)
 . . . . I '$D(^MAG(2005,MAGCHILD)) D INVALID(MAGCHILD,.MSGX) S @MAGRY@(MAGCT)=MSGX Q
"RTN","MAGGTIG",182,0)
 . . . . ; Added for MAGQI integrity check
"RTN","MAGGTIG",183,0)
 . . . . K MAGY
"RTN","MAGGTIG",184,0)
 . . . . D CHKGRPCH^MAGGSQI(.MAGY,MAGIEN,MAGDFN,MAGCHILD) I 'MAGY D INVCH(.MAGY,MAGCHILD) S @MAGRY@(MAGCT)=MAGY Q
"RTN","MAGGTIG",185,0)
 . . . . S MAGXX=MAGCHILD
"RTN","MAGGTIG",186,0)
 . . . . S MAGTMPAR(MAGXX)=""
"RTN","MAGGTIG",187,0)
 . . . . D INFO^MAGGTII
"RTN","MAGGTIG",188,0)
 . . . . S $P(MAGFILE,U,12,13)=INUM_U_SNUM
"RTN","MAGGTIG",189,0)
 . . . . S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",190,0)
 . . . . ;Test BigGroup I 'BKG S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",191,0)
 . . . . ;Test BigGroup E  S ^TMP("MAGBGRP",MAGIEN,MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",192,0)
 ;GEK 4/8/99 MODIFIED, because now we have groups, that some entries 
"RTN","MAGGTIG",193,0)
 ;                     have dicom numbers and some don't.  So we have to go through the group again.
"RTN","MAGGTIG",194,0)
 ;Test BigGroup - Need a Pre/Post init, that fixes Groups where some entries have Dicom values, and some 
"RTN","MAGGTIG",195,0)
 ;         don't.  In such a group, we will make Dicom values for the images that don't have them.
"RTN","MAGGTIG",196,0)
 ;         Testing in Washington - this will take hours.
"RTN","MAGGTIG",197,0)
 ;
"RTN","MAGGTIG",198,0)
 S I=0
"RTN","MAGGTIG",199,0)
 F  S I=$O(^MAG(2005,MAGIEN,1,I)) Q:'I  D
"RTN","MAGGTIG",200,0)
 . S MAGCHILD=+^MAG(2005,MAGIEN,1,I,0)
"RTN","MAGGTIG",201,0)
 . I $D(MAGTMPAR(MAGCHILD)) Q
"RTN","MAGGTIG",202,0)
 . S MAGCT=MAGCT+1
"RTN","MAGGTIG",203,0)
 . I '$D(^MAG(2005,MAGCHILD)) D INVALID(MAGCHILD,.MSGX) S @MAGRY@(MAGCT)=MSGX Q
"RTN","MAGGTIG",204,0)
 . ;Added for MAGQI integrity check
"RTN","MAGGTIG",205,0)
 . K MAGY
"RTN","MAGGTIG",206,0)
 . D CHKGRPCH^MAGGSQI(.MAGY,MAGIEN,MAGDFN,MAGCHILD) I 'MAGY D INVCH(.MAGY,MAGCHILD) S @MAGRY@(MAGCT)=MAGY Q
"RTN","MAGGTIG",207,0)
 . S MAGXX=MAGCHILD
"RTN","MAGGTIG",208,0)
 . D INFO^MAGGTII
"RTN","MAGGTIG",209,0)
 . S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",210,0)
 . ;Test BigGroup        I 'BKG S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",211,0)
 . ;Test BigGroup        E  S ^TMP("MAGBGRP",MAGIEN,MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",212,0)
 S @MAGRY@(0)="1^"_MAGCT
"RTN","MAGGTIG",213,0)
 Q
"RTN","MAGGTIG",214,0)
INVALID(MAGX,MAGZ) ;
"RTN","MAGGTIG",215,0)
 ;
"RTN","MAGGTIG",216,0)
 I $D(^MAG(2005.1,MAGX,0)) S MAGZ="B2^"_MAGX_"^^^INVALID Reference to Deleted Image^^66^^^^^^^^"
"RTN","MAGGTIG",217,0)
 E  S MAGZ="B2^"_MAGX_"^^^INVALID Image ID (IEN)^^67^^^^^^^^"
"RTN","MAGGTIG",218,0)
 ;Added with MAGQI integrity check, 
"RTN","MAGGTIG",219,0)
 S MAGTMPAR(MAGX)=""
"RTN","MAGGTIG",220,0)
 Q
"RTN","MAGGTIG",221,0)
INVCH(MSG,CHILD) ;Added for MAGQI integrity check
"RTN","MAGGTIG",222,0)
 ; MSG is passed by reference, we create a MAGFILE equivalent and pass it back.
"RTN","MAGGTIG",223,0)
 N EMSG
"RTN","MAGGTIG",224,0)
 S EMSG=$P(MSG,U,2)
"RTN","MAGGTIG",225,0)
 K MSG
"RTN","MAGGTIG",226,0)
 S $P(MSG,U)=CHILD
"RTN","MAGGTIG",227,0)
 ; remove dependency on c:\program files.   with   .\bmp\
"RTN","MAGGTIG",228,0)
 S $P(MSG,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGTIG",229,0)
 S $P(MSG,U,4)=$P($G(^MAG(2005,CHILD,2)),U,4)
"RTN","MAGGTIG",230,0)
 S $P(MSG,U,6)=$S(($P(MSG,U,6)'=11):"99",1:11)
"RTN","MAGGTIG",231,0)
 ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGTIG",232,0)
 S $P(MSG,U,10)="M"
"RTN","MAGGTIG",233,0)
 ;Send the error message
"RTN","MAGGTIG",234,0)
 S $P(MSG,U,17)=EMSG
"RTN","MAGGTIG",235,0)
 S MSG="B2^"_MSG
"RTN","MAGGTIG",236,0)
 S MAGTMPAR(CHILD)=""
"RTN","MAGGTIG",237,0)
 Q
"RTN","MAGGTII")
0^4^B37947869
"RTN","MAGGTII",1,0)
MAGGTII ;WOIFO/GEK - RETURN IMAGE INFO ; [ 11/08/2001 17:18 ]
"RTN","MAGGTII",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGGTII",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTII",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTII",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTII",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTII",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTII",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTII",10,0)
 ;; |                                                               |
"RTN","MAGGTII",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTII",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTII",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTII",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTII",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTII",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTII",17,0)
 ;;
"RTN","MAGGTII",18,0)
 ; CALL WITH MAGXX=IEN of IMAGE FILE (2005)
"RTN","MAGGTII",19,0)
 ; RETURNS MAGFILE='^' delimited string of Image information.
"RTN","MAGGTII",20,0)
 ; 
"RTN","MAGGTII",21,0)
 ; 
"RTN","MAGGTII",22,0)
INFO ;Get info for an Image File entry
"RTN","MAGGTII",23,0)
 ; We assume that MAGXX exists and is the Image File entry
"RTN","MAGGTII",24,0)
 ; We return a '^' delimited string for the Image entry.
"RTN","MAGGTII",25,0)
 ; $P(1^2^3)   IEN^Image FullPath and name^Abstract FullPath and Name
"RTN","MAGGTII",26,0)
 ; $P(4)       SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",27,0)
 ; $P(5)       PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",28,0)
 ; $P(6)       OBJECT TYPE
"RTN","MAGGTII",29,0)
 ; $P(7)       PROCEDURE field
"RTN","MAGGTII",30,0)
 ; $P(8)       display date
"RTN","MAGGTII",31,0)
 ; $P(9)       to return the PARENT DATA FILE image pointer
"RTN","MAGGTII",32,0)
 ; $p(10)      return the ABSTYPE  'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",33,0)
 ; $p(11)      is  'A' accessible   'O' offline
"RTN","MAGGTII",34,0)
 ; $p(12^13)   Dicom Series Number  $p(12) and   Image Number  $p(13)
"RTN","MAGGTII",35,0)
 ; $p(14)      is count of images in group, 1 if single image.
"RTN","MAGGTII",36,0)
 ; VISN15
"RTN","MAGGTII",37,0)
 ; $p(15^16)   SiteParameter IEN ^ SiteParameter CODE
"RTN","MAGGTII",38,0)
 ; $P(17)      is err description of Integrity Check
"RTN","MAGGTII",39,0)
 ; $P(18)      Image BIGPath and name             //Patch 5
"RTN","MAGGTII",40,0)
 ; $P(19^20)   Patient DFN  ^ Patient Name; // Patch 3.8
"RTN","MAGGTII",41,0)
 ; $P(21)          Image Class: Clin,Admin,Clin/Admin,Admin/Clin
"RTN","MAGGTII",42,0)
 ;
"RTN","MAGGTII",43,0)
 N FILETYPE,MAGPREF,MAGJBCP,GRPTYPE,GRPIEN,ABSTYPE,MAGTYPE,MAGJBOL
"RTN","MAGGTII",44,0)
 N MAGOFFLN,FULLTYPE,MAGOBJT,MAGQI
"RTN","MAGGTII",45,0)
 N ABSFILE,FULLFILE,BIGFILE,PATCH,MDFN,FNL,PLC,PLCODE
"RTN","MAGGTII",46,0)
 N MAGN0,MAGN2,MAGN40
"RTN","MAGGTII",47,0)
 ;    set the Variables for the Global Nodes of the Image Entry
"RTN","MAGGTII",48,0)
 S MAGN0=$G(^MAG(2005,MAGXX,0)),MDFN=$P(MAGN0,"^",7) ; P48T1 MDFN
"RTN","MAGGTII",49,0)
 S MAGN2=$G(^MAG(2005,MAGXX,2))
"RTN","MAGGTII",50,0)
 S MAGN40=$G(^MAG(2005,MAGXX,40))
"RTN","MAGGTII",51,0)
 ; P48T1 Set Name in Variable, Call $$GET 1 time not 2000
"RTN","MAGGTII",52,0)
 I '$D(MAGJOB("PTNM",MDFN)) S MAGJOB("PTNM",MDFN)=$$GET1^DIQ(2,MDFN_",",.01)
"RTN","MAGGTII",53,0)
 I '$D(MAGJOB("NETPLC")) D NETPLCS^MAGGTU6
"RTN","MAGGTII",54,0)
 ;  Object Type
"RTN","MAGGTII",55,0)
 S MAGOBJT=$P(MAGN0,"^",6)
"RTN","MAGGTII",56,0)
 ; if this is a group, change MAGXX to first image in group to get
"RTN","MAGGTII",57,0)
 ;  that abstract to use for the group abstract
"RTN","MAGGTII",58,0)
 I MAGOBJT=11!(MAGOBJT=16) S GRPTYPE=MAGOBJT D
"RTN","MAGGTII",59,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",60,0)
 . ; next line to account for group of NO images for whatever reason.
"RTN","MAGGTII",61,0)
 . ;  we change Object Type to XRAY (3)  or STILL IMAGE (1)
"RTN","MAGGTII",62,0)
 . I 'X S MAGOBJT=$S(MAGOBJT=11:3,MAGOBJT=16:1,1:1) K GRPTYPE Q
"RTN","MAGGTII",63,0)
 . S X=^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",64,0)
 . ;  keep the Real IEN, so we can change back later
"RTN","MAGGTII",65,0)
 . S GRPIEN=MAGXX,MAGXX=+X
"RTN","MAGGTII",66,0)
 . Q
"RTN","MAGGTII",67,0)
 S MAGJBCP=0 ; Don't Queue a copy from JukeBox.
"RTN","MAGGTII",68,0)
 ;  The call to FINDFILE returns:
"RTN","MAGGTII",69,0)
 ; MAGFILE1=LA100066.ABS   filename
"RTN","MAGGTII",70,0)
 ;          if no Network Location pointer or INVALID Pointer
"RTN","MAGGTII",71,0)
 ;          then MAGFILE1=-1~NO NETWORK LOCATION POINTER  
"RTN","MAGGTII",72,0)
 ;          or -1~INVALID NETWORK LOCATION POINTER
"RTN","MAGGTII",73,0)
 ; MAGFILE1(.01)=ONE,PATIENT   111223333 image desc
"RTN","MAGGTII",74,0)
 ; MAGJBOL=    desc of Offline server
"RTN","MAGGTII",75,0)
 ; MAGOFFLN=    if JB is offline
"RTN","MAGGTII",76,0)
 ; MAGPREF=C:\TEMP\LA\10\00\  path
"RTN","MAGGTII",77,0)
 ; MAGTYPE=MAG    MAG or WORM
"RTN","MAGGTII",78,0)
 ;
"RTN","MAGGTII",79,0)
 ;   first get Full Path and File Name of the Abstract
"RTN","MAGGTII",80,0)
 S FILETYPE="ABSTRACT" K MAGFILE1("ERROR")
"RTN","MAGGTII",81,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",82,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",83,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",84,0)
 S ABSTYPE=$E(MAGTYPE,1) I MAGOFFLN S ABSTYPE="O"
"RTN","MAGGTII",85,0)
 ;   Here we must test for +MAGFILE1 = -1  which means we don't have
"RTN","MAGGTII",86,0)
 ;   any entry in the Image File for the Abstract Network Location 
"RTN","MAGGTII",87,0)
 ;   pointer.
"RTN","MAGGTII",88,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",89,0)
 S ABSFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",90,0)
 ;
"RTN","MAGGTII",91,0)
 ;    now lets get the Full Path and file name FULL RES image.
"RTN","MAGGTII",92,0)
 S FULLTYPE="A" ; Accessible
"RTN","MAGGTII",93,0)
 S FILETYPE="FULL" K MAGFILE1("ERROR")
"RTN","MAGGTII",94,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",95,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",96,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",97,0)
 I MAGOFFLN S FULLTYPE="O" ; Offline
"RTN","MAGGTII",98,0)
 ;  here we have to do the same test as above. for bad data.
"RTN","MAGGTII",99,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",100,0)
 S FULLFILE=MAGPREF_MAGFILE1
"RTN","MAGGTII",101,0)
 ;
"RTN","MAGGTII",102,0)
 ;    now lets get the Full Path and file name for BIG image.
"RTN","MAGGTII",103,0)
 S FILETYPE="BIG" K MAGFILE1("ERROR")
"RTN","MAGGTII",104,0)
 S MAGPREF="" D FINDFILE^MAGFILEB
"RTN","MAGGTII",105,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~") ; MAGFILE1 has '^' in it if errors
"RTN","MAGGTII",106,0)
 I $D(MAGFILE1("ERROR")) S MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGTII",107,0)
 S MAGPREF=$G(MAGPREF)
"RTN","MAGGTII",108,0)
 S BIGFILE=$S($E(MAGFILE1,1,2)="-1":"",1:MAGPREF_MAGFILE1)
"RTN","MAGGTII",109,0)
 ;
"RTN","MAGGTII",110,0)
 K MAGFILE1 ; Cleanup
"RTN","MAGGTII",111,0)
 ; Site and Site Code are in Entry of first Image in Group
"RTN","MAGGTII",112,0)
 ; so we need to set here, before MAGXX is changed back.
"RTN","MAGGTII",113,0)
 S X=$G(^MAG(2005,MAGXX,0))
"RTN","MAGGTII",114,0)
 S FNL=$S(+$P(X,"^",3):$P(X,"^",3),1:+$P(X,"^",5))
"RTN","MAGGTII",115,0)
 S PLC=$P($G(MAGJOB("NETPLC",FNL)),"^",1)
"RTN","MAGGTII",116,0)
 S PLCODE=$P($G(MAGJOB("NETPLC",FNL)),"^",2)
"RTN","MAGGTII",117,0)
 ;   if we were using first image of a group, reset the Real IEN 
"RTN","MAGGTII",118,0)
 I $G(GRPIEN) S MAGXX=GRPIEN
"RTN","MAGGTII",119,0)
 ;
"RTN","MAGGTII",120,0)
 ;   we have to change the OBJECT TYPE variable back to real value
"RTN","MAGGTII",121,0)
 ;   MAGOBJT might have been changed if we had Group of no images.
"RTN","MAGGTII",122,0)
 ;   but we need to keep it changed, because Delphi window checks this
"RTN","MAGGTII",123,0)
 ;   entry to determine which window to open.
"RTN","MAGGTII",124,0)
 ;   i.e. Group window, Single image window, 
"RTN","MAGGTII",125,0)
 S MAGOBJT=$P(MAGN0,U,6)
"RTN","MAGGTII",126,0)
 ;
"RTN","MAGGTII",127,0)
 ; now start building the return string
"RTN","MAGGTII",128,0)
 ;
"RTN","MAGGTII",129,0)
 S PATCH=$P($G(MAGJOB("VERSION")),".",3) ; //'="3.0.8")
"RTN","MAGGTII",130,0)
 K MAGFILE
"RTN","MAGGTII",131,0)
 S $P(MAGFILE,U,25)="" ; We put extra '^^^' on end of String to stop error in Delphi.
"RTN","MAGGTII",132,0)
 ;
"RTN","MAGGTII",133,0)
 ; $P(1^2^3) IEN^Image FullPath and name^Abstract FullPath and Name 
"RTN","MAGGTII",134,0)
 S $P(MAGFILE,U,1,3)=MAGXX_U_FULLFILE_U_ABSFILE
"RTN","MAGGTII",135,0)
 S $P(MAGFILE,U,18)=BIGFILE
"RTN","MAGGTII",136,0)
 ;
"RTN","MAGGTII",137,0)
 ; now set $P(4) SHORT DESCRIPTION field and desc of offline JukeBox
"RTN","MAGGTII",138,0)
 S $P(MAGFILE,U,4)=$P(MAGN2,U,4)_$G(MAGJBOL)
"RTN","MAGGTII",139,0)
 ;
"RTN","MAGGTII",140,0)
 ; now set $P(5)PROCEDURE/ EXAM DATE/TIME field
"RTN","MAGGTII",141,0)
 S $P(MAGFILE,U,5)=$P(MAGN2,U,5)
"RTN","MAGGTII",142,0)
 ;
"RTN","MAGGTII",143,0)
 ; now set $P(6) OBJECT TYPE
"RTN","MAGGTII",144,0)
 S $P(MAGFILE,U,6)=MAGOBJT
"RTN","MAGGTII",145,0)
 ;
"RTN","MAGGTII",146,0)
 ; now set $P(7) PROCEDURE field
"RTN","MAGGTII",147,0)
 S $P(MAGFILE,U,7)=$P(MAGN0,U,8)
"RTN","MAGGTII",148,0)
 ;
"RTN","MAGGTII",149,0)
 ; now we're making a DATE to display and will use it for a sort in  
"RTN","MAGGTII",150,0)
 ;  the delphi TStringGrid so we display mm/dd/yyyy
"RTN","MAGGTII",151,0)
 ; now set $P(8) display date
"RTN","MAGGTII",152,0)
 S X=$P($P(MAGN2,"^",5),".",1)
"RTN","MAGGTII",153,0)
 I X'="" S X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_($E(X,1,3)+1700)
"RTN","MAGGTII",154,0)
 S $P(MAGFILE,U,8)=X
"RTN","MAGGTII",155,0)
 ;
"RTN","MAGGTII",156,0)
 ; now return the PARENT DATA FILE image pointer
"RTN","MAGGTII",157,0)
 S $P(MAGFILE,U,9)=$P(MAGN2,U,8)
"RTN","MAGGTII",158,0)
 ;
"RTN","MAGGTII",159,0)
 ; now return the ABSTYPE ( this is 'M' or 'W' or 'O' )
"RTN","MAGGTII",160,0)
 ; 'M' magnetic 'W' worm  'O' offline
"RTN","MAGGTII",161,0)
 S $P(MAGFILE,U,10)=ABSTYPE
"RTN","MAGGTII",162,0)
 ;
"RTN","MAGGTII",163,0)
 ; now return the code to show if full res image is offline 'A' or 'O'
"RTN","MAGGTII",164,0)
 ; 'A' accessible   'O' offline
"RTN","MAGGTII",165,0)
 S $P(MAGFILE,U,11)=FULLTYPE
"RTN","MAGGTII",166,0)
 ;
"RTN","MAGGTII",167,0)
 ;  2/1/99 Dicom Series number and Dicom Image Number  
"RTN","MAGGTII",168,0)
 ;    $p(12) and $p(13)
"RTN","MAGGTII",169,0)
 ;
"RTN","MAGGTII",170,0)
 ; lets add the count of images , if this is a group
"RTN","MAGGTII",171,0)
 S X=+$P($G(^MAG(2005,MAGXX,1,0)),U,4),$P(MAGFILE,U,14)=$S(X:X,1:1)
"RTN","MAGGTII",172,0)
 ;
"RTN","MAGGTII",173,0)
 ; $p(15^16 ) are SiteIEN and SiteCode Consolidation - DBI
"RTN","MAGGTII",174,0)
 ; We use SiteIEN and SiteCODE from above 
"RTN","MAGGTII",175,0)
 S $P(MAGFILE,"^",15)=PLC
"RTN","MAGGTII",176,0)
 S $P(MAGFILE,"^",16)=PLCODE
"RTN","MAGGTII",177,0)
 ;
"RTN","MAGGTII",178,0)
 ; $p(17)           8/22/01 GEK Mod for integrity check.
"RTN","MAGGTII",179,0)
 I '$G(MAGNOCHK) D CHK^MAGGSQI(.MAGQI,MAGXX) I 'MAGQI(0) D
"RTN","MAGGTII",180,0)
 . ; remove the Abstract and Image File Names ; 2/14/03 remove c:\program files... with .\bmp\
"RTN","MAGGTII",181,0)
 . S $P(MAGFILE,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGTII",182,0)
 . ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGTII",183,0)
 . S $P(MAGFILE,U,6)=$S(($P(MAGFILE,U,6)'=11):"99",1:11)
"RTN","MAGGTII",184,0)
 . S $P(MAGFILE,U,10)="M"
"RTN","MAGGTII",185,0)
 . ;Send the error message
"RTN","MAGGTII",186,0)
 . S $P(MAGFILE,U,17)=$P(MAGQI(0),U,2)
"RTN","MAGGTII",187,0)
 ; $p(18) is BIGFile Full name and path. ( set above)
"RTN","MAGGTII",188,0)
 ; P48T1 Next line was stopping if P48, and Groups of 1 were showing again.
"RTN","MAGGTII",189,0)
 ;I ($P($G(MAGJOB("VERSION")),".",1,3)'="3.0.8") Q  ;For Speed of Loading Lists.
"RTN","MAGGTII",190,0)
 ; Patches prior to 8, were not using the next pieces of returned data, this will 
"RTN","MAGGTII",191,0)
 ; speed up their listing.
"RTN","MAGGTII",192,0)
 I '((PATCH=8)!(PATCH=48)) Q  ; Take this out when sites are mandated to have Patch 8.
"RTN","MAGGTII",193,0)
 S $P(MAGFILE,U,19)=$P(MAGN0,U,7)                         ; DFN
"RTN","MAGGTII",194,0)
 ; P48T1 The change to speed up access to large groups left out patient name.
"RTN","MAGGTII",195,0)
 ;S $P(MAGFILE,U,20)=$$GET1^DIQ(2,$P(MAGN0,U,7)_",",.01)   ; Patient Name
"RTN","MAGGTII",196,0)
 S $P(MAGFILE,U,20)=MAGJOB("PTNM",MDFN)
"RTN","MAGGTII",197,0)
 S $P(MAGFILE,U,21)=$S(+$P(MAGN40,U,2):$P(^MAG(2005.82,$P(MAGN40,U,2),0),U),1:"")
"RTN","MAGGTII",198,0)
 ; Stop displaying a Group of 1 as a Group, so here we'll change Object type
"RTN","MAGGTII",199,0)
 ;  to that of the '1ST' image in the group of 1.
"RTN","MAGGTII",200,0)
 I $P($G(^MAG(2005,MAGXX,1,0)),U,4)=1 D
"RTN","MAGGTII",201,0)
 . S X=$O(^MAG(2005,MAGXX,1,0))
"RTN","MAGGTII",202,0)
 . S X=+^MAG(2005,MAGXX,1,X,0)
"RTN","MAGGTII",203,0)
 . S $P(MAGFILE,U,6)=$P(^MAG(2005,X,0),U,6) ; OBJECT TYPE OF 1ST IMAGE IN GROUP
"RTN","MAGGTII",204,0)
 . S $P(MAGFILE,U,1)=X
"RTN","MAGGTII",205,0)
 . ; Need Site and Site code of 
"RTN","MAGGTII",206,0)
 Q
"RTN","MAGGTLB")
0^20^B51674302
"RTN","MAGGTLB",1,0)
MAGGTLB ;WOIFO/LB - RPC call for Laboratory/Imaging interface ; [ 11/24/2004 04:06 ]
"RTN","MAGGTLB",2,0)
 ;;3.0;IMAGING;**48**;Jan 11, 2005
"RTN","MAGGTLB",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTLB",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTLB",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTLB",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTLB",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTLB",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTLB",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTLB",10,0)
 ;; |                                                               |
"RTN","MAGGTLB",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTLB",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTLB",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTLB",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTLB",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTLB",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTLB",17,0)
 ;;
"RTN","MAGGTLB",18,0)
 Q
"RTN","MAGGTLB",19,0)
 ;This routine is called from the Laboratory Image capture window.
"RTN","MAGGTLB",20,0)
 ;The line tag SECT is used for selection of the Laboratory section.
"RTN","MAGGTLB",21,0)
 ;The line tag STAIN is used for selection of Histological stain.
"RTN","MAGGTLB",22,0)
 ;The line tag MICRO is used for selection of Microscopic Objective.
"RTN","MAGGTLB",23,0)
 ;The line tag START is used for selection of the specimen that the image
"RTN","MAGGTLB",24,0)
 ;relates to. This line tag will require a lab section (Autopsy/
"RTN","MAGGTLB",25,0)
 ;Gross, Autopsy/Microscopic, EM, Surgical Path, or Cytology),
"RTN","MAGGTLB",26,0)
 ;the Accession year, and either an Accession # or Autopsy #.  Based on
"RTN","MAGGTLB",27,0)
 ;this information it will return an array of specimens for selection.
"RTN","MAGGTLB",28,0)
 ;
"RTN","MAGGTLB",29,0)
START(MAGRY,SECT,YR,ACNUM,XXX) ;RPC Call to Return a list of specimens
"RTN","MAGGTLB",30,0)
 ;  -Removed DFN (XXX) -no longer being used for lookup
"RTN","MAGGTLB",31,0)
 ;SECT = Lab entry from 2005.03
"RTN","MAGGTLB",32,0)
 ;YR = 4 digits of year (1700-2000's)
"RTN","MAGGTLB",33,0)
 ;ACNUM = Accession number or autopsy number
"RTN","MAGGTLB",34,0)
 ;Returns an array of specimens for the year_accession#.
"RTN","MAGGTLB",35,0)
 ;MAGRY(#)=Piece 1 = Pt Name            piece 2 = Ssn
"RTN","MAGGTLB",36,0)
 ;               3 = Date/Time                4 = Accn #
"RTN","MAGGTLB",37,0)
 ;               5 = Pathologist              6 = Specimen
"RTN","MAGGTLB",38,0)
 ;               7 = Ien for file 2005.03     8 = Dfn
"RTN","MAGGTLB",39,0)
 ;               9 = Lrdfn                   10 = Ien for date/time
"RTN","MAGGTLB",40,0)
 ;              11 = Ien specimen            12 = Lab section subfile
"RTN","MAGGTLB",41,0)
 ;                                                 imaging field number
"RTN","MAGGTLB",42,0)
 ;              13 = LR global being referenced
"RTN","MAGGTLB",43,0)
 ;the MAGRY(0)=0 or # lines in array^status (success or no success)
"RTN","MAGGTLB",44,0)
 ;the MAGRY(1)=titles for the grid array
"RTN","MAGGTLB",45,0)
 N Y,YEAR
"RTN","MAGGTLB",46,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTLB",47,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTLB",48,0)
 S MAGRY(0)="0^No Data",DATA=0
"RTN","MAGGTLB",49,0)
 S MAGRY(1)="Name^SSN^Date/Time^Acc #^Pathologist^Specimen"
"RTN","MAGGTLB",50,0)
 N CNT,NUM,DATE,ANUM,NUM,DATA,LRDFN,LRI,LINE,MAGI,DATE,PATH,SPEC,MAGABV
"RTN","MAGGTLB",51,0)
 N MAGNODE,MAGSSN,PAT,MAGSECT,FILE,DATA,MAGDFN,MAGNM,MAGX,X0
"RTN","MAGGTLB",52,0)
 S DATA=0
"RTN","MAGGTLB",53,0)
 S LINE=2
"RTN","MAGGTLB",54,0)
 S MAGRY(0)="0^No specimen information found, please enter via DHCP Lab application"
"RTN","MAGGTLB",55,0)
 I '$G(SECT)!('$G(ACNUM))!($L(YR)'=4) D  Q
"RTN","MAGGTLB",56,0)
 . S MAGRY(0)="0^Incorrect variables sent"
"RTN","MAGGTLB",57,0)
 S MAGABV=$P(SECT,"~",2),SECT=$P(SECT,"~")
"RTN","MAGGTLB",58,0)
 Q:'$D(^MAG(2005.03,SECT,0))
"RTN","MAGGTLB",59,0)
 S MAGSECT=$P(^MAG(2005.03,SECT,0),"^"),MAGI=$E($P(^(0),"^",2),1)
"RTN","MAGGTLB",60,0)
 S MAGNODE=$S(MAGI="S":"SP",MAGI="E":"EM",MAGI="C":"CY",1:"AU")
"RTN","MAGGTLB",61,0)
 S MAGX="A"_MAGNODE_"A"
"RTN","MAGGTLB",62,0)
 ;Xref to search accession year and accession/autopsy #.
"RTN","MAGGTLB",63,0)
 I YR<1700 S MAGRY(0)="0^=Invalid year provided" Q
"RTN","MAGGTLB",64,0)
 S YEAR=YR,YR=YEAR-1700
"RTN","MAGGTLB",65,0)
 ;2001-1700 =301 Fileman internal & YR2K compliance
"RTN","MAGGTLB",66,0)
 ;Checked with Lab developers, still setting 3digit year in xref
"RTN","MAGGTLB",67,0)
 ;S YR=$S(YR>1999:3_$E(YR,3,4),1:2_$E(YR,3,4))  ;CODE FOR YRS >1999
"RTN","MAGGTLB",68,0)
 ;Checking MUMPs x-ref which can not be done via FM DB silent calls.
"RTN","MAGGTLB",69,0)
 I '$D(^LR(MAGX,YR,MAGABV,ACNUM)) D  Q
"RTN","MAGGTLB",70,0)
 . S MAGRY(0)="0^Accession number "_MAGABV_" "_YEAR_" "_ACNUM_" is invalid"
"RTN","MAGGTLB",71,0)
 . ;No data for the year accession #
"RTN","MAGGTLB",72,0)
 S LRDFN=$O(^LR(MAGX,YR,MAGABV,ACNUM,0)),LRI=$O(^(LRDFN,0))
"RTN","MAGGTLB",73,0)
 S MAGDFN=$P(^LR(LRDFN,0),"^",3),FILE=$P(^LR(LRDFN,0),"^",2)
"RTN","MAGGTLB",74,0)
 I FILE=2 S X=^DPT(MAGDFN,0),MAGNM=$P(X,"^"),MAGSSN=$P(X,"^",9) ;Patient file
"RTN","MAGGTLB",75,0)
 I FILE[67 D  Q:MAGNM="" 
"RTN","MAGGTLB",76,0)
 . D GETS^DIQ(67,MAGDFN,".01;.09","E",MAGZZ,MAGERR)
"RTN","MAGGTLB",77,0)
 . I $D(MAGERR("DIERR")) S MAGRY(0)="0^Patient lookup failed" Q
"RTN","MAGGTLB",78,0)
 . S MAGNM=$G(MAGZZ(67,MAGDFN_",",".01","E"))
"RTN","MAGGTLB",79,0)
 . S MAGSSN=$G(MAGZZ(67,MAGDFN_",",".09","E"))
"RTN","MAGGTLB",80,0)
 I "ASCE"'[MAGI Q   ;Not a valid lab section (Autopsy,Surgical Path, Cytology or EM)
"RTN","MAGGTLB",81,0)
 S MAGNODE=$S(MAGI="S":"SP",MAGI="E":"EM",MAGI="C":"CY",1:"AY")
"RTN","MAGGTLB",82,0)
 G:MAGNODE="AY" AUTOPSY    ;Need this because 2005.03 does not reference the right node.
"RTN","MAGGTLB",83,0)
 Q:'$D(^LR(LRDFN,MAGNODE,LRI,0))
"RTN","MAGGTLB",84,0)
 S X0=^LR(LRDFN,MAGNODE,LRI,0),PATH=$P(X0,"^",2),NUM=$P(X0,"^",6)
"RTN","MAGGTLB",85,0)
 S DATE=$P(X0,"^",1),ANUM=NUM
"RTN","MAGGTLB",86,0)
LOOK ;
"RTN","MAGGTLB",87,0)
 S PATH=$S('PATH:"UNKNOWN",1:$$GET1^DIQ(200,PATH_",",.01))
"RTN","MAGGTLB",88,0)
 S YEAR=$E(DATE,1,3)+1700     ;4 digit year
"RTN","MAGGTLB",89,0)
 ; YR2K Compliance 301+1700=2001
"RTN","MAGGTLB",90,0)
 S DATE=$E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_YEAR
"RTN","MAGGTLB",91,0)
 S X=0 F  S X=$O(^LR(LRDFN,MAGNODE,LRI,.1,X)) Q:'X  D
"RTN","MAGGTLB",92,0)
 . S SPEC=$P($G(^LR(LRDFN,MAGNODE,LRI,.1,X,0)),"^")
"RTN","MAGGTLB",93,0)
 . S MAGRY(LINE)=MAGNM_"^"_MAGSSN_"^"_DATE_"^"_ANUM_"^"_PATH_"^"_SPEC_"^"_SECT_"^"_MAGDFN_"^"_LRDFN_"^"_LRI_"^"_X_"^"_"2005"_"^"_"LR("_LRDFN_","""_MAGNODE_""","_LRI_",.1,"_X
"RTN","MAGGTLB",94,0)
 . S DATA=1,LINE=LINE+1
"RTN","MAGGTLB",95,0)
 I DATA S MAGRY(0)=(LINE-2)_"^"_"DATA FOUND"
"RTN","MAGGTLB",96,0)
 Q
"RTN","MAGGTLB",97,0)
AUTOPSY ;
"RTN","MAGGTLB",98,0)
 N MAGERR,MAGRYLN,MAGZZ,XX
"RTN","MAGGTLB",99,0)
 S (MAGERR,MAGZZ)=""
"RTN","MAGGTLB",100,0)
 S X0=^LR(LRDFN,"AU"),DATE=$P(X0,"^"),NUM=$P(X0,"^",6)
"RTN","MAGGTLB",101,0)
 S PATH=$P(X0,"^",7),ANUM=NUM
"RTN","MAGGTLB",102,0)
 S PATH=$S('PATH:"UNKNOWN",1:$$GET1^DIQ(200,PATH_",",.01))
"RTN","MAGGTLB",103,0)
 ;  DATE in line below, was DATA ( DATA was a misprint ) GEK
"RTN","MAGGTLB",104,0)
 S YEAR=$E(DATE,1,3)+1700   ;4 digit year
"RTN","MAGGTLB",105,0)
 ; YR2K compliance 301+1700= 2001
"RTN","MAGGTLB",106,0)
 S DATE=$E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_YEAR
"RTN","MAGGTLB",107,0)
 S XX=0 F  S XX=$O(^LR(LRDFN,MAGNODE,XX)) Q:'XX  D
"RTN","MAGGTLB",108,0)
 . Q:'$D(^LR(LRDFN,MAGNODE,XX,0))
"RTN","MAGGTLB",109,0)
 . S SPEC=$P(^LR(LRDFN,MAGNODE,XX,0),"^")
"RTN","MAGGTLB",110,0)
 . D GETS^DIQ(61,SPEC,".01","E","MAGZZ","MAGERR")
"RTN","MAGGTLB",111,0)
 . S SPEC=$S($D(MAGERR("DIERR")):"UNKNOWN",1:$G(MAGZZ(61,SPEC_",",".01","E")))
"RTN","MAGGTLB",112,0)
 . S MAGRYLN=""
"RTN","MAGGTLB",113,0)
 . S MAGRYLN=MAGNM_"^"_MAGSSN_"^"_DATE_"^"_ANUM_"^"_PATH_"^"_SPEC
"RTN","MAGGTLB",114,0)
 . S MAGRYLN=MAGRYLN_"^"_SECT_"^"_MAGDFN_"^"_LRDFN_"^^"_XX
"RTN","MAGGTLB",115,0)
 . S MAGRYLN=MAGRYLN_"^"_$S(MAGSECT["GROSS":2005,1:2005.1)
"RTN","MAGGTLB",116,0)
 . S MAGRYLN=MAGRYLN_"^"_"LR("_LRDFN_","""_MAGNODE_""","_XX
"RTN","MAGGTLB",117,0)
 . S MAGRY(LINE)=MAGRYLN
"RTN","MAGGTLB",118,0)
 . S DATA=1,LINE=LINE+1
"RTN","MAGGTLB",119,0)
 I DATA S MAGRY(0)=(LINE-2)_"^"_"DATA FOUND"
"RTN","MAGGTLB",120,0)
 I 'DATA S MAGRY(0)="0^No organ/tissue defined for this autopsy."
"RTN","MAGGTLB",121,0)
 ;If MAGSECT[ "GROSS" then the field # is 2005 for subfile 63.2
"RTN","MAGGTLB",122,0)
 ;else the field # is 2005.1 for the same subfile (AUTOPSY ORGAN/TISSUE).
"RTN","MAGGTLB",123,0)
 Q
"RTN","MAGGTLB",124,0)
STAIN(MAGRY) ;RPC Call to return array of entries from
"RTN","MAGGTLB",125,0)
 ;       file 2005.4, Image Histological Stain.
"RTN","MAGGTLB",126,0)
 ;
"RTN","MAGGTLB",127,0)
 S MAGRY(0)="0^No Entries found for file 2005.4"
"RTN","MAGGTLB",128,0)
 Q:'$D(^MAG(2005.4,0))    ;Imaging file not defined.
"RTN","MAGGTLB",129,0)
 N ENTRY,CNT,DATA,BLANK
"RTN","MAGGTLB",130,0)
 S ENTRY=0,CNT=1,DATA=0,$P(BLANK," ",30)=" "
"RTN","MAGGTLB",131,0)
 F  S ENTRY=$O(^MAG(2005.4,ENTRY)) Q:'ENTRY  D
"RTN","MAGGTLB",132,0)
 . Q:'$D(^MAG(2005.4,ENTRY,0))  S X=$P(^MAG(2005.4,ENTRY,0),"^")
"RTN","MAGGTLB",133,0)
 . S MAGRY(CNT)=X_BLANK_"^"_X,CNT=CNT+1,DATA=1
"RTN","MAGGTLB",134,0)
 I DATA S MAGRY(0)="1^DATA FOUND"_U_(CNT-1)
"RTN","MAGGTLB",135,0)
 Q
"RTN","MAGGTLB",136,0)
MICRO(MAGRY) ;RPC Call to Return array of entries from 
"RTN","MAGGTLB",137,0)
 ;        file 2005.41, Microscopic Objective
"RTN","MAGGTLB",138,0)
 S MAGRY(0)="0^No entries found for file 2005.41"
"RTN","MAGGTLB",139,0)
 Q:'$D(^MAG(2005.41,0))    ;Imaging file not defined.
"RTN","MAGGTLB",140,0)
 N ENTRY,CNT,DATA,BLANK
"RTN","MAGGTLB",141,0)
 S ENTRY=0,CNT=1,DATA=0,$P(BLANK," ",30)=" "
"RTN","MAGGTLB",142,0)
 F  S ENTRY=$O(^MAG(2005.41,ENTRY)) Q:'ENTRY  D
"RTN","MAGGTLB",143,0)
 . Q:'$D(^MAG(2005.41,ENTRY,0))  S X=$P(^MAG(2005.41,ENTRY,0),"^")
"RTN","MAGGTLB",144,0)
 . S MAGRY(CNT)=X_BLANK_"^"_X,CNT=CNT+1,DATA=1
"RTN","MAGGTLB",145,0)
 I DATA S MAGRY(0)="1^DATA FOUND"_"^"_(CNT-1)
"RTN","MAGGTLB",146,0)
 Q
"RTN","MAGGTLB",147,0)
SECT(MAGRY) ;RPC Call to Build Pathology selection 
"RTN","MAGGTLB",148,0)
 ;       from file 68 accordingly to user's division
"RTN","MAGGTLB",149,0)
 ;MAGRY - Returns array of lab section name, section abbreviation
"RTN","MAGGTLB",150,0)
 ;        used in defining the accession number & xref lookup, 
"RTN","MAGGTLB",151,0)
 ;        as well as the IEN in Imaging Parent file.
"RTN","MAGGTLB",152,0)
 N Y,A,B,BLANK,MAGABV,MAGERR,MAGIEN,MAGNM,MAGNNM,MAGSEC,MAGTYPE,DATA
"RTN","MAGGTLB",153,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTLB",154,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTLB",155,0)
 S MAGRY(0)="0^No entries found^0"
"RTN","MAGGTLB",156,0)
 S MAGSEC="SPCYEMAU",(A,B)=0,$P(BLANK," ",30)="" D CK Q:MAGERR
"RTN","MAGGTLB",157,0)
 F  S A=$O(^LRO(68,A)) Q:'A  D
"RTN","MAGGTLB",158,0)
 . I MAGSEC[$P($G(^LRO(68,A,0)),"^",2),$P(^LRO(68,A,0),"^",2)]"""",$G(^LRO(68,A,3,+DUZ(2),0)) D
"RTN","MAGGTLB",159,0)
 . . S MAGABV=$P(^LRO(68,A,0),"^",11) Q:MAGABV=""   ;No abbreviation defined
"RTN","MAGGTLB",160,0)
 . . S MAGTYPE=$P(^LRO(68,A,0),"^",2),MAGNM=$P(^LRO(68,A,0),"^")
"RTN","MAGGTLB",161,0)
 . . Q:MAGSEC'[MAGTYPE  D PARENT    ;Must be pathology section.
"RTN","MAGGTLB",162,0)
 . . S B=B+1,DATA=1,MAGRY(B)=MAGNM_BLANK_"^"_MAGIEN_"~"_MAGABV
"RTN","MAGGTLB",163,0)
 I '$D(DATA) S MAGRY(0)="0^No entries found for your division^0" Q
"RTN","MAGGTLB",164,0)
 I DATA S B=B+1,MAGRY(0)="1^Entries found^"_B
"RTN","MAGGTLB",165,0)
 Q
"RTN","MAGGTLB",166,0)
CK ;Check for valid division.
"RTN","MAGGTLB",167,0)
 S MAGERR=1
"RTN","MAGGTLB",168,0)
 N MAGSITE,MAGER
"RTN","MAGGTLB",169,0)
 S MAGSITE=+DUZ(2)
"RTN","MAGGTLB",170,0)
 I 'MAGSITE D  Q
"RTN","MAGGTLB",171,0)
 . S MAGRY(0)="0^You don't have a division setup."
"RTN","MAGGTLB",172,0)
 ;  gek/ change : ..."A",MAGSITE...  to  ..."","`"_MAGSITE...
"RTN","MAGGTLB",173,0)
 I '$$FIND1^DIC(4,"","","`"_MAGSITE,"","","MAGER") D  Q
"RTN","MAGGTLB",174,0)
 . S MAGRY(0)="0^No division name found."
"RTN","MAGGTLB",175,0)
 S MAGERR=0
"RTN","MAGGTLB",176,0)
 Q
"RTN","MAGGTLB",177,0)
PARENT ;Set the corresponding parent file/subfile in ^MAG(2005.03,62:64.
"RTN","MAGGTLB",178,0)
 S MAGIEN=$S(MAGTYPE="SP":63.08,MAGTYPE="EM":63.02,MAGTYPE="CY":63.09,1:63.2)
"RTN","MAGGTLB",179,0)
 I MAGTYPE="AU" S MAGIEN=63.2,MAGNNM=MAGNM_" (GROSS)",B=B+1,MAGRY(B)=MAGNNM_BLANK_"^"_MAGIEN_"~"_MAGABV,MAGNNM="",MAGIEN=63,MAGNM=MAGNM_" (MICROSCOPIC)"
"RTN","MAGGTLB",180,0)
 ;Autopsy selection will have two selection (GROSS or MICROSCOPIC) and the parent file ^MAG(2005.03 has two entries (63 & 63.2).
"RTN","MAGGTLB",181,0)
 Q
"RTN","MAGGTRPT")
0^12^B42324178
"RTN","MAGGTRPT",1,0)
MAGGTRPT ;WOIFO/RED/GEK - Display Associated Report ; [ 11/08/2001 17:18 ]
"RTN","MAGGTRPT",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGGTRPT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRPT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTRPT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTRPT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTRPT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTRPT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTRPT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTRPT",10,0)
 ;; |                                                               |
"RTN","MAGGTRPT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTRPT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTRPT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTRPT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTRPT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTRPT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRPT",17,0)
 ;;
"RTN","MAGGTRPT",18,0)
BRK(MAGRPTY,MAGGIEN,NOCHK) ;RPC [MAGGRPT]  Call to return Image report
"RTN","MAGGTRPT",19,0)
 ;  MAGGIEN is internal number in Image File ^MAG(2005,
"RTN","MAGGTRPT",20,0)
 ;  NOCHK   is a Flag that tell to Not run the QA check, just return
"RTN","MAGGTRPT",21,0)
 ;          the report.
"RTN","MAGGTRPT",22,0)
 ;
"RTN","MAGGTRPT",23,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT"))
"RTN","MAGGTRPT",24,0)
 K @MAGRPTY ; clean it up first.
"RTN","MAGGTRPT",25,0)
 S @MAGRPTY@(0)="0^Building the Image report..."
"RTN","MAGGTRPT",26,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTRPT"
"RTN","MAGGTRPT",27,0)
 ;
"RTN","MAGGTRPT",28,0)
 N X,Y,Z,MAGGBRK,MAGO,MAGGRPO,MAGDFN,MAGTMPR,MAGTMPRT
"RTN","MAGGTRPT",29,0)
 N MAGNODIS,MAGTMPR2,MAGDESC,MAGISGRP,MAGQA,%ZIS,IOP
"RTN","MAGGTRPT",30,0)
 S MAGGBRK=1,MAGISGRP=0
"RTN","MAGGTRPT",31,0)
 S MAGO=+$P(MAGGIEN,"^")
"RTN","MAGGTRPT",32,0)
 S NOCHK=+$G(NOCHK)
"RTN","MAGGTRPT",33,0)
 ; Requesting a report, have to check Image
"RTN","MAGGTRPT",34,0)
 ;   and Group, if this image is in a group.
"RTN","MAGGTRPT",35,0)
 I 'NOCHK D  Q:'MAGQA(0)
"RTN","MAGGTRPT",36,0)
 . D CHK^MAGGSQI(.MAGQA,MAGO)
"RTN","MAGGTRPT",37,0)
 . I 'MAGQA(0) S @MAGRPTY@(0)="-2^"_$P(MAGQA(0),U,2,99) Q
"RTN","MAGGTRPT",38,0)
 . S MAGGRPO=+$P(^MAG(2005,MAGO,0),U,10)
"RTN","MAGGTRPT",39,0)
 . Q:'MAGGRPO  K MAGQA
"RTN","MAGGTRPT",40,0)
 . D CHK^MAGGSQI(.MAGQA,MAGGRPO)
"RTN","MAGGTRPT",41,0)
 . I 'MAGQA(0) S @MAGRPTY@(0)="-2^"_$P(MAGQA(0),U,2,99) Q
"RTN","MAGGTRPT",42,0)
 ;
"RTN","MAGGTRPT",43,0)
 ;
"RTN","MAGGTRPT",44,0)
 I 'MAGO S @MAGRPTY@(0)="INVALID Image pointer: '"_MAGGIEN_"'" Q
"RTN","MAGGTRPT",45,0)
 I $D(^MAG(2005.1,MAGO)) S @MAGRPTY@(0)="0^Image : """_$P($G(^MAG(2005.1,MAGO,2)),U,4)_""" has been deleted." Q
"RTN","MAGGTRPT",46,0)
 S MAGDESC="",MAGDFN=$P(^MAG(2005,MAGO,0),U,7)
"RTN","MAGGTRPT",47,0)
 ; IN check we get Desc for Report Window header,
"RTN","MAGGTRPT",48,0)
 ;    and Define Group IEN  - MAGGRPO if it exists.
"RTN","MAGGTRPT",49,0)
 ;    and Define MAGISGRP = 1 if this MAGO is a group itself
"RTN","MAGGTRPT",50,0)
 D CHECK(.MAGO,MAGDFN,.MAGDESC,.MAGGRPO,.MAGISGRP)
"RTN","MAGGTRPT",51,0)
 ; quit if NO PARENT DATA FILE and No long description.
"RTN","MAGGTRPT",52,0)
 ;  for the Image or the Group entry
"RTN","MAGGTRPT",53,0)
 I ($P($G(^MAG(2005,MAGO,2)),U,6)="")&('$D(^MAG(2005,MAGO,3)))&($P($G(^MAG(2005,MAGGRPO,2)),U,6)="")&('$D(^MAG(2005,MAGGRPO,3))) S @MAGRPTY@(0)="0^No Report for this Image" Q
"RTN","MAGGTRPT",54,0)
 S IOP="IMAGING WORKSTATION",%ZIS=0 D ^%ZIS
"RTN","MAGGTRPT",55,0)
 I POP S @MAGRPTY@(0)="0^Can't open device IMAGING WORKSTATION" K POP Q
"RTN","MAGGTRPT",56,0)
 U IO D BUILD
"RTN","MAGGTRPT",57,0)
 ;
"RTN","MAGGTRPT",58,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGGTRPT",59,0)
 S:+$P(@MAGRPTY@(0),"^") @MAGRPTY@(0)="1^"_MAGDESC
"RTN","MAGGTRPT",60,0)
 Q
"RTN","MAGGTRPT",61,0)
BUILD ;
"RTN","MAGGTRPT",62,0)
 K DIC,DIR
"RTN","MAGGTRPT",63,0)
 N MAGDASH,DIWR,DIWL
"RTN","MAGGTRPT",64,0)
 S $P(MAGDASH,"_",79)="_"
"RTN","MAGGTRPT",65,0)
 ; If Child of group get PARENT DATA FILE from group
"RTN","MAGGTRPT",66,0)
 I MAGGRPO S MAGTMPR=$G(^MAG(2005,MAGGRPO,2)),MAGTMPRT=$P(MAGTMPR,"^",6)  ;
"RTN","MAGGTRPT",67,0)
 ; if not child of group, then get PARENT DATA FILE from original IEN
"RTN","MAGGTRPT",68,0)
 I 'MAGGRPO S MAGTMPR=$G(^MAG(2005,MAGO,2)),MAGTMPRT=$P(MAGTMPR,"^",6)
"RTN","MAGGTRPT",69,0)
 S DIWR=80,DIWL=1
"RTN","MAGGTRPT",70,0)
 ;  IF This is a group call GRPDESC which will print ALL image long descriptions , not just the group long desc
"RTN","MAGGTRPT",71,0)
 I MAGISGRP D GRPDESC^MAGGTRP1(MAGO)
"RTN","MAGGTRPT",72,0)
 ; If not a group, then print group long desc if it exists,
"RTN","MAGGTRPT",73,0)
 ;   and/or the long desc of the Images itself
"RTN","MAGGTRPT",74,0)
 I 'MAGISGRP D
"RTN","MAGGTRPT",75,0)
 . I MAGGRPO D GETDESC^MAGGTRP1(MAGGRPO)
"RTN","MAGGTRPT",76,0)
 . D GETDESC^MAGGTRP1(MAGO)
"RTN","MAGGTRPT",77,0)
 . W MAGDASH
"RTN","MAGGTRPT",78,0)
 I MAGTMPRT="" D ENTRY^MAGLOG("LONGDES",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0) Q
"RTN","MAGGTRPT",79,0)
 I $P(MAGTMPR,"^",7)="" S @MAGRPTY@(0)="0^Full report not available through this windows option." Q
"RTN","MAGGTRPT",80,0)
 ;
"RTN","MAGGTRPT",81,0)
 ; Surgery reports
"RTN","MAGGTRPT",82,0)
 S MAGTMPR2=$P(^MAG(2005.03,MAGTMPRT,0),"^",1) I MAGTMPR2="SURGERY" D  Q
"RTN","MAGGTRPT",83,0)
 . S SRTN=$P(MAGTMPR,"^",7)
"RTN","MAGGTRPT",84,0)
 . D ^SROPRPT K SRTN
"RTN","MAGGTRPT",85,0)
 . D ENTRY^MAGLOG("SURGRPT",DUZ,MAGO,"MAGRPT",MAGDFN,0)
"RTN","MAGGTRPT",86,0)
 ;
"RTN","MAGGTRPT",87,0)
 ; TIU documents;
"RTN","MAGGTRPT",88,0)
 I MAGTMPRT=8925 D  Q
"RTN","MAGGTRPT",89,0)
 . N MAGY
"RTN","MAGGTRPT",90,0)
 . D TGET^TIUSRVR1(.MAGY,$P(MAGTMPR,"^",7))
"RTN","MAGGTRPT",91,0)
 . S I="" F  S I=$O(@MAGY@(I)) Q:'I  W !,@MAGY@(I)
"RTN","MAGGTRPT",92,0)
 . D ENTRY^MAGLOG("TIURPT",DUZ,MAGO,"MAGRPT",MAGDFN,0)
"RTN","MAGGTRPT",93,0)
 ;
"RTN","MAGGTRPT",94,0)
 ; Medicine reports
"RTN","MAGGTRPT",95,0)
 I MAGTMPRT>689.999&(MAGTMPRT<703) D  Q
"RTN","MAGGTRPT",96,0)
 . S MAGNODIS=1
"RTN","MAGGTRPT",97,0)
 . D REPRT^MCMAGDSP($P(MAGTMPR,"^",7),MAGTMPRT)
"RTN","MAGGTRPT",98,0)
 . D ENTRY^MAGLOG("MEDRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",99,0)
 ;
"RTN","MAGGTRPT",100,0)
 ; Radiology reports
"RTN","MAGGTRPT",101,0)
 I MAGTMPRT=74 D  Q
"RTN","MAGGTRPT",102,0)
 . D BUILD^MAGGTRP1($P(MAGTMPR,U,7))
"RTN","MAGGTRPT",103,0)
 . D ENTRY^MAGLOG("RADRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",104,0)
 ;
"RTN","MAGGTRPT",105,0)
 ;Laboratory reports
"RTN","MAGGTRPT",106,0)
 I $P(^MAG(2005.03,MAGTMPRT,0),"^",4)=63 D @$S(MAGTMPRT=63:"AU",MAGTMPRT=63.2:"AU",1:"LAB") Q
"RTN","MAGGTRPT",107,0)
 ;
"RTN","MAGGTRPT",108,0)
 S @MAGRPTY@(0)="0^Full report not available through this windows option."
"RTN","MAGGTRPT",109,0)
 Q
"RTN","MAGGTRPT",110,0)
 ;
"RTN","MAGGTRPT",111,0)
CHECK(MAGO,MAGDFN,MAGDESC,MAGGRPO,MAGISGRP) ;
"RTN","MAGGTRPT",112,0)
 ; 9/28/99  Change Report long description, so this is changed to 
"RTN","MAGGTRPT",113,0)
 ; return the desc of MAGO, and define MAGGRPO if this is child of grp
"RTN","MAGGTRPT",114,0)
 N MAGTMP
"RTN","MAGGTRPT",115,0)
 I '$D(^MAG(2005,MAGO)) S @MAGRPTY@(0)="0^Invalid Image pointer"_MAGO Q
"RTN","MAGGTRPT",116,0)
 S MAGDESC=$P($G(^MAG(2005,MAGO,2)),U,4)
"RTN","MAGGTRPT",117,0)
 I $O(^MAG(2005,MAGO,1,0)) S MAGISGRP=1
"RTN","MAGGTRPT",118,0)
 S MAGGRPO=+$P(^MAG(2005,MAGO,0),U,10)
"RTN","MAGGTRPT",119,0)
 ;
"RTN","MAGGTRPT",120,0)
 S MAGTMP=$S(MAGGRPO:MAGGRPO,1:MAGO)
"RTN","MAGGTRPT",121,0)
 Q:'$D(^MAG(2005,MAGTMP,2))
"RTN","MAGGTRPT",122,0)
 ; Procedure Exam Date/Time
"RTN","MAGGTRPT",123,0)
 S Y=$P(^MAG(2005,MAGTMP,2),U,5),X=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_($E(Y,1,3)+1700)
"RTN","MAGGTRPT",124,0)
 ;             procedure                     short description
"RTN","MAGGTRPT",125,0)
 S Y=X_"  "_$P(^MAG(2005,MAGTMP,0),U,8)_"  "_$P($G(^MAG(2005,MAGTMP,2)),U,4)
"RTN","MAGGTRPT",126,0)
 I MAGDFN S MAGDESC=MAGDESC_"^"_$P($G(^DPT(MAGDFN,0)),U)
"RTN","MAGGTRPT",127,0)
 Q
"RTN","MAGGTRPT",128,0)
LAB ; Pathology Reports
"RTN","MAGGTRPT",129,0)
 N LINE,MAGIOPEN,MAGSTART,MAGEND,MAGSUB,TYPE,MAGXX,MAGLR
"RTN","MAGGTRPT",130,0)
 S TYPE=$P(^MAG(2005.03,MAGTMPRT,0),"^",2)
"RTN","MAGGTRPT",131,0)
 S MAGSTART=$P(^MAG(2005,MAGO,2),"^",10),MAGLR=$P(^MAG(2005,MAGO,2),"^",7)
"RTN","MAGGTRPT",132,0)
 I MAGSTART,MAGLR,$D(^LR(MAGLR,TYPE,MAGSTART,0)) D
"RTN","MAGGTRPT",133,0)
 . S (MAGSTART,MAGEND)=9999999-MAGSTART
"RTN","MAGGTRPT",134,0)
 . Q
"RTN","MAGGTRPT",135,0)
 ;if no pointer back to lab file use the procedure date/time.
"RTN","MAGGTRPT",136,0)
 I 'MAGSTART D 
"RTN","MAGGTRPT",137,0)
 . S MAGSTART=$P(^MAG(2005,MAGO,2),"^",5)
"RTN","MAGGTRPT",138,0)
 . S (MAGSTART,MAGEND)=$P(MAGSTART,".")
"RTN","MAGGTRPT",139,0)
 . Q
"RTN","MAGGTRPT",140,0)
 I '$L(MAGSTART) D  Q
"RTN","MAGGTRPT",141,0)
 . S @MAGRPTY@(1)="No Procedure Date/Time entered in file 2005 for this Image"
"RTN","MAGGTRPT",142,0)
 S TYPE=$S(TYPE="SP":"SURGICAL PATHOLOGY",TYPE="CY":"CYTOPATHOLOGY",1:TYPE)
"RTN","MAGGTRPT",143,0)
 S MAGSUB=1,MAGSUB(TYPE)="",MAGXX=""
"RTN","MAGGTRPT",144,0)
 S MAGIOPEN=1
"RTN","MAGGTRPT",145,0)
 D EN^LR7OSUM(MAGXX,MAGDFN,MAGSTART,MAGEND,10,80,.MAGSUB)
"RTN","MAGGTRPT",146,0)
 I '$D(^TMP("LRC",$J)) S @MAGRPTY@(1)="No report(s) on file." Q
"RTN","MAGGTRPT",147,0)
 E  S LINE=0 F  S LINE=$O(^TMP("LRC",$J,LINE)) Q:LINE<1  W !,^TMP("LRC",$J,LINE,0)
"RTN","MAGGTRPT",148,0)
 D ENTRY^MAGLOG("LABRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",149,0)
 K ^TMP("LRC",$J),^TMP("LRT",$J),^TMP("LRH",$J)
"RTN","MAGGTRPT",150,0)
 Q
"RTN","MAGGTRPT",151,0)
AU ;Autopsy Report
"RTN","MAGGTRPT",152,0)
 N LRDFN,MAGSUB,MAGXX,LINE
"RTN","MAGGTRPT",153,0)
 S MAGSUB("AUTOPSY")=""
"RTN","MAGGTRPT",154,0)
 I '$D(MAGO)!'$D(MAGDFN) W !,"Missing imaging pointers." Q
"RTN","MAGGTRPT",155,0)
 S LRDFN=$P(^MAG(2005,MAGO,2),"^",7),LRDFN=+LRDFN
"RTN","MAGGTRPT",156,0)
 I 'LRDFN!'$D(^LR(LRDFN,0)) W !,"Information missing, please use DHCP Lab print options." Q
"RTN","MAGGTRPT",157,0)
 I '$D(^LR(LRDFN,"AU")) W !,"Missing autopsy information." K LRDFN Q
"RTN","MAGGTRPT",158,0)
 D EN^LR7OSUM(.MAGXX,MAGDFN,,,,80,.MAGSUB)
"RTN","MAGGTRPT",159,0)
 I '$D(^TMP("LRC",$J)) S @MAGRPTY@(1)="No autopsy report on file." Q
"RTN","MAGGTRPT",160,0)
 S LINE=0 F  S LINE=$O(^TMP("LRC",$J,LINE)) Q:LINE<1  W !,^TMP("LRC",$J,LINE,0)
"RTN","MAGGTRPT",161,0)
 D ENTRY^MAGLOG("LABRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",162,0)
 K ^TMP("LRC",$J)
"RTN","MAGGTRPT",163,0)
 Q
"RTN","MAGGTRPT",164,0)
ERRA ;
"RTN","MAGGTRPT",165,0)
 S @MAGRPTY@(0)="0^ERROR "_$$EC^%ZOSV
"RTN","MAGGTRPT",166,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTRPT",167,0)
 Q
"RTN","MAGGTU3")
0^13^B59193150
"RTN","MAGGTU3",1,0)
MAGGTU3 ;WOIFO/GEK - Silent calls for Imaging ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU3",2,0)
 ;;3.0;IMAGING;**7,8,48**;Jan 11, 2005
"RTN","MAGGTU3",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU3",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU3",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU3",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU3",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU3",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU3",10,0)
 ;; |                                                               |
"RTN","MAGGTU3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",17,0)
 ;;
"RTN","MAGGTU3",18,0)
 Q
"RTN","MAGGTU3",19,0)
IMAGEINF(MAGRY,IEN,NOCHK) ;RPC [MAGG IMAGE INFO] Call to return information for 1 image;
"RTN","MAGGTU3",20,0)
 ; IEN   =       Image IEN ^MAG(2005,IEN
"RTN","MAGGTU3",21,0)
 ; NOCHK =   If Flag = 1, then do not run QA check on this image.
"RTN","MAGGTU3",22,0)
 ; 
"RTN","MAGGTU3",23,0)
 N MAGFILE,Y,Z,MAGNOCHK
"RTN","MAGGTU3",24,0)
 I '$D(^MAG(2005,IEN)) D  Q
"RTN","MAGGTU3",25,0)
 . I $D(^MAG(2005.1,IEN)) S MAGRY(0)="0^Image : """_$P($G(^MAG(2005.1,IEN,2)),U,4)_""" has been deleted." Q
"RTN","MAGGTU3",26,0)
 . S MAGRY(0)="0^INVALID Image number "_IEN
"RTN","MAGGTU3",27,0)
 . Q
"RTN","MAGGTU3",28,0)
 ; MAGGTII queries the variable MAGNOCHK to run QA check or not.
"RTN","MAGGTU3",29,0)
 S MAGNOCHK=+$G(NOCHK)
"RTN","MAGGTU3",30,0)
 S MAGXX=IEN D INFO^MAGGTII ; this'll give us the  MAGFILE variable
"RTN","MAGGTU3",31,0)
 S Z=$P(^MAG(2005,IEN,0),U,7)
"RTN","MAGGTU3",32,0)
 I '$D(^DPT(Z)) S Z="1^Invalid patient pointer"
"RTN","MAGGTU3",33,0)
 E  S Z=Z_U_$P(^DPT(Z,0),U)
"RTN","MAGGTU3",34,0)
 S MAGRY(0)="1^"_MAGFILE
"RTN","MAGGTU3",35,0)
 S MAGRY(1)=Z ; dfn^name
"RTN","MAGGTU3",36,0)
 Q
"RTN","MAGGTU3",37,0)
USERINF2(MAGRY,MAGWRKID) ;RPC [MAGGUSER2] Return user info.
"RTN","MAGGTU3",38,0)
 ; MAGRY(1) = DUZ ^ FULL NAME  ^ INITIALS
"RTN","MAGGTU3",39,0)
 ; MAGRY(2) = Network UserName ^ PassWord.
"RTN","MAGGTU3",40,0)
 ; MAGRY(3) = MUSE Site number. ( default = 1)
"RTN","MAGGTU3",41,0)
 ; MAGRY(4) = SITE PARAM: IEN ^ SITE PARAM: SITE CODE ^ DUZ(2) ^ SITE PARAM: INSTITUTION (FULL TEXT)(.01) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",42,0)
 ; MAGRY(5) = +<CP Version>|0 ^ Version of CP installed on Server
"RTN","MAGGTU3",43,0)
 ; MAGRY(6) = Warning message if we can't resolve which Site Parameter entry to use.
"RTN","MAGGTU3",44,0)
 ; MAGRY(7) = Warning message  <reserved for future>
"RTN","MAGGTU3",45,0)
 ;
"RTN","MAGGTU3",46,0)
 N J,K,Y,MAGPLC,MAGWARN,MAGWARN1 ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",47,0)
 S MAGPLC=0
"RTN","MAGGTU3",48,0)
 I $D(DUZ(2)) S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",49,0)
 ;
"RTN","MAGGTU3",50,0)
 ; SET THE PARTITION VARIABLE MAGSYS   i.e.'IGK_Garrett's Desk'
"RTN","MAGGTU3",51,0)
 S MAGSYS=$G(MAGWRKID,"")
"RTN","MAGGTU3",52,0)
 I +$G(DUZ)=0 S MAGRY(0)="0^DUZ Undefined, Null or Zero" Q
"RTN","MAGGTU3",53,0)
 I 'MAGPLC D
"RTN","MAGGTU3",54,0)
 . S MAGWARN="Can't resolve Site Param, DUZ(2): "_$S($D(DUZ(2)):DUZ(2),1:"NULL")_" DUZ: "_DUZ
"RTN","MAGGTU3",55,0)
 . S MAGPLC=$$DUZ2PLC^MAGBAPIP(.MAGWARN1) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",56,0)
 . Q
"RTN","MAGGTU3",57,0)
 S MAGRY(0)="1^"
"RTN","MAGGTU3",58,0)
 ;          DUZ     FULL NAME                INITIALS
"RTN","MAGGTU3",59,0)
 S MAGRY(1)=DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)
"RTN","MAGGTU3",60,0)
 ; NOW NET STUFF
"RTN","MAGGTU3",61,0)
 I 'MAGPLC Q 
"RTN","MAGGTU3",62,0)
 ; Get info from IMAGING SITE PARAMETERS File
"RTN","MAGGTU3",63,0)
 ; get the Network UserName and PassWord.
"RTN","MAGGTU3",64,0)
 S MAGRY(2)=$P($G(^MAG(2006.1,MAGPLC,"NET")),U,1,2)
"RTN","MAGGTU3",65,0)
 ; get the default MUSE Site number.
"RTN","MAGGTU3",66,0)
 S MAGRY(3)=+$P($G(^MAG(2006.1,MAGPLC,"USERPREF")),U,2)
"RTN","MAGGTU3",67,0)
 ; default to 1 if nothing is entered in Site Parameters File
"RTN","MAGGTU3",68,0)
 I MAGRY(3)=0 S MAGRY(3)=1
"RTN","MAGGTU3",69,0)
 ; This SITEIEN^SITECODE^USER INSTITUTION IEN^INSTITUTION NAME^CONSOLIDATED
"RTN","MAGGTU3",70,0)
 ;  is  used by Display to determine location of Workstation
"RTN","MAGGTU3",71,0)
 ;  and used by Capture to determine the Write Location.
"RTN","MAGGTU3",72,0)
 S MAGRY(4)=MAGPLC_U_$$GET1^DIQ(2006.1,MAGPLC,.09)_U_$G(DUZ(2))_U_$$GET1^DIQ(2006.1,MAGPLC,.01,"E")_U_$$CONSOLID^MAGBAPI
"RTN","MAGGTU3",73,0)
 ; is CP installed at this site, the Front End will hide options
"RTN","MAGGTU3",74,0)
 ;  related to CP if not installed.
"RTN","MAGGTU3",75,0)
 S X=$$VERSION^XPDUTL("CLINICAL PROCEDURES")
"RTN","MAGGTU3",76,0)
 S MAGRY(5)=+X_U_X
"RTN","MAGGTU3",77,0)
 S MAGRY(6)=$G(MAGWARN)
"RTN","MAGGTU3",78,0)
 S MAGRY(7)=$G(MAGWARN1)
"RTN","MAGGTU3",79,0)
 Q
"RTN","MAGGTU3",80,0)
 ;
"RTN","MAGGTU3",81,0)
CATEGORY(MAGRY) ; RPC [MAGGDESCCAT] Call to return Mag Descriptive Categories in array
"RTN","MAGGTU3",82,0)
 ; for listing in a list box.
"RTN","MAGGTU3",83,0)
 N I,K,CT,Y
"RTN","MAGGTU3",84,0)
 S I=0,CT=0
"RTN","MAGGTU3",85,0)
 I '$D(^MAG(2005.81)) D  Q
"RTN","MAGGTU3",86,0)
 . S MAGRY(0)="0^ERROR Mag Descriptive Category File doesn't exist"
"RTN","MAGGTU3",87,0)
 F  S I=$O(^MAG(2005.81,"B",I)) Q:I=""  D
"RTN","MAGGTU3",88,0)
 . ;S K=$O(^MAG(2005.81,"B",I,"")),CT=CT+1,MAGRY(CT)=I_U_K
"RTN","MAGGTU3",89,0)
 . ;Next line adds ADMIN, CLIN 3rd piece of the data returned
"RTN","MAGGTU3",90,0)
 . S K=$O(^MAG(2005.81,"B",I,"")),CT=CT+1
"RTN","MAGGTU3",91,0)
 . S MAGRY(CT)=I_U_K_U_$P(^MAG(2005.81,K,0),U,2)
"RTN","MAGGTU3",92,0)
 S MAGRY(0)=CT_"^Categories on file"
"RTN","MAGGTU3",93,0)
 Q
"RTN","MAGGTU3",94,0)
USERKEYS(MAGK) ; RPC [MAGGUSERKEYS]
"RTN","MAGGTU3",95,0)
 ; Call to return an array of IMAGING Security Keys
"RTN","MAGGTU3",96,0)
 ; to use on the workstation to limit capture ability
"RTN","MAGGTU3",97,0)
 ; and to limit functionality on Display application.
"RTN","MAGGTU3",98,0)
 ;
"RTN","MAGGTU3",99,0)
 N Y
"RTN","MAGGTU3",100,0)
 N MAGKS ; list of keys to send to XUS KEY CHECK
"RTN","MAGGTU3",101,0)
 N MAGKG ; list returned from XUS KEY CHECK
"RTN","MAGGTU3",102,0)
 N I,J,MAGMED,MAGKEY,MAGPLC
"RTN","MAGGTU3",103,0)
 K MAGK
"RTN","MAGGTU3",104,0)
 S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",105,0)
 S MAGKEY=+$P($G(^MAG(2006.1,MAGPLC,"KEYS")),U)
"RTN","MAGGTU3",106,0)
 I 'MAGKEY S MAGK(0)="CAPTURE KEYS OFF"
"RTN","MAGGTU3",107,0)
 E  S MAGK(0)="CAPTURE KEYS ON"
"RTN","MAGGTU3",108,0)
 N X S X="MAG",I=0
"RTN","MAGGTU3",109,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,3)'="MAG"  D
"RTN","MAGGTU3",110,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGGTU3",111,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGGTU3",112,0)
 S I=0,J=0,MAGMED=0
"RTN","MAGGTU3",113,0)
 F  S I=$O(MAGKG(I)) Q:I=""  D
"RTN","MAGGTU3",114,0)
 . Q:MAGKG(I)=0
"RTN","MAGGTU3",115,0)
 . S J=J+1,MAGK(J)=MAGKS(I)
"RTN","MAGGTU3",116,0)
 . I MAGKS(I)["MAGCAP MED" S MAGMED=1
"RTN","MAGGTU3",117,0)
 I MAGMED S J=J+1,MAGK(J)="MAGCAP MED"
"RTN","MAGGTU3",118,0)
 Q
"RTN","MAGGTU3",119,0)
MEDSTR(XSTR) ; Return a string of TYPE OF PROCEDURE that
"RTN","MAGGTU3",120,0)
 ; this user has the keys to capture images to.
"RTN","MAGGTU3",121,0)
 N MAGK,X,Y,Z
"RTN","MAGGTU3",122,0)
 S XSTR=","
"RTN","MAGGTU3",123,0)
 D USERKEYS(.MAGK)
"RTN","MAGGTU3",124,0)
 I $D(MAGK("MCKEYCARD")) S XSTR=XSTR_"C,"
"RTN","MAGGTU3",125,0)
 I $D(MAGK("MCKEYGI")) S XSTR=XSTR_"G,"
"RTN","MAGGTU3",126,0)
 I $D(MAGK("MCKEYHEM")) S XSTR=XSTR_"H,"
"RTN","MAGGTU3",127,0)
 I $D(MAGK("MCKEYPULM")) S XSTR=XSTR_"P,"
"RTN","MAGGTU3",128,0)
 I $D(MAGK("MCKEYPFT")) S XSTR=XSTR_"PF,"
"RTN","MAGGTU3",129,0)
 I $D(MAGK("MAGCAP MED GEN")) S XSTR=XSTR_"Z,R,GEN,N,"
"RTN","MAGGTU3",130,0)
 Q
"RTN","MAGGTU3",131,0)
CLEANTMP ; Clean the ^TMP Global, delete our testing global nodeS
"RTN","MAGGTU3",132,0)
 N I S I="MAFZ"
"RTN","MAGGTU3",133,0)
 F  S I=$O(^TMP(I)) Q:$E(I,1,3)'="MAG"  W !,"Deleted ^TMP(",I,")" K ^TMP(I)
"RTN","MAGGTU3",134,0)
 Q
"RTN","MAGGTU3",135,0)
MAIL(MAGRY,MAGFILE,MAGIEN) ;RPC [MAGG OFFLINE IMAGE ACCESSED]
"RTN","MAGGTU3",136,0)
 ;   called when a user tries to access an image that in offline as
"RTN","MAGGTU3",137,0)
 ;   determined by Stuarts file
"RTN","MAGGTU3",138,0)
 ;       ^MAGQUEUE(2006.033,0) = OFFLINE IMAGES
"RTN","MAGGTU3",139,0)
 ;   User must edit the MAGQUEUE file by hand to say if images are
"RTN","MAGGTU3",140,0)
 ;   OFFLINE.
"RTN","MAGGTU3",141,0)
 ;
"RTN","MAGGTU3",142,0)
 N FILEREF,PLATTER
"RTN","MAGGTU3",143,0)
 S MAGRY="0^Error : logging access to Off-Line Image"
"RTN","MAGGTU3",144,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU3",145,0)
 S FILEREF=$$UP^XLFSTR($P(MAGFILE,"\",$L(MAGFILE,"\")))
"RTN","MAGGTU3",146,0)
 S PLATTER=$O(^MAGQUEUE(2006.033,"B",FILEREF,""))
"RTN","MAGGTU3",147,0)
 S PLATTER=$P(^MAGQUEUE(2006.033,PLATTER,0),U,2)
"RTN","MAGGTU3",148,0)
 I MAGFILE[".ABS" Q
"RTN","MAGGTU3",149,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGTU3",150,0)
 S XMDUZ=$S($D(DUZ):DUZ,1:.5)
"RTN","MAGGTU3",151,0)
 S XMSUB="Offline Image Request"
"RTN","MAGGTU3",152,0)
 S XMTEXT="A("
"RTN","MAGGTU3",153,0)
 S A(1)="Patient   : "_$P(^DPT($P($G(^MAG(2005,+MAGIEN,0)),U,7),0),U,1)
"RTN","MAGGTU3",154,0)
 S A(2)="FileName  : "_MAGFILE_"  "_MAGIEN
"RTN","MAGGTU3",155,0)
 S A(3)="Desc      : "_$P($G(^MAG(2005,MAGIEN,2)),U,4)
"RTN","MAGGTU3",156,0)
 S A(4)="Procedure : "_$P($G(^MAG(2005,MAGIEN,0)),U,8)
"RTN","MAGGTU3",157,0)
 S A(5)="Platter   : "_PLATTER
"RTN","MAGGTU3",158,0)
 S A(6)="User      : "_$$GET1^DIQ(200,DUZ_",",.01)_"("_$G(DUZ)_")"
"RTN","MAGGTU3",159,0)
 S XMY("G.OFFLINE IMAGE TRACKERS")="" D ^XMD
"RTN","MAGGTU3",160,0)
 S MAGRY="1^Message sent :  Offline Image Accessed"
"RTN","MAGGTU3",161,0)
 Q
"RTN","MAGGTU3",162,0)
LOGERROR(MAGRY,TEXT) ;RPC [MAGG LOG ERROR TEXT]
"RTN","MAGGTU3",163,0)
 ; Call to stuff error information from Delphi app into the Session file.
"RTN","MAGGTU3",164,0)
 D LOGERR^MAGGTERR("---- New Error ----")
"RTN","MAGGTU3",165,0)
 S I="" F  S I=$O(TEXT(I)) Q:I=""  D LOGERR^MAGGTERR(TEXT(I))
"RTN","MAGGTU3",166,0)
 S MAGRY="1^Error text saved to Session file"
"RTN","MAGGTU3",167,0)
 Q
"RTN","MAGGTU3",168,0)
RSLVABS(MAGIEN,FILENAME) ;Resolve Abstract into the Default Bitmap 
"RTN","MAGGTU3",169,0)
 ; Return the default bitmap, If the image file extension resolves into a default bitmap
"RTN","MAGGTU3",170,0)
 ; MAGIEN        : Image internal entry number
"RTN","MAGGTU3",171,0)
 ; FILENAME      : ""  or Relative Path and Default Bitmap. ie ('.\BMP\magavi.bmp')
"RTN","MAGGTU3",172,0)
 N FTIEN,EXT ; 
"RTN","MAGGTU3",173,0)
 S FILENAME=""
"RTN","MAGGTU3",174,0)
 I '$D(^MAG(2005.021)) Q  ; IMAGE FILE TYPES doesn't exist on this system.
"RTN","MAGGTU3",175,0)
 S EXT=$P($P(^MAG(2005,MAGIEN,0),"^",2),".",2) ; image file extension   JPG, TGA, etc.
"RTN","MAGGTU3",176,0)
 Q:EXT=""  ;
"RTN","MAGGTU3",177,0)
 S FTIEN=$O(^MAG(2005.021,"B",EXT,""))
"RTN","MAGGTU3",178,0)
 Q:'FTIEN  ; No extension in IMAGE FILE TYPES file.
"RTN","MAGGTU3",179,0)
 ; gek P8, get rid of dependency on "c:\program files"
"RTN","MAGGTU3",180,0)
 I '+$P(^MAG(2005.021,FTIEN,0),"^",5) S FILENAME=".\BMP\"_$P(^MAG(2005.021,FTIEN,0),"^",4)
"RTN","MAGGTU3",181,0)
 Q
"RTN","MAGGTU3",182,0)
GETINFO(MAGRY,IEN) ; RPC [MAG4 GET IMAGE INFO]
"RTN","MAGGTU3",183,0)
 ; Call (3.0p8) to get information on 1 image
"RTN","MAGGTU3",184,0)
 N Y,J,JI,I,CT,IENC,FLAGS,SNGRP,Z
"RTN","MAGGTU3",185,0)
 S I=0,CT=0
"RTN","MAGGTU3",186,0)
 S MAGRY(CT)="Image ID#:      "_IEN
"RTN","MAGGTU3",187,0)
 I $D(^MAG(2005.1,IEN)) D  Q
"RTN","MAGGTU3",188,0)
 . S CT=CT+1,MAGRY(CT)="    STATUS:  "_"HAS BEEN DELETED. !!"
"RTN","MAGGTU3",189,0)
 . S CT=CT+1,MAGRY(CT)="Deleted By: "_$$GET1^DIQ(2005.1,IEN,30,"E")
"RTN","MAGGTU3",190,0)
 . S CT=CT+1,MAGRY(CT)="    Reason: "_$$GET1^DIQ(2005.1,IEN,30.2,"E")
"RTN","MAGGTU3",191,0)
 . S CT=CT+1,MAGRY(CT)="      Date: "_$$GET1^DIQ(2005.1,IEN,30.1,"E")
"RTN","MAGGTU3",192,0)
 . Q
"RTN","MAGGTU3",193,0)
 S Z=$P($G(^MAG(2005,IEN,0)),"^",10) I Z D
"RTN","MAGGTU3",194,0)
 . S CT=CT+1,MAGRY(CT)=" is in Group#: "_Z_"  ("_+$P(^MAG(2005,Z,1,0),"^",4)_" images)"
"RTN","MAGGTU3",195,0)
 . Q
"RTN","MAGGTU3",196,0)
 S SNGRP="FLDS"
"RTN","MAGGTU3",197,0)
 I (+$O(^MAG(2005,IEN,1,0)))!($P(^MAG(2005,IEN,0),"^",6)=11)!($P(^MAG(2005,IEN,0),"^",6)=16) D
"RTN","MAGGTU3",198,0)
 . S CT=CT+1,MAGRY(CT)=$P(^MAG(2005,IEN,0),"^",8)_" Group of "_+$P($G(^MAG(2005,IEN,1,0)),U,4)
"RTN","MAGGTU3",199,0)
 . S SNGRP="FLDG"
"RTN","MAGGTU3",200,0)
 . Q
"RTN","MAGGTU3",201,0)
 N MAGOUT,MAGERR,MAGVAL
"RTN","MAGGTU3",202,0)
 S IENC=IEN_","
"RTN","MAGGTU3",203,0)
 S FLAGS="EN"
"RTN","MAGGTU3",204,0)
 S I=-1
"RTN","MAGGTU3",205,0)
 F  S I=I+1,Z=$T(@SNGRP+I) Q:$P(Z,";",3)="end"  D
"RTN","MAGGTU3",206,0)
 . S J=$P(Z,";",4),JI=J_";"
"RTN","MAGGTU3",207,0)
 . K MAGOUT
"RTN","MAGGTU3",208,0)
 . S CT=CT+1,MAGRY(CT)=$P(Z,";",3)
"RTN","MAGGTU3",209,0)
 . D GETS^DIQ(2005,IEN,JI,FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTU3",210,0)
 . ; Get Extension from FileRef
"RTN","MAGGTU3",211,0)
 . I J=1 S MAGVAL=$P($G(MAGOUT(2005,IENC,J,"E")),".",2)
"RTN","MAGGTU3",212,0)
 . E  S MAGVAL=$G(MAGOUT(2005,IENC,J,"E"))
"RTN","MAGGTU3",213,0)
 . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU3",214,0)
 Q
"RTN","MAGGTU3",215,0)
FLDS ;;Format:       ;3;;
"RTN","MAGGTU3",216,0)
 ;;Extension:    ;1;;
"RTN","MAGGTU3",217,0)
FLDG ;;Patient:      ;5;;
"RTN","MAGGTU3",218,0)
 ;;Desc:         ;10;;
"RTN","MAGGTU3",219,0)
 ;;Procedure:    ;6;;
"RTN","MAGGTU3",220,0)
 ;;     Date:    ;15;;
"RTN","MAGGTU3",221,0)
 ;;Class:        ;41;;
"RTN","MAGGTU3",222,0)
 ;;Package:      ;40;;
"RTN","MAGGTU3",223,0)
 ;;Type:         ;42;;
"RTN","MAGGTU3",224,0)
 ;;Proc/Event:   ;43;;
"RTN","MAGGTU3",225,0)
 ;;Spec/SubSpec: ;44;;
"RTN","MAGGTU3",226,0)
 ;;Origin:       ;45;;
"RTN","MAGGTU3",227,0)
 ;;Captured on:  ;7;;
"RTN","MAGGTU3",228,0)
 ;;         by:  ;8;;
"RTN","MAGGTU3",229,0)
 ;;end;;
"RTN","MAGGTU4")
0^14^B25330228
"RTN","MAGGTU4",1,0)
MAGGTU4 ;WOIFO/GEK - Testing callbacks for Delphi Doc Image Prototype ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU4",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGGTU4",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4",10,0)
 ;; |                                                               |
"RTN","MAGGTU4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",17,0)
 ;;
"RTN","MAGGTU4",18,0)
 Q
"RTN","MAGGTU4",19,0)
ABSJB(MAGRY,MAGIN) ;RPC [MAG ABSJB] SET ABSTRACT AND/OR JUKEBOX QUEUES
"RTN","MAGGTU4",20,0)
 N MAGIENAB,MAGIENJB,MAGERR
"RTN","MAGGTU4",21,0)
 S MAGERR=0
"RTN","MAGGTU4",22,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGTU4",23,0)
 S MAGRY="0^ERROR: Setting Queue for Abstract or JukeBox copy"
"RTN","MAGGTU4",24,0)
 S MAGIENAB=+$P(MAGIN,"^",1),MAGIENJB=$P(MAGIN,"^",2)
"RTN","MAGGTU4",25,0)
 L +(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031)):10 E  D QERR Q
"RTN","MAGGTU4",26,0)
 I +MAGIENAB>0 S X=$$ABSTRACT^MAGBAPI(MAGIENAB)
"RTN","MAGGTU4",27,0)
 I MAGIENJB'="" S X=$$JUKEBOX^MAGBAPI(MAGIENJB)
"RTN","MAGGTU4",28,0)
 L -(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031))
"RTN","MAGGTU4",29,0)
 S MAGRY="1^SUCCESSFUL"
"RTN","MAGGTU4",30,0)
 Q
"RTN","MAGGTU4",31,0)
ERR ;
"RTN","MAGGTU4",32,0)
 L -(^MAGQUEUE(2006.03,0),^MAGQUEUE(2006.031))
"RTN","MAGGTU4",33,0)
 N ERR S ERR=$$EC^%ZOSV
"RTN","MAGGTU4",34,0)
 S MAGRY="0^Error setting JukeBox/Abstract Queue.  Not Fatal.  'Save' will continue..."
"RTN","MAGGTU4",35,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGTU4",36,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTU4",37,0)
 Q
"RTN","MAGGTU4",38,0)
QERR ;
"RTN","MAGGTU4",39,0)
 N MAGTXT
"RTN","MAGGTU4",40,0)
 S MAGTXT="Failed to set JukeBox/Abstract Queue."
"RTN","MAGGTU4",41,0)
 ;ENTRY(MAGIMT,MAGDUZ,MAGO,MAGPACK,MAGDFN,MAGCT,MAGAD)
"RTN","MAGGTU4",42,0)
 D ENTRY^MAGLOG("QFAIL",$G(DUZ),MAGIENJB,"","","",MAGTXT)
"RTN","MAGGTU4",43,0)
 D ACTION^MAGGTAU(MAGTXT,1)
"RTN","MAGGTU4",44,0)
 S MAGRY="1^"_MAGTXT_"  Message was sent to IRM.  Not Fatal.  'Save' will continue..."
"RTN","MAGGTU4",45,0)
 N XMSUB,XMY,XMTEXT,XMK,XMDUZ
"RTN","MAGGTU4",46,0)
 S XMTEXT="^TMP($J,""MAGQ"","
"RTN","MAGGTU4",47,0)
 S XMSUB=MAGTXT
"RTN","MAGGTU4",48,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGGTU4",49,0)
 S ^TMP($J,"MAGQ",1)=MAGTXT
"RTN","MAGGTU4",50,0)
 S ^TMP($J,"MAGQ",2)=" for Image IEN: "_MAGIENJB
"RTN","MAGGTU4",51,0)
 S ^TMP($J,"MAGQ",3)="You need to run the Verifier for this Image IEN"
"RTN","MAGGTU4",52,0)
 S XMY("G.IMAGING DEVELOPMENT@DOMAIN.EXT")=""
"RTN","MAGGTU4",53,0)
 D ^XMD
"RTN","MAGGTU4",54,0)
 S XMDUZ=DUZ D KLQ^XMA1B
"RTN","MAGGTU4",55,0)
 K ^TMP($J,"MAGQ")
"RTN","MAGGTU4",56,0)
 Q
"RTN","MAGGTU4",57,0)
CHKVER(MAGRY,CLVER) ;RPC [MAG4 VERSION CHECK]
"RTN","MAGGTU4",58,0)
 ; CLVER is Delphi App Ver.
"RTN","MAGGTU4",59,0)
 ; We can force it to exit, or let it continue.
"RTN","MAGGTU4",60,0)
 ; Ver 2.5P9 (2.5.24.1) is first Delphi Ver that makes this call.
"RTN","MAGGTU4",61,0)
 ; CLVER format = Major,Minor,Patch,T Version (3.0.8.x)  for Version 3.0 Patch 8
"RTN","MAGGTU4",62,0)
 ; Delphi App will display whole message i.e. $P(MAGRY(0),U,2) + MAGRY(1..n)
"RTN","MAGGTU4",63,0)
 ; Then if code  = 2 (MAGRY(0)="2^..."  The App will terminate.
"RTN","MAGGTU4",64,0)
 ;// NEXT LINE is what Version 3.0.7 and before, Returns in MAGRY(0) to the Delphi App
"RTN","MAGGTU4",65,0)
 ;// S MAGRY(0)="1^Version not Checked, continue"
"RTN","MAGGTU4",66,0)
 ;// Q
"RTN","MAGGTU4",67,0)
 N PLC
"RTN","MAGGTU4",68,0)
 S PLC=$$PLACE^MAGBAPI($G(DUZ(2)))
"RTN","MAGGTU4",69,0)
 I 'PLC D  Q
"RTN","MAGGTU4",70,0)
 . S MAGRY(0)="2^   Error verifying Imaging Site (Place) "
"RTN","MAGGTU4",71,0)
 . S MAGRY(5)="   Contact IRM.  Application will abort"
"RTN","MAGGTU4",72,0)
 I '$$VERCHKON(PLC) D  Q
"RTN","MAGGTU4",73,0)
 . S MAGRY(0)="1^Temporarily Allowing All Versions"
"RTN","MAGGTU4",74,0)
 ;
"RTN","MAGGTU4",75,0)
 ;   NOW FOR V 3.0.8.21 WE need to check version and Terminate the Application
"RTN","MAGGTU4",76,0)
 ;   If it is below V 3.0.8 (exception : Allow 3.0.7 and 3.0.2 ) 
"RTN","MAGGTU4",77,0)
 ;  THIS Needs to be determined from the KIDS version installed on the Server.
"RTN","MAGGTU4",78,0)
 ;  ELSE it'll need to be hardcoded into the Routine.  Not very nice.
"RTN","MAGGTU4",79,0)
 N SV,ST,CV,CT,ALLOWV
"RTN","MAGGTU4",80,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGGTU4",81,0)
 S CV=$P(CLVER,".",1,3),CT=$P(CLVER,".",4)
"RTN","MAGGTU4",82,0)
 ;
"RTN","MAGGTU4",83,0)
 ;Abort the Client if it isn't one of the Allowed Clients.
"RTN","MAGGTU4",84,0)
 I (CV'=SV),'(ALLOWV[("|"_CV_"|")) D  Q
"RTN","MAGGTU4",85,0)
 . S MAGRY(0)="2^Server has Imaging V. "_SV_" installed."
"RTN","MAGGTU4",86,0)
 . S MAGRY(5)="Client is running Imaging V. "_CV
"RTN","MAGGTU4",87,0)
 . S MAGRY(7)="    "
"RTN","MAGGTU4",88,0)
 . S MAGRY(10)=" The Client application will not run correctly"
"RTN","MAGGTU4",89,0)
 . S MAGRY(20)=" Contact the Imaging System Manager"
"RTN","MAGGTU4",90,0)
 . S MAGRY(25)=" to update this workstation."
"RTN","MAGGTU4",91,0)
 . S MAGRY(30)="   "
"RTN","MAGGTU4",92,0)
 . S MAGRY(40)="      APPLICATION WILL ABORT !"
"RTN","MAGGTU4",93,0)
 . S MAGRY(50)="(clicking 'Cancel' will not stop the Abort.)"
"RTN","MAGGTU4",94,0)
 . Q 
"RTN","MAGGTU4",95,0)
 ; Warn the Client, allow to continue
"RTN","MAGGTU4",96,0)
 I (CV'=SV) D  Q
"RTN","MAGGTU4",97,0)
 . S MAGRY(0)="0^   Server is running Imaging V. "_SV
"RTN","MAGGTU4",98,0)
 . S MAGRY(5)="   Client is running Imaging V. "_CV
"RTN","MAGGTU4",99,0)
 . S MAGRY(7)="    "
"RTN","MAGGTU4",100,0)
 . S MAGRY(10)="  The Client application should be updated "
"RTN","MAGGTU4",101,0)
 . S MAGRY(20)="  Contact the Imaging System Manager"
"RTN","MAGGTU4",102,0)
 . S MAGRY(25)="  to update this workstation."
"RTN","MAGGTU4",103,0)
 . S MAGRY(30)="   "
"RTN","MAGGTU4",104,0)
 . S MAGRY(40)="       APPLICATION Will Continue"
"RTN","MAGGTU4",105,0)
 . I CV'="3.0.8" S MAGRY(50)="(clicking 'Cancel' will not stop the Client.)"
"RTN","MAGGTU4",106,0)
 . Q
"RTN","MAGGTU4",107,0)
 ; Versions are the Same: If T versions are not, warn the Client
"RTN","MAGGTU4",108,0)
 ; released Client will have the T version that the server expects, and 
"RTN","MAGGTU4",109,0)
 ; no warning will be displayed.
"RTN","MAGGTU4",110,0)
 I CT,(CT'=ST) D  Q
"RTN","MAGGTU4",111,0)
 . S MAGRY(0)="0^                   Server is running Imaging V. "_SV_"."_ST
"RTN","MAGGTU4",112,0)
 . S MAGRY(5)="                   Client is running Imaging V. "_CLVER
"RTN","MAGGTU4",113,0)
 . S MAGRY(10)="     "
"RTN","MAGGTU4",114,0)
 . S MAGRY(20)="  Test Versions of Patch "_SV_" other than T"_ST_" may not work correctly."
"RTN","MAGGTU4",115,0)
 . S MAGRY(25)="     "
"RTN","MAGGTU4",116,0)
 . S MAGRY(30)="                       APPLICATION will Continue  "
"RTN","MAGGTU4",117,0)
 . Q
"RTN","MAGGTU4",118,0)
 ; Version are the Same, to the T.
"RTN","MAGGTU4",119,0)
 S MAGRY(0)="1^Version Check OK. Server: "_SV_" Client: "_CV Q
"RTN","MAGGTU4",120,0)
 Q
"RTN","MAGGTU4",121,0)
GETVER(SVRVER,SVRTVER,ALLOWCL) ;
"RTN","MAGGTU4",122,0)
 ; We Can't compute the Server's current version ( and T Version? )
"RTN","MAGGTU4",123,0)
 ; Severs Ver may not be Client's  i.e. Patch 30 Server had no client.
"RTN","MAGGTU4",124,0)
 ;    This is hardcoded to match the Delphi Client.
"RTN","MAGGTU4",125,0)
 S SVRVER="3.0.48"
"RTN","MAGGTU4",126,0)
 S SVRTVER="6" ; This is the T version that the server expects 
"RTN","MAGGTU4",127,0)
 ; released Client will have the T version that the server expects
"RTN","MAGGTU4",128,0)
 S ALLOWCL="|3.0.24|3.0.33|3.0.42|3.0.41|3.0.8|"
"RTN","MAGGTU4",129,0)
 Q
"RTN","MAGGTU4",130,0)
VERCHKON(PLC) ; Is Version checking on for the site (Place)
"RTN","MAGGTU4",131,0)
 Q +$P(^MAG(2006.1,PLC,"KEYS"),"^",5)
"RTN","MAGGTU5")
0^19^B8684988
"RTN","MAGGTU5",1,0)
MAGGTU5 ;WOIFO/GEK - Silent Utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU5",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGGTU5",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU5",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU5",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU5",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU5",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU5",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU5",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU5",10,0)
 ;; |                                                               |
"RTN","MAGGTU5",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU5",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU5",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU5",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU5",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU5",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU5",17,0)
 ;;
"RTN","MAGGTU5",18,0)
 Q
"RTN","MAGGTU5",19,0)
CLOSE ;Close Execute for the WS.DAT Device
"RTN","MAGGTU5",20,0)
 Q:IO["nul"  ; OPENM calls this 'close execute' twice, we get "" array.
"RTN","MAGGTU5",21,0)
 N MAGDT
"RTN","MAGGTU5",22,0)
 ; IF NOT CALLED FROM IMAGING ROUTINE, USE ^TMP GLOBAL
"RTN","MAGGTU5",23,0)
 I '$D(MAGRPTY) S MAGRPTY=$NA(^TMP($J,"WSDAT")) K @MAGRPTY
"RTN","MAGGTU5",24,0)
 S MAGDT=$$FMTE^XLFDT($$NOW^XLFDT,"1P")
"RTN","MAGGTU5",25,0)
 N I S I=3
"RTN","MAGGTU5",26,0)
 U IO W !!,"** END REPORT "_MAGDT_" **",!
"RTN","MAGGTU5",27,0)
 S X=$$REWIND^%ZIS(IO,IOT,IOPAR) I 'X S @MAGRPTY@(0)="0^Failed: Rewinding to beginning of Host File. Call IRM" Q
"RTN","MAGGTU5",28,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D EOF^MAGGTU5"
"RTN","MAGGTU5",29,0)
 E  S X="EOF^MAGGTU5",@^%ZOSF("TRAP")
"RTN","MAGGTU5",30,0)
 F  U IO R X:5 D  Q:X["** END REPORT "_MAGDT_" **"
"RTN","MAGGTU5",31,0)
 . I X[$C(8)_"_" D
"RTN","MAGGTU5",32,0)
 . . ;strip backspaces and separate underline if they exist saf 4/19/00
"RTN","MAGGTU5",33,0)
 . . S @MAGRPTY@(I)=$E(X,1,$FIND(X,$P(X,$C(8)))-1),I=I+1
"RTN","MAGGTU5",34,0)
 . . S @MAGRPTY@(I)=$E(X,$FIND(X,$P(X,"_")),$L(X)),I=I+1
"RTN","MAGGTU5",35,0)
 . E  S @MAGRPTY@(I)=$$TRIM(X),I=I+1
"RTN","MAGGTU5",36,0)
 S @MAGRPTY@(0)="1^Report Complete"
"RTN","MAGGTU5",37,0)
 Q
"RTN","MAGGTU5",38,0)
EOF ;
"RTN","MAGGTU5",39,0)
 S X=$$EC^%ZOSV
"RTN","MAGGTU5",40,0)
 I ((X["ENDOFFILE")!(X["EOF")) S @MAGRPTY(0)="1^Report Complete" Q
"RTN","MAGGTU5",41,0)
 D ^%ZTER
"RTN","MAGGTU5",42,0)
 S @MAGRPTY@(0)="0^ERROR: "_$$EC^%ZOSV
"RTN","MAGGTU5",43,0)
 Q
"RTN","MAGGTU5",44,0)
 ;
"RTN","MAGGTU5",45,0)
DTTM(MAGRY,INDT,NOFDT) ; RPC [MAGG DTTM] Call to return DHCP Date/Time
"RTN","MAGGTU5",46,0)
 ; Output MAGRY 
"RTN","MAGGTU5",47,0)
 ;  0^Error message
"RTN","MAGGTU5",48,0)
 ;  1 ^ External Date  in "Jan 04, 1999@11:55"   format  ^ Internal DateTime
"RTN","MAGGTU5",49,0)
 ;  INDT         is the input, it is validated and the external value is returned.
"RTN","MAGGTU5",50,0)
 ;       NOFDT   1|0
"RTN","MAGGTU5",51,0)
 ;               Flag to Not Allow Future Dates.
"RTN","MAGGTU5",52,0)
 ;               prior to P48 we allowed future dates.  Now the Parameter can stop that.
"RTN","MAGGTU5",53,0)
 ;
"RTN","MAGGTU5",54,0)
 N INPUT,Y
"RTN","MAGGTU5",55,0)
 S X=INDT,NOFDT=+$G(NOFDT)
"RTN","MAGGTU5",56,0)
 S %DT="TS" D ^%DT
"RTN","MAGGTU5",57,0)
 I Y=-1 S MAGRY="0^Incorrect date format: "_X Q
"RTN","MAGGTU5",58,0)
 S MAGRY="1^"_$$FMTE^XLFDT(Y,"1")_U_Y
"RTN","MAGGTU5",59,0)
 Q:'NOFDT
"RTN","MAGGTU5",60,0)
 ;    Now error if future.
"RTN","MAGGTU5",61,0)
 S INPUT=$P(Y,".",1)
"RTN","MAGGTU5",62,0)
 D NOW^%DTC
"RTN","MAGGTU5",63,0)
 S X=$P(X,".",1)
"RTN","MAGGTU5",64,0)
 I INPUT]X S MAGRY="0^Future dates are not allowed."
"RTN","MAGGTU5",65,0)
 Q
"RTN","MAGGTU5",66,0)
TRIM(X) ;trim backspace characters
"RTN","MAGGTU5",67,0)
 N I,Y
"RTN","MAGGTU5",68,0)
 S Y=X
"RTN","MAGGTU5",69,0)
 I X[$C(8) D
"RTN","MAGGTU5",70,0)
 . S Y=""
"RTN","MAGGTU5",71,0)
 . F I=1:1:$L(X) I $E(X,I)'=$C(8) S Y=Y_$E(X,I)
"RTN","MAGGTU5",72,0)
 Q Y
"RTN","MAGGTU6")
0^9^B39147814
"RTN","MAGGTU6",1,0)
MAGGTU6 ;WOIFO/GEK - Silent Utilities ; [ 06/20/2001 08:57 ]
"RTN","MAGGTU6",2,0)
 ;;3.0;IMAGING;**24,8,48**;Jan 11, 2005
"RTN","MAGGTU6",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU6",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU6",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU6",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU6",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU6",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU6",10,0)
 ;; |                                                               |
"RTN","MAGGTU6",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU6",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU6",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU6",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU6",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU6",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",17,0)
 ;;
"RTN","MAGGTU6",18,0)
 Q
"RTN","MAGGTU6",19,0)
 ;
"RTN","MAGGTU6",20,0)
LOGACT(MAGRY,ZY) ;RPC [MAGGACTION LOG]
"RTN","MAGGTU6",21,0)
 ; Call to LogAction from Delphi Window 
"RTN","MAGGTU6",22,0)
 ;
"RTN","MAGGTU6",23,0)
 ; ZY is input variable it is '^' delimited string
"RTN","MAGGTU6",24,0)
 ; 'A|B|C|D|E' ^^ MAGIEN ^ 'Copy/Download' ^ DFN ^ '1';
"RTN","MAGGTU6",25,0)
 ;  DUZ is inserted as 2nd piece below.
"RTN","MAGGTU6",26,0)
 ; I.E. zy  = "C^^103660^Copy To Clipboard^1033^1"
"RTN","MAGGTU6",27,0)
 N Y
"RTN","MAGGTU6",28,0)
 S MAGRY="0^Logging access..."
"RTN","MAGGTU6",29,0)
 ;
"RTN","MAGGTU6",30,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU6",31,0)
 ;                 C       DUZ      MAGIEN     ACTION       DFN       1
"RTN","MAGGTU6",32,0)
 D ENTRY^MAGLOG($P(ZY,U),+$G(DUZ),$P(ZY,U,3),$P(ZY,U,4),$P(ZY,U,5),$P(ZY,U,6))
"RTN","MAGGTU6",33,0)
 S MAGRY="1^Action was Logged."
"RTN","MAGGTU6",34,0)
 Q
"RTN","MAGGTU6",35,0)
TIMEOUT(MAGRY,APP) ;RPC [MAGG GET TIMEOUT]
"RTN","MAGGTU6",36,0)
 ; Call  Returns the timeout for the APP from IMAGING SITE PARAMETERS File
"RTN","MAGGTU6",37,0)
 ;  APP is either 'DISPLAY'  'CAPTURE' or   'VISTARAD'
"RTN","MAGGTU6",38,0)
 N I,MAGTIMES,MAGPLC
"RTN","MAGGTU6",39,0)
 S MAGRY=""
"RTN","MAGGTU6",40,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2)) I 'MAGPLC Q  ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",41,0)
 S MAGTIMES=$G(^MAG(2006.1,MAGPLC,"KEYS"))
"RTN","MAGGTU6",42,0)
 I APP="DISPLAY" S MAGRY=$P(MAGTIMES,U,2)
"RTN","MAGGTU6",43,0)
 I APP="CAPTURE" S MAGRY=$P(MAGTIMES,U,3)
"RTN","MAGGTU6",44,0)
 I APP="VISTARAD" S MAGRY=$P(MAGTIMES,U,4)
"RTN","MAGGTU6",45,0)
 Q
"RTN","MAGGTU6",46,0)
EXIST(EKGPLACE) ;Does an ekg server exist in 2005.2
"RTN","MAGGTU6",47,0)
 I $$CONSOLID^MAGBAPI()=0 Q $O(^MAG(2005.2,"E","EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",48,0)
 Q $O(^MAG(2005.2,"F",EKGPLACE,"EKG",""))
"RTN","MAGGTU6",49,0)
 ;
"RTN","MAGGTU6",50,0)
ONLINE(MAGR) ;RPC [MAG EKG ONLINE] EKG network location status    
"RTN","MAGGTU6",51,0)
 ;returns the status of the first EKG network location type
"RTN","MAGGTU6",52,0)
 ;O if offline or a network location doesn't exist
"RTN","MAGGTU6",53,0)
 ;1 if online
"RTN","MAGGTU6",54,0)
 ;
"RTN","MAGGTU6",55,0)
 N EKG1,EKGPLACE
"RTN","MAGGTU6",56,0)
 S EKGPLACE=$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",57,0)
 I EKGPLACE=0 S EKGPLACE=$$DUZ2PLC^MAGBAPIP() ;Convert to extrinsic /gek 8/2003
"RTN","MAGGTU6",58,0)
 I $$EXIST(EKGPLACE) D
"RTN","MAGGTU6",59,0)
 . I $$CONSOLID^MAGBAPI() S EKG1=$O(^MAG(2005.2,"F",EKGPLACE,"EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",60,0)
 . E  S EKG1=$O(^MAG(2005.2,"E","EKG",""))
"RTN","MAGGTU6",61,0)
 . S MAGR=$P(^MAG(2005.2,EKG1,0),U,6)
"RTN","MAGGTU6",62,0)
 E  S MAGR=0
"RTN","MAGGTU6",63,0)
 Q
"RTN","MAGGTU6",64,0)
SHARE(MAGRY,TYPE) ;RPC [MAG GET NETLOC]
"RTN","MAGGTU6",65,0)
 ; Get list of image shares
"RTN","MAGGTU6",66,0)
 ;TYPE = MAG, EKG, WORM, or ALL
"RTN","MAGGTU6",67,0)
 N TMP,INDX,DATA0,DATA2,DATA3,DATA6,CNT,SHARE,VALUE
"RTN","MAGGTU6",68,0)
 I $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTU6",69,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTU6",70,0)
 S CNT=1,INDX=0
"RTN","MAGGTU6",71,0)
 I TYPE="" S TYPE="ALL"
"RTN","MAGGTU6",72,0)
 S MAGRY(0)="1^SUCCESS"
"RTN","MAGGTU6",73,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:'INDX  D
"RTN","MAGGTU6",74,0)
 . S DATA0=$G(^MAG(2005.2,INDX,0))
"RTN","MAGGTU6",75,0)
 . S DATA2=$G(^MAG(2005.2,INDX,2))
"RTN","MAGGTU6",76,0)
 . S DATA3=$G(^MAG(2005.2,INDX,3))
"RTN","MAGGTU6",77,0)
 . S DATA6=$G(^MAG(2005.2,INDX,6))
"RTN","MAGGTU6",78,0)
 . I TYPE'="ALL" Q:$P(DATA0,"^",7)'[TYPE
"RTN","MAGGTU6",79,0)
 . Q:$P(DATA0,"^",6)=0     ;SHARE IS OFFLINE (don't return offline shares)
"RTN","MAGGTU6",80,0)
 . Q:$P(DATA0,"^",2)[":"   ;Don't return local drives (i.e. c:\)
"RTN","MAGGTU6",81,0)
 . Q:$P(DATA0,"^",2)["."
"RTN","MAGGTU6",82,0)
 . S SHARE=$P(DATA0,"^",2)
"RTN","MAGGTU6",83,0)
 . Q:$E(SHARE,1,2)'="\\"
"RTN","MAGGTU6",84,0)
 . I $E(SHARE,$L(SHARE))="\" S SHARE=$E(SHARE,1,$L(SHARE)-1)
"RTN","MAGGTU6",85,0)
 . S $P(SHARE,"^",2)=$P($G(DATA0),"^",7) ;Physical reference (path)
"RTN","MAGGTU6",86,0)
 . S $P(SHARE,"^",3)=$P($G(DATA0),"^",6)  ;Operational Status 0=OFFLINE 1=ONLINE
"RTN","MAGGTU6",87,0)
 . S $P(SHARE,"^",4)=$P($G(DATA2),"^",1) ;Username
"RTN","MAGGTU6",88,0)
 . S $P(SHARE,"^",5)=$P($G(DATA2),"^",2) ;Password
"RTN","MAGGTU6",89,0)
 . S $P(SHARE,"^",6)=$P($G(DATA6),"^",1)  ;MUSE Site #
"RTN","MAGGTU6",90,0)
 . I $P($G(DATA6),"^",2)'="" S $P(SHARE,"^",7)=^MAG(2006.17,$P(DATA6,"^",2),0)  ;MUSE version #
"RTN","MAGGTU6",91,0)
 . S $P(SHARE,"^",8)=$P($G(DATA3),"^",5)  ;Network location SITE
"RTN","MAGGTU6",92,0)
 . Q:$D(TMP(SHARE))
"RTN","MAGGTU6",93,0)
 . S TMP(SHARE)=INDX
"RTN","MAGGTU6",94,0)
 S INDX=""
"RTN","MAGGTU6",95,0)
 F  S INDX=$O(TMP(INDX)) Q:INDX=""  D
"RTN","MAGGTU6",96,0)
 . S MAGRY(CNT)=TMP(INDX)_"^"_INDX,CNT=CNT+1
"RTN","MAGGTU6",97,0)
 K TMP
"RTN","MAGGTU6",98,0)
 Q
"RTN","MAGGTU6",99,0)
GETENV(MAGRY) ;RPC [MAG GET ENV]
"RTN","MAGGTU6",100,0)
 ; Get some environment variables (used by annotation control)
"RTN","MAGGTU6",101,0)
 S MAGRY=DUZ(2)_"^"_$$NOW^XLFDT
"RTN","MAGGTU6",102,0)
 Q
"RTN","MAGGTU6",103,0)
ANNCB(STATARR) ;Status Callback (called by the import API)
"RTN","MAGGTU6",104,0)
 ;
"RTN","MAGGTU6",105,0)
 N I,CDUZ,QINDEX,A,COUNT
"RTN","MAGGTU6",106,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGTU6",107,0)
 ;  0 = error, all others are success.
"RTN","MAGGTU6",108,0)
 I $P(STATARR(0),"^",1)'=0 D
"RTN","MAGGTU6",109,0)
 . ;   Import was successful
"RTN","MAGGTU6",110,0)
 E  D
"RTN","MAGGTU6",111,0)
 . ;   Import failed - send mail to MAG SERVER group and person who queued the import
"RTN","MAGGTU6",112,0)
 . S XMDUZ=DUZ
"RTN","MAGGTU6",113,0)
 . S XMSUB="Import Error Report"
"RTN","MAGGTU6",114,0)
 . ;    get text of message from status array
"RTN","MAGGTU6",115,0)
 . S XMTEXT="A("
"RTN","MAGGTU6",116,0)
 . ; XMD needs array to start with 1, not 0
"RTN","MAGGTU6",117,0)
 . S COUNT=1,I=""
"RTN","MAGGTU6",118,0)
 . F  S I=$O(STATARR(I)) Q:I=""  D
"RTN","MAGGTU6",119,0)
 . . S A(COUNT)=I_") "_STATARR(I)
"RTN","MAGGTU6",120,0)
 . . S COUNT=COUNT+1
"RTN","MAGGTU6",121,0)
 . . Q
"RTN","MAGGTU6",122,0)
 . S A(COUNT+1)=" "
"RTN","MAGGTU6",123,0)
 . S A(COUNT+2)=" "
"RTN","MAGGTU6",124,0)
 . S A(COUNT+3)="     The errors listed above were generated by"
"RTN","MAGGTU6",125,0)
 . S A(COUNT+4)="     the VistA Imaging Annotation Editor while"
"RTN","MAGGTU6",126,0)
 . S A(COUNT+5)="     trying to import your diagram.  Please"
"RTN","MAGGTU6",127,0)
 . S A(COUNT+6)="     report these errors to your VistA Imaging"
"RTN","MAGGTU6",128,0)
 . S A(COUNT+7)="     support personnel."
"RTN","MAGGTU6",129,0)
 . ;Get person who did the import
"RTN","MAGGTU6",130,0)
 . S QINDEX=STATARR(2)
"RTN","MAGGTU6",131,0)
 . S I=-1 F  S I=$O(^MAG(2006.034,QINDEX,1,I)) Q:I=""  D
"RTN","MAGGTU6",132,0)
 . . I $P($G(^MAG(2006.034,QINDEX,1,I,0)),"^",1)=8 S CDUZ=$P(^MAG(2006.034,QINDEX,1,I,0),"^",2)
"RTN","MAGGTU6",133,0)
 . ;Set recipients of message
"RTN","MAGGTU6",134,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGGTU6",135,0)
 . I $G(CDUZ) S XMY(CDUZ)=""
"RTN","MAGGTU6",136,0)
 . D ^XMD
"RTN","MAGGTU6",137,0)
 . Q
"RTN","MAGGTU6",138,0)
 Q
"RTN","MAGGTU6",139,0)
GETCTP(MAGRY) ;RPC [MAG4 CT PRESETS GET]
"RTN","MAGGTU6",140,0)
 N MAGPLC
"RTN","MAGGTU6",141,0)
 S MAGPLC=$$DUZ2PLC^MAGBAPIP()
"RTN","MAGGTU6",142,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",143,0)
 S MAGRY=$G(^MAG(2006.1,MAGPLC,"CT"))
"RTN","MAGGTU6",144,0)
 I MAGRY="" S MAGRY="0^Site doesn't have CT Presets defined." Q
"RTN","MAGGTU6",145,0)
 S MAGRY="1^"_MAGRY
"RTN","MAGGTU6",146,0)
 Q
"RTN","MAGGTU6",147,0)
SAVECTP(MAGRY,VALUE) ;RPC [MAG4 CT PRESETS SAVE]
"RTN","MAGGTU6",148,0)
 N MAGPLC
"RTN","MAGGTU6",149,0)
 S MAGPLC=$$DUZ2PLC^MAGBAPIP()
"RTN","MAGGTU6",150,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",151,0)
 S ^MAG(2006.1,MAGPLC,"CT")=VALUE
"RTN","MAGGTU6",152,0)
 S MAGRY="1^CT Presets saved."
"RTN","MAGGTU6",153,0)
 Q
"RTN","MAGGTU6",154,0)
NETPLCS ; Create an array of Place, SiteCodes for all entries of
"RTN","MAGGTU6",155,0)
 ; Network Location entries.  
"RTN","MAGGTU6",156,0)
 N I,PLC,PLCODE,CONS
"RTN","MAGGTU6",157,0)
 S CONS=$$CONSOLID^MAGBAPI
"RTN","MAGGTU6",158,0)
 I 'CONS S PLC=$O(^MAG(2006.1,0)),PLCODE=$P(^MAG(2006.1,PLC,0),"^",9)
"RTN","MAGGTU6",159,0)
 ; 
"RTN","MAGGTU6",160,0)
 K MAGJOB("NETPLC")
"RTN","MAGGTU6",161,0)
 S I=0 F  S I=$O(^MAG(2005.2,I)) Q:'I  D
"RTN","MAGGTU6",162,0)
 . I 'CONS S MAGJOB("NETPLC",I)=PLC_"^"_PLCODE Q
"RTN","MAGGTU6",163,0)
 . ; Here, for consolidated sites we get the real Site IEN, and Site Code.
"RTN","MAGGTU6",164,0)
 . I CONS S PLC=$P($G(^MAG(2005.2,I,0)),"^",10),PLCODE=$S(PLC:$P($G(^MAG(2006.1,PLC,0)),"^",9),1:"n/a")
"RTN","MAGGTU6",165,0)
 . S MAGJOB("NETPLC",I)=PLC_"^"_PLCODE
"RTN","MAGGTU6",166,0)
 . Q
"RTN","MAGGTU6",167,0)
 Q
"RTN","MAGGTUP")
0^18^B20209628
"RTN","MAGGTUP",1,0)
MAGGTUP ;WOIFO/GEK - Imaging System User preferences ; [ 06/20/2001 08:57 ]
"RTN","MAGGTUP",2,0)
 ;;3.0;IMAGING;**7,8,48**;Jan 11, 2005
"RTN","MAGGTUP",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUP",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUP",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUP",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUP",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUP",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUP",10,0)
 ;; |                                                               |
"RTN","MAGGTUP",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUP",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUP",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUP",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUP",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUP",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",17,0)
 ;;
"RTN","MAGGTUP",18,0)
 Q
"RTN","MAGGTUP",19,0)
GET(MAGRY,CODE) ;RPC [MAGGUPREFGET] Call to Get user preferences.
"RTN","MAGGTUP",20,0)
 ;
"RTN","MAGGTUP",21,0)
 N Y,PRFIEN,J,X,Z,NODE,MAGPREF
"RTN","MAGGTUP",22,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTUP",23,0)
 K MAGRY
"RTN","MAGGTUP",24,0)
 S MAGRY(0)="0^Error: Attempting to access user preference"
"RTN","MAGGTUP",25,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,""))
"RTN","MAGGTUP",26,0)
 ;    if first time user
"RTN","MAGGTUP",27,0)
 I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",28,0)
 ;    merge default settings into User's Preferences
"RTN","MAGGTUP",29,0)
 D MERGE(PRFIEN)
"RTN","MAGGTUP",30,0)
 ;    This returns the users default Filter, and creates filters if needed.
"RTN","MAGGTUP",31,0)
 S $P(^MAG(2006.18,PRFIEN,"LISTWIN1"),"^",3)=$$DFTFLT^MAGGSFLT(DUZ)
"RTN","MAGGTUP",32,0)
 S MAGRY(0)="1^User Preferences returned."
"RTN","MAGGTUP",33,0)
 ; 
"RTN","MAGGTUP",34,0)
 ; At This point.  Then entry in 2006.18 for User DUZ in complete
"RTN","MAGGTUP",35,0)
 ;   it has been merged with defaults, and has a valid Default Filter.
"RTN","MAGGTUP",36,0)
 ;   
"RTN","MAGGTUP",37,0)
 ;  if caller only wants one node, get it then quit.
"RTN","MAGGTUP",38,0)
 I $L($G(CODE))  S MAGRY($O(MAGRY(""),-1)+1)=CODE_"^"_^MAG(2006.18,PRFIEN,CODE) Q
"RTN","MAGGTUP",39,0)
 ;
"RTN","MAGGTUP",40,0)
 ;  loop through User Pref file, returning all nodes.
"RTN","MAGGTUP",41,0)
 ; Next line was Un-Commented out. BUT Clients before Patch 8 need it.
"RTN","MAGGTUP",42,0)
 S MAGRY($O(MAGRY(""),-1)+1)="SYS^"_^MAG(2006.18,PRFIEN,0)
"RTN","MAGGTUP",43,0)
 S NODE=""
"RTN","MAGGTUP",44,0)
 F  S NODE=$O(^MAG(2006.18,PRFIEN,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",45,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=NODE_"^"_^MAG(2006.18,PRFIEN,NODE)
"RTN","MAGGTUP",46,0)
 Q
"RTN","MAGGTUP",47,0)
MERGE(PRFIEN) ; Merge default settings into User Prefs returned.
"RTN","MAGGTUP",48,0)
 ; This will assure the User Prefs returned have values for New fields.
"RTN","MAGGTUP",49,0)
 ; PRFIEN = IEN in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",50,0)
 N NODE,DARR,MN,YN
"RTN","MAGGTUP",51,0)
 D DFLTARR(.DARR)
"RTN","MAGGTUP",52,0)
 S NODE="" F  S NODE=$O(DARR($J,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",53,0)
 . S YN=DARR($J,NODE)
"RTN","MAGGTUP",54,0)
 . S MN=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",55,0)
 . F J=1:1:$L(YN,"^") I ($P(YN,"^",J)'=""),($P(MN,"^",J)="") S $P(MN,"^",J)=$P(YN,"^",J)
"RTN","MAGGTUP",56,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=MN
"RTN","MAGGTUP",57,0)
 ;
"RTN","MAGGTUP",58,0)
 Q
"RTN","MAGGTUP",59,0)
SAVE(MAGRY,DATA) ;RPC [MAGGUPREFSAVE] Call to save User Preferences
"RTN","MAGGTUP",60,0)
 ;
"RTN","MAGGTUP",61,0)
 S MAGRY="0^Error: Saving user preferences."
"RTN","MAGGTUP",62,0)
 N X,Y,NODE,PRFIEN,J
"RTN","MAGGTUP",63,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTUP",64,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,"")) I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",65,0)
 S NODE="" F  S NODE=$O(DATA(NODE)) Q:NODE=""  D
"RTN","MAGGTUP",66,0)
 . S X=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",67,0)
 . S Y=DATA(NODE)
"RTN","MAGGTUP",68,0)
 . F J=1:1:$L(Y,"^") I $L($P(Y,"^",J)) S $P(X,"^",J)=$P(Y,"^",J)
"RTN","MAGGTUP",69,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=X
"RTN","MAGGTUP",70,0)
 S MAGRY="1^User Preferences saved."
"RTN","MAGGTUP",71,0)
 Q
"RTN","MAGGTUP",72,0)
NEWUSER(USER) ;Returns IEN of New entry in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",73,0)
 K DD,DO
"RTN","MAGGTUP",74,0)
 S X=$E($$GET1^DIQ(200,USER_",",.01),1,15)_" (SETTING 1)"
"RTN","MAGGTUP",75,0)
 S DIC="^MAG(2006.18,",DIC(0)="L"
"RTN","MAGGTUP",76,0)
 S DIC("DR")="1////"_USER_";2////12;3////12;" D FILE^DICN
"RTN","MAGGTUP",77,0)
 I Y=-1 Q Y
"RTN","MAGGTUP",78,0)
 D DEFAULT(+Y)
"RTN","MAGGTUP",79,0)
 Q +Y
"RTN","MAGGTUP",80,0)
DEFAULT(NEWPREF) ;Setup a new IMAGING USER PREFERENCES entry, with System defaults.
"RTN","MAGGTUP",81,0)
 ;    NEWPREF = IEN in IMAGING USER PREFERENCES File
"RTN","MAGGTUP",82,0)
 N DFTPREF,N0,DFTSET
"RTN","MAGGTUP",83,0)
 S DFTPREF=+$$GET1^DIQ(2006.1,$$PLACE^MAGBAPI(DUZ(2)),100,"I") ; DBI - SEB 9/20/2002
"RTN","MAGGTUP",84,0)
 I DFTPREF,$D(^MAG(2006.18,DFTPREF)) D DEFUSER(NEWPREF,DFTPREF) Q
"RTN","MAGGTUP",85,0)
 ;    save the User name, Setting Name 
"RTN","MAGGTUP",86,0)
 S N0=$P(^MAG(2006.18,NEWPREF,0),U,1,4)
"RTN","MAGGTUP",87,0)
 D DFLTARR(.DFTSET)
"RTN","MAGGTUP",88,0)
 M ^MAG(2006.18,NEWPREF)=DFTSET($J)
"RTN","MAGGTUP",89,0)
 ;    reset User name, Setting name.
"RTN","MAGGTUP",90,0)
 S $P(^MAG(2006.18,NEWPREF,0),U,1,4)=N0
"RTN","MAGGTUP",91,0)
 Q
"RTN","MAGGTUP",92,0)
DEFUSER(NEWPREF,DFTPREF) ;Merge New User preference with the Default User as defined
"RTN","MAGGTUP",93,0)
 ; in the Imaging Site Parameters file
"RTN","MAGGTUP",94,0)
 ;    NEWPREF  =  new IMAGING USER PREFERENCE (IEN)
"RTN","MAGGTUP",95,0)
 ;    DFLTPREF =  DEFAULT USER PREFERENCE in the IMAGING SITE PARAMETERS File
"RTN","MAGGTUP",96,0)
 ; 
"RTN","MAGGTUP",97,0)
 N X0
"RTN","MAGGTUP",98,0)
 S X0=$P(^MAG(2006.18,NEWPREF,0),"^",1,4)
"RTN","MAGGTUP",99,0)
 M ^MAG(2006.18,NEWPREF)=^MAG(2006.18,DFTPREF)
"RTN","MAGGTUP",100,0)
 S $P(^MAG(2006.18,NEWPREF,0),"^",1,4)=X0
"RTN","MAGGTUP",101,0)
 ;    remove default user's default Filter from new user's preferences.
"RTN","MAGGTUP",102,0)
 S $P(^MAG(2006.18,NEWPREF,"LISTWIN1"),"^",3)=""
"RTN","MAGGTUP",103,0)
 Q
"RTN","MAGGTUP",104,0)
DFLTARR(ARR) ; Return an Array of All Default settings
"RTN","MAGGTUP",105,0)
 K ARR($J)
"RTN","MAGGTUP",106,0)
 S ARR($J,0)="^^^^0^1^1^"
"RTN","MAGGTUP",107,0)
 S ARR($J,"DICOMWIN")="2^320^292^724^487"
"RTN","MAGGTUP",108,0)
 S ARR($J,"IMAGEGRID")="2^487^2^786^426^1^35,73,67,34,110,46,69,96,76,79,25,0,0^0"
"RTN","MAGGTUP",109,0)
 S ARR($J,"REPORT")="2^2^333^722^437^Courier^^10"
"RTN","MAGGTUP",110,0)
 S ARR($J,"RADLISTWIN")="2^487^10^433^172^0"
"RTN","MAGGTUP",111,0)
 S ARR($J,"MAIN")="2^1^1^487^172^1"
"RTN","MAGGTUP",112,0)
 S ARR($J,"ABS")="2^1^160^486^326^105^60^1^1^2^24^2^1^0"
"RTN","MAGGTUP",113,0)
 S ARR($J,"FULL")="2^310^282^714^487^674^447^^1^1^4^1^0^1"
"RTN","MAGGTUP",114,0)
 S ARR($J,"GROUP")="2^24^231^427^457^110^70^^1^2^24^2^1^0"
"RTN","MAGGTUP",115,0)
 S ARR($J,"DOC")="2^298^24^729^429^0^0^3^1^2^4^2^0"
"RTN","MAGGTUP",116,0)
 S ARR($J,"CAPCONFIG")="1^1^1^0^0^0^0^1^0^1^0^0^1^1^0^0^1^1^1^1^1^1^200^400^300^100^500^0^0^1^"
"RTN","MAGGTUP",117,0)
 S ARR($J,"APPPREFS")="0^7^7^10"
"RTN","MAGGTUP",118,0)
 S ARR($J,"LISTWIN1")="1^1^^1^1"
"RTN","MAGGTUP",119,0)
 Q
"RTN","MAGIPO48")
0^7^B26793440
"RTN","MAGIPO48",1,0)
MAGIPO48 ;Pre and Post init routine for Imaging Version 3.0.48
"RTN","MAGIPO48",2,0)
 ;;3.0;IMAGING;**48**;Jan 11, 2005
"RTN","MAGIPO48",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPO48",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIPO48",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIPO48",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIPO48",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIPO48",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIPO48",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIPO48",10,0)
 ;; |                                                               |
"RTN","MAGIPO48",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIPO48",12,0)
 ;; | a medical device.  As such, it may not be changed             |
"RTN","MAGIPO48",13,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGIPO48",14,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGIPO48",15,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGIPO48",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPO48",17,0)
 ;;
"RTN","MAGIPO48",18,0)
 Q
"RTN","MAGIPO48",19,0)
PRE ; Remove partial DD definitions so that new definition can be laid down cleanly
"RTN","MAGIPO48",20,0)
 ;
"RTN","MAGIPO48",21,0)
 ; Image File         Origin Field
"RTN","MAGIPO48",22,0)
 S DIK="^DD(2005,",DA=45,DA(1)=2005 D ^DIK
"RTN","MAGIPO48",23,0)
 ; Image List Filters    Package Field
"RTN","MAGIPO48",24,0)
 S DIK="^DD(2005.87,",DA=1,DA(1)=2005.87 D ^DIK
"RTN","MAGIPO48",25,0)
 ; Imaging Site Parameters File    Purge-Retention Days Full File
"RTN","MAGIPO48",26,0)
 S DIK="^DD(2006.1,",DA=8,DA(1)=2006.1 D ^DIK
"RTN","MAGIPO48",27,0)
 ; Imaging Site Parameters File    Scheduled Purge Time
"RTN","MAGIPO48",28,0)
 S DIK="^DD(2006.1,",DA=64,DA(1)=2006.1 D ^DIK
"RTN","MAGIPO48",29,0)
 ; Imaging Site Parameters File    GCC EXPORT LOC
"RTN","MAGIPO48",30,0)
 S DIK="^DD(2006.1,",DA=.07,DA(1)=2006.1 D ^DIK
"RTN","MAGIPO48",31,0)
 ; Erase Imaging Site Parameters Field 126 to erase the Mixup
"RTN","MAGIPO48",32,0)
 ; KIDS Adds back : 126 LAST ROUTING ACTIVITY
"RTN","MAGIPO48",33,0)
 ;                              130 VERSION CHECKING.
"RTN","MAGIPO48",34,0)
 ;                              200 FUTURE USE
"RTN","MAGIPO48",35,0)
 S DIK="^DD(2006.1,",DA=126,DA(1)=2006.1 D ^DIK
"RTN","MAGIPO48",36,0)
 Q
"RTN","MAGIPO48",37,0)
POST ;
"RTN","MAGIPO48",38,0)
 D INACTIV
"RTN","MAGIPO48",39,0)
 D INDEX
"RTN","MAGIPO48",40,0)
 D UPREF
"RTN","MAGIPO48",41,0)
 D POST2
"RTN","MAGIPO48",42,0)
 Q
"RTN","MAGIPO48",43,0)
INACTIV ;Change STATUS for the OUTSIDE MEDICAL RECORDS Entries 
"RTN","MAGIPO48",44,0)
 ; in IMAGE INDEX FOR TYPES file to  Status = Inactive
"RTN","MAGIPO48",45,0)
 N J
"RTN","MAGIPO48",46,0)
 S J=$O(^MAG(2005.83,"B","OUTSIDE MEDICAL RECORD (DOD)",""))
"RTN","MAGIPO48",47,0)
 I J S $P(^MAG(2005.83,J,0),"^",3)="I"
"RTN","MAGIPO48",48,0)
 S J=$O(^MAG(2005.83,"B","OUTSIDE MEDICAL RECORD (FEE)",""))
"RTN","MAGIPO48",49,0)
 I J S $P(^MAG(2005.83,J,0),"^",3)="I"
"RTN","MAGIPO48",50,0)
 Q
"RTN","MAGIPO48",51,0)
INDEX ; Re-index the Cross references that were killed in Patch 8 Post init
"RTN","MAGIPO48",52,0)
 K ^MAG(2005.2,"E") S DIK="^MAG(2005.2,",DIK(1)="6^E" D ENALL^DIK
"RTN","MAGIPO48",53,0)
 K ^MAG(2006.81,"C") S DIK="^MAG(2006.81,",DIK(1)=".04^C" D ENALL^DIK
"RTN","MAGIPO48",54,0)
 K DIK
"RTN","MAGIPO48",55,0)
 Q
"RTN","MAGIPO48",56,0)
UPREF ;Set default for field ('View Remote Abs') for existing users
"RTN","MAGIPO48",57,0)
 ; the field isn't new, but may have left over value from old DD definition.
"RTN","MAGIPO48",58,0)
 N I S I=0 F  S I=$O(^MAG(2006.18,I)) Q:'I  S $P(^(I,0),"^",8,99)="0^"
"RTN","MAGIPO48",59,0)
 Q
"RTN","MAGIPO48",60,0)
POST2 ;
"RTN","MAGIPO48",61,0)
 N INSTALL,IDATE,ACTIONS,NET
"RTN","MAGIPO48",62,0)
 D FIND^DIC(9.7,"","","MX","MAG*3.0*8","","","","","RESULTS","ERR")
"RTN","MAGIPO48",63,0)
 I '$G(ERR) S INSTALL=$G(RESULTS("DILIST",2,1))
"RTN","MAGIPO48",64,0)
 I $D(INSTALL),INSTALL D
"RTN","MAGIPO48",65,0)
 . S IDATE=$$GET1^DIQ(9.7,INSTALL_",",17,"I")
"RTN","MAGIPO48",66,0)
 . Q:'IDATE
"RTN","MAGIPO48",67,0)
 . Q:'$$GIA(.ACTIONS)
"RTN","MAGIPO48",68,0)
 . Q:'$$NET(.NET)
"RTN","MAGIPO48",69,0)
 . D REQ(IDATE,ACTIONS,NET)
"RTN","MAGIPO48",70,0)
 . Q
"RTN","MAGIPO48",71,0)
 D REMTASK^MAGQE4
"RTN","MAGIPO48",72,0)
 D STTASK^MAGQE4
"RTN","MAGIPO48",73,0)
 D POSTI^MAGQBUT
"RTN","MAGIPO48",74,0)
 D INS(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGIPO48",75,0)
 Q
"RTN","MAGIPO48",76,0)
REQ(DATE,ACT,NET) ; Requeue GCCs that where created between now and the Patch 8 install
"RTN","MAGIPO48",77,0)
 ; that where sent to a local rather than a GCC Network Location
"RTN","MAGIPO48",78,0)
 N X1,X2,Q,ISLOC,ISHEC
"RTN","MAGIPO48",79,0)
 S X1=" "
"RTN","MAGIPO48",80,0)
 F  S X1=$O(^MAG(2005,X1),-1) Q:'X1  Q:$P($G(^MAG(2005,X1,2)),U)<DATE  D
"RTN","MAGIPO48",81,0)
 . Q:(ACT'[(U_$P($G(^MAG(2005,X1,40)),U,3)_U))
"RTN","MAGIPO48",82,0)
 . S X2=0,Q=0,ISLOC=0,ISHEC=0
"RTN","MAGIPO48",83,0)
 . F  S X2=$O(^MAG(2005,X1,5,X2)) Q:'X2  D  Q:Q
"RTN","MAGIPO48",84,0)
 . . I NET'[(U_$P($G(^MAG(2005,X1,5,X2,0)),U)_U) S ISLOC=1
"RTN","MAGIPO48",85,0)
 . . E  S ISHEC=1
"RTN","MAGIPO48",86,0)
 . . Q
"RTN","MAGIPO48",87,0)
 . ; Only ReQueue if there ARE Local Entries and ARE NOT any HEC entries.
"RTN","MAGIPO48",88,0)
 . ;  in the EXPORT LOCATION multiple (5 node)
"RTN","MAGIPO48",89,0)
 . I ISLOC,'ISHEC S Q=$$GCC^MAGBAPI(X1,$$PLACE^MAGBAPI(+$G(DUZ(2))))
"RTN","MAGIPO48",90,0)
 . Q
"RTN","MAGIPO48",91,0)
 Q
"RTN","MAGIPO48",92,0)
NET(NET) ; List of GCC Network Locations
"RTN","MAGIPO48",93,0)
 N X1
"RTN","MAGIPO48",94,0)
 S X1=0,NET=U
"RTN","MAGIPO48",95,0)
 F  S X1=$O(^MAG(2005.2,X1)) Q:'X1  D
"RTN","MAGIPO48",96,0)
 . Q:$P($G(^MAG(2005.2,X1,0)),U,7)'="GCC"
"RTN","MAGIPO48",97,0)
 . S NET=NET_X1_U
"RTN","MAGIPO48",98,0)
 . Q
"RTN","MAGIPO48",99,0)
 Q $S($L(NET)>1:1,1:0)
"RTN","MAGIPO48",100,0)
GIA(OUT) ;LIST OF ACTIONS that require exporting
"RTN","MAGIPO48",101,0)
 N X1,X2
"RTN","MAGIPO48",102,0)
 S OUT=U
"RTN","MAGIPO48",103,0)
 S X1=0 F  S X1=$O(^MAG(2005.86,X1)) Q:'X1  D
"RTN","MAGIPO48",104,0)
 . ;Q:'$P($G(^MAG(2005.86,X1,0)),U,2)
"RTN","MAGIPO48",105,0)
 . S X2=0 F  S X2=$O(^MAG(2005.86,X1,2,X2)) Q:'X2  D
"RTN","MAGIPO48",106,0)
 . . S OUT=OUT_$G(^MAG(2005.86,X1,2,X2,0))_U
"RTN","MAGIPO48",107,0)
 . . Q
"RTN","MAGIPO48",108,0)
 . Q
"RTN","MAGIPO48",109,0)
 Q $S($L(OUT)>1:1,1:0)
"RTN","MAGIPO48",110,0)
 ;
"RTN","MAGIPO48",111,0)
INS(XP,DUZ,DATE,IDA) ;
"RTN","MAGIPO48",112,0)
 N CT,CNT,COM,D,D0,D1,D2,DDATE,DG,DIC,DICR,DIW,MAGMSG,ST,XMID,XMY,XMSUB,XMERR
"RTN","MAGIPO48",113,0)
 D GETENV^%ZOSV
"RTN","MAGIPO48",114,0)
 S CNT=0
"RTN","MAGIPO48",115,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGIPO48",116,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGIPO48",117,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XP
"RTN","MAGIPO48",118,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XP)
"RTN","MAGIPO48",119,0)
 S ST=$$GET1^DIQ(9.7,IDA,11,"I")
"RTN","MAGIPO48",120,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGIPO48",121,0)
 S CT=$$GET1^DIQ(9.7,IDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT
"RTN","MAGIPO48",122,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGIPO48",123,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGIPO48",124,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGIPO48",125,0)
 S COM=$$GET1^DIQ(9.7,IDA,6,"I")
"RTN","MAGIPO48",126,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_COM
"RTN","MAGIPO48",127,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_DATE
"RTN","MAGIPO48",128,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$$GET1^DIQ(9.7,IDA,9,"E")
"RTN","MAGIPO48",129,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$$GET1^DIQ(9.7,IDA,.01,"E")
"RTN","MAGIPO48",130,0)
 S DDATE=$$GET1^DIQ(9.7,IDA,51,"I")
"RTN","MAGIPO48",131,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGIPO48",132,0)
 S XMSUB=XP_" INSTALLATION"
"RTN","MAGIPO48",133,0)
 S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGIPO48",134,0)
 S XMY(XMID)=""
"RTN","MAGIPO48",135,0)
 S XMY("G.MAG SERVER")=""
"RTN","MAGIPO48",136,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGIPO48",137,0)
 S XMSUB=$E(XMSUB,1,63)
"RTN","MAGIPO48",138,0)
 D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ,)
"RTN","MAGIPO48",139,0)
 I $G(XMERR) M XMERR=^TMP("XMERR",$J) S $EC=",U13-Cannot send MailMan message,"
"RTN","MAGIPO48",140,0)
 Q
"RTN","MAGQBGCC")
0^16^B10749767
"RTN","MAGQBGCC",1,0)
MAGQBGCC ;WOIFO/RMP - Export an image file to a remote location  [ 06/20/2001 08:57 ]
"RTN","MAGQBGCC",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGQBGCC",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBGCC",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBGCC",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBGCC",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBGCC",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBGCC",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBGCC",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBGCC",10,0)
 ;; |                                                               |
"RTN","MAGQBGCC",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBGCC",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBGCC",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBGCC",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBGCC",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBGCC",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBGCC",17,0)
 ;;
"RTN","MAGQBGCC",18,0)
ENTRY(RESULT,QPTR) ; entry point from ^MAGQBTM
"RTN","MAGQBGCC",19,0)
 ; RESULT=STATUS^IMAGE PTR^FROM FILE^TO FILE^QUEUE PTR^REMOTELOC PTR^QSN
"RTN","MAGQBGCC",20,0)
 ; QSN=QUEUE SEQUENCE NUMBER
"RTN","MAGQBGCC",21,0)
 N CWL,IMGPTR,L,FILE,MAGREF,TOFILE,QNODE,QSN,ZNODE,SOURCE,FTYPE,MSG,EXT,ALTDEST,ALTTYPE
"RTN","MAGQBGCC",22,0)
 S QNODE=$G(^MAGQUEUE(2006.03,QPTR,0)),RESULT="1"
"RTN","MAGQBGCC",23,0)
 S IMGPTR=$P(QNODE,U,7),QSN=+$P(QNODE,U,9),ALTDEST=+$P(QNODE,U,10),ALTTYPE=$P(QNODE,U,11)
"RTN","MAGQBGCC",24,0)
 S ZNODE=$G(^MAG(2005,IMGPTR,0))
"RTN","MAGQBGCC",25,0)
 I ZNODE="" D  Q  ;RESULT ;!!!!
"RTN","MAGQBGCC",26,0)
 . S RESULT="-101^"_QPTR_"^MAG Global Node #"_IMGPTR_" not present"
"RTN","MAGQBGCC",27,0)
 S FILE=$P(ZNODE,U,2)
"RTN","MAGQBGCC",28,0)
 I FILE="" D  Q  ;RESULT ;!!!
"RTN","MAGQBGCC",29,0)
 . I +$P($G(^MAG(2005,IMGPTR,1,0)),U,4)>0 D
"RTN","MAGQBGCC",30,0)
 . . S MSG="Image group parent"
"RTN","MAGQBGCC",31,0)
 . E  S MSG="Does not have an image file specified"
"RTN","MAGQBGCC",32,0)
 . S RESULT="-5"_U_QPTR_U_MSG
"RTN","MAGQBGCC",33,0)
 S FTYPE=$S(ALTTYPE="":"FULL",1:$$FTYPE^MAGQBPRG(ALTTYPE))
"RTN","MAGQBGCC",34,0)
 D @(FTYPE_"(.RESULT,.MAGREF,IMGPTR)")
"RTN","MAGQBGCC",35,0)
 Q:$P(RESULT,"^")<0
"RTN","MAGQBGCC",36,0)
 S SOURCE=$$WPATH(FILE,MAGREF)_FILE
"RTN","MAGQBGCC",37,0)
 S L=+$P(QNODE,"^",10)
"RTN","MAGQBGCC",38,0)
 S CWL=$S(L>0:L,1:$$CEL())
"RTN","MAGQBGCC",39,0)
 I $P(^MAG(2005.2,CWL,0),"^",6)'="1" D  Q
"RTN","MAGQBGCC",40,0)
 . S RESULT="-4"_U_IMGPTR_U_"Export Network Location is set Off-Line"
"RTN","MAGQBGCC",41,0)
 S TOFILE=$$WPATH(FILE,CWL)_FILE
"RTN","MAGQBGCC",42,0)
 S RESULT="1^"_IMGPTR_U_SOURCE_U_TOFILE_U_QPTR_U_CWL_U_QSN_U_$P(QNODE,U,11)
"RTN","MAGQBGCC",43,0)
 Q
"RTN","MAGQBGCC",44,0)
CEL() ; Current Export Pointer
"RTN","MAGQBGCC",45,0)
 Q $S($P(^MAG(2006.1,$$PLACE^MAGBAPI(+$G(DUZ(2))),0),"^",7)>1:$P(^(0),"^",7),1:1)
"RTN","MAGQBGCC",46,0)
WPATH(FILE,LOC) ; Write path of location (CWP)
"RTN","MAGQBGCC",47,0)
 Q $P(^MAG(2005.2,LOC,0),"^",2)_$$DIRHASH^MAGFILEB(FILE,LOC)
"RTN","MAGQBGCC",48,0)
FULL(RESULT,MAGREF,MAGIFN) ; copy a full-size image
"RTN","MAGQBGCC",49,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",3)
"RTN","MAGQBGCC",50,0)
 I MAGREF'?1N.N S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",5)
"RTN","MAGQBGCC",51,0)
 S:MAGREF'?1N.N RESULT="-3"_U_QPTR_U_"File not on-line"
"RTN","MAGQBGCC",52,0)
 Q 
"RTN","MAGQBGCC",53,0)
 ;
"RTN","MAGQBGCC",54,0)
ABS(RESULT,MAGREF,MAGIFN) ; copy an image abstract
"RTN","MAGQBGCC",55,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",4)
"RTN","MAGQBGCC",56,0)
 I MAGREF'?1N.N S MAGREF=$P(^MAG(2005,MAGIFN,0),"^",5)
"RTN","MAGQBGCC",57,0)
 S:MAGREF'?1N.N RESULT="-3"_U_QPTR_U_"Abstract File not on-line"
"RTN","MAGQBGCC",58,0)
 Q 
"RTN","MAGQBGCC",59,0)
 ;
"RTN","MAGQBGCC",60,0)
BIG(RESULT,MAGREF,MAGIFN) ; copy a big image
"RTN","MAGQBGCC",61,0)
 S MAGREF=$P(^MAG(2005,MAGIFN,"FBIG"),"^",2)
"RTN","MAGQBGCC",62,0)
 I MAGREF'?1N.N S MAGREF=$P(^MAG(2005,MAGIFN,"FBIG"),"^")
"RTN","MAGQBGCC",63,0)
 S:MAGREF'?1N.N RESULT="-3"_U_QPTR_U_"Big File not on-line"
"RTN","MAGQBGCC",64,0)
 Q
"RTN","MAGQBGCC",65,0)
 ;
"RTN","MAGQBUT")
0^10^B68034219
"RTN","MAGQBUT",1,0)
MAGQBUT ;WOIFO/RMP - Imaging Background Processor Utilities [ 03/25/2001 11:20 ]
"RTN","MAGQBUT",2,0)
 ;;3.0;IMAGING;**7,8,48**;Jan 11, 2005
"RTN","MAGQBUT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT",10,0)
 ;; |                                                               |
"RTN","MAGQBUT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT",17,0)
 ;;
"RTN","MAGQBUT",18,0)
FTYPE(RESULT) ;
"RTN","MAGQBUT",19,0)
 ; RPC[MAGQ FTYPE]
"RTN","MAGQBUT",20,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT",21,0)
 N MAX,INDX,PLACE
"RTN","MAGQBUT",22,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",23,0)
 S U="^",MAX=$P(^MAG(2006.1,PLACE,2,0),U,4),INDX=0
"RTN","MAGQBUT",24,0)
 Q:+MAX<1
"RTN","MAGQBUT",25,0)
 F  S INDX=$O(^MAG(2006.1,PLACE,2,INDX)) Q:INDX'?1N.N  D  Q:INDX=MAX
"RTN","MAGQBUT",26,0)
 . S RESULT(INDX-1)=$G(^MAG(2006.1,PLACE,2,INDX,0))
"RTN","MAGQBUT",27,0)
 Q
"RTN","MAGQBUT",28,0)
CHGSERV(RESULT) ;
"RTN","MAGQBUT",29,0)
 ; RPC[MAGQ FS CHNGE]
"RTN","MAGQBUT",30,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT",31,0)
 N SPACE,DATA,IEN,SIZE,CWL,MIN,CNT,TNODE,TINT,NOW,TLTIME,TOD,PLACE,TS,AUTON
"RTN","MAGQBUT",32,0)
 S U="^",(INDX,SPACE,SIZE,CNT)=0,(RESULT,IEN)=""
"RTN","MAGQBUT",33,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",34,0)
 S MIN=$$SPARM
"RTN","MAGQBUT",35,0)
 S CWL=$$CWL^MAGBAPI(PLACE)
"RTN","MAGQBUT",36,0)
 S DATA=$S(CWL?1N.N:$G(^MAG(2005.2,CWL,0)),1:0)
"RTN","MAGQBUT",37,0)
 ;Check for scheduled purge
"RTN","MAGQBUT",38,0)
 S AUTON=$G(^MAG(2006.1,PLACE,5))
"RTN","MAGQBUT",39,0)
 I $P(AUTON,U,3) D
"RTN","MAGQBUT",40,0)
 . N T1,T2
"RTN","MAGQBUT",41,0)
 . S T1="0000",T2=$P(AUTON,U,5),T1=$E(T1,1,($L(T1)-$L(T2)))_T2
"RTN","MAGQBUT",42,0)
 . I ($$FMADD^XLFDT($$NOW^XLFDT,-$P(AUTON,U,4),"","",""))>($P(AUTON,U,6)_"."_T1) D
"RTN","MAGQBUT",43,0)
 . . S $P(RESULT,U,4)="PURGE"
"RTN","MAGQBUT",44,0)
 . . S $P(^MAG(2006.1,PLACE,5),U,6)=$P($$NOW^XLFDT,".")
"RTN","MAGQBUT",45,0)
 . . Q
"RTN","MAGQBUT",46,0)
 . Q
"RTN","MAGQBUT",47,0)
 I $P($G(^MAG(2006.1,PLACE,1)),U,10) D  Q  ;Cache balancing off
"RTN","MAGQBUT",48,0)
 . I $$MAXSP(CWL,SPACE,SIZE,DATA,MIN) S $P(RESULT,U)=1 Q
"RTN","MAGQBUT",49,0)
 . D FSP(MIN,.SPACE,.SIZE,.IEN,.TS)
"RTN","MAGQBUT",50,0)
 . I IEN D SCWL(IEN) S $P(RESULT,U)=1 ;Advance current write location
"RTN","MAGQBUT",51,0)
 . E  D
"RTN","MAGQBUT",52,0)
 . . S $P(RESULT,U)=0
"RTN","MAGQBUT",53,0)
 . . S $P(RESULT,U,2,3)=$P(^MAG(2005.2,$P(^MAG(2006.1,PLACE,0),U,3),0),U,1,2)
"RTN","MAGQBUT",54,0)
 . . S:$P($G(^MAG(2006.1,PLACE,5)),U) $P(RESULT,U,4)="PURGE"
"RTN","MAGQBUT",55,0)
 . . D TMESS
"RTN","MAGQBUT",56,0)
 . . Q
"RTN","MAGQBUT",57,0)
 . Q
"RTN","MAGQBUT",58,0)
 D FSP(MIN,.SPACE,.SIZE,.IEN,.TS)
"RTN","MAGQBUT",59,0)
 ; SET THE CURRENT WRITE LOCATION = IEN HERE
"RTN","MAGQBUT",60,0)
 I IEN D SCWL(IEN)  ;NEED TO PARAMETER DRIVE THIS PROCESS !!!!!
"RTN","MAGQBUT",61,0)
 I SIZE>0,(((SPACE/SIZE)*100)>MIN) S $P(RESULT,U)=1 Q
"RTN","MAGQBUT",62,0)
 S $P(RESULT,U)=0
"RTN","MAGQBUT",63,0)
 S $P(RESULT,U,2,3)=$P(^MAG(2005.2,$P(^MAG(2006.1,PLACE,0),U,3),0),U,1,2)
"RTN","MAGQBUT",64,0)
 S:$P($G(^MAG(2006.1,PLACE,5)),U) $P(RESULT,U,4)="PURGE"
"RTN","MAGQBUT",65,0)
 D TMESS
"RTN","MAGQBUT",66,0)
 Q
"RTN","MAGQBUT",67,0)
TMESS ;Trigger a message
"RTN","MAGQBUT",68,0)
 N TN S TN=^MAG(2006.1,PLACE,3)
"RTN","MAGQBUT",69,0)
 Q:$$FMADD^XLFDT($P(TN,"^",11),"",$P(TN,"^",7),"","")>$$NOW^XLFDT
"RTN","MAGQBUT",70,0)
 D ICCL^MAGQBUT1(CNT_U_TS_U_SPACE_U_$P($G(^MAG(2006.1,PLACE,5)),U),$P(TN,"^",7)_" hours.")
"RTN","MAGQBUT",71,0)
 Q
"RTN","MAGQBUT",72,0)
TPURGE ; 
"RTN","MAGQBUT",73,0)
 S $P(RESULT,U,2,3)=$P(^MAG(2005.2,$P(^MAG(2006.1,PLACE,0),U,3),0),1,2)
"RTN","MAGQBUT",74,0)
 S TNODE=^MAG(2006.1,PLACE,3)
"RTN","MAGQBUT",75,0)
 S TINT=$P(TNODE,"^",8) I "^W^D^"[("^"_TINT_"^") D  ;CONDITIONAL PURGE
"RTN","MAGQBUT",76,0)
 . S NOW=$$NOW^XLFDT,TOD=$P(TNODE,"^",9)
"RTN","MAGQBUT",77,0)
 . Q:NOW<$$FMADD^XLFDT($P(NOW,"."),"",TOD,"","")
"RTN","MAGQBUT",78,0)
 . S TLTIME=$P(TNODE,"^",10)
"RTN","MAGQBUT",79,0)
 . I NOW>$$FMADD^XLFDT(TLTIME,$S(TINT="D":1,TINT="W":7),"","","") D
"RTN","MAGQBUT",80,0)
 . . S $P(RESULT,"^",4)="PURGE"
"RTN","MAGQBUT",81,0)
 Q
"RTN","MAGQBUT",82,0)
MAXSP(IEN,FS,SZ,NODE,MIN) ;
"RTN","MAGQBUT",83,0)
 N SPACE,SIZE
"RTN","MAGQBUT",84,0)
 S SPACE=+$P(NODE,U,5),SIZE=+$P(NODE,U,3)
"RTN","MAGQBUT",85,0)
 I SIZE>0,(((SPACE/SIZE)*100)>MIN),SPACE>FS D  Q 1
"RTN","MAGQBUT",86,0)
 . S FS=SPACE,SZ=SIZE
"RTN","MAGQBUT",87,0)
 Q 0
"RTN","MAGQBUT",88,0)
HFIND(SHARE,IEN) ;HASHED SHARE AT THE SAME LOCATION
"RTN","MAGQBUT",89,0)
 N INDEX,NODE,RESULT
"RTN","MAGQBUT",90,0)
 S INDEX=0,RESULT=""
"RTN","MAGQBUT",91,0)
 F  S INDEX=$O(^MAG(2005.2,"AC",SHARE,INDEX)) Q:INDEX'?1N.N  D
"RTN","MAGQBUT",92,0)
 . Q:INDEX=IEN
"RTN","MAGQBUT",93,0)
 . I $P(^MAG(2005.2,INDEX,0),"^",8)="Y" S RESULT=1
"RTN","MAGQBUT",94,0)
 Q RESULT
"RTN","MAGQBUT",95,0)
SPARM() ;Site Parameter for PERCENT server space to be held in reserve
"RTN","MAGQBUT",96,0)
 N VALUE
"RTN","MAGQBUT",97,0)
 S VALUE=$P($G(^MAG(2006.1,$$PLACE^MAGBAPI(+$G(DUZ(2))),1)),U,8)
"RTN","MAGQBUT",98,0)
 Q $S(VALUE>0:VALUE,1:5)
"RTN","MAGQBUT",99,0)
SCWL(IEN) ;
"RTN","MAGQBUT",100,0)
 S ^MAG(2006.1,PLACE,"ARITE")=IEN,$P(^MAG(2006.1,PLACE,0),U,3)=IEN
"RTN","MAGQBUT",101,0)
 S ^MAG(2006.1,PLACE,"APXWRITE")=IEN,$P(^MAG(2006.1,PLACE,"PACS"),U,3)=IEN
"RTN","MAGQBUT",102,0)
 Q
"RTN","MAGQBUT",103,0)
FSP(MIN,SPACE,SIZE,IEN,TOTAL) ; Find Space
"RTN","MAGQBUT",104,0)
 N INDX,DATA S (TOTAL,INDX)=0
"RTN","MAGQBUT",105,0)
 F  S INDX=$O(^MAG(2005.2,INDX)) Q:INDX'?1N.N  D
"RTN","MAGQBUT",106,0)
 . S DATA=$G(^MAG(2005.2,INDX,0))
"RTN","MAGQBUT",107,0)
 . Q:$P(DATA,U,6,7)'["1^MAG"
"RTN","MAGQBUT",108,0)
 . Q:$P(DATA,U,9)="1"  ;ROUTING SHARE
"RTN","MAGQBUT",109,0)
 . I $P(DATA,U,8)'="Y",$$HFIND($P(DATA,"^",2),INDX) Q
"RTN","MAGQBUT",110,0)
 . Q:$P(DATA,U,2)[":"
"RTN","MAGQBUT",111,0)
 . Q:$E($P(DATA,U,2),1,2)'="\\"
"RTN","MAGQBUT",112,0)
 . S TOTAL=TOTAL+(+$P(DATA,U,5))
"RTN","MAGQBUT",113,0)
 . S CNT=CNT+1
"RTN","MAGQBUT",114,0)
 . I $$MAXSP(INDX,.SPACE,.SIZE,DATA,MIN) S IEN=INDX
"RTN","MAGQBUT",115,0)
 Q
"RTN","MAGQBUT",116,0)
BUTERR ;Background Processor Utility Error trap
"RTN","MAGQBUT",117,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGQBUT",118,0)
 Q
"RTN","MAGQBUT",119,0)
SLAD(RESULT) ;SITE LAST ACCESS DATE(DEFAULT TO 180)
"RTN","MAGQBUT",120,0)
 N PLACE
"RTN","MAGQBUT",121,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",122,0)
 S RESULT=$S(+$P(^MAG(2006.1,PLACE,1),"^",2):+$P(^MAG(2006.1,PLACE,1),"^",2),1:180)
"RTN","MAGQBUT",123,0)
 Q
"RTN","MAGQBUT",124,0)
DQUE(QIEN) ;
"RTN","MAGQBUT",125,0)
 N ZNODE,TYPE,MAGIEN,QREC,TREC
"RTN","MAGQBUT",126,0)
 S U="^"
"RTN","MAGQBUT",127,0)
 S ZNODE=$G(^MAGQUEUE(2006.03,QIEN,0))
"RTN","MAGQBUT",128,0)
 S TYPE=$P(ZNODE,U)
"RTN","MAGQBUT",129,0)
 I TYPE="" D DBQ(QIEN) Q
"RTN","MAGQBUT",130,0)
 S QREC=$O(^MAGQUEUE(2006.031,"B",TYPE,""))
"RTN","MAGQBUT",131,0)
 I QREC,$P($G(^MAGQUEUE(2006.031,QREC,0)),U,2)=QIEN D
"RTN","MAGQBUT",132,0)
 . S TREC=+$O(^MAGQUEUE(2006.03,"B",TYPE,QIEN),-1)  ;'DELETE LPROC YET
"RTN","MAGQBUT",133,0)
 . S $P(^MAGQUEUE(2006.031,QREC,0),U,2)=TREC
"RTN","MAGQBUT",134,0)
 . Q
"RTN","MAGQBUT",135,0)
 K ^MAGQUEUE(2006.03,"B",$P(ZNODE,U),QIEN)
"RTN","MAGQBUT",136,0)
 K ^MAGQUEUE(2006.03,QIEN,0)
"RTN","MAGQBUT",137,0)
 I $P(ZNODE,U,5)]"" D
"RTN","MAGQBUT",138,0)
 . K ^MAGQUEUE(2006.03,"C",TYPE,$E($P(ZNODE,U,5),1,30),QIEN)
"RTN","MAGQBUT",139,0)
 L +^MAGQUEUE(2006.03,0)
"RTN","MAGQBUT",140,0)
 S $P(^MAGQUEUE(2006.03,0),"^",4)=$P(^MAGQUEUE(2006.03,0),"^",4)-1
"RTN","MAGQBUT",141,0)
 L -^MAGQUEUE(2006.03,0)
"RTN","MAGQBUT",142,0)
 Q:TYPE="DELETE"
"RTN","MAGQBUT",143,0)
 S MAGIEN=$P(ZNODE,U,7)
"RTN","MAGQBUT",144,0)
 Q:MAGIEN'?1N.N
"RTN","MAGQBUT",145,0)
 I TYPE="JUKEBOX" D  Q
"RTN","MAGQBUT",146,0)
 . K ^MAGQUEUE(2006.03,"JX",MAGIEN,QIEN)
"RTN","MAGQBUT",147,0)
 I "^JBTOHD^PREFET^"[("^"_TYPE_"^") D  Q
"RTN","MAGQBUT",148,0)
 . Q:'$P(ZNODE,U,8)
"RTN","MAGQBUT",149,0)
 . K ^MAGQUEUE(2006.03,"JD",MAGIEN,$P(ZNODE,U,8),QIEN)
"RTN","MAGQBUT",150,0)
 Q
"RTN","MAGQBUT",151,0)
DQUE1(RESULT,QIEN) ;[MAGQB QUEDEL]
"RTN","MAGQBUT",152,0)
 D DQUE(QIEN)
"RTN","MAGQBUT",153,0)
 Q
"RTN","MAGQBUT",154,0)
DBQ(QIEN) ;
"RTN","MAGQBUT",155,0)
 N INDX
"RTN","MAGQBUT",156,0)
 F INDX="DELETE","ABSTRACT","JUKEBOX","JBTOHD","PREFET","IMPORT" D
"RTN","MAGQBUT",157,0)
 . K ^MAGQUEUE(2006.03,"B",INDX,QIEN)
"RTN","MAGQBUT",158,0)
 K ^MAGQUEUE(2006.03,QIEN,0)
"RTN","MAGQBUT",159,0)
 Q
"RTN","MAGQBUT",160,0)
JBQUE(RESULT,QIEN) ; RPC[MAGQBP JBQUE]
"RTN","MAGQBUT",161,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT",162,0)
 S RESULT=$$JUKEBOX^MAGBAPI(QIEN)
"RTN","MAGQBUT",163,0)
 Q
"RTN","MAGQBUT",164,0)
POSTI ;
"RTN","MAGQBUT",165,0)
 D INI^MAGUSIT
"RTN","MAGQBUT",166,0)
 N DIC,X,DA,Y,NODE1,NODE3,PLACE
"RTN","MAGQBUT",167,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGQBUT",168,0)
 S DIC="^MAG(2006.1,"_PLACE_",2,",DIC(0)="XL",X="TXT",DLAYGO="2006.112"
"RTN","MAGQBUT",169,0)
 S DA(1)=PLACE,DIC("P")="2006.112"
"RTN","MAGQBUT",170,0)
 D ^DIC
"RTN","MAGQBUT",171,0)
 ;File retention parameters defaults 45 - non abs /120 abs
"RTN","MAGQBUT",172,0)
 ;autowrite location update defaulted to ON
"RTN","MAGQBUT",173,0)
 S (DIE,DIC,DLAYGO)=2006.1,DA=PLACE,DIC(0)="XL"
"RTN","MAGQBUT",174,0)
 S NODE1=$G(^MAG(2006.1,1,1)),NODE3=$G(^MAG(2006.1,PLACE,3)),DR=""
"RTN","MAGQBUT",175,0)
 S KEYS=$G(^MAG(2006.1,PLACE,"KEYS"))
"RTN","MAGQBUT",176,0)
 S DR=$S(($P(NODE1,"^",2)'?1N.N):"8///45",1:DR)
"RTN","MAGQBUT",177,0)
 I ($P(NODE1,"^",5)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"9///45"
"RTN","MAGQBUT",178,0)
 I ($P(NODE1,"^",10)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"20///1"
"RTN","MAGQBUT",179,0)
 I ($P(NODE3,"^",1)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"21///45"
"RTN","MAGQBUT",180,0)
 I ($P(NODE3,"^",2)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"22///45"
"RTN","MAGQBUT",181,0)
 I ($P(NODE3,"^",3)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"23///120"
"RTN","MAGQBUT",182,0)
 I ($P(NODE3,"^",4)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"24///120"
"RTN","MAGQBUT",183,0)
 I ($P(NODE3,"^",5)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"102///10"
"RTN","MAGQBUT",184,0)
 I ($P(NODE3,"^",6)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"103///15"
"RTN","MAGQBUT",185,0)
 I ($P(NODE3,"^",7)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"11.5///6"
"RTN","MAGQBUT",186,0)
 S DR=DR_$S((DR["/"):";",1:"")_"11.6///D"
"RTN","MAGQBUT",187,0)
 I ($P(NODE3,"^",9)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"11.7///4"
"RTN","MAGQBUT",188,0)
 I ($P(NODE3,"^",10)'?1N.E) D
"RTN","MAGQBUT",189,0)
 . S DR=DR_$S((DR["/"):";",1:"")_"11.8///"_$$NOW^XLFDT
"RTN","MAGQBUT",190,0)
 I ($P(NODE3,"^",11)'?1N.E) D
"RTN","MAGQBUT",191,0)
 . S DR=DR_$S((DR["/"):";",1:"")_"11.9///"_$$NOW^XLFDT
"RTN","MAGQBUT",192,0)
 I ($P(KEYS,"^",2)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"121///60"
"RTN","MAGQBUT",193,0)
 I ($P(KEYS,"^",3)'?1N.N) S DR=DR_$S((DR["/"):";",1:"")_"122///90"
"RTN","MAGQBUT",194,0)
 D ^DIE
"RTN","MAGQBUT",195,0)
 ; Enable the Imaging Health Summary component
"RTN","MAGQBUT",196,0)
 I $D(^GMT(142.1,235)) D
"RTN","MAGQBUT",197,0)
 . S (DIE,DIC)=142.1,DA=235
"RTN","MAGQBUT",198,0)
 . S DR="5///@;8///@"
"RTN","MAGQBUT",199,0)
 . D ^DIE
"RTN","MAGQBUT",200,0)
 K DIE,DIC,DA,Y,X,DLAYGO
"RTN","MAGQBUT",201,0)
 ; ESTABLISH LOCAL MAIL GROUP
"RTN","MAGQBUT",202,0)
 D MMGRP^MAGQAI
"RTN","MAGQBUT",203,0)
 D SILENT^MAGDROUT
"RTN","MAGQBUT",204,0)
 Q
"RTN","MAGQBUT",205,0)
X1 ; CLEANUP OLD FAILED JUKEBOX AND JBTOHD QUEUE ENTRYS
"RTN","MAGQBUT",206,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","MAGQBUT",207,0)
 S DIR("?")="This activity removes already processed queues which precede the current queue pointer.  These queues are not necessary for file recovery.The current BP software will recover files during purge or by the verify."
"RTN","MAGQBUT",208,0)
 S DIR("A")="Do you wish to remove old processed Background Processor Queues" D
"RTN","MAGQBUT",209,0)
 . D ^DIR Q:($D(DIRUT)!(Y'="1"))
"RTN","MAGQBUT",210,0)
 . F PC="JUKEBOX","JBTOHD","PREFET","IMPORT" D FOQUE(PC)
"RTN","MAGQBUT",211,0)
 ; REINDEX FIELD 4 (COMPLETION STATUS) IN FILE 2006.03 (QUEUE)
"RTN","MAGQBUT",212,0)
 K ^MAGQUEUE(2006.03,"C")
"RTN","MAGQBUT",213,0)
 S DIK="^MAGQUEUE(2006.03,",DIK(1)="4^C"
"RTN","MAGQBUT",214,0)
 D ENALL^DIK K DIK
"RTN","MAGQBUT",215,0)
 Q
"RTN","MAGQBUT",216,0)
FOQUE(PROC) ;PASS A BP PROCESS TO DELETE OLD FAILED QUEUES
"RTN","MAGQBUT",217,0)
 N XX,JXMAX,JHMAX,QIEN
"RTN","MAGQBUT",218,0)
 S QIEN=$O(^MAGQUEUE(2006.031,"B",PROC,""))
"RTN","MAGQBUT",219,0)
 I QIEN?1N.N D
"RTN","MAGQBUT",220,0)
 . S JXMAX=$P($G(^MAGQUEUE(2006.031,QIEN,0)),"^",2)
"RTN","MAGQBUT",221,0)
 . Q:JXMAX'?1N.N 
"RTN","MAGQBUT",222,0)
 . S JXMAX=$O(^MAGQUEUE(2006.03,"B",PROC,JXMAX),-1)
"RTN","MAGQBUT",223,0)
 . Q:JXMAX'?1N.N
"RTN","MAGQBUT",224,0)
 . S XX=0
"RTN","MAGQBUT",225,0)
 . F  S XX=$O(^MAGQUEUE(2006.03,"B",PROC,XX)) Q:XX>(JXMAX-1)  D
"RTN","MAGQBUT",226,0)
 . . I $P($G(^MAGQUEUE(2006.03,XX,0)),"^",5)'="" D DQUE(XX)
"RTN","MAGQBUT4")
0^8^B10763650
"RTN","MAGQBUT4",1,0)
MAGQBUT4 ;WOIFO/RMP - BP Utilities  ;19 Nov 2001 1:23 PM
"RTN","MAGQBUT4",2,0)
 ;;3.0;IMAGING;**7,8,48**;Jan 11, 2005
"RTN","MAGQBUT4",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT4",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT4",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT4",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT4",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT4",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT4",10,0)
 ;; |                                                               |
"RTN","MAGQBUT4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",17,0)
 ;;
"RTN","MAGQBUT4",18,0)
 ;
"RTN","MAGQBUT4",19,0)
 Q
"RTN","MAGQBUT4",20,0)
CONV(ARR,ICT) ;Convert any single node array to FM Style multiple
"RTN","MAGQBUT4",21,0)
 ;  The node subscripts of ARR are ignored, and not retained
"RTN","MAGQBUT4",22,0)
 ; i.e.  ARR(34)=8
"RTN","MAGQBUT4",23,0)
 ;       ARR("BLUE")=9
"RTN","MAGQBUT4",24,0)
 ;       ARR("D")=10
"RTN","MAGQBUT4",25,0)
 ; converts to
"RTN","MAGQBUT4",26,0)
 ;      ARR(1,0)=8
"RTN","MAGQBUT4",27,0)
 ;      ARR(2,0)=9
"RTN","MAGQBUT4",28,0)
 ;      ARR(3,0)=10
"RTN","MAGQBUT4",29,0)
 N I,ARO
"RTN","MAGQBUT4",30,0)
 S ICT=0,I=""
"RTN","MAGQBUT4",31,0)
 F  S I=$O(ARR(I)) Q:(I="")  D
"RTN","MAGQBUT4",32,0)
 . S ICT=ICT+1
"RTN","MAGQBUT4",33,0)
 . S ARO(ICT,0)=ARR(I)
"RTN","MAGQBUT4",34,0)
 K ARR
"RTN","MAGQBUT4",35,0)
 M ARR=ARO
"RTN","MAGQBUT4",36,0)
 Q
"RTN","MAGQBUT4",37,0)
MRGMULT(ARR,RT,RTDSC,CT) ;Merge the FM formatted array into a FM File
"RTN","MAGQBUT4",38,0)
 ;   multiple field.
"RTN","MAGQBUT4",39,0)
 ;   This isn't for general consumption.
"RTN","MAGQBUT4",40,0)
 ; RT = FILE ROOT, RECORD NUMBER, NODE
"RTN","MAGQBUT4",41,0)
 ; i.e.  "^MAG(2006.034,44,1,"   -> 44 is the IEN of MAG(2006.34
"RTN","MAGQBUT4",42,0)
 ; RTDSC is the 2nd piece of the 0 node of the multiple field.
"RTN","MAGQBUT4",43,0)
 S RT=$E(RT,1,$L(RT)-1)_")"
"RTN","MAGQBUT4",44,0)
 S @RT@(0)=U_RTDSC_U_CT_U_CT ;  i.e.    ^2006.341A^13^13
"RTN","MAGQBUT4",45,0)
 M @RT=ARR
"RTN","MAGQBUT4",46,0)
 Q
"RTN","MAGQBUT4",47,0)
DDLF(RESULTS,FILE,FIELD,FLAGS,ATTR) ;[MAG FLD ATT]
"RTN","MAGQBUT4",48,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",49,0)
 K X
"RTN","MAGQBUT4",50,0)
 D FIELD^DID(FILE,FIELD,FLAGS,ATTR,"RESULTS","RESULTS")
"RTN","MAGQBUT4",51,0)
 Q
"RTN","MAGQBUT4",52,0)
DDFA(RESULTS) ;[MAG ATT LST]
"RTN","MAGQBUT4",53,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",54,0)
 K X
"RTN","MAGQBUT4",55,0)
 D FIELDLST^DID(RESULTS)
"RTN","MAGQBUT4",56,0)
 Q
"RTN","MAGQBUT4",57,0)
DHRPC(RESULTS,FNAME,FLOC) ;[MAG DIRHASH]
"RTN","MAGQBUT4",58,0)
 N TMP
"RTN","MAGQBUT4",59,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",60,0)
 K X
"RTN","MAGQBUT4",61,0)
 S TMP=$$DIRHASH^MAGFILEB(FNAME,FLOC)
"RTN","MAGQBUT4",62,0)
 S RESULTS=$S(TMP="":U,1:TMP)
"RTN","MAGQBUT4",63,0)
 Q
"RTN","MAGQBUT4",64,0)
GPACHX(PV) ; Get Package File Install History of Imaging
"RTN","MAGQBUT4",65,0)
 N I,LCNT,MSG,PKG
"RTN","MAGQBUT4",66,0)
 S LCNT=0
"RTN","MAGQBUT4",67,0)
 S PV(0)="Version^Install Date"
"RTN","MAGQBUT4",68,0)
 F PKG="IMAGING" D
"RTN","MAGQBUT4",69,0)
 . N J,K,L,VERS,DATE,X,Y,%DT
"RTN","MAGQBUT4",70,0)
 . S J=$O(^DIC(9.4,"B",PKG,"")) Q:'J
"RTN","MAGQBUT4",71,0)
 . S VERS="" F  S VERS=$O(^DIC(9.4,J,22,"B",VERS)) Q:VERS=""  D
"RTN","MAGQBUT4",72,0)
 . . N MSG,TAR
"RTN","MAGQBUT4",73,0)
 . . S K=$O(^DIC(9.4,J,22,"B",VERS,""))
"RTN","MAGQBUT4",74,0)
 . . D LIST^DIC(9.4901,","_K_","_J_",","@;.01;.02;.03","","","","","","","","TAR","MSG")
"RTN","MAGQBUT4",75,0)
 . . Q:$D(MSG("DIERR"))
"RTN","MAGQBUT4",76,0)
 . . S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQBUT4",77,0)
 . . . S LCNT=LCNT+1
"RTN","MAGQBUT4",78,0)
 . . . S PV(LCNT)=VERS_"P"_$P(TAR("DILIST","ID",L,".01"),"^",1)
"RTN","MAGQBUT4",79,0)
 . . . S X=$P(TAR("DILIST","ID",L,".02"),"^",1) D ^%DT S DATE=$$FMTE^XLFDT(Y,2)
"RTN","MAGQBUT4",80,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$S(DATE["-1":"",1:DATE)
"RTN","MAGQBUT4",81,0)
 . . . Q
"RTN","MAGQBUT4",82,0)
 . . Q
"RTN","MAGQBUT4",83,0)
 . Q
"RTN","MAGQBUT4",84,0)
 Q
"RTN","MAGQBUT4",85,0)
VOK(VER) ; Check for the appropriate BP Queue processor version
"RTN","MAGQBUT4",86,0)
 ; This routine MAGQBUT4 will need to be released with each BP Update
"RTN","MAGQBUT4",87,0)
 ; The variable CVERS will contain the current BP server version
"RTN","MAGQBUT4",88,0)
 ;       ;;3.0;IMAGING;**7,13,8**;Jul 26, 2004
"RTN","MAGQBUT4",89,0)
 N VN,I,CVERS,PNUM,SLINE
"RTN","MAGQBUT4",90,0)
 S SLINE=$T(+2)
"RTN","MAGQBUT4",91,0)
 S PNUM=$$TRIM^MAGQST($P(SLINE,"**",2)),PNUM=$$TRIM^MAGQST($P(PNUM,",",$L(PNUM,",")))
"RTN","MAGQBUT4",92,0)
 S CVERS=$$TRIM^MAGQST($P(SLINE,";",3))_"P"_PNUM
"RTN","MAGQBUT4",93,0)
 Q $S(CVERS=VER:1,1:0)
"RTN","MAGQBUT4",94,0)
 ;
"RTN","MAGSIXG1")
0^5^B37320846
"RTN","MAGSIXG1",1,0)
MAGSIXG1 ;WOIFO/EdM/GEK/SEB - RPCs for Document Imaging ; 04/29/2002  16:15
"RTN","MAGSIXG1",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGSIXG1",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXG1",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXG1",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXG1",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXG1",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXG1",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXG1",10,0)
 ;; |                                                               |
"RTN","MAGSIXG1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXG1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXG1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXG1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXG1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXG1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",17,0)
 ;;
"RTN","MAGSIXG1",18,0)
 Q
"RTN","MAGSIXG1",19,0)
 ;
"RTN","MAGSIXG1",20,0)
 ; OUT ;--- Output array
"RTN","MAGSIXG1",21,0)
 ; CLS ;--- Class
"RTN","MAGSIXG1",22,0)
 ; TYPE ;-- Type (of what?)
"RTN","MAGSIXG1",23,0)
 ; SPEC ;-- Specialty or SubSpecialty
"RTN","MAGSIXG1",24,0)
 ; EVENT ;- Event or Procedure or Action
"RTN","MAGSIXG1",25,0)
PGI(OUT,DFN,PKG,CLS,TYPE,EVENT,SPEC,FROM,UNTIL,ORIGIN) ;RPC [MAG4 PAT GET IMAGES]
"RTN","MAGSIXG1",26,0)
 ; Get Images for Patient.  
"RTN","MAGSIXG1",27,0)
 ; New call in Patch 3.0.8 uses Image Filter to get list of images
"RTN","MAGSIXG1",28,0)
 ; 
"RTN","MAGSIXG1",29,0)
 N C,DAT1,DAT2,E,IMAGE,N,OK,P,RDT,RESULT,S,T,V,CT,PKG1,CLS1,TYPE1,EVENT1,SPEC1,FLTX,FLTY,CAPDUZ,CAPDT,MAGVR,FNL
"RTN","MAGSIXG1",30,0)
 S FROM=$G(FROM),UNTIL=$G(UNTIL)
"RTN","MAGSIXG1",31,0)
 D REVDT(FROM,UNTIL,.DAT1,.DAT2)
"RTN","MAGSIXG1",32,0)
 S RESULT="OUT" K OUT,^TMP($T(+0),$J)
"RTN","MAGSIXG1",33,0)
 S PKG=$G(PKG),CLS=$G(CLS),EVENT=$G(EVENT),SPEC=$G(SPEC),TYPE=$G(TYPE),ORIGIN=$G(ORIGIN)
"RTN","MAGSIXG1",34,0)
 I PKG'="" D PKG^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",35,0)
 I CLS'="" D CLS^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",36,0)
 I EVENT'="" D EVENT^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",37,0)
 I SPEC'="" D SPEC^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",38,0)
 I TYPE'="" D TYPE^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",39,0)
 I ORIGIN'="" D ORIGIN^MAGSIXGT Q:$D(OUT(0))
"RTN","MAGSIXG1",40,0)
 I +DFN'=DFN S @RESULT@(0)="0^Invalid Patient Number: """_DFN_"""." Q
"RTN","MAGSIXG1",41,0)
 I '$D(^DPT(DFN,0))#2 S @RESULT@(0)="0^No Such Patient: """_DFN_"""." Q
"RTN","MAGSIXG1",42,0)
 S N=0
"RTN","MAGSIXG1",43,0)
 D NETPLCS^MAGGTU6
"RTN","MAGSIXG1",44,0)
 ;S RDT="" F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:RDT=""  D
"RTN","MAGSIXG1",45,0)
 ;3.0.8/gek, Quit searching all images, just do the date range.
"RTN","MAGSIXG1",46,0)
 S RDT=DAT1 F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:(RDT="")!(RDT>DAT2)  D
"RTN","MAGSIXG1",47,0)
 . N COUNT,PRX,X0,X2,X40,I1,X01
"RTN","MAGSIXG1",48,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGSIXG1",49,0)
 . . S IMAGE="" F  S IMAGE=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX,IMAGE)) Q:IMAGE=""  D
"RTN","MAGSIXG1",50,0)
 . . . S X0=$G(^MAG(2005,IMAGE,0))
"RTN","MAGSIXG1",51,0)
 . . . Q:$P(X0,"^",10)  ; child of Group
"RTN","MAGSIXG1",52,0)
 . . . S X2=$G(^MAG(2005,IMAGE,2)),X40=$G(^MAG(2005,IMAGE,40)),I1=$O(^MAG(2005,IMAGE,1,0))
"RTN","MAGSIXG1",53,0)
 . . . S P=$P(X40,U),C=$P(X40,"^",2),T=$P(X40,"^",3),E=$P(X40,"^",4),S=$P(X40,"^",5)
"RTN","MAGSIXG1",54,0)
 . . . S V=$S($P(X40,"^",6)="":"V",1:$P(X40,"^",6)) ; P48T1 show VA for Null
"RTN","MAGSIXG1",55,0)
 . . . D CHK^DIE(2005,45,"E",V,.MAGVR) S V=MAGVR(0) ; P48T1 show External Value
"RTN","MAGSIXG1",56,0)
 . . . I PKG'="",P'="",'$D(OK(5,P)) Q
"RTN","MAGSIXG1",57,0)
 . . . I ORIGIN'="",V'="",'$D(OK(6,V)) Q
"RTN","MAGSIXG1",58,0)
 . . . I CLS'="",C'="",'$D(OK(1,C)) Q
"RTN","MAGSIXG1",59,0)
 . . . I EVENT'="",E,'$D(OK(2,E)) Q
"RTN","MAGSIXG1",60,0)
 . . . ;3.0.8 Stop list entries with no Event, if Event is in Search Specs
"RTN","MAGSIXG1",61,0)
 . . . I EVENT'="",E="" Q
"RTN","MAGSIXG1",62,0)
 . . . I SPEC'="",S,'$D(OK(3,S)) Q
"RTN","MAGSIXG1",63,0)
 . . . ;3.0.8 Stop list entries with no Spec, if Spec is in Search Specs
"RTN","MAGSIXG1",64,0)
 . . . I SPEC'="",S="" Q
"RTN","MAGSIXG1",65,0)
 . . . I TYPE'="",T,'$D(OK(4,T)) Q
"RTN","MAGSIXG1",66,0)
 . . . ; Get Count of Images in Group, use 4th piece of ,1,0) multiple
"RTN","MAGSIXG1",67,0)
 . . . S COUNT=$S($P($G(^MAG(2005,IMAGE,1,0)),"^",4):$P($G(^MAG(2005,IMAGE,1,0)),"^",4),1:1)
"RTN","MAGSIXG1",68,0)
 . . . S FLTX=""
"RTN","MAGSIXG1",69,0)
 . . . ; PUT in Site Code as 2nd piece.
"RTN","MAGSIXG1",70,0)
 . . . S X01=$S(I1:$G(^MAG(2005,+$G(^MAG(2005,IMAGE,1,I1,0)),0)),1:X0)
"RTN","MAGSIXG1",71,0)
 . . . S FNL=$S(+$P(X01,"^",3):$P(X01,"^",3),1:+$P(X01,"^",5))
"RTN","MAGSIXG1",72,0)
 . . . S FLTX=$P($G(MAGJOB("NETPLC",FNL)),"^",2)
"RTN","MAGSIXG1",73,0)
 . . . S FLTX=FLTX_"^"_$P($$FMTE^XLFDT($P(X2,"^",5),"5Z"),"@",1)
"RTN","MAGSIXG1",74,0)
 . . . S FLTX=FLTX_"^"_$P(X0,"^",8)_"^"_COUNT_"^"_$P(X2,"^",4)
"RTN","MAGSIXG1",75,0)
 . . . S FLTX=FLTX_"^"_P
"RTN","MAGSIXG1",76,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.82,+C,0)),"^",1)
"RTN","MAGSIXG1",77,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.83,+T,0)),"^",1)
"RTN","MAGSIXG1",78,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.84,+S,0)),"^",1)
"RTN","MAGSIXG1",79,0)
 . . . S FLTX=FLTX_"^"_$P($G(^MAG(2005.85,+E,0)),"^",1)
"RTN","MAGSIXG1",80,0)
 . . . S FLTX=FLTX_"^"_V
"RTN","MAGSIXG1",81,0)
 . . . S FLTX=FLTX_"^"_$P($$FMTE^XLFDT($P(X2,"^",1),"5Z"),"@",1)
"RTN","MAGSIXG1",82,0)
 . . . ; P8T36 gek. Fix Error caused if $P(X2,"^",2) "ImageSavedBy" is null
"RTN","MAGSIXG1",83,0)
 . . . S FLTX=FLTX_"^"_$$GET1^DIQ(200,+$P(X2,"^",2)_",",.01)
"RTN","MAGSIXG1",84,0)
 . . . N MAGFILE,MAGXX
"RTN","MAGSIXG1",85,0)
 . . . S MAGXX=IMAGE D INFO^MAGGTII
"RTN","MAGSIXG1",86,0)
 . . . S FLTX=FLTX_"^"_$P(MAGFILE,"^",1)
"RTN","MAGSIXG1",87,0)
 . . . S N=N+1,@RESULT@(N+1)=N_"^"_FLTX_"|"_MAGFILE
"RTN","MAGSIXG1",88,0)
 . . . Q:N<101  Q:RESULT["^"
"RTN","MAGSIXG1",89,0)
 . . . ; Image count is getting big, switch from array to Global return type
"RTN","MAGSIXG1",90,0)
 . . . S ^TMP($T(+0),$J)=""
"RTN","MAGSIXG1",91,0)
 . . . M ^TMP($T(+0),$J)=OUT
"RTN","MAGSIXG1",92,0)
 . . . K OUT
"RTN","MAGSIXG1",93,0)
 . . . S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGSIXG1",94,0)
 . . . S RESULT=$NA(^TMP($T(+0),$J))
"RTN","MAGSIXG1",95,0)
 . . . S OUT=$NA(^TMP($T(+0),$J)) ;GEK 10/01/02
"RTN","MAGSIXG1",96,0)
 . . . Q
"RTN","MAGSIXG1",97,0)
 . . Q
"RTN","MAGSIXG1",98,0)
 . Q
"RTN","MAGSIXG1",99,0)
 S FLTY=$$FLTDESC(X)
"RTN","MAGSIXG1",100,0)
 I 'N S @RESULT@(0)="0^No images for filter: "_FLTY  Q
"RTN","MAGSIXG1",101,0)
 S @RESULT@(0)="1^"_FLTY
"RTN","MAGSIXG1",102,0)
 S @RESULT@(1)="Item~S2^Site^Proc DT~S1^Procedure^# Img~S2^Short Desc^Pkg^Class^Type^Specialty^Event^Origin^Cap Dt~S1~W0^Cap by~~W0^Image ID~S2~W0"
"RTN","MAGSIXG1",103,0)
 Q
"RTN","MAGSIXG1",104,0)
FLTDESC(X) ;
"RTN","MAGSIXG1",105,0)
 N FLT
"RTN","MAGSIXG1",106,0)
 S FLT=""
"RTN","MAGSIXG1",107,0)
 ; Package
"RTN","MAGSIXG1",108,0)
 S FLT=FLT_$S(PKG="":"",1:"Pkg: "_PKG_" - ")
"RTN","MAGSIXG1",109,0)
 ; Class
"RTN","MAGSIXG1",110,0)
 S FLT=FLT_$S(CLS="":"",CLS="ADMIN,ADMIN/CLIN,CLIN/ADMIN":"Class: ADMIN - ",CLS="CLIN,CLIN/ADMIN,ADMIN/CLIN":"Class: CLIN - ",1:"Class: "_CLS_" - ")
"RTN","MAGSIXG1",111,0)
 ; Type
"RTN","MAGSIXG1",112,0)
 F CT=1:1:$L(TYPE,",") D
"RTN","MAGSIXG1",113,0)
 . S TYPE1=$P(TYPE,",",CT) I TYPE1'="" S TYPE1=$P($G(^MAG(2005.83,TYPE1,0)),"^")
"RTN","MAGSIXG1",114,0)
 . S $P(TYPE,",",CT)=$E(TYPE1)_$$LOW^XLFSTR($E(TYPE1,2,999))
"RTN","MAGSIXG1",115,0)
 S FLT=FLT_$S(TYPE="":"",1:"Type: "_TYPE_" - ")
"RTN","MAGSIXG1",116,0)
 ; Specialty/SubSpecialty
"RTN","MAGSIXG1",117,0)
 F CT=1:1:$L(SPEC,",") D
"RTN","MAGSIXG1",118,0)
 . S SPEC1=$P(SPEC,",",CT) I SPEC1'="" S SPEC1=$P($G(^MAG(2005.84,SPEC1,0)),"^")
"RTN","MAGSIXG1",119,0)
 . S $P(SPEC,",",CT)=$E(SPEC1)_$$LOW^XLFSTR($E(SPEC1,2,999))
"RTN","MAGSIXG1",120,0)
 S FLT=FLT_$S(SPEC="":"",1:"Spec.: "_SPEC_" - ")
"RTN","MAGSIXG1",121,0)
 ; Procedure/Event
"RTN","MAGSIXG1",122,0)
 F CT=1:1:$L(EVENT,",") D
"RTN","MAGSIXG1",123,0)
 . S EVENT1=$P(EVENT,",",CT) I EVENT1'="" S EVENT1=$P($G(^MAG(2005.85,EVENT1,0)),"^")
"RTN","MAGSIXG1",124,0)
 . S $P(EVENT,",",CT)=$E(EVENT1)_$$LOW^XLFSTR($E(EVENT1,2,999))
"RTN","MAGSIXG1",125,0)
 S FLT=FLT_$S(EVENT="":"",1:"Event: "_EVENT_" - ")
"RTN","MAGSIXG1",126,0)
 ; Orgin
"RTN","MAGSIXG1",127,0)
 S FLT=FLT_$S(ORIGIN="":"",1:"Origin: "_ORIGIN_" - ")
"RTN","MAGSIXG1",128,0)
 ; Date Range - From
"RTN","MAGSIXG1",129,0)
 S FROM=$S($G(FROM)="":"",1:" from "_FROM)
"RTN","MAGSIXG1",130,0)
 ; Date Range - Until
"RTN","MAGSIXG1",131,0)
 S UNTIL=$S($G(UNTIL)="":"",1:" to "_UNTIL)
"RTN","MAGSIXG1",132,0)
 S FLT=FLT_$G(FROM)_$G(UNTIL)
"RTN","MAGSIXG1",133,0)
 ; If No Filter.  Then get All.
"RTN","MAGSIXG1",134,0)
 I FLT="" S FLT="All Images"
"RTN","MAGSIXG1",135,0)
 Q FLT
"RTN","MAGSIXG1",136,0)
REVDT(FROM,UNTIL,DAT1,DAT2) ; Calculate the Reverse Dates and switch for $O
"RTN","MAGSIXG1",137,0)
 ; for $O( through a data cross reference that is reversed, i.e. X=9999999.9999-DT
"RTN","MAGSIXG1",138,0)
 ; FROM  = Date in External or Internal
"RTN","MAGSIXG1",139,0)
 ; UNTIL = Date in External or Internal
"RTN","MAGSIXG1",140,0)
 ; DAT1  = Reverse the two dates, FROM and UNTIL, equal to the earliest
"RTN","MAGSIXG1",141,0)
 ; DAT2  = Reverse the two dates, FROM and UNTIL, equal to the latest
"RTN","MAGSIXG1",142,0)
 ; 
"RTN","MAGSIXG1",143,0)
 S DAT1=$$E2I^MAGSIXGT($G(FROM))
"RTN","MAGSIXG1",144,0)
 S DAT2=$$E2I^MAGSIXGT($G(UNTIL))
"RTN","MAGSIXG1",145,0)
 I 'DAT2 S DAT2=9999999.9999
"RTN","MAGSIXG1",146,0)
 S DAT1=9999999.9999-DAT1
"RTN","MAGSIXG1",147,0)
 S DAT2=9999999.9999-DAT2
"RTN","MAGSIXG1",148,0)
 I DAT1]DAT2 S X=DAT1,DAT1=DAT2,DAT2=X
"RTN","MAGSIXG1",149,0)
 S DAT1=DAT1\1,$P(DAT2,".",2)="9999"
"RTN","MAGSIXG1",150,0)
 Q
"RTN","MAGSIXGT")
0^6^B37400681
"RTN","MAGSIXGT",1,0)
MAGSIXGT ;WOIFO/EdM/GEK/SEB - RPC for Document Imaging ; 04/29/2002  16:15
"RTN","MAGSIXGT",2,0)
 ;;3.0;IMAGING;**8,48**;Jan 11, 2005
"RTN","MAGSIXGT",3,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXGT",4,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXGT",5,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXGT",6,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXGT",7,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXGT",8,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXGT",9,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXGT",10,0)
 ;; |                                                               |
"RTN","MAGSIXGT",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXGT",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXGT",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXGT",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXGT",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXGT",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXGT",17,0)
 ;;
"RTN","MAGSIXGT",18,0)
 Q
"RTN","MAGSIXGT",19,0)
 ;
"RTN","MAGSIXGT",20,0)
IGT(OUT,CLS,IGN) ;RPC [MAG4 INDEX GET TYPE]
"RTN","MAGSIXGT",21,0)
 ; OUT : the result array
"RTN","MAGSIXGT",22,0)
 ; CLS : a ',' separated list of Classes.
"RTN","MAGSIXGT",23,0)
 ; IGN : Flag to IGNore the Status field. 1=IGNore
"RTN","MAGSIXGT",24,0)
 N C,D0,LOC,N,OK,X
"RTN","MAGSIXGT",25,0)
 K OUT
"RTN","MAGSIXGT",26,0)
 S CLS=$G(CLS),IGN=$G(IGN)
"RTN","MAGSIXGT",27,0)
 D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",28,0)
 ;
"RTN","MAGSIXGT",29,0)
 S N=1
"RTN","MAGSIXGT",30,0)
 S D0=0 F  S D0=$O(^MAG(2005.83,D0)) Q:'D0  D
"RTN","MAGSIXGT",31,0)
 . S X=$G(^MAG(2005.83,D0,0)),C=$P(X,"^",2)
"RTN","MAGSIXGT",32,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",33,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",34,0)
 . I 'IGN Q:$P(X,"^",3)="I"  ; This is the Status field inactive Flag;
"RTN","MAGSIXGT",35,0)
 . S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.83,D0,1)),"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",36,0)
 . Q
"RTN","MAGSIXGT",37,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",38,0)
 I N<2 S OUT(0)="0^-3, No Types Found for """_CLS_"""."
"RTN","MAGSIXGT",39,0)
 E  S OUT(0)="1^OK: "_N,OUT(1)=CLS_" Image Types^Abbr"
"RTN","MAGSIXGT",40,0)
 Q
"RTN","MAGSIXGT",41,0)
IGE(OUT,CLS,SPEC,IGN) ;RPC [MAG4 INDEX GET EVENT]
"RTN","MAGSIXGT",42,0)
 ; Index Get Procedure/Event (optionally based on (Sub)Specialty)
"RTN","MAGSIXGT",43,0)
 ; OUT : the result array
"RTN","MAGSIXGT",44,0)
 ; CLS : a ',' separated list of Classes.
"RTN","MAGSIXGT",45,0)
 ; SPEC : a ',' separated list of Spec/Subspecialties 
"RTN","MAGSIXGT",46,0)
 ; IGN : Flag to IGNore the Status field. 1=IGNore
"RTN","MAGSIXGT",47,0)
 N C,D0,D1,LOC,N,NO,OK,S,X
"RTN","MAGSIXGT",48,0)
 K OUT
"RTN","MAGSIXGT",49,0)
 S CLS=$G(CLS),SPEC=$G(SPEC),IGN=$G(IGN)
"RTN","MAGSIXGT",50,0)
 D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",51,0)
 D SPEC Q:$D(OUT(0))
"RTN","MAGSIXGT",52,0)
 ;
"RTN","MAGSIXGT",53,0)
 S N=1
"RTN","MAGSIXGT",54,0)
 S D0=0 F  S D0=$O(^MAG(2005.85,D0)) Q:'D0  D
"RTN","MAGSIXGT",55,0)
 . S X=$G(^MAG(2005.85,D0,0)),C=$P(X,"^",2)
"RTN","MAGSIXGT",56,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",57,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",58,0)
 . I 'IGN Q:$P(X,"^",3)="I"  ;This is the Status field inactive Flag;
"RTN","MAGSIXGT",59,0)
 . ; if Specialty not null, check it. Null Specialties will be listed in output.
"RTN","MAGSIXGT",60,0)
 . I SPEC'="" D  Q:NO
"RTN","MAGSIXGT",61,0)
 . . S NO=0
"RTN","MAGSIXGT",62,0)
 . . ; Next line: put "S:'D1 NO=1" before the quit to block implicit mapping 
"RTN","MAGSIXGT",63,0)
 . . S D1=0 F  S D1=$O(^MAG(2005.85,D0,1,D1)) Q:'D1  D  Q:'NO
"RTN","MAGSIXGT",64,0)
 . . . S NO=1
"RTN","MAGSIXGT",65,0)
 . . . S S=$P($G(^MAG(2005.85,D0,1,D1,0)),"^",1)
"RTN","MAGSIXGT",66,0)
 . . . Q:S=""
"RTN","MAGSIXGT",67,0)
 . . . S:$D(OK(3,S)) NO=0
"RTN","MAGSIXGT",68,0)
 . . . Q
"RTN","MAGSIXGT",69,0)
 . . Q
"RTN","MAGSIXGT",70,0)
 . S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.85,D0,2)),"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",71,0)
 . Q
"RTN","MAGSIXGT",72,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",73,0)
 I N<2 S OUT(0)="0^No Procedures or Events found for """_CLS_""" and """_SPEC_"""."
"RTN","MAGSIXGT",74,0)
 E  S OUT(0)="1^OK: "_N,OUT(1)="Procedure/Event^Abbr"
"RTN","MAGSIXGT",75,0)
 Q
"RTN","MAGSIXGT",76,0)
 ;
"RTN","MAGSIXGT",77,0)
IGS(OUT,CLS,EVENT,IGN) ;RPC [MAG4 INDEX GET SPECIALTY]
"RTN","MAGSIXGT",78,0)
 ; OUT : the result array
"RTN","MAGSIXGT",79,0)
 ; CLS : a ',' separated list of Classes.
"RTN","MAGSIXGT",80,0)
 ; EVENT : a ',' separated list of Proc/Events
"RTN","MAGSIXGT",81,0)
 ; IGN : Flag to IGNore the Status field. 1=IGNore
"RTN","MAGSIXGT",82,0)
 N C,D0,D1,E,LOC,N,OK,X
"RTN","MAGSIXGT",83,0)
 K OUT
"RTN","MAGSIXGT",84,0)
 S CLS=$G(CLS),EVENT=$G(EVENT),IGN=$G(IGN)
"RTN","MAGSIXGT",85,0)
 I CLS'="" D CLS Q:$D(OUT(0))
"RTN","MAGSIXGT",86,0)
 I EVENT'="" D EVENT Q:$D(OUT(0))
"RTN","MAGSIXGT",87,0)
 ;
"RTN","MAGSIXGT",88,0)
 S N=1
"RTN","MAGSIXGT",89,0)
 I EVENT="" S D0=0 F  S D0=$O(^MAG(2005.84,D0)) Q:'D0  D
"RTN","MAGSIXGT",90,0)
 . S X=$G(^MAG(2005.84,D0,0)),C=$P(X,"^",2) ;,E=$P(X,"^",3)
"RTN","MAGSIXGT",91,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",92,0)
 . I CLS'="" Q:C=""  Q:'$D(OK(1,C))
"RTN","MAGSIXGT",93,0)
 . I 'IGN Q:$P(X,"^",4)="I"  ; This is the Status field inactive Flag;
"RTN","MAGSIXGT",94,0)
 . ;I EVENT'="" Q:E=""  Q:'$D(OK(2,E))
"RTN","MAGSIXGT",95,0)
 . S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D0,2)),"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",96,0)
 . Q
"RTN","MAGSIXGT",97,0)
 I EVENT]"" S E="" F  S E=$O(OK(2,E)) Q:E=""  D
"RTN","MAGSIXGT",98,0)
 . ; if Class not null, check it. Null classes will be listed in output.
"RTN","MAGSIXGT",99,0)
 . I CLS'="" S C=$P($G(^MAG(2005.85,E,0)),"^",2) Q:'$D(OK(1,C))
"RTN","MAGSIXGT",100,0)
 . I +$P($G(^MAG(2005.85,E,1,0)),U,3)=0 D GETSPECS(.LOC)
"RTN","MAGSIXGT",101,0)
 . S D0="" F  S D0=$O(^MAG(2005.85,E,1,D0)) Q:D0=""  D
"RTN","MAGSIXGT",102,0)
 . . S D1=$G(^MAG(2005.85,E,1,D0,0)) I D1="" Q
"RTN","MAGSIXGT",103,0)
 . . S X=$G(^MAG(2005.84,D1,0))
"RTN","MAGSIXGT",104,0)
 . . I X]"" S LOC($P(X,"^",1)_"^"_$P($G(^MAG(2005.84,D1,2)),"^",1)_"|"_D1)=""
"RTN","MAGSIXGT",105,0)
 . Q
"RTN","MAGSIXGT",106,0)
 S X="" F  S X=$O(LOC(X)) Q:X=""  S N=N+1,OUT(N)=X
"RTN","MAGSIXGT",107,0)
 I N<2 S OUT(0)="0^-5, No (Sub)Specialties found for """_CLS_""" and """_EVENT_"""."
"RTN","MAGSIXGT",108,0)
 E  S OUT(0)="1^OK: "_N,OUT(1)="Specialty/SubSpecialty^Abbr"
"RTN","MAGSIXGT",109,0)
 Q
"RTN","MAGSIXGT",110,0)
 ;
"RTN","MAGSIXGT",111,0)
PKG N P
"RTN","MAGSIXGT",112,0)
 I $G(PKG)="" Q
"RTN","MAGSIXGT",113,0)
 F I=1:1:$L(PKG,",") I $L($P(PKG,",",I)) S OK(5,$P(PKG,",",I))=""
"RTN","MAGSIXGT",114,0)
 Q
"RTN","MAGSIXGT",115,0)
ORIGIN ;
"RTN","MAGSIXGT",116,0)
 N V,MAGR,MAGD,MAGE
"RTN","MAGSIXGT",117,0)
 I $G(ORIGIN)="" Q
"RTN","MAGSIXGT",118,0)
 ; P48T1 Allow Internal or External for Origin (set of codes)
"RTN","MAGSIXGT",119,0)
 F I=1:1:$L(ORIGIN,",") I $L($P(ORIGIN,",",I)) S OK(6,$P(ORIGIN,",",I))="" D
"RTN","MAGSIXGT",120,0)
 . S MAGD=$P(ORIGIN,",",I)
"RTN","MAGSIXGT",121,0)
 . D CHK^DIE(2005,45,"E",MAGD,.MAGR) I MAGR'="^" S OK(6,MAGR)="",OK(6,MAGR(0))=""
"RTN","MAGSIXGT",122,0)
 Q
"RTN","MAGSIXGT",123,0)
CLS N C,CLSX
"RTN","MAGSIXGT",124,0)
 I $G(CLS)="" Q
"RTN","MAGSIXGT",125,0)
 F I=1:1:$L(CLS,",") I $L($P(CLS,",",I)) S CLSX=$P(CLS,",",I) D
"RTN","MAGSIXGT",126,0)
 . I CLSX=+CLSX,$D(^MAG(2005.82,CLSX)) S OK(1,CLSX)=""
"RTN","MAGSIXGT",127,0)
 . S C="" F  S C=$O(^MAG(2005.82,"B",CLSX,C)) Q:C=""  S OK(1,C)=""
"RTN","MAGSIXGT",128,0)
 I $O(OK(1,""))="" S OUT(0)="0^Invalid Class: """_CLS_"""." Q
"RTN","MAGSIXGT",129,0)
 Q
"RTN","MAGSIXGT",130,0)
 ;
"RTN","MAGSIXGT",131,0)
EVENT N E,EVENTX
"RTN","MAGSIXGT",132,0)
 I $G(EVENT)="" Q
"RTN","MAGSIXGT",133,0)
 F I=1:1:$L(EVENT,",") I $L($P(EVENT,",",I)) S EVENTX=$P(EVENT,",",I) D
"RTN","MAGSIXGT",134,0)
 . I EVENTX=+EVENTX,$D(^MAG(2005.85,EVENTX)) S OK(2,EVENTX)=""
"RTN","MAGSIXGT",135,0)
 . S E="" F  S E=$O(^MAG(2005.85,"B",EVENTX,E)) Q:E=""  S OK(2,E)=""
"RTN","MAGSIXGT",136,0)
 I $O(OK(2,""))="" S OUT(0)="0^Invalid Event: """_EVENT_"""." Q
"RTN","MAGSIXGT",137,0)
 Q
"RTN","MAGSIXGT",138,0)
 ;
"RTN","MAGSIXGT",139,0)
SPEC N S,SPECX
"RTN","MAGSIXGT",140,0)
 I $G(SPEC)="" Q
"RTN","MAGSIXGT",141,0)
 F I=1:1:$L(SPEC,",") I $L($P(SPEC,",",I)) S SPECX=$P(SPEC,",",I) D
"RTN","MAGSIXGT",142,0)
 . I SPECX=+SPECX,$D(^MAG(2005.84,SPECX)) S OK(3,SPECX)=""
"RTN","MAGSIXGT",143,0)
 . S S="" F  S S=$O(^MAG(2005.84,"B",SPECX,S)) Q:S=""  S OK(3,S)=""
"RTN","MAGSIXGT",144,0)
 I $O(OK(3,""))="" S OUT(0)="0^Invalid Specialty: """_SPEC_"""." Q
"RTN","MAGSIXGT",145,0)
 Q
"RTN","MAGSIXGT",146,0)
 ;
"RTN","MAGSIXGT",147,0)
TYPE N T,TYPEX
"RTN","MAGSIXGT",148,0)
 I $G(TYPE)="" Q
"RTN","MAGSIXGT",149,0)
 F I=1:1:$L(TYPE,",") I $L($P(TYPE,",",I)) S TYPEX=$P(TYPE,",",I) D
"RTN","MAGSIXGT",150,0)
 . I TYPEX=+TYPEX,$D(^MAG(2005.83,TYPEX)) S OK(4,TYPEX)=""
"RTN","MAGSIXGT",151,0)
 . S T="" F  S T=$O(^MAG(2005.83,"B",TYPEX,T)) Q:T=""  S OK(4,T)=""
"RTN","MAGSIXGT",152,0)
 I $O(OK(4,""))="" S OUT(0)="0^Invalid Type: """_TYPE_"""." Q
"RTN","MAGSIXGT",153,0)
 Q
"RTN","MAGSIXGT",154,0)
 ;
"RTN","MAGSIXGT",155,0)
GETSPECS(LOC) N D0,X
"RTN","MAGSIXGT",156,0)
 S D0=0 F  S D0=$O(^MAG(2005.84,D0)) Q:'D0  D
"RTN","MAGSIXGT",157,0)
 . S X=$G(^MAG(2005.84,D0,0)) I X]"" S LOC($P(X,"^",1)_"|"_D0)=""
"RTN","MAGSIXGT",158,0)
 . Q
"RTN","MAGSIXGT",159,0)
 Q
"RTN","MAGSIXGT",160,0)
 ;
"RTN","MAGSIXGT",161,0)
D2(N) Q $TR($J(N,2)," ",0)
"RTN","MAGSIXGT",162,0)
 ;
"RTN","MAGSIXGT",163,0)
E2I(D) N %DT,X,Y
"RTN","MAGSIXGT",164,0)
 Q:$P(D,".",1)?7N D\1
"RTN","MAGSIXGT",165,0)
 Q:D="" 0
"RTN","MAGSIXGT",166,0)
 S X=D,%DT="TS" D ^%DT Q:Y<0 0
"RTN","MAGSIXGT",167,0)
 Q Y\1
"VER")
8.0^22.0
"^DD",2005,2005,45,0)
ORIGIN INDEX^S^V:VA;N:NON-VA;D:DOD;F:FEE;^40;6^Q
"^DD",2005,2005,45,21,0)
^.001^2^2^3040929^^^
"^DD",2005,2005,45,21,1,0)
This field indicates whether this image originated inside or outside of 
"^DD",2005,2005,45,21,2,0)
VA.
"^DD",2005,2005,45,"DT")
3040917
"^DD",2005.87,2005.87,1,0)
PACKAGE^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",2005.87,2005.87,1,3)
Answer must be 1-30 characters in length.
"^DD",2005.87,2005.87,1,21,0)
^.001^1^1^3041011^^^^
"^DD",2005.87,2005.87,1,21,1,0)
Corresponds to IMAGE File, Field #40 PACKAGE INDEX
"^DD",2005.87,2005.87,1,"DT")
3040923
"^DD",2006.1,2006.1,.07,0)
GCC EXPORT LOC^*P2005.2'^MAG(2005.2,^0;7^S DIC("S")="I $P(^(0),U,6,7)=""1^GCC""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2006.1,2006.1,.07,1,0)
^.1
"^DD",2006.1,2006.1,.07,1,1,0)
2006.1^AEXPORT^MUMPS
"^DD",2006.1,2006.1,.07,1,1,1)
S ^MAG(2006.1,"AEXPORT")=X
"^DD",2006.1,2006.1,.07,1,1,2)
K ^MAG(2006.1,"AEXPORT")
"^DD",2006.1,2006.1,.07,1,1,3)
IMAGE NETWORK EXPORT DIRECTORY
"^DD",2006.1,2006.1,.07,1,1,"%D",0)
^^2^2^2940517^
"^DD",2006.1,2006.1,.07,1,1,"%D",1,0)
The node, ^MAG(2006.1,"AEXPORT")=X, where X is a pointer to the Network
"^DD",2006.1,2006.1,.07,1,1,"%D",2,0)
Location file, identifies the location for the export of images.
"^DD",2006.1,2006.1,.07,1,1,"DT")
2930505
"^DD",2006.1,2006.1,.07,12)
Only allow online GCC type shares.
"^DD",2006.1,2006.1,.07,12.1)
S DIC("S")="I $P(^(0),U,6,7)=""1^GCC"""
"^DD",2006.1,2006.1,.07,21,0)
^.001^4^4^3041018^^^^
"^DD",2006.1,2006.1,.07,21,1,0)
This field is a pointer to the Network Location file defining the 
"^DD",2006.1,2006.1,.07,21,2,0)
Generic Carbon Copy (GCC) share were copies of files are sent.
"^DD",2006.1,2006.1,.07,21,3,0)
When the software makes an export request, the file
"^DD",2006.1,2006.1,.07,21,4,0)
is copied here.
"^DD",2006.1,2006.1,.07,"DT")
3041018
"^DD",2006.1,2006.1,8,0)
PURGE-RETENTION DAYS FULL FILE^NJ6,0^^1;2^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.1,2006.1,8,1,0)
^.1
"^DD",2006.1,2006.1,8,1,1,0)
2006.1^AIMDEL^MUMPS
"^DD",2006.1,2006.1,8,1,1,1)
S ^MAG(2006.1,"AIMDEL")=X
"^DD",2006.1,2006.1,8,1,1,2)
K ^MAG(2006.1,"AIMDEL")
"^DD",2006.1,2006.1,8,1,1,3)
DAYS SINCE LAST ACCESS CUTOFF
"^DD",2006.1,2006.1,8,1,1,"%D",0)
^^2^2^2950505^^
"^DD",2006.1,2006.1,8,1,1,"%D",1,0)
This cross-reference contains the cutoff for file deletion in
"^DD",2006.1,2006.1,8,1,1,"%D",2,0)
days since last image access.
"^DD",2006.1,2006.1,8,1,1,"DT")
2950429
"^DD",2006.1,2006.1,8,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",2006.1,2006.1,8,21,0)
^.001^4^4^3040930^^^
"^DD",2006.1,2006.1,8,21,1,0)
This field is used by the Background Processor purge to determine the
"^DD",2006.1,2006.1,8,21,2,0)
number of days to retain full image files. All FULL images that have not
"^DD",2006.1,2006.1,8,21,3,0)
been accessed in this many days will be removed from magnetic storage by
"^DD",2006.1,2006.1,8,21,4,0)
the Background Processor purge.
"^DD",2006.1,2006.1,8,"DT")
3040930
"^DD",2006.1,2006.1,64,0)
SCHEDULED PURGE TIME^NJ4,0^^5;5^S X=+X K:(X>2400)!(X<0)!(X?.E1"."1N.N)!($E(X,$L(X)-1,$L(X))>59) X
"^DD",2006.1,2006.1,64,3)
Type a Number between 0000 and 2400, 0 Decimal Digits
"^DD",2006.1,2006.1,64,21,0)
^^5^5^3031205^
"^DD",2006.1,2006.1,64,21,1,0)
This military time value is used to determine what time of day the scheduled
"^DD",2006.1,2006.1,64,21,2,0)
purge will be triggered.  A default value of 2400 will be used by the 
"^DD",2006.1,2006.1,64,21,3,0)
BP Queue Processor if the Scheduled Purge option is enabled and the 
"^DD",2006.1,2006.1,64,21,4,0)
frequency days plus date of last purge threshold has been reached and this
"^DD",2006.1,2006.1,64,21,5,0)
value is undefined.
"^DD",2006.1,2006.1,64,"DT")
3031205
"^DD",2006.1,2006.1,126,0)
LAST ROUTING ACTIVITY^D^^LASTROUTE;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2006.1,2006.1,126,3)
Enter the date when routing was last active.
"^DD",2006.1,2006.1,126,21,0)
^^5^5^3050110^
"^DD",2006.1,2006.1,126,21,1,0)
The value of this field is a date (FileMan format, date only,
"^DD",2006.1,2006.1,126,21,2,0)
no time). This value indicates the most recent date
"^DD",2006.1,2006.1,126,21,3,0)
on which any routing activity took place at the current site.
"^DD",2006.1,2006.1,126,21,4,0)
  
"^DD",2006.1,2006.1,126,21,5,0)
Routing activity can be either Rule Evaluation or Image Transmission.
"^DD",2006.1,2006.1,126,"DT")
3050110
"^DD",2006.1,2006.1,130,0)
VERSION CHECKING^S^0:NO;1:YES;^KEYS;5^Q
"^DD",2006.1,2006.1,130,3)
Turn ON to stop Imaging Clients that are no longer supported, from connecting to VistA.
"^DD",2006.1,2006.1,130,21,0)
^.001^13^13^3050110^^
"^DD",2006.1,2006.1,130,21,1,0)
Turn ON to stop old versions of Imaging Display and Capture Clients
"^DD",2006.1,2006.1,130,21,2,0)
from connecting to VistA.
"^DD",2006.1,2006.1,130,21,3,0)
Old versions of the client software will sometimes not perform
"^DD",2006.1,2006.1,130,21,4,0)
correctly and will not have the latest updates and functionality.
"^DD",2006.1,2006.1,130,21,5,0)
When turned ON:
"^DD",2006.1,2006.1,130,21,6,0)
     The most recent versions of Client software will continue to
"^DD",2006.1,2006.1,130,21,7,0)
     work okay, but the user will be informed that a newer version
"^DD",2006.1,2006.1,130,21,8,0)
     exists.
"^DD",2006.1,2006.1,130,21,9,0)
     Old Client versions will not be allowed to connect to VistA.
"^DD",2006.1,2006.1,130,21,10,0)
     A message will be shown to the user, informing them that the
"^DD",2006.1,2006.1,130,21,11,0)
     version is too old, and will be aborted.
"^DD",2006.1,2006.1,130,21,12,0)
     Check the Imaging Patch Description for a list of
"^DD",2006.1,2006.1,130,21,13,0)
     previous versions that will be allowed to connect.
"^DD",2006.1,2006.1,130,"DT")
3050110
**END**
**END**
