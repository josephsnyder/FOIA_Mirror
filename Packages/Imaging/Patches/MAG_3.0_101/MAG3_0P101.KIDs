KIDS Distribution saved on Dec 16, 2009@16:41:06
VistARad patch 101
**KIDS**:MAG*3.0*101^

**INSTALL NAME**
MAG*3.0*101
"BLD",6023,0)
MAG*3.0*101^IMAGING^0^3091216^y
"BLD",6023,1,0)
^^1^1^3091106^^^^
"BLD",6023,1,1,0)
VistARad patch 101
"BLD",6023,4,0)
^9.64PA^2006.631^4
"BLD",6023,4,2006.63,0)
2006.63
"BLD",6023,4,2006.63,222)
n^y^f^^n^^y^m^n
"BLD",6023,4,2006.631,0)
2006.631
"BLD",6023,4,2006.631,222)
n^y^f^^n^^y^m^n
"BLD",6023,4,2006.631,224)
I $P(^(0),"^",2)=8001
"BLD",6023,4,2006.634,0)
2006.634
"BLD",6023,4,2006.634,222)
y^y^f^^^^n
"BLD",6023,4,2006.69,0)
2006.69
"BLD",6023,4,2006.69,2,0)
^9.641^2006.69^1
"BLD",6023,4,2006.69,2,2006.69,0)
MAG VISTARAD SITE PARAMETERS  (File-top level)
"BLD",6023,4,2006.69,2,2006.69,1,0)
^9.6411^13^1
"BLD",6023,4,2006.69,2,2006.69,1,13,0)
ENA DICT PREF-YES ALL LOCKED
"BLD",6023,4,2006.69,222)
y^y^p^^^^n^^n
"BLD",6023,4,2006.69,224)

"BLD",6023,4,"APDD",2006.69,2006.69)

"BLD",6023,4,"APDD",2006.69,2006.69,13)

"BLD",6023,4,"B",2006.63,2006.63)

"BLD",6023,4,"B",2006.631,2006.631)

"BLD",6023,4,"B",2006.634,2006.634)

"BLD",6023,4,"B",2006.69,2006.69)

"BLD",6023,6.3)
50
"BLD",6023,"ABNS",0)
^9.66A^^
"BLD",6023,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@DOMAIN.EXT
"BLD",6023,"INIT")
POSTINST^MAGJMN1
"BLD",6023,"KRN",0)
^9.67PA^8989.52^19
"BLD",6023,"KRN",.4,0)
.4
"BLD",6023,"KRN",.401,0)
.401
"BLD",6023,"KRN",.402,0)
.402
"BLD",6023,"KRN",.403,0)
.403
"BLD",6023,"KRN",.5,0)
.5
"BLD",6023,"KRN",.84,0)
.84
"BLD",6023,"KRN",3.6,0)
3.6
"BLD",6023,"KRN",3.8,0)
3.8
"BLD",6023,"KRN",9.2,0)
9.2
"BLD",6023,"KRN",9.8,0)
9.8
"BLD",6023,"KRN",9.8,"NM",0)
^9.68A^18^15
"BLD",6023,"KRN",9.8,"NM",1,0)
MAGJEX1^^0^B86728330
"BLD",6023,"KRN",9.8,"NM",3,0)
MAGJLS2^^0^B91361467
"BLD",6023,"KRN",9.8,"NM",4,0)
MAGJLS4^^0^B51027684
"BLD",6023,"KRN",9.8,"NM",5,0)
MAGJLS3^^0^B84076756
"BLD",6023,"KRN",9.8,"NM",6,0)
MAGJMN1^^0^B140332514
"BLD",6023,"KRN",9.8,"NM",7,0)
MAGJUPD1^^0^B61185644
"BLD",6023,"KRN",9.8,"NM",8,0)
MAGJUPD2^^0^B50457719
"BLD",6023,"KRN",9.8,"NM",9,0)
MAGJUTL1^^0^B69694036
"BLD",6023,"KRN",9.8,"NM",11,0)
MAGJUTL4^^0^B150484690
"BLD",6023,"KRN",9.8,"NM",12,0)
MAGJUTL5^^0^B32996102
"BLD",6023,"KRN",9.8,"NM",14,0)
MAGJLS2B^^0^B78466929
"BLD",6023,"KRN",9.8,"NM",15,0)
MAGJRPT^^0^B70154037
"BLD",6023,"KRN",9.8,"NM",16,0)
MAGJUTL3^^0^B91880385
"BLD",6023,"KRN",9.8,"NM",17,0)
MAGJLST1^^0^B50075739
"BLD",6023,"KRN",9.8,"NM",18,0)
MAGJEX1A^^0^B74324316
"BLD",6023,"KRN",9.8,"NM","B","MAGJEX1",1)

"BLD",6023,"KRN",9.8,"NM","B","MAGJEX1A",18)

"BLD",6023,"KRN",9.8,"NM","B","MAGJLS2",3)

"BLD",6023,"KRN",9.8,"NM","B","MAGJLS2B",14)

"BLD",6023,"KRN",9.8,"NM","B","MAGJLS3",5)

"BLD",6023,"KRN",9.8,"NM","B","MAGJLS4",4)

"BLD",6023,"KRN",9.8,"NM","B","MAGJLST1",17)

"BLD",6023,"KRN",9.8,"NM","B","MAGJMN1",6)

"BLD",6023,"KRN",9.8,"NM","B","MAGJRPT",15)

"BLD",6023,"KRN",9.8,"NM","B","MAGJUPD1",7)

"BLD",6023,"KRN",9.8,"NM","B","MAGJUPD2",8)

"BLD",6023,"KRN",9.8,"NM","B","MAGJUTL1",9)

"BLD",6023,"KRN",9.8,"NM","B","MAGJUTL3",16)

"BLD",6023,"KRN",9.8,"NM","B","MAGJUTL4",11)

"BLD",6023,"KRN",9.8,"NM","B","MAGJUTL5",12)

"BLD",6023,"KRN",19,0)
19
"BLD",6023,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6023,"KRN",19,"NM",1,0)
MAGJ VISTARAD WINDOWS^^0
"BLD",6023,"KRN",19,"NM","B","MAGJ VISTARAD WINDOWS",1)

"BLD",6023,"KRN",19.1,0)
19.1
"BLD",6023,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",6023,"KRN",19.1,"NM",1,0)
MAGJ OVERRIDE ANNOTATIONS^^0
"BLD",6023,"KRN",19.1,"NM","B","MAGJ OVERRIDE ANNOTATIONS",1)

"BLD",6023,"KRN",101,0)
101
"BLD",6023,"KRN",409.61,0)
409.61
"BLD",6023,"KRN",771,0)
771
"BLD",6023,"KRN",870,0)
870
"BLD",6023,"KRN",8989.51,0)
8989.51
"BLD",6023,"KRN",8989.52,0)
8989.52
"BLD",6023,"KRN",8994,0)
8994
"BLD",6023,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",6023,"KRN",8994,"NM",1,0)
MAGJ MAGDATADUMP^^0
"BLD",6023,"KRN",8994,"NM","B","MAGJ MAGDATADUMP",1)

"BLD",6023,"KRN","B",.4,.4)

"BLD",6023,"KRN","B",.401,.401)

"BLD",6023,"KRN","B",.402,.402)

"BLD",6023,"KRN","B",.403,.403)

"BLD",6023,"KRN","B",.5,.5)

"BLD",6023,"KRN","B",.84,.84)

"BLD",6023,"KRN","B",3.6,3.6)

"BLD",6023,"KRN","B",3.8,3.8)

"BLD",6023,"KRN","B",9.2,9.2)

"BLD",6023,"KRN","B",9.8,9.8)

"BLD",6023,"KRN","B",19,19)

"BLD",6023,"KRN","B",19.1,19.1)

"BLD",6023,"KRN","B",101,101)

"BLD",6023,"KRN","B",409.61,409.61)

"BLD",6023,"KRN","B",771,771)

"BLD",6023,"KRN","B",870,870)

"BLD",6023,"KRN","B",8989.51,8989.51)

"BLD",6023,"KRN","B",8989.52,8989.52)

"BLD",6023,"KRN","B",8994,8994)

"BLD",6023,"PRE")
MAGJMN1
"BLD",6023,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",6023,"QUES",0)
^9.62^^
"BLD",6023,"REQB",0)
^9.611^1^1
"BLD",6023,"REQB",1,0)
MAG*3.0*76^1
"BLD",6023,"REQB","B","MAG*3.0*76",1)

"DATA",2006.63,1,0)
CASE NUMBER^Case #^^^^1^^S3
"DATA",2006.63,2,0)
EXAM LOCK INDICATOR^Lock^^^^2
"DATA",2006.63,3,0)
PATIENT NAME^Patient Name^^^^3
"DATA",2006.63,4,0)
PATIENT ID^ID #^^^^4
"DATA",2006.63,5,0)
PRIORITY^Priority^^^^5^1
"DATA",2006.63,6,0)
PROCEDURE^Procedure^^^^6
"DATA",2006.63,7,0)
IMAGE DATE/TIME^Image Date/Time^^^^7^^S1
"DATA",2006.63,8,0)
STATUS^Status^^^^8
"DATA",2006.63,9,0)
NUMBER OF IMAGES^# Img^# Img^^^9^1^S2
"DATA",2006.63,10,0)
ONLINE STATUS^Onl^^^^10
"DATA",2006.63,11,0)
IMAGING LOCATION^Imaging Loc^^^^13
"DATA",2006.63,12,0)
REMOTE CACHE INDICATOR^RC^RC^^^11
"DATA",2006.63,13,0)
IMAGES EXIST INDICATOR^MAGSRT^^1^^51^1
"DATA",2006.63,14,0)
IMAGE DATE/TIME-SORTABLE^SORT_IMG_DT^^1^^50^1
"DATA",2006.63,15,0)
MODALITY^Mod^^^^12
"DATA",2006.63,16,0)
INTERNAL EXAM STATUS^IntStat^^^1^52
"DATA",2006.63,17,0)
IMAGE TYPE ABBREVIATION^ImgType^^^^15
"DATA",2006.63,18,0)
PATIENT LOCATION ABBREV^Pt Loc'n Abb^^^^14
"DATA",2006.63,19,0)
PATIENT LOCATION NAME^Pt Loc'n Name^^^^14.5
"DATA",2006.63,20,0)
INTERPRETING RADIOLOGISTS^Interp By^^^^14.7
"DATA",2006.63,21,0)
SSN LAST 4^SSN-4^^^^4.3^1^S2
"DATA",2006.63,22,0)
RADIOLOGY DIVISION^Rad Div^Rad Div^^^13.3
"DATA",2006.63,23,0)
SITE CODE^SITE CODE^SITE^^^13.5
"DATA",2006.63,24,0)
INTERP BY LOGON RADIOLOGIST?^Interp By Me?^^^^53
"DATA",2006.63,25,0)
PROCEDURE MODIFIER^Modifier^Modifier^^^6.3
"DATA",2006.63,26,0)
PATIENT LOCATION TYPE^PT LOC TYPE^Loc'n Type^^^14.3
"DATA",2006.63,27,0)
CPT CODE^CPT^CPT^^^16
"DATA",2006.63,28,0)
WARD^WARD^WARD^^^13.8
"DATA",2006.63,29,0)
HISTORY IEN^HISTIEN^IEN^0^1^12.8^1^S2
"DATA",2006.63,30,0)
HISTORY TIME^HIST_TIME^TIMESTAMP^0^1^12.5^1^S1
"DATA",2006.63,31,0)
HISTORY LOCKED^HIST_LOCK^LOCK?^0^1^12.6^1
"DATA",2006.63,32,0)
HISTORY HP^HIST_HP^HP/TP^0^1^12.7
"DATA",2006.63,33,0)
TECH INITIALS^TECH^TECH^^^17.0
"DATA",2006.63,34,0)
REGISTRATION DATE^REG DATE^REG DATE^^^17.3^^S1
"DATA",2006.63,35,0)
REGISTRATION DATE-SORTABLE^REG DATE-SORT^REG DATE-SORT^1^^17.5^1^S1
"DATA",2006.631,11,0)
MY RECENT EXAMS^8001^R^ALL^3090410.125923^1^MY RECENT EXAMS
"DATA",2006.631,11,1,0)
^2006.6311PA^11^10
"DATA",2006.631,11,1,1,0)
1
"DATA",2006.631,11,1,2,0)
2
"DATA",2006.631,11,1,3,0)
3
"DATA",2006.631,11,1,4,0)
5
"DATA",2006.631,11,1,5,0)
6
"DATA",2006.631,11,1,6,0)
7
"DATA",2006.631,11,1,8,0)
9
"DATA",2006.631,11,1,9,0)
15
"DATA",2006.631,11,1,10,0)
8
"DATA",2006.631,11,1,11,0)
20
"DATA",2006.631,11,2,0)
^2006.6312PA^1^1
"DATA",2006.631,11,2,1,0)
3^0
"DATA",2006.631,11,"DEF",0)
3090410.125923
"DATA",2006.631,11,"DEF",.5)
Case #~S3~1^Lock~~2^Patient Name~~3^Priority~~5^Procedure~~6^Image Date/Time~S1~7^Status~~8^# Img~S2~9^Mod~~15^Interp By~~20
"DATA",2006.631,11,"DEF",1)
1^2^3^5^6^7^8^9^15^20
"DATA",2006.631,11,"DEF",2)
3
"DATA",2006.631,11,"DEF",3,0)
1
"DATA",2006.631,11,"DEF",3,1)
24^="Y"
"DATA",2006.631,11,"DEF",4,0)
1
"DATA",2006.631,11,"DEF",4,1)
^1^
"DATA",2006.631,11,"DEF",5,1)
INTERP BY LOGON RADIOLOGIST? EQUALS "Y"^YES
"FIA",2006.63)
MAG RAD LIST DATA ELEMENTS
"FIA",2006.63,0)
^MAG(2006.63,
"FIA",2006.63,0,0)
2006.63
"FIA",2006.63,0,1)
n^y^f^^n^^y^m^n
"FIA",2006.63,0,10)

"FIA",2006.63,0,11)

"FIA",2006.63,0,"RLRO")

"FIA",2006.63,0,"VR")
3.0^MAG
"FIA",2006.63,2006.63)
0
"FIA",2006.631)
MAG RAD LISTS DEFINITION
"FIA",2006.631,0)
^MAG(2006.631,
"FIA",2006.631,0,0)
2006.631I
"FIA",2006.631,0,1)
n^y^f^^n^^y^m^n
"FIA",2006.631,0,10)

"FIA",2006.631,0,11)
I $P(^(0),"^",2)=8001
"FIA",2006.631,0,"RLRO")

"FIA",2006.631,0,"VR")
3.0^MAG
"FIA",2006.631,2006.631)
0
"FIA",2006.631,2006.6311)
0
"FIA",2006.631,2006.6312)
0
"FIA",2006.634)
MAGJ ZLIST SEARCH
"FIA",2006.634,0)
^MAG(2006.634,
"FIA",2006.634,0,0)
2006.634
"FIA",2006.634,0,1)
y^y^f^^^^n
"FIA",2006.634,0,10)

"FIA",2006.634,0,11)

"FIA",2006.634,0,"RLRO")

"FIA",2006.634,0,"VR")
3.0^MAG
"FIA",2006.634,2006.634)
0
"FIA",2006.69)
MAG VISTARAD SITE PARAMETERS
"FIA",2006.69,0)
^MAG(2006.69,
"FIA",2006.69,0,0)
2006.69
"FIA",2006.69,0,1)
y^y^p^^^^n^^n
"FIA",2006.69,0,10)

"FIA",2006.69,0,11)

"FIA",2006.69,0,"RLRO")

"FIA",2006.69,0,"VR")
3.0^MAG
"FIA",2006.69,2006.69)
1
"FIA",2006.69,2006.69,13)

"INIT")
POSTINST^MAGJMN1
"KRN",19,20839,-1)
0^1
"KRN",19,20839,0)
MAGJ VISTARAD WINDOWS^MAGJ VISTARAD RPC'S^^B^^^^^^^^
"KRN",19,20839,1,0)
^19.06^1^1^3010321^^^
"KRN",19,20839,1,1,0)
This option is the Broker entry for holding the Imaging VistaRad RPC's.
"KRN",19,20839,99.1)
58510,33726
"KRN",19,20839,"RPC",0)
^19.05P^46^45
"KRN",19,20839,"RPC",1,0)
MAGJ CACHELOCATION
"KRN",19,20839,"RPC",3,0)
MAGJ PTRADEXAMS
"KRN",19,20839,"RPC",4,0)
MAGJ RADACTIVEEXAMS
"KRN",19,20839,"RPC",5,0)
MAGJ RADCASEIMAGES
"KRN",19,20839,"RPC",6,0)
MAGJ RADSTATUSUPDATE
"KRN",19,20839,"RPC",7,0)
MAGJ CUSTOM LISTS
"KRN",19,20839,"RPC",8,0)
MAGGUSER2
"KRN",19,20839,"RPC",11,0)
MAGGRADREPORT
"KRN",19,20839,"RPC",12,0)
MAGGDGRPD
"KRN",19,20839,"RPC",13,0)
MAGGHSLIST
"KRN",19,20839,"RPC",14,0)
MAGGHS
"KRN",19,20839,"RPC",15,0)
MAGJ RADORDERDISP
"KRN",19,20839,"RPC",16,0)
MAGG PAT FIND
"KRN",19,20839,"RPC",17,0)
MAGG PAT INFO
"KRN",19,20839,"RPC",18,0)
MAGG PAT BS5 CHECK
"KRN",19,20839,"RPC",19,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,20839,"RPC",20,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,20839,"RPC",21,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,20839,"RPC",22,0)
MAGJ PT ALL EXAMS
"KRN",19,20839,"RPC",23,0)
MAGJ EXAM REPORT
"KRN",19,20839,"RPC",25,0)
MAGJ ROUTE ENABLE
"KRN",19,20839,"RPC",26,0)
MAGJ ROUTE EXAMS
"KRN",19,20839,"RPC",27,0)
MAGJ ROUTE REQUEST
"KRN",19,20839,"RPC",28,0)
MAGJ LOGOFF
"KRN",19,20839,"RPC",29,0)
MAGJ PT INFO
"KRN",19,20839,"RPC",30,0)
MAGJ USER DATA
"KRN",19,20839,"RPC",31,0)
MAGJ USER2
"KRN",19,20839,"RPC",32,0)
MAGJ STUDY_DATA
"KRN",19,20839,"RPC",33,0)
MAGJ HISTORYLIST
"KRN",19,20839,"RPC",34,0)
MAGJ CPTMATCH
"KRN",19,20839,"RPC",35,0)
MAGJ RADCASELOCKS
"KRN",19,20839,"RPC",36,0)
MAGJ RADSTATUSCHECK
"KRN",19,20839,"RPC",37,0)
MAGJ PRIOREXAMS
"KRN",19,20839,"RPC",38,0)
MAGJ REMOTESCREEN
"KRN",19,20839,"RPC",39,0)
MAGG GET TIMEOUT
"KRN",19,20839,"RPC",40,0)
MAGD CT PARAMS
"KRN",19,20839,"RPC",41,0)
MAGD CR PARAMS
"KRN",19,20839,"RPC",42,0)
MAGJ MAGDATADUMP
"KRN",19,20839,"RPC",44,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,20839,"RPC",45,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,20839,"RPC",46,0)
VAFCTFU GET TREATING LIST
"KRN",19,20839,"U")
MAGJ VISTARAD RPC'S
"KRN",19.1,865,-1)
0^1
"KRN",19.1,865,0)
MAGJ OVERRIDE ANNOTATIONS^OVERRIDE STORED ANNOTATIONS
"KRN",19.1,865,1,0)
^19.11^2^2^3090213^^
"KRN",19.1,865,1,1,0)
Allow the user to save edits made to image annotations for an
"KRN",19.1,865,1,2,0)
exam having an Examination Status COMPLETE.
"KRN",8994,2318,-1)
0^1
"KRN",8994,2318,0)
MAGJ MAGDATADUMP^DATADUMP^MAGJUTL4^4^R^0^^1^1^^0
"KRN",8994,2318,1,0)
^8994.01^15^15^3090420^^^^
"KRN",8994,2318,1,1,0)
  +---------------------------------------------------------------+
"KRN",8994,2318,1,2,0)
  | Property of the US Government.                                |
"KRN",8994,2318,1,3,0)
  | No permission to copy or redistribute this software is given. |
"KRN",8994,2318,1,4,0)
  | Use of unreleased versions of this software requires the user |
"KRN",8994,2318,1,5,0)
  | to execute a written test agreement with the VistA Imaging    |
"KRN",8994,2318,1,6,0)
  | Development Office of the Department of Veterans Affairs,     |
"KRN",8994,2318,1,7,0)
  | telephone (301) 734-0100.                                     |
"KRN",8994,2318,1,8,0)
  |                                                               |
"KRN",8994,2318,1,9,0)
  | The Food and Drug Administration classifies this software as  |
"KRN",8994,2318,1,10,0)
  | a medical device.  As such, it may not be changed in any way. |
"KRN",8994,2318,1,11,0)
  | Modifications to this software may result in an adulterated   |
"KRN",8994,2318,1,12,0)
  | medical device under 21CFR820, the use of which is considered |
"KRN",8994,2318,1,13,0)
  | to be a violation of US Federal Statutes.                     |
"KRN",8994,2318,1,14,0)
  +---------------------------------------------------------------+
"KRN",8994,2318,1,15,0)
Imaging Vistarad RPC for displaying internal Imaging data
"KRN",8994,2318,2,0)
^8994.02A^1^1
"KRN",8994,2318,2,1,0)
DATA^1^256^1^1
"KRN",8994,2318,2,1,1,0)
^8994.021^10^10^3090420^^^^
"KRN",8994,2318,2,1,1,1,0)
'DATA' HAS THE FOLLOWING STRUCTURE: "REQUEST^PARAM1|PARAM2"
"KRN",8994,2318,2,1,1,2,0)
   'REQUEST' IS REQUIRED AND MUST BE A MEMBER OF "CPT,FLDS,GLB".
"KRN",8994,2318,2,1,1,3,0)
      'PARAM1' IS REQUIRED TO HOLD A CPT CODE IFF 'REQUEST'="CPT".
"KRN",8994,2318,2,1,1,4,0)
      'PARAM1' IS OPTIONAL TO HOLD FILEMAN FLAGS IFF 'REQUEST'="FLDS".
"KRN",8994,2318,2,1,1,5,0)
      'PARAM2' IS NOT USED IFF 'REQUEST'="CPT".
"KRN",8994,2318,2,1,1,6,0)
      'PARAM2' IS REQUIRED IF 'REQUEST'="FLDS" OR 'REQUEST'="GLB".
"KRN",8994,2318,2,1,1,7,0)
         IN EITHER CASE, 'PARAM2' MAY HOLD:
"KRN",8994,2318,2,1,1,8,0)
           AN INTEGER REPRESENTING THE IMAGE IEN, OR
"KRN",8994,2318,2,1,1,9,0)
           A CARET-DELIMITED 3 PIECE PARTIAL CASE/EXAM ID STRING, OR
"KRN",8994,2318,2,1,1,10,0)
           A CARET-DELIMITED 4 PIECE COMPLETE CASE/EXAM ID STRING.
"KRN",8994,2318,2,"B","DATA",1)

"KRN",8994,2318,2,"PARAMSEQ",1,1)

"KRN",8994,2318,3,0)
^8994.03^4^4^3090420^^^^
"KRN",8994,2318,3,1,0)
THIS RPC RETURNS 1:N TEXT LINES, PER INPUT REQUEST:
"KRN",8994,2318,3,2,0)
  'CPT' : CPT DESCRIPTION, BODY PART, MODALITY AND MATCHING CPTS.
"KRN",8994,2318,3,3,0)
  'FLDS': A LISTING OF ^MAG(2005, FIELDS FOR A PROVIDED IMAGE IEN.
"KRN",8994,2318,3,4,0)
  'GLB' : A LISTING OF THE ^MAG(2005, "RAW" GLOBAL DATA.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020517^126
"PKG",454,22,1,"PAH",1,0)
101^3091216
"PKG",454,22,1,"PAH",1,1,0)
^^1^1^3091216
"PKG",454,22,1,"PAH",1,1,1,0)
VistARad patch 101
"PRE")
MAGJMN1
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","MAGJEX1")
0^1^B86728330
"RTN","MAGJEX1",1,0)
MAGJEX1 ;WIRMFO/JHC VistARad RPC calls ; 27 May 2009 8:48 PM
"RTN","MAGJEX1",2,0)
 ;;3.0;IMAGING;**16,22,18,65,101**;Nov 06, 2009;Build 50
"RTN","MAGJEX1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJEX1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJEX1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJEX1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJEX1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJEX1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJEX1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJEX1",11,0)
 ;; |                                                               |
"RTN","MAGJEX1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJEX1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJEX1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJEX1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJEX1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJEX1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1",18,0)
 ;;
"RTN","MAGJEX1",19,0)
 Q
"RTN","MAGJEX1",20,0)
 ;
"RTN","MAGJEX1",21,0)
 ;
"RTN","MAGJEX1",22,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR
"RTN","MAGJEX1",23,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJEX1",24,0)
 Q:$Q 1  Q
"RTN","MAGJEX1",25,0)
 ;
"RTN","MAGJEX1",26,0)
 ;***** Open an exam.
"RTN","MAGJEX1",27,0)
 ; RPC: MAGJ RADCASEIMAGES
"RTN","MAGJEX1",28,0)
 ;
"RTN","MAGJEX1",29,0)
OPENCASE(MAGGRY,DATA) ;
"RTN","MAGJEX1",30,0)
 ; MAGGRY holds $NA reference to ^TMP for rpc return
"RTN","MAGJEX1",31,0)
 ;   all ref's to MAGGRY use subscript indirection
"RTN","MAGJEX1",32,0)
 ; input in DATA:
"RTN","MAGJEX1",33,0)
 ; OPEN_FLAG^RADFN^RADTI^RACNI^RARPT^SERDISA^STK/LAY^USETGA
"RTN","MAGJEX1",34,0)
 ; OPEN_FLAG = 1/0 - 1: OPEN the case for update; else, view-only
"RTN","MAGJEX1",35,0)
 ;           =  /2   2: Reserve for Interp  ; * P18
"RTN","MAGJEX1",36,0)
 ; RADFN^RADTI^RACNI specify case of interest
"RTN","MAGJEX1",37,0)
 ; SERDISA = 1/0 - Disable Mult Series processing if true * n/a for P18
"RTN","MAGJEX1",38,0)
 ; STK/LAY = 1/0 - 1:Open in Stack; 0:Open in Layout * n/a for P18
"RTN","MAGJEX1",39,0)
 ; USETGA  = 1/0 - 1:Open .TGA file; 0:Open .BIG file
"RTN","MAGJEX1",40,0)
 ; 
"RTN","MAGJEX1",41,0)
 ; * In P18, the SERDISA position is re-cycled to pass in PS_Indicator_Type values of interest
"RTN","MAGJEX1",42,0)
 ;       K/I/U for Key Image/ Interpretation/ User PS types; used in IMGLOOP^MAGJEX1B
"RTN","MAGJEX1",43,0)
 ;
"RTN","MAGJEX1",44,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJEX1"
"RTN","MAGJEX1",45,0)
 N RARPT,RADFN,RADTI,RACNI,RADIV
"RTN","MAGJEX1",46,0)
 N DAYCASE,CURCASE,REPLY,CT,MAGS,STARTNOD,LOCKED,DATAOUT,RADATA,RIST,MDL
"RTN","MAGJEX1",47,0)
 N IMAG,MAGXX,MAGFILE,MAGFILE1,MAGFILE2,MAGFILE3,MAGLST,MAGOBJT,MODALITY
"RTN","MAGJEX1",48,0)
 N SERDISA,MAGSTRT,MAGEND,SERLBL,SERBRK,SERLIM,NSERIES,CURPATHS
"RTN","MAGJEX1",49,0)
 N MIXEDUP,VIEWOK,STKLAY,USETGA,OPENCNT,USELORES,IMGST,REMOTE,DIQUIET
"RTN","MAGJEX1",50,0)
 N LOGDATA,MODIF,EXCAT,RADATA2,PSIND,RACPT,RASTCAT,RASTORD,ACQSITE,ALTPATH,PROCDT
"RTN","MAGJEX1",51,0)
 N YNMAMMO,YNREVANN
"RTN","MAGJEX1",52,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJEX1",53,0)
 S (CT,MIXEDUP)=0,MODALITY="",DATAOUT="",DAYCASE="",MAGLST="MAGJOPENCASE",(ACQSITE,ALTPATH,PROCDT)=""
"RTN","MAGJEX1",54,0)
 S VIEWOK=1,OPENCNT=1
"RTN","MAGJEX1",55,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)),STARTNOD=0 K @MAGGRY  ; assign MAGGRY value
"RTN","MAGJEX1",56,0)
 S CURCASE=$P(DATA,U),RARPT=+$P(DATA,U,5),SERDISA=+$P(DATA,U,6)
"RTN","MAGJEX1",57,0)
 I 'MAGJOB("P32") S PSIND="",X=$P(DATA,U,6) I X]"" F I="K","I","U" I $F(X,I) S PSIND(I)=""
"RTN","MAGJEX1",58,0)
 S STKLAY=+$P(DATA,U,7),USETGA=+$P(DATA,U,8)
"RTN","MAGJEX1",59,0)
 S RADFN=$P(DATA,U,2),RADTI=$P(DATA,U,3),RACNI=$P(DATA,U,4)
"RTN","MAGJEX1",60,0)
 I RADFN,RADTI,RACNI D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,"",.X)
"RTN","MAGJEX1",61,0)
 I 'X S REPLY="4~Request Contains Invalid Case Pointer ("_RADFN_U_RADTI_U_RACNI_U_RARPT_")." G OPENCASZ
"RTN","MAGJEX1",62,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1)),RADATA2=$G(^(2))
"RTN","MAGJEX1",63,0)
 K ^TMP($J,"MAGRAEX")
"RTN","MAGJEX1",64,0)
 S RADIV=$P(RADATA2,U,5),MODIF=$P(RADATA2,U,8),RASTCAT=$P(RADATA2,U,11),RASTORD=$P(RADATA,U,15)
"RTN","MAGJEX1",65,0)
 S RARPT=+$P(RADATA,U,10),DAYCASE=$P(RADATA,U,12),RACPT=$P(RADATA,U,17)
"RTN","MAGJEX1",66,0)
 I 'RARPT!'$D(^RARPT(RARPT,2005)) S REPLY="4~This exam has no report entry for associating images; no images can be accessed." G OPENCASZ
"RTN","MAGJEX1",67,0)
 D CKINTEG^MAGJRPT(.X,RADFN,RADTI,RACNI,RARPT,RADATA)
"RTN","MAGJEX1",68,0)
 I X]"" S MIXEDUP=1,MIXEDUP("REPLY")=X ; DB corruption
"RTN","MAGJEX1",69,0)
 S REPLY="4~Attempting to open/display case #"_DAYCASE
"RTN","MAGJEX1",70,0)
 S IMGST=$$JBFETCH^MAGJUTL2(RARPT,.MAGS,USETGA)  ; open only if NOT on JB
"RTN","MAGJEX1",71,0)
 I +IMGST D  G OPENCASZ
"RTN","MAGJEX1",72,0)
 . I $D(MAGS("OFFLN")) N T,TT S T="",TT="" D
"RTN","MAGJEX1",73,0)
 .. F  S T=$O(MAGS("OFFLN",T)) Q:T=""  S TT=TT_$S(TT="":"",1:", ")_T
"RTN","MAGJEX1",74,0)
 .. S REPLY="2~Case #"_DAYCASE_"--Images for this exam are stored OFF-LINE.  To view these images, contact your Imaging Coordinator, and request mounting of the following platters: "_TT
"RTN","MAGJEX1",75,0)
 . E  S REPLY="2~Case #"_DAYCASE_"--"_+IMGST_" Images have been requested from Jukebox; try again later."
"RTN","MAGJEX1",76,0)
 I '$P(IMGST,U,2) S REPLY="2~No Images exist for Case #"_DAYCASE_"." G OPENCASZ
"RTN","MAGJEX1",77,0)
 S USELORES=+$P(IMGST,U,3)_U_$P(IMGST,U,2)
"RTN","MAGJEX1",78,0)
 ; set up series info (*back compat for P32)
"RTN","MAGJEX1",79,0)
 I (STKLAY&SERDISA)!'MAGJOB("P32") S STKLAY=3 ; disable series in Stacker or post-patch 32
"RTN","MAGJEX1",80,0)
 N SERHI S SERHI=$G(MAGS("SER",0))
"RTN","MAGJEX1",81,0)
 K SERBRK
"RTN","MAGJEX1",82,0)
 I SERHI>1,$P($G(^MAG(2006.69,1,0)),U,12) D  ;  Process for mult. Series
"RTN","MAGJEX1",83,0)
 . Q:SERDISA  ; user disabled from w/s
"RTN","MAGJEX1",84,0)
 . Q:STKLAY  ; Don't do this for Stacker
"RTN","MAGJEX1",85,0)
 . N SERCT,SERSTR I '$D(SERLIM) S SERLIM=5 ; min size for a series
"RTN","MAGJEX1",86,0)
 . S SERSTR="",SERCT=0,SERBRK(0)=0
"RTN","MAGJEX1",87,0)
 . ; step 1: roll up "small" series at the bottom to next higher ones
"RTN","MAGJEX1",88,0)
 . F  Q:(MAGS("SER",SERHI)'<SERLIM)!(SERHI=1)  D
"RTN","MAGJEX1",89,0)
 .. S X=MAGS("SER",SERHI),Y=MAGS("SER",SERHI-1),Y=Y+X_U_$P(Y,U,2)_", "_$P(X,U,2)
"RTN","MAGJEX1",90,0)
 .. S SERHI=SERHI-1,MAGS("SER",SERHI)=Y
"RTN","MAGJEX1",91,0)
 . I SERHI<2 K SERBRK Q  ; no "real" series to enumerate
"RTN","MAGJEX1",92,0)
 . ; step 2: from top, fold "small" series into next lower ones
"RTN","MAGJEX1",93,0)
 . F I=1:1:SERHI S X=MAGS("SER",I),SERCT=SERCT+X D
"RTN","MAGJEX1",94,0)
 .. I +X'<SERLIM S SERBRK(SERCT)=SERSTR_$S(SERSTR="":"",1:", ")_$P(X,U,2),SERSTR="",SERBRK(0)=SERBRK(0)+1
"RTN","MAGJEX1",95,0)
 .. E  S SERSTR=SERSTR_$S(SERSTR="":"",1:", ")_$P(X,U,2)
"RTN","MAGJEX1",96,0)
 . I '$D(SERBRK(SERCT)) S SERBRK(SERCT)=SERSTR,SERBRK(0)=SERBRK(0)+1
"RTN","MAGJEX1",97,0)
 . I SERBRK(SERCT)<2 K SERBRK  ; only one "series" resulted
"RTN","MAGJEX1",98,0)
 I $D(SERBRK) S SERBRK=0,NSERIES=SERBRK(0) D
"RTN","MAGJEX1",99,0)
 . F  S MAGSTRT=SERBRK+1,SERBRK=$O(SERBRK(SERBRK)) Q:'SERBRK  S MAGEND=SERBRK,SERLBL="*S^Series "_SERBRK(SERBRK) D IMGLOOP^MAGJEX1B
"RTN","MAGJEX1",100,0)
 E  S MAGSTRT=1,MAGEND=MAGS,NSERIES=1 D IMGLOOP^MAGJEX1B
"RTN","MAGJEX1",101,0)
 ;
"RTN","MAGJEX1",102,0)
 I ACQSITE="" S ACQSITE=RADIV
"RTN","MAGJEX1",103,0)
 ; 
"RTN","MAGJEX1",104,0)
 ; Conditionally support revising an unlocked exam's annotations as a function
"RTN","MAGJEX1",105,0)
 ;   of exam status and credentials of (current & original) interpreter (P101).
"RTN","MAGJEX1",106,0)
 S YNREVANN=$$ZRUREVAN^MAGJUTL4(RADFN,RADTI,RACNI)
"RTN","MAGJEX1",107,0)
 ; 
"RTN","MAGJEX1",108,0)
 ; Return flag to allow display of disclaimer text if ExamType="Mammogram".
"RTN","MAGJEX1",109,0)
 ;   Note the VRad client may override based on image metadata (P101).
"RTN","MAGJEX1",110,0)
 S YNMAMMO=$$ZRUMAMMO^MAGJUTL4(RACPT)
"RTN","MAGJEX1",111,0)
 ; 
"RTN","MAGJEX1",112,0)
 ; 
"RTN","MAGJEX1",113,0)
 S REPLY="0~Images for Case #"_DAYCASE
"RTN","MAGJEX1",114,0)
 ;
"RTN","MAGJEX1",115,0)
OPENCASZ I 'CT,(REPLY["Attempting") S REPLY="4~Unable to retrieve images for Case #"_DAYCASE_"."
"RTN","MAGJEX1",116,0)
 ;
"RTN","MAGJEX1",117,0)
 ; 3090406 -- MAT -- Eliminated "|"-piece 2 data: {Exam ID String} obsolete  (per SPK).
"RTN","MAGJEX1",118,0)
 ;                -- Eliminated "|"-piece 3 data: {# Images} not set by code.
"RTN","MAGJEX1",119,0)
 ;                -- Modified   "|"-piece 4 data: "^"-pieces 5 & 6 (Patch 101).
"RTN","MAGJEX1",120,0)
 ;
"RTN","MAGJEX1",121,0)
 ; Contents of successful reply = 4 pipe ("|") pieces:
"RTN","MAGJEX1",122,0)
 ;1: # nodes below ^ Reply Msg Type ~ Reply Msg display text
"RTN","MAGJEX1",123,0)
 ;2: {radfn} ^ {radti} ^ {racni} ^ {rarpt} ;; a.k.a., Exam ID String.
"RTN","MAGJEX1",124,0)
 ;3: Pt Name ^ CASE # ^ {# Images ^} Proc. Name ^ Exam Date ^ Time ^
"RTN","MAGJEX1",125,0)
 ;     modality ^ SSN ^ Stack/Layout ^ LOCKED? (1/2/0) [^ if only 1 series]
"RTN","MAGJEX1",126,0)
 ;4: Is Radiologist? ^ # Series ^ Alt_Path Flag ^ Opened Exam Count? ^ Revise Annotations (Y/N)? ^ Is Mammogram (Y/N)? 
"RTN","MAGJEX1",127,0)
 ;
"RTN","MAGJEX1",128,0)
 S REMOTE=+MAGJOB("REMOTE")
"RTN","MAGJEX1",129,0)
 S LOCKED=0
"RTN","MAGJEX1",130,0)
 I MIXEDUP D
"RTN","MAGJEX1",131,0)
 . N IMIX,XDFN,XPTS S VIEWOK=$S($D(MAGJOB("KEYS","MAGJ SEE BAD IMAGES")):1,1:0)
"RTN","MAGJEX1",132,0)
 . I MIXEDUP>1 D
"RTN","MAGJEX1",133,0)
 .. S XPTS="",XDFN=0 F IMIX=0:1 S XDFN=$O(MIXEDUP(XDFN)) Q:'XDFN  S XPTS=XPTS_$S(IMIX:" and ",1:" ")_$$PNAM(XDFN)
"RTN","MAGJEX1",134,0)
 .. S XPTS=$S(IMIX=1:" ",1:"s ")_XPTS
"RTN","MAGJEX1",135,0)
 .. S REPLY=(7-VIEWOK)_"~This exam is registered for "_$$PNAM(RADFN)_"; however, it is linked to images for patient"_XPTS_".  This is a serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJEX1",136,0)
 . E  S REPLY=(7-VIEWOK)_"~"_MIXEDUP("REPLY")
"RTN","MAGJEX1",137,0)
 . I CURCASE S REPLY=REPLY_"  The exam is NOT Locked." S CURCASE=0
"RTN","MAGJEX1",138,0)
 I CT D
"RTN","MAGJEX1",139,0)
 . S RIST=$S(+MAGJOB("USER",1):1,1:0),EXCAT=""
"RTN","MAGJEX1",140,0)
 . S LOGDATA=RADFN_U_+$P(MAGS(1),U,4)_U_+MAGS_U_REMOTE ; for Img Access log
"RTN","MAGJEX1",141,0)
 . I CURCASE D
"RTN","MAGJEX1",142,0)
 . . I $G(MAGJOB("CONSOLIDATED")),'$D(MAGJOB("DIVSCRN",RADIV)) D  S CURCASE=0  Q
"RTN","MAGJEX1",143,0)
 . . . S REPLY="5~Exam is for Station #"_$$STATN(RADIV)_"; you are logged on to #"_$$STATN(DUZ(2))_".  Exam is NOT Locked."
"RTN","MAGJEX1",144,0)
 . . S XX=$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,3)
"RTN","MAGJEX1",145,0)
 . . I '$D(^RA(72,"AVC","E",XX)) D  S CURCASE=0  Q
"RTN","MAGJEX1",146,0)
 . . . I 'MAGJOB("P32") D
"RTN","MAGJEX1",147,0)
 . . . . D LOCKACT^MAGJEX1A(RARPT,DAYCASE,100,.RESULT) ; between reserve and now, exam may have been Taken & Updated
"RTN","MAGJEX1",148,0)
 . . . . I +RESULT(1)!+RESULT(2) D LOCKACT^MAGJEX1A(RARPT,DAYCASE,101,.RESULT) ; so, cancel any lock/reserve
"RTN","MAGJEX1",149,0)
 . . . S REPLY="5~For Case #"_DAYCASE_", current Status is "_$P(^RA(72,XX,0),U)_"; Lock or Reserve NOT allowed."
"RTN","MAGJEX1",150,0)
 . . E  S EXCAT="E"
"RTN","MAGJEX1",151,0)
 . . I RIST,'USELORES D  ; lock only for Current Case, Radiologist, & Full Res images
"RTN","MAGJEX1",152,0)
 . . . ;  save data needed to later log Interpreted event
"RTN","MAGJEX1",153,0)
 . . . D LOCKACT^MAGJEX1A(RARPT,DAYCASE,CURCASE,.RESULT,.REPLY,LOGDATA)
"RTN","MAGJEX1",154,0)
 . . . S LOCKED=$S(+RESULT:1,+$P(RESULT,U,2):2,1:0)
"RTN","MAGJEX1",155,0)
 . I EXCAT="" D
"RTN","MAGJEX1",156,0)
 . . I RASTORD=9 S EXCAT="C" Q  ; Complete
"RTN","MAGJEX1",157,0)
 . . E  S EXCAT=RASTCAT
"RTN","MAGJEX1",158,0)
 . . I EXCAT="D"!(EXCAT="T") S EXCAT="I" ; just display one value meaning Interpreted
"RTN","MAGJEX1",159,0)
 . ;
"RTN","MAGJEX1",160,0)
 . ; 3090406 -- MAT -- Commented out Patch 32-related logic as obsolete (per SPK).
"RTN","MAGJEX1",161,0)
 . ; I MAGJOB("P32") S DATAOUT=$P(RADATA,U,4)_U_DAYCASE_" ("_EXCAT_")"_U_$P(RADATA,U,9)
"RTN","MAGJEX1",162,0)
 . ; E  ...
"RTN","MAGJEX1",163,0)
 . ; 
"RTN","MAGJEX1",164,0)
 . S DATAOUT=$P(RADATA,U,4)_U_DAYCASE_U_$P(RADATA,U,9)
"RTN","MAGJEX1",165,0)
 . S X=$P(RADATA,U,6),T=$L(X,"  "),X=$P(X,"  ",1,T-1)_U_$P(X,"  ",T)
"RTN","MAGJEX1",166,0)
 . S DATAOUT=DATAOUT_U_X
"RTN","MAGJEX1",167,0)
 . S DATAOUT=DATAOUT_U_MODALITY_U_$P(RADATA,U,5)_U_STKLAY_U_LOCKED
"RTN","MAGJEX1",168,0)
 . ;
"RTN","MAGJEX1",169,0)
 . ; 3090406 -- MAT -- Commented out Patch 32-related logic as obsolete (per SPK).
"RTN","MAGJEX1",170,0)
 . ; I MAGJOB("P32") D  E  ...
"RTN","MAGJEX1",171,0)
 . ; . S DATAOUT=DATAOUT_$S(NSERIES>1:"",1:U)
"RTN","MAGJEX1",172,0)
 . ; . S DATAOUT=DATAOUT_"|"_RIST_U_NSERIES_U_ALTPATH_U_OPENCNT
"RTN","MAGJEX1",173,0)
 . ;
"RTN","MAGJEX1",174,0)
 . ; 3090406 -- MAT -- Modified per tag's comments above.
"RTN","MAGJEX1",175,0)
 . S DATAOUT=DATAOUT_U_MODIF_U_EXCAT_U_"|"_RIST_U_ALTPATH_U_ACQSITE_U_PROCDT_U_YNREVANN_U_YNMAMMO
"RTN","MAGJEX1",176,0)
 . I USELORES D
"RTN","MAGJEX1",177,0)
 . . I +USELORES=+$P(USELORES,U,2) S X="All"
"RTN","MAGJEX1",178,0)
 . . E  S X=+USELORES_" of "_+$P(USELORES,U,2)
"RTN","MAGJEX1",179,0)
 . . I $E(REPLY,1,8)="0~Images" S REPLY="3~"
"RTN","MAGJEX1",180,0)
 . . E  S REPLY=REPLY_"  --  "
"RTN","MAGJEX1",181,0)
 . . S REPLY=REPLY_"Note: "_X_" images for Case #"_DAYCASE_" are REDUCED RESOLUTION images, using parameters set by your site Imaging Manager; to view full-resolution images, disable the Reduced Resolution option setting. Exam NOT Locked."
"RTN","MAGJEX1",182,0)
 S @MAGGRY@(STARTNOD)=CT_U_REPLY_"|"_RADFN_U_RADTI_U_RACNI_U_RARPT_"|"_DATAOUT
"RTN","MAGJEX1",183,0)
 ; if mixedup & not have keys to see images, delete image refs
"RTN","MAGJEX1",184,0)
 ;   & send only reply msg
"RTN","MAGJEX1",185,0)
 I MIXEDUP,('VIEWOK) S CT=0 K @MAGGRY S @MAGGRY@(0)=CT_U_REPLY
"RTN","MAGJEX1",186,0)
 E  S $P(@MAGGRY@(0),U)=CT+STARTNOD
"RTN","MAGJEX1",187,0)
 I CT,(LOCKED'=2),(CURCASE'="VIX") D LOG^MAGJUTL3("VR-VW",LOGDATA) ; Image access log
"RTN","MAGJEX1",188,0)
 Q
"RTN","MAGJEX1",189,0)
 ;
"RTN","MAGJEX1",190,0)
PNAM(X) ; return pt name for input DFN
"RTN","MAGJEX1",191,0)
 I X S X=$G(^DPT(+X,0)) I X]"" S X=$P(X,U)
"RTN","MAGJEX1",192,0)
 E  S X="UNKNOWN"
"RTN","MAGJEX1",193,0)
 Q X
"RTN","MAGJEX1",194,0)
 ;
"RTN","MAGJEX1",195,0)
STATN(X) ; get station #, else return input value
"RTN","MAGJEX1",196,0)
 N T
"RTN","MAGJEX1",197,0)
 I X]"" D GETS^DIQ(4,X,99,"","T") S T=$G(T(4,X_",",99,"E")) I T]"" S X=T
"RTN","MAGJEX1",198,0)
 Q X
"RTN","MAGJEX1",199,0)
 ;
"RTN","MAGJEX1",200,0)
END Q  ;
"RTN","MAGJEX1",201,0)
 ;
"RTN","MAGJEX1A")
0^18^B74324316
"RTN","MAGJEX1A",1,0)
MAGJEX1A ;WIRMFO/JHC VistARad RPCs, exam locking ; 15 Sep 2004  10:00 AM
"RTN","MAGJEX1A",2,0)
 ;;3.0;IMAGING;**18,65,101**;Nov 06, 2009;Build 50
"RTN","MAGJEX1A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJEX1A",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1A",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJEX1A",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJEX1A",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJEX1A",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJEX1A",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJEX1A",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJEX1A",11,0)
 ;; |                                                               |
"RTN","MAGJEX1A",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJEX1A",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJEX1A",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJEX1A",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJEX1A",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJEX1A",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJEX1A",18,0)
 ;;
"RTN","MAGJEX1A",19,0)
 Q
"RTN","MAGJEX1A",20,0)
 ; Entry Points:
"RTN","MAGJEX1A",21,0)
 ;   CASLOCK--RPC: Lock mgt
"RTN","MAGJEX1A",22,0)
 ;   LOCKACT--Subrtn
"RTN","MAGJEX1A",23,0)
 ;   LOCKOUT--Subrtn
"RTN","MAGJEX1A",24,0)
 ;
"RTN","MAGJEX1A",25,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR
"RTN","MAGJEX1A",26,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJEX1A",27,0)
 Q:$Q 1  Q
"RTN","MAGJEX1A",28,0)
 ;
"RTN","MAGJEX1A",29,0)
CASLOCK(MAGGRY,DATA) ; RPC Call: MAGJ RADCASELOCKS
"RTN","MAGJEX1A",30,0)
 ; MAGGRY holds $NA reference to ^TMP for rpc reply; all ref's to MAGGRY use ss indirection
"RTN","MAGJEX1A",31,0)
 ; input in DATA: OPEN_FLAG^RADFN^RADTI^RACNI^RARPT
"RTN","MAGJEX1A",32,0)
 ; OPEN_FLAG = 3: Reserve-to-Lock; 4: Lock-to-Reserve; 5: Lock/Take
"RTN","MAGJEX1A",33,0)
 ; RADFN^, etc--exam id
"RTN","MAGJEX1A",34,0)
 ;
"RTN","MAGJEX1A",35,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJEX1A"
"RTN","MAGJEX1A",36,0)
 N RARPT,RADFN,RADTI,RACNI,DIQUIET,CURCASE,REPLY,CT,DATAOUT,MAGLST,XX
"RTN","MAGJEX1A",37,0)
 N DAYCASE,LOCKED,RACN,RADTE,MAGS,LOGDATA,RESULT,MYLOCK,GOTLOCK,LONGACN
"RTN","MAGJEX1A",38,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJEX1A",39,0)
 S CT=0,DATAOUT=0,DAYCASE="",MAGLST="MAGJCASELOCK"
"RTN","MAGJEX1A",40,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY  ; assign MAGGRY
"RTN","MAGJEX1A",41,0)
 S CURCASE=+$P(DATA,U)
"RTN","MAGJEX1A",42,0)
 S RADFN=$P(DATA,U,2),RADTI=$P(DATA,U,3),RACNI=$P(DATA,U,4),RARPT=+$P(DATA,U,5)
"RTN","MAGJEX1A",43,0)
 I "^3^4^5^"[(U_CURCASE_U)
"RTN","MAGJEX1A",44,0)
 E  S REPLY="4~Invalid Caselock request ("_DATA_")." G CASLOCKZ
"RTN","MAGJEX1A",45,0)
 I RADFN,RADTI,RACNI,RARPT
"RTN","MAGJEX1A",46,0)
 E  S REPLY="4~Caselock Request contains invalid Case Pointer ("_DATA_")." G CASLOCKZ
"RTN","MAGJEX1A",47,0)
 S XX=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJEX1A",48,0)
 S RACN=$P(XX,U),LONGACN=$P(XX,U,31)
"RTN","MAGJEX1A",49,0)
 S RADTE=9999999.9999-RADTI
"RTN","MAGJEX1A",50,0)
 S DAYCASE=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN
"RTN","MAGJEX1A",51,0)
 I LONGACN]"" S DAYCASE=LONGACN
"RTN","MAGJEX1A",52,0)
 S X=$P(XX,U,3)
"RTN","MAGJEX1A",53,0)
 I '$D(^RA(72,"AVC","E",X)) D  G CASLOCKZ
"RTN","MAGJEX1A",54,0)
 . N STS S STS=X
"RTN","MAGJEX1A",55,0)
 . D LOCKACT(RARPT,DAYCASE,100,.RESULT) ; between reserve and now, exam may have been Taken & Updated
"RTN","MAGJEX1A",56,0)
 . I +RESULT(1)!+RESULT(2) D LOCKACT(RARPT,DAYCASE,101,.RESULT) ; so, cancel any lock/reserve
"RTN","MAGJEX1A",57,0)
 . S REPLY="5~For Case #"_DAYCASE_", current Status is "_$P(^RA(72,STS,0),U)_"; Reserve/Lock change NOT allowed."
"RTN","MAGJEX1A",58,0)
 D LOCKACT(RARPT,DAYCASE,CURCASE,.RESULT,.REPLY)
"RTN","MAGJEX1A",59,0)
 S GOTLOCK=+RESULT
"RTN","MAGJEX1A",60,0)
 D LOCKACT(RARPT,DAYCASE,100,.MYLOCK)
"RTN","MAGJEX1A",61,0)
 I GOTLOCK&+MYLOCK(1)&(CURCASE=3!(CURCASE=5)) D  ; update Image access log if got the lock
"RTN","MAGJEX1A",62,0)
 . S LOGDATA=$P(MYLOCK(2),"|",2)  ; was saved when the Reserve occurred
"RTN","MAGJEX1A",63,0)
 . I CURCASE=5 S $P(LOGDATA,U,4)=+MAGJOB("REMOTE") ; update "remote" indicator if was TAKEN
"RTN","MAGJEX1A",64,0)
 . D LOG^MAGJUTL3("VR-VW",LOGDATA)
"RTN","MAGJEX1A",65,0)
 . S $P(^XTMP("MAGJ","LOCK",RARPT,1,DAYCASE),"|",2)=LOGDATA  ; save for Interp event
"RTN","MAGJEX1A",66,0)
 S DATAOUT=$S(+MYLOCK(1):1,+MYLOCK(2):2,1:0)
"RTN","MAGJEX1A",67,0)
 ;
"RTN","MAGJEX1A",68,0)
CASLOCKZ ;
"RTN","MAGJEX1A",69,0)
 S @MAGGRY@(0)=CT_U_REPLY_"|"_RADFN_U_RADTI_U_RACNI_U_RARPT_"||"_DATAOUT
"RTN","MAGJEX1A",70,0)
 Q
"RTN","MAGJEX1A",71,0)
 ;
"RTN","MAGJEX1A",72,0)
PNAM(X) ; return pt name for input DFN
"RTN","MAGJEX1A",73,0)
 I X S X=$G(^DPT(+X,0)) I X]"" S X=$P(X,U)
"RTN","MAGJEX1A",74,0)
 E  S X="UNKNOWN"
"RTN","MAGJEX1A",75,0)
 Q X
"RTN","MAGJEX1A",76,0)
 ;
"RTN","MAGJEX1A",77,0)
LOCKACT(RARPT,DAYCASE,REQUEST,RESULT,ACTREPLY,LOGDATA) ; determine if desired lock action is feasible
"RTN","MAGJEX1A",78,0)
 ; Input: RARPT, DAYCASE, REQUEST, LOGDATA
"RTN","MAGJEX1A",79,0)
 ;   REQUESTed Action:
"RTN","MAGJEX1A",80,0)
 ;     1-Lock; 2-Reserve; 3-ResToLock; 4-LockToRes; 5-TakeLock; 100-Status; 101-UNLOCK
"RTN","MAGJEX1A",81,0)
 ;     Note: 100 & 101 are special for internal use only
"RTN","MAGJEX1A",82,0)
 ;   LOGDATA--pass through for Image Access Log
"RTN","MAGJEX1A",83,0)
 ; Output: RESULT, ACTREPLY
"RTN","MAGJEX1A",84,0)
 ;  RESULT: ACTION "allowed" = LOCK^RESERVE^ResToInt^IntToRes^Take^_"|"_ImgLst
"RTN","MAGJEX1A",85,0)
 ;    these are truth values; Imglst true =~ return Image File list to client
"RTN","MAGJEX1A",86,0)
 ;  RESULT is ultimately used at tag LOCKOUT
"RTN","MAGJEX1A",87,0)
 ;  ACTREPLY --reply message for client logic/display
"RTN","MAGJEX1A",88,0)
 ;
"RTN","MAGJEX1A",89,0)
 N ACTION,LOCKLEV,MYLOCK
"RTN","MAGJEX1A",90,0)
 K RESULT S ACTION="",ACTREPLY="",RESULT="" S LOGDATA=$G(LOGDATA,"")
"RTN","MAGJEX1A",91,0)
 I '$P($G(^MAG(2006.69,1,0)),U,4) Q  ;  Status Updates not enabled
"RTN","MAGJEX1A",92,0)
 I REQUEST=100 D LOCKIN^MAGJEX1B(RARPT,.LOCKLEV,.RESULT,"STATUS") G LOCKACTZ ; Lock Status check only
"RTN","MAGJEX1A",93,0)
 S ACTION="0^0^0^0^0|0"
"RTN","MAGJEX1A",94,0)
 D LOCKIN^MAGJEX1B(RARPT,.LOCKLEV,.MYLOCK)
"RTN","MAGJEX1A",95,0)
 I REQUEST=101 D  G LOCKACT1 ; Unlock exam
"RTN","MAGJEX1A",96,0)
 . M ACTREPLY=MYLOCK ; internal use by MAGJUPD1
"RTN","MAGJEX1A",97,0)
 I 'LOCKLEV D  G LOCKACT1
"RTN","MAGJEX1A",98,0)
 . I REQUEST=1!(REQUEST=2) S $P(ACTION,"|",2)=1,ACTREPLY="5~Exam #"_DAYCASE_" is Locked by "_$P(MYLOCK(1),U,4)_"."  ; View/Cancel
"RTN","MAGJEX1A",99,0)
 . E  S ACTREPLY="3~Invalid exam lock request ("_REQUEST_")--#0"
"RTN","MAGJEX1A",100,0)
 I LOCKLEV=3 D  ; Is or Can be Reserved or Interp by me
"RTN","MAGJEX1A",101,0)
 . I MYLOCK(1) D  Q  ; Already Locked/TAKEN by me
"RTN","MAGJEX1A",102,0)
 . . I REQUEST=1 D  Q
"RTN","MAGJEX1A",103,0)
 . . . I MAGJOB("P32") S $P(ACTION,U)=1,$P(ACTION,U,2)=1,$P(ACTION,"|",2)=1,ACTREPLY="1~#"_DAYCASE_" ("_$$PNAM(RADFN)_") locked for update by "_$P(MAGJOB("USER",1),U,3)
"RTN","MAGJEX1A",104,0)
 . . . E  S $P(ACTION,U,1)=1,$P(ACTION,U,2)=+MYLOCK(2),ACTREPLY="1~Exam #"_$P(MYLOCK(1),U,6)_" already open/locked--no action taken"
"RTN","MAGJEX1A",105,0)
 . . I REQUEST=4 D  Q  ;  Remove Lock, keep Reserve
"RTN","MAGJEX1A",106,0)
 . . . S $P(ACTION,U,2)=1,$P(ACTION,U,4)=1,ACTREPLY="1~Exam unlocked, reserved"
"RTN","MAGJEX1A",107,0)
 . . E  S $P(ACTION,U,1)=1,$P(ACTION,U,2)=+MYLOCK(2),ACTREPLY="3~Invalid exam lock request ("_REQUEST_")--#1"
"RTN","MAGJEX1A",108,0)
 . E  I MYLOCK(2) D  Q  ; Already Reserved by me
"RTN","MAGJEX1A",109,0)
 . . I REQUEST=3 S $P(ACTION,U)=1,$P(ACTION,U,2)=1,$P(ACTION,U,3)=1,ACTREPLY="1~#"_DAYCASE_" ("_$$PNAM(RADFN)_") locked for update (from reserve) by "_$P(MAGJOB("USER",1),U,3)
"RTN","MAGJEX1A",110,0)
 . . E  I REQUEST=2 S $P(ACTION,U,2)=1,ACTREPLY="1~Exam #"_$P(MYLOCK(2),U,6)_" already reserved--no action taken."
"RTN","MAGJEX1A",111,0)
 . . E  S $P(ACTION,U,2)=1,ACTREPLY="3~Invalid exam lock request ("_REQUEST_")--#2"
"RTN","MAGJEX1A",112,0)
 . E  D  ; Available
"RTN","MAGJEX1A",113,0)
 . . I REQUEST=1 S $P(ACTION,U)=1,$P(ACTION,U,2)=1,$P(ACTION,"|",2)=1,ACTREPLY="1~#"_DAYCASE_" ("_$$PNAM(RADFN)_") locked for update by "_$P(MAGJOB("USER",1),U,3)
"RTN","MAGJEX1A",114,0)
 . . E  I REQUEST=2 S $P(ACTION,U,2)=1,$P(ACTION,"|",2)=1,ACTREPLY="1~Exam #"_DAYCASE_" reserved."
"RTN","MAGJEX1A",115,0)
 . . E  S ACTREPLY="3~Invalid exam lock request ("_REQUEST_")--#3"
"RTN","MAGJEX1A",116,0)
 E  I LOCKLEV=1 D  ; Reserved by other (I can Take, Except View/Take/Cancel)
"RTN","MAGJEX1A",117,0)
 . I MYLOCK(1) D  Q
"RTN","MAGJEX1A",118,0)
 . . I REQUEST=1 D  Q
"RTN","MAGJEX1A",119,0)
 . . . I MAGJOB("P32") S $P(ACTION,U)=1,$P(ACTION,"|",2)=1,ACTREPLY="1~#"_DAYCASE_" ("_$$PNAM(RADFN)_") locked for update by "_$P(MAGJOB("USER",1),U,3) ; should be impossible
"RTN","MAGJEX1A",120,0)
 . . . E  S $P(ACTION,U)=1,ACTREPLY="1~Exam #"_$P(MYLOCK(1),U,6)_" already locked; no action taken."
"RTN","MAGJEX1A",121,0)
 . . E  I REQUEST=2 S $P(ACTION,U,1)=1,ACTREPLY="1~Exam #"_$P(MYLOCK(1),U,6)_" already locked; no action taken."
"RTN","MAGJEX1A",122,0)
 . . ; <*> next line Unlocks ME, and preserves Other User's Reserve
"RTN","MAGJEX1A",123,0)
 . . E  I REQUEST=4 S $P(ACTION,U,4)=1,ACTREPLY="1~Exam unlocked; reserved by "_$P(MYLOCK(2),U,4)_"."
"RTN","MAGJEX1A",124,0)
 . . E  S $P(ACTION,U)=1,ACTREPLY="3~Invalid exam lock request ("_REQUEST_")--#5; Lock retained." ; preserve lock
"RTN","MAGJEX1A",125,0)
 . I 'MYLOCK D  Q
"RTN","MAGJEX1A",126,0)
 . . I REQUEST=1 D  Q
"RTN","MAGJEX1A",127,0)
 . . . I MAGJOB("P32") S $P(ACTION,"|",2)=1,ACTREPLY="5~Case #"_DAYCASE_" is Reserved by "_$P(MYLOCK(2),U,4)_"."
"RTN","MAGJEX1A",128,0)
 . . . E  S $P(ACTION,"|",2)=1,ACTREPLY="8~Case #"_DAYCASE_" is Reserved by "_$P(MYLOCK(2),U,4)_"."    ; #8=View/Take/Cancel"
"RTN","MAGJEX1A",129,0)
 . . E  I REQUEST=2 S $P(ACTION,"|",2)=1,ACTREPLY="5~Case #"_DAYCASE_" is Reserved by "_$P(MYLOCK(2),U,4)_"."
"RTN","MAGJEX1A",130,0)
 . . E  I REQUEST=5  S $P(ACTION,U)=1,$P(ACTION,U,5)=1,ACTREPLY="1~#"_DAYCASE_" ("_$$PNAM(RADFN)_") taken/locked for update by "_$P(MAGJOB("USER",1),U,3)
"RTN","MAGJEX1A",131,0)
 . . E  S ACTREPLY="3~Invalid exam lock request ("_REQUEST_")--#6"
"RTN","MAGJEX1A",132,0)
 E  I LOCKLEV=2 D  ; Locked by another
"RTN","MAGJEX1A",133,0)
 . I MYLOCK(2) D  Q
"RTN","MAGJEX1A",134,0)
 . . S $P(ACTION,U,3)=1,ACTREPLY="5~Case #"_DAYCASE_" is Locked (taken) by "_$P(MYLOCK(1),U,4)_"; reserve cancelled." ; View/Cancel"
"RTN","MAGJEX1A",135,0)
 . I 'MYLOCK D  Q
"RTN","MAGJEX1A",136,0)
 . . I REQUEST=1!(REQUEST=2) S $P(ACTION,"|",2)=1,ACTREPLY="5~Case #"_DAYCASE_" is Locked by "_$P(MYLOCK(1),U,4)_"."  ; View/Cancel"
"RTN","MAGJEX1A",137,0)
 . . E  S ACTREPLY="3~Invalid exam lock request ("_REQUEST_")--#8"
"RTN","MAGJEX1A",138,0)
 ;
"RTN","MAGJEX1A",139,0)
LOCKACT1 D LOCKOUT(RARPT,DAYCASE,LOCKLEV,.MYLOCK,ACTION,.RESULT,LOGDATA)
"RTN","MAGJEX1A",140,0)
 ;
"RTN","MAGJEX1A",141,0)
LOCKACTZ Q
"RTN","MAGJEX1A",142,0)
 ;
"RTN","MAGJEX1A",143,0)
 ;
"RTN","MAGJEX1A",144,0)
LOCKOUT(RARPT,DAYCASE,LOCKLEV,MYLOCK,ACTION,RESULT,LOGDATA) ; Record Locks and Clear Locks, as required
"RTN","MAGJEX1A",145,0)
 ; Precursors are logic and data from tags LOCKIN^magjex1b and LOCKACT
"RTN","MAGJEX1A",146,0)
 S RESULT="" S LOGDATA=$G(LOGDATA,"")
"RTN","MAGJEX1A",147,0)
 Q:'LOCKLEV  ; nothing to do
"RTN","MAGJEX1A",148,0)
 N ILOCK
"RTN","MAGJEX1A",149,0)
 F ILOCK=1,2 D  ; 1:Lock  2:Reserve
"RTN","MAGJEX1A",150,0)
 . I ILOCK=1&(LOCKLEV=1!(LOCKLEV=3))
"RTN","MAGJEX1A",151,0)
 . E  I ILOCK=2&(LOCKLEV=2!(LOCKLEV=3))
"RTN","MAGJEX1A",152,0)
 . E  Q
"RTN","MAGJEX1A",153,0)
 . I MYLOCK(ILOCK) D  ; NEVER change order of the logic below!
"RTN","MAGJEX1A",154,0)
 . . I '$P(ACTION,U,ILOCK) D
"RTN","MAGJEX1A",155,0)
 . . . K ^XTMP("MAGJ","LOCK",RARPT,ILOCK)
"RTN","MAGJEX1A",156,0)
 . . . S $P(RESULT,U,ILOCK)=0
"RTN","MAGJEX1A",157,0)
 . . L -^XTMP("MAGJ","LOCK",RARPT,ILOCK) ; reset lock
"RTN","MAGJEX1A",158,0)
 . ; index by DayCase manages locks for Printset Exams (>1 DayCase for one RARPT)
"RTN","MAGJEX1A",159,0)
 . ; a lock on any printset member exam effectively locks all related exams
"RTN","MAGJEX1A",160,0)
 . I +$P(ACTION,U,ILOCK),'MYLOCK(ILOCK) D
"RTN","MAGJEX1A",161,0)
 . . S ^XTMP("MAGJ","LOCK",RARPT,ILOCK,DAYCASE)=DUZ_U_$J_U_$H_U_$P(MAGJOB("USER",1),U,2,3)_U_"|"_LOGDATA
"RTN","MAGJEX1A",162,0)
 . . S ^XTMP("MAGJ","LOCK",RARPT,ILOCK)=DAYCASE
"RTN","MAGJEX1A",163,0)
 . . S $P(RESULT,U,ILOCK)=1
"RTN","MAGJEX1A",164,0)
 . I '$P(ACTION,U,ILOCK) L -^XTMP("MAGJ","LOCK",RARPT,ILOCK)  ; reset or clear lock
"RTN","MAGJEX1A",165,0)
 Q
"RTN","MAGJEX1A",166,0)
 ;
"RTN","MAGJEX1A",167,0)
END Q  ;
"RTN","MAGJLS2")
0^3^B91361467
"RTN","MAGJLS2",1,0)
MAGJLS2 ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  9:58 AM
"RTN","MAGJLS2",2,0)
 ;;3.0;IMAGING;**22,18,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJLS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2",11,0)
 ;; |                                                               |
"RTN","MAGJLS2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2",18,0)
 ;;
"RTN","MAGJLS2",19,0)
 Q
"RTN","MAGJLS2",20,0)
 ;  ACTIVE -- list exams (Unread, Recent, &/or Pending) for input Imaging Type(s)
"RTN","MAGJLS2",21,0)
 ;    RPC Call: MAGJ RADACTIVEEXAMS
"RTN","MAGJLS2",22,0)
 ;  BKGND -- EP for Bkgnd Compile of UNREAD list
"RTN","MAGJLS2",23,0)
 ;  BKGND2 -- EP for Bkgnd Compile of RECENT list
"RTN","MAGJLS2",24,0)
 Q
"RTN","MAGJLS2",25,0)
BKGERR S ERRCOUNT=$G(ERRCOUNT)+1 H 3 I ERRCOUNT>2 K ZTQUEUED G ^XUSCLEAN ; prevent bkgnd loop
"RTN","MAGJLS2",26,0)
ERR1 I $G(LSTNAM)]"" L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",27,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",28,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLS2",29,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2",30,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLS2",31,0)
 Q:$Q 1  Q
"RTN","MAGJLS2",32,0)
ACTIVE(MAGGRY,DATA) ; EP--get Active (Unread/Recent/Pend) Exam Lists
"RTN","MAGJLS2",33,0)
 ; MAGGRY holds $NA ref to ^TMP where return msg is assembled
"RTN","MAGJLS2",34,0)
 ;   all refs to MAGGRY use SS indirection
"RTN","MAGJLS2",35,0)
 ; If not use bkgnd, compile in foregnd
"RTN","MAGJLS2",36,0)
 ;
"RTN","MAGJLS2",37,0)
 N BKGND,COMPFAIL,MAGLST,LSTPARAM,LSTREQ,LSTID,LSTNUM,LSTNAM,NEWLIST
"RTN","MAGJLS2",38,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLS2"
"RTN","MAGJLS2",39,0)
 S X=$P(DATA,U) D PARAMS^MAGJLS2B(X)
"RTN","MAGJLS2",40,0)
 I 'LSTID D  Q
"RTN","MAGJLS2",41,0)
 . S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2",42,0)
 . ; next line--hard-coded 99999 value from client and here for logon initial Manager screen (P101)
"RTN","MAGJLS2",43,0)
 . I $P(DATA,U)=99999 S @MAGGRY@(0)="0^1~           * * *  Use PATIENT LOOKUP button, or select Exam List tab of interest.  * * *"
"RTN","MAGJLS2",44,0)
 . E  S @MAGGRY@(0)="0^4~Problem with Exams List Compile--"_DATA_"."
"RTN","MAGJLS2",45,0)
 I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~VistARad Patch 32 is no longer supported.  Contact Imaging support for the current version of the VistARad client software." Q  ; <*>
"RTN","MAGJLS2",46,0)
 I BKGND,LSTREQ="U" D BKREQU Q  ; UNREAD in bkgnd
"RTN","MAGJLS2",47,0)
 I BKGND,LSTREQ="R" D BKREQR Q  ; RECENT in bkgnd
"RTN","MAGJLS2",48,0)
 I BKGND,LSTREQ="A" D BKREQA(DATA) Q  ; ALL Active Exams
"RTN","MAGJLS2",49,0)
 D FOREGND  ; other list types, or bkgnd compile not enabled
"RTN","MAGJLS2",50,0)
ACTIVEZ Q
"RTN","MAGJLS2",51,0)
 ;
"RTN","MAGJLS2",52,0)
FOREGND ; compile in foregnd
"RTN","MAGJLS2",53,0)
 I LSTREQ="H" G HISTORY
"RTN","MAGJLS2",54,0)
 D BLDACTV^MAGJLS3(.MAGLST,LSTPARAM)
"RTN","MAGJLS2",55,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST) K @MAGLST
"RTN","MAGJLS2",56,0)
 Q
"RTN","MAGJLS2",57,0)
 ;
"RTN","MAGJLS2",58,0)
HISTORY ; compile History list
"RTN","MAGJLS2",59,0)
 D BLDACTV^MAGJLS3(.MAGLST,LSTPARAM)
"RTN","MAGJLS2",60,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST)
"RTN","MAGJLS2",61,0)
 ; copy data from above compile into History file
"RTN","MAGJLS2",62,0)
 N EXID,HISTIEN,IEN,REC1,REC2,CDAT,TMP,PC
"RTN","MAGJLS2",63,0)
 I +$G(@MAGLST@(0,1)) D
"RTN","MAGJLS2",64,0)
 . S IEN="" F  S IEN=$O(@MAGLST@(IEN)) Q:(IEN="")  S REC1=^(IEN,1),REC2=^(2) D
"RTN","MAGJLS2",65,0)
 . . I IEN=0 S ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),IEN,1)=REC1,^(2)=REC2 Q  ; header string
"RTN","MAGJLS2",66,0)
 . . S HISTIEN=+$P(REC2,"|",3) Q:'HISTIEN  S EXID=$P(REC2,"|",2)
"RTN","MAGJLS2",67,0)
 . . S X=$G(^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),0,"ADD",HISTIEN))
"RTN","MAGJLS2",68,0)
 . . I X]"" D
"RTN","MAGJLS2",69,0)
 . . . I EXID'=$P(X,"|",2) Q
"RTN","MAGJLS2",70,0)
 . . . ; copy Client data into list column fields 12-15 in node 2
"RTN","MAGJLS2",71,0)
 . . . S CDAT=$P(REC2,"|",3),TMP=$P(REC2,"|")
"RTN","MAGJLS2",72,0)
 . . . F I=1:1:4 S PC=11+I,$P(TMP,U,PC)=$P(CDAT,U,I)
"RTN","MAGJLS2",73,0)
 . . . S TMP=TMP_U ; pad extra nil piece
"RTN","MAGJLS2",74,0)
 . . . S $P(REC2,"|")=TMP,$P(REC2,"|",3)=HISTIEN ; preserve IEN in PP3
"RTN","MAGJLS2",75,0)
 . . . S ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),HISTIEN,1)=REC1,^(2)=REC2
"RTN","MAGJLS2",76,0)
 . . . K ^XTMP("MAGJ2","HISTORY",DUZ,DUZ(2),0,"ADD",HISTIEN) ; Kill input node
"RTN","MAGJLS2",77,0)
 K @MAGLST
"RTN","MAGJLS2",78,0)
 Q
"RTN","MAGJLS2",79,0)
 ;
"RTN","MAGJLS2",80,0)
BKREQU ; UNREAD exams from bkgnd
"RTN","MAGJLS2",81,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):0
"RTN","MAGJLS2",82,0)
 E  D BKOUT("UNREAD") Q  ; bkgnd process IS running
"RTN","MAGJLS2",83,0)
 ; NOT running, so start it!
"RTN","MAGJLS2",84,0)
 ; 2nd errtrap is to deal with locks if error occurs
"RTN","MAGJLS2",85,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR1^MAGJLS2"
"RTN","MAGJLS2",86,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","MAGJLS2",87,0)
 S ZTRTN="BKGND^MAGJLS2",ZTDESC="IMAGING VistARad UNREAD List Compile"
"RTN","MAGJLS2",88,0)
 S ZTDTH=$H,ZTIO="" D ^%ZTLOAD
"RTN","MAGJLS2",89,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=$S(+X:+X,1:+$P(X,U,3))
"RTN","MAGJLS2",90,0)
 ; CURLIST sub's check for excessive time n/a here
"RTN","MAGJLS2",91,0)
 I LSTAGE>(DELTA+300)  S BKGPROC=2 D  ; Foregnd compile if need fresh list
"RTN","MAGJLS2",92,0)
 . D LSTCOMP(.COMPFAIL) K BKGPROC
"RTN","MAGJLS2",93,0)
 . S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",94,0)
 L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",95,0)
 I +$G(COMPFAIL)!'LSTNUM S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Unable to Compile Unread Exams list ("_$S(+LSTNUM:"COMPFAIL",1:"LSTNUM")_" in MAGJLS2)."
"RTN","MAGJLS2",96,0)
 E  D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE)
"RTN","MAGJLS2",97,0)
 K LSTAGE
"RTN","MAGJLS2",98,0)
 Q
"RTN","MAGJLS2",99,0)
 ;
"RTN","MAGJLS2",100,0)
BKREQR ; Recent Exams from bkgnd
"RTN","MAGJLS2",101,0)
 D BKOUT("RECENT")
"RTN","MAGJLS2",102,0)
 Q
"RTN","MAGJLS2",103,0)
 ;
"RTN","MAGJLS2",104,0)
BKOUT(LSTNM) ; output list from the bkgnd process
"RTN","MAGJLS2",105,0)
 N MSG S MSG=""
"RTN","MAGJLS2",106,0)
 ; if CURLIST returns a value in Piece 3, then the Compile is probably not current
"RTN","MAGJLS2",107,0)
 ; so get a message out with the list
"RTN","MAGJLS2",108,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",109,0)
 I 'LSTNUM D
"RTN","MAGJLS2",110,0)
 . I +$P(X,U,3) S LSTNUM=+$P(X,U,3) S MSG="Compile program for "_LSTNM_" may not be current (age="_LSTAGE_" for "_LSTNAM_")"_$S(LSTNAM["9992":"--May need to Schedule RECENT List Compile in TaskMan.",1:"")
"RTN","MAGJLS2",111,0)
 I LSTNUM D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^XTMP("MAGJ2",LSTNAM,LSTNUM)),LSTAGE,MSG)
"RTN","MAGJLS2",112,0)
 E  I 'LSTNUM S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with "_LSTNM_" List Compile program (age="_LSTAGE_" for "_LSTNAM_")"_$S(LSTNAM["9992":"--May need to Schedule RECENT List Compile in TaskMan.",1:"")
"RTN","MAGJLS2",113,0)
 K LSTAGE
"RTN","MAGJLS2",114,0)
 Q
"RTN","MAGJLS2",115,0)
 ;
"RTN","MAGJLS2",116,0)
BKREQA(DATA) ; ALL Active from Bkgnd
"RTN","MAGJLS2",117,0)
 ; Copy compiles of Unread & Recent to a scratch global, & call lstout
"RTN","MAGJLS2",118,0)
 N ALLGO,CNT,GETLST,ICNT,REPLY,MSG
"RTN","MAGJLS2",119,0)
 S ALLGO=1,CNT=0,MSG=""
"RTN","MAGJLS2",120,0)
 F GETLST=9991,9992 D  I 'ALLGO S REPLY="Component List "_GETLST_ALLGO Q
"RTN","MAGJLS2",121,0)
 . D PARAMS^MAGJLS2B(GETLST) I 'LSTID S ALLGO=" not properly defined."  Q
"RTN","MAGJLS2",122,0)
 . S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",123,0)
 . I 'LSTNUM D
"RTN","MAGJLS2",124,0)
 . . I +$P(X,U,3) S LSTNUM=+$P(X,U,3)
"RTN","MAGJLS2",125,0)
 . . I LSTNUM S MSG=MSG_$S(MSG="":"Compile program for ",1:"; ")_"component "_LSTNAM_" may not be current (age="_LSTAGE_" for "_GETLST_")"
"RTN","MAGJLS2",126,0)
 . I 'LSTNUM S ALLGO=" needs more time to compile." Q
"RTN","MAGJLS2",127,0)
 . F ICNT=1:1:$G(^XTMP("MAGJ2",LSTNAM,LSTNUM,0,1)) S X=^XTMP("MAGJ2",LSTNAM,LSTNUM,ICNT,1),Y=^(2),CNT=CNT+1,^TMP($J,"MAGJ",CNT,1)=X,^(2)=Y
"RTN","MAGJLS2",128,0)
 I ALLGO D
"RTN","MAGJLS2",129,0)
 . S ^TMP($J,"MAGJ",0,1)=CNT_U_"1~ALL Active Exams",^(2)=""
"RTN","MAGJLS2",130,0)
 . D PARAMS^MAGJLS2B($P(DATA,U))
"RTN","MAGJLS2",131,0)
 . D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,$NA(^TMP($J,"MAGJ")),,MSG)
"RTN","MAGJLS2",132,0)
 I 'ALLGO S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)="0^4~Problem with ALL Exams List Compile "_DATA_". "_REPLY
"RTN","MAGJLS2",133,0)
 K LSTAGE
"RTN","MAGJLS2",134,0)
 Q
"RTN","MAGJLS2",135,0)
 ;
"RTN","MAGJLS2",136,0)
BKGND ; EP for background compile of UNREAD exams
"RTN","MAGJLS2",137,0)
 L +^XTMP("MAGJ2","BKGND2","RUN"):1200 ; allow fgnd job to finish compile
"RTN","MAGJLS2",138,0)
 E  Q  ; I must already be running!
"RTN","MAGJLS2",139,0)
 N BKGLSTID S BKGLSTID=9991 G BKGNDA
"RTN","MAGJLS2",140,0)
 Q
"RTN","MAGJLS2",141,0)
BKGND2 ; EP--bkgnd compile RECENT
"RTN","MAGJLS2",142,0)
 N BKGLSTID S BKGLSTID=9992 G BKGNDA
"RTN","MAGJLS2",143,0)
 Q
"RTN","MAGJLS2",144,0)
BKGNDA S BKGPROC=1,U="^"
"RTN","MAGJLS2",145,0)
 N $ETRAP,$ESTACK S $ETRAP="D BKGERR^MAGJLS2"
"RTN","MAGJLS2",146,0)
 D MAGJOBNC^MAGJUTL3
"RTN","MAGJLS2",147,0)
 D PARAMS^MAGJLS2B(BKGLSTID)
"RTN","MAGJLS2",148,0)
BKLOOP ; Loop & compile "master" UNREAD List only
"RTN","MAGJLS2",149,0)
 S BKLOOP=$G(BKLOOP)+1
"RTN","MAGJLS2",150,0)
 I BKLOOP>1 D PARAMS^MAGJLS2B(9991)
"RTN","MAGJLS2",151,0)
 I 'LSTID D  G BKGNDZ
"RTN","MAGJLS2",152,0)
 . S X="0^4~Problem with BACKGROUND Compile of Exams List"
"RTN","MAGJLS2",153,0)
 . F I=1,2 K ^XTMP("MAGJ2",LSTNAM,I)
"RTN","MAGJLS2",154,0)
 . F I=1,2 S ^XTMP("MAGJ2",LSTNAM,I,0,1)=X,^(2)=""  ; get msg to WS user
"RTN","MAGJLS2",155,0)
 I 'BKGND G BKGNDZ  ; need this to cover for excessive time to compile
"RTN","MAGJLS2",156,0)
 S X=$$CURLIST(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2",157,0)
 I 'LSTNUM,+$P(X,U,3) S LSTNUM=+$P(X,U,3)
"RTN","MAGJLS2",158,0)
 ; above prevents compiling over top of the active list LSTNUM=1 if compiles are excessively long
"RTN","MAGJLS2",159,0)
 I LSTREQ="U",(LSTAGE<DELTA) D  I 'BKGND G BKGNDZ ;bkgnd compile off?
"RTN","MAGJLS2",160,0)
 . N ITEST,TEST
"RTN","MAGJLS2",161,0)
 . S TEST=(DELTA-LSTAGE)\5
"RTN","MAGJLS2",162,0)
 . ; while waiting, periodic chk for stop conditions
"RTN","MAGJLS2",163,0)
 . F ITEST=1:1:TEST H 5 D  Q:'BKGND
"RTN","MAGJLS2",164,0)
 .. S BKGND=+$P($G(^MAG(2006.69,1,0)),U,8) Q:'BKGND
"RTN","MAGJLS2",165,0)
 .. I $D(ZTQUEUED),$$S^%ZTLOAD S BKGND=0 ; Exit bkgnd via TaskMan Req
"RTN","MAGJLS2",166,0)
 . H 3
"RTN","MAGJLS2",167,0)
 D LSTCOMP()
"RTN","MAGJLS2",168,0)
 I LSTREQ="R" D NEWINT
"RTN","MAGJLS2",169,0)
 I LSTREQ="U" D UPDR^MAGJLS2B G BKLOOP  ;UNREAD loops; RECENT uses TaskMan
"RTN","MAGJLS2",170,0)
BKGNDZ I LSTREQ="U" L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJLS2",171,0)
 N ZTREQ S ZTREQ="@"  ;  clean up task entry
"RTN","MAGJLS2",172,0)
 K BKLOOP,DELTA,LSTAGE
"RTN","MAGJLS2",173,0)
 Q  ; Exit bkgnd
"RTN","MAGJLS2",174,0)
 ;
"RTN","MAGJLS2",175,0)
NEWINT ; Add exams newly Interp since Recent Compile started to Recent List
"RTN","MAGJLS2",176,0)
 ; 1st, get list of candidates:
"RTN","MAGJLS2",177,0)
 N INDX L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",178,0)
 E  Q
"RTN","MAGJLS2",179,0)
 S INDX=+$G(^TMP($J,"NEWINT")) ; counter when Recent Compile started
"RTN","MAGJLS2",180,0)
 I INDX S INDX=INDX-1 F  S INDX=$O(^XTMP("MAGJ2","RECENT",INDX)) Q:'INDX  S X=^(INDX) I X S ^TMP($J,"NEWINT",0,INDX)=X
"RTN","MAGJLS2",181,0)
 K ^XTMP("MAGJ2","RECENT") S ^("RECENT",0)=0
"RTN","MAGJLS2",182,0)
 L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",183,0)
 ;if not in Recent Compile, add to index
"RTN","MAGJLS2",184,0)
 S INDX=""
"RTN","MAGJLS2",185,0)
 F  S INDX=$O(^TMP($J,"NEWINT",0,INDX)) Q:'INDX  S X=^(INDX) D
"RTN","MAGJLS2",186,0)
 . I $D(^TMP($J,"NEWINT",$P(X,U,1,3))) Q  ; already there
"RTN","MAGJLS2",187,0)
 . L +^XTMP("MAGJ2","RECENT"):15
"RTN","MAGJLS2",188,0)
 . E  Q
"RTN","MAGJLS2",189,0)
 . S I=+$G(^XTMP("MAGJ2","RECENT",0))+1,$P(^(0),U)=I,^(I)=X ;add 
"RTN","MAGJLS2",190,0)
 . L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJLS2",191,0)
 K ^TMP($J,"NEWINT")
"RTN","MAGJLS2",192,0)
 Q
"RTN","MAGJLS2",193,0)
 ;
"RTN","MAGJLS2",194,0)
LSTCOMP(COMPFAIL) ; Compile new list; subrtn used by Active and Bkgnd tags
"RTN","MAGJLS2",195,0)
 S COMPFAIL=0 ; Return T/F for "Executed a List Compile?"
"RTN","MAGJLS2",196,0)
 L +^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE"):60
"RTN","MAGJLS2",197,0)
 E  S COMPFAIL=1 G LSTCOMZ
"RTN","MAGJLS2",198,0)
 S NEWLIST=$S(LSTNUM=1:2,1:1) ; toggle node to use
"RTN","MAGJLS2",199,0)
 N TS,COMTIM
"RTN","MAGJLS2",200,0)
 S TS="" F I=2,0 S TS=TS_$S(TS="":"",1:U)_$$HTFM^XLFDT($H+I,0)
"RTN","MAGJLS2",201,0)
 S ^XTMP("MAGJ2",0)=TS_U_"VistARad List Compile"
"RTN","MAGJLS2",202,0)
 S ^XTMP("MAGJ2",0,LSTNAM,NEWLIST)=$H
"RTN","MAGJLS2",203,0)
 D BLDACTV^MAGJLS3(.MAGGRY,LSTPARAM,$NA(^XTMP("MAGJ2",LSTNAM,NEWLIST)))
"RTN","MAGJLS2",204,0)
 S COMTIM=$$DELTA($P(^XTMP("MAGJ2",0,LSTNAM,NEWLIST),U))
"RTN","MAGJLS2",205,0)
 S ^XTMP("MAGJ2",LSTNAM,NEWLIST)=$H_U_$J_U_COMTIM
"RTN","MAGJLS2",206,0)
 S ^XTMP("MAGJ2","BKGND",LSTNAM,0)=NEWLIST_U_$H
"RTN","MAGJLS2",207,0)
 I $G(^XTMP("MAGJ2",0,"TIME")) D
"RTN","MAGJLS2",208,0)
 . S T1=$P($H,",",2)/3600,T2=$E(100+(T1\1),2,3),T=T2_":"_$E(100+(T1-T2*60),2,3)
"RTN","MAGJLS2",209,0)
 . S ^XTMP("MAGJ2",0,"TIME",LSTNAM,+$H,T)=COMTIM K T,T1,T2
"RTN","MAGJLS2",210,0)
LSTCOMZ L -^XTMP("MAGJ2","BKGND",LSTNAM,"COMPILE")
"RTN","MAGJLS2",211,0)
 Q  ;
"RTN","MAGJLS2",212,0)
CURLIST(LSTNAM,WAIT) ; return cur. list & age in secs
"RTN","MAGJLS2",213,0)
 ;  RET = Current_List_Num ^ age ^ Problem_Current_List_Num
"RTN","MAGJLS2",214,0)
 ;    Current_List_Num -- Nil means brand new; value means this is most current
"RTN","MAGJLS2",215,0)
 ;      piece 3 populated if excessive time has elapsed, indicating potential problem
"RTN","MAGJLS2",216,0)
 S WAIT=+$G(WAIT)
"RTN","MAGJLS2",217,0)
 N X,RET,AGE,TRY,START,EXTRATIM
"RTN","MAGJLS2",218,0)
 S TRY=0,START=$H,EXTRATIM=$S(LSTREQ="U":600,1:1800)
"RTN","MAGJLS2",219,0)
 S X=$G(^XTMP("MAGJ2","BKGND",LSTNAM,0))  ; Cur # ^ $H created
"RTN","MAGJLS2",220,0)
 I X="" S RET="^86400^0" G CURLISZ  ; this lstnam not yet compiled!
"RTN","MAGJLS2",221,0)
 S AGE=$$DELTA($P(X,U,2)),RET=$P(X,U)_U_AGE
"RTN","MAGJLS2",222,0)
 I AGE>(DELTA+EXTRATIM) S X=$P(RET,U),$P(RET,U,3)=X,$P(RET,U)=""  ; last compile was "long" ago; return indicator of this
"RTN","MAGJLS2",223,0)
CURLISZ Q RET
"RTN","MAGJLS2",224,0)
 ;
"RTN","MAGJLS2",225,0)
DELTA(X,Y) ; calc # secs bet 2 $h values; dflt 2nd value = now
"RTN","MAGJLS2",226,0)
 ; useful limit is one day
"RTN","MAGJLS2",227,0)
 I $G(Y)="" S Y=$H
"RTN","MAGJLS2",228,0)
 I +Y=+X
"RTN","MAGJLS2",229,0)
 E  D
"RTN","MAGJLS2",230,0)
 . I Y-X=1 S $P(Y,",",2)=86400+$P(Y,",",2)  ; midnight boundary
"RTN","MAGJLS2",231,0)
 . E  S $P(X,",",2)=0,$P(Y,",",2)=86400  ; > one day
"RTN","MAGJLS2",232,0)
 Q ($P(Y,",",2)-$P(X,",",2))
"RTN","MAGJLS2",233,0)
 ;
"RTN","MAGJLS2",234,0)
END ;
"RTN","MAGJLS2B")
0^14^B78466929
"RTN","MAGJLS2B",1,0)
MAGJLS2B ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  9:59 AM
"RTN","MAGJLS2B",2,0)
 ;;3.0;IMAGING;**16,22,18,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJLS2B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS2B",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS2B",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS2B",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS2B",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS2B",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS2B",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS2B",11,0)
 ;; |                                                               |
"RTN","MAGJLS2B",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS2B",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS2B",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS2B",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS2B",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS2B",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS2B",18,0)
 ;;
"RTN","MAGJLS2B",19,0)
 Q
"RTN","MAGJLS2B",20,0)
 ;
"RTN","MAGJLS2B",21,0)
PARAMS(X) ; Init some vars used for Exam Lists
"RTN","MAGJLS2B",22,0)
 N LASTEDIT
"RTN","MAGJLS2B",23,0)
 S LSTID=+$O(^MAG(2006.631,"C",X,""))
"RTN","MAGJLS2B",24,0)
 I 'LSTID S LSTID="Invalid List ID" Q  ;
"RTN","MAGJLS2B",25,0)
 S X=^MAG(2006.631,LSTID,0)
"RTN","MAGJLS2B",26,0)
 I '$P(X,U,6) S LSTID="LIST NOT ENABLED" Q  ;
"RTN","MAGJLS2B",27,0)
 S LSTTL=$P(X,U),LSTREQ=$P(X,U,3),LSTPARAM=LSTREQ_U_$P(X,U,4),LASTEDIT=$P(X,U,5)
"RTN","MAGJLS2B",28,0)
 S LSTTL=$S(LSTREQ="U":"UNREAD",LSTREQ="R":"RECENT",LSTREQ="A":"ACTIVE",LSTREQ="P":"PENDING",LSTREQ="N":"NEWLY INTERP",LSTREQ="H":"HISTORY",1:"")_" EXAMS: "_LSTTL
"RTN","MAGJLS2B",29,0)
 I $P(LSTPARAM,U,2)="" S $P(LSTPARAM,U,2)="ALL" ; dflt All ImagingTypes
"RTN","MAGJLS2B",30,0)
 S X=$G(^MAG(2006.69,1,0)),BKGND=+$P(X,U,8),DELTA=+$P(X,U,$S(LSTREQ="U":9,1:13))*60
"RTN","MAGJLS2B",31,0)
 I BKGND,'DELTA S DELTA=360 ;dflt Unread List compile cycle time secs
"RTN","MAGJLS2B",32,0)
 S LSTNAM="LS"_LSTID
"RTN","MAGJLS2B",33,0)
 I BKGND S LSTNAM=$S(LSTREQ="U":"LS9991",LSTREQ="R":"LS9992",LSTREQ="N":"LS9995",LSTREQ="H":"LS9996",1:LSTNAM) ; hard-code for "Master" list Bkgnd compile
"RTN","MAGJLS2B",34,0)
 Q
"RTN","MAGJLS2B",35,0)
 ;
"RTN","MAGJLS2B",36,0)
SETVARS(LSTID) ;output control variables
"RTN","MAGJLS2B",37,0)
 D LSTVAR(LSTID),SRTVAR(LSTID),SELVAR(LSTID)
"RTN","MAGJLS2B",38,0)
 Q
"RTN","MAGJLS2B",39,0)
 ;
"RTN","MAGJLS2B",40,0)
LSTVAR(LSTID) ; build output columns string
"RTN","MAGJLS2B",41,0)
 S MDLVAR=^MAG(2006.631,LSTID,"DEF",1),LSTHDR=^(.5)
"RTN","MAGJLS2B",42,0)
 N I,XX,SC,XOUT,XOUT2
"RTN","MAGJLS2B",43,0)
 S SC=";",XOUT="",XOUT2=""
"RTN","MAGJLS2B",44,0)
 F I=1:1:$L(MDLVAR,U) S XX=$P(MDLVAR,U,I) D
"RTN","MAGJLS2B",45,0)
 . I +XX=12 I '$G(SNDREMOT) Q  ; exclude RC ind
"RTN","MAGJLS2B",46,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",47,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",48,0)
 . S XOUT2=XOUT2_$S(XOUT2="":"",1:U)_$P(LSTHDR,U,I)
"RTN","MAGJLS2B",49,0)
 S MDLVAR=XOUT,LSTHDR=XOUT2
"RTN","MAGJLS2B",50,0)
 Q
"RTN","MAGJLS2B",51,0)
SRTVAR(LSTID) ; build sort-vars string in SORTSS
"RTN","MAGJLS2B",52,0)
 ; indirection used to ref string at list output (see LSTOUT)
"RTN","MAGJLS2B",53,0)
 S MDSVAR=^MAG(2006.631,LSTID,"DEF",2)
"RTN","MAGJLS2B",54,0)
 N I,XX,XOUT,HAVEONE
"RTN","MAGJLS2B",55,0)
 S SORTSS="",XOUT="",HAVEONE=0
"RTN","MAGJLS2B",56,0)
 F I=1:1:$L(MDSVAR,U) S XX=$P(MDSVAR,U,I) D
"RTN","MAGJLS2B",57,0)
 . I +XX=12 Q:'$G(SNDREMOT)   ; exclude RC ind
"RTN","MAGJLS2B",58,0)
 . I +XX=23 I '$G(SHOWPLAC) Q  ; exclude PLACE
"RTN","MAGJLS2B",59,0)
 . I 'HAVEONE S HAVEONE=(+XX=1)  ; 1 = Case #
"RTN","MAGJLS2B",60,0)
 . S XOUT=XOUT_$S(XOUT="":"",1:U)_XX
"RTN","MAGJLS2B",61,0)
 . S XX=$S(XX?1N.N1"-":"-",1:"")_"MD("_+XX_")"
"RTN","MAGJLS2B",62,0)
 . S SORTSS=SORTSS_","_XX
"RTN","MAGJLS2B",63,0)
 I 'HAVEONE S SORTSS=SORTSS_",MD(1)",XOUT=XOUT_U_1  ; force unique entry each exam
"RTN","MAGJLS2B",64,0)
 I $E(SORTSS)="," S SORTSS=$E(SORTSS,2,999)
"RTN","MAGJLS2B",65,0)
 S MDSVAR=XOUT
"RTN","MAGJLS2B",66,0)
 Q
"RTN","MAGJLS2B",67,0)
 ;
"RTN","MAGJLS2B",68,0)
SELVAR(LSTID) ; build selection logic executes in DIS array
"RTN","MAGJLS2B",69,0)
 N CX,DC,DCX,DL,DLX,EXP,I,IDL,SELVAR,SELVAR2,SS
"RTN","MAGJLS2B",70,0)
 S SS=0 F  S SS=$O(^MAG(2006.631,LSTID,"DEF",3,SS)) Q:'SS  S DC(SS)=^(SS)
"RTN","MAGJLS2B",71,0)
 S SS=0 F I=1:1 S SS=$O(^MAG(2006.631,LSTID,"DEF",4,SS)) Q:'SS  S DL(I)=^(SS)
"RTN","MAGJLS2B",72,0)
 ;  DL(5)="^2^3'^" <DLX     CX=3'    DC(2)="1^>44" <DCX
"RTN","MAGJLS2B",73,0)
 K DIS,MDCVAR S DIS(0)=0
"RTN","MAGJLS2B",74,0)
 F IDL=1:1 S DLX=$G(DL(IDL)) Q:DLX=""  S DIS(0)=DIS(0)+1,DIS(DIS(0))="" D
"RTN","MAGJLS2B",75,0)
 . F I=2:1:$L(DLX,U)-1 S CX=$P(DLX,U,I) S DCX=DC(+CX) D
"RTN","MAGJLS2B",76,0)
 .. S EXP="(MD("_+DCX_")"_$P(DCX,U,2)_")"
"RTN","MAGJLS2B",77,0)
 .. S EXP="I "_$S(CX["'":"'",1:"")_EXP
"RTN","MAGJLS2B",78,0)
 .. S DIS(DIS(0))=DIS(DIS(0))_" "_EXP
"RTN","MAGJLS2B",79,0)
 .. S MDCVAR(+DCX)=""
"RTN","MAGJLS2B",80,0)
 Q
"RTN","MAGJLS2B",81,0)
 ;
"RTN","MAGJLS2B",82,0)
CHKLOCK(RARPT,DAYCASE) ; return ini of locking user & truth flag for locking user = logon user
"RTN","MAGJLS2B",83,0)
 N RESULT,WHO,MYLOCK,X,XX
"RTN","MAGJLS2B",84,0)
 S (MYLOCK,WHO)=""
"RTN","MAGJLS2B",85,0)
 I RARPT,(DAYCASE]"") D
"RTN","MAGJLS2B",86,0)
 . I $D(^XTMP("MAGJ","LOCK",RARPT)) D
"RTN","MAGJLS2B",87,0)
 . . D LOCKACT^MAGJEX1A(RARPT,DAYCASE,100,.RESULT)
"RTN","MAGJLS2B",88,0)
 . . I $D(RESULT)>1 D
"RTN","MAGJLS2B",89,0)
 . . . S X=RESULT(1),WHO=$P(X,U,5)
"RTN","MAGJLS2B",90,0)
 . . . I WHO]"" S MYLOCK=+X
"RTN","MAGJLS2B",91,0)
 . . . E  D
"RTN","MAGJLS2B",92,0)
 . . . . S X=RESULT(2),WHO=$P(X,U,5)
"RTN","MAGJLS2B",93,0)
 . . . . I WHO]"" S WHO=WHO_":R",MYLOCK=+X I MYLOCK S MYLOCK=2
"RTN","MAGJLS2B",94,0)
 S XX=WHO_U_MYLOCK
"RTN","MAGJLS2B",95,0)
 Q:$Q XX Q
"RTN","MAGJLS2B",96,0)
 ;
"RTN","MAGJLS2B",97,0)
SHOWPLAC(X) ; return list of places to show: all defined places NOT equal to user's logon place
"RTN","MAGJLS2B",98,0)
 N IEN,SHOWPLAC S SHOWPLAC=""
"RTN","MAGJLS2B",99,0)
 S IEN=0 F  S IEN=$O(^MAG(2006.1,IEN)) Q:'IEN  I IEN'=+MAGJOB("SITEP") S X=$P(^(IEN,0),U,9) I X]"" S SHOWPLAC=SHOWPLAC_","_X
"RTN","MAGJLS2B",100,0)
 I SHOWPLAC]"" S SHOWPLAC=1_U_SHOWPLAC_"," ; 1 for true
"RTN","MAGJLS2B",101,0)
 Q SHOWPLAC
"RTN","MAGJLS2B",102,0)
 ;
"RTN","MAGJLS2B",103,0)
LSTOUT(MAGGRY,LSTID,MAGLST,LSTAGE,WRNMSG) ; Build output list, w/ sort & selection
"RTN","MAGJLS2B",104,0)
 ;  Input: LSTID=List def'n
"RTN","MAGJLS2B",105,0)
 ;         MAGLST=Indirect global ref for input records; all reads use subscript indirection
"RTN","MAGJLS2B",106,0)
 ;       the nodes in @MAGLST contain:
"RTN","MAGJLS2B",107,0)
 ;  
"RTN","MAGJLS2B",108,0)
 ;  Node 1 corresponds to IENs 1:17 from Data Elements dic:
"RTN","MAGJLS2B",109,0)
 ;     Acn# ^ Ex LOCK ^ PtName ^ Pt_ID ^ Priority ^ Proc ^ Img Date/Time ^ Status ^ # Images ^ Online?
"RTN","MAGJLS2B",110,0)
 ;     Img Loc'n ^ Remote Ind. ^ Images Exist? ^ Img Date/Time-sortable ^ Mdl ^ Status/Internal ^ ImgTypABB
"RTN","MAGJLS2B",111,0)
 ;  Node 2-- IEN's 18:28 from Data Elements dic:
"RTN","MAGJLS2B",112,0)
 ;     REQLOCAbb ^ REQLOCNm ^ Interp Rad'ists ^ Last4 SSN ^ Division ^ Site ^ Rist Is Me? ^  ProcMod ^ REQLOCTyp ^ CPT
"RTN","MAGJLS2B",113,0)
 ;     WARD
"RTN","MAGJLS2B",114,0)
 ;   Node 2 then appends 3 pipe-delim pieces that are passed through from list compiler (See svmag2a^magjls3)
"RTN","MAGJLS2B",115,0)
 ;
"RTN","MAGJLS2B",116,0)
 ;    LSTAGE=optional List age from last compile, in seconds
"RTN","MAGJLS2B",117,0)
 ;    WRNMSG=optional message to append to list title, to warn of possible compile problems
"RTN","MAGJLS2B",118,0)
 ; Output: MAGGRY=Indirect ref to output file
"RTN","MAGJLS2B",119,0)
 ; 
"RTN","MAGJLS2B",120,0)
 N DIS,MDCVAR,SNDREMOT,ILST,IMD,MAGRACNT
"RTN","MAGJLS2B",121,0)
 N RARPT,RAST,RADFN,RACNI,RADTI,T,WHOLOCK,XX,MYLOCK,DAYCASE,MODALITY
"RTN","MAGJLS2B",122,0)
 N OUT,QX,SORT,SORTSS,LSTHDR,MD,MDLVAR,MDSVAR,REMONLY,REMOTCAS,SHOWPLAC,SORTLEN
"RTN","MAGJLS2B",123,0)
 S LSTAGE=$G(LSTAGE),WRNMSG=$G(WRNMSG)
"RTN","MAGJLS2B",124,0)
 S SHOWPLAC=$$SHOWPLAC("") ; Show any Place (Site Code) that is NOT the Login Place
"RTN","MAGJLS2B",125,0)
 S REMONLY=0
"RTN","MAGJLS2B",126,0)
 S XX=$G(^MAG(2006.69,1,0)),SNDREMOT=+$P(XX,U,11)
"RTN","MAGJLS2B",127,0)
 I $G(MAGJOB("REMOTE")) D  ; show remote cache only?
"RTN","MAGJLS2B",128,0)
 . I MAGJOB("P32") S REMONLY=+$P(XX,U,10)
"RTN","MAGJLS2B",129,0)
 . E  Q:(LSTREQ="H")  S REMONLY=+$G(MAGJOB("REMOTESCREEN"))  ; Hist list
"RTN","MAGJLS2B",130,0)
 D SETVARS(LSTID)
"RTN","MAGJLS2B",131,0)
 S MAGRACNT=0
"RTN","MAGJLS2B",132,0)
 S SORT="^TMP("_$J_",""MAGJSORT""",SORTLEN=$L(SORT) K ^TMP($J,"MAGJSORT")
"RTN","MAGJLS2B",133,0)
 K ^TMP($J,"RET") S ^TMP($J,"RET",0)="0^4~Getting Exam List"
"RTN","MAGJLS2B",134,0)
 S X=$G(@MAGLST@(0,1)) I +X<1 D  G LSTOUTZ  ; No exams to list!
"RTN","MAGJLS2B",135,0)
 . I X="" S ^TMP($J,"RET",0)="0^4~Problem with Exams List Compile"
"RTN","MAGJLS2B",136,0)
 . E  S ^TMP($J,"RET",0)=X
"RTN","MAGJLS2B",137,0)
 S ILST=0
"RTN","MAGJLS2B",138,0)
 F  S ILST=$O(@MAGLST@(ILST)) Q:'ILST  S XX=^(ILST,1),XX2=^(2) K MD D  ; contents described above
"RTN","MAGJLS2B",139,0)
 . S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")=""
"RTN","MAGJLS2B",140,0)
 . S $P(XX,U,24)=$$RISTISME($P(XX,U,24)) ; calculate value @ list output time
"RTN","MAGJLS2B",141,0)
 .  ; Execute Selection logic
"RTN","MAGJLS2B",142,0)
 . S X=0 F  S X=$O(MDCVAR(X)) Q:'X  S MD(X)=$P(XX,U,X) ; load needed data
"RTN","MAGJLS2B",143,0)
 . I 1 F I=1:1:$G(DIS(0)) X DIS(I) I  Q  ; quit if search logic True
"RTN","MAGJLS2B",144,0)
 . E  Q  ; failed selection criteria--skip
"RTN","MAGJLS2B",145,0)
 . S RAST=$P(XX,U,16)
"RTN","MAGJLS2B",146,0)
 . S T=$P(XX2,"|",2),RADFN=$P(T,U),RADTI=$P(T,U,2),RACNI=$P(T,U,3),RARPT=$P(T,U,4)
"RTN","MAGJLS2B",147,0)
 . I LSTREQ="U",'$D(^RADPT("AS",RAST,RADFN,RADTI,RACNI)) Q  ; No longer Unread!
"RTN","MAGJLS2B",148,0)
 . I LSTREQ="U",$G(MAGJOB("CONSOLIDATED")) S RADIV=$P(XX,U,22) I RADIV]"",'$D(MAGJOB("DIVSCRN",RADIV)) Q  ; Screen Unread exams for DIVision
"RTN","MAGJLS2B",149,0)
 . S REMOTCAS=$P(XX,U,12)
"RTN","MAGJLS2B",150,0)
 . I REMONLY,'REMOTCAS Q  ; don't show if not routed
"RTN","MAGJLS2B",151,0)
 . I REMONLY,REMOTCAS D  I 'T Q  ; don't show if not the remote reading site
"RTN","MAGJLS2B",152,0)
 . . F I=1:1:$L(REMOTCAS,",")+1 S T=$P(REMOTCAS,",",I) I T,$D(MAGJOB("LOC",T)) Q
"RTN","MAGJLS2B",153,0)
 . ; set up sort values, creating sort index w/ indirect reference to sort global
"RTN","MAGJLS2B",154,0)
 . F I=1:1:$L(MDSVAR,U) S X=+$P(MDSVAR,U,I) S MD(X)=$P(XX,U,X) I MD(X)="" S MD(X)="~"
"RTN","MAGJLS2B",155,0)
 . I LSTREQ="H" S @(SORT_",ILST,"_SORTSS_")")=ILST_U_RARPT ; P18 adds ILST so History List can allow mult entries of same exam, in fifo order
"RTN","MAGJLS2B",156,0)
 . E  S @(SORT_","_SORTSS_")")=ILST_U_RARPT
"RTN","MAGJLS2B",157,0)
 . S MAGRACNT=MAGRACNT+1
"RTN","MAGJLS2B",158,0)
 I 'MAGRACNT S ^TMP($J,"RET",0)="0^2~No Exams Found"
"RTN","MAGJLS2B",159,0)
 E  D  ; generate output file
"RTN","MAGJLS2B",160,0)
 . S @(SORT_","_-9999999999_")")=0,QX=SORT_")" ; define $Query var.; init beginning w/ dummy entry
"RTN","MAGJLS2B",161,0)
 . ; proceed thru sort index until the string contained in SORT is not present
"RTN","MAGJLS2B",162,0)
 . ; get data w/ indirect refs to the stored data
"RTN","MAGJLS2B",163,0)
 . F ILST=0:1 S QX=$Q(@QX) Q:($E(QX,1,SORTLEN))'=SORT  S XX=@MAGLST@(+(@QX),1),XX2=^(2),OUT="" D
"RTN","MAGJLS2B",164,0)
 .. I 'ILST D  Q       ; Header string
"RTN","MAGJLS2B",165,0)
 ... S T="" I LSTAGE?1N.N S T=LSTAGE\60 S T=" (List age: "_$S(T:T_" min, ",1:"")_(LSTAGE#60)_" sec)"
"RTN","MAGJLS2B",166,0)
 ... I WRNMSG]"" S T=T_"  **  "_WRNMSG_"  **"
"RTN","MAGJLS2B",167,0)
 ... I +$P(XX,U,2)=1 S $P(XX,"~",2)=LSTTL_T  ; List Title
"RTN","MAGJLS2B",168,0)
 ... S ^TMP($J,"RET",0)=XX
"RTN","MAGJLS2B",169,0)
 .. S XX=XX_U_$P(XX2,"|"),$P(XX2,"|")=""
"RTN","MAGJLS2B",170,0)
 .. S $P(XX,U,24)=$$RISTISME($P(XX,U,24)) ; calculate value @ list output time
"RTN","MAGJLS2B",171,0)
 .. S RARPT=$P(@QX,U,2),DAYCASE=$P(XX,U)
"RTN","MAGJLS2B",172,0)
 .. S T=$$CHKLOCK(RARPT,DAYCASE),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLS2B",173,0)
 .. S $P(XX,U,2)=WHOLOCK
"RTN","MAGJLS2B",174,0)
 .. S MODALITY=$P(XX,U,15)
"RTN","MAGJLS2B",175,0)
 .. F IMD=1:1:$L(MDLVAR,U) S X=$P(MDLVAR,U,IMD),MD=$P(XX,U,+X) D
"RTN","MAGJLS2B",176,0)
 ... I +X=12,(MD]""),SNDREMOT D
"RTN","MAGJLS2B",177,0)
 .... ; if site routes images, disp Remote Cache ind.
"RTN","MAGJLS2B",178,0)
 .... N I,T S T="" F I=1:1:$L(MD,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(MD,",",I),3)),U,5)
"RTN","MAGJLS2B",179,0)
 .... S MD=T
"RTN","MAGJLS2B",180,0)
 ... I +X=23,(MD]""),SHOWPLAC D
"RTN","MAGJLS2B",181,0)
 .... I SHOWPLAC'[(","_MD_",") S MD=""  ; Don't show user's local place
"RTN","MAGJLS2B",182,0)
 ... I +X=22,(MD]""),$G(MAGJOB("CONSOLIDATED")) D
"RTN","MAGJLS2B",183,0)
 .... I '$D(MAGJOB("DIVSCRN",MD)) S MD=""  ; Don't show user's local Div
"RTN","MAGJLS2B",184,0)
 ... I X[";" S T=+$P(X,";",2) I T S MD=$E(MD,1,T)  ; truncate output col
"RTN","MAGJLS2B",185,0)
 ... S $P(OUT,U,IMD)=MD
"RTN","MAGJLS2B",186,0)
 .. S $P(OUT,U,IMD+1)="",OUT=U_OUT,OUT=OUT_"|"_$P(XX2,"|",2,9)
"RTN","MAGJLS2B",187,0)
 .. I WHOLOCK]"" S T=$P(OUT,"|",4),$P(T,U,2)=WHOLOCK,$P(T,U,3)=MYLOCK,$P(OUT,"|",4)=T ; pass lock info to Client
"RTN","MAGJLS2B",188,0)
 .. ; * Note: Keep Pipe piece 4, above, in sync with svmag2a^magjls3 *
"RTN","MAGJLS2B",189,0)
 .. S ^TMP($J,"RET",ILST+1)=OUT
"RTN","MAGJLS2B",190,0)
 . S ^TMP($J,"RET",1)=U_LSTHDR
"RTN","MAGJLS2B",191,0)
 . S $P(^TMP($J,"RET",0),U)=MAGRACNT
"RTN","MAGJLS2B",192,0)
LSTOUTZ K MAGGRY,^TMP($J,"MAGJSORT") S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS2B",193,0)
 Q
"RTN","MAGJLS2B",194,0)
 ;
"RTN","MAGJLS2B",195,0)
RISTISME(X) ; calculate truth value for Interpreting Rist = Logon Rist
"RTN","MAGJLS2B",196,0)
 ; input zero to 2 DUZ values Rist1~Rist2
"RTN","MAGJLS2B",197,0)
 ; output Y or N for truth value
"RTN","MAGJLS2B",198,0)
 N Y S Y="N"
"RTN","MAGJLS2B",199,0)
 I X]"" D
"RTN","MAGJLS2B",200,0)
 . N I F I=1,2 I +$P(X,"~",I)=DUZ S Y="Y" Q
"RTN","MAGJLS2B",201,0)
 Q:$Q Y  Q
"RTN","MAGJLS2B",202,0)
 ;
"RTN","MAGJLS2B",203,0)
UPDR ; Add Newly Interp exams to Recent; called from magjls2
"RTN","MAGJLS2B",204,0)
 D PARAMS(9995)
"RTN","MAGJLS2B",205,0)
 I LSTID D
"RTN","MAGJLS2B",206,0)
 . S X=$$CURLIST^MAGJLS2(LSTNAM),LSTAGE=$P(X,U,2),LSTNUM=+X
"RTN","MAGJLS2B",207,0)
 . D LSTCOMP^MAGJLS2()
"RTN","MAGJLS2B",208,0)
UPDRZ Q
"RTN","MAGJLS2B",209,0)
 ;
"RTN","MAGJLS2B",210,0)
END ;
"RTN","MAGJLS3")
0^5^B84076756
"RTN","MAGJLS3",1,0)
MAGJLS3        ;WIRMFO/JHC Rad. Workstation RPC calls ; 29 Jul 2003  10:00 AM
"RTN","MAGJLS3",2,0)
 ;;3.0;IMAGING;**16,22,18,101**;Nov 06, 2009;Build 50
"RTN","MAGJLS3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS3",11,0)
 ;; |                                                               |
"RTN","MAGJLS3",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS3",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS3",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS3",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS3",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS3",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS3",18,0)
 ;;
"RTN","MAGJLS3",19,0)
 Q
"RTN","MAGJLS3",20,0)
 ; EPs:
"RTN","MAGJLS3",21,0)
 ; BLDACTV
"RTN","MAGJLS3",22,0)
 ;
"RTN","MAGJLS3",23,0)
BLDACTV(MAGGRY,DATA,MAGLST) ; get subset of Active Exams; called from MAGJLS2
"RTN","MAGJLS3",24,0)
 ;MAGGRY - Indirect Global ref of return array
"RTN","MAGJLS3",25,0)
 ;DATA: Listyp ^ Imaging Types
"RTN","MAGJLS3",26,0)
 ;Listyp = U  -- UNREAD Exams (Status Category=E)
"RTN","MAGJLS3",27,0)
 ;   = R  -- RECENT (Sts Cat's D & T)
"RTN","MAGJLS3",28,0)
 ;   = A  -- ALL Active (Cat's E, D, & T)
"RTN","MAGJLS3",29,0)
 ;   = P  -- PENDING (Cat W)
"RTN","MAGJLS3",30,0)
 ;   = N  -- Newly Interpreted Exams (No Cat.-Internal use only)
"RTN","MAGJLS3",31,0)
 ;ImgTypes = List of Imaging Types to process, or "ALL" for all
"RTN","MAGJLS3",32,0)
 ; MAGLST = $NA ref to return global; references to it use subscript indirection
"RTN","MAGJLS3",33,0)
 ; MAGLST optional: input to specify return global to use
"RTN","MAGJLS3",34,0)
 ; 
"RTN","MAGJLS3",35,0)
 ;* This subrtn can receive U/R/A/P/N (LSTREQ)-- ^_delim list of ImgTypes (IMTYPS)
"RTN","MAGJLS3",36,0)
 N RADFN,RADTI,RACNI,REMX
"RTN","MAGJLS3",37,0)
 N HDR,HDRLST,MAGIMGTY,MAGRACNT,MAGRET,LSTREQ,LISTYP,LISCAT,IMTYPS
"RTN","MAGJLS3",38,0)
 N REPLY,STAT,TYP,SORTMAG,DIQUIET,STATCHK,LASTDT,IMGSONLY,URGORD,REMONLY
"RTN","MAGJLS3",39,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLS3",40,0)
 I $G(MAGLST)="" S MAGLST=$NA(^TMP($J,"MAGJACTIVE")) ; default loc'n if not passed in
"RTN","MAGJLS3",41,0)
 K ^TMP($J,"MAGRAEX"),@MAGLST
"RTN","MAGJLS3",42,0)
 S LSTREQ=$P(DATA,U),IMTYPS=$P(DATA,U,2,99)
"RTN","MAGJLS3",43,0)
 I LSTREQ="U"!(LSTREQ="R")!(LSTREQ="A")!(LSTREQ="P")!(LSTREQ="N")!(LSTREQ="H")
"RTN","MAGJLS3",44,0)
 E  S REPLY="0^4~Invalid Request (List Type="_LSTREQ_")" G BLDACTVZ
"RTN","MAGJLS3",45,0)
 S MAGRACNT=0
"RTN","MAGJLS3",46,0)
 S X=$G(^MAG(2006.69,1,0)),IMGSONLY=+$P(X,U,7),REMX=+$P(X,U,10) ; show only exams w/ images?
"RTN","MAGJLS3",47,0)
 S REMONLY=0
"RTN","MAGJLS3",48,0)
 I $G(MAGJOB("REMOTE")) D  ; ;show remote cache only?
"RTN","MAGJLS3",49,0)
 . I MAGJOB("P32") S REMONLY=REMX
"RTN","MAGJLS3",50,0)
 . E  Q:(LSTREQ="H")  S REMONLY=+$G(MAGJOB("REMOTESCREEN"))
"RTN","MAGJLS3",51,0)
 S X=$G(^MAG(2006.69,1,1)),URGORD=$P(X,U)
"RTN","MAGJLS3",52,0)
 S:URGORD="" URGORD="S,U,P,R" S URGORD=$TR(URGORD,",") ; "Priority" sort
"RTN","MAGJLS3",53,0)
 S HDR=$S(LSTREQ="U":"UNREAD",LSTREQ="R":"RECENT",LSTREQ="P":"PENDING",LSTREQ="A":"UNREAD and RECENT",LSTREQ="N":"NEWLY INTERP",LSTREQ="H":"HISTORY",1:"")_" Exams"_" for IMAGING TYPES: "
"RTN","MAGJLS3",54,0)
 S LISTYP=$S(LSTREQ="U":"E",LSTREQ="R":"D^T",LSTREQ="A":"E^D^T",LSTREQ="P":"W",LSTREQ="N":"",LSTREQ="H":"",1:"E")
"RTN","MAGJLS3",55,0)
 S REPLY="0^4~Compiling list of Radiology Exams (ACTIVE)."
"RTN","MAGJLS3",56,0)
 I $G(BKGPROC),(LSTREQ="R") K ^TMP($J,"NEWINT") S ^TMP($J,"NEWINT")=+$G(^XTMP("MAGJ2","RECENT",0))
"RTN","MAGJLS3",57,0)
 I LSTREQ="N" D BLDACT2 G BLDACTVZ
"RTN","MAGJLS3",58,0)
 I LSTREQ="H" D HISTBLD^MAGJLS3A G BLDACTVZ
"RTN","MAGJLS3",59,0)
 D BLDACT1
"RTN","MAGJLS3",60,0)
BLDACTVZ ;
"RTN","MAGJLS3",61,0)
 I 'MAGRACNT S:(REPLY["Compiling") REPLY="0^2~No Exams Found"
"RTN","MAGJLS3",62,0)
 E  D
"RTN","MAGJLS3",63,0)
 . I IMTYPS="ALL" S HDR=HDR_" ALL"
"RTN","MAGJLS3",64,0)
 . E  S Y="" F I=0:1 S Y=$O(HDRLST(Y)) Q:Y=""  S HDR=HDR_$S('I:"",1:", ")_Y
"RTN","MAGJLS3",65,0)
 . S REPLY=MAGRACNT_U_"1~"_HDR
"RTN","MAGJLS3",66,0)
 S @MAGLST@(0,1)=REPLY,^(2)=""
"RTN","MAGJLS3",67,0)
 K ^TMP($J,"MAGRAEX"),^("RAE1")
"RTN","MAGJLS3",68,0)
 S MAGGRY=MAGLST
"RTN","MAGJLS3",69,0)
 Q
"RTN","MAGJLS3",70,0)
BLDACT1 ; Compile exams by Status codes
"RTN","MAGJLS3",71,0)
 D BLDSTAT^MAGJLS3A
"RTN","MAGJLS3",72,0)
 F  S LISCAT=$P(LISTYP,U),LISTYP=$P(LISTYP,U,2,9) Q:LISCAT=""  D
"RTN","MAGJLS3",73,0)
 . I IMTYPS="ALL" S TYP="" D  Q
"RTN","MAGJLS3",74,0)
 .. F  S TYP=$O(STAT(LISCAT,TYP)) Q:TYP=""  D IMGTYP(LISCAT,TYP)
"RTN","MAGJLS3",75,0)
 . E  I +IMTYPS D IMGTYLST(LISCAT,IMTYPS) Q
"RTN","MAGJLS3",76,0)
 . E  S REPLY="0^4~Invalid Imaging Type"
"RTN","MAGJLS3",77,0)
 Q
"RTN","MAGJLS3",78,0)
BLDACT2 ; Add recently interpreted exams to the "Recent" compile data
"RTN","MAGJLS3",79,0)
 ; 1st, compile these into their own list
"RTN","MAGJLS3",80,0)
 N CNT,INDX,RAST,STATCHK,RECLIST,REC,X1,X2
"RTN","MAGJLS3",81,0)
 S X=$G(^XTMP("MAGJ2","RECENT",0)),INDX=+$P(X,U,2)
"RTN","MAGJLS3",82,0)
 F  S INDX=$O(^XTMP("MAGJ2","RECENT",INDX)) Q:'INDX  S X=^(INDX) D
"RTN","MAGJLS3",83,0)
 . S RADFN=$P(X,U),RADTI=$P(X,U,2),RACNI=$P(X,U,3),(RAST,STATCHK)=$P(X,U,4)
"RTN","MAGJLS3",84,0)
 . D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJLS3",85,0)
 . I MAGRET D SVMAG2A()
"RTN","MAGJLS3",86,0)
 . S $P(^XTMP("MAGJ2","RECENT",0),U,2)=INDX
"RTN","MAGJLS3",87,0)
 ; copy the above records to the "RECENT" curlist
"RTN","MAGJLS3",88,0)
 S RECLIST=+$$CURLIST^MAGJLS2("LS9992")
"RTN","MAGJLS3",89,0)
 I 'RECLIST S RECLIST=+$G(^XTMP("MAGJ2","BKGND","LS9992",0))
"RTN","MAGJLS3",90,0)
 I 'RECLIST Q  ; Recent list not being compiled--skip it!
"RTN","MAGJLS3",91,0)
 F CNT=1:1:MAGRACNT S X1=@MAGLST@(CNT,1),X2=^(2) D  ; MAGLST described at BLDACTV
"RTN","MAGJLS3",92,0)
 . S REC=^XTMP("MAGJ2","LS9992",RECLIST,0,1)+1
"RTN","MAGJLS3",93,0)
 . S ^XTMP("MAGJ2","LS9992",RECLIST,REC,1)=X1,^(2)=X2
"RTN","MAGJLS3",94,0)
 . S $P(^XTMP("MAGJ2","LS9992",RECLIST,0,1),U)=REC
"RTN","MAGJLS3",95,0)
 Q
"RTN","MAGJLS3",96,0)
 ;
"RTN","MAGJLS3",97,0)
SVMAG2A(PIPE3) ;used by subroutine at tag BLDACTV
"RTN","MAGJLS3",98,0)
 ; load return array @MAGLST@(n, ...
"RTN","MAGJLS3",99,0)
 ; Note: ^TMP("MAGRAEX" is set by the subroutine Getexam2^Magjutl1
"RTN","MAGJLS3",100,0)
 ; PIPE3 optional; contains data that is passed through the system; e.g.
"RTN","MAGJLS3",101,0)
 ;   the HISTORY List receives data from the client which is augmented
"RTN","MAGJLS3",102,0)
 ;   and passed back to the client
"RTN","MAGJLS3",103,0)
 ;Set outside this subrtn:STATCHK,RAST,LSTREQ,REMONLY,BKGPROC,MAGRACNT,MAGLST
"RTN","MAGJLS3",104,0)
 ;
"RTN","MAGJLS3",105,0)
 N MAGDT,SORTDT,IMGCNT,ONL,XX,XX2,Y,RARPT,KEY,RASTCAT,Y2
"RTN","MAGJLS3",106,0)
 N REMOTE,MODALITY,DAYCASE,EXCAT,ORD,URG,URG1,PREOP,LASTSSN,CURPRIO,STATUS
"RTN","MAGJLS3",107,0)
 N REMOTE2,LRFLAG,TECH,REGDT,REGDTSRT,PTID
"RTN","MAGJLS3",108,0)
 S PIPE3=$G(PIPE3,"")
"RTN","MAGJLS3",109,0)
 S URG="",PREOP=""   ; <*> Need below until RAO7PC1A returns URG
"RTN","MAGJLS3",110,0)
 S X=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJLS3",111,0)
 S ORD=$P(X,U,11)
"RTN","MAGJLS3",112,0)
 I ORD S Y=$G(^RAO(75.1,ORD,0)),URG=$P(Y,U,6),PREOP=$P(Y,U,12)
"RTN","MAGJLS3",113,0)
 S XX=$G(^TMP($J,"MAGRAEX",1,1)),XX2=$G(^(2))
"RTN","MAGJLS3",114,0)
 I $G(STATCHK),(STATCHK=$P(XX,U,11))
"RTN","MAGJLS3",115,0)
 E  I LSTREQ="H" S RAST=$P(XX,U,11)
"RTN","MAGJLS3",116,0)
 E  Q       ;  index '= stored status
"RTN","MAGJLS3",117,0)
 S RARPT=$P(XX,U,10)
"RTN","MAGJLS3",118,0)
 D IMGINFO^MAGJUTL2(RARPT,.Y)
"RTN","MAGJLS3",119,0)
 S IMGCNT=$P(Y,U),ONL=$P(Y,U,2),MAGDT=$P(Y,U,3),REMOTE=$P(Y,U,4),MODALITY=$P(Y,U,5),PLACE=$P(Y,U,6),KEY=$P(Y,U,7)
"RTN","MAGJLS3",120,0)
 S REMOTE2=REMOTE
"RTN","MAGJLS3",121,0)
 I IMGSONLY,'IMGCNT Q  ;only list exams w/ imgs
"RTN","MAGJLS3",122,0)
 I REMONLY,'REMOTE,'$G(BKGPROC) Q  ; only list remote exams
"RTN","MAGJLS3",123,0)
 S:PLACE PLACE=$P($G(^MAG(2006.1,PLACE,0)),U,9)
"RTN","MAGJLS3",124,0)
 I MAGDT="" S MAGDT=$P(XX,U,7)
"RTN","MAGJLS3",125,0)
 S SORTDT=MAGDT
"RTN","MAGJLS3",126,0)
 S MAGDT=$$FMTE^XLFDT(MAGDT,"5Z")
"RTN","MAGJLS3",127,0)
 S REGDTSRT=$P(XX,U,7),REGDT=$$FMTE^XLFDT(REGDTSRT,"5Z")
"RTN","MAGJLS3",128,0)
   ; XX 1 RADFN   RADTI    RACNI   RANME    RASSN  <-- from GETEXAM
"RTN","MAGJLS3",129,0)
   ;    6 RADATE  RADTE    RACN    RAPRC     RARPT
"RTN","MAGJLS3",130,0)
   ;   11 RAST    DAYCASE  RAELOC   RASTP     RASTORD
"RTN","MAGJLS3",131,0)
   ;   16 RADTPRT RACPT    IMTYPABB
"RTN","MAGJLS3",132,0)
   ;XX2 1 REQLOCABB  REQLOCNM  RdRIST  COMPLIC  RAD_DIV
"RTN","MAGJLS3",133,0)
   ;    6 SITE_CODE  RISTISME  PROCMOD  REQLOCT  REQWARD
"RTN","MAGJLS3",134,0)
   ;   11 RASTCAT   LRFLAG   TECH
"RTN","MAGJLS3",135,0)
 S:'URG URG=9  ;  request urgency default to Routine
"RTN","MAGJLS3",136,0)
 I URG=9,(PREOP]"") S URG=8  ; dummy val for Pre-Op
"RTN","MAGJLS3",137,0)
 S URG1=$S(URG=1:"Stat",URG=2:"Urg",URG=8:"PreOp",1:"Rout"),X=$E(URG1),URG1=$F(URGORD,X)-1_"-"_URG1
"RTN","MAGJLS3",138,0)
 I PREOP]"",(URG'=8) S URG1=URG1_"/Pre" ; show PreOp & another priority
"RTN","MAGJLS3",139,0)
 S SORTMAG=$S(+IMGCNT:"A",1:"B") ; sort index: has/not images
"RTN","MAGJLS3",140,0)
 S DAYCASE=$P(XX,U,12),RASTORD=$P(XX,U,15),STATUS=$P(XX,U,11),RASTCAT=$P(XX2,U,11),LRFLAG=$P(XX2,U,12),TECH=$P(XX2,U,13)
"RTN","MAGJLS3",141,0)
 S EXCAT="",CURPRIO=0
"RTN","MAGJLS3",142,0)
 I STATUS]"" D
"RTN","MAGJLS3",143,0)
 . S EXCAT=RASTCAT
"RTN","MAGJLS3",144,0)
 . I RASTORD<2!(EXCAT="W")!('IMGCNT) S CURPRIO=0 ; Cancelled/Waiting/No images: Ignore exam
"RTN","MAGJLS3",145,0)
 . E  I EXCAT="E" S CURPRIO=1  ; Examined="Current" exam
"RTN","MAGJLS3",146,0)
 . E  S CURPRIO=2  ; must be a "prior" exam
"RTN","MAGJLS3",147,0)
 . I CURPRIO,'(ONL="Y") S CURPRIO=3 ; images on jukebox
"RTN","MAGJLS3",148,0)
 . I MAGJOB("P32"),'(EXCAT="E") S EXCAT="" Q  ; P32 compat.
"RTN","MAGJLS3",149,0)
 . I RASTORD=9 S EXCAT="C" ; Complete
"RTN","MAGJLS3",150,0)
 . E  I EXCAT="D"!(EXCAT="T") S EXCAT="I" ; just display one value meaning Interpreted
"RTN","MAGJLS3",151,0)
  ; PTID is Initial w/ last 4 of SSN for VA (Z9999), or MRN for IHS (1.N number)
"RTN","MAGJLS3",152,0)
  ; LASTSSN is either last 4 digits of SSN, or last 4 of whatever number came in, or nil
"RTN","MAGJLS3",153,0)
 S X=$P(XX,U,5) ; SSN in VA, MRN in IHS
"RTN","MAGJLS3",154,0)
 I X?3N1"-"2N1"-"4N S LASTSSN=$P(X,"-",3),PTID=$E($P(XX,U,4))_LASTSSN
"RTN","MAGJLS3",155,0)
 E  S PTID=X D
"RTN","MAGJLS3",156,0)
 . I X?1N.N S X=10000+X,T=$L(X),LASTSSN=$E(X,T-3,T)
"RTN","MAGJLS3",157,0)
 . E  S LASTSSN=""
"RTN","MAGJLS3",158,0)
 ; build output string in Y & Y2
"RTN","MAGJLS3",159,0)
 S Y=DAYCASE_U_U_$P(XX,U,4)_U_PTID
"RTN","MAGJLS3",160,0)
 S Y=Y_U_URG1_U_$E($P(XX,U,9),1,30)_U_MAGDT_U_$E($P(XX,U,14),1,10)_U_IMGCNT
"RTN","MAGJLS3",161,0)
 S Y=Y_U_ONL_U_$E($P(XX,U,13),1,15)_U_REMOTE
"RTN","MAGJLS3",162,0)
 S Y=Y_U_SORTMAG_U_SORTDT_U_MODALITY_U_RAST_U_$$RAIMTYP(RAST)
"RTN","MAGJLS3",163,0)
 S RISTISME=$P(XX2,U,7)
"RTN","MAGJLS3",164,0)
 S Y2=$P(XX2,U,1,3)_U_LASTSSN_U_$P(XX2,U,5)_U_PLACE_U_RISTISME_U_$P(XX2,U,8,9)_U_$P(XX,U,17)_U_$P(XX2,U,10)
"RTN","MAGJLS3",165,0)
 ; add 4 "place holders" for fields that are only in the History list
"RTN","MAGJLS3",166,0)
 S Y2=Y2_U_U_U_U
"RTN","MAGJLS3",167,0)
 S Y2=Y2_U_TECH_U_REGDT_U_REGDTSRT ; p101 adds 3 new fields
"RTN","MAGJLS3",168,0)
 S Y2=Y2_U_"|"_$P(XX,U,1,3)_U_RARPT
"RTN","MAGJLS3",169,0)
 S Y2=Y2_"|"_PIPE3_"|"_EXCAT_"^^^"_MODALITY_U_$P(XX,U,17)_U_CURPRIO_U_RARPT_U_KEY_U_REMOTE2_U_LRFLAG
"RTN","MAGJLS3",170,0)
 ; * Note: Keep Pipe piece 4, above, in sync with lstout^magjls2b & magjlst1 *
"RTN","MAGJLS3",171,0)
 S MAGRACNT=MAGRACNT+1
"RTN","MAGJLS3",172,0)
 S @MAGLST@(MAGRACNT,1)=Y,^(2)=Y2  ; save output for one exam
"RTN","MAGJLS3",173,0)
 I $G(BKGPROC),(LSTREQ="R") S ^TMP($J,"NEWINT",$P(XX,U,1,3))=""
"RTN","MAGJLS3",174,0)
 Q
"RTN","MAGJLS3",175,0)
 ;
"RTN","MAGJLS3",176,0)
RAIMTYP(RAST)   ; return Imaging Type Abbrev for Status Code
"RTN","MAGJLS3",177,0)
 N X S X="" I RAST]"" D
"RTN","MAGJLS3",178,0)
 . S X=$G(RAIMTYP(RAST)) Q:X]""
"RTN","MAGJLS3",179,0)
 . S X=$P($G(^RA(72,RAST,0)),U,7)
"RTN","MAGJLS3",180,0)
 . I X S X=$P($G(^RA(79.2,X,0)),U,3)_"~"_X  ; abb~ien
"RTN","MAGJLS3",181,0)
 . S RAIMTYP(RAST)=X   ; save for future use
"RTN","MAGJLS3",182,0)
 Q X
"RTN","MAGJLS3",183,0)
 ;
"RTN","MAGJLS3",184,0)
IMGTYLST(LISCAT,LST)       ; get exams for list of image types for input LISCAT
"RTN","MAGJLS3",185,0)
 N TYP
"RTN","MAGJLS3",186,0)
 F  Q:'(LST?1.N.E)  S TYP=+$P(LST,U),LST=$P(LST,U,2,99) D:TYP IMGTYP(LISCAT,TYP)
"RTN","MAGJLS3",187,0)
 Q
"RTN","MAGJLS3",188,0)
 ;
"RTN","MAGJLS3",189,0)
IMGTYP(LISCAT,IMGTY)       ; process statuses for one Image Type for LISCAT
"RTN","MAGJLS3",190,0)
 I '$D(^RA(79.2,IMGTY,0)) S REPLY="0^4~Invalid Imaging Type" Q
"RTN","MAGJLS3",191,0)
 N LST
"RTN","MAGJLS3",192,0)
 I $D(STAT)<10 D BLDSTAT^MAGJLS3A
"RTN","MAGJLS3",193,0)
 S (STAT,LST)=""
"RTN","MAGJLS3",194,0)
 S LASTDT=$P(STAT(LISCAT),U)
"RTN","MAGJLS3",195,0)
 F  S STAT=$O(STAT(LISCAT,IMGTY,STAT)) Q:STAT=""  S LST=LST_$S(LST="":"",1:U)_STAT,HDRLST(STAT(LISCAT,IMGTY))=""
"RTN","MAGJLS3",196,0)
 I LST]"" D STATLST(LST)
"RTN","MAGJLS3",197,0)
 Q
"RTN","MAGJLS3",198,0)
 ;
"RTN","MAGJLS3",199,0)
STATLST(LST)       ; get exams for a list of status codes
"RTN","MAGJLS3",200,0)
 F  Q:'(LST?1.N.E)  S STAT=+$P(LST,U),LST=$P(LST,U,2,99) D:STAT STAT(STAT)
"RTN","MAGJLS3",201,0)
 Q
"RTN","MAGJLS3",202,0)
 ;
"RTN","MAGJLS3",203,0)
STAT(RAST)           ; get exams for one status code
"RTN","MAGJLS3",204,0)
 ; uses File #70) "AS" index of active exams
"RTN","MAGJLS3",205,0)
 ;
"RTN","MAGJLS3",206,0)
 N RASTP
"RTN","MAGJLS3",207,0)
 I $D(^RA(72,RAST)) S RASTP=$P(^(RAST,0),U)
"RTN","MAGJLS3",208,0)
 E  S REPLY="0^4~Invalid Exam Status" Q
"RTN","MAGJLS3",209,0)
 I '$D(^RADPT("AS",RAST)) S REPLY="0^2~No exams on file with Exam Status "_RASTP Q
"RTN","MAGJLS3",210,0)
 S RADFN=0,STATCHK=RAST
"RTN","MAGJLS3",211,0)
 F  S RADFN=$O(^RADPT("AS",RAST,RADFN)) Q:RADFN'>0  S RADTI=0 D
"RTN","MAGJLS3",212,0)
 . F  S RADTI=$O(^RADPT("AS",RAST,RADFN,RADTI)) Q:RADTI'>0!(RADTI>LASTDT)  S RACNI=0 D
"RTN","MAGJLS3",213,0)
 .. F  S RACNI=$O(^RADPT("AS",RAST,RADFN,RADTI,RACNI)) Q:RACNI'>0  D
"RTN","MAGJLS3",214,0)
 ... D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJLS3",215,0)
 ... Q:'MAGRET  ; no exam returned
"RTN","MAGJLS3",216,0)
 ... D SVMAG2A()
"RTN","MAGJLS3",217,0)
 Q
"RTN","MAGJLS3",218,0)
 ;
"RTN","MAGJLS3",219,0)
END Q  ; 
"RTN","MAGJLS4")
0^4^B51027684
"RTN","MAGJLS4",1,0)
MAGJLS4 ;WIRMFO/JHC VistARad RPCs--History List ; 29 Jul 2003  10:00 AM
"RTN","MAGJLS4",2,0)
 ;;3.0;IMAGING;**18,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJLS4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLS4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLS4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLS4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLS4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLS4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLS4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLS4",11,0)
 ;; |                                                               |
"RTN","MAGJLS4",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLS4",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLS4",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLS4",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLS4",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLS4",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLS4",18,0)
 ;;
"RTN","MAGJLS4",19,0)
 Q
"RTN","MAGJLS4",20,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLS4",21,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS4",22,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLS4",23,0)
 Q:$Q 1  Q
"RTN","MAGJLS4",24,0)
 ;
"RTN","MAGJLS4",25,0)
 ; Subroutines for Vistarad History List functions
"RTN","MAGJLS4",26,0)
 ; Entry Points:
"RTN","MAGJLS4",27,0)
 ;   HIST -- All History List rpcs go here
"RTN","MAGJLS4",28,0)
 ;
"RTN","MAGJLS4",29,0)
HIST(MAGGRY,PARAMS,DATA) ; History List RPC: MAGJ HISTORYLIST
"RTN","MAGJLS4",30,0)
 ; PARAMS--TXID ^ TXDUZ ^ TXDIV
"RTN","MAGJLS4",31,0)
 ; TXID: Required; designates action to take; see below
"RTN","MAGJLS4",32,0)
 ; TXDUZ: Optional; if supplied, get data for another user (Read Only)
"RTN","MAGJLS4",33,0)
 ; TXDIV: Optional; if supplied, get data for another division (Read Only)
"RTN","MAGJLS4",34,0)
 ;   Note: for now, TXDIV is forced to the Logon Division
"RTN","MAGJLS4",35,0)
 ; DATA--(optional) array of input data; depends on TXID; see subroutines by TXID
"RTN","MAGJLS4",36,0)
 ;
"RTN","MAGJLS4",37,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLS4"
"RTN","MAGJLS4",38,0)
 N TXID,TXDUZ,TXDIV,UPDATEOK,DIQUIET,REPLY
"RTN","MAGJLS4",39,0)
 K ^TMP($J,"RET")
"RTN","MAGJLS4",40,0)
 S TXID=+PARAMS,TXDUZ=+$P(PARAMS,U,2),TXDIV=+$P(PARAMS,U,3)
"RTN","MAGJLS4",41,0)
 I 'TXDUZ S TXDUZ=DUZ
"RTN","MAGJLS4",42,0)
 S UPDATEOK=TXDUZ=DUZ
"RTN","MAGJLS4",43,0)
 S TXDIV=DUZ(2) ; Force to Logon Division for now
"RTN","MAGJLS4",44,0)
 S REPLY="0^1~Performing History List operation."
"RTN","MAGJLS4",45,0)
 I 'TXID!'("1,2,3"[TXID) S REPLY="0^4~Invalid History List operation requested." G HISTZ
"RTN","MAGJLS4",46,0)
 I '$D(DATA)&(TXID=1!TXID=3) S REPLY="0^4~No data supplied for History List update/delete." G HISTZ
"RTN","MAGJLS4",47,0)
 I 'UPDATEOK&("1,3"[TXID) S REPLY="0^4~The current History List may not be updated by the current user." G HISTZ
"RTN","MAGJLS4",48,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLS4",49,0)
 I TXID=1 D HISTADD(.DATA,TXDUZ,TXDIV) G HISTZ
"RTN","MAGJLS4",50,0)
 I TXID=2 D HISTUPD(TXDUZ,TXDIV) D HISTGET(TXDUZ,TXDIV) G HISTZ
"RTN","MAGJLS4",51,0)
 I TXID=3 D HISTDEL(.DATA,TXDUZ,TXDIV) G HISTZ
"RTN","MAGJLS4",52,0)
 ; I TXID=4 D HISTUPD(TXDUZ,TXDIV) G HISTZ ; for now, do this function with txid 2
"RTN","MAGJLS4",53,0)
HISTZ ;
"RTN","MAGJLS4",54,0)
 I 'REPLY S MAGGRY=$NA(^TMP($J,"RET")),@MAGGRY@(0)=REPLY
"RTN","MAGJLS4",55,0)
 E  ; maggry otherwise has been set by called subroutine
"RTN","MAGJLS4",56,0)
 Q
"RTN","MAGJLS4",57,0)
 ;
"RTN","MAGJLS4",58,0)
HISTADD(DATA,TXDUZ,TXDIV) ; add records
"RTN","MAGJLS4",59,0)
 N IDATA,ILOOP,CT,NOGO,EXID,HISDAT,HISTIEN,MAGRACNT,TS
"RTN","MAGJLS4",60,0)
 S IDATA="",CT=0,NOGO=0
"RTN","MAGJLS4",61,0)
 F ILOOP=0:1 S IDATA=$O(DATA(IDATA)) Q:IDATA=""  D
"RTN","MAGJLS4",62,0)
 . S EXID=$P(DATA(IDATA),"|"),HISDAT=$P(DATA(IDATA),"|",2)
"RTN","MAGJLS4",63,0)
 . F I=1:1:4 I '+$P(EXID,U,I) S NOGO=1 Q
"RTN","MAGJLS4",64,0)
 . I NOGO Q
"RTN","MAGJLS4",65,0)
 . L +^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV):2
"RTN","MAGJLS4",66,0)
 . E  Q
"RTN","MAGJLS4",67,0)
 . S X=$G(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0)),HISTIEN=+$P(X,U)+1,$P(^(0),U)=HISTIEN
"RTN","MAGJLS4",68,0)
 . L -^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV)
"RTN","MAGJLS4",69,0)
 . S ^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0,"ADD",HISTIEN)="|"_EXID_"|"_HISTIEN_U_HISDAT_"|"
"RTN","MAGJLS4",70,0)
 . S CT=CT+1
"RTN","MAGJLS4",71,0)
 I 'CT S REPLY="0^3~"_$S(ILOOP:"Unable to add records",1:"No records to add")_" to History List." Q
"RTN","MAGJLS4",72,0)
 S MAGRACNT=0 D ACTIVE^MAGJLS2(.MAGGRY,9996)
"RTN","MAGJLS4",73,0)
 S X=@MAGGRY@(0),X=+X_U_"1~"_$$HISTTL(TXDUZ,TXDIV),@MAGGRY@(0)=X
"RTN","MAGJLS4",74,0)
 S TS="" F I=2,0 S TS=TS_$S(TS="":"",1:U)_$$HTFM^XLFDT($H+I,0)
"RTN","MAGJLS4",75,0)
 S ^XTMP("MAGJ2",0)=TS_U_"VistaRad List Compile"
"RTN","MAGJLS4",76,0)
 S REPLY=1
"RTN","MAGJLS4",77,0)
 Q
"RTN","MAGJLS4",78,0)
 ;
"RTN","MAGJLS4",79,0)
HISTTL(TXDUZ,TXDIV) ;  Build list title string
"RTN","MAGJLS4",80,0)
 N LSTTL
"RTN","MAGJLS4",81,0)
 S LSTTL="HISTORY LIST for "_$$USERINF^MAGJUTL3(TXDUZ,.01)_" at "_"Station #"_$$STATN^MAGJEX1(TXDIV)
"RTN","MAGJLS4",82,0)
 S LSTTL=LSTTL_"|"_TXDUZ ; provide report's DUZ to client
"RTN","MAGJLS4",83,0)
 Q LSTTL
"RTN","MAGJLS4",84,0)
 ;
"RTN","MAGJLS4",85,0)
HISTGET(TXDUZ,TXDIV) ; Get full History List for input user for division txdiv
"RTN","MAGJLS4",86,0)
 N MAGLST,LSTTL,LSTID,MAGLST
"RTN","MAGJLS4",87,0)
 S TXDUZ=$G(TXDUZ,DUZ)
"RTN","MAGJLS4",88,0)
 S TXDIV=$G(TXDIV,DUZ(2))
"RTN","MAGJLS4",89,0)
 D PARAMS^MAGJLS2B(9996)
"RTN","MAGJLS4",90,0)
 I 'LSTID S REPLY="0^4~Problem with History List Compile." Q
"RTN","MAGJLS4",91,0)
 S LSTTL=$$HISTTL(TXDUZ,DUZ(2))
"RTN","MAGJLS4",92,0)
 S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0))
"RTN","MAGJLS4",93,0)
 I 'X S REPLY="0^1~No exams found for: "_LSTTL Q
"RTN","MAGJLS4",94,0)
 S MAGLST=$NA(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV))
"RTN","MAGJLS4",95,0)
 D LSTOUT^MAGJLS2B(.MAGGRY,LSTID,MAGLST)
"RTN","MAGJLS4",96,0)
 S REPLY=1
"RTN","MAGJLS4",97,0)
 Q
"RTN","MAGJLS4",98,0)
 ;
"RTN","MAGJLS4",99,0)
HISTDEL(DATA,TXDUZ,TXDIV) ; delete records
"RTN","MAGJLS4",100,0)
 N IDATA,CT,HISTIEN,ALLDONE,LAST
"RTN","MAGJLS4",101,0)
 S IDATA="",CT=0,ALLDONE=0
"RTN","MAGJLS4",102,0)
 L +^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV):2
"RTN","MAGJLS4",103,0)
 E  S REPLY="0^2~Unable to access HISTORY File for deleting records; try again later." Q
"RTN","MAGJLS4",104,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLS4",105,0)
 F  S IDATA=$O(DATA(IDATA)) Q:IDATA=""!ALLDONE  D
"RTN","MAGJLS4",106,0)
 . S HISTIEN=$P(DATA(IDATA),U)
"RTN","MAGJLS4",107,0)
 . I HISTIEN,$D(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN)) K ^(HISTIEN) S CT=CT+1,@MAGGRY@(CT)=HISTIEN Q
"RTN","MAGJLS4",108,0)
 . E  I HISTIEN="ALL" S HISTIEN=0 D  S ALLDONE=1
"RTN","MAGJLS4",109,0)
 . . F  S HISTIEN=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN)) Q:'HISTIEN  K ^(HISTIEN) S CT=CT+1,@MAGGRY@(CT)=HISTIEN
"RTN","MAGJLS4",110,0)
 I '$D(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0,"ADD")) S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,""),-1),^(0)=X_U_X
"RTN","MAGJLS4",111,0)
 L -^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV)
"RTN","MAGJLS4",112,0)
 I 'CT S REPLY="0^3~No HISTORY List records found to delete."
"RTN","MAGJLS4",113,0)
 E  S REPLY=CT_"^1~"_CT_" HISTORY List records deleted."
"RTN","MAGJLS4",114,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJLS4",115,0)
 S REPLY=1
"RTN","MAGJLS4",116,0)
 Q
"RTN","MAGJLS4",117,0)
 ;
"RTN","MAGJLS4",118,0)
HISTUPD(TXDUZ,TXDIV) ; Update selected fields in History List
"RTN","MAGJLS4",119,0)
 N LSTTL,CT,NOHIT,RAST,STATUS,REMOTE,RIST1,RIST2,RIST,RISTISME
"RTN","MAGJLS4",120,0)
 N EXID,HISTIEN,RARPT,RADFN,RADTI,RACNI,XX1,XX2,T,X,DELETED,HDATE
"RTN","MAGJLS4",121,0)
 S CT=0,NOHIT=0
"RTN","MAGJLS4",122,0)
 S TXDUZ=$G(TXDUZ,DUZ)
"RTN","MAGJLS4",123,0)
 S TXDIV=$G(TXDIV,DUZ(2))
"RTN","MAGJLS4",124,0)
 S LSTTL=$$HISTTL(TXDUZ,DUZ(2))
"RTN","MAGJLS4",125,0)
 S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,0))
"RTN","MAGJLS4",126,0)
 I 'X S REPLY="0^1~No exams found for: "_LSTTL Q
"RTN","MAGJLS4",127,0)
 L +^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV):2
"RTN","MAGJLS4",128,0)
 E  S REPLY="0^2~Unable to access HISTORY File for updating records; try again later." Q
"RTN","MAGJLS4",129,0)
 S HISTIEN=0
"RTN","MAGJLS4",130,0)
 F  S HISTIEN=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN)) Q:'HISTIEN  S XX1=$G(^(HISTIEN,1)),XX2=$G(^(2)) D
"RTN","MAGJLS4",131,0)
 . S EXID=$P(XX2,"|",2),RARPT=+$P(EXID,U,4),RADFN=+$P(EXID,U),RADTI=+$P(EXID,U,2),RACNI=+$P(EXID,U,3)
"RTN","MAGJLS4",132,0)
 . ; <*> Below is for phase 1 Alpha, til have final user setting for this <*> to be removed
"RTN","MAGJLS4",133,0)
 . ; Age limit parameter to be passed in with txid 2 rpc call; setting is on client <*>
"RTN","MAGJLS4",134,0)
 . S HDATE=$P(XX2,U,13) D  Q:DELETED
"RTN","MAGJLS4",135,0)
 . . S DELETED=0,HDATE=$P(HDATE,"@")
"RTN","MAGJLS4",136,0)
 . . S X=HDATE,%DT="" D ^%DT K %DT
"RTN","MAGJLS4",137,0)
 . . I $$FMTH^XLFDT(Y,1)<($H-3) K ^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN) S DELETED=1 Q
"RTN","MAGJLS4",138,0)
 . ; <*> End of temp change
"RTN","MAGJLS4",139,0)
 . I RARPT,RADFN,RADTI,RACNI
"RTN","MAGJLS4",140,0)
 . E  S NOHIT=NOHIT+1 Q
"RTN","MAGJLS4",141,0)
 . D IMGINFO^MAGJUTL2(RARPT,.X) S REMOTE=$P(X,U,4)
"RTN","MAGJLS4",142,0)
 . S X=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJLS4",143,0)
 . I X="" Q  ; rad exam deleted
"RTN","MAGJLS4",144,0)
 . S RAST=$P(X,U,3),RIST1=$P(X,U,12),RIST2=$P(X,U,15)
"RTN","MAGJLS4",145,0)
 . S STATUS=$S(RAST:$P(^RA(72,RAST,0),U),1:"")
"RTN","MAGJLS4",146,0)
 . S (RIST,RISTISME)=""
"RTN","MAGJLS4",147,0)
 . I RIST1!RIST2 S X=$$RIST^MAGJUTL1(RIST1,RIST2),RIST=$P(X,U),RISTISME=$P(X,U,2)
"RTN","MAGJLS4",148,0)
 . S RISTISME=$$RISTISME^MAGJLS2B(RISTISME)
"RTN","MAGJLS4",149,0)
 . S $P(XX1,U,16)=RAST,$P(XX1,U,8)=STATUS,$P(XX1,U,12)=REMOTE
"RTN","MAGJLS4",150,0)
 . S T=$P(XX2,"|"),$P(T,U,3)=RIST,$P(T,U,7)=RISTISME,$P(XX2,"|")=T
"RTN","MAGJLS4",151,0)
 . S ^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,HISTIEN,1)=XX1,^(2)=XX2
"RTN","MAGJLS4",152,0)
 . S CT=CT+1
"RTN","MAGJLS4",153,0)
 S X=$O(^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV,""),-1),^(0)=X_U_X ; <*> for phase 1 alpha only?
"RTN","MAGJLS4",154,0)
 L -^XTMP("MAGJ2","HISTORY",TXDUZ,TXDIV)
"RTN","MAGJLS4",155,0)
 S REPLY="0^1~HISTORY File records updated." Q
"RTN","MAGJLS4",156,0)
 Q
"RTN","MAGJLS4",157,0)
 ;
"RTN","MAGJLS4",158,0)
END Q  ; 
"RTN","MAGJLST1")
0^17^B50075739
"RTN","MAGJLST1",1,0)
MAGJLST1 ;WIRMFO/JHC VistARad RPC calls ; 29 Jul 2003  10:01 AM
"RTN","MAGJLST1",2,0)
 ;;3.0;IMAGING;**16,22,18,65,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJLST1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJLST1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJLST1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJLST1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJLST1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJLST1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJLST1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJLST1",11,0)
 ;; |                                                               |
"RTN","MAGJLST1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJLST1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJLST1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJLST1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJLST1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJLST1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJLST1",18,0)
 ;;
"RTN","MAGJLST1",19,0)
 Q
"RTN","MAGJLST1",20,0)
 ;
"RTN","MAGJLST1",21,0)
 ; Subroutines for fetching Exam Info for Radiology Workstation
"RTN","MAGJLST1",22,0)
 ; Exam listings:
"RTN","MAGJLST1",23,0)
 ;     PTLIST -- list subset of all exams for a patient
"RTN","MAGJLST1",24,0)
 ;        RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",25,0)
 ;   PTLSTALL -- list ALL exams for a patient
"RTN","MAGJLST1",26,0)
 ;       RPC Call: MAGJ PT ALL EXAMS
"RTN","MAGJLST1",27,0)
 ;
"RTN","MAGJLST1",28,0)
 Q
"RTN","MAGJLST1",29,0)
ERR N ERR S ERR=$$EC^%ZOSV S ^TMP($J,"RET",0)="0^4~"_ERR
"RTN","MAGJLST1",30,0)
 S MAGGRY=$NA(^TMP($J,"RET"))
"RTN","MAGJLST1",31,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJLST1",32,0)
 Q:$Q 1  Q
"RTN","MAGJLST1",33,0)
 ;
"RTN","MAGJLST1",34,0)
PTLSTALL(MAGGRY,DATA) ; List ALL exams for a patient
"RTN","MAGJLST1",35,0)
 ;  RPC is MAGJ PT ALL EXAMS
"RTN","MAGJLST1",36,0)
 N PARAM
"RTN","MAGJLST1",37,0)
 I MAGJOB("P32") S PARAM="^99^999"
"RTN","MAGJLST1",38,0)
 E  S PARAM="^^^"_$P(DATA,U,2,3)
"RTN","MAGJLST1",39,0)
 D PTLIST(.MAGGRY,$P(DATA,U)_PARAM)
"RTN","MAGJLST1",40,0)
 Q
"RTN","MAGJLST1",41,0)
 ;
"RTN","MAGJLST1",42,0)
PTLIST(MAGGRY,DATA) ; get list of exams for a patient
"RTN","MAGJLST1",43,0)
 ; 
"RTN","MAGJLST1",44,0)
 ; MAGGRY - indirect reference to return array of exams for a patient
"RTN","MAGJLST1",45,0)
 ; DATA   - DFN ^ LIMYEARS ^ LIMEXAMS ^ BEGDT ^ ONESHOT
"RTN","MAGJLST1",46,0)
 ;   DFN--Patient's DFN
"RTN","MAGJLST1",47,0)
 ;   LIMYRS--Restrict exams up to # Years back (defunct)
"RTN","MAGJLST1",48,0)
 ;   LIMEXAMS--Restrict exams up to # of exams
"RTN","MAGJLST1",49,0)
 ;   BEGDT--Begin date for exam fetch (Patch 18 addition--see below)
"RTN","MAGJLST1",50,0)
 ;   ONESHOT--Number days back to search, in one fell swoop
"RTN","MAGJLST1",51,0)
 ; Returns data in ^TMP($J,"MAGRAEX",0:n)
"RTN","MAGJLST1",52,0)
 ; RPC Call: MAGJ PTRADEXAMS
"RTN","MAGJLST1",53,0)
 ;
"RTN","MAGJLST1",54,0)
 ; Patch 18 eliminates "Patient Exams" / "All Patient Exams" distinction.
"RTN","MAGJLST1",55,0)
 ; It always retrieves ALL exams, but uses multiple RPC calls, so the client
"RTN","MAGJLST1",56,0)
 ; incrementally builds the list; this is to provide all the data, but without
"RTN","MAGJLST1",57,0)
 ; incurring any long pauses to provide the info to the user.
"RTN","MAGJLST1",58,0)
 ; Below, the P18 code fetches RAD data in one-year chunks, and repeats
"RTN","MAGJLST1",59,0)
 ;   until over 20 exams have been processed, at which point the RPC reply
"RTN","MAGJLST1",60,0)
 ;   is posted, along with the last date processed; this value is then used for
"RTN","MAGJLST1",61,0)
 ;   a subsequent RPC call to get the next chunk of the record; etc. till all done.
"RTN","MAGJLST1",62,0)
 ;   The P32 code is re-organized, and now exits only for LIMEXAMS (ignore LimYears)
"RTN","MAGJLST1",63,0)
 ;   
"RTN","MAGJLST1",64,0)
 N CNT,DFN,ISS,PATNAME,DIQUIET,MAGRACNT,MAGRET,REPLY,REMOTE
"RTN","MAGJLST1",65,0)
 N DAYCASE,DIV,EXCAT,MAGDT,XX,XX2,WHOLOCK,MODALITY,MYLOCK,PLACE,ENDLOOP
"RTN","MAGJLST1",66,0)
 N LIMEXAMS,BEGDT,SAVBEGDT,ENDDT,MORE,RDRIST,PSSN,CPT,PARAM
"RTN","MAGJLST1",67,0)
 N CURPRIO,STATUS,RARPT,KEY,X2,REMOTE2,ONESHOT,LIMDAYS
"RTN","MAGJLST1",68,0)
 N IMGCNT,LRFLAG,MSG,ONL,PROCMOD,RASTCAT,RASTORD
"RTN","MAGJLST1",69,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJLST1"
"RTN","MAGJLST1",70,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJLST1",71,0)
 S PARAM=$G(^MAG(2006.69,1,0))
"RTN","MAGJLST1",72,0)
 I MAGJOB("P32") D
"RTN","MAGJLST1",73,0)
 . S LIMEXAMS=+$P(PARAM,U,15)
"RTN","MAGJLST1",74,0)
 . S:'LIMEXAMS LIMEXAMS=999 ; default to show ALL Exams
"RTN","MAGJLST1",75,0)
 . I $P(DATA,U,3) S LIMEXAMS=+$P(DATA,U,3)
"RTN","MAGJLST1",76,0)
 . I LIMEXAMS<20 S LIMEXAMS=20
"RTN","MAGJLST1",77,0)
 . S BEGDT=""
"RTN","MAGJLST1",78,0)
 E  S BEGDT=$P(DATA,U,4),ONESHOT=$P(DATA,U,5)  ; P65 chg
"RTN","MAGJLST1",79,0)
 K MAGGRY S DFN=+DATA
"RTN","MAGJLST1",80,0)
 S MAGRACNT=1,CNT=0 K ^TMP($J,"MAGRAEX"),^("MAGRAEX2")
"RTN","MAGJLST1",81,0)
 S REPLY="0^4~Compiling list of Radiology Exams."
"RTN","MAGJLST1",82,0)
 I DFN,$D(^DPT(DFN,0)) S PATNAME=$P(^(0),U) D
"RTN","MAGJLST1",83,0)
 . D PID^VADPT6 S PSSN=$S(VAERR:"Unknown",1:VA("PID"))
"RTN","MAGJLST1",84,0)
 . K VA("PID"),VA("BID"),VAERR
"RTN","MAGJLST1",85,0)
 . S ENDLOOP=0,BEGDT=$S(+BEGDT:BEGDT,1:"")
"RTN","MAGJLST1",86,0)
 . I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S REPLY="0^4~VistARad Patch 32 is no longer supported; contact Imaging Support for the current version of the VistARad client software." Q  ; <*>
"RTN","MAGJLST1",87,0)
 . F  D  Q:'MORE  Q:ENDLOOP  S BEGDT=MORE+1
"RTN","MAGJLST1",88,0)
 . . I 'BEGDT S BEGDT=DT,X2=0
"RTN","MAGJLST1",89,0)
 . . E  S X2=-1
"RTN","MAGJLST1",90,0)
 . . S LIMDAYS=365,MORE=1
"RTN","MAGJLST1",91,0)
 . . I 'MAGJOB("P32") I ONESHOT,(ONESHOT>0) S LIMDAYS=+ONESHOT
"RTN","MAGJLST1",92,0)
 . . S ENDDT=$$FMADD^XLFDT(BEGDT,X2)
"RTN","MAGJLST1",93,0)
 . . S BEGDT=$$FMADD^XLFDT(ENDDT,-LIMDAYS)
"RTN","MAGJLST1",94,0)
 . . D GETEXAM3^MAGJUTL1(DFN,BEGDT,ENDDT,.MAGRACNT,.MAGRET,.MORE)
"RTN","MAGJLST1",95,0)
 . . I MAGJOB("P32") S ENDLOOP=(MAGRACNT>LIMEXAMS)
"RTN","MAGJLST1",96,0)
 . . E  S ENDLOOP=(MAGRACNT>20)!+ONESHOT ; For testing only, use >8
"RTN","MAGJLST1",97,0)
 . I 'MORE S SAVBEGDT=0
"RTN","MAGJLST1",98,0)
 . E  S SAVBEGDT=MORE+1 ; adding 1 correctly inits value for subseqent call
"RTN","MAGJLST1",99,0)
 . I MAGRACNT>1 D PTLOOP
"RTN","MAGJLST1",100,0)
 E  S REPLY="0^4~Invalid Radiology Patient"
"RTN","MAGJLST1",101,0)
 I MAGRACNT<2 S:(REPLY["Compiling") REPLY="0^2~No Exams Found for "_PATNAME
"RTN","MAGJLST1",102,0)
 I CNT!(REPLY["No Exams Found") D
"RTN","MAGJLST1",103,0)
 . I 'MORE S MSG="ALL exams are listed."
"RTN","MAGJLST1",104,0)
 . E  S MORE=$$FMTE^XLFDT(MORE) S MSG="Patient has more exams on file."
"RTN","MAGJLST1",105,0)
 . ; show SSN only if the user is a radiologist
"RTN","MAGJLST1",106,0)
 . S X=+MAGJOB("USER",1)
"RTN","MAGJLST1",107,0)
 . I '(X=12!(X=15)),(PSSN?3N1"-"2N1"-"4N) S PSSN=$E(PATNAME)_$P(PSSN,"-",3)
"RTN","MAGJLST1",108,0)
 . S PSSN=" ("_PSSN_")"
"RTN","MAGJLST1",109,0)
 . I CNT S REPLY=CNT_"^1~Radiology Exams for: "_PATNAME_PSSN_" -- "_MSG
"RTN","MAGJLST1",110,0)
 . E  S REPLY=REPLY_" -- "_MSG
"RTN","MAGJLST1",111,0)
 . S ^TMP($J,"MAGRAEX2",1)="^Day/Case~S3~1^Lock~~2^Procedure~~6^Modifier~~25^Image Date/Time~S1~7^Status~~8^# Img~S2~9^Onl~~10^RC~~12^Site~~23^Mod~~15^Interp By~~20^Imaging Loc~~11^CPT~~27"
"RTN","MAGJLST1",112,0)
 I MAGJOB("P32"),+$G(MAGJOB("P32STOP")) S ^TMP($J,"MAGRAEX2",1)="^^"
"RTN","MAGJLST1",113,0)
 I 'MAGJOB("P32") S $P(REPLY,"|",2)=SAVBEGDT
"RTN","MAGJLST1",114,0)
 S ^TMP($J,"MAGRAEX2",0)=REPLY
"RTN","MAGJLST1",115,0)
 S MAGGRY=$NA(^TMP($J,"MAGRAEX2"))
"RTN","MAGJLST1",116,0)
 K ^TMP($J,"RAE1"),^("MAGRAEX")
"RTN","MAGJLST1",117,0)
 Q
"RTN","MAGJLST1",118,0)
 ;
"RTN","MAGJLST1",119,0)
PTLOOP ; loop through exam data & package it for VRAD use
"RTN","MAGJLST1",120,0)
 S ISS=0
"RTN","MAGJLST1",121,0)
 F  S ISS=$O(^TMP($J,"MAGRAEX",ISS)) Q:'ISS  S XX=^(ISS,1),XX2=^(2) D
"RTN","MAGJLST1",122,0)
 . S CNT=CNT+1,RARPT=$P(XX,U,10)
"RTN","MAGJLST1",123,0)
 . D IMGINFO^MAGJUTL2(RARPT,.Y)
"RTN","MAGJLST1",124,0)
 . S IMGCNT=$P(Y,U),ONL=$P(Y,U,2),MAGDT=$P(Y,U,3),REMOTE=$P(Y,U,4),MODALITY=$P(Y,U,5),PLACE=$P(Y,U,6),KEY=$P(Y,U,7)
"RTN","MAGJLST1",125,0)
 . S REMOTE2=REMOTE
"RTN","MAGJLST1",126,0)
 . S:PLACE PLACE=$P($G(^MAG(2006.1,PLACE,0)),U,9)
"RTN","MAGJLST1",127,0)
 . I REMOTE D
"RTN","MAGJLST1",128,0)
 .. S T="" F I=1:1:$L(REMOTE,",") S T=T_$S(T="":"",1:",")_$P($G(^MAG(2005.2,$P(REMOTE,",",I),3)),U,5)
"RTN","MAGJLST1",129,0)
 .. S REMOTE=T
"RTN","MAGJLST1",130,0)
 . S DIV="",X=$P(XX2,U,5) I X'=DUZ(2) S DIV=$$STATN(X)
"RTN","MAGJLST1",131,0)
 . I MAGDT="" S MAGDT=$P(XX,U,7)
"RTN","MAGJLST1",132,0)
 . S MAGDT=$$FMTE^XLFDT(MAGDT,"5Z")
"RTN","MAGJLST1",133,0)
 . S WHOLOCK=RARPT,MYLOCK="",DAYCASE=$P(XX,U,12)
"RTN","MAGJLST1",134,0)
 . I WHOLOCK]"" S T=$$CHKLOCK^MAGJLS2B(WHOLOCK,DAYCASE),WHOLOCK=$P(T,U),MYLOCK=$P(T,U,2)
"RTN","MAGJLST1",135,0)
 . S RDRIST=$P(XX2,U,3),PROCMOD=$P(XX2,U,8),CPT=$P(XX,U,17),RASTORD=$P(XX,U,15)
"RTN","MAGJLST1",136,0)
 . S Y=U_DAYCASE_U_WHOLOCK_U_$E($P(XX,U,9),1,26)_U_PROCMOD_U_MAGDT_U_$E($P(XX,U,14),1,16)_U_IMGCNT_U_ONL
"RTN","MAGJLST1",137,0)
 . S Y=Y_U_REMOTE
"RTN","MAGJLST1",138,0)
 . S Y=Y_U_PLACE_U_MODALITY_U_RDRIST_U_$E($P(XX,U,13),1,11)_U_CPT
"RTN","MAGJLST1",139,0)
 . S STATUS=$P(XX,U,11),EXCAT="",CURPRIO=0,RASTCAT=$P(XX2,U,11),LRFLAG=$P(XX2,U,12)
"RTN","MAGJLST1",140,0)
 . I STATUS]"" D
"RTN","MAGJLST1",141,0)
 . . S EXCAT=RASTCAT
"RTN","MAGJLST1",142,0)
 . . I RASTORD<2!(EXCAT="W")!('IMGCNT) S CURPRIO=0 ; Cancelled/Waiting/No images: Ignore exam
"RTN","MAGJLST1",143,0)
 . . E  I EXCAT="E" S CURPRIO=1  ; Examined="Current" exam
"RTN","MAGJLST1",144,0)
 . . E  S CURPRIO=2  ; must be a "prior" exam
"RTN","MAGJLST1",145,0)
 . . I CURPRIO,'(ONL="Y") S CURPRIO=3 ; images on jukebox
"RTN","MAGJLST1",146,0)
 . . I MAGJOB("P32"),'(EXCAT="E") S EXCAT="" Q  ; P32 compat.
"RTN","MAGJLST1",147,0)
 . . I RASTORD=9 S EXCAT="C" ; Complete
"RTN","MAGJLST1",148,0)
 . . E  I EXCAT="D"!(EXCAT="T") S EXCAT="I" ; just display one value meaning Interpreted
"RTN","MAGJLST1",149,0)
 . S ^TMP($J,"MAGRAEX2",ISS)=Y_"^|"_$P(XX,U,1,3)_U_RARPT_"||"_EXCAT_U_WHOLOCK_U_MYLOCK_U_MODALITY_U_CPT_U_CURPRIO_U_RARPT_U_KEY_U_REMOTE2_U_LRFLAG
"RTN","MAGJLST1",150,0)
 . ; * Note: Keep Pipe-pieces in sync with svmag2a^magjls3 & lstout^magjls2b *
"RTN","MAGJLST1",151,0)
 Q
"RTN","MAGJLST1",152,0)
 ;
"RTN","MAGJLST1",153,0)
STATN(X) ; get station #, else return input value
"RTN","MAGJLST1",154,0)
 N T
"RTN","MAGJLST1",155,0)
 I X]"" D GETS^DIQ(4,X,99,"E","T") S T=$G(T(4,X_",",99,"E")) I T]"" S X=T
"RTN","MAGJLST1",156,0)
 Q X
"RTN","MAGJLST1",157,0)
 ;
"RTN","MAGJLST1",158,0)
END Q  ;
"RTN","MAGJMN1")
0^6^B140332514
"RTN","MAGJMN1",1,0)
MAGJMN1 ;WIRMFO/JHC VRad Maint functions ; 29 Jul 2003  4:02 PM
"RTN","MAGJMN1",2,0)
 ;;3.0;IMAGING;**16,9,22,18,65,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJMN1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJMN1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJMN1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJMN1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJMN1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJMN1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJMN1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJMN1",11,0)
 ;; |                                                               |
"RTN","MAGJMN1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJMN1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJMN1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJMN1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJMN1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJMN1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJMN1",18,0)
 ;;
"RTN","MAGJMN1",19,0)
ENVCHK ; "Environment Check" for KIDS Install
"RTN","MAGJMN1",20,0)
 N MAGJKIDS S MAGJKIDS=1
"RTN","MAGJMN1",21,0)
 D BGCSTOP
"RTN","MAGJMN1",22,0)
 Q
"RTN","MAGJMN1",23,0)
 ;
"RTN","MAGJMN1",24,0)
SVRLIST ;
"RTN","MAGJMN1",25,0)
 W @IOF,!!?10,"Enter/Edit VistARad Exams List Definition",!!
"RTN","MAGJMN1",26,0)
 N MAGIEN
"RTN","MAGJMN1",27,0)
 K DIC S (DIC,DLAYGO)=2006.631,DIC(0)="ALMEQ"
"RTN","MAGJMN1",28,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",29,0)
 S X=$P(@(DIC_+Y_",0)"),U,2)
"RTN","MAGJMN1",30,0)
 I X>9000 W !!,$C(7),"You may not edit System-Supplied files!" H 3 G SVRLIST
"RTN","MAGJMN1",31,0)
 S DIE=2006.631,DA=+Y,DR="[MAGJ LIST EDIT]"
"RTN","MAGJMN1",32,0)
 S MAGIEN=DA
"RTN","MAGJMN1",33,0)
 D ^DIE I '$D(DA) G SVRLIST
"RTN","MAGJMN1",34,0)
 D ENSRCH
"RTN","MAGJMN1",35,0)
 D BLDDEF(MAGIEN)
"RTN","MAGJMN1",36,0)
 S $P(^MAG(2006.631,MAGIEN,0),U,5)=$$NOW^XLFDT()
"RTN","MAGJMN1",37,0)
 W !!,"List Definition complete!" R X:2
"RTN","MAGJMN1",38,0)
 G SVRLIST
"RTN","MAGJMN1",39,0)
 Q
"RTN","MAGJMN1",40,0)
ENSRCH ; Invoke Search for 2006.631 def'n
"RTN","MAGJMN1",41,0)
 N GREF,GLIN,GO,CT,DIARI,DIC,FNOD,TNOD,NCOND,NODE0
"RTN","MAGJMN1",42,0)
 ; GREF holds indirect ref to store search logic data:
"RTN","MAGJMN1",43,0)
 ; @GREF@(3, ff -- conditional elements (fields/logic)
"RTN","MAGJMN1",44,0)
 ; @GREF@(4, ff -- composite elements (ANDed conditions)
"RTN","MAGJMN1",45,0)
 ; @GREF@(5, ff -- Human-readable search text
"RTN","MAGJMN1",46,0)
 ; GLIN holds indirect ref to retrieve search logic data from ^DIBT
"RTN","MAGJMN1",47,0)
 ; @GLIN@("DC", ff -- conditional elements
"RTN","MAGJMN1",48,0)
 ; @GLIN@("DL", ff -- composite elements
"RTN","MAGJMN1",49,0)
 ; @GLIN@("O", ff -- readable text
"RTN","MAGJMN1",50,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",51,0)
 S GO=1 I $D(@GREF@(5,1)) D  ; show current logic
"RTN","MAGJMN1",52,0)
 . W ! D DISPSRCH(GREF)
"RTN","MAGJMN1",53,0)
 . S X=$$YN("Do you want to delete or re-enter the search logic?","NO")
"RTN","MAGJMN1",54,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",55,0)
 . W !!?7,"Re-entering the search logic requires first deleting the current",!?7,"definition, then entering the new definition from scratch."
"RTN","MAGJMN1",56,0)
 . S X=$$YN("Are you sure you want to continue?","NO")
"RTN","MAGJMN1",57,0)
 . I X'="Y" S GO=0 Q
"RTN","MAGJMN1",58,0)
 I 'GO Q
"RTN","MAGJMN1",59,0)
 W !!?7,"Now enter search logic for this List.  To do this, the program"
"RTN","MAGJMN1",60,0)
 W !?7,"will prompt you just as if you were going to run a Fileman Search."
"RTN","MAGJMN1",61,0)
 W !?7,"When prompted STORE RESULTS OF SEARCH IN TEMPLATE:, answer with 'TEMP'"
"RTN","MAGJMN1",62,0)
 W !?7,"If prompted ... OK TO PURGE? NO// answer 'YES'; don't bother specifying"
"RTN","MAGJMN1",63,0)
 W !?7,"output print fields, but just RETURN through all the prompts to"
"RTN","MAGJMN1",64,0)
 W !?7,"complete the process.  The search definition will be saved as part"
"RTN","MAGJMN1",65,0)
 W !?7,"of this List definition; you will test it out by running it from "
"RTN","MAGJMN1",66,0)
 W !?7,"the workstation.  If you need to modify the search logic, you will"
"RTN","MAGJMN1",67,0)
 W !?7,"have to re-enter it in its entirety."
"RTN","MAGJMN1",68,0)
 W !!?7,"NOTES: EXAM LOCK INDICATOR will not work for search logic;"
"RTN","MAGJMN1",69,0)
 W !?14,"REMOTE CACHE INDICATOR only works for Null/Not Null logic."
"RTN","MAGJMN1",70,0)
 S DIC=2006.634 D EN^DIS  ; call Fman Search Logic routine. It will store search logic in ^DIBT
"RTN","MAGJMN1",71,0)
 ; 2006.634 is intentional--don't change this!
"RTN","MAGJMN1",72,0)
 I '$G(DIARI) W !!," Search logic NOT updated" D  Q
"RTN","MAGJMN1",73,0)
 . Q:'$D(@GREF@(5,1))  ; if no logic had existed, quit
"RTN","MAGJMN1",74,0)
 . S X=$$YN("Do you want to DELETE the search logic?","NO")
"RTN","MAGJMN1",75,0)
 . I X="Y" K @GREF@(3) K ^(4),^(5) W " -- Deleted!"
"RTN","MAGJMN1",76,0)
 K @GREF@(3) K ^(4),^(5)
"RTN","MAGJMN1",77,0)
 S GLIN=$NA(^DIBT(DIARI))  ; Copy logic to 2006.631 DEF nodes
"RTN","MAGJMN1",78,0)
 S FNOD="DC",TNOD=3,CT=0  ; "DC" data--straight copy
"RTN","MAGJMN1",79,0)
 S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T),CT=CT+1,@GREF@(TNOD,T)=X
"RTN","MAGJMN1",80,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",81,0)
 S FNOD="DL",TNOD=4,CT=0  ; "DL" data--copy depends on storage scheme in DIBT:
"RTN","MAGJMN1",82,0)
 ;Zero node null -- straight copy
"RTN","MAGJMN1",83,0)
 ; Else 1) either only one condition is defined;
"RTN","MAGJMN1",84,0)
 ; or, 2) the zero-node condition is ANDed with all defined conditions
"RTN","MAGJMN1",85,0)
 ;  Case 2: Var A -- Pre-pend zero node, then dup zero node
"RTN","MAGJMN1",86,0)
 ;            Var B -- Pre-pend zero node
"RTN","MAGJMN1",87,0)
 S NCOND=+$G(@GLIN@(FNOD))
"RTN","MAGJMN1",88,0)
 I $G(@GLIN@(FNOD,0))]"" S NODE0=^(0) D
"RTN","MAGJMN1",89,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=NODE0_X
"RTN","MAGJMN1",90,0)
 . I CT'=NCOND S CT=CT+1,@GREF@(TNOD,CT)=NODE0_$S(CT=1:"",1:"^")
"RTN","MAGJMN1",91,0)
 E  D
"RTN","MAGJMN1",92,0)
 . S T=0 F  S T=$O(@GLIN@(FNOD,T)) Q:T=""  S X=^(T) I X]"" S CT=CT+1,@GREF@(TNOD,CT)=X
"RTN","MAGJMN1",93,0)
 S @GREF@(TNOD,0)=CT
"RTN","MAGJMN1",94,0)
 ; readable text--straight copy
"RTN","MAGJMN1",95,0)
 S TNOD=5,T=0 F  S T=$O(@GLIN@("O",T)) Q:T=""  S @GREF@(TNOD,T)=^(T,0)
"RTN","MAGJMN1",96,0)
 Q
"RTN","MAGJMN1",97,0)
 ;
"RTN","MAGJMN1",98,0)
BLDDEF(LSTID) ; build DEF nodes for Column/Sort defs
"RTN","MAGJMN1",99,0)
 N QX,SS,STR,LSTHDR,T,T0,T8,T6,HASCASE,XT,HASDATE,HASNIMG
"RTN","MAGJMN1",100,0)
 S SS=0,HASCASE=0,HASDATE=0,HASNIMG=0
"RTN","MAGJMN1",101,0)
 ; columns/hdrs: Order in T array by the Relative Column Order
"RTN","MAGJMN1",102,0)
 F  S SS=$O(^MAG(2006.631,LSTID,1,SS)) D  Q:'SS
"RTN","MAGJMN1",103,0)
 . I 'SS D  Q
"RTN","MAGJMN1",104,0)
 . . I 'HASCASE S X=1 D BLDDEF2(X)  ; FORCE CASE#
"RTN","MAGJMN1",105,0)
 . . I 'HASDATE S X=7 D BLDDEF2(X)  ; DATE/TIME
"RTN","MAGJMN1",106,0)
 . . I 'HASNIMG S X=9 D BLDDEF2(X)  ; NUMBER IMAGES
"RTN","MAGJMN1",107,0)
 . E  S X=^MAG(2006.631,LSTID,1,SS,0)
"RTN","MAGJMN1",108,0)
 . D BLDDEF2(X)
"RTN","MAGJMN1",109,0)
 ; go thru T to build ordered field sequence for output columns
"RTN","MAGJMN1",110,0)
 S QX="T",STR="",LSTHDR=""
"RTN","MAGJMN1",111,0)
 F  S QX=$Q(@QX) Q:QX=""  S X=@QX D
"RTN","MAGJMN1",112,0)
 . S STR=STR_$S(STR="":"",1:U)_$P(X,U)
"RTN","MAGJMN1",113,0)
 . S LSTHDR=LSTHDR_$S(LSTHDR="":"",1:U)_$P(X,U,2)
"RTN","MAGJMN1",114,0)
 S ^MAG(2006.631,LSTID,"DEF",.5)=LSTHDR,^(1)=STR
"RTN","MAGJMN1",115,0)
 ; Sort values:
"RTN","MAGJMN1",116,0)
 S SS=0,STR=""
"RTN","MAGJMN1",117,0)
 F  S SS=$O(^MAG(2006.631,LSTID,2,SS)) Q:'SS  S X=^(SS,0) D
"RTN","MAGJMN1",118,0)
 . S X=+X_$S($P(X,U,2):"-",1:"")
"RTN","MAGJMN1",119,0)
 . S STR=STR_$S(STR="":"",1:U)_X
"RTN","MAGJMN1",120,0)
 S ^MAG(2006.631,LSTID,"DEF",2)=STR
"RTN","MAGJMN1",121,0)
 S $P(^MAG(2006.631,LSTID,"DEF",0),U)=$$NOW^XLFDT()
"RTN","MAGJMN1",122,0)
 Q
"RTN","MAGJMN1",123,0)
 ;
"RTN","MAGJMN1",124,0)
BLDDEF2(X) ;
"RTN","MAGJMN1",125,0)
 S X=+X_$S($P(X,U,2):";"_+$P(X,U,2),1:"")
"RTN","MAGJMN1",126,0)
 I 'HASCASE S HASCASE=(+X=1)
"RTN","MAGJMN1",127,0)
 I 'HASDATE S HASDATE=(+X=7)
"RTN","MAGJMN1",128,0)
 I 'HASNIMG S HASNIMG=(+X=9)
"RTN","MAGJMN1",129,0)
 S T0=^MAG(2006.63,+X,0),T6=+$P(T0,U,6) S:'T6 T6=99
"RTN","MAGJMN1",130,0)
 S T8=$P(T0,U,8) I T8]"" S T8="~"_T8
"RTN","MAGJMN1",131,0)
 S XT=$S($P(T0,U,3)]"":$P(T0,U,3),1:$P(T0,U,2))_T8
"RTN","MAGJMN1",132,0)
 S $P(XT,"~",3)=+X
"RTN","MAGJMN1",133,0)
 S T(T6,+X)=X_U_XT
"RTN","MAGJMN1",134,0)
 Q
"RTN","MAGJMN1",135,0)
 ;
"RTN","MAGJMN1",136,0)
BLDP101 ; build DEF nodes for selection logic for exported Patch 101 MY RECENT EXAMS list
"RTN","MAGJMN1",137,0)
 N NODE
"RTN","MAGJMN1",138,0)
 S NODE=$O(^MAG(2006.631,"C",8001,""))
"RTN","MAGJMN1",139,0)
 Q:'NODE
"RTN","MAGJMN1",140,0)
 S ^MAG(2006.631,NODE,"DEF",3,0)=1
"RTN","MAGJMN1",141,0)
 S ^MAG(2006.631,NODE,"DEF",3,1)="24^=""Y"""
"RTN","MAGJMN1",142,0)
 S ^MAG(2006.631,NODE,"DEF",4,0)=1
"RTN","MAGJMN1",143,0)
 S ^MAG(2006.631,NODE,"DEF",4,1)="^1^"
"RTN","MAGJMN1",144,0)
 S ^MAG(2006.631,NODE,"DEF",5,1)="INTERP BY LOGON RADIOLOGIST? EQUALS ""Y""^YES"
"RTN","MAGJMN1",145,0)
 Q
"RTN","MAGJMN1",146,0)
 ;
"RTN","MAGJMN1",147,0)
PRE ; init 2006.63 prior to KIDS install
"RTN","MAGJMN1",148,0)
 N DIK,DA S DIK="^MAG(2006.63,",DA=0 F  S DA=$O(@(DIK_DA_")")) Q:'DA  D ^DIK
"RTN","MAGJMN1",149,0)
 Q
"RTN","MAGJMN1",150,0)
 ;
"RTN","MAGJMN1",151,0)
POSTINST ; Patch installation inits, etc.
"RTN","MAGJMN1",152,0)
 D BLDALL ; update list definitions
"RTN","MAGJMN1",153,0)
 D BLDP101 ; patch 101--update selection logic for Patch 101 MY RECENT EXAMS  <*> for P101 only!!!
"RTN","MAGJMN1",154,0)
 D HPDAT ; patch 101--updates to some system HP's  <*> for P101 only!!!
"RTN","MAGJMN1",155,0)
 D BGCSTRT ; re-start background compile
"RTN","MAGJMN1",156,0)
 D POST ; install message, etc.
"RTN","MAGJMN1",157,0)
 Q
"RTN","MAGJMN1",158,0)
 ;
"RTN","MAGJMN1",159,0)
BLDALL ; Create "DEF" nodes, Button labels List Def'ns
"RTN","MAGJMN1",160,0)
 ; Updates all lists after s/w update list defs are installed
"RTN","MAGJMN1",161,0)
 N SS,LSTDAT,LSTNUM,BUTTON,LSTTYP
"RTN","MAGJMN1",162,0)
 S SS=0
"RTN","MAGJMN1",163,0)
 F  S SS=$O(^MAG(2006.631,SS)) Q:'SS  S LSTDAT=$G(^(SS,0)) I LSTDAT]"" D
"RTN","MAGJMN1",164,0)
 . S LSTNUM=$P(LSTDAT,U,2),BUTTON=$P(LSTDAT,U,7),LSTTYP=$P(LSTDAT,U,3)
"RTN","MAGJMN1",165,0)
 . I LSTNUM>9900!$P(LSTDAT,U,6) D BLDDEF(SS)  ; build DEF nodes for System Lists & any Enabled lists
"RTN","MAGJMN1",166,0)
 . I BUTTON="",(LSTTYP]"") D   ; Create Button Labels if needed
"RTN","MAGJMN1",167,0)
 . . S BUTTON=$S(LSTTYP="U":"Unread #",LSTTYP="R":"Recent #",LSTTYP="A":"All Active #",LSTTYP="P":"Pending #",1:"List #")_LSTNUM
"RTN","MAGJMN1",168,0)
 . . S $P(^MAG(2006.631,SS,0),U,7)=BUTTON
"RTN","MAGJMN1",169,0)
 Q
"RTN","MAGJMN1",170,0)
 ;
"RTN","MAGJMN1",171,0)
POST ; Install msg
"RTN","MAGJMN1",172,0)
 D INS^MAGQBUT4(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGJMN1",173,0)
 Q
"RTN","MAGJMN1",174,0)
 ;
"RTN","MAGJMN1",175,0)
YN(MSG,DFLT) ; get Yes/No reply
"RTN","MAGJMN1",176,0)
 N X I $G(DFLT)="" S DFLT="N"
"RTN","MAGJMN1",177,0)
 W !
"RTN","MAGJMN1",178,0)
 S DFLT=$E(DFLT),DFLT=$S(DFLT="N":"NO",1:"YES")
"RTN","MAGJMN1",179,0)
YN1 W !,MSG_" "_DFLT_"// "
"RTN","MAGJMN1",180,0)
 R X:DTIME S:X="" X=DFLT S X=$E(X),X=$TR(X,"ynYN","YNYN")
"RTN","MAGJMN1",181,0)
 I "YN"'[X W "  ??? Enter YES or NO",! G YN1
"RTN","MAGJMN1",182,0)
 Q X
"RTN","MAGJMN1",183,0)
 ;
"RTN","MAGJMN1",184,0)
LSTINQ ; Inq/Disp list def'n
"RTN","MAGJMN1",185,0)
 N GREF,MAGIEN
"RTN","MAGJMN1",186,0)
 W !!?15,"Display VistARad Exams List Definition",!!
"RTN","MAGJMN1",187,0)
 N MAGIEN
"RTN","MAGJMN1",188,0)
 S DIC=2006.631,DIC(0)="AMEQ"
"RTN","MAGJMN1",189,0)
 D ^DIC I Y=-1 K DIC,DA,DR Q
"RTN","MAGJMN1",190,0)
 K DR S DA=+Y,MAGIEN=DA
"RTN","MAGJMN1",191,0)
 S GREF=$NA(^MAG(2006.631,MAGIEN,"DEF"))
"RTN","MAGJMN1",192,0)
 W ! D EN^DIQ
"RTN","MAGJMN1",193,0)
 R !,"Enter RETURN to display the Search Logic: ",X:DTIME W !
"RTN","MAGJMN1",194,0)
 D DISPSRCH(GREF)
"RTN","MAGJMN1",195,0)
 G LSTINQ
"RTN","MAGJMN1",196,0)
 Q
"RTN","MAGJMN1",197,0)
 ;
"RTN","MAGJMN1",198,0)
DISPSRCH(GREF) ; GREF holds indirect ref for global holding search logic data
"RTN","MAGJMN1",199,0)
 I $D(@GREF@(5,1)) W !,"List Exams where:",! D
"RTN","MAGJMN1",200,0)
 . F I=1:1 Q:'$D(@GREF@(5,I))  W !?3,^(I)
"RTN","MAGJMN1",201,0)
 E  W !?3,"NO Search Logic defined!"
"RTN","MAGJMN1",202,0)
 Q
"RTN","MAGJMN1",203,0)
 ;
"RTN","MAGJMN1",204,0)
VRSIT ;
"RTN","MAGJMN1",205,0)
 W @IOF,!!?10,"Enter/Edit VistARad Site Parameters",!!
"RTN","MAGJMN1",206,0)
 S DIC=2006.69,DIC(0)="ALMEQ"
"RTN","MAGJMN1",207,0)
 I '$D(^MAG(DIC,1)) S DLAYGO=DIC
"RTN","MAGJMN1",208,0)
 D ^DIC I Y=-1 K DIC,DA,DR,DIE,DLAYGO Q
"RTN","MAGJMN1",209,0)
 S DIE=2006.69,DA=+Y,DR=".01:3.99;4.1:20"
"RTN","MAGJMN1",210,0)
 D ^DIE
"RTN","MAGJMN1",211,0)
 K DIC,DA,DR,DIE,DLAYGO
"RTN","MAGJMN1",212,0)
 N PLACE S DA=""
"RTN","MAGJMN1",213,0)
 S PLACE=$$PLACE^MAGBAPI(+$G(DUZ(2)))
"RTN","MAGJMN1",214,0)
 S:PLACE DA=PLACE
"RTN","MAGJMN1",215,0)
 I DA D
"RTN","MAGJMN1",216,0)
 . W !!,"Editing VistARad Timeout for division #",DUZ(2),!
"RTN","MAGJMN1",217,0)
 . S DIE=2006.1,DR="123" D ^DIE
"RTN","MAGJMN1",218,0)
 K DA,DR,DIE
"RTN","MAGJMN1",219,0)
 Q
"RTN","MAGJMN1",220,0)
 ;
"RTN","MAGJMN1",221,0)
EEPREF ;
"RTN","MAGJMN1",222,0)
 W @IOF,!!?10,"Enter/Edit VistARad Prefetch Logic",!!
"RTN","MAGJMN1",223,0)
 N MAGIEN
"RTN","MAGJMN1",224,0)
 K DIC S (DIC,DLAYGO)=2006.65,DIC(0)="ALMEQ"
"RTN","MAGJMN1",225,0)
 D ^DIC I Y=-1 K DIC,DIE,DR,DLAYGO Q
"RTN","MAGJMN1",226,0)
 S DIE=2006.65,DA=+Y,DR="[MAGJ PRIOR EDIT]"
"RTN","MAGJMN1",227,0)
 S MAGIEN=DA
"RTN","MAGJMN1",228,0)
 D ^DIE I '$D(DA) G EEPREF
"RTN","MAGJMN1",229,0)
 G EEPREF
"RTN","MAGJMN1",230,0)
 Q
"RTN","MAGJMN1",231,0)
INPREF ; Inquire VRad PreFetch
"RTN","MAGJMN1",232,0)
 W @IOF,!!?10,"Inquire VistARad Prefetch Logic",!!
"RTN","MAGJMN1",233,0)
 N MAGIEN,BY,FR,TO
"RTN","MAGJMN1",234,0)
 S DIC=2006.65,DIC(0)="AMEQ"
"RTN","MAGJMN1",235,0)
 D ^DIC I Y=-1 K DIC Q
"RTN","MAGJMN1",236,0)
 S DA=+Y,(FR,TO)=$P(Y,U,2),MAGIEN=DA,L=0
"RTN","MAGJMN1",237,0)
 S BY="[MAGJ PRIOR SORT]",DIS(0)="I D0=MAGIEN"
"RTN","MAGJMN1",238,0)
 D EN^DIP
"RTN","MAGJMN1",239,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",240,0)
 G INPREF
"RTN","MAGJMN1",241,0)
 Q
"RTN","MAGJMN1",242,0)
PRPREF ;Print VRad Prefetch
"RTN","MAGJMN1",243,0)
 N BY
"RTN","MAGJMN1",244,0)
 W !! S DIC=2006.65,L=0,BY="[MAGJ PRIOR SORT]"
"RTN","MAGJMN1",245,0)
 D EN1^DIP
"RTN","MAGJMN1",246,0)
 R !,"Enter RETURN to continue: ",X:DTIME W !
"RTN","MAGJMN1",247,0)
 Q
"RTN","MAGJMN1",248,0)
 ;
"RTN","MAGJMN1",249,0)
BGCSTOP ; Stop Background Compile program
"RTN","MAGJMN1",250,0)
 N MAGCSTRT,GO,NTRY,RETRY,X
"RTN","MAGJMN1",251,0)
 S MAGCSTRT=0,GO=1
"RTN","MAGJMN1",252,0)
 S X=$G(^MAG(2006.69,1,0))
"RTN","MAGJMN1",253,0)
 I X]"",+$P(X,U,8) D  ; Background compile switch; skip if already false
"RTN","MAGJMN1",254,0)
 . S ^MAG(2006.69,"BGSTOP")=X ; save current settings for restore later
"RTN","MAGJMN1",255,0)
 . S MAGCSTRT=1
"RTN","MAGJMN1",256,0)
 . S $P(X,U,8)=0
"RTN","MAGJMN1",257,0)
 . S ^MAG(2006.69,1,0)=X  ; disable compile
"RTN","MAGJMN1",258,0)
 . W !!,*7,"Wait for Background Compile program to stop;"
"RTN","MAGJMN1",259,0)
 . W !,"     this might take up to a few minutes."
"RTN","MAGJMN1",260,0)
 . S NTRY=60
"RTN","MAGJMN1",261,0)
 . F I=1:1:NTRY W "." L +^XTMP("MAGJ2","BKGND2","RUN"):3 I  Q  ; process maintains lock while running
"RTN","MAGJMN1",262,0)
 . I  D
"RTN","MAGJMN1",263,0)
 . . L -^XTMP("MAGJ2","BKGND2","RUN")
"RTN","MAGJMN1",264,0)
 . . W !!,"Background Compile Stopped"
"RTN","MAGJMN1",265,0)
 . . I +$G(MAGJKIDS) W "; proceeding with install.",! H 2
"RTN","MAGJMN1",266,0)
 . E  D
"RTN","MAGJMN1",267,0)
 . . S X=$$YN("Background Compile NOT Stopped -- Try again?","Y")
"RTN","MAGJMN1",268,0)
 . . S RETRY=("Y"[X),GO=0
"RTN","MAGJMN1",269,0)
 . . S ^MAG(2006.69,1,0)=^MAG(2006.69,"BGSTOP") K ^MAG(2006.69,"BGSTOP")
"RTN","MAGJMN1",270,0)
 I 'GO G BGCSTOP:RETRY
"RTN","MAGJMN1",271,0)
 I 'GO,+$G(MAGJKIDS) W !!,*7," * * * Exiting out of patch installation * * * ",! H 3 S XPDQUIT=1
"RTN","MAGJMN1",272,0)
 Q
"RTN","MAGJMN1",273,0)
BGCSTRT ; re-enable Background Compile
"RTN","MAGJMN1",274,0)
 I $D(^MAG(2006.69,"BGSTOP")) S X=^("BGSTOP") W " ... Enabling background compile ."
"RTN","MAGJMN1",275,0)
 E  Q
"RTN","MAGJMN1",276,0)
 S ^MAG(2006.69,1,0)=X
"RTN","MAGJMN1",277,0)
 K ^MAG(2006.69,"BGSTOP")
"RTN","MAGJMN1",278,0)
 W !!,"Background Compile Enabled.",! H 3
"RTN","MAGJMN1",279,0)
 Q
"RTN","MAGJMN1",280,0)
 ;
"RTN","MAGJMN1",281,0)
HPDAT ; update system internal HP definitions
"RTN","MAGJMN1",282,0)
 ; Patch 101 mod for consistency with removing Master Image Set construct
"RTN","MAGJMN1",283,0)
 N GLB,HPNAM,HPNUM,ICT,IHP,T,TAG,USER
"RTN","MAGJMN1",284,0)
 S USER=$O(^MAG(2006.68,"B","POSTMASTER",""))
"RTN","MAGJMN1",285,0)
 I 'USER Q
"RTN","MAGJMN1",286,0)
 S GLB=$NA(^MAG(2006.68,USER,"VR-HP"))
"RTN","MAGJMN1",287,0)
 F IHP=1,2 S TAG="HPDAT"_IHP D
"RTN","MAGJMN1",288,0)
 . S X=$T(@(TAG)) Q:X=""
"RTN","MAGJMN1",289,0)
 . S HPNAM=$P(X,";",3)
"RTN","MAGJMN1",290,0)
 . S HPNUM=$O(@GLB@("B",HPNAM,"")) Q:'HPNUM
"RTN","MAGJMN1",291,0)
 . K @GLB@(HPNUM,1)
"RTN","MAGJMN1",292,0)
 . F ICT=1:1 S X=$P($T(@(TAG)+ICT),";",3,999) Q:X=""  S @GLB@(HPNUM,1,ICT,0)=X
"RTN","MAGJMN1",293,0)
 . S T=ICT-1,X=U_2006.6831_U_T_U_T,@GLB@(HPNUM,1,0)=X
"RTN","MAGJMN1",294,0)
 . W !,"System internal hanging protocol updated: ",HPNAM,!
"RTN","MAGJMN1",295,0)
 Q
"RTN","MAGJMN1",296,0)
 ;
"RTN","MAGJMN1",297,0)
HPDAT1 ;;CRSYS_INT_HP;
"RTN","MAGJMN1",298,0)
 ;;*KEY
"RTN","MAGJMN1",299,0)
 ;;<SV attrName="MODALITY" attrTag="fffffff4">CR</SV>
"RTN","MAGJMN1",300,0)
 ;;*END_KEY
"RTN","MAGJMN1",301,0)
 ;;<HP name="CRSYS_INT_HP" level="SITE_DEFAULT" createdBy=".5"><HPDefinition>
"RTN","MAGJMN1",302,0)
 ;;<ImgSetSeq><ImgSetSeqItem index="1"><SearchDesc desc=""><ExactMatch>1</ExactMatch>
"RTN","MAGJMN1",303,0)
 ;;<SV attrName="MODALITY" attrTag="fffffff4">CR</SV>
"RTN","MAGJMN1",304,0)
 ;;<SV attrName="MODALITY" attrTag="fffffff4">DX</SV>
"RTN","MAGJMN1",305,0)
 ;;<TimeBaseValue stdIndex="1" type="CURRENT" priorIndex="0" label="">0\0</TimeBaseValue>
"RTN","MAGJMN1",306,0)
 ;;</SearchDesc><Study stdIndex="1" splitToSeriesBySerIUID="0"></Study></ImgSetSeqItem>
"RTN","MAGJMN1",307,0)
 ;;</ImgSetSeq></HPDefinition><HPDisplay><LinkGroups/></HPDisplay></HP>
"RTN","MAGJMN1",308,0)
 ;;
"RTN","MAGJMN1",309,0)
 ;
"RTN","MAGJMN1",310,0)
HPDAT2 ;;MODMatchAllSYS_INT_HP;
"RTN","MAGJMN1",311,0)
 ;;*KEY
"RTN","MAGJMN1",312,0)
 ;;<SV attrName="MODALITY" attrTag="fffffff4">Match Any</SV>
"RTN","MAGJMN1",313,0)
 ;;*END_KEY
"RTN","MAGJMN1",314,0)
 ;;<HP name="MODMatchAllSYS_INT_HP" level="SITE_DEFAULT" createdBy=".5"><HPDefinition>
"RTN","MAGJMN1",315,0)
 ;;<ImgSetSeq><ImgSetSeqItem index="1"><SearchDesc desc=""><ExactMatch>1</ExactMatch>
"RTN","MAGJMN1",316,0)
 ;;<SV attrName="MODALITY" attrTag="fffffff4">Match Any</SV>
"RTN","MAGJMN1",317,0)
 ;;<TimeBaseValue stdIndex="1" type="CURRENT" priorIndex="0" label="">0\0</TimeBaseValue>
"RTN","MAGJMN1",318,0)
 ;;</SearchDesc><Study stdIndex="1" splitToSeriesBySerIUID="0"></Study></ImgSetSeqItem>
"RTN","MAGJMN1",319,0)
 ;;</ImgSetSeq></HPDefinition><HPDisplay><LinkGroups/></HPDisplay></HP>
"RTN","MAGJMN1",320,0)
 ;;
"RTN","MAGJMN1",321,0)
 ;
"RTN","MAGJMN1",322,0)
END ;
"RTN","MAGJRPT")
0^15^B70154037
"RTN","MAGJRPT",1,0)
MAGJRPT ;WIRMFO/JHC-Display Rad reports ; 15 OCT 2004  10:02 AM
"RTN","MAGJRPT",2,0)
 ;;3.0;IMAGING;**18,101**;Nov 06, 2009;Build 50
"RTN","MAGJRPT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJRPT",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJRPT",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJRPT",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJRPT",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJRPT",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJRPT",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJRPT",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJRPT",11,0)
 ;; |                                                               |
"RTN","MAGJRPT",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJRPT",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJRPT",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJRPT",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJRPT",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJRPT",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJRPT",18,0)
 ;;
"RTN","MAGJRPT",19,0)
 ; Subroutines for fetching Exam Info for VistaRad Workstation
"RTN","MAGJRPT",20,0)
 ;   RADRPT: Display Radiology Report -- RPC Call: MAGJ EXAM REPORT
"RTN","MAGJRPT",21,0)
 ;        ORD: Display Radiology Requisition -- RPC Call: MAGJ RADORDERDISP
"RTN","MAGJRPT",22,0)
 ;
"RTN","MAGJRPT",23,0)
 Q
"RTN","MAGJRPT",24,0)
ORD(MAGRPTY,DATA) ; Radiology Order Display
"RTN","MAGJRPT",25,0)
 ; RPC Call: MAGJ RADORDERDISP
"RTN","MAGJRPT",26,0)
 ; MAGRPTY holds indirect reference to returned data
"RTN","MAGJRPT",27,0)
 ; 
"RTN","MAGJRPT",28,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT")) K @MAGRPTY
"RTN","MAGJRPT",29,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJRPT"
"RTN","MAGJRPT",30,0)
 N RARPT,RADFN,RADTI,RACNI,RAPGE,RAX,RAOIFN
"RTN","MAGJRPT",31,0)
 N REPLY,POP,DFN,COMPLIC,XX,HDR,MAGRET,REQONLY,TMPDATA
"RTN","MAGJRPT",32,0)
 S REPLY="0^4~Attempting to display order info"
"RTN","MAGJRPT",33,0)
 D OPENDEV
"RTN","MAGJRPT",34,0)
 I POP S REPLY="0^4~Unable to open device 'IMAGING WORKSTATION'" G ORDZ
"RTN","MAGJRPT",35,0)
 S RADFN=$P(DATA,U),RADTI=$P(DATA,U,2),RACNI=$P(DATA,U,3)
"RTN","MAGJRPT",36,0)
 S RARPT=+$P(DATA,U,4),REQONLY=+$P(DATA,U,1,5)
"RTN","MAGJRPT",37,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJRPT",38,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RADFN_" "_RADTI_" "_RACNI_" "_RARPT_")." G ORDZ
"RTN","MAGJRPT",39,0)
 S RAOIFN=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,11)
"RTN","MAGJRPT",40,0)
 I RAOIFN,$D(^RAO(75.1,RAOIFN,0))
"RTN","MAGJRPT",41,0)
 E  S REPLY="0^2~Order Information is NOT Available for this exam." G ORDZ
"RTN","MAGJRPT",42,0)
 ; Check for Database integrity problems ONLY if Req was explicitly
"RTN","MAGJRPT",43,0)
 ; requested (No check for Auto_Display of Req, cuz Exam Open does ck)
"RTN","MAGJRPT",44,0)
 D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,"",.MAGRET)
"RTN","MAGJRPT",45,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1)),XX=$G(^(2)),HDR=""
"RTN","MAGJRPT",46,0)
 S COMPLIC=$P(XX,U,4)      ;  Complications text
"RTN","MAGJRPT",47,0)
 F I=4,12,9 S HDR=HDR_$P(RADATA,U,I)_"   " ; PtName, Case #, Procedure
"RTN","MAGJRPT",48,0)
 I REQONLY D CKINTEG(.REPLY,RADFN,RADTI,RACNI,RARPT,RADATA) I REPLY]"" S REPLY="0^7~"_REPLY G ORDZ  ; Database integrity problems
"RTN","MAGJRPT",49,0)
 S TMPDATA=MAGRPTY_"~"_RADTI_"~"_RACNI
"RTN","MAGJRPT",50,0)
 S RAX="",RAPGE=0 D ^RAORD5
"RTN","MAGJRPT",51,0)
 S MAGRPTY=$P(TMPDATA,"~"),RADTI=$P(TMPDATA,"~",2),RACNI=$P(TMPDATA,"~",3)
"RTN","MAGJRPT",52,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGJRPT",53,0)
 S @MAGRPTY@(1)="REQ: "_HDR
"RTN","MAGJRPT",54,0)
 D COMMENTS(RADFN,RADTI,RACNI,MAGRPTY,2,COMPLIC)
"RTN","MAGJRPT",55,0)
 S REPLY="1^OK"
"RTN","MAGJRPT",56,0)
 K ^TMP($J,"MAGRAEX")
"RTN","MAGJRPT",57,0)
ORDZ S @MAGRPTY@(0)=REPLY
"RTN","MAGJRPT",58,0)
 Q
"RTN","MAGJRPT",59,0)
 ;
"RTN","MAGJRPT",60,0)
COMMENTS(RADFN,RADTI,RACNI,MAGRPTY,DNODE,COMPLIC) ; add Complications & Tech Comments to output report
"RTN","MAGJRPT",61,0)
 ;  RADFN, RADTI, & RACNI identify exam
"RTN","MAGJRPT",62,0)
 ;  MAGRPTY is indirect reference wher output lines are to be stored
"RTN","MAGJRPT",63,0)
 ;  DNODE holds reference for starting node for lines of output
"RTN","MAGJRPT",64,0)
 ;  COMPLIC passes in complications data reference
"RTN","MAGJRPT",65,0)
 ;
"RTN","MAGJRPT",66,0)
 I +MAGJOB("USER",1)  ; Radiologist
"RTN","MAGJRPT",67,0)
 E  I $D(^VA(200,"ARC","T",+DUZ))  ; Rad Tech
"RTN","MAGJRPT",68,0)
 E  Q  ; Don't display for any other user type
"RTN","MAGJRPT",69,0)
 N QTMP,CT,XX S CT=0
"RTN","MAGJRPT",70,0)
 S @MAGRPTY@(DNODE)=" ",CT=CT+.01,@MAGRPTY@(DNODE+CT)="Complications: "_$S(COMPLIC:$P($G(^RA(78.1,+COMPLIC,0)),U),1:"")
"RTN","MAGJRPT",71,0)
 S X=$P(COMPLIC,"~",2)
"RTN","MAGJRPT",72,0)
 I X S CT=CT+.01,@MAGRPTY@(DNODE+CT)="   "_$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"COMP")),U)
"RTN","MAGJRPT",73,0)
 K ^TMP($J,"RAE2") D SVTCOM^RAUTL11(RADFN,RADTI,RACNI)
"RTN","MAGJRPT",74,0)
 S QTMP="^TMP($J,""RAE2"")"
"RTN","MAGJRPT",75,0)
 F  S QTMP=$Q(@QTMP) Q:QTMP=""  Q:QTMP'["RAE2"  I QTMP["TCOM" D
"RTN","MAGJRPT",76,0)
 . S XX=@(QTMP) N HI,TXT,LINE1 S LINE1=0
"RTN","MAGJRPT",77,0)
 . F  Q:XX=""  S HI=$L(XX) S:HI>63 HI=63 F I=HI:-1:0 S:'I XX="" I HI<63!($E(XX,I)=" ") D  Q
"RTN","MAGJRPT",78,0)
 .. S TXT=$S('LINE1:"Tech Comments: ",1:"               ")_$E(XX,1,I),XX=$E(XX,I+1,999),LINE1=1
"RTN","MAGJRPT",79,0)
 .. I XX]"" F I=1:1:999 I $E(XX,I)'=" " S XX=$E(XX,I,999) Q
"RTN","MAGJRPT",80,0)
 .. S CT=CT+.01,@MAGRPTY@(DNODE+CT)=TXT
"RTN","MAGJRPT",81,0)
 K ^TMP($J,"RAE2")
"RTN","MAGJRPT",82,0)
 Q
"RTN","MAGJRPT",83,0)
 ;
"RTN","MAGJRPT",84,0)
OPENDEV ;
"RTN","MAGJRPT",85,0)
 N IOP,%ZIS
"RTN","MAGJRPT",86,0)
 S IOP="IMAGING WORKSTATION",%ZIS=0 D ^%ZIS
"RTN","MAGJRPT",87,0)
 I POP
"RTN","MAGJRPT",88,0)
 E  U IO
"RTN","MAGJRPT",89,0)
 Q
"RTN","MAGJRPT",90,0)
 ;
"RTN","MAGJRPT",91,0)
 ;
"RTN","MAGJRPT",92,0)
RADRPT(MAGRPTY,DATA) ; Display rad report; 1st must pass integrity checks
"RTN","MAGJRPT",93,0)
 ; Note: adds an additional line of output for the Report Window header
"RTN","MAGJRPT",94,0)
 ;  RPC is MAGJ EXAM REPORT
"RTN","MAGJRPT",95,0)
 ;
"RTN","MAGJRPT",96,0)
 ; MAGRPTY holds $NA reference to  return message; references to it use subscript indirection
"RTN","MAGJRPT",97,0)
 ;
"RTN","MAGJRPT",98,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT")) K @MAGRPTY
"RTN","MAGJRPT",99,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJRPT"
"RTN","MAGJRPT",100,0)
 N RARPT,RADATA,MAGDFN,MAGDTI,MAGCNI,X,MAGRET,HDR,REPLY,POP,MAGPRC,COMPLIC
"RTN","MAGJRPT",101,0)
 S MAGDFN=$P(DATA,U),MAGDTI=$P(DATA,U,2),MAGCNI=$P(DATA,U,3),RARPT=+$P(DATA,U,4)
"RTN","MAGJRPT",102,0)
 I '(MAGDFN&MAGDTI&MAGCNI) D  G RPTZ
"RTN","MAGJRPT",103,0)
 . S REPLY="0^4~Request Contains Invalid Case Pointer ("_MAGDFN_" "_MAGDTI_" "_MAGCNI_")."
"RTN","MAGJRPT",104,0)
 D GETEXAM2^MAGJUTL1(MAGDFN,MAGDTI,MAGCNI,"",.MAGRET)
"RTN","MAGJRPT",105,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1)),XX=$G(^(2)),HDR=""
"RTN","MAGJRPT",106,0)
 S COMPLIC=$P(XX,U,4)  ;  Complications text
"RTN","MAGJRPT",107,0)
 F I=4,12,9 S HDR=HDR_$P(RADATA,U,I)_"   "
"RTN","MAGJRPT",108,0)
 D CKINTEG(.REPLY,MAGDFN,MAGDTI,MAGCNI,RARPT,RADATA)
"RTN","MAGJRPT",109,0)
 I REPLY]"" S REPLY="0^7~"_REPLY G RPTZ  ; DB integ problem
"RTN","MAGJRPT",110,0)
 D OPENDEV
"RTN","MAGJRPT",111,0)
 I POP S REPLY="0^4~Unable to open device 'IMAGING WORKSTATION'" G RPTZ
"RTN","MAGJRPT",112,0)
 D EN3^RAO7PC3(MAGDFN_"^"_MAGDTI_"^"_MAGCNI)
"RTN","MAGJRPT",113,0)
 I '$D(^TMP($J,"RAE3")) S REPLY="0^4~No report on file." G RPTZ
"RTN","MAGJRPT",114,0)
 D COMMENTS(MAGDFN,MAGDTI,MAGCNI,MAGRPTY,2,COMPLIC)
"RTN","MAGJRPT",115,0)
 S MAGPRC=$O(^TMP($J,"RAE3",MAGDFN,MAGCNI,"")),I=0
"RTN","MAGJRPT",116,0)
 F  S I=$O(^TMP($J,"RAE3",MAGDFN,MAGCNI,MAGPRC,I)) Q:'I  W !,$G(^TMP($J,"RAE3",MAGDFN,MAGCNI,MAGPRC,I))
"RTN","MAGJRPT",117,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGJRPT",118,0)
 S REPLY="1^1~Radiology Report"
"RTN","MAGJRPT",119,0)
RPTZ S @MAGRPTY@(0)=REPLY
"RTN","MAGJRPT",120,0)
 I +$G(@MAGRPTY@(0)) S @MAGRPTY@(1)="RPT: "_HDR ; if a report exists, add header line to output
"RTN","MAGJRPT",121,0)
 K ^TMP($J,"MAGRAEX"),^("RAE3")
"RTN","MAGJRPT",122,0)
 Q
"RTN","MAGJRPT",123,0)
 ;
"RTN","MAGJRPT",124,0)
CKINTEG(REPLY,RADFN,RADTI,RACNI,RARPT,RADATA) ; check integrity between Exam, Report, and Image Group Headers
"RTN","MAGJRPT",125,0)
 ; This subroutine is used by other vrad programs
"RTN","MAGJRPT",126,0)
 ;
"RTN","MAGJRPT",127,0)
 N IEN,MAGIEN,MIXEDUP,X,CKDFN,CKACN
"RTN","MAGJRPT",128,0)
 S MIXEDUP=0,REPLY=""
"RTN","MAGJRPT",129,0)
 I RARPT D  G CK2:MIXEDUP
"RTN","MAGJRPT",130,0)
 . S X=$G(^RARPT(RARPT,0)),CKDFN=$P(X,U,2),CKACN=$P(X,U,4)
"RTN","MAGJRPT",131,0)
 . I CKDFN'=RADFN S MIXEDUP=1_U_+CKDFN Q
"RTN","MAGJRPT",132,0)
 . I $G(RADATA)]"" D
"RTN","MAGJRPT",133,0)
 .. I $P(RADATA,U,8)'=CKACN D
"RTN","MAGJRPT",134,0)
 ... N MAGPSET,RAPRTSET,ACN,OK S OK=0
"RTN","MAGJRPT",135,0)
 ... S RAPRTSET=0 D EN2^RAUTL20(.MAGPSET) I RAPRTSET D
"RTN","MAGJRPT",136,0)
 .... N I S I=0 F  S I=$O(MAGPSET(I)) Q:'I  I +MAGPSET(I)=CKACN S OK=1 Q
"RTN","MAGJRPT",137,0)
 ... I 'OK S MIXEDUP=5_U_CKACN_U_$P(RADATA,U,8)
"RTN","MAGJRPT",138,0)
 I $D(^RARPT(+RARPT,2005)) S IEN=0 D  G CK2:MIXEDUP
"RTN","MAGJRPT",139,0)
 . F  S IEN=$O(^RARPT(RARPT,2005,IEN)) Q:'IEN  S MAGIEN=+$G(^(IEN,0)) D  Q:MIXEDUP
"RTN","MAGJRPT",140,0)
 .. S X=$P($G(^MAG(2005,MAGIEN,0)),U,7) I X'=RADFN S MIXEDUP=2_U_+X Q
"RTN","MAGJRPT",141,0)
 .. S X=$P($G(^MAG(2005,MAGIEN,2)),U,7) I X'=RARPT S MIXEDUP=3_U_+X Q
"RTN","MAGJRPT",142,0)
CK2 I 'MIXEDUP Q  ; no problems detected
"RTN","MAGJRPT",143,0)
 I +MIXEDUP=1!(+MIXEDUP=2) D  Q
"RTN","MAGJRPT",144,0)
 . S X=$$PNAM^MAGJEX1($P(MIXEDUP,U,2))
"RTN","MAGJRPT",145,0)
 . I +MIXEDUP=1 S REPLY="The Exam file for this exam has patient "_$$PNAM^MAGJEX1(RADFN)_"; the corresponding Report file has patient "_X_".  This is a serious problem--immediately report it to Radiology management and Imaging support!"
"RTN","MAGJRPT",146,0)
 . I +MIXEDUP=2 S REPLY="This exam is registered for "_$$PNAM^MAGJEX1(RADFN)_"; however, it is linked to images for patient "_X_".  This is a serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJRPT",147,0)
 I +MIXEDUP=3 D  Q
"RTN","MAGJRPT",148,0)
 . N T S T=$P(MIXEDUP,U,2) S:'T T="Missing Link"
"RTN","MAGJRPT",149,0)
 . S REPLY="This exam is linked to Report entry #"_RARPT_", but some of its images may be linked to Report entry #"_T_".  This is a potentially serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJRPT",150,0)
 I +MIXEDUP=4 D  Q
"RTN","MAGJRPT",151,0)
 . N T S T=$P(MIXEDUP,U,2) S:'T T="Missing Reference"
"RTN","MAGJRPT",152,0)
 . S X=" ("_RARPT_" and "_T_" )"
"RTN","MAGJRPT",153,0)
 . S REPLY="This exam has problems in the Radiology Report file, with two different report entries referenced"_X_".  This is a potentially serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJRPT",154,0)
 I +MIXEDUP=5 D  Q
"RTN","MAGJRPT",155,0)
 . N T S X=$P(MIXEDUP,U,2) S:X="" X="Missing"
"RTN","MAGJRPT",156,0)
 . S T=$P(MIXEDUP,U,3) S:T="" T="Missing"
"RTN","MAGJRPT",157,0)
 . S X=" ("_X_" and "_T_") "
"RTN","MAGJRPT",158,0)
 . S REPLY="This exam has problems in the Radiology files, with two different Case Numbers referenced"_X_".  This is a potentially serious problem--immediately report it to Radiology management and Imaging support staff!"
"RTN","MAGJRPT",159,0)
 Q
"RTN","MAGJRPT",160,0)
 ;
"RTN","MAGJRPT",161,0)
ERR ;
"RTN","MAGJRPT",162,0)
 S @MAGRPTY@(0)="0^ERROR "_$$EC^%ZOSV
"RTN","MAGJRPT",163,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJRPT",164,0)
 Q:$Q 1  Q
"RTN","MAGJRPT",165,0)
END ;
"RTN","MAGJUPD1")
0^7^B61185644
"RTN","MAGJUPD1",1,0)
MAGJUPD1 ;WOIFO/JHC VistARad Update Exam Status ; 29 Jul 2003  10:02 AM
"RTN","MAGJUPD1",2,0)
 ;;3.0;IMAGING;**16,22,18,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJUPD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUPD1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUPD1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUPD1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUPD1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUPD1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUPD1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUPD1",11,0)
 ;; |                                                               |
"RTN","MAGJUPD1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUPD1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUPD1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUPD1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUPD1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUPD1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD1",18,0)
 ;;
"RTN","MAGJUPD1",19,0)
 Q
"RTN","MAGJUPD1",20,0)
 ; Subroutines for RPC's to update Exam Status to "Interpreted", and
"RTN","MAGJUPD1",21,0)
 ;   for "Closing" a case that is open on the DX Workstation
"RTN","MAGJUPD1",22,0)
 ;
"RTN","MAGJUPD1",23,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^Server Program Error: "_ERR
"RTN","MAGJUPD1",24,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJUPD1",25,0)
 Q:$Q 1  Q
"RTN","MAGJUPD1",26,0)
 ;
"RTN","MAGJUPD1",27,0)
STATUS(MAGGRY,PARAMS,DATA) ; rpc: MAGJ RADSTATUSUPDATE
"RTN","MAGJUPD1",28,0)
 ; Update Exam Status to "Interpreted" and/or Close the exam
"RTN","MAGJUPD1",29,0)
 ; Only updates the Status if the current value is "Examined"
"RTN","MAGJUPD1",30,0)
 ; This routine defines variables needed for calling the Radiology
"RTN","MAGJUPD1",31,0)
 ; package routine UP1^RAUTL1, for filing Status updates
"RTN","MAGJUPD1",32,0)
 ;
"RTN","MAGJUPD1",33,0)
 ; PARAMS = UPDFLAG ^ RADFN ^ RADTI ^ RACNI ^ RARPT ^ UPDPSKEY
"RTN","MAGJUPD1",34,0)
 ;   UPDFLAG = 1/0 -- 1 to perform update; else no update made
"RTN","MAGJUPD1",35,0)
 ;   RARPT = ptr to Rad Exam Report file
"RTN","MAGJUPD1",36,0)
 ;   RADFN,RADTI,RACNI = pointers to Rad Patient File for the exam
"RTN","MAGJUPD1",37,0)
 ;   UPDPSKEY = 1/0 -- 1 to update Presentation State &/or Key Image data
"RTN","MAGJUPD1",38,0)
 ;                   = 2 -- update PS data with NO lock in place--Resident workflow, or Sec Key Override
"RTN","MAGJUPD1",39,0)
 ;   DATA = optional array containing prezentation state data; see SAVKPS^MAGJUPD2 for description
"RTN","MAGJUPD1",40,0)
 ;   MAGGRY = return results in @MAGGRY
"RTN","MAGJUPD1",41,0)
 ;
"RTN","MAGJUPD1",42,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJUPD1"
"RTN","MAGJUPD1",43,0)
 N RARPT,RADFN,RADTI,RACNI,RAEXT,RACNE,RADTE,RAINT,RAMDV,DIQUIET
"RTN","MAGJUPD1",44,0)
 N RAONLINE,ZTQUEUED,RAOR,RASN,RASTI,RAPRTSET,LOGDATA,RSL,TIMESTMP
"RTN","MAGJUPD1",45,0)
 N UPDPSKEY,MAGRET,MAGLST,REPLY,UPDFLAG,RADATA,RIST,MAGPSET,RACNILST,ACNLST
"RTN","MAGJUPD1",46,0)
 S MAGLST="MAGJUPDATE"
"RTN","MAGJUPD1",47,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY  ; assign MAGGRY value
"RTN","MAGJUPD1",48,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUPD1",49,0)
 S TIMESTMP=$$NOW^XLFDT()
"RTN","MAGJUPD1",50,0)
 S UPDFLAG=$P(PARAMS,U),RADFN=$P(PARAMS,U,2),RADTI=$P(PARAMS,U,3),RACNI=$P(PARAMS,U,4),RARPT=$P(PARAMS,U,5),UPDPSKEY=+$P(PARAMS,U,6)
"RTN","MAGJUPD1",51,0)
 S REPLY="0^4~Closing case with"_$S(UPDFLAG:"",1:" NO")_" Status Update"
"RTN","MAGJUPD1",52,0)
 S RAPRTSET=0
"RTN","MAGJUPD1",53,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJUPD1",54,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RARPT_")" G STATUSZ
"RTN","MAGJUPD1",55,0)
 D GETEXAM2^MAGJUTL1(RADFN,RADTI,RACNI,0,.MAGRET)
"RTN","MAGJUPD1",56,0)
 I 'MAGRET S REPLY="0^4~Current Case Not Accessible for Updating" G STATUSZ
"RTN","MAGJUPD1",57,0)
   ; 1  RADFN   RADTI    RACNI   RANME   RASSN    <--Contents of RADATA,
"RTN","MAGJUPD1",58,0)
   ; 6  RADATE  RADTE    RACN    RAPRC   RARPT         from GETEXAM
"RTN","MAGJUPD1",59,0)
   ;11  RAST    DAYCASE  RAELOC  RASTP   RASTORD
"RTN","MAGJUPD1",60,0)
   ;16  RADTPRT
"RTN","MAGJUPD1",61,0)
 S RADATA=$G(^TMP($J,"MAGRAEX",1,1))
"RTN","MAGJUPD1",62,0)
 S RAEXT=$P(RADATA,U,12),RACNE=$P(RAEXT,"-",2),RADTE=$P(RADATA,U,7)
"RTN","MAGJUPD1",63,0)
 S RAINT=RADTI_"-"_RACNI
"RTN","MAGJUPD1",64,0)
 I UPDPSKEY=2 D  G STATUSZ ; P101 update annotations only, if authorized (Resident workflow, or Sec Key Override)
"RTN","MAGJUPD1",65,0)
 . I +MAGJOB("USER",1),'UPDFLAG,($D(DATA)>9) S REPLY="0^1~Case #"_RAEXT_" Closed; No Status Update; annotation updates performed."
"RTN","MAGJUPD1",66,0)
 . E  S UPDPSKEY=0,REPLY="0^4~Invalid request to update annotations for Case #"_RAEXT_"."
"RTN","MAGJUPD1",67,0)
 D CLOSE(.RSL,RADFN_U_RADTI_U_RACNI_U_U_1,.LOGDATA) ; unlock the case
"RTN","MAGJUPD1",68,0)
 ; proceed only if case was locked by this user
"RTN","MAGJUPD1",69,0)
 ;   if it was not Locked, then do NOT update PS, Key Images
"RTN","MAGJUPD1",70,0)
 I 'RSL S REPLY=RSL,UPDPSKEY=0 G STATUSZ
"RTN","MAGJUPD1",71,0)
 I 'UPDFLAG S REPLY="0^1~Case #"_RAEXT_" Closed; No Status Update performed" G STATUSZ
"RTN","MAGJUPD1",72,0)
 S RIST=$P(RSL,U,2) ; CLOSE reports back the type of radiologist
"RTN","MAGJUPD1",73,0)
 ; now we know this user had locked the case, & wants to do Status update
"RTN","MAGJUPD1",74,0)
 D EN2^RAUTL20(.MAGPSET)  ; get info re rad PrintSet
"RTN","MAGJUPD1",75,0)
 ;
"RTN","MAGJUPD1",76,0)
 ; IF exam is not "Examined", and not "Cancelled" and past "Waiting"
"RTN","MAGJUPD1",77,0)
 ;    then assume it has already been updated via another pathway,
"RTN","MAGJUPD1",78,0)
 ;    either as printset member (via code at tag PRTSET, below),
"RTN","MAGJUPD1",79,0)
 ;    or from a voice-dictation or terminal session by the radiologist
"RTN","MAGJUPD1",80,0)
 ;    For these cases, no warning msg is sent
"RTN","MAGJUPD1",81,0)
 ; Else, update not allowed, so give warning msg
"RTN","MAGJUPD1",82,0)
 ; Note that when the Exam was OPENed, it must have had status "Examined"
"RTN","MAGJUPD1",83,0)
 I '$D(^RA(72,"AVC","E",$P(RADATA,U,11))) D  G STATUSX:(+$P(REPLY,U,2)=1),STATUSZ  ; Current Status MUST be "Examined" Category
"RTN","MAGJUPD1",84,0)
 . I $P(RADATA,U,15)>2 D  ; assume update has otherwise been done, eg voice dictation or manual entry in Vista
"RTN","MAGJUPD1",85,0)
 .. S RACNILST=RACNI,RASTI=$P(RADATA,U,11) ; need for code at tag statusx
"RTN","MAGJUPD1",86,0)
 .. I RAPRTSET S REPLY="0^1~Printset Exams with Case #"_RAEXT_" have been updated"
"RTN","MAGJUPD1",87,0)
 .. E  S REPLY="0^1~No Update done for Case #"_RAEXT_"--current status is "_$P(RADATA,U,14)
"RTN","MAGJUPD1",88,0)
 . E  S REPLY="0^3~No Update Allowed for Case #"_RAEXT_"--current status is "_$P(RADATA,U,14)
"RTN","MAGJUPD1",89,0)
 ;
"RTN","MAGJUPD1",90,0)
 ; now ready to update exam status
"RTN","MAGJUPD1",91,0)
 S RAMDV=$P(^RADPT(RADFN,"DT",RADTI,0),U,3)
"RTN","MAGJUPD1",92,0)
 S RAMDV=$TR(^RA(79,RAMDV,.1),"YyNn","1100")
"RTN","MAGJUPD1",93,0)
 ;
"RTN","MAGJUPD1",94,0)
 ; Update interpreting radiologist field in Rad file
"RTN","MAGJUPD1",95,0)
 I RIST D  I RACNILST="" G STATUSZ
"RTN","MAGJUPD1",96,0)
 . N SAVRACNI,RTN S RACNILST=""
"RTN","MAGJUPD1",97,0)
PRTSET . ;  if exam is part of Rad Print-Set, then update all exams of printset
"RTN","MAGJUPD1",98,0)
 . I RAPRTSET D
"RTN","MAGJUPD1",99,0)
 .. S ACNLST="",SAVRACNI=RACNI,X=0
"RTN","MAGJUPD1",100,0)
 .. F I=0:1 S X=$O(MAGPSET(X)) Q:'X  S RACNILST=RACNILST_$S(I:U,1:"")_X S:RACNE'=+MAGPSET(X) ACNLST=ACNLST_", "_"-"_+MAGPSET(X)
"RTN","MAGJUPD1",101,0)
 . E  S RACNILST=RACNI
"RTN","MAGJUPD1",102,0)
 . F I=1:1:$L(RACNILST,U) S RACNI=$P(RACNILST,U,I) I RACNI D  I RACNILST="" Q
"RTN","MAGJUPD1",103,0)
 .. S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","MAGJUPD1",104,0)
 .. D STUFPHY^RARIC1(DUZ,RIST,.RTN)
"RTN","MAGJUPD1",105,0)
 .. I 'RTN S REPLY="0^4~Unable to update Interpreting Radiologist: "_RTN_"." S RACNILST=""
"RTN","MAGJUPD1",106,0)
 . I RAPRTSET S RACNI=SAVRACNI
"RTN","MAGJUPD1",107,0)
 S RAONLINE=1,ZTQUEUED=1 D UP1^RAUTL1   ; Suppress msgs, do Status update
"RTN","MAGJUPD1",108,0)
 ;<*> K RAONLINE,ZTQUEUED D UP1^RAUTL1 ; <*> Testing Only: ENABLE msgs
"RTN","MAGJUPD1",109,0)
 I RAOR<0 S REPLY="0^3~Exam Status for Case #"_RAEXT_" CANNOT be updated; current status remains: "_$S($G(RASN)]"":RASN,1:"Unknown")
"RTN","MAGJUPD1",110,0)
 I  G STATUSZ
"RTN","MAGJUPD1",111,0)
 ;
"RTN","MAGJUPD1",112,0)
 S REPLY="0^1~For Case #"_$S($G(ACNLST)]"":"s ",1:"")_RAEXT_$S(RAPRTSET:ACNLST,1:"")_", Exam Status updated to "_RASN
"RTN","MAGJUPD1",113,0)
 ;
"RTN","MAGJUPD1",114,0)
STATUSX ; Newly Interpreted exam:
"RTN","MAGJUPD1",115,0)
 ; Log the Interpreted event
"RTN","MAGJUPD1",116,0)
 D LOG^MAGJUTL3("VR-INT",LOGDATA)
"RTN","MAGJUPD1",117,0)
 ; Update Recent Exams List
"RTN","MAGJUPD1",118,0)
 G STATUSZ:'$P(^MAG(2006.69,1,0),U,8)  ; no bkgnd compile enabled
"RTN","MAGJUPD1",119,0)
 L +^XTMP("MAGJ2","RECENT"):5
"RTN","MAGJUPD1",120,0)
 E  G STATUSZ
"RTN","MAGJUPD1",121,0)
 N INDX F I=1:1:$L(RACNILST,U) S RACNI=$P(RACNILST,U,I) I RACNI D
"RTN","MAGJUPD1",122,0)
 . S INDX=+$G(^XTMP("MAGJ2","RECENT",0))+1,$P(^(0),U)=INDX,^(INDX)=RADFN_U_RADTI_U_RACNI_U_RASTI
"RTN","MAGJUPD1",123,0)
 L -^XTMP("MAGJ2","RECENT")
"RTN","MAGJUPD1",124,0)
STATUSZ ;
"RTN","MAGJUPD1",125,0)
 ; store PS, Key Image data
"RTN","MAGJUPD1",126,0)
 I UPDPSKEY,($D(DATA)>9) D
"RTN","MAGJUPD1",127,0)
 . D SAVKPS^MAGJUPD2(RARPT,UPDPSKEY,.DATA,.X)
"RTN","MAGJUPD1",128,0)
 . S REPLY=REPLY_$P(X,"~",2,99)
"RTN","MAGJUPD1",129,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUPD1",130,0)
 K ^TMP($J,"MAGRAEX"),^("RAE1")
"RTN","MAGJUPD1",131,0)
 Q
"RTN","MAGJUPD1",132,0)
 ;
"RTN","MAGJUPD1",133,0)
CLOSE(RSL,PARAMS,LOGDATA) ; Close/unlock a case
"RTN","MAGJUPD1",134,0)
 ; Input: PARAMS = DFN ^ DTI ^ CNI ^ RPT ^ UPDFLAG
"RTN","MAGJUPD1",135,0)
 ;
"RTN","MAGJUPD1",136,0)
 ;  DFN,DTI,CNI,RPT = pointers to Rad File for the exam
"RTN","MAGJUPD1",137,0)
 ;   UPDFLAG = 1/0 -- 1 indicates CLOSE was called from subroutine
"RTN","MAGJUPD1",138,0)
 ;                    STATUS, above (which has already called GETEXAM)
"RTN","MAGJUPD1",139,0)
 ;    RSL = return result of the Close
"RTN","MAGJUPD1",140,0)
 ; This subroutine may be called directly (to close a case without
"RTN","MAGJUPD1",141,0)
 ; doing a status update), or is called from tag STATUS, above, when
"RTN","MAGJUPD1",142,0)
 ; also doing a status update
"RTN","MAGJUPD1",143,0)
 ;
"RTN","MAGJUPD1",144,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGJUPD1"
"RTN","MAGJUPD1",145,0)
 N RPT,DFN,DTI,CNI,MAGRET,REPLY,RARPT,UPDFLAG,RIST,DAYCASE,NLOCKS,MYLOCK
"RTN","MAGJUPD1",146,0)
 S DFN=$P(PARAMS,U),DTI=$P(PARAMS,U,2),CNI=$P(PARAMS,U,3),RPT=$P(PARAMS,U,4),UPDFLAG=$P(PARAMS,U,5)
"RTN","MAGJUPD1",147,0)
 S LOGDATA=""
"RTN","MAGJUPD1",148,0)
 I $P($G(^MAG(2006.69,1,0)),U,4)
"RTN","MAGJUPD1",149,0)
 E  S REPLY=$S(UPDFLAG:"0^3~Updates not allowed at this site--no action taken",1:"") G CLOSEZ   ;   Status Update NOT Enabled
"RTN","MAGJUPD1",150,0)
 S RIST=+MAGJOB("USER",1) I RIST
"RTN","MAGJUPD1",151,0)
 E  S REPLY=$S(UPDFLAG:"0^3~Update allowed only by a radiologist--no action taken",1:"") G CLOSEZ  ; need only unlock a radiologist
"RTN","MAGJUPD1",152,0)
 I DFN,DTI,CNI
"RTN","MAGJUPD1",153,0)
 E  S REPLY="0^4~Request Contains Invalid Case Pointer ("_RPT_")--no action taken" G CLOSEZ
"RTN","MAGJUPD1",154,0)
 ;
"RTN","MAGJUPD1",155,0)
 I 'UPDFLAG N RADATA D  I 'MAGRET G CLOSEZ
"RTN","MAGJUPD1",156,0)
 . D GETEXAM2^MAGJUTL1(DFN,DTI,CNI,0,.MAGRET)
"RTN","MAGJUPD1",157,0)
 . I 'MAGRET S REPLY="0^4~No Current Case accessible to close--no action taken"
"RTN","MAGJUPD1",158,0)
 . E  S RADATA=$G(^TMP($J,"MAGRAEX",1,1))
"RTN","MAGJUPD1",159,0)
 S RARPT=$P(RADATA,U,10),DAYCASE=$P(RADATA,U,12)
"RTN","MAGJUPD1",160,0)
 I RARPT,DAYCASE
"RTN","MAGJUPD1",161,0)
 E  S REPLY="0^4~Current Case not accessible to close--no action taken" G CLOSEZ
"RTN","MAGJUPD1",162,0)
 ;
"RTN","MAGJUPD1",163,0)
 D LOCKACT^MAGJEX1A(RARPT,DAYCASE,101,,.MYLOCK)
"RTN","MAGJUPD1",164,0)
 S LOGDATA=$P(MYLOCK(1),"|",2)
"RTN","MAGJUPD1",165,0)
 I 'MYLOCK(1) S X=$P(MYLOCK(1),U,4) D  S LOGDATA="" G CLOSEZ
"RTN","MAGJUPD1",166,0)
 . I UPDFLAG S REPLY="0^1~Case #"_DAYCASE_$S(X]"":" locked by "_X,1:" not locked by "_$P(MAGJOB("USER",1),U,2))_"--No Status update performed"
"RTN","MAGJUPD1",167,0)
 . E  S REPLY="0^1~ "  ; case wasn't opened by this R'ist; nothing to do
"RTN","MAGJUPD1",168,0)
 ;
"RTN","MAGJUPD1",169,0)
 I UPDFLAG S REPLY=1_U_RIST
"RTN","MAGJUPD1",170,0)
 E  S REPLY="0^1~Case #"_DAYCASE_$S(+MYLOCK(1):" unlocked",+MYLOCK(2):" reserve cancelled",1:" closed")_"--No Status Update performed."
"RTN","MAGJUPD1",171,0)
CLOSEZ S RSL=REPLY
"RTN","MAGJUPD1",172,0)
 Q
"RTN","MAGJUPD1",173,0)
 ;
"RTN","MAGJUPD1",174,0)
END Q  ;
"RTN","MAGJUPD2")
0^8^B50457719
"RTN","MAGJUPD2",1,0)
MAGJUPD2 ;WIRMFO/JHC VistaRad RPCs-Update PS & KEY Img ; 14 July 2004  10:05 AM
"RTN","MAGJUPD2",2,0)
 ;;3.0;IMAGING;**18,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJUPD2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUPD2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUPD2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUPD2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUPD2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUPD2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUPD2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUPD2",11,0)
 ;; |                                                               |
"RTN","MAGJUPD2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUPD2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUPD2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUPD2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUPD2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUPD2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUPD2",18,0)
 ;;
"RTN","MAGJUPD2",19,0)
 Q
"RTN","MAGJUPD2",20,0)
ERR N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR
"RTN","MAGJUPD2",21,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGJUPD2",22,0)
 Q:$Q 1  Q
"RTN","MAGJUPD2",23,0)
 ;
"RTN","MAGJUPD2",24,0)
SAVKPS(RARPT,INTERPFL,DATA,REPLY) ;  Save study data: Key/Interpretation Images & Pres. State
"RTN","MAGJUPD2",25,0)
 ; RARPT--exam pointer
"RTN","MAGJUPD2",26,0)
 ; INTERPFL--1/0; 1=This is associated with a Rad Interpretation; Optional
"RTN","MAGJUPD2",27,0)
 ; DATA--array of input data; see structure at end of routine
"RTN","MAGJUPD2",28,0)
 ; REPLY--return string
"RTN","MAGJUPD2",29,0)
 N PSTRAK,IDATA,IMGCT,PSTOT,PSLINCT,PSKILCT,KEYCT,INTCT,STUDY,LINE,NEWIMG,NEWPS
"RTN","MAGJUPD2",30,0)
 N IMGREF,IMGIEN,PSIEN,SAVOP,STIEN,TYPE,IMG,ICT,NEWIMG,INITSTDY,SEQNUM
"RTN","MAGJUPD2",31,0)
 S INTERPFL=+$G(INTERPFL)
"RTN","MAGJUPD2",32,0)
 S NEWIMG=0,NEWPS=0,IMGIEN="",PSIEN="",SEQNUM=0
"RTN","MAGJUPD2",33,0)
 S (IMGCT,PSTOT,PSLINCT,KEYCT,INTCT,PSKILCT)=0
"RTN","MAGJUPD2",34,0)
 S IMGREF="",SAVOP="NOOP"
"RTN","MAGJUPD2",35,0)
 I '$D(TIMESTMP) N TIMESTMP S TIMESTMP=$$NOW^XLFDT()
"RTN","MAGJUPD2",36,0)
 ; 1st, process input in DATA
"RTN","MAGJUPD2",37,0)
 S IDATA=""
"RTN","MAGJUPD2",38,0)
 F  S IDATA=$O(DATA(IDATA)) Q:IDATA=""  S LINE=DATA(IDATA) I LINE]"" D
"RTN","MAGJUPD2",39,0)
 . I LINE="*IMAGE" S NEWIMG=1 Q
"RTN","MAGJUPD2",40,0)
 . I LINE="*PS" S NEWPS=1 Q
"RTN","MAGJUPD2",41,0)
 . I $E(LINE,1,4)="*END" S (NEWIMG,NEWPS)=0 Q
"RTN","MAGJUPD2",42,0)
 . I NEWIMG D IMGINIT(LINE) S NEWIMG=0 Q  ; Init storage for this Image
"RTN","MAGJUPD2",43,0)
 . I NEWPS D PSINIT(LINE) S NEWPS=0 Q  ; Init storage for a PS
"RTN","MAGJUPD2",44,0)
 . D @(SAVOP_"(LINE)")
"RTN","MAGJUPD2",45,0)
 ; Now update the Study node info
"RTN","MAGJUPD2",46,0)
 S INITSTDY=$S(INTERPFL:"INIT_STUDY",1:"")
"RTN","MAGJUPD2",47,0)
 S STIEN=$$STUDYID("",RARPT,1,INITSTDY)
"RTN","MAGJUPD2",48,0)
 I $D(PSTRAK) S IMG="" D  ; Update key imgs in Study node
"RTN","MAGJUPD2",49,0)
 . F  S IMG=$O(PSTRAK(IMG)) Q:'IMG  S NEWIMG=1,TYPE="" D
"RTN","MAGJUPD2",50,0)
 . . F  S TYPE=$O(PSTRAK(IMG,TYPE)) Q:TYPE=""  D
"RTN","MAGJUPD2",51,0)
 . . . F ICT=1:1:PSTRAK(IMG,TYPE,0) D SAVKIMG(IMG,PSTRAK(IMG,TYPE,ICT),TYPE,NEWIMG) S NEWIMG=0
"RTN","MAGJUPD2",52,0)
SAVKPSZ ;
"RTN","MAGJUPD2",53,0)
 I IMGCT!PSTOT!PSLINCT!KEYCT!INTCT S REPLY="1~Saved: "_KEYCT_" Key Image"_$S(KEYCT-1:"s",1:"")_"; "_INTCT_" Interp Image"_$S(INTCT-1:"s",1:"")_"; "
"RTN","MAGJUPD2",54,0)
 I  S REPLY=REPLY_PSLINCT_" PS line"_$S(PSLINCT-1:"s",1:"")_" for "_PSTOT_" PS"_$S(PSTOT-1:"s",1:"")_" for "_IMGCT_" Image"_$S(IMGCT-1:"s.",1:".")
"RTN","MAGJUPD2",55,0)
 I  S:PSKILCT REPLY=REPLY_"  Deleted: "_PSKILCT_" PS record"_$S(PSKILCT-1:"s",1:"")_"."
"RTN","MAGJUPD2",56,0)
 E  I PSKILCT S REPLY="1~Deleted: "_PSKILCT_" PS record"_$S(PSKILCT-1:"s",1:"")_"."
"RTN","MAGJUPD2",57,0)
 E  S REPLY="0~No Key Image/PS data was stored or deleted."
"RTN","MAGJUPD2",58,0)
 Q
"RTN","MAGJUPD2",59,0)
 ;
"RTN","MAGJUPD2",60,0)
NOOP(X) Q  ; do nothing/ skip erroneous input
"RTN","MAGJUPD2",61,0)
 ;
"RTN","MAGJUPD2",62,0)
IMGINIT(LINE) ; Init storage space for an image ; inits some vars for the SAVE loop
"RTN","MAGJUPD2",63,0)
 N IEN
"RTN","MAGJUPD2",64,0)
 S IMGIEN="",IMGREF=""
"RTN","MAGJUPD2",65,0)
 S IEN=$P(LINE,U)
"RTN","MAGJUPD2",66,0)
 I IEN,$D(^MAG(2005,IEN,0)),'$D(^(1))
"RTN","MAGJUPD2",67,0)
 E  G IMGINITZ
"RTN","MAGJUPD2",68,0)
 S IMGIEN=IEN
"RTN","MAGJUPD2",69,0)
 S IMGREF=$NA(^MAG(2005,IMGIEN)) ; indirect ref used in psinit & savps
"RTN","MAGJUPD2",70,0)
 S IMGCT=IMGCT+1
"RTN","MAGJUPD2",71,0)
IMGINITZ Q
"RTN","MAGJUPD2",72,0)
 ;
"RTN","MAGJUPD2",73,0)
PSINIT(LINE) ; Init storage space for a Presentation State ; inits some vars for SAVE loop
"RTN","MAGJUPD2",74,0)
 ; input = PS_UID ^ UID Type (KEY, INT) ^ "DELETE"
"RTN","MAGJUPD2",75,0)
 ; if peice 3 ="DELETE" then the PS data is deleted
"RTN","MAGJUPD2",76,0)
 N IEN,UID,TYPE,DELETE
"RTN","MAGJUPD2",77,0)
 S UID=$P(LINE,U),X=$P(LINE,U,2),DELETE=($P(LINE,U,3)="DELETE"),TYPE=$S(X="KEY":"K",X="INTERP":"I",1:"")
"RTN","MAGJUPD2",78,0)
 I UID="" G PSINITZ
"RTN","MAGJUPD2",79,0)
 I INTERPFL,(TYPE'="K"),(TYPE'="U") S TYPE="I" ; just in case...
"RTN","MAGJUPD2",80,0)
 L +@IMGREF@(210,0):5
"RTN","MAGJUPD2",81,0)
 E  Q
"RTN","MAGJUPD2",82,0)
 S IEN=$O(@IMGREF@(210,"B",UID,""))
"RTN","MAGJUPD2",83,0)
 I 'IEN D  ; Allocate node
"RTN","MAGJUPD2",84,0)
 . S X=$G(@IMGREF@(210,0)) I X="" S X="^2005.05A^^",^(0)=X
"RTN","MAGJUPD2",85,0)
 . S IEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=IEN,$P(X,U,4)=T
"RTN","MAGJUPD2",86,0)
 . S @IMGREF@(210,0)=X,@IMGREF@(210,"B",UID,IEN)=""
"RTN","MAGJUPD2",87,0)
 S PSIEN=IEN
"RTN","MAGJUPD2",88,0)
 I DELETE,PSIEN D  ; delete this PS
"RTN","MAGJUPD2",89,0)
 . S PSKILCT=PSKILCT+1
"RTN","MAGJUPD2",90,0)
 . K @IMGREF@(210,PSIEN),@IMGREF@(210,"B",UID,PSIEN)
"RTN","MAGJUPD2",91,0)
 . S T=$O(@IMGREF@(210,9999),-1)
"RTN","MAGJUPD2",92,0)
 . I 'T K @IMGREF@(210) Q  ; no more PSs!
"RTN","MAGJUPD2",93,0)
 . N XD S XD=$G(@IMGREF@(210,0))
"RTN","MAGJUPD2",94,0)
 . S $P(XD,U,3)=T,T=$P(XD,U,4) S:T T=T-1 S $P(XD,U,4)=T
"RTN","MAGJUPD2",95,0)
 . S @IMGREF@(210,0)=XD
"RTN","MAGJUPD2",96,0)
 E  D  ; init PS node for storage; PSTRAK keeps data for later update to STUDY file
"RTN","MAGJUPD2",97,0)
 . S @IMGREF@(210,PSIEN,0)=UID_U_TYPE_U_DUZ_U_TIMESTMP
"RTN","MAGJUPD2",98,0)
 . I "KI"[TYPE S SEQNUM=SEQNUM+1,T=$G(PSTRAK(IMGIEN,TYPE,0))+1,PSTRAK(IMGIEN,TYPE,0)=T,PSTRAK(IMGIEN,TYPE,T)=UID_U_SEQNUM
"RTN","MAGJUPD2",99,0)
 . K @IMGREF@(210,PSIEN,1) ; init Data & Keys
"RTN","MAGJUPD2",100,0)
 . S @IMGREF@(210,PSIEN,1,0)="^2005.51^0_U_0"
"RTN","MAGJUPD2",101,0)
 L -@IMGREF@(210,0)
"RTN","MAGJUPD2",102,0)
 S SAVOP="SAVPS" ; indirect label reference for use in SAVE loop
"RTN","MAGJUPD2",103,0)
 I DELETE S SAVOP="NOOP"
"RTN","MAGJUPD2",104,0)
 S PSTOT=PSTOT+1-DELETE
"RTN","MAGJUPD2",105,0)
PSINITZ Q
"RTN","MAGJUPD2",106,0)
 ;
"RTN","MAGJUPD2",107,0)
SAVPS(LINE) ; Save a line of PS data
"RTN","MAGJUPD2",108,0)
 ; input = line of free-text data
"RTN","MAGJUPD2",109,0)
 N PSCT,PSCTRL
"RTN","MAGJUPD2",110,0)
 L +(@IMGREF@(210,PSIEN)):5
"RTN","MAGJUPD2",111,0)
 S PSCTRL=$G(@IMGREF@(210,PSIEN,1,0))
"RTN","MAGJUPD2",112,0)
 S PSCT=+$P(PSCTRL,U,4)+1
"RTN","MAGJUPD2",113,0)
 S @IMGREF@(210,PSIEN,1,PSCT,0)=LINE
"RTN","MAGJUPD2",114,0)
 S $P(PSCTRL,U,3,4)=PSCT_U_PSCT
"RTN","MAGJUPD2",115,0)
 S @IMGREF@(210,PSIEN,1,0)=PSCTRL
"RTN","MAGJUPD2",116,0)
 L -(@IMGREF@(210,PSIEN))
"RTN","MAGJUPD2",117,0)
 S PSLINCT=PSLINCT+1
"RTN","MAGJUPD2",118,0)
 Q
"RTN","MAGJUPD2",119,0)
 ;
"RTN","MAGJUPD2",120,0)
SAVKIMG(IMGIEN,UIDSEQ,TYPE,NEWIMG) ; store a Key image & Interp images w/ PS refs in study node
"RTN","MAGJUPD2",121,0)
 ;
"RTN","MAGJUPD2",122,0)
 N STIEN,KIEN,STUDYREF,UID,SEQNUM
"RTN","MAGJUPD2",123,0)
 I 'IMGIEN G SAVKIMGZ
"RTN","MAGJUPD2",124,0)
 S STIEN=$$STUDYID(IMGIEN,"",0)
"RTN","MAGJUPD2",125,0)
 I 'STIEN G SAVKIMGZ ; should never happen
"RTN","MAGJUPD2",126,0)
 S STUDYREF=$NA(^MAG(2005.001,STIEN))
"RTN","MAGJUPD2",127,0)
 S UID=$P(UIDSEQ,U),SEQNUM=$P(UIDSEQ,U,2)
"RTN","MAGJUPD2",128,0)
 S KIEN=$O(@STUDYREF@(1,"B",IMGIEN,""))
"RTN","MAGJUPD2",129,0)
 I 'KIEN D
"RTN","MAGJUPD2",130,0)
 . L +@STUDYREF@(1,0):5
"RTN","MAGJUPD2",131,0)
 . S X=$G(@STUDYREF@(1,0)) I X="" S X="^2005.031P^^",^(0)=X
"RTN","MAGJUPD2",132,0)
 . S KIEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=KIEN,$P(X,U,4)=T
"RTN","MAGJUPD2",133,0)
 . S @STUDYREF@(1,0)=X,@STUDYREF@(1,"B",IMGIEN,KIEN)=""
"RTN","MAGJUPD2",134,0)
 . L -@STUDYREF@(1,0)
"RTN","MAGJUPD2",135,0)
 E  D
"RTN","MAGJUPD2",136,0)
 . I 'NEWIMG Q
"RTN","MAGJUPD2",137,0)
 . K @STUDYREF@(1,KIEN,1) ; init ps data if updating existing img
"RTN","MAGJUPD2",138,0)
 . S @STUDYREF@(1,KIEN,1,0)="^2005.311^0_U_0"
"RTN","MAGJUPD2",139,0)
 S $P(@STUDYREF@(1,KIEN,0),U)=IMGIEN
"RTN","MAGJUPD2",140,0)
 ; store the PS UID
"RTN","MAGJUPD2",141,0)
 I UID]"" D
"RTN","MAGJUPD2",142,0)
 . N IEN S IEN=$O(@STUDYREF@(1,KIEN,1,"B",UID,""))
"RTN","MAGJUPD2",143,0)
 . I 'IEN D
"RTN","MAGJUPD2",144,0)
 . . L +@STUDYREF@(1,KIEN,1,0):5
"RTN","MAGJUPD2",145,0)
 . . S X=$G(@STUDYREF@(1,KIEN,1,0)) I X="" S X="^2005.311^^",^(0)=X
"RTN","MAGJUPD2",146,0)
 . . S IEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=IEN,$P(X,U,4)=T
"RTN","MAGJUPD2",147,0)
 . . S @STUDYREF@(1,KIEN,1,0)=X,@STUDYREF@(1,KIEN,1,"B",UID,IEN)=""
"RTN","MAGJUPD2",148,0)
 . . L -@STUDYREF@(1,KIEN,1,0)
"RTN","MAGJUPD2",149,0)
 . S @STUDYREF@(1,KIEN,1,IEN,0)=UID_U_TYPE_U_SEQNUM
"RTN","MAGJUPD2",150,0)
 S KEYCT=KEYCT+(TYPE="K"),INTCT=INTCT+(TYPE="I")
"RTN","MAGJUPD2",151,0)
SAVKIMGZ Q
"RTN","MAGJUPD2",152,0)
 ;
"RTN","MAGJUPD2",153,0)
STUDYID(IEN,RARPT,READONLY,INITSTDY) ; return Study_IEN for input ImgIEN or RARPT
"RTN","MAGJUPD2",154,0)
 ; initialize Study node if INITSTDY is indicated (optional)
"RTN","MAGJUPD2",155,0)
 ; Either IEN or RARPT must be supplied; if both supplied, only RARPT is used
"RTN","MAGJUPD2",156,0)
 ; if READONLY is false, then create "STUDY" node if undefined
"RTN","MAGJUPD2",157,0)
 ; <*> Note: this routine is hard-coded for RADIOLOGY image data only (Parent file=74)
"RTN","MAGJUPD2",158,0)
 N STIEN,X,T,STDYINIT
"RTN","MAGJUPD2",159,0)
 S STIEN=""  ; init return value
"RTN","MAGJUPD2",160,0)
 S IEN=$G(IEN),RARPT=$G(RARPT)
"RTN","MAGJUPD2",161,0)
 S:'$D(READONLY) READONLY=1
"RTN","MAGJUPD2",162,0)
 S INITSTDY=$G(INITSTDY)
"RTN","MAGJUPD2",163,0)
 I IEN,'RARPT S RARPT=$$GETRPT(IEN)
"RTN","MAGJUPD2",164,0)
 I 'RARPT G STUDYIDZ
"RTN","MAGJUPD2",165,0)
 I $D(^MAG(2005.001,"ASTUDY",74,RARPT)) S STIEN=$O(^(RARPT,"")) D
"RTN","MAGJUPD2",166,0)
 . I INITSTDY="INIT_STUDY" K ^MAG(2005.001,STIEN,1) ; init for Key/Interp PS updates (full replacement)
"RTN","MAGJUPD2",167,0)
 E  D:'READONLY  ; create Study structure
"RTN","MAGJUPD2",168,0)
 . L +^MAG(2005.001,0):5
"RTN","MAGJUPD2",169,0)
 . S X=^MAG(2005.001,0),STIEN=$P(X,U,3)+1,T=$P(X,U,4)+1,$P(X,U,3)=STIEN,$P(X,U,4)=T,^(0)=X
"RTN","MAGJUPD2",170,0)
 . L -^MAG(2005.001,0)
"RTN","MAGJUPD2",171,0)
 . S ^MAG(2005.001,STIEN,0)=RARPT_U_74,^MAG(2005.001,"ASTUDY",74,RARPT,STIEN)="",^MAG(2005.001,"B",RARPT,STIEN)=""
"RTN","MAGJUPD2",172,0)
 ;
"RTN","MAGJUPD2",173,0)
STUDYIDZ Q:$Q STIEN Q
"RTN","MAGJUPD2",174,0)
 ;
"RTN","MAGJUPD2",175,0)
GETRPT(IEN) ; return rarpt for input imgien
"RTN","MAGJUPD2",176,0)
 N IENGRP,X,RARPT
"RTN","MAGJUPD2",177,0)
 S RARPT=""
"RTN","MAGJUPD2",178,0)
 I IEN D
"RTN","MAGJUPD2",179,0)
 . I $D(^MAG(2005,IEN,1)) S IENGRP=IEN
"RTN","MAGJUPD2",180,0)
 . E  S IENGRP=$P(^MAG(2005,IEN,0),U,10)
"RTN","MAGJUPD2",181,0)
 . I IENGRP S X=$G(^MAG(2005,IENGRP,2)) I $P(X,U,6)=74 S RARPT=$P(X,U,7)
"RTN","MAGJUPD2",182,0)
 . I RARPT,$D(^RARPT(RARPT,2005))
"RTN","MAGJUPD2",183,0)
 . E  S RARPT=""  ; no Rad report node!
"RTN","MAGJUPD2",184,0)
 Q:$Q RARPT Q
"RTN","MAGJUPD2",185,0)
 ;
"RTN","MAGJUPD2",186,0)
 ;Structure of PS/PSTRAK data In:
"RTN","MAGJUPD2",187,0)
 ; *IMAGE
"RTN","MAGJUPD2",188,0)
 ; IEN^
"RTN","MAGJUPD2",189,0)
 ; *PS
"RTN","MAGJUPD2",190,0)
 ; UID^[KEY/INTERP/USER]
"RTN","MAGJUPD2",191,0)
 ; 1: N Lines of PS data follow
"RTN","MAGJUPD2",192,0)
 ; *END_PS
"RTN","MAGJUPD2",193,0)
 ; *PS
"RTN","MAGJUPD2",194,0)
 ; UID^[KEY/INTERP/USER]
"RTN","MAGJUPD2",195,0)
 ; 1: N Lines of PS data follow
"RTN","MAGJUPD2",196,0)
 ; *END_PS
"RTN","MAGJUPD2",197,0)
 ; *END_IMAGE
"RTN","MAGJUPD2",198,0)
 ; *IMAGE
"RTN","MAGJUPD2",199,0)
 ;  ... etc.
"RTN","MAGJUPD2",200,0)
 ; *END_IMAGE
"RTN","MAGJUPD2",201,0)
 ; *END
"RTN","MAGJUPD2",202,0)
END ;    
"RTN","MAGJUTL1")
0^9^B69694036
"RTN","MAGJUTL1",1,0)
MAGJUTL1 ;WIRMFO/JHC VistARad subroutines for RPC calls ; 29 Jul 2003  10:03 AM
"RTN","MAGJUTL1",2,0)
 ;;3.0;IMAGING;**22,18,65,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJUTL1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL1",11,0)
 ;; |                                                               |
"RTN","MAGJUTL1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL1",18,0)
 ;;
"RTN","MAGJUTL1",19,0)
 Q
"RTN","MAGJUTL1",20,0)
 ;<*>Notes on possible changes to ^RAO7PC1/1A for fetching rad pkg data:
"RTN","MAGJUTL1",21,0)
 ; 1) Return also: Exam Status IEN, Order Request Urgency, & Pre-Op Date
"RTN","MAGJUTL1",22,0)
 ; 2) Allow to retrieve one specific exam; e.g. modify SETDATA^RAO7PC1A
"RTN","MAGJUTL1",23,0)
 ;    to act as a true subrtn, W/ params for RADFN, RADTI, & RACNI--if
"RTN","MAGJUTL1",24,0)
 ;    passed, then only the one exam would be returned
"RTN","MAGJUTL1",25,0)
 ;
"RTN","MAGJUTL1",26,0)
GETEXAM3(DFN,BEGDT,ENDT,MAGRACNT,MAGRET,MORE,LIMEXAMS) ; Get data for all exams for a
"RTN","MAGJUTL1",27,0)
 ; pt within a date range
"RTN","MAGJUTL1",28,0)
 ; limit to LIMEXAMS entries--note, only PREFETCH & Auto-route Priors use this
"RTN","MAGJUTL1",29,0)
 ; Input:
"RTN","MAGJUTL1",30,0)
 ;      DFN -- Patient DFN
"RTN","MAGJUTL1",31,0)
 ;    BEGDT -- Opt, earliest date desired
"RTN","MAGJUTL1",32,0)
 ;     ENDT -- Opt, latest date desired
"RTN","MAGJUTL1",33,0)
 ; MAGRACNT -- Opt, pass by ref to init counter to ref return data in ^TMP (see GETEXSET)
"RTN","MAGJUTL1",34,0)
 ;    MORE -- Opt, If True, check for additional exams for pt
"RTN","MAGJUTL1",35,0)
 ; LIMEXAMS -- Opt, limit # exams to return
"RTN","MAGJUTL1",36,0)
 ; Return:
"RTN","MAGJUTL1",37,0)
 ; MAGRACNT -- highest counter for return data
"RTN","MAGJUTL1",38,0)
 ;   MAGRET -- 1/0: exam was/not found
"RTN","MAGJUTL1",39,0)
 ;     MORE -- more exams exist for pt on & B4 this date
"RTN","MAGJUTL1",40,0)
 ;     ^TMP -- data returned (see GETEXSET)
"RTN","MAGJUTL1",41,0)
 ;
"RTN","MAGJUTL1",42,0)
 I '$D(DT) N DIQUIET S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL1",43,0)
 S LIMEXAMS=+$G(LIMEXAMS)
"RTN","MAGJUTL1",44,0)
 S:$G(BEGDT)="" BEGDT=2010101 S:$G(ENDT)="" ENDT=DT ; default all dates
"RTN","MAGJUTL1",45,0)
 N MORECHK S MORECHK=+$G(MORE)
"RTN","MAGJUTL1",46,0)
 S MAGRACNT=+$G(MAGRACNT),MAGRET=0,MORE=0  ; Init return data
"RTN","MAGJUTL1",47,0)
 I BEGDT>ENDT S X=ENDT,ENDT=BEGDT,BEGDT=X
"RTN","MAGJUTL1",48,0)
 I '(DFN&BEGDT&ENDT) Q
"RTN","MAGJUTL1",49,0)
 K ^TMP($J,"RAE1") D EN1^RAO7PC1(DFN,BEGDT,ENDT,LIMEXAMS)
"RTN","MAGJUTL1",50,0)
 N EXID,TMP,EX1,EX2 S EXID=0
"RTN","MAGJUTL1",51,0)
 F MAGRET=0:1 S EXID=$O(^TMP($J,"RAE1",DFN,EXID)) Q:'EXID  S TMP($P(EXID,"-"),$P(EXID,"-",2))=EXID
"RTN","MAGJUTL1",52,0)
 S (EX1,EX2)=""
"RTN","MAGJUTL1",53,0)
 F  S EX1=$O(TMP(EX1)) Q:'EX1  F  S EX2=$O(TMP(EX1,EX2)) Q:'EX2  D GETEXSET(DFN,TMP(EX1,EX2),"")
"RTN","MAGJUTL1",54,0)
 K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",55,0)
 I 'MORECHK Q  ; all done; else indicate if pt has more exams
"RTN","MAGJUTL1",56,0)
 N DTI,CNI,STS,DTCHK
"RTN","MAGJUTL1",57,0)
 I 'MAGRET S DTI=9999999.9999-BEGDT,CNI=0 ; no exam found in orig dt range
"RTN","MAGJUTL1",58,0)
 E  S X=^TMP($J,"MAGRAEX",MAGRACNT,1),DTI=$P(X,U,2),CNI=$P(X,U,3) ; last exam processed
"RTN","MAGJUTL1",59,0)
 ; loop thru addl exams til find one that is NOT Cancelled
"RTN","MAGJUTL1",60,0)
MORE1 F  S CNI=$O(^RADPT(DFN,"DT",DTI,"P",CNI)) Q:'CNI  S STS=$P($G(^(CNI,0)),U,3) I STS]"" D  Q:MORE
"RTN","MAGJUTL1",61,0)
 . Q:($P($G(^RA(72,STS,0)),U,3)=0)  ; Canceled--keep looking
"RTN","MAGJUTL1",62,0)
 . S DTCHK=9999999.9999-DTI D EN1^RAO7PC1(DFN,DTCHK,DTCHK,1)  ; verify there is at least one "good" exam for this date (Remedy #200480)
"RTN","MAGJUTL1",63,0)
 . I +$O(^TMP($J,"RAE1",DFN,0)) S MORE=1
"RTN","MAGJUTL1",64,0)
 . K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",65,0)
 I 'MORE S DTI=$O(^RADPT(DFN,"DT",DTI)),CNI=0 G MORE1:DTI
"RTN","MAGJUTL1",66,0)
 I MORE S MORE=9999999.9999-DTI\1
"RTN","MAGJUTL1",67,0)
 Q
"RTN","MAGJUTL1",68,0)
 ;
"RTN","MAGJUTL1",69,0)
GETEXAM2(DFN,DTI,CNI,MAGRACNT,MAGRET) ; Fetch data for one exam
"RTN","MAGJUTL1",70,0)
 ;Input:
"RTN","MAGJUTL1",71,0)
 ; DFN -- Pt DFN
"RTN","MAGJUTL1",72,0)
 ; DTI -- Internal Date pointer to Rad exam
"RTN","MAGJUTL1",73,0)
 ; CNI -- Case pointer to Rad exam
"RTN","MAGJUTL1",74,0)
 ; MAGRACNT -- Opt, pass by ref to init counter for return data in ^TMP (see GETEXSET)
"RTN","MAGJUTL1",75,0)
 ; Return:
"RTN","MAGJUTL1",76,0)
 ; MAGRACNT -- highest counter for return data
"RTN","MAGJUTL1",77,0)
 ;   MAGRET -- 1/0: exam was/not found
"RTN","MAGJUTL1",78,0)
 ;     ^TMP -- data returned (see GETEXSET)
"RTN","MAGJUTL1",79,0)
 ;
"RTN","MAGJUTL1",80,0)
 ; This subroutine calls RAO7PC1A directly to fetch exam data
"RTN","MAGJUTL1",81,0)
 ; which is returned in ^TMP($J,"RAE1",DFN,DTI_"-"_CNI).
"RTN","MAGJUTL1",82,0)
 ; RAO7PC1A currently returns ALL exams filed under one DTI,
"RTN","MAGJUTL1",83,0)
 ; but this subroutine returns the single exam for the input DTI, CNI
"RTN","MAGJUTL1",84,0)
 ;
"RTN","MAGJUTL1",85,0)
 N RADFN,RACNT,RAIBDT,RAEXN,RAXIT  ; Vars input to RAO7PC1A
"RTN","MAGJUTL1",86,0)
 S RADFN=DFN,RACNT=0,RAIBDT=DTI,RAEXN=0,RAXIT=0
"RTN","MAGJUTL1",87,0)
 ; other Vars set by RAO7PC1A:
"RTN","MAGJUTL1",88,0)
 N RABNOR,RACSE,RADIAG,RANO,RAPRC,RAREX,RARPT,RARPTST,RASTNM,RAXAM,RAXID
"RTN","MAGJUTL1",89,0)
 N RABNORMR,RACPT
"RTN","MAGJUTL1",90,0)
 S MAGRACNT=+$G(MAGRACNT)
"RTN","MAGJUTL1",91,0)
 K ^TMP($J,"RAE1") D SETDATA^RAO7PC1A
"RTN","MAGJUTL1",92,0)
 S MAGRET=RACNT Q:'RACNT     ; no exams found
"RTN","MAGJUTL1",93,0)
 D GETEXSET(DFN,DTI_"-"_CNI,.X)
"RTN","MAGJUTL1",94,0)
 I 'X S MAGRET=0   ; no exam for this CNI
"RTN","MAGJUTL1",95,0)
 K ^TMP($J,"RAE1")
"RTN","MAGJUTL1",96,0)
 Q
"RTN","MAGJUTL1",97,0)
 ;
"RTN","MAGJUTL1",98,0)
GETEXSET(RADFN,EXID,MAGRET) ; 
"RTN","MAGJUTL1",99,0)
 ; Used by GETEXAM* subroutines above to set up rad data for vrad
"RTN","MAGJUTL1",100,0)
 ; Input:
"RTN","MAGJUTL1",101,0)
 ;  RADFN -- Pt DFN
"RTN","MAGJUTL1",102,0)
 ;  EXID --- RADTI_"-"_RACNI, pointers to Rad exam
"RTN","MAGJUTL1",103,0)
 ; Output:
"RTN","MAGJUTL1",104,0)
 ;  MAGRET- 1/0: an exam was/was not filed
"RTN","MAGJUTL1",105,0)
 ;  ^TMP($J,"MAGRAEX",MAGRACNT)=Data String (see code at end)
"RTN","MAGJUTL1",106,0)
 ;  MAGRACNT described in above subroutines
"RTN","MAGJUTL1",107,0)
 ;
"RTN","MAGJUTL1",108,0)
 N RACN,RACNI,RADATA,RADATE,RADTE,RADTI,RADTPRT,RAELOC,RANME
"RTN","MAGJUTL1",109,0)
 N RAPRC,RARPT,RASSN,RAST,RASTORD,RASTP,RASTNM,RACPT,IMTYPABB,PROCMOD
"RTN","MAGJUTL1",110,0)
 N DAYCASE,REQLOC,REQLOCN,REQLOCA,REQLOCT,RIST,RIST1,RIST2,COMPLIC
"RTN","MAGJUTL1",111,0)
 N RADIV,RISTISME,REQWARD,RASTCAT,CPTMOD,LRFLAG,MODTXT,LONGACN,TECH
"RTN","MAGJUTL1",112,0)
 S MAGRET=0,RADTI=$P(EXID,"-"),RACNI=$P(EXID,"-",2)
"RTN","MAGJUTL1",113,0)
 Q:'(RADTI&RACNI)
"RTN","MAGJUTL1",114,0)
 S RADIV=""
"RTN","MAGJUTL1",115,0)
 S RADATA=$G(^TMP($J,"RAE1",RADFN,EXID))
"RTN","MAGJUTL1",116,0)
 Q:RADATA=""        ;  no exam for this EXID
"RTN","MAGJUTL1",117,0)
 S RARPT=$P(RADATA,U,5)
"RTN","MAGJUTL1",118,0)
 S X=$P(RADATA,U,6),RASTORD=$P(X,"~"),RASTNM=$P(X,"~",2)
"RTN","MAGJUTL1",119,0)
 S X=^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),COMPLIC=$D(^("COMP")),PROCMOD=$D(^("M")),CPTMOD=$D(^("CMOD")),TECH=$D(^("TC"))
"RTN","MAGJUTL1",120,0)
 S RAST=$P(X,U,3),REQLOC=$P(X,U,22),RIST1=$P(X,U,12),RIST2=$P(X,U,15),COMPLIC=$P(X,U,16)_"~"_COMPLIC
"RTN","MAGJUTL1",121,0)
 S REQWARD=$P(X,U,6),LONGACN=$P(X,U,31)
"RTN","MAGJUTL1",122,0)
 N CT,MODS,IEN,TT  ; Process Proc/CPT Modifier info
"RTN","MAGJUTL1",123,0)
 S CT=0
"RTN","MAGJUTL1",124,0)
 I PROCMOD D
"RTN","MAGJUTL1",125,0)
 . S IEN=0
"RTN","MAGJUTL1",126,0)
 . F  S IEN=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",IEN)) Q:'IEN  S X=$P($G(^(IEN,0)),U) I X D
"RTN","MAGJUTL1",127,0)
 . . S X=$P($G(^RAMIS(71.2,X,0)),U) Q:X=""  S X=$$TRIM(X)
"RTN","MAGJUTL1",128,0)
 . . S X=$S(X="BILATERAL EXAM":"BILAT",1:X)
"RTN","MAGJUTL1",129,0)
 . . S CT=CT+1,MODS(CT)=X
"RTN","MAGJUTL1",130,0)
 I CPTMOD D
"RTN","MAGJUTL1",131,0)
 . S IEN=0
"RTN","MAGJUTL1",132,0)
 . F  S IEN=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",IEN)) Q:'IEN  S X=$P($G(^(IEN,0)),U) I X D
"RTN","MAGJUTL1",133,0)
 . . S X=$P($$MOD^ICPTMOD(X,"I"),U,3) Q:X=""  S X=$$TRIM(X)
"RTN","MAGJUTL1",134,0)
 . . S X=$S(X="LEFT SIDE":"LEFT",X="RIGHT SIDE":"RIGHT",X="BILATERAL PROCEDURE":"BILAT",1:X)
"RTN","MAGJUTL1",135,0)
 . . S CT=CT+1,MODS(CT)=X
"RTN","MAGJUTL1",136,0)
 S MODTXT="",LRFLAG=0 K TT
"RTN","MAGJUTL1",137,0)
 I CT F I=1:1:CT S X=MODS(I) D
"RTN","MAGJUTL1",138,0)
 . ; eliminate redundant values for L/R/Bilat (TT), & track L/R for prior matching (LRFLAG)
"RTN","MAGJUTL1",139,0)
 . S T=(X="LEFT") I T,$D(TT(1)) Q  ; already got it
"RTN","MAGJUTL1",140,0)
 . I 'T S T=(X="RIGHT") I T S T=2 I T,$D(TT(2)) Q   ; ditto
"RTN","MAGJUTL1",141,0)
 . I 'T S T=(X="BILAT") I T S T=3 I T,$D(TT(3)) Q   ; ditto
"RTN","MAGJUTL1",142,0)
 . I T S TT(T)="",MODTXT=X_$S(MODTXT="":"",1:";")_MODTXT ; force L/R/Bilat to left end of string ..
"RTN","MAGJUTL1",143,0)
 . E  S MODTXT=MODTXT_$S(MODTXT="":"",1:";")_X  ; .. so is easier to spot in displayed column
"RTN","MAGJUTL1",144,0)
 . I 'LRFLAG S:T LRFLAG=T
"RTN","MAGJUTL1",145,0)
 . E  I T  S:(LRFLAG'=T) LRFLAG=3 ; L&R or Bilat--ignore result
"RTN","MAGJUTL1",146,0)
 S LRFLAG=$S(LRFLAG=1:"L",LRFLAG=2:"R",1:"") ; Left/Right indicator
"RTN","MAGJUTL1",147,0)
 I 'TECH S TECH=""
"RTN","MAGJUTL1",148,0)
 E  D
"RTN","MAGJUTL1",149,0)
 . S IEN=0,TECH="" N T
"RTN","MAGJUTL1",150,0)
 . F  S IEN=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",IEN)) Q:'IEN  S X=$P($G(^(IEN,0)),U) I X S T(X)=""
"RTN","MAGJUTL1",151,0)
 . I $D(T) S T="" F  S T=$O(T(T)) Q:T=""  S X=$P($G(^VA(200,T,0)),U,2) I X]"" S TECH=TECH_$S(TECH="":"",1:"~")_X
"RTN","MAGJUTL1",152,0)
 S RADIV=$P(^RADPT(RADFN,"DT",RADTI,0),U,3)
"RTN","MAGJUTL1",153,0)
 K DIC,DR,DA,DIQ
"RTN","MAGJUTL1",154,0)
 I 'REQLOC S (REQLOCN,REQLOCT,REQLOCA)=""
"RTN","MAGJUTL1",155,0)
 E  D
"RTN","MAGJUTL1",156,0)
 . S X=$G(^SC(REQLOC,0)),REQLOCN=$P(X,U),REQLOCA=$P(X,U,2)
"RTN","MAGJUTL1",157,0)
 . S:REQLOCA="" REQLOCA=REQLOCN
"RTN","MAGJUTL1",158,0)
 . S DIC="44",DR="2",DA=REQLOC,DIQ="REQLOCT" D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","MAGJUTL1",159,0)
 . S REQLOCT=REQLOCT(44,REQLOC,2)
"RTN","MAGJUTL1",160,0)
 I REQWARD]"" S DIC="42",DR=".01",DA=REQWARD,DIQ="REQWARD" D EN^DIQ1 K DIC,DR,DA,DIQ S REQWARD=REQWARD(42,REQWARD,.01)
"RTN","MAGJUTL1",161,0)
 S X=$$RIST(RIST1,RIST2),RIST=$P(X,U),RISTISME=$P(X,U,2)
"RTN","MAGJUTL1",162,0)
 S RADTE=9999999.9999-RADTI,(RADTPRT,Y)=RADTE D D^RAUTL S RADATE=Y
"RTN","MAGJUTL1",163,0)
 S RADTPRT=$E(RADTPRT,4,5)_"/"_$E(RADTPRT,6,7)_"/"_$E(RADTPRT,2,3)
"RTN","MAGJUTL1",164,0)
 S RAPRC=$E($P(RADATA,U),1,40),RACN=$P(RADATA,U,2),RAELOC=$P(RADATA,U,7)
"RTN","MAGJUTL1",165,0)
 S IMTYPABB=$P($P(RADATA,U,8),"~"),RACPT=$P(RADATA,U,10)
"RTN","MAGJUTL1",166,0)
 S DAYCASE=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN
"RTN","MAGJUTL1",167,0)
 I LONGACN]"" S DAYCASE=LONGACN
"RTN","MAGJUTL1",168,0)
 S RASTP=RASTNM,RASTCAT=""
"RTN","MAGJUTL1",169,0)
 I RAST S RASTCAT=$P($G(^RA(72,RAST,0)),U,9)
"RTN","MAGJUTL1",170,0)
 S RANME=$P(^DPT(RADFN,0),U)
"RTN","MAGJUTL1",171,0)
 S DFN=RADFN D PID^VADPT6 S RASSN=$S(VAERR:"Unknown",1:VA("PID"))
"RTN","MAGJUTL1",172,0)
 K VA("PID"),VA("BID"),VAERR
"RTN","MAGJUTL1",173,0)
 S MAGRACNT=$G(MAGRACNT)+1
"RTN","MAGJUTL1",174,0)
 I MAGRACNT=1 K ^TMP($J,"MAGRAEX")
"RTN","MAGJUTL1",175,0)
 S ^TMP($J,"MAGRAEX",MAGRACNT,1)=RADFN_U_RADTI_U_RACNI_U_$E(RANME,1,30)_U_RASSN_U_RADATE_U_RADTE_U_RACN_U_$E(RAPRC,1,35)_U_RARPT_U_RAST_U_DAYCASE_U_RAELOC_U_RASTP_U_RASTORD_U_RADTPRT_U_RACPT_U_IMTYPABB
"RTN","MAGJUTL1",176,0)
 S ^TMP($J,"MAGRAEX",MAGRACNT,2)=REQLOCA_U_$E(REQLOCN,1,25)_U_RIST_U_COMPLIC_U_RADIV_U_$P($$IMGSIT(RADIV),U,2)_U_RISTISME_U_MODTXT_U_REQLOCT_U_REQWARD_U_RASTCAT_U_LRFLAG_U_TECH
"RTN","MAGJUTL1",177,0)
 S MAGRET=1
"RTN","MAGJUTL1",178,0)
 Q
"RTN","MAGJUTL1",179,0)
 ;
"RTN","MAGJUTL1",180,0)
RIST(RIST1,RIST2) ; return Interp Radiologist info
"RTN","MAGJUTL1",181,0)
 S RIST1=$G(RIST1),RIST2=$G(RIST2)
"RTN","MAGJUTL1",182,0)
 N RIST,RISTISME
"RTN","MAGJUTL1",183,0)
 S (RIST,RISTISME)=""
"RTN","MAGJUTL1",184,0)
 I RIST1!RIST2 D
"RTN","MAGJUTL1",185,0)
 . I RIST1 S RISTISME=RIST1 S RIST=$$USERINF^MAGJUTL3(RIST1,1)
"RTN","MAGJUTL1",186,0)
 . I RIST2 S RISTISME=$S('RISTISME:RIST2,1:RISTISME_"~"_RIST2) S RIST2=$$USERINF^MAGJUTL3(RIST2,1)
"RTN","MAGJUTL1",187,0)
 . I RIST]"" S RIST=RIST_$S(RIST2]"":"/"_RIST2,1:"")
"RTN","MAGJUTL1",188,0)
 . E  S RIST=RIST2
"RTN","MAGJUTL1",189,0)
 Q RIST_U_RISTISME
"RTN","MAGJUTL1",190,0)
 ;
"RTN","MAGJUTL1",191,0)
IMGSIT(DIV,DFLT) ; Return Imaging Site code for input Division
"RTN","MAGJUTL1",192,0)
 ; From 2006.1:  IEN ^ Site Code ^ Parent_DIV
"RTN","MAGJUTL1",193,0)
 I DIV]"" D
"RTN","MAGJUTL1",194,0)
 . N IEN I $D(^MAG(2006.1,"B",DIV)) S IEN=$O(^(DIV,"")) I IEN
"RTN","MAGJUTL1",195,0)
 . E  I $G(DFLT) S IEN=$O(^MAG(2006.1,0)) ; Dflt to 1st if requested
"RTN","MAGJUTL1",196,0)
 . E  S X="" Q
"RTN","MAGJUTL1",197,0)
 . S X=^MAG(2006.1,IEN,0),X=IEN_U_$P(X,U,9)_U_$P(X,U)
"RTN","MAGJUTL1",198,0)
 Q X
"RTN","MAGJUTL1",199,0)
 ;
"RTN","MAGJUTL1",200,0)
TRIM(X) ; Trim trailing spaces from X
"RTN","MAGJUTL1",201,0)
 I $G(X)]"" D
"RTN","MAGJUTL1",202,0)
 . F I=$L(X):-1:0 I $E(X,I)'=" " Q
"RTN","MAGJUTL1",203,0)
 . I I S X=$E(X,1,I)
"RTN","MAGJUTL1",204,0)
 . E  S X=""
"RTN","MAGJUTL1",205,0)
 Q:$Q X  Q
"RTN","MAGJUTL1",206,0)
 ;
"RTN","MAGJUTL1",207,0)
END Q  ;
"RTN","MAGJUTL3")
0^16^B91880385
"RTN","MAGJUTL3",1,0)
MAGJUTL3 ;WIRMFO/JHC VistARad subrtns & RPCs ; 29 Jul 2003  10:03 AM
"RTN","MAGJUTL3",2,0)
 ;;3.0;IMAGING;**16,9,22,18,65,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJUTL3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL3",11,0)
 ;; |                                                               |
"RTN","MAGJUTL3",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL3",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL3",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL3",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL3",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL3",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL3",18,0)
 ;;
"RTN","MAGJUTL3",19,0)
 Q
"RTN","MAGJUTL3",20,0)
 ;RPC Entry points:
"RTN","MAGJUTL3",21,0)
 ; LISTINF--Custom list info
"RTN","MAGJUTL3",22,0)
 ; LOGOFF--update session file
"RTN","MAGJUTL3",23,0)
 ; CACHEQ--init session data
"RTN","MAGJUTL3",24,0)
 ; PINF1--Patient info
"RTN","MAGJUTL3",25,0)
 ; USERINF2--P18 inits for the session
"RTN","MAGJUTL3",26,0)
 ;Subrtn EPs:
"RTN","MAGJUTL3",27,0)
 ; LOG--Upd image access log
"RTN","MAGJUTL3",28,0)
 ; MAGJOBNC--inits for non-client sessions
"RTN","MAGJUTL3",29,0)
 ; USERKEYS--user key info
"RTN","MAGJUTL3",30,0)
 ; USERINF--user info
"RTN","MAGJUTL3",31,0)
 ;
"RTN","MAGJUTL3",32,0)
LISTINF(MAGGRY) ; RPC: MAGJ CUSTOM LISTS
"RTN","MAGJUTL3",33,0)
 ;  get Exam List data
"RTN","MAGJUTL3",34,0)
 ; Return in ^TMP($J,"MAGJLSTINF",0:N)
"RTN","MAGJUTL3",35,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",36,0)
 ;   1:n)= Button Label^List #^Button Hints^List Type
"RTN","MAGJUTL3",37,0)
 ;
"RTN","MAGJUTL3",38,0)
 ; MAGGRY holds $NA ref to ^TMP for return message
"RTN","MAGJUTL3",39,0)
 ;   all refs to MAGGRY use SS indirection
"RTN","MAGJUTL3",40,0)
 ;
"RTN","MAGJUTL3",41,0)
 ; GLB has $NA ref to ^MAG(2006.631), Custom Lists
"RTN","MAGJUTL3",42,0)
 ;   refs to GLB use SS indirection to get data from this file
"RTN","MAGJUTL3",43,0)
 ;
"RTN","MAGJUTL3",44,0)
 S X="ERR1^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",45,0)
 N D0,GLB,INF,MAGLST,NAM,T
"RTN","MAGJUTL3",46,0)
 S MAGLST="MAGJLSTINF"
"RTN","MAGJUTL3",47,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY S @MAGGRY@(0)=0
"RTN","MAGJUTL3",48,0)
 S GLB=$NA(^MAG(2006.631)),NAM=""
"RTN","MAGJUTL3",49,0)
 F  S NAM=$O(@GLB@("B",NAM)) Q:NAM=""  S D0="" D
"RTN","MAGJUTL3",50,0)
 . S D0=$O(@GLB@("B",NAM,D0)) Q:'D0  D
"RTN","MAGJUTL3",51,0)
 . . S X=$G(@GLB@(D0,0)) Q:($P(X,U,2)>9000)!'$P(X,U,6)  ; List Active & User-defined
"RTN","MAGJUTL3",52,0)
 . . S INF="" F I=1:1 S T=$P("7^2^1^3",U,I) Q:T=""  S Y=$P(X,U,T) Q:Y=""  S $P(INF,U,I)=Y
"RTN","MAGJUTL3",53,0)
 . . Q:T'=""  ; req'd fields not all there
"RTN","MAGJUTL3",54,0)
 . . S T=@MAGGRY@(0)+1,^(0)=T,^(T)=INF ; add entry to reply
"RTN","MAGJUTL3",55,0)
 Q
"RTN","MAGJUTL3",56,0)
 ;
"RTN","MAGJUTL3",57,0)
LOG(ACTION,LOGDATA) ; Log exam access
"RTN","MAGJUTL3",58,0)
 N PTCT,TXT,RADFN,MAGIEN,NIMGS,REMOTE
"RTN","MAGJUTL3",59,0)
 S RADFN=$P(LOGDATA,U),MAGIEN=$P(LOGDATA,U,2),NIMGS=$P(LOGDATA,U,3),REMOTE=$P(LOGDATA,U,4)
"RTN","MAGJUTL3",60,0)
 I ACTION="" S ACTION="UNKNOWN"  ; Should never happen
"RTN","MAGJUTL3",61,0)
 S PTCT=RADFN'=$G(MAGJOB("LASTPT",ACTION))
"RTN","MAGJUTL3",62,0)
 I PTCT S MAGJOB("LASTPT",ACTION)=RADFN
"RTN","MAGJUTL3",63,0)
 S TXT=ACTION_U_RADFN_U_MAGIEN_U_U_U_NIMGS
"RTN","MAGJUTL3",64,0)
 S TXT=TXT_U_PTCT_U_$S(+MAGJOB("USER",1):1,1:0)_U_REMOTE
"RTN","MAGJUTL3",65,0)
 ; Session Log
"RTN","MAGJUTL3",66,0)
 D ACTION^MAGGTAU(TXT,1)
"RTN","MAGJUTL3",67,0)
 ; Mag Log
"RTN","MAGJUTL3",68,0)
 I REMOTE S ACTION=ACTION_"/REM"
"RTN","MAGJUTL3",69,0)
 D ENTRY^MAGLOG(ACTION,+DUZ,MAGIEN,"VRAD:"_MAGJOB("VRVERSION"),RADFN,NIMGS)
"RTN","MAGJUTL3",70,0)
 Q
"RTN","MAGJUTL3",71,0)
 ;
"RTN","MAGJUTL3",72,0)
LOGOFF(MAGGRY,DATA) ; RPC: MAGJ LOGOFF
"RTN","MAGJUTL3",73,0)
 ; update session file: logoff time & session entry closed
"RTN","MAGJUTL3",74,0)
 D LOGOFF^MAGGTAU(.MAGGRY)
"RTN","MAGJUTL3",75,0)
 Q
"RTN","MAGJUTL3",76,0)
 ;
"RTN","MAGJUTL3",77,0)
CACHEQ(MAGGRY,DATA) ; RPC: MAGJ CACHELOCATION
"RTN","MAGJUTL3",78,0)
 ; some logon inits & get alternate paths for Remote Reading
"RTN","MAGJUTL3",79,0)
 ; input in DATA:
"RTN","MAGJUTL3",80,0)
 ;  - WSLOC   = WS Loc'n
"RTN","MAGJUTL3",81,0)
 ;  - VRADVER = Client Vs -- p32 ONLY
"RTN","MAGJUTL3",82,0)
 ;  - OSVER   = Client OS Vs -- p32 ONLY
"RTN","MAGJUTL3",83,0)
 ; Return in ^TMP($J,"MAGJCACHE",0:N) (@MAGGRY)
"RTN","MAGJUTL3",84,0)
 ;     0)= # Entries below (0:n)
"RTN","MAGJUTL3",85,0)
 ;   1:n)= PhysName^Subdirectory^HashFlag^Username^Password^AltPath_IEN
"RTN","MAGJUTL3",86,0)
 ;
"RTN","MAGJUTL3",87,0)
 ; MAGGRY holds $NA reference to ^TMP for return message
"RTN","MAGJUTL3",88,0)
 ;   refs to MAGGRY use SS indirection
"RTN","MAGJUTL3",89,0)
 ;
"RTN","MAGJUTL3",90,0)
 ; Also builds local array:  p32/p18 compatibility: Some of this is moved to userinf2 below
"RTN","MAGJUTL3",91,0)
 ;  MAGJOB("LOC",NetworkLocnIEN)=Site Abbrev
"RTN","MAGJUTL3",92,0)
 ;     ("REMOTE")=1/0  (T/F for "User is Remote")
"RTN","MAGJUTL3",93,0)
 ;     ("REMOTESCREEN")=0/1  (init User-switchable Remote Screening--P18 use only)
"RTN","MAGJUTL3",94,0)
 ;     ("WSLOC")=WS Loc'n String
"RTN","MAGJUTL3",95,0)
 ;     ("WSLOCTYP")=WS Loc'n Type
"RTN","MAGJUTL3",96,0)
 ;     ("WSNAME")=WS ID
"RTN","MAGJUTL3",97,0)
 ;     ("VRVERSION")=VRAD Vs
"RTN","MAGJUTL3",98,0)
 ;     ("OSVER")=O/S Vs
"RTN","MAGJUTL3",99,0)
 ;     ("ALTPATH")=1/0 ^ 1/0 (T/F Alt Paths are defined 
"RTN","MAGJUTL3",100,0)
 ;               ^ Alt Paths Enabled/Disabled for most recent exam)
"RTN","MAGJUTL3",101,0)
 ;
"RTN","MAGJUTL3",102,0)
 S X="ERR1^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",103,0)
 ;
"RTN","MAGJUTL3",104,0)
 N I,MAGLST,REPLY,TMP,WSLOC,XX,VRADVER,OSVER,DIQUIET,ALTIEN
"RTN","MAGJUTL3",105,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL3",106,0)
 S REPLY=0,MAGLST="MAGJCACHE"
"RTN","MAGJUTL3",107,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY
"RTN","MAGJUTL3",108,0)
 S WSLOC=$$UPCASE($P(DATA,U)),VRADVER=$P(DATA,U,2),OSVER=$P(DATA,U,3)
"RTN","MAGJUTL3",109,0)
 I '$D(MAGJOB("OSVER")) D  ; ID p32 initialization
"RTN","MAGJUTL3",110,0)
 . S MAGJOB("OSVER")=$S(OSVER]"":OSVER,1:"UNK")
"RTN","MAGJUTL3",111,0)
 . S MAGJOB("VRVERSION")=$S(VRADVER]"":VRADVER,1:"UNK")
"RTN","MAGJUTL3",112,0)
 . D MAGJOB ; p32 init of VRAD
"RTN","MAGJUTL3",113,0)
 ; get alt paths location info
"RTN","MAGJUTL3",114,0)
 S MAGJOB("WSLOC")=WSLOC,MAGJOB("REMOTE")=0
"RTN","MAGJUTL3",115,0)
 S MAGJOB("REMOTESCREEN")=+$P($G(^MAG(2006.69,1,0)),U,10)
"RTN","MAGJUTL3",116,0)
 I WSLOC]"" D
"RTN","MAGJUTL3",117,0)
 . S X=$P($G(^MAG(2006.1,+MAGJOB("SITEP"),0)),U,9)
"RTN","MAGJUTL3",118,0)
 . I X]"",(X'=WSLOC) S MAGJOB("REMOTE")=1
"RTN","MAGJUTL3",119,0)
 . E  Q
"RTN","MAGJUTL3",120,0)
 . D LIST^MAGBRTLD(WSLOC,.TMP)
"RTN","MAGJUTL3",121,0)
 . I TMP S REPLY=TMP,MAGJOB("ALTPATH")=$G(MAGJOB("ALTPATH"),"1^1") F I=1:1:TMP D
"RTN","MAGJUTL3",122,0)
 . . S ALTIEN=$P(TMP(I),U,7)
"RTN","MAGJUTL3",123,0)
 . . S XX=$P(TMP(I),U,1,5),X=$P(XX,U,3),$P(XX,U,3)=$S(X="Y":1,1:0)
"RTN","MAGJUTL3",124,0)
 . . S X=$P(XX,U,4),$P(XX,U,4)=$P(XX,U,5),$P(XX,U,5)=X,$P(XX,U,6)=ALTIEN
"RTN","MAGJUTL3",125,0)
 . . S @MAGGRY@(I)=XX,MAGJOB("LOC",ALTIEN)=$P(TMP(I),U,6)
"RTN","MAGJUTL3",126,0)
 I '$D(MAGJOB("ALTPATH")) S MAGJOB("ALTPATH")="0^0"
"RTN","MAGJUTL3",127,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL3",128,0)
CACHEQZ Q
"RTN","MAGJUTL3",129,0)
 ;
"RTN","MAGJUTL3",130,0)
MAGJOBNC ; EP for Prefetch/Bkgnd calls (NOT a Vrad Client)
"RTN","MAGJUTL3",131,0)
 N NOTCLIEN S NOTCLIEN=1
"RTN","MAGJUTL3",132,0)
 D MAGJOB
"RTN","MAGJUTL3",133,0)
 Q
"RTN","MAGJUTL3",134,0)
 ;
"RTN","MAGJUTL3",135,0)
MAGJOB ; Init magjob array
"RTN","MAGJUTL3",136,0)
 N T,RIST
"RTN","MAGJUTL3",137,0)
 I $G(MAGJOB("VRVERSION")) S X=MAGJOB("VRVERSION")
"RTN","MAGJUTL3",138,0)
 E  S X="" ; non-client processes assume post-P32 logic
"RTN","MAGJUTL3",139,0)
 S MAGJOB("P32")=(X="3.0.41.17") ; P32 Client?
"RTN","MAGJUTL3",140,0)
 I MAGJOB("P32") D P32STOP^MAGJUTL5(.X) S MAGJOB("P32STOP")=X  ; STOP support when P76 releases
"RTN","MAGJUTL3",141,0)
 D USERKEYS
"RTN","MAGJUTL3",142,0)
 S MAGJOB("CONSOLIDATED")=($G(^MAG(2006.1,"CONSOLIDATED"))="YES")
"RTN","MAGJUTL3",143,0)
 S MAGJOB("SITEP")=$$IMGSIT^MAGJUTL1(DUZ(2),1)  ; Site Param ien
"RTN","MAGJUTL3",144,0)
 S RIST="" F X="S","R" I $D(^VA(200,"ARC",X,DUZ)) S RIST=X Q
"RTN","MAGJUTL3",145,0)
 S RIST=$S(RIST="S":15,RIST="R":12,1:0) ; Staff/Resident/Non rist
"RTN","MAGJUTL3",146,0)
 S MAGJOB("USER",1)=RIST_U_$$USERINF(+DUZ,".01;1") ; RIST_Type^NAME^INI
"RTN","MAGJUTL3",147,0)
 S X=$P($G(IO("CLNM")),"."),MAGJOB("WSNAME")=$S(X]"":X,1:"VistaradWS")
"RTN","MAGJUTL3",148,0)
 K MAGJOB("DIVSCRN") I MAGJOB("CONSOLIDATED") D
"RTN","MAGJUTL3",149,0)
 . ; include logon DIV, other DIVs to screen Unread Lists & Locking
"RTN","MAGJUTL3",150,0)
 . I $G(DUZ(2))]"" S MAGJOB("DIVSCRN",DUZ(2))=""
"RTN","MAGJUTL3",151,0)
 . S DIV=""
"RTN","MAGJUTL3",152,0)
 . I DUZ(2)'=$P(MAGJOB("SITEP"),U,3) D  ; Assoc DIV
"RTN","MAGJUTL3",153,0)
 . . S IEN=$O(^MAG(2006.1,+MAGJOB("SITEP"),"INSTS","B",DUZ(2),0))
"RTN","MAGJUTL3",154,0)
 . . I IEN F  S DIV=$O(^MAG(2006.1,+MAGJOB("SITEP"),"INSTS",IEN,201,"B",DIV)) Q:'DIV  S MAGJOB("DIVSCRN",DIV)=""
"RTN","MAGJUTL3",155,0)
 . E  D  ; Parent DIV
"RTN","MAGJUTL3",156,0)
 . . F  S DIV=$O(^MAG(2006.1,+MAGJOB("SITEP"),201,"B",DIV)) Q:'DIV  S MAGJOB("DIVSCRN",DIV)=""
"RTN","MAGJUTL3",157,0)
 S MAGJOB("WSLOCTYP")=$S(+MAGJOB("USER",1):"RAD",1:"Non-Rad") ; USer is Rist/Not
"RTN","MAGJUTL3",158,0)
 I '$D(MAGJOB("WRKSIEN")) D
"RTN","MAGJUTL3",159,0)
 . Q:+$G(NOTCLIEN)  ; proceed only if Vrad Client is attached
"RTN","MAGJUTL3",160,0)
 . S X=MAGJOB("WSNAME")_"^^^"_MAGJOB("WSLOCTYP")_U_U_U_U_1_U_MAGJOB("OSVER")_U_MAGJOB("VRVERSION")
"RTN","MAGJUTL3",161,0)
 . D UPD^MAGGTAU(.Y,X)
"RTN","MAGJUTL3",162,0)
 . D REMLOCK^MAGJEX1B ; put here to only run 1x/ login
"RTN","MAGJUTL3",163,0)
 Q
"RTN","MAGJUTL3",164,0)
 ;
"RTN","MAGJUTL3",165,0)
USERINF(DUZ,FLDS) ; get data from user file
"RTN","MAGJUTL3",166,0)
 I FLDS=""!'DUZ Q ""
"RTN","MAGJUTL3",167,0)
 N I,RSL,T S RSL=""
"RTN","MAGJUTL3",168,0)
 D GETS^DIQ(200,+DUZ,FLDS,"E","T")
"RTN","MAGJUTL3",169,0)
 S T=+DUZ_","
"RTN","MAGJUTL3",170,0)
 F I=1:1:$L(FLDS,";") S RSL=RSL_$S(RSL="":"",1:U)_T(200,T,$P(FLDS,";",I),"E")
"RTN","MAGJUTL3",171,0)
 Q RSL
"RTN","MAGJUTL3",172,0)
 ;
"RTN","MAGJUTL3",173,0)
USERKEYS ; Store Security Keys in MagJob
"RTN","MAGJUTL3",174,0)
 N I,X,Y
"RTN","MAGJUTL3",175,0)
 N MAGKS ; keys to send to XUS KEY CHECK
"RTN","MAGJUTL3",176,0)
 N MAGKG ; returned
"RTN","MAGJUTL3",177,0)
 K MAGJOB("KEYS")
"RTN","MAGJUTL3",178,0)
 S X="MAGJ",I=0
"RTN","MAGJUTL3",179,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,4)'="MAGJ"  D
"RTN","MAGJUTL3",180,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGJUTL3",181,0)
 I '$D(MAGKS) Q
"RTN","MAGJUTL3",182,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGJUTL3",183,0)
 S I=0 F  S I=$O(MAGKG(I)) Q:'I  I MAGKG(I) S MAGJOB("KEYS",MAGKS(I))=""
"RTN","MAGJUTL3",184,0)
 Q
"RTN","MAGJUTL3",185,0)
 ;
"RTN","MAGJUTL3",186,0)
PINF1(MAGGRY,MAGDFN) ;RPC Call MAGJ PT INFO -- Get pt info
"RTN","MAGJUTL3",187,0)
 S X="ERR3^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",188,0)
 D INFO^MAGGTPT1(.MAGGRY,MAGDFN_"^1") ; 1=Don't log to session file
"RTN","MAGJUTL3",189,0)
 Q
"RTN","MAGJUTL3",190,0)
 ;
"RTN","MAGJUTL3",191,0)
USERINF2(MAGGRY,DATA) ; rpc: MAGJ USER2--get user info
"RTN","MAGJUTL3",192,0)
 ; Input= MAMMORES ^ Client Vs ^ Client O/S Vs
"RTN","MAGJUTL3",193,0)
 ;   MAMMORES = Screen resolution of main viewer display format:
"RTN","MAGJUTL3",194,0)
 ;     XxY,ColorType  [ ColorType is GRAY or COLOR ]  E.g., 2048x2580,GRAY
"RTN","MAGJUTL3",195,0)
 ;   Client Vs = client software version, for version checking
"RTN","MAGJUTL3",196,0)
 ;   Client O/S Vs = Client OS version, for logging
"RTN","MAGJUTL3",197,0)
 ; Reply=
"RTN","MAGJUTL3",198,0)
 ; 0) = 1/0^code~Msg |  DUZ ^ NAME ^ INITIALS ^ REQFLAG ^ SVERSION ^ DICTPREF
"RTN","MAGJUTL3",199,0)
 ; 1)= Net UserName ^ PSW ^ UserType ^ SYSADMIN
"RTN","MAGJUTL3",200,0)
 ;     1/0=Success/Fail flag for vs chk
"RTN","MAGJUTL3",201,0)
 ;     code=4 if fail
"RTN","MAGJUTL3",202,0)
 ;     Msg=Disp msg if fail
"RTN","MAGJUTL3",203,0)
 ;     REQFLAG = 1/0 (Ena/Disa Requisition for non-rad staff)
"RTN","MAGJUTL3",204,0)
 ;     SVERSION = VistARad Server Version
"RTN","MAGJUTL3",205,0)
 ;     DICTPREF = 1/0  (ENA DICT PREF-YES ALL LOCKED value from 2006.69)
"RTN","MAGJUTL3",206,0)
 ;     UserType = 3: Staff R'ist; 2: Resident R'ist; 1: Rad Tech; 0: Non-Rad
"RTN","MAGJUTL3",207,0)
 ;     SYSADMIN = 1/0 1=user has System User privileges
"RTN","MAGJUTL3",208,0)
 ; 2:N)=Sec Keys
"RTN","MAGJUTL3",209,0)
 ; N+1:M = Mammography display message data
"RTN","MAGJUTL3",210,0)
 ;
"RTN","MAGJUTL3",211,0)
 S X="ERR2^MAGJUTL3",@^%ZOSF("TRAP")
"RTN","MAGJUTL3",212,0)
 K MAGGRY S MAGGRY(0)="",MAGGRY(1)=""
"RTN","MAGJUTL3",213,0)
 I +$G(DUZ)=0 S MAGGRY(0)="0^4~DUZ Undefined, Null or Zero|" Q
"RTN","MAGJUTL3",214,0)
 N I,J,K,Y,REQFLAG,VRADVER,OSVER,RADTECH,PLACE,REPLY,DICTPREF,MAMMORES,ICNT,MSG
"RTN","MAGJUTL3",215,0)
 S MAMMORES=$P(DATA,U),VRADVER=$P(DATA,U,2),OSVER=$P(DATA,U,3)
"RTN","MAGJUTL3",216,0)
 D CHKVER^MAGJUTL5(.REPLY,VRADVER,.PLACE,.SVERSION)
"RTN","MAGJUTL3",217,0)
 I 'REPLY S MAGGRY(0)=REPLY_"|^^^^",MAGGRY(1)="^^^" G USERIN2Z ; Version check or PLACE failed
"RTN","MAGJUTL3",218,0)
 S RADTECH=""
"RTN","MAGJUTL3",219,0)
 S MAGJOB("OSVER")=$S(OSVER]"":OSVER,1:"UNK")   ; IDs P18 initialization; cf cacheq ep above
"RTN","MAGJUTL3",220,0)
 S MAGJOB("VRVERSION")=$S(VRADVER]"":VRADVER,1:"UNK")
"RTN","MAGJUTL3",221,0)
 S MAGJOB("VSVERSION")=SVERSION
"RTN","MAGJUTL3",222,0)
 D MAGJOB
"RTN","MAGJUTL3",223,0)
 ; Enable/Disable Requisition if not a radiology user
"RTN","MAGJUTL3",224,0)
 S REQFLAG=1
"RTN","MAGJUTL3",225,0)
 I 'MAGJOB("USER",1) D  ; not a rist
"RTN","MAGJUTL3",226,0)
 . I $D(^VA(200,"ARC","T",+DUZ)) S RADTECH=1 Q  ; Rad Tech OK
"RTN","MAGJUTL3",227,0)
 . S X=+$P($G(^MAG(2006.69,1,0)),U,16)
"RTN","MAGJUTL3",228,0)
 . I X S REQFLAG=0 ; Disable Req
"RTN","MAGJUTL3",229,0)
 S DICTPREF=+$P($G(^MAG(2006.69,1,0)),U,17)
"RTN","MAGJUTL3",230,0)
 S MAGGRY(0)=REPLY_"|"_DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)_U_REQFLAG_U_SVERSION_U_DICTPREF
"RTN","MAGJUTL3",231,0)
 ; Network UserName and PSW
"RTN","MAGJUTL3",232,0)
 S MAGGRY(1)=$P($G(^MAG(2006.1,PLACE,"NET")),U,1,2)
"RTN","MAGJUTL3",233,0)
 S X=+MAGJOB("USER",1),X=$S(X=15:3,X=12:2,+RADTECH:1,1:0)
"RTN","MAGJUTL3",234,0)
 S MAGGRY(1)=MAGGRY(1)_U_X_U_$D(MAGJOB("KEYS","MAGJ SYSTEM USER"))
"RTN","MAGJUTL3",235,0)
 S MAGGRY(2)="*KEYS",X="" F ICNT=3:1 S X=$O(MAGJOB("KEYS",X)) Q:X=""  S MAGGRY(ICNT)=X
"RTN","MAGJUTL3",236,0)
 S MAGGRY(ICNT)="*END"
"RTN","MAGJUTL3",237,0)
 S ICNT=ICNT+1,MAGGRY(ICNT)="*MAMMO"
"RTN","MAGJUTL3",238,0)
 S MSG=$$MAMMOCHK(MAMMORES)
"RTN","MAGJUTL3",239,0)
 I MSG]"" S ICNT=ICNT+1,MAGGRY(ICNT)=MSG
"RTN","MAGJUTL3",240,0)
 S ICNT=ICNT+1,MAGGRY(ICNT)="*END"
"RTN","MAGJUTL3",241,0)
USERIN2Z Q
"RTN","MAGJUTL3",242,0)
 ;
"RTN","MAGJUTL3",243,0)
MAMMOCHK(X) ; return true if the screen resolution is 5 megapixels, and grayscale
"RTN","MAGJUTL3",244,0)
 ; note--as of 4/09 there is only one size display for mammo interpretation
"RTN","MAGJUTL3",245,0)
 ; and the resolution is 2048x2560, or 5,242,880 pixels; the algorithm allows 
"RTN","MAGJUTL3",246,0)
 ; a little wiggle room, but excludes a 6MP display.  Can update when real life changes
"RTN","MAGJUTL3",247,0)
 N T,XX,YY,RES,MSG
"RTN","MAGJUTL3",248,0)
 S X=$$UPCASE(X)
"RTN","MAGJUTL3",249,0)
 S T=0
"RTN","MAGJUTL3",250,0)
 I X?4N1"X"4N1","4.5A D
"RTN","MAGJUTL3",251,0)
 . S XX=+X,YY=+$P(X,"X",2),C=$P(X,",",2)
"RTN","MAGJUTL3",252,0)
 . S RES=XX*YY I RES>5000000,(RES<5314800) S T=1 ; resolution OK
"RTN","MAGJUTL3",253,0)
 . I T S T=(C="GRAY") ; and, is grayscale
"RTN","MAGJUTL3",254,0)
 I T S MSG="Primary diagnostic interpretation of mammography images may only be performed on medical devices that are cleared for that intended use, and that use display hardware conforming to technical specifications set by the FDA."
"RTN","MAGJUTL3",255,0)
 E  S MSG="This device does not conform to technical specifications set by the FDA for primary diagnostic interpretation of mammography images."
"RTN","MAGJUTL3",256,0)
 Q:$Q MSG Q
"RTN","MAGJUTL3",257,0)
 ;
"RTN","MAGJUTL3",258,0)
UPCASE(X) ; strip spaces, and cx to uppercase
"RTN","MAGJUTL3",259,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz ","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","MAGJUTL3",260,0)
 ;
"RTN","MAGJUTL3",261,0)
ERR1 N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL3",262,0)
ERR2 N ERR S ERR=$$EC^%ZOSV S MAGGRY(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL3",263,0)
ERR3 N ERR S ERR=$$EC^%ZOSV S MAGGRY="0^4~"_ERR
"RTN","MAGJUTL3",264,0)
ERR D @^%ZOSF("ERRTN")
"RTN","MAGJUTL3",265,0)
 Q:$Q 1  Q
"RTN","MAGJUTL3",266,0)
 ;
"RTN","MAGJUTL3",267,0)
END Q  ; 
"RTN","MAGJUTL4")
0^11^B150484690
"RTN","MAGJUTL4",1,0)
MAGJUTL4 ;WIRMFO/JHC VistARad subroutines for RPC calls ; 18 Jun 2009 3:30 PM
"RTN","MAGJUTL4",2,0)
 ;;3.0;IMAGING;**18,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJUTL4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL4",11,0)
 ;; |                                                               |
"RTN","MAGJUTL4",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL4",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL4",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL4",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL4",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL4",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL4",18,0)
 ;;
"RTN","MAGJUTL4",19,0)
 Q
"RTN","MAGJUTL4",20,0)
 ;
"RTN","MAGJUTL4",21,0)
 ;***** Return matching CPT's based on grouping criteria.
"RTN","MAGJUTL4",22,0)
 ; RPC: MAGJ CPTMATCH
"RTN","MAGJUTL4",23,0)
 ;
"RTN","MAGJUTL4",24,0)
CPTGRP(MAGGRY,DATA) ;
"RTN","MAGJUTL4",25,0)
 ; FOR INPUT cpt code, return matching cpt's based on grouping criteria:
"RTN","MAGJUTL4",26,0)
 ; INPUT in DATA: CPT Code ^ Criteria
"RTN","MAGJUTL4",27,0)
 ; Criteria:
"RTN","MAGJUTL4",28,0)
 ;   1=Matching cpt
"RTN","MAGJUTL4",29,0)
 ;   2=Body Part
"RTN","MAGJUTL4",30,0)
 ;   3=Body Part & Modality
"RTN","MAGJUTL4",31,0)
 ;  10=Same CPT (used to return short description only)
"RTN","MAGJUTL4",32,0)
 ; Return: List of CPTs with Short Name:  CPT ^ Short Name
"RTN","MAGJUTL4",33,0)
 ; MAGGRY holds $NA reference to ^TMP for rpc return
"RTN","MAGJUTL4",34,0)
 ;   all ref's to MAGGRY use subscript indirection
"RTN","MAGJUTL4",35,0)
 ;
"RTN","MAGJUTL4",36,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR1^MAGJUTL4"
"RTN","MAGJUTL4",37,0)
 N REPLY,DIQUIET,CPT,CRIT,CT,MAGLST,NOD,NODLST
"RTN","MAGJUTL4",38,0)
 N MATCHGRP,INDXLST,AND,RET,CPTGLB,CPTIN,CPTIEN,TCPT,CPTFILIEN,CPTFILDAT,IEN
"RTN","MAGJUTL4",39,0)
 ;
"RTN","MAGJUTL4",40,0)
 ; <*> Issue: Unable get specific body part for some non-specific CPTs (e.g., 75774-ANGIO SELECT EA ADD VESSEL-S)
"RTN","MAGJUTL4",41,0)
 ;         --> For these, could just return matching CPTs (or equivalent CPT?)
"RTN","MAGJUTL4",42,0)
 ;
"RTN","MAGJUTL4",43,0)
 ; Produce List of cptiens for each INDX of interest
"RTN","MAGJUTL4",44,0)
 ; AND with next list of cptiens; repeat until no more INDXs
"RTN","MAGJUTL4",45,0)
 ; build output list of CPT codes (w/ short names [optional])
"RTN","MAGJUTL4",46,0)
 ; 
"RTN","MAGJUTL4",47,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",48,0)
 S CT=0,MAGLST="MAGJCPT"
"RTN","MAGJUTL4",49,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,MAGLST)) K @MAGGRY  ; assign MAGGRY value
"RTN","MAGJUTL4",50,0)
 S CPTIN=$P(DATA,U),CRIT=$P(DATA,U,2),CPTIEN=""
"RTN","MAGJUTL4",51,0)
 S REPLY="0^Getting matching CPT info."
"RTN","MAGJUTL4",52,0)
 S:'CRIT CRIT=1 ; default equivalent
"RTN","MAGJUTL4",53,0)
 I '(CRIT=1!(CRIT=2)!(CRIT=3)!(CRIT=10)) S REPLY="0^Invalid cpt lookup criteria ("_DATA_")." G CPTGRPZ
"RTN","MAGJUTL4",54,0)
 I CPTIN="" S REPLY="0^Invalid CPT code ("_DATA_")." G CPTGRPZ
"RTN","MAGJUTL4",55,0)
 S CPTFILDAT=$$CPT^ICPTCOD(CPTIN)
"RTN","MAGJUTL4",56,0)
 I +CPTFILDAT=-1 S CPTFILDAT=""
"RTN","MAGJUTL4",57,0)
 S CPTFILIEN=$P(CPTFILDAT,U)
"RTN","MAGJUTL4",58,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",59,0)
 I CPTFILIEN S CPTIEN=$O(@CPTGLB@("B",CPTFILIEN,""))
"RTN","MAGJUTL4",60,0)
 I 'CPTIEN D  G CPTGRPZ
"RTN","MAGJUTL4",61,0)
 . ; if no entry in CPTGLB, return same CPT
"RTN","MAGJUTL4",62,0)
 . S CT=CT+1,@MAGGRY@(CT)=CPTIN_U_$P(CPTFILDAT,U,3)
"RTN","MAGJUTL4",63,0)
 . I CPTFILIEN S REPLY=CT_U_"1~ "_CT_" CPT name returned for "_CPTIN
"RTN","MAGJUTL4",64,0)
 . E  S REPLY=CT_U_"1~ "_CT_" record returned--no value found for "_CPTIN
"RTN","MAGJUTL4",65,0)
 S X=@CPTGLB@(CPTIEN,0),MATCHGRP=+$P(X,U,4)
"RTN","MAGJUTL4",66,0)
 ;CPTMATCH^BODYPART^MDL
"RTN","MAGJUTL4",67,0)
 I CRIT=2!(CRIT=3) D
"RTN","MAGJUTL4",68,0)
 . S X=0 F  S X=$O(@CPTGLB@(CPTIEN,1,"B",X)) Q:'X  D GETCPTS("BODYPART",X,"",.RET)
"RTN","MAGJUTL4",69,0)
 . I CRIT=3 D
"RTN","MAGJUTL4",70,0)
 . . M AND=RET K RET S X=0
"RTN","MAGJUTL4",71,0)
 . . F  S X=$O(@CPTGLB@(CPTIEN,2,"B",X)) Q:'X  D GETCPTS("MDL",X,.AND,.RET)
"RTN","MAGJUTL4",72,0)
 I CRIT=1 D
"RTN","MAGJUTL4",73,0)
 . I MATCHGRP,(MATCHGRP'=CPTIEN) S RET(MATCHGRP)="" D GETCPTS("CPTMATCH",MATCHGRP,"",.RET)
"RTN","MAGJUTL4",74,0)
 . D GETCPTS("CPTMATCH",CPTIEN,"",.RET)
"RTN","MAGJUTL4",75,0)
 I CRIT=10 ; fall through answers this!
"RTN","MAGJUTL4",76,0)
 I '$D(RET(CPTIEN)) S RET(CPTIEN)="" ; always report back input cpt
"RTN","MAGJUTL4",77,0)
 S IEN=0 F  S IEN=$O(RET(IEN)) Q:'IEN  D
"RTN","MAGJUTL4",78,0)
 . N LIN S X=$G(@CPTGLB@(IEN,0))
"RTN","MAGJUTL4",79,0)
 . Q:'(X]"")  S TCPT=$P(X,U),LIN=$P($$CPT^ICPTCOD(TCPT),U,2,3)
"RTN","MAGJUTL4",80,0)
 . S CT=CT+1,@MAGGRY@(CT)=LIN
"RTN","MAGJUTL4",81,0)
 S REPLY=CT_U_"1~ "_CT_" CPT Matches returned for "_CPTIN
"RTN","MAGJUTL4",82,0)
CPTGRPZ ;
"RTN","MAGJUTL4",83,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL4",84,0)
 Q
"RTN","MAGJUTL4",85,0)
 ;
"RTN","MAGJUTL4",86,0)
GETCPTS(INDEX,VALUE,AND,OUT) ; return a list of CPTIENS in OUT
"RTN","MAGJUTL4",87,0)
 ; if array AND is defined, reply only values contained in AND &  the index
"RTN","MAGJUTL4",88,0)
 N X,GLBREF,CPTIEN
"RTN","MAGJUTL4",89,0)
 S GLBREF=$NA(@CPTGLB@(INDEX,VALUE))
"RTN","MAGJUTL4",90,0)
 S CPTIEN=0
"RTN","MAGJUTL4",91,0)
 I $D(AND)>9 D
"RTN","MAGJUTL4",92,0)
 . F  S CPTIEN=$O(AND(CPTIEN)) Q:CPTIEN=""  I $D(@GLBREF@(CPTIEN)) S OUT(CPTIEN)=""
"RTN","MAGJUTL4",93,0)
 E  F  S CPTIEN=$O(@GLBREF@(CPTIEN)) Q:'CPTIEN  D
"RTN","MAGJUTL4",94,0)
 . S OUT(CPTIEN)=""
"RTN","MAGJUTL4",95,0)
 Q
"RTN","MAGJUTL4",96,0)
 ;
"RTN","MAGJUTL4",97,0)
BODPART(CPTIEN,DLM) ; return DLM-delimited list of body part values for this CPT
"RTN","MAGJUTL4",98,0)
 I +$G(CPTIEN)
"RTN","MAGJUTL4",99,0)
 E  Q ""
"RTN","MAGJUTL4",100,0)
 N LIST,CPTGLB S LIST=""
"RTN","MAGJUTL4",101,0)
 S DLM=$E($G(DLM))
"RTN","MAGJUTL4",102,0)
 I DLM="" S DLM="^"
"RTN","MAGJUTL4",103,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",104,0)
 S NOD=0
"RTN","MAGJUTL4",105,0)
 F  S NOD=$O(@CPTGLB@(CPTIEN,1,NOD)) Q:'NOD  S X=$P(^(NOD,0),U) I X]"" S LIST=LIST_DLM_X
"RTN","MAGJUTL4",106,0)
 Q:$Q $E(LIST,2,999)  Q
"RTN","MAGJUTL4",107,0)
 ;
"RTN","MAGJUTL4",108,0)
MDLLST(CPTIEN,DLM) ; return DLM-delimited list of modality values for this CPT
"RTN","MAGJUTL4",109,0)
 I +$G(CPTIEN)
"RTN","MAGJUTL4",110,0)
 E  Q ""
"RTN","MAGJUTL4",111,0)
 N LIST,CPTGLB S LIST=""
"RTN","MAGJUTL4",112,0)
 S DLM=$E($G(DLM))
"RTN","MAGJUTL4",113,0)
 I DLM="" S DLM="^"
"RTN","MAGJUTL4",114,0)
 S CPTGLB=$NA(^MAG(2006.67))
"RTN","MAGJUTL4",115,0)
 S NOD=0
"RTN","MAGJUTL4",116,0)
 F  S NOD=$O(@CPTGLB@(CPTIEN,2,NOD)) Q:'NOD  S X=$P(^(NOD,0),U) I X]"" S LIST=LIST_DLM_X
"RTN","MAGJUTL4",117,0)
 Q:$Q $E(LIST,2,999)  Q
"RTN","MAGJUTL4",118,0)
 ;
"RTN","MAGJUTL4",119,0)
 ;***** Returns server data to display in new "Image Display" window (P101.31).
"RTN","MAGJUTL4",120,0)
 ; RPC: MAGJ MAGDATADUMP
"RTN","MAGJUTL4",121,0)
 ;
"RTN","MAGJUTL4",122,0)
 ;  DATA         REQUEST ^ PARAM1 | PARAM2
"RTN","MAGJUTL4",123,0)
 ;
"RTN","MAGJUTL4",124,0)
 ;  ..... REQUEST determines format:
"RTN","MAGJUTL4",125,0)
 ;
"RTN","MAGJUTL4",126,0)
 ;  ^01:  REQUEST           Literal string: [ CPT, FLDS, GLB ]
"RTN","MAGJUTL4",127,0)
 ;
"RTN","MAGJUTL4",128,0)
 ;  ^02:  if REQUEST="CPT":
"RTN","MAGJUTL4",129,0)
 ;
"RTN","MAGJUTL4",130,0)
 ;        |01:  PARAM1      CPT Code
"RTN","MAGJUTL4",131,0)
 ;        |02:  [PARAM2]    ""
"RTN","MAGJUTL4",132,0)
 ;
"RTN","MAGJUTL4",133,0)
 ;  ^02:  if REQUEST="FLDS" or "GLB":
"RTN","MAGJUTL4",134,0)
 ;
"RTN","MAGJUTL4",135,0)
 ;        |01:  [PARAM1]    FileMan GETS^DIQ Flags (only if REQUEST="FLDS") *OR*
"RTN","MAGJUTL4",136,0)
 ;        |02:  PARAM2      ImageIEN or Case_ID_String
"RTN","MAGJUTL4",137,0)
 ;
"RTN","MAGJUTL4",138,0)
 ;  Return Values:
"RTN","MAGJUTL4",139,0)
 ;        0:N lines to display (Internal Imaging or CPT Match data).
"RTN","MAGJUTL4",140,0)
 ;
"RTN","MAGJUTL4",141,0)
DATADUMP(MAGGRY,DATA) ;
"RTN","MAGJUTL4",142,0)
 ;
"RTN","MAGJUTL4",143,0)
 ; Initialize. <*> Do NOT change name of EP.
"RTN","MAGJUTL4",144,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR3^MAGJUTL4"
"RTN","MAGJUTL4",145,0)
 N CT,DIQUIET,IMGIEN,INVALID,PARAM1,PARAM2,REQUEST
"RTN","MAGJUTL4",146,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",147,0)
 K MAGGRY S MAGGRY=$NA(^TMP($J,"MAGJDATA")) K @MAGGRY
"RTN","MAGJUTL4",148,0)
 ;
"RTN","MAGJUTL4",149,0)
 ; Validate input.
"RTN","MAGJUTL4",150,0)
 S INVALID=0 D DDMPVLD8
"RTN","MAGJUTL4",151,0)
 ;
"RTN","MAGJUTL4",152,0)
 ; Process then Exit, REPLYing with data or error code.
"RTN","MAGJUTL4",153,0)
 I 'INVALID D
"RTN","MAGJUTL4",154,0)
 . D DDMPROCS S REPLY=CT_U_"1~ "_CT_" lines of text returned for "_DATA
"RTN","MAGJUTL4",155,0)
 E  S REPLY="0^Invalid image data request: "_""""_DATA_""""_" (ck"_INVALID_")."
"RTN","MAGJUTL4",156,0)
 M @MAGGRY=XMM K XMM
"RTN","MAGJUTL4",157,0)
 S @MAGGRY@(0)=REPLY
"RTN","MAGJUTL4",158,0)
 Q
"RTN","MAGJUTL4",159,0)
 ;
"RTN","MAGJUTL4",160,0)
 ;+++++ Process according to REQUEST. Called by DATADUMP.
"RTN","MAGJUTL4",161,0)
 ; 
"RTN","MAGJUTL4",162,0)
 ; Calls: GETS^MAGGTSYS, MAG^MAGGTSY1.
"RTN","MAGJUTL4",163,0)
 ;
"RTN","MAGJUTL4",164,0)
 ; Local array MM structures multiple calls' output for centralized processing.
"RTN","MAGJUTL4",165,0)
 ; The array is re-subscripted by converting "," to "." allowing a single MERGE
"RTN","MAGJUTL4",166,0)
 ; to the broker output global.
"RTN","MAGJUTL4",167,0)
 ;   
"RTN","MAGJUTL4",168,0)
 ;   MM(.1:.99) ... Header information.
"RTN","MAGJUTL4",169,0)
 ;   MM(1) ........ CPT (similar) match(es).
"RTN","MAGJUTL4",170,0)
 ;   MM(2) ........ CPT (BodyPart and Modality) match(es).
"RTN","MAGJUTL4",171,0)
 ;   MM(3) ........ FLDS output data.
"RTN","MAGJUTL4",172,0)
 ;   MM(4) ........ GLB output data.
"RTN","MAGJUTL4",173,0)
 ;
"RTN","MAGJUTL4",174,0)
DDMPROCS ;
"RTN","MAGJUTL4",175,0)
 ;
"RTN","MAGJUTL4",176,0)
 ; Initialize.
"RTN","MAGJUTL4",177,0)
 S REPLY="0^Retrieving imaging internal data ..."
"RTN","MAGJUTL4",178,0)
 ;
"RTN","MAGJUTL4",179,0)
 ; Process. CPT request via MAG RAD CPT MATCHING File (#2006.67).
"RTN","MAGJUTL4",180,0)
 I REQUEST="CPT" D DDMPRCPT(PARAM1)
"RTN","MAGJUTL4",181,0)
 I REQUEST="FLDS" D GETS^MAGGTSYS(.M,IMGIEN,PARAM1) M MM(3)=@M K M
"RTN","MAGJUTL4",182,0)
 I REQUEST="GLB" D MAG^MAGGTSY2(.M,IMGIEN) M MM(4)=@M K M
"RTN","MAGJUTL4",183,0)
 ;
"RTN","MAGJUTL4",184,0)
 ; Re-subscript array MM to simplify MERGE to broker output global.
"RTN","MAGJUTL4",185,0)
 S CT=0,MMX=$NA(MM(.999)) F  S MMX=$Q(@MMX) Q:MMX=""  D  S CT=CT+1
"RTN","MAGJUTL4",186,0)
 . S MXX="XMM("_$QS(MMX,1)_"."_(1000+$QS(MMX,2))_")" S @MXX=@MMX
"RTN","MAGJUTL4",187,0)
 K MM,MMX,MXX
"RTN","MAGJUTL4",188,0)
 Q
"RTN","MAGJUTL4",189,0)
 ;
"RTN","MAGJUTL4",190,0)
 ;+++++ Process a CPT request. Called by DDMPROCS.
"RTN","MAGJUTL4",191,0)
 ;
"RTN","MAGJUTL4",192,0)
 ; Calls CPT^ICPTCOD for CPT Description.
"RTN","MAGJUTL4",193,0)
 ;
"RTN","MAGJUTL4",194,0)
DDMPRCPT(CPT) ;
"RTN","MAGJUTL4",195,0)
 ;
"RTN","MAGJUTL4",196,0)
 ; Initialize.
"RTN","MAGJUTL4",197,0)
 N FN,FN1,NDX,NOD,SS
"RTN","MAGJUTL4",198,0)
 ;
"RTN","MAGJUTL4",199,0)
 ; Set section headers.
"RTN","MAGJUTL4",200,0)
 S MM(.1)="Input CPT Code ........... "_CPT_"  ("_$P($$CPT^ICPTCOD(CPT),U,3)_")."
"RTN","MAGJUTL4",201,0)
 S MM(.2)="          Body Part(s) ... "
"RTN","MAGJUTL4",202,0)
 S MM(.3)="          Modality(s) .... "
"RTN","MAGJUTL4",203,0)
 ;
"RTN","MAGJUTL4",204,0)
 ; Set primary CPT bodyPart & modality.
"RTN","MAGJUTL4",205,0)
 S FN=2006.67,FN1=2006.671,NDX=$O(^MAG(FN,"B",CPT,""))
"RTN","MAGJUTL4",206,0)
 S NOD=$NA(^MAG(FN,NDX,0)) F  S NOD=$Q(@NOD) Q:$QS(NOD,2)>NDX  I $QS(NOD,4)="B" D
"RTN","MAGJUTL4",207,0)
 . I $QS(NOD,3)=1 S MM(.2)=MM(.2)_$G(^MAG(FN1,$QS(NOD,5),0))_"; "
"RTN","MAGJUTL4",208,0)
 . I $QS(NOD,3)=2 S MM(.3)=MM(.3)_$P($G(^RAMIS(73.1,$QS(NOD,5),0)),U)_"; "
"RTN","MAGJUTL4",209,0)
 . Q
"RTN","MAGJUTL4",210,0)
 ;
"RTN","MAGJUTL4",211,0)
 ; Strip dangling concatenators.
"RTN","MAGJUTL4",212,0)
 F SS=.2,.3 S MM(SS)=$$ZRUPUNCT(MM(SS),"; ",".")
"RTN","MAGJUTL4",213,0)
 ;
"RTN","MAGJUTL4",214,0)
 ; Fetch CPTs matching on CPT.
"RTN","MAGJUTL4",215,0)
 D CPTGRP(.M,CPT_"^1") M MM(1)=@M K M
"RTN","MAGJUTL4",216,0)
 S MM(1,0)=$P(MM(1,0),"~ ",2)
"RTN","MAGJUTL4",217,0)
 S MM(1,0)=$J(+$P(MM(1,0)," "),3)_" matching CPT(s) via similar CPT:"
"RTN","MAGJUTL4",218,0)
 ;
"RTN","MAGJUTL4",219,0)
 ; Fetch CPTs matching on BodyPart & Modality.
"RTN","MAGJUTL4",220,0)
 D CPTGRP(.M,CPT_"^3") M MM(2)=@M K M
"RTN","MAGJUTL4",221,0)
 S MM(2,0)=$P(MM(2,0),"~ ",2)
"RTN","MAGJUTL4",222,0)
 S MM(2,0)=$J(+$P(MM(2,0)," "),3)_" matching CPT(s) via BODY PART and MODALITY:"
"RTN","MAGJUTL4",223,0)
 ;
"RTN","MAGJUTL4",224,0)
 ; Re-format. [Not modular -- should provide for leaving as-is.]
"RTN","MAGJUTL4",225,0)
 S MMX=$NA(MM(.99)) F  S MMX=$Q(@MMX) Q:MMX=""  I @MMX["^" S @MMX="     "_$TR(@MMX,"^"," ")
"RTN","MAGJUTL4",226,0)
 Q
"RTN","MAGJUTL4",227,0)
 ;
"RTN","MAGJUTL4",228,0)
 ;+++++ Validate. Called by DATADUMP.
"RTN","MAGJUTL4",229,0)
 ;
"RTN","MAGJUTL4",230,0)
DDMPVLD8 ;
"RTN","MAGJUTL4",231,0)
 ;
"RTN","MAGJUTL4",232,0)
 ; ... DATA string format or exit invalid (code 1).
"RTN","MAGJUTL4",233,0)
 Q:'$D(DATA) INVALID=1
"RTN","MAGJUTL4",234,0)
 Q:DATA="" INVALID=1
"RTN","MAGJUTL4",235,0)
 Q:DATA'["^"!(DATA'["|") INVALID=1
"RTN","MAGJUTL4",236,0)
 ;
"RTN","MAGJUTL4",237,0)
 ; Initialize.
"RTN","MAGJUTL4",238,0)
 N RACNI,RADFN,RADTI,RARPT S REPLY="0^Validating input parameters ..."
"RTN","MAGJUTL4",239,0)
 S REQUEST=$P(DATA,U),PARAM1=$P($P(DATA,U,2),"|"),PARAM2=$P(DATA,"|",2)
"RTN","MAGJUTL4",240,0)
 ;
"RTN","MAGJUTL4",241,0)
 ; ... DATA string's REQUEST piece or exit (invalid: code 2).
"RTN","MAGJUTL4",242,0)
 Q:"^CPT^FLDS^GLB^"'[(U_REQUEST_U) INVALID=2
"RTN","MAGJUTL4",243,0)
 ;
"RTN","MAGJUTL4",244,0)
 ; ... PARAM1 if REQUEST="CPT" or exit (invalid: code 3).
"RTN","MAGJUTL4",245,0)
 Q:REQUEST="CPT"&('$D(^MAG(2006.67,"B",+PARAM1))) INVALID=3
"RTN","MAGJUTL4",246,0)
 ;
"RTN","MAGJUTL4",247,0)
 ; ... PARAM1 if REQUEST="FLDS" or re-set to null. External call will set defaults.
"RTN","MAGJUTL4",248,0)
 ; .......... only validate format of FileMan flags.
"RTN","MAGJUTL4",249,0)
 I REQUEST="FLDS"&(PARAM1'?1U.U) S PARAM1=""
"RTN","MAGJUTL4",250,0)
 ; 
"RTN","MAGJUTL4",251,0)
 ; ... PARAM2 if REQUEST=("FLDS" or "GLB") or exit (invalid: code 4).
"RTN","MAGJUTL4",252,0)
 I REQUEST="FLDS"!(REQUEST="GLB") S IMGIEN="" D  I IMGIEN="" S INVALID=4
"RTN","MAGJUTL4",253,0)
 . ;
"RTN","MAGJUTL4",254,0)
 . ; Case 1: PARAM2 holds IMGIEN.
"RTN","MAGJUTL4",255,0)
 . I PARAM2?1N.N,$D(^MAG(2005,PARAM2)) S IMGIEN=PARAM2 Q
"RTN","MAGJUTL4",256,0)
 . ;
"RTN","MAGJUTL4",257,0)
 . ; Case 2: PARAM2 holds RARPT in piece 4, set IMGIEN via back-pointer in File #74.
"RTN","MAGJUTL4",258,0)
 . I $L(PARAM2,U)=4 S RARPT=$P(PARAM2,U,4),IMGIEN=$O(^RARPT(RARPT,2005,"B",""))
"RTN","MAGJUTL4",259,0)
 . I IMGIEN'="",$D(^MAG(2005,IMGIEN)) Q
"RTN","MAGJUTL4",260,0)
 . ;
"RTN","MAGJUTL4",261,0)
 . ; Case 3: PARAM2 holds RADFN^RADTI^RACNI in pieces 1:3.
"RTN","MAGJUTL4",262,0)
 . S RADFN=+PARAM2,RADTI=$P(PARAM2,U,2),RACNI=$P(PARAM2,U,3)
"RTN","MAGJUTL4",263,0)
 . I RADFN,RADTI,RACNI D
"RTN","MAGJUTL4",264,0)
 . . S RARPT=$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,17)
"RTN","MAGJUTL4",265,0)
 . . I RARPT'="",$D(^RARPT(RARPT,2005,"B"))>1 S IMGIEN=$O(^RARPT(RARPT,2005,"B",""))
"RTN","MAGJUTL4",266,0)
 Q
"RTN","MAGJUTL4",267,0)
 ;
"RTN","MAGJUTL4",268,0)
 ;***** Check Exam Status.
"RTN","MAGJUTL4",269,0)
 ; RPC: MAGJ RADSTATUSCHECK
"RTN","MAGJUTL4",270,0)
 ;
"RTN","MAGJUTL4",271,0)
STATCHK(MAGGRY,DATA) ;
"RTN","MAGJUTL4",272,0)
 ; This may also be accessed by subroutine call. <*> do not change name of EP
"RTN","MAGJUTL4",273,0)
 ; Exam Status check RPC and subroutine: determine if the exam has been Tech-Verified (at least).
"RTN","MAGJUTL4",274,0)
 ; Images are assumed to be verified if Exam Status is Examined, or higher status.
"RTN","MAGJUTL4",275,0)
 ;       ; Input in DATA: RADFN^RADTI^RACNI^RARPT
"RTN","MAGJUTL4",276,0)
 ;   Input is either RADFN, RADTI, and RACNI; or, RARPT only may be input in piece 4
"RTN","MAGJUTL4",277,0)
 ;   Return: Code^Text
"RTN","MAGJUTL4",278,0)
 ;    0 = Problem, or exam was cancelled
"RTN","MAGJUTL4",279,0)
 ;    1 = Not yet verified
"RTN","MAGJUTL4",280,0)
 ;    2 = Tech Verified
"RTN","MAGJUTL4",281,0)
 ;    3 = Radiologist Verified
"RTN","MAGJUTL4",282,0)
 ;    4 = User is a Radiology professional--always allow access
"RTN","MAGJUTL4",283,0)
 ;
"RTN","MAGJUTL4",284,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR3^MAGJUTL4"
"RTN","MAGJUTL4",285,0)
 N REPLY,STATUS,ORDER,VCAT,STOUT
"RTN","MAGJUTL4",286,0)
 N DIQUIET,RARPT,RADFN,RADTI,RACNI
"RTN","MAGJUTL4",287,0)
 S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",288,0)
 S RADFN=$P(DATA,U),RADTI=$P(DATA,U,2),RACNI=$P(DATA,U,3),RARPT=$P(DATA,U,4)
"RTN","MAGJUTL4",289,0)
 S STOUT="",REPLY="0^Getting image verification status."
"RTN","MAGJUTL4",290,0)
 I RADFN,RADTI,RACNI
"RTN","MAGJUTL4",291,0)
 E  I RARPT D RPT2DPT(RARPT,.X) I X S RADFN=+X,RADTI=$P(X,U,2),RACNI=$P(X,U,3) I RADFN,RADTI,RACNI
"RTN","MAGJUTL4",292,0)
 E  S REPLY="0^Image Verification Status request contains invalid case pointer ("_DATA_")" G STATCHKZ
"RTN","MAGJUTL4",293,0)
 S STATUS=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,3)
"RTN","MAGJUTL4",294,0)
 I STATUS="" S REPLY="0^Image Verification Status request error--no Exam Status is defined for ("_DATA_")" G STATCHKZ
"RTN","MAGJUTL4",295,0)
 S VCAT=$P(^RA(72,STATUS,0),U,9),ORDER=$P(^(0),U,3)
"RTN","MAGJUTL4",296,0)
 I VCAT]"" D  G STATCHK2:STOUT
"RTN","MAGJUTL4",297,0)
 . I "EDT"[VCAT S STOUT=$S(VCAT="E":2,1:3) ; Examined or Interpreted
"RTN","MAGJUTL4",298,0)
 . E  I VCAT="W" S STOUT=1 ; Not yet Verified
"RTN","MAGJUTL4",299,0)
 I ORDER=9 S STOUT=3  ; Completed exam
"RTN","MAGJUTL4",300,0)
 E  I ORDER=0 S REPLY="0^Exam Cancelled"
"RTN","MAGJUTL4",301,0)
 E  I ORDER=1 S STOUT=1  ; Waiting for exam
"RTN","MAGJUTL4",302,0)
STATCHK2 ;
"RTN","MAGJUTL4",303,0)
 I STOUT<2 D
"RTN","MAGJUTL4",304,0)
 . F X="S","R","T" I $D(^VA(200,"ARC",X,DUZ)) S STOUT=4 Q  ; Radiologist or Tech -- OK to access
"RTN","MAGJUTL4",305,0)
STATCHKZ ;
"RTN","MAGJUTL4",306,0)
 I STOUT S REPLY=STOUT_U_$S(STOUT=1:"Images not yet verified",STOUT=2:"Images verified by Technologist",STOUT=3:"Images interpreted by Radiologist",STOUT=4:"Radiology professional--OK to view images.",1:"")
"RTN","MAGJUTL4",307,0)
 S MAGGRY=REPLY
"RTN","MAGJUTL4",308,0)
 Q
"RTN","MAGJUTL4",309,0)
 ;
"RTN","MAGJUTL4",310,0)
 ;***** User set/clear flag to show/not show remote exams only.
"RTN","MAGJUTL4",311,0)
 ; RPC: MAGJ REMOTESCREEN
"RTN","MAGJUTL4",312,0)
 ;
"RTN","MAGJUTL4",313,0)
REMSCRN(MAGGRY,DATA) ;
"RTN","MAGJUTL4",314,0)
 ; Input in DATA: 1/0 1=show remote only; 0=show all exams
"RTN","MAGJUTL4",315,0)
 ; Return: Reply^Code~msg
"RTN","MAGJUTL4",316,0)
 ;    Reply -- 0=Problem; 1=Success
"RTN","MAGJUTL4",317,0)
 ;    Code -- 4=Error; 1=ok
"RTN","MAGJUTL4",318,0)
 ;    msg -- display text if error
"RTN","MAGJUTL4",319,0)
 ;
"RTN","MAGJUTL4",320,0)
 N $ETRAP,$ESTACK S $ETRAP="G ERR3^MAGJUTL4"
"RTN","MAGJUTL4",321,0)
 N REPLY
"RTN","MAGJUTL4",322,0)
 N DIQUIET S DIQUIET=1 D DT^DICRW
"RTN","MAGJUTL4",323,0)
 I $D(DATA),(DATA=0!(DATA=1))
"RTN","MAGJUTL4",324,0)
 E  S REPLY="0^4~REMOTESCREEN request has invalid parameter ("_$G(DATA)_")" G REMSCRNZ
"RTN","MAGJUTL4",325,0)
 S MAGJOB("REMOTESCREEN")=DATA,REPLY="1^1~"_DATA
"RTN","MAGJUTL4",326,0)
REMSCRNZ ;
"RTN","MAGJUTL4",327,0)
 S MAGGRY=REPLY
"RTN","MAGJUTL4",328,0)
 Q
"RTN","MAGJUTL4",329,0)
 ;
"RTN","MAGJUTL4",330,0)
RPT2DPT(RARPT,RET) ; Input RARPT. Return RET containing exam ss values for ^RADPT
"RTN","MAGJUTL4",331,0)
 ;
"RTN","MAGJUTL4",332,0)
 N DFN,DTI,CNI S (DFN,DTI,CNI)=""
"RTN","MAGJUTL4",333,0)
 I RARPT?1N.N,$D(^RARPT(RARPT)) S X=$G(^(RARPT,0)) I X]"" D
"RTN","MAGJUTL4",334,0)
 . S X=$P(X,U)
"RTN","MAGJUTL4",335,0)
 . S X=$O(^RADPT("ADC",X,0)) I X S DFN=X,DTI=$O(^(X,0)),CNI=$O(^(DTI,0))
"RTN","MAGJUTL4",336,0)
 . S RET=DFN_U_DTI_U_CNI
"RTN","MAGJUTL4",337,0)
 E  S RET=""
"RTN","MAGJUTL4",338,0)
 Q
"RTN","MAGJUTL4",339,0)
 ;
"RTN","MAGJUTL4",340,0)
ERR1 N ERR S ERR=$$EC^%ZOSV S @MAGGRY@(0)="0^4~"_ERR G ERR
"RTN","MAGJUTL4",341,0)
ERR3 N ERR S ERR=$$EC^%ZOSV S MAGGRY="0^4~"_ERR
"RTN","MAGJUTL4",342,0)
ERR D @^%ZOSF("ERRTN")
"RTN","MAGJUTL4",343,0)
 Q:$Q 1  Q
"RTN","MAGJUTL4",344,0)
 ;
"RTN","MAGJUTL4",345,0)
END Q  ;
"RTN","MAGJUTL4",346,0)
 ;
"RTN","MAGJUTL4",347,0)
 ;***** Identify if mammogram via CPT Code. Called by OPENCASE^MAGJEX1.
"RTN","MAGJUTL4",348,0)
 ;
"RTN","MAGJUTL4",349,0)
 ; Calls ZRUMDLST, $$CPT^ICPTCOD (which may return "-1^NO SUCH ENTRY").
"RTN","MAGJUTL4",350,0)
 ;
"RTN","MAGJUTL4",351,0)
 ; CPT     CPT Code
"RTN","MAGJUTL4",352,0)
 ;
"RTN","MAGJUTL4",353,0)
 ; Return Value:
"RTN","MAGJUTL4",354,0)
 ;      0  NOT a mammogram.
"RTN","MAGJUTL4",355,0)
 ;      1  IS  a mammogram.
"RTN","MAGJUTL4",356,0)
 ;
"RTN","MAGJUTL4",357,0)
ZRUMAMMO(CPT) ;
"RTN","MAGJUTL4",358,0)
 N CPTCATIEN,YN S YN=0
"RTN","MAGJUTL4",359,0)
 S CPTCATIEN=$P($$CPT^ICPTCOD(CPT),U,4) Q:CPTCATIEN="" YN Q:+CPTCATIEN<0 YN
"RTN","MAGJUTL4",360,0)
 ;
"RTN","MAGJUTL4",361,0)
 ; Criterion (1A): CPT Category (cf., ^DIC(81.1,240,0)=BREAST MAMMOGRAPHY^s^4^77051^77059^C).
"RTN","MAGJUTL4",362,0)
 I $P(^DIC(81.1,CPTCATIEN,0),U)="BREAST MAMMOGRAPHY" S YN=1 D
"RTN","MAGJUTL4",363,0)
 . ;
"RTN","MAGJUTL4",364,0)
 . ; Criterion (1B): CPT "Modality" (using MAGS array's modalities via ZRUMDLST).
"RTN","MAGJUTL4",365,0)
 . N MODALITY
"RTN","MAGJUTL4",366,0)
 . D ZRUMDLST(.MAGS) I '$D(MAGMDLST) S YN=1 Q
"RTN","MAGJUTL4",367,0)
 . F MODALITY="MR","OCT","US" S:$D(MAGMDLST(MODALITY)) YN=0
"RTN","MAGJUTL4",368,0)
 ;
"RTN","MAGJUTL4",369,0)
 ; Criterion (2) -- Deprecated mammography CPTs.
"RTN","MAGJUTL4",370,0)
 E  D
"RTN","MAGJUTL4",371,0)
 . N CPTMAM F CPTMAM=76082,76083,76085:1:76092 I CPT=CPTMAM S YN=1 Q
"RTN","MAGJUTL4",372,0)
 Q YN
"RTN","MAGJUTL4",373,0)
 ;
"RTN","MAGJUTL4",374,0)
 ;+++++ Array any unique MAGS' piece 3 modalities. Called by ZRUMAMMO.
"RTN","MAGJUTL4",375,0)
 ;
"RTN","MAGJUTL4",376,0)
 ; .MAGS      Array of individual image data (cf. JBFETCH^MAGJUTL2).
"RTN","MAGJUTL4",377,0)
 ; 
"RTN","MAGJUTL4",378,0)
 ; Sets array MAGMDLST(modality).
"RTN","MAGJUTL4",379,0)
 ; 
"RTN","MAGJUTL4",380,0)
ZRUMDLST(MAGS) ;
"RTN","MAGJUTL4",381,0)
 K MAGMDLST
"RTN","MAGJUTL4",382,0)
 I $D(MAGS),MAGS N MD0,X F X=1:1:MAGS D
"RTN","MAGJUTL4",383,0)
 . S MD0=$P(MAGS(X),U,3) I MD0'="",'$D(MAGMDLST(MD0)) S MAGMDLST(MD0)=""
"RTN","MAGJUTL4",384,0)
 Q
"RTN","MAGJUTL4",385,0)
 ;
"RTN","MAGJUTL4",386,0)
 ;+++++ Strip IN's trailing elements & append REPL.
"RTN","MAGJUTL4",387,0)
 ;
"RTN","MAGJUTL4",388,0)
 ; IN       String to operate on.
"RTN","MAGJUTL4",389,0)
 ; REPL     String to place at right end.
"RTN","MAGJUTL4",390,0)
 ; STRIP    String to remove from right end.
"RTN","MAGJUTL4",391,0)
 ;
"RTN","MAGJUTL4",392,0)
 ; Returns:
"RTN","MAGJUTL4",393,0)
 ;      IN_REPL
"RTN","MAGJUTL4",394,0)
 ;
"RTN","MAGJUTL4",395,0)
ZRUPUNCT(IN,STRIP,REPL) ;
"RTN","MAGJUTL4",396,0)
 Q:'$D(IN)!('$D(STRIP))!('$D(REPL))  F  Q:STRIP'[$E(IN,$L(IN))  S IN=$E(IN,1,$L(IN)-1)
"RTN","MAGJUTL4",397,0)
 Q IN_REPL
"RTN","MAGJUTL4",398,0)
 ;
"RTN","MAGJUTL4",399,0)
 ; ***** Query to modify existing annotations. Called by OPENCASE^MAGJEX1
"RTN","MAGJUTL4",400,0)
 ; 
"RTN","MAGJUTL4",401,0)
 ; DUZ      Kernel internal user identifier.
"RTN","MAGJUTL4",402,0)
 ; RACNI    RAD/NUC Med Patient File (#70) Case Number Index
"RTN","MAGJUTL4",403,0)
 ; RADFN    "                              Patient DFN
"RTN","MAGJUTL4",404,0)
 ; RADTI    "                              Study Internal Date
"RTN","MAGJUTL4",405,0)
 ; 
"RTN","MAGJUTL4",406,0)
 ; Return Value:
"RTN","MAGJUTL4",407,0)
 ;      0   NOT authorized to annotate.
"RTN","MAGJUTL4",408,0)
 ;      1   AUTHORIZED     "".
"RTN","MAGJUTL4",409,0)
 ; 
"RTN","MAGJUTL4",410,0)
ZRUREVAN(RADFN,RADTI,RACNI) ;
"RTN","MAGJUTL4",411,0)
 ;
"RTN","MAGJUTL4",412,0)
 ; Initialize. Exit if RAxxx pointers fail.
"RTN","MAGJUTL4",413,0)
 N EXAMSTAT,EXMSTSPT,RADNOD,RIST1,RIST2,YN
"RTN","MAGJUTL4",414,0)
 S YN=0,RADNOD=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","MAGJUTL4",415,0)
 Q:RADNOD="" YN
"RTN","MAGJUTL4",416,0)
 ;
"RTN","MAGJUTL4",417,0)
 ; Collect data about ...
"RTN","MAGJUTL4",418,0)
 S RIST1=$P(RADNOD,U,12) ; .. PRIMARY INTERPRETING RESIDENT [12P:200]
"RTN","MAGJUTL4",419,0)
 S RIST2=$P(RADNOD,U,15) ; .. PRIMARY INTERPRETING STAFF [15P:200]
"RTN","MAGJUTL4",420,0)
 S EXMSTSPT=$P(RADNOD,U,3) ;. EXAM STATUS [3P:72]
"RTN","MAGJUTL4",421,0)
 S EXAMSTAT=$P($G(^RA(72,EXMSTSPT,0)),U,9) ; VISTARAD CATEGORY (#9)
"RTN","MAGJUTL4",422,0)
 ;
"RTN","MAGJUTL4",423,0)
 I EXAMSTAT="D"!(EXAMSTAT="T") D
"RTN","MAGJUTL4",424,0)
 . ;
"RTN","MAGJUTL4",425,0)
 . ; 'Yes' if CurrentUser=Primary Interpreting Radiologist.
"RTN","MAGJUTL4",426,0)
 . I DUZ=RIST1!(DUZ=RIST2) S YN=1
"RTN","MAGJUTL4",427,0)
 . E  I RIST1'="",$D(^VA(200,"ARC","S",+DUZ)) S YN=1 ; 'Yes' if (Primary Interpreting Radiologist is Resident) & (CurrentUser is Staff)
"RTN","MAGJUTL4",428,0)
 . Q
"RTN","MAGJUTL4",429,0)
 Q YN
"RTN","MAGJUTL5")
0^12^B32996102
"RTN","MAGJUTL5",1,0)
MAGJUTL5 ;WOIFO/JHC - VistARad RPCs ; [ 09/01/2009 12:51 ]
"RTN","MAGJUTL5",2,0)
 ;;3.0;IMAGING;**65,76,101**;Nov 06, 2009;Build 50
"RTN","MAGJUTL5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGJUTL5",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL5",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGJUTL5",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGJUTL5",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGJUTL5",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGJUTL5",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGJUTL5",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGJUTL5",11,0)
 ;; |                                                               |
"RTN","MAGJUTL5",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGJUTL5",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGJUTL5",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGJUTL5",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGJUTL5",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGJUTL5",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGJUTL5",18,0)
 ;;
"RTN","MAGJUTL5",19,0)
 Q
"RTN","MAGJUTL5",20,0)
 ; adapted from MAGGTU4
"RTN","MAGJUTL5",21,0)
GETVER(SVRVER,SVRTVER,ALLOWCL) ;
"RTN","MAGJUTL5",22,0)
 ; The Server Version SVRVER is hardcoded to match the Client
"RTN","MAGJUTL5",23,0)
 ; so this Routine must be edited/distributed with a new Client
"RTN","MAGJUTL5",24,0)
 ; released Client will have the T version that the server expects
"RTN","MAGJUTL5",25,0)
 ;
"RTN","MAGJUTL5",26,0)
 S SVRVER="3.0.101",SVRTVER=10  ; <*> Edit this line for each patch/T-version
"RTN","MAGJUTL5",27,0)
 ;
"RTN","MAGJUTL5",28,0)
 S ALLOWCL="|3.0.76|"  ; back-compatible with P76 client
"RTN","MAGJUTL5",29,0)
 Q
"RTN","MAGJUTL5",30,0)
 ;
"RTN","MAGJUTL5",31,0)
CHKVER(MAGRY,CLVER,PLC,SVERSION) ;
"RTN","MAGJUTL5",32,0)
 ; Input CLVER is the version of the Client
"RTN","MAGJUTL5",33,0)
 ;    format: Major.Minor.Patch.Build# (Build #=T-ver) eg 3.0.18.132
"RTN","MAGJUTL5",34,0)
 ; 3 possible return codes in MAGRY:
"RTN","MAGJUTL5",35,0)
 ;   2^n~msg : Client displays a message and continues
"RTN","MAGJUTL5",36,0)
 ;   1^1~msg : Client continues without displaying a message
"RTN","MAGJUTL5",37,0)
 ;   0^n~msg : Client displays a message then Aborts
"RTN","MAGJUTL5",38,0)
 ; PLC returns 2006.1 pointer
"RTN","MAGJUTL5",39,0)
 ;
"RTN","MAGJUTL5",40,0)
 S CLVER=$G(CLVER),PLC="",MAGRY=""
"RTN","MAGJUTL5",41,0)
 N SV,ST,CV,CT,CP,ALLOWV,TESTFLAG,SVSTAT
"RTN","MAGJUTL5",42,0)
 ; SVERSION = Full Server Version -> (3.0.18.132 or 3.0.18); test has 4, release has 3 parts
"RTN","MAGJUTL5",43,0)
 ; SV = Server Version -> (3.0.18); only 1st 3 parts
"RTN","MAGJUTL5",44,0)
 ; ST = Server T Version -> defined to always match client part-4
"RTN","MAGJUTL5",45,0)
 ; CV = Client Version, w/out build #
"RTN","MAGJUTL5",46,0)
 ; CT = Client T Version alone
"RTN","MAGJUTL5",47,0)
 ; CP = Client Patch alone
"RTN","MAGJUTL5",48,0)
 ; ALLOWV = Hard coded string of allowed clients for this KIDS.
"RTN","MAGJUTL5",49,0)
 ; TESTFLAG = 1/0  -- 1=Test vs of server code; 0=Release vs
"RTN","MAGJUTL5",50,0)
 ;Below is placeholder for future enhancement:
"RTN","MAGJUTL5",51,0)
 ;I $P(CLVER,"|",2)="RIV" D  Q
"RTN","MAGJUTL5",52,0)
 ;. S MAGJOB("RIV")=1
"RTN","MAGJUTL5",53,0)
 ;. ; Allowing |RIV clients always
"RTN","MAGJUTL5",54,0)
 ;. S MAGRY="1^1~Allowing Remote Image Connection"
"RTN","MAGJUTL5",55,0)
 ;
"RTN","MAGJUTL5",56,0)
 I $G(DUZ(2)) S PLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGJUTL5",57,0)
 ;  Quit if we don't have a valid DUZ(2) or valid PLACE: ^MAG(2006.1,PLC)
"RTN","MAGJUTL5",58,0)
 I 'PLC S MAGRY="0^4~Error verifying Imaging Site (Place) -- Contact Imaging support." Q
"RTN","MAGJUTL5",59,0)
 ;
"RTN","MAGJUTL5",60,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGJUTL5",61,0)
 S CLVER=$P(CLVER,"|")
"RTN","MAGJUTL5",62,0)
 S CV=$P(CLVER,".",1,3),CT=+$P(CLVER,".",4),CP=+$P(CLVER,".",3)
"RTN","MAGJUTL5",63,0)
 ;
"RTN","MAGJUTL5",64,0)
 D VERSTAT(.SVSTAT,SV)
"RTN","MAGJUTL5",65,0)
 I 'SVSTAT S MAGRY(0)=SVSTAT Q  ; KIDS status for this version indeterminate
"RTN","MAGJUTL5",66,0)
 S TESTFLAG=(+SVSTAT=1)
"RTN","MAGJUTL5",67,0)
 S SVERSION=SV
"RTN","MAGJUTL5",68,0)
 I TESTFLAG S SVERSION=SV_"."_ST
"RTN","MAGJUTL5",69,0)
 ; Check Version differences:
"RTN","MAGJUTL5",70,0)
 I (CV'=SV) D  Q
"RTN","MAGJUTL5",71,0)
 . I '(ALLOWV[("|"_CV_"|")) D  Q
"RTN","MAGJUTL5",72,0)
 . . S MAGRY="0^4~VistARad Workstation software version "_CLVER_" is not compatible with the VistA server version "_SVERSION_".  Contact Imaging support. (CNA)"
"RTN","MAGJUTL5",73,0)
 . ; Warn the Client, allow to continue
"RTN","MAGJUTL5",74,0)
 . I TESTFLAG S MAGRY="2^3~VistARad Workstation software version "_CLVER_" is running with VistA server TEST Version "_SVERSION_" --  VistARad will Continue, but contact Imaging Support if problems occur. (Pdif)"
"RTN","MAGJUTL5",75,0)
 . E  S MAGRY="2^3~VistARad Workstation software version "_CLVER_" is running with VistA server Version "_SVERSION_" --  VistARad will Continue, but contact Imaging Support to install Released Version. (RPdif)"
"RTN","MAGJUTL5",76,0)
 . Q
"RTN","MAGJUTL5",77,0)
 ; Versions are the Same: If T versions are not, warn the Client if needed.
"RTN","MAGJUTL5",78,0)
 ; Released Client (of any version) will have the T version that the server
"RTN","MAGJUTL5",79,0)
 ; expects, and no warning will be displayed.
"RTN","MAGJUTL5",80,0)
 I CT,(CT'=ST) D  Q
"RTN","MAGJUTL5",81,0)
 . I TESTFLAG S MAGRY="2^3~VistARad Workstation software vs. "_CLVER_" is running with VistA server TEST vs. "_SVERSION_" --  VistARad will Continue, but contact Imaging Support " D
"RTN","MAGJUTL5",82,0)
 . . I CT<ST S MAGRY=MAGRY_"to install updated client software.  (Tdif-1)"
"RTN","MAGJUTL5",83,0)
 . . E  S MAGRY=MAGRY_"to update the Server software.  (Tdif-2)"
"RTN","MAGJUTL5",84,0)
 . E  S MAGRY="2^3~VistARad Workstation software vs. "_CLVER_" is running with VistA server vs. "_SVERSION_" --  VistARad will Continue, but contact Imaging Support to install Released Version. (RVdif)"
"RTN","MAGJUTL5",85,0)
 . Q
"RTN","MAGJUTL5",86,0)
 ; Client and Server Versions are the same
"RTN","MAGJUTL5",87,0)
 S MAGRY="1^1~Version Check OK. Server: "_SVERSION_" Client: "_CLVER Q
"RTN","MAGJUTL5",88,0)
 Q
"RTN","MAGJUTL5",89,0)
 ;
"RTN","MAGJUTL5",90,0)
P32STOP(RET) ; logic to indicate P32 should no longer function, once the RELEASED P76 is installed
"RTN","MAGJUTL5",91,0)
 ; This is invoked from magjutl3, P76 version, if a P32 client is launched
"RTN","MAGJUTL5",92,0)
 ; RET=1/0 ^ text -- 0 = OK to run P32; 1 = Not OK
"RTN","MAGJUTL5",93,0)
 N SV,ST,ALLOWV,SVSTAT,RELEASED
"RTN","MAGJUTL5",94,0)
 S RET="0^P32 supported" ; init return to allow p32 to function
"RTN","MAGJUTL5",95,0)
 D GETVER(.SV,.ST,.ALLOWV)
"RTN","MAGJUTL5",96,0)
 D VERSTAT(.SVSTAT,SV)
"RTN","MAGJUTL5",97,0)
 I 'SVSTAT S RET="0^Error, but on side of caution, allow running." Q  ; KIDS status for this version indeterminate
"RTN","MAGJUTL5",98,0)
 S RELEASED=(+SVSTAT=2)
"RTN","MAGJUTL5",99,0)
 I RELEASED!(SV'="3.0.76") S RET="1^P32 support over"  ; don't allow P32 to function
"RTN","MAGJUTL5",100,0)
 Q
"RTN","MAGJUTL5",101,0)
 ;
"RTN","MAGJUTL5",102,0)
VERSTAT(MAGRY,MAGVER) ;
"RTN","MAGJUTL5",103,0)
 ; Returns the status of an Imaging Version
"RTN","MAGJUTL5",104,0)
 ; Input:
"RTN","MAGJUTL5",105,0)
 ;   MAGVER - Version number in format  MAG*3.0*59 or 3.0.59
"RTN","MAGJUTL5",106,0)
 ; Return: MAGRY = 0/1/2 -- see below; 0: abort; else, OK to proceed
"RTN","MAGJUTL5",107,0)
 ;
"RTN","MAGJUTL5",108,0)
 N VERI,TVER,MAGERR
"RTN","MAGJUTL5",109,0)
 I +MAGVER S MAGVER="MAG*"_$P(MAGVER,".",1,2)_"*"_$P(MAGVER,".",3)
"RTN","MAGJUTL5",110,0)
 S VERI=$$FIND1^DIC(9.6,"","O",MAGVER,"","","MAGERR")
"RTN","MAGJUTL5",111,0)
 I 'VERI S MAGRY="0^4~There is No KIDs Install record."
"RTN","MAGJUTL5",112,0)
 E  D
"RTN","MAGJUTL5",113,0)
 . S TVER=$$GET1^DIQ(9.6,VERI_",","ALPHA/BETA TESTING")
"RTN","MAGJUTL5",114,0)
 . I TVER="YES" S MAGRY="1^Alpha/Beta Version"
"RTN","MAGJUTL5",115,0)
 . E  I TVER="NO" S MAGRY="2^Released Version"
"RTN","MAGJUTL5",116,0)
 . E  S MAGRY="0^4~KIDs Install Status is unknown--contact Customer Support."
"RTN","MAGJUTL5",117,0)
 Q       ;
"RTN","MAGJUTL5",118,0)
END ;
"SEC","^DIC",2006.63,2006.63,0,"AUDIT")
@
"SEC","^DIC",2006.63,2006.63,0,"DD")
@
"SEC","^DIC",2006.63,2006.63,0,"DEL")
@
"SEC","^DIC",2006.63,2006.63,0,"LAYGO")
@
"SEC","^DIC",2006.63,2006.63,0,"RD")
@
"SEC","^DIC",2006.63,2006.63,0,"WR")
@
"SEC","^DIC",2006.631,2006.631,0,"AUDIT")
@
"SEC","^DIC",2006.631,2006.631,0,"DD")
@
"SEC","^DIC",2006.631,2006.631,0,"DEL")
@
"SEC","^DIC",2006.631,2006.631,0,"RD")
@
"SEC","^DIC",2006.631,2006.631,0,"WR")
@
"SEC","^DIC",2006.634,2006.634,0,"AUDIT")
@
"SEC","^DIC",2006.634,2006.634,0,"DD")
@
"SEC","^DIC",2006.634,2006.634,0,"DEL")
@
"SEC","^DIC",2006.634,2006.634,0,"LAYGO")
@
"SEC","^DIC",2006.634,2006.634,0,"RD")
@
"SEC","^DIC",2006.634,2006.634,0,"WR")
@
"VER")
8.0^22.0
"^DD",2006.63,2006.63,0)
FIELD^^7^8
"^DD",2006.63,2006.63,0,"DDA")
N
"^DD",2006.63,2006.63,0,"DT")
3000107
"^DD",2006.63,2006.63,0,"IX","ASRTREV",2006.63,6)

"^DD",2006.63,2006.63,0,"IX","B",2006.63,.01)

"^DD",2006.63,2006.63,0,"NM","MAG RAD LIST DATA ELEMENTS")

"^DD",2006.63,2006.63,0,"PT",2006.6311,.01)

"^DD",2006.63,2006.63,0,"PT",2006.6312,.01)

"^DD",2006.63,2006.63,0,"VRPK")
MAG
"^DD",2006.63,2006.63,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.63,2006.63,.01,1,0)
^.1
"^DD",2006.63,2006.63,.01,1,1,0)
2006.63^B
"^DD",2006.63,2006.63,.01,1,1,1)
S ^MAG(2006.63,"B",$E(X,1,30),DA)=""
"^DD",2006.63,2006.63,.01,1,1,2)
K ^MAG(2006.63,"B",$E(X,1,30),DA)
"^DD",2006.63,2006.63,.01,3)
Answer must be 3-30 characters in length.
"^DD",2006.63,2006.63,.01,"DT")
3011106
"^DD",2006.63,2006.63,1,0)
ABBREVIATION^RFI^^0;2^K:$L(X)>15!($L(X)<1)!'('(X["~"!(X["|"))) X
"^DD",2006.63,2006.63,1,3)
Answer must be 1-15 characters in length; no tilde or pipe (~, |).
"^DD",2006.63,2006.63,1,"DT")
3000107
"^DD",2006.63,2006.63,2,0)
COLUMN HEADER^F^^0;3^K:$L(X)>15!($L(X)<1)!'('(X["~"!(X["|"))) X
"^DD",2006.63,2006.63,2,3)
Answer must be 1-15 characters in length; no tilde or pipe (~, |).
"^DD",2006.63,2006.63,2,"DT")
3000107
"^DD",2006.63,2006.63,3,0)
Sort Only?^SI^1:Yes;0:No;^0;4^Q
"^DD",2006.63,2006.63,3,3)
Enter YES only if this field should be used solely for sorting, vs displaying its value.
"^DD",2006.63,2006.63,3,"DT")
2990322
"^DD",2006.63,2006.63,4,0)
Internal Use Only?^SI^1:Yes;^0;5^Q
"^DD",2006.63,2006.63,4,"DT")
2990322
"^DD",2006.63,2006.63,5,0)
RELATIVE ORDER^RNJ4,1I^^0;6^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",2006.63,2006.63,5,1,0)
^.1^^0
"^DD",2006.63,2006.63,5,3)
Type a Number between 0 and 99, 1 Decimal Digit
"^DD",2006.63,2006.63,5,21,0)
^^2^2^2990304^
"^DD",2006.63,2006.63,5,21,1,0)
Output columns will always appear in a fixed relative order according to
"^DD",2006.63,2006.63,5,21,2,0)
the value of this field.
"^DD",2006.63,2006.63,5,"DT")
2990322
"^DD",2006.63,2006.63,6,0)
REVERSABLE SORT?^S^1:YES;^0;7^Q
"^DD",2006.63,2006.63,6,1,0)
^.1
"^DD",2006.63,2006.63,6,1,1,0)
2006.63^ASRTREV
"^DD",2006.63,2006.63,6,1,1,1)
S ^MAG(2006.63,"ASRTREV",$E(X,1,30),DA)=""
"^DD",2006.63,2006.63,6,1,1,2)
K ^MAG(2006.63,"ASRTREV",$E(X,1,30),DA)
"^DD",2006.63,2006.63,6,1,1,"DT")
2990507
"^DD",2006.63,2006.63,6,3)
To enable reverse sort by this field, enter YES (Date & Numeric valued fields only!)
"^DD",2006.63,2006.63,6,"DT")
2990507
"^DD",2006.63,2006.63,7,0)
COLUMN TYPE^S^S1:Date/Time;S2:Numeric;S3:Day/Case #;^0;8^Q
"^DD",2006.63,2006.63,7,3)
Answer this ONLY if the data for this field fits a defined Type.
"^DD",2006.63,2006.63,7,21,0)
^^5^5^3000107^
"^DD",2006.63,2006.63,7,21,1,0)
This indicates to the VistsRad Client that the data for this column
"^DD",2006.63,2006.63,7,21,2,0)
requires special handling for either the Sort, or other defined needs.  No
"^DD",2006.63,2006.63,7,21,3,0)
answer, by default, says treat column data as free-text data.  Defined
"^DD",2006.63,2006.63,7,21,4,0)
needs are: Indicate Sort requirements (for Date & Numeric values)
"^DD",2006.63,2006.63,7,21,5,0)
           Indicate Day/Case Number (used for key in Client App)
"^DD",2006.63,2006.63,7,"DT")
3000107
"^DD",2006.631,2006.631,0)
FIELD^^2^9
"^DD",2006.631,2006.631,0,"DDA")
N
"^DD",2006.631,2006.631,0,"DT")
3041021
"^DD",2006.631,2006.631,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",2006.631,2006.631,0,"IX","B",2006.631,.01)

"^DD",2006.631,2006.631,0,"IX","C",2006.631,.02)

"^DD",2006.631,2006.631,0,"NM","MAG RAD LISTS DEFINITION")

"^DD",2006.631,2006.631,0,"VRPK")
MAG
"^DD",2006.631,2006.631,.01,0)
NAME^RF^^0;1^K:$L(X)>75!($L(X)<3)!'(X'?1P.E) X
"^DD",2006.631,2006.631,.01,1,0)
^.1
"^DD",2006.631,2006.631,.01,1,1,0)
2006.631^B
"^DD",2006.631,2006.631,.01,1,1,1)
S ^MAG(2006.631,"B",$E(X,1,30),DA)=""
"^DD",2006.631,2006.631,.01,1,1,2)
K ^MAG(2006.631,"B",$E(X,1,30),DA)
"^DD",2006.631,2006.631,.01,3)
Answer must be 3-75 characters in length.
"^DD",2006.631,2006.631,.01,"DT")
2990712
"^DD",2006.631,2006.631,.02,0)
LIST #^RNJ3,0XI^^0;2^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N)!($D(^MAG(2006.631,"C",X))) X
"^DD",2006.631,2006.631,.02,1,0)
^.1^^-1
"^DD",2006.631,2006.631,.02,1,1,0)
2006.631^C
"^DD",2006.631,2006.631,.02,1,1,1)
S ^MAG(2006.631,"C",$E(X,1,30),DA)=""
"^DD",2006.631,2006.631,.02,1,1,2)
K ^MAG(2006.631,"C",$E(X,1,30),DA)
"^DD",2006.631,2006.631,.02,1,1,"DT")
2990226
"^DD",2006.631,2006.631,.02,3)
Type an Integer between 1 and 999; the value must be unique.
"^DD",2006.631,2006.631,.02,4)
N T,L,C,Q S C=2,L(1)="Used values are:",(L(1,"F"),L(2,"F"))="?10",(L(2),T)="" F  S T=$O(^MAG(2006.631,"C",T)),Q=('T!(T>9990)) S:'Q&($L(L(C))>40) C=C+1,L(C)="",L(C,"F")="!?26" S:'Q L(C)=L(C)_"  "_T I Q D EN^DDIOL(.L) Q
"^DD",2006.631,2006.631,.02,21,0)
^^3^3^2990607^^^^
"^DD",2006.631,2006.631,.02,21,1,0)
Enter a number to be used to uniquely identify this list; this number will
"^DD",2006.631,2006.631,.02,21,2,0)
be passed as a parameter from the workstation to cause this list to be
"^DD",2006.631,2006.631,.02,21,3,0)
generated.
"^DD",2006.631,2006.631,.02,"DT")
2990607
"^DD",2006.631,2006.631,.03,0)
LIST TYPE^R*S^U:UNREAD;R:RECENT;A:ALL UNREAD & RECENT;P:PENDING;N:Newly Interpreted;H:History;^0;3^Q
"^DD",2006.631,2006.631,.03,3)
Enter the List Type for this list; enter ?? for more help.
"^DD",2006.631,2006.631,.03,12)
N and H values are for internal use only, and have no use for defining lists.
"^DD",2006.631,2006.631,.03,12.1)
S DIC("S")="I Y'=""N""&(Y'=""H"")"
"^DD",2006.631,2006.631,.03,21,0)
^.001^12^12^3050603^^^
"^DD",2006.631,2006.631,.03,21,1,0)
This determines what subset of the exams to display, based on the Exam
"^DD",2006.631,2006.631,.03,21,2,0)
Status value.  Choices are:
"^DD",2006.631,2006.631,.03,21,3,0)
 
"^DD",2006.631,2006.631,.03,21,4,0)
  U  -- UNREAD Exams only; Exam Status Category= E(xamined)
"^DD",2006.631,2006.631,.03,21,5,0)
  R  -- RECENT Exams; Status Categories D(ictated) & T(ranscribed)
"^DD",2006.631,2006.631,.03,21,6,0)
  A  -- ALL Active Exams; Categories E, D, & T
"^DD",2006.631,2006.631,.03,21,7,0)
  P  -- PENDING Exams; Category= W(aiting for Exam)
"^DD",2006.631,2006.631,.03,21,8,0)
  N  -- Newly-Interpreted; NO Category
"^DD",2006.631,2006.631,.03,21,9,0)
  H -- History List; NO Category
"^DD",2006.631,2006.631,.03,21,10,0)
 
"^DD",2006.631,2006.631,.03,21,11,0)
List Types N and H are for internal use only,
"^DD",2006.631,2006.631,.03,21,12,0)
and are not available for defining reports.
"^DD",2006.631,2006.631,.03,"DT")
3041021
"^DD",2006.631,2006.631,.04,0)
IMAGING TYPES^RS^ALL:ALL;^0;4^Q
"^DD",2006.631,2006.631,.04,3)
Enter ALL; this field may have other values in the future.
"^DD",2006.631,2006.631,.04,"DT")
2990226
"^DD",2006.631,2006.631,.05,0)
LAST EDITED^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",2006.631,2006.631,.05,3)
When finished all list definition changes, Enter "NOW" to log time of last edit.
"^DD",2006.631,2006.631,.05,21,0)
^^1^1^2990324^
"^DD",2006.631,2006.631,.05,21,1,0)
Log of last time this report was edited.
"^DD",2006.631,2006.631,.05,23,0)
^^3^3^2990324^
"^DD",2006.631,2006.631,.05,23,1,0)
Whenever the report definition is edited, the compile process must
"^DD",2006.631,2006.631,.05,23,2,0)
re-build some needed internal data structures that support the
"^DD",2006.631,2006.631,.05,23,3,0)
execution of the List compile routines.
"^DD",2006.631,2006.631,.05,"DT")
2990226
"^DD",2006.631,2006.631,.06,0)
ENABLE LIST?^S^1:Y;0:N;^0;6^Q
"^DD",2006.631,2006.631,.06,3)
Enable this LIST only when it is ready for live use.
"^DD",2006.631,2006.631,.06,21,0)
^^5^5^2990324^^
"^DD",2006.631,2006.631,.06,21,1,0)
Until the List definition is Enabled, it will not be available for
"^DD",2006.631,2006.631,.06,21,2,0)
use from the VistARad Workstation; this allows you time to develop and/or
"^DD",2006.631,2006.631,.06,21,3,0)
modify list definitions without worrying about end-users accessing a
"^DD",2006.631,2006.631,.06,21,4,0)
fully-defined list.  Also, you can retire a list that is no longer needed
"^DD",2006.631,2006.631,.06,21,5,0)
by deleting this field's answer.
"^DD",2006.631,2006.631,.06,"DT")
2990324
"^DD",2006.631,2006.631,.07,0)
BUTTON LABEL^RF^^0;7^K:$L(X)>15!($L(X)<3) X
"^DD",2006.631,2006.631,.07,3)
Answer must be 3-15 characters in length.
"^DD",2006.631,2006.631,.07,"DT")
2990630
"^DD",2006.631,2006.631,1,0)
COLUMNS^2006.6311PA^^1;0
"^DD",2006.631,2006.631,1,21,0)
^.001^1^1^3020313^^^
"^DD",2006.631,2006.631,1,21,1,0)
Specify output columns here.
"^DD",2006.631,2006.631,2,0)
SORT^2006.6312PA^^2;0
"^DD",2006.631,2006.631,2,21,0)
^^1^1^2990607^^^^
"^DD",2006.631,2006.631,2,21,1,0)
The sort sequence may be specified here.
"^DD",2006.631,2006.6311,0)
COLUMNS SUB-FIELD^^1^2
"^DD",2006.631,2006.6311,0,"DT")
2990324
"^DD",2006.631,2006.6311,0,"IX","B",2006.6311,.01)

"^DD",2006.631,2006.6311,0,"NM","COLUMNS")

"^DD",2006.631,2006.6311,0,"UP")
2006.631
"^DD",2006.631,2006.6311,.01,0)
COLUMN^MP2006.63'^MAG(2006.63,^0;1^Q
"^DD",2006.631,2006.6311,.01,1,0)
^.1
"^DD",2006.631,2006.6311,.01,1,1,0)
2006.6311^B
"^DD",2006.631,2006.6311,.01,1,1,1)
S ^MAG(2006.631,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",2006.631,2006.6311,.01,1,1,2)
K ^MAG(2006.631,DA(1),1,"B",$E(X,1,30),DA)
"^DD",2006.631,2006.6311,.01,3)
Enter output columns for the list.
"^DD",2006.631,2006.6311,.01,21,0)
^^2^2^3020313^
"^DD",2006.631,2006.6311,.01,21,1,0)
This field is a pointer to MAG RAD LIST DATA ELEMENTS and specifies the 
"^DD",2006.631,2006.6311,.01,21,2,0)
display column in the Exam Lists.
"^DD",2006.631,2006.6311,.01,"DT")
2990302
"^DD",2006.631,2006.6311,1,0)
WIDTH^NJ2,0^^0;2^K:+X'=X!(X>30)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.631,2006.6311,1,3)
Type a Number between 0 and 30, 0 Decimal Digits
"^DD",2006.631,2006.6311,1,21,0)
^^1^1^2990324^
"^DD",2006.631,2006.6311,1,21,1,0)
Output values may be truncated to the specified width, if desired.
"^DD",2006.631,2006.6311,1,"DT")
2990324
"^DD",2006.631,2006.6312,0)
SORT SUB-FIELD^^1^2
"^DD",2006.631,2006.6312,0,"DT")
2990607
"^DD",2006.631,2006.6312,0,"IX","B",2006.6312,.01)

"^DD",2006.631,2006.6312,0,"NM","SORT")

"^DD",2006.631,2006.6312,0,"UP")
2006.631
"^DD",2006.631,2006.6312,.01,0)
SORT^MP2006.63'^MAG(2006.63,^0;1^Q
"^DD",2006.631,2006.6312,.01,1,0)
^.1^^-1
"^DD",2006.631,2006.6312,.01,1,1,0)
2006.6312^B
"^DD",2006.631,2006.6312,.01,1,1,1)
S ^MAG(2006.631,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",2006.631,2006.6312,.01,1,1,2)
K ^MAG(2006.631,DA(1),2,"B",$E(X,1,30),DA)
"^DD",2006.631,2006.6312,.01,3)
Specify the sort values, in the desired sort order.
"^DD",2006.631,2006.6312,.01,21,0)
^^1^1^2990607^^
"^DD",2006.631,2006.6312,.01,21,1,0)
The order in which fields are entered here determines the sort order.
"^DD",2006.631,2006.6312,.01,"DT")
2990607
"^DD",2006.631,2006.6312,1,0)
REVERSE?^S^1:YES;0:NO;^0;2^Q
"^DD",2006.631,2006.6312,1,3)
If a reverse sort is desired, this should be answered "Y".
"^DD",2006.631,2006.6312,1,21,0)
^^2^2^2990607^^^^
"^DD",2006.631,2006.6312,1,21,1,0)
If a reverse sort is desired, this should be answered "Y"; reverse sort 
"^DD",2006.631,2006.6312,1,21,2,0)
is only valid for date/time and numeric-valued fields.
"^DD",2006.631,2006.6312,1,"DT")
2990607
"^DD",2006.634,2006.634,0)
FIELD^^35^35
"^DD",2006.634,2006.634,0,"DDA")
Y
"^DD",2006.634,2006.634,0,"DT")
3081031
"^DD",2006.634,2006.634,0,"IX","B",2006.634,.01)

"^DD",2006.634,2006.634,0,"NM","MAGJ ZLIST SEARCH")

"^DD",2006.634,2006.634,0,"VRPK")
MAG
"^DD",2006.634,2006.634,.01,0)
CASE NUMBER^RF^^0;1^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,.01,1,0)
^.1
"^DD",2006.634,2006.634,.01,1,1,0)
2006.634^B
"^DD",2006.634,2006.634,.01,1,1,1)
S ^MAG(2006.634,"B",$E(X,1,30),DA)=""
"^DD",2006.634,2006.634,.01,1,1,2)
K ^MAG(2006.634,"B",$E(X,1,30),DA)
"^DD",2006.634,2006.634,.01,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,.01,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,.01,21,1,0)
The search entry that corresponds to the Case Number.
"^DD",2006.634,2006.634,.01,"DT")
2990329
"^DD",2006.634,2006.634,2,0)
EXAM LOCK IND^RF^^0;2^K:$L(X)>4!($L(X)<1) X
"^DD",2006.634,2006.634,2,3)
Answer must be 1-4 characters in length.
"^DD",2006.634,2006.634,2,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,2,21,1,0)
The search entry that corresponds to the Exam Lock Indicator.
"^DD",2006.634,2006.634,2,"DT")
2990329
"^DD",2006.634,2006.634,3,0)
PATIENT NAME^RF^^0;3^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,3,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,3,21,0)
^.001^1^1^3090410^^
"^DD",2006.634,2006.634,3,21,1,0)
The search entry that corresponds to the Patient Name.
"^DD",2006.634,2006.634,3,"DT")
2990329
"^DD",2006.634,2006.634,4,0)
PATIENT ID^RF^^0;4^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,4,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,4,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,4,21,1,0)
The search entry that corresponds to the Patient Identification.
"^DD",2006.634,2006.634,4,"DT")
2990329
"^DD",2006.634,2006.634,5,0)
PRIORITY^RF^^0;5^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,5,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,5,21,0)
^.001^1^1^3090928^^^
"^DD",2006.634,2006.634,5,21,1,0)
The search entry that corresponds to the Priority of the case.
"^DD",2006.634,2006.634,5,"DT")
2990329
"^DD",2006.634,2006.634,6,0)
PROCEDURE^RF^^0;6^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,6,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,6,21,0)
^.001^1^1^3020313^^^
"^DD",2006.634,2006.634,6,21,1,0)
The search entry that corresponds to Procedure.
"^DD",2006.634,2006.634,6,"DT")
2990329
"^DD",2006.634,2006.634,7,0)
IMAGE DATE/TIME^F^^0;7^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,7,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,7,21,0)
^.001^1^1^3090410^^
"^DD",2006.634,2006.634,7,21,1,0)
The search entry that corresponds to the Image Date and Time.
"^DD",2006.634,2006.634,7,"DT")
2990329
"^DD",2006.634,2006.634,8,0)
STATUS^RF^^0;8^K:$L(X)>4!($L(X)<1) X
"^DD",2006.634,2006.634,8,3)
Answer must be 1-4 characters in length.
"^DD",2006.634,2006.634,8,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,8,21,1,0)
The search entry that corresponds to the Status of the case.
"^DD",2006.634,2006.634,8,"DT")
2990329
"^DD",2006.634,2006.634,9,0)
NUMBER OF IMAGES^RF^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,9,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,9,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,9,21,1,0)
The search entry that corresponds to Number of Images for the case.
"^DD",2006.634,2006.634,9,"DT")
2990329
"^DD",2006.634,2006.634,10,0)
ONLINE STATUS^RF^^0;10^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,10,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,10,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,10,21,1,0)
The search entry that corresponds to Online Status of the images.
"^DD",2006.634,2006.634,10,"DT")
2990329
"^DD",2006.634,2006.634,11,0)
IMAGING LOCATION^RF^^0;11^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,11,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,11,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,11,21,1,0)
The search entry that corresponds to the Imaging Location of the images.
"^DD",2006.634,2006.634,11,"DT")
2990329
"^DD",2006.634,2006.634,12,0)
REMOTE CACHE INDICATOR^RF^^0;12^K:$L(X)>5!($L(X)<1) X
"^DD",2006.634,2006.634,12,3)
Answer must be 1-5 characters in length.
"^DD",2006.634,2006.634,12,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,12,21,1,0)
The search entry that corresponds to Remote Cache Indicator for the images.
"^DD",2006.634,2006.634,12,"DT")
2990329
"^DD",2006.634,2006.634,13,0)
IMAGES EXIST INDICATOR^RF^^0;13^K:$L(X)>1!($L(X)<1) X
"^DD",2006.634,2006.634,13,3)
Answer must be 1 character in length.
"^DD",2006.634,2006.634,13,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,13,21,1,0)
The search entry that corresponds to Images Exist Indicator for the case.
"^DD",2006.634,2006.634,13,"DT")
2990329
"^DD",2006.634,2006.634,14,0)
IMAGE DATE/TIME-SORTABLE^RF^^0;14^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,14,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,14,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,14,21,1,0)
The search entry that corresponds to Image Date & Time Sortable.
"^DD",2006.634,2006.634,14,"DT")
2990329
"^DD",2006.634,2006.634,15,0)
MODALITY^RF^^0;15^K:$L(X)>2!($L(X)<1) X
"^DD",2006.634,2006.634,15,3)
Answer must be 1-2 characters in length.
"^DD",2006.634,2006.634,15,21,0)
^.001^1^1^3020313^^
"^DD",2006.634,2006.634,15,21,1,0)
The search entry that corresponds to Modality.
"^DD",2006.634,2006.634,15,"DT")
2990329
"^DD",2006.634,2006.634,16,0)
INTERNAL EXAM STATUS^RF^^0;16^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,16,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,16,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,16,21,1,0)
The search entry that corresponds to Internal Exam Status.
"^DD",2006.634,2006.634,16,"DT")
2990329
"^DD",2006.634,2006.634,17,0)
IMAGE TYPE ABBREVIATION^RF^^0;17^K:$L(X)>4!($L(X)<1) X
"^DD",2006.634,2006.634,17,3)
Answer must be 1-4 characters in length.
"^DD",2006.634,2006.634,17,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,17,21,1,0)
The search entry that corresponds to Image Type Abbreviation.
"^DD",2006.634,2006.634,17,"DT")
2990329
"^DD",2006.634,2006.634,18,0)
PATIENT LOCATION ABBREV^RF^^0;18^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,18,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,18,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,18,21,1,0)
The search entry that corresponds to Patient Location Abbreviation.
"^DD",2006.634,2006.634,18,"DT")
3010820
"^DD",2006.634,2006.634,19,0)
PATIENT LOCATION NAME^RF^^0;19^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,19,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,19,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,19,21,1,0)
The search entry that corresponds to the Patient Location Name. 
"^DD",2006.634,2006.634,19,"DT")
3010820
"^DD",2006.634,2006.634,20,0)
INTERPRETING RADIOLOGISTS^RF^^0;20^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,20,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,20,21,0)
^.001^1^1^3020313^^
"^DD",2006.634,2006.634,20,21,1,0)
The search entry that corresponds to the Interpreting Radiologist.
"^DD",2006.634,2006.634,20,"DT")
3010820
"^DD",2006.634,2006.634,21,0)
SSN LAST 4^RF^^0;21^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,21,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,21,21,0)
^^2^2^3020313^
"^DD",2006.634,2006.634,21,21,1,0)
The search entry that corresponds to the last 4 digits of the social 
"^DD",2006.634,2006.634,21,21,2,0)
security number for the patient..
"^DD",2006.634,2006.634,21,"DT")
3010820
"^DD",2006.634,2006.634,22,0)
RADIOLOGY DIVISION^RF^^0;22^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,22,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,22,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,22,21,1,0)
The search entry that corresponds to the Radiology division.
"^DD",2006.634,2006.634,22,"DT")
3010820
"^DD",2006.634,2006.634,23,0)
SITE CODE^RF^^0;23^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,23,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,23,21,0)
^^1^1^3020313^
"^DD",2006.634,2006.634,23,21,1,0)
The search entry that corresponds to the Site code.
"^DD",2006.634,2006.634,23,"DT")
3010820
"^DD",2006.634,2006.634,24,0)
INTERP BY LOGON RADIOLOGIST?^S^Y:YES;N:NO;^0;24^Q
"^DD",2006.634,2006.634,24,21,0)
^.001^1^1^3081031^^
"^DD",2006.634,2006.634,24,21,1,0)
The search entry that corresponds to Interpreted By Login Radiologist.
"^DD",2006.634,2006.634,24,"DT")
3011106
"^DD",2006.634,2006.634,25,0)
PROCEDURE MODIFIER^F^^0;25^K:$L(X)>30!($L(X)<2) X
"^DD",2006.634,2006.634,25,3)
Answer must be 2-30 characters in length.
"^DD",2006.634,2006.634,25,21,0)
^^1^1^3030501^
"^DD",2006.634,2006.634,25,21,1,0)
The search entry that corresponds to Procedure Modifier.
"^DD",2006.634,2006.634,25,"DT")
3030501
"^DD",2006.634,2006.634,26,0)
PATIENT LOCATION TYPE^F^^0;26^K:$L(X)>10!($L(X)<1) X
"^DD",2006.634,2006.634,26,3)
Answer must be 1-10 characters in length.
"^DD",2006.634,2006.634,26,21,0)
^^1^1^3030501^
"^DD",2006.634,2006.634,26,21,1,0)
The search entry that corresponds to Patient Location Type.
"^DD",2006.634,2006.634,26,"DT")
3030501
"^DD",2006.634,2006.634,27,0)
CPT CODE^F^^0;27^K:$L(X)>5!($L(X)<3) X
"^DD",2006.634,2006.634,27,3)
Answer must be 3-5 characters in length.
"^DD",2006.634,2006.634,27,21,0)
^^1^1^3041013^
"^DD",2006.634,2006.634,27,21,1,0)
The search entry that corresponds to the Procedure CPT Code
"^DD",2006.634,2006.634,27,"DT")
3041013
"^DD",2006.634,2006.634,28,0)
WARD^F^^0;28^K:$L(X)>10!($L(X)<2) X
"^DD",2006.634,2006.634,28,3)
Answer must be 2-10 characters in length.
"^DD",2006.634,2006.634,28,21,0)
^^1^1^3041013^
"^DD",2006.634,2006.634,28,21,1,0)
The search entry that corresponds to the Patient Ward
"^DD",2006.634,2006.634,28,"DT")
3041013
"^DD",2006.634,2006.634,29,0)
HISTORY IEN^NJ6,0^^0;29^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2006.634,2006.634,29,3)
Type a Number between 1 and 999999, 0 Decimal Digits
"^DD",2006.634,2006.634,29,21,0)
^^1^1^3050803^
"^DD",2006.634,2006.634,29,21,1,0)
The search entry that corresponds to the History List IEN.
"^DD",2006.634,2006.634,29,"DT")
3050803
"^DD",2006.634,2006.634,30,0)
HISTORY TIMESTAMP^F^^0;30^K:$L(X)>10!($L(X)<1) X
"^DD",2006.634,2006.634,30,3)
Answer must be 1-10 characters in length.
"^DD",2006.634,2006.634,30,21,0)
^^1^1^3050803^
"^DD",2006.634,2006.634,30,21,1,0)
The search entry that corresponds to the History List timestamp.
"^DD",2006.634,2006.634,30,"DT")
3050803
"^DD",2006.634,2006.634,31,0)
HISTORY LOCK STATUS^S^N:No;Y:Yes;^0;31^Q
"^DD",2006.634,2006.634,31,3)

"^DD",2006.634,2006.634,31,21,0)
^.001^1^1^3050803^^
"^DD",2006.634,2006.634,31,21,1,0)
The search entry that corresponds to the History List lock status.
"^DD",2006.634,2006.634,31,"DT")
3050803
"^DD",2006.634,2006.634,32,0)
HISTORY HP USED^F^^0;32^K:$L(X)>30!($L(X)<2) X
"^DD",2006.634,2006.634,32,3)
Answer must be 2-30 characters in length.
"^DD",2006.634,2006.634,32,21,0)
^.001^1^1^3081031^^
"^DD",2006.634,2006.634,32,21,1,0)
The search entry that corresponds to the History List HP or TP used.
"^DD",2006.634,2006.634,32,"DT")
3050803
"^DD",2006.634,2006.634,33,0)
TECH INITIALS^RF^^0;33^K:$L(X)>4!($L(X)<2) X
"^DD",2006.634,2006.634,33,3)
Answer must be 2-4 characters in length.
"^DD",2006.634,2006.634,33,21,0)
^.001^1^1^3090410^^^
"^DD",2006.634,2006.634,33,21,1,0)
The search entry that corresponds to the radiology tech.
"^DD",2006.634,2006.634,33,"DT")
3081031
"^DD",2006.634,2006.634,34,0)
REGISTRATION TIME^RF^^0;34^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,34,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,34,21,0)
^.001^1^1^3090410^^^
"^DD",2006.634,2006.634,34,21,1,0)
The search entry that corresponds to the registration date/time.
"^DD",2006.634,2006.634,34,"DT")
3081031
"^DD",2006.634,2006.634,35,0)
REGISTRATION TIME-SORTABLE^RF^^0;35^K:$L(X)>3!($L(X)<1) X
"^DD",2006.634,2006.634,35,3)
Answer must be 1-3 characters in length.
"^DD",2006.634,2006.634,35,21,0)
^.001^1^1^3090410^^^
"^DD",2006.634,2006.634,35,21,1,0)
The search entry that corresponds to the registration date/time sortable.
"^DD",2006.634,2006.634,35,"DT")
3081031
"^DD",2006.69,2006.69,13,0)
ENA DICT PREF-YES ALL LOCKED^S^1:YES;0:NO;^0;17^Q
"^DD",2006.69,2006.69,13,.1)
ENABLE DICTATION PREFERENCE--YES FOR ALL LOCKED EXAMS
"^DD",2006.69,2006.69,13,3)
This sets a site policy for enabling a user preference for the dictation interface.  Enter ?? for a detailed explanation.
"^DD",2006.69,2006.69,13,21,0)
^.001^15^15^3090408^^^
"^DD",2006.69,2006.69,13,21,1,0)
This setting affects some behavior of VistARad's dictation system
"^DD",2006.69,2006.69,13,21,2,0)
interface.  When a locked exam is opened, the accession number is sent
"^DD",2006.69,2006.69,13,21,3,0)
across the interface via the Dictation dialog.  Normally, whenever more
"^DD",2006.69,2006.69,13,21,4,0)
than one locked exam is opened, the dialog displays an entry for each
"^DD",2006.69,2006.69,13,21,5,0)
of the exams, and defaults YES (i.e. send the accession number across)
"^DD",2006.69,2006.69,13,21,6,0)
for only one of the exams; the user may manually change the selection
"^DD",2006.69,2006.69,13,21,7,0)
for any or all of the exams to YES if desired.
"^DD",2006.69,2006.69,13,21,8,0)
  
"^DD",2006.69,2006.69,13,21,9,0)
A user preference exists to allow the user to specify that ALL locked
"^DD",2006.69,2006.69,13,21,10,0)
exams in this dialog be defaulted to YES.  This preference is only 
"^DD",2006.69,2006.69,13,21,11,0)
enabled if a site-level policy is implemented to allow the use of this
"^DD",2006.69,2006.69,13,21,12,0)
preference.  Answering YES to the setting ENA DICT PREF-YES ALL LOCKED
"^DD",2006.69,2006.69,13,21,13,0)
implements this site-level policy.  Each user then may choose to
"^DD",2006.69,2006.69,13,21,14,0)
enable the preference--the system's default behavior is to disable
"^DD",2006.69,2006.69,13,21,15,0)
this preference.
"^DD",2006.69,2006.69,13,"DT")
3090408
"^DIC",2006.63,2006.63,0)
MAG RAD LIST DATA ELEMENTS^2006.63
"^DIC",2006.63,2006.63,0,"GL")
^MAG(2006.63,
"^DIC",2006.63,2006.63,"%D",0)
^1.001^19^19^3020313^^
"^DIC",2006.63,2006.63,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.63,2006.63,"%D",2,0)
 |                                                               |
"^DIC",2006.63,2006.63,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.63,2006.63,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.63,2006.63,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.63,2006.63,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.63,2006.63,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.63,2006.63,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.63,2006.63,"%D",9,0)
 |                                                               |
"^DIC",2006.63,2006.63,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.63,2006.63,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.63,2006.63,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.63,2006.63,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.63,2006.63,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.63,2006.63,"%D",15,0)
 |                                                               |
"^DIC",2006.63,2006.63,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.63,2006.63,"%D",17,0)
 
"^DIC",2006.63,2006.63,"%D",18,0)
This file contains a list of data elements made available for VistARad 
"^DIC",2006.63,2006.63,"%D",19,0)
Exam Lists.
"^DIC",2006.63,"B","MAG RAD LIST DATA ELEMENTS",2006.63)

"^DIC",2006.631,2006.631,0)
MAG RAD LISTS DEFINITION^2006.631
"^DIC",2006.631,2006.631,0,"GL")
^MAG(2006.631,
"^DIC",2006.631,2006.631,"%",0)
^1.005^^0
"^DIC",2006.631,2006.631,"%D",0)
^1.001^19^19^3030416^^^
"^DIC",2006.631,2006.631,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.631,2006.631,"%D",2,0)
 |                                                               |
"^DIC",2006.631,2006.631,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.631,2006.631,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.631,2006.631,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.631,2006.631,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.631,2006.631,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.631,2006.631,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.631,2006.631,"%D",9,0)
 |                                                               |
"^DIC",2006.631,2006.631,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.631,2006.631,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.631,2006.631,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.631,2006.631,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.631,2006.631,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.631,2006.631,"%D",15,0)
 |                                                               |
"^DIC",2006.631,2006.631,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.631,2006.631,"%D",17,0)
 
"^DIC",2006.631,2006.631,"%D",18,0)
All exam lists are defined in this file; defines the content and format
"^DIC",2006.631,2006.631,"%D",19,0)
of VistARad Exam Lists.
"^DIC",2006.631,"B","MAG RAD LISTS DEFINITION",2006.631)

"^DIC",2006.634,2006.634,0)
MAGJ ZLIST SEARCH^2006.634
"^DIC",2006.634,2006.634,0,"GL")
^MAG(2006.634,
"^DIC",2006.634,2006.634,"%",0)
^1.005^1^1
"^DIC",2006.634,2006.634,"%",1,0)
MAGJ
"^DIC",2006.634,2006.634,"%","B","MAGJ",1)

"^DIC",2006.634,2006.634,"%D",0)
^^21^21^3000510
"^DIC",2006.634,2006.634,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2006.634,2006.634,"%D",2,0)
 |                                                               |
"^DIC",2006.634,2006.634,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2006.634,2006.634,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2006.634,2006.634,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2006.634,2006.634,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2006.634,2006.634,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2006.634,2006.634,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2006.634,2006.634,"%D",9,0)
 |                                                               |
"^DIC",2006.634,2006.634,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2006.634,2006.634,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2006.634,2006.634,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2006.634,2006.634,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2006.634,2006.634,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2006.634,2006.634,"%D",15,0)
 |                                                               |
"^DIC",2006.634,2006.634,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2006.634,2006.634,"%D",17,0)
 
"^DIC",2006.634,2006.634,"%D",18,0)
This file is used by the  Imaging VistaRad system to define search logic
"^DIC",2006.634,2006.634,"%D",19,0)
in the MAG RAD LISTS DEFINITION file.  No entries exist in this file, as
"^DIC",2006.634,2006.634,"%D",20,0)
the file definition itself is what is used in the data-entry for defining
"^DIC",2006.634,2006.634,"%D",21,0)
the search logic.
"^DIC",2006.634,"B","MAGJ ZLIST SEARCH",2006.634)

**END**
**END**
