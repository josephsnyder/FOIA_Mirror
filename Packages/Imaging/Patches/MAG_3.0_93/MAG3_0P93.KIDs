KIDS Distribution saved on Dec 02, 2009@16:23:45
VistA Imaging V3 - Patch 93 - Clinical Maintenance II
**KIDS**:MAG*3.0*93^

**INSTALL NAME**
MAG*3.0*93
"BLD",6453,0)
MAG*3.0*93^IMAGING^0^3091202^y
"BLD",6453,1,0)
^^63^63^3091202^
"BLD",6453,1,1,0)
Code for the Clinical Display and Capture.
"BLD",6453,1,2,0)
 
"BLD",6453,1,3,0)
 
"BLD",6453,1,4,0)
Routines:
"BLD",6453,1,5,0)
 
"BLD",6453,1,6,0)
MAGGA01   value = 29307935
"BLD",6453,1,7,0)
MAGGA02   value = 57822621
"BLD",6453,1,8,0)
MAGGA02A  value = 40367747
"BLD",6453,1,9,0)
MAGGA03   value = 45753507
"BLD",6453,1,10,0)
MAGGA03A  value = 24276061
"BLD",6453,1,11,0)
MAGGA03U  value = 15820919
"BLD",6453,1,12,0)
MAGGA04   value = 10448835
"BLD",6453,1,13,0)
MAGGAII   value = 118384476
"BLD",6453,1,14,0)
MAGGI11   value = 19558450
"BLD",6453,1,15,0)
MAGGI12   value = 30285951
"BLD",6453,1,16,0)
MAGGI13   value = 36748899
"BLD",6453,1,17,0)
MAGGI14   value = 39084079
"BLD",6453,1,18,0)
MAGGNTI   value = 37753394
"BLD",6453,1,19,0)
MAGGSFL1  value = 17534133
"BLD",6453,1,20,0)
MAGGSFLT  value = 33107414
"BLD",6453,1,21,0)
MAGGSIA   value = 34720134
"BLD",6453,1,22,0)
MAGGSIA1  value = 40524442
"BLD",6453,1,23,0)
MAGGSQI   value = 71964647
"BLD",6453,1,24,0)
MAGGTAU   value = 66867957
"BLD",6453,1,25,0)
MAGGTIA1  value = 33003499
"BLD",6453,1,26,0)
MAGGTID   value = 47456559
"BLD",6453,1,27,0)
MAGGTIG   value = 58640406
"BLD",6453,1,28,0)
MAGGTPT1  value = 37889156
"BLD",6453,1,29,0)
MAGGTRAI  value = 29892001
"BLD",6453,1,30,0)
MAGGTRPT  value = 43638944
"BLD",6453,1,31,0)
MAGGTSYS  value = 11574384
"BLD",6453,1,32,0)
MAGGTU3   value = 34334075
"BLD",6453,1,33,0)
MAGGTU31  value = 41847617
"BLD",6453,1,34,0)
MAGGTU4   value = 53401008
"BLD",6453,1,35,0)
MAGGTU41  value = 22378971
"BLD",6453,1,36,0)
MAGGTU42  value = 89107061
"BLD",6453,1,37,0)
MAGGTU4C  value = 5489850
"BLD",6453,1,38,0)
MAGGTU4D  value = 5495655
"BLD",6453,1,39,0)
MAGGTU4L  value = 4501110
"BLD",6453,1,40,0)
MAGGTU4T  value = 5490003
"BLD",6453,1,41,0)
MAGGTU6   value = 51862098
"BLD",6453,1,42,0)
MAGGTU7   value = 23284378
"BLD",6453,1,43,0)
MAGGTUP   value = 23999096
"BLD",6453,1,44,0)
MAGGTUX   value = 85905158
"BLD",6453,1,45,0)
MAGIPS93  value = 176674164
"BLD",6453,1,46,0)
MAGKIDS   value = 30231662
"BLD",6453,1,47,0)
MAGKIDS1  value = 40480221
"BLD",6453,1,48,0)
MAGSIXG1  value = 36487191
"BLD",6453,1,49,0)
MAGSIXG2  value = 63440737
"BLD",6453,1,50,0)
MAGSIXG3  value = 65195475
"BLD",6453,1,51,0)
MAGSIXG4  value = 12614135
"BLD",6453,1,52,0)
MAGUERR   value = 24572740
"BLD",6453,1,53,0)
MAGUERR1  value = 25613179
"BLD",6453,1,54,0)
MAGUTL01  value = 28612084
"BLD",6453,1,55,0)
MAGUTL02  value = 48311130
"BLD",6453,1,56,0)
MAGUTL03  value = 11647866
"BLD",6453,1,57,0)
MAGUTL04  value = 23169366
"BLD",6453,1,58,0)
MAGUTL05  value = 18410909
"BLD",6453,1,59,0)
MAGUTL06  value = 18816077
"BLD",6453,1,60,0)
MAGUTL07  value = 22761121
"BLD",6453,1,61,0)
MAGUTL08  value = 26051030
"BLD",6453,1,62,0)
MAGUTL10  value = 8165500
"BLD",6453,1,63,0)
MAGUXRF   value = 41195502
"BLD",6453,4,0)
^9.64PA^2006.18^6
"BLD",6453,4,2005,0)
2005
"BLD",6453,4,2005,2,0)
^9.641^2005.04^3
"BLD",6453,4,2005,2,2005,0)
IMAGE  (File-top level)
"BLD",6453,4,2005,2,2005,1,0)
^9.6411^.01^11
"BLD",6453,4,2005,2,2005,1,.01,0)
OBJECT NAME
"BLD",6453,4,2005,2,2005,1,8.1,0)
CAPTURE APPLICATION
"BLD",6453,4,2005,2,2005,1,14,0)
GROUP PARENT
"BLD",6453,4,2005,2,2005,1,112,0)
CONTROLLED IMAGE
"BLD",6453,4,2005,2,2005,1,112.1,0)
CONTROLLED DATE
"BLD",6453,4,2005,2,2005,1,112.2,0)
CONTROLLED BY
"BLD",6453,4,2005,2,2005,1,113,0)
STATUS
"BLD",6453,4,2005,2,2005,1,113.1,0)
STATUS DATE
"BLD",6453,4,2005,2,2005,1,113.2,0)
STATUS BY
"BLD",6453,4,2005,2,2005,1,113.3,0)
STATUS REASON
"BLD",6453,4,2005,2,2005,1,114,0)
NUMBER OF PAGES
"BLD",6453,4,2005,2,2005.04,0)
OBJECT GROUP  (sub-file)
"BLD",6453,4,2005,2,2005.04,1,0)
^9.6411^.01^1
"BLD",6453,4,2005,2,2005.04,1,.01,0)
OBJECT GROUP
"BLD",6453,4,2005,2,2005.099,0)
AUDIT  (sub-file)
"BLD",6453,4,2005,2,2005.099,1,0)
^9.6411^^
"BLD",6453,4,2005,222)
y^n^p^^^^n^^n
"BLD",6453,4,2005,224)

"BLD",6453,4,2005.1,0)
2005.1
"BLD",6453,4,2005.1,2,0)
^9.641^2005.199^2
"BLD",6453,4,2005.1,2,2005.1,0)
IMAGE AUDIT  (File-top level)
"BLD",6453,4,2005.1,2,2005.1,1,0)
^9.6411^8.1^11
"BLD",6453,4,2005.1,2,2005.1,1,.01,0)
OBJECT NAME
"BLD",6453,4,2005.1,2,2005.1,1,8.1,0)
CAPTURE APPLICATION
"BLD",6453,4,2005.1,2,2005.1,1,14,0)
GROUP PARENT
"BLD",6453,4,2005.1,2,2005.1,1,112,0)
CONTROLLED IMAGE
"BLD",6453,4,2005.1,2,2005.1,1,112.1,0)
CONTROLLED DATE
"BLD",6453,4,2005.1,2,2005.1,1,112.2,0)
CONTROLLED BY
"BLD",6453,4,2005.1,2,2005.1,1,113,0)
STATUS
"BLD",6453,4,2005.1,2,2005.1,1,113.1,0)
STATUS DATE
"BLD",6453,4,2005.1,2,2005.1,1,113.2,0)
STATUS BY
"BLD",6453,4,2005.1,2,2005.1,1,113.3,0)
STATUS REASON
"BLD",6453,4,2005.1,2,2005.1,1,114,0)
NUMBER OF PAGES
"BLD",6453,4,2005.1,2,2005.199,0)
AUDIT  (sub-file)
"BLD",6453,4,2005.1,2,2005.199,1,0)
^9.6411^^
"BLD",6453,4,2005.1,222)
y^n^p^^^^n^^n
"BLD",6453,4,2005.1,224)

"BLD",6453,4,2005.87,0)
2005.87
"BLD",6453,4,2005.87,2,0)
^9.641^2005.87^1
"BLD",6453,4,2005.87,2,2005.87,0)
IMAGE LIST FILTERS  (File-top level)
"BLD",6453,4,2005.87,2,2005.87,1,0)
^9.6411^16^7
"BLD",6453,4,2005.87,2,2005.87,1,10,0)
IMAGE STATUS
"BLD",6453,4,2005.87,2,2005.87,1,11,0)
DESCRIPTION CONTAINS
"BLD",6453,4,2005.87,2,2005.87,1,12,0)
CAPTURED BY
"BLD",6453,4,2005.87,2,2005.87,1,13,0)
USE CAPTURE DATES
"BLD",6453,4,2005.87,2,2005.87,1,14,0)
DAY RANGE
"BLD",6453,4,2005.87,2,2005.87,1,15,0)
COLUMN DESCRIPTION
"BLD",6453,4,2005.87,2,2005.87,1,16,0)
PERCENT
"BLD",6453,4,2005.87,222)
y^n^p^^^^n^^n
"BLD",6453,4,2005.87,224)

"BLD",6453,4,2005.88,0)
2005.88
"BLD",6453,4,2005.88,222)
y^y^f^^n^^y^o^n
"BLD",6453,4,2005.88,224)
I $P($G(^(0)),"^",4)>0
"BLD",6453,4,2006.18,0)
2006.18
"BLD",6453,4,2006.18,2,0)
^9.641^2006.18^1
"BLD",6453,4,2006.18,2,2006.18,0)
IMAGING USER PREFERENCE  (File-top level)
"BLD",6453,4,2006.18,2,2006.18,1,0)
^9.6411^221.05^28
"BLD",6453,4,2006.18,2,2006.18,1,220.01,0)
SHOW IMAGE TREE
"BLD",6453,4,2006.18,2,2006.18,1,220.02,0)
ENABLE AUTOSELECT
"BLD",6453,4,2006.18,2,2006.18,1,220.03,0)
SPEED OF AUTOSELECT
"BLD",6453,4,2006.18,2,2006.18,1,220.04,0)
SYNCHRONIZE IMAGE SELECTIONS
"BLD",6453,4,2006.18,2,2006.18,1,220.05,0)
WHERE TO SHOW ABSTRACT
"BLD",6453,4,2006.18,2,2006.18,1,220.06,0)
POSITION OF ABSTRACT
"BLD",6453,4,2006.18,2,2006.18,1,220.07,0)
WHERE TO SHOW IMAGE
"BLD",6453,4,2006.18,2,2006.18,1,220.08,0)
SHOW TREE SORT BUTTONS
"BLD",6453,4,2006.18,2,2006.18,1,220.09,0)
AUTOEXPAND TREE ITEMS
"BLD",6453,4,2006.18,2,2006.18,1,220.1,0)
ABSTRACT LIST SCROLL MODE
"BLD",6453,4,2006.18,2,2006.18,1,220.11,0)
IMAGE LIST SCROLL MODE
"BLD",6453,4,2006.18,2,2006.18,1,220.12,0)
SHOW LIST VIEW
"BLD",6453,4,2006.18,2,2006.18,1,220.13,0)
WINDOW LAYOUT DESCRIPTION
"BLD",6453,4,2006.18,2,2006.18,1,221.01,0)
VERIFICATION WINDOW STYLE
"BLD",6453,4,2006.18,2,2006.18,1,221.02,0)
VERIFICATION LEFT
"BLD",6453,4,2006.18,2,2006.18,1,221.03,0)
VERIFICATION TOP
"BLD",6453,4,2006.18,2,2006.18,1,221.04,0)
VERIFICATION WIDTH
"BLD",6453,4,2006.18,2,2006.18,1,221.05,0)
VERIFICATION HEIGHT
"BLD",6453,4,2006.18,2,2006.18,1,221.06,0)
VER SHOW IMAGE REPORT
"BLD",6453,4,2006.18,2,2006.18,1,221.07,0)
VER SHOW IMAGE INFO
"BLD",6453,4,2006.18,2,2006.18,1,221.08,0)
VER AUTO HIDE QUICK REPORT
"BLD",6453,4,2006.18,2,2006.18,1,221.09,0)
VER SINGLE VIEW ONLY
"BLD",6453,4,2006.18,2,2006.18,1,221.1,0)
VER COLUMN WIDTHS
"BLD",6453,4,2006.18,2,2006.18,1,222.01,0)
EDIT WINDOW STYLE
"BLD",6453,4,2006.18,2,2006.18,1,222.02,0)
EDIT LEFT
"BLD",6453,4,2006.18,2,2006.18,1,222.03,0)
EDIT TOP
"BLD",6453,4,2006.18,2,2006.18,1,222.04,0)
EDIT WIDTH
"BLD",6453,4,2006.18,2,2006.18,1,222.05,0)
EDIT HEIGHT
"BLD",6453,4,2006.18,222)
y^n^p^^^^n^^n
"BLD",6453,4,2006.18,224)

"BLD",6453,4,2006.81,0)
2006.81
"BLD",6453,4,2006.81,2,0)
^9.641^2006.81^1
"BLD",6453,4,2006.81,2,2006.81,0)
IMAGING WINDOWS WORKSTATIONS  (File-top level)
"BLD",6453,4,2006.81,2,2006.81,1,0)
^9.6411^5.9^10
"BLD",6453,4,2006.81,2,2006.81,1,5,0)
DISPLAY APP DTTM
"BLD",6453,4,2006.81,2,2006.81,1,5.3,0)
TELEREADER APP DTTM
"BLD",6453,4,2006.81,2,2006.81,1,5.5,0)
CAPTURE APP DTTM
"BLD",6453,4,2006.81,2,2006.81,1,5.7,0)
VISTARAD APP DTTM
"BLD",6453,4,2006.81,2,2006.81,1,5.9,0)
CLINICAL UTILITIES APP DTTM
"BLD",6453,4,2006.81,2,2006.81,1,9,0)
DISPLAY VERSION
"BLD",6453,4,2006.81,2,2006.81,1,9.3,0)
TELEREADER VERSION
"BLD",6453,4,2006.81,2,2006.81,1,9.5,0)
CAPTURE VERSION
"BLD",6453,4,2006.81,2,2006.81,1,9.7,0)
VISTARAD VERSION
"BLD",6453,4,2006.81,2,2006.81,1,9.9,0)
CLINICAL UTILITIES VERSION
"BLD",6453,4,2006.81,222)
y^n^p^^^^n^^n
"BLD",6453,4,2006.81,224)

"BLD",6453,4,"APDD",2005,2005)

"BLD",6453,4,"APDD",2005,2005,.01)

"BLD",6453,4,"APDD",2005,2005,8.1)

"BLD",6453,4,"APDD",2005,2005,14)

"BLD",6453,4,"APDD",2005,2005,112)

"BLD",6453,4,"APDD",2005,2005,112.1)

"BLD",6453,4,"APDD",2005,2005,112.2)

"BLD",6453,4,"APDD",2005,2005,113)

"BLD",6453,4,"APDD",2005,2005,113.1)

"BLD",6453,4,"APDD",2005,2005,113.2)

"BLD",6453,4,"APDD",2005,2005,113.3)

"BLD",6453,4,"APDD",2005,2005,114)

"BLD",6453,4,"APDD",2005,2005.04)

"BLD",6453,4,"APDD",2005,2005.04,.01)

"BLD",6453,4,"APDD",2005,2005.099)

"BLD",6453,4,"APDD",2005.1,2005.1)

"BLD",6453,4,"APDD",2005.1,2005.1,.01)

"BLD",6453,4,"APDD",2005.1,2005.1,8.1)

"BLD",6453,4,"APDD",2005.1,2005.1,14)

"BLD",6453,4,"APDD",2005.1,2005.1,112)

"BLD",6453,4,"APDD",2005.1,2005.1,112.1)

"BLD",6453,4,"APDD",2005.1,2005.1,112.2)

"BLD",6453,4,"APDD",2005.1,2005.1,113)

"BLD",6453,4,"APDD",2005.1,2005.1,113.1)

"BLD",6453,4,"APDD",2005.1,2005.1,113.2)

"BLD",6453,4,"APDD",2005.1,2005.1,113.3)

"BLD",6453,4,"APDD",2005.1,2005.1,114)

"BLD",6453,4,"APDD",2005.1,2005.199)

"BLD",6453,4,"APDD",2005.87,2005.87)

"BLD",6453,4,"APDD",2005.87,2005.87,10)

"BLD",6453,4,"APDD",2005.87,2005.87,11)

"BLD",6453,4,"APDD",2005.87,2005.87,12)

"BLD",6453,4,"APDD",2005.87,2005.87,13)

"BLD",6453,4,"APDD",2005.87,2005.87,14)

"BLD",6453,4,"APDD",2005.87,2005.87,15)

"BLD",6453,4,"APDD",2005.87,2005.87,16)

"BLD",6453,4,"APDD",2006.18,2006.18)

"BLD",6453,4,"APDD",2006.18,2006.18,220.01)

"BLD",6453,4,"APDD",2006.18,2006.18,220.02)

"BLD",6453,4,"APDD",2006.18,2006.18,220.03)

"BLD",6453,4,"APDD",2006.18,2006.18,220.04)

"BLD",6453,4,"APDD",2006.18,2006.18,220.05)

"BLD",6453,4,"APDD",2006.18,2006.18,220.06)

"BLD",6453,4,"APDD",2006.18,2006.18,220.07)

"BLD",6453,4,"APDD",2006.18,2006.18,220.08)

"BLD",6453,4,"APDD",2006.18,2006.18,220.09)

"BLD",6453,4,"APDD",2006.18,2006.18,220.1)

"BLD",6453,4,"APDD",2006.18,2006.18,220.11)

"BLD",6453,4,"APDD",2006.18,2006.18,220.12)

"BLD",6453,4,"APDD",2006.18,2006.18,220.13)

"BLD",6453,4,"APDD",2006.18,2006.18,221.01)

"BLD",6453,4,"APDD",2006.18,2006.18,221.02)

"BLD",6453,4,"APDD",2006.18,2006.18,221.03)

"BLD",6453,4,"APDD",2006.18,2006.18,221.04)

"BLD",6453,4,"APDD",2006.18,2006.18,221.05)

"BLD",6453,4,"APDD",2006.18,2006.18,221.06)

"BLD",6453,4,"APDD",2006.18,2006.18,221.07)

"BLD",6453,4,"APDD",2006.18,2006.18,221.08)

"BLD",6453,4,"APDD",2006.18,2006.18,221.09)

"BLD",6453,4,"APDD",2006.18,2006.18,221.1)

"BLD",6453,4,"APDD",2006.18,2006.18,222.01)

"BLD",6453,4,"APDD",2006.18,2006.18,222.02)

"BLD",6453,4,"APDD",2006.18,2006.18,222.03)

"BLD",6453,4,"APDD",2006.18,2006.18,222.04)

"BLD",6453,4,"APDD",2006.18,2006.18,222.05)

"BLD",6453,4,"APDD",2006.81,2006.81)

"BLD",6453,4,"APDD",2006.81,2006.81,5)

"BLD",6453,4,"APDD",2006.81,2006.81,5.3)

"BLD",6453,4,"APDD",2006.81,2006.81,5.5)

"BLD",6453,4,"APDD",2006.81,2006.81,5.7)

"BLD",6453,4,"APDD",2006.81,2006.81,5.9)

"BLD",6453,4,"APDD",2006.81,2006.81,9)

"BLD",6453,4,"APDD",2006.81,2006.81,9.3)

"BLD",6453,4,"APDD",2006.81,2006.81,9.5)

"BLD",6453,4,"APDD",2006.81,2006.81,9.7)

"BLD",6453,4,"APDD",2006.81,2006.81,9.9)

"BLD",6453,4,"B",2005,2005)

"BLD",6453,4,"B",2005.1,2005.1)

"BLD",6453,4,"B",2005.87,2005.87)

"BLD",6453,4,"B",2005.88,2005.88)

"BLD",6453,4,"B",2006.18,2006.18)

"BLD",6453,4,"B",2006.81,2006.81)

"BLD",6453,6.3)
163
"BLD",6453,"ABNS",0)
^9.66A^^
"BLD",6453,"ABPKG")
n^n
"BLD",6453,"INI")
PRE^MAGIPS93
"BLD",6453,"INID")
n^n^n
"BLD",6453,"INIT")
POS^MAGIPS93
"BLD",6453,"KRN",0)
^9.67PA^8989.52^19
"BLD",6453,"KRN",.4,0)
.4
"BLD",6453,"KRN",.4,"NM",0)
^9.68A^^
"BLD",6453,"KRN",.401,0)
.401
"BLD",6453,"KRN",.402,0)
.402
"BLD",6453,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",6453,"KRN",.402,"NM",1,0)
MAG REASON EDIT    FILE #2005.88^2005.88^0
"BLD",6453,"KRN",.402,"NM","B","MAG REASON EDIT    FILE #2005.88",1)

"BLD",6453,"KRN",.403,0)
.403
"BLD",6453,"KRN",.5,0)
.5
"BLD",6453,"KRN",.5,"NM",0)
^9.68A^^0
"BLD",6453,"KRN",.84,0)
.84
"BLD",6453,"KRN",.84,"NM",0)
^9.68A^62^62
"BLD",6453,"KRN",.84,"NM",1,0)
20050000.001^^0
"BLD",6453,"KRN",.84,"NM",2,0)
20050000.002^^0
"BLD",6453,"KRN",.84,"NM",3,0)
20050000.003^^0
"BLD",6453,"KRN",.84,"NM",4,0)
20050000.008^^0
"BLD",6453,"KRN",.84,"NM",5,0)
20050000.009^^0
"BLD",6453,"KRN",.84,"NM",6,0)
20050000.004^^0
"BLD",6453,"KRN",.84,"NM",7,0)
20050000.005^^0
"BLD",6453,"KRN",.84,"NM",8,0)
20050000.006^^0
"BLD",6453,"KRN",.84,"NM",9,0)
20050000.011^^0
"BLD",6453,"KRN",.84,"NM",10,0)
20050000.012^^0
"BLD",6453,"KRN",.84,"NM",11,0)
20050000.013^^0
"BLD",6453,"KRN",.84,"NM",12,0)
20050000.014^^0
"BLD",6453,"KRN",.84,"NM",13,0)
20050000.015^^0
"BLD",6453,"KRN",.84,"NM",14,0)
20050000.016^^0
"BLD",6453,"KRN",.84,"NM",15,0)
20050000.017^^0
"BLD",6453,"KRN",.84,"NM",16,0)
20050000.018^^0
"BLD",6453,"KRN",.84,"NM",17,0)
20050000.019^^0
"BLD",6453,"KRN",.84,"NM",18,0)
20050000.01^^0
"BLD",6453,"KRN",.84,"NM",19,0)
20050000.02^^0
"BLD",6453,"KRN",.84,"NM",20,0)
20050000.021^^0
"BLD",6453,"KRN",.84,"NM",21,0)
20050000.022^^0
"BLD",6453,"KRN",.84,"NM",22,0)
20050000.023^^0
"BLD",6453,"KRN",.84,"NM",23,0)
20050000.024^^0
"BLD",6453,"KRN",.84,"NM",24,0)
20050005.001^^0
"BLD",6453,"KRN",.84,"NM",25,0)
20050000.025^^0
"BLD",6453,"KRN",.84,"NM",26,0)
20050005.002^^0
"BLD",6453,"KRN",.84,"NM",27,0)
20050005.003^^0
"BLD",6453,"KRN",.84,"NM",28,0)
20050005.004^^0
"BLD",6453,"KRN",.84,"NM",29,0)
20050005.005^^0
"BLD",6453,"KRN",.84,"NM",30,0)
20050005.006^^0
"BLD",6453,"KRN",.84,"NM",31,0)
20050005.007^^0
"BLD",6453,"KRN",.84,"NM",32,0)
20050005.008^^0
"BLD",6453,"KRN",.84,"NM",33,0)
20050005.009^^0
"BLD",6453,"KRN",.84,"NM",34,0)
20050005.01^^0
"BLD",6453,"KRN",.84,"NM",35,0)
20050005.011^^0
"BLD",6453,"KRN",.84,"NM",36,0)
20050005.012^^0
"BLD",6453,"KRN",.84,"NM",37,0)
20050000.026^^0
"BLD",6453,"KRN",.84,"NM",38,0)
20050000.027^^0
"BLD",6453,"KRN",.84,"NM",39,0)
20050005.013^^0
"BLD",6453,"KRN",.84,"NM",40,0)
20050005.014^^0
"BLD",6453,"KRN",.84,"NM",41,0)
20050000.028^^0
"BLD",6453,"KRN",.84,"NM",42,0)
20050000.029^^0
"BLD",6453,"KRN",.84,"NM",43,0)
20050000.03^^0
"BLD",6453,"KRN",.84,"NM",44,0)
20050000.031^^0
"BLD",6453,"KRN",.84,"NM",45,0)
20050000.032^^0
"BLD",6453,"KRN",.84,"NM",46,0)
20050000.033^^0
"BLD",6453,"KRN",.84,"NM",47,0)
20050000.034^^0
"BLD",6453,"KRN",.84,"NM",48,0)
20050000.035^^0
"BLD",6453,"KRN",.84,"NM",49,0)
20050000.036^^0
"BLD",6453,"KRN",.84,"NM",50,0)
20050000.037^^0
"BLD",6453,"KRN",.84,"NM",51,0)
20050000.038^^0
"BLD",6453,"KRN",.84,"NM",52,0)
20050000.039^^0
"BLD",6453,"KRN",.84,"NM",53,0)
20050000.04^^0
"BLD",6453,"KRN",.84,"NM",54,0)
20050000.041^^0
"BLD",6453,"KRN",.84,"NM",55,0)
20050000.042^^0
"BLD",6453,"KRN",.84,"NM",56,0)
20050000.043^^0
"BLD",6453,"KRN",.84,"NM",57,0)
20050000.044^^0
"BLD",6453,"KRN",.84,"NM",58,0)
20050000.045^^0
"BLD",6453,"KRN",.84,"NM",59,0)
20050000.046^^0
"BLD",6453,"KRN",.84,"NM",60,0)
20050000.047^^0
"BLD",6453,"KRN",.84,"NM",61,0)
20050000.048^^0
"BLD",6453,"KRN",.84,"NM",62,0)
20050000.049^^0
"BLD",6453,"KRN",.84,"NM","B",20050000.001,1)

"BLD",6453,"KRN",.84,"NM","B",20050000.002,2)

"BLD",6453,"KRN",.84,"NM","B",20050000.003,3)

"BLD",6453,"KRN",.84,"NM","B",20050000.004,6)

"BLD",6453,"KRN",.84,"NM","B",20050000.005,7)

"BLD",6453,"KRN",.84,"NM","B",20050000.006,8)

"BLD",6453,"KRN",.84,"NM","B",20050000.008,4)

"BLD",6453,"KRN",.84,"NM","B",20050000.009,5)

"BLD",6453,"KRN",.84,"NM","B",20050000.01,18)

"BLD",6453,"KRN",.84,"NM","B",20050000.011,9)

"BLD",6453,"KRN",.84,"NM","B",20050000.012,10)

"BLD",6453,"KRN",.84,"NM","B",20050000.013,11)

"BLD",6453,"KRN",.84,"NM","B",20050000.014,12)

"BLD",6453,"KRN",.84,"NM","B",20050000.015,13)

"BLD",6453,"KRN",.84,"NM","B",20050000.016,14)

"BLD",6453,"KRN",.84,"NM","B",20050000.017,15)

"BLD",6453,"KRN",.84,"NM","B",20050000.018,16)

"BLD",6453,"KRN",.84,"NM","B",20050000.019,17)

"BLD",6453,"KRN",.84,"NM","B",20050000.02,19)

"BLD",6453,"KRN",.84,"NM","B",20050000.021,20)

"BLD",6453,"KRN",.84,"NM","B",20050000.022,21)

"BLD",6453,"KRN",.84,"NM","B",20050000.023,22)

"BLD",6453,"KRN",.84,"NM","B",20050000.024,23)

"BLD",6453,"KRN",.84,"NM","B",20050000.025,25)

"BLD",6453,"KRN",.84,"NM","B",20050000.026,37)

"BLD",6453,"KRN",.84,"NM","B",20050000.027,38)

"BLD",6453,"KRN",.84,"NM","B",20050000.028,41)

"BLD",6453,"KRN",.84,"NM","B",20050000.029,42)

"BLD",6453,"KRN",.84,"NM","B",20050000.03,43)

"BLD",6453,"KRN",.84,"NM","B",20050000.031,44)

"BLD",6453,"KRN",.84,"NM","B",20050000.032,45)

"BLD",6453,"KRN",.84,"NM","B",20050000.033,46)

"BLD",6453,"KRN",.84,"NM","B",20050000.034,47)

"BLD",6453,"KRN",.84,"NM","B",20050000.035,48)

"BLD",6453,"KRN",.84,"NM","B",20050000.036,49)

"BLD",6453,"KRN",.84,"NM","B",20050000.037,50)

"BLD",6453,"KRN",.84,"NM","B",20050000.038,51)

"BLD",6453,"KRN",.84,"NM","B",20050000.039,52)

"BLD",6453,"KRN",.84,"NM","B",20050000.04,53)

"BLD",6453,"KRN",.84,"NM","B",20050000.041,54)

"BLD",6453,"KRN",.84,"NM","B",20050000.042,55)

"BLD",6453,"KRN",.84,"NM","B",20050000.043,56)

"BLD",6453,"KRN",.84,"NM","B",20050000.044,57)

"BLD",6453,"KRN",.84,"NM","B",20050000.045,58)

"BLD",6453,"KRN",.84,"NM","B",20050000.046,59)

"BLD",6453,"KRN",.84,"NM","B",20050000.047,60)

"BLD",6453,"KRN",.84,"NM","B",20050000.048,61)

"BLD",6453,"KRN",.84,"NM","B",20050000.049,62)

"BLD",6453,"KRN",.84,"NM","B",20050005.001,24)

"BLD",6453,"KRN",.84,"NM","B",20050005.002,26)

"BLD",6453,"KRN",.84,"NM","B",20050005.003,27)

"BLD",6453,"KRN",.84,"NM","B",20050005.004,28)

"BLD",6453,"KRN",.84,"NM","B",20050005.005,29)

"BLD",6453,"KRN",.84,"NM","B",20050005.006,30)

"BLD",6453,"KRN",.84,"NM","B",20050005.007,31)

"BLD",6453,"KRN",.84,"NM","B",20050005.008,32)

"BLD",6453,"KRN",.84,"NM","B",20050005.009,33)

"BLD",6453,"KRN",.84,"NM","B",20050005.01,34)

"BLD",6453,"KRN",.84,"NM","B",20050005.011,35)

"BLD",6453,"KRN",.84,"NM","B",20050005.012,36)

"BLD",6453,"KRN",.84,"NM","B",20050005.013,39)

"BLD",6453,"KRN",.84,"NM","B",20050005.014,40)

"BLD",6453,"KRN",3.6,0)
3.6
"BLD",6453,"KRN",3.8,0)
3.8
"BLD",6453,"KRN",9.2,0)
9.2
"BLD",6453,"KRN",9.8,0)
9.8
"BLD",6453,"KRN",9.8,"NM",0)
^9.68A^61^57
"BLD",6453,"KRN",9.8,"NM",1,0)
MAGGA01^^0^B29307935
"BLD",6453,"KRN",9.8,"NM",3,0)
MAGSIXG1^^0^B36487191
"BLD",6453,"KRN",9.8,"NM",4,0)
MAGSIXG2^^0^B63440737
"BLD",6453,"KRN",9.8,"NM",5,0)
MAGUERR^^0^B24572740
"BLD",6453,"KRN",9.8,"NM",6,0)
MAGUTL01^^0^B28612084
"BLD",6453,"KRN",9.8,"NM",7,0)
MAGUTL02^^0^B48311130
"BLD",6453,"KRN",9.8,"NM",8,0)
MAGUTL03^^0^B11647866
"BLD",6453,"KRN",9.8,"NM",9,0)
MAGGA02^^0^B57822621
"BLD",6453,"KRN",9.8,"NM",10,0)
MAGUXRF^^0^B41195502
"BLD",6453,"KRN",9.8,"NM",11,0)
MAGUTL04^^0^B23169366
"BLD",6453,"KRN",9.8,"NM",12,0)
MAGUERR1^^0^B25613179
"BLD",6453,"KRN",9.8,"NM",13,0)
MAGUTL05^^0^B18410909
"BLD",6453,"KRN",9.8,"NM",14,0)
MAGGTU4^^0^B53401008
"BLD",6453,"KRN",9.8,"NM",15,0)
MAGGTU4C^^0^B5489850
"BLD",6453,"KRN",9.8,"NM",16,0)
MAGGTU4D^^0^B5495655
"BLD",6453,"KRN",9.8,"NM",17,0)
MAGGTU4T^^0^B5490003
"BLD",6453,"KRN",9.8,"NM",18,0)
MAGGTU4L^^0^B4501110
"BLD",6453,"KRN",9.8,"NM",20,0)
MAGGTIA1^^0^B33003499
"BLD",6453,"KRN",9.8,"NM",21,0)
MAGGSIA^^0^B34720134
"BLD",6453,"KRN",9.8,"NM",23,0)
MAGGTU41^^0^B22378971
"BLD",6453,"KRN",9.8,"NM",24,0)
MAGGTU42^^0^B89107061
"BLD",6453,"KRN",9.8,"NM",25,0)
MAGGTAU^^0^B66867957
"BLD",6453,"KRN",9.8,"NM",27,0)
MAGGTSYS^^0^B11574384
"BLD",6453,"KRN",9.8,"NM",28,0)
MAGGTU31^^0^B41847617
"BLD",6453,"KRN",9.8,"NM",29,0)
MAGGI11^^0^B19558450
"BLD",6453,"KRN",9.8,"NM",30,0)
MAGGI12^^0^B30285951
"BLD",6453,"KRN",9.8,"NM",31,0)
MAGGA03^^0^B45753507
"BLD",6453,"KRN",9.8,"NM",32,0)
MAGGI13^^0^B36748899
"BLD",6453,"KRN",9.8,"NM",33,0)
MAGGAII^^0^B118384476
"BLD",6453,"KRN",9.8,"NM",34,0)
MAGGA02A^^0^B40367747
"BLD",6453,"KRN",9.8,"NM",35,0)
MAGGTID^^0^B47456559
"BLD",6453,"KRN",9.8,"NM",36,0)
MAGGI14^^0^B39084079
"BLD",6453,"KRN",9.8,"NM",37,0)
MAGGA03A^^0^B24276061
"BLD",6453,"KRN",9.8,"NM",38,0)
MAGGNTI^^0^B37753394
"BLD",6453,"KRN",9.8,"NM",39,0)
MAGGSIA1^^0^B40524442
"BLD",6453,"KRN",9.8,"NM",40,0)
MAGGSQI^^0^B71964647
"BLD",6453,"KRN",9.8,"NM",41,0)
MAGGTIG^^0^B58640406
"BLD",6453,"KRN",9.8,"NM",42,0)
MAGGTRPT^^0^B43638944
"BLD",6453,"KRN",9.8,"NM",43,0)
MAGGTU3^^0^B34334075
"BLD",6453,"KRN",9.8,"NM",44,0)
MAGGTPT1^^0^B37889156
"BLD",6453,"KRN",9.8,"NM",45,0)
MAGGTU7^^0^B23284378
"BLD",6453,"KRN",9.8,"NM",46,0)
MAGGTUX^^0^B85905158
"BLD",6453,"KRN",9.8,"NM",47,0)
MAGSIXG3^^0^B65195475
"BLD",6453,"KRN",9.8,"NM",48,0)
MAGGSFLT^^0^B33107414
"BLD",6453,"KRN",9.8,"NM",49,0)
MAGKIDS^^0^B30231662
"BLD",6453,"KRN",9.8,"NM",50,0)
MAGKIDS1^^0^B40480221
"BLD",6453,"KRN",9.8,"NM",51,0)
MAGGSFL1^^0^B17534133
"BLD",6453,"KRN",9.8,"NM",52,0)
MAGSIXG4^^0^B12614135
"BLD",6453,"KRN",9.8,"NM",53,0)
MAGUTL06^^0^B18816077
"BLD",6453,"KRN",9.8,"NM",54,0)
MAGGTUP^^0^B23999096
"BLD",6453,"KRN",9.8,"NM",55,0)
MAGUTL07^^0^B22761121
"BLD",6453,"KRN",9.8,"NM",56,0)
MAGUTL08^^0^B26051030
"BLD",6453,"KRN",9.8,"NM",57,0)
MAGGA04^^0^B10448835
"BLD",6453,"KRN",9.8,"NM",58,0)
MAGGTU6^^0^B51862098
"BLD",6453,"KRN",9.8,"NM",59,0)
MAGUTL10^^0^B8165500
"BLD",6453,"KRN",9.8,"NM",60,0)
MAGGTRAI^^0^B29892001
"BLD",6453,"KRN",9.8,"NM",61,0)
MAGGA03U^^0^B15820919
"BLD",6453,"KRN",9.8,"NM","B","MAGGA01",1)

"BLD",6453,"KRN",9.8,"NM","B","MAGGA02",9)

"BLD",6453,"KRN",9.8,"NM","B","MAGGA02A",34)

"BLD",6453,"KRN",9.8,"NM","B","MAGGA03",31)

"BLD",6453,"KRN",9.8,"NM","B","MAGGA03A",37)

"BLD",6453,"KRN",9.8,"NM","B","MAGGA03U",61)

"BLD",6453,"KRN",9.8,"NM","B","MAGGA04",57)

"BLD",6453,"KRN",9.8,"NM","B","MAGGAII",33)

"BLD",6453,"KRN",9.8,"NM","B","MAGGI11",29)

"BLD",6453,"KRN",9.8,"NM","B","MAGGI12",30)

"BLD",6453,"KRN",9.8,"NM","B","MAGGI13",32)

"BLD",6453,"KRN",9.8,"NM","B","MAGGI14",36)

"BLD",6453,"KRN",9.8,"NM","B","MAGGNTI",38)

"BLD",6453,"KRN",9.8,"NM","B","MAGGSFL1",51)

"BLD",6453,"KRN",9.8,"NM","B","MAGGSFLT",48)

"BLD",6453,"KRN",9.8,"NM","B","MAGGSIA",21)

"BLD",6453,"KRN",9.8,"NM","B","MAGGSIA1",39)

"BLD",6453,"KRN",9.8,"NM","B","MAGGSQI",40)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTAU",25)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTIA1",20)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTID",35)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTIG",41)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTPT1",44)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTRAI",60)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTRPT",42)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTSYS",27)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU3",43)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU31",28)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU4",14)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU41",23)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU42",24)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU4C",15)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU4D",16)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU4L",18)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU4T",17)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU6",58)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTU7",45)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTUP",54)

"BLD",6453,"KRN",9.8,"NM","B","MAGGTUX",46)

"BLD",6453,"KRN",9.8,"NM","B","MAGKIDS",49)

"BLD",6453,"KRN",9.8,"NM","B","MAGKIDS1",50)

"BLD",6453,"KRN",9.8,"NM","B","MAGSIXG1",3)

"BLD",6453,"KRN",9.8,"NM","B","MAGSIXG2",4)

"BLD",6453,"KRN",9.8,"NM","B","MAGSIXG3",47)

"BLD",6453,"KRN",9.8,"NM","B","MAGSIXG4",52)

"BLD",6453,"KRN",9.8,"NM","B","MAGUERR",5)

"BLD",6453,"KRN",9.8,"NM","B","MAGUERR1",12)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL01",6)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL02",7)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL03",8)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL04",11)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL05",13)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL06",53)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL07",55)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL08",56)

"BLD",6453,"KRN",9.8,"NM","B","MAGUTL10",59)

"BLD",6453,"KRN",9.8,"NM","B","MAGUXRF",10)

"BLD",6453,"KRN",19,0)
19
"BLD",6453,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",6453,"KRN",19,"NM",1,0)
MAG REASON EDIT^^0^
"BLD",6453,"KRN",19,"NM",2,0)
MAG CLIENT VERSION REPORT^^0
"BLD",6453,"KRN",19,"NM",3,0)
MAG SYS MENU^^2
"BLD",6453,"KRN",19,"NM",4,0)
MAG REPORT MENU^^2
"BLD",6453,"KRN",19,"NM","B","MAG CLIENT VERSION REPORT",2)

"BLD",6453,"KRN",19,"NM","B","MAG REASON EDIT",1)

"BLD",6453,"KRN",19,"NM","B","MAG REPORT MENU",4)

"BLD",6453,"KRN",19,"NM","B","MAG SYS MENU",3)

"BLD",6453,"KRN",19.1,0)
19.1
"BLD",6453,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",6453,"KRN",19.1,"NM",1,0)
MAG EDIT^^0
"BLD",6453,"KRN",19.1,"NM",2,0)
MAG PAT PHOTO ONLY^^0
"BLD",6453,"KRN",19.1,"NM","B","MAG EDIT",1)

"BLD",6453,"KRN",19.1,"NM","B","MAG PAT PHOTO ONLY",2)

"BLD",6453,"KRN",101,0)
101
"BLD",6453,"KRN",409.61,0)
409.61
"BLD",6453,"KRN",771,0)
771
"BLD",6453,"KRN",870,0)
870
"BLD",6453,"KRN",8989.51,0)
8989.51
"BLD",6453,"KRN",8989.52,0)
8989.52
"BLD",6453,"KRN",8994,0)
8994
"BLD",6453,"KRN",8994,"NM",0)
^9.68A^15^14
"BLD",6453,"KRN",8994,"NM",2,0)
MAG4 PAT GET IMAGES^^0
"BLD",6453,"KRN",8994,"NM",3,0)
MAG4 IMAGE LIST^^0
"BLD",6453,"KRN",8994,"NM",4,0)
MAGG IMAGE SET PROPERTIES^^0
"BLD",6453,"KRN",8994,"NM",5,0)
MAGG REASON LIST^^0
"BLD",6453,"KRN",8994,"NM",6,0)
MAGG IMAGE GET PROPERTIES^^0
"BLD",6453,"KRN",8994,"NM",7,0)
MAG4 VERSION CHECK^^0
"BLD",6453,"KRN",8994,"NM",8,0)
MAGG WRKS UPDATES^^0
"BLD",6453,"KRN",8994,"NM",9,0)
MAGG REASON GET PROPERTIES^^0
"BLD",6453,"KRN",8994,"NM",10,0)
MAGG IMAGE STATISTICS^^0
"BLD",6453,"KRN",8994,"NM",11,0)
MAG4 FILTER SAVE^^0
"BLD",6453,"KRN",8994,"NM",12,0)
MAGG IMAGE LOCK^^0
"BLD",6453,"KRN",8994,"NM",13,0)
MAGG IMAGE UNLOCK^^0
"BLD",6453,"KRN",8994,"NM",14,0)
MAGGRADIMAGE^^0
"BLD",6453,"KRN",8994,"NM",15,0)
MAGG CAPTURE USERS^^0
"BLD",6453,"KRN",8994,"NM","B","MAG4 FILTER SAVE",11)

"BLD",6453,"KRN",8994,"NM","B","MAG4 IMAGE LIST",3)

"BLD",6453,"KRN",8994,"NM","B","MAG4 PAT GET IMAGES",2)

"BLD",6453,"KRN",8994,"NM","B","MAG4 VERSION CHECK",7)

"BLD",6453,"KRN",8994,"NM","B","MAGG CAPTURE USERS",15)

"BLD",6453,"KRN",8994,"NM","B","MAGG IMAGE GET PROPERTIES",6)

"BLD",6453,"KRN",8994,"NM","B","MAGG IMAGE LOCK",12)

"BLD",6453,"KRN",8994,"NM","B","MAGG IMAGE SET PROPERTIES",4)

"BLD",6453,"KRN",8994,"NM","B","MAGG IMAGE STATISTICS",10)

"BLD",6453,"KRN",8994,"NM","B","MAGG IMAGE UNLOCK",13)

"BLD",6453,"KRN",8994,"NM","B","MAGG REASON GET PROPERTIES",9)

"BLD",6453,"KRN",8994,"NM","B","MAGG REASON LIST",5)

"BLD",6453,"KRN",8994,"NM","B","MAGG WRKS UPDATES",8)

"BLD",6453,"KRN",8994,"NM","B","MAGGRADIMAGE",14)

"BLD",6453,"KRN","B",.4,.4)

"BLD",6453,"KRN","B",.401,.401)

"BLD",6453,"KRN","B",.402,.402)

"BLD",6453,"KRN","B",.403,.403)

"BLD",6453,"KRN","B",.5,.5)

"BLD",6453,"KRN","B",.84,.84)

"BLD",6453,"KRN","B",3.6,3.6)

"BLD",6453,"KRN","B",3.8,3.8)

"BLD",6453,"KRN","B",9.2,9.2)

"BLD",6453,"KRN","B",9.8,9.8)

"BLD",6453,"KRN","B",19,19)

"BLD",6453,"KRN","B",19.1,19.1)

"BLD",6453,"KRN","B",101,101)

"BLD",6453,"KRN","B",409.61,409.61)

"BLD",6453,"KRN","B",771,771)

"BLD",6453,"KRN","B",870,870)

"BLD",6453,"KRN","B",8989.51,8989.51)

"BLD",6453,"KRN","B",8989.52,8989.52)

"BLD",6453,"KRN","B",8994,8994)

"BLD",6453,"PRE")
MAGIPS93
"BLD",6453,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",6453,"QUES",0)
^9.62^3^3
"BLD",6453,"QUES",1,0)
POS05-SCHEDULEAT
"BLD",6453,"QUES",1,1)
D^NOW::AFNRX
"BLD",6453,"QUES",1,"A")
Schedule the image indexing task at
"BLD",6453,"QUES",1,"B")
TODAY@21:00
"BLD",6453,"QUES",1,"M")
K:'$G(XPDQUES("POS02-MODE")) DIR
"BLD",6453,"QUES",1,"Q")
Enter the date/time when the image indexing task will start.
"BLD",6453,"QUES",1,"Q1",0)
^^5^5^3090224^^
"BLD",6453,"QUES",1,"Q1",1,0)
One new index is added to the IMAGE file (#2005) and 3 - to the IMAGE
"BLD",6453,"QUES",1,"Q1",2,0)
AUDIT file (#2005.1). Since the process of building these indexes takes 
"BLD",6453,"QUES",1,"Q1",3,0)
significant time and puts additional load on the system, a separate task
"BLD",6453,"QUES",1,"Q1",4,0)
can be scheduled for this purpose. It is strongly recommended to schedule
"BLD",6453,"QUES",1,"Q1",5,0)
it for off-hours.
"BLD",6453,"QUES",2,0)
POS10-SUSPEND
"BLD",6453,"QUES",2,1)
Y
"BLD",6453,"QUES",2,"A")
Suspend the image indexing task during business hours (7am-8pm)
"BLD",6453,"QUES",2,"B")
YES
"BLD",6453,"QUES",2,"M")
K:'$G(XPDQUES("POS02-MODE")) DIR
"BLD",6453,"QUES",2,"Q")
Answer Yes if you want the task to be suspended during the business hours.
"BLD",6453,"QUES",2,"Q1",0)
^^7^7^3090224^
"BLD",6453,"QUES",2,"Q1",1,0)
You can instruct the image indexing task to automatically suspend itself
"BLD",6453,"QUES",2,"Q1",2,0)
during busy business hours (7am - 8pm). This way, it will not affect the
"BLD",6453,"QUES",2,"Q1",3,0)
VistA response time.
"BLD",6453,"QUES",2,"Q1",4,0)
  
"BLD",6453,"QUES",2,"Q1",5,0)
However, please remember that most of the new functionality introduced by
"BLD",6453,"QUES",2,"Q1",6,0)
the patch MAG*3*93 (e.g. image verification) cannot be used until the 
"BLD",6453,"QUES",2,"Q1",7,0)
indexing task finishes.
"BLD",6453,"QUES",3,0)
POS02-MODE
"BLD",6453,"QUES",3,1)
Y
"BLD",6453,"QUES",3,"A")
Schedule a separate task that will build the indexes
"BLD",6453,"QUES",3,"B")
NO
"BLD",6453,"QUES",3,"M")
D NDXHLP^MAGIPS93(.DIR,1) K:'$$TM^%ZTLOAD DIR,XPDQUES("POS02-MODE")
"BLD",6453,"QUES",3,"Q")

"BLD",6453,"QUES","B","POS02-MODE",3)

"BLD",6453,"QUES","B","POS05-SCHEDULEAT",1)

"BLD",6453,"QUES","B","POS10-SUSPEND",2)

"BLD",6453,"REQB",0)
^9.611^4^3
"BLD",6453,"REQB",2,0)
MAG*3.0*96^2
"BLD",6453,"REQB",3,0)
MAG*3.0*72^2
"BLD",6453,"REQB",4,0)
MAG*3.0*95^2
"BLD",6453,"REQB","B","MAG*3.0*72",3)

"BLD",6453,"REQB","B","MAG*3.0*95",4)

"BLD",6453,"REQB","B","MAG*3.0*96",2)

"DATA",2005.88,1,0)
Clinical care for the patient whose images are being downloaded^CP^^1
"DATA",2005.88,2,0)
Clinical care for other VA patients^CP^^2
"DATA",2005.88,3,0)
For use in approved research by VA staff^CP^^3
"DATA",2005.88,4,0)
For approved teaching purposes by VA staff^CP^^4
"DATA",2005.88,5,0)
For use in approved VA publications^CP^^5
"DATA",2005.88,6,0)
Authorized release of medical records or health information (ROI)^CP^^6
"DATA",2005.88,7,0)
Corrupt image^D^^7
"DATA",2005.88,8,0)
Low quality image^DS^^8
"DATA",2005.88,9,0)
Wrong case/exam/accession number^DS^^9
"DATA",2005.88,10,0)
Wrong note title^D^^10
"DATA",2005.88,11,0)
Wrong patient^D^^11
"DATA",2005.88,12,0)
Image is incorrectly included in an image group^S^^12
"DATA",2005.88,13,0)
All images were removed from the group^D^^13
"DATA",2005.88,14,0)
HIMS document correction^DS^^14
"DATA",2005.88,14,1,0)
^^1^1^3090804^
"DATA",2005.88,14,1,1,0)
When a document or image needs to have the patient or image data corrected.
"FIA",2005)
IMAGE
"FIA",2005,0)
^MAG(2005,
"FIA",2005,0,0)
2005I
"FIA",2005,0,1)
y^n^p^^^^n^^n
"FIA",2005,0,10)

"FIA",2005,0,11)

"FIA",2005,0,"RLRO")

"FIA",2005,0,"VR")
3.0^MAG
"FIA",2005,2005)
1
"FIA",2005,2005,.01)

"FIA",2005,2005,4)

"FIA",2005,2005,8.1)

"FIA",2005,2005,14)

"FIA",2005,2005,99)

"FIA",2005,2005,112)

"FIA",2005,2005,112.1)

"FIA",2005,2005,112.2)

"FIA",2005,2005,113)

"FIA",2005,2005,113.1)

"FIA",2005,2005,113.2)

"FIA",2005,2005,113.3)

"FIA",2005,2005,114)

"FIA",2005,2005.04)
1
"FIA",2005,2005.04,.01)

"FIA",2005,2005.099)
0
"FIA",2005.1)
IMAGE AUDIT
"FIA",2005.1,0)
^MAG(2005.1,
"FIA",2005.1,0,0)
2005.1I
"FIA",2005.1,0,1)
y^n^p^^^^n^^n
"FIA",2005.1,0,10)

"FIA",2005.1,0,11)

"FIA",2005.1,0,"RLRO")

"FIA",2005.1,0,"VR")
3.0^MAG
"FIA",2005.1,2005.1)
1
"FIA",2005.1,2005.1,.01)

"FIA",2005.1,2005.1,8.1)

"FIA",2005.1,2005.1,14)

"FIA",2005.1,2005.1,99)

"FIA",2005.1,2005.1,112)

"FIA",2005.1,2005.1,112.1)

"FIA",2005.1,2005.1,112.2)

"FIA",2005.1,2005.1,113)

"FIA",2005.1,2005.1,113.1)

"FIA",2005.1,2005.1,113.2)

"FIA",2005.1,2005.1,113.3)

"FIA",2005.1,2005.1,114)

"FIA",2005.1,2005.199)
0
"FIA",2005.87)
IMAGE LIST FILTERS
"FIA",2005.87,0)
^MAG(2005.87,
"FIA",2005.87,0,0)
2005.87I
"FIA",2005.87,0,1)
y^n^p^^^^n^^n
"FIA",2005.87,0,10)

"FIA",2005.87,0,11)

"FIA",2005.87,0,"RLRO")

"FIA",2005.87,0,"VR")
3.0^MAG
"FIA",2005.87,2005.87)
1
"FIA",2005.87,2005.87,10)

"FIA",2005.87,2005.87,11)

"FIA",2005.87,2005.87,12)

"FIA",2005.87,2005.87,13)

"FIA",2005.87,2005.87,14)

"FIA",2005.87,2005.87,15)

"FIA",2005.87,2005.87,16)

"FIA",2005.88)
MAG REASON
"FIA",2005.88,0)
^MAG(2005.88,
"FIA",2005.88,0,0)
2005.88I
"FIA",2005.88,0,1)
y^y^f^^n^^y^o^n
"FIA",2005.88,0,10)

"FIA",2005.88,0,11)
I $P($G(^(0)),"^",4)>0
"FIA",2005.88,0,"RLRO")

"FIA",2005.88,0,"VR")
3.0^MAG
"FIA",2005.88,2005.88)
0
"FIA",2005.88,2005.881)
0
"FIA",2006.18)
IMAGING USER PREFERENCE
"FIA",2006.18,0)
^MAG(2006.18,
"FIA",2006.18,0,0)
2006.18
"FIA",2006.18,0,1)
y^n^p^^^^n^^n
"FIA",2006.18,0,10)

"FIA",2006.18,0,11)

"FIA",2006.18,0,"RLRO")

"FIA",2006.18,0,"VR")
3.0^MAG
"FIA",2006.18,2006.18)
1
"FIA",2006.18,2006.18,220.01)

"FIA",2006.18,2006.18,220.02)

"FIA",2006.18,2006.18,220.03)

"FIA",2006.18,2006.18,220.04)

"FIA",2006.18,2006.18,220.05)

"FIA",2006.18,2006.18,220.06)

"FIA",2006.18,2006.18,220.07)

"FIA",2006.18,2006.18,220.08)

"FIA",2006.18,2006.18,220.09)

"FIA",2006.18,2006.18,220.1)

"FIA",2006.18,2006.18,220.11)

"FIA",2006.18,2006.18,220.12)

"FIA",2006.18,2006.18,220.13)

"FIA",2006.18,2006.18,221.01)

"FIA",2006.18,2006.18,221.02)

"FIA",2006.18,2006.18,221.03)

"FIA",2006.18,2006.18,221.04)

"FIA",2006.18,2006.18,221.05)

"FIA",2006.18,2006.18,221.06)

"FIA",2006.18,2006.18,221.07)

"FIA",2006.18,2006.18,221.08)

"FIA",2006.18,2006.18,221.09)

"FIA",2006.18,2006.18,221.1)

"FIA",2006.18,2006.18,222.01)

"FIA",2006.18,2006.18,222.02)

"FIA",2006.18,2006.18,222.03)

"FIA",2006.18,2006.18,222.04)

"FIA",2006.18,2006.18,222.05)

"FIA",2006.81)
IMAGING WINDOWS WORKSTATIONS
"FIA",2006.81,0)
^MAG(2006.81,
"FIA",2006.81,0,0)
2006.81
"FIA",2006.81,0,1)
y^n^p^^^^n^^n
"FIA",2006.81,0,10)

"FIA",2006.81,0,11)

"FIA",2006.81,0,"RLRO")

"FIA",2006.81,0,"VR")
3.0^MAG
"FIA",2006.81,2006.81)
1
"FIA",2006.81,2006.81,5)

"FIA",2006.81,2006.81,5.3)

"FIA",2006.81,2006.81,5.5)

"FIA",2006.81,2006.81,5.7)

"FIA",2006.81,2006.81,5.9)

"FIA",2006.81,2006.81,9)

"FIA",2006.81,2006.81,9.3)

"FIA",2006.81,2006.81,9.5)

"FIA",2006.81,2006.81,9.7)

"FIA",2006.81,2006.81,9.9)

"INI")
PRE^MAGIPS93
"INIT")
POS^MAGIPS93
"IX",2005,2005,"ACA",0)
2005^ACA^Populates CAPTURE APPLICATION field (8.1)^MU^^R^IR^I^2005^^^^^A
"IX",2005,2005,"ACA",.1,0)
^^28^28^3090407^
"IX",2005,2005,"ACA",.1,1,0)
This action index populates the CAPTURE 
"IX",2005,2005,"ACA",.1,2,0)
APPLICATION field (8.1) according to the other
"IX",2005,2005,"ACA",.1,3,0)
record data:
"IX",2005,2005,"ACA",.1,4,0)
 
"IX",2005,2005,"ACA",.1,5,0)
  First, it checks the TRACKING ID field (108).
"IX",2005,2005,"ACA",.1,6,0)
  If it is not empty, then the code assumes that 
"IX",2005,2005,"ACA",.1,7,0)
  the record was created by the Import API and 
"IX",2005,2005,"ACA",.1,8,0)
  stores "I" as the internal value of the field
"IX",2005,2005,"ACA",.1,9,0)
  8.1.
"IX",2005,2005,"ACA",.1,10,0)
 
"IX",2005,2005,"ACA",.1,11,0)
  Otherwise, it checks if one of the following 
"IX",2005,2005,"ACA",.1,12,0)
  fields is not empty: PACS UID (60), RADIOLOGY 
"IX",2005,2005,"ACA",.1,13,0)
  REPORT (61), or PACS PROCEDURE (62). If so, 
"IX",2005,2005,"ACA",.1,14,0)
  the code assumes that the record was created
"IX",2005,2005,"ACA",.1,15,0)
  by the DICOM Gateway and stores "D" as the
"IX",2005,2005,"ACA",.1,16,0)
  internal value of the field 8.1.
"IX",2005,2005,"ACA",.1,17,0)
 
"IX",2005,2005,"ACA",.1,18,0)
  Otherwise, the code assumes that the record 
"IX",2005,2005,"ACA",.1,19,0)
  was created by the capture workstation and
"IX",2005,2005,"ACA",.1,20,0)
  stores "C" as the internal value of the 
"IX",2005,2005,"ACA",.1,21,0)
  field 8.1.
"IX",2005,2005,"ACA",.1,22,0)
 
"IX",2005,2005,"ACA",.1,23,0)
The OBJECT NAME field (.01) is added to the index
"IX",2005,2005,"ACA",.1,24,0)
to guarantee that it is always triggered when a
"IX",2005,2005,"ACA",.1,25,0)
record is created (even if all other fields are
"IX",2005,2005,"ACA",.1,26,0)
empty).
"IX",2005,2005,"ACA",.1,27,0)
 
"IX",2005,2005,"ACA",.1,28,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"ACA",1)
D SETCAPP^MAGUXRF(2005,+DA,.X1,.X2)
"IX",2005,2005,"ACA",1.4)

"IX",2005,2005,"ACA",2)
Q
"IX",2005,2005,"ACA",2.4)

"IX",2005,2005,"ACA",11.1,0)
^.114IA^5^5
"IX",2005,2005,"ACA",11.1,1,0)
1^F^2005^108^^^
"IX",2005,2005,"ACA",11.1,2,0)
2^F^2005^60^^^
"IX",2005,2005,"ACA",11.1,3,0)
3^F^2005^61^^^
"IX",2005,2005,"ACA",11.1,4,0)
4^F^2005^62^^^
"IX",2005,2005,"ACA",11.1,5,0)
5^F^2005^.01^^^F
"IX",2005,2005,"AGPD",0)
2005^AGPD^Deleted group members^R^^R^IR^I^2005^^^^^S
"IX",2005,2005,"AGPD",.1,0)
^^11^11^3081219^
"IX",2005,2005,"AGPD",.1,1,0)
This cross-reference lets the user easily get the
"IX",2005,2005,"AGPD",.1,2,0)
list of deleted members of the group. It has the
"IX",2005,2005,"AGPD",.1,3,0)
following structure:
"IX",2005,2005,"AGPD",.1,4,0)
 
"IX",2005,2005,"AGPD",.1,5,0)
  ^MAG(2005,"AGPD",GroupIEN,DeletedMemberIEN)="" 
"IX",2005,2005,"AGPD",.1,6,0)
 
"IX",2005,2005,"AGPD",.1,7,0)
This cross-reference will be used after the IMAGE
"IX",2005,2005,"AGPD",.1,8,0)
AUDIT file (#2005.1) is eliminated and deleted
"IX",2005,2005,"AGPD",.1,9,0)
image entries are merged into the file #2005.
"IX",2005,2005,"AGPD",.1,10,0)
 
"IX",2005,2005,"AGPD",.1,11,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"AGPD",1)
S ^MAG(2005,"AGPD",X(1),DA)=""
"IX",2005,2005,"AGPD",1.4)
S X=($G(X2(2))=12)
"IX",2005,2005,"AGPD",2)
K ^MAG(2005,"AGPD",X(1),DA)
"IX",2005,2005,"AGPD",2.5)
K ^MAG(2005,"AGPD")
"IX",2005,2005,"AGPD",11.1,0)
^.114IA^2^2
"IX",2005,2005,"AGPD",11.1,1,0)
1^F^2005^14^^1^F
"IX",2005,2005,"AGPD",11.1,2,0)
2^F^2005^113^^^
"IX",2005,2005,"APDT",0)
2005^APDT^Procedure Date/Time^R^^R^IR^I^2005^^^^^S
"IX",2005,2005,"APDT",.1,0)
^^6^6^3081006^
"IX",2005,2005,"APDT",.1,1,0)
This index sorts independent and parent images by
"IX",2005,2005,"APDT",.1,2,0)
their procedure dates. Any record that is a child
"IX",2005,2005,"APDT",.1,3,0)
of a parent (i.e. member of a group) is NOT
"IX",2005,2005,"APDT",.1,4,0)
included in the index.
"IX",2005,2005,"APDT",.1,5,0)
 
"IX",2005,2005,"APDT",.1,6,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"APDT",1)
S ^MAG(2005,"APDT",X(2),DA)=""
"IX",2005,2005,"APDT",1.4)
S X='$G(X(1))
"IX",2005,2005,"APDT",2)
K ^MAG(2005,"APDT",X(2),DA)
"IX",2005,2005,"APDT",2.5)
K ^MAG(2005,"APDT")
"IX",2005,2005,"APDT",11.1,0)
^.114IA^2^2
"IX",2005,2005,"APDT",11.1,1,0)
1^F^2005^14^^^
"IX",2005,2005,"APDT",11.1,1,3)

"IX",2005,2005,"APDT",11.1,2,0)
2^F^2005^15^^1^F
"IX",2005,2005,"APDT",11.1,2,3)

"IX",2005,2005,"AUDIT100",0)
2005^AUDIT100^Tracks changes of image fields^MU^^R^I^I^2005^^^^^A
"IX",2005,2005,"AUDIT100",.1,0)
^^5^5^3080626^
"IX",2005,2005,"AUDIT100",.1,1,0)
When values of the referenced fields are updated,
"IX",2005,2005,"AUDIT100",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005,2005,"AUDIT100",.1,3,0)
multiple (99).
"IX",2005,2005,"AUDIT100",.1,4,0)
 
"IX",2005,2005,"AUDIT100",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"AUDIT100",1)
D AUDIT^MAGUXRF(2005,DA_",",";110;112;113;113.3",2005.099,.X1,.X2)
"IX",2005,2005,"AUDIT100",1.4)

"IX",2005,2005,"AUDIT100",2)
Q
"IX",2005,2005,"AUDIT100",11.1,0)
^.114IA^5^5
"IX",2005,2005,"AUDIT100",11.1,1,0)
1^F^2005^.01^^^
"IX",2005,2005,"AUDIT100",11.1,1,3)

"IX",2005,2005,"AUDIT100",11.1,2,0)
2^F^2005^110^^^
"IX",2005,2005,"AUDIT100",11.1,2,3)

"IX",2005,2005,"AUDIT100",11.1,3,0)
3^F^2005^112^^^
"IX",2005,2005,"AUDIT100",11.1,3,3)

"IX",2005,2005,"AUDIT100",11.1,4,0)
4^F^2005^113^^^
"IX",2005,2005,"AUDIT100",11.1,4,3)

"IX",2005,2005,"AUDIT100",11.1,5,0)
5^F^2005^113.3^^^
"IX",2005,2005,"AUDIT100",11.1,5,3)

"IX",2005,2005,"AUDIT2",0)
2005^AUDIT2^Tracks changes of image fields^MU^^R^I^I^2005^^^^^A
"IX",2005,2005,"AUDIT2",.1,0)
^^5^5^3080626^
"IX",2005,2005,"AUDIT2",.1,1,0)
When values of the referenced fields are updated,
"IX",2005,2005,"AUDIT2",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005,2005,"AUDIT2",.1,3,0)
multiple (99).
"IX",2005,2005,"AUDIT2",.1,4,0)
 
"IX",2005,2005,"AUDIT2",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"AUDIT2",1)
D AUDIT^MAGUXRF(2005,DA_",",";10;6;15",2005.099,.X1,.X2)
"IX",2005,2005,"AUDIT2",1.4)

"IX",2005,2005,"AUDIT2",2)
Q
"IX",2005,2005,"AUDIT2",11.1,0)
^.114IA^4^4
"IX",2005,2005,"AUDIT2",11.1,1,0)
1^F^2005^.01^^^
"IX",2005,2005,"AUDIT2",11.1,1,3)

"IX",2005,2005,"AUDIT2",11.1,2,0)
2^F^2005^10^^^
"IX",2005,2005,"AUDIT2",11.1,2,3)

"IX",2005,2005,"AUDIT2",11.1,3,0)
3^F^2005^6^^^
"IX",2005,2005,"AUDIT2",11.1,3,3)

"IX",2005,2005,"AUDIT2",11.1,4,0)
4^F^2005^15^^^
"IX",2005,2005,"AUDIT2",11.1,4,3)

"IX",2005,2005,"AUDIT40",0)
2005^AUDIT40^Tracks changes of image fields^MU^^R^I^I^2005^^^^^A
"IX",2005,2005,"AUDIT40",.1,0)
^^5^5^3080626^
"IX",2005,2005,"AUDIT40",.1,1,0)
When values of the referenced fields are updated,
"IX",2005,2005,"AUDIT40",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005,2005,"AUDIT40",.1,3,0)
multiple (99).
"IX",2005,2005,"AUDIT40",.1,4,0)
 
"IX",2005,2005,"AUDIT40",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005,2005,"AUDIT40",1)
D AUDIT^MAGUXRF(2005,DA_",",";40;42;43;44;45",2005.099,.X1,.X2)
"IX",2005,2005,"AUDIT40",1.4)

"IX",2005,2005,"AUDIT40",2)
Q
"IX",2005,2005,"AUDIT40",11.1,0)
^.114IA^6^6
"IX",2005,2005,"AUDIT40",11.1,1,0)
1^F^2005^.01^^^
"IX",2005,2005,"AUDIT40",11.1,1,3)

"IX",2005,2005,"AUDIT40",11.1,2,0)
2^F^2005^40^^^
"IX",2005,2005,"AUDIT40",11.1,2,3)

"IX",2005,2005,"AUDIT40",11.1,3,0)
3^F^2005^42^^^
"IX",2005,2005,"AUDIT40",11.1,3,3)

"IX",2005,2005,"AUDIT40",11.1,4,0)
4^F^2005^43^^^
"IX",2005,2005,"AUDIT40",11.1,4,3)

"IX",2005,2005,"AUDIT40",11.1,5,0)
5^F^2005^44^^^
"IX",2005,2005,"AUDIT40",11.1,5,3)

"IX",2005,2005,"AUDIT40",11.1,6,0)
6^F^2005^45^^^
"IX",2005,2005,"AUDIT40",11.1,6,3)

"IX",2005,2005.099,"FD",0)
2005.099^FD^Field Number & Date/Time^R^^R^IR^I^2005.099^^^^^LS
"IX",2005,2005.099,"FD",.1,0)
^^5^5^3081217^
"IX",2005,2005.099,"FD",.1,1,0)
This cross-reference is used for searching
"IX",2005,2005.099,"FD",.1,2,0)
previous values of audited fields. See the 
"IX",2005,2005.099,"FD",.1,3,0)
MAGUTL04 routine for more details.
"IX",2005,2005.099,"FD",.1,4,0)
 
"IX",2005,2005.099,"FD",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005,2005.099,"FD",1)
S ^MAG(2005,DA(1),99,"FD",X(1),X(2),DA)=""
"IX",2005,2005.099,"FD",2)
K ^MAG(2005,DA(1),99,"FD",X(1),X(2),DA)
"IX",2005,2005.099,"FD",2.5)
K ^MAG(2005,DA(1),99,"FD")
"IX",2005,2005.099,"FD",11.1,0)
^.114IA^2^2
"IX",2005,2005.099,"FD",11.1,1,0)
1^F^2005.099^.02^^1^F
"IX",2005,2005.099,"FD",11.1,2,0)
2^F^2005.099^.01^^2^F
"IX",2005.1,2005.1,"ACA",0)
2005.1^ACA^Populates CAPTURE APPLICATION field (8.1)^MU^^R^IR^I^2005.1^^^^^A
"IX",2005.1,2005.1,"ACA",.1,0)
^^28^28^3090407^
"IX",2005.1,2005.1,"ACA",.1,1,0)
This action index populates the CAPTURE
"IX",2005.1,2005.1,"ACA",.1,2,0)
APPLICATION field (8.1) according to the other
"IX",2005.1,2005.1,"ACA",.1,3,0)
record data:
"IX",2005.1,2005.1,"ACA",.1,4,0)
 
"IX",2005.1,2005.1,"ACA",.1,5,0)
  First, it checks the TRACKING ID field (108).
"IX",2005.1,2005.1,"ACA",.1,6,0)
  If it is not empty, then the code assumes that
"IX",2005.1,2005.1,"ACA",.1,7,0)
  the record was created by the Import API and
"IX",2005.1,2005.1,"ACA",.1,8,0)
  stores "I" as the internal value of the field
"IX",2005.1,2005.1,"ACA",.1,9,0)
  8.1.
"IX",2005.1,2005.1,"ACA",.1,10,0)
 
"IX",2005.1,2005.1,"ACA",.1,11,0)
  Otherwise, it checks if one of the following
"IX",2005.1,2005.1,"ACA",.1,12,0)
  fields is not empty: PACS UID (60), RADIOLOGY
"IX",2005.1,2005.1,"ACA",.1,13,0)
  REPORT (61), or PACS PROCEDURE (62). If so,
"IX",2005.1,2005.1,"ACA",.1,14,0)
  the code assumes that the record was created
"IX",2005.1,2005.1,"ACA",.1,15,0)
  by the DICOM Gateway and stores "D" as the
"IX",2005.1,2005.1,"ACA",.1,16,0)
  internal value of the field 8.1.
"IX",2005.1,2005.1,"ACA",.1,17,0)
 
"IX",2005.1,2005.1,"ACA",.1,18,0)
  Otherwise, the code assumes that the record
"IX",2005.1,2005.1,"ACA",.1,19,0)
  was created by the capture workstation and
"IX",2005.1,2005.1,"ACA",.1,20,0)
  stores "C" as the internal value of the
"IX",2005.1,2005.1,"ACA",.1,21,0)
  field 8.1.
"IX",2005.1,2005.1,"ACA",.1,22,0)
 
"IX",2005.1,2005.1,"ACA",.1,23,0)
The OBJECT NAME field (.01) is added to the index
"IX",2005.1,2005.1,"ACA",.1,24,0)
to guarantee that it is always triggered when a
"IX",2005.1,2005.1,"ACA",.1,25,0)
record is created (even if all other fields are
"IX",2005.1,2005.1,"ACA",.1,26,0)
empty).
"IX",2005.1,2005.1,"ACA",.1,27,0)
 
"IX",2005.1,2005.1,"ACA",.1,28,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"ACA",1)
D SETCAPP^MAGUXRF(2005.1,+DA,.X1,.X2)
"IX",2005.1,2005.1,"ACA",1.4)

"IX",2005.1,2005.1,"ACA",2)
Q
"IX",2005.1,2005.1,"ACA",11.1,0)
^.114IA^5^5
"IX",2005.1,2005.1,"ACA",11.1,1,0)
1^F^2005.1^108^^^
"IX",2005.1,2005.1,"ACA",11.1,2,0)
2^F^2005.1^60^^^
"IX",2005.1,2005.1,"ACA",11.1,3,0)
3^F^2005.1^61^^^
"IX",2005.1,2005.1,"ACA",11.1,4,0)
4^F^2005.1^62^^^
"IX",2005.1,2005.1,"ACA",11.1,5,0)
5^F^2005.1^.01^^^F
"IX",2005.1,2005.1,"APDT",0)
2005.1^APDT^Procedure Date/Time^R^^R^IR^I^2005.1^^^^^S
"IX",2005.1,2005.1,"APDT",.1,0)
^^6^6^3081006^
"IX",2005.1,2005.1,"APDT",.1,1,0)
This index sorts independent and parent images by
"IX",2005.1,2005.1,"APDT",.1,2,0)
their procedure dates. Any record that is a child
"IX",2005.1,2005.1,"APDT",.1,3,0)
of a parent (i.e. member of a group) is NOT
"IX",2005.1,2005.1,"APDT",.1,4,0)
included in the index. 
"IX",2005.1,2005.1,"APDT",.1,5,0)
 
"IX",2005.1,2005.1,"APDT",.1,6,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"APDT",1)
S ^MAG(2005.1,"APDT",X(2),DA)=""
"IX",2005.1,2005.1,"APDT",1.4)
S X='$G(X(1))
"IX",2005.1,2005.1,"APDT",2)
K ^MAG(2005.1,"APDT",X(2),DA)
"IX",2005.1,2005.1,"APDT",2.5)
K ^MAG(2005.1,"APDT")
"IX",2005.1,2005.1,"APDT",11.1,0)
^.114IA^2^2
"IX",2005.1,2005.1,"APDT",11.1,1,0)
1^F^2005.1^14^^^
"IX",2005.1,2005.1,"APDT",11.1,1,3)

"IX",2005.1,2005.1,"APDT",11.1,2,0)
2^F^2005.1^15^^1^F
"IX",2005.1,2005.1,"APDTPX",0)
2005.1^APDTPX^Patient, Date/Time, Procedure Name^R^^R^IR^I^2005.1^^^^^S
"IX",2005.1,2005.1,"APDTPX",.1,0)
^^7^7^3081006^
"IX",2005.1,2005.1,"APDTPX",.1,1,0)
This index sorts independent and parent images by 
"IX",2005.1,2005.1,"APDTPX",.1,2,0)
patient, procedure date/time, and procedure 
"IX",2005.1,2005.1,"APDTPX",.1,3,0)
abbreviation. Any record that is a child of a
"IX",2005.1,2005.1,"APDTPX",.1,4,0)
parent (i.e. member of a group) is NOT included in
"IX",2005.1,2005.1,"APDTPX",.1,5,0)
the index.
"IX",2005.1,2005.1,"APDTPX",.1,6,0)
 
"IX",2005.1,2005.1,"APDTPX",.1,7,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"APDTPX",1)
S ^MAG(2005.1,"APDTPX",X(3),X(4),X(5),DA)=""
"IX",2005.1,2005.1,"APDTPX",1.4)
S X='$G(X(1))
"IX",2005.1,2005.1,"APDTPX",2)
K ^MAG(2005.1,"APDTPX",X(3),X(4),X(5),DA)
"IX",2005.1,2005.1,"APDTPX",2.5)
K ^MAG(2005.1,"APDTPX")
"IX",2005.1,2005.1,"APDTPX",11.1,0)
^.114IA^5^5
"IX",2005.1,2005.1,"APDTPX",11.1,1,0)
1^F^2005.1^14^^^
"IX",2005.1,2005.1,"APDTPX",11.1,1,3)

"IX",2005.1,2005.1,"APDTPX",11.1,2,0)
2^F^2005.1^15^^^
"IX",2005.1,2005.1,"APDTPX",11.1,2,3)

"IX",2005.1,2005.1,"APDTPX",11.1,3,0)
3^F^2005.1^5^^1^F
"IX",2005.1,2005.1,"APDTPX",11.1,3,3)

"IX",2005.1,2005.1,"APDTPX",11.1,4,0)
4^C^^^^2
"IX",2005.1,2005.1,"APDTPX",11.1,4,1.5)
S X=9999999.9999-X(2)
"IX",2005.1,2005.1,"APDTPX",11.1,5,0)
5^F^2005.1^6^^3^F
"IX",2005.1,2005.1,"APDTPX",11.1,5,3)

"IX",2005.1,2005.1,"AUDIT100",0)
2005.1^AUDIT100^Tracks changes of image fields^MU^^R^I^I^2005.1^^^^^A
"IX",2005.1,2005.1,"AUDIT100",.1,0)
^^5^5^3080626^
"IX",2005.1,2005.1,"AUDIT100",.1,1,0)
When values of the referenced fields are updated,
"IX",2005.1,2005.1,"AUDIT100",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005.1,2005.1,"AUDIT100",.1,3,0)
multiple (99).
"IX",2005.1,2005.1,"AUDIT100",.1,4,0)
 
"IX",2005.1,2005.1,"AUDIT100",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"AUDIT100",1)
D AUDIT^MAGUXRF(2005.1,DA_",",";110;112;113;113.3",2005.199,.X1,.X2)
"IX",2005.1,2005.1,"AUDIT100",1.4)

"IX",2005.1,2005.1,"AUDIT100",2)
Q
"IX",2005.1,2005.1,"AUDIT100",11.1,0)
^.114IA^5^5
"IX",2005.1,2005.1,"AUDIT100",11.1,1,0)
1^F^2005.1^.01^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,1,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,2,0)
2^F^2005.1^110^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,2,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,3,0)
3^F^2005.1^112^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,3,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,4,0)
4^F^2005.1^113^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,4,3)

"IX",2005.1,2005.1,"AUDIT100",11.1,5,0)
5^F^2005.1^113.3^^^
"IX",2005.1,2005.1,"AUDIT100",11.1,5,3)

"IX",2005.1,2005.1,"AUDIT2",0)
2005.1^AUDIT2^Tracks changes of image fields^MU^^R^I^I^2005.1^^^^^A
"IX",2005.1,2005.1,"AUDIT2",.1,0)
^^5^5^3080626^
"IX",2005.1,2005.1,"AUDIT2",.1,1,0)
When values of the referenced fields are updated,
"IX",2005.1,2005.1,"AUDIT2",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005.1,2005.1,"AUDIT2",.1,3,0)
multiple (99).
"IX",2005.1,2005.1,"AUDIT2",.1,4,0)
 
"IX",2005.1,2005.1,"AUDIT2",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"AUDIT2",1)
D AUDIT^MAGUXRF(2005.1,DA_",",";10;6;15",2005.199,.X1,.X2)
"IX",2005.1,2005.1,"AUDIT2",1.4)

"IX",2005.1,2005.1,"AUDIT2",2)
Q
"IX",2005.1,2005.1,"AUDIT2",11.1,0)
^.114IA^4^4
"IX",2005.1,2005.1,"AUDIT2",11.1,1,0)
1^F^2005.1^.01^^^
"IX",2005.1,2005.1,"AUDIT2",11.1,1,3)

"IX",2005.1,2005.1,"AUDIT2",11.1,2,0)
2^F^2005.1^10^^^
"IX",2005.1,2005.1,"AUDIT2",11.1,2,3)

"IX",2005.1,2005.1,"AUDIT2",11.1,3,0)
3^F^2005.1^6^^^
"IX",2005.1,2005.1,"AUDIT2",11.1,3,3)

"IX",2005.1,2005.1,"AUDIT2",11.1,4,0)
4^F^2005.1^15^^^
"IX",2005.1,2005.1,"AUDIT2",11.1,4,3)

"IX",2005.1,2005.1,"AUDIT40",0)
2005.1^AUDIT40^Tracks changes of image fields^MU^^R^I^I^2005.1^^^^^A
"IX",2005.1,2005.1,"AUDIT40",.1,0)
^^5^5^3080717^^
"IX",2005.1,2005.1,"AUDIT40",.1,1,0)
When values of the referenced fields are updated,
"IX",2005.1,2005.1,"AUDIT40",.1,2,0)
this "index" saves the old values to the AUDIT
"IX",2005.1,2005.1,"AUDIT40",.1,3,0)
multiple (99).
"IX",2005.1,2005.1,"AUDIT40",.1,4,0)
 
"IX",2005.1,2005.1,"AUDIT40",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.1,"AUDIT40",1)
D AUDIT^MAGUXRF(2005.1,DA_",",";40;42;43;44;45",2005.199,.X1,.X2)
"IX",2005.1,2005.1,"AUDIT40",1.4)

"IX",2005.1,2005.1,"AUDIT40",2)
Q
"IX",2005.1,2005.1,"AUDIT40",11.1,0)
^.114IA^6^6
"IX",2005.1,2005.1,"AUDIT40",11.1,1,0)
1^F^2005.1^.01^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,1,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,2,0)
2^F^2005.1^40^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,2,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,3,0)
3^F^2005.1^42^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,3,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,4,0)
4^F^2005.1^43^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,4,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,5,0)
5^F^2005.1^44^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,5,3)

"IX",2005.1,2005.1,"AUDIT40",11.1,6,0)
6^F^2005.1^45^^^
"IX",2005.1,2005.1,"AUDIT40",11.1,6,3)

"IX",2005.1,2005.199,"FD",0)
2005.199^FD^Field Number & Date/Time^R^^R^IR^I^2005.199^^^^^LS
"IX",2005.1,2005.199,"FD",.1,0)
^^5^5^3081217^
"IX",2005.1,2005.199,"FD",.1,1,0)
This cross-reference is used for searching 
"IX",2005.1,2005.199,"FD",.1,2,0)
previous values of audited fields. See the
"IX",2005.1,2005.199,"FD",.1,3,0)
MAGUTL04 routine for more details.
"IX",2005.1,2005.199,"FD",.1,4,0)
 
"IX",2005.1,2005.199,"FD",.1,5,0)
Added by the patch MAG*3*93.
"IX",2005.1,2005.199,"FD",1)
S ^MAG(2005.1,DA(1),99,"FD",X(1),X(2),DA)=""
"IX",2005.1,2005.199,"FD",2)
K ^MAG(2005.1,DA(1),99,"FD",X(1),X(2),DA)
"IX",2005.1,2005.199,"FD",2.5)
K ^MAG(2005.1,DA(1),99,"FD")
"IX",2005.1,2005.199,"FD",11.1,0)
^.114IA^2^2
"IX",2005.1,2005.199,"FD",11.1,1,0)
1^F^2005.199^.02^^1^F
"IX",2005.1,2005.199,"FD",11.1,2,0)
2^F^2005.199^.01^^2^F
"IX",2005.88,2005.88,"C",0)
2005.88^C^Uniqueness Index for Key 'A' of File #2005.88^R^^F^IR^I^2005.88^^^^^LS
"IX",2005.88,2005.88,"C",1)
S ^MAG(2005.88,"C",X,DA)=""
"IX",2005.88,2005.88,"C",2)
K ^MAG(2005.88,"C",X,DA)
"IX",2005.88,2005.88,"C",2.5)
K ^MAG(2005.88,"C")
"IX",2005.88,2005.88,"C",11.1,0)
^.114IA^1^1
"IX",2005.88,2005.88,"C",11.1,1,0)
1^F^2005.88^.04^^1
"KEY",2005.88,2005.88,"A",0)
2005.88^A^P^816
"KEY",2005.88,2005.88,"A",2,0)
^.312IA^1^1
"KEY",2005.88,2005.88,"A",2,1,0)
.04^2005.88^1
"KEYPTR",2005.88,2005.88,"A")
2005.88^C
"KRN",.402,3449,-1)
0^1
"KRN",.402,3449,0)
MAG REASON EDIT^3081110.1057^^2005.88^^@^3090513
"KRN",.402,3449,"%D",0)
^.4021^8^8^3090204^^^^
"KRN",.402,3449,"%D",1,0)
This input template is used by the MAG REASON 
"KRN",.402,3449,"%D",2,0)
EDIT option to add/edit records of the MAG REASON 
"KRN",.402,3449,"%D",3,0)
file (#2005.88). The template does not allow 
"KRN",.402,3449,"%D",4,0)
editing of standard records distributed with the 
"KRN",.402,3449,"%D",5,0)
Imaging application. These records can only be 
"KRN",.402,3449,"%D",6,0)
inactivated if necessary.
"KRN",.402,3449,"%D",7,0)
 
"KRN",.402,3449,"%D",8,0)
Added by the patch MAG*3*93.
"KRN",.402,3449,"DR",1,2005.88)
S:$P($G(^MAG(2005.88,DA,0)),"^",4)'>0 Y="@5";W !!?3,"This is a standard record distributed with the Imaging application.";W !?3,"It cannot be edited or deleted but you can inactivate it if necessary.",!;S Y="@50";@5;.01;.02;1;@50;
"KRN",.402,3449,"DR",1,2005.88,1)
.03;
"KRN",.84,20050000.001,-1)
0^1
"KRN",.84,20050000.001,0)
20050000.001^1^^IMAGING^Cancel
"KRN",.84,20050000.001,2,0)
^.844^1^1^3080306^^
"KRN",.84,20050000.001,2,1,0)
I^Cancel
"KRN",.84,20050000.002,-1)
0^2
"KRN",.84,20050000.002,0)
20050000.002^1^^IMAGING^Timeout
"KRN",.84,20050000.002,2,0)
^^1^1^3080229^
"KRN",.84,20050000.002,2,1,0)
I^Timeout
"KRN",.84,20050000.003,-1)
0^3
"KRN",.84,20050000.003,0)
20050000.003^1^^IMAGING^Parameter has invalid value
"KRN",.84,20050000.003,2,0)
^^1^1^3080306^
"KRN",.84,20050000.003,2,1,0)
E^Parameter '|1|' has an invalid value: |2|.
"KRN",.84,20050000.004,-1)
0^6
"KRN",.84,20050000.004,0)
20050000.004^1^^IMAGING^Invalid patient IEN
"KRN",.84,20050000.004,2,0)
^.844^1^1^3080307^^^
"KRN",.84,20050000.004,2,1,0)
E^Invalid patient IEN (DFN): '|1|'.
"KRN",.84,20050000.005,-1)
0^7
"KRN",.84,20050000.005,0)
20050000.005^1^^IMAGING^No such patient
"KRN",.84,20050000.005,2,0)
^^1^1^3080306^
"KRN",.84,20050000.005,2,1,0)
E^No such patient (DFN='|1|').
"KRN",.84,20050000.006,-1)
0^8
"KRN",.84,20050000.006,0)
20050000.006^1^^IMAGING^At least one of the flags is required
"KRN",.84,20050000.006,2,0)
^^1^1^3080306^
"KRN",.84,20050000.006,2,1,0)
E^At least one of the following flags is required: '|1|'.
"KRN",.84,20050000.008,-1)
0^4
"KRN",.84,20050000.008,0)
20050000.008^1^^IMAGING^Required parameter has no value
"KRN",.84,20050000.008,2,0)
^^1^1^3080229^
"KRN",.84,20050000.008,2,1,0)
E^Required parameter '|1|' has no value.
"KRN",.84,20050000.009,-1)
0^5
"KRN",.84,20050000.009,0)
20050000.009^1^^IMAGING^FileMan DBS call error
"KRN",.84,20050000.009,2,0)
^^1^1^3080229^
"KRN",.84,20050000.009,2,1,0)
E^FileMan DBS call error(s)|1|
"KRN",.84,20050000.01,-1)
0^18
"KRN",.84,20050000.01,0)
20050000.01^1^^IMAGING^Unsupported parameter
"KRN",.84,20050000.01,2,0)
^^1^1^3080321^
"KRN",.84,20050000.01,2,1,0)
E^Parameter '|1|' is not supported.
"KRN",.84,20050000.011,-1)
0^9
"KRN",.84,20050000.011,0)
20050000.011^1^^IMAGING^Invalid package
"KRN",.84,20050000.011,2,0)
^.844^1^1^3080717^^^
"KRN",.84,20050000.011,2,1,0)
W^Invalid package code/name: '|1|'.
"KRN",.84,20050000.012,-1)
0^10
"KRN",.84,20050000.012,0)
20050000.012^1^^IMAGING^Invalid class
"KRN",.84,20050000.012,2,0)
^.844^1^1^3080307^^
"KRN",.84,20050000.012,2,1,0)
W^Invalid class name/IEN: '|1|'.
"KRN",.84,20050000.013,-1)
0^11
"KRN",.84,20050000.013,0)
20050000.013^1^^IMAGING^Invalid type
"KRN",.84,20050000.013,2,0)
^.844^1^1^3080307^^
"KRN",.84,20050000.013,2,1,0)
W^Invalid type name/IEN: '|1|'.
"KRN",.84,20050000.014,-1)
0^12
"KRN",.84,20050000.014,0)
20050000.014^1^^IMAGING^Invalid event
"KRN",.84,20050000.014,2,0)
^^1^1^3080307^
"KRN",.84,20050000.014,2,1,0)
W^Invalid procedure/event name/IEN: '|1|'.
"KRN",.84,20050000.015,-1)
0^13
"KRN",.84,20050000.015,0)
20050000.015^1^^IMAGING^Invalid origin
"KRN",.84,20050000.015,2,0)
^^1^1^3080307^
"KRN",.84,20050000.015,2,1,0)
W^Invalid origin name/code: '|1|'.
"KRN",.84,20050000.016,-1)
0^14
"KRN",.84,20050000.016,0)
20050000.016^1^^IMAGING^Invalid specialty
"KRN",.84,20050000.016,2,0)
^^1^1^3080307^
"KRN",.84,20050000.016,2,1,0)
W^Invalid specialty name/IEN: '|1|'.
"KRN",.84,20050000.017,-1)
0^15
"KRN",.84,20050000.017,0)
20050000.017^1^^IMAGING^Duplicate parameter values
"KRN",.84,20050000.017,2,0)
^.844^1^1^3080318^^^
"KRN",.84,20050000.017,2,1,0)
E^Duplicate values of the '|1|' parameter.
"KRN",.84,20050000.018,-1)
0^16
"KRN",.84,20050000.018,0)
20050000.018^1^^IMAGING^Duplicate Seq# of the parameter
"KRN",.84,20050000.018,2,0)
^.844^1^1^3080318^^^
"KRN",.84,20050000.018,2,1,0)
E^Duplicate Seq# (|1|) of the '|2|' parameter.
"KRN",.84,20050000.019,-1)
0^17
"KRN",.84,20050000.019,0)
20050000.019^1^^IMAGING^No images for filter
"KRN",.84,20050000.019,2,0)
^^1^1^3081124^
"KRN",.84,20050000.019,2,1,0)
I^No images for filter: |1|.
"KRN",.84,20050000.02,-1)
0^19
"KRN",.84,20050000.02,0)
20050000.02^1^^IMAGING^Run-time Error
"KRN",.84,20050000.02,2,0)
^^1^1^3080331^
"KRN",.84,20050000.02,2,1,0)
E^Run-time Error: '|1|'.
"KRN",.84,20050000.021,-1)
0^20
"KRN",.84,20050000.021,0)
20050000.021^1^^IMAGING^Locked by other user/task
"KRN",.84,20050000.021,2,0)
^^1^1^3080331^
"KRN",.84,20050000.021,2,1,0)
W^The |1| is locked by other user/task. Please try later.
"KRN",.84,20050000.022,-1)
0^21
"KRN",.84,20050000.022,0)
20050000.022^1^^IMAGING^Record does not exist
"KRN",.84,20050000.022,2,0)
^^1^1^3080331^
"KRN",.84,20050000.022,2,1,0)
E^The record does not exist (File: #|1|, IENS: '|2|').
"KRN",.84,20050000.023,-1)
0^22
"KRN",.84,20050000.023,0)
20050000.023^1^^IMAGING^File and field numbers are required
"KRN",.84,20050000.023,2,0)
^.844^1^1^3080428^^
"KRN",.84,20050000.023,2,1,0)
E^File and field numbers are required if the '|1|' flag is used.
"KRN",.84,20050000.024,-1)
0^23
"KRN",.84,20050000.024,0)
20050000.024^1^^IMAGING^Invalid client name
"KRN",.84,20050000.024,2,0)
^^1^1^3080428^
"KRN",.84,20050000.024,2,1,0)
E^Invalid/unsupported client application name: '|1|'.
"KRN",.84,20050000.025,-1)
0^25
"KRN",.84,20050000.025,0)
20050000.025^1^^IMAGING^Invalid format of the 2nd line
"KRN",.84,20050000.025,2,0)
^^1^1^3080428^
"KRN",.84,20050000.025,2,1,0)
E^Invalid format of the 2nd line of the |1| routine.
"KRN",.84,20050000.026,-1)
0^37
"KRN",.84,20050000.026,0)
20050000.026^1^^IMAGING^Required variable is undefined or empty
"KRN",.84,20050000.026,2,0)
^^1^1^3080506^
"KRN",.84,20050000.026,2,1,0)
E^Required variable is undefined or empty: |1|.
"KRN",.84,20050000.027,-1)
0^38
"KRN",.84,20050000.027,0)
20050000.027^1^^IMAGING^Division is not an Imaging site parameter
"KRN",.84,20050000.027,2,0)
^^1^1^3080506^
"KRN",.84,20050000.027,2,1,0)
E^Division |1| is not an Imaging site parameter.
"KRN",.84,20050000.028,-1)
0^41
"KRN",.84,20050000.028,0)
20050000.028^1^^IMAGING^Cannot create checkpoint
"KRN",.84,20050000.028,2,0)
^.844^1^1^3080514^^
"KRN",.84,20050000.028,2,1,0)
E^Cannot create the '|1|' checkpoint!
"KRN",.84,20050000.028,5,0)
^.841^^0
"KRN",.84,20050000.029,-1)
0^42
"KRN",.84,20050000.029,0)
20050000.029^1^^IMAGING^Cannot complete checkpoint
"KRN",.84,20050000.029,2,0)
^.844^1^1^3080514^^
"KRN",.84,20050000.029,2,1,0)
E^Cannot complete the '|1|' checkpoint!
"KRN",.84,20050000.029,5,0)
^.841^^0
"KRN",.84,20050000.03,-1)
0^43
"KRN",.84,20050000.03,0)
20050000.03^1^^IMAGING^Invalid/missing parameters
"KRN",.84,20050000.03,2,0)
^^1^1^3080620^
"KRN",.84,20050000.03,2,1,0)
E^Invalid and/or missing parameters.
"KRN",.84,20050000.031,-1)
0^44
"KRN",.84,20050000.031,0)
20050000.031^1^^IMAGING^Invalid image status
"KRN",.84,20050000.031,2,0)
^.844^1^1^3080717^^
"KRN",.84,20050000.031,2,1,0)
W^Invalid image status code/name: '|1|'.
"KRN",.84,20050000.032,-1)
0^45
"KRN",.84,20050000.032,0)
20050000.032^1^^IMAGING^Invalid controlled image code/name
"KRN",.84,20050000.032,2,0)
^.844^1^1^3080813^^
"KRN",.84,20050000.032,2,1,0)
W^Invalid controlled image indicator code/name: '|1|'.
"KRN",.84,20050000.033,-1)
0^46
"KRN",.84,20050000.033,0)
20050000.033^1^^IMAGING^Image with this status cannot be viewed
"KRN",.84,20050000.033,2,0)
^^1^1^3081017^
"KRN",.84,20050000.033,2,1,0)
W^Image with the '|1|' status cannot be viewed.
"KRN",.84,20050000.034,-1)
0^47
"KRN",.84,20050000.034,0)
20050000.034^1^^IMAGING^Invalid parent data file reference
"KRN",.84,20050000.034,2,0)
^^1^1^3081016^
"KRN",.84,20050000.034,2,1,0)
E^Image entry (IEN=|1|) has invalid parent data file reference: '|2|'.
"KRN",.84,20050000.035,-1)
0^48
"KRN",.84,20050000.035,0)
20050000.035^1^^IMAGING^Missing file pointer
"KRN",.84,20050000.035,2,0)
^^1^1^3081016^
"KRN",.84,20050000.035,2,1,0)
E^Descriptor of the parent data file (IEN=|1|) has no file pointer.
"KRN",.84,20050000.036,-1)
0^49
"KRN",.84,20050000.036,0)
20050000.036^1^^IMAGING^User doesn't have delete privilege
"KRN",.84,20050000.036,2,0)
^^1^1^3081017^
"KRN",.84,20050000.036,2,1,0)
I^User does not have the Delete privilege.
"KRN",.84,20050000.037,-1)
0^50
"KRN",.84,20050000.037,0)
20050000.037^1^^IMAGING^Image with this status cannot be deleted
"KRN",.84,20050000.037,2,0)
^^1^1^3081017^
"KRN",.84,20050000.037,2,1,0)
W^Image with the '|1|' status cannot be deleted.
"KRN",.84,20050000.038,-1)
0^51
"KRN",.84,20050000.038,0)
20050000.038^1^^IMAGING^Invalid image status code
"KRN",.84,20050000.038,2,0)
^.844^1^1^3081029^^
"KRN",.84,20050000.038,2,1,0)
E^Invalid image status code: '|1|'.
"KRN",.84,20050000.039,-1)
0^52
"KRN",.84,20050000.039,0)
20050000.039^1^^IMAGING^Taskman has not scheduled the task
"KRN",.84,20050000.039,2,0)
^.844^1^1^3081112^^
"KRN",.84,20050000.039,2,1,0)
E^Taskman has not scheduled the task.
"KRN",.84,20050000.04,-1)
0^53
"KRN",.84,20050000.04,0)
20050000.04^1^^IMAGING^Task has been stopped
"KRN",.84,20050000.04,2,0)
^^1^1^3081112^
"KRN",.84,20050000.04,2,1,0)
W^Task has been stopped by the user.
"KRN",.84,20050000.041,-1)
0^54
"KRN",.84,20050000.041,0)
20050000.041^1^^IMAGING^Deleted record cannot be modified
"KRN",.84,20050000.041,2,0)
^^1^1^3081125^
"KRN",.84,20050000.041,2,1,0)
W^Deleted image record (IEN=|1|) cannot be modified.
"KRN",.84,20050000.042,-1)
0^55
"KRN",.84,20050000.042,0)
20050000.042^1^^IMAGING^Invalid capture application
"KRN",.84,20050000.042,2,0)
^^1^1^3081216^
"KRN",.84,20050000.042,2,1,0)
W^Invalid capture application code/name: '|1|'.
"KRN",.84,20050000.043,-1)
0^56
"KRN",.84,20050000.043,0)
20050000.043^1^^IMAGING^The same record both in 2005 and 2005.1
"KRN",.84,20050000.043,2,0)
^.844^1^1^3090116^^
"KRN",.84,20050000.043,2,1,0)
E^Image entry (IEN=|1|) exists both in #2005 and #2005.1.
"KRN",.84,20050000.044,-1)
0^57
"KRN",.84,20050000.044,0)
20050000.044^1^^IMAGING^Cannot find option
"KRN",.84,20050000.044,2,0)
^^1^1^3090123^
"KRN",.84,20050000.044,2,1,0)
E^Cannot find the '|1|' option.
"KRN",.84,20050000.045,-1)
0^58
"KRN",.84,20050000.045,0)
20050000.045^1^^IMAGING^Cannot find remote procedure
"KRN",.84,20050000.045,2,0)
^^1^1^3090123^
"KRN",.84,20050000.045,2,1,0)
E^Cannot find the '|1|' remote procedure.
"KRN",.84,20050000.046,-1)
0^59
"KRN",.84,20050000.046,0)
20050000.046^1^^IMAGING^Cannot send MailMan message
"KRN",.84,20050000.046,2,0)
^^1^1^3090126^
"KRN",.84,20050000.046,2,1,0)
E^Cannot send MailMan message.
"KRN",.84,20050000.047,-1)
0^60
"KRN",.84,20050000.047,0)
20050000.047^1^^IMAGING^Internal error
"KRN",.84,20050000.047,2,0)
^^1^1^3090130^
"KRN",.84,20050000.047,2,1,0)
E^Internal error.
"KRN",.84,20050000.048,-1)
0^61
"KRN",.84,20050000.048,0)
20050000.048^1^^IMAGING^Cannot get (sub)file root
"KRN",.84,20050000.048,2,0)
^^1^1^3090217^
"KRN",.84,20050000.048,2,1,0)
E^Cannot get the root of the (sub)file #|1| (IENS='|2|').
"KRN",.84,20050000.049,-1)
0^62
"KRN",.84,20050000.049,0)
20050000.049^1^^IMAGING^Reason with such code does not exist
"KRN",.84,20050000.049,2,0)
^.844^1^1^3090504^^
"KRN",.84,20050000.049,2,1,0)
E^Reason with the code '|1|' does not exist.
"KRN",.84,20050005.001,-1)
0^24
"KRN",.84,20050005.001,0)
20050005.001^2^y^IMAGING^Latest client version.
"KRN",.84,20050005.001,2,0)
^.844^1^1^3081124^^
"KRN",.84,20050005.001,2,1,0)
Version check OK. Server: |SV|.|ST|, Client: |CV|.|CT|
"KRN",.84,20050005.001,3,0)
^.845^4^4
"KRN",.84,20050005.001,3,1,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.001,3,2,0)
CT^Client build (T-version)
"KRN",.84,20050005.001,3,3,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.001,3,4,0)
ST^Server build (T-version)
"KRN",.84,20050005.001,5,0)
^.841^1^1
"KRN",.84,20050005.001,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.001,5,"B","MAGGTU4",1)

"KRN",.84,20050005.002,-1)
0^26
"KRN",.84,20050005.002,0)
20050005.002^2^y^IMAGING^Version RPC Error Message
"KRN",.84,20050005.002,2,0)
^.844^4^4^3081124^^
"KRN",.84,20050005.002,2,1,0)
 Error: |ERRMSG|
"KRN",.84,20050005.002,2,2,0)
 Location: |ERRLOC|
"KRN",.84,20050005.002,2,3,0)
 
"KRN",.84,20050005.002,2,4,0)
 Contact IRM.  The APPLICATION will abort!
"KRN",.84,20050005.002,3,0)
^.845^2^2
"KRN",.84,20050005.002,3,1,0)
ERRMSG^Error Message
"KRN",.84,20050005.002,3,2,0)
ERRLOC^Error Location
"KRN",.84,20050005.002,5,0)
^.841^1^1
"KRN",.84,20050005.002,5,1,0)
MAGGTU41^ERROR
"KRN",.84,20050005.002,5,"B","MAGGTU41",1)

"KRN",.84,20050005.003,-1)
0^27
"KRN",.84,20050005.003,0)
20050005.003^2^y^IMAGING^Client not supported.
"KRN",.84,20050005.003,2,0)
^.844^8^8^3081124^^
"KRN",.84,20050005.003,2,1,0)
 Server is running Imaging V. |SV| - |SVSTAT|
"KRN",.84,20050005.003,2,2,0)
 Client is running Imaging V. |CV|
"KRN",.84,20050005.003,2,3,0)
 
"KRN",.84,20050005.003,2,4,0)
 The client version |CV| is no longer supported.
"KRN",.84,20050005.003,2,5,0)
 
"KRN",.84,20050005.003,2,6,0)
 Contact the Imaging System Manager to update this workstation.
"KRN",.84,20050005.003,2,7,0)
 
"KRN",.84,20050005.003,2,8,0)
            The APPLICATION will abort!
"KRN",.84,20050005.003,3,0)
^.845^3^3
"KRN",.84,20050005.003,3,1,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.003,3,2,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.003,3,3,0)
SVSTAT^Server version status
"KRN",.84,20050005.003,5,0)
^.841^1^1
"KRN",.84,20050005.003,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.003,5,"B","MAGGTU4",1)

"KRN",.84,20050005.004,-1)
0^28
"KRN",.84,20050005.004,0)
20050005.004^2^y^IMAGING^Client not supported. Beta.
"KRN",.84,20050005.004,2,0)
^^11^11^3080617^
"KRN",.84,20050005.004,2,1,0)
 This site is a test site for Imaging V. |SV|
"KRN",.84,20050005.004,2,2,0)
 The client is running Imaging V. |CV|
"KRN",.84,20050005.004,2,3,0)
 
"KRN",.84,20050005.004,2,4,0)
 When the version |SV| is released, the client
"KRN",.84,20050005.004,2,5,0)
 version |CV| will no longer be supported.
"KRN",.84,20050005.004,2,6,0)
 
"KRN",.84,20050005.004,2,7,0)
 This client application will not work correctly.
"KRN",.84,20050005.004,2,8,0)
 
"KRN",.84,20050005.004,2,9,0)
 Contact the Imaging System Manager to update this workstation.
"KRN",.84,20050005.004,2,10,0)
 
"KRN",.84,20050005.004,2,11,0)
            The APPLICATION will continue.
"KRN",.84,20050005.004,3,0)
^.845^3^2
"KRN",.84,20050005.004,3,1,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.004,3,3,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.004,5,0)
^.841^1^1
"KRN",.84,20050005.004,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.004,5,"B","MAGGTU4",1)

"KRN",.84,20050005.005,-1)
0^29
"KRN",.84,20050005.005,0)
20050005.005^2^^IMAGING^Cancel will not stop the client
"KRN",.84,20050005.005,2,0)
^.844^1^1^3080617^^^^
"KRN",.84,20050005.005,2,1,0)
(Clicking 'Cancel' will not stop the client.)
"KRN",.84,20050005.005,3,0)
^.845^^0
"KRN",.84,20050005.005,5,0)
^.841^1^1
"KRN",.84,20050005.005,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.005,5,"B","MAGGTU4",1)

"KRN",.84,20050005.006,-1)
0^30
"KRN",.84,20050005.006,0)
20050005.006^2^^IMAGING^Clicking 'Cancel' won't stop termination
"KRN",.84,20050005.006,2,0)
^.844^1^1^3080617^^^^
"KRN",.84,20050005.006,2,1,0)
(Clicking 'Cancel' will not stop client termination.)
"KRN",.84,20050005.006,5,0)
^.841^1^1
"KRN",.84,20050005.006,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.006,5,"B","MAGGTU4",1)

"KRN",.84,20050005.007,-1)
0^31
"KRN",.84,20050005.007,0)
20050005.007^2^y^IMAGING^Latest version but old build.
"KRN",.84,20050005.007,2,0)
^^9^9^3080617^
"KRN",.84,20050005.007,2,1,0)
 Server is running Imaging V. |SV|.|ST| - |SVSTAT|
"KRN",.84,20050005.007,2,2,0)
 Client is running Imaging V. |CV|.|CT|
"KRN",.84,20050005.007,2,3,0)
 
"KRN",.84,20050005.007,2,4,0)
 For patch |CP|, the released build number (T-version) is |ST|
"KRN",.84,20050005.007,2,5,0)
 You must update this workstation with the released version.
"KRN",.84,20050005.007,2,6,0)
 
"KRN",.84,20050005.007,2,7,0)
 Contact the Imaging System Manager to update this workstation.
"KRN",.84,20050005.007,2,8,0)
 
"KRN",.84,20050005.007,2,9,0)
            The APPLICATION will continue.
"KRN",.84,20050005.007,3,0)
^.845^6^6
"KRN",.84,20050005.007,3,1,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.007,3,2,0)
ST^Server build number (T-version)
"KRN",.84,20050005.007,3,3,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.007,3,4,0)
SVSTAT^Server version status
"KRN",.84,20050005.007,3,5,0)
CT^Client build number (T-version)
"KRN",.84,20050005.007,3,6,0)
CP^Client patch number
"KRN",.84,20050005.007,5,0)
^.841^1^1
"KRN",.84,20050005.007,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.007,5,"B","MAGGTU4",1)

"KRN",.84,20050005.008,-1)
0^32
"KRN",.84,20050005.008,0)
20050005.008^2^y^IMAGING^Latest version but old build. Beta.
"KRN",.84,20050005.008,2,0)
^^6^6^3080617^
"KRN",.84,20050005.008,2,1,0)
 Server is running Imaging V. |SV|.|ST| - |SVSTAT|
"KRN",.84,20050005.008,2,2,0)
 Client is running Imaging V. |CV|.|CT|
"KRN",.84,20050005.008,2,3,0)
 
"KRN",.84,20050005.008,2,4,0)
 Test versions of patch |CV| other than T|ST| may not work correctly.
"KRN",.84,20050005.008,2,5,0)
 
"KRN",.84,20050005.008,2,6,0)
            The APPLICATION will continue.
"KRN",.84,20050005.008,3,0)
^.845^5^5
"KRN",.84,20050005.008,3,1,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.008,3,2,0)
ST^Server build number (T-version)
"KRN",.84,20050005.008,3,3,0)
SVSTAT^Server version status
"KRN",.84,20050005.008,3,4,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.008,3,5,0)
CT^Client build number (T-version)
"KRN",.84,20050005.008,5,0)
^.841^1^1
"KRN",.84,20050005.008,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.008,5,"B","MAGGTU4",1)

"KRN",.84,20050005.009,-1)
0^33
"KRN",.84,20050005.009,0)
20050005.009^2^y^IMAGING^Supported version but old build.
"KRN",.84,20050005.009,2,0)
^^10^10^3080617^
"KRN",.84,20050005.009,2,1,0)
 Server is running Imaging V. |SV|.|ST| - |SVSTAT|
"KRN",.84,20050005.009,2,2,0)
 Client is running Imaging V. |CV|.|CT|
"KRN",.84,20050005.009,2,3,0)
 
"KRN",.84,20050005.009,2,4,0)
 For patch |CP|, the released build number (T-version) is |CST|.
"KRN",.84,20050005.009,2,5,0)
 Version |CV|.|CT| is not supported. You must update this
"KRN",.84,20050005.009,2,6,0)
 workstation with the released version
"KRN",.84,20050005.009,2,7,0)
 
"KRN",.84,20050005.009,2,8,0)
 Contact the Imaging System Manager to update this workstation.
"KRN",.84,20050005.009,2,9,0)
 
"KRN",.84,20050005.009,2,10,0)
            The APPLICATION will abort!
"KRN",.84,20050005.009,3,0)
^.845^8^7
"KRN",.84,20050005.009,3,1,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.009,3,2,0)
SVSTAT^Server version status
"KRN",.84,20050005.009,3,4,0)
CP^Client patch number
"KRN",.84,20050005.009,3,5,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.009,3,6,0)
CST^Supported client build
"KRN",.84,20050005.009,3,7,0)
CT^Client build number (T-version)
"KRN",.84,20050005.009,3,8,0)
ST^Server build number (T-version)
"KRN",.84,20050005.009,5,0)
^.841^1^1
"KRN",.84,20050005.009,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.009,5,"B","MAGGTU4",1)

"KRN",.84,20050005.01,-1)
0^34
"KRN",.84,20050005.01,0)
20050005.01^2^y^IMAGING^Supported version but old build. Beta.
"KRN",.84,20050005.01,2,0)
^^10^10^3080617^
"KRN",.84,20050005.01,2,1,0)
 Server is running Imaging V. |SV|.|ST| - |SVSTAT|
"KRN",.84,20050005.01,2,2,0)
 Client is running Imaging V. |CV|.|CT|
"KRN",.84,20050005.01,2,3,0)
 
"KRN",.84,20050005.01,2,4,0)
 For patch |CP|, the released build number (T-version) is |CST|.
"KRN",.84,20050005.01,2,5,0)
 This client application will not work correctly.  You should
"KRN",.84,20050005.01,2,6,0)
 update this workstation with the released version.
"KRN",.84,20050005.01,2,7,0)
 
"KRN",.84,20050005.01,2,8,0)
 Contact the Imaging System Manager to update this workstation.
"KRN",.84,20050005.01,2,9,0)
 
"KRN",.84,20050005.01,2,10,0)
            The APPLICATION will continue.
"KRN",.84,20050005.01,3,0)
^.845^7^7
"KRN",.84,20050005.01,3,1,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.01,3,2,0)
SVSTAT^Server version status
"KRN",.84,20050005.01,3,3,0)
CT^Client build number (T-version)
"KRN",.84,20050005.01,3,4,0)
CP^Client patch number
"KRN",.84,20050005.01,3,5,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.01,3,6,0)
CST^Supported client build
"KRN",.84,20050005.01,3,7,0)
ST^Server build number (T-version)
"KRN",.84,20050005.01,5,0)
^.841^1^1
"KRN",.84,20050005.01,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.01,5,"B","MAGGTU4",1)

"KRN",.84,20050005.011,-1)
0^35
"KRN",.84,20050005.011,0)
20050005.011^2^y^IMAGING^Supported version.
"KRN",.84,20050005.011,2,0)
^.844^8^8^3080617^^
"KRN",.84,20050005.011,2,1,0)
 Server is running Imaging V. |SV|.|ST| - |SVSTAT|
"KRN",.84,20050005.011,2,2,0)
 Client is running Imaging V. |CV|.|CT|
"KRN",.84,20050005.011,2,3,0)
 
"KRN",.84,20050005.011,2,4,0)
 The client application should be updated.
"KRN",.84,20050005.011,2,5,0)
 
"KRN",.84,20050005.011,2,6,0)
 Contact the Imaging System Manager to update this workstation.
"KRN",.84,20050005.011,2,7,0)
 
"KRN",.84,20050005.011,2,8,0)
            The APPLICATION will continue.
"KRN",.84,20050005.011,3,0)
^.845^5^5
"KRN",.84,20050005.011,3,1,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.011,3,2,0)
SVSTAT^Server version status
"KRN",.84,20050005.011,3,3,0)
CV^Client version (Major.Minor.Patch)
"KRN",.84,20050005.011,3,4,0)
CT^Client build number (T-version)
"KRN",.84,20050005.011,3,5,0)
ST^Server build number (T-version)
"KRN",.84,20050005.011,5,0)
^.841^1^1
"KRN",.84,20050005.011,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.011,5,"B","MAGGTU4",1)

"KRN",.84,20050005.012,-1)
0^36
"KRN",.84,20050005.012,0)
20050005.012^2^y^IMAGING^Supported version. Beta.
"KRN",.84,20050005.012,2,0)
^^1^1^3080617^
"KRN",.84,20050005.012,2,1,0)
Alpha/Beta testing is in progress for the V. |SV|
"KRN",.84,20050005.012,3,0)
^.845^1^1
"KRN",.84,20050005.012,3,1,0)
SV^Server version (Major.Minor.Patch)
"KRN",.84,20050005.012,5,0)
^.841^1^1
"KRN",.84,20050005.012,5,1,0)
MAGGTU4^MESSAGE
"KRN",.84,20050005.012,5,"B","MAGGTU4",1)

"KRN",.84,20050005.013,-1)
0^39
"KRN",.84,20050005.013,0)
20050005.013^2^^IMAGING^Allowing remote image connection.
"KRN",.84,20050005.013,2,0)
^.844^1^1^3080617^^
"KRN",.84,20050005.013,2,1,0)
Allowing remote image connection.
"KRN",.84,20050005.013,5,0)
^.841^1^1
"KRN",.84,20050005.013,5,1,0)
MAGGTU4^CHKVER
"KRN",.84,20050005.013,5,"B","MAGGTU4",1)

"KRN",.84,20050005.014,-1)
0^40
"KRN",.84,20050005.014,0)
20050005.014^2^^IMAGING^Version checking is OFF.
"KRN",.84,20050005.014,2,0)
^.844^1^1^3080617^^
"KRN",.84,20050005.014,2,1,0)
Version checking is OFF.  Allowing all versions.
"KRN",.84,20050005.014,5,0)
^.841^1^1
"KRN",.84,20050005.014,5,1,0)
MAGGTU4^CHKVER
"KRN",.84,20050005.014,5,"B","MAGGTU4",1)

"KRN",19,20680,-1)
2^3
"KRN",19,20680,0)
MAG SYS MENU^Imaging System Manager Menu^^M^133^MAG SYSTEM^^^^^^454
"KRN",19,20680,10,0)
^19.01IP^17^17
"KRN",19,20680,10,15,0)
23039
"KRN",19,20680,10,15,"^")
MAG REPORT MENU
"KRN",19,20680,10,17,0)
23232
"KRN",19,20680,10,17,"^")
MAG REASON EDIT
"KRN",19,20680,"U")
IMAGING SYSTEM MANAGER MENU
"KRN",19,23039,-1)
2^4
"KRN",19,23039,0)
MAG REPORT MENU^Imaging Site Reports^^M^1214^^^^^^^454
"KRN",19,23039,10,0)
^19.01IP^5^5
"KRN",19,23039,10,5,0)
23233
"KRN",19,23039,10,5,"^")
MAG CLIENT VERSION REPORT
"KRN",19,23039,"U")
IMAGING SITE REPORTS
"KRN",19,23232,-1)
0^1
"KRN",19,23232,0)
MAG REASON EDIT^Enter/edit Reason^^E^^^^^^^^IMAGING^^1^1
"KRN",19,23232,1,0)
^19.06^2^2^3090204^^^^
"KRN",19,23232,1,1,0)
This option allows adding/editing of reasons for actions performed on
"KRN",19,23232,1,2,0)
images (copying, printing, etc.) stored in the MAG REASON file.
"KRN",19,23232,15)
K DIDEL,DLAYGO
"KRN",19,23232,20)
S (DIDEL,DLAYGO)=2005.88
"KRN",19,23232,30)
MAG(2005.88,
"KRN",19,23232,31)
AELMNQ
"KRN",19,23232,50)
MAG(2005.88,
"KRN",19,23232,51)
[MAG REASON EDIT]
"KRN",19,23232,"U")
ENTER/EDIT REASON
"KRN",19,23233,-1)
0^2
"KRN",19,23233,0)
MAG CLIENT VERSION REPORT^Imaging Clients Version Report^^R^^^^^^^^IMAGING
"KRN",19,23233,1,0)
^19.06^3^3^3090204^^
"KRN",19,23233,1,1,0)
This option prints the list of workstations and clients that have to be 
"KRN",19,23233,1,2,0)
updated. When the new version of the VistA server code is released, those
"KRN",19,23233,1,3,0)
clients will not be supported anymore.
"KRN",19,23233,25)
WSCVCROP^MAGGTU4
"KRN",19,23233,"U")
IMAGING CLIENTS VERSION REPORT
"KRN",19.1,876,-1)
0^1
"KRN",19.1,876,0)
MAG EDIT
"KRN",19.1,876,1,0)
^^2^2^3090213^
"KRN",19.1,876,1,1,0)
This key gives the holder all access to image edit functions (e.g. Image 
"KRN",19.1,876,1,2,0)
Index Edit).
"KRN",19.1,877,-1)
0^2
"KRN",19.1,877,0)
MAG PAT PHOTO ONLY
"KRN",19.1,877,1,0)
^^2^2^3090304^
"KRN",19.1,877,1,1,0)
If this key is assigned to a user, then they will be able to see only 
"KRN",19.1,877,1,2,0)
patient pictures.
"KRN",8994,423,-1)
0^14
"KRN",8994,423,0)
MAGGRADIMAGE^IMAGE^MAGGTRAI^4^R^^^1
"KRN",8994,423,1,0)
^8994.01^2^2^3090626^^^^
"KRN",8994,423,1,1,0)
User selects a Radiology exam from the listing displayed, we return a list
"KRN",8994,423,1,2,0)
of images associated with that exam.
"KRN",8994,423,2,0)
^8994.02A^1^1
"KRN",8994,423,2,1,0)
DATA^1^245^1^1
"KRN",8994,423,2,1,1,0)
^8994.021^7^7^3090626^^^^
"KRN",8994,423,2,1,1,1,0)
DATA is the exam data that was output from the MAGGRADLIST RPC call.
"KRN",8994,423,2,1,1,2,0)
DATA is the Radiology values stored in ^TMP($J,"RAEX",x)
"KRN",8994,423,2,1,1,3,0)
  that the radiology procedure RAPTLU sets during the search
"KRN",8994,423,2,1,1,4,0)
  for patient exams.  (see routine RAPTLU )
"KRN",8994,423,2,1,1,5,0)
      ^TMP($J,"RAEX",RACNT)=
"KRN",8994,423,2,1,1,6,0)
     RADFN_"^"_RADTI_"^"_RACNI_"^"_RANME_"^"_RASSN_"^"
"KRN",8994,423,2,1,1,7,0)
    _RADATE_"^"_RADTE_"^"_RACN_"^"_RAPRC_"^"_RARPT_"^"_RAST
"KRN",8994,423,2,"B","DATA",1)

"KRN",8994,423,2,"PARAMSEQ",1,1)

"KRN",8994,423,3,0)
^8994.03^3^3^3090626^^^^
"KRN",8994,423,3,1,0)
Returns an array of images associated with the Radiology exam. Each array
"KRN",8994,423,3,2,0)
entry has image data returned from the call BOTH^MAGFILEA which is the
"KRN",8994,423,3,3,0)
same data returned by all calls that return image data.
"KRN",8994,436,-1)
0^8
"KRN",8994,436,0)
MAGG WRKS UPDATES^UPD^MAGGTAU^1^R
"KRN",8994,436,1,0)
^^2^2^3080513^
"KRN",8994,436,1,1,0)
Using this remote procedure, the workstation updates its record in the
"KRN",8994,436,1,2,0)
IMAGING WINDOWS WORKSTATION file (#2006.81) and starts a new session.
"KRN",8994,436,2,0)
^8994.02A^1^1
"KRN",8994,436,2,1,0)
DATA^1^245^1^1
"KRN",8994,436,2,1,1,0)
^^21^21^3080513^
"KRN",8994,436,2,1,1,1,0)
Data that should be stored in the IMAGING WINDOWS WORKSTATION file
"KRN",8994,436,2,1,1,2,0)
(#2006.81):
"KRN",8994,436,2,1,1,3,0)
 
"KRN",8994,436,2,1,1,4,0)
  ^01: Workstation name
"KRN",8994,436,2,1,1,5,0)
  ^02: Date/Time of the Capture application (external)
"KRN",8994,436,2,1,1,6,0)
  ^03: Date/Time of the Display application (external)
"KRN",8994,436,2,1,1,7,0)
  ^04: Location of the workstation
"KRN",8994,436,2,1,1,8,0)
  ^05: Date/Time of the MAGSETUP (external)
"KRN",8994,436,2,1,1,9,0)
  ^06: Version of the Display application (Major.Minor.Patch.Bild)
"KRN",8994,436,2,1,1,10,0)
  ^07: Version of the Capture application (Major.Minor.Patch.Bild)
"KRN",8994,436,2,1,1,11,0)
  ^08: Startup mode: 1 = Normal startup,
"KRN",8994,436,2,1,1,12,0)
       2 = Started by CPRS, 3 = Import API
"KRN",8994,436,2,1,1,13,0)
  ^09: OS Version
"KRN",8994,436,2,1,1,14,0)
  ^10: VistaRad version (Major.Minor.Patch.Bild)
"KRN",8994,436,2,1,1,15,0)
  ^11: RPCBroker server
"KRN",8994,436,2,1,1,16,0)
  ^12: RPCBroker port
"KRN",8994,436,2,1,1,17,0)
  ^13: Clinical Utilities version (Major.Minor.Patch.Bild)
"KRN",8994,436,2,1,1,18,0)
  ^14: TeleReader version (Major.Minor.Patch.Bild)
"KRN",8994,436,2,1,1,19,0)
  ^15: Date/Time of the Clinical Utilities (external)
"KRN",8994,436,2,1,1,20,0)
  ^16: Date/Time of the TeleReader (external)
"KRN",8994,436,2,1,1,21,0)
  ^17: Date/Time of the VistaRad (external)
"KRN",8994,436,2,"B","DATA",1)

"KRN",8994,436,2,"PARAMSEQ",1,1)

"KRN",8994,436,3,0)
^^14^14^3080513^
"KRN",8994,436,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an 
"KRN",8994,436,3,2,0)
error occurred during the execution of the procedure. In this case, the 
"KRN",8994,436,3,3,0)
Results[0] is formatted as follows:
"KRN",8994,436,3,4,0)
 
"KRN",8994,436,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,436,3,6,0)
                          ^01: 0
"KRN",8994,436,3,7,0)
                          ^02: Error message (optional)
"KRN",8994,436,3,8,0)
 
"KRN",8994,436,3,9,0)
Otherwise, first '^'-piece of the Results[0] contains the session number
"KRN",8994,436,3,10,0)
(IEN in the IMAGING WINDOWS SESSIONS file (#2006.82)):
"KRN",8994,436,3,11,0)
 
"KRN",8994,436,3,12,0)
  Results[0]            Result descriptor
"KRN",8994,436,3,13,0)
                          ^01: Session IEN (file #2006.82)
"KRN",8994,436,3,14,0)
                          ^02: Message
"KRN",8994,1245,-1)
0^7
"KRN",8994,1245,0)
MAG4 VERSION CHECK^CHKVER^MAGGTU4^2^R^^^1
"KRN",8994,1245,1,0)
^^4^4^3080513^
"KRN",8994,1245,1,1,0)
This remote procedure checks the version of the Imaging client
"KRN",8994,1245,1,2,0)
application. Depending on the version of the VistA Imaging KIDS install,
"KRN",8994,1245,1,3,0)
the client application can be forced to display a warning and/or
"KRN",8994,1245,1,4,0)
terminate.
"KRN",8994,1245,2,0)
^8994.02A^1^1
"KRN",8994,1245,2,1,0)
CLVER^1^30^1^1
"KRN",8994,1245,2,1,1,0)
^8994.021^12^12^3080513^^
"KRN",8994,1245,2,1,1,1,0)
The client application passes its descriptor as the value of this
"KRN",8994,1245,2,1,1,2,0)
parameter. It consists of 3 pieces separated by '|':
"KRN",8994,1245,2,1,1,3,0)
 
"KRN",8994,1245,2,1,1,4,0)
  |01: Version (Major.Minor.Patch.Build)
"KRN",8994,1245,2,1,1,5,0)
  |02: empty or "RIV" for remote image view clients
"KRN",8994,1245,2,1,1,6,0)
  |03: Client name ("CAPTURE", "CLUTILS", "DISPLAY", 
"KRN",8994,1245,2,1,1,7,0)
       "TELEREADER", or "VISTARAD")
"KRN",8994,1245,2,1,1,8,0)
 
"KRN",8994,1245,2,1,1,9,0)
For example, the Clinical Display client Version 3.0 Patch 8 Build (test
"KRN",8994,1245,2,1,1,10,0)
version) 21 will pass "3.0.8.21||DISPLAY" as the value of this parameter.
"KRN",8994,1245,2,1,1,11,0)
If the same client is used for remote image view, the parameter will have
"KRN",8994,1245,2,1,1,12,0)
the "3.0.8.21|RIV|DISPLAY" value.
"KRN",8994,1245,2,"B","CLVER",1)

"KRN",8994,1245,2,"B","MAGVER",1)

"KRN",8994,1245,2,"PARAMSEQ",1,1)

"KRN",8994,1245,3,0)
^8994.03^14^14^3080513^^
"KRN",8994,1245,3,1,0)
Result code and message are returned into the Results[0]. The subsequent
"KRN",8994,1245,3,2,0)
nodes may contain additional lines of the message text.
"KRN",8994,1245,3,3,0)
 
"KRN",8994,1245,3,4,0)
  Results[0]            Result descriptor
"KRN",8994,1245,3,5,0)
                          ^01: Result code:
"KRN",8994,1245,3,6,0)
                                 0  The client will display the
"KRN",8994,1245,3,7,0)
                                    message and continue.
"KRN",8994,1245,3,8,0)
                                 1  The client will continue without
"KRN",8994,1245,3,9,0)
                                    displaying any message.
"KRN",8994,1245,3,10,0)
                                 2  The client will display the
"KRN",8994,1245,3,11,0)
                                    message and then terminate.
"KRN",8994,1245,3,12,0)
                          ^02: Message
"KRN",8994,1245,3,13,0)
          
"KRN",8994,1245,3,14,0)
  Results[i]            Additional line of the message text
"KRN",8994,1289,-1)
0^2
"KRN",8994,1289,0)
MAG4 PAT GET IMAGES^PGI^MAGSIXG1^2^R^0^^1^3
"KRN",8994,1289,1,0)
^8994.01^16^16^3090325^^^^
"KRN",8994,1289,1,1,0)
This Remote Procedure Call is used to filter out those specialty for which
"KRN",8994,1289,1,2,0)
a given image category may be relevant.
"KRN",8994,1289,1,3,0)
 
"KRN",8994,1289,1,4,0)
When images are displayed, it is desirable to limit the list of presented
"KRN",8994,1289,1,5,0)
images to only those that are likely to be relevant in the current
"KRN",8994,1289,1,6,0)
context.
"KRN",8994,1289,1,7,0)
 
"KRN",8994,1289,1,8,0)
This procedure accepts a patient-IEN (DFN) and optionally also a category,
"KRN",8994,1289,1,9,0)
type, event and specialty.
"KRN",8994,1289,1,10,0)
 
"KRN",8994,1289,1,11,0)
This procedure will return a list of all images for that patient that
"KRN",8994,1289,1,12,0)
match the specified other input parameters.
"KRN",8994,1289,1,13,0)
 
"KRN",8994,1289,1,14,0)
NOTE: This remote procedure is kept for backward compatibility only. 
"KRN",8994,1289,1,15,0)
      Please use the MAG4 IMAGE LIST remote procedure for any new
"KRN",8994,1289,1,16,0)
      development.
"KRN",8994,1289,2,0)
^8994.02A^11^11
"KRN",8994,1289,2,1,0)
DFN^1^15^1^1
"KRN",8994,1289,2,1,1,0)
^8994.021^2^2^3080318^^^
"KRN",8994,1289,2,1,1,1,0)
The value of this parameter is the IEN in the Patient File (#2)
"KRN",8994,1289,2,1,1,2,0)
of a patient.
"KRN",8994,1289,2,2,0)
CLASS^1^^^3
"KRN",8994,1289,2,2,1,0)
^8994.021^2^2^3090325^^
"KRN",8994,1289,2,2,1,1,0)
Image class names or IENs (see the CLASS INDEX field (41) of the IMAGE
"KRN",8994,1289,2,2,1,2,0)
file (#2005) for details) separated by commas.
"KRN",8994,1289,2,2,1,3,0)
Image categories are defined in file 2005.82.
"KRN",8994,1289,2,3,0)
TYPE^1^^^4
"KRN",8994,1289,2,3,1,0)
^^2^2^3080318^
"KRN",8994,1289,2,3,1,1,0)
Image type names or IENs (see the TYPE INDEX field (42) of the file #2005
"KRN",8994,1289,2,3,1,2,0)
for details) separated by commas.
"KRN",8994,1289,2,3,1,3,0)
Image types are defined in file 2005.83.
"KRN",8994,1289,2,4,0)
EVENT^1^^^5
"KRN",8994,1289,2,4,1,0)
^^2^2^3080318^
"KRN",8994,1289,2,4,1,1,0)
Procedure/Event names or IENs (see the PROC/EVENT INDEX field (43) of the
"KRN",8994,1289,2,4,1,2,0)
file #2005 for details) separated by commas.
"KRN",8994,1289,2,4,1,3,0)
Image events are defined in file 2005.85.
"KRN",8994,1289,2,5,0)
SPEC^1^^^6
"KRN",8994,1289,2,5,1,0)
^8994.021^2^2^3090325^^^
"KRN",8994,1289,2,5,1,1,0)
Speciality/SubSpecialty names or IENs (see the SPEC/SUBSPEC INDEX field
"KRN",8994,1289,2,5,1,2,0)
(44) of the file #2005 for details) separated by commas.
"KRN",8994,1289,2,5,1,3,0)
Image specialties are defined in file 2005.84.
"KRN",8994,1289,2,6,0)
FROMDATE^1^^^7
"KRN",8994,1289,2,6,1,0)
^8994.021^6^6^3081107^^
"KRN",8994,1289,2,6,1,1,0)
Beginning of the date range for image selection. Dates can be in internal
"KRN",8994,1289,2,6,1,2,0)
or external FileMan format. If the parameter is not defined or empty, then
"KRN",8994,1289,2,6,1,3,0)
the date range remains open on this side.
"KRN",8994,1289,2,6,1,4,0)
 
"KRN",8994,1289,2,6,1,5,0)
The date range filter is applied to the exam/procedure dates
"KRN",8994,1289,2,6,1,6,0)
(PROCEDURE/EXAM DATE/TIME field (15)).
"KRN",8994,1289,2,7,0)
TODATE^1^^^8
"KRN",8994,1289,2,7,1,0)
^^6^6^3080318^
"KRN",8994,1289,2,7,1,1,0)
End of the date range for image selection. Dates can be in internal or
"KRN",8994,1289,2,7,1,2,0)
external FileMan format. If the parameter is not defined or empty, then
"KRN",8994,1289,2,7,1,3,0)
the date range remains open on this side.
"KRN",8994,1289,2,7,1,4,0)
 
"KRN",8994,1289,2,7,1,5,0)
The date range filter is applied to the exam/procedure dates
"KRN",8994,1289,2,7,1,6,0)
(PROCEDURE/EXAM DATE/TIME field (15)).
"KRN",8994,1289,2,8,0)
ORIGIN^1^^^9
"KRN",8994,1289,2,8,1,0)
^^2^2^3080318^
"KRN",8994,1289,2,8,1,1,0)
Internal or external values of the ORIGIN INDEX field (45) of the file
"KRN",8994,1289,2,8,1,2,0)
#2005 separated by commas.
"KRN",8994,1289,2,9,0)
DATA^1^^^10
"KRN",8994,1289,2,9,1,0)
^^1^1^3080318^
"KRN",8994,1289,2,9,1,1,0)
Reserved for future use.
"KRN",8994,1289,2,10,0)
FLAGS^1^^^11
"KRN",8994,1289,2,10,1,0)
^^6^6^3080318^
"KRN",8994,1289,2,10,1,1,0)
Flags that control the execution (can be combined):
"KRN",8994,1289,2,10,1,2,0)
 
"KRN",8994,1289,2,10,1,3,0)
  D  Include only deleted images (file #2005.1)
"KRN",8994,1289,2,10,1,4,0)
  E  Include only existing images (file #2005)
"KRN",8994,1289,2,10,1,5,0)
 
"KRN",8994,1289,2,10,1,6,0)
By default, the "E" value is assumed. 
"KRN",8994,1289,2,11,0)
PKG^1^^^2
"KRN",8994,1289,2,11,1,0)
^8994.021^2^2^3081107^^^^
"KRN",8994,1289,2,11,1,1,0)
Internal or external values of the PACKAGE INDEX field (40) of the file
"KRN",8994,1289,2,11,1,2,0)
#2005 separated by commas.
"KRN",8994,1289,2,"B","CATEGORY",2)

"KRN",8994,1289,2,"B","CLASS",2)

"KRN",8994,1289,2,"B","DATA",9)

"KRN",8994,1289,2,"B","DFN",1)

"KRN",8994,1289,2,"B","EVENT",4)

"KRN",8994,1289,2,"B","FLAGS",10)

"KRN",8994,1289,2,"B","FROMDATE",6)

"KRN",8994,1289,2,"B","ORIGIN",8)

"KRN",8994,1289,2,"B","PKG",11)

"KRN",8994,1289,2,"B","SPEC",5)

"KRN",8994,1289,2,"B","SPECIALTY",5)

"KRN",8994,1289,2,"B","TODATE",7)

"KRN",8994,1289,2,"B","TYPE",3)

"KRN",8994,1289,2,"PARAMSEQ",1,1)

"KRN",8994,1289,2,"PARAMSEQ",2,2)

"KRN",8994,1289,2,"PARAMSEQ",2,11)

"KRN",8994,1289,2,"PARAMSEQ",3,2)

"KRN",8994,1289,2,"PARAMSEQ",3,3)

"KRN",8994,1289,2,"PARAMSEQ",4,3)

"KRN",8994,1289,2,"PARAMSEQ",4,4)

"KRN",8994,1289,2,"PARAMSEQ",5,4)

"KRN",8994,1289,2,"PARAMSEQ",5,5)

"KRN",8994,1289,2,"PARAMSEQ",6,5)

"KRN",8994,1289,2,"PARAMSEQ",7,6)

"KRN",8994,1289,2,"PARAMSEQ",8,7)

"KRN",8994,1289,2,"PARAMSEQ",9,8)

"KRN",8994,1289,2,"PARAMSEQ",10,9)

"KRN",8994,1289,2,"PARAMSEQ",11,10)

"KRN",8994,1289,3,0)
^^37^37^3081107^
"KRN",8994,1289,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,1289,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,1289,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,1289,3,4,0)
  
"KRN",8994,1289,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,1289,3,6,0)
                          ^01: 0
"KRN",8994,1289,3,7,0)
                          ^02: Message
"KRN",8994,1289,3,8,0)
  
"KRN",8994,1289,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,1289,3,10,0)
                          ^01: Error code
"KRN",8994,1289,3,11,0)
                          ^02: Message
"KRN",8994,1289,3,12,0)
                          ^03: Error location
"KRN",8994,1289,3,13,0)
                          ^04: Message type
"KRN",8994,1289,3,14,0)
 
"KRN",8994,1289,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,1289,3,16,0)
                          ^01: ""
"KRN",8994,1289,3,17,0)
                          ^02: Text
"KRN",8994,1289,3,18,0)
  
"KRN",8994,1289,3,19,0)
Otherwise, the Results array is formatted as follows:
"KRN",8994,1289,3,20,0)
 
"KRN",8994,1289,3,21,0)
  Results[0]            Result descriptor
"KRN",8994,1289,3,22,0)
                          ^01: 1
"KRN",8994,1289,3,23,0)
                          ^02: Description of the image selection
"KRN",8994,1289,3,24,0)
                               criteria (filter).
"KRN",8994,1289,3,25,0)
   
"KRN",8994,1289,3,26,0)
  Results[1]            '^'-delimited list of column headers used
"KRN",8994,1289,3,27,0)
                        in the cMagListView (see the HEADER^MAGSIX1
"KRN",8994,1289,3,28,0)
                        for details).
"KRN",8994,1289,3,29,0)
  
"KRN",8994,1289,3,30,0)
  Results[i]            Image descriptor
"KRN",8994,1289,3,31,0)
                          |01: Values to be displayed in the columns 
"KRN",8994,1289,3,32,0)
                               separated by '^'. (see the
"KRN",8994,1289,3,33,0)
                               BLDHDR1^MAGSIXG2 for details).
"KRN",8994,1289,3,34,0)
                         
"KRN",8994,1289,3,35,0)
                          |02: Data that is used internally by the
"KRN",8994,1289,3,36,0)
                               application (see the $$INFO^MAGGAII
"KRN",8994,1289,3,37,0)
                               for details).
"KRN",8994,1800,-1)
0^11
"KRN",8994,1800,0)
MAG4 FILTER SAVE^SET^MAGGSFL1^1^R
"KRN",8994,1800,1,0)
^^2^2^3090126^
"KRN",8994,1800,1,1,0)
Stores the new filter to the IMAGE LIST FILTERS file (#2005.87) or updates
"KRN",8994,1800,1,2,0)
properties of the existing filter.
"KRN",8994,1800,2,0)
^8994.02A^1^1
"KRN",8994,1800,2,1,0)
MAGGZ^2^^1^1
"KRN",8994,1800,2,1,1,0)
^^36^36^3090126^
"KRN",8994,1800,2,1,1,1,0)
List that stores the filter data and related parameters.
"KRN",8994,1800,2,1,1,2,0)
 
"KRN",8994,1800,2,1,1,3,0)
Each list item has 2 pieces separated by '^': 
"KRN",8994,1800,2,1,1,4,0)
 
"KRN",8994,1800,2,1,1,5,0)
  ^01: Field number
"KRN",8994,1800,2,1,1,6,0)
  ^02: Field value
"KRN",8994,1800,2,1,1,7,0)
 
"KRN",8994,1800,2,1,1,8,0)
The following special names can be used in place of field numbers:
"KRN",8994,1800,2,1,1,9,0)
 
"KRN",8994,1800,2,1,1,10,0)
  FLAGS - Value contains flags that control the execution 
"KRN",8994,1800,2,1,1,11,0)
          (can be combined):
"KRN",8994,1800,2,1,1,12,0)
 
"KRN",8994,1800,2,1,1,13,0)
            S  Selective save. If this flag is
"KRN",8994,1800,2,1,1,14,0)
               provided, then only the fields listed
"KRN",8994,1800,2,1,1,15,0)
               in the MAGZ array are updated; other
"KRN",8994,1800,2,1,1,16,0)
               filter properties are not changed.
"KRN",8994,1800,2,1,1,17,0)
 
"KRN",8994,1800,2,1,1,18,0)
               By default, all filter properties,
"KRN",8994,1800,2,1,1,19,0)
               which do not have new values in the
"KRN",8994,1800,2,1,1,20,0)
               MAGZ array, are cleared.
"KRN",8994,1800,2,1,1,21,0)
 
"KRN",8994,1800,2,1,1,22,0)
  IEN   - Value is the Internal Entry Number of the filter 
"KRN",8994,1800,2,1,1,23,0)
          that has to be modified.
"KRN",8994,1800,2,1,1,24,0)
 
"KRN",8994,1800,2,1,1,25,0)
  USER  - Value is the IEN of the user who this filter is 
"KRN",8994,1800,2,1,1,26,0)
          saved for.
"KRN",8994,1800,2,1,1,27,0)
 
"KRN",8994,1800,2,1,1,28,0)
Example:
"KRN",8994,1800,2,1,1,29,0)
 
"KRN",8994,1800,2,1,1,30,0)
  with RPCBroker.Param[0] do
"KRN",8994,1800,2,1,1,31,0)
    begin
"KRN",8994,1800,2,1,1,32,0)
      PType := list;
"KRN",8994,1800,2,1,1,33,0)
      Mult[1] := 'IEN^23';
"KRN",8994,1800,2,1,1,34,0)
      Mult[2] := 'FLAGS^S';
"KRN",8994,1800,2,1,1,35,0)
      Mult[3] := '15^Column Description';
"KRN",8994,1800,2,1,1,36,0)
    end;
"KRN",8994,1800,2,"B","MAGGZ",1)

"KRN",8994,1800,2,"PARAMSEQ",1,1)

"KRN",8994,1800,3,0)
^8994.03^3^3^3090126^^^^
"KRN",8994,1800,3,1,0)
The return literal is two piece "^" delimited string
"KRN",8994,1800,3,2,0)
If successful:    Filter IEN ^ Filter NAME
"KRN",8994,1800,3,3,0)
If an Error:  0^error message
"KRN",8994,2493,-1)
0^5
"KRN",8994,2493,0)
MAGG REASON LIST^LSTRSNS^MAGGA01^4^R^^^1
"KRN",8994,2493,1,0)
^8994.01^2^2^3080728^^^^
"KRN",8994,2493,1,1,0)
This remote procedure returns the list of reasons for actions performed on
"KRN",8994,2493,1,2,0)
images. This data is loaded from the MAG REASON file (#2005.88).
"KRN",8994,2493,2,0)
^8994.02A^3^3
"KRN",8994,2493,2,1,0)
TYPE^1^^1^1
"KRN",8994,2493,2,1,1,0)
^^14^14^3080717^
"KRN",8994,2493,2,1,1,1,0)
This parameter defines the type(s) of reasons that are returned by the 
"KRN",8994,2493,2,1,1,2,0)
remote procedure. Its value should consist of one or more of the following
"KRN",8994,2493,2,1,1,3,0)
characters:
"KRN",8994,2493,2,1,1,4,0)
 
"KRN",8994,2493,2,1,1,5,0)
  C  Reasons for copying images
"KRN",8994,2493,2,1,1,6,0)
 
"KRN",8994,2493,2,1,1,7,0)
  D  Reasons for deleting images
"KRN",8994,2493,2,1,1,8,0)
 
"KRN",8994,2493,2,1,1,9,0)
  P  Reasons for printing images
"KRN",8994,2493,2,1,1,10,0)
 
"KRN",8994,2493,2,1,1,11,0)
  S  Reasons for changing image status
"KRN",8994,2493,2,1,1,12,0)
 
"KRN",8994,2493,2,1,1,13,0)
For example, if the "CD" value is assigned to the parameter, the RPC
"KRN",8994,2493,2,1,1,14,0)
returns the reasons for copying and deleting images.
"KRN",8994,2493,2,2,0)
FLAGS^1^^^2
"KRN",8994,2493,2,2,1,0)
^^8^8^3080229^
"KRN",8994,2493,2,2,1,1,0)
Flags that control execution (can be combined):
"KRN",8994,2493,2,2,1,2,0)
 
"KRN",8994,2493,2,2,1,3,0)
  F  Include full details (description text, etc.)
"KRN",8994,2493,2,2,1,4,0)
 
"KRN",8994,2493,2,2,1,5,0)
  I  Include inactivated reasons
"KRN",8994,2493,2,2,1,6,0)
 
"KRN",8994,2493,2,2,1,7,0)
If this parameter is not defined or empty, only the summary data for
"KRN",8994,2493,2,2,1,8,0)
currently active reasons is returned.
"KRN",8994,2493,2,3,0)
PART^1^^^3
"KRN",8994,2493,2,3,1,0)
^8994.021^6^6^3080728^^^^
"KRN",8994,2493,2,3,1,1,0)
The partial match restriction (case sensitive). For example, a PART value
"KRN",8994,2493,2,3,1,2,0)
of "ZZ" would restrict the list to those entries starting with the letters
"KRN",8994,2493,2,3,1,3,0)
"ZZ".
"KRN",8994,2493,2,3,1,4,0)
 
"KRN",8994,2493,2,3,1,5,0)
If this parameter is not defined or empty, no text restrictions are 
"KRN",8994,2493,2,3,1,6,0)
applied.
"KRN",8994,2493,2,"B","FLAGS",2)

"KRN",8994,2493,2,"B","PART",3)

"KRN",8994,2493,2,"B","TYPE",1)

"KRN",8994,2493,2,"PARAMSEQ",1,1)

"KRN",8994,2493,2,"PARAMSEQ",2,2)

"KRN",8994,2493,2,"PARAMSEQ",3,3)

"KRN",8994,2493,3,0)
^^47^47^3080728^
"KRN",8994,2493,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2493,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2493,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2493,3,4,0)
  
"KRN",8994,2493,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2493,3,6,0)
                          ^01: 0
"KRN",8994,2493,3,7,0)
                          ^02: Message
"KRN",8994,2493,3,8,0)
  
"KRN",8994,2493,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2493,3,10,0)
                          ^01: Error code
"KRN",8994,2493,3,11,0)
                          ^02: Message
"KRN",8994,2493,3,12,0)
                          ^03: Error location
"KRN",8994,2493,3,13,0)
                          ^04: Message type
"KRN",8994,2493,3,14,0)
 
"KRN",8994,2493,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2493,3,16,0)
                          ^01: ""
"KRN",8994,2493,3,17,0)
                          ^02: Text
"KRN",8994,2493,3,18,0)
 
"KRN",8994,2493,3,19,0)
Otherwise, the Results[0] contains '1^OK' and the list of reasons is
"KRN",8994,2493,3,20,0)
returned in the subsequent elements of the Results array as follows:
"KRN",8994,2493,3,21,0)
 
"KRN",8994,2493,3,22,0)
  Results[i]            Reason summary
"KRN",8994,2493,3,23,0)
                          ^01: IEN of the reason (file #2005.88)
"KRN",8994,2493,3,24,0)
                          ^02: Text of the reason
"KRN",8994,2493,3,25,0)
                          ^03: Types of the reason (combination of "C",
"KRN",8994,2493,3,26,0)
                               "D", "P", and/or "S")
"KRN",8994,2493,3,27,0)
                          ^04: Date of inactivation (FileMan). 
"KRN",8994,2493,3,28,0)
                               This piece is always empty if the value
"KRN",8994,2493,3,29,0)
                               of the FLAGS parameter does not contain
"KRN",8994,2493,3,30,0)
                               "I". Otherwise, a date in internal FileMan
"KRN",8994,2493,3,31,0)
                               format is returned here for inactivated
"KRN",8994,2493,3,32,0)
                               reasons.
"KRN",8994,2493,3,33,0)
                          ^05: Unique code of the reason (only for 
"KRN",8994,2493,3,34,0)
                               standard reasons distributed nationally;
"KRN",8994,2493,3,35,0)
                               reasons defined by the sites do not have
"KRN",8994,2493,3,36,0)
                               codes).                        
"KRN",8994,2493,3,37,0)
 
"KRN",8994,2493,3,38,0)
  Results[i+j]          Line of the description of the reason (optional)
"KRN",8994,2493,3,39,0)
                          ^01: "D"
"KRN",8994,2493,3,40,0)
                          ^02: Text line
"KRN",8994,2493,3,41,0)
 
"KRN",8994,2493,3,42,0)
                        The description text is returned only if the
"KRN",8994,2493,3,43,0)
                        value of the FLAGS parameter contains "F" and 
"KRN",8994,2493,3,44,0)
                        the DESCRIPTION field (1) of the MAG REASON file
"KRN",8994,2493,3,45,0)
                        (#2005.88) is not empty.
"KRN",8994,2493,3,46,0)
 
"KRN",8994,2493,3,47,0)
The reasons are sorted alphabetically (case sensitive).
"KRN",8994,2494,-1)
0^3
"KRN",8994,2494,0)
MAG4 IMAGE LIST^GETIMGS^MAGSIXG1^2^R^^^1
"KRN",8994,2494,1,0)
^8994.01^2^2^3090302^^^^
"KRN",8994,2494,1,1,0)
This remote procedure returns information about images that conform to 
"KRN",8994,2494,1,2,0)
the provided criteria.
"KRN",8994,2494,2,0)
^8994.02A^6^5
"KRN",8994,2494,2,2,0)
FLAGS^1^^1^1
"KRN",8994,2494,2,2,1,0)
^^42^42^3090302^
"KRN",8994,2494,2,2,1,1,0)
Flags that control the execution (can be combined):
"KRN",8994,2494,2,2,1,2,0)
 
"KRN",8994,2494,2,2,1,3,0)
  C  Capture date range. If this flag is provided, then the
"KRN",8994,2494,2,2,1,4,0)
     remote procedure uses values of the FROMDATE and TODATE
"KRN",8994,2494,2,2,1,5,0)
     parameters to select images that were captured in this
"KRN",8994,2494,2,2,1,6,0)
     date range (see the DATE/TIME IMAGE SAVED field (7) and
"KRN",8994,2494,2,2,1,7,0)
     the "AD" cross-reference).
"KRN",8994,2494,2,2,1,8,0)
 
"KRN",8994,2494,2,2,1,9,0)
     Otherwise, values of those parameters are treated as 
"KRN",8994,2494,2,2,1,10,0)
     the date range when procedures were performed (see the
"KRN",8994,2494,2,2,1,11,0)
     PROCEDURE/EXAM DATE/TIME field (15) and cross-references 
"KRN",8994,2494,2,2,1,12,0)
     "APDTPX" and "APDT").
"KRN",8994,2494,2,2,1,13,0)
 
"KRN",8994,2494,2,2,1,14,0)
  D  Include only deleted images (file #2005.1)
"KRN",8994,2494,2,2,1,15,0)
  E  Include only existing images (file #2005)
"KRN",8994,2494,2,2,1,16,0)
 
"KRN",8994,2494,2,2,1,17,0)
  S  Return the sparse subset of images captured by the user
"KRN",8994,2494,2,2,1,18,0)
     defined by the miscellaneous "SAVEDBY" filter parameter
"KRN",8994,2494,2,2,1,19,0)
     (see the MISCPRMS parameter). The "SAVEDBY" becomes a
"KRN",8994,2494,2,2,1,20,0)
     required parameter in this case.
"KRN",8994,2494,2,2,1,21,0)
 
"KRN",8994,2494,2,2,1,22,0)
     Firstly, images are preselected according to the date 
"KRN",8994,2494,2,2,1,23,0)
     range and other criteria. Those of them that were captured
"KRN",8994,2494,2,2,1,24,0)
     immediately before and after patient changes are stored to
"KRN",8994,2494,2,2,1,25,0)
     the "priority" temporary buffer. The others are stored to
"KRN",8994,2494,2,2,1,26,0)
     the regular temporary buffer.
"KRN",8994,2494,2,2,1,27,0)
 
"KRN",8994,2494,2,2,1,28,0)
     Then, the requested maximum number of images is calculated
"KRN",8994,2494,2,2,1,29,0)
     according to the total number of preselected entries and
"KRN",8994,2494,2,2,1,30,0)
     the percentage value defined by the MAXNUM parameter.
"KRN",8994,2494,2,2,1,31,0)
     
"KRN",8994,2494,2,2,1,32,0)
     If the number of entries in the "priority" buffer less
"KRN",8994,2494,2,2,1,33,0)
     than the maximum number of images and the regular buffer
"KRN",8994,2494,2,2,1,34,0)
     is not empty, then missing quantity of preselected images
"KRN",8994,2494,2,2,1,35,0)
     is merged to the "priority" buffer from the regular one.
"KRN",8994,2494,2,2,1,36,0)
 
"KRN",8994,2494,2,2,1,37,0)
     Finally, no more than maximum number of entries is copied
"KRN",8994,2494,2,2,1,38,0)
     from the "priority" buffer to the remote procedure's
"KRN",8994,2494,2,2,1,39,0)
     result array.
"KRN",8994,2494,2,2,1,40,0)
     
"KRN",8994,2494,2,2,1,41,0)
If neither 'E' nor 'D' flag is provided, then an error code (-6) is
"KRN",8994,2494,2,2,1,42,0)
returned.
"KRN",8994,2494,2,2,1,43,0)
returned.
"KRN",8994,2494,2,3,0)
FROMDATE^1^^^2
"KRN",8994,2494,2,3,1,0)
^^11^11^3081107^
"KRN",8994,2494,2,3,1,1,0)
Beginning of the date range for image selection. Date can be in internal
"KRN",8994,2494,2,3,1,2,0)
or external FileMan format. If the parameter is not defined or empty, then
"KRN",8994,2494,2,3,1,3,0)
the date range remains open on this side.
"KRN",8994,2494,2,3,1,4,0)
 
"KRN",8994,2494,2,3,1,5,0)
Depending on the value of the FLAGS parameter, the date range filter is
"KRN",8994,2494,2,3,1,6,0)
applied either to the exam/procedure dates (PROCEDURE/EXAM DATE/TIME field
"KRN",8994,2494,2,3,1,7,0)
(15)) or image capture dates (DATE/TIME IMAGE SAVED field (7)).
"KRN",8994,2494,2,3,1,8,0)
 
"KRN",8994,2494,2,3,1,9,0)
Time parts of date range parameters are ignored and both ends of the date
"KRN",8994,2494,2,3,1,10,0)
range are included in the search. For example, in order to search images
"KRN",8994,2494,2,3,1,11,0)
for May 21, 2008, the internal value of both parameters should be 3080521.
"KRN",8994,2494,2,4,0)
TODATE^1^^^3
"KRN",8994,2494,2,4,1,0)
^^11^11^3081107^
"KRN",8994,2494,2,4,1,1,0)
End of the date range for image selection. Dates can be in internal or
"KRN",8994,2494,2,4,1,2,0)
external FileMan format. If the parameter is not defined or empty, then
"KRN",8994,2494,2,4,1,3,0)
the date range remains open on this side.
"KRN",8994,2494,2,4,1,4,0)
 
"KRN",8994,2494,2,4,1,5,0)
Depending on the value of the FLAGS parameter, the date range filter is
"KRN",8994,2494,2,4,1,6,0)
applied either to the exam/procedure dates (PROCEDURE/EXAM DATE/TIME field
"KRN",8994,2494,2,4,1,7,0)
(15)) or image capture dates (DATE/TIME IMAGE SAVED field (7)).
"KRN",8994,2494,2,4,1,8,0)
 
"KRN",8994,2494,2,4,1,9,0)
Time parts of date range parameters are ignored and both ends of the date
"KRN",8994,2494,2,4,1,10,0)
range are included in the search. For example, in order to search images
"KRN",8994,2494,2,4,1,11,0)
for May 21, 2008, the internal value of both parameters should be 3080521.
"KRN",8994,2494,2,5,0)
MISCPRMS^2^^^5
"KRN",8994,2494,2,5,1,0)
^^78^78^3090126^
"KRN",8994,2494,2,5,1,1,0)
Items of this list define various filter parameters. Each item has 3 or
"KRN",8994,2494,2,5,1,2,0)
more pieces separated by '^':
"KRN",8994,2494,2,5,1,3,0)
 
"KRN",8994,2494,2,5,1,4,0)
  ^01: Parameter name
"KRN",8994,2494,2,5,1,5,0)
  ^02: Index (for multiples and word-processing values)
"KRN",8994,2494,2,5,1,6,0)
  ^03: Value1
"KRN",8994,2494,2,5,1,7,0)
  ^04: Value2
"KRN",8994,2494,2,5,1,8,0)
  ...
"KRN",8994,2494,2,5,1,9,0)
 
"KRN",8994,2494,2,5,1,10,0)
The following filter parameters are supported by this remote procedure:
"KRN",8994,2494,2,5,1,11,0)
 
"KRN",8994,2494,2,5,1,12,0)
  CAPTAPP^^{Name or Code}^{Name or Code}^...
"KRN",8994,2494,2,5,1,13,0)
    Internal or external values of the CAPTURE APPLICATION
"KRN",8994,2494,2,5,1,14,0)
    field (8.1) of the file #2005.
"KRN",8994,2494,2,5,1,15,0)
 
"KRN",8994,2494,2,5,1,16,0)
  GDESC^^{Text}
"KRN",8994,2494,2,5,1,17,0)
    Text that should be present in the SHORT DESCRIPTION
"KRN",8994,2494,2,5,1,18,0)
    field (10) of the IMAGE file (#2005). The comparison
"KRN",8994,2494,2,5,1,19,0)
    is case-insensitive.
"KRN",8994,2494,2,5,1,20,0)
 
"KRN",8994,2494,2,5,1,21,0)
  IDFN^^{DFN}
"KRN",8994,2494,2,5,1,22,0)
    Patient IEN (DFN). If this parameter is not defined, all
"KRN",8994,2494,2,5,1,23,0)
    patients' images are considered.
"KRN",8994,2494,2,5,1,24,0)
 
"KRN",8994,2494,2,5,1,25,0)
  ISTAT^^{Name or Code}^{Name or Code}^...
"KRN",8994,2494,2,5,1,26,0)
    Internal or external values of the STATUS field (113)
"KRN",8994,2494,2,5,1,27,0)
    of the file #2005. 0 (zero) code selects image records
"KRN",8994,2494,2,5,1,28,0)
    with empty STATUS field.
"KRN",8994,2494,2,5,1,29,0)
 
"KRN",8994,2494,2,5,1,30,0)
  IXCLASS^^{Name or IEN}^{Name or IEN}^...
"KRN",8994,2494,2,5,1,31,0)
    Image class names or IENs (see the CLASS INDEX field (41)
"KRN",8994,2494,2,5,1,32,0)
    of the file #2005 for details).
"KRN",8994,2494,2,5,1,33,0)
 
"KRN",8994,2494,2,5,1,34,0)
  IXORIGIN^^{Name or Code}^{Name or Code}^...
"KRN",8994,2494,2,5,1,35,0)
    Internal or external values of the ORIGIN INDEX field (45)
"KRN",8994,2494,2,5,1,36,0)
    of the file #2005.
"KRN",8994,2494,2,5,1,37,0)
 
"KRN",8994,2494,2,5,1,38,0)
  IXPKG^^{Name or Code}^{Name or Code}^...
"KRN",8994,2494,2,5,1,39,0)
    Internal or external values of the PACKAGE INDEX field (40)
"KRN",8994,2494,2,5,1,40,0)
    of the file #2005.
"KRN",8994,2494,2,5,1,41,0)
 
"KRN",8994,2494,2,5,1,42,0)
  IXPROC^^{Name or IEN}^{Name or IEN}^...
"KRN",8994,2494,2,5,1,43,0)
    Procedure/Event names or IENs (see the PROC/EVENT INDEX
"KRN",8994,2494,2,5,1,44,0)
    field (43) of the file #2005 for details).
"KRN",8994,2494,2,5,1,45,0)
 
"KRN",8994,2494,2,5,1,46,0)
  IXSPEC^^{Name or IEN}^{Name or IEN}^...
"KRN",8994,2494,2,5,1,47,0)
    Specialty/SubSpecialty names or IENs (see the SPEC/SUBSPEC
"KRN",8994,2494,2,5,1,48,0)
    INDEX field (44) of the file #2005 for details).
"KRN",8994,2494,2,5,1,49,0)
 
"KRN",8994,2494,2,5,1,50,0)
  IXTYPE^^{Name or IEN}^{Name or IEN}^...
"KRN",8994,2494,2,5,1,51,0)
    Image type names or IENs (see the TYPE INDEX field (42) of
"KRN",8994,2494,2,5,1,52,0)
    the file #2005 for details).
"KRN",8994,2494,2,5,1,53,0)
 
"KRN",8994,2494,2,5,1,54,0)
  SAVEDBY^^{DUZ}
"KRN",8994,2494,2,5,1,55,0)
    If this parameter is defined, then only those images that were
"KRN",8994,2494,2,5,1,56,0)
    captured by this user (see the IMAGE SAVE BY field (8) of the
"KRN",8994,2494,2,5,1,57,0)
    file #2005 for details) are considered.
"KRN",8994,2494,2,5,1,58,0)
 
"KRN",8994,2494,2,5,1,59,0)
  SENSIMG^^{Name or Code}^{Name or Code}^...
"KRN",8994,2494,2,5,1,60,0)
    Internal or external values of the CONTROLLED IMAGE field (112)
"KRN",8994,2494,2,5,1,61,0)
    of the file #2005.
"KRN",8994,2494,2,5,1,62,0)
 
"KRN",8994,2494,2,5,1,63,0)
For pointer type parameters, pure numeric values are always treated as
"KRN",8994,2494,2,5,1,64,0)
internal entry numbers (IEN).
"KRN",8994,2494,2,5,1,65,0)
 
"KRN",8994,2494,2,5,1,66,0)
Parameters can be added to the list in any order. See comments preceding
"KRN",8994,2494,2,5,1,67,0)
the GETIMGS^MAGSIXG1 for more details.
"KRN",8994,2494,2,5,1,68,0)
 
"KRN",8994,2494,2,5,1,69,0)
Example:
"KRN",8994,2494,2,5,1,70,0)
 
"KRN",8994,2494,2,5,1,71,0)
  with RPCBroker.Param[4] do
"KRN",8994,2494,2,5,1,72,0)
    begin
"KRN",8994,2494,2,5,1,73,0)
      PType := list;
"KRN",8994,2494,2,5,1,74,0)
      Mult[1] := 'IXPKG^^RAD^LAB';
"KRN",8994,2494,2,5,1,75,0)
      Mult[2] := 'IXCLASS^^1^ADMIN';
"KRN",8994,2494,2,5,1,76,0)
      Mult[3] := 'IXORIGIN^^NON-VA^F';
"KRN",8994,2494,2,5,1,77,0)
      Mult[4] := 'IDFN^^2341'; 
"KRN",8994,2494,2,5,1,78,0)
    end;
"KRN",8994,2494,2,6,0)
MAXNUM^1^^^4
"KRN",8994,2494,2,6,1,0)
^8994.021^9^9^3090130^^
"KRN",8994,2494,2,6,1,1,0)
If this parameter is defined and greater than 0, then it determines the
"KRN",8994,2494,2,6,1,2,0)
maximum number of images returned by the call.
"KRN",8994,2494,2,6,1,3,0)
 
"KRN",8994,2494,2,6,1,4,0)
If the S flag is included in the value of the FLAGS parameter, then the 
"KRN",8994,2494,2,6,1,5,0)
MAXNUM parameter must be defined and greater than 0. Its value determines
"KRN",8994,2494,2,6,1,6,0)
the percentage of preselected images to be returned in the result array.
"KRN",8994,2494,2,6,1,7,0)
For example, if the value of this parameter is 35 and 230 images are
"KRN",8994,2494,2,6,1,8,0)
preselected (according to the user, date range, and other selection
"KRN",8994,2494,2,6,1,9,0)
criteria), then 81 images will be returned.
"KRN",8994,2494,2,"B","FLAGS",2)

"KRN",8994,2494,2,"B","FROMDATE",3)

"KRN",8994,2494,2,"B","MAXNUM",6)

"KRN",8994,2494,2,"B","MISCPRMS",5)

"KRN",8994,2494,2,"B","TODATE",4)

"KRN",8994,2494,2,"PARAMSEQ",1,2)

"KRN",8994,2494,2,"PARAMSEQ",2,3)

"KRN",8994,2494,2,"PARAMSEQ",3,4)

"KRN",8994,2494,2,"PARAMSEQ",4,6)

"KRN",8994,2494,2,"PARAMSEQ",5,5)

"KRN",8994,2494,3,0)
^^49^49^3090130^
"KRN",8994,2494,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2494,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2494,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2494,3,4,0)
  
"KRN",8994,2494,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2494,3,6,0)
                          ^01: 0
"KRN",8994,2494,3,7,0)
                          ^02: Message
"KRN",8994,2494,3,8,0)
  
"KRN",8994,2494,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2494,3,10,0)
                          ^01: Error code
"KRN",8994,2494,3,11,0)
                          ^02: Message
"KRN",8994,2494,3,12,0)
                          ^03: Error location
"KRN",8994,2494,3,13,0)
                          ^04: Message type
"KRN",8994,2494,3,14,0)
 
"KRN",8994,2494,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2494,3,16,0)
                          ^01: ""
"KRN",8994,2494,3,17,0)
                          ^02: Text  
"KRN",8994,2494,3,18,0)
 
"KRN",8994,2494,3,19,0)
Otherwise, the Results array is formatted as follows:
"KRN",8994,2494,3,20,0)
 
"KRN",8994,2494,3,21,0)
  Results[0]            Result descriptor
"KRN",8994,2494,3,22,0)
                          ^01: 1
"KRN",8994,2494,3,23,0)
                          ^02: Description of the image selection
"KRN",8994,2494,3,24,0)
                               criteria (filter).
"KRN",8994,2494,3,25,0)
                          ^03: Non-zero if there are more records
"KRN",8994,2494,3,26,0)
                               available. This piece is populated
"KRN",8994,2494,3,27,0)
                               only if the MAXNUM parameter is 
"KRN",8994,2494,3,28,0)
                               defined and greater than 0.
"KRN",8994,2494,3,29,0)
 
"KRN",8994,2494,3,30,0)
                               If the S flag is included in the
"KRN",8994,2494,3,31,0)
                               value of the FLAGS parameter, then
"KRN",8994,2494,3,32,0)
                               a non-zero value of this piece
"KRN",8994,2494,3,33,0)
                               indicates that not all "priority"
"KRN",8994,2494,3,34,0)
                               entries are returned. See the 
"KRN",8994,2494,3,35,0)
                               description of the FLAGS parameter
"KRN",8994,2494,3,36,0)
                               for more details.
"KRN",8994,2494,3,37,0)
 
"KRN",8994,2494,3,38,0)
  Results[1]            '^'-delimited list of column headers used
"KRN",8994,2494,3,39,0)
                        in the cMagListView (see the BLDHDR1^MAGSIXG2
"KRN",8994,2494,3,40,0)
                        for details).
"KRN",8994,2494,3,41,0)
  
"KRN",8994,2494,3,42,0)
  Results[i]            Image descriptor
"KRN",8994,2494,3,43,0)
                          |01: Values to be displayed in the columns 
"KRN",8994,2494,3,44,0)
                               separated by '^'. (see the
"KRN",8994,2494,3,45,0)
                               BLDHDR1^MAGSIXG2 for details).
"KRN",8994,2494,3,46,0)
                         
"KRN",8994,2494,3,47,0)
                          |02: Data that is used internally by the
"KRN",8994,2494,3,48,0)
                               application (see the $$INFO^MAGGAII
"KRN",8994,2494,3,49,0)
                               for details).
"KRN",8994,2495,-1)
0^4
"KRN",8994,2495,0)
MAGG IMAGE SET PROPERTIES^SETPROPS^MAGGA02^2^R^^^1
"KRN",8994,2495,1,0)
^^9^9^3090304^
"KRN",8994,2495,1,1,0)
This remote procedure updates one or more image properties (fields of the
"KRN",8994,2495,1,2,0)
record of the IMAGE file (#2005)).
"KRN",8994,2495,1,3,0)
 
"KRN",8994,2495,1,4,0)
If one of the following fields is updated in the parent or the child of a
"KRN",8994,2495,1,5,0)
group that has only one image, then the changes are replicated to the
"KRN",8994,2495,1,6,0)
child or parent respectively: SHORT DESCRIPTION (10), TYPE INDEX (42),
"KRN",8994,2495,1,7,0)
PROC/EVENT INDEX (43), SPEC/SUBSPEC INDEX (44), ORIGIN INDEX (45),
"KRN",8994,2495,1,8,0)
CREATION DATE (110), CONTROLLED IMAGE (112), STATUS (113), and STATUS
"KRN",8994,2495,1,9,0)
REASON (113.3).
"KRN",8994,2495,2,0)
^8994.02A^3^3
"KRN",8994,2495,2,1,0)
IMGIEN^1^^1^1
"KRN",8994,2495,2,1,1,0)
^8994.021^1^1^3080331^^
"KRN",8994,2495,2,1,1,1,0)
IEN of the image record in the IMAGE file (#2005).
"KRN",8994,2495,2,2,0)
FLAGS^1^^^2
"KRN",8994,2495,2,2,1,0)
^8994.021^1^1^3080331^^
"KRN",8994,2495,2,2,1,1,0)
Reserved for future use.
"KRN",8994,2495,2,3,0)
PROPVALS^2^^^3
"KRN",8994,2495,2,3,1,0)
^^92^92^3090126^
"KRN",8994,2495,2,3,1,1,0)
Items of this list define new values of image properties. Each item has
"KRN",8994,2495,2,3,1,2,0)
3 pieces separated by '^':
"KRN",8994,2495,2,3,1,3,0)
 
"KRN",8994,2495,2,3,1,4,0)
  ^01: Parameter name
"KRN",8994,2495,2,3,1,5,0)
  ^02: "" (empty)
"KRN",8994,2495,2,3,1,6,0)
  ^03: Value
"KRN",8994,2495,2,3,1,7,0)
 
"KRN",8994,2495,2,3,1,8,0)
The following parameters are supported by this remote procedure:
"KRN",8994,2495,2,3,1,9,0)
 
"KRN",8994,2495,2,3,1,10,0)
  CRTNDT^^{Date/time}
"KRN",8994,2495,2,3,1,11,0)
    Internal or external value for the CREATION DATE field (110)
"KRN",8994,2495,2,3,1,12,0)
    of the IMAGE file #2005.
"KRN",8994,2495,2,3,1,13,0)
 
"KRN",8994,2495,2,3,1,14,0)
  GDESC^^{Text}
"KRN",8994,2495,2,3,1,15,0)
    Text for the SHORT DESCRIPTION field (10) of the file #2005.
"KRN",8994,2495,2,3,1,16,0)
 
"KRN",8994,2495,2,3,1,17,0)
  ISTAT^^{Name or Code}
"KRN",8994,2495,2,3,1,18,0)
    Internal or external value for the STATUS field (113)
"KRN",8994,2495,2,3,1,19,0)
    of the file #2005.
"KRN",8994,2495,2,3,1,20,0)
 
"KRN",8994,2495,2,3,1,21,0)
  ISTATRSN^^{Name or IEN}
"KRN",8994,2495,2,3,1,22,0)
    Name or IEN of a reason for image status change
"KRN",8994,2495,2,3,1,23,0)
    (see the STATUS REASON field (113.3) of the file #2005
"KRN",8994,2495,2,3,1,24,0)
    for details).
"KRN",8994,2495,2,3,1,25,0)
 
"KRN",8994,2495,2,3,1,26,0)
  IXORIGIN^^{Name or Code}
"KRN",8994,2495,2,3,1,27,0)
    Internal or external value for the ORIGIN INDEX field (45)
"KRN",8994,2495,2,3,1,28,0)
    of the file #2005.
"KRN",8994,2495,2,3,1,29,0)
 
"KRN",8994,2495,2,3,1,30,0)
  IXPKG^^{Name or Code}
"KRN",8994,2495,2,3,1,31,0)
    Internal or external value for the PACKAGE INDEX field (40)
"KRN",8994,2495,2,3,1,32,0)
    of the file #2005.
"KRN",8994,2495,2,3,1,33,0)
 
"KRN",8994,2495,2,3,1,34,0)
  IXPROC^^{Name or IEN}
"KRN",8994,2495,2,3,1,35,0)
    Procedure/Event name or IEN (see the PROC/EVENT INDEX
"KRN",8994,2495,2,3,1,36,0)
    field (43) of the file #2005 for details).
"KRN",8994,2495,2,3,1,37,0)
 
"KRN",8994,2495,2,3,1,38,0)
  IXSPEC^^{Name or IEN}
"KRN",8994,2495,2,3,1,39,0)
    Specialty/SubSpecialty name or IEN (see the SPEC/SUBSPEC
"KRN",8994,2495,2,3,1,40,0)
    INDEX field (44) of the file #2005 for details).
"KRN",8994,2495,2,3,1,41,0)
 
"KRN",8994,2495,2,3,1,42,0)
  IXTYPE^^{Name or IEN}
"KRN",8994,2495,2,3,1,43,0)
    Image type name or IEN (see the TYPE INDEX field (42) of
"KRN",8994,2495,2,3,1,44,0)
    the file #2005 for details).
"KRN",8994,2495,2,3,1,45,0)
 
"KRN",8994,2495,2,3,1,46,0)
  PARDF^^{File Number}
"KRN",8994,2495,2,3,1,47,0)
    Value for the PARENT DATA FILE# field (16) of
"KRN",8994,2495,2,3,1,48,0)
    the file #2005.
"KRN",8994,2495,2,3,1,49,0)
 
"KRN",8994,2495,2,3,1,50,0)
  PARGRD0^^{IEN}
"KRN",8994,2495,2,3,1,51,0)
    Value for the PARENT GLOBAL ROOT D0 field (17) of
"KRN",8994,2495,2,3,1,52,0)
    the file #2005.
"KRN",8994,2495,2,3,1,53,0)
 
"KRN",8994,2495,2,3,1,54,0)
  PARGRD1^^{IEN}
"KRN",8994,2495,2,3,1,55,0)
    Value for the PARENT GLOBAL ROOT D1 field (63) of
"KRN",8994,2495,2,3,1,56,0)
    the file #2005.
"KRN",8994,2495,2,3,1,57,0)
 
"KRN",8994,2495,2,3,1,58,0)
  PARIPTR^^{IEN}
"KRN",8994,2495,2,3,1,59,0)
    Value for the PARENT DATA FILE IMAGE POINTER field (18)
"KRN",8994,2495,2,3,1,60,0)
    of the file #2005.
"KRN",8994,2495,2,3,1,61,0)
 
"KRN",8994,2495,2,3,1,62,0)
  PROC^^{Name}
"KRN",8994,2495,2,3,1,63,0)
    Name of the procedure (see the PROCEDURE field (6) 
"KRN",8994,2495,2,3,1,64,0)
    of the file #2005 for details).
"KRN",8994,2495,2,3,1,65,0)
 
"KRN",8994,2495,2,3,1,66,0)
  PROCDT^^{Date/time}
"KRN",8994,2495,2,3,1,67,0)
    Internal or external value for the PROCEDURE/EXAM 
"KRN",8994,2495,2,3,1,68,0)
    DATE/TIME field (15) of the IMAGE file #2005.
"KRN",8994,2495,2,3,1,69,0)
 
"KRN",8994,2495,2,3,1,70,0)
  SENSIMG^^{Name or Code}
"KRN",8994,2495,2,3,1,71,0)
    Internal or external value for the CONTROLLED IMAGE field 
"KRN",8994,2495,2,3,1,72,0)
    (112) of the file #2005.
"KRN",8994,2495,2,3,1,73,0)
 
"KRN",8994,2495,2,3,1,74,0)
For pointer type parameters, pure numeric values are always treated as
"KRN",8994,2495,2,3,1,75,0)
internal entry numbers (IEN).
"KRN",8994,2495,2,3,1,76,0)
 
"KRN",8994,2495,2,3,1,77,0)
For sets of codes, the API checks for internal values first. So, if there
"KRN",8994,2495,2,3,1,78,0)
is an ambiguity between internal and external values, the parameter value
"KRN",8994,2495,2,3,1,79,0)
will be treated as the internal one.
"KRN",8994,2495,2,3,1,80,0)
 
"KRN",8994,2495,2,3,1,81,0)
Parameters can be added to the list in any order. See comments preceding
"KRN",8994,2495,2,3,1,82,0)
the SETPROPS^MAGGA02 for more details.
"KRN",8994,2495,2,3,1,83,0)
 
"KRN",8994,2495,2,3,1,84,0)
Example:
"KRN",8994,2495,2,3,1,85,0)
 
"KRN",8994,2495,2,3,1,86,0)
  with RPCBroker.Param[2] do
"KRN",8994,2495,2,3,1,87,0)
    begin
"KRN",8994,2495,2,3,1,88,0)
      PType := list;
"KRN",8994,2495,2,3,1,89,0)
      Mult[1] := 'IXPKG^^RAD';
"KRN",8994,2495,2,3,1,90,0)
      Mult[2] := 'IXSPEC^^1';
"KRN",8994,2495,2,3,1,91,0)
      Mult[3] := 'IXORIGIN^^NON-VA';
"KRN",8994,2495,2,3,1,92,0)
    end;
"KRN",8994,2495,2,"B","FLAGS",2)

"KRN",8994,2495,2,"B","IMGIEN",1)

"KRN",8994,2495,2,"B","PROPVALS",3)

"KRN",8994,2495,2,"PARAMSEQ",1,1)

"KRN",8994,2495,2,"PARAMSEQ",2,2)

"KRN",8994,2495,2,"PARAMSEQ",3,3)

"KRN",8994,2495,3,0)
^8994.03^19^19^3080813^^^^
"KRN",8994,2495,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2495,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2495,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2495,3,4,0)
  
"KRN",8994,2495,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2495,3,6,0)
                          ^01: 0
"KRN",8994,2495,3,7,0)
                          ^02: Message
"KRN",8994,2495,3,8,0)
  
"KRN",8994,2495,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2495,3,10,0)
                          ^01: Error code
"KRN",8994,2495,3,11,0)
                          ^02: Message
"KRN",8994,2495,3,12,0)
                          ^03: Error location
"KRN",8994,2495,3,13,0)
                          ^04: Message type
"KRN",8994,2495,3,14,0)
 
"KRN",8994,2495,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2495,3,16,0)
                          ^01: ""
"KRN",8994,2495,3,17,0)
                          ^02: Text
"KRN",8994,2495,3,18,0)
  
"KRN",8994,2495,3,19,0)
Otherwise, '1^Ok' is returned in the Results[0].
"KRN",8994,2496,-1)
0^6
"KRN",8994,2496,0)
MAGG IMAGE GET PROPERTIES^GETPROPS^MAGGA02^2^R^^^1
"KRN",8994,2496,1,0)
^8994.01^5^5^3090501^^^
"KRN",8994,2496,1,1,0)
This remote procedure returns values of one or more image properties
"KRN",8994,2496,1,2,0)
(fields of the record of the IMAGE (#2005) or IMAGE AUDIT (#2005.1) file).
"KRN",8994,2496,1,3,0)
 
"KRN",8994,2496,1,4,0)
If a field is tracked (audited), then a previous value of this field on a 
"KRN",8994,2496,1,5,0)
certain date/time can be requested (see the ADT parameter).
"KRN",8994,2496,2,0)
^8994.02A^4^4
"KRN",8994,2496,2,1,0)
IMGIEN^1^^1^1
"KRN",8994,2496,2,1,1,0)
^^1^1^3080404^
"KRN",8994,2496,2,1,1,1,0)
IEN of the image record in the IMAGE file (#2005).
"KRN",8994,2496,2,2,0)
PROPLST^1^^1^2
"KRN",8994,2496,2,2,1,0)
^^40^40^3081216^
"KRN",8994,2496,2,2,1,1,0)
Property names separated by semicolons or one of the following special
"KRN",8994,2496,2,2,1,2,0)
characters:
"KRN",8994,2496,2,2,1,3,0)
 
"KRN",8994,2496,2,2,1,4,0)
  *  All supported properties
"KRN",8994,2496,2,2,1,5,0)
 
"KRN",8994,2496,2,2,1,6,0)
  #  Image indexes (IXCLASS, IXORIGIN, IXPKG, 
"KRN",8994,2496,2,2,1,7,0)
     IXPROC, IXSPEC, and IXTYPE).
"KRN",8994,2496,2,2,1,8,0)
 
"KRN",8994,2496,2,2,1,9,0)
Below is the list of properties supported by this remote procedure:
"KRN",8994,2496,2,2,1,10,0)
 
"KRN",8994,2496,2,2,1,11,0)
  Property Name   Field Name and Number
"KRN",8994,2496,2,2,1,12,0)
  -------------   ------------------------------
"KRN",8994,2496,2,2,1,13,0)
  CAPTAPP         CAPTURE APPLICATION (8.1)
"KRN",8994,2496,2,2,1,14,0)
  CRTNDT          CREATION DATE (110)
"KRN",8994,2496,2,2,1,15,0)
  DTSAVED         DATE/TIME IMAGE SAVED (7)
"KRN",8994,2496,2,2,1,16,0)
  GDESC           SHORT DESCRIPTION (10)
"KRN",8994,2496,2,2,1,17,0)
  IDFN            PATIENT (5)
"KRN",8994,2496,2,2,1,18,0)
  ISTAT           STATUS (113)
"KRN",8994,2496,2,2,1,19,0)
  ISTATBY         STATUS BY (113.2)
"KRN",8994,2496,2,2,1,20,0)
  ISTATDT         STATUS DATE (113.1)
"KRN",8994,2496,2,2,1,21,0)
  ISTATRSN        STATUS REASON (113.3)
"KRN",8994,2496,2,2,1,22,0)
  IXCLASS         CLASS (1) of the file #2005.83
"KRN",8994,2496,2,2,1,23,0)
  IXORIGIN        ORIGIN INDEX (45)
"KRN",8994,2496,2,2,1,24,0)
  IXPKG           PACKAGE INDEX (40)
"KRN",8994,2496,2,2,1,25,0)
  IXPROC          PROC/EVENT INDEX (43)
"KRN",8994,2496,2,2,1,26,0)
  IXSPEC          SPEC/SUBSPEC INDEX (44)
"KRN",8994,2496,2,2,1,27,0)
  IXTYPE          TYPE INDEX (42)
"KRN",8994,2496,2,2,1,28,0)
  LDESCR          LONG DESCRIPTION (11)
"KRN",8994,2496,2,2,1,29,0)
  OBJNAME         OBJECT NAME (.01)
"KRN",8994,2496,2,2,1,30,0)
  OBJTYPE         OBJECT TYPE (3)
"KRN",8994,2496,2,2,1,31,0)
  PARDF           PARENT DATA FILE# (16)
"KRN",8994,2496,2,2,1,32,0)
  PARGRD0         PARENT GLOBAL ROOT D0 (17)
"KRN",8994,2496,2,2,1,33,0)
  PARGRD1         PARENT GLOBAL ROOT D1 (63)
"KRN",8994,2496,2,2,1,34,0)
  PARIPTR         PARENT DATA FILE IMAGE POINTER (18)
"KRN",8994,2496,2,2,1,35,0)
  PROC            PROCEDURE (6)
"KRN",8994,2496,2,2,1,36,0)
  PROCDT          PROCEDURE/EXAM DATE/TIME (15)
"KRN",8994,2496,2,2,1,37,0)
  SAVEDBY         IMAGE SAVE BY (8)
"KRN",8994,2496,2,2,1,38,0)
  SENSBY          CONTROLLED BY (112.2)
"KRN",8994,2496,2,2,1,39,0)
  SENSDT          CONTROLLED DATE (112.1)
"KRN",8994,2496,2,2,1,40,0)
  SENSIMG         CONTROLLED IMAGE (112)
"KRN",8994,2496,2,3,0)
FLAGS^1^^^3
"KRN",8994,2496,2,3,1,0)
^^5^5^3080404^
"KRN",8994,2496,2,3,1,1,0)
Flags that control the execution (can be combined):
"KRN",8994,2496,2,3,1,2,0)
 
"KRN",8994,2496,2,3,1,3,0)
  E  Return external values (default)
"KRN",8994,2496,2,3,1,4,0)
 
"KRN",8994,2496,2,3,1,5,0)
  I  Return internal values
"KRN",8994,2496,2,4,0)
ADT^1^^^4
"KRN",8994,2496,2,4,1,0)
^8994.021^2^2^3090501^^^^
"KRN",8994,2496,2,4,1,1,0)
Date/time (internal FileMan value) for retrieving previous values. By 
"KRN",8994,2496,2,4,1,2,0)
default, audit checks are not performed and current values are returned.
"KRN",8994,2496,2,"B","ADT",4)

"KRN",8994,2496,2,"B","FLAGS",3)

"KRN",8994,2496,2,"B","IMGIEN",1)

"KRN",8994,2496,2,"B","PROPLST",2)

"KRN",8994,2496,2,"PARAMSEQ",1,1)

"KRN",8994,2496,2,"PARAMSEQ",2,2)

"KRN",8994,2496,2,"PARAMSEQ",3,3)

"KRN",8994,2496,2,"PARAMSEQ",4,4)

"KRN",8994,2496,3,0)
^^35^35^3090501^
"KRN",8994,2496,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2496,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2496,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2496,3,4,0)
  
"KRN",8994,2496,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2496,3,6,0)
                          ^01: 0
"KRN",8994,2496,3,7,0)
                          ^02: Message
"KRN",8994,2496,3,8,0)
  
"KRN",8994,2496,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2496,3,10,0)
                          ^01: Error code
"KRN",8994,2496,3,11,0)
                          ^02: Message
"KRN",8994,2496,3,12,0)
                          ^03: Error location
"KRN",8994,2496,3,13,0)
                          ^04: Message type
"KRN",8994,2496,3,14,0)
 
"KRN",8994,2496,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2496,3,16,0)
                          ^01: "" (empty)
"KRN",8994,2496,3,17,0)
                          ^02: Text
"KRN",8994,2496,3,18,0)
  
"KRN",8994,2496,3,19,0)
Otherwise, '1^Ok' is returned in the Results[0] and subsequent nodes 
"KRN",8994,2496,3,20,0)
contain property values:
"KRN",8994,2496,3,21,0)
 
"KRN",8994,2496,3,22,0)
  Results[i]            Property value
"KRN",8994,2496,3,23,0)
                          ^01: Property name
"KRN",8994,2496,3,24,0)
                          ^02: "" (empty)
"KRN",8994,2496,3,25,0)
                          ^03: Internal property value if the 'I' flag
"KRN",8994,2496,3,26,0)
                               is provided. Otherwise - empty.
"KRN",8994,2496,3,27,0)
                          ^04: External property value if the 'E' flag
"KRN",8994,2496,3,28,0)
                               is provided. Otherwise - empty.
"KRN",8994,2496,3,29,0)
 
"KRN",8994,2496,3,30,0)
Word-processing values are returned as follows: 
"KRN",8994,2496,3,31,0)
 
"KRN",8994,2496,3,32,0)
  Results[i]            Line of a word-processing property value
"KRN",8994,2496,3,33,0)
                          ^01: Property name
"KRN",8994,2496,3,34,0)
                          ^02: Sequential number
"KRN",8994,2496,3,35,0)
                          ^03: Line of text
"KRN",8994,2496,3,36,0)
                          ^02: Sequential number
"KRN",8994,2496,3,37,0)
                          ^03: Line of text
"KRN",8994,2497,-1)
0^9
"KRN",8994,2497,0)
MAGG REASON GET PROPERTIES^GET^MAGGA01^2^R^^^1
"KRN",8994,2497,1,0)
^8994.01^2^2^3090513^^^^
"KRN",8994,2497,1,1,0)
This remote procedure returns the reason properties from the MAG REASON
"KRN",8994,2497,1,2,0)
file (#2005.88)
"KRN",8994,2497,2,0)
^8994.02A^2^2
"KRN",8994,2497,2,1,0)
RSNID^1^^1^1
"KRN",8994,2497,2,1,1,0)
^^2^2^3090513^
"KRN",8994,2497,2,1,1,1,0)
Identifier of the reason: Internal Entry Number of the record in the MAG
"KRN",8994,2497,2,1,1,2,0)
REASON file (#2005.88) or the reason code (see the FLAGS parameter).
"KRN",8994,2497,2,2,0)
FLAGS^1^^^2
"KRN",8994,2497,2,2,1,0)
^^8^8^3090513^
"KRN",8994,2497,2,2,1,1,0)
Flags that control execution (can be combined):
"KRN",8994,2497,2,2,1,2,0)
 
"KRN",8994,2497,2,2,1,3,0)
  C  By default, value of the RSNID parameter is treated as
"KRN",8994,2497,2,2,1,4,0)
     the reason IEN. If this flag is provided, then the reason
"KRN",8994,2497,2,2,1,5,0)
     code should be passed as the value of the RSNID.
"KRN",8994,2497,2,2,1,6,0)
 
"KRN",8994,2497,2,2,1,7,0)
  F  Include full details (description text). By default, only
"KRN",8994,2497,2,2,1,8,0)
     the summary data is returned.
"KRN",8994,2497,2,"B","FLAGS",2)

"KRN",8994,2497,2,"B","IEN",1)

"KRN",8994,2497,2,"B","RSNID",1)

"KRN",8994,2497,2,"PARAMSEQ",1,1)

"KRN",8994,2497,2,"PARAMSEQ",2,2)

"KRN",8994,2497,3,0)
^8994.03^41^41^3090513^^^
"KRN",8994,2497,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2497,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2497,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2497,3,4,0)
  
"KRN",8994,2497,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2497,3,6,0)
                          ^01: 0
"KRN",8994,2497,3,7,0)
                          ^02: Message
"KRN",8994,2497,3,8,0)
  
"KRN",8994,2497,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2497,3,10,0)
                          ^01: Error code
"KRN",8994,2497,3,11,0)
                          ^02: Message
"KRN",8994,2497,3,12,0)
                          ^03: Error location
"KRN",8994,2497,3,13,0)
                          ^04: Message type
"KRN",8994,2497,3,14,0)
 
"KRN",8994,2497,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2497,3,16,0)
                          ^01: ""
"KRN",8994,2497,3,17,0)
                          ^02: Text
"KRN",8994,2497,3,18,0)
 
"KRN",8994,2497,3,19,0)
Otherwise, the Results[0] contains '1^OK' and the reason summary and 
"KRN",8994,2497,3,20,0)
description are returned in the subsequent elements of the Results array
"KRN",8994,2497,3,21,0)
as follows:
"KRN",8994,2497,3,22,0)
 
"KRN",8994,2497,3,23,0)
  Results[1]            Reason summary
"KRN",8994,2497,3,24,0)
                          ^01: IEN of the reason (file #2005.88)
"KRN",8994,2497,3,25,0)
                          ^02: Text of the reason
"KRN",8994,2497,3,26,0)
                          ^03: Types of the reason (combination of "C",
"KRN",8994,2497,3,27,0)
                               "D", "P", and/or "S")
"KRN",8994,2497,3,28,0)
                          ^04: Date of inactivation (FileMan). 
"KRN",8994,2497,3,29,0)
                          ^05: Unique code of the reason (only for
"KRN",8994,2497,3,30,0)
                               standard reasons distributed nationally;
"KRN",8994,2497,3,31,0)
                               reasons defined by the sites do not have
"KRN",8994,2497,3,32,0)
                               codes).
"KRN",8994,2497,3,33,0)
  
"KRN",8994,2497,3,34,0)
  Results[1+i]          Line of the description of the reason (optional)
"KRN",8994,2497,3,35,0)
                          ^01: "D"
"KRN",8994,2497,3,36,0)
                          ^02: Text line
"KRN",8994,2497,3,37,0)
 
"KRN",8994,2497,3,38,0)
                        The description text is returned only if the
"KRN",8994,2497,3,39,0)
                        value of the FLAGS parameter contains "F" and 
"KRN",8994,2497,3,40,0)
                        the DESCRIPTION field (1) of the MAG REASON file
"KRN",8994,2497,3,41,0)
                        (#2005.88) is not empty.
"KRN",8994,2498,-1)
0^10
"KRN",8994,2498,0)
MAGG IMAGE STATISTICS^IMGQUERY^MAGGA03^4^R^^^1
"KRN",8994,2498,1,0)
^8994.01^9^9^3090121^^^^
"KRN",8994,2498,1,1,0)
The MAGG IMAGE STATISTICS remote procedure queries the image file(s) and 
"KRN",8994,2498,1,2,0)
returns various statistics/summary data. Currently, 2 queries are 
"KRN",8994,2498,1,3,0)
implemented:
"KRN",8994,2498,1,4,0)
 
"KRN",8994,2498,1,5,0)
  Counts of images captured in the provided date range 
"KRN",8994,2498,1,6,0)
  grouped by the image status codes.
"KRN",8994,2498,1,7,0)
 
"KRN",8994,2498,1,8,0)
  Counts of images captured in the provided date range
"KRN",8994,2498,1,9,0)
  grouped by users and image status codes.
"KRN",8994,2498,2,0)
^8994.02A^3^3
"KRN",8994,2498,2,1,0)
FLAGS^1^^1^1
"KRN",8994,2498,2,1,1,0)
^^26^26^3081215^
"KRN",8994,2498,2,1,1,1,0)
Flags that control the execution (can be combined):
"KRN",8994,2498,2,1,1,2,0)
 
"KRN",8994,2498,2,1,1,3,0)
  C  Capture date range. If this flag is provided,
"KRN",8994,2498,2,1,1,4,0)
     then the remote procedure uses values of the
"KRN",8994,2498,2,1,1,5,0)
     FROMDATE and TODATE parameters to select images
"KRN",8994,2498,2,1,1,6,0)
     that were captured in this date range (see the
"KRN",8994,2498,2,1,1,7,0)
     DATE/TIME IMAGE SAVED field (7) and the "AD"
"KRN",8994,2498,2,1,1,8,0)
     cross-reference).
"KRN",8994,2498,2,1,1,9,0)
 
"KRN",8994,2498,2,1,1,10,0)
     Otherwise, values of those parameters are
"KRN",8994,2498,2,1,1,11,0)
     treated as the date range when procedures were
"KRN",8994,2498,2,1,1,12,0)
     performed (see the PROCEDURE/EXAM DATE/TIME
"KRN",8994,2498,2,1,1,13,0)
     field (15) and cross-references "APDTPX" and
"KRN",8994,2498,2,1,1,14,0)
     "APDT").
"KRN",8994,2498,2,1,1,15,0)
 
"KRN",8994,2498,2,1,1,16,0)
  D  Include only deleted images (file #2005.1)
"KRN",8994,2498,2,1,1,17,0)
  E  Include only existing images (file #2005)
"KRN",8994,2498,2,1,1,18,0)
 
"KRN",8994,2498,2,1,1,19,0)
  S  Return image counts grouped by status
"KRN",8994,2498,2,1,1,20,0)
  U  Return image counts grouped by users and status
"KRN",8994,2498,2,1,1,21,0)
 
"KRN",8994,2498,2,1,1,22,0)
If neither 'E' nor 'D' flag is provided, then an error code (-6) is
"KRN",8994,2498,2,1,1,23,0)
returned.
"KRN",8994,2498,2,1,1,24,0)
 
"KRN",8994,2498,2,1,1,25,0)
If neither 'S' nor 'U' flag is provided, then an error code (-6) is
"KRN",8994,2498,2,1,1,26,0)
returned.
"KRN",8994,2498,2,2,0)
FROMDATE^1^^^2
"KRN",8994,2498,2,2,1,0)
^^11^11^3081107^
"KRN",8994,2498,2,2,1,1,0)
Beginning of the date range for image selection. Dates can be in internal
"KRN",8994,2498,2,2,1,2,0)
or external FileMan format. If the parameter is not defined or empty, then
"KRN",8994,2498,2,2,1,3,0)
the date range remains open on this side.
"KRN",8994,2498,2,2,1,4,0)
 
"KRN",8994,2498,2,2,1,5,0)
Depending on the value of the FLAGS parameter, the date range filter is
"KRN",8994,2498,2,2,1,6,0)
applied either to the exam/procedure dates (PROCEDURE/EXAM DATE/TIME field
"KRN",8994,2498,2,2,1,7,0)
(15)) or image capture dates (DATE/TIME IMAGE SAVED field (7)).
"KRN",8994,2498,2,2,1,8,0)
 
"KRN",8994,2498,2,2,1,9,0)
Time parts of date range parameters are ignored and both ends of the date
"KRN",8994,2498,2,2,1,10,0)
range are included in the search. For example, in order to search images
"KRN",8994,2498,2,2,1,11,0)
for May 21, 2008, the internal value of both parameters should be 3080521.
"KRN",8994,2498,2,3,0)
TODATE^1^^^3
"KRN",8994,2498,2,3,1,0)
^8994.021^11^11^3090121^^^^
"KRN",8994,2498,2,3,1,1,0)
End of the date range for image selection. Dates can be in internal or
"KRN",8994,2498,2,3,1,2,0)
external FileMan format. If the parameter is not defined or empty, then
"KRN",8994,2498,2,3,1,3,0)
the date range remains open on this side.
"KRN",8994,2498,2,3,1,4,0)
 
"KRN",8994,2498,2,3,1,5,0)
Depending on the value of the FLAGS parameter, the date range filter is
"KRN",8994,2498,2,3,1,6,0)
applied either to the exam/procedure dates (PROCEDURE/EXAM DATE/TIME field
"KRN",8994,2498,2,3,1,7,0)
(15)) or image capture dates (DATE/TIME IMAGE SAVED field (7)).
"KRN",8994,2498,2,3,1,8,0)
 
"KRN",8994,2498,2,3,1,9,0)
Time parts of date range parameters are ignored and both ends of the date
"KRN",8994,2498,2,3,1,10,0)
range are included in the search. For example, in order to search images
"KRN",8994,2498,2,3,1,11,0)
for May 21, 2008, the internal value of both parameters should be 3080521.
"KRN",8994,2498,2,"B","FLAGS",1)

"KRN",8994,2498,2,"B","FROMDATE",2)

"KRN",8994,2498,2,"B","TODATE",3)

"KRN",8994,2498,2,"PARAMSEQ",1,1)

"KRN",8994,2498,2,"PARAMSEQ",2,2)

"KRN",8994,2498,2,"PARAMSEQ",3,3)

"KRN",8994,2498,3,0)
^^75^75^3090121^
"KRN",8994,2498,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2498,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2498,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2498,3,4,0)
  
"KRN",8994,2498,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2498,3,6,0)
                          ^01: 0
"KRN",8994,2498,3,7,0)
                          ^02: Message
"KRN",8994,2498,3,8,0)
  
"KRN",8994,2498,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2498,3,10,0)
                          ^01: Error code
"KRN",8994,2498,3,11,0)
                          ^02: Message
"KRN",8994,2498,3,12,0)
                          ^03: Error location
"KRN",8994,2498,3,13,0)
                          ^04: Message type
"KRN",8994,2498,3,14,0)
 
"KRN",8994,2498,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2498,3,16,0)
                          ^01: ""
"KRN",8994,2498,3,17,0)
                          ^02: Text  
"KRN",8994,2498,3,18,0)
 
"KRN",8994,2498,3,19,0)
Otherwise, '1^Ok' is returned in the Results[0] and subsequent nodes 
"KRN",8994,2498,3,20,0)
contain requested data:
"KRN",8994,2498,3,21,0)
 
"KRN",8994,2498,3,22,0)
  Results[i]            Header of the counts grouped by status
"KRN",8994,2498,3,23,0)
                          ^01: "S"
"KRN",8994,2498,3,24,0)
                          ^02: empty
"KRN",8994,2498,3,25,0)
                          ^03: Number of "S"-items
"KRN",8994,2498,3,26,0)
                          ^04: empty
"KRN",8994,2498,3,27,0)
                          ^05: "Totals"
"KRN",8994,2498,3,28,0)
                          ^06: Number of image entries
"KRN",8994,2498,3,29,0)
                          ^07: Number of images/pages
"KRN",8994,2498,3,30,0)
         
"KRN",8994,2498,3,31,0)
  Results[i+j]          Image status record
"KRN",8994,2498,3,32,0)
                          ^01: "S"
"KRN",8994,2498,3,33,0)
                          ^02: Sequential number of the "S"-item
"KRN",8994,2498,3,34,0)
                          ^03: empty
"KRN",8994,2498,3,35,0)
                          ^04: Internal value of the STATUS field (113).
"KRN",8994,2498,3,36,0)
                               If this piece is empty or 0, then the
"KRN",8994,2498,3,37,0)
                               record contains counts of images with 
"KRN",8994,2498,3,38,0)
                               empty STATUS field.
"KRN",8994,2498,3,39,0)
                          ^05: External value of the STATUS field (113)
"KRN",8994,2498,3,40,0)
                          ^06: Number of image entries
"KRN",8994,2498,3,41,0)
                          ^07: Number of images/pages
"KRN",8994,2498,3,42,0)
        
"KRN",8994,2498,3,43,0)
  Results[i]            Header of the counts grouped by users and status
"KRN",8994,2498,3,44,0)
                          ^01: "U"
"KRN",8994,2498,3,45,0)
                          ^02: empty
"KRN",8994,2498,3,46,0)
                          ^03: Number of "U"-items
"KRN",8994,2498,3,47,0)
                          ^04: empty
"KRN",8994,2498,3,48,0)
                          ^05: "Totals"
"KRN",8994,2498,3,49,0)
                          ^06: Number of image entries
"KRN",8994,2498,3,50,0)
                          ^07: Number of images/pages
"KRN",8994,2498,3,51,0)
         
"KRN",8994,2498,3,52,0)
  Results[i+j]          User record
"KRN",8994,2498,3,53,0)
                          ^01: "U"
"KRN",8994,2498,3,54,0)
                          ^02: Sequential number of the "U"-item
"KRN",8994,2498,3,55,0)
                          ^03: Number of "US"-items
"KRN",8994,2498,3,56,0)
                          ^04: User IEN (DUZ).
"KRN",8994,2498,3,57,0)
                               If this piece is empty or 0, then the
"KRN",8994,2498,3,58,0)
                               record contains counts of images that 
"KRN",8994,2498,3,59,0)
                               are not associated with a user.
"KRN",8994,2498,3,60,0)
                          ^05: User name
"KRN",8994,2498,3,61,0)
                          ^06: Number of image entries
"KRN",8994,2498,3,62,0)
                          ^07: Number of images/pages
"KRN",8994,2498,3,63,0)
                          ^08: Percentage of verified images
"KRN",8994,2498,3,64,0)
         
"KRN",8994,2498,3,65,0)
  Results[i+j+k]        User/status record
"KRN",8994,2498,3,66,0)
                          ^01: "US"
"KRN",8994,2498,3,67,0)
                          ^02: Sequential number of the "US"-item
"KRN",8994,2498,3,68,0)
                          ^03: empty
"KRN",8994,2498,3,69,0)
                          ^04: Internal value of the STATUS field (113).
"KRN",8994,2498,3,70,0)
                               If this piece is empty or 0, then the
"KRN",8994,2498,3,71,0)
                               record contains counts of images with 
"KRN",8994,2498,3,72,0)
                               empty STATUS field.
"KRN",8994,2498,3,73,0)
                          ^05: External value of the STATUS field (113)
"KRN",8994,2498,3,74,0)
                          ^06: Number of image entries
"KRN",8994,2498,3,75,0)
                          ^07: Number of images/pages
"KRN",8994,2499,-1)
0^12
"KRN",8994,2499,0)
MAGG IMAGE LOCK^LOCKIMG^MAGGA04^2^R^^^1
"KRN",8994,2499,1,0)
^8994.01^2^2^3090217^^^^
"KRN",8994,2499,1,1,0)
This remote procedure locks one or more images. If several images are 
"KRN",8994,2499,1,2,0)
passed, then either all or none of them are locked.
"KRN",8994,2499,2,0)
^8994.02A^2^2
"KRN",8994,2499,2,1,0)
FLAGS^1^^^1
"KRN",8994,2499,2,1,1,0)
^^1^1^3090217^
"KRN",8994,2499,2,1,1,1,0)
reserved
"KRN",8994,2499,2,2,0)
IMGLST^2^^1^2
"KRN",8994,2499,2,2,1,0)
^^12^12^3090217^
"KRN",8994,2499,2,2,1,1,0)
List of images that have to be locked. Images are referenced by their 
"KRN",8994,2499,2,2,1,2,0)
internal entry numbers (IENs) in the IMAGE (#2005) and IMAGE AUDIT
"KRN",8994,2499,2,2,1,3,0)
(#2005.1) files.
"KRN",8994,2499,2,2,1,4,0)
 
"KRN",8994,2499,2,2,1,5,0)
Example:
"KRN",8994,2499,2,2,1,6,0)
 
"KRN",8994,2499,2,2,1,7,0)
  with RPCBroker.Param[1] do
"KRN",8994,2499,2,2,1,8,0)
    begin
"KRN",8994,2499,2,2,1,9,0)
      PType := list;
"KRN",8994,2499,2,2,1,10,0)
      Mult[1] := '234';
"KRN",8994,2499,2,2,1,11,0)
      Mult[2] := '789';
"KRN",8994,2499,2,2,1,12,0)
    end;
"KRN",8994,2499,2,"B","FLAGS",1)

"KRN",8994,2499,2,"B","IMGLST",2)

"KRN",8994,2499,2,"PARAMSEQ",1,1)

"KRN",8994,2499,2,"PARAMSEQ",2,2)

"KRN",8994,2499,3,0)
^8994.03^31^31^3090217^^
"KRN",8994,2499,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2499,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2499,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2499,3,4,0)
  
"KRN",8994,2499,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2499,3,6,0)
                          ^01: 0
"KRN",8994,2499,3,7,0)
                          ^02: Message
"KRN",8994,2499,3,8,0)
  
"KRN",8994,2499,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2499,3,10,0)
                          ^01: Error code
"KRN",8994,2499,3,11,0)
                          ^02: Message
"KRN",8994,2499,3,12,0)
                          ^03: Error location
"KRN",8994,2499,3,13,0)
                          ^04: Message type
"KRN",8994,2499,3,14,0)
 
"KRN",8994,2499,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2499,3,16,0)
                          ^01: ""
"KRN",8994,2499,3,17,0)
                          ^02: Text  
"KRN",8994,2499,3,18,0)
 
"KRN",8994,2499,3,19,0)
If the error descriptor in the Results[1] has the error code -21, this
"KRN",8994,2499,3,20,0)
means that the RPC could not lock the image(s). A message that explains
"KRN",8994,2499,3,21,0)
who/what locked the image(s) and when this happened is attached to this
"KRN",8994,2499,3,22,0)
error as additional information. Example:
"KRN",8994,2499,3,23,0)
 
"KRN",8994,2499,3,24,0)
  Results[0]='0^The image is locked by other user/task. 
"KRN",8994,2499,3,25,0)
    Please try later.'
"KRN",8994,2499,3,26,0)
  Results[1]='-21^The image is locked by other user/task. 
"KRN",8994,2499,3,27,0)
    Please try later.^LOCKFM+11~MAGGA04^W'
"KRN",8994,2499,3,28,0)
  Results[2]='^Locked by IMAGEUSER,ONE about Feb 17, 2009@13:21:54; 
"KRN",8994,2499,3,29,0)
    Job #5728'
"KRN",8994,2499,3,30,0)
 
"KRN",8994,2499,3,31,0)
In case of a successful lock, '1^Ok' is returned in the Results[0].
"KRN",8994,2500,-1)
0^13
"KRN",8994,2500,0)
MAGG IMAGE UNLOCK^UNLOCKIM^MAGGA04^2^R^^^1
"KRN",8994,2500,1,0)
^^1^1^3090217^
"KRN",8994,2500,1,1,0)
This remote procedure unlocks one or more images.
"KRN",8994,2500,2,0)
^8994.02A^2^2
"KRN",8994,2500,2,1,0)
FLAGS^1^^^1
"KRN",8994,2500,2,1,1,0)
^^1^1^3090217^
"KRN",8994,2500,2,1,1,1,0)
reserved
"KRN",8994,2500,2,2,0)
IMGLST^2^^1^2
"KRN",8994,2500,2,2,1,0)
^^12^12^3090217^
"KRN",8994,2500,2,2,1,1,0)
List of images that have to be unlocked. Images are referenced by their 
"KRN",8994,2500,2,2,1,2,0)
internal entry numbers (IENs) in the IMAGE (#2005) and IMAGE AUDIT
"KRN",8994,2500,2,2,1,3,0)
(#2005.1) files.
"KRN",8994,2500,2,2,1,4,0)
 
"KRN",8994,2500,2,2,1,5,0)
Example:
"KRN",8994,2500,2,2,1,6,0)
 
"KRN",8994,2500,2,2,1,7,0)
  with RPCBroker.Param[1] do
"KRN",8994,2500,2,2,1,8,0)
    begin
"KRN",8994,2500,2,2,1,9,0)
      PType := list;
"KRN",8994,2500,2,2,1,10,0)
      Mult[1] := '234';
"KRN",8994,2500,2,2,1,11,0)
      Mult[2] := '789';
"KRN",8994,2500,2,2,1,12,0)
    end;
"KRN",8994,2500,2,"B","FLAGS",1)

"KRN",8994,2500,2,"B","IMGLST",2)

"KRN",8994,2500,2,"PARAMSEQ",1,1)

"KRN",8994,2500,2,"PARAMSEQ",2,2)

"KRN",8994,2500,3,0)
^^19^19^3090217^
"KRN",8994,2500,3,1,0)
Zero value of the first '^'-piece of the Results[0] indicates that an
"KRN",8994,2500,3,2,0)
error occurred during the execution of the procedure. In this case, the
"KRN",8994,2500,3,3,0)
errors are returned in the Results array as shown below:
"KRN",8994,2500,3,4,0)
  
"KRN",8994,2500,3,5,0)
  Results[0]            Result descriptor
"KRN",8994,2500,3,6,0)
                          ^01: 0
"KRN",8994,2500,3,7,0)
                          ^02: Message
"KRN",8994,2500,3,8,0)
  
"KRN",8994,2500,3,9,0)
  Results[i]            Error descriptor
"KRN",8994,2500,3,10,0)
                          ^01: Error code
"KRN",8994,2500,3,11,0)
                          ^02: Message
"KRN",8994,2500,3,12,0)
                          ^03: Error location
"KRN",8994,2500,3,13,0)
                          ^04: Message type
"KRN",8994,2500,3,14,0)
 
"KRN",8994,2500,3,15,0)
  Results[j]            Line of the additional info (optional)
"KRN",8994,2500,3,16,0)
                          ^01: ""
"KRN",8994,2500,3,17,0)
                          ^02: Text  
"KRN",8994,2500,3,18,0)
 
"KRN",8994,2500,3,19,0)
Otherwise, '1^Ok' is returned in the Results[0].
"KRN",8994,2501,-1)
0^15
"KRN",8994,2501,0)
MAGG CAPTURE USERS^USERS^MAGGA03U^4^R^^^1
"KRN",8994,2501,1,0)
^8994.01^6^6^3091104^^
"KRN",8994,2501,1,1,0)
This call will find users that have captured images in a date range.
"KRN",8994,2501,1,2,0)
The list of users can be filtered by the FLAGS parameter
"KRN",8994,2501,1,3,0)
The Flags Parameter can contain
"KRN",8994,2501,1,4,0)
'C' for images captured on the Capture Workstation
"KRN",8994,2501,1,5,0)
  and/or
"KRN",8994,2501,1,6,0)
'I' for images captured throught the Import API.
"KRN",8994,2501,2,0)
^8994.02A^3^3
"KRN",8994,2501,2,1,0)
FLAGS^1^20^0^3
"KRN",8994,2501,2,1,1,0)
^8994.021^6^6^3091104^^
"KRN",8994,2501,2,1,1,1,0)
The Flags Parameter can contain
"KRN",8994,2501,2,1,1,2,0)
'C' for images captured on the Capture Workstation
"KRN",8994,2501,2,1,1,3,0)
and/or
"KRN",8994,2501,2,1,1,4,0)
'I' for images captured throught the Import API.
"KRN",8994,2501,2,1,1,5,0)
  
"KRN",8994,2501,2,1,1,6,0)
If the parameter is null it defaults to 'CI'.
"KRN",8994,2501,2,2,0)
FROMDATE^1^20^1^1
"KRN",8994,2501,2,2,1,0)
^8994.021^1^1^3091104^^
"KRN",8994,2501,2,2,1,1,0)
The earliest Date to search for users.
"KRN",8994,2501,2,3,0)
TODATE^1^20^1^2
"KRN",8994,2501,2,3,1,0)
^8994.021^1^1^3091104^^
"KRN",8994,2501,2,3,1,1,0)
The latest Date to search for users.
"KRN",8994,2501,2,"B","FLAGS",1)

"KRN",8994,2501,2,"B","FROMDATE",2)

"KRN",8994,2501,2,"B","TODATE",3)

"KRN",8994,2501,2,"PARAMSEQ",1,2)

"KRN",8994,2501,2,"PARAMSEQ",2,3)

"KRN",8994,2501,2,"PARAMSEQ",3,1)

"KRN",8994,2501,3,0)
^8994.03^5^5^3091104^^
"KRN",8994,2501,3,1,0)
The resulting global array is structured as:
"KRN",8994,2501,3,2,0)
 ResultArray(0)  = 1^success  :  for successful completion.
"KRN",8994,2501,3,3,0)
                or 0^<error message> : if an error occured.
"KRN",8994,2501,3,4,0)
  
"KRN",8994,2501,3,5,0)
 ResultArray(1..n) = UserName ^ DUZ
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020517^126
"PKG",454,22,1,"PAH",1,0)
93^3091202^126
"PKG",454,22,1,"PAH",1,1,0)
^^63^63^3091202
"PKG",454,22,1,"PAH",1,1,1,0)
Code for the Clinical Display and Capture.
"PKG",454,22,1,"PAH",1,1,2,0)
 
"PKG",454,22,1,"PAH",1,1,3,0)
 
"PKG",454,22,1,"PAH",1,1,4,0)
Routines:
"PKG",454,22,1,"PAH",1,1,5,0)
 
"PKG",454,22,1,"PAH",1,1,6,0)
MAGGA01   value = 29307935
"PKG",454,22,1,"PAH",1,1,7,0)
MAGGA02   value = 57822621
"PKG",454,22,1,"PAH",1,1,8,0)
MAGGA02A  value = 40367747
"PKG",454,22,1,"PAH",1,1,9,0)
MAGGA03   value = 45753507
"PKG",454,22,1,"PAH",1,1,10,0)
MAGGA03A  value = 24276061
"PKG",454,22,1,"PAH",1,1,11,0)
MAGGA03U  value = 15820919
"PKG",454,22,1,"PAH",1,1,12,0)
MAGGA04   value = 10448835
"PKG",454,22,1,"PAH",1,1,13,0)
MAGGAII   value = 118384476
"PKG",454,22,1,"PAH",1,1,14,0)
MAGGI11   value = 19558450
"PKG",454,22,1,"PAH",1,1,15,0)
MAGGI12   value = 30285951
"PKG",454,22,1,"PAH",1,1,16,0)
MAGGI13   value = 36748899
"PKG",454,22,1,"PAH",1,1,17,0)
MAGGI14   value = 39084079
"PKG",454,22,1,"PAH",1,1,18,0)
MAGGNTI   value = 37753394
"PKG",454,22,1,"PAH",1,1,19,0)
MAGGSFL1  value = 17534133
"PKG",454,22,1,"PAH",1,1,20,0)
MAGGSFLT  value = 33107414
"PKG",454,22,1,"PAH",1,1,21,0)
MAGGSIA   value = 34720134
"PKG",454,22,1,"PAH",1,1,22,0)
MAGGSIA1  value = 40524442
"PKG",454,22,1,"PAH",1,1,23,0)
MAGGSQI   value = 71964647
"PKG",454,22,1,"PAH",1,1,24,0)
MAGGTAU   value = 66867957
"PKG",454,22,1,"PAH",1,1,25,0)
MAGGTIA1  value = 33003499
"PKG",454,22,1,"PAH",1,1,26,0)
MAGGTID   value = 47456559
"PKG",454,22,1,"PAH",1,1,27,0)
MAGGTIG   value = 58640406
"PKG",454,22,1,"PAH",1,1,28,0)
MAGGTPT1  value = 37889156
"PKG",454,22,1,"PAH",1,1,29,0)
MAGGTRAI  value = 29892001
"PKG",454,22,1,"PAH",1,1,30,0)
MAGGTRPT  value = 43638944
"PKG",454,22,1,"PAH",1,1,31,0)
MAGGTSYS  value = 11574384
"PKG",454,22,1,"PAH",1,1,32,0)
MAGGTU3   value = 34334075
"PKG",454,22,1,"PAH",1,1,33,0)
MAGGTU31  value = 41847617
"PKG",454,22,1,"PAH",1,1,34,0)
MAGGTU4   value = 53401008
"PKG",454,22,1,"PAH",1,1,35,0)
MAGGTU41  value = 22378971
"PKG",454,22,1,"PAH",1,1,36,0)
MAGGTU42  value = 89107061
"PKG",454,22,1,"PAH",1,1,37,0)
MAGGTU4C  value = 5489850
"PKG",454,22,1,"PAH",1,1,38,0)
MAGGTU4D  value = 5495655
"PKG",454,22,1,"PAH",1,1,39,0)
MAGGTU4L  value = 4501110
"PKG",454,22,1,"PAH",1,1,40,0)
MAGGTU4T  value = 5490003
"PKG",454,22,1,"PAH",1,1,41,0)
MAGGTU6   value = 51862098
"PKG",454,22,1,"PAH",1,1,42,0)
MAGGTU7   value = 23284378
"PKG",454,22,1,"PAH",1,1,43,0)
MAGGTUP   value = 23999096
"PKG",454,22,1,"PAH",1,1,44,0)
MAGGTUX   value = 85905158
"PKG",454,22,1,"PAH",1,1,45,0)
MAGIPS93  value = 176674164
"PKG",454,22,1,"PAH",1,1,46,0)
MAGKIDS   value = 30231662
"PKG",454,22,1,"PAH",1,1,47,0)
MAGKIDS1  value = 40480221
"PKG",454,22,1,"PAH",1,1,48,0)
MAGSIXG1  value = 36487191
"PKG",454,22,1,"PAH",1,1,49,0)
MAGSIXG2  value = 63440737
"PKG",454,22,1,"PAH",1,1,50,0)
MAGSIXG3  value = 65195475
"PKG",454,22,1,"PAH",1,1,51,0)
MAGSIXG4  value = 12614135
"PKG",454,22,1,"PAH",1,1,52,0)
MAGUERR   value = 24572740
"PKG",454,22,1,"PAH",1,1,53,0)
MAGUERR1  value = 25613179
"PKG",454,22,1,"PAH",1,1,54,0)
MAGUTL01  value = 28612084
"PKG",454,22,1,"PAH",1,1,55,0)
MAGUTL02  value = 48311130
"PKG",454,22,1,"PAH",1,1,56,0)
MAGUTL03  value = 11647866
"PKG",454,22,1,"PAH",1,1,57,0)
MAGUTL04  value = 23169366
"PKG",454,22,1,"PAH",1,1,58,0)
MAGUTL05  value = 18410909
"PKG",454,22,1,"PAH",1,1,59,0)
MAGUTL06  value = 18816077
"PKG",454,22,1,"PAH",1,1,60,0)
MAGUTL07  value = 22761121
"PKG",454,22,1,"PAH",1,1,61,0)
MAGUTL08  value = 26051030
"PKG",454,22,1,"PAH",1,1,62,0)
MAGUTL10  value = 8165500
"PKG",454,22,1,"PAH",1,1,63,0)
MAGUXRF   value = 41195502
"PRE")
MAGIPS93
"QUES","POS02-MODE",0)
Y
"QUES","POS02-MODE","?")

"QUES","POS02-MODE","A")
Schedule a separate task that will build the indexes
"QUES","POS02-MODE","B")
NO
"QUES","POS02-MODE","M")
D NDXHLP^MAGIPS93(.DIR,1) K:'$$TM^%ZTLOAD DIR,XPDQUES("POS02-MODE")
"QUES","POS05-SCHEDULEAT",0)
D^NOW::AFNRX
"QUES","POS05-SCHEDULEAT","?")
Enter the date/time when the image indexing task will start.
"QUES","POS05-SCHEDULEAT","?",1)
One new index is added to the IMAGE file (#2005) and 3 - to the IMAGE
"QUES","POS05-SCHEDULEAT","?",2)
AUDIT file (#2005.1). Since the process of building these indexes takes 
"QUES","POS05-SCHEDULEAT","?",3)
significant time and puts additional load on the system, a separate task
"QUES","POS05-SCHEDULEAT","?",4)
can be scheduled for this purpose. It is strongly recommended to schedule
"QUES","POS05-SCHEDULEAT","?",5)
it for off-hours.
"QUES","POS05-SCHEDULEAT","A")
Schedule the image indexing task at
"QUES","POS05-SCHEDULEAT","B")
TODAY@21:00
"QUES","POS05-SCHEDULEAT","M")
K:'$G(XPDQUES("POS02-MODE")) DIR
"QUES","POS10-SUSPEND",0)
Y
"QUES","POS10-SUSPEND","?")
Answer Yes if you want the task to be suspended during the business hours.
"QUES","POS10-SUSPEND","?",1)
You can instruct the image indexing task to automatically suspend itself
"QUES","POS10-SUSPEND","?",2)
during busy business hours (7am - 8pm). This way, it will not affect the
"QUES","POS10-SUSPEND","?",3)
VistA response time.
"QUES","POS10-SUSPEND","?",4)
  
"QUES","POS10-SUSPEND","?",5)
However, please remember that most of the new functionality introduced by
"QUES","POS10-SUSPEND","?",6)
the patch MAG*3*93 (e.g. image verification) cannot be used until the 
"QUES","POS10-SUSPEND","?",7)
indexing task finishes.
"QUES","POS10-SUSPEND","A")
Suspend the image indexing task during business hours (7am-8pm)
"QUES","POS10-SUSPEND","B")
YES
"QUES","POS10-SUSPEND","M")
K:'$G(XPDQUES("POS02-MODE")) DIR
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
58
"RTN","MAGGA01")
0^1^B29307935
"RTN","MAGGA01",1,0)
MAGGA01 ;WOIFO/SG - REMOTE PROCEDURES FOR REASONS ; 5/13/09 10:12am
"RTN","MAGGA01",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGA01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGA01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGA01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGA01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGA01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGA01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGA01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGA01",11,0)
 ;; |                                                               |
"RTN","MAGGA01",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGA01",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGA01",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGA01",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGA01",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGA01",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA01",18,0)
 ;;
"RTN","MAGGA01",19,0)
 Q
"RTN","MAGGA01",20,0)
 ;
"RTN","MAGGA01",21,0)
 ;+++++ APPENDS THE REASONS TO THE RESULT ARRAY
"RTN","MAGGA01",22,0)
 ;
"RTN","MAGGA01",23,0)
 ; RESULTS       Closed reference to the RPC result buffer.
"RTN","MAGGA01",24,0)
 ;
"RTN","MAGGA01",25,0)
 ; .MAGBUF       Reference to a local array with records of the
"RTN","MAGGA01",26,0)
 ;               MAG REASON file (#2005.88) loaded by the LIST^DIC.
"RTN","MAGGA01",27,0)
 ;
"RTN","MAGGA01",28,0)
 ; FLAGS         Flags that control execution.
"RTN","MAGGA01",29,0)
 ; 
"RTN","MAGGA01",30,0)
 ; Return Values
"RTN","MAGGA01",31,0)
 ; =============
"RTN","MAGGA01",32,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGA01",33,0)
 ;            0  Success
"RTN","MAGGA01",34,0)
 ;
"RTN","MAGGA01",35,0)
 ; Notes
"RTN","MAGGA01",36,0)
 ; =====
"RTN","MAGGA01",37,0)
 ;
"RTN","MAGGA01",38,0)
 ; This is an internal entry point. Do not call it from outside of
"RTN","MAGGA01",39,0)
 ; this routine.
"RTN","MAGGA01",40,0)
 ;
"RTN","MAGGA01",41,0)
APNDRSNS(RESULTS,MAGBUF,FLAGS) ;
"RTN","MAGGA01",42,0)
 N I,IENS,IMB,IRES,MAGTXT,RC
"RTN","MAGGA01",43,0)
 S RC=0,IRES=+$O(@RESULTS@(" "),-1)
"RTN","MAGGA01",44,0)
 ;---
"RTN","MAGGA01",45,0)
 S IMB=0
"RTN","MAGGA01",46,0)
 F  S IMB=$O(MAGBUF("DILIST",IMB))  Q:IMB'>0  D  Q:RC<0
"RTN","MAGGA01",47,0)
 . S IRES=IRES+1,@RESULTS@(IRES)=MAGBUF("DILIST",IMB,0)
"RTN","MAGGA01",48,0)
 . ;--- Check if full details are requested
"RTN","MAGGA01",49,0)
 . Q:FLAGS'["F"
"RTN","MAGGA01",50,0)
 . ;--- Load the description
"RTN","MAGGA01",51,0)
 . K MAGTXT  S IENS=$P(MAGBUF("DILIST",IMB,0),U)_","
"RTN","MAGGA01",52,0)
 . D GETS^DIQ(2005.88,IENS,"1",,"MAGTXT","MAGMSG")
"RTN","MAGGA01",53,0)
 . I $G(DIERR)  S RC=$$DBS^MAGUERR("MAGMSG",2005.88,IENS)  Q
"RTN","MAGGA01",54,0)
 . ;--- Append the description to the result array
"RTN","MAGGA01",55,0)
 . S I=0
"RTN","MAGGA01",56,0)
 . F  S I=$O(MAGTXT(2005.88,IENS,1,I))  Q:I'>0  D
"RTN","MAGGA01",57,0)
 . . S IRES=IRES+1,@RESULTS@(IRES)="D"_U_MAGTXT(2005.88,IENS,1,I)
"RTN","MAGGA01",58,0)
 . . Q
"RTN","MAGGA01",59,0)
 . Q
"RTN","MAGGA01",60,0)
 ;---
"RTN","MAGGA01",61,0)
 Q $S(RC<0:RC,1:0)
"RTN","MAGGA01",62,0)
 ;
"RTN","MAGGA01",63,0)
 ;***** RETURNS THE REASON PROPERTIES
"RTN","MAGGA01",64,0)
 ; RPC: MAGG REASON GET PROPERTIES
"RTN","MAGGA01",65,0)
 ;
"RTN","MAGGA01",66,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","MAGGA01",67,0)
 ;               are returned to.
"RTN","MAGGA01",68,0)
 ;
"RTN","MAGGA01",69,0)
 ; RSNID         Identifier of the reason: Internal Entry Number of
"RTN","MAGGA01",70,0)
 ;               the record in the MAG REASON file (#2005.88) or the
"RTN","MAGGA01",71,0)
 ;               reason code (see the FLAGS parameter).
"RTN","MAGGA01",72,0)
 ;
"RTN","MAGGA01",73,0)
 ; [FLAGS]       Flags that control execution (can be combined):
"RTN","MAGGA01",74,0)
 ;
"RTN","MAGGA01",75,0)
 ;                 C  By default, value of the RSNID parameter is
"RTN","MAGGA01",76,0)
 ;                    treated as the reason IEN. If this flag is
"RTN","MAGGA01",77,0)
 ;                    provided, then the reason code should be passed 
"RTN","MAGGA01",78,0)
 ;                    as the value of the RSNID.
"RTN","MAGGA01",79,0)
 ;
"RTN","MAGGA01",80,0)
 ;                 F  Include full details (description text).
"RTN","MAGGA01",81,0)
 ;                    By default, only the summary data is returned.
"RTN","MAGGA01",82,0)
 ; 
"RTN","MAGGA01",83,0)
 ; Return Values
"RTN","MAGGA01",84,0)
 ; =============
"RTN","MAGGA01",85,0)
 ;
"RTN","MAGGA01",86,0)
 ; Zero value of the first '^'-piece of the RESULTS(0) indicates
"RTN","MAGGA01",87,0)
 ; that an error occurred during the execution of the procedure.
"RTN","MAGGA01",88,0)
 ; In this case, the RESULTS array is formatted as described in the
"RTN","MAGGA01",89,0)
 ; comments to the RPCERRS^MAGUERR1 procedure.
"RTN","MAGGA01",90,0)
 ;  
"RTN","MAGGA01",91,0)
 ; Otherwise, the RESULTS(0) contains '1^OK' and the reason summary
"RTN","MAGGA01",92,0)
 ; and description are returned in the subsequent elements of the
"RTN","MAGGA01",93,0)
 ; RESULTS array as follows:
"RTN","MAGGA01",94,0)
 ;  
"RTN","MAGGA01",95,0)
 ; RESULTS(1)            Reason summary
"RTN","MAGGA01",96,0)
 ;                         ^01: IEN of the reason in file #2005.88
"RTN","MAGGA01",97,0)
 ;                         ^02: Text of the reason
"RTN","MAGGA01",98,0)
 ;                         ^03: Types of the reason (combination of
"RTN","MAGGA01",99,0)
 ;                              "C", "D", "P", and/or "S")
"RTN","MAGGA01",100,0)
 ;                         ^04: Date of inactivation (FileMan)
"RTN","MAGGA01",101,0)
 ;                         ^05: Unique code of the reason
"RTN","MAGGA01",102,0)
 ;   
"RTN","MAGGA01",103,0)
 ; RESULTS(1+i)          Line of the description of the reason
"RTN","MAGGA01",104,0)
 ;                         ^01: "D"
"RTN","MAGGA01",105,0)
 ;                         ^02: Text line
"RTN","MAGGA01",106,0)
 ;  
"RTN","MAGGA01",107,0)
 ;                       The description text is returned only if the
"RTN","MAGGA01",108,0)
 ;                       value of the FLAGS parameter contains "F" and
"RTN","MAGGA01",109,0)
 ;                       the DESCRIPTION field (1) of the MAG REASON
"RTN","MAGGA01",110,0)
 ;                       file (#2005.88) is not empty.
"RTN","MAGGA01",111,0)
 ;
"RTN","MAGGA01",112,0)
GET(RESULTS,RSNID,FLAGS) ;RPC [MAGG REASON GET PROPERTIES]
"RTN","MAGGA01",113,0)
 N RC  K RESULTS
"RTN","MAGGA01",114,0)
 S RESULTS(0)="1^Ok",RC=0
"RTN","MAGGA01",115,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGGA01",116,0)
 ;
"RTN","MAGGA01",117,0)
 D
"RTN","MAGGA01",118,0)
 . N DESCR,I,REASON
"RTN","MAGGA01",119,0)
 . S REASON=$$GETRSN^MAGUTL10(RSNID,$G(FLAGS),.DESCR)
"RTN","MAGGA01",120,0)
 . I REASON<0  S RC=REASON  Q
"RTN","MAGGA01",121,0)
 . ;
"RTN","MAGGA01",122,0)
 . ;--- Append the summary to the result array
"RTN","MAGGA01",123,0)
 . S IRES=1,RESULTS(IRES)=REASON
"RTN","MAGGA01",124,0)
 . Q:FLAGS'["F"
"RTN","MAGGA01",125,0)
 . ;
"RTN","MAGGA01",126,0)
 . ;--- Append the description to the result array
"RTN","MAGGA01",127,0)
 . S I=0
"RTN","MAGGA01",128,0)
 . F  S I=$O(DESCR(I))  Q:I'>0  D
"RTN","MAGGA01",129,0)
 . . S IRES=IRES+1,RESULTS(IRES)="D"_U_DESCR(I)
"RTN","MAGGA01",130,0)
 . . Q
"RTN","MAGGA01",131,0)
 . Q
"RTN","MAGGA01",132,0)
 ;
"RTN","MAGGA01",133,0)
 ;=== Error handling and cleanup
"RTN","MAGGA01",134,0)
 D:RC<0 RPCERRS^MAGUERR1(.RESULTS,RC)
"RTN","MAGGA01",135,0)
 Q
"RTN","MAGGA01",136,0)
 ;
"RTN","MAGGA01",137,0)
 ;***** RETURNS THE LIST OF REASONS
"RTN","MAGGA01",138,0)
 ; RPC: MAGG REASON LIST
"RTN","MAGGA01",139,0)
 ;
"RTN","MAGGA01",140,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","MAGGA01",141,0)
 ;               are returned to.
"RTN","MAGGA01",142,0)
 ;
"RTN","MAGGA01",143,0)
 ; MAGTYPE       Type(s) of returned reasons (can be combined):
"RTN","MAGGA01",144,0)
 ;
"RTN","MAGGA01",145,0)
 ;                 C  Reasons for copying images
"RTN","MAGGA01",146,0)
 ;                 D  Reasons for deleting images
"RTN","MAGGA01",147,0)
 ;                 P  Reasons for printing images
"RTN","MAGGA01",148,0)
 ;                 S  Reasons for changing image status
"RTN","MAGGA01",149,0)
 ;
"RTN","MAGGA01",150,0)
 ; [FLAGS]       Flags that control execution (can be combined):
"RTN","MAGGA01",151,0)
 ;
"RTN","MAGGA01",152,0)
 ;                 F  Include full details (description text, etc.)
"RTN","MAGGA01",153,0)
 ;                 I  Include inactivated reasons
"RTN","MAGGA01",154,0)
 ;
"RTN","MAGGA01",155,0)
 ;               By default ($G(FLAGS)=""), only the summary data
"RTN","MAGGA01",156,0)
 ;               for currently active reasons is returned.
"RTN","MAGGA01",157,0)
 ;
"RTN","MAGGA01",158,0)
 ; [PART]        The partial match restriction (case sensitive).
"RTN","MAGGA01",159,0)
 ;               For example, a PART value of "ZZ" would restrict
"RTN","MAGGA01",160,0)
 ;               the list to those entries starting with the
"RTN","MAGGA01",161,0)
 ;               letters "ZZ".
"RTN","MAGGA01",162,0)
 ;
"RTN","MAGGA01",163,0)
 ;               By default ($G(PART)=""), no text restrictions are
"RTN","MAGGA01",164,0)
 ;               applied.
"RTN","MAGGA01",165,0)
 ; 
"RTN","MAGGA01",166,0)
 ; Return Values
"RTN","MAGGA01",167,0)
 ; =============
"RTN","MAGGA01",168,0)
 ;
"RTN","MAGGA01",169,0)
 ; Zero value of the first '^'-piece of the @RESULTS@(0) indicates
"RTN","MAGGA01",170,0)
 ; that an error occurred during the execution of the procedure.
"RTN","MAGGA01",171,0)
 ; In this case, the @RESULTS array is formatted as described in the
"RTN","MAGGA01",172,0)
 ; comments to the RPCERRS^MAGUERR1 procedure.
"RTN","MAGGA01",173,0)
 ;  
"RTN","MAGGA01",174,0)
 ; Otherwise, the @RESULTS@(0) contains '1^OK' and the list of reasons
"RTN","MAGGA01",175,0)
 ; is returned in the subsequent elements of the @RESULTS array as
"RTN","MAGGA01",176,0)
 ; follows:
"RTN","MAGGA01",177,0)
 ;  
"RTN","MAGGA01",178,0)
 ; @RESULTS@(i)          Reason summary
"RTN","MAGGA01",179,0)
 ;                         ^01: IEN of the reason in file #2005.88
"RTN","MAGGA01",180,0)
 ;                         ^02: Text of the reason
"RTN","MAGGA01",181,0)
 ;                         ^03: Types of the reason (combination of
"RTN","MAGGA01",182,0)
 ;                              "C", "D", "P", and/or "S")
"RTN","MAGGA01",183,0)
 ;                         ^04: Date of inactivation (FileMan).
"RTN","MAGGA01",184,0)
 ;                              This piece is always empty if the
"RTN","MAGGA01",185,0)
 ;                              value of the FLAGS parameter does not
"RTN","MAGGA01",186,0)
 ;                              contain "I". Otherwise, a date in
"RTN","MAGGA01",187,0)
 ;                              internal FileMan format is returned
"RTN","MAGGA01",188,0)
 ;                              here for inactivated reasons.
"RTN","MAGGA01",189,0)
 ;                         ^05: Unique code of the reason
"RTN","MAGGA01",190,0)
 ;   
"RTN","MAGGA01",191,0)
 ; @RESULTS@(i+j)        Line of the description of the reason
"RTN","MAGGA01",192,0)
 ;                         ^01: "D"
"RTN","MAGGA01",193,0)
 ;                         ^02: Text line
"RTN","MAGGA01",194,0)
 ;  
"RTN","MAGGA01",195,0)
 ;                       The description text is returned only if the
"RTN","MAGGA01",196,0)
 ;                       value of the FLAGS parameter contains "F" and
"RTN","MAGGA01",197,0)
 ;                       the DESCRIPTION field (1) of the MAG REASON
"RTN","MAGGA01",198,0)
 ;                       file (#2005.88) is not empty.
"RTN","MAGGA01",199,0)
 ;
"RTN","MAGGA01",200,0)
 ; The reasons are sorted alphabetically (case sensitive).
"RTN","MAGGA01",201,0)
 ;
"RTN","MAGGA01",202,0)
 ; Notes
"RTN","MAGGA01",203,0)
 ; =====
"RTN","MAGGA01",204,0)
 ;
"RTN","MAGGA01",205,0)
 ; The ^TMP($J,"MAGGA01") global node is used by this procedure.
"RTN","MAGGA01",206,0)
 ;
"RTN","MAGGA01",207,0)
LSTRSNS(RESULTS,MAGTYPE,FLAGS,PART) ;RPC [MAGG REASON LIST]
"RTN","MAGGA01",208,0)
 N RC
"RTN","MAGGA01",209,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGGA01",210,0)
 S DT=$$DT^XLFDT  ; Ensure the current date value
"RTN","MAGGA01",211,0)
 S RC=0
"RTN","MAGGA01",212,0)
 ;
"RTN","MAGGA01",213,0)
 ;=== Initialize the result array
"RTN","MAGGA01",214,0)
 K RESULTS   S RESULTS=$NA(^TMP("MAGGA01",$J))
"RTN","MAGGA01",215,0)
 K @RESULTS  S @RESULTS@(0)="1^Ok"
"RTN","MAGGA01",216,0)
 ;
"RTN","MAGGA01",217,0)
 D
"RTN","MAGGA01",218,0)
 . N FLDS,MAGBUF,MAGMSG,SCR
"RTN","MAGGA01",219,0)
 . ;=== Validate parameters
"RTN","MAGGA01",220,0)
 . S FLAGS=$G(FLAGS),PART=$G(PART)
"RTN","MAGGA01",221,0)
 . ;--- Type is not defined
"RTN","MAGGA01",222,0)
 . I $G(MAGTYPE)=""  S RC=$$ERROR^MAGUERR(-8,,"MAGTYPE")  Q
"RTN","MAGGA01",223,0)
 . ;--- Invalid type code(s)
"RTN","MAGGA01",224,0)
 . I $TR(MAGTYPE,"CDPS")'=""  S RC=$$IPVE^MAGUERR("MAGTYPE")  Q
"RTN","MAGGA01",225,0)
 . ;--- Invalid flag(s)
"RTN","MAGGA01",226,0)
 . I $TR(FLAGS,"FI")'=""  S RC=$$IPVE^MAGUERR("FLAGS")  Q
"RTN","MAGGA01",227,0)
 . ;
"RTN","MAGGA01",228,0)
 . ;=== Prepare the search parameters
"RTN","MAGGA01",229,0)
 . S FLDS="@;.01;.02I;.03I;.04"
"RTN","MAGGA01",230,0)
 . S SCR="N MAG0 S MAG0=$G(^(0)) I $TR(MAGTYPE,$P(MAG0,U,2))'=MAGTYPE"
"RTN","MAGGA01",231,0)
 . S:FLAGS'["I" SCR=SCR_",($P(MAG0,U,3)'>0)!($P(MAG0,U,3)>DT)"
"RTN","MAGGA01",232,0)
 . ;
"RTN","MAGGA01",233,0)
 . ;=== Search for reasons
"RTN","MAGGA01",234,0)
 . D LIST^DIC(2005.88,,FLDS,"P",,,PART,"B",SCR,,"MAGBUF","MAGMSG")
"RTN","MAGGA01",235,0)
 . I $G(DIERR)  S RC=$$DBS^MAGUERR("MAGMSG",2005.88)  Q
"RTN","MAGGA01",236,0)
 . Q:$G(MAGBUF("DILIST",0))'>0  ; Nothing has been found
"RTN","MAGGA01",237,0)
 . ;
"RTN","MAGGA01",238,0)
 . ;--- Append the reasons to the result array
"RTN","MAGGA01",239,0)
 . S RC=$$APNDRSNS(RESULTS,.MAGBUF,FLAGS)
"RTN","MAGGA01",240,0)
 . Q
"RTN","MAGGA01",241,0)
 ;
"RTN","MAGGA01",242,0)
 ;=== Error handling and cleanup
"RTN","MAGGA01",243,0)
 D:RC<0 RPCERRS^MAGUERR1(.RESULTS,RC)
"RTN","MAGGA01",244,0)
 Q
"RTN","MAGGA02")
0^9^B57822621
"RTN","MAGGA02",1,0)
MAGGA02 ;WOIFO/SG - REMOTE PROCEDURES FOR IMAGE PROPERTIES ; 5/1/09 2:54pm
"RTN","MAGGA02",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGA02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGA02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGA02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGA02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGA02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGA02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGA02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGA02",11,0)
 ;; |                                                               |
"RTN","MAGGA02",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGA02",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGA02",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGA02",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGA02",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGA02",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA02",18,0)
 ;;
"RTN","MAGGA02",19,0)
 Q
"RTN","MAGGA02",20,0)
 ;
"RTN","MAGGA02",21,0)
 ;***** GETS THE IMAGE PROPERTIES (FIELDS IN FILE #2005 OR #2005.1)
"RTN","MAGGA02",22,0)
 ; RPC: MAGG IMAGE GET PROPERTIES
"RTN","MAGGA02",23,0)
 ;
"RTN","MAGGA02",24,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","MAGGA02",25,0)
 ;               are returned to.
"RTN","MAGGA02",26,0)
 ;
"RTN","MAGGA02",27,0)
 ; IMGIEN        IEN of the image record in the IMAGE file (#2005)
"RTN","MAGGA02",28,0)
 ;
"RTN","MAGGA02",29,0)
 ; PROPLST       Property names separated by semicolons or one of
"RTN","MAGGA02",30,0)
 ;               the following special characters:
"RTN","MAGGA02",31,0)
 ;
"RTN","MAGGA02",32,0)
 ;                 *  All supported properties
"RTN","MAGGA02",33,0)
 ;
"RTN","MAGGA02",34,0)
 ;                 #  Image indexes (IXCLASS, IXORIGIN, IXPKG,
"RTN","MAGGA02",35,0)
 ;                    IXPROC, IXSPEC, and ISTYPE)
"RTN","MAGGA02",36,0)
 ;
"RTN","MAGGA02",37,0)
 ;               See the IPDEFS^MAGGA02A and IPDEFS1^MAGGA02A for
"RTN","MAGGA02",38,0)
 ;               the lists of supported properties.
"RTN","MAGGA02",39,0)
 ;
"RTN","MAGGA02",40,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGGA02",41,0)
 ;
"RTN","MAGGA02",42,0)
 ;                 E  Return external values (default)
"RTN","MAGGA02",43,0)
 ;
"RTN","MAGGA02",44,0)
 ;                 I  Return internal values
"RTN","MAGGA02",45,0)
 ;
"RTN","MAGGA02",46,0)
 ; [ADT]         Date/time (internal FileMan value) for retrieving
"RTN","MAGGA02",47,0)
 ;               previous values. By default ($G(ADT)'>0), audit
"RTN","MAGGA02",48,0)
 ;               checks are not performed and current values are
"RTN","MAGGA02",49,0)
 ;               returned.
"RTN","MAGGA02",50,0)
 ; 
"RTN","MAGGA02",51,0)
 ; Return Values
"RTN","MAGGA02",52,0)
 ; =============
"RTN","MAGGA02",53,0)
 ;
"RTN","MAGGA02",54,0)
 ; Zero value of the first '^'-piece of the RESULTS(0) indicates
"RTN","MAGGA02",55,0)
 ; that an error occurred during the execution of the procedure.
"RTN","MAGGA02",56,0)
 ; In this case, the RESULTS array is formatted as described in the
"RTN","MAGGA02",57,0)
 ; comments to the RPCERRS^MAGUERR1 procedure.
"RTN","MAGGA02",58,0)
 ;  
"RTN","MAGGA02",59,0)
 ; Otherwise, '1^Ok' is returned in the RESULTS(0) and subsequent
"RTN","MAGGA02",60,0)
 ; nodes contain property values:
"RTN","MAGGA02",61,0)
 ;
"RTN","MAGGA02",62,0)
 ; RESULTS(0)            Result descriptor
"RTN","MAGGA02",63,0)
 ;                         ^01: 1
"RTN","MAGGA02",64,0)
 ;                         ^02: Ok
"RTN","MAGGA02",65,0)
 ;
"RTN","MAGGA02",66,0)
 ; RESULTS(i)            Property value
"RTN","MAGGA02",67,0)
 ;                         ^01: Property name
"RTN","MAGGA02",68,0)
 ;                         ^02: "" (empty)
"RTN","MAGGA02",69,0)
 ;                         ^03: Internal property value if the 'I'
"RTN","MAGGA02",70,0)
 ;                              flag is provided. Otherwise - empty.
"RTN","MAGGA02",71,0)
 ;                         ^04: External property value if the 'E'
"RTN","MAGGA02",72,0)
 ;                              flag is provided. Otherwise - empty.
"RTN","MAGGA02",73,0)
 ;
"RTN","MAGGA02",74,0)
 ; RESULTS(j)            Line of word-processing property value
"RTN","MAGGA02",75,0)
 ;                         ^01: Property name
"RTN","MAGGA02",76,0)
 ;                         ^02: Sequential number
"RTN","MAGGA02",77,0)
 ;                         ^03: Line of text
"RTN","MAGGA02",78,0)
 ;
"RTN","MAGGA02",79,0)
GETPROPS(RESULTS,IMGIEN,PROPLST,FLAGS,ADT) ;RPC [MAGG IMAGE GET PROPERTIES]
"RTN","MAGGA02",80,0)
 N MAGRC,RESCNT
"RTN","MAGGA02",81,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGGA02",82,0)
 K RESULTS  S RESULTS(0)="1^Ok",RESCNT=0
"RTN","MAGGA02",83,0)
 S FLAGS=$G(FLAGS),MAGRC=0
"RTN","MAGGA02",84,0)
 ;
"RTN","MAGGA02",85,0)
 D
"RTN","MAGGA02",86,0)
 . N FIELD,FLDLST,I,IENS,IMGFILE,MAGBUF,MAGMSG,NAME,PROPDEFS,TMP
"RTN","MAGGA02",87,0)
 . S IMGFILE=2005,PROPDEFS="IPDEFS^MAGGA02A"
"RTN","MAGGA02",88,0)
 . ;=== Check the record IEN
"RTN","MAGGA02",89,0)
 . I '$$ISVALID^MAGGI11(IMGIEN,.MAGRC)  D STORE^MAGUERR(MAGRC)  Q
"RTN","MAGGA02",90,0)
 . S IENS=IMGIEN_","
"RTN","MAGGA02",91,0)
 . ;~~~ Delete this comment and the following lines of code when
"RTN","MAGGA02",92,0)
 . ;~~~ the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGA02",93,0)
 . I $$ISDEL^MAGGI11(IMGIEN,.MAGRC)  D
"RTN","MAGGA02",94,0)
 . . S IMGFILE=2005.1,PROPDEFS="IPDEFS1^MAGGA02A"
"RTN","MAGGA02",95,0)
 . . Q
"RTN","MAGGA02",96,0)
 . ;
"RTN","MAGGA02",97,0)
 . ;=== Load definitions of the properties
"RTN","MAGGA02",98,0)
 . S MAGRC=$$LDMPDEFS^MAGUTL01(.PROPDEFS,PROPDEFS,"R")
"RTN","MAGGA02",99,0)
 . Q:MAGRC<0
"RTN","MAGGA02",100,0)
 . ;
"RTN","MAGGA02",101,0)
 . ;=== Compile the list of fields
"RTN","MAGGA02",102,0)
 . S FLDLST=""
"RTN","MAGGA02",103,0)
 . I PROPLST="*"  D
"RTN","MAGGA02",104,0)
 . . S NAME=""
"RTN","MAGGA02",105,0)
 . . F  S NAME=$O(PROPDEFS("N",NAME))  Q:NAME=""  D
"RTN","MAGGA02",106,0)
 . . . S TMP=$G(PROPDEFS("N",NAME)),FIELD=$P(TMP,U,2)
"RTN","MAGGA02",107,0)
 . . . Q:($P(TMP,U)'=IMGFILE)!(FIELD'>0)
"RTN","MAGGA02",108,0)
 . . . S FLDLST=FLDLST_";"_FIELD,FLDLST(FIELD)=NAME
"RTN","MAGGA02",109,0)
 . . . Q
"RTN","MAGGA02",110,0)
 . . Q
"RTN","MAGGA02",111,0)
 . E  D
"RTN","MAGGA02",112,0)
 . . S:PROPLST="#" PROPLST="IXCLASS;IXORIGIN;IXPKG;IXPROC;IXSPEC;IXTYPE"
"RTN","MAGGA02",113,0)
 . . F I=1:1  S NAME=$P(PROPLST,";",I)  Q:NAME=""  D
"RTN","MAGGA02",114,0)
 . . . S TMP=$G(PROPDEFS("N",NAME)),FIELD=$P(TMP,U,2)
"RTN","MAGGA02",115,0)
 . . . Q:($P(TMP,U)'=IMGFILE)!(FIELD'>0)
"RTN","MAGGA02",116,0)
 . . . S FLDLST=FLDLST_";"_FIELD,FLDLST(FIELD)=NAME
"RTN","MAGGA02",117,0)
 . . . Q
"RTN","MAGGA02",118,0)
 . . Q
"RTN","MAGGA02",119,0)
 . S FLDLST=$P(FLDLST,";",2,999999)  Q:FLDLST=""
"RTN","MAGGA02",120,0)
 . ;
"RTN","MAGGA02",121,0)
 . ;=== Load the field values
"RTN","MAGGA02",122,0)
 . S TMP=$$TRFLAGS^MAGUTL05(FLAGS,"EI")
"RTN","MAGGA02",123,0)
 . S:TMP="" TMP="E",FLAGS=FLAGS_"E"
"RTN","MAGGA02",124,0)
 . D GETS^MAGUTL04(IMGFILE,IENS,FLDLST,TMP,"MAGBUF","MAGMSG",$G(ADT))
"RTN","MAGGA02",125,0)
 . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",IMGFILE,IENS)  Q
"RTN","MAGGA02",126,0)
 . ;
"RTN","MAGGA02",127,0)
 . ;=== Store property values to the result array
"RTN","MAGGA02",128,0)
 . S FIELD=0
"RTN","MAGGA02",129,0)
 . F  S FIELD=$O(MAGBUF(IMGFILE,IENS,FIELD))  Q:FIELD'>0  D
"RTN","MAGGA02",130,0)
 . . S NAME=$P(FLDLST(FIELD),U)
"RTN","MAGGA02",131,0)
 . . ;--- Word-processing field
"RTN","MAGGA02",132,0)
 . . I $P(PROPDEFS("N",NAME),U,3)["W"  D  Q
"RTN","MAGGA02",133,0)
 . . . S I=0
"RTN","MAGGA02",134,0)
 . . . F  S I=$O(MAGBUF(IMGFILE,IENS,FIELD,I))  Q:I'>0  D
"RTN","MAGGA02",135,0)
 . . . . S RESCNT=RESCNT+1
"RTN","MAGGA02",136,0)
 . . . . S RESULTS(RESCNT)=NAME_U_I_U_MAGBUF(IMGFILE,IENS,FIELD,I)
"RTN","MAGGA02",137,0)
 . . . . Q
"RTN","MAGGA02",138,0)
 . . . Q
"RTN","MAGGA02",139,0)
 . . ;--- Other types
"RTN","MAGGA02",140,0)
 . . S TMP=NAME
"RTN","MAGGA02",141,0)
 . . S:FLAGS["I" $P(TMP,U,3)=MAGBUF(IMGFILE,IENS,FIELD,"I")
"RTN","MAGGA02",142,0)
 . . S:FLAGS["E" $P(TMP,U,4)=MAGBUF(IMGFILE,IENS,FIELD,"E")
"RTN","MAGGA02",143,0)
 . . S RESCNT=RESCNT+1,RESULTS(RESCNT)=TMP
"RTN","MAGGA02",144,0)
 . . Q
"RTN","MAGGA02",145,0)
 . ;
"RTN","MAGGA02",146,0)
 . ;=== Compute the value of the Image Class property
"RTN","MAGGA02",147,0)
 . I (PROPLST="*")!((";"_PROPLST_";")[";IXCLASS;")  D  Q:MAGRC<0
"RTN","MAGGA02",148,0)
 . . S TMP=$G(MAGBUF(IMGFILE,IENS,42,"I"))
"RTN","MAGGA02",149,0)
 . . S TMP=$$IXCLASS^MAGGA02A(IMGFILE,IENS,TMP,FLAGS)
"RTN","MAGGA02",150,0)
 . . I TMP<0  S MAGRC=TMP  Q
"RTN","MAGGA02",151,0)
 . . S:TMP'=0 RESCNT=RESCNT+1,RESULTS(RESCNT)=TMP
"RTN","MAGGA02",152,0)
 . . Q
"RTN","MAGGA02",153,0)
 . Q
"RTN","MAGGA02",154,0)
 ;
"RTN","MAGGA02",155,0)
 ;=== Error handling and cleanup
"RTN","MAGGA02",156,0)
 D:MAGRC<0 RPCERRS^MAGUERR1(.RESULTS,MAGRC)
"RTN","MAGGA02",157,0)
 Q
"RTN","MAGGA02",158,0)
 ;
"RTN","MAGGA02",159,0)
 ;***** SETS THE IMAGE PROPERTIES (FIELDS IN THE FILE #2005)
"RTN","MAGGA02",160,0)
 ; RPC: MAGG IMAGE SET PROPERTIES
"RTN","MAGGA02",161,0)
 ;
"RTN","MAGGA02",162,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","MAGGA02",163,0)
 ;               are returned to.
"RTN","MAGGA02",164,0)
 ;
"RTN","MAGGA02",165,0)
 ; IMGIEN        IEN of the image record in the IMAGE file (#2005)
"RTN","MAGGA02",166,0)
 ;
"RTN","MAGGA02",167,0)
 ; [FLAGS]       Reserved for future use
"RTN","MAGGA02",168,0)
 ;
"RTN","MAGGA02",169,0)
 ; .PROPVALS     Reference to a local array that stores new values
"RTN","MAGGA02",170,0)
 ;               for image properties. See description of the MAGG
"RTN","MAGGA02",171,0)
 ;               IMAGE SET PROPERTIES remote procedure for details.
"RTN","MAGGA02",172,0)
 ;
"RTN","MAGGA02",173,0)
 ;               See the IPDEFS^MAGGA02A for the list of supported
"RTN","MAGGA02",174,0)
 ;               properties.
"RTN","MAGGA02",175,0)
 ;
"RTN","MAGGA02",176,0)
 ; Return Values
"RTN","MAGGA02",177,0)
 ; =============
"RTN","MAGGA02",178,0)
 ;
"RTN","MAGGA02",179,0)
 ; Zero value of the first '^'-piece of the RESULTS(0) indicates
"RTN","MAGGA02",180,0)
 ; that an error occurred during the execution of the procedure.
"RTN","MAGGA02",181,0)
 ; In this case, the RESULTS array is formatted as described in the
"RTN","MAGGA02",182,0)
 ; comments to the RPCERRS^MAGUERR1 procedure.
"RTN","MAGGA02",183,0)
 ;  
"RTN","MAGGA02",184,0)
 ; Otherwise, the RESULTS(0) contains '1^OK'.
"RTN","MAGGA02",185,0)
 ;
"RTN","MAGGA02",186,0)
 ; Notes
"RTN","MAGGA02",187,0)
 ; =====
"RTN","MAGGA02",188,0)
 ;
"RTN","MAGGA02",189,0)
 ; Properties of images marked as deleted cannot be modified. This
"RTN","MAGGA02",190,0)
 ; entry point returns an error (-41) if the IMGIEN parameter
"RTN","MAGGA02",191,0)
 ; references a deleted image entry.
"RTN","MAGGA02",192,0)
 ;
"RTN","MAGGA02",193,0)
 ; If one of the following fields is updated in the parent or the
"RTN","MAGGA02",194,0)
 ; child of a group that has only one image, then the changes are
"RTN","MAGGA02",195,0)
 ; replicated to the child or parent respectively:
"RTN","MAGGA02",196,0)
 ;
"RTN","MAGGA02",197,0)
 ; SHORT DESCRIPTION (10), TYPE INDEX (42), PROC/EVENT INDEX (43),
"RTN","MAGGA02",198,0)
 ; SPEC/SUBSPEC INDEX (44), ORIGIN INDEX (45), CREATION DATE (110),
"RTN","MAGGA02",199,0)
 ; CONTROLLED IMAGE (112), STATUS (113), and STATUS REASON (113.3).
"RTN","MAGGA02",200,0)
 ;
"RTN","MAGGA02",201,0)
SETPROPS(RESULTS,IMGIEN,FLAGS,PROPVALS) ;RPC [MAGG IMAGE SET PROPERTIES]
"RTN","MAGGA02",202,0)
 N MAGNODE,MAGRC
"RTN","MAGGA02",203,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGGA02",204,0)
 K RESULTS  S RESULTS(0)="1^Ok"
"RTN","MAGGA02",205,0)
 S MAGRC=0
"RTN","MAGGA02",206,0)
 ;
"RTN","MAGGA02",207,0)
 D
"RTN","MAGGA02",208,0)
 . N FLD,IENS,IMGIEN1,NAME,MAGFDA,MAGMSG,MISC,PROPDEFS
"RTN","MAGGA02",209,0)
 . ;=== Set up the error handler
"RTN","MAGGA02",210,0)
 . N $ESTACK,$ETRAP  D SETDEFEH^MAGUERR("MAGRC")
"RTN","MAGGA02",211,0)
 . ;
"RTN","MAGGA02",212,0)
 . ;=== Check the record IEN
"RTN","MAGGA02",213,0)
 . I '$$ISVALID^MAGGI11(IMGIEN,.MAGRC)  D STORE^MAGUERR(MAGRC)  Q
"RTN","MAGGA02",214,0)
 . ;
"RTN","MAGGA02",215,0)
 . ;=== Load definitions of parameters and properties
"RTN","MAGGA02",216,0)
 . S MAGRC=$$LDMPDEFS^MAGUTL01(.PROPDEFS,"IPDEFS^MAGGA02A","W")
"RTN","MAGGA02",217,0)
 . Q:MAGRC<0
"RTN","MAGGA02",218,0)
 . ;
"RTN","MAGGA02",219,0)
 . ;=== Validate the new property values
"RTN","MAGGA02",220,0)
 . S MAGRC=$$RPCMISC^MAGUTL02(.PROPVALS,.MISC,.PROPDEFS,"UV")
"RTN","MAGGA02",221,0)
 . Q:MAGRC<0
"RTN","MAGGA02",222,0)
 . ;
"RTN","MAGGA02",223,0)
 . ;=== Prepare the new data
"RTN","MAGGA02",224,0)
 . S IENS=IMGIEN_","
"RTN","MAGGA02",225,0)
 . S NAME=""
"RTN","MAGGA02",226,0)
 . F  S NAME=$O(MISC(NAME))  Q:NAME=""  D
"RTN","MAGGA02",227,0)
 . . ;--- Check the file and field numbers and skip parameters
"RTN","MAGGA02",228,0)
 . . ;--- that should not be stored in the IMAGE file (#2005)
"RTN","MAGGA02",229,0)
 . . Q:$P($G(PROPDEFS("N",NAME)),U)'=2005
"RTN","MAGGA02",230,0)
 . . S FLD=$P(PROPDEFS("N",NAME),U,2)  Q:FLD'>0
"RTN","MAGGA02",231,0)
 . . ;--- Store the value into the Fileman DBS buffer
"RTN","MAGGA02",232,0)
 . . S MAGFDA(2005,IENS,FLD)=MISC(NAME,"I")
"RTN","MAGGA02",233,0)
 . . Q
"RTN","MAGGA02",234,0)
 . Q:$D(MAGFDA)<10
"RTN","MAGGA02",235,0)
 . ;
"RTN","MAGGA02",236,0)
 . ;=== Check for the group of one and replicate the changes
"RTN","MAGGA02",237,0)
 . S IMGIEN1=$$REPLIC^MAGGA02A(IMGIEN,.MAGFDA)
"RTN","MAGGA02",238,0)
 . I IMGIEN1<0  S MAGRC=IMGIEN1  Q
"RTN","MAGGA02",239,0)
 . ;
"RTN","MAGGA02",240,0)
 . ;=== Lock the image record(s)
"RTN","MAGGA02",241,0)
 . S MAGNODE=$NA(^MAG(2005,IMGIEN))
"RTN","MAGGA02",242,0)
 . S:IMGIEN1>0 MAGNODE="("_MAGNODE_","_$NA(^MAG(2005,IMGIEN1))_")"
"RTN","MAGGA02",243,0)
 . D LOCK^DILF(MAGNODE)  E  D  K MAGNODE  Q
"RTN","MAGGA02",244,0)
 . . S MAGRC=$$ERROR^MAGUERR(-21,,"image (IEN="_IMGIEN_")")
"RTN","MAGGA02",245,0)
 . . Q
"RTN","MAGGA02",246,0)
 . ;
"RTN","MAGGA02",247,0)
 . ;=== Check if the image record exists
"RTN","MAGGA02",248,0)
 . I $$ISDEL^MAGGI11(IMGIEN,.MAGRC)  D  Q
"RTN","MAGGA02",249,0)
 . . S MAGRC=$$ERROR^MAGUERR(-41,,IMGIEN)
"RTN","MAGGA02",250,0)
 . . Q
"RTN","MAGGA02",251,0)
 . I MAGRC<0  D STORE^MAGUERR(MAGRC)  Q
"RTN","MAGGA02",252,0)
 . ;
"RTN","MAGGA02",253,0)
 . ;=== Update the image record
"RTN","MAGGA02",254,0)
 . D FILE^DIE(,"MAGFDA","MAGMSG")
"RTN","MAGGA02",255,0)
 . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",2005,IENS)  Q
"RTN","MAGGA02",256,0)
 ;
"RTN","MAGGA02",257,0)
 ;=== Error handling and cleanup
"RTN","MAGGA02",258,0)
 X:$G(MAGNODE)'="" "L -"_MAGNODE
"RTN","MAGGA02",259,0)
 D:MAGRC<0 RPCERRS^MAGUERR1(.RESULTS,MAGRC)
"RTN","MAGGA02",260,0)
 Q
"RTN","MAGGA02A")
0^34^B40367747
"RTN","MAGGA02A",1,0)
MAGGA02A ;WOIFO/SG - REMOTE PROCEDURES FOR IMAGE PROPERTIES ; 3/9/09 12:50pm
"RTN","MAGGA02A",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGA02A",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGA02A",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA02A",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGA02A",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGA02A",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGA02A",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGA02A",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGA02A",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGA02A",11,0)
 ;; |                                                               |
"RTN","MAGGA02A",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGA02A",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGA02A",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGA02A",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGA02A",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGA02A",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA02A",18,0)
 ;;
"RTN","MAGGA02A",19,0)
 Q
"RTN","MAGGA02A",20,0)
 ;
"RTN","MAGGA02A",21,0)
IPDEFS ;+++++ DEFINITIONS OF PROPERTIES FOR IMAGE FILE (#2005)
"RTN","MAGGA02A",22,0)
 ;;==================================================================
"RTN","MAGGA02A",23,0)
 ;;| Parameter  | File  |Field|Type |Flags|        Comment          |
"RTN","MAGGA02A",24,0)
 ;;|------------+-------+-----+-----+-----+-------------------------|
"RTN","MAGGA02A",25,0)
 ;;|CAPTAPP     |2005   | 8.1 | S   | R   | CAPTURE APPLICATION     |
"RTN","MAGGA02A",26,0)
 ;;|CRTNDT      |2005   | 110 | D   | RW  | CREATION DATE           |
"RTN","MAGGA02A",27,0)
 ;;|DTSAVED     |2005   |   7 | D   | R   | DATE/TIME IMAGE SAVED   |
"RTN","MAGGA02A",28,0)
 ;;|GDESC       |2005   |  10 |     | RW  | SHORT DESCRIPTION       |
"RTN","MAGGA02A",29,0)
 ;;|IDFN        |2005   |   5 | P   | R   | PATIENT                 |
"RTN","MAGGA02A",30,0)
 ;;|ISTAT       |2005   |113  | S   | RW  | STATUS                  |
"RTN","MAGGA02A",31,0)
 ;;|ISTATBY     |2005   |113.2| P   | R   | STATUS BY               |
"RTN","MAGGA02A",32,0)
 ;;|ISTATDT     |2005   |113.1| D   | R   | STATUS DATE             |
"RTN","MAGGA02A",33,0)
 ;;|ISTATRSN    |2005   |113.3| P   | RW  | STATUS REASON           |
"RTN","MAGGA02A",34,0)
 ;;|IXCLASS     |       |     | P   | R   | CLASS INDEX             |
"RTN","MAGGA02A",35,0)
 ;;|IXORIGIN    |2005   |  45 | S   | RW  | ORIGIN INDEX            |
"RTN","MAGGA02A",36,0)
 ;;|IXPKG       |2005   |  40 | S   | RW  | PACKAGE INDEX           |
"RTN","MAGGA02A",37,0)
 ;;|IXPROC      |2005   |  43 | P   | RW  | PROC/EVENT INDEX        |
"RTN","MAGGA02A",38,0)
 ;;|IXSPEC      |2005   |  44 | P   | RW  | SPEC/SUBSPEC INDEX      |
"RTN","MAGGA02A",39,0)
 ;;|IXTYPE      |2005   |  42 | P   | RW  | TYPE INDEX              |
"RTN","MAGGA02A",40,0)
 ;;|LDESCR      |2005   |  11 | W   | R   | LONG DESCRIPTION        |
"RTN","MAGGA02A",41,0)
 ;;|OBJNAME     |2005   | .01 |     | R   | OBJECT NAME             |
"RTN","MAGGA02A",42,0)
 ;;|OBJTYPE     |2005   |   3 | P   | R   | OBJECT TYPE             |
"RTN","MAGGA02A",43,0)
 ;;|PARDF       |2005   |  16 | P   | RW  | PARENT DATA FILE#       |
"RTN","MAGGA02A",44,0)
 ;;|PARGRD0     |2005   |  17 |     | RW  | PARENT GLOBAL ROOT D0   |
"RTN","MAGGA02A",45,0)
 ;;|PARGRD1     |2005   |  63 |     | RW  | PARENT GLOBAL ROOT D1   |
"RTN","MAGGA02A",46,0)
 ;;|PARIPTR     |2005   |  18 |     | RW  | PARENT...IMAGE POINTER  |
"RTN","MAGGA02A",47,0)
 ;;|PROC        |2005   |   6 |     | RW  | PROCEDURE               |
"RTN","MAGGA02A",48,0)
 ;;|PROCDT      |2005   |  15 | D   | RW  | PROCEDURE/EXAM DATE/TIME|
"RTN","MAGGA02A",49,0)
 ;;|SAVEDBY     |2005   |   8 | P   | R   | IMAGE SAVE BY           |
"RTN","MAGGA02A",50,0)
 ;;|SENSBY      |2005   |112.2| P   | R   | CONTROLLED BY            |
"RTN","MAGGA02A",51,0)
 ;;|SENSDT      |2005   |112.1| D   | R   | CONTROLLED DATE          |
"RTN","MAGGA02A",52,0)
 ;;|SENSIMG     |2005   |112  | S   | RW  | CONTROLLED IMAGE         |
"RTN","MAGGA02A",53,0)
 ;;==================================================================
"RTN","MAGGA02A",54,0)
 ;
"RTN","MAGGA02A",55,0)
 ; Custom Flags:
"RTN","MAGGA02A",56,0)
 ;   R  Image property can be read
"RTN","MAGGA02A",57,0)
 ;   W  Image property can be modified
"RTN","MAGGA02A",58,0)
 ;
"RTN","MAGGA02A",59,0)
 Q
"RTN","MAGGA02A",60,0)
 ;
"RTN","MAGGA02A",61,0)
IPDEFS1 ;+++++ DEFINITIONS OF PROPERTIES FOR IMAGE AUDIT FILE (#2005.1)
"RTN","MAGGA02A",62,0)
 ;;==================================================================
"RTN","MAGGA02A",63,0)
 ;;| Parameter  | File  |Field|Type |Flags|        Comment          |
"RTN","MAGGA02A",64,0)
 ;;|------------+-------+-----+-----+-----+-------------------------|
"RTN","MAGGA02A",65,0)
 ;;|CAPTAPP     |2005.1 | 8.1 | S   | R   | CAPTURE APPLICATION     |
"RTN","MAGGA02A",66,0)
 ;;|CRTNDT      |2005.1 | 110 | D   | R   | CREATION DATE           |
"RTN","MAGGA02A",67,0)
 ;;|DTSAVED     |2005.1 |   7 | D   | R   | DATE/TIME IMAGE SAVED   |
"RTN","MAGGA02A",68,0)
 ;;|GDESC       |2005.1 |  10 |     | R   | SHORT DESCRIPTION       |
"RTN","MAGGA02A",69,0)
 ;;|IDFN        |2005.1 |   5 | P   | R   | PATIENT                 |
"RTN","MAGGA02A",70,0)
 ;;|ISTAT       |2005.1 |113  | S   | R   | STATUS                  |
"RTN","MAGGA02A",71,0)
 ;;|ISTATBY     |2005.1 |113.2| P   | R   | STATUS BY               |
"RTN","MAGGA02A",72,0)
 ;;|ISTATDT     |2005.1 |113.1| D   | R   | STATUS DATE             |
"RTN","MAGGA02A",73,0)
 ;;|ISTATRSN    |2005.1 |113.3| P   | R   | STATUS REASON           |
"RTN","MAGGA02A",74,0)
 ;;|IXCLASS     |       |     | P   | R   | CLASS INDEX             |
"RTN","MAGGA02A",75,0)
 ;;|IXORIGIN    |2005.1 |  45 | S   | R   | ORIGIN INDEX            |
"RTN","MAGGA02A",76,0)
 ;;|IXPKG       |2005.1 |  40 | S   | R   | PACKAGE INDEX           |
"RTN","MAGGA02A",77,0)
 ;;|IXPROC      |2005.1 |  43 | P   | R   | PROC/EVENT INDEX        |
"RTN","MAGGA02A",78,0)
 ;;|IXSPEC      |2005.1 |  44 | P   | R   | SPEC/SUBSPEC INDEX      |
"RTN","MAGGA02A",79,0)
 ;;|IXTYPE      |2005.1 |  42 | P   | R   | TYPE INDEX              |
"RTN","MAGGA02A",80,0)
 ;;|LDESCR      |2005.1 |  11 | W   | R   | LONG DESCRIPTION        |
"RTN","MAGGA02A",81,0)
 ;;|OBJNAME     |2005.1 | .01 |     | R   | OBJECT NAME             |
"RTN","MAGGA02A",82,0)
 ;;|OBJTYPE     |2005.1 |   3 | P   | R   | OBJECT TYPE             |
"RTN","MAGGA02A",83,0)
 ;;|PARDF       |2005.1 |  16 | P   | R   | PARENT DATA FILE#       |
"RTN","MAGGA02A",84,0)
 ;;|PARGRD0     |2005.1 |  17 |     | R   | PARENT GLOBAL ROOT D0   |
"RTN","MAGGA02A",85,0)
 ;;|PARGRD1     |2005.1 |  63 |     | R   | PARENT GLOBAL ROOT D1   |
"RTN","MAGGA02A",86,0)
 ;;|PARIPTR     |2005.1 |  18 |     | R   | PARENT...IMAGE POINTER  |
"RTN","MAGGA02A",87,0)
 ;;|PROC        |2005.1 |   6 |     | R   | PROCEDURE               |
"RTN","MAGGA02A",88,0)
 ;;|PROCDT      |2005.1 |  15 | D   | R   | PROCEDURE/EXAM DATE/TIME|
"RTN","MAGGA02A",89,0)
 ;;|SAVEDBY     |2005.1 |   8 | P   | R   | IMAGE SAVE BY           |
"RTN","MAGGA02A",90,0)
 ;;|SENSBY      |2005.1 |112.2| P   | R   | CONTROLLED BY            |
"RTN","MAGGA02A",91,0)
 ;;|SENSDT      |2005.1 |112.1| D   | R   | CONTROLLED DATE          |
"RTN","MAGGA02A",92,0)
 ;;|SENSIMG     |2005.1 |112  | S   | R   | CONTROLLED IMAGE         |
"RTN","MAGGA02A",93,0)
 ;;==================================================================
"RTN","MAGGA02A",94,0)
 ;
"RTN","MAGGA02A",95,0)
 ; Custom Flags:
"RTN","MAGGA02A",96,0)
 ;   R  Image property can be read
"RTN","MAGGA02A",97,0)
 ;   W  Image property can be modified
"RTN","MAGGA02A",98,0)
 ;
"RTN","MAGGA02A",99,0)
 Q
"RTN","MAGGA02A",100,0)
 ;
"RTN","MAGGA02A",101,0)
 ;+++++ COMPUTES THE VALUE OF THE IMAGE CLASS PROPERTY
"RTN","MAGGA02A",102,0)
 ;
"RTN","MAGGA02A",103,0)
 ; IMGFILE       Image file number
"RTN","MAGGA02A",104,0)
 ;
"RTN","MAGGA02A",105,0)
 ; IENS          IENS of the image record
"RTN","MAGGA02A",106,0)
 ;
"RTN","MAGGA02A",107,0)
 ; TPIENS        IEN or IENS of the Image Type record in the
"RTN","MAGGA02A",108,0)
 ;               IMAGE INDEX FOR TYPES file (#2005.83). If this
"RTN","MAGGA02A",109,0)
 ;               parameter is not greater than 0, then the IEN is
"RTN","MAGGA02A",110,0)
 ;               loaded from the image record referenced by the
"RTN","MAGGA02A",111,0)
 ;               IMGFILE and IENS parameters.
"RTN","MAGGA02A",112,0)
 ;
"RTN","MAGGA02A",113,0)
 ; FLAGS         Flags that control the execution (can be combined):
"RTN","MAGGA02A",114,0)
 ;
"RTN","MAGGA02A",115,0)
 ;                 E  Return external value
"RTN","MAGGA02A",116,0)
 ;
"RTN","MAGGA02A",117,0)
 ;                 I  Return internal value
"RTN","MAGGA02A",118,0)
 ;
"RTN","MAGGA02A",119,0)
 ; Return Values
"RTN","MAGGA02A",120,0)
 ; =============
"RTN","MAGGA02A",121,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGA02A",122,0)
 ;            0  Class value is not available
"RTN","MAGGA02A",123,0)
 ;          ...  Property record (for the result array)
"RTN","MAGGA02A",124,0)
 ;
"RTN","MAGGA02A",125,0)
 ; Notes
"RTN","MAGGA02A",126,0)
 ; =====
"RTN","MAGGA02A",127,0)
 ;
"RTN","MAGGA02A",128,0)
 ; This is an internal entry point. Do not call it from outside
"RTN","MAGGA02A",129,0)
 ; of the MAGGA02* routines.
"RTN","MAGGA02A",130,0)
 ;
"RTN","MAGGA02A",131,0)
IXCLASS(IMGFILE,IENS,TPIENS,FLAGS) ;
"RTN","MAGGA02A",132,0)
 N MAGBUF1,MAGMSG,RC,TMP
"RTN","MAGGA02A",133,0)
 S RC=0
"RTN","MAGGA02A",134,0)
 ;--- If the Type Index IEN is not provided,
"RTN","MAGGA02A",135,0)
 ;--- then get it form the image record
"RTN","MAGGA02A",136,0)
 I TPIENS'>0  D  Q:(RC<0)!(TPIENS'>0) RC
"RTN","MAGGA02A",137,0)
 . S TPIENS=$$GET1^DIQ(IMGFILE,IENS,42,"I",,"MAGMSG")
"RTN","MAGGA02A",138,0)
 . S:$G(DIERR) RC=$$DBS^MAGUERR("MAGMSG",IMGFILE,IENS)
"RTN","MAGGA02A",139,0)
 . Q
"RTN","MAGGA02A",140,0)
 S TPIENS=(+TPIENS)_","
"RTN","MAGGA02A",141,0)
 ;--- Load the Image Class value(s)
"RTN","MAGGA02A",142,0)
 S TMP=$$TRFLAGS^MAGUTL05(FLAGS,"EI")
"RTN","MAGGA02A",143,0)
 D GETS^DIQ(2005.83,TPIENS,1,TMP,"MAGBUF1","MAGMSG")
"RTN","MAGGA02A",144,0)
 Q:$G(DIERR) $$DBS^MAGUERR("MAGMSG",2005.83,TPIENS)
"RTN","MAGGA02A",145,0)
 ;--- Store the property value(s) to the result array
"RTN","MAGGA02A",146,0)
 S TMP="IXCLASS"_U
"RTN","MAGGA02A",147,0)
 S:FLAGS["I" TMP=TMP_U_MAGBUF1(2005.83,TPIENS,1,"I")
"RTN","MAGGA02A",148,0)
 S:FLAGS["E" TMP=TMP_U_MAGBUF1(2005.83,TPIENS,1,"E")
"RTN","MAGGA02A",149,0)
 Q TMP
"RTN","MAGGA02A",150,0)
 ;
"RTN","MAGGA02A",151,0)
 ;+++++ REPLICATES THE CHANGES FOR A GROUP OF 1 IMAGE
"RTN","MAGGA02A",152,0)
 ;
"RTN","MAGGA02A",153,0)
 ; IMGIEN        IEN of the image record in the IMAGE file (#2005)
"RTN","MAGGA02A",154,0)
 ;
"RTN","MAGGA02A",155,0)
 ; .MAGFDA       FDA array with new data
"RTN","MAGGA02A",156,0)
 ;
"RTN","MAGGA02A",157,0)
 ; Return Values
"RTN","MAGGA02A",158,0)
 ; =============
"RTN","MAGGA02A",159,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGA02A",160,0)
 ;            0  Replication is not needed
"RTN","MAGGA02A",161,0)
 ;           >0  IEN of the destination record for replication
"RTN","MAGGA02A",162,0)
 ;
"RTN","MAGGA02A",163,0)
REPLIC(IMGIEN,MAGFDA) ;
"RTN","MAGGA02A",164,0)
 N CNT,FIELD,IENS,IENS1,IMGIEN1
"RTN","MAGGA02A",165,0)
 ;
"RTN","MAGGA02A",166,0)
 ;=== Check if the data replication is needed
"RTN","MAGGA02A",167,0)
 S IMGIEN1=$$GRPIEN^MAGGI12(IMGIEN)  Q:IMGIEN1<0 IMGIEN1
"RTN","MAGGA02A",168,0)
 I IMGIEN1>0  D  Q:CNT<0 CNT  Q:+CNT'=1 0
"RTN","MAGGA02A",169,0)
 . ;--- Check if the IMGIEN references the only "child" of a group
"RTN","MAGGA02A",170,0)
 . S CNT=$$GRPCT^MAGGI14(IMGIEN1)
"RTN","MAGGA02A",171,0)
 . Q
"RTN","MAGGA02A",172,0)
 E  D  Q:IMGIEN1'>0 IMGIEN1
"RTN","MAGGA02A",173,0)
 . ;--- Check if the IMGIEN references a group of 1 child
"RTN","MAGGA02A",174,0)
 . S CNT=$$GRPCT^MAGGI14(IMGIEN)
"RTN","MAGGA02A",175,0)
 . I CNT<0  S IMGIEN1=CNT  Q
"RTN","MAGGA02A",176,0)
 . S IMGIEN1=$S(+CNT=1:$$GRPCH1^MAGGI14(IMGIEN,"E"),1:0)
"RTN","MAGGA02A",177,0)
 . Q
"RTN","MAGGA02A",178,0)
 ;
"RTN","MAGGA02A",179,0)
 ;=== Prepare the data for replication
"RTN","MAGGA02A",180,0)
 S IENS=IMGIEN_",",IENS1=IMGIEN1_","
"RTN","MAGGA02A",181,0)
 F FIELD=10,42,43,44,45,110,112,113,113.3  D
"RTN","MAGGA02A",182,0)
 . Q:'$D(MAGFDA(2005,IENS,FIELD))
"RTN","MAGGA02A",183,0)
 . S MAGFDA(2005,IENS1,FIELD)=MAGFDA(2005,IENS,FIELD)
"RTN","MAGGA02A",184,0)
 . Q
"RTN","MAGGA02A",185,0)
 ;---
"RTN","MAGGA02A",186,0)
 Q IMGIEN1
"RTN","MAGGA03")
0^31^B45753507
"RTN","MAGGA03",1,0)
MAGGA03 ;WOIFO/SG - REMOTE PROCEDURES FOR IMAGE QUERIES ; 5/8/09 10:10am
"RTN","MAGGA03",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGA03",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGA03",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA03",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGA03",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGA03",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGA03",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGA03",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGA03",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGA03",11,0)
 ;; |                                                               |
"RTN","MAGGA03",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGA03",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGA03",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGA03",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGA03",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGA03",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA03",18,0)
 ;;
"RTN","MAGGA03",19,0)
 Q
"RTN","MAGGA03",20,0)
 ;
"RTN","MAGGA03",21,0)
 ;***** RETURNS VARIOUS IMAGE STATISTICS DATA
"RTN","MAGGA03",22,0)
 ; RPC: MAGG IMAGE STATISTICS
"RTN","MAGGA03",23,0)
 ;
"RTN","MAGGA03",24,0)
 ; .MAGRESULTS   Reference to a local variable where the results
"RTN","MAGGA03",25,0)
 ;               are returned to.
"RTN","MAGGA03",26,0)
 ;
"RTN","MAGGA03",27,0)
 ; FLAGS         Flags that control the execution (can be combined):
"RTN","MAGGA03",28,0)
 ;
"RTN","MAGGA03",29,0)
 ;                 C  Capture date range. If this flag is provided,
"RTN","MAGGA03",30,0)
 ;                    then the remote procedure uses values of the
"RTN","MAGGA03",31,0)
 ;                    FROMDATE and TODATE parameters to select images
"RTN","MAGGA03",32,0)
 ;                    that were captured in this date range.
"RTN","MAGGA03",33,0)
 ;
"RTN","MAGGA03",34,0)
 ;                    Otherwise, values of those parameters are
"RTN","MAGGA03",35,0)
 ;                    treated as the date range when procedures were
"RTN","MAGGA03",36,0)
 ;                    performed.
"RTN","MAGGA03",37,0)
 ;
"RTN","MAGGA03",38,0)
 ;                 D  Include only deleted images (file #2005.1)
"RTN","MAGGA03",39,0)
 ;                 E  Include only existing images (file #2005)
"RTN","MAGGA03",40,0)
 ;
"RTN","MAGGA03",41,0)
 ;                 S  Return image counts grouped by status
"RTN","MAGGA03",42,0)
 ;                 U  Return image counts grouped by users and status
"RTN","MAGGA03",43,0)
 ;
"RTN","MAGGA03",44,0)
 ;               If neither 'E' nor 'D' flag is provided, then an
"RTN","MAGGA03",45,0)
 ;               error (-6) is returned.
"RTN","MAGGA03",46,0)
 ;
"RTN","MAGGA03",47,0)
 ;               If neither 'S' nor 'U' flag is provided, then an
"RTN","MAGGA03",48,0)
 ;               error (-6) is returned.
"RTN","MAGGA03",49,0)
 ;
"RTN","MAGGA03",50,0)
 ; [FROMDATE]    Date range for image selection. Dates can be in
"RTN","MAGGA03",51,0)
 ; [TODATE]      internal or external FileMan format. If a date
"RTN","MAGGA03",52,0)
 ;               parameter is not defined or empty, then the date
"RTN","MAGGA03",53,0)
 ;               range remains open on the corresponding side.
"RTN","MAGGA03",54,0)
 ;
"RTN","MAGGA03",55,0)
 ;               Time parts of parameter values are ignored and both
"RTN","MAGGA03",56,0)
 ;               ends of the date range are included in the search.
"RTN","MAGGA03",57,0)
 ;               For example, in order to search images for May 21,
"RTN","MAGGA03",58,0)
 ;               2008, the inernal value of both parameters should
"RTN","MAGGA03",59,0)
 ;               be 3080521.
"RTN","MAGGA03",60,0)
 ;
"RTN","MAGGA03",61,0)
 ;               If the FROMDATE is after the TODATE, then values of
"RTN","MAGGA03",62,0)
 ;               the parameters are swapped.
"RTN","MAGGA03",63,0)
 ; 
"RTN","MAGGA03",64,0)
 ; Return Values
"RTN","MAGGA03",65,0)
 ; =============
"RTN","MAGGA03",66,0)
 ;     
"RTN","MAGGA03",67,0)
 ; Zero value of the 1st '^'-piece of the @MAGRESULTS@(0) indicates an
"RTN","MAGGA03",68,0)
 ; error during execution of the procedure. In this case, the array
"RTN","MAGGA03",69,0)
 ; is formatted as described in the comments to the RPCERRS^MAGUERR1.
"RTN","MAGGA03",70,0)
 ;
"RTN","MAGGA03",71,0)
 ; Otherwise, the array contains the requested data. See description
"RTN","MAGGA03",72,0)
 ; of the MAGG IMAGE STATISTICS remote procedure for details.
"RTN","MAGGA03",73,0)
 ;
"RTN","MAGGA03",74,0)
 ; Notes
"RTN","MAGGA03",75,0)
 ; =====
"RTN","MAGGA03",76,0)
 ;
"RTN","MAGGA03",77,0)
 ; Temporary global nodes ^TMP("MAGGA03",$J) and ^TMP("MAGGA03A,$J")
"RTN","MAGGA03",78,0)
 ; are used by this procedure.
"RTN","MAGGA03",79,0)
 ;
"RTN","MAGGA03",80,0)
IMGQUERY(MAGRESULTS,FLAGS,FROMDATE,TODATE) ;RPC [MAGG IMAGE STATISTICS]
"RTN","MAGGA03",81,0)
 N RC
"RTN","MAGGA03",82,0)
 S MAGRESULTS=$NA(^TMP("MAGGA03",$J))
"RTN","MAGGA03",83,0)
 K ^TMP("MAGGA03A",$J),@MAGRESULTS
"RTN","MAGGA03",84,0)
 S (@MAGRESULTS@(0),RC)=0
"RTN","MAGGA03",85,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGGA03",86,0)
 ;
"RTN","MAGGA03",87,0)
 D
"RTN","MAGGA03",88,0)
 . N MAGDATA      ; Data for the image query callback function
"RTN","MAGGA03",89,0)
 . N MAGSTCACHE   ; Local cache for image status descriptions
"RTN","MAGGA03",90,0)
 . N EDT,ERROR,QF
"RTN","MAGGA03",91,0)
 . ;
"RTN","MAGGA03",92,0)
 . ;=== Validate parameters
"RTN","MAGGA03",93,0)
 . S FLAGS=$G(FLAGS),ERROR=0
"RTN","MAGGA03",94,0)
 . ;--- Unknown/Unsupported flag(s)
"RTN","MAGGA03",95,0)
 . I $TR(FLAGS,"CDESU")'=""  D IPVE^MAGUERR("FLAGS")     S ERROR=1
"RTN","MAGGA03",96,0)
 . ;--- Missing required flag(s)
"RTN","MAGGA03",97,0)
 . I $TR(FLAGS,"DE")=FLAGS   D ERROR^MAGUERR(-6,,"D,E")  S ERROR=1
"RTN","MAGGA03",98,0)
 . I $TR(FLAGS,"SU")=FLAGS   D ERROR^MAGUERR(-6,,"S,U")  S ERROR=1
"RTN","MAGGA03",99,0)
 . ;--- Date range
"RTN","MAGGA03",100,0)
 . S:$$DTRANGE^MAGUTL03(.FROMDATE,.TODATE)<0 ERROR=1
"RTN","MAGGA03",101,0)
 . ;--- Abort in case of error(s)
"RTN","MAGGA03",102,0)
 . I ERROR  D ERROR^MAGUERR(-30)  S RC=$$FIRSTERR^MAGUERR1()  Q
"RTN","MAGGA03",103,0)
 . ;
"RTN","MAGGA03",104,0)
 . ;=== Query the image file(s)
"RTN","MAGGA03",105,0)
 . S EDT=$S(TODATE<9999999:$$FMADD^XLFDT(TODATE,1),1:TODATE)
"RTN","MAGGA03",106,0)
 . ;--- Pass the original flags to the callback function
"RTN","MAGGA03",107,0)
 . S MAGDATA("FLAGS")=FLAGS
"RTN","MAGGA03",108,0)
 . ;--- Remove flags that are not supported by the $$QUERY^MAGGI13
"RTN","MAGGA03",109,0)
 . S QF=$$TRFLAGS^MAGUTL05(FLAGS,"CDE")
"RTN","MAGGA03",110,0)
 . ;--- Execute the query
"RTN","MAGGA03",111,0)
 . S RC=$$QUERY^MAGGI13("$$QRYCBK^MAGGA03A",QF,.MAGDATA,FROMDATE,EDT)
"RTN","MAGGA03",112,0)
 . Q:RC<0
"RTN","MAGGA03",113,0)
 . ;
"RTN","MAGGA03",114,0)
 . ;=== Calculate image counts and store them to the result array
"RTN","MAGGA03",115,0)
 . I FLAGS["S"  S RC=$$SECTIONS(MAGRESULTS)  Q:RC<0
"RTN","MAGGA03",116,0)
 . I FLAGS["U"  S RC=$$SECTIONU(MAGRESULTS)  Q:RC<0
"RTN","MAGGA03",117,0)
 . Q
"RTN","MAGGA03",118,0)
 ;
"RTN","MAGGA03",119,0)
 ;=== Cleanup
"RTN","MAGGA03",120,0)
 K ^TMP("MAGGA03A",$J)
"RTN","MAGGA03",121,0)
 I RC<0  D RPCERRS^MAGUERR1(.MAGRESULTS,RC)  Q
"RTN","MAGGA03",122,0)
 S @MAGRESULTS@(0)="1^Ok"
"RTN","MAGGA03",123,0)
 Q
"RTN","MAGGA03",124,0)
 ;
"RTN","MAGGA03",125,0)
 ;+++++ APPENDS IMAGE COUNTS BY STATUS TO THE RESULT ARRAY
"RTN","MAGGA03",126,0)
 ;
"RTN","MAGGA03",127,0)
 ; MAGRESULTS    Name of the global node where the results
"RTN","MAGGA03",128,0)
 ;               are returned to.
"RTN","MAGGA03",129,0)
 ;
"RTN","MAGGA03",130,0)
 ; Input Variables
"RTN","MAGGA03",131,0)
 ; ===============
"RTN","MAGGA03",132,0)
 ;   ^TMP("MAGGA03A",$J,"S",...)
"RTN","MAGGA03",133,0)
 ;
"RTN","MAGGA03",134,0)
 ; Return Values
"RTN","MAGGA03",135,0)
 ; =============
"RTN","MAGGA03",136,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGA03",137,0)
 ;            0  Success
"RTN","MAGGA03",138,0)
 ;
"RTN","MAGGA03",139,0)
SECTIONS(MAGRESULTS) ;
"RTN","MAGGA03",140,0)
 N BASE,CNT,I,SCNT,STC,TMP,SVPCT
"RTN","MAGGA03",141,0)
 ;--- Reserve the spot for the section header
"RTN","MAGGA03",142,0)
 S (BASE,CNT)=$O(@MAGRESULTS@(""),-1)+1,SCNT=0
"RTN","MAGGA03",143,0)
 ;--- Store counts for each status and calculate the totals
"RTN","MAGGA03",144,0)
 S STC=""
"RTN","MAGGA03",145,0)
 F  S STC=$O(^TMP("MAGGA03A",$J,"S",STC))  Q:STC=""  D
"RTN","MAGGA03",146,0)
 . S SCNT=SCNT+1,TMP=^TMP("MAGGA03A",$J,"S",STC)
"RTN","MAGGA03",147,0)
 . S CNT=CNT+1,@MAGRESULTS@(CNT)="S^"_SCNT_U_U_$$STATUS(STC)_U_TMP
"RTN","MAGGA03",148,0)
 . F I=1,2  S SCNT(I)=$G(SCNT(I))+$P(TMP,U,I)
"RTN","MAGGA03",149,0)
 . Q
"RTN","MAGGA03",150,0)
 ;--- Store the header of the "S"-section
"RTN","MAGGA03",151,0)
 S TMP="S^^"_SCNT_"^^Totals"
"RTN","MAGGA03",152,0)
 S SVPCT=$S($G(SCNT(1)):$J($G(^TMP("MAGGA03A",$J,"S",2))/SCNT(1)*100,0,2),1:"") ; 2 - QA Reviewed
"RTN","MAGGA03",153,0)
 S @MAGRESULTS@(BASE)=TMP_U_$G(SCNT(1))_U_$G(SCNT(2))_U_SVPCT
"RTN","MAGGA03",154,0)
 Q 0
"RTN","MAGGA03",155,0)
 ;
"RTN","MAGGA03",156,0)
 ;+++++ APPENDS IMAGE COUNTS BY USERS AND STATUS TO THE RESULT ARRAY
"RTN","MAGGA03",157,0)
 ;
"RTN","MAGGA03",158,0)
 ; MAGRESULTS    Name of the global node where the results
"RTN","MAGGA03",159,0)
 ;               are returned to.
"RTN","MAGGA03",160,0)
 ;
"RTN","MAGGA03",161,0)
 ; Input Variables
"RTN","MAGGA03",162,0)
 ; ===============
"RTN","MAGGA03",163,0)
 ;   ^TMP("MAGGA03A",$J,"U",...)
"RTN","MAGGA03",164,0)
 ;
"RTN","MAGGA03",165,0)
 ; Return Values
"RTN","MAGGA03",166,0)
 ; =============
"RTN","MAGGA03",167,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGA03",168,0)
 ;            0  Success
"RTN","MAGGA03",169,0)
 ;
"RTN","MAGGA03",170,0)
SECTIONU(MAGRESULTS) ;
"RTN","MAGGA03",171,0)
 N BASE,CNT,I,IEN,NAME,STC,TMP,UCNT,UPTR,USCNT,UVPCT,UVCNT,NAMESRT
"RTN","MAGGA03",172,0)
 ;=== Reserve the spot for the section header
"RTN","MAGGA03",173,0)
 S (BASE,CNT)=$O(@MAGRESULTS@(""),-1)+1,UCNT=0
"RTN","MAGGA03",174,0)
 ;=== Store counts for each user and calculate the totals
"RTN","MAGGA03",175,0)
 K ^TMP("MAGGA03A.NAME",$J)
"RTN","MAGGA03",176,0)
 S IEN=""
"RTN","MAGGA03",177,0)
 F  S IEN=$O(^TMP("MAGGA03A",$J,"U",IEN))  Q:IEN=""  D
"RTN","MAGGA03",178,0)
 . ;--- Get the user's name
"RTN","MAGGA03",179,0)
 . S NAME=""
"RTN","MAGGA03",180,0)
 . I IEN>0  D
"RTN","MAGGA03",181,0)
 . . S NAME=$$NAME^XUSER(IEN,"F")
"RTN","MAGGA03",182,0)
 . . S:NAME="" NAME="Invalid User IEN: "_IEN
"RTN","MAGGA03",183,0)
 . . Q
"RTN","MAGGA03",184,0)
 . S NAMESRT=NAME_"~"_IEN
"RTN","MAGGA03",185,0)
 . S ^TMP("MAGGA03A.NAME",$J,NAMESRT)=IEN
"RTN","MAGGA03",186,0)
 . Q
"RTN","MAGGA03",187,0)
 S NAMESRT=""
"RTN","MAGGA03",188,0)
 S UVCNT=0
"RTN","MAGGA03",189,0)
 F  S NAMESRT=$O(^TMP("MAGGA03A.NAME",$J,NAMESRT))  Q:NAMESRT=""  D
"RTN","MAGGA03",190,0)
 . S NAME=$P(NAMESRT,"~")
"RTN","MAGGA03",191,0)
 . S IEN=^TMP("MAGGA03A.NAME",$J,NAMESRT)
"RTN","MAGGA03",192,0)
 . ;--- Reserve the spot for the the "U"-item
"RTN","MAGGA03",193,0)
 . S UCNT=UCNT+1,(CNT,UPTR)=CNT+1
"RTN","MAGGA03",194,0)
 . K USCNT  S USCNT=0
"RTN","MAGGA03",195,0)
 . ;--- Process the user's counts (by status)
"RTN","MAGGA03",196,0)
 . S STC=""
"RTN","MAGGA03",197,0)
 . F  S STC=$O(^TMP("MAGGA03A",$J,"U",IEN,STC))  Q:STC=""  D
"RTN","MAGGA03",198,0)
 . . S USCNT=USCNT+1,TMP=^TMP("MAGGA03A",$J,"U",IEN,STC)
"RTN","MAGGA03",199,0)
 . . S CNT=CNT+1,@MAGRESULTS@(CNT)="US^"_USCNT_U_U_$$STATUS(STC)_U_TMP
"RTN","MAGGA03",200,0)
 . . F I=1,2  S USCNT(I)=$G(USCNT(I))+$P(TMP,U,I)
"RTN","MAGGA03",201,0)
 . . Q
"RTN","MAGGA03",202,0)
 . ;--- Calculate verification percentage
"RTN","MAGGA03",203,0)
 . I $G(USCNT(1))>0  D
"RTN","MAGGA03",204,0)
 . . S TMP=+$G(^TMP("MAGGA03A",$J,"U",IEN,2))
"RTN","MAGGA03",205,0)
 . . S UVPCT=+$J(TMP/USCNT(1)*100,0,2)
"RTN","MAGGA03",206,0)
 . . S UVCNT=UVCNT+TMP
"RTN","MAGGA03",207,0)
 . . Q
"RTN","MAGGA03",208,0)
 . E  S UVPCT=""
"RTN","MAGGA03",209,0)
 . ;
"RTN","MAGGA03",210,0)
 . ;--- Store the "U"-item
"RTN","MAGGA03",211,0)
 . S TMP="U^"_UCNT_U_USCNT_U_$S(IEN>0:IEN,1:"")_U_NAME
"RTN","MAGGA03",212,0)
 . S @MAGRESULTS@(UPTR)=TMP_U_$G(USCNT(1))_U_$G(USCNT(2))_U_UVPCT
"RTN","MAGGA03",213,0)
 . F I=1,2  S UCNT(I)=$G(UCNT(I))+$G(USCNT(I))
"RTN","MAGGA03",214,0)
 . Q
"RTN","MAGGA03",215,0)
 ;=== Store the header of the "U"-section
"RTN","MAGGA03",216,0)
 S TMP="U^^"_UCNT_"^^Totals"
"RTN","MAGGA03",217,0)
 S @MAGRESULTS@(BASE)=TMP_U_$G(UCNT(1))_U_$G(UCNT(2))_U_$S($G(UCNT(1)):$J(UVCNT/UCNT(1)*100,0,2),1:"")
"RTN","MAGGA03",218,0)
 K ^TMP("MAGGA03A.NAME",$J)
"RTN","MAGGA03",219,0)
 Q 0
"RTN","MAGGA03",220,0)
 ;
"RTN","MAGGA03",221,0)
 ;+++++ RETURNS THE STATUS CODE AND DESCRIPTION
"RTN","MAGGA03",222,0)
 ;
"RTN","MAGGA03",223,0)
 ; STC           Image status code
"RTN","MAGGA03",224,0)
 ;
"RTN","MAGGA03",225,0)
 ; Input Variables
"RTN","MAGGA03",226,0)
 ; ===============
"RTN","MAGGA03",227,0)
 ;   MAGSTCACHE
"RTN","MAGGA03",228,0)
 ;
"RTN","MAGGA03",229,0)
 ; Output Variables
"RTN","MAGGA03",230,0)
 ; ================
"RTN","MAGGA03",231,0)
 ;   MAGSTCACHE
"RTN","MAGGA03",232,0)
 ;
"RTN","MAGGA03",233,0)
 ; Return Values
"RTN","MAGGA03",234,0)
 ; =============
"RTN","MAGGA03",235,0)
 ;               StatusCode^StatusDescription
"RTN","MAGGA03",236,0)
 ;
"RTN","MAGGA03",237,0)
STATUS(STC) ;
"RTN","MAGGA03",238,0)
 Q:STC'>0 U
"RTN","MAGGA03",239,0)
 S:'$D(MAGSTCACHE(STC)) MAGSTCACHE(STC)=STC_U_$$IMGSTDSC^MAGGI11(STC)
"RTN","MAGGA03",240,0)
 Q MAGSTCACHE(STC)
"RTN","MAGGA03A")
0^37^B24276061
"RTN","MAGGA03A",1,0)
MAGGA03A ;WOIFO/SG - CALLBACK FOR IMAGE QUERIES ; 3/9/09 12:50pm
"RTN","MAGGA03A",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGA03A",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGA03A",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA03A",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGA03A",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGA03A",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGA03A",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGA03A",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGA03A",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGA03A",11,0)
 ;; |                                                               |
"RTN","MAGGA03A",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGA03A",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGA03A",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGA03A",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGA03A",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGA03A",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA03A",18,0)
 ;;
"RTN","MAGGA03A",19,0)
 Q
"RTN","MAGGA03A",20,0)
 ;
"RTN","MAGGA03A",21,0)
 ;+++++ CALLBACK FUNCTION FOR IMAGE QUERIES
"RTN","MAGGA03A",22,0)
 ;
"RTN","MAGGA03A",23,0)
 ; IMGIEN        IEN of the image record (file #2005 or #2005.1)
"RTN","MAGGA03A",24,0)
 ;
"RTN","MAGGA03A",25,0)
 ; FLAGS         Flags that control the execution
"RTN","MAGGA03A",26,0)
 ;
"RTN","MAGGA03A",27,0)
 ; .DATA         Reference to a local array passed via the MAG8DATA
"RTN","MAGGA03A",28,0)
 ;               parameter of the $$QUERY^MAGGI13 function.
"RTN","MAGGA03A",29,0)
 ; DATA(
"RTN","MAGGA03A",30,0)
 ;   "FLAGS")    Original control flags passed into the
"RTN","MAGGA03A",31,0)
 ;               $$IMGQUERY^MAGGA03 function.
"RTN","MAGGA03A",32,0)
 ;
"RTN","MAGGA03A",33,0)
 ; Return Values
"RTN","MAGGA03A",34,0)
 ; =============
"RTN","MAGGA03A",35,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGA03A",36,0)
 ;            0  Continue
"RTN","MAGGA03A",37,0)
 ;           >0  Terminate the query
"RTN","MAGGA03A",38,0)
 ;
"RTN","MAGGA03A",39,0)
 ; This function accumulates the data in the ^TMP($J,"MAGGA03A")
"RTN","MAGGA03A",40,0)
 ; global node:
"RTN","MAGGA03A",41,0)
 ;
"RTN","MAGGA03A",42,0)
 ; ^TMP($J,"MAGGA03A",
"RTN","MAGGA03A",43,0)
 ;
"RTN","MAGGA03A",44,0)
 ;   "S",StatusCode)     Image counts
"RTN","MAGGA03A",45,0)
 ;                         ^01: Number of image entries
"RTN","MAGGA03A",46,0)
 ;                         ^02: Number of images/pages
"RTN","MAGGA03A",47,0)
 ;
"RTN","MAGGA03A",48,0)
 ;   "U",UserIEN,
"RTN","MAGGA03A",49,0)
 ;     StatusCode)       Image counts
"RTN","MAGGA03A",50,0)
 ;                         ^01: Number of image entries
"RTN","MAGGA03A",51,0)
 ;                         ^02: Number of images/pages
"RTN","MAGGA03A",52,0)
 ;
"RTN","MAGGA03A",53,0)
QRYCBK(IMGIEN,FLAGS,DATA) ;
"RTN","MAGGA03A",54,0)
 N FD,FE,GROUP,GRPCNTS,IMGNODE,IMGNP,RC,SKIP,TMP
"RTN","MAGGA03A",55,0)
 ;=== Skip "child" (RC>0) and invalid (RC<0) image entries
"RTN","MAGGA03A",56,0)
 S RC=$$GRPIEN^MAGGI12(IMGIEN)  Q:RC 0
"RTN","MAGGA03A",57,0)
 ;
"RTN","MAGGA03A",58,0)
 ;=== Initialize variables
"RTN","MAGGA03A",59,0)
 S FD=(FLAGS["D"),FE=(FLAGS["E")
"RTN","MAGGA03A",60,0)
 S GROUP=$$ISGRP^MAGGI11(IMGIEN)
"RTN","MAGGA03A",61,0)
 ;
"RTN","MAGGA03A",62,0)
 ;=== Perform additional screening according to the image counts
"RTN","MAGGA03A",63,0)
 S TMP=$$TRFLAGS^MAGUTL05(DATA("FLAGS"),"SU")
"RTN","MAGGA03A",64,0)
 S GRPCNTS=$$GRPCT^MAGGI14(IMGIEN,"P"_TMP,.GRPCNTS)
"RTN","MAGGA03A",65,0)
 S SKIP=0  D  Q:SKIP 0
"RTN","MAGGA03A",66,0)
 . ;--- Check if the image entry references "child" images of
"RTN","MAGGA03A",67,0)
 . ;    requested kind(s). Also, safeguard against a wrong object
"RTN","MAGGA03A",68,0)
 . ;--- type in the group header.
"RTN","MAGGA03A",69,0)
 . I $P(GRPCNTS,U,1)>0  S GROUP=1  Q:FE  ; Existing "child" entries
"RTN","MAGGA03A",70,0)
 . I $P(GRPCNTS,U,2)>0  S GROUP=1  Q:FD  ; Deleted "child" entries
"RTN","MAGGA03A",71,0)
 . ;--- Skip group headers that do not reference
"RTN","MAGGA03A",72,0)
 . ;--- any "child" images of requested kind(s)
"RTN","MAGGA03A",73,0)
 . I GROUP  S SKIP=1  Q
"RTN","MAGGA03A",74,0)
 . ;--- If existing images are not requested, then
"RTN","MAGGA03A",75,0)
 . ;--- skip existing standalone image entries
"RTN","MAGGA03A",76,0)
 . I 'FE,'$$ISDEL^MAGGI11(IMGIEN)  S SKIP=1  Q
"RTN","MAGGA03A",77,0)
 . ;--- Get the number of pages from the standalone image entry
"RTN","MAGGA03A",78,0)
 . S IMGNODE=$$NODE^MAGGI11(IMGIEN)  Q:IMGNODE=""
"RTN","MAGGA03A",79,0)
 . S IMGNP=+$P($G(@IMGNODE@(100)),U,10)
"RTN","MAGGA03A",80,0)
 . Q
"RTN","MAGGA03A",81,0)
 ;
"RTN","MAGGA03A",82,0)
 ;=== Image counts (grouped by status)
"RTN","MAGGA03A",83,0)
 I DATA("FLAGS")["S"  D
"RTN","MAGGA03A",84,0)
 . N OLDCNT,STC
"RTN","MAGGA03A",85,0)
 . ;--- Standalone image entry
"RTN","MAGGA03A",86,0)
 . I 'GROUP  D  Q
"RTN","MAGGA03A",87,0)
 . . S STC=+$$IMGST^MAGGI11(IMGIEN)
"RTN","MAGGA03A",88,0)
 . . S TMP=$G(^TMP("MAGGA03A",$J,"S",STC))
"RTN","MAGGA03A",89,0)
 . . S $P(TMP,U,1)=$P(TMP,U,1)+1
"RTN","MAGGA03A",90,0)
 . . S $P(TMP,U,2)=$P(TMP,U,2)+$S($G(IMGNP)>0:IMGNP,1:1)
"RTN","MAGGA03A",91,0)
 . . S ^TMP("MAGGA03A",$J,"S",STC)=TMP
"RTN","MAGGA03A",92,0)
 . . Q
"RTN","MAGGA03A",93,0)
 . ;--- Image group
"RTN","MAGGA03A",94,0)
 . S STC=""
"RTN","MAGGA03A",95,0)
 . F  S STC=$O(GRPCNTS("S",STC))  Q:STC=""  D
"RTN","MAGGA03A",96,0)
 . . S TMP=$G(^TMP("MAGGA03A",$J,"S",STC)),OLDCNT=+TMP
"RTN","MAGGA03A",97,0)
 . . D:FE
"RTN","MAGGA03A",98,0)
 . . . S $P(TMP,U,1)=$P(TMP,U,1)+$P(GRPCNTS("S",STC),U,1)
"RTN","MAGGA03A",99,0)
 . . . S $P(TMP,U,2)=$P(TMP,U,2)+$P(GRPCNTS("S",STC),U,3)
"RTN","MAGGA03A",100,0)
 . . . Q
"RTN","MAGGA03A",101,0)
 . . D:FD
"RTN","MAGGA03A",102,0)
 . . . S $P(TMP,U,1)=$P(TMP,U,1)+$P(GRPCNTS("S",STC),U,2)
"RTN","MAGGA03A",103,0)
 . . . S $P(TMP,U,2)=$P(TMP,U,2)+$P(GRPCNTS("S",STC),U,4)
"RTN","MAGGA03A",104,0)
 . . . Q
"RTN","MAGGA03A",105,0)
 . . S:+TMP'=OLDCNT ^TMP("MAGGA03A",$J,"S",STC)=TMP
"RTN","MAGGA03A",106,0)
 . . Q
"RTN","MAGGA03A",107,0)
 . Q
"RTN","MAGGA03A",108,0)
 ;
"RTN","MAGGA03A",109,0)
 ;=== Image capture users
"RTN","MAGGA03A",110,0)
 I DATA("FLAGS")["U"  D
"RTN","MAGGA03A",111,0)
 . N CNT,STC,USRIEN
"RTN","MAGGA03A",112,0)
 . ;--- Standalone image entry
"RTN","MAGGA03A",113,0)
 . I 'GROUP  D  Q
"RTN","MAGGA03A",114,0)
 . . S USRIEN=$S($G(IMGNODE)'="":+$P($G(@IMGNODE@(2)),U,2),1:0)
"RTN","MAGGA03A",115,0)
 . . S STC=+$$IMGST^MAGGI11(IMGIEN)
"RTN","MAGGA03A",116,0)
 . . S TMP=$G(^TMP("MAGGA03A",$J,"U",USRIEN,STC))
"RTN","MAGGA03A",117,0)
 . . S $P(TMP,U,1)=$P(TMP,U,1)+1
"RTN","MAGGA03A",118,0)
 . . S $P(TMP,U,2)=$P(TMP,U,2)+$S($G(IMGNP)>0:IMGNP,1:1)
"RTN","MAGGA03A",119,0)
 . . S ^TMP("MAGGA03A",$J,"U",USRIEN,STC)=TMP
"RTN","MAGGA03A",120,0)
 . . Q
"RTN","MAGGA03A",121,0)
 . ;--- Image group
"RTN","MAGGA03A",122,0)
 . S USRIEN=""
"RTN","MAGGA03A",123,0)
 . F  S USRIEN=$O(GRPCNTS("U",USRIEN))  Q:USRIEN=""  D
"RTN","MAGGA03A",124,0)
 . . S STC=""
"RTN","MAGGA03A",125,0)
 . . F  S STC=$O(GRPCNTS("U",USRIEN,STC))  Q:STC=""  D
"RTN","MAGGA03A",126,0)
 . . . S TMP=$G(^TMP("MAGGA03A",$J,"U",USRIEN,STC)),OLDCNT=+TMP
"RTN","MAGGA03A",127,0)
 . . . D:FE
"RTN","MAGGA03A",128,0)
 . . . . S $P(TMP,U,1)=$P(TMP,U,1)+$P(GRPCNTS("U",USRIEN,STC),U,1)
"RTN","MAGGA03A",129,0)
 . . . . S $P(TMP,U,2)=$P(TMP,U,2)+$P(GRPCNTS("U",USRIEN,STC),U,3)
"RTN","MAGGA03A",130,0)
 . . . . Q
"RTN","MAGGA03A",131,0)
 . . . D:FD
"RTN","MAGGA03A",132,0)
 . . . . S $P(TMP,U,1)=$P(TMP,U,1)+$P(GRPCNTS("U",USRIEN,STC),U,2)
"RTN","MAGGA03A",133,0)
 . . . . S $P(TMP,U,2)=$P(TMP,U,2)+$P(GRPCNTS("U",USRIEN,STC),U,4)
"RTN","MAGGA03A",134,0)
 . . . . Q
"RTN","MAGGA03A",135,0)
 . . . S:+TMP'=OLDCNT ^TMP("MAGGA03A",$J,"U",USRIEN,STC)=TMP
"RTN","MAGGA03A",136,0)
 . . . Q
"RTN","MAGGA03A",137,0)
 . . Q
"RTN","MAGGA03A",138,0)
 . Q
"RTN","MAGGA03A",139,0)
 ;
"RTN","MAGGA03A",140,0)
 ;===
"RTN","MAGGA03A",141,0)
 Q 0
"RTN","MAGGA03U")
0^61^B15820919
"RTN","MAGGA03U",1,0)
MAGGA03U ;WOIFO/GEK - USERS CAPTURED IMAGES IN DATE RANGE ; 
"RTN","MAGGA03U",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGA03U",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGA03U",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA03U",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGA03U",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGA03U",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGA03U",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGA03U",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGA03U",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGA03U",11,0)
 ;; |                                                               |
"RTN","MAGGA03U",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGA03U",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGA03U",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGA03U",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGA03U",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGA03U",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA03U",18,0)
 ;;
"RTN","MAGGA03U",19,0)
 Q
"RTN","MAGGA03U",20,0)
 ;***** RETURNS USERS THAT HAVE CAPTURED IMAGES IN THE DATE RANGE
"RTN","MAGGA03U",21,0)
 ; RPC: MAGG CAPTURE USERS
"RTN","MAGGA03U",22,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGGA03U",23,0)
 ;               are returned to.
"RTN","MAGGA03U",24,0)
 ;
"RTN","MAGGA03U",25,0)
 ; FLAGS         Controls which users are returned.
"RTN","MAGGA03U",26,0)
 ;               FLAGS refers to field #8.1 CAPTURE APPLICATION 
"RTN","MAGGA03U",27,0)
 ;               That field tells which device captured this image.
"RTN","MAGGA03U",28,0)
 ;               C =  Capture Application 
"RTN","MAGGA03U",29,0)
 ;                    Images that were captured by VI Capture Client
"RTN","MAGGA03U",30,0)
 ;               I =  Import API
"RTN","MAGGA03U",31,0)
 ;                    Images that were captured by VI Import API
"RTN","MAGGA03U",32,0)
 ;               If Flags is 'null' it defaults to 'CI'
"RTN","MAGGA03U",33,0)
 ;               So, it returns Users that have capture C and/or
"RTN","MAGGA03U",34,0)
 ;               I images, in the date range.
"RTN","MAGGA03U",35,0)
 ;               
"RTN","MAGGA03U",36,0)
 ; [FROMDATE]    Date range for image selection. Dates can be in
"RTN","MAGGA03U",37,0)
 ; [TODATE]      internal or external FileMan format. If a date
"RTN","MAGGA03U",38,0)
 ;               parameter is not defined or empty, then an error
"RTN","MAGGA03U",39,0)
 ;               is returned.
"RTN","MAGGA03U",40,0)
 ;
"RTN","MAGGA03U",41,0)
 ;               Time parts of parameter values are ignored and both
"RTN","MAGGA03U",42,0)
 ;               ends of the date range are included in the search.
"RTN","MAGGA03U",43,0)
 ;               For example, in order to search images for May 21,
"RTN","MAGGA03U",44,0)
 ;               2008, the internal value of both parameters should
"RTN","MAGGA03U",45,0)
 ;               be 3080521.
"RTN","MAGGA03U",46,0)
 ;
"RTN","MAGGA03U",47,0)
 ;               If the FROMDATE is after the TODATE, then values of
"RTN","MAGGA03U",48,0)
 ;               the parameters are swapped.
"RTN","MAGGA03U",49,0)
 ; 
"RTN","MAGGA03U",50,0)
 ; Return Values
"RTN","MAGGA03U",51,0)
 ; =============
"RTN","MAGGA03U",52,0)
 ;     
"RTN","MAGGA03U",53,0)
 ; MAGRY(0)     is in the format:   0^<error message> if error during execution
"RTN","MAGGA03U",54,0)
 ;                            or    1^<success message>  
"RTN","MAGGA03U",55,0)
 ; MAGRY(1..n) are in the format:   Last First Middle ^ DUZ
"RTN","MAGGA03U",56,0)
 ; Notes
"RTN","MAGGA03U",57,0)
 ; =====
"RTN","MAGGA03U",58,0)
 ;
"RTN","MAGGA03U",59,0)
 ; Temporary global nodes ^TMP("MAGGA03U",$J) and ^TMP($J,"MAGUSERS" 
"RTN","MAGGA03U",60,0)
 ;   and ^TMP($J,"MAGDUZ"  are used by this procedure.
"RTN","MAGGA03U",61,0)
 ;
"RTN","MAGGA03U",62,0)
USERS(MAGRY,FROMDATE,TODATE,FLAGS) ;  [RPC MAGG CAPTURE USERS]
"RTN","MAGGA03U",63,0)
 N I,EDT,N0,N2,CT,TMP,MERR,IDUZ,INM,MSG,X,Y
"RTN","MAGGA03U",64,0)
 S MAGRY=$NA(^TMP("MAGGA03U",$J))
"RTN","MAGGA03U",65,0)
 K @MAGRY,^TMP($J,"MAGUSERS"),^TMP($J,"MAGDUZ")
"RTN","MAGGA03U",66,0)
 ;
"RTN","MAGGA03U",67,0)
 ; Validate parameters.
"RTN","MAGGA03U",68,0)
 S MERR=0
"RTN","MAGGA03U",69,0)
 D
"RTN","MAGGA03U",70,0)
 . S FLAGS=$G(FLAGS) I FLAGS="" S FLAGS="CI"
"RTN","MAGGA03U",71,0)
 . I $TR(FLAGS,"CI")'="" S MERR=1,MSG="Invalid Flags: '"_FLAGS_"'.  Only 'C' and/or 'I'" Q
"RTN","MAGGA03U",72,0)
 . S X=$G(FROMDATE) D ^%DT I Y=-1 S MERR=1,MSG="Invalid date "_FROMDATE Q
"RTN","MAGGA03U",73,0)
 . S FROMDATE=Y
"RTN","MAGGA03U",74,0)
 . S X=$G(TODATE) D ^%DT I Y=-1 S MERR=1,MSG="Invalid date "_TODATE Q
"RTN","MAGGA03U",75,0)
 . S TODATE=Y
"RTN","MAGGA03U",76,0)
 I MERR S @MAGRY@(0)="0^"_MSG Q
"RTN","MAGGA03U",77,0)
 ;
"RTN","MAGGA03U",78,0)
 ; Swap the dates if necessary
"RTN","MAGGA03U",79,0)
 K TMP I FROMDATE>TODATE S TMP=FROMDATE,FROMDATE=TODATE,TODATE=TMP
"RTN","MAGGA03U",80,0)
 ;
"RTN","MAGGA03U",81,0)
 ;  Loop through AD Cross ref and find users that have captured images.
"RTN","MAGGA03U",82,0)
 ;  We don't count children of Groups, just the Group.
"RTN","MAGGA03U",83,0)
 S EDT=$$FMADD^XLFDT(TODATE,1)
"RTN","MAGGA03U",84,0)
 F  S EDT=$O(^MAG(2005,"AD",EDT),-1) Q:EDT<FROMDATE  D
"RTN","MAGGA03U",85,0)
 . S I="" F  S I=$O(^MAG(2005,"AD",EDT,I)) Q:'I  D
"RTN","MAGGA03U",86,0)
 . . S N0=^MAG(2005,I,0)
"RTN","MAGGA03U",87,0)
 . . Q:$P(N0,"^",10)  ; Quit if we have a Pointer to Group Parent.
"RTN","MAGGA03U",88,0)
 . . S N2=^MAG(2005,I,2)
"RTN","MAGGA03U",89,0)
 . . Q:FLAGS'[$P(N2,"^",12)  ; Quit if not captured by App in flags
"RTN","MAGGA03U",90,0)
 . . ; for speed, get all DUZ first, then convert to names.
"RTN","MAGGA03U",91,0)
 . . S IDUZ=$P(N2,"^",2) Q:'IDUZ  Q:$D(^TMP($J,"MAGDUZ",IDUZ))
"RTN","MAGGA03U",92,0)
 . . S ^TMP($J,"MAGDUZ",IDUZ)=""
"RTN","MAGGA03U",93,0)
 . . Q
"RTN","MAGGA03U",94,0)
 . Q
"RTN","MAGGA03U",95,0)
 ;  convert DUZ to Names using Kernel API
"RTN","MAGGA03U",96,0)
 I '$D(^TMP($J,"MAGDUZ")) S @MAGRY@(0)="0^No users found." Q
"RTN","MAGGA03U",97,0)
 S IDUZ="" F  S IDUZ=$O(^TMP($J,"MAGDUZ",IDUZ)) Q:'IDUZ  D
"RTN","MAGGA03U",98,0)
 . S INM=$$GETNAME(IDUZ)
"RTN","MAGGA03U",99,0)
 . S ^TMP($J,"MAGUSERS",INM,IDUZ)=""
"RTN","MAGGA03U",100,0)
 . Q
"RTN","MAGGA03U",101,0)
 ;
"RTN","MAGGA03U",102,0)
 ; Result array from Names and DUZs
"RTN","MAGGA03U",103,0)
 S CT=0,(INM,IDUZ)=""
"RTN","MAGGA03U",104,0)
 F  S INM=$O(^TMP($J,"MAGUSERS",INM)) Q:INM=""  D
"RTN","MAGGA03U",105,0)
 . F  S IDUZ=$O(^TMP($J,"MAGUSERS",INM,IDUZ)) Q:IDUZ=""  D
"RTN","MAGGA03U",106,0)
 . . S CT=CT+1,@MAGRY@(CT)=INM_"^"_IDUZ
"RTN","MAGGA03U",107,0)
 S @MAGRY@(0)=1_"^Success: "_CT_" users found"
"RTN","MAGGA03U",108,0)
 K ^TMP($J,"MAGUSERS"),^TMP($J,"MAGDUZ")
"RTN","MAGGA03U",109,0)
 Q
"RTN","MAGGA03U",110,0)
 ;
"RTN","MAGGA03U",111,0)
 ;***** RETURN NAME FROM NAME COMPONENTS
"RTN","MAGGA03U",112,0)
 ;  IDUZ is the DUZ of the User.
"RTN","MAGGA03U",113,0)
 ;  Uses supported API #3065 to call $$NAMEFMT^XLFNAME()
"RTN","MAGGA03U",114,0)
 ; ===== Return values
"RTN","MAGGA03U",115,0)
 ;   Returns the name in mixed case "Last,First Middle" format
"RTN","MAGGA03U",116,0)
GETNAME(IDUZ) ;
"RTN","MAGGA03U",117,0)
 N MAGN,MN
"RTN","MAGGA03U",118,0)
 ; set the needed parameters for the API Call.
"RTN","MAGGA03U",119,0)
 S MAGN("FILE")=200
"RTN","MAGGA03U",120,0)
 S MAGN("IENS")=IDUZ_","
"RTN","MAGGA03U",121,0)
 S MAGN("FIELD")=".01"
"RTN","MAGGA03U",122,0)
 ; make the call
"RTN","MAGGA03U",123,0)
 S MN=$$NAMEFMT^XLFNAME(.MAGN,"F","FMC")
"RTN","MAGGA03U",124,0)
 ; handle problems with call
"RTN","MAGGA03U",125,0)
 I MN="" S MN="Undefined User "_IDUZ
"RTN","MAGGA03U",126,0)
 Q MN
"RTN","MAGGA04")
0^57^B10448835
"RTN","MAGGA04",1,0)
MAGGA04 ;WOIFO/SG - REMOTE PROCEDURES: IMAGE LOCK/UNLOCK ; 3/9/09 12:51pm
"RTN","MAGGA04",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGA04",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGA04",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA04",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGA04",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGA04",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGA04",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGA04",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGA04",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGA04",11,0)
 ;; |                                                               |
"RTN","MAGGA04",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGA04",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGA04",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGA04",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGA04",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGA04",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGA04",18,0)
 ;;
"RTN","MAGGA04",19,0)
 Q
"RTN","MAGGA04",20,0)
 ;
"RTN","MAGGA04",21,0)
 ;***** LOCKS THE IMAGE(S)
"RTN","MAGGA04",22,0)
 ; RPC: MAGG IMAGE LOCK
"RTN","MAGGA04",23,0)
 ;
"RTN","MAGGA04",24,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","MAGGA04",25,0)
 ;               are returned to.
"RTN","MAGGA04",26,0)
 ;
"RTN","MAGGA04",27,0)
 ; [FLAGS]       reserved
"RTN","MAGGA04",28,0)
 ;
"RTN","MAGGA04",29,0)
 ; .IMGLST(      Reference to the List of images to lock
"RTN","MAGGA04",30,0)
 ;
"RTN","MAGGA04",31,0)
 ;   i)          Image reference
"RTN","MAGGA04",32,0)
 ;                 ^01: Image IEN
"RTN","MAGGA04",33,0)
 ;
"RTN","MAGGA04",34,0)
 ; Return Values
"RTN","MAGGA04",35,0)
 ; =============
"RTN","MAGGA04",36,0)
 ;     
"RTN","MAGGA04",37,0)
 ; Zero value of the 1st '^'-piece of the RESULTS(0) indicates an
"RTN","MAGGA04",38,0)
 ; error during execution of the procedure. In this case, the array
"RTN","MAGGA04",39,0)
 ; is formatted as described in the comments to the RPCERRS^MAGUERR1.
"RTN","MAGGA04",40,0)
 ;
"RTN","MAGGA04",41,0)
 ; If the error descriptor in the RESULTS(1) has the error code -21,
"RTN","MAGGA04",42,0)
 ; this means that the RPC could not lock the image(s). A message
"RTN","MAGGA04",43,0)
 ; that explains who/what locked the image(s) and when this happened
"RTN","MAGGA04",44,0)
 ; is attached to this error as additional information.
"RTN","MAGGA04",45,0)
 ;
"RTN","MAGGA04",46,0)
 ; In case of successful lock, "1^Ok" is returned in the RESULTS(0).
"RTN","MAGGA04",47,0)
 ;
"RTN","MAGGA04",48,0)
 ; Notes
"RTN","MAGGA04",49,0)
 ; =====
"RTN","MAGGA04",50,0)
 ;
"RTN","MAGGA04",51,0)
 ; See description of the MAGG IMAGE LOCK remote procedure for more
"RTN","MAGGA04",52,0)
 ; details.
"RTN","MAGGA04",53,0)
 ;
"RTN","MAGGA04",54,0)
LOCKIMG(RESULTS,FLAGS,IMGLST) ;
"RTN","MAGGA04",55,0)
 N LOCKS,RC
"RTN","MAGGA04",56,0)
 K RESULTS  S RESULTS(0)=0
"RTN","MAGGA04",57,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGGA04",58,0)
 ;--- Prepare the list of objects to be locked
"RTN","MAGGA04",59,0)
 S RC=$$LOCKLST(.IMGLST,.LOCKS)
"RTN","MAGGA04",60,0)
 I RC<0  D RPCERRS^MAGUERR1(.RESULTS,RC)  Q
"RTN","MAGGA04",61,0)
 ;--- Lock the objects
"RTN","MAGGA04",62,0)
 S RC=$$LOCKFM^MAGUTL07(.LOCKS)
"RTN","MAGGA04",63,0)
 I RC<0  D RPCERRS^MAGUERR1(.RESULTS,RC)  Q
"RTN","MAGGA04",64,0)
 I RC>0  D  Q
"RTN","MAGGA04",65,0)
 . S RC=$$ERROR^MAGUERR(-21,$$TEXT^MAGUTL07(RC),"image")
"RTN","MAGGA04",66,0)
 . D RPCERRS^MAGUERR1(.RESULTS,RC)
"RTN","MAGGA04",67,0)
 . Q
"RTN","MAGGA04",68,0)
 ;--- Success
"RTN","MAGGA04",69,0)
 S RESULTS(0)="1^Ok"
"RTN","MAGGA04",70,0)
 Q
"RTN","MAGGA04",71,0)
 ;
"RTN","MAGGA04",72,0)
 ;+++++ CONVERTS THE LIST OF IMAGES TO THE LOCK/UNLOCK PARAMETERS
"RTN","MAGGA04",73,0)
LOCKLST(IMGLST,LOCKS) ;
"RTN","MAGGA04",74,0)
 N I,IMGFILE,IMGIEN,TMP,RC
"RTN","MAGGA04",75,0)
 S RC=0
"RTN","MAGGA04",76,0)
 ;---
"RTN","MAGGA04",77,0)
 S I=""
"RTN","MAGGA04",78,0)
 F  S I=$O(IMGLST(I))  Q:I=""  D  Q:RC<0
"RTN","MAGGA04",79,0)
 . S TMP=$TR(IMGLST(I)," ")
"RTN","MAGGA04",80,0)
 . S IMGIEN=$P(TMP,U)
"RTN","MAGGA04",81,0)
 . I IMGIEN'>0  S RC=$$IPVE^MAGUERR($NA(IMGLST(I)))  Q
"RTN","MAGGA04",82,0)
 . ;--- Get the number of the file that stores the image
"RTN","MAGGA04",83,0)
 . S IMGFILE=$$FILE^MAGGI11(IMGIEN,.TMP)
"RTN","MAGGA04",84,0)
 . I IMGFILE'>0  S RC=TMP  D STORE^MAGUERR(RC)  Q
"RTN","MAGGA04",85,0)
 . ;--- Store the reference
"RTN","MAGGA04",86,0)
 . S LOCKS(IMGFILE,IMGIEN_",")=""
"RTN","MAGGA04",87,0)
 . Q
"RTN","MAGGA04",88,0)
 ;---
"RTN","MAGGA04",89,0)
 Q $S(RC<0:RC,1:0)
"RTN","MAGGA04",90,0)
 ;
"RTN","MAGGA04",91,0)
 ;***** UNLOCKS THE IMAGE(S)
"RTN","MAGGA04",92,0)
 ; RPC: MAGG IMAGE UNLOCK
"RTN","MAGGA04",93,0)
 ;
"RTN","MAGGA04",94,0)
 ; .RESULTS      Reference to a local variable where the results
"RTN","MAGGA04",95,0)
 ;               are returned to.
"RTN","MAGGA04",96,0)
 ;
"RTN","MAGGA04",97,0)
 ; FLAGS         reserved
"RTN","MAGGA04",98,0)
 ;
"RTN","MAGGA04",99,0)
 ; .IMGLST(      Reference to the list of images to unlock
"RTN","MAGGA04",100,0)
 ;
"RTN","MAGGA04",101,0)
 ;   i)          Image reference
"RTN","MAGGA04",102,0)
 ;                 ^01: Image IEN
"RTN","MAGGA04",103,0)
 ;
"RTN","MAGGA04",104,0)
 ; Return Values
"RTN","MAGGA04",105,0)
 ; =============
"RTN","MAGGA04",106,0)
 ;     
"RTN","MAGGA04",107,0)
 ; Zero value of the 1st '^'-piece of the RESULTS(0) indicates an
"RTN","MAGGA04",108,0)
 ; error during execution of the procedure. In this case, the array
"RTN","MAGGA04",109,0)
 ; is formatted as described in the comments to the RPCERRS^MAGUERR1.
"RTN","MAGGA04",110,0)
 ;
"RTN","MAGGA04",111,0)
 ; Otherwise, "1^Ok" is returned in the RESULTS(0).
"RTN","MAGGA04",112,0)
 ;
"RTN","MAGGA04",113,0)
UNLOCKIM(RESULTS,FLAGS,IMGLST) ;
"RTN","MAGGA04",114,0)
 N LOCKS,RC
"RTN","MAGGA04",115,0)
 K RESULTS  S RESULTS(0)=0
"RTN","MAGGA04",116,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGGA04",117,0)
 ;--- Prepare the list of objects to be unlocked
"RTN","MAGGA04",118,0)
 S RC=$$LOCKLST(.IMGLST,.LOCKS)
"RTN","MAGGA04",119,0)
 I RC<0  D RPCERRS^MAGUERR1(.RESULTS,RC)  Q
"RTN","MAGGA04",120,0)
 ;--- Unlock the objects
"RTN","MAGGA04",121,0)
 S RC=$$UNLOCKFM^MAGUTL07(.LOCKS)
"RTN","MAGGA04",122,0)
 I RC<0  D RPCERRS^MAGUERR1(.RESULTS,RC)  Q
"RTN","MAGGA04",123,0)
 ;--- Success
"RTN","MAGGA04",124,0)
 S RESULTS(0)="1^Ok"
"RTN","MAGGA04",125,0)
 Q
"RTN","MAGGAII")
0^33^B118384476
"RTN","MAGGAII",1,0)
MAGGAII ;WOIFO/GEK/SG - RETURNS IMAGE INFO ; 2/20/09 11:37am
"RTN","MAGGAII",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGAII",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGAII",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGAII",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGAII",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGAII",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGAII",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGAII",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGAII",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGAII",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGAII",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGAII",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGAII",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGAII",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGAII",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGAII",17,0)
 ;;
"RTN","MAGGAII",18,0)
 Q
"RTN","MAGGAII",19,0)
 ;
"RTN","MAGGAII",20,0)
 ;+++++ PERFORMS SPECIAL CONVERSION OF THE DATE/TIME
"RTN","MAGGAII",21,0)
DTE(DTI) ;
"RTN","MAGGAII",22,0)
 Q $TR($$FMTE^XLFDT(DTI,"5Z"),"@"," ")
"RTN","MAGGAII",23,0)
 ;
"RTN","MAGGAII",24,0)
 ;+++++ RETURNS THE FULL NAME OF THE IMAGE FILE
"RTN","MAGGAII",25,0)
 ;
"RTN","MAGGAII",26,0)
 ; MAGXX         IEN of the image record in the file #2005
"RTN","MAGGAII",27,0)
 ;
"RTN","MAGGAII",28,0)
 ; FILETYPE      Type of the image: "ABSTRACT", "BIG", or "FULL"
"RTN","MAGGAII",29,0)
 ;
"RTN","MAGGAII",30,0)
 ; [.MAGTYPE]    Reference to a local variable where the location
"RTN","MAGGAII",31,0)
 ;               code is returned to:
"RTN","MAGGAII",32,0)
 ;                 A  Accessible
"RTN","MAGGAII",33,0)
 ;                 M  Magnetic
"RTN","MAGGAII",34,0)
 ;                 O  Offline
"RTN","MAGGAII",35,0)
 ;                 W  WORM
"RTN","MAGGAII",36,0)
 ;
"RTN","MAGGAII",37,0)
 ; [.MAGJBOL]    Reference to a local variable where the Jukebox
"RTN","MAGGAII",38,0)
 ;               offline message is returned to.
"RTN","MAGGAII",39,0)
 ; 
"RTN","MAGGAII",40,0)
 ; Return Values
"RTN","MAGGAII",41,0)
 ; =============
"RTN","MAGGAII",42,0)
 ;           <0  ErrorCode~ErrorMessage
"RTN","MAGGAII",43,0)
 ;           ""  Name is not available or an error
"RTN","MAGGAII",44,0)
 ;
"RTN","MAGGAII",45,0)
FILENAME(MAGXX,FILETYPE,MAGTYPE,MAGJBOL) ;
"RTN","MAGGAII",46,0)
 N MAGFILE1,MAGJBCP,MAGOFFLN,MAGPREF
"RTN","MAGGAII",47,0)
 S MAGPREF=""
"RTN","MAGGAII",48,0)
 ;--- Don't queue a copy from the JukeBox.
"RTN","MAGGAII",49,0)
 S MAGJBCP=0
"RTN","MAGGAII",50,0)
 ;--- The FINDFILE^MAGFILEB returns:
"RTN","MAGGAII",51,0)
 ;    MAGFILE1      File name (e.g. "LA100066.ABS")
"RTN","MAGGAII",52,0)
 ;                  if no Network Location pointer or INVALID Pointer
"RTN","MAGGAII",53,0)
 ;                  then MAGFILE1=-1~NO NETWORK LOCATION POINTER  
"RTN","MAGGAII",54,0)
 ;                  or -1~INVALID NETWORK LOCATION POINTER
"RTN","MAGGAII",55,0)
 ;    MAGFILE1(.01) Image description (e.g. "ONE,PATIENT   111223333")
"RTN","MAGGAII",56,0)
 ;    MAGJBOL       Description of the offline server
"RTN","MAGGAII",57,0)
 ;    MAGOFFLN      Non-zero if the jukebox is offline
"RTN","MAGGAII",58,0)
 ;    MAGPREF       Path (e.g. "C:\TEMP\LA\10\00\")
"RTN","MAGGAII",59,0)
 ;--- MAGTYPE       "MAG" or "WORM"
"RTN","MAGGAII",60,0)
 D FINDFILE^MAGFILEB
"RTN","MAGGAII",61,0)
 ;--- The MAGFILE1 may contain '^' in case of an error
"RTN","MAGGAII",62,0)
 S MAGFILE1=$TR(MAGFILE1,"^","~")
"RTN","MAGGAII",63,0)
 S:$D(MAGFILE1("ERROR")) MAGFILE1=MAGFILE1("ERROR")
"RTN","MAGGAII",64,0)
 S MAGTYPE=$S($G(MAGOFFLN):"O",FILETYPE="FULL":"A",1:$E(MAGTYPE,1))
"RTN","MAGGAII",65,0)
 ;--- The following line of code replicates the old functionality
"RTN","MAGGAII",66,0)
 Q:FILETYPE'="BIG" $G(MAGPREF)_MAGFILE1
"RTN","MAGGAII",67,0)
 ;--- Return the full name or an empty string in case of an error
"RTN","MAGGAII",68,0)
 Q $S($E(MAGFILE1,1,2)="-1":"",1:$G(MAGPREF)_MAGFILE1)
"RTN","MAGGAII",69,0)
 ; 
"RTN","MAGGAII",70,0)
 ;##### RETURNS THE IMAGE DESCRIPTOR
"RTN","MAGGAII",71,0)
 ;
"RTN","MAGGAII",72,0)
 ; MAGIEN        IEN of the image record in the file #2005 or
"RTN","MAGGAII",73,0)
 ;               in file #2005.1
"RTN","MAGGAII",74,0)
 ;
"RTN","MAGGAII",75,0)
 ; FLAGS         Flags that control the execution (can be combined):
"RTN","MAGGAII",76,0)
 ;
"RTN","MAGGAII",77,0)
 ;                 D  Consider only deleted "child" images
"RTN","MAGGAII",78,0)
 ;                 E  Consider only existing "child" images
"RTN","MAGGAII",79,0)
 ;
"RTN","MAGGAII",80,0)
 ;               If neither 'E' nor 'D' flag is provided, then an
"RTN","MAGGAII",81,0)
 ;               error code is returned.
"RTN","MAGGAII",82,0)
 ;
"RTN","MAGGAII",83,0)
 ; [[.]GRPCNTS]  The $$INFO function need counts of images in the
"RTN","MAGGAII",84,0)
 ;               group. If these numbers are already available,
"RTN","MAGGAII",85,0)
 ;               they can be passed as the value of this parameter.
"RTN","MAGGAII",86,0)
 ;                 ^01: Number of existing members of the group
"RTN","MAGGAII",87,0)
 ;                 ^02: Number of deleted members of the group
"RTN","MAGGAII",88,0)
 ;
"RTN","MAGGAII",89,0)
 ;               If this parameter is not defiend or empty, the
"RTN","MAGGAII",90,0)
 ;               $$INFO function calls the $$GRPCT^MAGGI14 and
"RTN","MAGGAII",91,0)
 ;               returns the counts in this parameter if it is
"RTN","MAGGAII",92,0)
 ;               passed by reference.
"RTN","MAGGAII",93,0)
 ;
"RTN","MAGGAII",94,0)
 ; Input Variables
"RTN","MAGGAII",95,0)
 ; ===============
"RTN","MAGGAII",96,0)
 ;
"RTN","MAGGAII",97,0)
 ; MAGJOB(
"RTN","MAGGAII",98,0)
 ;   "NETPLC",...)
"RTN","MAGGAII",99,0)
 ;   "PTNM",...)
"RTN","MAGGAII",100,0)
 ;   "RPCPORT")
"RTN","MAGGAII",101,0)
 ;   "RPCSERVER")
"RTN","MAGGAII",102,0)
 ;
"RTN","MAGGAII",103,0)
 ; MAGNOCHK      Skip the questionable integrity checks if this
"RTN","MAGGAII",104,0)
 ;               variable is defined and not zero.
"RTN","MAGGAII",105,0)
 ;
"RTN","MAGGAII",106,0)
 ; Output Variables
"RTN","MAGGAII",107,0)
 ; ================
"RTN","MAGGAII",108,0)
 ;
"RTN","MAGGAII",109,0)
 ; MAGJOB(
"RTN","MAGGAII",110,0)
 ;   "NETPLC",...)
"RTN","MAGGAII",111,0)
 ;   "PTNM",...)
"RTN","MAGGAII",112,0)
 ;
"RTN","MAGGAII",113,0)
 ; Return Values
"RTN","MAGGAII",114,0)
 ; =============
"RTN","MAGGAII",115,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGAII",116,0)
 ;           >0  Image descriptor
"RTN","MAGGAII",117,0)
 ;                 ^01: Image IEN
"RTN","MAGGAII",118,0)
 ;                 ^02: Image full path and name
"RTN","MAGGAII",119,0)
 ;                 ^03: Abstract full path and name
"RTN","MAGGAII",120,0)
 ;                 ^04: SHORT DESCRIPTION field and description of
"RTN","MAGGAII",121,0)
 ;                      offline JukeBox
"RTN","MAGGAII",122,0)
 ;                 ^05: PROCEDURE/EXAM DATE/TIME field
"RTN","MAGGAII",123,0)
 ;                 ^06: OBJECT TYPE
"RTN","MAGGAII",124,0)
 ;                 ^07: PROCEDURE field
"RTN","MAGGAII",125,0)
 ;                 ^08: display date
"RTN","MAGGAII",126,0)
 ;                 ^09: PARENT DATA FILE image pointer
"RTN","MAGGAII",127,0)
 ;                 ^10: ABSTYPE: 'M' magnetic, 'W' worm, 'O' offline
"RTN","MAGGAII",128,0)
 ;                 ^11: 'A' accessible, 'O' offline
"RTN","MAGGAII",129,0)
 ;                 ^12: DICOM Series Number
"RTN","MAGGAII",130,0)
 ;                 ^13: DICOM Image Number
"RTN","MAGGAII",131,0)
 ;                 ^14: Count of images in group; 1 if single image
"RTN","MAGGAII",132,0)
 ;                      VISN15
"RTN","MAGGAII",133,0)
 ;                 ^15: Site parameter IEN
"RTN","MAGGAII",134,0)
 ;                 ^16: Site parameter CODE
"RTN","MAGGAII",135,0)
 ;                 ^17: Error description of Integrity Check
"RTN","MAGGAII",136,0)
 ;                 ^18: Image BIGPath and name
"RTN","MAGGAII",137,0)
 ;                 ^19: Patient DFN
"RTN","MAGGAII",138,0)
 ;                 ^20: Patient Name
"RTN","MAGGAII",139,0)
 ;                 ^21: Image Class: Clin,Admin,Clin/Admin,Admin/Clin
"RTN","MAGGAII",140,0)
 ;                 ^22: Date Time Image Saved (7)
"RTN","MAGGAII",141,0)
 ;                 ^23: Document Date (110)
"RTN","MAGGAII",142,0)
 ;                 ^24: Group IEN
"RTN","MAGGAII",143,0)
 ;                 ^25: IEN of the 1s child of the group and child's
"RTN","MAGGAII",144,0)
 ;                      type separated by colon
"RTN","MAGGAII",145,0)
 ;                 ^26: RPC Broker server
"RTN","MAGGAII",146,0)
 ;                 ^27: RPC Broker port
"RTN","MAGGAII",147,0)
 ;                 ^28: Internal value of CONTROLLED IMAGE field (112) 
"RTN","MAGGAII",148,0)
 ;                      converted to a number {0|1}
"RTN","MAGGAII",149,0)
 ;                 ^29: Viewable Status
"RTN","MAGGAII",150,0)
 ;                 ^30: Internal value of STATUS field (113)
"RTN","MAGGAII",151,0)
 ;
"RTN","MAGGAII",152,0)
INFO(MAGIEN,FLAGS,GRPCNTS) ;
"RTN","MAGGAII",153,0)
 N GROUP         ; 1 if the entry referenced by MAGIEN is a group
"RTN","MAGGAII",154,0)
 N GRPCH1IEN     ; IEN of the first image of the group
"RTN","MAGGAII",155,0)
 N GRPCH1NODE    ; Global node of the 1st image od the group
"RTN","MAGGAII",156,0)
 N GRPCH1TYPE    ; Type of the first image of the group
"RTN","MAGGAII",157,0)
 N GRPCHCNT      ; Number of images in the group
"RTN","MAGGAII",158,0)
 N MAGNODE       ; Global node of the image referenced by MAGIEN
"RTN","MAGGAII",159,0)
 N MAGRES        ; Result value (image descriptor)
"RTN","MAGGAII",160,0)
 ;
"RTN","MAGGAII",161,0)
 N MAG3P59,MAGMSG,MAGN0,MAGN100,MAGN2,MAGN40,MAGJBOL
"RTN","MAGGAII",162,0)
 N MAGVST,MDFN,IEN,PLC,PLCODE,RC,TMP,X
"RTN","MAGGAII",163,0)
 ;
"RTN","MAGGAII",164,0)
 ;=== Validate control flags
"RTN","MAGGAII",165,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGGAII",166,0)
 ;--- Unknown/Unsupported flag(s)
"RTN","MAGGAII",167,0)
 Q:$TR(FLAGS,"DE")'="" $$IPVE^MAGUERR("FLAGS")
"RTN","MAGGAII",168,0)
 ;--- Missing required flag
"RTN","MAGGAII",169,0)
 Q:$TR(FLAGS,"DE")=FLAGS $$ERROR^MAGUERR(-6,,"D,E")
"RTN","MAGGAII",170,0)
 ;
"RTN","MAGGAII",171,0)
 ;=== Get the global node of the record
"RTN","MAGGAII",172,0)
 S MAGNODE=$$NODE^MAGGI11(MAGIEN)
"RTN","MAGGAII",173,0)
 ;
"RTN","MAGGAII",174,0)
 ;=== Initialize variables
"RTN","MAGGAII",175,0)
 S MAGRES=MAGIEN,RC=0
"RTN","MAGGAII",176,0)
 S MAG3P59=$D(MAGJOB("RPCSERVER"))&$D(MAGJOB("RPCPORT"))
"RTN","MAGGAII",177,0)
 D:'$D(MAGJOB("NETPLC")) NETPLCS^MAGGTU6
"RTN","MAGGAII",178,0)
 I MAGNODE'=""  D
"RTN","MAGGAII",179,0)
 . S MAGN0=$G(@MAGNODE@(0)),MAGN2=$G(@MAGNODE@(2))
"RTN","MAGGAII",180,0)
 . S MAGN40=$G(@MAGNODE@(40)),MAGN100=$G(@MAGNODE@(100))
"RTN","MAGGAII",181,0)
 E  S (MAGN0,MAGN2,MAGN40,MAGN100)=""
"RTN","MAGGAII",182,0)
 ;
"RTN","MAGGAII",183,0)
 ;=== Cache patient names; call $$GET 1 time not 2000
"RTN","MAGGAII",184,0)
 S MDFN=$P(MAGN0,U,7)  ; PATIENT (5)
"RTN","MAGGAII",185,0)
 I MDFN,'$D(MAGJOB("PTNM",MDFN))  D
"RTN","MAGGAII",186,0)
 . S MAGJOB("PTNM",MDFN)=$$GET1^DIQ(2,MDFN_",",.01)
"RTN","MAGGAII",187,0)
 . ;--- Cache no more than 10 records in the MAGJOB("PTNM")
"RTN","MAGGAII",188,0)
 . S TMP=+$P($G(MAGJOB("PTNM")),U,10)
"RTN","MAGGAII",189,0)
 . S MAGJOB("PTNM")=MDFN_U_$P($G(MAGJOB("PTNM")),U,1,9)
"RTN","MAGGAII",190,0)
 . K:TMP>0 MAGJOB("PTNM",TMP)
"RTN","MAGGAII",191,0)
 . Q
"RTN","MAGGAII",192,0)
 ;
"RTN","MAGGAII",193,0)
 ;=== Process the group header
"RTN","MAGGAII",194,0)
 S GRPCHCNT=0,(GRPCH1IEN,GRPCH1NODE,GRPCH1TYPE)=""
"RTN","MAGGAII",195,0)
 ;--- Count the images of the group
"RTN","MAGGAII",196,0)
 S:$G(GRPCNTS)="" GRPCNTS=$$GRPCT^MAGGI14(MAGIEN)
"RTN","MAGGAII",197,0)
 D:GRPCNTS'<0
"RTN","MAGGAII",198,0)
 . S:FLAGS["E" GRPCHCNT=GRPCHCNT+$P(GRPCNTS,U,1)  ; Existing entries
"RTN","MAGGAII",199,0)
 . S:FLAGS["D" GRPCHCNT=GRPCHCNT+$P(GRPCNTS,U,2)  ; Deleted entries
"RTN","MAGGAII",200,0)
 . Q
"RTN","MAGGAII",201,0)
 ;--- Check the object type
"RTN","MAGGAII",202,0)
 S GROUP=$$ISGRP^MAGGI11(MAGIEN)
"RTN","MAGGAII",203,0)
 I GROUP  D
"RTN","MAGGAII",204,0)
 . ;--- Get the IEN of the first image of the group
"RTN","MAGGAII",205,0)
 . S GRPCH1IEN=$$GRPCH1^MAGGI14(MAGIEN,FLAGS)
"RTN","MAGGAII",206,0)
 . I GRPCH1IEN'>0  S GRPCH1IEN=""  Q
"RTN","MAGGAII",207,0)
 . ;--- If we cannot get the global node of the 1st image of the
"RTN","MAGGAII",208,0)
 . ;--- group (this should never happen) clear its IEN as well.
"RTN","MAGGAII",209,0)
 . S GRPCH1NODE=$$NODE^MAGGI11(GRPCH1IEN,.TMP)
"RTN","MAGGAII",210,0)
 . I GRPCH1NODE=""  S GRPCH1IEN=""  Q
"RTN","MAGGAII",211,0)
 . ;--- Get the type of the first image of the group
"RTN","MAGGAII",212,0)
 . S GRPCH1TYPE=$P(@GRPCH1NODE@(0),U,6)
"RTN","MAGGAII",213,0)
 . Q
"RTN","MAGGAII",214,0)
 ;
"RTN","MAGGAII",215,0)
 ;=== If this is a group and it is not empty, then use
"RTN","MAGGAII",216,0)
 ;    the first image to get the names of image files.
"RTN","MAGGAII",217,0)
 ;=== Otherwise, get them from the group header itself.
"RTN","MAGGAII",218,0)
 S IEN=$S(GRPCH1IEN>0:GRPCH1IEN,1:MAGIEN)
"RTN","MAGGAII",219,0)
 ;--- Get full path and file name of the Abstract.
"RTN","MAGGAII",220,0)
 S $P(MAGRES,U,3)=$$FILENAME(IEN,"ABSTRACT",.TMP,.MAGJBOL)
"RTN","MAGGAII",221,0)
 S $P(MAGRES,U,10)=TMP  ; Abstract type ('M', 'O', or 'W')
"RTN","MAGGAII",222,0)
 ;--- Get the full path and file name of the FULL RES image.
"RTN","MAGGAII",223,0)
 S $P(MAGRES,U,2)=$$FILENAME(IEN,"FULL",.TMP)
"RTN","MAGGAII",224,0)
 S $P(MAGRES,U,11)=TMP  ; 'A' - accessible, 'O' - offline
"RTN","MAGGAII",225,0)
 ;--- Get the full path and file name for the BIG image.
"RTN","MAGGAII",226,0)
 S $P(MAGRES,U,18)=$$FILENAME(IEN,"BIG")
"RTN","MAGGAII",227,0)
 ;
"RTN","MAGGAII",228,0)
 ;=== Get the site parameters IEN and code
"RTN","MAGGAII",229,0)
 S IEN=0
"RTN","MAGGAII",230,0)
 I 'GROUP  D
"RTN","MAGGAII",231,0)
 . ;--- If the record is a standalone image entry, then
"RTN","MAGGAII",232,0)
 . ;--- get the location IEN from this entry.
"RTN","MAGGAII",233,0)
 . S IEN=+$S($P(MAGN0,U,3):$P(MAGN0,U,3),1:$P(MAGN0,U,5))
"RTN","MAGGAII",234,0)
 . Q
"RTN","MAGGAII",235,0)
 E  I GRPCH1NODE'=""  D
"RTN","MAGGAII",236,0)
 . ;--- If the group references "child" entries of requested kind(s), 
"RTN","MAGGAII",237,0)
 . ;--- then get the network location IEN from the 1st one.
"RTN","MAGGAII",238,0)
 . S TMP=$G(@GRPCH1NODE@(0))
"RTN","MAGGAII",239,0)
 . S IEN=+$S($P(TMP,U,3):$P(TMP,U,3),1:$P(TMP,U,5))
"RTN","MAGGAII",240,0)
 . Q
"RTN","MAGGAII",241,0)
 E  I (FLAGS'["D")!(FLAGS'["E")  D
"RTN","MAGGAII",242,0)
 . ;--- Otherwise, try to get the location IEN from the 1st "child"
"RTN","MAGGAII",243,0)
 . ;--- image regardless of the requested kind (existing or deleted).
"RTN","MAGGAII",244,0)
 . N CH1IEN,CH1NODE
"RTN","MAGGAII",245,0)
 . S CH1IEN=$$GRPCH1^MAGGI14(MAGIEN,"DE")  Q:CH1IEN'>0
"RTN","MAGGAII",246,0)
 . S CH1NODE=$$NODE^MAGGI11(CH1IEN)        Q:CH1NODE=""
"RTN","MAGGAII",247,0)
 . S TMP=$G(@CH1NODE@(0))
"RTN","MAGGAII",248,0)
 . S IEN=+$S($P(TMP,U,3):$P(TMP,U,3),1:$P(TMP,U,5))
"RTN","MAGGAII",249,0)
 . Q
"RTN","MAGGAII",250,0)
 S PLC=$P($G(MAGJOB("NETPLC",IEN)),U,1)     ; Site Parameters IEN
"RTN","MAGGAII",251,0)
 S PLCODE=$P($G(MAGJOB("NETPLC",IEN)),U,2)  ; Site Code (e.g. "WAS")
"RTN","MAGGAII",252,0)
 ;--- Groups of 0 images need this
"RTN","MAGGAII",253,0)
 S:PLC="" PLC=$G(MAGJOB("PLC")),PLCODE=$G(MAGJOB("PLCODE"))
"RTN","MAGGAII",254,0)
 ;
"RTN","MAGGAII",255,0)
 ;=== SHORT DESCRIPTION field (10) and description of offline JukeBox
"RTN","MAGGAII",256,0)
 S $P(MAGRES,U,4)=$P(MAGN2,U,4)_$G(MAGJBOL)
"RTN","MAGGAII",257,0)
 ;
"RTN","MAGGAII",258,0)
 ;=== Various fields
"RTN","MAGGAII",259,0)
 S $P(MAGRES,U,5)=$P(MAGN2,U,5)  ; PROCEDURE/EXAM DATE/TIME (15)
"RTN","MAGGAII",260,0)
 S $P(MAGRES,U,6)=$P(MAGN0,U,6)  ; OBJECT TYPE (3)
"RTN","MAGGAII",261,0)
 S $P(MAGRES,U,7)=$P(MAGN0,U,8)  ; PROCEDURE (6)
"RTN","MAGGAII",262,0)
 S $P(MAGRES,U,8)=$$DTE($P(MAGN2,U,5)) ; Ext. PROCEDURE/EXAM DATE/TIME
"RTN","MAGGAII",263,0)
 S $P(MAGRES,U,9)=$P(MAGN2,U,8)  ; PARENT DATA FILE IMAGE POINTER (18)
"RTN","MAGGAII",264,0)
 ;
"RTN","MAGGAII",265,0)
 ;=== 2/1/99 Dicom Series number and Dicom Image Number
"RTN","MAGGAII",266,0)
 ; $p(12) and $p(13)
"RTN","MAGGAII",267,0)
 ;
"RTN","MAGGAII",268,0)
 ;=== Number of images of requested kind in the group
"RTN","MAGGAII",269,0)
 S $P(MAGRES,U,14)=$S(GRPCHCNT>0:GRPCHCNT,1:1)
"RTN","MAGGAII",270,0)
 ;
"RTN","MAGGAII",271,0)
 ;=== Site IEN and code
"RTN","MAGGAII",272,0)
 S $P(MAGRES,U,15,16)=PLC_U_PLCODE
"RTN","MAGGAII",273,0)
 ;
"RTN","MAGGAII",274,0)
 ;=== Data integrity checks
"RTN","MAGGAII",275,0)
 S TMP=$S('$G(MAGNOCHK):"Q",1:"")
"RTN","MAGGAII",276,0)
 S MAGVST=$$VIEWSTAT^MAGGI12(MAGIEN,TMP,.MAGMSG)
"RTN","MAGGAII",277,0)
 I MAGVST["Q"  D
"RTN","MAGGAII",278,0)
 . ;--- Remove the file name of the full resolution image
"RTN","MAGGAII",279,0)
 . S $P(MAGRES,U,2)="-1~Questionable Data Integrity"
"RTN","MAGGAII",280,0)
 . ;--- Replace the Abstract with the special bitmap
"RTN","MAGGAII",281,0)
 . S $P(MAGRES,U,3)=".\bmp\imageQA.bmp"
"RTN","MAGGAII",282,0)
 . ;--- Prevent the client from changing the Questionable
"RTN","MAGGAII",283,0)
 . ;--- Integrity abstract bitmap to the Offline bitmap.
"RTN","MAGGAII",284,0)
 . S:$P(MAGRES,U,6)'=11 $P(MAGRES,U,6)=99
"RTN","MAGGAII",285,0)
 . S $P(MAGRES,U,10)="M"
"RTN","MAGGAII",286,0)
 . ;--- Return the error message
"RTN","MAGGAII",287,0)
 . S $P(MAGRES,U,17)=MAGMSG("Q")
"RTN","MAGGAII",288,0)
 . Q
"RTN","MAGGAII",289,0)
 ;
"RTN","MAGGAII",290,0)
 ;=== Various fields
"RTN","MAGGAII",291,0)
 S $P(MAGRES,U,19)=MDFN                    ; Patient IEN (DFN)
"RTN","MAGGAII",292,0)
 S $P(MAGRES,U,20)=$S(MDFN:MAGJOB("PTNM",MDFN),1:MDFN)
"RTN","MAGGAII",293,0)
 S $P(MAGRES,U,22)=$$DTE($P(MAGN2,U))      ; DATE/TIME IMAGE SAVED (7)
"RTN","MAGGAII",294,0)
 S $P(MAGRES,U,23)=$$DTE($P(MAGN100,U,6))  ; CREATION DATE (110)
"RTN","MAGGAII",295,0)
 ;
"RTN","MAGGAII",296,0)
 ;=== Name of the image class
"RTN","MAGGAII",297,0)
 S IEN=+$P(MAGN40,U,3)  ; TYPE INDEX (42)
"RTN","MAGGAII",298,0)
 S:IEN>0 $P(MAGRES,U,21)=$$GET1^DIQ(2005.83,IEN_",",1,,,"MAGMSG")
"RTN","MAGGAII",299,0)
 ;
"RTN","MAGGAII",300,0)
 ;=== If the client is newer than patch 59, then we can set beyond
"RTN","MAGGAII",301,0)
 ;    25 pieces. Additional "^" at the end of the result prevents
"RTN","MAGGAII",302,0)
 ;=== problems on the client side.
"RTN","MAGGAII",303,0)
 I MAG3P59  D
"RTN","MAGGAII",304,0)
 . S $P(MAGRES,U,24)=$P(MAGN0,U,10)      ; GROUP PARENT (14)
"RTN","MAGGAII",305,0)
 . S:GRPCHCNT>1 $P(MAGRES,U,25)=GRPCH1IEN_":"_GRPCH1TYPE
"RTN","MAGGAII",306,0)
 . S $P(MAGRES,U,26)=MAGJOB("RPCSERVER")
"RTN","MAGGAII",307,0)
 . S $P(MAGRES,U,27)=MAGJOB("RPCPORT")
"RTN","MAGGAII",308,0)
 . S TMP=+$P(MAGN100,U,7)                ; CONTROLLED IMAGE (112)
"RTN","MAGGAII",309,0)
 . S $P(MAGRES,U,28)=TMP
"RTN","MAGGAII",310,0)
 . S:TMP $P(MAGRES,U,3)=".\bmp\magsensitive.bmp"
"RTN","MAGGAII",311,0)
 . S TMP=+$P(MAGN100,U,8)                ; STATUS (113)
"RTN","MAGGAII",312,0)
 . S $P(MAGRES,U,29)=$$VSTCODE(MAGVST,TMP)
"RTN","MAGGAII",313,0)
 . S $P(MAGRES,U,30)=TMP
"RTN","MAGGAII",314,0)
 . S $P(MAGRES,U,31)=""
"RTN","MAGGAII",315,0)
 . Q:GRPCH1NODE=""
"RTN","MAGGAII",316,0)
 . ;--- If the group header is not marked as controlled but the 1st
"RTN","MAGGAII",317,0)
 . ;    image is, override the sensitivity flag so that the image
"RTN","MAGGAII",318,0)
 . ;--- abstract is not shown in the image list.
"RTN","MAGGAII",319,0)
 . I '$P(MAGRES,U,28)  D:$P($G(@GRPCH1NODE@(100)),U,7)
"RTN","MAGGAII",320,0)
 . . S $P(MAGRES,U,28)=1,$P(MAGRES,U,3)=".\bmp\magsensitive.bmp"
"RTN","MAGGAII",321,0)
 . . Q
"RTN","MAGGAII",322,0)
 . Q
"RTN","MAGGAII",323,0)
 E  S $P(MAGRES,U,25)=""
"RTN","MAGGAII",324,0)
 ;
"RTN","MAGGAII",325,0)
 ;=== Stop displaying a group of 1 as a group
"RTN","MAGGAII",326,0)
 I GROUP,GRPCHCNT=1  D
"RTN","MAGGAII",327,0)
 . N CH1N100,CH1VST
"RTN","MAGGAII",328,0)
 . S $P(MAGRES,U,1)=GRPCH1IEN   ; IEN of the 1st image of the group
"RTN","MAGGAII",329,0)
 . S $P(MAGRES,U,6)=GRPCH1TYPE  ; OBJECT TYPE (3) of the 1st image
"RTN","MAGGAII",330,0)
 . Q:'MAG3P59
"RTN","MAGGAII",331,0)
 . ;--- Get the viewable status of the 1st "child"
"RTN","MAGGAII",332,0)
 . S TMP=$S('$G(MAGNOCHK):"Q",1:"")
"RTN","MAGGAII",333,0)
 . S CH1VST=$$VIEWSTAT^MAGGI12(GRPCH1IEN,TMP)
"RTN","MAGGAII",334,0)
 . ;--- Get the image status of the 1st "child"
"RTN","MAGGAII",335,0)
 . S CH1N100=$S(GRPCH1NODE'="":$G(@GRPCH1NODE@(100)),1:"")
"RTN","MAGGAII",336,0)
 . S TMP=+$P(CH1N100,U,8)       ; STATUS (113)
"RTN","MAGGAII",337,0)
 . ;--- Override the group's values
"RTN","MAGGAII",338,0)
 . S $P(MAGRES,U,29)=$$VSTCODE(CH1VST,TMP)
"RTN","MAGGAII",339,0)
 . S $P(MAGRES,U,30)=TMP
"RTN","MAGGAII",340,0)
 . Q
"RTN","MAGGAII",341,0)
 ;
"RTN","MAGGAII",342,0)
 ;===
"RTN","MAGGAII",343,0)
 Q MAGRES
"RTN","MAGGAII",344,0)
 ;
"RTN","MAGGAII",345,0)
 ;+++++ CONVERTS THE VIEWABLE STATUS TO THE NUMERIC CODE
"RTN","MAGGAII",346,0)
VSTCODE(VST,STATUS) ;
"RTN","MAGGAII",347,0)
 Q $S(VST["D":12,VST["Q":21,VST["T":22,VST["R":23,1:+STATUS)
"RTN","MAGGI11")
0^29^B19558450
"RTN","MAGGI11",1,0)
MAGGI11 ;WOIFO/GEK/SG - IMAGE FILE API (LOW LEVEL) ; 1/16/09 10:04am
"RTN","MAGGI11",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGI11",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGI11",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI11",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGI11",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGI11",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGI11",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGI11",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGI11",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGI11",11,0)
 ;; |                                                               |
"RTN","MAGGI11",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGI11",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGI11",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGI11",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGI11",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGI11",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI11",18,0)
 ;;
"RTN","MAGGI11",19,0)
 ; Unless stated otherwise, error descriptors returned to the ERR
"RTN","MAGGI11",20,0)
 ; parameter of entry points in this routine are NOT stored regardless
"RTN","MAGGI11",21,0)
 ; of the mode set by the CLEAR^MAGUERR. If you need to store them
"RTN","MAGGI11",22,0)
 ; (e.g. to return from an RPC), then you have to do this in your
"RTN","MAGGI11",23,0)
 ; code using the STORE^MAGUERR.
"RTN","MAGGI11",24,0)
 ;
"RTN","MAGGI11",25,0)
 Q
"RTN","MAGGI11",26,0)
 ;
"RTN","MAGGI11",27,0)
 ;##### CHECKS IF THE CURRENT USER CAN DELETE THE IMAGE
"RTN","MAGGI11",28,0)
 ;
"RTN","MAGGI11",29,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",30,0)
 ;
"RTN","MAGGI11",31,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGGI11",32,0)
 ;
"RTN","MAGGI11",33,0)
 ;                 S  Allow deletion regardless of security keys
"RTN","MAGGI11",34,0)
 ;
"RTN","MAGGI11",35,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",36,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",37,0)
 ;
"RTN","MAGGI11",38,0)
 ; Return Values
"RTN","MAGGI11",39,0)
 ; =============
"RTN","MAGGI11",40,0)
 ;            0  Image cannot be deleted or there was an error;
"RTN","MAGGI11",41,0)
 ;               check the value of the ERR parameter.
"RTN","MAGGI11",42,0)
 ;            1  User can delete the image
"RTN","MAGGI11",43,0)
 ;
"RTN","MAGGI11",44,0)
CANDEL(IMGIEN,FLAGS,ERR) ;
"RTN","MAGGI11",45,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGGI11",46,0)
 I $TR(FLAGS,"S")'=""  S ERR=$$IPVE^MAGUERR("FLAGS")  Q 0
"RTN","MAGGI11",47,0)
 ;--- Validate IEN and check if the image is already deleted
"RTN","MAGGI11",48,0)
 I $$ISDEL(IMGIEN,.ERR)  S ERR=$$ERROR^MAGUERR(-37,,"Deleted")  Q 0
"RTN","MAGGI11",49,0)
 Q:ERR<0 0
"RTN","MAGGI11",50,0)
 ;--- Check the security key if necessary
"RTN","MAGGI11",51,0)
 I FLAGS'["S",'$D(^XUSEC("MAG DELETE",DUZ))  D  Q 0
"RTN","MAGGI11",52,0)
 . S ERR=$$ERROR^MAGUERR(-36)
"RTN","MAGGI11",53,0)
 . Q
"RTN","MAGGI11",54,0)
 ;--- User can delete the image
"RTN","MAGGI11",55,0)
 Q 1
"RTN","MAGGI11",56,0)
 ;
"RTN","MAGGI11",57,0)
 ;##### CHECKS IF THE IMAGE CAN BE VIEWED
"RTN","MAGGI11",58,0)
 ;
"RTN","MAGGI11",59,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",60,0)
 ;
"RTN","MAGGI11",61,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",62,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",63,0)
 ;
"RTN","MAGGI11",64,0)
 ; Return Values
"RTN","MAGGI11",65,0)
 ; =============
"RTN","MAGGI11",66,0)
 ;            0  Image cannot be viewed or there was an error;
"RTN","MAGGI11",67,0)
 ;               check the value of the ERR parameter.
"RTN","MAGGI11",68,0)
 ;            1  Image is viewable
"RTN","MAGGI11",69,0)
 ;
"RTN","MAGGI11",70,0)
CANVIEW(IMGIEN,ERR) ;
"RTN","MAGGI11",71,0)
 N STATUS
"RTN","MAGGI11",72,0)
 S STATUS=$$IMGST(IMGIEN,.ERR)
"RTN","MAGGI11",73,0)
 I STATUS'<10  S ERR=$$ERROR^MAGUERR("-33S",,$P(STATUS,U,2))  Q 0
"RTN","MAGGI11",74,0)
 Q (ERR'<0)
"RTN","MAGGI11",75,0)
 ;
"RTN","MAGGI11",76,0)
 ;##### RETURNS NUMBER OF THE FILE THAT STORES THE IMAGE RECORD
"RTN","MAGGI11",77,0)
 ;
"RTN","MAGGI11",78,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",79,0)
 ;
"RTN","MAGGI11",80,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",81,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",82,0)
 ;
"RTN","MAGGI11",83,0)
 ; Return Values
"RTN","MAGGI11",84,0)
 ; =============
"RTN","MAGGI11",85,0)
 ;           ""  Invalid IEN or there is no such record
"RTN","MAGGI11",86,0)
 ;           >0  Image file number (2005 or 2005.1)
"RTN","MAGGI11",87,0)
 ;
"RTN","MAGGI11",88,0)
FILE(IMGIEN,ERR) ;
"RTN","MAGGI11",89,0)
 S ERR=""
"RTN","MAGGI11",90,0)
 ;--- Validate the IMGIEN parameter
"RTN","MAGGI11",91,0)
 I (IMGIEN'>0)!(+IMGIEN'=IMGIEN)  D  Q ""
"RTN","MAGGI11",92,0)
 . S ERR=$$ERROR^MAGUERR("-3S",,"IMGIEN",IMGIEN)
"RTN","MAGGI11",93,0)
 . Q
"RTN","MAGGI11",94,0)
 ;--- Check if the image data exists
"RTN","MAGGI11",95,0)
 Q:$D(^MAG(2005,IMGIEN)) 2005
"RTN","MAGGI11",96,0)
 ;~~~ Delete this comment and the following line of code when
"RTN","MAGGI11",97,0)
 ;~~~ the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGI11",98,0)
 Q:$D(^MAG(2005.1,IMGIEN)) 2005.1
"RTN","MAGGI11",99,0)
 ;--- There is no such record
"RTN","MAGGI11",100,0)
 S ERR=$$ERROR^MAGUERR("-22S",,2005,IMGIEN_",")
"RTN","MAGGI11",101,0)
 Q ""
"RTN","MAGGI11",102,0)
 ;
"RTN","MAGGI11",103,0)
 ;***** RETURNS THE IMAGE STATUS
"RTN","MAGGI11",104,0)
 ;
"RTN","MAGGI11",105,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",106,0)
 ;
"RTN","MAGGI11",107,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",108,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",109,0)
 ;
"RTN","MAGGI11",110,0)
 ; Return Values
"RTN","MAGGI11",111,0)
 ; =============
"RTN","MAGGI11",112,0)
 ;           ""  Status is not defined or there was an error;
"RTN","MAGGI11",113,0)
 ;               check the value of the ERR parameter.
"RTN","MAGGI11",114,0)
 ;           >0  Image status
"RTN","MAGGI11",115,0)
 ;                 ^01: Status code (internal value)
"RTN","MAGGI11",116,0)
 ;                 ^02: Description (external value)
"RTN","MAGGI11",117,0)
 ;
"RTN","MAGGI11",118,0)
IMGST(IMGIEN,ERR) ;
"RTN","MAGGI11",119,0)
 N MAGMSG,NODE,STCODE
"RTN","MAGGI11",120,0)
 S NODE=$$NODE(IMGIEN,.ERR)  Q:NODE="" ""
"RTN","MAGGI11",121,0)
 ;--- Get the internal value of the STATUS field (113)
"RTN","MAGGI11",122,0)
 S STCODE=+$P($G(@NODE@(100)),U,8)  Q:'STCODE ""
"RTN","MAGGI11",123,0)
 ;--- Return the status
"RTN","MAGGI11",124,0)
 Q STCODE_U_$$IMGSTDSC(STCODE)
"RTN","MAGGI11",125,0)
 ;
"RTN","MAGGI11",126,0)
 ;##### RETURNS THE DESCRIPTION FOR THE IMAGE STATUS CODE
"RTN","MAGGI11",127,0)
 ;
"RTN","MAGGI11",128,0)
 ; STCODE        Internal value of the STATUS field (113)
"RTN","MAGGI11",129,0)
 ;
"RTN","MAGGI11",130,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",131,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",132,0)
 ;
"RTN","MAGGI11",133,0)
 ; Return Values
"RTN","MAGGI11",134,0)
 ; =============
"RTN","MAGGI11",135,0)
 ;               Description of the image status (usually, the
"RTN","MAGGI11",136,0)
 ;               external value of the STATUS field)
"RTN","MAGGI11",137,0)
 ;
"RTN","MAGGI11",138,0)
IMGSTDSC(STCODE,ERR) ;
"RTN","MAGGI11",139,0)
 Q:'STCODE ""
"RTN","MAGGI11",140,0)
 N MAGMSG,STDESCR
"RTN","MAGGI11",141,0)
 ;--- Get the external value of the STATUS field
"RTN","MAGGI11",142,0)
 S STDESCR=$$EXTERNAL^DILFD(2005,113,,STCODE,"MAGMSG")
"RTN","MAGGI11",143,0)
 S:$G(DIERR) ERR=$$ERROR^MAGUERR("-38S",,STCODE)
"RTN","MAGGI11",144,0)
 ;--- Return the description
"RTN","MAGGI11",145,0)
 Q $S(STDESCR'="":STDESCR,1:"<Status: "_STCODE_">")
"RTN","MAGGI11",146,0)
 ;
"RTN","MAGGI11",147,0)
 ;##### CHECKS IF THE IMAGE IS MARKED AS DELETED
"RTN","MAGGI11",148,0)
 ;
"RTN","MAGGI11",149,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",150,0)
 ;
"RTN","MAGGI11",151,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",152,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",153,0)
 ;
"RTN","MAGGI11",154,0)
 ; Return Values
"RTN","MAGGI11",155,0)
 ; =============
"RTN","MAGGI11",156,0)
 ;            0  Image is not marked as deleted or there was an error;
"RTN","MAGGI11",157,0)
 ;               check the value of the ERR parameter.
"RTN","MAGGI11",158,0)
 ;            1  IMGIEN references a deleted image
"RTN","MAGGI11",159,0)
 ;
"RTN","MAGGI11",160,0)
ISDEL(IMGIEN,ERR) ;
"RTN","MAGGI11",161,0)
 ;~~~ Delete this comment and the following lines of code when
"RTN","MAGGI11",162,0)
 ;~~~ the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGI11",163,0)
 S ERR=""
"RTN","MAGGI11",164,0)
 I $D(^MAG(2005.1,IMGIEN))  Q:'$D(^MAG(2005,IMGIEN)) 1  D  Q 0
"RTN","MAGGI11",165,0)
 . S ERR=$$ERROR^MAGUERR("-43S",,IMGIEN)
"RTN","MAGGI11",166,0)
 . Q
"RTN","MAGGI11",167,0)
 ;---
"RTN","MAGGI11",168,0)
 Q (+$$IMGST(IMGIEN,.ERR)=12)
"RTN","MAGGI11",169,0)
 ;
"RTN","MAGGI11",170,0)
 ;##### CHECKS IF THE IEN IS INVALID OR THE IMAGE IS DELETED
"RTN","MAGGI11",171,0)
 ;
"RTN","MAGGI11",172,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",173,0)
 ;
"RTN","MAGGI11",174,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",175,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",176,0)
 ;
"RTN","MAGGI11",177,0)
 ; Return Values
"RTN","MAGGI11",178,0)
 ; =============
"RTN","MAGGI11",179,0)
 ;            0  IEN is valid and the image is not deleted
"RTN","MAGGI11",180,0)
 ;            1  Invalid IEN or the image is marked as delete;
"RTN","MAGGI11",181,0)
 ;               check the value of the ERR parameter for details.
"RTN","MAGGI11",182,0)
 ;
"RTN","MAGGI11",183,0)
ISDELINV(IMGIEN,ERR) ;
"RTN","MAGGI11",184,0)
 Q $S($$ISDEL(IMGIEN,.ERR):1,1:ERR<0)
"RTN","MAGGI11",185,0)
 ;
"RTN","MAGGI11",186,0)
 ;##### CHECKS IF THE IMGIEN REFERENCES A GROUP PARENT
"RTN","MAGGI11",187,0)
 ;
"RTN","MAGGI11",188,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",189,0)
 ;
"RTN","MAGGI11",190,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",191,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",192,0)
 ;
"RTN","MAGGI11",193,0)
 ; Return Values
"RTN","MAGGI11",194,0)
 ; =============
"RTN","MAGGI11",195,0)
 ;            0  Image is not a group parent or there was an error;
"RTN","MAGGI11",196,0)
 ;               check the value of the ERR parameter.
"RTN","MAGGI11",197,0)
 ;            1  IMGIEN references a group parent
"RTN","MAGGI11",198,0)
 ;
"RTN","MAGGI11",199,0)
ISGRP(IMGIEN,ERR) ;
"RTN","MAGGI11",200,0)
 N NODE,OBJTYPE
"RTN","MAGGI11",201,0)
 S NODE=$$NODE(IMGIEN,.ERR)  Q:NODE="" 0
"RTN","MAGGI11",202,0)
 S OBJTYPE=$P($G(@NODE@(0)),U,6)  ; OBJECT TYPE (3)
"RTN","MAGGI11",203,0)
 Q (OBJTYPE=11)!(OBJTYPE=16)
"RTN","MAGGI11",204,0)
 ;
"RTN","MAGGI11",205,0)
 ;##### CHECKS IF THE PARAMETER VALUE IS A VALID IMAGE IEN
"RTN","MAGGI11",206,0)
 ;
"RTN","MAGGI11",207,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",208,0)
 ;
"RTN","MAGGI11",209,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",210,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",211,0)
 ;
"RTN","MAGGI11",212,0)
 ; Return Values
"RTN","MAGGI11",213,0)
 ; =============
"RTN","MAGGI11",214,0)
 ;            0  Parameter value is not a valid image IEN;
"RTN","MAGGI11",215,0)
 ;               check the value of the ERR parameter.
"RTN","MAGGI11",216,0)
 ;            1  Valid image IEN
"RTN","MAGGI11",217,0)
 ;
"RTN","MAGGI11",218,0)
ISVALID(IMGIEN,ERR) ;
"RTN","MAGGI11",219,0)
 Q $$NODE(IMGIEN,.ERR)'=""
"RTN","MAGGI11",220,0)
 ;
"RTN","MAGGI11",221,0)
 ;##### RETURNS THE CLOSED REFERENCE TO THE IMAGE RECORD
"RTN","MAGGI11",222,0)
 ;
"RTN","MAGGI11",223,0)
 ; IMGIEN        Internal Entry Number of the image record
"RTN","MAGGI11",224,0)
 ;
"RTN","MAGGI11",225,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGGI11",226,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGGI11",227,0)
 ;
"RTN","MAGGI11",228,0)
 ; Return Values
"RTN","MAGGI11",229,0)
 ; =============
"RTN","MAGGI11",230,0)
 ;           ""  Invalid IEN or there is no such record
"RTN","MAGGI11",231,0)
 ;  "^MAG(...)"  Closed reference to the image data node
"RTN","MAGGI11",232,0)
 ;
"RTN","MAGGI11",233,0)
NODE(IMGIEN,ERR) ;
"RTN","MAGGI11",234,0)
 S ERR=""
"RTN","MAGGI11",235,0)
 ;--- Validate the IMGIEN parameter
"RTN","MAGGI11",236,0)
 I (IMGIEN'>0)!(+IMGIEN'=IMGIEN)  D  Q ""
"RTN","MAGGI11",237,0)
 . S ERR=$$ERROR^MAGUERR("-3S",,"IMGIEN",IMGIEN)
"RTN","MAGGI11",238,0)
 . Q
"RTN","MAGGI11",239,0)
 ;--- Check if the image data exists
"RTN","MAGGI11",240,0)
 Q:$D(^MAG(2005,IMGIEN)) $NA(^(IMGIEN))
"RTN","MAGGI11",241,0)
 ;~~~ Delete this comment and the following line of code when
"RTN","MAGGI11",242,0)
 ;~~~ the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGI11",243,0)
 Q:$D(^MAG(2005.1,IMGIEN)) $NA(^(IMGIEN))
"RTN","MAGGI11",244,0)
 ;--- There is no such record
"RTN","MAGGI11",245,0)
 S ERR=$$ERROR^MAGUERR("-22S",,2005,IMGIEN_",")
"RTN","MAGGI11",246,0)
 Q ""
"RTN","MAGGI12")
0^30^B30285951
"RTN","MAGGI12",1,0)
MAGGI12 ;WOIFO/GEK/SG - IMAGE FILE API (PROPERTIES) ; 1/13/09 11:20am
"RTN","MAGGI12",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGI12",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGI12",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI12",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGI12",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGI12",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGI12",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGI12",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGI12",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGI12",11,0)
 ;; |                                                               |
"RTN","MAGGI12",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGI12",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGI12",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGI12",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGI12",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGI12",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI12",18,0)
 ;;
"RTN","MAGGI12",19,0)
 Q
"RTN","MAGGI12",20,0)
 ;
"RTN","MAGGI12",21,0)
 ;##### RETURNS IEN OF THE GROUP PARENT FOR THE IMAGE
"RTN","MAGGI12",22,0)
 ;
"RTN","MAGGI12",23,0)
 ; IEN           Internal Entry Number of the image record
"RTN","MAGGI12",24,0)
 ;
"RTN","MAGGI12",25,0)
 ; Return Values
"RTN","MAGGI12",26,0)
 ; =============
"RTN","MAGGI12",27,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI12",28,0)
 ;            0  Image is not a member of a group
"RTN","MAGGI12",29,0)
 ;           >0  IEN of the group parent
"RTN","MAGGI12",30,0)
 ;
"RTN","MAGGI12",31,0)
 ; Notes
"RTN","MAGGI12",32,0)
 ; =====
"RTN","MAGGI12",33,0)
 ;
"RTN","MAGGI12",34,0)
 ; For a deleted image, the function returns the IEN of the group
"RTN","MAGGI12",35,0)
 ; that the image belonged to before it was marked as deleted.
"RTN","MAGGI12",36,0)
 ;
"RTN","MAGGI12",37,0)
GRPIEN(IEN) ;
"RTN","MAGGI12",38,0)
 N ERR,NODE
"RTN","MAGGI12",39,0)
 S NODE=$$NODE^MAGGI11(IEN,.ERR)
"RTN","MAGGI12",40,0)
 I NODE=""  D STORE^MAGUERR(ERR)  Q ERR
"RTN","MAGGI12",41,0)
 Q +$P($G(@NODE@(0)),U,10)  ; GROUP PARENT (14)
"RTN","MAGGI12",42,0)
 ;
"RTN","MAGGI12",43,0)
 ;##### ALLOCATES A NEW RECORD IN THE IMAGE FILE (#2005) AND LOCKS IT
"RTN","MAGGI12",44,0)
 ; 
"RTN","MAGGI12",45,0)
 ; Return Values
"RTN","MAGGI12",46,0)
 ; =============
"RTN","MAGGI12",47,0)
 ;           >0  IEN for the new record in the IMAGE file (#2005)
"RTN","MAGGI12",48,0)
 ;
"RTN","MAGGI12",49,0)
 ; Notes
"RTN","MAGGI12",50,0)
 ; =====
"RTN","MAGGI12",51,0)
 ;
"RTN","MAGGI12",52,0)
 ; The placeholder for the new record (^MAG(2005,IEN) node) is LOCKed 
"RTN","MAGGI12",53,0)
 ; by this function. It is responsibility of the caller to unlock the 
"RTN","MAGGI12",54,0)
 ; record after it is created or the record creation is canceled.
"RTN","MAGGI12",55,0)
 ;
"RTN","MAGGI12",56,0)
NEWIEN() ;
"RTN","MAGGI12",57,0)
 N DIEN,IEN,NEWIEN,NODE
"RTN","MAGGI12",58,0)
 S NEWIEN=0
"RTN","MAGGI12",59,0)
 ;---
"RTN","MAGGI12",60,0)
 F  D  Q:NEWIEN
"RTN","MAGGI12",61,0)
 . S IEN=$O(^MAG(2005," "),-1)+1
"RTN","MAGGI12",62,0)
 . ;--- Check the IMAGE AUDIT file for a deleted image
"RTN","MAGGI12",63,0)
 . S DIEN=$O(^MAG(2005.1," "),-1)+1
"RTN","MAGGI12",64,0)
 . S:DIEN>IEN IEN=DIEN
"RTN","MAGGI12",65,0)
 . ;--- If the record already exists, skip it
"RTN","MAGGI12",66,0)
 . S NODE=$NA(^MAG(2005,IEN))  Q:$D(@NODE)
"RTN","MAGGI12",67,0)
 . ;--- Lock the placeholder in order to make sure that nobody
"RTN","MAGGI12",68,0)
 . ;--- else is trying to allocate it at the same time.
"RTN","MAGGI12",69,0)
 . D LOCK^DILF(NODE)  E  Q
"RTN","MAGGI12",70,0)
 . ;--- Double check that the record has not been created after the
"RTN","MAGGI12",71,0)
 . ;--- previous $D() check and the LOCK command (a race condition)
"RTN","MAGGI12",72,0)
 . I $D(@NODE)  L -@NODE  Q
"RTN","MAGGI12",73,0)
 . ;--- Success
"RTN","MAGGI12",74,0)
 . S NEWIEN=IEN
"RTN","MAGGI12",75,0)
 . Q
"RTN","MAGGI12",76,0)
 ;---
"RTN","MAGGI12",77,0)
 Q NEWIEN
"RTN","MAGGI12",78,0)
 ;
"RTN","MAGGI12",79,0)
 ;##### RETURNS THE PARENT DATA (SUB)FILE REFERENCE
"RTN","MAGGI12",80,0)
 ;
"RTN","MAGGI12",81,0)
 ; IEN           Internal Entry Number of the image record
"RTN","MAGGI12",82,0)
 ;
"RTN","MAGGI12",83,0)
 ; Return Values
"RTN","MAGGI12",84,0)
 ; =============
"RTN","MAGGI12",85,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI12",86,0)
 ;            0  Image does not have a parent file reference
"RTN","MAGGI12",87,0)
 ;           >0  Parent data file reference (file/subfile number and
"RTN","MAGGI12",88,0)
 ;               IEN in the PARENT DATA FILE file (#2005.03) at the
"RTN","MAGGI12",89,0)
 ;               same time).
"RTN","MAGGI12",90,0)
 ;
"RTN","MAGGI12",91,0)
PARFILE(IEN) ;
"RTN","MAGGI12",92,0)
 N ERR,NODE,PARENTFILE,PFN0
"RTN","MAGGI12",93,0)
 S NODE=$$NODE^MAGGI11(IEN,.ERR)
"RTN","MAGGI12",94,0)
 I NODE=""  D STORE^MAGUERR(ERR)  Q ERR
"RTN","MAGGI12",95,0)
 ;--- Check if the image record has a parent data file reference
"RTN","MAGGI12",96,0)
 S PARENTFILE=$P($G(@NODE@(2)),U,6)  ; PARENT DATA FILE# (16)
"RTN","MAGGI12",97,0)
 Q:PARENTFILE="" 0
"RTN","MAGGI12",98,0)
 ;--- Check if the pointer to the PARENT DATA FILE
"RTN","MAGGI12",99,0)
 ;--- file (#2005.03) is valid
"RTN","MAGGI12",100,0)
 S PFN0=$G(^MAG(2005.03,PARENTFILE,0))
"RTN","MAGGI12",101,0)
 Q:PFN0="" $$ERROR^MAGUERR(-34,,IEN,PARENTFILE)
"RTN","MAGGI12",102,0)
 ;--- Check if file desriptor has a value in FILE POINTER field (.04)
"RTN","MAGGI12",103,0)
 Q:$P(PFN0,U,4)="" $$ERROR^MAGUERR(-35,,PARENTFILE)
"RTN","MAGGI12",104,0)
 ;--- Return the reference
"RTN","MAGGI12",105,0)
 Q PARENTFILE
"RTN","MAGGI12",106,0)
 ;
"RTN","MAGGI12",107,0)
 ;##### RETURNS STATUS OF THE IMAGE
"RTN","MAGGI12",108,0)
 ;
"RTN","MAGGI12",109,0)
 ; IEN           Internal Entry Number of the image record
"RTN","MAGGI12",110,0)
 ;
"RTN","MAGGI12",111,0)
 ; Return Values
"RTN","MAGGI12",112,0)
 ; =============
"RTN","MAGGI12",113,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI12",114,0)
 ;           ""  Status is not defined
"RTN","MAGGI12",115,0)
 ;           >0  Image status
"RTN","MAGGI12",116,0)
 ;                 ^01: Status code (internal value)
"RTN","MAGGI12",117,0)
 ;                 ^02: Description (external value)
"RTN","MAGGI12",118,0)
 ;
"RTN","MAGGI12",119,0)
STATUS(IEN) ;
"RTN","MAGGI12",120,0)
 N ERR,STATUS
"RTN","MAGGI12",121,0)
 S STATUS=$$IMGST^MAGGI11(IEN,.ERR)
"RTN","MAGGI12",122,0)
 D:ERR<0 STORE^MAGUERR(ERR)
"RTN","MAGGI12",123,0)
 Q $S(STATUS>0:STATUS,ERR<0:ERR,1:"")
"RTN","MAGGI12",124,0)
 ;
"RTN","MAGGI12",125,0)
 ;##### RETURNS THE VIEWABLE STATUS OF THE IMAGE
"RTN","MAGGI12",126,0)
 ;
"RTN","MAGGI12",127,0)
 ; IEN           IEN of the image record in the file #2005
"RTN","MAGGI12",128,0)
 ;
"RTN","MAGGI12",129,0)
 ; [FLAGS]       Flags that control execution (can be combined):
"RTN","MAGGI12",130,0)
 ;
"RTN","MAGGI12",131,0)
 ;                 Q  Perform the integrity checks
"RTN","MAGGI12",132,0)
 ;
"RTN","MAGGI12",133,0)
 ; [.MESSAGES]   Reference to a local array for messages returned
"RTN","MAGGI12",134,0)
 ;               by the image data checks. A node in this array is
"RTN","MAGGI12",135,0)
 ;               defined only if the result value contains the 
"RTN","MAGGI12",136,0)
 ;               corresponding subscript value (e.g. the "Q" node is
"RTN","MAGGI12",137,0)
 ;               defined only if integrity checks fail and the result 
"RTN","MAGGI12",138,0)
 ;               contains "Q").
"RTN","MAGGI12",139,0)
 ;
"RTN","MAGGI12",140,0)
 ; MESSAGES(
"RTN","MAGGI12",141,0)
 ;
"RTN","MAGGI12",142,0)
 ;   "Q")        Message returned by the integrity checks.
"RTN","MAGGI12",143,0)
 ;
"RTN","MAGGI12",144,0)
 ;   "R")        Message returned by the Radiology report checks
"RTN","MAGGI12",145,0)
 ;               (reserved but not implemented)
"RTN","MAGGI12",146,0)
 ;
"RTN","MAGGI12",147,0)
 ;   "S")        Message regarding the image status.
"RTN","MAGGI12",148,0)
 ;
"RTN","MAGGI12",149,0)
 ;   "T")        Message returned by the TIU note checks.
"RTN","MAGGI12",150,0)
 ;
"RTN","MAGGI12",151,0)
 ; Return Values
"RTN","MAGGI12",152,0)
 ; =============
"RTN","MAGGI12",153,0)
 ;           ""  Image can be viewed
"RTN","MAGGI12",154,0)
 ;          ...  One or more characters that indicate why
"RTN","MAGGI12",155,0)
 ;               the image cannot be viewed "as usual":
"RTN","MAGGI12",156,0)
 ;
"RTN","MAGGI12",157,0)
 ;                 D  Deleted image
"RTN","MAGGI12",158,0)
 ;                 Q  Questionable integrity
"RTN","MAGGI12",159,0)
 ;                 R  Problem with the Radiology report
"RTN","MAGGI12",160,0)
 ;                    (reserved but not implemented)
"RTN","MAGGI12",161,0)
 ;                 S  Check the value of the STATUS field
"RTN","MAGGI12",162,0)
 ;                 T  Can't view the TIU note
"RTN","MAGGI12",163,0)
 ;
"RTN","MAGGI12",164,0)
VIEWSTAT(IEN,FLAGS,MESSAGES) ;
"RTN","MAGGI12",165,0)
 N MAGCF,MAGVS
"RTN","MAGGI12",166,0)
 K MESSAGES  S MAGVS="",MAGCF=$G(FLAGS)
"RTN","MAGGI12",167,0)
 D
"RTN","MAGGI12",168,0)
 . N BUF,ERR,GRPIEN,NODE,STATUS
"RTN","MAGGI12",169,0)
 . ;--- Validate IEN and get the image status
"RTN","MAGGI12",170,0)
 . S STATUS=$$IMGST^MAGGI11(IEN,.ERR)
"RTN","MAGGI12",171,0)
 . S NODE=$$NODE^MAGGI11(IEN)
"RTN","MAGGI12",172,0)
 . ;--- Force the integrity check in case of error(s)
"RTN","MAGGI12",173,0)
 . I (ERR<0)!(NODE="")  S MAGCF=MAGCF_"Q"  Q
"RTN","MAGGI12",174,0)
 . ;--- Check the image status
"RTN","MAGGI12",175,0)
 . D:STATUS'<10
"RTN","MAGGI12",176,0)
 . . I +STATUS=12  S MAGVS=MAGVS_"D"  Q
"RTN","MAGGI12",177,0)
 . . S MAGVS=MAGVS_"S"
"RTN","MAGGI12",178,0)
 . . S MESSAGES("S")=$$MSG^MAGUERR(-33,,$P(STATUS,U,2))
"RTN","MAGGI12",179,0)
 . . Q
"RTN","MAGGI12",180,0)
 . ;--- Check if the TIU note can be viewed
"RTN","MAGGI12",181,0)
 . S BUF=$G(@NODE@(2))
"RTN","MAGGI12",182,0)
 . D:+$P(BUF,U,6)=8925
"RTN","MAGGI12",183,0)
 . . N IEN,TMP  S IEN=+$P(BUF,U,7)  Q:'IEN
"RTN","MAGGI12",184,0)
 . . S TMP=$$CANDO^TIULP(IEN,"VIEW")
"RTN","MAGGI12",185,0)
 . . S:'TMP MAGVS=MAGVS_"T",MESSAGES("T")=$P(TMP,U,2)
"RTN","MAGGI12",186,0)
 . . Q
"RTN","MAGGI12",187,0)
 . ;--- Check the status of the group if necessary
"RTN","MAGGI12",188,0)
 . I MAGVS'["D",MAGVS'["S"  D
"RTN","MAGGI12",189,0)
 . . S GRPIEN=$P($G(@NODE@(0)),U,10)   Q:GRPIEN'>0  ; GROUP PARENT
"RTN","MAGGI12",190,0)
 . . S STATUS=$$IMGST^MAGGI11(GRPIEN)  Q:STATUS<10
"RTN","MAGGI12",191,0)
 . . ;--- Force the integrity check if the existing
"RTN","MAGGI12",192,0)
 . . ;--- image entry belongs to a deleted group.
"RTN","MAGGI12",193,0)
 . . I +STATUS=12  S MAGCF=MAGCF_"Q"  Q
"RTN","MAGGI12",194,0)
 . . ;--- Extend the "non-viewable" group status to the image
"RTN","MAGGI12",195,0)
 . . S MAGVS=MAGVS_"S"
"RTN","MAGGI12",196,0)
 . . S MESSAGES("S")=$$MSG^MAGUERR(-33,,$P(STATUS,U,2))
"RTN","MAGGI12",197,0)
 . . Q
"RTN","MAGGI12",198,0)
 . Q
"RTN","MAGGI12",199,0)
 ;
"RTN","MAGGI12",200,0)
 ;--- Radiology report
"RTN","MAGGI12",201,0)
 ; Reserved but not implemented
"RTN","MAGGI12",202,0)
 ;
"RTN","MAGGI12",203,0)
 ;--- Questionable integrity
"RTN","MAGGI12",204,0)
 D:MAGCF["Q"
"RTN","MAGGI12",205,0)
 . N MAGQI
"RTN","MAGGI12",206,0)
 . D CHK^MAGGSQI(.MAGQI,IEN)
"RTN","MAGGI12",207,0)
 . S:'$G(MAGQI(0)) MAGVS=MAGVS_"Q",MESSAGES("Q")=$P(MAGQI(0),U,2)
"RTN","MAGGI12",208,0)
 . Q
"RTN","MAGGI12",209,0)
 ;
"RTN","MAGGI12",210,0)
 ;---
"RTN","MAGGI12",211,0)
 Q MAGVS
"RTN","MAGGI13")
0^32^B36748899
"RTN","MAGGI13",1,0)
MAGGI13 ;WOIFO/SG - IMAGE FILE API (QUERY) ; 2/23/09 11:14am
"RTN","MAGGI13",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGI13",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGI13",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI13",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGI13",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGI13",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGI13",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGI13",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGI13",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGI13",11,0)
 ;; |                                                               |
"RTN","MAGGI13",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGI13",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGI13",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGI13",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGI13",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGI13",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI13",18,0)
 ;;
"RTN","MAGGI13",19,0)
 Q
"RTN","MAGGI13",20,0)
 ;
"RTN","MAGGI13",21,0)
 ;+++++ RETURNS INVERTED/REVERSED DATE/TIME (FILEMAN)
"RTN","MAGGI13",22,0)
INVDT(DATETIME) ;
"RTN","MAGGI13",23,0)
 Q 9999999.9999-DATETIME
"RTN","MAGGI13",24,0)
 ;
"RTN","MAGGI13",25,0)
 ;##### $ORDER BOTH #2005 AND #2005.1 FILES AT THE SAME TIME
"RTN","MAGGI13",26,0)
 ;
"RTN","MAGGI13",27,0)
 ; NODE          Name of a node in file #2005 or #2005.1 (it does
"RTN","MAGGI13",28,0)
 ;               not matter in which one if the BOTH parameter is
"RTN","MAGGI13",29,0)
 ;               not zero). The last subscript can be empty string.
"RTN","MAGGI13",30,0)
 ;
"RTN","MAGGI13",31,0)
 ; [DIR]         Browsing direction:
"RTN","MAGGI13",32,0)
 ;                 $G(DIR)'<0  forward
"RTN","MAGGI13",33,0)
 ;                 DIR<0       backward
"RTN","MAGGI13",34,0)
 ;
"RTN","MAGGI13",35,0)
 ; [BOTH]        If this parameter is defined and not zero, then
"RTN","MAGGI13",36,0)
 ;               the MAGORD browses subscripts of IMAGE (#2005) and
"RTN","MAGGI13",37,0)
 ;               IMAGE AUDIT (2005.1) files at the same time (as if
"RTN","MAGGI13",38,0)
 ;               the nodes were merged into a single array).
"RTN","MAGGI13",39,0)
 ;               Otherwise, it works as the $ORDER function.
"RTN","MAGGI13",40,0)
 ;
"RTN","MAGGI13",41,0)
 ; Return Values
"RTN","MAGGI13",42,0)
 ; =============
"RTN","MAGGI13",43,0)
 ;           ""  No more records
"RTN","MAGGI13",44,0)
 ;               Next/previous subscript (in #2005, #2005.1, or both)
"RTN","MAGGI13",45,0)
 ;
"RTN","MAGGI13",46,0)
 ; Notes
"RTN","MAGGI13",47,0)
 ; =====
"RTN","MAGGI13",48,0)
 ;
"RTN","MAGGI13",49,0)
 ; This function relies on the fact that there are no records with
"RTN","MAGGI13",50,0)
 ; the same IENs in the files #2005 and #2005.1.
"RTN","MAGGI13",51,0)
 ;
"RTN","MAGGI13",52,0)
MAGORD(NODE,DIR,BOTH) ;
"RTN","MAGGI13",53,0)
 Q:NODE'?1"^MAG(2005".1".1"1","1.E1")" ""
"RTN","MAGGI13",54,0)
 N FILE,LST,PI,SUBS,TRAIL
"RTN","MAGGI13",55,0)
 S DIR=$S($G(DIR)<0:-1,1:1)
"RTN","MAGGI13",56,0)
 Q:'$G(BOTH) $O(@NODE,DIR)
"RTN","MAGGI13",57,0)
 ;--- Find subscripts in both files that follow the @NODE
"RTN","MAGGI13",58,0)
 S TRAIL=","_$P(NODE,",",2,999)
"RTN","MAGGI13",59,0)
 F FILE=2005,2005.1  D
"RTN","MAGGI13",60,0)
 . S PI="^MAG("_FILE_TRAIL,SUBS=$O(@PI,DIR)
"RTN","MAGGI13",61,0)
 . S:SUBS'="" LST(SUBS,FILE)=""
"RTN","MAGGI13",62,0)
 . Q
"RTN","MAGGI13",63,0)
 ;--- Return one of the subscripts according to the direction
"RTN","MAGGI13",64,0)
 Q $O(LST(""),DIR)
"RTN","MAGGI13",65,0)
 ;
"RTN","MAGGI13",66,0)
 ;+++++ CHECKS THE PATIENT REFERENCE
"RTN","MAGGI13",67,0)
 ;
"RTN","MAGGI13",68,0)
 ; IMGIEN        Internal entry number of the image entry
"RTN","MAGGI13",69,0)
 ;
"RTN","MAGGI13",70,0)
 ; DFN           Patient IEN (DFN)
"RTN","MAGGI13",71,0)
 ;
"RTN","MAGGI13",72,0)
 ; Return Values
"RTN","MAGGI13",73,0)
 ; =============
"RTN","MAGGI13",74,0)
 ;            0  Skip the image entry (different patient or error)
"RTN","MAGGI13",75,0)
 ;            1  Process the image entry
"RTN","MAGGI13",76,0)
 ;
"RTN","MAGGI13",77,0)
PTCHK(IMGIEN,DFN) ;
"RTN","MAGGI13",78,0)
 N NODE  S NODE=$$NODE^MAGGI11(IMGIEN)
"RTN","MAGGI13",79,0)
 Q $S(NODE'="":$P($G(@NODE@(0)),U,7)=DFN,1:0)
"RTN","MAGGI13",80,0)
 ;
"RTN","MAGGI13",81,0)
 ;##### BROWSES IMAGES AND CALLS THE CALLBACK FUNCTION
"RTN","MAGGI13",82,0)
 ;
"RTN","MAGGI13",83,0)
 ; CALLBACK      Full name of the callback function ($$TAG^ROUTINE)
"RTN","MAGGI13",84,0)
 ;               that is called for each preselected image.
"RTN","MAGGI13",85,0)
 ;
"RTN","MAGGI13",86,0)
 ;               SINCE ENTRIES THAT ARE NOT MARKED AS DELETED CAN
"RTN","MAGGI13",87,0)
 ;               REFERENCE DELETED "CHILDREN", SUCH ENTRIES ARE PASSED
"RTN","MAGGI13",88,0)
 ;               TO THE CALLBACK FUNCTION EVEN IF ONLY DELETED IMAGES
"RTN","MAGGI13",89,0)
 ;               ARE REQUESTED! THEREFORE, THE FUNCTION MUST PERFORM
"RTN","MAGGI13",90,0)
 ;               ADDITIONAL SCREENING BY CHECKING THE "CHILD" ENTRIES.
"RTN","MAGGI13",91,0)
 ;
"RTN","MAGGI13",92,0)
 ;               The function should accept 3 parameters:
"RTN","MAGGI13",93,0)
 ;
"RTN","MAGGI13",94,0)
 ;                 IMGIEN     IEN of the image record
"RTN","MAGGI13",95,0)
 ;                            (file #2005 or #2005.1)
"RTN","MAGGI13",96,0)
 ;
"RTN","MAGGI13",97,0)
 ;                 FLAGS      Value of the FLAGS parameter of the
"RTN","MAGGI13",98,0)
 ;                            $$QUERY function (see below).
"RTN","MAGGI13",99,0)
 ;
"RTN","MAGGI13",100,0)
 ;                 .DATA      Reference to the local array passed via
"RTN","MAGGI13",101,0)
 ;                            the MAG8DATA parameter of the $$QUERY
"RTN","MAGGI13",102,0)
 ;                            function (see below).
"RTN","MAGGI13",103,0)
 ;
"RTN","MAGGI13",104,0)
 ;               Non-zero result values of the callback function
"RTN","MAGGI13",105,0)
 ;               terminate the query:
"RTN","MAGGI13",106,0)
 ;
"RTN","MAGGI13",107,0)
 ;                 <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI13",108,0)
 ;                  0  Continue
"RTN","MAGGI13",109,0)
 ;                 >0  Terminate the query (e.g. if maximum number of 
"RTN","MAGGI13",110,0)
 ;                     returned records has been reached)
"RTN","MAGGI13",111,0)
 ;
"RTN","MAGGI13",112,0)
 ;               See the source code of the IMGQUERY^MAGGA03 and
"RTN","MAGGI13",113,0)
 ;               $$QRYCBK^MAGGA03 for an example.
"RTN","MAGGI13",114,0)
 ;
"RTN","MAGGI13",115,0)
 ; FLAGS         Flags that control the execution (can be combined):
"RTN","MAGGI13",116,0)
 ;
"RTN","MAGGI13",117,0)
 ;                 C  Capture date range. If this flag is provided,
"RTN","MAGGI13",118,0)
 ;                    then the remote procedure uses values of the
"RTN","MAGGI13",119,0)
 ;                    MAG8FROM and MAG8TO parameters to select images
"RTN","MAGGI13",120,0)
 ;                    that were captured in this date range (see the
"RTN","MAGGI13",121,0)
 ;                    DATE/TIME IMAGE SAVED field (7) and the "AD"
"RTN","MAGGI13",122,0)
 ;                    cross-reference).
"RTN","MAGGI13",123,0)
 ;
"RTN","MAGGI13",124,0)
 ;                    Otherwise, values of those parameters are
"RTN","MAGGI13",125,0)
 ;                    treated as the date range when procedures were
"RTN","MAGGI13",126,0)
 ;                    performed (see the PROCEDURE/EXAM DATE/TIME
"RTN","MAGGI13",127,0)
 ;                    field (15) and cross-references "APDTPX" and
"RTN","MAGGI13",128,0)
 ;                    "APDT").
"RTN","MAGGI13",129,0)
 ;
"RTN","MAGGI13",130,0)
 ;                 D  Include only deleted images (file #2005.1)
"RTN","MAGGI13",131,0)
 ;
"RTN","MAGGI13",132,0)
 ;                 E  Include only existing images (file #2005)
"RTN","MAGGI13",133,0)
 ;
"RTN","MAGGI13",134,0)
 ;               If neither 'E' nor 'D' flag is provided, then an
"RTN","MAGGI13",135,0)
 ;               error code is returned.
"RTN","MAGGI13",136,0)
 ;
"RTN","MAGGI13",137,0)
 ; [.MAG8DATA]   Reference to a local array that is passed to the
"RTN","MAGGI13",138,0)
 ;               callback function (by reference) "as is"
"RTN","MAGGI13",139,0)
 ;
"RTN","MAGGI13",140,0)
 ; [MAG8FROM]    Date/time range for image selection. Parameter
"RTN","MAGGI13",141,0)
 ; [MAG8TO]      values should be valid date/times in internal or
"RTN","MAGGI13",142,0)
 ;               external FileMan format. If a parameter is not
"RTN","MAGGI13",143,0)
 ;               defined or empty, then the range remains open on
"RTN","MAGGI13",144,0)
 ;               the corresponding side.
"RTN","MAGGI13",145,0)
 ;
"RTN","MAGGI13",146,0)
 ;               The beginning of the date/time range is included
"RTN","MAGGI13",147,0)
 ;               the search but the end is not! For example, if you
"RTN","MAGGI13",148,0)
 ;               need images for October 15, 2007, the internal
"RTN","MAGGI13",149,0)
 ;               parameter values should be 3071015 and 3071016.
"RTN","MAGGI13",150,0)
 ;
"RTN","MAGGI13",151,0)
 ;               If the MAG8FROM is after the MAG8TO, then values
"RTN","MAGGI13",152,0)
 ;               of the parameters are swapped.
"RTN","MAGGI13",153,0)
 ;
"RTN","MAGGI13",154,0)
 ; [DFN]         Patient IEN (DFN). If this parameter is defined and
"RTN","MAGGI13",155,0)
 ;               greater than 0, then only images associated with this
"RTN","MAGGI13",156,0)
 ;               patient are processed.
"RTN","MAGGI13",157,0)
 ;
"RTN","MAGGI13",158,0)
 ; Return Values
"RTN","MAGGI13",159,0)
 ; =============
"RTN","MAGGI13",160,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI13",161,0)
 ;            0  All appropriate image records have been processed
"RTN","MAGGI13",162,0)
 ;           >0  Value returned by the callback function when it
"RTN","MAGGI13",163,0)
 ;               terminated the query
"RTN","MAGGI13",164,0)
 ;
"RTN","MAGGI13",165,0)
 ; Notes
"RTN","MAGGI13",166,0)
 ; =====
"RTN","MAGGI13",167,0)
 ;
"RTN","MAGGI13",168,0)
 ; Temporary global node ^TMP($J,"MAGGI13") is used by this function.
"RTN","MAGGI13",169,0)
 ;
"RTN","MAGGI13",170,0)
QUERY(CALLBACK,FLAGS,MAG8DATA,MAG8FROM,MAG8TO,DFN) ;
"RTN","MAGGI13",171,0)
 N MAG8BOTH,MAG8CALL,MAG8DT,MAG8IEN,MAG8RC,MAG8ROOT,MAG8XREF,TMP
"RTN","MAGGI13",172,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGGI13",173,0)
 ;=== Validate parameters
"RTN","MAGGI13",174,0)
 Q:'(CALLBACK?2"$"1.8UN1"^MAG"1.5UN) $$IPVE^MAGUERR("CALLBACK")
"RTN","MAGGI13",175,0)
 ;--- If a patient IEN is provided, it must be valid
"RTN","MAGGI13",176,0)
 I $G(DFN)>0,'$$VALDFN^MAGUTL05(DFN,.TMP)  D STORE^MAGUERR(TMP)  Q TMP
"RTN","MAGGI13",177,0)
 ;--- Unknown/Unsupported flag(s)
"RTN","MAGGI13",178,0)
 Q:$TR(FLAGS,"CDE")'="" $$IPVE^MAGUERR("FLAGS")
"RTN","MAGGI13",179,0)
 ;--- Missing required flag
"RTN","MAGGI13",180,0)
 Q:$TR(FLAGS,"DE")=FLAGS $$ERROR^MAGUERR(-6,,"D,E")
"RTN","MAGGI13",181,0)
 ;
"RTN","MAGGI13",182,0)
 ;=== The expression in the following line does not look like
"RTN","MAGGI13",183,0)
 ;    (FLAGS["E")&(FLAGS["D") because a group header that is
"RTN","MAGGI13",184,0)
 ;=== not marked as deleted can reference deleted "children".
"RTN","MAGGI13",185,0)
 S MAG8BOTH=(FLAGS["D")
"RTN","MAGGI13",186,0)
 S TMP=$S(FLAGS["E":2005,1:2005.1),MAG8ROOT=$NA(^MAG(TMP))
"RTN","MAGGI13",187,0)
 S TMP=$$DDQ^MAGUTL05(FLAGS)
"RTN","MAGGI13",188,0)
 S MAG8CALL="S MAG8RC="_CALLBACK_"(MAG8IEN,"_TMP_",.MAG8DATA)"
"RTN","MAGGI13",189,0)
 S MAG8RC=0
"RTN","MAGGI13",190,0)
 ;
"RTN","MAGGI13",191,0)
 ;=== Browse images in the capture date range
"RTN","MAGGI13",192,0)
 I FLAGS["C"  D  Q MAG8RC
"RTN","MAGGI13",193,0)
 . ;--- Modify the callback to check for patient
"RTN","MAGGI13",194,0)
 . S:$G(DFN)>0 $E(MAG8CALL,1)="S:$$PTCHK(MAG8IEN,"_DFN_")"
"RTN","MAGGI13",195,0)
 . ;---
"RTN","MAGGI13",196,0)
 . S MAG8XREF=$NA(@MAG8ROOT@("AD"))
"RTN","MAGGI13",197,0)
 . S MAG8DT=MAG8TO
"RTN","MAGGI13",198,0)
 . F  S MAG8DT=$$MAGORD($NA(@MAG8XREF@(MAG8DT)),-1,MAG8BOTH)  Q:(MAG8DT="")!(MAG8DT<MAG8FROM)  D  Q:MAG8RC
"RTN","MAGGI13",199,0)
 . . S MAG8IEN=""
"RTN","MAGGI13",200,0)
 . . F  D  Q:MAG8IEN=""  X MAG8CALL  Q:MAG8RC
"RTN","MAGGI13",201,0)
 . . . S MAG8IEN=$$MAGORD($NA(@MAG8XREF@(MAG8DT,MAG8IEN)),-1,MAG8BOTH)
"RTN","MAGGI13",202,0)
 . . . Q
"RTN","MAGGI13",203,0)
 . . Q
"RTN","MAGGI13",204,0)
 . Q
"RTN","MAGGI13",205,0)
 ;
"RTN","MAGGI13",206,0)
 ;=== Browse images in the procedure date range; single patient
"RTN","MAGGI13",207,0)
 I $G(DFN)>0  D  Q MAG8RC
"RTN","MAGGI13",208,0)
 . N MAG8DT1,MAG8DT2,MAG8PRX,MAG8TMP
"RTN","MAGGI13",209,0)
 . S MAG8XREF=$NA(@MAG8ROOT@("APDTPX",+DFN))
"RTN","MAGGI13",210,0)
 . S MAG8TMP=$NA(^TMP("MAGGI13",$J))
"RTN","MAGGI13",211,0)
 . ;--- "Invert" the dates
"RTN","MAGGI13",212,0)
 . S MAG8DT1=$$INVDT(MAG8TO),MAG8DT2=$$INVDT(MAG8FROM)
"RTN","MAGGI13",213,0)
 . ;---
"RTN","MAGGI13",214,0)
 . S MAG8DT=MAG8DT1
"RTN","MAGGI13",215,0)
 . F  S MAG8DT=$$MAGORD($NA(@MAG8XREF@(MAG8DT)),1,MAG8BOTH)  Q:(MAG8DT="")!(MAG8DT>MAG8DT2)  D  Q:MAG8RC
"RTN","MAGGI13",216,0)
 . . K @MAG8TMP
"RTN","MAGGI13",217,0)
 . . ;--- Merge IEN lists from both files
"RTN","MAGGI13",218,0)
 . . S MAG8PRX=""
"RTN","MAGGI13",219,0)
 . . F  S MAG8PRX=$$MAGORD($NA(@MAG8XREF@(MAG8DT,MAG8PRX)),1,MAG8BOTH)  Q:MAG8PRX=""  D
"RTN","MAGGI13",220,0)
 . . . S MAG8IEN=""
"RTN","MAGGI13",221,0)
 . . . F  S MAG8IEN=$$MAGORD($NA(@MAG8XREF@(MAG8DT,MAG8PRX,MAG8IEN)),1,MAG8BOTH)  Q:MAG8IEN=""  D
"RTN","MAGGI13",222,0)
 . . . . S @MAG8TMP@(MAG8IEN)=""
"RTN","MAGGI13",223,0)
 . . . . Q
"RTN","MAGGI13",224,0)
 . . ;--- Browse the list and select the images
"RTN","MAGGI13",225,0)
 . . S MAG8IEN=""
"RTN","MAGGI13",226,0)
 . . F  D  Q:MAG8IEN'>0  X MAG8CALL  Q:MAG8RC
"RTN","MAGGI13",227,0)
 . . . S MAG8IEN=$O(@MAG8TMP@(MAG8IEN),-1)
"RTN","MAGGI13",228,0)
 . . . Q
"RTN","MAGGI13",229,0)
 . . Q
"RTN","MAGGI13",230,0)
 . ;---
"RTN","MAGGI13",231,0)
 . K @MAG8TMP
"RTN","MAGGI13",232,0)
 . Q
"RTN","MAGGI13",233,0)
 ;
"RTN","MAGGI13",234,0)
 ;=== Browse images in the procedure date range; all patients
"RTN","MAGGI13",235,0)
 S MAG8XREF=$NA(@MAG8ROOT@("APDT"))
"RTN","MAGGI13",236,0)
 S MAG8DT=MAG8TO
"RTN","MAGGI13",237,0)
 F  S MAG8DT=$$MAGORD($NA(@MAG8XREF@(MAG8DT)),-1,MAG8BOTH)  Q:(MAG8DT="")!(MAG8DT<MAG8FROM)  D  Q:MAG8RC
"RTN","MAGGI13",238,0)
 . S MAG8IEN=""
"RTN","MAGGI13",239,0)
 . F  D  Q:MAG8IEN=""  X MAG8CALL  Q:MAG8RC
"RTN","MAGGI13",240,0)
 . . S MAG8IEN=$$MAGORD($NA(@MAG8XREF@(MAG8DT,MAG8IEN)),-1,MAG8BOTH)
"RTN","MAGGI13",241,0)
 . . Q
"RTN","MAGGI13",242,0)
 . Q
"RTN","MAGGI13",243,0)
 ;---
"RTN","MAGGI13",244,0)
 Q MAG8RC
"RTN","MAGGI14")
0^36^B39084079
"RTN","MAGGI14",1,0)
MAGGI14 ;WOIFO/SG - IMAGE FILE API (GROUP PROPERTIES) ; 5/1/09 2:48pm
"RTN","MAGGI14",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGI14",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGI14",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI14",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGI14",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGI14",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGI14",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGI14",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGI14",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGI14",11,0)
 ;; |                                                               |
"RTN","MAGGI14",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGI14",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGI14",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGI14",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGI14",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGI14",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGI14",18,0)
 ;;
"RTN","MAGGI14",19,0)
 Q
"RTN","MAGGI14",20,0)
 ;
"RTN","MAGGI14",21,0)
 ;##### FINDS REFERENCE TO "CHILD" IMAGE IN OBJECT GROUP MULTIPLE
"RTN","MAGGI14",22,0)
 ;
"RTN","MAGGI14",23,0)
 ; GRPIEN        Internal Entry Number of the group.
"RTN","MAGGI14",24,0)
 ;
"RTN","MAGGI14",25,0)
 ; IMGIEN        Internal Entry Number of the image.
"RTN","MAGGI14",26,0)
 ;
"RTN","MAGGI14",27,0)
 ; Return Values
"RTN","MAGGI14",28,0)
 ; =============
"RTN","MAGGI14",29,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI14",30,0)
 ;            0  The multiple does not reference the image
"RTN","MAGGI14",31,0)
 ;           >0  IEN of the record of the OBJECT GROUP multiple (#4)
"RTN","MAGGI14",32,0)
 ;               that references the image.
"RTN","MAGGI14",33,0)
 ;
"RTN","MAGGI14",34,0)
FINDCHLD(GRPIEN,IMGIEN) ;
"RTN","MAGGI14",35,0)
 N IEN,NODE,RC
"RTN","MAGGI14",36,0)
 S NODE=$$NODE^MAGGI11(GRPIEN,.RC)
"RTN","MAGGI14",37,0)
 I NODE=""  D STORE^MAGUERR(RC)  Q RC
"RTN","MAGGI14",38,0)
 S IEN=0
"RTN","MAGGI14",39,0)
 F  S IEN=$O(@NODE@(1,IEN))  Q:IEN'>0  Q:$P($G(^(IEN,0)),U)=IMGIEN
"RTN","MAGGI14",40,0)
 Q $S(IEN>0:IEN,1:0)
"RTN","MAGGI14",41,0)
 ;
"RTN","MAGGI14",42,0)
 ;##### RETURNS THE 1ST IMAGE OF THE GROUP
"RTN","MAGGI14",43,0)
 ;
"RTN","MAGGI14",44,0)
 ; GRPIEN        Internal Entry Number of the image record
"RTN","MAGGI14",45,0)
 ;
"RTN","MAGGI14",46,0)
 ; FLAGS         Flags that control the execution (can be combined):
"RTN","MAGGI14",47,0)
 ;
"RTN","MAGGI14",48,0)
 ;                 D  Consider deleted images (file #2005.1)
"RTN","MAGGI14",49,0)
 ;                 E  Consider existing images (file #2005)
"RTN","MAGGI14",50,0)
 ;
"RTN","MAGGI14",51,0)
 ;               If neither 'E' nor 'D' flag is provided, then an
"RTN","MAGGI14",52,0)
 ;               error code is returned.
"RTN","MAGGI14",53,0)
 ;
"RTN","MAGGI14",54,0)
 ; Return Values
"RTN","MAGGI14",55,0)
 ; =============
"RTN","MAGGI14",56,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI14",57,0)
 ;            0  Group contains no images of requested kind(s)
"RTN","MAGGI14",58,0)
 ;           >0  IEN of the 1st image of the group
"RTN","MAGGI14",59,0)
 ;
"RTN","MAGGI14",60,0)
 ; Notes
"RTN","MAGGI14",61,0)
 ; =====
"RTN","MAGGI14",62,0)
 ;
"RTN","MAGGI14",63,0)
 ; This function does not return an error code when it encounters an
"RTN","MAGGI14",64,0)
 ; invalid image reference in the OBJECT GROUP multiple (4); it just
"RTN","MAGGI14",65,0)
 ; skips the entry.
"RTN","MAGGI14",66,0)
 ;
"RTN","MAGGI14",67,0)
GRPCH1(GRPIEN,FLAGS) ;
"RTN","MAGGI14",68,0)
 N CH1IEN,ERR,I,IEN,NODE
"RTN","MAGGI14",69,0)
 S FLAGS=$G(FLAGS),CH1IEN=0
"RTN","MAGGI14",70,0)
 ;--- Unknown/Unsupported flag(s)
"RTN","MAGGI14",71,0)
 Q:$TR(FLAGS,"DE")'="" $$IPVE^MAGUERR("FLAGS")
"RTN","MAGGI14",72,0)
 ;--- Missing required flag
"RTN","MAGGI14",73,0)
 Q:$TR(FLAGS,"DE")=FLAGS $$ERROR^MAGUERR(-6,,"D,E")
"RTN","MAGGI14",74,0)
 ;
"RTN","MAGGI14",75,0)
 ;--- Get the global node of the record
"RTN","MAGGI14",76,0)
 S NODE=$$NODE^MAGGI11(GRPIEN,.ERR)
"RTN","MAGGI14",77,0)
 I NODE=""  D STORE^MAGUERR(ERR)  Q ERR
"RTN","MAGGI14",78,0)
 ;
"RTN","MAGGI14",79,0)
 ;--- Check the existing (non-deleted) group memebers
"RTN","MAGGI14",80,0)
 I FLAGS["E"  D  I IEN>0  S:'CH1IEN!(IEN<CH1IEN) CH1IEN=IEN
"RTN","MAGGI14",81,0)
 . S (I,IEN)=0
"RTN","MAGGI14",82,0)
 . F  S I=$O(@NODE@(1,I))  Q:I'>0  D  Q:IEN>0
"RTN","MAGGI14",83,0)
 . . S IEN=+@NODE@(1,I,0)  ; OBJECT GROUP (.01)
"RTN","MAGGI14",84,0)
 . . I IEN>0,$D(^MAG(2005,IEN))>1  Q
"RTN","MAGGI14",85,0)
 . . S IEN=0  ; Skip the bad entry
"RTN","MAGGI14",86,0)
 . . Q
"RTN","MAGGI14",87,0)
 . Q
"RTN","MAGGI14",88,0)
 ;
"RTN","MAGGI14",89,0)
 ;--- Check the deleted group memebers
"RTN","MAGGI14",90,0)
 I FLAGS["D"  D  I IEN>0  S:'CH1IEN!(IEN<CH1IEN) CH1IEN=IEN
"RTN","MAGGI14",91,0)
 . S IEN=0
"RTN","MAGGI14",92,0)
 . F  D  Q:IEN'>0  Q:$D(^MAG(2005,IEN))>1
"RTN","MAGGI14",93,0)
 . . S IEN=$O(^MAG(2005,"AGPD",GRPIEN,IEN))
"RTN","MAGGI14",94,0)
 . . Q
"RTN","MAGGI14",95,0)
 . ;~~~ Delete this comment and the following lines of code when
"RTN","MAGGI14",96,0)
 . ;~~~ the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGI14",97,0)
 . Q:IEN>0
"RTN","MAGGI14",98,0)
 . S IEN=0
"RTN","MAGGI14",99,0)
 . F  D  Q:IEN'>0  Q:$D(^MAG(2005.1,IEN))>1
"RTN","MAGGI14",100,0)
 . . S IEN=$O(^MAG(2005.1,"AGP",GRPIEN,IEN))
"RTN","MAGGI14",101,0)
 . . Q
"RTN","MAGGI14",102,0)
 . ;~~~
"RTN","MAGGI14",103,0)
 . Q
"RTN","MAGGI14",104,0)
 ;
"RTN","MAGGI14",105,0)
 ;---
"RTN","MAGGI14",106,0)
 Q CH1IEN
"RTN","MAGGI14",107,0)
 ;
"RTN","MAGGI14",108,0)
 ;##### RETURNS NUMBERS OF IMAGES AND PAGES IN THE GROUP
"RTN","MAGGI14",109,0)
 ;
"RTN","MAGGI14",110,0)
 ; GRPIEN        Internal Entry Number of the image record
"RTN","MAGGI14",111,0)
 ;
"RTN","MAGGI14",112,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGGI14",113,0)
 ;
"RTN","MAGGI14",114,0)
 ;                 P  Include page counts (see the NUMBER OF PAGES
"RTN","MAGGI14",115,0)
 ;                    field (114) for details).
"RTN","MAGGI14",116,0)
 ;
"RTN","MAGGI14",117,0)
 ;                 S  Return image counts grouped by image status in
"RTN","MAGGI14",118,0)
 ;                    the array defined by the DETAILS parameter.
"RTN","MAGGI14",119,0)
 ;
"RTN","MAGGI14",120,0)
 ;                 U  Return image counts grouped by users in
"RTN","MAGGI14",121,0)
 ;                    the array defined by the DETAILS parameter.
"RTN","MAGGI14",122,0)
 ;
"RTN","MAGGI14",123,0)
 ; [.DETAILS]    Reference to a local array where detailed image
"RTN","MAGGI14",124,0)
 ;               counts are returned.
"RTN","MAGGI14",125,0)
 ;
"RTN","MAGGI14",126,0)
 ; DETAILS(
"RTN","MAGGI14",127,0)
 ;   "S",
"RTN","MAGGI14",128,0)
 ;     Status)   Counts of images with this internal value of the
"RTN","MAGGI14",129,0)
 ;               STATUS field (112). Zero subscript is used if the
"RTN","MAGGI14",130,0)
 ;               field is empty.
"RTN","MAGGI14",131,0)
 ;                 ^01: Number of existing entries
"RTN","MAGGI14",132,0)
 ;                 ^02: Number of deleted entries
"RTN","MAGGI14",133,0)
 ;                 ^03: Number of existing images (pages)
"RTN","MAGGI14",134,0)
 ;                 ^04: Number of deleted images (pages)
"RTN","MAGGI14",135,0)
 ;
"RTN","MAGGI14",136,0)
 ;               This list is compiled only if the "S" flag is
"RTN","MAGGI14",137,0)
 ;               provided (see the FLAGS parameter above).
"RTN","MAGGI14",138,0)
 ;   "U",
"RTN","MAGGI14",139,0)
 ;     UserIEN,  Counts of images captured by this user (see the
"RTN","MAGGI14",140,0)
 ;               IMAGE SAVE BY field (8). Zero subscript is used
"RTN","MAGGI14",141,0)
 ;               if the field is empty.
"RTN","MAGGI14",142,0)
 ;                 ^01: Number of existing entries
"RTN","MAGGI14",143,0)
 ;                 ^02: Number of deleted entries
"RTN","MAGGI14",144,0)
 ;                 ^03: Number of existing images (pages)
"RTN","MAGGI14",145,0)
 ;                 ^04: Number of deleted images (pages)
"RTN","MAGGI14",146,0)
 ;
"RTN","MAGGI14",147,0)
 ;       Status) Counts of images with this internal value of the
"RTN","MAGGI14",148,0)
 ;               STATUS field (112) captured by the user. Zero
"RTN","MAGGI14",149,0)
 ;               subscript is used if the field is empty.
"RTN","MAGGI14",150,0)
 ;                 ^01: Number of existing entries
"RTN","MAGGI14",151,0)
 ;                 ^02: Number of deleted entries
"RTN","MAGGI14",152,0)
 ;                 ^03: Number of existing images (pages)
"RTN","MAGGI14",153,0)
 ;                 ^04: Number of deleted images (pages)
"RTN","MAGGI14",154,0)
 ;
"RTN","MAGGI14",155,0)
 ;               This list is compiled only if the "U" flag is
"RTN","MAGGI14",156,0)
 ;               provided (see the FLAGS parameter above).
"RTN","MAGGI14",157,0)
 ;
"RTN","MAGGI14",158,0)
 ; Return Values
"RTN","MAGGI14",159,0)
 ; =============
"RTN","MAGGI14",160,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGGI14",161,0)
 ;          '<0  Numbers of images in the group
"RTN","MAGGI14",162,0)
 ;                 ^01: Number of existing entries
"RTN","MAGGI14",163,0)
 ;                 ^02: Number of deleted entries
"RTN","MAGGI14",164,0)
 ;                 ^03: Number of existing images (pages)
"RTN","MAGGI14",165,0)
 ;                 ^04: Number of deleted images (pages)
"RTN","MAGGI14",166,0)
 ;
"RTN","MAGGI14",167,0)
 ; Notes
"RTN","MAGGI14",168,0)
 ; =====
"RTN","MAGGI14",169,0)
 ;
"RTN","MAGGI14",170,0)
 ; Pieces 3 and 4 of the function result and nodes of the DETAILS are 
"RTN","MAGGI14",171,0)
 ; populated only if the P flag is provided (see the FLAGS parameter).
"RTN","MAGGI14",172,0)
 ;
"RTN","MAGGI14",173,0)
 ; This function does not return an error code when it encounters an
"RTN","MAGGI14",174,0)
 ; invalid image reference in the OBJECT GROUP multiple (4); it just
"RTN","MAGGI14",175,0)
 ; skips the entry.
"RTN","MAGGI14",176,0)
 ;
"RTN","MAGGI14",177,0)
GRPCT(GRPIEN,FLAGS,DETAILS) ;
"RTN","MAGGI14",178,0)
 N I,IEN,MAGF,NT,TMP,TOTALS
"RTN","MAGGI14",179,0)
 K DETAILS("S"),DETAILS("U")
"RTN","MAGGI14",180,0)
 ;--- Validate control flags
"RTN","MAGGI14",181,0)
 S FLAGS=$G(FLAGS),NT=2
"RTN","MAGGI14",182,0)
 Q:$TR(FLAGS,"PSU")'="" $$IPVE^MAGUERR("FLAGS")
"RTN","MAGGI14",183,0)
 S:FLAGS["P" MAGF("P")="",NT=4
"RTN","MAGGI14",184,0)
 S:FLAGS["S" MAGF("D","S")=""
"RTN","MAGGI14",185,0)
 S:FLAGS["U" MAGF("D","U")=""
"RTN","MAGGI14",186,0)
 ;--- Validate the record IEN
"RTN","MAGGI14",187,0)
 I '$$ISVALID^MAGGI11(GRPIEN,.TMP)  D STORE^MAGUERR(TMP)  Q TMP
"RTN","MAGGI14",188,0)
 ;
"RTN","MAGGI14",189,0)
 ;--- Count existing (non-deleted) members and pages
"RTN","MAGGI14",190,0)
 I $D(MAGF)>1  D
"RTN","MAGGI14",191,0)
 . N CHIEN
"RTN","MAGGI14",192,0)
 . S CHIEN=0
"RTN","MAGGI14",193,0)
 . F  S CHIEN=$O(^MAG(2005,GRPIEN,1,CHIEN))  Q:CHIEN'>0  D
"RTN","MAGGI14",194,0)
 . . S IEN=+$G(^MAG(2005,GRPIEN,1,CHIEN,0))  ; OBJECT GROUP (.01)
"RTN","MAGGI14",195,0)
 . . Q:IEN'>0  Q:$D(^MAG(2005,IEN))<10
"RTN","MAGGI14",196,0)
 . . S TOTALS(1)=$G(TOTALS(1))+1
"RTN","MAGGI14",197,0)
 . . D GRPCT1(2005,IEN,1)
"RTN","MAGGI14",198,0)
 . . Q
"RTN","MAGGI14",199,0)
 . Q
"RTN","MAGGI14",200,0)
 E  D
"RTN","MAGGI14",201,0)
 . S TOTALS(1)=+$P($G(^MAG(2005,GRPIEN,1,0)),U,4)
"RTN","MAGGI14",202,0)
 . Q
"RTN","MAGGI14",203,0)
 ;
"RTN","MAGGI14",204,0)
 ;--- Count deleted members and pages
"RTN","MAGGI14",205,0)
 S IEN=0
"RTN","MAGGI14",206,0)
 F  S IEN=$O(^MAG(2005,"AGPD",GRPIEN,IEN))  Q:IEN'>0  D
"RTN","MAGGI14",207,0)
 . Q:$D(^MAG(2005,IEN))<10
"RTN","MAGGI14",208,0)
 . S TOTALS(2)=$G(TOTALS(2))+1
"RTN","MAGGI14",209,0)
 . D:$D(MAGF)>1 GRPCT1(2005,IEN,2)
"RTN","MAGGI14",210,0)
 . Q
"RTN","MAGGI14",211,0)
 ;
"RTN","MAGGI14",212,0)
 ;~~~ Delete this comment and the following lines of code when
"RTN","MAGGI14",213,0)
 ;~~~ the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGI14",214,0)
 S IEN=0
"RTN","MAGGI14",215,0)
 F  S IEN=$O(^MAG(2005.1,"AGP",GRPIEN,IEN))  Q:IEN'>0  D
"RTN","MAGGI14",216,0)
 . Q:$D(^MAG(2005.1,IEN))<10
"RTN","MAGGI14",217,0)
 . S TOTALS(2)=$G(TOTALS(2))+1
"RTN","MAGGI14",218,0)
 . D:$D(MAGF)>1 GRPCT1(2005.1,IEN,2)
"RTN","MAGGI14",219,0)
 . Q
"RTN","MAGGI14",220,0)
 ;
"RTN","MAGGI14",221,0)
 ;--- Calculate users' totals
"RTN","MAGGI14",222,0)
 D:$D(MAGF("D","U"))
"RTN","MAGGI14",223,0)
 . N STC,USRIEN
"RTN","MAGGI14",224,0)
 . S USRIEN=""
"RTN","MAGGI14",225,0)
 . F  S USRIEN=$O(DETAILS("U",USRIEN))  Q:USRIEN=""  D
"RTN","MAGGI14",226,0)
 . . S STC=""  K TMP
"RTN","MAGGI14",227,0)
 . . F  S STC=$O(DETAILS("U",USRIEN,STC))  Q:STC=""  D
"RTN","MAGGI14",228,0)
 . . . S TMP=DETAILS("U",USRIEN,STC)
"RTN","MAGGI14",229,0)
 . . . F I=1:1:NT  S TMP(I)=$G(TMP(I))+$P(TMP,U,I)
"RTN","MAGGI14",230,0)
 . . . Q
"RTN","MAGGI14",231,0)
 . . F I=1:1:NT  S $P(DETAILS("U",USRIEN),U,I)=+$G(TMP(I))
"RTN","MAGGI14",232,0)
 . . Q
"RTN","MAGGI14",233,0)
 . Q
"RTN","MAGGI14",234,0)
 ;
"RTN","MAGGI14",235,0)
 ;--- Return group totals
"RTN","MAGGI14",236,0)
 S TMP=""
"RTN","MAGGI14",237,0)
 F I=1:1:NT  S $P(TMP,U,I)=+$G(TOTALS(I))
"RTN","MAGGI14",238,0)
 Q TMP
"RTN","MAGGI14",239,0)
 ;
"RTN","MAGGI14",240,0)
 ;+++++ DETAILED COUNTS FOR THE IMAGE
"RTN","MAGGI14",241,0)
 ;
"RTN","MAGGI14",242,0)
 ; FILE          File number (2005 or 2005.1)
"RTN","MAGGI14",243,0)
 ; IEN           IEN of the image entry
"RTN","MAGGI14",244,0)
 ; CP            Piece number for the entry count (1 or 2)
"RTN","MAGGI14",245,0)
 ;
"RTN","MAGGI14",246,0)
 ; Input Variables
"RTN","MAGGI14",247,0)
 ; ===============
"RTN","MAGGI14",248,0)
 ;   DETAILS, MAGF, TOTALS
"RTN","MAGGI14",249,0)
 ;
"RTN","MAGGI14",250,0)
 ; Output Variables
"RTN","MAGGI14",251,0)
 ; ================
"RTN","MAGGI14",252,0)
 ;   DETAILS, TOTALS
"RTN","MAGGI14",253,0)
 ;
"RTN","MAGGI14",254,0)
GRPCT1(FILE,IEN,CP) ;
"RTN","MAGGI14",255,0)
 N NP,STC,TMP,USRIEN
"RTN","MAGGI14",256,0)
 ;--- Count the pages
"RTN","MAGGI14",257,0)
 D:$D(MAGF("P"))
"RTN","MAGGI14",258,0)
 . S NP=+$P($G(^MAG(FILE,IEN,100)),U,10)  ; NUMBER OF PAGES (114)
"RTN","MAGGI14",259,0)
 . S:NP'>0 NP=1
"RTN","MAGGI14",260,0)
 . S TOTALS(CP+2)=$G(TOTALS(CP+2))+NP
"RTN","MAGGI14",261,0)
 . Q
"RTN","MAGGI14",262,0)
 ;--- Get the image status code for detailed counts
"RTN","MAGGI14",263,0)
 Q:$D(MAGF("D"))<10
"RTN","MAGGI14",264,0)
 S STC=+$$IMGST^MAGGI11(IEN,.TMP)  Q:TMP<0
"RTN","MAGGI14",265,0)
 ;--- Counts by image statuses
"RTN","MAGGI14",266,0)
 D:$D(MAGF("D","S"))
"RTN","MAGGI14",267,0)
 . S TMP=$G(DETAILS("S",STC))
"RTN","MAGGI14",268,0)
 . S $P(DETAILS("S",STC),U,CP)=$P(TMP,U,CP)+1
"RTN","MAGGI14",269,0)
 . S:$G(NP)>0 $P(DETAILS("S",STC),U,CP+2)=$P(TMP,U,CP+2)+NP
"RTN","MAGGI14",270,0)
 . Q
"RTN","MAGGI14",271,0)
 ;--- Counts by users
"RTN","MAGGI14",272,0)
 D:$D(MAGF("D","U"))
"RTN","MAGGI14",273,0)
 . S USRIEN=+$P($G(^MAG(FILE,IEN,2)),U,2)  ; IMAGE SAVE BY (8)
"RTN","MAGGI14",274,0)
 . S TMP=$G(DETAILS("U",USRIEN,STC))
"RTN","MAGGI14",275,0)
 . S $P(DETAILS("U",USRIEN,STC),U,CP)=$P(TMP,U,CP)+1
"RTN","MAGGI14",276,0)
 . S:$G(NP)>0 $P(DETAILS("U",USRIEN,STC),U,CP+2)=$P(TMP,U,CP+2)+NP
"RTN","MAGGI14",277,0)
 . Q
"RTN","MAGGI14",278,0)
 Q
"RTN","MAGGNTI")
0^38^B37753394
"RTN","MAGGNTI",1,0)
MAGGNTI ;WOIFO/GEK/SG - Imaging interface to TIU RPC Calls etc. ; 1/16/09 1:45pm
"RTN","MAGGNTI",2,0)
 ;;3.0;IMAGING;**10,8,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGNTI",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGNTI",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGNTI",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGNTI",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGNTI",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGNTI",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGNTI",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGNTI",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGNTI",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGNTI",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGNTI",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGNTI",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGNTI",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGNTI",17,0)
 ;;
"RTN","MAGGNTI",18,0)
 Q
"RTN","MAGGNTI",19,0)
FILE(MAGRY,MAGDA,TIUDA) ;RPC [MAG3 TIU IMAGE]
"RTN","MAGGNTI",20,0)
 ; Call to file TIU and Imaging Pointers
"RTN","MAGGNTI",21,0)
 ; TIU API to add image to TIU
"RTN","MAGGNTI",22,0)
 N X
"RTN","MAGGNTI",23,0)
 I $P(^TIU(8925,TIUDA,0),U,2)'=$P(^MAG(2005,MAGDA,0),U,7) S MAGRY="0^Patient Mismatch." Q
"RTN","MAGGNTI",24,0)
 D PUTIMAGE^TIUSRVPL(.MAGRY,TIUDA,MAGDA) ;
"RTN","MAGGNTI",25,0)
 I 'MAGRY Q
"RTN","MAGGNTI",26,0)
 ; Now SET the Parent fields in the Image File
"RTN","MAGGNTI",27,0)
 S $P(^MAG(2005,MAGDA,2),U,6,8)=8925_U_TIUDA_U_+MAGRY
"RTN","MAGGNTI",28,0)
 ; DONE.
"RTN","MAGGNTI",29,0)
 S MAGRY="1^Image pointer filed successfully"
"RTN","MAGGNTI",30,0)
 ; Now we save the PARENT ASSOCIATION Date/Time 
"RTN","MAGGNTI",31,0)
 D LINKDT^MAGGTU6(.X,MAGDA)
"RTN","MAGGNTI",32,0)
 Q
"RTN","MAGGNTI",33,0)
DATA(MAGRY,TIUDA) ;RPC [MAG3 TIU DATA FROM DA]
"RTN","MAGGNTI",34,0)
 ; Call to get TIU data from the TIUDA
"RTN","MAGGNTI",35,0)
 ; Return =     TIUDA^Document Type ^Document Date^DFN^Author DUZ
"RTN","MAGGNTI",36,0)
 ;
"RTN","MAGGNTI",37,0)
 S MAGRY=TIUDA_U_$$GET1^DIQ(8925,TIUDA,".01","E")_U_$$GET1^DIQ(8925,TIUDA,"1201","I")_U_$$GET1^DIQ(8925,TIUDA,".02","I")_U_$$GET1^DIQ(8925,TIUDA,"1202","I")_U
"RTN","MAGGNTI",38,0)
 Q
"RTN","MAGGNTI",39,0)
IMAGES(MAGRY,TIUDA) ;RPC [MAG3 CPRS TIU NOTE]
"RTN","MAGGNTI",40,0)
 ; Call to get all images for a given TIU DA
"RTN","MAGGNTI",41,0)
 ; We first get all Image IEN's breaking groups into separate images
"RTN","MAGGNTI",42,0)
 ; Then get Image Info for each one.
"RTN","MAGGNTI",43,0)
 ; MAGRY    -     Return array of Image Data entries
"RTN","MAGGNTI",44,0)
 ; MAGRY(0)    is   1 ^ message  if successful
"RTN","MAGGNTI",45,0)
 ;                  0 ^ Error message if error;
"RTN","MAGGNTI",46,0)
 ; TIUDA  is IEN in ^TIU(8925
"RTN","MAGGNTI",47,0)
 ;
"RTN","MAGGNTI",48,0)
 ; Call TIU API to get list of Image IEN's
"RTN","MAGGNTI",49,0)
 N MAGARR,CT,TCT,I,J,Z K ^TMP($J,"MAGGX")
"RTN","MAGGNTI",50,0)
 N DA,MAGQI,MAGNCHK,MAGXX,MAGRSLT
"RTN","MAGGNTI",51,0)
 N TIUDFN,MAGQUIT ; MAGQI 8/22/01
"RTN","MAGGNTI",52,0)
 ; MAGFILE is returned from MAGGTII
"RTN","MAGGNTI",53,0)
 ; 
"RTN","MAGGNTI",54,0)
 S MAGQUIT=0 ; MAGQI 8/22/01
"RTN","MAGGNTI",55,0)
 S TIUDFN=$P($G(^TIU(8925,TIUDA,0)),U,2) ;MAGQI 8/22/01
"RTN","MAGGNTI",56,0)
 I 'TIUDFN S MAGRY(0)="0^Invalid Patient DFN for Note ID: '"_TIUDA_"'"
"RTN","MAGGNTI",57,0)
 D GETILST^TIUSRVPL(.MAGARR,TIUDA)
"RTN","MAGGNTI",58,0)
 S CT=0,TCT=0
"RTN","MAGGNTI",59,0)
 ; Now get all images for all groups and single images.
"RTN","MAGGNTI",60,0)
 S I="" F  S I=$O(MAGARR(I)) Q:'I  S DA=MAGARR(I) D  ;Q:MAGQUIT
"RTN","MAGGNTI",61,0)
 . S Z=$$ISDELIMG(DA) I Z S TCT=TCT+1,MAGRY(TCT)="B2^"_Z Q
"RTN","MAGGNTI",62,0)
 . ; Check that array of images from selected TIUDA have 
"RTN","MAGGNTI",63,0)
 . ;     same patient's and valid backward pointers
"RTN","MAGGNTI",64,0)
 . I $P($G(^MAG(2005,DA,0)),U,7)'=TIUDFN S MAGQUIT=1,MAGNCHK="Patient Mismatch. TIU: "_TIUDA
"RTN","MAGGNTI",65,0)
 . I $P($G(^MAG(2005,DA,2)),U,7)'=TIUDA S MAGQUIT=1,MAGNCHK="Pointer Mismatch. TIU: "_TIUDA
"RTN","MAGGNTI",66,0)
 . I MAGQUIT S MAGXX=DA,MAGFILE=$$INFO^MAGGAII(MAGXX,"E") D  Q  ; D INFO^MAGGTII 
"RTN","MAGGNTI",67,0)
 . . ; remove the Abstract and Image File Names  ; 2/14/03 p8t14  remove c:\program files.  with   .\bmp\
"RTN","MAGGNTI",68,0)
 . . S $P(MAGFILE,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGNTI",69,0)
 . . ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGNTI",70,0)
 . . S $P(MAGFILE,U,6)=$S(($P(MAGFILE,U,6)'=11):"99",1:11)
"RTN","MAGGNTI",71,0)
 . . S $P(MAGFILE,U,10)="M"
"RTN","MAGGNTI",72,0)
 . . ;Send the error message
"RTN","MAGGNTI",73,0)
 . . S $P(MAGFILE,U,17)=MAGNCHK
"RTN","MAGGNTI",74,0)
 . . S TCT=TCT+1,MAGRY(TCT)="B2^"_MAGFILE
"RTN","MAGGNTI",75,0)
 . ;
"RTN","MAGGNTI",76,0)
 . I $O(^MAG(2005,DA,1,0)) D  Q
"RTN","MAGGNTI",77,0)
 . . ; Integrity check, if group is questionable, add it's ien to list, not it's 
"RTN","MAGGNTI",78,0)
 . . ;   children.  Later when list is looped through, it's $$INFO^MAGGAII(MAGXX,"E") will be in 
"RTN","MAGGNTI",79,0)
 . . ;   list.  Have to do this to allow other images in list from TIU to be processed.
"RTN","MAGGNTI",80,0)
 . . D CHK^MAGGSQI(.MAGQI,DA) I 'MAGQI(0) S CT=CT+1,^TMP($J,"MAGGX",CT)=DA Q
"RTN","MAGGNTI",81,0)
 . . S J=0 ; the following line needs to take only the first piece of the node - PMK 4/4/02
"RTN","MAGGNTI",82,0)
 . . F  S J=$O(^MAG(2005,DA,1,J)) Q:'J  S CT=CT+1,^TMP($J,"MAGGX",CT)=$P(^(J,0),"^")
"RTN","MAGGNTI",83,0)
 . S CT=CT+1
"RTN","MAGGNTI",84,0)
 . S ^TMP($J,"MAGGX",CT)=DA
"RTN","MAGGNTI",85,0)
 ; Now get image info for each image
"RTN","MAGGNTI",86,0)
 ;
"RTN","MAGGNTI",87,0)
 S Z=""
"RTN","MAGGNTI",88,0)
 S MAGQUIET=1
"RTN","MAGGNTI",89,0)
 F  S Z=$O(^TMP($J,"MAGGX",Z)) Q:Z=""  D
"RTN","MAGGNTI",90,0)
 . S TCT=TCT+1,MAGXX=^TMP($J,"MAGGX",Z)
"RTN","MAGGNTI",91,0)
 . ;GEK 8/24/00 Stopping the Invalid Image IEN's and Deleted Images
"RTN","MAGGNTI",92,0)
 . I '$D(^MAG(2005,MAGXX)) D  Q
"RTN","MAGGNTI",93,0)
 . . D INVALID^MAGGTIG(MAGXX,.MAGRSLT) S MAGRY(CT)=MAGRSLT
"RTN","MAGGNTI",94,0)
 . ;D INFO^MAGGTII
"RTN","MAGGNTI",95,0)
 . S MAGFILE=$$INFO^MAGGAII(MAGXX,"E")
"RTN","MAGGNTI",96,0)
 . S MAGRY(TCT)="B2^"_MAGFILE
"RTN","MAGGNTI",97,0)
 K MAGQUIET
"RTN","MAGGNTI",98,0)
 S MAGRY(0)=TCT_"^"_TCT_" Images for the selected TIU NOTE"
"RTN","MAGGNTI",99,0)
 ; Put the Image IEN of the last image into the group IEN field.
"RTN","MAGGNTI",100,0)
 Q:'TCT
"RTN","MAGGNTI",101,0)
 S $P(MAGRY(0),U,3)=TIUDA
"RTN","MAGGNTI",102,0)
 K MAGRSLT
"RTN","MAGGNTI",103,0)
 D DATA(.MAGRSLT,TIUDA)
"RTN","MAGGNTI",104,0)
 S $P(MAGRY(0),U,4)=$$GET1^DIQ(8925,TIUDA,".02","E")_"  "_$P(MAGRSLT,U,2)_"  "_$$FMTE^XLFDT($P(MAGRSLT,U,3),"8")
"RTN","MAGGNTI",105,0)
 ;
"RTN","MAGGNTI",106,0)
 S $P(MAGRY(0),U,5)=$S($P($G(MAGFILE),U):$P(MAGFILE,U),$G(MAGXX):MAGXX,1:0)
"RTN","MAGGNTI",107,0)
 Q
"RTN","MAGGNTI",108,0)
 ;
"RTN","MAGGNTI",109,0)
ISDELIMG(MAGIEN) ; Is this a deleted Image.
"RTN","MAGGNTI",110,0)
 N ERR,MAGR,MAGT,Z
"RTN","MAGGNTI",111,0)
 ;--- Check the image status
"RTN","MAGGNTI",112,0)
 I '$$ISDEL^MAGGI11(MAGIEN,.ERR)  D  Q:$G(MAGT)="" MAGR
"RTN","MAGGNTI",113,0)
 . I ERR'<0    S MAGR="0^Valid Image"  Q
"RTN","MAGGNTI",114,0)
 . I +ERR=-43  S MAGR="0^Image IEN exists, and is Deleted !"  Q
"RTN","MAGGNTI",115,0)
 . S MAGR="Invalid Image pointer",MAGT=67
"RTN","MAGGNTI",116,0)
 . Q
"RTN","MAGGNTI",117,0)
 E  S MAGR="Deleted Image",MAGT=66
"RTN","MAGGNTI",118,0)
 ;--- Special processing for deleted images and errors
"RTN","MAGGNTI",119,0)
 S $P(Z,U,1,4)=MAGIEN_U_"-1~"_MAGR_U_"-1~"_MAGR_U_MAGR
"RTN","MAGGNTI",120,0)
 S $P(Z,U,6)=MAGT
"RTN","MAGGNTI",121,0)
 ;--- This stops client from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGNTI",122,0)
 S $P(Z,U,10)="M"
"RTN","MAGGNTI",123,0)
 ;--- Return the error message
"RTN","MAGGNTI",124,0)
 S $P(Z,U,17)=$P(MAGR,U,2)
"RTN","MAGGNTI",125,0)
 Q Z
"RTN","MAGGNTI",126,0)
 ;
"RTN","MAGGNTI",127,0)
ISDOCCL(MAGRY,IEN,TIUFILE,CLASS) ;RPC [MAGG IS DOC CLASS]
"RTN","MAGGNTI",128,0)
 ;Checks to see if IEN of TIU Files 8925 or 8925.1 is of a certain Doc Class 
"RTN","MAGGNTI",129,0)
 ;MAGRY  = Return String  
"RTN","MAGGNTI",130,0)
 ;                 for Success   "1^message"
"RTN","MAGGNTI",131,0)
 ;                 for Failure   "0^message"
"RTN","MAGGNTI",132,0)
 ;IEN    = Internal Entry Number in the TIUFILE
"RTN","MAGGNTI",133,0)
 ;TIUFILE = either 8925   if we need to see if a Note is of a Document Class 
"RTN","MAGGNTI",134,0)
 ;            or   8925.1 if we need to see if a Title is of a Document Class
"RTN","MAGGNTI",135,0)
 ;CLASS  = Text Name of the Document Class   example: "ADVANCE DIRECTIVE"
"RTN","MAGGNTI",136,0)
 ;
"RTN","MAGGNTI",137,0)
 S MAGRY="0^Unknown Error checking TIU Document Class"
"RTN","MAGGNTI",138,0)
 K MAGTRGT,DEFIEN,DOCCL,RES,DONE,NTTL
"RTN","MAGGNTI",139,0)
 S DONE=0
"RTN","MAGGNTI",140,0)
 ; If we're resolving a Title
"RTN","MAGGNTI",141,0)
 I TIUFILE="8925.1" D  Q:DONE
"RTN","MAGGNTI",142,0)
 . S DEFIEN=IEN,NTTL="Title"
"RTN","MAGGNTI",143,0)
 . I '$D(^TIU(8925.1,DEFIEN,0)) S MAGRY="0^Invalid Title IEN",DONE=1 Q
"RTN","MAGGNTI",144,0)
 . Q
"RTN","MAGGNTI",145,0)
 ; If we're resolving a Note
"RTN","MAGGNTI",146,0)
 I TIUFILE="8925" D  Q:DONE
"RTN","MAGGNTI",147,0)
 . S NTTL="Note"
"RTN","MAGGNTI",148,0)
 . I '$D(^TIU(8925,IEN)) S MAGRY="0^Invalid Note IEN",DONE=1 Q
"RTN","MAGGNTI",149,0)
 . ; Get Title IEN from Note IEN
"RTN","MAGGNTI",150,0)
 . S DEFIEN=$$GET1^DIQ(8925,IEN_",",.01,"I")
"RTN","MAGGNTI",151,0)
 . I DEFIEN="" S MAGRY="0^Error resolving Document Class from Note IEN" S DONE=1 Q
"RTN","MAGGNTI",152,0)
 . Q
"RTN","MAGGNTI",153,0)
 ;
"RTN","MAGGNTI",154,0)
 ; Find the IEN in 8925.1 for Document Class (CLASS) 
"RTN","MAGGNTI",155,0)
 D FIND^DIC(8925.1,"","@;.001","X",CLASS,"","","I $P(^(0),U,4)=""DC""","","MAGTRGT")
"RTN","MAGGNTI",156,0)
 S DOCCL=$G(MAGTRGT("DILIST",2,1))
"RTN","MAGGNTI",157,0)
 ;
"RTN","MAGGNTI",158,0)
 ; See if ^TIU(8925.1,DEFIEN is of Document Class DOCCL
"RTN","MAGGNTI",159,0)
 S RES=$$ISA^TIULX(DEFIEN,DOCCL)
"RTN","MAGGNTI",160,0)
 I RES S MAGRY="1^The "_NTTL_" is of Document Class "_CLASS Q
"RTN","MAGGNTI",161,0)
 S MAGRY="0^The "_NTTL_" is Not of Document Class "_CLASS
"RTN","MAGGNTI",162,0)
 Q
"RTN","MAGGSFL1")
0^51^B17534133
"RTN","MAGGSFL1",1,0)
MAGGSFL1 ;WOIFO/GEK/SG - Image list Filters utilities ; 3/9/09 12:51pm
"RTN","MAGGSFL1",2,0)
 ;;3.0;IMAGING;**8,93**;Dec 02, 2009;Build 163
"RTN","MAGGSFL1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSFL1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFL1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSFL1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSFL1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSFL1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSFL1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSFL1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSFL1",11,0)
 ;; |                                                               |
"RTN","MAGGSFL1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSFL1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSFL1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSFL1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSFL1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSFL1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFL1",18,0)
 ;;
"RTN","MAGGSFL1",19,0)
 Q
"RTN","MAGGSFL1",20,0)
 ;
"RTN","MAGGSFL1",21,0)
 ;***** UPDATES/CREATES THE IMAGE FILTER DEFINITION
"RTN","MAGGSFL1",22,0)
 ; RPC: MAG4 FILTER SAVE
"RTN","MAGGSFL1",23,0)
 ;
"RTN","MAGGSFL1",24,0)
 ; .MAGRY        Reference to a local variable where the result
"RTN","MAGGSFL1",25,0)
 ;               is returned to.
"RTN","MAGGSFL1",26,0)
 ;
"RTN","MAGGSFL1",27,0)
 ; .MAGGZ        Reference to a local array that stores the filter
"RTN","MAGGSFL1",28,0)
 ;               data and related parameters.
"RTN","MAGGSFL1",29,0)
 ;
"RTN","MAGGSFL1",30,0)
 ; MAGZ(i)       Data item
"RTN","MAGGSFL1",31,0)
 ;                 ^01: Field number
"RTN","MAGGSFL1",32,0)
 ;                 ^02: Field value
"RTN","MAGGSFL1",33,0)
 ;
"RTN","MAGGSFL1",34,0)
 ;               The following special names can be used in place of
"RTN","MAGGSFL1",35,0)
 ;               field numbers:
"RTN","MAGGSFL1",36,0)
 ;
"RTN","MAGGSFL1",37,0)
 ;                 FLAGS - Value contains flags that control the
"RTN","MAGGSFL1",38,0)
 ;                         execution (can be combined):
"RTN","MAGGSFL1",39,0)
 ;
"RTN","MAGGSFL1",40,0)
 ;                           S  Selective save. If this flag is
"RTN","MAGGSFL1",41,0)
 ;                              provided, then only the fields listed
"RTN","MAGGSFL1",42,0)
 ;                              in the MAGZ array are updated; other
"RTN","MAGGSFL1",43,0)
 ;                              filter properties are not changed.
"RTN","MAGGSFL1",44,0)
 ;
"RTN","MAGGSFL1",45,0)
 ;                              By default, all filter properties,
"RTN","MAGGSFL1",46,0)
 ;                              which do not have new values in the
"RTN","MAGGSFL1",47,0)
 ;                              MAGZ array, are cleared.
"RTN","MAGGSFL1",48,0)
 ;
"RTN","MAGGSFL1",49,0)
 ;                 IEN   - Value is the Internal Entry Number of the
"RTN","MAGGSFL1",50,0)
 ;                         filter that has to be modified.
"RTN","MAGGSFL1",51,0)
 ;
"RTN","MAGGSFL1",52,0)
 ;                 USER  - Value is the IEN of the user who this
"RTN","MAGGSFL1",53,0)
 ;                         filter is saved for.
"RTN","MAGGSFL1",54,0)
 ; 
"RTN","MAGGSFL1",55,0)
 ; Return Values
"RTN","MAGGSFL1",56,0)
 ; =============
"RTN","MAGGSFL1",57,0)
 ;
"RTN","MAGGSFL1",58,0)
 ; In case of an error, the first ^-piece of the MAGRY contains 0, and
"RTN","MAGGSFL1",59,0)
 ; the second one - the error message.
"RTN","MAGGSFL1",60,0)
 ;
"RTN","MAGGSFL1",61,0)
 ; Otherwise, IEN of the filter is returned in 1st ^-piece, and the
"RTN","MAGGSFL1",62,0)
 ; filter name (value of the .01 field) - in the second one.
"RTN","MAGGSFL1",63,0)
 ;
"RTN","MAGGSFL1",64,0)
SET(MAGRY,MAGGZ) ;RPC [MAG4 FILTER SAVE]
"RTN","MAGGSFL1",65,0)
 N $ETRAP,$ESTACK,FLAGS,FLTIEN,FLTUSER,MAGGDA,MAGGDAT,MAGGFDA,MAGGFLD,MAGOK,MAGGXE,RES,Z
"RTN","MAGGSFL1",66,0)
 K MAGRY  S (FLTIEN,FLTUSER)=0,MAGOK=1,FLAGS=""
"RTN","MAGGSFL1",67,0)
 S MAGRY="0^Starting: Saving Filter..."
"RTN","MAGGSFL1",68,0)
 S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGSFL1",69,0)
 I $D(MAGGZ)<10  S MAGRY="0^No input data, Operation CANCELED"  Q
"RTN","MAGGSFL1",70,0)
 ;
"RTN","MAGGSFL1",71,0)
 ;--- Parse the parameters
"RTN","MAGGSFL1",72,0)
 S Z=""
"RTN","MAGGSFL1",73,0)
 F  S Z=$O(MAGGZ(Z))  Q:Z=""  D  Q:'MAGOK
"RTN","MAGGSFL1",74,0)
 . S MAGGFLD=$P(MAGGZ(Z),U),MAGGDAT=$P(MAGGZ(Z),U,2,99)
"RTN","MAGGSFL1",75,0)
 . I MAGGFLD=""!(MAGGDAT="")  D  Q
"RTN","MAGGSFL1",76,0)
 . . S MAGOK="0^Field and Value are Required"
"RTN","MAGGSFL1",77,0)
 . . Q
"RTN","MAGGSFL1",78,0)
 . I MAGGFLD="FLAGS"  S FLAGS=MAGGDAT  Q
"RTN","MAGGSFL1",79,0)
 . I MAGGFLD="IEN"  S FLTIEN=+MAGGDAT  D  Q
"RTN","MAGGSFL1",80,0)
 . . I FLTIEN>0,$D(^MAG(2005.87,FLTIEN))  Q
"RTN","MAGGSFL1",81,0)
 . . S MAGOK="0^Invalid Filter IEN: "_FLTIEN
"RTN","MAGGSFL1",82,0)
 . . Q
"RTN","MAGGSFL1",83,0)
 . I MAGGFLD="USER"  S FLTUSER=+MAGGDAT,MAGGFLD=20
"RTN","MAGGSFL1",84,0)
 . I '$$VALID^MAGGSIV1(2005.87,MAGGFLD,.MAGGDAT,.RES)  D  Q
"RTN","MAGGSFL1",85,0)
 . . S MAGOK="0^"_RES
"RTN","MAGGSFL1",86,0)
 . . Q
"RTN","MAGGSFL1",87,0)
 . S MAGGFDA(2005.87,"+1,",MAGGFLD)=MAGGDAT
"RTN","MAGGSFL1",88,0)
 . Q
"RTN","MAGGSFL1",89,0)
 I 'MAGOK  S MAGRY=MAGOK  Q
"RTN","MAGGSFL1",90,0)
 ;
"RTN","MAGGSFL1",91,0)
 ;--- Lock the file header
"RTN","MAGGSFL1",92,0)
 L +^MAG(2005.87,0):10  E  D  Q
"RTN","MAGGSFL1",93,0)
 . S MAGRY="0^The File Image List Filters is locked."
"RTN","MAGGSFL1",94,0)
 . S MAGRY=MAGRY_"  Operation canceled"
"RTN","MAGGSFL1",95,0)
 . Q
"RTN","MAGGSFL1",96,0)
 ;
"RTN","MAGGSFL1",97,0)
 I FLTIEN>0  D
"RTN","MAGGSFL1",98,0)
 . N IENS
"RTN","MAGGSFL1",99,0)
 . S IENS=FLTIEN_","
"RTN","MAGGSFL1",100,0)
 . ;--- Clear the old values if not requested otherwise.
"RTN","MAGGSFL1",101,0)
 . I FLAGS'["S"  F Z=1:1:16,20,21  S MAGGFDA(2005.87,IENS,Z)="@"
"RTN","MAGGSFL1",102,0)
 . M MAGGFDA(2005.87,IENS)=MAGGFDA(2005.87,"+1,")
"RTN","MAGGSFL1",103,0)
 . K MAGGFDA(2005.87,"+1,")
"RTN","MAGGSFL1",104,0)
 . ;--- Update the filter
"RTN","MAGGSFL1",105,0)
 . D FILE^DIE("","MAGGFDA","MAGGXE")
"RTN","MAGGSFL1",106,0)
 . I $D(DIERR)  D RTRNERR(.MAGRY)  Q
"RTN","MAGGSFL1",107,0)
 . S MAGRY=FLTIEN_U_$P(^MAG(2005.87,FLTIEN,0),U)
"RTN","MAGGSFL1",108,0)
 . Q
"RTN","MAGGSFL1",109,0)
 E  D
"RTN","MAGGSFL1",110,0)
 . N MAGGIEN
"RTN","MAGGSFL1",111,0)
 . S MAGGFDA(2005.87,"+1,",22)=DUZ
"RTN","MAGGSFL1",112,0)
 . ;--- Store the new filter
"RTN","MAGGSFL1",113,0)
 . D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGSFL1",114,0)
 . I $D(DIERR)  D RTRNERR(.MAGRY)  Q
"RTN","MAGGSFL1",115,0)
 . S MAGRY=MAGGIEN(1)_U_MAGGFDA(2005.87,"+1,",.01)
"RTN","MAGGSFL1",116,0)
 . Q
"RTN","MAGGSFL1",117,0)
 ;
"RTN","MAGGSFL1",118,0)
 ;--- Cleanup
"RTN","MAGGSFL1",119,0)
 L -^MAG(2005.87,0)
"RTN","MAGGSFL1",120,0)
 D CLEAN^DILF
"RTN","MAGGSFL1",121,0)
 Q
"RTN","MAGGSFL1",122,0)
 ;
"RTN","MAGGSFL1",123,0)
 ;+++++ RETURNS THE TEXT OF THE FILEMAN ERROR MESSAGE
"RTN","MAGGSFL1",124,0)
RTRNERR(ETXT) ;
"RTN","MAGGSFL1",125,0)
 N MAGRESA
"RTN","MAGGSFL1",126,0)
 D MSG^DIALOG("A",.MAGRESA,245,5,"MAGGXE")
"RTN","MAGGSFL1",127,0)
 S ETXT="0^"_MAGRESA(1)
"RTN","MAGGSFL1",128,0)
 D CLEAN^DILF
"RTN","MAGGSFL1",129,0)
 Q
"RTN","MAGGSFL1",130,0)
 ;
"RTN","MAGGSFL1",131,0)
 ;+++++ ERROR HANDLER
"RTN","MAGGSFL1",132,0)
ERR ;
"RTN","MAGGSFL1",133,0)
 N ERR
"RTN","MAGGSFL1",134,0)
 L -^MAG(2005.87,0)
"RTN","MAGGSFL1",135,0)
 S ERR=$$EC^%ZOSV
"RTN","MAGGSFL1",136,0)
 S (MAGRY,MAGOK)="0^Error Filter Add/Edit: "_ERR
"RTN","MAGGSFL1",137,0)
 D LOGERR^MAGGTERR(ERR)
"RTN","MAGGSFL1",138,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGSFL1",139,0)
 D CLEAN^DILF
"RTN","MAGGSFL1",140,0)
 Q
"RTN","MAGGSFLT")
0^48^B33107414
"RTN","MAGGSFLT",1,0)
MAGGSFLT ;WOIFO/GEK/SG - Image list Filters utilities ; 3/9/09 12:51pm
"RTN","MAGGSFLT",2,0)
 ;;3.0;IMAGING;**7,8,93**;Dec 02, 2009;Build 163
"RTN","MAGGSFLT",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSFLT",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFLT",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSFLT",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSFLT",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSFLT",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSFLT",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSFLT",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSFLT",11,0)
 ;; |                                                               |
"RTN","MAGGSFLT",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSFLT",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSFLT",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSFLT",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSFLT",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSFLT",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSFLT",18,0)
 ;;
"RTN","MAGGSFLT",19,0)
 Q
"RTN","MAGGSFLT",20,0)
 ;
"RTN","MAGGSFLT",21,0)
DEL(MAGRY,FLTIEN) ;RPC [MAG4 FILTER DELETE] DELETE A FILTER
"RTN","MAGGSFLT",22,0)
 N DIK,DA
"RTN","MAGGSFLT",23,0)
 S DIK="^MAG(2005.87,"
"RTN","MAGGSFLT",24,0)
 S DA=FLTIEN
"RTN","MAGGSFLT",25,0)
 D ^DIK
"RTN","MAGGSFLT",26,0)
 D CLEAN^DILF
"RTN","MAGGSFLT",27,0)
 S MAGRY="1^Deleted"
"RTN","MAGGSFLT",28,0)
 Q
"RTN","MAGGSFLT",29,0)
 ;
"RTN","MAGGSFLT",30,0)
GETLIST(MAGRY,USER,GETALL) ;RPC [MAG4 FILTER GET LIST] Return a list of filters for a USER
"RTN","MAGGSFLT",31,0)
 ; user = DUZ
"RTN","MAGGSFLT",32,0)
 ; if user = "" send list of public filters
"RTN","MAGGSFLT",33,0)
 ; if user > 0 and GETALL = 1 then send User Private and Public filters.
"RTN","MAGGSFLT",34,0)
 N I,MAGADMIN,MAGCLIN
"RTN","MAGGSFLT",35,0)
 K ^TMP($J,"MAGGSFLT","RES")
"RTN","MAGGSFLT",36,0)
 S USER=$G(USER)
"RTN","MAGGSFLT",37,0)
 S MAGRY(0)="0^Retrieving Filter list..."
"RTN","MAGGSFLT",38,0)
 ; we'll get public if getall or no user
"RTN","MAGGSFLT",39,0)
 D CLSKEYS(.MAGADMIN,.MAGCLIN)
"RTN","MAGGSFLT",40,0)
 I $G(GETALL)!('USER) D
"RTN","MAGGSFLT",41,0)
 . S I=""
"RTN","MAGGSFLT",42,0)
 . F  S I=$O(^MAG(2005.87,"D",1,I)) Q:I=""  D
"RTN","MAGGSFLT",43,0)
 . . I '$$HASKEY(I) Q  ; HERE HAVE TO USE DUZ, TO FILTER THE FILTERS BASED ON MAGDISP CLIN AND MAGDISP ADMIN
"RTN","MAGGSFLT",44,0)
 . . S ^TMP($J,"MAGGSFLT","RES",$P(^MAG(2005.87,I,0),"^",1)_"-"_I)=I_"^"_$P(^MAG(2005.87,I,0),"^",1)_"^"_$P(^MAG(2005.87,I,1),"^")
"RTN","MAGGSFLT",45,0)
 . . ;S MAGRY($O(MAGRY(""),-1)+1)=I_"^"_$P(^MAG(2005.87,I,0),"^",1)_"^"_$P(^MAG(2005.87,I,1),"^")
"RTN","MAGGSFLT",46,0)
 . . Q
"RTN","MAGGSFLT",47,0)
 I USER D
"RTN","MAGGSFLT",48,0)
 . S I=""
"RTN","MAGGSFLT",49,0)
 . F  S I=$O(^MAG(2005.87,"C",USER,I)) Q:I=""  D
"RTN","MAGGSFLT",50,0)
 . . I '$$HASKEY(I) Q
"RTN","MAGGSFLT",51,0)
 . . S ^TMP($J,"MAGGSFLT","RES",$P(^MAG(2005.87,I,0),"^",1)_"-"_I)=I_"^"_$P(^MAG(2005.87,I,0),"^",1)_"^"_$P(^MAG(2005.87,I,1),"^")
"RTN","MAGGSFLT",52,0)
 . . ;S MAGRY($O(MAGRY(""),-1)+1)=I_"^"_$P(^MAG(2005.87,I,0),"^",1)_"^"_$P(^MAG(2005.87,I,1),"^")
"RTN","MAGGSFLT",53,0)
 . . Q
"RTN","MAGGSFLT",54,0)
 ;S MAGRY(0)=$S($G(MAGRY(1)):$O(MAGRY(""),-1),1:"0^ERROR Retrieving Filter list.")
"RTN","MAGGSFLT",55,0)
 S MAGRY(0)=$S($D(^TMP($J,"MAGGSFLT","RES")):1,1:"0^ERROR Retrieving Filter list.")
"RTN","MAGGSFLT",56,0)
 I MAGRY(0) D
"RTN","MAGGSFLT",57,0)
 . ; we have a list of filters, send the default as Piece 1 in 0 node.
"RTN","MAGGSFLT",58,0)
 . S $P(MAGRY(0),"^",1)=$$DFTFLT(USER)
"RTN","MAGGSFLT",59,0)
 S I=""
"RTN","MAGGSFLT",60,0)
 F  S I=$O(^TMP($J,"MAGGSFLT","RES",I),-1) Q:I=""  D
"RTN","MAGGSFLT",61,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=^TMP($J,"MAGGSFLT","RES",I)
"RTN","MAGGSFLT",62,0)
 Q
"RTN","MAGGSFLT",63,0)
 ;
"RTN","MAGGSFLT",64,0)
HASKEY(IEN) ; True or False, Does user have Correct Key(s)(ADMIN and/or CLIN) to view this filter.
"RTN","MAGGSFLT",65,0)
 N CLS
"RTN","MAGGSFLT",66,0)
 S CLS=$P(^MAG(2005.87,IEN,0),"^",3)
"RTN","MAGGSFLT",67,0)
 I (CLS="") S CLS="CLIN,ADMIN" ; CLS="", now treat it as both.  (Might rethink, treat it as any ? )
"RTN","MAGGSFLT",68,0)
 I (CLS["ADMIN"),(CLS["CLIN") Q (MAGCLIN&MAGADMIN)
"RTN","MAGGSFLT",69,0)
 I (CLS["CLIN") Q MAGCLIN
"RTN","MAGGSFLT",70,0)
 I (CLS["ADMIN") Q MAGADMIN
"RTN","MAGGSFLT",71,0)
 Q 0
"RTN","MAGGSFLT",72,0)
 ;
"RTN","MAGGSFLT",73,0)
CLSKEYS(ADM,CLIN) ;
"RTN","MAGGSFLT",74,0)
 S (ADM,CLIN)=0
"RTN","MAGGSFLT",75,0)
 N I,MAGKEY
"RTN","MAGGSFLT",76,0)
 D USERKEYS^MAGGTU3(.MAGKEY)
"RTN","MAGGSFLT",77,0)
 S I="" F  S I=$O(MAGKEY(I)) Q:I=""  D
"RTN","MAGGSFLT",78,0)
 . I MAGKEY(I)="MAGDISP CLIN" S CLIN=1
"RTN","MAGGSFLT",79,0)
 . I MAGKEY(I)="MAGDISP ADMIN" S ADM=1
"RTN","MAGGSFLT",80,0)
 . Q
"RTN","MAGGSFLT",81,0)
 Q
"RTN","MAGGSFLT",82,0)
 ;
"RTN","MAGGSFLT",83,0)
GET(MAGRY,FLTIEN,FLTNAME,USER) ;RPC [MAG4 FILTER DETAILS] Return a filter
"RTN","MAGGSFLT",84,0)
 N FLTC,I,MAGV,X
"RTN","MAGGSFLT",85,0)
 K MAGRY
"RTN","MAGGSFLT",86,0)
 ;--- Validate parameters
"RTN","MAGGSFLT",87,0)
 I '$G(FLTIEN) S FLTIEN=$$RSLVIEN($G(FLTNAME),$G(USER))
"RTN","MAGGSFLT",88,0)
 I 'FLTIEN S MAGRY(0)="0^Can not resolve Filter name in VistA." Q
"RTN","MAGGSFLT",89,0)
 I '$D(^MAG(2005.87,FLTIEN))  D  Q
"RTN","MAGGSFLT",90,0)
 . S MAGRY(0)="0^Filter ID #"_FLTIEN_" Doesn't exist."
"RTN","MAGGSFLT",91,0)
 . Q
"RTN","MAGGSFLT",92,0)
 ;--- Load the filter data
"RTN","MAGGSFLT",93,0)
 S FLTC=FLTIEN_","
"RTN","MAGGSFLT",94,0)
 S MAGRY(0)="1^Filter "_$P(^MAG(2005.87,FLTIEN,0),"^",1)_" # "_FLTIEN
"RTN","MAGGSFLT",95,0)
 D GETS^DIQ(2005.87,FLTC,".01:16","EI","MAGV")
"RTN","MAGGSFLT",96,0)
 ;--- Reformat the dates (FROM and UNTIL)
"RTN","MAGGSFLT",97,0)
 F I=6,7  S X=$G(MAGV(2005.87,FLTC,I,"I"))  D:X'=""
"RTN","MAGGSFLT",98,0)
 . S MAGV(2005.87,FLTC,I,"E")=$$FMTE^XLFDT(X,"2Z")
"RTN","MAGGSFLT",99,0)
 . Q
"RTN","MAGGSFLT",100,0)
 ;--- Add the filter data to the result array
"RTN","MAGGSFLT",101,0)
 S MAGRY(1)=FLTIEN
"RTN","MAGGSFLT",102,0)
 F I=.01,1:1:9  S MAGRY(1)=MAGRY(1)_U_$G(MAGV(2005.87,FLTC,I,"E"))
"RTN","MAGGSFLT",103,0)
 F I=10:1:16  S MAGRY(1)=MAGRY(1)_U_$G(MAGV(2005.87,FLTC,I,"I"))
"RTN","MAGGSFLT",104,0)
 Q
"RTN","MAGGSFLT",105,0)
 ;
"RTN","MAGGSFLT",106,0)
RSLVIEN(NAME,USER) ; Return an IEN from the NAME and USER
"RTN","MAGGSFLT",107,0)
 N I,IEN S I=""
"RTN","MAGGSFLT",108,0)
 I NAME="" Q 0
"RTN","MAGGSFLT",109,0)
 S IEN=0
"RTN","MAGGSFLT",110,0)
 F  S I=$O(^MAG(2005.87,"B",NAME,I)) Q:'I  D
"RTN","MAGGSFLT",111,0)
 . I $P(^MAG(2005.87,I,1),"^")=USER S IEN=I
"RTN","MAGGSFLT",112,0)
 Q IEN
"RTN","MAGGSFLT",113,0)
 ;
"RTN","MAGGSFLT",114,0)
DFTFLT(USER) ; Create a Default Filter for user. Or Return Existing.
"RTN","MAGGSFLT",115,0)
 ;  Plus this call, makes sure the Default Filter is valid.
"RTN","MAGGSFLT",116,0)
 ; USER is the IEN in the New Person file
"RTN","MAGGSFLT",117,0)
 ;   default to DUZ if ""
"RTN","MAGGSFLT",118,0)
 N FLTIEN,XIEN
"RTN","MAGGSFLT",119,0)
 S USER=$S($G(USER):USER,1:$G(DUZ))
"RTN","MAGGSFLT",120,0)
 S XIEN=$O(^MAG(2006.18,"AC",USER,"")) Q:XIEN="" 0
"RTN","MAGGSFLT",121,0)
 S FLTIEN=$P($G(^MAG(2006.18,XIEN,"LISTWIN1")),"^",3)
"RTN","MAGGSFLT",122,0)
 I FLTIEN D  Q FLTIEN
"RTN","MAGGSFLT",123,0)
 . I $D(^MAG(2005.87,FLTIEN)) Q  ; Valid filter Quit.
"RTN","MAGGSFLT",124,0)
 . ; Users dflt filter invalid. Set dflt as first private or first public
"RTN","MAGGSFLT",125,0)
 . ;   We dont' create the Admin All, or Clin All a second time.
"RTN","MAGGSFLT",126,0)
 . S FLTIEN=$O(^MAG(2005.87,"C",USER,"")) ; get first private
"RTN","MAGGSFLT",127,0)
 . I 'FLTIEN S FLTIEN=$O(^MAG(2005.87,"D",1,"")) ; return first public
"RTN","MAGGSFLT",128,0)
 . S $P(^MAG(2006.18,XIEN,"LISTWIN1"),"^",3)=FLTIEN
"RTN","MAGGSFLT",129,0)
 . Q
"RTN","MAGGSFLT",130,0)
 ; 
"RTN","MAGGSFLT",131,0)
 ;  Here we'll create Private filters for a user or send first existing 
"RTN","MAGGSFLT",132,0)
 ;  private filter as the default.
"RTN","MAGGSFLT",133,0)
 N MAGADMIN,MAGCLIN,MAGY,MAGX
"RTN","MAGGSFLT",134,0)
 S FLTIEN=$O(^MAG(2005.87,"C",USER,"")) ; get first private
"RTN","MAGGSFLT",135,0)
 I FLTIEN S $P(^MAG(2006.18,XIEN,"LISTWIN1"),"^",3)=FLTIEN Q FLTIEN
"RTN","MAGGSFLT",136,0)
 D CLSKEYS(.MAGADMIN,.MAGCLIN)
"RTN","MAGGSFLT",137,0)
 I MAGADMIN D
"RTN","MAGGSFLT",138,0)
 . ; Create a Filter for All Admin add to IMAGE LIST FILTERS File for this user.
"RTN","MAGGSFLT",139,0)
 . S MAGX(1)="USER^"_USER
"RTN","MAGGSFLT",140,0)
 . S MAGX(2)=".01^Admin All"
"RTN","MAGGSFLT",141,0)
 . S MAGX(3)="2^ADMIN"
"RTN","MAGGSFLT",142,0)
 . D SET^MAGGSFL1(.MAGY,.MAGX)
"RTN","MAGGSFLT",143,0)
 . S FLTIEN=$S(+MAGY:+MAGY,1:"")
"RTN","MAGGSFLT",144,0)
 . Q
"RTN","MAGGSFLT",145,0)
 K MAGY,MAGX
"RTN","MAGGSFLT",146,0)
 I MAGCLIN D
"RTN","MAGGSFLT",147,0)
 . ;Create a Filter for All Clin add to IMAGE LIST FILTERS File for this user.
"RTN","MAGGSFLT",148,0)
 . S MAGX(1)="USER^"_USER
"RTN","MAGGSFLT",149,0)
 . S MAGX(2)=".01^Clinical All"
"RTN","MAGGSFLT",150,0)
 . S MAGX(3)="2^CLIN"
"RTN","MAGGSFLT",151,0)
 . D SET^MAGGSFL1(.MAGY,.MAGX)
"RTN","MAGGSFLT",152,0)
 . S FLTIEN=$S(+MAGY:+MAGY,1:"")
"RTN","MAGGSFLT",153,0)
 . Q
"RTN","MAGGSFLT",154,0)
 Q:'FLTIEN 0
"RTN","MAGGSFLT",155,0)
 S $P(^MAG(2006.18,XIEN,"LISTWIN1"),"^",3)=FLTIEN
"RTN","MAGGSFLT",156,0)
 Q FLTIEN
"RTN","MAGGSIA")
0^21^B34720134
"RTN","MAGGSIA",1,0)
MAGGSIA ;WOIFO/GEK/SG - Imaging RPC Broker calls. Add/Modify Image entry ; 5/1/08 10:43am
"RTN","MAGGSIA",2,0)
 ;;3.0;IMAGING;**7,21,8,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGSIA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIA",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIA",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIA",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIA",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIA",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIA",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIA",11,0)
 ;; |                                                               |
"RTN","MAGGSIA",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIA",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIA",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIA",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIA",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIA",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA",18,0)
 ;;
"RTN","MAGGSIA",19,0)
 Q
"RTN","MAGGSIA",20,0)
 ;
"RTN","MAGGSIA",21,0)
 ;**** CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE
"RTN","MAGGSIA",22,0)
 ;**** on DISK TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGSIA",23,0)
 ;
"RTN","MAGGSIA",24,0)
ADD(MAGRY,MAGARRAY) ; RPC [MAG4 ADD IMAGE]
"RTN","MAGGSIA",25,0)
 ; Calls UPDATE^DIE to Add an Image File entry
"RTN","MAGGSIA",26,0)
 ;  Called from Import API Delphi component and ImportX (Active X) control.
"RTN","MAGGSIA",27,0)
 ;  Parameters : 
"RTN","MAGGSIA",28,0)
 ;    MAGARRAY -  array of field numbers and their entries
"RTN","MAGGSIA",29,0)
 ;             i.e. MAGARRAY(1)=".5^38"  field# .5   data is 38
"RTN","MAGGSIA",30,0)
 ;    If Long Description is included in array (field 11), we create a new
"RTN","MAGGSIA",31,0)
 ;      array to hold the text, and pass that to UPDATE^DIE
"RTN","MAGGSIA",32,0)
 ;    If this entry is an Image Group
"RTN","MAGGSIA",33,0)
 ;      i.e. MAGARRAY(n)="2005.04^344"
"RTN","MAGGSIA",34,0)
 ;      (the field 2005.04 is the OBJECT GROUP MULTIPLE)
"RTN","MAGGSIA",35,0)
 ;      ( 344 is the pointer to the Image File Entry that will be added
"RTN","MAGGSIA",36,0)
 ;      ( as a member of this new/existing Group)
"RTN","MAGGSIA",37,0)
 ;
"RTN","MAGGSIA",38,0)
 ;  Return Variable
"RTN","MAGGSIA",39,0)
 ;
"RTN","MAGGSIA",40,0)
 ;    MAGRY(0) - Array
"RTN","MAGGSIA",41,0)
 ;      Successful   MAGRY(0) = IEN^FILE NAME (with full path)
"RTN","MAGGSIA",42,0)
 ;      UNsuccessful MAGRY(0) = 0^Error desc
"RTN","MAGGSIA",43,0)
 ;                   MAGRY(0)(1..n) = Errors and warnings. 
"RTN","MAGGSIA",44,0)
 ;
"RTN","MAGGSIA",45,0)
 ;    CALLING ROUTINE is responsible for RENAMING THE IMAGE FILE on DISK
"RTN","MAGGSIA",46,0)
 ;      TO THE NEW FILE NAME RETURNED BY THIS CALL.
"RTN","MAGGSIA",47,0)
 ;      Changed to include hierarchical directory hash  - PMK 04/23/98
"RTN","MAGGSIA",48,0)
 ;----------------------------------------------------------------
"RTN","MAGGSIA",49,0)
 N MAGGFDA,MAGGDRV,MAGGRP,MAGCHLD,GRPCT,MAGGDA,MAGGFNM
"RTN","MAGGSIA",50,0)
 N MAGGWP,MAGERR,MAGREF,MAGDHASH,MAGTEMP,MAGACT,MAGGIEN,MAGGXE
"RTN","MAGGSIA",51,0)
 N NEWIEN,I,J,X,Y,Z,WPCT
"RTN","MAGGSIA",52,0)
 ;
"RTN","MAGGSIA",53,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGSERR"
"RTN","MAGGSIA",54,0)
 I ($D(MAGARRAY)<10) S MAGRY(0)="0^No input data, Operation CANCELED" Q
"RTN","MAGGSIA",55,0)
 ;
"RTN","MAGGSIA",56,0)
 S MAGRY(0)="0^Creating VistA Image Entry..."
"RTN","MAGGSIA",57,0)
 S MAGERR="",MAGGRP=0,GRPCT=1,WPCT=0
"RTN","MAGGSIA",58,0)
 ;  Validate the Data, and Action codes in the Input Array
"RTN","MAGGSIA",59,0)
 D VAL^MAGGSIV(.MAGRY,.MAGARRAY) I 'MAGRY(0) Q
"RTN","MAGGSIA",60,0)
 ;
"RTN","MAGGSIA",61,0)
 ;  Make the FileMan FDA array and the Imaging Action array.
"RTN","MAGGSIA",62,0)
 D MAKEFDA^MAGGSIU2(.MAGGFDA,.MAGARRAY,.MAGACT,.MAGCHLD,.MAGGRP,.MAGGWP)
"RTN","MAGGSIA",63,0)
 I '$D(MAGGFDA(2005,"+1,")) S MAGRY(0)="0^No data to file.  Operation CANCELED." Q
"RTN","MAGGSIA",64,0)
 ;
"RTN","MAGGSIA",65,0)
 ;Q:'$$VALINDEX^MAGGSIV1(.MAGRY,$G(MAGGFDA(2005,"+1,",42)),$G(MAGGFDA(2005,"+1,",44)),$G(MAGGFDA(2005,"+1,",43)))
"RTN","MAGGSIA",66,0)
 ;  Check on some possible problems: required fields, create default values etc.
"RTN","MAGGSIA",67,0)
 D PRE^MAGGSIA1(.MAGERR,.MAGGFDA,MAGGRP,.MAGGDRV,.MAGREF) I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",68,0)
 ; Locking Patch 8. Get latest Image IEN and Deleted IEN take the greater of the two.
"RTN","MAGGSIA",69,0)
 S (MAGGIEN(1),NEWIEN)=$$NEWIEN^MAGGI12()  ; SG - MAG*3*93
"RTN","MAGGSIA",70,0)
 D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGSIA",71,0)
 ;
"RTN","MAGGSIA",72,0)
 ;  ERROR: QUIT
"RTN","MAGGSIA",73,0)
 I '$G(MAGGIEN(1)) D  S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",74,0)
 . S MAGERR="0^ERROR Creating new Image File Entry "
"RTN","MAGGSIA",75,0)
 . I $D(DIERR) D RTRNERR^MAGGSIU1(.MAGERR)
"RTN","MAGGSIA",76,0)
 . D CLEAN
"RTN","MAGGSIA",77,0)
 ;
"RTN","MAGGSIA",78,0)
 S MAGGDA=MAGGIEN(1)
"RTN","MAGGSIA",79,0)
 ;
"RTN","MAGGSIA",80,0)
 D ACTION^MAGGTAU("CAP^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA)
"RTN","MAGGSIA",81,0)
 ;
"RTN","MAGGSIA",82,0)
 ; IF a group, UpDate the GROUP PARENT in each Group Object and QUIT
"RTN","MAGGSIA",83,0)
 ;  The Return (MAGRY(0)) will be IEN with NO Filename. Groups don't get Filename
"RTN","MAGGSIA",84,0)
 I MAGGRP D  G C1
"RTN","MAGGSIA",85,0)
 . D UPDCHLD^MAGGSIM(.MAGCHLD,MAGGDA)
"RTN","MAGGSIA",86,0)
 . S MAGRY(0)=MAGGDA_U
"RTN","MAGGSIA",87,0)
 . D CLEAN
"RTN","MAGGSIA",88,0)
 . Q
"RTN","MAGGSIA",89,0)
 ; ENTRY in Image File has been made, if any errors from here on
"RTN","MAGGSIA",90,0)
 ;  then we have to delete the image entry.
"RTN","MAGGSIA",91,0)
 ;  IF This image is a member of a Group, Update the Group Entry with new child.
"RTN","MAGGSIA",92,0)
 S X=$G(MAGGFDA(2005,"+1,",14)) I +X D  I $L(MAGERR) Q
"RTN","MAGGSIA",93,0)
 . D UPDPAR^MAGGSIM(.MAGERR,X,.MAGACT,MAGGDA)
"RTN","MAGGSIA",94,0)
 . I $L(MAGERR) S MAGRY(0)=MAGERR D CLEAN
"RTN","MAGGSIA",95,0)
 ;
"RTN","MAGGSIA",96,0)
 ; Now generate the Image FileName. This is passed back to the calling app, 
"RTN","MAGGSIA",97,0)
 ;  and the calling app is responsible for renaming/copying the Image File to
"RTN","MAGGSIA",98,0)
 ;  this new name. 
"RTN","MAGGSIA",99,0)
 I $D(MAGGFDA(2005,"+1,",1)) S MAGGFNM=MAGGFDA(2005,"+1,",1)
"RTN","MAGGSIA",100,0)
 E  D  I $L(MAGERR) S MAGRY(0)=MAGERR Q
"RTN","MAGGSIA",101,0)
 . N MAGXFDA
"RTN","MAGGSIA",102,0)
 . S X=$$DA2NAME^MAGGTU1(MAGGDA,$G(MAGACT("EXT"))) I 'X D  Q
"RTN","MAGGSIA",103,0)
 . . S MAGERR=X
"RTN","MAGGSIA",104,0)
 . . D KILLENT^MAGGSIU1(MAGGDA)
"RTN","MAGGSIA",105,0)
 . . D CLEAN
"RTN","MAGGSIA",106,0)
 . ;
"RTN","MAGGSIA",107,0)
 . S MAGGFNM=$P(X,U,2),Y=MAGGDA_","
"RTN","MAGGSIA",108,0)
 . S MAGXFDA(2005,Y,1)=MAGGFNM
"RTN","MAGGSIA",109,0)
 . D UPDATE^DIE("","MAGXFDA","","MAGGXE")
"RTN","MAGGSIA",110,0)
 . ;   in case of an error
"RTN","MAGGSIA",111,0)
 . I $D(DIERR) D  Q
"RTN","MAGGSIA",112,0)
 . . D RTRNERR^MAGGSIU1(.MAGERR,.MAGGXE)
"RTN","MAGGSIA",113,0)
 . . D KILLENT^MAGGSIU1(MAGGDA)
"RTN","MAGGSIA",114,0)
 . . D CLEAN
"RTN","MAGGSIA",115,0)
 ;
"RTN","MAGGSIA",116,0)
C1 ; 59 
"RTN","MAGGSIA",117,0)
 K MAGGFDA ; P59.
"RTN","MAGGSIA",118,0)
 ;P59 Now we Auto-Generate the Index Fields, if they don't exist for this entry
"RTN","MAGGSIA",119,0)
 I '$D(^MAG(2005,MAGGDA,40)) D
"RTN","MAGGSIA",120,0)
 . N INDXD
"RTN","MAGGSIA",121,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGSIA",122,0)
 . D COMIEN^MAGXCVC(MAGGDA,.INDXD)
"RTN","MAGGSIA",123,0)
 . S ^MAGIXCVT(2006.96,MAGGDA)=1 ; Flag. Says fields were converted by index generation
"RTN","MAGGSIA",124,0)
 . ; TRKING ID  TRKID =   MAGGFDA(2005,"+1,",108)
"RTN","MAGGSIA",125,0)
 . ;;D ACTION^MAGGTAU("GENINDX^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGSIA",126,0)
 . D ACTION^MAGGTAU("INDEX-ALL^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA_"$$"_$P(^MAG(2005,MAGGDA,100),"^",5))
"RTN","MAGGSIA",127,0)
 . Q
"RTN","MAGGSIA",128,0)
 ;
"RTN","MAGGSIA",129,0)
 ;P59 If TYPE INDEX is missing we Auto-Generate Index Type and other missing Index Term values.
"RTN","MAGGSIA",130,0)
 I '$P(^MAG(2005,MAGGDA,40),"^",3) D
"RTN","MAGGSIA",131,0)
 . N INDXD,OLD40,N40
"RTN","MAGGSIA",132,0)
 . S (N40,OLD40)=^MAG(2005,MAGGDA,40)
"RTN","MAGGSIA",133,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGSIA",134,0)
 . ; If Origin doesn't exist in existing, this will put V in. 
"RTN","MAGGSIA",135,0)
 . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGSIA",136,0)
 . ; We're not changing existing values of Spec,Proc or Origin 
"RTN","MAGGSIA",137,0)
 . F J=1:1:6 I '$L($P(N40,"^",J)) S $P(N40,"^",J)=$P(INDXD,"^",J)
"RTN","MAGGSIA",138,0)
 . ;Validate the merged Spec and Proc, if  not valid, revert back to old Spec and Proc
"RTN","MAGGSIA",139,0)
 . I '$$VALINDEX^MAGGSIV1(.X,$P(N40,"^",3),$P(N40,"^",5),$P(N40,"^",4)) S $P(N40,"^",4,5)=$P(OLD40,"^",4,5)
"RTN","MAGGSIA",140,0)
 . S ^MAG(2005,MAGGDA,40)=N40
"RTN","MAGGSIA",141,0)
 . ;;D ACTION^MAGGTAU("INDEX-42^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA) ;_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGSIA",142,0)
 . D ACTION^MAGGTAU("INDEX-42^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA_"$$"_$P(^MAG(2005,MAGGDA,100),"^",5))
"RTN","MAGGSIA",143,0)
 . D ENTRY^MAGLOG("INDEX-42",DUZ,MAGGDA,"P59",$P(^MAG(2005,MAGGDA,0),"^",7),1)
"RTN","MAGGSIA",144,0)
 . Q
"RTN","MAGGSIA",145,0)
 ;** ABS and JB image queues AREN'T SET WHEN ADDING AN IMAGE. 
"RTN","MAGGSIA",146,0)
 ;** RPC =-> 'MAG ABSJB' after abstract is/isn't created on the workstation
"RTN","MAGGSIA",147,0)
 ;
"RTN","MAGGSIA",148,0)
 ;  The Return is:  IEN ^ DRIVE:DIR ^ FILE.EXT [^ DRIVE:DIR ^ FILE.BIG]
"RTN","MAGGSIA",149,0)
 ;   example:  487^C:\IMAGE\^DC000487.TIF
"RTN","MAGGSIA",150,0)
 ;  The calling routine is responsible for renaming/naming the file
"RTN","MAGGSIA",151,0)
 ;   to the returned DRIVE:\DIR\FILENAME.EXT
"RTN","MAGGSIA",152,0)
 ;
"RTN","MAGGSIA",153,0)
 ; Modified 4/23/98 to include hierarchical directory structure -- PMK
"RTN","MAGGSIA",154,0)
 I 'MAGGRP D
"RTN","MAGGSIA",155,0)
 . S MAGDHASH=$$DIRHASH^MAGFILEB(MAGGFNM,MAGREF)
"RTN","MAGGSIA",156,0)
 . ; For now, BIG files are in same directory as FullRes (or PACS) file
"RTN","MAGGSIA",157,0)
 . S MAGRY(0)=MAGGDA_U_MAGGDRV_MAGDHASH_U_MAGGFNM
"RTN","MAGGSIA",158,0)
 . ; If BIG file also, add it's Drive, Hash, Filename to end of Return string.
"RTN","MAGGSIA",159,0)
 . I $G(MAGACT("BIG")) D
"RTN","MAGGSIA",160,0)
 . . S X=$P(MAGGFNM,".",1)_".BIG"
"RTN","MAGGSIA",161,0)
 . . S MAGRY(0)=MAGRY(0)_U_MAGGDRV_MAGDHASH_U_X
"RTN","MAGGSIA",162,0)
 . . Q
"RTN","MAGGSIA",163,0)
 . Q
"RTN","MAGGSIA",164,0)
 ;
"RTN","MAGGSIA",165,0)
CLEAN ; Called as tag
"RTN","MAGGSIA",166,0)
 D CLEAN^DILF
"RTN","MAGGSIA",167,0)
 L -^MAG(2005,NEWIEN)
"RTN","MAGGSIA",168,0)
 Q
"RTN","MAGGSIA1")
0^39^B40524442
"RTN","MAGGSIA1",1,0)
MAGGSIA1 ;WOIFO/GEK/SG - RPC Call to Add Image File entry ; 1/16/09 8:18am
"RTN","MAGGSIA1",2,0)
 ;;3.0;IMAGING;**7,8,85,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGSIA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIA1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIA1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIA1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIA1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIA1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIA1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIA1",11,0)
 ;; |                                                               |
"RTN","MAGGSIA1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIA1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIA1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIA1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIA1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIA1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIA1",18,0)
 ;;
"RTN","MAGGSIA1",19,0)
 Q
"RTN","MAGGSIA1",20,0)
PRE(MAGERR,MAGGFDA,MAGGRP,MAGGDRV,MAGREF) ;
"RTN","MAGGSIA1",21,0)
 ;  Check on some possible problems: required fields etc.
"RTN","MAGGSIA1",22,0)
 ;  Object Type and (Patient, or Short Desc) Required.
"RTN","MAGGSIA1",23,0)
 N MAGRSLT,X,Z
"RTN","MAGGSIA1",24,0)
 I '$D(MAGGFDA(2005,"+1,",3)) D OBJTYPE
"RTN","MAGGSIA1",25,0)
 I '$D(MAGGFDA(2005,"+1,",3)) S MAGERR="0^Need an Object Type " Q
"RTN","MAGGSIA1",26,0)
 I '$D(MAGGFDA(2005,"+1,",5)),'$D(MAGGFDA(2005,"+1,",10)) D  Q
"RTN","MAGGSIA1",27,0)
 . S MAGERR="0^Need Patient or Short Desc.  Operation CANCELED "
"RTN","MAGGSIA1",28,0)
 ; IF no Procedure text we'll give it some so crossref will set.
"RTN","MAGGSIA1",29,0)
 D PATCHK(.MAGRSLT) I 'MAGRSLT S MAGERR=MAGRSLT Q
"RTN","MAGGSIA1",30,0)
 ; Patch 8 IAPI We Create IXCLS (#41 CLASS) and  IXPKG (#40 Package) if TYPE is in Data.
"RTN","MAGGSIA1",31,0)
 ; But we are not making TYPE required yet for backward compatibality.
"RTN","MAGGSIA1",32,0)
 I $D(MAGGFDA(2005,"+1,",42)) D
"RTN","MAGGSIA1",33,0)
 . I $$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),2,"E")="INACTIVE" D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",34,0)
 . . S MAGERR="0^Index Type: "_$$GET1^DIQ(2005.83,MAGGFDA(2005,"+1,",42),.01,"E")_"is INACTIVE"
"RTN","MAGGSIA1",35,0)
 . I '$D(MAGGFDA(2005,"+1,",41)) D MAKECLAS^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",36,0)
 . I ($D(MAGGFDA(2005,"+1,",16)))&($$ISTYPADM(MAGGFDA(2005,"+1,",42))) D  S MAGRY=MAGERR Q
"RTN","MAGGSIA1",37,0)
 . . S MAGERR="0^Can't have an ADMIN TYPE with Clinical Image."
"RTN","MAGGSIA1",38,0)
 . I '$D(MAGGFDA(2005,"+1,",40)) D MAKEPKG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",39,0)
 . I '$D(MAGGFDA(2005,"+1,",6)) D MAKEPROC^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",40,0)
 . I '$D(MAGGFDA(2005,"+1,",45)) D MAKEORIG^MAGGSIU1 I $L(MAGERR) S MAGRY=MAGERR Q
"RTN","MAGGSIA1",41,0)
 . Q
"RTN","MAGGSIA1",42,0)
 ;
"RTN","MAGGSIA1",43,0)
 I '$D(MAGGFDA(2005,"+1,",6)) D PROCTEXT
"RTN","MAGGSIA1",44,0)
 ;
"RTN","MAGGSIA1",45,0)
 ; If no Procedure/Exam Date/Time we'll give it DocDT, or NOW
"RTN","MAGGSIA1",46,0)
 I '$D(MAGGFDA(2005,"+1,",15)) D
"RTN","MAGGSIA1",47,0)
 . I $D(MAGGFDA(2005,"+1,",110)) S MAGGFDA(2005,"+1,",15)=MAGGFDA(2005,"+1,",110) Q
"RTN","MAGGSIA1",48,0)
 . S MAGGFDA(2005,"+1,",15)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",49,0)
 ; DateTime image saved.
"RTN","MAGGSIA1",50,0)
 I '$D(MAGGFDA(2005,"+1,",7)) S MAGGFDA(2005,"+1,",7)=$E($$NOW^XLFDT,1,12)
"RTN","MAGGSIA1",51,0)
 ; Short Description
"RTN","MAGGSIA1",52,0)
 ;I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",53,0)
 I '$D(MAGGFDA(2005,"+1,",10)) S MAGGFDA(2005,"+1,",10)=$G(MAGGFDA(2005,"+1,",6))
"RTN","MAGGSIA1",54,0)
 ; Name (.01)
"RTN","MAGGSIA1",55,0)
 I '$D(MAGGFDA(2005,"+1,",.01)) S MAGGFDA(2005,"+1,",.01)=$$MAKENAME^MAGGSIU1(.MAGGFDA)
"RTN","MAGGSIA1",56,0)
 I '$D(MAGGFDA(2005,"+1,",8)) S MAGGFDA(2005,"+1,",8)=$G(DUZ)
"RTN","MAGGSIA1",57,0)
 ; Acquisition Site, Use it to tell where to save the file.
"RTN","MAGGSIA1",58,0)
 I $D(MAGACT("ACQS")) D
"RTN","MAGGSIA1",59,0)
 . ; Patch 8 Have to modify: Field 105 (Acquisition Site) is NOW Field .05
"RTN","MAGGSIA1",60,0)
 . I $P(MAGACT("ACQS"),";")]"" S MAGGFDA(2005,"+1,",.05)=$P(MAGACT("ACQS"),";")
"RTN","MAGGSIA1",61,0)
 ; Only get drive:dir if not a group
"RTN","MAGGSIA1",62,0)
 I 'MAGGRP D  I $L(MAGERR) Q
"RTN","MAGGSIA1",63,0)
 . ; The value of the Action Code "WRITE^value" OVERRIDES any Write Location
"RTN","MAGGSIA1",64,0)
 . ; sent as field # 2 in the input array. (The only value we check for is "PACS" from peter's code)
"RTN","MAGGSIA1",65,0)
 . S X=$S($D(MAGACT("WRITE")):MAGACT("WRITE"),$D(MAGGFDA(2005,"+1,",2)):MAGGFDA(2005,"+1,",2),1:"")
"RTN","MAGGSIA1",66,0)
 . ;P85 Send ACQS as second Param. $$DRIVE will use ACQS If X = ""
"RTN","MAGGSIA1",67,0)
 . ;
"RTN","MAGGSIA1",68,0)
 . S Z=$$DRIVE^MAGGTU1(X,$G(MAGGFDA(2005,"+1,",.05))) ;Drv:Dir to Write
"RTN","MAGGSIA1",69,0)
 . I 'Z S MAGERR=Z Q
"RTN","MAGGSIA1",70,0)
 . S MAGGDRV=$P(Z,U,2)
"RTN","MAGGSIA1",71,0)
 . S MAGGFDA(2005,"+1,",2)=+Z               ;Disk & Vol magnetic
"RTN","MAGGSIA1",72,0)
 . ; if a big file is being made on workstation, put NetWork Location
"RTN","MAGGSIA1",73,0)
 . ; pointer in the BIG NETWORK LOCATION field.
"RTN","MAGGSIA1",74,0)
 . ; (BIG files default to same Network Location as FullRes (or PACS))
"RTN","MAGGSIA1",75,0)
 . I $G(MAGACT("BIG"))=1 S MAGGFDA(2005,"+1,",102)=+Z
"RTN","MAGGSIA1",76,0)
 . S MAGREF=+Z ; save network location ien for $$DIRHASH in ^MAGGSIA1
"RTN","MAGGSIA1",77,0)
 . I $G(MAGACT("ABS"))="STUFFONLY" S MAGGFDA(2005,"+1,",2.1)=+Z
"RTN","MAGGSIA1",78,0)
 ;
"RTN","MAGGSIA1",79,0)
 I $D(MAGACT("ACQL")) S MAGGFDA(2005,"+1,",101)=MAGACT("ACQL")
"RTN","MAGGSIA1",80,0)
 ; HERE we are putting PRE Processing for the Import API action codes.
"RTN","MAGGSIA1",81,0)
 ; "ACQD,ACQS" If Acquisition device entry doesn't exist, create it.
"RTN","MAGGSIA1",82,0)
 I $D(MAGACT("ACQD")) D
"RTN","MAGGSIA1",83,0)
 . ; IF Value is a pointer to the ACQ DEVICE File Quit.  If it's invalid then UPDATE will catch it.
"RTN","MAGGSIA1",84,0)
 . I (+MAGACT("ACQD")=MAGACT("ACQD")) S MAGGFDA(2005,"+1,",107)=MAGACT("ACQD") Q
"RTN","MAGGSIA1",85,0)
 . I $D(^MAG(2006.04,"B",MAGACT("ACQD"))) D  Q
"RTN","MAGGSIA1",86,0)
 . . ; IF Already exists, add it to the FDA
"RTN","MAGGSIA1",87,0)
 . . S MAGGFDA(2005,"+1,",107)=$O(^MAG(2006.04,"B",MAGACT("ACQD"),""))
"RTN","MAGGSIA1",88,0)
 . . ; What do we do with the Acquisition Site. IF Acq Dev already exists. ? 
"RTN","MAGGSIA1",89,0)
 . . ; ??
"RTN","MAGGSIA1",90,0)
 . ; IF it doesn't exist, create it, and add it's ien to the image entry 
"RTN","MAGGSIA1",91,0)
 . N MAGDFDA,MAGDIEN,MAGDXE
"RTN","MAGGSIA1",92,0)
 . S MAGDFDA(2006.04,"+1,",.01)=MAGACT("ACQD")
"RTN","MAGGSIA1",93,0)
 . S MAGDFDA(2006.04,"+1,",1)=$S($D(MAGACT("ACQS")):$P(MAGACT("ACQS"),";"),1:$G(MAGGFDA(2005,"+1,",.05)))
"RTN","MAGGSIA1",94,0)
 . S MAGDFDA(2006.04,"+1,",2)=$S($D(MAGACT("ACQL")):MAGACT("ACQL"),$D(MAGGFDA(2005,"+1,",101)):MAGGFDA(2005,"+1,",101),1:$P($G(MAGACT("ACQS")),";",2))
"RTN","MAGGSIA1",95,0)
 . ; ACQS was a 2 ';' piece value with Acq Location (HOSPITAL LOCATION) as 2nd piece
"RTN","MAGGSIA1",96,0)
 . ;   now it is sent as it's own value in ACQL
"RTN","MAGGSIA1",97,0)
 . D UPDATE^DIE("","MAGDFDA","MAGDIEN","MAGDXE")
"RTN","MAGGSIA1",98,0)
 . S MAGGFDA(2005,"+1,",107)=MAGDIEN(1)
"RTN","MAGGSIA1",99,0)
 ;~~~ Delete this comment and the following line of code when
"RTN","MAGGSIA1",100,0)
 ;    the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGSIA1",101,0)
 ;    If the last IEN in the IMAGE AUDIT file is greater than the
"RTN","MAGGSIA1",102,0)
 ;~~~ last IEN in the IMAGE file, update the IMAGE file header.
"RTN","MAGGSIA1",103,0)
 I ($O(^MAG(2005,"A"),-1)<$O(^MAG(2005.1,"A"),-1)) S $P(^MAG(2005,0),U,3)=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGSIA1",104,0)
 ;
"RTN","MAGGSIA1",105,0)
 Q
"RTN","MAGGSIA1",106,0)
PATCHK(MAGR) ; This uses the FDA Array and checks the Imaging Patient against the Procedure patient
"RTN","MAGGSIA1",107,0)
 ;
"RTN","MAGGSIA1",108,0)
 N MAGDFN,PX,PXDA,MAGY
"RTN","MAGGSIA1",109,0)
 S PX=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",110,0)
 S PXDA=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",111,0)
 I 'PX S MAGR=1 Q  ; This is a category, or an Image of a group (no parent pointer)
"RTN","MAGGSIA1",112,0)
 S MAGDFN=MAGGFDA(2005,"+1,",5)
"RTN","MAGGSIA1",113,0)
 I (PX=8925) D  Q
"RTN","MAGGSIA1",114,0)
 . I '$D(^TIU(8925,PXDA)) S MAGR="0^Invalid TIU Entry Number: "_PXDA Q
"RTN","MAGGSIA1",115,0)
 . D DATA^MAGGNTI(.MAGY,PXDA)
"RTN","MAGGSIA1",116,0)
 . I '(MAGDFN=$P(MAGY,U,4)) S MAGR="0^Procedure and Imaging patients don't match." Q
"RTN","MAGGSIA1",117,0)
 . S MAGR=1
"RTN","MAGGSIA1",118,0)
 Q
"RTN","MAGGSIA1",119,0)
OBJTYPE ; This call uses the EXT and computes an Object Type
"RTN","MAGGSIA1",120,0)
 N MTYPE
"RTN","MAGGSIA1",121,0)
 I '$L($G(MAGACT("EXT"))) Q
"RTN","MAGGSIA1",122,0)
 S MTYPE=$O(^MAG(2005.02,"AD",MAGACT("EXT"),""))
"RTN","MAGGSIA1",123,0)
 ;I 'MTYPE Q
"RTN","MAGGSIA1",124,0)
 ;TODO : Answer question, do we want to have a default Image type ?
"RTN","MAGGSIA1",125,0)
 I 'MTYPE S MTYPE=1
"RTN","MAGGSIA1",126,0)
 S MAGGFDA(2005,"+1,",3)=MTYPE
"RTN","MAGGSIA1",127,0)
 Q
"RTN","MAGGSIA1",128,0)
ISTYPADM(TYPE) ; Returns 1 if this is an Admin Type
"RTN","MAGGSIA1",129,0)
 N CL
"RTN","MAGGSIA1",130,0)
 I '$G(TYPE) Q 0
"RTN","MAGGSIA1",131,0)
 S CL=$$GET1^DIQ(2005.83,TYPE,1,"E")
"RTN","MAGGSIA1",132,0)
 Q $S($E(CL,1,5)="ADMIN":1,1:0)
"RTN","MAGGSIA1",133,0)
PROCTEXT ;This call uses flds 16 and 17 to compute fld #6 PROCEDURE TEXT [8F]
"RTN","MAGGSIA1",134,0)
 ; We are here because fld #6 PROCEDURE [8F] is null.
"RTN","MAGGSIA1",135,0)
 ; If a pointer to a package is in the data, (flds 16 and 17)
"RTN","MAGGSIA1",136,0)
 ;  get fld #6 from that , if not then treat it as an UNASSIGNED image 
"RTN","MAGGSIA1",137,0)
 ; i.e. Category UNASSIGNED.
"RTN","MAGGSIA1",138,0)
 N MAGYPX,PARENT,PARIEN,PXDESC
"RTN","MAGGSIA1",139,0)
 S PARENT=$G(MAGGFDA(2005,"+1,",16))
"RTN","MAGGSIA1",140,0)
 S PARIEN=$G(MAGGFDA(2005,"+1,",17))
"RTN","MAGGSIA1",141,0)
 ;
"RTN","MAGGSIA1",142,0)
 I (PARENT=8925),(PARIEN]"") D  Q
"RTN","MAGGSIA1",143,0)
 . D DATA^MAGGNTI(.MAGYPX,PARIEN)
"RTN","MAGGSIA1",144,0)
 . S MAGGFDA(2005,"+1,",6)=$P(MAGYPX,U,2)
"RTN","MAGGSIA1",145,0)
 ;TODO; create calls to get default procedure desc for all specialties
"RTN","MAGGSIA1",146,0)
 ; AND default to NONE if a TYPE and no PARENT data File (fld 16)
"RTN","MAGGSIA1",147,0)
 ; If a Parent pointer exists, and it isn't TIU, for now set "NO Description"
"RTN","MAGGSIA1",148,0)
 I PARENT]"" S MAGGFDA(2005,"+1,",6)="No Description" Q
"RTN","MAGGSIA1",149,0)
 ;
"RTN","MAGGSIA1",150,0)
 ; Do we have a pointer to a MAG DESCRIPTIVE CATEGORY
"RTN","MAGGSIA1",151,0)
 I ($G(MAGGFDA(2005,"+1,",100))]"") D  Q
"RTN","MAGGSIA1",152,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005.81,MAGGFDA(2005,"+1,",100),0),U,1)
"RTN","MAGGSIA1",153,0)
 ; 
"RTN","MAGGSIA1",154,0)
 ; If a new child of a Group, use that Proc Desc
"RTN","MAGGSIA1",155,0)
 I $G(MAGGFDA(2005,"+1,",14))]"" D  Q
"RTN","MAGGSIA1",156,0)
 . S MAGGFDA(2005,"+1,",6)=$P(^MAG(2005,MAGGFDA(2005,"+1,",14),0),U,8)
"RTN","MAGGSIA1",157,0)
 ;
"RTN","MAGGSIA1",158,0)
 ; Parent="", and no Category pointer, then we Call it UNASSIGNED
"RTN","MAGGSIA1",159,0)
 S MAGGFDA(2005,"+1,",100)=$O(^MAG(2005.81,"B","UNASSIGNED",""))
"RTN","MAGGSIA1",160,0)
 S MAGGFDA(2005,"+1,",6)="UNASSIGNED"
"RTN","MAGGSIA1",161,0)
 Q
"RTN","MAGGSQI")
0^40^B71964647
"RTN","MAGGSQI",1,0)
MAGGSQI ;WOIFO/GEK/SG - Image Integrity Checker ; 3/9/09 12:51pm
"RTN","MAGGSQI",2,0)
 ;;3.0;IMAGING;**8,93**;Dec 02, 2009;Build 163
"RTN","MAGGSQI",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSQI",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSQI",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSQI",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSQI",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSQI",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSQI",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSQI",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSQI",11,0)
 ;; |                                                               |
"RTN","MAGGSQI",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSQI",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSQI",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSQI",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSQI",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSQI",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSQI",18,0)
 ;;
"RTN","MAGGSQI",19,0)
RPT(MAGRY,CT,LASTIEN) ; Run the check for the last CT entries in Image file.
"RTN","MAGGSQI",20,0)
 N I,J,MAGX,ERRCT,ACTCT,TYPECT,MAGSTART,MAGPUR
"RTN","MAGGSQI",21,0)
 K ^XTMP("MAGCHK")
"RTN","MAGGSQI",22,0)
 S LASTIEN=$G(LASTIEN)
"RTN","MAGGSQI",23,0)
 ; See DOCU^MAGCRPT for documenation on this global
"RTN","MAGGSQI",24,0)
 D NOW^%DTC S MAGSTART=%
"RTN","MAGGSQI",25,0)
 S X1=%,X2=60 D C^%DTC S MAGPUR=X K X,X1,X2
"RTN","MAGGSQI",26,0)
 ;Set purge, create and purge date
"RTN","MAGGSQI",27,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",1)=MAGPUR,$P(^(0),"^",2)=MAGSTART
"RTN","MAGGSQI",28,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",5)=MAGSTART
"RTN","MAGGSQI",29,0)
 ;Set description
"RTN","MAGGSQI",30,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",3)="Imaging Scan DB"
"RTN","MAGGSQI",31,0)
 ;Set status to active
"RTN","MAGGSQI",32,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",4)="ACTIVE"
"RTN","MAGGSQI",33,0)
 S MAGRY(0)="0^Checking..."
"RTN","MAGGSQI",34,0)
 S I="A"
"RTN","MAGGSQI",35,0)
 S CT=$G(CT,5000),ERRCT=0,ACTCT=0
"RTN","MAGGSQI",36,0)
 F  S I=$O(^MAG(2005,I),-1) Q:CT<1  Q:'I  Q:I<LASTIEN  D
"RTN","MAGGSQI",37,0)
 . Q:$$ISDEL^MAGGI11(I)
"RTN","MAGGSQI",38,0)
 . S CT=CT-1,ACTCT=ACTCT+1
"RTN","MAGGSQI",39,0)
 . I '(ACTCT#1000) I IO(0)=IO U IO W "."
"RTN","MAGGSQI",40,0)
 . K MAGX
"RTN","MAGGSQI",41,0)
 . D CHK(.MAGX,I)
"RTN","MAGGSQI",42,0)
 . I +MAGX(0)'=1 S ERRCT=ERRCT+1 D
"RTN","MAGGSQI",43,0)
 . . S ^XTMP("MAGCHK",$J,+MAGX(0),I)=MAGX(0)
"RTN","MAGGSQI",44,0)
 . . S ^XTMP("MAGCHK",$J,"B",$P(MAGX(0),"^",2),I)=""
"RTN","MAGGSQI",45,0)
 . . S TYPECT($P(MAGX(0),"^",2))=$G(TYPECT($P(MAGX(0),"^",2)))+1
"RTN","MAGGSQI",46,0)
 I 'ERRCT S MAGRY(0)="0^All Okay"
"RTN","MAGGSQI",47,0)
 I ERRCT S MAGRY(0)=ERRCT_"^Errors of "_ACTCT_" Images Checked."
"RTN","MAGGSQI",48,0)
 S I="" F  S I=$O(TYPECT(I)) Q:I=""  D
"RTN","MAGGSQI",49,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=TYPECT(I)_"^"_I
"RTN","MAGGSQI",50,0)
 ;Set status to complete
"RTN","MAGGSQI",51,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",4)="COMPLETE"
"RTN","MAGGSQI",52,0)
 ;Set end time
"RTN","MAGGSQI",53,0)
 D NOW^%DTC
"RTN","MAGGSQI",54,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",6)=%
"RTN","MAGGSQI",55,0)
 ;Set total number of entries checked
"RTN","MAGGSQI",56,0)
 S $P(^XTMP("MAGCHK",$J,0),"^",8)=ACTCT
"RTN","MAGGSQI",57,0)
 Q
"RTN","MAGGSQI",58,0)
CHK(MAGRY,MAGIEN) ;
"RTN","MAGGSQI",59,0)
 ;
"RTN","MAGGSQI",60,0)
 N ERR,MAGDFN,MAGPK,MAGPKDA,MAGPKIP,MAGPKDA1,Y,I,MAGISGRP,MAGRPIEN
"RTN","MAGGSQI",61,0)
 N MAGN2,MAGN0,MAGPDFIL,MAGRCT,MAGN100,MAGZ,VALID
"RTN","MAGGSQI",62,0)
 S MAGRCT=0,MAGISGRP=0
"RTN","MAGGSQI",63,0)
 S MAGRY(0)="0^Error during Image Integrity Check !"
"RTN","MAGGSQI",64,0)
 ;
"RTN","MAGGSQI",65,0)
 I $$ISDEL^MAGGI11(MAGIEN,.ERR)  S MAGRY(0)="1^Deleted Image"  Q
"RTN","MAGGSQI",66,0)
 I ERR<0  D  Q:ERR<0
"RTN","MAGGSQI",67,0)
 . I +ERR=-43  D  Q
"RTN","MAGGSQI",68,0)
 . . S ERR=0,I=$O(MAGRY(""),-1)+1
"RTN","MAGGSQI",69,0)
 . . S MAGRY(I)="2^Image IEN exists, and is Deleted !"
"RTN","MAGGSQI",70,0)
 . . Q
"RTN","MAGGSQI",71,0)
 . S MAGRY(0)="0^Invalid Image pointer"
"RTN","MAGGSQI",72,0)
 . Q
"RTN","MAGGSQI",73,0)
 ;
"RTN","MAGGSQI",74,0)
 S MAGN0=$G(^MAG(2005,MAGIEN,0))
"RTN","MAGGSQI",75,0)
 S MAGN2=$G(^MAG(2005,MAGIEN,2))
"RTN","MAGGSQI",76,0)
 S MAGN100=$G(^MAG(2005,MAGIEN,100))
"RTN","MAGGSQI",77,0)
 ;
"RTN","MAGGSQI",78,0)
 I $O(^MAG(2005,MAGIEN,1,0))!($P(MAGN0,U,6)=11) S MAGISGRP=1
"RTN","MAGGSQI",79,0)
 I MAGISGRP,'$O(^MAG(2005,MAGIEN,1,0)) S MAGRY(0)="0^Group of 0 images" Q
"RTN","MAGGSQI",80,0)
 ;
"RTN","MAGGSQI",81,0)
 S MAGPK=$P(MAGN2,U,6)
"RTN","MAGGSQI",82,0)
 S MAGPKDA=$P(MAGN2,U,7)
"RTN","MAGGSQI",83,0)
 S MAGPKIP=$P(MAGN2,U,8)
"RTN","MAGGSQI",84,0)
 S MAGPKDA1=$P(MAGN2,U,10)
"RTN","MAGGSQI",85,0)
 S MAGDFN=$P(MAGN0,U,7)
"RTN","MAGGSQI",86,0)
 ;
"RTN","MAGGSQI",87,0)
 ; If this image is a member of a group, compare some fields against the Group entry.
"RTN","MAGGSQI",88,0)
 I +$P(MAGN0,U,10) S MAGRPIEN=$P(MAGN0,U,10) D  Q
"RTN","MAGGSQI",89,0)
 . ;   Check the DFN's Quit if they don't match
"RTN","MAGGSQI",90,0)
 . I $P($G(^MAG(2005,MAGRPIEN,0)),U,7)'=MAGDFN S MAGRY(0)="0^Patient pointer mismatch between Image Group and Image" Q
"RTN","MAGGSQI",91,0)
 . ; if image has data in parent fields, Quit if not same as Group entry.
"RTN","MAGGSQI",92,0)
 . I +MAGPK,($P(MAGN2,U,6,7)'=$P($G(^MAG(2005,MAGRPIEN,2)),U,6,7)) S MAGRY(MAGRCT)="0^Pointer Mismatch in Group" Q
"RTN","MAGGSQI",93,0)
 . ;Have a check that assures that the Group has this image in it's multiple
"RTN","MAGGSQI",94,0)
 . ;   ? Do we want to do this when we have the Grp entry, for each of its members. ? 
"RTN","MAGGSQI",95,0)
 . S (I,VALID)=0 F  S I=$O(^MAG(2005,MAGRPIEN,1,I)) Q:'I  D  Q:VALID
"RTN","MAGGSQI",96,0)
 . . I +^MAG(2005,MAGRPIEN,1,I,0)=MAGIEN S VALID=1
"RTN","MAGGSQI",97,0)
 . I VALID S MAGRY(MAGRCT)="1^Valid Group image."
"RTN","MAGGSQI",98,0)
 . E  S MAGRY(MAGRCT)="0^Pointer Missing in Group entries."
"RTN","MAGGSQI",99,0)
 ;
"RTN","MAGGSQI",100,0)
 ; In current scheme of things, image points to Package or a Descriptive Categroy
"RTN","MAGGSQI",101,0)
 ;  So we can make the following assumption, but maybe not for long.
"RTN","MAGGSQI",102,0)
 I 'MAGPK,+MAGN100 S MAGRY(MAGRCT)="1^Image Category" Q
"RTN","MAGGSQI",103,0)
 I 'MAGPK,($P(MAGN0,U,6)=18) S MAGRY(MAGRCT)="1^Patient Photo" Q
"RTN","MAGGSQI",104,0)
 ;
"RTN","MAGGSQI",105,0)
 ; Old images Didn't require Parent Pointer,Parent root, Parent Image Pointer
"RTN","MAGGSQI",106,0)
 ;I 'MAGPK S MAGRY(0)="0^Missing the Parent file pointer" Q
"RTN","MAGGSQI",107,0)
 ;I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",108,0)
 ;I 'MAGPKIP S MAGRY(0)="0^Missing the Parent image pointer" Q
"RTN","MAGGSQI",109,0)
 ;
"RTN","MAGGSQI",110,0)
 ; Surgery reports
"RTN","MAGGSQI",111,0)
 I (MAGPK=130) D  Q
"RTN","MAGGSQI",112,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",113,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",114,0)
 . I 'MAGPKIP S MAGRY(0)="0^Missing the Parent image pointer" Q
"RTN","MAGGSQI",115,0)
 . I '$D(^SRF(MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",116,0)
 . I '$D(^SRF(MAGPKDA,2005,MAGPKIP,0)) S MAGRY="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",117,0)
 . I '(MAGDFN=$P(^SRF(MAGPKDA,0),U,1)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",118,0)
 . I '(MAGIEN=+$G(^SRF(MAGPKDA,2005,MAGPKIP,0))) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",119,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",120,0)
 ;
"RTN","MAGGSQI",121,0)
 ; TIU documents;
"RTN","MAGGSQI",122,0)
 I MAGPK=8925 D  Q
"RTN","MAGGSQI",123,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",124,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",125,0)
 . I 'MAGPKIP S MAGRY(0)="0^Missing the Parent image pointer" Q
"RTN","MAGGSQI",126,0)
 . I '$D(^TIU(8925,MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",127,0)
 . I '$D(^TIU(8925.91,MAGPKIP,0)) S MAGRY(0)="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",128,0)
 . I '(MAGDFN=$P($G(^TIU(8925,MAGPKDA,0)),U,2)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",129,0)
 . S MAGZ=MAGPKDA_"^"_MAGIEN
"RTN","MAGGSQI",130,0)
 . I '(MAGZ=$G(^TIU(8925.91,MAGPKIP,0))) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",131,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",132,0)
 ;
"RTN","MAGGSQI",133,0)
 ; Medicine reports
"RTN","MAGGSQI",134,0)
 I ((MAGPK>689.999)&(MAGPK<703)) D  Q
"RTN","MAGGSQI",135,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",136,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",137,0)
 . I '$D(^MCAR(MAGPK,MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",138,0)
 . I MAGPKIP I '$D(^MCAR(MAGPK,MAGPKDA,2005,MAGPKIP,0)) S MAGRY(0)="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",139,0)
 . I '(MAGDFN=$P($G(^MCAR(MAGPK,MAGPKDA,0)),U,2)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",140,0)
 . ;I '(MAGIEN=+^MCAR(MAGPK,MAGPKDA,2005,MAGPKIP,0)) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",141,0)
 . I '$D(^MCAR(MAGPK,MAGPKDA,2005,"B",MAGIEN)) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",142,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",143,0)
 . ;
"RTN","MAGGSQI",144,0)
 . ;         S MCFILE=+$P($P(^MCAR(697.2,PSIEN,0),U,2),"(",2)
"RTN","MAGGSQI",145,0)
 . ;      S PATFLD=$O(^DD(MCFILE,"B","MEDICAL PATIENT",""))
"RTN","MAGGSQI",146,0)
 . ;         S:PATFLD="" PATFLD=1
"RTN","MAGGSQI",147,0)
 . ;
"RTN","MAGGSQI",148,0)
 . ;          S TMP=$P($P(^DD(MCFILE,PATFLD,0),U,4),";",2)
"RTN","MAGGSQI",149,0)
 . ;      Q $S(DFN'=$P(^MCAR(MCFILE,MCIEN,0),U,TMP):"O^Image and associated report have different patient pointers",1:"1")
"RTN","MAGGSQI",150,0)
 ;
"RTN","MAGGSQI",151,0)
 ; Radiology reports
"RTN","MAGGSQI",152,0)
 I MAGPK=74 D  Q
"RTN","MAGGSQI",153,0)
 . ; Patch.  if MAGPK exists, but not a MAGPKDA
"RTN","MAGGSQI",154,0)
 . I 'MAGPKDA S MAGRY(0)="0^Missing the Parent root pointer" Q
"RTN","MAGGSQI",155,0)
 . I '$D(^RARPT(MAGPKDA,0)) S MAGRY(0)="0^Invalid Image pointer to associated package report entry" Q
"RTN","MAGGSQI",156,0)
 . I MAGPKIP I '$D(^RARPT(MAGPKDA,2005,MAGPKIP,0)) S MAGRY(0)="0^Invalid Image pointer in associated package file" Q
"RTN","MAGGSQI",157,0)
 . ;
"RTN","MAGGSQI",158,0)
 . I '(MAGDFN=$P($G(^RARPT(MAGPKDA,0)),U,2)) S MAGRY(0)="0^Image and associated report have different patient pointers" Q
"RTN","MAGGSQI",159,0)
 . ;I '(MAGIEN=+$G(^RARPT(MAGPKDA,2005,MAGPKIP,0))) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",160,0)
 . I '$D(^RARPT(MAGPKDA,2005,"B",MAGIEN)) S MAGRY(0)="0^Associated report does not point back to Image" Q
"RTN","MAGGSQI",161,0)
 . S MAGRY(0)="1^Okay"
"RTN","MAGGSQI",162,0)
 ;
"RTN","MAGGSQI",163,0)
 ; Laboratory reports
"RTN","MAGGSQI",164,0)
 I (MAGPK>62.999)&(MAGPK<64) D  Q
"RTN","MAGGSQI",165,0)
 . ;I $P(^MAG(2005.03,MAGTMPRT,0),"^",4)=63
"RTN","MAGGSQI",166,0)
 . S MAGRY(0)="1^Lab image not checked "
"RTN","MAGGSQI",167,0)
 . ;D @$S(MAGTMPRT=63:"AU",MAGTMPRT=63.2:"AU",1:"LAB") Q
"RTN","MAGGSQI",168,0)
 ;
"RTN","MAGGSQI",169,0)
 S MAGRY(0)="2^Images only point to Patient."
"RTN","MAGGSQI",170,0)
 Q
"RTN","MAGGSQI",171,0)
CHKGRPCH(CHKY,GRPIEN,GRPDFN,GRPCH) ; Check the child of a Group.  
"RTN","MAGGSQI",172,0)
 ;       i.e. an IEN in the "1" node of the Group.
"RTN","MAGGSQI",173,0)
 ;       Can't just check the IEN by calling CHK.  It might be okay that way.
"RTN","MAGGSQI",174,0)
 ;       Have to compare it to Groups IEN, and DFN
"RTN","MAGGSQI",175,0)
 N CHN0
"RTN","MAGGSQI",176,0)
 S CHN0=$G(^MAG(2005,GRPCH,0)) I '$L(CHN0) S CHKY="0^Invalid Image pointer" Q
"RTN","MAGGSQI",177,0)
 I $P(CHN0,U,7)'=GRPDFN S CHKY="0^Patient Mismatch in Group member:"_GRPCH Q
"RTN","MAGGSQI",178,0)
 I $P(CHN0,U,10)'=GRPIEN S CHKY="0^Pointer Mismatch in Group member:"_GRPCH Q
"RTN","MAGGSQI",179,0)
 S CHKY="1^Okay Group Image"
"RTN","MAGGSQI",180,0)
 Q
"RTN","MAGGTAU")
0^25^B66867957
"RTN","MAGGTAU",1,0)
MAGGTAU ;WOIFO/GEK/SG - RPC Calls to update the IMAGING WINDOWS WORKSTATION file ; 7/17/08 3:39pm
"RTN","MAGGTAU",2,0)
 ;;3.0;IMAGING;**7,16,8,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTAU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTAU",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTAU",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTAU",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTAU",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTAU",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTAU",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTAU",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTAU",11,0)
 ;; |                                                               |
"RTN","MAGGTAU",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTAU",13,0)
 ;; | a medical device.  As such, it may not be changed             |
"RTN","MAGGTAU",14,0)
 ;; | in any way.  Modifications to this software may result in an  |
"RTN","MAGGTAU",15,0)
 ;; | adulterated medical device under 21CFR820, the use of which   |
"RTN","MAGGTAU",16,0)
 ;; | is considered to be a violation of US Federal Statutes.       |
"RTN","MAGGTAU",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTAU",18,0)
 ;;
"RTN","MAGGTAU",19,0)
 Q
"RTN","MAGGTAU",20,0)
 ;
"RTN","MAGGTAU",21,0)
 ;***** UPDATES INFORMATIONS IN THE IMAGING WINDOWS WORKSTATION
"RTN","MAGGTAU",22,0)
 ; RPC: MAGG WRKS UPDATES
"RTN","MAGGTAU",23,0)
 ;
"RTN","MAGGTAU",24,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGGTAU",25,0)
 ;               are returned to.
"RTN","MAGGTAU",26,0)
 ;
"RTN","MAGGTAU",27,0)
 ; DATA          Data that should be stored in the IMAGING WINDOWS
"RTN","MAGGTAU",28,0)
 ;               WORKSTATION file (#2006.81):
"RTN","MAGGTAU",29,0)
 ;                 ^01: Workstation name
"RTN","MAGGTAU",30,0)
 ;                 ^02: Date/Time of Capture application (external)
"RTN","MAGGTAU",31,0)
 ;                 ^03: Date/Time of Display application (external)
"RTN","MAGGTAU",32,0)
 ;                 ^04: Location of the workstation
"RTN","MAGGTAU",33,0)
 ;                 ^05: Date/Time of the MAGSETUP (external)
"RTN","MAGGTAU",34,0)
 ;                 ^06: Version of the Display application
"RTN","MAGGTAU",35,0)
 ;                 ^07: Version of the Capture application
"RTN","MAGGTAU",36,0)
 ;                 ^08: Startup mode: 1 = Normal startup,
"RTN","MAGGTAU",37,0)
 ;                      2 = Started by CPRS, 3 = Import API
"RTN","MAGGTAU",38,0)
 ;                 ^09: OS Version
"RTN","MAGGTAU",39,0)
 ;                 ^10: VistaRad version
"RTN","MAGGTAU",40,0)
 ;                 ---- Patch MAG*3*59 ----
"RTN","MAGGTAU",41,0)
 ;                 ^11: RPCBroker server
"RTN","MAGGTAU",42,0)
 ;                 ^12: RPCBroker port
"RTN","MAGGTAU",43,0)
 ;                 ---- Patch MAG*3*93 ----
"RTN","MAGGTAU",44,0)
 ;                 ^13: Clinical Utilities version
"RTN","MAGGTAU",45,0)
 ;                 ^14: TeleReader version
"RTN","MAGGTAU",46,0)
 ;                 ^15: Date/Time of the Clinical Utilities (external)
"RTN","MAGGTAU",47,0)
 ;                 ^16: Date/Time of the TeleReader (external)
"RTN","MAGGTAU",48,0)
 ;                 ^17: Date/Time of the VistaRad (external)
"RTN","MAGGTAU",49,0)
 ; 
"RTN","MAGGTAU",50,0)
 ; Return Values
"RTN","MAGGTAU",51,0)
 ; =============
"RTN","MAGGTAU",52,0)
 ;
"RTN","MAGGTAU",53,0)
 ; Zero value of the first '^'-piece of the MAGRY indicates that
"RTN","MAGGTAU",54,0)
 ; an error occurred during the execution of the procedure. In this
"RTN","MAGGTAU",55,0)
 ; case, the MAGRY is formatted as follows:
"RTN","MAGGTAU",56,0)
 ;
"RTN","MAGGTAU",57,0)
 ; MAGRY                 Result descriptor
"RTN","MAGGTAU",58,0)
 ;                         ^01: 0
"RTN","MAGGTAU",59,0)
 ;                         ^02: Error message (optional)
"RTN","MAGGTAU",60,0)
 ;
"RTN","MAGGTAU",61,0)
 ; Otherwise, first '^'-piece of the MAGRY contains the session
"RTN","MAGGTAU",62,0)
 ; number (IEN in the IMAGING WINDOWS SESSIONS file (#2006.82)):
"RTN","MAGGTAU",63,0)
 ;  
"RTN","MAGGTAU",64,0)
 ; MAGRY                 Result descriptor
"RTN","MAGGTAU",65,0)
 ;                         ^01: Session IEN (file #2006.82)
"RTN","MAGGTAU",66,0)
 ;                         ^02: Message
"RTN","MAGGTAU",67,0)
 ;
"RTN","MAGGTAU",68,0)
 ; Notes
"RTN","MAGGTAU",69,0)
 ; =====
"RTN","MAGGTAU",70,0)
 ;
"RTN","MAGGTAU",71,0)
 ; This remote procedure is called after user login (local and remote 
"RTN","MAGGTAU",72,0)
 ; image view).
"RTN","MAGGTAU",73,0)
 ;
"RTN","MAGGTAU",74,0)
UPD(MAGRY,DATA) ;RPC [MAGG WRKS UPDATES]
"RTN","MAGGTAU",75,0)
 N MAG0,MAGI,MAGIEN,MAGLOC,MAGMODE,MAGNAME,MAGOSVER,MAGPL
"RTN","MAGGTAU",76,0)
 N MAGSRV,MAGSTART,MAGVERVR,MAGVERX,X,Y,Z
"RTN","MAGGTAU",77,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",78,0)
 ;
"RTN","MAGGTAU",79,0)
 S MAGNAME=$P(DATA,U,1)
"RTN","MAGGTAU",80,0)
 S MAGLOC=$P(DATA,U,4)
"RTN","MAGGTAU",81,0)
 S:$P(DATA,U,6) MAGJOB("DISPLAY")=""
"RTN","MAGGTAU",82,0)
 S:$P(DATA,U,7) MAGJOB("CAPTURE")=""
"RTN","MAGGTAU",83,0)
 S MAGMODE=$P(DATA,U,8)
"RTN","MAGGTAU",84,0)
 S MAGOSVER=$P(DATA,U,9)
"RTN","MAGGTAU",85,0)
 S MAGVERVR=$P(DATA,U,10)
"RTN","MAGGTAU",86,0)
 S:$P(DATA,U,11)]"" MAGJOB("RPCSERVER")=$P(DATA,U,11)
"RTN","MAGGTAU",87,0)
 S:$P(DATA,U,12)]"" MAGJOB("RPCPORT")=$P(DATA,U,12)
"RTN","MAGGTAU",88,0)
 ;
"RTN","MAGGTAU",89,0)
 S MAGIEN=$S($L(MAGNAME):$O(^MAG(2006.81,"B",MAGNAME,"")),1:0)
"RTN","MAGGTAU",90,0)
 I 'MAGIEN   D NEWWRKS(MAGNAME,MAGLOC,.MAGIEN)
"RTN","MAGGTAU",91,0)
 I MAGIEN<1  S MAGRY="0^Workstation Not on file"  Q
"RTN","MAGGTAU",92,0)
 ;
"RTN","MAGGTAU",93,0)
 S MAG0=^MAG(2006.81,MAGIEN,0) ; '0' node for use later.
"RTN","MAGGTAU",94,0)
 L +^MAG(2006.81,"LOCK",MAGIEN):0
"RTN","MAGGTAU",95,0)
 S MAGIEN=+MAGIEN_","
"RTN","MAGGTAU",96,0)
 S MAGGFDA(2006.81,MAGIEN,.01)=MAGNAME ; Computer name
"RTN","MAGGTAU",97,0)
 S MAGGFDA(2006.81,MAGIEN,3)="@"  ; Delete logoff time for this job
"RTN","MAGGTAU",98,0)
 S MAGGFDA(2006.81,MAGIEN,6)=MAGLOC    ; Location free text from .INI
"RTN","MAGGTAU",99,0)
 S MAGGFDA(2006.81,MAGIEN,8)=1         ; Active or not
"RTN","MAGGTAU",100,0)
 S MAGGFDA(2006.81,MAGIEN,10)="@"      ; Delete session pointer
"RTN","MAGGTAU",101,0)
 S MAGGFDA(2006.81,MAGIEN,11)="@"      ; Reset the session error count
"RTN","MAGGTAU",102,0)
 S MAGGFDA(2006.81,MAGIEN,13)=MAGOSVER ; Operating system version
"RTN","MAGGTAU",103,0)
 ;
"RTN","MAGGTAU",104,0)
 ;=== Process the client date/time values (MAG*3*93)
"RTN","MAGGTAU",105,0)
 F MAGI="2^5.5","3^5","5^7","15^5.9","16^5.3","17^5.7"  D
"RTN","MAGGTAU",106,0)
 . ;--- Convert date/time into internal format
"RTN","MAGGTAU",107,0)
 . S %DT="T",X=$P(DATA,U,+MAGI)  D ^%DT
"RTN","MAGGTAU",108,0)
 . S $P(DATA,U,+MAGI)=Y
"RTN","MAGGTAU",109,0)
 . ;--- Prepare the date/time for storage
"RTN","MAGGTAU",110,0)
 . S:Y>-1 MAGGFDA(2006.81,MAGIEN,$P(MAGI,U,2))=Y
"RTN","MAGGTAU",111,0)
 . Q
"RTN","MAGGTAU",112,0)
 ;
"RTN","MAGGTAU",113,0)
 ;=== Process the client version numbers (MAG*3*93)
"RTN","MAGGTAU",114,0)
 S MAGVERX=""
"RTN","MAGGTAU",115,0)
 F MAGI="6^9","7^9.5","10^9.7","13^9.9","14^9.3"  D
"RTN","MAGGTAU",116,0)
 . S X=$P(DATA,U,+MAGI)  Q:X=""
"RTN","MAGGTAU",117,0)
 . ;--- Prepare the version number for storage
"RTN","MAGGTAU",118,0)
 . S MAGGFDA(2006.81,MAGIEN,$P(MAGI,U,2))=X
"RTN","MAGGTAU",119,0)
 . ;--- Whatever application calls, we'll use that version (MAG*3*8)
"RTN","MAGGTAU",120,0)
 . S:MAGVERX="" MAGVERX=X
"RTN","MAGGTAU",121,0)
 . Q
"RTN","MAGGTAU",122,0)
 ;
"RTN","MAGGTAU",123,0)
 S X=$P(MAG0,U,12)
"RTN","MAGGTAU",124,0)
 S MAGGFDA(2006.81,MAGIEN,12)=X+1 ; Sess count for wrks.
"RTN","MAGGTAU",125,0)
 ; Keep PLACE that this wrks logged in.
"RTN","MAGGTAU",126,0)
 S MAGPL=$S($G(DUZ(2)):+$$PLACE^MAGBAPI(DUZ(2)),1:0) ; DBI
"RTN","MAGGTAU",127,0)
 S:MAGPL MAGGFDA(2006.81,MAGIEN,.04)=MAGPL ; DBI
"RTN","MAGGTAU",128,0)
 ;
"RTN","MAGGTAU",129,0)
 S MAGSTART=$E($$NOW^XLFDT,1,12)
"RTN","MAGGTAU",130,0)
 I $G(DUZ) D
"RTN","MAGGTAU",131,0)
 . S MAGGFDA(2006.81,MAGIEN,1)=DUZ
"RTN","MAGGTAU",132,0)
 . S MAGGFDA(2006.81,MAGIEN,2)=MAGSTART
"RTN","MAGGTAU",133,0)
 . Q
"RTN","MAGGTAU",134,0)
 ;
"RTN","MAGGTAU",135,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",136,0)
 I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGTAU",137,0)
 ; The MAGJOB( array is used by Imaging routines that are
"RTN","MAGGTAU",138,0)
 ; called from the Delphi App. 
"RTN","MAGGTAU",139,0)
 ; 
"RTN","MAGGTAU",140,0)
 S MAGJOB("WRKSIEN")=+MAGIEN
"RTN","MAGGTAU",141,0)
 S MAGJOB("VERSION")=MAGVERX
"RTN","MAGGTAU",142,0)
 S MAGRY="1^"
"RTN","MAGGTAU",143,0)
 ;
"RTN","MAGGTAU",144,0)
 ; SESSION : Create new session entry
"RTN","MAGGTAU",145,0)
 D GETS^DIQ(200,DUZ_",","29","I","Z","") ; service/section
"RTN","MAGGTAU",146,0)
 S MAGSRV=$G(Z(200,DUZ_",",29,"I"))
"RTN","MAGGTAU",147,0)
 ;
"RTN","MAGGTAU",148,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",149,0)
 S MAGGFDA(2006.82,"+1,",.01)=$P(^VA(200,DUZ,0),U,1) ; User
"RTN","MAGGTAU",150,0)
 S MAGGFDA(2006.82,"+1,",1)=DUZ ; USER
"RTN","MAGGTAU",151,0)
 S MAGGFDA(2006.82,"+1,",2)=MAGSTART ; Sess Start Time
"RTN","MAGGTAU",152,0)
 S MAGGFDA(2006.82,"+1,",4)=+MAGIEN ; Wrks
"RTN","MAGGTAU",153,0)
 S MAGGFDA(2006.82,"+1,",7)=+MAGSRV ; User's Service/Section
"RTN","MAGGTAU",154,0)
 S MAGGFDA(2006.82,"+1,",13)=MAGMODE ; 1=normal 2= started by CPRS
"RTN","MAGGTAU",155,0)
 ; DBI - save the logon PLACE in the Session file.
"RTN","MAGGTAU",156,0)
 I MAGPL S MAGGFDA(2006.82,"+1,",.04)=MAGPL ; User's Institution (Imaging site param entry)
"RTN","MAGGTAU",157,0)
 ;
"RTN","MAGGTAU",158,0)
 ; 3.0.8  new fields 9 Client Ver, 9.2 Host Version, 9.4 OS Version 
"RTN","MAGGTAU",159,0)
 S MAGGFDA(2006.82,"+1,",9)=MAGVERX ;
"RTN","MAGGTAU",160,0)
 S MAGGFDA(2006.82,"+1,",9.2)=$$VERSION^XPDUTL("IMAGING") ;
"RTN","MAGGTAU",161,0)
 S MAGGFDA(2006.82,"+1,",9.4)=MAGOSVER ;
"RTN","MAGGTAU",162,0)
 ;         
"RTN","MAGGTAU",163,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",164,0)
 I $D(DIERR) D RTRNERR(.MAGRY) Q
"RTN","MAGGTAU",165,0)
 S MAGRY="1^"
"RTN","MAGGTAU",166,0)
 I '+MAGXIEN(1) S MAGRY="0^" Q
"RTN","MAGGTAU",167,0)
 S MAGJOB("SESSION")=+MAGXIEN(1)
"RTN","MAGGTAU",168,0)
 S MAGRY=MAGJOB("SESSION")_"^Session # "_MAGJOB("SESSION")_" Started."
"RTN","MAGGTAU",169,0)
 S MAGGFDA(2006.81,+MAGIEN_",",10)=+MAGXIEN(1)
"RTN","MAGGTAU",170,0)
 D UPDATE^DIE("","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",171,0)
 D ACTION("LOGON^")
"RTN","MAGGTAU",172,0)
 Q
"RTN","MAGGTAU",173,0)
LOGACT(MAGRY,ACTION) ;RPC [MAG3 LOGACTION]
"RTN","MAGGTAU",174,0)
 ; Call to log actions for Imaging Session from
"RTN","MAGGTAU",175,0)
 ; Delphi interface
"RTN","MAGGTAU",176,0)
 D ACTION(ACTION)
"RTN","MAGGTAU",177,0)
 S MAGRY="1^Action Logged"
"RTN","MAGGTAU",178,0)
 Q
"RTN","MAGGTAU",179,0)
ACTION(TXT,LOGTM,MAGSESS) ;Call to log actions for Imaging Workstation Session from other M routines
"RTN","MAGGTAU",180,0)
 ; ACTIONS LOGGED
"RTN","MAGGTAU",181,0)
 ; LOGON - Session StartTime     LOGOFF - Session End Time
"RTN","MAGGTAU",182,0)
 ; IMG   - Image accessed        PAT    - Patient Accessed
"RTN","MAGGTAU",183,0)
 ; CAP   - Image Captured  
"RTN","MAGGTAU",184,0)
 ; DEL   - Image Deleted         MOD    - Image entry modified
"RTN","MAGGTAU",185,0)
 ; IMPORT - Import API has been called
"RTN","MAGGTAU",186,0)
 ; Data   - a node of data passed to Import API
"RTN","MAGGTAU",187,0)
 ; Result - a node of the Result Array from Import API Processing.
"RTN","MAGGTAU",188,0)
 ; Image  - one of the Images (full path of import directory) that was imported.
"RTN","MAGGTAU",189,0)
 ; PPACT  - A Post processing Action has been processed.
"RTN","MAGGTAU",190,0)
 ; VR-VW  - VistaRad Exam displayed
"RTN","MAGGTAU",191,0)
 ; VR-INT - VistaRad Exam interpreted
"RTN","MAGGTAU",192,0)
 ; API   - parameters sent to CP API, and the API Call i.e. ITIU-MDAPI
"RTN","MAGGTAU",193,0)
 ; DFTINDX- If the index fields have no values, call to Patch 17 code to
"RTN","MAGGTAU",194,0)
 ;               generate the values for the fields.
"RTN","MAGGTAU",195,0)
 ; MOD   - This was intended to log Modifications to Image Entries, it is 
"RTN","MAGGTAU",196,0)
 ;         (for now) only called when a group entry has an image added to its multiple.
"RTN","MAGGTAU",197,0)
 ;
"RTN","MAGGTAU",198,0)
 ; TXT is "^" delimited string
"RTN","MAGGTAU",199,0)
 ; $P(1) is code ( see above )   $P(2) is DFN
"RTN","MAGGTAU",200,0)
 ; $P(3) is Image IEN            $P(4) reserved for procedure
"RTN","MAGGTAU",201,0)
 ; $P(5) reserved for time-stamp $P(6) is Vrad Image Count
"RTN","MAGGTAU",202,0)
 ; $P(7) is Vrad Patient Count
"RTN","MAGGTAU",203,0)
 ; $P(8) is Vrad User Type (1/0 = Rad/Non-Rad)
"RTN","MAGGTAU",204,0)
 ; $P(9) is Vrad REMOTE Read flag (1/0; 1=REMOTE)
"RTN","MAGGTAU",205,0)
 ; $P(TXT,"$$",2) is Tracking ID from an Imported Image.  From this we compute Session #, to log actions.
"RTN","MAGGTAU",206,0)
 ; LOGTM   - [1|0] Flag to indicate whether or not to log the time of the Action.  Default = 0
"RTN","MAGGTAU",207,0)
 ; MAGSESS - Session IEN where the action should be logged.  Default to MAGJOB("SESSION")
"RTN","MAGGTAU",208,0)
 ;
"RTN","MAGGTAU",209,0)
 N NODE,SESSIEN,MAGGFDA,MAGXERR,MAGXIEN,MAGPROC,LOGX,TRKID
"RTN","MAGGTAU",210,0)
 S LOGTM=$G(LOGTM)
"RTN","MAGGTAU",211,0)
 I TXT["$$" S TRKID=$P(TXT,"$$",2),TXT=$P(TXT,"$$",1)
"RTN","MAGGTAU",212,0)
 S SESSIEN=$S($G(MAGSESS):MAGSESS,$D(MAGJOB("SESSION")):MAGJOB("SESSION"),$G(TRKID)'="":$O(^MAG(2006.82,"E",TRKID,""),-1),1:0)
"RTN","MAGGTAU",213,0)
 I 'SESSIEN Q
"RTN","MAGGTAU",214,0)
 S NODE="+1,"_SESSIEN_","
"RTN","MAGGTAU",215,0)
 I $P(TXT,U,3) S MAGPROC=$P($G(^MAG(2005,$P(TXT,U,3),0)),U,8)
"RTN","MAGGTAU",216,0)
 ;
"RTN","MAGGTAU",217,0)
 I $P(TXT,U)="PAT" D
"RTN","MAGGTAU",218,0)
 . S Z=+$G(^MAG(2006.82,SESSIEN,1))+1
"RTN","MAGGTAU",219,0)
 . S MAGGFDA(2006.82,SESSIEN_",",10)=Z
"RTN","MAGGTAU",220,0)
 I $P(TXT,U)="IMG" D
"RTN","MAGGTAU",221,0)
 . S Z=+$P($G(^MAG(2006.82,SESSIEN,1)),U,2)+1
"RTN","MAGGTAU",222,0)
 . S MAGGFDA(2006.82,SESSIEN_",",11)=Z
"RTN","MAGGTAU",223,0)
 . D ENTRY^MAGLOG("IMGVW",DUZ,$P(TXT,"^",3),"Wrks",$P(TXT,"^",2),"1")
"RTN","MAGGTAU",224,0)
 . D ACCESS^MAGLOG($P(TXT,"^",3))
"RTN","MAGGTAU",225,0)
 I $E(TXT,1,3)="CAP" D
"RTN","MAGGTAU",226,0)
 . S Z=+$P($G(^MAG(2006.82,SESSIEN,1)),U,3)+1
"RTN","MAGGTAU",227,0)
 . S MAGGFDA(2006.82,SESSIEN_",",12)=Z
"RTN","MAGGTAU",228,0)
 . D ENTRY^MAGLOG("CAP",DUZ,$P(TXT,"^",3),"Wrks",$P(TXT,"^",2),"1")
"RTN","MAGGTAU",229,0)
 I $P(TXT,U,2) D
"RTN","MAGGTAU",230,0)
 . S MAGGFDA(2006.82,SESSIEN_",",5)=$P(TXT,U,2)
"RTN","MAGGTAU",231,0)
 I LOGTM D
"RTN","MAGGTAU",232,0)
 . S X=$$NOW^XLFDT
"RTN","MAGGTAU",233,0)
 . S $P(TXT,U,4)=$G(MAGPROC),$P(TXT,U,5)=$E(X,1,12)
"RTN","MAGGTAU",234,0)
 S MAGGFDA(2006.821,NODE,.01)=$P(TXT,"|",1)
"RTN","MAGGTAU",235,0)
 I $L(TXT,"|")>1 S MAGGFDA(2006.821,NODE,13)=$P(TXT,"|",2,99)
"RTN","MAGGTAU",236,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",237,0)
 Q
"RTN","MAGGTAU",238,0)
NEWWRKS(MAGNAME,MAGLOC,MAGIEN) ;
"RTN","MAGGTAU",239,0)
 I $G(MAGNAME)="" Q
"RTN","MAGGTAU",240,0)
 N Y,MAGNFDA,MAGNIEN
"RTN","MAGGTAU",241,0)
 S MAGNFDA(2006.81,"+1,",.01)=MAGNAME
"RTN","MAGGTAU",242,0)
 S MAGNFDA(2006.81,"+1,",6)=$G(MAGLOC)
"RTN","MAGGTAU",243,0)
 D UPDATE^DIE("","MAGNFDA","MAGNIEN")
"RTN","MAGGTAU",244,0)
 S MAGIEN=MAGNIEN(1)
"RTN","MAGGTAU",245,0)
 Q
"RTN","MAGGTAU",246,0)
LOGOFF(MAGRY) ;RPC [MAGG LOGOFF] Call when session is over.
"RTN","MAGGTAU",247,0)
 ; This updates session file with logoff time
"RTN","MAGGTAU",248,0)
 ;   and marks the session closed.
"RTN","MAGGTAU",249,0)
 ;
"RTN","MAGGTAU",250,0)
 S MAGRY=1
"RTN","MAGGTAU",251,0)
 N MAGGFDA,MAGXERR,MAGXIEN,MAGIEN,MAGSESS,MAGEND,MAGCON
"RTN","MAGGTAU",252,0)
 ; The Imaging Workstation file keeps time of login
"RTN","MAGGTAU",253,0)
 ; We'll enter the logoff time ($$now^xlfdt) here.
"RTN","MAGGTAU",254,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTAU",255,0)
 S MAGEND=$E(X,1,12)
"RTN","MAGGTAU",256,0)
 Q:'+$G(MAGJOB("WRKSIEN"))
"RTN","MAGGTAU",257,0)
 L -^MAG(2006.81,"LOCK",MAGJOB("WRKSIEN"))
"RTN","MAGGTAU",258,0)
 S MAGIEN=+MAGJOB("WRKSIEN")_","
"RTN","MAGGTAU",259,0)
 S MAGGFDA(2006.81,MAGIEN,3)=MAGEND ; logoff dttm
"RTN","MAGGTAU",260,0)
 S MAGGFDA(2006.81,MAGIEN,8)=0 ; Set job number to 0
"RTN","MAGGTAU",261,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",262,0)
 ;MAGJOB("WRKSIEN")
"RTN","MAGGTAU",263,0)
 Q:(+$G(MAGJOB("SESSION"))=0)
"RTN","MAGGTAU",264,0)
 S MAGSESS=+MAGJOB("SESSION")_","
"RTN","MAGGTAU",265,0)
 K MAGGFDA,MAGXERR,MAGXIEN
"RTN","MAGGTAU",266,0)
 S MAGGFDA(2006.82,MAGSESS,3)=MAGEND
"RTN","MAGGTAU",267,0)
 ; calculate the length of the session
"RTN","MAGGTAU",268,0)
 S MAGCON=""
"RTN","MAGGTAU",269,0)
 S MAGGFDA(2006.82,MAGSESS,14)=MAGCON
"RTN","MAGGTAU",270,0)
 D UPDATE^DIE("S","MAGGFDA","MAGXIEN","MAGXERR")
"RTN","MAGGTAU",271,0)
 D ACTION("LOGOFF^")
"RTN","MAGGTAU",272,0)
 ;
"RTN","MAGGTAU",273,0)
 Q
"RTN","MAGGTAU",274,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGTAU",275,0)
 S ETXT="0^ERROR  "_MAGXERR("DIERR",1,"TEXT",1)
"RTN","MAGGTAU",276,0)
 Q
"RTN","MAGGTIA1")
0^20^B33003499
"RTN","MAGGTIA1",1,0)
MAGGTIA1 ;WOIFO/GEK/SG - RPC Call to Add Image File entry ; 1/22/09 1:42pm
"RTN","MAGGTIA1",2,0)
 ;;3.0;IMAGING;**21,8,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTIA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTIA1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIA1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIA1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIA1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIA1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIA1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIA1",11,0)
 ;; |                                                               |
"RTN","MAGGTIA1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIA1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIA1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIA1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIA1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIA1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIA1",18,0)
 ;;
"RTN","MAGGTIA1",19,0)
 Q
"RTN","MAGGTIA1",20,0)
ADD ;Now call Fileman to file the data
"RTN","MAGGTIA1",21,0)
 N NEWIEN,MAGGDA,X,Y
"RTN","MAGGTIA1",22,0)
 ;~~~ Delete this comment and the following line of code when
"RTN","MAGGTIA1",23,0)
 ;    the IMAGE AUDIT file (#2005.1) is completely eliminated.
"RTN","MAGGTIA1",24,0)
 ;    Because we delete the Image node on image deletion, we have to 
"RTN","MAGGTIA1",25,0)
 ;    check the last entry in Audit File, to see if it is greater
"RTN","MAGGTIA1",26,0)
 ;~~~ than the last image in the Image File.
"RTN","MAGGTIA1",27,0)
 I ($O(^MAG(2005,"A"),-1)<$O(^MAG(2005.1,"A"),-1)) S $P(^MAG(2005,0),U,3)=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGTIA1",28,0)
 ;   we know that MAGGIEN WILL contain the internal number.
"RTN","MAGGTIA1",29,0)
 ;    after the call.
"RTN","MAGGTIA1",30,0)
 ;
"RTN","MAGGTIA1",31,0)
 I $G(MAGMOD) D  Q  ; WE'LL QUIT AFTER MODIFICATION
"RTN","MAGGTIA1",32,0)
 . D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",33,0)
 . S MAGRY="1^OK"
"RTN","MAGGTIA1",34,0)
 . ; Now, after UPDATE^DIE, we aren't getting the MAGGIEN array., We'll use MAGMOD
"RTN","MAGGTIA1",35,0)
 . D ACTION^MAGGTAU("MOD^"_$P(^MAG(2005,+MAGMOD,0),U,7)_"^"_+$G(MAGMOD)) ; This is the Image IEN
"RTN","MAGGTIA1",36,0)
 ;
"RTN","MAGGTIA1",37,0)
 S (MAGGIEN(1),NEWIEN)=$$NEWIEN^MAGGI12()  ; SG - MAG*3*93
"RTN","MAGGTIA1",38,0)
 D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",39,0)
 ;
"RTN","MAGGTIA1",40,0)
 I '$G(MAGGIEN(1)) D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",41,0)
 . S MAGERR="0^ERROR Creating new Image File Entry "
"RTN","MAGGTIA1",42,0)
 . I $D(DIERR) D RTRNERR(.MAGERR)
"RTN","MAGGTIA1",43,0)
 . D CLEAN
"RTN","MAGGTIA1",44,0)
 ;
"RTN","MAGGTIA1",45,0)
 S MAGGDA=MAGGIEN(1)
"RTN","MAGGTIA1",46,0)
 ;
"RTN","MAGGTIA1",47,0)
 D ACTION^MAGGTAU("CAP^"_MAGGFDA(2005,"+1,",5)_"^"_MAGGDA)
"RTN","MAGGTIA1",48,0)
 ;
"RTN","MAGGTIA1",49,0)
 ; IF a group, Modify GROUP PARENT in each Group Object and QUIT
"RTN","MAGGTIA1",50,0)
 ;   we'll do this by hand, Else it'll take forever.
"RTN","MAGGTIA1",51,0)
 ;   we Return the IEN with NO Filename. Groups don't get Filename
"RTN","MAGGTIA1",52,0)
 ;
"RTN","MAGGTIA1",53,0)
 I MAGGR S MAGRY=MAGGDA_U,Z="" D  G C1
"RTN","MAGGTIA1",54,0)
 . F  S Z=$O(MAGGR(Z)) Q:Z=""  S $P(^MAG(2005,Z,0),U,10)=MAGGDA
"RTN","MAGGTIA1",55,0)
 . D CLEAN
"RTN","MAGGTIA1",56,0)
 ;
"RTN","MAGGTIA1",57,0)
 S X=$G(MAGGFDA(2005,"+1,",14)) I +X D
"RTN","MAGGTIA1",58,0)
 . ; If here: This image is a member of a Group
"RTN","MAGGTIA1",59,0)
 . ;   -Modify the Group Parent, add DA to it's group
"RTN","MAGGTIA1",60,0)
 . ;   -Also set 'Series Number' and 'Image Number' if they exist;
"RTN","MAGGTIA1",61,0)
 . K MAGGFDA
"RTN","MAGGTIA1",62,0)
 . S Y="+2,"_X_","
"RTN","MAGGTIA1",63,0)
 . S MAGGFDA(2005.04,Y,.01)=MAGGDA
"RTN","MAGGTIA1",64,0)
 . ; GEK 4/4/00 ADDED $L( we were dying on "0"
"RTN","MAGGTIA1",65,0)
 . I $L($G(MAGDCMSN)) S MAGGFDA(2005.04,Y,1)=MAGDCMSN
"RTN","MAGGTIA1",66,0)
 . I $L($G(MAGDCMIN)) S MAGGFDA(2005.04,Y,2)=MAGDCMIN
"RTN","MAGGTIA1",67,0)
 . D UPDATE^DIE("S","MAGGFDA","MAGGIEN","MAGGXE")
"RTN","MAGGTIA1",68,0)
 ;
"RTN","MAGGTIA1",69,0)
 ; Now get the Image file name. DOS FILE name
"RTN","MAGGTIA1",70,0)
 ; The ENTRY in Image File has been made, if any errors from here on
"RTN","MAGGTIA1",71,0)
 ;  then we have to delete the image entry.
"RTN","MAGGTIA1",72,0)
 I $D(MAGGFDA(2005,"+1,",1)) S MAGGFNM=MAGGFDA(2005,"+1,",1) G C1
"RTN","MAGGTIA1",73,0)
 K MAGGFDA
"RTN","MAGGTIA1",74,0)
 S X=$$DA2NAME^MAGGTU1(MAGGDA,$G(MAGGEXT)) I 'X D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",75,0)
 . S MAGERR=X
"RTN","MAGGTIA1",76,0)
 . S DA=MAGGDA,DIK="^MAG(2005," D ^DIK
"RTN","MAGGTIA1",77,0)
 . K DA,DIC,DIK
"RTN","MAGGTIA1",78,0)
 . D CLEAN
"RTN","MAGGTIA1",79,0)
 S MAGGFNM=$P(X,U,2),Y=MAGGDA_","
"RTN","MAGGTIA1",80,0)
 S MAGGFDA(2005,Y,1)=MAGGFNM
"RTN","MAGGTIA1",81,0)
 D UPDATE^DIE("","MAGGFDA","","MAGGXE")
"RTN","MAGGTIA1",82,0)
 ;   shouldn't have an error just editing one entry, but just in case.
"RTN","MAGGTIA1",83,0)
 I $D(DIERR) D  S MAGRY=MAGERR Q
"RTN","MAGGTIA1",84,0)
 . D RTRNERR(.MAGERR)
"RTN","MAGGTIA1",85,0)
 . S DA=MAGGDA,DIK="^MAG(2005," D ^DIK
"RTN","MAGGTIA1",86,0)
 . K DA,DIC,DIK
"RTN","MAGGTIA1",87,0)
 . D CLEAN
"RTN","MAGGTIA1",88,0)
 ;
"RTN","MAGGTIA1",89,0)
C1 ; we jump here if we already had a Filename sent
"RTN","MAGGTIA1",90,0)
 K MAGGFDA
"RTN","MAGGTIA1",91,0)
 ; New Index Field Check.  If this entry doesn't have the Index fields introduced
"RTN","MAGGTIA1",92,0)
 ;   in 3.0.8 then we use the Patch 17 conversion API call to generate default values.
"RTN","MAGGTIA1",93,0)
 ;
"RTN","MAGGTIA1",94,0)
 ;P59 Now we Auto-Generate the Index Fields, if they don't exist for this entry.
"RTN","MAGGTIA1",95,0)
 I '$D(^MAG(2005,MAGGDA,40)) D
"RTN","MAGGTIA1",96,0)
 . N INDXD
"RTN","MAGGTIA1",97,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGTIA1",98,0)
 . S ^MAG(2005,MAGGDA,40)=INDXD
"RTN","MAGGTIA1",99,0)
 . S ^MAGIXCVT(2006.96,MAGGDA)=2 ; Flag. Says fields were converted Patch 59
"RTN","MAGGTIA1",100,0)
 . ; TRKING ID  TRKID =   MAGGFDA(2005,"+1,",108)
"RTN","MAGGTIA1",101,0)
 . D ACTION^MAGGTAU("INDEX-ALL^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA) ;_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGTIA1",102,0)
 . D ENTRY^MAGLOG("INDEX-ALL",DUZ,MAGGDA,"P59",$P(^MAG(2005,MAGGDA,0),"^",7),1)
"RTN","MAGGTIA1",103,0)
 . Q
"RTN","MAGGTIA1",104,0)
 ;P59 If TYPE INDEX is missing we Auto-Generate Index Type and other missing Index Term values.
"RTN","MAGGTIA1",105,0)
 I '$P(^MAG(2005,MAGGDA,40),"^",3) D
"RTN","MAGGTIA1",106,0)
 . N INDXD,J,OLD40,N40
"RTN","MAGGTIA1",107,0)
 . S (N40,OLD40)=^MAG(2005,MAGGDA,40)
"RTN","MAGGTIA1",108,0)
 . D GENIEN^MAGXCVI(MAGGDA,.INDXD)
"RTN","MAGGTIA1",109,0)
 . ; If Origin doesn't exist in existing, this will put V in. 
"RTN","MAGGTIA1",110,0)
 . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGTIA1",111,0)
 . ; We're not changing existing values of Spec,Proc or Origin 
"RTN","MAGGTIA1",112,0)
 . F J=1:1:6 I '$L($P(N40,"^",J)) S $P(N40,"^",J)=$P(INDXD,"^",J)
"RTN","MAGGTIA1",113,0)
 . ;Validate the merged Spec and Proc, if  not valid, revert back to old Spec and Proc
"RTN","MAGGTIA1",114,0)
 . I '$$VALINDEX^MAGGSIV1(.X,$P(N40,"^",3),$P(N40,"^",5),$P(N40,"^",4)) S $P(N40,"^",4,5)=$P(OLD40,"^",4,5)
"RTN","MAGGTIA1",115,0)
 . S ^MAG(2005,MAGGDA,40)=N40
"RTN","MAGGTIA1",116,0)
 . D ACTION^MAGGTAU("INDEX-42^"_$P(^MAG(2005,MAGGDA,0),"^",7)_"^"_MAGGDA) ;_"$$"_MAGGFDA(2005,"+1,",108))
"RTN","MAGGTIA1",117,0)
 . D ENTRY^MAGLOG("INDEX-42",DUZ,MAGGDA,"P59",$P(^MAG(2005,MAGGDA,0),"^",7),1)
"RTN","MAGGTIA1",118,0)
 . Q
"RTN","MAGGTIA1",119,0)
 ;** ABS and JB image queues AREN'T SET WHEN ADDING AN IMAGE. 
"RTN","MAGGTIA1",120,0)
 ;** IT IS DONE IN A SEPERATE CALL 
"RTN","MAGGTIA1",121,0)
 ;** RPC =-> 'MAG ABSJB' after abstract is/isn't created on 
"RTN","MAGGTIA1",122,0)
 ;**  the workstation
"RTN","MAGGTIA1",123,0)
 ;
"RTN","MAGGTIA1",124,0)
 ; Queue it to be copied to Jukebox.
"RTN","MAGGTIA1",125,0)
 ;        CREATE ABSTRACT
"RTN","MAGGTIA1",126,0)
 ; visn15 ADDED $$DA2PLCA to resolve the Image's current PLACE
"RTN","MAGGTIA1",127,0)
 I $G(MAGGABS)="YES" S X=$$ABSTRACT^MAGBAPI(MAGGDA,$$DA2PLC^MAGBAPIP(MAGGDA,"A"))
"RTN","MAGGTIA1",128,0)
 ;        RESTORE AFTER GLOBAL SETUP
"RTN","MAGGTIA1",129,0)
 I $G(MAGGJB)="YES" S X=$$JUKEBOX^MAGBAPI(MAGGDA,$$DA2PLC^MAGBAPIP(MAGGDA,"F"))
"RTN","MAGGTIA1",130,0)
 ;     Code for setting a Queue to Copy BIG to JUKEBOX
"RTN","MAGGTIA1",131,0)
 ; 
"RTN","MAGGTIA1",132,0)
 ;  We return the IEN ^ DRIVE:DIR ^ FILE.EXT
"RTN","MAGGTIA1",133,0)
 ;   example:   487^C:\IMAGE\^DC000487.TIF
"RTN","MAGGTIA1",134,0)
 ;  The calling routine is responsible for renaming/naming the file
"RTN","MAGGTIA1",135,0)
 ;   to the returned DRIVE:\DIR\FILENAME.EXT
"RTN","MAGGTIA1",136,0)
 ;  4/23/98 to include hierarchical directory structure -- PMK
"RTN","MAGGTIA1",137,0)
 ;
"RTN","MAGGTIA1",138,0)
 I 'MAGGR D
"RTN","MAGGTIA1",139,0)
 . S MAGDHASH=$$DIRHASH^MAGFILEB(MAGGFNM,MAGREF)
"RTN","MAGGTIA1",140,0)
 . S MAGRY=MAGGDA_U_MAGGDRV_MAGDHASH_U_MAGGFNM
"RTN","MAGGTIA1",141,0)
 . ; For now, BIG files are in same directory as FullRes (or PACS) file
"RTN","MAGGTIA1",142,0)
 . I $G(MAGBIG) D
"RTN","MAGGTIA1",143,0)
 . . S X=$P(MAGGFNM,".",1)_".BIG"
"RTN","MAGGTIA1",144,0)
 . . S MAGRY=MAGRY_U_MAGGDRV_MAGDHASH_U_X
"RTN","MAGGTIA1",145,0)
 . . Q
"RTN","MAGGTIA1",146,0)
 . Q
"RTN","MAGGTIA1",147,0)
 ;
"RTN","MAGGTIA1",148,0)
CLEAN ;
"RTN","MAGGTIA1",149,0)
 D CLEAN^DILF
"RTN","MAGGTIA1",150,0)
 L -^MAG(2005,NEWIEN)
"RTN","MAGGTIA1",151,0)
 Q
"RTN","MAGGTIA1",152,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGTIA1",153,0)
 S ETXT="0^ERROR  "_MAGGXE("DIERR",1,"TEXT",1)
"RTN","MAGGTIA1",154,0)
 Q
"RTN","MAGGTIA1",155,0)
ERR ; Error trap
"RTN","MAGGTIA1",156,0)
 S MAGRY="0^ERROR "_$$EC^%ZOSV
"RTN","MAGGTIA1",157,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTIA1",158,0)
 Q
"RTN","MAGGTIA1",159,0)
MAKENAME() ; MAGGFDA exists so get info from that.
"RTN","MAGGTIA1",160,0)
 ; We'll make NAME (.01)  with PATIENT NAME   SSN
"RTN","MAGGTIA1",161,0)
 ; DOCUMENT Imaging was making name of
"RTN","MAGGTIA1",162,0)
 ; $E(PATENT NAME,1,10)' '$E(DESC CATEG,1,9)' 'MM/DD/YY   (DOC DATE)
"RTN","MAGGTIA1",163,0)
 N Z,ZT,ZNAME,ZSSN,ZDESC
"RTN","MAGGTIA1",164,0)
 ; GEK 10/10/2000
"RTN","MAGGTIA1",165,0)
 ; Modifying this procedure to make same name for all Image types
"RTN","MAGGTIA1",166,0)
 ;  The name will be (first 18 chars of patient Name) _ SSN
"RTN","MAGGTIA1",167,0)
 I $D(MAGGFDA(2005,"+1,",10)) S ZDESC=$E(MAGGFDA(2005,"+1,",10),1,30)
"RTN","MAGGTIA1",168,0)
 I $D(MAGGFDA(2005,"+1,",5)) D
"RTN","MAGGTIA1",169,0)
 . S X=MAGGFDA(2005,"+1,",5)
"RTN","MAGGTIA1",170,0)
 . S ZNAME=$P(^DPT(X,0),U),ZSSN=$P(^DPT(X,0),U,9)
"RTN","MAGGTIA1",171,0)
 ;
"RTN","MAGGTIA1",172,0)
 ; For all Images the name is first 18 characters of patient name 
"RTN","MAGGTIA1",173,0)
 ;  concatenated with SSN.  If No patient name is sent, well make
"RTN","MAGGTIA1",174,0)
 ;  the name from the short desc.
"RTN","MAGGTIA1",175,0)
 I $D(ZNAME) S Z=$E(ZNAME,1,18)_"   "_ZSSN
"RTN","MAGGTIA1",176,0)
 E  S Z=ZDESC
"RTN","MAGGTIA1",177,0)
 Q Z
"RTN","MAGGTID")
0^35^B47456559
"RTN","MAGGTID",1,0)
MAGGTID ;WOIFO/SRR/RED/SAF/GEK/SG - Deletion of Images and Pointers ; 3/19/09 8:27am
"RTN","MAGGTID",2,0)
 ;;3.0;IMAGING;**8,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTID",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTID",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTID",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTID",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTID",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTID",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTID",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTID",11,0)
 ;; |                                                               |
"RTN","MAGGTID",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTID",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTID",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTID",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTID",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTID",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTID",18,0)
 ;;
"RTN","MAGGTID",19,0)
 Q
"RTN","MAGGTID",20,0)
 ;
"RTN","MAGGTID",21,0)
IMAGEDEL(MAGGRY,MAGIEN,MAGGRPDF,REASON) ;RPC [MAGG IMAGE DELETE]
"RTN","MAGGTID",22,0)
 ; Call to Delete Image entry from Image file ^MAG(2005
"RTN","MAGGTID",23,0)
 ; MAGIEN   Image IEN ^ SYSDEL flag
"RTN","MAGGTID",24,0)
 ; MAGGRPDF   group delete flag   1 = group delete allowed
"RTN","MAGGTID",25,0)
 ; SYSDEL    Flag that forces delete, even if no KEY
"RTN","MAGGTID",26,0)
 ; 
"RTN","MAGGTID",27,0)
 N IEN,Y,RY
"RTN","MAGGTID",28,0)
 ; 1 in 3rd piece means : DELETE the Image File Also.
"RTN","MAGGTID",29,0)
 S MAGGRPDF=+$G(MAGGRPDF),REASON=$G(REASON),IEN=+MAGIEN
"RTN","MAGGTID",30,0)
 L +^MAG(2005,IEN):4
"RTN","MAGGTID",31,0)
 E  S MAGGRY(0)="Image ID# "_IEN_" is Locked. Delete is Canceled" Q
"RTN","MAGGTID",32,0)
 D DELETE(.MAGGRY,MAGIEN,1,MAGGRPDF,REASON)
"RTN","MAGGTID",33,0)
 L -^MAG(2005,IEN)
"RTN","MAGGTID",34,0)
 Q
"RTN","MAGGTID",35,0)
DELETE(RY,MAGIEN,DF,GRPDF,REASON) ;RPC [MAGQ DIK] Entry point for silent call
"RTN","MAGGTID",36,0)
 ;RY=Return Array RY(0)="1^SUCCESS" 
"RTN","MAGGTID",37,0)
 ;                RY(0)="0^reason for failure"
"RTN","MAGGTID",38,0)
 ;                ;NOT RETURNING LIST AT THIS TIME
"RTN","MAGGTID",39,0)
 ;                ( RY(1)..RY(n)= IEN's of deleted images.)
"RTN","MAGGTID",40,0)
 ;MAGIEN=Image entry number to be deleted
"RTN","MAGGTID",41,0)
 ; if MAGIEN has a 2nd piece = 1 then we force delete, don't test 
"RTN","MAGGTID",42,0)
 ; for MAG DELETE KEY
"RTN","MAGGTID",43,0)
 ;DF=Delete file flag - 1=delete the Image file
"RTN","MAGGTID",44,0)
 ;                    - 0=don't delete the image file
"RTN","MAGGTID",45,0)
 ;
"RTN","MAGGTID",46,0)
 S REASON=$G(REASON) I REASON="" S REASON="Unknown reason"
"RTN","MAGGTID",47,0)
 S RY(0)="0^Image Delete Failed, reason unknown."
"RTN","MAGGTID",48,0)
 S:'$D(MAGSYS) MAGSYS=^%ZOSF("VOL")
"RTN","MAGGTID",49,0)
 N MAGERR,SYSDEL,Z
"RTN","MAGGTID",50,0)
 S SYSDEL=+$P(MAGIEN,U,2),MAGIEN=+MAGIEN
"RTN","MAGGTID",51,0)
 ; Check the business rules for deleting an image
"RTN","MAGGTID",52,0)
 D DELETE^MAGSIMBR(.RY,MAGIEN,SYSDEL) I +RY(0)=0 Q
"RTN","MAGGTID",53,0)
 ;  a couple tests of privilage and valid IEN
"RTN","MAGGTID",54,0)
 I '$D(^MAG(2005,MAGIEN,0)) D  Q
"RTN","MAGGTID",55,0)
 . S RY(0)="0^Image entry doesn't exist in image file"
"RTN","MAGGTID",56,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)=0 D  Q
"RTN","MAGGTID",57,0)
 . S RY(0)="0^Deleting a Group is not allowed."
"RTN","MAGGTID",58,0)
 I +$O(^MAG(2005,MAGIEN,1,0)),+$G(GRPDF)'=0 D  Q
"RTN","MAGGTID",59,0)
 . N MAGGRP S MAGGRP=MAGIEN N MAGIEN,MAGX,MAGOK,MAGFAIL
"RTN","MAGGTID",60,0)
 . S MAGX=0,MAGOK=0,MAGFAIL=0
"RTN","MAGGTID",61,0)
 . F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D
"RTN","MAGGTID",62,0)
 . . S MAGIEN=$P($G(^MAG(2005,MAGGRP,1,MAGX,0)),"^") D DEL1IMG
"RTN","MAGGTID",63,0)
 . . I +RY(0) S Z=+$O(RY(""),-1),RY(Z)=RY(Z)_"^"_RY(0),MAGOK=MAGOK+1
"RTN","MAGGTID",64,0)
 . . E  S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN_"^"_RY(0),MAGFAIL=MAGFAIL+1
"RTN","MAGGTID",65,0)
 . . Q
"RTN","MAGGTID",66,0)
 . I +MAGFAIL=0 S RY(0)="1^Deletion of Group #"_MAGGRP_" was successful.^"_MAGOK_"^0"
"RTN","MAGGTID",67,0)
 . E  S RY(0)="0^Error deleting child image(s). Group Not Deleted.^"_MAGOK_"^"_MAGFAIL
"RTN","MAGGTID",68,0)
 . Q
"RTN","MAGGTID",69,0)
 ;
"RTN","MAGGTID",70,0)
 ; Ok lets start
"RTN","MAGGTID",71,0)
 ; lets delete the parent pointers first.
"RTN","MAGGTID",72,0)
DEL1IMG ;
"RTN","MAGGTID",73,0)
 N DELMSG,Z
"RTN","MAGGTID",74,0)
 D DELPAR^MAGSDEL2
"RTN","MAGGTID",75,0)
 I $G(MAGERR) S RY(0)="0^Error: Deleting Specialty Pointers. Image Not Deleted. "_DELMSG Q
"RTN","MAGGTID",76,0)
 ;
"RTN","MAGGTID",77,0)
 ; Now delete image record & xref's
"RTN","MAGGTID",78,0)
 ; if this Image is member of group DELGRP will delete those pointers
"RTN","MAGGTID",79,0)
 ; and delete the Group, if this is only image in it.
"RTN","MAGGTID",80,0)
 S MAGDFN=$P($G(^MAG(2005,MAGIEN,0)),"^",7) ; Moved here from below. DELGRP needs MAGDFN now.
"RTN","MAGGTID",81,0)
 D DELGRP
"RTN","MAGGTID",82,0)
 I $G(MAGERR) S RY(0)="0^Error deleting Group Pointers." Q
"RTN","MAGGTID",83,0)
 ;
"RTN","MAGGTID",84,0)
 ; write the deleted by, delete reason, and delete date to the file.
"RTN","MAGGTID",85,0)
 D SETDEL(MAGIEN,REASON)
"RTN","MAGGTID",86,0)
 ;
"RTN","MAGGTID",87,0)
 ; save the Image record to the archive before we delete it.
"RTN","MAGGTID",88,0)
 D ARCHIVE(MAGIEN)
"RTN","MAGGTID",89,0)
 ;
"RTN","MAGGTID",90,0)
 ; Now let's set the Queue to delete the Image File, if Flag is set
"RTN","MAGGTID",91,0)
 I $G(DF) D DELFILE
"RTN","MAGGTID",92,0)
 ; 
"RTN","MAGGTID",93,0)
 ; we're having "APPXDT" crossref left around, lets delete it first.
"RTN","MAGGTID",94,0)
 S X=MAGDFN,DA=MAGIEN D KILPPXD^MAGUXRF
"RTN","MAGGTID",95,0)
 ;
"RTN","MAGGTID",96,0)
 ; now lets delete the image.
"RTN","MAGGTID",97,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR S DIK="^MAG(2005,",DA=MAGIEN
"RTN","MAGGTID",98,0)
 D ^DIK
"RTN","MAGGTID",99,0)
 S Z=+$O(RY(""),-1)+1,RY(Z)=MAGIEN
"RTN","MAGGTID",100,0)
 ; we were having problems with "AC" so lets check to make sure.
"RTN","MAGGTID",101,0)
 I $D(^MAG(2005,"AC",MAGDFN,MAGIEN)) K ^MAG(2005,"AC",MAGDFN,MAGIEN)
"RTN","MAGGTID",102,0)
 ; log it.
"RTN","MAGGTID",103,0)
 D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGIEN),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1)
"RTN","MAGGTID",104,0)
 S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGIEN)
"RTN","MAGGTID",105,0)
 D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",106,0)
 S RY(0)="1^Deletion of Image was Successful."
"RTN","MAGGTID",107,0)
 Q
"RTN","MAGGTID",108,0)
DELGRP ;del grp ptrs and check to see if this is the last image in the group
"RTN","MAGGTID",109,0)
 N MAGGRP,MAGX,MAGQUIT,MAGIFNS,Z
"RTN","MAGGTID",110,0)
 S MAGGRP=$P($G(^MAG(2005,MAGIEN,0)),"^",10)
"RTN","MAGGTID",111,0)
 Q:'$G(MAGGRP)
"RTN","MAGGTID",112,0)
 K DIK,DA,DA(1),DA(2),DIC,DR,DIE,DIR
"RTN","MAGGTID",113,0)
 S MAGX=0,MAGQUIT=0
"RTN","MAGGTID",114,0)
 F  S MAGX=$O(^MAG(2005,MAGGRP,1,MAGX)) Q:'MAGX  D  Q:MAGQUIT
"RTN","MAGGTID",115,0)
 . I +^MAG(2005,MAGGRP,1,MAGX,0)=MAGIEN D
"RTN","MAGGTID",116,0)
 . . S DIK="^MAG(2005,MAGGRP,1,",DA(1)=MAGGRP,DA=MAGX D ^DIK S MAGQUIT=1
"RTN","MAGGTID",117,0)
 . . ;added DA(1) needed for xref deletion of dicom series 
"RTN","MAGGTID",118,0)
 . I $O(^MAG(2005,MAGGRP,1,0))="" D
"RTN","MAGGTID",119,0)
 . . I $P($G(^MAG(2005,MAGGRP,2)),"^",6) D
"RTN","MAGGTID",120,0)
 . . . ;report is on group - need to delete it
"RTN","MAGGTID",121,0)
 . . . S MAGIFNS=MAGIEN,MAGIEN=MAGGRP
"RTN","MAGGTID",122,0)
 . . . D DELPAR^MAGSDEL2
"RTN","MAGGTID",123,0)
 . . . S MAGIEN=MAGIFNS
"RTN","MAGGTID",124,0)
 . . I '$D(MAGERR) D
"RTN","MAGGTID",125,0)
 . . . D SETDEL(MAGGRP,REASON),ARCHIVE(MAGGRP) S DIK="^MAG(2005,",DA=MAGGRP D ^DIK
"RTN","MAGGTID",126,0)
 . . . ; Log the Deletion of The Group Header to  ^MAG(2006.95, and ^MAG(2006.82 
"RTN","MAGGTID",127,0)
 . . . D ENTRY^MAGLOG("DELETE",$G(DUZ),$G(MAGGRP),"PARENT:"_$G(MAGSTORE),$G(MAGDFN),1,"Group Header deleted")
"RTN","MAGGTID",128,0)
 . . . S X="DEL^"_$G(MAGDFN)_"^"_$G(MAGGRP)
"RTN","MAGGTID",129,0)
 . . . D ACTION^MAGGTAU(X,"1")
"RTN","MAGGTID",130,0)
 . . . S Z=+$O(RY(""),-1)+1,RY(Z)=MAGGRP_"^1^Deletion of Group was Successful."
"RTN","MAGGTID",131,0)
 . . . Q
"RTN","MAGGTID",132,0)
 . . Q
"RTN","MAGGTID",133,0)
 . Q
"RTN","MAGGTID",134,0)
 Q
"RTN","MAGGTID",135,0)
SETDEL(MAGIEN,REASON) ; set deletion fields
"RTN","MAGGTID",136,0)
 N DA,DR,DIE,X
"RTN","MAGGTID",137,0)
 ;N %H
"RTN","MAGGTID",138,0)
 ;S %H=$H D YMD^%DTC
"RTN","MAGGTID",139,0)
 S X=$$NOW^XLFDT
"RTN","MAGGTID",140,0)
 ;  gek - changed 3 slash to 4 slash. to stop FM question marks. ??
"RTN","MAGGTID",141,0)
 S DR="30////"_DUZ_";30.1////"_X_";30.2////"_REASON
"RTN","MAGGTID",142,0)
 S DIE="2005",DA=MAGIEN D ^DIE
"RTN","MAGGTID",143,0)
 Q
"RTN","MAGGTID",144,0)
 ;
"RTN","MAGGTID",145,0)
ARCHIVE(MAGARCIE) ;save image data before deletion
"RTN","MAGGTID",146,0)
 N DA,DIK,MAGCNT,MAGLAST,SUB,TMP,%X,%Y
"RTN","MAGGTID",147,0)
 S MAGCNT=$P(^MAG(2005.1,0),U,4)+1
"RTN","MAGGTID",148,0)
 S %X="^MAG(2005,"_MAGARCIE_",",%Y="^MAG(2005.1,"_MAGARCIE_","
"RTN","MAGGTID",149,0)
 D %XY^%RCR
"RTN","MAGGTID",150,0)
 ;--- GEK 9/29/00 Fix the 3rd piece to be last IEN in file.
"RTN","MAGGTID",151,0)
 S MAGLAST=$O(^MAG(2005.1,"A"),-1)
"RTN","MAGGTID",152,0)
 S $P(^MAG(2005.1,0),U,4)=MAGCNT
"RTN","MAGGTID",153,0)
 I '($P(^MAG(2005.1,0),U,3)=MAGLAST) S $P(^MAG(2005.1,0),U,3)=MAGLAST
"RTN","MAGGTID",154,0)
 ;
"RTN","MAGGTID",155,0)
 ;--- Fix subfile numbers in the headers of the multiples (MAG*3*93).
"RTN","MAGGTID",156,0)
 ;    IF DEFINITIONS OF MULTIPLES OF THE IMAGE AUDIT FILE (#2005.1)
"RTN","MAGGTID",157,0)
 ;    CHANGE OR NEW MULTIPLES ARE ADDED, THE FOLLOWING CODE MUST BE
"RTN","MAGGTID",158,0)
 ;--- CHECKED AND UPDATED IF NECESSARY!
"RTN","MAGGTID",159,0)
 ;
"RTN","MAGGTID",160,0)
 F SUB="1^2005.14P","4^2005.1106DA","5^2005.11PA","6^2005.1111A","99^2005.199D"  D
"RTN","MAGGTID",161,0)
 . S TMP=$P(SUB,U)  Q:'($D(^MAG(2005.1,MAGARCIE,TMP,0))#2)
"RTN","MAGGTID",162,0)
 . S $P(^MAG(2005.1,MAGARCIE,TMP,0),U,2)=$P(SUB,U,2)
"RTN","MAGGTID",163,0)
 . Q
"RTN","MAGGTID",164,0)
 ;
"RTN","MAGGTID",165,0)
 ;--- Create cross-reference entries for the entry
"RTN","MAGGTID",166,0)
 S DA=MAGARCIE
"RTN","MAGGTID",167,0)
 S DIK="^MAG(2005.1," D IX1^DIK
"RTN","MAGGTID",168,0)
 Q
"RTN","MAGGTID",169,0)
DELFILE ;Delete image file on server if exists 
"RTN","MAGGTID",170,0)
 ;gek 3/21/2003  Changed to stop using FullRes Path for Abs,Big
"RTN","MAGGTID",171,0)
 ;   and only Delete .TXT and Alternates if Full is being deleted.
"RTN","MAGGTID",172,0)
 N X0,X1,X2,ALTEXT,ALTPATH,MAGXX,XBIG
"RTN","MAGGTID",173,0)
 N MAGPLC ; DBI - SEB 9/20/2002
"RTN","MAGGTID",174,0)
 ; MAGIEN IS ASSUMED TO BE DEFINED.
"RTN","MAGGTID",175,0)
 ; MAGXX         - This is IEN in ^MAG(2005, MAGFILEB Expects this to be defined.
"RTN","MAGGTID",176,0)
 ; MAGPLC        - "Place" of Full Res Image.  
"RTN","MAGGTID",177,0)
 ; ALTEXT        - Extension of the Alternate image file.
"RTN","MAGGTID",178,0)
 ; ALTPATH       - Full path of Alternate image file.
"RTN","MAGGTID",179,0)
 S X0=^MAG(2005,MAGIEN,0)
"RTN","MAGGTID",180,0)
 ;delete Full Res if one exists on Magnetic
"RTN","MAGGTID",181,0)
 I $P(X0,U,3) D
"RTN","MAGGTID",182,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",183,0)
 . S MAGPLC=$$DA2PLC^MAGBAPIP(MAGIEN,"F")
"RTN","MAGGTID",184,0)
 . D VSTNOCP^MAGFILEB
"RTN","MAGGTID",185,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,MAGPLC)
"RTN","MAGGTID",186,0)
 . ;Delete any other ALTernate files. ( TXT) 
"RTN","MAGGTID",187,0)
 . ;gek 3/31/03  Since ALT files are (for now) always on same server as Full
"RTN","MAGGTID",188,0)
 . ;    We only attempt to delete them here  (If we have a path to FullRes on Magnetic)
"RTN","MAGGTID",189,0)
 . S X2=0
"RTN","MAGGTID",190,0)
 . F  S X2=$O(^MAG(2006.1,MAGPLC,2,X2)) Q:'X2  D
"RTN","MAGGTID",191,0)
 . . S ALTEXT=^MAG(2006.1,MAGPLC,2,X2,0)
"RTN","MAGGTID",192,0)
 . . S ALTPATH=$P(MAGFILE2,".")_"."_ALTEXT
"RTN","MAGGTID",193,0)
 . . S X=$$DELETE^MAGBAPI(ALTPATH,MAGPLC)
"RTN","MAGGTID",194,0)
 . Q
"RTN","MAGGTID",195,0)
 ;
"RTN","MAGGTID",196,0)
 ;delete image abstract if one exists on Magnetic
"RTN","MAGGTID",197,0)
 I $P(X0,U,4) D
"RTN","MAGGTID",198,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",199,0)
 . D ABSNOCP^MAGFILEB
"RTN","MAGGTID",200,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"A")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",201,0)
 ;
"RTN","MAGGTID",202,0)
 ;delete the big file if one exists on Magnetic
"RTN","MAGGTID",203,0)
 S XBIG=$G(^MAG(2005,MAGIEN,"FBIG"))
"RTN","MAGGTID",204,0)
 I $P(XBIG,U) D 
"RTN","MAGGTID",205,0)
 . S MAGXX=MAGIEN
"RTN","MAGGTID",206,0)
 . D BIGNOCP^MAGFILEB
"RTN","MAGGTID",207,0)
 . S X=$$DELETE^MAGBAPI(MAGFILE2,$$DA2PLC^MAGBAPIP(MAGIEN,"B")) ; DBI - SEB 9/20/2002
"RTN","MAGGTID",208,0)
 Q
"RTN","MAGGTIG")
0^41^B58640406
"RTN","MAGGTIG",1,0)
MAGGTIG ;WOIFO/GEK/SG - MAGGT Image Get. Callbacks to Get Image lists ; 3/9/09 12:51pm
"RTN","MAGGTIG",2,0)
 ;;3.0;IMAGING;**8,48,93**;Dec 02, 2009;Build 163
"RTN","MAGGTIG",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTIG",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIG",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTIG",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTIG",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTIG",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTIG",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTIG",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTIG",11,0)
 ;; |                                                               |
"RTN","MAGGTIG",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTIG",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTIG",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTIG",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTIG",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTIG",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTIG",18,0)
 ;;
"RTN","MAGGTIG",19,0)
 Q
"RTN","MAGGTIG",20,0)
GRPCOUNT(MAGRY,MAGIEN) ;
"RTN","MAGGTIG",21,0)
 S MAGRY=+$P($G(^MAG(2005,MAGIEN,1,0)),U,4)
"RTN","MAGGTIG",22,0)
 Q
"RTN","MAGGTIG",23,0)
IMAGES(MAGRY,MAGDFN) ;RPC [MAGG PAT IMAGES]
"RTN","MAGGTIG",24,0)
 ;  Call to return a list of images for a patient.
"RTN","MAGGTIG",25,0)
 ;   We are returning all images for a patient, Groups are returned
"RTN","MAGGTIG",26,0)
 ;   as one Image.
"RTN","MAGGTIG",27,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",28,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",29,0)
 ;   User can reorder at the workstation level.
"RTN","MAGGTIG",30,0)
 K MAGRY
"RTN","MAGGTIG",31,0)
 N Y,RDT,PRX,CT,IEN,GBLRET
"RTN","MAGGTIG",32,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",33,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",34,0)
 ;  if no Images for the patient, then quit.
"RTN","MAGGTIG",35,0)
 I '$D(^MAG(2005,"APDTPX",MAGDFN)) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",36,0)
 ;   the "APDTPX" cross reference is :
"RTN","MAGGTIG",37,0)
 ;     "APDTPX",DFN,Rev Date,Procedure,MAGIEN )
"RTN","MAGGTIG",38,0)
 ;
"RTN","MAGGTIG",39,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",40,0)
 S GBLRET=0
"RTN","MAGGTIG",41,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",42,0)
 S CT=0,RDT=""
"RTN","MAGGTIG",43,0)
 F  S RDT=$O(^MAG(2005,"APDTPX",MAGDFN,RDT)) Q:'RDT  D
"RTN","MAGGTIG",44,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",MAGDFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGGTIG",45,0)
 . . S IEN=""
"RTN","MAGGTIG",46,0)
 . . F  S IEN=$O(^MAG(2005,"APDTPX",MAGDFN,RDT,PRX,IEN)) Q:'IEN  D
"RTN","MAGGTIG",47,0)
 . . . Q:$P($G(^MAG(2005,IEN,0)),"^",10)  ; CHILD OF GROUP
"RTN","MAGGTIG",48,0)
 . . . Q:$$ISDEL^MAGGI11(IEN)             ; Deleted image
"RTN","MAGGTIG",49,0)
 . . . S CT=CT+1
"RTN","MAGGTIG",50,0)
 . . . I (CT>100),'GBLRET D ARY2GLB
"RTN","MAGGTIG",51,0)
 . . . ;S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",52,0)
 . . . S MAGXX=IEN,MAGFILE=$$INFO^MAGGAII(MAGXX,"E")
"RTN","MAGGTIG",53,0)
 . . . S @MAGRY@(CT)="B2^"_MAGFILE
"RTN","MAGGTIG",54,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",55,0)
 Q
"RTN","MAGGTIG",56,0)
PHOTOS(MAGRY,MAGDFN) ;RPC [MAGG PAT PHOTOS]
"RTN","MAGGTIG",57,0)
 ; Call to return list of all Photo ID's on file for a patient.
"RTN","MAGGTIG",58,0)
 ;   We are returning all Photo ID images for a patient.
"RTN","MAGGTIG",59,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",60,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",61,0)
 K MAGRY
"RTN","MAGGTIG",62,0)
 N Y,RDT,PRX,CT,IEN,IENS,GBLRET,MAGXX
"RTN","MAGGTIG",63,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",64,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",65,0)
 ;  if no Photo ID Images for the patient, then quit.
"RTN","MAGGTIG",66,0)
 I '$D(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID")) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",67,0)
 ;   the "APPXDT" cross reference is :
"RTN","MAGGTIG",68,0)
 ;     "APPXDT",DFN,Procedure,Rev Date,MAGIEN )
"RTN","MAGGTIG",69,0)
 ;
"RTN","MAGGTIG",70,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",71,0)
 S GBLRET=0
"RTN","MAGGTIG",72,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",73,0)
 S CT=0
"RTN","MAGGTIG",74,0)
 S RDT="" F  S RDT=$O(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID",RDT)) Q:RDT=""  D
"RTN","MAGGTIG",75,0)
 . S IEN=""
"RTN","MAGGTIG",76,0)
 . F  S IEN=$O(^MAG(2005,"APPXDT",MAGDFN,"PHOTO ID",RDT,IEN)) Q:'IEN  D
"RTN","MAGGTIG",77,0)
 . . ;Q:$P($G(^MAG(2005,IEN,0)),"^",10)  ; CHILD OF GROUP
"RTN","MAGGTIG",78,0)
 . . Q:$$ISDEL^MAGGI11(IEN)             ; Deleted image
"RTN","MAGGTIG",79,0)
 . . S IENS(IEN)=""
"RTN","MAGGTIG",80,0)
 . . Q
"RTN","MAGGTIG",81,0)
 . Q
"RTN","MAGGTIG",82,0)
 S IEN="" F  S IEN=$O(IENS(IEN),-1) Q:'IEN  D
"RTN","MAGGTIG",83,0)
 . S CT=CT+1
"RTN","MAGGTIG",84,0)
 . ;S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",85,0)
 . S MAGXX=IEN,MAGFILE=$$INFO^MAGGAII(MAGXX,"E")
"RTN","MAGGTIG",86,0)
 . S @MAGRY@(CT)="B2^"_MAGFILE
"RTN","MAGGTIG",87,0)
 . Q
"RTN","MAGGTIG",88,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",89,0)
 Q
"RTN","MAGGTIG",90,0)
EACHIMG(MAGRY,MAGDFN,MAX) ;RPC [MAGG PAT EACH IMAGE]
"RTN","MAGGTIG",91,0)
 ; Call Returns list of recent Patient images.
"RTN","MAGGTIG",92,0)
 ;   MAX = maximum number of images to return
"RTN","MAGGTIG",93,0)
 ;   MAGDFN = patient DFN
"RTN","MAGGTIG",94,0)
 ;   We are returning all images for a patient, and listing each image.
"RTN","MAGGTIG",95,0)
 ;   This is called from Capture Window where groups aren't listed.
"RTN","MAGGTIG",96,0)
 ;   The Images are returned in Rev Chronological Order, latest image
"RTN","MAGGTIG",97,0)
 ;   first, oldest image last.
"RTN","MAGGTIG",98,0)
 ;   User can decide how many of the most recent they want to list.
"RTN","MAGGTIG",99,0)
 K MAGRY
"RTN","MAGGTIG",100,0)
 N Y,RDT,PRX,CT,IEN,GBLRET
"RTN","MAGGTIG",101,0)
 S MAX=$S($G(MAX)>0:MAX,1:50) ; 50 IS DEFAULT
"RTN","MAGGTIG",102,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRG^MAGGTERR"
"RTN","MAGGTIG",103,0)
 S MAGDFN=+MAGDFN
"RTN","MAGGTIG",104,0)
 ;  if no Images for the patient, then quit.
"RTN","MAGGTIG",105,0)
 I '$D(^MAG(2005,"AC",MAGDFN)) S MAGRY(0)="1^0" Q
"RTN","MAGGTIG",106,0)
 ;   the "AC" cross reference is :
"RTN","MAGGTIG",107,0)
 ;     "AC",DFN,IEN )
"RTN","MAGGTIG",108,0)
 ;
"RTN","MAGGTIG",109,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is begin returned
"RTN","MAGGTIG",110,0)
 S GBLRET=0
"RTN","MAGGTIG",111,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",112,0)
 S CT=0,IEN=""
"RTN","MAGGTIG",113,0)
 F  S IEN=$O(^MAG(2005,"AC",MAGDFN,IEN),-1) Q:'IEN  D  Q:(CT>MAX)
"RTN","MAGGTIG",114,0)
 . Q:$P($G(^MAG(2005,IEN,0)),U,6)=11  ; NOT LISTING GROUP ENTRIES
"RTN","MAGGTIG",115,0)
 . Q:$$ISDEL^MAGGI11(IEN)             ; Skip deleted images
"RTN","MAGGTIG",116,0)
 . S CT=CT+1
"RTN","MAGGTIG",117,0)
 . I (CT>100),'GBLRET D ARY2GLB
"RTN","MAGGTIG",118,0)
 . S @MAGRY@(CT)=$$CAPINFO(IEN)
"RTN","MAGGTIG",119,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGGTIG",120,0)
 Q
"RTN","MAGGTIG",121,0)
CAPINFO(IEN) ; RETURN A STRING OF INFORMATION ABOUT THE IMAGE
"RTN","MAGGTIG",122,0)
 ; This is for Capture App
"RTN","MAGGTIG",123,0)
 N RETY,N2,X
"RTN","MAGGTIG",124,0)
 ;S MAGXX=IEN D INFO^MAGGTII
"RTN","MAGGTIG",125,0)
 S MAGXX=IEN,MAGFILE=$$INFO^MAGGAII(MAGXX,"E")
"RTN","MAGGTIG",126,0)
 S RETY=$P(MAGFILE,U,1,7)_U
"RTN","MAGGTIG",127,0)
 S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGGTIG",128,0)
 S RETY=RETY_$$FMTE^XLFDT($P(N2,U,1),"5P")_U
"RTN","MAGGTIG",129,0)
 S X=$P(RETY,U,5),X=$$FMTE^XLFDT(X,"5"),X=$P(X,"@")
"RTN","MAGGTIG",130,0)
 S $P(RETY,U,5)=X
"RTN","MAGGTIG",131,0)
 Q RETY
"RTN","MAGGTIG",132,0)
 Q
"RTN","MAGGTIG",133,0)
ARY2GLB ; Image count is getting big, switch from array to Global return type
"RTN","MAGGTIG",134,0)
 S GBLRET=1
"RTN","MAGGTIG",135,0)
 K ^TMP("MAGGTIG",$J)
"RTN","MAGGTIG",136,0)
 S MAGRY=""
"RTN","MAGGTIG",137,0)
 M ^TMP("MAGGTIG",$J)=MAGRY
"RTN","MAGGTIG",138,0)
 K MAGRY
"RTN","MAGGTIG",139,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTIG",140,0)
 S MAGRY=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGGTIG",141,0)
 Q
"RTN","MAGGTIG",142,0)
GROUP(MAGRY,MAGIEN,NOCHK) ;RPC [MAGG GROUP IMAGES]
"RTN","MAGGTIG",143,0)
 ; CalL to Return image list of a Group.
"RTN","MAGGTIG",144,0)
 ; MAGIEN        =  the entry in MAG(2005 we assume it is a group.
"RTN","MAGGTIG",145,0)
 ; NOCHK         =  flag - Do (or) Not Do QI Check.
"RTN","MAGGTIG",146,0)
 N Y,MAGDFN,I,MAGCHILD,MAGCT,MAGTMPAR,MSGX,MAGQI,MAGY
"RTN","MAGGTIG",147,0)
 N MAGNOCHK
"RTN","MAGGTIG",148,0)
 ;
"RTN","MAGGTIG",149,0)
 ;Test BigGroup S BKG=+$G(BKG)
"RTN","MAGGTIG",150,0)
 ;Test BigGroup K ^TMP("MAGBGRP")
"RTN","MAGGTIG",151,0)
 S MAGIEN=+MAGIEN,MSGX=""
"RTN","MAGGTIG",152,0)
 S NOCHK=+$G(NOCHK)
"RTN","MAGGTIG",153,0)
 I '$D(^MAG(2005,MAGIEN,0)) S MAGRY(0)="0^ERROR: Image entry "_MAGIEN_" Doesn't exist" Q
"RTN","MAGGTIG",154,0)
 I $O(^MAG(2005,MAGIEN,1,0))="" S MAGRY(0)="0^ERROR: There are NO Images defined for this Group" Q
"RTN","MAGGTIG",155,0)
 ;
"RTN","MAGGTIG",156,0)
 ;  we'll use @ notation, this'll work if an Array or a Global Array is being returned
"RTN","MAGGTIG",157,0)
 S MAGRY="MAGRY"
"RTN","MAGGTIG",158,0)
 ;
"RTN","MAGGTIG",159,0)
 ;  if we are switching to a Global Array because too many images, 
"RTN","MAGGTIG",160,0)
 ;  then set MAGRY and clean it up first
"RTN","MAGGTIG",161,0)
 ;I +$P($G(^MAG(2005,MAGIEN,1,0)),U,4)>100
"RTN","MAGGTIG",162,0)
 D
"RTN","MAGGTIG",163,0)
 . S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTIG",164,0)
 . S MAGRY=$NA(^TMP("MAGGTIG",$J))
"RTN","MAGGTIG",165,0)
 . K @MAGRY
"RTN","MAGGTIG",166,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTIG",167,0)
 ;
"RTN","MAGGTIG",168,0)
 ;Test BigGroup I $D(^TMP("MAGBGRP",MAGIEN)) D  Q
"RTN","MAGGTIG",169,0)
 ;Test BigGroup . M ^TMP("MAGGTIG",$J)=^TMP("MAGBGRP",MAGIEN)
"RTN","MAGGTIG",170,0)
 ;Test BigGroup . Q
"RTN","MAGGTIG",171,0)
 ; integrity check, stop if group entry is questionable
"RTN","MAGGTIG",172,0)
 ;  NOCHK is sent from Image Delete window (so user with DELETE and SYSTEM keys)
"RTN","MAGGTIG",173,0)
 ;    can see group abstracts before the group is deleted.
"RTN","MAGGTIG",174,0)
 I 'NOCHK D CHK^MAGGSQI(.MAGQI,MAGIEN) I 'MAGQI(0) D  Q
"RTN","MAGGTIG",175,0)
 . S @MAGRY@(0)=MAGQI(0)
"RTN","MAGGTIG",176,0)
 ;
"RTN","MAGGTIG",177,0)
 S MAGNOCHK=1
"RTN","MAGGTIG",178,0)
 S I=0,MAGCT=0,MAGDFN=$P(^MAG(2005,MAGIEN,0),"^",7)
"RTN","MAGGTIG",179,0)
 I $D(^MAG(2005,MAGIEN,1,"ADCM")) D
"RTN","MAGGTIG",180,0)
 . N INUM,SNUM
"RTN","MAGGTIG",181,0)
 . S INUM="" ; GEK 4/3/00  changed Q:'INUM  to  Q:INUM="" below
"RTN","MAGGTIG",182,0)
 . F  S INUM=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM)) Q:INUM=""  D
"RTN","MAGGTIG",183,0)
 . . S SNUM=""
"RTN","MAGGTIG",184,0)
 . . F  S SNUM=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM,SNUM)) Q:SNUM=""  D
"RTN","MAGGTIG",185,0)
 . . . S MAGCHILD=""
"RTN","MAGGTIG",186,0)
 . . . F  S MAGCHILD=$O(^MAG(2005,MAGIEN,1,"ADCM",INUM,SNUM,MAGCHILD)) Q:'MAGCHILD  D
"RTN","MAGGTIG",187,0)
 . . . . S MAGCT=MAGCT+1
"RTN","MAGGTIG",188,0)
 . . . . I '$D(^MAG(2005,MAGCHILD)) D INVALID(MAGCHILD,.MSGX) S @MAGRY@(MAGCT)=MSGX Q
"RTN","MAGGTIG",189,0)
 . . . . ; Added for MAGQI integrity check
"RTN","MAGGTIG",190,0)
 . . . . K MAGY
"RTN","MAGGTIG",191,0)
 . . . . D CHKGRPCH^MAGGSQI(.MAGY,MAGIEN,MAGDFN,MAGCHILD) I 'MAGY D INVCH(.MAGY,MAGCHILD) S @MAGRY@(MAGCT)=MAGY Q
"RTN","MAGGTIG",192,0)
 . . . . S MAGXX=MAGCHILD
"RTN","MAGGTIG",193,0)
 . . . . S MAGTMPAR(MAGXX)=""
"RTN","MAGGTIG",194,0)
 . . . . ;D INFO^MAGGTII
"RTN","MAGGTIG",195,0)
 . . . . S MAGFILE=$$INFO^MAGGAII(MAGXX,"E")
"RTN","MAGGTIG",196,0)
 . . . . S $P(MAGFILE,U,12,13)=INUM_U_SNUM
"RTN","MAGGTIG",197,0)
 . . . . S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",198,0)
 . . . . ;Test BigGroup I 'BKG S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",199,0)
 . . . . ;Test BigGroup E  S ^TMP("MAGBGRP",MAGIEN,MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",200,0)
 ;GEK 4/8/99 MODIFIED, because now we have groups, that some entries 
"RTN","MAGGTIG",201,0)
 ;                     have dicom numbers and some don't.  So we have to go through the group again.
"RTN","MAGGTIG",202,0)
 ;Test BigGroup - Need a Pre/Post init, that fixes Groups where some entries have Dicom values, and some 
"RTN","MAGGTIG",203,0)
 ;         don't.  In such a group, we will make Dicom values for the images that don't have them.
"RTN","MAGGTIG",204,0)
 ;         Testing in Washington - this will take hours.
"RTN","MAGGTIG",205,0)
 ;
"RTN","MAGGTIG",206,0)
 S I=0
"RTN","MAGGTIG",207,0)
 F  S I=$O(^MAG(2005,MAGIEN,1,I)) Q:'I  D
"RTN","MAGGTIG",208,0)
 . S MAGCHILD=+^MAG(2005,MAGIEN,1,I,0)
"RTN","MAGGTIG",209,0)
 . I $D(MAGTMPAR(MAGCHILD)) Q
"RTN","MAGGTIG",210,0)
 . S MAGCT=MAGCT+1
"RTN","MAGGTIG",211,0)
 . I '$D(^MAG(2005,MAGCHILD)) D INVALID(MAGCHILD,.MSGX) S @MAGRY@(MAGCT)=MSGX Q
"RTN","MAGGTIG",212,0)
 . ;Added for MAGQI integrity check
"RTN","MAGGTIG",213,0)
 . K MAGY
"RTN","MAGGTIG",214,0)
 . D CHKGRPCH^MAGGSQI(.MAGY,MAGIEN,MAGDFN,MAGCHILD) I 'MAGY D INVCH(.MAGY,MAGCHILD) S @MAGRY@(MAGCT)=MAGY Q
"RTN","MAGGTIG",215,0)
 . S MAGXX=MAGCHILD
"RTN","MAGGTIG",216,0)
 . ;D INFO^MAGGTII
"RTN","MAGGTIG",217,0)
 . S MAGFILE=$$INFO^MAGGAII(MAGXX,"E")
"RTN","MAGGTIG",218,0)
 . S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",219,0)
 . ;Test BigGroup        I 'BKG S @MAGRY@(MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",220,0)
 . ;Test BigGroup        E  S ^TMP("MAGBGRP",MAGIEN,MAGCT)="B2^"_MAGFILE
"RTN","MAGGTIG",221,0)
 S @MAGRY@(0)="1^"_MAGCT
"RTN","MAGGTIG",222,0)
 Q
"RTN","MAGGTIG",223,0)
INVALID(MAGX,MAGZ) ;
"RTN","MAGGTIG",224,0)
 ;
"RTN","MAGGTIG",225,0)
 I $$ISDEL^MAGGI11(MAGX)  S MAGZ="B2^"_MAGX_"^^^INVALID Reference to Deleted Image^^66^^^^^^^^"
"RTN","MAGGTIG",226,0)
 E  S MAGZ="B2^"_MAGX_"^^^INVALID Image ID (IEN)^^67^^^^^^^^"
"RTN","MAGGTIG",227,0)
 ;Added with MAGQI integrity check, 
"RTN","MAGGTIG",228,0)
 S MAGTMPAR(MAGX)=""
"RTN","MAGGTIG",229,0)
 Q
"RTN","MAGGTIG",230,0)
INVCH(MSG,CHILD) ;Added for MAGQI integrity check
"RTN","MAGGTIG",231,0)
 ; MSG is passed by reference, we create a MAGFILE equivalent and pass it back.
"RTN","MAGGTIG",232,0)
 N EMSG
"RTN","MAGGTIG",233,0)
 S EMSG=$P(MSG,U,2)
"RTN","MAGGTIG",234,0)
 K MSG
"RTN","MAGGTIG",235,0)
 S $P(MSG,U)=CHILD
"RTN","MAGGTIG",236,0)
 ; remove dependency on c:\program files.   with   .\bmp\
"RTN","MAGGTIG",237,0)
 S $P(MSG,U,2,3)="-1~Questionable Data Integrity^.\bmp\imageQA.bmp"
"RTN","MAGGTIG",238,0)
 S $P(MSG,U,4)=$P($G(^MAG(2005,CHILD,2)),U,4)
"RTN","MAGGTIG",239,0)
 S $P(MSG,U,6)=$S(($P(MSG,U,6)'=11):"99",1:11)
"RTN","MAGGTIG",240,0)
 ;this stops Delphi App from changing Abstract BMP to OFFLINE IMAGE
"RTN","MAGGTIG",241,0)
 S $P(MSG,U,10)="M"
"RTN","MAGGTIG",242,0)
 ;Send the error message
"RTN","MAGGTIG",243,0)
 S $P(MSG,U,17)=EMSG
"RTN","MAGGTIG",244,0)
 S MSG="B2^"_MSG
"RTN","MAGGTIG",245,0)
 S MAGTMPAR(CHILD)=""
"RTN","MAGGTIG",246,0)
 Q
"RTN","MAGGTPT1")
0^44^B37889156
"RTN","MAGGTPT1",1,0)
MAGGTPT1 ;WOIFO/GEK/SG - Delphi-Broker calls for patient lookup and information ; 1/20/09 11:59am
"RTN","MAGGTPT1",2,0)
 ;;3.0;IMAGING;**16,8,92,46,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTPT1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTPT1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTPT1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTPT1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTPT1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTPT1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTPT1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTPT1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTPT1",11,0)
 ;; |                                                               |
"RTN","MAGGTPT1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTPT1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTPT1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTPT1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTPT1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTPT1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTPT1",18,0)
 ;;
"RTN","MAGGTPT1",19,0)
 Q
"RTN","MAGGTPT1",20,0)
 ;
"RTN","MAGGTPT1",21,0)
FIND(MAGRY,ZY) ;RPC [MAGG PAT FIND]
"RTN","MAGGTPT1",22,0)
 ; Call to Do a lookup using FIND^DIC
"RTN","MAGGTPT1",23,0)
 ; MAGRY is the Array to return.
"RTN","MAGGTPT1",24,0)
 ; ZY is parameter sent by calling app (Delphi)
"RTN","MAGGTPT1",25,0)
 ;   NUM TO RETURN ^ TEXT TO MATCH ^ TYPE OF OUPUT FORMAT ^ SCREEN ($P 5-99)
"RTN","MAGGTPT1",26,0)
 ; MAGRY(0)="0^Error message"
"RTN","MAGGTPT1",27,0)
 ; or 
"RTN","MAGGTPT1",28,0)
 ; MAGRY(0)=Found 100 entries matching "" there are more
"RTN","MAGGTPT1",29,0)
 ;
"RTN","MAGGTPT1",30,0)
 ; if $P(ZY,"^",4)'=2 then
"RTN","MAGGTPT1",31,0)
 ; MAGRY(1..n)     = Patient Name _" " _ Date Of Birth _" "_ Male/Female _ " "_ Ward ^ DFN^ICN
"RTN","MAGGTPT1",32,0)
 ; if $P(ZY,"^",4)=2 then
"RTN","MAGGTPT1",33,0)
 ; MAGRY(1) = "Patient Name^DOB~S1^Sex^Ward"
"RTN","MAGGTPT1",34,0)
 ;   MAGRY(2..n)  =   Patient Name^Date Of Birth^Male/Female^Ward | DFN^ICN
"RTN","MAGGTPT1",35,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTPT1",36,0)
 ;
"RTN","MAGGTPT1",37,0)
 N X,Y,I,Z,MAGDFN,WARD
"RTN","MAGGTPT1",38,0)
 N FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT
"RTN","MAGGTPT1",39,0)
 N RTYPE,SEX,ICN,PNAME
"RTN","MAGGTPT1",40,0)
 S (FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)=""
"RTN","MAGGTPT1",41,0)
 ;
"RTN","MAGGTPT1",42,0)
 S FILE=2 ; Patient File
"RTN","MAGGTPT1",43,0)
 ;          Number of entries to return, If 0 we'll stop at 100
"RTN","MAGGTPT1",44,0)
 S NUM=$S(+$P(ZY,U,1):+$P(ZY,U,1),1:100)
"RTN","MAGGTPT1",45,0)
 S VAL=$P(ZY,U,2) ; this is the starting value i.e. 'Smi'
"RTN","MAGGTPT1",46,0)
 S SCR=$P(ZY,U,5,99)
"RTN","MAGGTPT1",47,0)
 S FLDS=$P(ZY,U,3)
"RTN","MAGGTPT1",48,0)
 S RTYPE=$P(ZY,U,4)
"RTN","MAGGTPT1",49,0)
 ;  If specific fields aren't requested, 
"RTN","MAGGTPT1",50,0)
 ;     Get Identifiers, and ward as FLDS
"RTN","MAGGTPT1",51,0)
 ;I '$L(FLDS) S FLDS=FLDS_";.1;.03;.09;.301;391"
"RTN","MAGGTPT1",52,0)
 I '$L(FLDS) S FLDS=FLDS_";.1;.02;.301;391"
"RTN","MAGGTPT1",53,0)
 ;  we'll add ACN to the index to search, for ward
"RTN","MAGGTPT1",54,0)
 ; for speed we'll decide which xref to use
"RTN","MAGGTPT1",55,0)
 S INDEX=$S(VAL?9N:"SSN^ACN",VAL?1U1.N:"BS5^ACN",1:"B^ACN")
"RTN","MAGGTPT1",56,0)
 ;
"RTN","MAGGTPT1",57,0)
 K ^TMP("DILIST",$J)
"RTN","MAGGTPT1",58,0)
 K ^TMP("DIERR",$J)
"RTN","MAGGTPT1",59,0)
 ;  VAL is the initial value to search for. i.e. the user input.
"RTN","MAGGTPT1",60,0)
 ;  Next line is to stop the FM Infinite Error Trap problem.
"RTN","MAGGTPT1",61,0)
 I $L(VAL)>30 S MAGRY(0)="0^Invalid: Input '"_$E(VAL,1,40)_"...' is too long. "_$L(VAL)_" characters." Q
"RTN","MAGGTPT1",62,0)
 D FIND^DIC(FILE,IENS,FLDS,FLAGS,VAL,NUM,INDEX,SCR,IDENT,TROOT)
"RTN","MAGGTPT1",63,0)
 ;
"RTN","MAGGTPT1",64,0)
 ;  if no Match or ERROR  we return 0 as 1st '^' piece.
"RTN","MAGGTPT1",65,0)
 ;
"RTN","MAGGTPT1",66,0)
 I '$D(^TMP("DILIST",$J,1)) S I=1 D  Q
"RTN","MAGGTPT1",67,0)
 . I $D(^TMP("DIERR",$J)) D FINDERR(I) Q
"RTN","MAGGTPT1",68,0)
 . S MAGRY(I)="NO MATCH for lookup on """_$P(ZY,"^",2)_""""
"RTN","MAGGTPT1",69,0)
 ;
"RTN","MAGGTPT1",70,0)
 ;  so we have some matches, (BUT we could still have an error)
"RTN","MAGGTPT1",71,0)
 ;  so first list all matches, then the Errors, if any.
"RTN","MAGGTPT1",72,0)
 S I="" F  S I=$O(^TMP("DILIST",$J,1,I)) Q:I=""  D
"RTN","MAGGTPT1",73,0)
 . S PNAME=^TMP("DILIST",$J,1,I) ; Name
"RTN","MAGGTPT1",74,0)
 . S MAGDFN=+^TMP("DILIST",$J,2,I) ; DFN
"RTN","MAGGTPT1",75,0)
 . S SEX=^TMP("DILIST",$J,"ID",I,.02)
"RTN","MAGGTPT1",76,0)
 . S WARD=^TMP("DILIST",$J,"ID",I,.1)
"RTN","MAGGTPT1",77,0)
 . K ^TMP("DILIST",$J,"ID",I,.1)
"RTN","MAGGTPT1",78,0)
 . S ICN=$$GETICN^MPIF001(MAGDFN)
"RTN","MAGGTPT1",79,0)
 . S ICN=$S(ICN'<0:ICN,1:"")
"RTN","MAGGTPT1",80,0)
 . I RTYPE=2 D
"RTN","MAGGTPT1",81,0)
 . . S MAGRY(I+1)=PNAME_U_$$DOB^DPTLK1(MAGDFN)_U_SEX_U_WARD_"|"_MAGDFN_U_ICN
"RTN","MAGGTPT1",82,0)
 . I RTYPE'=2 D
"RTN","MAGGTPT1",83,0)
 . . S X=PNAME
"RTN","MAGGTPT1",84,0)
 . . I $E(WARD,1,$L(VAL))=VAL S X=WARD_"   "_PNAME
"RTN","MAGGTPT1",85,0)
 . . S X=X_"   "_$$DOB^DPTLK1(MAGDFN)_"   "_$$SSN^DPTLK1(MAGDFN)
"RTN","MAGGTPT1",86,0)
 . . S Z=0
"RTN","MAGGTPT1",87,0)
 . . ; We are displaying other identifiers with each patient.
"RTN","MAGGTPT1",88,0)
 . . F  S Z=$O(^TMP("DILIST",$J,"ID",I,Z)) Q:Z=""  S X=X_"   "_^(Z)
"RTN","MAGGTPT1",89,0)
 . . S MAGRY(I)=X_"^"_(+MAGDFN)_"^"_ICN  ;SG
"RTN","MAGGTPT1",90,0)
 I RTYPE=2 S MAGRY(1)="Patient Name^DOB~S1^Sex^Ward"
"RTN","MAGGTPT1",91,0)
 ;
"RTN","MAGGTPT1",92,0)
 I $D(^TMP("DIERR",$J)) D FINDERR() Q
"RTN","MAGGTPT1",93,0)
 I '$D(^TMP("DILIST",$J,0)) Q
"RTN","MAGGTPT1",94,0)
 S X=^TMP("DILIST",$J,0)
"RTN","MAGGTPT1",95,0)
 S I=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",96,0)
 S MAGRY(0)="Found "_$P(X,"^")_" entr"_$S((+X=1):"y",1:"ies")_" matching """_$P(ZY,"^",3)_""""
"RTN","MAGGTPT1",97,0)
 I $P(X,"^",3)>0 S MAGRY(0)=MAGRY(0)_" there are more"
"RTN","MAGGTPT1",98,0)
 Q
"RTN","MAGGTPT1",99,0)
FINDERR(XI) ;
"RTN","MAGGTPT1",100,0)
 I '+$G(XI) S XI=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",101,0)
 S MAGRY(XI)="ERROR^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","MAGGTPT1",102,0)
 Q
"RTN","MAGGTPT1",103,0)
INFO(MAGRY,DATA) ;RPC [MAGG PAT INFO]  Call to  Return patient info.
"RTN","MAGGTPT1",104,0)
 ; Input parameters 
"RTN","MAGGTPT1",105,0)
 ;    DATA:  MAGDFN ^ NOLOG ^ ISICN
"RTN","MAGGTPT1",106,0)
 ;       MAGDFN -- Patient DFN
"RTN","MAGGTPT1",107,0)
 ;       NOLOG  -- 0/1; if 1, then do NOT update the Session log
"RTN","MAGGTPT1",108,0)
 ;       ISICN  -- 0/1  if 1, then this is an ICN, if 0 (default) this is a DFN ; Patch 41
"RTN","MAGGTPT1",109,0)
 ;  MAGRY is a string, we return the following :
"RTN","MAGGTPT1",110,0)
 ; //$P     1        2      3     4     5     6     7     8        9                     10
"RTN","MAGGTPT1",111,0)
 ; //    status ^   DFN ^ name ^ sex ^ DOB ^ SSN ^ S/C ^ TYPE ^ Veteran(y/n)  ^ Patient Image Count
"RTN","MAGGTPT1",112,0)
 ; //$P    11            12              13
"RTN","MAGGTPT1",113,0)
 ;        ICN       SITE Number   ^ Production Account 1/0
"RTN","MAGGTPT1",114,0)
 ; VADM(1)=Patient's name
"RTN","MAGGTPT1",115,0)
 ; VADM(5)=Patient's sex (M^MALE)
"RTN","MAGGTPT1",116,0)
 ; VADM(3)=Patient's DOB (internal^external)
"RTN","MAGGTPT1",117,0)
 ; VADM(2)=Patient's SSN (internal^external)
"RTN","MAGGTPT1",118,0)
 ; VAEL(3)=Patient's Service Connected? (#.301) (1=yes)
"RTN","MAGGTPT1",119,0)
 ; VAEL(4)=Patient's Veteran Y/N (#1901) (1=yes)
"RTN","MAGGTPT1",120,0)
 ; VAEL(6)=Patient's Type (#391) (internal^external)
"RTN","MAGGTPT1",121,0)
 ;
"RTN","MAGGTPT1",122,0)
 N MAGDFN,DFN,X,NOLOG,VADM,VAEL,VAERR,ISICN
"RTN","MAGGTPT1",123,0)
 S MAGDFN=$P(DATA,U),NOLOG=+$P(DATA,U,2),ISICN=+$P(DATA,U,3)
"RTN","MAGGTPT1",124,0)
 I ISICN D GETDFN^VAFCTFU1(.DFN,MAGDFN)
"RTN","MAGGTPT1",125,0)
 E  S DFN=+MAGDFN
"RTN","MAGGTPT1",126,0)
 D DEM^VADPT,ELIG^VADPT
"RTN","MAGGTPT1",127,0)
 I VAERR S MAGRY="0^"_"Entry not found in Patient file." Q
"RTN","MAGGTPT1",128,0)
 S X=$TR($$FMTE^XLFDT($P(VADM(3),"^"),"2FD")," ",0)
"RTN","MAGGTPT1",129,0)
 ; //           status ^   DFN ^ name ^ sex ^ DOB ^ SSN    ^ S/C ^ TYPE ^ Veteran(y/n)  ^ Patient Image Count
"RTN","MAGGTPT1",130,0)
 S $P(MAGRY,"^",1,2)="1^"_DFN
"RTN","MAGGTPT1",131,0)
 ;          Fields:      NAME,           SEX,      DATE OF BIRTH,    SSN
"RTN","MAGGTPT1",132,0)
 S $P(MAGRY,"^",3,6)=$G(VADM(1))_"^"_$P(VADM(5),"^",2)_"^"_X_"^"_$P(VADM(2),"^")
"RTN","MAGGTPT1",133,0)
 ;          Fields:  Service Connected?,       Type,                   Veteran Y/N?     
"RTN","MAGGTPT1",134,0)
 S $P(MAGRY,"^",7,9)=$S(+VAEL(3):"YES",1:"")_"^"_$P(VAEL(6),"^",2)_"^"_$S(+VAEL(4):"YES",1:"")
"RTN","MAGGTPT1",135,0)
 ;          Fields:  Patient Image Count   
"RTN","MAGGTPT1",136,0)
 S $P(MAGRY,"^",10)=$$IMGCT(DFN)_"^"
"RTN","MAGGTPT1",137,0)
 ;  Additions. for Patch 41
"RTN","MAGGTPT1",138,0)
 ;          Fields :   Patient ICN
"RTN","MAGGTPT1",139,0)
 S $P(MAGRY,"^",11)=$$GETICN^MPIF001(DFN)
"RTN","MAGGTPT1",140,0)
 S X=$$SITE^VASITE
"RTN","MAGGTPT1",141,0)
 ;          Fields:   Site Number       Prod Acct
"RTN","MAGGTPT1",142,0)
 S $P(MAGRY,"^",12)=$P($G(X),"^",3)_"^"_"1" ; We'll default to Production Account = Yes.
"RTN","MAGGTPT1",143,0)
 ; NEED KERNEL PATCH XU*8.0*284 FOR PROD^XUPROD
"RTN","MAGGTPT1",144,0)
 ;          Fields :   the Actual value for Prod Acct
"RTN","MAGGTPT1",145,0)
 I $L($T(PROD^XUPROD)) S $P(MAGRY,"^",13)=+$$PROD^XUPROD
"RTN","MAGGTPT1",146,0)
 S $P(MAGRY,"^",14)="^"
"RTN","MAGGTPT1",147,0)
 ; AGE
"RTN","MAGGTPT1",148,0)
 S $P(MAGRY,"^",15)=VADM(4)_"^"
"RTN","MAGGTPT1",149,0)
 D KVAR^VADPT,KVA^VADPT
"RTN","MAGGTPT1",150,0)
 I NOLOG  ; Don't update session log
"RTN","MAGGTPT1",151,0)
 ;  We'll track DFN:ICN
"RTN","MAGGTPT1",152,0)
 E  D ACTION^MAGGTAU("PAT^"_DFN_$S(ISICN:"-"_MAGDFN,1:""))
"RTN","MAGGTPT1",153,0)
 Q
"RTN","MAGGTPT1",154,0)
IMGCT(DFN) ; RETURN TOTAL NUMBER OF IMAGES FOR A PATIENT;
"RTN","MAGGTPT1",155,0)
 ;
"RTN","MAGGTPT1",156,0)
 N I,CT,RDT,PRX,IEN
"RTN","MAGGTPT1",157,0)
 S CT=0
"RTN","MAGGTPT1",158,0)
 S RDT="" F  S RDT=$O(^MAG(2005,"APDTPX",DFN,RDT)) Q:RDT=""  D
"RTN","MAGGTPT1",159,0)
 . S PRX="" F  S PRX=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX)) Q:PRX=""  D
"RTN","MAGGTPT1",160,0)
 . . S IEN="" F  S IEN=$O(^MAG(2005,"APDTPX",DFN,RDT,PRX,IEN)) Q:IEN=""  S:'$$ISDEL^MAGGI11(IEN) CT=CT+1
"RTN","MAGGTPT1",161,0)
 Q CT
"RTN","MAGGTPT1",162,0)
BS5CHK(MAGRY,MAGDFN) ;RPC [MAGG PAT BS5 CHECK]
"RTN","MAGGTPT1",163,0)
 ; Call to check the BS5 cross ref 
"RTN","MAGGTPT1",164,0)
 ; and see if any similar patients exist.
"RTN","MAGGTPT1",165,0)
 ; If yes, all matching patients will be listed and shown to the user.
"RTN","MAGGTPT1",166,0)
 ;
"RTN","MAGGTPT1",167,0)
 N MAGX,MAGDPT,XDFN,XSSN,CT,LNTH
"RTN","MAGGTPT1",168,0)
 S LNTH=0
"RTN","MAGGTPT1",169,0)
 S MAGRY(1)="-1^Error checking cross reference"
"RTN","MAGGTPT1",170,0)
 D GUIBS5A^DPTLK6(.MAGRY,MAGDFN)
"RTN","MAGGTPT1",171,0)
 I MAGRY(1)=0 Q
"RTN","MAGGTPT1",172,0)
 S CT=$O(MAGRY(""),-1)+1
"RTN","MAGGTPT1",173,0)
 S MAGRY(CT)=MAGRY(CT-1),MAGRY(CT-1)="0^ "
"RTN","MAGGTPT1",174,0)
 S I="" F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTPT1",175,0)
 . I $P(MAGRY(I),U)=0 Q
"RTN","MAGGTPT1",176,0)
 . I $L($P(MAGRY(I),U,3))>LNTH S LNTH=$L($P(MAGRY(I),U,3))
"RTN","MAGGTPT1",177,0)
 S LNTH=LNTH+1
"RTN","MAGGTPT1",178,0)
 S I=1 F  S I=$O(MAGRY(I)) Q:'I  D
"RTN","MAGGTPT1",179,0)
 . I $P(MAGRY(I),U)="0" S MAGRY(I)=$P(MAGRY(I),U,2) Q
"RTN","MAGGTPT1",180,0)
 . S XDFN=$P(MAGRY(I),U,2)
"RTN","MAGGTPT1",181,0)
 . I +XDFN=+MAGDFN S MAGX="   >>>>>> "
"RTN","MAGGTPT1",182,0)
 . E  S MAGX="          "
"RTN","MAGGTPT1",183,0)
 . S XSSN=$$SSN^DPTLK1(XDFN) I XSSN?9N S XSSN=$E(XSSN,1,3)_"-"_$E(XSSN,4,5)_"-"_$E(XSSN,6,9)
"RTN","MAGGTPT1",184,0)
 . S MAGDPT=$P(MAGRY(I),U,3),$E(MAGDPT,LNTH)=" "
"RTN","MAGGTPT1",185,0)
 . S MAGX=MAGX_MAGDPT_"   "_$$DOB^DPTLK1(XDFN)_"   "_XSSN
"RTN","MAGGTPT1",186,0)
 . S MAGRY(I)=MAGX
"RTN","MAGGTPT1",187,0)
 Q
"RTN","MAGGTRAI")
0^60^B29892001
"RTN","MAGGTRAI",1,0)
MAGGTRAI ;WOIFO/GEK - list images for Radiology report ; [ 11/08/2001 17:18 ]
"RTN","MAGGTRAI",2,0)
 ;;3.0;IMAGING;**8,93**;Dec 02, 2009;Build 163
"RTN","MAGGTRAI",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTRAI",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRAI",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTRAI",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTRAI",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTRAI",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTRAI",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTRAI",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTRAI",11,0)
 ;; |                                                               |
"RTN","MAGGTRAI",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTRAI",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTRAI",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTRAI",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTRAI",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTRAI",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRAI",18,0)
 ;;
"RTN","MAGGTRAI",19,0)
 Q
"RTN","MAGGTRAI",20,0)
IMAGE(MAGZRY,DATA) ;RPC [MAGGRADIMAGE]
"RTN","MAGGTRAI",21,0)
 ; Call from selected entry in Rad Exam list.
"RTN","MAGGTRAI",22,0)
 ;  INPUT is DATA, which is just what we sent in the list of Rad
"RTN","MAGGTRAI",23,0)
 ;     Exams for the patient.
"RTN","MAGGTRAI",24,0)
 ;DATA is the Radiology values stored in ^TMP($J,"RAEX",x)
"RTN","MAGGTRAI",25,0)
 ;  that the radiology procedure RAPTLU sets during the search 
"RTN","MAGGTRAI",26,0)
 ;  for patient exams.  (see routine RAPTLU )
"RTN","MAGGTRAI",27,0)
 ;      ^TMP($J,"RAEX",RACNT)=
"RTN","MAGGTRAI",28,0)
 ;     RADFN_"^"_RADTI_"^"_RACNI_"^"_RANME_"^"_RASSN_"^"
"RTN","MAGGTRAI",29,0)
 ;     _RADATE_"^"_RADTE_"^"_RACN_"^"_RAPRC_"^"_RARPT_"^"_RAST
"RTN","MAGGTRAI",30,0)
 ;
"RTN","MAGGTRAI",31,0)
 S MAGZRY=$NA(^TMP("MAGGTRAI",$J))
"RTN","MAGGTRAI",32,0)
 K @MAGZRY
"RTN","MAGGTRAI",33,0)
 IF $$NEWERR^%ZTER N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTRAI",34,0)
 E  S X="ERRA^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGGTRAI",35,0)
 N I,Y,CT,MAGIEN
"RTN","MAGGTRAI",36,0)
 ;
"RTN","MAGGTRAI",37,0)
 S DATA=$P(DATA,"^",7,99)
"RTN","MAGGTRAI",38,0)
 S CT=0
"RTN","MAGGTRAI",39,0)
 F I="RADFN","RADTI","RACNI","RANME","RASSN","RADATE","RADTE","RACN","RAPRC","RARPT","RAST" S CT=CT+1,@I=$P(DATA,"^",CT)
"RTN","MAGGTRAI",40,0)
 ; Patch 2.0.5 next few lines for Patient Safety
"RTN","MAGGTRAI",41,0)
 I RARPT["PMRAD" S @MAGZRY@(0)="-2^Patient Mismatch. Radiology Files" Q
"RTN","MAGGTRAI",42,0)
 I 'RARPT S @MAGZRY@(0)="0^No Report for selected exam." Q
"RTN","MAGGTRAI",43,0)
 I '$O(^RARPT(RARPT,2005,0)) S @MAGZRY@(0)="0^No Images for selected exam." Q
"RTN","MAGGTRAI",44,0)
 I $P($G(^RARPT(RARPT,0)),U,2)'=RADFN S @MAGZRY@(0)="-2^Patient Mismatch. Radiology Files" Q
"RTN","MAGGTRAI",45,0)
 D GETLIST
"RTN","MAGGTRAI",46,0)
 Q
"RTN","MAGGTRAI",47,0)
IMAGEC(MAGZRY,DATA) ;RPC [MAGG CPRS RAD EXAM]
"RTN","MAGGTRAI",48,0)
 ; Call to list Images for a Rad Exam that was selected from CPRS 
"RTN","MAGGTRAI",49,0)
 ; and Imaging Window was notified via windows messaging
"RTN","MAGGTRAI",50,0)
 ;   INPUT :  DATA is in format of Windows message received from CPRS
"RTN","MAGGTRAI",51,0)
 ;    example   'RPT^CPRS^29027^RA^i79029185.9998-1'
"RTN","MAGGTRAI",52,0)
 N DFN,RARPT,ENT,INVDTTM,INVDT,INVTM
"RTN","MAGGTRAI",53,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGGTRAI",54,0)
 S MAGZRY=$NA(^TMP("MAGGTRAI",$J))
"RTN","MAGGTRAI",55,0)
 K @MAGZRY
"RTN","MAGGTRAI",56,0)
 S DFN=$P(DATA,U,3)
"RTN","MAGGTRAI",57,0)
 S ENT=$P($P(DATA,U,5),"-",2)
"RTN","MAGGTRAI",58,0)
 S INVDTTM=$P($P(DATA,U,5),"-",1)
"RTN","MAGGTRAI",59,0)
 S INVDT=$P(INVDTTM,".",1)
"RTN","MAGGTRAI",60,0)
 S INVTM=$P(INVDTTM,".",2)
"RTN","MAGGTRAI",61,0)
 F  Q:($L(INVDT)<8)  S INVDT=$E(INVDT,2,$L(INVDT))
"RTN","MAGGTRAI",62,0)
 S INVDTTM=INVDT_"."_INVTM
"RTN","MAGGTRAI",63,0)
 I '$D(^RADPT(DFN,"DT",INVDTTM,"P",ENT,0)) S @MAGZRY@(0)="0^INVALID Data : Attempt to access Exam failed." Q
"RTN","MAGGTRAI",64,0)
 ;   Get out the Naked reference .
"RTN","MAGGTRAI",65,0)
 S RARPT=$P(^RADPT(DFN,"DT",INVDTTM,"P",ENT,0),U,17)
"RTN","MAGGTRAI",66,0)
 ;S RARPT=$P(^(0),U,17)
"RTN","MAGGTRAI",67,0)
 I 'RARPT S @MAGZRY@(0)="0^No Report for selected Exam" Q
"RTN","MAGGTRAI",68,0)
 ; MAGQI 8/22/01
"RTN","MAGGTRAI",69,0)
 I $P($G(^RARPT(RARPT,0)),U,2)'=DFN S @MAGZRY@(0)="-2^Patient Mismatch. Radiology File" Q
"RTN","MAGGTRAI",70,0)
 D GETLIST
"RTN","MAGGTRAI",71,0)
 N XINFO
"RTN","MAGGTRAI",72,0)
 S XINFO=$P(^RARPT(RARPT,0),U,1)
"RTN","MAGGTRAI",73,0)
 S X=$P(^RADPT(DFN,"DT",INVDTTM,"P",ENT,0),U,2)
"RTN","MAGGTRAI",74,0)
 S XINFO=XINFO_"  "_$P(^RAMIS(71,X,0),U)
"RTN","MAGGTRAI",75,0)
 S X=$P(^RARPT(RARPT,0),U,3)
"RTN","MAGGTRAI",76,0)
 S XINFO=XINFO_"  "_X
"RTN","MAGGTRAI",77,0)
 S $P(@MAGZRY@(0),U,3)=RARPT
"RTN","MAGGTRAI",78,0)
 S $P(@MAGZRY@(0),U,4)=XINFO
"RTN","MAGGTRAI",79,0)
 Q
"RTN","MAGGTRAI",80,0)
GETLIST ; Private call. From other points in this routine, when RARPT is defined
"RTN","MAGGTRAI",81,0)
 ; and returns a list in MAGZRY(1..n). 
"RTN","MAGGTRAI",82,0)
 ; We'll make a tmp list of just the image IEN's
"RTN","MAGGTRAI",83,0)
 ;  splitting groups into individual image entries.
"RTN","MAGGTRAI",84,0)
 ; If more than 1 Image group points to this report, we
"RTN","MAGGTRAI",85,0)
 ;  will prefix the Image Description with (G1), (G2) etc
"RTN","MAGGTRAI",86,0)
 ; We call GROUP^MAGGTIG to get the images for the group, this call
"RTN","MAGGTRAI",87,0)
 ;  sorts the images in Dicom Series, Dicom Image number order.
"RTN","MAGGTRAI",88,0)
 ;
"RTN","MAGGTRAI",89,0)
 K ^TMP("MAGGX",$J)
"RTN","MAGGTRAI",90,0)
 N OI,IGCT,MAGIEN1,ORDCT,GCT,MAGQI,MAGX,SINGCT
"RTN","MAGGTRAI",91,0)
 S (ORDCT,GCT,SINGCT)=0
"RTN","MAGGTRAI",92,0)
 S IGCT=+$P($G(^RARPT(RARPT,2005,0)),U,4)
"RTN","MAGGTRAI",93,0)
 ; Quit if no images for RARPT
"RTN","MAGGTRAI",94,0)
 I IGCT=0 S @MAGZRY@(0)="0^0 Images for Radiology Report." Q 
"RTN","MAGGTRAI",95,0)
 ;
"RTN","MAGGTRAI",96,0)
 ; Check all Image entries in RARPT 2005 NODE. for Patient match Pointer match, from both 
"RTN","MAGGTRAI",97,0)
 ;   RARPT end, and Imaging end.
"RTN","MAGGTRAI",98,0)
 S MAGQI=1
"RTN","MAGGTRAI",99,0)
 S OI=0,CT=1 F  S OI=$O(^RARPT(RARPT,2005,OI)) Q:'OI  D  Q:(MAGQI<1)
"RTN","MAGGTRAI",100,0)
 . S MAGIEN1=$P(^RARPT(RARPT,2005,OI,0),U)
"RTN","MAGGTRAI",101,0)
 . ; Assure magdfn = rarpt dfn
"RTN","MAGGTRAI",102,0)
 . I $P($G(^RARPT(RARPT,0)),U,2)'=$P($G(^MAG(2005,MAGIEN1,0)),U,7) S MAGQI="-2^Patient Mismatch. Radiology Report" Q
"RTN","MAGGTRAI",103,0)
 . ; Assure magien1 is pointing to this rarpt
"RTN","MAGGTRAI",104,0)
 . I $P($G(^MAG(2005,MAGIEN1,2)),U,7)'=RARPT S MAGQI="-2^Pointer Mismatch. Radiology Report" Q
"RTN","MAGGTRAI",105,0)
 . ; Now run the Imaging integrity check
"RTN","MAGGTRAI",106,0)
 . D CHK^MAGGSQI(.MAGX,MAGIEN1) I 'MAGX(0) S MAGQI="-2^"_$P(MAGX(0),U,2,99) Q
"RTN","MAGGTRAI",107,0)
 ;
"RTN","MAGGTRAI",108,0)
 I MAGQI<1 S @MAGZRY@(0)=MAGQI Q
"RTN","MAGGTRAI",109,0)
 S CT=0
"RTN","MAGGTRAI",110,0)
 ;
"RTN","MAGGTRAI",111,0)
 S OI=0,CT=1 F  S OI=$O(^RARPT(RARPT,2005,OI)) Q:'OI  D
"RTN","MAGGTRAI",112,0)
 . S MAGIEN1=$P(^RARPT(RARPT,2005,OI,0),U) D ONELIST
"RTN","MAGGTRAI",113,0)
 ;
"RTN","MAGGTRAI",114,0)
 ; Now get the list from the TMP LIST and return it.
"RTN","MAGGTRAI",115,0)
 I '$D(^TMP("MAGGX",$J)) S @MAGZRY@(0)="0^Report "_RARPT_": has INVALID Image Pointers" Q
"RTN","MAGGTRAI",116,0)
 S CT=0
"RTN","MAGGTRAI",117,0)
 S MAGQUIET=1
"RTN","MAGGTRAI",118,0)
 S I="",J="",K=""
"RTN","MAGGTRAI",119,0)
 F  S I=$O(^TMP("MAGGX",$J,I)) Q:I=""  D
"RTN","MAGGTRAI",120,0)
 . S J=""
"RTN","MAGGTRAI",121,0)
 . F  S J=$O(^TMP("MAGGX",$J,I,J)) Q:J=""  D
"RTN","MAGGTRAI",122,0)
 . . S K=""
"RTN","MAGGTRAI",123,0)
 . . F  S K=$O(^TMP("MAGGX",$J,I,J,K)) Q:K=""  D
"RTN","MAGGTRAI",124,0)
 . . . S CT=CT+1
"RTN","MAGGTRAI",125,0)
 . . . S X="["_J_"]"_$P(^TMP("MAGGX",$J,I,J,K),U,8)
"RTN","MAGGTRAI",126,0)
 . . . S $P(^TMP("MAGGX",$J,I,J,K),U,8)=X
"RTN","MAGGTRAI",127,0)
 . . . S @MAGZRY@(CT)=^TMP("MAGGX",$J,I,J,K)
"RTN","MAGGTRAI",128,0)
 K MAGQUIET
"RTN","MAGGTRAI",129,0)
 S @MAGZRY@(0)=CT_"^Images for the selected Radiology Exam"
"RTN","MAGGTRAI",130,0)
 ; Redesign needed for Multiple Image Groups pointing to an exam or note.
"RTN","MAGGTRAI",131,0)
 ; we now put all images from all groups in one list. 
"RTN","MAGGTRAI",132,0)
 S $P(@MAGZRY@(0),U,5)=$G(MAGIEN1) ; this was last ien from multiple Image Groups.
"RTN","MAGGTRAI",133,0)
 ;
"RTN","MAGGTRAI",134,0)
 Q
"RTN","MAGGTRAI",135,0)
ONELIST ;        Private Call from other parts of this routine.
"RTN","MAGGTRAI",136,0)
 N MAGTMP
"RTN","MAGGTRAI",137,0)
 Q:'$D(^MAG(2005,MAGIEN1,0))
"RTN","MAGGTRAI",138,0)
 ; if a single image just get record for that IEN
"RTN","MAGGTRAI",139,0)
 I '$O(^MAG(2005,MAGIEN1,1,0)) D  Q
"RTN","MAGGTRAI",140,0)
 . ;S MAGXX=MAGIEN1 D INFO^MAGGTII
"RTN","MAGGTRAI",141,0)
 . S MAGFILE=$$INFO^MAGGAII(MAGIEN1,"E")
"RTN","MAGGTRAI",142,0)
 . S ORDCT=ORDCT+1,SINGCT=SINGCT+1
"RTN","MAGGTRAI",143,0)
 . S ^TMP("MAGGX",$J,ORDCT,"S",SINGCT)="B2^"_MAGFILE
"RTN","MAGGTRAI",144,0)
 D GROUP^MAGGTIG(.MAGTMP,MAGIEN1) I $P(@MAGTMP@(0),U,2)>0 D
"RTN","MAGGTRAI",145,0)
 . S ORDCT=ORDCT+1,GCT=GCT+1,X="G"_GCT
"RTN","MAGGTRAI",146,0)
 . K @MAGTMP@(0)
"RTN","MAGGTRAI",147,0)
 . M ^TMP("MAGGX",$J,ORDCT,X)=@MAGTMP
"RTN","MAGGTRAI",148,0)
 Q
"RTN","MAGGTRPT")
0^42^B43638944
"RTN","MAGGTRPT",1,0)
MAGGTRPT ;WOIFO/RED/GEK/SG - Display Associated Report ; 3/9/09 12:52pm
"RTN","MAGGTRPT",2,0)
 ;;3.0;IMAGING;**8,48,93**;Dec 02, 2009;Build 163
"RTN","MAGGTRPT",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTRPT",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRPT",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTRPT",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTRPT",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTRPT",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTRPT",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTRPT",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTRPT",11,0)
 ;; |                                                               |
"RTN","MAGGTRPT",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTRPT",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTRPT",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTRPT",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTRPT",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTRPT",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTRPT",18,0)
 ;;
"RTN","MAGGTRPT",19,0)
BRK(MAGRPTY,MAGGIEN,NOCHK) ;RPC [MAGGRPT]  Call to return Image report
"RTN","MAGGTRPT",20,0)
 ;  MAGGIEN is internal number in Image File ^MAG(2005,
"RTN","MAGGTRPT",21,0)
 ;  NOCHK   is a Flag that tell to Not run the QA check, just return
"RTN","MAGGTRPT",22,0)
 ;          the report.
"RTN","MAGGTRPT",23,0)
 ;
"RTN","MAGGTRPT",24,0)
 S MAGRPTY=$NA(^TMP($J,"WSDAT"))
"RTN","MAGGTRPT",25,0)
 K @MAGRPTY ; clean it up first.
"RTN","MAGGTRPT",26,0)
 S @MAGRPTY@(0)="0^Building the Image report..."
"RTN","MAGGTRPT",27,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTRPT"
"RTN","MAGGTRPT",28,0)
 ;
"RTN","MAGGTRPT",29,0)
 N X,Y,Z,MAGGBRK,MAGO,MAGGRPO,MAGDFN,MAGTMPR,MAGTMPRT
"RTN","MAGGTRPT",30,0)
 N MAGNODIS,MAGTMPR2,MAGDESC,MAGISGRP,MAGQA,%ZIS,IOP
"RTN","MAGGTRPT",31,0)
 S MAGGBRK=1,MAGISGRP=0
"RTN","MAGGTRPT",32,0)
 S MAGO=+$P(MAGGIEN,"^")
"RTN","MAGGTRPT",33,0)
 S NOCHK=+$G(NOCHK)
"RTN","MAGGTRPT",34,0)
 ; Requesting a report, have to check Image
"RTN","MAGGTRPT",35,0)
 ;   and Group, if this image is in a group.
"RTN","MAGGTRPT",36,0)
 I 'NOCHK D  Q:'MAGQA(0)
"RTN","MAGGTRPT",37,0)
 . D CHK^MAGGSQI(.MAGQA,MAGO)
"RTN","MAGGTRPT",38,0)
 . I 'MAGQA(0) S @MAGRPTY@(0)="-2^"_$P(MAGQA(0),U,2,99) Q
"RTN","MAGGTRPT",39,0)
 . S MAGGRPO=+$P(^MAG(2005,MAGO,0),U,10)
"RTN","MAGGTRPT",40,0)
 . Q:'MAGGRPO  K MAGQA
"RTN","MAGGTRPT",41,0)
 . D CHK^MAGGSQI(.MAGQA,MAGGRPO)
"RTN","MAGGTRPT",42,0)
 . I 'MAGQA(0) S @MAGRPTY@(0)="-2^"_$P(MAGQA(0),U,2,99) Q
"RTN","MAGGTRPT",43,0)
 ;
"RTN","MAGGTRPT",44,0)
 ;
"RTN","MAGGTRPT",45,0)
 I 'MAGO S @MAGRPTY@(0)="INVALID Image pointer: '"_MAGGIEN_"'" Q
"RTN","MAGGTRPT",46,0)
 I $$ISDEL^MAGGI11(MAGO)  D  Q
"RTN","MAGGTRPT",47,0)
 . S X=$$NODE^MAGGI11(MAGO)  S:X'="" X=$G(@X@(2))
"RTN","MAGGTRPT",48,0)
 . S @MAGRPTY@(0)="0^Image : """_$P(X,U,4)_""" has been deleted."
"RTN","MAGGTRPT",49,0)
 . Q
"RTN","MAGGTRPT",50,0)
 S MAGDESC="",MAGDFN=$P(^MAG(2005,MAGO,0),U,7)
"RTN","MAGGTRPT",51,0)
 ; IN check we get Desc for Report Window header,
"RTN","MAGGTRPT",52,0)
 ;    and Define Group IEN  - MAGGRPO if it exists.
"RTN","MAGGTRPT",53,0)
 ;    and Define MAGISGRP = 1 if this MAGO is a group itself
"RTN","MAGGTRPT",54,0)
 D CHECK(.MAGO,MAGDFN,.MAGDESC,.MAGGRPO,.MAGISGRP)
"RTN","MAGGTRPT",55,0)
 ; quit if NO PARENT DATA FILE and No long description.
"RTN","MAGGTRPT",56,0)
 ;  for the Image or the Group entry
"RTN","MAGGTRPT",57,0)
 I ($P($G(^MAG(2005,MAGO,2)),U,6)="")&('$D(^MAG(2005,MAGO,3)))&($P($G(^MAG(2005,MAGGRPO,2)),U,6)="")&('$D(^MAG(2005,MAGGRPO,3))) S @MAGRPTY@(0)="0^No Report for this Image" Q
"RTN","MAGGTRPT",58,0)
 S IOP="IMAGING WORKSTATION",%ZIS=0 D ^%ZIS
"RTN","MAGGTRPT",59,0)
 I POP S @MAGRPTY@(0)="0^Can't open device IMAGING WORKSTATION" K POP Q
"RTN","MAGGTRPT",60,0)
 U IO D BUILD
"RTN","MAGGTRPT",61,0)
 ;
"RTN","MAGGTRPT",62,0)
 D:IO'=IO(0) ^%ZISC
"RTN","MAGGTRPT",63,0)
 S:+$P(@MAGRPTY@(0),"^") @MAGRPTY@(0)="1^"_MAGDESC
"RTN","MAGGTRPT",64,0)
 Q
"RTN","MAGGTRPT",65,0)
BUILD ;
"RTN","MAGGTRPT",66,0)
 K DIC,DIR
"RTN","MAGGTRPT",67,0)
 N MAGDASH,DIWR,DIWL
"RTN","MAGGTRPT",68,0)
 S $P(MAGDASH,"_",79)="_"
"RTN","MAGGTRPT",69,0)
 ; If Child of group get PARENT DATA FILE from group
"RTN","MAGGTRPT",70,0)
 I MAGGRPO S MAGTMPR=$G(^MAG(2005,MAGGRPO,2)),MAGTMPRT=$P(MAGTMPR,"^",6)  ;
"RTN","MAGGTRPT",71,0)
 ; if not child of group, then get PARENT DATA FILE from original IEN
"RTN","MAGGTRPT",72,0)
 I 'MAGGRPO S MAGTMPR=$G(^MAG(2005,MAGO,2)),MAGTMPRT=$P(MAGTMPR,"^",6)
"RTN","MAGGTRPT",73,0)
 S DIWR=80,DIWL=1
"RTN","MAGGTRPT",74,0)
 ;  IF This is a group call GRPDESC which will print ALL image long descriptions , not just the group long desc
"RTN","MAGGTRPT",75,0)
 I MAGISGRP D GRPDESC^MAGGTRP1(MAGO)
"RTN","MAGGTRPT",76,0)
 ; If not a group, then print group long desc if it exists,
"RTN","MAGGTRPT",77,0)
 ;   and/or the long desc of the Images itself
"RTN","MAGGTRPT",78,0)
 I 'MAGISGRP D
"RTN","MAGGTRPT",79,0)
 . I MAGGRPO D GETDESC^MAGGTRP1(MAGGRPO)
"RTN","MAGGTRPT",80,0)
 . D GETDESC^MAGGTRP1(MAGO)
"RTN","MAGGTRPT",81,0)
 . W MAGDASH
"RTN","MAGGTRPT",82,0)
 I MAGTMPRT="" D ENTRY^MAGLOG("LONGDES",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0) Q
"RTN","MAGGTRPT",83,0)
 I $P(MAGTMPR,"^",7)="" S @MAGRPTY@(0)="0^Full report not available through this windows option." Q
"RTN","MAGGTRPT",84,0)
 ;
"RTN","MAGGTRPT",85,0)
 ; Surgery reports
"RTN","MAGGTRPT",86,0)
 S MAGTMPR2=$P(^MAG(2005.03,MAGTMPRT,0),"^",1) I MAGTMPR2="SURGERY" D  Q
"RTN","MAGGTRPT",87,0)
 . S SRTN=$P(MAGTMPR,"^",7)
"RTN","MAGGTRPT",88,0)
 . D ^SROPRPT K SRTN
"RTN","MAGGTRPT",89,0)
 . D ENTRY^MAGLOG("SURGRPT",DUZ,MAGO,"MAGRPT",MAGDFN,0)
"RTN","MAGGTRPT",90,0)
 ;
"RTN","MAGGTRPT",91,0)
 ; TIU documents;
"RTN","MAGGTRPT",92,0)
 I MAGTMPRT=8925 D  Q
"RTN","MAGGTRPT",93,0)
 . N I,MAGY
"RTN","MAGGTRPT",94,0)
 . D TGET^TIUSRVR1(.MAGY,$P(MAGTMPR,"^",7))
"RTN","MAGGTRPT",95,0)
 . S I="" F  S I=$O(@MAGY@(I)) Q:'I  W !,@MAGY@(I)
"RTN","MAGGTRPT",96,0)
 . D ENTRY^MAGLOG("TIURPT",DUZ,MAGO,"MAGRPT",MAGDFN,0)
"RTN","MAGGTRPT",97,0)
 ;
"RTN","MAGGTRPT",98,0)
 ; Medicine reports
"RTN","MAGGTRPT",99,0)
 I MAGTMPRT>689.999&(MAGTMPRT<703) D  Q
"RTN","MAGGTRPT",100,0)
 . S MAGNODIS=1
"RTN","MAGGTRPT",101,0)
 . D REPRT^MCMAGDSP($P(MAGTMPR,"^",7),MAGTMPRT)
"RTN","MAGGTRPT",102,0)
 . D ENTRY^MAGLOG("MEDRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",103,0)
 ;
"RTN","MAGGTRPT",104,0)
 ; Radiology reports
"RTN","MAGGTRPT",105,0)
 I MAGTMPRT=74 D  Q
"RTN","MAGGTRPT",106,0)
 . D BUILD^MAGGTRP1($P(MAGTMPR,U,7))
"RTN","MAGGTRPT",107,0)
 . D ENTRY^MAGLOG("RADRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",108,0)
 ;
"RTN","MAGGTRPT",109,0)
 ;Laboratory reports
"RTN","MAGGTRPT",110,0)
 I $P(^MAG(2005.03,MAGTMPRT,0),"^",4)=63 D @$S(MAGTMPRT=63:"AU",MAGTMPRT=63.2:"AU",1:"LAB") Q
"RTN","MAGGTRPT",111,0)
 ;
"RTN","MAGGTRPT",112,0)
 S @MAGRPTY@(0)="0^Full report not available through this windows option."
"RTN","MAGGTRPT",113,0)
 Q
"RTN","MAGGTRPT",114,0)
 ;
"RTN","MAGGTRPT",115,0)
CHECK(MAGO,MAGDFN,MAGDESC,MAGGRPO,MAGISGRP) ;
"RTN","MAGGTRPT",116,0)
 ; 9/28/99  Change Report long description, so this is changed to 
"RTN","MAGGTRPT",117,0)
 ; return the desc of MAGO, and define MAGGRPO if this is child of grp
"RTN","MAGGTRPT",118,0)
 N MAGTMP
"RTN","MAGGTRPT",119,0)
 I '$D(^MAG(2005,MAGO)) S @MAGRPTY@(0)="0^Invalid Image pointer"_MAGO Q
"RTN","MAGGTRPT",120,0)
 S MAGDESC=$P($G(^MAG(2005,MAGO,2)),U,4)
"RTN","MAGGTRPT",121,0)
 I $O(^MAG(2005,MAGO,1,0)) S MAGISGRP=1
"RTN","MAGGTRPT",122,0)
 S MAGGRPO=+$P(^MAG(2005,MAGO,0),U,10)
"RTN","MAGGTRPT",123,0)
 ;
"RTN","MAGGTRPT",124,0)
 S MAGTMP=$S(MAGGRPO:MAGGRPO,1:MAGO)
"RTN","MAGGTRPT",125,0)
 Q:'$D(^MAG(2005,MAGTMP,2))
"RTN","MAGGTRPT",126,0)
 ; Procedure Exam Date/Time
"RTN","MAGGTRPT",127,0)
 S Y=$P(^MAG(2005,MAGTMP,2),U,5),X=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_($E(Y,1,3)+1700)
"RTN","MAGGTRPT",128,0)
 ;             procedure                     short description
"RTN","MAGGTRPT",129,0)
 S Y=X_"  "_$P(^MAG(2005,MAGTMP,0),U,8)_"  "_$P($G(^MAG(2005,MAGTMP,2)),U,4)
"RTN","MAGGTRPT",130,0)
 I MAGDFN S MAGDESC=MAGDESC_"^"_$P($G(^DPT(MAGDFN,0)),U)
"RTN","MAGGTRPT",131,0)
 Q
"RTN","MAGGTRPT",132,0)
LAB ; Pathology Reports
"RTN","MAGGTRPT",133,0)
 N LINE,MAGIOPEN,MAGSTART,MAGEND,MAGSUB,TYPE,MAGXX,MAGLR
"RTN","MAGGTRPT",134,0)
 S TYPE=$P(^MAG(2005.03,MAGTMPRT,0),"^",2)
"RTN","MAGGTRPT",135,0)
 S MAGSTART=$P(^MAG(2005,MAGO,2),"^",10),MAGLR=$P(^MAG(2005,MAGO,2),"^",7)
"RTN","MAGGTRPT",136,0)
 I MAGSTART,MAGLR,$D(^LR(MAGLR,TYPE,MAGSTART,0)) D
"RTN","MAGGTRPT",137,0)
 . S (MAGSTART,MAGEND)=9999999-MAGSTART
"RTN","MAGGTRPT",138,0)
 . Q
"RTN","MAGGTRPT",139,0)
 ;if no pointer back to lab file use the procedure date/time.
"RTN","MAGGTRPT",140,0)
 I 'MAGSTART D 
"RTN","MAGGTRPT",141,0)
 . S MAGSTART=$P(^MAG(2005,MAGO,2),"^",5)
"RTN","MAGGTRPT",142,0)
 . S (MAGSTART,MAGEND)=$P(MAGSTART,".")
"RTN","MAGGTRPT",143,0)
 . Q
"RTN","MAGGTRPT",144,0)
 I '$L(MAGSTART) D  Q
"RTN","MAGGTRPT",145,0)
 . S @MAGRPTY@(1)="No Procedure Date/Time entered in file 2005 for this Image"
"RTN","MAGGTRPT",146,0)
 S TYPE=$S(TYPE="SP":"SURGICAL PATHOLOGY",TYPE="CY":"CYTOPATHOLOGY",1:TYPE)
"RTN","MAGGTRPT",147,0)
 S MAGSUB=1,MAGSUB(TYPE)="",MAGXX=""
"RTN","MAGGTRPT",148,0)
 S MAGIOPEN=1
"RTN","MAGGTRPT",149,0)
 D EN^LR7OSUM(MAGXX,MAGDFN,MAGSTART,MAGEND,10,80,.MAGSUB)
"RTN","MAGGTRPT",150,0)
 I '$D(^TMP("LRC",$J)) S @MAGRPTY@(1)="No report(s) on file." Q
"RTN","MAGGTRPT",151,0)
 E  S LINE=0 F  S LINE=$O(^TMP("LRC",$J,LINE)) Q:LINE<1  W !,^TMP("LRC",$J,LINE,0)
"RTN","MAGGTRPT",152,0)
 D ENTRY^MAGLOG("LABRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",153,0)
 K ^TMP("LRC",$J),^TMP("LRT",$J),^TMP("LRH",$J)
"RTN","MAGGTRPT",154,0)
 Q
"RTN","MAGGTRPT",155,0)
AU ;Autopsy Report
"RTN","MAGGTRPT",156,0)
 N LRDFN,MAGSUB,MAGXX,LINE
"RTN","MAGGTRPT",157,0)
 S MAGSUB("AUTOPSY")=""
"RTN","MAGGTRPT",158,0)
 I '$D(MAGO)!'$D(MAGDFN) W !,"Missing imaging pointers." Q
"RTN","MAGGTRPT",159,0)
 S LRDFN=$P(^MAG(2005,MAGO,2),"^",7),LRDFN=+LRDFN
"RTN","MAGGTRPT",160,0)
 I 'LRDFN!'$D(^LR(LRDFN,0)) W !,"Information missing, please use DHCP Lab print options." Q
"RTN","MAGGTRPT",161,0)
 I '$D(^LR(LRDFN,"AU")) W !,"Missing autopsy information." K LRDFN Q
"RTN","MAGGTRPT",162,0)
 D EN^LR7OSUM(.MAGXX,MAGDFN,,,,80,.MAGSUB)
"RTN","MAGGTRPT",163,0)
 I '$D(^TMP("LRC",$J)) S @MAGRPTY@(1)="No autopsy report on file." Q
"RTN","MAGGTRPT",164,0)
 S LINE=0 F  S LINE=$O(^TMP("LRC",$J,LINE)) Q:LINE<1  W !,^TMP("LRC",$J,LINE,0)
"RTN","MAGGTRPT",165,0)
 D ENTRY^MAGLOG("LABRPT",DUZ,MAGO,"MAGRPT-WIN",MAGDFN,0)
"RTN","MAGGTRPT",166,0)
 K ^TMP("LRC",$J)
"RTN","MAGGTRPT",167,0)
 Q
"RTN","MAGGTRPT",168,0)
ERRA ;
"RTN","MAGGTRPT",169,0)
 S @MAGRPTY@(0)="0^ERROR "_$$EC^%ZOSV
"RTN","MAGGTRPT",170,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTRPT",171,0)
 Q
"RTN","MAGGTSYS")
0^27^B11574384
"RTN","MAGGTSYS",1,0)
MAGGTSYS ;WOIFO/GEK - Calls from Imaging windows for System Manager ; 11/24/08 10:23am
"RTN","MAGGTSYS",2,0)
 ;;3.0;IMAGING;**59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTSYS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTSYS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSYS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTSYS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTSYS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTSYS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTSYS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTSYS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTSYS",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTSYS",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTSYS",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTSYS",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTSYS",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTSYS",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTSYS",17,0)
 ;;
"RTN","MAGGTSYS",18,0)
 Q
"RTN","MAGGTSYS",19,0)
GETS(MAGRY,NODE,FLAGS) ; USE GETS^DIQ TO GET FIELD VALUES.
"RTN","MAGGTSYS",20,0)
 K MAGWIN,I,CT,Y,NC,MAGOUT,MAGERR,TNC,ZZ,MAGIEN
"RTN","MAGGTSYS",21,0)
 S MAGRY=$NA(^TMP("MAGNODE",$J))
"RTN","MAGGTSYS",22,0)
 S NODE=+$G(NODE)
"RTN","MAGGTSYS",23,0)
 I 'NODE S NODE=$P(^MAG(2005,0),U,3)
"RTN","MAGGTSYS",24,0)
 S MAGIEN=NODE
"RTN","MAGGTSYS",25,0)
 S MAGWIN=$$BROKER^XWBLIB
"RTN","MAGGTSYS",26,0)
 I 'MAGWIN W !,"MAGIEN","  ",MAGIEN
"RTN","MAGGTSYS",27,0)
 K @MAGRY
"RTN","MAGGTSYS",28,0)
 S @MAGRY@(0)="******    Fields for Image IEN: "_MAGIEN_"    ******"
"RTN","MAGGTSYS",29,0)
 S I=0,CT=0
"RTN","MAGGTSYS",30,0)
 S FLAGS=$S($L($G(FLAGS)):FLAGS,1:"IERN")
"RTN","MAGGTSYS",31,0)
 D GETS^DIQ(2005,MAGIEN,"*",FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTSYS",32,0)
 ;D GETS^DIQ(2005,MAGIEN,".01;1;2;2.1;2.2;3;5;6;12","R","MAGOUT","MAGERR")
"RTN","MAGGTSYS",33,0)
 S NC=MAGIEN_","
"RTN","MAGGTSYS",34,0)
 S I="" F  S I=$O(MAGOUT(2005,NC,I)) Q:I=""  D
"RTN","MAGGTSYS",35,0)
 . S CT=CT+1
"RTN","MAGGTSYS",36,0)
 . I $G(MAGOUT(2005,NC,I,"I"))=$G(MAGOUT(2005,NC,I,"E")) D  Q
"RTN","MAGGTSYS",37,0)
 . . S ZZ=I,$E(ZZ,45,999)=" = "_$G(MAGOUT(2005,NC,I,"E"))
"RTN","MAGGTSYS",38,0)
 . . S @MAGRY@(CT)=ZZ
"RTN","MAGGTSYS",39,0)
 . . ;S @MAGRY@(CT)=I_" = "_MAGOUT(2005,NC,I,"E") Q
"RTN","MAGGTSYS",40,0)
 . . Q
"RTN","MAGGTSYS",41,0)
 . ;
"RTN","MAGGTSYS",42,0)
 . S ZZ=I,$E(ZZ,25,999)=" = ("_$G(MAGOUT(2005,NC,I,"I"))_") "
"RTN","MAGGTSYS",43,0)
 . I ($L(ZZ)>44) S ZZ=ZZ_" = "_$G(MAGOUT(2005,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",44,0)
 . I ($L(ZZ)<45) S $E(ZZ,45,999)=" = "_$G(MAGOUT(2005,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",45,0)
 . ;S @MAGRY@(CT)=I_" = ("_$G(MAGOUT(2005,NC,I,"I"))_") = "_$G(MAGOUT(2005,NC,I,"E"))
"RTN","MAGGTSYS",46,0)
 . Q
"RTN","MAGGTSYS",47,0)
 I $P($G(^MAG(2005,MAGIEN,2)),"^",6)=8925 D
"RTN","MAGGTSYS",48,0)
 . K MAGOUT,MAGERR
"RTN","MAGGTSYS",49,0)
 . S CT=CT+1,@MAGRY@(CT)="   ***************   TIU    *************** "
"RTN","MAGGTSYS",50,0)
 . S CT=CT+1,@MAGRY@(CT)="   **** Field Values for TIUDA: "_$P(^MAG(2005,MAGIEN,2),"^",7)_"  ****"
"RTN","MAGGTSYS",51,0)
 . D GETS^DIQ(8925,$P(^MAG(2005,MAGIEN,2),"^",7),"*",FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTSYS",52,0)
 . S NC=$P(^MAG(2005,MAGIEN,2),"^",7)_","
"RTN","MAGGTSYS",53,0)
 . S I="" F  S I=$O(MAGOUT(8925,NC,I)) Q:I=""  D
"RTN","MAGGTSYS",54,0)
 . . S CT=CT+1
"RTN","MAGGTSYS",55,0)
 . . I $G(MAGOUT(8925,NC,I,"I"))=$G(MAGOUT(8925,NC,I,"E")) D  Q
"RTN","MAGGTSYS",56,0)
 . . . S ZZ=I,$E(ZZ,45,999)=" = "_$G(MAGOUT(8925,NC,I,"E"))
"RTN","MAGGTSYS",57,0)
 . . . S @MAGRY@(CT)=ZZ
"RTN","MAGGTSYS",58,0)
 . . . ;S @MAGRY@(CT)=I_" = "_MAGOUT(2005,NC,I,"E") Q
"RTN","MAGGTSYS",59,0)
 . . . Q
"RTN","MAGGTSYS",60,0)
 . . ;
"RTN","MAGGTSYS",61,0)
 . . S ZZ=I,$E(ZZ,25,999)=" = ("_$G(MAGOUT(8925,NC,I,"I"))_") "
"RTN","MAGGTSYS",62,0)
 . . I ($L(ZZ)>44) S ZZ=ZZ_" = "_$G(MAGOUT(8925,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",63,0)
 . . I ($L(ZZ)<45) S $E(ZZ,45,999)=" = "_$G(MAGOUT(8925,NC,I,"E")) S @MAGRY@(CT)=ZZ Q
"RTN","MAGGTSYS",64,0)
 . . ;S @MAGRY@(CT)=I_" = ("_$G(MAGOUT(2005,NC,I,"I"))_") = "_$G(MAGOUT(2005,NC,I,"E"))
"RTN","MAGGTSYS",65,0)
 . . Q
"RTN","MAGGTSYS",66,0)
 . Q
"RTN","MAGGTSYS",67,0)
 Q
"RTN","MAGGTU3")
0^43^B34334075
"RTN","MAGGTU3",1,0)
MAGGTU3 ;WOIFO/GEK/SG - Silent calls for Imaging ; 1/22/09 1:50pm
"RTN","MAGGTU3",2,0)
 ;;3.0;IMAGING;**7,8,48,45,20,46,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTU3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU3",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU3",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU3",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU3",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU3",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU3",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU3",17,0)
 ;;
"RTN","MAGGTU3",18,0)
 Q
"RTN","MAGGTU3",19,0)
IMAGEINF(MAGRY,IEN,NOCHK) ;RPC [MAGG IMAGE INFO] Call to return information for 1 image;
"RTN","MAGGTU3",20,0)
 ; IEN   =       Image IEN  ^MAG(2005,IEN
"RTN","MAGGTU3",21,0)
 ; NOCHK =    1|""   if 1 then do not run QA check on this image.
"RTN","MAGGTU3",22,0)
 ; 
"RTN","MAGGTU3",23,0)
 N ERR,MAGFILE,Y,Z,MAGNOCHK
"RTN","MAGGTU3",24,0)
 ;--- Check if the image is deleted
"RTN","MAGGTU3",25,0)
 I $$ISDEL^MAGGI11(IEN,.ERR)  D  Q
"RTN","MAGGTU3",26,0)
 . S Y=$$NODE^MAGGI11(IEN)  S:Y'="" Y=$G(@Y@(2))
"RTN","MAGGTU3",27,0)
 . S MAGRY(0)="0^Image : """_$P(Y,U,4)_""" has been deleted."
"RTN","MAGGTU3",28,0)
 . Q
"RTN","MAGGTU3",29,0)
 ;--- Check for errors. Ignore the problem if there are 2 records
"RTN","MAGGTU3",30,0)
 ;    with the same IEN in files #2005 and #2005.1. After the file
"RTN","MAGGTU3",31,0)
 ;--- #2005.1 is completeley eliminated, ",+ERR'=-43" can be deleted.
"RTN","MAGGTU3",32,0)
 I ERR<0,+ERR'=-43  S MAGRY(0)="0^INVALID Image number "_IEN  Q
"RTN","MAGGTU3",33,0)
 ;--- MAGGTII queries the variable MAGNOCHK to run QA check or not.
"RTN","MAGGTU3",34,0)
 S MAGNOCHK=+$G(NOCHK)
"RTN","MAGGTU3",35,0)
 ;S MAGXX=IEN D INFO^MAGGTII ; this'll give us the  MAGFILE variable
"RTN","MAGGTU3",36,0)
 S MAGXX=IEN,MAGFILE=$$INFO^MAGGAII(MAGXX,"E")
"RTN","MAGGTU3",37,0)
 S Z=$P(^MAG(2005,IEN,0),U,7)
"RTN","MAGGTU3",38,0)
 I '$D(^DPT(Z)) S Z="1^Invalid patient pointer"
"RTN","MAGGTU3",39,0)
 E  S Z=Z_U_$P(^DPT(Z,0),U)
"RTN","MAGGTU3",40,0)
 S MAGRY(0)="1^"_MAGFILE
"RTN","MAGGTU3",41,0)
 S MAGRY(1)=Z ; dfn^name
"RTN","MAGGTU3",42,0)
 Q
"RTN","MAGGTU3",43,0)
USERINF2(MAGRY,MAGWRKID) ;RPC [MAGGUSER2] Return user info.
"RTN","MAGGTU3",44,0)
 ; MAGRY(1) = DUZ ^ FULL NAME  ^ INITIALS
"RTN","MAGGTU3",45,0)
 ; MAGRY(2) = Network UserName ^ PassWord.
"RTN","MAGGTU3",46,0)
 ; MAGRY(3) = MUSE Site number. ( default = 1)
"RTN","MAGGTU3",47,0)
 ; Node 4 is data from IMAGING SITE PARAMATERS File #2006.1 and INSTITUTION File #4
"RTN","MAGGTU3",48,0)
 ; MAGRY(4)= PLACE IEN  ^ SITE CODE ^ DUZ(2) ^ INSTITUTION NAME (.01) ^ $$CONSOLID ^ User's local STATION NUMBER (99)
"RTN","MAGGTU3",49,0)
 ; MAGRY(5) = +<CP Version>|0 ^ Version of CP installed on Server
"RTN","MAGGTU3",50,0)
 ; MAGRY(6) = Warning message if we can't resolve which Site Parameter entry to use.
"RTN","MAGGTU3",51,0)
 ; MAGRY(7) = Warning message  <reserved for future>
"RTN","MAGGTU3",52,0)
 ; MAGRY(8) = 1|0  1 = Production account    0 = Test Account (or couldn't determine) ;Patch 41
"RTN","MAGGTU3",53,0)
 ; MAGRY(9) = Vista Site Service PHYSICAL REFERENCE from Network Location File.
"RTN","MAGGTU3",54,0)
 ; MAGRY(10)=Domain Name
"RTN","MAGGTU3",55,0)
 ; MAGRY(11)=Primary Division IEN
"RTN","MAGGTU3",56,0)
 ; MAGRY(12)=Primary Division STATION NUMBER
"RTN","MAGGTU3",57,0)
 ;  
"RTN","MAGGTU3",58,0)
 N J,K,Y,MAGPLC,MAGWARN,MAGWARN1,VSRV,PHYREF,X ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",59,0)
 S MAGPLC=0
"RTN","MAGGTU3",60,0)
 I $D(DUZ(2)) S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",61,0)
 ;
"RTN","MAGGTU3",62,0)
 ; SET THE PARTITION VARIABLE MAGSYS   i.e.'IGK_Garrett's Desk'
"RTN","MAGGTU3",63,0)
 S MAGSYS=$G(MAGWRKID,"")
"RTN","MAGGTU3",64,0)
 I +$G(DUZ)=0 S MAGRY(0)="0^DUZ Undefined, Null or Zero" Q
"RTN","MAGGTU3",65,0)
 I 'MAGPLC D
"RTN","MAGGTU3",66,0)
 . S MAGWARN="Can't resolve Site Param, DUZ(2): "_$S($D(DUZ(2)):DUZ(2),1:"NULL")_" DUZ: "_DUZ
"RTN","MAGGTU3",67,0)
 . S MAGPLC=$$DUZ2PLC^MAGBAPIP(.MAGWARN1) ; DBI - SEB 9/20/2002
"RTN","MAGGTU3",68,0)
 . Q
"RTN","MAGGTU3",69,0)
 S MAGRY(0)="1^"
"RTN","MAGGTU3",70,0)
 ;          DUZ     FULL NAME                INITIALS
"RTN","MAGGTU3",71,0)
 S MAGRY(1)=DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)
"RTN","MAGGTU3",72,0)
 ; NOW NET STUFF
"RTN","MAGGTU3",73,0)
 I 'MAGPLC Q 
"RTN","MAGGTU3",74,0)
 ; From IMAGING SITE PARAMETERS File
"RTN","MAGGTU3",75,0)
 ;   get the Network UserName and PassWord.
"RTN","MAGGTU3",76,0)
 S MAGRY(2)=$P($G(^MAG(2006.1,MAGPLC,"NET")),U,1,2)
"RTN","MAGGTU3",77,0)
 ;   get the default MUSE Site number.
"RTN","MAGGTU3",78,0)
 S MAGRY(3)=+$P($G(^MAG(2006.1,MAGPLC,"USERPREF")),U,2)
"RTN","MAGGTU3",79,0)
 ;   default to 1 if nothing is entered in Site Parameters File
"RTN","MAGGTU3",80,0)
 I MAGRY(3)=0 S MAGRY(3)=1
"RTN","MAGGTU3",81,0)
 ; This SITEIEN^SITECODE^USER INSTITUTION IEN^INSTITUTION NAME^CONSOLIDATED^User's local STATION NUMBER
"RTN","MAGGTU3",82,0)
 ;  is  used by Display to determine location of Workstation
"RTN","MAGGTU3",83,0)
 ;  and used by Capture to determine the Write Location.
"RTN","MAGGTU3",84,0)
 S MAGRY(4)=MAGPLC_U_$$GET1^DIQ(2006.1,MAGPLC,.09)_U_$G(DUZ(2))_U_$$GET1^DIQ(2006.1,MAGPLC,.01,"E")
"RTN","MAGGTU3",85,0)
 S MAGJOB("PLC")=MAGPLC
"RTN","MAGGTU3",86,0)
 S MAGJOB("PLCODE")=$$GET1^DIQ(2006.1,MAGPLC,.09)
"RTN","MAGGTU3",87,0)
 S MAGRY(4)=MAGRY(4)_U_$$CONSOLID^MAGBAPI_U_$$GET1^DIQ(4,DUZ(2),99,"E")
"RTN","MAGGTU3",88,0)
 ; is CP not installed at this site, the Client will hide options
"RTN","MAGGTU3",89,0)
 ;  related to CP.
"RTN","MAGGTU3",90,0)
 S X=$$VERSION^XPDUTL("CLINICAL PROCEDURES")
"RTN","MAGGTU3",91,0)
 S MAGRY(5)=+X_U_X
"RTN","MAGGTU3",92,0)
 S MAGRY(6)=$G(MAGWARN)
"RTN","MAGGTU3",93,0)
 S MAGRY(7)=$G(MAGWARN1)
"RTN","MAGGTU3",94,0)
 S MAGRY(8)=$S($L($T(PROD^XUPROD)):+$$PROD^XUPROD,1:0)
"RTN","MAGGTU3",95,0)
 S VSRV=$P($G(^MAG(2006.1,MAGPLC,"NET")),"^",5)
"RTN","MAGGTU3",96,0)
 I VSRV I +$P($G(^MAG(2005.2,VSRV,0)),"^",6) S PHYREF=$P($G(^MAG(2005.2,VSRV,0)),"^",2)
"RTN","MAGGTU3",97,0)
 S MAGRY(9)=$G(PHYREF)
"RTN","MAGGTU3",98,0)
 S MAGRY(10)=$$KSP^XUPARAM("WHERE")
"RTN","MAGGTU3",99,0)
 S MAGRY(11)=$P($$SITE^VASITE(),"^")
"RTN","MAGGTU3",100,0)
 S MAGRY(12)=$P($$SITE^VASITE(),"^",3)
"RTN","MAGGTU3",101,0)
 Q
"RTN","MAGGTU3",102,0)
 ;
"RTN","MAGGTU3",103,0)
CATEGORY(MAGRY) ; RPC [MAGGDESCCAT] Call to return Mag Descriptive Categories in array
"RTN","MAGGTU3",104,0)
 ; for listing in a list box.
"RTN","MAGGTU3",105,0)
 N I,K,CT,Y
"RTN","MAGGTU3",106,0)
 S I=0,CT=0
"RTN","MAGGTU3",107,0)
 I '$D(^MAG(2005.81)) D  Q
"RTN","MAGGTU3",108,0)
 . S MAGRY(0)="0^ERROR Mag Descriptive Category File doesn't exist"
"RTN","MAGGTU3",109,0)
 F  S I=$O(^MAG(2005.81,"B",I)) Q:I=""  D
"RTN","MAGGTU3",110,0)
 . ;Next line adds ADMIN, CLIN 3rd piece of the data returned
"RTN","MAGGTU3",111,0)
 . S K=$O(^MAG(2005.81,"B",I,"")),CT=CT+1
"RTN","MAGGTU3",112,0)
 . S MAGRY(CT)=I_U_K_U_$P(^MAG(2005.81,K,0),U,2)
"RTN","MAGGTU3",113,0)
 S MAGRY(0)=CT_"^Categories on file"
"RTN","MAGGTU3",114,0)
 Q
"RTN","MAGGTU3",115,0)
USERKEYS(MAGKEY) ; RPC [MAGGUSERKEYS]
"RTN","MAGGTU3",116,0)
 ; Call to return an array of IMAGING Security Keys
"RTN","MAGGTU3",117,0)
 D USERKEYS^MAGGTU31(.MAGKEY)
"RTN","MAGGTU3",118,0)
 Q
"RTN","MAGGTU3",119,0)
MAIL(MAGRY,MAGFILE,MAGIEN) ;RPC [MAGG OFFLINE IMAGE ACCESSED]
"RTN","MAGGTU3",120,0)
 ;   Called to log an Offline Image accessed.
"RTN","MAGGTU3",121,0)
 ;   ^MAGQUEUE(2006.033,0) = OFFLINE IMAGES
"RTN","MAGGTU3",122,0)
 ;   User must edit 2006.033 by hand to mark images as OFFLINE.
"RTN","MAGGTU3",123,0)
 ;
"RTN","MAGGTU3",124,0)
 N FILEREF,PLATTER,A
"RTN","MAGGTU3",125,0)
 S MAGRY="0^Error : logging access to Off-Line Image"
"RTN","MAGGTU3",126,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU3",127,0)
 S FILEREF=$$UP^XLFSTR($P(MAGFILE,"\",$L(MAGFILE,"\")))
"RTN","MAGGTU3",128,0)
 S PLATTER=$O(^MAGQUEUE(2006.033,"B",FILEREF,""))
"RTN","MAGGTU3",129,0)
 S PLATTER=$P(^MAGQUEUE(2006.033,PLATTER,0),U,2)
"RTN","MAGGTU3",130,0)
 I MAGFILE[".ABS" Q
"RTN","MAGGTU3",131,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGTU3",132,0)
 S XMDUZ=$S($D(DUZ):DUZ,1:.5)
"RTN","MAGGTU3",133,0)
 S XMSUB="Offline Image Request"
"RTN","MAGGTU3",134,0)
 S XMTEXT="A("
"RTN","MAGGTU3",135,0)
 S A(1)="Patient   : "_$P(^DPT($P($G(^MAG(2005,+MAGIEN,0)),U,7),0),U,1)
"RTN","MAGGTU3",136,0)
 S A(2)="FileName  : "_MAGFILE_"  "_MAGIEN
"RTN","MAGGTU3",137,0)
 S A(3)="Desc      : "_$P($G(^MAG(2005,MAGIEN,2)),U,4)
"RTN","MAGGTU3",138,0)
 S A(4)="Procedure : "_$P($G(^MAG(2005,MAGIEN,0)),U,8)
"RTN","MAGGTU3",139,0)
 S A(5)="Platter   : "_PLATTER
"RTN","MAGGTU3",140,0)
 S A(6)="User      : "_$$GET1^DIQ(200,DUZ_",",.01)_"("_$G(DUZ)_")"
"RTN","MAGGTU3",141,0)
 S XMY("G.OFFLINE IMAGE TRACKERS")="" D ^XMD
"RTN","MAGGTU3",142,0)
 S MAGRY="1^Message sent :  Offline Image Accessed"
"RTN","MAGGTU3",143,0)
 Q
"RTN","MAGGTU3",144,0)
LOGERROR(MAGRY,TEXT) ;RPC [MAGG LOG ERROR TEXT]
"RTN","MAGGTU3",145,0)
 ; Call to stuff error information from Delphi app into the Session file.
"RTN","MAGGTU3",146,0)
 Q:($P($G(MAGJOB("VERSION")),".",1,2))<"3.0"
"RTN","MAGGTU3",147,0)
 D LOGERR^MAGGTERR("---- New Error ----")
"RTN","MAGGTU3",148,0)
 S I="" F  S I=$O(TEXT(I)) Q:I=""  D LOGERR^MAGGTERR(TEXT(I))
"RTN","MAGGTU3",149,0)
 S MAGRY="1^Error text saved to Session file"
"RTN","MAGGTU3",150,0)
 Q
"RTN","MAGGTU3",151,0)
RSLVABS(MAGIEN,FILENAME) ;Resolve Abstract into the Default Bitmap 
"RTN","MAGGTU3",152,0)
 ; Return the default bitmap, If the image file extension resolves into a default bitmap
"RTN","MAGGTU3",153,0)
 ; MAGIEN        : Image internal entry number
"RTN","MAGGTU3",154,0)
 ; FILENAME      : ""  or Relative Path and Default Bitmap. ie ('.\BMP\magavi.bmp')
"RTN","MAGGTU3",155,0)
 N FTIEN,EXT ; 
"RTN","MAGGTU3",156,0)
 S FILENAME=""
"RTN","MAGGTU3",157,0)
 I '$D(^MAG(2005.021)) Q  ; IMAGE FILE TYPES doesn't exist on this system.
"RTN","MAGGTU3",158,0)
 S EXT=$P($P(^MAG(2005,MAGIEN,0),"^",2),".",2) ; image file extension   JPG, TGA, etc.
"RTN","MAGGTU3",159,0)
 Q:EXT=""  ;
"RTN","MAGGTU3",160,0)
 S FTIEN=$O(^MAG(2005.021,"B",EXT,""))
"RTN","MAGGTU3",161,0)
 Q:'FTIEN  ; No extension in IMAGE FILE TYPES file.
"RTN","MAGGTU3",162,0)
 ; stop dependency on "c:\program files"
"RTN","MAGGTU3",163,0)
 I '+$P(^MAG(2005.021,FTIEN,0),"^",5) S FILENAME=".\BMP\"_$P(^MAG(2005.021,FTIEN,0),"^",4)
"RTN","MAGGTU3",164,0)
 Q
"RTN","MAGGTU3",165,0)
GETINFO(MAGRY,IEN) ; RPC [MAG4 GET IMAGE INFO]
"RTN","MAGGTU3",166,0)
 ; Call (3.0p8) to get information on 1 image 
"RTN","MAGGTU3",167,0)
 ; and Display in the Image Information Window
"RTN","MAGGTU3",168,0)
 D GETINFO^MAGGTU31(.MAGRY,IEN)
"RTN","MAGGTU3",169,0)
 Q
"RTN","MAGGTU31")
0^28^B41847617
"RTN","MAGGTU31",1,0)
MAGGTU31 ;WOIFO/GEK/SG - Silent calls for Imaging ; 1/16/09 4:44pm
"RTN","MAGGTU31",2,0)
 ;;3.0;IMAGING;**46,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTU31",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU31",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU31",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU31",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU31",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU31",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU31",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU31",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU31",11,0)
 ;; |                                                               |
"RTN","MAGGTU31",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU31",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU31",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU31",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU31",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU31",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU31",18,0)
 ;;
"RTN","MAGGTU31",19,0)
 Q
"RTN","MAGGTU31",20,0)
ATTSTAT(IEN) ; Return a sentence saying if the Image was attached
"RTN","MAGGTU31",21,0)
 ; to the TIU NOte before or after the Note was signed.
"RTN","MAGGTU31",22,0)
 ; was signed.
"RTN","MAGGTU31",23,0)
 N SIGNDT,NOTE,MARR,AMMEND,N2,MAGDT,NC,CLOSDT,X
"RTN","MAGGTU31",24,0)
 S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGGTU31",25,0)
 I $P(N2,"^",6)'=8925 Q ""
"RTN","MAGGTU31",26,0)
 S MAGDT=$S($P(N2,"^",11):$P(N2,"^",11),1:$P(N2,"^",1))
"RTN","MAGGTU31",27,0)
 S NOTE=$P(N2,"^",7)
"RTN","MAGGTU31",28,0)
 S NC=NOTE_","
"RTN","MAGGTU31",29,0)
 D GETS^DIQ(8925,NOTE,".01;.06;1501;1606","I","MARR")
"RTN","MAGGTU31",30,0)
 I $D(DIERR) Q "Error: Note-"_NOTE_" : "_$G(^TMP("DIERR",$J,1,"TEXT",1))
"RTN","MAGGTU31",31,0)
 I (MARR(8925,NC,".01","I")=81)!(MARR(8925,NC,".06","I")>0) Q "Image is attached to an Addendum"
"RTN","MAGGTU31",32,0)
 S SIGNDT=MARR(8925,NC,"1501","I")
"RTN","MAGGTU31",33,0)
 S CLOSDT=MARR(8925,NC,"1606","I")
"RTN","MAGGTU31",34,0)
 I CLOSDT]"" D  Q X
"RTN","MAGGTU31",35,0)
 . I $P(CLOSDT,".",2)="" S MAGDT=$P(MAGDT,".",1) I MAGDT=CLOSDT S X="Image was attached Same Day as Note was Electronically Filed." Q
"RTN","MAGGTU31",36,0)
 . I MAGDT>CLOSDT S X="Image was attached After Note was Electronically Filed." Q
"RTN","MAGGTU31",37,0)
 . S X="Image was attached Before Note was Electronically Filed." Q
"RTN","MAGGTU31",38,0)
 . Q
"RTN","MAGGTU31",39,0)
 I SIGNDT="" Q "Image is attached to an UnSigned Note."
"RTN","MAGGTU31",40,0)
 I $P(SIGNDT,".",2)="" S MAGDT=$P(MAGDT,".",1) I MAGDT=SIGNDT Q "Image was attached Same Day as Note was Signed."
"RTN","MAGGTU31",41,0)
 I MAGDT>SIGNDT Q "Image was attached After the Note was Signed."
"RTN","MAGGTU31",42,0)
 Q "Image was attached Before the Note was Signed."
"RTN","MAGGTU31",43,0)
USERKEYS(MAGK) ; RPC [MAGGUSERKEYS]  (called from MAGGTU3)
"RTN","MAGGTU31",44,0)
 N Y
"RTN","MAGGTU31",45,0)
 N MAGKS ; list of keys to send to XUS KEY CHECK
"RTN","MAGGTU31",46,0)
 N MAGKG ; list returned from XUS KEY CHECK
"RTN","MAGGTU31",47,0)
 N I,J,MAGMED,MAGKEY,MAGPLC
"RTN","MAGGTU31",48,0)
 K MAGK
"RTN","MAGGTU31",49,0)
 S MAGPLC=+$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU31",50,0)
 S MAGKEY=+$P($G(^MAG(2006.1,MAGPLC,"KEYS")),U)
"RTN","MAGGTU31",51,0)
 I 'MAGKEY S MAGK(0)="CAPTURE KEYS OFF"
"RTN","MAGGTU31",52,0)
 E  S MAGK(0)="CAPTURE KEYS ON"
"RTN","MAGGTU31",53,0)
 N X S X="MAG",I=0
"RTN","MAGGTU31",54,0)
 F  S X=$O(^XUSEC(X)) Q:$E(X,1,3)'="MAG"  D
"RTN","MAGGTU31",55,0)
 . S I=I+1,MAGKS(I)=X
"RTN","MAGGTU31",56,0)
 D OWNSKEY^XUSRB(.MAGKG,.MAGKS)
"RTN","MAGGTU31",57,0)
 S I=0,J=0,MAGMED=0
"RTN","MAGGTU31",58,0)
 F  S I=$O(MAGKG(I)) Q:I=""  D
"RTN","MAGGTU31",59,0)
 . Q:MAGKG(I)=0
"RTN","MAGGTU31",60,0)
 . S J=J+1,MAGK(J)=MAGKS(I)
"RTN","MAGGTU31",61,0)
 . I MAGKS(I)["MAGCAP MED" S MAGMED=1
"RTN","MAGGTU31",62,0)
 I MAGMED S J=J+1,MAGK(J)="MAGCAP MED"
"RTN","MAGGTU31",63,0)
 Q
"RTN","MAGGTU31",64,0)
GETINFO(MAGRY,IEN) ; RPC [MAG4 GET IMAGE INFO]Called from MAGGTU3
"RTN","MAGGTU31",65,0)
 ; Call (3.0p8) to get information on 1 image 
"RTN","MAGGTU31",66,0)
 ; and Display in the Image Information Window
"RTN","MAGGTU31",67,0)
 N Y,J,JI,I,CT,IENC,FLAGS,SNGRP,Z,M40,T,QACHK,OBJTYP,VAL,LBL
"RTN","MAGGTU31",68,0)
 S I=0,CT=0
"RTN","MAGGTU31",69,0)
 S MAGRY(CT)="Image ID#:      "_IEN
"RTN","MAGGTU31",70,0)
 I $$ISDEL^MAGGI11(IEN)  D  Q
"RTN","MAGGTU31",71,0)
 . N MAGFILE
"RTN","MAGGTU31",72,0)
 . S MAGFILE=$$FILE^MAGGI11(IEN)  S:MAGFILE'>0 MAGFILE=2005
"RTN","MAGGTU31",73,0)
 . S CT=CT+1,MAGRY(CT)="    STATUS:  "_"HAS BEEN DELETED. !!"
"RTN","MAGGTU31",74,0)
 . S CT=CT+1,MAGRY(CT)="Deleted By: "_$$GET1^DIQ(MAGFILE,IEN,30,"E")
"RTN","MAGGTU31",75,0)
 . S CT=CT+1,MAGRY(CT)="    Reason: "_$$GET1^DIQ(MAGFILE,IEN,30.2,"E")
"RTN","MAGGTU31",76,0)
 . S CT=CT+1,MAGRY(CT)="      Date: "_$$GET1^DIQ(MAGFILE,IEN,30.1,"E")
"RTN","MAGGTU31",77,0)
 . Q
"RTN","MAGGTU31",78,0)
 S M40=$G(^MAG(2005,IEN,40)),T=$P(M40,"^",3)
"RTN","MAGGTU31",79,0)
 S Z=$P($G(^MAG(2005,IEN,0)),"^",10) I Z D
"RTN","MAGGTU31",80,0)
 . S CT=CT+1,MAGRY(CT)=" is in Group#: "_Z_"  ("_+$P(^MAG(2005,Z,1,0),"^",4)_" images)"
"RTN","MAGGTU31",81,0)
 . D CHK^MAGGSQI(.QACHK,Z) Q:QACHK(0) 
"RTN","MAGGTU31",82,0)
 . S CT=CT+1,MAGRY(CT)=" QA Warning - Group#: "_Z_" "_$P(QACHK(0),"^",2)
"RTN","MAGGTU31",83,0)
 . Q
"RTN","MAGGTU31",84,0)
 S OBJTYP=$P(^MAG(2005,IEN,0),"^",6)
"RTN","MAGGTU31",85,0)
 S SNGRP="FLDS"
"RTN","MAGGTU31",86,0)
 I (+$O(^MAG(2005,IEN,1,0)))!(OBJTYP=11)!(OBJTYP=16) D
"RTN","MAGGTU31",87,0)
 . S CT=CT+1,MAGRY(CT)=$P($G(^MAG(2005,IEN,40)),"^",1)_" Group of "_+$P($G(^MAG(2005,IEN,1,0)),U,4)
"RTN","MAGGTU31",88,0)
 . S SNGRP="FLDG"
"RTN","MAGGTU31",89,0)
 . Q
"RTN","MAGGTU31",90,0)
 K QACHK
"RTN","MAGGTU31",91,0)
 D CHK^MAGGSQI(.QACHK,IEN) I 'QACHK(0) D
"RTN","MAGGTU31",92,0)
 . S CT=CT+1,MAGRY(CT)=" QA Warning - Image#: "_IEN_" "_$P(QACHK(0),"^",2)
"RTN","MAGGTU31",93,0)
 N MAGOUT,MAGERR,MAGVAL,PKG
"RTN","MAGGTU31",94,0)
 S IENC=IEN_","
"RTN","MAGGTU31",95,0)
 S FLAGS="EN"
"RTN","MAGGTU31",96,0)
 S I=-1
"RTN","MAGGTU31",97,0)
 S PKG=""
"RTN","MAGGTU31",98,0)
 F  S I=I+1,Z=$T(@SNGRP+I) Q:$P(Z,";",3)="end"  D
"RTN","MAGGTU31",99,0)
 . S J=$P(Z,";",4),JI=J_";"
"RTN","MAGGTU31",100,0)
 . K MAGOUT
"RTN","MAGGTU31",101,0)
 . S CT=CT+1,MAGRY(CT)=$P(Z,";",3)
"RTN","MAGGTU31",102,0)
 . I J=41 D  Q  ; Need to compute the Class.  Class field in Image File is wrong.
"RTN","MAGGTU31",103,0)
 . . S MAGVAL=$S('T:"",'$D(^MAG(2005.83,T,0)):"",1:$P(^MAG(2005.82,$P(^MAG(2005.83,T,0),"^",2),0),"^",1))
"RTN","MAGGTU31",104,0)
 . . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU31",105,0)
 . . Q
"RTN","MAGGTU31",106,0)
 . D GETS^DIQ(2005,IEN,JI,FLAGS,"MAGOUT","MAGERR")
"RTN","MAGGTU31",107,0)
 . ; Get Extension from FileRef
"RTN","MAGGTU31",108,0)
 . I J=1 S MAGVAL=$P($G(MAGOUT(2005,IENC,J,"E")),".",2)
"RTN","MAGGTU31",109,0)
 . E  S MAGVAL=$G(MAGOUT(2005,IENC,J,"E"))
"RTN","MAGGTU31",110,0)
 . S MAGVAL=$TR(MAGVAL,"&","+")
"RTN","MAGGTU31",111,0)
 . I J=40 S PKG=MAGVAL
"RTN","MAGGTU31",112,0)
 . I ((J>=50)&(J<=54)) D  Q
"RTN","MAGGTU31",113,0)
 . . I PKG'="LAB" K MAGRY(CT) Q
"RTN","MAGGTU31",114,0)
 . . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU31",115,0)
 . . Q
"RTN","MAGGTU31",116,0)
 . S MAGRY(CT)=MAGRY(CT)_" "_MAGVAL
"RTN","MAGGTU31",117,0)
 ; Compare Parent Association Date with Date/Time Note Signed.
"RTN","MAGGTU31",118,0)
 I $P(^MAG(2005,IEN,0),"^",10) S IEN=$P(^MAG(2005,IEN,0),"^",10)
"RTN","MAGGTU31",119,0)
 I $P(^MAG(2005,IEN,2),"^",6)=8925 S CT=CT+1,MAGRY(CT)=$$ATTSTAT^MAGGTU31(IEN)
"RTN","MAGGTU31",120,0)
 ;
"RTN","MAGGTU31",121,0)
 I (OBJTYP=11),($P($G(^MAG(2005,IEN,100)),"^",6)="") D
"RTN","MAGGTU31",122,0)
 . S X=$O(^MAG(2005,IEN,1,0))
"RTN","MAGGTU31",123,0)
 . S IEN=+$G(^MAG(2005,IEN,1,X,0))
"RTN","MAGGTU31",124,0)
 . Q
"RTN","MAGGTU31",125,0)
 I $P($G(^MAG(2005,IEN,100)),"^",6)]"" D
"RTN","MAGGTU31",126,0)
 . I OBJTYP=11 D  ; If a Group, get Object Type of First Child
"RTN","MAGGTU31",127,0)
 . . S Z=$O(^MAG(2005,IEN,1,0))
"RTN","MAGGTU31",128,0)
 . . I 'Z Q
"RTN","MAGGTU31",129,0)
 . . S Z=+$G(^MAG(2005,IEN,1,Z,0))
"RTN","MAGGTU31",130,0)
 . . S OBJTYP=+$P($G(^MAG(2005,Z,0)),"^",6) ; Object of First Child
"RTN","MAGGTU31",131,0)
 . . Q
"RTN","MAGGTU31",132,0)
 . S OBJTYP=","_OBJTYP_","
"RTN","MAGGTU31",133,0)
 . S LBL="",VAL=""
"RTN","MAGGTU31",134,0)
 . I ",3,9,10,12,100,"[OBJTYP S LBL="Image Creation Date: "           ; "Acquisition Date";
"RTN","MAGGTU31",135,0)
 . I ",15,101,102,103,104,105,"[OBJTYP S LBL="Document Creation Date: "
"RTN","MAGGTU31",136,0)
 . I LBL="" S LBL="Image Creation Date: "
"RTN","MAGGTU31",137,0)
 . S VAL=$$GET1^DIQ(2005,IEN,110,"E") S:(VAL="") VAL="N/A"
"RTN","MAGGTU31",138,0)
 . S CT=CT+1,MAGRY(CT)=LBL_VAL
"RTN","MAGGTU31",139,0)
 . Q
"RTN","MAGGTU31",140,0)
 I $$GET1^DIQ(2005,IEN,112,"I") D  Q
"RTN","MAGGTU31",141,0)
 . S CT=CT+1,MAGRY(CT)="Controlled Image :  "_$$GET1^DIQ(2005,IEN,112,"E")
"RTN","MAGGTU31",142,0)
 . ;S CT=CT+1,MAGRY(CT)="Controlled By    : "_$$GET1^DIQ(2005,IEN,112.2,"E")
"RTN","MAGGTU31",143,0)
 . ;S CT=CT+1,MAGRY(CT)="Controlled Date  : "_$$GET1^DIQ(2005,IEN,112.1,"E")
"RTN","MAGGTU31",144,0)
 . Q
"RTN","MAGGTU31",145,0)
 Q
"RTN","MAGGTU31",146,0)
 ;
"RTN","MAGGTU31",147,0)
FLDS ;;Format:       ;3;;
"RTN","MAGGTU31",148,0)
 ;;Extension:    ;1;;
"RTN","MAGGTU31",149,0)
FLDG ;;Patient:      ;5;;
"RTN","MAGGTU31",150,0)
 ;;Desc:         ;10;;
"RTN","MAGGTU31",151,0)
 ;;Procedure:    ;6;;
"RTN","MAGGTU31",152,0)
 ;;     Date:    ;15;;
"RTN","MAGGTU31",153,0)
 ;;Class:        ;41;;
"RTN","MAGGTU31",154,0)
 ;;Package:      ;40;;
"RTN","MAGGTU31",155,0)
 ;;Type:         ;42;;
"RTN","MAGGTU31",156,0)
 ;;Proc/Event:   ;43;;
"RTN","MAGGTU31",157,0)
 ;;Spec/SubSpec: ;44;;
"RTN","MAGGTU31",158,0)
 ;;Origin:       ;45;;
"RTN","MAGGTU31",159,0)
 ;;Accession #   ;50;;
"RTN","MAGGTU31",160,0)
 ;;Specimen Desc ;51;;
"RTN","MAGGTU31",161,0)
 ;;Specimen#     ;52;;
"RTN","MAGGTU31",162,0)
 ;;Stain         ;53;;
"RTN","MAGGTU31",163,0)
 ;;Objective     ;54;;
"RTN","MAGGTU31",164,0)
 ;;Captured on:  ;7;;
"RTN","MAGGTU31",165,0)
 ;;         by:  ;8;;
"RTN","MAGGTU31",166,0)
 ;;Status:       ;113;;
"RTN","MAGGTU31",167,0)
 ;;Reason:       ;113.3;;
"RTN","MAGGTU31",168,0)
 ;;end;;
"RTN","MAGGTU4")
0^14^B53401008
"RTN","MAGGTU4",1,0)
MAGGTU4 ;WOIFO/GEK/SG - VERSION CHECKS FOR IMAGING CLIENTS ; 2/2/09 10:49am
"RTN","MAGGTU4",2,0)
 ;;3.0;IMAGING;**8,48,63,45,46,59,96,95,72,93**;Dec 02, 2009;Build 163
"RTN","MAGGTU4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4",17,0)
 ;;
"RTN","MAGGTU4",18,0)
 Q
"RTN","MAGGTU4",19,0)
 ;
"RTN","MAGGTU4",20,0)
 ;***** SETS ABSTRACT AND/OR JUKEBOX QUEUES
"RTN","MAGGTU4",21,0)
 ; RPC: MAG ABSJB
"RTN","MAGGTU4",22,0)
 ;
"RTN","MAGGTU4",23,0)
 ; .MAGRES       Reference to a local variable where the result is
"RTN","MAGGTU4",24,0)
 ;               returned to.
"RTN","MAGGTU4",25,0)
 ;
"RTN","MAGGTU4",26,0)
 ; .MAGIN        IENs of images to be processed
"RTN","MAGGTU4",27,0)
 ;                 ^01: IEN of the image that needs an abstract
"RTN","MAGGTU4",28,0)
 ;                      created
"RTN","MAGGTU4",29,0)
 ;                 ^02: IEN of the image that needs to be copied
"RTN","MAGGTU4",30,0)
 ;                      to the jukebox
"RTN","MAGGTU4",31,0)
 ;
"RTN","MAGGTU4",32,0)
 ; Return Values
"RTN","MAGGTU4",33,0)
 ; =============
"RTN","MAGGTU4",34,0)
 ;
"RTN","MAGGTU4",35,0)
 ; Result code and corresponding message are returned in the MAGRES
"RTN","MAGGTU4",36,0)
 ; parameter:
"RTN","MAGGTU4",37,0)
 ;
"RTN","MAGGTU4",38,0)
 ; MAGRES                Result descriptor
"RTN","MAGGTU4",39,0)
 ;                         ^01: Result code:
"RTN","MAGGTU4",40,0)
 ;                                0  Error
"RTN","MAGGTU4",41,0)
 ;                                1  Success
"RTN","MAGGTU4",42,0)
 ;                         ^02: Message
"RTN","MAGGTU4",43,0)
 ;
"RTN","MAGGTU4",44,0)
ABSJB(MAGRES,MAGIN) ;RPC [MAG ABSJB]
"RTN","MAGGTU4",45,0)
 D ABSJB^MAGGTU71(.MAGRES,.MAGIN)
"RTN","MAGGTU4",46,0)
 Q
"RTN","MAGGTU4",47,0)
 ;
"RTN","MAGGTU4",48,0)
 ;***** CLIENT/SERVER VERSION CHECKS
"RTN","MAGGTU4",49,0)
 ; RPC: MAG4 VERSION CHECK
"RTN","MAGGTU4",50,0)
 ;
"RTN","MAGGTU4",51,0)
 ; .MAGRES       Reference to a local array where results are
"RTN","MAGGTU4",52,0)
 ;               returned to.
"RTN","MAGGTU4",53,0)
 ;
"RTN","MAGGTU4",54,0)
 ; CLVER         Client application descriptor
"RTN","MAGGTU4",55,0)
 ;                 |01: Version (Major.Minor.Patch.Build)
"RTN","MAGGTU4",56,0)
 ;                 |02: empty or "RIV" for remote image view clients
"RTN","MAGGTU4",57,0)
 ;                 |03: Client name ("CAPTURE", "CLUTILS", "DISPLAY",
"RTN","MAGGTU4",58,0)
 ;                      "TELEREADER", or "VISTARAD")
"RTN","MAGGTU4",59,0)
 ;
"RTN","MAGGTU4",60,0)
 ;               For example, the Clinical Display client Version
"RTN","MAGGTU4",61,0)
 ;               3.0 Patch 8 Build (test version) 21 will pass
"RTN","MAGGTU4",62,0)
 ;               "3.0.8.21||DISPLAY" as the value of this parameter.
"RTN","MAGGTU4",63,0)
 ;
"RTN","MAGGTU4",64,0)
 ; Input Variables
"RTN","MAGGTU4",65,0)
 ; ===============
"RTN","MAGGTU4",66,0)
 ;   MAGJOB
"RTN","MAGGTU4",67,0)
 ;
"RTN","MAGGTU4",68,0)
 ; Output Variables
"RTN","MAGGTU4",69,0)
 ; ================
"RTN","MAGGTU4",70,0)
 ;   MAGJOB
"RTN","MAGGTU4",71,0)
 ;
"RTN","MAGGTU4",72,0)
 ; Return Values
"RTN","MAGGTU4",73,0)
 ; =============
"RTN","MAGGTU4",74,0)
 ;
"RTN","MAGGTU4",75,0)
 ; Result code and message are returned into the MAGRES(0).
"RTN","MAGGTU4",76,0)
 ; The subsequent nodes may contain additional lines of the
"RTN","MAGGTU4",77,0)
 ; message text.
"RTN","MAGGTU4",78,0)
 ;
"RTN","MAGGTU4",79,0)
 ; MAGRES(0)             Result descriptor
"RTN","MAGGTU4",80,0)
 ;                         ^01: Result code:
"RTN","MAGGTU4",81,0)
 ;                                0  The client will display the
"RTN","MAGGTU4",82,0)
 ;                                   message and continue.
"RTN","MAGGTU4",83,0)
 ;                                1  The client will continue without
"RTN","MAGGTU4",84,0)
 ;                                   displaying any message.
"RTN","MAGGTU4",85,0)
 ;                                2  The client will display the
"RTN","MAGGTU4",86,0)
 ;                                   message and then terminate.
"RTN","MAGGTU4",87,0)
 ;                         ^02: Message
"RTN","MAGGTU4",88,0)
 ;
"RTN","MAGGTU4",89,0)
 ; MAGRES(i)             Additional line of the message text
"RTN","MAGGTU4",90,0)
 ;
"RTN","MAGGTU4",91,0)
 ; Notes
"RTN","MAGGTU4",92,0)
 ; =====
"RTN","MAGGTU4",93,0)
 ;
"RTN","MAGGTU4",94,0)
 ; Ver 2.5P9 (2.5.24.1) is the first GUI client (Delphi) that makes
"RTN","MAGGTU4",95,0)
 ; this call.
"RTN","MAGGTU4",96,0)
 ;
"RTN","MAGGTU4",97,0)
CHKVER(MAGRES,CLVER) ;RPC [MAG4 VERSION CHECK]
"RTN","MAGGTU4",98,0)
 N MAGVCD        ; Version control data
"RTN","MAGGTU4",99,0)
 ;
"RTN","MAGGTU4",100,0)
 N CLNAME,CVRC,RC
"RTN","MAGGTU4",101,0)
 S (CVRC,RC)=0
"RTN","MAGGTU4",102,0)
 D
"RTN","MAGGTU4",103,0)
 . N I,N,TMP
"RTN","MAGGTU4",104,0)
 . ;--- Parse the client application descriptor
"RTN","MAGGTU4",105,0)
 . S N=$L(CLVER,"|"),CLNAME=$P(CLVER,"|",3)
"RTN","MAGGTU4",106,0)
 . F I=2:1:N  S TMP=$P(CLVER,"|",I)  S:TMP'="" MAGJOB(TMP)=1
"RTN","MAGGTU4",107,0)
 . S CLVER=$P(CLVER,"|")
"RTN","MAGGTU4",108,0)
 . I CLNAME=""  D  Q:RC<0
"RTN","MAGGTU4",109,0)
 . . ;--- Only the client version was sent before the MAG*3.0*59
"RTN","MAGGTU4",110,0)
 . . I CLVER'["|"  S CLNAME="DISPLAY"  Q
"RTN","MAGGTU4",111,0)
 . . ;--- Currently, the client application name must be provided
"RTN","MAGGTU4",112,0)
 . . S RC=$$ERROR^MAGUERR(-24,,CLNAME)
"RTN","MAGGTU4",113,0)
 . . Q
"RTN","MAGGTU4",114,0)
 . ;
"RTN","MAGGTU4",115,0)
 . ;--- Check the client version
"RTN","MAGGTU4",116,0)
 . S CVRC=$$CHKVER1^MAGGTU41(.MAGVCD,CLNAME,.CLVER)
"RTN","MAGGTU4",117,0)
 . I CVRC<0  S RC=CVRC  Q
"RTN","MAGGTU4",118,0)
 . ;
"RTN","MAGGTU4",119,0)
 . ;--- Load and format the message
"RTN","MAGGTU4",120,0)
 . S RC=$$MESSAGE(CLNAME,CLVER,CVRC)
"RTN","MAGGTU4",121,0)
 . Q
"RTN","MAGGTU4",122,0)
 ;---
"RTN","MAGGTU4",123,0)
 I RC<0  D ERROR^MAGGTU41(.MAGRES,RC)  Q
"RTN","MAGGTU4",124,0)
 D WARNING^MAGGTU41(.MAGRES,CLNAME,CLVER,CVRC)
"RTN","MAGGTU4",125,0)
 Q
"RTN","MAGGTU4",126,0)
 ;
"RTN","MAGGTU4",127,0)
 ;+++++ LOADS AND FORMATS THE MESSAGE IN THE MAGRES ARRAY
"RTN","MAGGTU4",128,0)
 ;
"RTN","MAGGTU4",129,0)
 ; CLNAME        Client name
"RTN","MAGGTU4",130,0)
 ;
"RTN","MAGGTU4",131,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGGTU4",132,0)
 ;
"RTN","MAGGTU4",133,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGGTU4",134,0)
 ;
"RTN","MAGGTU4",135,0)
 ; Input Variables
"RTN","MAGGTU4",136,0)
 ; ===============
"RTN","MAGGTU4",137,0)
 ;   DUZ, MAGVCD
"RTN","MAGGTU4",138,0)
 ;
"RTN","MAGGTU4",139,0)
 ; Output Variables
"RTN","MAGGTU4",140,0)
 ; ================
"RTN","MAGGTU4",141,0)
 ;   MAGRES
"RTN","MAGGTU4",142,0)
 ;
"RTN","MAGGTU4",143,0)
 ; Return Values
"RTN","MAGGTU4",144,0)
 ; =============
"RTN","MAGGTU4",145,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU4",146,0)
 ;            0  The client will display a warning and continue
"RTN","MAGGTU4",147,0)
 ;            1  The client will continue
"RTN","MAGGTU4",148,0)
 ;            2  The client will display a warning and terminate
"RTN","MAGGTU4",149,0)
 ;
"RTN","MAGGTU4",150,0)
MESSAGE(CLNAME,CLVER,CVRC) ;
"RTN","MAGGTU4",151,0)
 N BETA,CV,DLG,DLG1,MAGPRMS,PLC,RC,SVSTAT,TMP
"RTN","MAGGTU4",152,0)
 K MAGRES
"RTN","MAGGTU4",153,0)
 ;
"RTN","MAGGTU4",154,0)
 ;--- If this is a remote connection, allow it.
"RTN","MAGGTU4",155,0)
 I $D(MAGJOB("RIV"))  D  Q 1
"RTN","MAGGTU4",156,0)
 . S MAGRES(0)="1^"_$$EZBLD^DIALOG(20050005.013)
"RTN","MAGGTU4",157,0)
 . Q
"RTN","MAGGTU4",158,0)
 ;
"RTN","MAGGTU4",159,0)
 ;--- Get IEN of the Imaging site parameters
"RTN","MAGGTU4",160,0)
 Q:'$G(DUZ(2)) $$ERROR^MAGUERR(-26,,"DUZ(2)")
"RTN","MAGGTU4",161,0)
 S PLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGGTU4",162,0)
 I 'PLC  D  Q $$ERROR^MAGUERR(-27,,TMP)
"RTN","MAGGTU4",163,0)
 . S TMP=$P($G(^DIC(4,DUZ(2),0)),U)_" ["_DUZ(2)_"]"
"RTN","MAGGTU4",164,0)
 . Q
"RTN","MAGGTU4",165,0)
 ;
"RTN","MAGGTU4",166,0)
 ;--- Quit if the site has VERSION CHECKING=0 (OFF) in
"RTN","MAGGTU4",167,0)
 ;--- the IMAGING SITE PARAMETERS file (#2006.1)
"RTN","MAGGTU4",168,0)
 I '$$VERCHKON(PLC)  D  Q 1
"RTN","MAGGTU4",169,0)
 . S MAGRES(0)="1^"_$$EZBLD^DIALOG(20050005.014)
"RTN","MAGGTU4",170,0)
 . Q
"RTN","MAGGTU4",171,0)
 ;
"RTN","MAGGTU4",172,0)
 ;--- Is this server version alpha/beta or released?
"RTN","MAGGTU4",173,0)
 D VERSTAT(.SVSTAT,MAGVCD(CLNAME,"SV"))
"RTN","MAGGTU4",174,0)
 I '$G(SVSTAT)  S MAGRES(0)="2^"_$P(SVSTAT,U,2)  Q 2
"RTN","MAGGTU4",175,0)
 S BETA=(+SVSTAT=2)
"RTN","MAGGTU4",176,0)
 ;
"RTN","MAGGTU4",177,0)
 ;--- Initilize message parameters
"RTN","MAGGTU4",178,0)
 S (MAGPRMS("CV"),CV)=$P(CLVER,".",1,3)  ; Client Major.Minor.Patch
"RTN","MAGGTU4",179,0)
 S MAGPRMS("CP")=$P(CLVER,".",3)         ; Client patch number
"RTN","MAGGTU4",180,0)
 S MAGPRMS("CST")=$G(MAGVCD(CLNAME,"ST",CV)) ; Supported client build
"RTN","MAGGTU4",181,0)
 S MAGPRMS("CT")=$P(CLVER,".",4)         ; Client build number
"RTN","MAGGTU4",182,0)
 S MAGPRMS("ST")=MAGVCD(CLNAME,"ST")     ; Server build number
"RTN","MAGGTU4",183,0)
 S MAGPRMS("SV")=MAGVCD(CLNAME,"SV")     ; Server Major.Minor.Patch
"RTN","MAGGTU4",184,0)
 S MAGPRMS("SVSTAT")=$P(SVSTAT,U,2)      ; Server version status
"RTN","MAGGTU4",185,0)
 ;
"RTN","MAGGTU4",186,0)
 S DLG=20050005.001,RC=1
"RTN","MAGGTU4",187,0)
 D:CVRC
"RTN","MAGGTU4",188,0)
 . ;--- Latest version but old build (T-version)
"RTN","MAGGTU4",189,0)
 . I CVRC=1  D  Q
"RTN","MAGGTU4",190,0)
 . . S RC=0,DLG=$S(BETA:20050005.008,1:20050005.007)
"RTN","MAGGTU4",191,0)
 . . Q
"RTN","MAGGTU4",192,0)
 . ;--- Supported version
"RTN","MAGGTU4",193,0)
 . I CVRC=2  D  Q
"RTN","MAGGTU4",194,0)
 . . S RC=$S(BETA:1,1:0),DLG=$S(BETA:20050005.012,1:20050005.011)
"RTN","MAGGTU4",195,0)
 . . S:$P(CV,".")=2 DLG1=20050005.005
"RTN","MAGGTU4",196,0)
 . . Q
"RTN","MAGGTU4",197,0)
 . ;--- Supported version but old build (T-version)
"RTN","MAGGTU4",198,0)
 . I CVRC=3  D  Q
"RTN","MAGGTU4",199,0)
 . . S RC=$S(BETA:0,1:2),DLG=$S(BETA:20050005.01,1:20050005.009)
"RTN","MAGGTU4",200,0)
 . . Q
"RTN","MAGGTU4",201,0)
 . ;--- Client is not supported
"RTN","MAGGTU4",202,0)
 . I CVRC=4  D  Q
"RTN","MAGGTU4",203,0)
 . . S RC=$S(BETA:0,1:2),DLG=$S(BETA:20050005.004,1:20050005.003)
"RTN","MAGGTU4",204,0)
 . . S:$P(CV,".")=2 DLG1=20050005.006
"RTN","MAGGTU4",205,0)
 . . Q
"RTN","MAGGTU4",206,0)
 ;
"RTN","MAGGTU4",207,0)
 ;--- Load and format the message
"RTN","MAGGTU4",208,0)
 D BLD^DIALOG(DLG,.MAGPRMS,,"MAGRES")
"RTN","MAGGTU4",209,0)
 S MAGRES(0)=RC_U_$G(MAGRES(1))  K MAGRES(1)
"RTN","MAGGTU4",210,0)
 D:$G(DLG1) BLD^DIALOG(DLG1,,,"MAGRES")
"RTN","MAGGTU4",211,0)
 ;---
"RTN","MAGGTU4",212,0)
 Q RC
"RTN","MAGGTU4",213,0)
 ;
"RTN","MAGGTU4",214,0)
 ;+++++ RETURNS STATUS OF THE VERSION CHECKING FOR THE SITE
"RTN","MAGGTU4",215,0)
 ;
"RTN","MAGGTU4",216,0)
 ; PLC           IEN of the Imaging site parameters (file #2006.1)
"RTN","MAGGTU4",217,0)
 ;
"RTN","MAGGTU4",218,0)
 ; Return Values
"RTN","MAGGTU4",219,0)
 ; =============
"RTN","MAGGTU4",220,0)
 ;            0  No version checking
"RTN","MAGGTU4",221,0)
 ;            1  Version checking is enabled
"RTN","MAGGTU4",222,0)
 ;
"RTN","MAGGTU4",223,0)
VERCHKON(PLC) ;
"RTN","MAGGTU4",224,0)
 Q +$P(^MAG(2006.1,PLC,"KEYS"),U,5)
"RTN","MAGGTU4",225,0)
 ;
"RTN","MAGGTU4",226,0)
 ;***** RETURNS THE STATUS OF IMAGING VERSION
"RTN","MAGGTU4",227,0)
 ; RPC: MAG4 VERSION STATUS
"RTN","MAGGTU4",228,0)
 ;
"RTN","MAGGTU4",229,0)
 ; .MAGRES       Reference to a local variable where the result is
"RTN","MAGGTU4",230,0)
 ;               returned to.
"RTN","MAGGTU4",231,0)
 ;
"RTN","MAGGTU4",232,0)
 ; MAGVER        Version number (e.g. MAG*3.0*59 or 3.0.59)
"RTN","MAGGTU4",233,0)
 ;
"RTN","MAGGTU4",234,0)
 ; Return Values
"RTN","MAGGTU4",235,0)
 ; =============
"RTN","MAGGTU4",236,0)
 ;
"RTN","MAGGTU4",237,0)
 ; Status code and description are returned into the variable
"RTN","MAGGTU4",238,0)
 ; referenced by the MAGRES parameter. Below is the list of
"RTN","MAGGTU4",239,0)
 ; possible values:
"RTN","MAGGTU4",240,0)
 ;
"RTN","MAGGTU4",241,0)
 ;            0^There is no KIDS Install Record.
"RTN","MAGGTU4",242,0)
 ;            1^Unknown Release Status.
"RTN","MAGGTU4",243,0)
 ;            2^Alpha/Beta Version.
"RTN","MAGGTU4",244,0)
 ;            3^Released Version.
"RTN","MAGGTU4",245,0)
 ;
"RTN","MAGGTU4",246,0)
VERSTAT(MAGRES,MAGVER) ;RPC [MAG4 VERSION STATUS]
"RTN","MAGGTU4",247,0)
 N TVER,MAGERR,VERI
"RTN","MAGGTU4",248,0)
 S:+MAGVER MAGVER="MAG*"_$P(MAGVER,".",1,2)_"*"_$P(MAGVER,".",3)
"RTN","MAGGTU4",249,0)
 ;--- Search for the installation record
"RTN","MAGGTU4",250,0)
 S VERI=$$FIND1^DIC(9.6,,"MO",MAGVER,,,"MAGERR")
"RTN","MAGGTU4",251,0)
 I 'VERI  D  Q
"RTN","MAGGTU4",252,0)
 . S MAGRES="0^There is no KIDS Install Record for """_MAGVER_"""."
"RTN","MAGGTU4",253,0)
 ;--- Check the alpha/beta testing status
"RTN","MAGGTU4",254,0)
 S TVER=$$GET1^DIQ(9.6,VERI_",","ALPHA/BETA TESTING",,,"MAGERR")
"RTN","MAGGTU4",255,0)
 I TVER="YES"  S MAGRES="2^Alpha/Beta Version."  Q
"RTN","MAGGTU4",256,0)
 I TVER="NO"   S MAGRES="3^Released Version."    Q
"RTN","MAGGTU4",257,0)
 S MAGRES="1^Unknown Release Status."
"RTN","MAGGTU4",258,0)
 Q
"RTN","MAGGTU4",259,0)
 ;
"RTN","MAGGTU4",260,0)
 ;***** IMPLEMENATION OF THE 'MAG CLIENT VERSION REPORT' OPTION
"RTN","MAGGTU4",261,0)
WSCVCROP ;
"RTN","MAGGTU4",262,0)
 N DA,DIR,DIRUT,DTOUT,DUOUT,MAGSORT,X,Y
"RTN","MAGGTU4",263,0)
 ;--- Let the user select the report sort mode
"RTN","MAGGTU4",264,0)
 S DIR(0)="SO^"
"RTN","MAGGTU4",265,0)
 S DIR(0)=DIR(0)_"V:Site-Client-Version-Workstation Name;"
"RTN","MAGGTU4",266,0)
 S DIR(0)=DIR(0)_"W:Site-Workstation Name-Client;"
"RTN","MAGGTU4",267,0)
 S DIR("A")="Report Sort Mode"
"RTN","MAGGTU4",268,0)
 D ^DIR  Q:$G(DIRUT)!($G(Y)="")
"RTN","MAGGTU4",269,0)
 S MAGSORT=Y
"RTN","MAGGTU4",270,0)
 ;--- Let the user select the device and queue the report
"RTN","MAGGTU4",271,0)
 W !  S %ZIS="Q"  D ^%ZIS  Q:$G(POP)
"RTN","MAGGTU4",272,0)
 I $D(IO("Q"))  D  K IO("Q")
"RTN","MAGGTU4",273,0)
 . N ZTCPU,ZTDESC,ZTDTH,ZTIO,ZTKIL,ZTPRI
"RTN","MAGGTU4",274,0)
 . N ZTRTN,ZTSAVE,ZTSK,ZTSYNC,ZTUCI
"RTN","MAGGTU4",275,0)
 . S ZTRTN="WSCVCRPT^MAGGTU42"
"RTN","MAGGTU4",276,0)
 . S ZTDESC="Imaging Workstations and Clients Report"
"RTN","MAGGTU4",277,0)
 . S ZTSAVE="MAGSORT"
"RTN","MAGGTU4",278,0)
 . D ^%ZTLOAD,HOME^%ZIS
"RTN","MAGGTU4",279,0)
 . Q
"RTN","MAGGTU4",280,0)
 E  U IO  D WSCVCRPT^MAGGTU42
"RTN","MAGGTU4",281,0)
 ;---
"RTN","MAGGTU4",282,0)
 Q
"RTN","MAGGTU41")
0^23^B22378971
"RTN","MAGGTU41",1,0)
MAGGTU41 ;WOIFO/GEK/SG - VERSION CONTROL UTILITIES  ; 6/27/08 11:33am
"RTN","MAGGTU41",2,0)
 ;;3.0;IMAGING;**46,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTU41",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU41",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU41",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU41",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU41",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU41",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU41",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU41",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU41",11,0)
 ;; |                                                               |
"RTN","MAGGTU41",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU41",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU41",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU41",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU41",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU41",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU41",18,0)
 ;;
"RTN","MAGGTU41",19,0)
 Q
"RTN","MAGGTU41",20,0)
 ;
"RTN","MAGGTU41",21,0)
 ;+++++ CHECKS THE CLIENT VERSION AGIANST THE LIST OF SUPPORTED ONES
"RTN","MAGGTU41",22,0)
 ;
"RTN","MAGGTU41",23,0)
 ; .VCD          Reference to a local variable where the version
"RTN","MAGGTU41",24,0)
 ;               control data is cached (see the $$GETVCD^MAGGTU41
"RTN","MAGGTU41",25,0)
 ;               for details).
"RTN","MAGGTU41",26,0)
 ;
"RTN","MAGGTU41",27,0)
 ; CLNAME        Client name ("CAPTURE", "CLUTILS", "DISPLAY",
"RTN","MAGGTU41",28,0)
 ;               "TELEREADER", or "VISTARAD")
"RTN","MAGGTU41",29,0)
 ;
"RTN","MAGGTU41",30,0)
 ; .CLVER        Reference to a local variable that stores the client
"RTN","MAGGTU41",31,0)
 ;               application version (Major.Minor.Patch.Build).
"RTN","MAGGTU41",32,0)
 ;
"RTN","MAGGTU41",33,0)
 ; Return Values
"RTN","MAGGTU41",34,0)
 ; =============
"RTN","MAGGTU41",35,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",36,0)
 ;            0  Latest version of the client
"RTN","MAGGTU41",37,0)
 ;            1  Latest version but old build (T-version)
"RTN","MAGGTU41",38,0)
 ;            2  Supported version of the client
"RTN","MAGGTU41",39,0)
 ;            3  Supported version but old build (T-version)
"RTN","MAGGTU41",40,0)
 ;            4  Client is not supported
"RTN","MAGGTU41",41,0)
 ;
"RTN","MAGGTU41",42,0)
CHKVER1(VCD,CLNAME,CLVER) ;
"RTN","MAGGTU41",43,0)
 N CT,CV,RC
"RTN","MAGGTU41",44,0)
 ;--- Bug in patch 42: the version comes in as 30.5.42.x
"RTN","MAGGTU41",45,0)
 ;--- (patch 42 was not released)
"RTN","MAGGTU41",46,0)
 S:$P(CLVER,".")="30" CLVER="3.0."_$P(CLVER,".",3,99)
"RTN","MAGGTU41",47,0)
 ;--- Parse the client version
"RTN","MAGGTU41",48,0)
 S CV=$P(CLVER,".",1,3),CT=$P(CLVER,".",4)
"RTN","MAGGTU41",49,0)
 S:CT="" $P(CLVER,".",4)=0,CT=0
"RTN","MAGGTU41",50,0)
 ;--- Get the version control data (if not cached already)
"RTN","MAGGTU41",51,0)
 I $D(VCD(CLNAME))<10  S RC=$$GETVCD(.VCD,CLNAME)  Q:RC<0 RC
"RTN","MAGGTU41",52,0)
 ;--- Client and server versions are different
"RTN","MAGGTU41",53,0)
 I CV'=VCD(CLNAME,"SV")  D  Q RC
"RTN","MAGGTU41",54,0)
 . S RC=$S('$D(VCD(CLNAME,"ST",CV)):4,CT<VCD(CLNAME,"ST",CV):3,1:2)
"RTN","MAGGTU41",55,0)
 . Q
"RTN","MAGGTU41",56,0)
 ;--- The versions are the same
"RTN","MAGGTU41",57,0)
 Q $S(CT&(CT'=VCD(CLNAME,"ST")):1,1:0)
"RTN","MAGGTU41",58,0)
 ;
"RTN","MAGGTU41",59,0)
 ;##### RETURNS THE CLIENT APPLICATION DESCRIPTOR
"RTN","MAGGTU41",60,0)
 ;
"RTN","MAGGTU41",61,0)
 ; CLNAME        Client application name
"RTN","MAGGTU41",62,0)
 ;
"RTN","MAGGTU41",63,0)
 ;               If this parameter is not defined or empty, then the
"RTN","MAGGTU41",64,0)
 ;               function returns the list of supported client names
"RTN","MAGGTU41",65,0)
 ;               separated by commas.
"RTN","MAGGTU41",66,0)
 ;
"RTN","MAGGTU41",67,0)
 ; Return Values
"RTN","MAGGTU41",68,0)
 ; =============
"RTN","MAGGTU41",69,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",70,0)
 ;          ...  Client descriptor
"RTN","MAGGTU41",71,0)
 ;                 ^01: Name of the version control routine
"RTN","MAGGTU41",72,0)
 ;                 ^02: Number of the version field in the IMAGING
"RTN","MAGGTU41",73,0)
 ;                      WINDOWS WORKSTATIONS  file (2006.81)
"RTN","MAGGTU41",74,0)
 ;                 ^03: Number of the date/time field in the IMAGING
"RTN","MAGGTU41",75,0)
 ;                      WINDOWS WORKSTATIONS  file (2006.81)
"RTN","MAGGTU41",76,0)
 ;
"RTN","MAGGTU41",77,0)
CLADESC(CLNAME) ;
"RTN","MAGGTU41",78,0)
 Q:$G(CLNAME)="" "CAPTURE,CLUTILS,DISPLAY,TELEREADER,VISTARAD"
"RTN","MAGGTU41",79,0)
 N DSC
"RTN","MAGGTU41",80,0)
 D
"RTN","MAGGTU41",81,0)
 . I CLNAME="CAPTURE"     S DSC="MAGGTU4C^9.5^5.5"  Q
"RTN","MAGGTU41",82,0)
 . I CLNAME="CLUTILS"     S DSC="MAGGTU4L^9.9^5.9"  Q
"RTN","MAGGTU41",83,0)
 . I CLNAME="DISPLAY"     S DSC="MAGGTU4D^9^5"      Q
"RTN","MAGGTU41",84,0)
 . I CLNAME="TELEREADER"  S DSC="MAGGTU4T^9.3^5.3"  Q
"RTN","MAGGTU41",85,0)
 . I CLNAME="VISTARAD"    S DSC=""              Q
"RTN","MAGGTU41",86,0)
 . Q
"RTN","MAGGTU41",87,0)
 ;
"RTN","MAGGTU41",88,0)
 Q $S($G(DSC)'="":DSC,1:$$ERROR^MAGUERR(-24,,CLNAME))
"RTN","MAGGTU41",89,0)
 ;
"RTN","MAGGTU41",90,0)
 ;+++++ BUILDS THE GENERAL ERROR MESSAGE IN THE RESULT ARRAY
"RTN","MAGGTU41",91,0)
 ;
"RTN","MAGGTU41",92,0)
 ; .MAGRES       Reference to the RPC result array where
"RTN","MAGGTU41",93,0)
 ;               the error message is returned to.
"RTN","MAGGTU41",94,0)
 ;
"RTN","MAGGTU41",95,0)
 ; ERR           Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",96,0)
 ;
"RTN","MAGGTU41",97,0)
ERROR(MAGRES,ERR) ;
"RTN","MAGGTU41",98,0)
 Q:ERR'<0
"RTN","MAGGTU41",99,0)
 N MAGPRMS  K MAGRES
"RTN","MAGGTU41",100,0)
 S MAGPRMS("ERRMSG")=$P(ERR,U,2)  ; Message text
"RTN","MAGGTU41",101,0)
 S MAGPRMS("ERRLOC")=$P(ERR,U,3)  ; Location
"RTN","MAGGTU41",102,0)
 D BLD^DIALOG(20050005.002,.MAGPRMS,,"MAGRES")
"RTN","MAGGTU41",103,0)
 S MAGRES(0)="2^"_$G(MAGRES(1))  K MAGRES(1)
"RTN","MAGGTU41",104,0)
 Q
"RTN","MAGGTU41",105,0)
 ;
"RTN","MAGGTU41",106,0)
 ;+++++ RETURNS THE ROW OF THE CLIENT VERSION CONTROL TABLE
"RTN","MAGGTU41",107,0)
 ;
"RTN","MAGGTU41",108,0)
 ; ROW           Sequential number of the row (starting from 1)
"RTN","MAGGTU41",109,0)
 ;
"RTN","MAGGTU41",110,0)
 ; Input Variables
"RTN","MAGGTU41",111,0)
 ; ===============
"RTN","MAGGTU41",112,0)
 ;   MAGRTN
"RTN","MAGGTU41",113,0)
 ;
"RTN","MAGGTU41",114,0)
GETVCL(ROW) ;
"RTN","MAGGTU41",115,0)
 Q $P($T(@("CLVERCT+"_(ROW+3)_"^"_MAGRTN)),";;",2)
"RTN","MAGGTU41",116,0)
 ;
"RTN","MAGGTU41",117,0)
 ;##### RETURNS THE SERVER VERSION AND THE LIST OF SUPPORTED CLIENTS
"RTN","MAGGTU41",118,0)
 ;
"RTN","MAGGTU41",119,0)
 ; .VCD(         Reference to a local variable where the version
"RTN","MAGGTU41",120,0)
 ;               control data is returned to.
"RTN","MAGGTU41",121,0)
 ;   CLNAME,
"RTN","MAGGTU41",122,0)
 ;     "SV")     Server version (Major.Minor.Patch.Build)
"RTN","MAGGTU41",123,0)
 ;     "ST",     Server build number (T-version)
"RTN","MAGGTU41",124,0)
 ;       Ver)    Build number of the version Ver release.
"RTN","MAGGTU41",125,0)
 ;               Ver is in the Major.Minor.Patch format.
"RTN","MAGGTU41",126,0)
 ;
"RTN","MAGGTU41",127,0)
 ; CLNAME        Client name ("CAPTURE", "CLUTILS", "DISPLAY",
"RTN","MAGGTU41",128,0)
 ;               "TELEREADER", or "VISTARAD")
"RTN","MAGGTU41",129,0)
 ;
"RTN","MAGGTU41",130,0)
 ;               See also the CLVERCT^MAGGTU4C, CLVERCT^MAGGTU4D,
"RTN","MAGGTU41",131,0)
 ;               CLVERCT^MAGGTU4L, and CLVERCT^MAGGTU4T for client
"RTN","MAGGTU41",132,0)
 ;               specific version tables.
"RTN","MAGGTU41",133,0)
 ;
"RTN","MAGGTU41",134,0)
 ; Return Values
"RTN","MAGGTU41",135,0)
 ; =============
"RTN","MAGGTU41",136,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU41",137,0)
 ;            0  Success
"RTN","MAGGTU41",138,0)
 ;
"RTN","MAGGTU41",139,0)
GETVCD(VCD,CLNAME) ;
"RTN","MAGGTU41",140,0)
 N MAGRTN        ; Name of the routine with the version control table
"RTN","MAGGTU41",141,0)
 ;
"RTN","MAGGTU41",142,0)
 N BUF,I,SV,TMP,VER   K VCD(CLNAME)
"RTN","MAGGTU41",143,0)
 F I="ST","SV"  S VCD(CLNAME,I)=""
"RTN","MAGGTU41",144,0)
 ;
"RTN","MAGGTU41",145,0)
 ;=== Get the name of the routine that contains the
"RTN","MAGGTU41",146,0)
 ;=== version control table for the client
"RTN","MAGGTU41",147,0)
 S MAGRTN=$P($$CLADESC(CLNAME),U)  Q:MAGRTN<0 MAGRTN
"RTN","MAGGTU41",148,0)
 ;
"RTN","MAGGTU41",149,0)
 ;=== Get the server version from the second line of the
"RTN","MAGGTU41",150,0)
 ;=== routine that contains the version control table
"RTN","MAGGTU41",151,0)
 S BUF=$P($T(@("+2^"_MAGRTN)),";;",2,999)
"RTN","MAGGTU41",152,0)
 Q:BUF="" $$ERROR^MAGUERR(-25,,MAGRTN)
"RTN","MAGGTU41",153,0)
 ;--- Get the package version
"RTN","MAGGTU41",154,0)
 S SV=$TR($P(BUF,";")," ")
"RTN","MAGGTU41",155,0)
 ;--- Get the patch number (the last one) from the list
"RTN","MAGGTU41",156,0)
 S TMP=$TR($P($P(BUF,";",3),"**",2)," ")
"RTN","MAGGTU41",157,0)
 S SV=SV_"."_(+$P(TMP,",",$L(TMP,",")))
"RTN","MAGGTU41",158,0)
 ;
"RTN","MAGGTU41",159,0)
 ;=== Load the version control table
"RTN","MAGGTU41",160,0)
 F I=1:1  S BUF=$$GETVCL(I)  Q:BUF=""  D
"RTN","MAGGTU41",161,0)
 . S BUF=$TR(BUF,"| ",U),VER=$P(BUF,U,2)
"RTN","MAGGTU41",162,0)
 . S:VER>0 VCD(CLNAME,"ST",VER)=+$P(BUF,U,3)
"RTN","MAGGTU41",163,0)
 . Q
"RTN","MAGGTU41",164,0)
 ;
"RTN","MAGGTU41",165,0)
 ;=== Get the build number and remove the server version from the list
"RTN","MAGGTU41",166,0)
 S VCD(CLNAME,"SV")=SV
"RTN","MAGGTU41",167,0)
 S VCD(CLNAME,"ST")=+$G(VCD(CLNAME,"ST",SV))
"RTN","MAGGTU41",168,0)
 K VCD(CLNAME,"ST",SV)
"RTN","MAGGTU41",169,0)
 Q 0
"RTN","MAGGTU41",170,0)
 ;
"RTN","MAGGTU41",171,0)
 ;+++++ APPENDS THE CLIENT-SPECIFIC WARNING TO THE ARRAY
"RTN","MAGGTU41",172,0)
 ;
"RTN","MAGGTU41",173,0)
 ; .MAGRES       Reference to the RPC result array that
"RTN","MAGGTU41",174,0)
 ;               the warning is apppended to.
"RTN","MAGGTU41",175,0)
 ;
"RTN","MAGGTU41",176,0)
 ; CLNAME        Client name
"RTN","MAGGTU41",177,0)
 ;
"RTN","MAGGTU41",178,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGGTU41",179,0)
 ;
"RTN","MAGGTU41",180,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGGTU41",181,0)
 ;
"RTN","MAGGTU41",182,0)
WARNING(MAGRES,CLNAME,CLVER,CVRC) ;
"RTN","MAGGTU41",183,0)
 ;--- Do not append the warning if the RPC result array already
"RTN","MAGGTU41",184,0)
 ;--- contains an error message that will terminate the client.
"RTN","MAGGTU41",185,0)
 Q:+$G(MAGRES(0),1)=2
"RTN","MAGGTU41",186,0)
 ;
"RTN","MAGGTU41",187,0)
 N EP,MAGBUF,RI,SPI
"RTN","MAGGTU41",188,0)
 S:$P(CLVER,".",4)="" $P(CLVER,".",4)=0
"RTN","MAGGTU41",189,0)
 ;--- Get the name of the client's version control routine
"RTN","MAGGTU41",190,0)
 S EP=$P($$CLADESC(CLNAME),U)  Q:EP<0
"RTN","MAGGTU41",191,0)
 S EP="WARNING^"_EP  Q:$T(@EP)=""
"RTN","MAGGTU41",192,0)
 ;--- Get the client-specific warning
"RTN","MAGGTU41",193,0)
 X "D "_EP_"(.MAGBUF,CLVER,CVRC)"
"RTN","MAGGTU41",194,0)
 S SPI=$Q(MAGBUF)  Q:SPI=""
"RTN","MAGGTU41",195,0)
 ;--- Append the 1st line of the warning text to the result array
"RTN","MAGGTU41",196,0)
 ;--- and make sure that the client will diplay the warning
"RTN","MAGGTU41",197,0)
 S RI=$O(MAGRES(""),-1)
"RTN","MAGGTU41",198,0)
 I RI'=""  D  S:+$G(MAGRES(0),1)=1 $P(MAGRES(0),U)=0
"RTN","MAGGTU41",199,0)
 . S RI=RI+1,MAGRES(RI)=" "
"RTN","MAGGTU41",200,0)
 . S RI=RI+1,MAGRES(RI)=@SPI
"RTN","MAGGTU41",201,0)
 . Q
"RTN","MAGGTU41",202,0)
 E  S MAGRES(0)="1^"_@SPI
"RTN","MAGGTU41",203,0)
 ;--- Append the remaining lines
"RTN","MAGGTU41",204,0)
 F  S SPI=$Q(@SPI)  Q:SPI=""  S RI=RI+1,MAGRES(RI)=@SPI
"RTN","MAGGTU41",205,0)
 Q
"RTN","MAGGTU42")
0^24^B89107061
"RTN","MAGGTU42",1,0)
MAGGTU42 ;WOIFO/SG - WORKSTATION-CLIENT VERSION REPORTS  ; 12/4/08 4:52pm
"RTN","MAGGTU42",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGTU42",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU42",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU42",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU42",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU42",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU42",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU42",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU42",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU42",11,0)
 ;; |                                                               |
"RTN","MAGGTU42",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU42",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU42",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU42",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU42",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU42",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU42",18,0)
 ;;
"RTN","MAGGTU42",19,0)
 Q
"RTN","MAGGTU42",20,0)
 ;
"RTN","MAGGTU42",21,0)
 ;+++++ PRINTS THE ERROR MESSAGE
"RTN","MAGGTU42",22,0)
 ;
"RTN","MAGGTU42",23,0)
 ; ERR           Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU42",24,0)
 ;
"RTN","MAGGTU42",25,0)
ERROR(ERR) ;
"RTN","MAGGTU42",26,0)
 Q:$G(ERR)'<0
"RTN","MAGGTU42",27,0)
 W !!,"ERROR: "_$P(ERR,U,2)
"RTN","MAGGTU42",28,0)
 W !,"Location: "_$TR($P(ERR,U,3),"~","^")
"RTN","MAGGTU42",29,0)
 Q
"RTN","MAGGTU42",30,0)
 ;
"RTN","MAGGTU42",31,0)
 ;+++++ PRINTS THE REPORT TABLE FOR THE XREF SUBTREE
"RTN","MAGGTU42",32,0)
 ;
"RTN","MAGGTU42",33,0)
 ; NODE          Closed reference (name) of the xref subtree
"RTN","MAGGTU42",34,0)
 ;
"RTN","MAGGTU42",35,0)
 ; IQS           Position of the sequential number in a closed
"RTN","MAGGTU42",36,0)
 ;               reference of a cross-reference entry.
"RTN","MAGGTU42",37,0)
 ;
"RTN","MAGGTU42",38,0)
 ; Input Variables
"RTN","MAGGTU42",39,0)
 ; ===============
"RTN","MAGGTU42",40,0)
 ;   MAGRAW, MAGSORT
"RTN","MAGGTU42",41,0)
 ;
"RTN","MAGGTU42",42,0)
PRINT(NODE,IQS) ;
"RTN","MAGGTU42",43,0)
 N BUF,FLT,FLTL,I,PI,PREVCL,PREVWSNAME,RC,SEQN,TMP
"RTN","MAGGTU42",44,0)
 S (PI,FLT)=NODE,FLTL=$L(FLT)-1,FLT=$E(FLT,1,FLTL)
"RTN","MAGGTU42",45,0)
 ;---
"RTN","MAGGTU42",46,0)
 S (PREVCL,PREVWSNAME)="",RC=0
"RTN","MAGGTU42",47,0)
 F  S PI=$Q(@PI)  Q:$E(PI,1,FLTL)'=FLT  D  Q:RC<0
"RTN","MAGGTU42",48,0)
 . S SEQN=+$QS(PI,IQS),BUF=$G(@MAGRAW@(SEQN))  Q:BUF=""
"RTN","MAGGTU42",49,0)
 . ;--- Check if a new page should be started
"RTN","MAGGTU42",50,0)
 . S RC=$$PAGE^MAGUTL05(1)  Q:RC<0
"RTN","MAGGTU42",51,0)
 . D:RC PRTBLH
"RTN","MAGGTU42",52,0)
 . ;--- Do not repeat the workstation name for its subsequent
"RTN","MAGGTU42",53,0)
 . ;--- clients unless this is the beginning of a new page.
"RTN","MAGGTU42",54,0)
 . D:MAGSORT="W"
"RTN","MAGGTU42",55,0)
 . . I $P(BUF,U,5)=PREVWSNAME  S:'RC $P(BUF,U,5)=""
"RTN","MAGGTU42",56,0)
 . . E  S PREVWSNAME=$P(BUF,U,5)
"RTN","MAGGTU42",57,0)
 . . Q
"RTN","MAGGTU42",58,0)
 . ;--- Do not repeat the client name and version for subsequent
"RTN","MAGGTU42",59,0)
 . ;--- workstations unless this is the beginning of a new page.
"RTN","MAGGTU42",60,0)
 . D:MAGSORT="V"
"RTN","MAGGTU42",61,0)
 . . I $P(BUF,U,2,3)=PREVCL  S:'RC $P(BUF,U,2,3)=U
"RTN","MAGGTU42",62,0)
 . . E  S PREVCL=$P(BUF,U,2,3)
"RTN","MAGGTU42",63,0)
 . . Q
"RTN","MAGGTU42",64,0)
 . ;--- Print the report line
"RTN","MAGGTU42",65,0)
 . D PRINT1(BUF)
"RTN","MAGGTU42",66,0)
 . Q
"RTN","MAGGTU42",67,0)
 ;---
"RTN","MAGGTU42",68,0)
 Q $S(RC<0:RC,1:0)
"RTN","MAGGTU42",69,0)
 ;
"RTN","MAGGTU42",70,0)
 ;+++++ PRINTS THE LINE OF THE REPORT
"RTN","MAGGTU42",71,0)
 ;
"RTN","MAGGTU42",72,0)
 ; BUF           Column values in the same format as those
"RTN","MAGGTU42",73,0)
 ;               returned by the $$WSCVCHCK^MAGGTU42.
"RTN","MAGGTU42",74,0)
 ;
"RTN","MAGGTU42",75,0)
 ;               If the value of this parameter does not contain
"RTN","MAGGTU42",76,0)
 ;               the '^' delimiter, then the first character is
"RTN","MAGGTU42",77,0)
 ;               used to print a separator line.
"RTN","MAGGTU42",78,0)
 ;
"RTN","MAGGTU42",79,0)
 ; [BUF1]        Headers for additional columns (not loaded by the
"RTN","MAGGTU42",80,0)
 ;               $$WSCVCHCK^MAGGTU42).
"RTN","MAGGTU42",81,0)
 ;
"RTN","MAGGTU42",82,0)
 ; Input Variables
"RTN","MAGGTU42",83,0)
 ; ===============
"RTN","MAGGTU42",84,0)
 ;   MAGRAW, MAGSORT
"RTN","MAGGTU42",85,0)
 ;
"RTN","MAGGTU42",86,0)
PRINT1(BUF,BUF1) ;
"RTN","MAGGTU42",87,0)
 N FLDW,SP  S SP=" "
"RTN","MAGGTU42",88,0)
 ;=== Load additional data from IMAGING WINDOWS WORKSTATIONS file
"RTN","MAGGTU42",89,0)
 I BUF>0  D
"RTN","MAGGTU42",90,0)
 . N I,IENS,MAGBUF,MAGMSG  S IENS=+BUF_","
"RTN","MAGGTU42",91,0)
 . D GETS^DIQ(2006.81,IENS,"2;10.5","EI","MAGBUF","MAGMSG")
"RTN","MAGGTU42",92,0)
 . S $P(BUF1,U,1)=$G(MAGBUF(2006.81,IENS,2,"I"))
"RTN","MAGGTU42",93,0)
 . S $P(BUF1,U,2)=$G(MAGBUF(2006.81,IENS,10.5,"I"))
"RTN","MAGGTU42",94,0)
 . ;--- Convert dates to external format
"RTN","MAGGTU42",95,0)
 . F I=7  S TMP=$P(BUF,U,I)  D:TMP>0
"RTN","MAGGTU42",96,0)
 . . S $P(BUF,U,I)=$$FMTE^XLFDT(TMP,"2DZ")
"RTN","MAGGTU42",97,0)
 . . Q
"RTN","MAGGTU42",98,0)
 . F I=1  S TMP=$P(BUF1,U,I)  D:TMP>0
"RTN","MAGGTU42",99,0)
 . . S $P(BUF1,U,I)=$$FMTE^XLFDT(TMP,"2DZ")
"RTN","MAGGTU42",100,0)
 . . Q
"RTN","MAGGTU42",101,0)
 . Q
"RTN","MAGGTU42",102,0)
 E  S:BUF'[U SP=$E(BUF,1),(BUF,BUF1)=""
"RTN","MAGGTU42",103,0)
 ;
"RTN","MAGGTU42",104,0)
 ;=== Print the line
"RTN","MAGGTU42",105,0)
 I MAGSORT="W"  D  Q
"RTN","MAGGTU42",106,0)
 . W !,$$LJ^XLFSTR($P(BUF,U,5),25,SP)     ; Workstation Name
"RTN","MAGGTU42",107,0)
 . W "  "_$$LJ^XLFSTR($P(BUF,U,2),10,SP)  ; Client Application
"RTN","MAGGTU42",108,0)
 . W "  "_$$LJ^XLFSTR($P(BUF,U,3),14,SP)  ; Client Version
"RTN","MAGGTU42",109,0)
 . W "  "_$$CJ^XLFSTR($P(BUF,U,7),8,SP)   ; Client Date
"RTN","MAGGTU42",110,0)
 . W "  "_$$CJ^XLFSTR($P(BUF1,U,1),8,SP)  ; Last Logon
"RTN","MAGGTU42",111,0)
 . W "  "_$$CJ^XLFSTR($P(BUF1,U,2),4,SP)  ; Session Type
"RTN","MAGGTU42",112,0)
 . Q
"RTN","MAGGTU42",113,0)
 ;---
"RTN","MAGGTU42",114,0)
 W !,$$LJ^XLFSTR($P(BUF,U,2),10,SP)       ; Client Application
"RTN","MAGGTU42",115,0)
 W "  "_$$LJ^XLFSTR($P(BUF,U,3),14,SP)    ; Client Version
"RTN","MAGGTU42",116,0)
 W "  "_$$LJ^XLFSTR($P(BUF,U,5),25,SP)    ; Workstation Name
"RTN","MAGGTU42",117,0)
 W "  "_$$CJ^XLFSTR($P(BUF,U,7),8,SP)     ; Client Date
"RTN","MAGGTU42",118,0)
 W "  "_$$CJ^XLFSTR($P(BUF1,U,1),8,SP)    ; Last Logon
"RTN","MAGGTU42",119,0)
 W "  "_$$CJ^XLFSTR($P(BUF1,U,2),4,SP)    ; Session Type
"RTN","MAGGTU42",120,0)
 Q
"RTN","MAGGTU42",121,0)
 ;
"RTN","MAGGTU42",122,0)
 ;+++++ PRINTS THE TABLE HEADER
"RTN","MAGGTU42",123,0)
 ;
"RTN","MAGGTU42",124,0)
 ; Input Variables
"RTN","MAGGTU42",125,0)
 ; ===============
"RTN","MAGGTU42",126,0)
 ;   MAGPAGE
"RTN","MAGGTU42",127,0)
 ;
"RTN","MAGGTU42",128,0)
 ; Output Variables
"RTN","MAGGTU42",129,0)
 ; ================
"RTN","MAGGTU42",130,0)
 ;   MAGPAGE
"RTN","MAGGTU42",131,0)
 ;
"RTN","MAGGTU42",132,0)
PRTBLH ;
"RTN","MAGGTU42",133,0)
 N TMP
"RTN","MAGGTU42",134,0)
 S MAGPAGE=MAGPAGE+1
"RTN","MAGGTU42",135,0)
 W:MAGPAGE>1 !,$$RJ^XLFSTR("Page "_MAGPAGE,IOM-1)
"RTN","MAGGTU42",136,0)
 ;--- 1st line of the table headers
"RTN","MAGGTU42",137,0)
 S TMP="^^^^^^Client"
"RTN","MAGGTU42",138,0)
 D PRINT1(TMP,"Last^")
"RTN","MAGGTU42",139,0)
 ;--- 2nd line of the table headers
"RTN","MAGGTU42",140,0)
 S TMP="^Client^Client Version^^Workstation Name^^Date"
"RTN","MAGGTU42",141,0)
 D PRINT1(TMP,"Logon^Type")
"RTN","MAGGTU42",142,0)
 ;--- Separator
"RTN","MAGGTU42",143,0)
 D PRINT1("-")
"RTN","MAGGTU42",144,0)
 Q
"RTN","MAGGTU42",145,0)
 ;
"RTN","MAGGTU42",146,0)
 ;##### CHECKS VERSIONS OF CLIENTS THAT RAN ON THE WORKSTATIONS
"RTN","MAGGTU42",147,0)
 ;
"RTN","MAGGTU42",148,0)
 ; MAG8DST       Closed reference (name) of a parent node where
"RTN","MAGGTU42",149,0)
 ;               the list of workstations is returned to.
"RTN","MAGGTU42",150,0)
 ;
"RTN","MAGGTU42",151,0)
 ; @MAG8DST@(
"RTN","MAGGTU42",152,0)
 ;
"RTN","MAGGTU42",153,0)
 ;   0)          Result descriptor
"RTN","MAGGTU42",154,0)
 ;                 ^01: Number of fields in the data record
"RTN","MAGGTU42",155,0)
 ;
"RTN","MAGGTU42",156,0)
 ;   Seq#)       Workstation-Client data
"RTN","MAGGTU42",157,0)
 ;                 ^01: Workstation IEN (file #2006.81)
"RTN","MAGGTU42",158,0)
 ;                 ^02: Client application name (see the
"RTN","MAGGTU42",159,0)
 ;                      $$CLADESC^MAGGTU41 for details)
"RTN","MAGGTU42",160,0)
 ;                 ^03: Client version (from the last run)
"RTN","MAGGTU42",161,0)
 ;                 ^04: Version check code returned by
"RTN","MAGGTU42",162,0)
 ;                      the $$CHKVER1^MAGGTU41
"RTN","MAGGTU42",163,0)
 ;                 ^05: Workstation name (value of the .01 field)
"RTN","MAGGTU42",164,0)
 ;                 ^06: External value of the PLACE field (.04)
"RTN","MAGGTU42",165,0)
 ;                 ^07: Client application date/time (internal)
"RTN","MAGGTU42",166,0)
 ;
"RTN","MAGGTU42",167,0)
 ;   "CPW",      Number of subscripts in the Client-Place-Workstation
"RTN","MAGGTU42",168,0)
 ;               index (see the "C" flag below).
"RTN","MAGGTU42",169,0)
 ;     ClientName,PlaceName,WSName,Seq#)=""
"RTN","MAGGTU42",170,0)
 ;
"RTN","MAGGTU42",171,0)
 ;   "PCVW",     Number of subscripts in the Place-Client-Version-
"RTN","MAGGTU42",172,0)
 ;               Patch-Build-Workstation ("PCVW") index in the result 
"RTN","MAGGTU42",173,0)
 ;               array (see the "V" flag below).
"RTN","MAGGTU42",174,0)
 ;     PlaceName,ClientName,Version,Patch,Build,WSName,Seq#)=""
"RTN","MAGGTU42",175,0)
 ;
"RTN","MAGGTU42",176,0)
 ;   "PWC",      Number of subscripts in the Place-Workstation-Client
"RTN","MAGGTU42",177,0)
 ;               index (see the "W" flag below).
"RTN","MAGGTU42",178,0)
 ;     PlaceName,WSName,ClientName,Seq#)=""
"RTN","MAGGTU42",179,0)
 ;
"RTN","MAGGTU42",180,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGGTU42",181,0)
 ;
"RTN","MAGGTU42",182,0)
 ;                 C  Create the Client-Place-Workstation ("CPW")
"RTN","MAGGTU42",183,0)
 ;                    index in the result array.
"RTN","MAGGTU42",184,0)
 ;
"RTN","MAGGTU42",185,0)
 ;                 V  Create the Place-Client-Version-Patch-Build-
"RTN","MAGGTU42",186,0)
 ;                    Workstation ("PCVW") index in the result array.
"RTN","MAGGTU42",187,0)
 ;
"RTN","MAGGTU42",188,0)
 ;                 W  Create the Place-Workstation-Client ("PWC")
"RTN","MAGGTU42",189,0)
 ;                    index in the result array.
"RTN","MAGGTU42",190,0)
 ;
"RTN","MAGGTU42",191,0)
 ; [CVRCTRSH]    Threshold number for the version check code (0-4).
"RTN","MAGGTU42",192,0)
 ;               If the version check code is not less than the
"RTN","MAGGTU42",193,0)
 ;               threshold, then the workstation-client pair is
"RTN","MAGGTU42",194,0)
 ;               added to the result list.
"RTN","MAGGTU42",195,0)
 ;
"RTN","MAGGTU42",196,0)
 ;               If this parameter is not defined or empty, then
"RTN","MAGGTU42",197,0)
 ;               the value of 3 is assumed (see $$CHKVER1^MAGGTU41
"RTN","MAGGTU42",198,0)
 ;               for details).
"RTN","MAGGTU42",199,0)
 ;
"RTN","MAGGTU42",200,0)
 ; [CLALST]      List of client names (see the $$CLADESC^MAGGTU41
"RTN","MAGGTU42",201,0)
 ;               for details)) separated by commas.
"RTN","MAGGTU42",202,0)
 ;
"RTN","MAGGTU42",203,0)
 ;               By default ($G(CLALST)=""), all supported clients
"RTN","MAGGTU42",204,0)
 ;               are checked.
"RTN","MAGGTU42",205,0)
 ; 
"RTN","MAGGTU42",206,0)
 ; Return Values
"RTN","MAGGTU42",207,0)
 ; =============
"RTN","MAGGTU42",208,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGGTU42",209,0)
 ;            0  Ok
"RTN","MAGGTU42",210,0)
 ;
"RTN","MAGGTU42",211,0)
WSCVCHCK(MAG8DST,FLAGS,CVRCTRSH,CLALST) ;
"RTN","MAGGTU42",212,0)
 N MAGVCD        ; Version control data
"RTN","MAGGTU42",213,0)
 ;
"RTN","MAGGTU42",214,0)
 N CLNAME,CLVER,CVRC,FLDLST,I,IENS,MAG8BUF,MAG8I
"RTN","MAGGTU42",215,0)
 N MAGMSG,N,PLACE,TMP,WSIEN,WSNAME
"RTN","MAGGTU42",216,0)
 ;
"RTN","MAGGTU42",217,0)
 ;=== Validate parameters and initialize variables
"RTN","MAGGTU42",218,0)
 Q:$G(MAG8DST)?." " $$ERROR^MAGUERR(-8,,"MAG8DST")
"RTN","MAGGTU42",219,0)
 K @MAG8DST  S MAG8I=0
"RTN","MAGGTU42",220,0)
 ;--- Client name(s)
"RTN","MAGGTU42",221,0)
 S CLALST=$TR($G(CLALST)," ")
"RTN","MAGGTU42",222,0)
 S:CLALST="" CLALST=$$CLADESC^MAGGTU41()
"RTN","MAGGTU42",223,0)
 ;--- Version check threshold
"RTN","MAGGTU42",224,0)
 I $G(CVRCTRSH)=""  S CVRCTRSH=3
"RTN","MAGGTU42",225,0)
 E  D  Q:TMP $$IPVE^MAGUERR("CVRCTRSH")
"RTN","MAGGTU42",226,0)
 . S TMP=$S(+CVRCTRSH'=CVRCTRSH:1,CVRCTRSH<0:1,CVRCTRSH>4:1,1:0)
"RTN","MAGGTU42",227,0)
 . Q
"RTN","MAGGTU42",228,0)
 ;--- Flags
"RTN","MAGGTU42",229,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGGTU42",230,0)
 ;
"RTN","MAGGTU42",231,0)
 ;=== Client applications and version field numbers
"RTN","MAGGTU42",232,0)
 S FLDLST="",N=$L(CLALST,",")
"RTN","MAGGTU42",233,0)
 F I=1:1:N  S CLNAME=$P(CLALST,",",I)  D
"RTN","MAGGTU42",234,0)
 . S MAG8BUF=$$CLADESC^MAGGTU41(CLNAME)  Q:MAG8BUF<0
"RTN","MAGGTU42",235,0)
 . ;--- Version field number
"RTN","MAGGTU42",236,0)
 . S TMP=+$P(MAG8BUF,U,2)
"RTN","MAGGTU42",237,0)
 . S:TMP>0 $P(FLDLST(CLNAME),U,1)=TMP,FLDLST=FLDLST_";"_TMP
"RTN","MAGGTU42",238,0)
 . ;--- Date/time field number
"RTN","MAGGTU42",239,0)
 . S TMP=+$P(MAG8BUF,U,3)
"RTN","MAGGTU42",240,0)
 . S:TMP>0 $P(FLDLST(CLNAME),U,2)=TMP,FLDLST=FLDLST_";"_TMP
"RTN","MAGGTU42",241,0)
 . Q
"RTN","MAGGTU42",242,0)
 ;---
"RTN","MAGGTU42",243,0)
 Q:FLDLST="" $$ERROR^MAGUERR(-26,,"FLDLST")
"RTN","MAGGTU42",244,0)
 S FLDLST=".01;.04;2"_FLDLST
"RTN","MAGGTU42",245,0)
 ;
"RTN","MAGGTU42",246,0)
 S WSIEN=0
"RTN","MAGGTU42",247,0)
 F  S WSIEN=$O(^MAG(2006.81,WSIEN))  Q:WSIEN'>0  D
"RTN","MAGGTU42",248,0)
 . K MAG8BUF,MAGMSG
"RTN","MAGGTU42",249,0)
 . ;=== Get the workstation data
"RTN","MAGGTU42",250,0)
 . S IENS=WSIEN_","
"RTN","MAGGTU42",251,0)
 . D GETS^DIQ(2006.81,IENS,FLDLST,"EI","MAG8BUF","MAGMSG")
"RTN","MAGGTU42",252,0)
 . S WSNAME=$G(MAG8BUF(2006.81,IENS,.01,"E"))  ; NAME
"RTN","MAGGTU42",253,0)
 . S:WSNAME="" WSNAME="#"_WSIEN                ; Just in case ;-)
"RTN","MAGGTU42",254,0)
 . S PLACE=$G(MAG8BUF(2006.81,IENS,.04,"E"))   ; PLACE
"RTN","MAGGTU42",255,0)
 . S:PLACE="" PLACE=" "
"RTN","MAGGTU42",256,0)
 . ;
"RTN","MAGGTU42",257,0)
 . ;=== Check the clients
"RTN","MAGGTU42",258,0)
 . S CLNAME=""
"RTN","MAGGTU42",259,0)
 . F  S CLNAME=$O(FLDLST(CLNAME))  Q:CLNAME=""  D
"RTN","MAGGTU42",260,0)
 . . S CLVER=$G(MAG8BUF(2006.81,IENS,+FLDLST(CLNAME),"E"))  Q:CLVER=""
"RTN","MAGGTU42",261,0)
 . . ;--- Check the version
"RTN","MAGGTU42",262,0)
 . . S CVRC=$$CHKVER1^MAGGTU41(.MAGVCD,CLNAME,.CLVER)
"RTN","MAGGTU42",263,0)
 . . Q:CVRC<CVRCTRSH  ; Skip values below threshold and errors
"RTN","MAGGTU42",264,0)
 . . ;--- Store the result
"RTN","MAGGTU42",265,0)
 . . S MAG8BUF=WSIEN_U_CLNAME_U_CLVER_U_CVRC_U_WSNAME_U_PLACE
"RTN","MAGGTU42",266,0)
 . . S TMP=+$P(FLDLST(CLNAME),U,2)
"RTN","MAGGTU42",267,0)
 . . S:TMP $P(MAG8BUF,U,7)=$G(MAG8BUF(2006.81,IENS,TMP,"I"))
"RTN","MAGGTU42",268,0)
 . . S MAG8I=MAG8I+1,@MAG8DST@(MAG8I)=MAG8BUF
"RTN","MAGGTU42",269,0)
 . . ;--- Create indexes
"RTN","MAGGTU42",270,0)
 . . S:FLAGS["C" @MAG8DST@("CPW",CLNAME,PLACE,WSNAME,MAG8I)=""
"RTN","MAGGTU42",271,0)
 . . D:FLAGS["V"
"RTN","MAGGTU42",272,0)
 . . . S TMP=$NA(@MAG8DST@("PCVW",PLACE,CLNAME,+$P(CLVER,".",1,2)))
"RTN","MAGGTU42",273,0)
 . . . S @TMP@(+$P(CLVER,".",3),+$P(CLVER,".",4),WSNAME,MAG8I)=""
"RTN","MAGGTU42",274,0)
 . . . Q
"RTN","MAGGTU42",275,0)
 . . S:FLAGS["W" @MAG8DST@("PWC",PLACE,WSNAME,CLNAME,MAG8I)=""
"RTN","MAGGTU42",276,0)
 . . Q
"RTN","MAGGTU42",277,0)
 . Q
"RTN","MAGGTU42",278,0)
 ;
"RTN","MAGGTU42",279,0)
 ;=== Store the result characteristics
"RTN","MAGGTU42",280,0)
 D:$D(@MAG8DST)>0
"RTN","MAGGTU42",281,0)
 . ;--- Numbers of subscripts in the indexes
"RTN","MAGGTU42",282,0)
 . S:FLAGS["C" @MAG8DST@("CPW")=7
"RTN","MAGGTU42",283,0)
 . S:FLAGS["V" @MAG8DST@("PCVW")=10
"RTN","MAGGTU42",284,0)
 . S:FLAGS["W" @MAG8DST@("PWC")=7
"RTN","MAGGTU42",285,0)
 . ;--- Number of fields in the data record
"RTN","MAGGTU42",286,0)
 . S @MAG8DST@(0)=7
"RTN","MAGGTU42",287,0)
 . Q
"RTN","MAGGTU42",288,0)
 ;===
"RTN","MAGGTU42",289,0)
 Q 0
"RTN","MAGGTU42",290,0)
 ;
"RTN","MAGGTU42",291,0)
 ;***** PRINTS THE WORKSTATION-CLIENT VERSION CHECK REPORT
"RTN","MAGGTU42",292,0)
 ;
"RTN","MAGGTU42",293,0)
 ; Input Variables
"RTN","MAGGTU42",294,0)
 ; ===============
"RTN","MAGGTU42",295,0)
 ;   MAGSORT     ; Sort mode for the report
"RTN","MAGGTU42",296,0)
 ;
"RTN","MAGGTU42",297,0)
 ; Notes
"RTN","MAGGTU42",298,0)
 ; =====
"RTN","MAGGTU42",299,0)
 ;
"RTN","MAGGTU42",300,0)
 ; The ^TMP("MAGGTU42",$J) global node is used by this entry point to 
"RTN","MAGGTU42",301,0)
 ; store the raw report data.
"RTN","MAGGTU42",302,0)
 ;
"RTN","MAGGTU42",303,0)
WSCVCRPT ;
"RTN","MAGGTU42",304,0)
 N MAGPAGE       ; Current page number
"RTN","MAGGTU42",305,0)
 N MAGRAW        ; Closed reference (name) of the raw report data
"RTN","MAGGTU42",306,0)
 ;
"RTN","MAGGTU42",307,0)
 N RC
"RTN","MAGGTU42",308,0)
 S MAGRAW=$NA(^TMP("MAGGTU42",$J))
"RTN","MAGGTU42",309,0)
 S (MAGPAGE,RC)=0
"RTN","MAGGTU42",310,0)
 ;
"RTN","MAGGTU42",311,0)
 D
"RTN","MAGGTU42",312,0)
 . N BUF,FLAGS,IQS,PLACE,XREF
"RTN","MAGGTU42",313,0)
 . S FLAGS=$S($G(MAGSORT)'="":MAGSORT,1:"V")
"RTN","MAGGTU42",314,0)
 . S XREF=$S(FLAGS="V":"PCVW",FLAGS="W":"PWC",1:"")
"RTN","MAGGTU42",315,0)
 . I XREF=""  S RC=$$IPVE^MAGUERR("MAGSORT")  Q
"RTN","MAGGTU42",316,0)
 . ;
"RTN","MAGGTU42",317,0)
 . ;=== Compile the list of workstations and clients
"RTN","MAGGTU42",318,0)
 . S RC=$$WSCVCHCK(MAGRAW,FLAGS)  Q:RC<0
"RTN","MAGGTU42",319,0)
 . S IQS=+$G(@MAGRAW@(XREF))
"RTN","MAGGTU42",320,0)
 . I IQS'>0  S RC=$$ERROR^MAGUERR(-26,,$NA(@MAGRAW@(XREF)))  Q
"RTN","MAGGTU42",321,0)
 . ;
"RTN","MAGGTU42",322,0)
 . ;=== Print the report for each site
"RTN","MAGGTU42",323,0)
 . S PLACE="",$Y=0
"RTN","MAGGTU42",324,0)
 . F  S PLACE=$O(@MAGRAW@(XREF,PLACE))  Q:PLACE=""  D  Q:RC<0
"RTN","MAGGTU42",325,0)
 . . W:$E(IOST,1,2)="C-" @IOF
"RTN","MAGGTU42",326,0)
 . . ;--- Print the header
"RTN","MAGGTU42",327,0)
 . . S BUF="LIST OF WORKSTATIONS AND CLIENTS THAT HAVE TO BE UPDATED"
"RTN","MAGGTU42",328,0)
 . . W !,$$CJ^XLFSTR(BUF,IOM)
"RTN","MAGGTU42",329,0)
 . . W !,$$CJ^XLFSTR($$REPEAT^XLFSTR("=",$L(BUF)),IOM)
"RTN","MAGGTU42",330,0)
 . . W !,$$CJ^XLFSTR(PLACE,IOM),!
"RTN","MAGGTU42",331,0)
 . . D PRTBLH
"RTN","MAGGTU42",332,0)
 . . ;--- Print the table
"RTN","MAGGTU42",333,0)
 . . S RC=$$PRINT($NA(@MAGRAW@(XREF,PLACE)),IQS)  Q:RC<0
"RTN","MAGGTU42",334,0)
 . . ;--- Force the new page after the end of each section
"RTN","MAGGTU42",335,0)
 . . S RC=$$PAGE^MAGUTL05(1,1)  Q:RC<0
"RTN","MAGGTU42",336,0)
 . . Q
"RTN","MAGGTU42",337,0)
 . Q
"RTN","MAGGTU42",338,0)
 ;
"RTN","MAGGTU42",339,0)
 ;=== Error handling and cleanup
"RTN","MAGGTU42",340,0)
 D ERROR(RC):RC<-2,^%ZISC
"RTN","MAGGTU42",341,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MAGGTU42",342,0)
 K @MAGRAW
"RTN","MAGGTU42",343,0)
 Q
"RTN","MAGGTU4C")
0^15^B5489850
"RTN","MAGGTU4C",1,0)
MAGGTU4C ;WOIFO/SG - VERSION CONTROL (CLINICAL CAPTURE) ; 5/8/09 10:13am
"RTN","MAGGTU4C",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGTU4C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU4C",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4C",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4C",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4C",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4C",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4C",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4C",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4C",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4C",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4C",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4C",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4C",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4C",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4C",17,0)
 ;;
"RTN","MAGGTU4C",18,0)
 ; This routine contains the version control code and data specific
"RTN","MAGGTU4C",19,0)
 ; to the Clinical Capture application. DO NOT ADD ANYTHING ELSE!
"RTN","MAGGTU4C",20,0)
 Q
"RTN","MAGGTU4C",21,0)
 ;
"RTN","MAGGTU4C",22,0)
CLVERCT ;***** VERSION CONTROL TABLE FOR THE CLINICAL CAPTURE CLIENTS
"RTN","MAGGTU4C",23,0)
 ;;==================================================================
"RTN","MAGGTU4C",24,0)
 ;;| Version |Build|Seq #|                Comment                   |
"RTN","MAGGTU4C",25,0)
 ;;|---------+-----+------------------------------------------------|
"RTN","MAGGTU4C",26,0)
 ;;| 3.0.93  |  15 |     | Dec 2009                                 |
"RTN","MAGGTU4C",27,0)
 ;;| 3.0.83  |  25 |     | Mar 2008                                 |
"RTN","MAGGTU4C",28,0)
 ;;| 3.0.72  |  30 |  58 | Feb 2009                                 |
"RTN","MAGGTU4C",29,0)
 ;;| 3.0.95  |   7 |  57 | Jun 2008                                 |
"RTN","MAGGTU4C",30,0)
 ;;| 3.0.96  |   4 |  54 | Jun 2008                                 |
"RTN","MAGGTU4C",31,0)
 ;;| 3.0.59  |  31 |  53 | Feb 2008                                 |
"RTN","MAGGTU4C",32,0)
 ;;==================================================================
"RTN","MAGGTU4C",33,0)
 ;
"RTN","MAGGTU4C",34,0)
 ; Each row of the version control table contains the version and
"RTN","MAGGTU4C",35,0)
 ; build number of a supported client. Released patches must also
"RTN","MAGGTU4C",36,0)
 ; indicate the sequential numbers.
"RTN","MAGGTU4C",37,0)
 ;
"RTN","MAGGTU4C",38,0)
 ; Sort order of the rows does not matter. However, the reversed
"RTN","MAGGTU4C",39,0)
 ; order of patch sequential numbers is recommended.
"RTN","MAGGTU4C",40,0)
 ;
"RTN","MAGGTU4C",41,0)
 Q
"RTN","MAGGTU4C",42,0)
 ;
"RTN","MAGGTU4C",43,0)
 ;***** ADDS A CLIENT-SPECIFIC WARNING (IF NECESSARY)
"RTN","MAGGTU4C",44,0)
 ;
"RTN","MAGGTU4C",45,0)
 ; .MAGBUF       Reference to a local array that the warning text
"RTN","MAGGTU4C",46,0)
 ;               is returned to. It is appended to the RPC result
"RTN","MAGGTU4C",47,0)
 ;               array by the caller (WARNING^MAGGTU41).
"RTN","MAGGTU4C",48,0)
 ;
"RTN","MAGGTU4C",49,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGGTU4C",50,0)
 ;
"RTN","MAGGTU4C",51,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGGTU4C",52,0)
 ;
"RTN","MAGGTU4C",53,0)
 ; Notes
"RTN","MAGGTU4C",54,0)
 ; =====
"RTN","MAGGTU4C",55,0)
 ;
"RTN","MAGGTU4C",56,0)
 ; If the RPC result array already contains an error message that
"RTN","MAGGTU4C",57,0)
 ; will terminate the client, application, this procedure is not
"RTN","MAGGTU4C",58,0)
 ; called.
"RTN","MAGGTU4C",59,0)
 ;
"RTN","MAGGTU4C",60,0)
WARNING(MAGBUF,CLVER,CVRC) ;
"RTN","MAGGTU4C",61,0)
 Q
"RTN","MAGGTU4D")
0^16^B5495655
"RTN","MAGGTU4D",1,0)
MAGGTU4D ;WOIFO/SG - VERSION CONTROL (CLINICAL DISPLAY) ; 5/8/09 10:14am
"RTN","MAGGTU4D",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGTU4D",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU4D",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4D",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4D",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4D",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4D",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4D",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4D",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4D",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4D",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4D",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4D",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4D",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4D",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4D",17,0)
 ;;
"RTN","MAGGTU4D",18,0)
 ; This routine contains the version control code and data specific
"RTN","MAGGTU4D",19,0)
 ; to the Clinical Display application. DO NOT ADD ANYTHING ELSE!
"RTN","MAGGTU4D",20,0)
 Q
"RTN","MAGGTU4D",21,0)
 ;
"RTN","MAGGTU4D",22,0)
CLVERCT ;***** VERSION CONTROL TABLE FOR THE CLINICAL DISPLAY CLIENTS
"RTN","MAGGTU4D",23,0)
 ;;==================================================================
"RTN","MAGGTU4D",24,0)
 ;;| Version |Build|Seq #|                Comment                   |
"RTN","MAGGTU4D",25,0)
 ;;|---------+-----+------------------------------------------------|
"RTN","MAGGTU4D",26,0)
 ;;| 3.0.93  |  15 |     | Dec 2009                                 |
"RTN","MAGGTU4D",27,0)
 ;;| 3.0.83  |  25 |     | Mar 2008                                 |
"RTN","MAGGTU4D",28,0)
 ;;| 3.0.72  |  30 |  58 | Feb 2009                                 |
"RTN","MAGGTU4D",29,0)
 ;;| 3.0.95  |   7 |  57 | Jun 2008                                 |
"RTN","MAGGTU4D",30,0)
 ;;| 3.0.96  |   4 |  54 | Jun 2008                                 |
"RTN","MAGGTU4D",31,0)
 ;;| 3.0.59  |  31 |  53 | Feb 2008                                 |
"RTN","MAGGTU4D",32,0)
 ;;==================================================================
"RTN","MAGGTU4D",33,0)
 ;
"RTN","MAGGTU4D",34,0)
 ; Each row of the version control table contains the version and
"RTN","MAGGTU4D",35,0)
 ; build number of a supported client. Released patches must also
"RTN","MAGGTU4D",36,0)
 ; indicate the sequential numbers.
"RTN","MAGGTU4D",37,0)
 ;
"RTN","MAGGTU4D",38,0)
 ; Sort order of the rows does not matter. However, the reversed
"RTN","MAGGTU4D",39,0)
 ; order of patch sequential numbers is recommended.
"RTN","MAGGTU4D",40,0)
 ;
"RTN","MAGGTU4D",41,0)
 Q
"RTN","MAGGTU4D",42,0)
 ;
"RTN","MAGGTU4D",43,0)
 ;***** ADDS A CLIENT-SPECIFIC WARNING (IF NECESSARY)
"RTN","MAGGTU4D",44,0)
 ;
"RTN","MAGGTU4D",45,0)
 ; .MAGBUF       Reference to a local array that the warning text
"RTN","MAGGTU4D",46,0)
 ;               is returned to. It is appended to the RPC result
"RTN","MAGGTU4D",47,0)
 ;               array by the caller (WARNING^MAGGTU41).
"RTN","MAGGTU4D",48,0)
 ;
"RTN","MAGGTU4D",49,0)
 ;               Text must be stored at nodes with positive numbers
"RTN","MAGGTU4D",50,0)
 ;               or at the 0-node descendent from those nodes.
"RTN","MAGGTU4D",51,0)
 ;
"RTN","MAGGTU4D",52,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGGTU4D",53,0)
 ;
"RTN","MAGGTU4D",54,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGGTU4D",55,0)
 ;
"RTN","MAGGTU4D",56,0)
 ; Notes
"RTN","MAGGTU4D",57,0)
 ; =====
"RTN","MAGGTU4D",58,0)
 ;
"RTN","MAGGTU4D",59,0)
 ; If the RPC result array already contains an error message that
"RTN","MAGGTU4D",60,0)
 ; will terminate the client, application, this procedure is not
"RTN","MAGGTU4D",61,0)
 ; called.
"RTN","MAGGTU4D",62,0)
 ;
"RTN","MAGGTU4D",63,0)
WARNING(MAGBUF,CLVER,CVRC) ;
"RTN","MAGGTU4D",64,0)
 Q
"RTN","MAGGTU4L")
0^18^B4501110
"RTN","MAGGTU4L",1,0)
MAGGTU4L ;WOIFO/SG - VERSION CONTROL (CLINICAL UTILITIES) ; 5/1/09 4:03pm
"RTN","MAGGTU4L",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGTU4L",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU4L",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4L",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4L",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4L",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4L",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4L",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4L",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4L",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4L",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4L",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4L",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4L",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4L",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4L",17,0)
 ;;
"RTN","MAGGTU4L",18,0)
 ; This routine contains the version control code and data specific
"RTN","MAGGTU4L",19,0)
 ; to the Clinical Utilities application. DO NOT ADD ANYTHING ELSE!
"RTN","MAGGTU4L",20,0)
 Q
"RTN","MAGGTU4L",21,0)
 ;
"RTN","MAGGTU4L",22,0)
CLVERCT ;***** VERSION CONTROL TABLE FOR THE CLINICAL UTILITIES
"RTN","MAGGTU4L",23,0)
 ;;==================================================================
"RTN","MAGGTU4L",24,0)
 ;;| Version |Build|Seq #|                Comment                   |
"RTN","MAGGTU4L",25,0)
 ;;|---------+-----+------------------------------------------------|
"RTN","MAGGTU4L",26,0)
 ;;| 3.0.93  |  15 |     | Dec 2009                                 |
"RTN","MAGGTU4L",27,0)
 ;;==================================================================
"RTN","MAGGTU4L",28,0)
 ;
"RTN","MAGGTU4L",29,0)
 ; Each row of the version control table contains the version and
"RTN","MAGGTU4L",30,0)
 ; build number of a supported client. Released patches must also
"RTN","MAGGTU4L",31,0)
 ; indicate the sequential numbers.
"RTN","MAGGTU4L",32,0)
 ;
"RTN","MAGGTU4L",33,0)
 ; Sort order of the rows does not matter. However, the reversed
"RTN","MAGGTU4L",34,0)
 ; order of patch sequential numbers is recommended.
"RTN","MAGGTU4L",35,0)
 ;
"RTN","MAGGTU4L",36,0)
 Q
"RTN","MAGGTU4L",37,0)
 ;
"RTN","MAGGTU4L",38,0)
 ;***** ADDS A CLIENT-SPECIFIC WARNING (IF NECESSARY)
"RTN","MAGGTU4L",39,0)
 ;
"RTN","MAGGTU4L",40,0)
 ; .MAGBUF       Reference to a local array that the warning text
"RTN","MAGGTU4L",41,0)
 ;               is returned to. It is appended to the RPC result
"RTN","MAGGTU4L",42,0)
 ;               array by the caller (WARNING^MAGGTU41).
"RTN","MAGGTU4L",43,0)
 ;
"RTN","MAGGTU4L",44,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGGTU4L",45,0)
 ;
"RTN","MAGGTU4L",46,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGGTU4L",47,0)
 ;
"RTN","MAGGTU4L",48,0)
 ; Notes
"RTN","MAGGTU4L",49,0)
 ; =====
"RTN","MAGGTU4L",50,0)
 ;
"RTN","MAGGTU4L",51,0)
 ; If the RPC result array already contains an error message that
"RTN","MAGGTU4L",52,0)
 ; will terminate the client, application, this procedure is not
"RTN","MAGGTU4L",53,0)
 ; called.
"RTN","MAGGTU4L",54,0)
 ;
"RTN","MAGGTU4L",55,0)
WARNING(MAGBUF,CLVER,CVRC) ;
"RTN","MAGGTU4L",56,0)
 Q
"RTN","MAGGTU4T")
0^17^B5490003
"RTN","MAGGTU4T",1,0)
MAGGTU4T ;WOIFO/SG - VERSION CONTROL (TELEREADER) ; 5/8/09 10:15am
"RTN","MAGGTU4T",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGGTU4T",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU4T",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4T",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU4T",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU4T",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU4T",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU4T",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU4T",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU4T",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU4T",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU4T",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU4T",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU4T",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU4T",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU4T",17,0)
 ;;
"RTN","MAGGTU4T",18,0)
 ; This routine contains the version control code and data specific
"RTN","MAGGTU4T",19,0)
 ; to the TeleReader application. DO NOT ADD ANYTHING ELSE!
"RTN","MAGGTU4T",20,0)
 Q
"RTN","MAGGTU4T",21,0)
 ;
"RTN","MAGGTU4T",22,0)
CLVERCT ;***** VERSION CONTROL TABLE FOR THE TELEREADER CLIENTS
"RTN","MAGGTU4T",23,0)
 ;;==================================================================
"RTN","MAGGTU4T",24,0)
 ;;| Version |Build|Seq #|                Comment                   |
"RTN","MAGGTU4T",25,0)
 ;;|---------+-----+------------------------------------------------|
"RTN","MAGGTU4T",26,0)
 ;;| 3.0.93  |  15 |     | Dec 2009                                 |
"RTN","MAGGTU4T",27,0)
 ;;| 3.0.83  |  25 |     | Mar 2008                                 |
"RTN","MAGGTU4T",28,0)
 ;;| 3.0.72  |  30 |  58 | Feb 2009                                 |
"RTN","MAGGTU4T",29,0)
 ;;| 3.0.95  |   7 |  57 | Jun 2008                                 |
"RTN","MAGGTU4T",30,0)
 ;;| 3.0.96  |   4 |  54 | Jun 2008                                 |
"RTN","MAGGTU4T",31,0)
 ;;| 3.0.59  |  31 |  53 | Feb 2008                                 |
"RTN","MAGGTU4T",32,0)
 ;;==================================================================
"RTN","MAGGTU4T",33,0)
 ;
"RTN","MAGGTU4T",34,0)
 ; Each row of the version control table contains the version and
"RTN","MAGGTU4T",35,0)
 ; build number of a supported client. Released patches must also
"RTN","MAGGTU4T",36,0)
 ; indicate the sequential numbers.
"RTN","MAGGTU4T",37,0)
 ;
"RTN","MAGGTU4T",38,0)
 ; Sort order of the rows does not matter. However, the reversed
"RTN","MAGGTU4T",39,0)
 ; order of patch sequential numbers is recommended.
"RTN","MAGGTU4T",40,0)
 ;
"RTN","MAGGTU4T",41,0)
 Q
"RTN","MAGGTU4T",42,0)
 ;
"RTN","MAGGTU4T",43,0)
 ;***** ADDS A CLIENT-SPECIFIC WARNING (IF NECESSARY)
"RTN","MAGGTU4T",44,0)
 ;
"RTN","MAGGTU4T",45,0)
 ; .MAGBUF       Reference to a local array that the warning text
"RTN","MAGGTU4T",46,0)
 ;               is returned to. It is appended to the RPC result
"RTN","MAGGTU4T",47,0)
 ;               array by the caller (WARNING^MAGGTU41).
"RTN","MAGGTU4T",48,0)
 ;
"RTN","MAGGTU4T",49,0)
 ; CLVER         Client application version (Major.Minor.Patch.Build)
"RTN","MAGGTU4T",50,0)
 ;
"RTN","MAGGTU4T",51,0)
 ; CVRC          Version check code returned by the $$CHKVER1^MAGGTU41
"RTN","MAGGTU4T",52,0)
 ;
"RTN","MAGGTU4T",53,0)
 ; Notes
"RTN","MAGGTU4T",54,0)
 ; =====
"RTN","MAGGTU4T",55,0)
 ;
"RTN","MAGGTU4T",56,0)
 ; If the RPC result array already contains an error message that
"RTN","MAGGTU4T",57,0)
 ; will terminate the client, application, this procedure is not
"RTN","MAGGTU4T",58,0)
 ; called.
"RTN","MAGGTU4T",59,0)
 ;
"RTN","MAGGTU4T",60,0)
WARNING(MAGBUF,CLVER,CVRC) ;
"RTN","MAGGTU4T",61,0)
 Q
"RTN","MAGGTU6")
0^58^B51862098
"RTN","MAGGTU6",1,0)
MAGGTU6 ;WOIFO/GEK - Silent Utilities ; 4/7/09 2:30pm
"RTN","MAGGTU6",2,0)
 ;;3.0;IMAGING;**24,8,48,45,20,46,59,72,93**;Dec 02, 2009;Build 163
"RTN","MAGGTU6",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU6",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU6",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU6",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU6",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU6",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU6",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU6",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU6",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU6",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU6",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU6",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU6",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU6",17,0)
 ;;
"RTN","MAGGTU6",18,0)
 Q
"RTN","MAGGTU6",19,0)
 ;
"RTN","MAGGTU6",20,0)
LOGACT(MAGRY,DATA) ;RPC [MAGGACTION LOG]
"RTN","MAGGTU6",21,0)
 ; Call to LogAction from Delphi Window 
"RTN","MAGGTU6",22,0)
 ;
"RTN","MAGGTU6",23,0)
 ; DATA is input variable it is '^' delimited string
"RTN","MAGGTU6",24,0)
 ; 'A|B|C|D|E' ^^ MAGIEN ^ 'Copy/Download' ^ DFN ^ '1';
"RTN","MAGGTU6",25,0)
 ;  DUZ is inserted as 2nd piece below.
"RTN","MAGGTU6",26,0)
 ; I.E. DATA  = "C^^103660^Copy To Clipboard^1033^1"
"RTN","MAGGTU6",27,0)
 N Y
"RTN","MAGGTU6",28,0)
 S MAGRY="0^Logging access..."
"RTN","MAGGTU6",29,0)
 ;
"RTN","MAGGTU6",30,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTU6",31,0)
 ;                 C       DUZ      MAGIEN     ACTION       DFN       1        Additional Data
"RTN","MAGGTU6",32,0)
 D ENTRY^MAGLOG($P(DATA,U),+$G(DUZ),$P(DATA,U,3),$P(DATA,U,4),$P(DATA,U,5),$P(DATA,U,6),$P(DATA,U,7))
"RTN","MAGGTU6",33,0)
 S MAGRY="1^Action was Logged."
"RTN","MAGGTU6",34,0)
 Q
"RTN","MAGGTU6",35,0)
 ;
"RTN","MAGGTU6",36,0)
LINKDT(MAGRY,MAGDA,DTTM) ; This is called when an Image is successfully 
"RTN","MAGGTU6",37,0)
 ; linked (Associated) with a Report/Procedure/Note etc.
"RTN","MAGGTU6",38,0)
 ;  MAGDA = Image IEN
"RTN","MAGGTU6",39,0)
 ;  DTTM = ""            No date sent, so use NOW 
"RTN","MAGGTU6",40,0)
 ;  DTTM = 1                     No Date Sent, but use Image capture Date.
"RTN","MAGGTU6",41,0)
 ;  DTTM = Valid FM Date/Time    , Use it.
"RTN","MAGGTU6",42,0)
 N MSG
"RTN","MAGGTU6",43,0)
 S DTTM=$G(DTTM)
"RTN","MAGGTU6",44,0)
 I 'DTTM S DTTM=$$NOW^XLFDT      ; Using NOW
"RTN","MAGGTU6",45,0)
 I '$D(^MAG(2005,MAGDA)) Q
"RTN","MAGGTU6",46,0)
 I DTTM=1 S DTTM=$P(^MAG(2005,MAGDA,2),"^",1) ; Using Date Image Captured.
"RTN","MAGGTU6",47,0)
 I '$$VALID^MAGGSIV1(2005,64,.DTTM,.MSG) S MAGRY="0^"_MSG Q
"RTN","MAGGTU6",48,0)
 S $P(^MAG(2005,MAGDA,2),"^",11)=DTTM
"RTN","MAGGTU6",49,0)
 S MAGRY="1^Okay"
"RTN","MAGGTU6",50,0)
 Q
"RTN","MAGGTU6",51,0)
 ;
"RTN","MAGGTU6",52,0)
TIMEOUT(MAGRY,APP) ;RPC [MAGG GET TIMEOUT]
"RTN","MAGGTU6",53,0)
 ; Call  Returns the timeout for the APP from IMAGING SITE PARAMETERS File
"RTN","MAGGTU6",54,0)
 ;  APP is either 'DISPLAY'  'CAPTURE' or   'VISTARAD'
"RTN","MAGGTU6",55,0)
 N I,MAGTIMES,MAGPLC
"RTN","MAGGTU6",56,0)
 S MAGRY=""
"RTN","MAGGTU6",57,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2)) I 'MAGPLC Q  ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",58,0)
 S MAGTIMES=$G(^MAG(2006.1,MAGPLC,"KEYS"))
"RTN","MAGGTU6",59,0)
 I APP="DISPLAY" S MAGRY=$P(MAGTIMES,U,2)
"RTN","MAGGTU6",60,0)
 I APP="CAPTURE" S MAGRY=$P(MAGTIMES,U,3)
"RTN","MAGGTU6",61,0)
 I APP="VISTARAD" S MAGRY=$P(MAGTIMES,U,4)
"RTN","MAGGTU6",62,0)
 I APP="TELEREADER" S MAGRY=$P(MAGTIMES,U,6)  ;  MJK - 2006.01.25 - TeleReader
"RTN","MAGGTU6",63,0)
 Q
"RTN","MAGGTU6",64,0)
 ;
"RTN","MAGGTU6",65,0)
EXIST(EKGPLACE) ;Does an ekg server exist in 2005.2
"RTN","MAGGTU6",66,0)
 I $$CONSOLID^MAGBAPI()=0 Q $O(^MAG(2005.2,"E","EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",67,0)
 Q $O(^MAG(2005.2,"F",EKGPLACE,"EKG",""))
"RTN","MAGGTU6",68,0)
 ;
"RTN","MAGGTU6",69,0)
ONLINE(MAGR) ;RPC [MAG EKG ONLINE] EKG network location status    
"RTN","MAGGTU6",70,0)
 ;returns the status of the first EKG network location type
"RTN","MAGGTU6",71,0)
 ;0 if offline or a network location doesn't exist
"RTN","MAGGTU6",72,0)
 ;1 if online
"RTN","MAGGTU6",73,0)
 ;
"RTN","MAGGTU6",74,0)
 N EKG1,EKGPLACE
"RTN","MAGGTU6",75,0)
 S EKGPLACE=$$PLACE^MAGBAPI(DUZ(2)) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",76,0)
 I EKGPLACE=0 S EKGPLACE=$$PLACE^MAGBAPI(DUZ(2)) ;Convert to extrinsic /gek 8/2003
"RTN","MAGGTU6",77,0)
 I $$EXIST(EKGPLACE) D
"RTN","MAGGTU6",78,0)
 . I $$CONSOLID^MAGBAPI() S EKG1=$O(^MAG(2005.2,"F",EKGPLACE,"EKG","")) ; DBI - SEB 9/20/2002
"RTN","MAGGTU6",79,0)
 . E  S EKG1=$O(^MAG(2005.2,"E","EKG",""))
"RTN","MAGGTU6",80,0)
 . S MAGR=$P(^MAG(2005.2,+EKG1,0),U,6)
"RTN","MAGGTU6",81,0)
 . Q
"RTN","MAGGTU6",82,0)
 E  S MAGR=0
"RTN","MAGGTU6",83,0)
 Q
"RTN","MAGGTU6",84,0)
SHARE(MAGRY,TYPE) ;RPC [MAG GET NETLOC]
"RTN","MAGGTU6",85,0)
 ; Get list of image shares
"RTN","MAGGTU6",86,0)
 ;TYPE = One of the STORAGE TYPE codes : MAG, EKG, WORM, URL or ALL
"RTN","MAGGTU6",87,0)
 N TMP,I,DATA0,DATA2,DATA3,DATA6,INFO,VALUE,STYP,PHYREF
"RTN","MAGGTU6",88,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTU6",89,0)
 S:TYPE="" TYPE="ALL"
"RTN","MAGGTU6",90,0)
 S MAGRY(0)="1^SUCCESS"
"RTN","MAGGTU6",91,0)
 S I=0 F  S I=$O(^MAG(2005.2,I)) Q:'I  D
"RTN","MAGGTU6",92,0)
 . Q:$$LOCDRIVE(I)
"RTN","MAGGTU6",93,0)
 . S DATA0=$G(^MAG(2005.2,I,0))
"RTN","MAGGTU6",94,0)
 . S DATA2=$G(^MAG(2005.2,I,2))
"RTN","MAGGTU6",95,0)
 . S DATA3=$G(^MAG(2005.2,I,3))
"RTN","MAGGTU6",96,0)
 . S DATA6=$G(^MAG(2005.2,I,6))
"RTN","MAGGTU6",97,0)
 . ; 
"RTN","MAGGTU6",98,0)
 . S PHYREF=$P(DATA0,"^",2) ; PHYSICAL REFERENCE
"RTN","MAGGTU6",99,0)
 . S STYP=$P(DATA0,"^",7) ; STORAGE TYPE
"RTN","MAGGTU6",100,0)
 . ;
"RTN","MAGGTU6",101,0)
 . I TYPE'="ALL" Q:STYP'[TYPE
"RTN","MAGGTU6",102,0)
 . Q:$P(DATA0,"^",6)=0  ; Share is offline (don't return offline shares)
"RTN","MAGGTU6",103,0)
 . I STYP'="URL" Q:(PHYREF[".")  ; pre 45
"RTN","MAGGTU6",104,0)
 . I STYP'="URL" Q:($E(PHYREF,1,2)'="\\")  ; pre 45
"RTN","MAGGTU6",105,0)
 . ;
"RTN","MAGGTU6",106,0)
 . S INFO=$S($E(PHYREF,$L(PHYREF))="\":$E(PHYREF,1,$L(PHYREF)-1),1:PHYREF)
"RTN","MAGGTU6",107,0)
 . S $P(INFO,"^",2)=$P(DATA0,"^",7) ; Physical reference (path)
"RTN","MAGGTU6",108,0)
 . S $P(INFO,"^",3)=$P(DATA0,"^",6) ; Operational Status 0=OFFLINE 1=ONLINE
"RTN","MAGGTU6",109,0)
 . S $P(INFO,"^",4)=$P(DATA2,"^",1) ; Username
"RTN","MAGGTU6",110,0)
 . S $P(INFO,"^",5)=$P(DATA2,"^",2) ; Password
"RTN","MAGGTU6",111,0)
 . S $P(INFO,"^",6)=$P(DATA6,"^",1) ; MUSE Site #
"RTN","MAGGTU6",112,0)
 . S $P(INFO,"^",7)=$P($G(^MAG(2006.17,+$P(DATA6,"^",2),0)),"^",1) ; MUSE version #
"RTN","MAGGTU6",113,0)
 . S $P(INFO,"^",8)=$P(DATA3,"^",5) ; Network location SITE
"RTN","MAGGTU6",114,0)
 . S $P(INFO,"^",9)=$P(DATA0,"^",10) ; Place
"RTN","MAGGTU6",115,0)
 . S:'$D(TMP(INFO)) TMP(INFO)=I
"RTN","MAGGTU6",116,0)
 . Q
"RTN","MAGGTU6",117,0)
 S INFO="" F  S INFO=$O(TMP(INFO)) Q:INFO=""  D
"RTN","MAGGTU6",118,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=TMP(INFO)_"^"_INFO
"RTN","MAGGTU6",119,0)
 . Q
"RTN","MAGGTU6",120,0)
 Q
"RTN","MAGGTU6",121,0)
 ;
"RTN","MAGGTU6",122,0)
LOCDRIVE(I) ; Returns 1 if this is a local drive, else 0
"RTN","MAGGTU6",123,0)
 ; Local Drive is determined by the DIR not being Type : URL and having a ":"
"RTN","MAGGTU6",124,0)
 I $P(^MAG(2005.2,I,0),"^",7)'="URL" I $P(^MAG(2005.2,I,0),"^",2)[":" Q 1
"RTN","MAGGTU6",125,0)
 Q 0
"RTN","MAGGTU6",126,0)
 ;
"RTN","MAGGTU6",127,0)
GETENV(MAGRY) ;RPC [MAG GET ENV]
"RTN","MAGGTU6",128,0)
 ; Get some environment variables (used by annotation control)
"RTN","MAGGTU6",129,0)
 S MAGRY=DUZ(2)_"^"_$$NOW^XLFDT
"RTN","MAGGTU6",130,0)
 Q
"RTN","MAGGTU6",131,0)
 ;
"RTN","MAGGTU6",132,0)
ANNCB(STATARR) ;Status Callback (called by the import API)
"RTN","MAGGTU6",133,0)
 ;
"RTN","MAGGTU6",134,0)
 N I,CDUZ,QINDEX,MAGA,COUNT
"RTN","MAGGTU6",135,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGTU6",136,0)
 ;  0 = error, all others are success.
"RTN","MAGGTU6",137,0)
 I $P(STATARR(0),"^",1)'=0 D
"RTN","MAGGTU6",138,0)
 . ;   Import was successful
"RTN","MAGGTU6",139,0)
 E  D
"RTN","MAGGTU6",140,0)
 . ;   Import failed - send mail to MAG SERVER group and person who queued the import
"RTN","MAGGTU6",141,0)
 . S XMDUZ=DUZ
"RTN","MAGGTU6",142,0)
 . S XMSUB="Import Error Report"
"RTN","MAGGTU6",143,0)
 . ;    get text of message from status array
"RTN","MAGGTU6",144,0)
 . S XMTEXT="MAGA("
"RTN","MAGGTU6",145,0)
 . ; XMD needs array to start with 1, not 0
"RTN","MAGGTU6",146,0)
 . S COUNT=1,I=""
"RTN","MAGGTU6",147,0)
 . F  S I=$O(STATARR(I)) Q:I=""  D
"RTN","MAGGTU6",148,0)
 . . S MAGA(COUNT)=I_") "_STATARR(I)
"RTN","MAGGTU6",149,0)
 . . S COUNT=COUNT+1
"RTN","MAGGTU6",150,0)
 . . Q
"RTN","MAGGTU6",151,0)
 . S MAGA(COUNT+1)=" "
"RTN","MAGGTU6",152,0)
 . S MAGA(COUNT+2)=" "
"RTN","MAGGTU6",153,0)
 . S MAGA(COUNT+3)="     The errors listed above were generated by"
"RTN","MAGGTU6",154,0)
 . S MAGA(COUNT+4)="     the VistA Imaging Annotation Editor while"
"RTN","MAGGTU6",155,0)
 . S MAGA(COUNT+5)="     trying to import your diagram.  Please"
"RTN","MAGGTU6",156,0)
 . S MAGA(COUNT+6)="     report these errors to your VistA Imaging"
"RTN","MAGGTU6",157,0)
 . S MAGA(COUNT+7)="     support personnel."
"RTN","MAGGTU6",158,0)
 . ;Get person who did the import
"RTN","MAGGTU6",159,0)
 . S QINDEX=STATARR(2)
"RTN","MAGGTU6",160,0)
 . S I=-1 F  S I=$O(^MAG(2006.034,QINDEX,1,I)) Q:I=""  D
"RTN","MAGGTU6",161,0)
 . . I $P($G(^MAG(2006.034,QINDEX,1,I,0)),"^",1)=8 S CDUZ=$P(^MAG(2006.034,QINDEX,1,I,0),"^",2)
"RTN","MAGGTU6",162,0)
 . ;Set recipients of message
"RTN","MAGGTU6",163,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGGTU6",164,0)
 . I $G(CDUZ) S XMY(CDUZ)=""
"RTN","MAGGTU6",165,0)
 . D ^XMD
"RTN","MAGGTU6",166,0)
 . Q
"RTN","MAGGTU6",167,0)
 Q
"RTN","MAGGTU6",168,0)
 ;
"RTN","MAGGTU6",169,0)
GETCTP(MAGRY,DATA) ;RPC [MAG4 CT PRESETS GET]
"RTN","MAGGTU6",170,0)
 ; INPUT
"RTN","MAGGTU6",171,0)
 ;    DATA  = set of flags to determine which set of CT PRESETS
"RTN","MAGGTU6",172,0)
 ;    to return to client.  if $P(DATA,^,1)=2 then the second
"RTN","MAGGTU6",173,0)
 ;    set of CT PRESETS will be returned.
"RTN","MAGGTU6",174,0)
 ; OUTPUT
"RTN","MAGGTU6",175,0)
 ;    MAGRY = the set of presets from Imaging Site Paramters File
"RTN","MAGGTU6",176,0)
 S DATA=$G(DATA)
"RTN","MAGGTU6",177,0)
 N MAGPLC
"RTN","MAGGTU6",178,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGGTU6",179,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",180,0)
 I $P(DATA,"^",1)=2 S MAGRY=$G(^MAG(2006.1,MAGPLC,"CT2"))
"RTN","MAGGTU6",181,0)
 E  S MAGRY=$G(^MAG(2006.1,MAGPLC,"CT"))
"RTN","MAGGTU6",182,0)
 I MAGRY="" S MAGRY="0^Site doesn't have CT Presets defined." Q
"RTN","MAGGTU6",183,0)
 S MAGRY="1^"_MAGRY
"RTN","MAGGTU6",184,0)
 Q
"RTN","MAGGTU6",185,0)
 ;
"RTN","MAGGTU6",186,0)
SAVECTP(MAGRY,VALUE,DATA) ;RPC [MAG4 CT PRESETS SAVE]
"RTN","MAGGTU6",187,0)
 ;    DATA  = set of flags to determine which set of CT PRESETS
"RTN","MAGGTU6",188,0)
 ;    are being saved.  if $P(DATA,^,1)=2 then VALUE will be saved
"RTN","MAGGTU6",189,0)
 ;    as CT PRESETS 2
"RTN","MAGGTU6",190,0)
 S DATA=$G(DATA)
"RTN","MAGGTU6",191,0)
 N MAGPLC
"RTN","MAGGTU6",192,0)
 S MAGPLC=$$PLACE^MAGBAPI(DUZ(2))
"RTN","MAGGTU6",193,0)
 I 'MAGPLC S MAGRY="0^Error resolving Users Division" Q
"RTN","MAGGTU6",194,0)
 I $P(DATA,"^",1)=2 S ^MAG(2006.1,MAGPLC,"CT2")=VALUE
"RTN","MAGGTU6",195,0)
 E  S ^MAG(2006.1,MAGPLC,"CT")=VALUE
"RTN","MAGGTU6",196,0)
 S MAGRY="1^CT Presets saved."
"RTN","MAGGTU6",197,0)
 Q
"RTN","MAGGTU6",198,0)
 ;
"RTN","MAGGTU6",199,0)
NETPLCS ; Create an array of Place, SiteCodes for all entries of
"RTN","MAGGTU6",200,0)
 ; Network Location entries.  
"RTN","MAGGTU6",201,0)
 N I,PLC,PLCODE,CONS
"RTN","MAGGTU6",202,0)
 S CONS=$$CONSOLID^MAGBAPI
"RTN","MAGGTU6",203,0)
 I 'CONS S PLC=$O(^MAG(2006.1,0)),PLCODE=$P(^MAG(2006.1,PLC,0),"^",9)
"RTN","MAGGTU6",204,0)
 ; 
"RTN","MAGGTU6",205,0)
 K MAGJOB("NETPLC")
"RTN","MAGGTU6",206,0)
 S I=0 F  S I=$O(^MAG(2005.2,I)) Q:'I  D
"RTN","MAGGTU6",207,0)
 . I 'CONS S MAGJOB("NETPLC",I)=PLC_"^"_PLCODE Q
"RTN","MAGGTU6",208,0)
 . ; Here, for consolidated sites we get the real Site IEN, and Site Code.
"RTN","MAGGTU6",209,0)
 . I CONS S PLC=$P($G(^MAG(2005.2,I,0)),"^",10),PLCODE=$S(PLC:$P($G(^MAG(2006.1,PLC,0)),"^",9),1:"n/a")
"RTN","MAGGTU6",210,0)
 . S MAGJOB("NETPLC",I)=PLC_"^"_PLCODE
"RTN","MAGGTU6",211,0)
 . Q
"RTN","MAGGTU6",212,0)
 Q
"RTN","MAGGTU7")
0^45^B23284378
"RTN","MAGGTU7",1,0)
MAGGTU7 ;WOIFO/GEK/SG - Silent calls for Queing functions from GUI ; 3/9/09 12:52pm
"RTN","MAGGTU7",2,0)
 ;;3.0;IMAGING;**8,20,93**;Dec 02, 2009;Build 163
"RTN","MAGGTU7",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTU7",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU7",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTU7",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTU7",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTU7",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTU7",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTU7",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTU7",11,0)
 ;; |                                                               |
"RTN","MAGGTU7",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTU7",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTU7",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTU7",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTU7",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTU7",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTU7",18,0)
 ;;
"RTN","MAGGTU7",19,0)
 Q
"RTN","MAGGTU7",20,0)
ONJBOX(MAGIEN,CODE) ;
"RTN","MAGGTU7",21,0)
 ;Check to see if the image ( Abs, Full, or Big ) is on the worm 
"RTN","MAGGTU7",22,0)
 ;  before queuing it to be copied to HardDrive.
"RTN","MAGGTU7",23,0)
 ; We're testing to see if a pointer to the magnetic exists.
"RTN","MAGGTU7",24,0)
 ;  If not then we assume the Image is on JukeBox
"RTN","MAGGTU7",25,0)
 N ZNODE
"RTN","MAGGTU7",26,0)
 S ZNODE=$G(^MAG(2005,+MAGIEN,0))
"RTN","MAGGTU7",27,0)
 IF '$L(ZNODE) Q 0
"RTN","MAGGTU7",28,0)
 IF $$IMOFFLN^MAGFILEB($P(ZNODE,"^",2)) Q 0
"RTN","MAGGTU7",29,0)
 Q:((+$P(ZNODE,U,11))!(+$P(ZNODE,U,12))) 0
"RTN","MAGGTU7",30,0)
 IF CODE="A" Q '$P(ZNODE,U,4)
"RTN","MAGGTU7",31,0)
 IF CODE="F" Q '$P(ZNODE,U,3)
"RTN","MAGGTU7",32,0)
 IF CODE="B" Q $S('$P(^MAG(2005,+MAGIEN,"FBIG"),U,2):0,1:'$P(^MAG(2005,+MAGIEN,"FBIG"),U,1))
"RTN","MAGGTU7",33,0)
 ;
"RTN","MAGGTU7",34,0)
 Q
"RTN","MAGGTU7",35,0)
QUEIMAGE(MAGRY,CODE,MAGIEN) ;RPC [MAGG QUE IMAGE]
"RTN","MAGGTU7",36,0)
 ; Call to Queue an image for copy from Jukebox
"RTN","MAGGTU7",37,0)
 ;  NOTE : This is also called from other M routines.
"RTN","MAGGTU7",38,0)
 ; 
"RTN","MAGGTU7",39,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",40,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",41,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",42,0)
 ;     ["B" Big File
"RTN","MAGGTU7",43,0)
 ;
"RTN","MAGGTU7",44,0)
 N Y,QUE
"RTN","MAGGTU7",45,0)
 S QUE=""
"RTN","MAGGTU7",46,0)
 S MAGRY="0^Error setting Que from JukeBox"
"RTN","MAGGTU7",47,0)
 ;S MAGRY="1^Image was Queued to copy from JukeBox"
"RTN","MAGGTU7",48,0)
 ;  GEK 6/27/03  added code (ABS4IMAG) that returns 1|0  1 if this image should have an Abstract
"RTN","MAGGTU7",49,0)
 ;     This will stop the Queing of Canned Bitmaps for Images of type DOC, PDF, WAV, AVI  etc.
"RTN","MAGGTU7",50,0)
 I (CODE["A"),$$ONJBOX(MAGIEN,"A"),$$ABS4IMAG^MAGGSFT(MAGIEN) S Y=$$JBTOHD^MAGBAPI(+MAGIEN_"^ABSTRACT",$$DA2PLC^MAGBAPIP(MAGIEN,"A")) S QUE="A" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",51,0)
 I (CODE["F"),$$ONJBOX(MAGIEN,"F") S Y=$$JBTOHD^MAGBAPI(+MAGIEN_"^FULL",$$DA2PLC^MAGBAPIP(MAGIEN,"F")) S QUE=QUE_"F" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",52,0)
 I (CODE["B"),$$ONJBOX(MAGIEN,"B") S Y=$$JBTOHD^MAGBAPI(+MAGIEN_"^BIG",$$DA2PLC^MAGBAPIP(MAGIEN,"B")) S QUE=QUE_"B" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",53,0)
 I QUE="" S MAGRY="1^Copy from JukeBox not needed, Image was NOT Queued."
"RTN","MAGGTU7",54,0)
 E  S MAGRY="1^Image was Queued to copy from JukeBox ("_QUE_")"
"RTN","MAGGTU7",55,0)
 Q
"RTN","MAGGTU7",56,0)
QPREFET(MAGRY,CODE,MAGIEN) ;
"RTN","MAGGTU7",57,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",58,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",59,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",60,0)
 ;     ["B" Big File
"RTN","MAGGTU7",61,0)
 ;
"RTN","MAGGTU7",62,0)
 N Y,QUE
"RTN","MAGGTU7",63,0)
 S QUE=""
"RTN","MAGGTU7",64,0)
 S MAGRY="0^Error setting Prefetch Que from JukeBox"
"RTN","MAGGTU7",65,0)
 ;S MAGRY="1^Image was Queued to copy from JukeBox"
"RTN","MAGGTU7",66,0)
 I (CODE["A"),$$ONJBOX(MAGIEN,"A"),$$ABS4IMAG^MAGGSFT(MAGIEN) S Y=$$PREFET^MAGBAPI(+MAGIEN_"^ABSTRACT",$$DA2PLC^MAGBAPIP(MAGIEN,"A")) S QUE="A" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",67,0)
 I (CODE["F"),$$ONJBOX(MAGIEN,"F") S Y=$$PREFET^MAGBAPI(+MAGIEN_"^FULL",$$DA2PLC^MAGBAPIP(MAGIEN,"F")) S QUE=QUE_"F" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",68,0)
 I (CODE["B"),$$ONJBOX(MAGIEN,"B") S Y=$$PREFET^MAGBAPI(+MAGIEN_"^BIG",$$DA2PLC^MAGBAPIP(MAGIEN,"B")) S QUE=QUE_"B" ; DBI - SEB 9/20/2002
"RTN","MAGGTU7",69,0)
 I QUE="" S MAGRY="1^Copy from JukeBox not needed, Image was NOT Queued."
"RTN","MAGGTU7",70,0)
 E  S MAGRY="1^Image was Queued to copy from JukeBox"
"RTN","MAGGTU7",71,0)
 Q
"RTN","MAGGTU7",72,0)
QUELIST(MAGRY,CODE,LIST) ;RPC [MAGG QUE LIST]
"RTN","MAGGTU7",73,0)
 ; Call to queue all images in the input list for a copy from jukebox
"RTN","MAGGTU7",74,0)
 ;
"RTN","MAGGTU7",75,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",76,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",77,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",78,0)
 ;     ["B" Big File
"RTN","MAGGTU7",79,0)
 ; LIST is an array of Image IEN's,  we queue images contained in CODE
"RTN","MAGGTU7",80,0)
 ;
"RTN","MAGGTU7",81,0)
 N Y,CT,XX
"RTN","MAGGTU7",82,0)
 S CT=0
"RTN","MAGGTU7",83,0)
 S X="" F  S X=$O(LIST(X)) Q:X=""  D QUEIMAGE(.XX,CODE,X) S CT=CT+1
"RTN","MAGGTU7",84,0)
 S MAGRY=CT_"^"_CT_" Image"_$S(CT=1:"",1:"'s")_" Queued to copy from JukeBox"
"RTN","MAGGTU7",85,0)
 Q
"RTN","MAGGTU7",86,0)
QUEGROUP(MAGRY,CODE,MAGIEN,QCODE) ;RPC [MAGG QUE IMAGE GROUP]
"RTN","MAGGTU7",87,0)
 ; Call to queue all images of an Image group for a copy from JukeBox.
"RTN","MAGGTU7",88,0)
 ;  This can also be a PREFETCH, in which case the Images being 
"RTN","MAGGTU7",89,0)
 ;  Queued have a lower priority than other copies from JukeBox
"RTN","MAGGTU7",90,0)
 ;
"RTN","MAGGTU7",91,0)
 ; CODE is a string code for which images to Queue
"RTN","MAGGTU7",92,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",93,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",94,0)
 ;     ["B" Big File
"RTN","MAGGTU7",95,0)
 ; MAGIEN is assumed to be a group image.
"RTN","MAGGTU7",96,0)
 ; QCODE is a QUEUE code.  If = 1 then this is a prefetch
"RTN","MAGGTU7",97,0)
 ;   here we are queing the images contained in CODE
"RTN","MAGGTU7",98,0)
 ;   for all images in the group.
"RTN","MAGGTU7",99,0)
 N X,Y,Z,CT,XX
"RTN","MAGGTU7",100,0)
 S QCODE=$G(QCODE)
"RTN","MAGGTU7",101,0)
 I '$D(^MAG(2005,+MAGIEN,0)) S MAGRY="0^Invalid Image IEN. Queuing Canceled." Q
"RTN","MAGGTU7",102,0)
 S CT=0,X=0
"RTN","MAGGTU7",103,0)
 F  S X=$O(^MAG(2005,+MAGIEN,1,X)) Q:'X  S Z=+^(X,0) D
"RTN","MAGGTU7",104,0)
 . I QCODE D QPREFET(.XX,CODE,Z) S CT=CT+1
"RTN","MAGGTU7",105,0)
 . I 'QCODE D QUEIMAGE(.XX,CODE,Z) S CT=CT+1
"RTN","MAGGTU7",106,0)
 S MAGRY=CT_"^"_CT_" Group Image"_$S(CT=1:"",1:"'s")_" Queued to copy from JukeBox"
"RTN","MAGGTU7",107,0)
 Q
"RTN","MAGGTU7",108,0)
QUEPAT(MAGRY,CODE,MAGDFN) ;RPC [MAGG QUE PATIENT]
"RTN","MAGGTU7",109,0)
 ; Call to  Prefetch all images for a patient.
"RTN","MAGGTU7",110,0)
 ;  CODE is a string code for which images to Queue
"RTN","MAGGTU7",111,0)
 ;     ["A" Abatract
"RTN","MAGGTU7",112,0)
 ;     ["F" Full Resolution
"RTN","MAGGTU7",113,0)
 ;     ["B" Big File
"RTN","MAGGTU7",114,0)
 ;  this will queue a JBTOHD copy for all images for the patient.
"RTN","MAGGTU7",115,0)
 ;  images queued depend on what is contained in CODE
"RTN","MAGGTU7",116,0)
 ;
"RTN","MAGGTU7",117,0)
 N Y,I,XX
"RTN","MAGGTU7",118,0)
 I '$D(^MAG(2005,"AC",+MAGDFN)) S MAGRY="0^No Images on file for "_$P($G(^DPT(+MAGDFN,0)),U,1) Q
"RTN","MAGGTU7",119,0)
 S I="" F  S I=$O(^MAG(2005,"AC",+MAGDFN,I),-1) Q:'I  D
"RTN","MAGGTU7",120,0)
 . I $P(^MAG(2005,I,0),U,10) Q
"RTN","MAGGTU7",121,0)
 . Q:$$ISDEL^MAGGI11(I)
"RTN","MAGGTU7",122,0)
 . I $P(^MAG(2005,I,0),U,6)="11" D QUEGROUP(.XX,CODE,I,1) Q
"RTN","MAGGTU7",123,0)
 . D QPREFET(.XX,CODE,I)
"RTN","MAGGTU7",124,0)
 S MAGRY="1^"_$P(^DPT(+MAGDFN,0),U)_"'s Images will be copied from the JukeBox."
"RTN","MAGGTU7",125,0)
 Q
"RTN","MAGGTUP")
0^54^B23999096
"RTN","MAGGTUP",1,0)
MAGGTUP ;WOIFO/GEK/SG - Imaging System User preferences ; 2/9/09 2:14pm
"RTN","MAGGTUP",2,0)
 ;;3.0;IMAGING;**7,8,48,45,59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTUP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUP",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUP",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUP",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUP",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUP",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUP",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUP",11,0)
 ;; |                                                               |
"RTN","MAGGTUP",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUP",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUP",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUP",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUP",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUP",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUP",18,0)
 ;;
"RTN","MAGGTUP",19,0)
 Q
"RTN","MAGGTUP",20,0)
GET(MAGRY,CODE) ;RPC [MAGGUPREFGET] Call to Get user preferences.
"RTN","MAGGTUP",21,0)
 ;
"RTN","MAGGTUP",22,0)
 N Y,PRFIEN,J,X,Z,NODE,MAGPREF
"RTN","MAGGTUP",23,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGTUP",24,0)
 K MAGRY
"RTN","MAGGTUP",25,0)
 S MAGRY(0)="0^Error: Attempting to access user preference"
"RTN","MAGGTUP",26,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,""))
"RTN","MAGGTUP",27,0)
 ;    if first time user
"RTN","MAGGTUP",28,0)
 I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",29,0)
 ;    merge default settings into User's Preferences
"RTN","MAGGTUP",30,0)
 D MERGE(PRFIEN)
"RTN","MAGGTUP",31,0)
 ;    This returns the users default Filter, and creates filters if needed.
"RTN","MAGGTUP",32,0)
 S $P(^MAG(2006.18,PRFIEN,"LISTWIN1"),"^",3)=$$DFTFLT^MAGGSFLT(DUZ)
"RTN","MAGGTUP",33,0)
 S MAGRY(0)="1^User Preferences returned."
"RTN","MAGGTUP",34,0)
 ; 
"RTN","MAGGTUP",35,0)
 ; At This point.  Then entry in 2006.18 for User DUZ in complete
"RTN","MAGGTUP",36,0)
 ;   it has been merged with defaults, and has a valid Default Filter.
"RTN","MAGGTUP",37,0)
 ;   
"RTN","MAGGTUP",38,0)
 ;  if caller only wants one node, get it then quit.
"RTN","MAGGTUP",39,0)
 I $L($G(CODE))  S MAGRY($O(MAGRY(""),-1)+1)=CODE_"^"_$G(^MAG(2006.18,PRFIEN,CODE)) Q
"RTN","MAGGTUP",40,0)
 ;
"RTN","MAGGTUP",41,0)
 ;  loop through User Pref file, returning all nodes.
"RTN","MAGGTUP",42,0)
 ; Next line was Un-Commented out. BUT Clients before Patch 8 need it.
"RTN","MAGGTUP",43,0)
 S MAGRY($O(MAGRY(""),-1)+1)="SYS^"_^MAG(2006.18,PRFIEN,0)
"RTN","MAGGTUP",44,0)
 S NODE=""
"RTN","MAGGTUP",45,0)
 F  S NODE=$O(^MAG(2006.18,PRFIEN,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",46,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=NODE_"^"_^MAG(2006.18,PRFIEN,NODE)
"RTN","MAGGTUP",47,0)
 Q
"RTN","MAGGTUP",48,0)
MERGE(PRFIEN) ; Merge default settings into User Prefs returned.
"RTN","MAGGTUP",49,0)
 ; This will assure the User Prefs returned have values for New fields.
"RTN","MAGGTUP",50,0)
 ; PRFIEN = IEN in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",51,0)
 N NODE,DARR,MN,YN
"RTN","MAGGTUP",52,0)
 D DFLTARR(.DARR)
"RTN","MAGGTUP",53,0)
 S NODE="" F  S NODE=$O(DARR($J,NODE)) Q:(NODE="")  D
"RTN","MAGGTUP",54,0)
 . S YN=DARR($J,NODE)
"RTN","MAGGTUP",55,0)
 . S MN=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",56,0)
 . F J=1:1:$L(YN,"^") I ($P(YN,"^",J)'=""),($P(MN,"^",J)="") S $P(MN,"^",J)=$P(YN,"^",J)
"RTN","MAGGTUP",57,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=MN
"RTN","MAGGTUP",58,0)
 ;
"RTN","MAGGTUP",59,0)
 Q
"RTN","MAGGTUP",60,0)
SAVE(MAGRY,DATA) ;RPC [MAGGUPREFSAVE] Call to save User Preferences
"RTN","MAGGTUP",61,0)
 ;
"RTN","MAGGTUP",62,0)
 S MAGRY="0^Error: Saving user preferences."
"RTN","MAGGTUP",63,0)
 N X,Y,NODE,PRFIEN,J
"RTN","MAGGTUP",64,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^MAGGTERR"
"RTN","MAGGTUP",65,0)
 S PRFIEN=$O(^MAG(2006.18,"AC",DUZ,"")) I 'PRFIEN S PRFIEN=$$NEWUSER(DUZ) Q:PRFIEN=-1
"RTN","MAGGTUP",66,0)
 S NODE="" F  S NODE=$O(DATA(NODE)) Q:NODE=""  D
"RTN","MAGGTUP",67,0)
 . S X=$G(^MAG(2006.18,PRFIEN,NODE))
"RTN","MAGGTUP",68,0)
 . S Y=DATA(NODE)
"RTN","MAGGTUP",69,0)
 . F J=1:1:$L(Y,"^") I $L($P(Y,"^",J)) S $P(X,"^",J)=$P(Y,"^",J)
"RTN","MAGGTUP",70,0)
 . S ^MAG(2006.18,PRFIEN,NODE)=X
"RTN","MAGGTUP",71,0)
 S MAGRY="1^User Preferences saved."
"RTN","MAGGTUP",72,0)
 Q
"RTN","MAGGTUP",73,0)
NEWUSER(USER) ;Returns IEN of New entry in IMAGING USER PREFERENCES File.
"RTN","MAGGTUP",74,0)
 K DD,DO
"RTN","MAGGTUP",75,0)
 N DIC
"RTN","MAGGTUP",76,0)
 S X=$E($$GET1^DIQ(200,USER_",",.01),1,15)_" (SETTING 1)"
"RTN","MAGGTUP",77,0)
 S DIC="^MAG(2006.18,",DIC(0)="L"
"RTN","MAGGTUP",78,0)
 S DIC("DR")="1////"_USER_";2////12;3////12;" D FILE^DICN
"RTN","MAGGTUP",79,0)
 I Y=-1 Q Y
"RTN","MAGGTUP",80,0)
 D DEFAULT(+Y)
"RTN","MAGGTUP",81,0)
 Q +Y
"RTN","MAGGTUP",82,0)
DEFAULT(NEWPREF) ;Setup a new IMAGING USER PREFERENCES entry, with System defaults.
"RTN","MAGGTUP",83,0)
 ;    NEWPREF = IEN in IMAGING USER PREFERENCES File
"RTN","MAGGTUP",84,0)
 N DFTPREF,N0,DFTSET
"RTN","MAGGTUP",85,0)
 S DFTPREF=+$$GET1^DIQ(2006.1,$$PLACE^MAGBAPI(DUZ(2)),100,"I") ; DBI - SEB 9/20/2002
"RTN","MAGGTUP",86,0)
 I DFTPREF,$D(^MAG(2006.18,DFTPREF)) D DEFUSER(NEWPREF,DFTPREF) Q
"RTN","MAGGTUP",87,0)
 ;    save the User name, Setting Name 
"RTN","MAGGTUP",88,0)
 S N0=$P(^MAG(2006.18,NEWPREF,0),U,1,4)
"RTN","MAGGTUP",89,0)
 D DFLTARR(.DFTSET)
"RTN","MAGGTUP",90,0)
 M ^MAG(2006.18,NEWPREF)=DFTSET($J)
"RTN","MAGGTUP",91,0)
 ;    reset User name, Setting name.
"RTN","MAGGTUP",92,0)
 S $P(^MAG(2006.18,NEWPREF,0),U,1,4)=N0
"RTN","MAGGTUP",93,0)
 Q
"RTN","MAGGTUP",94,0)
DEFUSER(NEWPREF,DFTPREF) ;Merge New User preference with the Default User as defined
"RTN","MAGGTUP",95,0)
 ; in the Imaging Site Parameters file
"RTN","MAGGTUP",96,0)
 ;    NEWPREF  =  new IMAGING USER PREFERENCE (IEN)
"RTN","MAGGTUP",97,0)
 ;    DFLTPREF =  DEFAULT USER PREFERENCE in the IMAGING SITE PARAMETERS File
"RTN","MAGGTUP",98,0)
 ; 
"RTN","MAGGTUP",99,0)
 N X0
"RTN","MAGGTUP",100,0)
 S X0=$P(^MAG(2006.18,NEWPREF,0),"^",1,4)
"RTN","MAGGTUP",101,0)
 M ^MAG(2006.18,NEWPREF)=^MAG(2006.18,DFTPREF)
"RTN","MAGGTUP",102,0)
 S $P(^MAG(2006.18,NEWPREF,0),"^",1,4)=X0
"RTN","MAGGTUP",103,0)
 ;    remove default user's default Filter from new user's preferences.
"RTN","MAGGTUP",104,0)
 S $P(^MAG(2006.18,NEWPREF,"LISTWIN1"),"^",3)=""
"RTN","MAGGTUP",105,0)
 Q
"RTN","MAGGTUP",106,0)
DFLTARR(ARR) ; Return an Array of All Default settings
"RTN","MAGGTUP",107,0)
 K ARR($J)
"RTN","MAGGTUP",108,0)
 S ARR($J,0)="^^^^0^1^1^"
"RTN","MAGGTUP",109,0)
 S ARR($J,"DICOMWIN")="2^320^292^724^487"
"RTN","MAGGTUP",110,0)
 S ARR($J,"IMAGEGRID")="2^487^2^786^426^1^35,73,67,34,110,46,69,96,76,79,25,0,0^1^"
"RTN","MAGGTUP",111,0)
 S ARR($J,"REPORT")="2^2^333^722^437^Courier^^10"
"RTN","MAGGTUP",112,0)
 S ARR($J,"RADLISTWIN")="2^487^10^433^172^0"
"RTN","MAGGTUP",113,0)
 S ARR($J,"MAIN")="2^1^1^487^172^1"
"RTN","MAGGTUP",114,0)
 S ARR($J,"ABS")="2^1^160^486^326^134^113^1^1^3^24^2^1^0"
"RTN","MAGGTUP",115,0)
 S ARR($J,"FULL")="2^310^282^714^487^674^447^^1^1^4^1^0^1"
"RTN","MAGGTUP",116,0)
 S ARR($J,"GROUP")="2^24^231^427^457^110^70^^1^2^24^2^1^0"
"RTN","MAGGTUP",117,0)
 S ARR($J,"DOC")="2^298^24^729^429^0^0^3^1^2^4^2^0"
"RTN","MAGGTUP",118,0)
 S ARR($J,"CAPCONFIG")="1^1^1^0^0^0^0^1^0^1^0^0^1^1^0^0^1^1^1^1^1^1^200^400^300^100^500^0^0^1^0^1"
"RTN","MAGGTUP",119,0)
 ;                    1   2   3   4   5  6  7  8 9 0 1  2   3  456 7 8
"RTN","MAGGTUP",120,0)
 S ARR($J,"CAPTIU")="261^414^455^654^66^67^280^1^1^~^1^100^-12^^^1^1^^"
"RTN","MAGGTUP",121,0)
 S ARR($J,"RIVER")="1^0^0^0^"
"RTN","MAGGTUP",122,0)
 S ARR($J,"APPMSG")="0^0^"
"RTN","MAGGTUP",123,0)
 S ARR($J,"APPPREFS")="1^7^7^10"
"RTN","MAGGTUP",124,0)
 S ARR($J,"LISTWIN1")="0^0^^1^0"
"RTN","MAGGTUP",125,0)
 ;--- MAG*3*93
"RTN","MAGGTUP",126,0)
 S ARR($J,"IEDIT")="2^445^295^710^433"
"RTN","MAGGTUP",127,0)
 S ARR($J,"ISTYLE")="0^0^1^1^1^3^1^1^0^1^1^1^,101,460,288,2,2,288,298,259,160,"
"RTN","MAGGTUP",128,0)
 S ARR($J,"IVERIFY")="2^184^56^1201^871^1^0^1^1^44,139,0,0,0,42,0,0,0,0,0,0,0,0,0,58,0,,"
"RTN","MAGGTUP",129,0)
 Q
"RTN","MAGGTUX")
0^46^B85905158
"RTN","MAGGTUX",1,0)
MAGGTUX ;WIOFO/GEK/SG - Imaging utility to validate INDEX values. ; 2/5/09 1:58pm
"RTN","MAGGTUX",2,0)
 ;;3.0;IMAGING;**59,93**;Dec 02, 2009;Build 163
"RTN","MAGGTUX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGTUX",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGTUX",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGTUX",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGTUX",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGTUX",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGTUX",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGTUX",11,0)
 ;; |                                                               |
"RTN","MAGGTUX",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGTUX",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGTUX",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGTUX",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGTUX",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGTUX",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGTUX",18,0)
 ;;
"RTN","MAGGTUX",19,0)
 Q
"RTN","MAGGTUX",20,0)
CHECK ; Check the entries, NO DATABASE changes.
"RTN","MAGGTUX",21,0)
 D 1(0,"MAGGTUXC")
"RTN","MAGGTUX",22,0)
 Q
"RTN","MAGGTUX",23,0)
FIX ; Fix/Check INDEX values in Image File entries. 
"RTN","MAGGTUX",24,0)
 D 1(1,"MAGGTUX")
"RTN","MAGGTUX",25,0)
 Q
"RTN","MAGGTUX",26,0)
1(COMMIT,MAGN) ; Start here.
"RTN","MAGGTUX",27,0)
 I '$D(DUZ) W !,"DUZ is undefined.   Quitting." Q
"RTN","MAGGTUX",28,0)
 N DESC,ANS,ZTDTH,ZTIO,ZTRTN,ZTDESC,ZTSAVE,ZTSK ; -- TaskMan variables
"RTN","MAGGTUX",29,0)
 I 'COMMIT W !,"   **** Just Checking entries, no DataBase changes will occur. ****",!
"RTN","MAGGTUX",30,0)
 W !,"Validate Image Index Terms:"
"RTN","MAGGTUX",31,0)
 W !,"  The Image File is searched for invalid or missing index values."
"RTN","MAGGTUX",32,0)
 W !,"  The Image Index Generate and Commit functions are used"
"RTN","MAGGTUX",33,0)
 W !,"  to fix the incorrect Index values."
"RTN","MAGGTUX",34,0)
 W !
"RTN","MAGGTUX",35,0)
 W !,"For a summary of the index values that will be changed."
"RTN","MAGGTUX",36,0)
 W !,"  use the menu option:   CHK  -  Check Image File for missing Index values"
"RTN","MAGGTUX",37,0)
 W !," "
"RTN","MAGGTUX",38,0)
 W !,"To Fix the invalid index values in the Image File (#2005)."
"RTN","MAGGTUX",39,0)
 W !,"  use the menu option:   FIX  -  Fix missing Index values in Image File"
"RTN","MAGGTUX",40,0)
 W !
"RTN","MAGGTUX",41,0)
 I 'COMMIT W !,"   **** Just Checking entries, No DataBase changes will occur. ****",!
"RTN","MAGGTUX",42,0)
 E  W !,"   **** Fixing invalid entries,  DataBase changes Will occur. ****",!
"RTN","MAGGTUX",43,0)
 D TASKMAN^MAGXCVP(.ANS)
"RTN","MAGGTUX",44,0)
 I "^"=ANS W !,"Canceled. " Q
"RTN","MAGGTUX",45,0)
 S ZTSK=0 I ANS="" D START(COMMIT,MAGN,0) Q
"RTN","MAGGTUX",46,0)
 S ZTRTN="TASK^MAGGTUX"
"RTN","MAGGTUX",47,0)
 S DESC=$S(COMMIT:"FIX INVALID INDEX VALUES",1:"CHECK FOR INVALID INDEX VALUES")
"RTN","MAGGTUX",48,0)
 S ZTDESC=DESC
"RTN","MAGGTUX",49,0)
 S ZTDTH=ANS,ZTIO=""
"RTN","MAGGTUX",50,0)
 S ZTSAVE("COMMIT")=COMMIT,ZTSAVE("MAGN")=MAGN,ZTSAVE("QUEUED")=1
"RTN","MAGGTUX",51,0)
 D ^%ZTLOAD
"RTN","MAGGTUX",52,0)
 W !,DESC_" Has been Queued as task# : "_ZTSK
"RTN","MAGGTUX",53,0)
 Q
"RTN","MAGGTUX",54,0)
TASK ;
"RTN","MAGGTUX",55,0)
 D START(COMMIT,MAGN,QUEUED)
"RTN","MAGGTUX",56,0)
 Q
"RTN","MAGGTUX",57,0)
START(COMMIT,MAGN,QUEUED) ;Start here.
"RTN","MAGGTUX",58,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERR^"_$T(+0)
"RTN","MAGGTUX",59,0)
 L +MAGTMP("VALIDATE INDEX TERMS"):0 E  D  Q
"RTN","MAGGTUX",60,0)
 . I 'QUEUED W !,"Image Index Validate process is currently running.  Try later." Q
"RTN","MAGGTUX",61,0)
 . S XMSUB="Image Index Validate wasn't started"
"RTN","MAGGTUX",62,0)
 . S ^TMP($J,"MAGQ",1)="You attempted to Task the Index Validate process, but the"
"RTN","MAGGTUX",63,0)
 . S ^TMP($J,"MAGQ",2)="Image Validate process is currently running.  Please try later."
"RTN","MAGGTUX",64,0)
 . D MAILSHR^MAGQBUT1
"RTN","MAGGTUX",65,0)
 . Q
"RTN","MAGGTUX",66,0)
 N DOT,N0,N40,OL40,N2,MDFN,IXT,IXP,IXS,IXO,ST,ET,NORG,ISGRP,X,J,RADCT,RADCR,CDT,IEN,INDXD
"RTN","MAGGTUX",67,0)
 N PKG,SD,TIM,TITLE,TIUDA,TTLDA,MRY,LNT,LNI,X1,STTIME,ENDTIME,ELSP,%H,%
"RTN","MAGGTUX",68,0)
 N GRINT,NI,NOPAT,NOZ,INVG,CRCT,INVO,GRINI,NT,CT,CTALL,STOP,LN,GO1,GO0,ORG,OFX,NOMERG,OKMERG,FIX
"RTN","MAGGTUX",69,0)
 S (GRINT,NI,NOPAT,NOZ,INVG,CRCT,INVO,GRINI,NT,CT,CTALL,STOP,LN,GO1,GO0,ORG,OFX,NOMERG,OKMERG,FIX)=0
"RTN","MAGGTUX",70,0)
 ; Write 200 lines to screen.
"RTN","MAGGTUX",71,0)
 S DOT=$P(($P(^MAG(2005,0),"^",4)/200),".",1)
"RTN","MAGGTUX",72,0)
 S IEN="A"
"RTN","MAGGTUX",73,0)
 ; if it was started and stopped, continue.
"RTN","MAGGTUX",74,0)
 ; ^XTMP("MAGGTUX,0)=PurgeDate^CreateDate^LastIENChecked^HighestIENChecked^NumberChecked^Description
"RTN","MAGGTUX",75,0)
 ; 
"RTN","MAGGTUX",76,0)
 I $D(^XTMP(MAGN,0)) D INIT^MAGGTUX2
"RTN","MAGGTUX",77,0)
 S STTIME=$$NOW^XLFDT
"RTN","MAGGTUX",78,0)
 I 'QUEUED D  I STOP G END
"RTN","MAGGTUX",79,0)
 . I 'COMMIT W !!,"Just Checking Index Terms, NO CHANGES to database. (Q to quit)"
"RTN","MAGGTUX",80,0)
 . E  W !!,"Invalid entries will be fixed.  Database will be modified (Q to quit)"
"RTN","MAGGTUX",81,0)
 . W !!,"   Press 'Q' at any time to QUIT.  It can be resumed later.",!
"RTN","MAGGTUX",82,0)
 . W !,"Ready to Start   Y/N    N// " R X:30
"RTN","MAGGTUX",83,0)
 . I "Nn"[X W !!,"Canceled." S STOP=1 Q
"RTN","MAGGTUX",84,0)
 . W !,"Starting at "_$$FMTE^XLFDT(STTIME)
"RTN","MAGGTUX",85,0)
 . Q
"RTN","MAGGTUX",86,0)
 ;  Start.....
"RTN","MAGGTUX",87,0)
 ;  Set XTMP Dates
"RTN","MAGGTUX",88,0)
 I IEN="A" K ^XTMP(MAGN) S $P(^XTMP(MAGN,0),"^",4)=$O(^MAG(2005,IEN),-1) ; Keep the Highest IEN checked.
"RTN","MAGGTUX",89,0)
 S X1=DT,X2=14 D C^%DTC S $P(^XTMP(MAGN,0),"^",1,2)=X_"^"_$$NOW^XLFDT
"RTN","MAGGTUX",90,0)
 S $P(^XTMP(MAGN,0),"^",6)="Fix Invalid Index Nodes"
"RTN","MAGGTUX",91,0)
 ; Set variables to check the CR - CT problem.
"RTN","MAGGTUX",92,0)
 S RADCR=+$O(^MAG(2005.85,"B","COMPUTED RADIOGRAPHY",""))
"RTN","MAGGTUX",93,0)
 S RADCT=+$O(^MAG(2005.85,"B","COMPUTED TOMOGRAPHY",""))
"RTN","MAGGTUX",94,0)
 ;
"RTN","MAGGTUX",95,0)
 D PRHDR
"RTN","MAGGTUX",96,0)
 S ST=$P($H,",",2) ; Start Time
"RTN","MAGGTUX",97,0)
 S TIM=$P(^MAG(2005,0),"^",4) ; Total Images
"RTN","MAGGTUX",98,0)
 F  S IEN=$O(^MAG(2005,IEN),-1) Q:IEN=0  D  I STOP Q  ;G END
"RTN","MAGGTUX",99,0)
 . R X:0 I X="Q" D  Q
"RTN","MAGGTUX",100,0)
 . . S STOP=1
"RTN","MAGGTUX",101,0)
 . . I 'QUEUED W ! D MES^XPDUTL(" Function interrupted. ")
"RTN","MAGGTUX",102,0)
 . . Q
"RTN","MAGGTUX",103,0)
 . S CTALL=CTALL+1
"RTN","MAGGTUX",104,0)
 . Q:$$ISDEL^MAGGI11(IEN)
"RTN","MAGGTUX",105,0)
 . S ISGRP=0
"RTN","MAGGTUX",106,0)
 . S N0=$G(^MAG(2005,IEN,0))
"RTN","MAGGTUX",107,0)
 . S N2=$G(^MAG(2005,IEN,2))
"RTN","MAGGTUX",108,0)
 . S N40=$G(^MAG(2005,IEN,40))
"RTN","MAGGTUX",109,0)
 . S MDFN=+$P(N0,"^",7)
"RTN","MAGGTUX",110,0)
 . S IXT=$P(N40,"^",3),IXS=$P(N40,"^",5),IXP=$P(N40,"^",4),IXO=$P(N40,"^",6)
"RTN","MAGGTUX",111,0)
 . S CT=CT+1
"RTN","MAGGTUX",112,0)
 . I (CT=1)!(CT#DOT=0)!($O(^MAG(2005,IEN),-1)=0) D PRLINE
"RTN","MAGGTUX",113,0)
 . ; Count NO Patient, No Zero Node
"RTN","MAGGTUX",114,0)
 . I 'MDFN S NOPAT=NOPAT+1 Q
"RTN","MAGGTUX",115,0)
 . I N0="" S NOZ=NOZ+1 Q
"RTN","MAGGTUX",116,0)
 . ; Count Groups of 1, No change.
"RTN","MAGGTUX",117,0)
 . I $P(N0,"^",6)=11 S ISGRP=1 I $P($G(^MAG(2005,IEN,1,0)),"^",4)=1 S GO1=GO1+1
"RTN","MAGGTUX",118,0)
 . I ISGRP I $O(^MAG(2005,IEN,1,0))="" S GO0=GO0+1 Q
"RTN","MAGGTUX",119,0)
 . ;
"RTN","MAGGTUX",120,0)
 . ;  Chk ORIGIN (fld #45) had 'VA' not 'V'.
"RTN","MAGGTUX",121,0)
 . I '("VNFD"[$P(N40,"^",6)) D CHK45^MAGGTUX2(.N40,IEN)
"RTN","MAGGTUX",122,0)
 . ;
"RTN","MAGGTUX",123,0)
 . ; Was a CR, CT mismapping, this will fix it.
"RTN","MAGGTUX",124,0)
 . I RADCR=IXP D CHKCR^MAGGTUX2(.N40,IEN)
"RTN","MAGGTUX",125,0)
 . ; 
"RTN","MAGGTUX",126,0)
 . ; Validate the Proc/Event <-> Spec/SubSpec dependency
"RTN","MAGGTUX",127,0)
 . ; Check TYPE is Clinical, All are Active.
"RTN","MAGGTUX",128,0)
 . I IXT D VALIND^MAGGTUX2 Q  ;If image has TYPE, Check then Quit.
"RTN","MAGGTUX",129,0)
 . ;
"RTN","MAGGTUX",130,0)
 . ; Counting problems
"RTN","MAGGTUX",131,0)
 . ; If no index values.
"RTN","MAGGTUX",132,0)
 . I N40="" D
"RTN","MAGGTUX",133,0)
 . . I $P(N0,"^",10) S GRINI=GRINI+1 ; GRoupImageNoIndex
"RTN","MAGGTUX",134,0)
 . . E  S NI=NI+1 ; NoIndex
"RTN","MAGGTUX",135,0)
 . . S LNI=IEN_"-"_$P(N2,"^",1)
"RTN","MAGGTUX",136,0)
 . . Q
"RTN","MAGGTUX",137,0)
 . ;
"RTN","MAGGTUX",138,0)
 . ; If this case follows the Majority of invalid 40 Nodes
"RTN","MAGGTUX",139,0)
 . ; i.e. PKG^^^^^V  PKG^^^^^VA then Kill and ReGenerate later
"RTN","MAGGTUX",140,0)
 . I (N40'="") D
"RTN","MAGGTUX",141,0)
 . . I $P(N0,"^",10) S GRINT=GRINT+1 ; Group Image with No Type
"RTN","MAGGTUX",142,0)
 . . E  S NT=NT+1  ; NoType :  group or single
"RTN","MAGGTUX",143,0)
 . . S ^XTMP(MAGN,"AAN40",N40)=$G(^XTMP(MAGN,"AAN40",N40))+1
"RTN","MAGGTUX",144,0)
 . . S ^XTMP(MAGN,"AAN40",N40,"IEN")=IEN
"RTN","MAGGTUX",145,0)
 . . S LNT=IEN_"-"_$P(N2,"^",1)
"RTN","MAGGTUX",146,0)
 . . ; if 40 node is just default PKG and ORIGIN,  we kill and regenerate.
"RTN","MAGGTUX",147,0)
 . . ; Don't kill N40 if Origin is F,D or N
"RTN","MAGGTUX",148,0)
 . . I N40?.A1"^^^^^".E I "V"[$P(N40,"^",6) S N40=""
"RTN","MAGGTUX",149,0)
 . . Q
"RTN","MAGGTUX",150,0)
 . ;
"RTN","MAGGTUX",151,0)
 . ; Use Patch 31 Utils to Generate Index values
"RTN","MAGGTUX",152,0)
 . I N40="" D  Q
"RTN","MAGGTUX",153,0)
 . . I COMMIT D
"RTN","MAGGTUX",154,0)
 . . . ; GENERATE AND COMMIT INDEX VALUES.
"RTN","MAGGTUX",155,0)
 . . . D GENIEN^MAGXCVI(IEN,.INDXD)
"RTN","MAGGTUX",156,0)
 . . . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGTUX",157,0)
 . . . S ^MAG(2005,IEN,40)=INDXD
"RTN","MAGGTUX",158,0)
 . . . S ^MAGIXCVT(2006.96,IEN)=2 ; status = 2 ( generate by Patch 59) 
"RTN","MAGGTUX",159,0)
 . . . S FIX=FIX+1
"RTN","MAGGTUX",160,0)
 . . . D ENTRY^MAGLOG("INDEX-ALL",DUZ,IEN,"TUX59",MDFN,1)
"RTN","MAGGTUX",161,0)
 . . . Q
"RTN","MAGGTUX",162,0)
 . . Q
"RTN","MAGGTUX",163,0)
 . ;  40 node is missing TYPE
"RTN","MAGGTUX",164,0)
 . ;   - has Spec and/or Proc 
"RTN","MAGGTUX",165,0)
 . ;   - or Origin is not V.
"RTN","MAGGTUX",166,0)
 . ; Compare old to new, only set missing pieces, (don't overwrite)
"RTN","MAGGTUX",167,0)
 . ; If the merged 40 node doesn't pass VAL59G,
"RTN","MAGGTUX",168,0)
 . ; Then revert to old Spec and Proc but keep Generated Type.
"RTN","MAGGTUX",169,0)
 . ; 
"RTN","MAGGTUX",170,0)
 . D GENIEN^MAGXCVI(IEN,.INDXD)
"RTN","MAGGTUX",171,0)
 . I $P(INDXD,"^",6)="" S $P(INDXD,"^",6)="V"
"RTN","MAGGTUX",172,0)
 . S OL40=N40
"RTN","MAGGTUX",173,0)
 . ; We're not changing existing values of Spec,Proc or Origin 
"RTN","MAGGTUX",174,0)
 . F J=1:1:6 I '$L($P(N40,"^",J)) S $P(N40,"^",J)=$P(INDXD,"^",J)
"RTN","MAGGTUX",175,0)
 . ;  Validate the merged Spec and Proc dependency, may be invalid.
"RTN","MAGGTUX",176,0)
 . D VALMERG^MAGGTUX2(OL40,.N40) ; 
"RTN","MAGGTUX",177,0)
 . I '$D(^XTMP(MAGN,"AAN40",OL40,"CVT",INDXD)) S ^XTMP(MAGN,"AAN40",OL40,"CVT",INDXD)=N40
"RTN","MAGGTUX",178,0)
 . I COMMIT D
"RTN","MAGGTUX",179,0)
 . . S ^MAG(2005,IEN,40)=N40
"RTN","MAGGTUX",180,0)
 . . S FIX=FIX+1
"RTN","MAGGTUX",181,0)
 . . S ^MAGIXCVT(2006.96,IEN)=2 ; 2 is set of codes - converted by Patch 59 
"RTN","MAGGTUX",182,0)
 . . D ENTRY^MAGLOG("INDEX-42",DUZ,IEN,"TUX59",MDFN,1)
"RTN","MAGGTUX",183,0)
 . . Q
"RTN","MAGGTUX",184,0)
 . Q
"RTN","MAGGTUX",185,0)
 S ENDTIME=$$NOW^XLFDT
"RTN","MAGGTUX",186,0)
 S %H=$P($H,",")_","_($P($H,",",2)-ST) D YMD^%DTC
"RTN","MAGGTUX",187,0)
 S ELSP=$P($$FMTE^XLFDT(X_%),"@",2)
"RTN","MAGGTUX",188,0)
 S ^XTMP(MAGN,0,"END")=$$FMTE^XLFDT(ENDTIME)_"^"_ELSP
"RTN","MAGGTUX",189,0)
 S $P(^XTMP(MAGN,0),"^",3)=IEN ; last IEN Checked.
"RTN","MAGGTUX",190,0)
 S $P(^XTMP(MAGN,0),"^",5)=$P(^XTMP(MAGN,0),"^",5)+CT
"RTN","MAGGTUX",191,0)
 ;
"RTN","MAGGTUX",192,0)
 S ^XTMP(MAGN,"AATCHK")=$G(^XTMP(MAGN,"AATCHK"))+CT
"RTN","MAGGTUX",193,0)
 S ^XTMP(MAGN,"AANT")=NT
"RTN","MAGGTUX",194,0)
 S ^XTMP(MAGN,"AANI")=NI
"RTN","MAGGTUX",195,0)
 S ^XTMP(MAGN,"AAGRINT")=GRINT
"RTN","MAGGTUX",196,0)
 S ^XTMP(MAGN,"AAGRINI")=GRINI
"RTN","MAGGTUX",197,0)
 S ^XTMP(MAGN,"AAGO1")=GO1
"RTN","MAGGTUX",198,0)
 S ^XTMP(MAGN,"AAGO0")=GO0
"RTN","MAGGTUX",199,0)
 S ^XTMP(MAGN,"AAOFX")=OFX
"RTN","MAGGTUX",200,0)
 S ^XTMP(MAGN,"AAINVG")=INVG
"RTN","MAGGTUX",201,0)
 S ^XTMP(MAGN,"AAINVO")=INVO
"RTN","MAGGTUX",202,0)
 S ^XTMP(MAGN,"AANOMERG")=NOMERG
"RTN","MAGGTUX",203,0)
 S ^XTMP(MAGN,"AAOKMERG")=OKMERG
"RTN","MAGGTUX",204,0)
 S ^XTMP(MAGN,"AACRCT")=CRCT
"RTN","MAGGTUX",205,0)
 S ^XTMP(MAGN,"AAN40","no index")=GRINI+NI
"RTN","MAGGTUX",206,0)
 S ^XTMP(MAGN,"AANOPAT")=NOPAT
"RTN","MAGGTUX",207,0)
 S ^XTMP(MAGN,"AANOZ")=NOZ
"RTN","MAGGTUX",208,0)
 S ^XTMP(MAGN,0,"NT")=$G(LNT)
"RTN","MAGGTUX",209,0)
 S ^XTMP(MAGN,0,"NI")=$G(LNI)
"RTN","MAGGTUX",210,0)
 I FIX S ^XTMP(MAGN,"AAFIX")=FIX
"RTN","MAGGTUX",211,0)
 I 'QUEUED D DISPLAY^MAGGTUX1
"RTN","MAGGTUX",212,0)
 D MAIL^MAGGTUX1
"RTN","MAGGTUX",213,0)
 ; KILL LOCKS.
"RTN","MAGGTUX",214,0)
END ;
"RTN","MAGGTUX",215,0)
 L -MAGTMP("VALIDATE INDEX TERMS")
"RTN","MAGGTUX",216,0)
 Q
"RTN","MAGGTUX",217,0)
ERR ; 
"RTN","MAGGTUX",218,0)
 L -MAGTMP("VALIDATE INDEX TERMS")
"RTN","MAGGTUX",219,0)
 D @^%ZOSF("ERRTN")
"RTN","MAGGTUX",220,0)
 Q
"RTN","MAGGTUX",221,0)
EST() ;Estimate time remaining.
"RTN","MAGGTUX",222,0)
 Q:'$G(ST) ""    ; we didn't start yet.
"RTN","MAGGTUX",223,0)
 N ET,EST,PS             ; Elapsed Time, Estimate Time, Number Per Second.
"RTN","MAGGTUX",224,0)
 S ET=$P($H,",",2)-ST I ET<2 Q "" ; Elapsed Time (seconds)
"RTN","MAGGTUX",225,0)
 I (CTALL/ET)<1 Q ""
"RTN","MAGGTUX",226,0)
 S PS=$P(CTALL/ET,".") ; number Per second
"RTN","MAGGTUX",227,0)
 S EST=$P(((TIM-CTALL)/PS),".") ;remaining/ (num/sec) = seconds remaining
"RTN","MAGGTUX",228,0)
 S %H=$P($H,",")_","_EST D YMD^%DTC
"RTN","MAGGTUX",229,0)
 Q $P($$FMTE^XLFDT(X_%),"@",2)
"RTN","MAGGTUX",230,0)
 ;
"RTN","MAGGTUX",231,0)
PRLINE ; Print a line of current counts
"RTN","MAGGTUX",232,0)
 Q:QUEUED
"RTN","MAGGTUX",233,0)
 S CDT=$$FMTE^XLFDT($P($G(^MAG(2005,IEN,2)),"^",1),"2DF") ; Capture DaTe
"RTN","MAGGTUX",234,0)
 W !,IEN,?10,CDT,?22,CT,?36,NT,?48,NI,?64,$$EST_" ..."
"RTN","MAGGTUX",235,0)
 S LN=LN+1 I LN#10=0 D PRHDR
"RTN","MAGGTUX",236,0)
 Q
"RTN","MAGGTUX",237,0)
PRHDR ; Print a header and estimate of time.
"RTN","MAGGTUX",238,0)
 ; For Test DataBase, put code to Hang here for 1 sec. (magslow)
"RTN","MAGGTUX",239,0)
 Q:QUEUED
"RTN","MAGGTUX",240,0)
 I 'COMMIT W !,"Just Checking Index Terms, NO CHANGES to database. (Q to quit)"
"RTN","MAGGTUX",241,0)
 W !,"IEN       Saved       #checked   No Type     No Index values    est: "
"RTN","MAGGTUX",242,0)
 Q
"RTN","MAGGTUX",243,0)
REVIEW G REVIEW^MAGGTUX1
"RTN","MAGGTUX",244,0)
 Q
"RTN","MAGIPS93")
0^^B176674164
"RTN","MAGIPS93",1,0)
MAGIPS93 ;WOIFO/SG - INSTALL CODE FOR MAG*3*93 ; 5/13/09 10:01am
"RTN","MAGIPS93",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGIPS93",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIPS93",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPS93",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIPS93",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIPS93",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIPS93",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIPS93",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIPS93",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIPS93",11,0)
 ;; |                                                               |
"RTN","MAGIPS93",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIPS93",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIPS93",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIPS93",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIPS93",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIPS93",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIPS93",18,0)
 ;
"RTN","MAGIPS93",19,0)
 ; There are no environment checks here but the MAGIPS93 has to be
"RTN","MAGIPS93",20,0)
 ; referenced by the "Environment Check Routine" field of the KIDS
"RTN","MAGIPS93",21,0)
 ; build so that entry points of the routine are available to the
"RTN","MAGIPS93",22,0)
 ; KIDS during all installation phases.
"RTN","MAGIPS93",23,0)
 Q
"RTN","MAGIPS93",24,0)
 ;
"RTN","MAGIPS93",25,0)
 ;+++++ INSTALLATION ERROR HANDLING
"RTN","MAGIPS93",26,0)
ERROR ;
"RTN","MAGIPS93",27,0)
 S:$D(XPDNM) XPDABORT=1
"RTN","MAGIPS93",28,0)
 ;--- Display the messages and store them to the INSTALL file
"RTN","MAGIPS93",29,0)
 D DUMP^MAGUERR1(),ABTMSG^MAGKIDS()
"RTN","MAGIPS93",30,0)
 Q
"RTN","MAGIPS93",31,0)
 ;
"RTN","MAGIPS93",32,0)
 ;+++++ UPDATES/FIXES THE DELETED IMAGE ENTRY
"RTN","MAGIPS93",33,0)
 ;
"RTN","MAGIPS93",34,0)
 ; MAGIEN        IEN of an entry of the IMAGE AUDIT file (#2005.1)
"RTN","MAGIPS93",35,0)
 ;
"RTN","MAGIPS93",36,0)
 ; Input Variables
"RTN","MAGIPS93",37,0)
 ; ===============
"RTN","MAGIPS93",38,0)
 ;   MAGSTAT
"RTN","MAGIPS93",39,0)
 ;
"RTN","MAGIPS93",40,0)
 ; Return Values
"RTN","MAGIPS93",41,0)
 ; =============
"RTN","MAGIPS93",42,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGIPS93",43,0)
 ;            0  Ok
"RTN","MAGIPS93",44,0)
 ;
"RTN","MAGIPS93",45,0)
MAGAUDIT(MAGIEN) ;
"RTN","MAGIPS93",46,0)
 N MAGNODE,MAGRC,STC,SUB,TMP
"RTN","MAGIPS93",47,0)
 S MAGNODE=$NA(^MAG(2005.1,MAGIEN))
"RTN","MAGIPS93",48,0)
 Q:$D(@MAGNODE)<10 $$ERROR^MAGUERR(-22,,2005.1,MAGIEN_",")
"RTN","MAGIPS93",49,0)
 S STC=$P($G(@MAGNODE@(100)),U,8)  Q:STC=12 0  ; STATUS (113)
"RTN","MAGIPS93",50,0)
 S MAGRC=0
"RTN","MAGIPS93",51,0)
 ;
"RTN","MAGIPS93",52,0)
 ;=== Fix the subfile headers
"RTN","MAGIPS93",53,0)
 F SUB="1^2005.14P","4^2005.1106DA","5^2005.11PA","6^2005.1111A","99^2005.199D"  D
"RTN","MAGIPS93",54,0)
 . S TMP=$P(SUB,U)  Q:'($D(^MAG(2005.1,MAGIEN,TMP,0))#2)
"RTN","MAGIPS93",55,0)
 . S $P(^MAG(2005.1,MAGIEN,TMP,0),U,2)=$P(SUB,U,2)
"RTN","MAGIPS93",56,0)
 . Q
"RTN","MAGIPS93",57,0)
 ;
"RTN","MAGIPS93",58,0)
 ;=== Update STATUS field and create the corresponding audit record
"RTN","MAGIPS93",59,0)
 S TMP=+$P($G(@MAGNODE@(30)),U,2)   ; DELETED DATE (30.1)
"RTN","MAGIPS93",60,0)
 I TMP>0  D  Q:MAGRC<0 MAGRC
"RTN","MAGIPS93",61,0)
 . N IENS,MAGFDA,MAGMSG
"RTN","MAGIPS93",62,0)
 . S IENS="+1,"_MAGIEN_","
"RTN","MAGIPS93",63,0)
 . S MAGFDA(2005.199,IENS,.01)=TMP  ; DATE/TIME RECORDED
"RTN","MAGIPS93",64,0)
 . S MAGFDA(2005.199,IENS,.02)=113  ; FIELD NUMBER
"RTN","MAGIPS93",65,0)
 . ;--- USER = DELETED BY (30)
"RTN","MAGIPS93",66,0)
 . S MAGFDA(2005.199,IENS,.03)=$P($G(@MAGNODE@(30)),U)
"RTN","MAGIPS93",67,0)
 . ;--- OLD INTERNAL VALUE and OLD EXTERNAL VALUE
"RTN","MAGIPS93",68,0)
 . D:STC>0
"RTN","MAGIPS93",69,0)
 . . S MAGFDA(2005.199,IENS,1)=STC
"RTN","MAGIPS93",70,0)
 . . S:$G(MAGSTAT(STC))'="" MAGFDA(2005.199,IENS,2)=MAGSTAT(STC)
"RTN","MAGIPS93",71,0)
 . . Q
"RTN","MAGIPS93",72,0)
 . ;--- Create audit record for the status update
"RTN","MAGIPS93",73,0)
 . D UPDATE^DIE(,"MAGFDA",,"MAGMSG")
"RTN","MAGIPS93",74,0)
 . S:$G(DIERR) MAGRC=$$DBS^MAGUERR("MAGMSG",2005.1,MAGIEN_",")
"RTN","MAGIPS93",75,0)
 . Q
"RTN","MAGIPS93",76,0)
 S $P(@MAGNODE@(100),U,8)=12  ; STATUS = 'Deleted'
"RTN","MAGIPS93",77,0)
 ;
"RTN","MAGIPS93",78,0)
 ;===
"RTN","MAGIPS93",79,0)
 Q MAGRC
"RTN","MAGIPS93",80,0)
 ;
"RTN","MAGIPS93",81,0)
 ;+++++ BUILDS NEW INDEXES IN FILES #2005 AND #2005.1
"RTN","MAGIPS93",82,0)
 ;
"RTN","MAGIPS93",83,0)
 ; MAGSUSPEND    Task suspension parameters
"RTN","MAGIPS93",84,0)
 ;                 ^01: Suspend the task (0|1)
"RTN","MAGIPS93",85,0)
 ;                 ^02: Suspension start time (e.g. 7am: .07)
"RTN","MAGIPS93",86,0)
 ;                 ^03: Suspension end time (e.g. 8pm: .2)
"RTN","MAGIPS93",87,0)
 ;
"RTN","MAGIPS93",88,0)
 ; Input Variables
"RTN","MAGIPS93",89,0)
 ; ===============
"RTN","MAGIPS93",90,0)
 ;   XPDNM, ZTQUEUED
"RTN","MAGIPS93",91,0)
 ;
"RTN","MAGIPS93",92,0)
 ; Return Values
"RTN","MAGIPS93",93,0)
 ; =============
"RTN","MAGIPS93",94,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGIPS93",95,0)
 ;            0  Ok
"RTN","MAGIPS93",96,0)
 ;
"RTN","MAGIPS93",97,0)
 ; Notes
"RTN","MAGIPS93",98,0)
 ; =====
"RTN","MAGIPS93",99,0)
 ;
"RTN","MAGIPS93",100,0)
 ; This function also populates the STATUS field (113) and fixes
"RTN","MAGIPS93",101,0)
 ; headers of all multiples of the IMAGE AUDIT file (#2005.1).
"RTN","MAGIPS93",102,0)
 ;
"RTN","MAGIPS93",103,0)
NDXBLD(MAGSUSPEND) ;
"RTN","MAGIPS93",104,0)
 N MAGFILE       ; Number of the file that is being processed
"RTN","MAGIPS93",105,0)
 N MAGNOFMAUDIT  ; Controls image audit indexes (see AUDIT^MAGUXRF)
"RTN","MAGIPS93",106,0)
 N MAGROOT       ; Closed root of the file that is being processed
"RTN","MAGIPS93",107,0)
 N MAGSTAT       ; List of status codes and their descriptions
"RTN","MAGIPS93",108,0)
 ;
"RTN","MAGIPS93",109,0)
 N DTNEXT,MAGCNT,MAGIEN,MAGRC,SILENT,TH,TMP
"RTN","MAGIPS93",110,0)
 S SILENT=$S($G(XPDNM)'="":0,1:$D(ZTQUEUED)),MAGRC=0
"RTN","MAGIPS93",111,0)
 D:'SILENT BMES^MAGKIDS("Building new image indexes...")
"RTN","MAGIPS93",112,0)
 ;
"RTN","MAGIPS93",113,0)
 ;=== Get the image status codes
"RTN","MAGIPS93",114,0)
 D
"RTN","MAGIPS93",115,0)
 . N BUF,I
"RTN","MAGIPS93",116,0)
 . S BUF=$$GET1^DID(2005,113,,"POINTER")
"RTN","MAGIPS93",117,0)
 . F I=1:1  S TMP=$P(BUF,";",I)  Q:TMP=""  D
"RTN","MAGIPS93",118,0)
 . . S MAGSTAT(+TMP)=$P(TMP,":",2)
"RTN","MAGIPS93",119,0)
 . . Q
"RTN","MAGIPS93",120,0)
 . Q
"RTN","MAGIPS93",121,0)
 ;
"RTN","MAGIPS93",122,0)
 ;=== Do not update the AUDIT multiple (99)
"RTN","MAGIPS93",123,0)
 S MAGNOFMAUDIT=1
"RTN","MAGIPS93",124,0)
 ;
"RTN","MAGIPS93",125,0)
 ;=== Build the indexes
"RTN","MAGIPS93",126,0)
 F MAGFILE=2005,2005.1  D  Q:MAGRC<0
"RTN","MAGIPS93",127,0)
 . I 'SILENT  D  D MES^MAGKIDS(TMP_" file (#"_MAGFILE_")")
"RTN","MAGIPS93",128,0)
 . . S TMP=$$GET1^DID(MAGFILE,,,"NAME")
"RTN","MAGIPS93",129,0)
 . . Q
"RTN","MAGIPS93",130,0)
 . ;--- Check if the file has been processed already
"RTN","MAGIPS93",131,0)
 . I $$PRD^MAGKIDS(MAGFILE,93)  D:'SILENT  Q
"RTN","MAGIPS93",132,0)
 . . D MES^MAGKIDS("This file is already processed.")
"RTN","MAGIPS93",133,0)
 . . Q
"RTN","MAGIPS93",134,0)
 . ;--- Initialize
"RTN","MAGIPS93",135,0)
 . S XPDIDTOT=$$GET1^DID(MAGFILE,,,"ENTRIES")
"RTN","MAGIPS93",136,0)
 . I XPDIDTOT'>0  D:'SILENT MES^MAGKIDS("This file is empty.")  Q
"RTN","MAGIPS93",137,0)
 . S MAGROOT=$$ROOT^DILFD(MAGFILE,,1),DIK=$$OREF^DILF(MAGROOT)
"RTN","MAGIPS93",138,0)
 . ;--- Delete the indexes (in case of restart)
"RTN","MAGIPS93",139,0)
 . K @MAGROOT@("APDT")
"RTN","MAGIPS93",140,0)
 . K:MAGFILE=2005.1 @MAGROOT@("AGP"),^("APDTPX")
"RTN","MAGIPS93",141,0)
 . ;--- Process the file
"RTN","MAGIPS93",142,0)
 . S (MAGCNT,MAGIEN)=0
"RTN","MAGIPS93",143,0)
 . F  S MAGIEN=$O(@MAGROOT@(MAGIEN))  Q:'MAGIEN  D  Q:MAGRC<0
"RTN","MAGIPS93",144,0)
 . . I '(MAGCNT#1000)  D  Q:MAGRC<0
"RTN","MAGIPS93",145,0)
 . . . I '$D(ZTQUEUED)  D PROGRESS(MAGCNT)  Q
"RTN","MAGIPS93",146,0)
 . . . ;--- Check if task stop has been requested
"RTN","MAGIPS93",147,0)
 . . . I $$S^%ZTLOAD  S MAGRC=$$ERROR^MAGUERR(-1)  Q
"RTN","MAGIPS93",148,0)
 . . . ;--- Check if the task should be suspended
"RTN","MAGIPS93",149,0)
 . . . Q:'$G(MAGSUSPEND)
"RTN","MAGIPS93",150,0)
 . . . Q:$$NOW^XLFDT<$G(DTNEXT)
"RTN","MAGIPS93",151,0)
 . . . Q:'$$SUSPEND(.DTNEXT)
"RTN","MAGIPS93",152,0)
 . . . ;--- Suspend the task during the peak hours
"RTN","MAGIPS93",153,0)
 . . . F  D  Q:'TH!MAGRC<0
"RTN","MAGIPS93",154,0)
 . . . . S TH=$$FMDIFF^XLFDT(DTNEXT,$$NOW^XLFDT,2)
"RTN","MAGIPS93",155,0)
 . . . . I TH<60  S TH=0  Q       ; Do not HANG for less than a
"RTN","MAGIPS93",156,0)
 . . . . H $S(TH>3600:3600,1:TH)  ; minute and more than an hour
"RTN","MAGIPS93",157,0)
 . . . . ;--- Check if task stop has been requested
"RTN","MAGIPS93",158,0)
 . . . . S:$$S^%ZTLOAD MAGRC=$$ERROR^MAGUERR(-1)
"RTN","MAGIPS93",159,0)
 . . . . Q
"RTN","MAGIPS93",160,0)
 . . . Q
"RTN","MAGIPS93",161,0)
 . . S MAGCNT=MAGCNT+1
"RTN","MAGIPS93",162,0)
 . . ;--- Additional processing for IMAGE AUDIT record
"RTN","MAGIPS93",163,0)
 . . I MAGFILE=2005.1  S MAGRC=$$MAGAUDIT(MAGIEN)  Q:MAGRC<0
"RTN","MAGIPS93",164,0)
 . . ;--- Re-index the record
"RTN","MAGIPS93",165,0)
 . . D XREF(MAGFILE,MAGIEN)
"RTN","MAGIPS93",166,0)
 . . Q
"RTN","MAGIPS93",167,0)
 . ;--- Indicate the final state of the process
"RTN","MAGIPS93",168,0)
 . D:'$D(ZTQUEUED) PROGRESS(MAGCNT)
"RTN","MAGIPS93",169,0)
 . D PRD^MAGKIDS(MAGFILE,93,"A")
"RTN","MAGIPS93",170,0)
 . Q
"RTN","MAGIPS93",171,0)
 Q:MAGRC<0 MAGRC
"RTN","MAGIPS93",172,0)
 ;
"RTN","MAGIPS93",173,0)
 ;=== Success
"RTN","MAGIPS93",174,0)
 D:'SILENT MES^MAGKIDS("The indexes have been successfully built.")
"RTN","MAGIPS93",175,0)
 Q 0
"RTN","MAGIPS93",176,0)
 ;
"RTN","MAGIPS93",177,0)
 ;+++++ CALLBACK FUNCTION FOR THE IMGAGE INDEX CHECKPOINT
"RTN","MAGIPS93",178,0)
 ;
"RTN","MAGIPS93",179,0)
 ; Input Variables
"RTN","MAGIPS93",180,0)
 ; ===============
"RTN","MAGIPS93",181,0)
 ;   DUZ, XPDQUES, ZTQUEUED
"RTN","MAGIPS93",182,0)
 ;
"RTN","MAGIPS93",183,0)
NDXCP() ;
"RTN","MAGIPS93",184,0)
 N MAGRC
"RTN","MAGIPS93",185,0)
 S MAGRC=0
"RTN","MAGIPS93",186,0)
 ;
"RTN","MAGIPS93",187,0)
 ;=== Schedule a separate task that will build image indexes
"RTN","MAGIPS93",188,0)
 I $G(XPDQUES("POS02-MODE"))  D  Q MAGRC
"RTN","MAGIPS93",189,0)
 . N MSG,ZTCPU,ZTDESC,ZTDTH,ZTIO,ZTKIL,ZTPRI
"RTN","MAGIPS93",190,0)
 . N ZTRTN,ZTSAVE,ZTSK,ZTSYNC,ZTUCI
"RTN","MAGIPS93",191,0)
 . S ZTSAVE("MAGDUZ")=$G(DUZ)
"RTN","MAGIPS93",192,0)
 . S:$G(XPDQUES("POS10-SUSPEND")) ZTSAVE("MAGSUSPEND")="1^.07^.2"
"RTN","MAGIPS93",193,0)
 . S ZTRTN="NDXTASK^"_$T(+0),ZTIO=""
"RTN","MAGIPS93",194,0)
 . S ZTDESC="Image index builder (MAG*3*93)"
"RTN","MAGIPS93",195,0)
 . S ZTDTH=$G(XPDQUES("POS05-SCHEDULEAT"))
"RTN","MAGIPS93",196,0)
 . S:ZTDTH'>0 ZTDTH=$$NOW^XLFDT
"RTN","MAGIPS93",197,0)
 . D ^%ZTLOAD
"RTN","MAGIPS93",198,0)
 . I $G(ZTSK)=""  S MAGRC=$$ERROR^MAGUERR(-39)  Q
"RTN","MAGIPS93",199,0)
 . ;--- Display the confirmation message
"RTN","MAGIPS93",200,0)
 . S MSG(1)="It will rebuild indexes in the IMAGE (#2005) and IMAGE AUDIT (#2005.1)"
"RTN","MAGIPS93",201,0)
 . S MSG(2)="files and perform other post-processing actions."
"RTN","MAGIPS93",202,0)
 . D BMES^MAGKIDS("Task #"_ZTSK_" has been scheduled.",.MSG)
"RTN","MAGIPS93",203,0)
 . Q
"RTN","MAGIPS93",204,0)
 ;
"RTN","MAGIPS93",205,0)
 ;=== Build the indexes as part of the patch post-install
"RTN","MAGIPS93",206,0)
 Q $$NDXBLD()
"RTN","MAGIPS93",207,0)
 ;
"RTN","MAGIPS93",208,0)
 ;***** FORMATS AND PRINTS THE HELP TEXT FOR THE INDEX TASK MODE
"RTN","MAGIPS93",209,0)
NDXHLP(DIR,KIDS) ;
"RTN","MAGIPS93",210,0)
 ;;Patch MAG*3*93 defines new indexes for the IMAGE (#2005) and IMAGE 
"RTN","MAGIPS93",211,0)
 ;;AUDIT (#2005.1) files. These indexes can be built as a part of the
"RTN","MAGIPS93",212,0)
 ;;patch KIDS build installation or the post-install code can schedule
"RTN","MAGIPS93",213,0)
 ;;a separate task that will build the indexes.
"RTN","MAGIPS93",214,0)
 ;;
"RTN","MAGIPS93",215,0)
 ;;However, it appears that the Taskman is not running on this system.
"RTN","MAGIPS93",216,0)
 ;;As the result, you will not be given a choice and the indexes will
"RTN","MAGIPS93",217,0)
 ;;be built as part of the post-install. If you want to schedule a
"RTN","MAGIPS93",218,0)
 ;;separate indexing task, abort the installation, start the Taskman,
"RTN","MAGIPS93",219,0)
 ;;and restart the patch installation.
"RTN","MAGIPS93",220,0)
NDXHLP1 ;
"RTN","MAGIPS93",221,0)
 ;;Patch MAG*3*93 defines new indexes for the IMAGE (#2005) and IMAGE 
"RTN","MAGIPS93",222,0)
 ;;AUDIT (#2005.1) files. These indexes can be built in the current
"RTN","MAGIPS93",223,0)
 ;;session (this will block it for quite a long time) or a separate
"RTN","MAGIPS93",224,0)
 ;;task can be scheduled.
"RTN","MAGIPS93",225,0)
 ;;
"RTN","MAGIPS93",226,0)
 ;;However, it appears that the Taskman is not running on this system.
"RTN","MAGIPS93",227,0)
 ;;If you want to schedule a separate indexing task, exit this option,
"RTN","MAGIPS93",228,0)
 ;;start the Taskman, and run the option again.
"RTN","MAGIPS93",229,0)
 ;
"RTN","MAGIPS93",230,0)
 N DIWF,DIWL,DIWR,MAGI,MAGTAG,X
"RTN","MAGIPS93",231,0)
 S MAGTAG=$S($G(KIDS):"NDXHLP",1:"NDXHLP1")
"RTN","MAGIPS93",232,0)
 S DIWF="",DIWL=4,DIWR=$G(IOM,80)-DIWL+1
"RTN","MAGIPS93",233,0)
 K ^UTILITY($J,"W"),DIR("?")
"RTN","MAGIPS93",234,0)
 ;--- Format the main help text
"RTN","MAGIPS93",235,0)
 F MAGI=1:1  S X=$P($T(@MAGTAG+MAGI),";;",2)  Q:X=""  D ^DIWP
"RTN","MAGIPS93",236,0)
 S X=" "  D ^DIWP
"RTN","MAGIPS93",237,0)
 ;--- Add the warning if the Taskman is not running
"RTN","MAGIPS93",238,0)
 I '$$TM^%ZTLOAD  D
"RTN","MAGIPS93",239,0)
 . F MAGI=MAGI+1:1  S X=$P($T(@MAGTAG+MAGI),";;",2)  Q:X=""  D ^DIWP
"RTN","MAGIPS93",240,0)
 . Q
"RTN","MAGIPS93",241,0)
 E  D
"RTN","MAGIPS93",242,0)
 . S X="Enter 'Y' or 'N'; enter '^' to cancel. "  D ^DIWP
"RTN","MAGIPS93",243,0)
 . Q
"RTN","MAGIPS93",244,0)
 ;--- Load the help text into the ^DIR parameter and print it
"RTN","MAGIPS93",245,0)
 S MAGI=0
"RTN","MAGIPS93",246,0)
 F  S MAGI=$O(^UTILITY($J,"W",DIWL,MAGI))  Q:MAGI'>0  D
"RTN","MAGIPS93",247,0)
 . S DIR("?",MAGI)=$J("",DIWL-1)_^UTILITY($J,"W",DIWL,MAGI,0)
"RTN","MAGIPS93",248,0)
 . W !,DIR("?",MAGI)
"RTN","MAGIPS93",249,0)
 . Q
"RTN","MAGIPS93",250,0)
 W !
"RTN","MAGIPS93",251,0)
 ;--- Special processing for the last line of the help text
"RTN","MAGIPS93",252,0)
 S MAGI=+$O(DIR("?",""),-1)
"RTN","MAGIPS93",253,0)
 I MAGI>0  S DIR("?")=DIR("?",MAGI)  K DIR("?",MAGI)
"RTN","MAGIPS93",254,0)
 ;--- Cleanup
"RTN","MAGIPS93",255,0)
 K ^UTILITY($J,"W")
"RTN","MAGIPS93",256,0)
 Q
"RTN","MAGIPS93",257,0)
 ;
"RTN","MAGIPS93",258,0)
 ;+++++ RETURNS THE MESSAGE DESCRIBING RESULTS OF THE INDEX BUILD
"RTN","MAGIPS93",259,0)
 ;
"RTN","MAGIPS93",260,0)
 ; RC            Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGIPS93",261,0)
 ;
"RTN","MAGIPS93",262,0)
NDXMSG(RC) ;
"RTN","MAGIPS93",263,0)
 N PREFIX
"RTN","MAGIPS93",264,0)
 S PREFIX="MAG*3*93: "
"RTN","MAGIPS93",265,0)
 ;--- Error
"RTN","MAGIPS93",266,0)
 Q:RC<-1 PREFIX_RC
"RTN","MAGIPS93",267,0)
 ;--- Stopped by user
"RTN","MAGIPS93",268,0)
 Q:+RC=-1 PREFIX_"Image indexing task was stopped by the user."
"RTN","MAGIPS93",269,0)
 ;--- Success
"RTN","MAGIPS93",270,0)
 Q PREFIX_"New indexes of the image files have been built."
"RTN","MAGIPS93",271,0)
 ;
"RTN","MAGIPS93",272,0)
 ;***** BACKGROUND TASK THAT BUILDS THE IMAGE INDEXES
"RTN","MAGIPS93",273,0)
 ;
"RTN","MAGIPS93",274,0)
 ; Input Variables
"RTN","MAGIPS93",275,0)
 ; ===============
"RTN","MAGIPS93",276,0)
 ;
"RTN","MAGIPS93",277,0)
 ; MAGDUZ        Identifier of the user who started the task and who
"RTN","MAGIPS93",278,0)
 ;               will receive the alert when the task finishes (IEN
"RTN","MAGIPS93",279,0)
 ;               in the NEW PERSON file (#200)).
"RTN","MAGIPS93",280,0)
 ;
"RTN","MAGIPS93",281,0)
 ; MAGSUSPEND    Controls suspension of the task on working days
"RTN","MAGIPS93",282,0)
 ;                 ^01: Suspend the task (0|1)
"RTN","MAGIPS93",283,0)
 ;                 ^02: Start time (FileMan)
"RTN","MAGIPS93",284,0)
 ;                 ^03: End time (FileMan)
"RTN","MAGIPS93",285,0)
 ;
"RTN","MAGIPS93",286,0)
NDXTASK ;
"RTN","MAGIPS93",287,0)
 N MAGRC
"RTN","MAGIPS93",288,0)
 ;--- Build the indexes
"RTN","MAGIPS93",289,0)
 S MAGRC=$$NDXBLD($G(MAGSUSPEND))
"RTN","MAGIPS93",290,0)
 ;--- Send the alert
"RTN","MAGIPS93",291,0)
 D:$G(MAGDUZ)>0
"RTN","MAGIPS93",292,0)
 . N TMP,XQA,XQAARCH,XQACNDEL,XQADATA,XQAFLG,XQAGUID,XQAID
"RTN","MAGIPS93",293,0)
 . N XQAMSG,XQAOPT,XQAREVUE,XQAROU,XQASUPV,XQASURO,XQATEXT
"RTN","MAGIPS93",294,0)
 . S XQAMSG=$$NDXMSG(MAGRC)
"RTN","MAGIPS93",295,0)
 . S XQATEXT(1)=""
"RTN","MAGIPS93",296,0)
 . S XQATEXT(2)="Date/Time of completion: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","MAGIPS93",297,0)
 . S XQA(+MAGDUZ)="",XQAFLG="D"
"RTN","MAGIPS93",298,0)
 . S TMP=$$SETUP1^XQALERT
"RTN","MAGIPS93",299,0)
 . Q
"RTN","MAGIPS93",300,0)
 ;--- Keep the task descriptor only in case of error(s)
"RTN","MAGIPS93",301,0)
 S:MAGRC'<0 ZTREQ="@"
"RTN","MAGIPS93",302,0)
 K MAGDUZ,MAGSUSPEND
"RTN","MAGIPS93",303,0)
 Q
"RTN","MAGIPS93",304,0)
 ;
"RTN","MAGIPS93",305,0)
 ;***** POST-INSTALL CODE
"RTN","MAGIPS93",306,0)
POS ;
"RTN","MAGIPS93",307,0)
 N CALLBACK
"RTN","MAGIPS93",308,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGIPS93",309,0)
 ;
"RTN","MAGIPS93",310,0)
 ;--- Link new remote procedures to the Broker context option
"RTN","MAGIPS93",311,0)
 S CALLBACK="$$ADDRPCS^"_$NA(MAGKIDS1("RPCLST^"_$T(+0),"MAG WINDOWS"))
"RTN","MAGIPS93",312,0)
 I $$CP^MAGKIDS("MAG ATTACH RPCS",CALLBACK)<0  D ERROR  Q
"RTN","MAGIPS93",313,0)
 ;
"RTN","MAGIPS93",314,0)
 ;--- Enable version checking for all sites
"RTN","MAGIPS93",315,0)
 S CALLBACK="$$VERCHKON^MAGKIDS1"
"RTN","MAGIPS93",316,0)
 I $$CP^MAGKIDS("MAG VERSION CHECK",CALLBACK)<0  D ERROR  Q
"RTN","MAGIPS93",317,0)
 ;
"RTN","MAGIPS93",318,0)
 ;--- Restart the Imaging Utilization Report task
"RTN","MAGIPS93",319,0)
 I $$CP^MAGKIDS("MAG REPORT TASK","$$RPTSKCP^"_$T(+0))<0  D ERROR  Q
"RTN","MAGIPS93",320,0)
 ;
"RTN","MAGIPS93",321,0)
 ;--- Build new indexes in the files #2005 and #2005.1
"RTN","MAGIPS93",322,0)
 I $$CP^MAGKIDS("MAG IMAGE INDEXES","$$NDXCP^"_$T(+0))<0  D ERROR  Q
"RTN","MAGIPS93",323,0)
 ;
"RTN","MAGIPS93",324,0)
 ;--- Send the notification e-mail
"RTN","MAGIPS93",325,0)
 I $$CP^MAGKIDS("MAG NOTIFICATION","$$NOTIFY^MAGKIDS1")<0  D ERROR  Q
"RTN","MAGIPS93",326,0)
 Q
"RTN","MAGIPS93",327,0)
 ;
"RTN","MAGIPS93",328,0)
 ;***** PRE-INSTALL CODE
"RTN","MAGIPS93",329,0)
PRE ;
"RTN","MAGIPS93",330,0)
 ;--- Delete the field #4; it will be replaced by the field #5.5
"RTN","MAGIPS93",331,0)
 D DELFLDS^MAGKIDS(2006.81,"4")
"RTN","MAGIPS93",332,0)
 Q
"RTN","MAGIPS93",333,0)
 ;
"RTN","MAGIPS93",334,0)
 ;+++++ UPDATES THE PROGRESS INDICATOR
"RTN","MAGIPS93",335,0)
PROGRESS(CNT) ;
"RTN","MAGIPS93",336,0)
 ;--- Reset the progress indicator
"RTN","MAGIPS93",337,0)
 I $G(CNT)'>0  D  Q
"RTN","MAGIPS93",338,0)
 . I '$D(XPDNM)  W !,"   0.00%"  Q
"RTN","MAGIPS93",339,0)
 . N XPDIDTOT
"RTN","MAGIPS93",340,0)
 . S XPDIDTOT=0  D UPDATE^XPDID(0)
"RTN","MAGIPS93",341,0)
 . Q
"RTN","MAGIPS93",342,0)
 ;--- Make sure that we never see more than 100%
"RTN","MAGIPS93",343,0)
 I $G(XPDIDTOT)>0  S:CNT>XPDIDTOT CNT=XPDIDTOT
"RTN","MAGIPS93",344,0)
 ;--- Update the indicator
"RTN","MAGIPS93",345,0)
 I $D(XPDNM)  D UPDATE^XPDID(CNT)  Q
"RTN","MAGIPS93",346,0)
 I $G(XPDIDTOT)>0  S $X=0  W *13,?3,$J(CNT/XPDIDTOT*100,0,2)_"%"
"RTN","MAGIPS93",347,0)
 Q
"RTN","MAGIPS93",348,0)
 ;
"RTN","MAGIPS93",349,0)
 ;***** MANUAL STARTER OF THE INDEX BUILDER TASK
"RTN","MAGIPS93",350,0)
REINDEX ;
"RTN","MAGIPS93",351,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,EXIT,SCHEDULE,X,Y,ZTSAVE
"RTN","MAGIPS93",352,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGIPS93",353,0)
 S SCHEDULE=0
"RTN","MAGIPS93",354,0)
 ;
"RTN","MAGIPS93",355,0)
 ;=== Request parameter values from the user
"RTN","MAGIPS93",356,0)
 S EXIT=0  D  Q:EXIT
"RTN","MAGIPS93",357,0)
 . ;--- Select the index building mode
"RTN","MAGIPS93",358,0)
 . K DIR  S DIR(0)="Y"
"RTN","MAGIPS93",359,0)
 . S DIR("A")="Schedule the task that builds the indexes"
"RTN","MAGIPS93",360,0)
 . D NDXHLP(.DIR)
"RTN","MAGIPS93",361,0)
 . D ^DIR  I $D(DIRUT)  S EXIT=1  Q
"RTN","MAGIPS93",362,0)
 . Q:'Y
"RTN","MAGIPS93",363,0)
 . ;--- The task will be scheduled
"RTN","MAGIPS93",364,0)
 . S SCHEDULE=1,ZTSAVE("MAGDUZ")=$G(DUZ)
"RTN","MAGIPS93",365,0)
 . ;--- Prompt for the task suspension mode
"RTN","MAGIPS93",366,0)
 . K DIR  S DIR(0)="Y",DIR("B")="YES"
"RTN","MAGIPS93",367,0)
 . S DIR("A")="Suspend the task during business hours (7am - 8pm)"
"RTN","MAGIPS93",368,0)
 . D ^DIR  I $D(DIRUT)  S EXIT=1  Q
"RTN","MAGIPS93",369,0)
 . S:Y ZTSAVE("MAGSUSPEND")="1^.07^.2"
"RTN","MAGIPS93",370,0)
 . Q
"RTN","MAGIPS93",371,0)
 ;
"RTN","MAGIPS93",372,0)
 ;=== Schedule the task that will build the indexes
"RTN","MAGIPS93",373,0)
 I SCHEDULE  D  Q
"RTN","MAGIPS93",374,0)
 . N ZTCPU,ZTDESC,ZTDTH,ZTIO,ZTKIL,ZTPRI,ZTRTN,ZTSK,ZTSYNC,ZTUCI
"RTN","MAGIPS93",375,0)
 . S ZTRTN="NDXTASK^"_$T(+0),ZTIO=""
"RTN","MAGIPS93",376,0)
 . S ZTDESC="Image index builder (MAG*3*93)"
"RTN","MAGIPS93",377,0)
 . D ^%ZTLOAD  W !
"RTN","MAGIPS93",378,0)
 . I $G(ZTSK)=""  D ERROR^MAGUERR(-39),DUMP^MAGUERR1()  Q
"RTN","MAGIPS93",379,0)
 . W !,"Task #"_ZTSK_" has been scheduled."
"RTN","MAGIPS93",380,0)
 . Q
"RTN","MAGIPS93",381,0)
 ;
"RTN","MAGIPS93",382,0)
 ;=== Build the indexes in the current session
"RTN","MAGIPS93",383,0)
 K DIR  S DIR(0)="Y"
"RTN","MAGIPS93",384,0)
 S DIR("A")="Build the image indexes now"
"RTN","MAGIPS93",385,0)
 D ^DIR  Q:$D(DIRUT)
"RTN","MAGIPS93",386,0)
 I Y,$$NDXBLD()<0  W !  D DUMP^MAGUERR1()
"RTN","MAGIPS93",387,0)
 Q
"RTN","MAGIPS93",388,0)
 ;
"RTN","MAGIPS93",389,0)
 ;+++++ LIST OF NEW REMOTE PROCEDURES
"RTN","MAGIPS93",390,0)
RPCLST ;
"RTN","MAGIPS93",391,0)
 ;;MAG4 IMAGE LIST
"RTN","MAGIPS93",392,0)
 ;;MAGG IMAGE LOCK
"RTN","MAGIPS93",393,0)
 ;;MAGG IMAGE GET PROPERTIES
"RTN","MAGIPS93",394,0)
 ;;MAGG IMAGE SET PROPERTIES
"RTN","MAGIPS93",395,0)
 ;;MAGG IMAGE STATISTICS
"RTN","MAGIPS93",396,0)
 ;;MAGG IMAGE UNLOCK
"RTN","MAGIPS93",397,0)
 ;;MAGG REASON GET PROPERTIES
"RTN","MAGIPS93",398,0)
 ;;MAGG REASON LIST
"RTN","MAGIPS93",399,0)
 ;;MAGG CAPTURE USERS
"RTN","MAGIPS93",400,0)
 Q
"RTN","MAGIPS93",401,0)
 ;
"RTN","MAGIPS93",402,0)
 ;+++++ RESTARTS THE IMAGING UTILIZATION REPORT TASK
"RTN","MAGIPS93",403,0)
RPTSKCP() ;
"RTN","MAGIPS93",404,0)
 D REMTASK^MAGQE4,STTASK^MAGQE4
"RTN","MAGIPS93",405,0)
 Q 0
"RTN","MAGIPS93",406,0)
 ;
"RTN","MAGIPS93",407,0)
 ;+++++ CHECKS IF THE TASK SHOULD BE SUSPENDED
"RTN","MAGIPS93",408,0)
 ;
"RTN","MAGIPS93",409,0)
 ; .DTNEXT       Date/Time of the next event (suspend/resume)
"RTN","MAGIPS93",410,0)
 ;               is returned via this parameter
"RTN","MAGIPS93",411,0)
 ;
"RTN","MAGIPS93",412,0)
 ; Input Variables
"RTN","MAGIPS93",413,0)
 ; ===============
"RTN","MAGIPS93",414,0)
 ;   MAGSUSPEND
"RTN","MAGIPS93",415,0)
 ;
"RTN","MAGIPS93",416,0)
 ; Return Values
"RTN","MAGIPS93",417,0)
 ; =============
"RTN","MAGIPS93",418,0)
 ;            0  Continue/Resume
"RTN","MAGIPS93",419,0)
 ;            1  Suspend
"RTN","MAGIPS93",420,0)
 ;
"RTN","MAGIPS93",421,0)
SUSPEND(DTNEXT) ;
"RTN","MAGIPS93",422,0)
 N DATE,NOW,SUSPEND,TIME,TR,TS
"RTN","MAGIPS93",423,0)
 S TS=$P(MAGSUSPEND,U,2),TR=$P(MAGSUSPEND,U,3)
"RTN","MAGIPS93",424,0)
 S NOW=$$NOW^XLFDT,DATE=NOW\1
"RTN","MAGIPS93",425,0)
 ;--- A work day
"RTN","MAGIPS93",426,0)
 I $$WDCHK^MAGUTL03(DATE)  D  Q SUSPEND
"RTN","MAGIPS93",427,0)
 . S TIME=NOW-DATE,SUSPEND=0
"RTN","MAGIPS93",428,0)
 . I TIME<TS   S DTNEXT=DATE+TS  Q
"RTN","MAGIPS93",429,0)
 . I TIME'<TR  S DTNEXT=$$WDNEXT^MAGUTL03(DATE)+TS  Q
"RTN","MAGIPS93",430,0)
 . S DTNEXT=DATE+TR,SUSPEND=1
"RTN","MAGIPS93",431,0)
 . Q
"RTN","MAGIPS93",432,0)
 ;--- Saturday, Sunday or Holiday
"RTN","MAGIPS93",433,0)
 S DTNEXT=$$WDNEXT^MAGUTL03(DATE)+TS
"RTN","MAGIPS93",434,0)
 Q 0
"RTN","MAGIPS93",435,0)
 ;
"RTN","MAGIPS93",436,0)
 ;+++++ RE-INDEXES THE IMAGE RECORD
"RTN","MAGIPS93",437,0)
XREF(MAGFILE,MAGIEN) ;
"RTN","MAGIPS93",438,0)
 N GRPIEN,TMP,X0,X2
"RTN","MAGIPS93",439,0)
 S X0=$G(^MAG(MAGFILE,MAGIEN,0)),X2=$G(^(2))
"RTN","MAGIPS93",440,0)
 S GRPIEN=+$P(X0,U,10)  ; GROUP PARENT (14)
"RTN","MAGIPS93",441,0)
 ;---
"RTN","MAGIPS93",442,0)
 I GRPIEN  D:MAGFILE=2005.1
"RTN","MAGIPS93",443,0)
 . ;--- AGP
"RTN","MAGIPS93",444,0)
 . S ^MAG(MAGFILE,"AGP",GRPIEN,MAGIEN)=""
"RTN","MAGIPS93",445,0)
 . Q
"RTN","MAGIPS93",446,0)
 E  D
"RTN","MAGIPS93",447,0)
 . N DFN,PDT
"RTN","MAGIPS93",448,0)
 . S PDT=$P(X2,U,5)  Q:'PDT    ; PROCEDURE/EXAM DATE/TIME (15)
"RTN","MAGIPS93",449,0)
 . ;--- APDT
"RTN","MAGIPS93",450,0)
 . S ^MAG(MAGFILE,"APDT",PDT,MAGIEN)=""
"RTN","MAGIPS93",451,0)
 . ;--- IMAGE file (#2005) already has the APDTPX index
"RTN","MAGIPS93",452,0)
 . Q:MAGFILE=2005
"RTN","MAGIPS93",453,0)
 . ;--- APDTPX
"RTN","MAGIPS93",454,0)
 . S DFN=$P(X0,U,7)  Q:'DFN    ; PATIENT (5)
"RTN","MAGIPS93",455,0)
 . S TMP=$P(X0,U,8)  Q:TMP=""  ; PROCEDURE (6)
"RTN","MAGIPS93",456,0)
 . S ^MAG(MAGFILE,"APDTPX",DFN,9999999.9999-PDT,TMP,MAGIEN)=""
"RTN","MAGIPS93",457,0)
 . Q
"RTN","MAGIPS93",458,0)
 ;--- ACA
"RTN","MAGIPS93",459,0)
 D:'$P(X2,U,12)  ; CAPTURE APPLICATION (8.1)
"RTN","MAGIPS93",460,0)
 . N X100,PACS
"RTN","MAGIPS93",461,0)
 . S X100=$G(^MAG(MAGFILE,MAGIEN,100)),PACS=$G(^("PACS"))
"RTN","MAGIPS93",462,0)
 . S TMP=$TR($P(PACS,U,1,3),"^ ")  ; Fields 60, 61, and 62
"RTN","MAGIPS93",463,0)
 . S $P(^MAG(MAGFILE,MAGIEN,2),U,12)=$S($P(X100,U,5)'="":"I",TMP'="":"D",1:"C")
"RTN","MAGIPS93",464,0)
 . Q
"RTN","MAGIPS93",465,0)
 ;--- Done
"RTN","MAGIPS93",466,0)
 Q
"RTN","MAGKIDS")
0^49^B30231662
"RTN","MAGKIDS",1,0)
MAGKIDS ;WOIFO/SG - INSTALLATION UTILITIES ; 3/9/09 12:52pm
"RTN","MAGKIDS",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGKIDS",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGKIDS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGKIDS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGKIDS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGKIDS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGKIDS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGKIDS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGKIDS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGKIDS",11,0)
 ;; |                                                               |
"RTN","MAGKIDS",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGKIDS",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGKIDS",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGKIDS",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGKIDS",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGKIDS",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGKIDS",18,0)
 ;;
"RTN","MAGKIDS",19,0)
 Q
"RTN","MAGKIDS",20,0)
 ;
"RTN","MAGKIDS",21,0)
 ;***** DISPLAYS THE MESSAGE IF THE INSTALLATION ABORTS
"RTN","MAGKIDS",22,0)
ABTMSG() ;
"RTN","MAGKIDS",23,0)
 ;;Installation of the patch has been aborted due to error(s).
"RTN","MAGKIDS",24,0)
 ;;Please fix the problem(s) and restart the installation using
"RTN","MAGKIDS",25,0)
 ;;the Restart Install of Package(s) [XPD RESTART INSTALL] option
"RTN","MAGKIDS",26,0)
 ;;of the Installation ... [XPD INSTALLATION MENU] menu.
"RTN","MAGKIDS",27,0)
 ;
"RTN","MAGKIDS",28,0)
 N I,TEXT,TMP
"RTN","MAGKIDS",29,0)
 F I=2:1  S TMP=$T(ABTMSG+I)  Q:TMP'[";;"  S TEXT(I)=$P(TMP,";;",2,99)
"RTN","MAGKIDS",30,0)
 D BMES($P($T(ABTMSG+1),";;",2,99),.TEXT)
"RTN","MAGKIDS",31,0)
 Q
"RTN","MAGKIDS",32,0)
 ;
"RTN","MAGKIDS",33,0)
 ;##### OUTPUTS THE INSTALLATION MESSAGE WITH INDENTATION
"RTN","MAGKIDS",34,0)
 ;
"RTN","MAGKIDS",35,0)
 ; MSG           Message
"RTN","MAGKIDS",36,0)
 ;
"RTN","MAGKIDS",37,0)
 ; [.INFO]       Reference to a local array that contains additional
"RTN","MAGKIDS",38,0)
 ;               text that will be displayed after the main message.
"RTN","MAGKIDS",39,0)
 ;
"RTN","MAGKIDS",40,0)
 ; This procedure automatically adds an empty string before the
"RTN","MAGKIDS",41,0)
 ; message (see the BMES^XPDUTL).
"RTN","MAGKIDS",42,0)
 ;
"RTN","MAGKIDS",43,0)
BMES(MSG,INFO) ;
"RTN","MAGKIDS",44,0)
 N MAGI
"RTN","MAGKIDS",45,0)
 D BMES^XPDUTL("   "_MSG)
"RTN","MAGKIDS",46,0)
 S MAGI=""
"RTN","MAGKIDS",47,0)
 F  S MAGI=$O(INFO(MAGI))  Q:MAGI=""  D MES^XPDUTL("   "_INFO(MAGI))
"RTN","MAGKIDS",48,0)
 Q
"RTN","MAGKIDS",49,0)
 ;
"RTN","MAGKIDS",50,0)
 ;##### PROCESSES THE INSTALL CHECKPOINT
"RTN","MAGKIDS",51,0)
 ;
"RTN","MAGKIDS",52,0)
 ; CPNAME        Checkpoint name
"RTN","MAGKIDS",53,0)
 ;
"RTN","MAGKIDS",54,0)
 ; CALLBACK      Callback entry point: "$$TAG^ROUTINE(PARAMETERS)".
"RTN","MAGKIDS",55,0)
 ;               This function must return either 0 if everything is
"RTN","MAGKIDS",56,0)
 ;               Ok or the error descriptor.
"RTN","MAGKIDS",57,0)
 ;
"RTN","MAGKIDS",58,0)
 ; [PARAM]       Value to set the checkpoint parameter to.
"RTN","MAGKIDS",59,0)
 ;
"RTN","MAGKIDS",60,0)
 ; The function checks if the checkpoint is completed. If it is not,
"RTN","MAGKIDS",61,0)
 ; the callback entry point is XECUTEd. If everything is Ok, the
"RTN","MAGKIDS",62,0)
 ; function completes the checkpoint and returns 0. Otherwise, an
"RTN","MAGKIDS",63,0)
 ; error code is returned (it can be generated either by this function
"RTN","MAGKIDS",64,0)
 ; itself or returned from the callback entry point).
"RTN","MAGKIDS",65,0)
 ;
"RTN","MAGKIDS",66,0)
 ; Return Values
"RTN","MAGKIDS",67,0)
 ; =============
"RTN","MAGKIDS",68,0)
 ;           <0  Error code
"RTN","MAGKIDS",69,0)
 ;            0  Ok
"RTN","MAGKIDS",70,0)
 ;
"RTN","MAGKIDS",71,0)
CP(CPNAME,CALLBACK,PARAM) ;
"RTN","MAGKIDS",72,0)
 N RC
"RTN","MAGKIDS",73,0)
 ;--- Validate parameters
"RTN","MAGKIDS",74,0)
 I $G(CALLBACK)'?1"$$"1.8UN1"^MAG"1.5UN.1(1"(".E1")")  D  Q RC
"RTN","MAGKIDS",75,0)
 . S RC=$$IPVE^MAGUERR("CALLBACK")
"RTN","MAGKIDS",76,0)
 . Q
"RTN","MAGKIDS",77,0)
 ;--- Verify the checkpoint and quit if it is completed
"RTN","MAGKIDS",78,0)
 S RC=$$VERCP^XPDUTL(CPNAME)  Q:RC>0 0
"RTN","MAGKIDS",79,0)
 ;--- Create the new checkpoint
"RTN","MAGKIDS",80,0)
 I RC<0  D  Q:'RC $$ERROR^MAGUERR(-28,,CPNAME)
"RTN","MAGKIDS",81,0)
 . S RC=$$NEWCP^XPDUTL(CPNAME,,.PARAM)
"RTN","MAGKIDS",82,0)
 . Q
"RTN","MAGKIDS",83,0)
 ;--- Reset the KIDS progress bar
"RTN","MAGKIDS",84,0)
 S XPDIDTOT=0  D UPDATE^XPDID(0)
"RTN","MAGKIDS",85,0)
 ;--- Execute the callback entry point
"RTN","MAGKIDS",86,0)
 X "S RC="_CALLBACK  Q:RC<0 RC
"RTN","MAGKIDS",87,0)
 ;--- Complete the check point
"RTN","MAGKIDS",88,0)
 S RC=$$COMCP^XPDUTL(CPNAME)
"RTN","MAGKIDS",89,0)
 Q:'RC $$ERROR^MAGUERR(-29,,CPNAME)
"RTN","MAGKIDS",90,0)
 ;--- Success
"RTN","MAGKIDS",91,0)
 Q 0
"RTN","MAGKIDS",92,0)
 ;
"RTN","MAGKIDS",93,0)
 ;##### DELETES THE (SUB)FILE DD AND DATA (IF REQUESTED)
"RTN","MAGKIDS",94,0)
 ;
"RTN","MAGKIDS",95,0)
 ; FILE          File or subfile number
"RTN","MAGKIDS",96,0)
 ;
"RTN","MAGKIDS",97,0)
 ; [DIU2FLAGS]   Flags for the EN^DIU2 (can be combined):
"RTN","MAGKIDS",98,0)
 ;
"RTN","MAGKIDS",99,0)
 ;                 D  Delete the data as well as the DD
"RTN","MAGKIDS",100,0)
 ;                 E  Echo back information during deletion
"RTN","MAGKIDS",101,0)
 ;                 S  Subfile data dictionary is to be deleted
"RTN","MAGKIDS",102,0)
 ;                 T  Templates are to be deleted
"RTN","MAGKIDS",103,0)
 ;
"RTN","MAGKIDS",104,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGKIDS",105,0)
 ;
"RTN","MAGKIDS",106,0)
 ;                 S  If this flag is provided, the procedure will
"RTN","MAGKIDS",107,0)
 ;                    work in "silent" mode. Nothing will be
"RTN","MAGKIDS",108,0)
 ;                    displayed on the console or stored into the
"RTN","MAGKIDS",109,0)
 ;                    INSTALLATION file (#9.7).
"RTN","MAGKIDS",110,0)
 ;
"RTN","MAGKIDS",111,0)
 ; Notes
"RTN","MAGKIDS",112,0)
 ; =====
"RTN","MAGKIDS",113,0)
 ;
"RTN","MAGKIDS",114,0)
 ; This entry point can be called either as a procedure or as a
"RTN","MAGKIDS",115,0)
 ; function (always returns 0).
"RTN","MAGKIDS",116,0)
 ;
"RTN","MAGKIDS",117,0)
DELFILE(FILE,DIU2FLAGS,FLAGS) ;
"RTN","MAGKIDS",118,0)
 I '$$VFILE^DILFD(+FILE)  Q:$QUIT 0  Q
"RTN","MAGKIDS",119,0)
 N DIU,FT,RC
"RTN","MAGKIDS",120,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGKIDS",121,0)
 S DIU=+FILE,DIU(0)=$G(DIU2FLAGS)
"RTN","MAGKIDS",122,0)
 I FLAGS'["S"  D
"RTN","MAGKIDS",123,0)
 . S FT=$S(DIU(0)["S":"subfile",1:"file")
"RTN","MAGKIDS",124,0)
 . D BMES("Deleting the "_FT_" #"_(+FILE)_"...")
"RTN","MAGKIDS",125,0)
 . Q
"RTN","MAGKIDS",126,0)
 D EN^DIU2
"RTN","MAGKIDS",127,0)
 D:FLAGS'["S" MES("The "_FT_" has been deleted.")
"RTN","MAGKIDS",128,0)
 Q:$QUIT 0  Q
"RTN","MAGKIDS",129,0)
 ;
"RTN","MAGKIDS",130,0)
 ;##### DELETES FIELD DEFINITIONS FROM THE DD
"RTN","MAGKIDS",131,0)
 ;
"RTN","MAGKIDS",132,0)
 ; FILE          File number
"RTN","MAGKIDS",133,0)
 ;
"RTN","MAGKIDS",134,0)
 ; FLDLST        String that contains list of field numbers to
"RTN","MAGKIDS",135,0)
 ;               delete separated by semicolons.
"RTN","MAGKIDS",136,0)
 ;
"RTN","MAGKIDS",137,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGKIDS",138,0)
 ;
"RTN","MAGKIDS",139,0)
 ;                 S  If this flag is provided, the procedure will
"RTN","MAGKIDS",140,0)
 ;                    work in "silent" mode. Nothing will be
"RTN","MAGKIDS",141,0)
 ;                    displayed on the console or stored into the
"RTN","MAGKIDS",142,0)
 ;                    INSTALLATION file (#9.7).
"RTN","MAGKIDS",143,0)
 ;
"RTN","MAGKIDS",144,0)
 ; Notes
"RTN","MAGKIDS",145,0)
 ; =====
"RTN","MAGKIDS",146,0)
 ;
"RTN","MAGKIDS",147,0)
 ; This entry point can be called either as a procedure or as a
"RTN","MAGKIDS",148,0)
 ; function (always returns 0).
"RTN","MAGKIDS",149,0)
 ;
"RTN","MAGKIDS",150,0)
DELFLDS(FILE,FLDLST,FLAGS) ;
"RTN","MAGKIDS",151,0)
 I '$$VFILE^DILFD(+FILE)  Q:$QUIT 0  Q
"RTN","MAGKIDS",152,0)
 N DA,DIK,MAGI,RC
"RTN","MAGKIDS",153,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGKIDS",154,0)
 D:FLAGS'["S"
"RTN","MAGKIDS",155,0)
 . D BMES("Deleting the field definitions...")
"RTN","MAGKIDS",156,0)
 . D MES("File #"_(+FILE)_", Fields: '"_FLDLST_"'")
"RTN","MAGKIDS",157,0)
 . Q
"RTN","MAGKIDS",158,0)
 S DA(1)=+FILE,DIK="^DD("_DA(1)_","
"RTN","MAGKIDS",159,0)
 F MAGI=1:1  S DA=$P(FLDLST,";",MAGI)  Q:'DA  D ^DIK
"RTN","MAGKIDS",160,0)
 D:FLAGS'["S" MES("The definitions have been deleted.")
"RTN","MAGKIDS",161,0)
 Q:$QUIT 0  Q
"RTN","MAGKIDS",162,0)
 ;
"RTN","MAGKIDS",163,0)
 ;##### OUTPUTS THE INSTALLATION MESSAGE WITH INDENTATION
"RTN","MAGKIDS",164,0)
 ;
"RTN","MAGKIDS",165,0)
 ; MSG           Message
"RTN","MAGKIDS",166,0)
 ;
"RTN","MAGKIDS",167,0)
 ; [.INFO]       Reference to a local array that contains additional
"RTN","MAGKIDS",168,0)
 ;               text that will be displayed after the main message.
"RTN","MAGKIDS",169,0)
 ;
"RTN","MAGKIDS",170,0)
MES(MSG,INFO) ;
"RTN","MAGKIDS",171,0)
 N MAGI
"RTN","MAGKIDS",172,0)
 D MES^XPDUTL("   "_MSG)
"RTN","MAGKIDS",173,0)
 S MAGI=""
"RTN","MAGKIDS",174,0)
 F  S MAGI=$O(INFO(MAGI))  Q:MAGI=""  D MES^XPDUTL("   "_INFO(MAGI))
"RTN","MAGKIDS",175,0)
 Q
"RTN","MAGKIDS",176,0)
 ;
"RTN","MAGKIDS",177,0)
 ;##### CHECKS AND/OR UPDATES THE FILE'S PACKAGE REVISION DATA
"RTN","MAGKIDS",178,0)
 ;
"RTN","MAGKIDS",179,0)
 ; FILE          File number
"RTN","MAGKIDS",180,0)
 ;
"RTN","MAGKIDS",181,0)
 ; PATCH         Patch number (e.g. 93)
"RTN","MAGKIDS",182,0)
 ;
"RTN","MAGKIDS",183,0)
 ; [MODE]        Execution mode:
"RTN","MAGKIDS",184,0)
 ;
"RTN","MAGKIDS",185,0)
 ;                 "A"  Add the patch number to the file revision data
"RTN","MAGKIDS",186,0)
 ;
"RTN","MAGKIDS",187,0)
 ;                 "D"  Delete the patch from the file revision data
"RTN","MAGKIDS",188,0)
 ;
"RTN","MAGKIDS",189,0)
 ; Return Values
"RTN","MAGKIDS",190,0)
 ; =============
"RTN","MAGKIDS",191,0)
 ;            0  Patch number is (was) in the file revision data
"RTN","MAGKIDS",192,0)
 ;            1  Patch number is (was) NOT in the revision data
"RTN","MAGKIDS",193,0)
 ;
"RTN","MAGKIDS",194,0)
 ; Notes
"RTN","MAGKIDS",195,0)
 ; =====
"RTN","MAGKIDS",196,0)
 ;
"RTN","MAGKIDS",197,0)
 ; If the MODE parameter is not defined or empty, then this function
"RTN","MAGKIDS",198,0)
 ; checks if the patch number is present in the file revision data.
"RTN","MAGKIDS",199,0)
 ;
"RTN","MAGKIDS",200,0)
 ; Otherwise, it performs the requested action and returns the value
"RTN","MAGKIDS",201,0)
 ; that indicates whether the patch number was present in the file
"RTN","MAGKIDS",202,0)
 ; revision data before the action.
"RTN","MAGKIDS",203,0)
 ; 
"RTN","MAGKIDS",204,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGKIDS",205,0)
 ; D PRD^MAGKIDS(...) if you do not need its return value.
"RTN","MAGKIDS",206,0)
 ;
"RTN","MAGKIDS",207,0)
 ; If a full data dictionary is exported in the KIDS build, the file
"RTN","MAGKIDS",208,0)
 ; revision data is also exported!
"RTN","MAGKIDS",209,0)
 ;
"RTN","MAGKIDS",210,0)
 ; When a new version of the package is released, package revison
"RTN","MAGKIDS",211,0)
 ; data for all package files must be cleared (use the PRD^DILFD).
"RTN","MAGKIDS",212,0)
 ;
"RTN","MAGKIDS",213,0)
PRD(FILE,PATCH,MODE) ;
"RTN","MAGKIDS",214,0)
 N FOUND,MAGMSG,PRD
"RTN","MAGKIDS",215,0)
 S PATCH=+PATCH
"RTN","MAGKIDS",216,0)
 ;
"RTN","MAGKIDS",217,0)
 ;=== Get the patch list from the file revision data
"RTN","MAGKIDS",218,0)
 S PRD=$$GET1^DID(FILE,,,"PACKAGE REVISION DATA",,"MAGMSG")
"RTN","MAGKIDS",219,0)
 S PRD=$TR(PRD," "),FOUND=(","_PRD_",")[(","_PATCH_",")
"RTN","MAGKIDS",220,0)
 ;
"RTN","MAGKIDS",221,0)
 ;=== Add the patch number to the list
"RTN","MAGKIDS",222,0)
 I $G(MODE)="A"  D:'FOUND  Q:$QUIT FOUND  Q
"RTN","MAGKIDS",223,0)
 . N I
"RTN","MAGKIDS",224,0)
 . S I=$L(PRD,",")  S:$P(PRD,",",I)'="" I=I+1
"RTN","MAGKIDS",225,0)
 . S $P(PRD,",",I)=PATCH
"RTN","MAGKIDS",226,0)
 . ;--- If the list is too long, purge the oldest entries
"RTN","MAGKIDS",227,0)
 . F  Q:$L(PRD)<254  S $P(PRD,",",1,2)=$P(PRD,",",2)
"RTN","MAGKIDS",228,0)
 . ;--- Store the list as the file revision data
"RTN","MAGKIDS",229,0)
 . D PRD^DILFD(FILE,PRD)
"RTN","MAGKIDS",230,0)
 . Q
"RTN","MAGKIDS",231,0)
 ;
"RTN","MAGKIDS",232,0)
 ;=== Delete the patch number from the list
"RTN","MAGKIDS",233,0)
 I $G(MODE)="D"  D:FOUND  Q:$QUIT FOUND  Q
"RTN","MAGKIDS",234,0)
 . N I,IP
"RTN","MAGKIDS",235,0)
 . F I=$L(PRD,","):-1:1  I $P(PRD,",",I)=PATCH  S IP=I  Q
"RTN","MAGKIDS",236,0)
 . Q:$G(IP)'>0  ; This should never happen.
"RTN","MAGKIDS",237,0)
 . S $P(PRD,",",IP,IP+1)=$P(PRD,",",IP+1)
"RTN","MAGKIDS",238,0)
 . ;--- Remove the trailing comma
"RTN","MAGKIDS",239,0)
 . S I=$L(PRD)  S:$E(PRD,I)="," $E(PRD,I)=""
"RTN","MAGKIDS",240,0)
 . ;--- Store the list as the file revision data
"RTN","MAGKIDS",241,0)
 . D PRD^DILFD(FILE,PRD)
"RTN","MAGKIDS",242,0)
 . Q
"RTN","MAGKIDS",243,0)
 ;
"RTN","MAGKIDS",244,0)
 ;===
"RTN","MAGKIDS",245,0)
 Q:$QUIT FOUND  Q
"RTN","MAGKIDS1")
0^50^B40480221
"RTN","MAGKIDS1",1,0)
MAGKIDS1 ;WOIFO/SG - INSTALLATION UTILITIES ; 3/9/09 12:52pm
"RTN","MAGKIDS1",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGKIDS1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGKIDS1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGKIDS1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGKIDS1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGKIDS1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGKIDS1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGKIDS1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGKIDS1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGKIDS1",11,0)
 ;; |                                                               |
"RTN","MAGKIDS1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGKIDS1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGKIDS1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGKIDS1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGKIDS1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGKIDS1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGKIDS1",18,0)
 ;;
"RTN","MAGKIDS1",19,0)
 ; This routine uses the following ICRs:
"RTN","MAGKIDS1",20,0)
 ;
"RTN","MAGKIDS1",21,0)
 ; #3232         Read access to file #9.7 (private)
"RTN","MAGKIDS1",22,0)
 ; #4389         Read access to file #9.7 (private)
"RTN","MAGKIDS1",23,0)
 ; #10075        R/W access to subfile #19.05 (supported)
"RTN","MAGKIDS1",24,0)
 ; #4011         Read access to file #8994 (controlled)
"RTN","MAGKIDS1",25,0)
 ;
"RTN","MAGKIDS1",26,0)
 ; ??? - #4389 has to be updated to include fields 9, 11,
"RTN","MAGKIDS1",27,0)
 ;       and 17 of the file #9.7!
"RTN","MAGKIDS1",28,0)
 Q
"RTN","MAGKIDS1",29,0)
 ;
"RTN","MAGKIDS1",30,0)
 ;##### ADDS RPC NAME(S) TO THE RPC MULTIPLE OF THE OPTION
"RTN","MAGKIDS1",31,0)
 ;
"RTN","MAGKIDS1",32,0)
 ; [.]RPCNAMES   Names of the remote procedures:
"RTN","MAGKIDS1",33,0)
 ;
"RTN","MAGKIDS1",34,0)
 ;                 * Single name can be passed by value;
"RTN","MAGKIDS1",35,0)
 ;
"RTN","MAGKIDS1",36,0)
 ;                 * One or more names can be passed as subscripts of 
"RTN","MAGKIDS1",37,0)
 ;                   a local array passed by reference;
"RTN","MAGKIDS1",38,0)
 ;
"RTN","MAGKIDS1",39,0)
 ;                 * A reference to the list of RPC names in the
"RTN","MAGKIDS1",40,0)
 ;                   source code of an routine can be passed as
"RTN","MAGKIDS1",41,0)
 ;                   the TAG^ROUTINE value of the RPCNAMES. The
"RTN","MAGKIDS1",42,0)
 ;                   routine must be in the MAG namespace.
"RTN","MAGKIDS1",43,0)
 ;
"RTN","MAGKIDS1",44,0)
 ; OPTNAME       Name of the option (RPC Broker context)
"RTN","MAGKIDS1",45,0)
 ;
"RTN","MAGKIDS1",46,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGKIDS1",47,0)
 ;
"RTN","MAGKIDS1",48,0)
 ;                 S  If this flag is provided, the procedure will
"RTN","MAGKIDS1",49,0)
 ;                    work in "silent" mode. Nothing will be
"RTN","MAGKIDS1",50,0)
 ;                    displayed on the console or stored into the
"RTN","MAGKIDS1",51,0)
 ;                    INSTALLATION file (#9.7).
"RTN","MAGKIDS1",52,0)
 ;
"RTN","MAGKIDS1",53,0)
 ; Return Values
"RTN","MAGKIDS1",54,0)
 ; =============
"RTN","MAGKIDS1",55,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGKIDS1",56,0)
 ;            0  Success
"RTN","MAGKIDS1",57,0)
 ;
"RTN","MAGKIDS1",58,0)
ADDRPCS(RPCNAMES,OPTNAME,FLAGS) ;
"RTN","MAGKIDS1",59,0)
 N IENS,MAGFDA,MAGMSG,MAGRC,NAME,OPTIEN,RPCIEN,SILENT
"RTN","MAGKIDS1",60,0)
 ;
"RTN","MAGKIDS1",61,0)
 ;=== Validate and prepare parameters
"RTN","MAGKIDS1",62,0)
 S FLAGS=$G(FLAGS),SILENT=(FLAGS["S")
"RTN","MAGKIDS1",63,0)
 ;--- Single RPC name or a list?
"RTN","MAGKIDS1",64,0)
 I $D(RPCNAMES)<10  Q:$G(RPCNAMES)?." " $$IPVE^MAGUERR("RPCNAMES")  D
"RTN","MAGKIDS1",65,0)
 . N I,GET
"RTN","MAGKIDS1",66,0)
 . ;--- TAG^ROUTINE or single RPC name?
"RTN","MAGKIDS1",67,0)
 . I RPCNAMES'?1.8UN1"^MAG"1.5UN  S RPCNAMES(RPCNAMES)=""  Q
"RTN","MAGKIDS1",68,0)
 . ;--- Get the list from the source code
"RTN","MAGKIDS1",69,0)
 . S GET=$P(RPCNAMES,"^")_"+I^"_$P(RPCNAMES,"^",2)
"RTN","MAGKIDS1",70,0)
 . S GET="S NAME=$$TRIM^XLFSTR($P($T("_GET_"),"";;"",2))"
"RTN","MAGKIDS1",71,0)
 . F I=1:1  X GET  Q:NAME=""  S RPCNAMES(NAME)=""
"RTN","MAGKIDS1",72,0)
 . Q
"RTN","MAGKIDS1",73,0)
 ;--- Name of the menu option (RPC Broker context)
"RTN","MAGKIDS1",74,0)
 S OPTIEN=$$LKOPT^XPDMENU(OPTNAME)
"RTN","MAGKIDS1",75,0)
 Q:OPTIEN'>0 $$ERROR^MAGUERR(-44,,OPTNAME)
"RTN","MAGKIDS1",76,0)
 ;
"RTN","MAGKIDS1",77,0)
 ;=== Add the names to the multiple
"RTN","MAGKIDS1",78,0)
 D:'SILENT BMES^MAGKIDS("Attaching RPCs to the '"_OPTNAME_"' option...")
"RTN","MAGKIDS1",79,0)
 S NAME="",MAGRC=0
"RTN","MAGKIDS1",80,0)
 F  S NAME=$O(RPCNAMES(NAME))  Q:NAME=""  D  Q:MAGRC<0
"RTN","MAGKIDS1",81,0)
 . D:'SILENT MES^MAGKIDS(NAME)
"RTN","MAGKIDS1",82,0)
 . ;--- Check if the remote procedure exists
"RTN","MAGKIDS1",83,0)
 . S RPCIEN=$$FIND1^DIC(8994,,,NAME,"B",,"MAGMSG")
"RTN","MAGKIDS1",84,0)
 . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",8994)  Q
"RTN","MAGKIDS1",85,0)
 . I RPCIEN'>0  S MAGRC=$$ERROR^MAGUERR(-45,,NAME)  Q
"RTN","MAGKIDS1",86,0)
 . ;--- Add the remote procedure to the multiple
"RTN","MAGKIDS1",87,0)
 . S IENS="?+1,"_OPTIEN_","
"RTN","MAGKIDS1",88,0)
 . S MAGFDA(19.05,IENS,.01)=RPCIEN
"RTN","MAGKIDS1",89,0)
 . D UPDATE^DIE(,"MAGFDA",,"MAGMSG")
"RTN","MAGKIDS1",90,0)
 . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",19.05,IENS)  Q
"RTN","MAGKIDS1",91,0)
 . ;---
"RTN","MAGKIDS1",92,0)
 . Q
"RTN","MAGKIDS1",93,0)
 I MAGRC<0  D:'SILENT MES^MAGKIDS("ABORTED!")  Q MAGRC
"RTN","MAGKIDS1",94,0)
 ;
"RTN","MAGKIDS1",95,0)
 ;=== Success
"RTN","MAGKIDS1",96,0)
 D:'SILENT MES^MAGKIDS("RPCs have been successfully attached.")
"RTN","MAGKIDS1",97,0)
 Q 0
"RTN","MAGKIDS1",98,0)
 ;
"RTN","MAGKIDS1",99,0)
 ;##### SENDS THE PATCH INSTALLATION E-MAIL
"RTN","MAGKIDS1",100,0)
 ;
"RTN","MAGKIDS1",101,0)
 ; [MAGDUZ]      IEN of the user who will get the e-mail in
"RTN","MAGKIDS1",102,0)
 ;               addition to the G.MAG SERVER mail group.
"RTN","MAGKIDS1",103,0)
 ;
"RTN","MAGKIDS1",104,0)
 ; Input variables
"RTN","MAGKIDS1",105,0)
 ; ===============
"RTN","MAGKIDS1",106,0)
 ;  XPDA, XPDNM
"RTN","MAGKIDS1",107,0)
 ;
"RTN","MAGKIDS1",108,0)
 ; Return Values
"RTN","MAGKIDS1",109,0)
 ; =============
"RTN","MAGKIDS1",110,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGKIDS1",111,0)
 ;            0  Success
"RTN","MAGKIDS1",112,0)
 ; Notes
"RTN","MAGKIDS1",113,0)
 ; =====
"RTN","MAGKIDS1",114,0)
 ;
"RTN","MAGKIDS1",115,0)
 ; This entry point should be called ONLY from the KIDS post-install
"RTN","MAGKIDS1",116,0)
 ; code.
"RTN","MAGKIDS1",117,0)
 ;
"RTN","MAGKIDS1",118,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGKIDS1",119,0)
 ; D NOTIFY^MAGKIDS1() if you do not need its return value.
"RTN","MAGKIDS1",120,0)
 ;
"RTN","MAGKIDS1",121,0)
NOTIFY() ;
"RTN","MAGKIDS1",122,0)
 N CNT,CT,IENS,MAGBUF,MAGERR,MAGMSG,MAGRC,ST,Y
"RTN","MAGKIDS1",123,0)
 S MAGRC=0,IENS=XPDA_","
"RTN","MAGKIDS1",124,0)
 ;
"RTN","MAGKIDS1",125,0)
 ;--- Load the build properties from the BUILD file (#9.7)
"RTN","MAGKIDS1",126,0)
 D GETS^DIQ(9.7,IENS,".01;6;9;11;17;51","EI","MAGBUF","MAGERR")
"RTN","MAGKIDS1",127,0)
 D:$G(DIERR) DBS^MAGUERR("MAGERR",9.7,IENS)
"RTN","MAGKIDS1",128,0)
 ;
"RTN","MAGKIDS1",129,0)
 ;--- Compile the message text
"RTN","MAGKIDS1",130,0)
 S CNT=0
"RTN","MAGKIDS1",131,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGKIDS1",132,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGKIDS1",133,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XPDNM
"RTN","MAGKIDS1",134,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XPDNM)
"RTN","MAGKIDS1",135,0)
 S ST=$G(MAGBUF(9.7,IENS,11,"I"))
"RTN","MAGKIDS1",136,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGKIDS1",137,0)
 S CT=$G(MAGBUF(9.7,IENS,17,"I"))  S:+CT'=CT CT=$$NOW^XLFDT()
"RTN","MAGKIDS1",138,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGKIDS1",139,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGKIDS1",140,0)
 D GETENV^%ZOSV
"RTN","MAGKIDS1",141,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGKIDS1",142,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_$G(MAGBUF(9.7,IENS,6,"I"))
"RTN","MAGKIDS1",143,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_$$NOW^XLFDT()
"RTN","MAGKIDS1",144,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$G(MAGBUF(9.7,IENS,9,"E"))
"RTN","MAGKIDS1",145,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$G(MAGBUF(9.7,IENS,.01,"E"))
"RTN","MAGKIDS1",146,0)
 S Y=$G(MAGBUF(9.7,IENS,51,"E"))
"RTN","MAGKIDS1",147,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_Y
"RTN","MAGKIDS1",148,0)
 ;
"RTN","MAGKIDS1",149,0)
 ;--- Send the e-mail notification
"RTN","MAGKIDS1",150,0)
 D
"RTN","MAGKIDS1",151,0)
 . N DIFROM,XMERR,XMID,XMSUB,XMY,XMZ
"RTN","MAGKIDS1",152,0)
 . S XMSUB=$E(XPDNM_" INSTALLATION",1,63)
"RTN","MAGKIDS1",153,0)
 . S XMID=$G(DUZ)  S:XMID'>0 XMID=.5
"RTN","MAGKIDS1",154,0)
 . S (XMY(XMID),XMY("G.MAG SERVER"))=""
"RTN","MAGKIDS1",155,0)
 . D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ)
"RTN","MAGKIDS1",156,0)
 . Q:'$G(XMERR)
"RTN","MAGKIDS1",157,0)
 . K MAGERR  M MAGERR=^TMP("XMERR",$J)
"RTN","MAGKIDS1",158,0)
 . S MAGRC=$$ERROR^MAGUERR(-46,.MAGERR)
"RTN","MAGKIDS1",159,0)
 . Q
"RTN","MAGKIDS1",160,0)
 ;
"RTN","MAGKIDS1",161,0)
 ;---
"RTN","MAGKIDS1",162,0)
 Q:$QUIT MAGRC  Q
"RTN","MAGKIDS1",163,0)
 ;
"RTN","MAGKIDS1",164,0)
 ;##### TURNS THE VERSION CHECKING ON FOR CLINICAL CLIENTS
"RTN","MAGKIDS1",165,0)
 ;
"RTN","MAGKIDS1",166,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGKIDS1",167,0)
 ;
"RTN","MAGKIDS1",168,0)
 ;                 S  If this flag is provided, the procedure will
"RTN","MAGKIDS1",169,0)
 ;                    work in "silent" mode. Nothing will be
"RTN","MAGKIDS1",170,0)
 ;                    displayed on the console or stored into the
"RTN","MAGKIDS1",171,0)
 ;                    INSTALLATION file (#9.7).
"RTN","MAGKIDS1",172,0)
 ;
"RTN","MAGKIDS1",173,0)
 ; Return Values
"RTN","MAGKIDS1",174,0)
 ; =============
"RTN","MAGKIDS1",175,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGKIDS1",176,0)
 ;            0  Success
"RTN","MAGKIDS1",177,0)
 ; Notes
"RTN","MAGKIDS1",178,0)
 ; =====
"RTN","MAGKIDS1",179,0)
 ;
"RTN","MAGKIDS1",180,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGKIDS1",181,0)
 ; D VERCHKON^MAGKIDS1() if you do not need its return value.
"RTN","MAGKIDS1",182,0)
 ;
"RTN","MAGKIDS1",183,0)
VERCHKON(FLAGS) ;
"RTN","MAGKIDS1",184,0)
 N MAGIEN,MAGMSG,MAGRC,MSG1,MSG2,SILENT,TMP
"RTN","MAGKIDS1",185,0)
 S FLAGS=$G(FLAGS),SILENT=(FLAGS["S")
"RTN","MAGKIDS1",186,0)
 D:'SILENT
"RTN","MAGKIDS1",187,0)
 . S TMP=+$P($G(XPDNM),"*",3)  ; Patch number
"RTN","MAGKIDS1",188,0)
 . S MSG1=$S(TMP:"Patch "_TMP_" is turning",1:"Turning")
"RTN","MAGKIDS1",189,0)
 . S MSG1=MSG1_" Version Checking ON..."
"RTN","MAGKIDS1",190,0)
 . D MES^MAGKIDS("")
"RTN","MAGKIDS1",191,0)
 . Q
"RTN","MAGKIDS1",192,0)
 S MAGRC=0
"RTN","MAGKIDS1",193,0)
 ;===
"RTN","MAGKIDS1",194,0)
 S MAGIEN=0
"RTN","MAGKIDS1",195,0)
 F  S MAGIEN=$O(^MAG(2006.1,MAGIEN))  Q:'MAGIEN  D  Q:MAGRC<0
"RTN","MAGKIDS1",196,0)
 . S MSG2="is already ON, no action taken"
"RTN","MAGKIDS1",197,0)
 . ;--- Turn the version checking ON for the site
"RTN","MAGKIDS1",198,0)
 . I '$P($G(^MAG(2006.1,MAGIEN,"KEYS")),U,5)  D  Q:MAGRC<0
"RTN","MAGKIDS1",199,0)
 . . N MAGFDA
"RTN","MAGKIDS1",200,0)
 . . S MAGFDA(2006.1,MAGIEN_",",130)=1
"RTN","MAGKIDS1",201,0)
 . . D FILE^DIE(,"MAGFDA","MAGMSG")
"RTN","MAGKIDS1",202,0)
 . . I $G(DIERR)  S MAGRC=$$DBS^MAGUERR("MAGMSG",2006.1,MAGIEN_",")  Q
"RTN","MAGKIDS1",203,0)
 . . S MSG2="has been turned ON"
"RTN","MAGKIDS1",204,0)
 . . Q
"RTN","MAGKIDS1",205,0)
 . Q:SILENT
"RTN","MAGKIDS1",206,0)
 . ;--- Display the status message
"RTN","MAGKIDS1",207,0)
 . S TMP=$P($G(^MAG(2006.1,MAGIEN,0)),U)  ; Institution IEN
"RTN","MAGKIDS1",208,0)
 . D MES^MAGKIDS(MSG1)
"RTN","MAGKIDS1",209,0)
 . D MES^MAGKIDS("Version Checking "_MSG2_" for Site: "_TMP)
"RTN","MAGKIDS1",210,0)
 . Q
"RTN","MAGKIDS1",211,0)
 ;===
"RTN","MAGKIDS1",212,0)
 Q:$QUIT MAGRC  Q
"RTN","MAGSIXG1")
0^3^B36487191
"RTN","MAGSIXG1",1,0)
MAGSIXG1 ;WOIFO/EdM/GEK/SEB/SG - LIST OF IMAGES RPCS ; 2/23/09 9:51am
"RTN","MAGSIXG1",2,0)
 ;;3.0;IMAGING;**8,48,59,93**;Dec 02, 2009;Build 163
"RTN","MAGSIXG1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSIXG1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXG1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXG1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXG1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXG1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXG1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXG1",11,0)
 ;; |                                                               |
"RTN","MAGSIXG1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXG1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXG1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXG1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXG1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXG1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG1",18,0)
 ;;
"RTN","MAGSIXG1",19,0)
 Q
"RTN","MAGSIXG1",20,0)
 ;
"RTN","MAGSIXG1",21,0)
 ;+++++ FORMATS RPC ERRORS
"RTN","MAGSIXG1",22,0)
ERRORS(RESULTS,RC) ;
"RTN","MAGSIXG1",23,0)
 S:$G(RC)'<0 RC=$$FIRSTERR^MAGUERR1()
"RTN","MAGSIXG1",24,0)
 D RPCERRS^MAGUERR1(.RESULTS,RC)
"RTN","MAGSIXG1",25,0)
 Q
"RTN","MAGSIXG1",26,0)
 ;
"RTN","MAGSIXG1",27,0)
 ;***** RETURNS THE LIST OF IMAGE DESCRIPTORS
"RTN","MAGSIXG1",28,0)
 ; RPC: MAG4 IMAGE LIST
"RTN","MAGSIXG1",29,0)
 ;
"RTN","MAGSIXG1",30,0)
 ; .MAGOUT       Reference to a local variable where the results
"RTN","MAGSIXG1",31,0)
 ;               are returned to.
"RTN","MAGSIXG1",32,0)
 ;
"RTN","MAGSIXG1",33,0)
 ; FLAGS         Flags that control the execution (can be combined):
"RTN","MAGSIXG1",34,0)
 ;
"RTN","MAGSIXG1",35,0)
 ;                 C  Capture date range. If this flag is provided,
"RTN","MAGSIXG1",36,0)
 ;                    then the remote procedure uses values of the
"RTN","MAGSIXG1",37,0)
 ;                    FROMDATE and TODATE parameters to select images
"RTN","MAGSIXG1",38,0)
 ;                    that were captured in this date range.
"RTN","MAGSIXG1",39,0)
 ;
"RTN","MAGSIXG1",40,0)
 ;                    Otherwise, values of those parameters are
"RTN","MAGSIXG1",41,0)
 ;                    treated as the date range when procedures were
"RTN","MAGSIXG1",42,0)
 ;                    performed.
"RTN","MAGSIXG1",43,0)
 ;
"RTN","MAGSIXG1",44,0)
 ;                 D  Include only deleted images (file #2005.1)
"RTN","MAGSIXG1",45,0)
 ;                 E  Include only existing images (file #2005)
"RTN","MAGSIXG1",46,0)
 ;
"RTN","MAGSIXG1",47,0)
 ;                 S  Return the sparse subset of images captured by
"RTN","MAGSIXG1",48,0)
 ;                    the user defined by the MISCPRMS("SAVEDBY").
"RTN","MAGSIXG1",49,0)
 ;                    The latter becomes required in this case.
"RTN","MAGSIXG1",50,0)
 ;
"RTN","MAGSIXG1",51,0)
 ;                    See description of the MAG4 IMAGE LIST remote
"RTN","MAGSIXG1",52,0)
 ;                    procedure for details.
"RTN","MAGSIXG1",53,0)
 ;
"RTN","MAGSIXG1",54,0)
 ;               If neither 'E' nor 'D' flag is provided, then an
"RTN","MAGSIXG1",55,0)
 ;               error code is returned.
"RTN","MAGSIXG1",56,0)
 ;
"RTN","MAGSIXG1",57,0)
 ; [FROMDATE]    Date range for image selection. Dates can be in
"RTN","MAGSIXG1",58,0)
 ; [TODATE]      internal or external FileMan format. If a date
"RTN","MAGSIXG1",59,0)
 ;               parameter is not defined or empty, then the date
"RTN","MAGSIXG1",60,0)
 ;               range remains open on the corresponding side.
"RTN","MAGSIXG1",61,0)
 ;
"RTN","MAGSIXG1",62,0)
 ;               Time parts of parameter values are ignored and both
"RTN","MAGSIXG1",63,0)
 ;               ends of the date range are included in the search.
"RTN","MAGSIXG1",64,0)
 ;               For example, in order to search images for May 21,
"RTN","MAGSIXG1",65,0)
 ;               2008, the inernal value of both parameters should
"RTN","MAGSIXG1",66,0)
 ;               be 3080521.
"RTN","MAGSIXG1",67,0)
 ;
"RTN","MAGSIXG1",68,0)
 ;               If the FROMDATE is after the TODATE, then values of
"RTN","MAGSIXG1",69,0)
 ;               the parameters are swapped.
"RTN","MAGSIXG1",70,0)
 ;
"RTN","MAGSIXG1",71,0)
 ; [MAXNUM]      If this parameter is defined and greater than 0,
"RTN","MAGSIXG1",72,0)
 ;               then it determines the maximum number of images
"RTN","MAGSIXG1",73,0)
 ;               returned by the call.
"RTN","MAGSIXG1",74,0)
 ;
"RTN","MAGSIXG1",75,0)
 ;               If the S flag is included in the value of the FLAGS
"RTN","MAGSIXG1",76,0)
 ;               parameter, then the MAXNUM parameter must be defined
"RTN","MAGSIXG1",77,0)
 ;               and greater than 0. Its value determines percentage
"RTN","MAGSIXG1",78,0)
 ;               of preselected images to be returned in the result
"RTN","MAGSIXG1",79,0)
 ;               array.
"RTN","MAGSIXG1",80,0)
 ;
"RTN","MAGSIXG1",81,0)
 ;               See description of the MAG4 IMAGE LIST remote
"RTN","MAGSIXG1",82,0)
 ;               procedure for details.
"RTN","MAGSIXG1",83,0)
 ;
"RTN","MAGSIXG1",84,0)
 ; [.MISCPRMS]   Reference to a local variable that stores misc.
"RTN","MAGSIXG1",85,0)
 ;               parameters that define the image selection criteria.
"RTN","MAGSIXG1",86,0)
 ;               See the description of the MAG4 IMAGE LIST remote
"RTN","MAGSIXG1",87,0)
 ;               procedure for details.
"RTN","MAGSIXG1",88,0)
 ;
"RTN","MAGSIXG1",89,0)
 ; Return Values
"RTN","MAGSIXG1",90,0)
 ; =============
"RTN","MAGSIXG1",91,0)
 ;     
"RTN","MAGSIXG1",92,0)
 ; If MAGOUT(0) is defined and its 1st '^'-piece is 0, then an error
"RTN","MAGSIXG1",93,0)
 ; occured during execution of the procedure. In this case, the array
"RTN","MAGSIXG1",94,0)
 ; is formatted as described in the comments to the RPCERRS^MAGUERR1.
"RTN","MAGSIXG1",95,0)
 ;  
"RTN","MAGSIXG1",96,0)
 ; See description of the MAG4 IMAGE LIST remote procedure for more
"RTN","MAGSIXG1",97,0)
 ; details.
"RTN","MAGSIXG1",98,0)
 ;
"RTN","MAGSIXG1",99,0)
 ; Notes
"RTN","MAGSIXG1",100,0)
 ; =====
"RTN","MAGSIXG1",101,0)
 ;
"RTN","MAGSIXG1",102,0)
 ; Temporary global nodes ^TMP("MAGSIX1",$J) and ^TMP("MAGSIXG3",$J)
"RTN","MAGSIXG1",103,0)
 ; are used by this procedure.
"RTN","MAGSIXG1",104,0)
 ;
"RTN","MAGSIXG1",105,0)
 ; If the number of images conforming to the filter reaches 76, all
"RTN","MAGSIXG1",106,0)
 ; results are stored in the ^TMP("MAGSIXG1",$J) global node, closed
"RTN","MAGSIXG1",107,0)
 ; reference is assigned to the MAGOUT parameter, and the type of the
"RTN","MAGSIXG1",108,0)
 ; RPC return parameter is changed to 'GLOBAL ARRAY'.
"RTN","MAGSIXG1",109,0)
 ;
"RTN","MAGSIXG1",110,0)
GETIMGS(MAGOUT,FLAGS,FROMDATE,TODATE,MAXNUM,MISCPRMS) ;RPC [MAG4 IMAGE LIST]
"RTN","MAGSIXG1",111,0)
 N MAGDATA       ; Array for passing the data to the callback
"RTN","MAGSIXG1",112,0)
 ;               ; function of the image query (including the
"RTN","MAGSIXG1",113,0)
 ;               ; image selection criteria).
"RTN","MAGSIXG1",114,0)
 ;
"RTN","MAGSIXG1",115,0)
 N ERROR,MISC,QF,RC,TMP
"RTN","MAGSIXG1",116,0)
 S (MAGDATA("RESCNT"),RC)=0,MAGDATA="MAGOUT"  K MAGOUT
"RTN","MAGSIXG1",117,0)
 D CLEAR^MAGUERR(1),NETPLCS^MAGGTU6
"RTN","MAGSIXG1",118,0)
 K ^TMP("MAGSIXG3",$J)
"RTN","MAGSIXG1",119,0)
 ;
"RTN","MAGSIXG1",120,0)
 ;=== Validate parameters
"RTN","MAGSIXG1",121,0)
 S ERROR=0
"RTN","MAGSIXG1",122,0)
 D
"RTN","MAGSIXG1",123,0)
 . N MISCDEFS
"RTN","MAGSIXG1",124,0)
 . ;--- Control flags
"RTN","MAGSIXG1",125,0)
 . S FLAGS=$G(FLAGS)
"RTN","MAGSIXG1",126,0)
 . I $TR(FLAGS,"CDES")'=""  D  S ERROR=1
"RTN","MAGSIXG1",127,0)
 . . D IPVE^MAGUERR("FLAGS")     ; Unknown/Unsupported flag(s)
"RTN","MAGSIXG1",128,0)
 . . Q
"RTN","MAGSIXG1",129,0)
 . I $TR(FLAGS,"DE")=FLAGS  D  S ERROR=1
"RTN","MAGSIXG1",130,0)
 . . D ERROR^MAGUERR(-6,,"D,E")  ; Missing required flag
"RTN","MAGSIXG1",131,0)
 . . Q
"RTN","MAGSIXG1",132,0)
 . ;--- Date range
"RTN","MAGSIXG1",133,0)
 . S:$$DTRANGE^MAGUTL03(.FROMDATE,.TODATE)<0 ERROR=1
"RTN","MAGSIXG1",134,0)
 . ;--- Miscellaneous parameters
"RTN","MAGSIXG1",135,0)
 . S RC=$$LDMPDEFS^MAGUTL01(.MISCDEFS,"MISCDEFS^MAGSIXG2")
"RTN","MAGSIXG1",136,0)
 . I RC<0  S ERROR=1  Q
"RTN","MAGSIXG1",137,0)
 . S RC=$$RPCMISC^MAGUTL02(.MISCPRMS,.MISC,.MISCDEFS,"UV")
"RTN","MAGSIXG1",138,0)
 . I RC<0  S ERROR=1  Q
"RTN","MAGSIXG1",139,0)
 . S:$$VALMISC^MAGSIXG2(.MISC,.MAGDATA)<0 ERROR=1
"RTN","MAGSIXG1",140,0)
 . ;--- Number/percentage of results
"RTN","MAGSIXG1",141,0)
 . I $G(MAXNUM)<0  D
"RTN","MAGSIXG1",142,0)
 . . D IPVE^MAGUERR("MAXNUM")  S ERROR=1
"RTN","MAGSIXG1",143,0)
 . . Q
"RTN","MAGSIXG1",144,0)
 . E  I FLAGS["S"  D
"RTN","MAGSIXG1",145,0)
 . . ;--- Check the percentage
"RTN","MAGSIXG1",146,0)
 . . S TMP=+$G(MAXNUM)
"RTN","MAGSIXG1",147,0)
 . . I 'TMP!(TMP>100)  D IPVE^MAGUERR("MAXNUM")  S ERROR=1  Q
"RTN","MAGSIXG1",148,0)
 . . S MAGDATA("SUBSET%")=TMP,MAXNUM=0
"RTN","MAGSIXG1",149,0)
 . . ;--- User filter is required for this query
"RTN","MAGSIXG1",150,0)
 . . S TMP=$NA(MAGDATA("SAVEDBY"))
"RTN","MAGSIXG1",151,0)
 . . I $G(@TMP)'>0  D ERROR^MAGUERR(-8,,TMP)  S ERROR=1  Q
"RTN","MAGSIXG1",152,0)
 . . Q
"RTN","MAGSIXG1",153,0)
 . S MAXNUM=+$G(MAXNUM)
"RTN","MAGSIXG1",154,0)
 . Q
"RTN","MAGSIXG1",155,0)
 ;--- Check for errors
"RTN","MAGSIXG1",156,0)
 I ERROR  D ERROR^MAGUERR(-30),ERRORS(.MAGOUT)  Q
"RTN","MAGSIXG1",157,0)
 ;
"RTN","MAGSIXG1",158,0)
 ;=== Query the image file(s)
"RTN","MAGSIXG1",159,0)
 S MAGDATA("FLAGS")=FLAGS,MAGDATA("MAXNUM")=MAXNUM
"RTN","MAGSIXG1",160,0)
 S TMP=$S(TODATE<9999999:$$FMADD^XLFDT(TODATE,1),1:TODATE)
"RTN","MAGSIXG1",161,0)
 S QF=$$TRFLAGS^MAGUTL05(FLAGS,"CDE")
"RTN","MAGSIXG1",162,0)
 S RC=$$QUERY^MAGGI13("$$QRYCBK^MAGSIXG3",QF,.MAGDATA,FROMDATE,TMP,+$G(MAGDATA("IDFN")))
"RTN","MAGSIXG1",163,0)
 I RC<0  D ERRORS(.MAGOUT,RC)  Q
"RTN","MAGSIXG1",164,0)
 ;
"RTN","MAGSIXG1",165,0)
 ;=== Post-processing for the sparse subset query
"RTN","MAGSIXG1",166,0)
 I FLAGS["S"  D  I RC<0  D ERRORS(.MAGOUT,RC)  Q
"RTN","MAGSIXG1",167,0)
 . S RC=$$SUBSET^MAGSIXG4()
"RTN","MAGSIXG1",168,0)
 . Q
"RTN","MAGSIXG1",169,0)
 ;
"RTN","MAGSIXG1",170,0)
 ;=== Cleanup
"RTN","MAGSIXG1",171,0)
 K ^TMP("MAGSIXG3",$J)
"RTN","MAGSIXG1",172,0)
 S TMP=$$FLTDESC^MAGSIXG2(.MAGDATA,FROMDATE(0),TODATE(0),FLAGS)
"RTN","MAGSIXG1",173,0)
 I 'MAGDATA("RESCNT")  D ERRORS(.MAGOUT,$$ERROR^MAGUERR(-19,,TMP))  Q
"RTN","MAGSIXG1",174,0)
 S @MAGDATA@(0)="1^"_TMP_$S($G(MAGDATA("MAXNUM")):U_(RC>0),1:"")
"RTN","MAGSIXG1",175,0)
 S @MAGDATA@(1)=$$BLDHDR^MAGSIXG2()
"RTN","MAGSIXG1",176,0)
 Q
"RTN","MAGSIXG1",177,0)
 ;
"RTN","MAGSIXG1",178,0)
 ;***** GET IMAGES FOR THE PATIENT
"RTN","MAGSIXG1",179,0)
 ; RPC: MAG4 PAT GET IMAGES
"RTN","MAGSIXG1",180,0)
 ;
"RTN","MAGSIXG1",181,0)
 ; .MAGOUT       Reference to a local variable where the results
"RTN","MAGSIXG1",182,0)
 ;               are returned to.
"RTN","MAGSIXG1",183,0)
 ;
"RTN","MAGSIXG1",184,0)
 ; DFN           Patient IEN (DFN)
"RTN","MAGSIXG1",185,0)
 ;       
"RTN","MAGSIXG1",186,0)
 ; [PKG]         Package index(es)
"RTN","MAGSIXG1",187,0)
 ; [CLASS]       Class index(es)
"RTN","MAGSIXG1",188,0)
 ; [TYPE]        Type index(es)
"RTN","MAGSIXG1",189,0)
 ; [EVENT]       Procedure/Event index(es)
"RTN","MAGSIXG1",190,0)
 ; [SPEC]        Speciality/SubSpecialty index(es)
"RTN","MAGSIXG1",191,0)
 ;
"RTN","MAGSIXG1",192,0)
 ; [FROMDATE]    Date range for image selection. See description
"RTN","MAGSIXG1",193,0)
 ; [TODATE]      of the GETIMGS^MAGSIXG1 entry point for details.
"RTN","MAGSIXG1",194,0)
 ;
"RTN","MAGSIXG1",195,0)
 ; [ORIGIN]      Origin index(es)
"RTN","MAGSIXG1",196,0)
 ;
"RTN","MAGSIXG1",197,0)
 ; [DATA]        Reserved for future use.
"RTN","MAGSIXG1",198,0)
 ;
"RTN","MAGSIXG1",199,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGSIXG1",200,0)
 ;
"RTN","MAGSIXG1",201,0)
 ;                 D  Include only deleted images (file #2005.1)
"RTN","MAGSIXG1",202,0)
 ;                 E  Include only existing images (file #2005)
"RTN","MAGSIXG1",203,0)
 ;
"RTN","MAGSIXG1",204,0)
 ;               By default ($G(FLAGS)=""), the "E" value is assumed.
"RTN","MAGSIXG1",205,0)
 ; 
"RTN","MAGSIXG1",206,0)
 ; Return Values
"RTN","MAGSIXG1",207,0)
 ; =============
"RTN","MAGSIXG1",208,0)
 ;
"RTN","MAGSIXG1",209,0)
 ; See description of the MAG4 PAT GET IMAGES remote procedure.
"RTN","MAGSIXG1",210,0)
 ;
"RTN","MAGSIXG1",211,0)
PGI(MAGOUT,DFN,PKG,CLASS,TYPE,EVENT,SPEC,FROMDATE,TODATE,ORIGIN,DATA,FLAGS) ;RPC [MAG4 PAT GET IMAGES]
"RTN","MAGSIXG1",212,0)
 N I,MISCPRMS
"RTN","MAGSIXG1",213,0)
 K MAGOUT  S I=0
"RTN","MAGSIXG1",214,0)
 ;--- Check the patient IEN (DFN)
"RTN","MAGSIXG1",215,0)
 I $G(DFN)'>0  D ERRORS(.MAGOUT,$$IPVE^MAGUERR("DFN"))  Q
"RTN","MAGSIXG1",216,0)
 S I=I+1,MISCPRMS(I)="IDFN^^"_(+DFN)
"RTN","MAGSIXG1",217,0)
 ;--- Check the flags
"RTN","MAGSIXG1",218,0)
 S:$G(FLAGS)="" FLAGS="E"
"RTN","MAGSIXG1",219,0)
 I $TR(FLAGS,"DE")'=""  D ERRORS(.MAGOUT,$$IPVE^MAGUERR("FLAGS"))  Q
"RTN","MAGSIXG1",220,0)
 ;--- Pass the filter parameters through
"RTN","MAGSIXG1",221,0)
 S:$G(PKG)'="" I=I+1,MISCPRMS(I)="IXPKG^^"_$TR(PKG,",","^")
"RTN","MAGSIXG1",222,0)
 S:$G(CLASS)'="" I=I+1,MISCPRMS(I)="IXCLASS^^"_$TR(CLASS,",","^")
"RTN","MAGSIXG1",223,0)
 S:$G(TYPE)'="" I=I+1,MISCPRMS(I)="IXTYPE^^"_$TR(TYPE,",","^")
"RTN","MAGSIXG1",224,0)
 S:$G(EVENT)'="" I=I+1,MISCPRMS(I)="IXPROC^^"_$TR(EVENT,",","^")
"RTN","MAGSIXG1",225,0)
 S:$G(SPEC)'="" I=I+1,MISCPRMS(I)="IXSPEC^^"_$TR(SPEC,",","^")
"RTN","MAGSIXG1",226,0)
 S:$G(ORIGIN)'="" I=I+1,MISCPRMS(I)="IXORIGIN^^"_$TR(ORIGIN,",","^")
"RTN","MAGSIXG1",227,0)
 ;--- Call the new remote procedure implementaion
"RTN","MAGSIXG1",228,0)
 D GETIMGS(.MAGOUT,FLAGS,.FROMDATE,.TODATE,,.MISCPRMS)
"RTN","MAGSIXG1",229,0)
 Q
"RTN","MAGSIXG2")
0^4^B63440737
"RTN","MAGSIXG2",1,0)
MAGSIXG2 ;WOIFO/SG - LIST OF IMAGES RPCS (PARAMETERS) ; 2/12/09 3:52pm
"RTN","MAGSIXG2",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGSIXG2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSIXG2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXG2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXG2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXG2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXG2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXG2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXG2",11,0)
 ;; |                                                               |
"RTN","MAGSIXG2",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXG2",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXG2",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXG2",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXG2",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXG2",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG2",18,0)
 ;;
"RTN","MAGSIXG2",19,0)
 ;
"RTN","MAGSIXG2",20,0)
 ; This routine uses the following ICRs:
"RTN","MAGSIXG2",21,0)
 ;
"RTN","MAGSIXG2",22,0)
 ; #10035        Read file #2 (supported)
"RTN","MAGSIXG2",23,0)
 ;
"RTN","MAGSIXG2",24,0)
 Q
"RTN","MAGSIXG2",25,0)
 ;
"RTN","MAGSIXG2",26,0)
 ;+++++ RETURNS THE HEADER FOR THE RPC RESULT ARRAY
"RTN","MAGSIXG2",27,0)
BLDHDR() ;
"RTN","MAGSIXG2",28,0)
 N HDR,I,TMP
"RTN","MAGSIXG2",29,0)
 S HDR=""
"RTN","MAGSIXG2",30,0)
 F I=3:1  S TMP=$P($T(BLDHDR1+I),";;",2)  Q:TMP=""  D
"RTN","MAGSIXG2",31,0)
 . S HDR=HDR_U_$$TRIM^XLFSTR($P(TMP,U,2))
"RTN","MAGSIXG2",32,0)
 . Q
"RTN","MAGSIXG2",33,0)
 Q $P(HDR,U,2,9999)
"RTN","MAGSIXG2",34,0)
 ;
"RTN","MAGSIXG2",35,0)
BLDHDR1 ;+++++ TEMPLATE OF THE HEADER FOR THE RESULT ARRAY
"RTN","MAGSIXG2",36,0)
 ;;  #   Header              Data Description
"RTN","MAGSIXG2",37,0)
 ;;---   --------------      --------------------------------------
"RTN","MAGSIXG2",38,0)
 ;;  1 ^ Item~S2           ^ Sequential number
"RTN","MAGSIXG2",39,0)
 ;;  2 ^ Site              ^
"RTN","MAGSIXG2",40,0)
 ;;  3 ^ Note Title~~W0    ^ *
"RTN","MAGSIXG2",41,0)
 ;;  4 ^ Proc DT~S1        ^ Procedure date
"RTN","MAGSIXG2",42,0)
 ;;  5 ^ Procedure         ^ Procedure
"RTN","MAGSIXG2",43,0)
 ;;  6 ^ # Img~S2          ^ Number of images
"RTN","MAGSIXG2",44,0)
 ;;  7 ^ Short Desc        ^
"RTN","MAGSIXG2",45,0)
 ;;  8 ^ Pkg               ^ PACKAGE INDEX (40) - Internal
"RTN","MAGSIXG2",46,0)
 ;;  9 ^ Class             ^ CLASS INDEX (41) - External
"RTN","MAGSIXG2",47,0)
 ;; 10 ^ Type              ^ TYPE INDEX (42) - External
"RTN","MAGSIXG2",48,0)
 ;; 11 ^ Specialty         ^ SPEC/SUBSPEC INDEX (44) - External
"RTN","MAGSIXG2",49,0)
 ;; 12 ^ Event             ^ PROC/EVENT INDEX (43) - External
"RTN","MAGSIXG2",50,0)
 ;; 13 ^ Origin            ^ ORIGIN INDEX (45)
"RTN","MAGSIXG2",51,0)
 ;; 14 ^ Cap Dt~S1~W0      ^ Capture date
"RTN","MAGSIXG2",52,0)
 ;; 15 ^ Cap by~~W0        ^ User who captured the image
"RTN","MAGSIXG2",53,0)
 ;; 16 ^ Image ID~S2~W0    ^ Image IEN
"RTN","MAGSIXG2",54,0)
 ;
"RTN","MAGSIXG2",55,0)
 ; Notes
"RTN","MAGSIXG2",56,0)
 ; =====
"RTN","MAGSIXG2",57,0)
 ;
"RTN","MAGSIXG2",58,0)
 ; Only the second "^"-column is used to build the header; everything 
"RTN","MAGSIXG2",59,0)
 ; else is provided for documentation purposes.
"RTN","MAGSIXG2",60,0)
 ;
"RTN","MAGSIXG2",61,0)
 Q
"RTN","MAGSIXG2",62,0)
 ;
"RTN","MAGSIXG2",63,0)
 ;+++++ RETURNS DESCRIPTION OF THE IMAGE SELECTION CRITERIA
"RTN","MAGSIXG2",64,0)
 ;
"RTN","MAGSIXG2",65,0)
 ; .MAGFLT       Reference to a local variable that stores the image
"RTN","MAGSIXG2",66,0)
 ;               selection criteria
"RTN","MAGSIXG2",67,0)
 ;
"RTN","MAGSIXG2",68,0)
 ; FROMDATE      Date range
"RTN","MAGSIXG2",69,0)
 ; TODATE
"RTN","MAGSIXG2",70,0)
 ;
"RTN","MAGSIXG2",71,0)
 ; FLAGS         Flags that control the image selection
"RTN","MAGSIXG2",72,0)
 ; 
"RTN","MAGSIXG2",73,0)
 ; Return Values
"RTN","MAGSIXG2",74,0)
 ; =============
"RTN","MAGSIXG2",75,0)
 ;               Description of the image selection criteria.
"RTN","MAGSIXG2",76,0)
 ;
"RTN","MAGSIXG2",77,0)
FLTDESC(MAGFLT,FROMDATE,TODATE,FLAGS) ;
"RTN","MAGSIXG2",78,0)
 N BUF,DTRANGE,FLT,TMP
"RTN","MAGSIXG2",79,0)
 S FLT=""
"RTN","MAGSIXG2",80,0)
 ;
"RTN","MAGSIXG2",81,0)
 ;--- Package
"RTN","MAGSIXG2",82,0)
 S:$G(MAGFLT("PKG"))'="" FLT=FLT_"Pkg: "_MAGFLT("PKG")_" - "
"RTN","MAGSIXG2",83,0)
 ;
"RTN","MAGSIXG2",84,0)
 ;--- Class
"RTN","MAGSIXG2",85,0)
 I $G(MAGFLT("CLS"))'=""  D  S FLT=FLT_"Class: "_BUF_" - "
"RTN","MAGSIXG2",86,0)
 . S BUF=MAGFLT("CLS")
"RTN","MAGSIXG2",87,0)
 . I BUF="ADMIN^ADMIN/CLIN^CLIN/ADMIN"  S BUF="ADMIN"  Q
"RTN","MAGSIXG2",88,0)
 . I BUF="CLIN^CLIN/ADMIN^ADMIN/CLIN"   S BUF="CLIN"   Q
"RTN","MAGSIXG2",89,0)
 . Q
"RTN","MAGSIXG2",90,0)
 ;
"RTN","MAGSIXG2",91,0)
 S:$G(MAGFLT("TYPE"))'="" FLT=FLT_"Type: "_MAGFLT("TYPE")_" - "
"RTN","MAGSIXG2",92,0)
 S:$G(MAGFLT("SPEC"))'="" FLT=FLT_"Spec: "_MAGFLT("SPEC")_" - "
"RTN","MAGSIXG2",93,0)
 S:$G(MAGFLT("EVT"))'="" FLT=FLT_"Event: "_MAGFLT("EVT")_" - "
"RTN","MAGSIXG2",94,0)
 S:$G(MAGFLT("ORIG"))'="" FLT=FLT_"Origin: "_MAGFLT("ORIG")_" - "
"RTN","MAGSIXG2",95,0)
 S:$G(MAGFLT("GDESC"))'="" FLT=FLT_"Descr: '"_MAGFLT("GDESC")_"' - "
"RTN","MAGSIXG2",96,0)
 ;
"RTN","MAGSIXG2",97,0)
 ;--- Image status
"RTN","MAGSIXG2",98,0)
 S:$G(MAGFLT("ISTAT"))'="" FLT=FLT_"Status: "_MAGFLT("ISTAT")_" - "
"RTN","MAGSIXG2",99,0)
 ;
"RTN","MAGSIXG2",100,0)
 ;--- Controlled image
"RTN","MAGSIXG2",101,0)
 S:$G(MAGFLT("SENSIMG"))'="" FLT=FLT_"Controlled: "_MAGFLT("SENSIMG")_" - "
"RTN","MAGSIXG2",102,0)
 ;
"RTN","MAGSIXG2",103,0)
 ;--- Capture application
"RTN","MAGSIXG2",104,0)
 S:$G(MAGFLT("CAPTAPP"))'="" FLT=FLT_"App: "_MAGFLT("CAPTAPP")_" - "
"RTN","MAGSIXG2",105,0)
 ;
"RTN","MAGSIXG2",106,0)
 ;--- Date Range
"RTN","MAGSIXG2",107,0)
 S DTRANGE=""
"RTN","MAGSIXG2",108,0)
 S:FROMDATE'="" DTRANGE=DTRANGE_" from "_FROMDATE
"RTN","MAGSIXG2",109,0)
 S:TODATE'="" DTRANGE=DTRANGE_" to "_TODATE
"RTN","MAGSIXG2",110,0)
 ;
"RTN","MAGSIXG2",111,0)
 ;--- Percentage of sparse subset
"RTN","MAGSIXG2",112,0)
 S BUF="",TMP=+$G(MAGFLT("SUBSET%"))
"RTN","MAGSIXG2",113,0)
 S:TMP>0 BUF=$S(TMP<1:"0"_TMP,1:TMP)_"% of "
"RTN","MAGSIXG2",114,0)
 ;
"RTN","MAGSIXG2",115,0)
 ;--- Control flags
"RTN","MAGSIXG2",116,0)
 I FLT="",DTRANGE=""  S BUF=BUF_"all "
"RTN","MAGSIXG2",117,0)
 S:FLAGS["E" BUF=BUF_"existing "
"RTN","MAGSIXG2",118,0)
 S:FLAGS["D" BUF=BUF_$S(FLAGS["E":"and ",1:"")_"deleted "
"RTN","MAGSIXG2",119,0)
 S FLT=FLT_$$SNTC^MAGUTL05(BUF)_"images"
"RTN","MAGSIXG2",120,0)
 ;
"RTN","MAGSIXG2",121,0)
 ;--- User who captured the images
"RTN","MAGSIXG2",122,0)
 S BUF=$G(MAGFLT("SAVEDBY"))
"RTN","MAGSIXG2",123,0)
 S:BUF>0 FLT=FLT_" captured by "_$P(BUF,U,2)
"RTN","MAGSIXG2",124,0)
 ;
"RTN","MAGSIXG2",125,0)
 ;--- Append the date range
"RTN","MAGSIXG2",126,0)
 S FLT=FLT_DTRANGE
"RTN","MAGSIXG2",127,0)
 S:FLAGS["C" FLT=FLT_" (capture date range)"
"RTN","MAGSIXG2",128,0)
 ;
"RTN","MAGSIXG2",129,0)
 ;---
"RTN","MAGSIXG2",130,0)
 Q $TR(FLT,"^",",")
"RTN","MAGSIXG2",131,0)
 ;
"RTN","MAGSIXG2",132,0)
MISCDEFS ;+++++ DEFINITIONS OF MISCELLANEOUS PARAMETERS
"RTN","MAGSIXG2",133,0)
 ;;==================================================================
"RTN","MAGSIXG2",134,0)
 ;;| Parameter  | File  |Field|Type |Flags|        Comment          |
"RTN","MAGSIXG2",135,0)
 ;;|------------+-------+-----+-----+-----+-------------------------|
"RTN","MAGSIXG2",136,0)
 ;;|CAPTAPP     |       |  8.1| S   |     | CAPTURE APPLICATION     |
"RTN","MAGSIXG2",137,0)
 ;;|GDESC       |       | 10  |     |     | SHORT DESCRIPTION       |
"RTN","MAGSIXG2",138,0)
 ;;|IDFN        |       |  5  | P   |     | Patient IEN (DFN)       |
"RTN","MAGSIXG2",139,0)
 ;;|ISTAT       |       |113  | S   |     | STATUS                  |
"RTN","MAGSIXG2",140,0)
 ;;|IXCLASS     |       |     | P   |     | CLASS INDEX             |
"RTN","MAGSIXG2",141,0)
 ;;|IXORIGIN    |       | 45  | S   |     | ORIGIN INDEX            |
"RTN","MAGSIXG2",142,0)
 ;;|IXPKG       |       | 40  | S   |     | PACKAGE INDEX           |
"RTN","MAGSIXG2",143,0)
 ;;|IXPROC      |       | 43  | P   |     | PROC/EVENT INDEX        |
"RTN","MAGSIXG2",144,0)
 ;;|IXSPEC      |       | 44  | P   |     | SPEC/SUBSPEC INDEX      |
"RTN","MAGSIXG2",145,0)
 ;;|IXTYPE      |       | 42  | P   |     | TYPE INDEX              |
"RTN","MAGSIXG2",146,0)
 ;;|SAVEDBY     |       |  8  | P   |     | Who captured (DUZ)      |
"RTN","MAGSIXG2",147,0)
 ;;|SENSIMG     |       |112  | S   |     | CONTROLLED IMAGE         |
"RTN","MAGSIXG2",148,0)
 ;;==================================================================
"RTN","MAGSIXG2",149,0)
 ;
"RTN","MAGSIXG2",150,0)
 ; Notes
"RTN","MAGSIXG2",151,0)
 ; =====
"RTN","MAGSIXG2",152,0)
 ;
"RTN","MAGSIXG2",153,0)
 ; File numbers are not included to disable automatic validation.
"RTN","MAGSIXG2",154,0)
 ;
"RTN","MAGSIXG2",155,0)
 Q
"RTN","MAGSIXG2",156,0)
 ;
"RTN","MAGSIXG2",157,0)
 ;+++++ VALIDATES MISCELLANEOUS PARAMETERS
"RTN","MAGSIXG2",158,0)
 ;
"RTN","MAGSIXG2",159,0)
 ; .MISC         Reference to a local variable that stores the tree
"RTN","MAGSIXG2",160,0)
 ;               of miscellaneous RPC parameters
"RTN","MAGSIXG2",161,0)
 ;
"RTN","MAGSIXG2",162,0)
 ; .MAGFLT       Reference to a local variable where the image
"RTN","MAGSIXG2",163,0)
 ;               selection criteria is constructed.
"RTN","MAGSIXG2",164,0)
 ; 
"RTN","MAGSIXG2",165,0)
 ; Return Values
"RTN","MAGSIXG2",166,0)
 ; =============
"RTN","MAGSIXG2",167,0)
 ;           <0  Error code
"RTN","MAGSIXG2",168,0)
 ;            0  Success
"RTN","MAGSIXG2",169,0)
 ;
"RTN","MAGSIXG2",170,0)
VALMISC(MISC,MAGFLT) ;
"RTN","MAGSIXG2",171,0)
 N ERROR,FLAGS,PNODE,RC,VAL
"RTN","MAGSIXG2",172,0)
 S ERROR=0
"RTN","MAGSIXG2",173,0)
 ;--- Patient IEN (DFN)
"RTN","MAGSIXG2",174,0)
 S PNODE=$NA(MISC("IDFN")),VAL=$P($G(@PNODE),U)
"RTN","MAGSIXG2",175,0)
 I VAL'=""  D
"RTN","MAGSIXG2",176,0)
 . I +VAL'=VAL  S ERROR=$$IPVE^MAGUERR("VAL",PNODE)  Q
"RTN","MAGSIXG2",177,0)
 . I '($D(^DPT(VAL,0))#2)  S ERROR=$$ERROR^MAGUERR(-5,,VAL)  Q
"RTN","MAGSIXG2",178,0)
 . S MAGFLT("IDFN")=VAL
"RTN","MAGSIXG2",179,0)
 . Q
"RTN","MAGSIXG2",180,0)
 E  S MAGFLT("IDFN")=""
"RTN","MAGSIXG2",181,0)
 ;--- User IEN (DUZ)
"RTN","MAGSIXG2",182,0)
 S PNODE=$NA(MISC("SAVEDBY")),VAL=$P($G(@PNODE),U)
"RTN","MAGSIXG2",183,0)
 I VAL'=""  D
"RTN","MAGSIXG2",184,0)
 . N NAME
"RTN","MAGSIXG2",185,0)
 . I +VAL'=VAL  S ERROR=$$IPVE^MAGUERR("VAL",PNODE)  Q
"RTN","MAGSIXG2",186,0)
 . S NAME=$$NAME^XUSER(VAL,"F")
"RTN","MAGSIXG2",187,0)
 . I NAME=""  S ERROR=$$IPVE^MAGUERR("VAL",PNODE)  Q
"RTN","MAGSIXG2",188,0)
 . S MAGFLT("SAVEDBY")=VAL_U_NAME
"RTN","MAGSIXG2",189,0)
 . Q
"RTN","MAGSIXG2",190,0)
 E  S MAGFLT("SAVEDBY")=""
"RTN","MAGSIXG2",191,0)
 ;--- Capture application
"RTN","MAGSIXG2",192,0)
 S VAL=$G(MISC("CAPTAPP"))
"RTN","MAGSIXG2",193,0)
 S RC=$$VALCNLST^MAGUTL06(VAL,2005,8.1,$NA(MAGFLT("CAPTAPP")))
"RTN","MAGSIXG2",194,0)
 I RC  D:RC>0 ERROR^MAGUERR(-42,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",195,0)
 ;--- Short description
"RTN","MAGSIXG2",196,0)
 S VAL=$G(MISC("GDESC"))
"RTN","MAGSIXG2",197,0)
 S:VAL'="" MAGFLT("GDESC")=$$UP^XLFSTR(VAL)
"RTN","MAGSIXG2",198,0)
 ;--- Status
"RTN","MAGSIXG2",199,0)
 S VAL=$G(MISC("ISTAT"))
"RTN","MAGSIXG2",200,0)
 S RC=$$VALCNLST^MAGUTL06(VAL,2005,113,$NA(MAGFLT("ISTAT")),"Z")
"RTN","MAGSIXG2",201,0)
 I RC  D:RC>0 ERROR^MAGUERR(-31,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",202,0)
 ;--- Controlled image
"RTN","MAGSIXG2",203,0)
 S VAL=$G(MISC("SENSIMG"))
"RTN","MAGSIXG2",204,0)
 S RC=$$VALCNLST^MAGUTL06(VAL,2005,112,$NA(MAGFLT("SENSIMG")))
"RTN","MAGSIXG2",205,0)
 I RC  D:RC>0 ERROR^MAGUERR(-32,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",206,0)
 ;--- Package
"RTN","MAGSIXG2",207,0)
 S VAL=$G(MISC("IXPKG"))
"RTN","MAGSIXG2",208,0)
 S RC=$$VALCNLST^MAGUTL06(VAL,2005,40,$NA(MAGFLT("PKG")))
"RTN","MAGSIXG2",209,0)
 I RC  D:RC>0 ERROR^MAGUERR(-11,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",210,0)
 ;--- Class
"RTN","MAGSIXG2",211,0)
 S VAL=$G(MISC("IXCLASS"))
"RTN","MAGSIXG2",212,0)
 S RC=$$VALPNLST^MAGUTL06(VAL,2005.82,$NA(MAGFLT("CLS")),"C")
"RTN","MAGSIXG2",213,0)
 I RC  D:RC>0 ERROR^MAGUERR(-12,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",214,0)
 ;--- Type
"RTN","MAGSIXG2",215,0)
 S VAL=$G(MISC("IXTYPE"))
"RTN","MAGSIXG2",216,0)
 S RC=$$VALPNLST^MAGUTL06(VAL,2005.83,$NA(MAGFLT("TYPE")),"C")
"RTN","MAGSIXG2",217,0)
 I RC  D:RC>0 ERROR^MAGUERR(-13,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",218,0)
 ;--- Event
"RTN","MAGSIXG2",219,0)
 S VAL=$G(MISC("IXPROC"))
"RTN","MAGSIXG2",220,0)
 S RC=$$VALPNLST^MAGUTL06(VAL,2005.85,$NA(MAGFLT("EVT")),"C")
"RTN","MAGSIXG2",221,0)
 I RC  D:RC>0 ERROR^MAGUERR(-14,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",222,0)
 ;--- Origin
"RTN","MAGSIXG2",223,0)
 S VAL=$G(MISC("IXORIGIN"))
"RTN","MAGSIXG2",224,0)
 S RC=$$VALCNLST^MAGUTL06(VAL,2005,45,$NA(MAGFLT("ORIG")))
"RTN","MAGSIXG2",225,0)
 I RC  D:RC>0 ERROR^MAGUERR(-15,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",226,0)
 ;--- Specialty (patch 59: for capture we don't want subspecialties)
"RTN","MAGSIXG2",227,0)
 S FLAGS=$S('$D(MAGJOB("CAPTURE")):"S",1:"")
"RTN","MAGSIXG2",228,0)
 S VAL=$G(MISC("IXSPEC"))
"RTN","MAGSIXG2",229,0)
 S RC=$$VALSPECS(VAL,$NA(MAGFLT("SPEC")),FLAGS)
"RTN","MAGSIXG2",230,0)
 I RC  D:RC>0 ERROR^MAGUERR(-16,,$P(VAL,U,RC))  S ERROR=1
"RTN","MAGSIXG2",231,0)
 ;---
"RTN","MAGSIXG2",232,0)
 Q $S(ERROR:-30,1:0)
"RTN","MAGSIXG2",233,0)
 ;
"RTN","MAGSIXG2",234,0)
 ;+++++ VALIDATES THE LIST OF SPECIALTIES
"RTN","MAGSIXG2",235,0)
VALSPECS(PTNMLIST,MAG8NODE,FLAGS) ;
"RTN","MAGSIXG2",236,0)
 N IEN,RC,SPIEN,XREF
"RTN","MAGSIXG2",237,0)
 S RC=$$VALPNLST^MAGUTL06(PTNMLIST,2005.84,MAG8NODE,"C")  Q:RC RC
"RTN","MAGSIXG2",238,0)
 Q:$G(FLAGS)'["S" 0
"RTN","MAGSIXG2",239,0)
 ;--- Add subspecialties if requested
"RTN","MAGSIXG2",240,0)
 S XREF=$$ROOT^DILFD(2005.84,,1),XREF=$NA(@XREF@("ASPEC"))
"RTN","MAGSIXG2",241,0)
 S SPIEN=""
"RTN","MAGSIXG2",242,0)
 F  S SPIEN=$O(@MAG8NODE@(SPIEN))  Q:SPIEN=""  D:$D(@XREF@(SPIEN))
"RTN","MAGSIXG2",243,0)
 . S IEN=""
"RTN","MAGSIXG2",244,0)
 . F  S IEN=$O(@XREF@(SPIEN,IEN))  Q:IEN=""  S @MAG8NODE@(IEN)=""
"RTN","MAGSIXG2",245,0)
 . Q
"RTN","MAGSIXG2",246,0)
 ;--- Success
"RTN","MAGSIXG2",247,0)
 Q 0
"RTN","MAGSIXG3")
0^47^B65195475
"RTN","MAGSIXG3",1,0)
MAGSIXG3 ;WOIFO/SG - LIST OF IMAGES RPCS (CALLBACK) ; 2/23/09 11:20am
"RTN","MAGSIXG3",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGSIXG3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSIXG3",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG3",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXG3",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXG3",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXG3",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXG3",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXG3",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXG3",11,0)
 ;; |                                                               |
"RTN","MAGSIXG3",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXG3",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXG3",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXG3",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXG3",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXG3",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG3",18,0)
 ;;
"RTN","MAGSIXG3",19,0)
 ;
"RTN","MAGSIXG3",20,0)
 ; This routine uses the following ICRs:
"RTN","MAGSIXG3",21,0)
 ;
"RTN","MAGSIXG3",22,0)
 ; #3268         Read file #8925 (controlled)
"RTN","MAGSIXG3",23,0)
 ; #10060        Read file #200 (supported)
"RTN","MAGSIXG3",24,0)
 ;
"RTN","MAGSIXG3",25,0)
 ; LOCAL VARIABLE ------ DESCRIPTION
"RTN","MAGSIXG3",26,0)
 ;
"RTN","MAGSIXG3",27,0)
 ; MAGDATA               See the ^MAGSIXG4.
"RTN","MAGSIXG3",28,0)
 ;
"RTN","MAGSIXG3",29,0)
 ; TEMPORARY GLOBAL ---- DESCRIPTION
"RTN","MAGSIXG3",30,0)
 ;
"RTN","MAGSIXG3",31,0)
 ; ^TMP("MAGSIXG3",$J)   See the ^MAGSIXG4.
"RTN","MAGSIXG3",32,0)
 ;
"RTN","MAGSIXG3",33,0)
 Q
"RTN","MAGSIXG3",34,0)
 ;
"RTN","MAGSIXG3",35,0)
 ;+++++ APPENDS THE IMAGE ENTRY TO THE RPC RESULT ARRAY
"RTN","MAGSIXG3",36,0)
 ;
"RTN","MAGSIXG3",37,0)
 ; IMGIEN        IEN of the image record in file #2005 or #2005.1
"RTN","MAGSIXG3",38,0)
 ;
"RTN","MAGSIXG3",39,0)
 ; DATA          First half ("|"-piece) of the result item
"RTN","MAGSIXG3",40,0)
 ;
"RTN","MAGSIXG3",41,0)
 ; GRPCNTS       Group counts (result of the $$GRPCT^MAGGI14)
"RTN","MAGSIXG3",42,0)
 ;
"RTN","MAGSIXG3",43,0)
 ; FLAGS         Control flags for the $$INFO^MAGGAII
"RTN","MAGSIXG3",44,0)
 ;
"RTN","MAGSIXG3",45,0)
 ; Input Variables
"RTN","MAGSIXG3",46,0)
 ; ===============
"RTN","MAGSIXG3",47,0)
 ;   MAGDATA
"RTN","MAGSIXG3",48,0)
 ;
"RTN","MAGSIXG3",49,0)
 ; Output Variables
"RTN","MAGSIXG3",50,0)
 ; ================
"RTN","MAGSIXG3",51,0)
 ;   MAGDATA, MAGOUT
"RTN","MAGSIXG3",52,0)
 ;
"RTN","MAGSIXG3",53,0)
 ; Return Values
"RTN","MAGSIXG3",54,0)
 ; =============
"RTN","MAGSIXG3",55,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGSIXG3",56,0)
 ;            0  Success
"RTN","MAGSIXG3",57,0)
 ;
"RTN","MAGSIXG3",58,0)
APPEND(IMGIEN,DATA,GRPCNTS,FLAGS) ;
"RTN","MAGSIXG3",59,0)
 N IMGINFO,X
"RTN","MAGSIXG3",60,0)
 ;
"RTN","MAGSIXG3",61,0)
 ;--- Get the internal image data
"RTN","MAGSIXG3",62,0)
 S IMGINFO=$$INFO^MAGGAII(IMGIEN,FLAGS,GRPCNTS)
"RTN","MAGSIXG3",63,0)
 Q:IMGINFO<0 IMGINFO
"RTN","MAGSIXG3",64,0)
 S $P(DATA,U,2)=$P(IMGINFO,U,16)  ; Site Code
"RTN","MAGSIXG3",65,0)
 S $P(DATA,U,6)=$P(IMGINFO,U,14)  ; Number of images in the group
"RTN","MAGSIXG3",66,0)
 S $P(DATA,U,16)=$P(IMGINFO,U)    ; Image ID (IEN)
"RTN","MAGSIXG3",67,0)
 ;
"RTN","MAGSIXG3",68,0)
 ;--- Append the image data to the result array
"RTN","MAGSIXG3",69,0)
 S MAGDATA("RESCNT")=$G(MAGDATA("RESCNT"))+1
"RTN","MAGSIXG3",70,0)
 S $P(DATA,U)=MAGDATA("RESCNT")
"RTN","MAGSIXG3",71,0)
 S @MAGDATA@(MAGDATA("RESCNT")+1)=DATA_U_"|"_IMGINFO
"RTN","MAGSIXG3",72,0)
 Q:MAGDATA("RESCNT")<76 0  Q:MAGDATA["^" 0
"RTN","MAGSIXG3",73,0)
 ;
"RTN","MAGSIXG3",74,0)
 ;--- Image count is getting big, switch from
"RTN","MAGSIXG3",75,0)
 ;--- a local array to a global node
"RTN","MAGSIXG3",76,0)
 S MAGDATA=$NA(^TMP("MAGSIXG1",$J))
"RTN","MAGSIXG3",77,0)
 K @MAGDATA  M @MAGDATA=MAGOUT
"RTN","MAGSIXG3",78,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGSIXG3",79,0)
 K MAGOUT  S MAGOUT=MAGDATA
"RTN","MAGSIXG3",80,0)
 Q 0
"RTN","MAGSIXG3",81,0)
 ;
"RTN","MAGSIXG3",82,0)
 ;+++++ PERFORMS SPECIAL CONVERSION OF THE DATE/TIME
"RTN","MAGSIXG3",83,0)
DTE(DTI) ;
"RTN","MAGSIXG3",84,0)
 N X  S X=$$FMTE^XLFDT(DTI,"5Z")
"RTN","MAGSIXG3",85,0)
 Q $P(X,"@")_" "_$S($P(X,"@",2)'="":$P(X,"@",2),1:"00:01")
"RTN","MAGSIXG3",86,0)
 ;
"RTN","MAGSIXG3",87,0)
 ;+++++ CALLBACK FUNCTION FOR IMAGE QUERY
"RTN","MAGSIXG3",88,0)
 ;
"RTN","MAGSIXG3",89,0)
 ; IMGIEN        IEN of the image record (file #2005 or #2005.1)
"RTN","MAGSIXG3",90,0)
 ;
"RTN","MAGSIXG3",91,0)
 ; FLAGS         Parameters passed into the image query API
"RTN","MAGSIXG3",92,0)
 ; .MAGDATA      ($$QUERY^MAGGI13). See the GETIMGS^MAGSIXG1
"RTN","MAGSIXG3",93,0)
 ;               for details.
"RTN","MAGSIXG3",94,0)
 ;
"RTN","MAGSIXG3",95,0)
 ; Input Variables
"RTN","MAGSIXG3",96,0)
 ; ===============
"RTN","MAGSIXG3",97,0)
 ;   MAGJOB, MAGOUT
"RTN","MAGSIXG3",98,0)
 ;
"RTN","MAGSIXG3",99,0)
 ; Output Variables
"RTN","MAGSIXG3",100,0)
 ; ================
"RTN","MAGSIXG3",101,0)
 ;   MAGJOB, MAGOUT, ^TMP("MAGSIXG3",$J,...)
"RTN","MAGSIXG3",102,0)
 ;
"RTN","MAGSIXG3",103,0)
 ; Return Values
"RTN","MAGSIXG3",104,0)
 ; =============
"RTN","MAGSIXG3",105,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGSIXG3",106,0)
 ;            0  Continue
"RTN","MAGSIXG3",107,0)
 ;           >0  Terminate the query
"RTN","MAGSIXG3",108,0)
 ;
"RTN","MAGSIXG3",109,0)
QRYCBK(IMGIEN,FLAGS,MAGDATA) ;
"RTN","MAGSIXG3",110,0)
 N CAPTAPP,CLASS,EVT,FLTX,GROUP,GRPCNTS,IIFLAGS,IMGNODE
"RTN","MAGSIXG3",111,0)
 N ORIG,PKG,PTIEN,RC,SENSIMG,SKIP,SPEC,STATUS,TYPE
"RTN","MAGSIXG3",112,0)
 N X,X0,X01,X100,X2,X40
"RTN","MAGSIXG3",113,0)
 S IMGNODE=$$NODE^MAGGI11(IMGIEN)  Q:IMGNODE="" 0
"RTN","MAGSIXG3",114,0)
 ;=== Terminate the query when maximum number of records is reached
"RTN","MAGSIXG3",115,0)
 I MAGDATA("MAXNUM"),MAGDATA("RESCNT")'<MAGDATA("MAXNUM")  Q 1
"RTN","MAGSIXG3",116,0)
 ;
"RTN","MAGSIXG3",117,0)
 ;=== Skip, if a group member
"RTN","MAGSIXG3",118,0)
 S X0=$G(@IMGNODE@(0))
"RTN","MAGSIXG3",119,0)
 Q:$P(X0,U,10) 0         ; GROUP PARENT (14)
"RTN","MAGSIXG3",120,0)
 ;
"RTN","MAGSIXG3",121,0)
 ;=== Check who captured the image
"RTN","MAGSIXG3",122,0)
 S X2=$G(@IMGNODE@(2)),X=+$G(MAGDATA("SAVEDBY"))
"RTN","MAGSIXG3",123,0)
 I X  Q:$P(X2,U,2)'=X 0  ; IMAGE SAVE BY (8)
"RTN","MAGSIXG3",124,0)
 ;
"RTN","MAGSIXG3",125,0)
 ;=== Perform additional screening according to the image counts
"RTN","MAGSIXG3",126,0)
 S GRPCNTS=$$GRPCT^MAGGI14(IMGIEN)
"RTN","MAGSIXG3",127,0)
 S:GRPCNTS<0 GRPCNTS=""  ;??? Ignore errors
"RTN","MAGSIXG3",128,0)
 S GROUP=$$ISGRP^MAGGI11(IMGIEN)
"RTN","MAGSIXG3",129,0)
 S SKIP=0  D  Q:SKIP 0
"RTN","MAGSIXG3",130,0)
 . ;--- Check if the image entry references "child" images of
"RTN","MAGSIXG3",131,0)
 . ;    requested kind(s). Also, safeguard against a wrong object
"RTN","MAGSIXG3",132,0)
 . ;--- type in the group header.
"RTN","MAGSIXG3",133,0)
 . I $P(GRPCNTS,U,1)>0  S GROUP=1  Q:FLAGS["E"  ; Existing "children"
"RTN","MAGSIXG3",134,0)
 . I $P(GRPCNTS,U,2)>0  S GROUP=1  Q:FLAGS["D"  ; Deleted "children"
"RTN","MAGSIXG3",135,0)
 . ;--- Skip group headers that do not reference
"RTN","MAGSIXG3",136,0)
 . ;--- any "child" images of requested kind(s)
"RTN","MAGSIXG3",137,0)
 . I GROUP  S SKIP=1  Q
"RTN","MAGSIXG3",138,0)
 . ;--- If existing images are not requested, then
"RTN","MAGSIXG3",139,0)
 . ;--- skip existing standalone image entries
"RTN","MAGSIXG3",140,0)
 . I FLAGS'["E",'$$ISDEL^MAGGI11(IMGIEN)  S SKIP=1  Q
"RTN","MAGSIXG3",141,0)
 . Q
"RTN","MAGSIXG3",142,0)
 ;
"RTN","MAGSIXG3",143,0)
 ;=== Load other data associated with the image
"RTN","MAGSIXG3",144,0)
 S X40=$G(@IMGNODE@(40)),X100=$G(@IMGNODE@(100))
"RTN","MAGSIXG3",145,0)
 S PTIEN=+$P(X0,U,7)      ; PATIENT (5)
"RTN","MAGSIXG3",146,0)
 S PKG=$P(X40,U)          ; PACKAGE INDEX (40)
"RTN","MAGSIXG3",147,0)
 S TYPE=$P(X40,U,3)       ; TYPE INDEX (42)
"RTN","MAGSIXG3",148,0)
 S EVT=$P(X40,U,4)        ; PROC/EVENT INDEX (43)
"RTN","MAGSIXG3",149,0)
 S SPEC=$P(X40,U,5)       ; SPEC/SUBSPEC INDEX (44)
"RTN","MAGSIXG3",150,0)
 S ORIG=$P(X40,U,6)       ; ORIGIN INDEX (45)
"RTN","MAGSIXG3",151,0)
 S:ORIG="" ORIG="V"       ; Show VA by default
"RTN","MAGSIXG3",152,0)
 S SENSIMG=+$P(X100,U,7)  ; CONTROLLED IMAGE (112)
"RTN","MAGSIXG3",153,0)
 S STATUS=$P(X100,U,8)    ; STATUS(113)
"RTN","MAGSIXG3",154,0)
 S CAPTAPP=$P(X2,U,12)    ; CAPTURE APPLICATION (8.1)
"RTN","MAGSIXG3",155,0)
 ;
"RTN","MAGSIXG3",156,0)
 ;=== Patch 59.  Treat Class as a computed field.
"RTN","MAGSIXG3",157,0)
 ;=== Arrange with Mike to change DB.
"RTN","MAGSIXG3",158,0)
 S CLASS=$S(TYPE:$P($G(^MAG(2005.83,+TYPE,0)),U,2),1:"")
"RTN","MAGSIXG3",159,0)
 I $D(MAGDATA("PKG")),PKG'=""    Q:'$D(MAGDATA("PKG",PKG)) 0
"RTN","MAGSIXG3",160,0)
 I $D(MAGDATA("ORIG")),ORIG'=""  Q:'$D(MAGDATA("ORIG",ORIG)) 0
"RTN","MAGSIXG3",161,0)
 I $D(MAGDATA("CLS")),CLASS'=""  Q:'$D(MAGDATA("CLS",CLASS)) 0
"RTN","MAGSIXG3",162,0)
 I $D(MAGDATA("TYPE")),TYPE      Q:'$D(MAGDATA("TYPE",TYPE)) 0
"RTN","MAGSIXG3",163,0)
 I $D(MAGDATA("ISTAT"))          Q:'$D(MAGDATA("ISTAT",+STATUS)) 0
"RTN","MAGSIXG3",164,0)
 ;
"RTN","MAGSIXG3",165,0)
 ;=== Skip list entries with no event if event is in
"RTN","MAGSIXG3",166,0)
 ;=== the selection criteria (MAG*3*8)
"RTN","MAGSIXG3",167,0)
 I $D(MAGDATA("EVT"))   Q:EVT="" 0   Q:'$D(MAGDATA("EVT",EVT)) 0
"RTN","MAGSIXG3",168,0)
 ;
"RTN","MAGSIXG3",169,0)
 ;=== Skip list entries with no specialty if specialty is in
"RTN","MAGSIXG3",170,0)
 ;=== the selection criteria (MAG*3*8)
"RTN","MAGSIXG3",171,0)
 I $D(MAGDATA("SPEC"))  Q:SPEC="" 0  Q:'$D(MAGDATA("SPEC",SPEC)) 0
"RTN","MAGSIXG3",172,0)
 ;
"RTN","MAGSIXG3",173,0)
 ;=== Skip list entries with no capture application if
"RTN","MAGSIXG3",174,0)
 ;=== applciation is in the selection criteria
"RTN","MAGSIXG3",175,0)
 I $D(MAGDATA("CAPTAPP"))  Q:CAPTAPP="" 0  Q:'$D(MAGDATA("CAPTAPP",CAPTAPP)) 0
"RTN","MAGSIXG3",176,0)
 ;
"RTN","MAGSIXG3",177,0)
 ;=== Check the short description
"RTN","MAGSIXG3",178,0)
 I $D(MAGDATA("GDESC"))  Q:$$UP^XLFSTR($P(X2,U,4))'[MAGDATA("GDESC") 0
"RTN","MAGSIXG3",179,0)
 ;
"RTN","MAGSIXG3",180,0)
 ;=== Build the result item
"RTN","MAGSIXG3",181,0)
 S $P(FLTX,U,3)=$$RPTITLE($P(X2,U,6),$P(X2,U,7))     ; Report title
"RTN","MAGSIXG3",182,0)
 S $P(FLTX,U,4)=$$DTE($P(X2,U,5))                    ; Procedure date
"RTN","MAGSIXG3",183,0)
 S $P(FLTX,U,5)=$P(X0,U,8)                           ; Procedure
"RTN","MAGSIXG3",184,0)
 S $P(FLTX,U,7)=$P(X2,U,4)                           ; Short descr.
"RTN","MAGSIXG3",185,0)
 S $P(FLTX,U,8)=PKG                                  ; Package
"RTN","MAGSIXG3",186,0)
 S $P(FLTX,U,9)=$P($G(^MAG(2005.82,+CLASS,0)),U)     ; Class
"RTN","MAGSIXG3",187,0)
 S $P(FLTX,U,10)=$P($G(^MAG(2005.83,+TYPE,0)),U)     ; Type
"RTN","MAGSIXG3",188,0)
 S $P(FLTX,U,11)=$P($G(^MAG(2005.84,+SPEC,0)),U)     ; (Sub)Specialty
"RTN","MAGSIXG3",189,0)
 S $P(FLTX,U,12)=$P($G(^MAG(2005.85,+EVT,0)),U)      ; Proc/Event
"RTN","MAGSIXG3",190,0)
 S $P(FLTX,U,13)=$$EXTERNAL^DILFD(2005,45,,ORIG)     ; Origin
"RTN","MAGSIXG3",191,0)
 S $P(FLTX,U,14)=$$DTE($P(X2,U))                     ; Capture date
"RTN","MAGSIXG3",192,0)
 S $P(FLTX,U,15)=$$GET1^DIQ(200,+$P(X2,U,2)_",",.01) ; Captured by
"RTN","MAGSIXG3",193,0)
 ;
"RTN","MAGSIXG3",194,0)
 ;=== Flags for $$INFO^MAGGAII
"RTN","MAGSIXG3",195,0)
 S IIFLAGS=$$TRFLAGS^MAGUTL05(FLAGS,"DE")
"RTN","MAGSIXG3",196,0)
 ;
"RTN","MAGSIXG3",197,0)
 ;=== Sparse subset query does not append image entries to the result 
"RTN","MAGSIXG3",198,0)
 ;    array right away. It saves them to the temporary buffers in the
"RTN","MAGSIXG3",199,0)
 ;    ^TMP("MAGSIXG3",$J) global node instead. After all images are
"RTN","MAGSIXG3",200,0)
 ;    preselected, the $$SUBSET^MAGSIXG4 processes those buffers and
"RTN","MAGSIXG3",201,0)
 ;=== appends required number of image entries to the result array.
"RTN","MAGSIXG3",202,0)
 I MAGDATA("FLAGS")["S"  S RC=0  D  Q $S(RC<0:RC,1:0)
"RTN","MAGSIXG3",203,0)
 . N I,TCNT
"RTN","MAGSIXG3",204,0)
 . S (MAGDATA("TCNT"),TCNT)=$G(MAGDATA("TCNT"))+1
"RTN","MAGSIXG3",205,0)
 . ;--- If the image is associated with the same patient as the
"RTN","MAGSIXG3",206,0)
 . ;--- previous one, save it in the regular temporary buffer.
"RTN","MAGSIXG3",207,0)
 . I PTIEN=$G(MAGDATA("PREVPT"))  D  Q
"RTN","MAGSIXG3",208,0)
 . . S I=$O(^TMP("MAGSIXG3",$J,"R",""),-1)+1
"RTN","MAGSIXG3",209,0)
 . . S ^TMP("MAGSIXG3",$J,"R",I)=TCNT_"|"_IMGIEN_"|"_GRPCNTS
"RTN","MAGSIXG3",210,0)
 . . S ^TMP("MAGSIXG3",$J,"R",I,0)=FLTX
"RTN","MAGSIXG3",211,0)
 . . Q
"RTN","MAGSIXG3",212,0)
 . ;--- If the image is associated with a different patient, remember
"RTN","MAGSIXG3",213,0)
 . ;--- the new DFN and store the image into the "priority" buffer.
"RTN","MAGSIXG3",214,0)
 . S MAGDATA("PREVPT")=PTIEN
"RTN","MAGSIXG3",215,0)
 . S ^TMP("MAGSIXG3",$J,"P",TCNT)=TCNT_"|"_IMGIEN_"|"_GRPCNTS
"RTN","MAGSIXG3",216,0)
 . S ^TMP("MAGSIXG3",$J,"P",TCNT,0)=FLTX
"RTN","MAGSIXG3",217,0)
 . ;--- If the image that precedes the patient change is not in the
"RTN","MAGSIXG3",218,0)
 . ;--- "priority" buffer yet, move it there from the regular buffer.
"RTN","MAGSIXG3",219,0)
 . S X=TCNT-1  Q:$D(^TMP("MAGSIXG3",$J,"P",X))
"RTN","MAGSIXG3",220,0)
 . S I=$O(^TMP("MAGSIXG3",$J,"R",""),-1)  Q:I=""
"RTN","MAGSIXG3",221,0)
 . I $P(^TMP("MAGSIXG3",$J,"R",I),"|")'=X  D  Q
"RTN","MAGSIXG3",222,0)
 . . S RC=$$ERROR^MAGUERR(-47)  ; This should never happen!
"RTN","MAGSIXG3",223,0)
 . . Q
"RTN","MAGSIXG3",224,0)
 . M ^TMP("MAGSIXG3",$J,"P",X)=^TMP("MAGSIXG3",$J,"R",I)
"RTN","MAGSIXG3",225,0)
 . K ^TMP("MAGSIXG3",$J,"R",I)
"RTN","MAGSIXG3",226,0)
 . Q
"RTN","MAGSIXG3",227,0)
 ;
"RTN","MAGSIXG3",228,0)
 ;=== Append the image item to the result array
"RTN","MAGSIXG3",229,0)
 S RC=$$APPEND(IMGIEN,FLTX,GRPCNTS,IIFLAGS)  Q:RC<0 RC
"RTN","MAGSIXG3",230,0)
 ;
"RTN","MAGSIXG3",231,0)
 ;=== Success
"RTN","MAGSIXG3",232,0)
 Q 0
"RTN","MAGSIXG3",233,0)
 ;
"RTN","MAGSIXG3",234,0)
 ;+++++ RETURNS THE NOTE TITLE
"RTN","MAGSIXG3",235,0)
RPTITLE(FILE,IEN) ;
"RTN","MAGSIXG3",236,0)
 N TITLE,TMP
"RTN","MAGSIXG3",237,0)
 I FILE=8925,IEN>0  D  S TITLE=$P($G(^TIU(8925.1,TMP,0)),U)
"RTN","MAGSIXG3",238,0)
 . S TMP=+$P($G(^TIU(8925,+IEN,0)),U)
"RTN","MAGSIXG3",239,0)
 . Q
"RTN","MAGSIXG3",240,0)
 Q $S($G(TITLE)'="":TITLE,1:"   ")
"RTN","MAGSIXG4")
0^52^B12614135
"RTN","MAGSIXG4",1,0)
MAGSIXG4 ;WOIFO/SG - LIST OF IMAGES RPCS (POST-PROCESSING) ; 4/6/09 1:49pm
"RTN","MAGSIXG4",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGSIXG4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGSIXG4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGSIXG4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGSIXG4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGSIXG4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGSIXG4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGSIXG4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGSIXG4",11,0)
 ;; |                                                               |
"RTN","MAGSIXG4",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGSIXG4",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGSIXG4",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGSIXG4",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGSIXG4",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGSIXG4",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGSIXG4",18,0)
 ;;
"RTN","MAGSIXG4",19,0)
 ; 
"RTN","MAGSIXG4",20,0)
 ; LOCAL VARIABLE ------ DESCRIPTION
"RTN","MAGSIXG4",21,0)
 ;
"RTN","MAGSIXG4",22,0)
 ; MAGDATA(              Closed root of the result array
"RTN","MAGSIXG4",23,0)
 ;
"RTN","MAGSIXG4",24,0)
 ;   "MAXNUM")           If the value of this node is greater than 0, 
"RTN","MAGSIXG4",25,0)
 ;                       then it determines the maximum number of
"RTN","MAGSIXG4",26,0)
 ;                       images returned by the query. See the MAXNUM 
"RTN","MAGSIXG4",27,0)
 ;                       parameter of the GETIMGS^MAGSIXG1.
"RTN","MAGSIXG4",28,0)
 ;
"RTN","MAGSIXG4",29,0)
 ;   "RESCNT")           Counter of image entries in the result array
"RTN","MAGSIXG4",30,0)
 ;
"RTN","MAGSIXG4",31,0)
 ;   "CAPTAPP",...)
"RTN","MAGSIXG4",32,0)
 ;   "CLS",...)
"RTN","MAGSIXG4",33,0)
 ;   "EVT",...)
"RTN","MAGSIXG4",34,0)
 ;   "FLAGS")
"RTN","MAGSIXG4",35,0)
 ;   "GDESC",...)
"RTN","MAGSIXG4",36,0)
 ;   "IDFN")
"RTN","MAGSIXG4",37,0)
 ;   "ISTAT",...)
"RTN","MAGSIXG4",38,0)
 ;   "ORIG",...)
"RTN","MAGSIXG4",39,0)
 ;   "PKG",...)
"RTN","MAGSIXG4",40,0)
 ;
"RTN","MAGSIXG4",41,0)
 ;   "PREVPT")           IEN of the patient who the previous image was
"RTN","MAGSIXG4",42,0)
 ;                       associated with.
"RTN","MAGSIXG4",43,0)
 ;
"RTN","MAGSIXG4",44,0)
 ;   "SAVEDBY")
"RTN","MAGSIXG4",45,0)
 ;   "SENSIMG",...)
"RTN","MAGSIXG4",46,0)
 ;   "SPEC",...)
"RTN","MAGSIXG4",47,0)
 ;
"RTN","MAGSIXG4",48,0)
 ;   "SUBSET%")          Percentage of preselected image entries
"RTN","MAGSIXG4",49,0)
 ;                       returned by the sparse subset query. See the
"RTN","MAGSIXG4",50,0)
 ;                       S flag of the GETIMGS^MAGSIXG1 for details.
"RTN","MAGSIXG4",51,0)
 ;
"RTN","MAGSIXG4",52,0)
 ;   "TCNT")             Total number of preselected image entries.
"RTN","MAGSIXG4",53,0)
 ;
"RTN","MAGSIXG4",54,0)
 ;   "TYPE",...)
"RTN","MAGSIXG4",55,0)
 ;
"RTN","MAGSIXG4",56,0)
 ;   Nodes PREVPT, SUBSET%, and TCNT exist only during sparse subset
"RTN","MAGSIXG4",57,0)
 ;   queries. See the S flag of the GETIMGS^MAGSIXG1 for details.
"RTN","MAGSIXG4",58,0)
 ;
"RTN","MAGSIXG4",59,0)
 ; TEMPORARY GLOBAL ---- DESCRIPTION
"RTN","MAGSIXG4",60,0)
 ;
"RTN","MAGSIXG4",61,0)
 ; ^TMP("MAGSIXG3",$J,
"RTN","MAGSIXG4",62,0)
 ;
"RTN","MAGSIXG4",63,0)
 ;   "P",                BUFFER FOR "PRIORITY" IMAGE ENTRIES
"RTN","MAGSIXG4",64,0)
 ;     Counter,          Image info
"RTN","MAGSIXG4",65,0)
 ;                         |01: Counter
"RTN","MAGSIXG4",66,0)
 ;                         |02: Image IEN
"RTN","MAGSIXG4",67,0)
 ;                         |03: Group counters ($$GRPCT^MAGGI14)
"RTN","MAGSIXG4",68,0)
 ;       0)              Image descriptor
"RTN","MAGSIXG4",69,0)
 ;
"RTN","MAGSIXG4",70,0)
 ;   "R",                BUFFER FOR REGULAR IMAGE ENTRIES
"RTN","MAGSIXG4",71,0)
 ;     Seq#,             Image info
"RTN","MAGSIXG4",72,0)
 ;                         |01: Counter
"RTN","MAGSIXG4",73,0)
 ;                         |02: Image IEN
"RTN","MAGSIXG4",74,0)
 ;                         |03: Group counters ($$GRPCT^MAGGI14)
"RTN","MAGSIXG4",75,0)
 ;       0)              Image descriptor
"RTN","MAGSIXG4",76,0)
 ;
"RTN","MAGSIXG4",77,0)
 Q
"RTN","MAGSIXG4",78,0)
 ;
"RTN","MAGSIXG4",79,0)
 ;+++++ POST-PROCESSING FOR THE SPARSE SUBSET QUERY
"RTN","MAGSIXG4",80,0)
 ;
"RTN","MAGSIXG4",81,0)
 ; Input Variables
"RTN","MAGSIXG4",82,0)
 ; ===============
"RTN","MAGSIXG4",83,0)
 ;   MAGDATA, ^TMP("MAGSIXG3",$J,...)
"RTN","MAGSIXG4",84,0)
 ;
"RTN","MAGSIXG4",85,0)
 ; Output Variables
"RTN","MAGSIXG4",86,0)
 ; ================
"RTN","MAGSIXG4",87,0)
 ;   MAGDATA, MAGOUT
"RTN","MAGSIXG4",88,0)
 ;
"RTN","MAGSIXG4",89,0)
 ; Return Values
"RTN","MAGSIXG4",90,0)
 ; =============
"RTN","MAGSIXG4",91,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGSIXG4",92,0)
 ;            0  Success
"RTN","MAGSIXG4",93,0)
 ;           >0  Success; not all "priority" records are returned
"RTN","MAGSIXG4",94,0)
 ;
"RTN","MAGSIXG4",95,0)
SUBSET() ;
"RTN","MAGSIXG4",96,0)
 Q:$G(MAGDATA("TCNT"))'>0 0
"RTN","MAGSIXG4",97,0)
 N FLTX,I,IIFLAGS,MORE,PCNT,RC,RCNT,TMP
"RTN","MAGSIXG4",98,0)
 S RC=0
"RTN","MAGSIXG4",99,0)
 ;
"RTN","MAGSIXG4",100,0)
 ;--- Get the nuber of images in temporary buffers
"RTN","MAGSIXG4",101,0)
 S RCNT=+$O(^TMP("MAGSIXG3",$J,"R",""),-1)  ; Regular
"RTN","MAGSIXG4",102,0)
 S PCNT=MAGDATA("TCNT")-RCNT                ; "Priority"
"RTN","MAGSIXG4",103,0)
 ;
"RTN","MAGSIXG4",104,0)
 ;--- Calculate the maximum number of images (requested percentage)
"RTN","MAGSIXG4",105,0)
 S TMP=MAGDATA("TCNT")*$G(MAGDATA("SUBSET%"))/100
"RTN","MAGSIXG4",106,0)
 S MAGDATA("MAXNUM")=$J(TMP,0,0)
"RTN","MAGSIXG4",107,0)
 S:MAGDATA("MAXNUM")<1 MAGDATA("MAXNUM")=1
"RTN","MAGSIXG4",108,0)
 S MORE=(PCNT>MAGDATA("MAXNUM"))
"RTN","MAGSIXG4",109,0)
 ;
"RTN","MAGSIXG4",110,0)
 ;--- Merge images from the regular buffer to the "priority" one
"RTN","MAGSIXG4",111,0)
 ;--- to fill the latter up to MAXNUM entries.
"RTN","MAGSIXG4",112,0)
 I PCNT<MAGDATA("MAXNUM"),RCNT>0  D  Q:RC<0 RC
"RTN","MAGSIXG4",113,0)
 . N RSV,STEP
"RTN","MAGSIXG4",114,0)
 . S STEP=RCNT/(MAGDATA("MAXNUM")-PCNT)  S:STEP<1 STEP=1
"RTN","MAGSIXG4",115,0)
 . F RSV=1:STEP:RCNT  S I=RSV\1  D  Q:RC
"RTN","MAGSIXG4",116,0)
 . . S TMP=$P($G(^TMP("MAGSIXG3",$J,"R",I)),"|")
"RTN","MAGSIXG4",117,0)
 . . I TMP>0,'$D(^TMP("MAGSIXG3",$J,"P",TMP))  D  Q
"RTN","MAGSIXG4",118,0)
 . . . M ^TMP("MAGSIXG3",$J,"P",TMP)=^TMP("MAGSIXG3",$J,"R",I)
"RTN","MAGSIXG4",119,0)
 . . . K ^TMP("MAGSIXG3",$J,"R",I)
"RTN","MAGSIXG4",120,0)
 . . . Q
"RTN","MAGSIXG4",121,0)
 . . S RC=$$ERROR^MAGUERR(-47)  ; This should never happen!
"RTN","MAGSIXG4",122,0)
 . . Q
"RTN","MAGSIXG4",123,0)
 . Q
"RTN","MAGSIXG4",124,0)
 ;
"RTN","MAGSIXG4",125,0)
 ;--- Copy selected image entries to the result array
"RTN","MAGSIXG4",126,0)
 S IIFLAGS=$$TRFLAGS^MAGUTL05(MAGDATA("FLAGS"),"DE")
"RTN","MAGSIXG4",127,0)
 S I=""
"RTN","MAGSIXG4",128,0)
 F  S I=$O(^TMP("MAGSIXG3",$J,"P",I))  Q:I=""  D  Q:RC
"RTN","MAGSIXG4",129,0)
 . I MAGDATA("RESCNT")'<MAGDATA("MAXNUM")  S RC=1  Q
"RTN","MAGSIXG4",130,0)
 . S TMP=^TMP("MAGSIXG3",$J,"P",I),FLTX=^(I,0)
"RTN","MAGSIXG4",131,0)
 . S RC=$$APPEND^MAGSIXG3($P(TMP,"|",2),FLTX,$P(TMP,"|",3),IIFLAGS)
"RTN","MAGSIXG4",132,0)
 . Q
"RTN","MAGSIXG4",133,0)
 ;---
"RTN","MAGSIXG4",134,0)
 Q $S(RC<0:RC,1:MORE)
"RTN","MAGUERR")
0^5^B24572740
"RTN","MAGUERR",1,0)
MAGUERR ;WOIFO/SG - ERROR HANDLING UTILITIES ; 3/9/09 12:53pm
"RTN","MAGUERR",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUERR",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUERR",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUERR",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUERR",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUERR",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUERR",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUERR",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUERR",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUERR",11,0)
 ;; |                                                               |
"RTN","MAGUERR",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUERR",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUERR",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUERR",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUERR",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUERR",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUERR",18,0)
 ;;
"RTN","MAGUERR",19,0)
 ; * Error codes are negative numbers.
"RTN","MAGUERR",20,0)
 ;
"RTN","MAGUERR",21,0)
 ; * The corresponding error messages are stored in the DIALOG file
"RTN","MAGUERR",22,0)
 ;   (#.84). Dialog numbers are calculated as follows:
"RTN","MAGUERR",23,0)
 ;
"RTN","MAGUERR",24,0)
 ;         Dialog# = 20050000 - (ErrorCode / 1000).
"RTN","MAGUERR",25,0)
 ;
"RTN","MAGUERR",26,0)
 ;   For example, dialog number for the error code -9 is 20050000.009.
"RTN","MAGUERR",27,0)
 ;
"RTN","MAGUERR",28,0)
 ; * A message itself is stored in the second "^"-piece of the dialog
"RTN","MAGUERR",29,0)
 ;   text line. The first piece determines the problem type:
"RTN","MAGUERR",30,0)
 ;
"RTN","MAGUERR",31,0)
 ;     I - Information. No actions are required.
"RTN","MAGUERR",32,0)
 ;
"RTN","MAGUERR",33,0)
 ;     W - Warning. There was a problem but the code was/will be
"RTN","MAGUERR",34,0)
 ;         able to ignore/recover and continue. User input errors
"RTN","MAGUERR",35,0)
 ;         have this type as well.
"RTN","MAGUERR",36,0)
 ;
"RTN","MAGUERR",37,0)
 ;     E - Error. The code encountered a major problem and could
"RTN","MAGUERR",38,0)
 ;         not continue. Data, code, or both should be fixed!
"RTN","MAGUERR",39,0)
 ;
"RTN","MAGUERR",40,0)
 ; TEMPORARY ERROR STORAGE
"RTN","MAGUERR",41,0)
 ; =======================
"RTN","MAGUERR",42,0)
 ;
"RTN","MAGUERR",43,0)
 ; ^TMP("MAG-ERRROR-STORAGE",$J,
"RTN","MAGUERR",44,0)
 ;   Seq#,
"RTN","MAGUERR",45,0)
 ;     0)                Error Descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUERR",46,0)
 ;                         ^01: Error code
"RTN","MAGUERR",47,0)
 ;                         ^02: Error message
"RTN","MAGUERR",48,0)
 ;                         ^03: Error location (TAG~ROUTINE)
"RTN","MAGUERR",49,0)
 ;                         ^04: Type ("W" - warning, "E" - error)
"RTN","MAGUERR",50,0)
 ;     1,Seq#)           Error details text (optional)
"RTN","MAGUERR",51,0)
 ;
"RTN","MAGUERR",52,0)
 ; Information messages (the "I" type) are never stored regardless
"RTN","MAGUERR",53,0)
 ; of the mode set by the CLEAR^MAGUERR.
"RTN","MAGUERR",54,0)
 ;
"RTN","MAGUERR",55,0)
 Q
"RTN","MAGUERR",56,0)
 ;
"RTN","MAGUERR",57,0)
 ;##### INITIALIZES THE ERROR STORAGE
"RTN","MAGUERR",58,0)
 ;
"RTN","MAGUERR",59,0)
 ; [ENABLE]      Enable/disable error storage (0|1). If the storage
"RTN","MAGUERR",60,0)
 ;               enabled, the $$ERROR function stores the error
"RTN","MAGUERR",61,0)
 ;               descriptors there. Otherwise, only the latest
"RTN","MAGUERR",62,0)
 ;               error descriptor is accessible (the result value
"RTN","MAGUERR",63,0)
 ;               of the $$ERROR or $$DBS functions).
"RTN","MAGUERR",64,0)
 ;
"RTN","MAGUERR",65,0)
 ; This procedure also clears the error storage (regardless of the
"RTN","MAGUERR",66,0)
 ; value of the ENABLE parameter).
"RTN","MAGUERR",67,0)
 ;
"RTN","MAGUERR",68,0)
CLEAR(ENABLE) ;
"RTN","MAGUERR",69,0)
 S:'($D(ENABLE)#10) ENABLE=$D(^TMP("MAG-ERRROR-STORAGE",$J))#10
"RTN","MAGUERR",70,0)
 K ^TMP("MAG-ERRROR-STORAGE",$J)
"RTN","MAGUERR",71,0)
 S:ENABLE ^TMP("MAG-ERRROR-STORAGE",$J)=""
"RTN","MAGUERR",72,0)
 D CLEAN^DILF
"RTN","MAGUERR",73,0)
 Q
"RTN","MAGUERR",74,0)
 ;
"RTN","MAGUERR",75,0)
 ;##### CHECKS THE ERRORS AFTER A FILEMAN DBS CALL
"RTN","MAGUERR",76,0)
 ;
"RTN","MAGUERR",77,0)
 ; MAG8MSG       Closed reference of the error message array
"RTN","MAGUERR",78,0)
 ;               (from a DBS call). If this parameter is empty,
"RTN","MAGUERR",79,0)
 ;               then the ^TMP("DIERR",$J) is assumed.
"RTN","MAGUERR",80,0)
 ;
"RTN","MAGUERR",81,0)
 ; [FILE]        File number used in the DBS call.
"RTN","MAGUERR",82,0)
 ; [IENS]        IENS used in the DBS call.
"RTN","MAGUERR",83,0)
 ;
"RTN","MAGUERR",84,0)
 ; This function checks the DIERR and @MAG8MSG variables after
"RTN","MAGUERR",85,0)
 ; a FileMan DBS call and returns the error descriptor in case of
"RTN","MAGUERR",86,0)
 ; error(s).
"RTN","MAGUERR",87,0)
 ; 
"RTN","MAGUERR",88,0)
 ; Return Values
"RTN","MAGUERR",89,0)
 ; =============
"RTN","MAGUERR",90,0)
 ;           <0  -9^Message text^Error location^Message type
"RTN","MAGUERR",91,0)
 ;            0  No errors
"RTN","MAGUERR",92,0)
 ;
"RTN","MAGUERR",93,0)
 ; Notes
"RTN","MAGUERR",94,0)
 ; =====
"RTN","MAGUERR",95,0)
 ;
"RTN","MAGUERR",96,0)
 ; If the error storage is enabled (see the CLEAR^MAGUERR), the
"RTN","MAGUERR",97,0)
 ; messages returned by the FileMan call are recorded along with
"RTN","MAGUERR",98,0)
 ; the error descriptor.  Otherwise, they are discarded.
"RTN","MAGUERR",99,0)
 ; 
"RTN","MAGUERR",100,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGUERR",101,0)
 ; D DBS^MAGUERR(...) if you do not need its return value.
"RTN","MAGUERR",102,0)
 ;
"RTN","MAGUERR",103,0)
DBS(MAG8MSG,FILE,IENS) ;
"RTN","MAGUERR",104,0)
 I '$G(DIERR)  Q:$QUIT 0  Q
"RTN","MAGUERR",105,0)
 N MSGTEXT,TMP
"RTN","MAGUERR",106,0)
 ;--- Format the FileMan error messages
"RTN","MAGUERR",107,0)
 D MSG^DIALOG("AE",.MSGTEXT,,,$G(MAG8MSG)),CLEAN^DILF
"RTN","MAGUERR",108,0)
 ;--- Record the error message
"RTN","MAGUERR",109,0)
 S TMP=$S($G(FILE):"; File #"_FILE,1:"")
"RTN","MAGUERR",110,0)
 S:$G(IENS)'="" TMP=TMP_"; IENS: """_IENS_""""
"RTN","MAGUERR",111,0)
 S TMP=$$ERROR(-9,.MSGTEXT,TMP)
"RTN","MAGUERR",112,0)
 Q:$QUIT TMP  Q
"RTN","MAGUERR",113,0)
 ;
"RTN","MAGUERR",114,0)
 ;##### GENERATES THE ERROR MESSAGE
"RTN","MAGUERR",115,0)
 ;
"RTN","MAGUERR",116,0)
 ; ERRCODE       Error code (negative number).
"RTN","MAGUERR",117,0)
 ;
"RTN","MAGUERR",118,0)
 ;               If the error code has the 'S' suffix (e.g. "-3S"),
"RTN","MAGUERR",119,0)
 ;               then the error info is NOT stored regardless of the
"RTN","MAGUERR",120,0)
 ;               storage mode set by the CLEAR^MAGUERR.
"RTN","MAGUERR",121,0)
 ;
"RTN","MAGUERR",122,0)
 ; [[.]MAGINFO]  Optional additional information: either a string or
"RTN","MAGUERR",123,0)
 ;               a reference to a local array that contains strings
"RTN","MAGUERR",124,0)
 ;               prepared for storage in a word processing field
"RTN","MAGUERR",125,0)
 ;               (first level nodes; no 0-nodes).
"RTN","MAGUERR",126,0)
 ;
"RTN","MAGUERR",127,0)
 ; [ARG1-ARG5]   Optional parameters for $$MSG^MAGUERR.
"RTN","MAGUERR",128,0)
 ;
"RTN","MAGUERR",129,0)
 ; Return Values
"RTN","MAGUERR",130,0)
 ; =============
"RTN","MAGUERR",131,0)
 ;           <0  Error code^Message text^Error location^Message type
"RTN","MAGUERR",132,0)
 ;            0  Ok (if ERRCODE'<0)
"RTN","MAGUERR",133,0)
 ;
"RTN","MAGUERR",134,0)
 ; Notes
"RTN","MAGUERR",135,0)
 ; =====
"RTN","MAGUERR",136,0)
 ;
"RTN","MAGUERR",137,0)
 ; "^" is replaced with "~" in the error location stored in the 3rd
"RTN","MAGUERR",138,0)
 ; piece of the error descriptor.
"RTN","MAGUERR",139,0)
 ;
"RTN","MAGUERR",140,0)
 ; If error storage is enabled by the CLEAR^MAGUERR and type is other 
"RTN","MAGUERR",141,0)
 ; than information (I), then this procedure saves the message info
"RTN","MAGUERR",142,0)
 ; to the temporary error storage.
"RTN","MAGUERR",143,0)
 ;
"RTN","MAGUERR",144,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGUERR",145,0)
 ; D ERROR^MAGUERR(...) if you do not need its return value.
"RTN","MAGUERR",146,0)
 ;
"RTN","MAGUERR",147,0)
ERROR(ERRCODE,MAGINFO,ARG1,ARG2,ARG3,ARG4,ARG5) ;
"RTN","MAGUERR",148,0)
 I ERRCODE'<0  Q:$QUIT 0  Q
"RTN","MAGUERR",149,0)
 N MSG,PLACE,SL,TYPE
"RTN","MAGUERR",150,0)
 ;--- Get the error location
"RTN","MAGUERR",151,0)
 S SL=$STACK(-1)-1,PLACE=""
"RTN","MAGUERR",152,0)
 F  Q:SL'>0  D  Q:'(PLACE[$T(+0))  S SL=SL-1
"RTN","MAGUERR",153,0)
 . S PLACE=$P($STACK(SL,"PLACE")," ")
"RTN","MAGUERR",154,0)
 . Q
"RTN","MAGUERR",155,0)
 ;--- Prepare the additional information
"RTN","MAGUERR",156,0)
 I $D(MAGINFO)=1  S MSG=MAGINFO  K MAGINFO  S MAGINFO(1)=MSG
"RTN","MAGUERR",157,0)
 ;--- Prepare the message descriptor
"RTN","MAGUERR",158,0)
 S MSG=$$MSG(+ERRCODE,.TYPE,.ARG1,.ARG2,.ARG3,.ARG4,.ARG5)
"RTN","MAGUERR",159,0)
 S MSG=(+ERRCODE)_U_MSG_U_$TR(PLACE,U,"~")_U_TYPE
"RTN","MAGUERR",160,0)
 ;--- Store the error info
"RTN","MAGUERR",161,0)
 I TYPE'="I",ERRCODE'["S"  D STORE(MSG,.MAGINFO)
"RTN","MAGUERR",162,0)
 ;---
"RTN","MAGUERR",163,0)
 Q:$QUIT MSG  Q
"RTN","MAGUERR",164,0)
 ;
"RTN","MAGUERR",165,0)
 ;##### GENERATES THE 'INVALID PARAMETER VALUE' ERROR
"RTN","MAGUERR",166,0)
 ;
"RTN","MAGUERR",167,0)
 ; MAG8NAME      Closed reference to the variable/node
"RTN","MAGUERR",168,0)
 ;
"RTN","MAGUERR",169,0)
 ; [DSPNAME]     Display name of the parameter. If this parameter is
"RTN","MAGUERR",170,0)
 ;               defined and not empty, its value is used as the
"RTN","MAGUERR",171,0)
 ;               parameter name in the error message (instead of the
"RTN","MAGUERR",172,0)
 ;               name passed in the MAG8NAME parameter).
"RTN","MAGUERR",173,0)
 ;
"RTN","MAGUERR",174,0)
 ; Return Values
"RTN","MAGUERR",175,0)
 ; =============
"RTN","MAGUERR",176,0)
 ;               -3^Message text^Error location^Message type
"RTN","MAGUERR",177,0)
 ;
"RTN","MAGUERR",178,0)
 ; Notes
"RTN","MAGUERR",179,0)
 ; =====
"RTN","MAGUERR",180,0)
 ;
"RTN","MAGUERR",181,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGUERR",182,0)
 ; D IPVE^MAGUERR(...) if you do not need its return value.
"RTN","MAGUERR",183,0)
 ;
"RTN","MAGUERR",184,0)
IPVE(MAG8NAME,DSPNAME) ;
"RTN","MAGUERR",185,0)
 N MAG8RC
"RTN","MAGUERR",186,0)
 S MAG8RC=$S($D(@MAG8NAME)#2:"'"_@MAG8NAME_"'",1:"<UNDEFINED>")
"RTN","MAGUERR",187,0)
 S MAG8RC=$$ERROR(-3,,$S($G(DSPNAME)'="":DSPNAME,1:MAG8NAME),MAG8RC)
"RTN","MAGUERR",188,0)
 Q:$QUIT MAG8RC  Q
"RTN","MAGUERR",189,0)
 ;
"RTN","MAGUERR",190,0)
 ;##### RETURNS THE TEXT AND TYPE OF THE MESSAGE
"RTN","MAGUERR",191,0)
 ;
"RTN","MAGUERR",192,0)
 ; ERRCODE       Error code
"RTN","MAGUERR",193,0)
 ;
"RTN","MAGUERR",194,0)
 ; [.TYPE]       Reference to a local variable where the problem
"RTN","MAGUERR",195,0)
 ;               type is returned ("I" -  Information, "W" - warning, 
"RTN","MAGUERR",196,0)
 ;               "E" - error).
"RTN","MAGUERR",197,0)
 ;
"RTN","MAGUERR",198,0)
 ; [ARG1-ARG5]   Optional parameters that substitute the |n| "windows"
"RTN","MAGUERR",199,0)
 ;               in the text of the message (for example, the |2| will
"RTN","MAGUERR",200,0)
 ;               be substituted by the value of the ARG2).
"RTN","MAGUERR",201,0)
 ;
"RTN","MAGUERR",202,0)
 ; Return Values
"RTN","MAGUERR",203,0)
 ; =============
"RTN","MAGUERR",204,0)
 ;               Text of the error message
"RTN","MAGUERR",205,0)
 ;
"RTN","MAGUERR",206,0)
 ; Notes
"RTN","MAGUERR",207,0)
 ; =====
"RTN","MAGUERR",208,0)
 ;
"RTN","MAGUERR",209,0)
 ; The "^" is replaced with the "~" in the message text.
"RTN","MAGUERR",210,0)
 ;
"RTN","MAGUERR",211,0)
MSG(ERRCODE,TYPE,ARG1,ARG2,ARG3,ARG4,ARG5) ;
"RTN","MAGUERR",212,0)
 Q:ERRCODE'<0 ""
"RTN","MAGUERR",213,0)
 N ARG,I1,I2,MSG
"RTN","MAGUERR",214,0)
 ;--- Get a descriptor of the message
"RTN","MAGUERR",215,0)
 S MSG=$$EZBLD^DIALOG(20050000-(ERRCODE/1000))
"RTN","MAGUERR",216,0)
 ;--- Parse and validate the descriptor
"RTN","MAGUERR",217,0)
 S TYPE=$E(MSG),MSG=$P(MSG,U,2,999)
"RTN","MAGUERR",218,0)
 S:("IWE"'[TYPE)!(TYPE="") TYPE="E"
"RTN","MAGUERR",219,0)
 Q:MSG?." " "Unknown error ("_ERRCODE_")"
"RTN","MAGUERR",220,0)
 ;--- Substitute parameters
"RTN","MAGUERR",221,0)
 S I1=2
"RTN","MAGUERR",222,0)
 F  S I1=$F(MSG,"|",I1-1)  Q:'I1  D
"RTN","MAGUERR",223,0)
 . S I2=$F(MSG,"|",I1)  Q:'I2
"RTN","MAGUERR",224,0)
 . X "S ARG=$G(ARG"_+$TR($E(MSG,I1,I2-2)," ")_")"
"RTN","MAGUERR",225,0)
 . S $E(MSG,I1-1,I2-1)=ARG
"RTN","MAGUERR",226,0)
 . Q
"RTN","MAGUERR",227,0)
 Q $TR($$TRIM^XLFSTR(MSG),U,"~")
"RTN","MAGUERR",228,0)
 ;
"RTN","MAGUERR",229,0)
 ;##### ASSIGNS THE DEFAULT ERROR HANDLER
"RTN","MAGUERR",230,0)
 ;
"RTN","MAGUERR",231,0)
 ; [RCVNAME]     Name of a variable for the error code
"RTN","MAGUERR",232,0)
 ;
"RTN","MAGUERR",233,0)
 ;               See the RTEHNDLR^MAGUERR1 for more details and the
"RTN","MAGUERR",234,0)
 ;               SETPROPS^MAGGA02 for a usage example.
"RTN","MAGUERR",235,0)
 ;
"RTN","MAGUERR",236,0)
SETDEFEH(RCVNAME) ;
"RTN","MAGUERR",237,0)
 S $ECODE=""
"RTN","MAGUERR",238,0)
 S $ETRAP="D RTEHNDLR^MAGUERR1("_$$DDQ^MAGUTL05($G(RCVNAME))_")"
"RTN","MAGUERR",239,0)
 Q
"RTN","MAGUERR",240,0)
 ;
"RTN","MAGUERR",241,0)
 ;##### STORES THE ERROR INFO
"RTN","MAGUERR",242,0)
 ;
"RTN","MAGUERR",243,0)
 ; ERROR         Error descriptor
"RTN","MAGUERR",244,0)
 ;
"RTN","MAGUERR",245,0)
 ; [.MAGINFO]    Reference to a local array with additional
"RTN","MAGUERR",246,0)
 ;               information
"RTN","MAGUERR",247,0)
 ;
"RTN","MAGUERR",248,0)
STORE(ERROR,MAGINFO) ;
"RTN","MAGUERR",249,0)
 Q:'$D(^TMP("MAG-ERRROR-STORAGE",$J))
"RTN","MAGUERR",250,0)
 N IEN
"RTN","MAGUERR",251,0)
 S IEN=$O(^TMP("MAG-ERRROR-STORAGE",$J," "),-1)+1
"RTN","MAGUERR",252,0)
 S ^TMP("MAG-ERRROR-STORAGE",$J,IEN,0)=ERROR
"RTN","MAGUERR",253,0)
 M ^TMP("MAG-ERRROR-STORAGE",$J,IEN,1)=MAGINFO
"RTN","MAGUERR",254,0)
 Q
"RTN","MAGUERR1")
0^12^B25613179
"RTN","MAGUERR1",1,0)
MAGUERR1 ;WOIFO/SG - ERROR HANDLING UTILITIES ; 3/9/09 12:53pm
"RTN","MAGUERR1",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUERR1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUERR1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUERR1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUERR1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUERR1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUERR1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUERR1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUERR1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUERR1",11,0)
 ;; |                                                               |
"RTN","MAGUERR1",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUERR1",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUERR1",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUERR1",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUERR1",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUERR1",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUERR1",18,0)
 ;;
"RTN","MAGUERR1",19,0)
 Q
"RTN","MAGUERR1",20,0)
 ;
"RTN","MAGUERR1",21,0)
 ;***** PRINTS THE DUMP OF THE ERROR STORAGE
"RTN","MAGUERR1",22,0)
DUMP() ;
"RTN","MAGUERR1",23,0)
 Q:$D(^TMP("MAG-ERRROR-STORAGE",$J))<10
"RTN","MAGUERR1",24,0)
 N EPTR,I,NODE,TMP
"RTN","MAGUERR1",25,0)
 S NODE=$NA(^TMP("MAG-ERRROR-STORAGE",$J))
"RTN","MAGUERR1",26,0)
 ;=== Print the header
"RTN","MAGUERR1",27,0)
 D DUMPL("Code  Message Text",1)
"RTN","MAGUERR1",28,0)
 D DUMPL("      Additional info")
"RTN","MAGUERR1",29,0)
 ;=== Print the errors
"RTN","MAGUERR1",30,0)
 S EPTR=""
"RTN","MAGUERR1",31,0)
 F  S EPTR=$O(@NODE@(EPTR))  Q:EPTR=""  D
"RTN","MAGUERR1",32,0)
 . ;--- Print the error descriptor
"RTN","MAGUERR1",33,0)
 . S TMP=@NODE@(EPTR,0)
"RTN","MAGUERR1",34,0)
 . D DUMPL($J(+TMP,4)_"  "_$P(TMP,U,2),1)
"RTN","MAGUERR1",35,0)
 . S TMP=$P(TMP,U,3)
"RTN","MAGUERR1",36,0)
 . D:TMP'="" DUMPL("      Location: "_TMP)
"RTN","MAGUERR1",37,0)
 . ;--- Print the optional text
"RTN","MAGUERR1",38,0)
 . S I=""
"RTN","MAGUERR1",39,0)
 . F  S I=$O(@NODE@(EPTR,1,I))  Q:I=""  D
"RTN","MAGUERR1",40,0)
 . . D DUMPL("      "_@NODE@(EPTR,1,I))
"RTN","MAGUERR1",41,0)
 . . Q
"RTN","MAGUERR1",42,0)
 . Q
"RTN","MAGUERR1",43,0)
 ;===
"RTN","MAGUERR1",44,0)
 Q
"RTN","MAGUERR1",45,0)
 ;
"RTN","MAGUERR1",46,0)
DUMPL(MSG,SKIP) ;
"RTN","MAGUERR1",47,0)
 I '$D(XPDNM)  W:$G(SKIP) !  W MSG,!  Q
"RTN","MAGUERR1",48,0)
 I $G(SKIP)  D BMES^XPDUTL(MSG)  Q
"RTN","MAGUERR1",49,0)
 D MES^XPDUTL(MSG)
"RTN","MAGUERR1",50,0)
 Q
"RTN","MAGUERR1",51,0)
 ;
"RTN","MAGUERR1",52,0)
 ;##### RETURNS A LIST OF ERROR CODES FROM THE ERROR STORAGE
"RTN","MAGUERR1",53,0)
 ;
"RTN","MAGUERR1",54,0)
 ; [ENCLOSE]     Enclose the list in commas.
"RTN","MAGUERR1",55,0)
 ;
"RTN","MAGUERR1",56,0)
 ; Return Values
"RTN","MAGUERR1",57,0)
 ; =============
"RTN","MAGUERR1",58,0)
 ;           ""  No errors
"RTN","MAGUERR1",59,0)
 ;          ...  List of error codes (in reverse chronological
"RTN","MAGUERR1",60,0)
 ;               order) separated by commas.
"RTN","MAGUERR1",61,0)
 ;
"RTN","MAGUERR1",62,0)
ERRLST(ENCLOSE) ;
"RTN","MAGUERR1",63,0)
 N I,LST
"RTN","MAGUERR1",64,0)
 S I=" ",LST=""
"RTN","MAGUERR1",65,0)
 F  S I=$O(^TMP("MAG-ERRROR-STORAGE",$J,I),-1)  Q:I'>0  D
"RTN","MAGUERR1",66,0)
 . S LST=LST_","_$P(^TMP("MAG-ERRROR-STORAGE",$J,I,0),U)
"RTN","MAGUERR1",67,0)
 . Q
"RTN","MAGUERR1",68,0)
 Q $S(LST="":"",$G(ENCLOSE):LST_",",1:$P(LST,",",2,9999))
"RTN","MAGUERR1",69,0)
 ;
"RTN","MAGUERR1",70,0)
 ;##### RETURNS DESCRIPTOR OF THE FIRST ERROR FROM THE ERROR STORAGE
"RTN","MAGUERR1",71,0)
 ;
"RTN","MAGUERR1",72,0)
 ; [.INFO]       Reference to a local array where additional text
"RTN","MAGUERR1",73,0)
 ;               associated with the error message is returned to
"RTN","MAGUERR1",74,0)
 ;               (first level nodes; no 0-nodes). If there is no
"RTN","MAGUERR1",75,0)
 ;               such text, this parameter will be undefined after
"RTN","MAGUERR1",76,0)
 ;               the call.
"RTN","MAGUERR1",77,0)
 ;
"RTN","MAGUERR1",78,0)
 ; Return Values
"RTN","MAGUERR1",79,0)
 ; =============
"RTN","MAGUERR1",80,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUERR1",81,0)
 ;           ""  Error storage is empty or it has not been
"RTN","MAGUERR1",82,0)
 ;               enabled (see the CLEAR^MAGUERR)
"RTN","MAGUERR1",83,0)
 ;
"RTN","MAGUERR1",84,0)
FIRSTERR(INFO) ;
"RTN","MAGUERR1",85,0)
 N I  K INFO
"RTN","MAGUERR1",86,0)
 S I=$O(^TMP("MAG-ERRROR-STORAGE",$J,0))  Q:I'>0 ""
"RTN","MAGUERR1",87,0)
 M INFO=^TMP("MAG-ERRROR-STORAGE",$J,I,1)
"RTN","MAGUERR1",88,0)
 Q $G(^TMP("MAG-ERRROR-STORAGE",$J,I,0))
"RTN","MAGUERR1",89,0)
 ;
"RTN","MAGUERR1",90,0)
 ;##### RETURNS DESCRIPTOR OF THE LAST ERROR FROM THE ERROR STORAGE
"RTN","MAGUERR1",91,0)
 ;
"RTN","MAGUERR1",92,0)
 ; [.INFO]       Reference to a local array where additional text
"RTN","MAGUERR1",93,0)
 ;               associated with the error message is returned to
"RTN","MAGUERR1",94,0)
 ;               (first level nodes; no 0-nodes). If there is no
"RTN","MAGUERR1",95,0)
 ;               such text, this parameter will be undefined after
"RTN","MAGUERR1",96,0)
 ;               the call.
"RTN","MAGUERR1",97,0)
 ;
"RTN","MAGUERR1",98,0)
 ; Return Values
"RTN","MAGUERR1",99,0)
 ; =============
"RTN","MAGUERR1",100,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUERR1",101,0)
 ;           ""  Error storage is empty or it has not been
"RTN","MAGUERR1",102,0)
 ;               enabled (see the CLEAR^MAGUERR)
"RTN","MAGUERR1",103,0)
 ;
"RTN","MAGUERR1",104,0)
LASTERR(INFO) ;
"RTN","MAGUERR1",105,0)
 N I  K INFO
"RTN","MAGUERR1",106,0)
 S I=$O(^TMP("MAG-ERRROR-STORAGE",$J," "),-1)  Q:I'>0 ""
"RTN","MAGUERR1",107,0)
 M INFO=^TMP("MAG-ERRROR-STORAGE",$J,I,1)
"RTN","MAGUERR1",108,0)
 Q $G(^TMP("MAG-ERRROR-STORAGE",$J,I,0))
"RTN","MAGUERR1",109,0)
 ;
"RTN","MAGUERR1",110,0)
 ;##### RETURNS ERRORS FROM A REMOTE PROCEDURE
"RTN","MAGUERR1",111,0)
 ;
"RTN","MAGUERR1",112,0)
 ; .RESULTS      Reference to the first parameter (RPC result) of the
"RTN","MAGUERR1",113,0)
 ;               entry point that implements the remote procedure.
"RTN","MAGUERR1",114,0)
 ;
"RTN","MAGUERR1",115,0)
 ;               If the type of the remote procedure result is GLOBAL 
"RTN","MAGUERR1",116,0)
 ;               ARRAY or GLOBAL INSTANCE and the RESULTS stores a
"RTN","MAGUERR1",117,0)
 ;               valid name of a node in the ^TMP global, then errors 
"RTN","MAGUERR1",118,0)
 ;               are returned "under" this node.
"RTN","MAGUERR1",119,0)
 ;
"RTN","MAGUERR1",120,0)
 ;               Otherwise, the RPC result type is changed to ARRAY
"RTN","MAGUERR1",121,0)
 ;               and errors are returned in the RESULTS array.
"RTN","MAGUERR1",122,0)
 ;
"RTN","MAGUERR1",123,0)
 ; [ERR]         Error descriptor of the main problem (from the RPC's
"RTN","MAGUERR1",124,0)
 ;               point of view ;-). Only the 2nd piece is used: the
"RTN","MAGUERR1",125,0)
 ;               message is returned as the 2nd piece of the result
"RTN","MAGUERR1",126,0)
 ;               descriptor (for compatibility with the old code).
"RTN","MAGUERR1",127,0)
 ;               By default, a generic message is used.
"RTN","MAGUERR1",128,0)
 ;
"RTN","MAGUERR1",129,0)
 ; Return Values
"RTN","MAGUERR1",130,0)
 ; =============
"RTN","MAGUERR1",131,0)
 ;
"RTN","MAGUERR1",132,0)
 ;   @MAG8RES@(0)        Result descriptor
"RTN","MAGUERR1",133,0)
 ;                         ^01: 0
"RTN","MAGUERR1",134,0)
 ;                         ^02: Message (2nd piece of the ERR)
"RTN","MAGUERR1",135,0)
 ;
"RTN","MAGUERR1",136,0)
 ;   @MAG8RES@(i)        Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUERR1",137,0)
 ;                         ^01: Error code
"RTN","MAGUERR1",138,0)
 ;                         ^02: Message
"RTN","MAGUERR1",139,0)
 ;                         ^03: Error location
"RTN","MAGUERR1",140,0)
 ;                         ^04: Message type
"RTN","MAGUERR1",141,0)
 ;
"RTN","MAGUERR1",142,0)
 ;   @MAG8RES@(j)        Line of the additional info
"RTN","MAGUERR1",143,0)
 ;                         ^01: ""
"RTN","MAGUERR1",144,0)
 ;                         ^02: Text
"RTN","MAGUERR1",145,0)
 ;
"RTN","MAGUERR1",146,0)
 ; The MAG8RES value is either the value of the RESULTS parameter
"RTN","MAGUERR1",147,0)
 ; (global node) or the parameter's name ("RESULTS").
"RTN","MAGUERR1",148,0)
 ;
"RTN","MAGUERR1",149,0)
 ; Error descriptors are returned in reverse chronological order
"RTN","MAGUERR1",150,0)
 ; (most recent first).
"RTN","MAGUERR1",151,0)
 ; 
"RTN","MAGUERR1",152,0)
 ; Notes
"RTN","MAGUERR1",153,0)
 ; =====
"RTN","MAGUERR1",154,0)
 ;
"RTN","MAGUERR1",155,0)
 ; In order to use this functionality, the error storage must be
"RTN","MAGUERR1",156,0)
 ; enabled and initialized in the beginning of the code that
"RTN","MAGUERR1",157,0)
 ; implements the remote procedure (see the CLEAR^MAGUERR). See the
"RTN","MAGUERR1",158,0)
 ; MAGGA0* routines for usage examples.
"RTN","MAGUERR1",159,0)
 ;
"RTN","MAGUERR1",160,0)
RPCERRS(RESULTS,ERR) ;
"RTN","MAGUERR1",161,0)
 N CNT,EPTR,I,MAGLOBAL,MAG8RES,TMP
"RTN","MAGUERR1",162,0)
 ;=== Re-initialize the result array
"RTN","MAGUERR1",163,0)
 D:$G(RESULTS)?1"^TMP("1.E1")"
"RTN","MAGUERR1",164,0)
 . N $ESTACK,$ETRAP
"RTN","MAGUERR1",165,0)
 . S $ETRAP="S (MAG8RES,$ECODE)="""""
"RTN","MAGUERR1",166,0)
 . ;--- Check if the node name is valid
"RTN","MAGUERR1",167,0)
 . S MAG8RES=$NA(@RESULTS)
"RTN","MAGUERR1",168,0)
 . Q
"RTN","MAGUERR1",169,0)
 I $G(MAG8RES)=""  D  S MAG8RES="RESULTS"
"RTN","MAGUERR1",170,0)
 . ;--- Change type of the RPC result
"RTN","MAGUERR1",171,0)
 . S TMP=$$RTRNFMT^XWBLIB("ARRAY",1)
"RTN","MAGUERR1",172,0)
 . Q
"RTN","MAGUERR1",173,0)
 ;--- Clear the buffer
"RTN","MAGUERR1",174,0)
 K @MAG8RES
"RTN","MAGUERR1",175,0)
 ;
"RTN","MAGUERR1",176,0)
 ;=== Format the result descriptor (backward compatible)
"RTN","MAGUERR1",177,0)
 S TMP=$$TRIM^XLFSTR($P($G(ERR),U,2))
"RTN","MAGUERR1",178,0)
 S @MAG8RES@(0)="0"_U_$S(TMP'="":TMP,1:"RPC encountered error(s).")
"RTN","MAGUERR1",179,0)
 Q:$D(^TMP("MAG-ERRROR-STORAGE",$J))<10
"RTN","MAGUERR1",180,0)
 ;
"RTN","MAGUERR1",181,0)
 ;=== Get errors from the temporary storage
"RTN","MAGUERR1",182,0)
 S EPTR="",CNT=0
"RTN","MAGUERR1",183,0)
 F  S EPTR=$O(^TMP("MAG-ERRROR-STORAGE",$J,EPTR),-1)  Q:EPTR=""  D
"RTN","MAGUERR1",184,0)
 . S TMP=$G(^TMP("MAG-ERRROR-STORAGE",$J,EPTR,0))  Q:'TMP
"RTN","MAGUERR1",185,0)
 . S CNT=CNT+1,@MAG8RES@(CNT)=TMP
"RTN","MAGUERR1",186,0)
 . S I=0
"RTN","MAGUERR1",187,0)
 . F  S I=$O(^TMP("MAG-ERRROR-STORAGE",$J,EPTR,1,I))  Q:I'>0  D
"RTN","MAGUERR1",188,0)
 . . S CNT=CNT+1
"RTN","MAGUERR1",189,0)
 . . S $P(@MAG8RES@(CNT),U,2)=^TMP("MAG-ERRROR-STORAGE",$J,EPTR,1,I)
"RTN","MAGUERR1",190,0)
 . . Q
"RTN","MAGUERR1",191,0)
 . Q
"RTN","MAGUERR1",192,0)
 ;
"RTN","MAGUERR1",193,0)
 ;=== Cleanup
"RTN","MAGUERR1",194,0)
 D CLEAR^MAGUERR(0)   ; Error storage
"RTN","MAGUERR1",195,0)
 K ^TMP("DILIST",$J)  ; Default FileMan buffer
"RTN","MAGUERR1",196,0)
 Q
"RTN","MAGUERR1",197,0)
 ;
"RTN","MAGUERR1",198,0)
 ;+++++ DEFAULT RUN-TIME ERROR HANDLER
"RTN","MAGUERR1",199,0)
 ;
"RTN","MAGUERR1",200,0)
 ; MAGZZRCV      Name of a variable that the error descriptor
"RTN","MAGUERR1",201,0)
 ;               (-20) is assigned to.
"RTN","MAGUERR1",202,0)
 ;
"RTN","MAGUERR1",203,0)
RTEHNDLR(MAGZZRCV) ;
"RTN","MAGUERR1",204,0)
 N MAGZZERR,MAGZZRC
"RTN","MAGUERR1",205,0)
 ;--- Record the error
"RTN","MAGUERR1",206,0)
 S MAGZZERR=$$EC^%ZOSV  D ^%ZTER  S $ECODE=""
"RTN","MAGUERR1",207,0)
 S MAGZZRC=$$ERROR^MAGUERR(-20,,MAGZZERR)
"RTN","MAGUERR1",208,0)
 ;--- Unwind the stack and assign/return the error descriptor
"RTN","MAGUERR1",209,0)
 S $ETRAP="S:$ESTACK'>0 $ECODE="""""
"RTN","MAGUERR1",210,0)
 S:MAGZZRCV'="" $ETRAP=$ETRAP_","_MAGZZRCV_"="_$$DDQ^MAGUTL05(MAGZZRC)
"RTN","MAGUERR1",211,0)
 S $ETRAP=$ETRAP_" Q:$QUIT "_$$DDQ^MAGUTL05(MAGZZRC)_" Q"
"RTN","MAGUERR1",212,0)
 S $ECODE=",U1,"
"RTN","MAGUERR1",213,0)
 Q:$QUIT MAGZZRC  Q
"RTN","MAGUTL01")
0^6^B28612084
"RTN","MAGUTL01",1,0)
MAGUTL01 ;WOIFO/SG - PARAMETERS AND VALIDATION UTILITIES ; 3/9/09 12:53pm
"RTN","MAGUTL01",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL01",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL01",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL01",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL01",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL01",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL01",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL01",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL01",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL01",11,0)
 ;; |                                                               |
"RTN","MAGUTL01",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL01",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL01",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL01",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL01",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL01",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL01",18,0)
 ;;
"RTN","MAGUTL01",19,0)
 Q
"RTN","MAGUTL01",20,0)
 ;
"RTN","MAGUTL01",21,0)
 ;##### DELETES THE PARAMETER FROM THE DEFINITION TREE
"RTN","MAGUTL01",22,0)
 ;
"RTN","MAGUTL01",23,0)
 ; .MAGMSPSDEFS  Reference to a local variable that stores the
"RTN","MAGUTL01",24,0)
 ;               parameter definition tree generated by the
"RTN","MAGUTL01",25,0)
 ;               $$LDMPDEFS^MAGUTL01.
"RTN","MAGUTL01",26,0)
 ;
"RTN","MAGUTL01",27,0)
 ; PNAME         Full name of the parameter: list of names separated
"RTN","MAGUTL01",28,0)
 ;               by the '/' that form the path to the parameter
"RTN","MAGUTL01",29,0)
 ;               descriptor in the definition tree.
"RTN","MAGUTL01",30,0)
 ;
"RTN","MAGUTL01",31,0)
DELMPAR(MAGMSPSDEFS,PNAME) ;
"RTN","MAGUTL01",32,0)
 N I,NAME,PNODE
"RTN","MAGUTL01",33,0)
 S NAME=$P(PNAME,"/")  Q:NAME=""
"RTN","MAGUTL01",34,0)
 S PNODE="MAGMSPSDEFS"
"RTN","MAGUTL01",35,0)
 F I=2:1  S TMP=$P(PNAME,"/",I)  Q:TMP=""  D
"RTN","MAGUTL01",36,0)
 . S PNODE=$NA(@PNODE@("N",NAME)),NAME=TMP
"RTN","MAGUTL01",37,0)
 . Q
"RTN","MAGUTL01",38,0)
 K @PNODE@("N",NAME),@PNODE@("Q",NAME)
"RTN","MAGUTL01",39,0)
 Q
"RTN","MAGUTL01",40,0)
 ;
"RTN","MAGUTL01",41,0)
 ;+++++ RETURNS THE LINE OF THE PARAMETER DEFINITIONS TABLE
"RTN","MAGUTL01",42,0)
 ;
"RTN","MAGUTL01",43,0)
 ; OFFSET        Offset of the line from the tag
"RTN","MAGUTL01",44,0)
 ;
"RTN","MAGUTL01",45,0)
 ; Input Variables
"RTN","MAGUTL01",46,0)
 ; ===============
"RTN","MAGUTL01",47,0)
 ;   MAGRTN, MAGTAG
"RTN","MAGUTL01",48,0)
 ;
"RTN","MAGUTL01",49,0)
 ; Notes
"RTN","MAGUTL01",50,0)
 ; =====
"RTN","MAGUTL01",51,0)
 ;
"RTN","MAGUTL01",52,0)
 ; This is an internal entry point. Do not call it from outside
"RTN","MAGUTL01",53,0)
 ; of this routine.
"RTN","MAGUTL01",54,0)
 ;
"RTN","MAGUTL01",55,0)
GETPDEF(OFFSET) ;
"RTN","MAGUTL01",56,0)
 Q $P($T(@(MAGTAG_"+"_OFFSET_"^"_MAGRTN)),";;",2)
"RTN","MAGUTL01",57,0)
 ;
"RTN","MAGUTL01",58,0)
 ;##### LOADS DEFINITIONS OF MISCELLANEOUS PARAMETERS
"RTN","MAGUTL01",59,0)
 ;
"RTN","MAGUTL01",60,0)
 ; .MAGMSPSDEFS( Reference to a local variable where descriptors
"RTN","MAGUTL01",61,0)
 ;               of the miscellaneous parameters are loaded to.
"RTN","MAGUTL01",62,0)
 ;   "N",
"RTN","MAGUTL01",63,0)
 ;     Name,     Parameter descriptor
"RTN","MAGUTL01",64,0)
 ;                 ^01: (Sub)file number
"RTN","MAGUTL01",65,0)
 ;                 ^02: Field number
"RTN","MAGUTL01",66,0)
 ;                 ^03: Parameter type
"RTN","MAGUTL01",67,0)
 ;                 ^04: Custom flags
"RTN","MAGUTL01",68,0)
 ;       "N",
"RTN","MAGUTL01",69,0)
 ;         Name) Parameter descriptor (record field)
"RTN","MAGUTL01",70,0)
 ;           ...
"RTN","MAGUTL01",71,0)
 ;       "Q",    List of required parameters (record fields)
"RTN","MAGUTL01",72,0)
 ;         Name) ""
"RTN","MAGUTL01",73,0)
 ;   "Q",        List of required parameters
"RTN","MAGUTL01",74,0)
 ;     Name)     ""
"RTN","MAGUTL01",75,0)
 ;
"RTN","MAGUTL01",76,0)
 ;               See the MSPTBL^MAGUTL01 for details.
"RTN","MAGUTL01",77,0)
 ;
"RTN","MAGUTL01",78,0)
 ; TAGRTN        Tag^Routine pair that references the table of
"RTN","MAGUTL01",79,0)
 ;               parameter definitions. See the MSPTBL^MAGUTL01
"RTN","MAGUTL01",80,0)
 ;               for a sample/template.
"RTN","MAGUTL01",81,0)
 ;
"RTN","MAGUTL01",82,0)
 ; [MAGLDFLAGS]  Custom flags (characters) defined by the programmer. 
"RTN","MAGUTL01",83,0)
 ;               If this parameter is defined and not empty, then
"RTN","MAGUTL01",84,0)
 ;               only those definitions that have at least one flag
"RTN","MAGUTL01",85,0)
 ;               included in the value of this parameter are loaded.
"RTN","MAGUTL01",86,0)
 ;
"RTN","MAGUTL01",87,0)
 ; Return Values
"RTN","MAGUTL01",88,0)
 ; =============
"RTN","MAGUTL01",89,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGUTL01",90,0)
 ;            0  Success
"RTN","MAGUTL01",91,0)
 ;
"RTN","MAGUTL01",92,0)
LDMPDEFS(MAGMSPSDEFS,TAGRTN,MAGLDFLAGS) ;
"RTN","MAGUTL01",93,0)
 N MAGRTN,MAGSRCI,MAGTAG,RC
"RTN","MAGUTL01",94,0)
 S MAGTAG=$P(TAGRTN,"^"),MAGRTN=$P(TAGRTN,"^",2)
"RTN","MAGUTL01",95,0)
 S MAGLDFLAGS=$G(MAGLDFLAGS),MAGSRCI=3
"RTN","MAGUTL01",96,0)
 K MAGMSPSDEFS  S RC=$$LDMPDEFZ("MAGMSPSDEFS")
"RTN","MAGUTL01",97,0)
 Q $S(RC<0:RC,1:0)
"RTN","MAGUTL01",98,0)
 ;
"RTN","MAGUTL01",99,0)
 ;+++++ RECURSIVE PARSER OF PARAMETER DEFINITIONS
"RTN","MAGUTL01",100,0)
 ;
"RTN","MAGUTL01",101,0)
 ; DSTNODE       Node of the MAGMSPSDEFS where parameter definitions
"RTN","MAGUTL01",102,0)
 ;               are stored to.
"RTN","MAGUTL01",103,0)
 ;
"RTN","MAGUTL01",104,0)
 ; [RECNAME]     Name of the current record. It is used to detect
"RTN","MAGUTL01",105,0)
 ;               the record boundaries.
"RTN","MAGUTL01",106,0)
 ;
"RTN","MAGUTL01",107,0)
 ; Input Variables
"RTN","MAGUTL01",108,0)
 ; ===============
"RTN","MAGUTL01",109,0)
 ;   MAGRTN, MAGSRCI, MAGTAG
"RTN","MAGUTL01",110,0)
 ;
"RTN","MAGUTL01",111,0)
 ; Output Variables
"RTN","MAGUTL01",112,0)
 ; ================
"RTN","MAGUTL01",113,0)
 ;   MAGSRCI
"RTN","MAGUTL01",114,0)
 ;
"RTN","MAGUTL01",115,0)
 ; Return Values
"RTN","MAGUTL01",116,0)
 ; =============
"RTN","MAGUTL01",117,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGUTL01",118,0)
 ;            0  Success
"RTN","MAGUTL01",119,0)
 ;            1  End of the table
"RTN","MAGUTL01",120,0)
 ;
"RTN","MAGUTL01",121,0)
 ; Notes
"RTN","MAGUTL01",122,0)
 ; =====
"RTN","MAGUTL01",123,0)
 ;
"RTN","MAGUTL01",124,0)
 ; This is an internal entry point. Do not call it from outside
"RTN","MAGUTL01",125,0)
 ; of this routine.
"RTN","MAGUTL01",126,0)
 ;
"RTN","MAGUTL01",127,0)
LDMPDEFZ(DSTNODE,RECNAME) ;
"RTN","MAGUTL01",128,0)
 N BUF,NAME,PNODE,RC,TMP,TYPE
"RTN","MAGUTL01",129,0)
 S RC=0
"RTN","MAGUTL01",130,0)
 F  S MAGSRCI=MAGSRCI+1,BUF=$$GETPDEF(MAGSRCI)  Q:BUF=""  D  Q:RC
"RTN","MAGUTL01",131,0)
 . S BUF=$TR(BUF,"| ",U),NAME=$P(BUF,U,2)  Q:NAME=""
"RTN","MAGUTL01",132,0)
 . ;=== Check custom flags
"RTN","MAGUTL01",133,0)
 . I MAGLDFLAGS'=""  Q:$TR(MAGLDFLAGS,$P(BUF,U,6))=MAGLDFLAGS
"RTN","MAGUTL01",134,0)
 . ;=== If the name is the same as that of the current
"RTN","MAGUTL01",135,0)
 . ;=== record, then this is the end of the record.
"RTN","MAGUTL01",136,0)
 . I NAME=$G(RECNAME)  S RC=2  Q
"RTN","MAGUTL01",137,0)
 . S PNODE=$NA(@DSTNODE@("N",NAME))
"RTN","MAGUTL01",138,0)
 . ;=== Determine the parameter type
"RTN","MAGUTL01",139,0)
 . S TYPE=$P(BUF,U,5)
"RTN","MAGUTL01",140,0)
 . I TYPE["X"  D  Q:RC<0  S $P(BUF,U,5)=TYPE
"RTN","MAGUTL01",141,0)
 . . N DDTYPE,FIELD,FILE,MAGMSG
"RTN","MAGUTL01",142,0)
 . . ;--- Get the field type from the DD
"RTN","MAGUTL01",143,0)
 . . S FILE=$P(BUF,U,3),FIELD=$P(BUF,U,4)
"RTN","MAGUTL01",144,0)
 . . I (FILE'>0)!(FIELD'>0)  S RC=$$ERROR^MAGUERR(-23,,"X")  Q
"RTN","MAGUTL01",145,0)
 . . S DDTYPE=$$GET1^DID(FILE,FIELD,,"TYPE",,"MAGMSG")
"RTN","MAGUTL01",146,0)
 . . I $G(DIERR)  S RC=$$DBS^MAGUERR("MAGMSG")  Q
"RTN","MAGUTL01",147,0)
 . . ;--- Update the parameter type
"RTN","MAGUTL01",148,0)
 . . S TYPE=$TR(TYPE,"DPSWX")
"RTN","MAGUTL01",149,0)
 . . I DDTYPE="DATE/TIME"        S TYPE=TYPE_"D"  Q
"RTN","MAGUTL01",150,0)
 . . I DDTYPE="POINTER"          S TYPE=TYPE_"P"  Q
"RTN","MAGUTL01",151,0)
 . . I DDTYPE="SET"              S TYPE=TYPE_"S"  Q
"RTN","MAGUTL01",152,0)
 . . I DDTYPE="WORD-PROCESSING"  S TYPE=TYPE_"W"  Q
"RTN","MAGUTL01",153,0)
 . . Q
"RTN","MAGUTL01",154,0)
 . ;=== Store the parameter descriptor
"RTN","MAGUTL01",155,0)
 . S @PNODE=$P(BUF,U,3,6)
"RTN","MAGUTL01",156,0)
 . S:TYPE["Q" @DSTNODE@("Q",NAME)=""
"RTN","MAGUTL01",157,0)
 . ;=== Process definitions of a record
"RTN","MAGUTL01",158,0)
 . I TYPE["R"  S RC=$$LDMPDEFZ(PNODE,NAME)  Q
"RTN","MAGUTL01",159,0)
 . Q
"RTN","MAGUTL01",160,0)
 ;===
"RTN","MAGUTL01",161,0)
 Q $S(RC>1:0,'RC:1,1:RC)
"RTN","MAGUTL01",162,0)
 ;
"RTN","MAGUTL01",163,0)
MSPTBL ;+++++ SAMPLE/TEMPLATE OF THE PARAMETER DEFINITONS TABLE
"RTN","MAGUTL01",164,0)
 ;;==================================================================
"RTN","MAGUTL01",165,0)
 ;;| Parameter  | File  |Field|Type |Flags|        Comment          |
"RTN","MAGUTL01",166,0)
 ;;|------------+-------+-----+-----+-----+-------------------------|
"RTN","MAGUTL01",167,0)
 ;;|DTIS        |2005   |   7 | DHQ |     | DATE/TIME IMAGE SAVED   |
"RTN","MAGUTL01",168,0)
 ;;|DESCR       |       |     | W   |     |                         |
"RTN","MAGUTL01",169,0)
 ;;|OBJGROUP    |       |     | RM  |     |                         |
"RTN","MAGUTL01",170,0)
 ;;|  GROUP     |2005.04| .01 | PQ  |     |                         |
"RTN","MAGUTL01",171,0)
 ;;|  IMGNUM    |2005.04|   2 |     |     |                         |
"RTN","MAGUTL01",172,0)
 ;;|OBJGROUP    |       |     |     |     |                         |
"RTN","MAGUTL01",173,0)
 ;;|ORIGIN      |2005   |  45 |  M  |     |                         |
"RTN","MAGUTL01",174,0)
 ;;==================================================================
"RTN","MAGUTL01",175,0)
 ;
"RTN","MAGUTL01",176,0)
 ; Parameter     Parameter name. It must be unique on the top level
"RTN","MAGUTL01",177,0)
 ;               or inside each record definition (e.g. OBJGROUP) and 
"RTN","MAGUTL01",178,0)
 ;               must not contain spaces.
"RTN","MAGUTL01",179,0)
 ;
"RTN","MAGUTL01",180,0)
 ; File          If the file and field numbers are defined, then
"RTN","MAGUTL01",181,0)
 ; Field         values of the parameter are validated according to
"RTN","MAGUTL01",182,0)
 ;               the field data dictionary (using the CHK^DIE).
"RTN","MAGUTL01",183,0)
 ;
"RTN","MAGUTL01",184,0)
 ;               NOTE: This simple validation will not work for those 
"RTN","MAGUTL01",185,0)
 ;                     fields that have input transform that depend
"RTN","MAGUTL01",186,0)
 ;                     on other fields and/or records.
"RTN","MAGUTL01",187,0)
 ;
"RTN","MAGUTL01",188,0)
 ; Type          Parameter type:
"RTN","MAGUTL01",189,0)
 ;                 D - Date/time,  P - Pointer,
"RTN","MAGUTL01",190,0)
 ;                 R - Record,     S - Set of codes
"RTN","MAGUTL01",191,0)
 ;                 W - Word processing
"RTN","MAGUTL01",192,0)
 ;                 X - Set the type according to the field type from
"RTN","MAGUTL01",193,0)
 ;                     the DD (the File and Field must be provided).
"RTN","MAGUTL01",194,0)
 ;                     The 'X' itself is removed from the descriptor.
"RTN","MAGUTL01",195,0)
 ;               and modifiers:
"RTN","MAGUTL01",196,0)
 ;                 H - Date/time in HL7 format (TS)
"RTN","MAGUTL01",197,0)
 ;                 M - Multi-value parameter
"RTN","MAGUTL01",198,0)
 ;                 Q - Required parameter
"RTN","MAGUTL01",199,0)
 ;
"RTN","MAGUTL01",200,0)
 ; Flags         Custom flags defined by the programmer. Use them to
"RTN","MAGUTL01",201,0)
 ;               control what definitions are loaded by the
"RTN","MAGUTL01",202,0)
 ;               $$LDMPDEFS^MAGUTL01 function (see the MAGLDFLAGS
"RTN","MAGUTL01",203,0)
 ;               parameter of the function for more details).
"RTN","MAGUTL01",204,0)
 ;
"RTN","MAGUTL01",205,0)
 Q
"RTN","MAGUTL02")
0^7^B48311130
"RTN","MAGUTL02",1,0)
MAGUTL02 ;WOIFO/SG - PARAMETERS AND VALIDATION UTILITIES ; 3/9/09 12:53pm
"RTN","MAGUTL02",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL02",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL02",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL02",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL02",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL02",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL02",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL02",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL02",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL02",11,0)
 ;; |                                                               |
"RTN","MAGUTL02",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL02",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL02",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL02",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL02",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL02",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL02",18,0)
 ;;
"RTN","MAGUTL02",19,0)
 Q
"RTN","MAGUTL02",20,0)
 ;
"RTN","MAGUTL02",21,0)
 ;+++++ RETURNS THE PSEUDO-NAME (FOR ERROR MESSAGES) OF THE PARAMETER
"RTN","MAGUTL02",22,0)
PNAME(PNODE) ;
"RTN","MAGUTL02",23,0)
 Q "["_$E(PNODE,$F(PNODE,"("),$L(PNODE)-1)_"]"
"RTN","MAGUTL02",24,0)
 ;
"RTN","MAGUTL02",25,0)
 ;##### PARSES MAGMSC PARAMETER LIST INTO MAGMISC PARAMETER TREE
"RTN","MAGUTL02",26,0)
 ;
"RTN","MAGUTL02",27,0)
 ; .MAGMSC(      Reference to a local variable that stores misc.
"RTN","MAGUTL02",28,0)
 ;               RPC parameters as a "flat" list.
"RTN","MAGUTL02",29,0)
 ;
"RTN","MAGUTL02",30,0)
 ;   i)          Parameter
"RTN","MAGUTL02",31,0)
 ;                 ^01: Parameter name
"RTN","MAGUTL02",32,0)
 ;                 ^02: Seq# - sequential number for multi-value
"RTN","MAGUTL02",33,0)
 ;                      parameters. It can also contain the "R"
"RTN","MAGUTL02",34,0)
 ;                      suffix to indicate a record boundary.
"RTN","MAGUTL02",35,0)
 ;                 ^03: Parameter value
"RTN","MAGUTL02",36,0)
 ;                 ^04: Additional values associated with the
"RTN","MAGUTL02",37,0)
 ;                 ...  parameter.
"RTN","MAGUTL02",38,0)
 ;
"RTN","MAGUTL02",39,0)
 ; .MAGMISC(     Reference to a local variable where miscellaneous
"RTN","MAGUTL02",40,0)
 ;               parameters are returned as nodes.
"RTN","MAGUTL02",41,0)
 ;
"RTN","MAGUTL02",42,0)
 ;   PName,      Original value of the parameter PName.
"RTN","MAGUTL02",43,0)
 ;     "E")      External and internal values of the parameter
"RTN","MAGUTL02",44,0)
 ;     "I")      (if validation/conversion is performed)
"RTN","MAGUTL02",45,0)
 ;
"RTN","MAGUTL02",46,0)
 ;   MName,
"RTN","MAGUTL02",47,0)
 ;     Seq#)     Item of the list MName or the line of text (word-
"RTN","MAGUTL02",48,0)
 ;               processing) parameter MName.
"RTN","MAGUTL02",49,0)
 ;       "E")    External and internal values of the parameter
"RTN","MAGUTL02",50,0)
 ;       "I")    (if validation/conversion is performed)
"RTN","MAGUTL02",51,0)
 ;   RName,
"RTN","MAGUTL02",52,0)
 ;     Seq#,
"RTN","MAGUTL02",53,0)
 ;       FName,  Original value of the FName field of a parameter
"RTN","MAGUTL02",54,0)
 ;               record of the type RName.
"RTN","MAGUTL02",55,0)
 ;         "E")  External and internal values of the parameter
"RTN","MAGUTL02",56,0)
 ;         "I")  (if validation/conversion is performed)
"RTN","MAGUTL02",57,0)
 ;
"RTN","MAGUTL02",58,0)
 ; [.MAGMSPDS]   Reference to a local variable that stores the
"RTN","MAGUTL02",59,0)
 ;               parameter definition tree generated by the
"RTN","MAGUTL02",60,0)
 ;               $$LDMPDEFS^MAGUTL01. If this parameter is provided,
"RTN","MAGUTL02",61,0)
 ;               then automatic validation/conversion is performed.
"RTN","MAGUTL02",62,0)
 ;
"RTN","MAGUTL02",63,0)
 ; [MAGFLAGS]    Flags that control the execution (can be comnined):
"RTN","MAGUTL02",64,0)
 ;
"RTN","MAGUTL02",65,0)
 ;                 U  Return an error (-10) if an unknown/unsupported
"RTN","MAGUTL02",66,0)
 ;                    parameter value (there is no definition for
"RTN","MAGUTL02",67,0)
 ;                    this parameter in the MAGMSPDS) is found in the
"RTN","MAGUTL02",68,0)
 ;                    MAGMSC list.
"RTN","MAGUTL02",69,0)
 ;
"RTN","MAGUTL02",70,0)
 ;                    By default or if the MAGMSPDS parameter is
"RTN","MAGUTL02",71,0)
 ;                    not defined, all values are copied to the
"RTN","MAGUTL02",72,0)
 ;                    destination tree "as is".
"RTN","MAGUTL02",73,0)
 ;
"RTN","MAGUTL02",74,0)
 ;                 V  Perform additional validation using the CHK^DIE
"RTN","MAGUTL02",75,0)
 ;                    for those parameters that have associated file
"RTN","MAGUTL02",76,0)
 ;                    and field numbers.
"RTN","MAGUTL02",77,0)
 ;
"RTN","MAGUTL02",78,0)
 ; Return Values
"RTN","MAGUTL02",79,0)
 ; =============
"RTN","MAGUTL02",80,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGUTL02",81,0)
 ;            0  Success
"RTN","MAGUTL02",82,0)
 ;
"RTN","MAGUTL02",83,0)
 ; Notes
"RTN","MAGUTL02",84,0)
 ; =====
"RTN","MAGUTL02",85,0)
 ;
"RTN","MAGUTL02",86,0)
 ; During the validation/conversion of pointers, pure numeric values
"RTN","MAGUTL02",87,0)
 ; are always treated as IENs.
"RTN","MAGUTL02",88,0)
 ;
"RTN","MAGUTL02",89,0)
 ; During the validation/conversion of sets of codes, the API checks
"RTN","MAGUTL02",90,0)
 ; for internal values first. So, if there is an ambiguity between
"RTN","MAGUTL02",91,0)
 ; internal and external values, the parameter value will be treated
"RTN","MAGUTL02",92,0)
 ; as the internal one.
"RTN","MAGUTL02",93,0)
 ;
"RTN","MAGUTL02",94,0)
RPCMISC(MAGMSC,MAGMISC,MAGMSPDS,MAGFLAGS) ;
"RTN","MAGUTL02",95,0)
 N MAGSRCI,RC  K MAGMISC
"RTN","MAGUTL02",96,0)
 S MAGFLAGS=$G(MAGFLAGS),MAGSRCI=""
"RTN","MAGUTL02",97,0)
 Q:$TR(MAGFLAGS,"UV")'="" $$IPVE^MAGUERR("MAGFLAGS")
"RTN","MAGUTL02",98,0)
 S RC=$$RPCMISCZ("MAGMSPDS","MAGMISC")
"RTN","MAGUTL02",99,0)
 Q $S(RC<0:RC,1:0)
"RTN","MAGUTL02",100,0)
 ;
"RTN","MAGUTL02",101,0)
 ;+++++ RECURSIVE PARSER OF MAGMSC RECORDS
"RTN","MAGUTL02",102,0)
 ;
"RTN","MAGUTL02",103,0)
 ; MSPDNODE      Node in the parameter definition tree (MAGMSPDS)
"RTN","MAGUTL02",104,0)
 ;
"RTN","MAGUTL02",105,0)
 ; DSTNODE       Node of the MAGMISC where values will be stored.
"RTN","MAGUTL02",106,0)
 ;
"RTN","MAGUTL02",107,0)
 ; [RECNAME]     Tag name and index of the current record. They are
"RTN","MAGUTL02",108,0)
 ; [RECNDX]      used to detect the record boundaries.
"RTN","MAGUTL02",109,0)
 ;
"RTN","MAGUTL02",110,0)
 ; Input Variables
"RTN","MAGUTL02",111,0)
 ; ===============
"RTN","MAGUTL02",112,0)
 ;   MAGFLAGS, MAGMSC, MAGSRCI
"RTN","MAGUTL02",113,0)
 ;
"RTN","MAGUTL02",114,0)
 ; Output Variables
"RTN","MAGUTL02",115,0)
 ; ================
"RTN","MAGUTL02",116,0)
 ;   MAGSRCI
"RTN","MAGUTL02",117,0)
 ;
"RTN","MAGUTL02",118,0)
 ; Return Values
"RTN","MAGUTL02",119,0)
 ; =============
"RTN","MAGUTL02",120,0)
 ;           <0  Error descriptor (see $$ERROR^MAGUERR)
"RTN","MAGUTL02",121,0)
 ;            0  Success
"RTN","MAGUTL02",122,0)
 ;            1  End of the list
"RTN","MAGUTL02",123,0)
 ;
"RTN","MAGUTL02",124,0)
 ; Notes
"RTN","MAGUTL02",125,0)
 ; =====
"RTN","MAGUTL02",126,0)
 ;
"RTN","MAGUTL02",127,0)
 ; This is an internal entry point. Do not call it from outside
"RTN","MAGUTL02",128,0)
 ; of this routine.
"RTN","MAGUTL02",129,0)
 ;
"RTN","MAGUTL02",130,0)
RPCMISCZ(MSPDNODE,DSTNODE,RECNAME,RECNDX) ;
"RTN","MAGUTL02",131,0)
 N FILE,FIELD,NAME,NDX,PNODE,RC,SRCVAL,TMP,TYPE,VAL,VALIDATE
"RTN","MAGUTL02",132,0)
 S RC=0
"RTN","MAGUTL02",133,0)
 ;
"RTN","MAGUTL02",134,0)
 ;===
"RTN","MAGUTL02",135,0)
 F  S MAGSRCI=$O(MAGMSC(MAGSRCI))  Q:MAGSRCI=""  D  Q:RC
"RTN","MAGUTL02",136,0)
 . S NAME=$TR($P(MAGMSC(MAGSRCI),U)," ")  Q:NAME=""
"RTN","MAGUTL02",137,0)
 . ;
"RTN","MAGUTL02",138,0)
 . ;=== Load the parameter descriptor
"RTN","MAGUTL02",139,0)
 . S TMP=$G(@MSPDNODE@("N",NAME))
"RTN","MAGUTL02",140,0)
 . S FILE=+TMP,FIELD=+$P(TMP,U,2),TYPE=$P(TMP,U,3)
"RTN","MAGUTL02",141,0)
 . ;
"RTN","MAGUTL02",142,0)
 . ;=== Check multiplicity of the parameter
"RTN","MAGUTL02",143,0)
 . S TMP=$TR($P(MAGMSC(MAGSRCI),U,2)," "),NDX=+TMP
"RTN","MAGUTL02",144,0)
 . I TMP["R"  S:TYPE'["R" TYPE=TYPE_"R"
"RTN","MAGUTL02",145,0)
 . I NDX>0  D
"RTN","MAGUTL02",146,0)
 . . S PNODE=$NA(@DSTNODE@(NAME,NDX))
"RTN","MAGUTL02",147,0)
 . . S:$D(@PNODE) RC=$$ERROR^MAGUERR(-18,,NDX,$$PNAME(PNODE))
"RTN","MAGUTL02",148,0)
 . . Q
"RTN","MAGUTL02",149,0)
 . E  D
"RTN","MAGUTL02",150,0)
 . . S PNODE=$NA(@DSTNODE@(NAME))
"RTN","MAGUTL02",151,0)
 . . S:$D(@PNODE)#2 RC=$$ERROR^MAGUERR(-17,,$$PNAME(PNODE))
"RTN","MAGUTL02",152,0)
 . . Q
"RTN","MAGUTL02",153,0)
 . Q:RC<0
"RTN","MAGUTL02",154,0)
 . ;
"RTN","MAGUTL02",155,0)
 . ;=== Check if parameter is supported
"RTN","MAGUTL02",156,0)
 . I '$D(@MSPDNODE@("N",NAME)),MAGFLAGS["U"  D  Q
"RTN","MAGUTL02",157,0)
 . . S RC=$$ERROR^MAGUERR(-10,,$$PNAME(PNODE))
"RTN","MAGUTL02",158,0)
 . . Q
"RTN","MAGUTL02",159,0)
 . ;
"RTN","MAGUTL02",160,0)
 . ;=== Check for record start/end
"RTN","MAGUTL02",161,0)
 . I TYPE["R"  D  Q
"RTN","MAGUTL02",162,0)
 . . ;--- If the name is the same as that of the current record, then
"RTN","MAGUTL02",163,0)
 . . ;    this either the end of the current record or a beginning of
"RTN","MAGUTL02",164,0)
 . . ;--- the next record of the same kind (and on the same level).
"RTN","MAGUTL02",165,0)
 . . I NAME=$G(RECNAME)  D:NDX'=$G(RECNDX)  S RC=2  Q
"RTN","MAGUTL02",166,0)
 . . . ;--- If the index is different from that of the current record,
"RTN","MAGUTL02",167,0)
 . . . ;    then this is a beginning of the next record. Let the
"RTN","MAGUTL02",168,0)
 . . . ;--- source line be re-processed on the upper execution level.
"RTN","MAGUTL02",169,0)
 . . . S MAGSRCI=$O(MAGMSC(MAGSRCI),-1)
"RTN","MAGUTL02",170,0)
 . . . Q
"RTN","MAGUTL02",171,0)
 . . ;--- Start processing field values of the record
"RTN","MAGUTL02",172,0)
 . . S RC=$$RPCMISCZ($NA(@MSPDNODE@("N",NAME)),PNODE,NAME,NDX)
"RTN","MAGUTL02",173,0)
 . . Q
"RTN","MAGUTL02",174,0)
 . ;
"RTN","MAGUTL02",175,0)
 . ;=== Copy the original value "as is"
"RTN","MAGUTL02",176,0)
 . S @PNODE=$P(MAGMSC(MAGSRCI),U,3,99999)
"RTN","MAGUTL02",177,0)
 . ;
"RTN","MAGUTL02",178,0)
 . ;=== Special processing of the parameter value
"RTN","MAGUTL02",179,0)
 . S VALIDATE=$S(MAGFLAGS["V":(FILE>0)&(FIELD>0),1:0)
"RTN","MAGUTL02",180,0)
 . S (SRCVAL,VAL)=$P(MAGMSC(MAGSRCI),U,3)
"RTN","MAGUTL02",181,0)
 . I '(VAL?.1"@")  D  Q:RC<0
"RTN","MAGUTL02",182,0)
 . . ;--- Convert the date/time value
"RTN","MAGUTL02",183,0)
 . . I TYPE["D"  D  Q
"RTN","MAGUTL02",184,0)
 . . . ;--- HL7 timestamp (TS)
"RTN","MAGUTL02",185,0)
 . . . I TYPE["H"  S VAL=$$HL7TFM^XLFDT(VAL)  I VAL'>0  D  Q
"RTN","MAGUTL02",186,0)
 . . . . S RC=$$IPVE^MAGUERR("SRCVAL",$$PNAME(PNODE))
"RTN","MAGUTL02",187,0)
 . . . ;--- If validation is requested, then the conversion
"RTN","MAGUTL02",188,0)
 . . . ;--- will be performed at the same time.
"RTN","MAGUTL02",189,0)
 . . . Q:VALIDATE
"RTN","MAGUTL02",190,0)
 . . . ;--- Otherwise, calculate the internal and external values
"RTN","MAGUTL02",191,0)
 . . . S VAL=$$DTI^MAGUTL03(VAL,"PST")
"RTN","MAGUTL02",192,0)
 . . . I VAL<0  S RC=$$IPVE^MAGUERR("SRCVAL",$$PNAME(PNODE))  Q
"RTN","MAGUTL02",193,0)
 . . . S @PNODE@("I")=VAL,@PNODE@("E")=$$FMTE^XLFDT(VAL)
"RTN","MAGUTL02",194,0)
 . . . Q
"RTN","MAGUTL02",195,0)
 . . ;--- Pointer
"RTN","MAGUTL02",196,0)
 . . I TYPE["P"  D:VALIDATE  Q
"RTN","MAGUTL02",197,0)
 . . . ;--- Construct the pseudo-external value for validation
"RTN","MAGUTL02",198,0)
 . . . S:+VAL=VAL VAL="`"_VAL
"RTN","MAGUTL02",199,0)
 . . . Q
"RTN","MAGUTL02",200,0)
 . . ;--- Set of codes
"RTN","MAGUTL02",201,0)
 . . I TYPE["S"  D:VALIDATE  Q
"RTN","MAGUTL02",202,0)
 . . . N MAGMSG
"RTN","MAGUTL02",203,0)
 . . . S TMP=$$EXTERNAL^DILFD(FILE,FIELD,,VAL,"MAGMSG")
"RTN","MAGUTL02",204,0)
 . . . S:TMP'="" VAL=TMP
"RTN","MAGUTL02",205,0)
 . . . Q
"RTN","MAGUTL02",206,0)
 . . Q
"RTN","MAGUTL02",207,0)
 . E  S (@PNODE@("I"),@PNODE@("E"),VAL)=""
"RTN","MAGUTL02",208,0)
 . ;
"RTN","MAGUTL02",209,0)
 . ;=== Validate the value if requested
"RTN","MAGUTL02",210,0)
 . I VALIDATE,VAL'=""  D  Q:RC<0
"RTN","MAGUTL02",211,0)
 . . N MAGMSG,MAGRES
"RTN","MAGUTL02",212,0)
 . . D CHK^DIE(FILE,FIELD,"E",VAL,.MAGRES,"MAGMSG")
"RTN","MAGUTL02",213,0)
 . . I MAGRES="^"  S RC=$$IPVE^MAGUERR("SRCVAL",$$PNAME(PNODE))  Q
"RTN","MAGUTL02",214,0)
 . . S @PNODE@("I")=MAGRES,@PNODE@("E")=MAGRES(0)
"RTN","MAGUTL02",215,0)
 . . Q
"RTN","MAGUTL02",216,0)
 . Q
"RTN","MAGUTL02",217,0)
 Q:RC<0 RC
"RTN","MAGUTL02",218,0)
 ;
"RTN","MAGUTL02",219,0)
 ;=== Check the required parameters
"RTN","MAGUTL02",220,0)
 S NAME=""
"RTN","MAGUTL02",221,0)
 F  S NAME=$O(@MSPDNODE@("Q",NAME))  Q:NAME=""  D  Q:RC<0
"RTN","MAGUTL02",222,0)
 . S PNODE=$NA(@DSTNODE@(NAME))
"RTN","MAGUTL02",223,0)
 . S:'$D(@PNODE) RC=$$ERROR^MAGUERR(-8,,$$PNAME(PNODE))
"RTN","MAGUTL02",224,0)
 . Q
"RTN","MAGUTL02",225,0)
 ;
"RTN","MAGUTL02",226,0)
 ;===
"RTN","MAGUTL02",227,0)
 Q $S(RC>1:0,'RC:1,1:RC)
"RTN","MAGUTL03")
0^8^B11647866
"RTN","MAGUTL03",1,0)
MAGUTL03 ;WOIFO/SG - DATE/TIME UTILITIES ; 3/9/09 12:53pm
"RTN","MAGUTL03",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL03",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL03",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL03",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL03",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL03",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL03",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL03",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL03",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL03",11,0)
 ;; |                                                               |
"RTN","MAGUTL03",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL03",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL03",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL03",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL03",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL03",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL03",18,0)
 ;;
"RTN","MAGUTL03",19,0)
 ;
"RTN","MAGUTL03",20,0)
 ; This routine uses the following ICRs:
"RTN","MAGUTL03",21,0)
 ;
"RTN","MAGUTL03",22,0)
 ; #10038        Read file #40.5 (supported)
"RTN","MAGUTL03",23,0)
 ;
"RTN","MAGUTL03",24,0)
 Q
"RTN","MAGUTL03",25,0)
 ;
"RTN","MAGUTL03",26,0)
 ;##### ENSURES THAT THE DATE/TIME IS IN INTERNAL FORMAT
"RTN","MAGUTL03",27,0)
 ;
"RTN","MAGUTL03",28,0)
 ; X             Date/time in internal (FileMan) or external format
"RTN","MAGUTL03",29,0)
 ;
"RTN","MAGUTL03",30,0)
 ; [%DT]         Flags for the ^%DT (see the FileMan Programmer
"RTN","MAGUTL03",31,0)
 ;               manual for details)
"RTN","MAGUTL03",32,0)
 ; 
"RTN","MAGUTL03",33,0)
 ; Return Values
"RTN","MAGUTL03",34,0)
 ; =============
"RTN","MAGUTL03",35,0)
 ;           -1  Invalid date
"RTN","MAGUTL03",36,0)
 ;           >0  Date/time in internal FileMan format
"RTN","MAGUTL03",37,0)
 ;
"RTN","MAGUTL03",38,0)
DTI(X,%DT) ;
"RTN","MAGUTL03",39,0)
 N Y
"RTN","MAGUTL03",40,0)
 Q:X?7N.1(1"."1.N) X
"RTN","MAGUTL03",41,0)
 S %DT=$TR($G(%DT),"AE")  D ^%DT
"RTN","MAGUTL03",42,0)
 Q Y
"RTN","MAGUTL03",43,0)
 ;
"RTN","MAGUTL03",44,0)
 ;##### "NORMALIZES" THE DATE RANGE
"RTN","MAGUTL03",45,0)
 ; 
"RTN","MAGUTL03",46,0)
 ; .FROMDATE(    Reference to a local variable that stores the
"RTN","MAGUTL03",47,0)
 ;               beginning date of the date range. The time part of
"RTN","MAGUTL03",48,0)
 ;               the value is ignored.
"RTN","MAGUTL03",49,0)
 ;
"RTN","MAGUTL03",50,0)
 ;               After a successful call, this variable contains
"RTN","MAGUTL03",51,0)
 ;               the internal FileMan value of the date. In case of
"RTN","MAGUTL03",52,0)
 ;               error(s), the input value is returned.
"RTN","MAGUTL03",53,0)
 ;
"RTN","MAGUTL03",54,0)
 ;   0)          Standard external date value is returned here.
"RTN","MAGUTL03",55,0)
 ;               In case of error(s), this node is not defined.
"RTN","MAGUTL03",56,0)
 ;
"RTN","MAGUTL03",57,0)
 ; .TODATE(      Reference to a local variable that stores the
"RTN","MAGUTL03",58,0)
 ;               end date of the date range. The time part of
"RTN","MAGUTL03",59,0)
 ;               the value is ignored.
"RTN","MAGUTL03",60,0)
 ;
"RTN","MAGUTL03",61,0)
 ;               After a successful call, this variable contains
"RTN","MAGUTL03",62,0)
 ;               the internal FileMan value of the date. In case of
"RTN","MAGUTL03",63,0)
 ;               error(s), the input value is returned.
"RTN","MAGUTL03",64,0)
 ;
"RTN","MAGUTL03",65,0)
 ;   0)          Standard external date value is returned here.
"RTN","MAGUTL03",66,0)
 ;               In case of error(s), this node is not defined.
"RTN","MAGUTL03",67,0)
 ; 
"RTN","MAGUTL03",68,0)
 ; Return Values
"RTN","MAGUTL03",69,0)
 ; =============
"RTN","MAGUTL03",70,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL03",71,0)
 ;            0  Success
"RTN","MAGUTL03",72,0)
 ;
"RTN","MAGUTL03",73,0)
 ; Notes
"RTN","MAGUTL03",74,0)
 ; =====
"RTN","MAGUTL03",75,0)
 ;
"RTN","MAGUTL03",76,0)
 ; If the FROMDATE is after the TODATE, then the dates are swapped.
"RTN","MAGUTL03",77,0)
 ;
"RTN","MAGUTL03",78,0)
DTRANGE(FROMDATE,TODATE) ;
"RTN","MAGUTL03",79,0)
 N RC,TMP
"RTN","MAGUTL03",80,0)
 ;
"RTN","MAGUTL03",81,0)
 ;=== Validate the dates
"RTN","MAGUTL03",82,0)
 S RC=0  D  I RC<0  K FROMDATE(0),TODATE(0)  Q RC
"RTN","MAGUTL03",83,0)
 . ;--- Beginning of the date range
"RTN","MAGUTL03",84,0)
 . I $G(FROMDATE)'=""  D  Q:RC<0
"RTN","MAGUTL03",85,0)
 . . S TMP=$$DTI(FROMDATE,"TS")
"RTN","MAGUTL03",86,0)
 . . I TMP<0  S RC=$$IPVE^MAGUERR("FROMDATE")  Q
"RTN","MAGUTL03",87,0)
 . . S FROMDATE=TMP\1,FROMDATE(0)=$$FMTE^XLFDT(FROMDATE)
"RTN","MAGUTL03",88,0)
 . . Q
"RTN","MAGUTL03",89,0)
 . E  S FROMDATE=0,FROMDATE(0)=""
"RTN","MAGUTL03",90,0)
 . ;--- End of the date range
"RTN","MAGUTL03",91,0)
 . I $G(TODATE)'=""  D  Q:RC<0
"RTN","MAGUTL03",92,0)
 . . S TMP=$$DTI(TODATE,"TS")
"RTN","MAGUTL03",93,0)
 . . I TMP<0  S RC=$$IPVE^MAGUERR("TODATE")  Q
"RTN","MAGUTL03",94,0)
 . . S TODATE=TMP\1,TODATE(0)=$$FMTE^XLFDT(TODATE)
"RTN","MAGUTL03",95,0)
 . . Q
"RTN","MAGUTL03",96,0)
 . E  S TODATE=9999999,TODATE(0)=""
"RTN","MAGUTL03",97,0)
 . Q
"RTN","MAGUTL03",98,0)
 ;
"RTN","MAGUTL03",99,0)
 ;=== Swap the dates if necessary
"RTN","MAGUTL03",100,0)
 K TMP
"RTN","MAGUTL03",101,0)
 M:FROMDATE>TODATE TMP=FROMDATE,FROMDATE=TODATE,TODATE=TMP
"RTN","MAGUTL03",102,0)
 ;
"RTN","MAGUTL03",103,0)
 ;=== Success
"RTN","MAGUTL03",104,0)
 Q 0
"RTN","MAGUTL03",105,0)
 ;
"RTN","MAGUTL03",106,0)
 ;##### CHECKS IF THE DATE IS A WORKING DAY
"RTN","MAGUTL03",107,0)
 ;
"RTN","MAGUTL03",108,0)
 ; DATE          The date to be checked
"RTN","MAGUTL03",109,0)
 ;
"RTN","MAGUTL03",110,0)
 ; Return Values
"RTN","MAGUTL03",111,0)
 ; =============
"RTN","MAGUTL03",112,0)
 ;        0  Weekend or Holiday
"RTN","MAGUTL03",113,0)
 ;        1  Working day
"RTN","MAGUTL03",114,0)
 ;
"RTN","MAGUTL03",115,0)
WDCHK(DATE) ;
"RTN","MAGUTL03",116,0)
 N DOW,MAGMSG
"RTN","MAGUTL03",117,0)
 ;--- Return zero if Saturday (6) or Sunday (0)
"RTN","MAGUTL03",118,0)
 S DOW=$$DOW^XLFDT(DATE,1)
"RTN","MAGUTL03",119,0)
 Q:DOW<0 $$IPVE^MAGUERR("DATE")
"RTN","MAGUTL03",120,0)
 Q:'DOW!(DOW>5) 0
"RTN","MAGUTL03",121,0)
 ;--- Return 1 if cannot be found in the HOLIDAY file
"RTN","MAGUTL03",122,0)
 Q $$FIND1^DIC(40.5,,"QX",DATE\1,"B",,"MAGMSG")'>0
"RTN","MAGUTL03",123,0)
 ;
"RTN","MAGUTL03",124,0)
 ;##### RETURNS THE NEXT WORKING DAY DATE
"RTN","MAGUTL03",125,0)
 ;
"RTN","MAGUTL03",126,0)
 ; DATE          The source date
"RTN","MAGUTL03",127,0)
 ;
"RTN","MAGUTL03",128,0)
 ; The function returns the date of the next working day.
"RTN","MAGUTL03",129,0)
 ;
"RTN","MAGUTL03",130,0)
WDNEXT(DATE) ;
"RTN","MAGUTL03",131,0)
 N DOW,MAGMSG
"RTN","MAGUTL03",132,0)
 F  D  Q:$$FIND1^DIC(40.5,,"QX",DATE,"B",,"MAGMSG")'>0
"RTN","MAGUTL03",133,0)
 . S DOW=$$DOW^XLFDT(DATE,1)  S:'DOW DOW=7
"RTN","MAGUTL03",134,0)
 . ;--- Get the next day and skip a weekend if necessary
"RTN","MAGUTL03",135,0)
 . S DATE=$$FMADD^XLFDT(DATE,$S(DOW<5:1,1:8-DOW))
"RTN","MAGUTL03",136,0)
 . Q
"RTN","MAGUTL03",137,0)
 Q DATE
"RTN","MAGUTL04")
0^11^B23169366
"RTN","MAGUTL04",1,0)
MAGUTL04 ;WOIFO/SG - FIELD AUDIT UTILITIES ; 3/9/09 12:53pm
"RTN","MAGUTL04",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL04",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL04",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL04",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL04",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL04",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL04",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL04",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL04",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL04",11,0)
 ;; |                                                               |
"RTN","MAGUTL04",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL04",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL04",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL04",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL04",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL04",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL04",18,0)
 ;;
"RTN","MAGUTL04",19,0)
 Q
"RTN","MAGUTL04",20,0)
 ;
"RTN","MAGUTL04",21,0)
 ;##### RETRIEVES VALUE OF THE SINGLE FIELD
"RTN","MAGUTL04",22,0)
 ;
"RTN","MAGUTL04",23,0)
 ; FILE          File number
"RTN","MAGUTL04",24,0)
 ;
"RTN","MAGUTL04",25,0)
 ; IENS          Standard IENS indicating internal entry numbers
"RTN","MAGUTL04",26,0)
 ;
"RTN","MAGUTL04",27,0)
 ; FIELD         Field number. Neither field names nor extended
"RTN","MAGUTL04",28,0)
 ;               pointer relational syntax (i.e. POINTER:FIELD)
"RTN","MAGUTL04",29,0)
 ;               are supported.
"RTN","MAGUTL04",30,0)
 ;
"RTN","MAGUTL04",31,0)
 ; [FLAGS]       Flags to control processing (can be combined):
"RTN","MAGUTL04",32,0)
 ;
"RTN","MAGUTL04",33,0)
 ;                 I  Return the internal value (by default,
"RTN","MAGUTL04",34,0)
 ;                    external value is returned).
"RTN","MAGUTL04",35,0)
 ;
"RTN","MAGUTL04",36,0)
 ;                 Z  Zero node included for word processing fields
"RTN","MAGUTL04",37,0)
 ;                    on target array.
"RTN","MAGUTL04",38,0)
 ;
"RTN","MAGUTL04",39,0)
 ; [MAG8BUF]     The root of an array into which word processing
"RTN","MAGUTL04",40,0)
 ;               text is copied.
"RTN","MAGUTL04",41,0)
 ;
"RTN","MAGUTL04",42,0)
 ; [MAG8MSG]     Closed root into which the error messages are put.
"RTN","MAGUTL04",43,0)
 ;               If this parameter is not passed, the messages are
"RTN","MAGUTL04",44,0)
 ;               put into nodes descendent from ^TMP.
"RTN","MAGUTL04",45,0)
 ;
"RTN","MAGUTL04",46,0)
 ; [ADT]         Date/time (internal FileMan value) for retrieving
"RTN","MAGUTL04",47,0)
 ;               the previous value. By default ($G(ADT)'>0), audit
"RTN","MAGUTL04",48,0)
 ;               checks are not performed and the current value is
"RTN","MAGUTL04",49,0)
 ;               returned.
"RTN","MAGUTL04",50,0)
 ;
"RTN","MAGUTL04",51,0)
 ; Return Values
"RTN","MAGUTL04",52,0)
 ; =============
"RTN","MAGUTL04",53,0)
 ;             - Field value (internal or external, depending
"RTN","MAGUTL04",54,0)
 ;               on the flags)
"RTN","MAGUTL04",55,0)
 ;
"RTN","MAGUTL04",56,0)
 ;             - If data exists for a word processing field, then
"RTN","MAGUTL04",57,0)
 ;               this function returns the resolved TARGET_ROOT.
"RTN","MAGUTL04",58,0)
 ;               Otherwise, null is returned.
"RTN","MAGUTL04",59,0)
 ; 
"RTN","MAGUTL04",60,0)
 ; Notes
"RTN","MAGUTL04",61,0)
 ; =====
"RTN","MAGUTL04",62,0)
 ;
"RTN","MAGUTL04",63,0)
 ; See the FileMan Programmer Manual for more details.
"RTN","MAGUTL04",64,0)
 ;
"RTN","MAGUTL04",65,0)
GET1(FILE,IENS,FIELD,FLAGS,MAG8BUF,MAG8MSG,ADT) ;
"RTN","MAGUTL04",66,0)
 N VAL
"RTN","MAGUTL04",67,0)
 ;--- Get the current value
"RTN","MAGUTL04",68,0)
 S VAL=$$GET1^DIQ(FILE,IENS,FIELD,$G(FLAGS),$G(MAG8BUF),$G(MAG8MSG))
"RTN","MAGUTL04",69,0)
 I $G(ADT)>0  D:'$G(DIERR)
"RTN","MAGUTL04",70,0)
 . N MAG8AUDIT,MAGMSG,NODE,OLDVAL,SUBFILE,TMP
"RTN","MAGUTL04",71,0)
 . D INIT(.MAG8AUDIT)
"RTN","MAGUTL04",72,0)
 . ;--- Check if the file is audited
"RTN","MAGUTL04",73,0)
 . S SUBFILE=+$G(MAG8AUDIT(FILE))  Q:SUBFILE'>0
"RTN","MAGUTL04",74,0)
 . ;--- Check for the previous value
"RTN","MAGUTL04",75,0)
 . S NODE=$$ROOT^DILFD(SUBFILE,","_IENS,1)
"RTN","MAGUTL04",76,0)
 . Q:'$$GETPFV(.OLDVAL,NODE,FIELD,ADT)
"RTN","MAGUTL04",77,0)
 . ;--- Return the old value in requested format
"RTN","MAGUTL04",78,0)
 . S VAL=$S($G(FLAGS)["I":OLDVAL,1:OLDVAL("E"))
"RTN","MAGUTL04",79,0)
 . Q
"RTN","MAGUTL04",80,0)
 ;---
"RTN","MAGUTL04",81,0)
 Q VAL
"RTN","MAGUTL04",82,0)
 ;
"RTN","MAGUTL04",83,0)
 ;+++++ GETS THE PREVIOUS FIELD VALUE (FROM THE AUDIT MULTIPLE)
"RTN","MAGUTL04",84,0)
 ;
"RTN","MAGUTL04",85,0)
 ; .VAL(         Reference to a local variable where the internal
"RTN","MAGUTL04",86,0)
 ;               value is returned. 
"RTN","MAGUTL04",87,0)
 ;
"RTN","MAGUTL04",88,0)
 ;   "E")        External value
"RTN","MAGUTL04",89,0)
 ;
"RTN","MAGUTL04",90,0)
 ; NODE          Closed root of the audit multiple that stores
"RTN","MAGUTL04",91,0)
 ;               previous values of the fields of this record.
"RTN","MAGUTL04",92,0)
 ;
"RTN","MAGUTL04",93,0)
 ; FIELD         Field number
"RTN","MAGUTL04",94,0)
 ;
"RTN","MAGUTL04",95,0)
 ; ADT           Date/time for the previous value
"RTN","MAGUTL04",96,0)
 ;
"RTN","MAGUTL04",97,0)
 ; Return Values
"RTN","MAGUTL04",98,0)
 ; =============
"RTN","MAGUTL04",99,0)
 ;            0  No previous value (the VAL parameter is unchanged)
"RTN","MAGUTL04",100,0)
 ;            1  The previous value is returned in the VAL parameter
"RTN","MAGUTL04",101,0)
 ; 
"RTN","MAGUTL04",102,0)
 ; Notes
"RTN","MAGUTL04",103,0)
 ; =====
"RTN","MAGUTL04",104,0)
 ;
"RTN","MAGUTL04",105,0)
 ; This is an internal entry point. Do not call it from outside
"RTN","MAGUTL04",106,0)
 ; of this routine.
"RTN","MAGUTL04",107,0)
 ;
"RTN","MAGUTL04",108,0)
GETPFV(VAL,NODE,FIELD,ADT) ;
"RTN","MAGUTL04",109,0)
 N UIEN,UTS
"RTN","MAGUTL04",110,0)
 S UTS=$O(@NODE@("FD",FIELD,+ADT))  Q:UTS="" 0
"RTN","MAGUTL04",111,0)
 S UIEN=$O(@NODE@("FD",FIELD,UTS,""))  Q:UIEN="" 0
"RTN","MAGUTL04",112,0)
 Q:'$D(@NODE@(UIEN)) 0
"RTN","MAGUTL04",113,0)
 S VAL=$G(@NODE@(UIEN,1)),VAL("E")=$G(@NODE@(UIEN,2))
"RTN","MAGUTL04",114,0)
 ;--- If there is no external value, then it is the same as the
"RTN","MAGUTL04",115,0)
 ;--- internal one (see the AUDIT^MAGUXRF for more details)
"RTN","MAGUTL04",116,0)
 S:VAL("E")="" VAL("E")=VAL
"RTN","MAGUTL04",117,0)
 Q 1
"RTN","MAGUTL04",118,0)
 ;
"RTN","MAGUTL04",119,0)
 ;##### RETRIEVES VALUES OF ONE OR MORE FIELDS
"RTN","MAGUTL04",120,0)
 ;
"RTN","MAGUTL04",121,0)
 ; FILE          File number
"RTN","MAGUTL04",122,0)
 ;
"RTN","MAGUTL04",123,0)
 ; IENS          Standard IENS indicating internal entry numbers
"RTN","MAGUTL04",124,0)
 ;
"RTN","MAGUTL04",125,0)
 ; FLDLST        Field number(s). Can be one of the following:
"RTN","MAGUTL04",126,0)
 ;                 -  A single field number
"RTN","MAGUTL04",127,0)
 ;                 -  A list of field numbers, separated by semicolons
"RTN","MAGUTL04",128,0)
 ;                 -  A range of field numbers, in the form M:N, where
"RTN","MAGUTL04",129,0)
 ;                    M and N are the end points of the inclusive
"RTN","MAGUTL04",130,0)
 ;                    range. All field numbers within this range are
"RTN","MAGUTL04",131,0)
 ;                    retrieved.
"RTN","MAGUTL04",132,0)
 ;                 -  * for all fields at the top level
"RTN","MAGUTL04",133,0)
 ;                    (no sub-multiple record).
"RTN","MAGUTL04",134,0)
 ;                 -  ** for all fields including all fields and data 
"RTN","MAGUTL04",135,0)
 ;                    in sub-multiple fields.
"RTN","MAGUTL04",136,0)
 ;                 -  Field number of a multiple followed by an *
"RTN","MAGUTL04",137,0)
 ;                    to indicate all fields and records in the
"RTN","MAGUTL04",138,0)
 ;                    sub-multiple for that field.
"RTN","MAGUTL04",139,0)
 ;
"RTN","MAGUTL04",140,0)
 ; [FLAGS]       Flags to control processing (can be combined):
"RTN","MAGUTL04",141,0)
 ;
"RTN","MAGUTL04",142,0)
 ;                 E  Returns external values in nodes ending
"RTN","MAGUTL04",143,0)
 ;                    with "E".
"RTN","MAGUTL04",144,0)
 ;
"RTN","MAGUTL04",145,0)
 ;                 I  Returns internal values in nodes ending with
"RTN","MAGUTL04",146,0)
 ;                    "I". By default, external are returned.
"RTN","MAGUTL04",147,0)
 ;
"RTN","MAGUTL04",148,0)
 ;                 Z  Word processing fields include zero nodes.
"RTN","MAGUTL04",149,0)
 ;
"RTN","MAGUTL04",150,0)
 ; [MAG8BUF]     The closed root of the output array.
"RTN","MAGUTL04",151,0)
 ;
"RTN","MAGUTL04",152,0)
 ; [MAG8MSG]     Closed root into which the error messages are put.
"RTN","MAGUTL04",153,0)
 ;               If this parameter is not passed, the messages are
"RTN","MAGUTL04",154,0)
 ;               put into nodes descendent from ^TMP.
"RTN","MAGUTL04",155,0)
 ;
"RTN","MAGUTL04",156,0)
 ; [ADT]         Date/time (internal FileMan value) for retrieving
"RTN","MAGUTL04",157,0)
 ;               previous values of the fields. By default
"RTN","MAGUTL04",158,0)
 ;               ($G(ADT)'>0), audit checks are not performed and
"RTN","MAGUTL04",159,0)
 ;               the current values are returned.
"RTN","MAGUTL04",160,0)
 ; 
"RTN","MAGUTL04",161,0)
 ; Notes
"RTN","MAGUTL04",162,0)
 ; =====
"RTN","MAGUTL04",163,0)
 ;
"RTN","MAGUTL04",164,0)
 ; See the FileMan Programmer Manual for more details.
"RTN","MAGUTL04",165,0)
 ;
"RTN","MAGUTL04",166,0)
GETS(FILE,IENS,FLDLST,FLAGS,MAG8BUF,MAG8MSG,ADT) ;
"RTN","MAGUTL04",167,0)
 ;--- Flags N and R are not supported since the code needs
"RTN","MAGUTL04",168,0)
 ;--- numbers of all requested fields in the output array
"RTN","MAGUTL04",169,0)
 S FLAGS=$TR($G(FLAGS),"NR")
"RTN","MAGUTL04",170,0)
 ;--- Get current values
"RTN","MAGUTL04",171,0)
 D GETS^DIQ(FILE,IENS,FLDLST,$G(FLAGS),MAG8BUF,$G(MAG8MSG))
"RTN","MAGUTL04",172,0)
 I $G(ADT)>0  D:'$G(DIERR)
"RTN","MAGUTL04",173,0)
 . N FLD,MAG8AUDIT,MAGMSG,NODE,SUBFILE,TMP
"RTN","MAGUTL04",174,0)
 . D INIT(.MAG8AUDIT)
"RTN","MAGUTL04",175,0)
 . ;--- Check if the file is audited
"RTN","MAGUTL04",176,0)
 . S SUBFILE=+$G(MAG8AUDIT(FILE))  Q:SUBFILE'>0
"RTN","MAGUTL04",177,0)
 . ;--- Check for previous values
"RTN","MAGUTL04",178,0)
 . S FLAGS=$G(FLAGS)
"RTN","MAGUTL04",179,0)
 . S NODE=$$ROOT^DILFD(SUBFILE,","_IENS,1)
"RTN","MAGUTL04",180,0)
 . S FLD=""
"RTN","MAGUTL04",181,0)
 . F  S FLD=$O(@MAG8BUF@(FILE,IENS,FLD))  Q:FLD=""  D
"RTN","MAGUTL04",182,0)
 . . Q:'$$GETPFV(.OLDVAL,NODE,FLD,ADT)
"RTN","MAGUTL04",183,0)
 . . I FLAGS'["E",FLAGS'["I"  D  Q
"RTN","MAGUTL04",184,0)
 . . . S @MAG8BUF@(FILE,IENS,FLD)=OLDVAL("E")
"RTN","MAGUTL04",185,0)
 . . S:FLAGS["E" @MAG8BUF@(FILE,IENS,FLD,"E")=OLDVAL("E")
"RTN","MAGUTL04",186,0)
 . . S:FLAGS["I" @MAG8BUF@(FILE,IENS,FLD,"I")=OLDVAL
"RTN","MAGUTL04",187,0)
 . . Q
"RTN","MAGUTL04",188,0)
 . Q
"RTN","MAGUTL04",189,0)
 ;---
"RTN","MAGUTL04",190,0)
 Q
"RTN","MAGUTL04",191,0)
 ;
"RTN","MAGUTL04",192,0)
 ;+++++ INITIALIZES AUDIT PARAMETERS
"RTN","MAGUTL04",193,0)
INIT(AUDIT) ;
"RTN","MAGUTL04",194,0)
 S AUDIT(2005)=2005.099
"RTN","MAGUTL04",195,0)
 S AUDIT(2005.1)=2005.199
"RTN","MAGUTL04",196,0)
 Q
"RTN","MAGUTL04",197,0)
 ;
"RTN","MAGUTL04",198,0)
 ;##### RETURNS THE LAST AUDIT RECORD FOR THE IMAGE RECORD FIELD
"RTN","MAGUTL04",199,0)
 ;
"RTN","MAGUTL04",200,0)
 ; MAGFILE       Image file number (2005 or 2005.1)
"RTN","MAGUTL04",201,0)
 ;
"RTN","MAGUTL04",202,0)
 ; IENS          Standard IENS indicating internal entry number
"RTN","MAGUTL04",203,0)
 ;
"RTN","MAGUTL04",204,0)
 ; FIELD         Field number
"RTN","MAGUTL04",205,0)
 ;
"RTN","MAGUTL04",206,0)
 ; Return Values
"RTN","MAGUTL04",207,0)
 ; =============
"RTN","MAGUTL04",208,0)
 ;           ""  Invalid parameter(s) or an error
"RTN","MAGUTL04",209,0)
 ;
"RTN","MAGUTL04",210,0)
 ;            0  Record creation info (field value has not changed)
"RTN","MAGUTL04",211,0)
 ;                 ^01: 0
"RTN","MAGUTL04",212,0)
 ;                 ^02: Value of the DATE/TIME IMAGE SAVED field (7)
"RTN","MAGUTL04",213,0)
 ;                 ^03: Value of the IMAGE SAVE BY field (8)
"RTN","MAGUTL04",214,0)
 ;                
"RTN","MAGUTL04",215,0)
 ;           >0  Last audit record for the field
"RTN","MAGUTL04",216,0)
 ;                 ^01: IEN of the audit record
"RTN","MAGUTL04",217,0)
 ;                 ^02: Date/time (FileMan)
"RTN","MAGUTL04",218,0)
 ;                 ^03: User IEN (DUZ)
"RTN","MAGUTL04",219,0)
 ;
"RTN","MAGUTL04",220,0)
LASTAUDT(MAGFILE,IENS,FIELD) ;
"RTN","MAGUTL04",221,0)
 Q:$G(IENS)'>0 ""
"RTN","MAGUTL04",222,0)
 N BUF,FDT,IEN,NODE
"RTN","MAGUTL04",223,0)
 S NODE=$NA(^MAG(MAGFILE,+IENS))
"RTN","MAGUTL04",224,0)
 ;
"RTN","MAGUTL04",225,0)
 ;--- Get the last audit record for the field
"RTN","MAGUTL04",226,0)
 D
"RTN","MAGUTL04",227,0)
 . S FDT=$O(@NODE@(99,"FD",FIELD,""),-1)      Q:FDT=""
"RTN","MAGUTL04",228,0)
 . S IEN=$O(@NODE@(99,"FD",FIELD,FDT,""),-1)  Q:IEN=""
"RTN","MAGUTL04",229,0)
 . S BUF=$G(@NODE@(99,IEN,0))
"RTN","MAGUTL04",230,0)
 . Q
"RTN","MAGUTL04",231,0)
 Q:$G(BUF)'="" IEN_U_$P(BUF,U)_U_$P(BUF,U,3)
"RTN","MAGUTL04",232,0)
 ;
"RTN","MAGUTL04",233,0)
 ;--- If the field has not been updated, return record creation info
"RTN","MAGUTL04",234,0)
 S BUF=$G(@NODE@(2))
"RTN","MAGUTL04",235,0)
 Q "0"_U_$P(BUF,U)_U_$P(BUF,U,2)
"RTN","MAGUTL05")
0^13^B18410909
"RTN","MAGUTL05",1,0)
MAGUTL05 ;WOIFO/SG - MISCELLANEOUS UTILITIES ; 3/9/09 12:53pm
"RTN","MAGUTL05",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL05",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL05",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL05",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL05",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL05",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL05",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL05",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL05",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL05",11,0)
 ;; |                                                               |
"RTN","MAGUTL05",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL05",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL05",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL05",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL05",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL05",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL05",18,0)
 ;;
"RTN","MAGUTL05",19,0)
 Q
"RTN","MAGUTL05",20,0)
 ;
"RTN","MAGUTL05",21,0)
 ;##### PREPARES THE VALUE FOR INDIRECTION
"RTN","MAGUTL05",22,0)
 ;
"RTN","MAGUTL05",23,0)
 ; This function returns the value of the parameter prepared for
"RTN","MAGUTL05",24,0)
 ; indirect assignment:
"RTN","MAGUTL05",25,0)
 ;
"RTN","MAGUTL05",26,0)
 ;   * canonic numbers are returned as is;
"RTN","MAGUTL05",27,0)
 ;
"RTN","MAGUTL05",28,0)
 ;   * strings are enclosed in double quotes and double quotes inside 
"RTN","MAGUTL05",29,0)
 ;     them are doubled. ;-)
"RTN","MAGUTL05",30,0)
 ;
"RTN","MAGUTL05",31,0)
DDQ(VAL) ;
"RTN","MAGUTL05",32,0)
 N TMP  S TMP=$NA(A(VAL))
"RTN","MAGUTL05",33,0)
 Q $E(TMP,3,$L(TMP)-1)
"RTN","MAGUTL05",34,0)
 ;
"RTN","MAGUTL05",35,0)
 ;##### CHECKS IF THE TEXT BUFFER IS EMPTY
"RTN","MAGUTL05",36,0)
 ;
"RTN","MAGUTL05",37,0)
 ; MAG8NODE      Name of a local or global node that contains the
"RTN","MAGUTL05",38,0)
 ;               text (either in @MAG8NODE@(i) or in @MAG8NODE@(i,0)
"RTN","MAGUTL05",39,0)
 ;               sub-nodes).
"RTN","MAGUTL05",40,0)
 ;
"RTN","MAGUTL05",41,0)
 ; Notes
"RTN","MAGUTL05",42,0)
 ; =====
"RTN","MAGUTL05",43,0)
 ;
"RTN","MAGUTL05",44,0)
 ; This function considers a buffer containing just space characters
"RTN","MAGUTL05",45,0)
 ; as empty.
"RTN","MAGUTL05",46,0)
 ;
"RTN","MAGUTL05",47,0)
 ; Return Values
"RTN","MAGUTL05",48,0)
 ; =============
"RTN","MAGUTL05",49,0)
 ;            0  The buffer is not empty
"RTN","MAGUTL05",50,0)
 ;            1  The buffer is empty
"RTN","MAGUTL05",51,0)
 ;
"RTN","MAGUTL05",52,0)
ISWPEMPT(MAG8NODE) ;
"RTN","MAGUTL05",53,0)
 N MAG8EMPTY,MAG8I
"RTN","MAGUTL05",54,0)
 S MAG8I="",MAG8EMPTY=1
"RTN","MAGUTL05",55,0)
 F  S MAG8I=$O(@MAG8NODE@(MAG8I))  Q:MAG8I=""  D  Q:'MAG8EMPTY
"RTN","MAGUTL05",56,0)
 . I $G(@MAG8NODE@(MAG8I))'?." "  S MAG8EMPTY=0  Q
"RTN","MAGUTL05",57,0)
 . S:$G(@MAG8NODE@(MAG8I,0))'?." " MAG8EMPTY=0
"RTN","MAGUTL05",58,0)
 . Q
"RTN","MAGUTL05",59,0)
 Q MAG8EMPTY
"RTN","MAGUTL05",60,0)
 ;
"RTN","MAGUTL05",61,0)
 ;***** CHECKS IF A NEW PAGE SHOULD BE STARTED
"RTN","MAGUTL05",62,0)
 ;
"RTN","MAGUTL05",63,0)
 ; [RESERVE]     Number of reserved lines (1, by default).
"RTN","MAGUTL05",64,0)
 ;               If the current page does not have so many lines
"RTN","MAGUTL05",65,0)
 ;               available, a new page will be started.
"RTN","MAGUTL05",66,0)
 ;
"RTN","MAGUTL05",67,0)
 ; [FORCE]       Force the prompt
"RTN","MAGUTL05",68,0)
 ;
"RTN","MAGUTL05",69,0)
 ; Return Values
"RTN","MAGUTL05",70,0)
 ; =============
"RTN","MAGUTL05",71,0)
 ;           -2  Timeout
"RTN","MAGUTL05",72,0)
 ;           -1  User canceled the output ('^' was entered)
"RTN","MAGUTL05",73,0)
 ;            0  Continue
"RTN","MAGUTL05",74,0)
 ;            1  New page and continue
"RTN","MAGUTL05",75,0)
 ;
"RTN","MAGUTL05",76,0)
 ; Notes
"RTN","MAGUTL05",77,0)
 ; =====
"RTN","MAGUTL05",78,0)
 ;
"RTN","MAGUTL05",79,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGUTL05",80,0)
 ; D PAGE^MAGUTL05(...) if you do not need its return value.
"RTN","MAGUTL05",81,0)
 ;
"RTN","MAGUTL05",82,0)
PAGE(RESERVE,FORCE) ;
"RTN","MAGUTL05",83,0)
 N RC
"RTN","MAGUTL05",84,0)
 I ($Y'<($G(IOSL,24)-$G(RESERVE,1)))!$G(FORCE)  D  S $Y=0
"RTN","MAGUTL05",85,0)
 . I $E(IOST,1,2)'="C-"  W @IOF  Q
"RTN","MAGUTL05",86,0)
 . N DA,DIR,DIROUT,DTOUT,DUOUT,I,X,Y
"RTN","MAGUTL05",87,0)
 . S DIR(0)="E"
"RTN","MAGUTL05",88,0)
 . D ^DIR
"RTN","MAGUTL05",89,0)
 . S RC=$S($D(DUOUT):-1,$D(DTOUT):-2,1:1)
"RTN","MAGUTL05",90,0)
 . Q
"RTN","MAGUTL05",91,0)
 ;---
"RTN","MAGUTL05",92,0)
 Q:$QUIT +$G(RC)  Q
"RTN","MAGUTL05",93,0)
 ;
"RTN","MAGUTL05",94,0)
 ;##### EMULATES $QUERY WITH 'DIRECTION' PARAMETER
"RTN","MAGUTL05",95,0)
 ;
"RTN","MAGUTL05",96,0)
 ; MAG8NODE       Name of a node
"RTN","MAGUTL05",97,0)
 ;
"RTN","MAGUTL05",98,0)
 ; [MAG8DIR]      Direction:
"RTN","MAGUTL05",99,0)
 ;                  $G(MAG8DIR)'<0  forward
"RTN","MAGUTL05",100,0)
 ;                  MAG8DIR<0       backward
"RTN","MAGUTL05",101,0)
 ;
"RTN","MAGUTL05",102,0)
Q(MAG8NODE,MAG8DIR) ;
"RTN","MAGUTL05",103,0)
 Q:$G(MAG8DIR)'<0 $Q(@MAG8NODE)
"RTN","MAGUTL05",104,0)
 N MAG8I,MAG8PI,MAG8TMP
"RTN","MAGUTL05",105,0)
 S MAG8TMP=$QL(MAG8NODE)  Q:MAG8TMP'>0 ""
"RTN","MAGUTL05",106,0)
 S MAG8I=$QS(MAG8NODE,MAG8TMP),MAG8PI=$NA(@MAG8NODE,MAG8TMP-1)
"RTN","MAGUTL05",107,0)
 ;--- Find the previous node on the "lowest" level.
"RTN","MAGUTL05",108,0)
 S MAG8I=$O(@MAG8PI@(MAG8I),-1)
"RTN","MAGUTL05",109,0)
 ;--- If there is none, then either return the parent node if it
"RTN","MAGUTL05",110,0)
 ;--- has data or perform the recursive query for the parent node.
"RTN","MAGUTL05",111,0)
 Q:MAG8I="" $S($D(@MAG8PI)#10:MAG8PI,1:$$Q(MAG8PI,-1))
"RTN","MAGUTL05",112,0)
 ;--- Otherwise, get the last "lowest" child node.
"RTN","MAGUTL05",113,0)
 F  S MAG8PI=$NA(@MAG8PI@(MAG8I))  Q:$D(@MAG8PI)<10  D
"RTN","MAGUTL05",114,0)
 . S MAG8I=$O(@MAG8PI@(""),-1)
"RTN","MAGUTL05",115,0)
 . Q
"RTN","MAGUTL05",116,0)
 Q MAG8PI
"RTN","MAGUTL05",117,0)
 ;
"RTN","MAGUTL05",118,0)
 ;##### "SENTENCE" CASE CONVERSION OF THE STRING
"RTN","MAGUTL05",119,0)
 ;
"RTN","MAGUTL05",120,0)
 ; STR           Source string
"RTN","MAGUTL05",121,0)
 ; 
"RTN","MAGUTL05",122,0)
 ; Return Values
"RTN","MAGUTL05",123,0)
 ; =============
"RTN","MAGUTL05",124,0)
 ;               The source string converted to lover case except the
"RTN","MAGUTL05",125,0)
 ;               first character, which is converted to upper case.
"RTN","MAGUTL05",126,0)
 ;
"RTN","MAGUTL05",127,0)
SNTC(STR) ;
"RTN","MAGUTL05",128,0)
 Q $$UP^XLFSTR($E(STR))_$$LOW^XLFSTR($E(STR,2,$L(STR)))
"RTN","MAGUTL05",129,0)
 ;
"RTN","MAGUTL05",130,0)
 ;##### TRANSLATES CONTROL FLAGS
"RTN","MAGUTL05",131,0)
 ;
"RTN","MAGUTL05",132,0)
 ; FLAGS         Source flags
"RTN","MAGUTL05",133,0)
 ;
"RTN","MAGUTL05",134,0)
 ; SRC           All characters that are not included in the value
"RTN","MAGUTL05",135,0)
 ;               of the SRC parameter are removed from the string
"RTN","MAGUTL05",136,0)
 ;               passed in the FLAGS parameter.
"RTN","MAGUTL05",137,0)
 ;
"RTN","MAGUTL05",138,0)
 ; [DST]         If the DST parameter is defined and not empty, then
"RTN","MAGUTL05",139,0)
 ;               flags defined by the SRC parameter are translated to 
"RTN","MAGUTL05",140,0)
 ;               their counterparts in this parameter (see the
"RTN","MAGUTL05",141,0)
 ;               $TRANSLATE function for additional details).
"RTN","MAGUTL05",142,0)
 ;
"RTN","MAGUTL05",143,0)
TRFLAGS(FLAGS,SRC,DST) ;
"RTN","MAGUTL05",144,0)
 N TMP
"RTN","MAGUTL05",145,0)
 ;--- Get flags that are not included in the SRC
"RTN","MAGUTL05",146,0)
 S TMP=$TR(FLAGS,SRC)
"RTN","MAGUTL05",147,0)
 ;--- Remove these flags
"RTN","MAGUTL05",148,0)
 S TMP=$TR(FLAGS,TMP)
"RTN","MAGUTL05",149,0)
 ;--- Translate valid flags if necessary
"RTN","MAGUTL05",150,0)
 Q $S($G(DST)'="":$TR(TMP,SRC,DST),1:TMP)
"RTN","MAGUTL05",151,0)
 ;
"RTN","MAGUTL05",152,0)
 ;##### TRUNCATES THE STRING AND APPENDS "..."
"RTN","MAGUTL05",153,0)
 ;
"RTN","MAGUTL05",154,0)
 ; STR           Source string
"RTN","MAGUTL05",155,0)
 ; MAXLEN        Maximum allowed length
"RTN","MAGUTL05",156,0)
 ;
"RTN","MAGUTL05",157,0)
TRUNC(STR,MAXLEN) ;
"RTN","MAGUTL05",158,0)
 Q $S($L(STR)>MAXLEN:$E(STR,1,MAXLEN-3)_"...",1:STR)
"RTN","MAGUTL05",159,0)
 ;
"RTN","MAGUTL05",160,0)
 ;##### CHECKS IF THE PARAMETER VALUE IS A VALID PATIENT IEN (DFN)
"RTN","MAGUTL05",161,0)
 ;
"RTN","MAGUTL05",162,0)
 ; DFN           Internal Entry Number of the patient record
"RTN","MAGUTL05",163,0)
 ;
"RTN","MAGUTL05",164,0)
 ; [.ERR]        Reference to a local variable where the error
"RTN","MAGUTL05",165,0)
 ;               descriptor (see the $$ERROR^MAGUERR) is returned to.
"RTN","MAGUTL05",166,0)
 ;
"RTN","MAGUTL05",167,0)
 ;               After a successful call, this parameter is empty.
"RTN","MAGUTL05",168,0)
 ;
"RTN","MAGUTL05",169,0)
 ;               These descriptors are NOT stored regarless of the
"RTN","MAGUTL05",170,0)
 ;               mode set by the CLEAR^MAGUERR. If you need to store
"RTN","MAGUTL05",171,0)
 ;               them (e.g. to return from an RPC), then you have to
"RTN","MAGUTL05",172,0)
 ;               do this in your code (see the STORE^MAGUERR).
"RTN","MAGUTL05",173,0)
 ;
"RTN","MAGUTL05",174,0)
 ; Return Values
"RTN","MAGUTL05",175,0)
 ; =============
"RTN","MAGUTL05",176,0)
 ;            0  Parameter value is not a valid patient IEN (DFN);
"RTN","MAGUTL05",177,0)
 ;               check the value of the ERR parameter for details.
"RTN","MAGUTL05",178,0)
 ;            1  Ok
"RTN","MAGUTL05",179,0)
 ;
"RTN","MAGUTL05",180,0)
 ;
"RTN","MAGUTL05",181,0)
VALDFN(DFN,ERR) ;
"RTN","MAGUTL05",182,0)
 S ERR=""
"RTN","MAGUTL05",183,0)
 I (DFN'>0)!(+DFN'=DFN)  S ERR=$$ERROR^MAGUERR("-3S",,"DFN",DFN)  Q 0
"RTN","MAGUTL05",184,0)
 I '($D(^DPT(DFN,0))#2)  S ERR=$$ERROR^MAGUERR("-5S",,DFN)        Q 0
"RTN","MAGUTL05",185,0)
 Q 1
"RTN","MAGUTL05",186,0)
 ;
"RTN","MAGUTL05",187,0)
 ;##### VALIDATES THE IENS
"RTN","MAGUTL05",188,0)
 ;
"RTN","MAGUTL05",189,0)
 ; IENS          IENS of a record or a subfile; placeholders are not
"RTN","MAGUTL05",190,0)
 ;               allowed (see FileMan DBS API manual for details).
"RTN","MAGUTL05",191,0)
 ;
"RTN","MAGUTL05",192,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGUTL05",193,0)
 ;
"RTN","MAGUTL05",194,0)
 ;                 S  Subfile IENS are allowed
"RTN","MAGUTL05",195,0)
 ;
"RTN","MAGUTL05",196,0)
 ; Return Values
"RTN","MAGUTL05",197,0)
 ; =============
"RTN","MAGUTL05",198,0)
 ;            0  Invalid IENS
"RTN","MAGUTL05",199,0)
 ;            1  Ok
"RTN","MAGUTL05",200,0)
 ;
"RTN","MAGUTL05",201,0)
VALIENS(IENS,FLAGS) ;
"RTN","MAGUTL05",202,0)
 N I,L,IEN,RC
"RTN","MAGUTL05",203,0)
 S L=$L(IENS,",")
"RTN","MAGUTL05",204,0)
 ;--- The last piece should be empty (trailing comma is required)
"RTN","MAGUTL05",205,0)
 Q:$P(IENS,",",L)'="" 0
"RTN","MAGUTL05",206,0)
 ;--- The first piece should be either a canonic number or empty
"RTN","MAGUTL05",207,0)
 S I=$S(($P(IENS,",")="")&($G(FLAGS)["S"):2,1:1)
"RTN","MAGUTL05",208,0)
 ;--- All pieces in between should be canonic numbers
"RTN","MAGUTL05",209,0)
 S RC=1
"RTN","MAGUTL05",210,0)
 F I=I:1:L-1  S IEN=$P(IENS,",",I)  I (IEN'>0)!(+IEN'=IEN)  S RC=0  Q
"RTN","MAGUTL05",211,0)
 Q RC
"RTN","MAGUTL05",212,0)
 ;
"RTN","MAGUTL05",213,0)
 ;##### CREATES/UPDATES THE NODE HEADER IN THE ^XTMP GLOBAL
"RTN","MAGUTL05",214,0)
 ;
"RTN","MAGUTL05",215,0)
 ; SUBSCR        Subscript of the node in the ^XTMP global
"RTN","MAGUTL05",216,0)
 ; [DKEEP]       Number of days to keep the node (1 by default)
"RTN","MAGUTL05",217,0)
 ; [DESCR]       Description of the node
"RTN","MAGUTL05",218,0)
 ;
"RTN","MAGUTL05",219,0)
XTMPHDR(SUBSCR,DKEEP,DESCR) ;
"RTN","MAGUTL05",220,0)
 N DATE  S DATE=$$DT^XLFDT  S:$G(DKEEP)'>0 DKEEP=1
"RTN","MAGUTL05",221,0)
 S ^XTMP(SUBSCR,0)=$$FMADD^XLFDT(DATE,DKEEP)_U_DATE_U_$G(DESCR)
"RTN","MAGUTL05",222,0)
 Q
"RTN","MAGUTL06")
0^53^B18816077
"RTN","MAGUTL06",1,0)
MAGUTL06 ;WOIFO/SG - VALIDATION OF MULTI-VALUE PARAMETERS ; 3/9/09 12:53pm
"RTN","MAGUTL06",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL06",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL06",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL06",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL06",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL06",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL06",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL06",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL06",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL06",11,0)
 ;; |                                                               |
"RTN","MAGUTL06",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL06",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL06",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL06",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL06",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL06",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL06",18,0)
 ;;
"RTN","MAGUTL06",19,0)
 Q
"RTN","MAGUTL06",20,0)
 ;
"RTN","MAGUTL06",21,0)
 ;##### VALIDATES THE LIST OF NAMES/CODES
"RTN","MAGUTL06",22,0)
 ;
"RTN","MAGUTL06",23,0)
 ; CDNMLIST      List of internal and/or external values of a 'set
"RTN","MAGUTL06",24,0)
 ;               of codes' field defined by the FILE and FIELD
"RTN","MAGUTL06",25,0)
 ;               parameters. Items should be separated by the '^'
"RTN","MAGUTL06",26,0)
 ;               (see also the FLAGS parameter).
"RTN","MAGUTL06",27,0)
 ;
"RTN","MAGUTL06",28,0)
 ; FILE          File/Subfile number
"RTN","MAGUTL06",29,0)
 ; FIELD         Field number
"RTN","MAGUTL06",30,0)
 ;
"RTN","MAGUTL06",31,0)
 ; MAG8NODE      Closed reference to a node where the results are
"RTN","MAGUTL06",32,0)
 ;               returned to:
"RTN","MAGUTL06",33,0)
 ;
"RTN","MAGUTL06",34,0)
 ; @MAG8NODE@(   The list of external names is returned here. Items
"RTN","MAGUTL06",35,0)
 ;               are separated with the same delimiter as those in
"RTN","MAGUTL06",36,0)
 ;               the source list.
"RTN","MAGUTL06",37,0)
 ;
"RTN","MAGUTL06",38,0)
 ;   Code)       Name
"RTN","MAGUTL06",39,0)
 ;
"RTN","MAGUTL06",40,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGUTL06",41,0)
 ;
"RTN","MAGUTL06",42,0)
 ;                 C  "Capitalize" the external names
"RTN","MAGUTL06",43,0)
 ;
"RTN","MAGUTL06",44,0)
 ;                 ,  Use comma as item separator instead of '^'
"RTN","MAGUTL06",45,0)
 ;                    (not recommended).
"RTN","MAGUTL06",46,0)
 ; 
"RTN","MAGUTL06",47,0)
 ;                 Z  Treat 0 (zero) as valid code regardles of
"RTN","MAGUTL06",48,0)
 ;                    the field definition.
"RTN","MAGUTL06",49,0)
 ;
"RTN","MAGUTL06",50,0)
 ; Return Values
"RTN","MAGUTL06",51,0)
 ; =============
"RTN","MAGUTL06",52,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL06",53,0)
 ;            0  Success
"RTN","MAGUTL06",54,0)
 ;           >0  Number of the piece of the source list that
"RTN","MAGUTL06",55,0)
 ;               contains an invalid code or name.
"RTN","MAGUTL06",56,0)
 ;
"RTN","MAGUTL06",57,0)
VALCNLST(CDNMLIST,FILE,FIELD,MAG8NODE,FLAGS) ;
"RTN","MAGUTL06",58,0)
 N ERR,I,ICNT,ITEM,LS,MAG8MSG,MAG8RES,NAME,RC
"RTN","MAGUTL06",59,0)
 S FLAGS=$G(FLAGS),LS=$S(FLAGS[",":",",1:"^")
"RTN","MAGUTL06",60,0)
 Q:$TR(FLAGS,"C,Z")'="" $$IPVE^MAGUERR("FLAGS")
"RTN","MAGUTL06",61,0)
 K @MAG8NODE  S (ICNT,RC)=0
"RTN","MAGUTL06",62,0)
 ;
"RTN","MAGUTL06",63,0)
 ;=== Process items of the list
"RTN","MAGUTL06",64,0)
 F I=1:1:$L(CDNMLIST,LS)  D  Q:RC
"RTN","MAGUTL06",65,0)
 . ;--- Get item name or code
"RTN","MAGUTL06",66,0)
 . S ITEM=$$TRIM^XLFSTR($P(CDNMLIST,LS,I))  Q:ITEM=""
"RTN","MAGUTL06",67,0)
 . ;--- Special check for zero
"RTN","MAGUTL06",68,0)
 . I ITEM=0,FLAGS["Z"  D  Q
"RTN","MAGUTL06",69,0)
 . . S ICNT=ICNT+1,NAME="<empty>"
"RTN","MAGUTL06",70,0)
 . . S $P(@MAG8NODE,LS,ICNT)=NAME  ; External name
"RTN","MAGUTL06",71,0)
 . . S @MAG8NODE@(0)=NAME          ; Internal code
"RTN","MAGUTL06",72,0)
 . . Q
"RTN","MAGUTL06",73,0)
 . ;--- Validate the item
"RTN","MAGUTL06",74,0)
 . D CHK^DIE(FILE,FIELD,"E",ITEM,.MAG8RES,"MAG8MSG")
"RTN","MAGUTL06",75,0)
 . I MAG8RES="^"  S RC=I,ERR=$G(MAG8MSG("DIERR",1))  D:ERR'=701  Q
"RTN","MAGUTL06",76,0)
 . . I ERR=401  S RC=$$IPVE^MAGUERR("FILE")   Q
"RTN","MAGUTL06",77,0)
 . . I ERR=501  S RC=$$IPVE^MAGUERR("FIELD")  Q
"RTN","MAGUTL06",78,0)
 . ;--- Store external and internal values
"RTN","MAGUTL06",79,0)
 . S ICNT=ICNT+1
"RTN","MAGUTL06",80,0)
 . S NAME=$S(FLAGS["C":$$SNTC^MAGUTL05(MAG8RES(0)),1:MAG8RES(0))
"RTN","MAGUTL06",81,0)
 . S $P(@MAG8NODE,LS,ICNT)=NAME  ; External name
"RTN","MAGUTL06",82,0)
 . S @MAG8NODE@(MAG8RES)=NAME    ; Internal code
"RTN","MAGUTL06",83,0)
 . Q
"RTN","MAGUTL06",84,0)
 ;
"RTN","MAGUTL06",85,0)
 ;=== Cleanup
"RTN","MAGUTL06",86,0)
 I RC  K @MAG8NODE  Q RC
"RTN","MAGUTL06",87,0)
 Q 0
"RTN","MAGUTL06",88,0)
 ;
"RTN","MAGUTL06",89,0)
 ;##### VALIDATES THE LIST OF NAMES/POINTERS
"RTN","MAGUTL06",90,0)
 ;
"RTN","MAGUTL06",91,0)
 ; PTNMLIST      Reference to a local variable that stores a list of
"RTN","MAGUTL06",92,0)
 ;               IENs and/or values of the .01 field from the file
"RTN","MAGUTL06",93,0)
 ;               defined by the FILE parameter. Items should be
"RTN","MAGUTL06",94,0)
 ;               separated by the '^' (see also the FLAGS parameter).
"RTN","MAGUTL06",95,0)
 ;
"RTN","MAGUTL06",96,0)
 ; FILE          File number. The file must have the standard
"RTN","MAGUTL06",97,0)
 ;               "B" cross-reference for the .01 field.
"RTN","MAGUTL06",98,0)
 ;
"RTN","MAGUTL06",99,0)
 ;
"RTN","MAGUTL06",100,0)
 ; MAG8NODE      Closed reference to a node where the results are
"RTN","MAGUTL06",101,0)
 ;               returned to:
"RTN","MAGUTL06",102,0)
 ;
"RTN","MAGUTL06",103,0)
 ; @MAG8NODE@(   The list of names (.01 values) is returned here.
"RTN","MAGUTL06",104,0)
 ;               Items are separated with the same delimiter as those
"RTN","MAGUTL06",105,0)
 ;               in the source list.
"RTN","MAGUTL06",106,0)
 ;
"RTN","MAGUTL06",107,0)
 ;   IEN)        Name
"RTN","MAGUTL06",108,0)
 ;
"RTN","MAGUTL06",109,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGUTL06",110,0)
 ;
"RTN","MAGUTL06",111,0)
 ;                 C  "Capitalize" the names
"RTN","MAGUTL06",112,0)
 ;
"RTN","MAGUTL06",113,0)
 ;                 ,  Use comma as item separator instead of '^'.
"RTN","MAGUTL06",114,0)
 ;                    (not recommended).
"RTN","MAGUTL06",115,0)
 ; 
"RTN","MAGUTL06",116,0)
 ; Return Values
"RTN","MAGUTL06",117,0)
 ; =============
"RTN","MAGUTL06",118,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL06",119,0)
 ;            0  Success
"RTN","MAGUTL06",120,0)
 ;           >0  Number of the piece of the source list that
"RTN","MAGUTL06",121,0)
 ;               contains an invalid code or name.
"RTN","MAGUTL06",122,0)
 ;
"RTN","MAGUTL06",123,0)
VALPNLST(PTNMLIST,FILE,MAG8NODE,FLAGS) ;
"RTN","MAGUTL06",124,0)
 N I,ICNT,IEN,ITEM,LS,MAGMSG,NAME,RC,ROOT,TMP
"RTN","MAGUTL06",125,0)
 S FLAGS=$G(FLAGS),LS=$S(FLAGS[",":",",1:"^")
"RTN","MAGUTL06",126,0)
 Q:$TR(FLAGS,"C,")'="" $$IPVE^MAGUERR("FLAGS")
"RTN","MAGUTL06",127,0)
 K @MAG8NODE  S (ICNT,RC)=0,ROOT=$$ROOT^DILFD(FILE,,1)
"RTN","MAGUTL06",128,0)
 Q:ROOT="" $$IPVE^MAGUERR("FILE")
"RTN","MAGUTL06",129,0)
 ;
"RTN","MAGUTL06",130,0)
 ;=== Process items of the list
"RTN","MAGUTL06",131,0)
 F I=1:1:$L(PTNMLIST,LS)  D  Q:RC
"RTN","MAGUTL06",132,0)
 . ;--- Get name or IEN
"RTN","MAGUTL06",133,0)
 . S ITEM=$$TRIM^XLFSTR($P(PTNMLIST,LS,I))  Q:ITEM=""
"RTN","MAGUTL06",134,0)
 . ;--- IEN
"RTN","MAGUTL06",135,0)
 . I +ITEM=ITEM,$D(@ROOT@(ITEM))  D  Q
"RTN","MAGUTL06",136,0)
 . . S NAME=$$GET1^DIQ(FILE,ITEM_",",.01,,,"MAGMSG")
"RTN","MAGUTL06",137,0)
 . . I $G(DIERR)  S RC=$$DBS^MAGUERR("MAGMSG",FILE,ITEM_",")  Q
"RTN","MAGUTL06",138,0)
 . . S ICNT=ICNT+1
"RTN","MAGUTL06",139,0)
 . . S:FLAGS["C" NAME=$$SNTC^MAGUTL05(NAME)
"RTN","MAGUTL06",140,0)
 . . S $P(@MAG8NODE,LS,ICNT)=NAME  ; Name
"RTN","MAGUTL06",141,0)
 . . S @MAG8NODE@(ITEM)=NAME       ; IEN
"RTN","MAGUTL06",142,0)
 . . Q
"RTN","MAGUTL06",143,0)
 . ;--- Name
"RTN","MAGUTL06",144,0)
 . I $D(@ROOT@("B",ITEM))<10  S RC=I  Q
"RTN","MAGUTL06",145,0)
 . S ICNT=ICNT+1
"RTN","MAGUTL06",146,0)
 . S NAME=$S(FLAGS["C":$$SNTC^MAGUTL05(ITEM),1:ITEM)
"RTN","MAGUTL06",147,0)
 . S $P(@MAG8NODE,LS,ICNT)=NAME
"RTN","MAGUTL06",148,0)
 . S IEN=""
"RTN","MAGUTL06",149,0)
 . F  S IEN=$O(@ROOT@("B",ITEM,IEN))  Q:IEN=""  D
"RTN","MAGUTL06",150,0)
 . . S @MAG8NODE@(IEN)=NAME
"RTN","MAGUTL06",151,0)
 . . Q
"RTN","MAGUTL06",152,0)
 . Q
"RTN","MAGUTL06",153,0)
 ;
"RTN","MAGUTL06",154,0)
 ;=== Cleanup
"RTN","MAGUTL06",155,0)
 I RC  K @MAG8NODE  Q RC
"RTN","MAGUTL06",156,0)
 Q 0
"RTN","MAGUTL07")
0^55^B22761121
"RTN","MAGUTL07",1,0)
MAGUTL07 ;WOIFO/SG - FILE/RECORD/FIELD LOCK ; 3/9/09 12:53pm
"RTN","MAGUTL07",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL07",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL07",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL07",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL07",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL07",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL07",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL07",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL07",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL07",11,0)
 ;; |                                                               |
"RTN","MAGUTL07",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL07",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL07",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL07",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL07",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL07",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL07",18,0)
 ;;
"RTN","MAGUTL07",19,0)
 ; Entry points of this routine use the ^XTMP("MAGLOCK",...) global
"RTN","MAGUTL07",20,0)
 ; nodes to store lock descriptors:
"RTN","MAGUTL07",21,0)
 ;
"RTN","MAGUTL07",22,0)
 ; ^XTMP("MAGLOCK",
"RTN","MAGUTL07",23,0)
 ;   0)                  Standard node descriptor
"RTN","MAGUTL07",24,0)
 ;                         ^1: Purge date  (FileMan)
"RTN","MAGUTL07",25,0)
 ;                         ^2: Create date (FileMan)
"RTN","MAGUTL07",26,0)
 ;                         ^3: Description
"RTN","MAGUTL07",27,0)
 ;
"RTN","MAGUTL07",28,0)
 ;   NodeNdx)            Internal lock descriptor
"RTN","MAGUTL07",29,0)
 ;                         ^01: Date/Time (FileMan)
"RTN","MAGUTL07",30,0)
 ;                         ^02: User/Process name
"RTN","MAGUTL07",31,0)
 ;                         ^03: User IEN (DUZ)
"RTN","MAGUTL07",32,0)
 ;                         ^04: $JOB
"RTN","MAGUTL07",33,0)
 ;                         ^05: Task number
"RTN","MAGUTL07",34,0)
 ;                         ^06: Lock counter
"RTN","MAGUTL07",35,0)
 ;
"RTN","MAGUTL07",36,0)
 ; The NodeNdx is calculated by the $$XLNDX^MAGUTL08 as the name
"RTN","MAGUTL07",37,0)
 ; reference to the locked node without the closing parenthesis.
"RTN","MAGUTL07",38,0)
 ;
"RTN","MAGUTL07",39,0)
 ; This routine uses the following ICRs:
"RTN","MAGUTL07",40,0)
 ;
"RTN","MAGUTL07",41,0)
 ; #2054         Get value of the DILOCKTM variable
"RTN","MAGUTL07",42,0)
 ;
"RTN","MAGUTL07",43,0)
 Q
"RTN","MAGUTL07",44,0)
 ;
"RTN","MAGUTL07",45,0)
 ;##### LOCKS THE (SUB)FILE, RECORD OR FIELD NODE
"RTN","MAGUTL07",46,0)
 ;
"RTN","MAGUTL07",47,0)
 ; [.]FILE       File/subfile number
"RTN","MAGUTL07",48,0)
 ; [IENS]        IENS of the record or subfile
"RTN","MAGUTL07",49,0)
 ; [FIELD]       Field number
"RTN","MAGUTL07",50,0)
 ;
"RTN","MAGUTL07",51,0)
 ;               If just the FILE has a value, then the whole file is
"RTN","MAGUTL07",52,0)
 ;               locked. If the FILE references a subfile, then the
"RTN","MAGUTL07",53,0)
 ;               subfile IENS (the 1st ","-piece is empty) should be
"RTN","MAGUTL07",54,0)
 ;               passed in the IENS parameter.
"RTN","MAGUTL07",55,0)
 ; 
"RTN","MAGUTL07",56,0)
 ;               If the IENS references a record of a file/subfile
"RTN","MAGUTL07",57,0)
 ;               (the 1st ","-piece is not empty), then this record
"RTN","MAGUTL07",58,0)
 ;               is locked.
"RTN","MAGUTL07",59,0)
 ;
"RTN","MAGUTL07",60,0)
 ;               If the IENS references a record and the FIELD is
"RTN","MAGUTL07",61,0)
 ;               also defined, then only the node that stores this
"RTN","MAGUTL07",62,0)
 ;               field is locked.
"RTN","MAGUTL07",63,0)
 ;
"RTN","MAGUTL07",64,0)
 ;               In addition (or instead) to the main locked object
"RTN","MAGUTL07",65,0)
 ;               defined by the FILE, IENS, and FIELD, you can define 
"RTN","MAGUTL07",66,0)
 ;               several additional objects using subscripts of the
"RTN","MAGUTL07",67,0)
 ;               FILE parameter:
"RTN","MAGUTL07",68,0)
 ;
"RTN","MAGUTL07",69,0)
 ;                 ;--- Lock the whole file #2005
"RTN","MAGUTL07",70,0)
 ;                 S FILE(2005)=""
"RTN","MAGUTL07",71,0)
 ;                 ;--- Lock the OBJECT GROUP multiple (4)
"RTN","MAGUTL07",72,0)
 ;                 S FILE(2005.04,",398,")=""
"RTN","MAGUTL07",73,0)
 ;                 ;--- Lock 2 images
"RTN","MAGUTL07",74,0)
 ;                 S FILE(2005,"454,")=""
"RTN","MAGUTL07",75,0)
 ;                 S FILE(2005,"455,")=""
"RTN","MAGUTL07",76,0)
 ;                 ;--- Lock just the node "40" of the image entry
"RTN","MAGUTL07",77,0)
 ;                 S FILE(2005,"123,",42)=""
"RTN","MAGUTL07",78,0)
 ;                 ;--- Lock the objects
"RTN","MAGUTL07",79,0)
 ;                 S RC=$$LOCKFM^MAGUTL07(.FILE)
"RTN","MAGUTL07",80,0)
 ;
"RTN","MAGUTL07",81,0)
 ;               All these objects are locked at the same time. If
"RTN","MAGUTL07",82,0)
 ;               even one of them cannot be locked, then nothing
"RTN","MAGUTL07",83,0)
 ;               is locked.
"RTN","MAGUTL07",84,0)
 ;
"RTN","MAGUTL07",85,0)
 ; [TO]          Timeout (value of DILOCKTM, by default)
"RTN","MAGUTL07",86,0)
 ;
"RTN","MAGUTL07",87,0)
 ; [NAME]        Process name. If this parameter is defined and not
"RTN","MAGUTL07",88,0)
 ;               empty, then its value will be returned in the lock
"RTN","MAGUTL07",89,0)
 ;               descriptor instead of the user name.
"RTN","MAGUTL07",90,0)
 ;
"RTN","MAGUTL07",91,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","MAGUTL07",92,0)
 ;
"RTN","MAGUTL07",93,0)
 ;                 D  Do not actually lock the node(s); just create
"RTN","MAGUTL07",94,0)
 ;                    the lock descriptor(s).
"RTN","MAGUTL07",95,0)
 ;
"RTN","MAGUTL07",96,0)
 ; Input Variables
"RTN","MAGUTL07",97,0)
 ; ===============
"RTN","MAGUTL07",98,0)
 ;   MAGJOB("XTMPLOCK")
"RTN","MAGUTL07",99,0)
 ;
"RTN","MAGUTL07",100,0)
 ; Output Variables
"RTN","MAGUTL07",101,0)
 ; ================
"RTN","MAGUTL07",102,0)
 ;   MAGJOB("XTMPLOCK")
"RTN","MAGUTL07",103,0)
 ;
"RTN","MAGUTL07",104,0)
 ; Return Values
"RTN","MAGUTL07",105,0)
 ; =============
"RTN","MAGUTL07",106,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL07",107,0)
 ;            0  Ok (the objects have been locked)
"RTN","MAGUTL07",108,0)
 ;           >0  The object is locked by another user or task and
"RTN","MAGUTL07",109,0)
 ;               a lock descriptor is returned.
"RTN","MAGUTL07",110,0)
 ;                 ^01: Date/Time (FileMan)
"RTN","MAGUTL07",111,0)
 ;                 ^02: User/Process name
"RTN","MAGUTL07",112,0)
 ;                 ^03: User IEN (DUZ). If this piece is empty, then
"RTN","MAGUTL07",113,0)
 ;                      check the 2nd piece for custom process name.
"RTN","MAGUTL07",114,0)
 ;                 ^04: $JOB
"RTN","MAGUTL07",115,0)
 ;                 ^05: Task number
"RTN","MAGUTL07",116,0)
 ;
"RTN","MAGUTL07",117,0)
LOCKFM(FILE,IENS,FIELD,TO,NAME,FLAGS) ;
"RTN","MAGUTL07",118,0)
 N DESCR,NDX,NODELIST,NODE,PI,RC,TMP
"RTN","MAGUTL07",119,0)
 S:$G(TO,-1)<0 TO=$G(DILOCKTM,3)
"RTN","MAGUTL07",120,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGUTL07",121,0)
 ;
"RTN","MAGUTL07",122,0)
 ;=== Update the ^XTMP("MAGLOCK",0) once per session
"RTN","MAGUTL07",123,0)
 I '$D(MAGJOB("XTMPLOCK"))  D  S MAGJOB("XTMPLOCK")=""
"RTN","MAGUTL07",124,0)
 . D XTMPHDR^MAGUTL05("MAGLOCK",30,"Imaging LOCK Descriptors")
"RTN","MAGUTL07",125,0)
 . Q
"RTN","MAGUTL07",126,0)
 ;
"RTN","MAGUTL07",127,0)
 ;=== Check if a single object should be locked
"RTN","MAGUTL07",128,0)
 I $D(FILE)<10  S RC=0  D:$G(FILE)>0  Q RC
"RTN","MAGUTL07",129,0)
 . S RC=$$LOCK1^MAGUTL08(FILE,$G(IENS),$G(FIELD),TO,$G(NAME),FLAGS)
"RTN","MAGUTL07",130,0)
 . Q
"RTN","MAGUTL07",131,0)
 ;
"RTN","MAGUTL07",132,0)
 ;=== Compile the list of global nodes
"RTN","MAGUTL07",133,0)
 S RC=$$NODELIST^MAGUTL08(.NODELIST,.FILE,$G(IENS),$G(FIELD))
"RTN","MAGUTL07",134,0)
 Q:RC<0 RC  Q:NODELIST="" 0
"RTN","MAGUTL07",135,0)
 ;
"RTN","MAGUTL07",136,0)
 ;=== Try to lock the object(s)
"RTN","MAGUTL07",137,0)
 I FLAGS'["D"  D  X TMP  E  Q $$LDSC^MAGUTL08(.NODELIST)
"RTN","MAGUTL07",138,0)
 . S TMP="L +("_NODELIST_"):"_TO
"RTN","MAGUTL07",139,0)
 . Q
"RTN","MAGUTL07",140,0)
 ;
"RTN","MAGUTL07",141,0)
 ;=== Create the lock descriptor(s)
"RTN","MAGUTL07",142,0)
 S DESCR=$$NOW^XLFDT_U_$G(NAME)_U_U_$JOB_U_$G(ZTSK)
"RTN","MAGUTL07",143,0)
 S:$G(NAME)="" $P(DESCR,U,3)=$G(DUZ)
"RTN","MAGUTL07",144,0)
 S NODE=""
"RTN","MAGUTL07",145,0)
 F  S NODE=$O(NODELIST(NODE))  Q:NODE=""  D
"RTN","MAGUTL07",146,0)
 . S NDX=$$XLNDX^MAGUTL08(NODE)
"RTN","MAGUTL07",147,0)
 . ;--- Calculate the lock counter
"RTN","MAGUTL07",148,0)
 . S TMP=$G(^XTMP("MAGLOCK",NDX))
"RTN","MAGUTL07",149,0)
 . S $P(DESCR,U,6)=$S($P(TMP,U,4)=$JOB:$P(TMP,U,6)+1,1:1)
"RTN","MAGUTL07",150,0)
 . ;--- Store the descriptor
"RTN","MAGUTL07",151,0)
 . S ^XTMP("MAGLOCK",NDX)=DESCR
"RTN","MAGUTL07",152,0)
 . Q
"RTN","MAGUTL07",153,0)
 ;===
"RTN","MAGUTL07",154,0)
 Q 0
"RTN","MAGUTL07",155,0)
 ;
"RTN","MAGUTL07",156,0)
 ;##### GENERATES A TEXT DESCRIPTION FROM THE LOCK DESCRIPTOR
"RTN","MAGUTL07",157,0)
 ;
"RTN","MAGUTL07",158,0)
 ; LDSC          Lock descriptor returned by the $$LOCKFM^MAGUTL07
"RTN","MAGUTL07",159,0)
 ;
"RTN","MAGUTL07",160,0)
 ; Return Values:
"RTN","MAGUTL07",161,0)
 ;       ""  If the 1st "^"-piece of the LDSC is not greater than 0,
"RTN","MAGUTL07",162,0)
 ;           then an empty string is returned.
"RTN","MAGUTL07",163,0)
 ;      ...  Otherwise, a text describing who/what and when
"RTN","MAGUTL07",164,0)
 ;           locked the object according to the descriptor
"RTN","MAGUTL07",165,0)
 ;
"RTN","MAGUTL07",166,0)
TEXT(LDSC) ;
"RTN","MAGUTL07",167,0)
 Q:LDSC'>0 ""
"RTN","MAGUTL07",168,0)
 N TEXT,TMP
"RTN","MAGUTL07",169,0)
 S TEXT="Locked by "_$P(LDSC,U,2)_" about "_$$FMTE^XLFDT(+LDSC)
"RTN","MAGUTL07",170,0)
 S TEXT=TEXT_"; Job #"_$P(LDSC,U,4)
"RTN","MAGUTL07",171,0)
 S TMP=$P(LDSC,U,5)  S:TMP'="" TEXT=TEXT_"; Task #"_TMP
"RTN","MAGUTL07",172,0)
 Q TEXT
"RTN","MAGUTL07",173,0)
 ;
"RTN","MAGUTL07",174,0)
 ;##### UNLOCKS THE (SUB)FILE, RECORD OR FIELD NODE
"RTN","MAGUTL07",175,0)
 ;
"RTN","MAGUTL07",176,0)
 ; [.]FILE       File/subfile number
"RTN","MAGUTL07",177,0)
 ; [IENS]        IENS of the record or subfile
"RTN","MAGUTL07",178,0)
 ; [FIELD]       Field number
"RTN","MAGUTL07",179,0)
 ;
"RTN","MAGUTL07",180,0)
 ;               See description of the LOCKFM^MAGUTL07 for details
"RTN","MAGUTL07",181,0)
 ;               about the FILE, IENS, and FIELD parameters.
"RTN","MAGUTL07",182,0)
 ;
"RTN","MAGUTL07",183,0)
 ; Return Values
"RTN","MAGUTL07",184,0)
 ; =============
"RTN","MAGUTL07",185,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL07",186,0)
 ;            0  Ok
"RTN","MAGUTL07",187,0)
 ;
"RTN","MAGUTL07",188,0)
 ; Notes
"RTN","MAGUTL07",189,0)
 ; =====
"RTN","MAGUTL07",190,0)
 ;
"RTN","MAGUTL07",191,0)
 ; This entry point can also be called as a procedure:
"RTN","MAGUTL07",192,0)
 ; D UNLOCKFM^MAGUTL07(...) if you do not need its return value.
"RTN","MAGUTL07",193,0)
 ;
"RTN","MAGUTL07",194,0)
UNLOCKFM(FILE,IENS,FIELD) ;
"RTN","MAGUTL07",195,0)
 N DESCR,NDX,NODELIST,NODE,PI,RC
"RTN","MAGUTL07",196,0)
 ;
"RTN","MAGUTL07",197,0)
 ;=== Check if a single object should be unlocked
"RTN","MAGUTL07",198,0)
 I $D(FILE)<10  S RC=0  D:$G(FILE)>0  Q:$QUIT RC  Q
"RTN","MAGUTL07",199,0)
 . S RC=$$UNLOCK1^MAGUTL08(FILE,$G(IENS),$G(FIELD))
"RTN","MAGUTL07",200,0)
 . Q
"RTN","MAGUTL07",201,0)
 ;
"RTN","MAGUTL07",202,0)
 ;=== Compile the list of global nodes
"RTN","MAGUTL07",203,0)
 S RC=$$NODELIST^MAGUTL08(.NODELIST,.FILE,$G(IENS),$G(FIELD))
"RTN","MAGUTL07",204,0)
 I RC<0  Q:$QUIT RC  Q
"RTN","MAGUTL07",205,0)
 I NODELIST=""  Q:$QUIT 0  Q
"RTN","MAGUTL07",206,0)
 ;
"RTN","MAGUTL07",207,0)
 ;=== Remove the lock descriptor(s)
"RTN","MAGUTL07",208,0)
 S NODE=""
"RTN","MAGUTL07",209,0)
 F  S NODE=$O(NODELIST(NODE))  Q:NODE=""  D
"RTN","MAGUTL07",210,0)
 . S NDX=$$XLNDX^MAGUTL08(NODE),DESCR=$G(^XTMP("MAGLOCK",NDX))
"RTN","MAGUTL07",211,0)
 . Q:$P(DESCR,U,4)'=$JOB
"RTN","MAGUTL07",212,0)
 . I $P(DESCR,U,6)>1  D
"RTN","MAGUTL07",213,0)
 . . S $P(^XTMP("MAGLOCK",NDX),U,6)=$P(DESCR,U,6)-1
"RTN","MAGUTL07",214,0)
 . . Q
"RTN","MAGUTL07",215,0)
 . E  K ^XTMP("MAGLOCK",NDX)
"RTN","MAGUTL07",216,0)
 . Q
"RTN","MAGUTL07",217,0)
 ;
"RTN","MAGUTL07",218,0)
 ;=== Unlock the object(s)
"RTN","MAGUTL07",219,0)
 X "L -("_NODELIST_")"
"RTN","MAGUTL07",220,0)
 Q:$QUIT 0  Q
"RTN","MAGUTL08")
0^56^B26051030
"RTN","MAGUTL08",1,0)
MAGUTL08 ;WOIFO/SG - INTERNAL LOCK UTILITIES ; 3/9/09 12:54pm
"RTN","MAGUTL08",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL08",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL08",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL08",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL08",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL08",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL08",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL08",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL08",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL08",11,0)
 ;; |                                                               |
"RTN","MAGUTL08",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL08",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL08",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL08",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL08",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL08",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL08",18,0)
 ;;
"RTN","MAGUTL08",19,0)
 ; Entry points of this routine use the ^XTMP("MAGLOCK",...) global
"RTN","MAGUTL08",20,0)
 ; nodes to store lock descriptors (see the MAGUTL07 routine for
"RTN","MAGUTL08",21,0)
 ; details).
"RTN","MAGUTL08",22,0)
 ;
"RTN","MAGUTL08",23,0)
 ; This routine uses the following ICRs:
"RTN","MAGUTL08",24,0)
 ;
"RTN","MAGUTL08",25,0)
 ; #10060        Read file #200 (supported)
"RTN","MAGUTL08",26,0)
 ;
"RTN","MAGUTL08",27,0)
 Q
"RTN","MAGUTL08",28,0)
 ;
"RTN","MAGUTL08",29,0)
 ;##### DELETES STRAY LOCK DESCRIPTORS
"RTN","MAGUTL08",30,0)
 ;
"RTN","MAGUTL08",31,0)
 ; This is a service procedure. Do not call it from regular
"RTN","MAGUTL08",32,0)
 ; applications!
"RTN","MAGUTL08",33,0)
 ;
"RTN","MAGUTL08",34,0)
PURGE() ;
"RTN","MAGUTL08",35,0)
 N NDX,NODE
"RTN","MAGUTL08",36,0)
 S NDX=0
"RTN","MAGUTL08",37,0)
 F  S NDX=$O(^XTMP("MAGLOCK",NDX))  Q:$E(NDX,1)'="^"  D
"RTN","MAGUTL08",38,0)
 . S NODE=$S(NDX["(":NDX_")",1:NDX)
"RTN","MAGUTL08",39,0)
 . D LOCK^DILF(NODE)  E  Q
"RTN","MAGUTL08",40,0)
 . K ^XTMP("MAGLOCK",NDX)  L -@NODE
"RTN","MAGUTL08",41,0)
 . Q
"RTN","MAGUTL08",42,0)
 Q
"RTN","MAGUTL08",43,0)
 ;
"RTN","MAGUTL08",44,0)
 ;+++++ RETURNS THE LOCK DESCRIPTOR FOR THE GLOBAL NODE(S)
"RTN","MAGUTL08",45,0)
 ;
"RTN","MAGUTL08",46,0)
 ; This is an internal entry point. Do not call it from any routines
"RTN","MAGUTL08",47,0)
 ; except MAGUTL07 and MAGUTL08.
"RTN","MAGUTL08",48,0)
 ;
"RTN","MAGUTL08",49,0)
LDSC(NODELIST) ;
"RTN","MAGUTL08",50,0)
 N DESCR,IENS,L,MAGMSG,NDX,NODE,SP,TMP
"RTN","MAGUTL08",51,0)
 S:$D(NODELIST)<10 NODELIST(NODELIST)=""
"RTN","MAGUTL08",52,0)
 ;
"RTN","MAGUTL08",53,0)
 ;=== Search for the most appropriate descriptor
"RTN","MAGUTL08",54,0)
 S (DESCR,NODE)=""
"RTN","MAGUTL08",55,0)
 F  S NODE=$O(NODELIST(NODE))  Q:NODE=""  D
"RTN","MAGUTL08",56,0)
 . ;--- The node itself
"RTN","MAGUTL08",57,0)
 . S SP=$$XLNDX(NODE),TMP=$G(^XTMP("MAGLOCK",SP))
"RTN","MAGUTL08",58,0)
 . S:TMP>DESCR DESCR=TMP
"RTN","MAGUTL08",59,0)
 . ;--- Left siblings and ancestors
"RTN","MAGUTL08",60,0)
 . S NDX=SP
"RTN","MAGUTL08",61,0)
 . F  S NDX=$O(^XTMP("MAGLOCK",NDX),-1),L=$L(NDX)  Q:(NDX="")!(NDX'=$E(SP,1,L))  D
"RTN","MAGUTL08",62,0)
 . . S TMP=$G(^XTMP("MAGLOCK",NDX))  S:TMP>DESCR DESCR=TMP
"RTN","MAGUTL08",63,0)
 . . Q
"RTN","MAGUTL08",64,0)
 . ;--- Right siblings and descendants
"RTN","MAGUTL08",65,0)
 . S NDX=SP,L=$L(SP)
"RTN","MAGUTL08",66,0)
 . F  S NDX=$O(^XTMP("MAGLOCK",NDX))  Q:(NDX="")!($E(NDX,1,L)'=SP)  D
"RTN","MAGUTL08",67,0)
 . . S TMP=$G(^XTMP("MAGLOCK",NDX))  S:TMP>DESCR DESCR=TMP
"RTN","MAGUTL08",68,0)
 . . Q
"RTN","MAGUTL08",69,0)
 . Q
"RTN","MAGUTL08",70,0)
 ;
"RTN","MAGUTL08",71,0)
 ;=== Populate as many fields of the descriptor as possible
"RTN","MAGUTL08",72,0)
 S:'DESCR $P(DESCR,U)=$$NOW^XLFDT
"RTN","MAGUTL08",73,0)
 ;--- Get the user name if the DUZ is available
"RTN","MAGUTL08",74,0)
 D:$P(DESCR,U,3)>0
"RTN","MAGUTL08",75,0)
 . S IENS=+$P(DESCR,U,3)_","
"RTN","MAGUTL08",76,0)
 . S $P(DESCR,U,2)=$$GET1^DIQ(200,IENS,.01,,,"MAGMSG")
"RTN","MAGUTL08",77,0)
 . Q
"RTN","MAGUTL08",78,0)
 ;--- If the originator of the lock is unknown, indicate this fact
"RTN","MAGUTL08",79,0)
 S:$P(DESCR,U,2)="" $P(DESCR,U,2)="UNKNOWN"
"RTN","MAGUTL08",80,0)
 ;
"RTN","MAGUTL08",81,0)
 ;=== Return the lock descriptor
"RTN","MAGUTL08",82,0)
 Q $P(DESCR,U,1,5)
"RTN","MAGUTL08",83,0)
 ;
"RTN","MAGUTL08",84,0)
 ;+++++ LOCKS THE SINGLE NODE
"RTN","MAGUTL08",85,0)
 ;
"RTN","MAGUTL08",86,0)
 ; Return Values
"RTN","MAGUTL08",87,0)
 ; =============
"RTN","MAGUTL08",88,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL08",89,0)
 ;            0  Ok
"RTN","MAGUTL08",90,0)
 ;           >0  Lock descriptor
"RTN","MAGUTL08",91,0)
 ;
"RTN","MAGUTL08",92,0)
 ; Notes
"RTN","MAGUTL08",93,0)
 ; =====
"RTN","MAGUTL08",94,0)
 ;
"RTN","MAGUTL08",95,0)
 ; This is an internal entry point. Do not call it from any routines
"RTN","MAGUTL08",96,0)
 ; except MAGUTL07 and MAGUTL08.
"RTN","MAGUTL08",97,0)
 ;
"RTN","MAGUTL08",98,0)
LOCK1(FILE,IENS,FIELD,TO,NAME,FLAGS) ;
"RTN","MAGUTL08",99,0)
 N DESCR,NDX,NODE,TMP
"RTN","MAGUTL08",100,0)
 S NODE=$$NODE(FILE,IENS,FIELD)
"RTN","MAGUTL08",101,0)
 Q:NODE<0 NODE
"RTN","MAGUTL08",102,0)
 ;--- Try to lock the object
"RTN","MAGUTL08",103,0)
 I FLAGS'["D"  L +@NODE:TO  E  Q $$LDSC(NODE)
"RTN","MAGUTL08",104,0)
 ;--- Create the lock descriptor
"RTN","MAGUTL08",105,0)
 S DESCR=$$NOW^XLFDT_U_NAME_U_U_$JOB_U_$G(ZTSK)
"RTN","MAGUTL08",106,0)
 S:NAME="" $P(DESCR,U,3)=$G(DUZ)
"RTN","MAGUTL08",107,0)
 ;--- Calculate the lock counter
"RTN","MAGUTL08",108,0)
 S NDX=$$XLNDX(NODE),TMP=$G(^XTMP("MAGLOCK",NDX))
"RTN","MAGUTL08",109,0)
 S $P(DESCR,U,6)=$S($P(TMP,U,4)=$JOB:$P(TMP,U,6)+1,1:1)
"RTN","MAGUTL08",110,0)
 ;--- Store the descriptor
"RTN","MAGUTL08",111,0)
 S ^XTMP("MAGLOCK",NDX)=DESCR
"RTN","MAGUTL08",112,0)
 Q 0
"RTN","MAGUTL08",113,0)
 ;
"RTN","MAGUTL08",114,0)
 ;+++++ RETURNS THE GLOBAL NODE OF THE OBJECT
"RTN","MAGUTL08",115,0)
 ;
"RTN","MAGUTL08",116,0)
 ; FILE          File/subfile number
"RTN","MAGUTL08",117,0)
 ; IENS          IENS of the record or subfile
"RTN","MAGUTL08",118,0)
 ; FIELD         Field number
"RTN","MAGUTL08",119,0)
 ;
"RTN","MAGUTL08",120,0)
 ; Return Values
"RTN","MAGUTL08",121,0)
 ; =============
"RTN","MAGUTL08",122,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL08",123,0)
 ;          ...  Closed root
"RTN","MAGUTL08",124,0)
 ;
"RTN","MAGUTL08",125,0)
 ; Notes
"RTN","MAGUTL08",126,0)
 ; =====
"RTN","MAGUTL08",127,0)
 ;
"RTN","MAGUTL08",128,0)
 ; This is an internal entry point. Do not call it from any routines
"RTN","MAGUTL08",129,0)
 ; except MAGUTL07 and MAGUTL08.
"RTN","MAGUTL08",130,0)
 ;
"RTN","MAGUTL08",131,0)
NODE(FILE,IENS,FIELD) ;
"RTN","MAGUTL08",132,0)
 N FGL,IEN,MAGMSG,NODE,RC
"RTN","MAGUTL08",133,0)
 I IENS'=""  Q:'$$VALIENS^MAGUTL05(IENS,"S") $$IPVE^MAGUERR("IENS")
"RTN","MAGUTL08",134,0)
 S IEN=+IENS
"RTN","MAGUTL08",135,0)
 I IEN  S $P(IENS,",")=""  S:IENS="," IENS=""
"RTN","MAGUTL08",136,0)
 ;--- Closed root of the (sub)file
"RTN","MAGUTL08",137,0)
 S NODE=$$ROOT^DILFD(FILE,IENS,1)
"RTN","MAGUTL08",138,0)
 Q:NODE="" $$ERROR^MAGUERR(-48,,FILE,IENS)
"RTN","MAGUTL08",139,0)
 Q:'IEN NODE
"RTN","MAGUTL08",140,0)
 ;--- The record node
"RTN","MAGUTL08",141,0)
 S NODE=$NA(@NODE@(IEN))
"RTN","MAGUTL08",142,0)
 Q:'FIELD NODE
"RTN","MAGUTL08",143,0)
 ;--- Field node
"RTN","MAGUTL08",144,0)
 S FGL=$$GET1^DID(FILE,FIELD,,"GLOBAL SUBSCRIPT LOCATION",,"MAGMSG")
"RTN","MAGUTL08",145,0)
 Q:$G(DIERR) $$DBS^MAGUERR("MAGMSG",FILE)
"RTN","MAGUTL08",146,0)
 S:$P(FGL,";")'="" NODE=$NA(@NODE@($P(FGL,";")))
"RTN","MAGUTL08",147,0)
 Q NODE
"RTN","MAGUTL08",148,0)
 ;
"RTN","MAGUTL08",149,0)
 ;+++++ COMPILES THE LIST OF GLOBAL NODES
"RTN","MAGUTL08",150,0)
 ;
"RTN","MAGUTL08",151,0)
 ; Return Values
"RTN","MAGUTL08",152,0)
 ; =============
"RTN","MAGUTL08",153,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL08",154,0)
 ;            0  Ok
"RTN","MAGUTL08",155,0)
 ;
"RTN","MAGUTL08",156,0)
 ; Notes
"RTN","MAGUTL08",157,0)
 ; =====
"RTN","MAGUTL08",158,0)
 ;
"RTN","MAGUTL08",159,0)
 ; This is an internal entry point. Do not call it from any routines
"RTN","MAGUTL08",160,0)
 ; except MAGUTL07 and MAGUTL08.
"RTN","MAGUTL08",161,0)
 ;
"RTN","MAGUTL08",162,0)
NODELIST(NODELIST,FILE,IENS,FIELD) ;
"RTN","MAGUTL08",163,0)
 N NODE,PI,RC  K NODELIST
"RTN","MAGUTL08",164,0)
 S NODELIST="",RC=0
"RTN","MAGUTL08",165,0)
 ;--- Main object
"RTN","MAGUTL08",166,0)
 I $G(FILE)>0  D  Q:RC<0 RC
"RTN","MAGUTL08",167,0)
 . S NODE=$$NODE(FILE,IENS,FIELD)
"RTN","MAGUTL08",168,0)
 . I NODE<0  S RC=NODE  Q
"RTN","MAGUTL08",169,0)
 . S NODELIST=NODELIST_","_NODE
"RTN","MAGUTL08",170,0)
 . S NODELIST(NODE)=""
"RTN","MAGUTL08",171,0)
 . Q
"RTN","MAGUTL08",172,0)
 ;--- Linked objects
"RTN","MAGUTL08",173,0)
 S PI="FILE"
"RTN","MAGUTL08",174,0)
 F  S PI=$Q(@PI)  Q:PI=""  D  Q:RC<0
"RTN","MAGUTL08",175,0)
 . S NODE=$$NODE($QS(PI,1),$QS(PI,2),$QS(PI,3))
"RTN","MAGUTL08",176,0)
 . I NODE<0  S RC=NODE  Q
"RTN","MAGUTL08",177,0)
 . S NODELIST=NODELIST_","_NODE
"RTN","MAGUTL08",178,0)
 . S NODELIST(NODE)=""
"RTN","MAGUTL08",179,0)
 . Q
"RTN","MAGUTL08",180,0)
 Q:RC<0 RC
"RTN","MAGUTL08",181,0)
 ;---
"RTN","MAGUTL08",182,0)
 S NODELIST=$P(NODELIST,",",2,999)
"RTN","MAGUTL08",183,0)
 Q RC
"RTN","MAGUTL08",184,0)
 ;
"RTN","MAGUTL08",185,0)
 ;+++++ UNLOCKS THE SINGLE NODE
"RTN","MAGUTL08",186,0)
 ;
"RTN","MAGUTL08",187,0)
 ; Return Values
"RTN","MAGUTL08",188,0)
 ; =============
"RTN","MAGUTL08",189,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL08",190,0)
 ;            0  Ok
"RTN","MAGUTL08",191,0)
 ;
"RTN","MAGUTL08",192,0)
 ; Notes
"RTN","MAGUTL08",193,0)
 ; =====
"RTN","MAGUTL08",194,0)
 ;
"RTN","MAGUTL08",195,0)
 ; This is an internal entry point. Do not call it from any routines
"RTN","MAGUTL08",196,0)
 ; except MAGUTL07 and MAGUTL08.
"RTN","MAGUTL08",197,0)
 ;
"RTN","MAGUTL08",198,0)
UNLOCK1(FILE,IENS,FIELD) ;
"RTN","MAGUTL08",199,0)
 N DESCR,NDX,NODE
"RTN","MAGUTL08",200,0)
 S NODE=$$NODE(FILE,IENS,FIELD)
"RTN","MAGUTL08",201,0)
 Q:NODE<0 NODE
"RTN","MAGUTL08",202,0)
 ;--- Remove the lock descriptor
"RTN","MAGUTL08",203,0)
 S NDX=$$XLNDX(NODE),DESCR=$G(^XTMP("MAGLOCK",NDX))
"RTN","MAGUTL08",204,0)
 D:$P(DESCR,U,4)=$JOB
"RTN","MAGUTL08",205,0)
 . I $P(DESCR,U,6)>1  D
"RTN","MAGUTL08",206,0)
 . . S $P(^XTMP("MAGLOCK",NDX),U,6)=$P(DESCR,U,6)-1
"RTN","MAGUTL08",207,0)
 . . Q
"RTN","MAGUTL08",208,0)
 . E  K ^XTMP("MAGLOCK",NDX)
"RTN","MAGUTL08",209,0)
 . Q
"RTN","MAGUTL08",210,0)
 ;--- Unlock the object
"RTN","MAGUTL08",211,0)
 L -@NODE
"RTN","MAGUTL08",212,0)
 Q 0
"RTN","MAGUTL08",213,0)
 ;
"RTN","MAGUTL08",214,0)
 ;+++++ RETURNS SUBSCRIPT OF THE NODE IN THE DESCRIPTOR TABLE
"RTN","MAGUTL08",215,0)
 ;
"RTN","MAGUTL08",216,0)
 ; This is an internal entry point. Do not call it from any routines
"RTN","MAGUTL08",217,0)
 ; except MAGUTL07 and MAGUTL08.
"RTN","MAGUTL08",218,0)
 ;
"RTN","MAGUTL08",219,0)
XLNDX(NODE) ;
"RTN","MAGUTL08",220,0)
 N L  S L=$L(NODE)
"RTN","MAGUTL08",221,0)
 Q $S($E(NODE,L)=")":$E(NODE,1,L-1),1:NODE)
"RTN","MAGUTL10")
0^59^B8165500
"RTN","MAGUTL10",1,0)
MAGUTL10 ;WOIFO/SG - UTILITIES FOR REASONS ; 5/4/09 11:54am
"RTN","MAGUTL10",2,0)
 ;;3.0;IMAGING;**93**;Dec 02, 2009;Build 163
"RTN","MAGUTL10",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUTL10",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL10",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUTL10",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUTL10",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUTL10",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUTL10",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUTL10",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUTL10",11,0)
 ;; |                                                               |
"RTN","MAGUTL10",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUTL10",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUTL10",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUTL10",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUTL10",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUTL10",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUTL10",18,0)
 ;;
"RTN","MAGUTL10",19,0)
 Q
"RTN","MAGUTL10",20,0)
 ;
"RTN","MAGUTL10",21,0)
 ;##### RETURNS THE REASON PROPERTIES
"RTN","MAGUTL10",22,0)
 ;
"RTN","MAGUTL10",23,0)
 ; RSNID         Identifier of the reason: Internal Entry Number of
"RTN","MAGUTL10",24,0)
 ;               the record in the MAG REASON file (#2005.88) or the
"RTN","MAGUTL10",25,0)
 ;               reason code (see the FLAGS parameter).
"RTN","MAGUTL10",26,0)
 ;
"RTN","MAGUTL10",27,0)
 ; [FLAGS]       Flags that control execution (can be combined):
"RTN","MAGUTL10",28,0)
 ;
"RTN","MAGUTL10",29,0)
 ;                 C  By default, value of the RSNID parameter is
"RTN","MAGUTL10",30,0)
 ;                    treated as the reason IEN. If this flag is
"RTN","MAGUTL10",31,0)
 ;                    provided, then the reason code should be passed 
"RTN","MAGUTL10",32,0)
 ;                    as the value of the RSNID.
"RTN","MAGUTL10",33,0)
 ;
"RTN","MAGUTL10",34,0)
 ;                 F  Include full details (description text).
"RTN","MAGUTL10",35,0)
 ;                    By default, only the summary data is returned.
"RTN","MAGUTL10",36,0)
 ;
"RTN","MAGUTL10",37,0)
 ; [.DESCR]      Reference to a local array where the description is
"RTN","MAGUTL10",38,0)
 ;               returned if the F flag is provided.
"RTN","MAGUTL10",39,0)
 ; 
"RTN","MAGUTL10",40,0)
 ; Return Values
"RTN","MAGUTL10",41,0)
 ; =============
"RTN","MAGUTL10",42,0)
 ;           <0  Error descriptor (see the $$ERROR^MAGUERR)
"RTN","MAGUTL10",43,0)
 ;           >0  Reason summary
"RTN","MAGUTL10",44,0)
 ;                 ^01: IEN of the reason in file #2005.88
"RTN","MAGUTL10",45,0)
 ;                 ^02: Text of the reason
"RTN","MAGUTL10",46,0)
 ;                 ^03: Types of the reason (combination of
"RTN","MAGUTL10",47,0)
 ;                      "C", "D", "P", and/or "S")
"RTN","MAGUTL10",48,0)
 ;                 ^04: Date of inactivation (FileMan)
"RTN","MAGUTL10",49,0)
 ;                 ^05: Unique code of the reason
"RTN","MAGUTL10",50,0)
 ;
"RTN","MAGUTL10",51,0)
GETRSN(RSNID,FLAGS,DESCR) ;
"RTN","MAGUTL10",52,0)
 N FLDS,I,IEN,IENS,IRES,MAGBUF,MAGMSG,RC,REASON
"RTN","MAGUTL10",53,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGUTL10",54,0)
 S RC=0,REASON=""  K DESCR
"RTN","MAGUTL10",55,0)
 ;
"RTN","MAGUTL10",56,0)
 ;=== Validate parameters
"RTN","MAGUTL10",57,0)
 S FLAGS=$G(FLAGS)
"RTN","MAGUTL10",58,0)
 ;--- Check for invalid flag(s)
"RTN","MAGUTL10",59,0)
 Q:$TR(FLAGS,"CF")'="" $$IPVE^MAGUERR("FLAGS")
"RTN","MAGUTL10",60,0)
 ;--- Validate the reason identifier
"RTN","MAGUTL10",61,0)
 I FLAGS["C"  D  Q:RC<0 RC
"RTN","MAGUTL10",62,0)
 . S IEN=$$FIND1^DIC(2005.88,,"X",RSNID,"C",,"MAGMSG")
"RTN","MAGUTL10",63,0)
 . I $G(DIERR)  S RC=$$DBS^MAGUERR("MAGMSG",2005.88)  Q
"RTN","MAGUTL10",64,0)
 . I IEN'>0  S RC=$$ERROR^MAGUERR(-49,,RSNID)  Q
"RTN","MAGUTL10",65,0)
 . Q
"RTN","MAGUTL10",66,0)
 E  S IEN=RSNID  Q:(IEN'>0)!(+IEN'=IEN) $$IPVE^MAGUERR("RSNID")
"RTN","MAGUTL10",67,0)
 S IENS=IEN_","
"RTN","MAGUTL10",68,0)
 ;
"RTN","MAGUTL10",69,0)
 ;=== Load the data
"RTN","MAGUTL10",70,0)
 S FLDS=".01;.02;.03;.04"_$S(FLAGS["F":";1",1:"")
"RTN","MAGUTL10",71,0)
 D GETS^DIQ(2005.88,IENS,FLDS,"EI","MAGBUF","MAGMSG")
"RTN","MAGUTL10",72,0)
 Q:$G(DIERR) $$DBS^MAGUERR("MAGMSG",2005.88,IENS)
"RTN","MAGUTL10",73,0)
 ;
"RTN","MAGUTL10",74,0)
 ;=== Compile the reason summary
"RTN","MAGUTL10",75,0)
 S REASON=IEN_U_MAGBUF(2005.88,IENS,.01,"E")
"RTN","MAGUTL10",76,0)
 S $P(REASON,U,3)=$G(MAGBUF(2005.88,IENS,.02,"I"))
"RTN","MAGUTL10",77,0)
 S $P(REASON,U,4)=$G(MAGBUF(2005.88,IENS,.03,"I"))
"RTN","MAGUTL10",78,0)
 S $P(REASON,U,5)=$G(MAGBUF(2005.88,IENS,.04,"I"))
"RTN","MAGUTL10",79,0)
 ;
"RTN","MAGUTL10",80,0)
 ;=== Copy the description to the output parameter
"RTN","MAGUTL10",81,0)
 I FLAGS["F"  M DESCR=MAGBUF(2005.88,IENS,1)  K DESCR("E"),DESCR("I")
"RTN","MAGUTL10",82,0)
 ;
"RTN","MAGUTL10",83,0)
 ;=== Success
"RTN","MAGUTL10",84,0)
 Q REASON
"RTN","MAGUXRF")
0^10^B41195502
"RTN","MAGUXRF",1,0)
MAGUXRF ;WOIFO/SRR/SG - Imaging MUMPS cross-references ; 4/7/09 1:57pm
"RTN","MAGUXRF",2,0)
 ;;3.0;IMAGING;**51,93**;Dec 02, 2009;Build 163
"RTN","MAGUXRF",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUXRF",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUXRF",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUXRF",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUXRF",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUXRF",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUXRF",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUXRF",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUXRF",11,0)
 ;; |                                                               |
"RTN","MAGUXRF",12,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUXRF",13,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUXRF",14,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUXRF",15,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUXRF",16,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUXRF",17,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUXRF",18,0)
 ;;
"RTN","MAGUXRF",19,0)
SETACT D AC(1) Q
"RTN","MAGUXRF",20,0)
KILLACT D AC(0) Q
"RTN","MAGUXRF",21,0)
 ;
"RTN","MAGUXRF",22,0)
AC(SETKIL) N ACTION,ROUTINE,TYPE
"RTN","MAGUXRF",23,0)
 ; "AC" Cross Reference for OBJECT TYPE - ACTION subfile
"RTN","MAGUXRF",24,0)
 ;  ^MAG(2005.02,"AC",OBJECT TYPE,ACTION)=OBJECT TYPE^ACTION ROUTINE
"RTN","MAGUXRF",25,0)
 S TYPE=$P(^MAG(2005.02,DA(1),0),"^",1)
"RTN","MAGUXRF",26,0)
 S ACTION=^MAG(2005.02,DA(1),1,DA,0)
"RTN","MAGUXRF",27,0)
 S ROUTINE=$P(ACTION,".",2),ACTION=$P(ACTION,".",1)
"RTN","MAGUXRF",28,0)
 S:SETKIL ^MAG(2005.02,"AC",TYPE,ACTION)=TYPE_"^"_ROUTINE
"RTN","MAGUXRF",29,0)
 K:'SETKIL ^MAG(2005.02,"AC",TYPE,ACTION)
"RTN","MAGUXRF",30,0)
 K MAGACT1,MAGMETH,MAG
"RTN","MAGUXRF",31,0)
 Q
"RTN","MAGUXRF",32,0)
 ;
"RTN","MAGUXRF",33,0)
SETPX ; Set PACS switch on; check fields first
"RTN","MAGUXRF",34,0)
 ; Write checks
"RTN","MAGUXRF",35,0)
 S ^MAG(2006.1,"APACS")=1
"RTN","MAGUXRF",36,0)
 Q
"RTN","MAGUXRF",37,0)
 ;
"RTN","MAGUXRF",38,0)
KILPX ; Stop PACS system
"RTN","MAGUXRF",39,0)
 K ^MAG(2006.1,"APACS")
"RTN","MAGUXRF",40,0)
 Q
"RTN","MAGUXRF",41,0)
 ;
"RTN","MAGUXRF",42,0)
SETPDPX ; Set P(atient) D(ate) PX(procedure)
"RTN","MAGUXRF",43,0)
 D SET Q:PDT=""  Q:DFN=""
"RTN","MAGUXRF",44,0)
 S ^MAG(2005,"APDPX",DFN,PDT,PX,DA)=""
"RTN","MAGUXRF",45,0)
 Q
"RTN","MAGUXRF",46,0)
 ;
"RTN","MAGUXRF",47,0)
SET S X0=^MAG(2005,DA,0),X2=$G(^(2))
"RTN","MAGUXRF",48,0)
 S PDT=$P(X2,U,5) I PDT="" S PDT=$P(X2,U) Q:PDT=""
"RTN","MAGUXRF",49,0)
 S DFN=$P(X0,U,7) Q:DFN=""
"RTN","MAGUXRF",50,0)
 ;
"RTN","MAGUXRF",51,0)
4 S PX=$P(X0,U,8) I PX="" S PX="OTHER"
"RTN","MAGUXRF",52,0)
 Q
"RTN","MAGUXRF",53,0)
 ;
"RTN","MAGUXRF",54,0)
KILPDPX ; Kill
"RTN","MAGUXRF",55,0)
 D SET Q:PDT=""  Q:DFN=""
"RTN","MAGUXRF",56,0)
 K ^MAG(2005,"APDPX",DFN,PDT,PX,DA)
"RTN","MAGUXRF",57,0)
 Q
"RTN","MAGUXRF",58,0)
 ;
"RTN","MAGUXRF",59,0)
SETPPXD ; #5:Set (patient=X=DFN); #6:PX(procedure); #15:DT(procedure date/time)
"RTN","MAGUXRF",60,0)
 ; Xref for patient field#5=Patient name (in form of DFN)
"RTN","MAGUXRF",61,0)
 ; ^MAG(2005,"APPXDT",X,PX,reverseDT)=""
"RTN","MAGUXRF",62,0)
 N CDT,RDT,PX,ER
"RTN","MAGUXRF",63,0)
 D SETUP Q:$D(ER)
"RTN","MAGUXRF",64,0)
 S ^MAG(2005,"APPXDT",X,PX,RDT,DA)=""
"RTN","MAGUXRF",65,0)
 S ^MAG(2005,"APDTPX",X,RDT,PX,DA)=""
"RTN","MAGUXRF",66,0)
 Q
"RTN","MAGUXRF",67,0)
 ;
"RTN","MAGUXRF",68,0)
SETUP ; Set up for patient Xref's-for field #5l
"RTN","MAGUXRF",69,0)
 S PX=$P(^MAG(2005,DA,0),U,8),CDT=$P($G(^(2)),U,5)
"RTN","MAGUXRF",70,0)
 I CDT="" S ER=1 Q
"RTN","MAGUXRF",71,0)
 I PX="" S ER=1 Q
"RTN","MAGUXRF",72,0)
 S RDT=9999999.9999-CDT
"RTN","MAGUXRF",73,0)
 Q
"RTN","MAGUXRF",74,0)
 ;
"RTN","MAGUXRF",75,0)
KILPPXD ;#5:KILL (PATIENT=X=DFN); #6:PX(PROCEDURE); #15:DT(PROCEDURE DATE/TIME)
"RTN","MAGUXRF",76,0)
 N CDT,PX,RDT,ER
"RTN","MAGUXRF",77,0)
 D SETUP Q:$D(ER)
"RTN","MAGUXRF",78,0)
 K ^MAG(2005,"APPXDT",X,PX,RDT,DA)
"RTN","MAGUXRF",79,0)
 K ^MAG(2005,"APDTPX",X,RDT,PX,DA)
"RTN","MAGUXRF",80,0)
 Q
"RTN","MAGUXRF",81,0)
 ;
"RTN","MAGUXRF",82,0)
SETPPXD6 ;#5:SET (PATIENT=X=DFN); #6:PX(PROCEDURE); #15:DT(PROCEDURE DATE/TIME)
"RTN","MAGUXRF",83,0)
 ;XREF FOR PROCEDURE,FIELD#6
"RTN","MAGUXRF",84,0)
 N DFN,CDT,RDT,ER
"RTN","MAGUXRF",85,0)
 D SETUP6 Q:$D(ER)
"RTN","MAGUXRF",86,0)
 S ^MAG(2005,"APPXDT",DFN,X,RDT,DA)=""
"RTN","MAGUXRF",87,0)
 S ^MAG(2005,"APDTPX",DFN,RDT,X,DA)=""
"RTN","MAGUXRF",88,0)
 Q
"RTN","MAGUXRF",89,0)
 ;
"RTN","MAGUXRF",90,0)
SETUP6 ; Set up for procedure xref-field#6
"RTN","MAGUXRF",91,0)
 S DFN=$P(^MAG(2005,DA,0),U,7),CDT=$P($G(^(2)),U,5)
"RTN","MAGUXRF",92,0)
 I CDT="" S ER=1 Q
"RTN","MAGUXRF",93,0)
 I DFN="" S ER=1 Q
"RTN","MAGUXRF",94,0)
 S RDT=9999999.9999-CDT
"RTN","MAGUXRF",95,0)
 Q
"RTN","MAGUXRF",96,0)
 ;
"RTN","MAGUXRF",97,0)
KILPPXD6 ;#5:KILL (PATIENT=X=DFN); #6:PX(PROCEDURE); #15:DT(PROCEDURE DATE/TIME)
"RTN","MAGUXRF",98,0)
 N DFN,CDT,RDT,ER
"RTN","MAGUXRF",99,0)
 D SETUP6 Q:$D(ER)
"RTN","MAGUXRF",100,0)
 K ^MAG(2005,"APPXDT",DFN,X,RDT,DA)
"RTN","MAGUXRF",101,0)
 K ^MAG(2005,"APDTPX",DFN,RDT,X,DA)
"RTN","MAGUXRF",102,0)
 Q
"RTN","MAGUXRF",103,0)
 ;
"RTN","MAGUXRF",104,0)
SETPPXD5 ;#5:SET (PATIENT=X=DFN); #6:PX(PROCEDURE); #15:DT(PROCEDURE DATE/TIME)
"RTN","MAGUXRF",105,0)
 ;XREF FOR FIELD#15
"RTN","MAGUXRF",106,0)
 ;^MAG(2005,"APPXDT",DFN,PX,reverseDT)=""
"RTN","MAGUXRF",107,0)
 N DFN,PX,RDT,ER
"RTN","MAGUXRF",108,0)
 D SETUP5 Q:$D(ER)
"RTN","MAGUXRF",109,0)
 S ^MAG(2005,"APPXDT",DFN,PX,RDT,DA)=""
"RTN","MAGUXRF",110,0)
 S ^MAG(2005,"APDTPX",DFN,RDT,PX,DA)=""
"RTN","MAGUXRF",111,0)
 Q
"RTN","MAGUXRF",112,0)
 ;
"RTN","MAGUXRF",113,0)
SETUP5 ; Set up for for date/time procedure field#15
"RTN","MAGUXRF",114,0)
 S DFN=$P(^MAG(2005,DA,0),U,7),PX=$P(^(0),U,8)
"RTN","MAGUXRF",115,0)
 I PX="" S ER=1 Q
"RTN","MAGUXRF",116,0)
 I DFN="" S ER=1 Q
"RTN","MAGUXRF",117,0)
 S RDT=9999999.9999-X
"RTN","MAGUXRF",118,0)
 Q
"RTN","MAGUXRF",119,0)
 ;
"RTN","MAGUXRF",120,0)
KILPPXD5 ;#5:SET (PATIENT=X=DFN); #6:PX(PROCEDURE); #15:DT(PROCEDURE DATE/TIME)
"RTN","MAGUXRF",121,0)
 N DFN,CDT,ER
"RTN","MAGUXRF",122,0)
 D SETUP5 Q:$D(ER)
"RTN","MAGUXRF",123,0)
 K ^MAG(2005,"APPXDT",DFN,PX,RDT,DA)
"RTN","MAGUXRF",124,0)
 K ^MAG(2005,"APDTPX",DFN,RDT,PX,DA)
"RTN","MAGUXRF",125,0)
 Q
"RTN","MAGUXRF",126,0)
 ;
"RTN","MAGUXRF",127,0)
SETDCM ; Set the cross reference for DICOM SERIES NUM
"RTN","MAGUXRF",128,0)
 ; and DICOM IMAGE NUM fields of the OBJECT GROUP Multiple
"RTN","MAGUXRF",129,0)
 N MAGDSN,MAGDIN
"RTN","MAGUXRF",130,0)
 I '$$BOTHNUM(.MAGDSN,.MAGDIN) Q
"RTN","MAGUXRF",131,0)
 S Z=+^MAG(2005,DA(1),1,DA,0)
"RTN","MAGUXRF",132,0)
 S ^MAG(2005,DA(1),1,"ADCM",MAGDSN,MAGDIN,Z,DA)=""
"RTN","MAGUXRF",133,0)
 Q
"RTN","MAGUXRF",134,0)
 ;
"RTN","MAGUXRF",135,0)
KILLDSN ; Kill the cross reference for DICOM SERIES NUM
"RTN","MAGUXRF",136,0)
 N MAGDSN,MAGDIN
"RTN","MAGUXRF",137,0)
 I '$$BOTHNUM(.MAGDSN,.MAGDIN) Q
"RTN","MAGUXRF",138,0)
 S Z=+^MAG(2005,DA(1),1,DA,0)
"RTN","MAGUXRF",139,0)
 K ^MAG(2005,DA(1),1,"ADCM",X,MAGDIN,Z,DA)
"RTN","MAGUXRF",140,0)
 Q
"RTN","MAGUXRF",141,0)
 ;
"RTN","MAGUXRF",142,0)
KILLDIN ; Kill the DICOM IMAGE NUM cross reference
"RTN","MAGUXRF",143,0)
 ; of the OBJECT GROUP Multiple
"RTN","MAGUXRF",144,0)
 N MAGDSN,MAGDIN
"RTN","MAGUXRF",145,0)
 I '$$BOTHNUM(.MAGDSN,.MAGDIN) Q
"RTN","MAGUXRF",146,0)
 S Z=+^MAG(2005,DA(1),1,DA,0)
"RTN","MAGUXRF",147,0)
 K ^MAG(2005,DA(1),1,"ADCM",MAGDSN,X,Z,DA)
"RTN","MAGUXRF",148,0)
 Q
"RTN","MAGUXRF",149,0)
 ;
"RTN","MAGUXRF",150,0)
BOTHNUM(MAGDSN,MAGDIN) ;
"RTN","MAGUXRF",151,0)
 S MAGDSN=$P($G(^MAG(2005,DA(1),1,DA,0)),U,2)
"RTN","MAGUXRF",152,0)
 S MAGDIN=$P($G(^MAG(2005,DA(1),1,DA,0)),U,3)
"RTN","MAGUXRF",153,0)
 ;GEK 4/4/00
"RTN","MAGUXRF",154,0)
 ; Changed to test for "", not to test I 'DINUM (0 would fail)
"RTN","MAGUXRF",155,0)
 I ((MAGDIN="")!(MAGDSN="")) Q 0
"RTN","MAGUXRF",156,0)
 Q 1
"RTN","MAGUXRF",157,0)
 ;
"RTN","MAGUXRF",158,0)
 ;*****
"RTN","MAGUXRF",159,0)
ACVN1KIL(X1) ;
"RTN","MAGUXRF",160,0)
 N APP,SEQ,SV
"RTN","MAGUXRF",161,0)
 S SV=+$G(X1(1))   Q:SV'>0   ; SERVER VERSION (.01)
"RTN","MAGUXRF",162,0)
 S SEQ=+$G(X1(2))  Q:SEQ'>0  ; SEQ# (.02)
"RTN","MAGUXRF",163,0)
 S APP=""
"RTN","MAGUXRF",164,0)
 F  S APP=$O(^MAG(2005.89,"ACVN",APP))  Q:APP=""  K ^(APP,SV,SEQ)
"RTN","MAGUXRF",165,0)
 Q
"RTN","MAGUXRF",166,0)
 ;
"RTN","MAGUXRF",167,0)
 ;*****
"RTN","MAGUXRF",168,0)
ACVN1SET(X2,IEN) ;
"RTN","MAGUXRF",169,0)
 Q:($G(IEN)'>0)!($G(X2(1))'>0)!($G(X2(2))'>0)
"RTN","MAGUXRF",170,0)
 N DA,DIK
"RTN","MAGUXRF",171,0)
 S DIK=$$ROOT^DILFD(2005.891,","_IEN_",")
"RTN","MAGUXRF",172,0)
 S DIK(1)=".02^ACVN",DA(1)=IEN  D ENALL^DIK
"RTN","MAGUXRF",173,0)
 Q
"RTN","MAGUXRF",174,0)
 ;
"RTN","MAGUXRF",175,0)
 ;***** SAVES OLD FIELD VALUES TO THE AUDIT MULTIPLE
"RTN","MAGUXRF",176,0)
 ;
"RTN","MAGUXRF",177,0)
 ; FILE          Number of the file that audited fields belong to.
"RTN","MAGUXRF",178,0)
 ;
"RTN","MAGUXRF",179,0)
 ; IENS          Standard IENS of the record that has been updated.
"RTN","MAGUXRF",180,0)
 ;
"RTN","MAGUXRF",181,0)
 ; FLDLST        Numbers of audited fields separated by semicolons.
"RTN","MAGUXRF",182,0)
 ;               Positions of field numbers should match subscripts
"RTN","MAGUXRF",183,0)
 ;               (order numbers) in the X1 and X2 arrays.
"RTN","MAGUXRF",184,0)
 ;
"RTN","MAGUXRF",185,0)
 ; SUBFILE       Subfile number of the audit multiple of the file
"RTN","MAGUXRF",186,0)
 ;               defined by the FILE parameter (e.g. 99 for the
"RTN","MAGUXRF",187,0)
 ;               IMAGE file (#2005)).
"RTN","MAGUXRF",188,0)
 ;
"RTN","MAGUXRF",189,0)
 ; .X1           Reference to a local array that stores old values
"RTN","MAGUXRF",190,0)
 ;               of audited fields. Subscripts of this array are
"RTN","MAGUXRF",191,0)
 ;               order numbers of fields included in the audit
"RTN","MAGUXRF",192,0)
 ;               index/action definition.
"RTN","MAGUXRF",193,0)
 ;
"RTN","MAGUXRF",194,0)
 ; .X2           Reference to a local array that stores new values
"RTN","MAGUXRF",195,0)
 ;               of audited fields. Subscripts of this array are
"RTN","MAGUXRF",196,0)
 ;               order numbers of fields included in the audit
"RTN","MAGUXRF",197,0)
 ;               index/action definition.
"RTN","MAGUXRF",198,0)
 ;
"RTN","MAGUXRF",199,0)
 ; Input Variables
"RTN","MAGUXRF",200,0)
 ; ===============
"RTN","MAGUXRF",201,0)
 ;
"RTN","MAGUXRF",202,0)
 ; MAGNOFMAUDIT  If this variable is defined and not 0, then audit
"RTN","MAGUXRF",203,0)
 ;               is not performed. You can use this variable to
"RTN","MAGUXRF",204,0)
 ;               disable audit during creation of a record when a
"RTN","MAGUXRF",205,0)
 ;               basic record is created first and then its fields
"RTN","MAGUXRF",206,0)
 ;               are populated by separate FileMan call(s).
"RTN","MAGUXRF",207,0)
 ;
"RTN","MAGUXRF",208,0)
 ; Notes
"RTN","MAGUXRF",209,0)
 ; =====
"RTN","MAGUXRF",210,0)
 ;
"RTN","MAGUXRF",211,0)
 ; Definition of an index/action that performs the audit must always
"RTN","MAGUXRF",212,0)
 ; include the .01 field as the first item (order number = 1).
"RTN","MAGUXRF",213,0)
 ;
"RTN","MAGUXRF",214,0)
 ; If you do not want to track changes of the .01 field, leave the
"RTN","MAGUXRF",215,0)
 ; first piece of the FLDLST parameter empty.
"RTN","MAGUXRF",216,0)
 ;
"RTN","MAGUXRF",217,0)
 ; See the AUDIT40 index of the IMAGE file (#2005) for an example.
"RTN","MAGUXRF",218,0)
 ;
"RTN","MAGUXRF",219,0)
AUDIT(FILE,IENS,FLDLST,SUBFILE,X1,X2) ;
"RTN","MAGUXRF",220,0)
 ;--- Do not do anything if audit is disabled by an application
"RTN","MAGUXRF",221,0)
 ;--- (e.g. during creation and initial population of a record).
"RTN","MAGUXRF",222,0)
 Q:$G(MAGNOFMAUDIT)
"RTN","MAGUXRF",223,0)
 ;--- Do not do anything if the record is created or
"RTN","MAGUXRF",224,0)
 ;--- deleted (.01 field is empty or not defined)
"RTN","MAGUXRF",225,0)
 Q:($G(X1(1))="")!($G(X2(1))="")
"RTN","MAGUXRF",226,0)
 ;--- Initialize variables
"RTN","MAGUXRF",227,0)
 N AIENS,EXTVAL,FLD,I,INTVAL,MAGFDA,MAGMSG,NF,NOW
"RTN","MAGUXRF",228,0)
 S NOW=$$NOW^XLFDT
"RTN","MAGUXRF",229,0)
 ;===
"RTN","MAGUXRF",230,0)
 S NF=$L(FLDLST,";")
"RTN","MAGUXRF",231,0)
 F I=1:1:NF  S FLD=+$P(FLDLST,";",I)  D:FLD>0
"RTN","MAGUXRF",232,0)
 . S INTVAL=$G(X1(I))  Q:$G(X2(I))=INTVAL
"RTN","MAGUXRF",233,0)
 . ;--- Prepare data for the audit multiple
"RTN","MAGUXRF",234,0)
 . S AIENS="+"_I_","_IENS
"RTN","MAGUXRF",235,0)
 . S MAGFDA(SUBFILE,AIENS,.01)=NOW      ; DATE/TIME RECORDED
"RTN","MAGUXRF",236,0)
 . S MAGFDA(SUBFILE,AIENS,.02)=FLD      ; FIELD NUMBER
"RTN","MAGUXRF",237,0)
 . S MAGFDA(SUBFILE,AIENS,.03)=$G(DUZ)  ; USER
"RTN","MAGUXRF",238,0)
 . ;--- Do not create global nodes for empty values
"RTN","MAGUXRF",239,0)
 . Q:INTVAL=""
"RTN","MAGUXRF",240,0)
 . S MAGFDA(SUBFILE,AIENS,1)=INTVAL     ; OLD INTERNAL VALUE
"RTN","MAGUXRF",241,0)
 . ;--- The external value is stored only if it is
"RTN","MAGUXRF",242,0)
 . ;--- different from the internal one
"RTN","MAGUXRF",243,0)
 . S EXTVAL=$$EXTERNAL^DILFD(FILE,FLD,,INTVAL,"MAGMSG")
"RTN","MAGUXRF",244,0)
 . S:$G(DIERR) EXTVAL="<ERROR>"
"RTN","MAGUXRF",245,0)
 . S:EXTVAL'=INTVAL MAGFDA(SUBFILE,AIENS,2)=EXTVAL
"RTN","MAGUXRF",246,0)
 . Q
"RTN","MAGUXRF",247,0)
 ;===
"RTN","MAGUXRF",248,0)
 D:$D(MAGFDA)>1 UPDATE^DIE(,"MAGFDA",,"MAGMSG")
"RTN","MAGUXRF",249,0)
 Q
"RTN","MAGUXRF",250,0)
 ;
"RTN","MAGUXRF",251,0)
 ;***** POPULATES THE CAPTURE APPLICATION FIELD (8.1)
"RTN","MAGUXRF",252,0)
 ;
"RTN","MAGUXRF",253,0)
 ; FILE          Number of the file (2005 or 2005.1)
"RTN","MAGUXRF",254,0)
 ;
"RTN","MAGUXRF",255,0)
 ; IEN           Internal Entry Number of the image record
"RTN","MAGUXRF",256,0)
 ;
"RTN","MAGUXRF",257,0)
 ; .X1           Reference to a local array that stores old values
"RTN","MAGUXRF",258,0)
 ;               of the fields:
"RTN","MAGUXRF",259,0)
 ;
"RTN","MAGUXRF",260,0)
 ;                 X1(1)  TRACKING ID (#108)
"RTN","MAGUXRF",261,0)
 ;                 X1(2)  PACS UID (#60)
"RTN","MAGUXRF",262,0)
 ;                 X1(3)  RADIOLOGY REPORT (#61)
"RTN","MAGUXRF",263,0)
 ;                 X1(4)  PACS PROCEDURE (#62)
"RTN","MAGUXRF",264,0)
 ;                 X1(5)  OBJECT NAME (#.01)
"RTN","MAGUXRF",265,0)
 ;
"RTN","MAGUXRF",266,0)
 ; .X2           Reference to a local array that stores new values
"RTN","MAGUXRF",267,0)
 ;               of the fields (see above).
"RTN","MAGUXRF",268,0)
 ;
"RTN","MAGUXRF",269,0)
SETCAPP(FILE,IEN,X1,X2) ;
"RTN","MAGUXRF",270,0)
 ;--- Do not do anything if the record is being deleted
"RTN","MAGUXRF",271,0)
 ;--- (value of the OBJECT NAME field (#.01) is not defined)
"RTN","MAGUXRF",272,0)
 Q:$G(X2(5))=""
"RTN","MAGUXRF",273,0)
 ;--- Local variables
"RTN","MAGUXRF",274,0)
 N DIERR,MAGFDA,MAGMSG,TMP
"RTN","MAGUXRF",275,0)
 ;--- Calculate the value of the CAPTURE APPLICATION field (8.1)
"RTN","MAGUXRF",276,0)
 ;--- and quit if the field already has the same value.
"RTN","MAGUXRF",277,0)
 S TMP=$S($G(X2(1))'="":"I",$G(X2(2))'="":"D",$G(X2(3))'="":"D",$G(X2(4))'="":"D",1:"C")
"RTN","MAGUXRF",278,0)
 Q:TMP=$P($G(^MAG(FILE,IEN,2)),U,12)
"RTN","MAGUXRF",279,0)
 ;--- Store the value of the field
"RTN","MAGUXRF",280,0)
 S MAGFDA(FILE,IEN_",",8.1)=TMP
"RTN","MAGUXRF",281,0)
 D FILE^DIE(,"MAGFDA","MAGMSG")
"RTN","MAGUXRF",282,0)
 Q
"SEC","^DD",2005.88,2005.881,.01,8.5)

"SEC","^DD",2005.88,2005.881,.01,9)

"SEC","^DIC",2005.88,2005.88,0,"AUDIT")
@
"SEC","^DIC",2005.88,2005.88,0,"DD")
@
"SEC","^DIC",2005.88,2005.88,0,"DEL")
@
"SEC","^DIC",2005.88,2005.88,0,"LAYGO")
@
"SEC","^DIC",2005.88,2005.88,0,"WR")
@
"UP",2005,2005.04,-1)
2005^1
"UP",2005,2005.04,0)
2005.04
"UP",2005,2005.099,-1)
2005^99
"UP",2005,2005.099,0)
2005.099
"UP",2005.1,2005.199,-1)
2005.1^99
"UP",2005.1,2005.199,0)
2005.199
"VER")
8.0^22.0
"^DD",2005,2005,.01,0)
OBJECT NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>70!($L(X)<3)!'(X'?1P.E) X
"^DD",2005,2005,.01,1,0)
^.1
"^DD",2005,2005,.01,1,1,0)
2005^B
"^DD",2005,2005,.01,1,1,1)
S ^MAG(2005,"B",$E(X,1,60),DA)=""
"^DD",2005,2005,.01,1,1,2)
K ^MAG(2005,"B",$E(X,1,60),DA)
"^DD",2005,2005,.01,3)
Answer must be 3-70 characters in length.
"^DD",2005,2005,.01,21,0)
^.001^3^3^3001010^^^
"^DD",2005,2005,.01,21,1,0)
Each object has a natural language name; this usually consists of the
"^DD",2005,2005,.01,21,2,0)
patient name, social security number, and object description.  This field
"^DD",2005,2005,.01,21,3,0)
is automatically defined by the Imaging software.
"^DD",2005,2005,.01,"DT")
3090407
"^DD",2005,2005,4,0)
OBJECT GROUP^2005.04P^^1;0
"^DD",2005,2005,4,21,0)
^.001^16^16^3081219^^
"^DD",2005,2005,4,21,1,0)
The object group is a multiple field pointing back to the Image file
"^DD",2005,2005,4,21,2,0)
(2005).  Only objects with an object type of GROUP have the Object Group
"^DD",2005,2005,4,21,3,0)
field defined.  These objects can be thought of as the "parent" of a set
"^DD",2005,2005,4,21,4,0)
of images.  
"^DD",2005,2005,4,21,5,0)
 
"^DD",2005,2005,4,21,6,0)
Generally, instead of having their own abstract, objects of the GROUP type
"^DD",2005,2005,4,21,7,0)
use the abstract of the first entry in their object group multiple.  
"^DD",2005,2005,4,21,8,0)
Sometimes, text will be used in place of the GROUP abstract for speed.  
"^DD",2005,2005,4,21,9,0)
Methods for viewing a GROUP object generally allow viewing of all the
"^DD",2005,2005,4,21,10,0)
members of the group, either selectively or altogether.  A good example
"^DD",2005,2005,4,21,11,0)
would be a set of thirty CT scan images.  Using the Integrated View menu
"^DD",2005,2005,4,21,12,0)
option, the tiled display of image abstracts would contain only one
"^DD",2005,2005,4,21,13,0)
abstract for the group.  Selecting the group object for viewing provides
"^DD",2005,2005,4,21,14,0)
the user with a tiled display of the abstracts of the individual CT scan
"^DD",2005,2005,4,21,15,0)
images.  The user can then identify individual images for full resolution
"^DD",2005,2005,4,21,16,0)
viewing.
"^DD",2005,2005,4,23,0)
^^4^4^3081219^
"^DD",2005,2005,4,23,1,0)
In the future, when the IMAGE AUDIT file (#2005.1) is eliminated and
"^DD",2005,2005,4,23,2,0)
deleted image entries are merged into the IMAGE file (#2005), this
"^DD",2005,2005,4,23,3,0)
multiple must reference only non-deleted images (as it currently does).
"^DD",2005,2005,4,23,4,0)
The "AGPD" index will be used to find images deleted from the group.
"^DD",2005,2005,8.1,0)
CAPTURE APPLICATION^S^C:Capture Workstation;D:DICOM Gateway;I:Import API;^2;12^Q
"^DD",2005,2005,8.1,1,0)
^.1^^0
"^DD",2005,2005,8.1,3)
Select code of the application that captured the image.
"^DD",2005,2005,8.1,8.5)
@
"^DD",2005,2005,8.1,9)
^
"^DD",2005,2005,8.1,20,0)
^.3LA^1^1
"^DD",2005,2005,8.1,20,1,0)
MAG*3*93
"^DD",2005,2005,8.1,21,0)
^^6^6^3090407^
"^DD",2005,2005,8.1,21,1,0)
Code stored in this field indicates the 
"^DD",2005,2005,8.1,21,2,0)
application that captured this image and created 
"^DD",2005,2005,8.1,21,3,0)
the image entry.
"^DD",2005,2005,8.1,21,4,0)
 
"^DD",2005,2005,8.1,21,5,0)
This field cannot be edited; it is auto-populated
"^DD",2005,2005,8.1,21,6,0)
by the "ACA" action index.
"^DD",2005,2005,8.1,23,0)
^.001^1^1^3090407^^^^
"^DD",2005,2005,8.1,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,8.1,"DT")
3090407
"^DD",2005,2005,14,0)
GROUP PARENT^P2005'^MAG(2005,^0;10^Q
"^DD",2005,2005,14,3)
If this object is a member of a group, enter the parent.
"^DD",2005,2005,14,21,0)
^^5^5^2970721^^^^
"^DD",2005,2005,14,21,1,0)
This field is used for images that are part of a group, for example a CT
"^DD",2005,2005,14,21,2,0)
exam might contain 30 images.  This field contains a pointer back to the
"^DD",2005,2005,14,21,3,0)
Image file (2005), to the object whose type is "GROUP" that points to this
"^DD",2005,2005,14,21,4,0)
object as a member of its group.  A pointer to this object will be found
"^DD",2005,2005,14,21,5,0)
in the Object Group multiple of the parent GROUP object.
"^DD",2005,2005,14,"DT")
3081215
"^DD",2005,2005,99,0)
AUDIT^2005.099D^^99;0
"^DD",2005,2005,99,9)
@
"^DD",2005,2005,99,20,0)
^.3LA^1^1
"^DD",2005,2005,99,20,1,0)
MAG*3*93
"^DD",2005,2005,99,21,0)
^.001^5^5^3081217^^
"^DD",2005,2005,99,21,1,0)
This multiple stores previous values of the 
"^DD",2005,2005,99,21,2,0)
record fields (audit trail). 
"^DD",2005,2005,99,21,3,0)
 
"^DD",2005,2005,99,21,4,0)
See the "AUDIT2", "AUDIT40", and "AUDIT100"
"^DD",2005,2005,99,21,5,0)
cross-references for more details.
"^DD",2005,2005,99,23,0)
^.001^1^1^3081217^^^
"^DD",2005,2005,99,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,99,"DT")
3080321
"^DD",2005,2005,112,0)
CONTROLLED IMAGE^S^0:NO;1:YES;^100;7^Q
"^DD",2005,2005,112,3)
Select YES, if the image must not be shown until the user explicitly selects it.
"^DD",2005,2005,112,20,0)
^.3LA^1^1
"^DD",2005,2005,112,20,1,0)
MAG*3*93
"^DD",2005,2005,112,21,0)
^.001^13^13^3081217^^
"^DD",2005,2005,112,21,1,0)
In the Clinical Display application, the abstract 
"^DD",2005,2005,112,21,2,0)
of a controlled image is not shown in the Abstracts
"^DD",2005,2005,112,21,3,0)
or Group Abstracts window. A "canned" bitmap is
"^DD",2005,2005,112,21,4,0)
shown in place of the image. It has a text that
"^DD",2005,2005,112,21,5,0)
states that the image is controlled.
"^DD",2005,2005,112,21,6,0)
 
"^DD",2005,2005,112,21,7,0)
Controlled images are not displayed until the user
"^DD",2005,2005,112,21,8,0)
explicitly selects the image to be viewed.
"^DD",2005,2005,112,21,9,0)
 
"^DD",2005,2005,112,21,10,0)
If the value of this field is 'NO' or the field is
"^DD",2005,2005,112,21,11,0)
empty, then the image is handled "as usual": the
"^DD",2005,2005,112,21,12,0)
actual abstract of the image is shown in the
"^DD",2005,2005,112,21,13,0)
Abstracts and Group Abstracts windows.
"^DD",2005,2005,112,23,0)
^.001^1^1^3081217^^^
"^DD",2005,2005,112,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,112,"DT")
3080718
"^DD",2005,2005,112.1,0)
CONTROLLED DATE^CD^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,D0_",",112),"^",2),1:"")
"^DD",2005,2005,112.1,9)
^
"^DD",2005,2005,112.1,9.01)

"^DD",2005,2005,112.1,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,DO_",",112),"^",2),1:"")
"^DD",2005,2005,112.1,20,0)
^.3LA^1^1
"^DD",2005,2005,112.1,20,1,0)
MAG*3*93
"^DD",2005,2005,112.1,21,0)
^.001^3^3^3081217^^
"^DD",2005,2005,112.1,21,1,0)
This field indicates date/time of the most recent
"^DD",2005,2005,112.1,21,2,0)
change of the image controlled status (see the
"^DD",2005,2005,112.1,21,3,0)
CONTROLLED IMAGE field (112)).
"^DD",2005,2005,112.1,23,0)
^.001^3^3^3081217^^^^
"^DD",2005,2005,112.1,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005,2005,112.1,23,2,0)
 
"^DD",2005,2005,112.1,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,112.1,"DT")
3080717
"^DD",2005,2005,112.2,0)
CONTROLLED BY^Cp200^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,D0_",",112),"^",3),1:"")
"^DD",2005,2005,112.2,9)
^
"^DD",2005,2005,112.2,9.01)

"^DD",2005,2005,112.2,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,D0_",",112),"^",3),1:"")
"^DD",2005,2005,112.2,20,0)
^.3LA^1^1
"^DD",2005,2005,112.2,20,1,0)
MAG*3*93
"^DD",2005,2005,112.2,21,0)
^.001^3^3^3081217^^
"^DD",2005,2005,112.2,21,1,0)
This field references the user who made the most
"^DD",2005,2005,112.2,21,2,0)
recent change of the image controlled status (see
"^DD",2005,2005,112.2,21,3,0)
the CONTROLLED IMAGE field (112)).
"^DD",2005,2005,112.2,23,0)
^.001^3^3^3081217^^^^
"^DD",2005,2005,112.2,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005,2005,112.2,23,2,0)
 
"^DD",2005,2005,112.2,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,112.2,"DT")
3080717
"^DD",2005,2005,113,0)
STATUS^S^1:Viewable;2:QA Reviewed;10:In Progress;11:Needs Review;12:Deleted;^100;8^Q
"^DD",2005,2005,113,3)
Select the current status of the image.
"^DD",2005,2005,113,20,0)
^.3LA^1^1
"^DD",2005,2005,113,20,1,0)
MAG*3*93
"^DD",2005,2005,113,21,0)
^.001^31^31^3081217^^
"^DD",2005,2005,113,21,1,0)
Viewable  
"^DD",2005,2005,113,21,2,0)
 
"^DD",2005,2005,113,21,3,0)
  By default, all images are viewable, and images
"^DD",2005,2005,113,21,4,0)
  with no status are considered viewable.
"^DD",2005,2005,113,21,5,0)
 
"^DD",2005,2005,113,21,6,0)
Verified
"^DD",2005,2005,113,21,7,0)
 
"^DD",2005,2005,113,21,8,0)
  A user has viewed the image and verified that
"^DD",2005,2005,113,21,9,0)
  the patient identifier and values of index 
"^DD",2005,2005,113,21,10,0)
  fields are correct for this image.
"^DD",2005,2005,113,21,11,0)
 
"^DD",2005,2005,113,21,12,0)
 
"^DD",2005,2005,113,21,13,0)
In Progress
"^DD",2005,2005,113,21,14,0)
 
"^DD",2005,2005,113,21,15,0)
  When capturing image groups, this status will
"^DD",2005,2005,113,21,16,0)
  indicate that the images are being added to the
"^DD",2005,2005,113,21,17,0)
  group of images. When the process is complete,
"^DD",2005,2005,113,21,18,0)
  the status will change to Viewable. 
"^DD",2005,2005,113,21,19,0)
 
"^DD",2005,2005,113,21,20,0)
Needs Review
"^DD",2005,2005,113,21,21,0)
  
"^DD",2005,2005,113,21,22,0)
  Indicates that value(s) of the index fields or 
"^DD",2005,2005,113,21,23,0)
  patient identifier have been found to be
"^DD",2005,2005,113,21,24,0)
  incorrect. VistA Imaging Display application
"^DD",2005,2005,113,21,25,0)
  will block images with this status from being
"^DD",2005,2005,113,21,26,0)
  viewed. The Image Edit utility can be used to
"^DD",2005,2005,113,21,27,0)
  modify the incorrect values of the index fields.
"^DD",2005,2005,113,21,28,0)
 
"^DD",2005,2005,113,21,29,0)
Deleted
"^DD",2005,2005,113,21,30,0)
 
"^DD",2005,2005,113,21,31,0)
  Marks the image as deleted.
"^DD",2005,2005,113,23,0)
^.001^3^3^3081217^^^
"^DD",2005,2005,113,23,1,0)
Use only positive canonic numbers for internal values.
"^DD",2005,2005,113,23,2,0)
 
"^DD",2005,2005,113,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,113,"DT")
3081215
"^DD",2005,2005,113.1,0)
STATUS DATE^CD^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,D0_",",113),"^",2),1:"")
"^DD",2005,2005,113.1,9)
^
"^DD",2005,2005,113.1,9.01)

"^DD",2005,2005,113.1,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,D0_",",113),"^",2),1:"")
"^DD",2005,2005,113.1,20,0)
^.3LA^1^1
"^DD",2005,2005,113.1,20,1,0)
MAG*3*93
"^DD",2005,2005,113.1,21,0)
^.001^3^3^3081217^^
"^DD",2005,2005,113.1,21,1,0)
This field indicates date/time of the most recent
"^DD",2005,2005,113.1,21,2,0)
change of the image status (see the STATUS field
"^DD",2005,2005,113.1,21,3,0)
(113)).
"^DD",2005,2005,113.1,23,0)
^.001^3^3^3081217^^
"^DD",2005,2005,113.1,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005,2005,113.1,23,2,0)
                     
"^DD",2005,2005,113.1,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,113.1,"DT")
3080718
"^DD",2005,2005,113.2,0)
STATUS BY^Cp200^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,D0_",",113),"^",3),1:"")
"^DD",2005,2005,113.2,9)
^
"^DD",2005,2005,113.2,9.01)

"^DD",2005,2005,113.2,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005,D0_",",113),"^",3),1:"")
"^DD",2005,2005,113.2,20,0)
^.3LA^1^1
"^DD",2005,2005,113.2,20,1,0)
MAG*3*93
"^DD",2005,2005,113.2,21,0)
^.001^3^3^3081217^^
"^DD",2005,2005,113.2,21,1,0)
This field references the user who made the most 
"^DD",2005,2005,113.2,21,2,0)
recent change of the image status (see the STATUS 
"^DD",2005,2005,113.2,21,3,0)
field (113)).
"^DD",2005,2005,113.2,23,0)
^.001^3^3^3081217^^
"^DD",2005,2005,113.2,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005,2005,113.2,23,2,0)
 
"^DD",2005,2005,113.2,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,113.2,"DT")
3080718
"^DD",2005,2005,113.3,0)
STATUS REASON^*P2005.88'^MAG(2005.88,^100;9^S DIC("S")="I $P($G(^(0)),""^"",2)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2005,2005,113.3,1,0)
^.1
"^DD",2005,2005,113.3,1,1,0)
2005^ASTRSN^MUMPS
"^DD",2005,2005,113.3,1,1,1)
S ^MAG(2005.88,"AREF",X,2005,DA_",",113.3)=""
"^DD",2005,2005,113.3,1,1,2)
K ^MAG(2005.88,"AREF",X,2005,DA_",",113.3)
"^DD",2005,2005,113.3,1,1,"%D",0)
^.101^27^27^3081006^^
"^DD",2005,2005,113.3,1,1,"%D",1,0)
The logic of the ASTRSN cross-reference maintains
"^DD",2005,2005,113.3,1,1,"%D",2,0)
a list of references from the STATUS REASON field 
"^DD",2005,2005,113.3,1,1,"%D",3,0)
(113.3) of the IMAGE file (#2005) to the MAG
"^DD",2005,2005,113.3,1,1,"%D",4,0)
REASON file (#2005.88). 
"^DD",2005,2005,113.3,1,1,"%D",5,0)
 
"^DD",2005,2005,113.3,1,1,"%D",6,0)
This list is used by the logic of the "DELETE"
"^DD",2005,2005,113.3,1,1,"%D",7,0)
node of the REASON field (.01) of the MAG REASON
"^DD",2005,2005,113.3,1,1,"%D",8,0)
file (#2005.88) to prevent deletion of reasons
"^DD",2005,2005,113.3,1,1,"%D",9,0)
that are referenced by records of other files.
"^DD",2005,2005,113.3,1,1,"%D",10,0)
 
"^DD",2005,2005,113.3,1,1,"%D",11,0)
The list is stored under the "AREF" subscript in
"^DD",2005,2005,113.3,1,1,"%D",12,0)
the MAG REASON file (#2005.88) and has the
"^DD",2005,2005,113.3,1,1,"%D",13,0)
following structure:
"^DD",2005,2005,113.3,1,1,"%D",14,0)
 
"^DD",2005,2005,113.3,1,1,"%D",15,0)
 ^MAG(2005.88,"AREF",<Reason>,2005,<IENS>,113.3) = ""
"^DD",2005,2005,113.3,1,1,"%D",16,0)
 
"^DD",2005,2005,113.3,1,1,"%D",17,0)
The <Reason> is the IEN of the reason that is
"^DD",2005,2005,113.3,1,1,"%D",18,0)
pointed by the STATUS REASON field (113.3).
"^DD",2005,2005,113.3,1,1,"%D",19,0)
 
"^DD",2005,2005,113.3,1,1,"%D",20,0)
The 2005 is the number of the file from where the
"^DD",2005,2005,113.3,1,1,"%D",21,0)
reason is referenced (IMAGE).
"^DD",2005,2005,113.3,1,1,"%D",22,0)
 
"^DD",2005,2005,113.3,1,1,"%D",23,0)
The <IENS> is the IENS of the record of the IMAGE 
"^DD",2005,2005,113.3,1,1,"%D",24,0)
file (#2005) that references the reason.
"^DD",2005,2005,113.3,1,1,"%D",25,0)
 
"^DD",2005,2005,113.3,1,1,"%D",26,0)
The 113.3 is the number of the field that points
"^DD",2005,2005,113.3,1,1,"%D",27,0)
to the reason (STATUS REASON).
"^DD",2005,2005,113.3,1,1,"DT")
3081006
"^DD",2005,2005,113.3,3)
Select the reason for the image status change.
"^DD",2005,2005,113.3,12)
Only reasons applicable to image status changes can be selected.
"^DD",2005,2005,113.3,12.1)
S DIC("S")="I $P($G(^(0)),""^"",2)[""S"""
"^DD",2005,2005,113.3,20,0)
^.3LA^1^1
"^DD",2005,2005,113.3,20,1,0)
MAG*3*93
"^DD",2005,2005,113.3,21,0)
^.001^2^2^3081217^^^^
"^DD",2005,2005,113.3,21,1,0)
This field indicates the reason for the latest
"^DD",2005,2005,113.3,21,2,0)
image status change (see the STATUS field (113)).
"^DD",2005,2005,113.3,23,0)
^.001^1^1^3081217^^^^
"^DD",2005,2005,113.3,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,113.3,"DT")
3081006
"^DD",2005,2005,114,0)
NUMBER OF PAGES^NJ9,0^^100;10^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2005,2005,114,3)
Enter number of pages in a multi-page image (between 1 and 999999999).
"^DD",2005,2005,114,20,0)
^.3LA^1^1
"^DD",2005,2005,114,20,1,0)
MAG*3*93
"^DD",2005,2005,114,21,0)
^.001^2^2^3081217^^^
"^DD",2005,2005,114,21,1,0)
This field stores number of pages in a multi-page
"^DD",2005,2005,114,21,2,0)
document (e.g. multi-page TIFF image).
"^DD",2005,2005,114,23,0)
^.001^1^1^3081217^^^^
"^DD",2005,2005,114,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005,114,"DT")
3081015
"^DD",2005,2005.04,0)
OBJECT GROUP SUB-FIELD^^2^3
"^DD",2005,2005.04,0,"NM","OBJECT GROUP")

"^DD",2005,2005.04,.01,0)
OBJECT GROUP^M*P2005'^MAG(2005,^0;1^S DIC("S")="I $P($G(^(100)),""^"",8)'=12" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2005,2005.04,.01,1,0)
^.1^^0
"^DD",2005,2005.04,.01,3)
Select the member of this image group.
"^DD",2005,2005.04,.01,12)
Only non-deleted images can be selected.
"^DD",2005,2005.04,.01,12.1)
S DIC("S")="I $P($G(^(100)),""^"",8)'=12"
"^DD",2005,2005.04,.01,21,0)
^^3^3^3081219^
"^DD",2005,2005.04,.01,21,1,0)
This field points to an entry of the IMAGE file 
"^DD",2005,2005.04,.01,21,2,0)
(#2005) that represents an existing (non-deleted)
"^DD",2005,2005.04,.01,21,3,0)
member of this image group.
"^DD",2005,2005.04,.01,23,0)
^.001^4^4^3081219^^^
"^DD",2005,2005.04,.01,23,1,0)
In the future, when the IMAGE AUDIT file (#2005.1) is eliminated and
"^DD",2005,2005.04,.01,23,2,0)
deleted image entries are merged into the IMAGE file (#2005), this
"^DD",2005,2005.04,.01,23,3,0)
field must reference only non-deleted images (as it currently does).
"^DD",2005,2005.04,.01,23,4,0)
The "AGPD" index will be used to find images deleted from the group.
"^DD",2005,2005.04,.01,"DT")
3081219
"^DD",2005,2005.099,0)
AUDIT SUB-FIELD^^2^5
"^DD",2005,2005.099,0,"DT")
3080429
"^DD",2005,2005.099,0,"IX","B",2005.099,.01)

"^DD",2005,2005.099,0,"NM","AUDIT")

"^DD",2005,2005.099,0,"UP")
2005
"^DD",2005,2005.099,.01,0)
DATE/TIME RECORDED^MD^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",2005,2005.099,.01,1,0)
^.1
"^DD",2005,2005.099,.01,1,1,0)
2005.099^B
"^DD",2005,2005.099,.01,1,1,1)
S ^MAG(2005,DA(1),99,"B",$E(X,1,30),DA)=""
"^DD",2005,2005.099,.01,1,1,2)
K ^MAG(2005,DA(1),99,"B",$E(X,1,30),DA)
"^DD",2005,2005.099,.01,1,1,3)
Do not delete!
"^DD",2005,2005.099,.01,3)
Enter date and time of the audited change.
"^DD",2005,2005.099,.01,8.5)
@
"^DD",2005,2005.099,.01,9)
@
"^DD",2005,2005.099,.01,20,0)
^.3LA^1^1
"^DD",2005,2005.099,.01,20,1,0)
MAG*3*93
"^DD",2005,2005.099,.01,21,0)
^.001^2^2^3081217^^^^
"^DD",2005,2005.099,.01,21,1,0)
When a value of an audited field changes, date and
"^DD",2005,2005.099,.01,21,2,0)
time of the change are stored in this field.
"^DD",2005,2005.099,.01,23,0)
^.001^1^1^3081217^^^^
"^DD",2005,2005.099,.01,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005.099,.01,"DT")
3080321
"^DD",2005,2005.099,.02,0)
FIELD NUMBER^RNJ20,9^^0;2^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."10N.N) X
"^DD",2005,2005.099,.02,3)
Enter the field number (between 0 and 9999999999, 9 Decimal Digits).
"^DD",2005,2005.099,.02,8.5)
@
"^DD",2005,2005.099,.02,9)
@
"^DD",2005,2005.099,.02,20,0)
^.3LA^1^1
"^DD",2005,2005.099,.02,20,1,0)
MAG*3*93
"^DD",2005,2005.099,.02,21,0)
^.001^2^2^3081217^^^^
"^DD",2005,2005.099,.02,21,1,0)
Value of this field identifies the audited field 
"^DD",2005,2005.099,.02,21,2,0)
that was updated.
"^DD",2005,2005.099,.02,23,0)
^.001^1^1^3081217^^
"^DD",2005,2005.099,.02,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005.099,.02,"DT")
3080321
"^DD",2005,2005.099,.03,0)
USER^P200'^VA(200,^0;3^Q
"^DD",2005,2005.099,.03,8.5)
@
"^DD",2005,2005.099,.03,9)
@
"^DD",2005,2005.099,.03,20,0)
^.3LA^1^1
"^DD",2005,2005.099,.03,20,1,0)
MAG*3*93
"^DD",2005,2005.099,.03,21,0)
^.001^2^2^3081217^^^
"^DD",2005,2005.099,.03,21,1,0)
This field identifies the user who modified value 
"^DD",2005,2005.099,.03,21,2,0)
of the audited field.
"^DD",2005,2005.099,.03,23,0)
^.001^1^1^3081217^^^^
"^DD",2005,2005.099,.03,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005.099,.03,"DT")
3080321
"^DD",2005,2005.099,1,0)
OLD INTERNAL VALUE^F^^1;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",2005,2005.099,1,3)
Enter the old field value in internal format (1-250 characters in length).
"^DD",2005,2005.099,1,8.5)
@
"^DD",2005,2005.099,1,9)
@
"^DD",2005,2005.099,1,20,0)
^.3LA^1^1
"^DD",2005,2005.099,1,20,1,0)
MAG*3*93
"^DD",2005,2005.099,1,21,0)
^.001^2^2^3081217^^
"^DD",2005,2005.099,1,21,1,0)
This field stores the previous value of the
"^DD",2005,2005.099,1,21,2,0)
audited field in internal format.
"^DD",2005,2005.099,1,23,0)
^.001^1^1^3081217^^
"^DD",2005,2005.099,1,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005,2005.099,1,"DT")
3080321
"^DD",2005,2005.099,2,0)
OLD EXTERNAL VALUE^F^^2;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",2005,2005.099,2,3)
Enter the old field value in external format (1-250 characters in length).
"^DD",2005,2005.099,2,8.5)
@
"^DD",2005,2005.099,2,9)
@
"^DD",2005,2005.099,2,20,0)
^.3LA^1^1
"^DD",2005,2005.099,2,20,1,0)
MAG*3*93
"^DD",2005,2005.099,2,21,0)
^.001^4^4^3081217^^
"^DD",2005,2005.099,2,21,1,0)
If the previous external value of the audited
"^DD",2005,2005.099,2,21,2,0)
field is different from the internal value stored
"^DD",2005,2005.099,2,21,3,0)
in the OLD INTERNAL VALUE field (1), then the
"^DD",2005,2005.099,2,21,4,0)
external value is stored in this field.
"^DD",2005,2005.099,2,23,0)
^.001^4^4^3081217^^
"^DD",2005,2005.099,2,23,1,0)
See the AUDIT^MAGUXRF and GETPFV^MAGUTL04 procedures
"^DD",2005,2005.099,2,23,2,0)
for more details.
"^DD",2005,2005.099,2,23,3,0)
 
"^DD",2005,2005.099,2,23,4,0)
Added by the patch MAG*3*93.
"^DD",2005,2005.099,2,"DT")
3080429
"^DD",2005.1,2005.1,.01,0)
OBJECT NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>70!($L(X)<3)!'(X'?1P.E) X
"^DD",2005.1,2005.1,.01,1,0)
^.1
"^DD",2005.1,2005.1,.01,1,1,0)
2005.1^B
"^DD",2005.1,2005.1,.01,1,1,1)
S ^MAG(2005.1,"B",$E(X,1,30),DA)=""
"^DD",2005.1,2005.1,.01,1,1,2)
K ^MAG(2005.1,"B",$E(X,1,30),DA)
"^DD",2005.1,2005.1,.01,1,2,0)
^^TRIGGER^2005.1^113
"^DD",2005.1,2005.1,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^MAG(2005.1,D0,100)):^(100),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X="Deleted" S DIH=$G(^MAG(2005.1,DIV(0),100)),DIV=X S $P(^(100),U,8)=DIV,DIH=2005.1,DIG=113 D ^DICR
"^DD",2005.1,2005.1,.01,1,2,2)
Q
"^DD",2005.1,2005.1,.01,1,2,3)
Do not delete!
"^DD",2005.1,2005.1,.01,1,2,"%D",0)
^^4^4^3090302^
"^DD",2005.1,2005.1,.01,1,2,"%D",1,0)
This trigger populates the STATUS field (113) when
"^DD",2005.1,2005.1,.01,1,2,"%D",2,0)
a new record is added to the file. Since this file
"^DD",2005.1,2005.1,.01,1,2,"%D",3,0)
can store only deleted images, the image status is
"^DD",2005.1,2005.1,.01,1,2,"%D",4,0)
always set to "Deleted".
"^DD",2005.1,2005.1,.01,1,2,"CREATE VALUE")
"Deleted"
"^DD",2005.1,2005.1,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2005.1,2005.1,.01,1,2,"DT")
3081201
"^DD",2005.1,2005.1,.01,1,2,"FIELD")
STATUS
"^DD",2005.1,2005.1,.01,3)
Answer must be 3-70 characters in length.
"^DD",2005.1,2005.1,.01,21,0)
^^3^3^2940523^
"^DD",2005.1,2005.1,.01,21,1,0)
Each object has a natural language name; this usually consists of the
"^DD",2005.1,2005.1,.01,21,2,0)
patient name, social security number, and object description.  This field
"^DD",2005.1,2005.1,.01,21,3,0)
is automatically defined by the Imaging software.
"^DD",2005.1,2005.1,.01,"DT")
3090407
"^DD",2005.1,2005.1,8.1,0)
CAPTURE APPLICATION^S^C:Capture Workstation;D:DICOM Gateway;I:Import API;^2;12^Q
"^DD",2005.1,2005.1,8.1,3)
Select code of the application that captured the image.
"^DD",2005.1,2005.1,8.1,8.5)
@
"^DD",2005.1,2005.1,8.1,9)
^
"^DD",2005.1,2005.1,8.1,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,8.1,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,8.1,21,0)
^^6^6^3090407^
"^DD",2005.1,2005.1,8.1,21,1,0)
Code stored in this field indicates the
"^DD",2005.1,2005.1,8.1,21,2,0)
application that captured this image and created
"^DD",2005.1,2005.1,8.1,21,3,0)
the image entry. 
"^DD",2005.1,2005.1,8.1,21,4,0)
 
"^DD",2005.1,2005.1,8.1,21,5,0)
This field cannot be edited; it is auto-populated
"^DD",2005.1,2005.1,8.1,21,6,0)
by the "ACA" action index.
"^DD",2005.1,2005.1,8.1,23,0)
^.001^1^1^3090407^^^^
"^DD",2005.1,2005.1,8.1,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,8.1,"DT")
3090407
"^DD",2005.1,2005.1,14,0)
GROUP PARENT^P2005.1'^MAG(2005.1,^0;10^Q
"^DD",2005.1,2005.1,14,1,0)
^.1
"^DD",2005.1,2005.1,14,1,1,0)
2005.1^AGP
"^DD",2005.1,2005.1,14,1,1,1)
S ^MAG(2005.1,"AGP",$E(X,1,30),DA)=""
"^DD",2005.1,2005.1,14,1,1,2)
K ^MAG(2005.1,"AGP",$E(X,1,30),DA)
"^DD",2005.1,2005.1,14,1,1,3)
Do not delete!
"^DD",2005.1,2005.1,14,1,1,"%D",0)
^^1^1^3080825^
"^DD",2005.1,2005.1,14,1,1,"%D",1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,14,1,1,"DT")
3080825
"^DD",2005.1,2005.1,14,3)
If this object is a member of a group, enter the parent.
"^DD",2005.1,2005.1,14,21,0)
^^5^5^2940523^
"^DD",2005.1,2005.1,14,21,1,0)
This field is used for images that are part of a group, for example a CT
"^DD",2005.1,2005.1,14,21,2,0)
exam might contain 30 images.  This field contains a pointer back to the
"^DD",2005.1,2005.1,14,21,3,0)
image file (2005.1), to the object whose type is "GROUP" that points to this
"^DD",2005.1,2005.1,14,21,4,0)
object as a member of its group.  A pointer to this object will be found
"^DD",2005.1,2005.1,14,21,5,0)
in the Object Group multiple of the parent GROUP object.
"^DD",2005.1,2005.1,14,"DT")
3080825
"^DD",2005.1,2005.1,99,0)
AUDIT^2005.199D^^99;0
"^DD",2005.1,2005.1,99,9)
@
"^DD",2005.1,2005.1,99,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,99,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,99,21,0)
^.001^5^5^3081217^^
"^DD",2005.1,2005.1,99,21,1,0)
This multiple stores previous values of the record
"^DD",2005.1,2005.1,99,21,2,0)
fields (audit trail).
"^DD",2005.1,2005.1,99,21,3,0)
 
"^DD",2005.1,2005.1,99,21,4,0)
See the "AUDIT2", "AUDIT40", and "AUDIT100"
"^DD",2005.1,2005.1,99,21,5,0)
cross-references for more details.
"^DD",2005.1,2005.1,99,23,0)
^.001^1^1^3081217^^^
"^DD",2005.1,2005.1,99,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,112,0)
CONTROLLED IMAGE^S^0:NO;1:YES;^100;7^Q
"^DD",2005.1,2005.1,112,3)
Select YES, if the image must not be shown until the user explicitly selects it.
"^DD",2005.1,2005.1,112,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,112,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,112,21,0)
^.001^13^13^3081217^^
"^DD",2005.1,2005.1,112,21,1,0)
In the Clinical Display application, the abstract
"^DD",2005.1,2005.1,112,21,2,0)
of a controlled image is not shown in the Abstracts
"^DD",2005.1,2005.1,112,21,3,0)
or Group Abstracts window. A "canned" bitmap is
"^DD",2005.1,2005.1,112,21,4,0)
shown in place of the image. It has a text that
"^DD",2005.1,2005.1,112,21,5,0)
states that the image is controlled.
"^DD",2005.1,2005.1,112,21,6,0)
 
"^DD",2005.1,2005.1,112,21,7,0)
controlled images are not displayed until the user
"^DD",2005.1,2005.1,112,21,8,0)
explicitly selects the image to be viewed.
"^DD",2005.1,2005.1,112,21,9,0)
 
"^DD",2005.1,2005.1,112,21,10,0)
If the value of this field is 'NO' or the field is
"^DD",2005.1,2005.1,112,21,11,0)
empty, then the image is handled "as usual": the
"^DD",2005.1,2005.1,112,21,12,0)
actual abstract of the image is shown in the
"^DD",2005.1,2005.1,112,21,13,0)
Abstracts and Group Abstracts windows.
"^DD",2005.1,2005.1,112,23,0)
^.001^1^1^3081217^^^^
"^DD",2005.1,2005.1,112,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,112,"DT")
3080718
"^DD",2005.1,2005.1,112.1,0)
CONTROLLED DATE^CD^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",112),"^",2),1:"")
"^DD",2005.1,2005.1,112.1,9)
^
"^DD",2005.1,2005.1,112.1,9.01)

"^DD",2005.1,2005.1,112.1,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",112),"^",2),1:"")
"^DD",2005.1,2005.1,112.1,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,112.1,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,112.1,21,0)
^.001^3^3^3081217^^
"^DD",2005.1,2005.1,112.1,21,1,0)
This field indicates date/time of the most recent
"^DD",2005.1,2005.1,112.1,21,2,0)
change of the image controlled status (see the
"^DD",2005.1,2005.1,112.1,21,3,0)
CONTROLLED IMAGE field (112)).
"^DD",2005.1,2005.1,112.1,23,0)
^.001^3^3^3081217^^^^
"^DD",2005.1,2005.1,112.1,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005.1,2005.1,112.1,23,2,0)
 
"^DD",2005.1,2005.1,112.1,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,112.1,"DT")
3080717
"^DD",2005.1,2005.1,112.2,0)
CONTROLLED BY^Cp200^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",112),"^",3),1:"")
"^DD",2005.1,2005.1,112.2,9)
^
"^DD",2005.1,2005.1,112.2,9.01)

"^DD",2005.1,2005.1,112.2,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",112),"^",3),1:"")
"^DD",2005.1,2005.1,112.2,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,112.2,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,112.2,21,0)
^.001^3^3^3081217^^
"^DD",2005.1,2005.1,112.2,21,1,0)
This field references the user who made the most
"^DD",2005.1,2005.1,112.2,21,2,0)
recent change of the image controlled status (see
"^DD",2005.1,2005.1,112.2,21,3,0)
the CONTROLLED IMAGE field (112)).
"^DD",2005.1,2005.1,112.2,23,0)
^.001^3^3^3081217^^^
"^DD",2005.1,2005.1,112.2,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005.1,2005.1,112.2,23,2,0)
 
"^DD",2005.1,2005.1,112.2,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,112.2,"DT")
3080717
"^DD",2005.1,2005.1,113,0)
STATUS^*S^1:Viewable;2:QA Reviewed;10:In Progress;11:Needs Review;12:Deleted;^100;8^Q
"^DD",2005.1,2005.1,113,3)
Select the current status of the image.
"^DD",2005.1,2005.1,113,5,1,0)
2005.1^.01^2
"^DD",2005.1,2005.1,113,9)
^
"^DD",2005.1,2005.1,113,12)
Only '12:Deleted' value is allowed.
"^DD",2005.1,2005.1,113,12.1)
S DIC("S")="I Y=12"
"^DD",2005.1,2005.1,113,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,113,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,113,21,0)
^.001^2^2^3081217^^^^
"^DD",2005.1,2005.1,113,21,1,0)
Internal value of this field is 12 for all entries
"^DD",2005.1,2005.1,113,21,2,0)
of the IMAGE AUDIT file (#2005). 
"^DD",2005.1,2005.1,113,23,0)
^^10^10^3090302^
"^DD",2005.1,2005.1,113,23,1,0)
Technically, neither all set codes other than 
"^DD",2005.1,2005.1,113,23,2,0)
'12:Deleted' nor the screening logic are needed because
"^DD",2005.1,2005.1,113,23,3,0)
a trigger cross-reference associated with the OBJECT
"^DD",2005.1,2005.1,113,23,4,0)
NAME field (.01) automatically populates the STATUS 
"^DD",2005.1,2005.1,113,23,5,0)
field (113) and the latter is not editable.
"^DD",2005.1,2005.1,113,23,6,0)
 
"^DD",2005.1,2005.1,113,23,7,0)
Therefore, the codes and the logic are here for 
"^DD",2005.1,2005.1,113,23,8,0)
additional safety and documentation purposes only.
"^DD",2005.1,2005.1,113,23,9,0)
 
"^DD",2005.1,2005.1,113,23,10,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,113,"DT")
3081203
"^DD",2005.1,2005.1,113.1,0)
STATUS DATE^CD^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",113),"^",2),1:"")
"^DD",2005.1,2005.1,113.1,9)
^
"^DD",2005.1,2005.1,113.1,9.01)

"^DD",2005.1,2005.1,113.1,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",113),"^",2),1:"")
"^DD",2005.1,2005.1,113.1,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,113.1,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,113.1,21,0)
^.001^3^3^3081217^^
"^DD",2005.1,2005.1,113.1,21,1,0)
This field indicates date/time of the most recent
"^DD",2005.1,2005.1,113.1,21,2,0)
change of the image status (see the STATUS field
"^DD",2005.1,2005.1,113.1,21,3,0)
(113)).
"^DD",2005.1,2005.1,113.1,23,0)
^.001^3^3^3081217^^
"^DD",2005.1,2005.1,113.1,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005.1,2005.1,113.1,23,2,0)
 
"^DD",2005.1,2005.1,113.1,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,113.1,"DT")
3080718
"^DD",2005.1,2005.1,113.2,0)
STATUS BY^Cp200^^ ; ^S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",113),"^",3),1:"")
"^DD",2005.1,2005.1,113.2,9)
^
"^DD",2005.1,2005.1,113.2,9.01)

"^DD",2005.1,2005.1,113.2,9.1)
S X=$S($G(D0)>0:$P($$LASTAUDT^MAGUTL04(2005.1,D0_",",113),"^",3),1:"")
"^DD",2005.1,2005.1,113.2,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,113.2,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,113.2,21,0)
^.001^3^3^3081217^^^
"^DD",2005.1,2005.1,113.2,21,1,0)
This field references the user who made the most 
"^DD",2005.1,2005.1,113.2,21,2,0)
recent change of the image status (see the STATUS 
"^DD",2005.1,2005.1,113.2,21,3,0)
field (113)).
"^DD",2005.1,2005.1,113.2,23,0)
^.001^3^3^3081217^^^
"^DD",2005.1,2005.1,113.2,23,1,0)
See the $$LASTAUDT^MAGUTL04 function for more details.
"^DD",2005.1,2005.1,113.2,23,2,0)
 
"^DD",2005.1,2005.1,113.2,23,3,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,113.2,"DT")
3080718
"^DD",2005.1,2005.1,113.3,0)
STATUS REASON^*P2005.88'^MAG(2005.88,^100;9^S DIC("S")="I $P($G(^(0)),""^"",2)[""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2005.1,2005.1,113.3,1,0)
^.1
"^DD",2005.1,2005.1,113.3,1,1,0)
2005.1^ASTRSN^MUMPS
"^DD",2005.1,2005.1,113.3,1,1,1)
S ^MAG(2005.88,"AREF",X,2005,DA_",",113.3)=""
"^DD",2005.1,2005.1,113.3,1,1,2)
K ^MAG(2005.88,"AREF",X,2005,DA_",",113.3)
"^DD",2005.1,2005.1,113.3,1,1,"%D",0)
^.101^30^30^3081006^^
"^DD",2005.1,2005.1,113.3,1,1,"%D",1,0)
The logic of the ASTRSN cross-reference maintains
"^DD",2005.1,2005.1,113.3,1,1,"%D",2,0)
a list of references from the STATUS REASON field
"^DD",2005.1,2005.1,113.3,1,1,"%D",3,0)
(113.3) of the IMAGE AUDIT file (#2005.1) to the
"^DD",2005.1,2005.1,113.3,1,1,"%D",4,0)
MAG REASON file (#2005.88).
"^DD",2005.1,2005.1,113.3,1,1,"%D",5,0)
 
"^DD",2005.1,2005.1,113.3,1,1,"%D",6,0)
This list is used by the logic of the "DELETE"
"^DD",2005.1,2005.1,113.3,1,1,"%D",7,0)
node of the REASON field (.01) of the MAG REASON
"^DD",2005.1,2005.1,113.3,1,1,"%D",8,0)
file (#2005.88) to prevent deletion of reasons
"^DD",2005.1,2005.1,113.3,1,1,"%D",9,0)
that are referenced by records of other files.
"^DD",2005.1,2005.1,113.3,1,1,"%D",10,0)
 
"^DD",2005.1,2005.1,113.3,1,1,"%D",11,0)
The list is stored under the "AREF" subscript in
"^DD",2005.1,2005.1,113.3,1,1,"%D",12,0)
the MAG REASON file (#2005.88) and has the
"^DD",2005.1,2005.1,113.3,1,1,"%D",13,0)
following structure:
"^DD",2005.1,2005.1,113.3,1,1,"%D",14,0)
 
"^DD",2005.1,2005.1,113.3,1,1,"%D",15,0)
 ^MAG(2005.88,"AREF",<Reason>,2005,<IENS>,113.3) = ""
"^DD",2005.1,2005.1,113.3,1,1,"%D",16,0)
 
"^DD",2005.1,2005.1,113.3,1,1,"%D",17,0)
The <Reason> is the IEN of the reason that is
"^DD",2005.1,2005.1,113.3,1,1,"%D",18,0)
pointed by the STATUS REASON field (113.3).
"^DD",2005.1,2005.1,113.3,1,1,"%D",19,0)
 
"^DD",2005.1,2005.1,113.3,1,1,"%D",20,0)
Since the IMAGE (#2005) and IMAGE AUDIT (#2005.1)
"^DD",2005.1,2005.1,113.3,1,1,"%D",21,0)
files are closely related and their records cannot
"^DD",2005.1,2005.1,113.3,1,1,"%D",22,0)
have the same IENS, 2005 is used instead of the
"^DD",2005.1,2005.1,113.3,1,1,"%D",23,0)
real number of the file from where the reason is
"^DD",2005.1,2005.1,113.3,1,1,"%D",24,0)
referenced (2005.1).
"^DD",2005.1,2005.1,113.3,1,1,"%D",25,0)
 
"^DD",2005.1,2005.1,113.3,1,1,"%D",26,0)
The <IENS> is the IENS of the record of the IMAGE
"^DD",2005.1,2005.1,113.3,1,1,"%D",27,0)
AUDIT file (#2005.1) that references the reason.
"^DD",2005.1,2005.1,113.3,1,1,"%D",28,0)
 
"^DD",2005.1,2005.1,113.3,1,1,"%D",29,0)
The 113.3 is the number of the field that points
"^DD",2005.1,2005.1,113.3,1,1,"%D",30,0)
to the reason (STATUS REASON).
"^DD",2005.1,2005.1,113.3,1,1,"DT")
3081006
"^DD",2005.1,2005.1,113.3,3)
Select the reason for the image status change.
"^DD",2005.1,2005.1,113.3,12)
Only reasons applicable to image status changes can be selected.
"^DD",2005.1,2005.1,113.3,12.1)
S DIC("S")="I $P($G(^(0)),""^"",2)[""S"""
"^DD",2005.1,2005.1,113.3,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,113.3,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,113.3,21,0)
^.001^2^2^3081217^^
"^DD",2005.1,2005.1,113.3,21,1,0)
This field indicates the reason for the latest
"^DD",2005.1,2005.1,113.3,21,2,0)
image status change (see the STATUS field (113)).
"^DD",2005.1,2005.1,113.3,23,0)
^.001^1^1^3081217^^^^
"^DD",2005.1,2005.1,113.3,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,113.3,"DT")
3081006
"^DD",2005.1,2005.1,114,0)
NUMBER OF PAGES^NJ9,0^^100;10^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",2005.1,2005.1,114,3)
Enter number of pages in a multi-page image (between 1 and 999999999).
"^DD",2005.1,2005.1,114,20,0)
^.3LA^1^1
"^DD",2005.1,2005.1,114,20,1,0)
MAG*3*93
"^DD",2005.1,2005.1,114,21,0)
^.001^2^2^3081217^^
"^DD",2005.1,2005.1,114,21,1,0)
This field stores number of pages in a multi-page
"^DD",2005.1,2005.1,114,21,2,0)
document (e.g. multi-page TIFF image).
"^DD",2005.1,2005.1,114,23,0)
^.001^1^1^3081217^^^
"^DD",2005.1,2005.1,114,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.1,114,"DT")
3081015
"^DD",2005.1,2005.199,0)
AUDIT SUB-FIELD^^2^5
"^DD",2005.1,2005.199,0,"DT")
3080429
"^DD",2005.1,2005.199,0,"IX","B",2005.199,.01)

"^DD",2005.1,2005.199,0,"NM","AUDIT")

"^DD",2005.1,2005.199,0,"UP")
2005.1
"^DD",2005.1,2005.199,.01,0)
DATE/TIME RECORDED^MD^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",2005.1,2005.199,.01,1,0)
^.1
"^DD",2005.1,2005.199,.01,1,1,0)
2005.199^B
"^DD",2005.1,2005.199,.01,1,1,1)
S ^MAG(2005.1,DA(1),99,"B",$E(X,1,30),DA)=""
"^DD",2005.1,2005.199,.01,1,1,2)
K ^MAG(2005.1,DA(1),99,"B",$E(X,1,30),DA)
"^DD",2005.1,2005.199,.01,1,1,3)
Do not delete!
"^DD",2005.1,2005.199,.01,3)
Enter date and time of the audited change.
"^DD",2005.1,2005.199,.01,8.5)
@
"^DD",2005.1,2005.199,.01,9)
@
"^DD",2005.1,2005.199,.01,20,0)
^.3LA^1^1
"^DD",2005.1,2005.199,.01,20,1,0)
MAG*3*93
"^DD",2005.1,2005.199,.01,21,0)
^.001^2^2^3081217^^
"^DD",2005.1,2005.199,.01,21,1,0)
When a value of an audited field changes, date and
"^DD",2005.1,2005.199,.01,21,2,0)
time of the change are stored in this field.
"^DD",2005.1,2005.199,.01,23,0)
^.001^1^1^3081217^^^^
"^DD",2005.1,2005.199,.01,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.199,.01,"DT")
3080331
"^DD",2005.1,2005.199,.02,0)
FIELD NUMBER^RNJ20,9^^0;2^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."10N.N) X
"^DD",2005.1,2005.199,.02,3)
Enter the field number (between 0 and 9999999999, 9 Decimal Digits).
"^DD",2005.1,2005.199,.02,8.5)
@
"^DD",2005.1,2005.199,.02,9)
@
"^DD",2005.1,2005.199,.02,20,0)
^.3LA^1^1
"^DD",2005.1,2005.199,.02,20,1,0)
MAG*3*93
"^DD",2005.1,2005.199,.02,21,0)
^.001^2^2^3081217^^
"^DD",2005.1,2005.199,.02,21,1,0)
Value of this field identifies the audited field
"^DD",2005.1,2005.199,.02,21,2,0)
that was updated.
"^DD",2005.1,2005.199,.02,23,0)
^.001^1^1^3081217^^
"^DD",2005.1,2005.199,.02,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.199,.02,"DT")
3080331
"^DD",2005.1,2005.199,.03,0)
USER^P200'^VA(200,^0;3^Q
"^DD",2005.1,2005.199,.03,8.5)
@
"^DD",2005.1,2005.199,.03,9)
@
"^DD",2005.1,2005.199,.03,20,0)
^.3LA^1^1
"^DD",2005.1,2005.199,.03,20,1,0)
MAG*3*93
"^DD",2005.1,2005.199,.03,21,0)
^^2^2^3090319^
"^DD",2005.1,2005.199,.03,21,1,0)
This field identifies the user who modified value
"^DD",2005.1,2005.199,.03,21,2,0)
of the audited field.
"^DD",2005.1,2005.199,.03,23,0)
^.001^1^1^3090319^^^
"^DD",2005.1,2005.199,.03,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.199,.03,"DT")
3080331
"^DD",2005.1,2005.199,1,0)
OLD INTERNAL VALUE^F^^1;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",2005.1,2005.199,1,3)
Enter the old field value in internal format (1-250 characters in length).
"^DD",2005.1,2005.199,1,8.5)
@
"^DD",2005.1,2005.199,1,9)
@
"^DD",2005.1,2005.199,1,20,0)
^.3LA^1^1
"^DD",2005.1,2005.199,1,20,1,0)
MAG*3*93
"^DD",2005.1,2005.199,1,21,0)
^.001^2^2^3081217^^
"^DD",2005.1,2005.199,1,21,1,0)
This field stores the previous value of the
"^DD",2005.1,2005.199,1,21,2,0)
audited field in internal format.
"^DD",2005.1,2005.199,1,23,0)
^.001^1^1^3081217^^
"^DD",2005.1,2005.199,1,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.199,1,"DT")
3080331
"^DD",2005.1,2005.199,2,0)
OLD EXTERNAL VALUE^F^^2;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",2005.1,2005.199,2,3)
Enter the old field value in external format (1-250 characters in length).
"^DD",2005.1,2005.199,2,8.5)
@
"^DD",2005.1,2005.199,2,9)
@
"^DD",2005.1,2005.199,2,20,0)
^.3LA^1^1
"^DD",2005.1,2005.199,2,20,1,0)
MAG*3*93
"^DD",2005.1,2005.199,2,21,0)
^.001^4^4^3081217^^^
"^DD",2005.1,2005.199,2,21,1,0)
If the previous external value of the audited
"^DD",2005.1,2005.199,2,21,2,0)
field is different from the internal value stored
"^DD",2005.1,2005.199,2,21,3,0)
in the OLD INTERNAL VALUE field (1), then the
"^DD",2005.1,2005.199,2,21,4,0)
external value is stored in this field.
"^DD",2005.1,2005.199,2,23,0)
^.001^4^4^3081217^^^
"^DD",2005.1,2005.199,2,23,1,0)
See the AUDIT^MAGUXRF and GETPFV^MAGUTL04 procedures
"^DD",2005.1,2005.199,2,23,2,0)
for more details.
"^DD",2005.1,2005.199,2,23,3,0)
 
"^DD",2005.1,2005.199,2,23,4,0)
Added by the patch MAG*3*93.
"^DD",2005.1,2005.199,2,"DT")
3080429
"^DD",2005.87,2005.87,10,0)
IMAGE STATUS^F^^2;2^K:$L(X)>60!($L(X)<1) X
"^DD",2005.87,2005.87,10,3)
Enter list of image statuses separated by commas (1-60 characters).
"^DD",2005.87,2005.87,10,4)
N MAGMSG D HELP^DIE(2005,,113,"U","MAGMSG"),MSG^DIALOG("HW",,,5,"MAGMSG"),EN^DDIOL(" ")
"^DD",2005.87,2005.87,10,20,0)
^.3LA^1^1
"^DD",2005.87,2005.87,10,20,1,0)
MAG*3*93
"^DD",2005.87,2005.87,10,21,0)
^^10^10^3090213^
"^DD",2005.87,2005.87,10,21,1,0)
This field stores the list of image statuses
"^DD",2005.87,2005.87,10,21,2,0)
(internal or external values) separated by commas 
"^DD",2005.87,2005.87,10,21,3,0)
that limit the search results.
"^DD",2005.87,2005.87,10,21,4,0)
 
"^DD",2005.87,2005.87,10,21,5,0)
If the field is empty, then image status is not 
"^DD",2005.87,2005.87,10,21,6,0)
considered during the search defined by this 
"^DD",2005.87,2005.87,10,21,7,0)
filter.
"^DD",2005.87,2005.87,10,21,8,0)
 
"^DD",2005.87,2005.87,10,21,9,0)
See the IMAGE STATUS field (113) of the IMAGE 
"^DD",2005.87,2005.87,10,21,10,0)
file (#2005) for more details.
"^DD",2005.87,2005.87,10,23,0)
^^1^1^3090213^
"^DD",2005.87,2005.87,10,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.87,2005.87,10,"DT")
3090213
"^DD",2005.87,2005.87,11,0)
DESCRIPTION CONTAINS^F^^2;3^K:$L(X)>60!($L(X)<1) X
"^DD",2005.87,2005.87,11,3)
Enter part of image short description (1-60 characters).
"^DD",2005.87,2005.87,11,20,0)
^.3LA^1^1
"^DD",2005.87,2005.87,11,20,1,0)
MAG*3*93
"^DD",2005.87,2005.87,11,21,0)
^^7^7^3090213^
"^DD",2005.87,2005.87,11,21,1,0)
If this field is not empty, then the filter 
"^DD",2005.87,2005.87,11,21,2,0)
considers an image as a possible search result
"^DD",2005.87,2005.87,11,21,3,0)
only if its short description contains the value
"^DD",2005.87,2005.87,11,21,4,0)
of this field. The comparison is case insensitive.
"^DD",2005.87,2005.87,11,21,5,0)
 
"^DD",2005.87,2005.87,11,21,6,0)
See the SHORT DESCRIPTION field (10) of the IMAGE 
"^DD",2005.87,2005.87,11,21,7,0)
file (#2005) for more details.
"^DD",2005.87,2005.87,11,23,0)
^^1^1^3090213^
"^DD",2005.87,2005.87,11,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.87,2005.87,11,"DT")
3090123
"^DD",2005.87,2005.87,12,0)
CAPTURED BY^P200'^VA(200,^2;4^Q
"^DD",2005.87,2005.87,12,3)
Select the user who captured the images.
"^DD",2005.87,2005.87,12,20,0)
^.3LA^1^1
"^DD",2005.87,2005.87,12,20,1,0)
MAG*3*93
"^DD",2005.87,2005.87,12,21,0)
^^5^5^3090213^
"^DD",2005.87,2005.87,12,21,1,0)
If this field has a value, then the filter 
"^DD",2005.87,2005.87,12,21,2,0)
considers only images captured by this user.
"^DD",2005.87,2005.87,12,21,3,0)
 
"^DD",2005.87,2005.87,12,21,4,0)
See the IMAGE SAVE BY field (8) of the IMAGE file 
"^DD",2005.87,2005.87,12,21,5,0)
(#2005) for more details.
"^DD",2005.87,2005.87,12,23,0)
^^1^1^3090213^
"^DD",2005.87,2005.87,12,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.87,2005.87,12,"DT")
3090123
"^DD",2005.87,2005.87,13,0)
USE CAPTURE DATES^S^0:NO;1:YES;^2;5^Q
"^DD",2005.87,2005.87,13,3)
Select YES to search in capture date range instead of procedure/exam date range.
"^DD",2005.87,2005.87,13,20,0)
^.3LA^1^1
"^DD",2005.87,2005.87,13,20,1,0)
MAG*3*93
"^DD",2005.87,2005.87,13,21,0)
^^8^8^3090213^
"^DD",2005.87,2005.87,13,21,1,0)
If value of this field is YES, then filter's date 
"^DD",2005.87,2005.87,13,21,2,0)
range parameters are considered as image capture 
"^DD",2005.87,2005.87,13,21,3,0)
dates (see the DATE/TIME IMAGE SAVED field (7) of
"^DD",2005.87,2005.87,13,21,4,0)
the IMAGE file (#2005) for more details).
"^DD",2005.87,2005.87,13,21,5,0)
 
"^DD",2005.87,2005.87,13,21,6,0)
Otherwise, they are interpreted as procedure/exam
"^DD",2005.87,2005.87,13,21,7,0)
dates (see the PROCEDURE/EXAM DATE/TIME field (15)
"^DD",2005.87,2005.87,13,21,8,0)
of the IMAGE file (#2005) for more details).
"^DD",2005.87,2005.87,13,23,0)
^^1^1^3090213^
"^DD",2005.87,2005.87,13,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.87,2005.87,13,"DT")
3090123
"^DD",2005.87,2005.87,14,0)
DAY RANGE^S^0:Today;1:Yesterday;2:2 Days Ago;3:3 Days Ago;4:Last 2 Days (thru today);5:Last 3 Days (thru today);6:Last Full Week (starts on Sunday);7:Current Week (starts on Sunday);^2;6^Q
"^DD",2005.87,2005.87,14,3)
Select predefined date range for image search.
"^DD",2005.87,2005.87,14,20,0)
^.3LA^1^1
"^DD",2005.87,2005.87,14,20,1,0)
MAG*3*93
"^DD",2005.87,2005.87,14,21,0)
^^6^6^3090302^
"^DD",2005.87,2005.87,14,21,1,0)
This field allows selection of predefined short 
"^DD",2005.87,2005.87,14,21,2,0)
date ranges. This is especially useful during the
"^DD",2005.87,2005.87,14,21,3,0)
image verification process.
"^DD",2005.87,2005.87,14,21,4,0)
 
"^DD",2005.87,2005.87,14,21,5,0)
This filter parameter is mutually exclusive with 
"^DD",2005.87,2005.87,14,21,6,0)
the range defined by the RELATIVE RANGE field (8).
"^DD",2005.87,2005.87,14,23,0)
^.001^1^1^3090302^^
"^DD",2005.87,2005.87,14,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.87,2005.87,14,"DT")
3090123
"^DD",2005.87,2005.87,15,0)
COLUMN WIDTHS^F^^3;1^K:$L(X)>90!($L(X)<1) X
"^DD",2005.87,2005.87,15,3)
Enter comma separated list of column widths (1-90 characters).
"^DD",2005.87,2005.87,15,20,0)
^.3LA^1^1
"^DD",2005.87,2005.87,15,20,1,0)
MAG*3*93
"^DD",2005.87,2005.87,15,21,0)
^^3^3^3090213^
"^DD",2005.87,2005.87,15,21,1,0)
This field stores comma separated list of column 
"^DD",2005.87,2005.87,15,21,2,0)
widths (in pixels) that is applied to the image
"^DD",2005.87,2005.87,15,21,3,0)
list view when this filter is used.
"^DD",2005.87,2005.87,15,23,0)
^^1^1^3090213^
"^DD",2005.87,2005.87,15,23,1,0)
Added by the patch MAG*3*93.
"^DD",2005.87,2005.87,15,"DT")
3090213
"^DD",2005.87,2005.87,16,0)
PERCENT^NJ3,0^^2;7^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",2005.87,2005.87,16,3)
Enter percentage of found images that will be returned as the search results.
"^DD",2005.87,2005.87,16,20,0)
^.3LA^1^1
"^DD",2005.87,2005.87,16,20,1,0)
MAG*3*93
"^DD",2005.87,2005.87,16,21,0)
^^31^31^3090302^
"^DD",2005.87,2005.87,16,21,1,0)
If this field is populated, it stores the
"^DD",2005.87,2005.87,16,21,2,0)
percentage of images selected by the filter that
"^DD",2005.87,2005.87,16,21,3,0)
is returned as the result of the image search.
"^DD",2005.87,2005.87,16,21,4,0)
 
"^DD",2005.87,2005.87,16,21,5,0)
  Firstly, images captured by the user (see the 
"^DD",2005.87,2005.87,16,21,6,0)
  the CAPTURED BY field (12) for more details) are
"^DD",2005.87,2005.87,16,21,7,0)
  preselected according to the date range and
"^DD",2005.87,2005.87,16,21,8,0)
  other criteria. Those of them that were captured
"^DD",2005.87,2005.87,16,21,9,0)
  immediately before and after patient changes are
"^DD",2005.87,2005.87,16,21,10,0)
  stored to the "priority" temporary buffer. The
"^DD",2005.87,2005.87,16,21,11,0)
  others are stored to the regular temporary
"^DD",2005.87,2005.87,16,21,12,0)
  buffer.
"^DD",2005.87,2005.87,16,21,13,0)
 
"^DD",2005.87,2005.87,16,21,14,0)
  Then, the requested maximum number of images is
"^DD",2005.87,2005.87,16,21,15,0)
  calculated according to the total number of 
"^DD",2005.87,2005.87,16,21,16,0)
  preselected entries and the value stored in this
"^DD",2005.87,2005.87,16,21,17,0)
  field.
"^DD",2005.87,2005.87,16,21,18,0)
     
"^DD",2005.87,2005.87,16,21,19,0)
  If the number of entries in the "priority" 
"^DD",2005.87,2005.87,16,21,20,0)
  buffer is less than the calculated maximum
"^DD",2005.87,2005.87,16,21,21,0)
  number of images and the regular buffer is not
"^DD",2005.87,2005.87,16,21,22,0)
  empty, then missing quantity of preselected
"^DD",2005.87,2005.87,16,21,23,0)
  images is merged to the "priority" buffer from
"^DD",2005.87,2005.87,16,21,24,0)
  the regular one.
"^DD",2005.87,2005.87,16,21,25,0)
 
"^DD",2005.87,2005.87,16,21,26,0)
  Finally, no more than the maximum number of
"^DD",2005.87,2005.87,16,21,27,0)
  entries is returned from the "priority" buffer
"^DD",2005.87,2005.87,16,21,28,0)
  as the result of the search.
"^DD",2005.87,2005.87,16,21,29,0)
  
"^DD",2005.87,2005.87,16,21,30,0)
If this field is empty, then the regular image
"^DD",2005.87,2005.87,16,21,31,0)
query is performed.
"^DD",2005.87,2005.87,16,23,0)
^.001^5^5^3090302^^^
"^DD",2005.87,2005.87,16,23,1,0)
See the description of the MAG4 IMAGE LIST remote 
"^DD",2005.87,2005.87,16,23,2,0)
procedure (the "S" control flag and the MAXNUM
"^DD",2005.87,2005.87,16,23,3,0)
parameter) for more details.
"^DD",2005.87,2005.87,16,23,4,0)
 
"^DD",2005.87,2005.87,16,23,5,0)
Added by the patch MAG*3*93.
"^DD",2005.87,2005.87,16,"DT")
3090126
"^DD",2005.88,2005.88,0)
FIELD^^.04^5
"^DD",2005.88,2005.88,0,"DDA")
N
"^DD",2005.88,2005.88,0,"DT")
3080728
"^DD",2005.88,2005.88,0,"ID","W1")
N MAGT S MAGT=$P($G(^(0)),"^",2) D EN^DDIOL($S(MAGT["C":"-Copy",1:"")_$S(MAGT["D":"-Delete",1:"")_$S(MAGT["P":"-Print",1:"")_$S(MAGT["S":"-Status",1:"")_"-",,"?0")
"^DD",2005.88,2005.88,0,"ID","W2")
N MAGINDT S MAGINDT=$P($G(^(0)),"^",3) D:(MAGINDT>0)&(MAGINDT'>DT) EN^DDIOL("*INACTIVE*",,"?0")
"^DD",2005.88,2005.88,0,"IX","B",2005.88,.01)

"^DD",2005.88,2005.88,0,"NM","MAG REASON")

"^DD",2005.88,2005.88,0,"PT",2005,113.3)

"^DD",2005.88,2005.88,0,"PT",2005.1,113.3)

"^DD",2005.88,2005.88,0,"VRPK")
MAG
"^DD",2005.88,2005.88,.01,0)
REASON^RF^^0;1^K:$L(X)>70!($L(X)<3)!'(X'?1P.E) X
"^DD",2005.88,2005.88,.01,1,0)
^.1
"^DD",2005.88,2005.88,.01,1,1,0)
2005.88^B
"^DD",2005.88,2005.88,.01,1,1,1)
S ^MAG(2005.88,"B",$E(X,1,30),DA)=""
"^DD",2005.88,2005.88,.01,1,1,2)
K ^MAG(2005.88,"B",$E(X,1,30),DA)
"^DD",2005.88,2005.88,.01,1,1,"DT")
3080728
"^DD",2005.88,2005.88,.01,1,2,0)
^^TRIGGER^2005.88^.04
"^DD",2005.88,2005.88,.01,1,2,1)
X ^DD(2005.88,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^MAG(2005.88,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="L"_$S('$D(D0):"",D0<0:"",1:D0) X ^DD(2005.88,.01,1,2,1.4)
"^DD",2005.88,2005.88,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^MAG(2005.88,D0,0)):^(0),1:"") S X=$P(Y(1),U,4)=""
"^DD",2005.88,2005.88,.01,1,2,1.4)
S DIH=$G(^MAG(2005.88,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=2005.88,DIG=.04 D ^DICR
"^DD",2005.88,2005.88,.01,1,2,2)
Q
"^DD",2005.88,2005.88,.01,1,2,"%D",0)
^^3^3^3081003^
"^DD",2005.88,2005.88,.01,1,2,"%D",1,0)
When a new record is created and the CODE field (4) is empty, this trigger
"^DD",2005.88,2005.88,.01,1,2,"%D",2,0)
populates the latter with the default value (a "local" code). See the
"^DD",2005.88,2005.88,.01,1,2,"%D",3,0)
definition of the CODE field (.04) for more details.
"^DD",2005.88,2005.88,.01,1,2,"CREATE CONDITION")
CODE=""
"^DD",2005.88,2005.88,.01,1,2,"CREATE VALUE")
"L"_NUMBER
"^DD",2005.88,2005.88,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2005.88,2005.88,.01,1,2,"DT")
3080728
"^DD",2005.88,2005.88,.01,1,2,"FIELD")
CODE
"^DD",2005.88,2005.88,.01,3)
Answer must be 3-70 characters in length.
"^DD",2005.88,2005.88,.01,21,0)
^^2^2^3080728^
"^DD",2005.88,2005.88,.01,21,1,0)
This field stores a valid reason/justification for
"^DD",2005.88,2005.88,.01,21,2,0)
action(s).
"^DD",2005.88,2005.88,.01,"DEL",1,0)
I $D(^MAG(2005.88,"AREF",+$G(DA)))
"^DD",2005.88,2005.88,.01,"DT")
3080728
"^DD",2005.88,2005.88,.02,0)
TYPE^RFX^^0;2^S X=$$UP^XLFSTR(X) K:$L(X)>4!($L(X)<1)!($TR(X,"CDPS")'="") X
"^DD",2005.88,2005.88,.02,3)
Enter characters for actions that this flag is applicable to (C, D, P, and/or S).
"^DD",2005.88,2005.88,.02,21,0)
^^12^12^3080717^
"^DD",2005.88,2005.88,.02,21,1,0)
This field indicates actions that this reason is
"^DD",2005.88,2005.88,.02,21,2,0)
applicable to. Actions are represented by the 
"^DD",2005.88,2005.88,.02,21,3,0)
concatenation of the following characters:
"^DD",2005.88,2005.88,.02,21,4,0)
 
"^DD",2005.88,2005.88,.02,21,5,0)
  C - Copy image
"^DD",2005.88,2005.88,.02,21,6,0)
  D - Delete image
"^DD",2005.88,2005.88,.02,21,7,0)
  P - Print image
"^DD",2005.88,2005.88,.02,21,8,0)
  S - Change image status
"^DD",2005.88,2005.88,.02,21,9,0)
 
"^DD",2005.88,2005.88,.02,21,10,0)
For example, if a reason is applicable for copying
"^DD",2005.88,2005.88,.02,21,11,0)
and printing, then the value of this field should
"^DD",2005.88,2005.88,.02,21,12,0)
be "CP".
"^DD",2005.88,2005.88,.02,"DT")
3080630
"^DD",2005.88,2005.88,.03,0)
DATE OF INACTIVATION^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",2005.88,2005.88,.03,21,0)
^^9^9^3081003^
"^DD",2005.88,2005.88,.03,21,1,0)
If this field is not empty and the stored date is
"^DD",2005.88,2005.88,.03,21,2,0)
no later than today's date, then this record is
"^DD",2005.88,2005.88,.03,21,3,0)
excluded from the list of reasons presented to the
"^DD",2005.88,2005.88,.03,21,4,0)
user (e.g. by the GUI application).
"^DD",2005.88,2005.88,.03,21,5,0)
 
"^DD",2005.88,2005.88,.03,21,6,0)
Use this field to exclude records from selection 
"^DD",2005.88,2005.88,.03,21,7,0)
without deleting them. This is especially 
"^DD",2005.88,2005.88,.03,21,8,0)
important if inactive records are pointed to by
"^DD",2005.88,2005.88,.03,21,9,0)
records of other files.
"^DD",2005.88,2005.88,.03,"DT")
3080229
"^DD",2005.88,2005.88,.04,0)
CODE^RFX^^0;4^K:$S(X?1.6N:(+X'=X)!(X'>0),X?1"L"1.6N:$P(X,"L",2)'>0,1:1) X
"^DD",2005.88,2005.88,.04,1,0)
^.1^^0
"^DD",2005.88,2005.88,.04,3)
Enter unique code of the reason (from 1 to 999999). Codes of local reasons must be preceded by letter L.
"^DD",2005.88,2005.88,.04,5,1,0)
2005.88^.01^2
"^DD",2005.88,2005.88,.04,21,0)
^^15^15^3080728^
"^DD",2005.88,2005.88,.04,21,1,0)
This field stores the code that uniquely 
"^DD",2005.88,2005.88,.04,21,2,0)
identifies the reason. You must not modify value 
"^DD",2005.88,2005.88,.04,21,3,0)
of this field unless you are instructed to do so
"^DD",2005.88,2005.88,.04,21,4,0)
by the VistA support personnel or Imaging software
"^DD",2005.88,2005.88,.04,21,5,0)
developers.
"^DD",2005.88,2005.88,.04,21,6,0)
 
"^DD",2005.88,2005.88,.04,21,7,0)
"Standard" reasons (i.e. those distributed with
"^DD",2005.88,2005.88,.04,21,8,0)
the Imaging software) have numeric codes. 
"^DD",2005.88,2005.88,.04,21,9,0)
 
"^DD",2005.88,2005.88,.04,21,10,0)
Codes of "local" reasons created by the users at
"^DD",2005.88,2005.88,.04,21,11,0)
the sites consist from record IENs preceded by
"^DD",2005.88,2005.88,.04,21,12,0)
letter L (e.g. "L12").
"^DD",2005.88,2005.88,.04,21,13,0)
 
"^DD",2005.88,2005.88,.04,21,14,0)
When a new record is created, this field is 
"^DD",2005.88,2005.88,.04,21,15,0)
automatically pre-populated with a "local" code. 
"^DD",2005.88,2005.88,.04,23,0)
^.001^3^3^3080728^^^
"^DD",2005.88,2005.88,.04,23,1,0)
When a new record is created, this field is 
"^DD",2005.88,2005.88,.04,23,2,0)
automatically pre-populated by the trigger associated
"^DD",2005.88,2005.88,.04,23,3,0)
with the REASON field (.01).
"^DD",2005.88,2005.88,.04,"DT")
3080728
"^DD",2005.88,2005.88,1,0)
DESCRIPTION^2005.881^^1;0
"^DD",2005.88,2005.88,1,21,0)
^.001^3^3^3090204^^^^
"^DD",2005.88,2005.88,1,21,1,0)
This field stores an optional explanation for the 
"^DD",2005.88,2005.88,1,21,2,0)
reason. The text can be presented to the user by
"^DD",2005.88,2005.88,1,21,3,0)
the GUI application as a context sensitive help.
"^DD",2005.88,2005.881,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",2005.88,2005.881,0,"DT")
3080228
"^DD",2005.88,2005.881,0,"NM","DESCRIPTION")

"^DD",2005.88,2005.881,0,"UP")
2005.88
"^DD",2005.88,2005.881,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",2005.88,2005.881,.01,21,0)
^^3^3^3081003^
"^DD",2005.88,2005.881,.01,21,1,0)
This field stores an optional explanation for the 
"^DD",2005.88,2005.881,.01,21,2,0)
reason. The text can be presented to the user by
"^DD",2005.88,2005.881,.01,21,3,0)
the GUI application as a context tive help.
"^DD",2005.88,2005.881,.01,"DT")
3080228
"^DD",2006.18,2006.18,220.01,0)
SHOW IMAGE TREE^S^0:FALSE;1:TRUE;^ISTYLE;1^Q
"^DD",2006.18,2006.18,220.01,3)
Select TRUE to show tree view panel in the Image List window.
"^DD",2006.18,2006.18,220.01,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.01,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.01,21,0)
^^3^3^3090212^
"^DD",2006.18,2006.18,220.01,21,1,0)
This field controls visibility of the tree view 
"^DD",2006.18,2006.18,220.01,21,2,0)
panel in the Image List window of clinical client
"^DD",2006.18,2006.18,220.01,21,3,0)
applications (Display, Capture, etc.).
"^DD",2006.18,2006.18,220.01,23,0)
^.001^1^1^3090212^^^^
"^DD",2006.18,2006.18,220.01,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.01,"DT")
3090127
"^DD",2006.18,2006.18,220.02,0)
ENABLE AUTOSELECT^S^0:FALSE;1:TRUE;^ISTYLE;2^Q
"^DD",2006.18,2006.18,220.02,3)
Select TRUE if you want tree and list items automatically selected by mouse pointer hover.
"^DD",2006.18,2006.18,220.02,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.02,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.02,21,0)
^^6^6^3090212^
"^DD",2006.18,2006.18,220.02,21,1,0)
This field controls if tree view and list items 
"^DD",2006.18,2006.18,220.02,21,2,0)
(in the clinical client applications) are
"^DD",2006.18,2006.18,220.02,21,3,0)
automatically selected after the mouse pointer 
"^DD",2006.18,2006.18,220.02,21,4,0)
hovers over them for amount of time longer than
"^DD",2006.18,2006.18,220.02,21,5,0)
that defined by the value of the DELAY FOR
"^DD",2006.18,2006.18,220.02,21,6,0)
AUTOSELECT field (220.03).
"^DD",2006.18,2006.18,220.02,23,0)
^.001^1^1^3090212^^^^
"^DD",2006.18,2006.18,220.02,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.02,"DT")
3090127
"^DD",2006.18,2006.18,220.03,0)
AUTOSELECT SPEED^S^0:Slow;1:Medium;2:Fast;^ISTYLE;3^Q
"^DD",2006.18,2006.18,220.03,3)
Select delay for automatic selection of tree and list items.
"^DD",2006.18,2006.18,220.03,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.03,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.03,21,0)
^^11^11^3090216^
"^DD",2006.18,2006.18,220.03,21,1,0)
This field determines the amount of time after 
"^DD",2006.18,2006.18,220.03,21,2,0)
which a tree or list item is automatically
"^DD",2006.18,2006.18,220.03,21,3,0)
selected if the value of the ENABLE AUTOSELECT 
"^DD",2006.18,2006.18,220.03,21,4,0)
field (220.02) is TRUE.  Field values are
"^DD",2006.18,2006.18,220.03,21,5,0)
interpreted as follows:
"^DD",2006.18,2006.18,220.03,21,6,0)
  
"^DD",2006.18,2006.18,220.03,21,7,0)
  Code  Description   Delay
"^DD",2006.18,2006.18,220.03,21,8,0)
  ----  -----------  -------
"^DD",2006.18,2006.18,220.03,21,9,0)
    0   Slow         1000 ms
"^DD",2006.18,2006.18,220.03,21,10,0)
    1   Medium        500 ms
"^DD",2006.18,2006.18,220.03,21,11,0)
    2   Fast          250 ms
"^DD",2006.18,2006.18,220.03,23,0)
^.001^1^1^3090216^^^^
"^DD",2006.18,2006.18,220.03,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.03,"DT")
3090216
"^DD",2006.18,2006.18,220.04,0)
SYNCHRONIZE IMAGE SELECTIONS^S^0:FALSE;1:TRUE;^ISTYLE;4^Q
"^DD",2006.18,2006.18,220.04,3)
Select TRUE to synchronize all image selections in the Image List window.
"^DD",2006.18,2006.18,220.04,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.04,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.04,21,0)
^^4^4^3090212^
"^DD",2006.18,2006.18,220.04,21,1,0)
Value of this field controls synchronization of 
"^DD",2006.18,2006.18,220.04,21,2,0)
image selections in all components of the Image
"^DD",2006.18,2006.18,220.04,21,3,0)
List window of the clinical client applications 
"^DD",2006.18,2006.18,220.04,21,4,0)
(Display, Capture, etc.).
"^DD",2006.18,2006.18,220.04,23,0)
^.001^1^1^3090212^^^
"^DD",2006.18,2006.18,220.04,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.04,"DT")
3090127
"^DD",2006.18,2006.18,220.05,0)
WHERE TO SHOW ABSTRACTS^S^0:List Window;1:Separate Window;^ISTYLE;5^Q
"^DD",2006.18,2006.18,220.05,3)
Select where list of image abstracts is shown.
"^DD",2006.18,2006.18,220.05,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.05,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.05,21,0)
^.001^3^3^3090302^^
"^DD",2006.18,2006.18,220.05,21,1,0)
Value of this field determines whether the list 
"^DD",2006.18,2006.18,220.05,21,2,0)
of image abstracts is shown in a panel of the
"^DD",2006.18,2006.18,220.05,21,3,0)
Image List window or in a separate window.
"^DD",2006.18,2006.18,220.05,23,0)
^.001^1^1^3090302^^^^
"^DD",2006.18,2006.18,220.05,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.05,"DT")
3090212
"^DD",2006.18,2006.18,220.06,0)
POSITION OF ABSTRACTS^S^0:Left;1:Bottom;2:Below Tree View;3:Separate Window;^ISTYLE;6^Q
"^DD",2006.18,2006.18,220.06,3)
Select position of the list of image abstracts.
"^DD",2006.18,2006.18,220.06,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.06,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.06,21,0)
^^4^4^3090212^
"^DD",2006.18,2006.18,220.06,21,1,0)
Value of this field controls where the list of 
"^DD",2006.18,2006.18,220.06,21,2,0)
image abstracts is shown in the Image List window
"^DD",2006.18,2006.18,220.06,21,3,0)
(if the value of the WHERE TO SHOW ABSTRACT field
"^DD",2006.18,2006.18,220.06,21,4,0)
(220.05) is TRUE).
"^DD",2006.18,2006.18,220.06,23,0)
^.001^1^1^3090212^^^
"^DD",2006.18,2006.18,220.06,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.06,"DT")
3090219
"^DD",2006.18,2006.18,220.07,0)
WHERE TO SHOW IMAGE^S^0:List Window;1:Separate Window;^ISTYLE;7^Q
"^DD",2006.18,2006.18,220.07,3)
Select where images are shown.
"^DD",2006.18,2006.18,220.07,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.07,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.07,21,0)
^.001^3^3^3090212^^^
"^DD",2006.18,2006.18,220.07,21,1,0)
Value of this field determines whether images are
"^DD",2006.18,2006.18,220.07,21,2,0)
shown in a panel of the Image List window or in a
"^DD",2006.18,2006.18,220.07,21,3,0)
separate window.
"^DD",2006.18,2006.18,220.07,23,0)
^.001^1^1^3090212^^^
"^DD",2006.18,2006.18,220.07,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.07,"DT")
3090127
"^DD",2006.18,2006.18,220.08,0)
SHOW TREE SORT BUTTONS^S^0:FALSE;1:TRUE;^ISTYLE;8^Q
"^DD",2006.18,2006.18,220.08,3)
Select TRUE to show sort buttons for the tree view in the Image List window.
"^DD",2006.18,2006.18,220.08,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.08,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.08,21,0)
^.001^3^3^3090212^^
"^DD",2006.18,2006.18,220.08,21,1,0)
Value of this field controls visibility of the 
"^DD",2006.18,2006.18,220.08,21,2,0)
sort buttons above the tree view in the Image 
"^DD",2006.18,2006.18,220.08,21,3,0)
List window.
"^DD",2006.18,2006.18,220.08,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,220.08,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.08,"DT")
3090127
"^DD",2006.18,2006.18,220.09,0)
AUTOEXPAND TREE ITEMS^S^0:FALSE;1:TRUE;^ISTYLE;9^Q
"^DD",2006.18,2006.18,220.09,3)
Select TRUE to automatically expand tree items when they are selected.
"^DD",2006.18,2006.18,220.09,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.09,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.09,21,0)
^^5^5^3090212^
"^DD",2006.18,2006.18,220.09,21,1,0)
Value of this field determines if items of the tree
"^DD",2006.18,2006.18,220.09,21,2,0)
view in the Image List window are automatically
"^DD",2006.18,2006.18,220.09,21,3,0)
expanded when they are selected. At the same time,
"^DD",2006.18,2006.18,220.09,21,4,0)
previously expanded items are automatically
"^DD",2006.18,2006.18,220.09,21,5,0)
collapsed.
"^DD",2006.18,2006.18,220.09,23,0)
^.001^1^1^3090212^^^^
"^DD",2006.18,2006.18,220.09,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.09,"DT")
3090212
"^DD",2006.18,2006.18,220.1,0)
ABSTRACT LIST SCROLL MODE^S^0:Vertical;1:Horizontal;^ISTYLE;10^Q
"^DD",2006.18,2006.18,220.1,3)
Select direction of scrolling in the list of image abstracts.
"^DD",2006.18,2006.18,220.1,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.1,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.1,21,0)
^^3^3^3090212^
"^DD",2006.18,2006.18,220.1,21,1,0)
Value of this fields determines the direction of 
"^DD",2006.18,2006.18,220.1,21,2,0)
scrolling and presence of the corresponding scroll
"^DD",2006.18,2006.18,220.1,21,3,0)
bar in the list of image abstracts.
"^DD",2006.18,2006.18,220.1,23,0)
^^1^1^3090212^
"^DD",2006.18,2006.18,220.1,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.1,"DT")
3090127
"^DD",2006.18,2006.18,220.11,0)
IMAGE LIST SCROLL MODE^S^0:Vertical;1:Horizontal;^ISTYLE;11^Q
"^DD",2006.18,2006.18,220.11,3)
Select direction of scrolling in the image list.
"^DD",2006.18,2006.18,220.11,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.11,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.11,21,0)
^^4^4^3090212^
"^DD",2006.18,2006.18,220.11,21,1,0)
Value of this fields determines the direction of
"^DD",2006.18,2006.18,220.11,21,2,0)
scrolling (if several images are open at the same 
"^DD",2006.18,2006.18,220.11,21,3,0)
time) and presence of the corresponding scroll bar
"^DD",2006.18,2006.18,220.11,21,4,0)
in the image list.
"^DD",2006.18,2006.18,220.11,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,220.11,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.11,"DT")
3090127
"^DD",2006.18,2006.18,220.12,0)
SHOW LIST VIEW^S^0:FALSE;1:TRUE;^ISTYLE;12^Q
"^DD",2006.18,2006.18,220.12,3)
Select TRUE to show list view panel in the Image List window.
"^DD",2006.18,2006.18,220.12,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.12,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.12,21,0)
^^3^3^3090212^
"^DD",2006.18,2006.18,220.12,21,1,0)
This field controls visibility of the list view
"^DD",2006.18,2006.18,220.12,21,2,0)
panel in the Image List window of clinical client
"^DD",2006.18,2006.18,220.12,21,3,0)
applications (Display, Capture, etc.).
"^DD",2006.18,2006.18,220.12,23,0)
^^1^1^3090212^
"^DD",2006.18,2006.18,220.12,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.12,"DT")
3090127
"^DD",2006.18,2006.18,220.13,0)
LAYOUT OF IMAGE LIST WINDOW^F^^ISTYLE;13^K:$L(X)>90!($L(X)<1) X
"^DD",2006.18,2006.18,220.13,3)
Do not edit value of this field using the FileMan!
"^DD",2006.18,2006.18,220.13,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,220.13,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,220.13,21,0)
^.001^3^3^3090212^^
"^DD",2006.18,2006.18,220.13,21,1,0)
This field stores a string that determines the
"^DD",2006.18,2006.18,220.13,21,2,0)
layout of the Image List window of clinical client
"^DD",2006.18,2006.18,220.13,21,3,0)
applications (Display, Capture, etc.).
"^DD",2006.18,2006.18,220.13,23,0)
^.001^1^1^3090212^^^^
"^DD",2006.18,2006.18,220.13,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,220.13,"DT")
3090212
"^DD",2006.18,2006.18,221.01,0)
VERIFY WINDOW STYLE^S^0:fsMDIChild;2:fsNormal;3:fsStayOnTop;^IVERIFY;1^Q
"^DD",2006.18,2006.18,221.01,3)
Select style for the Verification window.
"^DD",2006.18,2006.18,221.01,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.01,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.01,21,0)
^^3^3^3090212^
"^DD",2006.18,2006.18,221.01,21,1,0)
Value of this field controls style of the
"^DD",2006.18,2006.18,221.01,21,2,0)
Verification window of clinical client
"^DD",2006.18,2006.18,221.01,21,3,0)
applications (Display, Capture, etc.).
"^DD",2006.18,2006.18,221.01,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,221.01,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.01,"DT")
3090212
"^DD",2006.18,2006.18,221.02,0)
VERIFY LEFT^NJ4,0^^IVERIFY;2^K:+X'=X!(X>4000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,221.02,3)
Type a Number between 0 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,221.02,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.02,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.02,21,0)
^.001^2^2^3090212^^
"^DD",2006.18,2006.18,221.02,21,1,0)
This field stores the horizontal coordinate of the
"^DD",2006.18,2006.18,221.02,21,2,0)
left side of the Image Verify window.
"^DD",2006.18,2006.18,221.02,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,221.02,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.02,"DT")
3090212
"^DD",2006.18,2006.18,221.03,0)
VERIFY TOP^NJ4,0^^IVERIFY;3^K:+X'=X!(X>4000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,221.03,3)
Type a Number between 0 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,221.03,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.03,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.03,21,0)
^^2^2^3090212^
"^DD",2006.18,2006.18,221.03,21,1,0)
This field stores vertical coordinate of the top 
"^DD",2006.18,2006.18,221.03,21,2,0)
side of the Image Verify window.
"^DD",2006.18,2006.18,221.03,23,0)
^^1^1^3090212^
"^DD",2006.18,2006.18,221.03,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.03,"DT")
3090212
"^DD",2006.18,2006.18,221.04,0)
VERIFY WIDTH^NJ4,0^^IVERIFY;4^K:+X'=X!(X>4000)!(X<10)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,221.04,3)
Type a Number between 10 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,221.04,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.04,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.04,21,0)
^^2^2^3090212^
"^DD",2006.18,2006.18,221.04,21,1,0)
This field stores the width (in pixels) of the
"^DD",2006.18,2006.18,221.04,21,2,0)
Image Verify window.
"^DD",2006.18,2006.18,221.04,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,221.04,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.04,"DT")
3090212
"^DD",2006.18,2006.18,221.05,0)
VERIFY HEIGHT^NJ4,0^^IVERIFY;5^K:+X'=X!(X>4000)!(X<10)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,221.05,3)
Type a Number between 10 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,221.05,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.05,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.05,21,0)
^^2^2^3090212^
"^DD",2006.18,2006.18,221.05,21,1,0)
This field stores the height (in pixels) of the
"^DD",2006.18,2006.18,221.05,21,2,0)
Image Verify window.
"^DD",2006.18,2006.18,221.05,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,221.05,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.05,"DT")
3090212
"^DD",2006.18,2006.18,221.06,0)
VERIFY SHOW IMAGE REPORT^S^0:FALSE;1:TRUE;^IVERIFY;6^Q
"^DD",2006.18,2006.18,221.06,3)
Select TRUE to show report preview panel in the Image Verify window.
"^DD",2006.18,2006.18,221.06,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.06,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.06,21,0)
^.001^2^2^3090212^^
"^DD",2006.18,2006.18,221.06,21,1,0)
Value of this field controls visibility of the
"^DD",2006.18,2006.18,221.06,21,2,0)
report preview panel in the Image Verify window.
"^DD",2006.18,2006.18,221.06,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,221.06,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.06,"DT")
3090212
"^DD",2006.18,2006.18,221.07,0)
VERIFY SHOW IMAGE INFO^S^0:FALSE;1:TRUE;^IVERIFY;7^Q
"^DD",2006.18,2006.18,221.07,3)
 Select TRUE to show image information panel in the Image Verify window.
"^DD",2006.18,2006.18,221.07,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.07,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.07,21,0)
^^3^3^3090212^
"^DD",2006.18,2006.18,221.07,21,1,0)
Value of this field controls visibility of the 
"^DD",2006.18,2006.18,221.07,21,2,0)
image information panel in the Image Verify 
"^DD",2006.18,2006.18,221.07,21,3,0)
window.
"^DD",2006.18,2006.18,221.07,23,0)
^^1^1^3090212^
"^DD",2006.18,2006.18,221.07,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.07,"DT")
3090212
"^DD",2006.18,2006.18,221.08,0)
VERIFY AUTOHIDE QUICK FILTER^S^0:FALSE;1:TRUE;^IVERIFY;8^Q
"^DD",2006.18,2006.18,221.08,3)
Select TRUE to automatically hide quick filter panel after search.
"^DD",2006.18,2006.18,221.08,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.08,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.08,21,0)
^^6^6^3090212^
"^DD",2006.18,2006.18,221.08,21,1,0)
Value of this field controls visibility of the 
"^DD",2006.18,2006.18,221.08,21,2,0)
quick filter panel in the Image Verify window. 
"^DD",2006.18,2006.18,221.08,21,3,0)
 
"^DD",2006.18,2006.18,221.08,21,4,0)
If the value is TRUE, then the quick filter panel
"^DD",2006.18,2006.18,221.08,21,5,0)
is automatically hidden after the search is done
"^DD",2006.18,2006.18,221.08,21,6,0)
and the list of images is loaded.
"^DD",2006.18,2006.18,221.08,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,221.08,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.08,"DT")
3090212
"^DD",2006.18,2006.18,221.09,0)
VERIFY SINGLE VIEW ONLY^S^0:FALSE;1:TRUE;^IVERIFY;9^Q
"^DD",2006.18,2006.18,221.09,3)
Select TRUE to allow only one image in the Image Viewer during verification.
"^DD",2006.18,2006.18,221.09,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.09,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.09,21,0)
^^4^4^3090212^
"^DD",2006.18,2006.18,221.09,21,1,0)
If value of this field is TRUE, then the image 
"^DD",2006.18,2006.18,221.09,21,2,0)
viewer can show only a single image during the 
"^DD",2006.18,2006.18,221.09,21,3,0)
image verification process. Otherwise, multiple
"^DD",2006.18,2006.18,221.09,21,4,0)
images can be opened.
"^DD",2006.18,2006.18,221.09,23,0)
^.001^1^1^3090212^^
"^DD",2006.18,2006.18,221.09,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.09,"DT")
3090212
"^DD",2006.18,2006.18,221.1,0)
VERIFY COLUMN WIDTHS^F^^IVERIFY;10^K:$L(X)>90!($L(X)<1) X
"^DD",2006.18,2006.18,221.1,3)
Enter the column widths separated by commas (1-90 characters).
"^DD",2006.18,2006.18,221.1,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,221.1,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,221.1,21,0)
^^3^3^3090213^
"^DD",2006.18,2006.18,221.1,21,1,0)
This field stores comma separated column widths
"^DD",2006.18,2006.18,221.1,21,2,0)
(in pixels) for the image list view in the Image
"^DD",2006.18,2006.18,221.1,21,3,0)
Verify window.
"^DD",2006.18,2006.18,221.1,23,0)
^.001^1^1^3090213^^
"^DD",2006.18,2006.18,221.1,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,221.1,"DT")
3090212
"^DD",2006.18,2006.18,222.01,0)
EDIT WINDOW STYLE^S^0:fsMDIChild;2:fsNormal;3:fsStayOnTop;^IEDIT;1^Q
"^DD",2006.18,2006.18,222.01,3)
Select style for the Image Index Edit window.
"^DD",2006.18,2006.18,222.01,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,222.01,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,222.01,21,0)
^^3^3^3090213^
"^DD",2006.18,2006.18,222.01,21,1,0)
Value of this field controls style of the Image
"^DD",2006.18,2006.18,222.01,21,2,0)
Index Edit window of clinical client applications
"^DD",2006.18,2006.18,222.01,21,3,0)
(Display, Capture, etc.).
"^DD",2006.18,2006.18,222.01,23,0)
^^1^1^3090213^
"^DD",2006.18,2006.18,222.01,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,222.01,"DT")
3090127
"^DD",2006.18,2006.18,222.02,0)
EDIT LEFT^NJ4,0^^IEDIT;2^K:+X'=X!(X>4000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,222.02,3)
Type a Number between 0 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,222.02,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,222.02,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,222.02,21,0)
^^2^2^3090213^
"^DD",2006.18,2006.18,222.02,21,1,0)
This field stores the horizontal coordinate of the
"^DD",2006.18,2006.18,222.02,21,2,0)
left side of the Image Index Edit window.
"^DD",2006.18,2006.18,222.02,23,0)
^^1^1^3090213^
"^DD",2006.18,2006.18,222.02,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,222.02,"DT")
3090127
"^DD",2006.18,2006.18,222.03,0)
EDIT TOP^NJ4,0^^IEDIT;3^K:+X'=X!(X>4000)!(X<0)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,222.03,3)
Type a Number between 0 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,222.03,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,222.03,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,222.03,21,0)
^^2^2^3090302^
"^DD",2006.18,2006.18,222.03,21,1,0)
This field stores the vertical coordinate of the
"^DD",2006.18,2006.18,222.03,21,2,0)
top side of the Image Index Edit window.
"^DD",2006.18,2006.18,222.03,23,0)
^.001^1^1^3090302^^
"^DD",2006.18,2006.18,222.03,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,222.03,"DT")
3090127
"^DD",2006.18,2006.18,222.04,0)
EDIT WIDTH^NJ4,0^^IEDIT;4^K:+X'=X!(X>4000)!(X<10)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,222.04,3)
Type a Number between 10 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,222.04,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,222.04,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,222.04,21,0)
^^2^2^3090213^
"^DD",2006.18,2006.18,222.04,21,1,0)
This field stores the width (in pixels) of the
"^DD",2006.18,2006.18,222.04,21,2,0)
Image Index Edit window.
"^DD",2006.18,2006.18,222.04,23,0)
^^1^1^3090213^
"^DD",2006.18,2006.18,222.04,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,222.04,"DT")
3090127
"^DD",2006.18,2006.18,222.05,0)
EDIT HEIGHT^NJ4,0^^IEDIT;5^K:+X'=X!(X>4000)!(X<10)!(X?.E1"."1N.N) X
"^DD",2006.18,2006.18,222.05,3)
Type a Number between 10 and 4000, 0 Decimal Digits
"^DD",2006.18,2006.18,222.05,20,0)
^.3LA^1^1
"^DD",2006.18,2006.18,222.05,20,1,0)
MAG*3*93
"^DD",2006.18,2006.18,222.05,21,0)
^^2^2^3090213^
"^DD",2006.18,2006.18,222.05,21,1,0)
This field stores the height (in pixels) of the
"^DD",2006.18,2006.18,222.05,21,2,0)
Image Index Edit window.
"^DD",2006.18,2006.18,222.05,23,0)
^^1^1^3090213^
"^DD",2006.18,2006.18,222.05,23,1,0)
Added by the patch MAG*3*93.
"^DD",2006.18,2006.18,222.05,"DT")
3090127
"^DD",2006.81,2006.81,5,0)
DISPLAY APP DTTM^D^^0;6^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2006.81,2006.81,5,3)
Enter date/time of the Clinical Display application build.
"^DD",2006.81,2006.81,5,8.5)
@
"^DD",2006.81,2006.81,5,9)
@
"^DD",2006.81,2006.81,5,20,0)
^.3LA^1^1
"^DD",2006.81,2006.81,5,20,1,0)
CLIENT DATE/TIME
"^DD",2006.81,2006.81,5,21,0)
^^5^5^3090302^
"^DD",2006.81,2006.81,5,21,1,0)
This field indicates when the Clinical Display 
"^DD",2006.81,2006.81,5,21,2,0)
client application, which is installed on this
"^DD",2006.81,2006.81,5,21,3,0)
workstation, was built. This data is reported by
"^DD",2006.81,2006.81,5,21,4,0)
the application when it connects to the server
"^DD",2006.81,2006.81,5,21,5,0)
from the workstation.
"^DD",2006.81,2006.81,5,23,0)
^.001^1^1^3090302^^^^
"^DD",2006.81,2006.81,5,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,5,"DT")
2970515
"^DD",2006.81,2006.81,5.3,0)
TELEREADER APP DTTM^D^^2;2^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2006.81,2006.81,5.3,3)
Enter date/time of the TeleReader application build.
"^DD",2006.81,2006.81,5.3,8.5)
@
"^DD",2006.81,2006.81,5.3,9)
@
"^DD",2006.81,2006.81,5.3,20,0)
^.3LA^1^1
"^DD",2006.81,2006.81,5.3,20,1,0)
CLIENT DATE/TIME
"^DD",2006.81,2006.81,5.3,21,0)
^^5^5^3090302^
"^DD",2006.81,2006.81,5.3,21,1,0)
This field indicates when the TeleReader client
"^DD",2006.81,2006.81,5.3,21,2,0)
application, which is installed on this
"^DD",2006.81,2006.81,5.3,21,3,0)
workstation, was built. This data is reported by
"^DD",2006.81,2006.81,5.3,21,4,0)
the application when it connects to the server
"^DD",2006.81,2006.81,5.3,21,5,0)
from the workstation.
"^DD",2006.81,2006.81,5.3,23,0)
^.001^3^3^3090302^^^
"^DD",2006.81,2006.81,5.3,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,5.3,23,2,0)
 
"^DD",2006.81,2006.81,5.3,23,3,0)
Added by the patch MAG*3*93.
"^DD",2006.81,2006.81,5.3,"DT")
3080512
"^DD",2006.81,2006.81,5.5,0)
CAPTURE APP DTTM^D^^0;5^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2006.81,2006.81,5.5,3)
Enter date/time of the Clinical Capture application build.
"^DD",2006.81,2006.81,5.5,8.5)
@
"^DD",2006.81,2006.81,5.5,9)
@
"^DD",2006.81,2006.81,5.5,20,0)
^.3LA^2^2
"^DD",2006.81,2006.81,5.5,20,1,0)
CLIENT DATE/TIME
"^DD",2006.81,2006.81,5.5,20,2,0)
MAG*3*93
"^DD",2006.81,2006.81,5.5,21,0)
^^5^5^3090302^
"^DD",2006.81,2006.81,5.5,21,1,0)
This field indicates when the Clinical Capture 
"^DD",2006.81,2006.81,5.5,21,2,0)
client application, which is installed on this
"^DD",2006.81,2006.81,5.5,21,3,0)
workstation, was built. This data is reported by
"^DD",2006.81,2006.81,5.5,21,4,0)
the application when it connects to the server
"^DD",2006.81,2006.81,5.5,21,5,0)
from the workstation.
"^DD",2006.81,2006.81,5.5,23,0)
^.001^3^3^3090302^^^^
"^DD",2006.81,2006.81,5.5,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,5.5,23,2,0)
 
"^DD",2006.81,2006.81,5.5,23,3,0)
Field number is changed (from 4) by the patch MAG*3*93.
"^DD",2006.81,2006.81,5.5,"DT")
3080512
"^DD",2006.81,2006.81,5.7,0)
VISTARAD APP DTTM^D^^2;3^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2006.81,2006.81,5.7,3)
Enter date/time of the VistA RAD application build.
"^DD",2006.81,2006.81,5.7,8.5)
@
"^DD",2006.81,2006.81,5.7,9)
@
"^DD",2006.81,2006.81,5.7,20,0)
^.3LA^2^2
"^DD",2006.81,2006.81,5.7,20,1,0)
CLIENT DATE/TIME
"^DD",2006.81,2006.81,5.7,20,2,0)
MAG*3*93
"^DD",2006.81,2006.81,5.7,21,0)
^^5^5^3090302^
"^DD",2006.81,2006.81,5.7,21,1,0)
This field indicates when the VistA RAD client
"^DD",2006.81,2006.81,5.7,21,2,0)
application, which is installed on this
"^DD",2006.81,2006.81,5.7,21,3,0)
workstation, was built. This data is reported by
"^DD",2006.81,2006.81,5.7,21,4,0)
the application when it connects to the server
"^DD",2006.81,2006.81,5.7,21,5,0)
from the workstation.
"^DD",2006.81,2006.81,5.7,23,0)
^.001^3^3^3090302^^^^
"^DD",2006.81,2006.81,5.7,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,5.7,23,2,0)
 
"^DD",2006.81,2006.81,5.7,23,3,0)
Added by the patch MAG*3*93.
"^DD",2006.81,2006.81,5.7,"DT")
3080512
"^DD",2006.81,2006.81,5.9,0)
CLINICAL UTILITIES APP DTTM^D^^2;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",2006.81,2006.81,5.9,3)
Enter date/time of the Clinical Utilities application build.
"^DD",2006.81,2006.81,5.9,8.5)
@
"^DD",2006.81,2006.81,5.9,9)
@
"^DD",2006.81,2006.81,5.9,20,0)
^.3LA^2^2
"^DD",2006.81,2006.81,5.9,20,1,0)
CLIENT DATE/TIME
"^DD",2006.81,2006.81,5.9,20,2,0)
MAG*3*93
"^DD",2006.81,2006.81,5.9,21,0)
^^5^5^3090302^
"^DD",2006.81,2006.81,5.9,21,1,0)
This field indicates when the Clinical Utilities
"^DD",2006.81,2006.81,5.9,21,2,0)
client application, which is installed on this
"^DD",2006.81,2006.81,5.9,21,3,0)
workstation, was built. This data is reported by
"^DD",2006.81,2006.81,5.9,21,4,0)
the application when it connects to the server
"^DD",2006.81,2006.81,5.9,21,5,0)
from the workstation.
"^DD",2006.81,2006.81,5.9,23,0)
^.001^3^3^3090302^^^^
"^DD",2006.81,2006.81,5.9,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,5.9,23,2,0)
 
"^DD",2006.81,2006.81,5.9,23,3,0)
Added by the patch MAG*3*93.
"^DD",2006.81,2006.81,5.9,"DT")
3080512
"^DD",2006.81,2006.81,9,0)
DISPLAY VERSION^F^^0;9^K:$L(X)>20!($L(X)<5) X
"^DD",2006.81,2006.81,9,3)
Enter the version in the Major.Minor.Patch.Build format (Build is optional).
"^DD",2006.81,2006.81,9,8.5)
@
"^DD",2006.81,2006.81,9,9)
@
"^DD",2006.81,2006.81,9,20,0)
^.3LA^2^2
"^DD",2006.81,2006.81,9,20,1,0)
CLIENT VERSION
"^DD",2006.81,2006.81,9,20,2,0)
MAG*3*93
"^DD",2006.81,2006.81,9,21,0)
^.001^3^3^3081217^^
"^DD",2006.81,2006.81,9,21,1,0)
This field stores the version number reported by
"^DD",2006.81,2006.81,9,21,2,0)
the Clinical Display client during its latest
"^DD",2006.81,2006.81,9,21,3,0)
execution from the workstation.
"^DD",2006.81,2006.81,9,23,0)
^.001^1^1^3081217^^
"^DD",2006.81,2006.81,9,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,9,"DT")
3080509
"^DD",2006.81,2006.81,9.3,0)
TELEREADER VERSION^F^^0;16^K:$L(X)>20!($L(X)<5) X
"^DD",2006.81,2006.81,9.3,3)
Enter the version in the Major.Minor.Patch.Build format (Build is optional).
"^DD",2006.81,2006.81,9.3,8.5)
@
"^DD",2006.81,2006.81,9.3,9)
@
"^DD",2006.81,2006.81,9.3,20,0)
^.3LA^2^2
"^DD",2006.81,2006.81,9.3,20,1,0)
CLIENT VERSION
"^DD",2006.81,2006.81,9.3,20,2,0)
MAG*3*93
"^DD",2006.81,2006.81,9.3,21,0)
^.001^3^3^3090224^^^
"^DD",2006.81,2006.81,9.3,21,1,0)
This field stores the version number reported by
"^DD",2006.81,2006.81,9.3,21,2,0)
the TeleReader client during its latest execution
"^DD",2006.81,2006.81,9.3,21,3,0)
from the workstation.
"^DD",2006.81,2006.81,9.3,23,0)
^.001^3^3^3090224^^^
"^DD",2006.81,2006.81,9.3,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,9.3,23,2,0)
 
"^DD",2006.81,2006.81,9.3,23,3,0)
Added by the patch MAG*3*93.
"^DD",2006.81,2006.81,9.3,"DT")
3090224
"^DD",2006.81,2006.81,9.5,0)
CAPTURE VERSION^F^^0;13^K:$L(X)>20!($L(X)<5) X
"^DD",2006.81,2006.81,9.5,3)
Enter the version in the Major.Minor.Patch.Build format (Build is optional).
"^DD",2006.81,2006.81,9.5,8.5)
@
"^DD",2006.81,2006.81,9.5,9)
@
"^DD",2006.81,2006.81,9.5,20,0)
^.3LA^2^2
"^DD",2006.81,2006.81,9.5,20,1,0)
CLIENT VERSION
"^DD",2006.81,2006.81,9.5,20,2,0)
MAG*3*93
"^DD",2006.81,2006.81,9.5,21,0)
^.001^3^3^3081217^^
"^DD",2006.81,2006.81,9.5,21,1,0)
This field stores the version number reported by
"^DD",2006.81,2006.81,9.5,21,2,0)
the Clinical Capture client during its latest
"^DD",2006.81,2006.81,9.5,21,3,0)
execution from the workstation.
"^DD",2006.81,2006.81,9.5,23,0)
^.001^1^1^3081217^^
"^DD",2006.81,2006.81,9.5,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,9.5,"DT")
3080509
"^DD",2006.81,2006.81,9.7,0)
VISTARAD VERSION^F^^0;15^K:$L(X)>30!($L(X)<3) X
"^DD",2006.81,2006.81,9.7,3)
Enter the version in the Major.Minor.Patch.Build format (Build is optional).
"^DD",2006.81,2006.81,9.7,8.5)
@
"^DD",2006.81,2006.81,9.7,9)
@
"^DD",2006.81,2006.81,9.7,20,0)
^.3LA^1^1
"^DD",2006.81,2006.81,9.7,20,1,0)
CLIENT VERSION
"^DD",2006.81,2006.81,9.7,21,0)
^.001^3^3^3081217^^^^
"^DD",2006.81,2006.81,9.7,21,1,0)
This field stores the version number reported by
"^DD",2006.81,2006.81,9.7,21,2,0)
the VistA RAD software during its latest execution
"^DD",2006.81,2006.81,9.7,21,3,0)
from the workstation.
"^DD",2006.81,2006.81,9.7,"DT")
3081217
"^DD",2006.81,2006.81,9.9,0)
CLINICAL UTILITIES VERSION^F^^0;17^K:$L(X)>20!($L(X)<5) X
"^DD",2006.81,2006.81,9.9,3)
Enter the version in the Major.Minor.Patch.Build format (Build is optional).
"^DD",2006.81,2006.81,9.9,8.5)
@
"^DD",2006.81,2006.81,9.9,9)
@
"^DD",2006.81,2006.81,9.9,20,0)
^.3LA^2^2
"^DD",2006.81,2006.81,9.9,20,1,0)
CLIENT VERSION
"^DD",2006.81,2006.81,9.9,20,2,0)
MAG*3*93
"^DD",2006.81,2006.81,9.9,21,0)
^.001^3^3^3081217^^
"^DD",2006.81,2006.81,9.9,21,1,0)
This field stores the version number reported by
"^DD",2006.81,2006.81,9.9,21,2,0)
the Clinical Utilities client during its latest
"^DD",2006.81,2006.81,9.9,21,3,0)
execution from the workstation.
"^DD",2006.81,2006.81,9.9,23,0)
^.001^3^3^3081217^^
"^DD",2006.81,2006.81,9.9,23,1,0)
See the MAGG WRKS UPDATES remote procedure for details.
"^DD",2006.81,2006.81,9.9,23,2,0)
 
"^DD",2006.81,2006.81,9.9,23,3,0)
Added by the patch MAG*3*93.
"^DD",2006.81,2006.81,9.9,"DT")
3080509
"^DIC",2005.88,2005.88,0)
MAG REASON^2005.88
"^DIC",2005.88,2005.88,0,"GL")
^MAG(2005.88,
"^DIC",2005.88,2005.88,"%",0)
^1.005^^0
"^DIC",2005.88,2005.88,"%D",0)
^1.001^25^25^3090204^^
"^DIC",2005.88,2005.88,"%D",1,0)
 +---------------------------------------------------------------+
"^DIC",2005.88,2005.88,"%D",2,0)
 |                                                               |
"^DIC",2005.88,2005.88,"%D",3,0)
 | Property of the US Government.                                |
"^DIC",2005.88,2005.88,"%D",4,0)
 | No permission to copy or redistribute this software is given. |
"^DIC",2005.88,2005.88,"%D",5,0)
 | Use of unreleased versions of this software requires the user |
"^DIC",2005.88,2005.88,"%D",6,0)
 | to execute a written test agreement with the VistA Imaging    |
"^DIC",2005.88,2005.88,"%D",7,0)
 | Development Office of the Department of Veterans Affairs,     |
"^DIC",2005.88,2005.88,"%D",8,0)
 | telephone (301) 734-0100.                                     |
"^DIC",2005.88,2005.88,"%D",9,0)
 |                                                               |
"^DIC",2005.88,2005.88,"%D",10,0)
 | The Food and Drug Administration classifies this software as  |
"^DIC",2005.88,2005.88,"%D",11,0)
 | a medical device.  As such, it may not be changed in any way. |
"^DIC",2005.88,2005.88,"%D",12,0)
 | Modifications to this software may result in an adulterated   |
"^DIC",2005.88,2005.88,"%D",13,0)
 | medical device under 21CFR820, the use of which is considered |
"^DIC",2005.88,2005.88,"%D",14,0)
 | to be a violation of US Federal Statutes.                     |
"^DIC",2005.88,2005.88,"%D",15,0)
 |                                                               |
"^DIC",2005.88,2005.88,"%D",16,0)
 +---------------------------------------------------------------+
"^DIC",2005.88,2005.88,"%D",17,0)
 
"^DIC",2005.88,2005.88,"%D",18,0)
This file stores valid reasons (justifications) for actions performed on
"^DIC",2005.88,2005.88,"%D",19,0)
images: copying, printing, etc.
"^DIC",2005.88,2005.88,"%D",20,0)
 
"^DIC",2005.88,2005.88,"%D",21,0)
Once a reason is referenced by a record of other file (e.g. IMAGE file 
"^DIC",2005.88,2005.88,"%D",22,0)
(#2005)), it cannot be deleted. Use the DATE OF INACTIVATION field (.03) 
"^DIC",2005.88,2005.88,"%D",23,0)
to exclude the reason from the list presented to the users.
"^DIC",2005.88,2005.88,"%D",24,0)
 
"^DIC",2005.88,2005.88,"%D",25,0)
This file is defined by the patch MAG*3*93.
"^DIC",2005.88,"B","MAG REASON",2005.88)

**END**
**END**
