Released HL*1.6*161 SEQ #127
Extracted from mail message
**KIDS**:HL*1.6*161^

**INSTALL NAME**
HL*1.6*161
"BLD",9384,0)
HL*1.6*161^HEALTH LEVEL SEVEN^0^3130919^y
"BLD",9384,1,0)
^^9^9^3130603^
"BLD",9384,1,1,0)
This patch addresses the following:
"BLD",9384,1,2,0)
 
"BLD",9384,1,3,0)
-Problems caused while editing active HL Logical Links
"BLD",9384,1,4,0)
-Problems with "AE" cross reference leading to incorrect setting
"BLD",9384,1,5,0)
 values and inability to delete.
"BLD",9384,1,6,0)
-Incorrect documentation for HL7 API GENACK^HLMA1 and potential
"BLD",9384,1,7,0)
 <UNDEFINED> error.
"BLD",9384,1,8,0)
-Extrinsic function NEWEVENT^HLEVAPI could potentially execute
"BLD",9384,1,9,0)
 without returning a value resulting in a <COMMAND> error. 
"BLD",9384,4,0)
^9.64PA^779.4^1
"BLD",9384,4,779.4,0)
779.4
"BLD",9384,4,779.4,2,0)
^9.641^779.41^1
"BLD",9384,4,779.4,2,779.41,0)
RECIPIENTS  (sub-file)
"BLD",9384,4,779.4,2,779.41,1,0)
^9.6411^.01^1
"BLD",9384,4,779.4,2,779.41,1,.01,0)
RECEIVING APPLICATION
"BLD",9384,4,779.4,222)
y^n^p^^^^n^^n
"BLD",9384,4,779.4,224)

"BLD",9384,4,"APDD",779.4,779.41)

"BLD",9384,4,"APDD",779.4,779.41,.01)

"BLD",9384,4,"B",779.4,779.4)

"BLD",9384,6.3)
6
"BLD",9384,"ABPKG")
n
"BLD",9384,"KRN",0)
^9.67PA^779.2^20
"BLD",9384,"KRN",.4,0)
.4
"BLD",9384,"KRN",.401,0)
.401
"BLD",9384,"KRN",.402,0)
.402
"BLD",9384,"KRN",.403,0)
.403
"BLD",9384,"KRN",.5,0)
.5
"BLD",9384,"KRN",.84,0)
.84
"BLD",9384,"KRN",3.6,0)
3.6
"BLD",9384,"KRN",3.8,0)
3.8
"BLD",9384,"KRN",9.2,0)
9.2
"BLD",9384,"KRN",9.8,0)
9.8
"BLD",9384,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9384,"KRN",9.8,"NM",1,0)
HLUOPT^^0^B20065931
"BLD",9384,"KRN",9.8,"NM",2,0)
HLMA1^^0^B8926861
"BLD",9384,"KRN",9.8,"NM",3,0)
HLEVAPI^^0^B63841968
"BLD",9384,"KRN",9.8,"NM","B","HLEVAPI",3)

"BLD",9384,"KRN",9.8,"NM","B","HLMA1",2)

"BLD",9384,"KRN",9.8,"NM","B","HLUOPT",1)

"BLD",9384,"KRN",19,0)
19
"BLD",9384,"KRN",19.1,0)
19.1
"BLD",9384,"KRN",101,0)
101
"BLD",9384,"KRN",409.61,0)
409.61
"BLD",9384,"KRN",771,0)
771
"BLD",9384,"KRN",779.2,0)
779.2
"BLD",9384,"KRN",870,0)
870
"BLD",9384,"KRN",8989.51,0)
8989.51
"BLD",9384,"KRN",8989.52,0)
8989.52
"BLD",9384,"KRN",8994,0)
8994
"BLD",9384,"KRN","B",.4,.4)

"BLD",9384,"KRN","B",.401,.401)

"BLD",9384,"KRN","B",.402,.402)

"BLD",9384,"KRN","B",.403,.403)

"BLD",9384,"KRN","B",.5,.5)

"BLD",9384,"KRN","B",.84,.84)

"BLD",9384,"KRN","B",3.6,3.6)

"BLD",9384,"KRN","B",3.8,3.8)

"BLD",9384,"KRN","B",9.2,9.2)

"BLD",9384,"KRN","B",9.8,9.8)

"BLD",9384,"KRN","B",19,19)

"BLD",9384,"KRN","B",19.1,19.1)

"BLD",9384,"KRN","B",101,101)

"BLD",9384,"KRN","B",409.61,409.61)

"BLD",9384,"KRN","B",771,771)

"BLD",9384,"KRN","B",779.2,779.2)

"BLD",9384,"KRN","B",870,870)

"BLD",9384,"KRN","B",8989.51,8989.51)

"BLD",9384,"KRN","B",8989.52,8989.52)

"BLD",9384,"KRN","B",8994,8994)

"BLD",9384,"QDEF")
^^^^^^^^^^YES
"BLD",9384,"QUES",0)
^9.62^^
"BLD",9384,"REQB",0)
^9.611^3^3
"BLD",9384,"REQB",1,0)
HL*1.6*57^1
"BLD",9384,"REQB",2,0)
HL*1.6*133^1
"BLD",9384,"REQB",3,0)
HL*1.6*146^1
"BLD",9384,"REQB","B","HL*1.6*133",2)

"BLD",9384,"REQB","B","HL*1.6*146",3)

"BLD",9384,"REQB","B","HL*1.6*57",1)

"FIA",779.4)
HLO SUBSCRIPTION REGISTRY
"FIA",779.4,0)
^HLD(779.4,
"FIA",779.4,0,0)
779.4
"FIA",779.4,0,1)
y^n^p^^^^n^^n
"FIA",779.4,0,10)

"FIA",779.4,0,11)

"FIA",779.4,0,"RLRO")

"FIA",779.4,0,"VR")
1.6^HL
"FIA",779.4,779.4)
1
"FIA",779.4,779.4,20)

"FIA",779.4,779.41)
1
"FIA",779.4,779.41,.01)

"IX",779.4,779.41,"AD",0)
779.41^AD^Used to determine if the recipient is already on the subscription list.^MU^^F^IR^I^779.41^^^^^S
"IX",779.4,779.41,"AD",1)
S ^HLD(779.4,DA(1),2,"AD",X2(1),+X2(2),X2(3),DA)=""
"IX",779.4,779.41,"AD",1.4)

"IX",779.4,779.41,"AD",2)
K ^HLD(779.4,DA(1),2,"AD",X1(1),+X1(2),X1(3),DA)
"IX",779.4,779.41,"AD",2.4)

"IX",779.4,779.41,"AD",11.1,0)
^.114IA^3^3
"IX",779.4,779.41,"AD",11.1,1,0)
1^F^779.41^.01^^1^F
"IX",779.4,779.41,"AD",11.1,2,0)
2^C^^^10^2^F
"IX",779.4,779.41,"AD",11.1,2,1.5)
S X=$$TLINK^HLOASUB(DA(1),DA)
"IX",779.4,779.41,"AD",11.1,2,3)

"IX",779.4,779.41,"AD",11.1,3,0)
3^C^^^^3^F
"IX",779.4,779.41,"AD",11.1,3,1.5)
S X=$TR($P(^HLD(779.4,DA(1),2,DA,0),"^",3,5),"^","")
"IX",779.4,779.41,"AE",0)
779.41^AE^Used to determine if a subscriber is on the subscriber list.^R^^R^IR^I^779.41^^^^^S
"IX",779.4,779.41,"AE",.1,0)
^^8^8^3130506^
"IX",779.4,779.41,"AE",.1,1,0)
The index is:
"IX",779.4,779.41,"AE",.1,2,0)
 
"IX",779.4,779.41,"AE",.1,3,0)
^HLD(779.4,DA(1),2,"AE", RECEIVING APPLICATION, +FACILITY LOGICAL LINK, 
"IX",779.4,779.41,"AE",.1,4,0)
+MIDDLEWARE LOGICAL LINK)=""
"IX",779.4,779.41,"AE",.1,5,0)
 
"IX",779.4,779.41,"AE",.1,6,0)
 
"IX",779.4,779.41,"AE",.1,7,0)
**Note that if the logical link fields are null, then their place in the 
"IX",779.4,779.41,"AE",.1,8,0)
index will be populated with zero.
"IX",779.4,779.41,"AE",1)
S ^HLD(779.4,DA(1),2,"AE",$E(X(1),1,30),X(4),X(5),DA)=""
"IX",779.4,779.41,"AE",2)
K ^HLD(779.4,DA(1),2,"AE",$E(X(1),1,30),X(4),X(5),DA)
"IX",779.4,779.41,"AE",2.5)
K ^HLD(779.4,DA(1),2,"AE")
"IX",779.4,779.41,"AE",11.1,0)
^.114IA^5^5
"IX",779.4,779.41,"AE",11.1,1,0)
1^F^779.41^.01^30^1^F
"IX",779.4,779.41,"AE",11.1,1,3)

"IX",779.4,779.41,"AE",11.1,2,0)
2^F^779.41^.021^10^^F
"IX",779.4,779.41,"AE",11.1,2,3)

"IX",779.4,779.41,"AE",11.1,3,0)
3^F^779.41^.02^10^^F
"IX",779.4,779.41,"AE",11.1,3,3)

"IX",779.4,779.41,"AE",11.1,4,0)
4^C^^^^2
"IX",779.4,779.41,"AE",11.1,4,1.5)
S X=+X(2)
"IX",779.4,779.41,"AE",11.1,5,0)
5^C^^^^3
"IX",779.4,779.41,"AE",11.1,5,1.5)
S X=+X(3)
"MBREQ")
0
"PKG",243,-1)
1^1
"PKG",243,0)
HEALTH LEVEL SEVEN^HL^DHCP IMPLEMENTATION OF HEALTH LEVEL SEVEN
"PKG",243,20,0)
^9.402P^^
"PKG",243,22,0)
^9.49I^1^1
"PKG",243,22,1,0)
1.6^2951013^2981102^66481
"PKG",243,22,1,"PAH",1,0)
161^3130919
"PKG",243,22,1,"PAH",1,1,0)
^^9^9^3130919
"PKG",243,22,1,"PAH",1,1,1,0)
This patch addresses the following:
"PKG",243,22,1,"PAH",1,1,2,0)
 
"PKG",243,22,1,"PAH",1,1,3,0)
-Problems caused while editing active HL Logical Links
"PKG",243,22,1,"PAH",1,1,4,0)
-Problems with "AE" cross reference leading to incorrect setting
"PKG",243,22,1,"PAH",1,1,5,0)
 values and inability to delete.
"PKG",243,22,1,"PAH",1,1,6,0)
-Incorrect documentation for HL7 API GENACK^HLMA1 and potential
"PKG",243,22,1,"PAH",1,1,7,0)
 <UNDEFINED> error.
"PKG",243,22,1,"PAH",1,1,8,0)
-Extrinsic function NEWEVENT^HLEVAPI could potentially execute
"PKG",243,22,1,"PAH",1,1,9,0)
 without returning a value resulting in a <COMMAND> error. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","HLEVAPI")
0^3^B63841968^B63820662
"RTN","HLEVAPI",1,0)
HLEVAPI ;O-OIFO/LJA - Event Monitor APIs ;02/04/2004 14:42
"RTN","HLEVAPI",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**109,161**;Oct 13, 1995;Build 6
"RTN","HLEVAPI",3,0)
 ;
"RTN","HLEVAPI",4,0)
 ; Routine   Supported APIs...
"RTN","HLEVAPI",5,0)
 ; -----------------------------------------------------------------
"RTN","HLEVAPI",6,0)
 ; HLEVAPI   START(VAR)
"RTN","HLEVAPI",7,0)
 ; HLEVAPI   CHECKIN
"RTN","HLEVAPI",8,0)
 ; HLEVAPI   CHECKOUT
"RTN","HLEVAPI",9,0)
 ; HLEVAPI   ABORT(STATUS,APPLSTAT)
"RTN","HLEVAPI",10,0)
 ; HLEVAPI   MAILIT
"RTN","HLEVAPI",11,0)
 ; HLEVAPI   VARIABLE
"RTN","HLEVAPI",12,0)
 ; -----------------------------------------------------------------
"RTN","HLEVAPI",13,0)
 ; HLEVAPI0  ONOFFM(HLEVIENE) 
"RTN","HLEVAPI",14,0)
 ; -----------------------------------------------------------------
"RTN","HLEVAPI",15,0)
 ; HLEVAPI1  APPSTAT(STATUS)
"RTN","HLEVAPI",16,0)
 ; HLEVAPI1  MSGTEXT(GBL)
"RTN","HLEVAPI",17,0)
 ; HLEVAPI1  RUNDIARY(GBL)
"RTN","HLEVAPI",18,0)
 ;
"RTN","HLEVAPI",19,0)
 ;
"RTN","HLEVAPI",20,0)
 ; Test server code with TEST^HLEVSRV1 (Also HLEVMNU)
"RTN","HLEVAPI",21,0)
 ; Test monitor code with TEST^HLEVUTI1 (Also HLEVMNU)
"RTN","HLEVAPI",22,0)
 ;
"RTN","HLEVAPI",23,0)
 ;
"RTN","HLEVAPI",24,0)
 ;                     EVENT CODE 
"RTN","HLEVAPI",25,0)
 ;
"RTN","HLEVAPI",26,0)
VARIABLE(HLEVIENJ,HLVAR) ; Store passed in variables...
"RTN","HLEVAPI",27,0)
 ; HLVAR can be the name of a variable, like "CT", or it can be
"RTN","HLEVAPI",28,0)
 ; a list of variables passed by reference.
"RTN","HLEVAPI",29,0)
 N VAL,VAR
"RTN","HLEVAPI",30,0)
 ;
"RTN","HLEVAPI",31,0)
 D DEBUG^HLEVAPI2("VARIABLE") ; Debug data created conditionally
"RTN","HLEVAPI",32,0)
 ;
"RTN","HLEVAPI",33,0)
 ; Stop all event monitoring to enable on-site debugging...
"RTN","HLEVAPI",34,0)
 QUIT:$G(^TMP("HLEVFLAG",$J))["STOP"  ;->
"RTN","HLEVAPI",35,0)
 ;
"RTN","HLEVAPI",36,0)
 QUIT:$G(^HLEV(776,+$G(HLEVIENJ),0))']""  ;->
"RTN","HLEVAPI",37,0)
 ;
"RTN","HLEVAPI",38,0)
 ; Loop thru array...
"RTN","HLEVAPI",39,0)
 S VAR=""
"RTN","HLEVAPI",40,0)
 F  S VAR=$O(HLVAR(VAR)) Q:VAR']""  D
"RTN","HLEVAPI",41,0)
 .  I $E(VAR,$L(VAR))="*" D  QUIT  ;->
"RTN","HLEVAPI",42,0)
 .  .  QUIT:VAR="*"  ;->
"RTN","HLEVAPI",43,0)
 .  .  D VARSTAR(HLEVIENJ,VAR)
"RTN","HLEVAPI",44,0)
 .  D STOREIT(HLEVIENJ,VAR,$S($D(@VAR):@VAR,1:"---"),$G(HLVAR(VAR)))
"RTN","HLEVAPI",45,0)
 ;
"RTN","HLEVAPI",46,0)
 Q
"RTN","HLEVAPI",47,0)
 ;
"RTN","HLEVAPI",48,0)
VARSTAR(HLEVIENJ,VAR) ; Store VAR* variables...
"RTN","HLEVAPI",49,0)
 N GBL,LP,REF,ROOT,X,X1
"RTN","HLEVAPI",50,0)
 ;
"RTN","HLEVAPI",51,0)
 KILL ^TMP("HLORDER",$J)
"RTN","HLEVAPI",52,0)
 S GBL=$NA(^TMP("HLORDER",$J)),ROOT=$E(GBL,1,$L(GBL)-1)_","
"RTN","HLEVAPI",53,0)
 S X=ROOT,X1(VAR)="" D ORDER^%ZOSV
"RTN","HLEVAPI",54,0)
 QUIT:'$D(GBL)  ;->
"RTN","HLEVAPI",55,0)
 ;
"RTN","HLEVAPI",56,0)
 ; $Q thru global...
"RTN","HLEVAPI",57,0)
 S LP=GBL
"RTN","HLEVAPI",58,0)
 F  S LP=$Q(@LP) Q:LP'[ROOT  D
"RTN","HLEVAPI",59,0)
 .  S REF=$P(LP,ROOT,2) QUIT:REF'[")"  ;->
"RTN","HLEVAPI",60,0)
 .  S REF=$P($TR(REF,"""",""),")") QUIT:REF']""  ;->
"RTN","HLEVAPI",61,0)
 .  I $L(REF)>10 S REF=$E(REF,1,9)_"~"
"RTN","HLEVAPI",62,0)
 .  D STOREIT(+HLEVIENJ,REF,@LP)
"RTN","HLEVAPI",63,0)
 ;
"RTN","HLEVAPI",64,0)
 Q
"RTN","HLEVAPI",65,0)
 ;
"RTN","HLEVAPI",66,0)
STOREIT(HLEVIENJ,VAR,VAL,EXPL) ; Store VAR in 776...
"RTN","HLEVAPI",67,0)
 N MIEN
"RTN","HLEVAPI",68,0)
 S EXPL=$G(EXPL)
"RTN","HLEVAPI",69,0)
 S MIEN=$O(^HLEV(776,+HLEVIENJ,52,"B",VAR,0))
"RTN","HLEVAPI",70,0)
 I MIEN'>0 S MIEN=$O(^HLEV(776,+HLEVIENJ,52,":"),-1)+1
"RTN","HLEVAPI",71,0)
 S ^HLEV(776,+HLEVIENJ,52,+MIEN,0)=VAR_$S(EXPL]"":U_EXPL,1:"")
"RTN","HLEVAPI",72,0)
 S ^HLEV(776,+HLEVIENJ,52,+MIEN,52)=VAL
"RTN","HLEVAPI",73,0)
 S ^HLEV(776,+HLEVIENJ,52,"B",VAR,MIEN)=""
"RTN","HLEVAPI",74,0)
 S MIEN=$O(^HLEV(776,+HLEVIENJ,52,":"),-1)
"RTN","HLEVAPI",75,0)
 I MIEN'>0 KILL ^HLEV(776,+HLEVIENJ,52) QUIT  ;->
"RTN","HLEVAPI",76,0)
 S ^HLEV(776,+HLEVIENJ,52,0)="^776.003A^"_MIEN_U_MIEN
"RTN","HLEVAPI",77,0)
 Q
"RTN","HLEVAPI",78,0)
 ;
"RTN","HLEVAPI",79,0)
STOREVAR ; Update VARIABLE VALUE multiple in 776...
"RTN","HLEVAPI",80,0)
 ; HLEVIENJ -- req
"RTN","HLEVAPI",81,0)
 ;
"RTN","HLEVAPI",82,0)
 ; Stop all event monitoring to enable on-site debugging...
"RTN","HLEVAPI",83,0)
 QUIT:$G(^TMP("HLEVFLAG",$J))["STOP"  ;->
"RTN","HLEVAPI",84,0)
 ;
"RTN","HLEVAPI",85,0)
 N MIEN,VAL,VAR
"RTN","HLEVAPI",86,0)
 ; Store variable values in 776...
"RTN","HLEVAPI",87,0)
 S VAR=""
"RTN","HLEVAPI",88,0)
 F  S VAR=$O(HLEVAR(VAR)) Q:VAR']""  D
"RTN","HLEVAPI",89,0)
 .  S VAL=$S($D(@VAR):@VAR,1:"---")
"RTN","HLEVAPI",90,0)
 .  S MIEN=$O(^HLEV(776,+HLEVIENJ,52,"B",VAR,0))
"RTN","HLEVAPI",91,0)
 .  I MIEN'>0 S MIEN=$O(^HLEV(776,+HLEVIENJ,52,":"),-1)+1
"RTN","HLEVAPI",92,0)
 .  S ^HLEV(776,+HLEVIENJ,52,+MIEN,0)=VAR_U_HLEVAR(VAR)
"RTN","HLEVAPI",93,0)
 .  S ^HLEV(776,+HLEVIENJ,52,+MIEN,52)=VAL
"RTN","HLEVAPI",94,0)
 .  S ^HLEV(776,+HLEVIENJ,52,"B",VAR,MIEN)=""
"RTN","HLEVAPI",95,0)
 S MIEN=$O(^HLEV(776,+HLEVIENJ,52,":"),-1)
"RTN","HLEVAPI",96,0)
 I MIEN'>0 KILL ^HLEV(776,+HLEVIENJ,52) QUIT  ;->
"RTN","HLEVAPI",97,0)
 S ^HLEV(776,+HLEVIENJ,52,0)="^776.003A^"_MIEN_U_MIEN
"RTN","HLEVAPI",98,0)
 Q
"RTN","HLEVAPI",99,0)
 ;
"RTN","HLEVAPI",100,0)
START(VARIABLE) ; Start the whole monitoring process.
"RTN","HLEVAPI",101,0)
 ; HLEVIENE,HLEVIENJ,HLEVIENM -- req --> HLEVAR()
"RTN","HLEVAPI",102,0)
 ;
"RTN","HLEVAPI",103,0)
 ; - Pass in by reference the VARIABLEs being tracked.
"RTN","HLEVAPI",104,0)
 ;
"RTN","HLEVAPI",105,0)
 ;   >S VAR("VARNAME")="REPORT-VARNAME"
"RTN","HLEVAPI",106,0)
 ;   >D DECLARE("MONITOR-NAME",.VAR)
"RTN","HLEVAPI",107,0)
 ;
"RTN","HLEVAPI",108,0)
 N E,EXPL,I,MIEN,NO,NODE,TXT,VAR
"RTN","HLEVAPI",109,0)
 ;
"RTN","HLEVAPI",110,0)
 D DEBUG^HLEVAPI2("START") ; Debug data created conditionally
"RTN","HLEVAPI",111,0)
 ;
"RTN","HLEVAPI",112,0)
 ; Stop all event monitoring to enable on-site debugging...
"RTN","HLEVAPI",113,0)
 QUIT:$G(^TMP("HLEVFLAG",$J))["STOP"  ;->
"RTN","HLEVAPI",114,0)
 ;
"RTN","HLEVAPI",115,0)
 ; Check STATUS-EVENT...
"RTN","HLEVAPI",116,0)
 QUIT:$P($G(^HLEV(776.999,1,0)),U,6)'="A"  ;->
"RTN","HLEVAPI",117,0)
 ;
"RTN","HLEVAPI",118,0)
 ; Presets...
"RTN","HLEVAPI",119,0)
 S NO=0
"RTN","HLEVAPI",120,0)
 KILL HLEVAR
"RTN","HLEVAPI",121,0)
 ;
"RTN","HLEVAPI",122,0)
 ; If passed in a variable name directly in VARIABLE
"RTN","HLEVAPI",123,0)
 I $G(VARIABLE)]"" F PCE=1:1:$L(VARIABLE,U) D
"RTN","HLEVAPI",124,0)
 .  S X=$P(VARIABLE,U,+PCE) I X]"" S NO=NO+1,HLEVAR(X)=X
"RTN","HLEVAPI",125,0)
 ;
"RTN","HLEVAPI",126,0)
 ; Convert passed in variable to format expected by CHECKIN & CHECKOUT
"RTN","HLEVAPI",127,0)
 S VAR=""
"RTN","HLEVAPI",128,0)
 F  S VAR=$O(VARIABLE(VAR)) Q:VAR']""  D
"RTN","HLEVAPI",129,0)
 .  S EXPL=VARIABLE(VAR) S:EXPL']"" EXPL=VAR
"RTN","HLEVAPI",130,0)
 .  S NO=NO+1,HLEVAR(VAR)=EXPL
"RTN","HLEVAPI",131,0)
 ;
"RTN","HLEVAPI",132,0)
 KILL VARIABLE
"RTN","HLEVAPI",133,0)
 ;
"RTN","HLEVAPI",134,0)
 ; Make initial DIARY entry...
"RTN","HLEVAPI",135,0)
 S TXT="DECLARE called - "_$P($G(^HLEV(776.1,+HLEVIENE,0)),U)
"RTN","HLEVAPI",136,0)
 D WPTXT^HLEVUTIL(776,HLEVIENJ,50,776.001,TXT)
"RTN","HLEVAPI",137,0)
 ;
"RTN","HLEVAPI",138,0)
 Q
"RTN","HLEVAPI",139,0)
 ;
"RTN","HLEVAPI",140,0)
CHECKIN ; Call here to update the EVENT using "your" DECLARE variables...
"RTN","HLEVAPI",141,0)
 N D,D0,DA,DI,DIE,DR,NO
"RTN","HLEVAPI",142,0)
 ;
"RTN","HLEVAPI",143,0)
 D DEBUG^HLEVAPI2("CHECKIN") ; Debug data created conditionally
"RTN","HLEVAPI",144,0)
 ;
"RTN","HLEVAPI",145,0)
 ; Stop all event monitoring to enable on-site debugging...
"RTN","HLEVAPI",146,0)
 QUIT:$G(^TMP("HLEVFLAG",$J))["STOP"  ;->
"RTN","HLEVAPI",147,0)
 ;
"RTN","HLEVAPI",148,0)
 ; Does entry exist?
"RTN","HLEVAPI",149,0)
 QUIT:$G(^HLEV(776,+$G(HLEVIENJ),0))']""  ;->
"RTN","HLEVAPI",150,0)
 ;
"RTN","HLEVAPI",151,0)
 D STOREVAR
"RTN","HLEVAPI",152,0)
 ;
"RTN","HLEVAPI",153,0)
 ; Fill in zero node...
"RTN","HLEVAPI",154,0)
 S DA=+HLEVIENJ,DIE=776
"RTN","HLEVAPI",155,0)
 S DR="4///R;6////"_$$NOW^XLFDT
"RTN","HLEVAPI",156,0)
 D ^DIE
"RTN","HLEVAPI",157,0)
 ;
"RTN","HLEVAPI",158,0)
 Q
"RTN","HLEVAPI",159,0)
 ;
"RTN","HLEVAPI",160,0)
ABORT(STATUS,APPLST) ; Call here if job is to be aborted...
"RTN","HLEVAPI",161,0)
 N DA,DIE,DR,NOW
"RTN","HLEVAPI",162,0)
 ;
"RTN","HLEVAPI",163,0)
 D DEBUG^HLEVAPI2("ABORT") ; Debug data created conditionally
"RTN","HLEVAPI",164,0)
 ;
"RTN","HLEVAPI",165,0)
 ; Stop all event monitoring to enable on-site debugging...
"RTN","HLEVAPI",166,0)
 QUIT:$G(^TMP("HLEVFLAG",$J))["STOP"  ;->
"RTN","HLEVAPI",167,0)
 ;
"RTN","HLEVAPI",168,0)
 ; Does entry exist?
"RTN","HLEVAPI",169,0)
 QUIT:$G(^HLEV(776,+$G(HLEVIENJ),0))']""  ;->
"RTN","HLEVAPI",170,0)
 ;
"RTN","HLEVAPI",171,0)
 D CHECKIN
"RTN","HLEVAPI",172,0)
 ;
"RTN","HLEVAPI",173,0)
 S DA=+HLEVIENJ,DIE=776
"RTN","HLEVAPI",174,0)
 S NOW=$$NOW^XLFDT
"RTN","HLEVAPI",175,0)
 S STATUS=$E($$UP^XLFSTR($G(STATUS)_" "))
"RTN","HLEVAPI",176,0)
 S STATUS=$S("EFQR"[STATUS:STATUS,1:"E")
"RTN","HLEVAPI",177,0)
 S DR="2////"_NOW_";4///"_STATUS_";6////"_NOW
"RTN","HLEVAPI",178,0)
 S:$G(APPLST)]"" DR=DR_";5///"_$TR($E(APPLST,1,10),U,"~")
"RTN","HLEVAPI",179,0)
 D ^DIE
"RTN","HLEVAPI",180,0)
 ;
"RTN","HLEVAPI",181,0)
 D EVCHKD^HLEVAPI2($G(HLEVIENM),$G(HLEVIENE),$G(HLEVIENJ),STATUS)
"RTN","HLEVAPI",182,0)
 ;
"RTN","HLEVAPI",183,0)
 KILL HLEVAR ; Passed-in user variables...
"RTN","HLEVAPI",184,0)
 ;
"RTN","HLEVAPI",185,0)
 Q
"RTN","HLEVAPI",186,0)
 ;
"RTN","HLEVAPI",187,0)
CHECKOUT ; Call here to end EVENT using "your" DECLARE variables...
"RTN","HLEVAPI",188,0)
 N DA,DIE,DR,NOW
"RTN","HLEVAPI",189,0)
 ;
"RTN","HLEVAPI",190,0)
 D DEBUG^HLEVAPI2("CHECKOUT") ; Debug data created conditionally
"RTN","HLEVAPI",191,0)
 ;
"RTN","HLEVAPI",192,0)
 ; Stop all event monitoring to enable on-site debugging...
"RTN","HLEVAPI",193,0)
 QUIT:$G(^TMP("HLEVFLAG",$J))["STOP"  ;->
"RTN","HLEVAPI",194,0)
 ;
"RTN","HLEVAPI",195,0)
 ; Does entry exist?
"RTN","HLEVAPI",196,0)
 QUIT:$G(^HLEV(776,+$G(HLEVIENJ),0))']""  ;->
"RTN","HLEVAPI",197,0)
 ;
"RTN","HLEVAPI",198,0)
 D CHECKIN
"RTN","HLEVAPI",199,0)
 ;
"RTN","HLEVAPI",200,0)
 S DA=+HLEVIENJ,DIE=776
"RTN","HLEVAPI",201,0)
 S NOW=$$NOW^XLFDT
"RTN","HLEVAPI",202,0)
 S DR="2////"_NOW_";4///F;6////"_NOW
"RTN","HLEVAPI",203,0)
 D ^DIE
"RTN","HLEVAPI",204,0)
 ;
"RTN","HLEVAPI",205,0)
 D EVCHKD^HLEVAPI2($G(HLEVIENM),$G(HLEVIENE),$G(HLEVIENJ))
"RTN","HLEVAPI",206,0)
 ;
"RTN","HLEVAPI",207,0)
 KILL HLEVAR ; Passed-in user variables...
"RTN","HLEVAPI",208,0)
 ;
"RTN","HLEVAPI",209,0)
 Q
"RTN","HLEVAPI",210,0)
 ;
"RTN","HLEVAPI",211,0)
MAILIT D MAILIT^HLEVAPI3
"RTN","HLEVAPI",212,0)
 Q
"RTN","HLEVAPI",213,0)
 ;
"RTN","HLEVAPI",214,0)
SENDMAIL(HLEVIENE,HLEVIENJ,XMY) ; Mail info in 776 event monitor's ^(51)...
"RTN","HLEVAPI",215,0)
 ;
"RTN","HLEVAPI",216,0)
 ; PARAMETER NOTES
"RTN","HLEVAPI",217,0)
 ; ---------------------------------------------------------------------
"RTN","HLEVAPI",218,0)
 ; XMY     Pass in XMY by reference.
"RTN","HLEVAPI",219,0)
 ; XMSUB   If XMSUB pre-exists, it will be used.
"RTN","HLEVAPI",220,0)
 ; XMTEXT  The text for the mailman message will come from one of 
"RTN","HLEVAPI",221,0)
 ;         three sources:
"RTN","HLEVAPI",222,0)
 ;           (1) If XMTEXT is pre-set, it will be used.
"RTN","HLEVAPI",223,0)
 ;           (2) If XMTEXT is not passed in, then the MAILMAN MESSAGE
"RTN","HLEVAPI",224,0)
 ;               TEXT global ^HLEV(776,IEN,51,#,0) will be used, if it
"RTN","HLEVAPI",225,0)
 ;               exits.
"RTN","HLEVAPI",226,0)
 ;           (3) Otherwise, a generic "message is completed" message
"RTN","HLEVAPI",227,0)
 ;               will be sent.
"RTN","HLEVAPI",228,0)
 ;
"RTN","HLEVAPI",229,0)
 N MGRP,NO,SITE,TEXT,XMDUZ,X,XMZ
"RTN","HLEVAPI",230,0)
 ;
"RTN","HLEVAPI",231,0)
 ; If no recipients passed in and no mail group exists, quit...
"RTN","HLEVAPI",232,0)
 QUIT:$O(XMY(""))']""  ;->
"RTN","HLEVAPI",233,0)
 ;
"RTN","HLEVAPI",234,0)
 QUIT:$P($G(^HLEV(776.1,+$G(HLEVIENE),0)),U)']""  ;->
"RTN","HLEVAPI",235,0)
 QUIT:$P($G(^HLEV(776,+$G(HLEVIENJ),0)),U)']""  ;->
"RTN","HLEVAPI",236,0)
 ;
"RTN","HLEVAPI",237,0)
 ; Set up sending...
"RTN","HLEVAPI",238,0)
 S XMDUZ=.5
"RTN","HLEVAPI",239,0)
 ;
"RTN","HLEVAPI",240,0)
 ; Subject...
"RTN","HLEVAPI",241,0)
 S X=$$SITE^VASITE,SITE="HL7 Monitor - "_$P(X,U,2)_"["_$P(X,U,3)_"]"
"RTN","HLEVAPI",242,0)
 S XMSUB=$S($G(XMSUB)]"":XMSUB,1:SITE_" - "_$P($G(^HLEV(776.1,+HLEVIENE,0)),U))
"RTN","HLEVAPI",243,0)
 ;
"RTN","HLEVAPI",244,0)
 ; Load generic message text...
"RTN","HLEVAPI",245,0)
 I $G(XMTEXT)']"" D
"RTN","HLEVAPI",246,0)
 .  KILL ^TMP($J,"HLMAILMSG")
"RTN","HLEVAPI",247,0)
 .  D LOADALL^HLEVAPI1(+HLEVIENJ,"HLMAILMSG")
"RTN","HLEVAPI",248,0)
 ;
"RTN","HLEVAPI",249,0)
 ; Declare where message is stored...
"RTN","HLEVAPI",250,0)
 S XMTEXT=$S($G(XMTEXT)]"":XMTEXT,1:"^TMP("_$J_",""HLMAILMSG"",")
"RTN","HLEVAPI",251,0)
 ;
"RTN","HLEVAPI",252,0)
 D ^XMD
"RTN","HLEVAPI",253,0)
 ;
"RTN","HLEVAPI",254,0)
 I '$D(ZTQUEUED) W !!,"Mail message #",$G(XMZ),"..."
"RTN","HLEVAPI",255,0)
 ;
"RTN","HLEVAPI",256,0)
 I $G(XMZ)>0 D UPDFLDE(+HLEVIENJ,7,XMZ)
"RTN","HLEVAPI",257,0)
 ;
"RTN","HLEVAPI",258,0)
 Q
"RTN","HLEVAPI",259,0)
 ;
"RTN","HLEVAPI",260,0)
NEWEVENT(HLEVIENE,QTIME) ; Create a new EVENT and pass back IEN...
"RTN","HLEVAPI",261,0)
 N DIC,DD,DO,X,Y
"RTN","HLEVAPI",262,0)
 ;
"RTN","HLEVAPI",263,0)
 ; Check STATUS-EVENT...return null("") if inactive HL*161
"RTN","HLEVAPI",264,0)
 QUIT:$P($G(^HLEV(776.999,1,0)),U,6)'="A" "" ;->
"RTN","HLEVAPI",265,0)
 ;
"RTN","HLEVAPI",266,0)
 S X=$$NOW^XLFDT,DIC="^HLEV(776,",DIC(0)="L"
"RTN","HLEVAPI",267,0)
 S DIC("DR")="3////"_HLEVIENE_";4///Q"
"RTN","HLEVAPI",268,0)
 I $G(HLEVIENM)>0 S DIC("DR")=DIC("DR")_";9////"_HLEVIENM
"RTN","HLEVAPI",269,0)
 I $G(QTIME)]"" S DIC("DR")=DIC("DR")_";10////"_QTIME
"RTN","HLEVAPI",270,0)
 D FILE^DICN
"RTN","HLEVAPI",271,0)
 ;
"RTN","HLEVAPI",272,0)
 Q $S(+Y>0:+Y,1:"")
"RTN","HLEVAPI",273,0)
 ;
"RTN","HLEVAPI",274,0)
UPDFLDE(HLEVIENJ,FLD,VAL) ; Update a specific piece in 776...
"RTN","HLEVAPI",275,0)
 N DA,DIE,DR
"RTN","HLEVAPI",276,0)
 ;
"RTN","HLEVAPI",277,0)
 QUIT:$G(^HLEV(776,+$G(HLEVIENJ),0))']""  ;->
"RTN","HLEVAPI",278,0)
 ;
"RTN","HLEVAPI",279,0)
 ; Field 50, RUN DIARY...
"RTN","HLEVAPI",280,0)
 I FLD=50 D  QUIT  ;->
"RTN","HLEVAPI",281,0)
 .  N DIFF,NO,NOW,TIME
"RTN","HLEVAPI",282,0)
 .  S NO=$O(^HLEV(776,+HLEVIENJ,50,":"),-1)+1
"RTN","HLEVAPI",283,0)
 .  S ^HLEV(776,+HLEVIENJ,50,0)="^776.001^"_NO_U_NO
"RTN","HLEVAPI",284,0)
 .  S ^HLEV(776,+HLEVIENJ,50,+NO,0)=$G(VAL)
"RTN","HLEVAPI",285,0)
 .  ; If FLD=50, update timestamp every 30 seconds...
"RTN","HLEVAPI",286,0)
 .  ; (This is because many 50 nodes might be updated, one after the
"RTN","HLEVAPI",287,0)
 .  ; other in a very disk-intensive way.)
"RTN","HLEVAPI",288,0)
 .  S TIME=$P($G(^HLEV(776,+HLEVIENJ,0)),U,6) ; FM format
"RTN","HLEVAPI",289,0)
 .  S NOW=$$NOW^XLFDT
"RTN","HLEVAPI",290,0)
 .  S DIFF=$$FMDIFF^XLFDT(NOW,TIME,2) S:DIFF<0 DIFF=-DIFF
"RTN","HLEVAPI",291,0)
 .  QUIT:DIFF<30  ;->
"RTN","HLEVAPI",292,0)
 .  S DA=+HLEVIENJ,DIE=776,DR="6////"_NOW
"RTN","HLEVAPI",293,0)
 ;
"RTN","HLEVAPI",294,0)
 ; Fields 401-408...
"RTN","HLEVAPI",295,0)
 I FLD?3N&(FLD>400)&(FLD<409) D  QUIT  ;->
"RTN","HLEVAPI",296,0)
 .  S ^HLEV(776,+HLEVIENJ,FLD)=VAL
"RTN","HLEVAPI",297,0)
 ;
"RTN","HLEVAPI",298,0)
 ; Zero node data...
"RTN","HLEVAPI",299,0)
 QUIT:$G(VAL)']""  ;->
"RTN","HLEVAPI",300,0)
 S DA=+HLEVIENJ,DIE=776,DR=FLD_"///"_VAL_";6////"_$$NOW^XLFDT
"RTN","HLEVAPI",301,0)
 D ^DIE
"RTN","HLEVAPI",302,0)
 ;
"RTN","HLEVAPI",303,0)
 I FLD=2 D EVCHKD^HLEVAPI2($G(HLEVIENM),$G(HLEVIENE),$G(HLEVIENJ))
"RTN","HLEVAPI",304,0)
 ;
"RTN","HLEVAPI",305,0)
 Q
"RTN","HLEVAPI",306,0)
 ;
"RTN","HLEVAPI",307,0)
EOR ;HLEVAPI - Event Monitor APIs ;5/16/03 14:42
"RTN","HLMA1")
0^2^B8926861^B8748290
"RTN","HLMA1",1,0)
HLMA1 ;AISC/SAW-Message Administration Module (Cont'd) ;09/13/2006
"RTN","HLMA1",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**19,43,91,109,108,133,161**;Oct 13, 1995;Build 6
"RTN","HLMA1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HLMA1",4,0)
GENACK(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,HLRESLTA,HLMTIENA,HLP) ;
"RTN","HLMA1",5,0)
 ;Entry point to generate an acknowledgement message
"RTN","HLMA1",6,0)
 ;
"RTN","HLMA1",7,0)
 ;This is a subroutine call with parameter passing.  It returns a value
"RTN","HLMA1",8,0)
 ;in the variable HLRESLTA, however the format of the variable cannot be
"RTN","HLMA1",9,0)
 ;relied on.  Please refer to the developer manual or ICR #2165 for more info.
"RTN","HLMA1",10,0)
 ;
"RTN","HLMA1",11,0)
 ;Required Input Parameters
"RTN","HLMA1",12,0)
 ;     HLEID = IEN of event driver protocol from the Protocol file
"RTN","HLMA1",13,0)
 ;  HLMTIENS = IEN of entry in Message Text file for subscriber
"RTN","HLMA1",14,0)
 ;               application
"RTN","HLMA1",15,0)
 ;    HLEIDS = IEN of subscriber event from the Protocol file
"RTN","HLMA1",16,0)
 ;  HLARYTYP = Array type.  One of the following codes:
"RTN","HLMA1",17,0)
 ;               LM = local array containing a single message
"RTN","HLMA1",18,0)
 ;               LB = local array containig a batch of messages
"RTN","HLMA1",19,0)
 ;               GM = global array containing a single message
"RTN","HLMA1",20,0)
 ;               GB = global array containing a batch of messages
"RTN","HLMA1",21,0)
 ;  HLFORMAT = Format of array, 1 for pre-formatted in HL7 format,
"RTN","HLMA1",22,0)
 ;               otherwise 0
"RTN","HLMA1",23,0)
 ;NOTE:  The parameter HLRESLTA must be passed by reference
"RTN","HLMA1",24,0)
 ;  HLRESLTA = The variable that will be returned to the calling
"RTN","HLMA1",25,0)
 ;               application as descibed above
"RTN","HLMA1",26,0)
 ;Optional Parameters
"RTN","HLMA1",27,0)
 ;  HLMTIENA = IEN of entry in Message Text file where the
"RTN","HLMA1",28,0)
 ;               acknowledgement message will be stored.  This
"RTN","HLMA1",29,0)
 ;               parameter is only passed for a batch acknowledgment
"RTN","HLMA1",30,0)
 ;  HLP("SECURITY") = A 1 to 40 character string
"RTN","HLMA1",31,0)
 ; HLP("NAMESPACE") = Passed in by application namespace - HL*1.6*91
"RTN","HLMA1",32,0)
 ;
"RTN","HLMA1",33,0)
 ;
"RTN","HLMA1",34,0)
 ;HLRESLTA is to return the results and should not be initially defined
"RTN","HLMA1",35,0)
 N HLRESLT
"RTN","HLMA1",36,0)
 S HLRESLT=""
"RTN","HLMA1",37,0)
 K HLRESLTA
"RTN","HLMA1",38,0)
 ;
"RTN","HLMA1",39,0)
 ;Check for required parameters
"RTN","HLMA1",40,0)
 I $G(HLEIDS)']""!('$G(HLMTIENS))!($G(HLARYTYP)']"")!($G(HLFORMAT)']"") S HLRESLTA="0^7^"_$G(^HL(771.7,7,0))_" at GENACK^HLMA1 entry point" G EXIT
"RTN","HLMA1",41,0)
 I 'HLEIDS S HLEIDS=$O(^ORD(101,"B",HLEIDS,0)) I 'HLEIDS S HLRESLTA="0^1^"_$G(^HL(771.7,1,0)) G EXIT
"RTN","HLMA1",42,0)
 ;Extract data from Protocol file
"RTN","HLMA1",43,0)
 D EVENT^HLUTIL1(HLEIDS,"15,20,772",.HLN)
"RTN","HLMA1",44,0)
 N HLEXROU,HLMIDAR
"RTN","HLMA1",45,0)
 S HLMIDAR=0,HLENROU=$G(HLN(20)),HLEXROU=$G(HLN(15))
"RTN","HLMA1",46,0)
 S HLP("GROUTINE")=$G(HLN(772)) K HLN I HLP("GROUTINE")']"",'HLFORMAT S HLRESLTA="0^3^"_$G(^HL(771.7,3,0)) G EXIT
"RTN","HLMA1",47,0)
 I "GL"'[$E($G(HLARYTYP)) S HLRESLTA="0^4^"_$G(^HL(771.7,4,0)) G EXIT
"RTN","HLMA1",48,0)
 I '$D(HLP("SECURITY")) S HLP("SECURITY")=""
"RTN","HLMA1",49,0)
 I $L(HLP("SECURITY"))>40 S HLRESLTA="0^6^"_$G(^HL(771.7,6,0)) G EXIT
"RTN","HLMA1",50,0)
 ;$D(HLTCP) tcp connection will be used
"RTN","HLMA1",51,0)
 I $D(HLTCP) D GENACK^HLTP4 G EXIT
"RTN","HLMA1",52,0)
 ;Create message ID and Message Text IEN if Message Text IEN not
"RTN","HLMA1",53,0)
 ;previously created ('$G(HLMTIENA))
"RTN","HLMA1",54,0)
 I '$G(HLMTIENA) D CREATE^HLTF(.HLMIDA,.HLMTIENA,.HLDTA,.HLDT1A)
"RTN","HLMA1",55,0)
 ;Get message ID if Message Text IEN not already created
"RTN","HLMA1",56,0)
 I '$G(HLMIDA) D
"RTN","HLMA1",57,0)
 .S HLDTA=$G(^HL(772,HLMTIENA,0))
"RTN","HLMA1",58,0)
 .S HLDT1A=$$HLDATE^HLFNC(+HLDTA),HLMIDA=$P(HLDTA,"^",6),HLDTA=+HLDTA
"RTN","HLMA1",59,0)
 S HLRESLTA=HLMIDA,HLP("DTM")=HLDT1A,HLP("DT")=HLDTA,HLP("MTIENS")=HLMTIENS,HLP("EID")=HLEID
"RTN","HLMA1",60,0)
 ;Execute entry action for subscriber protocol
"RTN","HLMA1",61,0)
 I HLENROU]"" X HLENROU
"RTN","HLMA1",62,0)
 ;Invoke transaction processor to generate acknowledgement
"RTN","HLMA1",63,0)
 K HLDTA,HLDT1A,HLEID,HLENROU,HLMTIENS
"RTN","HLMA1",64,0)
 S HLRESLT=""
"RTN","HLMA1",65,0)
 D GENACK^HLTP1(HLMIDA,HLMTIENA,HLEIDS,HLARYTYP,HLFORMAT,.HLRESLT,.HLP)
"RTN","HLMA1",66,0)
 ;HLMIDAR is array of message IDs, only set for broadcast messages
"RTN","HLMA1",67,0)
 I HLMIDAR K HLMIDAR("N") M HLRESLTA=HLMIDAR
"RTN","HLMA1",68,0)
 S HLRESLTA=HLRESLTA_"^"_HLRESLT
"RTN","HLMA1",69,0)
 ;Update status to Awaiting Acknowledgement or Error in Transmission
"RTN","HLMA1",70,0)
 D STATUS^HLTF0(HLMTIENA,$S($P(HLRESLTA,"^",2):4,1:3),$S($P(HLRESLTA,"^",2):$P(HLRESLTA,"^",2),1:""),$S($P(HLRESLTA,"^",2):$P(HLRESLTA,"^",3),1:""))
"RTN","HLMA1",71,0)
 ;Execute exit action for subscriber protocol
"RTN","HLMA1",72,0)
 X:HLEXROU]"" HLEXROU
"RTN","HLMA1",73,0)
EXIT K HLDTA,HLDT1A,HLMIDA,HLENROU,HLEXROU
"RTN","HLMA1",74,0)
 ;if HLRESLTA is undefined set to NULL ("") HL*1.6*161 RRA ticket #63271
"RTN","HLMA1",75,0)
 I $G(HLRESLTA)="" S HLRESLTA=""
"RTN","HLMA1",76,0)
 Q
"RTN","HLUOPT")
0^1^B20065931^B18177059
"RTN","HLUOPT",1,0)
HLUOPT ;AISC/SAW-Main Menu for HL7 Module ;07/26/99  08:47
"RTN","HLUOPT",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**57,161**;Oct 13, 1995;Build 6
"RTN","HLUOPT",3,0)
AP ;Enter/Edit DHCP Application Parameters
"RTN","HLUOPT",4,0)
 F  D  Q:Y<0
"RTN","HLUOPT",5,0)
 . N DA,DIC,DDSFILE,DR
"RTN","HLUOPT",6,0)
 . S DIC="^HL(771,",DIC(0)="AEMQLZ"
"RTN","HLUOPT",7,0)
 . W @IOF,! D ^DIC Q:Y<0
"RTN","HLUOPT",8,0)
 . S DA=+Y,DDSFILE=DIC,DR="[HL7 APP]"
"RTN","HLUOPT",9,0)
 . D ^DDS S Y=0
"RTN","HLUOPT",10,0)
 Q
"RTN","HLUOPT",11,0)
 ;
"RTN","HLUOPT",12,0)
SP ;Enter/Edit Non-DHCP Application Parameters
"RTN","HLUOPT",13,0)
 S DIC="^HL(770,",DIC(0)="AEMQL",DLAYGO=770 W ! D ^DIC K DLAYGO G EXIT:Y<0
"RTN","HLUOPT",14,0)
 I $P(Y,"^",3) N HLX,HLX1 S HLX=+Y
"RTN","HLUOPT",15,0)
 S DA=+Y,DIE=DIC,DR=".01;3;2;4//245;5//3;6;7//2.1;8;9//30;10;14;100" D ^DIE
"RTN","HLUOPT",16,0)
 I $D(HLX) D
"RTN","HLUOPT",17,0)
 .S HLX1=$G(^HL(770,HLX,0)) K DA,DD,DIE,DO,DR S DIC="^HL(771,",X=$P(HLX1,"^"),DIC(0)="" D FILE^DICN S DA=+Y
"RTN","HLUOPT",18,0)
 .I DA S DIE="^HL(771,",DR="2///a;3///"_$P(HLX1,"^",3) D ^DIE K DIE,DR
"RTN","HLUOPT",19,0)
 .S DIE="^HL(770,",DR="12///"_DA,DA=HLX D ^DIE
"RTN","HLUOPT",20,0)
 G SP
"RTN","HLUOPT",21,0)
APP ;Print/Display Application Parameters
"RTN","HLUOPT",22,0)
 S DIC="^HL(771,",L=0,FLDS="[CAPTIONED]",BY="@.01",FR="?",TO="?",DHD="HL7 DHCP Application Parameters" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",23,0)
SPP ;Print/Display Site Parameters
"RTN","HLUOPT",24,0)
 S DIC="^HL(770,",L=0,FLDS="[CAPTIONED]",BY="@.01",FR="?",TO="?",DHD="HL7 Non-DHCP Application Parameters" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",25,0)
MT ;Print/Display Message Type
"RTN","HLUOPT",26,0)
 S DIC="^HL(771.2,",L=0,FLDS="[CAPTIONED]",BY="@.01",FR="",TO="",DHD="HL7 Message Types" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",27,0)
SN ;Print/Display Segment Name
"RTN","HLUOPT",28,0)
 S DIC="^HL(771.3,",L=0,FLDS="[CAPTIONED]",BY="@.01",FR="",TO="",DHD="HL7 Segment Names" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",29,0)
DT ;Print/Display Data Type
"RTN","HLUOPT",30,0)
 S DIC="^HL(771.4,",L=0,FLDS="[CAPTIONED]",BY="@.01",FR="",TO="",DHD="HL7 Data Types" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",31,0)
VERS ;Print/Display Version Number
"RTN","HLUOPT",32,0)
 S DIC="^HL(771.5,",L=0,FLDS="[CAPTIONED]",BY="@.01",FR="",TO="",DHD="HL7 Version Numbers" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",33,0)
FIELD ;Print/Display Fields
"RTN","HLUOPT",34,0)
 S DIC="^HL(771.1,",L=0,FLDS="[CAPTIONED]",BY="@.01",FR="?",TO="?",DHD="HL7 Fields" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",35,0)
PLPT ;Print/Display Log of Awaiting or Pending Tramsmissions
"RTN","HLUOPT",36,0)
 S DIC="^HL(772,",L=0,FLDS="[CAPTIONED]",BY="@20,@.01",DIS(0)="S HLX=+$G(^HL(772,D0,""P"")) I HLX<3!(HLX>7)",FR="A,?",TO="Z,?",DHD="Log of HL7 Transmissions in Awaiting or Pending Status" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD K HLX G EXIT
"RTN","HLUOPT",37,0)
PLFT ;Print/Display Log of Failed Transmissions
"RTN","HLUOPT",38,0)
 S DIC="^HL(772,",L=0,FLDS="[CAPTIONED]",BY="@20,@.01",FR="E,?",TO="EZ,?",DHD="Log of Failed HL7 Transmissions" D EN1^DIP D:$E(IOST,1,2)="C-" HOLD G EXIT
"RTN","HLUOPT",39,0)
LOG ;Start/Stop HL7 Log of Transmissions
"RTN","HLUOPT",40,0)
 W !!,"Select the Non-DHCP Application for which you wish to start/stop the HL7 log",!,"of transmissions."
"RTN","HLUOPT",41,0)
 W ! S DIC="^HL(770,",DIC(0)="AEMQ" D ^DIC G EXIT:Y<0 S DA=+Y,HLDEV=$P(^HL(770,DA,0),"^",6) I HLDEV']"" W !!,*7,"You must define an HL7 Device for this Non-DHCP Application before you can",!,"start the log.",!
"RTN","HLUOPT",42,0)
 I HLDEV]"" W !!,"The HL7 log is currently turned ",$S($D(^HL(770,"ALOG",HLDEV,DA)):"on.",1:"off."),!
"RTN","HLUOPT",43,0)
 S DIE=DIC,DR=$S(HLDEV']"":"6R;",1:"")_50,DIE("NO^")="OUTOK" D ^DIE
"RTN","HLUOPT",44,0)
 W ! S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to purge existing log entries" D ^DIR I Y=1,HLDEV]"" K ^TMP("HL",HLDEV)
"RTN","HLUOPT",45,0)
EXIT K BY,DA,DHD,DIC,DIE,DIR,DR,FLDS,FR,L,HLDEV,TO,X,Y Q
"RTN","HLUOPT",46,0)
 ;
"RTN","HLUOPT",47,0)
LLED ;Logical Link Edit, file 870
"RTN","HLUOPT",48,0)
 ;HL*161 add code to make sure the Logical Link is shutdown  RRA ticket 217900
"RTN","HLUOPT",49,0)
 F  D  Q:Y<0
"RTN","HLUOPT",50,0)
 . N DA,DIC,DDSFILE,DR,HLIEN,HLNAME
"RTN","HLUOPT",51,0)
 . S DIC="^HLCS(870,",DIC(0)="AEMQLZ"
"RTN","HLUOPT",52,0)
 . W @IOF,! D ^DIC Q:Y<0
"RTN","HLUOPT",53,0)
 . S DA=+Y,DR="[HL7 LOGICAL LINK]",DDSFILE=DIC
"RTN","HLUOPT",54,0)
 . S HLIEN=+Y,HLNAME=$P(Y,"^",2)
"RTN","HLUOPT",55,0)
 . I '$P($G(^HLCS(870,HLIEN,0)),"^",15) W !!,HLNAME_" must be shutdown before it can be edited" H 2 Q
"RTN","HLUOPT",56,0)
 . D ^DDS S Y=0
"RTN","HLUOPT",57,0)
 . W !!!,"If you shut down this link to edit, please remember to restart if appropriate" H 2
"RTN","HLUOPT",58,0)
 Q
"RTN","HLUOPT",59,0)
 ;
"RTN","HLUOPT",60,0)
INTED ;Interface edit, file 101
"RTN","HLUOPT",61,0)
 F  D  Q:Y<0
"RTN","HLUOPT",62,0)
 . N DA,DIC,DDSFILE,DR
"RTN","HLUOPT",63,0)
 . S DIC="^ORD(101,",DIC(0)="AEMQLZ",DIC("S")="N Z S Z=$P(^(0),U,4) I Z=""E""!(Z=""S"")"
"RTN","HLUOPT",64,0)
 . W @IOF,! D ^DIC Q:Y<0
"RTN","HLUOPT",65,0)
 . S DA=+Y,DR="[HL7 INTERFACE]",DDSFILE=DIC
"RTN","HLUOPT",66,0)
 . D ^DDS S Y=0
"RTN","HLUOPT",67,0)
 Q
"RTN","HLUOPT",68,0)
 ;
"RTN","HLUOPT",69,0)
HOLD ;Hold Screen at End of Display
"RTN","HLUOPT",70,0)
 N DIR
"RTN","HLUOPT",71,0)
 S DIR(0)="E" D ^DIR
"RTN","HLUOPT",72,0)
 Q
"UP",779.4,779.41,-1)
779.4^2
"UP",779.4,779.41,0)
779.41
"VER")
8.0^22.0
"^DD",779.4,779.4,20,0)
RECIPIENTS^779.41^^2;0
"^DD",779.4,779.41,0)
RECIPIENTS SUB-FIELD^^.021^8
"^DD",779.4,779.41,0,"NM","RECIPIENTS")

"^DD",779.4,779.41,.01,0)
RECEIVING APPLICATION^MRF^^0;1^K:$L(X)>60!($L(X)<3) X
"^DD",779.4,779.41,.01,1,0)
^.1
"^DD",779.4,779.41,.01,1,1,0)
779.41^B
"^DD",779.4,779.41,.01,1,1,1)
S ^HLS(779.4,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",779.4,779.41,.01,1,1,2)
K ^HLS(779.4,DA(1),2,"B",$E(X,1,30),DA)
"^DD",779.4,779.41,.01,3)
Enter the name of the application that will receive the messages. (3-60 characters)
"^DD",779.4,779.41,.01,"DT")
3130506
"BLD",9384,6)
^127
**END**
**END**
