EMERGENCY Released HL*1.6*148 SEQ #119
Extracted from mail message
**KIDS**:HL*1.6*148^

**INSTALL NAME**
HL*1.6*148
"BLD",1317,0)
HL*1.6*148^HEALTH LEVEL SEVEN^0^3100929^y
"BLD",1317,4,0)
^9.64PA^^
"BLD",1317,6.3)
3
"BLD",1317,"INID")
n^n
"BLD",1317,"INIT")
POST^HLP148
"BLD",1317,"KRN",0)
^9.67PA^9002226^21
"BLD",1317,"KRN",.4,0)
.4
"BLD",1317,"KRN",.401,0)
.401
"BLD",1317,"KRN",.402,0)
.402
"BLD",1317,"KRN",.403,0)
.403
"BLD",1317,"KRN",.5,0)
.5
"BLD",1317,"KRN",.84,0)
.84
"BLD",1317,"KRN",3.6,0)
3.6
"BLD",1317,"KRN",3.8,0)
3.8
"BLD",1317,"KRN",9.2,0)
9.2
"BLD",1317,"KRN",9.8,0)
9.8
"BLD",1317,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",1317,"KRN",9.8,"NM",1,0)
HLTPCK2B^^0^B70829946
"BLD",1317,"KRN",9.8,"NM","B","HLTPCK2B",1)

"BLD",1317,"KRN",19,0)
19
"BLD",1317,"KRN",19.1,0)
19.1
"BLD",1317,"KRN",101,0)
101
"BLD",1317,"KRN",409.61,0)
409.61
"BLD",1317,"KRN",771,0)
771
"BLD",1317,"KRN",779.2,0)
779.2
"BLD",1317,"KRN",870,0)
870
"BLD",1317,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",1317,"KRN",870,"NM",1,0)
VAVCB^^0
"BLD",1317,"KRN",870,"NM","B","VAVCB",1)

"BLD",1317,"KRN",8989.51,0)
8989.51
"BLD",1317,"KRN",8989.52,0)
8989.52
"BLD",1317,"KRN",8994,0)
8994
"BLD",1317,"KRN",9002226,0)
9002226
"BLD",1317,"KRN","B",.4,.4)

"BLD",1317,"KRN","B",.401,.401)

"BLD",1317,"KRN","B",.402,.402)

"BLD",1317,"KRN","B",.403,.403)

"BLD",1317,"KRN","B",.5,.5)

"BLD",1317,"KRN","B",.84,.84)

"BLD",1317,"KRN","B",3.6,3.6)

"BLD",1317,"KRN","B",3.8,3.8)

"BLD",1317,"KRN","B",9.2,9.2)

"BLD",1317,"KRN","B",9.8,9.8)

"BLD",1317,"KRN","B",19,19)

"BLD",1317,"KRN","B",19.1,19.1)

"BLD",1317,"KRN","B",101,101)

"BLD",1317,"KRN","B",409.61,409.61)

"BLD",1317,"KRN","B",771,771)

"BLD",1317,"KRN","B",779.2,779.2)

"BLD",1317,"KRN","B",870,870)

"BLD",1317,"KRN","B",8989.51,8989.51)

"BLD",1317,"KRN","B",8989.52,8989.52)

"BLD",1317,"KRN","B",8994,8994)

"BLD",1317,"KRN","B",9002226,9002226)

"BLD",1317,"PRE")
HLP148
"BLD",1317,"QUES",0)
^9.62^^
"BLD",1317,"REQB",0)
^9.611^1^1
"BLD",1317,"REQB",1,0)
HL*1.6*122^2
"BLD",1317,"REQB","B","HL*1.6*122",1)

"INIT")
POST^HLP148
"KRN",870,368,-1)
0^1
"KRN",870,368,0)
VAVCB^TEXAS VALLEY COASTAL BEND HCS^TCP^^^^VALLEYCOASTALBEND.MED.VA.GOV^HL7.VALLEYCOASTALBEND.MED.VA.GOV^^^^^^^^^^^^^
"KRN",870,368,200)
^^^^^^^^^R
"KRN",870,368,400)
10.140.159.37^5000^C^N^^^^5001^
"MBREQ")
0
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"PKG",9,-1)
1^1
"PKG",9,0)
HEALTH LEVEL SEVEN^HL^DHCP IMPLEMENTATION OF HEALTH LEVEL SEVEN^
"PKG",9,20,0)
^9.402P^^
"PKG",9,22,0)
^9.49I^1^1
"PKG",9,22,1,0)
1.6^2980130^2980130^6
"PKG",9,22,1,"PAH",1,0)
148^3100929
"PRE")
HLP148
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","HLP148")
0^^B30039179^n/a
"RTN","HLP148",1,0)
HLP148 ;OIFO-O/RJH - HL*1.6*148 ENVIRONMENT AND POST-INSTALL ROUTINE ;09/29/2010
"RTN","HLP148",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**148**;OCT 13, 1995;Build 3
"RTN","HLP148",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HLP148",4,0)
 ;
"RTN","HLP148",5,0)
 ; check "TEXAS VALLEY COASTAL BEND HCS" entry in Institution file(#4),
"RTN","HLP148",6,0)
 ; and "VALLEYCOASTALBEND.MED.VA.GOV" entry in Domain file(#4.2)
"RTN","HLP148",7,0)
 ;
"RTN","HLP148",8,0)
 N HLPARAM,HLSITE
"RTN","HLP148",9,0)
 ;
"RTN","HLP148",10,0)
 S HLPARAM=$$PARAM^HLCS2
"RTN","HLP148",11,0)
 S HLSITE("DEFAULT-PROCESSING-ID")=$P(HLPARAM,"^",3)
"RTN","HLP148",12,0)
 ;
"RTN","HLP148",13,0)
 I HLSITE("DEFAULT-PROCESSING-ID")="P" D
"RTN","HLP148",14,0)
 . D MES^XPDUTL("Checking environment ...")
"RTN","HLP148",15,0)
 . I '$O(^DIC(4,"D",740,0)) D
"RTN","HLP148",16,0)
 .. S XPDQUIT=2
"RTN","HLP148",17,0)
 .. D BMES^XPDUTL("'TEXAS VALLEY COASTAL BEND HCS' entry with station number as 740 ")
"RTN","HLP148",18,0)
 .. D MES^XPDUTL("does not exist in Institution file.")
"RTN","HLP148",19,0)
 . I '$O(^DIC(4.2,"B","VALLEYCOASTALBEND.MED.VA.GOV",0)) D
"RTN","HLP148",20,0)
 .. S XPDQUIT=2
"RTN","HLP148",21,0)
 .. D BMES^XPDUTL("'VALLEYCOASTALBEND.MED.VA.GOV' entry does not exist in Domain file,")
"RTN","HLP148",22,0)
 .. D MES^XPDUTL(" patch XM*999*173 must be installed first.")
"RTN","HLP148",23,0)
 . I $G(XPDQUIT) D BMES^XPDUTL("Aborting installation...")
"RTN","HLP148",24,0)
 Q
"RTN","HLP148",25,0)
 ;
"RTN","HLP148",26,0)
POST ; post install
"RTN","HLP148",27,0)
 ;
"RTN","HLP148",28,0)
 D POST2
"RTN","HLP148",29,0)
 ; D ENDPST
"RTN","HLP148",30,0)
 Q
"RTN","HLP148",31,0)
 ;
"RTN","HLP148",32,0)
POST2 ;
"RTN","HLP148",33,0)
 ; deal with VAVCB entry in file #870.
"RTN","HLP148",34,0)
 ; Is VAVCB entry in the HL LOGICAL LINK (#870) file?
"RTN","HLP148",35,0)
 ; If yes, continue, If no, quit.
"RTN","HLP148",36,0)
 ;
"RTN","HLP148",37,0)
 ;find ien of VAVCB
"RTN","HLP148",38,0)
 N HLLINK
"RTN","HLP148",39,0)
 S HLLINK=$$VAVCB()
"RTN","HLP148",40,0)
 Q:'HLLINK
"RTN","HLP148",41,0)
 ;
"RTN","HLP148",42,0)
 ; check and update fields of VAVCB
"RTN","HLP148",43,0)
 D UPDATE
"RTN","HLP148",44,0)
 Q
"RTN","HLP148",45,0)
 ;
"RTN","HLP148",46,0)
VAVCB() ;
"RTN","HLP148",47,0)
 ; for VAVCB entry
"RTN","HLP148",48,0)
 ;
"RTN","HLP148",49,0)
 N HLLLK
"RTN","HLP148",50,0)
 S HLLLK=+$$FIND1^DIC(870,"","X","VAVCB")
"RTN","HLP148",51,0)
 ;
"RTN","HLP148",52,0)
 ; if no VAVCB entry, abort install
"RTN","HLP148",53,0)
 I HLLLK=0 D
"RTN","HLP148",54,0)
 . D BMES^XPDUTL(" 'VAVCB' logical link failed to come in with this patch.")
"RTN","HLP148",55,0)
 . D MES^XPDUTL(" Log a Remedy ticket for assistance before proceeding.")
"RTN","HLP148",56,0)
 . S XPDABORT=1
"RTN","HLP148",57,0)
 ;
"RTN","HLP148",58,0)
 Q HLLLK
"RTN","HLP148",59,0)
 ;
"RTN","HLP148",60,0)
UPDATE ;
"RTN","HLP148",61,0)
 ;update the following fields for logical link, VAVCB:
"RTN","HLP148",62,0)
 ; - DNS Domain (#.08)
"RTN","HLP148",63,0)
 ; - Autostart (#4.5)
"RTN","HLP148",64,0)
 ; - Institution (#.02)
"RTN","HLP148",65,0)
 ;
"RTN","HLP148",66,0)
 N HLDOM
"RTN","HLP148",67,0)
 N HLPARAM,HLSITE
"RTN","HLP148",68,0)
 N HLJ
"RTN","HLP148",69,0)
 N DIE,DR,X
"RTN","HLP148",70,0)
 ;
"RTN","HLP148",71,0)
 S HLDOM="HL7.VALLEYCOASTALBEND.MED.VA.GOV"
"RTN","HLP148",72,0)
 S HLPARAM=$$PARAM^HLCS2
"RTN","HLP148",73,0)
 S HLSITE("DEFAULT-PROCESSING-ID")=$P(HLPARAM,"^",3)
"RTN","HLP148",74,0)
 S HLSITE("INSTITUTION IEN")=$P(HLPARAM,"^",4)
"RTN","HLP148",75,0)
 S HLSITE("STATION NUMBER")=$P(^DIC(4,HLSITE("INSTITUTION IEN"),99),"^")
"RTN","HLP148",76,0)
 ;
"RTN","HLP148",77,0)
 D BMES^XPDUTL(" Updating 'VAVCB' logical link ...")
"RTN","HLP148",78,0)
 F  L +^HLCS(870,HLLINK):3 Q:$T  H 1
"RTN","HLP148",79,0)
 ; update AUTOSTART and DNS domain field if this is production
"RTN","HLP148",80,0)
 ; account, MAILMAN DOMAIN fields should be updated by KIDS.
"RTN","HLP148",81,0)
 ;
"RTN","HLP148",82,0)
 ; update institution field
"RTN","HLP148",83,0)
 I (HLSITE("STATION NUMBER")'=740) D
"RTN","HLP148",84,0)
 . N DIE,DR,DA,X,VCBIEN,OTHER
"RTN","HLP148",85,0)
 . ; find ien of institution file (#4) with station number as 740
"RTN","HLP148",86,0)
 . S VCBIEN=$O(^DIC(4,"D",740,0))
"RTN","HLP148",87,0)
 . Q:'VCBIEN
"RTN","HLP148",88,0)
 . ; if the ien with station number as 740 is pointed to by
"RTN","HLP148",89,0)
 . ; other link, remove it.
"RTN","HLP148",90,0)
 . S OTHER=0
"RTN","HLP148",91,0)
 . F  S OTHER=$O(^HLCS(870,"C",VCBIEN,OTHER)) Q:'OTHER  D:(HLLINK'=OTHER)
"RTN","HLP148",92,0)
 . .N DIE,DR,DA,X
"RTN","HLP148",93,0)
 . .S DIE="^HLCS(870,",DA=OTHER,DR=".02///@"
"RTN","HLP148",94,0)
 . .D ^DIE
"RTN","HLP148",95,0)
 .S DIE="^HLCS(870,",DA=HLLINK,DR=".02///^S X=VCBIEN"
"RTN","HLP148",96,0)
 .D ^DIE
"RTN","HLP148",97,0)
 ;
"RTN","HLP148",98,0)
 I HLSITE("DEFAULT-PROCESSING-ID")="P",(HLSITE("STATION NUMBER")'=740) D
"RTN","HLP148",99,0)
 .;
"RTN","HLP148",100,0)
 . S DIE="^HLCS(870,",DA=HLLINK,DR="4.5///1"
"RTN","HLP148",101,0)
 . ;
"RTN","HLP148",102,0)
 . I ($L($P(^HLCS(870,HLLINK,0),"^",8),".")'>2) D
"RTN","HLP148",103,0)
 .. ; the API FILE^DIE does not implement input transform
"RTN","HLP148",104,0)
 .. ; for updating TCP/IP ADDRESS field
"RTN","HLP148",105,0)
 .. S DR=DR_";.08///^S X=HLDOM"
"RTN","HLP148",106,0)
 . D ^DIE K DIE,DA,DR
"RTN","HLP148",107,0)
 ;
"RTN","HLP148",108,0)
 ; TEXAS VALLEY COASTAL BEND HCS site should have VAVCB entry as multi-listener. 
"RTN","HLP148",109,0)
 I (HLSITE("STATION NUMBER")=740) D
"RTN","HLP148",110,0)
 . N IP
"RTN","HLP148",111,0)
 . ; remove data from AUTOSTART field
"RTN","HLP148",112,0)
 . S $P(^HLCS(870,HLLINK,0),"^",6)=""
"RTN","HLP148",113,0)
 . ; remove data from PERSISTENT field
"RTN","HLP148",114,0)
 . S $P(^HLCS(870,HLLINK,400),"^",4)=""
"RTN","HLP148",115,0)
 . ; remove data from EXCEED RE-TRANSMIT ACTION field
"RTN","HLP148",116,0)
 . S $P(^HLCS(870,HLLINK,200),"^",10)=""
"RTN","HLP148",117,0)
 . ; remove data from DNS DOMAIN field
"RTN","HLP148",118,0)
 . S $P(^HLCS(870,HLLINK,0),"^",8)=""
"RTN","HLP148",119,0)
 . K ^HLCS(870,"DNS","HL7.VALLEYCOASTALBEND.MED.VA.GOV")
"RTN","HLP148",120,0)
 . K ^HLCS(870,"DNS2","HL7.VALLEYCOASTALBEND.MED.VA.GOV")
"RTN","HLP148",121,0)
 . ; remove data from TCP/IP ADDRESS field
"RTN","HLP148",122,0)
 . S IP=$P(^HLCS(870,HLLINK,400),"^")
"RTN","HLP148",123,0)
 . I IP D
"RTN","HLP148",124,0)
 .. S $P(^HLCS(870,HLLINK,400),"^")=""
"RTN","HLP148",125,0)
 .. K ^HLCS(870,"IP",IP)
"RTN","HLP148",126,0)
 . ; check TCP/IP SERVICE TYPE
"RTN","HLP148",127,0)
 . I $P(^HLCS(870,HLLINK,400),"^",3)'="M" D
"RTN","HLP148",128,0)
 .. S $P(^HLCS(870,HLLINK,400),"^",3)="M"
"RTN","HLP148",129,0)
 .. K ^HLCS(870,"E","C",HLLINK)
"RTN","HLP148",130,0)
 .. S ^HLCS(870,"E","M",HLLINK)=""
"RTN","HLP148",131,0)
 . ;
"RTN","HLP148",132,0)
 . ; find ien of institution file (#4) with station number as 740
"RTN","HLP148",133,0)
 . N VCBIEN,OTHER
"RTN","HLP148",134,0)
 . S VCBIEN=$O(^DIC(4,"D",740,0))
"RTN","HLP148",135,0)
 . ; if the ien with station number as 740 is pointed to by
"RTN","HLP148",136,0)
 . ; other link, remove it.
"RTN","HLP148",137,0)
 . I VCBIEN S OTHER=$O(^HLCS(870,"C",VCBIEN,0))
"RTN","HLP148",138,0)
 . I VCBIEN,OTHER,(OTHER'=HLLINK) D
"RTN","HLP148",139,0)
 .. K ^HLCS(870,"C",VCBIEN)
"RTN","HLP148",140,0)
 .. S $P(^HLCS(870,OTHER,0),"^",2)=""
"RTN","HLP148",141,0)
 . ;
"RTN","HLP148",142,0)
 . ; update institution field
"RTN","HLP148",143,0)
 . I HLSITE("INSTITUTION IEN"),HLSITE("DEFAULT-PROCESSING-ID")="P" D
"RTN","HLP148",144,0)
 .. I '$D(^HLCS(870,"C",HLSITE("INSTITUTION IEN"),HLLINK)) D
"RTN","HLP148",145,0)
 ... S ^HLCS(870,"C",HLSITE("INSTITUTION IEN"),HLLINK)=""
"RTN","HLP148",146,0)
 ... S $P(^HLCS(870,HLLINK,0),"^",2)=HLSITE("INSTITUTION IEN")
"RTN","HLP148",147,0)
 . ;
"RTN","HLP148",148,0)
 . ; check TEST account of VALLEYCOASTALBEND
"RTN","HLP148",149,0)
 . I HLSITE("DEFAULT-PROCESSING-ID")'="P" D
"RTN","HLP148",150,0)
 .. I $P(^HLCS(870,HLLINK,400),"^",2)=5000 D
"RTN","HLP148",151,0)
 ... S $P(^HLCS(870,HLLINK,400),"^",2)=5025
"RTN","HLP148",152,0)
 .. I $P(^HLCS(870,HLLINK,400),"^",8)=5001 D
"RTN","HLP148",153,0)
 ... S $P(^HLCS(870,HLLINK,400),"^",8)=5026
"RTN","HLP148",154,0)
 ;
"RTN","HLP148",155,0)
 L -^HLCS(870,HLLINK)
"RTN","HLP148",156,0)
 ;
"RTN","HLP148",157,0)
ENDPST2 ;
"RTN","HLTPCK2B")
0^1^B70829946^B67329178
"RTN","HLTPCK2B",1,0)
HLTPCK2B ;OIFO-O/RJH - Message Header Validation (Con't) ; 09/22/2009  14:41
"RTN","HLTPCK2B",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**120,133,122,148**;Oct 13, 1995;Build 3
"RTN","HLTPCK2B",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HLTPCK2B",4,0)
 ;
"RTN","HLTPCK2B",5,0)
 ; splitted from HLTPCK2A
"RTN","HLTPCK2B",6,0)
 ; to be called from HLTPCK2A
"RTN","HLTPCK2B",7,0)
 ;
"RTN","HLTPCK2B",8,0)
MS ;Check for Message Structure Code
"RTN","HLTPCK2B",9,0)
 I $G(ARY("MTN_ETN"))'="" D
"RTN","HLTPCK2B",10,0)
 . S ARY("MTP_ETP")=0
"RTN","HLTPCK2B",11,0)
 . S ARY("MTP_ETP")=+$O(^HL(779.005,"B",ARY("MTN_ETN"),0))
"RTN","HLTPCK2B",12,0)
 . I ('ARY("MTP_ETP")) S:(ERR="") ERR="Invalid Message Structure Code" Q
"RTN","HLTPCK2B",13,0)
 ;
"RTN","HLTPCK2B",14,0)
 ;Get server and client Protocols
"RTN","HLTPCK2B",15,0)
MSA ;if ack, then get information and quit, we don't need to respond
"RTN","HLTPCK2B",16,0)
 I $G(MSA)]"" D  Q
"RTN","HLTPCK2B",17,0)
 . ;Message is an acknowledgement, find original message
"RTN","HLTPCK2B",18,0)
 . S ARY("MSAID")=$P(MSA,FS,2),ARY("MTIENS")=0
"RTN","HLTPCK2B",19,0)
 . I ARY("MSAID")="" S:(ERR="") ERR="Invalid Message Control ID in MSA Segment - No Message ID" Q
"RTN","HLTPCK2B",20,0)
 . F  S ARY("MTIENS")=+$O(^HLMA("AH",ARY("SAP"),ARY("MSAID"),ARY("MTIENS"))) Q:'ARY("MTIENS")!($P($G(^HLMA(ARY("MTIENS"),0)),U,3)="O")
"RTN","HLTPCK2B",21,0)
 . I 'ARY("MTIENS") S:(ERR="") ERR="Invalid Message Control ID in MSA Segment - No message IEN in ""AH"" x-ref" Q
"RTN","HLTPCK2B",22,0)
 . ;get subscriber protocol and ack. to (show if this is an ack to an ack)
"RTN","HLTPCK2B",23,0)
 . S X=$G(^HLMA(ARY("MTIENS"),0)),ARY("EIDS")=$P(X,U,8),ARY("ACK")=$P(X,U,10)
"RTN","HLTPCK2B",24,0)
 . ;if no subscriber protocol then response msg. is invalid
"RTN","HLTPCK2B",25,0)
 . ;
"RTN","HLTPCK2B",26,0)
 . ; patch HL*1.6*122 start
"RTN","HLTPCK2B",27,0)
 . ; comment out the following code: for patch 109- dynamic addressing
"RTN","HLTPCK2B",28,0)
 . ; I ('ARY("EIDS")) S:(ERR="") ERR="Invalid Message Control ID in MSA Segment - No Subscr. IEN in 773" Q
"RTN","HLTPCK2B",29,0)
 . ;get message text ien in file 772 and server protocol, 'EID'
"RTN","HLTPCK2B",30,0)
 . S ARY("MTIEN")=+X,X=$G(^HL(772,+X,0)),ARY("EID")=$P(X,U,10)
"RTN","HLTPCK2B",31,0)
 . I ('ARY("EID")) S:(ERR="") ERR="Event Protocol not found" Q
"RTN","HLTPCK2B",32,0)
 . ; D EVENT^HLUTIL1(ARY("EIDS"),"770,773",.HLN)
"RTN","HLTPCK2B",33,0)
 . I ARY("EIDS") D EVENT^HLUTIL1(ARY("EIDS"),"770,773",.HLN)
"RTN","HLTPCK2B",34,0)
 . ; patch HL*1.6*122 end
"RTN","HLTPCK2B",35,0)
 ;
"RTN","HLTPCK2B",36,0)
 ;Find Server Protocol - based on sending application, message type,
"RTN","HLTPCK2B",37,0)
 ;event type and version ID
"RTN","HLTPCK2B",38,0)
 I ARY("ETP") S ARY("EID")=+$O(^ORD(101,"AHL1",ARY("SAP"),ARY("MTP"),ARY("ETP"),ARY("VEP"),0))
"RTN","HLTPCK2B",39,0)
 ;
"RTN","HLTPCK2B",40,0)
 ;Find Server Protocol - based on sending application, message type,
"RTN","HLTPCK2B",41,0)
 ;and version ID
"RTN","HLTPCK2B",42,0)
 I 'ARY("ETP") S ARY("EID")=+$O(^ORD(101,"AHL21",ARY("SAP"),ARY("MTP"),ARY("VEP"),0))
"RTN","HLTPCK2B",43,0)
 ;
"RTN","HLTPCK2B",44,0)
 I ('ARY("EID")) S:(ERR="") ERR="Event Protocol not found" Q
"RTN","HLTPCK2B",45,0)
 ;Find Client Protocol - in ITEM multiple of Server Protocol
"RTN","HLTPCK2B",46,0)
 S ARY("EIDS")=0
"RTN","HLTPCK2B",47,0)
 F  S ARY("EIDS")=+$O(^ORD(101,ARY("EID"),775,"B",ARY("EIDS"))) Q:'ARY("EIDS")!($P($G(^ORD(101,ARY("EIDS"),770)),U,2)=ARY("RAP"))
"RTN","HLTPCK2B",48,0)
 I 'ARY("EIDS") S ERR="Invalid Receiving Application for this Event" Q
"RTN","HLTPCK2B",49,0)
 D EVENT^HLUTIL1(ARY("EIDS"),"770,773",.HLN)
"RTN","HLTPCK2B",50,0)
 ;
"RTN","HLTPCK2B",51,0)
LLP ;Get logical link pointer
"RTN","HLTPCK2B",52,0)
 S ARY("LL")=$P($G(HLN(770)),"^",7)
"RTN","HLTPCK2B",53,0)
 ;
"RTN","HLTPCK2B",54,0)
FAC ;Get sending/rec facility, validate if necessary
"RTN","HLTPCK2B",55,0)
 ;
"RTN","HLTPCK2B",56,0)
 S HLCS=$E(ECH,1) ;Get component separator
"RTN","HLTPCK2B",57,0)
 S ARY("RAF")=$$P^HLTPCK2(.HDR,6) ;Receiving Facility
"RTN","HLTPCK2B",58,0)
 S ARY("SAF")=$$P^HLTPCK2(.HDR,4) ;Sending Facility
"RTN","HLTPCK2B",59,0)
 ;Get sending/receiving facility from Application Parameter file(771)
"RTN","HLTPCK2B",60,0)
 S HL771SF=$P($G(^HL(771,ARY("SAP"),0)),U,3)
"RTN","HLTPCK2B",61,0)
 S HL771RF=$P($G(^HL(771,ARY("RAP"),0)),U,3)
"RTN","HLTPCK2B",62,0)
 ;Sending/Receiving facility required?
"RTN","HLTPCK2B",63,0)
 S X=$G(^ORD(101,ARY("EIDS"),773))
"RTN","HLTPCK2B",64,0)
 S HLSFREQ=+X,HLRFREQ=+$P(X,U,2)
"RTN","HLTPCK2B",65,0)
RF ;Validate Receiving Facility
"RTN","HLTPCK2B",66,0)
 I HLRFREQ D
"RTN","HLTPCK2B",67,0)
 .I ARY("RAF")="" S:ERR="" ERR="Missing required receiving facility"
"RTN","HLTPCK2B",68,0)
 .I HL771RF]"" D  Q
"RTN","HLTPCK2B",69,0)
 ..;Facility data in 771 overrides data in site paramter file
"RTN","HLTPCK2B",70,0)
 ..Q
"RTN","HLTPCK2B",71,0)
 .;Check against local default value (site parameters)
"RTN","HLTPCK2B",72,0)
 .Q:ARY("RAF")=(HLINSTN_HLCS_HLDOM_HLCS_"DNS")
"RTN","HLTPCK2B",73,0)
 .;
"RTN","HLTPCK2B",74,0)
 .; patch HL*1.6*120 start
"RTN","HLTPCK2B",75,0)
 .; I $P(ARY("RAF"),HLCS)=HLINSTN,$P(ARY("RAF"),HLCS,3)="DNS" D  Q
"RTN","HLTPCK2B",76,0)
 . I $P(ARY("RAF"),HLCS,3)="DNS" D  Q
"RTN","HLTPCK2B",77,0)
 .. N ERROR,HLDOMP1,HLDOMP2
"RTN","HLTPCK2B",78,0)
 .. ; S HLDOMP1=$P(ARY("RAF"),HLCS,2),HLDOMP1=$$FIND1^DIC(4.2,"","BMX",HLDOMP1,"B^C","","ERROR")
"RTN","HLTPCK2B",79,0)
 .. S HLDOMP1=$P(ARY("RAF"),HLCS,2)
"RTN","HLTPCK2B",80,0)
 .. ;
"RTN","HLTPCK2B",81,0)
 .. ; assume the format is <domain>:<port #>
"RTN","HLTPCK2B",82,0)
 .. I HLDOMP1[":" S ARY("RAF-PORT")=$P(HLDOMP1,":",2)
"RTN","HLTPCK2B",83,0)
 .. S HLDOMP1=$P(HLDOMP1,":")
"RTN","HLTPCK2B",84,0)
 .. S ARY("RAF-DOMAIN")=HLDOMP1
"RTN","HLTPCK2B",85,0)
 .. ;
"RTN","HLTPCK2B",86,0)
 .. ; if first piece of domain is "HL7." or "MPI.", remove it
"RTN","HLTPCK2B",87,0)
 .. I ($E(HLDOMP1,1,4)="HL7.")!($E(HLDOMP1,1,4)="MPI.") D
"RTN","HLTPCK2B",88,0)
 ... S HLDOMP1=$P(HLDOMP1,".",2,99)
"RTN","HLTPCK2B",89,0)
 .. S HLDOMP1=$$FIND1^DIC(4.2,"","BMX",HLDOMP1,"B^C","","ERROR")
"RTN","HLTPCK2B",90,0)
 .. S HLDOMP2=HLDOM,HLDOMP2=$$FIND1^DIC(4.2,"","BMX",HLDOMP2,"B^C","","ERROR")
"RTN","HLTPCK2B",91,0)
 .. I HLDOMP1&HLDOMP2&(HLDOMP1=HLDOMP2) Q
"RTN","HLTPCK2B",92,0)
 .. ;
"RTN","HLTPCK2B",93,0)
 .. ; check DNS domain and ip address
"RTN","HLTPCK2B",94,0)
 .. ;initialize variable, HLDOMP("FLAG")
"RTN","HLTPCK2B",95,0)
 .. S HLDOMP("FLAG")=0
"RTN","HLTPCK2B",96,0)
 .. I ARY("RAF-DOMAIN")]"" D
"RTN","HLTPCK2B",97,0)
 ... ;
"RTN","HLTPCK2B",98,0)
 ... ; match DNS domain
"RTN","HLTPCK2B",99,0)
 ... I $D(^HLCS(870,"DNS",ARY("RAF-DOMAIN"))) D  Q
"RTN","HLTPCK2B",100,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",101,0)
 .... S ARY("RAF-LL")=+$O(^HLCS(870,"DNS",ARY("RAF-DOMAIN"),0))
"RTN","HLTPCK2B",102,0)
 ... I $D(^HLCS(870,"DNS",$$UP^XLFSTR(ARY("RAF-DOMAIN")))) D  Q
"RTN","HLTPCK2B",103,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",104,0)
 .... S ARY("RAF-LL")=+$O(^HLCS(870,"DNS",$$UP^XLFSTR(ARY("RAF-DOMAIN")),0))
"RTN","HLTPCK2B",105,0)
 ... I $D(^HLCS(870,"DNS",$$LOW^XLFSTR(ARY("RAF-DOMAIN")))) D  Q
"RTN","HLTPCK2B",106,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",107,0)
 .... S ARY("RAF-LL")=+$O(^HLCS(870,"DNS",$$LOW^XLFSTR(ARY("RAF-DOMAIN")),0))
"RTN","HLTPCK2B",108,0)
 ... ;
"RTN","HLTPCK2B",109,0)
 ... ; match ip address
"RTN","HLTPCK2B",110,0)
 ... I $D(^HLCS(870,"IP",ARY("RAF-DOMAIN"))) D  Q
"RTN","HLTPCK2B",111,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",112,0)
 .... S ARY("RAF-LL")=+$O(^HLCS(870,"IP",ARY("RAF-DOMAIN"),0))
"RTN","HLTPCK2B",113,0)
 .. Q:HLDOMP("FLAG")=1
"RTN","HLTPCK2B",114,0)
 .. I $P(ARY("RAF"),HLCS)=HLINSTN Q
"RTN","HLTPCK2B",115,0)
 .. ;
"RTN","HLTPCK2B",116,0)
 .. ; patch HL*1.6*148
"RTN","HLTPCK2B",117,0)
 .. ; S:ERR="" ERR="Receiving Facility mismatch."
"RTN","HLTPCK2B",118,0)
 .. S:ERR="" ERR="Receiving Facility Mismatch."
"RTN","HLTPCK2B",119,0)
 . I $P(ARY("RAF"),HLCS)=HLINSTN Q
"RTN","HLTPCK2B",120,0)
 . ; patch HL*1.6*148
"RTN","HLTPCK2B",121,0)
 . ; S:ERR="" ERR="Receiving Facility mismatch."
"RTN","HLTPCK2B",122,0)
 . S:ERR="" ERR="Receiving facility mismatch."
"RTN","HLTPCK2B",123,0)
 ; patch HL*1.6*120 end
"RTN","HLTPCK2B",124,0)
 ;
"RTN","HLTPCK2B",125,0)
SF ;Validate Sending Facility
"RTN","HLTPCK2B",126,0)
 I HLSFREQ D
"RTN","HLTPCK2B",127,0)
 .I ARY("SAF")="" S:ERR="" ERR="Missing required sending facility"
"RTN","HLTPCK2B",128,0)
 .I HL771SF]"" D  Q
"RTN","HLTPCK2B",129,0)
 ..;Check for facility data in 771
"RTN","HLTPCK2B",130,0)
 ..Q
"RTN","HLTPCK2B",131,0)
 .;If default value was sent, validate that DOMAIN RESOLVES TO LOGICAL LINK
"RTN","HLTPCK2B",132,0)
 .;If so, use this instead of Protocol definition for return path
"RTN","HLTPCK2B",133,0)
 .;
"RTN","HLTPCK2B",134,0)
 .; patch HL*1.6*120 start
"RTN","HLTPCK2B",135,0)
 . N HLDOMP
"RTN","HLTPCK2B",136,0)
 . ; S HLDOMP=$P(ARY("SAF"),HLCS,2),HLDOMP=$$FIND1^DIC(4.2,"","BMX",HLDOMP,"B^C","","ERROR")
"RTN","HLTPCK2B",137,0)
 . S HLDOMP=$P(ARY("SAF"),HLCS,2)
"RTN","HLTPCK2B",138,0)
 . ;
"RTN","HLTPCK2B",139,0)
 . ; assume the format is <domain>:<port #>
"RTN","HLTPCK2B",140,0)
 . I HLDOMP[":" S ARY("SAF-PORT")=$P(HLDOMP,":",2)
"RTN","HLTPCK2B",141,0)
 . S HLDOMP=$P(HLDOMP,":")
"RTN","HLTPCK2B",142,0)
 . S ARY("SAF-DOMAIN")=HLDOMP
"RTN","HLTPCK2B",143,0)
 . ;
"RTN","HLTPCK2B",144,0)
 . ; if first piece of domain is "HL7." or "MPI.", remove it
"RTN","HLTPCK2B",145,0)
 . I ($E(HLDOMP,1,4)="HL7.")!($E(HLDOMP,1,4)="MPI.") D
"RTN","HLTPCK2B",146,0)
 .. S HLDOMP=$P(HLDOMP,".",2,99)
"RTN","HLTPCK2B",147,0)
 . S HLDOMP=$$FIND1^DIC(4.2,"","BMX",HLDOMP,"B^C","","ERROR")
"RTN","HLTPCK2B",148,0)
 .;Note: This expects a unique domain in domain file. Multiple entries will fail
"RTN","HLTPCK2B",149,0)
 . ; I 'HLDOMP S:ERR="" ERR="Unrecognized/ambiguous domain in sending facility"
"RTN","HLTPCK2B",150,0)
 . ;
"RTN","HLTPCK2B",151,0)
 . ; check DNS domain and ip address
"RTN","HLTPCK2B",152,0)
 . I 'HLDOMP D
"RTN","HLTPCK2B",153,0)
 .. ;
"RTN","HLTPCK2B",154,0)
 .. ;initialize variable, HLDOMP("FLAG")
"RTN","HLTPCK2B",155,0)
 .. S HLDOMP("FLAG")=0
"RTN","HLTPCK2B",156,0)
 .. I ARY("SAF-DOMAIN")]"" D
"RTN","HLTPCK2B",157,0)
 ... ;
"RTN","HLTPCK2B",158,0)
 ... ; match DNS domain
"RTN","HLTPCK2B",159,0)
 ... I $D(^HLCS(870,"DNS",ARY("SAF-DOMAIN"))) D  Q
"RTN","HLTPCK2B",160,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",161,0)
 .... S ARY("SAF-LL")=+$O(^HLCS(870,"DNS",ARY("SAF-DOMAIN"),0))
"RTN","HLTPCK2B",162,0)
 ... I $D(^HLCS(870,"DNS",$$UP^XLFSTR(ARY("SAF-DOMAIN")))) D  Q
"RTN","HLTPCK2B",163,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",164,0)
 .... S ARY("SAF-LL")=+$O(^HLCS(870,"DNS",$$UP^XLFSTR(ARY("SAF-DOMAIN")),0))
"RTN","HLTPCK2B",165,0)
 ... I $D(^HLCS(870,"DNS",$$LOW^XLFSTR(ARY("SAF-DOMAIN")))) D  Q
"RTN","HLTPCK2B",166,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",167,0)
 .... S ARY("SAF-LL")=+$O(^HLCS(870,"DNS",$$LOW^XLFSTR(ARY("SAF-DOMAIN")),0))
"RTN","HLTPCK2B",168,0)
 ... ;
"RTN","HLTPCK2B",169,0)
 ... ; match ip address
"RTN","HLTPCK2B",170,0)
 ... I $D(^HLCS(870,"IP",ARY("SAF-DOMAIN"))) D  Q
"RTN","HLTPCK2B",171,0)
 .... S HLDOMP("FLAG")=1
"RTN","HLTPCK2B",172,0)
 .... S ARY("SAF-LL")=+$O(^HLCS(870,"IP",ARY("SAF-DOMAIN"),0))
"RTN","HLTPCK2B",173,0)
 .. Q:HLDOMP("FLAG")=1
"RTN","HLTPCK2B",174,0)
 .. ; quit if 1st component defined
"RTN","HLTPCK2B",175,0)
 .. S ARY("SAF-COMPONENT1")=$P(ARY("SAF"),HLCS,1)
"RTN","HLTPCK2B",176,0)
 .. Q:ARY("SAF-COMPONENT1")]""
"RTN","HLTPCK2B",177,0)
 .. ; patch HL*1.6*148
"RTN","HLTPCK2B",178,0)
 .. ; S:ERR="" ERR="Receiving Facility mismatch."
"RTN","HLTPCK2B",179,0)
 .. S:ERR="" ERR="Sending Facility mismatch."
"RTN","HLTPCK2B",180,0)
 . ; patch HL*1.6*120 end
"RTN","HLTPCK2B",181,0)
 . ;
"RTN","HLTPCK2B",182,0)
 .Q:HLDOMP=$P(HLPARAM,U)  ;This is local app to app
"RTN","HLTPCK2B",183,0)
 .I HLDOMP N HLNK S HLNK=+$O(^HLCS(870,"D",HLDOMP,0))
"RTN","HLTPCK2B",184,0)
 .I $G(HLNK) S ARY("LL")=HLNK
"RTN","HLTPCK2B",185,0)
 ;
"RTN","HLTPCK2B",186,0)
PID ;Validate processing ID
"RTN","HLTPCK2B",187,0)
 I ("DTP"'[ARY("PID")) S:(ERR="") ERR="Invalid HL7 Processing ID"
"RTN","HLTPCK2B",188,0)
 S HLPID=$P(HLPARAM,U,3) ;site param
"RTN","HLTPCK2B",189,0)
 S X=$G(^ORD(101,ARY("EID"),770)),X=$P(X,U,6) ;event driver
"RTN","HLTPCK2B",190,0)
 ;If message is 'debug' then event driver must be 'debug.'
"RTN","HLTPCK2B",191,0)
 ;If message is 'test' or 'production', then site param must match
"RTN","HLTPCK2B",192,0)
 I ARY("PID")="D"&(X'="D") S:ERR="" ERR="Processing ID Mismatch with Event Driver"
"RTN","HLTPCK2B",193,0)
 I ARY("PID")'="D"&(HLPID'=ARY("PID")) S:ERR="" ERR="Processing ID Mismatch with Site Parameters"
"RTN","HLTPCK2B",194,0)
 ;
"RTN","HLTPCK2B",195,0)
SEC ;Validate security field - access code and electronic signature
"RTN","HLTPCK2B",196,0)
 I ($P($G(HLN(773)),"^",3)) D
"RTN","HLTPCK2B",197,0)
 .S X=$P($$P^HLTPCK2(.HDR,8),$E(ECH))
"RTN","HLTPCK2B",198,0)
 .S X=$$UPPER^HLFNC(X)
"RTN","HLTPCK2B",199,0)
 .D ^XUSHSH
"RTN","HLTPCK2B",200,0)
 .I X="",(MSA="") S:(ERR="") ERR="Invalid access code" Q
"RTN","HLTPCK2B",201,0)
 .S ARY("DUZ")=0
"RTN","HLTPCK2B",202,0)
 .S:(X'="") ARY("DUZ")=+$O(^VA(200,"A",X,0))
"RTN","HLTPCK2B",203,0)
 .I ('ARY("DUZ")) S:(ERR="") ERR="Invalid access code" Q
"RTN","HLTPCK2B",204,0)
 .I (($P($G(^VA(200,ARY("DUZ"),.1)),"^")="")&('$D(MSA))) S ARY("DUZ")=0 S:(ERR="") ERR="Invalid access code" Q
"RTN","HLTPCK2B",205,0)
 .S X=$P($$P^HLTPCK2(.HDR,8),$E(ECH),3) I (X'="") D
"RTN","HLTPCK2B",206,0)
 ..S X1=$G(^VA(200,ARY("DUZ"),20))
"RTN","HLTPCK2B",207,0)
 ..I (X1="") S:(ERR="") ERR="No Signature Code on File" Q
"RTN","HLTPCK2B",208,0)
 ..S X=$$UPPER^HLFNC(X)
"RTN","HLTPCK2B",209,0)
 ..D HASH^XUSHSHP
"RTN","HLTPCK2B",210,0)
 ..I ((X'=$P(X1,"^",4))!($P(X1,"^",2)="")) S:(ERR="") ERR="Invalid Electronic Signature Code" Q
"RTN","HLTPCK2B",211,0)
 ..S ARY("ESIG")=$P(X1,"^",2)
"RTN","HLTPCK2B",212,0)
 I $D(ARY) M HLREC=ARY
"RTN","HLTPCK2B",213,0)
 Q
"VER")
8.0^22.0
"BLD",1317,6)
^119
**END**
**END**
