Released HL*1.6*151 SEQ #121
Extracted from mail message
**KIDS**:HL*1.6*151^

**INSTALL NAME**
HL*1.6*151
"BLD",1464,0)
HL*1.6*151^HEALTH LEVEL SEVEN^0^3100825^y
"BLD",1464,1,0)
^^2^2^3100825^
"BLD",1464,1,1,0)
Please see the National Patch Module for the description.
"BLD",1464,1,2,0)

"BLD",1464,4,0)
^9.64PA^^
"BLD",1464,6.3)
1
"BLD",1464,"ABPKG")
n
"BLD",1464,"KRN",0)
^9.67PA^9002226^21
"BLD",1464,"KRN",.4,0)
.4
"BLD",1464,"KRN",.401,0)
.401
"BLD",1464,"KRN",.402,0)
.402
"BLD",1464,"KRN",.403,0)
.403
"BLD",1464,"KRN",.5,0)
.5
"BLD",1464,"KRN",.84,0)
.84
"BLD",1464,"KRN",3.6,0)
3.6
"BLD",1464,"KRN",3.8,0)
3.8
"BLD",1464,"KRN",9.2,0)
9.2
"BLD",1464,"KRN",9.8,0)
9.8
"BLD",1464,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",1464,"KRN",9.8,"NM",1,0)
HLCSRPT6^^0^B994127
"BLD",1464,"KRN",9.8,"NM",2,0)
HLCSRPT1^^0^B65022780
"BLD",1464,"KRN",9.8,"NM",3,0)
HLCSRPT2^^0^B79658099
"BLD",1464,"KRN",9.8,"NM",4,0)
HLCSRPT3^^0^B48347685
"BLD",1464,"KRN",9.8,"NM","B","HLCSRPT1",2)

"BLD",1464,"KRN",9.8,"NM","B","HLCSRPT2",3)

"BLD",1464,"KRN",9.8,"NM","B","HLCSRPT3",4)

"BLD",1464,"KRN",9.8,"NM","B","HLCSRPT6",1)

"BLD",1464,"KRN",19,0)
19
"BLD",1464,"KRN",19.1,0)
19.1
"BLD",1464,"KRN",101,0)
101
"BLD",1464,"KRN",409.61,0)
409.61
"BLD",1464,"KRN",771,0)
771
"BLD",1464,"KRN",779.2,0)
779.2
"BLD",1464,"KRN",870,0)
870
"BLD",1464,"KRN",8989.51,0)
8989.51
"BLD",1464,"KRN",8989.52,0)
8989.52
"BLD",1464,"KRN",8994,0)
8994
"BLD",1464,"KRN",9002226,0)
9002226
"BLD",1464,"KRN","B",.4,.4)

"BLD",1464,"KRN","B",.401,.401)

"BLD",1464,"KRN","B",.402,.402)

"BLD",1464,"KRN","B",.403,.403)

"BLD",1464,"KRN","B",.5,.5)

"BLD",1464,"KRN","B",.84,.84)

"BLD",1464,"KRN","B",3.6,3.6)

"BLD",1464,"KRN","B",3.8,3.8)

"BLD",1464,"KRN","B",9.2,9.2)

"BLD",1464,"KRN","B",9.8,9.8)

"BLD",1464,"KRN","B",19,19)

"BLD",1464,"KRN","B",19.1,19.1)

"BLD",1464,"KRN","B",101,101)

"BLD",1464,"KRN","B",409.61,409.61)

"BLD",1464,"KRN","B",771,771)

"BLD",1464,"KRN","B",779.2,779.2)

"BLD",1464,"KRN","B",870,870)

"BLD",1464,"KRN","B",8989.51,8989.51)

"BLD",1464,"KRN","B",8989.52,8989.52)

"BLD",1464,"KRN","B",8994,8994)

"BLD",1464,"KRN","B",9002226,9002226)

"BLD",1464,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",1464,"QUES",0)
^9.62^^
"BLD",1464,"REQB",0)
^9.611^1^1
"BLD",1464,"REQB",1,0)
HL*1.6*145^2
"BLD",1464,"REQB","B","HL*1.6*145",1)

"MBREQ")
0
"PKG",9,-1)
1^1
"PKG",9,0)
HEALTH LEVEL SEVEN^HL^DHCP IMPLEMENTATION OF HEALTH LEVEL SEVEN^
"PKG",9,20,0)
^9.402P^^
"PKG",9,22,0)
^9.49I^1^1
"PKG",9,22,1,0)
1.6^2980130^2980130^6
"PKG",9,22,1,"PAH",1,0)
151^3100825
"PKG",9,22,1,"PAH",1,1,0)
^^2^2^3100825
"PKG",9,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for the description.
"PKG",9,22,1,"PAH",1,1,2,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","HLCSRPT1")
0^2^B65022780^B65022780
"RTN","HLCSRPT1",1,0)
HLCSRPT1 ;ISC-SF/RAH-TRANS LOG PENDING MSG LIST;03/01/2010  14:59 ;08/25/2010
"RTN","HLCSRPT1",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**19,50,107,145,151**;Oct 13, 1995;Build 1
"RTN","HLCSRPT1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HLCSRPT1",4,0)
 ;
"RTN","HLCSRPT1",5,0)
 Q
"RTN","HLCSRPT1",6,0)
 ;
"RTN","HLCSRPT1",7,0)
EN ; Entry Point for Pending Message Search.
"RTN","HLCSRPT1",8,0)
 D LNKSRCH Q:$D(STOP)
"RTN","HLCSRPT1",9,0)
 I HLCSLS=1 D SEARCH1 Q
"RTN","HLCSRPT1",10,0)
 D SEARCH2
"RTN","HLCSRPT1",11,0)
 Q
"RTN","HLCSRPT1",12,0)
 ;
"RTN","HLCSRPT1",13,0)
 ;
"RTN","HLCSRPT1",14,0)
SEARCH1 ;
"RTN","HLCSRPT1",15,0)
 W !!," . . . PLEASE WAIT, THIS CAN TAKE AWHILE . . .",!
"RTN","HLCSRPT1",16,0)
 S HLCSI=0,HLCSIO="" S HLCSLN=0
"RTN","HLCSRPT1",17,0)
 F  S HLCSIO=$O(^HLMA("AC",HLCSIO)) Q:(HLCSIO="")  D
"RTN","HLCSRPT1",18,0)
 . S HLCSN=HLCSI,HLCSJ=0
"RTN","HLCSRPT1",19,0)
 . F  S HLCSJ=$O(^HLMA("AC",HLCSIO,HLCSLINK,HLCSJ)) Q:(HLCSJ="")  D
"RTN","HLCSRPT1",20,0)
 .. I '$D(^HLMA(HLCSJ,0)) Q
"RTN","HLCSRPT1",21,0)
 .. I '$D(^HLMA("AG",1,HLCSJ)) Q
"RTN","HLCSRPT1",22,0)
 .. S HLCSX=^HLMA(HLCSJ,0),HLCSDTE=$P(HLCSX,U,1)
"RTN","HLCSRPT1",23,0)
 .. S HLCSLNK="          "
"RTN","HLCSRPT1",24,0)
 .. I $D(^HLCS(870,HLCSLINK,0)) S HLCSLNK=$P(^HLCS(870,HLCSLINK,0),U,1)
"RTN","HLCSRPT1",25,0)
 .. ; patch HL*1.6*145 start
"RTN","HLCSRPT1",26,0)
 .. ; S HLCSEVN1=$P(HLCSX,U,13) I HLCSEVN1'="",($D(^HL(771.2,HLCSEVN1,0))) S HLCSEVN1=$P(^HL(771.2,HLCSEVN1,0),U,1)
"RTN","HLCSRPT1",27,0)
 .. ; S HLCSEVN2=$P(HLCSX,U,14) I HLCSEVN2'="",($D(^HL(779.001,HLCSEVN2,0))) S HLCSEVN2=$P(^HL(779.001,HLCSEVN2,0),U,1)
"RTN","HLCSRPT1",28,0)
 .. N SEG
"RTN","HLCSRPT1",29,0)
 .. D HEADSEG(HLCSJ,.SEG)
"RTN","HLCSRPT1",30,0)
 .. S HLCSEVN1=$G(SEG("MESSAGE TYPE"))
"RTN","HLCSRPT1",31,0)
 .. S HLCSEVN2=$G(SEG("EVENT TYPE"))
"RTN","HLCSRPT1",32,0)
 .. ; patch HL*1.6*145 end
"RTN","HLCSRPT1",33,0)
 .. I HLCSEVN1="" S HLCSEVN1="   "
"RTN","HLCSRPT1",34,0)
 .. I HLCSEVN2="" S HLCSEVN2="   "
"RTN","HLCSRPT1",35,0)
 .. I $L(HLCSEVN1)<3 S HLCSEVN1=HLCSEVN1_"   ",HLCSEVN1=$E(HLCSEVN1,1,3)
"RTN","HLCSRPT1",36,0)
 .. I $L(HLCSEVN2)<3 S HLCSEVN2=HLCSEVN2_"   ",HLCSEVN2=$E(HLCSEVN2,1,3)
"RTN","HLCSRPT1",37,0)
 .. S HLCSEVN=HLCSEVN1_":"_HLCSEVN2
"RTN","HLCSRPT1",38,0)
 .. D FORMAT^HLCSRPT
"RTN","HLCSRPT1",39,0)
 .. Q
"RTN","HLCSRPT1",40,0)
 . Q
"RTN","HLCSRPT1",41,0)
 I '$D(^TMP("TLOG",$J,1)) W !!,HLCSNREC,!! S DIR(0)="E" D ^DIR K DIR Q
"RTN","HLCSRPT1",42,0)
 I VERS22'="YES" S HLCSTITL="IEN RECORD #   MESSAGE ID #         Log Link   Msg:Evn IO Sndg Apl Rcvr Apl HDR"
"RTN","HLCSRPT1",43,0)
 E  S HLCSTITL="MESSAGE ID #         D/T Entered   Log Link   Msg:Evn IO Sndg Apl Rcvr Apl     "
"RTN","HLCSRPT1",44,0)
 I VERS22'="YES" D FAKR
"RTN","HLCSRPT1",45,0)
 D DISPLAY^HLCSRPT K ^TMP("TLOG",$J)
"RTN","HLCSRPT1",46,0)
 Q
"RTN","HLCSRPT1",47,0)
 ;
"RTN","HLCSRPT1",48,0)
SEARCH2 ;
"RTN","HLCSRPT1",49,0)
 W !!," . . . PLEASE WAIT, THIS CAN TAKE AWHILE . . .",!
"RTN","HLCSRPT1",50,0)
 S HLCSI=0,HLCSIO="" S HLCSLN=0
"RTN","HLCSRPT1",51,0)
 F  S HLCSIO=$O(^HLMA("AC",HLCSIO)) Q:(HLCSIO="")  D
"RTN","HLCSRPT1",52,0)
 . S HLCSN=HLCSI,HLCSJ=0,HLCSLINK=0
"RTN","HLCSRPT1",53,0)
 . F  S HLCSLINK=$O(^HLMA("AC",HLCSIO,HLCSLINK)) Q:(HLCSLINK="")  D
"RTN","HLCSRPT1",54,0)
 .. F  S HLCSJ=$O(^HLMA("AC",HLCSIO,HLCSLINK,HLCSJ)) Q:(HLCSJ="")  D
"RTN","HLCSRPT1",55,0)
 ... I '$D(^HLMA(HLCSJ,0)) Q
"RTN","HLCSRPT1",56,0)
 ... I '$D(^HLMA("AG",1,HLCSJ)) Q
"RTN","HLCSRPT1",57,0)
 ... S HLCSX=^HLMA(HLCSJ,0),HLCSDTE=$P(HLCSX,U,1)
"RTN","HLCSRPT1",58,0)
 ... S HLCSLNK="          "
"RTN","HLCSRPT1",59,0)
 ... I $D(^HLCS(870,HLCSLINK,0)) S HLCSLNK=$P(^HLCS(870,HLCSLINK,0),U,1)
"RTN","HLCSRPT1",60,0)
 ... ; patch HL*1.6*145 start
"RTN","HLCSRPT1",61,0)
 ... ; S HLCSEVN1=$P(HLCSX,U,13) I HLCSEVN1'="",($D(^HL(771.2,HLCSEVN1,0))) S HLCSEVN1=$P(^HL(771.2,HLCSEVN1,0),U,1)
"RTN","HLCSRPT1",62,0)
 ... ; S HLCSEVN2=$P(HLCSX,U,14) I HLCSEVN2'="",($D(^HL(779.001,HLCSEVN2,0))) S HLCSEVN2=$P(^HL(779.001,HLCSEVN2,0),U,1)
"RTN","HLCSRPT1",63,0)
 ... N SEG
"RTN","HLCSRPT1",64,0)
 ... D HEADSEG(HLCSJ,.SEG)
"RTN","HLCSRPT1",65,0)
 ... S HLCSEVN1=$G(SEG("MESSAGE TYPE"))
"RTN","HLCSRPT1",66,0)
 ... S HLCSEVN2=$G(SEG("EVENT TYPE"))
"RTN","HLCSRPT1",67,0)
 ... ; patch HL*1.6*145 end
"RTN","HLCSRPT1",68,0)
 ... I HLCSEVN1="" S HLCSEVN1="   "
"RTN","HLCSRPT1",69,0)
 ... I HLCSEVN2="" S HLCSEVN2="   "
"RTN","HLCSRPT1",70,0)
 ... I $L(HLCSEVN1)<3 S HLCSEVN1=HLCSEVN1_"   ",HLCSEVN1=$E(HLCSEVN1,1,3)
"RTN","HLCSRPT1",71,0)
 ... I $L(HLCSEVN2)<3 S HLCSEVN2=HLCSEVN2_"   ",HLCSEVN2=$E(HLCSEVN2,1,3)
"RTN","HLCSRPT1",72,0)
 ... S HLCSEVN=HLCSEVN1_":"_HLCSEVN2
"RTN","HLCSRPT1",73,0)
 ... D FORMAT^HLCSRPT
"RTN","HLCSRPT1",74,0)
 ... Q
"RTN","HLCSRPT1",75,0)
 .. Q
"RTN","HLCSRPT1",76,0)
 . Q
"RTN","HLCSRPT1",77,0)
 I '$D(^TMP("TLOG",$J,1)) W !!,HLCSNREC,!! S DIR(0)="E" D ^DIR K DIR Q
"RTN","HLCSRPT1",78,0)
 I VERS22'="YES" S HLCSTITL="IEN RECORD #   MESSAGE ID #         Log Link   Msg:Evn IO Sndg Apl Rcvr Apl HDR"
"RTN","HLCSRPT1",79,0)
 E  S HLCSTITL="MESSAGE ID #         D/T Entered   Log Link   Msg:Evn IO Sndg Apl Rcvr Apl     "
"RTN","HLCSRPT1",80,0)
 I VERS22'="YES" D FAKR
"RTN","HLCSRPT1",81,0)
 D DISPLAY^HLCSRPT K ^TMP("TLOG",$J)
"RTN","HLCSRPT1",82,0)
 Q
"RTN","HLCSRPT1",83,0)
 ;
"RTN","HLCSRPT1",84,0)
LNKSRCH ; Report pending messages on A logical link.
"RTN","HLCSRPT1",85,0)
 W @IOF,! S HLCSHDR="Logical Link Selection" D HLCSBAR
"RTN","HLCSRPT1",86,0)
 S DIR(0)="PAO^870:AEO",DIR("A")="Select Logical Link:  ALL//"
"RTN","HLCSRPT1",87,0)
 D ^DIR S:($D(DTOUT)!($D(DUOUT))) STOP=1 Q:$D(STOP)
"RTN","HLCSRPT1",88,0)
 I X="" S HLCSLS="" K DIR,X,Y Q
"RTN","HLCSRPT1",89,0)
 I Y=-1 W !,X_" NOT VALID " K X,Y G LNKSRCH
"RTN","HLCSRPT1",90,0)
 S HLCSLINK=$P(Y,U,1),HLCSLNK=$P(Y,U,2) K DIR,X,Y
"RTN","HLCSRPT1",91,0)
 S HLCSLS=1
"RTN","HLCSRPT1",92,0)
 Q
"RTN","HLCSRPT1",93,0)
 ;
"RTN","HLCSRPT1",94,0)
FAKR ; Build fake record to pass FM21 Browser edits.
"RTN","HLCSRPT1",95,0)
 S HLCSJ=^TMP("TLOG",$J,1)
"RTN","HLCSRPT1",96,0)
 S HLCSJ=+$P(HLCSJ," ",1)
"RTN","HLCSRPT1",97,0)
 S ^TMP($J,"MESSAGE",HLCSJ,0)="^^1^1"
"RTN","HLCSRPT1",98,0)
 S ^TMP($J,"MESSAGE",HLCSJ,1,0)=" Fake Record to pass Browser edits. "
"RTN","HLCSRPT1",99,0)
 S HLCSRNO=HLCSJ
"RTN","HLCSRPT1",100,0)
 Q
"RTN","HLCSRPT1",101,0)
 ;
"RTN","HLCSRPT1",102,0)
SHOWMSG(XXY,XXZ) ;
"RTN","HLCSRPT1",103,0)
 ; Each node, ^tmp($j,"message",record_ien), invokes this code
"RTN","HLCSRPT1",104,0)
 ; to compile a 'virtual w-p document' when a message is browsed.
"RTN","HLCSRPT1",105,0)
 I $D(^HLMA(XXY,"MSH",0)) D
"RTN","HLCSRPT1",106,0)
 . S ^TMP($J,"MESSAGE",XXY,0)=^HLMA(XXY,"MSH",0)
"RTN","HLCSRPT1",107,0)
 . S YY1=$P(^HLMA(XXY,"MSH",0),U,3),YY2=$P(^HLMA(XXY,"MSH",0),U,4)
"RTN","HLCSRPT1",108,0)
 E  S ^TMP($J,"MESSAGE",XXY,0)="1^1"
"RTN","HLCSRPT1",109,0)
 S XLINE=^HLMA(XXY,0)
"RTN","HLCSRPT1",110,0)
 S LINE="Record #: "_XXY_"                    ",LINE=$E(LINE,1,30)
"RTN","HLCSRPT1",111,0)
 S LINE=LINE_"Message #: "_$P(XLINE,U,2)
"RTN","HLCSRPT1",112,0)
 S ^TMP($J,"MESSAGE",XXY,1,0)=LINE
"RTN","HLCSRPT1",113,0)
 S DTE=$P(XLINE,U,1) I $P($G(^HL(772,DTE,0)),U,1)'="" S DTE=$P(^HL(772,DTE,0),U,1),DTE=$E(DTE,4,7)_$E(DTE,2,3)_"."_$P(DTE,".",2)_"      "
"RTN","HLCSRPT1",114,0)
 I $D(^HLMA(XXY,"S")),$P(^HLMA(XXY,"S"),U,1)'="" S DTP=$P(^HLMA(XXY,"S"),U,1) S DTP=$E(DTP,4,7)_$E(DTP,2,3)_"."_$P(DTP,".",2)
"RTN","HLCSRPT1",115,0)
 E  S DTP=" "
"RTN","HLCSRPT1",116,0)
 S LINE="D/T Entered: "_DTE,LINE=$E(LINE,1,30)_"D/T Processed: "_DTP
"RTN","HLCSRPT1",117,0)
 S ^TMP($J,"MESSAGE",XXY,2,0)=LINE K DTE,DTP
"RTN","HLCSRPT1",118,0)
 S LINE="Logical Link: " I $P(XLINE,U,7)'="",($D(^HLCS(870,$P(XLINE,U,7),0))) S LINE=LINE_$P(^HLCS(870,$P(XLINE,U,7),0),U,1)
"RTN","HLCSRPT1",119,0)
 S LINE=LINE_"                ",LINE=$E(LINE,1,30)
"RTN","HLCSRPT1",120,0)
 S LINE=LINE_"Ack To MSG#: " I $P(XLINE,U,6)'="",($D(^HLMA($P(XLINE,U,6),0))) S LINE=LINE_$P(^HLMA($P(XLINE,U,6),0),U,2)
"RTN","HLCSRPT1",121,0)
 S ^TMP($J,"MESSAGE",XXY,3,0)=LINE
"RTN","HLCSRPT1",122,0)
 S DTS="" I $P($G(^HLMA(XXY,"P")),U,2)'="" S DTS=$P(^HLMA(XXY,"P"),U,2),DTS=$E(DTS,4,7)_$E(DTS,2,3)_"."_$P(DTS,".",2)
"RTN","HLCSRPT1",123,0)
 S LINE="D/T STATUS: "_DTS_"                  ",LINE=$E(LINE,1,30),LINE=LINE_"STATUS: "
"RTN","HLCSRPT1",124,0)
 I $P(^HLMA(XXY,"P"),U,1)'="" S LINE=LINE_$P(^HL(771.6,+$P(^HLMA(XXY,"P"),U,1),0),U,1)
"RTN","HLCSRPT1",125,0)
 S ^TMP($J,"MESSAGE",XXY,4,0)=LINE K DTS
"RTN","HLCSRPT1",126,0)
 S LINE="ERR MSG: " I $P(^HLMA(XXY,"P"),U,3)'="" S LINE=LINE_$E($P(^HLMA(XXY,"P"),U,3),1,20)
"RTN","HLCSRPT1",127,0)
 S LINE=LINE_"                      ",LINE=$E(LINE,1,30)_"ERR TYPE: "
"RTN","HLCSRPT1",128,0)
 I $P(^HLMA(XXY,"P"),U,4)'="" S LINE=LINE_$P(^HL(771.7,+$P(^HLMA(XXY,"P"),U,4),0),U,1)
"RTN","HLCSRPT1",129,0)
 S ^TMP($J,"MESSAGE",XXY,5,0)=LINE
"RTN","HLCSRPT1",130,0)
 S LINE="Sending Appl: " I $P(XLINE,U,11)'="",($D(^HL(771,$P(XLINE,U,11),0))) S LINE=LINE_$P(^HL(771,$P(XLINE,U,11),0),U,1)
"RTN","HLCSRPT1",131,0)
 S ^TMP($J,"MESSAGE",XXY,6,0)=LINE
"RTN","HLCSRPT1",132,0)
 S LINE="Receiving Appl: " I $P(XLINE,U,12)'="",($D(^HL(771,$P(XLINE,U,12),0))) S LINE=LINE_$P(^HL(771,$P(XLINE,U,12),0),U,1)
"RTN","HLCSRPT1",133,0)
 S ^TMP($J,"MESSAGE",XXY,7,0)=LINE
"RTN","HLCSRPT1",134,0)
 ; patch HL*1.6*145 start
"RTN","HLCSRPT1",135,0)
 ; S LINE="Message Type: " I $P(XLINE,U,13)'="",($D(^HL(771.2,$P(XLINE,U,13),0))) S LINE=LINE_$P(^HL(771.2,$P(XLINE,U,13),0),U,1)
"RTN","HLCSRPT1",136,0)
 N SEG
"RTN","HLCSRPT1",137,0)
 D HEADSEG(XXY,.SEG)
"RTN","HLCSRPT1",138,0)
 S LINE="Message Type: "_$G(SEG("MESSAGE TYPE"))
"RTN","HLCSRPT1",139,0)
 S LINE=LINE_"                    ",LINE=$E(LINE,1,30)_"Event Type: "
"RTN","HLCSRPT1",140,0)
 ; I $P(XLINE,U,14)'="",($D(^HL(779.001,$P(XLINE,U,14),0))) S LINE=LINE_$P(^HL(779.001,$P(XLINE,U,14),0),U,1)
"RTN","HLCSRPT1",141,0)
 S LINE=LINE_$G(SEG("EVENT TYPE"))
"RTN","HLCSRPT1",142,0)
 ; patch HL*1.6*145 end
"RTN","HLCSRPT1",143,0)
 S ^TMP($J,"MESSAGE",XXY,8,0)=LINE K LINE,XLINE
"RTN","HLCSRPT1",144,0)
 S ^TMP($J,"MESSAGE",XXY,9,0)="MESSAGE HEADER: "
"RTN","HLCSRPT1",145,0)
 S LN1=.5,LN2=10
"RTN","HLCSRPT1",146,0)
 I $D(^HLMA(XXY,"MSH",0)) D
"RTN","HLCSRPT1",147,0)
 . F  S LN1=$O(^HLMA(XXY,"MSH",LN1)) Q:LN1=""  D
"RTN","HLCSRPT1",148,0)
 .. S ^TMP($J,"MESSAGE",XXY,LN2,0)=^HLMA(XXY,"MSH",LN1,0)
"RTN","HLCSRPT1",149,0)
 .. ;HL*1.6*107 start:  to fix the multiple lines per segment
"RTN","HLCSRPT1",150,0)
 .. ;S LN2=LN2+1,LN1=LN1+1
"RTN","HLCSRPT1",151,0)
 .. S LN2=LN2+1
"RTN","HLCSRPT1",152,0)
 .. ;HL*1.6*107 end
"RTN","HLCSRPT1",153,0)
 ..Q
"RTN","HLCSRPT1",154,0)
 S LN1=.5
"RTN","HLCSRPT1",155,0)
 S ^TMP($J,"MESSAGE",XXY,LN2,0)="MESSAGE TEXT: ",LN2=LN2+1
"RTN","HLCSRPT1",156,0)
 I $D(^HL(772,XXZ,"IN",0)) D
"RTN","HLCSRPT1",157,0)
 . F  S LN1=$O(^HL(772,XXZ,"IN",LN1)) Q:(LN1="")  D
"RTN","HLCSRPT1",158,0)
 .. S ^TMP($J,"MESSAGE",XXY,LN2,0)=^HL(772,XXZ,"IN",LN1,0)
"RTN","HLCSRPT1",159,0)
 .. ;HL*1.6*107 start: to fix the multiple lines per segment
"RTN","HLCSRPT1",160,0)
 .. ;S LN2=LN2+1,LN1=LN1+1
"RTN","HLCSRPT1",161,0)
 .. S LN2=LN2+1
"RTN","HLCSRPT1",162,0)
 .. ;HL*1.6*107 end
"RTN","HLCSRPT1",163,0)
 ..Q
"RTN","HLCSRPT1",164,0)
 S (YY1,YY2)=LN2-1
"RTN","HLCSRPT1",165,0)
 S Y1Y2=YY1_"^"_YY2
"RTN","HLCSRPT1",166,0)
 S $P(^TMP($J,"MESSAGE",XXY,0),U,3,4)=Y1Y2
"RTN","HLCSRPT1",167,0)
 K LN1,LN2,Y1Y2,YY1,YY2
"RTN","HLCSRPT1",168,0)
 Q
"RTN","HLCSRPT1",169,0)
 ;
"RTN","HLCSRPT1",170,0)
HLCSBAR ; Center Title on Top Line of Screen
"RTN","HLCSRPT1",171,0)
 W RVON,?(80-$L(HLCSHDR)\2),HLCSHDR,$E(SPACE,$X,77),RVOFF,!
"RTN","HLCSRPT1",172,0)
 Q
"RTN","HLCSRPT1",173,0)
 ;
"RTN","HLCSRPT1",174,0)
HEADSEG(IEN,SEG) ;
"RTN","HLCSRPT1",175,0)
 ; patch HL*1.6*145
"RTN","HLCSRPT1",176,0)
 ; input:
"RTN","HLCSRPT1",177,0)
 ;    IEN: ien of message in file #773
"RTN","HLCSRPT1",178,0)
 ;    SEG: passing by reference
"RTN","HLCSRPT1",179,0)
 ; output:
"RTN","HLCSRPT1",180,0)
 ;    SEG
"RTN","HLCSRPT1",181,0)
 ;
"RTN","HLCSRPT1",182,0)
 Q:'$G(IEN)
"RTN","HLCSRPT1",183,0)
 K SEG
"RTN","HLCSRPT1",184,0)
 S SEG=$G(^HLMA(IEN,"MSH",1,0))_$G(^HLMA(IEN,"MSH",2,0))
"RTN","HLCSRPT1",185,0)
 Q:SEG']""
"RTN","HLCSRPT1",186,0)
 S SEG("CODE")=$E(SEG,1,3)
"RTN","HLCSRPT1",187,0)
 Q:$L(SEG("CODE"))'=3
"RTN","HLCSRPT1",188,0)
 S SEG("FIELD")=$E(SEG,4)
"RTN","HLCSRPT1",189,0)
 Q:SEG("FIELD")=""
"RTN","HLCSRPT1",190,0)
 S SEG("COMPONENT")=$E(SEG,5)
"RTN","HLCSRPT1",191,0)
 Q:SEG("COMPONENT")=""
"RTN","HLCSRPT1",192,0)
 S SEG("SUB-COMPONENT")=$E(SEG,8)
"RTN","HLCSRPT1",193,0)
 S SEG("ECH-2")=$E(SEG,6)
"RTN","HLCSRPT1",194,0)
 ;
"RTN","HLCSRPT1",195,0)
 S SEG("MESSAGE TYPE")=""
"RTN","HLCSRPT1",196,0)
 S SEG("EVENT TYPE")=""
"RTN","HLCSRPT1",197,0)
 ;
"RTN","HLCSRPT1",198,0)
 I SEG("CODE")="MSH" D
"RTN","HLCSRPT1",199,0)
 . S SEG("SEG-9")=$P(SEG,SEG("FIELD"),9)
"RTN","HLCSRPT1",200,0)
 . S SEG("MESSAGE TYPE")=$P(SEG("SEG-9"),SEG("COMPONENT"))
"RTN","HLCSRPT1",201,0)
 . S SEG("EVENT TYPE")=$P(SEG("SEG-9"),SEG("COMPONENT"),2)
"RTN","HLCSRPT1",202,0)
 ;
"RTN","HLCSRPT1",203,0)
 I SEG("CODE")="BHS" D
"RTN","HLCSRPT1",204,0)
 . S SEG("SEG-9")=$P(SEG,SEG("FIELD"),9)
"RTN","HLCSRPT1",205,0)
 . I SEG("SEG-9")]"" D
"RTN","HLCSRPT1",206,0)
 .. S SEG("SEG-9-2")=$P(SEG("SEG-9"),SEG("COMPONENT"),3)
"RTN","HLCSRPT1",207,0)
 .. S SEG("MESSAGE TYPE")=SEG("SEG-9-2")
"RTN","HLCSRPT1",208,0)
 .. I SEG("SEG-9-2")]"",$L(SEG("ECH-2")),(SEG("SEG-9-2")[SEG("ECH-2")) D
"RTN","HLCSRPT1",209,0)
 ... S SEG("MESSAGE TYPE")=$P(SEG("SEG-9-2"),SEG("ECH-2"))
"RTN","HLCSRPT1",210,0)
 ... S SEG("EVENT TYPE")=$P(SEG("SEG-9-2"),SEG("ECH-2"),2)
"RTN","HLCSRPT1",211,0)
 .. ;
"RTN","HLCSRPT1",212,0)
 .. Q:SEG("SUB-COMPONENT")=""
"RTN","HLCSRPT1",213,0)
 .. I SEG("SEG-9-2")]"",(SEG("SEG-9-2")[SEG("SUB-COMPONENT")) D
"RTN","HLCSRPT1",214,0)
 ... S SEG("MESSAGE TYPE")=$P(SEG("SEG-9-2"),SEG("SUB-COMPONENT"))
"RTN","HLCSRPT1",215,0)
 ... S SEG("EVENT TYPE")=$P(SEG("SEG-9-2"),SEG("SUB-COMPONENT"),2)
"RTN","HLCSRPT1",216,0)
 Q
"RTN","HLCSRPT1",217,0)
 ;
"RTN","HLCSRPT2")
0^3^B79658099^B79658099
"RTN","HLCSRPT2",1,0)
HLCSRPT2 ;ISC-SF/RAH-TRANS LOG ERROR LIST ;08/25/2010
"RTN","HLCSRPT2",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**50,85,107,145,151**;Oct 13, 1995;Build 1
"RTN","HLCSRPT2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HLCSRPT2",4,0)
 ;Calls to SAVEDDB^DDBR2, USAVEDDB^DDBR2, PSR^DDBR0, and WP^DDBR2 supported by IA#2540 & IA#3594
"RTN","HLCSRPT2",5,0)
 ;
"RTN","HLCSRPT2",6,0)
 Q
"RTN","HLCSRPT2",7,0)
 ;
"RTN","HLCSRPT2",8,0)
EN ; Entry point for reporting error messages.
"RTN","HLCSRPT2",9,0)
 ;
"RTN","HLCSRPT2",10,0)
 ; All NEWs below added by HL*1.6*85
"RTN","HLCSRPT2",11,0)
 N BLDOFF,BLDON,DY,ERRDTB,ERRDTE,HLCSCLNT,HLCSDTE,HLCSDTP
"RTN","HLCSRPT2",12,0)
 N HLCSEVN,HLCSEVN1,HLCSEVN2,HLCSHDR,HLCSK,HLCSLINK
"RTN","HLCSRPT2",13,0)
 N HLCSLNK,HLCSMID,HLCSMX,HLCSNREC,HLCSPTR,HLCSRNO,HLCSSRVR
"RTN","HLCSRPT2",14,0)
 N HLCSTITL,HLCSTYP,HLERR,IEN773,LAST773,LASTPDT
"RTN","HLCSRPT2",15,0)
 N LPIENS,NOREC,NUMERR,OLD773,OLDPDT,RVOFF,RVON,SPACE
"RTN","HLCSRPT2",16,0)
 N SPACE20,SPACE25,SPACE30,SPACE80,STOP,TYPEINFO,VERS22
"RTN","HLCSRPT2",17,0)
 ;
"RTN","HLCSRPT2",18,0)
 D CLEANGBL ;HL*1.6*85
"RTN","HLCSRPT2",19,0)
 ;
"RTN","HLCSRPT2",20,0)
 S (STOP,NOREC)=""
"RTN","HLCSRPT2",21,0)
 D SCREEN^HLCSRPT
"RTN","HLCSRPT2",22,0)
 S HLCSNREC=BLDON_" ===>>>  NO MATCHING RECORDS  <<<=== "_BLDOFF
"RTN","HLCSRPT2",23,0)
 S HLCSTITL="#773-IEN      Message-ID       Procd     Log-Link   Msg:Evn IO Sndg-Apl Rcvr-Apl" ;HL*1.6*85
"RTN","HLCSRPT2",24,0)
 S HLCSPTR=1,HLCSRNO=1
"RTN","HLCSRPT2",25,0)
 S VERS22=""
"RTN","HLCSRPT2",26,0)
 I 22'>+$$VERSION^XPDUTL("DI")!($$PATCH^XPDUTL("DI*21.0*32")) S VERS22="YES" ;HL*1.6*85
"RTN","HLCSRPT2",27,0)
 I VERS22'="YES" D
"RTN","HLCSRPT2",28,0)
 . S ^TMP("DDBPF1Z",$J)="D SHOWMSG^HLCSRPT2 Q"
"RTN","HLCSRPT2",29,0)
 . S HLCSTITL=HLCSTITL_" ERR"
"RTN","HLCSRPT2",30,0)
 E  S HLCSTITL=HLCSTITL_"    "
"RTN","HLCSRPT2",31,0)
 S ^TMP($J,"LIST","MESSAGE")="^TMP($J,""MESSAGE"",HLCSRNO)"
"RTN","HLCSRPT2",32,0)
 S ^TMP($J,"LIST",HLCSTITL_" ERR")="^TMP(""TLOG"",$J)" ;HL*1.6*85
"RTN","HLCSRPT2",33,0)
 ;
"RTN","HLCSRPT2",34,0)
REEN ; Internal Re-entry Point
"RTN","HLCSRPT2",35,0)
 S STOP=""
"RTN","HLCSRPT2",36,0)
 D WHATERR Q:(+$G(STOP))
"RTN","HLCSRPT2",37,0)
 QUIT:'$$SETUP^HLCSRPT4  ;-> HL*1.6*85
"RTN","HLCSRPT2",38,0)
 I TYPEINFO=2 S HLCSTITL="#773-IEN      Message-ID       Procd     Log-Link   Error-type               " ;HL*1.6*85
"RTN","HLCSRPT2",39,0)
 D ERRSRCH
"RTN","HLCSRPT2",40,0)
 I ERRDTE[9999999 S ERRDTE=$$NOW^XLFDT
"RTN","HLCSRPT2",41,0)
 I +$G(STOP) D EXIT Q
"RTN","HLCSRPT2",42,0)
 I +$G(NOREC) W !!,HLCSNREC,!! S DIR(0)="E" D ^DIR K DIR,X,Y D EXIT Q
"RTN","HLCSRPT2",43,0)
 D DISPLAY^HLCSRPT ;HL*1.6*85
"RTN","HLCSRPT2",44,0)
 D CLEANGBL ;HL*1.6*85
"RTN","HLCSRPT2",45,0)
 D EXIT
"RTN","HLCSRPT2",46,0)
 S STOP=1
"RTN","HLCSRPT2",47,0)
 Q
"RTN","HLCSRPT2",48,0)
 ;
"RTN","HLCSRPT2",49,0)
CLEANGBL ; New subroutine added by HL*1.6*85 to clean up globals
"RTN","HLCSRPT2",50,0)
 N GBL
"RTN","HLCSRPT2",51,0)
 F GBL="LIST","MESSAGE" KILL ^TMP($J,GBL)
"RTN","HLCSRPT2",52,0)
 F GBL="DDBPF1Z","DDBLST","TLOG","TMPLOG" KILL ^TMP(GBL,$J)
"RTN","HLCSRPT2",53,0)
 QUIT
"RTN","HLCSRPT2",54,0)
 ;
"RTN","HLCSRPT2",55,0)
WHATERR ; Ask for one error code; with default of all
"RTN","HLCSRPT2",56,0)
 W @IOF,! S HLCSHDR="Error Type Selection" D HLCSBAR
"RTN","HLCSRPT2",57,0)
 S X="",HLCSER="ALL"
"RTN","HLCSRPT2",58,0)
 S DIR(0)="PAO^771.7:AEO",DIR("A")="Select Error Type:  ALL//"
"RTN","HLCSRPT2",59,0)
 D ^DIR S:($D(DTOUT)!($D(DUOUT))) STOP=1
"RTN","HLCSRPT2",60,0)
 I +$G(STOP) K DIR,X,Y Q
"RTN","HLCSRPT2",61,0)
 I X="" K DIR,X,Y Q
"RTN","HLCSRPT2",62,0)
 I Y=-1 W !,X_" NOT VALID " K DIR,X,Y G WHATERR
"RTN","HLCSRPT2",63,0)
 S HLCSTER1=$P(Y,U,1),HLCSTER2=$P(Y,U,2) K DIR,X,Y
"RTN","HLCSRPT2",64,0)
 S HLCSER=1
"RTN","HLCSRPT2",65,0)
 Q
"RTN","HLCSRPT2",66,0)
 ;
"RTN","HLCSRPT2",67,0)
ERRSRCH ; Find and report the 'errored' messages (Multiple HL*1.6*85 changes start here)
"RTN","HLCSRPT2",68,0)
 ; ERRDTB,ERRDTE,NUMERR -- req
"RTN","HLCSRPT2",69,0)
 N NEXT,CT
"RTN","HLCSRPT2",70,0)
 W !!,"PLEASE WAIT, THIS CAN TAKE AWHILE..."
"RTN","HLCSRPT2",71,0)
 ;
"RTN","HLCSRPT2",72,0)
 ;HL*1.6*85 - LOADERR loads all errors, using the user-supplied 
"RTN","HLCSRPT2",73,0)
 ;            parameters, and places them in ^TMP.  Below, the code
"RTN","HLCSRPT2",74,0)
 ;            now loops thru ^TMP instead of ^HLMA (which happened
"RTN","HLCSRPT2",75,0)
 ;            in LOADERR.)
"RTN","HLCSRPT2",76,0)
 D LOADERR^HLCSRPT4
"RTN","HLCSRPT2",77,0)
 ;
"RTN","HLCSRPT2",78,0)
 ; Looping starts here...
"RTN","HLCSRPT2",79,0)
 S HLCSI=0,HLCSST=0,HLCSLN=0
"RTN","HLCSRPT2",80,0)
 F  S HLCSI=$O(^TMP("ERRLST",$J,HLCSI)) Q:HLCSI'>0  D
"RTN","HLCSRPT2",81,0)
 .  S HLCSN=HLCSI,HLCSJ=0
"RTN","HLCSRPT2",82,0)
 .  F  S HLCSJ=$O(^TMP("ERRLST",$J,HLCSI,HLCSJ)) Q:HLCSJ'>0  D
"RTN","HLCSRPT2",83,0)
 .. ;HL*1.6*85 changes end here, until noted otherwise below.
"RTN","HLCSRPT2",84,0)
 ..
"RTN","HLCSRPT2",85,0)
 .. I '$D(^HLMA(HLCSJ,0)) Q
"RTN","HLCSRPT2",86,0)
 .. S HLCSX=^HLMA(HLCSJ,0),HLCSDTE=$P(HLCSX,U,1)
"RTN","HLCSRPT2",87,0)
 .. I $D(^HLMA(HLCSJ,"S")) S HLCSDTP=$P(^HLMA(HLCSJ,"S"),U,1)
"RTN","HLCSRPT2",88,0)
 .. E  S HLCSDTP=""
"RTN","HLCSRPT2",89,0)
 .. I $D(^HLMA(HLCSJ,"P")) S HLCSY=^HLMA(HLCSJ,"P")
"RTN","HLCSRPT2",90,0)
 .. E  S HLCSY=""
"RTN","HLCSRPT2",91,0)
 .. I HLCSER=1,(HLCSTER1'=$P(HLCSY,U,4)) Q
"RTN","HLCSRPT2",92,0)
 .. S HLCSER1=$P(HLCSY,U,4),HLCSER2=HLCSER1
"RTN","HLCSRPT2",93,0)
 .. I HLCSER1'="",($D(^HL(771.7,HLCSER1,0))) S HLCSER1=$P(^HL(771.7,HLCSER1,0),U,1)
"RTN","HLCSRPT2",94,0)
 .. S HLCSERMS=$P(HLCSY,U,3)
"RTN","HLCSRPT2",95,0)
 .. S HLCSLINK=$P(HLCSX,U,7) S HLCSLNK="          "
"RTN","HLCSRPT2",96,0)
 .. I HLCSLINK'="",($D(^HLCS(870,HLCSLINK,0))) S HLCSLNK=$P(^HLCS(870,HLCSLINK,0),U,1)
"RTN","HLCSRPT2",97,0)
 .. ; patch HL*1.6*145 start
"RTN","HLCSRPT2",98,0)
 .. ; S HLCSEVN1=$P(HLCSX,U,13) I HLCSEVN1'="",($D(^HL(771.2,HLCSEVN1,0))) S HLCSEVN1=$P(^HL(771.2,HLCSEVN1,0),U,1)
"RTN","HLCSRPT2",99,0)
 .. ; S HLCSEVN2=$P(HLCSX,U,14) I HLCSEVN2'="",($D(^HL(779.001,HLCSEVN2,0))) S HLCSEVN2=$P(^HL(779.001,HLCSEVN2,0),U,1)
"RTN","HLCSRPT2",100,0)
 .. N SEG
"RTN","HLCSRPT2",101,0)
 .. D HEADSEG^HLCSRPT1(HLCSJ,.SEG)
"RTN","HLCSRPT2",102,0)
 .. S HLCSEVN1=$G(SEG("MESSAGE TYPE"))
"RTN","HLCSRPT2",103,0)
 .. S HLCSEVN2=$G(SEG("EVENT TYPE"))
"RTN","HLCSRPT2",104,0)
 .. ; I HLCSEVN1="" S HLCSEVN1=$$MSGEVN^HLCSRPT5(HLCSJ,2) ;HL*1.6*85
"RTN","HLCSRPT2",105,0)
 .. ; I HLCSEVN2="" S HLCSEVN2=$$MSGEVN^HLCSRPT5(HLCSJ,2) ;HL*1.6*85
"RTN","HLCSRPT2",106,0)
 .. ; patch HL*1.6*145 end
"RTN","HLCSRPT2",107,0)
 .. I $L(HLCSEVN1)<3 S HLCSEVN1=HLCSEVN1_"   ",HLCSEVN1=$E(HLCSEVN1,1,3)
"RTN","HLCSRPT2",108,0)
 .. I $L(HLCSEVN2)<3 S HLCSEVN2=HLCSEVN2_"   ",HLCSEVN2=$E(HLCSEVN2,1,3)
"RTN","HLCSRPT2",109,0)
 .. S HLCSEVN=HLCSEVN1_":"_HLCSEVN2
"RTN","HLCSRPT2",110,0)
 .. D ERRRPT^HLCSRPT5 ;HL*1.6*85 - Code overrun moved
"RTN","HLCSRPT2",111,0)
 .. Q
"RTN","HLCSRPT2",112,0)
 .Q
"RTN","HLCSRPT2",113,0)
 KILL ^TMP("ERRLST",$J) ;HL*1.6*85
"RTN","HLCSRPT2",114,0)
 D TMPLOG^HLCSRPT4 ;HL*1.6*85 Reset ^TMP("TMPLOG",$J) to ^TMP("TLOG",$J)
"RTN","HLCSRPT2",115,0)
 I '$D(^TMP("TLOG",$J,1)) S NOREC=1 Q
"RTN","HLCSRPT2",116,0)
 ;HL*1.6*85 - HLCSTITL already set above ;S HLCSTITL="IEN Record #   MESSAGE ID #         Log Link   Msg:Evn IO Sndg Apl Rcvr Apl"
"RTN","HLCSRPT2",117,0)
 I '$D(VERS22) S HLCSTITL=HLCSTITL_" ERR"
"RTN","HLCSRPT2",118,0)
 E  S HLCSTITL=HLCSTITL_"    "
"RTN","HLCSRPT2",119,0)
 D TEST
"RTN","HLCSRPT2",120,0)
 Q
"RTN","HLCSRPT2",121,0)
 ;
"RTN","HLCSRPT2",122,0)
SHOWMSG ; Enable switching to specific message (used by PF1Z).
"RTN","HLCSRPT2",123,0)
 ; If FM version 22 installed, uses VERS22 code, instead.
"RTN","HLCSRPT2",124,0)
 W @IOF
"RTN","HLCSRPT2",125,0)
 S DIR(0)="F:AE",DIR("A")="Enter Record Number: "
"RTN","HLCSRPT2",126,0)
 D ^DIR Q:$D(DIRUT)
"RTN","HLCSRPT2",127,0)
 I Y=-1!(X="") Q
"RTN","HLCSRPT2",128,0)
 S HLCSRNO=X I '$D(^HLMA(HLCSRNO,0)) D  Q
"RTN","HLCSRPT2",129,0)
 . W !!,BLDON,"  ==>  NO SUCH RECORD NUMBER <== ",BLDOFF H 3
"RTN","HLCSRPT2",130,0)
 S HLCSPTR=$P(^HLMA(HLCSRNO,0),"^",1)
"RTN","HLCSRPT2",131,0)
 S XXY=HLCSRNO,XXZ=HLCSPTR D VERS22(XXY,XXZ)
"RTN","HLCSRPT2",132,0)
 D SWITCH
"RTN","HLCSRPT2",133,0)
 Q
"RTN","HLCSRPT2",134,0)
SWITCH ; Non-standard Fileman Browser calls covered by IA# 2540.
"RTN","HLCSRPT2",135,0)
 N DDBLN,DDBZ,DIC,DIR,X,Y,DIRUT,DIROUT,DUOUT,DILN
"RTN","HLCSRPT2",136,0)
 S DILN=DDBRSA(DDBRSA,"DDBSRL")-2
"RTN","HLCSRPT2",137,0)
 S:$G(DDBLST)="" DDBLST="^TMP(""DDBLST"",$J)" S DDBLN=$S($D(@DDBLST@("A",DDBSA)):^(DDBSA),1:$O(@DDBLST@(" "),-1)+1)
"RTN","HLCSRPT2",138,0)
 I $D(@DDBLST) D
"RTN","HLCSRPT2",139,0)
 .I $O(@DDBLST@(" "),-1)=1,$G(@DDBLST@(1,"DDBSA"))=DDBSA Q
"RTN","HLCSRPT2",140,0)
 .S DDBZ=$G(@DDBLST@("A",DDBSA),0)
"RTN","HLCSRPT2",141,0)
 .S Y=2
"RTN","HLCSRPT2",142,0)
 .D SAVEDDB^DDBR2(DDBLST,DDBLN),USAVEDDB^DDBR2(DDBLST,+Y)
"RTN","HLCSRPT2",143,0)
 .S DIROUT=1
"RTN","HLCSRPT2",144,0)
 N DDBLNA
"RTN","HLCSRPT2",145,0)
 I $G(DDBLNA,-1)=-1 G PS
"RTN","HLCSRPT2",146,0)
 I $G(DDBLNA(6))=DDBSA G PS  ;if current doc re-selected
"RTN","HLCSRPT2",147,0)
 I $G(DDBLNA(6))]"",$D(@DDBLST@("APSA",DDBSA)) G PS  ;on list
"RTN","HLCSRPT2",148,0)
 D:DDBLNA>0 SAVEDDB^DDBR2(DDBLST,DDBLN),WP^DDBR2(.DDBLNA)
"RTN","HLCSRPT2",149,0)
PS D PSR^DDBR0(1)
"RTN","HLCSRPT2",150,0)
 Q
"RTN","HLCSRPT2",151,0)
 ;
"RTN","HLCSRPT2",152,0)
VERS22(XXY,XXZ) ; this is modified code from SHOWMSG^HLCSRPT1.
"RTN","HLCSRPT2",153,0)
 ; Each node, ^tmp($j,"message",record_ien), invokes this code
"RTN","HLCSRPT2",154,0)
 ; to compile a 'virtual w-p document' when a message is browsed.
"RTN","HLCSRPT2",155,0)
 I $D(^HLMA(XXY,"MSH",0)) D
"RTN","HLCSRPT2",156,0)
 .S ^TMP($J,"MESSAGE",XXY,0)=^HLMA(XXY,"MSH",0)
"RTN","HLCSRPT2",157,0)
 .S YY1=$P(^HLMA(XXY,"MSH",0),U,3),YY2=$P(^HLMA(XXY,"MSH",0),U,4)
"RTN","HLCSRPT2",158,0)
 E  S ^TMP($J,"MESSAGE",XXY,0)="^^1^1" S (YY1,YY2)=1
"RTN","HLCSRPT2",159,0)
 S XLINE=^HLMA(XXY,0)
"RTN","HLCSRPT2",160,0)
 S LINE="Record #: "_XXY_"                    ",LINE=$E(LINE,1,30)
"RTN","HLCSRPT2",161,0)
 S LINE=LINE_"Message #: "_$P(XLINE,U,2)
"RTN","HLCSRPT2",162,0)
 S ^TMP($J,"MESSAGE",XXY,1,0)=LINE
"RTN","HLCSRPT2",163,0)
 S DTE=$P(XLINE,U,1) I $P($G(^HL(772,DTE,0)),U,1)'="" S DTE=$P(^HL(772,DTE,0),U,1),DTE=$E(DTE,4,7)_$E(DTE,2,3)_"."_$P(DTE,".",2)_"      "
"RTN","HLCSRPT2",164,0)
 I $D(^HLMA(XXY,"S")),$P(^HLMA(XXY,"S"),U,1)'="" S DTP=$P(^HLMA(XXY,"S"),U,1) S DTP=$E(DTP,4,7)_$E(DTP,2,3)_"."_$P(DTP,".",2)
"RTN","HLCSRPT2",165,0)
 E  S DTP=" "
"RTN","HLCSRPT2",166,0)
 S LINE="D/T Entered: "_DTE,LINE=$E(LINE,1,30)_"D/T Processed: "_DTP
"RTN","HLCSRPT2",167,0)
 S ^TMP($J,"MESSAGE",XXY,2,0)=LINE K DTE,DTP
"RTN","HLCSRPT2",168,0)
 S LINE="Logical Link: " I $P(XLINE,U,7)'="",($G(^HLCS(870,$P(XLINE,U,7),0))) S LINE=LINE_$P(^HLCS(870,$P(XLINE,U,7),0),U,1)
"RTN","HLCSRPT2",169,0)
 S LINE=LINE_"                ",LINE=$E(LINE,1,30)
"RTN","HLCSRPT2",170,0)
 S LINE=LINE_"Ack To MSG#: " I $P(XLINE,U,6)'="",$G(^HLMA($P(XLINE,U,6),0)) S LINE=LINE_$P(^HLMA($P(XLINE,U,6),0),U,2)
"RTN","HLCSRPT2",171,0)
 S ^TMP($J,"MESSAGE",XXY,3,0)=LINE
"RTN","HLCSRPT2",172,0)
 S DTS="" I $P($G(^HLMA(XXY,"P")),U,2)'="" S DTS=$P(^HLMA(XXY,"P"),U,2),DTS=$E(DTS,4,7)_$E(DTS,2,3)_"."_$P(DTS,".",2)
"RTN","HLCSRPT2",173,0)
 S LINE="D/T STATUS: "_DTS_"                 ",LINE=$E(LINE,1,30),LINE=LINE_"STATUS: "
"RTN","HLCSRPT2",174,0)
 I $P(^HLMA(XXY,"P"),U,2)'="",($G(^HL(771.6,+$P(^HLMA(XXY,"P"),U,1),0))) S LINE=LINE_$P(^HL(771.6,+$P(^HLMA(XXY,"P"),U,1),0),U,1)
"RTN","HLCSRPT2",175,0)
 S ^TMP($J,"MESSAGE",XXY,4,0)=LINE K DTS
"RTN","HLCSRPT2",176,0)
 S LINE="ERR MSG: " I $P(^HLMA(XXY,"P"),U,3)'="" S LINE=LINE_$E($P(^HLMA(XXY,"P"),U,3),1,20)
"RTN","HLCSRPT2",177,0)
 S LINE=LINE_"                      ",LINE=$E(LINE,1,30)_"ERR TYPE: "
"RTN","HLCSRPT2",178,0)
 I $P(^HLMA(XXY,"P"),U,4)'="",($D(^HL(771.7,+$P(^HLMA(XXY,"P"),U,4),0))) S LINE=LINE_$P(^HL(771.7,+$P(^HLMA(XXY,"P"),U,4),0),U,1)
"RTN","HLCSRPT2",179,0)
 S ^TMP($J,"MESSAGE",XXY,5,0)=LINE
"RTN","HLCSRPT2",180,0)
 S LINE="Sending Appl: " I $P(XLINE,U,11)'="",($D(^HL(771,$P(XLINE,U,11),0))) S LINE=LINE_$P(^HL(771,$P(XLINE,U,11),0),U,1)
"RTN","HLCSRPT2",181,0)
 S ^TMP($J,"MESSAGE",XXY,6,0)=LINE
"RTN","HLCSRPT2",182,0)
 S LINE="Receiving Appl: " I $P(XLINE,U,12)'="",($D(^HL(771,$P(XLINE,U,12),0))) S LINE=LINE_$P(^HL(771,$P(XLINE,U,12),0),U,1)
"RTN","HLCSRPT2",183,0)
 S ^TMP($J,"MESSAGE",XXY,7,0)=LINE
"RTN","HLCSRPT2",184,0)
 ; patch HL*1.6*145 start
"RTN","HLCSRPT2",185,0)
 ; S LINE="Message Type: " I $P(XLINE,U,13)'="",($D(^HL(771.2,$P(XLINE,U,13),0))) S LINE=LINE_$P(^HL(771.2,$P(XLINE,U,13),0),U,1)
"RTN","HLCSRPT2",186,0)
 N SEG
"RTN","HLCSRPT2",187,0)
 D HEADSEG^HLCSRPT1(XXY,.SEG)
"RTN","HLCSRPT2",188,0)
 S LINE="Message Type: "_$G(SEG("MESSAGE TYPE"))
"RTN","HLCSRPT2",189,0)
 S LINE=LINE_"                    ",LINE=$E(LINE,1,30)_"Event Type: "
"RTN","HLCSRPT2",190,0)
 ; I $P(XLINE,U,14)'="",($D(^HL(779.001,$P(XLINE,U,14),0))) S LINE=LINE_$P(^HL(779.001,$P(XLINE,U,14),0),U,1)
"RTN","HLCSRPT2",191,0)
 S LINE=LINE_$G(SEG("EVENT TYPE"))
"RTN","HLCSRPT2",192,0)
 ; patch HL*1.6*145 end
"RTN","HLCSRPT2",193,0)
 S ^TMP($J,"MESSAGE",XXY,8,0)=LINE K LINE,XLINE
"RTN","HLCSRPT2",194,0)
 S ^TMP($J,"MESSAGE",XXY,9,0)="MESSAGE HEADER: "
"RTN","HLCSRPT2",195,0)
 S LN2=10
"RTN","HLCSRPT2",196,0)
 I $D(^HLMA(XXY,"MSH",0)) D
"RTN","HLCSRPT2",197,0)
 .S LN1=.5
"RTN","HLCSRPT2",198,0)
 .F  S LN1=$O(^HLMA(XXY,"MSH",LN1)) Q:LN1=""  D
"RTN","HLCSRPT2",199,0)
 .. S ^TMP($J,"MESSAGE",XXY,LN2,0)=^HLMA(XXY,"MSH",LN1,0)
"RTN","HLCSRPT2",200,0)
 .. ;HL*1.6*107 start: to fix the multiple lines per segment
"RTN","HLCSRPT2",201,0)
 .. ;S LN2=LN2+1,LN1=LN1+1
"RTN","HLCSRPT2",202,0)
 .. S LN2=LN2+1
"RTN","HLCSRPT2",203,0)
 .. ;HL*1.6*107 end
"RTN","HLCSRPT2",204,0)
 E  S ^TMP($J,"MESSAGE",XXY,LN2,0)=" No Header in MSG Admin File (#773)" S LN2=LN2+1
"RTN","HLCSRPT2",205,0)
 S LN1=.5
"RTN","HLCSRPT2",206,0)
 S ^TMP($J,"MESSAGE",XXY,LN2,0)="MESSAGE TEXT: ",LN2=LN2+1
"RTN","HLCSRPT2",207,0)
 I $D(^HL(772,XXZ,"IN",0)) D
"RTN","HLCSRPT2",208,0)
 .F  S LN1=$O(^HL(772,XXZ,"IN",LN1)) Q:(LN1="")  D
"RTN","HLCSRPT2",209,0)
 .. S ^TMP($J,"MESSAGE",XXY,LN2,0)=^HL(772,XXZ,"IN",LN1,0)
"RTN","HLCSRPT2",210,0)
 .. ;HL*1.6*107 start: to fix the multiple lines per segment
"RTN","HLCSRPT2",211,0)
 .. ;S LN2=LN2+1,LN1=LN1+1
"RTN","HLCSRPT2",212,0)
 .. S LN2=LN2+1
"RTN","HLCSRPT2",213,0)
 .. ;HL*1.6*107 end
"RTN","HLCSRPT2",214,0)
 ..Q
"RTN","HLCSRPT2",215,0)
 E  S ^TMP($J,"MESSAGE",XXY,LN2,0)=" No Message in MSG Text File (#772)" S LN2=LN2+1
"RTN","HLCSRPT2",216,0)
 S (YY1,YY2)=LN2-1
"RTN","HLCSRPT2",217,0)
 S Y1Y2=YY1_"^"_YY2
"RTN","HLCSRPT2",218,0)
 S $P(^TMP($J,"MESSAGE",XXY,0),U,3,4)=Y1Y2
"RTN","HLCSRPT2",219,0)
 K LN1,LN2,Y1Y2,YY1,YY2
"RTN","HLCSRPT2",220,0)
 Q
"RTN","HLCSRPT2",221,0)
 ;
"RTN","HLCSRPT2",222,0)
EXIT D EXIT^HLCSRPT6 Q  ; Exceeded 10,000 bytes, so split on 12/2/03-LJA
"RTN","HLCSRPT2",223,0)
HLCSBAR D HLCSBAR^HLCSRPT6 Q  ; Exceeded 10,000 bytes, so split on 12/2/03-LJA
"RTN","HLCSRPT2",224,0)
TEST D TEST^HLCSRPT6 Q  ; Exceeded 10,000 bytes, so split on 12/2/03-LJA
"RTN","HLCSRPT3")
0^4^B48347685^B48347685
"RTN","HLCSRPT3",1,0)
HLCSRPT3 ;ISC-SF/RAH-TRANS LOG MESSAGE SEARCH ;08/25/2010
"RTN","HLCSRPT3",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**50,57,145,151**;Oct 13, 1995;Build 1
"RTN","HLCSRPT3",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HLCSRPT3",4,0)
 ;
"RTN","HLCSRPT3",5,0)
 Q
"RTN","HLCSRPT3",6,0)
ADVSRCH ; Entry point for message search. (from HLCSRPT)
"RTN","HLCSRPT3",7,0)
 S (HLCSLS,HLSCES,HLCSSC)=0
"RTN","HLCSRPT3",8,0)
 D GETTIME Q:$D(STOP)
"RTN","HLCSRPT3",9,0)
 D DT2IEN Q:$D(STOP)
"RTN","HLCSRPT3",10,0)
 D STATCHK Q:$D(STOP)
"RTN","HLCSRPT3",11,0)
 D LNKSRCH Q:$D(STOP)
"RTN","HLCSRPT3",12,0)
 D EVNSRCH Q:$D(STOP)
"RTN","HLCSRPT3",13,0)
 D SEARCH
"RTN","HLCSRPT3",14,0)
 D EXIT
"RTN","HLCSRPT3",15,0)
 S STOP=1
"RTN","HLCSRPT3",16,0)
 Q
"RTN","HLCSRPT3",17,0)
GETTIME ;
"RTN","HLCSRPT3",18,0)
 W @IOF,! S HLCSHDR="Start/Stop Time Selection" D HLCSBAR
"RTN","HLCSRPT3",19,0)
GETSTART ;
"RTN","HLCSRPT3",20,0)
 W !!,"  Enter START Date and Time. Date is required.",!
"RTN","HLCSRPT3",21,0)
 S DIR(0)="D^::AEPSTX",DIR("?")="^D HELP^%DTC",DIR("B")="T"
"RTN","HLCSRPT3",22,0)
 D ^DIR S:$D(DIRUT)!(X="") STOP=1 I $D(STOP) K DIR,X,Y Q
"RTN","HLCSRPT3",23,0)
 I Y'["." S Y=Y_".000001"
"RTN","HLCSRPT3",24,0)
 S HLCSST=Y K DIR,X,Y
"RTN","HLCSRPT3",25,0)
GETEND ;
"RTN","HLCSRPT3",26,0)
 W !!,"  Enter END Date and Time. Date is required.",!
"RTN","HLCSRPT3",27,0)
 S DIR(0)="D^::AESTX",DIR("?")="^D HELP^%DTC",DIR("B")="NOW"
"RTN","HLCSRPT3",28,0)
 D ^DIR S:$D(DIRUT)!(X="") STOP=1 I $D(STOP) K DIR,X,Y Q
"RTN","HLCSRPT3",29,0)
 I Y'["." S Y=Y_".235959"
"RTN","HLCSRPT3",30,0)
 S HLCSET=Y K DIR,X,Y
"RTN","HLCSRPT3",31,0)
 Q
"RTN","HLCSRPT3",32,0)
 ;
"RTN","HLCSRPT3",33,0)
DT2IEN ;
"RTN","HLCSRPT3",34,0)
 ;set variable to HLCSST-.0000001
"RTN","HLCSRPT3",35,0)
 ;$O thru ^HL(772,"B",dt)
"RTN","HLCSRPT3",36,0)
 ;get ien from "B" xref. 
"RTN","HLCSRPT3",37,0)
 ; that's starting value for $O(^HLMA("B",772ien,ien))
"RTN","HLCSRPT3",38,0)
 S HLCSI=HLCSST-.0000001
"RTN","HLCSRPT3",39,0)
 S HLCSI=$O(^HL(772,"B",HLCSI))
"RTN","HLCSRPT3",40,0)
 I HLCSI="" S STOP=1 W !!,HLCSNREC,!! S DIR(0)="E" D ^DIR K DIR Q
"RTN","HLCSRPT3",41,0)
 S HLCSJ=0 S HLCSJ=$O(^HL(772,"B",HLCSI,HLCSJ))
"RTN","HLCSRPT3",42,0)
 S HLCSST=HLCSJ
"RTN","HLCSRPT3",43,0)
 ;set variable to HLCSET+.0000001
"RTN","HLCSRPT3",44,0)
 ;reverse $O thru ^HL(772,"B",dt)
"RTN","HLCSRPT3",45,0)
 ;get ien fron "B" xref.
"RTN","HLCSRPT3",46,0)
 ;that's ending value for the $O thru ^HLMA("B"
"RTN","HLCSRPT3",47,0)
 S HLCSI=HLCSET+.0000001
"RTN","HLCSRPT3",48,0)
 S HLCSI=$O(^HL(772,"B",HLCSI),-1)
"RTN","HLCSRPT3",49,0)
 S HLCSJ="Z" S HLCSJ=$O(^HL(772,"B",HLCSI,HLCSJ),-1)
"RTN","HLCSRPT3",50,0)
 S HLCSET=HLCSJ
"RTN","HLCSRPT3",51,0)
 Q
"RTN","HLCSRPT3",52,0)
 ;
"RTN","HLCSRPT3",53,0)
DISPLAY ; common display method
"RTN","HLCSRPT3",54,0)
 ; clean-up here
"RTN","HLCSRPT3",55,0)
 S HLCSPTR=$P(^TMP("TLOG",$J,1)," "),HLCSK=$O(^HLMA("C",HLCSPTR,0))
"RTN","HLCSRPT3",56,0)
 S HLCSPTR=+$P($G(^HLMA(+HLCSK,0)),U)
"RTN","HLCSRPT3",57,0)
 I VERS22'="YES" D DOCLIST^DDBR("^TMP($J,""LIST"")","NR")
"RTN","HLCSRPT3",58,0)
 E  D BROWSE^DDBR("^TMP(""TLOG"",$J)","NA",HLCSTITL)
"RTN","HLCSRPT3",59,0)
 Q
"RTN","HLCSRPT3",60,0)
 ;
"RTN","HLCSRPT3",61,0)
SEARCH ;
"RTN","HLCSRPT3",62,0)
 W !!," . . . PLEASE WAIT, THIS CAN TAKE AWHILE . . .",!
"RTN","HLCSRPT3",63,0)
 S HLCSI=HLCSST-.1 S HLCSLN=0
"RTN","HLCSRPT3",64,0)
 F I=HLCSST:1:HLCSET S HLCSI=$O(^HLMA("B",HLCSI)) Q:HLCSI>HLCSET!(HLCSI="")  D
"RTN","HLCSRPT3",65,0)
 . S HLCSN=HLCSI,HLCSJ=0 F  S HLCSJ=$O(^HLMA("B",HLCSI,HLCSJ)) Q:(HLCSJ="")  D
"RTN","HLCSRPT3",66,0)
 .. Q:'$D(^HLMA(HLCSJ,0))  S HLCSX=^(0),HLCSDTP=$P($G(^("S")),U)
"RTN","HLCSRPT3",67,0)
 .. ;must have a status
"RTN","HLCSRPT3",68,0)
 .. Q:'$G(^HLMA(HLCSJ,"P"))  S HLCSSTC=$P(^("P"),U)
"RTN","HLCSRPT3",69,0)
 .. ;check for only one status, if not the status we want, quit
"RTN","HLCSRPT3",70,0)
 .. I HLCSSC=1,(HLCSTSTC'=HLCSSTC) Q
"RTN","HLCSRPT3",71,0)
 .. S HLCSLINK=$P(HLCSX,U,7) S HLCSLNK="          "
"RTN","HLCSRPT3",72,0)
 .. I HLCSLINK'="",($D(^HLCS(870,HLCSLINK,0))) S HLCSLNK=$P(^HLCS(870,HLCSLINK,0),U,1)
"RTN","HLCSRPT3",73,0)
 .. ; patch HL*1.6*145 start
"RTN","HLCSRPT3",74,0)
 .. ; S HLCSEVN1=$P(HLCSX,U,13) I HLCSEVN1'="",($D(^HL(771.2,HLCSEVN1,0))) S HLCSEVN1=$P(^HL(771.2,HLCSEVN1,0),U,1)
"RTN","HLCSRPT3",75,0)
 .. ; S HLCSEVN2=$P(HLCSX,U,14) I HLCSEVN2'="",($D(^HL(779.001,HLCSEVN2,0))) S HLCSEVN2=$P(^HL(779.001,HLCSEVN2,0),U,1)
"RTN","HLCSRPT3",76,0)
 .. N SEG
"RTN","HLCSRPT3",77,0)
 .. D HEADSEG^HLCSRPT1(HLCSJ,.SEG)
"RTN","HLCSRPT3",78,0)
 .. S HLCSEVN1=$G(SEG("MESSAGE TYPE"))
"RTN","HLCSRPT3",79,0)
 .. S HLCSEVN2=$G(SEG("EVENT TYPE"))
"RTN","HLCSRPT3",80,0)
 .. ; patch HL*1.6*145 end
"RTN","HLCSRPT3",81,0)
 .. I HLCSEVN1="" S HLCSEVN1="   "
"RTN","HLCSRPT3",82,0)
 .. I HLCSEVN2="" S HLCSEVN2="   "
"RTN","HLCSRPT3",83,0)
 .. I $L(HLCSEVN1)<3 S HLCSEVN1=HLCSEVN1_"   ",HLCSEVN1=$E(HLCSEVN1,1,3)
"RTN","HLCSRPT3",84,0)
 .. I $L(HLCSEVN2)<3 S HLCSEVN2=HLCSEVN2_"   ",HLCSEVN2=$E(HLCSEVN2,1,3)
"RTN","HLCSRPT3",85,0)
 .. S HLCSEVN=HLCSEVN1_":"_HLCSEVN2
"RTN","HLCSRPT3",86,0)
 .. I HLCSLS>0,(HLCSTLNK'=HLCSLNK) Q
"RTN","HLCSRPT3",87,0)
 .. I HLCSES>0,(HLCSES1=1)&(HLCSTEV1'=HLCSEVN1) Q
"RTN","HLCSRPT3",88,0)
 .. I HLCSES>0,(HLCSES2=2)&(HLCSTEV2'=HLCSEVN2) Q
"RTN","HLCSRPT3",89,0)
 .. I HLCSSC=1,(HLCSTSTC'=HLCSSTC) Q
"RTN","HLCSRPT3",90,0)
 .. D FORMAT
"RTN","HLCSRPT3",91,0)
 .. Q
"RTN","HLCSRPT3",92,0)
 . Q
"RTN","HLCSRPT3",93,0)
 I '$D(^TMP("TLOG",$J,1)) W !!,HLCSNREC,!! S DIR(0)="E" D ^DIR K DIR Q
"RTN","HLCSRPT3",94,0)
 I VERS22'="YES" S HLCSTITL="IEN RECORD #   MESSAGE ID #         Log Link   Msg:Evn IO Sndg Apl Rcvr Apl HDR"
"RTN","HLCSRPT3",95,0)
 E  S HLCSTITL="MESSAGE ID #         D/T Entered   Log Link   Msg:Evn IO Sndg Apl Rcvr Apl     "
"RTN","HLCSRPT3",96,0)
 I VERS22'="YES" D FAKR^HLCSRPT1
"RTN","HLCSRPT3",97,0)
 D DISPLAY K ^TMP("TLOG",$J)
"RTN","HLCSRPT3",98,0)
 Q
"RTN","HLCSRPT3",99,0)
 ;
"RTN","HLCSRPT3",100,0)
LNKSRCH ; Report all messages on A logical link between start and end date/time
"RTN","HLCSRPT3",101,0)
 W ! ;S HLCSHDR="Logical Link Selection" D HLCSBAR
"RTN","HLCSRPT3",102,0)
 S DIR(0)="PAO^870:AERO",DIR("A")="Select Logical Link for Report:  ALL//"
"RTN","HLCSRPT3",103,0)
 D ^DIR S:($D(DUOUT)!$D(DTOUT)) STOP=1 Q:$D(STOP)
"RTN","HLCSRPT3",104,0)
 I X'="",(Y=-1) W !,X_" NOT VALID " K X,Y G LNKSRCH
"RTN","HLCSRPT3",105,0)
 I X="" S HLCSLS=0 K DIR,X,Y Q
"RTN","HLCSRPT3",106,0)
 S HLCSLNK=$P(Y,U,2),HLCSTLNK=HLCSLNK K DIR,X,Y
"RTN","HLCSRPT3",107,0)
 S HLCSLS=1
"RTN","HLCSRPT3",108,0)
 Q
"RTN","HLCSRPT3",109,0)
 ;
"RTN","HLCSRPT3",110,0)
EVNSRCH ; Reports matching Message and Event Types for a logical link.
"RTN","HLCSRPT3",111,0)
 W ! ;S HLCSHDR="Message/Event Type Search" D HLCSBAR
"RTN","HLCSRPT3",112,0)
 S HLCSES1=1,HLCSES2=2
"RTN","HLCSRPT3",113,0)
 S DIR(0)="PAO^771.2:AEO",DIR("A")="Select Message Type for Report:  ALL//"
"RTN","HLCSRPT3",114,0)
 D ^DIR S:$D(DUOUT)!($D(DTOUT)) STOP=1 Q:$D(STOP)
"RTN","HLCSRPT3",115,0)
 I X'="",(Y=-1) W !,X_" NOT VALID " K X,Y G EVNSRCH
"RTN","HLCSRPT3",116,0)
 I X="" S Y="^",HLCSES1=0
"RTN","HLCSRPT3",117,0)
 S HLCSTEV1=$P(Y,U,2) K DIR,X,Y
"RTN","HLCSRPT3",118,0)
 W !
"RTN","HLCSRPT3",119,0)
 S DIR(0)="PAO^779.001:AEO",DIR("A")="Select Event Type for Report:  ALL//"
"RTN","HLCSRPT3",120,0)
 D ^DIR S:$D(DUOUT)!($D(DTOUT)) STOP=1 Q:$D(STOP)
"RTN","HLCSRPT3",121,0)
 I X'="",(Y=-1) W !,X_" NOT VALID " K X,Y G EVNSRCH
"RTN","HLCSRPT3",122,0)
 I X="" S Y="^",HLCSES2=0
"RTN","HLCSRPT3",123,0)
 S HLCSTEV2=$P(Y,U,2) K DIR,X,Y
"RTN","HLCSRPT3",124,0)
 I HLCSTEV1="" S HLCSTEV1="   "
"RTN","HLCSRPT3",125,0)
 I HLCSTEV2="" S HLCSTEV2="   "
"RTN","HLCSRPT3",126,0)
 S HLCSTEVN=HLCSTEV1_":"_HLCSTEV2,HLCSES=+HLCSES1+(+HLCSES2)
"RTN","HLCSRPT3",127,0)
 Q
"RTN","HLCSRPT3",128,0)
 ;
"RTN","HLCSRPT3",129,0)
STATCHK ; Determine whether a specific stauts is desired.
"RTN","HLCSRPT3",130,0)
 W @IOF,! S HLCSHDR="Message Criteria for Search" D HLCSBAR
"RTN","HLCSRPT3",131,0)
 S HLCSSC=1
"RTN","HLCSRPT3",132,0)
 S DIR(0)="PAO^771.6:AEO",DIR("A")="Select Status Code for Report:  ALL//"
"RTN","HLCSRPT3",133,0)
 D ^DIR S:$D(DUOUT)!($D(DTOUT)) STOP=1 Q:$D(STOP)
"RTN","HLCSRPT3",134,0)
 I X'="",(Y=-1) W !,X_" NOT VALID " K DIR,X,Y G STATCHK
"RTN","HLCSRPT3",135,0)
 I X="" S Y="^",HLCSSC=0 K DIR,X,Y Q
"RTN","HLCSRPT3",136,0)
 S HLCSTAT=$P(Y,U,2),HLCSTSTC=$P(Y,U,1)
"RTN","HLCSRPT3",137,0)
 K DIR,X,Y
"RTN","HLCSRPT3",138,0)
 Q
"RTN","HLCSRPT3",139,0)
FORMAT ; Format a report line
"RTN","HLCSRPT3",140,0)
 S HLCSY=""
"RTN","HLCSRPT3",141,0)
 S HLCSRNO=HLCSJ,SPACE20="                    "
"RTN","HLCSRPT3",142,0)
 I VERS22'="YES" D
"RTN","HLCSRPT3",143,0)
 . S HLCSRNO=HLCSRNO_SPACE20 S HLCSRNO=$E(HLCSRNO,1,14) S HLCSY=HLCSRNO_" "
"RTN","HLCSRPT3",144,0)
 . S HLCSMID=$P(HLCSX,U,2),HLCSMX=HLCSMID,HLCSPTR=$P(HLCSX,U,1)
"RTN","HLCSRPT3",145,0)
 . S HLCSMID=HLCSMID_SPACE20 S HLCSMID=$E(HLCSMID,1,20)
"RTN","HLCSRPT3",146,0)
 . S HLCSY=HLCSY_HLCSMID_" "
"RTN","HLCSRPT3",147,0)
 I VERS22="YES" D
"RTN","HLCSRPT3",148,0)
 . S HLCSMID=$P(HLCSX,U,2),HLCSMX=HLCSMID,HLCSPTR=$P(HLCSX,U,1)
"RTN","HLCSRPT3",149,0)
 . S HLCSMID="$.%$CREF$^TMP($J,""MESSAGE"","_HLCSRNO_")$CREF$^"_HLCSMX_"$.%"
"RTN","HLCSRPT3",150,0)
 . S Y=$L(HLCSMX),X=$E(SPACE20,1,20-Y) S HLCSMID=HLCSMID_X K X,Y
"RTN","HLCSRPT3",151,0)
 . S HLCSY=HLCSMID_" "
"RTN","HLCSRPT3",152,0)
 . S HLCSDTE=$P(HLCSX,U,1)
"RTN","HLCSRPT3",153,0)
 . S HLCSDTE=$P(^HL(772,HLCSDTE,0),U,1)
"RTN","HLCSRPT3",154,0)
 . S YR=$E(HLCSDTE,2,3),MO=$E(HLCSDTE,4,5),DAY=$E(HLCSDTE,6,7)
"RTN","HLCSRPT3",155,0)
 . S HLCSDTE=MO_DAY_YR_"."_$P(HLCSDTE,".",2)
"RTN","HLCSRPT3",156,0)
 . S HLCSDTE=HLCSDTE_SPACE20,HLCSDTE=$E(HLCSDTE,1,14)
"RTN","HLCSRPT3",157,0)
 . S HLCSY=HLCSY_HLCSDTE_" "
"RTN","HLCSRPT3",158,0)
 S HLCSY=HLCSY_$E(HLCSLNK_SPACE20,1,10)_" "
"RTN","HLCSRPT3",159,0)
 S HLCSY=HLCSY_HLCSEVN_" "
"RTN","HLCSRPT3",160,0)
 S HLCSTYP=$P(HLCSX,U,3) S:HLCSTYP="O" HLCSTYP="OT" S:HLCSTYP="I" HLCSTYP="IN"
"RTN","HLCSRPT3",161,0)
 S HLCSY=HLCSY_$E(HLCSTYP_SPACE20,1,2)_" "
"RTN","HLCSRPT3",162,0)
 S HLCSSRVR=$P(HLCSX,U,11) I HLCSSRVR'="" S HLCSSRVR=$P(^HL(771,HLCSSRVR,0),U,1)
"RTN","HLCSRPT3",163,0)
 S HLCSY=HLCSY_$E(HLCSSRVR_SPACE20,1,8)_" "
"RTN","HLCSRPT3",164,0)
 S HLCSCLNT=$P(HLCSX,U,12) I HLCSCLNT'="" S HLCSCLNT=$P(^HL(771,HLCSCLNT,0),U,1)
"RTN","HLCSRPT3",165,0)
 S HLCSY=HLCSY_$E(HLCSCLNT_SPACE20,1,8)
"RTN","HLCSRPT3",166,0)
 S HLCSLN=HLCSLN+1
"RTN","HLCSRPT3",167,0)
 I VERS22'="YES" S HLCSY=HLCSY_" " I $D(^HLMA(HLCSJ,"MSH",1,0)) S HLCSY=HLCSY_^HLMA(HLCSJ,"MSH",1,0)
"RTN","HLCSRPT3",168,0)
 S ^TMP("TLOG",$J,HLCSLN)=HLCSY
"RTN","HLCSRPT3",169,0)
 I VERS22="YES" S ^TMP($J,"MESSAGE",HLCSJ)="$XC$^D SHOWMSG^HLCSRPT1("_HLCSJ_","_HLCSPTR_")$XC$^MESSAGE"
"RTN","HLCSRPT3",170,0)
 Q
"RTN","HLCSRPT3",171,0)
 ;
"RTN","HLCSRPT3",172,0)
HLCSBAR ; Center Title on Top Line of Screen
"RTN","HLCSRPT3",173,0)
 W RVON,?(80-$L(HLCSHDR)\2),HLCSHDR,$E(SPACE,$X,77),RVOFF,!
"RTN","HLCSRPT3",174,0)
 Q
"RTN","HLCSRPT3",175,0)
 ;
"RTN","HLCSRPT3",176,0)
EXIT ;
"RTN","HLCSRPT3",177,0)
 Q
"RTN","HLCSRPT3",178,0)
 ;
"RTN","HLCSRPT6")
0^1^B994127^n/a
"RTN","HLCSRPT6",1,0)
HLCSRPT6 ;ISC-SF/RAH-TRANS LOG ERROR LIST ;08/25/2010
"RTN","HLCSRPT6",2,0)
 ;;1.6;HEALTH LEVEL SEVEN;**151**;Oct 13, 1995;Build 1
"RTN","HLCSRPT6",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","HLCSRPT6",4,0)
 ;
"RTN","HLCSRPT6",5,0)
EXIT ;
"RTN","HLCSRPT6",6,0)
 K I,J
"RTN","HLCSRPT6",7,0)
 K HLCSER,HLCSER1,HLCSER2,HLCSI,HLCSJ,HLCSLN,HLCSN
"RTN","HLCSRPT6",8,0)
 K HLCSST,HLCSTER1,HLCSTER2,HLCSERMS,HLCSX,HLCSY
"RTN","HLCSRPT6",9,0)
 K ^TMP($J,"LIST",HLCSTITL_" ERR") ;HL*1.6*85
"RTN","HLCSRPT6",10,0)
 I VERS22'="YES" S ^TMP("DDBPF1Z",$J)="D SHOWMSG^HLCSRPT Q"
"RTN","HLCSRPT6",11,0)
 Q
"RTN","HLCSRPT6",12,0)
 ;
"RTN","HLCSRPT6",13,0)
HLCSBAR ; Center Title on Top Line of Screen
"RTN","HLCSRPT6",14,0)
 W RVON,?(80-$L(HLCSHDR)\2),HLCSHDR,$E(SPACE,$X,77),RVOFF,!
"RTN","HLCSRPT6",15,0)
 Q
"RTN","HLCSRPT6",16,0)
 ;
"RTN","HLCSRPT6",17,0)
TEST ;
"RTN","HLCSRPT6",18,0)
 S HLCSJ=$O(^TMP("TLOG",$J,0))
"RTN","HLCSRPT6",19,0)
 S HLCSJ=+$P(HLCSJ," ",1)
"RTN","HLCSRPT6",20,0)
 S ^TMP($J,"MESSAGE",HLCSJ,0)="^^1^1"
"RTN","HLCSRPT6",21,0)
 S ^TMP($J,"MESSAGE",HLCSJ,1,0)=" HEADER: "
"RTN","HLCSRPT6",22,0)
 S HLCSRNO=HLCSJ
"RTN","HLCSRPT6",23,0)
 Q
"RTN","HLCSRPT6",24,0)
 ;
"VER")
8.0^22.0
"BLD",1464,6)
^121
**END**
**END**
