KIDS Distribution saved on Oct 29, 2019@00:12:36
ESM BUILD 5.9 - PREFERRED NAME AND E-CONTACT UPDATES
**KIDS**:DG*5.3*985^IVM*2.0*188^

**INSTALL NAME**
DG*5.3*985
"BLD",10926,0)
DG*5.3*985^REGISTRATION^0^3191029^y
"BLD",10926,1,0)
^^2^2^3190819^^
"BLD",10926,1,1,0)
Please see the DG*5.3*985 patch description for detailed information 
"BLD",10926,1,2,0)
regarding this patch.
"BLD",10926,4,0)
^9.64PA^2^1
"BLD",10926,4,2,0)
2
"BLD",10926,4,2,2,0)
^9.641^2^1
"BLD",10926,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",10926,4,2,2,2,1,0)
^9.6411^.349^14
"BLD",10926,4,2,2,2,1,.212,0)
K-RELATIONSHIP TO PATIENT
"BLD",10926,4,2,2,2,1,.2191,0)
K2-NAME OF SECONDARY NOK
"BLD",10926,4,2,2,2,1,.2192,0)
K2-RELATIONSHIP TO PATIENT
"BLD",10926,4,2,2,2,1,.2199,0)
K2-PHONE NUMBER
"BLD",10926,4,2,2,2,1,.2405,0)
PREFERRED NAME
"BLD",10926,4,2,2,2,1,.331,0)
E-NAME
"BLD",10926,4,2,2,2,1,.3311,0)
E2-NAME OF SECONDARY CONTACT
"BLD",10926,4,2,2,2,1,.3312,0)
E2-RELATIONSHIP TO PATIENT
"BLD",10926,4,2,2,2,1,.3319,0)
E2-PHONE NUMBER
"BLD",10926,4,2,2,2,1,.332,0)
E-RELATIONSHIP TO PATIENT
"BLD",10926,4,2,2,2,1,.339,0)
E-PHONE NUMBER
"BLD",10926,4,2,2,2,1,.341,0)
D-NAME OF DESIGNEE
"BLD",10926,4,2,2,2,1,.342,0)
D-RELATIONSHIP TO PATIENT
"BLD",10926,4,2,2,2,1,.349,0)
D-PHONE NUMBER
"BLD",10926,4,2,222)
y^n^p^^^^n^^n
"BLD",10926,4,2,224)

"BLD",10926,4,"APDD",2,2)

"BLD",10926,4,"APDD",2,2,.212)

"BLD",10926,4,"APDD",2,2,.2191)

"BLD",10926,4,"APDD",2,2,.2192)

"BLD",10926,4,"APDD",2,2,.2199)

"BLD",10926,4,"APDD",2,2,.2405)

"BLD",10926,4,"APDD",2,2,.331)

"BLD",10926,4,"APDD",2,2,.3311)

"BLD",10926,4,"APDD",2,2,.3312)

"BLD",10926,4,"APDD",2,2,.3319)

"BLD",10926,4,"APDD",2,2,.332)

"BLD",10926,4,"APDD",2,2,.339)

"BLD",10926,4,"APDD",2,2,.341)

"BLD",10926,4,"APDD",2,2,.342)

"BLD",10926,4,"APDD",2,2,.349)

"BLD",10926,4,"B",2,2)

"BLD",10926,6.3)
15
"BLD",10926,"ABPKG")
n
"BLD",10926,"INID")
y^y
"BLD",10926,"INIT")
POST^DG53985P
"BLD",10926,"KRN",0)
^9.67PA^779.2^20
"BLD",10926,"KRN",.4,0)
.4
"BLD",10926,"KRN",.401,0)
.401
"BLD",10926,"KRN",.402,0)
.402
"BLD",10926,"KRN",.403,0)
.403
"BLD",10926,"KRN",.5,0)
.5
"BLD",10926,"KRN",.84,0)
.84
"BLD",10926,"KRN",3.6,0)
3.6
"BLD",10926,"KRN",3.8,0)
3.8
"BLD",10926,"KRN",9.2,0)
9.2
"BLD",10926,"KRN",9.8,0)
9.8
"BLD",10926,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",10926,"KRN",9.8,"NM",1,0)
DGRPD1^^0^B12156585
"BLD",10926,"KRN",9.8,"NM",2,0)
DGRPH^^0^B27974831
"BLD",10926,"KRN",9.8,"NM",3,0)
DGRP1^^0^B40365565
"BLD",10926,"KRN",9.8,"NM",4,0)
DGRPE^^0^B78954100
"BLD",10926,"KRN",9.8,"NM",5,0)
DGRPV^^0^B19825029
"BLD",10926,"KRN",9.8,"NM",6,0)
DGR111^^0^B9453949
"BLD",10926,"KRN",9.8,"NM","B","DGR111",6)

"BLD",10926,"KRN",9.8,"NM","B","DGRP1",3)

"BLD",10926,"KRN",9.8,"NM","B","DGRPD1",1)

"BLD",10926,"KRN",9.8,"NM","B","DGRPE",4)

"BLD",10926,"KRN",9.8,"NM","B","DGRPH",2)

"BLD",10926,"KRN",9.8,"NM","B","DGRPV",5)

"BLD",10926,"KRN",19,0)
19
"BLD",10926,"KRN",19.1,0)
19.1
"BLD",10926,"KRN",101,0)
101
"BLD",10926,"KRN",409.61,0)
409.61
"BLD",10926,"KRN",771,0)
771
"BLD",10926,"KRN",779.2,0)
779.2
"BLD",10926,"KRN",870,0)
870
"BLD",10926,"KRN",8989.51,0)
8989.51
"BLD",10926,"KRN",8989.52,0)
8989.52
"BLD",10926,"KRN",8994,0)
8994
"BLD",10926,"KRN","B",.4,.4)

"BLD",10926,"KRN","B",.401,.401)

"BLD",10926,"KRN","B",.402,.402)

"BLD",10926,"KRN","B",.403,.403)

"BLD",10926,"KRN","B",.5,.5)

"BLD",10926,"KRN","B",.84,.84)

"BLD",10926,"KRN","B",3.6,3.6)

"BLD",10926,"KRN","B",3.8,3.8)

"BLD",10926,"KRN","B",9.2,9.2)

"BLD",10926,"KRN","B",9.8,9.8)

"BLD",10926,"KRN","B",19,19)

"BLD",10926,"KRN","B",19.1,19.1)

"BLD",10926,"KRN","B",101,101)

"BLD",10926,"KRN","B",409.61,409.61)

"BLD",10926,"KRN","B",771,771)

"BLD",10926,"KRN","B",779.2,779.2)

"BLD",10926,"KRN","B",870,870)

"BLD",10926,"KRN","B",8989.51,8989.51)

"BLD",10926,"KRN","B",8989.52,8989.52)

"BLD",10926,"KRN","B",8994,8994)

"BLD",10926,"PRE")
DG53985E
"BLD",10926,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",10926,"QUES",0)
^9.62^^
"BLD",10926,"REQB",0)
^9.611^3^3
"BLD",10926,"REQB",1,0)
DG*5.3*935^1
"BLD",10926,"REQB",2,0)
DG*5.3*941^1
"BLD",10926,"REQB",3,0)
DG*5.3*987^1
"BLD",10926,"REQB","B","DG*5.3*935",1)

"BLD",10926,"REQB","B","DG*5.3*941",2)

"BLD",10926,"REQB","B","DG*5.3*987",3)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.212)

"FIA",2,2,.2191)

"FIA",2,2,.2192)

"FIA",2,2,.2199)

"FIA",2,2,.2405)

"FIA",2,2,.331)

"FIA",2,2,.3311)

"FIA",2,2,.3312)

"FIA",2,2,.3319)

"FIA",2,2,.332)

"FIA",2,2,.339)

"FIA",2,2,.341)

"FIA",2,2,.342)

"FIA",2,2,.349)

"INIT")
POST^DG53985P
"IX",2,2,"ADTTM3",0)
2^ADTTM3^PRIMARY NOK Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM3",.1,0)
^^2^2^3050813
"IX",2,2,"ADTTM3",.1,1,0)
This cross-reference will update the PRIMARY NOK CHANGE DATE/TIME field
"IX",2,2,"ADTTM3",.1,2,0)
when the Primary Next of Kin data changes for a patient.
"IX",2,2,"ADTTM3",1)
D PNOK^DGDDDTTM
"IX",2,2,"ADTTM3",2)
D PNOK^DGDDDTTM
"IX",2,2,"ADTTM3",11.1,0)
^.114IA^12^12
"IX",2,2,"ADTTM3",11.1,1,0)
1^F^2^.211^^^F
"IX",2,2,"ADTTM3",11.1,2,0)
2^F^2^.212^^^F
"IX",2,2,"ADTTM3",11.1,3,0)
3^F^2^.213^^^F
"IX",2,2,"ADTTM3",11.1,4,0)
4^F^2^.214^^^F
"IX",2,2,"ADTTM3",11.1,5,0)
5^F^2^.215^^^F
"IX",2,2,"ADTTM3",11.1,6,0)
6^F^2^.216^^^F
"IX",2,2,"ADTTM3",11.1,7,0)
7^F^2^.217^^^F
"IX",2,2,"ADTTM3",11.1,8,0)
8^F^2^.218^^^F
"IX",2,2,"ADTTM3",11.1,9,0)
9^F^2^.2125^^^F
"IX",2,2,"ADTTM3",11.1,10,0)
10^F^2^.2207^^^F
"IX",2,2,"ADTTM3",11.1,11,0)
11^F^2^.219^^^F
"IX",2,2,"ADTTM3",11.1,12,0)
12^F^2^.21011^^^F
"IX",2,2,"ADTTM4",0)
2^ADTTM4^SECONDARY NOK Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM4",.1,0)
^^2^2^3050830
"IX",2,2,"ADTTM4",.1,1,0)
This cross-reference will update the SECONDARY NOK CHANGE DATE/TIME field
"IX",2,2,"ADTTM4",.1,2,0)
when the Secondary Next of Kin data changes for a patient.
"IX",2,2,"ADTTM4",1)
D SNOK^DGDDDTTM
"IX",2,2,"ADTTM4",2)
D SNOK^DGDDDTTM
"IX",2,2,"ADTTM4",11.1,0)
^.114IA^12^12
"IX",2,2,"ADTTM4",11.1,1,0)
1^F^2^.2191^^^F
"IX",2,2,"ADTTM4",11.1,2,0)
2^F^2^.2192^^^F
"IX",2,2,"ADTTM4",11.1,3,0)
3^F^2^.2193^^^F
"IX",2,2,"ADTTM4",11.1,4,0)
4^F^2^.2194^^^F
"IX",2,2,"ADTTM4",11.1,5,0)
5^F^2^.2195^^^F
"IX",2,2,"ADTTM4",11.1,6,0)
6^F^2^.2196^^^F
"IX",2,2,"ADTTM4",11.1,7,0)
7^F^2^.2197^^^F
"IX",2,2,"ADTTM4",11.1,8,0)
8^F^2^.2198^^^F
"IX",2,2,"ADTTM4",11.1,9,0)
9^F^2^.21925^^^F
"IX",2,2,"ADTTM4",11.1,10,0)
10^F^2^.2203^^^F
"IX",2,2,"ADTTM4",11.1,11,0)
11^F^2^.2199^^^F
"IX",2,2,"ADTTM4",11.1,12,0)
12^F^2^.211011^^^F
"IX",2,2,"ADTTM5",0)
2^ADTTM5^E-CONTACT Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM5",.1,0)
^^2^2^3050813
"IX",2,2,"ADTTM5",.1,1,0)
This cross-reference will update the E-CONTACT CHANGE DATE/TIME field when
"IX",2,2,"ADTTM5",.1,2,0)
the Emergency Contact data changes for a patient.
"IX",2,2,"ADTTM5",1)
D ECON^DGDDDTTM
"IX",2,2,"ADTTM5",2)
D ECON^DGDDDTTM
"IX",2,2,"ADTTM5",11.1,0)
^.114IA^12^12
"IX",2,2,"ADTTM5",11.1,1,0)
1^F^2^.331^^^F
"IX",2,2,"ADTTM5",11.1,2,0)
2^F^2^.332^^^F
"IX",2,2,"ADTTM5",11.1,3,0)
3^F^2^.333^^^F
"IX",2,2,"ADTTM5",11.1,4,0)
4^F^2^.334^^^F
"IX",2,2,"ADTTM5",11.1,5,0)
5^F^2^.335^^^F
"IX",2,2,"ADTTM5",11.1,6,0)
6^F^2^.336^^^F
"IX",2,2,"ADTTM5",11.1,6,3)

"IX",2,2,"ADTTM5",11.1,7,0)
7^F^2^.337^^^F
"IX",2,2,"ADTTM5",11.1,8,0)
8^F^2^.338^^^F
"IX",2,2,"ADTTM5",11.1,9,0)
9^F^2^.3305^^^F
"IX",2,2,"ADTTM5",11.1,10,0)
10^F^2^.2201^^^F
"IX",2,2,"ADTTM5",11.1,11,0)
11^F^2^.339^^^F
"IX",2,2,"ADTTM5",11.1,11,3)

"IX",2,2,"ADTTM5",11.1,12,0)
12^F^2^.33011^^^F
"IX",2,2,"ADTTM5",11.1,12,3)

"IX",2,2,"ADTTM6",0)
2^ADTTM6^E2-CONTACT Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM6",.1,0)
^^2^2^3050830
"IX",2,2,"ADTTM6",.1,1,0)
This cross-reference will update the E2-CONTACT CHANGE DATE/TIME field
"IX",2,2,"ADTTM6",.1,2,0)
when the Secondary Emergency Contact data changes for a patient.
"IX",2,2,"ADTTM6",1)
D ECON2^DGDDDTTM
"IX",2,2,"ADTTM6",2)
D ECON2^DGDDDTTM
"IX",2,2,"ADTTM6",11.1,0)
^.114IA^11^11
"IX",2,2,"ADTTM6",11.1,1,0)
1^F^2^.3311^^^F
"IX",2,2,"ADTTM6",11.1,2,0)
2^F^2^.3312^^^F
"IX",2,2,"ADTTM6",11.1,3,0)
3^F^2^.3313^^^F
"IX",2,2,"ADTTM6",11.1,4,0)
4^F^2^.3314^^^F
"IX",2,2,"ADTTM6",11.1,5,0)
5^F^2^.3315^^^F
"IX",2,2,"ADTTM6",11.1,6,0)
6^F^2^.3316^^^F
"IX",2,2,"ADTTM6",11.1,7,0)
7^F^2^.3317^^^F
"IX",2,2,"ADTTM6",11.1,8,0)
8^F^2^.3318^^^F
"IX",2,2,"ADTTM6",11.1,9,0)
9^F^2^.2204^^^F
"IX",2,2,"ADTTM6",11.1,10,0)
10^F^2^.3319^^^F
"IX",2,2,"ADTTM6",11.1,11,0)
11^F^2^.331011^^^F
"IX",2,2,"ADTTM7",0)
2^ADTTM7^DESIGNEE Cross-Reference^MU^^R^^I^2^^^^^A
"IX",2,2,"ADTTM7",.1,0)
^^2^2^3050813
"IX",2,2,"ADTTM7",.1,1,0)
This cross-reference will update the DESIGNEE CHANGE DATE/TIME field when
"IX",2,2,"ADTTM7",.1,2,0)
the Designee data changes for a patient.
"IX",2,2,"ADTTM7",1)
D DESIG^DGDDDTTM
"IX",2,2,"ADTTM7",2)
D DESIG^DGDDDTTM
"IX",2,2,"ADTTM7",11.1,0)
^.114IA^12^12
"IX",2,2,"ADTTM7",11.1,1,0)
1^F^2^.341^^^F
"IX",2,2,"ADTTM7",11.1,2,0)
2^F^2^.342^^^F
"IX",2,2,"ADTTM7",11.1,3,0)
3^F^2^.343^^^F
"IX",2,2,"ADTTM7",11.1,4,0)
4^F^2^.344^^^F
"IX",2,2,"ADTTM7",11.1,5,0)
5^F^2^.345^^^F
"IX",2,2,"ADTTM7",11.1,6,0)
6^F^2^.346^^^F
"IX",2,2,"ADTTM7",11.1,7,0)
7^F^2^.347^^^F
"IX",2,2,"ADTTM7",11.1,8,0)
8^F^2^.348^^^F
"IX",2,2,"ADTTM7",11.1,9,0)
9^F^2^.3405^^^F
"IX",2,2,"ADTTM7",11.1,10,0)
10^F^2^.2202^^^F
"IX",2,2,"ADTTM7",11.1,11,0)
11^F^2^.349^^^F
"IX",2,2,"ADTTM7",11.1,12,0)
12^F^2^.34011^^^F
"IX",2,2,"ANAM2191",0)
2^ANAM2191^This index keeps the NAME COMPONENTS file in synch with field #.2191.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM2191",.1,0)
^^3^3^3050715
"IX",2,2,"ANAM2191",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM2191",.1,2,0)
COMPONENTS (#20) file record associated with the #.2191 field synchronized
"IX",2,2,"ANAM2191",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM2191",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.2191,.DG20NAME,1.03,+$P($G(^DPT(DA,"NAME")),U,3),"CL35") K DG20NAME Q
"IX",2,2,"ANAM2191",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.2191,1.03) Q
"IX",2,2,"ANAM2191",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM2191",11.1,1,0)
1^F^2^.2191^^1^F
"IX",2,2,"ANAM331",0)
2^ANAM331^This index keeps the NAME COMPONENTS file in synch with field #.331.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM331",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM331",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM331",.1,2,0)
COMPONENTS (#20) file record associated with the #.331 field synchronized
"IX",2,2,"ANAM331",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM331",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.331,.DG20NAME,1.07,+$P($G(^DPT(DA,"NAME")),U,7),"CL35") K DG20NAME Q
"IX",2,2,"ANAM331",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.331,1.07) Q
"IX",2,2,"ANAM331",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM331",11.1,1,0)
1^F^2^.331^^1^F
"IX",2,2,"ANAM3311",0)
2^ANAM3311^This index keeps the NAME COMPONENTS file in synch with field #.3311.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM3311",.1,0)
^^3^3^3050715
"IX",2,2,"ANAM3311",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM3311",.1,2,0)
COMPONENTS (#20) file record associated with the #.3311 field synchronized
"IX",2,2,"ANAM3311",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM3311",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.3311,.DG20NAME,1.08,+$P($G(^DPT(DA,"NAME")),U,8),"CL35") K DG20NAME Q
"IX",2,2,"ANAM3311",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.3311,1.08) Q
"IX",2,2,"ANAM3311",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM3311",11.1,1,0)
1^F^2^.3311^^1^F
"IX",2,2,"ANAM341",0)
2^ANAM341^This index keeps the NAME COMPONENTS file in synch with field #.341.^MU^^F^IR^I^2^^^^^A
"IX",2,2,"ANAM341",.1,0)
^^3^3^3050611
"IX",2,2,"ANAM341",.1,1,0)
This cross reference uses Kernel name standardization APIs to keep the NAME
"IX",2,2,"ANAM341",.1,2,0)
COMPONENTS (#20) file record associated with the #.341 field synchronized
"IX",2,2,"ANAM341",.1,3,0)
with the data value stored in that field.
"IX",2,2,"ANAM341",1)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1,DG20NAME=X D NARY^XLFNAME7(.DG20NAME),UPDCOMP^XLFNAME2(2,.DA,.341,.DG20NAME,1.09,+$P($G(^DPT(DA,"NAME")),U,9),"CL35") K DG20NAME Q
"IX",2,2,"ANAM341",2)
I '$G(XUNOTRIG) N XUNOTRIG S XUNOTRIG=1 D DELCOMP^XLFNAME2(2,.DA,.341,1.09) Q
"IX",2,2,"ANAM341",11.1,0)
^.114IA^1^1
"IX",2,2,"ANAM341",11.1,1,0)
1^F^2^.341^^1^F
"IX",2,2,"AVAFC2405",0)
2^AVAFC2405^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"AVAFC2405",.1,0)
^^5^5^3170126
"IX",2,2,"AVAFC2405",.1,1,0)
This cross-reference activates the DG FIELD MONITOR event point.
"IX",2,2,"AVAFC2405",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"AVAFC2405",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"AVAFC2405",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"AVAFC2405",.1,5,0)
the information available at the time of the event.
"IX",2,2,"AVAFC2405",1)
D FC^DGFCPROT(.DA,2,.2405,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"AVAFC2405",2)
D FC^DGFCPROT(.DA,2,.2405,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"AVAFC2405",11.1,0)
^.114IA^1^1
"IX",2,2,"AVAFC2405",11.1,1,0)
1^F^2^.2405^^^F
"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
985^3191029
"PKG",47,22,1,"PAH",1,1,0)
^^2^2^3191029
"PKG",47,22,1,"PAH",1,1,1,0)
Please see the DG*5.3*985 patch description for detailed information 
"PKG",47,22,1,"PAH",1,1,2,0)
regarding this patch.
"PRE")
DG53985E
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DG53985E")
0^^B4025789
"RTN","DG53985E",1,0)
DG53985E ;ALB/ARF - ENVIRONMENT CHECK FOR PATCH DG*5.3*985 ; 08-OCT-2019
"RTN","DG53985E",2,0)
 ;;5.3;REGISTRATION;**985**; 13-AUG-93;Build 15
"RTN","DG53985E",3,0)
 ;
"RTN","DG53985E",4,0)
 ;
"RTN","DG53985E",5,0)
EN ; This routine contains environmental checks which get executed
"RTN","DG53985E",6,0)
 ; before the DG*5.3*985 installation. It will check for entries in
"RTN","DG53985E",7,0)
 ; PREFERRED NAME(#.2405) in the PATIENT file (#2) that exceed 25 
"RTN","DG53985E",8,0)
 ; characters. If these entries exist the install will be aborted.
"RTN","DG53985E",9,0)
 ;
"RTN","DG53985E",10,0)
 ;  Input: Variables set by KIDS during environment check
"RTN","DG53985E",11,0)
 ;
"RTN","DG53985E",12,0)
 ; Output: XPDABORT - KIDS variable set to abort installation
"RTN","DG53985E",13,0)
 ; 
"RTN","DG53985E",14,0)
 W !!,">>> Beginning the Environment Checker"
"RTN","DG53985E",15,0)
 ;
"RTN","DG53985E",16,0)
 D CHK ;  check for PREFERRED NAME that is greater than 25 characters
"RTN","DG53985E",17,0)
 ;
"RTN","DG53985E",18,0)
 I $D(XPDABORT) W !!,">>> DG*5.3*985 Aborted in Environment Checker",! Q
"RTN","DG53985E",19,0)
 W !!,">>> Environment Checker Successful",!,">>> No PREFERRED NAME > 25 characters found",!
"RTN","DG53985E",20,0)
 Q
"RTN","DG53985E",21,0)
 ;
"RTN","DG53985E",22,0)
CHK ; Check for PREFERRED NAME entries greater than 25 characters
"RTN","DG53985E",23,0)
 ;
"RTN","DG53985E",24,0)
 N DGDFN,DGHDR,DGX,DGCNT
"RTN","DG53985E",25,0)
 S DGHDR=1,DGCNT=0
"RTN","DG53985E",26,0)
 S DGX="",$P(DGX,"=",78)=""
"RTN","DG53985E",27,0)
 W !!?5,"Checking for PREFERRED NAME field (#.2405) in PATIENT file(#2)",!
"RTN","DG53985E",28,0)
 W ?5,"for entries greater than 25 characters....",!
"RTN","DG53985E",29,0)
 ;
"RTN","DG53985E",30,0)
 S DGDFN=""
"RTN","DG53985E",31,0)
 F  S DGDFN=$O(^DPT(DGDFN)) Q:DGDFN=""  I $L($P($G(^DPT(DGDFN,.24)),U,5))>25 D
"RTN","DG53985E",32,0)
 . W:DGHDR=1 !,"PREFERRED NAME found that exceeds limit",!!,"DFN",?25,"FULL ICN",!,DGX,! S DGHDR=0,XPDABORT=1
"RTN","DG53985E",33,0)
 . W DGDFN,?25,$$GETICN^MPIF001(DGDFN),!
"RTN","DG53985E",34,0)
 . S DGCNT=DGCNT+1
"RTN","DG53985E",35,0)
 I '$D(XPDABORT) Q
"RTN","DG53985E",36,0)
 ; At least one PREFERRED NAME is greater than 25 characters
"RTN","DG53985E",37,0)
 W !!,DGCNT_" record(s) found in the PATIENT (#2) file with a PREFERRED NAME(#.2405)"
"RTN","DG53985E",38,0)
 W !,"field value exceeding 25 characters, installation aborted."
"RTN","DG53985E",39,0)
 ;
"RTN","DG53985E",40,0)
 Q
"RTN","DG53985P")
0^^B28724368
"RTN","DG53985P",1,0)
DG53985P ;ALB/HM - DG*5.3*985 POST INSTALL TO UPDATE HEALTH BENEFIT PLAN ;10/09/19 9:18pm
"RTN","DG53985P",2,0)
 ;;5.3;Registration;**985**;Aug 13, 1993;Build 15
"RTN","DG53985P",3,0)
 ;
"RTN","DG53985P",4,0)
 Q
"RTN","DG53985P",5,0)
 ;A post-install routine will be used to perform the following tasks:
"RTN","DG53985P",6,0)
 ; Update the LONG DESCRIPTION (#.04) field of the "Veteran - Full Medical Benefits Treatment & Rx Copay Exempt" record in the HEALTH BENEFIT PLAN (#25.11) file.
"RTN","DG53985P",7,0)
 ;
"RTN","DG53985P",8,0)
POST ; Entry point for post-install
"RTN","DG53985P",9,0)
 ;
"RTN","DG53985P",10,0)
 L +^DGHBP(25.11,0):10 I '$T D BMES^XPDUTL("     Health Benefit Plan (#25.11) File is locked by another user.  Please log YOUR IT Services ticket.") Q
"RTN","DG53985P",11,0)
 ;
"RTN","DG53985P",12,0)
 ; Update hte LONG DESCRIPTION (#.04) field of the "Veteran - Full Medical Benefits Treatment & Rx Copay Exempt" record in the HEALTH BENEFIT PLAN (#25.11) file.
"RTN","DG53985P",13,0)
 D BMES^XPDUTL("Updating the LONG DESCRIPTION (#.04) of the Veteran - Full Medical ")
"RTN","DG53985P",14,0)
 D BMES^XPDUTL("Benefits Treatment & Rx Copay Exempt plan.")
"RTN","DG53985P",15,0)
 D FIXPLN
"RTN","DG53985P",16,0)
 D BMES^XPDUTL("Finished updating the LONG DESCRIPTION (#.04) of the Veteran - Full Medical ")
"RTN","DG53985P",17,0)
 D BMES^XPDUTL("Benefits Treatment & Rx Copay Exempt plan.")
"RTN","DG53985P",18,0)
 ;
"RTN","DG53985P",19,0)
 L -^DGHBP(25.11,0)
"RTN","DG53985P",20,0)
 Q
"RTN","DG53985P",21,0)
 ;
"RTN","DG53985P",22,0)
FIXPLN ;Change Long description of Health Benefit Plan Veteran - Full Medical Benefits Treatment & Rx Copay Exempt
"RTN","DG53985P",23,0)
 ;
"RTN","DG53985P",24,0)
 N DGIEN,DGNAME,DGLD,DGFIELDS,DGPFMS1,DGERR
"RTN","DG53985P",25,0)
 S DGNAME="VETERAN - FULL MEDICAL BENEFITS TREATMENT & RX COPAY EXEMPT"
"RTN","DG53985P",26,0)
 S DGIEN=""
"RTN","DG53985P",27,0)
 S DGERR=""
"RTN","DG53985P",28,0)
 S DGIEN=$O(^DGHBP(25.11,"B",DGNAME,0))
"RTN","DG53985P",29,0)
 I 'DGIEN D BMES^XPDUTL("    "_DGIEN_" entry is not found to fix Long Description field.  ") Q
"RTN","DG53985P",30,0)
 S DGFIELDS("LD",1)="All enrolled Veterans have a comprehensive medical benefits package, which VA "
"RTN","DG53985P",31,0)
 S DGFIELDS("LD",2)="administers through an annual patient enrollment system. Veterans who meet "
"RTN","DG53985P",32,0)
 S DGFIELDS("LD",3)="Veteran status for VA healthcare benefits and are not subject to copayment"
"RTN","DG53985P",33,0)
 S DGFIELDS("LD",4)="for their inpatient, outpatient services nor medications."
"RTN","DG53985P",34,0)
 S DGFIELDS("LD",5)=""
"RTN","DG53985P",35,0)
 S DGFIELDS("LD",6)="Veterans are exempt from copayments for inpatient, outpatient services and "
"RTN","DG53985P",36,0)
 S DGFIELDS("LD",7)="medications related to their Service Connected (SC) related disability and "
"RTN","DG53985P",37,0)
 S DGFIELDS("LD",8)="special authority factor(s) - Agent Orange Exposure (AO), Southwest Asia "
"RTN","DG53985P",38,0)
 S DGFIELDS("LD",9)="Conditions (SWA), Ionizing Radiation (IR), Nose Throat Radium (NTR), Shipboard "
"RTN","DG53985P",39,0)
 S DGFIELDS("LD",10)="Hazard and Defense (SHAD), Combat Veteran (CV), Camp Lejeune (CL), Military "
"RTN","DG53985P",40,0)
 S DGFIELDS("LD",11)="Sexual Treatment (MST)."
"RTN","DG53985P",41,0)
 S DGFIELDS("LD",12)=""
"RTN","DG53985P",42,0)
 S DGFIELDS("LD",13)="Veterans assigned this VMBP meet one of the following conditions:"
"RTN","DG53985P",43,0)
 S DGFIELDS("LD",14)=""
"RTN","DG53985P",44,0)
 S DGFIELDS("LD",15)="o Determined to be 50% or greater SC"
"RTN","DG53985P",45,0)
 S DGFIELDS("LD",16)="o Determined to be 10% to 40% Compensable SC*"
"RTN","DG53985P",46,0)
 S DGFIELDS("LD",17)="o Received a Medal of Honor (MOH)"
"RTN","DG53985P",47,0)
 S DGFIELDS("LD",18)="o Received a Purple Heart (PH)**"
"RTN","DG53985P",48,0)
 S DGFIELDS("LD",19)="o Has been a Prisoner of War (POW)"
"RTN","DG53985P",49,0)
 S DGFIELDS("LD",20)="o Determined to be Catastrophically Disabled (CD)"
"RTN","DG53985P",50,0)
 S DGFIELDS("LD",21)="o Determined to be Unemployable due to SC conditions"
"RTN","DG53985P",51,0)
 S DGFIELDS("LD",22)="o In receipt of Aid & Attendance (A&A)"
"RTN","DG53985P",52,0)
 S DGFIELDS("LD",23)="o In receipt of Housebound (HB)"
"RTN","DG53985P",53,0)
 S DGFIELDS("LD",24)="o In receipt of a VA Pension"
"RTN","DG53985P",54,0)
 S DGFIELDS("LD",25)="o Discharge Due to Disability**"
"RTN","DG53985P",55,0)
 S DGFIELDS("LD",26)="o Military Disability Retirement**"
"RTN","DG53985P",56,0)
 S DGFIELDS("LD",27)="o Receive Medicaid**"
"RTN","DG53985P",57,0)
 S DGFIELDS("LD",28)="o Non-Service Connected (NSC)***"
"RTN","DG53985P",58,0)
 S DGFIELDS("LD",29)="o 0% SC non-compensable ****"
"RTN","DG53985P",59,0)
 S DGFIELDS("LD",30)=""
"RTN","DG53985P",60,0)
 S DGFIELDS("LD",31)="*They are exempt from copayment for medications related to their SC rated "
"RTN","DG53985P",61,0)
 S DGFIELDS("LD",32)="condition, but they must complete a Pharmacy Copay Exemption Test and "
"RTN","DG53985P",62,0)
 S DGFIELDS("LD",33)="the outcome is Rx Copay Exempt to be exempt from NSC medication copays."
"RTN","DG53985P",63,0)
 S DGFIELDS("LD",34)="**They must complete a Pharmacy Copay Exemption Test and the outcome "
"RTN","DG53985P",64,0)
 S DGFIELDS("LD",35)="is Rx Copay Exempt to be exempt from NSC medication copays."
"RTN","DG53985P",65,0)
 S DGFIELDS("LD",36)="***NSC Veterans who are subject to Means Testing; the outcome of the "
"RTN","DG53985P",66,0)
 S DGFIELDS("LD",37)="Means Test is MT Copay Exempt and Rx Exemption status is Exempt."
"RTN","DG53985P",67,0)
 S DGFIELDS("LD",38)="****SC Non-Compensable Veterans who are subject to Means Testing; the"
"RTN","DG53985P",68,0)
 S DGFIELDS("LD",39)="outcome of the Means Test is MT Copay Exempt and Rx Exemption status is "
"RTN","DG53985P",69,0)
 S DGFIELDS("LD",40)="Exempt."
"RTN","DG53985P",70,0)
 M DGLD=DGFIELDS("LD")
"RTN","DG53985P",71,0)
 D WP^DIE(25.11,DGIEN_",",.04,"","DGLD","DGPFMS1") ; LONG DESCRIPTION
"RTN","DG53985P",72,0)
 I $D(DGPFMS1) S DGERR=$G(DGPFMS1("DIERR",1,"TEXT",1))
"RTN","DG53985P",73,0)
 I DGERR'="" D
"RTN","DG53985P",74,0)
 . D BMES^XPDUTL("    *** An Error occurred during updating long description of ")
"RTN","DG53985P",75,0)
 . D MES^XPDUTL("    Veteran - Full Medical Benefits Treatment & Rx Copay Exempt")
"RTN","DG53985P",76,0)
 . D MES^XPDUTL("     *** "_DGERR_" ***")
"RTN","DG53985P",77,0)
 . D MES^XPDUTL("     Please log YOUR IT Services ticket.")
"RTN","DG53985P",78,0)
 I DGERR="" D
"RTN","DG53985P",79,0)
 . D BMES^XPDUTL("    LONG DESCRIPTION (#.04) field of plan Veteran - Full ")
"RTN","DG53985P",80,0)
 . D MES^XPDUTL("    Medical Benefits Treatment & Rx Copay Exempt updated.")
"RTN","DG53985P",81,0)
 Q
"RTN","DG53985P",82,0)
 ;
"RTN","DGR111")
0^6^B9453949
"RTN","DGR111",1,0)
DGR111 ;ALB/TGH,LMD,JAM - Health Benefit Plan Main Menu - List Manager Screen ;4/11/13 10:56am 
"RTN","DGR111",2,0)
 ;;5.3;Registration;**871,987,985**;Aug 13, 1993;Build 15
"RTN","DGR111",3,0)
 ;
"RTN","DGR111",4,0)
EN(DFN) ;Main entry point to invoke the DGEN HBP PATIENT list
"RTN","DGR111",5,0)
 ; Input  -- DFN      Patient IEN
"RTN","DGR111",6,0)
 ;
"RTN","DGR111",7,0)
 ; Set up to use two ListMan Menus dependent upon HBP source
"RTN","DGR111",8,0)
 N HBP,DGHBP,HBPSRC,MENU
"RTN","DGR111",9,0)
 D GETHBP^DGHBPUTL(DFN)
"RTN","DGR111",10,0)
 S MENU="DGEN HBP PATIENT"
"RTN","DGR111",11,0)
 D WAIT^DICD
"RTN","DGR111",12,0)
 D EN^VALM(MENU)
"RTN","DGR111",13,0)
 Q
"RTN","DGR111",14,0)
 ;
"RTN","DGR111",15,0)
HDR ;Header code
"RTN","DGR111",16,0)
 N X
"RTN","DGR111",17,0)
 D PID^VADPT
"RTN","DGR111",18,0)
 S VALMHDR(1)=$E("Patient: "_$P($G(^DPT(DFN,0)),U),1,30)
"RTN","DGR111",19,0)
 S VALMHDR(1)=VALMHDR(1)_" ("_VA("BID")_")"
"RTN","DGR111",20,0)
 S X="PATIENT TYPE UNKNOWN"
"RTN","DGR111",21,0)
 I $D(^DPT(DFN,"TYPE")),$D(^DG(391,+^("TYPE"),0)) S X=$P(^(0),U,1)
"RTN","DGR111",22,0)
 S VALMHDR(1)=$$SETSTR^VALM1(X,VALMHDR(1),60,80)
"RTN","DGR111",23,0)
 ; DG*5.3*987; JAM; check for at least 1 plan and modify the message text
"RTN","DGR111",24,0)
 ;I '$D(^DPT(DFN,"HBP",1)) S VALMHDR(2)="No Currently Stored VMBP Data"
"RTN","DGR111",25,0)
 ; DG*5.3*985; JAM; correct check for at least 1 plan
"RTN","DGR111",26,0)
 I $O(^DPT(DFN,"HBP",0))<1 S VALMHDR(2)="No Currently Stored VMBP Data"
"RTN","DGR111",27,0)
 Q
"RTN","DGR111",28,0)
 ; 
"RTN","DGR111",29,0)
INIT ;Build patient HBP current screen
"RTN","DGR111",30,0)
 D CLEAN^VALM10
"RTN","DGR111",31,0)
 D CLEAR^VALM1
"RTN","DGR111",32,0)
 D GETHBP(DFN)
"RTN","DGR111",33,0)
 Q
"RTN","DGR111",34,0)
 ;
"RTN","DGR111",35,0)
GETHBP(DFN) ;Load HBPs from HBP array into TMP(VALMAR global for display
"RTN","DGR111",36,0)
 ; INPUT:    DFN = Patient IEN
"RTN","DGR111",37,0)
 N DGHBP,DGSEL,DGDATA,Z,HBPSRC,BRACKET,DGHBIEN,DGPNAME
"RTN","DGR111",38,0)
 S VALMCNT=0,(DGDATA,HBPSRC)=""
"RTN","DGR111",39,0)
 D GETHBP^DGHBPUTL(DFN)
"RTN","DGR111",40,0)
 S DGHBP=""
"RTN","DGR111",41,0)
 F  S DGHBP=$O(HBP("CUR",DGHBP)) Q:DGHBP=""  D
"RTN","DGR111",42,0)
 . S HBPSRC=$S(HBPSRC="E":"E",1:$P(HBP("CUR",DGHBP),"^",5))
"RTN","DGR111",43,0)
 S BRACKET=$S(HBPSRC="E":"<>",1:"[]")
"RTN","DGR111",44,0)
 F  S DGHBP=$O(HBP("CUR",DGHBP)) Q:DGHBP=""  D
"RTN","DGR111",45,0)
 . S DGDATA=HBP("CUR",DGHBP)
"RTN","DGR111",46,0)
 . ; DG*5.3*987; jam; Place "zz" before the plan name for inactive plans
"RTN","DGR111",47,0)
 . S DGHBIEN=+DGDATA
"RTN","DGR111",48,0)
 . I $P($G(^DGHBP(25.11,DGHBIEN,0)),"^",4)="Y" S DGPNAME="zz "_DGHBP
"RTN","DGR111",49,0)
 . E  S DGPNAME=DGHBP
"RTN","DGR111",50,0)
 . S VALMCNT=VALMCNT+1
"RTN","DGR111",51,0)
 . S Z=$E(BRACKET)_VALMCNT_$E(BRACKET,2)_"  "_DGPNAME
"RTN","DGR111",52,0)
 . S DGSEL(VALMCNT)=DGPNAME
"RTN","DGR111",53,0)
 . D SET^VALM10(VALMCNT,Z,VALMCNT)
"RTN","DGR111",54,0)
 Q
"RTN","DGR111",55,0)
 ;
"RTN","DGR111",56,0)
HELP ;Help code
"RTN","DGR111",57,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","DGR111",58,0)
 ; DG*53*987; jam;  Add this to the help screen.
"RTN","DGR111",59,0)
 W "Plan name preceded by 'zz' indicates the plan is inactive.",!
"RTN","DGR111",60,0)
 Q
"RTN","DGR111",61,0)
 ;
"RTN","DGR111",62,0)
EXIT ;Exit code
"RTN","DGR111",63,0)
 D CLEAN^VALM10
"RTN","DGR111",64,0)
 D CLEAR^VALM1
"RTN","DGR111",65,0)
 ;K ^TMP("DGRP111",$J)
"RTN","DGR111",66,0)
 Q
"RTN","DGR111",67,0)
 ; 
"RTN","DGR111",68,0)
PEXIT ;DGEN MSDS MENU protocol exit code
"RTN","DGR111",69,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","DGR111",70,0)
 Q
"RTN","DGR111",71,0)
 ;
"RTN","DGR111",72,0)
ACT(DGACT) ; Entry point for menu action selection
"RTN","DGR111",73,0)
 ;              = "VH" - View History - DGEN HBP View History protocol
"RTN","DGR111",74,0)
 ;              = "VD" - View Detail of HBP
"RTN","DGR111",75,0)
 N DGACTU,DA,DIE,DIC,DIK,DIPA,DR,X,Y,DGHBP,HPSRC,HBP
"RTN","DGR111",76,0)
 I $G(DGACT)="" G ACTQ
"RTN","DGR111",77,0)
 I $G(DGACT)="Q" Q
"RTN","DGR111",78,0)
 ; Determine if any HBPs were processed by ESR
"RTN","DGR111",79,0)
 S (DGDATA,HBPSRC)=""
"RTN","DGR111",80,0)
 D GETHBP^DGHBPUTL(DFN)
"RTN","DGR111",81,0)
 S DGHBP=""
"RTN","DGR111",82,0)
 F  S DGHBP=$O(HBP("CUR",DGHBP)) Q:DGHBP=""  D
"RTN","DGR111",83,0)
 . S HBPSRC=$S(HBPSRC="E":"E",1:$P(HBP("CUR",DGHBP),"^",5))
"RTN","DGR111",84,0)
 ;
"RTN","DGR111",85,0)
 D FULL^VALM1
"RTN","DGR111",86,0)
 ; If action is a VH then View History display screen (DGR113) then return to main screen
"RTN","DGR111",87,0)
 I DGACT="VH" D EN^DGR113(DFN) G ACTQ
"RTN","DGR111",88,0)
 ; If action is a VD then View Detail display screen (DGR114) then return to main screen
"RTN","DGR111",89,0)
 I DGACT="VD" D EN^DGR114(DFN) G ACTQ
"RTN","DGR111",90,0)
 ; If user does not choose VH or VD return to main screen
"RTN","DGR111",91,0)
 W !,"Health Benefit Plan Profiles can only be edited/modified by an ESC user,"
"RTN","DGR111",92,0)
 W !,"please contact HEC to request changes/edits."
"RTN","DGR111",93,0)
 D PAUSE^VALM1
"RTN","DGR111",94,0)
 ;
"RTN","DGR111",95,0)
ACTQ D INIT S VALMBCK="R" Q
"RTN","DGR111",96,0)
 ;
"RTN","DGR111",97,0)
EXPND ; -- expand code
"RTN","DGR111",98,0)
 Q
"RTN","DGR111",99,0)
 ;
"RTN","DGRP1")
0^3^B40365565
"RTN","DGRP1",1,0)
DGRP1 ;ALB/MRL,ERC,BAJ,PWC,JAM,JAM - DEMOGRAPHIC DATA ;19 Jul 2017  3:02 PM
"RTN","DGRP1",2,0)
 ;;5.3;Registration;**109,161,506,244,546,570,629,638,649,700,653,688,750,851,907,925,941,985**;Aug 13, 1993;Build 15
"RTN","DGRP1",3,0)
 ;
"RTN","DGRP1",4,0)
EN ;
"RTN","DGRP1",5,0)
 ; JAM - Patch DG*5.3*941, Reformatting Registration screen 1.  New field layout.
"RTN","DGRP1",6,0)
 ;S (DGRPS,DGRPW)=1 D H^DGRPU F I=0,.11,.121,.122,.13,.15,.24,57,"SSN" S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP1",7,0)
 N DGRP
"RTN","DGRP1",8,0)
 S (DGRPS,DGRPW)=1 D H^DGRPU F I=0,.13,.15,.24,"SSN" S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP1",9,0)
 I $P(DGRP(.15),"^",2)]"" S Z="APPLICANT IS LISTED AS 'INELIGIBLE' FOR TREATMENT!",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRP1",10,0)
 ;I $P(DGRP(.15),"^",3)]"" S Z="APPLICANT IS LISTED AS 'MISSING'.  NOTIFY APPROPRIATE PERSONNEL!",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRP1",11,0)
 ;Retrieve SSN Verification status DG*5.3*688 BAJ 11/22/2005
"RTN","DGRP1",12,0)
 N SSNV D GETSTAT(.SSNV)
"RTN","DGRP1",13,0)
 S Z=1 D WW^DGRPV W "  Name: " S Z=$P(DGRP(0),"^",1),Z1=31 D WW1^DGRPV
"RTN","DGRP1",14,0)
 ; DG*5.3*985; JAM - reformat screen 1 to add group 6 - Preferred Name next to Name field and move SSN and Pseudo Reason down
"RTN","DGRP1",15,0)
 S DGRPW=0,Z1="",Z=6 D WW^DGRPV S Z=$P(DGRP(.24),"^",5),Z1=1 S Z=$S(Z]"":" Preferred Name: "_$E(Z,1,17),1:" Preferred Name: Not Answered") D WW1^DGRPV
"RTN","DGRP1",16,0)
 S DGRPW=1
"RTN","DGRP1",17,0)
 W ! S Z="",Z1=6 D WW1^DGRPV S Y=$P(DGRP(0),"^",3) X ^DD("DD") W "DOB: ",Y
"RTN","DGRP1",18,0)
 W ! S Z="",Z1=7 D WW1^DGRPV
"RTN","DGRP1",19,0)
 ;Display SSN and SSN Verification status DG*5.3*688 BAJ 11/22/2005
"RTN","DGRP1",20,0)
 W "SS: " S X=$P(DGRP(0),"^",9),Z=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),Z1=13 D WW1^DGRPV W SSNV
"RTN","DGRP1",21,0)
 ;add Pseuso SSN Reason - DG*5.3*653, ERC
"RTN","DGRP1",22,0)
 I $P(DGRP(0),U,9)["P" D
"RTN","DGRP1",23,0)
 . N DGSPACE
"RTN","DGRP1",24,0)
 . S DGSPACE=10-$L(Z) ;adjust to maintain spacing on screen
"RTN","DGRP1",25,0)
 . S Z=""
"RTN","DGRP1",26,0)
 . S Z1=14+DGSPACE D WW1^DGRPV W "PSSN Reason: "
"RTN","DGRP1",27,0)
 . N DGREAS D SSNREAS(.DGREAS)
"RTN","DGRP1",28,0)
 . Q:$G(DGREAS)']""
"RTN","DGRP1",29,0)
 . W DGREAS
"RTN","DGRP1",30,0)
 D GETNCAL  ;Display name component, sex, and alias information
"RTN","DGRP1",31,0)
 S Z=3,DGRPX=DGRP(0) W ! D WW^DGRPV W " Remarks: ",$S($P(DGRPX,"^",10)]"":$E($P(DGRPX,"^",10),1,65),1:"NO REMARKS ENTERED FOR THIS PATIENT")
"RTN","DGRP1",32,0)
 ;JAM - Patch DG*5.3*941 registration screen changes - remove addresses from screen and Cell/pager/email now in group 3 and Preferred Lang in group 4
"RTN","DGRP1",33,0)
 S Z=4,DGRPW=1.1 W ! D WW^DGRPV W "    Cell Phone: "  ;DG*5.3*941
"RTN","DGRP1",34,0)
 ;
"RTN","DGRP1",35,0)
 ;* Output Cell phone
"RTN","DGRP1",36,0)
 I $P(DGRP(.13),U,4)'="" W ?19,$P(DGRP(.13),U,4)
"RTN","DGRP1",37,0)
 I $P(DGRP(.13),U,4)="" W ?19,"UNANSWERED"
"RTN","DGRP1",38,0)
 ;
"RTN","DGRP1",39,0)
 ; DG*5.3*985; JAM - Move pager up to same line across from cell phone
"RTN","DGRP1",40,0)
 ;* Output Pager
"RTN","DGRP1",41,0)
 W ?47,"Pager #: "
"RTN","DGRP1",42,0)
 I $P(DGRP(.13),U,5)'="" W ?56,$P(DGRP(.13),U,5)
"RTN","DGRP1",43,0)
 I $P(DGRP(.13),U,5)="" W ?56,"UNANSWERED"
"RTN","DGRP1",44,0)
 ;
"RTN","DGRP1",45,0)
 ;* Output Email Address
"RTN","DGRP1",46,0)
 W !,"    Email Address: "
"RTN","DGRP1",47,0)
 I $P(DGRP(.13),U,3)'="" W ?19,$P(DGRP(.13),U,3)
"RTN","DGRP1",48,0)
 I $P(DGRP(.13),U,3)="" W ?19,"UNANSWERED"
"RTN","DGRP1",49,0)
 ;
"RTN","DGRP1",50,0)
LANGUAGE ;Get language data *///*
"RTN","DGRP1",51,0)
 S DGLANGDT=9999999,(DGPRFLAN,DGLANG0,DGRP(1),DGRP(2))=""
"RTN","DGRP1",52,0)
 S DGLANGDT=$O(^DPT(DFN,.207,"B",DGLANGDT),-1)
"RTN","DGRP1",53,0)
 I DGLANGDT="" G L1
"RTN","DGRP1",54,0)
 S DGLANGDA=$O(^DPT(DFN,.207,"B",DGLANGDT,0)) I DGLANGDA="" S DGRP(2)="" G L1
"RTN","DGRP1",55,0)
 S DGLANG0=$G(^DPT(DFN,.207,DGLANGDA,0)),Y=$P(DGLANG0,U),DGPRFLAN=$P(DGLANG0,U,2)
"RTN","DGRP1",56,0)
 S Y=DGLANGDT X ^DD("DD") S DGLANGDT=Y
"RTN","DGRP1",57,0)
 S DGRP(1)=DGLANGDT,DGRP(2)=DGPRFLAN
"RTN","DGRP1",58,0)
 K DGLANGDT,DGPRFLAN,DGLANG0,DGLANGDA
"RTN","DGRP1",59,0)
 ;
"RTN","DGRP1",60,0)
L1 W ! S Z=5,DGRPW=1.1 D WW^DGRPV ;*///*  ;DG*5.3*941 - remove extra line feed
"RTN","DGRP1",61,0)
 W ?4,"Language Date/Time: ",$S(DGRP(1)="":"UNANSWERED",1:DGRP(1))
"RTN","DGRP1",62,0)
 W !?4,"Preferred Language: ",$S(DGRP(2)="":"UNANSWERED",1:DGRP(2))
"RTN","DGRP1",63,0)
 ;
"RTN","DGRP1",64,0)
 ; ***  Additional displays added for Pre-Registration
"RTN","DGRP1",65,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRP1",66,0)
 . W !
"RTN","DGRP1",67,0)
 . N I,MIS1,X,X1,SA1,TP1,X2,X3,ES1,ADDRDTTM
"RTN","DGRP1",68,0)
 . I $D(^DIA(2,"B",DFN)) S X="" F I=1:1 S X=$O(^DIA(2,"B",DFN,X)) Q:X<1  I $P(^DIA(2,X,0),U,3)=.05 S MIS1=$P(^DIA(2,X,0),U,2)
"RTN","DGRP1",69,0)
 . W:$D(MIS1)>0 !," [MARITAL STATUS CHANGED:] "_$$FMTE^XLFDT(MIS1,"5D")
"RTN","DGRP1",70,0)
 . I $D(^DIA(2,"B",DFN)) S X1="" F I=1:1 S X1=$O(^DIA(2,"B",DFN,X1)) Q:X1<1  S:$P(^DIA(2,X1,0),U,3)=.111 SA1=$P(^DIA(2,X1,0),U,2)
"RTN","DGRP1",71,0)
 . W:$D(SA1)>0 !," [STREET ADDRESS LAST CHANGED:] "_$$FMTE^XLFDT(SA1,"5D")
"RTN","DGRP1",72,0)
 . I $D(^DIA(2,"B",DFN)) S X2="" F I=1:1 S X2=$O(^DIA(2,"B",DFN,X2)) Q:X2<1  S:$P(^DIA(2,X2,0),U,3)=.131 TP1=$P(^DIA(2,X2,0),U,2)
"RTN","DGRP1",73,0)
 . S ADDRDTTM=$P($G(^DPT(DFN,.11)),"^",13)
"RTN","DGRP1",74,0)
 . I ADDRDTTM'="" W !," [PERMANENT ADDRESS LAST CHANGED:] "_$$FMTE^XLFDT(ADDRDTTM,"5D")
"RTN","DGRP1",75,0)
 . W:$D(TP1)>0 !," [HOME PHONE NUMBER CHANGED:] "_$$FMTE^XLFDT(TP1,"5D")
"RTN","DGRP1",76,0)
 . I $D(^DIA(2,"B",DFN)) S X3="" F I=1:1 S X3=$O(^DIA(2,"B",DFN,X3)) Q:X3<1  S:$P(^DIA(2,X3,0),U,3)=.31115 ES1=$P(^DIA(2,X3,0),U,2)
"RTN","DGRP1",77,0)
 . W:$D(ES1)>0 !," [EMPLOYMENT STATUS CHANGED:] "_$$FMTE^XLFDT(ES1,"5D")
"RTN","DGRP1",78,0)
 . ; The IB Insurance API does not provide date entered or edited information, so this information will not be displayed for preregistration
"RTN","DGRP1",79,0)
 . I $$INSUR^IBBAPI(DFN,"","AR",.DGDATA,"1,10,11") F DGI=0:0 S DGI=$O(DGDATA("IBBAPI","INSUR",DGI)) Q:'DGI  D
"RTN","DGRP1",80,0)
 .. W !," [INSURANCE:] ",$P(DGDATA("IBBAPI","INSUR",DGI,1),U,2)
"RTN","DGRP1",81,0)
 .. W "  EFFECTIVE DATE: ",$$FMTE^XLFDT(DGDATA("IBBAPI","INSUR",DGI,10),"5D"),"  EXPIRATION DATE: ",$$FMTE^XLFDT(DGDATA("IBBAPI","INSUR",DGI,11),"5D")
"RTN","DGRP1",82,0)
 ;
"RTN","DGRP1",83,0)
 W !
"RTN","DGRP1",84,0)
 G ^DGRPP
"RTN","DGRP1",85,0)
 ;
"RTN","DGRP1",86,0)
GETNCAL ;Get name component values
"RTN","DGRP1",87,0)
 N DGCOMP,DGNC,DGI,DGA,DGALIAS,DGX,DGRPW
"RTN","DGRP1",88,0)
 S DGNC="Family^Given^Middle^Prefix^Suffix^Degree"
"RTN","DGRP1",89,0)
 S DGCOMP=+$G(^DPT(DFN,"NAME"))_","
"RTN","DGRP1",90,0)
 I DGCOMP D GETS^DIQ(20,DGCOMP,"1:6",,"DGCOMP")
"RTN","DGRP1",91,0)
 ;Get alias values
"RTN","DGRP1",92,0)
 S DGA=0 F DGI=1:1:5 D  Q:'$D(DGALIAS(DGI))
"RTN","DGRP1",93,0)
A2 .S DGA=$O(^DPT(DFN,.01,DGA))
"RTN","DGRP1",94,0)
 .I 'DGA D:DGI=1  Q
"RTN","DGRP1",95,0)
 ..S DGALIAS(DGI)="< No alias entries on file >" Q
"RTN","DGRP1",96,0)
 .I DGI=5 S DGALIAS(DGI)="< More alias entries on file >" Q
"RTN","DGRP1",97,0)
 .S DGX=$G(^DPT(DFN,.01,DGA,0)) G:'$L(DGX) A2
"RTN","DGRP1",98,0)
 .S DGALIAS(DGI)=$P(DGX,U),DGX=$P(DGX,U,2)
"RTN","DGRP1",99,0)
 .I $L(DGX) D
"RTN","DGRP1",100,0)
 ..S DGX=" "_$E(DGX,1,3)_"-"_$E(DGX,4,5)_"-"_$E(DGX,6,9)
"RTN","DGRP1",101,0)
 ..; BAJ DG*5.2*700 retrofit 06/22/06
"RTN","DGRP1",102,0)
 ..S DGALIAS(DGI)=$E(DGALIAS(DGI),1,19)
"RTN","DGRP1",103,0)
 ..S $E(DGALIAS(DGI),20)=DGX Q
"RTN","DGRP1",104,0)
 .S DGALIAS(DGI)=$E(DGALIAS(DGI),1,32)
"RTN","DGRP1",105,0)
 .Q  ;
"RTN","DGRP1",106,0)
 ;Display name component, sex, multiple birth indicator and alias data
"RTN","DGRP1",107,0)
 F DGI=1:1:6 D
"RTN","DGRP1",108,0)
 .; DG*5.3*985; jam - Move fields 2 chars over to the left to align with fields above
"RTN","DGRP1",109,0)
 .W !?3,$J($P(DGNC,U,DGI),6),": ",$E($G(DGCOMP(20,DGCOMP,DGI)),1,$S(DGI=1:28,1:27))
"RTN","DGRP1",110,0)
 .; BAJ DG*5.3*700 retrofit 06/22/06
"RTN","DGRP1",111,0)
 .; ob - 10/22/14 added "Birth" on the next line
"RTN","DGRP1",112,0)
 .I DGI=1 S (Z,DGRPW)=1 W ?37,"Birth Sex: " S X=$P(DGRP(0),"^",2),Z=$S(X="M":"MALE",X="F":"FEMALE",1:DGRPU),Z1=3 D WW1^DGRPV ;DG*5.3*907
"RTN","DGRP1",113,0)
 .I DGI=1 S (Z,DGRPW)=1 W ?56,"MBI: " S X=$P($G(^DPT(DFN,"MPIMB")),U),Z=$S(X="N":"NO",X="Y":"*MULTIPLE BIRTH*",1:DGRPU),Z1=16 D WW1^DGRPV
"RTN","DGRP1",114,0)
 .I DGI=2 S DGRPW=0,Z=2 W ?37 D WW^DGRPV W " Alias: "
"RTN","DGRP1",115,0)
 .I DGI>1 W ?47,$G(DGALIAS(DGI-1))
"RTN","DGRP1",116,0)
 ;*** display Self-Identified Gender Identity DG*5.3*907
"RTN","DGRP1",117,0)
 ;Get node with SIGI in it already done at EN+1
"RTN","DGRP1",118,0)
 W !?3,"Self-Identified Gender Identity: "
"RTN","DGRP1",119,0)
 S X=$P(DGRP(.24),"^",4),Z=$S(X="M":"MALE",X="F":"FEMALE",X="TM":"TRANSMALE/TRANSMAN/FEMALE-TO-MALE",X="TF":"TRANSFEMALE/TRANSWOMAN/MALE-TO-FEMALE",X="O":"OTHER",X="N":"INDIVIDUAL CHOOSES NOT TO ANSWER",1:DGRPU) W Z ;D WW1^DGRPV
"RTN","DGRP1",120,0)
 ; *** end of change 
"RTN","DGRP1",121,0)
 Q
"RTN","DGRP1",122,0)
GETSTAT(SSNV) ;get SSN VERIFIED STATUS DG*5.3*688 BAJ 11/22/2005
"RTN","DGRP1",123,0)
 N T
"RTN","DGRP1",124,0)
 S T=$P($G(^DPT(DFN,"SSN")),"^",2)
"RTN","DGRP1",125,0)
 S SSNV=$S(T=2:"INVALID",T=4:"VERIFIED",1:"")
"RTN","DGRP1",126,0)
 Q
"RTN","DGRP1",127,0)
 ;
"RTN","DGRP1",128,0)
SSNREAS(DGREAS) ;get Pseuso SSN Reason - DG*5.3*653, ERC
"RTN","DGRP1",129,0)
 S DGREAS=$P(DGRP("SSN"),U)
"RTN","DGRP1",130,0)
 I $G(DGREAS)']"" Q
"RTN","DGRP1",131,0)
 S DGREAS=$S(DGREAS="R":"Refused to Provide",DGREAS="S":"SSN Unknown/Follow-up Required",DGREAS="N":"No SSN Assigned",1:"< None Entered >")
"RTN","DGRP1",132,0)
 Q
"RTN","DGRPD1")
0^1^B12156585
"RTN","DGRPD1",1,0)
DGRPD1 ;BPFO/JRC,BAJ,DJE,ARF - PATIENT INQUIRY (NEW) ;Sep 28, 2017  5:35PM
"RTN","DGRPD1",2,0)
 ;;5.3;Registration;**703,730,688,863,935,985**;Aug 13, 1993;Build 15
"RTN","DGRPD1",3,0)
 ; DG*5.3*688 BAJ
"RTN","DGRPD1",4,0)
 ; tags HDR & OKLINE moved as is from DGRPD for size considerations
"RTN","DGRPD1",5,0)
 Q
"RTN","DGRPD1",6,0)
EC ;display emergency contact information
"RTN","DGRPD1",7,0)
 N DGEC1,DGEC2
"RTN","DGRPD1",8,0)
 Q:'$G(DFN)
"RTN","DGRPD1",9,0)
 S VAOA("A")=1,VAROOT="DGEC1"  D OAD^VADPT ; Get Primary EC
"RTN","DGRPD1",10,0)
 S VAOA("A")=4,VAROOT="DGEC2"  D OAD^VADPT ; Get Secondary EC
"RTN","DGRPD1",11,0)
 I DGEC1(9)]"" D
"RTN","DGRPD1",12,0)
 . W !,"Emergency Contact Information:"
"RTN","DGRPD1",13,0)
 . ;Contacts name and realtionship
"RTN","DGRPD1",14,0)
 . W !?5,"E-Cont.: ",DGEC1(9)
"RTN","DGRPD1",15,0)
 . I DGEC2(9)]"" W ?40,"E2-Cont.: ",DGEC2(9)
"RTN","DGRPD1",16,0)
 . W !,"Relationship: ",DGEC1(10)
"RTN","DGRPD1",17,0)
 . I DGEC2(9)]"" W ?36,"Relationship: ",DGEC2(10)
"RTN","DGRPD1",18,0)
 . ;ECs address lines 1, 2 and 3
"RTN","DGRPD1",19,0)
 . I DGEC1(1)]"" W !?14,DGEC1(1)
"RTN","DGRPD1",20,0)
 . I DGEC1(1)']"",DGEC2(1)]"" W !
"RTN","DGRPD1",21,0)
 . I DGEC2(1)]"" W ?50,DGEC2(1)
"RTN","DGRPD1",22,0)
 . I DGEC1(2)]"" W !?14,DGEC1(2)
"RTN","DGRPD1",23,0)
 . I DGEC1(2)']"",DGEC2(2)]"" W !
"RTN","DGRPD1",24,0)
 . I DGEC2(2)]"" W ?50,DGEC2(2)
"RTN","DGRPD1",25,0)
 . I DGEC1(3)]"" W !?14,DGEC1(3)
"RTN","DGRPD1",26,0)
 . I DGEC1(3)']"",DGEC2(3)]"" W !
"RTN","DGRPD1",27,0)
 . I DGEC2(3)]"" W ?50,DGEC2(3)
"RTN","DGRPD1",28,0)
 . ;Emergency Contact 1 City, State an Zip+4
"RTN","DGRPD1",29,0)
 . I DGEC1(4)]"" D
"RTN","DGRPD1",30,0)
 . . W !?14,DGEC1(4)
"RTN","DGRPD1",31,0)
 . . I DGEC1(5)]"" W ", "_$$GET1^DIQ(5,+DGEC1(5),1)
"RTN","DGRPD1",32,0)
 . . W "  ",$P(DGEC1(11),"^",2)
"RTN","DGRPD1",33,0)
 . ;Emergency Contact 2 City State and Zip+4
"RTN","DGRPD1",34,0)
 . I DGEC2(4)]"" D
"RTN","DGRPD1",35,0)
 . . I DGEC1(4)']"" W !
"RTN","DGRPD1",36,0)
 . . W ?50,DGEC2(4)
"RTN","DGRPD1",37,0)
 . . I DGEC2(5)]"" W ", "_$$GET1^DIQ(5,+DGEC2(5),1)
"RTN","DGRPD1",38,0)
 . . W "  ",$P(DGEC2(11),"^",2)
"RTN","DGRPD1",39,0)
 .;Home and work phones
"RTN","DGRPD1",40,0)
 . W !,?7,"Phone: ",$S(DGEC1(8)]"":DGEC1(8),1:"UNSPECIFIED")
"RTN","DGRPD1",41,0)
 . I DGEC2(9)]"" W ?43,"Phone: ",$S(DGEC2(8)]"":DGEC2(8),1:"UNSPECIFIED")
"RTN","DGRPD1",42,0)
 . W !?2,"Work Phone: ",$S($P(^DPT(DFN,.33),U,11)]"":$P(^DPT(DFN,.33),U,11),1:"UNSPECIFIED")
"RTN","DGRPD1",43,0)
 . I DGEC2(9)]"" W ?38,"Work Phone: ",$S($P(^DPT(DFN,.331),U,11)]"":$P(^DPT(DFN,.331),U,11),1:"UNSPECIFIED")
"RTN","DGRPD1",44,0)
 D KVAR^VADPT
"RTN","DGRPD1",45,0)
 Q
"RTN","DGRPD1",46,0)
 ;
"RTN","DGRPD1",47,0)
CATDIS ;
"RTN","DGRPD1",48,0)
 ;displays catastrophic disabity review date if there is one
"RTN","DGRPD1",49,0)
 N DGCDIS
"RTN","DGRPD1",50,0)
 Q:'$G(DFN)
"RTN","DGRPD1",51,0)
 I $$GET^DGENCDA(DFN,.DGCDIS) D
"RTN","DGRPD1",52,0)
 .Q:'DGCDIS("REVDTE")
"RTN","DGRPD1",53,0)
 .W !!,"Catastrophically Disabled Review Date: ",$$FMTE^XLFDT(DGCDIS("REVDTE"),1)
"RTN","DGRPD1",54,0)
 Q
"RTN","DGRPD1",55,0)
HDR I '$D(IOF) S IOP="HOME" D ^%ZIS K IOP
"RTN","DGRPD1",56,0)
 ;MPI/PD CHANGE
"RTN","DGRPD1",57,0)
 ;DJE DG*5.3*935 - Add Member ID To Vista Registration Banner - RM#879322 (added SSNNM call)
"RTN","DGRPD1",58,0)
 ;ARF DG*5.3*985 - Add Preferred Name to Patient Inquiry banner
"RTN","DGRPD1",59,0)
 N X,DGLN,DGSSNNM,DGSSNNM1,DGPRFNAM,DGSSN,DGEPI,DGNAME,DGDOB,DGCNT,DGLINE,DIWL,DIWR,DIWF
"RTN","DGRPD1",60,0)
 ;W @IOF,!,$$SSNNM^DGRPU(DFN),?65,$P(VADM(3),"^",2) S X="",$P(X,"=",78)="" W !,X,! Q  ;**863 - MVI_2351 (ptd)
"RTN","DGRPD1",61,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD1",62,0)
 ;ARF DG*5.3*985 - replace previous code for the banner with logic to pull out individual fields to place them in proper order
"RTN","DGRPD1",63,0)
 S DGPRFNAM=$$GET1^DIQ(2,+DFN_",",.2405,"E")
"RTN","DGRPD1",64,0)
 S:DGPRFNAM'="" DGPRFNAM="("_DGPRFNAM_")"
"RTN","DGRPD1",65,0)
 S DGSSNNM=$$SSNNM^DGRPU(DFN)
"RTN","DGRPD1",66,0)
 S DGNAME=$P(DGSSNNM,";",1)_";"
"RTN","DGRPD1",67,0)
 S DGSSNNM1=$P(DGSSNNM,";",2)
"RTN","DGRPD1",68,0)
 S DGSSN=$P(DGSSNNM1," ",3)
"RTN","DGRPD1",69,0)
 S DGEPI=$S($P(DGSSNNM1," ",2)'="":" "_$P(DGSSNNM1," ",2),1:"")
"RTN","DGRPD1",70,0)
 S DGDOB=$P(VADM(3),"^",2)
"RTN","DGRPD1",71,0)
 S DGDOB=$TR(DGDOB," ","_")  ;replaced space in DGDOB with "_" for the ^DIWP utility
"RTN","DGRPD1",72,0)
 ;ARF DG*5.3*985 - create the string of fields for the banner
"RTN","DGRPD1",73,0)
 S X=DGNAME_DGPRFNAM_DGEPI_" "_DGSSN_" "_DGDOB
"RTN","DGRPD1",74,0)
 W @IOF,!
"RTN","DGRPD1",75,0)
 ;ARF DG*5.3*985 - use ^DIWP to insure proper wrapping if string goes beyond 80 chars
"RTN","DGRPD1",76,0)
 K ^UTILITY($J,"W") S DIWL=0,DIWR=79,DIWF="" D ^DIWP
"RTN","DGRPD1",77,0)
 S DGCNT=^UTILITY($J,"W",0)
"RTN","DGRPD1",78,0)
 F DGLN=1:1:DGCNT S DGLINE=$TR(^UTILITY($J,"W",0,DGLN,0),"_"," ") W !,DGLINE  ;replaced "_" for display
"RTN","DGRPD1",79,0)
 S X="",$P(X,"=",78)="" W !,X,!
"RTN","DGRPD1",80,0)
 K ^UTILITY($J,"W")
"RTN","DGRPD1",81,0)
OKLINE(DGLINE) ;DOES PAUSE/HEADER IF $Y EXCEEDS DGLINE
"RTN","DGRPD1",82,0)
 ;
"RTN","DGRPD1",83,0)
 ;IN:   DGLINE --MAX LINE COUNT W/O PAUSE
"RTN","DGRPD1",84,0)
 ;OUT:  DGLINE[RETURNED] -- 0 IF TIMEOUT/UP ARROW
"RTN","DGRPD1",85,0)
 ;      DGRPOUT[SET]     -- 1 IF "
"RTN","DGRPD1",86,0)
 N X,Y  ;**286** MLR 09/25/00  Newing X & Y variables prior to ^DIR
"RTN","DGRPD1",87,0)
 I $G(IOST)["P-" Q DGLINE ; if printer, quit
"RTN","DGRPD1",88,0)
 I $Y>DGLINE N DIR S DIR(0)="E" D ^DIR D:Y HDR I 'Y S DGRPOUT=1,DGLINE=0
"RTN","DGRPD1",89,0)
 Q DGLINE
"RTN","DGRPD1",90,0)
 ;
"RTN","DGRPE")
0^4^B78954100
"RTN","DGRPE",1,0)
DGRPE ;ALB/MRL,LBD,BRM,TMK,BAJ,PWC,JAM,JAM - REGISTRATIONS EDITS ;23 May 2017  1:51 PM
"RTN","DGRPE",2,0)
 ;;5.3;Registration;**32,114,139,169,175,247,190,343,397,342,454,415,489,506,244,547,522,528,555,508,451,626,638,624,677,672,702,689,735,688,797,842,865,871,887,941,985**;Aug 13, 1993;Build 15
"RTN","DGRPE",3,0)
 ;
"RTN","DGRPE",4,0)
 ;DGDR contains a string of edits; edit=screen*10+item #
"RTN","DGRPE",5,0)
 ;
"RTN","DGRPE",6,0)
 ;line tag screen*10+item*1000 = continuation line
"RTN","DGRPE",7,0)
 ;
"RTN","DGRPE",8,0)
 I DGRPS=1,DGDR["101," D CEDITS^DGRPECE(DFN)
"RTN","DGRPE",9,0)
 I DGRPS=8 D ^DGRPEIS,Q Q  ; family demographic edit...not conventional!!  :)
"RTN","DGRPE",10,0)
 I DGRPS=9 D EDIT9^DGRPEIS2,Q Q  ; income screening data ($$$)
"RTN","DGRPE",11,0)
 I DGRPS=5,DGDR["501," D
"RTN","DGRPE",12,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPE",13,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPE",14,0)
 .Q
"RTN","DGRPE",15,0)
 N QUIT S QUIT=0
"RTN","DGRPE",16,0)
 I DGRPS=6,$S(DGDR["601,"!(DGDR["602,")!(DGDR["603,"):1,1:0) D  I QUIT D Q Q  ;Screen 6 subscreens
"RTN","DGRPE",17,0)
 .;Use new ListMan screen for Military Service Episodes (DG*5.3*797)
"RTN","DGRPE",18,0)
 . I DGDR["601," D EN^DGRP61(DFN)   ; MSEs
"RTN","DGRPE",19,0)
 . ; D SETDR("601,",.DR)
"RTN","DGRPE",20,0)
 . ; S (DA,Y)=DFN,DIE="^DPT("
"RTN","DGRPE",21,0)
 . ; D ^DIE I $D(Y) S QUIT=1
"RTN","DGRPE",22,0)
 . ; S DGDR=$P(DGDR,"601,",1)_$P(DGDR,"601,",2,999)
"RTN","DGRPE",23,0)
 . I DGDR["602," D EN^DGRP6CL(DFN,.QUIT)  Q:QUIT  ; Conflicts
"RTN","DGRPE",24,0)
 . I DGDR["603," D EN^DGRP6EF(DFN,.QUIT)  Q:QUIT  ; Exposures
"RTN","DGRPE",25,0)
 I DGRPS=7,(DGDR["702,") D EN^DGRP7CP(DFN,.QUIT) I QUIT D Q Q  ;DG*5.3*842 screen 7 cp subscreen
"RTN","DGRPE",26,0)
 I DGRPS=11,(DGDR["1105,") D EN^DGR111(DFN) ;DG*5.3*871 screen 11 HBP subscreen
"RTN","DGRPE",27,0)
 ;-- Tricare screen #15
"RTN","DGRPE",28,0)
 I DGRPS=15 D EDIT^DGRP15,Q Q
"RTN","DGRPE",29,0)
 ;
"RTN","DGRPE",30,0)
 N DGPH,DGPHFLG
"RTN","DGRPE",31,0)
 K DR S (DA,Y)=DFN,DIE="^DPT(",DR="",DGDRS="DR",DGCT=0
"RTN","DGRPE",32,0)
 G ^DGRPE1:DGRPS>6
"RTN","DGRPE",33,0)
 I DGRPS=4 D ^DGRPE4
"RTN","DGRPE",34,0)
 D SETDR(DGDR,.DR)
"RTN","DGRPE",35,0)
 S (DA,Y)=DFN,DIE="^DPT("
"RTN","DGRPE",36,0)
 D ^DIE
"RTN","DGRPE",37,0)
 ;check for Combat Vet status
"RTN","DGRPE",38,0)
 I $G(DGCVFLG)=1,($P($$CVEDT^DGCV(DFN),U,2)']"") D
"RTN","DGRPE",39,0)
 . W !!,"**NOTE-Change(s) made in this session deleted the veteran's Combat Vet status!"
"RTN","DGRPE",40,0)
 . S DIR(0)="EA" D ^DIR K DIR
"RTN","DGRPE",41,0)
 I $G(DGPHFLG)>0 D EDITPH1^DGRPLE()
"RTN","DGRPE",42,0)
Q K DA,DIE,DR,DGCT,DGCVFLG,DGDR,DGDRD,DGDRS,DGRPADI,I,J,J1,DGCOMLOC,DIPA
"RTN","DGRPE",43,0)
 Q
"RTN","DGRPE",44,0)
 ;
"RTN","DGRPE",45,0)
SETDR(DGDR,DR) ; Set up DR string(s) for edit groups selected
"RTN","DGRPE",46,0)
 N DGCT,DGDRS,J1,J2
"RTN","DGRPE",47,0)
 K DR S DR="",DGDRS="DR",DGCT=0
"RTN","DGRPE",48,0)
 F I=1:1 S J=$P(DGDR,",",I) Q:J=""  S J1=J D:$T(@J1)
"RTN","DGRPE",49,0)
 . S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",50,0)
 . N J2
"RTN","DGRPE",51,0)
 . F J2=0:1 S J1=J*1000+J2 Q:'$T(@J1)  S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",52,0)
 Q
"RTN","DGRPE",53,0)
 ;
"RTN","DGRPE",54,0)
S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","DGRPE",55,0)
 S DGCT=DGCT+1,DGDRS="DR(1,2,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","DGRPE",56,0)
 Q
"RTN","DGRPE",57,0)
 ;
"RTN","DGRPE",58,0)
SETFLDS(DGDR) ; Set up fields to edit
"RTN","DGRPE",59,0)
 Q
"RTN","DGRPE",60,0)
 ;
"RTN","DGRPE",61,0)
 ;DG*5.3*941 - JAM - Reg Screens 1 and 1.1 new formats - Lines below updated for new field locations
"RTN","DGRPE",62,0)
101 ;;
"RTN","DGRPE",63,0)
102 ;;1;
"RTN","DGRPE",64,0)
103 ;;.091;
"RTN","DGRPE",65,0)
104 ;;.134;.135;@21;S X=$$YN1316^DGRPE(DFN);S:(X["N")&($P($G(^DPT(DFN,.13)),"^",3)="") Y="@25";S:(X["N")&($P($G(^DPT(DFN,.13)),"^",3)]"") Y="@24";.133;S:($P($G(^DPT(DFN,.13)),U,16)="Y")&($G(X)="") Y="@21";S Y="@25";@24;.133///@;@25;.1317///NOW;
"RTN","DGRPE",66,0)
105 ;;D DR207^DGRPE;7LANGUAGE DATE/TIME;D LANGDEL^DGRPE;
"RTN","DGRPE",67,0)
 ;DG*5.3*985; JAM - Group 6 added to screen 1 - Preferred Name
"RTN","DGRPE",68,0)
106 ;;.2405;
"RTN","DGRPE",69,0)
 ;JAM; DG*5.3*941 - Tag 108 added for QUES^DGRPU1 (ICR 413) to edit the perm address with the home/office phone numbers since patch 941 removed these fields from the Perm Address edit logic
"RTN","DGRPE",70,0)
108 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);
"RTN","DGRPE",71,0)
109 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);.02;D DR207^DGRPE;7LANGUAGE DATE/TIME;D LANGDEL^DGRPE;D DR109^DGRPE;6;2;K DR(2,2.02),DR(2,2.06);.05;.08;K DIE("NO^");
"RTN","DGRPE",72,0)
111 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGRED(DFN,.FLG);D RESMVQ^DGREGCP1(DFN);
"RTN","DGRPE",73,0)
 ;JAM, DG*5.3*941, Home and Office phone numbers not associated with Perm Address - set flg(1)=0 so we don't edit phone numbers with permanent address
"RTN","DGRPE",74,0)
 ;CLT, Copy Permanent Mailing Address to Residential Address ;DG*5.3*941
"RTN","DGRPE",75,0)
 ; If Perm address is not null, go to update of address. Otherwise give user option to copy residential address to perm.
"RTN","DGRPE",76,0)
 ;  and if address is copied quit, otherwise continue with entering in a perm address. 
"RTN","DGRPE",77,0)
112 ;;S:$G(^DPT(DFN,.11))'="" Y="@30";D DR11^DGRPE S:$G(^DPT(DFN,.11))'="" Y="@31";
"RTN","DGRPE",78,0)
112000 ;;@30;N FLG S FLG(1)=0,FLG(2)=1 D EN^DGREGAED(DFN,.FLG) D PERMMVQ^DGREGCP1(DFN);@31;
"RTN","DGRPE",79,0)
113 ;;.12105TEMP MAILING ADDRESS ACTIVE;S:X="N" Y="@15";S DIE("NO^")="";.1217TEMP MAILING ADDRESS START DATE;.1218TEMP MAILING ADDRESS END DATE;N RET S RET=1 D EN^DGREGTED(DFN,"TEMP",.RET) S:'RET Y=.12105;@15;K DIE("NO^");
"RTN","DGRPE",80,0)
114 ;;.14105//NO;S:X="N" Y="@111" S:X="Y" DIE("NO^")="";.1417;I X']"" W !?4,$C(7),"But I need a Start Date." S Y=.14105;.1418;D DR111^DGRPE;.141;I '$P($$CAACT^DGRPCADD(DFN),U,2) W !?4,"But I need at least one active category." S Y=.14105;
"RTN","DGRPE",81,0)
114000 ;;K DR(2,2.141);N RET S RET=1 D EN^DGREGTED(DFN,"CONF",.RET) S:'RET Y=.14105;@111;K DIE("NO^");
"RTN","DGRPE",82,0)
201 ;;.05;.08;.092;.093;.2401:.2403;57.4//NOT APPLICABLE;
"RTN","DGRPE",83,0)
202 ;;1010.15//NO;S:X'="Y" Y="@22";S DIE("NO^")="";1010.152;I X']"" W !?4,*7,"But I need to know where you were treated most recently." S Y=1010.15;1010.151;1010.154;S:X']"" Y="@22";1010.153;@22;K DIE("NO^");
"RTN","DGRPE",84,0)
203 ;;D DR203^DGRPE;6ETHNICITY;2RACE;K DR(2,2.02),DR(2,2.06);
"RTN","DGRPE",85,0)
205 ;;.181;
"RTN","DGRPE",86,0)
 ; patch DG*5.3*985 - NOK - Tags 301 and 302 for Primary and Secondary NOK: phone number no longer copied when copying patient address - phone number entered on its own
"RTN","DGRPE",87,0)
301 ;;.211;S:X']"" Y="@31";.212;D DR301^DGRPE S:DG4=1 Y=.213;.2125//NO;I X="Y" S DGADD=".21" D AD^DGRPE S Y="@30";.213;K DG4;S:X']"" Y=.216;.214;S:X']"" Y=.216;.215:.217;.2207;@30;.219;.21011;@31;
"RTN","DGRPE",88,0)
302 ;;.2191;S:X']"" Y="@32";.2192;D DR301^DGRPE S:DG4=1 Y=.2193;.21925//NO;I X="Y" S DGADD=".211" D AD^DGRPE S Y="@30";
"RTN","DGRPE",89,0)
302000 ;;.2193;S:X']"" Y=.2196;.2194;S:X']"" Y=.2196;.2195:.2197;.2203;@30;.2199;.211011;@32;
"RTN","DGRPE",90,0)
303 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@33";.3305//NO;I X="Y" S Y="@34",DGX1=1 S:$D(^DPT(DFN,.22)) $P(^(.22),U,1)=$P(^(.22),U,7);@33;.331;S:X']"" DGX1=2,Y="@34";.332;@34;
"RTN","DGRPE",91,0)
303000 ;;S:$G(DGX1) Y="@341";.333;S:X']"" Y=.336;.334;S:X']"" Y=.336;.335:.337;.2201;.339;.33011;S DGX1=2;@341;
"RTN","DGRPE",92,0)
303001 ;;S:$G(DGX1)=2 Y="@35";S DGX2=$G(^DPT(DA,.21));.331///^S X=$P(DGX2,U);.332///^S X=$P(DGX2,U,2);.333////^S X=$P(DGX2,U,3);.334///^S X=$P(DGX2,U,4);@35;
"RTN","DGRPE",93,0)
303002 ;;S:$G(DGX1)=2 Y="@351";.335///^S X=$P(DGX2,U,5);.336///^S X=$P(DGX2,U,6);.337///^S X=$P(DGX2,U,7);.338///^S X=$P(DGX2,U,8);.339///^S X=$P(DGX2,U,9);.33011///^S X=$P(DGX2,U,11);@351;K DGX1,DGX2;
"RTN","DGRPE",94,0)
304 ;;.3311;S:X']"" Y="@36";.3312;.3313;S:X']"" Y=.3316;.3314;S:X']"" Y=.3316;.3315:.3317;.2204;.3319;.331011;@36;        
"RTN","DGRPE",95,0)
305 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@37";.3405//NO;I X="Y" S DGX1=1,Y="@371" S:$D(^DPT(DFN,.22)) $P(^(.22),U,2)=$P(^(.22),U,7);@37;.341;S:X']"" DGX1=2,Y="@371";.342;@371;
"RTN","DGRPE",96,0)
305000 ;;S:$G(DGX1) Y="@38";.343;S:X']"" Y=.346;.344;S:X']"" Y=.346;.345:.347;.2202;.349;.34011;S DGX1=2;@38;
"RTN","DGRPE",97,0)
305001 ;;S:$G(DGX1)=2 Y="@381";S DGX2=$G(^DPT(DA,.21));.341///^S X=$P(DGX2,U);.342///^S X=$P(DGX2,U,2);.343///^S X=$P(DGX2,U,3);.344///^S X=$P(DGX2,U,4);@381
"RTN","DGRPE",98,0)
305002 ;;S:$G(DGX1)=2 Y="@39";.345///^S X=$P(DGX2,U,5);.346///^S X=$P(DGX2,U,6);.347///^S X=$P(DGX2,U,7);.348///^S X=$P(DGX2,U,8);.349///^S X=$P(DGX2,U,9);.34011///^S X=$P(DGX2,U,11);@39;K DGX1,DGX2;
"RTN","DGRPE",99,0)
401 ;;.01;.31115;S:($S(X']"":1,X=3:1,X=9:1,1:0)) Y="@41" S:(X'=5) Y=.3111;.31116;.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@41;
"RTN","DGRPE",100,0)
402 ;;.2514;.2515;S:($S(X']"":1,X=3:1,X=9:1,1:0)) Y="@42" S:(X'=5) Y=.251;.2516;.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.256;.2206;.258;@42;
"RTN","DGRPE",101,0)
501 ;;
"RTN","DGRPE",102,0)
502 ;;.381;.382///NOW;
"RTN","DGRPE",103,0)
503 ;;.383;
"RTN","DGRPE",104,0)
601 ;;Q;
"RTN","DGRPE",105,0)
602 ;;Q;
"RTN","DGRPE",106,0)
603 ;;Q;
"RTN","DGRPE",107,0)
604 ;;.525//NO;S:X'="Y" Y="@62";.526:.528;@62;
"RTN","DGRPE",108,0)
605 ;;.5291//NO;S:X'="Y" Y="@63";.5292:.5294;@63;
"RTN","DGRPE",109,0)
606 ;;I $P($G(^DPT(DFN,.361)),U,3)="H" S Y="@6131";.3602//NO;.3603//NO;S Y="@6132";@6131;.3602;.3603;@6132;
"RTN","DGRPE",110,0)
607 ;;.368//NO;.369//NO;I $S('$D(^DPT(DA,.36)):1,$P(^(.36),U,8)="Y"!($P(^(.36),U,9)="Y"):0,1:1) S Y="@614";.37;@614;
"RTN","DGRPE",111,0)
608 ;;S DGPHFLG=0;.531;S:X'="Y" DGX=X,Y="@616";.532///^S X="PENDING";S Y="@6161";@616;S:DGX'="N" Y="@6162";.533///^S X="VAMC";@6161;S DGPHFLG=1;.535///^S X=$$DIV^DGRPLE();@6162;
"RTN","DGRPE",112,0)
AD N DGZ4,DGPC
"RTN","DGRPE",113,0)
 ; patch DG*5.3*985; jam - NOK - do not copy phone number when copying patient address.
"RTN","DGRPE",114,0)
 ;S X=$S($D(^DPT(DA,.11)):^(.11),1:""),DGZ4=$P(X,U,12),DGPHONE=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(DGADD)):^(DGADD),1:""),^(DGADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_DGPHONE_U_$P(Y,U,10)
"RTN","DGRPE",115,0)
 S X=$S($D(^DPT(DA,.11)):^(.11),1:""),DGZ4=$P(X,U,12),Y=$S($D(^(DGADD)):^(DGADD),1:""),^(DGADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_$P(Y,U,9,11)
"RTN","DGRPE",116,0)
 I DGZ4 S DGPC=$S((DGADD=.33):1,(DGADD=.34):2,(DGADD=.211):3,(DGADD=.331):4,(DGADD=.311):5,(DGADD=.25):6,(DGADD=.21):7,1:0) S:DGPC $P(^DPT(DFN,.22),U,DGPC)=DGZ4
"RTN","DGRPE",117,0)
 ;K DGADD,DGPHONE Q
"RTN","DGRPE",118,0)
 K DGADD Q
"RTN","DGRPE",119,0)
DR109 ;Drop through (use same logic as DR203)
"RTN","DGRPE",120,0)
DR203 S DR(2,2.02)=".01RACE;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.02,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2031"";.02;@2031;"
"RTN","DGRPE",121,0)
 S DR(2,2.06)=".01ETHNICITY;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.06,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2032"";.02;@2032;"
"RTN","DGRPE",122,0)
 Q
"RTN","DGRPE",123,0)
DR11 ;clt; DG*5.3*941 - Called from line tag 112 if Perm address is empty
"RTN","DGRPE",124,0)
 Q:$G(^DPT(DFN,.115))=""
"RTN","DGRPE",125,0)
 ; If Residential Address exists, give user the option of copying residential to permanent address
"RTN","DGRPE",126,0)
 W !,"The Patient has no Permanent Mailing Address."
"RTN","DGRPE",127,0)
 D RESMVQ^DGREGCP1(DFN)
"RTN","DGRPE",128,0)
 Q
"RTN","DGRPE",129,0)
DR111 ; Set DR string for Confidential Address categories
"RTN","DGRPE",130,0)
 S DR(2,2.141)=".01;1//YES;"
"RTN","DGRPE",131,0)
 ;S DR(2,2.14)=".01;1//"_"YES"
"RTN","DGRPE",132,0)
 Q
"RTN","DGRPE",133,0)
DR207 ; DR string for preferred language ;*///*
"RTN","DGRPE",134,0)
 S DR(2,2.07)=".01;.02//ENGLISH;D LANGDEL^DGRPE"
"RTN","DGRPE",135,0)
 Q
"RTN","DGRPE",136,0)
DR301 ; set up variables for foreign address
"RTN","DGRPE",137,0)
 N DG3,DG33
"RTN","DGRPE",138,0)
 S DG4=0
"RTN","DGRPE",139,0)
 S DG3=$P($G(^DPT(DFN,.11)),U,10)
"RTN","DGRPE",140,0)
 S DG33=$O(^HL(779.004,"B","USA",""))
"RTN","DGRPE",141,0)
 I $G(DG3)]"",(DG3'=$G(DG33)) S DG4=1
"RTN","DGRPE",142,0)
 Q
"RTN","DGRPE",143,0)
PRF ; Write Proof needed for FV
"RTN","DGRPE",144,0)
 W !?4,$C(7),"Proof is required for Filipino vet."
"RTN","DGRPE",145,0)
 Q
"RTN","DGRPE",146,0)
 ;
"RTN","DGRPE",147,0)
SET32(DA,DIPA,SEQ) ; Extract the .32 node from patient file and set DIPA
"RTN","DGRPE",148,0)
 ; array with the BOS and component data for the SEQ military service
"RTN","DGRPE",149,0)
 ; episode (1-3)
"RTN","DGRPE",150,0)
 N I,Q,Z
"RTN","DGRPE",151,0)
 K DIPA(32,SEQ)
"RTN","DGRPE",152,0)
 S Q=$G(^DPT(DA,.32)),Z=$G(^(.3291))
"RTN","DGRPE",153,0)
 S DIPA(32,SEQ)=$P(Q,U,SEQ*5)_U_$P(Z,U,SEQ),DIPA("X"_SEQ)=$P(DIPA(32,SEQ),U)
"RTN","DGRPE",154,0)
 Q
"RTN","DGRPE",155,0)
 ;
"RTN","DGRPE",156,0)
WARN32(X,DIPA,SEQ,Y) ; Warn if the BOS is changed, then the component will
"RTN","DGRPE",157,0)
 ; be deleted
"RTN","DGRPE",158,0)
 ; Returns Y to skip component if the component should not be asked
"RTN","DGRPE",159,0)
 ;   for this branch of service
"RTN","DGRPE",160,0)
 N Z
"RTN","DGRPE",161,0)
 I '$$CMP(X) S Y="@601"_SEQ
"RTN","DGRPE",162,0)
 S Z=$G(DIPA(32,SEQ))
"RTN","DGRPE",163,0)
 Q:$S($P(Z,U,2)=""!($P(Z,U)=""):1,1:$P(Z,U)=X)
"RTN","DGRPE",164,0)
 ;
"RTN","DGRPE",165,0)
 I '$D(DIQUIET) W !!,*7,"** WARNING - BRANCH OF SERVICE WAS CHANGED SO THE COMPONENT WAS DELETED",!
"RTN","DGRPE",166,0)
 Q
"RTN","DGRPE",167,0)
 ;
"RTN","DGRPE",168,0)
CMP(X) ; Function to determine if service component is valid for
"RTN","DGRPE",169,0)
 ; branch of service ien in X   0 = invalid  1 = valid  
"RTN","DGRPE",170,0)
 ; Component only valid for ARMY/AIR FORCE/MARINES/COAST GUARD/NOAA/USPHS
"RTN","DGRPE",171,0)
 Q $S('$G(X):0,X'>5!(X=9)!(X=10):1,1:0)
"RTN","DGRPE",172,0)
 ;
"RTN","DGRPE",173,0)
YN1316(DFN) ;Email address indicator - DG*5.3*865
"RTN","DGRPE",174,0)
 N %,RSLT
"RTN","DGRPE",175,0)
 S DIE("NO^")=""
"RTN","DGRPE",176,0)
P1316 ;
"RTN","DGRPE",177,0)
 S %=0
"RTN","DGRPE",178,0)
 W !,"DOES THE PATIENT HAVE AN EMAIL ADDRESS? Y/N"
"RTN","DGRPE",179,0)
 D YN^DICN
"RTN","DGRPE",180,0)
 I %=0 W !,"    If the patient has a valid Email Address, please answer with 'Yes'.",!,"    If no Email Address please answer with 'No'." G P1316
"RTN","DGRPE",181,0)
 I %=-1 W !,"    EXIT NOT ALLOWED ??" G P1316
"RTN","DGRPE",182,0)
 S RSLT=$S(%=1:"Y",%=2:"N")
"RTN","DGRPE",183,0)
 N FDA,IENS
"RTN","DGRPE",184,0)
 Q:'$G(DFN)
"RTN","DGRPE",185,0)
 S IENS=DFN_",",FDA(2,IENS,.1316)=RSLT
"RTN","DGRPE",186,0)
 D FILE^DIE("","FDA")
"RTN","DGRPE",187,0)
 Q RSLT
"RTN","DGRPE",188,0)
 ;
"RTN","DGRPE",189,0)
INPXF207 ; Input transform for field 7 in file ;*///*
"RTN","DGRPE",190,0)
 I $L(X)>60!($L(X)<1) K X Q
"RTN","DGRPE",191,0)
 I X="*" S X="DECLINED TO ANSWER",FMT="?($X+3)" D EN^DDIOL(X,"",FMT) Q
"RTN","DGRPE",192,0)
 I $D(X) DO
"RTN","DGRPE",193,0)
 .N DIC S DIC(0)="EQMN",DIC="^DI(.85,",DIC("S")="S DIC(""W"")="""" I $P(^DI(.85,+Y,0),U,7)=""L"",$P(^(0),U,2)]"""""
"RTN","DGRPE",194,0)
 .D ^DIC S:+Y>0 X=$P(^DI(.85,+Y,0),U) I +Y<0 K X
"RTN","DGRPE",195,0)
 Q
"RTN","DGRPE",196,0)
 ;
"RTN","DGRPE",197,0)
XHELP207 ; This is a screen to be sure the language is a 'living' language, i.e.in use today and that it has the required 2-character code. ;*///*
"RTN","DGRPE",198,0)
 N X S X="?" N DIC S DIC("S")="S DIC(""W"")="""" I $P(^DI(.85,+Y,0),U,7)=""L"",$P(^(0),U,2)]""""" S DIC(0)="EQM",DIC="^DI(.85," D ^DIC
"RTN","DGRPE",199,0)
 Q
"RTN","DGRPE",200,0)
 ;
"RTN","DGRPE",201,0)
LANGDEL ; If no language entered, remove the stub record ;*///*
"RTN","DGRPE",202,0)
 Q:'$G(D1)
"RTN","DGRPE",203,0)
 N X S X=$G(^DPT(DFN,.207,D1,0)) Q:X=""
"RTN","DGRPE",204,0)
 I $P(X,U,2)="" DO
"RTN","DGRPE",205,0)
 .W $C(7),!!,"No language was entered. Record deleted!",! H 3
"RTN","DGRPE",206,0)
 .S DIK="^DPT(DFN,.207,",DA=D1 D ^DIK K DIK
"RTN","DGRPE",207,0)
 Q
"RTN","DGRPH")
0^2^B27974831
"RTN","DGRPH",1,0)
DGRPH ;ALB/MRL,TMK,JAM,ARF - REGISTRATION HELP ROUTINE ;30 Oct 2017  3:03 PM
"RTN","DGRPH",2,0)
 ;;5.3;Registration;**114,343,397,415,489,545,638,624,689,842,941,985**;Aug 13, 1993;Build 15
"RTN","DGRPH",3,0)
 ;
"RTN","DGRPH",4,0)
 S DGRPH="" D H^DGRPU K DGRPH W !,"Enter '^' to stop the display ",$S(DGRPV:"",1:"and edit "),"of data, '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I DGRPV W "." G M
"RTN","DGRPH",5,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those",!,"enclosed in arrows ""<>"" are not."
"RTN","DGRPH",6,0)
 W "  Enter 'ALL' to edit all editable data",!,"elements on the screen."
"RTN","DGRPH",7,0)
M I DGRPS=9,DGRPSEL="V" W !!,"You may precede your selection with 'V' to denote veteran."
"RTN","DGRPH",8,0)
 I DGRPS=9,DGRPSEL]"V" W !!,"To edit a specific column, enter 'V'",$S($D(DGREL("S")):", 'S'",1:""),$S($D(DGREL("D")):", 'D'",1:"")," in front of the selected items."
"RTN","DGRPH",9,0)
 S Z="DATA GROUPS ON SCREEN "_DGRPS,DGRPCM=1 W ! D WW^DGRPV S DGRPCM=0 D:DGRPS=1.1 A1 D:DGRPS'=1.1 @DGRPS D:$S(DGRPS<11:1,DGRPS=14:1,1:0) W D S W ! F I=$Y:1:20 W !
"RTN","DGRPH",10,0)
 ;S Z="Press RETURN key",DGRPCM=1 D WW^DGRPV S DGRPCM=0 W " to EXIT Screen ",DGRPS," HELP " R X:DTIME S X="" Q
"RTN","DGRPH",11,0)
 S DGRPW=0 W "Press " S Z="<RETURN>",DGRPCM=1 D WW^DGRPV W " KEY " S Z="TO EXIT" D WW^DGRPV W " SCREEN ",DGRPS," " S Z="HELP" D WW^DGRPV W " " R X:DTIME S (DGRPCM,DGRPW)=0 Q
"RTN","DGRPH",12,0)
 ;JAM; DG*5.3*941; Groups on screen 1 and 1.1 have changed so update help text to reflect new locations
"RTN","DGRPH",13,0)
 ;ARF; DG*5.3*985; Add 'Birth' to 'Sex' and 'Preferred Name of Patient' to the Help screen for PATIENT DEMOGRAPHIC SCREEN 1
"RTN","DGRPH",14,0)
1 S X="Name, SSN, DOB, Birth Sex^Alias Name & SSN (if applicable)^Remarks concerning this patient^Cell Phone, Pager, E-Mail^Date & Time, Preferred Language^Preferred Name of Patient" Q
"RTN","DGRPH",15,0)
A1 S X="Residential Address^Permanent Mailing Address^Temporary Mailing Address^Confidential Mailing Address" Q
"RTN","DGRPH",16,0)
2 S X="POB, Parents, etc.^Dates/Locations of Previous Care^Race and Ethnicity^Date of Death Information" Q
"RTN","DGRPH",17,0)
3 S X="Primary Next-of-Kin^Secondary Next-of-Kin^Primary Emergency Contact^Secondary Emergency Contact^Designee to receive personal effects" Q
"RTN","DGRPH",18,0)
4 S X="Applicant Employer, Address^Spouses Employer, Address" Q
"RTN","DGRPH",19,0)
5 S X="Unexpired Insurance Policies^Eligibile for Medicaid" Q
"RTN","DGRPH",20,0)
6 S X="Service History^Conflict Locations^Exposure Factors^Prisoner of War^Combat^Military Retirement/Disability^Dental History^Purple Heart Recipient^Medal of Honor^Class II Dental Indicator" Q
"RTN","DGRPH",21,0)
7 S X="Patient Type, SC Data, Claim Info^VA Monetary Benefits^POS, Eligibility Code(s)^SC Conditions relayed by applicant" Q
"RTN","DGRPH",22,0)
8 S X="Spouse's Demographic Info^Dependents' Demographic Info" Q
"RTN","DGRPH",23,0)
9 S X="Social Security^U.S. Civil Service^U.S. Railroad Retirement^Military Retirement^Unemployment^Other Retirement^Total Employment Income^Interest,Dividend,Annuity^Workers Comp or Black Lung^Other Income" Q
"RTN","DGRPH",24,0)
10 S X="Ineligible Patient Information^Missing Patient Information" Q
"RTN","DGRPH",25,0)
11 S X="Eligibility Verification^Monetary Benefits Verification^Service Record Verification^Rated Disabilities (VA)" Q
"RTN","DGRPH",26,0)
12 W !,"Four most recent admission episodes on file for this applicant are displayed",!,"in inverse order." Q
"RTN","DGRPH",27,0)
13 W !,"Four most recent applications for care (registrations) are displayed in",!,"inverse order." Q
"RTN","DGRPH",28,0)
14 S X="Clinics in which actively enrolled^Pending (future) appointments" Q
"RTN","DGRPH",29,0)
15 W !,"Sponsor information is displayed for patients."
"RTN","DGRPH",30,0)
S W ! S Z="AVAILABLE SCREENS",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRPH",31,0)
 ;jam; DG*5.3*941; New wording for screens 1 and 1.1
"RTN","DGRPH",32,0)
 S X="Patient Demographic^Additional Patient Demographic^Patient^Contact^Employment^Insurance^Service Record^Eligibility^Family Demographic^Income Screening^Missing/Ineligible^Eligibility Verification^"
"RTN","DGRPH",33,0)
 S X=X_"Admission Info^Application Info^Appointment Info^Sponsor Demographics"
"RTN","DGRPH",34,0)
 ;S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(DGRPVV,I) S C=C+1,Z="^"_I,DGRPW=(C#2) D WW^DGRPV S Z=$S(I?1N:"  ",1:" ")_J_" Data",Z1=$S((C#2)&(I?1N):36,(C#2):35,1:1) D WW1^DGRPV:(C#2) I '(C#2) W Z
"RTN","DGRPH",35,0)
 N DGJ
"RTN","DGRPH",36,0)
 S DGJ=""
"RTN","DGRPH",37,0)
 S C=0 F I=1:1 S DGJ=$O(DGRPVV(DGJ)) Q:DGJ=""  I '$E(DGRPVV,DGJ) D
"RTN","DGRPH",38,0)
 .S C=C+1,Z="^"_DGJ,DGRPW=(C#2)
"RTN","DGRPH",39,0)
 .D WW^DGRPV
"RTN","DGRPH",40,0)
 .;jam; DG*5.3*941; Change column position to fit the text of the new wording for screens 1 and 1.1
"RTN","DGRPH",41,0)
 .S Z1=$S((C#2)&(DGJ?1N):33,(C#2):32,1:1)
"RTN","DGRPH",42,0)
 .S Z=$S(DGJ?1N:"  ",1:" ")_$P(X,U,I)_" Data"
"RTN","DGRPH",43,0)
 .D WW1^DGRPV:(C#2)
"RTN","DGRPH",44,0)
 .I '(C#2) W Z
"RTN","DGRPH",45,0)
 Q
"RTN","DGRPH",46,0)
W F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,DGRPW=(I#2) D WW^DGRPV S Z=$S(I<10:"  ",1:" ")_J,Z1=$S((I#2)&(I>10):36,(I#2):37,1:1) D WW1^DGRPV
"RTN","DGRPH",47,0)
 W:'((I-1)#2) ! Q
"RTN","DGRPV")
0^5^B19825029
"RTN","DGRPV",1,0)
DGRPV ;ALB/MRL,RTK,PJR,BRM,TMK,AMA,LBD,TDM,PWC,JAM,JAM - REGISTRATION DEFINE VARIABLES ON ENTRY ;19 Jul 2017  3:03 PM
"RTN","DGRPV",2,0)
 ;;5.3;Registration;**109,114,247,190,327,365,343,397,415,489,546,545,451,624,677,672,689,716,688,797,842,871,887,941,985**;Aug 13, 1993;Build 15
"RTN","DGRPV",3,0)
 ;
"RTN","DGRPV",4,0)
 ;
"RTN","DGRPV",5,0)
 ;set up variables for registration screen processing
"RTN","DGRPV",6,0)
 ;
"RTN","DGRPV",7,0)
 ;DGRPVV   :string of 15 ones and zeros each character corresponding to
"RTN","DGRPV",8,0)
 ;          a particular screen (0 means allow edit, 1 means don't)
"RTN","DGRPV",9,0)
 ;
"RTN","DGRPV",10,0)
 ;DGRPVV(n):where n=screen number.  String of x ones and zeros where
"RTN","DGRPV",11,0)
 ;          x is the number of elements on screen n (0=edit, 1=don't)
"RTN","DGRPV",12,0)
 ;
"RTN","DGRPV",13,0)
 ;DGVI     :Turn on high intensity
"RTN","DGRPV",14,0)
 ;DGVO     :Turn off high intensity
"RTN","DGRPV",15,0)
 ;
"RTN","DGRPV",16,0)
EN D DT^DICRW I '$D(DVBGUI) D HOME^%ZIS
"RTN","DGRPV",17,0)
 S (DGVI,DGVO)="""""" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G M ;goto M if not high intensity
"RTN","DGRPV",18,0)
 I $D(^%ZIS(2,IOST(0),7)) S I=^(7),X=$S($P(I,"^",3)]"":3,1:2) I $L($P(I,"^",1)),$L($P(I,"^",X)) S DGVI=$P(I,"^",1),DGVO=$P(I,"^",X)
"RTN","DGRPV",19,0)
M I $L(DGVI_DGVO)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGRPV",20,0)
 S DGRPW=1,DGRPCM=0,DGRPU="UNANSWERED",DGRPNA="NOT APPLICABLE",DGRPV=$S($D(DGRPV):DGRPV,1:1)
"RTN","DGRPV",21,0)
MSE ;Move MSE data from node .32 to .3216 multiple in Patient file #2
"RTN","DGRPV",22,0)
 ;DG*5.3*797
"RTN","DGRPV",23,0)
 I '$D(^DPT(DFN,.3216)) D MOVMSE^DGMSEUTL(DFN)
"RTN","DGRPV",24,0)
SC7 S X=$S('$D(^DPT(DFN,"TYPE")):0,1:+^("TYPE")) S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",25,0)
 S DGRPTYPE=$S($D(^DG(391,+X,0)):^(0),1:""),(DGRPSC,DGRPSCE,DGRPSCE1)="" S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",26,0)
 I DGRPTYPE'="" S DGRPSC=$G(^DG(391,+X,"S")),DGRPSCE=$G(^("E")),DGRPSCE1=$G(^("E10"))
"RTN","DGRPV",27,0)
 ;
"RTN","DGRPV",28,0)
 S DGPH=$P($G(^DPT(DFN,.53)),U)  ;Purple Heart Indicator
"RTN","DGRPV",29,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRPV",30,0)
 . S DGRPVV="000001111111111"
"RTN","DGRPV",31,0)
 E  D
"RTN","DGRPV",32,0)
 . S DGRPVV="000000000000000"
"RTN","DGRPV",33,0)
 ; DG*5.3*985;JAM - Screen 1 now has 6 groups
"RTN","DGRPV",34,0)
 S X="6^3^5^2^3^10^4^2^3^2^5^5^5^2^1"
"RTN","DGRPV",35,0)
 F I=1:1:15 S J=+$P(X,"^",I),DGRPVV(I)=$S((I<12)!(I=15):$E("00000000000000000",1,J),1:$E("11111111111111111",1,J))
"RTN","DGRPV",36,0)
 ;JAM - patch DG*5.3*941 - Screen 1.1 reformat - 4 groups
"RTN","DGRPV",37,0)
 S DGRPVV(1.1)="0000"
"RTN","DGRPV",38,0)
 S DGRPVV(2)="00010"
"RTN","DGRPV",39,0)
 I $P($G(^DPT(DFN,.52)),U,9)'="" S $E(DGRPVV(6),4)=1  ;POW status verified, no editing (DG*5.3*688)
"RTN","DGRPV",40,0)
 I $G(DGPH)]"" S $E(DGRPVV(6),8)=1
"RTN","DGRPV",41,0)
 S $E(DGRPVV(6),9,10)="11"
"RTN","DGRPV",42,0)
 ;
"RTN","DGRPV",43,0)
 F I=3,6,8,9,10,11 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",44,0)
 ;
"RTN","DGRPV",45,0)
 ;-- if patient type is TRICARE then turn off screens 2,4
"RTN","DGRPV",46,0)
 ;
"RTN","DGRPV",47,0)
 ;-- modified 08/20/2003 for NOIS Calls MAC-0400-61574 & AMA-0700-71769 
"RTN","DGRPV",48,0)
 ;-- commented the line to allow screens 2 & 4 to display for Tricare
"RTN","DGRPV",49,0)
 ;I DGRPTYPE["TRICARE" F I=2,4 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",50,0)
 ;
"RTN","DGRPV",51,0)
 F I=31:0 S I=$O(^DD(391,I)) Q:I=""!(I>99)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE,"^",I) S X1=$E(I),X2=$E(I,2) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",52,0)
 I $G(^DPT(DFN,.35)),(^(.35)<+($E(DT,1,3)_"0000")) S DGRPVV=$E(DGRPVV,0,7)_11_$E(DGRPVV,10,99)
"RTN","DGRPV",53,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DGRPV",54,0)
 ;
"RTN","DGRPV",55,0)
 ;Fields are numbered screen_item and put in that piece position.
"RTN","DGRPV",56,0)
 ;Because FM does not allow more than 100 pieces on a node, it was
"RTN","DGRPV",57,0)
 ;necessary to start a new node E10 for fields on screens 10 or higher.
"RTN","DGRPV",58,0)
 ;In these instances, the piece position will be screen_item-100 so,
"RTN","DGRPV",59,0)
 ;for example, screen 11, item 2 would be field 112, but piece 12.
"RTN","DGRPV",60,0)
 ;Items on screens <10 will be found on node E.
"RTN","DGRPV",61,0)
 ;
"RTN","DGRPV",62,0)
 F I=100:0 S I=$O(^DD(391,I)) Q:I=""!(I>150)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE1,"^",I-100) S X1=$E(I,1,2),X2=$E(I,3) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",63,0)
 ;
"RTN","DGRPV",64,0)
 I $S('($D(DUZ)#2):0,'$D(^XUSEC("DG ELIGIBILITY",DUZ)):0,1:1) G ELVER ;if user holds eligibility key, skip
"RTN","DGRPV",65,0)
 F I=.3,.32,.361 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPV",66,0)
 S DGRPVV(10)=11 I $P(DGRP(.361),"^",1)="V" S DGRPVV(7)=111,DGRPVV(1)=1_$E(DGRPVV(1),2,99) ;if elig verified, can't edit elig data, name, ssn, or dob
"RTN","DGRPV",67,0)
 I $P(DGRP(.3),"^",6)]"" S DGRPVV(8)=11 ;if monetary ben. verified, can't edit income screening data
"RTN","DGRPV",68,0)
 I $P(DGRP(.32),"^",2)]"" S DGRPVV(6)=111111111 ;if service data verified, can't edit service screen
"RTN","DGRPV",69,0)
 S DGRPVV(11)=$E(DGRPVV(11),1,4)_"0"   ; turn on HBP to get to next screen where edit on/off will be controlled
"RTN","DGRPV",70,0)
 ;
"RTN","DGRPV",71,0)
ELVER ;set up variables for eligibility verification
"RTN","DGRPV",72,0)
 ;if elig ver option, only edit screens 1, 2, and 7 (and 6, 8, 9, 10,
"RTN","DGRPV",73,0)
 ;   and 11 if they're turned on).
"RTN","DGRPV",74,0)
 ;
"RTN","DGRPV",75,0)
 S DGRP(.361)=$G(^DPT(DFN,.361))
"RTN","DGRPV",76,0)
 I $P(DGRP(.361),U,3)="H" S DGRPVV(10)=10
"RTN","DGRPV",77,0)
 I $P($G(DGRP(.361)),U)="V",($P(DGRP(.361),U,3)="H") S DGRPVV(6)=$E(DGRPVV(6),1,5)_1_$E(DGRPVV(6),7,99),DGRPVV(11)=10000
"RTN","DGRPV",78,0)
 S:'DGELVER DGRPLAST=$S($G(DGPRFLG)=1:5,1:15)
"RTN","DGRPV",79,0)
 I DGELVER S DGRPVV="00111"_$E(DGRPVV,6,11)_"1111" F I=1:1:11 S J=$E(DGRPVV,I) I 'J S DGRPLAST=I
"RTN","DGRPV",80,0)
Q K DGRPSC,DGRPSCE
"RTN","DGRPV",81,0)
 Q
"RTN","DGRPV",82,0)
 ;
"RTN","DGRPV",83,0)
WW ;Write number on screens for display and/or edit (Z=number)
"RTN","DGRPV",84,0)
 W:DGRPW ! S Z=$S(DGRPCM:Z,DGRPV:"<"_Z_">",$E(DGRPVV(DGRPS),Z):"<"_Z_">",1:"["_Z_"]")
"RTN","DGRPV",85,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",86,0)
 I 'DGRPCM&($E(Z)'="[") W Z
"RTN","DGRPV",87,0)
 Q
"RTN","DGRPV",88,0)
 ;
"RTN","DGRPV",89,0)
WW1 ;spacing for screen display (Z=item to print)
"RTN","DGRPV",90,0)
 F Z2=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGRPV",91,0)
 W Z K Z2
"RTN","DGRPV",92,0)
 Q
"RTN","DGRPV",93,0)
 ;
"RTN","DGRPV",94,0)
WW2 ; Write number on screen for fields always selectable
"RTN","DGRPV",95,0)
 W:DGRPW ! S Z="["_Z_"]"
"RTN","DGRPV",96,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",97,0)
 Q
"VER")
8.0^22.2
"^DD",2,2,.212,0)
K-RELATIONSHIP TO PATIENT^FXa^^.21;2^K:$L(X)>30!($L(X)<1) X I $D(X) S DFN=DA D K1^DGLOCK2
"^DD",2,2,.212,.1)

"^DD",2,2,.212,1,0)
^.1
"^DD",2,2,.212,1,992,0)
2^ADGRU212^MUMPS
"^DD",2,2,.212,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.212,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.212,1,992,"%D",0)
^^9^9^2990920^
"^DD",2,2,.212,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.212,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.212,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.212,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.212,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.212,1,992,"%D",6,0)
interface.
"^DD",2,2,.212,1,992,"%D",7,0)
 
"^DD",2,2,.212,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.212,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.212,1,992,"DT")
2990920
"^DD",2,2,.212,3)
Enter the relationship of the primary NOK to the patient [1-30 characters].
"^DD",2,2,.212,20,0)
^.3LA^1^1
"^DD",2,2,.212,20,1,0)
NK1
"^DD",2,2,.212,21,0)
^.001^4^4^3050103^^
"^DD",2,2,.212,21,1,0)
If a primary next-of-kin is specified enter the relationship of
"^DD",2,2,.212,21,2,0)
that person to the applicant [1-30 characters], otherwise nothing
"^DD",2,2,.212,21,3,0)
may be entered.  This field cannot be deleted as long as a
"^DD",2,2,.212,21,4,0)
'next of kin' name is on file.
"^DD",2,2,.212,"AUDIT")
y
"^DD",2,2,.212,"DEL",1,0)
S DFN=DA D K1D^DGLOCK2 I '$D(X)
"^DD",2,2,.212,"DT")
3190821
"^DD",2,2,.2191,0)
K2-NAME OF SECONDARY NOK^FXaJ35^^.211;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME I $D(X) D K1^DGLOCK2
"^DD",2,2,.2191,.1)
NEXT OF KIN-2
"^DD",2,2,.2191,1,0)
^.1^^-1
"^DD",2,2,.2191,1,1,0)
2^AXR1^MUMPS
"^DD",2,2,.2191,1,1,1)
Q
"^DD",2,2,.2191,1,1,2)
S DGXRF=.2191 D ^DGDDC Q
"^DD",2,2,.2191,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.2191,20,0)
^.3LA^1^1
"^DD",2,2,.2191,20,1,0)
NK2
"^DD",2,2,.2191,21,0)
^.001^4^4^3190821^^^
"^DD",2,2,.2191,21,1,0)
Enter the secondary next of kin's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.2191,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.2191,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.2191,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.2191,"AUDIT")
y
"^DD",2,2,.2191,"DT")
3190821
"^DD",2,2,.2192,0)
K2-RELATIONSHIP TO PATIENT^FXa^^.211;2^K:$L(X)>30!($L(X)<1) X I $D(X) S DFN=DA D K2^DGLOCK2
"^DD",2,2,.2192,.1)

"^DD",2,2,.2192,1,0)
^.1^^0
"^DD",2,2,.2192,3)
Enter the relationship of the secondary NOK to the patient [1-30 characters].
"^DD",2,2,.2192,20,0)
^.3LA^1^1
"^DD",2,2,.2192,20,1,0)
NK2
"^DD",2,2,.2192,21,0)
^^3^3^2861007^
"^DD",2,2,.2192,21,1,0)
If a secondary next-of-kin is specified enter the relationship of that
"^DD",2,2,.2192,21,2,0)
person to the applicant [1-30 characters].  This field cannot be
"^DD",2,2,.2192,21,3,0)
deleted as long as a secondary NOK is on file.
"^DD",2,2,.2192,"AUDIT")
y
"^DD",2,2,.2192,"DEL",1,0)
S DFN=DA D K2D^DGLOCK2 I '$D(X)
"^DD",2,2,.2192,"DT")
3190821
"^DD",2,2,.2199,0)
K2-PHONE NUMBER^FXa^^.211;9^K:$L(X)>20!($L(X)<3) X I $D(X) S DFN=DA D K2^DGLOCK2
"^DD",2,2,.2199,.1)

"^DD",2,2,.2199,3)
Enter the phone number of the secondary NOK [3-20 characters].
"^DD",2,2,.2199,20,0)
^.3LA^1^1
"^DD",2,2,.2199,20,1,0)
NK2
"^DD",2,2,.2199,21,0)
^^4^4^2861007^
"^DD",2,2,.2199,21,1,0)
If a secondary NOK is specified enter the telephone number at which
"^DD",2,2,.2199,21,2,0)
that person may be reached [3-20 characters], otherwise nothing may
"^DD",2,2,.2199,21,3,0)
be entered.  This field cannot be deleted as long as a secondary
"^DD",2,2,.2199,21,4,0)
NOK is on file.
"^DD",2,2,.2199,"AUDIT")
y
"^DD",2,2,.2199,"DT")
3190821
"^DD",2,2,.2405,0)
PREFERRED NAME^FJ25Xa^^.24;5^S X=$$TRIM^XLFSTR(X) K:$L(X)>25!($L(X)<1)!($TR(X," ","")?.E1NP.E) X I $D(X) S X=$$UP^XLFSTR(X)
"^DD",2,2,.2405,3)
Enter the Preferred Name (1-25 alphabetic characters and/or spaces) for how the patient would like to be addressed at the facility. Vulgarities and offensive language are NOT appropriate responses.
"^DD",2,2,.2405,4)
N DPTX S DPTX="The response must be 1-25 characters in length and may contain only alphabetical characters and spaces." D EN^DDIOL(DPTX),EN^DDIOL(" ")
"^DD",2,2,.2405,21,0)
^.001^8^8^3190927^^^
"^DD",2,2,.2405,21,1,0)
The PREFERRED NAME field identifies the name that the patient would 
"^DD",2,2,.2405,21,2,0)
prefer to be referenced by during interactions at the medical facility. 
"^DD",2,2,.2405,21,3,0)
Only alphabetic characters and/or spaces are allowed to be entered. The 
"^DD",2,2,.2405,21,4,0)
PREFERRED NAME value will be converted/stored as uppercase.
"^DD",2,2,.2405,21,5,0)
Note: Vulgarities and other offensive language such as curse and/or
"^DD",2,2,.2405,21,6,0)
      sexual words are NOT appropriate responses.
"^DD",2,2,.2405,21,7,0)
Note: Examples of Preferred Name for a patient could include their rank 
"^DD",2,2,.2405,21,8,0)
      (Ie. Private LastName), a nickname, etc...
"^DD",2,2,.2405,"AUDIT")
y
"^DD",2,2,.2405,"DEL",1,0)
W !,*7,"The Preferred Name cannot be deleted by the VistA user. The Patient's First Name may be entered as the Preferred Name. Please contact your facility MVI Point of Contact (POC) to request they create an MVI Toolkit Request to have this value removed." K X
"^DD",2,2,.2405,"DT")
3190812
"^DD",2,2,.331,0)
E-NAME^Fa^^.33;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME
"^DD",2,2,.331,.1)
EMERGENCY CONTACT
"^DD",2,2,.331,1,0)
^.1
"^DD",2,2,.331,1,1,0)
2^AXR4^MUMPS
"^DD",2,2,.331,1,1,1)
Q
"^DD",2,2,.331,1,1,2)
S DGXRF=.331 D ^DGDDC Q
"^DD",2,2,.331,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.331,20,0)
^.3LA^1^1
"^DD",2,2,.331,20,1,0)
EC1
"^DD",2,2,.331,21,0)
^.001^4^4^3190821^^^^
"^DD",2,2,.331,21,1,0)
Enter the primary emergency contact's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.331,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.331,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.331,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.331,"AUDIT")
y
"^DD",2,2,.331,"DT")
3190821
"^DD",2,2,.3311,0)
E2-NAME OF SECONDARY CONTACT^FXa^^.331;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME I $D(X) D E1^DGLOCK2
"^DD",2,2,.3311,.1)
EMERGENCY CONTACT-2
"^DD",2,2,.3311,1,0)
^.1^^-1
"^DD",2,2,.3311,1,1,0)
2^AXR5^MUMPS
"^DD",2,2,.3311,1,1,1)
Q
"^DD",2,2,.3311,1,1,2)
S DGXRF=.3311 D ^DGDDC Q
"^DD",2,2,.3311,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.3311,20,0)
^.3LA^1^1
"^DD",2,2,.3311,20,1,0)
EC2
"^DD",2,2,.3311,21,0)
^^4^4^2861007^
"^DD",2,2,.3311,21,1,0)
Enter the secondary emergency contact's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.3311,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.3311,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.3311,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.3311,"AUDIT")
y
"^DD",2,2,.3311,"DT")
3190821
"^DD",2,2,.3312,0)
E2-RELATIONSHIP TO PATIENT^FXa^^.331;2^K:$L(X)>30!($L(X)<2) X I $D(X) S DFN=DA D E2^DGLOCK2
"^DD",2,2,.3312,.1)

"^DD",2,2,.3312,1,0)
^.1^^0
"^DD",2,2,.3312,3)
Enter the relationship of the secondary emergency contact to the patient [2-30 characters].
"^DD",2,2,.3312,20,0)
^.3LA^1^1
"^DD",2,2,.3312,20,1,0)
EC2
"^DD",2,2,.3312,21,0)
^^4^4^2861007^
"^DD",2,2,.3312,21,1,0)
If a secondary emergency contact is specified enter the relationship
"^DD",2,2,.3312,21,2,0)
of that person to the applicant [2-30 characters], otherwise nothing
"^DD",2,2,.3312,21,3,0)
may be entered.  This field cannot be deleted as long as a secondary
"^DD",2,2,.3312,21,4,0)
emergency contact is on file.
"^DD",2,2,.3312,"AUDIT")
y
"^DD",2,2,.3312,"DEL",1,0)
S DFN=DA D E2D^DGLOCK2 I '$D(X)
"^DD",2,2,.3312,"DT")
3190821
"^DD",2,2,.3319,0)
E2-PHONE NUMBER^FXa^^.331;9^K:$L(X)>20!($L(X)<3) X I $D(X) S DFN=DA D E2^DGLOCK2
"^DD",2,2,.3319,.1)

"^DD",2,2,.3319,3)
Enter the phone number of the secondary emergency contact [3-20 characters].
"^DD",2,2,.3319,20,0)
^.3LA^1^1
"^DD",2,2,.3319,20,1,0)
EC2
"^DD",2,2,.3319,21,0)
^^4^4^2861007^
"^DD",2,2,.3319,21,1,0)
If a secondary emergency contact is specified enter the telephone
"^DD",2,2,.3319,21,2,0)
number at which that person may be reached [3-20 characters],
"^DD",2,2,.3319,21,3,0)
otherwise nothing may be entered.  This field cannot be deleted as
"^DD",2,2,.3319,21,4,0)
long as a secondary emergency contact is on file.
"^DD",2,2,.3319,"AUDIT")
y
"^DD",2,2,.3319,"DT")
3190821
"^DD",2,2,.332,0)
E-RELATIONSHIP TO PATIENT^FXa^^.33;2^K:$L(X)>30!($L(X)<2) X I $D(X) S DFN=DA D E1^DGLOCK2
"^DD",2,2,.332,.1)

"^DD",2,2,.332,1,0)
^.1^^0
"^DD",2,2,.332,3)
Enter the relationship of the emergency contact to the patient [3-35 characters].
"^DD",2,2,.332,20,0)
^.3LA^1^1
"^DD",2,2,.332,20,1,0)
EC1
"^DD",2,2,.332,21,0)
^^4^4^2861007^
"^DD",2,2,.332,21,1,0)
If a primary emergency contact is specified enter the relationship
"^DD",2,2,.332,21,2,0)
of that person to the applicant [3-35 characters], otherwise nothing
"^DD",2,2,.332,21,3,0)
may be entered.  This field cannot be deleted as long as a primary
"^DD",2,2,.332,21,4,0)
emergency contact is on file.
"^DD",2,2,.332,"AUDIT")
y
"^DD",2,2,.332,"DEL",1,0)
S DFN=DA D E1D^DGLOCK2 I '$D(X)
"^DD",2,2,.332,"DT")
3190821
"^DD",2,2,.339,0)
E-PHONE NUMBER^FXa^^.33;9^K:$L(X)>20!($L(X)<3) X I $D(X) S DFN=DA D E1^DGLOCK2
"^DD",2,2,.339,.1)

"^DD",2,2,.339,3)
Enter the phone number of the emergency contact [3-20 characters].
"^DD",2,2,.339,20,0)
^.3LA^1^1
"^DD",2,2,.339,20,1,0)
EC1
"^DD",2,2,.339,21,0)
^^4^4^2861007^
"^DD",2,2,.339,21,1,0)
If a primary emergency contact is specified enter the telephone
"^DD",2,2,.339,21,2,0)
number [3-20 characters] at which that person may be reached,
"^DD",2,2,.339,21,3,0)
otherwise nothing may be entered.  This field cannot be deleted
"^DD",2,2,.339,21,4,0)
as long as a primary emergency contact is on file.
"^DD",2,2,.339,"AUDIT")
y
"^DD",2,2,.339,"DT")
3190821
"^DD",2,2,.341,0)
D-NAME OF DESIGNEE^Fa^^.34;1^K:$L(X)>35!($L(X)<3) X I $D(X) S DG20NAME=X,(X,DG20NAME)=$$FORMAT^XLFNAME7(.DG20NAME,3,35) K:'$L(X) X,DG20NAME
"^DD",2,2,.341,.1)
DESIGNEE
"^DD",2,2,.341,1,0)
^.1
"^DD",2,2,.341,1,1,0)
2^AXR6^MUMPS
"^DD",2,2,.341,1,1,1)
Q
"^DD",2,2,.341,1,1,2)
S DGXRF=.341 D ^DGDDC Q
"^DD",2,2,.341,3)
Enter name in 'LAST,FIRST MIDDLE SUFFIX' format, must be 3-35 characters in length.
"^DD",2,2,.341,20,0)
^.3LA^1^1
"^DD",2,2,.341,20,1,0)
D1
"^DD",2,2,.341,21,0)
^^4^4^2861007^
"^DD",2,2,.341,21,1,0)
Enter the designee's name in 'LAST,FIRST MIDDLE SUFFIX' format.
"^DD",2,2,.341,21,2,0)
This value must be 3-35 characters in length and may contain only uppercase
"^DD",2,2,.341,21,3,0)
alpha characters, spaces, apostrophes, hyphens and one comma.  All other
"^DD",2,2,.341,21,4,0)
characters and parenthetical text will be removed.
"^DD",2,2,.341,"AUDIT")
y
"^DD",2,2,.341,"DT")
3190821
"^DD",2,2,.342,0)
D-RELATIONSHIP TO PATIENT^FXa^^.34;2^K:$L(X)>30!($L(X)<3) X I $D(X) S DFN=DA D D^DGLOCK2
"^DD",2,2,.342,.1)

"^DD",2,2,.342,1,0)
^.1^^0
"^DD",2,2,.342,3)
Enter the relationship of the designee to the patient [3-30 characters].
"^DD",2,2,.342,20,0)
^.3LA^1^1
"^DD",2,2,.342,20,1,0)
D1
"^DD",2,2,.342,21,0)
^^3^3^2861007^
"^DD",2,2,.342,21,1,0)
If a designee is specified enter the relationship of that person to
"^DD",2,2,.342,21,2,0)
the applicant [3-30 characters], otherwise nothing may be entered.
"^DD",2,2,.342,21,3,0)
This field cannot be deleted as long as a designee is on file.
"^DD",2,2,.342,"AUDIT")
y
"^DD",2,2,.342,"DEL",1,0)
S DFN=DA D DD^DGLOCK2 I '$D(X)
"^DD",2,2,.342,"DT")
3190821
"^DD",2,2,.349,0)
D-PHONE NUMBER^FXa^^.34;9^K:$L(X)>20!($L(X)<3) X I $D(X) S DFN=DA D D^DGLOCK2
"^DD",2,2,.349,.1)
PHONE NUMBER OF PERSONAL POSSESSION DESIGNEE
"^DD",2,2,.349,3)
Enter the phone number of the designee [3-20 characters].
"^DD",2,2,.349,20,0)
^.3LA^1^1
"^DD",2,2,.349,20,1,0)
D1
"^DD",2,2,.349,21,0)
^^4^4^2861007^
"^DD",2,2,.349,21,1,0)
If a designee is specified enter the telephone number at which
"^DD",2,2,.349,21,2,0)
that person may be reached [3-20 characters], otherwise nothing
"^DD",2,2,.349,21,3,0)
may be entered.  This field cannot be deleted as long as a
"^DD",2,2,.349,21,4,0)
designee is on file.
"^DD",2,2,.349,"AUDIT")
y
"^DD",2,2,.349,"DT")
3190821
**INSTALL NAME**
IVM*2.0*188
"BLD",10931,0)
IVM*2.0*188^INCOME VERIFICATION MATCH^0^3191029^y
"BLD",10931,1,0)
^^2^2^3190910^
"BLD",10931,1,1,0)
Please see the IVM*2.0*188 patch description for detailed information
"BLD",10931,1,2,0)
regarding this patch.
"BLD",10931,4,0)
^9.64PA^^
"BLD",10931,6.3)
12
"BLD",10931,"ABPKG")
n
"BLD",10931,"KRN",0)
^9.67PA^779.2^20
"BLD",10931,"KRN",.4,0)
.4
"BLD",10931,"KRN",.401,0)
.401
"BLD",10931,"KRN",.402,0)
.402
"BLD",10931,"KRN",.403,0)
.403
"BLD",10931,"KRN",.5,0)
.5
"BLD",10931,"KRN",.84,0)
.84
"BLD",10931,"KRN",3.6,0)
3.6
"BLD",10931,"KRN",3.8,0)
3.8
"BLD",10931,"KRN",9.2,0)
9.2
"BLD",10931,"KRN",9.8,0)
9.8
"BLD",10931,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",10931,"KRN",9.8,"NM",1,0)
IVMPREC6^^0^B199209927
"BLD",10931,"KRN",9.8,"NM",2,0)
IVMPREC8^^0^B300573849
"BLD",10931,"KRN",9.8,"NM",3,0)
IVMLDEM6^^0^B132784779
"BLD",10931,"KRN",9.8,"NM","B","IVMLDEM6",3)

"BLD",10931,"KRN",9.8,"NM","B","IVMPREC6",1)

"BLD",10931,"KRN",9.8,"NM","B","IVMPREC8",2)

"BLD",10931,"KRN",19,0)
19
"BLD",10931,"KRN",19.1,0)
19.1
"BLD",10931,"KRN",101,0)
101
"BLD",10931,"KRN",409.61,0)
409.61
"BLD",10931,"KRN",771,0)
771
"BLD",10931,"KRN",779.2,0)
779.2
"BLD",10931,"KRN",870,0)
870
"BLD",10931,"KRN",8989.51,0)
8989.51
"BLD",10931,"KRN",8989.52,0)
8989.52
"BLD",10931,"KRN",8994,0)
8994
"BLD",10931,"KRN","B",.4,.4)

"BLD",10931,"KRN","B",.401,.401)

"BLD",10931,"KRN","B",.402,.402)

"BLD",10931,"KRN","B",.403,.403)

"BLD",10931,"KRN","B",.5,.5)

"BLD",10931,"KRN","B",.84,.84)

"BLD",10931,"KRN","B",3.6,3.6)

"BLD",10931,"KRN","B",3.8,3.8)

"BLD",10931,"KRN","B",9.2,9.2)

"BLD",10931,"KRN","B",9.8,9.8)

"BLD",10931,"KRN","B",19,19)

"BLD",10931,"KRN","B",19.1,19.1)

"BLD",10931,"KRN","B",101,101)

"BLD",10931,"KRN","B",409.61,409.61)

"BLD",10931,"KRN","B",771,771)

"BLD",10931,"KRN","B",779.2,779.2)

"BLD",10931,"KRN","B",870,870)

"BLD",10931,"KRN","B",8989.51,8989.51)

"BLD",10931,"KRN","B",8989.52,8989.52)

"BLD",10931,"KRN","B",8994,8994)

"BLD",10931,"QUES",0)
^9.62^^
"BLD",10931,"REQB",0)
^9.611^1^1
"BLD",10931,"REQB",1,0)
IVM*2.0*177^1
"BLD",10931,"REQB","B","IVM*2.0*177",1)

"MBREQ")
0
"PKG",120,-1)
1^1
"PKG",120,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",120,22,0)
^9.49I^1^1
"PKG",120,22,1,0)
2.0^2941021^2960823
"PKG",120,22,1,"PAH",1,0)
188^3191029
"PKG",120,22,1,"PAH",1,1,0)
^^2^2^3191029
"PKG",120,22,1,"PAH",1,1,1,0)
Please see the IVM*2.0*188 patch description for detailed information
"PKG",120,22,1,"PAH",1,1,2,0)
regarding this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IVMLDEM6")
0^3^B132784779
"RTN","IVMLDEM6",1,0)
IVMLDEM6 ;ALB/KCL,BRM,PHH,CKN,LBD,KUM - IVM DEMOGRAPHIC UPLOAD FILE ADDRESS ;09/02/19 8:24pm
"RTN","IVMLDEM6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**10,58,73,79,108,106,105,124,115,152,164,177,188**;21-OCT-94;Build 12
"RTN","IVMLDEM6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMLDEM6",4,0)
 ;
"RTN","IVMLDEM6",5,0)
 ;
"RTN","IVMLDEM6",6,0)
ADDR(DFN,IVMDA2,IVMDA1,IVMDA,IVMPPICK) ; - function to check if uploadable field
"RTN","IVMLDEM6",7,0)
 ;                          is an address field and return a flag
"RTN","IVMLDEM6",8,0)
 ;
"RTN","IVMLDEM6",9,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEM6",10,0)
 ;           IVMDA2  -  pointer to case record in (#301.5) file
"RTN","IVMLDEM6",11,0)
 ;           IVMDA1  -  pointer to PID msg in (#301.501) sub-file
"RTN","IVMLDEM6",12,0)
 ;            IVMDA  -  pointer to record in (#301.511) sub-file
"RTN","IVMLDEM6",13,0)
 ;         IVMPPICK  -  residence phone number and/or another address
"RTN","IVMLDEM6",14,0)
 ;                        field selected
"RTN","IVMLDEM6",15,0)
 ;                      0 - phone or an address field not selected 
"RTN","IVMLDEM6",16,0)
 ;                      1 - address field(s) selected
"RTN","IVMLDEM6",17,0)
 ;                      2 - phone selected
"RTN","IVMLDEM6",18,0)
 ;                      3 - both address field(s) and phone selected
"RTN","IVMLDEM6",19,0)
 ;
"RTN","IVMLDEM6",20,0)
 ; Output: IVMFLAG   -  1 if address field
"RTN","IVMLDEM6",21,0)
 ;                      0 if not an address field
"RTN","IVMLDEM6",22,0)
 ;
"RTN","IVMLDEM6",23,0)
 ;
"RTN","IVMLDEM6",24,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y,IVMAFLD,IVMAVAL,IVMFNAM
"RTN","IVMLDEM6",25,0)
 ;
"RTN","IVMLDEM6",26,0)
 ; - initialize flags
"RTN","IVMLDEM6",27,0)
 S IVMFLAG=0
"RTN","IVMLDEM6",28,0)
 ;
"RTN","IVMLDEM6",29,0)
 ; - check for required parameters
"RTN","IVMLDEM6",30,0)
 I '$G(DFN)!('$G(IVMDA))!('$G(IVMDA1))!'($G(IVMDA2)) G ADDRQ
"RTN","IVMLDEM6",31,0)
 ;
"RTN","IVMLDEM6",32,0)
 ; - get pointer to (#301.92) file from (#301.511) sub-file
"RTN","IVMLDEM6",33,0)
 S IVMPTR=+$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMDA,0)) G ADDRQ:'IVMPTR
"RTN","IVMLDEM6",34,0)
 ;
"RTN","IVMLDEM6",35,0)
ASK I '$D(^IVM(301.92,"AD",+IVMPTR)) G ADDRQ
"RTN","IVMLDEM6",36,0)
 I IVMPPICK=2 G ASK1
"RTN","IVMLDEM6",37,0)
 W ! S DIR("A")="Do you wish to proceed with this action"
"RTN","IVMLDEM6",38,0)
 S DIR("A",1)="You have selected to update an address field."
"RTN","IVMLDEM6",39,0)
 S DIR("A",2)="You will be required to upload the entire address."
"RTN","IVMLDEM6",40,0)
 S DIR("?")="Enter 'YES' to continue or 'NO' to abort."
"RTN","IVMLDEM6",41,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",42,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",43,0)
 S IVMFLAG=1
"RTN","IVMLDEM6",44,0)
 I 'Y,IVMPPICK=1 G ADDRQ    ;only address selected so quit
"RTN","IVMLDEM6",45,0)
 I 'Y S IVMPPICK=2 G ASK1   ;check if phone should be updated
"RTN","IVMLDEM6",46,0)
 W ! S DIR("A")="Are you sure that you want to update the complete address"
"RTN","IVMLDEM6",47,0)
 S:$$PHARM(+$G(DFN)) DIR("A",1)="*** WARNING: This patient has ACTIVE PRESCRIPTIONS on file."
"RTN","IVMLDEM6",48,0)
 S DIR("A",2)=""
"RTN","IVMLDEM6",49,0)
 I $$ADRDTCK^IVMLDEM9(+$G(DFN),IVMDA2,IVMDA1) S DIR("A",2)="*** WARNING: The address that you are attempting to file is OLDER than",DIR("A",3)="             the address on file.",DIR("A",4)=""
"RTN","IVMLDEM6",50,0)
 S DIR("?",1)="Enter 'YES' to update the complete address that was received from"
"RTN","IVMLDEM6",51,0)
 S DIR("?")="HEC.  Enter 'NO' to quit."
"RTN","IVMLDEM6",52,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IVMLDEM6",53,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",54,0)
 S IVMFLAG=1
"RTN","IVMLDEM6",55,0)
 I 'Y,IVMPPICK=1 G ADDRQ     ;only address selected so quit
"RTN","IVMLDEM6",56,0)
 I 'Y S IVMPPICK=2 G ASK1    ;check if phone should be updated
"RTN","IVMLDEM6",57,0)
 ;
"RTN","IVMLDEM6",58,0)
 ; determine correct address change date/time to use
"RTN","IVMLDEM6",59,0)
 D ADDRDT(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",60,0)
 ;
"RTN","IVMLDEM6",61,0)
 I IVMPPICK=3 G ASK1   ;phone number also selected
"RTN","IVMLDEM6",62,0)
 ;
"RTN","IVMLDEM6",63,0)
 G LOOP  ;only address selected, proceed to filing
"RTN","IVMLDEM6",64,0)
 ;
"RTN","IVMLDEM6",65,0)
ASK1 ; - phone selected to be uploaded
"RTN","IVMLDEM6",66,0)
 W !! S DIR("A")="OK to update"
"RTN","IVMLDEM6",67,0)
 S DIR("A",1)="You have selected to update the PHONE NUMBER [RESIDENCE] field."
"RTN","IVMLDEM6",68,0)
 I $$PHNDTCK^IVMLDEM9(+$G(DFN),IVMDA2,IVMDA1) D
"RTN","IVMLDEM6",69,0)
 .S DIR("A",2)="*** WARNING: The phone number that you are attempting to file is OLDER than"
"RTN","IVMLDEM6",70,0)
 .S DIR("A",3)="             the phone number on file."
"RTN","IVMLDEM6",71,0)
 .S DIR("A",4)=""
"RTN","IVMLDEM6",72,0)
 S DIR("?",1)="Enter 'YES' to update the patient's Phone Number [Residence] that was"
"RTN","IVMLDEM6",73,0)
 S DIR("?",2)="received from HEC.  Enter 'NO' to quit."
"RTN","IVMLDEM6",74,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","IVMLDEM6",75,0)
 D ^DIR K DIR
"RTN","IVMLDEM6",76,0)
 S IVMFLAG=1
"RTN","IVMLDEM6",77,0)
 I 'Y,IVMPPICK=2 G ADDRQ   ;no phone or address updates, just quit
"RTN","IVMLDEM6",78,0)
 I 'Y S IVMPPICK=1 G LOOP  ;address still needs to be filed
"RTN","IVMLDEM6",79,0)
 ;
"RTN","IVMLDEM6",80,0)
 ; determine correct phone # change date/time to use
"RTN","IVMLDEM6",81,0)
 D PHONDT(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",82,0)
 ;
"RTN","IVMLDEM6",83,0)
 W !,"Filing PHONE NUMBER [RESIDENCE] field... "
"RTN","IVMLDEM6",84,0)
 ;
"RTN","IVMLDEM6",85,0)
LOOP ;
"RTN","IVMLDEM6",86,0)
 N DGPRIOR D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","IVMLDEM6",87,0)
 ;
"RTN","IVMLDEM6",88,0)
 I IVMPPICK'=2 D
"RTN","IVMLDEM6",89,0)
 .W !,"Filing address fields... "
"RTN","IVMLDEM6",90,0)
 .D EN^DGCLEAR(DFN,"PERM") ;Deleting existing address before updating
"RTN","IVMLDEM6",91,0)
 ; - loop thru fields in ^IVM(301.92,"AD" x-ref
"RTN","IVMLDEM6",92,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMLDEM6",93,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMLDEM6",94,0)
 ..;
"RTN","IVMLDEM6",95,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEM6",96,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0)) Q:IVMNODE']""
"RTN","IVMLDEM6",97,0)
 ..Q:'(+IVMNODE)!($P(IVMNODE,"^",2)']"")
"RTN","IVMLDEM6",98,0)
 ..;
"RTN","IVMLDEM6",99,0)
 ..S IVMFNAM=$P($G(^IVM(301.92,+IVMNODE,0)),U) Q:IVMFNAM=""
"RTN","IVMLDEM6",100,0)
 ..; - check if residence phone number and not selected to upload
"RTN","IVMLDEM6",101,0)
 ..I IVMPPICK=1&(IVMFNAM="PHONE NUMBER [RESIDENCE]"!(IVMFNAM["RESIDENCE NUMBER CHANGE")) Q
"RTN","IVMLDEM6",102,0)
 ..; - check if not residence phone number and only phone selected to upload
"RTN","IVMLDEM6",103,0)
 ..I IVMPPICK=2&(IVMFNAM'="PHONE NUMBER [RESIDENCE]"&(IVMFNAM'["RESIDENCE NUMBER CHANGE")) Q
"RTN","IVMLDEM6",104,0)
 ..;
"RTN","IVMLDEM6",105,0)
 ..;Store Address change Date/time, source and site in ^TMP to file at the end of process.
"RTN","IVMLDEM6",106,0)
 ..S IVMAFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),IVMAVAL=$P(IVMNODE,"^",2)
"RTN","IVMLDEM6",107,0)
 ..I ((IVMAFLD=.118)!(IVMAFLD=.119)!(IVMAFLD=.12)) S ^TMP($J,"CHANGE UPDATE",IVMAFLD)=IVMAVAL
"RTN","IVMLDEM6",108,0)
 ..;Store Residence Number change Date/time, source and site in ^TMP to file at the end of process.
"RTN","IVMLDEM6",109,0)
 ..I ((IVMAFLD=.1321)!(IVMAFLD=.1322)!(IVMAFLD=.1323)) S ^TMP($J,"CHANGE UPDATE",IVMAFLD)=IVMAVAL
"RTN","IVMLDEM6",110,0)
 ..; - perform any necessary address field manipulation and
"RTN","IVMLDEM6",111,0)
 ..;   load addr field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEM6",112,0)
 ..D UPLOAD(+DFN,$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),$P(IVMNODE,"^",2)) S IVMFLAG=1
"RTN","IVMLDEM6",113,0)
 ..;
"RTN","IVMLDEM6",114,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEM6",115,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEM6",116,0)
 ;
"RTN","IVMLDEM6",117,0)
 D ADDRCHNG^IVMPREC6(DFN) ;Update Address change date/time,source,site if necessary
"RTN","IVMLDEM6",118,0)
 I IVMFLAG W "completed.",! D
"RTN","IVMLDEM6",119,0)
 .N DGCURR
"RTN","IVMLDEM6",120,0)
 .D GETUPDTS^DGADDUTL(DFN,.DGCURR)
"RTN","IVMLDEM6",121,0)
 .D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGCURR)
"RTN","IVMLDEM6",122,0)
 ;
"RTN","IVMLDEM6",123,0)
 ; - if addr is uploaded and phone # is not - ask user delete phone
"RTN","IVMLDEM6",124,0)
 ;I IVMFLAG,$P($G(^DPT(+DFN,.13)),"^")]"",(2>IVMPPICK) D PHONE
"RTN","IVMLDEM6",125,0)
 S VALMBCK="R"
"RTN","IVMLDEM6",126,0)
 ;
"RTN","IVMLDEM6",127,0)
 ;
"RTN","IVMLDEM6",128,0)
ADDRQ ; - return  -->  1 if uploadable field is an address field
"RTN","IVMLDEM6",129,0)
 ;           -->  0 if uploadable field is not an address field
"RTN","IVMLDEM6",130,0)
 ;
"RTN","IVMLDEM6",131,0)
 I IVMFLAG D RESET^IVMLDEMU
"RTN","IVMLDEM6",132,0)
 Q IVMFLAG
"RTN","IVMLDEM6",133,0)
 ;
"RTN","IVMLDEM6",134,0)
 ;
"RTN","IVMLDEM6",135,0)
UPLOAD(DFN,IVMFIELD,IVMVALUE) ; - file address fields received from IVM
"RTN","IVMLDEM6",136,0)
 ;
"RTN","IVMLDEM6",137,0)
 ;  Input:       DFN  -  as patient IEN
"RTN","IVMLDEM6",138,0)
 ;          IVMFIELD  -  as the field number to be updated
"RTN","IVMLDEM6",139,0)
 ;          IVMVALUE  -  as the value of the field
"RTN","IVMLDEM6",140,0)
 ;
"RTN","IVMLDEM6",141,0)
 ; Output: None
"RTN","IVMLDEM6",142,0)
 ;
"RTN","IVMLDEM6",143,0)
 ;
"RTN","IVMLDEM6",144,0)
 ; - update specified address field in the Patient (#2) file
"RTN","IVMLDEM6",145,0)
 N DIE,DA,DR,IENS,FDA,IVMZCT
"RTN","IVMLDEM6",146,0)
 ; KUM - IVM*2.0*164 
"RTN","IVMLDEM6",147,0)
 ; To bypass DELETE TEST node test in DD for TEMP ADDRESS LINE2 AND TEMP ADDRESS LINE3
"RTN","IVMLDEM6",148,0)
 ; In Some production accounts, DELETE TEST node is set for .1212 and .1213
"RTN","IVMLDEM6",149,0)
 I ((IVMFIELD=.1212)!(IVMFIELD=.1213)),(IVMVALUE="@") D  Q
"RTN","IVMLDEM6",150,0)
 .S IENS=DFN_","
"RTN","IVMLDEM6",151,0)
 .S FDA(2,IENS,IVMFIELD)="@"
"RTN","IVMLDEM6",152,0)
 .D FILE^DIE("","FDA")
"RTN","IVMLDEM6",153,0)
 ; IVM*2.0*164 - Allow updating null values in Confidential start and end dates
"RTN","IVMLDEM6",154,0)
 I ((IVMFIELD=.1417)!(IVMFIELD=.1418)) D
"RTN","IVMLDEM6",155,0)
 .S IENS=DFN_","
"RTN","IVMLDEM6",156,0)
 .S FDA(2,IENS,IVMCAFG)="Y"
"RTN","IVMLDEM6",157,0)
 .D FILE^DIE("","FDA")
"RTN","IVMLDEM6",158,0)
 I ((IVMFIELD=.1417)!(IVMFIELD=.1418)),(IVMVALUE="@") D  Q
"RTN","IVMLDEM6",159,0)
 .S IENS=DFN_","
"RTN","IVMLDEM6",160,0)
 .S FDA(2,IENS,IVMFIELD)="@"
"RTN","IVMLDEM6",161,0)
 .D FILE^DIE("","FDA")
"RTN","IVMLDEM6",162,0)
 I IVMFIELD=.14112 D  Q
"RTN","IVMLDEM6",163,0)
 .S IENS=DFN_","
"RTN","IVMLDEM6",164,0)
 .S FDA(2,IENS,IVMCAFG)=IVMCAVL
"RTN","IVMLDEM6",165,0)
 .D FILE^DIE("","FDA")
"RTN","IVMLDEM6",166,0)
 .S IENS=DFN_","
"RTN","IVMLDEM6",167,0)
 .S FDA(2,IENS,IVMFIELD)=IVMVALUE
"RTN","IVMLDEM6",168,0)
 .D FILE^DIE("","FDA")
"RTN","IVMLDEM6",169,0)
 .;
"RTN","IVMLDEM6",170,0)
 .;KUM - Use API to delete if field from ZCT and double quotes are sent.  Double quotes are converted to @
"RTN","IVMLDEM6",171,0)
 .;IVM*2.0*188
"RTN","IVMLDEM6",172,0)
 .S IVMZCT="N"
"RTN","IVMLDEM6",173,0)
 .;NAME Fields
"RTN","IVMLDEM6",174,0)
 .I ((IVMFIELD=.211)!(IVMFIELD=.2191)!(IVMFIELD=.331)!(IVMFIELD=.3311)!(IVMFIELD=.341)) S IVMZCT="Y"
"RTN","IVMLDEM6",175,0)
 .;RELATIONSHIP TO PATIENT Fields
"RTN","IVMLDEM6",176,0)
 .I ((IVMFIELD=.212)!(IVMFIELD=.2192)!(IVMFIELD=.332)!(IVMFIELD=.3312)!(IVMFIELD=.342)) S IVMZCT="Y"
"RTN","IVMLDEM6",177,0)
 .;STREET ADDRESS LINE1 Fields
"RTN","IVMLDEM6",178,0)
 .I ((IVMFIELD=.213)!(IVMFIELD=.2193)!(IVMFIELD=.333)!(IVMFIELD=.3313)!(IVMFIELD=.343)) S IVMZCT="Y"
"RTN","IVMLDEM6",179,0)
 .;STREET ADDRESS LINE2 Fields
"RTN","IVMLDEM6",180,0)
 .I ((IVMFIELD=.214)!(IVMFIELD=.2194)!(IVMFIELD=.334)!(IVMFIELD=.3314)!(IVMFIELD=.344)) S IVMZCT="Y"
"RTN","IVMLDEM6",181,0)
 .;STREET ADDRESS LINE3 Fields
"RTN","IVMLDEM6",182,0)
 .I ((IVMFIELD=.215)!(IVMFIELD=.2195)!(IVMFIELD=.335)!(IVMFIELD=.3315)!(IVMFIELD=.345)) S IVMZCT="Y"
"RTN","IVMLDEM6",183,0)
 .;CITY Fields
"RTN","IVMLDEM6",184,0)
 .I ((IVMFIELD=.216)!(IVMFIELD=.2196)!(IVMFIELD=.336)!(IVMFIELD=.3316)!(IVMFIELD=.346)) S IVMZCT="Y"
"RTN","IVMLDEM6",185,0)
 .;STATE Fields
"RTN","IVMLDEM6",186,0)
 .I ((IVMFIELD=.217)!(IVMFIELD=.2197)!(IVMFIELD=.337)!(IVMFIELD=.3317)!(IVMFIELD=.347)) S IVMZCT="Y"
"RTN","IVMLDEM6",187,0)
 .;ZIPCODE Fields
"RTN","IVMLDEM6",188,0)
 .I ((IVMFIELD=.218)!(IVMFIELD=.2198)!(IVMFIELD=.338)!(IVMFIELD=.3318)!(IVMFIELD=.348)) S IVMZCT="Y"
"RTN","IVMLDEM6",189,0)
 .;ZIP+4 Fields
"RTN","IVMLDEM6",190,0)
 .I ((IVMFIELD=.2201)!(IVMFIELD=.2203)!(IVMFIELD=.2207)!(IVMFIELD=.2204)!(IVMFIELD=.2202)) S IVMZCT="Y"
"RTN","IVMLDEM6",191,0)
 .;PHONE NUMBER Fields
"RTN","IVMLDEM6",192,0)
 .I ((IVMFIELD=.219)!(IVMFIELD=.2199)!(IVMFIELD=.339)!(IVMFIELD=.3319)!(IVMFIELD=.349)) S IVMZCT="Y"
"RTN","IVMLDEM6",193,0)
 .;WORK PHONE NUMBER Fields
"RTN","IVMLDEM6",194,0)
 .I ((IVMFIELD=.21011)!(IVMFIELD=.211011)!(IVMFIELD=.33011)!(IVMFIELD=.331011)!(IVMFIELD=.34011)) S IVMZCT="Y"
"RTN","IVMLDEM6",195,0)
 .;ADDRESS SAME AS PATIENT Fields
"RTN","IVMLDEM6",196,0)
 .I ((IVMFIELD=.2125)!(IVMFIELD=.21925)) S IVMZCT="Y"
"RTN","IVMLDEM6",197,0)
 .;CONTACT TYPE SAME AS NOK Fields
"RTN","IVMLDEM6",198,0)
 .I ((IVMFIELD=.3305)!(IVMFIELD=.3405)) S IVMZCT="Y"
"RTN","IVMLDEM6",199,0)
 .I (IVMVALUE="@"),(IVMZCT="Y") D
"RTN","IVMLDEM6",200,0)
 ..S IENS=DFN_","
"RTN","IVMLDEM6",201,0)
 ..S FDA(2,IENS,IVMFIELD)="@"
"RTN","IVMLDEM6",202,0)
 ..D FILE^DIE("","FDA")
"RTN","IVMLDEM6",203,0)
 ;KUM - END
"RTN","IVMLDEM6",204,0)
 S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMLDEM6",205,0)
 D ^DIE K DA,DIE,DR
"RTN","IVMLDEM6",206,0)
 ;
"RTN","IVMLDEM6",207,0)
 ; - delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMLDEM6",208,0)
 ;   (trigger x-ref does not fire with 4 slash stuff)
"RTN","IVMLDEM6",209,0)
 I IVMFIELD=.119,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.12)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMLDEM6",210,0)
 ; KUM - IVM*2.0*164 
"RTN","IVMLDEM6",211,0)
 ; If Source is not VAMC, delete the Site
"RTN","IVMLDEM6",212,0)
 I IVMFIELD=.11582,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.11581)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMLDEM6",213,0)
 Q
"RTN","IVMLDEM6",214,0)
 ;
"RTN","IVMLDEM6",215,0)
 ;
"RTN","IVMLDEM6",216,0)
PHONE ; - ask user to delete phone # [Residence] from Patient (#2) file
"RTN","IVMLDEM6",217,0)
 D PHONE^IVMPREC9 ;Moved this tag to IVMPREC9 due to routine size limit.
"RTN","IVMLDEM6",218,0)
 Q
"RTN","IVMLDEM6",219,0)
 ;
"RTN","IVMLDEM6",220,0)
AUTOADDR(DFN,IVMPPICK,NOUPDT,NOPHUP) ;
"RTN","IVMLDEM6",221,0)
 ; this functionality is copied from above and modified to allow
"RTN","IVMLDEM6",222,0)
 ; an automated upload of patient address information as stipulated
"RTN","IVMLDEM6",223,0)
 ; in the business requirements for Address Indexing to support GMT
"RTN","IVMLDEM6",224,0)
 ;
"RTN","IVMLDEM6",225,0)
 ;  Input:      DFN  -  as patient IEN
"RTN","IVMLDEM6",226,0)
 ;         IVMPPICK  -  residence phone number and/or another address
"RTN","IVMLDEM6",227,0)
 ;                        field selected
"RTN","IVMLDEM6",228,0)
 ;                      1 - address field(s) selected
"RTN","IVMLDEM6",229,0)
 ;                      3 - both address field(s) and phone selected
"RTN","IVMLDEM6",230,0)
 ;           NOUPDT  -  (optional) this flag is set when the incoming
"RTN","IVMLDEM6",231,0)
 ;                      address data is older than the existing
"RTN","IVMLDEM6",232,0)
 ;                      address in the Patient (#2) file
"RTN","IVMLDEM6",233,0)
 ;           NOPHUP  -  (optional) this flag is set when the incoming
"RTN","IVMLDEM6",234,0)
 ;                      home phone number is older than the existing
"RTN","IVMLDEM6",235,0)
 ;                      home phone number in the Patient (#2) file
"RTN","IVMLDEM6",236,0)
 ; Output: IVMFLAG   -  1 if address fields updated
"RTN","IVMLDEM6",237,0)
 ;                      0 if address fields not updated
"RTN","IVMLDEM6",238,0)
 ;
"RTN","IVMLDEM6",239,0)
 ;
"RTN","IVMLDEM6",240,0)
 ;
"RTN","IVMLDEM6",241,0)
 N IVMFLAG,IVMI,IVMJ,IVMNODE,IVMPTR,Y,IVMAFLD,IVMAVAL,DELFLG
"RTN","IVMLDEM6",242,0)
 ;
"RTN","IVMLDEM6",243,0)
 ; - initialize flags
"RTN","IVMLDEM6",244,0)
 S IVMFLAG=0,DELFLG=1
"RTN","IVMLDEM6",245,0)
 S:'$G(NOUPDT) NOUPDT=0
"RTN","IVMLDEM6",246,0)
 S:'$G(NOPHUP) NOPHUP=0   ;Added for IVM*2*152
"RTN","IVMLDEM6",247,0)
 ;
"RTN","IVMLDEM6",248,0)
 ; - check for required parameters
"RTN","IVMLDEM6",249,0)
 Q:'$G(DFN) IVMFLAG
"RTN","IVMLDEM6",250,0)
 ;
"RTN","IVMLDEM6",251,0)
 N DGPRIOR D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","IVMLDEM6",252,0)
 ; Set the flag to don't auto-update if there is an active Prescription record and the Bad Address Indicator is null
"RTN","IVMLDEM6",253,0)
 ; IVM*2.0*177; jam; - Auto upload even if patient has active prescription and bad address indicator is null
"RTN","IVMLDEM6",254,0)
 ;I ('NOUPDT),$$PHARM(+DFN),'$$BADADR^DGUTL3(+DFN) S DELFLG=0
"RTN","IVMLDEM6",255,0)
 I 'NOUPDT,DELFLG D EN^DGCLEAR(DFN,"PERM") ;Deleting existing address before updating
"RTN","IVMLDEM6",256,0)
 ;
"RTN","IVMLDEM6",257,0)
 S IVMDA2=$G(IVM3015)
"RTN","IVMLDEM6",258,0)
 Q:'$G(IVMDA2) IVMFLAG
"RTN","IVMLDEM6",259,0)
 S IVMDA1=$O(^HL(771.3,"B","PID",""))
"RTN","IVMLDEM6",260,0)
 S IVMDA1=$O(^IVM(301.5,IVMDA2,"IN","B",IVMDA1,""),-1)
"RTN","IVMLDEM6",261,0)
 Q:'IVMDA1 IVMFLAG
"RTN","IVMLDEM6",262,0)
 ;
"RTN","IVMLDEM6",263,0)
 S IVMI=0 F  S IVMI=$O(^IVM(301.92,"AD",IVMI)) Q:IVMI']""  D
"RTN","IVMLDEM6",264,0)
 .S IVMJ=0 F  S IVMJ=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IVMI,IVMJ)) Q:IVMJ']""  D
"RTN","IVMLDEM6",265,0)
 ..;
"RTN","IVMLDEM6",266,0)
 ..; - check for data node in (#301.511) sub-file
"RTN","IVMLDEM6",267,0)
 ..S IVMNODE=$G(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM",IVMJ,0))
"RTN","IVMLDEM6",268,0)
 ..I ('+IVMNODE)!($P(IVMNODE,"^",2)']"") Q
"RTN","IVMLDEM6",269,0)
 ..;
"RTN","IVMLDEM6",270,0)
 ..; - check if residence phone number -> do not auto-upload
"RTN","IVMLDEM6",271,0)
 ..;   If NOPHUP=1 delete entry from #301.511 sub-file, otherwise quit
"RTN","IVMLDEM6",272,0)
 ..;   (IVM*2*152)
"RTN","IVMLDEM6",273,0)
 ..I $P($G(^IVM(301.92,+IVMNODE,0)),U)="PHONE NUMBER [RESIDENCE]"!($P($G(^IVM(301.92,+IVMNODE,0)),U)["RESIDENCE NUMBER CHANGE") D  Q
"RTN","IVMLDEM6",274,0)
 ...I NOPHUP D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEM6",275,0)
 ..;
"RTN","IVMLDEM6",276,0)
 ..; don't auto-update if there is an active Prescription record and
"RTN","IVMLDEM6",277,0)
 ..; the Bad Address Indicator is null
"RTN","IVMLDEM6",278,0)
 ..I 'DELFLG D DEMBULL^IVMPREC6 Q
"RTN","IVMLDEM6",279,0)
 ..;Store Address change Date/time, source and site in ^TMP to file at the end of process.
"RTN","IVMLDEM6",280,0)
 ..S IVMAFLD=$P($G(^IVM(301.92,+IVMNODE,0)),"^",5),IVMAVAL=$P(IVMNODE,"^",2)
"RTN","IVMLDEM6",281,0)
 ..I 'NOUPDT,((IVMAFLD=.118)!(IVMAFLD=.119)!(IVMAFLD=.12)) S ^TMP($J,"CHANGE UPDATE",IVMAFLD)=IVMAVAL
"RTN","IVMLDEM6",282,0)
 ..;
"RTN","IVMLDEM6",283,0)
 ..; - load addr field rec'd from IVM into DHCP (#2) file
"RTN","IVMLDEM6",284,0)
 ..I 'NOUPDT D UPLOAD(+DFN,IVMAFLD,IVMAVAL) S IVMFLAG=1
"RTN","IVMLDEM6",285,0)
 ..;
"RTN","IVMLDEM6",286,0)
 ..; - remove entry from (#301.511) sub-file
"RTN","IVMLDEM6",287,0)
 ..D DELENT^IVMLDEMU(IVMDA2,IVMDA1,IVMJ)
"RTN","IVMLDEM6",288,0)
 ..; - if no display or uploadable fields left, then delete the PID
"RTN","IVMLDEM6",289,0)
 ..;   segment
"RTN","IVMLDEM6",290,0)
 ..I '$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,0),'$$DEMO^IVMLDEM5(IVMDA2,IVMDA1,1) D
"RTN","IVMLDEM6",291,0)
 ...D DELETE^IVMLDEM5(IVMDA2,IVMDA1," ") ; Dummy up name parameter
"RTN","IVMLDEM6",292,0)
 D ADDRCHNG^IVMPREC6(DFN) ;Update Address change date/time,source,site if necessary
"RTN","IVMLDEM6",293,0)
 I IVMFLAG D
"RTN","IVMLDEM6",294,0)
 .N DGCURR
"RTN","IVMLDEM6",295,0)
 .D GETUPDTS^DGADDUTL(DFN,.DGCURR)
"RTN","IVMLDEM6",296,0)
 .D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGCURR)
"RTN","IVMLDEM6",297,0)
 Q IVMFLAG
"RTN","IVMLDEM6",298,0)
 ;
"RTN","IVMLDEM6",299,0)
ADDRDT(DFN,IVMDA2,IVMDA1) ;
"RTN","IVMLDEM6",300,0)
 ; - validate Address Change Dt/Tm before filing
"RTN","IVMLDEM6",301,0)
 ;   if incoming address is accepted and the change date is older
"RTN","IVMLDEM6",302,0)
 ;   than what's on file, then use today's date for Addr Chg Dt/Tm
"RTN","IVMLDEM6",303,0)
 ;
"RTN","IVMLDEM6",304,0)
 Q:'$$ADRDTCK^IVMLDEM9(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",305,0)
 N FDA,IEN92,IVMDA,IENS,ERR
"RTN","IVMLDEM6",306,0)
 S IEN92=$O(^IVM(301.92,"C","RF171","")) Q:'IEN92
"RTN","IVMLDEM6",307,0)
 Q:'$D(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92))
"RTN","IVMLDEM6",308,0)
 S IVMDA=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92,"")) Q:'IVMDA
"RTN","IVMLDEM6",309,0)
 S IENS=IVMDA_","_IVMDA1_","_IVMDA2_","
"RTN","IVMLDEM6",310,0)
 S FDA(301.511,IENS,.02)=$$NOW^XLFDT
"RTN","IVMLDEM6",311,0)
 D FILE^DIE("","FDA","ERR")
"RTN","IVMLDEM6",312,0)
 Q
"RTN","IVMLDEM6",313,0)
 ;
"RTN","IVMLDEM6",314,0)
PHONDT(DFN,IVMDA2,IVMDA1) ;
"RTN","IVMLDEM6",315,0)
 ; - validate Residence Number Change Dt/Tm before filing
"RTN","IVMLDEM6",316,0)
 ;   if incoming phone number is accepted and the change date is
"RTN","IVMLDEM6",317,0)
 ;   older than what's on file, then use today's date for
"RTN","IVMLDEM6",318,0)
 ;   Residence Number Change Dt/Tm (IVM*2*152)
"RTN","IVMLDEM6",319,0)
 ;
"RTN","IVMLDEM6",320,0)
 Q:'$$PHNDTCK^IVMLDEM9(DFN,IVMDA2,IVMDA1)
"RTN","IVMLDEM6",321,0)
 N FDA,IEN92,IVMDA,IENS,ERR
"RTN","IVMLDEM6",322,0)
 S IEN92=$O(^IVM(301.92,"C","RF171P","")) Q:'IEN92
"RTN","IVMLDEM6",323,0)
 Q:'$D(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92))
"RTN","IVMLDEM6",324,0)
 S IVMDA=$O(^IVM(301.5,IVMDA2,"IN",IVMDA1,"DEM","B",IEN92,"")) Q:'IVMDA
"RTN","IVMLDEM6",325,0)
 S IENS=IVMDA_","_IVMDA1_","_IVMDA2_","
"RTN","IVMLDEM6",326,0)
 S FDA(301.511,IENS,.02)=$$NOW^XLFDT
"RTN","IVMLDEM6",327,0)
 D FILE^DIE("","FDA","ERR")
"RTN","IVMLDEM6",328,0)
 Q
"RTN","IVMLDEM6",329,0)
 ;
"RTN","IVMLDEM6",330,0)
PHARM(DFN) ;does this patient have active pharmacy prescriptions?
"RTN","IVMLDEM6",331,0)
 ;
"RTN","IVMLDEM6",332,0)
 ;External reference to $$EN^PSSRXACT supported by IA #4237
"RTN","IVMLDEM6",333,0)
 ;
"RTN","IVMLDEM6",334,0)
 Q $S('$G(DFN):0,1:$$EN^PSSRXACT(DFN))
"RTN","IVMPREC6")
0^1^B199209927
"RTN","IVMPREC6",1,0)
IVMPREC6 ;ALB/KCL,BRM,CKN,TDM,PWC,LBD,KUM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES ;09-02-2019 8:06AM
"RTN","IVMPREC6",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**3,4,12,17,34,58,79,102,115,140,144,121,151,152,165,167,171,164,188**;21-OCT-94;Build 12
"RTN","IVMPREC6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IVMPREC6",4,0)
 ;
"RTN","IVMPREC6",5,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC6",6,0)
 ; messages received from the IVM center.  Format of HL7 batch message:
"RTN","IVMPREC6",7,0)
 ;
"RTN","IVMPREC6",8,0)
 ;       BHS
"RTN","IVMPREC6",9,0)
 ;       {MSH
"RTN","IVMPREC6",10,0)
 ;        PID
"RTN","IVMPREC6",11,0)
 ;        ZPD
"RTN","IVMPREC6",12,0)
 ;        ZTA
"RTN","IVMPREC6",13,0)
 ;        ZAV
"RTN","IVMPREC6",14,0)
 ;        ZGD
"RTN","IVMPREC6",15,0)
 ;        ZCT (1 episode required, multiple possible)
"RTN","IVMPREC6",16,0)
 ;        ZEM (Veteran)
"RTN","IVMPREC6",17,0)
 ;        ZEM (Spouse - Optional)
"RTN","IVMPREC6",18,0)
 ;        RF1 (optional, multiple possible)
"RTN","IVMPREC6",19,0)
 ;       }
"RTN","IVMPREC6",20,0)
 ;       BTS
"RTN","IVMPREC6",21,0)
 ;
"RTN","IVMPREC6",22,0)
 ;
"RTN","IVMPREC6",23,0)
EN ; - entry point to process HL7 patient demographic message 
"RTN","IVMPREC6",24,0)
 ;
"RTN","IVMPREC6",25,0)
 N DGENUPLD,VAFCA08,DGRUGA08,COMP,DODSEG,GUARSEG,IVMCSDT,IVMCEDT,IVMCAFG,IVMCAVL,IVMPMAST,IVMCMAST
"RTN","IVMPREC6",26,0)
 ;N MULTDONE,XREP
"RTN","IVMPREC6",27,0)
 N XIVMA,IVMALADT,MULTIDONE
"RTN","IVMPREC6",28,0)
 N IVMPHDFG S IVMPHDFG=0 ; IVM*2*171 - add new variable IVMPHDFG to check for PHH deletion
"RTN","IVMPREC6",29,0)
 S IVMPMAST=""
"RTN","IVMPREC6",30,0)
 ;
"RTN","IVMPREC6",31,0)
 ; Setup array to hold all the Allowed Address Types
"RTN","IVMPREC6",32,0)
 ;F XIVMA="N","P","VAB1","VAB2","VAB3","VAB4" S IVMALADT(XIVMA)=""
"RTN","IVMPREC6",33,0)
 ; IVM*2.0*164 - Allow Residential and Confidential Addresses
"RTN","IVMPREC6",34,0)
 F XIVMA="P","R","CA","VAB1","VAB2","VAB3","VAB4" S IVMALADT(XIVMA)=""
"RTN","IVMPREC6",35,0)
 ; Define the Confidential Address Categories
"RTN","IVMPREC6",36,0)
 ; IVM*2.0*164 - Uncomment below five lines to enable all confidential address categories
"RTN","IVMPREC6",37,0)
 S IVMALADT("VACAE")="CA^1"      ; ELIGIBILITY/ENROLLMENT
"RTN","IVMPREC6",38,0)
 S IVMALADT("VACAA")="CA^2"      ; APPOINTMENT/SCHEDULING
"RTN","IVMPREC6",39,0)
 S IVMALADT("VACAC")="CA^3"      ; COPAYMENTS/VETERAN BILLING
"RTN","IVMPREC6",40,0)
 S IVMALADT("VACAM")="CA^4"      ; MEDICAL RECORDS
"RTN","IVMPREC6",41,0)
 S IVMALADT("VACAO")="CA^5"      ; ALL OTHERS
"RTN","IVMPREC6",42,0)
 ; prevent a return Z07 when uploading a Z05 (Patient file triggers)
"RTN","IVMPREC6",43,0)
 S DGENUPLD="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS"
"RTN","IVMPREC6",44,0)
 ;
"RTN","IVMPREC6",45,0)
 ; prevent MPI A08 message when uploading Z05 (Patient file triggers)
"RTN","IVMPREC6",46,0)
 S VAFCA08=1  ;MPI/CIRN A08 suppression flag
"RTN","IVMPREC6",47,0)
 ;
"RTN","IVMPREC6",48,0)
 S IVMFLG=0,IVMADFLG=0
"RTN","IVMPREC6",49,0)
 ; - get incoming HL7 message from HL7 Transmission (#772) file
"RTN","IVMPREC6",50,0)
 F IVMDA=0:0 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D
"RTN","IVMPREC6",51,0)
 .K HLERR,ZEMADRUP
"RTN","IVMPREC6",52,0)
 .S IVMTSTPT=""                          ;Initialize Temp Addr County
"RTN","IVMPREC6",53,0)
 .;
"RTN","IVMPREC6",54,0)
 .; - message control id from MSH segment
"RTN","IVMPREC6",55,0)
 .S MSGID=$P(IVMSEG,HLFS,10),HLMID=MSGID
"RTN","IVMPREC6",56,0)
 .;
"RTN","IVMPREC6",57,0)
 .; - perform demographics message consistency check
"RTN","IVMPREC6",58,0)
 .D EN^IVMPRECA Q:$D(HLERR)
"RTN","IVMPREC6",59,0)
 .;
"RTN","IVMPREC6",60,0)
 .;Set array of Email, Cell, Pager fields
"RTN","IVMPREC6",61,0)
 .D EPCFLDS(.EPCFARY,.EPCDEL)
"RTN","IVMPREC6",62,0)
 .D AUPBLD(.AUPFARY,.UPDAUPG)
"RTN","IVMPREC6",63,0)
 .; - get next msg segment
"RTN","IVMPREC6",64,0)
 .D NEXT I $E(IVMSEG,1,3)'="PID" D  Q
"RTN","IVMPREC6",65,0)
 ..S HLERR="Missing PID segment" D ACK^IVMPREC
"RTN","IVMPREC6",66,0)
 .;
"RTN","IVMPREC6",67,0)
 .F I=1:1 D NEXT Q:$E(IVMSEG,1,4)="ZPD^"  ;Go through all PID
"RTN","IVMPREC6",68,0)
 .; - patient IEN (DFN) from PID segment
"RTN","IVMPREC6",69,0)
 .;Use IVMPID array created in IVMPRECA while performing consistency
"RTN","IVMPREC6",70,0)
 .;to process PID segment
"RTN","IVMPREC6",71,0)
 .;
"RTN","IVMPREC6",72,0)
 .;I '$G(IVMDFN) S HLERR="Invalid DFN" D ACK^IVMPREC  Q
"RTN","IVMPREC6",73,0)
 .S DFN=$G(IVMDFN)
"RTN","IVMPREC6",74,0)
 .;I ('DFN!(DFN'=+DFN)!('$D(^DPT(+DFN,0)))) D  Q
"RTN","IVMPREC6",75,0)
 .;.S HLERR="Invalid DFN" D ACK^IVMPREC
"RTN","IVMPREC6",76,0)
 .;I IVMPID(19)'=$P(^DPT(DFN,0),"^",9) D  Q
"RTN","IVMPREC6",77,0)
 .;.S HLERR="Couldn't match HEC SSN with DHCP SSN" D ACK^IVMPREC
"RTN","IVMPREC6",78,0)
 .;
"RTN","IVMPREC6",79,0)
 .; - check for entry in IVM PATIENT file, otherwise create stub entry
"RTN","IVMPREC6",80,0)
 .S IVM3015=$O(^IVM(301.5,"B",DFN,0))
"RTN","IVMPREC6",81,0)
 .I 'IVM3015 S DGENUPLD="",IVM3015=$$LOG^IVMPLOG(DFN,DT),DGENUPLD="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS" ;IVM*2.0*165
"RTN","IVMPREC6",82,0)
 .I 'IVM3015 D  Q
"RTN","IVMPREC6",83,0)
 ..S HLERR="Failed to create entry in IVM PATIENT file"
"RTN","IVMPREC6",84,0)
 ..D ACK^IVMPREC
"RTN","IVMPREC6",85,0)
 .;
"RTN","IVMPREC6",86,0)
 .; - compare PID segment fields with DHCP fields
"RTN","IVMPREC6",87,0)
 .S IVMSEG="PID"  ;Setting IVMSEG to PID before it calls COMPARE
"RTN","IVMPREC6",88,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG) Q:$D(HLERR)
"RTN","IVMPREC6",89,0)
 .;
"RTN","IVMPREC6",90,0)
 .; - get next msg segment -decrement the counter so it can pickup ZPD
"RTN","IVMPREC6",91,0)
 .S IVMDA=IVMDA-1 D NEXT I $E(IVMSEG,1,3)'="ZPD" D  Q
"RTN","IVMPREC6",92,0)
 ..S HLERR="Missing ZPD segment" D ACK^IVMPREC
"RTN","IVMPREC6",93,0)
 .;Convert "" to null in ZPD segment except seq. 8,9, 31 and 32
"RTN","IVMPREC6",94,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",9,10,32,33,")
"RTN","IVMPREC6",95,0)
 .;
"RTN","IVMPREC6",96,0)
 .; - compare ZPD segment fields with DHCP fields
"RTN","IVMPREC6",97,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",98,0)
 .;
"RTN","IVMPREC6",99,0)
 .; - get next msg segment
"RTN","IVMPREC6",100,0)
 .D NEXT I $E(IVMSEG,1,3)="ZEL" D  Q
"RTN","IVMPREC6",101,0)
 ..S HLERR="ZEL segment should not be sent in Z05 message" D ACK^IVMPREC
"RTN","IVMPREC6",102,0)
 .;
"RTN","IVMPREC6",103,0)
 .I $E(IVMSEG,1,3)'="ZTA" D  Q
"RTN","IVMPREC6",104,0)
 ..S HLERR="Missing ZTA segment" D ACK^IVMPREC
"RTN","IVMPREC6",105,0)
 .;Convert "" to null in ZTA segment seq. 7
"RTN","IVMPREC6",106,0)
 .I $P(IVMSEG,HLFS,8)=HLQ S $P(IVMSEG,HLFS,8)=""
"RTN","IVMPREC6",107,0)
 .;
"RTN","IVMPREC6",108,0)
 .; - compare ZTA segment fields with DHCP fields
"RTN","IVMPREC6",109,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",110,0)
 .;
"RTN","IVMPREC6",111,0)
 .; - get next msg segment
"RTN","IVMPREC6",112,0)
 .; KUM - ZAV Segment Processing (CASS field) 
"RTN","IVMPREC6",113,0)
 .D NEXT
"RTN","IVMPREC6",114,0)
 .I $E(IVMSEG,1,3)'="ZAV" D  Q
"RTN","IVMPREC6",115,0)
 ..S HLERR="Missing ZAV segment" D ACK^IVMPREC
"RTN","IVMPREC6",116,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",117,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG) ;Process 1st ZAV
"RTN","IVMPREC6",118,0)
 .S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Handle possible mult ZAVs
"RTN","IVMPREC6",119,0)
 ..D NEXT I $E(IVMSEG,1,3)'="ZAV" S MULTDONE=1 Q
"RTN","IVMPREC6",120,0)
 ..S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",121,0)
 ..I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",122,0)
 .;D NEXT
"RTN","IVMPREC6",123,0)
 .;
"RTN","IVMPREC6",124,0)
 .; - get next msg segment
"RTN","IVMPREC6",125,0)
 .I $E(IVMSEG,1,3)'="ZGD" D  Q
"RTN","IVMPREC6",126,0)
 ..S HLERR="Missing ZGD segment" D ACK^IVMPREC
"RTN","IVMPREC6",127,0)
 .;
"RTN","IVMPREC6",128,0)
 .; - compare ZGD segment fields with DHCP fields
"RTN","IVMPREC6",129,0)
 .; convert "" to null for ZGD segment
"RTN","IVMPREC6",130,0)
 .S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",7,") ;ignore seq. 6
"RTN","IVMPREC6",131,0)
 .; convert seq. 6 separately
"RTN","IVMPREC6",132,0)
 .S $P(IVMSEG,HLFS,7)=$$CLEARF^IVMPRECA($P(IVMSEG,HLFS,7),$E(HLECH))
"RTN","IVMPREC6",133,0)
 .D COMPARE(IVMSEG)
"RTN","IVMPREC6",134,0)
 .;S IVMFLG=0
"RTN","IVMPREC6",135,0)
 .;
"RTN","IVMPREC6",136,0)
 .;S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Skip ZCT & ZEM -coming later
"RTN","IVMPREC6",137,0)
 .;.D NEXT
"RTN","IVMPREC6",138,0)
 .;.I ($E(IVMSEG,1,3)'="ZCT")&($E(IVMSEG,1,3)'="ZEM") S MULTDONE=1 Q
"RTN","IVMPREC6",139,0)
 .;S IVMDA=IVMDA-1
"RTN","IVMPREC6",140,0)
 .;
"RTN","IVMPREC6",141,0)
 .; - get next msg segment
"RTN","IVMPREC6",142,0)
 .D NEXT
"RTN","IVMPREC6",143,0)
 .I $E(IVMSEG,1,3)'="ZCT" D  Q
"RTN","IVMPREC6",144,0)
 ..S HLERR="Missing ZCT segment" D ACK^IVMPREC
"RTN","IVMPREC6",145,0)
 .;KUM - Donot convert "" to null in ZCT segment 
"RTN","IVMPREC6",146,0)
 .;IVM*2.0*188 - Comment below line.  Allow double quotes to stay in ZCT segment, otherwise double quotes will be replaced with null
"RTN","IVMPREC6",147,0)
 .;S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",148,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)   ;Process 1st ZCT
"RTN","IVMPREC6",149,0)
 .S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Handle possible mult ZCTs
"RTN","IVMPREC6",150,0)
 ..D NEXT I $E(IVMSEG,1,3)'="ZCT" S MULTDONE=1 Q
"RTN","IVMPREC6",151,0)
 ..;KUM - Donot convert "" to null in ZCT segment 
"RTN","IVMPREC6",152,0)
 ..;IVM*2.0*188 - Comment below line.  Allow double quotes to stay in ZCT segment, otherwise double quotes will be replaced with null
"RTN","IVMPREC6",153,0)
 ..;S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC6",154,0)
 ..I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",155,0)
 .;
"RTN","IVMPREC6",156,0)
 .S IVMDA=IVMDA-1 D NEXT
"RTN","IVMPREC6",157,0)
 .I $E(IVMSEG,1,3)'="ZEM" D  Q
"RTN","IVMPREC6",158,0)
 ..S HLERR="Missing ZEM segment" D ACK^IVMPREC
"RTN","IVMPREC6",159,0)
 .I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)   ;Process 1st ZEM
"RTN","IVMPREC6",160,0)
 .S MULTDONE=0 F XREP=1:1 D  Q:MULTDONE  ;Handle possible mult ZEMs
"RTN","IVMPREC6",161,0)
 ..D NEXT I $E(IVMSEG,1,3)'="ZEM" S MULTDONE=1 Q
"RTN","IVMPREC6",162,0)
 ..I 'DODSEG,'GUARSEG D COMPARE(IVMSEG)
"RTN","IVMPREC6",163,0)
 .S IVMDA=IVMDA-1
"RTN","IVMPREC6",164,0)
 .;
"RTN","IVMPREC6",165,0)
 .; - check for RF1 segment and get segment if it exists
"RTN","IVMPREC6",166,0)
 .;     This process will automatically update patient address data
"RTN","IVMPREC6",167,0)
 .;     in the Patient (#2) file if the incoming address is more
"RTN","IVMPREC6",168,0)
 .;     recent than the existing one.
"RTN","IVMPREC6",169,0)
 .;Modified code to handle multiple RF1 segment - IVM*2*115
"RTN","IVMPREC6",170,0)
 .S (UPDEPC("SAD"),UPDEPC("CPH"),UPDEPC("PNO"),UPDEPC("EAD"),UPDEPC("PHH"))=0
"RTN","IVMPREC6",171,0)
 .S QFLG=0 I $$RF1CHK(IVMRTN,IVMDA) F I=1:1 D  Q:QFLG
"RTN","IVMPREC6",172,0)
 ..D NEXT
"RTN","IVMPREC6",173,0)
 ..S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS,",7,") ;ignore seq. 6
"RTN","IVMPREC6",174,0)
 ..S $P(IVMSEG,HLFS,7)=$$CLEARF^IVMPRECA($P(IVMSEG,HLFS,7),$E(HLECH))
"RTN","IVMPREC6",175,0)
 ..I $P(IVMSEG,HLFS,4)="" S QFLG=1 Q  ;Quit if RF1 is blank
"RTN","IVMPREC6",176,0)
 ..D COMPARE(IVMSEG)
"RTN","IVMPREC6",177,0)
 ..I '$$RF1CHK(IVMRTN,IVMDA) S QFLG=1
"RTN","IVMPREC6",178,0)
 .; KUM - IVM*2.0*164 - Set Confidential Active flag
"RTN","IVMPREC6",179,0)
 .S IVMCSDT="",IVMCEDT="",IVMCAFG=.14105,IVMCAVL="Y"
"RTN","IVMPREC6",180,0)
 .S IVMCSDT=$P($P($G(ADDRESS("CA")),"~",12),"&",1)
"RTN","IVMPREC6",181,0)
 .S IVMCSDT=$$FMDATE^HLFNC(IVMCSDT)
"RTN","IVMPREC6",182,0)
 .S IVMCEDT=$P($P($G(ADDRESS("CA")),"~",12),"&",2)
"RTN","IVMPREC6",183,0)
 .S IVMCEDT=$$FMDATE^HLFNC(IVMCEDT)
"RTN","IVMPREC6",184,0)
 .I IVMCSDT="" D
"RTN","IVMPREC6",185,0)
 ..;I $G(UPDAUPG("CA"))'=1 Q
"RTN","IVMPREC6",186,0)
 ..S IVMCAVL="N"
"RTN","IVMPREC6",187,0)
 .D AUTOAUP^IVMPREC9(DFN,.UPDAUP,.UPDAUPG)
"RTN","IVMPREC6",188,0)
 .S IVMFLG=0
"RTN","IVMPREC6",189,0)
 ; - send mail message if necessary
"RTN","IVMPREC6",190,0)
 ; This bulletin has been disabled.  IVM*2*140
"RTN","IVMPREC6",191,0)
 ;I IVMCNTR D MAIL^IVMUFNC()
"RTN","IVMPREC6",192,0)
 ; Cleanup variables if no msg necessary
"RTN","IVMPREC6",193,0)
 I 'IVMCNTR K IVMTEXT,XMSUB
"RTN","IVMPREC6",194,0)
 ;
"RTN","IVMPREC6",195,0)
ENQ ; - cleanup variables
"RTN","IVMPREC6",196,0)
 K DA,DR,DFN,IVMADDR,IVMADFLG,IVMDA,IVMDHCP,IVMFLAG,IVMFLD,IVMPHDFG,IVMPIECE,IVMSEG,IVMSTART,IVMXREF,DGENUPLD,IVMPID,PIDSTR,ADDRESS,TELECOM,UPDEPC,EPCFARY,IVMDFN,DODSEG,EPCDEL,GUARSEG,UPDAUP,IVMRACE,IVMTSTPT,IVMPMAST
"RTN","IVMPREC6",197,0)
 Q
"RTN","IVMPREC6",198,0)
 ;
"RTN","IVMPREC6",199,0)
 ;
"RTN","IVMPREC6",200,0)
NEXT ; - get the next HL7 segment in the message from HL7 Transmission (#772) file
"RTN","IVMPREC6",201,0)
 ;
"RTN","IVMPREC6",202,0)
 S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)),IVMSEG=$G(^(+IVMDA,0))
"RTN","IVMPREC6",203,0)
 Q
"RTN","IVMPREC6",204,0)
 ;
"RTN","IVMPREC6",205,0)
 ;
"RTN","IVMPREC6",206,0)
COMPARE(IVMSEG) ; - compare incoming HL7 segment/fields with DHCP fields
"RTN","IVMPREC6",207,0)
 ;
"RTN","IVMPREC6",208,0)
 ;  Input:  IVMSEG  --  as the text of the incoming HL7 message
"RTN","IVMPREC6",209,0)
 ;
"RTN","IVMPREC6",210,0)
 ; Output:  None
"RTN","IVMPREC6",211,0)
 ;
"RTN","IVMPREC6",212,0)
 ; - get 3 letter HL7 segment name
"RTN","IVMPREC6",213,0)
 S IVMXREF=$P(IVMSEG,HLFS,1),IVMSTART=IVMXREF
"RTN","IVMPREC6",214,0)
 ;
"RTN","IVMPREC6",215,0)
 ; - strip off HL7 segment name
"RTN","IVMPREC6",216,0)
 S IVMSEG=$P(IVMSEG,HLFS,2,99)
"RTN","IVMPREC6",217,0)
 ;
"RTN","IVMPREC6",218,0)
 ; - roll through "C" x-ref in IVM Demographic Upload Fields (#301.92) file
"RTN","IVMPREC6",219,0)
 F  S IVMXREF=$O(^IVM(301.92,"C",IVMXREF)) Q:IVMXREF']""  D
"RTN","IVMPREC6",220,0)
 .S IVMDEMDA=$O(^IVM(301.92,"C",IVMXREF,"")) Q:IVMDEMDA']""
"RTN","IVMPREC6",221,0)
 .I $$INACTIVE(IVMDEMDA) Q
"RTN","IVMPREC6",222,0)
 .;
"RTN","IVMPREC6",223,0)
 .; - compare incoming HL7 segment fields with DHCP fields
"RTN","IVMPREC6",224,0)
 .I IVMXREF["PID",(IVMSTART["PID") D PID^IVMPREC8
"RTN","IVMPREC6",225,0)
 .I IVMXREF["ZPD",(IVMSTART["ZPD") D ZPD^IVMPREC8
"RTN","IVMPREC6",226,0)
 .I IVMXREF["ZTA",(IVMSTART["ZTA") D ZTA^IVMPREC8
"RTN","IVMPREC6",227,0)
 .; KUM IVM*2.0*164 - ZAV Segment Processing
"RTN","IVMPREC6",228,0)
 .I IVMXREF["ZAV",(IVMSTART["ZAV") D ZAV^IVMPREC8
"RTN","IVMPREC6",229,0)
 .;
"RTN","IVMPREC6",230,0)
 .I IVMXREF["ZGD",(IVMSTART["ZGD") D ZGD^IVMPREC8
"RTN","IVMPREC6",231,0)
 .I IVMXREF["ZCT",(IVMSTART["ZCT") D ZCT^IVMPREC8
"RTN","IVMPREC6",232,0)
 .I IVMXREF["ZEM",(IVMSTART["ZEM") D ZEM^IVMPREC8
"RTN","IVMPREC6",233,0)
 .I IVMXREF["RF1",(IVMSTART["RF1") D RF1^IVMPREC8
"RTN","IVMPREC6",234,0)
 Q
"RTN","IVMPREC6",235,0)
 ;
"RTN","IVMPREC6",236,0)
 ;
"RTN","IVMPREC6",237,0)
DEMBULL ; -  build mail message for transmission to IVM mail group notifying
"RTN","IVMPREC6",238,0)
 ;    them that patients with updated demographic data has been received
"RTN","IVMPREC6",239,0)
 ;    from the IVM Center and may now be uploaded into DHCP.
"RTN","IVMPREC6",240,0)
 ;
"RTN","IVMPREC6",241,0)
 ; If record is auto uploaded, don't add veteran to bulletin
"RTN","IVMPREC6",242,0)
 I $$CKAUTO Q
"RTN","IVMPREC6",243,0)
 ;
"RTN","IVMPREC6",244,0)
 S IVMPTID=$$PT^IVMUFNC4(DFN)
"RTN","IVMPREC6",245,0)
 S XMSUB="IVM - DEMOGRAPHIC UPLOAD for "_$P($P(IVMPTID,"^"),",")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",246,0)
 S IVMTEXT(1)="Updated demographic information has been received from the"
"RTN","IVMPREC6",247,0)
 S IVMTEXT(2)="Health Eligibilty Center.  Please select the 'Demographic Upload'"
"RTN","IVMPREC6",248,0)
 S IVMTEXT(3)="option from the IVM Upload Menu in order to take action on this"
"RTN","IVMPREC6",249,0)
 S IVMTEXT(4)="demographic information.  If you have any questions concerning the"
"RTN","IVMPREC6",250,0)
 S IVMTEXT(5)="information received, please contact the Health Eligibility Center."
"RTN","IVMPREC6",251,0)
 S IVMTEXT(7)=""
"RTN","IVMPREC6",252,0)
 S IVMTEXT(8)="The Health Eligibilty Center has identified the following"
"RTN","IVMPREC6",253,0)
 S IVMTEXT(9)="patients as having updated demographic information:"
"RTN","IVMPREC6",254,0)
 S IVMTEXT(10)=""
"RTN","IVMPREC6",255,0)
 S IVMCNTR=IVMCNTR+1
"RTN","IVMPREC6",256,0)
 S IVMTEXT(IVMCNTR+10)=$J(IVMCNTR_")",5)_"  "_$P(IVMPTID,"^")_" ("_$P(IVMPTID,"^",3)_")"
"RTN","IVMPREC6",257,0)
 Q
"RTN","IVMPREC6",258,0)
 ;
"RTN","IVMPREC6",259,0)
INACTIVE(IVMDEMDA) ;Check if field is inactive in Demographic Upload
"RTN","IVMPREC6",260,0)
 ; Input  -- IVMDEMDA IVM Demographic Upload Fields IEN
"RTN","IVMPREC6",261,0)
 ; Output -- 1=Yes and 0=No
"RTN","IVMPREC6",262,0)
 Q +$P($G(^IVM(301.92,IVMDEMDA,0)),U,9)
"RTN","IVMPREC6",263,0)
 ;
"RTN","IVMPREC6",264,0)
RF1CHK(IVMRTN,IVMDA) ;does an RF1 segment exist in this message?
"RTN","IVMPREC6",265,0)
 N RF1
"RTN","IVMPREC6",266,0)
 S RF1=$O(^TMP($J,IVMRTN,IVMDA))
"RTN","IVMPREC6",267,0)
 I $E($G(^(+RF1,0)),1,3)'="RF1" Q 0
"RTN","IVMPREC6",268,0)
 Q 1
"RTN","IVMPREC6",269,0)
 ;
"RTN","IVMPREC6",270,0)
CKAUTO() ;
"RTN","IVMPREC6",271,0)
 ; Chect if message qualifies for an auto upload.
"RTN","IVMPREC6",272,0)
 N AUTO,IVMI,DOD
"RTN","IVMPREC6",273,0)
 S AUTO=0,IVMI=$O(^IVM(301.92,"C","ZPD09",""))
"RTN","IVMPREC6",274,0)
 I IVMI=IVMDEMDA  D
"RTN","IVMPREC6",275,0)
 .I +IVMFLD'>0 S AUTO=1 Q
"RTN","IVMPREC6",276,0)
 .S DOD=$P($G(^DPT(DFN,.35)),U)
"RTN","IVMPREC6",277,0)
 .I DOD=IVMFLD S AUTO=1 Q
"RTN","IVMPREC6",278,0)
 ;
"RTN","IVMPREC6",279,0)
 Q AUTO
"RTN","IVMPREC6",280,0)
BLDPID(PIDTMP,IVMPID) ;Build IVMPID subscripted by sequence number
"RTN","IVMPREC6",281,0)
 N STR,X1,X2,N,TEXT,C,L
"RTN","IVMPREC6",282,0)
 S STR="",X1=1,(N,X2)=0
"RTN","IVMPREC6",283,0)
 F  S N=$O(PIDTMP(N)) Q:N=""  S TEXT=PIDTMP(N) F L=1:1:$L(TEXT) S C=$E(TEXT,L) D
"RTN","IVMPREC6",284,0)
 . I C="^" D  Q
"RTN","IVMPREC6",285,0)
 . . I X2 S X2=X2+1,IVMPID(X1,X2)=STR
"RTN","IVMPREC6",286,0)
 . . E  S IVMPID(X1)=STR
"RTN","IVMPREC6",287,0)
 . . S STR="",X1=X1+1,X2=0
"RTN","IVMPREC6",288,0)
 . I C="|" D  Q
"RTN","IVMPREC6",289,0)
 . . S X2=X2+1,IVMPID(X1,X2)=STR,STR=""
"RTN","IVMPREC6",290,0)
 . S STR=STR_C
"RTN","IVMPREC6",291,0)
 I $G(C)'="",$G(C)'="^",$G(C)'="|" D
"RTN","IVMPREC6",292,0)
 . I X2 S X2=X2+1,IVMPID(X1,X2)=STR Q
"RTN","IVMPREC6",293,0)
 . S IVMPID(X1)=STR
"RTN","IVMPREC6",294,0)
 Q
"RTN","IVMPREC6",295,0)
ADDRCHNG(DFN) ;Store Address Change Date/time, Source and site if necessary
"RTN","IVMPREC6",296,0)
 ;Store Residence Number Change Date/Time, Source and Site (IVM*2*152)
"RTN","IVMPREC6",297,0)
 N IVMVALUE,IVMFIELD
"RTN","IVMPREC6",298,0)
 I '$D(^TMP($J,"CHANGE UPDATE")) Q
"RTN","IVMPREC6",299,0)
 S IVMFIELD=0 F  S IVMFIELD=$O(^TMP($J,"CHANGE UPDATE",IVMFIELD)) Q:IVMFIELD=""  D
"RTN","IVMPREC6",300,0)
 . S IVMVALUE=$G(^TMP($J,"CHANGE UPDATE",IVMFIELD))
"RTN","IVMPREC6",301,0)
 . S DIE="^DPT(",DA=DFN,DR=IVMFIELD_"////^S X=IVMVALUE"
"RTN","IVMPREC6",302,0)
 . D ^DIE K DA,DIE,DR
"RTN","IVMPREC6",303,0)
 .; - delete inaccurate Addr Change Site data if Source is not VAMC
"RTN","IVMPREC6",304,0)
 . I IVMFIELD=.119,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.12)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMPREC6",305,0)
 .; - delete inaccurate Residence Number Change Site data if Source
"RTN","IVMPREC6",306,0)
 .;   is not VAMC (IVM*2*152)
"RTN","IVMPREC6",307,0)
 . I IVMFIELD=.1322,IVMVALUE'="VAMC" S FDA(2,+DFN_",",.1323)="@" D UPDATE^DIE("E","FDA")
"RTN","IVMPREC6",308,0)
 K ^TMP($J,"CHANGE UPDATE")
"RTN","IVMPREC6",309,0)
 Q
"RTN","IVMPREC6",310,0)
EPCFLDS(EPCFARY,EPCDEL) ;
"RTN","IVMPREC6",311,0)
 ;EPCFARY - Contains IENs of Pager, email, Cell phone and Home phone records in 301.92 File - Passed by reference
"RTN","IVMPREC6",312,0)
 ;EPCDEL - Contains field # of Pager, Email, Cell phone and Home phone fields in Patient(#2) file. - Passed by reference
"RTN","IVMPREC6",313,0)
 I (DODSEG)!(GUARSEG) Q
"RTN","IVMPREC6",314,0)
 S EPCFARY("PNO")=$O(^IVM(301.92,"B","PAGER NUMBER",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","PAGER CHANGE SOURCE",0))
"RTN","IVMPREC6",315,0)
 S EPCFARY("CPH")=$O(^IVM(301.92,"B","CELLULAR NUMBER",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","CELL PHONE CHANGE SOURCE",0))
"RTN","IVMPREC6",316,0)
 S EPCFARY("EAD")=$O(^IVM(301.92,"B","EMAIL ADDRESS",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","EMAIL CHANGE SOURCE",0))
"RTN","IVMPREC6",317,0)
 ; IVM*2.0*167 - Make Home phone records auto-upload to Patient File
"RTN","IVMPREC6",318,0)
 S EPCFARY("PHH")=$O(^IVM(301.92,"B","PHONE NUMBER [RESIDENCE]",0))_"^"_$O(^IVM(301.92,"B","RESIDENCE NUMBER CHANGE DT/TM",0))_"^"_$O(^IVM(301.92,"B","RESIDENCE NUMBER CHANGE SITE",0))_"^"_$O(^IVM(301.92,"B","RESIDENCE NUMBER CHANGE SOURCE",0))
"RTN","IVMPREC6",319,0)
 S EPCDEL("PNO")=".135^.1312^.1313^.1314"
"RTN","IVMPREC6",320,0)
 S EPCDEL("CPH")=".134^.139^.1311^.13111"
"RTN","IVMPREC6",321,0)
 S EPCDEL("EAD")=".133^.136^.137^.138"
"RTN","IVMPREC6",322,0)
 ; IVM*2.0*167 - Make Home phone records auto-upload to Patient File
"RTN","IVMPREC6",323,0)
 ; IVM*2.0*171 - Comment out line to fix the home phone deletion issue
"RTN","IVMPREC6",324,0)
 ;S EPCDEL("PHH")=".131^.1321^.1322^.1323"
"RTN","IVMPREC6",325,0)
 Q
"RTN","IVMPREC6",326,0)
 ;
"RTN","IVMPREC6",327,0)
AUPBLD(AUPFARY,UPDAUPG) ; Set up array containing fields for auto upload.
"RTN","IVMPREC6",328,0)
 ;AUPFARY - Contains fields in 301.92 File-Passed by reference
"RTN","IVMPREC6",329,0)
 ;UPDAUPG - Contains all groups initialized to '0'
"RTN","IVMPREC6",330,0)
 N AUPSTR,AUPGRP,AUPFLST,AUPPCE,AUPSGSQ,AUPDA
"RTN","IVMPREC6",331,0)
 F I=3:1 S AUPSTR=$P($T(AUPLST+I),";;",2,3) Q:$P(AUPSTR,";")="QUIT"  D
"RTN","IVMPREC6",332,0)
 .S AUPGRP=$P(AUPSTR,";"),AUPFLST=$P(AUPSTR,";",2)
"RTN","IVMPREC6",333,0)
 .F AUPPCE=1:1:$L(AUPFLST,"^") D
"RTN","IVMPREC6",334,0)
 ..S AUPSGSQ=$P(AUPFLST,"^",AUPPCE) Q:AUPSGSQ=""
"RTN","IVMPREC6",335,0)
 ..S AUPDA=$O(^IVM(301.92,"C",AUPSGSQ,0)) Q:AUPDA=""
"RTN","IVMPREC6",336,0)
 ..S AUPFARY(AUPDA)=AUPGRP
"RTN","IVMPREC6",337,0)
 ..S:AUPGRP'="" UPDAUPG(AUPGRP)=0  ; Default group update flags to '0'
"RTN","IVMPREC6",338,0)
 Q
"RTN","IVMPREC6",339,0)
 ;
"RTN","IVMPREC6",340,0)
 ; IVM*2.0*164 - ZAV01,ZAV02 AND ZAV04 are added for Auto Upload.  
"RTN","IVMPREC6",341,0)
 ; Residential Address (RA) group is added
"RTN","IVMPREC6",342,0)
 ; Confidential Address (CA) group is uncommented
"RTN","IVMPREC6",343,0)
AUPLST ; P1;P2
"RTN","IVMPREC6",344,0)
 ; P1 = Group Name (treat all entries as this group if present)
"RTN","IVMPREC6",345,0)
 ; P2 = .01 field(s) from 301.92 seperated by '^'
"RTN","IVMPREC6",346,0)
 ;;D1;ZCT03D1^ZCT04D1^ZCT051D1^ZCT052D1^ZCT053D1^ZCT054D1^ZCT055D1^ZCT06D1^ZCT07D1^ZCT10D1
"RTN","IVMPREC6",347,0)
 ;;E1;ZCT03E1^ZCT04E1^ZCT051E1^ZCT052E1^ZCT053E1^ZCT054E1^ZCT055E1^ZCT06E1^ZCT07E1^ZCT10E1
"RTN","IVMPREC6",348,0)
 ;;E2;ZCT03E2^ZCT04E2^ZCT051E2^ZCT052E2^ZCT053E2^ZCT054E2^ZCT055E2^ZCT06E2^ZCT07E2^ZCT10E2
"RTN","IVMPREC6",349,0)
 ;;K1;ZCT03K1^ZCT04K1^ZCT051K1^ZCT052K1^ZCT053K1^ZCT054K1^ZCT055K1^ZCT06K1^ZCT07K1^ZCT10K1
"RTN","IVMPREC6",350,0)
 ;;K2;ZCT03K2^ZCT04K2^ZCT051K2^ZCT052K2^ZCT053K2^ZCT054K2^ZCT055K2^ZCT06K2^ZCT07K2^ZCT10K2
"RTN","IVMPREC6",351,0)
 ;;TA;ZTA02^ZTA03^ZTA04^ZTA051^ZTA052^ZTA053^ZTA054^ZTA055^ZTA056^ZTA058^ZTA059^ZTA07^ZTA08^ZTA09^ZTA054F^ZTA055F^ZAV04
"RTN","IVMPREC6",352,0)
 ;;CA;PID111C^PID112C^PID113C^PID114C^PID114CF^PID115C^PID115CF^PID116C^PID117C^PID118C^PID119C^PID1110C^PID1112C^PID1113C^PID13CA^RF161CA^RF171CA^ZAV02
"RTN","IVMPREC6",353,0)
 ;;RA;PID111R^PID112R^PID113R^PID114R^PID114RF^PID115R^PID115RF^PID116R^PID117R^PID118R^PID119R^PID1110R^PID1112R^PID1113R^PID13RA^RF161RA^RF162RA^RF171RA^ZAV01
"RTN","IVMPREC6",354,0)
 ;;;ZEM03^ZEM04^ZEM05^ZEM061^ZEM062^ZEM063^ZEM064^ZEM065^ZEM068^ZEM07^ZEM09
"RTN","IVMPREC6",355,0)
 ;;;ZEM03S^ZEM04S^ZEM05S^ZEM061S^ZEM062S^ZEM063S^ZEM064S^ZEM065S^ZEM068S^ZEM07S^ZEM09S
"RTN","IVMPREC6",356,0)
 ;;;PID06^PID10^PID16^PID17^PID22^ZPD30^ZPD06^ZPD07
"RTN","IVMPREC6",357,0)
 ;;QUIT
"RTN","IVMPREC6",358,0)
 ;;
"RTN","IVMPREC6",359,0)
 ;;The following have been disabled until further notice
"RTN","IVMPREC6",360,0)
 ;;;PID113N^PID114N^PID24^PID13W
"RTN","IVMPREC6",361,0)
 ;;CA;PID111C^PID112C^PID113C^PID114C^PID114CF^PID115C^PID115CF^PID116C^PID117C^PID118C^PID119C^PID1112C1^PID1112C2^PID13CA^RF161CA^RF171CA
"RTN","IVMPREC8")
0^2^B300573849
"RTN","IVMPREC8",1,0)
IVMPREC8 ;ALB/KCL,BRM,PJR,CKN,TDM,PWC,LBD,DPR,KUM - PROCESS INCOMING (Z05 EVENT TYPE) HL7 MESSAGES (CON'T) ;02 SEPT 2019  8:56 AM
"RTN","IVMPREC8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**5,6,12,58,73,79,102,115,121,148,151,152,168,167,171,164,188**;21-OCT-94;Build 12
"RTN","IVMPREC8",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IVMPREC8",4,0)
 ;
"RTN","IVMPREC8",5,0)
 ; This routine is called from IVMPREC6.
"RTN","IVMPREC8",6,0)
 ; This routine will process batch ORU demographic (event type Z05) HL7
"RTN","IVMPREC8",7,0)
 ; messages received from the IVM center.
"RTN","IVMPREC8",8,0)
 ;
"RTN","IVMPREC8",9,0)
PID ;-compare PID fields with DHCP fields
"RTN","IVMPREC8",10,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",11,0)
 ;
"RTN","IVMPREC8",12,0)
 S IVMFLD=""
"RTN","IVMPREC8",13,0)
 ; - strip off seg name
"RTN","IVMPREC8",14,0)
 S IVMPIECE=$E(IVMXREF,4,9)
"RTN","IVMPREC8",15,0)
 ;Only process if value exist-also handles multiple addr
"RTN","IVMPREC8",16,0)
 I $G(IVMPID(+$E(IVMPIECE,1,2)))'=""!($O(IVMPID(+$E(IVMPIECE,1,2),""))) D
"RTN","IVMPREC8",17,0)
 .;
"RTN","IVMPREC8",18,0)
 .; -if PID field is the addr field-parse addr
"RTN","IVMPREC8",19,0)
 .S IVMADFLG=0
"RTN","IVMPREC8",20,0)
 .I IVMXREF["PID11",'$G(DODSEG) D  Q:IVMFLD=""
"RTN","IVMPREC8",21,0)
 ..;
"RTN","IVMPREC8",22,0)
 ..;-Process Place of Birth City&State
"RTN","IVMPREC8",23,0)
 ..;I (IVMXREF="PID113N")!(IVMXREF="PID114N") D  Q
"RTN","IVMPREC8",24,0)
 ..;.Q:'$D(ADDRESS("N"))
"RTN","IVMPREC8",25,0)
 ..;.S IVMADDR=ADDRESS("N")
"RTN","IVMPREC8",26,0)
 ..;.S IVMPIECE=$E(IVMPIECE,3,4),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",27,0)
 ..;.Q:IVMFLD=""
"RTN","IVMPREC8",28,0)
 ..;.I IVMPIECE="4N" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",29,0)
 ..; IVM*2.0*164-Uncomment Conf and Add Res
"RTN","IVMPREC8",30,0)
 ..I $G(AUPFARY(IVMDEMDA))="CA" S IVMADDR=$G(ADDRESS("CA")) ;Conf Addr
"RTN","IVMPREC8",31,0)
 ..I $G(AUPFARY(IVMDEMDA))'="CA" D
"RTN","IVMPREC8",32,0)
 ...S IVMADDR=$S($D(ADDRESS("P")):ADDRESS("P"),$D(ADDRESS("VAB1")):ADDRESS("VAB1"),$D(ADDRESS("VAB2")):ADDRESS("VAB2"),$D(ADDRESS("VAB3")):ADDRESS("VAB3"),$D(ADDRESS("VAB4")):ADDRESS("VAB4"),1:"")
"RTN","IVMPREC8",33,0)
 ...I $G(AUPFARY(IVMDEMDA))="RA" S IVMADDR=$G(ADDRESS("R"))
"RTN","IVMPREC8",34,0)
 ..I IVMADDR="" Q
"RTN","IVMPREC8",35,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",36,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",37,0)
 ..;-get piece of addr field, and set IVMFLD
"RTN","IVMPREC8",38,0)
 ..S IVMPIECE=$E(IVMPIECE,3,6),IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",39,0)
 ..;Enable del of Addr2,Addr3-164-Fix End dt
"RTN","IVMPREC8",40,0)
 ..I (IVMPIECE="2C")!(IVMPIECE="8C")!(IVMPIECE="2R")!(IVMPIECE="8R") S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",41,0)
 ..I $E(IVMPIECE,1,3)="13C" D
"RTN","IVMPREC8",42,0)
 ...S IVMFLD=$P(IVMADDR,$E(HLECH),12)
"RTN","IVMPREC8",43,0)
 ...S IVMFLD=$$FMDATE^HLFNC($P(IVMFLD,$E(HLECH,4),2))
"RTN","IVMPREC8",44,0)
 ...S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",45,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",46,0)
 ..;convert st abbrev. to pointer
"RTN","IVMPREC8",47,0)
 ..I (IVMPIECE=4)!(IVMPIECE="4C")!(IVMPIECE="4R") D
"RTN","IVMPREC8",48,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",49,0)
 ...I IVMFLD'="" S (IVMSTPTR,IVMFLD)=+$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",50,0)
 ...;IVM*2.0*164-PMA State Pointer
"RTN","IVMPREC8",51,0)
 ...I IVMPIECE=4 S IVMPMAST=$G(IVMSTPTR)
"RTN","IVMPREC8",52,0)
 ...I IVMPIECE="4C" S IVMCMAST=$G(IVMSTPTR)
"RTN","IVMPREC8",53,0)
 ..I (IVMPIECE=5)!(IVMPIECE="5C")!(IVMPIECE="5R") D
"RTN","IVMPREC8",54,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"")
"RTN","IVMPREC8",55,0)
 ...I IVMFLD'="" S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=X
"RTN","IVMPREC8",56,0)
 ..I (IVMPIECE="4F")!(IVMPIECE="4CF")!(IVMPIECE="4RF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;PROVINCE
"RTN","IVMPREC8",57,0)
 ..I (IVMPIECE="5F")!(IVMPIECE="5CF")!(IVMPIECE="5RF") S IVMFLD=$S(FORADDR:IVMFLD,1:"") ;POSTAL CODE
"RTN","IVMPREC8",58,0)
 ..I (IVMPIECE=6)!(IVMPIECE="6C")!(IVMPIECE="6R") S IVMFLD=$$CNTRCONV(COUNTRY) ;COUNTRY
"RTN","IVMPREC8",59,0)
 ..I IVMPIECE=7 S IVMFLD=$$BAICONV(IVMFLD) ;Bad Address Indicator
"RTN","IVMPREC8",60,0)
 ..I IVMPIECE="7C" S IVMFLD=CONFADCT  ;CONFADCT set in PID11^IVMPRECA
"RTN","IVMPREC8",61,0)
 ..;County for Conf
"RTN","IVMPREC8",62,0)
 ..I IVMPIECE="9C" D
"RTN","IVMPREC8",63,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",64,0)
 ...I IVMCMAST'="" S IVMFLD=+$O(^DIC(5,IVMCMAST,1,"C",IVMFLD,0))
"RTN","IVMPREC8",65,0)
 ..;County for Res
"RTN","IVMPREC8",66,0)
 ..I IVMPIECE="9R" D
"RTN","IVMPREC8",67,0)
 ...S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",68,0)
 ...I IVMSTPTR'="" S IVMFLD=+$O(^DIC(5,IVMSTPTR,1,"C",IVMFLD,0))
"RTN","IVMPREC8",69,0)
 ..I $E(IVMPIECE,1,3)="12C" D
"RTN","IVMPREC8",70,0)
 ...S IVMFLD=$$FMDATE^HLFNC($P(IVMFLD,$E(HLECH,4),1))
"RTN","IVMPREC8",71,0)
 ...;IVM*2.0*164-Allow del of start dt
"RTN","IVMPREC8",72,0)
 ...S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",73,0)
 ..S IVMADFLG=1
"RTN","IVMPREC8",74,0)
 .;
"RTN","IVMPREC8",75,0)
 .I IVMXREF["PID12",'$G(DODSEG) D
"RTN","IVMPREC8",76,0)
 ..;IVM*2.0*164-County from PMA St
"RTN","IVMPREC8",77,0)
 ..;I 'FORADDR S IVMADFLG=1,IVMFLD=+$O(^DIC(5,IVMPMAST,1,"C",IVMPID(12),0))
"RTN","IVMPREC8",78,0)
 ..I 'FORADDR D
"RTN","IVMPREC8",79,0)
 ...S IVMADFLG=1
"RTN","IVMPREC8",80,0)
 ...I IVMPMAST'="" S IVMFLD=+$O(^DIC(5,IVMPMAST,1,"C",IVMPID(12),0))
"RTN","IVMPREC8",81,0)
 .;line remove so that the ph is compared 
"RTN","IVMPREC8",82,0)
 .;before saving to 301.5.
"RTN","IVMPREC8",83,0)
 .I IVMXREF["PID13",$D(TELECOM),'$G(DODSEG) D
"RTN","IVMPREC8",84,0)
 ..;Conf Ph
"RTN","IVMPREC8",85,0)
 ..I IVMXREF="PID13CA",$D(TELECOM("VACPN")) D
"RTN","IVMPREC8",86,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("VACPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",87,0)
 ..;Ph Num [Work]
"RTN","IVMPREC8",88,0)
 ..I IVMXREF="PID13W",$D(TELECOM("WPN")) D
"RTN","IVMPREC8",89,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("WPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",90,0)
 ..;Pager Num
"RTN","IVMPREC8",91,0)
 ..I IVMXREF="PID13B",$D(TELECOM("BPN")) D
"RTN","IVMPREC8",92,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("BPN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",93,0)
 ..;Cell Ph Num
"RTN","IVMPREC8",94,0)
 ..I IVMXREF="PID13C",$D(TELECOM("ORN")) D
"RTN","IVMPREC8",95,0)
 ...S IVMFLD=$$CONVPH($P($G(TELECOM("ORN")),$E(HLECH))),IVMADFLG=1
"RTN","IVMPREC8",96,0)
 ..;Email Addr
"RTN","IVMPREC8",97,0)
 ..I IVMXREF="PID13E",$D(TELECOM("NET")) D
"RTN","IVMPREC8",98,0)
 ...S IVMFLD=$P($G(TELECOM("NET")),$E(HLECH),4)
"RTN","IVMPREC8",99,0)
 ...S IVMFLD=$S($$CHKEMAIL(IVMFLD):IVMFLD,1:""),IVMADFLG=1
"RTN","IVMPREC8",100,0)
 .; - file addr fields and quit
"RTN","IVMPREC8",101,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",102,0)
 .;
"RTN","IVMPREC8",103,0)
 .;I (IVMXREF'="PID113N")&(IVMXREF'="PID114N")&($E(IVMXREF,1,5)'="PID13") S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",104,0)
 .I $E(IVMXREF,1,5)'="PID13" S IVMFLD=$G(IVMPID(+IVMPIECE))
"RTN","IVMPREC8",105,0)
 .;
"RTN","IVMPREC8",106,0)
 .; -if HL7 date convert to FM date,set IVMFLD
"RTN","IVMPREC8",107,0)
 .I IVMXREF["PID07" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",108,0)
 .;
"RTN","IVMPREC8",109,0)
 .; - if HL7 code convert to VistA, set IVMFLD
"RTN","IVMPREC8",110,0)
 .I IVMXREF["PID16" D  ;Marital Status
"RTN","IVMPREC8",111,0)
 ..S IVMFLD=$S(IVMFLD="D":"DIVORCED",IVMFLD="M":"MARRIED",IVMFLD="W":"WIDOWED",IVMFLD="A":"SEPARATED",IVMFLD="S":"NEVER MARRIED",IVMFLD="U":"UNKNOWN")
"RTN","IVMPREC8",112,0)
 ..S IVMFLD=$O(^DIC(11,"B",IVMFLD,0))
"RTN","IVMPREC8",113,0)
 .;
"RTN","IVMPREC8",114,0)
 .I IVMXREF["PID17" S IVMFLD=$O(^DIC(13,"C",IVMFLD,0))  ;Religion
"RTN","IVMPREC8",115,0)
 .;
"RTN","IVMPREC8",116,0)
 .I IVMXREF["PID22" D  ;Ethnicity
"RTN","IVMPREC8",117,0)
 ..S IVMFLD=$$CODE2PTR^DGUTL4($P($G(IVMPID(22)),$E(HLECH),4),2,2)
"RTN","IVMPREC8",118,0)
 .;
"RTN","IVMPREC8",119,0)
 .I IVMXREF="PID10",'$G(DODSEG),$D(IVMRACE) D  Q
"RTN","IVMPREC8",120,0)
 ..N XVAL,IVMLST,DHCPLST
"RTN","IVMPREC8",121,0)
 ..S (XVAL,IVMLST,DHCPLST)=""
"RTN","IVMPREC8",122,0)
 ..F  S XVAL=$O(^DPT(DFN,.02,"B",XVAL)) Q:XVAL=""  S IVMLST=IVMLST_XVAL_U
"RTN","IVMPREC8",123,0)
 ..S XVAL="" F  S XVAL=$O(IVMRACE(2,XVAL)) Q:XVAL=""  S DHCPLST=DHCPLST_XVAL_U
"RTN","IVMPREC8",124,0)
 ..Q:IVMLST=DHCPLST
"RTN","IVMPREC8",125,0)
 ..F XVAL=1:1:($L(DHCPLST,U)-1) S IVMFLD=$P(DHCPLST,U,XVAL) D
"RTN","IVMPREC8",126,0)
 ...D STORE^IVMPREC9
"RTN","IVMPREC8",127,0)
 .;
"RTN","IVMPREC8",128,0)
 .; -call VADPT to return DHCP demographics
"RTN","IVMPREC8",129,0)
 .D DEM^VADPT,ADD^VADPT,OPD^VADPT
"RTN","IVMPREC8",130,0)
 .;
"RTN","IVMPREC8",131,0)
 .; -execute code on the 1 node and get DHCP field for compare
"RTN","IVMPREC8",132,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",133,0)
 .;
"RTN","IVMPREC8",134,0)
 .; - special logic for ph
"RTN","IVMPREC8",135,0)
 .; - if different store value received,quit
"RTN","IVMPREC8",136,0)
 .;
"RTN","IVMPREC8",137,0)
 .I IVMXREF="PID13",$D(TELECOM("PRN")),'$G(DODSEG) D  Q
"RTN","IVMPREC8",138,0)
 ..S IVMFLD=$P($G(TELECOM("PRN")),$E(HLECH))
"RTN","IVMPREC8",139,0)
 ..I IVMFLD]"" D
"RTN","IVMPREC8",140,0)
 ...K UPPHN
"RTN","IVMPREC8",141,0)
 ...S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",142,0)
 ...I COMPPH1'=COMPPH2 D STORE^IVMPREC9 S UPPHN=1
"RTN","IVMPREC8",143,0)
 .;
"RTN","IVMPREC8",144,0)
 .; -if field from IVM does not equal DHCP-store for uploading
"RTN","IVMPREC8",145,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",146,0)
 Q
"RTN","IVMPREC8",147,0)
 ;
"RTN","IVMPREC8",148,0)
ZPD ; -compare ZPD with DHCP
"RTN","IVMPREC8",149,0)
 N STFLG
"RTN","IVMPREC8",150,0)
 S STFLG=0
"RTN","IVMPREC8",151,0)
 S IVMPIECE=$E(IVMXREF,4,5)
"RTN","IVMPREC8",152,0)
 I IVMXREF="ZPD09"!(IVMXREF="ZPD31")!(IVMXREF="ZPD32") Q:$$DODCK(DFN)
"RTN","IVMPREC8",153,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",154,0)
 .;
"RTN","IVMPREC8",155,0)
 .; - set var to HL7 field
"RTN","IVMPREC8",156,0)
 .S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",157,0)
 .;
"RTN","IVMPREC8",158,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",159,0)
 .I (IVMXREF["ZPD06")!(IVMXREF["ZPD07") S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",160,0)
 .;
"RTN","IVMPREC8",161,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",162,0)
 .I IVMXREF["ZPD09"!(IVMXREF["ZPD13")!(IVMXREF["ZPD32") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",163,0)
 .;
"RTN","IVMPREC8",164,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",165,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",166,0)
 .;
"RTN","IVMPREC8",167,0)
 .; - if field from IVM does not equal DHCP field - store for uploading
"RTN","IVMPREC8",168,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) S STFLG=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",169,0)
 .I $P(IVMSEG,"^",IVMPIECE)'="""""" D
"RTN","IVMPREC8",170,0)
 ..I IVMXREF["ZPD09" D STORE^IVMPREC9
"RTN","IVMPREC8",171,0)
 ..;I IVMXREF["ZPD09"!(IVMXREF["ZPD31")!(IVMXREF["ZPD32") D STORE^IVMPREC9
"RTN","IVMPREC8",172,0)
 I IVMXREF["ZPD08",STFLG,$$AUTORINC^IVMPREC9(DFN) Q
"RTN","IVMPREC8",173,0)
 I IVMXREF["ZPD32",$$AUTODOD^IVMLDEMD(DFN)
"RTN","IVMPREC8",174,0)
 Q
"RTN","IVMPREC8",175,0)
 ;
"RTN","IVMPREC8",176,0)
 ;
"RTN","IVMPREC8",177,0)
DODCK(DFN) ;this will check if Date of Death information needs to be uploaded or not.
"RTN","IVMPREC8",178,0)
 ;2 requirements are:
"RTN","IVMPREC8",179,0)
 ;  1. When the DOD is received from ESR with a Source of Death Notification equal to "Death Certificate on file and the
"RTN","IVMPREC8",180,0)
 ;     VistA DOD is null or empty then VistA will upload the Date of Death from ESR
"RTN","IVMPREC8",181,0)
 ;  2. When DOD is Received from ESR and VistA DOD is already populated then Vista will ignore the DOD from ESR and VistA
"RTN","IVMPREC8",182,0)
 ;     will not create an entry in the IVM demographic upload option.
"RTN","IVMPREC8",183,0)
 ;
"RTN","IVMPREC8",184,0)
 ; Inputs: DFN for ^DPT
"RTN","IVMPREC8",185,0)
 ;         IVMXREF (must be ZPD09, ZPD31 and ZPD32)
"RTN","IVMPREC8",186,0)
 ;         IVMSEG (the ZPD data)
"RTN","IVMPREC8",187,0)
 ;         IVMFLD (the field number in ^DPT(DFN)
"RTN","IVMPREC8",188,0)
 ;         IVMPIECE (the piece number of IVMSEG)
"RTN","IVMPREC8",189,0)
 ;         IVMDHCP (the data from ^DPT(DFN)
"RTN","IVMPREC8",190,0)
 ;
"RTN","IVMPREC8",191,0)
 N DODARRAY,QUIT
"RTN","IVMPREC8",192,0)
 ;
"RTN","IVMPREC8",193,0)
 S (CKDEL,QUIT)=0
"RTN","IVMPREC8",194,0)
 ;
"RTN","IVMPREC8",195,0)
 I $P(IVMSEG,"^",9)="""""" Q 0
"RTN","IVMPREC8",196,0)
 D GETS^DIQ(2,DFN,".351:.355","","DODARRAY")
"RTN","IVMPREC8",197,0)
 S DOD=DODARRAY(2,DFN_",",.351)
"RTN","IVMPREC8",198,0)
 I DOD'="" Q 1
"RTN","IVMPREC8",199,0)
 I $P(IVMSEG,"^",31)=3,DOD="" S QUIT=0    ;Death Certificate not on File
"RTN","IVMPREC8",200,0)
 I $P(IVMSEG,"^",31)=3,DOD'="" S QUIT=1
"RTN","IVMPREC8",201,0)
 ;
"RTN","IVMPREC8",202,0)
 Q QUIT ;
"RTN","IVMPREC8",203,0)
 ;
"RTN","IVMPREC8",204,0)
ZTA ; -compare ZTA with DHCP
"RTN","IVMPREC8",205,0)
 N COMPPH1,COMPPH2,COUNTRY
"RTN","IVMPREC8",206,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",207,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",208,0)
 .;
"RTN","IVMPREC8",209,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",210,0)
 .S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",211,0)
 .;
"RTN","IVMPREC8",212,0)
 .; - ZTA05 as the ZTA addr field is 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",213,0)
 .I IVMXREF["ZTA05" D
"RTN","IVMPREC8",214,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)) Q:IVMADDR=""
"RTN","IVMPREC8",215,0)
 ..S COUNTRY=$P(IVMADDR,$E(HLECH),6)
"RTN","IVMPREC8",216,0)
 ..S FORADDR=$S(COUNTRY="USA":0,1:1)
"RTN","IVMPREC8",217,0)
 ..; - get piece of address field, and set IVMFLD
"RTN","IVMPREC8",218,0)
 ..S IVMPIECE=$E(IVMPIECE,3,4)
"RTN","IVMPREC8",219,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)
"RTN","IVMPREC8",220,0)
 ..I (IVMPIECE=2)!(IVMPIECE=8) S:IVMFLD="" IVMFLD="@"
"RTN","IVMPREC8",221,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",222,0)
 ..I (IVMPIECE=4)!(IVMPIECE=5)!(IVMPIECE=9) S IVMFLD=$S('FORADDR:IVMFLD,1:"") Q:IVMFLD=""
"RTN","IVMPREC8",223,0)
 ..I IVMPIECE=4 S (IVMTSTPT,IVMFLD)=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",224,0)
 ..I IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",225,0)
 ..I IVMPIECE="4F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;PROVINCE
"RTN","IVMPREC8",226,0)
 ..I IVMPIECE="5F" S IVMFLD=$S(FORADDR:IVMFLD,1:"")  ;POSTAL CODE
"RTN","IVMPREC8",227,0)
 ..I IVMPIECE=6 S IVMFLD=$$CNTRCONV(COUNTRY)         ;COUNTRY
"RTN","IVMPREC8",228,0)
 ..I IVMPIECE=9 S IVMFLD=+$O(^DIC(5,+IVMTSTPT,1,"C",IVMFLD,0))  ;COUNTY
"RTN","IVMPREC8",229,0)
 .Q:IVMFLD=""
"RTN","IVMPREC8",230,0)
 .;
"RTN","IVMPREC8",231,0)
 .; - if HL7 data convert to Y/N val
"RTN","IVMPREC8",232,0)
 .I IVMXREF["ZTA02" S IVMFLD=$S(IVMFLD=0:"N",IVMFLD=1:"Y",1:"")
"RTN","IVMPREC8",233,0)
 .;
"RTN","IVMPREC8",234,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",235,0)
 .I (IVMXREF["ZTA03")!(IVMXREF["ZTA04")!(IVMXREF["ZTA08") S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",236,0)
 .;
"RTN","IVMPREC8",237,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",238,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",239,0)
 .;
"RTN","IVMPREC8",240,0)
 .; -special logic for phone
"RTN","IVMPREC8",241,0)
 .; -if different store value received,quit
"RTN","IVMPREC8",242,0)
 .I IVMXREF["ZTA07" D  Q
"RTN","IVMPREC8",243,0)
 ..S COMPPH1=$$CONVPH(IVMFLD),COMPPH2=$$CONVPH(IVMDHCP)
"RTN","IVMPREC8",244,0)
 ..I COMPPH1'=COMPPH2 D STORE^IVMPREC9
"RTN","IVMPREC8",245,0)
 .;
"RTN","IVMPREC8",246,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",247,0)
 .;
"RTN","IVMPREC8",248,0)
 .I IVMXREF["ZTA08" D
"RTN","IVMPREC8",249,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("TA")=1
"RTN","IVMPREC8",250,0)
 Q
"RTN","IVMPREC8",251,0)
 ;
"RTN","IVMPREC8",252,0)
ZAV ; compare ZAV with DHCP
"RTN","IVMPREC8",253,0)
 N IVMATYP
"RTN","IVMPREC8",254,0)
 S IVMFLD=""
"RTN","IVMPREC8",255,0)
 S IVMATYP=""
"RTN","IVMPREC8",256,0)
 S IVMATYP=$P(IVMSEG,HLFS,2)
"RTN","IVMPREC8",257,0)
 S IVMFLD=$P(IVMSEG,HLFS,3)
"RTN","IVMPREC8",258,0)
 I IVMXREF=$S(IVMATYP="P":"ZAV03",IVMATYP="CNF":"ZAV02",IVMATYP="R":"ZAV01",IVMATYP="C":"ZAV04",1:"") D 
"RTN","IVMPREC8",259,0)
 .; Execute 1 node and get DHCP field
"RTN","IVMPREC8",260,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",261,0)
 .; field from IVM is not equal DHCP-store
"RTN","IVMPREC8",262,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",263,0)
 ;
"RTN","IVMPREC8",264,0)
 Q
"RTN","IVMPREC8",265,0)
 ;
"RTN","IVMPREC8",266,0)
ZGD ; - compare ZGD with DHCP
"RTN","IVMPREC8",267,0)
 S IVMADFLG=0
"RTN","IVMPREC8",268,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",269,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",270,0)
 .;
"RTN","IVMPREC8",271,0)
 .; - set var IVMFLD to incoming HL7
"RTN","IVMPREC8",272,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,IVMPIECE)
"RTN","IVMPREC8",273,0)
 .;
"RTN","IVMPREC8",274,0)
 .; - ZGD06 as the ZGD address field is 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",275,0)
 .I IVMXREF["ZGD06" D
"RTN","IVMPREC8",276,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",277,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",278,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",279,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",280,0)
 .;
"RTN","IVMPREC8",281,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",282,0)
 .I IVMXREF["ZGD08" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",283,0)
 .;
"RTN","IVMPREC8",284,0)
 .; - execute code on the 1 node and get DHCP
"RTN","IVMPREC8",285,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",286,0)
 .;
"RTN","IVMPREC8",287,0)
 .; if field from IVM does not equal DHCP-store for uploading
"RTN","IVMPREC8",288,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",289,0)
 Q
"RTN","IVMPREC8",290,0)
 ;
"RTN","IVMPREC8",291,0)
ZCT ; - compare ZCT with DHCP
"RTN","IVMPREC8",292,0)
 N ZCTTYP
"RTN","IVMPREC8",293,0)
 S IVMADFLG=0
"RTN","IVMPREC8",294,0)
 S IVMPIECE=$E(IVMXREF,4,8)
"RTN","IVMPREC8",295,0)
 ;IVM*2.0*188-COMMENT BELOW TO ALLOW QUOTES
"RTN","IVMPREC8",296,0)
 ;S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",297,0)
 S ZCTTYP=$E(IVMPIECE,$L(IVMPIECE)-1,$L(IVMPIECE))
"RTN","IVMPREC8",298,0)
 Q:$P(IVMSEG,HLFS,2)'=$S(ZCTTYP="K1":1,ZCTTYP="K2":2,ZCTTYP="E1":3,ZCTTYP="E2":4,ZCTTYP="D1":5,1:"")
"RTN","IVMPREC8",299,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",300,0)
 .;
"RTN","IVMPREC8",301,0)
 .; -set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",302,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",303,0)
 .;IVM*2.0*188-convert "" to @
"RTN","IVMPREC8",304,0)
 .I IVMFLD="""""" S IVMFLD="@"
"RTN","IVMPREC8",305,0)
 .;
"RTN","IVMPREC8",306,0)
 .; - if HL7 name format convert to FM
"RTN","IVMPREC8",307,0)
 .I IVMXREF["ZCT03" S IVMFLD=$$FMNAME^HLFNC(IVMFLD)
"RTN","IVMPREC8",308,0)
 .;
"RTN","IVMPREC8",309,0)
 .I IVMFLD="@," S IVMFLD="@" ;IVM*2.0*188
"RTN","IVMPREC8",310,0)
 .; - ZCT05 as the ZCT address field is 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",311,0)
 .I IVMXREF["ZCT05" D
"RTN","IVMPREC8",312,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",313,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE),IVMADFLG=1
"RTN","IVMPREC8",314,0)
 ..;IVM*2.0*188-convert "" to @
"RTN","IVMPREC8",315,0)
 ..I IVMFLD="""""" S IVMFLD="@" Q
"RTN","IVMPREC8",316,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",317,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",318,0)
 .;
"RTN","IVMPREC8",319,0)
 .I IVMADFLG D STORE^IVMPREC9 Q
"RTN","IVMPREC8",320,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",321,0)
 .I IVMXREF["ZCT10" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",322,0)
 .;
"RTN","IVMPREC8",323,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",324,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",325,0)
 .;
"RTN","IVMPREC8",326,0)
 .;IVM*2.0*188-convert "" to @
"RTN","IVMPREC8",327,0)
 .I IVMFLD="""""" S IVMFLD="@"
"RTN","IVMPREC8",328,0)
 .;
"RTN","IVMPREC8",329,0)
 .; if field from IVM does not equal DHCP-store for upload
"RTN","IVMPREC8",330,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",331,0)
 .;
"RTN","IVMPREC8",332,0)
 .I IVMXREF["ZCT10" D
"RTN","IVMPREC8",333,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG(ZCTTYP)=1
"RTN","IVMPREC8",334,0)
 Q
"RTN","IVMPREC8",335,0)
 ;
"RTN","IVMPREC8",336,0)
ZEM ; - compare ZEM with DHCP
"RTN","IVMPREC8",337,0)
 S IVMADFLG=0
"RTN","IVMPREC8",338,0)
 S IVMPIECE=$E(IVMXREF,4,7)
"RTN","IVMPREC8",339,0)
 S IVMSEG=$$CLEARF^IVMPRECA(IVMSEG,HLFS)
"RTN","IVMPREC8",340,0)
 Q:$P(IVMSEG,HLFS,2)'=$S($E(IVMXREF,$L(IVMXREF))="S":2,1:1)
"RTN","IVMPREC8",341,0)
 I $P(IVMSEG,HLFS,$E(IVMPIECE,1,2))]"" D
"RTN","IVMPREC8",342,0)
 .;
"RTN","IVMPREC8",343,0)
 .; - set var IVMFLD to incoming HL7 field
"RTN","IVMPREC8",344,0)
 .I 'IVMADFLG S IVMFLD=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2))
"RTN","IVMPREC8",345,0)
 .;
"RTN","IVMPREC8",346,0)
 .; - ZEM06 as the ZEM addr containing 5 pieces seperated by HLECH (~)
"RTN","IVMPREC8",347,0)
 .I IVMXREF["ZEM06" D
"RTN","IVMPREC8",348,0)
 ..S IVMADDR=$P(IVMSEG,HLFS,$E(IVMPIECE,1,2)),IVMPIECE=$E(IVMPIECE,3)
"RTN","IVMPREC8",349,0)
 ..S IVMFLD=$P(IVMADDR,$E(HLECH),IVMPIECE)    ;,IVMADFLG=1
"RTN","IVMPREC8",350,0)
 ..I IVMFLD]"",IVMPIECE=4 S IVMFLD=$O(^DIC(5,"C",IVMFLD,0))
"RTN","IVMPREC8",351,0)
 ..I IVMFLD]"",IVMPIECE=5 S X=IVMFLD D ZIPIN^VAFADDR S IVMFLD=$G(X)
"RTN","IVMPREC8",352,0)
 .;
"RTN","IVMPREC8",353,0)
 .; - if HL7 date convert to FM date
"RTN","IVMPREC8",354,0)
 .I IVMXREF["ZEM09" S IVMFLD=$$FMDATE^HLFNC(IVMFLD)
"RTN","IVMPREC8",355,0)
 .;
"RTN","IVMPREC8",356,0)
 .; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",357,0)
 .S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",358,0)
 .;
"RTN","IVMPREC8",359,0)
 .; if field from IVM does not equal DHCP-store for uploading
"RTN","IVMPREC8",360,0)
 .I $E(IVMXREF,1,6)="ZEM062",IVMFLD'=IVMDHCP S ZEMADRUP(IVMXREF)=1 D STORE^IVMPREC9 Q
"RTN","IVMPREC8",361,0)
 .I IVMFLD]"",(IVMFLD'=IVMDHCP) D STORE^IVMPREC9
"RTN","IVMPREC8",362,0)
 Q
"RTN","IVMPREC8",363,0)
 ;
"RTN","IVMPREC8",364,0)
RF1 ; -compare RF1 with DHCP
"RTN","IVMPREC8",365,0)
 S IVMPIECE=$E(IVMXREF,4),IVMADFLG=1,RF1TYPE=$P(IVMSEG,HLFS,3)
"RTN","IVMPREC8",366,0)
 ;Delete the comm data (Email, Cell and Pager) if it is not received in Z05.
"RTN","IVMPREC8",367,0)
 ;Hence, remove it from EPCDEL if Data exist in Z05. Comm. fields contained in EPCDEL will be deleted after updating all incoming data.
"RTN","IVMPREC8",368,0)
 ;IVM*2.0*164-Don't Kill if PHH
"RTN","IVMPREC8",369,0)
 I RF1TYPE'="PHH" K EPCDEL(RF1TYPE)
"RTN","IVMPREC8",370,0)
 ;K EPCDEL(RF1TYPE)
"RTN","IVMPREC8",371,0)
 ;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",372,0)
 I RF1TYPE="SAD",((IVMXREF="RF161")!(IVMXREF="RF162")!(IVMXREF="RF171")) D RF1PROC
"RTN","IVMPREC8",373,0)
 ;IVM*2.0*164-Uncomment Conf and Add Res
"RTN","IVMPREC8",374,0)
 I RF1TYPE="CAD",((IVMXREF="RF161CA")!(IVMXREF="RF162CA")!(IVMXREF="RF171CA")) D RF1PROC
"RTN","IVMPREC8",375,0)
 I RF1TYPE="RAD",((IVMXREF="RF161RA")!(IVMXREF="RF162RA")!(IVMXREF="RF171RA")) D RF1PROC
"RTN","IVMPREC8",376,0)
 ;
"RTN","IVMPREC8",377,0)
 I RF1TYPE="CPH",((IVMXREF="RF161C")!(IVMXREF="RF162C")!(IVMXREF="RF171C")) D RF1PROC
"RTN","IVMPREC8",378,0)
 I RF1TYPE="PNO",((IVMXREF="RF161B")!(IVMXREF="RF162B")!(IVMXREF="RF171B")) D RF1PROC
"RTN","IVMPREC8",379,0)
 I RF1TYPE="EAD",((IVMXREF="RF161E")!(IVMXREF="RF162E")!(IVMXREF="RF171E")) D RF1PROC
"RTN","IVMPREC8",380,0)
 I RF1TYPE="PHH",((IVMXREF="RF161P")!(IVMXREF="RF162P")!(IVMXREF="RF171P")) D RF1PROC     ;Added for IVM*2*152
"RTN","IVMPREC8",381,0)
 ;IVM*2.0*164-LAST RF1 change
"RTN","IVMPREC8",382,0)
 ;I '$$RF1CHK^IVMPREC6(IVMRTN,IVMDA),IVMXREF="RF171P" D
"RTN","IVMPREC8",383,0)
 I '$$RF1CHK^IVMPREC6(IVMRTN,IVMDA),IVMXREF="RF171RA" D  ;Last RF1
"RTN","IVMPREC8",384,0)
 . I $$AUTOEPC^IVMPREC9(DFN,.UPDEPC)
"RTN","IVMPREC8",385,0)
 . N NOUPDT,NOPHUP S (NOUPDT,NOPHUP)=0   ;Added for IVM*2*152
"RTN","IVMPREC8",386,0)
 . I 'UPDEPC("SAD") S NOUPDT=1
"RTN","IVMPREC8",387,0)
 . ;Set the NOPHUP flag = 1 if Home Ph Change Dt/Tm not more recent, or
"RTN","IVMPREC8",388,0)
 . ;if Home Ph Change Dt/Tm more recent, but ph the same
"RTN","IVMPREC8",389,0)
 . ;IVM*2*152
"RTN","IVMPREC8",390,0)
 . ;IVM*2.0*167-Make Home ph auto-upload
"RTN","IVMPREC8",391,0)
 . ;Always keep NOPHUP = 0 so Home ph data is not handled here    
"RTN","IVMPREC8",392,0)
 . ;I 'UPDEPC("PHH") S NOPHUP=1
"RTN","IVMPREC8",393,0)
 . ;I UPDEPC("PHH"),'$G(UPPHN) S NOPHUP=1
"RTN","IVMPREC8",394,0)
 . K UPPHN
"RTN","IVMPREC8",395,0)
 . I $$AUTOADDR^IVMLDEM6(DFN,1,NOUPDT,NOPHUP)
"RTN","IVMPREC8",396,0)
 Q
"RTN","IVMPREC8",397,0)
 ;
"RTN","IVMPREC8",398,0)
RF1PROC ;
"RTN","IVMPREC8",399,0)
 N IVMEPC
"RTN","IVMPREC8",400,0)
 I $P(IVMSEG,HLFS,IVMPIECE)]"" D
"RTN","IVMPREC8",401,0)
 .;if RF1 field is SEQ6, then parse subcomponents
"RTN","IVMPREC8",402,0)
 .I IVMXREF["RF16" D  Q
"RTN","IVMPREC8",403,0)
 ..;- get data containing 4 pieces seperated by HLECH (~)
"RTN","IVMPREC8",404,0)
 ..S IVMRFDAT=$P(IVMSEG,HLFS,6)
"RTN","IVMPREC8",405,0)
 ..S IVMPIECE=$E(IVMXREF,5),IVMFLD=$P(IVMRFDAT,"~",IVMPIECE)
"RTN","IVMPREC8",406,0)
 ..;KUM-164-SET IVMEPC TO NONBLANK 
"RTN","IVMPREC8",407,0)
 ..;S IVMEPC=$E(IVMXREF,6)
"RTN","IVMPREC8",408,0)
 ..S IVMEPC=""
"RTN","IVMPREC8",409,0)
 ..I (IVMXREF="RF162E")!(IVMXREF="RF162C")!(IVMXREF="RF162B")!(IVMXREF="RF162P") S IVMEPC="2"
"RTN","IVMPREC8",410,0)
 ..;Convert Change Source for Address, Email, Cell and Pager
"RTN","IVMPREC8",411,0)
 ..I IVMPIECE=2 S IVMFLD=$S(IVMEPC'="":$$EPCSRCC(IVMFLD),1:$$ADDRCNV(IVMFLD))
"RTN","IVMPREC8",412,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",413,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",414,0)
 .I IVMXREF["RF17" D  Q
"RTN","IVMPREC8",415,0)
 ..;get address/telecomm change date/tm field
"RTN","IVMPREC8",416,0)
 ..S IVMFLD=$$FMDATE^HLFNC($P(IVMSEG,HLFS,7))
"RTN","IVMPREC8",417,0)
 ..Q:IVMFLD=""
"RTN","IVMPREC8",418,0)
 ..;
"RTN","IVMPREC8",419,0)
 ..;IVM*2*171 - If RF1 type is PHH,home ph is null in PID (IVMPHDFG)
"RTN","IVMPREC8",420,0)
 ..;and RESIDENCE NUMBER CHANGE DT/TM in Patient rec exists then SET EPCDEL(PHH) for ph num 
"RTN","IVMPREC8",421,0)
 ..;deletion IF incoming num change dt/tm is greater than the change dt/tm in Patient rec
"RTN","IVMPREC8",422,0)
 ..;Check if PID13 home ph is null
"RTN","IVMPREC8",423,0)
 ..S:$P($G(TELECOM("PRN")),"~",1)="" IVMPHDFG=1
"RTN","IVMPREC8",424,0)
 ..I RF1TYPE="PHH",+IVMPHDFG,+$$GET1^DIQ(2,DFN_",",.1321,"I") D
"RTN","IVMPREC8",425,0)
 ...S:+$$GET1^DIQ(2,DFN_",",.1321,"I")<IVMFLD EPCDEL("PHH")=".131^.1321^.1322^.1323"
"RTN","IVMPREC8",426,0)
 ..D STORE^IVMPREC9
"RTN","IVMPREC8",427,0)
 ..;
"RTN","IVMPREC8",428,0)
 ..;164-Uncomment Conf and Add Res
"RTN","IVMPREC8",429,0)
 ..I RF1TYPE="CAD",$P($G(ADDRESS("CA")),HLFS)]"" D  Q
"RTN","IVMPREC8",430,0)
 ...; - execute code on the 1 node and get DHCP field
"RTN","IVMPREC8",431,0)
 ...S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",432,0)
 ...I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("CA")=1
"RTN","IVMPREC8",433,0)
 ..;
"RTN","IVMPREC8",434,0)
 ..I RF1TYPE="RAD",$P($G(ADDRESS("R")),HLFS)]"" D  Q
"RTN","IVMPREC8",435,0)
 ...S IVMDHCP="" X:$D(^IVM(301.92,+IVMDEMDA,1)) ^(1) S IVMDHCP=Y
"RTN","IVMPREC8",436,0)
 ...I IVMFLD]"",(IVMFLD>IVMDHCP) S UPDAUPG("RA")=1
"RTN","IVMPREC8",437,0)
 ..;
"RTN","IVMPREC8",438,0)
 ..; check for auto-upload
"RTN","IVMPREC8",439,0)
 ..S IVMDHCP=$S(RF1TYPE="SAD":$P($G(^DPT(DFN,.11)),HLFS,13),RF1TYPE="CPH":$P($G(^DPT(DFN,.13)),HLFS,9),RF1TYPE="PNO":$P($G(^DPT(DFN,.13)),HLFS,12),RF1TYPE="EAD":$P($G(^DPT(DFN,.13)),HLFS,6),1:"")
"RTN","IVMPREC8",440,0)
 ..I IVMDHCP="" S IVMDHCP=$S(RF1TYPE="PHH":$P($G(^DPT(DFN,.132)),HLFS,1),RF1TYPE="RAD":$P($G(^DPT(DFN,.115)),HLFS,11),1:"")     ;Added for IVM*2*152
"RTN","IVMPREC8",441,0)
 ..I IVMFLD]"",(IVMFLD>IVMDHCP) D
"RTN","IVMPREC8",442,0)
 ...S UPDEPC(RF1TYPE)=$G(EPCFARY(RF1TYPE))
"RTN","IVMPREC8",443,0)
 ...I RF1TYPE="SAD" S UPDEPC("SAD")=1
"RTN","IVMPREC8",444,0)
 ...; 167-Make Home ph rec auto-upload to Patient
"RTN","IVMPREC8",445,0)
 ...; Keep UPDEPC("PHH") value as Home ph record IENs of #301.92
"RTN","IVMPREC8",446,0)
 ...;I RF1TYPE="PHH" S UPDEPC("PHH")=1 ;IVM*2*152
"RTN","IVMPREC8",447,0)
 Q
"RTN","IVMPREC8",448,0)
ADDRCNV(ADDRSRC) ;convert Addr Source from HL7 to DHCP
"RTN","IVMPREC8",449,0)
 ;
"RTN","IVMPREC8",450,0)
 Q:$G(ADDRSRC)']"" ""
"RTN","IVMPREC8",451,0)
 Q:ADDRSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",452,0)
 Q:ADDRSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",453,0)
 Q:ADDRSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",454,0)
 Q:ADDRSRC="USNCOA" "NCOA"
"RTN","IVMPREC8",455,0)
 Q:ADDRSRC="USVABVA" "BVA"
"RTN","IVMPREC8",456,0)
 Q:ADDRSRC="USVAINS" "VAINS"
"RTN","IVMPREC8",457,0)
 Q:ADDRSRC="USPS" "USPS"
"RTN","IVMPREC8",458,0)
 Q:ADDRSRC="LACS" "LACS"
"RTN","IVMPREC8",459,0)
 Q:ADDRSRC="USVOA" "VOA"
"RTN","IVMPREC8",460,0)
 Q:ADDRSRC="VET360" "VET360"
"RTN","IVMPREC8",461,0)
 Q ""
"RTN","IVMPREC8",462,0)
EPCSRCC(EPCSRC) ;Convert Email, Cell, Pager Change Source from HL7 to DHCP
"RTN","IVMPREC8",463,0)
 ;
"RTN","IVMPREC8",464,0)
 Q:$G(EPCSRC)']"" ""
"RTN","IVMPREC8",465,0)
 Q:EPCSRC="USVAHEC" "HEC"
"RTN","IVMPREC8",466,0)
 Q:EPCSRC="USVAMC" "VAMC"
"RTN","IVMPREC8",467,0)
 Q:EPCSRC="USVAHBSC" "HBSC"
"RTN","IVMPREC8",468,0)
 Q:EPCSRC="USVOA" "VOA"
"RTN","IVMPREC8",469,0)
 Q:EPCSRC="VET360" "VET360"
"RTN","IVMPREC8",470,0)
 Q ""
"RTN","IVMPREC8",471,0)
BAICONV(BAISRC) ;Convert Bad addr source from HL7 to DHCP format
"RTN","IVMPREC8",472,0)
 Q:$G(BAISRC)']"" ""
"RTN","IVMPREC8",473,0)
 Q:BAISRC="VAB1" 1
"RTN","IVMPREC8",474,0)
 Q:BAISRC="VAB2" 2
"RTN","IVMPREC8",475,0)
 Q:BAISRC="VAB3" 3
"RTN","IVMPREC8",476,0)
 Q:BAISRC="VAB4" 4
"RTN","IVMPREC8",477,0)
 Q ""
"RTN","IVMPREC8",478,0)
CONVPH(PH) ;remove special chars/spaces from Ph
"RTN","IVMPREC8",479,0)
 ;*168 Check format, quit if OK else strip and return if not 10 num
"RTN","IVMPREC8",480,0)
 ;Format if 10 numeric.
"RTN","IVMPREC8",481,0)
 Q:PH?1"(".3N.1")".3N.1"-".4N PH
"RTN","IVMPREC8",482,0)
 S PH=$TR(PH," )(/#\-","")
"RTN","IVMPREC8",483,0)
 Q:PH'?10N PH
"RTN","IVMPREC8",484,0)
 Q "("_$E(PH,1,3)_")"_$E(PH,4,6)_"-"_$E(PH,7,10)
"RTN","IVMPREC8",485,0)
 ;
"RTN","IVMPREC8",486,0)
CNTRCONV(COUNTRY) ;Check if valid country
"RTN","IVMPREC8",487,0)
 I COUNTRY="" Q 0
"RTN","IVMPREC8",488,0)
 Q $O(^HL(779.004,"B",COUNTRY,""))
"RTN","IVMPREC8",489,0)
CHKEMAIL(EMAIL) ;Check for Valid Email
"RTN","IVMPREC8",490,0)
 I $G(EMAIL)="" Q 0
"RTN","IVMPREC8",491,0)
 I '(EMAIL?1.E1"@"1.E1"."1.E) Q 0
"RTN","IVMPREC8",492,0)
 Q 1
"VER")
8.0^22.2
**END**
**END**
